shr
mov
add
mov
xor
mov
jmp
call
push
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
cld
xor
addr16
inc
xchg
jmp
shl
mov
jmp
jmp
xchg
mov
sub
or
xor
mov
and
xchg
sub
xchg
mov
mov
andl
xchg
push
xchg
jmp
push
or
add
sub
mov
push
add
or
shr
add
pop
and
sub
sub
shl
dec
test
jne
pop
xor
mov
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
or
xor
and
shl
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
mov
add
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
enter
push
rol
inc
and
xor
or
push
xor
inc
ror
add
sub
xor
mov
or
rol
dec
test
jne
pop
pop
call
jmp
and
sub
shr
mov
jmp
cmpl
addr16
jne
push
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
xchg
jmp
jne
and
mov
jmp
jmp
jmp
push
addr16
jmp
jne
jmp
jmp
jmp
jmp
jmp
addr16
dec
ror
xor
xor
mov
sub
addr16
add
or
sub
sub
mov
mov
cld
andl
addr16
push
nop
jmp
push
nop
nop
pop
push
mov
push
mov
push
addr16
and
xor
and
and
mov
nop
nop
nop
nop
nop
push
xchg
rol
mov
or
dec
xor
mov
jmp
shl
ror
mov
jmp
jmp
xchg
call
cld
mov
xchg
mov
nop
jmp
push
push
pop
push
xchg
jmp
mov
mov
mov
mov
jmp
jmp
jmp
jmp
push
xchg
call
mov
mov
push
pop
mov
mov
mov
nop
jmp
push
cld
push
addr16
xor
mov
mov
mov
jmp
jle
mov
cld
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
call
xchg
mov
mov
mov
mov
mov
addr16
shr
rol
xor
mov
jmp
add
mov
sub
mov
inc
xor
mov
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
or
mov
xor
add
push
rol
sub
mov
or
or
pop
mov
mov
or
xor
mov
dec
test
jne
pop
mov
mov
mov
call
jmp
jmp
push
mov
or
add
mov
or
mov
push
addr16
jmp
add
mov
mov
push
pop
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
or
and
or
mov
mov
push
nop
push
xchg
push
cld
push
xchg
pushl
mov
nop
nop
nop
nop
nop
call
xchg
mov
and
and
add
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
or
jmp
jmp
jmp
jmp
jmp
and
jmp
jmp
jmp
addr16
jmp
pushl
mov
or
push
sub
mov
and
sub
xor
mov
and
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
loopne
jmp
rolb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
add
insb
and
sub
or
shl
mov
sub
xchg
pushl
or
add
and
add
pop
push
push
pop
push
mov
push
push
pop
push
push
pop
add
cld
push
mov
jmp
call
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
decl
mov
inc
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mulb
shlb
and
cld
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
jmp
and
add
or
xor
mov
jmp
mov
mov
or
mov
push
shl
sub
mov
xor
sub
shr
shl
mov
add
add
dec
test
jne
pop
pushl
xor
dec
inc
pop
call
jmp
je
push
addr16
push
shl
or
shr
sub
push
xor
pop
sub
dec
test
jne
pop
push
sub
add
and
or
xor
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
jne
jmp
je
xor
or
mov
mov
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
mov
decl
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
push
addr16
jmp
sub
xchg
add
mov
cmpl
xchg
je
jmp
add
nop
cmpl
nop
jmp
jmp
jmp
jmp
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
out
stc
decl
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
or
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
addr16
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
xchg
pushl
xchg
pushl
xchg
call
nop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
repz
mov
add
add
pushl
or
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
mov
and
sub
add
pop
shr
and
and
add
mov
or
and
shl
mov
jmp
call
cld
and
shl
shr
or
mov
mov
and
or
xor
mov
and
mov
sub
mov
add
cld
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
or
shr
ror
and
pop
cmp
xchg
jmp
jne
add
or
sub
sub
ror
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
addr16
mov
xchg
mov
mov
movl
mov
jmp
push
xchg
push
mov
push
mov
or
pop
add
ror
or
inc
add
dec
test
jne
pop
xor
mov
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
rol
and
mov
and
xor
sub
or
add
pop
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
add
shr
or
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
into
xor
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
mov
mov
mov
call
nop
inc
pop
xor
dec
xor
add
xor
pop
jmp
nop
jmp
jmp
jmp
into
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
xchg
jmp
push
nop
add
xor
xor
mov
call
cld
sub
pop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
pop
add
add
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
adc
sti
xor
pop
inc
rol
xor
rol
pop
shr
xor
pop
add
xor
rol
pop
call
push
pop
jmp
mov
mov
sub
or
and
mov
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
and
xchg
mov
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
jmp
add
mov
add
xchg
add
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
shr
inc
mov
mov
xchg
andl
mov
jmp
pushl
addr16
push
mov
pushl
xchg
push
addr16
call
nop
shr
sub
mov
xor
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
into
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
mov
jmp
jmp
push
cld
push
xchg
inc
sub
mov
add
push
mov
jmp
push
xchg
sub
mov
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
or
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
mov
inc
rol
inc
mov
mov
mov
dec
shl
inc
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
push
add
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
xchg
xor
cld
and
sub
mov
and
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
call
xchg
dec
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
popf
add
add
repnz
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rcl
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
jmp
push
mov
add
inc
xor
rol
shr
mov
call
mov
movl
xchg
push
xchg
pushl
cld
call
cld
add
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
sub
mov
pop
sub
add
and
shl
xor
mov
shl
pop
push
dec
xor
pop
add
xor
xchg
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
aas
out
lret
nop
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
inc
and
pop
jmp
add
addr16
dec
jmp
jmp
jmp
jmp
jmp
jmp
jne
and
or
mov
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
mov
xor
inc
mov
and
cld
cmp
mov
jmp
and
and
inc
shr
mov
mov
add
mov
or
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
xchg
add
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
shlb
or
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
xor
mov
add
or
and
mov
mov
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
xor
add
mov
cmp
xchg
jmp
sbb
testb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
pushl
fisttpll
pop
and
mov
pushl
mov
shl
pop
inc
add
mov
rol
sub
and
add
inc
mov
jmp
sub
and
add
ror
or
mov
push
xchg
call
xchg
jmp
je
incl
cld
dec
add
shr
mov
shr
mov
cmp
addr16
jl
xor
addr16
jmp
nop
nop
nop
nop
nop
dec
sub
shl
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
nop
add
cld
add
add
xor
rol
pop
or
pop
or
shl
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
add
push
pop
add
mov
pushl
mov
mov
pop
inc
mov
inc
addr16
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
std
jmp
add
xchg
mov
xchg
inc
shr
and
ror
and
mov
add
cld
cltd
jmp
jmp
jmp
jmp
jmp
jmp
and
nop
add
xchg
xor
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lahf
add
add
rorb
movb
xchg
movl
nop
jmp
sub
cld
mov
cld
mov
xchg
jmp
movb
xchg
incl
xchg
jmp
and
shr
rol
add
rol
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
incl
cld
xor
xchg
inc
xchg
mov
xor
and
mov
and
mov
inc
mov
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
jne
mov
dec
pop
dec
mov
mov
xchg
add
xchg
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
mov
sub
ror
shl
or
mov
mov
push
pop
sub
push
pop
sub
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
shl
and
shl
mov
ror
add
and
mov
sub
mov
mov
xchg
jmp
shl
sub
xor
or
pop
mov
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
mov
mov
push
pop
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
cmp
incl
xchg
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
xor
inc
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
cmp
fists
xchg
mov
xchg
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
cmp
nop
jmp
push
inc
sub
push
and
and
mov
add
mov
add
xchg
jmp
ja
mov
test
add
add
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
out
decl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrs
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
shl
shl
xor
mov
sub
nop
rol
mov
sub
mov
mov
cld
incl
xchg
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fnstsw
jle
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
rolb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
xchg
jne
jmp
sub
mov
jmp
dec
mov
dec
addr16
jmp
jae
out
test
add
xor
cld
jmp
lret
sub
mov
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
pop
incl
cld
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpsl
add
add
jg
call
xor
or
mov
mov
rol
and
dec
sub
mov
mov
push
pop
call
xchg
mov
xchg
pushl
mov
add
push
and
sub
and
or
dec
inc
or
and
mov
add
mov
shr
inc
sub
and
xor
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
jne
fmuls
testb
mov
jmp
push
inc
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
cmp
xchg
jb
inc
nop
cmp
mov
jb
inc
xchg
cmp
push
pop
nop
nop
nop
nop
nop
jae
inc
cld
inc
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
xor
or
mov
xor
and
add
mov
sub
cld
mov
xchg
jmp
dec
xor
add
orl
xchg
ror
mov
jmp
incl
mov
dec
cld
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
insb
imul
add
jl
add
add
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
call
xchg
push
xchg
call
xchg
shr
add
mov
mov
xchg
jmp
repz
jne
mov
addr16
xor
xchg
inc
cld
jmp
and
or
shl
mov
xor
inc
mov
mov
mov
cld
incl
cld
jmp
mov
push
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
add
dec
mov
add
xchg
sub
cld
jmp
sub
or
inc
xor
mov
mov
sub
xchg
jmp
cmp
incl
nop
mov
xchg
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ror
add
add
add
mov
and
nop
jmp
ffree
inc
xor
addr16
cmpl
cld
je
mov
or
sub
mov
ror
dec
add
pop
sub
push
pop
ror
pop
shr
sub
xor
mov
sub
dec
add
rol
pop
jmp
mov
fbld
sti
add
xchg
jne
and
xchg
add
mov
add
mov
jmp
ret
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
pop
pushl
add
dec
add
rol
or
pop
nop
nop
nop
nop
nop
inc
push
pop
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
inc
add
cmpl
xchg
jne
call
xchg
mov
push
pop
nop
nop
nop
nop
nop
mov
addr16
mov
cld
jmp
pushl
and
push
and
ror
add
xor
rol
add
or
and
and
add
sub
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
or
push
pop
push
xchg
mov
sub
or
xor
mov
nop
nop
nop
nop
nop
call
xchg
push
mov
mov
xchg
call
cld
mov
push
pop
nop
nop
nop
nop
nop
or
xor
mov
sub
mov
or
add
ror
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
pushl
xor
inc
inc
xor
pop
add
xchg
jmp
xor
mov
rol
dec
mov
nop
nop
nop
nop
nop
add
nop
push
push
pop
call
xchg
cmp
mov
nop
nop
nop
nop
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
inc
and
add
and
mov
pushl
shl
sub
sub
pop
nop
nop
nop
nop
nop
add
mov
add
mov
add
mov
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
nop
nop
nop
nop
nop
pushl
ror
sub
pop
add
xchg
add
xchg
push
mov
pushl
xchg
call
xchg
nop
nop
nop
nop
nop
mov
xchg
add
nop
nop
nop
nop
nop
nop
add
xchg
sub
ror
or
sub
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
add
xchg
nop
nop
nop
nop
nop
cmpl
xchg
jne
call
cld
mov
addr16
shl
mov
dec
mov
mov
mov
shl
sub
add
mov
or
pop
nop
nop
nop
nop
nop
and
or
mov
sub
and
pop
shl
mov
pop
nop
nop
nop
nop
nop
mov
xchg
cmp
nop
jne
pushl
add
mov
and
xor
pop
nop
nop
nop
nop
nop
add
mov
mov
cld
dec
mov
mov
add
push
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
fistpll
jb
bound
sbbl
xor
and
in
mov
or
push
clc
imul
mov
push
pop
sbb
pop
dec
hlt
lret
mov
or
scas
jl
or
push
pushf
add
and
cmp
fistl
jge
lods
dec
ret
jns
stc
jne
cwtl
into
cmp
loope
mov
and
mov
sub
hlt
stos
and
pop
push
je
mov
cmp
dec
push
pushf
cwtl
mov
inc
push
aam
imul
dec
sahf
popa
inc
enter
lret
cltd
cmpsb
cli
or
outsb
and
mov
mov
push
test
jg
sub
les
sbbb
cld
push
enter
and
aas
cmc
mov
dec
jb
js
mov
lea
dec
adc
sbb
adc
mov
jb
push
enter
mov
cmc
movsb
out
inc
fdivp
mov
gs
sub
icebp
sbb
jl
das
xchg
outsb
cli
mov
dec
push
addb
mov
jmp
in
test
subb
mov
mov
mov
and
notl
lret
pop
push
das
orb
cltd
sub
mov
outsb
push
sahf
leave
mov
rclb
dec
jns
jmp
hlt
iret
bound
or
insl
jb
dec
adc
inc
sbb
out
add
lahf
mov
ret
jp
mov
popa
lods
shl
fcoml
adc
push
jmp
clc
cwtl
adc
sub
outsb
adc
call
fs
repnz
mov
ja
and
or
jp
push
dec
mov
push
ja
mov
pop
loope
ja
cs
cmp
add
loop
cld
stos
pop
push
arpl
mov
cmp
cmp
or
pop
or
popf
mov
push
out
pop
or
ret
add
rolb
rcrl
loopne
sar
ss
inc
je
fmull
cli
sbb
pop
ret
and
sub
inc
test
sub
xor
jle
push
xchg
mov
dec
stos
adc
push
cs
out
cmc
test
cwtl
in
jne
mov
push
mov
jmp
ret
shll
int
mov
lods
jmp
sahf
lea
and
and
adc
imul
std
add
adc
sti
je
sub
cmp
movsb
pusha
mov
daa
inc
inc
sbb
mov
mov
cmp
jge
mov
stos
mov
int
movsb
int3
adc
lock
jmp
nop
sar
rcr
xchg
mov
mov
icebp
ds
push
inc
and
sbb
or
add
sub
mull
xorl
iret
mov
bsf
clc
jo
out
xor
mov
xor
dec
das
mov
test
fnstenv
popa
test
movsb
aam
inc
loop
pop
fwait
nop
mov
stos
sbb
dec
jne
lahf
lods
or
insb
pop
pop
push
test
pop
mov
mov
inc
shlb
gs
out
pop
jl
les
fidivs
or
jmp
mov
les
out
cli
xchg
or
sbb
outsl
xchg
add
stos
cmp
test
call
or
jmp
lods
jno
call
nop
cmp
test
fsubrs
sarb
xor
mov
add
fsts
push
fisubl
push
idivb
psraw
stos
cmpsb
jns
lahf
jae
lret
inc
subl
or
lahf
psrlq
sahf
jle
repnz
icebp
lret
cmpl
movsl
mov
js
lea
out
add
xchg
orl
shll
inc
pop
xchg
mov
sub
cmc
mov
shr
leave
loop
pop
shlb
lret
sahf
leave
jbe
mov
dec
pop
movsb
rcl
orb
fstpt
mov
push
cmpsb
cmc
outsl
fstl
jne
stc
rcrl
arpl
int3
pusha
pop
mov
dec
ds
les
inc
jb
push
aaa
cmp
outsb
pop
aam
into
mov
add
adc
popf
adc
sbb
insl
cmp
jmp
mov
sahf
and
adcl
sub
mov
push
ljmp
test
cmp
cmpsb
imul
jl
ljmp
add
daa
sbb
pop
xchg
jnp
sbb
faddl
and
xchg
mov
pushl
adcl
push
or
and
cld
and
pushf
xor
add
je
push
or
push
inc
add
movsbl
mov
fwait
loopne
inc
fnstsw
imul
cmp
lret
lock
popf
xorl
divl
sub
jmp
jg
test
cmp
jp
std
adc
or
xor
stos
fnsave
jb
shrl
inc
cmp
fstp
push
xchg
mov
pop
xor
cmp
test
call
or
repz
inc
lcall
cmp
mov
add
jb
std
or
mov
fidivrs
sub
cmp
adc
mov
arpl
mov
scas
or
cwtl
add
stos
fisubs
dec
mov
scas
xor
adc
xor
inc
and
add
outsb
lods
shrl
xchg
sbb
lret
jl
mov
jo
shrb
cmc
movsb
sbb
push
xchg
push
cwtl
adc
pop
imul
not
loope
cmp
push
dec
mov
je
xchg
int
pop
stos
out
pushf
les
adc
popf
inc
sti
popf
cmpb
jg
add
shrl
cmc
test
shl
mov
mov
sub
inc
ds
movsb
ret
sbb
ss
loopne
into
jecxz
push
adc
xlat
adc
adc
mov
add
nop
int
dec
repnz
jl
sbb
into
das
clc
add
pop
xchg
dec
sbb
fadds
lea
test
mov
dec
jmp
pop
mov
sbb
int3
add
cmp
xor
push
pop
lock
mov
ljmp
mov
cmp
mov
pushf
adcl
xchg
mov
pop
jg
mov
jae
jp
mov
or
fnstenv
dec
orb
shll
lock
adc
int3
int
sti
test
out
aaa
jb
mov
dec
ficompl
rep
xchg
repz
pop
insl
ret
jl
lret
in
pop
outsl
lods
out
add
cmpb
out
lcall
les
or
xchg
int3
jno
fcoms
lods
push
add
popw
mov
xor
sti
mov
cmp
mov
lret
jle
or
push
adc
imul
inc
add
sbb
fimuls
scas
das
cwtl
cmp
push
mov
lret
sahf
les
xchg
sbb
mov
inc
cmpsb
in
adc
int3
call
xor
inc
fdecstp
cmp
sbb
cmp
mov
jae
pop
hlt
jl
clc
nop
xor
xchg
push
xor
xor
dec
pop
mov
mov
imul
movsb
callw
shrb
or
nop
xchg
dec
jne
hlt
addl
mov
or
enter
inc
xchg
loopne
xchg
aas
mov
cmp
jg
cmp
sbb
sbb
mov
or
cmp
inc
cmp
and
mov
out
test
loope
and
and
mov
mov
leave
dec
jo
insl
loope
mov
jo
pop
mov
repz
pop
adc
pop
pop
pop
int3
mov
mov
jnp
nop
cmp
lahf
lods
test
jnp
mov
mov
hlt
xchg
lock
mov
lods
xchg
dec
adc
sbb
movsl
decb
xchg
push
mov
fisttpll
jb
pop
in
in
cmovne
or
gs
sahf
push
add
add
push
sub
adc
int
sbb
pop
arpl
out
rol
xor
xchg
pop
push
pop
test
aaa
iret
mov
inc
mov
outsl
cmpsl
jnp
andl
inc
push
in
roll
push
xor
sbb
sbb
lods
sbb
and
push
pop
dec
mov
not
scas
in
add
fadds
je
mov
addr16
mov
xchg
subl
pop
and
pop
xchg
jnp
aad
xchg
icebp
cmp
gs
xor
sbb
jl
in
push
bound
negl
pop
repz
test
das
push
xchg
insl
xchg
movsl
into
incb
mov
iret
xorb
sbb
mov
xchg
jp
dec
push
stos
int3
mov
mov
rcr
loop
fwait
adc
ljmp
notb
jnp
xchg
nop
in
pop
cld
das
xor
cli
push
loope
nop
xchg
inc
cwtl
in
lock
mov
imul
in
inc
clc
push
rcrl
or
add
outsb
and
push
mov
daa
fidivrl
bound
insb
push
pushf
jmp
cmp
mov
shrb
sarb
pop
dec
push
insb
mov
scas
xchg
sti
mov
jle
insb
sbb
fwait
call
push
and
or
adc
or
and
and
dec
mov
add
cmp
lods
repnz
sbb
in
mov
dec
push
loop
mov
shrb
enter
xchg
cli
movsl
out
pop
lock
arpl
pop
xchg
popf
pop
imul
fdivr
push
nop
fiaddl
adc
and
dec
xchg
xchg
lods
imul
adc
mov
daa
sbb
pop
es
inc
xlat
cwtl
test
push
repnz
cltd
dec
xor
mov
dec
mov
push
pop
lods
mov
xor
int3
scas
outsl
scas
adc
jns
sbb
mov
mov
int3
or
pusha
dec
es
ficoml
loopne
pop
push
push
popa
scas
jmp
push
inc
dec
inc
sti
aas
pop
cmpl
add
mov
pop
cli
xor
and
je
jmp
lret
sbb
add
and
es
mov
hlt
adc
pop
frstor
add
test
dec
jo
enter
push
das
mov
ds
cmp
shll
mov
movsb
test
pop
out
jecxz
mov
cmpsb
inc
stos
leave
movsl
push
call
lea
mov
xchg
mov
aas
jle
xor
lea
ds
out
add
mov
mov
je
test
scas
scas
inc
dec
adc
pop
push
in
mov
int3
inc
push
lret
out
sbbl
dec
inc
or
add
aaa
sarl
inc
arpl
call
jmp
mov
mov
jo
shll
les
push
cmp
adc
out
jo
pop
mov
inc
jns
sbbb
stos
add
push
rclb
mov
pop
lock
mov
mov
mov
push
leave
pop
mov
inc
sbb
orl
xchg
add
hlt
lret
in
leave
lea
push
jle
mov
ss
sar
jmp
push
imul
push
mull
rcl
repz
and
mov
adc
fs
ss
cs
std
cmpsl
stc
repnz
xchg
into
mov
xor
and
stos
hlt
mov
je
ja
jmp
lret
enter
data16
jns
repz
cmpsb
add
lcall
xor
pop
fnstenv
je
scas
sbb
xchg
popa
mov
cs
aad
inc
push
sub
mov
xchg
adc
aaa
or
imul
and
and
rclb
and
je
fldln2
hlt
cmp
sub
xor
mov
mov
jl
jbe
mov
hlt
mov
jns
cmp
push
mov
mov
repz
push
orb
lods
xor
lds
mov
or
lock
hlt
or
sbb
jg
xchg
mov
test
sub
es
ret
mov
jo
add
mov
rcr
sti
sbb
sbb
dec
pop
clc
into
insl
sarl
test
mov
out
jo
fildll
mov
inc
pop
fists
mov
imul
inc
cltd
mov
xor
daa
ljmp
mov
xchg
enter
imulb
pop
jmp
negb
roll
dec
xor
out
mov
and
cwtl
jae
cmp
cmp
mov
pop
push
orl
and
rolb
addr16
les
inc
pop
mov
cmp
or
mov
push
imul
popa
ja
pushf
repz
sti
cmp
xor
pop
loop
fs
cltd
sbb
pop
xorb
xchg
scas
insl
test
dec
fistl
xor
mov
pop
bound
ja
imul
add
int3
scas
addb
inc
rclb
jl
call
push
fldenv
mov
pushf
xchg
sti
sub
lret
arpl
push
mov
data16
out
mov
cmpb
rol
mov
and
stos
mov
cli
xchg
test
dec
lret
cld
rclb
lcall
jecxz
adc
or
femms
inc
out
mov
scas
push
aaa
or
mov
and
cld
ja
pop
and
loop
scas
test
or
and
arpl
xchg
data16
pop
lock
fsubp
sbb
or
sbb
loopne
sbb
sub
push
fistl
lock
pushf
or
jb
or
push
ljmp
ss
push
xchg
std
hlt
cmpsl
mov
insl
lods
ljmp
mov
xchg
xchg
imul
imul
push
pop
pop
stos
mov
dec
jecxz
sbb
arpl
sbb
cltd
mov
bnd
enter
pop
scas
pop
out
dec
sbb
push
push
pusha
aad
rcrl
mov
push
test
lock
mov
mov
out
xchg
and
cmp
shll
imul
xor
dec
dec
xchg
mov
sub
adc
jbe
mov
stc
ret
daa
xor
ss
dec
jg
in
dec
mov
ret
ror
xor
and
and
imul
inc
iret
sarl
xchg
adc
ja
adc
inc
movsl
mov
lods
lods
aaa
cld
sbb
inc
jb
cld
jns
inc
fistl
xor
sub
sbb
xor
test
shlb
aaa
cwtl
pop
or
add
cs
lea
mov
mov
jo
xchg
daa
push
test
and
lcall
pusha
pop
pop
mov
sarb
add
xchg
lret
pop
cltd
pop
das
dec
sbb
inc
push
jno
xchg
lret
icebp
dec
dec
xor
std
dec
aam
add
test
xor
ds
into
out
in
bound
nop
cmp
add
and
out
daa
sub
int3
addr16
push
pop
cmp
add
sbb
mov
push
iret
cld
push
xchg
aaa
or
ja
cmp
mov
mov
not
cli
push
repz
aaa
pop
push
adc
cwtl
cli
adc
decb
push
mov
mov
fdivp
push
jne
mov
ljmp
lods
sbb
daa
shl
pop
lret
ss
xchg
popf
shl
push
hlt
xchg
adc
mov
xor
pop
icebp
icebp
ret
shl
cmp
mov
bswap
push
xchg
nop
push
roll
pop
pop
xor
lea
adc
aas
lods
xchg
bound
sahf
out
rol
jb
int3
cmp
mov
scas
sbb
push
xchg
push
xchg
jp
hlt
xor
imul
push
push
test
mov
jns
imul
outsb
loopne
shll
mov
pop
xor
mov
mov
jl
fcomps
movsb
sub
push
aad
stos
jl
repnz
and
lret
ret
dec
out
dec
inc
and
aaa
cmpsb
push
lret
jp
cs
cmpsl
pop
int
jecxz
jmp
nop
mov
enter
ret
arpl
xorb
scas
mov
call
pop
cmp
subl
jns
data16
mov
adc
movsb
mov
ret
inc
iret
add
enter
test
popf
stos
jns
sbb
dec
or
cmp
xchg
xchg
sub
push
push
sub
in
jns
inc
rcrl
pop
mov
sub
push
inc
jmp
mov
add
inc
xchg
stos
xchg
popf
daa
and
in
out
cmp
jb
dec
les
add
push
or
dec
xor
pop
aaa
ljmp
jno
mov
aaa
mov
or
fisubrs
mov
les
add
xor
imul
add
fwait
loopne
loope
int
or
jmp
movsb
or
fsts
nop
or
push
fisubs
or
jo
leave
sub
shlb
sbb
inc
test
push
adc
push
sbb
or
lcall
mov
mov
stc
jl
jnp
mov
rolb
dec
and
inc
inc
mov
mov
jmp
inc
xchg
popf
outsb
pop
or
push
pop
je
dec
popa
jp
jl
lcall
mov
jg
mov
pusha
xor
push
mov
sbb
xchg
sbb
cmp
jle
aam
into
rcrl
lods
mov
pop
mov
fnsave
push
int3
pop
inc
repnz
pop
out
stos
lods
sbb
sub
mov
pushf
jp
mov
mov
add
rorb
mov
pop
dec
cltd
sub
fsubrl
jg
lret
push
dec
fsubl
cmp
js
pop
cmp
sbb
in
dec
xchg
or
gs
fisubrl
inc
jno
loopne
flds
cs
shll
ss
hlt
push
push
mov
popa
ds
dec
add
jge
push
out
mov
stos
imul
idiv
fdivrl
jbe
and
inc
jo
inc
mov
mov
add
xchg
push
dec
xchg
bsr
sbb
jmp
gs
jno
xor
xor
insl
inc
in
call
call
adc
inc
push
push
and
push
push
sub
fidivrs
popa
cmp
fcmovu
aas
mov
jg
push
pop
mov
jbe
push
add
add
or
pushf
push
popa
loop
insb
mull
fdivl
mov
mov
add
bound
mov
inc
lcall
int
ss
xchg
xor
inc
je
lahf
jae
push
clc
inc
sbb
je
adc
enter
inc
jno
and
cmp
hlt
cmp
aam
pop
pop
sub
es
sub
jbe
imul
call
xchg
insw
not
pusha
add
mov
and
push
mov
cli
cmp
or
jg
mov
pop
mov
push
dec
popa
aad
mov
jle
cmp
aas
push
mov
into
or
js
sbbb
movsb
or
inc
outsb
subb
sahf
cmc
xchg
pop
xchg
xchg
loope
ja
pop
jbe
mov
loop
jecxz
jecxz
xchg
ret
outsl
les
mov
cmp
jge
xchg
fimull
mov
inc
push
dec
ret
jecxz
adc
lret
stc
aad
mov
repnz
sbb
out
adc
ljmp
xchg
jbe
adc
call
imul
addb
andb
or
shr
jo
dec
adc
push
hlt
sub
jae
xchg
jle
xchg
pop
fcomi
stc
jb,pn
push
jae
fistpl
rol
xchg
cltd
repnz
lcall
mov
pop
push
adc
dec
lea
xchg
mov
mov
push
xrelease
push
in
mov
dec
mov
adc
loop
pusha
fnstcw
sub
ret
jl
into
test
pop
and
bound
pop
adc
mov
xor
outsl
sbb
roll
psrld
outsl
shlb
lret
push
outsl
sub
jmp
lds
sbb
pushf
pop
mov
mov
inc
icebp
push
into
mov
xor
add
in
push
lea
mov
into
lods
jae
std
ds
mov
bound
in
out
mov
ja
mov
jge
jl
insb
clc
fcmovnu
mov
imul
fcompl
jae
jmp
jle
adc
fwait
arpl
dec
jmp
aas
mov
add
ss
sub
sahf
add
movsl
xor
inc
sbb
jp
xchg
sbb
push
mov
mov
push
xor
add
int3
pop
mov
cmpsl
jle
pop
dec
push
adc
call
pop
mov
out
jg
jmp
jbe
imul
inc
mov
into
scas
loope
aas
add
jl
cmp
test
nop
jae
push
sbb
imul
sbb
fdivr
movsb
arpl
ja
or
ja
adc
gs
pop
popf
shrl
test
lock
test
out
and
movsl
clc
push
stc
sub
adc
sub
insb
cmpsl
rolb
mov
push
and
adc
daa
mov
sub
mov
sub
jbe
mov
adc
out
aad
or
in
push
adc
adc
insl
or
add
gs
fxch
push
scas
xor
pop
and
xlat
pusha
or
in
mov
pusha
sbb
sub
inc
sub
icebp
adc
jl
imul
sub
icebp
daa
sbb
leave
sbb
je
sbb
mov
mov
test
in
out
shl
inc
lds
inc
arpl
cmp
adc
jno
int
lea
mov
or
repz
mov
fstp
std
dec
xchg
sub
inc
mov
iret
repnz
jle
daa
sbb
sbb
sub
loop
mov
les
jns
lock
sub
sbb
jmp
pop
ret
inc
in
inc
xor
jns
dec
lret
in
sbb
add
xor
je
add
jge
decl
add
pop
xchg
xor
popa
ljmp
push
add
jns
push
outsb
jo
or
mov
mov
call
insl
push
bound
js
xor
fwait
pop
std
fisubs
ja
sub
lret
out
add
dec
in
push
aas
ret
push
nop
push
sbb
sbb
sub
mov
imulb
mov
pop
int3
add
clc
sub
nop
out
enter
shr
or
aaa
outsl
insb
in
push
cwtl
inc
mov
xor
loopne
stc
aam
shlb
cltd
cmp
sbb
push
mov
mov
hlt
cmp
out
mov
push
jae
cltd
outsl
jno
fldcw
or
jl
pop
movsl
xchg
adc
das
lock
sbb
mov
push
cli
add
imulb
jne
cs
mov
lret
and
shl
mov
mov
jle
adc
xor
outsb
orl
add
push
add
add
cs
and
mov
sub
dec
pop
sarl
mov
pushf
adc
mov
cmp
lret
add
nop
jge
inc
popf
psubsw
cltd
sbb
sbb
sbb
out
outsl
in
jns
andb
gs
mov
stos
mov
or
push
inc
cmpsl
or
mov
pop
cmc
inc
outsb
add
push
testl
xchg
shrl
cmp
aad
dec
inc
mov
loope
mov
mov
popf
fdiv
repnz
cs
push
lods
stos
inc
inc
loop
push
divl
pop
mov
rclb
adc
in
pop
sub
sub
or
in
clc
les
clc
mov
sub
dec
je
cmpsl
sbb
mov
pop
fs
dec
xor
fwait
inc
add
shlb
movsb
add
mov
or
cwtl
adc
pop
cmpsb
jmp
repz
dec
or
aad
pop
sub
jp
add
subb
aam
and
aad
js
xchg
test
aad
sbb
mov
jmp
or
jl
aas
push
push
cltd
sbb
aas
jle
rclb
push
shl
sbb
in
outsb
cmp
cli
push
or
lock
in
data16
call
inc
pop
mov
ret
fistps
pop
mov
sub
das
lock
dec
mov
insb
movsl
and
cli
sti
addr16
jae
aaa
mov
fdivrl
and
xchg
jecxz
and
sub
scas
movsb
fst
in
mov
sbb
xchg
push
shl
mov
pusha
add
popf
data16
movb
loop
cmp
sub
mov
fdivrl
pop
es
xor
mov
icebp
scas
adc
dec
fwait
test
scas
ja
lock
adc
movsl
ficoms
mov
or
jno
fs
aas
stos
inc
cmp
xor
imul
mov
inc
bound
repnz
push
fisttpll
jo
das
sbb
rolb
int3
pop
xorb
mov
andb
xor
pusha
and
and
les
jns
cltd
fs
ret
or
sbb
into
addr16
pop
push
int3
out
stos
jg
push
mov
and
pop
push
mov
js
fsts
cmp
add
insl
pop
dec
sarl
pushf
mov
add
mov
and
push
cmp
lahf
jecxz
dec
lahf
jp
jo
pop
and
mov
add
add
test
lcall
nop
pop
jmp
sub
sti
xchg
clc
call
mov
mov
adc
les
jb
scas
icebp
mov
inc
jp
lods
push
jo
stos
aad
lods
jle
lret
push
jge
into
jo
add
call
push
or
pop
add
lret
pusha
pop
int
sarl
mov
push
mov
das
xor
aam
mov
in
lret
out
cmpsb
loopne
popa
aaa
ret
dec
jns
or
daa
add
movsl
aad
mov
jmp
xchg
movsb
pop
pop
mov
jecxz
push
out
adc
adc
xor
mov
jmp
add
testb
outsb
adc
jmp
dec
aas
decb
xchg
imul
aas
pop
push
das
push
push
xor
xchg
cltd
xlat
xor
cli
cmp
inc
push
inc
mov
pushf
clc
push
je
shlb
mov
stc
imul
fistpll
and
or
add
jne
aam
inc
clc
and
mov
jg
adc
mov
notb
inc
mov
cmpsb
les
ds
sub
add
xchg
iret
pop
scas
in
pop
or
jmp
out
rolb
loopne
pop
ficomps
adc
dec
mov
xor
mov
adc
in
xchg
sti
fmull
jge
mov
icebp
test
and
out
add
inc
stos
push
scas
cmp
xlat
call
fs
jmp
mov
ret
sti
adc
push
sahf
bound
and
inc
add
inc
aam
div
pop
lahf
jge
inc
pop
xchg
dec
jbe
fidivrs
imul
data16
mov
arpl
push
in
add
stos
mov
mov
jecxz
adc
mov
jbe,pt
ret
mov
xchg
lods
jge
std
jg
adc
dec
fwait
fs
ljmp
mov
dec
dec
sar
xor
pop
sti
cmp
cmp
jo
repnz
popa
call
push
jo
rcrb
mov
push
pop
movsl
sbb
cltd
arpl
call
fcmovb
fprem1
shrb
cmp
jne
jne
push
in
fisttpll
rclb
sub
fnstenv
inc
cmpl
mov
repz
mov
sbb
inc
fistpll
xchg
cmp
adc
sbb
pop
pop
inc
mov
pop
cmc
mov
scas
push
xchg
fstpl
shll
mov
add
mov
sbb
dec
aam
dec
aad
mov
sbb
pop
mov
pop
in
div
push
das
test
cli
lcall
sub
faddl
mov
rcrb
fsubr
sbb
fcoml
fiadds
inc
jge
into
jmp
sub
lcall
adc
push
or
fistl
stos
push
or
into
mov
inc
imul
jmp
cwtl
nop
in
add
test
lcall
cmpsb
and
jg
adc
gs
and
es
shl
pop
aaa
sub
inc
dec
and
imul
and
out
cmp
mov
sbb
mov
repnz
into
cmpsb
stos
ret
lret
shlb
rcrl
inc
and
cmp
iret
mov
fmull
cmp
daa
imul
push
and
shrb
push
push
out
rcll
jns
pop
bound
and
imul
inc
outsb
lahf
mov
sub
insb
sub
pop
add
xchg
lock
xor
std
stos
or
jno
lds
out
sbb
loop
shll
cwtl
jo
pop
loopne
loope
push
movsl
xchg
mov
mov
xchg
std
decb
sub
out
push
ja
fisttpll
cld
sbb
sbb
mov
arpl
or
daa
add
icebp
imul
das
and
shrl
add
xor
dec
std
xor
stc
add
pusha
add
jne
std
daa
sti
sub
jge
and
cli
repnz
aam
mov
lret
outsl
push
mov
jge
dec
enter
pop
mov
jg
ficoms
push
adc
sbb
sub
sbb
sbb
movsl
or
out
movsl
ror
out
adc
js
or
decb
cs
or
aam
fimull
inc
dec
sbb
jmp
adc
ret
inc
dec
adc
movsl
jle
and
ja
or
jno
fidivl
jnp
test
push
mov
test
lret
ja
jbe
sub
call
out
add
int
sub
aas
mov
xor
shrb
mov
loope
addr16
mov
rclb
stos
lods
sbb
mov
daa
test
ret
loopne
pop
jno
adc
pop
push
pop
test
mov
xchg
xchg
push
push
mov
jbe
mov
loop
jbe
pop
and
out
das
test
dec
add
or
xlat
mov
cwtl
mov
push
loopne
int3
stos
inc
out
dec
and
or
mov
repnz
xchg
test
cltd
out
push
shrl
pop
pop
push
movsl
cmc
flds
mul
inc
dec
nop
sub
cmp
mov
ret
mov
or
and
popa
adc
push
inc
lret
daa
out
test
popa
stos
inc
mov
call
xor
addl
dec
or
xor
xor
pop
lahf
lea
lods
xchg
add
and
add
sub
stc
jbe
push
dec
xchg
cmpsl
mov
popf
lea
and
mov
xor
pushf
add
hlt
jle
xchg
dec
cwtl
push
mov
ret
das
push
les
mov
popf
pop
mov
pop
or
xor
lds
mov
push
jmp
scas
decb
or
xor
dec
sub
pop
mov
test
pop
mov
jg
out
mov
sub
cmp
push
pop
scas
push
cwtl
mov
stos
add
and
loop
lea
je
adc
icebp
sub
popf
and
push
mov
dec
cwtl
push
lret
outsl
mov
popf
xchg
repnz
jg
jo
xchg
repz
mov
insl
pop
xorb
push
inc
sbb
scas
lods
push
and
data16
push
insl
pop
and
xchg
imul
adc
clc
stc
xor
mov
daa
aaa
xchg
nop
add
sub
mov
or
dec
jno
leave
pop
rcr
dec
xchg
push
cld
scas
or
popf
jg
xchg
dec
jecxz
jb
movsl
pop
lds
int3
and
mov
lods
movsb
not
mov
inc
ja
test
shll
inc
and
incb
sub
sbb
inc
push
push
repz
adc
hlt
pop
scas
jp
push
jp
push
xor
shrb
bound
or
sub
jb
stos
stc
add
push
imul
push
inc
pop
daa
push
dec
lcall
hlt
fcoms
jno
leave
mov
jns
pop
jg
cmc
push
cmc
pop
and
ljmp
clc
and
orl
push
push
pop
push
lods
push
jmp
addr16
daa
leave
fildl
scas
and
shlb
enter
out
fnstsw
dec
ret
movsl
lahf
ret
fdivrl
push
mov
sub
push
mov
or
push
sbb
movsl
inc
mov
jmp
int
mov
push
in
xchg
dec
frstor
mov
pusha
inc
cmp
push
daa
out
ljmp
or
sub
ret
cmp
mov
call
mov
loopne
and
or
adc
out
mov
ret
ja
hlt
nop
sub
shll
mov
sbb
loop
aaa
clc
jecxz
add
mov
in
testb
fidivrl
scas
cmpsb
dec
cmp
ja
mov
mov
jle
xchg
sti
movsb
ja
mov
cmpsb
sbbl
pop
sti
dec
jge
push
sub
ret
insl
in
hlt
leave
push
movups
test
mov
shl
bound
imul
sbb
xor
stc
cmp
scas
and
fidivrs
js
push
cmp
test
ja
aas
cwtl
mov
xchg
popa
adc
mov
adc
sbb
jmp
nop
das
xor
lret
xchg
cld
unpckhps
sbb
test
sahf
lds
sbb
outsl
stc
jnp
movsb
xchg
or
pop
in
xor
fwait
out
dec
pushf
lahf
and
mov
insl
imul
push
xchg
mov
fistl
aaa
mov
and
sub
sbb
aad
js
or
cmp
fnstcw
js
push
in
fiadds
adc
sub
pop
add
movsl
aaa
call
pop
adc
stc
insb
inc
mov
jle
je
mov
cmpb
enter
xor
clc
jne
mov
test
cld
das
sub
test
push
nop
jno
inc
ljmp
inc
mov
paddusb
test
sbb
jp
outsb
fsts
ret
mov
cmpsl
xor
in
aam
lcall
add
mov
leave
data16
fcmovne
dec
sub
jno
iret
add
or
push
sub
cli
pop
jmp
fcomp
test
push
std
jmp
and
cmpsl
mov
jo
jne
pop
pop
icebp
mov
andb
adc
xchg
lret
jns
jecxz
out
mov
pop
adc
xor
pop
lret
loope
and
out
je
fwait
outsl
adc
aas
outsb
xor
orl
in
or
sub
mov
call
movsl
cmp
mov
daa
es
pop
enter
ss
cli
xchg
cmp
arpl
push
addr16
jp
adc
js
push
xlat
add
or
mov
cwtl
adc
outsb
add
fcoml
daa
sub
lret
sub
cmp
mov
arpl
dec
xchg
in
jecxz
int
aaa
xor
je
aam
lcall
loopne
inc
out
loop
xor
imul
inc
sbb
scas
lret
inc
dec
push
pop
repnz
mov
hlt
fisttpll
test
nop
scas
adc
shll
mov
jmp
sbb
dec
test
sub
xchg
call
adc
icebp
outsb
mov
popa
sahf
or
sbb
popa
scas
push
scas
fcmovbe
fmull
mov
mov
mov
cmpl
dec
push
jnp
loopne
sub
push
sbb
out
addl
add
jle
push
mov
push
stos
dec
sbb
pcmpeqb
pop
sub
mov
mov
mov
add
iret
jno
push
rorl
lock
cmp
inc
int
ror
aad
cmp
inc
dec
popf
arpl
xor
and
jle
push
dec
mov
into
pop
pop
pop
push
mov
les
sbb
sub
xchg
pop
clc
sbb
scas
push
jge
imul
inc
orl
stos
das
add
fstps
inc
sub
pop
ss
sub
sub
mov
cld
adc
lret
jae
cs
imul
cmp
into
out
or
cmp
lods
pop
gs
fidivrl
push
and
adc
inc
lret
sbb
mov
inc
sbb
popa
add
mov
test
ja
push
data16
std
imul
jno
ljmp
fwait
jle
mov
jbe
inc
jns
out
test
in
insb
xor
lret
adc
xor
sub
xchg
mov
xchg
fnstcw
mov
jno
xchg
das
dec
mov
loop
push
push
divl
test
out
mov
fcmovnb
and
mov
lods
sbb
dec
mov
insb
jl
jg
and
push
mov
aaa
test
or
ret
movsb
push
repnz
movsb
dec
fisttpl
cmp
test
or
dec
xadd
or
sub
outsb
pop
jp
roll
dec
mov
popa
jne
or
lret
push
and
pop
push
test
cmpsl
mov
stos
inc
cmp
lcall
dec
test
mov
idivb
push
stos
je
dec
subl
cmp
rorl
pop
cli
mov
or
cmpb
adc
xor
repnz
add
dec
mov
lock
loop
adc
movsl
cmc
fwait
push
mov
or
aaa
sub
xchg
call
punpcklbw
lret
movsl
das
pusha
pop
movsl
sbb
and
nop
jmp
jnp
dec
insb
loopne
mov
inc
ficompl
mul
loopne
ljmp
into
decb
push
or
pop
mov
jmp
jno
fildl
je
xor
out
dec
xor
pop
xchg
imul
xchg
cmpsl
adc
inc
pop
sbb
int
adc
ror
shll
test
nop
jmp
test
fwait
fwait
xor
in
and
xchg
cmc
imul
sub
xor
pop
cmp
jb
xor
dec
jmp
add
and
adc
adc
push
cmc
sbb
fstpt
add
sub
test
sbb
lods
cltd
loopne
leave
add
jo
dec
and
aad
lds
push
push
orl
clc
adcl
jp
fildl
push
dec
dec
lods
mov
ljmp
inc
les
and
cmp
and
mov
mov
in
push
and
mov
cwtl
sbb
in
jne
mov
push
sahf
jg
add
mov
movsl
dec
add
mov
out
daa
das
jnp
pop
cs
cld
pop
ficoms
push
mov
js
mov
adc
pop
or
lret
rolb
out
or
mov
push
shlb
repz
jg
js
insl
aaa
ljmp
xor
cwtl
out
sbb
push
shlb
adc
cld
stc
test
movsl
mov
and
outsb
call
xor
test
imul
lods
sarl
repnz
repnz
out
cmc
cli
fnstcw
addr16
insl
mov
mull
jmp
hlt
mov
push
jle
sahf
stos
or
aas
xorb
divl
xchg
popa
mov
xchg
mov
cmp
lea
mov
fs
mov
sbb
fildll
aad
aad
mov
subb
jns
sub
rolb
nop
add
dec
xor
popa
or
stc
aad
mov
xor
sub
outsb
push
inc
roll
lea
sbb
in
mov
push
loopne
popf
fs
les
push
mov
and
or
push
xor
sbb
movsl
loopne
cmpsl
lods
cmp
pop
mov
imul
outsb
add
inc
push
inc
add
push
lea
lcall
pop
dec
test
fisubl
jno
or
jnp
call
xor
xor
dec
call
or
push
ss
fcmovu
outsl
les
ja
inc
mov
xchg
push
dec
ss
sarl
mov
push
push
cli
inc
inc
or
add
xchg
cld
dec
mov
cli
ja
out
inc
or
and
call
xchg
dec
aad
cmpb
xchg
enter
mov
fisubl
push
leave
or
es
and
mov
icebp
fldl
movsb
popa
mov
test
mov
sbb
jg
jmp
sub
into
mov
add
nop
mov
xchg
xor
and
and
jp
out
idivl
test
inc
in
push
stos
and
jno
or
mov
enter
mov
add
push
push
and
cmp
test
subb
dec
inc
adc
mov
lods
mov
sahf
hlt
pop
es
test
pop
sahf
jle
dec
mov
popa
pop
decb
mov
cmp
test
rol
outsb
les
scas
nop
xchg
cmc
pop
pop
push
aaa
popa
dec
sub
ret
ljmp
mov
and
aas
loope
mov
mov
cmpsl
push
or
fmul
into
mov
mov
repz
jg
jp
cwtl
pop
xchg
jecxz
pushf
negb
jle
inc
inc
and
dec
enter
lods
mov
xor
fistpl
shll
jno
repnz
icebp
pop
push
bound
popa
lods
pop
mov
mov
pop
pop
aam
lret
push
mov
cmp
xchg
push
stos
sub
pusha
push
mov
stc
popa
and
cmp
les
fdivs
inc
hlt
inc
iret
jb
xchg
mov
in
ret
into
insb
test
sbb
femms
mov
imul
and
jecxz
addr16
dec
mov
xchg
mov
adc
adc
xchg
push
scas
ds
ljmp
cmp
xor
push
outsl
loop
punpckhdq
lret
fldt
jp
inc
ret
or
mov
push
xor
stc
pop
lods
add
xchg
sbb
cmpb
scas
pop
mov
fiadds
and
xor
sbb
jne
iret
push
sub
mul
std
rcll
rcrb
jae
lret
cmp
test
cmp
in
sub
stc
sub
jbe
mov
icebp
stos
or
pop
and
dec
inc
jmp
pop
mov
mov
inc
dec
sarl
std
cltd
es
jae
mov
loopne
or
out
imul
push
sbb
shrb
pop
je
xor
xchg
sub
popf
addb
xchg
inc
push
fnstcw
add
cmp
hlt
in
push
push
iret
fisubrs
in
xchg
std
sti
xchg
sub
and
movzbl
jo
in
lods
cmc
xchg
mov
pop
add
lret
lock
hlt
cmp
fstp
jecxz
inc
inc
dec
sbbl
mov
stc
pop
inc
les
into
pop
cld
xor
mov
pusha
sub
jb
push
inc
mov
pop
decl
cmc
aaa
and
fsubl
pop
outsl
pop
jbe
data16
mov
insl
insb
inc
xchg
cltd
add
imul
lods
and
jge
subb
clc
js
scas
shlb
push
loope
arpl
mov
cltd
je
in
push
and
fcom
mov
cmc
xorl
inc
ss
jns
cmp
das
les
dec
jg
xor
mov
inc
gs
test
jns
cltd
xchg
std
ljmp
mov
iret
jg
jnp
jns
stc
data16
out
inc
sbb
and
jns
icebp
and
mov
push
adc
arpl
loop
cmp
mov
fcoml
and
cwtl
push
or
or
ljmp
dec
jle
stc
pusha
xor
mov
sbb
sti
mov
mov
rclb
mov
adc
sub
mov
push
adc
lds
or
andl
rcl
aad
ja
adc
add
xchg
mov
cmp
mov
enter
aam
add
xchg
sbb
popa
daa
rol
mov
enter
les
mov
mov
and
bound
add
imulb
or
cltd
pop
sti
inc
fsubs
sub
in
lea
add
ret
adc
ret
pop
stos
jge
add
push
icebp
inc
pushf
shlb
test
push
mov
xor
repz
sbb
sub
dec
or
sbb
mov
lds
mov
xor
loope
pop
xlat
call
icebp
icebp
int
ljmp
sub
push
mov
xor
mov
ret
ljmp
inc
movsl
sahf
cmpsl
rcll
shr
fldl
call
mov
aam
mov
ret
stc
cmp
leave
or
push
mov
in
pop
ret
xor
clc
pop
in
xor
insb
je
xchg
sbb
stc
fstpt
js
cld
lcall
sahf
aam
mov
movsb
rorb
neg
xlat
mov
ret
mov
shlb
mov
orb
in
pop
adc
mov
movsl
adc
push
outsl
popa
pusha
mov
xchg
jae
ja
jge
xor
iret
lret
movsl
and
xor
lahf
mov
jne
xrelease
cltd
addl
xor
xchg
je
xor
push
rclb
pop
nop
push
out
mov
lret
push
loopne
pusha
push
clc
cli
data16
cmc
cli
cmp
hlt
dec
and
cli
jo
mov
push
cwtl
or
imul
xchg
xchg
ss
lcall
pop
addr16
outsb
mul
push
neg
test
aaa
mov
aas
mov
stos
sub
loop
or
and
stos
add
cltd
add
insl
ret
icebp
loop
icebp
mov
inc
jmp
rcrl
mov
inc
out
and
mov
mov
mov
fwait
mov
or
out
xlat
testb
jnp
fwait
cmpsl
setle
cmp
adc
sarl
int3
xchg
jp
addr16
in
addr16
sbbl
imul
mov
inc
das
pop
orb
jecxz
iret
lock
clc
mov
in
in
cwtl
or
ds
nop
and
inc
sub
cmp
cs
in
into
adc
in
dec
das
sbb
add
pop
cmp
push
mov
ss
xor
mov
icebp
lea
cwtl
push
fisubrl
and
push
daa
inc
push
out
ds
mov
mov
lcall
xchg
pop
dec
negb
gs
mov
or
cltd
repz
shll
mov
push
jno
je
fsubl
repz
cmp
outsb
jl
flds
mov
test
mov
aaa
rcrl
or
pop
xchg
adc
push
jecxz
xor
add
mov
sbb
and
inc
push
cltd
das
test
dec
mov
fwait
ljmp
jns
mov
dec
jmp
sbb
ficoms
pop
fnsave
insb
mov
fdivl
test
cmpsb
les
dec
pop
cld
push
jecxz
mov
sarl
sub
lods
nop
xchg
xchg
mov
ja
shll
xor
repz
mov
dec
sbb
pop
ja
cmp
inc
mov
in
adc
imul
cmp
pop
xlat
push
push
loop
mov
mov
add
and
push
arpl
movb
adc
sbb
daa
sti
or
and
sbb
cmpb
or
testl
jmp
pop
fimuls
sub
lahf
dec
outsb
gs
dec
enter
mov
test
adc
fisttpll
xor
jmp
add
inc
ret
lds
jns
lock
jnp
enter
adc
mov
imul
popa
out
jl
mov
int3
cltd
cmc
mov
jbe
fbld
push
js
mov
sbb
adc
cltd
das
push
cmp
mov
push
ror
out
cmpb
sub
jl
iret
pushf
in
cmp
jmp
std
sub
mov
xchg
cmp
aaa
test
shlb
push
sub
les
jbe
test
adc
int
scas
arpl
sbb
insl
aaa
dec
incl
pop
stos
and
adc
insb
aad
imul
das
lods
cmp
mov
pusha
test
out
jg
enter
sbb
sti
insb
fistpl
test
mov
dec
les
pop
gs
pop
fwait
xchg
pop
jns
jb
dec
xor
dec
jg
lods
out
stos
dec
data16
cld
scas
sub
shll
loopne
scas
inc
dec
out
dec
sbbb
out
cld
push
leave
dec
das
mov
mov
dec
ret
inc
push
lret
andb
push
stos
test
outsl
fcmovnu
cmp
pop
inc
das
lds
ret
ret
stos
test
sub
xchg
sbb
icebp
pop
scas
mov
inc
outsl
in
or
scas
scas
sbb
mov
enter
and
loopne
push
movsb
imul
add
sub
xor
mov
fadd
adc
ljmp
in
mov
mov
xor
lods
gs
mov
sbb
in
pop
jno
cmp
loopne
addr16
subl
stc
and
int
imul
push
in
lret
in
xor
mov
or
ljmp
mov
imul
rcl
sarb
fcmovb
xchg
mov
or
pop
jns
bound
rorl
xor
fbld
jno
shlb
xor
idivl
clc
testl
iret
jmp
xor
loopne
xor
mov
and
lock
lret
arpl
mov
mov
xor
pop
shlb
mov
or
mov
imul
sub
jg
pop
dec
lcall
dec
sbb
push
mov
ja
xor
add
mov
add
and
es
out
xchg
scas
jl
pop
push
cmpb
fbstp
cli
push
pop
test
outsl
in
leave
push
stos
test
dec
insb
fcomps
sti
lcall
in
sbb
leave
dec
xchg
mov
pushf
loope
sahf
or
mov
les
insl
fisttpll
jbe
jge
outsl
je
cli
inc
fsubl
sub
mov
jp
mov
sbb
mull
cltd
mov
push
testl
inc
ja
sub
adc
stc
mov
int3
push
mov
lahf
jno
lds
xlat
imul
arpl
jle
loop
xchg
ss
jg
popa
fidivs
loopne
xchg
xchg
es
in
mov
mov
aaa
fucomp
adc
lock
fld1
mov
pop
out
add
stc
jns
shlb
add
imul
movsl
and
cmp
popa
or
add
push
cli
sub
inc
fidivl
pushw
inc
push
popl
in
mov
jnp
and
fimuls
lret
mov
ficompl
mov
xor
mov
and
fidivs
mov
and
int
or
in
shll
out
ds
mov
hlt
and
mov
cs
jl
rcr
jbe
mov
fldcw
jmp
pop
xchg
loopne
jecxz
out
fldcw
mov
xor
pushf
movsb
sbb
ret
jp
cmp
mov
pop
cmp
dec
adc
add
call
in
mov
xor
mov
test
mov
adc
lock
dec
push
sahf
bswap
pop
push
fsubl
or
dec
cmpsl
xchg
es
xchg
loope
pop
jmp
test
aas
pop
stos
mov
cmp
orl
mov
pop
cmp
pop
cmp
xorb
mov
in
or
jge
jbe
dec
dec
inc
ss
in
in
sbb
cs
ffree
push
mov
xlat
sub
jo
sbb
pop
xchg
xchg
aas
sbb
mov
mov
add
or
in
cmpsl
js
out
aad
outsb
cmpsb
lcall
fldl
insb
in
inc
and
jge
in
in
jb
xor
aaa
aam
int
mov
and
push
in
xlat
orb
inc
inc
je
test
push
mov
dec
stos
or
rorl
out
shrb
cwtl
mov
pop
mov
cltd
lods
push
mov
mov
js
jns
xchg
enter
mov
cwtl
mov
push
and
jne
inc
dec
cld
push
lock
adcb
or
mov
pop
sub
mov
pop
loopne
rcll
mov
dec
es
xor
mov
push
cmp
outsl
push
adc
inc
jecxz
scas
fcom
and
andl
mov
icebp
dec
rorb
mov
stc
subl
addr16
loop
pop
sub
jbe
mov
jbe
pop
ret
cmp
mov
pusha
and
in
fmulp
jbe
jnp
lock
push
out
shlb
popa
cmp
sub
popf
mov
inc
inc
mov
adc
mov
mov
dec
clc
test
xchg
mov
sarb
cmp
lahf
loopne
push
or
add
dec
inc
jg
xor
jge
pusha
fdivr
mov
pusha
in
mov
ret
test
adc
outsl
outsl
push
sarl
cmp
jne
cmc
push
fsub
repnz
call
popa
jg
and
xchg
jl
dec
andb
scas
cmp
int
imul
lock
in
lret
adc
sar
icebp
xchg
hlt
xchg
lcall
into
shr
push
out
lods
popa
xor
nop
mov
dec
sbb
stos
into
imul
clc
nop
mov
das
cmpsl
adc
outsl
stos
mov
pop
scas
pop
ret
orb
mov
inc
fldcw
hlt
xor
movsl
and
lahf
adc
out
pop
outsb
scas
fisttpl
pop
mull
enter
movsl
or
pop
stos
fsubrl
sub
loop
mov
jns
and
out
ds
fldl
cmp
pop
dec
push
dec
cmp
fmuls
data16
or
sti
faddl
lea
push
inc
and
stos
in
sbbb
jnp
lcall
test
test
mov
mov
out
cli
xchg
and
mov
push
pop
cmp
sbb
and
cmp
push
jle
jne,pt
pusha
insb
fsubrs
push
jg
push
mov
add
sub
in
xchg
mov
outsb
das
xchg
or
icebp
sbb
scas
jnp
cmpsl
xor
insl
pop
test
push
or
fstpl
cmp
cmpsl
mov
mov
popf
popa
iret
test
pop
leave
movl
or
xchg
inc
inc
sub
inc
pusha
icebp
fisttps
fiadds
pop
int
addb
cmpsb
push
add
adc
mov
and
rorb
sti
and
popa
cmp
mov
jle
push
loop
mov
shrl
iret
pop
mov
movsl
ret
xlat
addr16
fistpll
cld
push
xor
push
dec
ret
pop
insl
and
jp
fs
pop
nop
dec
push
and
cmpb
inc
adcb
ljmp
sbb
pusha
sbb
jae
jb
adc
mov
jno
inc
sub
sbb
les
sub
aad
and
mov
and
xchg
sub
or
jmp
rclb
mov
call
push
iret
add
arpl
mov
mov
jbe
jae
xor
mov
sti
and
sahf
inc
lret
sub
pop
xchg
mov
pushf
dec
pop
and
loope
xorb
dec
push
dec
testb
shlb
rcll
jl
mov
dec
movsb
cli
xchg
outsb
push
cmp
adc
lea
or
pushf
insb
or
mov
lahf
test
aas
xlat
loope
int
mov
dec
add
enter
call
mov
add
sub
mov
mov
test
repz
into
scas
xchg
rcr
lods
ds
push
cltd
imulb
test
cmp
jmp
mov
push
and
xchg
sbb
inc
pusha
imul
adc
xor
cli
js
jbe
adc
je
imul
or
xor
push
sub
mov
repz
mov
cld
and
cmp
xchg
iret
ret
and
lret
cltd
in
dec
mov
sbb
subb
adc
mov
mov
and
xchg
or
mov
jne
stc
push
jo
lds
sahf
incb
adc
mov
mov
mov
push
add
push
lret
jnp
lret
cmpsl
sahf
jge
pop
xlat
push
push
stc
movsl
lret
test
fidivrs
in
icebp
sub
and
pop
add
lret
pop
jge
fwait
cmp
int
or
push
sbb
nop
jb
push
cmp
fidivl
pop
xchg
movb
mov
pop
mov
jp
adc
sbb
fstps
mov
push
movsb
mov
sub
ss
icebp
push
pop
lock
cmp
gs
mov
mov
or
cmp
inc
pop
in
adc
jle
sub
sbb
das
shr
test
push
out
jmp
int
out
loop
push
lock
ja
adc
add
cwtl
or
push
xor
pushf
enter
add
mov
push
adc
stc
mov
dec
sti
and
pop
sbb
inc
lock
bound
sti
sub
sbb
cs
sarl
xchg
scas
mov
fiadds
gs
mov
in
faddp
sbb
ret
push
cs
mov
loopne
in
aad
cld
fxtract
fisubrs
outsb
sub
mov
jp
out
sbb
popa
and
mov
fsubr
mov
in
add
lods
stos
mov
into
cmp
shl
sub
jns
push
or
xor
pushf
and
mov
add
jp
and
insb
cmp
mov
ret
lret
pop
std
lods
js
pop
int3
add
and
int3
leave
ret
dec
xchg
lea
movsb
leave
dec
sub
jne
jmp
insl
sti
cltd
add
push
jmp
xlat
mov
sub
jnp
mov
into
in
fs
cld
mov
imul
xor
push
pop
sub
std
xor
ret
cmp
out
jge
sub
jecxz
sbb
sbb
repz
sbb
dec
je
lret
xor
push
pop
mov
mov
fistps
dec
push
iret
inc
jp
mov
pop
ja
lods
test
faddp
imul
clc
add
cmc
jno
pop
dec
mov
xor
jbe
lcall
push
fnstcw
out
lahf
movsb
inc
dec
xor
mov
sbb
mov
fsubs
fiadds
cmp
add
ds
mov
clc
add
mov
rcrb
xchg
cmp
or
mov
aas
popa
xlat
ficoml
rorb
dec
lods
or
ficompl
pop
mov
rolb
lds
fs
pop
stc
test
sbbl
lahf
xchg
mov
idivb
sahf
rcrb
push
xchg
add
xor
imul
dec
fwait
push
jns
fs
imul
ret
dec
nop
lahf
cmc
outsl
adc
scas
popa
popf
cmp
cli
mov
pop
je
cmp
mov
ljmp
adc
mov
xor
nop
add
adc
js
xchg
int3
pop
or
add
lock
fcomps
out
loop
inc
pop
into
mov
push
cmp
rcrl
pop
sub
dec
js
or
add
test
xor
ret
jae
popa
xor
push
xchg
adc
mov
scas
mov
mov
std
push
loope
adc
pop
loop
inc
adc
lret
enter
aas
out
pop
lods
sahf
incl
std
daa
xor
shlb
in
mov
cld
and
aaa
xor
mov
pop
lahf
repz
pop
repz
and
mov
mov
pop
lods
hlt
sub
dec
dec
jg
pop
sti
ret
xor
mov
push
mov
aas
test
flds
test
int
clc
jne
js
subb
js
test
lret
popf
push
xchg
inc
cwtl
jne
lahf
sub
int
cmp
imul
xchg
add
and
mov
mov
hlt
fs
and
imul
fisubs
aad
rcrl
pop
adc
xchg
dec
je
jecxz
jb
pop
dec
sahf
pop
test
jge
lahf
add
sbb
movsb
aaa
cli
jp
and
sbb
adc
test
mov
repz
iret
cld
out
sub
lock
adc
or
imul
add
sbb
fdivr
mov
ss
iret
or
mov
insl
rol
fwait
cmp
adc
cs
dec
enter
xchg
jbe
pop
pop
pop
and
inc
imul
xor
mov
aam
dec
mov
lods
mov
out
sub
jne
nop
cmpsl
dec
push
sarb
inc
jno
enter
lcall
mulb
ds
cmpsb
sarb
mov
insb
pop
aaa
cmpsl
add
xor
sbb
aad
add
jecxz
pop
dec
aam
push
xchg
mov
mov
cld
push
scas
or
sub
jnp
neg
test
fstl
xchg
ljmp
popf
test
cltd
mov
mov
into
std
xor
add
push
xor
call
mov
push
push
orb
mov
lea
jne
das
pop
ljmp
dec
daa
mov
fs
mov
mov
lret
or
sbb
mov
addl
pop
test
movsb
jle
out
sbb
dec
mov
cmp
movsb
adc
ret
jno
fmul
inc
xchg
scas
dec
fcomps
imul
sbb
jnp
mov
cld
xchg
int
test
std
or
test
add
jle
aaa
xor
xor
xor
inc
mov
je
adc
mov
jnp
add
sbb
push
jg
dec
in
xor
test
bound
stos
cmp
enter
and
inc
mov
and
fmull
test
pop
lret
mov
sahf
xchg
pop
jge
pop
fabs
cld
push
and
adc
push
adc
pop
add
into
arpl
hlt
addb
sub
cmp
inc
sub
int3
adc
lods
call
imul
adc
aam
xchg
decl
xchg
push
jl
mov
imulb
push
sti
or
shll
fwait
add
pop
mov
pop
mov
lcall
add
aam
inc
stos
into
sti
add
jecxz
jns
in
mov
addr16
or
pop
movsb
jae
xchg
stc
cmp
mov
push
js
and
fisubrl
dec
xchg
and
out
add
mov
ljmp
lods
pop
in
ds
rol
fcmovbe
xchg
inc
addr16
push
jae
fidivs
pop
sahf
push
dec
dec
and
mov
pop
addr16
stos
inc
das
inc
pushf
shll
cmpsb
or
adcl
fcomi
or
scas
ret
xlat
dec
pop
iret
mov
sbbl
mov
sub
dec
dec
cmp
or
sub
adc
push
outsb
xchg
cwtl
pop
cltd
push
ja
xchg
es
mov
clc
fstpl
gs
addb
test
cmc
push
andb
inc
xor
jb,pn
mov
rorl
sbb
or
mov
rcrb
push
or
xor
dec
addr16
test
inc
repnz
out
loop
movsl
xor
syscall
sbb
out
ja
scas
into
cld
or
ss
sub
inc
sub
nop
pop
add
cmp
pushf
call
bound
xor
push
jae
out
pop
sbb
jb
mov
cmp
push
or
aad
aas
mov
mov
ja,pn
dec
or
push
in
fnstenv
pop
push
jecxz
mov
xchg
and
jge
jb
inc
dec
sti
mov
mov
out
std
ja
shrl
jg
stos
loop
daa
adc
mov
add
sbb
pop
pop
jae
xor
cmp
ja
enter
cmpsb
jg
pusha
mov
and
aam
in
push
aad
cmp
insb
jge
xchg
insb
insl
mov
adc
xchg
push
or
cs
pop
adc
sahf
xor
sbbl
xor
adc
movsl
inc
ficompl
jbe
fsubrs
and
mov
inc
imul
ja
cmp
xlat
mov
jl
inc
lcall
divb
mov
neg
call
dec
mov
xor
daa
loopne
jp
fimull
add
imul
and
sahf
es
inc
out
mov
mov
fidivl
fistpll
rcrl
fcmovu
loop
inc
and
push
scas
popl
dec
les
pop
sahf
mov
das
out
or
and
fsubrl
out
lcall
pop
mov
in
bound
stc
jg
fstps
leave
leave
and
les
ret
lods
out
popf
sub
cld
test
repnz
cwtl
frstor
add
inc
cmp
mov
mov
jnp
mov
inc
jns
add
fwait
mov
stos
mov
inc
cmp
or
cmpsl
xchg
call
pusha
out
fnsave
popa
dec
hlt
or
icebp
loopne
rol
out
int3
cmp
adc
movsb
sbb
jns
or
pop
xchg
into
test
jmp
or
adc
repz
mov
pop
ret
push
push
std
pop
into
enter
sbb
repz
add
addr16
jbe
and
sti
out
xchg
cmp
lcall
or
jp
push
das
inc
mov
ss
and
iret
sarb
ret
stc
xor
add
mov
add
int
arpl
nop
movsl
xor
stos
cmpsb
pushf
mov
and
sti
xor
inc
notl
addr16
pop
mov
pop
xor
and
arpl
stc
and
fstpl
sub
push
pop
test
shll
inc
aas
mov
jmp
frstor
int3
cmp
rorb
inc
loop
test
mov
repnz
mov
push
mov
dec
lods
jno
imul
pop
mov
outsl
sbb
insl
mov
imul
sahf
js
ret
in
cmp
fcmovbe
dec
scas
pop
test
dec
jmp
add
push
jle
xchg
loop
cwtl
scas
sub
inc
jbe
ja
fisttpll
mov
xor
mov
jmp
pop
int3
fdivs
push
mov
sbb
leave
ffreep
jne
cmp
or
sahf
jnp
mov
ja
jnp
cmpsl
dec
in
jnp
iret
pusha
jo
fistl
fs
dec
xchg
inc
jne
cwtl
mov
loopne
and
jge
aad
cmpsb
jecxz
sbb
test
dec
std
ret
add
sub
fwait
jno
pop
and
xor
cmpsb
fs
push
mov
imul
stos
sbb
xchg
out
sbb
inc
xchg
adc
and
rorb
pop
insl
xchg
fdivs
mov
cld
sub
xor
mov
data16
les
xchg
sti
mov
mov
mov
roll
imul
lods
cmc
inc
sub
sti
into
adc
push
xor
lret
data16
mov
pop
sbb
test
cli
jns
outsb
sub
imul
jle
aam
mov
insl
fucom
mov
dec
mov
scas
mov
clc
pop
out
xor
insl
stos
ljmp
xor
adc
sahf
rcrb
jecxz
insb
xchg
xor
outsb
pushf
push
xor
add
push
or
add
mov
rcl
jae
pop
lret
enter
cmp
pop
lret
fucom
pop
push
add
scas
and
dec
clc
outsl
in
insl
imul
xor
jbe
or
nop
sub
push
xchg
arpl
push
int
scas
in
jns
cmp
das
int
pop
mov
inc
hlt
sub
into
and
adc
test
cs
inc
sahf
test
dec
mov
filds
pop
sub
sub
std
lds
push
out
ja
icebp
inc
inc
or
mov
filds
aad
jns
pop
sbb
lea
call
stc
xor
push
adc
lods
pop
popf
xchg
sbb
mov
push
adc
cmp
xor
inc
lret
lock
mov
repz
sti
jne
lock
stc
sbb
inc
call
ds
in
movl
ret
mov
ffree
jg
pop
movsl
cmp
pop
xor
mov
subb
mov
cmpsb
in
pushf
dec
pop
inc
lea
icebp
pop
fdivp
or
inc
lods
inc
imul
popa
adc
mov
mull
stc
mov
push
nop
iret
inc
inc
xor
nop
jne
arpl
inc
dec
xor
aad
aam
movsb
xchg
pop
inc
xchg
xchg
into
rol
push
arpl
or
mov
xchg
jg
mov
pop
int3
fisttps
aaa
fsubrp
push
leave
iret
mul
out
push
push
mov
in
jle
dec
xor
mov
rcrb
into
loopne
jl
mov
xchg
mov
xchg
xor
stc
inc
fs
mov
in
ljmp
push
lods
testl
pop
jne
sub
mov
incb
fsubrs
inc
cmp
push
pop
pop
pushl
xchg
out
add
in
mov
fsub
cmp
stos
and
push
pop
ret
mov
pop
xor
cmpsb
iret
push
ret
je
xlat
inc
pushf
sti
jns
adc
push
mov
leave
pop
sbb
xchg
enter
insb
sbb
mov
xor
adc
push
les
mov
pop
sub
jg
jb
push
xchg
movsl
stc
das
ret
dec
call
sbb
sbb
clc
pop
cmp
outsb
push
ret
adc
rcll
addr16
not
nop
lock
push
xchg
xchg
popf
or
add
scas
add
enter
fstl
and
sti
gs
aas
cli
push
ljmp
or
jl
sbb
pop
add
out
pop
lods
repnz
cmp
adc
incl
call
and
cmpsl
gs
sbb
jp
imul
jp
cmc
jecxz
idivl
cli
mov
xchg
sub
insb
cmp
jl
test
mov
sbb
scas
jg
and
aad
xchg
fbld
popa
imul
xor
stos
int
in
aad
mov
in
xor
and
repnz
stc
int
mov
sahf
cld
xchg
sub
xor
aad
mov
push
test
adc
pop
or
andl
cmpsb
insb
cmc
int3
jns
lcall
test
jae
std
mov
pop
cmp
dec
xor
sarb
or
inc
push
in
adc
lret
push
cmpsb
int3
push
push
lret
jle
cli
and
add
filds
xchg
sbb
mov
xor
sarl
jecxz
sbb
inc
xchg
sbb
and
dec
out
fsts
cmp
loope
jle
fwait
idivb
push
cmc
fiadds
push
mov
stos
outsl
mov
addr16
out
xor
add
xor
cmp
dec
pusha
add
bound
mov
jnp
leave
sbb
leave
dec
xor
pop
les
xchg
dec
dec
mov
mov
inc
pop
push
pop
mov
cltd
mov
xorb
xchg
mov
out
cs
loopne
subl
inc
scas
inc
xchg
and
mov
sub
jae
cmp
into
push
pop
test
lcall
roll
xchg
pop
lea
jae,pn
dec
cld
xchg
dec
pusha
inc
call
lret
add
js
add
lods
sbb
push
mov
test
xor
cmc
dec
add
cltd
nop
push
addr16
cs
lods
daa
repz
jl
out
push
insb
pop
inc
jb
sbb
push
cmp
xchg
push
xor
dec
add
dec
xor
mov
xchg
daa
enter
lcall
mov
push
mov
jmp
cmp
sub
shrb
stc
je
insl
or
das
or
push
std
movsl
cmpsl
jbe
fnstcw
pop
cmp
rclb
cmpsl
aad
shll
inc
mov
lods
out
mov
add
sahf
iret
call
push
ss
inc
iret
decl
bound
cmp
lock
aaa
insl
adc
mov
xor
in
xor
push
add
jnp
cmpsl
loopne
inc
imul
lods
hlt
popf
rol
mov
int3
push
aad
je
inc
inc
js
sbb
test
adc
jle
aad
imul
mov
adc
or
mov
out
testb
adc
cmpb
dec
roll
leave
imul
inc
pop
stos
inc
push
mov
add
cmp
out
mov
jle
enter
add
icebp
roll
es
lock
mov
pushw
scas
mov
aaa
add
push
rorb
cmp
add
test
sbb
test
loopne
cmpsb
push
lock
sbb
gs
xlat
sbb
bound
jbe
cwtl
mov
cmp
lret
mov
rclb
fucom
flds
pop
sbb
dec
fwait
cmc
movsb
mov
xchg
jo
mov
cli
jl
test
cmp
lcall
int3
js
mul
out
fsubr
pop
test
jbe
in
test
xchg
repz
xchg
movsl
dec
pop
outsb
fs
push
and
ja
shl
jp
mov
mov
test
or
push
xor
lods
mov
dec
sub
std
pop
and
sbb
cmp
push
dec
es
cli
adc
stos
dec
ret
fdivr
pop
push
push
pushf
sbb
inc
sti
into
adc
pusha
enter
gs
stc
pop
popa
jge
mov
pop
mov
xlat
jp
cmc
inc
addr16
insl
insb
popa
enter
data16
in
test
mov
add
rcll
ja
ds
cwtl
and
mov
ja
dec
pusha
pop
sub
pop
xchg
dec
xchg
and
ss
fildll
in
jae
inc
aaa
jno
lock
movb
stos
js
mov
and
fidivrs
lret
pusha
xchg
clc
jbe
cmp
es
mov
enter
jmp
cmpsb
xor
bound
xchg
js
push
shll
add
outsl
stos
int
cmp
pop
mov
push
mov
imulb
shrl
lcall
inc
xor
shlb
repz
jae
inc
call
jb
and
mov
adc
push
out
incl
inc
lret
lods
mov
mov
sub
movb
pop
lods
int3
stc
cli
pop
xchg
mov
arpl
icebp
loop
xor
and
dec
sub
fxch
sahf
sub
fadds
ja
das
je
mov
divb
mov
popf
mov
mov
dec
jp
lret
scas
lods
pop
aaa
mov
je
sti
out
mov
iret
mov
cs
imul
push
int
rol
loope
pusha
stc
hlt
imul
push
mov
movsl
inc
test
push
push
xor
mov
ljmp
mov
stos
mov
push
jp
sub
insb
jle
add
pop
push
mov
mov
inc
les
xchg
jmp
ljmp
movsb
inc
xchg
push
and
dec
jb
pop
lds
sahf
fyl2xp1
gs
repnz
mov
jl
pop
sub
ficompl
sbb
fdivrs
addr16
push
jge
in
sbbb
mov
or
insb
stos
mov
mov
cwtl
jmp
out
dec
pusha
jg
xchg
ljmp
jg
aam
lods
mov
loope
or
jb
jno
idivb
sbb
mov
dec
leave
mov
stos
jns
jl
pop
jo
iret
push
out
add
push
in
cmp
outsl
dec
mov
rol
aaa
addl
push
nop
cs
repnz
lock
mov
stc
in
stc
rorb
mov
sbb
shlb
pop
out
jae
mov
xor
enter
iret
ja
jo
xchg
adc
mov
mov
xchg
jge
pop
imul
std
mov
out
cmp
cmc
and
pop
pop
push
xor
repnz
out
fsub
or
push
into
jle
pop
loop
lcall
or
mov
push
insl
adc
push
mov
loop
je
paddb
cmp
call
adc
mov
pop
sub
push
cmp
push
xchg
clc
test
sbb
mov
into
pop
dec
adc
cmpsb
aad
in
test
jle
add
lods
inc
xchg
hlt
lea
cmpsb
out
js
fs
pushf
inc
jl
mov
stos
sahf
dec
push
jnp
out
lock
sbb
jecxz
ret
pop
push
adc
mov
and
insb
outsb
mov
jle
cmp
xor
fists
lcall
jo
xchg
sbb
stc
xchg
orb
push
sub
mov
adc
imul
xlat
push
mov
cli
cld
cli
cmp
and
add
cwtl
ret
les
shrb
pop
loope
es
mov
cmpsb
loopne
fisubrl
fnstsw
lret
jb
addl
xchg
les
dec
or
fcmove
inc
cmp
jae
push
mov
dec
cltd
xchg
adc
sub
jae
sub
repz
sub
inc
jns
push
pop
cmp
sbb
xor
adc
or
test
into
sti
icebp
incl
pop
dec
mov
test
in
loope
pop
into
push
mov
into
and
sti
ss
add
dec
imulb
pushf
mov
ja
jno
adc
dec
mov
pop
jbe
rclb
cmp
jnp
in
mov
push
pop
inc
subl
sub
inc
push
les
into
stc
repnz
mov
int3
push
fcmovu
or
int
or
in
add
test
cmpsl
ret
outsl
push
out
aam
xor
xor
push
mov
inc
popf
mov
or
test
push
mov
sbb
aaa
and
arpl
stc
mov
shrb
mov
lds
in
mov
mov
sub
push
stc
push
ljmp
cmpsb
nop
pop
mov
pop
xchg
and
ds
je
push
push
xor
dec
ret
insl
ja
nop
mov
mov
jle
in
jnp
and
pop
mov
stos
aas
fbld
shl
jp
rcrb
movsb
aaa
adc
cmp
and
lods
mov
scas
in
mov
or
xlat
mov
inc
rcrl
add
mov
aas
jp
xor
arpl
add
pop
jecxz
lds
cmp
popa
pop
cmpsl
fnstsw
subb
out
pop
sub
stos
fdivrp
cltd
xchg
inc
sbb
mov
ja
hlt
aas
sti
pop
xchg
loope
and
pop
ss
rcrb
in
aaa
popa
fs
es
loopne
inc
mov
mov
jns
js
mov
xchg
sahf
dec
xchg
dec
into
cmp
pop
push
movsl
stos
lahf
mov
push
stos
add
std
push
mov
jbe
fs
fcmovnbe
std
push
mov
imul
arpl
mov
rcll
call
mov
mov
jmp
xchg
stc
pop
mov
sub
enter
xchg
icebp
sbb
pop
cmpsl
into
sarl
frstor
add
mov
dec
test
xchg
cltd
dec
sti
popa
push
test
mov
pop
sub
out
cli
fucom
xchg
pop
lcall
adc
pushf
pop
pop
cmpsb
xchg
push
fildll
sbb
sub
push
add
jge
adc
mov
adc
cmp
pop
or
sub
shl
cmp
xchg
sti
cmpsl
stc
lods
push
mov
int
inc
nop
jbe
repz
xchg
push
fisttpl
imull
and
mov
jno
inc
lds
dec
dec
mov
outsl
sar
mov
popa
jbe
pop
div
push
push
imul
imul
xchg
add
je
sbb
adc
mov
shl
iret
sub
lahf
cmp
jnp
inc
fcomi
scas
scas
cmpsb
fs
out
inc
sub
adc
insl
lret
cmp
movsb
mov
mov
or
sub
mov
repnz
fstl
sub
dec
sub
dec
cmp
lret
mov
add
fdivrl
lods
out
inc
pop
lret
test
xchg
test
jp
dec
add
pusha
jnp
sub
nop
cmpsb
jmp
mov
aaa
fistl
xchg
mov
inc
jno
xchg
out
mov
cmp
jnp
cmp
sti
jecxz
std
out
icebp
or
cltd
jbe
cmc
clc
or
mov
pop
sti
sbb
lret
pop
fdivrs
mov
push
call
add
dec
gs
mov
fstpl
dec
das
and
jns
xor
fstpl
lcall
sbb
mov
push
and
cmp
jg
cmpsl
out
mov
dec
fs
test
adc
int
pop
lret
mov
add
es
pop
test
cli
pop
mov
ljmp
es
loopne
lea
out
pop
ss
pusha
js
jbe
jge
out
leave
adc
mov
jl
xor
pop
jbe
daa
fldenv
jns
jecxz
cmpsl
xchg
scas
xor
cmpsb
sti
add
push
call
dec
xor
jmp
rcrb
insb
test
inc
push
inc
sbb
rcl
mov
inc
mov
arpl
mov
xchg
cmp
jnp
mov
xchg
jbe
mov
sub
or
daa
rorb
mov
cmpsl
addr16
rcll
mov
and
xorl
inc
ss
and
sub
stc
pop
jbe
loop
out
fs
pushf
push
inc
push
lods
test
xchg
scas
adc
loope
das
std
lcall
loopne
dec
adc
pop
fimuls
adc
push
or
mov
jecxz
pusha
cld
mov
mov
stc
push
and
jmp
ja
ja
mov
adc
hlt
mov
gs
and
imul
mov
dec
add
pop
into
or
mov
or
inc
in
mov
xor
cs
sub
insb
es
test
dec
adc
and
mul
xor
adc
mov
mov
rcr
lret
movsl
loop
addr16
test
dec
test
fldl
and
or
popf
iret
clc
out
inc
aad
rcll
loop
ja
xchg
jp
subb
clc
xor
and
sub
jns
pop
test
sbb
lea
shrl
imul
xchg
pop
aaa
mov
sub
adc
xchg
outsl
fistl
xor
dec
std
xor
std
cmp
bound
push
mov
out
adc
sbb
movsl
in
sub
jle
scas
loope
mov
jmp
sub
and
pop
pushf
stos
pop
jb
mov
inc
imul
mov
insl
ja
jbe
das
fiaddl
mov
repz
dec
push
cmpl
shll
mov
stos
inc
loop
xchg
ja
dec
sub
cld
ror
dec
sbb
std
mov
repz
int
mov
aaa
iret
dec
into
mov
pop
xor
jg
jmp
rcrb
sub
inc
lcall
faddl
roll
ja
dec
jg
in
sahf
outsb
icebp
mov
jl
xor
add
addr16
or
xor
mov
xchg
enter
cmp
sub
mov
mov
inc
mov
test
xchg
cld
in
repz
push
jecxz,pt
repz
popf
das
fsub
icebp
xor
jbe
xchg
daa
and
idivl
test
fcmovnb
popf
lret
mov
xchg
cwtl
jle
push
sahf
and
out
insl
inc
jns
push
mov
xchg
xchg
mov
xchg
ja
adc
xchg
or
jecxz
add
push
cmp
std
mov
ds
xchg
dec
pop
push
pop
mov
aaa
sti
jmp
or
sbb
push
hlt
lret
mov
movsl
cli
lock
push
icebp
loope
lret
xor
pusha
adc
mov
mov
sbb
loope
xchg
dec
aad
pop
sub
pop
stos
out
push
jmp
or
mov
ret
hlt
adc
inc
scas
adc
push
rcr
and
add
out
fwait
pop
xor
fdivl
or
push
test
cmp
stos
pop
popf
adc
push
cmc
jg
add
cmovs
push
xchg
shlb
mov
cmp
add
popf
xchg
int
aaa
in
xor
mov
insl
xor
sub
and
sub
push
das
push
adc
aam
rorl
jae
les
pop
lods
insb
imul
sbb
add
xor
xor
pop
mov
mov
rcrb
negl
inc
ret
icebp
iret
fsubrs
inc
xchg
leave
mov
sbb
jge
scas
js
notb
leave
mov
dec
xchg
lea
push
cli
subb
roll
xor
mov
jge
jnp
adc
inc
loop
xchg
lret
mov
imul
push
push
int
add
push
out
adc
loope
iret
insl
nop
add
fisttps
or
pop
or
dec
lahf
add
pop
pop
loop
insb
xchg
cmp
inc
sub
jb
mov
mov
mull
pop
andl
sbbb
inc
lret
ffree
mov
test
test
push
jmp
daa
pop
scas
out
pop
test
push
mov
stc
mov
xor
inc
jb
mov
mov
sub
xchg
jb
nop
imul
push
add
divl
mov
movsb
mov
jge
orb
testl
addr16
inc
push
ret
dec
pop
jmp
hlt
dec
fcmovbe
loopne
dec
sub
mov
sbb
enter
sbb
sub
clc
pop
and
stos
jb
push
lock
or
push
xchg
fcoml
and
pop
cmpl
xchg
jg
sbb
iret
lret
mov
jecxz
jno
jae
loopne
adc
mov
push
and
and
insl
or
mov
incl
rorb
pusha
dec
xchg
movsl
jbe
jecxz
stos
jbe
jp
shl
fwait
cmp
lcall
rorl
push
iret
mov
cmp
stos
xchg
sahf
inc
sbb
mov
push
out
mov
movsl
out
pop
cmp
hlt
sbb
arpl
jne
jmp
pop
cld
adc
and
imull
mov
gs
fwait
push
ss
arpl
sub
movsb
cmc
adc
jge
fdivl
jle
repz
jg
adc
lock
xor
ljmp
sub
jbe
loop
and
mov
sbb
lret
repz
and
cli
push
in
rcrl
test
mov
call
add
mov
jno
hlt
das
inc
scas
setnp
int
jecxz
je
cli
add
pop
mov
movsl
cmp
mov
xor
mov
sub
push
inc
out
lcall
dec
pop
dec
jl
mov
pushf
sub
lcall
or
push
scas
xor
lret
jmp
testb
fbld
add
mov
jb
loopne
adc
cli
stos
call
cmpsb
cmpsb
inc
popf
dec
pop
pusha
js
xchg
into
sti
into
jb
sub
push
mov
push
adc
ret
std
loope
sub
dec
inc
xor
fcomps
push
xor
xchg
cltd
repz
out
fadds
lods
pusha
add
out
push
das
mov
dec
dec
xor
enter
jmp
popf
push
mov
notb
xchg
clc
mov
test
dec
scas
mov
mov
mov
xlat
cld
jo
jl
cli
push
fistl
push
incl
xlat
xchg
or
cwtl
cmp
sub
push
and
xchg
add
js
add
mov
add
add
xor
std
lahf
sbb
sub
mov
jl
das
adc
pusha
and
fadds
sub
scas
scas
andb
push
shrl
cli
jno
notb
adc
fildl
out
out
dec
sub
push
and
sub
cmpsl
sub
daa
jnp
mov
pop
gs
dec
or
cmp
or
sbb
mov
filds
in
xchg
cwtl
and
push
mov
mov
cmpl
sub
add
jne
xchg
adc
insb
test
nop
daa
loope
cmpsb
and
lods
enter
cmp
int
lods
pop
jbe
cmp
xchg
push
pusha
xchg
xchg
push
sub
add
xchg
dec
sbb
insl
mov
cmpb
cmc
popf
insl
cmp
jl
dec
popa
cmp
popf
mov
xor
inc
outsb
icebp
fs
pushf
or
cmp
pop
mov
mov
pop
and
jp
test
fsubrl
enter
pop
mov
repz
xchg
pop
push
cmp
jae
add
add
pop
push
mov
outsl
lea
shlb
in
pop
rorl
out
jne
in
inc
ds
mov
pusha
sub
lods
negl
pushf
test
lret
add
jle
xchg
cmp
call
push
cmp
das
inc
test
push
adc
orb
jg
ret
scas
popa
sub
ds
pop
data16
negb
les
leave
aas
out
mov
and
mov
sub
popa
cmp
inc
jecxz
xchg
and
enterw
xchg
fs
xor
adc
in
jb
push
mov
sbb
xor
xchg
mov
aas
cmp
lret
js
dec
shll
fdivr
or
mov
test
mov
loope
jle
adc
lcall
insb
lea
mov
add
cwtl
cmpsl
insb
faddl
inc
xchg
push
jne
movsl
iret
cmpsl
cld
fisubs
lods
rol
mov
pop
jge
mov
ja
rcll
mov
mov
pop
adc
dec
jmp
insl
cmpsb
hlt
sbb
sub
iret
ja
mov
dec
xor
xor
incl
mov
sub
std
ja
or
pusha
mov
lcall
jmp
xor
arpl
sub
std
sbb
pushf
mov
and
or
push
xchg
arpl
push
aaa
inc
nop
sub
and
das
insb
inc
pop
sub
icebp
aaa
aaa
ror
xor
call
cmovnp
cmc
movsl
and
push
pusha
mov
test
lods
jg
fnstenv
mov
leave
mov
mov
fmull
xor
and
cmp
std
scas
rclb
je
mov
and
adc
into
inc
fadds
xchg
test
repz
push
sub
jno
lret
cmpl
ret
lea
mov
xchg
pop
add
ret
inc
repnz
inc
mov
dec
inc
push
shll
add
fabs
cmc
pushf
mov
iret
test
mov
arpl
cmp
and
xor
jp
jmp
mov
mov
lcall
fwait
jle
insl
cwtl
out
bound
es
inc
adc
fstpl
dec
mov
test
or
push
mov
test
add
mov
xor
cmc
mov
jo
stos
outsl
ljmp
test
cmp
cmp
cld
aas
ret
xor
lret
lcall
xor
into
les
xchg
cmpxchg
push
mov
inc
add
sbb
jae
call
jmp
add
jg
jp
ret
jmp
ret
cmc
int
jle
imull
adc
hlt
xchg
cmp
mov
sahf
cmp
les
iret
sahf
daa
in
enter
mov
pop
cmp
jb
movsb
jae
enter
jne
or
lods
or
sub
mov
jb,pn
ja
add
and
mov
loop
xchg
sahf
in
push
loop
fisubl
test
scas
push
enter
test
imul
push
xchg
imul
sti
into
jmp
jae
xchg
jae
ja
xor
and
gs
lods
sub
push
ja
imul
add
xlat
sub
mov
cmovle
les
addr16
dec
inc
mov
mov
mov
xor
sbb
cmp
call
aas
jns
jb
subl
jg
stos
adc
test
adc
lea
mov
dec
mov
incl
push
out
lret
popa
out
lret
mov
mov
cmp
mov
adc
inc
fdivrl
sub
lret
out
int3
push
mov
test
sbb
loopne
dec
nop
jg
cld
pop
lds
sbb
adc
inc
push
push
js
jno
das
sbb
pop
fsubr
sete
pop
stos
cmp
xor
stc
bound
int3
mov
xchg
in
scas
mov
ss
pop
mov
aas
insb
jne
nop
lea
loopne
push
ja
xchg
push
out
cmpsb
in
shlb
add
jl
cmpsb
cli
fsub
jecxz
and
pop
mov
mov
pop
push
cmp
inc
and
cld
push
popa
lods
adc
les
lahf
push
fwait
nop
xor
dec
xor
ret
repz
push
xchg
sub
xchg
imul
mov
sub
and
add
or
mov
outsl
sbb
out
push
sahf
cmp
scas
dec
sub
mov
inc
out
mov
cmpsb
js
repz
xchg
mov
jno
dec
adcl
push
xor
and
inc
mov
xor
bound
int
jb
mov
sub
pusha
rorb
or
shr
mov
in
jle
inc
aas
decl
int
stos
andnps
sarl
cmp
sub
test
daa
push
pop
addr16
insb
addl
and
rol
nop
add
sar
dec
mull
sbb
insl
sti
test
in
pop
shll
out
push
clc
push
aas
push
sub
lods
fimull
imul
add
push
test
push
add
test
and
pop
ljmp
push
xchg
or
inc
cmp
cmp
xchg
xor
lods
bound
cmp
pop
mov
jb
mov
mov
jo
xchg
xchg
shlb
push
repz
pop
xchg
cmc
sbb
or
lods
or
pusha
jge
jp
lret
mov
adc
cmp
fiadds
and
fnsave
std
or
inc
adc
out
xchg
je
adc
push
shl
xchg
fucomi
xor
or
fidivl
sti
dec
or
push
or
addr16
pushf
lea
push
or
clc
rorb
imul
adc
pop
mov
dec
repnz
xchg
inc
or
insb
mov
push
jge
mov
xor
push
cmp
test
in
insb
xlat
push
scas
xor
push
dec
ljmp
mov
in
pop
fs
cs
mov
jbe
or
orb
mov
push
rcrl
or
jg
ljmp
inc
cmpb
pop
inc
pop
cmp
sbb
sub
es
push
repnz
jp
loopne
outsb
xchg
and
shll
adc
imul
cld
bound
pop
cmp
mov
loope
movsb
jo
dec
jb
jo
add
push
inc
sub
cmp
aam
vhsubpd
cmp
addl
mov
ss
das
jo
daa
fucomi
cmp
fwait
nop
fwait
push
inc
mov
insl
pop
pushf
ljmp
cmp
xchg
inc
or
pop
repz
sub
leave
movsl
cmc
mov
jp
cmp
popf
fiaddl
push
mov
lea
icebp
lahf
mov
jge
dec
mov
xchg
es
fisttpll
or
pop
mov
sub
daa
test
and
push
sub
or
pop
out
add
xor
xchg
cwtl
mov
loopne
cmp
xchg
aas
add
mov
in
test
dec
xchg
mov
jmp
out
pushf
outsb
lock
das
lds
xor
jmp
mov
mov
fwait
cmp
mov
inc
js
arpl
sbb
sub
fcoml
outsb
or
push
cmp
ja
mov
jecxz
in
rorb
arpl
repnz
std
pop
scas
xor
repz
pop
shll
or
fcoml
sbb
nop
lock
push
jg
jp
xchg
dec
cmp
int3
mov
sub
lods
adc
jecxz
push
mov
dec
aam
and
out
jp
push
xor
cmp
in
pop
xor
sbb
xor
roll
dec
inc
das
aaa
lret
and
cltd
push
add
add
adc
repnz
mov
or
jbe
popl
ljmp
sbb
lds
out
sub
ja
sub
pop
cmp
daa
mov
mov
xchg
sub
in
inc
rorl
arpl
andl
pop
xchg
dec
aad
push
fiadds
lahf
pop
jbe
add
call
push
jbe
rclb
pushf
push
mov
sti
jmp
insl
jl
dec
pop
mov
mov
ss
xor
scas
cmp
loopne
sbb
jle
inc
out
and
ret
testb
xchg
mov
cmp
stc
sub
xor
fsts
mov
add
inc
dec
inc
fcompl
cld
add
cmp
cwtl
aaa
in
xchg
mov
jge
pusha
or
push
xor
outsl
ret
cld
or
xor
push
insb
xchg
popa
cmp
div
jae
rcll
rep
shr
cmpsb
lret
jnp
add
push
mov
and
mov
push
popf
xor
aas
jb
icebp
movsb
sub
mov
cmp
je
ja
push
stos
imulb
mov
mov
outsb
push
or
xor
fildll
mov
fldenv
testl
sti
leave
ret
aaa
pusha
pop
jnp
pop
std
xchg
push
xlat
enter
push
and
jge
outsb
mov
jl
aam
xor
into
push
bound
push
push
mov
xchg
scas
int
adc
fwait
icebp
mov
xor
sbb
sbb
lds
and
fucom
inc
pop
leave
mov
test
clc
sub
dec
and
xor
mov
cmp
out
hlt
leave
jp
mov
shl
jl
xchg
dec
cmp
jno
xor
fistl
inc
sbb
cmpsb
jmp
dec
sahf
mov
pusha
jmp
xchg
nop
mov
pop
pop
int3
out
mov
sbb
mov
inc
fdiv
dec
stos
addr16
cmp
add
and
aad
mov
sti
mov
iret
mov
int
daa
pushf
cwtl
insb
pop
and
mov
loope
lds
cmp
mov
mov
sub
mov
cmp
lea
xlat
mov
divl
hlt
cli
adc
mov
sbb
mulb
xchg
fsubp
cltd
dec
lea
loop
leave
daa
jmp
stos
inc
fiadds
mov
dec
or
stc
jmp
or
pop
push
mov
fcoml
sub
lahf
cmp
cmpsb
hlt
and
jne
cmp
in
movsb
xor
or
mov
cmp
cs
int
in
cmp
out
mov
mov
mov
ret
ss
sub
out
mov
push
insl
mov
fcoml
jo
mov
and
pop
mov
pop
add
sahf
fsubrp
and
sbb
iret
nop
leave
rorl
ret
push
je
dec
mov
lahf
and
jno,pn
lea
sbb
mov
in
sti
inc
add
cmc
push
ret
ss
xchg
bound
popa
or
or
fsubs
mov
call
jmp
xchg
dec
fsubr
pop
or
add
js
or
vrcpss
cwtl
out
rorl
lea
js
cmp
xor
ljmp
xor
clc
push
sti
imul
jae
push
push
jmp
sub
or
add
aas
xor
jmp
mov
mov
xchg
lods
xchg
xchg
push
add
add
jl
imul
sub
dec
decl
mov
push
dec
cmc
fnop
lret
inc
jl
pop
xor
bound
aam
les
sub
stc
xor
sarb
addr16
cs
adc
fldl
push
mov
push
jge
sbb
sbb
sahf
out
in
dec
enter
scas
stc
mov
repnz
mov
inc
movsl
test
iret
push
stos
data16
cltd
and
fnstsw
es
gs
cmc
adc
inc
into
fucomp
mov
xchg
arpl
sbb
jns
popf
pop
dec
or
or
into
imul
push
add
outsl
aam
icebp
mov
add
imul
call
sbb
xchg
sti
stos
sbb
adc
jg
lret
mov
jl
xchg
outsl
mov
push
fisttpll
imul
and
or
cltd
scas
out
lods
iret
cmp
lahf
sbb
cwtl
push
pop
add
push
sbb
stos
sbb
sub
out
and
or
add
sub
in
lock
cmp
arpl
add
inc
clc
in
ds
test
jmp
data16
into
push
decb
scas
lock
sbb
in
push
inc
insb
aam
mov
jecxz
mov
fmuls
loop
pop
popf
adc
cmp
loopne
add
and
stc
cmp
mov
bound
aas
int3
popf
movsl
nop
add
es
aas
mov
lock
xchg
push
xchg
xlat
iret
imul
out
xor
push
daa
mov
mov
jno
shlb
ss
dec
adc
int
push
iret
fisubrs
or
scas
mov
mov
xor
cld
jecxz
fildll
cli
pop
sti
into
loop
jo
dec
jecxz
xchg
adc
sahf
push
mov
adc
mov
jg
xchg
ror
les
pop
nop
loope
fbstp
cs
in
test
es
out
dec
pop
xor
dec
inc
inc
mov
xchg
xchg
sub
fs
sbb
mov
push
gs
cmc
test
jns
sbb
cli
mov
pop
xchg
outsl
jno
push
dec
dec
dec
fiadds
mov
sahf
push
jb
lret
in
mov
adcl
leave
out
xchg
daa
into
mov
js
and
imulb
fldcw
add
sub
dec
dec
or
jb
pop
or
je
or
addl
stc
and
das
mov
aam
pop
xchg
arpl
or
pop
mov
call
adc
xchg
int
mov
stc
mov
ljmp
out
fcomi
jno
sub
aam
repz
imul
mov
jo
jecxz
insl
enter
sbb
jecxz
xor
mov
pusha
jecxz
stos
mov
sarl
mov
sbb
cld
jno
adc
js
test
mov
jmp
dec
jnp
subl
cld
andb
inc
add
insb
outsb
std
adc
mov
push
stos
in
push
mov
lret
mov
xchg
sbb
repz
inc
imul
shll
push
sub
fadds
scas
es
jle
int3
xchg
xchg
jecxz
int
in
dec
fs
pusha
dec
or
and
jbe
fisubrl
adc
arpl
or
fdiv
adc
mov
lods
jno
and
jecxz
rorl
out
push
pushf
dec
mov
outsb
dec
imulb
pop
fcompl
stos
push
shrl
sub
hlt
test
cmp
inc
iret
xchg
jmp
xchg
lock
loope
mov
insb
loop
into
xor
aas
cmp
aas
or
rcll
loop
repnz
rcrb
xchg
sub
mov
les
jns
es
imul
leave
or
fdiv
pop
in
shll
adc
test
shlb
add
outsl
jle
outsb
cmp
cltd
int
movsb
jnp
xorl
jmp
or
pop
dec
sar
sub
loope
mov
cmpsb
leave
icebp
inc
cmp
loope
ds
or
loop
sub
xor
dec
jmp
and
cmpb
mov
int
lea
pop
jne
jecxz
sbb
pop
call
mov
cmc
pop
lahf
sbb
mov
int
jl
mov
insl
movsb
sub
mov
das
mov
arpl
sbb
mov
imul
mov
mov
mov
xlat
push
cmp
rclb
das
mov
adc
scas
nop
cltd
shlb
cltd
inc
mov
rep
inc
jp
jo
cld
adc
or
sbb
frstor
dec
fdivp
lds
xor
jno
jne
jo
in
icebp
xchg
xor
sub
add
sbb
push
jle
data16
pop
lods
les
dec
adc
xor
insb
or
xchg
mov
pusha
shr
adc
rolb
adc
lds
jo
pop
sahf
cmp
adc
nop
data16
scas
insl
mov
wbinvd
dec
push
enter
push
cmpl
fwait
inc
mov
push
mov
ret
mov
js
lret
lods
mov
insl
add
fwait
ret
lret
cmp
hlt
push
pop
jno
dec
addl
sbb
loope
and
cmpsb
pop
cwtl
mov
lret
push
cmp
loop
daa
mov
jo
test
loop
cmc
orl
mov
xchg
mov
cmc
int3
xorps
notb
pop
dec
rcrl
mov
out
adc
mov
call
cmovge
or
jmp
lds
mov
outsl
cltd
sub
stos
cld
ja
out
mov
cltd
mov
and
subb
icebp
mov
xor
and
lds
dec
xchg
dec
shrl
sahf
lret
testb
xor
divb
imul
inc
orb
insl
js
xor
mov
into
das
fldcw
mov
adc
jno
dec
mov
cmp
dec
aaa
mov
mov
cmpsb
adc
cli
or
ss
mov
out
and
xchg
push
rolb
pop
insl
out
pop
cmp
cs
mov
pop
fdiv
daa
loope
mov
leave
sbb
int
push
pop
test
inc
lahf
dec
mov
in
add
dec
ljmp
ds
push
rcrb
xchg
mov
leave
sbb
out
shlb
rorb
jl
inc
and
xor
push
cwtl
pop
mov
inc
cmp
jl
cmp
sub
rorl
push
mov
xor
jp
out
stos
push
cmp
into
sub
js
mov
loopne
lods
fiaddl
jb
fdivr
push
mov
lods
outsl
xchg
jo
or
adc
jo
or
data16
xchg
sbb
or
or
mov
fadds
es
ret
mov
mov
jp
push
ja
xor
sbb
rcrl
out
mov
pop
cmp
in
enter
popa
xchg
ret
fwait
iret
fsts
sahf
push
pop
mov
iret
cmp
or
inc
les
stos
outsl
lret
cmpsb
out
out
inc
xor
test
mov
dec
repnz
add
mov
mov
cmp
testl
int
or
fistps
and
hlt
lahf
or
mov
jne
push
pop
je
push
xlat
and
mov
ficoml
jae
insl
sub
sti
push
mov
data16
les
loopne
xchg
in
les
xchg
and
or
lods
test
mov
test
sub
mov
repnz
loopne
andb
inc
inc
jno
xchg
xchg
insl
testb
adcb
pop
loop
mov
outsl
and
insb
mov
or
pop
fbld
mov
cld
mov
push
stos
push
cs
push
or
cltd
mov
cltd
xchg
mov
pop
add
xor
dec
ss
shrb
in
xor
stos
dec
cli
mov
mov
push
ds
test
sbb
sbb
rorl
pop
xor
pop
sub
xchg
xor
movsl
shlb
pop
dec
add
dec
dec
cmp
pop
fs
mov
inc
test
xchg
pop
arpl
jl
les
cmp
stc
lret
shlb
nop
dec
and
sbb
sti
dec
aas
ja
cltd
jmp
mov
cmp
fstl
stos
lea
pop
movsb
addb
out
and
addr16
or
xorl
adc
xchg
mov
fdivrs
cmp
insb
popa
and
xchg
cli
stos
sti
jge
mov
in
stos
arpl
pusha
pop
lea
test
bound
sbb
lret
mov
insb
mov
xchg
jecxz
jb
sub
cmovg
loopne
xorb
inc
insl
sub
push
pop
jle
add
jge
stc
fmull
and
mov
mov
sbb
lret
gs
addr16
bound
xchg
fwait
incb
in
subb
or
leave
rcrl
test
xchg
dec
mov
dec
inc
adc
or
les
lahf
cmp
push
cmp
mov
mov
imul
fsubrs
cmp
mov
pop
mov
inc
ud2
push
fwait
into
call
jae
addr16
out
mov
es
xchg
adc
test
pop
int3
mulb
sub
xorl
mov
popf
dec
outsl
test
mov
nop
inc
scas
ret
jl
aaa
mov
cli
cmc
sbb
in
bound
fbld
aas
jo
push
sti
imul
xchg
lret
test
lock
jae
mov
mov
add
or
push
xchg
lret
xor
cmp
ret
mov
dec
jne
inc
adc
inc
push
mov
out
add
cmpsb
fcmovnb
inc
mov
and
mov
lea
cmp
idivl
mov
xor
bound
cld
leave
push
jmp
data16
loope
xchg
xchg
jmp
jo
sarb
or
ret
bts
push
pop
xor
sbb
jmp
hlt
dec
mov
jb
push
aam
push
aaa
pop
or
rcrl
sbb
cmp
mov
pop
pop
pop
push
cmp
stos
cmp
lret
inc
push
mov
push
dec
adc
cmp
aad
pop
int3
shll
data16
icebp
test
ljmp
outsb
popl
filds
push
dec
imul
orb
and
add
and
push
sahf
jo
int
ffree
adc
pusha
mov
shll
out
call
stos
test
mov
sbb
jns
pop
push
mov
and
and
js
xor
jmp
cmp
sub
daa
fsubl
pop
in
cwtl
arpl
les
sub
flds
fmul
xor
fidivrl
icebp
push
into
stc
lds
cld
push
and
xor
pop
aam
xor
mov
fbld
nop
mov
xor
lods
xchg
popa
xor
jnp
cltd
pop
arpl
inc
out
inc
loopne
jecxz
stos
and
ss
push
shr
in
aam
push
push
mov
pushf
pop
pop
addr16
icebp
lret
in
mov
movsl
sub
push
aas
push
add
and
sub
inc
push
pop
pop
test
fwait
testb
aad
test
inc
out
movb
outsb
sub
fsts
fwait
in
cwtl
shlb
into
or
pusha
nop
or
lock
leave
cmp
push
lock
insl
push
mov
sbb
es
movsl
repz
sbb
sbb
outsl
aad
popa
push
das
fcmovne
fadds
mov
outsl
roll
jo
jae
popf
neg
mov
xchg
fildl
sti
push
adcl
xchg
mov
repz
out
dec
cmp
mov
aam
in
inc
fisttpll
push
mov
mov
jmp
pop
rcll
and
xor
fwait
adc
xchg
ret
xchg
lea
inc
sbb
arpl
loope
mov
test
ljmp
xor
mov
lods
mov
cmp
mov
icebp
jle
mov
pop
ja
cmpsl
xchg
ss
mov
xchg
jge
mov
pop
outsb
sub
jno
mov
sbb
dec
adc
and
xor
mov
sbb
pushf
sbb
daa
outsl
in
es
cmp
rcrb
jl
sbb
pop
nop
dec
push
xchg
testb
shlb
addb
mov
std
add
shl
aaa
outsl
xchg
insb
inc
outsb
psrld
xor
pop
adc
scas
and
stos
in
mov
dec
adc
ja
cmpsb
les
mov
jecxz
mov
push
cmp
inc
stos
jl
imul
lock
mov
adc
mov
data16
sbb
pop
lret
pop
push
jp
lret
call
loop
decb
jp
stc
dec
inc
scas
add
cmp
adc
xorl
mov
mov
lahf
fists
fxam
xor
test
jns
test
push
repz
lds
neg
shll
jbe
mov
movsb
or
out
sub
insb
add
outsb
push
cs
enter
xchg
jbe
inc
lock
xor
and
mov
cs
push
dec
inc
icebp
pop
nop
dec
arpl
adcl
sub
shlb
push
lods
lds
adc
out
out
xchg
clc
stos
bound
pop
sub
mov
sbb
mov
adc
lcall
stc
jnp
int3
aaa
pop
subl
cmc
cwtl
loopne
subb
mov
lret
sub
cmpsb
push
mov
shr
or
pusha
sub
mov
rorb
jmp
js
loope
pop
lcall
push
imul
aaa
jae
inc
inc
mov
sbb
dec
xor
shlb
jo
gs
loopne
xor
mov
aas
adc
ficomps
dec
push
outsb
xchg
ja
inc
mull
popf
sahf
cmp
jnp
sbb
jg
lcall
adc
inc
lds
imul
enter
push
out
dec
sub
test
sbb
mov
sbb
pop
mov
repz
jns
pop
popf
shll
push
mov
mov
cmpl
fistl
stos
or
sbb
inc
push
mov
lcall
cmpsl
and
mov
push
dec
sbb
mov
lds
shll
es
push
shl
sub
fstl
aaa
inc
xchg
or
xorl
cmp
jl
gs
je
shlb
adc
nop
xor
in
xchg
arpl
sub
ljmp
add
xchg
loopne
out
stos
stc
jae
fldenv
inc
cld
rolb
mov
or
popl
inc
nop
nop
fsubl
out
rcrb
sbb
mov
fsubp
pop
push
adc
in
push
test
in
in
mov
mov
fldenv
push
sbb
jnp
dec
loop
popf
gs
imul
push
lods
aam
out
pop
sti
ret
cmp
divl
je
push
leave
or
dec
dec
xor
xor
stos
adc
les
imul
and
imul
fildl
dec
outsb
sub
add
jge
sub
cmp
and
stos
sub
xor
sbb
dec
xor
mov
pop
lret
pop
inc
mov
fdivl
fucomi
mov
jp
mov
lret
pop
inc
or
out
xorb
aad
in
pop
clc
outsl
js
mov
aaa
pusha
aas
jae
iret
int
adc
addr16
out
bound
mov
dec
iret
cwtl
dec
mov
and
push
mov
fiadds
movsb
sbb
inc
test
repnz
sub
mov
sub
loopne
loope
mov
lea
sbb
mov
adc
ret
rorl
jbe
add
inc
cmp
ds
adc
add
aad
notb
int
xor
xlat
push
or
adc
test
fildl
push
push
xor
shl
std
push
xchg
or
jge
sahf
dec
sub
sub
push
pop
dec
lods
cmp
cmp
push
push
data16
out
out
mov
dec
mov
sub
fadd
or
shlb
push
pop
cmp
addr16
lods
je
lea
pop
shlb
jmp
mov
loope
imul
jecxz
jmp
jmp
loop
mov
xchg
jo
and
aam
cmpsl
push
xchg
inc
int
roll
lds
mov
pop
cmp
push
jnp
xchg
xchg
ja
bound
dec
mov
mov
ds
push
add
xchg
in
adc
mov
sahf
flds
scas
xor
cltd
pop
jle
cmp
popa
pop
outsb
mov
xor
les
in
mov
inc
popf
pop
rorl
ja
fistps
jbe
ss
xor
jmp
adc
xchg
stos
sub
cmp
jns
cmpsb
orb
sti
aas
jns
xor
sbb
sbb
loopne
jne
push
add
std
scas
mov
repz
es
loope
inc
cmpsl
inc
fs
sahf
shrl
mulb
ficomps
mov
adc
and
fsts
sbb
push
xor
test
push
ret
negl
adc
and
jo
dec
inc
add
fnstenv
in
test
aas
stc
mov
push
enter
popf
stc
jecxz
loopne
push
jp
cmp
mov
mov
icebp
cmp
mov
mov
aaa
sahf
inc
push
addl
push
out
xchg
inc
or
in
out
lea
pop
cwtl
mov
pop
fbstp
xor
bound
pop
mov
jecxz
jae
pop
and
nop
je
daa
mov
sub
mov
push
xor
dec
mov
mov
xor
movsl
adc
sbb
inc
in
out
jne
mov
dec
sbb
fwait
sub
push
imulb
mov
sbb
cmpsl
push
sub
cmpsl
lea
test
inc
decl
push
dec
cs
dec
xor
loopne
fstps
clc
cmpsl
sub
jmp
mov
cli
sbbb
mov
mov
fidivrl
clc
lods
test
xchg
loope
iret
sar
jo
pop
xor
cmc
or
sub
mov
xchg
mov
xor
mov
popa
test
test
out
lret
test
and
in
loop
or
dec
mov
sbb
leave
mov
icebp
inc
movups
cmp
cmpsl
or
imul
jmp
movsb
pop
xor
jne
mov
test
rcrb
cmc
fstpl
js
cwtl
sub
sub
push
pop
sbb
jg
jl
int
mov
dec
movb
dec
dec
sbbb
jmp
sub
scas
xchg
clc
test
addr16
sbb
mov
sarb
sti
pop
mov
sub
loopne
pop
add
adc
pushf
sub
mov
clc
pushf
pop
shl
insl
adc
mov
lahf
lea
pop
push
mov
dec
cvtps2pi
xchg
mov
icebp
xor
lods
data16
shr
nop
jge
mov
fdivs
leave
inc
ret
enter
loopne
lods
pusha
fcmove
test
mov
or
cmp
mov
lea
inc
cltd
loope
inc
sti
insb
int
movq
das
bound
into
inc
insb
jl
dec
movsl
popf
inc
int3
and
mov
loop
rcrl
nop
out
add
fidivl
mov
sub
pop
mov
es
pop
and
dec
jmp
sub
sbbb
dec
inc
mov
mov
xchg
pop
rclb
testl
pop
orb
adc
ljmp
ljmp
mov
daa
icebp
in
shr
cltd
jmp
std
test
les
aad
das
jae
mov
adc
sahf
aaa
daa
mov
adc
xchg
subl
mov
js
into
imul
or
dec
mov
daa
pop
loope
mov
les
fcom
jbe
andl
out
jecxz
pop
jp
or
es
cmp
clc
fwait
mov
iret
and
push
mov
sub
outsl
sti
push
movsl
pushf
push
or
cmp
and
fs
xchg
incb
mov
push
push
repz
pop
bound
decl
mov
mov
jg
stos
pop
jg
xor
in
outsl
adc
fldt
test
xor
and
pop
inc
out
outsl
fldt
jbe
js
lods
adc
rcr
fildl
cltd
ss
xor
je
sbb
std
in
lods
nop
pusha
jg
stos
imul
push
out
notb
mov
mov
stc
loopne
push
xchg
pop
mov
mov
imul
fwait
mov
aad
mov
scas
mov
gs
mov
cmc
cli
add
inc
mov
test
out
mov
lcall
pop
nop
pop
cltd
push
cli
inc
jecxz
rorl
push
and
jae
rcl
cmpl
sti
inc
mov
cltd
gs
cltd
cmp
cld
push
dec
loop
cs
pop
jns
fstps
testb
pop
loop
sarb
fnstsw
pop
icebp
fldenv
cmpb
int
fmuls
rcll
jecxz
mov
pop
loopne
ret
xchg
cmp
std
jle
int
jbe
adc
ljmp
dec
push
sub
mov
sub
pop
or
push
dec
mov
pop
int3
xor
das
filds
mov
pop
sub
adc
xor
and
imul
mov
and
jl
cltd
add
sarb
dec
push
orb
lret
imul
scas
fdiv
pusha
out
dec
jmp
daa
cwtl
sub
fdivs
insl
ss
mov
cmp
add
rcrl
fsub
out
mov
dec
xchg
pop
pop
inc
mov
jae
incl
mov
test
inc
inc
and
les
push
sub
test
arpl
xor
out
mov
cltd
mov
adc
mov
mov
insb
xchg
ret
lds
mov
adc
sbb
test
mov
cmp
and
mov
mov
xor
mov
mov
adcl
jl
fbld
pushf
jb
xchg
es
sbb
mov
inc
xchg
push
rcl
xchg
and
bound
out
rolb
pop
test
mov
cmp
addr16
loop
and
pop
lods
dec
xchg
loopne
inc
pop
gs
jae
cmp
fstps
push
sbb
test
xor
cli
pop
cmp
cmp
mov
mov
jmp
or
push
cmp
dec
leave
ds
sub
pop
outsb
jge
div
loope
adc
daa
pop
rcll
cmp
dec
in
test
out
push
dec
mov
xchg
insb
fcmovbe
push
les
notb
jl
dec
addr16
jp
sbb
icebp
sbb
xor
out
mov
lods
jge
jb
in
shl
loop
mov
bound
cs
out
inc
shl
je
cld
out
fadds
cmp
pop
sahf
cmp
sub
ljmp
stos
sti
sbb
in
je
hlt
cld
dec
cmpl
and
int3
xor
xor
call
popf
sub
inc
andl
daa
push
clc
fsts
inc
sub
mov
icebp
je
sub
push
dec
je
lods
dec
pusha
into
adc
xchg
mov
lods
lock
mov
cs
and
cmp
popa
dec
std
icebp
xor
add
jg
sbb
jge
shll
or
mov
fdivs
inc
xchg
fstpt
mov
jmp
jne
icebp
int
cs
dec
addl
push
dec
imul
sub
and
mov
pop
dec
push
ds
enter
cld
cmp
lods
test
icebp
xor
ja
and
jge
out
bound
xchg
add
and
mov
cmpsl
addr16
loope
adc
mov
mov
jb
jp
icebp
dec
out
ss
js
call
insl
mov
pusha
jno
loop
xchg
and
jg
mov
jge
repz
cs
das
xor
mull
adc
dec
jae
xchg
xchg
fmull
pop
enter
cmpsb
jmp
mov
ficomps
negl
pop
pop
mov
in
addr16
rcll
orl
vpmacssdqh
flds
outsl
inc
adc
stos
out
fwait
sbb
test
imul
lods
and
sub
push
lods
adc
lock
mov
dec
icebp
in
int
dec
jp
notl
jno
cltd
push
cmpsl
int
adc
mov
xor
fsubl
cmp
popf
in
ljmp
xchg
mov
lods
sub
mov
cmc
mull
or
push
arpl
dec
and
test
loope
loope
sbbb
cwtl
pop
add
rcl
sbb
or
sub
cmpsl
hlt
cmp
adc
mov
nop
sbb
mov
cmc
jg
mov
mov
es
sbb
jnp
test
inc
cmpsb
testb
leave
cmp
fistpll
mov
popf
mov
ss
or
xor
mov
push
loope
cmp
push
imul
inc
cmpsl
les
push
push
inc
lock
out
push
adc
lea
mov
push
mov
sub
inc
repz
mov
ljmp
cld
js
daa
or
aaa
ds
adc
enter
or
out
nop
adc
loop
dec
add
dec
mov
dec
insl
fiadds
xchg
sbbl
mov
add
jnp
fldenv
inc
nop
pcmpgtw
push
xor
jge
jae
imul
ljmp
rcll
cld
inc
stc
pusha
mov
add
inc
mov
jmp
addl
sbb
sbb
xor
sahf
sbb
add
mov
ja
cs
lahf
push
lds
fcompl
cmpsb
fs
pop
loop
cs
inc
push
ss
into
mov
std
movsb
insl
call
test
dec
pop
out
jecxz
fcmove
fwait
sub
into
and
or
enter
adc
sbb
push
mov
sub
in
mov
aaa
in
mov
out
daa
mov
out
push
xor
adc
mov
jecxz
sbb
mov
dec
or
or
dec
xor
mov
mov
lea
adc
jecxz
movsl
pusha
pop
dec
out
std
push
xchg
cmp
add
daa
pushf
cli
cmp
jae
sub
jns
mov
enter
fsubp
dec
in
leave
mov
dec
adc
lock
gs
frstor
scas
std
and
and
push
popa
dec
decb
inc
cmpsb
sub
inc
dec
adcb
sub
and
jmp
nop
stos
arpl
and
arpl
call
xor
mov
mov
call
cmp
push
inc
mov
and
and
push
xchg
test
lods
aaa
lods
or
repz
xchg
mov
inc
push
push
int
sbb
mov
xor
fdivp
pop
cld
lcall
in
dec
pop
push
jecxz
test
mov
call
mov
out
into
jns
cli
adc
or
nop
jmp
fwait
scas
or
dec
lahf
jg
scas
or
xchg
mov
ss
inc
cmpb
dec
push
jmp
fbstp
arpl
test
push
push
rolb
xchg
stos
mov
in
aad
xchg
ljmp
push
mov
in
mov
adcb
pusha
mov
cmp
ds
leave
popa
or
decb
xchg
ds
adc
cmp
add
adc
cmp
hlt
cs
hlt
cld
lock
dec
or
mov
fnstcw
xchg
add
xchg
cmp
inc
in
mov
outsb
push
inc
vpminsw
or
cld
mov
xchg
add
add
xchg
jp
xchg
mov
push
inc
jmp
inc
xor
test
mov
outsl
lock
jecxz
pop
or
fcmovnbe
test
hlt
pop
adc
in
arpl
fcoml
inc
adc
fstps
rcll
pushf
dec
or
insb
mov
pop
push
in
mov
xlat
mov
cmpsl
sbb
dec
jns
mov
xchg
xchg
ljmp
xchg
inc
leave
out
dec
movb
mov
ret
jecxz
cli
pop
add
push
mov
sub
push
xchg
les
vsubss
shlb
mov
stos
xorb
adc
xchg
xor
rcl
jecxz
rcrb
xorb
and
js
mov
cmp
clc
in
xrelease
andnps
sub
test
mov
rorb
sbb
fs
ja
aad
addl
fsts
sub
or
arpl
sbb
shlb
shll
push
shll
cli
mov
or
jle
and
push
fiaddl
divl
lcall
loop
in
sub
pop
sub
mov
jnp
out
je
sub
xchg
cmpsb
mov
aam
loop
adc
lahf
or
sarl
jmp
cmc
cltd
dec
rolb
les
xchg
aad
push
outsb
cltd
jo
dec
pop
loopne
mov
cmp
cltd
ret
repnz
adc
insl
mov
jl
pushf
bound
mov
pop
dec
test
das
enter
xchg
add
out
adc
ret
jns
push
bound
loop
xor
mov
jge
xchg
push
jecxz
addr16
enter
shlb
sub
xchg
cwtl
shl
les
je
mov
cmpsb
mov
loope
ljmp
std
xchg
aam
inc
dec
cs
out
ret
inc
outsb
lock
and
pop
inc
pop
sbb
lret
fcoml
mov
and
stos
fcom
into
cld
stos
adc
imul
aaa
and
flds
je
or
out
pop
out
mov
mov
inc
pusha
add
inc
jne
fbstp
pop
scas
testl
insl
xchg
and
outsb
push
repnz
outsl
sub
sub
loopne
leave
iret
je
outsb
sbb
insl
xchg
pop
dec
push
add
inc
daa
insl
and
jp
clc
or
das
mov
add
out
inc
push
rorl
push
mov
fwait
cli
das
or
dec
or
test
dec
ljmp
or
mov
xchg
sbb
dec
xlat
mov
or
call
sbb
clc
arpl
aas
ss
push
aam
cmpsb
cmp
mov
fnstsw
cmp
jmp
ja
cmp
add
in
cmp
mov
mov
add
pop
rcll
pop
das
andb
popf
mov
xchg
mov
dec
xor
inc
inc
test
sbb
cmpsl
jnp
hlt
lret
adcb
lret
or
push
std
pop
and
in
xor
out
movsl
mov
and
add
lds
xor
and
in
mov
sahf
fbld
in
xor
mov
mov
stos
lods
cmp
push
pop
mov
xchg
add
pop
cmpsb
mov
pop
pop
jmp
inc
cmp
lret
scas
imul
arpl
inc
jecxz
ficomps
imul
or
aad
mov
xchg
inc
les
inc
and
insb
fs
push
mov
lds
mov
fstpt
ja
enter
cld
mov
or
mov
or
andl
ret
xchg
call
jg
popa
imul
jp
shlb
and
test
or
repnz
mov
adc
movsb
mov
idivl
addr16
icebp
jl
cmp
inc
aam
and
pop
pop
adc
decl
pop
clc
inc
stos
mov
js
xlat
rolb
aam
add
lods
xor
inc
sbb
jge
adc
or
pushf
pop
or
aas
fldenv
push
xor
ret
out
ret
enter
je
shl
and
stc
dec
adc
jp
dec
addr16
lods
add
mov
xlat
xchg
in
add
into
test
andb
mov
out
stos
pop
test
cs
addr16
inc
mov
xor
pop
ss
rclb
mov
or
or
js
push
cs
mov
pushf
sbb
inc
sbb
jb
sub
test
jle
jg
fwait
scas
sub
xlat
xchg
testb
icebp
sahf
mov
push
cmp
icebp
dec
fs
sbb
sub
sbb
loopne
mov
fcomp
std
cs
push
mov
sub
jno
push
mov
push
push
dec
aas
int
or
or
xor
roll
mov
dec
arpl
push
dec
fildl
test
cmp
insb
and
adc
pop
xchg
insl
out
pusha
xor
pop
scas
faddl
incl
aad
xchg
fildl
sbb
imulb
call
scas
mov
imulb
loop
addr16
adc
xchg
cwtl
adc
dec
jne
xchg
xor
inc
addr16
test
lods
pop
iret
mov
xchg
adcl
cmp
call
out
push
inc
imul
mov
in
aaa
out
fimull
lahf
or
adc
in
dec
les
inc
ret
and
xor
xor
es
xor
bound
cli
mov
mov
sub
leave
call
popf
int
ja
sub
pop
insb
pop
xor
mov
mov
sti
stos
inc
inc
int
xor
bound
jg
mov
ljmp
cmp
inc
mov
test
jge
sti
jae
jge
cmp
nop
test
in
outsl
xlat
or
lret
cmp
push
mov
lods
dec
dec
push
cmp
sbb
pop
mov
iret
sbb
hlt
inc
and
mov
pop
mov
mov
enter
sbb
fisubl
dec
daa
add
dec
cmpb
out
or
adc
sahf
ljmp
inc
cmpsl
aad
sub
adc
cmpb
mov
lds
scas
aaa
mov
ror
and
mov
mov
je
addr16
sub
jle
int3
test
jns
ret
mov
outsb
mov
pop
cmp
daa
dec
lret
push
shlb
pushf
push
lret
xchg
xchg
call
add
bound
test
cmp
mov
push
and
and
mov
xor
int
push
bound
or
jecxz
cmp
dec
in
and
pushf
outsl
xor
in
push
push
sbb
or
pop
shrl
mov
push
outsb
sahf
jns
ljmp
stc
add
mov
inc
popa
pop
sbb
inc
and
or
movb
pop
leave
mov
jecxz
xchg
enter
cmp
jl
cs
out
pop
pop
movsl
push
add
cmp
mov
mov
adc
call
ret
inc
pusha
sub
es
mov
sbb
or
in
loopne
inc
sub
cmp
lret
fimull
jmp
mov
leave
out
mov
out
inc
jg
inc
out
sub
add
xor
in
xchg
cld
lahf
imul
fimuls
and
lods
aam
lods
lcall
jle
fwait
push
in
sbb
ds
fistpll
ja
in
jmp
xchg
lahf
lods
arpl
test
rclb
sbb
xor
pop
xchg
cmp
xchg
or
jns
push
jne
adc
dec
jne
inc
cld
jge
hlt
les
bound
mov
ss
adc
scas
rclb
push
outsl
mov
lahf
sub
mov
xchg
hlt
pushf
clc
inc
fstl
and
add
fisttpll
mov
mov
or
shl
ljmp
cmp
mov
lcall
adc
andl
incb
repnz
xchg
mov
sub
xlat
fadd
lret
add
xor
jnp
lret
cmp
and
fwait
mov
cmp
mov
inc
mov
jmp
mov
add
mov
mov
push
jns
out
adc
shll
xlat
sbbl
xchg
lcall
sub
mov
repnz
dec
cmp
jle
cltd
stos
push
rol
negb
mov
push
mov
lret
push
xchg
jnp
outsl
xorb
cmp
jle
fs
xor
js
push
outsl
cli
sahf
mov
push
sbb
dec
mov
xchg
cltd
lret
pop
nop
rolb
xor
xchg
jecxz
jecxz
jmp
cmpsb
fisubl
mov
shrb
ss
js
out
sbb
outsb
sub
push
daa
mov
cmp
xchg
add
outsb
inc
mov
dec
inc
or
nop
fimuls
out
xor
aad
mov
cmpsb
fcompl
jb
enter
sahf
inc
sbb
lcall
ja
popf
mov
pop
push
jno
pop
push
cwtl
pop
fdivr
lea
fisttpl
and
push
ljmp
push
or
dec
xor
jecxz
lods
scas
rcrb
cmpl
push
dec
mov
lcall
sub
jp
movsb
dec
es
xor
and
adc
sahf
fnstsw
icebp
push
fildl
lcall
jg
xchg
pop
sbb
cmp
xchg
jmp
mov
inc
cld
jne
enter
mov
push
cmp
enter
cmp
xchg
movsb
mov
pop
push
push
xchg
xor
lahf
and
fnstcw
xchg
fwait
mov
jmp
sbb
mov
ror
cli
roll
push
dec
loop
mov
and
mov
mov
stos
daa
retw
dec
rorb
pop
pop
jl
call
jae
lahf
test
imulb
pop
mov
cmpsb
lahf
pusha
sbb
pop
out
mov
test
or
dec
fisttpll
jl
push
push
inc
repnz
sub
pushf
xor
lret
je
addr16
out
fsubrl
jnp
inc
inc
push
cli
xor
jge
pop
push
jae
sbb
cs
dec
ds
lcall
std
adcl
fisubl
outsb
sub
inc
cmp
pop
rorb
imull
push
test
cmc
js
jnp
ficomps
enter
cwtl
lldt
cld
aad
sbb
push
xor
and
add
dec
daa
push
sbb
aad
or
stos
repnz
movsb
loop
push
add
lret
push
in
fcomi
pop
jp
in
and
inc
or
lret
dec
in
mov
push
mov
popf
xlat
add
fnstcw
xchg
out
pop
adc
or
push
xchg
int
lcall
push
add
pusha
dec
dec
xchg
test
dec
data16
mov
sti
sub
scas
movsb
clc
or
test
and
in
pushf
xchg
mov
xchg
ja
ficoml
xlat
sti
das
sbb
fdivp
enter
test
data16
push
pop
icebp
aaa
xor
shlb
aas
push
add
sbb
insl
fs
clc
cltd
jo
out
cld
mov
orb
cmp
fisubrs
dec
inc
icebp
lret
dec
mov
icebp
insb
sarl
mov
lods
inc
sub
mov
dec
cmpb
popf
add
das
jns
aam
fsubrs
cmc
subl
xor
xchg
lret
add
and
std
jne
hlt
xor
mov
insb
pop
add
testb
push
and
sub
mov
sahf
fiaddl
je
adc
out
dec
js
imul
cmpsb
loopne
push
es
cmc
and
xor
pop
and
fsubp
addl
ret
push
xlat
cli
add
insb
inc
mov
aad
stos
in
or
rcll
jbe
adc
cmpsl
stos
adc
fwait
fwait
movsb
aas
lret
jmp
inc
out
jb
pop
or
sarb
ds
in
mov
sbb
fbstp
aad
lock
aaa
cmpsl
mov
xchg
xor
stos
add
xor
mov
mov
jmp
stc
jae
jo
fdivs
aad
push
vandnps
pop
jnp
inc
stc
pop
jge
jno
jno
cltd
push
sbb
push
arpl
jg
xlat
or
test
cmp
adc
sbb
cmp
xchg
and
cld
mov
push
stos
and
push
outsb
sub
ss
daa
add
mov
push
and
dec
sbb
call
cltd
mov
es
aad
adc
mov
xorl
mov
fcompl
pop
scas
sbbl
xor
adc
cli
das
stos
sub
xchg
mov
movb
mov
shlb
mov
or
ljmp
lock
mov
inc
mov
push
mov
xor
in
pop
mov
pushf
in
xchg
or
out
jnp
jo
and
and
sub
or
add
popa
inc
cld
mov
mov
aam
pop
inc
adc
xchg
das
nop
cmc
daa
xchg
jbe
lds
shlb
test
int3
das
mov
jg
das
cmove
fbstp
fnstcw
ret
jnp
pop
add
mov
popf
inc
inc
inc
push
icebp
repz
mov
sub
fidivs
pop
pop
jge
inc
xchg
push
shl
xor
int
movsb
fwait
loopne
lret
cmp
outsl
ss
and
push
into
mov
in
adc
call
adcl
xor
xchg
ja
sub
outsb
pushf
inc
ret
test
push
inc
pop
mov
push
ffreep
dec
mov
pushf
mov
icebp
aas
cmpsb
jecxz
and
cmp
stc
lock
imul
dec
dec
push
mov
add
pop
pop
jl
out
iret
ficoms
adc
pop
xor
sub
insb
or
addr16
xchg
ja
lahf
adc
repz
cmp
insl
sbb
mov
jp
or
fadds
lahf
jp
clc
popa
pop
pushaw
sub
mov
div
inc
aam
pop
mov
jecxz
dec
mov
pop
enter
out
pop
in
ds
push
mov
mov
loop
ja
pushf
mov
or
xchg
das
mov
outsl
fnstcw
pop
test
aam
jb
dec
aaa
stos
xor
or
dec
pop
test
sub
inc
sarl
out
imul
xorl
je
xorb
add
xlat
sbb
nop
and
addr16
test
cmpsl
je
cmp
xor
fstps
dec
leave
inc
mov
in
mov
xchg
jmp
add
in
bound
inc
xchg
in
popa
adc
inc
jo
adc
dec
stos
sub
jp
gs
add
add
andl
bound
push
and
ficomps
add
sbb
jecxz
push
inc
mov
popf
inc
jmp
je
sub
cmpsb
loope
mov
jns
jecxz
mov
call
mov
xchg
std
lods
testb
pop
add
ret
mov
push
mov
lock
mov
sub
xchg
xchg
add
test
mov
stos
jne
scas
mov
addr16
jb
in
or
push
lahf
data16
bound
xchg
fldcw
movsl
das
fwait
add
inc
fmuls
push
sbb
mov
pop
mov
aad
sub
mov
in
or
or
data16
int
ret
pusha
shlb
and
push
lcall
movsl
xor
lods
mov
xchg
aaa
dec
pop
nop
lret
xor
lock
ficompl
xor
adc
out
sbb
push
lahf
insb
xlat
xchg
sbb
xor
jae
bound
and
sbb
cmpsb
insl
fwait
das
inc
test
cmp
sbb
push
cmp
pop
cli
sub
imul
shll
out
dec
pop
pop
dec
insl
cmp
jae
pop
sub
cmp
outsl
repnz
popa
mov
into
data16
add
and
pop
xor
push
nop
movsl
adcb
push
cmp
lock
push
imul
loopne
jl
fldcw
repnz
sub
cltd
pop
dec
es
dec
movsl
js
xlat
test
je
mov
in
mov
mov
das
add
ja
sti
adc
xor
or
cmp
stc
imul
sub
inc
push
test
pop
out
ljmp
pop
stos
test
outsb
inc
out
xor
and
pop
cmp
pop
icebp
jb
sub
fucom
xor
mov
jbe
xor
je
cmc
in
mov
clc
fimuls
add
ljmp
cmp
ret
fisubl
aas
scas
or
add
outsl
jl
pop
cmpsl
in
insb
mov
or
push
cld
fisttps
sub
fimull
addr16
jno
repnz
push
lldt
sub
push
jbe
cmp
or
leave
xchg
pop
lcall
sub
pop
lret
xchg
clc
fidivrs
mov
sub
pusha
mov
out
xor
xor
sub
lea
pop
dec
adc
call
adc
mov
mov
sahf
push
sub
mov
sub
cmpsl
cli
dec
pop
sub
scas
and
cli
sbb
inc
cmp
sub
jg
fsts
xor
xor
sub
sub
das
pop
outsb
addr16
pop
lret
bound
sbb
leave
sub
and
inc
decb
pop
mov
call
jecxz
sti
jl
mov
outsl
rcll
and
add
push
aas
incl
ja
into
pushf
mov
mov
fisubrs
pop
gs
cmp
pop
push
fisubs
push
mov
fisttpl
push
push
mov
inc
mov
pop
pop
xor
icebp
mov
fcomi
xor
out
jmp
mov
rcrb
ja
inc
stos
mov
cs
rclb
or
xor
mov
mov
lock
cs
cltd
sbb
xlat
or
or
jb
std
mov
fwait
push
fmul
pop
fmull
jnp
push
xchg
mov
add
adc
xchg
dec
dec
sbbl
out
xor
ret
xor
popf
push
call
sbb
lods
call
lcall
repnz
adc
sub
cmp
jg
lods
xchg
je
ret
out
jmp
sbb
ffree
es
scas
push
std
scas
dec
daa
mov
insl
adc
sbb
scas
lods
xchg
xchg
and
inc
cmp
imul
popl
dec
dec
mov
imul
lret
xor
mulb
xchg
cltd
movsb
xor
fwait
pusha
push
inc
inc
adc
sub
hlt
outsl
or
xor
mov
shlb
dec
mov
push
pop
jae
shll
cmp
fwait
mov
xchg
imul
out
ljmp
ret
cmp
lods
iret
int
xchg
fdivr
scas
fcomps
sub
scas
sub
xor
jbe
repz
and
pop
xchg
ljmp
pop
hlt
scas
xchg
cmp
leave
stc
adc
push
inc
or
xchg
lea
divl
outsb
jbe
mov
imul
shll
pop
cli
xchg
add
sti
xor
sub
or
jge
gs
sahf
mov
push
out
cmp
mov
push
pop
dec
sub
cs
cmc
xchg
subl
and
mov
ljmp
imul
std
jmp
cwtl
mov
andl
cli
pop
mov
pop
inc
cmp
test
mov
faddl
jno
test
ret
and
and
and
fmuls
push
pop
mov
adcb
imul
ficomps
icebp
mov
or
in
lds
mov
mov
adc
mov
ds
in
sub
pop
push
cli
pop
jns
add
aas
dec
jae
xchg
or
or
mov
dec
hlt
inc
fs
add
mov
inc
adc
lret
xchg
loope
dec
mov
mov
mov
xchg
push
imul
ret
or
clc
nop
mov
icebp
pop
jb
stc
cmc
pop
faddl
out
pop
imul
movsl
mov
ficoms
mov
idivl
fcompl
inc
pop
pop
lods
cmp
add
add
sbb
rcr
push
and
imul
fisubl
repnz
xchg
xchg
enter
jg
jmp
adc
and
scas
xor
ret
or
mov
test
insl
fidivrs
dec
mov
push
aam
shlb
sbb
push
fadds
add
clc
or
aaa
jle
cli
mov
mov
xlat
loop
mov
int
cmc
jns
mov
call
aaa
idiv
enter
push
mov
jns
and
and
pop
sbb
andb
test
clc
pusha
sub
stos
testl
sub
popa
jmp
adc
sbb
fisubrl
out
call
aad
add
pop
stc
insb
incb
adc
add
scas
or
or
call
fs
negb
lods
mov
stos
lock
cwtl
mov
arpl
jl
sbb
js
lret
push
repz
or
arpl
int
in
push
mov
inc
cmp
dec
push
jmp
push
push
cmp
xor
std
fmuls
inc
or
pusha
dec
mov
xchg
cwtl
lret
mov
sbb
rclb
inc
gs
stc
stos
mov
and
rcr
dec
inc
cmovnp
inc
sarb
repz
out
sub
adc
pusha
nop
pop
popl
lods
lahf
sbb
sahf
in
addr16
jne
icebp
dec
cmp
xchg
stos
sarl
fwait
mov
insb
or
add
jg
pop
pop
test
rcll
je
and
cli
adc
call
fisttps
sub
js
add
mov
push
out
fs
out
popf
pop
ret
mov
in
loope
xchg
push
mov
sbb
pop
pop
dec
push
xchg
test
iret
arpl
pop
xor
inc
jbe
inc
inc
movsl
push
mov
and
imul
fsubs
or
mov
movsw
sub
and
nop
adc
sbb
aas
outsb
jl
push
out
pusha
xor
pop
popa
scas
jns
dec
decl
lock
je
jo
aaa
add
fsts
lret
ja
and
xchg
mov
pop
add
or
imul
add
insl
or
cs
adc
mov
mov
loop
sub
jno
pop
sub
or
hlt
mov
and
insl
adc
insb
sub
subb
mov
lret
ja
and
mov
and
mov
lods
pop
lea
lahf
jg
lret
xchg
mov
jae
add
pop
pop
xor
adc
imul
ljmp
enter
cmp
xlat
ja
jmp
adc
and
fsts
sub
cwtl
stos
xor
xor
out
lret
mov
loop
bound
insl
adc
pop
mov
out
iret
mov
mov
cld
lret
mov
lods
scas
fidivrs
jecxz
jg
mov
in
jmp
pop
xchg
dec
push
test
add
jno
mov
pop
fdivr
mov
ficoms
sbb
fldt
cmc
and
fisubrs
loop
test
fisubrl
xorl
push
adc
popf
jns
test
repnz
cmp
jno
jbe
jbe
add
clc
mov
mov
push
cmp
dec
or
jl
and
mov
xchg
xorb
cmp
or
cld
lret
fldcw
iret
inc
test
dec
cmp
add
jecxz
outsl
shrl
fistpl
mov
push
jnp
in
push
mov
jge
fsub
push
cmove
loope
dec
pop
ljmp
push
xor
mov
sub
cmp
jae
or
adc
adc
jecxz
fisubrs
pop
add
cmp
lea
push
aam
test
sub
sbb
add
pusha
gs
mov
jle
adc
push
jo
dec
push
adc
je
jl
jo
mov
mov
pop
imul
hlt
arpl
xchg
aaa
jne
dec
adc
pop
sbb
mov
cwtl
int
mov
fidivs
cmp
fisubrs
sbb
jl
sub
hlt
xor
ret
adc
dec
es
inc
ret
fwait
std
or
mov
imul
cmp
imul
inc
ret
decl
sbb
xlat
cmpsb
call
mov
sub
xchg
pop
adc
in
push
mov
outsb
in
mov
cmpsb
ret
outsb
testl
xor
cpuid
push
loopne
test
xchg
jmp
jg
sti
stos
sar
mov
adc
ljmp
out
cltd
xor
out
mov
sub
jo
inc
xor
xchg
cmp
in
mov
cld
cltd
sti
int
lret
adc
push
lret
mov
sub
es
int
das
mov
and
adc
xchg
lods
sub
in
lea
and
addr16
jbe
sub
movsb
data16
dec
sub
mov
inc
mov
xchg
int3
stc
stc
orb
stc
int3
test
sbb
mov
sbb
xor
push
mov
imul
testl
nop
pusha
insl
cwtl
mov
popf
andb
movsb
xchg
cmpxchg8b
mov
insl
jg
mov
push
iret
cmc
mov
xor
ss
insl
pop
pusha
dec
mov
push
mov
sti
sahf
xchg
outsb
hlt
cmc
popa
ja
nop
sub
sbb
push
push
pop
repz
xchg
xchg
cld
jmp
imul
jmp
cmp
pop
test
sub
jns
jno
mov
call
pusha
add
dec
pop
int
enter
dec
and
cmp
dec
xor
xchg
shrl
divb
push
pop
add
fs
jns
xchg
popa
add
cmc
stos
das
sbb
jecxz
cli
push
jo
pusha
xlat
jns
fcoms
inc
cmpl
int3
push
xor
shl
arpl
clc
fsubl
dec
cmp
mov
mov
out
lods
ss
push
adc
cmp
testb
inc
daa
push
ss
fstp
add
mov
mov
je
adc
mov
adc
insb
mov
cmpsl
cs
cmp
std
je
or
dec
add
mov
add
mov
and
daa
and
in
sbb
push
xor
xchg
flds
scas
fildll
mov
cs
cwtl
cmp
out
loope
scas
or
xchg
add
jmp
shll
dec
mov
sbb
pop
ss
fbstp
pushf
mov
adc
xor
imul
cmp
mov
push
daa
das
mov
pop
aas
popa
cmp
movsl
cmp
and
adc
inc
jecxz
push
mov
push
cmpsb
roll
addr16
fstl
adcb
sbb
loop
adc
mov
nop
adc
xchg
sub
call
jge
add
mov
push
mov
loopne
cmp
push
add
jmp
sbb
lret
test
stos
push
push
jbe
adc
xchg
xchg
sbb
add
out
out
mov
lahf
aas
and
jb
dec
jbe
cmc
sub
jne
mov
xor
mov
mov
fninit
pop
fadds
xchg
test
pop
fidivrl
je
movsl
mov
aas
dec
push
std
mov
sbb
xchg
sarb
mov
cmp
inc
test
or
outsl
iret
mov
out
test
subl
enter
int
pop
les
xchg
popl
idivl
and
std
shl
pop
jle
mov
dec
jbe
jb
dec
adc
jns
sub
int
data16
scas
adc
insb
or
and
les
rclb
xlat
int
dec
sti
adc
ret
jb
rcr
pop
push
shlb
mov
pusha
loop
xchg
jnp
pusha
cmp
or
mov
xor
dec
inc
jb
mov
fsubl
push
sbb
xchg
insb
bound
jecxz
mov
add
lret
xor
movsb
pop
mov
pop
mov
sbb
lcall
out
xchg
rcl
jo
mov
in
dec
aad
adc
pop
out
mov
dec
jns
mov
inc
sub
icebp
push
cs
and
daa
cld
add
mov
ds
into
cmp
call
fcmovbe
jb
imul
loop
testb
popf
pop
daa
pop
pop
mov
iret
dec
xchg
or
add
push
mov
cmp
fwait
je
mov
push
xchg
inc
add
dec
jb
bound
add
lret
fsubr
sbb
in
ret
and
mov
mov
mov
int
fsubs
adcb
mov
push
fwait
addr16
das
add
scas
jne
push
or
lods
adc
clc
scas
mov
cmc
cmp
push
out
popa
jb
and
adc
push
fs
jns
jecxz
cmp
fcmovnb
and
cmc
sub
mov
test
fcomp
inc
push
dec
stos
xchg
jmp
jmp
mov
movsl
dec
les
mov
sub
sbb
or
push
cld
sbb
fcmovu
jnp
fs
inc
nopl
pop
xchg
push
xchg
xor
jno
inc
inc
cmc
cmp
dec
mov
pop
test
dec
mov
aas
nop
in
cmp
cmc
scas
insl
lcall
mov
mov
jp
xlat
ficoms
mov
pop
or
ficomps
movsl
adc
stos
out
cld
xchg
mov
lret
mov
fbstp
adc
push
divb
jp
pop
xor
xchg
xchg
nop
call
lret
pop
mov
pop
jne
mov
dec
lret
inc
daa
xchg
inc
add
lret
aad
inc
out
addr16
inc
es
pop
xchg
or
sbb
aaa
mov
je
imul
mov
ss
push
push
popa
mov
stc
mov
inc
xchg
insl
idivl
mov
out
jb
xchg
ljmp
or
ja
xor
fisttps
popa
dec
je
test
pop
out
idivl
icebp
mov
mov
push
jmp
cld
add
loope
jecxz
and
xchg
std
jmp
enter
rclb
movsl
lea
out
mov
clc
imul
in
mov
stc
jg
pop
cli
stos
jecxz
mov
test
movb
or
or
cmp
iret
cmpsb
jle
and
mov
repnz
insl
and
stos
cmp
mov
jne
mov
xor
push
mov
jg
push
mov
jp
test
rclb
fisttps
mov
mov
mov
xchg
mov
mov
pop
insb
cmp
jge
cwtl
pusha
mov
mov
push
or
test
adc
sbb
lock
push
xor
pushf
mov
mov
push
outsb
adc
movsb
lret
stc
ret
nop
cmp
cmp
mov
daa
test
lods
stos
mov
pop
dec
ljmp
cmp
and
mov
mov
jle
mulb
push
jns
dec
nop
ret
pop
mov
adc
inc
adc
push
sbb
push
pop
and
sub
je
xor
pop
jae
addr16
movl
outsb
and
rolb
arpl
fmuls
pop
shl
repnz
sbb
stc
add
and
xor
push
xchg
mov
xchg
mov
mov
push
add
push
push
xor
xor
aad
loopne
shl
push
movsl
ss
adc
mov
xchg
out
movsl
fcmove
jp
push
out
and
shlb
stos
int
dec
daa
xchg
jne
inc
inc
xlat
repz
and
xor
xor
ja
loopne
jp
jge
xor
scas
je
imul
idivb
add
andl
scas
in
movsb
mov
inc
ret
jmp
flds
sub
iret
arpl
stos
icebp
inc
xlat
adc
cmp
stos
notl
pop
add
leave
je
sbb
and
xor
inc
mov
mov
int
inc
les
adc
pop
fsubrl
mov
mov
push
out
loope
mov
mov
or
or
arpl
xlat
arpl
inc
pop
scas
push
cmp
or
mov
test
dec
cmc
pop
jb
cwtl
fadd
adc
jle
inc
jns
call
idivl
jecxz
lods
sbb
mov
push
or
jno
xchg
pop
scas
icebp
jne
add
add
jbe
fdiv
xor
mov
pop
pop
mov
rcl
fadd
jp
or
nop
outsl
sbb
sbb
int
mov
clc
stc
cmp
fdivr
mov
inc
or
repnz
push
decl
mov
scas
xor
push
sbb
jg
insb
mov
mov
inc
sbb
iret
push
pop
adc
pop
dec
mov
loop
push
in
or
adc
jae
fs
out
insl
test
das
popf
test
xchg
lret
gs
insb
jp
lret
out
pop
lret
ds
ja
sbb
pop
add
pop
popa
roll
ljmp
stc
inc
imul
insb
sub
adc
icebp
adc
pop
xor
mov
fildl
mov
test
mov
movntps
mov
scas
scas
into
mov
xchg
and
xchg
mov
fwait
popf
add
mov
adc
xorl
mov
push
push
push
ret
in
xor
in
adc
jl
in
repz
fwait
mov
dec
stos
movsb
jle
sub
sbb
dec
adc
loopne
dec
cmc
movsb
sub
pop
out
sub
cwtl
xor
std
push
in
repnz
ret
std
inc
data16
inc
xchg
and
pop
jmp
mov
adc
in
stos
sub
cmpsl
sbb
stos
icebp
xlat
popf
call
xchg
pop
and
into
or
adc
inc
and
into
pushf
and
pushf
inc
out
ss
pop
ds
cwtl
out
cmp
and
jp
xchg
cmpsb
lcall
das
sbb
lcall
or
push
mov
mov
dec
add
mov
lret
inc
cld
mov
xchg
movsl
icebp
repnz
movsl
jmp
push
pop
int3
divb
mov
mov
insb
mov
push
icebp
inc
repz
hlt
push
shll
stos
jo
mov
mov
icebp
int3
cmp
ja
clc
repz
adc
jecxz
pop
stos
adc
adc
out
xor
push
sub
push
push
movsb
dec
hlt
adc
mov
lcall
gs
and
xor
fs
mov
xor
sub
sti
je
std
cmp
mov
push
push
sti
jle
or
sbb
ss
pop
jmp
int
add
aad
or
jmp
lahf
xchg
sbb
cmc
adc
dec
dec
cld
imul
fnsave
outsb
inc
mov
mov
mov
int
jne
push
cmp
inc
mov
cli
outsl
xor
in
mov
xor
lcall
jo
call
jecxz
push
mov
in
push
pop
push
stos
out
subb
pop
xor
outsl
rcr
add
mov
addr16
or
jns
out
adc
jae
rcl
leave
into
bound
int
add
lock
test
mov
or
dec
dec
daa
add
sub
sbb
popf
adc
xchg
jmp
loope
mov
sub
mov
xchg
stos
ljmp
lret
rorb
pop
fldcw
xorl
dec
cs
mov
scas
repz
fcmovu
ficoms
imul
cmp
mov
and
call
jmp
fmull
imul
subl
mov
enter
insl
inc
sub
addb
sbb
cwtl
enter
out
add
push
mov
or
roll
int
adc
addb
and
inc
xlat
xor
mov
jne
xlat
sbb
jne
pop
sahf
sub
jno
fisttpll
insb
ljmp
jecxz
add
mov
mov
test
icebp
cs
insb
push
fisttpll
xor
mov
faddl
loope
cmp
fists
test
stos
imul
pop
cltd
ja
loopne
lcall
adc
fisubs
inc
pushf
fmuls
stc
adc
mov
pop
int
cmpsb
hlt
insb
repnz
rcr
mov
leave
pop
add
or
and
inc
jns
xor
pusha
imul
cli
lock
je
cmp
jnp
or
mov
mov
loope
lret
mov
pop
inc
push
test
sbb
mov
push
in
in
cmp
xchg
cmp
mov
pop
sub
pusha
stc
adc
sub
icebp
fsubs
mov
pop
rclb
sub
nop
dec
ret
pop
mov
popf
addr16
jecxz
mov
notb
into
imul
inc
cltd
sarb
lret
aam
or
sbb
sbb
pushf
pop
push
mov
mov
jge
push
lahf
jl
sbbb
out
divb
test
mov
xor
pushf
cld
xchg
loop
pop
fs
into
jecxz
dec
push
mov
push
add
jmp
jnp
movsl
aad
scas
adc
push
cmp
xor
imul
rcl
adc
int
div
mov
nop
add
jbe
push
mov
fnsave
pop
xchg
sahf
orl
les
dec
mov
push
dec
jne
pushf
mov
mov
mov
mov
jl
repz
dec
in
xchg
mov
shrl
js
test
scas
mov
scas
or
out
push
cmp
lahf
addr16
push
shrl
movsl
in
push
jne
pop
sarl
call
mov
cmp
pop
rcll
push
repz
inc
adc
lret
or
ret
or
out
enter
xor
enter
adc
nop
or
mov
pop
pop
std
loopne
mov
subl
ffree
movsb
sbb
push
fcoms
cmp
shrb
rcrl
mov
mov
jbe
fiaddl
jns
lcall
movsl
jp
push
int3
lock
adcl
insl
mov
ja
repnz
popa
enter
lcall
jmp
into
cmp
mov
xor
out
add
popa
add
inc
adc
push
xchg
push
mov
pop
jecxz
push
dec
push
pop
cs
xchg
sbb
jl
test
push
add
mov
cmp
xchg
cmp
aaa
fwait
ds
pop
sub
call
or
aad
popa
insb
clc
dec
mov
sti
sub
inc
sub
xchg
pop
jecxz
loop
xchg
jno
call
push
dec
sub
test
xor
loop
push
mov
jo
inc
mov
or
and
push
adc
stos
cltd
lahf
dec
push
scas
xchg
movsl
out
sti
ffreep
lods
mov
subl
pop
or
js
testb
movsb
cld
dec
aas
pop
call
or
cs
test
test
push
cmp
xchg
cmp
jb
outsl
popa
xchg
push
xor
jae
or
or
mov
mov
mov
loop
inc
cmp
and
sub
out
xchg
mov
jns
int
in
or
arpl
orl
sbb
lcall
xchg
mov
icebp
push
add
div
push
jl
adc
adcb
popa
push
mov
pop
sbb
cltd
lea
cltd
loop
cmp
sbbb
repz
push
xchg
dec
in
or
test
adc
jg
pop
mov
insb
jmp
insl
hlt
inc
and
gs
pop
and
imul
adc
das
cwtl
scas
mov
lea
sub
pop
andl
or
push
mov
sub
xchg
ret
stos
mov
sub
fcompl
sbb
push
insl
push
es
shl
dec
jmp
nop
push
mov
fisubs
or
cmp
in
divb
fidivl
mov
mov
sbb
nop
and
add
push
movsb
pop
pop
pop
out
jns
mov
inc
lock
pop
into
push
mov
mov
aam
lcall
ror
insl
rcrl
jg
lock
push
subl
inc
push
ds
insb
in
shlb
xchg
stos
inc
xorb
inc
pop
sbb
popa
test
dec
ror
mov
add
je
sbb
icebp
or
imul
fs
jb
dec
xlat
sti
mov
leave
xor
push
addr16
pusha
lods
pushf
lods
dec
mov
add
ret
xor
mov
cli
stos
jbe
inc
push
mov
cmp
xchg
movsl
aad
andl
jecxz
mov
mov
xlat
mul
push
adc
int3
stos
mov
mov
fcmove
pop
aaa
jp
mov
mov
sub
jg
mov
or
pop
rcrl
repz
dec
in
pop
pop
call
mov
jmp
pop
mov
xchg
sti
pop
sbb
push
mov
pop
rclb
outsl
bound
movsb
test
dec
sbb
in
test
sahf
in
inc
pop
ljmp
movsl
pop
es
inc
cmpsl
lcall
inc
adc
xchg
fbld
and
call
push
mov
adc
cmp
add
jo
cmp
daa
scas
xchg
pop
mov
test
mov
adcb
aad
xor
sarl
inc
popf
xchg
dec
outsb
fbstp
pop
nop
js
cmp
and
push
adc
mov
nop
mov
lods
adc
aaa
add
decl
and
xor
imul
mov
in
lods
sbb
fucomip
jno
insb
popf
add
add
inc
repz
pop
xchg
int
fmuls
pop
sub
mov
xchg
shlb
sbb
dec
imul
jmp
mov
add
mov
mov
fs
aad
mov
jl
inc
cmp
xor
mov
insb
sbb
mov
add
or
sti
cmp
aas
xor
jge
gs
xor
push
jge
xor
fdiv
jne
enter
int
push
xchg
xchg
inc
movsb
mov
add
add
dec
and
call
mov
rorl
int3
mov
jecxz
lret
scas
push
pop
xor
push
out
test
push
mov
mov
aad
clc
es
lret
repz
addr16
mov
shlb
jae
push
xor
add
pop
mov
jecxz
addb
or
fwait
aad
fstpt
les
mov
mov
cs
jge
out
aam
cmc
or
sbb
out
lods
push
dec
idiv
sbb
sbb
add
mov
test
je
pusha
aad
nop
mov
pop
mov
pushf
outsb
sbb
dec
and
and
out
fstl
jle
arpl
rol
xor
push
out
iret
out
cmp
lret
push
inc
dec
inc
sub
mov
sbb
push
sbb
push
fisttps
mov
scas
aad
dec
aam
popf
movb
jmp
cmp
inc
mov
lock
sbb
stos
pop
js
jnp
xor
aas
cs
arpl
int3
xor
rol
gs
repnz
lahf
add
das
fmul
cmpsl
jecxz
jne
lret
test
popa
outsl
jb
or
scas
repnz
dec
push
lods
push
xchg
insb
cmp
xlat
stc
fincstp
js
fsubl
or
xchg
mov
sbb
ss
and
mov
lock
add
jmp
dec
push
lea
mov
mov
in
imul
jmp
das
ss
xor
mov
cmp
ds
sub
aaa
xlat
nop
lret
into
lret
idivl
inc
stc
int3
outsl
jl
and
les
pop
xchg
jo
inc
iret
fdivrs
push
push
lods
push
sbb
cmpsl
pusha
inc
mov
cmp
pop
sbb
inc
adc
ret
and
jne
or
nop
push
jnp
mov
imul
lods
pcmpeqb
test
repz
enter
sub
inc
andb
or
fidivl
sbb
lret
and
dec
mov
cwtl
arpl
push
loopne
add
sahf
lret
or
jne
add
fisttpl
lds
imul
mov
add
or
push
sub
ss
add
popf
add
mov
test
and
mov
addr16
mov
test
push
cmp
popa
movsb
stc
dec
dec
fbld
dec
lock
xchg
cwtl
test
outsl
cmp
std
clc
jmp
dec
adc
sub
sub
lret
xchg
outsl
call
push
hlt
xor
inc
icebp
fsubrs
xor
push
cld
lahf
mov
xchg
loope
push
loop
inc
mov
mov
and
jb
mov
ret
xchg
mov
cmp
pop
in
cmc
jl
mov
jbe
int
adc
push
jle
jle
pop
ljmp
jmp
icebp
call
out
pop
das
enter
sahf
add
div
add
mov
dec
pushf
daa
mov
inc
adc
mov
sbb
mov
hlt
repnz
jmp
xor
shr
lock
lods
shrl
loop
andl
mov
cwtl
xor
fwait
jmp
adc
jp
lods
sar
cs
jae
pushf
sub
inc
in
faddl
mov
cmpsb
mov
mov
mov
call
jae
and
adc
push
loopne
mov
mov
stos
das
xor
xchg
imul
clc
or
or
int
or
sbb
xor
roll
xchg
fdivl
sbb
pop
cmp
dec
aad
pop
sbb
imul
mov
pop
mov
add
ret
adc
aad
mov
inc
lcall
xlat
adc
inc
and
xor
mov
sub
insl
xchg
ss
rorl
dec
cmp
adc
ret
fdivrs
push
leave
or
sbb
jae
scas
sub
orb
mov
inc
pop
sbb
inc
sub
jns
mov
subb
adc
sbbl
cmc
out
stc
pop
fmull
mov
std
or
mov
loope
cmc
daa
lret
pop
xor
and
jns
xchg
dec
daa
stc
mov
negl
xlat
xchg
imul
arpl
iret
push
cmp
repz
out
js
and
movsb
imul
jp
subb
push
cwtl
cmp
or
shrb
jg
data16
inc
or
and
pop
pop
jae
xchg
test
dec
arpl
out
add
pop
xchg
cli
sub
ffreep
movsb
mov
jno
xchg
js
data16
arpl
out
pop
inc
call
pop
cmp
push
xor
jbe
jb
mov
or
mov
push
fdivr
rolb
sub
mov
adc
lret
shrb
mov
xchg
int
and
push
mov
inc
in
imul
pushf
cmc
lret
loopne
enter
lret
jg
and
mov
call
xor
cli
jl
fadd
inc
and
aad
fwait
jl
pop
pop
outsl
in
lret
adc
add
stos
cmc
sarl
add
sub
fldt
in
dec
mov
push
mov
pop
insb
dec
pop
jp
inc
insb
test
subb
rclb
roll
add
sbb
push
movsl
xchg
and
dec
xchg
fwait
xor
rcrl
inc
xor
and
jbe
pop
popa
mov
lret
mov
pop
ds
mov
add
daa
xchg
dec
or
push
push
xchg
call
and
rolb
loop
rolb
gs
sbb
mov
mov
shl
dec
xchg
loopne
or
xlat
add
into
pop
les
mov
mov
sbb
iret
adcl
fnstcw
add
mov
and
movsl
pop
bnd
add
mov
cld
test
or
in
jo
inc
mov
pop
lahf
jmp
sub
sbb
cmp
in
out
dec
andps
and
lahf
movsl
fcompl
pop
pop
loop
arpl
jns
lcall
push
mov
addr16
loope
add
into
lds
pop
mov
pop
mov
or
dec
push
jo
cmp
insl
sbb
add
cmp
dec
insb
cmp
insb
out
loopne
or
adc
fcmovnu
mov
pop
cmp
fbstp
fbld
sub
imul
sbb
cwtl
cmc
dec
pop
cmpsl
push
xor
std
fs
add
or
mov
inc
mov
xorb
sbb
mov
pop
xor
dec
pusha
shrl
mov
sub
or
mov
test
mov
je
xor
loop
pop
mov
shlb
jp
inc
call
sbb
rolb
or
cmp
insl
nop
daa
dec
mov
xorl
popf
dec
adc
mov
lods
mov
xchg
cmc
jnp
subb
mov
pop
cmp
cmpl
stc
in
mov
mov
js
push
sbb
mov
inc
adc
adc
xchg
test
jae
icebp
adc
xor
lods
cli
shl
in
adc
divb
or
push
daa
cmp
mov
dec
not
out
addr16
inc
mov
jnp
mov
mov
lods
lods
out
in
jnp
mov
test
pusha
outsl
jge
add
xlat
pop
and
adc
cltd
xchg
in
jecxz
adc
mov
sub
hlt
test
or
out
pop
test
pop
jecxz
jmp
mull
sahf
lock
lahf
addb
shll
stos
cmpsb
dec
pushf
adc
mov
xor
cmp
fcoms
ljmp
pop
pop
cmp
sub
or
fsubs
jnp
dec
dec
in
sub
scas
or
mov
dec
adc
data16
pop
adc
adc
clc
push
and
pop
cmpsl
lret
or
lahf
jl
mov
std
sbb
int3
jp
add
fidivrs
jge
fsubrl
jmp
mov
jle
mov
jle
sub
rorb
stos
aad
mov
sbb
jg
push
fld
and
xor
mov
xchg
flds
out
push
push
or
idivb
inc
jo
mov
jno
in
pop
daa
dec
ss
test
jb
adc
add
xchg
clc
arpl
dec
loop
fadds
push
sub
aad
gs
pop
mov
inc
push
cmpl
push
xor
xor
mov
cwtl
lods
push
adc
adc
pop
js
mov
loop
pop
icebp
dec
cs
pop
dec
and
rclb
jnp
cld
in
or
lds
fwait
xor
mov
jle
loope
out
inc
mov
push
mov
cmp
js
jp
mov
pop
arpl
lods
cs
xchg
scas
pop
jge
dec
cs
cmpsl
mov
push
rcrl
mov
addr16
cmc
lods
jl
mov
inc
dec
call
and
dec
push
loopne
rorl
jge
mov
sbb
sbb
hlt
adc
idivb
adc
push
mov
insb
inc
sarl
sahf
mov
leave
test
cmc
mov
cwtl
cmc
pop
nop
test
xor
lods
jge
hlt
adc
subb
lds
cmp
es
jg
mov
movsb
outsb
and
push
sub
mov
out
into
adc
adc
xchg
movl
pop
stos
stc
cli
sbb
mov
mov
xor
dec
in
xchg
lahf
or
sarb
lods
mov
cs
or
sahf
jb
cli
mov
sbb
cld
push
push
sub
dec
cmp
loope
jmp
mov
dec
pop
sub
jno
shll
aas
sub
adc
lcall
leave
into
enter
icebp
mov
lds
fstpt
repz
sti
arpl
xor
mov
xchg
fwait
xor
add
repz
je
xchg
mov
xor
insb
mov
add
xor
out
inc
mov
mov
mov
mov
sub
in
push
dec
push
mov
fisubl
inc
ss
add
mov
leave
push
lahf
jge
dec
orl
sbb
mov
sarb
and
call
add
add
jg
push
push
test
shlb
pop
call
jno
dec
add
inc
shll
rcr
popf
ror
shlb
fs
and
pop
and
jg
scas
xchg
jp
cli
cwtl
je
repz
jno
iret
or
movsl
sub
and
jne
xchg
mov
mov
push
jno
xor
insl
mov
js
inc
inc
cli
icebp
and
gs
gs
add
iret
mov
in
test
or
mov
scas
leave
lock
xchg
hlt
cmpsb
xchg
mov
mov
dec
popl
inc
mov
dec
mov
sbb
fistpl
inc
sub
out
jno
adc
mov
.byte
arpl
addr16
bound
aam
mov
fadds
out
rcrb
xor
mov
push
andb
das
mov
call
jne
jae
mov
hlt
push
fmul
mov
movsl
dec
and
push
jp
int
sub
pop
lock
in
daa
iret
mov
push
jns
jo
mov
loop
fwait
adc
out
sbb
push
dec
jp
repz
adc
scas
repz
jl
movsb
insl
push
cmp
or
js
mov
sbb
pop
sbb
enter
add
cltd
test
scas
mov
arpl
and
out
mov
xchg
adc
jecxz
divl
loope
cmpl
lret
cmp
mov
out
pushw
mov
movsl
nop
dec
pop
lock
cmp
cli
pop
adc
les
aam
addb
pop
cmp
sub
lock
push
mov
cmpsl
pusha
push
cmp
or
lret
fistl
ss
cmc
mov
mov
mov
xor
lods
mov
in
or
addb
inc
push
push
shr
cmp
push
dec
aaa
rolb
rolb
leave
jb
pop
int
pop
jb
push
out
call
scas
loop
pop
or
fadds
cmp
mov
push
lods
fwait
dec
push
arpl
hlt
aam
imul
out
rolb
es
in
mov
inc
jo
add
mov
cltd
loope
out
adc
orb
adc
shl
xor
push
mov
mov
sub
adc
pop
mov
cmp
adc
xchg
cmpb
shll
xchg
cmc
sub
push
or
gs
cmc
aad
sbb
cmpsl
sub
add
fdivl
add
pop
xchg
sete
push
mov
jns
ss
out
hlt
incl
xchg
pop
rorb
rcr
xor
ss
lods
inc
in
adc
enter
lds
stos
cmp
and
mov
inc
cmp
leave
ret
aad
addl
in
pop
sbb
pop
gs
lret
or
jo
add
mov
outsb
pop
cmc
insl
and
in
lock
psrad
jnp
clc
mov
cld
cltd
dec
leave
mov
dec
sub
outsb
xchg
sbb
add
sub
xchg
or
cmc
mov
iret
rcrl
dec
pop
lods
in
jno
dec
push
jmp
dec
cld
mov
pop
add
or
out
pop
push
mov
jle
lcall
sahf
addw
pop
pop
mov
pop
jnp
icebp
out
insb
scas
sbb
xchg
xchg
push
cmpsl
in
mov
jns
jno
or
shlb
inc
xchg
fidivs
mov
xor
dec
ret
pop
js
xor
jle
pop
scas
cs
push
insb
aaa
mov
inc
fiaddl
inc
pop
repz
push
inc
xor
inc
mov
or
push
shlb
sbb
xchg
cmpsl
xchg
xor
and
js
jle
push
mov
and
ret
adc
adc
or
fists
call
xchg
xor
test
mov
inc
xor
add
sbb
scas
fstpt
push
pop
bound
in
mov
inc
test
mov
shr
shlb
pusha
pop
aam
and
in
loopne
add
test
loop,pn
dec
inc
idivl
mov
xchg
pusha
arpl
push
jl
push
mov
aaa
dec
xchg
cltd
push
aas
add
stos
jmp
sbb
cs
mov
lahf
jmp
add
push
fistpll
sti
daa
roll
fisubl
cmp
scas
adc
adc
jge
sbb
roll
pusha
mov
or
dec
mov
and
jae
insl
pop
pop
lock
add
test
rorb
xor
sbb
inc
push
mov
add
and
push
lods
sbb
pop
outsl
cmp
cmp
add
pop
gs
bound
jb
inc
mov
outsb
loope
dec
mov
or
stos
dec
out
shll
movsl
ljmp
repz
icebp
sub
push
lock
fdivrl
cmp
test
inc
or
int
jbe
call
pop
arpl
js
imul
sub
negb
add
ds
add
inc
sub
clc
neg
and
cmp
loop
xor
xor
aam
outsl
and
jno
jo
in
push
mov
fldz
hlt
or
dec
mov
mov
stos
sbbl
outsb
xchg
out
mov
sub
xchg
jb
fidivrs
jo
jl
xor
pop
push
rorl
inc
add
das
sub
dec
mov
and
or
pop
andb
daa
ja
cmp
leave
iret
push
cmp
into
inc
pop
cli
push
popf
rcl
aad
sbb
insb
xchg
mov
orb
loop
stos
mov
inc
test
je
je
lods
xchg
daa
pop
sub
inc
mov
iret
mov
ss
ucomiss
stos
inc
addr16
mov
mov
or
xor
pop
leave
popl
loop
pop
xor
xor
mov
xor
inc
inc
je
mov
push
clc
mov
pop
xor
mov
in
mov
rclb
pusha
lret
add
sub
pop
pop
mov
decb
xchg
stc
fildl
lahf
iret
cmp
in
sub
xor
in
stos
call
cli
iret
fildl
pusha
cmc
les
mov
imul
adcl
ret
pop
aaa
out
dec
sub
sbb
push
cs
inc
mov
cltd
mov
and
sub
movsl
xor
int3
ja
jg
arpl
cltd
xorb
aas
movsb
jns
mov
in
sbb
sti
sub
repnz
int
inc
xchg
push
pop
lcall
scas
pop
cltd
js
mov
ret
enter
cmpsb
sub
xor
lods
aas
leave
imul
and
mov
adc
dec
in
inc
add
jae
mov
out
lods
out
mov
add
scas
fildll
dec
jo
add
dec
shlb
add
and
pop
add
xchg
hlt
adc
stc
sti
in
xchg
push
outsl
push
std
out
data16
adc
adc
jb
popf
adc
lret
add
xchg
popf
push
test
adc
push
aam
lock
sub
je
test
push
jns
jbe
mov
out
add
xor
loop
test
mov
andb
mov
dec
and
xorl
adc
mov
sbb
enter
mov
ret
jl
mov
aaa
pop
insl
shll
cmp
mov
rorb
inc
out
repz
jnp
inc
rorb
jl
or
mov
push
icebp
adc
mov
mov
inc
je
out
or
jno
cmp
cmp
pushl
pop
jge
inc
mov
test
xchg
data16
cld
pop
out
dec
sub
iret
out
push
xor
push
cltd
iret
inc
aaa
cmc
ja
ret
inc
stos
and
imul
and
sub
cmp
fucomp
xor
lret
cmpsl
popa
mov
inc
mov
cmp
std
mov
test
sbb
or
cmp
xchg
je
fwait
and
cmpsl
cmp
mov
xor
jb
movsl
dec
and
addl
iret
call
cmpsl
adc
pop
inc
test
sub
test
cs
push
or
inc
fdivr
push
sub
and
outsb
sti
cld
adc
test
pop
ja
repnz
cmp
addb
and
xchg
sbb
mov
inc
sbb
arpl
repz
add
out
and
push
inc
jo
icebp
pushf
jge
xor
mov
ret
fadds
pop
cmp
mov
pop
cmpsb
mov
pop
xlat
pop
out
bound
dec
adc
or
testb
sbb
mov
sub
leave
fcmovnu
adc
xor
pop
mov
gs
pop
pop
lds
inc
adc
mov
adc
std
xor
scas
mov
pop
andb
mov
shrb
fsubp
mov
xchg
lods
aam
into
xchg
sbb
xchg
jno
pushl
cmc
call
gs
ret
mov
in
dec
adc
cmp
or
xor
or
mov
cmp
popf
xor
mov
pop
add
rcrb
sti
and
cmp
and
adc
stc
mov
notb
mulb
cli
leave
aas
cld
lcall
mov
shlb
mov
in
cmp
cld
and
push
out
sbb
mov
paddb
mov
jno
mov
bnd
repnz
and
stos
push
or
fcmovu
mov
fs
add
cmp
adc
jl
out
sahf
nop
sub
fs
je
outsb
out
and
mov
fs
mov
pusha
popf
push
mov
out
popf
mov
mov
mov
pop
arpl
jo
jmp
ljmp
loope
xchg
sti
inc
xor
bound
dec
fldl
jno
lret
scas
ja
dec
cmp
pop
cld
or
repz
push
scas
out
cs
std
das
lock
shrl
push
inc
ss
mov
pop
cmpsb
pushl
jnp
dec
jecxz
jl
mov
les
inc
dec
ljmp
sbb
dec
cmp
scas
sub
into
fidivrl
insl
fisubrl
pop
outsl
push
cmp
and
cmc
andb
xchg
add
pushf
mov
sub
int3
or
cltd
sbb
in
ja
adc
and
adc
add
stc
dec
lret
dec
ds
mov
gs
out
mov
mov
sub
inc
inc
jle
inc
call
and
das
pop
gs
xor
add
sub
mulb
mov
out
sub
xchg
fsubrs
pop
fsubrl
mov
xlat
ret
fs
adc
fisttpl
lret
push
sbb
lds
xchg
or
xchg
cmp
stos
clc
lcall
loope
in
xorb
aaa
jp
push
stos
les
sahf
shl
test
cmp
es
add
pop
out
aad
out
repnz
pop
iret
mov
loopne
mov
jg
cmpsb
push
insl
xchg
loope
push
cltd
out
test
cmp
xchg
and
imul
xor
xlat
addr16
popl
adc
stos
jo
and
clc
in
sbb
sbb
in
in
inc
cwtl
mov
movl
adc
leave
ja
int3
mov
mov
mov
mov
lods
into
push
and
pop
mov
test
cmpsl
inc
mov
jno
pop
dec
cmp
mov
fwait
pop
and
imul
and
rorb
mov
shll
sub
jl
xchg
pop
mov
test
test
pop
and
inc
ss
pusha
enter
add
test
cltd
fdivl
lcall
fimull
cmpsb
imul
pop
xchg
notrack
ss
and
hlt
pop
insl
push
repnz
xlat
xchg
lods
lea
add
rcll
or
imul
mov
push
cmp
jbe
cmpsl
xor
into
in
inc
cmp
gs
adc
gs
sub
test
je
xchg
sti
add
dec
fcomps
or
adcl
push
mov
lret
bound
mov
loope
fcomps
mov
test
popa
push
add
js
cmp
xor
jecxz
pop
fidivrs
fwait
mov
mov
mov
lods
xchg
imull
fstps
push
das
lock
shrl
stc
pop
xor
push
pop
push
sub
int
pop
jg
mov
jmp
popf
inc
sbb
sub
test
into
jb
mov
mov
daa
das
inc
add
scas
push
adc
fidivrs
xchg
cld
lock
mov
lcall
outsl
mov
fstpt
add
fdivl
test
jle
adc
cmp
push
clc
cmp
imul
push
push
fsubrs
mov
adc
sbb
xor
xchg
ror
fdivr
add
notl
pop
mov
xor
mov
int
fcomps
xchg
cmpsb
sub
mov
sarl
fbstp
notb
imul
cmc
rorl
imul
test
ficoml
lods
mov
leave
sub
adc
sar
or
push
ss
adc
add
jb
lock
mov
in
inc
cmp
mov
sarb
cmpsl
cmp
pop
lds
out
jp
push
cmp
inc
fisubs
aad
adc
subl
mov
sbb
aas
cld
xchg
aaa
jecxz
jp
pop
out
jge
dec
dec
cwtl
stc
daa
outsb
jnp
xor
in
sub
xor
xor
imul
push
and
xchg
lea
mov
jne
mov
xor
scas
pop
lods
into
inc
mov
or
add
out
xchg
adc
cmp
or
fucomp
dec
sbb
cmc
cs
pushf
push
ret
dec
and
sbb
inc
ret
js
add
div
ja
nop
rorl
push
jmp
sbbb
fiadds
cmpsl
mov
cmpsl
subl
jmp
ficomps
loope
cmpsb
icebp
movsl
add
push
seta
enter
dec
inc
outsl
sbb
xlat
fdivr
push
fdivs
xchg
push
xor
or
pop
cmpsb
or
jno
sub
enter
mov
mov
mov
outsl
lock
pop
cli
inc
cli
push
xchg
or
and
or
cmp
xor
lea
int3
xchg
fbld
arpl
nop
enter
in
add
and
adc
test
pop
mov
out
jnp
adc
mov
fistl
or
push
adc
mov
jle
and
js
xor
cwtl
pop
xchg
out
mov
lret
inc
fstps
xor
xchg
add
fwait
les
pop
cld
push
and
lds
and
test
or
lret
repnz
daa
out
cmp
adc
push
adc
fwait
sbb
jnp
dec
or
nop
insb
jmp
popf
das
push
outsb
xchg
sti
jbe
push
jge
adc
jae
cmp
push
movsl
je
inc
cs
or
xor
xchg
push
ret
fsubrs
mov
sarl
add
stos
xor
push
and
push
add
add
push
adcb
pop
cmpsb
ljmp
pop
inc
ss
pop
adc
ljmp
pop
lahf
pop
lods
push
mov
subl
in
xchg
stos
cli
adc
dec
daa
mov
mov
push
stos
popa
jnp
cmp
inc
ror
add
jp
das
fmulp
mov
test
daa
loope
add
leave
int
push
mov
cmc
mov
cmp
xchg
xchg
jno
mov
xchg
pop
jnp
inc
cmp
les
push
ja,pn
out
inc
push
movsl
mov
bsf
xor
loopne
inc
xlat
rorl
or
mov
mov
sbb
jb
mov
mov
icebp
cwtl
add
mov
add
xchg
int
test
in
and
push
int
and
test
dec
and
lret
cmp
mov
hlt
mov
push
loope
lret
cmp
or
js
ljmp
jno
sti
mov
cmc
lock
ss
xlat
push
mov
movsl
add
hlt
inc
lds
add
push
mov
pushf
ja
icebp
jmp
xchg
mov
fadds
out
test
xchg
xchg
mov
or
int
jl
jecxz
xchg
repnz
lock
xchg
lods
and
add
popf
cmpsb
adc
out
xor
add
push
dec
cmp
test
stc
dec
add
xchg
nop
mov
mov
mov
pop
dec
fbstp
lahf
jne
stc
push
pop
adc
mov
rorb
rcl
mov
std
jg
in
std
pusha
inc
jge
mov
inc
mov
add
rclb
dec
add
movsb
xor
stos
lea
into
sbb
and
mulb
inc
mov
push
outsb
stc
rcll
cmp
imul
cmpsl
shl
jne
jbe
mov
or
addr16
and
enter
lea
sbb
pop
iret
sbb
popf
or
add
repz
pop
negl
sub
je
cmp
out
pop
xchg
outsl
mov
leave
pop
mov
dec
adc
iret
jge
sbb
lock
cmp
mov
mov
xor
pop
inc
mov
xchg
xchg
dec
clc
sub
mov
fldcw
iret
add
movsb
mov
mov
repz
aad
sub
lahf
lock
test
rorl
int3
dec
int
rcrl
ret
cmp
cs
sahf
int3
iret
scas
out
jg
or
jae
aad
arpl
int
jmp
stc
lcall
adc
insl
sar
and
int3
mov
fidivs
cmpsl
rol
adc
std
sbb
andl
popa
xor
add
push
sub
aas
push
imul
cmp
jnp
ja
sub
cwtl
jmp
int3
scas
mov
jnp
and
je
adc
ja
push
fstl
out
sub
xchg
mov
cmpsb
and
push
scas
or
stc
xchg
in
sub
imul
addr16
imul
sbb
out
loope
js
ja
xchg
jb
xchg
dec
lea
jecxz
pop
or
inc
pusha
scas
arpl
jbe
pop
xor
xor
push
lahf
insl
stos
in
jmp
jle
nop
mov
and
mov
add
fs
outsl
loope
orb
cmp
in
push
test
push
mov
mov
or
xlat
inc
arpl
xchg
aas
cmp
jbe
jo
pop
sbb
cmpsb
push
mov
and
xchg
push
mov
popa
shlb
sbb
enter
mov
sub
jle
dec
jns
js
mov
rcrl
rclb
sti
insb
jge
sbb
jp
dec
loopne
call
stos
lret
or
pop
dec
fbld
scas
jp
push
and
cmpsl
mov
or
cmp
sbbl
test
in
add
mov
push
push
cmp
fs
xor
xchg
adc
mov
inc
mov
mov
repnz
pop
sub
cltd
pusha
jmp
push
add
and
adc
sbb
dec
pusha
test
call
push
fisubs
mov
adcb
xor
xchg
inc
xchg
pusha
test
cmc
clc
xor
test
push
clc
in
repnz
js
fadd
push
jns
test
sbb
adc
push
movsl
in
dec
jg
imul
and
mov
jl
jns
leave
outsl
flds
push
inc
sub
scas
inc
jae
jne
dec
cld
inc
mov
cli
or
dec
dec
mov
mov
pusha
mov
cs
scas
lahf
bound
pushf
ret
test
xchg
sbb
insb
cmpsl
int
jno
lods
xor
mov
cmp
lret
stos
mov
fisubrl
push
add
into
xchg
outsl
sub
push
iret
mov
or
pusha
xor
stos
pop
bound
in
inc
jae
pop
add
mov
sbb
cmp
or
lods
mov
es
ljmp
adcb
and
loop
push
fisttpll
in
push
add
adc
or
mov
sbb
movsl
cmp
out
stos
xchg
dec
test
out
xorb
fidivrl
leave
nop
and
fisubrl
and
push
cmp
ljmp
xor
jb
loop
xor
jne
cmp
or
insb
repz
jnp
jns
fs
aaa
add
cmp
inc
fdivr
int
into
push
lock
loopne
pop
push
scas
call
std
es
xchg
bound
imul
or
add
insb
je
je
popa
xchg
cld
in
push
in
inc
sbb
ret
sub
xor
aaa
fcompl
xchg
es
dec
cld
int3
jle
out
xchg
xor
mov
cltd
inc
or
cmp
rcrb
jg
push
pop
scas
cmc
adc
xchg
dec
mov
adc
push
test
movsb
xor
pop
mov
adc
shlb
xchg
or
sub
out
xlat
sbb
xchg
jecxz
imul
testl
pop
jp
movq
stc
add
jnp
test
in
orb
xchg
divb
jl
inc
mov
push
outsb
scas
fs
mov
push
xor
ss
push
xchg
movsb
mov
mov
add
pusha
cmp
xchg
inc
and
push
iret
repz
stos
mov
push
nop
repz
popa
adc
lea
cwtl
mov
inc
sub
cmpsb
lock
loopne
xchg
pop
scas
scas
dec
test
push
push
mov
addr16
inc
in
sub
enter
nop
add
fistps
psraw
jo
sbb
jb
pop
pop
subb
xor
nop
xor
stc
pop
push
lds
daa
ja
mov
add
jns
scas
mov
stos
insl
inc
or
xlat
mov
ss
jmp
fdivs
fidivs
xchg
push
ss
xorl
cmp
mov
nop
jne
or
loope
inc
and
scas
mov
dec
aaa
pop
fdivrp
mov
push
mov
inc
mov
xchg
scas
icebp
test
jg
js
movsl
push
inc
outsl
adc
addr16
push
jno
jno
dec
ljmp
dec
adc
mov
inc
or
sbb
mov
sbb
test
mov
cmp
movsb
pushf
leave
mov
outsb
lods
push
fs
cmpsl
inc
or
cmp
mov
es
in
sti
push
imul
in
fs
popf
in
es
adc
dec
insb
mov
xchg
rclb
in
inc
sbb
call
cmp
jge
testb
mov
sub
cltd
fwait
and
jg
inc
fstl
jae
push
scas
xchg
add
cmpsl
and
lods
mov
test
mov
jne
mov
call
cltd
cmp
mov
cmpsb
adc
cmp
loopne
jns
mov
lret
in
icebp
mov
andb
in
or
loope
xchg
std
shl
popa
push
xchg
jg
mov
jb
dec
dec
jg
lods
fcomps
jge
xchg
mov
jmp
mov
nop
push
jne
mov
mov
sub
lcall
loop
out
cld
fldcw
stos
xchg
push
sub
pushf
roll
mov
nop
inc
pushf
mov
pop
lret
mov
jno
movsl
sti
pop
inc
mov
mov
xchg
in
sbb
inc
pushf
add
dec
shlb
push
dec
push
fwait
mov
loope
in
xchg
pop
loopne
push
je
nop
ret
ljmp
adc
mov
lock
cmp
inc
int
or
lock
mov
or
dec
mov
add
jmp
idiv
test
into
mov
cmp
into
daa
push
pop
push
jg
push
adc
mov
sahf
push
imul
cmpsl
and
bound
pop
pop
bound
mov
testl
outsb
rol
and
add
pop
stc
hlt
sub
mov
adc
or
or
and
shlb
insb
inc
add
dec
aas
or
mov
stos
mull
loop,pn
sbb
cmpsb
dec
popa
adc
aam
xorb
dec
and
mov
in
cmc
lret
mov
mov
pop
cltd
cmp
push
pop
sbb
fdivrs
jecxz
rcll
sub
and
adc
adc
jns
fs
xchg
mov
push
xor
pop
cmpsb
and
ret
sar
hlt
mov
pop
lcall
adcl
push
push
pop
outsb
fwait
push
ljmp
sarl
es
neg
push
mov
sbb
scas
mov
dec
out
aaa
mov
pusha
test
ljmp
shrl
pop
or
es
push
inc
scas
lea
xchg
inc
cmp
lcall
je
mov
or
mov
and
and
out
and
add
inc
and
ss
adcl
mov
cmp
std
jle
push
pop
or
xlat
xor
pop
adc
or
aad
xor
scas
cmp
xor
das
addl
ds
adc
cs
xchg
cs
inc
xchg
fidivrl
sets
repz
sbb
movsb
lret
lret
iret
and
push
ret
or
dec
fnstcw
or
nop
pop
inc
out
ret
icebp
out
push
aas
cmc
jmp
add
mov
sbb
adc
mulb
adc
push
inc
pop
add
shll
es
testb
cmp
test
add
or
popa
adc
and
and
jmp
nop
les
sbb
mov
mov
idivl
ficoml
add
lock
aad
das
jae
das
lahf
xchg
push
gs
cmp
xor
cli
gs
push
int
rolb
or
or
scas
loope
pop
xor
xlat
push
jae
fcmovbe
mov
call
add
icebp
test
adc
int
jno
ss
ds
callw
je
subl
shll
bound
cmpsb
lods
lahf
ret
cmp
mov
mov
sub
mov
ljmp
mov
adc
jle
push
mov
xor
and
lods
push
jno
daa
insl
mov
les
dec
cli
xchg
pop
adc
in
imul
push
insl
xchg
sbb
lret
test
orb
jb
jns
sbb
cmp
sub
adc
into
mov
dec
or
lret
iret
push
lods
cmp
mov
pop
add
sub
adc
js
out
mov
add
or
test
cwtl
mov
pop
movsb
and
in
hlt
push
cltd
cmc
sti
push
inc
cmp
sahf
mov
sub
push
fiadds
pop
lods
negb
outsl
test
cmc
dec
dec
push
into
jb
xor
fiaddl
fistpl
jle
adc
js
mov
pop
dec
jmp
sub
add
mov
sub
iret
insl
adc
dec
shlb
and
cli
pop
cmp
psraw
push
mov
rcrl
ljmp
xor
pop
cwtl
outsb
mull
push
push
jne
inc
push
lret
arpl
xchg
dec
test
outsb
test
sub
mov
inc
pop
xchg
xchg
xor
sub
adcb
mov
xchg
in
push
cmp
in
lds
aam
mov
out
sub
scas
mov
adc
loope
sub
lret
push
aad
cwtl
mov
ja
and
mov
insl
leave
std
and
cmp
inc
mov
pop
mov
sbb
xchg
icebp
push
shlb
pop
das
stos
jp
cmp
into
out
lret
mov
mov
jns
sub
mov
scas
pop
imul
pop
sbb
sub
xlat
sub
adc
insb
xchg
andb
js
outsl
dec
push
call
sbb
loope
rclb
aad
nop
sbb
scas
mov
int
inc
scas
cmpl
subl
imul
out
mov
popf
xor
std
add
rclb
fnstenv
mov
stos
xor
mov
cltd
adc
pop
data16
dec
data16
inc
mov
xchg
js
aad
out
stos
ljmp
push
outsb
int3
in
inc
scas
jns
es
idivb
sbb
push
scas
imul
sub
push
sub
mov
pop
stos
sbb
lcall
inc
lahf
ds
push
lahf
out
lret
dec
sbb
insl
andl
outsb
fwait
fs
fs
les
mov
or
xchg
popf
insb
and
dec
push
jecxz
push
pusha
rorl
mov
pop
outsb
push
and
daa
aam
movsl
bound
sahf
sbb
dec
popf
imul
call
add
mov
xchg
je
fidivrl
into
pop
mov
enter
imul
dec
mov
std
fisubs
push
mov
add
xlat
test
sub
neg
aam
dec
and
cmovae
jg
mov
and
mov
jmp
out
stc
sbb
xor
les
pop
inc
cmp
or
xor
pop
mov
test
push
adc
mov
clc
adc
pop
mov
xor
arpl
sub
xor
icebp
mov
dec
repz
pushf
xchg
loopne
xchg
sub
mov
dec
imul
std
add
adcl
sub
push
jmp
and
mov
mov
xchg
ss
iret
and
movsb
mov
or
pop
pop
out
in
fs
daa
xchg
mov
or
dec
test
test
push
dec
aam
adc
push
in
mov
mov
mov
or
push
jle
adc
push
std
push
adc
call
cmp
jmp
jg
push
sbbb
jmp
sub
pop
adc
mov
out
pushf
pop
subb
test
movsb
loope
mov
lea
xorb
das
bound
jnp
sub
push
mov
xor
mov
int3
seto
sub
mov
or
ds
lret
xchg
jnp
add
cmp
pop
sub
test
icebp
divl
int
sub
imul
cmp
lfs
outsl
push
pop
ficoms
cmc
lods
jge
xor
stc
je
sub
dec
cvtpi2ps
cmpsb
push
movsb
dec
ret
lret
xchg
lods
push
push
jne
int
cmpsl
pop
lock
movsl
jecxz
mov
icebp
test
add
aam
push
push
mov
or
cmp
mov
xor
mov
test
inc
push
push
iret
sahf
sbbl
cmpsb
add
nop
fimull
pop
adc
dec
xchg
xchg
xlat
sbb
mov
in
ret
std
mov
dec
nop
mov
lods
int
stc
lods
xor
aad
xor
add
test
jnp
push
fwait
into
in
lea
jno
add
loop
push
call
or
pop
cmp
jle
into
mov
daa
xor
jecxz
stc
mov
sub
fs
push
out
ret
insl
icebp
mov
or
push
push
enter
dec
stos
xchg
mov
aad
je
xor
pop
push
movsb
add
dec
dec
jle
dec
pusha
out
sti
xor
ljmp
and
daa
dec
pusha
xchg
sub
stc
jbe
out
xor
jp
push
jb
jo
fstpl
mov
pusha
pop
adc
sub
fistl
out
and
lods
dec
sahf
pushf
xchg
es
dec
negl
mov
call
inc
inc
stos
aas
pop
jle
jl
jp
push
mov
xchg
mov
mov
in
inc
ja
rcrl
mov
sbb
data16
cmp
and
cmp
shl
xchg
add
dec
test
cmpsb
mov
aad
cld
add
pop
std
inc
ret
mov
inc
pop
dec
stos
or
jo
in
jae
xor
mov
bound
mov
mov
xlat
outsb
and
ds
and
xor
pop
lds
cld
and
push
shrb
std
push
aam
gs
movsl
xchg
mov
mov
mov
test
inc
cmp
sti
loop
adc
lds
jns
lds
ja
xchg
rorb
adc
int3
movsb
shll
clc
xchg
mov
frstor
cltd
adc
std
popa
out
fldenv
fs
xor
xchg
cmpsb
xor
ficomps
aam
push
mov
leave
pop
outsb
jnp
loop
and
les
out
pop
mov
bnd
inc
sti
sbb
fbld
cmc
insl
addr16
and
sbb
add
xchg
inc
movsb
into
mov
xchg
mov
test
loop
inc
test
imul
jmp
dec
popa
pop
push
cmp
mov
mov
mov
cli
mov
out
in
inc
xchg
adc
mov
mov
rcrl
pop
dec
mov
adc
mov
arpl
rcrl
push
shl
jae
jae
sbb
mov
daa
roll
mov
jae
add
shrb
rcr
leave
and
mov
orl
std
and
cmpsl
pop
xchg
cmp
int
adc
or
and
cli
sbb
cs
ja
ljmp
fidivrs
das
lret
push
scas
clc
push
xor
inc
pop
fmull
jle
pushf
sub
xchg
add
and
sub
jo
pop
adc
movsl
xor
jp
sub
hlt
fsubr
push
mov
xor
add
mov
push
jne
bound
dec
cmp
neg
sub
push
ret
inc
inc
adc
aas
lahf
arpl
and
mov
aaa
mov
je
xchg
outsl
js
ror
mov
imul
sub
int3
sub
mov
or
jo
mulb
repnz
pop
pop
xchg
es
clc
test
push
mov
add
pushf
push
pop
cmpsl
cld
push
or
fstpl
iret
sbb
cmp
lods
pop
push
loope
add
dec
out
popf
in
mov
push
lds
ret
cmp
xor
sbb
sub
sti
test
jnp
pop
mov
pop
sbb
xchg
sub
inc
fwait
cwtl
cmp
aaa
stos
lret
hlt
jl
je
jecxz
repz
scas
shll
xor
mov
jo
jmp
mov
pop
xorb
scas
aas
pop
adc
lock
jae
test
sbb
jae
jb
loop
repz
push
xchg
ss
enter
mov
fmuls
ljmp
sbb
fwait
cltd
jg
fisubrs
jne
pop
insl
in
push
mov
mov
sub
sub
mov
cs
mov
push
push
lret
dec
dec
cmp
nop
push
push
imul
in
dec
sbb
jecxz
or
shlb
fmulp
sbb
pop
mov
stc
xor
cmpsl
pop
mov
stos
shll
adc
xor
leave
xor
lock
lds
jae
mov
xor
xchg
test
xor
loopne
jge
xchg
sub
dec
sub
adc
xor
jle
xchg
sbb
pop
mulb
adc
or
inc
inc
mov
addl
push
outsl
adc
cmp
xchg
scas
mov
movsl
hlt
inc
gs
push
les
cwtl
pop
mov
mov
add
aad
leave
popa
imul
fstpt
pop
mov
xor
es
cmp
push
shr
pop
and
pop
je
movsb
scas
aad
ret
fistps
stos
lcall
pop
xlat
add
mov
fsts
aam
sbb
repz
xchg
cld
gs
mov
lods
mov
cmpsb
cmp
das
mov
out
loopne
lds
cmc
push
jbe
rclb
in
push
dec
inc
outsb
cmpb
cli
or
bound
pop
pop
mov
lds
dec
xchg
or
mov
movsb
pushf
rcrb
ds
int
ljmp
in
subl
fs
xlat
das
test
fsubs
into
fldenv
sub
push
sub
loop
xchg
scas
inc
mov
call
pushf
lea
push
inc
and
sub
pop
inc
inc
push
pushf
push
int
inc
insl
aaa
jo,pt
cld
jb
inc
pop
push
jg
iret
loopne
repnz
sbb
ja
dec
mov
sbb
stos
stos
sbb
cmp
dec
mov
pop
xor
pop
jmp
test
push
mov
mov
pop
adc
mov
push
in
subb
dec
push
jmp
imul
es
ret
movb
pusha
outsl
add
xor
lcall
dec
and
dec
xchg
in
les
lods
dec
xchg
xchg
xchg
call
xchg
imulb
pop
rcll
pop
cmp
test
fstpt
jmp
sub
lcall
mov
push
or
pop
les
movsb
push
or
fimuls
push
pop
xor
es
cli
mov
pop
push
pop
mov
mov
fwait
insl
add
xor
insb
sahf
repz
inc
xchg
loopne
cmp
mov
fsubrl
decl
sbbl
loope
loope
jo,pn
add
sub
push
in
pushf
movsl
mov
in
sbb
sub
enter
and
xor
or
out
stos
add
or
jo
cmp
xor
sahf
jae
fmull
outsb
insb
std
js
jbe
daa
lahf
loopne
mov
sbb
test
adc
push
or
data16
aad
arpl
icebp
cmp
or
or
fildl
stos
and
cli
push
sbb
movb
ds
js
sub
mov
ret
ret
mov
and
js
lea
mov
hlt
mov
jmp
xchg
jbe
adc
shl
sub
bound
stc
pop
adc
mov
shrb
sbb
cmp
insl
xchg
ja
dec
and
loopne
dec
push
mov
ljmp
lahf
stos
dec
or
int
incl
jno
xchg
xchg
ret
mov
adc
sarl
ret
pop
mov
mov
repz
icebp
and
outsl
pop
xchg
and
testl
push
add
xor
pop
gs
test
or
jnp
data16
push
nop
or
add
dec
jmp
xor
sub
shll
xor
sub
add
aam
ds
fsts
pop
pop
pop
iret
mov
xor
loopne
pop
inc
dec
cmp
xchg
popa
pushl
jns
mov
mov
inc
push
cld
enter
mov
mov
jp
inc
f2xm1
enter
into
fildll
xchg
and
and
add
jl
xchg
mov
lock
sbb
cld
aad
js
mov
in
out
iret
pop
jge
sar
xorl
cmpsb
imul
add
adc
pushf
add
push
jecxz
addr16
sbb
mov
aad
cmpb
shrl
ja
cmp
pop
adc
jmp
loop
ds
hlt
add
shlb
push
and
jmp
jmp
mov
xchg
sbb
push
mov
mov
scas
and
shll
stos
pop
add
xor
sbb
dec
jle
movb
jge
push
imul
dec
sub
add
scas
scas
inc
pop
and
xchg
mov
movsb
push
out
mov
lret
sbb
mov
in
enter
and
pop
jo
add
xor
movsb
lret
clc
and
out
mov
jb
cld
lcall
lcall
or
and
pop
cmp
inc
sahf
sub
cs
rol
and
cmp
jecxz
dec
ret
loopne
mov
ss
decl
decb
in
fwait
stc
adc
punpcklwd
test
fstpl
gs
and
insl
jns
xchg
mov
mov
test
xchg
lret
cmp
mov
ds
mov
jmp
jbe
rcrb
push
cmp
jg
outsb
les
push
call
pushf
mov
imul
cmp
and
ret
xor
mov
jl
jns
inc
pop
hlt
mov
xor
je
pop
addr16
std
jae
mov
mov
mov
pop
nop
stc
cmp
push
das
aam
fbld
out
inc
mov
loope
push
add
fsubl
xchg
cld
inc
sub
xor
into
addr16
xor
xchg
ficoms
push
clc
sbb
inc
xchg
cmp
insl
xor
cmpsb
ja
rclw
or
push
xor
adc
push
iret
rcll
sub
scas
lret
dec
push
jecxz
test
adc
out
xor
xchg
jbe
inc
dec
negb
push
xlat
lret
xchg
push
adc
repz
js
mov
pop
adc
pop
loope
or
xor
pop
mov
dec
aad
sbb
push
fcmovb
fldenv
aas
jb
and
addr16
call
lods
mov
push
push
pop
aas
lahf
mov
sub
cltd
decb
sbb
gs
sub
mov
test
cmp
sub
ror
ds
mov
add
cmp
insl
add
dec
je
pop
lds
call
ss
loop
cmp
daa
mov
mov
push
jns
bound
ret
inc
les
and
jecxz
sub
repz
leave
pop
or
dec
inc
jb
js
adc
sbb
lds
adc
inc
test
xchg
mov
pop
insl
pop
inc
loop
testl
in
mov
dec
jg
add
std
cwtl
rcr
cmp
add
mov
imull
inc
add
int3
out
cli
inc
lret
addl
fwait
push
sahf
cld
or
adc
inc
rep
adc
cmp
stos
push
mov
test
xor
dec
inc
mov
nop
jne
mov
jp
icebp
add
andl
je
nop
push
cld
sbb
xor
iret
mov
xchg
jns
jns
push
sub
cmp
leave
lret
cmp
pop
outsb
jg
adc
and
push
xor
xchg
outsl
pop
push
je
sbb
out
lock
js
dec
hlt
dec
or
insl
enter
dec
stos
nop
test
in
lock
pop
push
andb
push
adc
xchg
cmp
pop
adc
sahf
mov
jb
data16
sbb
cmpb
pop
mov
inc
push
repnz
ds
in
sbbb
mov
push
jb
fcmovnb
dec
test
push
pushl
vpsubsw
pushf
lea
pop
xor
in
daa
pop
sbb
mov
cld
mov
push
out
adcb
insl
frstpm(287
loopew
mov
shlb
dec
addb
or
fdivs
push
decl
mulb
or
pop
shll
push
insb
adc
call
das
dec
sti
xor
jl
dec
idivl
ja
shlb
xchg
and
xchg
mov
fcoml
testl
imul
sbb
cltd
sarl
or
add
dec
xchg
aas
and
aam
fiaddl
sub
inc
mov
mov
pushf
mov
pusha
call
in
pop
add
or
pop
xor
cs
aad
cmp
fnstsw
aad
sub
std
loope
mov
xor
or
popa
test
lret
lea
test
or
ficoms
inc
stos
je
dec
ror
in
test
jl
mov
int3
imulb
mov
jns
inc
pop
fwait
outsb
ret
lcall
repz
and
pop
lock
scas
dec
arpl
movsb
push
xor
testl
test
or
mov
jne
or
mov
and
dec
ss
repnz
mov
stc
loopne
push
int
test
std
das
sub
or
cmp
adc
test
push
adc
arpl
adc
and
inc
mov
das
in
jmp
mov
jl
push
mov
out
add
sti
mov
inc
bnd
cmpb
mov
loop
mov
xor
jae
inc
test
popa
pop
dec
jge
cwtl
and
and
jge
addr16
add
or
ds
into
mov
movl
or
mov
mov
cmc
fimull
push
mov
xchg
stos
rolb
mov
stc
push
dec
fld
jmp
sarl
ja
add
stos
insb
dec
outsl
or
dec
or
dec
cmc
insb
jne
insb
sbb
sbb
mov
adc
push
adc
mov
sub
mov
or
cld
push
cld
jl
push
jne
pop
adc
popf
mov
pop
mov
push
ret
jns
mov
pop
idivb
xbegin
popl
dec
mov
loopne
int
imul
popf
ja
aaa
cmp
sbb
mov
rorb
xor
out
lock
nop
inc
movsl
jmp
dec
push
sub
imul
bound
or
inc
jae
pushf
dec
sub
mov
insl
inc
pop
adc
jb
enter
xlat
leave
stc
std
add
sahf
int
pop
scas
sar
fldenv
movsl
daa
rorl
add
inc
int3
push
dec
test
out
xchg
stos
fnstsw
push
mov
int
or
push
jecxz
mov
out
add
mov
scas
pop
xchg
sarl
push
test
sbb
mov
sbb
fsubl
jae
xor
add
std
fists
push
mov
cmc
addr16
mov
sbb
ffree
jecxz
sbb
xchg
repz
inc
xorl
xchg
int3
and
adc
xor
dec
adc
mov
scas
cmp
sub
shll
push
pop
lock
cli
jle
inc
aaa
adc
lock
test
ret
or
fldcw
pop
pop
xchg
repnz
fstl
xor
xchg
sbb
loop
into
inc
adcl
insl
dec
test
jg
insl
inc
mov
fdivl
push
lahf
adc
pop
mov
jbe
dec
mov
movsb
int
jl
xchg
dec
pop
mov
mov
xor
sub
and
insb
cld
aaa
mov
xlat
adc
sarl
daa
jge
dec
in
pop
jl
xchg
fwait
mov
jbe
pushf
lods
test
pop
adc
lret
rol
adc
cltd
repz
mov
imull
cmp
xlat
ss
jno
inc
xchg
ljmp
xlat
jp
stc
into
fstps
jo
jnp
or
outsl
push
lods
nop
and
sbb
mov
xor
pop
popa
repz
sahf
sbb
xchg
sub
xlat
loope
cmp
jns
or
cmpsb
pop
and
imul
jnp
push
mov
insb
ds
push
jbe
jo
movsl
pushf
rol
cmp
adc
push
and
sahf
rorb
mov
add
mov
repz
ljmp
jge
xchg
nop
aam
mov
insl
repz
aaa
nop
movsb
fwait
lcall
jge
or
inc
add
and
jae
sub
mov
dec
mov
cli
dec
mov
dec
cmp
push
sub
pop
xchg
fistpll
dec
xchg
leave
ljmp
mov
mov
add
inc
leave
push
xor
sub
fldl
dec
cmpsl
cltd
mov
mov
mov
jecxz
out
sub
inc
jecxz
push
cmp
push
push
addr16
adc
std
push
pop
dec
sub
das
dec
fiadds
pusha
dec
sbb
xlat
xchg
cmpsb
mov
out
or
push
xchg
and
sahf
or
mov
jmp
xor
adc
adc
lret
loop
add
fs
mov
pop
mov
mov
pushf
mov
push
ret
mov
fldt
mov
mov
jne
inc
xor
dec
int
or
cmp
fcmovnb
loop
add
fst
call
xchg
or
outsl
into
mov
fsub
std
sbbl
pop
pop
dec
imul
xor
and
aaa
ja
sbb
inc
jmp
fnstcw
mov
out
scas
data16
test
fists
jae
rorl
fs
loope
insl
lret
sbb
lods
fimull
insl
outsl
push
inc
stos
cmc
mov
pop
fld1
xchg
mov
addr16
adc
or
in
shl
mov
int3
adc
lods
inc
mov
jnp
adc
movb
fwait
pop
cmp
jo
add
popf
clc
jl
inc
push
lahf
mov
mov
ja
jb
lods
push
orb
inc
jno
out
dec
not
loop
mov
mov
notb
pushf
inc
add
imul
aad
arpl
cmp
fsubrl
mov
lea
cmp
or
and
daa
fdivs
jns
rclb
ficoms
aas
jmp
loopne
mov
movsb
ja
lret
leave
jmp
add
enter
add
add
rclb
cmp
cmpsl
push
adcb
push
jo
sbbl
jl
push
jb
aam
mov
popf
mov
pushf
adc
aad
aas
xchg
cmpsb
nop
mov
enter
and
data16
xor
test
dec
mov
cld
pop
cmpsl
mov
sub
out
lea
inc
stc
ret
sbb
addr16
in
aam
ret
fcmovb
sbb
vxorps
ja
les
out
int
mov
cmp
inc
enter
arpl
sbb
jnp
push
mov
repz
adc
jge
jmp
adc
adcl
cli
enter
sar
popf
push
sub
aam
cmpsl
je
and
ret
stos
xchg
push
xchg
mov
jne
pop
xchg
and
ss
add
jp
push
mov
xchg
mov
add
push
ja
js
mov
cmp
add
js
imul
andb
xlat
jae
movsb
mov
xchg
movsb
push
push
sbb
mov
mov
mov
stc
aad
stc
movsb
movsb
dec
mov
in
xchg
clc
cmpsb
repz
pushf
pop
sub
cli
in
push
mov
jb
xor
mov
push
lret
jb
adc
clc
in
cli
xchg
stc
sub
ret
mov
fs
ja
movaps
fwait
xchg
bound
xlat
xor
aad
pop
rcl
clc
jmp
pop
cwtl
aad
inc
inc
inc
pop
jp
out
sbb
fbld
xor
fstl
popf
dec
push
in
fs
and
subl
test
rorl
test
sbb
jae
lret
mov
fs
lea
jg
sbb
push
sbb
mov
mov
mov
iret
shlb
stos
jl
sbb
out
xor
fadds
hlt
fnstenv
fldcw
pop
pop
mov
leave
in
mov
jle
lods
jp
lcall
arpl
jle
icebp
inc
xor
adc
mov
popf
les
xchg
sahf
repz
jecxz
rolb
xchg
aas
stos
adc
cmc
loop
cmpsb
sarl
push
cmp
gs
jns
mov
xor
ss
andl
xor
iret
movsl
cwtl
pop
or
loope
mov
push
test
sbb
mov
negl
lea
pop
hlt
pop
jle
aas
imul
sub
xchg
lret
or
mov
popa
sbb
and
mov
cmp
std
sti
ds
push
subb
cmp
lahf
enter
sub
and
call
jp
mov
scas
shll
push
or
cmc
enter
mov
fldl
les
repz
pop
fwait
es
xor
add
scas
jae
inc
push
into
and
xor
insl
repnz
cwtl
sbb
call
xor
jb
sbb
call
mov
aaa
sbb
jo
fisttpl
jp
das
lock
sbb
mov
aad
cmp
pusha
jle
sbbb
mov
loope
bound
and
test
cmpsb
add
idivb
push
hlt
les
loope
push
jo
arpl
add
fcoml
or
pop
xor
xor
mul
aad
icebp
arpl
sbbb
adc
loop
icebp
notb
jbe
sti
mov
xchg
xchg
cltd
jno
or
movb
xchg
out
adc
push
pextrw
rcrl
xchg
xchg
je
fsubrp
imul
outsl
or
push
lcall
loope
ljmp
negb
repnz
adc
fmull
mov
in
mov
sti
in
out
fisubs
call
adc
add
ds
or
in
ss
mov
xchg
outsb
insb
mov
movsb
cmpsb
mov
dec
cmp
or
test
inc
sbb
inc
sub
iret
shll
call
sbb
or
sbb
inc
dec
and
sbb
xchg
dec
movsb
outsl
or
mov
in
popf
mov
test
push
dec
dec
push
je
sbb
mov
jo
or
inc
push
jmp
push
fucomi
movsb
adc
adc
jmp
inc
pop
inc
mov
dec
repnz
jl
dec
fsubs
int
sti
xor
xchg
std
loop
test
pop
jg
stos
cmp
xor
je
fwait
mov
sub
lods
mov
adc
and
mov
mov
jmp
sub
mov
adc
insl
adc
orb
mov
lcall
cmp
mov
pop
sub
out
cld
mov
xchg
js
lcall
rorl
mov
sub
add
inc
fcoms
mov
add
addr16
cli
lahf
xchg
sbb
ja
xor
fnsave
cs
sahf
repz
and
sub
sub
dec
mov
or
or
inc
xchg
aaa
dec
gs
push
sbb
jge
aaa
shrb
aaa
pop
mov
aam
dec
fcoml
adc
inc
loop
inc
sbb
es
mov
mov
daa
adc
add
outsl
lahf
mov
repnz
mov
mov
jb
loop
scas
mov
ret
pop
xor
cli
fadd
lahf
sahf
in
ds
jmp
ffreep
dec
pop
jno
fs
or
pop
push
gs
fisttpl
jo
fs
xchg
adc
cmp
push
or
and
stos
fcomps
pop
stos
pop
push
call
lods
addr16
lds
loopne
cmp
mov
pop
daa
mov
cmp
mov
jge
je
add
cmp
and
dec
sub
cld
mov
std
sub
mov
sub
sub
popf
adc
mov
mov
cmp
fists
daa
pinsrw
cmpsl
out
stos
popa
aad
pop
popf
pop
mov
adc
lock
sbb
xor
jb
loopne
adc
xor
jae
lock
jge
in
push
or
push
lret
cmp
xchg
pop
scas
push
inc
jmp
int3
lock
and
pop
ds
xchg
and
cs
mov
push
nop
lock
sub
adc
xchg
or
test
jns
cmpsb
adc
dec
cmpl
inc
xor
mov
mov
sub
jo
xor
xchg
dec
popf
lock
mov
adc
test
sub
jg
cmp
test
dec
int
scas
push
bound
test
fidivl
sti
xchg
add
sbb
push
mov
fdivrs
or
push
mov
inc
xchg
sbb
das
sbb
outsb
out
and
ss
pop
sbbb
pop
xorb
loope
lcall
fwait
or
mov
int
adc
push
cwtl
imul
les
fsubrl
ret
imul
xor
inc
sbb
movsb
fs
jno
sbb
dec
test
xor
pop
sbb
jne
iret
idivl
dec
mov
adc
bound
stos
ss
mov
push
bound
mov
dec
xchg
shl
insl
lods
inc
and
inc
jne
ja
mov
lret
fisubl
pop
lock
pop
ljmp
inc
xchg
push
movsb
int3
dec
inc
out
mov
mov
in
in
xorl
pop
xor
xor
xor
mov
xorb
mul
stc
dec
out
add
cmc
add
pop
push
xchg
mov
repz
stos
stos
into
cmp
mov
add
hlt
mov
mov
lods
push
out
sbb
xchg
inc
fsub
mov
lcall
cmpsb
xlat
sbb
mov
das
hlt
lds
fidivl
fadd
lret
xchg
cmc
fldl
and
mov
inc
loop
push
je
cmc
rcl
out
jle
jb
mov
pushf
xchg
xor
lock
lret
imul
dec
jp
repnz
icebp
push
push
and
jmp
pop
js
inc
lret
in
fucomi
cmp
test
popf
cwtl
mov
xor
aas
jnp
mov
cmpsb
sub
mov
pop
mov
arpl
repnz
push
pop
sub
out
jge
sub
xor
mov
loop
cmp
push
xchg
jp
mov
cmpl
cmp
loop
inc
sahf
imulb
shll
mov
leave
push
fidivs
lret
xchg
test
scas
jmp
je
lds
pushf
sbb
pop
inc
test
pushf
loope
xchg
jno
push
pop
insl
inc
pop
je
jg
in
and
jp
in
adc
sub
test
testl
in
mov
je
nop
dec
jne
cmp
inc
mov
aad
aaa
test
cmp
movsl
jbe
repnz
je
enter
jmp
xchg
rol
dec
sbb
bound
in
mov
cmpsl
or
dec
pop
shll
loop
cs
test
jle
sub
lret
loop
fldcw
xchg
xor
sbb
dec
sbb
mov
popa
ret
add
inc
cld
sbbb
ret
imul
icebp
lods
push
loopne
push
std
mov
cmp
mov
xor
add
aad
loopne
dec
cmp
sbb
nop
lea
xor
xchg
ds
in
inc
jo
subb
fldcw
sub
fildll
and
shrl
xchg
sahf
mov
xlat
addr16
and
push
notl
ret
cld
add
adc
add
or
out
aaa
or
mov
mov
mov
fwait
jno
mov
cmp
inc
cmp
sahf
enter
daa
daa
pop
push
push
outsb
xchg
rorb
scas
pop
ss
leave
dec
lcall
or
mov
mov
dec
pop
out
sub
call
arpl
aas
out
push
push
in
sarb
cltd
mov
aad
insb
decl
dec
cltd
test
lahf
pop
roll
ss
outsl
loopne
sub
push
cmp
lods
ljmp
mov
push
sbb
int3
pop
test
or
and
sbb
in
into
jns
mov
mov
cmpsl
jmp
ss
mov
pop
jg
inc
int
int
push
lret
mov
pusha
daa
ficomps
adcl
jo
adc
repz
push
cmp
fwait
nop
mov
sbb
jo
es
mov
ficompl
jp
push
cltd
ja
mov
lret
dec
xchg
fisttps
or
dec
cld
lods
sbb
int
jne
or
mov
or
cmpsb
mov
imul
clc
loope
push
xchg
mov
mov
cmp
push
jnp
fwait
push
mov
cmp
mov
notl
mov
sbb
imul
jbe
testb
rcrl
mov
loop
and
repz
add
out
scas
xlat
test
in
shl
in
addr16
outsl
cwtl
cmc
aam
cltd
icebp
daa
mov
add
pop
jns
call
shrl
pop
outsl
imul
ja
rolb
push
into
repnz
loop
sbb
cmpsb
push
inc
aam
inc
cmp
pusha
cltd
pop
in
call
jl
push
and
or
pop
bound
sub
stc
push
std
mov
pop
int3
push
cs
dec
mov
mov
and
add
jmp
sahf
jmp
ljmp
push
les
fs
out
mov
mulb
andl
insb
in
jl
xchg
adc
push
test
inc
shlb
into
in
xor
jl
imul
pop
ja
sahf
sub
jmp
sbb
adc
pop
cmp
xor
sub
shlb
push
mov
test
cld
bound
jle
inc
pop
or
es
in
test
or
test
push
xchg
sarl
adc
jg
pop
dec
mov
rorl
mov
lods
fsubs
mov
mov
push
aas
cli
ds
aaa
mov
mov
stos
popa
mov
push
cmp
inc
mov
nop
push
mov
inc
test
push
mov
xchg
adc
and
push
push
or
std
popf
push
inc
aad
insb
out
stc
nop
inc
imul
cmp
in
cmp
cwtl
fs
repz
pop
cmpxchg
add
xchg
stc
mov
loopne
adc
ss
shl
subl
dec
mov
popa
pop
mov
into
jb
mov
xor
lret
dec
fisubrs
enter
adc
pop
push
mov
cmp
inc
sub
cli
inc
shlb
mov
push
js
int3
sub
jle
adc
int
sub
fcmove
add
pop
and
jb
mov
jge
push
add
loop
jnp
aas
mov
adc
mov
sub
adc
fwait
stos
shl
fs
in
stc
std
or
lret
outsl
push
pop
ljmp
daa
daa
repz
aaa
mov
lock
sbb
nop
cmp
mov
bound
mov
and
push
pop
out
rcl
sbb
outsb
ja
mov
int3
mov
push
pop
ret
ret
aad
xchg
jnp
fwait
mov
cltd
pop
loopne
js
rcrl
test
jecxz
daa
xchg
add
sahf
dec
leave
pop
inc
jle
rep
xchg
cmp
jo
fwait
mov
sahf
test
sbb
inc
das
enter
add
mov
dec
add
orb
in
sbb
cld
adc
loopne
or
xchg
repz
pop
scas
idivb
inc
into
outsb
add
shrb
mov
push
mov
sbb
aas
mov
cs
sbb
add
loop
inc
pop
mov
fsts
sbb
icebp
divb
inc
mov
dec
inc
jp
cld
xchg
repz
push
mov
add
loope
divb
pop
mov
frndint
bound
pushf
jns
inc
xchg
add
in
cld
mov
adc
sbb
fcmovnbe
inc
mov
dec
mov
pop
pop
cmc
bound
pop
push
xor
dec
in
push
cs
xchg
xor
xor
push
mov
shlb
xor
mov
dec
test
xchg
cli
cld
popf
ret
sti
andl
or
loopne
je
adc
lock
mov
into
cmp
push
hlt
out
push
pop
pop
enter
cltd
inc
add
pcmpgtw
mov
fisubs
cmp
ret
cli
shrb
in
int
add
aas
ja
jl
pushf
cmp
pop
lea
dec
xor
scas
sbb
or
cmp
add
loopne
pop
pusha
xchg
mov
mov
int
rorb
outsl
mov
or
jo
push
or
mov
lock
movsl
hlt
pop
or
decl
push
cli
gs
enter
in
insl
xchg
mov
pop
jl
mov
lret
cmp
in
pop
lods
js
scas
fwait
xchg
or
pop
aaa
cmp
push
movsb
inc
rcll
mov
xchg
jmp
test
stos
lods
insl
in
repnz
fsubs
inc
fsubrl
pop
addr16
shll
scas
mov
pusha
imul
test
inc
push
clc
fstps
xor
xor
inc
inc
sub
xor
inc
lods
sub
mov
sbb
or
xor
clc
lret
xchg
fcmovnb
outsl
xchg
cmp
sahf
and
cmp
mov
mov
out
je
ret
lods
pop
adc
xor
or
dec
test
bound
cmp
ja
xchg
cmpsb
adc
gs
fcom
add
cmp
add
cmp
scas
add
and
jg
sbb
xchg
add
neg
push
mov
jae
jle
xchg
inc
xchg
mov
cs
push
pop
fistl
pop
inc
inc
call
out
in
adc
orl
or
int3
lods
adc
lahf
pop
jnp
addr16
shl
in
cld
push
xchg
aad
cmp
int3
xchg
shl
iret
sbb
or
and
ret
push
nop
xchg
fsubs
inc
push
mov
ret
icebp
sbb
mov
fsub
xor
mov
es
sbb
sub
xchg
cmp
cmpb
and
push
lea
cld
sahf
mov
ret
and
iret
mov
dec
cmp
xchg
fiadds
xchg
popf
movsl
int3
adcl
aad
mov
cmp
dec
jge
fldenv
mov
mov
mov
inc
lods
insl
ja
das
and
push
jno
or
sbb
loopne
lcall
add
movsb
nop
out
xor
push
mov
adc
and
aam
jbe
xlat
or
cmp
ret
ja
je
dec
inc
movsl
rorb
inc
ja
jl
aaa
jns
inc
xlat
testb
adcb
aas
cmp
pusha
sbb
cmp
push
pop
inc
push
lret
test
js
mov
mov
inc
mov
jg
jns
xor
mov
cmp
pusha
loop
dec
imul
jle
or
adc
inc
inc
test
in
loop
jne
xor
jge
cmpsl
xor
jg
fcompl
dec
push
adc
dec
mov
add
pop
arpl
pop
xchg
xor
data16
xchg
dec
add
jl
jbe
shr
lcall
dec
ret
pop
pop
out
in
push
mov
and
sbb
dec
fisubl
test
xchg
sbb
pop
xor
xchg
or
mov
test
xor
xchg
fidivrl
xchg
xchg
rcl
pop
ret
jl
popf
jns
aad
xchg
clc
dec
push
inc
and
mov
push
lock
clc
insb
inc
inc
mov
add
leave
and
xchg
xor
in
movsb
cmp
test
jns
and
jne
not
divl
adc
sub
xchg
out
add
in
sbb
loop
cltd
lcall
inc
loop
in
mov
das
pop
mov
adc
jecxz
lods
popf
mov
xlat
sbb
xchg
jge
xchg
loopne
pop
push
sub
cmpsb
sahf
adc
mov
mov
cmpsl
sub
scas
and
add
inc
ds
add
in
inc
xchg
mov
pop
jno
and
cmpsl
push
xchg
sbb
fwait
push
mov
mov
leave
mov
in
push
xlat
mov
repz
inc
push
jo
ror
mov
out
and
adc
sahf
mov
repz
fists
sub
add
xchg
div
adc
aam
lea
rcll
sub
sbb
mov
mov
and
sub
push
cld
push
sub
xchg
es
cmp
sahf
jecxz
ds
fs
xor
jg
out
roll
rcr
pop
sub
stos
adc
das
aas
mov
xchg
jecxz
lds
cmp
in
bound
pop
cmp
call
dec
ror
add
enter
int
ret
stc
inc
inc
fcomps
add
into
lds
pop
dec
push
xor
cwtl
ficomps
push
js
in
inc
inc
outsb
push
and
clc
push
fildl
mov
addr16
loop
pop
sub
mov
or
ret
or
lds
xchg
push
push
add
mov
sarb
out
roll
pop
xor
push
and
sahf
dec
pop
add
push
inc
pop
je
cld
dec
xchg
in
gs
ret
and
lds
jae
ret
decl
pop
inc
pop
inc
fcoms
dec
fisubrl
mov
pop
in
notb
add
cmc
jb
inc
fldenv
repz
sbb
add
movsb
mov
int3
mov
sbb
pop
cwtl
xor
outsl
stc
loope
sbb
adc
gs
push
lcall
add
jo
std
push
fisubl
mov
push
adc
clc
mov
mov
adc
mov
repnz
ret
repz
jb
stc
mov
outsl
jg
lods
cmp
mov
pop
dec
sub
in
aad
xchg
mov
adc
cmpxchg
fwait
jecxz
stos
add
stos
fcomps
nop
into
sahf
lods
shrl
sub
sub
je
pop
mov
in
jg
fidivrs
push
popa
pop
test
stos
test
sarl
aam
xchg
push
adc
sub
and
adc
or
mov
loopne
pop
cmc
jmp
test
cli
push
test
stc
xor
outsb
sbb
adcb
clc
xchg
cld
xchg
outsl
stc
push
aas
fcomp
adc
addr16
or
in
xchg
je
sbb
call
dec
fstps
push
loop
pop
das
mov
pop
rol
ds
lods
cmpsb
mov
jb
jns
mov
rcl
mov
cld
repz
pop
pop
mov
scas
mov
push
cs
and
cli
inc
in
adcb
ret
aaa
lcall
dec
mov
xchg
inc
pop
sbb
mov
adc
in
mov
hlt
aas
and
bound
iret
push
adc
in
mov
dec
cld
in
adc
inc
mov
fldl
and
orl
sbb
dec
outsb
mov
jl
popa
jge
cmp
and
or
je
lcall
loop
sbb
cmp
repz
xor
mov
lahf
mov
addb
lahf
mov
pop
mov
mov
ret
cmp
dec
test
xor
js
fs
pop
insb
outsl
xor
xchg
mov
cli
mov
mov
jno
cwtl
lss
ret
pminsw
inc
pop
jecxz
add
push
or
hlt
adc
jno
jle
jo
or
outsb
mov
stos
sti
ret
das
clc
sub
inc
pusha
test
mov
jge
mull
les
inc
addr16
inc
call
xchg
and
fwait
push
sub
mov
lea
lret
scas
fmul
leave
sbb
dec
jle
dec
jg
bound
and
icebp
imul
bound
cmc
pop
es
xor
mov
int3
seto
outsb
xor
mov
mov
arpl
lea
shll
fists
iret
mov
push
aam
das
mov
cli
adc
or
lods
sarb
imull
repnz
pop
mov
jnp
xchg
bound
or
mov
cld
mov
sub
and
mov
mov
stos
cltd
stc
inc
jl
mov
inc
in
and
dec
sbb
push
adc
stos
mov
cltd
lds
mov
adc
aaa
xchg
mov
test
iret
aam
dec
mulb
push
mov
iret
pusha
leave
movsb
into
cwtl
lcall
mov
or
psllw
data16
inc
test
imul
or
jmp
inc
add
in
in
xchg
subb
dec
mov
or
pusha
and
mov
rcr
iret
les
test
outsl
sbb
xchg
add
cwtl
stc
lods
dec
stc
out
les
out
pop
fs
sub
mul
inc
shlb
dec
filds
add
inc
ret
jae
shr
into
iret
es
push
add
mov
sub
cld
or
inc
mov
rol
inc
adc
das
xchg
mov
push
inc
pop
mov
push
popf
pop
or
sar
cmp
pop
adc
push
scas
pop
les
cmp
dec
add
dec
xor
sarl
pusha
js
cmp
int3
mov
idivl
gs
pop
out
aad
je
mov
cltd
gs
fwait
outsl
pop
or
gs
fwait
sub
inc
in
xchg
sbb
lret
xorb
dec
adc
dec
dec
lcall
fisttps
and
jl
inc
ljmp
pop
mov
pop
ja
pop
mov
andnps
add
sbb
inc
sub
jle
aam
data16
imul
xor
sub
std
pop
insl
outsb
std
inc
int3
lret
jo
dec
imul
stos
out
adc
xor
fcomps
jecxz
mov
cltd
ret
int
movsl
dec
shl
mov
or
mov
call
in
pop
movsb
push
jae
in
icebp
pop
cmpsb
andnps
pusha
cltd
data16
push
jnp
rorb
cltd
xorb
scas
mov
jo
push
sub
out
pop
movsb
imul
fsubs
or
aam
xchg
inc
jmp
mov
cli
out
insb
pop
lret
lea
mov
push
pusha
test
in
lcall
mov
pop
popf
enter
js
mov
movsb
pop
mov
pop
xor
leave
insb
aam
xlat
mov
ret
push
ss
out
jnp
cs
repnz
pop
pop
sub
dec
sbbb
hlt
dec
ret
mov
mov
cs
fldt
out
cmp
mov
lret
test
adc
jae
jns
xor
xchg
ds
mov
add
xchg
arpl
out
testl
cmc
xor
into
lock
scas
adc
xchg
jp
inc
adc
pushf
xchg
push
in
mov
jp
adc
sub
jbe
aam
mov
mov
add
icebp
shrb
movsl
outsb
mov
xor
jbe
das
shl
rcr
cld
sub
sbb
fstpl
shlb
stos
mov
mov
addr16
ljmp
lods
dec
in
popa
aad
pop
mov
test
ret
fisubrl
icebp
mov
mov
push
out
sbb
into
or
jg
pop
sbb
fsubr
jbe
cmpsl
call
jmp
cwtl
add
adc
shr
pop
dec
mov
jecxz
fimuls
mov
in
cmp
xchg
scas
lock
mov
sbb
sub
pop
adc
xor
shlb
es
mov
out
pop
xchg
aaa
mov
stos
jne
popf
bound
mov
insl
jb
inc
mov
rorl
imul
push
inc
sub
add
pop
mov
out
add
loop
cld
std
mov
inc
mov
out
aas
push
movsl
out
addr16
or
shrb
add
sub
shrb
pop
jnp
je
pusha
dec
inc
xor
in
imul
out
stos
xchg
sbb
mov
popa
repnz
adc
mov
ja
fsubl
mov
mov
js
enter
xchg
cmpsl
xor
rcrb
lock
daa
sti
lcall
adc
push
leave
test
jo
scas
es
dec
pop
mov
sub
cwtl
loop
or
adc
adc
mov
jmp
fdiv
stos
cmpl
xchg
dec
and
pop
outsl
and
shrb
xchg
sub
jl
ror
xchg
inc
mov
pop
fildl
mov
leave
jmp
add
ss
xchg
push
mov
sub
pop
xor
sub
in
mov
dec
mov
push
fucom
vshufpd
push
test
repz
or
arpl
dec
decl
xchg
add
mov
sbb
dec
es
cwtl
ss
jmp
mov
dec
adc
fstp
or
ret
mov
inc
dec
out
or
cmpsl
sbb
cld
xor
or
hlt
imul
inc
popa
and
dec
xchg
mov
imul
pop
jge
popf
cltd
test
arpl
arpl
xor
ret
lea
out
scas
lret
fcoms
out
outsl
mov
pusha
jecxz
pop
loopne
adc
jbe
adc
add
adc
cld
adc
ljmp
out
xchg
sahf
sbb
in
inc
mov
push
or
xor
aad
jnp
mov
fidivl
jmp
push
push
gs
push
cmp
mov
cmp
pop
repz
repnz
in
inc
mov
jg
mov
cmp
sarl
mov
xor
inc
mov
mov
add
sbb
movsb
inc
repz
dec
push
ficomps
inc
cli
insl
push
xchg
add
cmp
inc
in
inc
cs
pop
push
sub
and
daa
mov
out
dec
pop
insb
dec
adcb
ja
aaa
sarb
push
aas
cli
icebp
fwait
jecxz
sub
xchg
xchg
out
cmpsb
fmuls
out
sbb
push
dec
xor
movsl
xchg
jnp
push
inc
push
aam
cwtl
test
imul
dec
inc
jo
mov
dec
mov
dec
popa
push
leave
sbb
mov
jne
mov
rol
lcall
addl
sbb
mov
lret
lds
pop
ja
jle
imul
movsb
fwait
cmp
stos
fnstenv
pushf
adc
imul
icebp
cwtl
inc
ljmp
mov
and
cmp
dec
bound
cmc
jns
pop
aad
xchg
cmpsb
add
lods
arpl
sub
movsb
test
cmp
or
adc
iret
mov
push
mov
ljmp
lock
adc
into
loopne
push
mov
loopne
cld
xchg
mov
faddp
dec
mov
or
jns
aad
test
mov
cmp
outsl
test
mov
iret
xchg
adc
pop
xor
jo
adc
push
add
sbb
dec
xorb
pop
fld
leave
dec
ss
mov
cs
cld
cmpl
add
dec
xlat
lock
aad
lret
or
popa
insl
das
scas
mov
push
loopne
xlat
xor
fcompl
pop
fcomps
int3
cmpb
jp
mov
xchg
push
jmp
inc
pop
into
push
lods
into
jle
push
les
inc
cwtl
xlat
xorl
stos
sahf
mov
jmp
lahf
aad
pop
imul
mov
aam
fdivl
loop
mov
inc
xor
jnp
add
mov
cmpsb
sub
jg
je
in
inc
jle
ret
or
cwtl
mov
jp
testl
adc
inc
in
js
pop
push
push
dec
jp
cltd
arpl
pop
mov
scas
ja
mov
cld
xchg
push
lea
sub
int3
daa
mov
inc
adc
je
cmpsl
mov
jp
dec
insl
lods
loope
scas
out
and
push
mov
xchg
dec
mov
mov
aam
and
in
or
and
clc
outsl
and
mov
popf
inc
xchg
pop
push
out
ret
mov
or
push
std
and
and
sub
xchg
pop
or
sub
loopne
mov
sub
mov
cs
aas
mov
aas
adc
in
rorl
test
aas
xchg
pusha
shlb
sub
ja
popa
pop
xor
testb
lds
mov
xchg
js
les
pop
xor
and
mov
cli
leave
popa
out
sub
setbe
sbb
stos
incb
pop
shlb
mov
jmp
insl
inc
push
lcall
mov
std
adc
push
aad
lcall
mov
mov
mov
fs
cli
pop
jg
loop
fsubs
movsb
loopne
jbe
cmpsb
mov
adc
into
sbb
shrb
bound
aas
xor
mov
fs
add
push
push
iret
std
mov
and
push
ja
inc
loop
jle
jno
jp
lret
mov
push
mov
ret
xor
pop
cmp
push
sahf
cmpsl
bound
imul
dec
sbb
mov
jl
cwtl
fadd
mov
push
in
push
jge
xchg
sub
mov
fnstenv
mov
cltd
jge
jb
mov
xchg
cltd
das
cli
lret
push
jp
imul
inc
aas
sbb
stos
icebp
sbb
imul
aas
icebp
je
cmp
adc
xor
push
cmp
cwtl
cli
movsb
fwait
jp
jbe
jb
xchg
fbld
sti
adc
adc
xor
push
insl
lcall
xchg
cmp
out
and
jmp
incb
aad
aaa
dec
push
fldt
lds
or
xchg
std
std
imul
cmc
mov
and
stos
jno
outsb
out
ret
jae
lcall
rcr
xor
xchg
push
in
xorl
in
insl
fisttpll
fiaddl
add
pop
push
pop
movsl
inc
loop
mov
mov
sub
mov
repnz
sbb
and
xchg
das
and
fwait
popf
pop
andb
lahf
outsl
xchg
loopne
inc
aam
test
jecxz
jge
or
and
jg
js
add
mov
scas
xchg
pop
pusha
inc
pop
pop
adc
sbb
addl
mov
sbb
fadd
push
sarl
jg
jle
outsb
movsb
inc
pushf
push
inc
mov
add
test
ja
add
pop
aad
pop
or
xchg
andl
jp
xorb
xor
xchg
neg
out
xchg
add
f2xm1
dec
scas
cmp
or
cmp
js
adc
push
fcomps
mov
je
and
repnz
aam
xlat
and
mov
in
xlat
rcrl
ret
inc
mov
mov
xchg
sbb
aaa
bound
jb
pop
ltr
fsubr
xchg
lods
push
icebp
das
scas
cmp
ret
mov
mov
mov
mov
imul
fs
cmc
mov
scas
mov
mov
xorl
mov
lods
call
mov
lret
mov
rclb
jg
add
mov
addr16
or
bnd
out
inc
adc
psrlw
test
add
adc
repnz
out
in
xchg
mov
pusha
mov
mov
mov
inc
and
push
fnstsw
mov
sbb
insb
cmp
sub
arpl
ss
pop
jp
jbe
jns
cmp
adc
daa
inc
inc
dec
mov
shll
ret
andb
outsl
ss
inc
mov
fisubrs
push
shrl
xchg
pop
pop
mov
xchg
add
jmp
xor
outsl
jo
call
jo
sbb
mov
adc
js
cld
jmp
xchg
negl
data16
stc
out
loope
mov
sbb
jmp
jb
jns
add
jl
adc
data16
cmp
mov
pop
xlat
and
push
nop
inc
movsb
in
push
inc
std
cmp
jae
mov
jae
fnstsw
jne
mov
dec
mov
mov
dec
stos
lret
mov
inc
dec
out
dec
inc
out
sub
xchg
cld
fwait
add
js
jno
lahf
scas
aas
pop
daa
lahf
push
pop
gs
fisubs
or
scas
out
mov
pop
xor
gs
aad
sbb
and
sub
mov
out
add
fidivs
das
std
cmp
in
int
push
add
jns
sbb
loopne
mov
addr16
andb
xor
xor
sub
push
insl
or
or
je
sahf
cmp
adc
fnstcw
mov
dec
or
mov
mov
rep
lea
subb
aam
inc
cmpsb
nop
push
mov
mov
add
pop
and
dec
cmp
int
mov
mov
ss
orb
inc
ljmp
mov
cmp
xor
scas
fisttpll
aaa
cmp
fs
pushf
or
inc
xor
das
sub
loope
lahf
data16
pop
popa
jmp
cs
inc
clc
xchg
dec
adc
testl
fucomp
cmp
inc
aas
mov
jge
add
hlt
xchg
pop
jns
mov
fsubrl
ficomps
adc
movsl
test
pusha
fbstp
add
sub
ds
mov
repz
sti
jnp
jne
into
outsl
das
mov
mov
inc
mov
push
sbb
push
push
dec
int
cmp
sub
mov
xchg
nop
dec
mov
sbb
cli
push
push
push
mov
daa
test
mov
out
xor
arpl
jmp
sub
and
pop
rcrl
or
jmp
addr16
das
repz
mov
js
fiaddl
cmpsb
inc
fstps
inc
xor
push
push
arpl
mov
loop
outsb
sbb
jnp
fwait
dec
xchg
sub
mov
or
mov
fiaddl
push
lds
cmp
fiaddl
stc
leave
pop
sub
pop
adc
scas
cmp
stos
pop
push
shlb
imul
add
pusha
fwait
xchg
xchg
rcr
test
sub
aad
add
ficomps
scas
jp
ret
and
xor
mov
movsl
lcall
movsl
fadds
jno
jns
ret
inc
cmp
cltd
repnz
pop
dec
popa
push
mov
adc
cmp
lahf
pop
iret
jl
mov
mov
sbb
scas
cltd
cmpb
or
cmp
sti
ret
mov
dec
call
iret
lcall
jmp
jo
adcl
cli
xchg
sub
cmp
dec
lcall
js
and
fcoml
shll
orb
pause
stc
pop
imul
mov
jl
jne
pop
lods
mov
jle
xor
adc
sub
add
mov
out
add
test
push
jae
inc
out
or
dec
cmp
sub
adc
dec
sbb
xor
repnz
shl
inc
xor
hlt
push
pushl
xchg
adc
ret
js
fldenv
js
cmc
xor
jmpw
push
outsl
lods
stc
mov
cli
sub
add
xor
fcomps
add
cmpsl
jge
mov
lds
outsl
push
dec
mov
fdivrp
cmpsl
add
out
push
fnsave
in
and
cmp
mov
xlat
pop
and
scas
fcomp
orl
push
in
scas
pop
bswap
scas
jl
add
outsl
xor
inc
decb
es
mov
xchg
pop
xor
pop
xchg
xchg
mov
std
sti
jmp
test
sub
out
fisubs
jno
mov
scas
jnp
cmp
pop
cld
and
bound
inc
add
xchg
int3
ja
fcmovnu
pop
lods
lods
and
outsl
dec
cmp
mov
xlat
cli
push
sbb
and
rcl
push
sbb
sarl
cmc
ret
pop
inc
les
inc
push
jns
pop
mov
mov
fistpll
xchg
pushf
push
sbb
or
addr16
add
and
xor
outsb
or
stos
xchg
xchg
insb
jle
cmp
test
sahf
xchg
lods
imul
and
cmp
pop
clc
mov
inc
dec
outsl
nop
mov
outsl
and
or
test
subb
sbb
cs
fs
jnp
adc
ds
andl
std
cmc
test
orl
or
pop
mov
mov
cli
mov
fidivrl
ret
xchg
pushf
sahf
push
xchg
add
push
fdivrs
jg
jl
and
sahf
add
fldenv
stos
movsb
test
jo
pop
mov
stos
adc
stos
mov
mov
inc
pop
lods
rcl
and
jnp
sub
pushf
leave
mov
dec
gs
pop
cmp
int3
xchg
fs
xor
add
push
test
xor
push
insb
fwait
int3
cld
loope
xchg
jb
es
mov
aas
out
xchg
jbe
sahf
cmc
outsb
pop
lahf
outsl
jle
lods
lock
mov
in
fcmovu
stos
lcall
mov
iret
jg
add
mov
not
inc
lcall
fiadds
xorl
repnz
in
jae
out
fcomi
shrb
xchg
pop
jnp
push
cmp
jp
sub
xchg
add
popa
lcall
mov
aam
insl
jmp
mov
xor
aad
out
mov
or
push
cmp
cmc
repz
adc
lcall
push
enter
gs
push
mov
add
add
jo
call
mov
test
test
dec
pop
fildll
loope
sub
sahf
fwait
test
inc
or
cmp
adc
jnp
pop
cld
pop
mov
jnp
ret
cwtl
or
and
daa
das
mov
or
sbb
or
inc
sbb
fstpl
addr16
popf
xchg
add
pushf
mov
lcall
ljmp
insl
loop
mov
popf
sti
addr16
outsb
ds
jle
mov
pop
inc
mov
popl
add
dec
es
add
scas
xchg
or
mov
cmp
test
loop
call
scas
push
inc
sub
aas
dec
out
mov
repnz
mov
lds
pop
cmp
cmc
push
inc
lahf
push
ltr
inc
out
and
fistl
sbb
inc
jge
scas
cmp
cmc
movsb
movsb
lods
arpl
rorl
lea
std
adc
in
xor
jp
cmp
repz
sarb
add
movsl
cmp
sbb
adc
inc
cmpsb
jno
movsl
addr16
inc
js
cli
pop
push
mov
or
dec
lock
xor
pop
int
mov
cmpsb
jae
outsl
ds
pop
jo
sub
xchg
fcoml
sti
or
xchg
pusha
mov
aad
push
negb
inc
ljmp
push
push
xchg
jb
pusha
testb
movsl
and
inc
inc
or
mov
loop
repnz
mov
pop
pusha
scas
sub
mov
fstl
nop
repz
aaa
popf
mov
bound
clc
dec
outsl
pop
push
inc
cmpl
inc
data16
jb
jb
lods
adc
fcmovnu
imul
bound
dec
dec
inc
mov
pop
xchg
icebp
in
fwait
iret
xchg
mov
repnz
mov
push
and
lahf
and
scas
inc
cmp
lds
scas
lds
mov
jno
jmp
mov
ja
jg
enter
notl
jmp
rclb
add
push
notl
int3
loop
lret
xchg
scas
mov
outsl
js
sbb
adc
xchg
pop
jle
pop
jae
dec
hlt
inc
push
cld
xchg
adc
fnsave
cmp
out
imul
xchg
sbbl
push
in
mov
mov
les
fwait
sbb
dec
cmpsl
cmpb
xlat
fwait
and
mov
daa
or
mov
inc
jne
inc
sbb
enter
add
inc
flds
inc
add
test
mov
sbbb
pop
push
xchg
or
jne
adc
pop
popf
outsl
sarl
ret
sahf
mov
aas
and
dec
xor
mov
callw
mov
dec
xchg
fsubs
ret
push
mov
stc
sti
cmp
pop
jl
scas
push
std
mov
push
adc
xchg
mov
enter
into
shll
mov
push
xlat
hlt
jge
enter
or
stos
mov
int3
fmull
mov
xchg
and
mov
xor
sub
scas
test
inc
adc
or
inc
lea
out
jmp
xor
mov
add
inc
mov
xor
xlat
cmc
leave
ljmp
lock
and
std
and
addb
dec
test
mov
fldl
aas
mov
add
jmp
leave
loopne
ror
insl
das
dec
in
outsl
bound
adc
fwait
adcl
mov
pop
cs
adc
stos
and
sti
xor
out
dec
outsl
mov
jecxz
inc
xorl
inc
sub
out
cmp
outsl
mov
scas
and
jge
fwait
daa
pusha
lods
xor
cmp
inc
lods
cmpsb
divl
stc
and
dec
push
dec
arpl
lock
cmp
pop
jnp
mov
arpl
sub
mov
mov
ja
je
adc
cmp
out
movsl
adc
sbb
subl
inc
mul
scas
pushf
clc
insb
inc
fidivrl
jle
inc
mov
ret
lock
mov
jp
xchg
jmp
adc
in
nop
outsl
adc
jl
ja
lods
mov
aad
test
fmull
cli
or
jp
pop
lds
or
xchg
ret
sbb
jo
add
inc
xor
adc
in
push
lods
outsl
enter
xchg
and
inc
movsl
lock
cmp
dec
and
ja
cmc
adc
push
push
mov
outsl
movsl
mov
out
dec
cmp
mov
in
mov
stos
cmp
notb
fistpl
mov
cld
dec
lcall
xor
and
aas
push
cmp
push
psubw
loopne
rcll
stc
pop
scas
inc
jmp
fsubs
fisubl
push
mov
jo
xor
jae
repnz
shrb
fisubrs
test
pop
test
pop
testl
add
mov
gs
mov
sub
adc
lcall
inc
mov
jg
jecxz
cmc
and
jle
aad
stos
ja
ret
aas
rcll
and
jnp
push
loop
pop
add
cmp
cwtl
notb
lcall
mov
sub
aaa
pusha
je
lret
fmull
loopne
mov
stos
ljmp
pop
xor
and
pop
jecxz
mov
out
in
lds
sbb
add
cmp
jle
cmpsl
pop
rcrl
fistl
stos
clc
out
lret
mov
in
into
dec
and
and
mov
lods
nop
pushf
mov
pop
push
jne
call
xor
jp
cmp
xchg
mov
jb
enter
dec
mov
pusha
imul
movsl
lret
adc
sti
sbb
fidivl
int3
shld
dec
enter
cld
adc
mov
add
cld
hlt
or
mov
jecxz
cmp
xor
dec
fildl
in
leave
mov
imul
lock
fcmove
mov
stos
leave
cmp
and
jbe
jne
jle
and
mov
jb
fstps
cmp
sub
xchg
rcrl
out
not
pop
inc
xlat
pop
jecxz
es
push
xlat
and
mov
mov
daa
jg
pop
cld
aam
lcall
dec
pop
fdiv
jecxz
jns
das
hlt
mov
and
hlt
lret
test
sbb
jg
jl
mov
rorl
lods
in
mov
es
and
cltd
and
dec
and
cmp
mov
daa
int3
jecxz
inc
call
das
setle
fcmovnu
pop
xchg
lock
cmpl
sub
jecxz
ss
lods
js
es
push
in
dec
out
lret
test
lds
ret
lahf
nop
sbb
and
pop
jne
inc
pop
pop
or
imul
pushf
loopne
ret
arpl
arpl
not
jae
imul
mov
sub
jns
nop
add
in
jle
fsqrt
addl
sbb
repz
mov
inc
maxps
test
push
push
out
and
xchg
arpl
xchg
icebp
lods
call
inc
jle
scas
out
dec
sub
divl
sub
mov
xchg
dec
fldenv
sub
sbb
cmp
int
dec
aam
dec
push
filds
fdiv
and
test
fmul
dec
popf
push
pop
test
mov
out
xor
adc
cltd
les
and
pop
sbb
mov
jne
or
add
xor
sub
aam
push
inc
xchg
loope
out
rolb
cmp
add
jp
rorl
mov
scas
pop
sbb
lods
or
cmp
outsb
adc
fstpt
pop
mov
adc
jl
scas
movsb
test
sub
pop
fs
mov
lods
lahf
sub
mov
or
in
fsubrl
repnz
sub
out
and
sub
ret
sub
test
jae
dec
cmc
push
pop
cmc
fidivl
sub
imul
addr16
mov
cmc
daa
data16
bound
push
int3
sub
scas
cmpsb
aam
xlat
inc
pop
loopne
in
add
push
aas
and
idivb
or
adc
pop
lea
hlt
sti
loop
mov
cwtl
dec
push
jb
fs
repz
jo
cmp
or
or
sbb
cmp
add
and
jnp
push
nop
jecxz
ficomps
push
jecxz
dec
imul
ret
adc
mov
sub
icebp
lea
movsb
filds
repnz
or
shrl
or
cmpsl
sahf
push
stos
jmp
jo
rolb
addr16
add
sbb
jg
adc
push
mov
cmpsl
jecxz
mov
push
inc
xchg
aam
aas
jnp
push
cmpsl
sbb
sub
add
jnp
xchg
cs
in
ficompl
add
outsb
push
rorb
sahf
mov
dec
sbb
in
cmp
push
and
sbb
push
or
gs
cli
xchg
jno
andb
push
decl
cltd
pushf
int3
jmp
or
sbb
rclb
mov
mov
pop
dec
mov
data16
cmp
ds
popf
add
scas
cwtl
mov
cld
dec
scas
jne
jp
ficoms
adc
mov
call
decl
and
stc
das
push
xor
add
and
cmpl
and
mov
data16
sub
enter
imul
incl
mov
cmpl
leave
push
test
es
pop
push
dec
cs
jg
xchg
icebp
xchg
imul
cmpsl
adc
jmp
mov
fsubp
push
pop
mov
rcl
aad
ds
stos
add
mov
rcrl
pop
xchg
mov
fs
xchg
mov
repz
inc
jmp
outsb
aad
shl
stc
imul
sbb
negb
repnz
shlb
rcrl
cmp
dec
ljmp
loope
add
push
fcoms
inc
cmp
mov
adc
cwtl
or
in
push
xchg
or
jo
sahf
rcrl
xor
inc
mov
in
xor
jg
mov
sub
iret
xchg
and
adc
cmp
jmp
inc
sub
xchg
mov
pop
inc
bound
test
or
cltd
lods
test
decb
lods
rcrl
jo
jbe
cli
jge
and
cmpsb
cmp
lea
ljmp
lea
scas
push
push
ds
jge
test
xor
cltd
sub
pop
popf
pop
and
lds
out
popf
inc
test
lahf
jmp
ljmp
xchg
imul
imul
jne
or
popf
imul
xchg
jge
or
cmpsl
dec
pop
ljmp
out
push
bound
adc
jbe
nop
fildll
cmp
push
push
enter
adc
pop
addr16
not
cld
pop
pop
adc
cmp
xlat
hlt
jno
or
mov
cmp
outsl
mov
ror
je
aad
idivl
add
sarl
arpl
push
push
call
test
push
pop
cld
push
inc
daa
xor
add
lret
ret
sti
pop
icebp
testb
out
xchg
adc
cltd
nop
add
call
jg
mov
adc
aam
jl
leave
gs
test
jg
push
mov
jns
testb
mov
mov
push
jns
push
jnp
arpl
cwtl
movsl
mov
in
es
out
or
mov
insb
orb
add
fs
js
inc
push
add
jg
pop
adc
jne
push
push
pop
mov
inc
jae
cld
sahf
and
pushf
test
jp
dec
in
ljmp
fisubrs
in
push
fldcw
xchg
out
xchg
xor
cmp
lods
or
ja
add
mov
lea
cmp
inc
mov
mov
pop
rorb
push
aas
sbb
fbstp
std
jmp
cld
ja
jne
cmpsl
sub
imul
pop
mov
je
mov
dec
sbb
and
push
outsl
rolb
mov
xor
call
in
xor
or
das
and
adc
sbbb
sahf
jno
lret
ljmp
dec
sti
mov
mov
pusha
dec
lahf
js
jmp
in
mov
add
or
rcll
enter
decb
pop
inc
ds
jmp
enter
sbb
push
jns,pt
rclb
insb
js
imul
fadd
addr16
sbb
xor
inc
addl
leave
mov
adc
cmpsl
xchg
daa
push
bound
xlat
mov
call
inc
or
shl
push
xchg
push
mov
jb
out
xchg
push
or
mov
mov
mov
cli
jnp
orb
xor
faddl
inc
loop
pop
mov
jmp
xchg
popa
sahf
inc
and
pmaxsw
sub
ficompl
xchg
call
xor
inc
xor
in
aaa
sbb
and
or
imul
arpl
cmp
andl
push
pop
ja
out
loop
pop
dec
lret
sti
cmc
pop
mov
pushf
jo
int3
dec
lahf
es
pop
out
mov
xchg
aaa
inc
shlb
ficomps
xchg
ljmp
jb
xor
jp
aaa
out
lret
push
pop
xchg
outsb
bnd
sbb
shll
jb
cmp
lret
inc
cs
xchg
rcrl
mov
xchg
push
shl
sub
dec
pop
fwait
pop
mov
roll
inc
movsl
mov
loopne
loopne
dec
or
pop
inc
mov
nop
or
jecxz
cmp
inc
lds
in
xlat
push
cmp
in
push
mov
push
dec
lods
add
sub
stos
xor
repz
mov
test
inc
inc
loopne
push
dec
in
imul
fwait
inc
fs
inc
mov
jecxz
xchg
pusha
pop
fbld
jo
adc
xchg
jg
idiv
and
dec
xchg
std
pushl
jb
sub
lods
pop
pop
jl
aad
jge
cmp
jne
scas
lea
pusha
xor
push
xor
or
cmp
cmpsl
sbb
stos
ds
adc
mov
dec
and
push
test
dec
scas
popa
ret
mov
adc
lret
inc
push
in
xor
into
cmp
xchg
xchg
mov
cmp
mov
movl
jle
mov
or
push
or
jnp
sbb
mov
inc
aas
cmp
cmpsb
xor
mov
out
xor
fnstcw
imul
out
sbb
mov
les
or
inc
les
jns
arpl
ds
inc
test
out
mov
hlt
fmull
inc
fistps
cltd
fwait
sarb
xor
push
sbb
add
jmp
mov
jmp
push
sub
inc
push
xchg
pop
sub
bound
xor
jnp
sub
sar
mov
int
int
mov
shrl
fs
xchg
sbb
sub
jns
jmp
fwait
push
lods
jg
fidivrl
cli
test
in
repz
and
dec
test
nop
sub
adc
roll
cmpsb
mov
jmp
add
ljmp
ja
sub
mov
ds
cmp
pop
dec
sub
jge
sub
mov
leave
pop
inc
sbb
lods
mov
clc
scas
mov
push
and
imul
es
sub
dec
xchg
shll
clc
pop
xchg
fmulp
test
dec
addb
js
or
lret
aas
mov
add
jmp
dec
bound
cmpsb
test
mov
push
addl
push
add
and
repz
sub
sbb
adc
stos
pushf
in
rcr
mov
mov
dec
push
nop
lahf
xor
mov
mov
call
fadd
adc
jb
mov
hlt
and
sub
mov
pushf
mov
jp
pop
sbb
xor
scas
sahf
test
mov
xor
mov
in
stos
pop
cmpsb
adc
out
push
lret
repz
subl
xor
nop
enter
jo
cmpsb
sarb
outsl
push
xchg
push
stos
cld
mov
pop
cmp
fs
and
push
or
add
mov
sbb
mov
incb
cmp
das
jle
mov
cmc
mov
xchg
stos
pop
orl
lods
push
stc
pop
packsswb
cli
fsubrs
xchg
mov
lds
and
sarl
rclb
iret
xchg
stos
das
mov
imul
jg
popa
aaa
pop
mov
les
xchg
xor
add
insb
lods
popf
ds
push
pushf
out
pop
bound
sbb
mov
iret
mov
std
xchg
inc
andl
stc
and
adc
stc
adc
movsb
adc
roll
lret
push
lock
loopne
mov
add
add
push
inc
push
inc
bound
dec
repz
fdivrp
out
adc
pop
mov
pop
sbb
loop
je
pop
mov
pop
pushf
and
and
xor
popl
cli
idivl
push
gs
loop
ja
mov
pop
cmp
arpl
push
mov
cmc
xchg
or
cmp
sbb
jecxz
or
jecxz
inc
bnd
xorl
repnz
loope
lar
sbb
mov
add
mov
or
pop
dec
ficoms
push
mov
icebp
mov
pop
add
notb
clc
pop
xor
adc
test
xlat
xor
pop
and
push
outsl
ret
outsl
aaa
std
out
lret
mov
push
jns
outsb
lock
cmp
dec
movsb
aas
mov
cmp
and
test
out
ljmp
gs
adcl
jl
or
cmp
ffreep
xorl
stc
sbb
out
cli
movsb
jge
xchg
mov
ret
fs
add
imul
int
mulps
out
inc
leave
mov
sti
aad
cwtl
inc
repz
faddl
adc
mov
xor
adc
lods
fidivl
int3
lea
adc
sbb
sub
push
mov
push
inc
xchg
popa
lock
ret
gs
xor
sub
dec
ss
imul
mov
jle
xor
mov
vpcomltq
in
in
lcall
lds
mov
icebp
xchg
and
dec
mov
pusha
cltd
jmp
lock
call
sbb
pusha
mov
sahf
push
outsl
nop
lahf
and
fwait
push
push
xor
das
scas
scas
cmp
push
xchg
jne
ret
mov
jg
jno
jp
je
inc
and
mov
decl
mov
cwtl
xlat
loopne
push
insb
cmp
getsec
test
sbb
lret
add
inc
adc
jge
lock
and
nop
add
cmp
cli
ss
lret
fs
addr16
pop
hlt
add
fidivl
fwait
jge
mov
push
cs
inc
addr16
mov
jb
ja
adc
fcomps
xchg
in
adc
push
ja
push
xchg
xchg
arpl
jmp
in
and
sub
aam
fs
stos
cld
cs
mov
arpl
test
cmp
js
test
aam
sub
mov
mov
sbb
faddp
sbb
sub
mov
jp
cmpsl
sbb
pop
aas
xor
push
gs
testb
fstpl
xor
dec
nop
or
jb
mov
push
adc
mov
sbbl
dec
adc
addr16
hlt
jmp
cmpsl
dec
mov
repz
pop
jmp
inc
fcomps
adc
fs
mov
aas
and
ret
mov
inc
pop
add
xor
jae
inc
inc
jno
dec
adc
mov
test
jle
inc
mov
inc
add
push
push
push
iret
mov
sub
pop
mov
sbb
sarl
cmp
repnz
dec
mov
xchg
fstpt
js
repz
lods
lds
ss
pop
cmp
sbb
shr
scas
fwait
cs
sti
shlb
nop
and
roll
pusha
mov
mov
test
cmp
push
mov
fwait
inc
jo
outsl
add
insl
xchg
pusha
flds
and
cmpsl
stos
lds
sahf
mov
in
push
cmp
ss
mov
js
sbb
add
pop
adc
add
adc
into
int
js
push
arpl
sub
inc
add
or
insb
jmp
mov
xchg
adc
mov
out
jecxz
xchg
dec
inc
cmp
jle
daa
out
push
adc
mov
jo
shrb
mov
mov
ret
imul
inc
mov
test
push
jns
push
pop
repnz
or
mov
xorb
jl
jl
stc
out
into
int
aaa
mov
push
mov
mov
lock
jmp
out
out
stos
jl
adc
push
add
or
test
ljmp
push
push
int
in
push
mov
cwtl
bnd
adc
push
dec
lcall
lret
and
xlat
out
sti
aas
xor
movsb
jecxz
pop
int
push
outsl
in
mov
loop
xchg
push
lea
xchg
stos
push
cmp
xchg
push
push
movsb
mov
sti
gs
adc
push
fs
imul
jbe
ja
out
cmp
into
fsubs
sbb
rcrl
clc
push
and
shr
jp
mov
mov
mov
lods
sub
mov
es
sub
xchg
xor
sbb
jg
pop
outsl
xchg
lcall
sahf
add
xchg
xchg
mov
insb
mov
push
pop
in
repnz
adc
add
mov
int3
jl
bound
cwtl
xchg
sbb
subl
loope
pop
cmpsl
sub
insb
xor
inc
xor
fldcw
jge
push
fcmovnb
jb
cmpsb
adc
push
fcomp
cmpsb
sub
jecxz
jbe
xor
adc
or
jg
dec
sbb
call
clc
andb
or
push
scas
adc
ret
out
int3
adc
aam
mov
call
data16
sarb
xor
lods
jp
rol
cmc
fsubs
sahf
shrl
pop
je
gs
jmp
fbld
fwait
data16
aaa
notb
div
cmc
ss
es
jnp
test
mov
or
adc
inc
out
call
cltd
lret
xchg
cmp
push
jecxz
mov
out
pop
repz
out
out
fs
je
push
pop
rcr
push
daa
clc
pusha
push
andl
fsubs
jmp
out
sbb
loopne
push
jno
fwait
mov
int
or
repnz
inc
inc
scas
inc
fs
add
imul
jl
add
dec
pushl
dec
inc
das
fcmovnu
mov
popl
inc
clc
mov
sub
lods
cmp
lock
dec
jl
ret
addl
hlt
cld
cmp
and
es
jmp
rolb
ds
sti
mov
cmp
or
xor
jle
insl
mov
popf
add
jp
and
and
sub
cwtl
test
add
jge
mov
inc
sbb
fiaddl
rorb
push
aad
cmp
pop
ja
mov
jns
xchg
shrl
mov
pushf
lret
pop
je
jae
or
orb
shl
sbb
jecxz
popl
inc
xorb
mov
stos
mov
daa
pop
cmp
jle
fwait
cmp
cmpsl
mov
pop
cld
lea
subb
repnz
jp
inc
scas
or
ret
data16
push
mov
pushf
sarb
sbb
sub
loop
in
test
sub
xchg
icebp
fiadds
mov
pop
mov
push
nop
mov
loop
and
sbb
cltd
jbe
pop
not
test
addr16
out
dec
push
fwait
inc
xchg
shlb
ja
push
jge
cmp
dec
movsb
sub
sbb
push
mov
shrl
int
xchg
add
scas
xchg
add
cmp
or
xor
mov
aaa
mov
out
test
pop
ljmp
dec
cmp
mov
sbb
fsubr
sbb
pop
jp
pop
out
and
push
out
sbb
out
sti
fisttpl
js
repnz
in
gs
add
leave
xchg
mov
adc
pop
sbb
mov
pop
add
jg
arpl
mov
das
sub
into
fnstenv
adc
insl
add
or
lods
jbe
scas
xchg
stc
cmp
add
std
push
cmp
int
mov
lcall
or
and
xchg
cmp
cmp
push
or
adc
xchg
inc
fimuls
into
bound
dec
out
rcr
sub
iret
iret
das
negl
daa
mov
popf
bound
cmc
cmp
insl
mov
and
imul
pop
ficoml
pop
pop
cli
icebp
xor
decb
pop
mov
cmp
sbbb
mov
test
fimull
mov
mov
daa
shrl
icebp
cmp
ret
sbb
cmpsb
jle
sbb
jp
mov
cli
fstps
loopne
stos
nop
xor
in
iret
jmp
push
push
push
adc
repz
daa
xor
int
es
insb
mov
sbbb
outsb
shl
push
fiaddl
jecxz
lods
jne
xor
dec
fucom
addl
lock
mov
jmp
fsubrl
dec
mov
mov
call
lock
test
jp
scas
push
les
xor
fs
sti
sub
ror
push
inc
add
rolb
dec
mov
mov
jecxz
push
int3
stos
ljmp
jecxz
fadd
jecxz
jg
jb
divb
push
icebp
lcall
hlt
adc
out
pushf
out
iret
movsb
pop
sbb
sbb
ja
test
mov
fmul
xchg
cmp
in
sbb
fsubrp
aad
mov
pop
cmc
pop
addr16
adc
stos
xlat
mov
cmp
lods
cmp
arpl
into
mov
push
inc
mov
inc
cmp
divl
repnz
test
add
and
jns
or
pop
loopne
or
pop
inc
nop
loop
jmp
and
arpl
xchg
adc
ss
ror
or
push
dec
cld
ret
push
out
xchg
ljmp
xchg
and
add
jae
xchg
mov
xor
xchg
scas
xchg
sbb
mov
or
xchg
aam
fists
adc
cmp
stc
gs
pop
jae
dec
pop
ret
xchg
jge
mov
fs
jge
sahf
or
test
sbb
inc
sti
outsl
loopne
cmp
mov
mov
imul
imull
inc
jnp
jl
cltd
and
adc
shl
out
xchg
nop
or
daa
push
xor
cltd
push
mov
and
mov
pop
lahf
mov
xor
push
push
push
aaa
ret
rcrb
jmp
fistpl
imul
in
adc
cmc
inc
or
mov
add
jg
sub
mov
mov
sahf
int3
mov
out
mov
int3
lock
flds
mov
int3
jecxz
ljmp
pop
dec
testl
jl
lret
cltd
push
repnz
jbe
jge
sahf
pusha
jns
movsl
sahf
xor
ja
pop
lea
shlb
cmp
cmc
data16
orl
pop
xchg
jl
std
or
icebp
inc
mov
bound
arpl
push
dec
and
clc
add
and
sar
mov
or
push
push
xchg
cltd
cmp
push
mov
fwait
or
out
dec
sahf
clc
rcrb
data16
ss
jmp
shll
repz
shl
xlat
out
push
pushf
ficoms
ror
mov
test
add
cmc
adc
ja
xchg
sbb
inc
int3
js
dec
or
xchg
or
test
fld
pushf
pop
sub
pop
iret
cmp
fprem
mov
call
pop
sub
mov
inc
mov
inc
pop
adc
xchg
ljmp
repnz
popf
cwtl
xchg
jle
out
push
add
mov
repnz
mov
pop
arpl
cs
xchg
repnz
pop
mov
sbb
gs
push
cwtl
dec
mov
out
lret
int
push
mov
push
scas
xor
jbe
stc
sub
repz
arpl
clc
repnz
imull
notb
mov
jp
xchg
ror
mov
push
mov
lcall
push
push
xorl
jp
loopne
xchg
jnp
imul
sbb
dec
dec
xchg
subb
bound
out
pop
dec
pusha
cmpsl
mov
mov
scas
mov
fistl
enter
outsl
fwait
test
ljmp
cmp
and
pop
daa
testl
mov
pop
inc
subl
sub
jecxz
xlat
dec
lock
sub
lret
insb
mov
loopne
push
scas
mov
fwait
stos
je
sbb
xor
int
push
sub
xchg
add
nop
cmp
test
sbb
cmp
das
iret
xchg
and
xor
out
xlat
enter
and
cmp
addr16
pop
pop
repz
xchg
inc
pop
scas
xor
repz
mov
jecxz
and
test
bound
ljmp
push
pop
dec
add
xchg
clc
and
shlb
je
cmp
cmpsl
mov
add
sbb
out
insl
sub
shll
jl
in
clc
in
sub
push
aas
popf
outsb
loopne
mov
cmpsl
cmc
push
jbe
cld
lahf
mov
mov
sbb
inc
mov
and
or
pop
add
test
mov
arpl
andl
mov
xchg
pop
xor
sbb
cmpl
je
pop
sub
sub
push
sub
negb
test
push
lahf
rorb
out
xchg
cmp
movsb
cltd
add
enter
sbb
fmull
xchg
lret
sub
ja
cmpsb
adc
cltd
cmpsb
popf
pop
mov
mov
lods
jnp
pop
mov
jnp
mov
or
add
xchg
push
fistpll
cli
cmp
lret
pop
lahf
add
in
or
and
pop
pop
adc
fcomps
mov
mov
add
pop
mov
push
mov
cld
std
inc
pop
lcall
je
fbld
aas
jno
or
dec
ret
loope
jl
stos
stc
mov
pop
add
sub
xor
sbb
dec
jg
lahf
xor
xchg
cli
aaa
fimull
mov
jne
data16
cld
clc
cmpsl
and
out
leave
addl
dec
aam
xchg
mov
mov
hlt
popl
cwtl
test
pushf
jl
lds
addr16
jge
cmp
inc
add
inc
mov
inc
mov
inc
stc
add
xchg
push
xorl
dec
push
dec
fldt
ret
leave
jbe
outsb
pop
sub
outsl
mov
mov
fcomps
out
mov
fwait
jle
pop
enter
inc
stos
pop
dec
pop
mov
xor
cmp
xor
mov
inc
cmp
sbb
sbb
imul
in
in
mov
add
sbb
push
pop
jle
push
idivb
add
add
arpl
in
cmp
insl
xchg
insl
add
and
stc
sbbl
push
and
aaa
out
lcall
es
cmp
sbb
fdecstp
loopne
insb
jae
lret
mov
sbb
test
push
ss
les
mov
sbb
and
shl
in
data16
mov
int3
and
cwtl
pop
imul
leave
das
ljmp
adcl
and
sarl
xchg
add
or
and
or
mov
xlat
push
push
inc
xchg
inc
mov
jp
stos
and
mov
test
dec
xor
lock
push
test
inc
stos
cmpsl
mov
aaa
push
pop
adc
mov
mov
out
out
fdivl
or
mov
or
cmp
sub
std
push
and
fadd
add
loope
jb
and
sbb
mov
jno
popa
pop
ja
or
ljmp
push
xchg
lea
mov
mov
xchg
dec
out
imul
mov
loopne
or
je
data16
jae
inc
mov
mov
gs
adcl
ret
ret
sbb
bnd
and
xchg
movsl
lcallw
adc
loop
inc
xchg
out
mov
lods
ja
xchg
add
aam
inc
and
rorb
test
dec
inc
in
cmp
xchg
sub
shr
sub
outsl
dec
sub
mov
test
jl
aam
push
enter
lods
mov
jbe
jns
pop
cld
stc
sub
mov
shrl
jns
or
jne
mov
stos
add
jno
cmp
or
add
cmp
xchg
inc
bound
mov
nop
out
mov
jo
add
fisubs
das
jg
jp
jmp
mov
jnp
std
into
call
out
pushf
or
mov
shr
mov
cmp
je
jbe
imul
int
loope
test
mov
pop
es
jle
movsl
cmp
xchg
add
dec
sbb
inc
push
jne
jp
in
or
pop
fisttpl
pop
rorl
pop
int3
sub
push
jae
sbb
push
int3
xchg
nop
xor
add
flds
fstpt
adc
scas
ret
orl
inc
dec
imul
mov
mov
jle
popa
pop
popf
mov
adc
dec
hlt
push
pop
sahf
lcall
shlb
mov
jo
outsl
mov
or
pop
sub
outsb
negb
xchg
es
mov
xchg
sbbl
adc
jnp
xchg
sbb
gs
adc
jo
jge
ja
rcr
sub
lock
fisubl
mov
inc
xchg
cli
cmp
or
data16
stos
rorb
dec
andnps
xor
push
inc
xchg
in
clc
mov
test
sbb
jno
cmp
scas
push
adc
mov
mov
cmp
push
fxch
sbb
xor
testb
out
ret
ljmp
mov
push
in
stc
dec
push
cmp
mov
or
cld
mov
push
push
stos
pop
jp
pop
decl
lock
push
adc
inc
movsb
or
imul
stc
mov
adc
out
and
mov
or
mov
and
mov
clc
sub
push
cltd
out
dec
sarb
sub
pop
gs
lcall
imul
xchg
test
pop
rcrb
pushf
stos
mov
add
add
dec
jmp
pop
lahf
sbb
xor
inc
rcr
scas
fcomip
int
jo
mov
cltd
shlb
mov
and
int
mov
inc
dec
cmpsl
movsb
inc
add
xchg
jecxz
rcr
lock
jb
popa
mov
inc
jb
ret
in
es
mov
daa
xchg
int3
aaa
out
test
popa
ljmp
push
sub
test
movsl
lcall
mov
into
sbb
dec
dec
inc
mov
in
fdivr
sbb
push
adc
fidivrs
push
or
push
lock
fisttps
xchg
fildl
lods
pop
pop
das
or
jmp
adc
jo
push
push
repz
js
enter
jl
leave
xchg
les
push
ja
jno
sti
inc
and
dec
insl
in
or
jo
daa
jns
xchg
les
insb
mov
daa
loope
adc
jle
cmp
into
inc
mov
pop
xor
dec
sub
sbb
pop
clc
push
jb
lods
nop
push
sbb
jae
xchg
mov
loope
shll
push
lods
sub
pop
icebp
cmp
dec
inc
mov
push
cmpsb
fs
stos
jnp
mov
mov
cmp
lods
mov
enter
aaa
fs
imul
sub
arpl
push
iret
mov
cltd
pop
push
cwtl
pop
fisubs
mov
xorl
dec
add
jmp
push
add
dec
or
mov
pop
sbb
das
xchg
jge
xchg
sbbl
mov
xor
andl
fidivrs
jne
js
push
stos
rorb
sub
lahf
popa
sbb
outsl
pop
lock
xchg
sub
insb
dec
sbb
inc
push
jne
pop
push
push
dec
bound
xchg
mov
cmpsb
sub
mov
out
and
cs
cmpsb
pop
cld
pop
shl
sbb
xchg
aad
das
cmp
sub
jmp
sahf
std
adc
cmp
or
push
int3
fs
mov
push
aad
cmp
adc
xchg
cmp
adc
imul
jne
inc
sbb
dec
aas
adc
mov
pop
add
das
cmc
xchg
sbb
pop
outsl
cmp
mov
sub
test
xlat
jle
shl
dec
xor
mov
movq
mov
dec
jno
ja
nop
jbe
inc
or
cmp
xor
push
push
sbb
ljmp
push
mov
leave
mov
movsl
push
fsub
lret
jbe
xchg
inc
xchg
add
in
xor
mov
aaa
xor
dec
or
ficoml
adc
test
cmpsb
lret
lock
pop
setae
jge
cltd
add
push
inc
and
mov
pop
negb
jp
jmp
push
or
lock
out
mov
fstpl
add
iret
lods
add
xchg
cmp
lahf
mov
cs
repz
shll
push
inc
mov
xchg
mov
imul
xchg
lods
pop
scas
xor
iret
clc
cli
or
jbe
lcall
pop
popf
dec
push
xor
jne
xlat
jns
jb
cmp
sbb
stc
clc
ficoml
cld
xchg
pusha
xchg
pop
dec
xor
xor
loop
push
dec
inc
cmc
jne
dec
jns
dec
sub
testl
xor
pop
xchg
pusha
inc
lods
sub
test
notb
lret
pop
repnz
movsb
inc
xor
pop
stos
lahf
mov
mov
and
repz
push
mov
xchg
dec
push
bound
cmpsl
mov
aaa
popf
outsl
std
mov
stos
push
repz
imul
test
mov
mov
mov
es
push
in
andl
lret
mov
push
push
leave
into
das
inc
ret
sub
inc
mov
pop
ss
xchg
mov
fs
mov
outsl
scas
adc
fistpl
loop
inc
ret
in
sub
push
adc
fcmovnb
cmp
push
mov
sarl
stc
je
cwtl
imul
xor
push
daa
inc
testb
xchg
cli
adc
clc
add
push
lret
xor
or
cmc
sub
sub
pop
inc
add
repz
leave
dec
std
dec
lods
inc
enter
push
fildll
add
popa
ror
xlat
mov
lahf
inc
or
sbb
dec
or
popa
sbb
cwtl
add
lret
xchg
inc
mov
add
dec
test
jle
jbe
ss
push
data16
orl
fnstenv
jmp
jmp
xor
loope
roll
aaa
mov
xor
hlt
push
mov
lds
mov
rclb
arpl
pop
addr16
cs
xor
js
mov
cmc
mov
insl
jmp
xchg
sti
das
outsl
jne
movsb
push
sub
adc
xchg
cwtl
push
ret
cwtl
aam
std
nop
push
mov
pop
test
bound
aad
and
sub
jecxz
xor
mov
fwait
and
out
cmp
je
out
es
jae
mov
and
and
loope
jg
mov
imul
scas
lock
cltd
mov
inc
lahf
mov
adc
dec
mov
test
xchg
mov
out
jp
pop
adc
addb
clc
cmpsb
add
xor
mov
fdivl
mov
pusha
jnp
or
pop
xor
lock
xor
dec
pop
hlt
sub
aaa
inc
mov
sbb
pop
arpl
rcll
inc
addr16
shlb
movsl
notl
in
out
and
cmp
and
fists
adc
iret
test
jl
jae
xchg
push
arpl
test
cltd
test
addr16
pop
jmp
hlt
mov
mov
pop
sub
es
push
and
aas
mov
std
mov
lods
out
inc
and
adc
roll
or
mov
mov
mov
pop
rolb
and
mov
js
jbe
push
xor
or
xchg
rcl
dec
loop
jle
push
aaa
scas
mov
pop
stos
vmovdqu
iret
inc
sbb
dec
or
jmp
cli
sbb
inc
je
and
outsl
xchg
popa
add
push
and
jb
sub
jmp
cld
mov
js
dec
idivl
mov
sbb
or
flds
mov
pop
inc
sbb
lcall
xchg
or
sbb
mov
sahf
mov
stos
adc
pop
outsb
jb
pop
sbb
mov
pushf
cmp
ss
push
push
cwtl
sbb
xor
pop
mov
pop
lea
cmp
jmp
cmp
xchg
add
jns
sbb
call
pop
ja
inc
add
fadds
call
lcall
adcb
sub
outsb
out
or
cmp
xchg
mov
jge
xchg
sbb
cmp
cwtl
pop
cmpsb
aad
dec
loope
nop
mov
mov
pop
bound
dec
adc
mov
and
or
mov
out
xlat
fimull
and
sbb
fildl
leave
imul
nop
jo
pusha
dec
cmp
push
icebp
or
jle
jae
pop
jo
push
call
push
icebp
jbe
rcrb
xor
movsl
cltd
push
shrb
push
adcl
or
sub
fistpl
test
mov
jbe
inc
bound
push
cmc
mov
mov
sub
insl
ljmp
dec
lods
pop
not
pop
out
loope
fbld
ja
movsl
and
lods
and
imul
fs
xor
push
xchg
adc
dec
mov
mov
orl
ljmp
add
push
mov
sbb
ja
sbb
mov
scas
testl
mov
lahf
push
jle
cmpl
sbb
repz
jo
cld
cwtl
dec
jae
cli
fwait
pop
fwait
dec
call
add
sbb
js
aas
pop
mov
jle
mov
cmp
nop
xor
out
mov
pop
movsb
imul
sub
ljmp
pop
lock
int3
fiaddl
push
add
shlb
adc
cli
or
movsb
or
mov
stos
push
xchg
cmpl
adc
sub
push
add
imul
insb
or
pop
rolb
mov
adc
push
scas
add
and
pop
arpl
jne
lea
cmp
xor
sub
das
ja
shrl
rol
jns
das
adc
ja
push
daa
xor
pop
dec
dec
push
xchg
cltd
sbb
jmp
mov
add
mov
lds
nop
dec
sbb
push
out
aad
xor
iret
lods
shll
dec
sbb
push
hlt
and
cmp
gs
and
inc
add
xchg
lods
fisttpl
mov
jecxz
mov
faddl
sub
pop
scas
cmp
fwait
es
dec
inc
out
mov
repz
pop
shlb
cmp
into
cmp
xchg
addr16
cmp
lret
inc
xlat
sbb
push
loop
push
lahf
cld
stc
roll
dec
mov
cmpsb
push
mov
push
and
fwait
push
pop
in
dec
int
mov
mov
fnstenv
adc
pop
mov
shlb
xchg
and
inc
mov
mov
push
jp
stos
mov
ss
lods
jb
lret
fxch
lods
mov
in
int3
push
ljmp
inc
sbb
es
xor
pop
pop
int
push
pushf
inc
into
enter
es
or
shl
adc
ja
adc
push
cmp
or
add
dec
pop
cltd
popf
arpl
js
pusha
jecxz
dec
xlat
xchg
fwait
jmp
add
jl
pop
xor
mov
mov
scas
push
dec
in
cld
mov
inc
and
pop
insl
movsb
fnsave
jns
arpl
cwtl
add
aad
stos
xchg
rcll
xor
xchg
shr
and
fdivrl
mov
adc
ja
icebp
dec
mov
xchg
fcoml
and
xchg
icebp
lods
pop
and
xchg
jno
mov
lds
pop
inc
and
push
xor
das
pop
in
aas
mov
popf
lret
push
and
or
push
push
movsb
cli
fmull
mov
lcall
repnz
aas
mov
add
in
mov
jle
cmp
sbb
aad
mov
fldcw
adc
and
inc
fiaddl
lea
mov
mov
pop
mov
in
js
xor
xchg
imul
xchg
mov
mov
inc
and
aad
cmc
jb
and
inc
sbb
cmpsl
shll
sti
imul
xlat
pop
sub
lahf
pop
into
scas
inc
pop
pop
inc
cli
in
lahf
lock
push
sub
xlat
addb
xchg
or
mov
in
mov
out
jae
fwait
loop
ljmp
or
iret
movsl
push
lret
and
add
int3
or
adc
lahf
std
out
push
push
pop
jae
xchg
push
mov
xchg
aas
cltd
pop
ret
es
lahf
add
adc
mov
inc
aad
add
push
jae
testl
fildl
push
xchg
jle
enter
jnp
xchg
sub
out
and
bndstx
inc
hlt
jmp
movsl
outsb
subl
mov
fistpl
mov
pop
adc
mov
xchg
out
sub
sub
aad
out
in
stos
push
cld
mov
out
push
push
testb
push
hlt
jp
jg
daa
push
inc
test
push
xor
and
test
jae
sahf
hlt
sbb
out
jg
clc
fwait
enter
add
push
les
into
cmp
dec
mov
repnz
push
cltd
fnstsw
inc
arpl
pop
repnz
add
call
or
dec
loope
into
sahf
push
add
jo
roll
repz
mov
repz
call
mov
mov
jl
leave
push
hlt
cwtl
jmp
xchg
popf
out
jno
call
ljmp
xor
mov
aad
lret
xchg
or
cmpsl
neg
cs
lret
rcrb
inc
sub
jo
xchg
pop
loope
pushl
movsl
std
jae
aas
scas
mov
push
pop
xchg
movl
fidivrs
cltd
xor
insl
int3
enter
jl
faddp
pop
dec
jae
icebp
mov
xchg
push
dec
movsb
push
cmp
pop
gs
outsl
push
push
leave
xor
or
jp
das
mov
aam
jno
stos
fidivrl
cmp
mov
lcall
lahf
jnp
jno
es
sbb
lcall
sub
cmc
or
aad
fisubl
test
scas
mov
mov
xchg
das
hlt
data16
dec
clc
xchg
jnp
or
fistpll
fcomp
mov
cld
addr16
push
ret
inc
leave
xchg
popf
xchg
xchg
inc
push
mov
jp
inc
mov
pop
sub
out
add
add
mov
cwtl
sbb
mov
mov
outsb
repz
xchg
sti
xor
icebp
jnp
js
outsb
or
lods
xchg
test
mov
jl
insl
lret
in
jne
rcrl
sarb
cmp
iret
les
and
mov
addr16
mov
dec
fcoms
bound
sub
push
sbb
mov
divl
sti
mov
test
daa
in
adcl
add
das
mov
xchg
jne
inc
jno
xchg
or
xchg
xchg
ret
push
sbb
pusha
pushf
mov
push
sub
sar
outsb
cli
andb
mov
gs
daa
lahf
shrb
fisubl
inc
mov
sbb
out
jmp
sub
mov
in
and
test
push
cli
jmp
pop
jl
hlt
and
adc
movsl
jge
std
xchg
clc
sarb
enterw
push
insl
pop
repnz
mov
xchg
mov
add
pop
ret
scas
adc
sbb
daa
or
enter
inc
dec
es
jo
pop
rorb
sbb
push
movsl
cs
in
fldl
xchg
cmp
pop
add
cmp
jae
js
add
jo
dec
or
mov
lcall
mov
test
in
and
cltd
icebp
outsb
lret
cmp
push
cmp
std
mov
push
je
xchg
fsubrs
jne
popa
test
call
shlb
inc
pop
movl
xor
pop
mov
inc
jmp
in
test
bound
push
hlt
pop
test
out
pop
add
mov
hlt
pop
out
pushf
or
lret
mov
cltd
stos
jbe
sub
push
sbb
xor
jmp
sahf
fstpl
jg
andl
psrld
push
je
add
lods
jecxz
xchg
fs
dec
leave
test
xchg
repnz
mov
pop
pop
xor
call
add
bound
jb
ss
pop
sbbb
iret
in
lods
leave
scas
loop
enter
and
into
jecxz
xor
icebp
sub
xor
pop
scas
mov
hlt
pop
and
fnsave
test
cli
dec
sub
and
push
shlb
and
and
and
cld
enter
pop
adc
test
xchg
sub
loope
call
ja
mov
loopne
jno
adc
mov
inc
xchg
test
pusha
push
jae
mov
dec
jbe
test
xchg
inc
add
out
inc
or
xchg
loop
inc
jae
xchg
sub
arpl
iret
xchg
inc
pop
das
dec
mov
scas
lea
mov
icebp
testb
nop
outsl
test
repnz
data16
ret
imul
jns
stos
add
mov
and
pmullw
push
xor
push
push
and
sub
lock
scas
sbb
sbb
pop
leave
popa
lods
xor
adc
adc
sbb
in
lods
arpl
or
xor
sub
repz
cmp
call
sub
movsl
jg
or
push
dec
movsb
dec
push
enter
jne
add
push
sbb
jge
xlat
bound
xchg
push
mov
jae
outsl
imul
cmc
pop
mov
fnsave
xchg
pop
out
loop
inc
xor
pushf
dec
in
xchg
mov
repnz
sbb
mov
push
inc
mov
imul
sbb
or
and
jge
orl
mov
aas
out
adcl
imul
push
mov
and
xchg
movsb
leave
cmpl
cmp
xor
imul
pop
lods
outsb
push
xchg
cmp
shrl
clc
xorb
out
sbb
sub
movsb
and
lds
call
ljmp
push
xor
inc
hlt
out
pop
insl
cmc
xchg
adc
push
ljmp
cmc
lret
stos
add
adc
xchg
and
adc
les
mov
fwait
js
scas
fwait
lods
and
cltd
fcomps
or
negl
mov
inc
out
push
add
fwait
push
lea
nop
sub
sbb
popa
sbb
addr16
jecxz
lock
dec
dec
add
lds
stos
pop
inc
stos
outsl
dec
nop
adc
mov
mov
mov
jae
mov
dec
xorb
inc
xor
sarb
mov
sbb
jg
pushf
testb
sbb
incl
jnp
mov
dec
add
jae
out
mov
mov
mov
push
idivb
mov
movsb
jmp
cmp
arpl
dec
shrb
js
imul
scas
pop
sti
push
iret
sbb
mov
mov
dec
mov
mov
mov
roll
push
and
jb
mov
sub
cmp
push
loopne
mov
xor
test
cwtl
cmc
dec
movsb
cmp
mov
mov
push
adc
xchg
sbb
mov
pop
out
push
lcall
adc
xchg
je
call
push
insb
addl
adc
adc
in
adc
mov
cmp
push
xor
jmp
out
call
cli
xor
jge
ljmp
cmp
test
pushf
sarl
roll
loope
jle
push
dec
sahf
clc
mov
sbbl
mov
lret
test
mov
mov
pop
roll
dec
adc
mov
jl
xor
leave
add
push
stos
mov
jle
nop
pushl
push
sub
mov
push
popf
lea
sbb
aaa
jg
fisttpl
xchg
sub
push
or
push
and
cmc
and
popa
mov
hlt
sti
not
aam
scas
xchg
xchg
sahf
mov
arpl
addr16
cmp
pop
mov
orb
mov
xor
mov
fisubrs
jb
mov
gs
fsubrl
scas
mov
xchg
daa
push
mov
insb
iret
jl
mov
mov
popa
lcall
xor
inc
inc
outsb
pushf
popl
jbe
inc
sti
cmp
aad
mov
jno
mov
and
ljmp
lret
lahf
out
fidivs
rep
test
fldl2e
movsb
cmc
cli
in
daa
adc
movsl
xchg
lcall
popfw
pop
mov
std
xchg
lret
or
dec
scas
lock
xorl
or
gs
inc
das
mov
in
push
xor
push
xchg
jae
cmc
cmp
ja
pop
xlat
fwait
and
test
shlb
sub
xchg
pop
or
fdivr
in
push
xchg
cs
pusha
scas
sbb
jmp
lcall
push
dec
sbb
adc
mov
fisubs
mov
in
hlt
and
lods
cmp
push
push
add
jmp
mov
imul
and
push
in
outsb
lea
xchg
ss
xor
dec
xchg
fs
popf
jne
sbb
loopne
cs
add
push
jno
mov
fildl
xor
es
sub
jbe
mov
lret
gs
mov
insl
push
loope
add
sarb
mov
xor
or
sbb
nop
lahf
cli
xchg
xor
testl
sub
adc
mov
jmp
xchg
pushf
inc
loope
rcrl
sbb
dec
rol
sti
stc
int
cltd
loope
xlat
mov
jg
stc
mov
jne
mov
popf
and
jle
daa
in
enter
fisubs
mov
xchg
jnp
jnp
ja
fs
add
adc
pop
and
sbb
fldt
icebp
dec
or
lcall
inc
sbb
shll
push
add
lock
es
push
dec
mov
mov
ds
imul
sub
jne
inc
fildl
faddl
lock
add
and
mov
and
and
mov
shlb
rcrb
mov
sub
inc
mov
push
inc
hlt
dec
insl
shlb
push
lock
sbb
in
icebp
jo
pop
jecxz
sub
loop
icebp
lret
inc
mov
sbb
mov
jmp
out
xor
aam
add
xchg
iret
xor
lret
aaa
das
addr16
fwait
mov
mov
and
stc
push
fistl
popa
mov
sar
cmp
mulb
cmpsl
test
pop
push
stc
jle
pop
mov
in
je
lods
data16
test
lods
xchg
xor
inc
in
mov
out
and
icebp
lret
sub
pop
fmull
mov
inc
xor
jae
rcrb
xor
dec
sub
das
jb
or
pop
shl
or
pop
push
filds
push
aam
fs
cltd
in
hlt
repz
test
ret
dec
cmpsb
xchg
movntps
outsb
movsl
push
inc
decb
test
push
xchg
lods
les
jecxz
sub
std
inc
jg
pusha
or
movsl
out
xchg
or
sub
xchg
int3
into
pusha
cmpsl
cmp
fldt
push
out
rcll
sti
or
sbb
lret
aad
and
fmulp
mov
out
push
out
push
fists
mov
ror
dec
in
fcmovu
cmp
stos
add
js
pop
cmpsl
push
mov
jecxz
repz
and
or
mov
sub
fcmovnbe
jne
das
or
stc
lcall
mov
jg
lods
push
jae
dec
ljmp
mov
xor
js
fiadds
stc
fnstenv
sub
pop
xor
pop
sarl
or
jnp
add
mov
inc
dec
pop
pop
cmp
aam
negl
testb
test
or
test
mov
in
aad
mov
push
xchg
push
shl
mov
jo
gs
add
rcrb
aaa
mov
or
xor
stos
out
push
jb
mov
cmp
fdivrs
dec
frstor
dec
jl
jg
and
or
add
popf
stos
mov
out
dec
aam
or
adc
sub
icebp
data16
mov
mov
cmp
cltd
mov
add
xor
test
pop
cmc
push
xchg
orl
jno
xor
addr16
lock
inc
stos
movsl
dec
inc
adc
idivb
push
lods
pop
mov
cmpsl
adc
mov
pop
cmp
lods
sbb
les
add
fstps
add
mov
add
sub
mov
add
mov
or
or
xor
push
adc
inc
push
adc
mov
sub
add
mov
fbld
nop
in
jge
nop
out
mov
sub
cs
sbb
mov
inc
loopne
jo
cmpsl
xorb
jbe
lock
add
sbb
xchg
hlt
inc
or
jo
mov
addb
mov
into
mov
mov
fucomi
call
hlt
iret
cwtl
dec
push
mov
jb
mov
mov
mov
movsb
add
repnz
cmpsb
pop
popf
add
xor
xlat
arpl
repz
testb
imul
mov
inc
xchg
stos
dec
sbb
add
in
movsl
rorb
sbb
or
leave
add
cltd
out
loope
xor
and
inc
jge
outsl
push
inc
outsb
sub
mov
fstps
jnp
out
jbe
in
push
dec
sub
enter
jmp
roll
cmp
fmuls
daa
inc
jno
add
sti
adc
dec
ret
inc
das
dec
and
cmpsl
dec
jo
xchg
outsw
icebp
mov
dec
sti
push
rolb
inc
jbe
sahf
sbb
lods
fiaddl
mov
push
mov
jae
inc
ljmp
sti
mov
mov
int
cli
enter
shlb
jge
stos
stos
xchg
adc
insb
fs
inc
enter
xchg
lock
mov
push
in
insl
cltd
movsb
jae
push
cmp
cmp
into
movsb
add
pop
sub
pop
cmp
es
and
in
stc
sbbl
mov
mov
shlb
xor
bound
adc
insb
jb
ja
mov
insl
mov
aad
sub
push
and
or
mov
sbb
pop
pop
mov
stos
das
push
fcoms
cld
pushf
cmp
popf
mov
fs
add
dec
repz
xlat
push
xchg
cmp
mov
adc
add
cld
inc
std
sbb
xchg
cmp
jl
jl
clc
push
popf
push
stos
sbbl
jp
push
inc
fimuls
pop
cmc
cmp
ljmp
icebp
mov
add
mov
xor
clc
lret
xchg
daa
mov
pop
adc
mov
ljmp
rcrl
add
or
inc
ja
pop
sub
mov
jecxz
into
fcmove
shrl
cmp
and
cmp
cmp
andl
or
pop
lret
sti
cs
jnp
out
test
push
jmp
cmpsb
mov
jmp
ret
outsb
fs
xor
fistps
inc
stos
sar
movsb
cmpsl
int
mov
add
loop
add
inc
aas
add
das
mov
push
rcrl
jecxz
add
adc
xchg
jmp
push
xor
xor
push
jbe
pusha
add
call
insb
and
pop
lret
push
mov
mov
leave
push
pop
rcll
lcall
lret
mov
js
cmp
cmpsl
int
inc
inc
and
sbb
push
jnp
and
mov
fildl
pop
call
xchg
and
cmpsb
jle
lret
sub
pop
jecxz
jle
lea
out
aam
push
jo
stos
movsl
popf
jno
push
inc
sbbb
mov
lods
xor
mov
mov
mov
push
pop
mov
jecxz
shr
mov
shrb
mov
mov
test
cmp
fdivr
outsb
fcomps
notl
mov
out
inc
inc
pushf
sbb
fldl
xchg
xor
push
scas
pop
xchg
out
dec
clc
out
ljmp
pusha
loopne
shrb
mov
loope
add
rorl
sahf
insl
aam
jno
cld
push
add
lcall
pop
sub
test
inc
movsb
and
xor
push
sbb
push
cmp
dec
mov
and
fdivs
mov
dec
jle
or
jns
xchg
pop
xchg
andl
jb
movsl
in
jmp
adc
or
adc
jecxz
test
cli
jno
dec
mov
jae
add
pop
sbb
leave
lret
pop
adc
movsl
enter
std
jae
idivl
shrb
cmp
jle
xor
test
sbb
hlt
orb
adc
mov
adc
test
mov
enter
stos
out
inc
xchg
and
ss
mov
lahf
imul
jb
dec
jno
and
cmp
adc
int
push
out
mov
mov
jae
xchg
cmp
or
cli
add
bound
ljmp
adc
pop
je
mov
pop
xor
lock
push
push
mov
ss
stos
mov
cmp
mov
repz
xor
pop
aas
fisttpll
in
pushf
lods
ja
push
xlat
mov
js
push
enter
addr16
lret
cmp
inc
mov
mov
popf
cmp
sti
negb
cs
xchg
sub
jns
test
fldl
and
int3
and
outsb
push
dec
sbb
push
xchg
nop
xor
add
in
dec
push
fwait
shlb
or
imul
jo
into
enter
adc
out
js
xchg
call
insl
push
cmp
jmp
cmp
and
xor
mov
sub
sbb
add
or
inc
sub
xchg
pop
pop
leave
mov
mov
mov
xor
adc
icebp
dec
xchg
hlt
faddl
fnstcw
push
mov
xchg
sbb
xor
dec
cs
movsb
loope
rol
xchg
xor
xor
in
pop
xor
jns
sbb
pop
clc
or
cmp
sub
xchg
cld
in
insb
call
sbb
je
and
xor
inc
and
jo
lret
lret
sbb
fdivl
sub
arpl
test
jmp
mov
push
adc
outsl
sub
push
lret
adc
or
sbb
ljmp
xchg
sub
das
and
test
xor
daa
push
lods
push
sub
pop
sbb
divb
imul
push
sarb
dec
xchg
fwait
dec
jg
mov
rol
lcall
mov
or
adc
sbb
cltd
fdivs
push
loope
pop
cmp
fidivl
loopne
dec
mov
xor
mov
pop
es
xchg
daa
dec
xchg
push
and
fsubs
test
mov
hlt
sbb
imul
mov
addr16
cwtl
push
movsl
sbb
mov
test
jne
push
jns
adc
and
inc
sub
enter
adc
jo
dec
cld
mov
testl
push
xchg
jp
push
sbb
inc
fsubrs
in
and
dec
sbb
cwtl
out
stos
lret
lds
addl
icebp
sbb
rorl
inc
ds
in
xor
mov
rcll
sub
mov
dec
push
xchg
dec
pop
cmp
jne
scas
adcl
add
test
mov
push
idiv
jne
or
push
movsl
lret
shll
subb
xchg
jmp
lea
sarl
arpl
cmc
sbb
sub
dec
rcrb
std
shl
testb
xor
scas
xchg
sarl
jnp
pop
and
xchg
xchg
pusha
add
sub
fisttps
and
cwtl
mov
sarb
mov
pop
xor
int3
jo
nop
call
mov
and
insl
add
dec
lcall
iret
pop
fsubr
enter
add
sub
cwtl
xchg
sub
add
xchg
mov
stos
or
jl
xor
mov
into
test
push
daa
mov
daa
pop
xlat
inc
xor
jns
sub
loope
movsb
mov
mov
aaa
jne
aad
and
or
lods
pop
adc
mov
jnp
or
out
pop
imul
and
pop
mov
inc
in
jno
mov
ljmp
jmp
lods
inc
pop
in
xor
add
sbb
adc
iret
pop
jecxz
xor
jg
dec
pop
or
fidivrl
sbb
sbb
aaa
icebp
jg
aas
stc
sti
das
fnstcw
or
popf
mov
test
das
cmp
outsl
push
movsl
aad
push
fbld
int3
xlat
adc
push
pop
test
clc
jmp
leave
jle
int
jge
lahf
inc
stos
int3
sbb
insl
pop
outsb
in
fs
adc
and
sbb
outsl
xchg
nop
sbb
out
jle
rcrl
xor
push
call
jns
mov
repz
out
mov
pop
jno
out
xchg
xchg
push
inc
icebp
shll
lds
fwait
movsb
cmp
mov
js
in
popf
dec
inc
adc
arpl
mov
lret
mov
jge
pop
sbb
sub
adc
cltd
add
xchg
hlt
mov
push
nop
inc
ficoml
adc
mov
pop
jbe
and
cmpsl
xlat
ret
aas
leave
idivb
ljmp
push
mov
lret
mov
adc
xchg
sahf
jecxz
outsl
push
in
sub
int
cmpsb
add
fisubs
les
xor
std
push
adc
test
xchg
or
lods
out
push
mov
aas
leave
cmc
sbb
scas
push
ror
jg
adc
inc
and
mov
push
test
pop
and
jg
add
add
in
mov
test
or
fldt
push
fsubl
push
mov
pop
cmp
push
adc
loopne
outsb
mov
imul
lds
or
dec
cmp
repz
xor
mov
int
jae
cs
enter
subb
fs
mov
mov
out
xchg
outsl
push
push
sarb
jns
les
pop
jno
add
add
call
xor
push
jle
repnz
in
bound
imul
addr16
insl
mov
dec
inc
sbb
add
std
xor
imul
fdivr
jbe
sbb
push
push
or
jb
insb
scas
push
test
fistpl
pop
sarl
jmp
push
iret
jbe
std
dec
mov
push
into
call
bound
out
hlt
outsb
pop
dec
fsubp
sbb
insl
fbld
mov
not
add
fdivs
and
xor
jnp
or
mov
test
pop
ret
fcomi
iret
ds
xlat
mov
mov
andb
jno
pop
inc
mov
xchg
inc
mov
push
add
jg
push
insl
push
xor
cld
push
mov
lods
arpl
outsb
mov
lds
pop
or
jbe
xor
mov
push
adc
loopne
sub
pop
pop
loope
js
sbb
movsb
mov
jno
ficomps
mov
negb
loop
jbe
rol
jo
dec
in
or
xor
jle
pop
xor
lods
fstpt
cltd
jmp
mov
in
sbb
test
aaa
mov
in
repz
lret
gs
add
pop
xchg
mov
xor
repz
sbb
adc
movsb
or
test
inc
dec
data16
cmc
mov
insl
aad
add
cli
adc
inc
xchg
inc
fisubl
mov
mov
in
popf
daa
cmp
mov
iret
dec
data16
jns
andb
insl
dec
std
fwait
push
push
mov
jbe
inc
fdivrl
xchg
fsubrs
mov
push
push
push
pop
xchg
rolb
hlt
imul
mov
inc
jle
cmp
arpl
sub
call
push
mov
shll
pushf
repz
fldcw
loope
fwait
es
lahf
inc
push
or
shr
addl
inc
lock
cltd
mov
inc
aam
push
push
ret
pop
jmp
adc
sub
sub
stc
and
mov
dec
dec
cmp
stos
adc
cld
ljmp
jp
clc
lods
jb
pop
mov
mov
pop
xchg
das
daa
icebp
xchg
mov
inc
xchg
int3
inc
and
out
clc
push
mov
add
jo
lcall
adc
stos
ja
mov
push
add
clc
xor
shl
jge
test
ja
jns
leave
stos
push
sti
mov
push
in
mov
inc
loop
push
icebp
push
or
sbbl
xor
pop
xor
call
lahf
push
ljmp
pop
lods
push
sbb
add
call
add
mov
jl
cmpb
and
xor
cmp
dec
lds
xlat
mov
xor
js
sbb
lods
lods
push
xchg
sub
mov
sub
psubq
dec
icebp
scas
mov
adc
push
in
inc
sti
test
aaa
repnz
scas
jno
leave
repz
repz
mov
lret
mov
rol
mov
pop
xchg
lods
scas
xlat
inc
inc
and
mov
mov
adc
loope
popl
and
int
and
loopne
fmuls
les
cli
lahf
fidivrs
xchg
repz
js
std
xor
arpl
push
mov
cmp
pop
cmp
ds
out
pop
int
mov
out
adc
xchg
scas
sbb
outsl
adc
pop
xchg
pusha
jb
mov
mov
fcoms
mov
es
push
test
aam
ljmp
adc
mov
push
xchg
dec
or
dec
hlt
mov
in
dec
out
out
jbe
mov
outsb
mov
icebp
inc
cmpsl
jp
mov
std
pop
movsl
pop
pop
pop
daa
sbb
lcall
pop
and
sub
int
movsl
jo
sbb
sub
jnp
and
cmp
mov
adc
jne
cmc
sub
pop
add
mov
jb
xchg
push
lods
cmpsl
cwtl
lock
repz
mov
pop
mov
xchg
cs
mull
and
mov
dec
dec
push
xor
imul
dec
cs
push
inc
mov
jp
in
stc
bound
mov
in
dec
sbb
adc
aaa
outsb
sub
test
out
xchg
dec
and
hlt
sbb
int
mov
pop
jmp
fidivs
jnp
pop
sbb
es
cmp
repz
insb
lcall
aas
test
arpl
dec
mov
mov
sbb
rcl
outsl
nop
lods
sub
sbb
cmp
push
inc
xchg
push
jns
push
or
enter
jmp
cmpsl
ja
jb
sbb
inc
test
xchg
out
loop
das
jl
ss
repnz
jl
or
out
inc
inc
fisttpl
fwait
sub
sbb
cmp
out
pop
or
aas
ret
push
shl
ss
mov
mov
mov
cmp
adc
mov
arpl
pop
xchg
repz
sbb
lea
add
fiadds
movzbl
mov
push
xor
inc
jo
data16
dec
jmp
inc
fsubs
test
loop
cmp
mov
fidivrl
in
mov
inc
fsubrl
subb
mov
dec
jo
cmp
test
lock
xlat
sbb
pop
xor
mov
inc
aas
inc
sub
cwtl
adc
fwait
mov
add
loope
movsl
xor
scas
out
ja
adc
push
inc
cs
inc
push
shlb
xchg
scas
jne
dec
stc
mov
and
jge
lods
inc
inc
addr16
push
scas
xchg
divb
sub
lldt
or
mov
ja
iret
mov
pop
sub
mov
add
out
sub
push
dec
adc
stos
in
lock
mov
dec
test
xchg
cmp
jns
inc
sub
sub
pop
mov
shll
arpl
xchg
fs
cmp
push
xchg
or
lret
insl
pop
dec
adc
add
nop
bound
xchg
jle
sbb
mov
jb
out
decl
out
or
dec
imul
repz
cli
mov
sar
pop
cmp
push
jns
sub
and
mov
pop
xor
leave
jae
movsb
push
fwait
pop
sbb
cli
mov
repnz
cli
inc
ljmp
movsl
fwait
sub
test
ret
dec
jo
cli
nop
mov
xor
subb
xchg
sub
push
push
inc
mov
adc
lret
sub
mov
xor
mov
test
cld
int
test
sub
adcb
mov
movsl
addb
in
adc
fnstcw
pusha
setl
pop
mov
dec
lods
stos
dec
push
out
sub
mov
inc
and
call
xchg
cmp
or
mov
jo
dec
cmpsl
sbb
sub
sub
cmp
pop
stos
xchg
sbb
sbb
push
push
mov
push
add
cli
andb
sbb
xor
negl
fmull
popa
roll
or
out
movsb
dec
negl
rcrl
pusha
inc
ret
cmc
ds
pop
adc
mov
mov
cmp
fwait
jge
stc
jnp
aad
fwait
es
push
adc
loope
repz
adc
cmp
inc
push
mov
inc
cmp
imul
cmp
clc
xor
xchg
shr
sahf
cs
fimull
arpl
mov
sbb
nop
xor
cmp
in
cmp
movsl
cmpsl
push
hlt
adc
out
or
shll
mov
jg
push
push
push
mov
pop
pusha
imul
mov
jns
add
cltd
dec
add
std
rcrl
fdivrs
lret
in
jae
push
push
fistpl
movsb
shl
dec
and
leave
cltd
ret
lret
or
std
repz
pop
rcrl
sbbb
and
xchg
out
out
es
mov
faddl
dec
and
jmp
xlat
push
int
inc
iret
lret
mov
xchg
xor
jns
mov
jg
sub
cmpsb
jp
sbb
lods
ja
mov
mov
mov
dec
aad
cmp
cmc
int3
xchg
xchg
testl
xchg
loope
int
cmpsl
cmp
pop
lret
jg
imul
lcall
ss
pusha
mov
bound
push
cmp
daa
into
fisttpll
aad
and
sbb
lods
inc
adc
jp
clc
jge
xor
mov
sub
mov
mov
in
mov
cmpb
into
aam
ret
mov
dec
out
inc
jl
or
repz
in
mov
lea
pop
cltd
sub
fadds
xor
mov
fildl
and
scas
and
xchg
int3
add
mov
sub
push
repz
jg
mov
jnp
shrl
fstp
mov
lahf
ja
movsl
cmp
lcall
xchg
fwait
aaa
push
outsb
mov
out
jle
stc
jg
ds
sbbb
jb
mov
testb
iret
sarb
test
jmp
loop
out
popf
xor
push
dec
cmpsl
lret
sarb
pop
js
push
out
imul
dec
ss
jp
leave
add
iret
sbb
es
xchg
shl
sub
loope
push
test
push
or
jle
aad
loop
aad
mulb
in
add
mov
pop
movsl
dec
adc
in
mov
dec
push
movsl
cmp
cmp
pusha
jns
mov
popa
addr16
movsl
add
in
jmp
scas
movsl
subl
bnd
and
inc
aas
jg
or
ret
fucomip
test
dec
jl
mov
pop
inc
dec
out
pop
push
dec
std
mov
enter
popa
jb
lret
repz
in
fdivs
push
aam
addl
xor
or
cmp
sub
dec
jmp
xor
icebp
stos
lock
xlat
out
push
mov
and
shlb
shrl
divb
pop
sbb
pusha
mov
xchg
pop
mov
dec
aaa
mov
icebp
inc
mov
outsl
push
mov
xor
push
je
cs
push
jge
push
imul
fwait
sbb
orl
ds
scas
ss
inc
and
push
add
and
cmp
addr16
js
stos
sbb
insb
and
sbb
pop
jnp
push
rorl
jl
xor
mov
pop
sub
and
rcrb
int3
fildl
decb
shlb
dec
dec
insl
iret
push
cmp
lock
adc
xchg
movl
inc
xchg
xchg
mov
lahf
imull
decb
mov
and
xchg
out
rorb
push
jmp
push
lahf
loope
mov
cld
mov
sub
mov
mov
fs
ucomiss
cmp
movsb
fisttps
arpl
and
cli
mov
nop
pushf
ficomps
jne
mov
cmp
cmp
inc
sbb
test
aad
push
mov
enter
jno
fnstsw
inc
cmp
lds
mov
pop
popf
mov
scas
movsb
iret
sub
mov
aas
lods
sbb
mov
xor
sub
adc
in
and
add
cmp
inc
pop
mov
out
arpl
fcoms
push
cli
sub
mov
ds
push
inc
jb
int3
dec
push
fcomps
cmpsb
aaa
popa
imul
std
and
push
lods
cmp
fwait
sar
ret
pusha
push
aad
inc
shlb
insb
cwtl
lahf
mov
xchg
sub
je
mov
xchg
ret
lret
inc
outsb
aad
int
imul
jo
fbld
cmp
aam
jecxz
and
jae
out
push
add
cmc
popa
loope
fstps
mov
fidivrs
lret
imul
inc
cltd
mov
inc
ss
rep
aas
mov
xor
ret
les
cmpsl
test
pop
or
jecxz
push
adc
repz
add
fistps
push
mov
aam
lods
sub
inc
add
xlat
push
mov
pop
lret
push
loopne
jge
lcall
les
mov
imul
sub
pop
mov
lods
data16
stos
mull
add
mov
push
and
push
dec
mov
and
jbe
add
loop
and
cmpsl
add
ljmp
pop
gs
lods
add
lcall
pop
mov
xchg
inc
fwait
insl
out
divl
push
mov
cmp
and
dec
sub
aam
sub
mov
sti
xlat
cwtl
popl
cs
rol
xorb
xchg
movsb
cmp
mov
add
inc
sbb
dec
je
push
lret
enter
jmp
mov
pop
cmpsl
data16
jo
sbb
sub
scas
sarb
jl
push
xchg
bound
test
cmc
jo
jmp
dec
adcb
add
lods
adc
sub
and
out
cld
mov
inc
divb
imul
pop
and
mov
cmp
and
repnz
std
add
hlt
and
mov
sub
inc
repz
push
int
ret
enter
xchg
inc
pop
dec
jnp
jae
xchg
imul
test
movsl
stc
lods
cli
xor
lcall
testb
sub
adc
test
daa
jns
out
rcll
mov
les
sbb
dec
cmp
leave
xchg
je
adc
push
and
adc
pop
fdivl
lods
inc
sahf
inc
dec
mov
cmp
popa
or
iret
mov
sbb
out
pop
add
rclb
sbb
fsubl
subb
and
arpl
cmp
ud1
and
popa
scas
mov
adc
iret
xchg
cmc
push
fincstp
cmp
ss
cmp
xchg
lret
sub
repnz
inc
ss
mov
out
adc
cli
out
mov
xchg
negb
lcall
lods
mov
adc
and
cli
sbb
mov
lods
lods
pop
xor
xchg
rorl
into
lea
fcomps
sub
cmp
insb
mov
aam
fnstenv
bound
nop
adc
int3
push
add
enter
test
aad
test
and
mov
notl
dec
and
out
cmp
adc
mov
lea
cmp
push
out
jl
push
xchg
lock
jae
stos
js
add
loop
pop
aaa
in
xor
nop
ja
movsb
ja
sub
mov
out
sbb
pmulhw
movsb
add
mov
inc
sbb
xor
push
adc
mov
lods
lret
pop
mov
sbb
jle
dec
cmp
add
stos
pop
mov
mov
jge
das
movsl
dec
je
xchg
add
cmc
pop
hlt
adc
enter
or
das
das
mov
fwait
pop
fisubl
pop
aam
and
mov
mov
pop
jecxz
pushl
mov
or
mov
pop
adc
pop
adc
stc
stos
lcall
push
inc
cmp
lea
pop
mov
clc
lods
dec
sub
stos
cld
add
xchg
arpl
dec
add
mov
mov
nop
mov
mov
cmpsl
in
push
push
lahf
cmpsl
icebp
clc
xlat
incl
pop
adc
loope
mov
inc
push
cmp
sub
or
cli
push
ret
aam
push
mov
xor
popa
cwtl
lret
xchg
and
push
mov
arpl
lcall
mov
test
pop
popf
loopne
cld
jp
in
mov
ret
test
in
scas
lahf
pop
cltd
test
subl
mov
repz
cmp
push
mov
int
add
lcall
sub
dec
enter
aaa
xchg
dec
mov
jmp
and
gs
repz
inc
pop
test
push
fs
bound
sbb
pop
insl
outsl
call
jb
insb
inc
pop
xor
xlat
xor
and
sbb
mov
out
cmc
jl
sub
aad
xor
mov
in
cmp
add
add
movsl
inc
testb
imul
pop
mov
pusha
inc
cmp
mov
jne
xchg
fiaddl
or
mov
mov
xchg
pop
sti
ret
push
or
sub
and
bound
pop
lret
sub
ror
repnz
rcrl
hlt
shl
cli
pop
mov
add
scas
inc
inc
push
push
imul
loope
int
xchg
jg
xorb
pop
movsb
jne
cld
fwait
pop
inc
in
xlat
add
jg
test
pop
cmp
test
lea
leave
ljmp
sti
in
xor
negl
push
cwtl
pop
cltd
ja
out
push
cmp
mov
add
sahf
jmp
aad
mov
mov
sub
and
or
add
xor
add
push
ljmp
clc
and
mov
jns
movsl
lods
subb
jmp
sub
ljmp
stos
push
add
inc
loopne
aaa
cmp
push
add
sbb
pop
pop
notl
cmpsl
mov
lods
out
xchg
fcoms
lock
es
inc
inc
scas
xchg
lods
dec
imul
insb
and
or
ret
stos
xor
in
adc
xchg
les
add
jg
ret
xchg
and
inc
das
pop
push
scas
sbb
mov
xor
or
adc
ret
push
pop
jl
stos
and
pop
xchg
shlb
sub
dec
ds
jmp
jb
into
ljmp
adc
xor
pop
jns
cmc
fmuls
mov
add
mov
hlt
inc
cmp
cmp
adc
mov
je
xor
sbb
out
rcrb
push
icebp
dec
test
int3
int
xchg
out
or
shll
mov
orb
and
jae
aad
mov
xchg
into
sub
and
psubb
and
mov
cmp
pop
dec
mov
stos
push
pop
pop
xor
inc
rcrb
movsl
rclb
xchg
fistps
mov
loop
push
hlt
sahf
adc
scas
dec
dec
push
lea
adc
push
stos
loope
xor
pushf
or
outsb
mov
mov
push
imul
mov
adc
push
fcoml
cmc
push
or
and
or
pop
or
imul
aas
repnz
pop
sbb
imul
xchg
pushf
ja
xchg
ljmp
rclb
stos
call
push
std
sub
push
inc
jle
subl
xor
lds
sbbb
cmp
jle
mov
push
popa
rcrb
mov
pop
mov
test
sub
test
and
dec
mov
mov
jle
and
jl
stos
adc
mov
cmp
icebp
fwait
add
mov
push
push
scas
data16
dec
jae
xor
cmp
push
loopne
imul
insb
pop
adc
lret
fs
cmpl
mov
roll
sub
gs
push
push
add
cmp
cmp
data16
push
ja
int
cli
adc
xchg
cmp
mov
mov
aam
or
int
adc
mov
xchg
add
lcall
mov
push
movsb
jns
fcmovu
jbe
or
mov
es
mov
aam
lock
fldl
dec
cltd
shll
loope
test
fwait
sbb
and
mov
mov
lods
sub
inc
test
lods
gs
jo
push
aaa
cmpsl
fwait
mov
mov
xchg
push
scas
push
shrb
sub
add
rcl
pop
pop
sbb
xor
scas
lcall
dec
out
addr16
or
xor
pop
aaa
dec
lret
adc
sbb
addr16
sti
out
lret
shrl
mov
sub
xorb
fisttpl
cmpl
cmp
insb
ret
movsb
adc
pop
inc
sub
and
in
lcall
and
test
repz
jae
or
icebp
repnz
jle
adc
push
pop
dec
cmp
rcll
outsl
or
or
clc
adc
cli
and
inc
aad
shrb
cs
mov
inc
jnp
xchg
sbb
mov
iret
dec
adc
ljmp
push
es
je
dec
sub
add
nop
test
jp
lea
leave
add
out
hlt
mov
ds
das
popf
ljmp
aas
out
inc
out
or
or
repz
jg
shrl
xchg
cs
addb
sbb
ja
pop
mov
push
rcrb
std
ret
xlat
imul
rorl
cmp
out
lret
adc
and
xchg
pop
pop
or
xor
mov
das
jl
dec
xchg
lods
mov
mov
or
fwait
and
adc
je
andnps
cli
sub
sub
mov
mov
and
outsb
cs
test
mov
rorb
inc
ds
je
sbb
in
and
shr
lea
stos
dec
in
adcb
jnp
add
jno
std
loop
dec
sub
push
mov
jmp
mov
ret
push
xchg
ja
jo
jns
loop
scas
xchg
or
mov
sbb
mov
outsb
popa
repz
jns
iret
insb
sti
jne
adc
fbld
push
shlb
push
mov
mov
xor
xor
out
and
add
jbe
sbb
pop
ss
repz
sub
das
xchg
cmp
mov
add
or
mov
jbe
out
or
sbb
inc
ret
rcrb
adc
adc
xlat
mov
adc
adc
cmp
add
mov
pop
add
cld
movsl
cwtl
sar
clc
dec
scas
mov
cmp
loopne
subl
outsb
lods
lods
cmpsl
sub
lahf
repnz
out
leave
outsb
pop
push
aam
pop
mov
add
ss
mov
add
into
imul
push
lea
jne
int
mov
dec
cli
gs
mov
out
add
ds
jb
mov
or
lods
jne
adc
push
pop
test
mov
lods
mov
xchg
sbb
mov
gs
add
adc
sbb
adc
lcall
add
mov
clc
xchg
scas
sahf
lahf
mov
in
mov
stos
fnsave
dec
jnp
mov
push
dec
add
xchg
jno
jl
ds
sbb
cmp
mov
test
cmp
add
mov
movl
inc
adc
cvtps2pi
repz
dec
pop
fldl
aaa
push
cwtl
mov
jl
mov
call
mov
xchg
jno
sub
aas
pop
sbb
pusha
lods
xorb
jl
dec
push
dec
ret
int
fmul
loop
bswap
cs
inc
push
inc
sbb
xor
mov
cld
sbb
add
sub
sub
lcall
jmp
in
mov
rcrl
stc
dec
push
mov
frstor
xor
sbb
sub
xchg
jo
insl
dec
es
cmp
sub
jecxz
mov
sbb
xchg
and
cmp
sahf
sub
or
test
mov
fcomp
cli
shrb
xorw
out
mov
adc
jnp
pop
xchg
cmp
cmp
push
inc
cmc
mov
flds
arpl
and
cvtpi2ps
lea
pop
cmp
in
shlb
sahf
aad
out
sub
pop
jg
arpl
roll
repnz
aad
repnz
xchg
dec
outsb
ja
imul
mov
dec
push
and
cmp
imul
jne
int3
aaa
mov
pop
cmp
add
xchg
pop
inc
sbb
lds
imul
int
xchg
leave
cmp
cmp
cs
jbe
data16
mov
int
xor
pop
and
ja
lods
icebp
cld
sub
fimull
push
inc
int
loope
lock
lcall
arpl
or
inc
and
shr
adc
mov
rolb
sti
dec
test
cmpsb
icebp
out
pusha
xlat
testb
leave
lds
out
rcrl
data16
pop
adc
fcmovnu
push
aas
jno
xchg
test
out
subb
push
popa
pop
addl
add
jno
nop
lods
adc
dec
fistps
xor
stc
add
dec
and
shl
xchg
mov
push
cwtl
lcall
pusha
scas
scas
imul
push
xor
and
push
notb
rclb
dec
mov
dec
xchg
ljmp
mov
mov
daa
push
dec
sbb
pop
xor
into
stc
xor
pop
ss
lea
pop
sbb
xor
mov
add
push
mov
lock
jmp
hlt
push
xor
lret
and
or
sahf
sti
sub
iret
xlat
imul
ret
mov
push
mov
and
test
xchg
dec
aaa
popa
mov
and
mov
scas
jno
je
test
lcall
inc
movd
mov
fdivs
jo
mov
xchg
lret
movsb
loopne
mov
mov
dec
sub
xchg
call
in
mov
imul
sub
loopne
sub
sbb
add
aad
jb
insb
outsl
les
das
sub
sbb
out
and
mov
imul
mov
shll
faddl
push
mov
popa
out
cli
jg
sbb
xor
ret
push
pop
sbb
push
js
adc
mov
dec
push
cmc
mov
adc
and
es
pop
jnp
cwtl
mov
in
lock
and
add
test
jl
in
mov
add
dec
mov
imul
icebp
inc
aaa
and
jne
lret
shlb
push
push
ficompl
cltd
add
jmp
pop
das
mov
icebp
sbb
out
aad
add
mov
push
stos
popf
dec
mov
pop
push
mov
adc
popa
add
adc
mov
repz
insl
push
ds
push
push
in
js
push
xchg
and
out
mov
dec
push
xchg
sar
scas
scas
pushf
jo
loop
sbb
movl
dec
mov
pop
outsl
sbb
aas
lret
dec
xchg
filds
inc
xchg
mov
mov
jns
cmp
fcmovb
push
cli
lahf
sub
sub
in
in
push
push
mov
sbb
mov
call
in
leave
fadds
jle
out
aaa
xorl
stc
mov
dec
popf
xor
aas
lea
inc
push
push
and
rolb
rcrl
add
adc
mov
fsub
or
test
push
sbb
orb
loope
mov
pop
es
adc
imul
lret
mov
pop
icebp
call
push
jne
not
xchg
xchg
mov
std
gs
push
pop
mov
scas
cmpsl
pushf
pop
or
adc
xchg
jg
mov
mov
pop
dec
mov
in
push
or
std
mov
xchg
dec
inc
xchg
mov
sbb
push
out
mov
mov
xor
lea
or
sbb
cmp
clc
mov
fistl
mov
imul
cli
std
mov
into
pop
cld
add
test
or
adc
sbb
sbb
push
fimuls
scas
pop
cs
ss
or
sbb
cmp
sbb
cmp
cmp
mov
mov
aaa
sub
xor
xor
sbb
fwait
add
pop
cmpsb
mov
idivl
inc
lahf
sub
fistpll
fisttpll
lods
leave
rcrb
push
xchg
cmp
mov
jmp
sub
mov
bound
subb
into
scas
sti
enter
loop
movsb
ljmp
es
push
sbb
test
pop
pop
int3
ret
pop
mov
jo
or
cwtl
rcrl
clc
sar
mov
sbb
sub
xor
cwtl
add
xchg
inc
lret
xchg
xlat
xor
fcoms
out
adc
in
movsl
or
sub
push
fnsave
lds
sarb
imulb
push
movsl
mov
push
imul
sahf
sub
and
movsl
xlat
dec
jecxz
ret
sbb
cltd
in
fprem1
lock
rcll
fs
das
or
mov
fbld
iret
sbb
or
cmp
shlb
pop
in
xchg
ficoml
adc
gs
inc
es
jno
ds
dec
push
mov
mov
sub
add
pusha
out
int3
add
insl
jmp
enter
icebp
iret
das
sub
in
popf
int3
mov
loope
mov
cmp
inc
les
shlb
enter
mov
cmpsl
das
icebp
dec
dec
ret
dec
pusha
mov
lods
in
or
ret
jo
dec
orl
ljmp
icebp
mov
jmp
jo
lret
dec
test
inc
adc
or
push
pop
pop
cmc
pop
dec
stc
pushl
outsl
sarl
sub
dec
mov
adc
in
fwait
mov
push
leave
imul
rorl
mov
lahf
test
test
imull
jg
mov
push
mov
push
pop
cmpsb
fs
cmp
stc
xor
sbb
inc
mov
stos
sub
fdivl
dec
lret
lea
movsl
std
cmp
ljmp
mov
imul
mov
push
call
xchg
enter
movsl
inc
sub
mov
push
adc
mov
mov
xchg
leave
mov
mov
nop
pop
pop
xor
xor
pop
icebp
adc
xor
roll
cmpb
mov
lret
mov
pusha
sbb
pop
js
js
enter
xchg
hlt
mov
loope
std
out
in
mov
imul
or
sub
add
mov
aas
cmpsb
outsl
push
loop
add
or
dec
dec
aam
mov
mov
pop
mov
sbb
add
adc
nop
pop
fxch
mov
xchg
call
dec
pop
sarl
ljmp
out
or
outsb
pop
sbb
ss
aas
cmpsb
fwait
inc
xchg
mov
push
mov
push
pop
dec
fbld
inc
pop
xor
test
aad
xor
dec
xchg
mov
push
cmp
jg
jns
sub
xor
decb
mov
cmp
shl
fisttps
jae
test
std
or
es
inc
out
mov
xlat
cld
pop
outsb
mov
dec
fcmovnu
sbb
sarb
mov
mov
ljmp
lock
fidivrl
in
je
lret
clts
pop
and
mov
outsl
xchg
mov
adc
lock
mov
lds
in
and
pop
push
push
xor
divl
divb
mov
mov
mov
into
fisubrs
fistps
xchg
mov
repnz
fs
mov
xchg
lret
js
out
popa
or
mov
aas
subb
xor
cltd
mov
imul
out
scas
xor
mov
test
push
in
or
or
dec
jecxz
push
dec
push
incb
adc
in
cmc
ret
in
ss
mov
bswap
sub
rclb
imul
pop
lods
bound
lret
jecxz
in
mov
add
mov
jns
jecxz
inc
test
pushf
mov
iret
and
inc
sbb
add
fisttps
and
pop
leave
mov
dec
stc
sti
aas
into
dec
repz
dec
aas
push
and
cmc
mov
lcall
adc
mov
cmc
fisttps
push
cmp
cmp
les
ret
out
daa
addr16
fmull
mov
mov
mov
cmp
mov
stc
repz
sbb
stos
jne
jae
xchg
stos
add
pop
shlb
add
mov
jg
repz
inc
stos
inc
xchg
daa
adc
cmp
mov
mov
pop
out
out
insb
ja
dec
lret
ja
dec
push
in
jmp
jg
mov
ja
mov
mov
ja
je
mov
inc
fs
xor
or
sbbl
cltd
push
fbld
adc
cmc
fildl
mul
loopne
push
xchg
inc
ja
mov
mov
sbbb
mov
sbb
str
icebp
jge
jle
cmpsl
scas
fwait
xor
pop
icebp
xor
pop
in
scas
xchg
adc
pop
lret
mov
pop
pop
rcll
adc
aad
add
das
lahf
pop
jmp
pop
decb
adc
jmp
inc
cmc
lds
sub
push
aam
mov
imul
push
mov
jb
add
in
fstps
cs
loope
ret
add
frstor
xor
lea
push
jne
mov
cld
incb
xor
loope
daa
and
lahf
arpl
jne
dec
jg
add
cld
sbb
outsl
add
mov
push
mov
insl
xchg
lret
jmp
hlt
adc
dec
and
bound
movb
push
xor
out
call
sbb
pop
and
and
mov
or
into
cmp
mov
outsb
popa
cld
out
jge
sub
inc
xor
in
pop
fucomp
jb
inc
add
adc
jl
fxch
and
in
sub
adc
out
push
mov
sub
inc
outsl
jp
enter
add
insb
sub
xchg
xchg
cmp
mov
ror
adcl
bound
aad
add
fs
add
mov
in
xchg
sbb
lret
js
out
test
inc
mov
mov
stc
cld
ret
push
push
mov
test
ss
pop
mov
scas
jle
pop
xchg
xorl
and
cltd
lds
mov
or
out
sti
ds
or
sub
psubusb
jnp
push
sub
fldenv
int3
cli
js
mov
loopne
jns
incl
xchg
fisubs
inc
dec
cmp
xor
jl
or
mov
mov
xchg
ds
mov
out
repnz
int3
and
and
dec
push
dec
int
mov
clc
sub
imul
or
mov
pop
cmpsl
add
mov
xchg
dec
lds
mov
je
mov
mov
add
inc
push
and
mov
jmp
out
ss
clc
mov
rcll
loop
and
mov
inc
pop
andl
mov
or
icebp
arpl
stc
leave
add
ljmp
jmp
hlt
pop
addb
pop
subl
loopne
xchg
xchg
je
dec
sbb
adc
adc
mov
scas
or
cwtl
call
fwait
mov
nop
lds
xor
adc
dec
jns
jb
in
jbe
add
rcrb
and
mov
not
mov
sbbb
dec
insl
cmpsb
and
call
mov
cli
adc
fcoms
rol
clc
cs
and
pusha
inc
subl
push
roll
push
jge
scas
mov
frstor
jp
pushf
in
mov
xchg
push
ja
addr16
pop
cltd
jle
or
dec
and
negl
mov
inc
lds
sub
sub
xchg
imul
and
cmp
imul
dec
lret
add
or
or
lock
jmp
adc
and
bound
pushf
or
fstl
inc
hlt
pmaxsw
and
aaa
dec
push
mov
push
dec
sub
mov
into
pusha
hlt
loop
add
xor
adc
je
fwait
out
cmp
xor
cmp
add
push
out
mov
sub
cmpsl
gs
mov
cld
int
cmp
icebp
lods
or
dec
add
cmp
lahf
inc
mov
and
mov
cmp
inc
lret
xlat
popl
push
add
xor
xchg
mov
xchg
daa
shll
xor
cs
daa
xchg
push
fs
xor
and
imul
sbb
loop
xor
imul
fstl
aas
not
adc
mov
fdiv
ja
dec
adc
loopne
mov
jno
in
bound
pop
inc
in
push
mov
xor
out
add
sbb
add
stos
daa
aaa
fs
push
jb
adc
inc
mov
jno
sahf
sub
hlt
xchg
lock
leave
cmp
xchg
or
movsb
mov
popf
in
inc
jnp
cmp
bound
loopne
jle
jnp
stc
inc
notb
out
mull
mov
ret
xor
leave
in
xchg
pop
je
in
sbb
add
daa
lahf
push
notrack
iret
les
sub
into
pop
aaa
imul
pop
jmp
subl
mov
data16
xor
sub
test
test
in
test
xchg
push
pusha
inc
sbb
jno
fldt
hlt
jl
add
mov
fldt
arpl
inc
dec
in
ret
pop
jge
lods
push
push
or
push
xor
rsm
cmp
jg
or
lods
inc
mov
inc
or
mov
arpl
cltd
das
lods
outsl
enter
fcmovne
popl
cmpsl
out
xor
sub
fs
lret
aad
cmpsl
mov
xchg
push
xorl
rcl
cmpsb
addb
adc
aas
push
je
dec
clc
mov
adc
adc
push
mov
pop
jle
inc
jp
sti
xchg
push
inc
push
and
jno
mov
sbb
and
repnz
cmp
xor
sub
mov
push
lret
jb
icebp
adc
lret
push
pop
arpl
out
cli
call
xor
inc
aaa
movsb
fsubl
ds
jb
fsqrt
adcb
scas
pop
cmc
ss
int3
mov
adc
aam
cmc
dec
xlat
sarl
inc
pop
call
int
icebp
out
in
lcall
push
std
and
lahf
in
mov
enter
push
dec
hlt
in
jge
xchg
xorl
xor
and
ja
push
sbb
or
cmc
test
xchg
outsb
filds
adc
jmp
mov
push
push
sub
fstps
pushf
sub
in
test
push
dec
shr
aaa
or
movl
lods
ss
stos
mov
pop
cmpl
popa
push
mov
mov
fs
mov
pop
mov
ss
cmpsb
mov
test
adc
or
sbb
sub
xchg
fwait
mov
jne
jnp
cmp
hlt
lret
cltd
add
pop
orl
pop
repz
sbb
fcoml
pushf
ss
or
out
cmp
mov
out
jo
or
stc
ffree
mov
xchg
into
cmp
mov
adc
lds
mov
lret
push
insl
leave
stc
data16
xor
addb
iret
in
dec
lret
in
and
aaa
cli
std
adc
jge
mov
mov
mov
jmp
ja
jbe
div
inc
es
ds
push
mul
cld
stc
ror
jnp
or
mov
xchg
shl
cmpxchg
std
movsb
mov
inc
test
xor
sub
cs
mov
rcrl
hlt
cli
scas
stc
add
jne
bound
mov
dec
dec
jae
loop,pn
fstl
int3
dec
popa
aas
inc
and
cs
dec
stos
cmp
lock
xor
inc
jo
xor
mov
ja
cs
xor
iret
aaa
stc
fldcw
out
xor
scas
sbb
mov
pop
or
mov
add
pop
clc
or
xchg
inc
pop
jge
nop
outsb
pusha
les
mov
xor
aad
xor
mov
in
movsb
mov
inc
pop
cltd
mov
inc
jmp
and
xor
adc
xor
mov
stc
mov
imul
mov
aaa
rclb
xchg
jne
js
sub
mov
xor
rclb
out
aad
in
jmp
or
shrl
xor
add
pop
sub
cld
test
inc
pop
pop
ss
dec
jmp
cltd
ror
adcb
mov
mov
aad
es
xchg
adc
stc
push
sub
xchg
cmp
mov
xor
repz
mov
adc
addr16
mov
and
mov
mov
or
ret
mov
clc
fdivrl
cmpsl
out
dec
pop
insl
ficomps
les
lret
pop
hlt
repnz
jo
fcomip
ss
push
xchg
cmp
sbb
or
push
xchg
push
test
mov
lods
lahf
cmp
mov
unpcklps
stc
test
lods
xchg
sbb
stc
or
jge
xor
sbbl
and
ret
ret
mov
mov
pop
insb
popf
xor
shrl
xor
call
or
xor
cmp
scas
icebp
cltd
mov
pop
imul
push
jno,pn
sahf
lahf
inc
adc
aaa
test
gs
sub
test
sub
shrl
bound
xor
xchg
into
ljmp
pop
adc
pop
or
push
push
fldt
mov
fistpll
or
xor
jge
iret
jb
add
fs
in
push
push
std
std
mov
pushf
jns
clc
in
aas
push
mov
ja
jae
sub
xchg
cmp
daa
je
clc
adc
xchg
or
stc
mov
add
outsb
cmp
sub
outsl
iret
and
add
jp
iret
shrl
lret
push
cmp
popa
xor
xchg
push
aas
push
xchg
push
test
ds
push
fsubs
lods
jne
jno
sbb
push
add
jno
pop
jp
lret
arpl
cli
xor
movsl
leave
int3
xchg
xchg
repz
movsl
inc
sbb
rcr
test
dec
inc
test
ret
popa
iret
movl
pop
lock
sbbl
fs
inc
push
push
pusha
pop
xor
xchg
test
mov
mov
mov
cmpsl
mov
aam
jg
push
mov
outsb
subb
or
loop
pop
hlt
setl
fwait
loop
pusha
mov
xor
fwait
outsb
mov
insb
enter
jns
jbe
xor
mov
test
jecxz
aam
mov
mov
add
cwtl
dec
add
push
cs
mov
mov
adc
push
loope
test
test
inc
mov
xorb
pop
imul
cmp
jb
sbbl
dec
or
and
in
push
stc
dec
lods
xchg
leave
cwtl
js
mov
push
push
or
jne
xchg
lret
icebp
inc
jecxz
mov
cmp
xchg
jl
push
cltd
xor
popf
les
xchg
jge
adc
aas
mov
aad
wrmsr
pop
cmpsl
insl
push
push
cli
cmc
cmpsb
mov
ds
les
add
push
pop
and
push
lea
fsubs
push
aam
and
fbld
inc
out
cmp
sahf
sub
neg
adc
xchg
sbb
or
jg
rolb
adc
test
out
cmp
ljmp
jns
ljmp
rcll
jo
push
push
sub
mov
cmp
push
mov
movsl
push
sub
push
xchg
or
inc
cld
sbb
mov
outsl
outsl
in
cmp
inc
xor
pop
loop
int
and
daa
loope
jecxz
mov
cld
fadds
xor
cltd
cltd
mov
jns
popa
jle
addb
cmp
fistpll
jns
xchg
popa
enter
test
add
cmp
cltd
insb
sub
jns
dec
sub
call
leave
leave
gs
hlt
std
mov
and
inc
daa
add
adc
pop
mov
imul
mov
hlt
cmpsb
xchg
mov
ja
jge
shrb
pusha
cs
mov
dec
cmp
scas
sbb
mov
in
mov
cmp
mov
fwait
sbbb
pop
lds
ja
ljmp
jne
mov
dec
mov
xchg
out
outsb
arpl
mov
inc
sbb
xchg
mov
scas
xor
cli
pop
sbb
mov
lret
lcall
adc
sub
sbb
pushf
mov
push
insb
and
xchg
push
imul
pop
xor
hlt
cmpsl
sbb
mov
iret
nop
sbb
aam
leave
cmp
loop
in
ret
outsb
and
inc
jge
mov
or
icebp
loop
enter
stc
pop
fistl
test
setl
jne
add
pop
push
and
sub
js
adc
movaps
inc
stos
push
je
xor
test
xor
push
in
jo
cmp
aad
xchg
sub
sarl
inc
jae
xor
xchg
cmpsl
or
sbb
jne
mov
pop
pop
pop
imul
orl
push
imul
fnstcw
fnstcw
js
mov
sbb
stos
cmpsl
ret
xor
iret
int
sbb
push
xor
jg
daa
jbe
dec
pop
stos
andb
mov
and
jno
mov
mov
je
sbb
mov
cmp
inc
push
test
xchg
out
cmp
xchg
icebp
into
add
es
sbb
fwait
in
aas
push
lahf
ja
and
xchg
out
xor
out
mov
imulb
test
sti
and
pop
push
lods
test
jle
es
or
xchg
out
pop
sub
xor
xchg
or
or
sub
in
xor
mov
inc
mov
mov
addr16
and
stc
cmp
adc
inc
mov
and
fistpll
sti
xchg
hlt
xchg
jo
pop
in
inc
out
jmp
jne
sbb
jbe
imul
pop
cmc
mov
out
xchg
ret
mov
adc
cmpsl
inc
sub
lcall
test
stc
fdivl
inc
pushf
adc
jne
mov
std
fstps
bound
pop
lret
xlat
mov
rorl
cmp
jl
adc
jb
sbb
or
xchg
movsb
add
mov
add
mov
mov
lods
gs
movups
sub
das
jmp
cmp
mov
mov
idiv
sbb
jbe
push
inc
xor
xorl
gs
mov
push
sub
out
fwait
add
lds
pop
in
popf
mov
ret
sbb
das
out
out
or
out
dec
cmpsb
sbb
mov
movsb
lock
call
cmp
fildll
mov
pop
mov
sub
sbb
pop
aaa
cli
xor
inc
lods
jl
sub
fnstcw
mov
fistps
pop
lret
dec
out
icebp
sub
or
jecxz
xor
and
and
inc
cmpsl
int
cmpsb
adc
push
push
jg
xor
cli
sub
ja
stos
dec
lret
xchg
mov
adc
shr
addb
cld
xor
into
mov
add
popf
movsb
out
fcmovu
xchg
bound
adc
pop
sub
test
ficomps
push
mull
fistpll
mov
in
mov
lcall
fmuls
pop
stos
or
mov
mov
push
push
fwait
fcomi
or
and
nop
cmp
jne
insb
add
or
pop
and
mov
in
jo
fldcw
push
loop
out
sbb
nop
mov
jge
rcrb
mov
or
pop
jne
cwtl
fistpll
xchg
push
xor
js
push
scas
insl
addr16
test
cmp
or
cli
xchg
adc
sub
and
or
dec
mov
pop
or
cli
jl
sbb
jge
push
adc
jno
imul
push
aaa
aaa
mov
insb
cmp
pop
pop
add
fiadds
jb
jnp
or
jmp
or
mov
dec
loop
xor
mov
mov
loop
gs
stos
mov
jb
lea
lret
adc
dec
jle,pt
outsb
mov
les
ret
imul
inc
push
sub
lret
pop
pop
sbb
push
inc
pop
cmp
sar
ljmp
pop
sub
add
aad
gs
aam
movsl
xor
das
movsl
mov
lret
pop
cli
in
repz
scas
push
and
bnd
iret
push
movl
mov
xor
inc
inc
xchg
popa
dec
lea
sbb
mov
cmp
cmp
pop
or
push
add
mov
or
shll
dec
ss
mov
pop
or
test
xor
add
ret
out
cs
fidivrs
add
cmp
fs
lahf
and
push
adc
sub
cvtdq2ps
lret
ds
pop
test
adc
inc
mov
aas
mov
inc
inc
shl
jns
xchg
push
hlt
mov
xor
xor
inc
lahf
push
jae
sub
out
lret
cmc
adc
mov
adc
adc
mov
and
add
pop
dec
jg
xor
imul
mov
in
jecxz
mov
cmp
or
or
dec
aad
insl
cli
jns
ja
add
andb
imul
stc
dec
cwtl
clc
je
pop
ds
aas
lcall
mov
push
and
lahf
jle
aaa
shll
iret
scas
xchg
sub
out
cwtl
stc
pop
pop
mov
rolb
sahf
in
gs
insb
shlb
lea
jo
xor
xchg
fwait
and
inc
int3
into
push
lret
outsb
push
xchg
aas
push
pop
faddl
push
inc
cmpsl
or
cld
xchg
jno
push
mov
pop
int3
ret
push
mov
rol
aaa
inc
out
mov
cld
pop
ret
jl
mov
dec
int
cmp
jno
push
les
mov
push
mov
xor
out
mov
arpl
pop
push
mov
inc
sub
hlt
int
or
jae
cmpsl
cltd
mov
aas
mov
dec
jns
cld
inc
xor
hlt
into
lcall
lret
sub
or
xchg
test
xchg
mov
cltd
adc
test
cltd
pop
adc
sub
inc
inc
push
dec
adc
add
sbb
inc
outsb
and
inc
mov
sahf
sahf
cmpsl
leave
iret
into
xlat
push
insl
jmp
inc
jp
popa
fidivrl
adc
scas
ss
test
cmpsl
xchg
outsl
or
and
xchg
mov
push
sbb
inc
pop
xchg
int3
pop
push
repz
inc
xchg
pop
mov
mov
cmc
xchg
stos
xchg
cmp
int3
xor
push
sub
daa
and
mov
out
cwtl
lods
inc
xchg
or
loopne
push
imul
fildl
cmp
and
xor
xor
mov
insl
push
clc
into
sbb
xor
cmp
in
mov
in
cmp
sub
push
jns
pushf
push
mov
data16
sbb
cmc
gs
outsl
jb
mov
inc
mov
pop
inc
rolb
lds
jmp
ds
xor
fidivl
sub
lock
ja
in
dec
incb
bound
xor
out
lock
xor
popf
aam
ljmp
xor
nop
push
das
into
in
xor
sub
jbe
and
push
jns
fcomip
push
imul
jge
xchg
arpl
scas
inc
pop
pop
arpl
mov
adc
pop
lret
loop
pop
in
in
jge
pop
mov
dec
xchg
ljmp
mov
and
movsl
push
inc
ds
dec
push
push
in
dec
andb
jge
sbb
push
sub
shll
insl
ja
mov
or
std
sbb
cld
test
add
jne
fldcw
pop
sub
aaa
hlt
divb
in
and
mov
das
adc
cmpsb
pop
push
cmp
push
out
inc
mov
stc
cmp
mov
shrl
cli
movsl
fdivrl
sub
lds
push
stos
clc
jb
xor
idivb
mov
out
test
cltd
dec
or
ljmp
aam
aaa
test
cmp
ja
push
loopne
inc
pop
xchg
inc
xor
out
jb
jae
in
lock
push
sbbb
inc
lds
push
in
or
jge
stos
push
jns
jne
dec
pop
out
or
jl
and
pop
icebp
xchg
lods
mov
fisttps
ljmp
jnp
xor
add
xor
push
daa
pop
xor
pusha
inc
andl
int
push
cmp
xor
mov
hlt
bound
ficompl
int3
lods
mov
cmp
cli
aas
fs
sti
xchg
cmp
mov
lods
pop
cmp
inc
int
mov
or
rcrl
sbb
mov
push
pushf
mov
lahf
mov
xor
mov
rcll
xlat
popa
movsb
mov
cmp
pop
mov
pop
iret
or
and
loope
or
xor
xor
jns
xor
into
cmpsb
test
lods
or
sub
jbe
push
clc
lea
scas
std
xorb
daa
dec
pop
leave
pop
mov
jae
in
sbb
mov
int
dec
dec
dec
fistpl
jns
sbb
fimull
fs
lock
cmpsl
add
xchg
ljmp
push
test
adc
arpl
xorl
ds
hlt
cltd
add
cmc
jae
or
shll
in
adc
imul
pop
push
cmp
sub
mov
pop
sahf
mov
inc
sti
insb
orb
jle
rol
pop
add
iret
dec
fwait
or
mov
scas
mov
jl
enter
lock
push
pushf
call
arpl
lods
fwait
cld
mov
rorb
repz
insl
cld
mov
into
in
sahf
rcrb
jae
cmpsb
les
inc
xchg
fstpt
ja
hlt
xchg
push
xchg
insb
imul
or
inc
pop
movb
movsb
dec
cmp
stos
sub
ret
fcmove
shll
je
jb
cmpsl
ja
repz
fisubl
adc
adc
ds
sbb
jle
test
jp
aaa
push
cmc
pusha
add
nop
stos
mov
xor
pusha
add
movsb
adc
adc
adc
dec
insl
pop
sbb
xor
mov
inc
pop
xor
imul
aaa
div
aad
cmp
mov
rcll
popf
inc
rcll
mov
pop
aaa
push
repz
fdivrl
xchg
stos
push
cmp
orb
push
fistps
jae
rorl
fwait
scas
mov
sbb
imulb
fdivs
push
mov
push
and
lods
aam
sahf
xchg
je
mov
push
or
loop
leave
pop
pop
divb
cmp
scas
mov
pop
dec
inc
sbb
pop
push
loop
mov
jne
push
xchg
push
dec
aaa
mov
out
xor
ret
inc
fwait
lcall
or
out
rorl
xlat
xchg
shl
sub
aas
fisttpll
sub
sub
test
psubusw
pop
push
jp
sub
xchg
scas
adc
adc
lret
push
push
pop
fwait
add
add
in
sbb
sub
add
mov
mov
mov
xor
and
js,pn
dec
lret
xchg
js
cmp
data16
push
fcmovnb
mov
jo
sarb
xlat
aaa
je
cmc
incb
jbe
std
jge
jb
lods
push
xchg
cmpsl
ret
mov
loop
mov
pop
aam
sbb
mov
jg
outsb
dec
jle
test
fisubl
dec
mov
xchg
inc
out
into
gs
mov
jmp
icebp
lahf
cmp
stc
mov
movsl
sbb
jae
add
adc
inc
fwait
out
shl
and
or
xor
mov
ss
sub
repz
mov
fnstsw
mov
and
out
cmp
jnp
shlb
loope
xchg
popf
ret
fs
mov
sub
push
and
cmp
je
lods
push
and
jo
lahf
mov
push
arpl
add
adc
mov
xor
push
and
push
les
xchg
sbb
mov
mov
sub
pop
mov
leave
jae
loop
add
pushf
loop
lret
lock
and
iret
mov
fdivrl
notl
and
inc
mov
sub
adc
out
sbb
mov
adc
adc
adcb
pop
pop
cmp
sbbl
mov
scas
pushf
daa
lcall
imul
cs
mov
dec
mov
and
fidivl
movsl
ljmp
ds
daa
xor
push
adc
mov
inc
mov
mov
out
or
xchg
cmpsl
popa
sub
fldcw
pusha
sub
and
xchg
pop
pop
pop
sahf
cwtl
aaa
add
push
pop
lea
jno
mov
mov
inc
sbb
repz
lret
adc
sbb
mov
repnz
and
rorb
xlat
cmc
or
adc
and
outsl
enter
sbb
cld
push
sub
dec
addr16
das
mov
mov
adc
aam
and
inc
xchg
pushf
sbb
ja
outsb
mov
loope
pop
mov
xchg
repnz
dec
sbb
xor
xchg
or
leave
repnz
imul
js
mov
icebp
imul
push
popa
adc
xor
jg
and
lea
fmuls
addr16
dec
inc
cmp
mov
add
rol
sbb
test
ja
fisttpll
pushl
sbb
in
add
fstpt
in
ror
arpl
sub
xchg
clc
xchg
or
ror
adc
insb
mov
cli
and
push
dec
dec
and
mov
scas
sub
aaa
adc
sbb
loop
push
int
mov
mov
sti
mov
lret
fidivrl
ja
test
shll
and
cmp
add
add
ss
sahf
xor
pop
addr16
in
mov
mov
inc
pop
pop
cmp
dec
push
mov
xchg
and
jp
test
lock
imul
xor
sub
xchg
xchg
mov
imulb
loope
dec
icebp
js
jmp
stc
jbe
mov
inc
lahf
mov
ds
stos
sbb
cmc
mov
xor
ret
data16
jmp
call
dec
bound
jne
aas
cmp
and
jmp
inc
aad
xchg
xlat
xchg
pop
idivb
push
das
sub
mov
fisubrs
ss
fdivl
jo
sti
cmpsl
or
shl
out
ret
xlat
mov
sub
cld
push
cltd
stos
stos
movsb
xchg
push
add
jecxz
out
push
mov
daa
stc
xor
xor
xor
jg
xchg
mov
xchg
lea
int3
push
popw
jg
lret
pop
push
jecxz
inc
jl
outsb
aaa
mov
xor
inc
jp
popf
shl
pop
push
imul
add
push
and
icebp
sbb
inc
jecxz
sub
in
mov
es
jle
movsb
sbb
push
sbb
pop
enter
repnz
mov
lret
outsl
cwtl
lds
loopne
mov
into
xchg
xor
shlb
test
mov
bound
ja
pushf
pop
dec
negl
movsb
xor
rcr
mov
sti
mov
and
rclb
cmc
lret
aam
fsubs
cmovle
inc
sub
push
adc
xchg
push
adc
mov
in
unpcklps
in
mov
push
or
imul
xchg
cmp
add
pop
in
mov
outsb
out
out
xchg
mov
jge
rorl
xchg
ja
mov
out
sub
lahf
adc
xor
pop
mov
cmp
xor
lods
int3
fcoml
mov
push
shl
and
andl
sbb
mov
iret
pop
inc
cwtl
jnp
inc
jmp
push
cmp
mov
add
roll
pushf
pop
icebp
aas
or
scas
stos
dec
shlb
iret
cltd
dec
jo
fcoml
xor
xchg
xchg
sbb
and
push
xchg
xor
dec
mov
pop
cwtl
or
shlb
stos
hlt
test
sti
inc
iret
xchg
sarb
add
sub
ftst
hlt
repnz
pop
pop
adc
cmp
add
shrl
jo
divb
call
and
out
sar
mov
ss
xlat
mov
xor
xlat
movsb
xchg
js
je
sbb
mov
lret
mov
jge
stos
out
xor
xor
push
pop
and
jae
cli
arpl
fsts
addr16
and
sahf
push
inc
stos
inc
je
jecxz
sbb
adc
test
lret
jle
mov
cmp
push
dec
cmpsb
cmp
add
xor
jle
fisttpll
dec
or
rorl
in
jae
outsb
inc
sbb
add
scas
sub
add
cmc
lock
xor
stos
inc
stc
jl
testl
jo
leave
or
lret
dec
jo
subl
add
or
pop
lcall
dec
pop
std
mov
sub
mov
sub
cmc
lea
inc
push
icebp
cmc
mov
push
lret
cmp
mov
andb
stos
xorl
inc
add
ja
das
jae
lock
sbb
xchg
gs
jg
insb
inc
and
test
xor
dec
mov
add
movsb
ds
cwtl
icebp
or
push
les
sub
lret
test
in
cld
xchg
dec
xchg
fs
sbb
push
jle
hlt
pop
loop
lock
pop
add
loop
push
push
cli
adc
dec
insl
pop
fnstcw
inc
pop
cmp
dec
mov
ret
and
outsb
int3
cmp
inc
test
cmp
cs
subb
call
lea
ficoml
and
ffree
outsb
fidivs
fldt
out
pop
mov
pop
into
or
inc
mov
lods
mov
rclb
nop
or
mov
add
push
clc
mov
mov
xor
fdiv
scas
pop
or
xor
movb
enter
bound
dec
xchg
dec
movsl
iret
les
inc
jb
js
mov
sbb
rcll
ret
js
popa
xor
mov
xchg
xchg
dec
ds
fldenv
lret
mov
pop
or
arpl
push
fisttps
in
pushf
jp
jo
loop
push
and
clc
push
inc
mov
xchg
adc
sub
mov
jne
int3
and
cmpl
cmp
cli
loop
lods
mov
xchg
sarb
cmc
cmp
add
mov
clc
inc
dec
push
mov
sub
popf
push
fidivrs
pop
push
inc
jnp
cld
push
mov
dec
xchg
jb
bound
call
inc
incb
cmp
gs
and
mov
mov
push
movsb
mov
or
std
mov
pop
lods
insb
or
add
sbb
int3
clc
inc
lahf
gs
lock
and
hlt
sub
ja
sub
inc
sub
push
into
jns
sahf
ret
mov
pop
cli
cvtdq2ps
inc
push
fildll
test
pop
adc
sbb
jle
dec
xor
fwait
mov
popa
pop
std
scas
xorb
xchg
inc
stos
jb
repnz
sub
dec
mov
xor
ljmp
je
inc
fmull
inc
push
sti
leave
dec
loope
mov
jae
inc
inc
mov
outsl
mov
nop
adc
lock
sub
cmp
test
mov
clc
sbb
in
push
gs
push
dec
daa
pop
into
shll
sti
out
rclb
dec
jb
xchg
push
adc
pop
out
aam
and
cmp
bound
dec
xor
iret
pushf
push
test
cmp
cmp
mov
mov
push
jo
dec
leave
pusha
rorl
fwait
in
xchg
mov
mov
pop
int
jno
sbb
mov
cmc
sbb
or
std
mov
sarb
mov
adc
nop
cmp
pop
fdivrl
mov
mov
add
cmp
jl
push
imul
lret
enter
andb
cmpsl
pusha
xor
cmc
and
lcall
insl
into
mulb
and
aaa
xor
imul
mov
iret
push
in
xor
pop
push
out
pop
in
pop
push
lcall
mov
incl
lret
jmp
and
sbb
or
or
dec
movsl
popa
xchg
inc
outsb
popa
sub
in
roll
movhps
shrb
mov
push
xchg
ja
mov
shlb
and
mov
into
scas
or
int
or
cwtl
push
push
adc
push
cmpl
xor
loopne,pt
and
dec
push
nop
int3
cwtl
xor
sub
add
jae
cwtl
mov
ss
aaa
cmp
cli
and
cs
ja
andl
or
in
inc
jo
xor
insl
leave
sbb
loopne
insl
shll
mov
inc
hlt
xabort
es
push
lds
int3
in
fisubrs
mov
add
and
cmp
repz
sbb
inc
jecxz
push
inc
test
jmp
pop
inc
push
fldcw
adc
fcompl
push
test
lret
ljmp
std
jge
add
sbb
in
lods
cmp
mov
or
dec
and
test
inc
pop
enter
idivl
lcall
sub
fcmovbe
xchg
xchg
fsubp
pop
add
push
jnp
pop
xlat
mov
scas
jb
push
mov
test
lock
je
cmc
inc
jmp
inc
scas
or
cmpsb
in
xchg
xor
xor
inc
add
add
ljmp
loope
fldl
xchg
adc
shrb
mov
jns
inc
ficoml
mov
cmp
pop
adc
call
cmc
stc
and
insb
mov
inc
xchg
xor
jae
push
in
stc
clc
pusha
int
sbb
dec
das
jo
xchg
lods
push
insb
jns
rcr
and
mov
xchg
aas
ds
jne
inc
mov
scas
sahf
mov
sbb
dec
ret
cmpb
and
je
inc
popf
sbb
adc
ljmp
and
das
cld
pushf
cmp
jb
cmpsl
mov
adc
or
loope
dec
decl
mov
pushf
mov
inc
out
pop
aas
shll
loop
xlat
or
std
pop
mov
xchg
inc
xchg
pop
push
mov
lods
scas
imul
shlb
and
lcall
pop
hlt
cmp
fldlg2
adcb
mov
push
pop
adc
divl
aam
imul
push
insl
iret
ljmp
cld
or
movsl
xorl
pushf
sbb
dec
sub
sarb
outsl
inc
fwait
and
dec
mov
inc
dec
icebp
lea
or
idivl
js
shrb
lea
nop
cld
mov
aad
mov
ret
jl
adc
hlt
mov
xchg
cld
mov
scas
loope
cwtl
mulps
ret
stos
mov
aaa
jae
out
cwtl
clc
pop
aam
and
adc
shlb
lret
test
xchg
jno
push
lea
lods
pop
xchg
push
push
scas
movsl
enter
imul
ja
and
adc
lret
xchg
xlat
decb
mov
inc
in
push
pop
popf
orb
mov
cmp
pop
xchg
hlt
cld
push
mov
sub
inc
sahf
in
insb
mov
mov
cmp
mov
negl
or
in
inc
sub
dec
insl
xor
std
lret
insb
out
loopne
dec
add
nop
pop
dec
test
cmp
push
out
addr16
add
xchg
or
imul
jp
sti
subb
inc
and
sbb
add
test
fstpt
inc
add
jmp
cmp
jp
les
sub
xchg
mov
pop
mov
incl
mov
cmp
hlt
aam
sbbb
jbe
sub
arpl
test
cmp
sbb
movsb
mov
pop
loop
stos
dec
xchg
pop
dec
sbbl
inc
gs
pop
aam
mov
int
jl
adc
fs
fsts
out
push
xchg
xor
add
rcr
sahf
push
push
mov
ret
clc
mov
jg
push
imul
or
inc
je
xor
sub
xchg
push
das
inc
mov
inc
repnz
ljmp
and
sbb
cltd
dec
add
pop
test
cmpsb
lahf
sbb
mov
pop
jecxz
mov
mov
inc
fstpt
aam
int
jmp
ljmp
data16
mov
inc
inc
push
or
inc
or
in
xor
dec
xor
jno
shlb
leave
pop
cld
and
jl
pop
jmp
shlb
jbe
jae
adc
sti
pop
fidivs
incb
ss
jne
add
aad
mov
aad
xchg
arpl
cmp
cli
out
dec
ljmp
dec
xor
popf
clc
shrb
scas
add
adc
adc
in
add
sbbl
xor
cwtl
jb
add
dec
sbb
in
lods
movsl
dec
inc
cs
or
pop
shlb
stos
add
lods
xchg
mov
iret
dec
inc
sub
xor
inc
inc
testl
mov
fwait
pushf
outsl
and
mov
bound
ret
xchg
test
aas
sbb
test
je
inc
ret
xchg
push
and
loop
lret
ret
dec
mov
adc
mov
sbb
aaa
cmc
push
xor
dec
aas
cmpsl
loopne
sub
xchg
inc
sbb
aam
push
pop
add
or
push
mov
jo
add
daa
add
imul
mov
iret
sub
xchg
std
inc
dec
adc
mov
ja
out
cmp
icebp
outsl
rolb
shr
loope
fisubrl
xor
pop
push
dec
sub
dec
outsl
mov
scas
pop
and
and
jnp
daa
std
mov
adc
rolb
movsb
ljmp
sbb
sbb
dec
das
or
lcall
push
mov
pop
dec
dec
lret
push
mov
adc
pushf
hlt
add
pop
pop
dec
lret
scas
fwait
mov
in
imulb
lea
cli
mov
adc
int3
outsl
subb
addl
cli
data16
pop
sub
push
into
das
push
sbb
in
mov
in
inc
lcall
jnp
adc
fprem1
lds
xchg
out
xor
pusha
mov
dec
push
fistps
out
jmp
fxch
adc
push
in
test
stos
test
inc
mov
stc
and
sub
adc
sub
scas
sbb
and
sbb
adc
cmc
jo
sub
mov
mov
lods
loop
xor
iret
aaa
cmpsb
ljmp
cmp
jns
inc
mov
xor
mov
adc
mov
push
and
xchg
repnz
adc
aaa
call
inc
imul
pop
stos
scas
aaa
lahf
xlat
addr16
cmpsb
inc
add
rcr
inc
orl
adc
xchg
sar
pop
fcmovbe
fisttpl
repz
inc
add
push
icebp
add
inc
enter
jge
inc
push
jnp
stc
ds
dec
lahf
adc
clc
fwait
add
push
cmc
sbb
ficoms
xchg
xor
jg
in
ret
lret
pushf
push
push
dec
aas
add
les
jbe
shrl
clc
add
rcrb
mulb
in
push
xor
sti
stc
inc
into
mov
mov
fsubl
stos
push
cmp
sub
lods
cmp
scas
mov
adc
out
dec
dec
fldcw
mov
adc
adc
inc
test
fildl
jg
test
pop
loopne
out
sti
lods
jecxz
outsl
cli
add
outsl
mov
aaa
sbb
sbb
stos
rcrb
cwtl
dec
fiaddl
add
push
out
in
cld
adc
mov
push
icebp
test
pop
or
mov
in
bound
out
sbb
pop
sbb
pop
mov
sub
mov
sbb
jge,pt
jl
push
or
or
or
fwait
push
ja
addr16
push
xchg
stos
push
adc
adc
mov
insl
pop
mov
testl
push
fs
repz
push
jg
adc
fdecstp
pusha
pop
mov
mov
lahf
add
dec
lods
int3
ret
and
cmp
fsubl
sahf
push
mov
xor
mov
out
xlat
cmp
out
mov
xor
mov
cmpsl
inc
xor
out
or
lahf
movsl
mull
mov
inc
jae
or
or
pushf
mov
or
ja
into
pop
xlat
sub
sub
adc
mov
xchg
xchg
sub
ret
movsb
push
xorl
pop
pushf
call
movl
xor
pop
mov
dec
inc
cs
pop
popa
out
dec
or
insl
bound
xchg
lahf
dec
outsl
mov
and
ljmp
lds
or
popa
sbb
inc
pop
enter
sahf
mov
outsl
push
stc
testl
test
push
data16
stc
mov
fwait
add
movsb
push
scas
mov
push
movsb
cwtl
pop
leave
fadds
jp
shll
xchg
jecxz
inc
dec
or
sbb
mov
dec
mov
iret
lods
push
push
mov
pop
aam
leave
adc
pop
add
sub
dec
push
cmovno
or
pop
popf
popl
icebp
aam
rcl
ficoml
jo
and
das
ljmp
leave
dec
xchg
orb
arpl
dec
or
or
xchg
fcompl
stc
cmc
xchg
and
adc
adc
inc
adc
test
int
in
cmp
mov
xchg
daa
or
das
adc
mov
movsb
add
mov
pop
aam
lods
test
or
pop
nop
xor
rcrb
dec
mull
mov
dec
jge
xor
jl
cmp
xchg
loop
pop
fiadds
mov
inc
or
xchg
inc
jle
dec
fwait
lods
lea
mov
mov
mov
dec
jns
inc
std
push
out
lahf
and
push
mov
loopne
fnstenv
out
icebp
jmp
inc
in
and
xchg
int
int
aam
xchg
ret
subb
and
les
sbb
std
idiv
icebp
repz
scas
lods
pop
and
jne
rorl
das
jb
push
mov
jns
jl
and
and
scas
icebp
pop
dec
cmp
mov
je
dec
nop
xor
xchg
xchg
ffreep
and
or
inc
movsl
mov
inc
rclb
add
jbe
sahf
mov
call
or
jbe
loop
sub
sub
and
arpl
and
cmp
orl
addb
mov
xchg
pop
fistpll
filds
leave
and
jg
call
out
mov
lods
icebp
dec
or
scas
es
sub
sub
push
xchg
jl
outsl
arpl
decl
and
xor
addb
scas
pop
js
or
inc
shrl
xchg
mov
test
sub
push
das
jecxz
xchg
imull
loop
aad
push
lods
scas
inc
pop
and
sbb
sarb
jno
mov
sub
or
mov
jne
lret
push
mov
cmc
xchg
push
mov
adc
icebp
lods
cld
adc
je
dec
dec
cli
cli
das
sbb
dec
push
mov
jle
in
mov
push
jmp
ret
ret
cmp
mov
insl
sub
adc
xchg
fnstenv
adc
mov
push
sbb
outsl
aaa
gs
dec
ret
add
cmpsb
push
dec
sbb
pop
nop
jnp
int
jp
jle
jno
push
notl
sahf
arpl
fdivrs
adc
xchg
cmp
lahf
sbb
mov
cmpsl
inc
sbb
shll
fyl2x
orl
dec
test
xchg
mov
pop
sbb
cmpsl
enter
xor
xchg
and
in
arpl
out
inc
or
xchg
roll
mov
add
mov
das
or
enter
dec
push
push
in
int
cwtl
push
or
bound
add
icebp
pop
add
cmp
sbb
mov
xor
push
iret
cmp
sub
xor
xchg
popf
scas
pop
ret
es
cmpsl
adc
pop
flds
mov
pop
mov
pop
sub
les
arpl
pop
test
or
or
iret
pop
mov
and
aam
inc
test
mov
test
add
pop
sbb
or
push
push
push
shrb
xor
arpl
sbb
xor
scas
in
in
mov
outsb
sti
popf
sti
jecxz
mov
jb
add
rorb
rcrl
fsubrl
stos
inc
fucompp
or
mov
cmpsb
cmp
shrl
subl
nop
pand
movsb
shrb
sbb
sbb
mov
es
sub
pusha
jbe
and
pop
or
xor
sbb
inc
sbb
testl
sarb
and
shrl
pop
push
jns
jl,pn
sahf
push
pop
push
xor
repnz
lds
xorb
mov
icebp
mov
push
scas
je
sar
and
push
jnp
jl
stc
or
sub
int3
imul
je
lods
jmp
cmp
jge
les
mov
cmp
xchg
cmc
fimull
adc
out
xchg
mov
jmp
sub
mov
push
loope
dec
jmp
pop
jge
push
jmp
pop
es
test
out
dec
xor
mov
push
xor
imul
push
pop
dec
testl
ja
scas
mov
aad
xor
sub
inc
xchg
sub
cld
xchg
mov
dec
mov
jo
sub
push
mov
pop
test
in
scas
imul
adc
js
jbe
addb
mov
xor
xlat
dec
cld
nop
cltd
sahf
xchg
xchg
jecxz
repnz
mov
mov
in
dec
ja
adc
push
push
xor
mov
xor
push
cmpsl
pop
leave
cmc
and
pop
div
and
sub
inc
lods
jp
xor
out
jge
andl
adc
test
or
adc
add
sbb
fdivrl
outsl
add
int
sbb
movsl
mov
cltd
js
iret
test
xlat
pushf
fs
jmp
lds
mov
cmpsl
mov
daa
and
dec
repz
ss
stc
lcall
sbb
push
sbb
xchg
push
repz
cmc
repnz
mov
adc
lahf
push
push
mov
shll
jo
ds
sbb
pusha
push
lret
shl
inc
aaa
js
cmp
and
stos
sbbl
push
add
lret
xchg
jmp
stos
pop
sub
lods
cmp
xchg
in
sub
mov
adc
pop
xor
lret
dec
push
dec
adc
mov
movsb
aas
fdivr
xchg
arpl
repz
cmp
jl
jl
icebp
push
xor
in
pushf
cwtl
mov
pop
out
dec
mov
cmp
aas
mov
bsr
push
pop
inc
xchg
adc
stos
hlt
mov
pushf
pop
mov
dec
cmpb
mov
push
inc
das
gs
jmp
out
test
and
orl
pop
mov
xor
jbe
mov
enter
enter
lret
in
inc
fwait
les
fisubrs
pop
notb
addr16
jb,pt
cmp
out
push
and
cmp
fsubs
jnp
fdivrp
cmp
cmp
int3
jb
movsl
orps
and
insb
cli
jg
js
cmp
movsb
test
test
mov
shl
jns
jecxz
pop
jge
push
mov
jp
mov
cmpsb
into
and
push
inc
andb
mov
std
pop
mov
icebp
xor
dec
pop
call
stos
fldl
imul
and
in
ds
loop
pop
hlt
cltd
cmc
loop
decb
mov
aaa
jb
ret
and
or
push
cmp
push
mov
adc
mov
xchg
das
inc
and
imulb
popa
fsubs
std
daa
cmpsl
pop
cs
ficoml
add
movsb
sub
push
loope
inc
sahf
outsb
sbb
mov
cld
or
xor
or
or
stos
pop
pop
insb
cwtl
sbb
pusha
mov
xor
outsb
fprem1
shll
sahf
mov
push
mov
ljmp
push
mov
and
cltd
or
mov
ja
das
adc
cli
mov
lcall
jge
adc
cmpl
sti
cmpsb
out
fxch
jae
xor
mov
mov
mov
xchg
add
mov
sarl
aas
jge
adc
jns
mov
mov
hlt
repnz
jg
lret
out
jb
insl
stc
sub
dec
xchg
testl
leave
mov
andl
mov
dec
icebp
inc
leave
push
add
loopne
arpl
pop
or
xchg
test
mov
fcmovnb
add
add
jge
jnp
adc
mov
push
xchg
mov
adc
in
jns
std
add
outsl
mov
mov
test
and
sbb
mov
xor
add
sub
or
stc
ss
popa
cmc
inc
pop
loopne
pop
xchg
inc
cmp
fidivrl
inc
add
loopne
mov
mov
hlt
dec
aaa
lret
test
mov
in
jle
xor
push
xchg
out
lds
rorb
sbb
mov
jle
test
adc
jecxz
jb
lock
sti
cmc
lds
dec
xor
cmp
push
dec
inc
push
ljmp
cwtl
inc
outsl
arpl
dec
popw
mov
lods
xchg
enter
push
push
jbe
push
sti
filds
in
fcmovnu
xorb
out
mov
sbb
cmp
sub
sbb
hlt
enter
rclb
test
mov
xchg
sti
sbb
jns
xlat
das
leave
shrl
out
pop
rol
mov
sub
jmp
stos
clc
imul
outsb
lea
shlb
out
mov
imul
cwtl
or
cmpsb
mov
icebp
jg
inc
mov
xchg
pop
jb
std
orl
sub
pop
push
push
cmpsl
or
pop
adc
jns
lds
xor
iret
ret
cld
shr
outsb
and
int3
out
fbstp
imul
ret
in
xor
and
cmp
and
lcall
sub
lret
inc
stos
adc
insl
jo
pop
inc
add
ljmp
pushf
adc
rcl
fldt
cld
adc
lea
xchg
or
in
inc
dec
in
ljmp
and
test
cmpb
in
in
jg
js
push
andb
sbb
insb
sub
into
mov
adc
push
push
mov
add
inc
cltd
adc
push
scas
hlt
xchg
fwait
pop
mov
pop
inc
inc
repnz
xchg
das
or
sbb
aad
xchg
jmp
jnp
mov
in
xor
sbb
push
je
jl
dec
dec
repz
ds
sbb
xor
lods
sub
xlat
add
mov
shlb
out
adc
es
dec
leave
aaa
scas
add
jge
jne
and
sbb
pop
sub
and
movsb
pusha
jl
in
pop
test
and
xor
popl
mov
xchg
es
iret
pushf
in
mov
pusha
inc
mov
sbb
push
jb
movsl
lock
inc
arpl
mov
test
fidivl
pop
jle
jp
sti
pop
xor
pop
and
mov
test
cmp
jno
mov
push
and
enter
push
cmp
cmp
lock
adc
add
mov
adc
nop
call
arpl
and
inc
subl
gs
in
sub
inc
aad
andb
adc
clc
mov
out
push
movsl
icebp
push
mov
out
outsl
fidivl
dec
sbb
pop
dec
mov
dec
pop
sub
in
inc
hlt
mov
add
inc
lret
out
dec
insl
mov
mov
jb
lea
addr16
push
jl
mov
adc
insb
dec
xchg
pop
jno
push
or
rolb
dec
ret
cs
stc
and
ret
imul
sbb
adc
ss
xchg
pop
xor
ret
call
cli
push
scas
ret
jno
xor
lods
cli
pusha
sbb
call
mov
jbe
inc
jg
lret
cmp
loopne
ljmp
jne
dec
dec
int3
shrb
xchg
scas
push
adc
out
add
aam
out
iret
mov
inc
push
bound
dec
push
add
mov
js
mulb
jb
jno
push
add
roll
and
cmp
hlt
popf
test
jg
pop
push
adc
and
dec
mov
pushl
jns
in
and
jg
in
pop
jbe
mov
mov
clc
cli
inc
xchg
icebp
mov
pop
or
pop
adc
pop
mov
mov
xlat
cmp
add
repnz
push
sbb
mov
cwtl
add
lret
ja
jbe
jns
and
xlat
in
cmp
loopne
imul
addb
ds
cmp
lea
adc
pushf
bnd
cli
xlat
ja
inc
test
les
adc
jl
pop
xchg
imul
adc
nop
stc
loopne
add
rol
cmpsb
push
jns
ss
gs
pop
cmp
xchg
clc
adc
bound
cmpsb
test
mov
fimull
adc
pop
dec
mov
mov
fcmovne
call
or
ss
sarl
daa
sub
and
test
cmp
repnz
lods
inc
mov
sbb
mov
inc
loopne
and
mov
idivb
movsb
xchg
sbb
cmpsl
lretw
pop
pop
xchg
jg
addr16
test
cld
mov
std
cmp
insl
outsb
mov
imul
shl
in
sahf
fistpl
fnsave
jmp
sbb
cld
ret
add
repz
jne
pop
mov
bound
outsb
adc
add
dec
ror
add
lea
filds
jne
sub
out
push
jmp
push
inc
data16
xchg
mov
or
pusha
cmp
mov
pop
test
shll
mov
stc
pop
addr16
mov
fsubrl
sbbl
lcall
inc
mov
xlat
leave
cld
jge
inc
xchg
stc
aaa
add
jb
insl
mov
xchg
add
nop
jae
push
popf
xor
push
mov
arpl
add
bound
rcr
rol
adc
add
hlt
in
jne
out
add
ret
lret
adc
sbbl
xchg
xchg
and
mov
add
sub
inc
sub
and
xchg
cli
scas
stos
imul
dec
fsubrl
sub
dec
push
add
add
loope
jg
rorb
push
mov
rcpps
les
xchg
mov
xchg
push
cli
insl
dec
mov
dec
dec
rclb
cmp
dec
pop
sarb
lahf
sarb
mov
cld
mov
inc
jge
lock
inc
testb
xchg
push
test
and
mov
xchg
sub
hlt
fdivrs
add
scas
mov
sub
adc
ret
sub
and
out
jne
mov
add
jecxz
repz
pop
pop
mov
gs
mov
in
xchg
subl
aas
cmpsb
and
insl
or
sub
xor
testl
clc
hlt
sahf
push
jae
mov
pop
mov
cltd
pop
hlt
or
stos
int3
jne
xchg
add
add
fwait
in
pop
xchg
jmp
fst
dec
dec
push
mov
dec
mov
mov
cld
push
adc
adc
xchg
lods
pusha
fcmovne
arpl
cltd
add
aas
es
push
cmp
pop
push
mov
stc
dec
stos
lea
push
stos
test
and
loope
push
test
adc
ret
jo
test
aam
dec
add
cmp
mov
mov
addb
ljmp
xchg
jle
jecxz
add
hlt
mov
mov
enter
repnz
push
inc
xchg
push
sbb
daa
pop
jb
jae
push
push
or
lds
sub
mov
inc
ficompl
test
push
jb
aam
repnz
jg
add
mov
movsl
hlt
mov
insl
dec
sub
repnz
mov
in
test
push
pop
popa
xchg
sub
push
lret
std
mov
notl
jne
pop
test
cmpsb
cmpsb
adc
aam
mov
or
push
rorl
mov
adcb
lods
lret
jbe,pt
orb
loopne
add
cmp
popa
dec
ficomps
sub
cmpsl
add
push
inc
je,pt
add
mov
pop
pop
ja
push
sbb
jge
add
aam
push
push
xor
notb
cmp
popa
sbb
shrb
lods
les
test
fdivrp
pop
jmp
sti
out
jne
mov
iret
leave
sub
mov
jne
mov
jge
sti
lds
pop
dec
int
in
add
out
popa
test
sub
test
sbb
lcall
sbb
sbb
aas
scas
xchg
aam
mov
lret
sbb
adc
adc
cmpsl
inc
cmpb
out
inc
popa
dec
jl
adc
mov
je
sarb
out
idivb
jecxz
out
aam
mov
jmp
jle
xor
cmp
arpl
stos
mov
movsl
shrb
lret
jle
shrb
pushf
pop
and
cmpsb
xor
and
mov
or
sbb
dec
and
mov
pop
addr16
sahf
fcoml
int
stos
stos
jge
lret
bound
push
lret
hlt
push
je
je
pop
inc
lret
inc
sbb
sub
movsb
mov
rolb
les
fptan
lea
mov
and
jmp
sti
push
mov
pop
rcrl
pop
xchg
mov
sub
ret
mov
inc
mov
iret
lret
pop
fmuls
fwait
sti
gs
out
popa
filds
mov
lock
addb
pushf
mov
das
scas
mov
sbb
add
shl
cmc
hlt
and
push
cli
test
add
push
jl
fildl
sub
cmp
loopne
cmpsl
pop
or
jbe
lcall
xor
push
aas
and
push
cmp
ss
push
adc
and
cmpsl
rcll
inc
int
lock
dec
pop
xchg
or
jl,pn
xorb
cmc
inc
sub
jae
imul
mov
fsubr
mov
cmp
cvtdq2ps
cmp
mov
or
rclb
out
mov
dec
or
arpl
sahf
or
dec
jecxz
dec
dec
lea
test
mov
cmp
or
iret
inc
movsl
pushf
je
data16
mov
fiaddl
mov
stos
sbb
push
popa
jle
mov
outsl
sti
mov
mov
mov
mov
sub
mov
movsb
cmp
inc
jno
orb
mov
push
mov
or
sub
adc
mov
aam
ret
mov
jns
stos
xorl
movsl
xchg
push
js
aad
jmp
hlt
xchg
out
push
add
insl
in
push
sub
mov
mov
mov
push
aas
push
hlt
push
xchg
adc
push
hlt
xor
sub
dec
mov
out
mov
push
aam
sahf
into
lods
orb
mov
rolb
arpl
addb
mov
inc
cmpl
cli
stos
and
or
insl
inc
sti
push
inc
push
mov
and
cmp
pop
jne
popa
or
pop
sub
xor
aam
in
lret
jle
lahf
xor
cmp
lods
sbb
mov
hlt
roll
dec
dec
stos
in
test
jo
mov
cli
js
insl
psubq
lock
in
repz
dec
dec
adc
push
cmc
out
je
leave
lahf
mov
aaa
imul
or
test
push
es
mov
adc
mov
dec
imul
xor
inc
and
push
mov
in
sbb
inc
mov
add
les
inc
jb
xchg
pop
push
cmp
dec
pusha
xchg
xchg
jnp
adc
xlat
push
jbe
insw
dec
jns
movsl
sub
in
push
lock
aad
loopne
loop
adc
jge
sub
jbe
movsl
jns
cli
sub
adc
jno
add
fwait
jg
dec
add
jle
sub
jnp
pop
or
leave
add
push
sarb
or
dec
fidivrl
pop
rclb
cmpsb
push
pop
push
jo
jl,pn
or
test
les
sbb
das
push
out
push
jno
sbb
subl
sbb
or
sub
test
cmc
jmp
add
lods
ds
mov
jae
aam
and
jno
sub
js
call
or
arpl
testl
cmp
sahf
sbb
fildll
imul
leave
pop
jle
out
loope
inc
xchg
add
push
xchg
imul
mov
faddl
jle
cmpsb
shlb
sub
out
and
sub
dec
inc
lret
add
and
test
xor
mov
addr16
jno
addr16
ss
cmpsl
movsb
ljmp
mov
outsb
pop
mov
enter
out
jecxz
push
testb
xor
das
daa
lods
xchg
cmp
pop
dec
xchg
cmp
dec
jns
movsl
mov
cmp
sti
negb
mov
pop
test
lds
int3
push
mov
xchg
jl
xor
sbb
loope
outsl
lock
insb
in
jbe
mov
pop
in
adc
cmpsl
mov
or
out
jb
aad
adc
mov
mov
das
daa
test
bound
mov
xchg
mov
and
xor
xchg
jmp
xor
addr16
xchg
andl
repz
mov
pop
push
cwtl
in
cld
jbe
fnstcw
lea
xchg
dec
sahf
add
mov
jo
ret
filds
mov
mov
pop
lds
sub
fwait
jne
mov
inc
and
jns
mov
gs
je
lahf
mov
mov
outsl
jmp
out
sub
ljmp
xlat
sub
pop
cmp
insb
push
xlat
pmuludq
jno
dec
pop
testb
rcrb
into
pop
mov
xchg
and
ret
rorl
icebp
dec
es
push
fcmovbe
xchg
les
and
cli
and
fcmovnb
xchg
mov
push
lods
inc
shll
mov
cmpsl
xchg
jmp
mov
mov
jne
shlb
cmc
out
inc
push
jecxz
rclb
fs
pop
test
hlt
adc
cld
cwtl
repnz
mov
ljmp
mov
shrb
inc
sub
xor
es
daa
insl
or
xchg
repnz
aam
movsb
jecxz
jge
xchg
mov
xchg
data16
out
and
imulb
andb
xchg
lret
fisttpll
outsl
pop
sub
int3
mov
mov
repz
lret
or
sub
rclb
pop
xlat
test
bound
push
pop
rcrl
lods
jmp
xchg
rcrl
jle
in
mov
jno
lock
mov
mov
sbb
sub
push
dec
mov
push
sub
push
mov
sahf
mov
insb
sbb
mov
repz
dec
cmp
pop
adc
xchg
push
push
je
lods
mov
pusha
call
in
push
xchg
rcl
out
test
pop
in
mov
xchg
sub
jbe
xor
call
cwtl
mov
cld
jecxz
dec
popf
cmp
mov
pop
add
int
cmp
jle
sti
sub
xchg
or
xchg
jp
cmp
push
mov
ret
sbb
pop
xor
adc
cmpsl
sahf
test
pop
cs
inc
mov
icebp
divl
nop
or
pusha
testb
sub
push
popf
inc
rcrl
xchg
mov
lret
mov
or
js
sub
dec
pop
mov
addr16
lods
pop
pop
pop
outsb
cmc
mov
out
and
inc
jno
sbb
pop
testl
mov
mov
xlat
jae
xor
inc
inc
sub
sub
xor
jmp
outsb
shlb
add
jg
cs
clc
test
xor
lock
adc
mov
in
xor
cmovg
jb
dec
imul
lods
sub
xor
cmc
int
js
addr16
les
lcall
imul
xchg
popa
outsl
cltd
xchg
push
fs
or
pop
les
fsubr
daa
inc
adc
xor
test
or
icebp
xor
outsb
add
jmp
lds
push
enter
pop
into
and
or
xlat
xor
addr16
test
into
arpl
test
mov
mov
int
pop
sub
xlat
cmp
adc
and
lods
fs
popf
and
xchg
xor
rcrb
lret
imulb
xor
jae
cltd
andb
xchg
imul
dec
and
xor
or
sbb
sbb
gs
out
aam
cmp
xor
xchg
dec
cli
sub
daa
in
inc
dec
inc
or
leave
inc
and
mov
insb
xor
sbb
lods
enter
and
lods
sub
jle,pn
xchg
pop
cmp
icebp
ds
adc
push
pusha
pop
stc
ds
sbb
pop
sti
add
lock
aaa
xor
push
std
lock
ljmp
xchg
pop
mov
dec
outsb
xchg
test
mov
mov
pcmpeqw
fcoms
sahf
ss
or
imull
push
clc
leave
pop
cwtl
cmpsb
sub
cmpsl
mov
movsb
fdivs
cld
sbb
and
jg
subl
jb
xor
dec
js
lock
sub
imul
pop
arpl
aaa
and
xorb
jp
push
lock
pusha
ljmp
into
pusha
sbb
fldcw
cmpsl
inc
adc
in
outsl
sbb
xchg
fisttps
xchg
xchg
js
cmp
mov
icebp
dec
and
add
jle
push
pop
cmp
jbe
cmp
mov
popf
lock
je
sub
sbb
int
dec
pop
pushf
adc
and
ret
in
mov
mov
pop
jle
sti
pop
or
jp
fucom
idivl
repnz
and
shlb
ljmp
xor
jo
data16
or
mov
int
dec
shlb
addb
fbld
mov
imul
scas
popa
add
movsl
fimull
add
dec
dec
fsubr
in
ret
dec
jno
outsl
call
adc
aaa
and
push
sbb
leave
insb
pusha
sbb
imul
ret
call
insb
lock
repnz
enter
xor
push
and
aaa
movsl
stos
sbb
loope
ljmp
lret
imul
pop
sti
pop
dec
push
jns
sub
nop
es
mov
rcll
loop
sub
andl
jnp
xorl
sbb
test
in
mov
test
ret
call
push
mov
jne
jnp
mov
adc
push
and
and
aaa
int3
aam
lds
add
ldmxcsr
shlb
push
inc
loopne
pop
test
push
sbb
inc
aas
mov
cmp
stos
xchg
popa
insb
sbb
rorb
pop
subb
shl
cld
loopne
ficoms
xchg
adc
cmp
rorl
scas
arpl
daa
ljmp
bound
jae
aad
mov
popf
mov
adcl
pop
sahf
lret
call
test
jmp
mov
push
pop
pop
push
flds
dec
into
jns
stc
cmpsb
mov
les
push
dec
das
test
sarb
mov
leave
je
dec
xchg
sbb
ret
push
inc
adc
and
aas
push
testb
cmp
jb
sbb
push
adc
stos
fnsave
pop
imul
jl
jno
jmp
mov
jmp
loop
aam
pusha
imul
mov
jle
call
mov
cltd
loopne
in
ret
sub
sar
inc
lcall
add
jne
xlat
mov
int3
sbb
cld
or
mov
popa
cmp
fs
inc
jnp
mov
lret
inc
pop
in
push
xchg
and
data16
cmp
pop
inc
ret
in
int
add
mov
nop
imulb
insb
mov
jb
xchg
dec
xchg
cld
xlat
ret
xchg
nop
or
out
pop
iret
sahf
shll
fwait
pop
in
cld
mov
cmpb
icebp
dec
or
wrmsr
stos
mov
loopne
and
adc
ja
xchg
pop
push
inc
sub
stc
sbb
imul
js
ret
dec
test
xor
add
jmp
mov
push
jle
mov
jge
aad
cmc
cmc
sbb
mov
and
mov
cmpsb
sarb
jl
pop
adcl
lock
cmpl
jnp
cmpsb
add
pop
rolb
dec
cmpsl
lcall
mov
jmp
or
mov
loop
lea
popf
and
loopne
fildll
fadds
aam
repz
sarl
inc
lret
or
rol
fcoml
mov
sahf
xchg
dec
pop
or
clc
mov
je
sbb
and
lds
lcall
jmp
mov
insl
jnp
adc
inc
jmp
cmp
aam
pop
lds
repnz
test
mov
adc
ja
sub
jb
mov
cmpb
push
add
push
js
cwtl
cld
xchg
test
mov
inc
nop
lods
add
fcoml
cli
fisttpl
insb
arpl
mov
pop
pusha
or
xlat
icebp
gs
sub
xor
or
mov
fdivr
into
adc
loop
bound
stos
imul
mov
in
popf
shll
cmp
dec
div
inc
pop
mov
sub
xor
sub
mov
cmc
call
push
dec
jmp
cltd
divl
sarb
pop
movsl
sub
mov
mov
notl
int3
test
out
push
adc
in
icebp
rorl
or
into
push
rolb
mov
inc
fsubrp
xchg
cmpsl
mov
cli
xchg
inc
xchg
mov
int3
ficomps
mov
and
out
and
data16
mov
xchg
dec
fisubrs
sub
sub
lods
push
lcall
lods
pusha
adc
pusha
xchg
xchg
notb
mov
or
sub
leave
dec
push
call
inc
outsb
iret
push
pop
pop
adc
pop
ret
mov
scas
fidivs
lret
sti
out
xor
mul
sub
sti
push
mul
or
repz
adc
fildl
sbbl
mov
mov
mov
xchg
add
mov
mov
xchg
cli
xchg
dec
aam
js
aad
outsb
mov
mov
or
mov
enter
lods
lahf
mov
pusha
test
iret
outsb
popf
addr16
stc
insb
mov
aad
sbb
sbb
hlt
dec
adc
ss
stos
shlb
sbb
add
es
hlt
mov
mov
pusha
mov
test
pop
push
pop
imull
jl
insb
push
sbb
inc
stc
cmpsb
es
lods
test
sub
inc
pop
xorl
sbb
ret
cmp
movsl
icebp
xchg
push
or
outsb
xchg
xchg
enter
ds
dec
push
adc
sub
das
cmp
daa
lret
push
add
xor
movsl
mov
inc
in
insl
and
das
lret
push
jle
lock
sub
mov
pop
jle
daa
sub
gs
out
pop
mov
addr16
sub
inc
push
cmp
inc
sarl
dec
popa
cmp
cmc
sub
inc
out
inc
test
inc
fst
mov
and
nop
sbb
push
sub
js
or
lock
jnp
mov
mov
nop
aam
mov
mov
cli
imul
xlat
mov
mov
push
dec
arpl
pop
xchg
mov
xchg
dec
mov
xor
fadd
testl
dec
jmp
push
fs
jecxz
movsb
clc
xor
pop
out
mov
pusha
xlat
mov
fsubr
cltd
rorl
fbld
std
push
mov
in
mov
je
lret
pop
add
call
or
cmp
push
in
in
dec
enter
faddl
dec
jp
lea
jg
or
pop
xor
je
in
jge
mov
dec
adc
push
in
shll
jecxz
pop
sbb
push
cmpsl
fisubrl
jb
ret
mov
sbb
xor
fadds
or
into
jl
mov
lods
shl
cmc
mov
mov
lods
rcrb
push
out
int3
in
add
adc
idivl
sbb
push
aam
ss
sbb
mov
mov
ss
mov
loop
fbld
adc
int
xorb
add
dec
rcl
cs
pop
sub
inc
stos
ret
pop
inc
data16
pop
in
cs
xorl
clc
adc
das
cmp
test
movsl
sarl
lods
or
std
enter
cltd
test
das
in
xchg
mov
lret
sahf
out
stos
dec
popa
stc
stos
jg
fisttps
imul
int3
fdivrl
xor
inc
push
fsubrs
addl
mov
shrl
and
and
push
cwtl
pop
add
xchg
and
xchg
shlb
mov
jae
jle
mov
pop
sbb
mov
andb
fmul
std
pop
inc
rolb
push
jmp
cmp
inc
xor
sbb
ret
sbb
mov
sub
cmp
xchg
jecxz
xlat
stos
cmpsl
imul
add
cmpsb
lret
mov
xchg
sub
sbb
insb
inc
leave
lock
adc
mov
sahf
pop
in
fsubr
ljmp
mov
je
cmc
xor
idiv
pop
aaa
loopne
test
push
lods
fnsave
incl
or
lret
push
pushf
or
sbbl
outsb
dec
xchg
jp
mov
adc
sbb
lret
fadds
bound
pop
ss
jno
imul
in
fisubrl
push
and
mov
cmp
sbb
cmp
sub
lds
dec
aam
sub
iret
mov
popf
mov
shrb
dec
sub
sbb
pop
sti
push
pop
test
dec
mov
pop
sub
fdiv
outsl
add
jae
push
push
cmp
scas
ja
popf
and
fdivrp
out
add
jmp
mov
mov
lcall
fwait
bound
inc
jnp
and
out
jb
js
xchg
and
dec
sub
jle
adc
daa
add
stos
xchg
or
jmp
loopne
inc
jge
dec
das
faddl
xor
frstor
pop
loopne
cs
aad
rclb
ljmp
mov
adc
stc
sbbl
jmp
and
enter
xchg
mov
loope
pushf
mov
inc
jnp
int3
push
mov
fsubrl
mov
fsubs
cld
or
lahf
mov
cmp
xchg
repnz
adc
xchg
xlat
nop
mov
ljmp
lods
data16
test
xchg
mov
sub
push
adc
cs
scas
or
imul
mov
push
mov
cltd
in
pop
inc
pop
call
sub
int3
fxch
mov
inc
mov
dec
xor
or
xchg
std
aas
test
and
inc
sahf
int
jb
dec
add
icebp
sub
aad
push
mov
jge
mov
test
pop
and
jae
jecxz
out
jb
sar
or
push
mov
cmp
sbb
mov
add
iret
xlat
fildll
loop
not
inc
xor
ss
shrl
adc
xchg
mov
mov
push
out
push
jbe
int3
loopne
scas
test
mov
mov
cmp
push
sahf
ljmp
pop
or
lret
rcrb
and
and
lods
mov
xor
stos
subb
or
xchg
cmp
cmp
test
inc
neg
fdiv
jae
mov
pop
mov
add
mov
xchg
addr16
pop
sahf
shrl
repnz
jno
test
aas
rorl
push
fcmove
sub
xchg
cmc
ja
fldcw
sbb
xor
add
scas
adc
test
daa
inc
rdmsr
dec
jl
fnsave
xchg
xchg
data16
addr16
mov
imul
imul
cli
jmp
jnp
ja
pop
in
std
mov
xchg
pusha
cmpsb
and
stos
test
or
in
push
ds
sub
ficoml
mov
dec
dec
test
push
in
popf
pop
push
push
dec
dec
xchg
mov
xor
or
jmp
add
push
sahf
push
xchg
rcl
push
sahf
dec
cmp
jo
repnz
and
negl
subl
xchg
dec
ret
mov
lds
fs
and
sbb
mov
dec
sub
xchg
inc
repnz
frstor
pushf
dec
sbbb
mov
aam
fcmovu
outsb
movsb
jb
xor
sbb
mov
dec
push
jp
pop
outsl
ja
out
mov
push
fldt
lea
jl
xor
lods
sbb
shl
inc
pop
jns
mov
mov
pusha
cmp
jg
test
jg
int3
mov
ss
ret
cmp
out
mov
dec
cs
sbb
push
cmp
imul
imul
jnp
xchg
adc
mov
negb
mov
loope
cs
push
sti
ret
inc
mov
jp
dec
ror
cmp
dec
fs
test
movsb
hlt
cmp
nop
xchg
popa
cmp
push
push
pop
test
pop
rolb
sbb
aas
inc
cmp
dec
sbb
cmc
stos
jne
mov
lahf
mov
mov
adc
rcl
and
mov
cmpsl
mov
push
mov
ja
pusha
mov
leave
add
scas
push
jne
xor
xchg
cmp
outsb
sahf
xor
pusha
test
outsl
pop
jns
test
orl
xchg
jle
adc
lods
pop
shll
cwtl
xor
sahf
cmc
rorl
ror
mov
push
ret
xor
dec
test
xor
mov
and
cltd
sbb
arpl
mov
xchg
dec
inc
dec
pop
adc
in
jl
lock
in
shll
sbb
mov
cmpsl
cmp
jp
loope
mov
adc
shll
sbb
sahf
roll
dec
movsl
and
push
or
sbb
mov
mov
aaa
sbb
mov
fcoml
cli
and
adc
jne
fs
inc
push
mov
and
xchg
pop
shll
rolb
lahf
and
lret
cmp
xchg
xor
or
push
inc
inc
out
icebp
jge
sbb
mov
add
inc
rorb
xchg
ret
cmp
loope
pusha
lea
xchg
jo
les
dec
std
mov
int
rcll
pop
mov
push
pop
pop
sbb
xor
inc
ds
mov
repz
ret
jp
das
xor
cld
sub
jg
push
jmp
and
and
inc
mov
push
test
ds
lahf
bound
cmp
xchg
or
cwtl
aam
xor
jmp
inc
outsb
mov
push
cmpsb
jle
and
rclb
aaa
pop
cmp
push
nop
cmp
js
xor
stos
pop
mov
imul
push
jnp
jg
sub
or
lods
jb
dec
mov
mov
lret
lcall
push
clc
sbb
ret
shl
lcall
ret
adc
scas
popa
repz
pop
mov
sub
in
daa
jg
cmp
fldenv
add
lods
enter
movsl
pop
outsl
and
inc
fcomip
push
sbb
flds
inc
outsb
arpl
push
pop
mov
pushf
pushf
scas
ror
lcall
xor
mov
out
push
jo
addr16
push
lock
inc
mov
fldl
mov
mov
fdiv
imul
loopne
dec
mov
sbb
mov
out
mov
test
stos
xchg
sbb
push
outsl
sahf
sbb
xchg
adc
ficoml
jbe
jns
lds
lahf
mov
arpl
loop
repnz
jmp
lods
fdivs
jecxz
sub
jo
cmp
outsl
xor
cmp
testb
cld
xchg
aad
dec
sbb
dec
push
dec
pop
sbbb
cmp
pop
xchg
xor
popf
push
out
lock
data16
lock
cltd
xchg
pop
jb
data16
in
int
test
loop
pop
sub
and
ds
ja
repz
sbb
push
jns
rolb
call
fildl
int
icebp
repz
or
cmpsl
test
aas
sub
and
mov
pop
inc
aaa
inc
inc
leave
arpl
je
and
in
inc
mov
jmp
add
stos
fbstp
adcl
lea
sub
mov
fcmovu
inc
vpaddsb
dec
pusha
lahf
pop
mov
lahf
mov
mov
adc
sbb
inc
loop
mov
xor
xchg
int3
mov
add
cmc
ficoms
movsb
cmpsb
dec
ret
or
movsl
in
inc
aad
psrad
out
repnz
outsl
sti
sbb
adc
dec
out
out
lahf
jbe
aam
mov
shrb
xchg
add
xchg
cmp
pop
mov
mov
pop
sbb
dec
xor
mov
xor
mov
sahf
movsb
ds
psubusw
loopne
adc
sub
loopne
scas
jb
pop
dec
das
pop
mov
xor
adc
std
dec
mov
jge
mov
xchg
imul
popa
cli
cmp
out
push
lret
sub
xor
test
lahf
fmul
frstor
adc
add
lahf
or
cmpsl
out
adc
out
rorb
negl
add
pushf
loope
insl
mov
stos
xor
scas
push
scas
xor
and
dec
add
fnstenv
cmpsb
jno
rorl
sbb
sub
and
iret
ja,pn
in
in
fdivs
mov
cmpsb
pop
dec
mov
sub
daa
inc
fs
hlt
mov
xor
pusha
cmpsb
ja
mov
lds
stos
es
imul
add
inc
pop
dec
xor
mov
mov
fsubp
repnz
clc
sarl
sarl
fwait
mov
push
cmp
aad
negb
pop
xchg
rolb
jne
push
or
mov
cmpl
ret
xchg
ss
push
in
sahf
add
push
mov
dec
mov
push
mov
xor
push
fisttpll
stc
fcmovbe
jb
out
mov
pop
dec
out
pop
pop
cli
xor
aad
cmpsb
ja
fbld
pop
cmp
or
roll
inc
out
and
dec
jmp
jecxz
mov
decl
fldl
in
nop
movsl
pop
mov
sahf
sub
pusha
sub
sar
out
dec
mov
repz
test
ret
in
jg
cltd
into
jg
out
or
sub
cmpb
push
sbb
adc
lods
int
call
sub
in
clc
mov
ret
in
or
mov
sub
jb
or
mov
push
or
dec
sbb
cmp
stos
out
das
xchg
test
leave
clc
xchg
inc
adc
imul
ficompl
cmpl
outsl
hlt
sbb
fs
inc
repz
and
cmp
in
adc
test
faddp
mov
or
enter
std
dec
xchg
mov
mov
lahf
bound
movsl
push
out
mov
mov
and
xchg
hlt
push
cmp
adc
cmp
ret
mov
push
rcrl
scas
test
push
inc
xchg
adc
hlt
or
cmpsl
sti
sbb
aam
or
out
xchg
lods
jo
lcall
in
mov
lret
jge
inc
fistpll
insb
int
jp
imul
adc
das
repz
push
mov
mov
and
and
nop
dec
out
xchg
imul
mov
pop
rclb
ret
sub
and
sbb
aad
fcmove
sbb
scas
dec
in
dec
add
add
inc
adc
xchg
xor
in
cmp
jle
cmpsb
cltd
roll
sub
pushf
xchg
fcoms
inc
xorb
add
sub
data16
mov
jne
mov
mov
lds
outsb
mov
adc
mov
iret
sub
lcall
insb
out
push
sbb
push
je
pop
sarl
mov
daa
inc
fisubrs
pop
xor
xor
push
into
nop
out
in
stos
lods
repnz
xchg
aas
mov
mov
pop
adc
push
xor
dec
add
mov
shrb
mov
fs
adc
jnp
push
pop
scas
jae
inc
dec
jge
ljmp
pop
xchg
aas
imul
pop
nop
aam
push
push
mov
push
mov
jmp
and
lock
dec
daa
es
mov
mov
leave
sbb
into
pop
cltd
testb
dec
and
sbb
xor
push
xor
scas
ja
sbb
jne
sti
or
and
push
or
outsb
adc
jno,pt
push
xor
test
xor
adc
stc
popa
push
mov
sbb
pop
and
push
cmp
pop
adc
les
push
fildll
or
pop
mov
cmp
inc
insl
data16
dec
jge
and
mov
fidivl
imul
jno
inc
jle
andb
mov
dec
loope
xlat
jbe
pop
lret
test
dec
mov
inc
movsb
imul
push
and
mov
fs
pop
cmp
ret
xor
dec
jg,pn
jle
movl
loope
xchg
loop
sti
int3
lods
jbe
js
mov
mov
incb
loope
push
sbb
jbe
orl
loop
sahf
ret
test
add
pop
fbstp
jae
jb
push
sub
inc
mov
mov
xchg
xchg
loop
push
push
add
and
fs
jns,pn
and
in
aam
iret
push
mov
iret
or
lods
inc
flds
pusha
sub
test
and
mov
movsb
int
mov
sarb
shll
adcl
ja
jecxz
stc
mov
fistpll
jg
cld
test
imul
dec
out
icebp
jb
jle
mov
imulb
clc
mov
pop
in
jecxz
and
mov
cmp
xor
ret
push
sarb
cmp
imul
dec
sub
ja
mov
xlat
sbb
add
fs
ficoms
xchg
test
adc
pop
dec
fistl
mov
or
mov
popa
ja
sti
lock
lcall
push
nopl
push
jbe
sbbl
push
push
inc
pusha
jo
lods
data16
mov
add
mov
xorl
pusha
xor
lods
and
sbb
mov
jmp
push
sti
repnz
sti
inc
outsl
mov
scas
adc
dec
idivl
call
push
pop
stos
lods
jmp
outsb
cmp
cmove
ss
iret
jno
cmp
xchg
mov
in
inc
sub
dec
jmp
adc
psubb
mov
sub
test
xchg
and
cld
test
pushw
repz
jns
test
mov
xor
push
ffreep
clc
jecxz
fsubp
enter
xchg
mov
mov
insb
cmpsb
pushf
popa
je
sbb
movsb
sbb
sub
loope
cld
es
lahf
inc
out
imul
dec
fidivrs
les
mov
pop
push
mov
cmp
movsb
sub
cs
jmp
xchg
test
cmc
inc
aad
movsb
adc
xchg
fidivrl
inc
cwtl
in
push
adc
mov
inc
mov
sbb
xlat
sbb
ja
jb
mov
nop
mov
fiaddl
sbb
adc
rcrl
out
sub
xor
lock
and
fcompl
jb
jb
iret
test
aas
into
cmp
mov
cmp
sub
xor
idivb
jbe
adc
int3
cli
and
add
ja
icebp
jnp
lods
cmp
ljmp
dec
add
or
inc
jmp
mov
roll
bound
jl
cwtl
out
repz
push
adc
pop
cmpsb
rclb
test
jecxz
imul
mov
out
mov
test
xchg
notl
sub
aam
xchg
and
insb
mov
jno
sub
scas
popa
xor
push
rcll
bound
popf
imul
insb
int
lcall
in
mov
sbb
jl
add
hlt
lock
xor
mov
push
xor
cmpb
cmpb
inc
sti
mulb
mov
cmp
push
insb
sbb
jae
mov
mull
js
in
dec
inc
loop
push
pop
mov
xor
jnp
add
jno
ret
push
mov
sub
mov
pop
adc
lcall
xchg
and
mov
iret
xchg
scas
mov
fsts
loop
cmp
int
fidivl
dec
orb
and
das
xor
fldl
sqrtps
mov
dec
leave
adc
and
nop
and
fptan
pop
sti
cmp
add
dec
mov
std
pop
sub
pop
or
mov
and
or
nop
test
pop
mov
sti
push
mov
jge
enter
inc
aad
mov
cmp
mov
out
xchg
lret
leave
or
fistpl
pop
movsl
stc
shl
lock
ljmp
push
inc
rorb
lods
xor
je
lahf
movb
pop
repnz
out
dec
mov
fnsave
sbb
mov
fiadds
add
stc
mov
ret
fsubl
stc
cmpsb
pushf
in
pushf
je
push
push
xchg
jae
leave
xor
push
cltd
jbe
sub
cwtl
mov
mov
xor
mov
jns
xlat
je
jns
lea
xorl
pop
adc
mov
fisttpll
mov
add
sub
cmpsb
andb
push
xchg
xchg
sub
xchg
xchg
fdivrl
jns
inc
int3
mov
cld
mov
bound
cmp
jno
pop
pop
and
shrl
dec
and
hlt
das
mov
cli
xlat
push
scas
pop
cmp
add
inc
aaa
pop
test
push
cltd
loop
sub
jo
push
pusha
fisttpll
adc
cmp
lahf
jnp
aas
cld
jno
add
push
daa
mov
dec
sbb
cmpsl
xor
pop
sub
inc
mov
and
or
je
mov
sti
xorl
in
dec
mov
push
sarl
pop
out
lods
sub
ret
das
fistl
rclb
sbb
icebp
sub
outsb
testb
mov
lahf
mov
add
je
jae
mov
repnz
std
cli
in
pop
icebp
inc
xchg
fnstenv
hlt
cmp
xor
mov
dec
stos
push
test
lcall
xor
xchg
int
and
shlb
mov
pop
jecxz
sbb
adc
pop
mov
xor
pop
mov
adcb
ss
xchg
mov
jg
aad
stc
mov
sbb
and
lock
roll
lcall
pop
jbe
xchg
stos
les
imul
and
shlb
add
outsb
aam
mov
xor
mov
shlb
pop
filds
xchg
cwtl
pop
cmc
or
and
imul
out
cld
outsb
je
mov
xor
jg
stc
mov
ja
jae
push
jle
mov
hlt
xor
dec
insb
pop
ret
jbe
mov
mov
iret
jle
jecxz
icebp
add
jne
xchg
loop
jb
or
dec
shrb
out
es
imul
pop
push
cwtl
outsl
add
xor
cmp
int
loop
incb
dec
xchg
adc
call
push
int
ret
push
inc
ret
mov
lds
cmpsl
jmp
mov
or
out
inc
xchg
enter
push
cmpsb
inc
mov
stc
loope
mov
imul
cmpl
jge
push
pop
push
insl
stos
pop
andb
pop
inc
ss
cltd
add
leave
aaa
xchg
and
shlb
fcomps
lods
pusha
pop
xchg
test
sbb
adcb
pop
dec
jp
stos
pop
test
jecxz
sub
movl
out
mov
dec
push
xor
out
xchg
test
xor
mov
cmp
jb
push
fistl
push
inc
jmp
dec
icebp
movlps
cltd
inc
inc
sbb
pop
cmp
lcall
adc
out
mov
push
sub
aam
adc
cwtl
adc
jne
repz
or
mov
test
xchg
add
cwtl
imul
stos
lds
aad
rorl
sbb
push
xchg
sub
stos
fxch
fisubrl
aaa
clc
rorb
cmpl
jo
sub
dec
rolb
stos
mov
dec
out
mov
addr16
stos
lret
fistpl
or
mov
add
push
popa
jge
jo
pop
xchg
ja
ret
or
push
scas
fisubs
xchg
jg
mov
xchg
xlat
mov
insl
inc
lock
xchg
nop
cmp
cli
adc
sbb
cmpsb
rcrl
loopne
sbb
movsb
inc
inc
push
xchg
scas
loop
pop
pop
xchg
xor
fs
cs
fildl
std
adc
push
mov
push
stos
ret
lahf
adc
psllq
ficoml
out
sub
add
divl
daa
xor
adc
sbb
push
ret
mov
rolb
cs
push
dec
call
mov
jg
pop
push
daa
xchg
repz
xchg
js
jge
popa
test
or
sub
stos
mov
cmp
js
sub
add
inc
insl
popa
test
mov
bound
into
mov
insl
sub
into
insb
cltd
mov
sbb
sar
gs
xchg
xlat
leave
ret
lock
fsubs
ja
xlat
cmpsl
rol
pop
stos
stos
jmp
pop
mov
pop
xchg
dec
sbb
dec
or
dec
data16
stos
lea
frstor
add
bound
mov
and
out
das
cmpsl
jne
jne
mov
clc
cmc
xor
sbb
ja
push
sub
xor
push
nop
sub
inc
xchg
pop
lahf
mov
pop
das
xor
sub
xchg
pop
xor
cmp
repnz
inc
mov
pop
xor
lds
push
and
ret
cmp
outsb
into
sti
jle
cmp
in
in
mov
and
jae
pushf
mov
mov
dec
inc
rorl
fimuls
ficompl
gs
adc
jg
push
sbb
inc
and
mov
test
jl,pn
mov
loop
inc
inc
jmp
jg
cli
cwtl
cmp
mov
dec
icebp
out
jno
nop
cmp
fists
enter
jae
bound
pop
sarl
daa
loopne
and
shlb
mov
sbb
jb
mov
jne
fstl
inc
dec
cmpl
or
movsl
or
ret
lock
xchg
xor
lods
popa
jge
out
push
and
push
jl
xchg
js
imul
push
adc
or
pop
jno
cwtl
push
fisttps
xor
iret
test
xor
std
pop
cmp
mov
cmp
dec
iret
repnz
pop
cmpsb
jle
add
pop
adc
mov
faddp
sub
cmp
mov
outsb
ret
sbb
pusha
inc
add
inc
jo
inc
test
das
mov
cmp
jl
fwait
adc
mov
or
jg
adc
inc
in
cmp
movsb
fwait
or
pop
xor
and
mov
shl
inc
int
outsl
xchg
dec
mov
xor
pop
mov
outsb
leave
push
jbe
imul
outsb
jmp
jle
dec
dec
popf
gs
jns
repz
mov
insb
mov
test
xor
into
sbb
pop
xchg
pop
mov
sub
add
and
mov
xchg
mov
pop
pop
dec
out
pop
add
int3
mov
add
dec
in
fwait
sahf
xor
dec
lret
cmp
jecxz
loope
shrl
xchg
lods
mov
or
sub
shll
xchg
sbb
push
dec
pop
cmc
out
orb
mov
clc
lcall
scas
ret
and
inc
jno
cmp
jmp
sarl
dec
mov
divl
push
iret
xorb
lcall
or
mov
leave
data16
fwait
xchg
add
xlat
pop
xchg
xchg
movb
push
jp
sub
cmp
mov
sub
adc
pop
sti
jno
pusha
cwtl
daa
fs
loop
jne
inc
es
es
inc
jmp
out
sbbl
ljmp
lds
lds
xor
mov
das
dec
inc
test
dec
sub
nop
add
bound
std
ret
push
test
pusha
inc
fildl
add
stc
or
add
cmp
mov
xor
imull
mov
mov
cwtl
jl
movsl
jge
xchg
xor
adc
mov
loop
cmpsb
xor
pop
out
mov
int3
ret
aaa
sub
pop
cli
sub
push
dec
mov
repz
sti
pop
mov
and
and
mov
xor
or
test
mov
test
sub
xchg
sbb
hlt
inc
mov
mov
inc
and
dec
or
inc
loope
xchg
add
subl
cmp
xor
loope
mov
sub
fadds
out
adc
xlat
push
xchg
and
mov
les
ljmp
imul
int
add
add
cs
lret
repnz
mov
add
loope
mov
gs
lock
sub
cltd
into
orb
mov
lds
sbbl
inc
mov
in
int
or
xchg
lods
mov
mov
je
repz
cltd
daa
pop
mov
or
or
je
cmp
jbe
pop
je
sbb
movsb
mov
mov
stos
sub
xor
and
andl
movzwl
mov
jne
xor
ret
xor
dec
mov
inc
insl
es
pop
inc
lods
ror
fdivrl
int3
out
add
sbb
mov
lea
pop
cltd
arpl
jb
hlt
aam
jmp
xchg
mov
in
cmp
mov
xlat
dec
cmp
outsb
sbb
lcall
jge
pop
dec
mov
push
or
nop
cmp
in
push
and
repnz
rclb
dec
jge
stos
test
push
jnp
sbb
xor
push
in
mov
xchg
repnz
dec
test
fdivrs
and
and
and
or
out
mov
aam
ja
push
push
fldl
and
mov
xor
js
mov
cmp
data16
stos
int
mov
mov
dec
or
cmp
push
lea
sahf
or
scas
push
push
jp
out
jno
insb
fisubs
fldenv
repnz
aad
pop
mov
or
jo
add
daa
test
dec
and
adc
jg
sahf
popf
mov
insb
pop
sub
mov
xchg
test
adc
out
lods
sarl
stc
pop
aaa
mov
aam
mov
inc
push
push
mov
cmc
in
pop
mov
movsl
movsl
mov
or
jp
test
das
jecxz
xlat
sar
mov
jg
pop
mov
jle
insl
sahf
mov
xlat
mov
jae
mov
or
fsts
push
popf
jmp
mov
push
pop
xor
call
sub
mov
cltd
jmp
gs
mov
popf
sbb
fs
ficompl
popa
and
mov
sbb
dec
pop
mov
xchg
clc
pop
dec
xchg
mov
and
push
and
sbb
adc
repnz
pop
push
sub
push
sub
pop
add
dec
push
pop
ja
imul
lret
pop
mov
inc
sbb
mov
aad
adc
clc
gs
sbb
ljmp
stos
rol
movsl
add
dec
nop
fcoms
lret
and
leave
xchg
mov
outsb
mov
sub
iret
enter
and
sub
pop
int3
ret
mov
and
push
mov
imulb
ret
test
cmc
test
lock
call
cmp
outsb
aam
xchg
cmp
repnz
mov
and
frstor
sbb
stos
jmp
inc
jmp
xor
mov
fildll
lock
sarl
lret
movsl
cmp
popa
mov
push
jg
imul
dec
and
lahf
mov
rcl
or
ds
out
adc
jnp
imul
adcl
mov
dec
ret
fwait
xchg
xor
stos
pop
fildll
outsb
sbb
sti
fld
movsl
mov
and
dec
mov
pop
jae
fadds
mov
cwtl
je
mov
hlt
push
cmpsb
add
sub
fiaddl
or
movsl
aas
xor
test
pusha
sub
or
cmpsb
mov
bound
aas
test
jle
adc
mov
es
xor
pop
sar
scas
jae
shl
sbb
add
xchg
jmp
sub
loope
test
and
mov
sub
xor
dec
jb
mov
mov
add
addr16
push
add
mov
jge
mov
aam
adc
xchg
pop
sahf
mov
les
ds
stos
push
cs
fsubrs
xchg
es
incb
adc
mov
xor
push
pop
fwait
push
xor
dec
or
std
adc
clc
or
xchg
imul
or
adc
jbe
mov
adc
test
notb
add
or
scas
in
dec
cli
dec
xor
insb
mov
push
fsubl
pop
pushf
pop
out
mov
cmpsb
pop
test
out
fidivrl
testb
push
xor
rorb
sub
ss
xor
leave
fcos
push
in
pop
lock
testl
je
jns
aam
imul
nop
xchg
push
push
inc
jmp
testb
int
lds
mov
sub
addb
lock
push
add
sbbl
add
xor
dec
es
sbb
jge
push
das
int3
adc
std
insl
mov
cmp
and
inc
inc
lock
push
lahf
jecxz
xchg
adc
popa
push
sbb
mov
inc
ror
or
jno
lods
xor
jecxz
push
jle
jo
inc
cmpsb
popf
test
imul
aad
clc
ret
sbb
or
int3
mov
icebp
xchg
or
ss
mov
mov
xchg
ljmp
xchg
push
fcomps
dec
test
testb
inc
sub
pop
push
or
cmp
popf
arpl
inc
mov
xchg
jge
loopne
fidivl
jbe
pop
dec
sub
pop
xor
out
sbb
outsb
jae
movsl
dec
sub
xchg
out
jo
cmc
imul
lods
xchg
sbb
loop
sti
and
mov
int3
imul
mov
test
cmpsl
cmpsl
stc
mov
clc
sbb
aad
push
sbb
pop
dec
outsb
call
jno
and
inc
sub
cmpsl
lods
xchg
cs
or
pop
push
lret
inc
mov
mov
mov
incb
mov
lea
gs
fmuls
jge
bound
sub
in
adc
sub
inc
push
mov
cmp
in
cmpsb
subb
test
add
fsubrs
sarl
in
in
das
or
mov
mov
jmp
adc
hlt
or
mov
data16
xor
mov
sahf
in
aad
dec
mov
rcrb
xor
push
xchg
fwait
out
lock
arpl
dec
sub
sbb
in
cltd
dec
or
andl
lret
mov
insl
filds
adc
scas
in
xor
cmp
xchg
fnstcw
loop
stc
pop
xchg
xchg
movsb
leave
xchg
mov
fimull
push
xor
inc
into
repz
adc
repz
mov
in
dec
sub
in
mov
popa
jno
cmpsl
mov
std
mov
mov
sub
cli
dec
movsb
stos
lea
ret
xchg
mov
jecxz
push
dec
daa
ljmp
jg
fwait
jb
aam
or
mov
xor
jne
mov
xchg
popl
pop
into
insb
push
mov
lcall
xchg
mov
je
rclb
das
sti
decl
es
xchg
add
xchg
mov
push
push
idiv
xor
pop
insb
arpl
cmp
jg
fidivrl
fs
out
sub
mov
adc
adc
mov
mov
ja
push
stos
inc
jbe
scas
mov
fildl
mov
subl
and
leave
mov
dec
mov
insb
andb
iret
gs
sahf
lahf
pop
jge
jns
push
jo
in
lea
add
cmp
fcmovnb
test
icebp
popa
int3
icebp
popf
pusha
aaa
fnstenv
xor
test
jae
jae
inc
and
jmp
repnz
clc
cltd
aaa
jle
scas
or
jl
inc
mov
dec
and
out
faddl
or
dec
clc
fdivrs
outsb
aad
iret
add
inc
push
fwait
jge
loopne
xchg
adc
or
xchg
lret
stos
daa
imul
push
mov
roll
push
xchg
fimuls
imul
sub
push
push
add
dec
jnp
mov
pop
xchg
dec
and
xchg
jp
sbb
addr16
aas
std
pop
pop
xor
insb
push
push
jno
js
punpcklbw
adc
xchg
pusha
xchg
loopne
inc
sbb
mov
push
pop
cwtl
rclb
mov
xchg
add
xor
cmp
or
push
fnsave
sub
mov
in
fwait
das
mov
push
pop
jp
outsl
push
fwait
jle
in
inc
inc
pop
pusha
adcb
test
sbb
pop
cmp
pop
mov
scas
cmp
cmpsb
xorb
shlb
shlb
out
dec
daa
into
push
mov
int
sbb
sub
dec
cmp
dec
into
rcr
outsl
faddl
in
or
mov
stos
pop
sbbl
dec
sub
jge
std
popa
fidivs
pop
and
sarb
inc
ret
and
popl
inc
sub
lcall
rorl
or
ret
pop
mov
inc
ljmp
imulb
or
sbb
test
or
in
std
jmp
mov
mov
dec
mov
shr
in
mov
pop
jae
mov
ljmp
add
and
jo
stc
outsl
and
stc
dec
arpl
mov
in
mov
jb
mov
out
lcall
adc
rorb
mov
popl
ret
rcrb
mov
xlat
push
pop
js
js
into
mov
je
jno
inc
mov
into
or
and
pushf
aaa
cli
mov
or
xor
jle
stos
cld
mov
test
mov
sarb
test
mov
xor
pushf
in
sub
adc
adc
mov
pop
add
mov
push
cltd
test
loop
push
xchg
push
aas
mov
iret
push
test
scas
fbstp
cltd
mov
pop
jge
test
je
push
in
push
cmp
sbb
cmp
movsl
sub
xor
fs
pop
test
lret
sub
push
into
push
jg
mov
clc
fcompl
in
inc
or
mov
movsl
call
out
cmp
sub
mov
pop
int3
out
or
jp
das
push
cmc
xor
dec
cli
dec
jg
or
mov
jmp
cwtl
fists
vmread
negl
das
push
add
outsb
xor
enter
mov
leave
jbe
les
mov
xor
pop
and
pop
out
mov
mov
or
aad
shll
in
std
lods
pop
pop
ljmp
lods
fistpll
cmp
stc
xor
and
mov
fldcw
fdivrs
dec
sbb
aam
mov
adc
xorl
pop
mov
fidivl
xchg
adc
pop
xchg
sarb
adc
push
cld
xor
jae
adc
mov
ss
enter
sub
jmp
inc
jbe
dec
fimuls
repnz
mov
mov
inc
outsb
jne
sub
mov
lcall
ret
jnp
aaa
push
xchg
sbb
push
fwait
adc
test
pop
or
in
jg
lock
dec
pop
lock
adc
ljmp
loop
pop
aam
jecxz
cwtl
jbe
mov
sbb
jecxz
add
push
cmp
inc
xor
mov
xor
adc
adc
jbe
lods
inc
scas
add
mov
sub
popa
popa
xchg
imul
push
in
and
lock
or
cmp
jle
orb
xchg
sti
and
sub
xchg
dec
dec
mov
scas
mov
ret
add
aad
cmp
subb
cmc
fnsave
fstl
lods
add
mov
movaps
pop
movsl
jp
pop
adc
icebp
add
lret
adc
iret
fwait
test
mov
mov
and
add
movaps
sbb
mulb
cmp
lret
lods
lds
shlb
jnp
mov
aaa
sub
or
pop
add
loopne
mov
inc
enter
rcrb
xchg
jmp
or
push
es
add
insb
push
fcomps
out
testl
dec
and
cmp
mov
jns
test
cmpb
loope
test
cmp
cmpsl
or
mov
xorl
add
pop
xchg
push
mov
pop
cmp
out
pop
cmpb
ret
js
movsb
cmp
mov
inc
pop
or
sbb
add
cmp
lret
rcll
jb
lods
xchg
push
movq
mov
mov
mov
ss
dec
sub
cmp
jge
aam
out
sbb
pop
pusha
testb
pop
mov
pop
scas
pushf
jmp
rcrb
lds
sub
pushf
inc
pop
rcrb
into
xlat
in
insb
mov
jg
int
sub
insl
and
jb
mov
cli
jecxz
inc
pop
cmovge
lds
inc
mov
shrl
vpslld
aam
jae
dec
aad
dec
les
pop
jae
jecxz
inc
cmp
xor
out
shl
sti
xchg
gs
out
enter
test
xchg
hlt
imul
notl
mov
mov
in
lods
jno
push
cmp
shl
call
or
sbbb
sbb
jecxz
add
xchg
jae
int3
mov
push
pop
xchg
sbb
idivb
adc
out
bnd
mov
popa
leave
lea
xlat
cmp
icebp
cmc
inc
out
aas
in
daa
addl
stos
stc
sbb
pop
push
jbe
add
cmp
cmp
cmp
jmp
into
xchg
jnp
scas
pop
clc
and
sub
pop
xchg
cwtl
shrl
push
xchg
test
pop
and
pop
mov
ds
cmpsb
mov
leave
jg
rcrl
lock
out
mov
or
push
lods
mov
push
fdivrs
pop
out
mov
push
push
jle
call
pop
faddl
mov
cmpsl
je
mov
pop
jg
mov
ds
jne
jno
fstl
test
cmp
ljmp
jmp
mov
push
pop
mov
jge
cmp
movsl
dec
aam
test
shlb
mov
sbb
stos
sar
fisttpll
pop
xchg
cld
dec
jmp
sahf
ficomps
ret
pop
pop
loop
mov
jae
arpl
cmp
sbb
mov
or
jge
jae
popf
inc
cli
or
mov
ret
sbb
in
ret
inc
pop
push
xor
cwtl
jno
cmpsl
stos
int3
cs
std
inc
mov
sbbb
cmp
add
jecxz
pop
mov
jne
or
ja
leave
adc
pop
or
add
popa
or
lcall
arpl
lcall
arpl
movsb
stos
push
cli
pop
xchg
push
int
mov
das
arpl
xchg
cmpsl
cmp
jns
mov
ja
cs
outsb
test
int3
cwtl
fstps
pop
aaa
dec
daa
or
pop
iret
fs
fdivrl
xchg
push
repnz
in
xchg
cmc
mov
push
xor
xlat
mov
out
cmp
adc
fwait
mov
fcomps
add
popf
mov
add
fstpt
sub
xor
push
stos
lret
popf
rorb
insl
test
ficompl
cmpsl
pushf
je
je
pusha
and
aaa
pop
lret
jns
rep
ljmp
and
jno
hlt
test
mov
ret
cwtl
rcrl
push
add
add
scas
and
fisubl
dec
lahf
mov
push
loop
and
out
out
inc
cmp
jno
cmp
mov
cltd
imul
mov
inc
mov
xchg
mov
push
test
cwtl
push
jb
scas
div
out
test
inc
add
dec
add
jae
mov
mov
pop
add
adc
test
jge
jbe
stc
stos
xor
jne
aas
int3
mov
xchg
and
iret
filds
sahf
movsl
cmc
ror
sbb
lds
jg
add
lret
adc
mov
incb
inc
add
in
std
cmpsb
or
shrl
jnp
adc
push
dec
push
movswl
test
and
cmp
cmp
repnz
add
jbe
std
jmp
dec
scas
movsl
xchg
mov
push
inc
jb
inc
adc
ss
in
lods
in
fmuls
add
out
std
mov
aam
push
das
test
push
rclb
ds
iret
mov
repnz
test
ret
push
bnd
jne
loope
jecxz
outsb
mov
sbb
fldt
inc
sub
divb
ss
cmp
mov
nop
sbb
stos
fcompl
mov
push
scas
jle
movsb
or
divb
aas
mov
roll
pop
mov
iret
loope
dec
popa
fdivr
inc
xchg
sbb
sub
jbe
test
inc
jl
div
mov
jmp
punpckldq
or
or
es
outsb
leave
ljmp
inc
ds
mov
in
adc
and
rep
pop
jo
jnp
imul
jnp
cltd
incb
sub
jg
xchg
cmp
shrl
sbb
xchg
jae
leave
pop
repz
ret
cmp
mov
shrb
pop
nop
daa
mov
repnz
in
jl
dec
sbb
mov
je
mov
lock
imull
mov
xor
jbe
mov
stc
adc
mov
or
pop
push
jle
mov
jns
cmpsl
push
cmp
cmp
cwtl
jp
or
pop
ds
pop
jbe
test
leave
loopne
int3
js
xor
das
ja
xor
lret
imul
adc
into
rolb
mov
arpl
inc
cmp
pushf
shlb
inc
sahf
outsl
aaa
pop
int
adc
adc
lods
mov
cmpsl
out
out
jno
ja
jbe
mov
xor
jecxz
loop
jl
jge
adc
cmpsb
and
xor
in
popa
xchg
adc
inc
pop
seta
or
xchg
pushf
loope
push
lret
outsb
lods
psubusb
ret
fbstp
sbb
jg
adc
add
dec
imulb
mov
cltd
cmp
cmpl
or
mov
mov
cmp
jg
addl
loop
mov
jae
jbe
mov
popa
mov
into
or
mov
int3
push
cmp
daa
int
std
jecxz
enter
mov
ret
out
jmp
pop
adc
dec
enter
jns
push
sbb
test
lock
or
incb
je
mov
in
negl
popa
lret
lcall
xchg
dec
bound
mov
pop
mov
push
pop
xchg
inc
push
test
sbb
mov
outsl
cli
mov
adc
mov
add
dec
xor
xchg
mov
test
xchg
inc
in
add
mov
sub
xor
cmp
cmp
xchg
and
jp
mov
cmp
repz
movl
in
dec
dec
fcmovnb
pop
push
daa
or
or
int
mov
xchg
or
pushl
xchg
popf
jbe
dec
xchg
shrb
mov
add
xchg
push
sbb
lret
push
jno
pop
outsb
sbb
mov
xor
and
jmp
mov
add
std
int3
xchg
mull
das
pop
mov
add
mov
mov
out
jmp
outsb
dec
pop
mov
cmpsb
pop
pop
cmovnp
jne
arpl
xchg
xchg
mov
movsl
pop
scas
fs
xor
and
outsl
mov
loop
add
dec
jne
pop
jae
dec
insb
mov
mov
cltd
sbb
adc
sbb
fstl
mov
roll
mov
fld
cmpsl
push
jmp
jecxz
ja
rclb
ljmp
addr16
push
adc
orb
call
dec
jmp
fsubrp
xchg
add
shrl
cld
test
push
mov
or
shlb
sub
xchg
cmp
sahf
cs
sbb
out
test
adc
mov
jge
mov
sti
stc
dec
push
stos
lea
std
sbb
mov
popa
stc
outsb
add
inc
repz
sar
push
mov
fadd
out
and
imul
in
jle
jmp
dec
mov
test
push
fucomp
adcl
push
sub
divl
xchg
ss
and
sbb
addb
stos
or
out
scas
hlt
rcrb
dec
lds
mov
cmp
adc
xchg
sub
push
ds
mov
or
xchg
sbb
sahf
inc
ljmp
mov
ret
scas
cmpsb
in
aas
inc
add
out
imul
dec
sbb
push
ss
adc
lcall
pop
rcr
lret
stos
jge
addb
inc
idivb
je
jg
mov
sub
inc
xor
add
push
xor
mov
lea
lret
push
dec
pop
fstp
lea
inc
mov
in
ds
ret
shl
mov
inc
out
xor
aad
fisubs
inc
mov
xor
xor
bound
push
out
mov
cmpsl
push
lret
cmc
inc
and
jmp
in
dec
cli
push
jl
ret
mov
in
inc
out
aas
cmpxchg
dec
sub
movsl
sti
dec
stc
dec
les
fxch
mov
xchg
mov
std
mov
fsubs
inc
or
sub
push
lcall
sbb
push
or
addb
dec
fidivrs
xchg
pop
sbb
cmpsb
cmc
aam
enter
push
sub
push
jmp
mov
jle
cmp
ret
xchg
lods
imull
jnp
mov
jo
lret
adc
dec
sahf
rcrb
xlat
xchg
aaa
sub
adcl
fwait
add
xchg
insb
cmp
aad
cmp
les
out
mov
adc
xchg
sbb
andl
adc
or
lea
pop
in
scas
jae
mov
nop
js
popa
xchg
xchg
daa
pusha
loope
cli
cmpl
pop
or
fstpt
aam
mov
test
and
mov
push
test
stc
aam
or
pop
pop
inc
pop
push
push
sub
xor
sub
cmp
pop
dec
test
mov
loop
adc
movsb
sub
push
inc
add
or
inc
sub
xor
pop
sbb
popl
push
int3
cmp
cmpsl
outsb
xchg
sub
imul
push
xor
pop
ret
mov
cmp
jo
xchg
mov
dec
push
jp
or
pop
fisubrs
rcll
sbb
jecxz
movsl
icebp
pop
ret
mov
jmp
test
mov
insl
inc
or
and
mov
popa
mov
pop
js
leave
mov
imul
push
dec
sti
test
mov
fmul
fildll
fcomp
or
insl
mov
ret
rorl
fstpt
in
inc
and
sub
cmc
mov
inc
daa
cmc
add
sahf
sbb
push
cmp
mov
mov
cmc
jno
add
in
sub
notl
pop
xchg
rcrl
jge
ret
insl
ds
sbb
test
or
dec
fmul
test
mov
cld
test
leave
ja
push
aad
push
mov
xorl
test
mov
js
inc
xchg
jl
mov
cmpsb
int3
jnp
mov
mov
insb
fs
into
sub
adc
test
test
xchg
mov
pop
sub
movsb
das
xchg
in
xor
cmp
add
outsb
bound
leave
or
test
addb
incb
and
in
shll
push
ljmp
mov
dec
fistl
shll
pop
in
dec
push
std
repnz
pop
push
adc
mov
scas
pop
js
pusha
adcl
pop
mov
mull
xchg
inc
popa
aam
xchg
aaa
xchg
pop
xor
xlat
sbb
rol
adc
or
inc
push
mov
decl
cld
lret
sbb
jl
push
xchg
out
out
jbe
jle
inc
imul
jb
scas
bound
in
mov
cmp
push
js
sub
pop
sbb
cwtl
das
pop
pop
push
and
adc
jl
ljmp
repnz
push
aaa
cmp
mov
adc
mov
add
push
mov
inc
fmul
test
xor
cmpb
mov
incb
shll
jns
arpl
adc
out
inc
adc
sahf
lcall
sahf
repz
mov
aaa
or
push
subb
cmp
push
fldcw
sarl
inc
sub
enter
xor
or
lret
inc
push
test
shl
dec
sub
fisttpl
xor
data16
subb
pop
stos
inc
bound
int
es
mov
lret
test
stos
xchg
js
mov
mov
out
clc
xlat
ljmp
loope
sarl
sbb
imull
inc
push
filds
jg
adc
es
push
addr16
sbb
xor
fistpl
out
xchg
movsl
inc
adc
outsb
cmp
aad
jae
clc
popf
sahf
mov
shl
cwtl
inc
cltd
pop
xor
aad
popa
lret
into
xchg
ror
lods
xchg
mov
dec
mov
aas
xlat
xchg
sbb
push
push
fdivrl
jns
xor
lcall
jle
and
adc
test
xchg
adc
adc
insl
fistpll
stc
mov
push
shll
xchg
xor
adc
mov
or
dec
cwtl
mov
dec
sbb
jns
xor
push
push
dec
xor
dec
out
xor
mov
imul
mov
jle
mov
daa
inc
mov
xor
shlb
and
das
fcoms
int3
filds
das
cmp
js
pop
xchg
xor
pop
pop
divl
push
jbe
mov
xchg
cmpsl
fs
sbb
add
inc
inc
adc
movsl
sub
and
sbb
leave
pop
inc
dec
stos
sbb
test
sbb
adc
cmp
lahf
add
outsl
leave
sub
icebp
hlt
pop
push
stos
daa
pop
push
data16
out
shlb
pop
mov
xor
push
aas
dec
mov
lcall
cmpsl
jle
insl
push
scas
mov
or
jns
jg
rcl
or
in
out
dec
and
add
es
and
dec
push
mov
sarb
adc
repz
cmp
or
popa
sahf
popa
jns
push
xchg
outsl
lret
gs
push
mov
mov
sub
das
mov
fsubrp
adc
and
sbb
adc
movsb
out
call
jp
mov
scas
imul
cmp
lret
repz
inc
cwtl
stos
mov
lahf
test
bound
orl
iret
insb
inc
lret
and
dec
inc
sub
aas
clc
aaa
adc
sbb
fwait
adc
sub
sub
out
xchg
in
push
mov
std
xchg
pop
cmp
add
and
in
call
mov
mov
adc
daa
mov
jbe
jae
inc
out
dec
in
mov
inc
cmovle
pop
push
aad
xchg
pop
inc
aaa
push
lcall
mov
xor
sarl
xor
lahf
fisubrs
mov
add
inc
xor
push
outsl
roll
mov
ljmp
adc
mov
xchg
push
pop
dec
mov
mov
lods
mov
aaa
sbbb
add
in
add
push
leave
aad
mov
pop
inc
scas
pushf
sub
mov
adc
mov
jle
jo
xchg
stos
test
aad
push
sbb
xlat
test
add
adc
or
cli
test
mov
test
jmp
xchg
ffree
cmp
add
xchg
jbe
xor
fs
cmp
mov
push
js
push
push
jge
ret
or
ficompl
cmp
in
faddp
in
sub
out
adc
mov
int
clc
cli
pop
sbb
xchg
sar
inc
adc
ds
mov
jb
jb
aas
outsl
or
test
iret
mov
repz
push
pushf
dec
adc
sub
inc
xor
and
jge
xchg
dec
dec
aaa
ja
scas
addr16
imul
sbb
ret
cmpsb
sarb
xchg
movsb
test
jo
lods
xor
popf
xchg
push
fildl
mov
jno
sbb
add
std
mov
push
xchg
sub
stos
jbe
data16
test
dec
sub
imul
rol
pop
rorl
gs
outsb
jmp
stos
dec
stc
pop
cmpsb
mov
paddsw
out
aaa
or
dec
lret
push
pop
or
adc
ss
dec
inc
cmp
dec
ficoms
jno
xchg
bound
movsl
imull
ljmp
and
inc
jns
sarl
out
movsl
mov
adc
push
mov
mov
push
add
mov
loop
mull
std
out
es
movb
sub
mov
push
pop
popa
jecxz
bound
inc
testl
push
inc
push
ret
pop
icebp
arpl
arpl
cli
fcoms
in
loope
ret
pop
pushl
fsubrl
out
jno
cmp
xchg
mov
in
jb
sahf
jo
cmp
repz
mov
lods
or
jge
aas
rorl
mov
daa
cmpb
repz
addr16
out
mov
xchg
scas
inc
lret
adc
mov
loopne
mov
xchg
fisubs
dec
sbb
jecxz
data16
mov
shr
mov
dec
adc
movsb
pop
dec
pop
clc
sbb
rolb
xchg
inc
insl
push
jnp
xor
mov
mov
cltd
sub
and
lock
pop
pop
pop
cmp
xchg
stos
pop
mov
and
mov
add
push
and
shll
lods
addr16
dec
push
add
jle
dec
jae
jo,pn
jl
out
in
insl
pop
jb
cli
pop
jnp
and
and
rcll
cmp
and
aam
out
in
jnp
jo
sbb
jo
mov
aaa
mov
xchg
mov
dec
js
mov
cs
popf
pop
add
lahf
push
jg
mov
mov
sub
adc
and
sbb
push
lods
sbb
jge
movsl
xlat
out
aas
incl
inc
and
in
sbb
mov
pop
ja
fdiv
pushf
sub
mov
jmp
cmp
jno
inc
stos
mov
add
mov
xchg
loop
repnz
mov
nop
mov
sbb
rcll
mov
or
pop
lcall
jle
mov
pop
call
rolb
lock
repnz
lds
push
mov
push
xchg
push
push
sahf
pop
aas
das
xchg
shlb
inc
xor
dec
mov
les
aas
and
icebp
xor
or
mov
movl
jnp
jnp
mov
popa
mov
int
dec
mov
sub
js
pop
cmp
sub
subl
or
mov
inc
stos
sub
sbb
scas
out
mov
add
fidivl
insb
push
leave
xchg
pushf
in
loop
or
mov
fsubrs
int3
enter
stc
addb
movsl
fisubrs
ljmp
or
mov
sub
cmpsl
sar
fsub
icebp
adc
cmovbe
sbb
cmp
or
adc
xchg
mov
scas
daa
dec
repnz
sbb
xchg
fwait
sbb
push
das
imulb
push
push
lds
and
int3
lcall
cmp
xor
sbb
cmc
mov
arpl
test
hlt
les
cmp
mov
scas
jl
adc
lods
in
xchg
mov
add
inc
cmc
iret
cwtl
mov
or
lret
xchg
cmp
ljmp
stos
or
andb
dec
xchg
outsb
rolb
vpaddusw
dec
in
pop
ljmp
ficompl
adc
cmp
in
into
outsl
xchg
into
inc
xchg
cmp
sbb
pop
xchg
cwtl
jp
push
inc
adc
jae
jl
dec
mov
insl
cmp
mov
stos
inc
out
xchg
outsl
sub
xchg
cmp
pop
xchg
popa
push
outsb
adc
push
push
jns
lahf
fndisi(8087
aaa
xchg
inc
mov
dec
cld
out
xor
sbb
das
jge
add
push
push
mov
push
jne
push
cmp
xchg
dec
add
scas
xchg
cmp
repz
outsb
cmc
lods
push
ret
push
inc
mov
push
jge
fnstcw
popa
xor
movsb
insl
mov
sbb
and
sbb
roll
out
popfw
jl
js
dec
out
fidivrs
pop
xchg
outsb
les
mov
push
xor
mov
or
push
jb
hlt
imul
icebp
sbb
aas
lods
inc
ret
je
and
iret
cmp
sub
xchg
sbb
fnstenv
inc
daa
flds
jbe
orb
sbb
fs
xchg
and
loop
cwtl
dec
and
dec
jno
jmp
sub
outsb
add
stos
call
lahf
outsb
hlt
mov
cmp
mov
test
les
mov
cmp
mov
ja
das
mov
cmpxchg8b
lret
pop
popf
mov
test
ljmp
idivl
add
push
or
push
movsl
add
pop
sbb
push
jmp
jp
mov
addr16
loopne
stos
sub
arpl
dec
jns
cmpsb
ret
cmp
scas
or
inc
std
xchg
xchg
dec
clc
out
push
or
mov
cmp
or
push
rorl
xor
mov
mov
repz
lock
jge
or
sbb
out
adc
mov
push
addr16
fildll
inc
jnp
hlt
and
xor
and
inc
sbb
sbb
mov
or
xchg
xchg
stc
xlat
add
hlt
iret
into
daa
jnp
clc
mov
xchg
add
dec
sbb
sahf
push
sub
sti
inc
pop
push
and
sub
fisubrs
test
mov
fbstp
imul
ljmp
jmp
jle
pop
out
pop
lods
lahf
fucom
insl
mov
push
mov
cltd
inc
or
push
fwait
sub
test
mov
popf
movsl
ja
add
dec
cli
pop
nop
adc
test
fwait
test
jne
mov
test
or
subl
shrb
xchg
mov
push
dec
cmpsb
stc
scas
dec
and
mov
and
or
pop
in
mov
xchg
es
mov
sarb
cmp
aas
lret
sbb
aam
sbb
mov
call
mov
push
cmp
push
jg
xor
pop
icebp
or
lret
call
cmp
jl
shll
ficoms
idiv
je
ret
mov
outsb
lret
xchg
ja
mov
xabort
mov
cmpb
shlb
es
out
xor
lods
aad
mov
cmp
xor
mov
mov
mov
out
aad
jne
or
pop
andb
cli
sbb
shr
xor
mov
ret
ljmp
xchg
pop
jb
push
push
subb
hlt
push
mov
repz
push
leave
mov
mov
adc
or
pop
daa
data16
pop
rolb
fisttps
xchg
testl
add
sbb
mov
cmpsb
xorb
gs
push
push
cmp
cmp
pushw
xchg
bound
or
sbb
inc
ja
out
lods
xchg
sub
ret
push
repz
jmp
cmpsb
shrb
in
mov
incl
push
int
in
push
mov
mov
push
pushf
js
icebp
xchg
xlat
inc
pop
xchg
push
fnstcw
mov
pushf
dec
mov
sbb
sbb
mov
xchg
jne
pop
mov
sahf
fwait
xor
inc
or
and
mov
push
hlt
pop
lods
mov
adc
ljmp
dec
andb
imul
daa
insb
push
push
outsl
xor
inc
inc
lods
cltd
jg
lods
inc
cmp
sub
imul
adc
add
xchg
dec
pop
fisubl
adcl
lret
addl
mov
dec
inc
flds
push
stc
stos
jl
aam
das
push
dec
sub
push
mov
inc
je
mov
rcl
fnstenv
inc
adc
shll
xor
scas
ror
in
mov
mov
popf
outsl
mov
loope
jno
enter
shlb
or
ret
andb
ss
mov
dec
adc
stc
loop
lds
in
push
pop
pop
pop
sub
adc
inc
pop
sub
mov
push
dec
inc
adc
add
jb
xor
xchg
sub
xlat
pusha
cmpsb
ja
lea
je
sbb
or
sbb
or
call
test
mov
or
jns
mov
lods
jg
int
pop
out
and
add
mov
xchg
mov
mov
dec
sbb
mov
push
mov
sbb
jmp
add
test
nop
push
mov
hlt
arpl
pop
aad
mov
adcl
fdivl
or
sahf
and
or
icebp
cwtl
leave
fcompl
jb
clc
lods
add
shrb
pop
ljmp
icebp
shlb
cmpsl
cmc
cli
jl
mov
add
dec
aam
and
mov
das
mov
stos
lock
push
jne
sbb
jns
push
insl
sti
mov
mov
mov
and
mov
sbb
jne
or
cmpsb
xchg
jb
push
mov
mov
xchg
xchg
movsl
jns
lahf
movsb
pushf
push
popa
adc
fldenv
loopne
mov
jo
jge
mov
push
sub
pinsrw
push
xchg
hlt
xor
and
xor
jo
push
add
insb
into
xchg
lea
int3
fldcw
out
gs
imul
int3
rcll
cmpsl
jno
inc
pop
fs
stc
add
popf
loop
outsb
fcoml
sub
sti
push
add
jno
fisttpll
popf
lods
loop
add
mov
rorb
outsb
push
inc
es
dec
mov
jmp
pop
push
addl
aam
sahf
push
lret
cltd
fstps
cwtl
arpl
mov
loopne
pop
add
mov
in
js
mov
sysret
ljmp
cmpsl
ja
aaa
icebp
inc
imul
mov
inc
or
jbe
cwtl
xor
cmp
dec
repnz
add
pop
xchg
jo
mov
mov
xor
add
push
push
xchg
pop
inc
rorl
sbb
dec
or
leave
jg
dec
pop
aas
fildll
mov
loopne,pn
adc
add
gs
push
adc
je
mov
pop
dec
sub
sub
int3
or
loop
cmp
es
test
in
jp
mov
lahf
ficompl
outsl
fists
popa
xorb
push
pop
cmc
adc
int
jmp
xorb
cmc
andl
std
lods
sbb
cmpsb
cmp
mov
fsubs
testl
sub
ljmp
stos
cmp
push
aad
push
fdivrs
dec
testl
jmp
es
sbb
adc
pop
or
jmp
lock
pop
test
pop
and
fs
push
rorl
repnz
cmpsb
mov
jp
fstpl
aaa
mov
je
jp
jo
dec
jl
loop
mov
jp
push
pop
sub
xchg
pop
cli
mov
lea
cmp
inc
sbb
mov
and
mov
sbb
adc
mov
add
mov
inc
rcl
and
and
int
push
pop
xlat
fcompl
and
in
daa
and
xchg
sahf
add
outsb
push
inc
shrb
pop
repnz
xor
pop
dec
pmuludq
pop
push
cltd
repnz
jmp
pop
loopne
jno
add
mov
rolb
cmpsb
lds
pop
mov
adc
jge
xor
pop
jmp
pushf
push
pop
cmp
and
xor
jnp
shll
jo
sbb
push
fstl
adc
inc
push
in
loope,pt
popa
push
and
cmp
add
aas
loopne
jns
cmc
cmc
js
fnstsw
pop
imul
lds
mov
out
popl
rcl
mov
jns
push
pop
mov
insl
test
and
pop
inc
dec
sub
int3
dec
leave
adc
rcrl
cmp
and
in
dec
std
xor
es
add
dec
and
loopne
js
into
loope
pop
loope
imul
xchg
push
and
sti
addb
outsb
mov
jg
adcl
clc
lods
aam
les
xchg
scas
push
push
aas
mov
repnz
sarb
xorb
mov
leave
in
gs
push
jp
jne
movsl
dec
iret
shll
mov
sbb
jmp
sbb
rcll
add
je
jecxz
in
orl
loope
iret
subb
sti
jne
sub
andl
mov
lcall
sbb
cli
imul
mov
jo
aam
fnstcw
jo
dec
or
outsl
movsb
stc
into
subb
add
aad
mov
cli
mov
dec
mov
sbb
pop
push
stos
ret
mov
ret
lahf
mov
adc
xchg
cmp
jnp
mov
nop
jnp
xor
test
or
out
add
dec
call
sub
in
sbb
xor
movsb
aam
fdivs
cmpsb
loopne
cltd
xchg
lods
je
mov
aaa
cli
jbe
outsl
out
push
lock
dec
push
repz
cmp
int3
popa
inc
xchg
add
pop
mov
loopne
rdmsr
lret
int
add
sub
dec
add
shll
jae
or
push
cltd
mov
popa
popa
jbe
inc
int3
out
je
xor
mov
or
dec
sbb
dec
fisubrl
loop
jnp
lahf
lahf
clc
cmp
push
in
test
stc
stos
lcall
cld
and
xor
jo
adc
sarl
sub
cltd
hlt
inc
push
xchg
sbb
dec
sub
popa
add
pop
test
es
into
ja
pop
test
stos
mov
and
jns
pusha
mov
add
inc
sub
or
out
pop
sub
push
gs
jl
imul
and
mov
mov
push
cld
pushf
dec
lock
aad
cmpsl
ds
frstor
adc
clc
add
jmp
pusha
imul
stos
mov
push
aad
roll
leave
add
insb
xchg
lret
pop
cwtl
inc
xchg
ficomps
lahf
mov
mov
repz
xchg
pusha
sub
lcall
push
popa
lret
in
in
sub
loopne
add
mov
xor
ljmp
sbb
test
xor
mulb
jbe
add
pushf
loope
pop
push
lea
psllq
fidivl
cwtl
xchg
xchg
outsb
movsb
fdivrs
cmp
loopne
iret
stos
mov
int
mov
ret
into
sti
mov
mov
xlat
cmp
fists
addr16
sbbl
iret
test
lahf
jnp
push
fnstenv
jns
cmc
dec
mov
shll
sub
jl
xor
or
sbb
repz
loop
and
xchg
repnz
or
insl
pop
sahf
mov
jbe
cld
int
push
push
int
jg
pop
lahf
push
mov
sbb
ja
xchg
sub
add
dec
repz
cmpb
sbb
in
lret
pop
negl
sub
jbe
fildl
mov
or
ss
test
rclb
enter
mov
mov
mov
stos
lods
mov
and
pop
xchg
jge
inc
pop
or
jmp
jne
mov
xchg
mov
stos
clc
jo
fidivs
xchg
int3
jmp
outsb
fs
loop
popf
sbb
mov
mov
mov
enter
fwait
shll
lods
sub
mov
dec
adc
add
add
icebp
pop
pop
cltd
mov
mov
dec
cmc
lahf
and
xchg
xor
loop
outsb
or
imulb
jbe
js
stos
in
and
jae
pop
cmp
xor
test
pop
add
jbe
add
jl
aaa
rorb
cmove
scas
push
pop
inc
push
icebp
cmc
pushf
add
or
loopne
movsb
outsl
sub
shll
cmc
cmc
mov
xchg
loopne
jnp
mov
sbb
cmp
push
jmp
addr16
sti
loopne
stos
je
add
push
jae
addr16
inc
sbb
xor
sar
popf
out
push
in
xchg
mov
mov
push
inc
nop
cmp
dec
sub
vcvtsi2ss
sahf
rcr
in
add
jno
insl
aad
imul
fidivs
ss
cmpsl
lcall
jnp
or
fwait
add
into
sub
leave
xchg
imul
or
pop
cwtl
testb
in
fisttpll
stos
stc
mov
out
push
and
and
mov
jg
outsb
mov
pop
push
mov
fwait
push
int
push
mov
call
mov
out
mov
movl
mov
jb
lcall
test
sbb
cmp
push
dec
je
inc
orb
lods
push
lahf
loope
aad
mov
push
mov
xchg
sbb
lock
mov
add
aaa
scas
loopne
ljmp
mov
lock
sbb
jle
arpl
pusha
dec
cld
stos
jp
popf
cmpl
xor
mov
fsubs
sub
pop
shll
je
mov
mov
sahf
test
ret
inc
mov
nop
pop
lods
outsb
sbb
push
xchg
cmp
push
jp
test
aaa
stos
imul
mov
test
mov
gs
prefetchw
pop
push
or
repnz
out
aas
cmc
mov
cmc
cmp
xor
test
push
cmpsl
imul
jp
cmpsb
test
sbb
jp
inc
lods
out
mov
out
or
lods
pop
sti
shlb
xor
fwait
movsl
out
sbb
scas
sbb
sbb
push
in
push
lcall
mov
outsl
jge
jns
sub
sub
cltd
jnp
xlat
fstpt
test
hlt
jne
das
and
mov
and
push
lret
stos
dec
dec
in
jge
xchg
lea
rorl
icebp
mov
mov
push
xlat
cmp
xchg
loope
daa
mov
inc
sbb
mov
and
push
ljmp
push
aam
add
jg
jecxz
mov
sbb
inc
add
inc
sti
mov
push
push
in
fldt
sbb
pop
aaa
mov
xchg
cmp
std
sbb
sbb
fwait
and
int
sahf
push
xchg
pop
lret
jb
jl
jnp
pop
mov
lds
addl
into
jae
pushf
pop
or
dec
das
xor
mov
scas
mov
cltd
adc
nop
jmp
push
mov
mov
sbb
popa
rorl
cmp
sbb
pusha
fcmovu
xlat
loopne
jecxz
fsubl
jb
add
in
stos
mov
or
divb
call
cmp
jmp
popf
or
xchg
filds
lods
add
jnp
dec
pop
add
push
call
stos
adc
clc
jns
mov
pop
js
sub
xchg
imul
xor
dec
ss
xchg
or
jmp
in
mov
aas
jp
inc
repz
shrb
xchg
adc
jl
cld
jnp
cmp
and
lea
pusha
lret
adc
stos
hlt
je
dec
inc
xchg
sub
insb
cs
ds
addr16
mov
push
int
xchg
mov
and
sti
stc
dec
jle
test
sbb
or
nop
cltd
xor
jne
fldt
test
sbb
xor
push
dec
push
inc
adc
or
mov
add
jp
xor
push
popf
jns
sti
mov
sbb
pop
inc
pop
or
ret
inc
push
aaa
inc
sub
adc
and
loop
out
repnz
xor
fdiv
jecxz
push
shlb
cmpsb
push
or
xor
pop
shrb
sub
inc
mov
jle
les
pop
xchg
fidivrl
sbb
shlb
scas
hlt
dec
xchg
mov
filds
or
in
adc
dec
lock
mov
mov
loope
xchg
pop
lock
xchg
insl
inc
jns
gs
push
pop
dec
les
js
rorb
pop
cwtl
dec
xchg
push
cmc
scas
inc
aam
int
push
mov
bound
mov
pop
mov
loopne
cmpsb
or
jle
jmp
jnp
add
int
mov
out
mov
int3
aad
pop
sub
cmp
jecxz
nop
popf
sahf
ljmp
push
dec
cld
mov
outsb
pop
daa
ror
pop
pop
mov
and
data16
mov
jno
lods
pusha
add
mov
gs
and
push
sahf
sub
dec
sbb
dec
sub
pushf
sub
nop
push
aad
xchg
sahf
mov
test
rcl
es
mov
push
loop
mov
sbbb
push
insl
xlat
lcall
add
mov
popa
les
push
mov
adc
xchg
orl
mov
out
rcr
mov
push
mov
sbb
fisttpll
sub
cmpl
fsub
stos
xchg
xor
and
pop
xor
fdivrl
mov
sub
inc
pop
pop
in
sub
popa
loopne
jns
arpl
insl
lds
call
testb
push
popa
out
sbb
stos
out
data16
fisubrs
shlb
sbb
cmp
insb
push
inc
xor
mov
mov
cmp
fs
push
sbb
xor
mov
sbb
xchg
je
les
dec
xor
in
rcrb
dec
jno
cmp
rclb
push
sahf
xchg
loop
sub
mov
ljmp
push
aam
insb
insb
inc
pop
rol
seta
out
jne
mov
aam
mov
mov
cmp
fcmovnbe
xchg
into
cmpsl
xchg
xchg
enter
andl
add
imul
iret
dec
es
inc
movsl
in
sub
rolb
and
fstps
mov
shl
cmpsl
inc
dec
adc
inc
or
clc
lea
mov
pop
dec
cmc
movsl
push
cmpl
in
or
imul
lcall
mov
mov
mov
fs
out
imul
sub
dec
pop
mov
xor
lcall
rol
dec
cli
xchg
jno
sub
and
pop
push
rcll
jl
iret
movsl
xor
jno
mov
call
enter
push
pop
mov
xor
mov
sub
outsl
push
jl
ds
lea
and
mov
call
hlt
fstl
into
mov
pushl
push
dec
mov
lea
daa
es
nop
inc
inc
inc
dec
fs
int3
jg
mov
dec
inc
aam
insb
int3
stos
jnp
and
xchg
int
mov
ja
or
inc
inc
in
lock
pop
repz
mov
imul
mov
push
dec
push
lds
out
and
cmp
and
sbb
arpl
pop
and
adc
mov
mov
sets
mov
inc
pop
fmull
imul
jg,pt
push
sub
or
mov
jo
fldl
icebp
into
lret
hlt
mov
jecxz
into
popa
sub
sub
jmp
mov
in
insb
adc
cmp
fists
cwtl
sub
int
in
mov
hlt
addl
inc
ret
xor
scas
push
lret
inc
leave
jnp
push
push
loopne
mov
adc
jno
js
insb
hlt
mov
icebp
inc
adc
sub
or
mov
aaa
sahf
jae
pop
stos
fbstp
ds
dec
fisubrs
cmp
jge
dec
shl
sub
daa
into
push
scas
sub
dec
in
scas
add
push
fisubl
xchg
roll
insl
push
pop
adc
addb
sub
sbb
ss
jb
mov
fldt
xchg
iret
or
aam
repnz
ficomps
hlt
test
nop
inc
sahf
lods
push
call
inc
lret
push
sbb
push
and
stos
xor
mov
clc
or
movsb
out
jnp
push
loop
int
pop
dec
adc
test
test
jnp
lret
sub
inc
test
push
fimull
cmp
js
es
dec
mov
mov
repnz
out
inc
push
imul
popa
out
mov
jl
xor
lret
adc
add
roll
jp
mov
cmp
ret
insl
cmp
stc
cmc
xchg
cmp
andb
dec
pop
adc
cmp
pushf
pop
scas
int3
sarb
pop
ja
data16
out
cwtl
mov
pop
xor
int3
jle
mov
fstpt
xor
subb
ds
insb
push
jbe
test
inc
popf
push
imul
add
lock
dec
mov
popf
mov
out
xlat
lock
jbe
std
push
sub
push
cmp
idivl
aam
cld
insl
lret
mov
cmp
jb
push
frstor
jmp
jmp
jae
pop
xchg
mov
in
addb
xor
roll
adc
incl
sarb
faddl
das
call
mov
pusha
push
out
repnz
mov
add
pop
lahf
xchg
das
push
push
inc
push
cli
ja
jle
mov
in
mov
inc
add
jnp
loope
leave
pop
and
in
pop
pop
lea
pop
sub
stc
dec
ja
lahf
xlat
sbb
call
mov
sti
or
inc
and
arpl
jmp
xchg
xor
jns
lcall
xchg
test
pop
movsl
sbb
cmp
jne
mov
mov
into
int3
fldlg2
push
dec
jecxz
stc
jg
xchg
sbb
pop
je
outsl
cld
into
xchg
mov
mov
mov
dec
dec
fnstcw
adc
xchg
jg
imul
mov
outsb
imul
mov
sti
int
sub
in
lock
rcrb
push
jle
cmp
jl
mov
inc
xchg
mov
fnsave
shll
icebp
lods
cmp
and
xor
js
mov
or
push
dec
mov
out
cld
jmp
jae
push
ret
mov
mov
push
xor
sub
fidivl
bound
js
xor
leave
dec
or
pop
push
icebp
xor
push
xchg
or
fcmovu
push
hlt
inc
mov
jl
das
inc
mov
mov
mov
mov
xor
fiaddl
xchg
aam
add
jo
ret
scas
in
jne
ret
xchg
movsl
idivl
test
popf
movsl
or
jae
repnz
call
rcrl
cmc
gs
cmpsl
lcall
aaa
fsts
jns
lods
adc
fdivp
inc
jge
popa
sbb
xor
mov
xchg
stc
jmp
xchg
popl
in
add
in
mov
sbb
xorl
cmp
aaa
mov
pop
push
test
cmp
int
in
jnp
xor
adc
sub
es
cmp
rcrb
mov
iret
ljmp
ret
pop
lods
xchg
int
shlb
push
push
loope
sbb
sbb
leave
mov
mov
sub
fucomi
mov
cli
imul
lahf
je
sbb
cmp
stc
lods
mov
push
mov
dec
aaa
mov
cmp
and
shr
push
cli
testl
call
fs
mov
mov
push
jmp
mov
popa
jmp
xchg
pushf
outsb
lock
jp
xchg
inc
pop
and
in
sub
lret
and
sti
stos
movsb
out
xor
shll
add
adc
push
sahf
xchg
adc
pop
iret
dec
loop
test
dec
movsb
xor
cmp
mov
testl
data16
sbb
jae
push
dec
push
pop
popf
mov
iret
and
gs
imul
inc
out
outsl
shlb
jne
ret
negl
adc
lods
test
les
bound
cmp
pusha
ret
add
aad
lret
sbb
leave
fldt
fisttpl
cmp
push
xor
testl
cmp
or
xchg
fisubs
or
iret
dec
les
stos
lea
loop
stc
mov
and
cmp
mov
cs
movsl
aad
xchg
sub
push
adcb
xor
shrb
mov
jge
dec
adc
sub
aam
loop
iret
jns
fucom
inc
adc
fcoms
mov
inc
lods
xchg
lret
test
imul
insl
shrb
sti
stos
adc
dec
cmc
inc
aas
loope
push
mov
jae
mov
js
loopne
in
cmpsb
push
mov
lock
fs
mov
aaa
out
and
mov
pushf
loopne
and
mov
shr
and
fcomps
pop
or
xor
add
mov
and
int3
pop
rcl
sub
cld
dec
xchg
cltd
dec
fnstcw
dec
test
sete
lods
jbe
cmp
std
sti
cmp
pop
rorb
out
jle
xchg
mov
adc
je
cmpsb
cmp
movsb
in
pop
inc
fldln2
add
aad
dec
repnz
mov
cld
out
mov
into
push
or
xchg
pop
daa
or
push
repnz
sbb
enter
fisubrs
sbb
out
fs
cmc
lods
insb
in
movsl
cmp
push
mov
jo
out
outsl
sub
test
adc
out
jecxz
jb
xor
lret
sbb
mov
add
jnp
cmp
aad
mov
add
adc
xor
es
lahf
push
jp
test
lahf
pusha
jl
and
pop
aad
pop
xchg
cmp
test
mov
push
negl
mov
pop
cmp
inc
fisttpll
stos
fdivrl
adc
inc
dec
xchg
and
push
mov
xchg
rcl
and
sbb
rolb
sbb
mov
test
inc
sahf
in
into
cmp
int3
add
rclb
xchg
hlt
sbb
cmpsl
xchg
notb
mov
ja
cltd
add
test
jne
mov
out
push
and
xor
cmp
adc
fidivs
orb
popf
push
fidivl
sbb
add
lea
int
pop
mov
jae
dec
add
mov
cmp
cmp
cmp
mov
dec
or
ljmp
mov
mov
pop
adc
test
push
mov
sbb
inc
push
rolb
sbb
add
fcomps
cmp
inc
rorw
cmp
pop
movsl
mov
test
shll
cmp
scas
xchg
inc
dec
mov
icebp
test
add
mov
jbe
cmp
adc
pop
lcall
mov
adc
or
imul
mov
jnp
xchg
fwait
call
call
lcall
pop
or
stc
pop
mov
mov
shll
mov
out
ds
add
dec
pop
fs
jne
jmp
jl
ljmp
scas
jle
mov
cmc
fcoml
cltd
in
movsl
imul
xchg
aad
aam
ret
fsubs
out
movsb
push
adc
and
aam
mov
xchg
lods
test
sahf
jnp
lret
cmp
xor
xchg
mov
mov
lods
sub
std
jnp
pop
pop
ds
cld
mov
sub
sub
sub
ret
in
loop
stos
clc
mov
add
rcrb
jmp
loop
lea
mov
es
pop
out
sti
xchg
cmpsb
dec
adc
movsb
clc
rclb
xchg
and
call
and
push
inc
cmpsb
or
fnsave
mov
jns
push
fs
rolb
fisubl
pusha
fsub
push
add
xchg
pop
push
scas
push
insl
jge
bsf
repz
xor
stc
mov
jg
test
out
push
mov
ret
push
scas
push
and
lods
dec
and
addb
adc
shlb
xlat
push
push
std
lcall
shll
inc
or
or
xchg
imul
xchg
inc
imul
mov
xchg
add
movsb
xor
stos
into
rcll
fdivl
add
cltd
js
xchg
std
xchg
sub
xor
nop
sub
test
sarb
push
sbb
inc
adc
xchg
imul
sti
mov
add
push
mov
mov
xor
insl
mov
fisttpll
jne
ret
mov
add
mov
icebp
repz
xchg
loope
movsl
pop
cmc
imul
in
jmp
lods
cwtl
xchg
cmpsb
adc
and
enter
xchg
mov
shrb
and
outsb
das
jl
and
jl
mov
dec
pop
test
stos
sbb
popf
daa
je
jno
mov
subb
cmp
mov
cmp
jmp
jp
imul
xor
xchg
es
sub
and
inc
sub
push
roll
xchg
mov
ljmp
les
inc
push
adc
push
inc
and
mov
daa
mov
je
fsqrt
mov
mov
add
xchg
out
jno
pop
cmp
fstl
stc
adcb
rorl
jmp
or
adc
lds
add
pop
fwait
roll
mov
test
pop
or
mov
push
out
lock
pop
rclb
cmp
cmp
mov
mov
out
cs
jae
sahf
ljmp
and
pop
push
and
add
dec
pop
xor
jo
sub
jge
push
mov
inc
leave
push
pop
xchg
in
dec
sbbb
popa
pop
sbb
testb
xor
scas
sub
jnp
sbb
stos
xchg
iret
sbb
fs
pop
push
cmp
inc
roll
adc
dec
cmp
push
fistpl
ret
nop
mov
pop
dec
repz
jp
movb
cmp
add
int
popf
sbb
into
cmp
ds
jle
mov
mov
inc
out
dec
addr16
push
pop
rolb
cmp
xchg
mov
xchg
push
pop
jbe
daa
xor
out
mov
mov
cmp
mov
add
pop
push
lock
mov
movsl
dec
push
cmp
call
insb
dec
jae
dec
adc
or
fidivrl
outsb
mov
jb
repz
xchg
push
lods
cmp
pop
xor
jle
divl
stos
xor
prefetch
adc
stos
into
jb
sub
sub
rcr
add
xor
aas
in
pop
sbb
clc
dec
add
data16
xlat
push
cmc
loop
inc
adc
out
jmp
cltd
or
pop
xor
push
mulb
sbb
sbb
out
xchg
aas
and
xchg
movsl
cli
cs
cmc
jns
jne
fwait
orl
or
mov
dec
repz
test
push
sahf
mov
or
popa
dec
int
test
xchg
pop
test
les
mov
fs
imul
loopne
or
insl
idivb
add
cltd
rol
sbb
mov
push
cmc
lods
cmpsl
xchg
popa
sbb
ret
scas
pop
jle
adc
inc
loopne
pop
pop
leave
jecxz
lds
cli
mov
sub
sahf
scas
adc
mov
mov
push
mov
scas
jmp
movsl
mov
cmp
and
sarb
notl
call
cmpsl
inc
mov
sub
sti
mov
or
xor
outsl
mov
out
cmp
or
xchg
mov
scas
push
and
xor
dec
jne
mov
mov
insl
cmp
mov
in
xor
inc
dec
fidivs
jb
and
loop
xchg
fs
mov
in
pop
push
xchg
aad
cmpsl
lods
notl
cmpsl
aad
pop
ret
pop
push
movsb
adc
xchg
jns
inc
icebp
lcall
imul
cmp
cmp
adc
or
xor
pusha
fisttpl
fimull
jae
mov
out
sub
push
add
sub
or
xchg
arpl
inc
out
mov
or
mov
aaa
shl
and
pop
daa
subb
sarl
cmp
je
or
fcoms
mov
mov
cmc
dec
jmp
pop
imul
cwtl
xor
dec
call
inc
pop
fcom
loope
lock
ja
dec
pop
xchg
jb
in
xor
mov
pop
mov
xchg
stos
loopne
mov
fdivs
clc
fs
push
stc
ss
cli
popf
in
push
add
sbb
add
enter
push
lcall
jle
or
ljmp
addr16
scas
out
xor
xor
div
imul
and
rcrl
mov
sub
fwait
les
js
fisubs
push
lods
lods
dec
popa
and
bound
jge
call
into
mov
dec
adc
mov
sbb
push
dec
test
cli
sti
mov
faddl
mov
sbbl
scas
inc
bound
mov
jbe
pop
leave
mov
xchg
cmpsb
stos
arpl
xor
js
in
das
daa
rcr
adc
dec
daa
aaa
jecxz
test
loop
std
into
sbb
fsubrl
test
test
jne
ss
dec
inc
or
jmp
xchg
fmulp
push
pop
or
arpl
rclb
mov
mov
jmp
cltd
dec
pop
out
movsb
imulb
lret
lcall
lahf
mov
sub
inc
mov
mov
clc
push
push
mov
ds
shlb
mov
loop
sub
repnz
mov
jl
imull
jae
ret
xchg
jbe
mov
in
test
mov
push
lret
popf
sbb
fwait
idivl
pop
lahf
loop
add
mov
out
pop
sarb
jmp
nop
add
andb
int
loop
movsb
push
push
cs
xchg
ficoml
xchg
jmp
mov
pop
aaa
aad
lahf
sbb
fwait
inc
scas
std
mov
dec
paddb
popa
mov
dec
jle
mov
and
enter
pop
int3
aam
fmuls
enter
ret
sbb
repnz
sbbl
es
mov
sbb
and
inc
insl
mov
mov
aam
pop
or
and
pop
add
gs
lcall
into
mov
loopne
and
xchg
xor
cmpsl
data16
jae
push
xlat
cs
xchg
ja
gs
cltd
adc
push
icebp
loopne
push
push
push
cli
push
jo
adc
mov
mov
xor
pushf
mov
nop
xchg
adc
inc
inc
jge
rolb
dec
push
adc
int3
jno
in
jl
mov
cltd
cmp
mov
adcb
test
xchg
mov
fcoml
mov
addr16
mov
jb
jbe
ss
push
lcall
fs
hlt
int
push
cmovo
aad
push
push
call
mov
sarb
xor
sbb
adc
test
rcrb
aaa
inc
lret
sti
pop
loop
or
outsb
out
lods
fwait
loop
or
lret
mov
mov
fcomps
pusha
popa
in
inc
mov
adc
testl
mov
test
and
xlat
xor
fidivs
cli
sub
mov
jge
data16
sub
stc
fs
mov
in
pop
imul
jle
nop
out
vpaddq
adc
fisttpll
sbb
xchg
loopne
arpl
daa
out
sbb
stos
sbb
and
out
icebp
mov
and
push
xchg
repnz
mov
mov
leave
mov
std
lods
lds
imul
out
mov
push
call
cmp
or
lahf
call
in
roll
ret
push
bound
add
loop
sahf
pop
sbb
adc
pushf
js
xchg
mov
adc
jb
xchg
sahf
sbb
jl,pt
and
mov
scas
lds
test
ja
mov
push
xlat
dec
fdivr
fdivs
bound
pusha
push
mov
setg
fsubr
or
dec
shll
adc
inc
insl
mov
out
in
sub
fnsave
outsb
popf
cmpsl
push
ret
adc
test
mov
ja
cmpsl
cld
pop
jmp
adc
jns
or
push
std
add
mov
xlat
pushf
jge
sub
mov
fbld
xchg
in
les
pop
mov
dec
add
imul
jae
sub
mov
jp
dec
and
loop
mov
dec
cmp
adc
xchg
aam
enter
sub
sbb
jp
into
outsl
sahf
xor
leave
pop
push
pop
repnz
aas
dec
stc
popa
mov
rcrb
nop
fdivrl
mov
jle
xchg
mov
andb
sub
jo
mov
shll
add
bound
inc
leave
adc
xorb
dec
ja
cmp
push
sbb
sub
cmp
in
jne
sub
pop
dec
rclb
in
fidivl
fnstcw
xor
shrl
xchg
pushf
bound
stc
in
push
jle
jge
aam
scas
xchg
cwtl
jge
lret
in
add
outsb
inc
sbb
jae
scas
pushf
sub
sub
fdivr
push
push
jno
icebp
push
jae
push
adc
sub
fiadds
xchg
add
outsb
or
lds
jnp
mov
lahf
test
jne
mov
fsubrl
push
fsub
xor
adc
call
jno
or
adc
cmpsl
push
pop
cmp
dec
testl
mov
jbe
adc
lods
shl
roll
pushf
das
mov
mov
add
xor
and
outsb
push
and
xchg
push
xchg
mov
sbb
enter
xchg
fstps
in
negl
js
push
testl
push
insb
pop
ret
jnp
out
imul
movl
mov
or
rcl
ja
mov
sbb
lret
mov
std
mov
jnp
daa
iret
fstps
call
cld
dec
test
or
adc
aas
and
les
inc
ljmp
cmpsb
lods
nop
dec
lahf
stos
xor
add
push
fnclex
fists
rcl
push
mov
test
or
in
xchg
aad
pop
push
loop
sbbb
and
sar
rclb
mul
mov
ljmp
pusha
mov
and
add
pop
xchg
xor
cmp
std
shr
xchg
subl
cmp
js
test
jne
jbe
stc
bound
push
fnstsw
pushf
add
xlat
push
add
es
in
lret
cwtl
jno
hlt
jmp
fistps
rolb
push
test
add
test
jmp
movsb
das
push
inc
push
dec
push
scas
mov
jo
add
jo
dec
cmp
add
rcll
fcomp
pop
repz
mov
gs
inc
negb
aad
mov
repnz
sbb
mov
fists
adc
xor
jo
aam
ficomps
dec
mov
pop
push
sub
stc
rcll
mov
pop
pop
adc
imul
call
and
mov
loope
in
adc
lods
push
push
mov
sbb
fdivs
les
test
cmp
jecxz
cmp
test
mov
shr
repz
mov
push
pop
xorl
scas
adc
push
scas
repnz
popf
push
mov
sub
shr
stos
mov
in
dec
push
mov
xchg
push
xchg
xchg
in
out
loop
sub
fcompl
and
clc
mov
lea
sub
xchg
ds
js
lret
ljmp
cmp
pop
fildll
jecxz
adc
icebp
mov
lret
or
nop
xlat
and
in
into
or
int3
mov
nop
jle
mov
mov
cmp
cltd
dec
test
in
mov
push
test
mov
lahf
ss
xlat
sub
cmpsb
sbb
movsl
jmp
xchg
daa
jle
or
daa
adc
adc
sbb
in
scas
repz
dec
lds
mov
pop
add
mulb
movsb
xchg
lock
pop
add
imul
xor
pop
scas
cmpsl
push
testb
andl
cmpsl
dec
aad
mov
inc
pop
movsb
mull
scas
mov
sub
and
add
mov
mov
xor
aad
lock
push
into
mov
adc
sarb
daa
xor
test
add
inc
fsubs
imul
or
outsl
add
scas
cmp
push
fyl2xp1
repnz
adc
cmpsl
je
cld
test
jl
lds
mov
stc
iret
popf
push
imul
push
les
xor
in
int
pusha
inc
xor
pop
loopne
jmpw
aad
shll
insb
sahf
in
jnp
call
ljmp
loopne
sbb
loopne
jns
aad
testl
pop
hlt
xchg
add
outsb
or
int
test
push
adc
xchg
adc
sub
mov
mov
push
cli
and
imul
push
mov
push
adc
add
bound
cmc
lods
push
mov
cmpsl
out
dec
or
xor
inc
adc
repnz
into
shll
fidivrs
adc
add
ret
push
mov
in
sarl
jge
insb
inc
mov
add
scas
in
fistpll
lret
repnz
fiaddl
clc
and
hlt
xchg
pcmpeqb
jno
mov
inc
cmpb
pop
out
ret
and
jl
pop
sarb
lods
xor
clc
xor
inc
insb
sub
ret
cmp
cmpsl
pop
jp
adc
pop
cmp
movl
bound
push
popa
cs
fmull
cmp
push
stos
and
clc
jno
int3
push
cltd
ret
loop
jp
dec
aaa
subl
and
mov
cwtl
push
sbb
out
xor
sbb
and
sub
add
cmp
dec
mov
lahf
addl
lahf
mov
stos
or
out
int
sahf
rep
daa
in
mov
jmp
push
adc
xchg
loop
repz
gs
faddl
lea
data16
cmc
inc
js
dec
sahf
ficoml
mov
sbb
push
aad
dec
test
mov
hlt
mov
mov
xchg
sub
lods
and
jo
inc
stos
ja
fst
movsl
pop
lea
dec
and
jge
inc
bound
or
ret
cmp
test
cmc
jmp
cmpsl
mov
or
mov
xchg
stos
dec
or
inc
xor
cld
test
daa
push
gs
popf
mov
push
xchg
sub
aas
and
mov
test
lock
add
jb
cld
repz
and
pop
outsb
shrb
add
pusha
lret
andl
mov
and
jo
jne
cmp
xchg
mov
roll
adc
pop
jne
arpl
mov
cli
cld
jo
add
mov
mov
push
into
pop
shll
jo
push
in
sbb
jmp
addr16
cmpsl
addl
fldl
mov
sbb
cmp
mov
lock
jnp
xor
mov
mov
je
inc
add
mov
jle
push
outsb
pop
sbb
cmp
mov
into
jne
jbe
rcr
and
pusha
aad
gs
cmp
jbe
cmc
or
mov
inc
stc
pop
mov
inc
xor
out
sbb
adcl
mov
add
jnp
ss
mov
jmp
cli
push
push
cwtl
xor
imul
mov
pop
dec
mov
insb
mov
iret
push
dec
popf
enter
repz
push
in
jecxz
or
bswap
mov
mov
cmpsl
inc
mov
andb
cmp
lret
jmp
cmc
imul
stos
cs
jge
clc
adc
fyl2x
xchg
push
adc
mov
rcrb
lds
out
cmp
inc
dec
xchg
ja
mov
inc
jno
jmp
push
cmp
cs
sahf
sub
nop
data16
xor
jmp
mov
andl
lahf
adcl
cmp
fnstsw
mov
xchg
cwtl
mov
pop
push
test
pushf
mov
call
sub
xchg
call
bound
or
notl
jns
out
pop
mov
fistpll
sub
sbb
call
push
sbb
and
push
mov
sahf
mov
pop
test
sub
aam
repnz
mov
ret
sbb
or
ret
lock
and
sbb
xor
sub
out
jge
inc
xor
jmp
aaa
iret
js
es
fcompl
pusha
jno
xchg
mov
sub
ja
push
mov
std
mov
xor
push
icebp
or
pushf
sub
cmp
or
andl
and
mov
jb
jmp
loope
std
sub
xor
insl
in
add
jg
in
cmp
mov
and
jns
dec
int
mov
mov
adc
mov
ret
lock
sbb
lcall
enter
lret
mov
dec
std
sub
sbbb
ficompl
cmp
popa
aam
or
jmp
aad
out
addr16
xlat
aas
xchg
xor
shll
fisttpl
add
sarl
leave
cli
sub
shrl
int
add
mov
out
outsl
push
lock
outsb
jnp
adc
inc
push
cmp
je
cwtl
mov
fbstp
or
ss
lods
dec
push
cmp
mov
and
push
lret
notl
mov
cltd
lea
inc
push
leave
inc
and
iret
jns
fdivs
sbb
mov
push
mov
pop
cmp
pop
inc
inc
lods
loopne
jns
ds
push
scas
cmp
mov
rorl
out
push
jp
shl
mov
inc
xchg
sahf
shll
inc
sub
lea
or
fnstenv
rcrb
popf
shrb
pcmpeqb
xor
dec
cs
inc
cwtl
sbb
sahf
dec
addr16
dec
adc
sub
mov
aam
pop
outsl
enter
sub
and
dec
pop
push
mov
mov
dec
xor
out
cmp
inc
add
testl
fildl
push
fistl
jae
mov
into
fs
sub
mov
andl
mov
lahf
into
pop
mov
daa
jmp
xlat
in
pop
dec
mov
push
pop
cli
inc
sbb
or
lock
jge
dec
aaa
bound
test
call
mov
mov
xchg
inc
xchg
sbb
sbb
fwait
push
mov
add
ss
adc
pop
addr16
stos
cs
pushf
xor
jp
mov
adc
ss
xlat
ja
scas
out
sub
incl
sbb
mov
or
inc
add
mov
mov
repz
fisttpl
inc
add
dec
mov
xchg
fwait
lret
test
xor
gs
or
repz
gs
push
insl
lret
in
nop
stos
xlat
xor
sbb
test
lock
mov
fcoml
mov
rol
adc
imul
out
inc
add
mov
ja
dec
push
repz
hlt
and
mov
mov
sbb
test
and
insb
cmp
lcall
mov
add
mov
jge
xchg
sub
xchg
aam
xchg
add
ss
sub
hlt
push
lret
out
mov
xchg
or
xor
scas
ljmp
mov
xchg
and
add
in
inc
mov
sbb
movb
xor
nop
iret
scas
std
fdivr
cmp
push
daa
lods
inc
into
aas
add
pop
out
outsb
or
movsl
idivb
enter
cmc
or
push
rcrl
or
out
cmc
sbb
rcl
adc
push
jge
and
pop
lods
jno
icebp
or
xchg
mov
push
out
gs
ljmp
out
pop
push
iret
lods
mov
push
pushf
sub
xchg
jns
fistl
push
xchg
cli
xor
cs
sahf
mov
in
fucomi
jmp
outsb
cmp
int3
lcall
inc
repz
sub
fs
add
cs
sti
les
imul
adcb
movsb
push
lret
mov
movsl
xchg
lcall
mov
sbb
daa
cmpsb
pop
inc
enter
rcl
mov
test
fsubl
cmpb
or
jge
cmc
out
cmp
or
or
adc
imul
push
addl
mov
xor
repnz
aas
popa
cmp
test
jl
push
ds
into
push
cmpl
sub
mov
repz
in
push
dec
scas
fdivrs
call
and
enter
or
lods
adc
cmpb
inc
inc
adc
imul
ds
pop
inc
das
or
inc
scas
add
cli
clc
push
sbb
imul
ss
inc
lahf
sbb
rcr
pop
fnsave
outsb
cmc
fnsave
in
rcr
xor
orl
loope
popa
inc
aad
mov
loopne
push
fidivs
xor
das
rcrl
and
test
sbb
sub
jmp
sbb
xchg
into
das
ds
fst
sub
mov
out
in
sahf
out
lcall
mov
push
pop
jmp
pop
lods
adc
add
movsb
mov
popa
and
sub
xor
jb
fadds
mov
ret
test
rclb
xorl
dec
out
mov
cmpsb
scas
orb
rcrb
out
cli
xchg
fmull
scas
aad
jg
data16
mov
and
fwait
notb
lea
or
scas
xchg
inc
movsl
fstpl
int3
std
sub
daa
leave
jge
mov
lret
stc
icebp
pop
je
inc
ljmp
push
into
inc
imul
and
lret
inc
jg,pn
push
js
clc
mov
jg
pop
ret
bound
jmp
fucomip
iret
jo
lock
and
pop
and
in
int
adc
inc
out
daa
lods
je
mov
je
pop
xchg
es
or
push
add
mov
fidivs
punpckldq
jo
inc
mov
fwait
dec
gs
mov
add
out
mov
dec
enter
pshufw
inc
xchg
dec
inc
pop
lods
cmpl
lock
mov
or
popf
sbb
loopne
pop
push
or
test
ss
scas
icebp
jge
jb
out
fstps
lahf
mov
test
add
cli
sti
add
sbb
or
scas
sahf
jnp
in
xchg
rorl
add
out
mov
mov
inc
adc
in
mov
mov
xchg
lds
lock
and
int3
imul
loopne
mov
push
cli
es
jb
or
pop
fisubrs
inc
push
pop
addl
fisubrl
dec
mov
xchg
out
push
sbb
sahf
fwait
mov
push
sbb
stc
loopne
xor
mov
outsb
jns
sbb
call
cli
xor
pop
lods
dec
sub
mov
or
push
xchg
jge
aas
sub
imul
mov
ret
cmp
sub
jmp
jp
out
imull
lods
enter
addr16
outsb
sub
fcmove
mov
cmp
cmp
sbb
xlat
push
xchg
addb
pop
jecxz
push
in
cld
mov
test
sbb
push
adc
cmp
enter
cli
das
fprem
pop
inc
cmp
ljmp
sbb
je
mov
xchg
nop
xchg
adc
push
movsl
icebp
mov
or
sub
jae
adc
into
shl
outsl
jmp
insl
cli
mov
push
adc
or
es
sub
mov
push
test
mov
jb
pop
mov
sti
gs
pop
jl
push
xorl
addr16
or
lea
int
jecxz
lea
ds
push
shrb
adc
aaa
pop
aaa
pop
cltd
pop
cmp
nop
cs
daa
mov
jns
mov
sahf
xchg
dec
inc
mov
or
stos
ret
mov
je
jge
aad
scas
imul
les
scas
jo
sub
stos
jne
frstor
xor
mov
sub
pop
sbbl
dec
pusha
or
test
and
orl
push
sub
push
sub
ljmp
rcrb
test
sahf
cmp
push
aas
ret
push
push
pop
testl
cli
inc
sub
jp
adc
adc
push
xchg
push
pop
mov
mov
sub
push
mov
scas
mov
sahf
orb
test
mov
jge
cmp
rolb
add
mov
mov
cmc
test
xchg
xchg
xor
loop
out
das
rorb
cmp
mov
test
fisttpll
sub
in
push
iret
das
out
mov
pushf
fs
mov
lea
mov
xchg
iret
mov
xchg
clc
jmp
shl
enter
mov
xor
push
aad
pushf
cmp
iret
mov
adc
mov
sub
xchg
add
push
and
shrb
bound
sub
std
test
mov
idivb
lret
push
lahf
cwtl
cld
dec
push
outsl
cmp
xor
and
gs
mov
jp
jae
inc
xchg
xor
xor
pop
xor
jmp
pop
jle
push
in
movsb
insb
mov
mov
lcall
stos
sbb
cwtl
cmp
add
sub
loop
outsb
js
mov
mov
addb
cld
out
mov
dec
adc
xor
jns
lcall
loopne
cmc
mov
mov
mov
and
mov
mov
int
dec
jmp
add
nop
test
outsl
outsl
ret
outsl
into
jmp
xor
mov
add
and
jbe
pop
push
imul
loop
push
mov
xor
and
mov
arpl
inc
divb
shll
dec
ss
lods
mov
fists
stos
fwait
and
mov
out
mov
movsb
sub
jmp
xchg
sub
outsl
enter
sbb
adc
repz
pop
cmp
jmp
sbb
jb
pop
dec
mov
je
inc
gs
ret
cmp
jge
testb
mov
cs
data16
sub
je
push
adc
sub
loope
pushf
mov
mov
fadds
adc
adc
adcb
inc
daa
fst
sarl
pop
aaa
and
cli
adc
insl
sbb
xchg
lods
cmp
sub
adc
stos
sbb
jp
clc
pop
stc
xchg
out
cwtl
sbb
cmpl
fs
xlat
orl
cltd
dec
mov
sub
mov
cmpsl
neg
xchg
arpl
add
les
div
and
pop
pop
je
testb
add
call
aam
in
mov
mov
mov
push
popa
cmp
push
iret
jl
cmc
scas
bound
sub
add
dec
push
jmp
sbbl
adc
incl
xlat
add
cs
cmc
adc
out
xor
sarb
push
test
jae
push
pushf
mov
and
push
lods
xchg
cmp
repz
pushl
dec
cmp
into
and
mov
in
movsl
cmp
or
fnsave
cmp
icebp
mov
push
mov
movsb
inc
lahf
lods
in
cltd
in
jge
fs
bound
pop
pop
mov
lock
dec
mov
test
pop
lods
and
xchg
push
inc
lahf
loope
and
adc
lods
das
jecxz
or
lock
inc
jno
pop
add
xor
mov
int3
addl
out
icebp
dec
or
repnz
sub
out
js
push
sti
enter
lock
in
xor
sub
rcl
in
scas
jnp
push
sbb
jno
and
jae
jae
push
mov
jecxz
repz
je
rcll
cmpsb
aaa
dec
imul
mul
jmp
arpl
inc
aas
jae
mov
test
in
test
push
mov
pusha
adcl
xor
das
je
lods
jno
pusha
jae
cmpsl
outsb
out
jle
sbb
mov
fidivrs
scas
mov
lds
into
cmp
pop
aam
in
in
xor
mov
clc
xlat
push
mov
or
sbb
inc
data16
adc
xor
out
xor
out
xor
pop
pop
mov
mov
xor
jo
xor
cmp
pop
jg
add
push
inc
cmp
cs
jp
stos
ljmp
adc
mov
adc
mov
fcomip
xor
dec
scas
movsl
data16
pop
xchg
sbb
cltd
jge
sbb
inc
xchg
iret
push
sub
xor
ja
adc
add
mov
loope
dec
xor
aad
mov
test
mov
loop
je
add
sbb
movsb
mov
pop
rolb
das
add
or
lret
insb
push
popa
ss
stos
cmpsl
ss
mov
repnz
dec
dec
mov
xor
jp
add
test
in
insl
fdiv
cmpsl
out
pop
add
mov
mov
or
out
and
repnz
jns
imul
out
ret
call
daa
push
dec
cltd
fldt
sbb
cmpsl
gs
call
mov
mov
jne
daa
add
and
out
jecxz
sbb
push
lret
pop
ss
iret
pusha
int
jno
ljmp
sbb
in
in
mov
js
mov
into
les
jmp
lret
xor
push
mov
dec
sbb
ss
inc
xchg
mov
enter
cmp
roll
jnp
out
fisubrs
mov
jno
in
fisubs
and
inc
cmp
and
fcompl
and
sub
mov
adc
das
mov
movsb
cmp
outsl
sar
fimuls
jnp
enter
movsb
in
xchg
mov
fnstsw
pop
leave
push
jbe
leave
jl
and
mov
jecxz
mov
movsb
insb
ss
in
and
jge
push
xchg
lods
mov
xlat
shl
call
inc
out
loopne
xchg
xor
push
adc
repz
dec
mov
hlt
adc
dec
jo
or
sbb
mov
andb
fidivs
std
sbb
frstor
push
lods
pusha
jg
popf
xchg
out
jg
pop
push
aaa
nop
xor
imul
push
inc
xchg
lods
pop
push
xor
adc
inc
jl
jmp
bnd
push
cmpsl
lcall
xchg
and
jns
fmuls
repnz
push
out
iret
dec
xor
dec
lret
ss
push
add
dec
insb
jmp
xor
xchg
in
lock
ficompl
jb
push
mov
movsl
lret
iret
jbe
jl
popf
addr16
icebp
sub
jae
adc
cmp
mov
out
mov
in
pop
adc
mov
jno
mov
rcr
cwtl
jb
into
shrl
rcr
xor
cwtl
ret
xchg
fwait
xchg
test
out
jle
leave
mov
mov
xor
add
stos
push
cmp
ljmp
push
push
ds
imull
xchg
clc
fs
mov
addl
or
dec
mov
cmpsl
test
fstpl
xor
sarl
out
adc
fwait
or
lds
in
pop
add
push
adc
daa
les
cwtl
ret
popl
imul
and
ds
aaa
lods
mov
inc
insb
inc
das
ss
cmp
dec
jae
imul
mov
cmc
arpl
in
xchg
jae
sub
mov
or
add
lea
push
sbb
pusha
pop
fwait
out
ja
sti
ret
daa
loopne
mov
mov
and
stc
inc
pop
outsb
jl
popa
push
jne
mov
ja
mov
testb
mov
add
pop
cltd
fldt
jle
ficomps
fs
xor
rclb
sub
xchg
xchg
call
xor
pop
lea
mov
in
mov
pop
adc
fimull
int3
lods
cli
pop
jp
mov
xchg
rolb
mov
push
repz
shrb
mov
ret
jnp
rcrb
popa
into
in
sti
xor
lods
repnz
out
out
xor
sahf
adc
testl
das
sub
fsubrs
imul
push
jne
push
mov
jne
mov
clc
out
xor
or
sti
or
xor
push
inc
push
mov
mov
popf
mov
popa
loopne
push
fwait
add
cli
jp
dec
mov
dec
cmp
cs
aas
insl
cmp
popa
shll
mov
call
and
cwtl
clc
jp
jb
testl
push
outsl
push
in
inc
stc
dec
testb
sbb
popf
aad
push
pop
in
ljmp
push
daa
mov
mov
push
xchg
les
pop
add
jbe
sbb
fs
imul
xor
sub
aam
push
aas
xchg
add
xor
notl
sub
cmpsb
daa
loopne
sub
aaa
cwtl
pop
mov
dec
inc
xor
mov
push
test
inc
adc
imul
bndstx
and
xlat
pop
add
scas
lret
out
jl
or
std
xor
pusha
mov
adc
add
sub
enter
pushf
ror
mov
std
mov
sub
xchg
outsb
or
mov
adc
stc
pushf
xorl
cmc
scas
mov
in
add
sub
pop
and
je
jno
push
cmpsb
loope
inc
xlat
xor
popf
lds
mov
push
xorl
into
andb
sub
shll
sub
lods
mov
inc
pop
dec
push
aaa
inc
pop
add
xor
icebp
jbe
sub
adc
jb
sti
push
sub
les
mov
outsb
dec
popf
imul
sbb
fldenv
push
sub
decb
pusha
flds
mov
mov
popa
sub
dec
dec
jns
test
mov
je
shrb
add
rdmsr
test
test
sbb
repnz
ret
lcall
adcb
popf
add
shlb
out
dec
jno
jg
das
mov
stc
mov
xor
outsl
jp
jl
or
outsl
xchg
mov
jbe
xchg
xlat
adc
test
cmp
enter
mov
push
mov
out
loope
mov
scas
fidivs
insl
mov
and
mov
pop
lret
dec
lods
popf
lods
cmpl
jg
dec
cmp
mov
pop
push
jge
and
sbb
push
mov
adcb
pop
push
test
xchg
fdivs
xchg
outsb
test
mov
mov
push
or
xor
and
xor
jo
pop
iret
xor
xor
xor
cmp
cmp
js
lcall
lret
fdivrs
or
mov
mov
adc
out
or
lods
loope
mov
push
loop
xchg
test
push
push
jno
mov
xor
xchg
in
cltd
data16
aam
sub
push
xor
mov
sbb
mov
push
xlat
sbb
pop
out
sahf
mov
call
orl
add
mov
xchg
les
mov
loop
out
pop
sbb
xlat
aad
adc
xchg
fldl
data16
inc
bound
push
push
ds
cli
ljmp
xchg
out
xchg
mov
sti
add
clc
xchg
addr16
ficoms
jl
imul
xor
pushf
orb
iret
dec
mov
cltd
orl
pushl
adc
repnz
jb
jnp
shlb
sete
mov
nop
sbb
inc
cmp
mov
sahf
test
push
jb
out
adc
ror
enter
cmpsl
xchg
into
stos
insb
dec
mov
inc
fstpl
psrad
xchg
sbb
lret
xor
cmp
ja
sub
add
lock
jg
mov
insb
inc
sub
xchg
repz
out
cmp
mov
push
fadds
mov
outsb
dec
push
xor
out
cmc
mov
xchg
fisubl
or
mov
mov
std
pop
mov
or
pop
inc
xchg
mov
lret
ljmp
xchg
push
ficomps
mov
jmp
lret
xor
ficoms
insb
out
cmpl
mov
sub
int
mov
dec
cmpsl
dec
add
lock
add
xor
or
lods
stos
fwait
aad
add
aam
jmp
xchg
cmp
lds
sbb
in
ds
and
or
mov
lahf
cmc
push
mov
aaa
mov
out
mov
inc
mov
in
inc
adc
inc
pop
sarb
fisttpll
pusha
push
pop
pushl
nop
mov
pusha
jae
ja
or
popw
mov
pusha
adc
push
cs
pop
sbb
sub
xchg
repnz
negl
cmp
outsl
lahf
lret
pop
cli
sti
adc
fists
cmpsl
pop
ja
push
sbb
adc
shll
ret
push
jns
and
inc
lahf
movsl
test
xor
fsubrl
loope
sbb
push
xchg
add
fcoml
mov
mov
fsubrs
xchg
cmp
and
xchg
repnz
xchg
or
pop
fldenv
xchg
out
loop
pop
push
jo
jns
sbb
cmpsl
shrb
cmp
outsb
add
jp,pt
call
rclb
mov
jno
in
adc
fdivr
stc
loopne
inc
ja
lea
cmp
dec
mov
push
out
sbb
gs
add
rorl
cs
xchg
lods
sub
test
popa
das
movsb
dec
adc
pop
pop
pusha
fcompl
test
mov
lcall
or
test
leave
dec
xchg
cmp
hlt
inc
push
jno
cmp
lret
cs
ja
pusha
mov
pop
sbbb
fs
inc
pop
adc
inc
nop
test
sbb
adc
fisubrs
sub
or
sub
into
sub
adc
add
sarl
xchg
sub
bsr
pop
add
lahf
mov
adc
imulb
iret
imul
xlat
inc
mov
pusha
std
adc
out
stos
ja
mov
dec
xchg
rorl
lock
sti
sub
push
sbb
sti
pop
push
inc
sbb
dec
movsb
push
pop
xchg
add
iret
push
aad
push
incb
je
adc
xor
inc
sbb
lahf
lahf
int3
push
lcall
jb
test
jbe
and
scas
fwait
aad
sbb
jmp
push
sub
cmp
out
push
cld
gs
std
adc
xor
jb
mov
add
push
aam
movsl
ds
js
or
cmp
stc
popf
mov
mov
xchg
add
jae
rcll
push
shl
iret
dec
syscall
loop
add
cmpsb
jns
aad
jmp
or
push
loopne
incb
or
out
mov
stos
cmp
out
xlat
rorl
sub
add
inc
xchg
iret
insl
fbld
scas
int3
xchg
cld
int3
lock
lea
mov
ljmp
or
xchg
shlb
adc
push
or
icebp
in
add
add
in
insl
xor
xchg
enter
adc
dec
sbb
sbb
push
in
fstps
xor
jmp
test
out
mov
sbb
dec
sbb
and
cmc
in
mov
fisubl
inc
add
lods
sub
cmpsb
add
sti
out
pop
inc
mov
addl
outsb
push
ljmp
cmc
jo
mov
or
sar
push
pop
push
mov
fidivrl
fildl
arpl
ficomps
scas
adc
dec
les
cmp
popa
mov
mov
movsl
call
inc
xchg
sub
int
jp
sbb
shll
mov
and
push
in
mov
cmpsb
pusha
daa
lods
mov
sub
in
rorb
test
fwait
mov
aad
mov
mull
lds
push
push
mov
sbb
aad
repnz
dec
insb
jb
stos
jno
jle
pop
cs
je
enter
leave
mov
pusha
push
cld
adcl
jnp
cmp
dec
add
jp
jg
pop
fdivrs
or
dec
adc
incb
jne
xor
ds
xor
cmc
roll
mov
stc
pop
xchg
sbb
inc
add
sbb
sub
sub
daa
jb
mov
ret
cmpsb
lahf
mov
lock
call
dec
jle
leave
push
lock
dec
js
js
daa
clc
int
mov
in
xor
ror
dec
test
push
or
ja
add
mov
leave
mov
xor
in
into
shl
push
scas
ret
push
clc
mov
jo
std
xor
jl
fidivrl
xchg
call
mov
cmpsl
mov
mov
fcmovnu
mov
push
aad
and
xchg
cmp
lods
jb
mov
cmc
xor
out
jle
dec
sub
pop
adc
xlat
lahf
loopne
ret
and
loop
xor
cli
add
push
push
maxps
lock
int
outsl
loop
lret
add
pop
inc
and
les
fcos
inc
pusha
mov
jno
std
mov
jecxz
mov
mov
fsubp
in
fnstsw
pushf
push
loopne
call
dec
mov
sbb
fidivrs
push
hlt
or
xor
jge
loopne
dec
sbb
mov
mov
ror
repz
cmpsl
mov
jns
jno
mov
xor
mov
into
test
inc
push
cmc
mov
pop
sub
and
xorb
fmuls
push
jmp
cmpl
fmul
lret
in
cmc
jnp
fdiv
imul
lds
testb
sub
pop
mov
stos
inc
xor
pop
pop
push
or
popa
ret
or
gs
jo
fcomip
add
cmc
mov
aam
fdivrl
leave
rcll
xchg
pop
test
test
pop
add
gs
es
inc
mov
and
mov
lcall
bound
add
xchg
lock
loope
orb
testl
pop
dec
shrl
add
push
mov
and
sbb
or
aaa
rol
dec
sub
inc
lahf
jp
repz
shlb
push
repz
ds
inc
bnd
addr16
aad
sub
sub
es
movb
sub
dec
aad
jle
and
test
les
and
mov
lock
ljmp
jne
or
jno
mov
dec
test
iret
lahf
sbb
or
inc
cltd
sahf
in
mov
call
jmp
or
lock
fnstcw
fwait
out
stos
jle
mov
jg
xchg
mov
cwtl
test
push
popa
sub
or
jne
pop
sbb
adc
add
add
mov
movsb
das
ss
pop
enter
test
scas
ljmp
sarb
mov
or
cmpsb
cmp
ret
movsb
mov
test
aad
dec
enter
adc
shll
sbb
add
rclb
pop
pop
mov
jg
lods
push
stos
pushf
and
add
inc
fdivp
or
std
ffreep
inc
divl
mov
inc
shll
push
fistps
mov
mov
sbb
cltd
inc
or
pop
xchg
push
leave
mov
pusha
xchg
add
sbb
fwait
add
jbe
movsb
stc
cmp
lock
stos
mov
ss
xchg
push
mov
cs
aam
daa
pushl
adc
adc
das
int3
in
lcall
xor
cltd
je
sub
test
sbb
add
xor
push
sbbl
jae
sbbb
pop
sub
rcrb
mov
test
inc
or
mov
in
fidivs
mov
in
div
push
xor
inc
clc
dec
mov
das
xchg
or
sbb
call
adc
faddl
dec
stc
aam
fistps
push
xchg
push
dec
adc
test
fimuls
inc
lcall
pop
leave
pop
sub
xchg
jge
pop
fucom
jecxz
mov
inc
adc
xchg
int
inc
out
add
jb
cmp
pop
sbb
or
pop
pop
fildll
mov
dec
push
or
sub
cli
mov
int3
addl
lea
aam
sbb
xchg
cmc
xchg
dec
and
inc
add
insb
inc
aaa
push
subl
xor
into
sub
push
fisttpl
ja
jb
mov
cld
cmc
adc
inc
mov
idivb
fdivl
dec
stc
and
push
cmp
adcl
test
jbe
sub
je
lahf
lahf
mov
cltd
cli
loopne
sti
jb
aaa
pop
xchg
enter
jg
inc
dec
sbb
mov
push
push
push
arpl
xchg
sub
popf
gs
das
sub
mov
mov
enter
dec
pusha
push
and
ret
add
imull
adc
jne
xor
inc
out
inc
cltd
push
int3
les
pop
sbbl
and
cmp
es
xlat
test
mov
mov
adc
or
mov
jno
mov
dec
call
jl
mov
xor
inc
outsb
push
ds
loop
popa
inc
push
cmpsb
aaa
arpl
sbb
stos
xor
sbbl
add
cld
mov
mov
in
xchg
mov
lcall
xlat
add
jge
or
add
xlat
and
insb
jmp
scas
test
xchg
jg
push
sbb
and
loopne
dec
aam
daa
xchg
incl
lret
aam
cmpsl
mov
jecxz
dec
insl
movsb
pop
and
hlt
sub
and
inc
sbb
add
fcmovnb
adc
clc
push
out
and
or
xchg
in
sbb
js
xorl
dec
addl
sti
fcmove
sti
mov
test
pop
fisttps
dec
daa
sti
pop
fwait
mov
mov
sti
mov
cmp
xchg
sbb
cmp
stos
lcall
lods
sbb
int
jb
pop
adc
sarb
jge
inc
ljmp
popf
mov
lods
sar
fisubl
sbb
push
xchg
andl
mov
je
xor
adcb
xor
ja
outsb
xor
mov
imul
shrl
movsl
popa
aaa
stos
inc
adc
mov
std
add
inc
jo
xor
je
fwait
pop
sbb
inc
test
inc
sub
sar
jb
inc
test
stos
cmc
divl
mov
sar
cmc
and
add
mov
lods
std
rcl
dec
daa
pop
sub
out
filds
popf
push
dec
push
push
mov
dec
cld
dec
xacquire
ret
int3
sbb
repz
push
ds
add
movsl
inc
dec
fidivl
add
popa
mov
or
xlat
push
fmul
sbb
test
repnz
push
jecxz
push
mov
outsb
pushf
sbb
xor
subb
jecxz
bound
ficoml
out
sub
dec
lret
mov
aas
xchg
mov
movsb
push
or
cmp
fcom
jb
mov
insb
fildl
xor
lahf
mov
sarl
arpl
shrl
lcall
mov
cmpsl
adc
addr16
or
xor
adc
and
test
mov
pop
leave
inc
and
xor
xchg
in
push
repnz
in
cli
sbb
lret
inc
mov
mov
outsl
cli
dec
imul
sahf
dec
mov
xor
sbb
popf
or
bound
lret
dec
xchg
outsl
outsl
aad
add
loopne
jle
cmc
out
mov
mov
sbb
mov
pop
mov
dec
pop
fldcw
xchg
and
sti
ljmp
scas
mov
or
push
jbe
out
adc
test
lds
jb
xor
outsb
dec
sub
js
pop
mov
add
rcll
lds
scas
and
in
inc
inc
mov
loopne
mov
adcb
xchg
lea
test
imul
fsubr
mov
mov
std
push
sti
loope
xor
fidivrs
sbb
lock
xor
frstor
pop
mov
and
jmp
pop
negb
shl
mov
fsubl
push
call
int
mov
xlat
and
adc
rclb
jb
in
mov
dec
cmc
mov
push
shrl
out
popa
mov
mov
xchg
push
sbb
push
push
sbb
mov
and
xchg
jmp
ror
push
inc
xchg
aad
dec
or
cld
fs
xchg
sub
inc
stos
cmp
mov
mov
add
inc
jns
rcll
test
cmp
popa
add
dec
dec
shll
xchg
std
test
xor
pop
mov
mov
dec
popa
iret
sub
sbb
add
rol
idivl
adc
jl
xor
insl
ds
mov
lahf
rcll
fcoml
dec
pop
xor
je
rcpps
imul
pop
ret
lds
xchg
inc
sbb
aaa
xor
mull
push
xor
fnstsw
or
add
out
bound
imul
cmp
mov
xchg
cld
js
jb
xchg
imul
cwtl
dec
fbld
mov
pop
js
out
add
fcmovnb
std
aas
push
into
jmp
mov
in
loop
movsl
xchg
into
jne
movsl
jo
mov
pop
mov
test
dec
femms
pop
inc
cld
lods
lds
cmp
xchg
xlat
lcall
into
xchg
dec
ret
in
mov
ret
inc
out
dec
inc
lock
into
adc
test
lret
mov
mov
cltd
push
sub
xor
inc
add
add
fmulp
inc
lods
ror
out
xchg
cmpsl
repz
adcb
sbb
in
and
mov
popf
hlt
dec
xorl
jno
dec
or
jb
jne
shll
dec
mov
mov
dec
pop
xchg
push
fistpl
lods
jmp
mov
das
fs
test
pop
mov
inc
mov
mov
xor
xor
dec
fwait
xchg
sub
in
loop
imul
mov
ret
add
xchg
sbb
cmp
jae
mov
stos
loop
push
ret
in
loope
cwtl
or
dec
xchg
lret
cli
addr16
orb
imul
ftst
dec
jnp
shlb
loopne
or
cmp
loop
mov
std
repz
add
adc
ss
cmpsb
mov
xor
test
add
or
push
jns
inc
mov
mov
jo
jl
pop
mov
mov
aam
push
mov
dec
jno
xor
or
filds
sub
xor
mov
scas
adc
ret
cmpsb
insl
push
dec
pushf
and
inc
fs
dec
lods
sbb
imull
bound
add
or
je
rcll
jg
push
adc
lock
sbb
inc
and
xor
aaa
loope
out
cwtl
fistpl
jnp
iret
dec
inc
pop
dec
out
in
jge
dec
in
xor
mov
loop
arpl
add
cmp
xor
jbe
subb
test
mov
arpl
test
adc
adc
or
outsl
sahf
aas
sub
or
add
xchg
insl
mov
ret
mov
sti
jbe
sbb
cmp
dec
push
sbbb
xor
mov
sbb
xchg
out
add
enter
lahf
xchg
subl
or
roll
pop
rcll
out
mov
pop
das
cmp
jbe
repnz
roll
push
jns
cld
jbe
int
fdivrl
das
mov
and
mov
jp
mov
mov
pop
mov
sub
dec
ret
es
add
mov
out
imul
iret
lock
jne
test
fisttpll
ret
xor
dec
mov
or
add
ret
pushf
mov
mov
test
inc
dec
mov
sbb
out
push
stos
or
xchg
jbe
adc
dec
and
add
ret
and
rcl
mov
aas
mov
push
pop
cmpsb
adc
cmp
dec
jmp
jns
xlat
hlt
fucomp
das
push
jae
dec
jecxz
iret
popa
rorl
mov
xor
iret
add
push
out
mov
flds
sbb
jb
xchg
cmpsl
ret
xchg
dec
das
dec
lea
xor
insb
push
cli
hlt
dec
dec
pop
inc
fsts
mov
les
and
jecxz
dec
add
adc
imul
xor
pop
jno
push
jle
dec
outsb
sti
xchg
lods
xchg
ss
mov
insl
shrl
add
int3
aam
lret
lods
test
inc
in
dec
xchg
jle
or
mov
sbb
xor
inc
test
xchg
mov
cmp
repnz
vmovss
pop
rorb
stos
rcrb
not
cltd
jne
xor
xor
sbb
jne
sbb
cmp
sbb
push
dec
push
or
test
ret
jmp
pop
dec
jbe
lret
fdivr
outsb
movsb
mov
and
sbb
loop
in
dec
cmpsb
cmp
shrb
jecxz
in
and
scas
mov
cmp
pop
je
in
aas
mov
adc
jg
cmp
idivl
mov
sub
outsb
mov
inc
insb
and
loop
les
mull
cmp
fstl
fcmovne
xor
outsb
in
out
ja
int
enter
ja
add
add
xor
pop
push
cmp
nop
int3
lahf
mov
rcl
or
test
jge
rolb
dec
in
subb
cwtl
inc
fs
pop
insl
jmp
sub
xchg
bound
xchg
fisttpll
lds
sbb
pop
out
call
hlt
xchg
and
stos
vphsubdq
mov
test
dec
inc
or
add
jg
add
cli
and
cld
xor
out
call
mov
dec
inc
pop
vpmaxsw
lock
add
pop
in
xchg
or
lods
jmp
insl
or
aaa
mov
adcl
jge
int3
aas
pusha
fwait
pop
push
jp
mov
xlat
hlt
xor
jp
aas
pop
cmp
stos
test
in
and
sub
dec
aad
sbb
mov
and
out
cmpsb
pop
sub
popa
outsl
mov
into
or
xor
mov
inc
pushf
inc
xchg
push
xchg
daa
inc
pop
js
std
std
jns
dec
mov
push
mov
jmp
pop
push
mov
mov
cli
or
lcall
rcrb
fwait
aaa
xchg
cs
int
arpl
sbb
arpl
push
jnp
mov
sti
dec
fildl
and
xchg
jl
mov
dec
adc
xor
xchg
lock
jb
xor
dec
hlt
flds
ret
lret
pop
ret
add
lods
adc
and
insl
fistpl
adc
xor
cmpsl
mov
mov
das
adc
bound
insl
xchg
jecxz
xchg
push
inc
lret
xchg
in
popf
pop
mov
pop
xchg
pop
jno
fnsave
dec
in
shlb
xlat
sub
in
test
sub
inc
add
loopne
xor
inc
aas
aas
inc
in
dec
dec
les
rorl
imul
pop
adc
dec
popf
jge
adc
outsb
inc
fwait
ja
and
push
xchg
xchg
mov
inc
lds
jge
in
test
clc
jmp
mov
movsl
div
clc
mov
in
in
cs
pop
das
or
push
ja
jo
sbb
cmp
fldcw
add
xor
mov
push
xor
ljmp
cltd
fucomp
out
movsb
jns
lods
out
sub
dec
sbb
js
jmp
test
incb
in
jmp
mov
das
or
lock
cmpps
cmp
adc
mov
push
adc
push
cli
inc
xor
xchg
loop
out
es
out
ja
ficoms
inc
xchg
mov
jo
and
sub
shll
hlt
ljmp
aaa
cwtl
mov
sbb
mov
mov
push
dec
aad
jle
iret
imul
es
cltd
insb
push
xlat
popf
xchg
lods
mov
jmp
dec
jle
loope
arpl
loope
icebp
sqrtps
out
push
in
cli
in
xor
push
adc
in
and
out
or
aas
push
xor
cmp
pop
mov
pop
sbb
loope
test
cwtl
mov
cmp
sarl
pop
in
adc
lods
ret
bound
lods
jo
mov
xchg
and
rcl
in
movsb
loop
cmpl
cmp
leave
and
cmp
xor
insb
pop
cltd
inc
seto
mov
mov
xchg
imul
lock
jo
pop
sub
mov
or
sbb
mov
mov
and
les
popa
push
push
mov
mov
adc
ss
not
dec
lods
je
push
mov
inc
rorb
sbb
mov
and
lret
add
pop
dec
test
fistps
call
jne
jl
sbb
mov
sub
or
mov
pop
js
inc
in
mov
movsb
lds
push
shrb
add
push
in
jae
out
aam
scas
adc
mov
aaa
dec
emms
and
test
cs
std
pop
addl
dec
int
lahf
push
jp
jnp
xchg
mov
jb
test
outsl
cmc
xchg
js
inc
sub
cld
in
les
rcll
pop
jg
cmp
inc
jbe
test
ret
cwtl
div
ljmp
test
popa
mov
add
shll
fmuls
cmp
jo
sub
lcall
add
rolb
xor
xchg
cmc
dec
jg
imul
test
cmp
popa
inc
inc
pop
jle
inc
sub
xchg
scas
insb
mov
out
xchg
cmpsl
in
mov
and
jg
mov
out
fwait
lahf
mov
dec
cmp
lods
dec
pushf
inc
mov
out
repz
ljmp
dec
cmp
scas
push
cltd
push
jl
test
flds
test
jl
insb
push
adc
jns
and
pop
mov
fwait
out
or
or
jns
sub
loope
sub
mov
leave
mov
outsb
imul
rcll
mov
cmpsb
push
sti
mov
test
movsl
mov
sub
rol
sub
data16
sahf
std
sbb
fdivp
popa
xchg
xchg
enter
mov
outsl
inc
outsl
aas
mov
aam
mov
push
test
inc
in
mov
daa
jge
subb
mov
sub
rclb
int3
adc
fidivs
and
mov
inc
push
arpl
je
ret
js
call
int
in
jae
and
jbe
fsubrs
xor
aas
das
lcall
jle
das
cli
pop
ret
xchg
sti
add
test
add
mov
push
ret
out
fimuls
insb
lcall
cs
shlb
inc
out
sbb
loopne
lds
cwtl
fisubrs
pop
rcrb
imul
fwait
mov
out
or
adc
ret
mov
jle
inc
xor
imul
sti
xchg
dec
xorl
lods
or
in
ljmp
int
push
mov
ret
enter
into
or
hlt
lods
inc
cmpsl
jae
mov
mov
fldl
enter
cs
nop
aad
iret
cld
mov
clc
test
hlt
enter
jo
mov
aad
dec
push
push
push
add
or
pop
std
jg
jae
test
fs
in
mov
iret
add
lret
stc
in
loopne
cmpsl
jne
push
dec
shrl
xor
filds
cmp
sub
rcrl
add
or
fidivl
sbb
shlb
mov
mov
adc
push
push
hlt
jo
xchg
xlat
call
mov
gs
sub
mov
mov
shll
or
aam
gs
xchg
rclb
and
icebp
mov
rcrb
int
roll
lods
mov
into
or
fs
xchg
xor
movsl
add
rol
mov
pop
add
inc
xor
sbb
push
popl
shll
push
or
pop
cmp
imul
cli
mov
cwtl
les
xorb
push
lock
and
sbb
mov
fwait
cmp
adc
and
pop
dec
in
sarb
pop
dec
jbe
add
dec
ffree
mov
fidivrs
mov
jle
addb
add
add
sti
xor
sub
outsb
adc
push
lods
or
inc
lcall
dec
mov
lret
push
mov
xchg
dec
and
cltd
push
add
gs
pop
lds
test
xchg
add
mov
inc
add
or
imul
jl
andb
fstps
mov
mov
jne
lods
pop
push
incb
xor
aam
pushf
xlat
mov
xchg
ret
out
out
andl
loope
lods
cs
jo
repz
sbbb
cmp
scas
jg
xor
jle
mov
out
scas
or
imul
or
adcb
mov
aaa
fisubs
inc
hlt
mov
aam
pop
pop
pop
and
dec
push
aas
mov
mov
mov
jle
add
cwtl
xor
add
bound
pop
fcomi
sub
sbb
push
dec
lods
clc
mov
pop
js
sbbl
adcl
xor
mov
loope
mov
adc
les
xchg
dec
xor
inc
pop
jmp
stc
shl
or
iret
lret
mov
sbbl
test
push
lock
mov
add
cmc
pop
sub
add
xor
rclb
movsb
push
inc
cwtd
in
adc
push
push
imul
add
pop
test
subb
mov
mov
clc
shrb
loopne
push
fwait
cmp
test
mov
add
cmp
out
push
out
scas
mov
in
inc
xchg
sub
rep
imulb
mov
pop
js
sarl
xlat
push
inc
mov
cmc
and
stos
adc
xor
xchg
int3
pop
mov
shrb
aas
lds
mov
pushf
cmp
lods
and
stc
add
inc
jo
push
cltd
jmp
inc
sbb
pop
loope
inc
test
ljmp
ret
movsl
inc
cmp
sub
int
push
sub
inc
or
dec
or
mov
imul
rolb
jns
jae
push
andb
add
add
or
fsubrl
int3
jl
out
in
or
out
sbb
push
push
cmp
jg
sti
out
scas
add
daa
fidivl
jb
xchg
pop
jns
add
lods
js
push
dec
ret
adc
pop
cmp
aas
insb
dec
and
int3
movsl
push
cmp
rclb
cmpsl
add
cmp
push
bound
cmpsl
xchg
out
fildll
pop
outsl
push
mov
cld
pop
push
jns
pushl
sub
mov
inc
jmp
mov
imul
mov
lret
or
lods
push
pop
sbb
popa
sbb
xor
jbe
fwait
mov
repnz
xchg
push
push
dec
sbb
dec
jae
cmp
into
push
jns
cmp
jo
bound
aam
cld
inc
sbb
test
xor
loopew
xor
push
cmp
fldl
mov
daa
repnz
cmpsb
mov
mov
dec
arpl
push
push
enter
xchg
mov
in
gs
and
je
imul
lret
sub
pop
mov
dec
and
pushf
add
orl
or
mov
dec
sbb
mov
mov
add
push
aas
lahf
fdivs
daa
add
leave
mov
lcall
inc
mov
jae
in
outsl
or
out
or
jnp
cmp
pop
ret
add
and
push
fsub
ret
or
cmp
mov
ss
jle
mov
mov
or
push
push
fistl
push
cmp
fwait
aas
into
fadds
pushf
fsubr
es
add
and
cld
cmp
dec
mov
or
jecxz
mov
push
negb
or
in
popf
xchg
insl
cli
xor
subl
loopne
test
lock
cld
push
add
adc
pop
sar
scas
mov
sub
out
daa
mov
popa
sub
repz
lret
jno
add
xchg
loopne
adc
xchg
call
loopne
xlat
int3
mov
dec
jecxz
scas
pop
lea
xchg
or
pop
in
mov
push
and
inc
mov
call
sub
xchg
and
and
addr16
pop
pop
iret
in
in
add
pop
cmp
inc
jp
xorb
jecxz
inc
repnz
aam
int3
fwait
mov
jno
xchg
fnstsw
test
mov
sbb
loopne
pusha
daa
cmp
or
lock
or
out
cmp
adc
aam
jmp
mov
pop
and
imul
call
outsl
ss
mov
pop
aad
mov
je
andl
and
xor
or
outsl
mov
xlat
sbbl
mov
out
loope
mov
sub
testb
insl
gs
xchg
mov
sti
mov
enter
push
movsl
cmpsb
test
xchg
out
mov
mov
pop
ret
pop
lea
dec
daa
fmull
shll
in
adc
mov
jp
imul
lret
mov
in
mov
xlat
push
xchg
insb
sub
bound
push
lea
mov
popa
adc
adc
popa
ret
xchg
pop
int
fiaddl
insb
dec
push
sbb
jbe
jnp
daa
bound
icebp
jbe
lods
jl
pop
mov
pop
aas
js
adcl
sbb
push
xchg
push
or
loop
push
adc
push
mov
mov
sbb
stc
pop
aam
and
je
sbb
stos
adc
dec
cltd
std
jle
mov
mov
nop
icebp
test
or
fstps
mov
gs
scas
sbb
sub
inc
les
sbb
mov
fstpt
sbb
imul
jge
jae
int
jl
xor
xchg
add
add
sub
popa
icebp
add
or
in
cmp
pop
pusha
insl
xor
pop
dec
mov
or
xchg
call
push
hlt
in
pop
jb
mov
adc
pop
mov
cmp
icebp
pop
cmpsl
cli
imul
pop
xlat
sub
in
inc
fisubs
jnp
mov
movsb
pop
inc
jns
fcmove
pop
cmp
enter
lcall
cmpl
cli
jne
mov
out
out
lea
mov
xor
add
adc
mov
imul
xor
daa
hlt
test
jecxz
jno
mov
sub
xchg
mov
and
cltd
xchg
mov
dec
or
mov
data16
mov
mov
sub
sub
sbb
fadds
sub
pusha
push
data16
fcoml
xchg
in
mov
in
arpl
leave
push
xchg
loope
jp
fneni(8087
sbb
data16
and
in
dec
mov
shlb
mov
pop
jg
inc
xchg
jmp
pop
push
sahf
mull
inc
adc
scas
or
hlt
add
mov
ds
pop
insb
add
daa
ret
xor
jns
mov
sti
dec
addb
jge
outsb
cltd
lcall
sub
in
lret
mov
push
loop
dec
xlat
mov
dec
mov
cli
cvttps2pi
das
test
or
lock
and
loop
xchg
ss
or
stos
cwtl
gs
lret
in
pushl
push
jl
into
pop
lods
dec
adc
cmp
jae
lret
add
dec
xchg
ljmp
repz
cwtl
in
jg
dec
stos
data16
sahf
ret
xor
std
mov
mov
sub
mov
sbb
aam
pushf
cs
and
pop
mov
inc
sub
cli
adc
sub
jns
jge
sbb
or
stc
ds
cmpsb
repz
scas
sub
leave
aas
popa
popa
and
dec
es
incl
mov
les
clc
shlb
mov
or
cmp
mov
shlb
rorb
push
cmp
out
and
lods
jns
and
sub
mov
outsl
and
sahf
dec
sahf
dec
xor
jg
les
aam
lret
pushf
inc
inc
dec
shld
les
mov
loopne
xchg
sub
fwait
sbb
and
das
inc
insb
and
fsub
decl
lahf
dec
push
add
jnp
sbb
fdivrs
inc
pop
subb
in
js
lret
test
cmp
data16
sbb
rep
dec
jge
shl
lcall
scas
call
mov
jp
cmp
add
push
out
inc
inc
mov
and
push
dec
mov
adc
inc
in
fldcw
mov
sbb
shrb
int
xchg
ret
arpl
sbb
insb
jle
movsl
mov
loop
mov
pop
push
push
flds
mov
cmc
shl
inc
dec
fstpt
cmc
push
ds
shlb
gs
add
xchg
mov
sbb
mov
mov
mov
lahf
mov
decl
aas
mov
add
add
mov
push
sbb
or
sbb
add
jg
test
jle
xlat
pop
sbb
mov
sub
cli
inc
jl
dec
xchg
out
jne
adc
adc
mov
mov
push
dec
push
cli
dec
clc
adc
stos
out
mov
mov
dec
loope
insb
ljmp
inc
cmpsb
mov
mov
jb
sbb
mov
mov
pop
mov
shrb
or
sbb
push
dec
and
mov
testl
lea
push
pop
pop
ds
daa
in
into
into
sub
outsb
ficomps
insl
and
cli
mov
lds
add
aaa
mov
popa
dec
xor
adc
pop
imul
insb
dec
cmp
jp
push
push
addr16
jg
dec
mov
jo
in
jnp
rcl
cmp
int
pop
stc
xor
mov
mov
add
inc
mov
aad
dec
lahf
or
mul
xchg
sbb
hlt
test
inc
push
mov
scas
or
mul
sbb
inc
into
sahf
sub
flds
push
adc
stos
fisttps
dec
jg
jno
sbb
mov
enter
or
sbb
outsl
push
iret
outsb
shrb
mov
push
mov
adc
fdivrs
loop
iret
mov
in
push
pop
adc
sub
push
sti
inc
sub
xor
pop
enter
sub
mov
pop
into
add
mov
mov
mov
or
xor
and
mov
xchg
or
dec
cmp
outsl
stc
push
stos
test
mov
pop
pop
xchg
push
mov
sub
sub
inc
in
enter
sbb
js
clc
jge
jmp
push
pop
rolb
lret
loope
jl
int3
sbb
cmpsb
fs
pop
cmp
and
data16
mov
jle
mov
rolb
loop
mov
adc
push
fisubrl
dec
aaa
repnz
ss
xor
dec
das
sub
pop
sbb
cld
mov
cmp
and
push
aas
cmp
test
push
scas
xchg
scas
repz
std
ret
push
mov
xor
or
or
aam
jo
xchg
push
sbb
fxch
arpl
sbb
pop
push
mov
call
out
out
mov
fs
cmp
mov
mov
sti
loopne
outsl
add
addr16
loop
ret
into
in
mov
lahf
insb
push
xchg
xchg
mov
push
fwait
popf
sub
inc
mov
in
sbb
lock
and
mov
push
inc
adc
inc
mov
dec
data16
pusha
and
aad
add
nop
pop
lret
jo
xchg
push
add
mov
lds
jl
and
mov
inc
lock
gs
aam
xor
mov
adc
icebp
dec
cltd
popa
and
dec
stos
out
cmp
addl
pushf
jns
icebp
mov
loop
ffree
je
pop
cmc
imul
in
into
mov
pop
ss
add
in
pop
loope
lret
mov
sbb
fiadds
pushf
cmp
lea
push
pop
nop
ja
stos
scas
rcrl
bound
sub
xorb
nop
jp
xchg
adc
xchg
test
arpl
fcoms
mov
jnp
aas
push
pop
fisubrl
ljmp
pop
sbb
push
fs
mov
pand
divb
xchg
ret
test
jmp
cs
scas
mov
jge
test
jmp
ficoms
ds
into
xchg
inc
cli
mov
xchg
add
lcall
leave
ljmp
iret
pusha
scas
cmp
or
xchg
jae
fsubl
and
mov
mov
or
xor
test
sarb
or
fdiv
jo
fistpll
jo
in
repz
jmp
dec
loopne
push
push
inc
loopne
sub
test
or
out
mov
fisttps
dec
lods
out
push
pop
iret
xchg
icebp
mov
xlat
inc
and
insl
push
add
mov
pusha
mov
ljmp
js
es
imul
icebp
xchg
jmp
in
fistps
cs
inc
and
mov
in
mov
out
add
pop
ret
mov
sbb
inc
push
cmc
jge
lcall
xorb
dec
daa
fwait
insl
inc
cwtl
sbb
mov
stos
shrb
xchg
inc
fwait
hlt
loopne
sbbb
bound
pusha
mov
jp
mov
pusha
adc
repnz
mov
lret
or
or
ljmp
outsb
mov
loop
sbb
test
inc
ss
sub
dec
or
aas
xchg
cmp
and
inc
jge
lds
lahf
shlb
and
outsb
xor
sub
adc
dec
dec
sarl
cmp
aad
sub
adc
out
sub
or
test
addl
cmc
cmp
ljmp
push
and
jg
movsl
mov
int3
jb
adc
gs
pushf
stos
xchg
loope
fsubrs
in
andl
test
in
mov
mov
pop
insl
mov
shr
and
sbb
mov
xchg
xchg
push
mov
loope
mov
cs
jecxz
mov
clc
or
stos
sub
addr16
jle
adc
xor
inc
test
dec
sub
rorb
push
ror
adc
xlat
mov
xchg
mov
inc
cltd
rorl
loope
add
shll
pushf
mov
add
rol
rcrl
pop
aad
ds
mov
jae
mov
cmp
bound
lds
adc
sbb
adc
jo
ficompl
xchg
xchg
mov
out
jmp
and
fnstsw
pop
add
push
int
int3
jne
mov
out
data16
jl
gs
mov
pop
xor
scas
xor
fidivs
shrl
xchg
daa
xchg
push
out
sbb
imul
add
or
xchg
faddl
inc
popa
xor
sub
push
jge
iret
leave
and
mov
dec
mov
mov
mov
test
push
sbb
push
gs
out
icebp
out
jno
sub
pop
or
jle
jae
add
add
scas
jl
cli
loop
jb
adc
gs
dec
mov
cmp
sbb
sbb
xchg
push
dec
call
fs
loop
mov
add
mov
mulb
xorb
insb
jecxz
or
shrb
mov
add
repz
push
lcall
jp
out
lods
rol
loop
in
ror
pop
cmp
adc
xchg
sub
push
sub
jae
inc
sub
push
pop
or
lock
pop
and
cmp
in
push
test
imul
mov
mov
push
cmp
add
push
test
pop
aam
add
pushf
xchg
cmc
addb
sbb
mov
mov
dec
outsb
xor
jl
sbb
jmp
daa
gs
aad
inc
dec
adc
sbb
js
dec
lods
je
mov
inc
mov
arpl
sbb
jne
push
add
mov
mov
cwtl
add
pushf
or
push
cwtl
or
sbb
cmp
or
mov
lods
rorl
out
lcall
pop
mov
sub
mov
scas
sbb
fisubrl
fs
lret
inc
pop
stos
mov
or
cltd
aad
cs
xchg
mov
enter
sub
push
or
pushf
in
mov
lods
sbb
subb
jns
mov
stos
dec
sbb
stos
inc
xor
xchg
test
fcmovnbe
push
mov
mov
and
bound
imul
cmp
scas
pop
or
or
sti
jle
mov
movsl
int3
cli
fxch
stos
int3
inc
and
movsl
jp
fwait
or
inc
cmp
aaa
inc
stc
shl
sahf
call
out
int
les
jno
fwait
sbb
test
dec
cmpsb
stos
cmc
in
and
dec
inc
jmp
xor
cmp
mov
pop
das
cltd
inc
fbstp
dec
popa
xchg
lods
sbb
or
sub
adc
jb
aas
sbb
add
pop
shrb
je
mov
adc
leave
popa
mov
lcall
cmp
ret
test
xchg
dec
cmpsb
mov
pop
icebp
cmpsb
push
fsubrs
pop
sub
dec
movsb
xchg
stos
or
xchg
push
cli
add
fadds
pushl
xor
mov
xchg
out
scas
repz
out
xchg
or
adc
sarb
mov
cmpsl
dec
ljmp
andb
dec
icebp
inc
or
mov
mov
psadbw
add
xchg
lea
or
sbb
addr16
xchg
mov
dec
fs
test
stos
xchg
push
dec
enter
pushf
aad
cli
push
or
dec
xchg
sub
lods
scas
dec
rcrl
or
ret
sbb
jne
dec
and
stos
ljmp
cld
int
scas
idivl
or
mov
push
push
daa
outsl
or
jo
xchg
push
sbb
gs
popa
xlat
adc
mov
sub
jno
aaa
xchg
cld
mov
xlat
sahf
and
pushf
add
popf
add
leave
pop
jl
jno
xor
fmull
jns
out
mov
pusha
out
jne
adc
mov
sub
clc
lds
icebp
nop
sti
lret
and
cmpsl
or
pop
aam
pop
sarl
jmp
sub
cltd
adc
add
mov
jle
add
add
out
inc
adc
gs
push
dec
mov
dec
mov
fcoms
in
jge
jecxz
clc
enter
sarl
dec
push
and
insb
fcmovnu
in
sti
loope
shll
cmc
scas
push
add
lcall
mov
mov
push
sbb
sub
ret
stos
stc
mov
push
aas
mov
pop
int
movsl
xor
pop
inc
cmpb
mov
sbb
lahf
loope
dec
cmpsl
pop
mov
mov
push
add
and
xor
movups
popa
mov
jmp
pop
lea
lea
cwtl
rcl
jbe
push
pop
pop
mov
mov
fists
push
dec
adcb
push
adc
cmpsl
aaa
aam
push
mov
cmp
ja
push
aam
pop
test
gs
in
dec
inc
sub
jae
data16
iret
mov
mov
xor
hlt
arpl
hlt
in
out
les
sub
insb
pop
adc
mov
pop
mov
push
mov
dec
sub
jl
pop
cmp
int
cld
jnp
push
enter
outsl
aaa
jmp
adc
cltd
dec
and
dec
rcll
jle
cmp
testb
and
jge
cmp
ret
adc
lahf
pop
popa
sub
test
push
jbe
fsubrl
jae
enter
imul
leave
inc
sub
adc
iret
xchg
mov
mov
add
mov
xchg
rol
xchg
cmp
sysenter
dec
xchg
popf
adc
icebp
in
sbb
cmp
jo
push
mov
fcoml
cmpsb
mov
mov
xor
or
jmp
repz
insl
ljmp
inc
cld
mov
inc
inc
or
push
fs
sbb
cwtl
and
pusha
mulb
sub
pcmpgtb
inc
mov
mov
push
mov
mov
call
movl
ss
icebp
scas
aam
btr
inc
inc
jp
sub
notl
cmp
pop
xlat
lds
dec
inc
xor
jb
sub
dec
mov
adc
jge
dec
xchg
mov
or
adc
and
mov
adc
mov
mov
inc
adc
sbb
cltd
inc
dec
pop
push
and
stos
loopne
lods
push
mov
inc
popa
mov
pop
movsl
cmpsb
fdivp
lret
dec
aaa
and
xor
imul
jle
imul
lods
push
sbbb
and
fimull
pushf
lahf
sub
mov
xchg
out
cmp
mov
mov
mov
xchg
add
mov
das
hlt
sub
notl
daa
sbb
jle
imul
dec
push
inc
ds
sbb
mov
shll
mov
mov
out
imul
lods
sbb
pop
dec
adc
dec
jae
add
imul
or
mov
sub
ja
dec
push
imul
je
cmp
lret
fldenv
push
rclb
dec
push
cmp
enter
add
push
dec
rcrl
in
xchg
stos
fwait
scas
jno
mov
fsubrl
scas
lcall
dec
shll
xchg
stos
insb
lret
pop
or
jbe
aam
iret
mov
xchg
inc
ret
sbb
pop
jae
dec
ljmp
inc
mov
pop
inc
out
mov
int
xlat
cmpsb
icebp
push
rcr
mov
cmc
sub
out
push
mov
cwtl
dec
xor
imul
jmp
xchg
stos
jl
mov
out
or
out
cmp
pop
push
jno
loopne
daa
add
mov
xchg
lea
ds
lret
jg
add
xlat
scas
pusha
imul
lea
pop
fwait
adc
loop
out
sti
inc
mov
mov
sarb
cwtl
int3
sbbl
sbb
aas
mov
test
inc
dec
mov
lods
enter
adc
cld
push
push
adc
mov
pop
or
xor
in
mov
addr16
mov
mov
aaa
ss
cmp
dec
sahf
dec
jl
aad
cmp
and
int3
mov
in
ret
sbb
or
pop
enter
push
jbe
mov
sub
rclb
mov
loopne
cmp
ret
repz
cld
mov
push
aaa
cmc
sub
push
cld
arpl
adc
out
dec
sbb
or
leave
iret
ret
ret
push
xor
jnp
out
fnstenv
test
movsl
negl
in
std
add
shrb
fwait
cltd
jp
lret
mov
pushf
mov
lods
hlt
mov
mov
aam
jae
xor
test
sti
jp
or
or
and
inc
clc
push
cwtl
inc
out
ljmp
rcll
dec
stos
ds
loope
sbb
dec
and
xchg
daa
pusha
lods
inc
shlb
movsb
test
out
sub
repnz
js
fisubl
mov
inc
cmp
cmp
insl
or
popa
outsb
dec
stc
scas
std
gs
dec
sbb
in
push
cmp
cmp
xchg
out
imul
mov
push
loop
sub
out
push
mov
xor
out
int
push
and
dec
loope
repnz
jecxz
cmp
ss
sbb
jae
sets
pusha
loop
out
mov
mov
sbb
pop
sbb
aad
jno
mov
cmc
out
or
push
in
divl
les
pop
mov
lcall
imul
cmp
adc
call
cvtpi2ps
jne
adc
add
push
adc
fsubrl
lds
or
shll
addr16
sub
iret
push
lcall
dec
dec
movsb
fmull
push
push
shl
or
mov
mov
mov
mov
std
mov
push
cmp
jl
or
in
cwtl
in
xor
or
mov
rcll
push
push
mov
out
mov
mov
lods
and
jb
leave
xchg
nop
xchg
fs
sub
dec
fbld
push
push
mov
push
stos
mov
push
inc
adc
aad
pop
cmp
cmpsb
daa
inc
sub
clc
jb
mov
dec
repz
push
sub
mov
pop
xchg
or
jge
fadd
inc
push
in
mov
fwait
mov
sbbl
jae
jl
and
push
push
jp
push
add
add
mov
and
mov
or
nop
fwait
mov
shll
mov
sub
clc
sub
sub
xchg
mov
bnd
in
in
fiadds
mov
addr16
xchg
mov
enter
inc
cltd
call
sbb
lret
es
mov
mov
rcrl
rcll
adc
mov
stos
out
insl
ljmp
roll
cmp
loope
xor
std
mov
fcomp
in
lds
inc
sbb
pop
sbb
inc
rorb
scas
inc
and
add
sti
pop
or
inc
jecxz
pop
xor
and
sbb
pop
call
cmpl
adc
jecxz
out
and
imul
addb
ret
test
mov
dec
pop
or
jecxz
aam
dec
int
adc
sbb
xor
das
je
dec
out
in
stos
loop
cmpsb
loop
lock
adc
mov
lds
sti
mov
mov
cmp
mov
cmp
mov
imul
movsl
cmc
and
mov
mul
mov
xchg
cmc
adc
sbb
adc
in
mov
dec
dec
in
xor
idivb
add
sbb
jbe
xor
push
mov
push
add
and
fiadds
mov
jno
out
lods
inc
shr
insb
rcr
popf
or
ret
lcall
stc
push
sti
dec
lret
ja
stos
repnz
ljmp
cmpb
cmp
orb
sbb
push
lcall
rcll
ret
icebp
jmp
xchg
lock
orb
add
mov
js
insl
inc
cmp
adcl
mov
push
or
bnd
or
inc
pop
xchg
test
scas
xor
sbbl
adc
cmp
xchg
jp
dec
add
ja
push
ret
push
out
lock
sbb
jno
mov
add
cmc
es
in
cmpsb
mov
in
clc
xchg
test
and
jnp
cmp
mov
les
inc
cld
sti
add
repnz
inc
stos
xor
addl
push
rcrb
dec
inc
add
push
clc
pop
nop
inc
mov
pop
inc
scas
mov
lods
test
xchg
add
sub
cmp
push
dec
cmpsb
js
sub
inc
xchg
add
lock
xlat
cwtl
jno
mov
out
stc
imul
mov
sub
ss
jl
inc
aaa
int3
cmpsl
mov
add
adc
pusha
pop
sbb
outsb
xchg
insl
gs
sub
insl
rcrl
faddl
adc
nop
test
sbb
shlb
jmp
xchg
movsl
cmp
xor
xchg
out
cwtl
lret
pushf
into
or
sub
mov
mov
push
and
in
cltd
popf
std
out
popa
push
lret
hlt
ds
push
fldenv
cmp
sub
add
pushf
les
pop
es
jns
mov
test
add
sbb
jg
push
in
mov
ja
mov
mov
nop
or
mov
push
aam
in
fsub
lock
add
cltd
fldt
pop
jp
jg
lret
ret
cmp
sub
xor
jnp
lods
dec
mov
mov
popf
imul
cld
adc
out
scas
in
aaa
leave
in
cs
lret
mov
test
inc
xchg
sub
jge
std
ret
push
jb
inc
aad
mov
js
sub
push
jnp
popf
outsl
je
lds
mov
push
jbe
decb
mov
xchg
sub
subl
fwait
sbb
sbb
xlat
pop
push
or
mov
and
cmc
jle
out
es
fstps
xlat
or
jle
xchg
sbb
imul
mov
mov
cld
into
jo
ret
adc
mov
lods
fs
aas
jo
js
fnsave
xchg
inc
daa
mov
push
cmp
pop
adc
aas
mull
jbe
dec
fisttpll
lods
in
push
push
shlb
outsb
mov
and
push
shrl
cwtl
sub
scas
mov
or
imul
jns
jmp
sbb
cmpb
add
sbb
and
outsl
push
jne
aas
in
into
push
nop
dec
jmp
test
lock
jp
add
dec
in
cmpsl
dec
push
int3
pop
dec
cmp
rclb
adc
push
xchg
ss
out
ja
mov
lods
mov
pop
lods
xor
cmp
push
adcl
fdivrl
pop
stos
or
mov
lods
outsb
cltd
xchg
inc
ret
jmp
inc
cmp
adc
inc
and
jge
je
rcr
inc
test
pop
add
xorl
loop
pop
lret
call
xor
or
mov
cmp
imull
imul
xchg
fidivrl
dec
and
sub
fs
cmp
loope
pop
push
popl
outsl
jne
xor
stos
loop
sbb
ror
sub
sbb
sti
insl
mov
xchg
push
inc
lock
fmull
adc
adc
dec
popa
scas
jbe
adcl
stos
mov
jmp
mov
bound
std
mov
push
fadds
cmp
push
mov
bound
cwtl
mov
mov
repz
pusha
dec
lcall
sbb
aaa
push
lret
pop
add
cmp
stc
and
hlt
push
shlb
push
mov
insb
int
or
repnz
xlat
push
inc
xor
icebp
jns
sub
test
add
out
mov
les
xchg
adc
xchg
fwait
adcb
fmuls
cmp
clc
pushf
jle
inc
mov
popa
mov
push
xor
loopne
enter
icebp
je
fs
xor
hlt
jno
mov
fcmovbe
adc
and
push
cmp
push
push
loopne
dec
ds
push
or
jae
mov
add
pusha
and
das
ficoml
fcmovnu
pop
bound
push
jle
xor
ffreep
inc
hlt
fnstsw
aam
scas
ficomps
popf
je
or
jbe
fimuls
mov
jnp
lock
xor
call
adc
lods
cmp
ja
sub
dec
add
jl
xor
dec
fcomp
mov
lcall
clc
enter
jp
dec
imulb
xchg
aad
xor
xchg
bnd
adc
les
fidivl
and
or
jge
xchg
test
iret
inc
bound
mov
cli
sbb
insl
xchg
add
mov
jmp
and
sarb
xchg
cld
outsb
nop
inc
cmp
xor
cs
shrl
stos
leave
js
insl
add
int
enter
js
sub
pop
int3
std
sub
lcall
mov
inc
add
pop
ljmp
cli
nop
fs
push
das
stc
ror
aas
pusha
mov
xchg
or
or
loop
cmp
ja
pusha
cli
push
sub
push
outsl
dec
movl
xchg
div
xlat
shl
push
mov
in
sahf
jecxz
cltd
lds
sbb
cmpsb
sbb
or
outsl
repnz
jno
push
cli
mov
cmpsb
ljmp
add
and
shlb
orl
ds
imul
mov
lds
push
out
push
lret
mov
in
lds
repnz
jmp
push
insl
lahf
and
imul
dec
mov
mov
push
ror
insb
divb
je
push
adc
sub
add
sbb
mov
dec
xor
dec
movsl
mov
cmp
mov
adc
call
sbb
xchg
sub
dec
cmc
cmp
mov
inc
push
inc
test
pop
outsl
push
sbb
mov
dec
pop
arpl
lock
popf
ds
push
mov
add
stc
shrl
or
jnp
push
pop
lret
movsl
push
sbb
pop
pop
jp
rcl
sub
xor
scas
movsl
pop
imul
stc
push
jge
adc
and
adc
repnz
sub
mov
mov
add
repz
or
adc
cmp
mov
imul
and
or
add
inc
insl
push
cltd
cltd
bound
enter
roll
scas
mov
aaa
jnp
sbb
out
sub
ss
inc
mov
cli
pop
repz
pop
stos
aas
xchg
aad
fwait
sub
or
push
add
lea
sub
inc
sarl
push
xor
and
lea
xor
inc
out
fstpt
mov
andb
icebp
or
dec
push
imulb
cmpsl
mov
insl
jae
scas
out
and
cs
aad
stos
pop
scas
dec
decl
ja
aaa
je
push
inc
sbb
add
inc
lret
aam
add
mov
mov
out
mov
jmp
jmp
and
and
icebp
cmpsb
fidivl
cmp
inc
data16
hlt
and
inc
enter
xchg
sbb
insb
lret
enter
inc
jecxz
sbb
cmp
mull
iret
cmp
dec
ds
lret
jecxz
lods
ja
cmpb
mov
dec
ficomps
movmskps
sub
nop
nop
jo
ret
xchg
je
add
sub
cltd
cwtl
movsl
sbb
stos
pop
fsubs
xor
shr
out
les
pop
ljmp
cld
dec
shl
fldcw
mulb
cld
sub
xchg
stos
fistpl
les
jnp
and
cmp
dec
xchg
cmp
mov
push
push
sbb
and
rorl
mov
pusha
fidivs
fldt
dec
push
popa
mov
push
jg
imul
or
xor
mov
ret
stc
fs
sti
mov
sub
inc
mov
push
shl
mov
les
or
mov
push
and
jmp
add
ret
pop
jbe
add
mov
pusha
in
adc
cld
adc
stos
xor
sub
mov
xor
sub
imul
push
and
inc
repz
hlt
or
leave
xor
push
pop
ds
sti
xor
in
jo
imul
dec
out
pop
in
or
inc
stos
pop
push
into
push
jo
test
dec
adc
outsb
push
add
sahf
add
movsl
cmpb
call
inc
pop
sbb
mov
xor
mov
popa
xchg
das
and
mov
mov
mov
call
push
repnz
mov
add
std
cmp
cmp
sub
xchg
jb
or
insb
dec
clc
push
add
popf
inc
out
shll
out
and
add
fs
xchg
cmp
mov
and
fldl
mov
or
mov
outsl
pop
out
je
int3
xor
jne
out
mov
lret
xor
add
lret
lret
jno
aam
sub
xor
and
lods
mov
hlt
xor
and
mov
cld
std
les
pop
xor
repz
jne
pop
mov
jns
iret
jl
jg
and
mov
xor
dec
lods
xor
or
sarl
adc
cmp
rcrb
loop
jb
xchg
mov
adc
stos
faddl
movzwl
jbe
sbb
bound
popf
or
clc
mov
mov
inc
sahf
jg
inc
fs
movsl
iret
dec
sbbb
jl,pn
pop
imul
pop
into
out
test
add
mov
ret
fdivrl
bound
adc
loop
insl
cmpsl
pop
out
xor
push
xlat
adc
adc
sub
stos
push
pop
jne
idivb
je
cmp
mov
loop
xchg
ret
cmp
addr16
in
lcall
fcomps
sahf
int3
pop
sbb
ud0
shll
sarb
jl
in
add
xor
xchg
sub
in
dec
push
fnsave
jp
xchg
fidivrl
fdivrl
mov
sahf
lret
xor
test
cmp
jne
push
sub
repnz
in
insb
mov
pop
in
xchg
xchg
pusha
push
int
lahf
cmp
push
shll
cwtl
xchg
lods
inc
add
jmp
push
adc
add
xchg
dec
push
jle
xor
loopne
fsub
andb
sub
sbb
or
insl
int
or
push
gs
sub
inc
xchg
or
adc
aad
push
outsl
stc
sbb
loop
jecxz
pop
leave
ret
stos
ret
hlt
push
push
push
mov
mov
lahf
in
in
loopne
cmp
lret
out
dec
adc
xor
mov
rolb
andb
jnp
sub
mov
inc
xor
lret
scas
leave
add
aad
and
adc
repz
mov
mov
xchg
out
sbb
mov
loope
add
popf
mov
fisubrs
xor
outsb
std
jb
adc
fisubl
rcrl
dec
pshufw
loop
cwtl
push
es
sbb
jo
ret
stos
or
aas
rolb
sahf
add
out
arpl
mov
push
inc
mov
sub
mov
fs
mov
out
dec
xor
sub
imul
dec
scas
fildll
out
xchg
mov
fs
push
and
inc
jo
add
xlat
das
notl
mov
dec
leave
push
pushf
test
roll
cmp
xchg
iret
xchg
js
lret
dec
pop
xor
fildl
xadd
mov
loope
movsl
in
push
xorl
lods
cmp
sahf
test
inc
push
inc
push
jbe
imul
adcb
mov
pusha
jnp
mov
clc
shl
cmp
xor
mov
fs
mov
andb
loopw
cmpsb
pop
inc
insb
and
pop
mulb
mov
xor
movsb
push
or
dec
jmp
push
dec
and
cmp
in
test
mov
jmp
out
cld
fneni(8087
inc
call
and
dec
aaa
xlat
xor
dec
fdiv
push
adc
adc
cmc
mov
fidivrl
ja
mov
sub
repnz
add
push
lods
int
lahf
push
es
lods
and
inc
psrlw
mov
push
movsl
cltd
push
sub
mov
mov
test
sub
test
shll
mov
sbb
dec
xor
cmp
inc
xchg
and
push
stc
sbb
and
xchg
fstp
pop
jo
sub
xor
mov
adc
push
mov
fs
in
int
jo
sti
jle
sahf
loop
adc
shrl
mov
lea
mov
std
fistpll
push
cmc
stos
lahf
push
add
jne
ss
repz
sbb
mov
or
cwtl
add
mov
ja
movsb
pop
cmp
scas
fisubs
into
inc
dec
lahf
or
xchg
les
lret
adcl
xchg
adc
in
xchg
and
xchg
mov
mov
out
cmpsb
jge
add
mov
movsb
add
mov
ss
adc
int3
out
xor
add
jae
shlb
in
xlat
mov
pop
xchg
push
mov
out
outsb
cmc
fldenv
xchg
sub
icebp
xchg
dec
or
lret
shrb
xor
je
mov
ret
clc
not
test
sahf
lods
dec
xchg
adc
xor
sub
mov
xchg
insl
mov
rorb
or
mov
andl
push
cli
loope
aam
push
insb
aam
lcall
into
pop
pop
rcll
push
rcrl
fists
popf
loop
outsb
sub
jns
lret
push
mov
or
rorb
outsl
mov
inc
and
dec
aas
cs
sub
adc
sub
enter
stos
jg
xor
push
lods
dec
mov
xorb
sarl
pop
out
jno
add
push
movsl
scas
pop
sub
clc
sub
cltd
xlat
mov
xchg
jnp
imul
push
lea
and
test
pop
cld
xchg
lcall
sub
lahf
xor
sub
outsl
or
xchg
xchg
loope
cmp
outsb
push
pusha
cmpsl
cmc
ja
cld
jae
pop
popa
and
xor
xchg
sar
test
and
mov
mov
leave
shl
test
mov
iret
ss
push
and
or
push
inc
or
rorb
jae
fcoml
sbb
pop
or
and
in
sti
adc
fiadds
dec
sub
pop
in
sub
lods
test
cwtl
leave
mov
cmp
movsb
insl
test
add
jmp
jae
cmp
cld
cmp
mov
cmp
out
pop
neg
xorl
xchg
fmull
mov
inc
imul
arpl
sti
testl
inc
push
cmpsb
cltd
pop
inc
push
dec
lods
jae
aas
inc
scas
xchg
pop
bound
sahf
xor
jl
xor
out
shll
inc
ja
inc
mov
mov
inc
test
in
push
mov
mov
out
aad
outsl
mov
or
xor
testb
arpl
add
mov
mov
dec
repnz
leave
xchg
cmc
ficoml
xlat
divb
out
sub
push
push
insl
cmp
sbb
imul
scas
shlb
pop
fwait
imul
mov
inc
mov
int3
inc
mov
sbb
or
and
xor
es
imul
insb
dec
pop
hlt
push
jbe
cmp
cli
aam
fcmove
pop
das
cltd
mov
mov
arpl
inc
jecxz
dec
sbbl
push
mov
xor
push
faddl
call
iret
jnp
test
adc
mull
mov
cmpsb
int
mov
add
and
arpl
daa
and
push
mov
adc
addr16
push
inc
int3
adc
add
push
jno
sub
mov
test
or
repnz
mov
push
movsl
adc
mov
xchg
pushf
pop
sti
pop
std
sub
and
and
mov
pop
jae
mov
in
addl
fwait
addr16
or
inc
fstpt
xchg
dec
out
lods
ja
out
ljmp
inc
and
and
in
test
and
push
sbb
push
mov
ja
or
andb
fldcw
aaa
repnz
push
mov
shr
leave
sbb
icebp
test
adc
xor
fbstp
fdivr
and
cmp
lcall
sub
sti
xchg
es
mov
push
ss
sub
stos
sub
cmp
mov
and
push
xchg
ds
rcr
in
sub
add
xchg
movsl
fnsetpm(287
push
addr16
insb
cmp
sbb
and
outsl
cmp
lods
mov
nop
mov
xor
pop
inc
inc
xchg
rol
shr
sarb
cld
xor
outsl
fwait
or
ljmp
and
divl
stos
ljmp
lds
leave
push
sbb
sbb
pop
dec
mov
xchg
cmpsl
cmp
scas
sbb
dec
int
sub
mov
add
aam
jne
sub
cmpsb
ds
mov
out
xchg
adc
icebp
sub
or
fidivrs
pop
aas
lock
ja
loopne
xor
jno
enter
or
jecxz
jmp
andb
add
jns
fucomp
es
call
pop
mov
in
out
mov
rorl
outsl
sbb
mov
andl
pop
mov
mov
add
fs
mov
jmp
mov
out
test
subl
notl
ret
rcrb
mov
lret
push
push
push
add
add
inc
xchg
sub
pop
daa
mov
xor
outsl
push
sbb
aaa
fisubrs
and
pop
jmp
pop
cld
dec
adc
cmpsl
mov
and
dec
push
pushf
cmp
mov
gs
imul
cmp
scas
iret
outsb
push
mov
lods
ret
mov
arpl
loope
add
cmp
stc
pusha
and
leave
divl
lahf
sub
insb
mov
int3
jl
fidivrl
cmp
jno
pop
popa
fidivrl
aad
pop
mov
daa
insb
push
sahf
lret
sbb
mov
dec
sbb
imul
jnp
mov
and
dec
sub
xorb
fstpt
mov
jno
jecxz
push
jno
loope
rorl
sahf
sub
adc
lret
push
js
jge
xorl
test
add
inc
pop
mov
inc
pop
pop
and
je
xchg
aaa
add
andl
popf
ret
lcall
sub
fsubrl
push
inc
cmpsl
in
sub
xor
add
scas
pop
repnz
push
sub
imul
mov
prefetchwt1
mov
or
xchg
adc
jo
xchg
mov
and
mov
cmp
nop
ljmp
iret
vpinsrw
sub
and
xchg
mov
jecxz
iret
mov
frstor
sbb
push
sbb
stc
xor
test
in
inc
pop
lock
inc
into
rclb
mov
push
cmpl
push
daa
loop
leave
lret
in
mov
or
dec
jnp
sbb
add
inc
dec
adc
xlat
es
imul
mov
and
mov
in
dec
pop
cwtl
mov
xchg
jbe
cwtl
sbb
jnp
push
cmpsl
xchg
je
mov
pop
mov
and
xor
xchg
fnsave
xor
jecxz
loop
push
roll
subl
iret
out
cmp
ret
mov
sub
mov
lcall
mov
mov
sub
xchg
mov
scas
mov
sbb
sti
int3
dec
add
push
push
out
scas
repz
int
xchg
arpl
fsubrs
js
or
dec
jge
pop
rcrl
and
lods
das
fxch
add
mov
cmpsl
out
fldl
ror
cmp
dec
xlat
lret
aas
push
push
test
add
jae
stos
lcall
addr16
add
insl
sbb
pusha
adc
sbb
cwtl
lock
push
scas
ffree
fstl
mov
jle
je
xchg
les
pop
pop
cli
icebp
and
mov
jmp
push
push
dec
mov
cltd
xchg
mov
std
faddp
pushf
cmpsl
cmpl
or
mov
int
or
shll
and
dec
sub
or
cltd
pushf
rcrb
pop
idivl
dec
sbb
out
add
mov
cwtl
sahf
ret
mov
or
push
jns
mov
movsl
cmp
ljmp
push
sbb
je
and
in
mov
or
std
jge
cli
xor
rcrb
outsl
stos
cmp
inc
add
shr
fwait
jbe
push
stc
cmp
dec
inc
icebp
adc
xchg
mov
xchg
ja
cmp
adc
out
inc
xchg
out
jns
movsl
adc
sub
dec
mov
cmpsb
adc
int3
jg
sbb
daa
xchg
mov
addr16
xchg
mov
aas
in
sbb
pop
fistl
pop
shrl
jbe
sub
enter
fst
repz
lret
lods
jno
mov
xchg
fsubl
je
sbb
mov
shrl
popf
push
nop
enter
loop
cmp
and
and
sub
call
cmp
jmp
cmc
repz
pop
aad
and
xlat
jb
sti
lcall
lret
add
mov
jle
cwtl
and
jns
sbb
outsb
aam
xchg
pop
cmp
add
sahf
dec
add
or
xor
mov
daa
das
mov
xlat
insl
imul
mov
ljmp
fsubr
repnz
mov
pop
call
data16
hlt
rorb
ljmp
addl
mov
push
mov
test
push
imul
xlat
or
fwait
pop
cmpsb
xchg
lods
add
fbstp
inc
ds
cwtl
adc
fisubrl
push
sbb
adc
sbb
stc
cmpsl
mov
or
cmp
fwait
and
or
push
les
dec
mov
iret
pop
or
dec
and
or
cwtl
fs
inc
test
frstor
sti
mov
aaa
loope
test
fldl
jle
mov
dec
imul
xlat
pop
mov
push
push
fistpl
scas
sub
cmpsl
xchg
repz
xchg
adc
cmp
loop
test
mov
jns
les
movsl
fadds
insb
lret
hlt
pushf
mov
mov
repnz
insl
test
aas
fldenv
test
push
mov
nop
adc
mov
int3
out
jbe
sub
jb
inc
movsl
pop
mov
cmpsb
out
loope
stos
cmp
mov
testl
sahf
mov
cmp
jmp
or
lea
std
frstor
mov
inc
in
test
jo
dec
movswl
aas
std
adc
int3
and
test
mov
jne
cmp
les
js
out
add
ss
jecxz
adc
dec
popf
sbb
pop
push
or
lcall
lret
test
in
cmp
lock
loope
ret
loope
iret
inc
fisttpll
mov
push
ljmp
movsb
mov
jbe,pn
and
xor
pop
mov
sbb
mov
dec
pop
mov
jp
push
das
sbb
cmc
lret
clc
cli
jmp
dec
lcall
xor
out
xchg
sub
push
inc
stos
cmc
inc
lods
in
les
inc
sbb
aas
push
fcompl
xor
lods
dec
scas
push
sbb
cmpsb
push
scas
vucomiss
repz
cli
f2xm1
test
xchg
sbb
pusha
repnz
cmp
and
fldenv
dec
push
cwtl
rorl
adc
sub
mov
lods
addr16
mov
push
add
pop
insl
stos
jbe
xor
cmp
sbb
popa
and
xor
mov
iret
movsl
int
mov
subl
or
inc
inc
fdiv
inc
add
out
ja
lcall
push
jae
ds
jb
jmp
bound
push
and
mov
sub
cmp
sti
cli
into
insb
flds
rcrb
sahf
push
arpl
iret
cmp
loope
ret
cmpsb
push
xchg
and
jne
mov
scas
pop
dec
scas
je
add
mov
sbb
sub
mov
scas
loopne
mov
fnstcw
sub
xchg
outsl
mov
xchg
mov
or
mov
insb
xor
dec
xor
jne
xor
or
or
jns
test
mov
iret
mov
or
lea
mov
jb
adc
iret
push
incb
rsqrtps
sub
or
xchg
dec
xchg
xor
pxor
mov
rclb
adc
arpl
dec
iret
cs
std
xchg
sbb
mov
in
aas
std
subl
sbb
xchg
dec
in
push
push
sub
ljmp
xor
and
mov
jae
push
mov
jmp
xchg
mov
mov
ret
push
lret
and
inc
es
stos
stc
fldcw
add
loope
pop
int
test
into
sbb
pop
or
jbe
adc
and
xor
out
sbbl
hlt
push
mov
jecxz
insl
outsb
xor
je
and
jnp
inc
jns
push
bound
lock
lods
sbb
cs
push
leave
popf
je
pop
jl
add
das
xor
fs
dec
call
inc
rcll
mov
push
mov
and
push
sbb
cwtl
scas
aam
sub
push
shlb
cli
fs
ds
mov
jg
leave
std
dec
sub
jno
std
popa
jbe
push
mov
in
adc
sarl
call
cltd
fwait
or
aaa
popf
pushf
jno
push
fwait
and
call
popf
sbb
je
pop
adc
xchg
mov
push
jnp
cmpsb
fs
int3
mov
into
aaa
notl
dec
ret
mov
xchg
in
pop
adc
jmp
sbb
rcrb
in
sub
test
xor
int3
sub
jg
mov
mov
mov
ss
shl
mov
aad
mov
ss
jge
movsb
cs
shrl
mov
jmp
cmp
sub
xor
ds
dec
aad
jle
movsb
iret
or
or
mov
dec
popa
add
flds
or
add
mov
jge
push
jbe
or
aad
cmp
adc
out
shrb
insl
pop
mov
and
xor
push
faddl
fidivs
add
cmp
jo
inc
rorb
into
mov
jo
lcall
adc
adc
dec
out
sub
cmp
or
iret
or
bswap
aaa
pop
sub
jae
sbb
mov
cli
cmpsl
push
aas
test
je
mov
sbb
call
inc
stos
add
adc
ds
adc
stos
fsub
clc
jl
push
je
sub
jo
insb
stos
sub
ljmp
test
xlat
mov
dec
pop
cwtl
push
data16
dec
cmp
dec
and
out
dec
js
and
pop
aam
hlt
adc
aas
dec
xchg
insl
dec
xchg
and
lahf
andl
mov
sarb
lcall
mov
lods
sub
or
mov
fistpl
popa
sbb
push
ja
jbe
popa
sbb
adc
pusha
leave
les
add
ss
test
shrb
xchg
add
dec
in
push
jecxz
inc
inc
ret
sahf
rcrb
adc
push
mov
mov
push
mov
js
jae
in
pop
sub
push
push
fisttpll
out
xchg
push
mov
stc
clc
sahf
pop
add
shlb
mov
scas
add
inc
ret
add
popa
mov
cs
cmp
rolb
movsl
negl
fnstenv
in
jecxz
cmp
push
les
invd
xchg
jb
xchg
dec
lret
mov
lea
mov
out
xchg
mov
or
pop
arpl
imul
and
mov
and
add
sub
in
sbb
out
mov
std
imul
in
stos
negb
andl
fildl
sahf
aam
lcall
outsl
jl
jge
push
dec
aas
xlat
pop
xchg
xchg
test
dec
loopne
pop
and
mov
sub
mov
or
fstl
mov
adc
dec
lret
push
pop
scas
cltd
jp
repz
fsub
xchg
jnp
stos
imul
push
lock
or
stc
insl
sti
jne
aam
add
inc
mov
scas
mov
insb
dec
and
dec
jne
les
cld
mov
repnz
arpl
popa
push
xchg
sahf
gs
mov
pop
mov
cmpsl
out
rolb
pop
rorl
cmpsl
ss
sti
adc
cmc
dec
imulb
mov
inc
add
ds
or
adc
sbb
sbb
call
test
ss
and
dec
enter
xchg
in
stos
inc
jge
sbb
jne
into
mov
ja
clc
mov
and
jp
test
xor
out
lock
xchg
lods
lcall
mov
pcmpgtd
mov
and
adcb
out
ret
rcrb
and
lods
cltd
addr16
cli
mov
stos
scas
xchg
adc
mov
test
push
repnz
and
cmp
mov
imul
pop
sbb
repz
lcall
or
mov
or
mov
push
inc
mov
test
stos
les
adc
stos
dec
add
mov
shll
mov
stos
andb
push
sub
fisubrl
mov
cmpsb
inc
sbb
loope
mov
aas
dec
sub
shll
enter
and
xlat
fimuls
ret
push
sub
dec
cmp
adc
lds
nop
in
pop
pop
sub
jge
add
cmp
or
cmp
cmp
dec
repz
loopne
pushf
fnsave
adc
sbb
mov
xchg
rcrb
lahf
sub
icebp
or
sbb
xchg
ret
int3
ret
lods
mov
test
mov
mov
mov
test
push
rorl
or
aaa
add
aam
pushf
pop
loope
sub
mov
std
mov
out
xchg
rcr
sbb
cmp
push
adc
out
or
xchg
mov
call
jns
pop
rolb
outsl
loop
sub
sub
push
cmp
fcomps
js
jo
ja
add
cmp
aaa
pop
lret
iret
dec
jno
push
push
cwtl
aas
lods
loope
mov
int
aaa
cmpsb
cmp
xchg
mov
inc
inc
cld
lea
movsb
mov
pushf
ja
out
mov
jg
pop
push
fs
lea
lret
or
adc
rolb
pop
or
lcall
in
pushf
cmp
xchg
loopne
jp
lods
icebp
cmc
lret
xchg
mov
shlb
loope
test
cltd
adcl
aad
push
shr
out
mov
mov
int3
mov
adc
imull
and
mov
ds
fdivrl
and
lcall
data16
xor
push
mov
pop
xchg
shlb
rolb
mov
lds
out
and
or
cmpsb
push
insl
cld
jns
xor
push
cld
into
sub
lock
pop
das
sub
dec
mov
sub
or
xchg
ss
lret
adc
insb
mov
jg
sbb
sbb
jno
rclb
xor
sub
js
div
aam
testb
jmp
das
arpl
mov
cmp
mov
jbe
inc
xchg
in
mov
imul
inc
mov
xchg
inc
out
sbb
mov
push
in
outsb
dec
jae
cltd
and
mov
lock
shlb
loop
lds
ljmp
add
fs
xorb
xor
cmp
dec
push
sub
ja
subl
aam
pop
add
pop
mov
jnp
adc
in
pop
jae
addl
push
sbb
rep
or
subl
cmp
push
and
cli
scas
dec
jmp
movsb
push
shr
jb
sub
xor
mov
inc
inc
pop
repnz
movsl
cli
dec
shrl
push
pop
mov
inc
aaa
xor
sub
dec
das
gs
sbb
mov
test
jmp
pop
int3
pop
jl
mov
sub
jo
int3
inc
lock
sahf
movsl
ds
push
lock
pushl
and
sbb
test
mov
fnstenv
push
add
rcrl
jne
js
sarb
cmp
ss
lea
gs
nop
sar
add
dec
loope
in
aas
mul
popf
daa
imul
popf
or
sbbb
sbb
in
shrb
loop
inc
jne
ret
fistl
fst
jo
popl
xchg
rcll
fildl
imul
mov
or
or
xchg
stos
dec
cmp
adc
mov
jne
out
jecxz
loopne
shrb
sahf
outsb
pop
lea
std
sub
fidivrs
movsl
jmp
outsl
inc
test
enter
pushf
mov
sub
fsubr
in
mov
sbb
insl
sbb
adc
dec
in
pop
mov
jo
jecxz
lahf
push
test
push
fisttps
sbb
out
out
cli
in
in
dec
inc
or
cmp
pusha
sub
push
scas
fs
lds
mov
add
mov
pop
movsl
or
cmp
and
jb
or
repz
shrb
jae
enter
aam
pop
out
stos
and
testl
hlt
jbe
gs
dec
fstpt
and
push
pusha
aam
aaa
stos
dec
and
mov
xchg
cmp
adc
sbb
das
lret
rclb
xchg
lahf
leave
outsl
imul
cmp
push
inc
aaa
cmp
popa
aas
into
stos
gs
or
cwtl
mov
jmp
int3
xchg
and
sahf
pop
xor
out
icebp
mov
outsl
mov
push
ss
loope
push
jno
hlt
mov
imul
jg
frstor
leave
cs
sub
stos
pop
sub
inc
aam
lock
and
jbe
fisttpll
out
pop
jnp
mov
xchg
cli
mov
outsl
inc
push
in
cmp
adc
pop
rcrl
xchg
ret
jns
pop
jmp
call
or
lret
scas
test
pop
bound
test
imul
xchg
mov
das
jge
and
push
mov
lahf
in
ret
push
xchg
mov
aad
inc
or
adc
call
ficoms
scas
gs
fidivl
xor
mov
out
dec
and
ja
ljmp
fcmovne
push
data16
lods
or
mov
inc
push
in
xor
shlb
jne
fidivl
xchg
cmp
cmp
jg
in
xchg
in
mov
les
xor
test
add
xchg
sub
push
das
loop
and
xor
xlat
inc
cmpl
js
out
repz
cli
out
in
dec
fs
lds
cmp
rorl
dec
fs
hlt
xor
cmp
cmp
adc
mov
adc
sub
inc
pop
mov
icebp
jo
aas
stc
or
loope
rcr
adc
dec
add
push
sub
fdivr
or
scas
push
pop
mov
pop
jae
mov
imul
not
fisttpll
sbb
fsts
pop
in
push
push
sub
inc
jnp
cld
aam
test
mov
rolb
inc
mov
popf
and
pop
pop
adc
shlb
push
xchg
daa
push
daa
mov
rcrb
pop
int3
aas
xchg
push
cltd
cmp
mov
scas
push
xchg
aaa
or
jecxz
xor
xor
push
popf
pop
jmp
cld
jle
mov
test
push
jnp
mov
ja
xlat
dec
addb
inc
pop
push
jg
mov
call
sbb
sahf
sti
cmc
pop
filds
in
add
je,pt
jp
shl
cmpsb
inc
lods
rcll
mov
les
shrl
adc
fmull
push
addr16
push
addr16
lretw
test
push
outsl
mov
popa
enter
fildll
jbe
clc
jb
push
or
push
in
sub
mov
cmc
adc
mov
dec
sti
dec
iret
mov
out
jo
pop
lret
or
scas
inc
bsr
shlb
shl
push
sbb
jecxz
xchg
sti
test
imul
push
cmp
lahf
jae
out
into
and
mov
cmp
mov
faddl
jns
push
jbe
push
or
jecxz
hlt
push
in
fiaddl
xor
pop
pop
cmpsl
inc
mov
sbb
jns
lods
push
popa
pushf
test
jb
aaa
insl
push
jg
adc
test
dec
and
js
push
ficoms
outsb
sti
or
int3
icebp
xor
jo
push
mov
adc
dec
int
mov
mov
jp
shl
inc
pop
add
pop
orl
mov
movsl
jae
inc
rolb
sbb
add
push
inc
cmpsb
std
sbb
movsb
repz
push
arpl
jae
lods
adc
icebp
pushf
jge
subl
fucom
jae
add
cmp
mov
ret
adc
das
sub
and
fidivl
push
rcll
inc
jae
fidivl
sub
cltd
in
xor
mov
push
xor
mov
imul
rolb
shrb
lret
and
outsl
inc
sub
inc
xor
pop
lcall
cld
sub
int3
dec
mov
ljmp
mov
inc
xchg
addr16
mov
push
addr16
test
cmpsl
out
adc
fistpll
fbld
aam
cs
cmpsb
mov
or
xchg
xchg
mov
aam
ss
mov
mov
pushf
inc
rcrb
cmpsl
loopne
out
xor
repz
subb
and
mov
adc
ror
push
jo
notb
ja
outsl
inc
stos
mov
or
icebp
push
ss
addr16
in
icebp
js
outsb
lcall
ja
outsl
pop
cs
rcr
pop
jg
or
adc
push
idivb
nop
pop
cmc
push
into
mov
insb
stos
aaa
push
fiadds
and
inc
mov
aas
repnz
lahf
insb
loop
out
dec
fists
mov
pop
insb
xchg
jnp
cwtl
pop
mov
addl
ret
jae
into
or
cmp
insb
cli
pop
data16
daa
test
or
lods
inc
pop
push
sub
in
adc
or
lods
sub
daa
jmp
bound
jge
jo
jle
lcall
fcoms
loop
mov
stos
and
rcrb
mov
insb
std
mov
clc
sahf
orb
mov
adc
push
mulb
mov
push
imul
lods
bound
pop
xor
outsl
out
repz
xor
mov
xor
jl
mov
xchg
xchg
loopne
stc
xorl
add
shlb
ja
mov
dec
pop
push
pop
and
cltd
cwtl
out
in
sahf
and
xor
popf
in
mov
fiadds
or
xor
faddl
int
sbb
call
sbb
stc
outsl
lahf
in
lods
jnp
push
push
xor
xchg
call
xchg
dec
addr16
xor
in
outsl
and
sub
jl
cmpsl
mov
jae
inc
lds
xor
or
cmp
or
push
mov
mov
push
pop
std
in
cs
lea
pop
mov
pusha
rol
inc
lods
popa
icebp
sbb
scas
mov
rorl
inc
dec
cli
mov
test
pop
nop
jecxz
rcl
imul
jno
filds
jg
shlb
inc
inc
mov
mov
sbb
mov
mov
xchg
lds
mov
clc
adcb
mov
mov
fisubl
cs
lret
test
or
sub
pop
cltd
lcall
and
xchg
or
xchg
mov
or
pop
adc
dec
cmp
push
hlt
jbe
inc
fisubl
pushw
pusha
jle
sub
xchg
inc
fildl
adc
loope
and
cmpsb
jecxz
js
movsb
addr16
inc
imul
sub
out
pop
and
js
lds
inc
add
nop
dec
sub
xchg
lret
pop
jmp
xorl
xchg
in
loope
mov
inc
cli
rolb
or
xchg
loope
shll
xorl
arpl
inc
inc
sbb
dec
mov
loope
cli
fstl
adc
rcrl
stc
and
jmp
call
sbb
movb
cs
test
xor
dec
adc
aam
mov
jge
push
fstps
pop
into
xchg
adc
pop
sahf
xor
jle
and
les
mov
adc
leave
or
sarb
push
das
mov
or
xchg
addr16
pop
addl
shl
imul
das
cli
scas
inc
mov
mov
xor
or
add
mov
les
fmull
cli
fnstenv
jmp
in
ds
dec
sahf
push
popa
push
inc
push
xchg
into
dec
dec
xor
add
lods
popf
dec
outsl
dec
shrb
xchg
sub
lds
mov
inc
stos
iret
lahf
dec
test
loope
jp
into
and
insb
daa
mov
xor
andb
incl
insb
outsl
inc
pop
adc
pop
addr16
adc
inc
mov
sub
rorb
push
push
cmpsb
and
pop
add
negb
cmpsl
xchg
jmp
adc
lds
mov
inc
push
cmp
dec
popa
fcompl
dec
mov
mov
dec
popa
add
out
inc
xchg
ret
mov
lahf
cmp
das
sbb
mov
dec
inc
sbb
dec
int
or
mov
in
out
xor
inc
mov
push
push
jae
push
xlat
inc
daa
jle
mov
jmp
sbb
dec
in
fstpl
jg
out
test
push
mov
fidivl
iret
push
addr16
aam
or
cmp
mov
sti
xorl
pop
xor
add
test
les
nop
xchg
xchg
cmp
mov
mov
mov
das
shr
mov
sub
ficoms
xor
add
shlb
and
leave
das
mov
cmpsl
data16
aam
daa
aad
sub
jne
pop
and
rcrb
outsb
xchg
xorl
mov
dec
sbbl
ja
aas
mov
cltd
repz
push
loope
inc
out
sub
insl
rcrb
mov
pusha
int3
push
mov
or
sahf
mov
test
inc
into
cmp
xor
push
insb
fisubs
cmp
pop
adc
pop
push
outsl
insb
hlt
das
dec
jns
out
cmp
cmp
jge
test
jnp
pop
dec
xchg
std
mov
ret
movsl
in
mov
mov
sbb
lret
sub
mov
xchg
sbb
daa
mov
mov
add
mov
sbb
pusha
and
push
lahf
loop
xchg
test
or
push
and
imul
dec
push
sbb
mov
pop
push
testb
dec
outsb
and
add
dec
cmpsb
pop
sub
mov
dec
xchg
sbb
adc
leave
ficomps
mov
std
jns
mov
cmp
scas
cli
stos
imul
call
mov
sbb
inc
fmul
repz
mov
add
mov
lahf
loope
pop
aad
mov
sbb
mov
inc
sub
mov
mov
in
xchg
stos
mov
jmp
mov
fstps
aam
in
fs
dec
add
xor
fdivrl
xchg
push
shrl
dec
test
adc
sub
test
pop
push
ficomps
pop
out
pushf
sub
int3
int3
sub
popa
push
loopne
mov
fisubl
jb
test
inc
sub
imul
pop
das
rclb
add
dec
sub
lret
add
enter
mov
push
arpl
dec
jb
mov
je
testb
push
or
movsl
fcoml
dec
inc
faddl
adc
inc
adc
adc
lods
adc
out
sti
mov
xor
sbb
int3
lock
fwait
sbb
es
test
add
pop
rorl
mov
inc
xchg
xchg
xchg
inc
add
push
sub
add
sbb
fdiv
not
add
lret
outsl
mov
pop
sbb
cmp
xor
ret
je
sub
sbb
sbb
xchg
mov
outsb
call
outsl
inc
mov
mov
cmp
mov
adc
sbb
shlb
sbb
imul
mov
test
push
cmp
mov
sbb
iret
fcomi
push
xor
or
xor
cmp
cmpsl
mov
jb
in
scas
cs
test
pop
sarl
xchg
mov
in
js
scas
scas
test
fstl
test
sahf
sbb
outsb
adc
and
ficomps
std
pop
mov
in
xchg
mov
mov
xchg
xor
hlt
mov
insl
xchg
mov
shl
pushf
fisttps
add
subl
mov
mov
insb
jmp
iret
fnstsw
mov
fisttpll
icebp
call
and
in
insl
xor
and
mov
sub
iret
cmp
pop
scas
hlt
dec
add
jo
mov
mov
and
cld
mov
lret
lods
mov
dec
pop
pusha
addr16
fs
ret
jmp
fisubl
outsb
cmpsb
adc
pop
and
inc
mov
push
pop
inc
pop
iret
aam
jg
add
or
push
mov
pop
xchg
xor
mov
in
repz
cltd
lock
or
sub
popa
dec
jae
xchg
arpl
call
inc
xchg
cmpsb
test
js
xorl
add
pop
or
test
lock
cmc
stc
mov
cld
in
jns
in
mov
inc
call
xor
lea
daa
lret
ja
mov
xlat
push
int
sbb
mov
cs
frstor
mov
enter
lds
inc
in
lahf
cmpsb
out
cmp
movsb
loopne
mov
aaa
push
clc
fiadds
pop
lret
repz
je
inc
leave
adc
jbe
mov
add
inc
imul
pop
in
in
cli
jnp
push
insl
or
ljmp
jno
mov
enter
xorb
out
jne
mov
lret
xor
jnp
fisubs
rolb
pop
jl
adc
cmp
mov
int
mov
and
cmp
ds
or
or
xchg
mov
lods
cmp
incl
jle
jae
push
sbb
loope,pt
cmp
xchg
xchg
fwait
cmp
mov
adc
jae
add
aaa
adc
mov
cltd
lock
cmp
pop
mov
call
push
adc
and
xor
shlb
push
sbb
fistpll
test
inc
pop
mov
imul
cs
fiaddl
les
xor
mov
ret
pop
les
mov
loopne
pop
popf
jg
pop
fistps
or
jp
xor
jmp
sub
scas
pop
ret
push
cmp
cs
int3
lods
push
idiv
enter
fwait
movsl
stc
repz
hlt
icebp
stos
sub
jae
daa
leave
fdivs
dec
neg
mov
inc
mov
add
sbb
cmp
push
pushf
sub
mov
mov
add
ss
push
xchg
repz
ret
xchg
pop
or
sahf
enter
mov
scas
mov
mov
rcrb
loopne
aaa
add
inc
bswap
push
cmp
push
cmpb
bound
rcrb
lret
cmpl
loopne
dec
int3
jns
mov
pusha
mov
mov
push
setne
mov
jle
mov
cltd
movb
sbb
or
jle
mov
push
andb
test
push
push
into
sub
pop
cmp
iret
pushf
mov
adc
mov
xchg
cltd
movsl
lds
jne
or
mov
jmp
add
je
adc
adc
lret
xchg
adc
xor
dec
cmp
sbb
inc
add
cmp
clc
jns
pop
mov
movsb
hlt
mov
sub
pop
ss
jne
in
and
test
xchg
repz
std
leave
pop
dec
xor
movsl
jmp
adc
cwtl
shlb
lock
sbb
adc
and
adc
sbb
xchg
mov
lds
add
adc
lds
and
repnz
pop
cmc
or
insb
and
mov
pushw
or
adc
outsl
xchg
sbb
sub
xor
cli
sbb
cwtl
xchg
mov
sbb
in
add
dec
sti
ret
sub
roll
stos
iret
pop
repz
aaa
mov
insl
mov
sahf
and
popa
or
push
call
imull
or
xchg
mov
jecxz
adc
xchg
int
mov
dec
mov
dec
into
ret
popa
pop
dec
aam
dec
orl
out
mov
sbb
out
sub
xchg
pop
push
cmp
jl
andl
sub
jnp
mov
sub
adc
pop
push
mov
fdivs
es
sbb
fildll
shll
imul
icebp
mov
popa
sbb
and
les
arpl
pop
aam
data16
das
pop
mov
inc
aas
mov
jb
into
or
xchg
push
call
loopne
mov
repz
imul
fildl
das
inc
or
cmp
sbb
fnstcw
mov
pop
out
xchg
dec
push
sbb
cmp
sub
hlt
imul
aad
sti
sbb
cmp
rcrb
divl
jmp
cmp
and
in
xchg
fbstp
rorb
push
cmp
adcl
xor
arpl
adcl
mov
andl
and
stos
jg
pop
xchg
in
push
ja
cmpb
pop
mov
popf
inc
fstps
dec
xor
mov
test
push
es
mov
ja
jle
cmp
jno
sbb
orl
mov
lcall
aad
jbe,pn
pop
xor
into
adc
test
xchg
test
lock
call
push
mov
sti
jbe
push
jp
cmp
mov
shll
pop
adcb
or
pop
inc
repnz
call
outsb
add
out
xchg
mov
xchg
imul
cvttps2pi
divl
push
adc
push
inc
pusha
mov
sti
mov
popa
mov
scas
ret
and
jne
aam
mov
pop
add
add
js
cmp
loop
and
movsb
imul
insb
pop
push
push
mov
dec
pop
pop
add
cld
sbb
dec
xchg
call
int
xor
or
dec
mov
daa
xor
daa
sahf
xor
sbb
movsb
or
mov
push
sbb
pusha
lock
xor
xchg
pop
xor
jmp
lods
adc
mov
shrl
mov
int3
cmpsl
push
push
fcoml
lret
cmp
fdivs
lahf
in
pop
shll
add
sbb
and
imul
and
imul
popf
inc
mov
jp
xor
pusha
int3
insl
mov
push
adc
and
pop
sbb
bound
xchg
test
push
mov
mov
fildl
or
pop
loop
mov
lcall
test
leave
sub
aam
outsb
test
loope
pusha
pop
and
lock
inc
ljmp
arpl
idivb
cmp
rclb
jae
mov
pop
shlb
icebp
ljmp
mov
sbb
pusha
cwtl
addb
mov
pop
stos
dec
gs
mov
xchg
in
pushf
mov
movsl
mov
push
rolb
push
call
push
sahf
inc
cwtl
insl
jle
std
add
xor
pop
hlt
in
into
lock
or
outsb
lods
sbb
add
pop
jmp
sbb
test
cld
push
int
xchg
mov
mov
lahf
int3
jg
lods
dec
out
push
jb
sub
sbb
rolb
out
icebp
mov
jb
in
sbb
movsl
testb
icebp
fcmovu
inc
add
dec
dec
dec
mov
jno
xchg
in
cmpsl
test
mov
iret
mov
popf
lret
add
icebp
popa
cmp
xchg
lcall
sbb
pop
aas
or
cmp
shlb
movsl
repz
iret
pop
cmp
fcmove
pop
or
lahf
test
hlt
adc
jg
arpl
push
and
cmp
int3
shll
lret
js
push
aas
shrb
std
cmp
cmpsl
fucomi
push
add
js
sarb
and
addr16
mov
xor
xchg
stos
cs
bound
mov
mov
or
cli
lret
cwtl
push
mov
jno
cs
mov
mov
mov
xor
rsm
or
sbb
aad
xchg
nop
xor
daa
addr16
daa
aad
push
hlt
mov
pop
cmp
hlt
inc
push
jns
mov
xchg
ret
stc
jb
stc
lods
mov
cmpsb
jmp
push
cli
mov
ret
cltd
sbb
and
lret
minps
jno
cwtl
mov
test
mov
xor
adc
add
xor
mov
pop
add
scas
pop
inc
push
inc
or
fildl
jmp
in
into
adc
adc
nop
repz
mov
add
in
jl
mov
dec
push
iret
and
mov
repnz
mov
mov
decl
mov
jbe
pushf
scas
mov
negb
pop
pusha
out
jae
push
test
nop
xor
cmp
jae
ss
hlt
aaa
xor
shll
roll
mov
rcr
lea
push
mov
adc
cmp
mov
mov
pop
add
adcb
add
jge
sub
jbe
sbb
inc
lahf
out
xchg
mov
cmp
stc
push
dec
mov
mov
call
push
dec
push
adc
cmp
cwtl
dec
cs
or
addr16
stc
int3
loop
pop
mov
mov
mov
ficompl
mov
rolb
incb
cs
add
jecxz
adc
pop
clc
std
jb
pop
inc
xor
scas
pushf
scas
dec
outsl
fmull
adc
xlat
xor
insl
or
xor
cmp
push
xchg
rcrl
pop
cmp
push
clc
stos
dec
ss
mov
ss
add
or
mov
lret
imul
nop
lahf
cld
ljmp
sub
sub
push
sub
xor
and
mov
lahf
xor
stos
jno
bound
mov
push
ja
insb
movsb
jl
lcall
add
dec
cmc
cli
pusha
sub
pop
xchg
jp
mov
mov
jns
cmp
lock
dec
xchg
leave
xor
je
push
or
and
ret
aad
xor
movb
dec
fwait
pop
stc
pop
mov
jnp
xchg
or
jg
mov
mov
and
js
leave
std
xchg
xor
sub
sub
mov
jae
icebp
lods
and
mov
daa
jns
inc
add
cmpsb
inc
ret
sti
lea
js
stos
xchg
xchg
fidivrs
mov
sbbl
in
add
setno
roll
loope
inc
cmpsl
es
pop
in
xor
dec
pop
cmp
jno
mov
jo
push
push
movsb
out
cmp
pop
mov
vsubpd
adc
mov
adc
ret
cmp
rcrl
xchg
mov
ret
out
repz
lret
xor
mov
cmc
push
out
or
xorb
xchg
rcrb
add
cmc
in
lret
jb
out
inc
mov
pop
mov
or
or
and
fisttpll
in
and
sbbl
outsb
mov
lret
das
fs
cmpsb
mov
or
movb
dec
and
loop
jbe
push
mov
imul
cmp
push
mov
ret
xor
ljmp
mov
cltd
scas
leave
clc
xchg
aad
leave
movsl
sbb
negb
iret
jae
imul
sub
add
xchg
lret
mov
lret
sbb
xchg
pop
fcmovnb
pushf
cs
hlt
cmpsl
mov
shl
or
es
div
mov
or
aaa
jns
jle
clc
aad
push
push
std
das
cltd
int
inc
cmp
jl
orl
sub
mov
ss
lock
sbb
add
fmull
inc
das
push
add
pop
das
mov
mov
jae
push
stc
jecxz
adc
addr16
push
pop
mov
jmp
jmp
jmp
ret
push
or
cmp
dec
je
ret
fldl
xchg
xchg
outsb
add
js
scas
into
mov
scas
xor
test
push
std
pusha
fcoms
xchg
loopne
ret
iret
jae
push
cmp
shrl
iret
int3
orl
bnd
das
dec
and
scas
adcb
sbb
xor
xor
push
int
rcrb
fdivrs
mov
in
cmpsl
inc
cld
inc
sub
jl
enter
sbb
popa
adc
dec
cmp
and
sbb
in
loop
out
push
or
inc
in
mov
pop
ja
iret
pop
movsb
fiadds
jne
jb
or
mov
and
test
jp
jle
mov
xor
add
cs
test
sub
dec
jb
fstpl
or
cmpsb
fistpll
xchg
mov
and
push
fmuls
add
inc
cld
jl
js
test
in
data16
sahf
es
pop
pusha
hlt
jns
dec
sbb
inc
sarb
movsl
push
fsts
xor
and
jb
lds
mov
sub
push
fs
add
dec
test
daa
adc
jle
ds
faddl
or
sub
adc
aam
bswap
imul
mov
sarl
or
in
mov
push
adc
fisttpl
xchg
xchg
fisttpll
push
mov
and
push
jge
sti
mov
imul
add
jne
rolb
mov
pushf
inc
shrl
inc
rcrb
lock
dec
jne
out
jl
test
rep
loope
movsb
cmc
pop
adc
and
xorb
aas
mov
inc
jmp
inc
mov
pop
sti
pop
mov
inc
and
push
mov
jns
jmp
imul
pop
or
mov
icebp
cmp
or
adc
sbb
cs
fdivs
mov
adc
stc
idiv
mov
data16
push
loop
cmpsb
iret
cmp
out
jl
sub
outsb
test
test
daa
push
ja
in
popf
sub
inc
testl
rorb
pop
or
cmpsl
cltd
add
in
xchg
and
dec
jg
loopne
ficoms
fbstp
mov
mov
jecxz
push
scas
dec
test
ds
mov
sub
push
jne
sub
xchg
jbe
xor
adc
jg
aaa
jae
sub
daa
pop
in
fdivs
addr16
fwait
int
adc
sub
sarl
inc
cmp
ja
sahf
fildl
inc
lahf
mov
mov
fisttps
adc
dec
arpl
andl
pusha
xchg
aam
ss
and
push
icebp
mov
xlat
enter
aam
lahf
dec
jae
and
mov
gs
imul
mov
pop
fsubr
dec
fists
cmpsl
or
test
xchg
mov
inc
adc
dec
fwait
pop
jecxz
mov
xchg
ds
cmp
mov
stos
or
aas
mov
mov
inc
push
cmp
out
cld
sub
fidivrl
stc
mov
xchg
inc
lock
lcall
rolb
into
ss
dec
popa
inc
insl
jl
or
out
or
ret
pop
mov
sahf
pop
out
loopne
xchg
icebp
mov
xor
push
fidivrl
mov
cmp
inc
lret
cmp
mov
mov
imul
cld
nop
xor
je
add
mov
cs
notl
nopl
push
push
pop
dec
andb
sub
push
adc
aad
inc
in
mov
insb
notl
pop
pop
jne
mov
loop
ljmp
push
push
pop
jle
das
call
cmp
or
repnz
lods
xchg
faddp
or
in
dec
imul
insb
cmp
in
nop
scas
jne
push
iret
push
ret
fwait
xchg
subl
outsb
jg
int
xrelease
xchg
mov
in
mov
or
xor
sub
shr
ret
sub
hlt
push
lahf
cmp
into
orl
mov
adc
lahf
lods
adc
cmpsb
xchg
dec
insl
mov
sub
mov
iret
jbe
rcll
dec
and
dec
sarl
xchg
mov
aaa
dec
pop
sti
hlt
aam
int3
sbb
stos
add
mov
and
ret
mov
insb
xchg
push
push
dec
out
lds
jne
je
scas
aad
inc
cwtl
mov
fists
add
sarb
imul
repz
jnp
adc
sti
adc
mov
jl
stc
ret
scas
jp
daa
sub
pop
add
lock
sub
enter
add
inc
fldl
mov
call
insb
jns
mov
jnp
and
call
cltd
lods
xor
xchg
jnp
enter
cmp
filds
push
icebp
decb
jb,pt
sbb
cli
inc
pop
dec
fisttpll
jne
loope
push
jb
ror
ja
sar
jg
sbb
cmp
sbbb
sbb
jae
mov
test
shll
push
inc
push
sbb
notb
dec
mov
dec
adc
xchg
mov
fistpl
loopne
cmp
data16
cwtl
and
mov
loop
stos
mov
data16
sarb
pushf
sbb
fmull
sbb
out
mov
test
push
ljmp
test
mov
sub
dec
jmp
adc
jno
jle
fidivrs
movsl
cmp
shr
imul
rclb
aas
mov
cmp
lds
inc
push
sub
adc
add
jp
lods
adc
add
push
jge
rcr
dec
pop
jb
fbstp
mov
push
pop
push
push
xlat
cmp
adcl
dec
jb
daa
jmp
sub
call
jae
sahf
shlb
andb
adc
das
mov
arpl
mov
xor
pushf
cmp
jb
shll
adc
push
clc
sub
repnz
mov
push
inc
xchg
pop
cmpsb
ja
sar
jnp
xchg
sub
test
out
cltd
xor
ss
and
push
and
aam
xor
ret
inc
add
sbb
cmpb
or
push
sbb
stc
mov
rcr
push
out
data16
cmp
rcr
inc
shlb
and
xchg
or
mov
fwait
add
ja
and
out
and
dec
stos
cltd
stos
stos
imul
stos
call
jl
or
xor
test
incl
dec
xchg
ljmp
sub
je
es
mov
push
mov
mov
sub
clc
dec
lock
std
rcpps
inc
fst
inc
leave
xor
mov
test
loope
dec
hlt
adc
leave
xorl
cmpsl
push
das
neg
gs
mov
jno
push
fmul
add
roll
push
pop
fwait
imul
xchg
dec
push
add
adc
sbb
mov
js
xchg
jae
mulb
mov
int
out
pop
inc
sti
mov
xchg
jge
xchg
and
fwait
sub
mov
fiaddl
push
mov
pop
stos
movsl
insb
gs
cld
ret
pop
lods
mov
andb
mov
xor
push
divb
fistpll
dec
clc
call
add
dec
mov
bound
dec
pop
mov
addb
inc
xchg
loopne
popf
add
in
shll
sub
lahf
mov
push
or
pop
mov
es
mov
out
scas
into
loopne
push
mov
inc
jns
inc
push
jno
int3
push
or
cmp
mov
call
xor
inc
enter
pop
mov
pusha
add
repnz
aaa
mov
mov
push
repnz
jno
mov
imul
jp
mov
or
inc
mov
pop
sub
pop
idiv
fdivrl
inc
sub
leave
jecxz
push
ja
pop
dec
pop
divb
mov
fwait
shl
ret
add
int3
xchg
pop
xor
xchg
lret
or
xchg
mov
xchg
dec
dec
mov
push
dec
test
xchg
out
out
push
mov
call
int3
cmpsb
aad
mov
pop
jae
popl
xor
adc
xchg
not
sbb
or
lcall
stc
ljmp
xchg
xchg
mov
mov
sbb
mov
or
push
push
or
popf
loopne
ret
fadds
pop
out
aaa
inc
or
test
outsl
imul
sub
pop
sub
stos
popa
out
xchg
aad
jecxz
add
popa
repnz
test
mov
gs
pop
test
pop
mov
xor
lds
dec
inc
dec
or
fmuls
cmp
add
loop
lock
jno
lret
stos
aaa
jo
or
ds
imul
mov
pushf
pop
sub
out
dec
mov
xor
xchg
add
or
fstl
cmp
fidivs
ljmp
mov
idivl
sbb
fldenv
xchg
repz
loope
xor
mov
push
js
dec
imul
insl
push
push
sub
pop
lcall
repz
pop
mov
fldlg2
pop
bound
pop
mov
insb
into
lret
or
or
jge
and
and
subb
adc
push
cs
mov
push
lret
push
xor
push
pop
or
es
ret
xchg
int3
aas
jg
mov
jge
test
rcrb
jb
fwait
pop
in
inc
add
ljmp
mov
inc
nop
dec
gs
js
rol
xchg
and
dec
imul
sahf
xchg
clc
fsts
sub
xor
sbb
bound
rorl
add
sub
fdivrs
test
out
out
jns
cmp
mov
sub
sub
jb
mov
adc
xchg
or
movsl
repnz
outsl
pmuludq
rcll
leave
ds
call
std
out
cmpsb
ret
leave
std
into
xor
insl
rclb
mov
lds
pop
shlb
imul
cwtl
loope
xchg
imull
scas
sbb
push
pusha
jns
xlat
add
test
and
aas
mov
das
mov
in
inc
stc
pop
add
es
les
inc
mov
pop
out
les
lea
add
inc
arpl
sub
add
mov
and
add
enter
xchg
or
jae
mov
and
or
movsl
dec
and
test
js
jl
add
hlt
out
lret
add
sub
and
push
mov
fbstp
pop
inc
repnz
add
mov
ljmp
mov
into
adc
loop
mov
imul
push
lea
fidivrs
shlb
adc
sub
cltd
adc
push
outsb
inc
jl
subb
jb
adc
je
dec
xchg
jne
mov
sbb
xor
scas
or
test
cmp
fildl
add
movsl
push
lods
pop
inc
lret
shlb
ficompl
popf
mov
lcall
sahf
sub
mov
lahf
dec
andb
and
mov
xchg
lret
js
pop
jb
dec
stos
popa
pushf
movsb
inc
in
mov
adc
lds
movsb
push
imul
stc
xor
and
ret
pop
imul
mov
push
fsubr
xor
mov
pop
leave
fstpt
cwtl
or
into
lods
lods
pop
xor
jl
sbb
leave
xchg
jg
test
push
cmpsb
push
sub
outsb
jno
insb
enter
inc
outsb
test
xchg
shl
mov
insl
xchg
push
adc
mov
ret
and
out
add
cmp
mov
ja
rolb
push
mov
arpl
adcb
es
sbb
mov
enter
rcrl
xchg
mov
cmpps
dec
xor
icebp
movsl
jl
aas
fistl
push
lods
fwait
or
inc
int
or
cwtl
sti
cmpsb
jl
nop
ds
sub
adc
stc
pop
mov
test
scas
out
mov
lret
add
fistpll
sbb
xchg
xor
enter
movsl
jbe
clc
cmp
inc
sarb
pusha
mov
movsb
repnz
sub
fs
jns
jb
inc
ror
or
fwait
push
jne
loop
aam
jp
leave
jae
push
fidivrl
xchg
je
hlt
dec
dec
inc
mov
adc
negb
pop
push
mov
es
lret
sub
mov
jbe
push
icebp
push
mov
popf
or
xor
icebp
orb
add
jg
lods
add
or
in
inc
jecxz
ror
rcll
mov
pop
lcall
inc
mov
mov
dec
rcrl
scas
nop
jl
popf
mov
jle
xchg
cltd
pop
mov
repz
pop
mov
add
adc
push
call
bound
lret
sub
add
and
sahf
movsb
push
mov
enter
push
adc
into
sbb
sub
fisubs
sti
or
test
sub
test
xchg
fisubl
adc
and
lea
ret
add
shlb
cwtl
lods
adc
cs
cmp
mov
adc
mov
fwait
pop
xorb
pusha
roll
inc
sbb
aas
out
mov
test
cmc
mov
mov
fcmovbe
jp
or
fs
rcrl
mov
scas
dec
ss
or
cwtl
leave
or
outsb
and
adc
xchg
arpl
popa
mov
dec
pop
movsb
mov
popa
out
and
sbb
mov
je
dec
or
or
and
pushf
stos
lods
adc
mov
nop
jae
jb
loope
sub
addl
jl
pop
subl
push
aad
loop
outsl
insl
inc
es
lds
cmp
sub
scas
add
sbb
arpl
mov
inc
sbb
mov
sarb
ret
aas
data16
sbb
call
xchg
and
jae
xor
cmpsl
xchg
mov
adc
outsl
pusha
xchg
pushf
imul
adc
pop
sub
adc
ja
inc
repz
push
icebp
imul
loopne
or
adc
das
sbb
cli
mov
mov
and
push
jmp
mov
cmpsl
daa
dec
jp
sbb
xchg
push
scas
in
aad
jno
mov
sti
xchg
or
aam
sub
ficoml
ja
jmp
push
dec
lret
or
fnstcw
pop
pop
shlb
in
sbb
cs
movl
int3
cmp
inc
jp
mov
ljmp
dec
popa
jae
imull
stos
and
push
add
sub
pop
inc
xchg
shrl
inc
dec
lahf
inc
or
cmp
lods
xchg
fcoml
loopne
and
bound
xor
mov
push
mov
popf
frstor
enter
stos
das
jns
xlat
push
jp
ljmp
xlat
lods
ret
cmp
movsl
outsl
and
jnp
sub
add
push
rolb
sbb
imul
neg
add
jge
lahf
cld
sti
adc
fmulp
sub
sbbl
out
test
mov
popa
sub
or
data16
xchg
and
xchg
cmp
mov
movsl
sub
add
push
mov
fxch
fdivl
jbe
mov
or
jne
call
lahf
repz
sub
pusha
pop
xor
sbb
push
pop
mov
lods
pushf
jnp
outsl
outsb
out
add
xchg
stc
ret
nop
insb
dec
xchg
mov
aam
leave
insl
push
inc
stos
subl
or
js
rorb
mov
fisttpll
test
mov
lea
sub
test
dec
pop
jbe
xor
stos
lret
inc
mov
leave
xchg
jp
adc
xor
ds
xchg
push
scas
cmp
fiadds
icebp
nopl
mov
add
ss
add
movsl
xchg
cwtl
push
pop
mov
out
test
xchg
dec
or
xor
scas
ss
mov
pushf
addr16
pushf
femms
pop
dec
pusha
jmp
cs
mov
sub
lret
mov
lods
jb
jae
aaa
mov
jecxz
mov
adc
addb
daa
mov
iret
and
ret
test
je
adc
out
inc
dec
out
lahf
bound
int
popa
mov
mov
mov
sahf
leave
adc
push
shlb
dec
inc
mov
mov
jp
mov
fs
or
mov
ja
addb
fidivrl
fldl
iret
adc
lret
adcb
push
loop
push
xor
fstps
jle
mov
out
mov
adc
dec
sub
movsb
ret
stos
rcl
or
movl
push
cld
mov
rcrl
rcr
sub
xor
mov
push
aad
cld
xlat
mov
out
cmpsb
std
popa
push
jnp
fmuls
mov
pop
into
enter
or
adc
jmp
test
into
push
push
or
cmp
hlt
and
sub
pop
add
dec
xor
test
aad
and
mov
mov
add
pop
repnz
mov
imul
fs
cld
push
leave
dec
iret
inc
xchg
shll
cwtl
jno
incb
in
shlb
repnz
orl
jae
shr
dec
ds
add
push
pushf
xchg
fsts
mov
sbb
cmp
push
mov
insb
or
add
mov
jge
mov
dec
inc
add
subb
or
mov
and
les
fisttpl
jle
inc
roll
push
dec
mov
shlb
xchg
das
ljmp
adc
stos
mov
xchg
test
sub
push
std
dec
jne
subl
sahf
lds
in
mov
pushl
mov
pop
push
xchg
xchg
xlat
into
cmp
lret
xchg
bound
testl
sbb
and
out
fisubl
inc
roll
aas
sarl
js
aam
pop
cmpsl
add
xlat
stc
mov
scas
shll
sub
and
push
add
push
div
data16
mov
addb
push
sub
jle
pop
jae
call
jg
jl
sub
mov
jmp
mov
mov
pop
dec
outsb
insb
adc
pop
fldl
or
xorl
mov
movb
adc
add
push
fcmove
fwait
push
xchg
leave
mov
fdivs
test
mov
pop
xor
add
fstp
outsl
scas
sbb
test
sahf
jg
inc
mov
sbb
movsl
inc
jecxz
mov
cmpsl
mov
lds
mov
add
lock
sahf
xor
mov
hlt
mov
pop
mov
mov
lret
pop
mov
xor
push
arpl
mov
mov
and
sub
mov
scas
and
cs
mov
in
dec
jns
repnz
cmp
lock
and
out
xchg
cmpsb
loope
jns
mov
mov
lds
insl
sbb
push
in
xchg
das
pop
lds
adc
cli
shrl
lods
lea
push
sbb
inc
fimuls
pop
or
jns
pop
addr16
adc
adc
sub
call
fmull
mov
lea
lods
out
ret
loopne
test
ja
inc
enter
push
cmpsl
aas
popf
insl
loope
jp
push
mov
mov
into
mov
mov
aad
dec
cmp
xchg
fs
popf
das
movsl
adc
lods
jecxz
xchg
dec
shrb
into
add
test
out
aam
mov
fisubs
and
and
xlat
lock
mov
pop
adc
testl
scas
and
ret
movsb
int3
mov
and
cmp
daa
add
movsl
push
jae
shl
cld
arpl
ja
xor
dec
movsl
leave
xlat
adc
xchg
add
push
mulb
mov
movsl
scas
jg
mov
xor
mov
push
sahf
mov
mov
daa
arpl
clc
mov
push
mov
fbstp
ret
jecxz
scas
rorl
jnp
scas
push
push
fstps
push
xor
lcall
in
outsl
lods
xor
cld
fimuls
mov
lret
fs
in
insb
out
pop
enter
jmp
inc
lahf
addb
mov
pop
xchg
inc
pop
subb
inc
push
adcl
jle
test
push
jge
push
lcall
sbb
mov
hlt
cmpsb
jg
aaa
push
jno
test
fbstp
in
mov
and
cli
cltd
in
inc
repnz
fdivrl
in
test
cli
rcll
push
je
push
mov
fadds
xor
jae
decl
cli
inc
in
ss
and
cmp
ljmp
cmp
pusha
into
ja
sbb
xlat
xchg
pop
cwtl
stos
cmpsb
sub
out
mov
sub
dec
dec
shl
out
cmp
fwait
mov
cmc
addl
jno
add
mov
rcrl
rorl
mov
dec
xchg
aas
lea
push
xor
daa
mov
push
pop
aaa
inc
ds
jb
addl
or
fld1
cmp
lahf
rcrl
pop
out
lea
dec
and
insl
into
xor
insl
sub
xchg
inc
inc
imul
cld
pop
fwait
adc
ret
jl
call
popf
sti
int3
call
inc
push
mov
pop
push
push
mov
mov
cwtl
repz
daa
push
sub
popa
inc
mov
dec
pop
jg
leave
shl
push
cld
sbb
clc
jl,pn
shrl
aad
lock
adc
push
inc
stos
les
in
cs
lcall
dec
xor
cmc
sahf
mov
mov
xchg
inc
roll
sbb
jmp
imul
sub
enter
dec
mov
ljmp
loop
sbb
sbb
out
outsb
loope
push
xor
dec
sbb
or
sbb
mov
repz
add
or
or
pop
pop
int
repnz
mov
fldenv
andl
inc
mov
and
xor
inc
dec
cwtl
icebp
pop
push
nop
out
and
push
xor
fs
rclb
or
and
movsl
and
dec
xor
jle
mov
outsl
int3
hlt
daa
and
pop
cwtl
add
dec
xor
add
clc
pushf
gs
cmpl
fdivl
test
push
mov
aam
leave
mov
ja
ds
rclb
in
xor
sub
dec
adc
push
out
subl
inc
mov
xchg
fisubrl
ljmp
out
jle
jmp
pushf
aaa
mov
mov
fnstcw
and
aaa
or
and
dec
ret
std
loope
cli
inc
or
test
ret
mov
xor
int3
mov
inc
pop
in
scas
sbb
iret
loop
mov
scas
popa
mov
push
out
push
mull
shrb
lret
out
enter
cmp
adc
sub
lods
mov
xchg
jmp
cmp
mov
fadds
pop
cmpsb
ja
movsl
in
xchg
inc
bound
add
lahf
mov
sub
stos
mov
ss
lds
mov
aam
jbe
rcll
mov
sub
sbb
lret
das
jnp
inc
xorl
ja
mov
and
aad
test
push
jne
fbld
push
pop
pop
dec
mov
idivb
hlt
std
mov
push
ja
mov
lods
cltd
sbb
notb
cld
loope
js
out
jns
stc
fs
mov
xchg
fwait
dec
mov
cmpsb
cli
dec
mov
cmp
jg
stos
push
mov
adc
int
mov
lock
outsl
test
test
popf
scas
ficomps
jle
sahf
dec
jl
push
es
scas
mov
nop
test
loopne
jb
pop
fimull
mov
lds
sub
sti
aam
bound
dec
mov
and
inc
xchg
in
or
fs
fwait
addr16
lods
bound
push
cmp
pop
ds
push
clc
dec
add
jbe
es
ret
lds
push
inc
push
icebp
sar
xor
mov
mov
ret
add
pop
jmp
push
lods
mov
stos
add
inc
mov
shrl
mov
outsb
and
push
xchg
cmpsb
xchg
add
lret
enter
fsubs
add
fsub
enter
dec
inc
jp
andb
dec
fmull
sbb
pushl
cs
dec
testb
movsb
or
mov
dec
push
xchg
sub
stc
insl
clc
lock
push
add
fsts
adc
mov
fs
mov
mov
inc
pop
mov
pop
mov
add
popf
icebp
sbbb
bound
rcll
int3
push
dec
pop
bound
or
jbe
xorl
in
push
cmp
inc
ficoml
cli
rol
and
negl
mov
mov
cmpsb
in
jp
jmp
mov
mov
outsl
in
pop
fcmovnu
in
cld
shlb
pmullw
jmp
js
aam
xor
or
sub
in
enter
test
dec
xchg
dec
cmpsl
in
sub
sti
sbb
mov
pop
lods
pop
ret
push
test
jno
mov
or
bound
arpl
inc
int3
inc
aaa
jnp
repz
mov
sbb
pop
xchg
mov
cmp
mov
push
mov
or
int
pop
inc
jno
arpl
mov
pop
stos
out
or
or
adc
ret
pop
enter
sbb
cs
pop
cmpsl
pop
push
pop
pop
incl
and
or
mov
push
cld
and
repz
xlat
cld
jae
dec
add
lock
aad
dec
aas
jle
cwtl
aad
xor
icebp
loop
dec
ja
jne
xor
in
notb
aam
xor
cmpsb
test
or
jbe
add
xorb
xchg
syscall
iret
movsb
xchg
sub
push
scas
mov
push
insb
shlb
mov
adc
push
data16
dec
push
or
fucom
scas
movsl
xor
sbb
push
pop
fisubrs
xchg
lods
cld
fnstcw
adc
sub
dec
out
and
dec
imul
in
xchg
arpl
int3
cld
cmc
and
std
push
mov
push
mov
jmp
and
fcoms
mov
jns
fs
shlb
test
lret
sbb
sub
shl
mov
icebp
and
and
sub
dec
aas
shll
movsl
aas
inc
jae
xor
xchg
insl
push
xor
cmp
push
xbegin
data16
fcomps
pushf
jmp
pushf
add
sbb
test
push
dec
shrb
pop
mov
xchg
xchg
iret
in
mov
popf
mov
cs
cmpsb
jle
cmc
lods
jno
inc
addr16
sub
xor
test
push
jmp
das
scas
push
mov
mov
xchg
inc
in
mov
adc
sbb
cmpsb
pushf
push
jno
add
and
out
mov
mov
cmc
test
test
mov
lea
mov
lea
mov
scas
xchg
loopne
fadds
add
dec
sbb
push
andb
cs
sbb
lods
scas
mov
loopne
pushf
xor
mov
ss
or
sbb
in
jge
aas
inc
cs
or
push
jbe
lahf
mov
dec
int3
in
jmp
jbe
xchg
mov
or
cmp
and
cmc
inc
cmp
bound
notb
xchg
enter
lcall
clc
in
dec
cmp
bound
push
mov
cmpsb
insb
das
in
xor
xor
jae
xchg
sbb
xor
mov
push
lock
scas
adc
jno
dec
aad
sub
into
in
adc
adcl
inc
insl
add
cmpsb
in
inc
cwtl
dec
add
jb
out
or
ljmp
pop
pop
cld
fistps
rclb
popf
xor
fsubl
out
mov
les
outsl
in
nop
dec
cmpsl
fildl
sub
mov
xor
repnz
dec
or
pusha
or
ljmp
pop
pop
aaa
add
mov
andb
pop
iret
sti
enter
sub
out
mov
je
aad
push
jp
faddl
jae
leave
out
sub
sub
outsb
mov
sbb
add
push
and
into
mov
dec
mov
out
test
popa
xor
cmc
enter
loope
fs
adc
push
dec
out
mul
scas
lea
jno
xor
cmp
mov
xchg
stos
fs
mov
fcoml
pushf
insl
dec
push
hlt
gs
loopne
pop
add
fmul
mov
mov
jge
inc
jge
in
mov
jge
jne,pt
jb
mov
add
sub
jne
fistl
scas
and
movsb
sahf
lods
lret
push
out
push
add
sub
mov
in
popf
lret
ljmp
imulb
inc
rcll
dec
xchg
xor
push
aas
mov
loop
call
cmpsl
push
outsb
add
pop
mov
fcoml
imull
adcl
mov
out
dec
stos
sbb
push
dec
cmpsb
addr16
xchg
fisttpl
push
nop
les
loopne
mov
or
mov
pop
imul
fldl
adc
outsb
stc
adc
ror
mov
mov
fimull
test
xor
adc
loop
push
push
push
cld
roll
fists
dec
jo
cmp
adc
clc
mov
mov
int3
pop
mov
in
pop
push
xchg
inc
shll
fbld
into
push
pop
pop
sub
hlt
add
add
xor
jmp
push
dec
cs
jle
pop
sub
inc
cltd
ficoms
mov
mov
push
dec
adc
cmp
test
pop
mov
stos
inc
icebp
push
cmp
inc
adc
add
inc
mov
popf
test
dec
daa
mov
and
test
add
add
clc
push
hlt
cmpl
dec
movsb
shll
inc
lahf
jle
pushf
pop
or
sbb
scas
insb
lret
push
jecxz
xchg
add
push
int3
mov
jno
mov
int3
das
pusha
dec
push
imul
mov
mov
dec
test
cmp
jb
and
pop
sub
xchg
pop
push
int3
push
sbb
dec
adc
and
pusha
lret
and
sub
cmp
and
cmpsb
jle
test
cmp
dec
daa
int3
icebp
sbb
cmp
mov
pushf
aam
sbb
rorl
fwait
pop
mov
dec
les
stc
pop
lcall
cmc
data16
insl
enter
cli
cmp
adc
mov
popf
push
jne
dec
dec
rol
push
test
mov
jge
insl
lahf
or
cli
lahf
jp
cmp
loope
fwait
inc
es
inc
out
sahf
push
call
addr16
repz
insb
mov
repz
inc
xlat
inc
fiaddl
shll
data16
pinsrw
push
ret
outsl
dec
fsubrl
popf
cmp
leave
dec
test
adc
add
mov
in
dec
loope
sbb
out
lea
mov
ljmp
wbinvd
pop
enter
stc
mov
sahf
test
pop
mov
bound
roll
inc
mov
and
mov
mov
in
pop
mov
inc
leave
cmp
pop
lds
clc
jmp
mov
into
jnp
push
gs
adc
jno
add
pop
lods
push
in
pushf
xchg
inc
out
adc
fs
imul
or
xchg
lcall
mov
jecxz
push
push
inc
or
mov
push
stos
lret
xchg
dec
ds
icebp
out
xor
out
insl
mov
xchg
jmp
push
push
mov
add
inc
mov
add
inc
daa
jnp
mov
and
add
jle
sbb
push
cmp
fucomp
bound
mov
xlat
jo
and
cmp
pop
addr16
cmp
mov
pop
xor
sbb
add
xchg
cmpl
xor
in
and
aad
lods
imul
mov
xor
and
and
in
js
jle
out
jbe
notb
mov
mov
push
mov
aas
add
cmpsl
jo
shlb
aaa
push
mov
pushf
cmpsb
jno
ds
adc
mov
les
or
loopne
div
ror
sbbb
call
push
movsl
mov
imull
jle
leave
sbb
mov
or
shll
dec
aad
mov
lret
out
jae
or
push
cmp
incl
jns
xchg
sbb
rcr
mov
lret
jmp
std
jbe
out
cmp
sub
xchg
and
fisubrl
lret
clc
pop
jecxz
ljmp
out
mov
scas
iret
pop
shlb
shrb
xchg
std
pop
xchg
pop
or
push
lcall
decl
push
negb
mov
dec
dec
ficomps
stos
mov
xchg
push
or
add
inc
test
inc
mov
or
add
xor
mov
mulb
pop
outsb
fnstenv
add
mov
sbb
mov
fldl
adc
repnz
lea
adc
and
mov
and
cwtl
cmp
lcall
xchg
jnp
popa
mov
fwait
ror
call
jle,pt
pop
or
or
out
rclb
call
adc
out
scas
add
clc
mov
mov
fisubs
sbb
push
inc
cmp
loop
pop
xor
or
jmp
mov
mov
shll
fwait
cmp
mov
mov
jb
push
dec
pop
push
addr16
nop
pop
adc
mov
jbe
dec
lea
sub
sub
pop
lods
in
andl
push
addb
and
jmp
pop
sbb
rclb
push
repz
jae
sub
mov
outsb
mov
push
repz
into
popf
pop
lods
mov
jmp
or
mov
or
adc
and
and
sarl
sahf
int
stc
popf
jmp
repnz
and
pop
out
cmp
movsb
insl
dec
rcrl
ffreep
and
sbb
xor
sub
test
popa
xchg
shrl
dec
xchg
je
aaa
mov
sbb
jecxz
xchg
clc
push
adc
pop
mov
xor
adc
dec
daa
push
dec
ret
outsl
cs
mov
loopne
je
repz
push
add
sub
pop
push
repz
pop
cld
dec
hlt
mov
les
or
clc
jbe
mull
std
imul
ret
mov
cmp
sarl
jb
shll
jmp
push
xor
andb
mov
outsl
jle
pop
push
loope
mov
shrl
mov
ja
and
lods
dec
ret
into
insl
pop
lret
enter
xorb
sbb
aad
dec
jmp
aam
and
andb
dec
pop
imul
scas
or
xchg
xchg
mov
add
scas
cmp
or
stc
jno
dec
pop
push
in
pushf
rcrl
pop
mov
pop
lret
sbbl
movsl
xchg
or
dec
lods
insl
cmp
rclb
xchg
arpl
xchg
xchg
sar
mov
jg
pop
adc
push
adc
mov
cmp
mov
xor
loop
imul
or
out
xchg
push
and
test
or
jbe
out
and
aad
xchg
inc
inc
test
andb
cs
adc
push
xchg
jg
pushf
in
fadds
pop
push
mov
stos
pop
cltd
ror
out
aas
jnp
cwtl
push
ds
imulb
test
loopne
adc
xchg
mov
dec
jecxz
sbb
dec
xchg
jle
cli
xchg
stos
stos
inc
shll
dec
mov
and
ret
sub
pop
dec
fcoms
dec
dec
add
lods
push
cmpb
call
nop
jge
out
inc
add
xchg
das
and
inc
stos
or
mov
fmull
cmp
mov
dec
stos
repz
push
add
cli
dec
xor
jo
mov
scas
pop
adc
mov
jl
mov
cmp
sahf
ja
fidivs
mov
lds
or
test
test
sub
jno
jno
fildl
and
push
aad
cs
mov
cwtl
stos
adc
movsl
das
mov
inc
adc
adc
jb
lret
or
xor
add
aad
pop
or
loop
dec
mov
aam
push
adc
icebp
in
mov
or
arpl
int3
in
sub
sub
leave
cmp
popf
inc
insl
sbb
ljmp
aam
add
leave
sarl
add
mov
addr16
rolb
xchg
inc
pusha
sbb
fistpl
ds
loope
sbb
and
mov
stc
dec
jmp
xor
sbb
scas
int
and
pop
xor
push
sub
xchg
xor
fisubrl
inc
or
clc
sbb
inc
std
adc
pop
push
imul
mov
push
add
pop
testb
cmp
fstps
mov
dec
dec
mov
out
push
rclb
push
pop
rorl
push
repz
cmpsb
pop
outsl
or
add
mov
out
jb
loope
inc
ds
mov
cmp
and
rclb
repnz
les
jp
scas
addb
nop
outsb
jg
cmpsb
lds
sbbb
mov
imull
outsl
sti
fsubrp
scas
in
divb
push
lret
mov
jl
mov
mov
pop
inc
rol
adc
push
cmp
and
sub
xor
inc
xlat
push
rcrb
flds
sub
pop
into
jle
fistpll
and
pop
inc
xchg
sbbl
hlt
cmp
dec
add
dec
jl
in
sbb
xchg
or
mov
mov
icebp
sbb
js
ret
adc
out
xor
inc
outsl
inc
insb
sub
test
and
stos
push
sub
aad
out
inc
orl
jno
xchg
jo
cmc
ficompl
adc
inc
imul
and
pop
jnp
pop
int
fistps
cmp
jmp
fs
test
sub
mov
push
sbb
je
aam
loopne
pushf
xchg
cs
pop
rclb
addr16
mov
cmp
ret
lea
shrl
mov
jmp
gs
sbb
jne
orb
xor
pop
pop
loop
lds
mov
dec
cwtl
cmpsl
jmp
or
ja
adc
mov
lret
repz
xor
lea
mov
lock
hlt
cmpsl
popl
dec
jnp
push
jl
stc
fidivrl
imul
push
pop
push
sub
pop
jo
mov
in
int3
push
scas
push
fnstcw
popf
jno
and
sub
idiv
dec
arpl
pop
clc
dec
loope
push
or
xchg
in
fidivrl
jecxz
sub
jae
xor
xchg
cmp
cmp
cmp
push
test
mov
inc
inc
xor
jno
xchg
jno
sbb
adc
sar
lret
ds
xchg
lock
cmpsl
inc
and
adc
out
lret
lahf
in
aaa
bound
fcoms
call
jg
subl
dec
cmpsl
mov
ljmp
add
data16
sti
mov
cmp
cmpsl
adc
pop
mov
inc
pop
pop
xchg
jg
fistps
fdivs
lock
push
cmpsl
jnp
sub
cs
xor
inc
jne
adc
stos
loop
fisttpl
xor
movsb
add
inc
fwait
and
cltd
jae
insb
jnp
js
add
rcrl
cmpsb
adc
data16
mov
mov
push
adc
xchg
inc
mulb
cli
repnz
and
testb
push
xchg
sbb
jno
ret
mov
daa
fnstenv
pop
push
or
xchg
outsl
xor
sub
mov
cmpsl
xchg
les
ficompl
xchg
stc
addr16
push
test
mov
imul
loope
das
mov
mov
scas
cmp
jmp
or
imul
xor
jb
lret
sbb
pop
xchg
lret
sbb
and
and
mov
dec
enter
mov
int
stos
test
fwait
mov
data16
rol
cwtl
lds
int3
adc
jp
incl
into
lock
push
mov
movsl
fwait
push
rolb
mov
in
mov
jge
dec
xchg
cmc
outsl
inc
cmp
bound
mov
cmp
clc
fldenv
mov
mov
jo
dec
adc
cmp
jg
jae
and
sbb
and
ja
xlat
and
mov
jno
pushl
lret
pop
push
insb
inc
adc
pop
test
les
adc
lds
popa
pop
sub
loopne
cmc
pop
jo
inc
mov
mov
mov
loopne
arpl
adc
nop
cltd
cmp
ficomps
sub
cmp
push
rolb
aad
and
push
mov
sbb
sbb
xchg
mov
sub
jb
push
lods
int
jg
popa
testl
gs
inc
aaa
dec
lods
inc
xor
pusha
sub
mov
rcll
insl
lods
cmovge
fnstsw
push
lods
xor
adc
mov
and
adc
lods
out
dec
in
cmp
mov
mov
pusha
fdivl
sub
outsb
push
sbb
decl
inc
into
mov
aaa
lahf
mov
jbe
pop
mov
sub
xor
rclb
cld
or
frstor
int3
fidivrs
aaa
mov
sub
add
mov
push
mov
loope
jmp
mov
xlat
test
pop
pop
in
pop
popa
pop
mov
sbb
sub
dec
and
add
jns
jae
inc
mov
pushf
push
iret
fnstsw
add
pop
jecxz
lds
imul
push
sti
sbb
stos
cmpsb
xchg
movsl
cmc
jp
out
add
enter
mov
add
mov
xchg
dec
add
add
popl
xchg
ret
mov
and
xchg
icebp
in
or
sbb
stos
and
clc
test
out
inc
and
push
loope
and
mov
clc
incl
pop
gs
mov
cmc
jmp
sbb
insb
cmc
mov
and
jae
dec
test
and
les
repnz
dec
les
and
xchg
add
jae
movsl
dec
add
out
sti
pop
aad
mov
arpl
cltd
and
push
shlb
addr16
jno
out
lahf
rorb
shrb
jns
add
dec
mov
stos
inc
xchg
imul
test
lahf
push
dec
push
fsubrp
mov
push
outsl
fcompl
xor
jns
ljmp
cmp
bound
mov
add
xor
inc
test
hlt
xor
jo
pop
mov
imul
cmp
pop
mov
sti
mov
jmp
fisubrl
arpl
sbb
outsb
mov
push
int3
jnp
adc
repz
sarb
mov
cmp
aaa
inc
ret
sub
adc
lret
shlb
mov
dec
rcrl
mov
sbb
pushf
jnp
sbb
cmp
mov
divl
in
lcall
mov
in
lret
rcll
sub
push
lret
adc
jnp
cmp
sbb
mov
pusha
mov
in
dec
orl
inc
imul
push
jb
enter
cltd
aaa
dec
aas
mov
sbb
dec
inc
ss
enter
push
xchg
inc
loop
cmp
adc
addl
jge
pop
dec
lret
jne
lret
mov
mov
test
xchg
add
js
pop
xor
fstps
loope
or
insb
xorl
pop
mov
mov
movsl
push
jo
pop
jp
sub
dec
jns
mov
in
cmpsb
pop
mov
aam
mov
or
fisubrs
int3
loop
adc
stc
cmp
fwait
cmp
push
stc
pusha
jns
mov
sub
dec
or
push
rcrl
jns
rcrl
sti
or
jl
jne
and
xlat
push
mov
mov
inc
sbb
xor
jbe
or
bound
ds
rcl
or
mov
in
div
jnp
cmp
insl
int
xchg
and
popf
xchg
jmp
repz
mov
stc
jmp
jg
xchg
pop
pop
dec
bnd
and
adc
lods
imul
lea
pop
ss
or
arpl
push
int3
mov
mov
sbb
cmp
jb
les
repz
dec
fsubs
notb
and
sbb
int3
inc
das
out
pop
fimull
jg
pop
rorl
cmp
mov
xchg
jns
addr16
mov
minps
sub
loopne
cmp
mov
and
mov
push
and
adc
inc
dec
in
test
mov
scas
jnp
mov
mov
aaa
stos
outsl
lret
sub
daa
sub
jle
stos
push
push
arpl
mov
iret
bound
sub
or
test
jo
cwtl
mov
into
in
es
mov
mov
push
int
int
mov
pop
xchg
mov
xchg
movsl
subb
jno
or
add
repz
sar
in
out
mov
cmp
jns
add
sbb
pushf
xor
outsb
cmpsl
adc
aam
mov
xchg
dec
leave
pop
mov
push
push
pop
je
dec
adc
test
xor
inc
popf
dec
ja
pop
aad
mov
js
or
imul
dec
jno
and
inc
scas
dec
ljmp
js
test
inc
lret
xchg
fldenv
xor
sbb
jne
dec
rep
sbb
mov
mov
repz
rdtsc
push
push
add
dec
jge
cmp
mov
mov
out
mov
rcr
sub
mov
pop
enter
lods
jl
push
xchg
mov
ficoms
repz
push
stos
aaa
sbb
jecxz
popa
es
pushf
and
xchg
push
push
pop
imul
mov
aam
js
aad
in
inc
and
jecxz
adc
cmp
lds
pop
test
test
mov
pop
xor
jp
dec
mov
push
rcrl
cld
popa
xchg
adc
add
aas
fmul
push
sbb
gs
xchg
mov
push
scas
loopne
loope
sbb
loope
cmpsb
js
push
inc
push
insl
insb
repz
cmp
sbb
sub
dec
dec
dec
jp
jl
mov
jmp
ja
mov
into
inc
rcl
clc
lahf
jns
mov
repnz
push
test
add
inc
dec
hlt
inc
sbb
aas
out
cmp
ret
enter
mov
mov
sub
ret
cmp
mov
pop
push
test
popa
xorb
push
movsl
pop
mov
das
in
jae
pop
test
lcall
shrl
lds
add
ss
in
mov
mov
sarb
pusha
mov
jne
push
xlat
hlt
leave
inc
shl
iret
pop
arpl
mov
or
out
fcomip
fldenv
dec
push
out
inc
sti
push
loope
dec
in
pop
cmpsb
mov
mov
scas
sub
fnstenv
clc
sub
lods
lret
lahf
and
icebp
inc
loop
daa
testl
mov
push
xor
lahf
or
sub
lods
sbb
sti
stos
mov
in
and
inc
jbe
xor
push
lea
nop
push
add
sub
rclb
push
arpl
fldl
pop
iret
sub
mov
scas
adc
insl
loope
push
pop
cmp
xor
push
movsb
add
jb
mov
fsubl
rorb
or
xchg
mov
mov
scas
test
jle
popa
mov
es
dec
sub
sbb
jne
fdivr
or
mov
pop
mov
push
aam
aaa
push
imul
addr16
sbb
xchg
in
adc
aam
imul
xor
and
xchg
jb
stc
mov
xchg
cltd
aaa
fs
fbld
dec
filds
sub
adc
xchg
mov
add
or
nop
icebp
shrb
je
mov
iret
int
add
xor
je
cmp
xor
insb
xchg
mov
cwtl
push
fstpt
lret
dec
xlat
adc
dec
cs
gs
fistpl
xor
sbb
invd
cmp
jae
in
cmp
or
xor
out
frstor
adc
and
movsl
jmp
mov
ret
ja
je
mov
mov
or
push
dec
aam
pop
fmull
xchg
lods
mov
cltd
daa
xor
jb
dec
adc
inc
cwtl
sarl
mov
das
daa
mov
mul
sbb
je
pop
or
je
push
out
lea
test
movsb
push
sub
jne
test
popa
and
and
push
sbb
ret
xchg
or
outsl
xor
aad
cmp
mov
pop
xor
mov
test
adc
lea
fists
cli
sahf
ucomiss
fistl
ss
cs
pop
adc
fsubl
xchg
jns
sub
subb
shl
push
out
enter
jno
sbb
enter
ljmp
subb
push
sbb
jne,pt
mov
movsl
test
icebp
jge
mov
jmp
pop
add
mov
ss
ret
aam
hlt
js
mov
hlt
mov
sbb
mov
imul
rorl
jmp
lock
cmp
stc
cmp
arpl
jb
xlat
cmp
int
imul
ljmp
outsl
or
mov
cmp
lock
or
int3
cld
push
aas
out
mov
mov
inc
iret
xor
loop
lret
lods
cs
icebp
xchg
lock
cs
fmull
push
daa
arpl
cmp
out
xor
mov
xchg
jg
leave
sbb
ret
ss
mov
popa
insl
mov
insb
inc
sbb
push
and
filds
add
in
rcrb
mov
adcl
push
jecxz,pt
mov
mov
movsl
jge
push
pop
sbb
int3
mov
push
mov
addr16
mov
push
stos
out
sbb
and
arpl
iret
xor
enter
lea
jmp
pushf
mov
pop
pop
mov
mulb
fildll
nop
xor
jnp
mov
jbe
aad
addr16
loopne
xlat
into
cmpsl
insl
inc
dec
adc
or
cmpsb
aas
ja
daa
lahf
ja
pop
aam
or
add
dec
xorl
lods
fsts
lret
outsl
mov
and
insb
mov
sub
das
lahf
jb
jp
out
sub
xchg
pop
and
or
sub
or
add
lret
ss
dec
xorl
mov
daa
and
pop
mov
cmp
scas
enter
unpckhps
mov
or
ljmp
dec
fstps
gs
or
dec
pop
adc
sbb
cli
mov
pop
repz
loop
mov
lahf
add
shr
xchg
stc
add
cmp
push
gs
int3
push
mov
rcl
jnp
inc
sub
fldcw
mov
mov
jns
jb
aam
sarl
mov
mov
or
not
pop
popa
cmc
xchg
xchg
mov
sbb
lock
lret
mov
dec
sub
scas
dec
jmp
pop
es
sti
outsl
push
sbb
push
addr16
cmc
jmp
testb
cmp
lds
lods
ss
mov
daa
adc
dec
cs
dec
dec
mov
fdivl
pop
std
pop
jne
jb
lock
inc
inc
mov
add
add
mov
pop
lea
insb
arpl
push
out
adc
sub
shll
dec
outsb
ljmp
mov
pop
cmp
je
xor
and
add
dec
cs
mov
xlat
and
dec
pop
loope
adc
mov
add
stos
cmc
outsl
sbb
xlat
stos
in
push
inc
test
pop
movsl
cmp
pusha
cmp
xor
das
jmp
inc
pop
adc
push
aad
lret
movsl
lods
addb
lods
mov
fucom
adc
dec
loopne
sbb
or
sarb
jmp
insb
lret
pop
cltd
bound
cld
adc
mov
fsts
cs
inc
shl
or
mov
dec
mov
lds
icebp
push
rorl
nop
jle
sbb
adc
cmp
js
cmpsl
pop
outsb
inc
repnz
aam
inc
dec
jbe
mov
icebp
loop
aas
filds
cmp
pop
lods
jl
call
aas
pop
push
sub
in
je
mov
test
cmp
je
dec
call
test
in
push
addr16
push
adc
add
incl
fstl
insb
mov
daa
movsb
and
sbb
jno
pop
in
fldt
mov
pop
insl
test
sub
and
mov
lock
jbe
mov
or
les
popa
mov
icebp
inc
shll
aas
cmp
fnstcw
pop
mov
arpl
ljmp
insb
arpl
ror
test
cmp
inc
fldt
mov
jno
insb
push
lods
std
mov
andl
mov
or
xchg
inc
mov
dec
inc
dec
js
adc
mov
xor
cmpsl
lods
mov
jle
push
test
or
xor
test
and
xchg
outsb
inc
mov
mov
pop
ja
xor
repnz
imul
lds
nop
stos
out
sbb
xchg
dec
in
sub
push
fnsave
mov
lds
lea
sub
jmp
std
mov
adc
sbb
cwtl
cmp
mov
outsb
xor
push
push
jbe
mov
or
aam
sbb
popa
mov
movsb
push
cld
loope
loop
outsb
sbb
dec
jmp
jmp
lret
cmp
popa
enter
adc
std
dec
push
jo
sarb
call
out
jbe
in
imul
pop
inc
sbb
jmp
incl
int3
data16
sahf
sbb
inc
sub
shlb
leave
fucom
add
scas
xor
out
mov
test
push
cmp
test
in
mov
repz
push
xor
movsb
loop
mov
or
dec
xor
pop
out
push
mov
xchg
rolb
stos
xchg
ljmp
sbb
nop
stc
jecxz
xchg
cmp
add
les
push
mov
inc
cltd
leave
out
nop
loopne
mov
inc
cmp
repnz
es
mov
or
jmp
mov
iret
roll
push
and
or
mov
mov
pushf
in
jne
cli
mov
push
mov
mov
ljmp
or
pop
ja
lock
mov
ficoms
stc
mov
jne
push
mov
inc
enter
sub
aas
ss
jo
cmpsb
ja
fnstsw
mov
push
in
push
mov
rorl
cmp
dec
push
mov
inc
into
pop
add
mov
filds
popa
addr16
fdivrl
cwtl
repnz
dec
fdivs
mov
sub
in
cltd
outsb
dec
inc
scas
fnstsw
jnp
add
pop
out
je
sub
mov
sub
mov
stos
aaa
sarl
shll
je
ss
test
or
rclb
push
ss
and
add
cmp
sub
lret
mull
daa
repz
iret
shll
jmp
repnz
cmpsb
mov
inc
loopne
testb
inc
pop
ret
sbb
pop
pop
jp
dec
xor
lcall
adc
inc
arpl
dec
or
aaa
adc
das
or
mov
dec
xlat
push
mov
cltd
out
xchg
loop
sub
imul
or
insb
je
inc
push
cli
call
inc
dec
out
das
cld
or
mov
fimuls
adc
cmp
xorl
in
mov
adc
sti
mov
pop
pop
mov
faddl
push
les
pop
add
daa
sarl
pop
in
movsb
jbe
mov
cmpsl
xor
dec
out
in
ret
push
cmp
add
notb
cmp
pop
or
mov
in
lahf
mov
mov
add
in
das
jo
dec
xor
pop
or
js
fs
mov
dec
gs
in
cltd
in
hlt
pop
cmp
hlt
push
or
fwait
test
xchg
inc
aad
push
ss
fbstp
pop
xchg
lret
loope
add
fcompl
add
push
xchg
movsb
or
clc
dec
ror
and
jne
jge
pusha
in
mov
pop
je
push
push
add
jo
mov
loop
sbb
add
mov
aaa
xlat
std
pop
mov
pop
jns
js
aam
insb
adc
add
add
in
mov
ret
cltd
xchg
push
mov
or
nop
jne
test
sti
dec
xchg
fiaddl
xchg
mov
pop
pop
ljmp
xor
sub
int3
movsb
mov
insl
ljmp
xor
enter
daa
xchg
subl
add
mov
inc
adc
xchg
cld
add
pop
jbe
movsb
pop
cld
and
leave
rorl
insl
in
fdivrs
ret
rcll
and
aaa
cmpsb
xor
pop
mov
in
mov
mov
xor
cmp
mov
std
aad
add
cmc
dec
stos
ds
inc
sti
cmp
sarl
adc
sbb
ret
aaa
out
cmc
and
adc
insl
mov
and
cmp
clc
push
outsl
test
insb
mov
rclw
inc
push
sub
pop
xor
pop
and
stos
mov
dec
inc
idivl
ja,pt
idiv
insl
xchg
fcmove
lcall
or
mov
and
mov
test
pop
and
out
movl
out
aad
push
xor
js
movsl
adc
vfmaddsub231pd
test
icebp
fsubs
cltd
cltd
test
xchg
stos
shl
mov
loop
mov
push
stos
inc
xchg
add
push
sbb
fsubrs
lods
idivb
les
dec
jge
lock
rcll
mov
mov
insb
push
cmpsl
mov
dec
mov
call
repz
or
out
or
sbbb
iret
repnz
loopne
call
or
mov
leave
repnz
popa
push
mov
insb
in
lods
push
pop
lret
xchg
xor
pop
mov
push
mov
and
cltd
sub
inc
xor
mov
cmp
lcall
push
dec
xchg
adc
mov
out
jbe
jns
lods
push
rcll
push
mov
loope
xchg
aas
fbld
out
dec
daa
inc
fisubrl
dec
push
popf
outsb
movsb
lahf
imul
shll
sub
movsb
scas
rolb
xchg
into
adc
jg
pusha
mov
loop
fwait
das
lcall
rcrb
push
sub
xchg
mov
out
loope
mov
mov
xor
ss
xchg
mov
inc
jno
dec
dec
nop
imul
mov
lds
mov
neg
es
inc
push
into
fldt
fcomps
int
rcll
push
ss
mov
mov
outsb
inc
hlt
or
fnstenv
jb
xor
nop
gs
fsubrl
push
dec
jo
inc
add
and
push
mov
sub
xor
sub
jns
lret
push
mov
int
pop
xor
lret
add
gs
mov
mov
push
push
mov
jmp
cmc
mov
cltd
add
les
sub
xchg
lock
jg
ret
loop
dec
leave
and
dec
add
andl
test
push
pop
lahf
leave
leave
push
decl
sub
clc
inc
xchg
adc
mov
fdivrs
mov
repnz
test
pop
adc
sbb
out
ljmp
cmpsl
xchg
cmpsl
sbb
push
xchg
js
out
pop
xor
out
push
push
cmp
and
cld
les
inc
cltd
pusha
mov
int
pcmpgtb
mov
xor
mov
and
mov
fs
pushf
pop
mov
cmpsb
adc
jae
xchg
jae
adc
out
jo
adc
add
lret
shll
sbb
xor
out
add
dec
cmc
stc
inc
ljmp
mov
sub
push
jno
mov
repnz
movsb
sbb
sbb
inc
mov
jl
dec
pop
xchg
jae
shll
mov
jmp
xchg
jecxz
sahf
cmc
sti
add
ret
stc
inc
mov
imulb
fs
fldl
or
sahf
cmp
xchg
push
iret
ret
lret
shrl
int3
iret
pop
lret
mul
pusha
adc
cmpsb
adc
inc
xor
mov
loope
jns
aaa
adc
cmpsl
das
ss
xor
and
or
push
test
aam
push
mov
into
lret
in
lods
int3
jbe
push
addl
xchg
or
xchg
flds
rcr
adc
mov
sub
inc
xor
and
addr16
pop
out
push
insl
imul
mov
cltd
dec
std
loope
call
sub
jl
in
dec
scas
push
adc
dec
cld
sbb
fnstenv
inc
sahf
pop
adc
add
insl
push
inc
lods
pop
adc
jno
in
aad
pop
nop
icebp
clc
adc
arpl
mov
js
ljmp
jnp
mov
fwait
test
sbb
push
jle
add
std
in
mov
add
pop
or
xchg
sbb
pop
push
dec
insl
punpcklbw
aas
lret
cmp
cmp
cmp
or
inc
mov
push
fadd
or
lea
mov
int
stos
push
leave
sub
xor
mov
mov
inc
ja
inc
pushl
pusha
loopne
sub
or
add
cmp
inc
cs
daa
add
add
popf
jp
xchg
in
mov
shr
jle
inc
adc
into
stc
push
fdivr
jne
lods
stc
stos
mov
pop
fdivp
sub
shrl
roll
std
fildll
clc
cmp
xchg
movsl
pusha
push
push
jmp
mov
lods
push
cmp
hlt
mov
push
mov
xchg
clc
mov
push
pop
or
out
daa
stc
fadd
shrw
lahf
jp
lods
mov
or
pop
push
add
in
adcb
repnz
adc
push
testl
idiv
insl
scas
add
xchg
jae
mov
or
lret
xchg
mov
fistps
xchg
cmpsb
inc
push
push
mov
mov
std
addr16
cmp
iret
xor
fs
xor
jns
test
xor
dec
or
pop
xchg
in
mov
and
mov
rcrb
xchg
fstl
mov
ss
mov
inc
iret
sarl
enter
xor
jno
mov
jno
pop
jmp
mov
and
push
stos
push
fstpt
or
int3
adc
sbbl
mov
push
add
inc
aam
stc
pusha
lock
lret
inc
sbb
scas
fst
repz
jne
in
fisubl
mov
stos
cmpl
ljmp
inc
mov
mov
jb
jno
pusha
lret
int3
fistpll
mov
movsb
adc
in
insb
xchg
cltd
fcompl
xor
xor
iret
in
or
in
cmpsb
push
loop
mov
mov
test
je
popa
or
jnp
jbe
adc
add
lock
xchg
fsubl
add
sub
push
and
rorl
ficoms
arpl
lods
cmp
mov
orb
mov
movsl
mov
test
test
call
pop
push
pop
mov
sbb
daa
xor
inc
mov
call
insl
out
addr16
or
movsb
ficompl
jne
icebp
jl
fs
dec
mov
pushf
in
pop
dec
cmp
out
cmp
ss
fs
arpl
sub
test
dec
cld
lds
out
lahf
add
or
jle
into
ljmp
cmpb
in
and
mov
push
mov
sbb
shr
sti
inc
pop
adc
push
or
jl
rolb
xchg
mov
aam
out
inc
cmp
bound
push
les
ja
bnd
call
stos
fcomps
xchg
outsl
adc
sbb
jo
fisubrs
cli
add
orl
mov
fisubs
jmp
cmpsl
inc
inc
add
stos
pop
into
dec
lret
inc
loop
aam
push
rclb
scas
in
scas
jo
xchg
xchg
pushf
dec
add
sbb
pop
mov
mov
sbb
fstl
mov
jp
aad
repnz
into
push
outsl
jmp
and
scas
imul
or
xrelease
fsubr
int3
add
dec
push
or
or
mov
test
adc
addr16
xchg
shl
xchg
pop
aaa
inc
shll
push
adc
pop
shrl
int
das
sub
data16
je
out
xlat
push
in
daa
cld
sbb
ljmp
add
outsl
pop
xchg
arpl
add
sar
mov
nop
ja
push
cmp
pop
adc
dec
arpl
lock
cmp
dec
ss
inc
notb
mov
dec
popa
and
lret
add
mov
lret
inc
push
sahf
stos
loop
dec
das
in
aas
out
mov
jns
shr
nop
inc
and
arpl
flds
loope
xor
int3
loopne
clc
push
lds
std
sub
aas
sub
xor
cmpsb
lea
or
dec
aad
ret
jge
pop
cmp
mov
fwait
xchg
lock
mov
outsb
ds
insl
xor
dec
test
cmp
push
mov
xor
fldt
stc
test
push
mov
aas
data16
jle
xlat
lds
jmp
ja
dec
fisubs
cli
or
ljmp
adc
dec
jecxz
jecxz
outsl
adc
mov
dec
loop
data16
cli
or
xchg
sbb
mov
sbb
or
imul
cmpsb
aam
inc
aaa
xchg
mov
cmpsl
lds
mov
sti
jge
or
mov
out
ja
dec
inc
sbb
das
jbe
je
pop
add
adc
addr16
pop
loope
xchg
sti
add
outsb
dec
aam
push
pop
ret
lret
add
pop
cli
push
sub
and
xchg
lret
in
pop
mov
iret
push
es
mov
testl
and
ss
ljmp
outsb
mov
inc
test
dec
shl
dec
jns
sub
dec
fiaddl
push
popf
rcll
lret
jge
aad
sub
out
lret
shrl
aas
and
daa
push
jle
popf
frstor
test
mov
pop
pop
cli
pop
and
lock
call
es
push
sub
scas
add
sarl
andl
pop
sub
pop
mov
cltd
outsb
sub
pushf
push
pop
jecxz
cmp
stos
imul
add
xchg
stc
leave
dec
mov
and
cmpsl
dec
jns
outsb
mov
ror
sbb
adc
add
jo
xor
add
aad
mov
insb
mov
adc
iret
in
imul
sub
ret
mov
stc
or
fildll
sub
jns
cmc
mov
cli
adc
sti
mov
rolb
fcoms
pop
sbb
cmp
insb
mov
or
sub
cmp
adc
pop
sbb
ja
fcmovnb
adc
stc
test
add
ss
loopne
mov
cmp
pusha
mov
in
cltd
or
jmp
out
and
inc
sbb
ljmp
iret
xchg
mov
mov
push
je
sbbb
aaa
jl
ss
sub
jg
je
jo
adc
xsha1
cmpsb
repz
pushl
mov
cmp
ret
addl
les
push
scas
fucomip
stos
jne
mov
xor
lret
cmc
jae
in
test
push
or
mov
adc
cmp
leave
cs
inc
into
mov
ja
mov
sbb
xchg
adc
inc
fsubr
rorb
mov
or
jge
push
mov
add
or
adcb
mov
into
outsl
and
and
popl
test
cs
stos
mov
imul
jecxz
jl
enter
imul
jge
jg
cltd
push
lock
sbb
jle
xor
mov
add
cld
loope
push
scas
and
push
sbb
push
pop
into
aam
cmpsb
and
cmp
xchg
mov
xor
inc
mov
push
add
and
dec
jecxz
sbb
jo
xchg
dec
in
cld
cmp
into
dec
jg
out
jb
adc
sub
out
ss
or
das
adc
daa
push
or
add
ret
ret
sbb
dec
outsb
and
mov
xor
push
sub
aas
push
lods
mov
push
pop
add
decb
or
jae
xchg
rol
int
mov
xor
and
add
cld
pop
inc
faddl
daa
or
jo
cwtl
cltd
pop
mov
push
and
push
ret
xor
test
pop
xchg
flds
push
add
pop
inc
mov
add
sub
fbstp
xchg
lods
int3
outsl
outsl
ss
insb
jge
sub
hlt
inc
test
push
jns
xchg
aas
shl
adc
cmp
in
push
xchg
mov
push
push
shlb
adc
mov
mov
cmp
int
cwtl
sub
cld
xorl
gs
add
inc
push
test
std
xor
test
out
movsb
sbb
fdivr
stc
sbbl
mov
xchg
xor
outsb
setno
out
ljmp
imul
xchg
in
lcall
inc
jns
push
int
test
rcll
dec
fwait
outsl
movsb
orb
push
or
ret
mov
push
aam
xchg
stos
adc
push
fsubrs
jle
cvttps2pi
arpl
mov
loop
outsb
jl
pop
xchg
xchg
add
popf
cmpsb
jb
sahf
lods
cmpsl
or
add
std
inc
arpl
fsubrl
ljmp
pop
add
sub
aad
inc
or
pop
ficompl
in
cwtl
jmp
sub
sub
mov
or
outsl
pop
scas
rorb
mov
fisttpll
fcmove
push
jg
and
push
pop
jg
outsb
insb
mov
cwtl
jecxz
add
int
inc
pop
jle
jg
sbb
test
insl
outsl
int3
inc
fbld
shrl
xchg
mov
in
fildl
jmp
imul
adc
aam
test
xor
sub
and
xchg
ret
dec
xchg
mov
sahf
add
or
jg
jne
rol
lcall
insb
stc
xchg
imul
adc
cmp
mov
jns
xor
inc
das
jecxz
inc
push
das
xchg
mov
out
test
xor
out
jecxz
inc
xchg
and
push
in
sub
test
xor
bnd
subb
xor
inc
push
lahf
xchg
sbb
out
jl
jnp
inc
andps
xchg
mov
ss
mov
mov
xchg
sub
out
sbb
sbb
push
and
cmpsl
popl
add
pop
jo
shl
mov
adc
lea
es
cmp
cmp
test
pushf
dec
mov
subb
cmp
aas
lret
cmp
rclb
jge
inc
lock
and
sub
xchg
inc
cmp
fcoms
cmpl
ja
repz
mov
mov
outsl
lock
loopne
shlb
out
mov
xchg
xorb
mov
and
lcall
jge
xlat
sub
pop
and
inc
fcmovb
mov
or
call
lods
jmp
test
mov
fsubl
push
pushf
lea
or
adc
in
push
and
adc
insb
xchg
lods
inc
rclb
dec
lcall
xlat
je
jmp
pop
ret
cltd
sbb
ret
aaa
popf
rcrb
rcll
inc
jns
and
sbb
iret
mov
and
mov
push
rcr
outsl
mov
jge
dec
inc
mov
mov
lds
aam
pop
cmp
orb
and
lds
add
les
rcrl
lret
iret
ds
addr16
sub
std
test
faddl
scas
rcrl
jge
push
mov
pop
sub
adc
mov
in
dec
rolb
xchg
push
jne
mov
popf
lahf
sbb
ljmp
ret
xor
pop
stos
movsl
lea
add
cmpsb
pushf
outsl
sti
mov
negl
movsb
fstpl
in
mov
mov
pop
cld
push
sbb
mov
and
add
sub
fnstcw
ss
stos
andb
jecxz
add
out
inc
and
push
jg
or
jg
cmp
insl
adc
mov
test
xchg
jge
mov
dec
les
stc
pusha
jnp
ret
mov
xor
push
lds
pop
not
cmpsl
fsubrl
int3
shlb
fisubrs
faddp
jp
inc
lcall
cltd
fbstp
pop
insl
scas
pop
je
adc
aas
push
or
sbb
lods
xchg
jecxz
outsb
xor
pop
in
cs
cmp
mov
push
add
clc
inc
xchg
js
jbe
test
aam
push
dec
inc
xor
ss
test
sub
out
cmpb
inc
sub
sub
push
pop
xchg
add
loope
and
sbb
sar
scas
adc
aam
xchg
icebp
or
jp
fistps
xchg
sbb
pusha
mov
hlt
cwtl
push
iret
in
push
jb
inc
adc
pop
mov
mov
addb
outsl
loope
xlat
and
dec
cwtl
mov
jge
cmp
adc
int3
movsb
in
rorb
stc
fmull
in
sbb
ffree
inc
sub
frstor
dec
sbb
xor
daa
mov
jb
iret
mov
push
pop
loopne
lea
xchg
mov
and
das
mov
jbe
fldenv
lahf
mov
inc
add
popf
add
fbstp
jg
sub
mov
lcall
mov
dec
stos
out
xor
popf
pop
das
ret
or
push
cld
mov
dec
and
push
lret
addb
pop
dec
fwait
into
mulb
mov
or
mov
jbe
adc
lcall
or
add
push
pop
jns
jecxz
cld
jno
in
mov
scas
daa
cmpsl
das
dec
ds
shll
xchg
es
js
ljmp
lea
insl
add
das
call
fnstsw
pop
and
cmp
inc
mov
or
rorl
sbb
xchg
inc
clc
addr16
pop
mov
jp
adc
push
mov
insb
or
dec
fistps
jbe
cwtl
lods
push
test
xor
sub
jo
out
mov
inc
js
outsl
sub
addr16
jg
pusha
loopne
push
lock
inc
movsb
enter
sub
test
lds
mov
xchg
add
xchg
in
ss
or
push
aad
or
add
sti
add
out
enter
jno
je
mov
adc
mov
outsl
push
outsl
mov
mov
lcall
in
mov
pop
popa
loop
and
aaa
mov
in
inc
sub
rclb
out
fbstp
loope
aas
jno
jo
xchg
rorb
aad
shll
repz
or
sub
mov
xchg
dec
inc
add
or
jle
das
cmp
lods
mov
add
xchg
cmp
popl
cmp
push
sbb
lds
loope
pop
insl
push
addr16
xor
add
outsb
cmp
cmp
aad
pop
sbb
rorl
jns
fs
stc
xor
dec
or
aam
movsb
xor
xchg
pop
add
xchg
inc
mov
inc
mov
pop
hlt
cltd
push
fsubrs
lret
mov
sub
inc
mov
pop
shlb
sub
stc
sbb
sbb
nop
pop
mov
dec
xor
into
rorb
stos
insb
sti
rolb
fistps
mov
repnz
in
push
adcb
cmp
push
xchg
adc
lahf
stos
pop
mov
inc
jg
push
xchg
mov
loopne
mulb
cs
xorb
shll
into
mov
rol
dec
repnz
cmc
movsb
jmp
fimuls
fcmovne
xchg
cmp
mov
cs
loopne
mov
pop
mov
xor
lret
pushf
rorb
lea
pop
add
andl
test
shlb
add
hlt
adc
mov
xchg
cmp
xlat
adc
inc
hlt
adc
loop
out
mov
xchg
rorb
push
inc
in
mov
sti
sub
jo
mov
push
adc
std
cmp
push
ljmp
add
loope
adc
jmp
aad
je
ret
lahf
push
aad
repnz
lret
mov
sub
test
insl
adc
jg
repnz
pop
jno
xor
xor
fldenv
push
lods
xchg
and
jle
dec
test
sub
aas
dec
push
jl
jg
push
pop
sbb
out
jbe
lahf
pop
in
loop
js
dec
sub
daa
test
jle
lea
sbb
push
mov
push
outsb
scas
mov
lods
jecxz
sarl
shll
divl
lds
test
mov
pusha
jmp
mov
mov
inc
xchg
mov
out
push
bound
mov
iret
cmp
mov
dec
in
in
inc
nop
mov
push
push
xchg
in
bound
fldln2
adc
xchg
mov
ret
inc
ljmp
sub
xor
or
int
aas
mov
gs
xor
inc
or
bound
dec
scas
push
stos
sbb
or
push
popa
sbb
xchg
cmpsl
xchg
add
out
insb
ficomps
dec
cld
xchg
push
push
pop
add
outsb
or
xlat
lods
mov
addb
inc
scas
jae
pop
test
mov
add
jl
out
inc
mov
jne
xor
cs
popa
leave
repnz
out
rcl
adc
cli
clc
jle
xchg
int
gs
fdivp
in
pusha
test
jle
inc
out
cmp
ficoml
mov
call
mov
ret
nop
or
push
mov
popa
dec
bound
je
push
mov
cld
les
jns
outsb
sarb
loop
mov
mov
leave
fmull
mov
mov
pop
pop
stos
ficompl
or
jmp
shl
xchg
sub
xor
xchg
jno
rclb
aad
mov
jne
push
mov
xchg
stos
xor
sbb
or
inc
add
nop
cmc
or
sbb
pop
inc
imul
pop
idivb
imull
sti
cmc
addb
mov
push
jns
inc
hlt
mov
xadd
pusha
js
sbbb
jmp
rcll
popa
xor
lcall
mov
cmp
xchg
je
bound
dec
push
push
icebp
push
xorb
xor
mov
int
shlb
adc
imulb
mov
mov
mov
inc
divb
jo
jl
test
in
or
add
push
je
clc
or
sbb
test
lret
and
into
jbe
lahf
mov
and
sub
mov
sub
int3
pop
out
pop
add
rcl
icebp
icebp
mov
out
arpl
mov
loope
inc
nop
pop
sbb
repnz
pushf
jae
xlat
rolb
leave
mov
xchg
dec
adc
xor
sub
fcoms
xor
rcrl
dec
leave
push
cmp
and
push
ljmp
lret
mov
add
fiadds
pop
ljmp
cmpsl
pop
mov
fs
aam
in
adc
lret
sbb
clc
add
fidivs
inc
cmpl
jno
jns
lods
xor
inc
adc
dec
and
cmp
outsl
fildl
fs
push
clc
lret
dec
hlt
scas
stc
push
cmpsl
mov
ret
inc
shll
int3
ja
pop
push
jbe
adc
push
pop
add
fdivl
and
dec
mov
xchg
xchg
frstor
stos
lret
push
add
jb
icebp
imul
mov
xchg
inc
xchg
stc
sarb
jns
or
aaa
mov
xchg
aad
inc
and
inc
or
pop
xchg
adc
xchg
aaa
cltd
hlt
jne
fistl
fdivrp
aam
cmpb
iret
subl
out
jle
inc
inc
popf
jle
loope
mov
test
add
lahf
nop
testw
lahf
js
jmp
push
and
ds
imul
xchg
mov
inc
or
loopne
out
cmp
fnsave
lret
lret
push
sbb
fwait
andl
iret
aad
mov
out
stos
and
lahf
ret
push
mov
lods
cli
inc
bound
jno
imul
int3
insb
aas
incb
sbb
data16
jl
ljmp
mov
mov
stc
dec
cmp
js
pop
dec
ljmp
and
cmp
lea
cmp
push
jbe
pop
stc
jae
mov
push
and
mov
sub
lea
or
loopne
xchg
adc
mov
dec
jbe
js
xchg
imul
mov
push
stc
jl
add
adc
adc
int
shll
jnp
dec
into
mov
les
clc
sub
sti
ss
lcall
or
xchg
fidivl
push
out
xchg
mov
out
inc
daa
dec
inc
xor
aad
out
idivb
push
cltd
and
adc
jecxz
xor
adcb
push
loop
xchg
mov
inc
aad
cmpb
xor
das
push
adc
push
fptan
push
add
pop
push
or
arpl
inc
cmp
lret
fisttps
aam
xor
mov
in
pusha
lcall
cmp
pop
push
push
mov
imul
enter
gs
pop
sbb
andl
push
pop
jg,pn
shll
in
or
stos
adc
push
rolb
data16
cmpsl
hlt
jo
mov
pusha
out
mov
outsl
sbb
loopne
adc
push
inc
in
xchg
aaa
mov
xchg
in
js
popf
inc
pushf
arpl
fistl
arpl
outsl
xor
stc
mov
stos
loope
sti
dec
xchg
iret
test
into
mov
out
out
cwtl
jecxz
imul
pop
sbb
xor
mov
lods
negb
xor
outsb
xchg
arpl
hlt
or
pop
and
clc
repz
jg
mov
sbb
mov
in
mov
into
adc
mov
leave
inc
cmp
cs
jle
out
jb
sub
xor
mov
sub
cli
cli
inc
dec
or
das
test
xchg
lahf
lea
jbe
mov
mov
loop
jns
testl
in
mov
arpl
sub
dec
stos
lret
add
lock
sub
mov
hlt
lret
fbstp
add
mov
lods
repnz
xchg
hlt
cmp
add
ror
mov
xchg
loope
std
dec
xor
cmp
mov
push
repz
dec
and
add
push
add
mov
fisubs
cs
push
sub
cwtl
stc
mov
cli
out
and
loope
push
cwtl
enter
std
fdivrs
test
mov
ror
fwait
jle
push
enter
cmp
add
imul
shlb
fwait
sti
xor
test
lods
leave
mov
fwait
xor
lods
pushf
lahf
stc
mov
lahf
lods
dec
add
xlat
pop
mov
sbb
cvtps2pd
je
push
cmp
mov
inc
lds
push
jg
mov
mov
out
mov
inc
in
enter
cltd
notb
movsb
filds
imul
out
mov
lcall
mov
or
jmp
jo
dec
sbb
adc
out
sub
cli
or
push
mov
aaa
leave
pop
xor
dec
stc
scas
ja
push
xchg
sbb
bound
ljmp
out
leave
stc
nop
lods
pusha
sbb
and
or
jbe
cmpsb
cs
mov
adc
roll
nop
mov
xor
iret
daa
jno
add
test
cmp
push
push
faddp
adc
xor
inc
push
out
mov
xchg
mov
bound
xchg
xchg
and
out
andps
int3
mov
or
jl
inc
arpl
int
add
or
mov
inc
call
jecxz
pop
cmp
sub
pop
lock
mov
icebp
or
inc
xchg
or
cmp
out
shll
es
push
xchg
mov
icebp
lods
mov
mov
pop
pop
pop
adc
mov
cwtl
adcl
hlt
or
fists
bound
shrb
xchg
jnp
xor
icebp
push
pop
push
cwtl
rcl
ss
push
cmp
cmp
sub
icebp
out
gs
scas
pop
rolb
mov
es
pop
icebp
pusha
arpl
inc
insb
pop
icebp
and
sbb
repnz
push
xchg
js
pusha
pop
and
jno
push
dec
xorb
add
mov
cmpsl
push
loope
clc
sti
jl
xor
or
mov
insl
or
cmp
adc
push
jns
negb
pop
push
addr16
icebp
pop
mov
mov
andl
and
dec
mov
sub
lods
push
jg
xchg
dec
pop
sub
and
xchg
mov
div
cli
xchg
shlb
mov
or
lods
sahf
cli
pop
shrl
or
pop
in
add
cmpsl
ss
sarb
jno
mov
push
add
sbb
sbb
lret
mov
testb
push
data16
movb
jge
std
xchg
pop
cmp
nop
jns
cmc
shrl
mov
pop
jg
dec
cwtl
js
pop
out
sbb
adc
xorl
inc
xchg
add
or
imul
or
sub
mov
std
jbe
adc
and
push
push
mov
xchg
mov
jmp
movsb
or
xorb
insb
dec
fucomip
sbb
xor
jno
ret
sbb
sub
mov
jne
pop
rcrl
adcb
das
repz
repnz
movsl
push
cs
cmpsl
push
test
loopne
dec
ss
and
call
jp
lods
sar
jg
or
sub
pop
mov
lods
inc
inc
xor
daa
outsb
std
rcr
cmpsb
sbb
sub
xor
push
insl
xor
inc
roll
inc
mov
mov
mov
cmc
enter
jnp
out
pop
mov
mov
mov
sub
push
push
pop
push
xor
jne
mov
xlat
adc
cmp
and
out
mov
sub
xchg
fs
push
icebp
cs
mov
mov
inc
gs
ficomps
sbb
xorl
dec
jge
in
jnp
xor
mov
sbb
mov
popa
push
stc
and
push
jl
popa
push
addr16
mov
push
xor
mov
imul
in
int3
mov
sub
push
add
ss
pop
xchg
fildll
shlb
mov
pop
sbb
xchg
aas
sub
aad
mov
mov
xorb
lea
lret
test
hlt
mul
mov
aam
fwait
cld
xorl
push
and
aas
sahf
adc
fisubl
lret
xchg
and
dec
xor
mov
js
in
jg
jae
jle
xchg
mov
jb
es
add
mov
ret
or
jle
mov
xor
bound
scas
xor
sbb
mov
cmp
mov
cmp
ja
ja
xchg
scas
inc
or
xor
stc
mov
push
pop
lods
and
mov
mov
dec
adc
fldcw
stc
mov
ret
xchg
add
xchg
sbb
sbb
inc
aas
pop
ss
push
stos
mov
jbe
aad
fcompl
add
sub
push
lret
add
and
jmp
jae,pn
idiv
sbb
cmc
push
xchg
leave
mov
dec
mov
xchg
xchg
leave
hlt
inc
or
pop
mov
mov
add
add
in
sub
ret
shl
cmpsl
sbb
loop
jae
es
cmc
push
pushf
mov
or
xor
loop
add
lcall
in
mov
sarw
xor
rcrl
pop
mov
jne
les
jp
ja
icebp
xlat
lcall
stos
inc
out
mov
in
and
mov
arpl
shr
push
and
mov
test
or
notb
testb
les
adc
or
sub
addl
jae
or
mov
arpl
rclb
cld
push
movsb
rcrl
dec
inc
lock
addr16
call
xchg
or
jl
gs
push
jle
sbb
mov
sub
mov
dec
fisttpll
mov
and
adc
insl
mov
leave
add
mov
and
xchg
mov
scas
test
outsl
push
clc
icebp
adc
dec
cmp
gs
push
adc
push
add
jnp
cmp
cmp
mov
sti
jnp
pop
or
cmp
pop
and
ds
push
and
push
aam
xchg
mov
dec
dec
pop
add
inc
jge
mov
dec
push
cmc
jne
shlb
sti
sub
mov
aas
movsl
shr
and
ret
dec
cmp
mov
add
push
xlat
mov
jns
orl
and
pop
mov
mov
xor
jp
shr
mov
out
xor
push
or
mov
outsb
pop
cmc
rcrb
imul
repz
fs
cmp
inc
cmpsl
dec
add
or
mov
mov
and
xchg
ret
out
mov
clc
es
pop
outsb
repz
ret
and
out
jle
shlb
and
xor
adc
xlat
inc
sub
ds
cmp
aas
or
imul
pop
mov
stos
sub
inc
ficomps
inc
pop
xchg
jmp
es
dec
mov
stos
sbb
pop
xchg
push
js
or
add
push
out
pusha
add
pusha
mov
fwait
cmp
sub
stos
in
sbb
outsb
and
or
pop
inc
dec
add
movsb
in
mov
out
fiaddl
push
ret
lret
mov
bswap
es
jg
dec
stos
pop
roll
inc
inc
push
xor
das
or
mov
add
out
repz
sub
into
rcll
cltd
and
shlb
jb
add
sahf
pop
lock
push
std
cld
sub
repnz
cmp
cmc
dec
mov
lret
and
inc
aas
cmc
ljmp
xor
adc
hlt
adc
xor
jns
sub
out
out
popa
lret
inc
dec
movsb
add
lods
dec
dec
sbb
insl
aas
test
mov
fisubrs
dec
test
cltd
lods
jb
enter
push
outsb
mov
xchg
loop
pusha
mov
inc
adc
sbb
push
jge
and
clc
fsubrs
shrl
into
stos
rcrl
inc
push
pop
cmp
jle
pop
xchg
stc
mov
add
pop
sub
outsl
out
lahf
add
add
mov
pushl
imul
gs
mov
pop
iret
mov
bound
xchg
inc
mov
or
in
das
das
push
mov
cs
and
sub
sub
and
xor
pop
mov
xchg
shlb
or
adc
mov
int3
cmp
push
aas
inc
popa
sbb
outsl
jae
xor
loop
dec
mov
out
cmp
xchg
adc
ret
push
mov
in
or
dec
sbb
mov
test
sub
jne
push
sub
out
mov
pushf
ret
and
mov
mov
pop
inc
fs
fcompl
rorl
icebp
cmpsl
and
inc
es
sbb
rolb
xchg
mov
in
lahf
pushf
aaa
cmp
lret
xchg
cmpsl
lea
andl
mov
scas
ss
les
xchg
addr16
xchg
scas
lret
xchg
fildll
sahf
push
pop
int3
shl
and
mov
pusha
cmc
dec
out
je
or
or
xor
div
dec
stc
aaa
jecxz
xor
insl
movsb
fistps
mov
push
xchg
push
xchg
jb
xchg
mov
mov
mov
sub
jb
es
sub
xor
add
or
sbb
sbb
nop
jge
sub
aam
adc
xorb
push
test
imul
mov
inc
xchg
push
push
rolb
jge
jmp
mov
or
pop
cmp
or
sbb
das
adc
lahf
add
insb
lcall
jl
mov
mov
test
out
loope
adc
loopne
inc
jno
mov
mov
stc
cwtl
aaa
std
xor
jo
dec
in
int3
insl
sub
or
sub
xchg
xor
or
outsb
cwtl
xchg
cmpsb
out
xchg
push
or
pop
in
mov
fwait
lcall
jle
in
out
dec
je
add
pusha
pop
sub
mov
xchg
mov
es
mov
push
movb
push
mov
into
fimuls
inc
dec
enter
int3
push
and
fwait
jae
mov
andb
imul
lret
and
push
nop
mov
and
xchg
cmp
inc
mov
or
dec
jno
hlt
es
pop
out
scas
cld
andl
mov
lods
adc
push
cmp
push
cmpsl
fwait
ret
daa
aaa
jnp
inc
or
fistpll
pop
stc
cmc
jl
add
push
jne
cmp
movsb
mov
cmpl
jge
adc
fiadds
pop
dec
lret
sub
das
jp
inc
dec
aam
call
scas
lds
pusha
insb
sbb
std
jb
push
cmp
mov
lock
daa
scas
outsb
xchg
add
cmpsb
jmp
cmc
pop
jmp
leave
and
cmp
ljmp
mov
mov
xor
test
sbbb
clc
mov
push
mov
mov
xchg
sbb
or
fcmovnu
gs
and
lods
aad
movsl
daa
sbb
xor
cmp
popa
adc
cmp
mov
das
lahf
mov
test
mov
or
cmpsl
sbb
iret
mov
push
ret
jo
test
mov
dec
inc
fwait
insl
xor
mov
push
xor
in
dec
loope
inc
jno
add
adc
loopne
in
xor
mov
push
adc
push
push
dec
daa
mov
jecxz
shll
insl
ljmp
insl
add
mov
les
xor
ja
and
jne
aam
push
adc
xadd
mulb
lds
or
mov
inc
jp
iret
jle
jge
cmp
sub
outsb
jp
adc
mov
mov
outsl
sub
lock
xor
xchg
in
es
lret
in
and
push
adc
sub
jnp
test
sub
aad
cmp
in
add
in
and
sub
outsl
mov
shll
dec
ljmp
xchg
mov
and
and
lret
xor
xor
lcall
and
mov
lcall
and
lcall
xor
sarb
jb
mov
sub
push
lret
rclb
xchg
xchg
adc
xor
orl
int
je
jo
sbb
jb
lcall
jmp
fnstcw
and
xchg
test
lock
test
dec
sti
xor
dec
mov
insb
adc
call
mov
lahf
loopne
adc
shlb
imul
gs
out
mov
out
jle
stos
jne
clc
xor
orb
or
add
cmp
popf
ja
push
fchs
clc
mov
sarb
jmp
mov
pop
rcrb
sahf
push
loop
jg
cmp
js
mov
push
loop
mov
cli
cmpsb
loop
cmp
jno
sti
inc
jo
and
xor
in
ret
stos
mov
mov
movsb
pop
jle
ljmp
jae
adc
in
out
aam
mov
adc
aad
xlat
outsb
cmp
and
add
rorb
out
fcmovnb
pop
add
cli
cli
xchg
lock
nop
dec
cmpsb
in
pusha
sahf
test
orl
mov
cmp
outsb
sub
mov
pop
cmp
lcall
mov
adc
imul
jp
scas
cmpsb
mov
adc
mov
add
push
or
rorb
add
rcl
dec
insl
fwait
push
jp
ficoms
ss
xorl
js
sub
lods
jle
insb
mov
mov
push
mov
mov
xor
sub
push
ljmp
xchg
and
jo
jne
rclb
enter
mov
out
out
mulb
mov
mov
mov
in
lcall
rcrl
xor
mov
arpl
int
call
ss
lcall
cltd
pop
mov
cli
lret
jl
pusha
mov
orl
add
imul
rorl
dec
je
xchg
arpl
or
jno
cli
mov
inc
rorl
ret
mov
popa
push
mov
mov
push
mov
sbb
add
je
mov
push
xor
adc
fdivr
pop
pop
sub
adc
pop
xor
mov
add
and
sub
add
cmpsl
adc
in
xchg
inc
enter
and
dec
addr16
and
cmp
cmp
mov
jno
adc
repz
mov
in
out
popf
add
inc
sarl
ljmp
xchg
pop
fucomp
mov
or
mov
and
sbb
aam
jl
call
cmp
sbb
ret
sub
lods
decl
adcb
and
cmc
mov
test
movsb
aas
fistps
popa
icebp
pop
and
lds
push
je
imul
fldt
pop
roll
push
leave
sbb
test
pop
inc
cmp
push
jg
jg
mov
sbb
and
lret
and
mov
pop
jecxz
dec
and
bound
loop
movsl
mov
lret
sbb
js
mov
pop
jns
push
test
jb
repz
push
mov
mov
or
or
jp
lds
adc
mov
pop
push
or
lret
adc
push
xchg
push
sbb
in
mov
loopne
loopne
push
lret
mov
leave
decl
add
pop
bound
push
das
jp
xchg
arpl
cmp
sub
lcall
ss
out
xchg
ret
aaa
or
negb
inc
addr16
addr16
dec
enter
push
roll
inc
loop
lods
xchg
dec
xchg
insb
jno
cltd
push
pop
inc
shrl
cmp
sub
inc
loop
xor
sbb
adc
test
and
mov
test
mov
jnp
jb
jmp
aas
xchg
pop
inc
shrb
arpl
in
lret
mov
adc
sti
xchg
js
and
pop
int
jle
cs
out
mov
icebp
mov
test
sub
movsb
inc
das
xabort
add
fwait
jb
add
arpl
daa
cmpsl
bound
pop
cmp
xchg
push
lods
xorl
in
dec
xor
mov
xor
mov
fwait
adc
sbb
in
pusha
cs
mov
xchg
je
jne
flds
movsb
and
mov
das
or
or
mov
xor
xchg
jge
filds
push
test
sub
pop
jb
cld
int3
scas
rcrb
imul
adc
jno
push
movsl
add
lods
lahf
push
xchg
aas
push
fs
push
jno
add
inc
inc
ret
das
xchg
popa
mov
jecxz
lret
daa
mov
negb
rcl
xchg
stos
lret
pop
jmp
call
push
sub
popf
rcrl
call
or
pop
daa
popl
es
in
pop
push
fcoml
fsts
pop
test
mov
and
loope
movsl
inc
or
vpsubusw
std
lret
jno
jecxz
mov
inc
pusha
inc
sub
stos
inc
test
ds
adc
mov
notl
or
sub
enter
iret
xchg
mov
lock
dec
sahf
or
xchg
xor
add
cmp
and
jae
or
jb
or
scas
pop
fisttps
aaa
jae
jne
mov
push
fadd
out
inc
lods
adc
xchg
mov
mov
mov
mov
sbb
or
pop
pop
inc
out
ds
sub
push
pop
fcoml
sti
out
in
push
cmc
push
pop
inc
adc
hlt
iret
or
cmpsb
xor
or
movsl
xorb
and
cwtl
rcrb
push
inc
out
dec
jnp
mov
xchg
mov
mull
lret
cmpsl
into
dec
sti
jno
dec
xlat
dec
jb
xchg
scas
mov
fs
jb
cmpsb
and
push
stos
xchg
aaa
ja
add
jle
test
push
pop
dec
inc
mov
dec
in
or
inc
fidivs
cmp
loopne
xchg
xchg
mov
test
mov
push
inc
repz
sub
in
or
inc
sbb
sbb
pusha
lahf
fldl
aam
stos
jno
incl
das
outsl
js
data16
push
mov
cltd
je
mov
sbbl
jl
jg
jbe
icebp
fwait
aam
into
inc
or
sarb
inc
sbb
out
testl
xor
xchg
pop
aad
adc
iret
out
stos
fmuls
std
add
out
int3
ljmp
mov
daa
iret
pop
jge
xchg
inc
hlt
push
cmpsb
fmul
xchg
je
push
and
ret
in
xor
and
xchg
int3
mov
and
push
dec
xchg
add
push
sbb
inc
ss
jmp
ss
push
out
outsl
adc
pop
loope
pop
sub
jecxz
mov
dec
cmc
inc
in
stos
or
and
lods
dec
xchg
pop
sahf
mov
push
call
arpl
xor
sti
sti
jns
mov
or
test
push
xchg
dec
lahf
aam
inc
clc
mov
xchg
js
test
pop
imul
xor
loope
imul
mov
push
movsb
jns
mov
mov
cltd
jecxz
xchg
xchg
inc
jo
shl
popa
pop
cwtl
mov
sahf
cli
ret
pop
mov
cs
add
lds
pop
xor
clc
divb
dec
add
sar
lcall
dec
cmp
ret
sub
je
movsb
jmp
adc
in
mov
xlat
aam
insb
mov
cld
cmp
dec
out
js
scas
mov
sbb
movsl
jp
fsub
mov
jl
pushf
sub
loop
sub
fmull
aaa
int
lock
lret
subb
test
mov
add
pop
pop
xor
stos
out
lret
dec
add
sbb
and
popf
add
loop
sbb
insl
addl
call
sahf
mov
jl
push
clc
das
xchg
fidivs
pushf
pop
int
repz
adc
loop
nop
mov
jge
mov
cs
movsb
outsl
push
movsb
push
xor
arpl
cmc
cmp
mov
mov
sbb
add
test
outsl
loopne
or
sub
cmp
cmp
fcom
je
jns
sarl
stos
or
fcomi
addr16
test
mov
es
cmp
test
xor
cmpsl
lret
popa
aaa
push
adc
xorb
xchg
sub
jnp
stc
mov
addr16
jge
fdivrl
fdivs
cwtl
scas
jmp
adc
jne
xchg
sub
dec
andb
enter
lahf
ss
arpl
sub
dec
adc
sub
cmpsb
xchg
mov
sbb
aas
aad
js
jb
inc
mov
adc
xchg
add
sti
lods
cmp
or
ret
roll
repnz
adc
out
out
aaa
cmp
bound
add
adc
sti
jb
sub
sahf
bound
sti
adc
push
enter
leave
sbb
je
xchg
fcompl
push
jae
int
push
xor
fdivr
mov
dec
cli
notb
pop
in
data16
jmp
xlat
mov
loop
in
daa
mov
mov
add
mov
out
inc
roll
push
inc
dec
fdivs
mov
fwait
or
adc
push
ret
xor
incl
push
jp
and
or
dec
sahf
mov
sti
repnz
out
outsb
movsl
and
sbb
shrl
mov
push
adc
sbb
cmp
mov
movsl
adc
ja
in
mov
inc
xchg
iret
fs
out
outsb
imul
xlat
sti
or
sarl
movsb
out
xchg
inc
xor
mov
cld
and
dec
add
jae
add
cmp
jle
push
lcall
scas
jo
and
sbb
pop
add
dec
sbb
inc
lods
mov
jb
lock
jae
andl
jo
lods
xor
or
aad
ja
jnp
adc
jmp
inc
inc
fiadds
rep
je
lods
divl
cmp
ja
test
add
add
jle
xor
addr16
mov
xchg
mov
jecxz
mov
add
mov
adcb
shl
shlb
dec
add
push
jo
sbbb
lret
iret
fdivp
or
in
dec
adc
push
je
ss
int
inc
leave
ds
imul
outsb
aas
xchg
cmp
stos
clc
out
cli
fnstcw
mov
pop
mov
aad
testl
outsl
and
dec
call
cltd
lret
cli
mov
mov
mov
adc
mov
inc
ffreep
roll
inc
mov
xor
cltd
jb
xchg
push
shl
push
sub
jg
sub
aaa
sbb
mov
insl
jb
sbb
andb
jno
bound
sbb
call
inc
lea
int3
xlat
mov
data16
mov
dec
in
std
cli
sub
adc
inc
lea
add
test
xorl
popa
ja
aad
clc
add
adc
outsl
shll
jmp
jecxz
sub
dec
aam
fcmove
and
in
lcall
out
mov
lret
jnp
or
insl
mov
aaa
ljmp
pop
cltd
orl
pushf
in
pop
sub
xchg
or
inc
out
add
in
mov
cmp
rcrb
addb
enter
sub
dec
ficomps
xlat
add
cmp
lods
arpl
cmpsl
leave
fnstcw
out
bswap
lods
xor
lahf
mov
ds
flds
push
jb
or
xchg
insb
inc
push
int3
nop
push
push
mov
mov
loope
cld
movsl
jp
inc
out
subl
and
jp
fistpll
and
push
xchg
mov
gs
aad
pop
push
or
mov
pushf
mov
or
add
push
pop
jns
mov
lcall
pop
pop
sbb
adc
lahf
hlt
add
push
and
pushf
adc
xchg
ret
shlb
mov
enter
test
loopne
lret
in
test
pslld
addl
sbb
ja
pop
or
andb
xchg
aaa
mov
stos
sub
jo
enter
shl
or
mov
jl
fwait
dec
pushw
insb
std
insb
mov
jl
jecxz
popf
cmpsb
ja
inc
dec
nop
mov
mov
fcoml
xor
adc
adc
sub
test
enter
add
sbb
into
pop
inc
loope
push
test
ret
ljmp
dec
pop
mov
cmc
and
daa
sbb
sub
inc
adc
adc
push
dec
jne,pt
inc
inc
sub
fbld
jbe
lods
push
push
mov
jge
sbb
xlat
push
popa
or
insl
xchg
and
push
sarl
sbb
push
xchg
rol
sub
sub
xchg
das
fs
movsb
fadds
push
gs
cmp
sub
bound
fbstp
mov
mov
pop
pop
fxch
cmpsl
subl
fsub
sub
adc
cmp
push
mov
jno
sbb
fs
imul
sub
mov
adc
cmpsl
pop
pop
push
outsl
insb
enter
add
rcrb
push
sarl
movsl
lret
sbb
mov
arpl
rcll
mov
xchg
or
repnz
outsl
or
clc
out
popf
sub
mov
and
std
jmp
or
into
xor
inc
test
scas
nop
sbb
dec
in
aaa
jne
jae
popa
lcall
aad
data16
clc
adcl
xor
rcrb
pusha
bound
push
xor
mov
jb
pop
xchg
xor
mov
shlb
mov
dec
mov
fsubrs
dec
into
lock
mov
pop
push
and
mov
dec
lds
push
call
jmp
out
aam
mov
pop
and
in
mov
pop
pop
mov
leave
pop
pop
es
inc
xor
inc
adc
mov
adc
in
into
fcompl
and
mov
mov
cmp
jmp
mov
sub
test
or
jns
data16
aaa
testl
cli
inc
jmp
ljmp
cmp
shll
pop
out
enter
or
jae
fxam
mov
out
fistps
jne
jb
mul
loop
arpl
push
xchg
xchg
add
inc
mov
imul
lods
scas
and
dec
rcrl
aaa
cmp
or
and
out
cld
out
lods
stc
cmp
loope
mov
rclb
pop
aam
push
decb
imul
out
cld
mov
loop
movntq
aaa
stos
into
adc
ja
push
iret
out
lahf
inc
jge
cmp
popa
mov
jb
hlt
cltd
adc
sub
jg
jle
push
jecxz
bound
addr16
dec
jmp
jge
push
lcall
lods
adc
testl
sbb
jge
jae
push
les
lods
adc
in
sub
pop
outsl
push
adc
and
fcmovb
mov
scas
push
mov
pop
or
mov
mov
and
jbe
popa
cmc
push
cmp
dec
mov
mov
orb
sbb
mov
sbb
xorb
fnstenv
jle
push
ljmp
jg
jne
loope
mov
stc
adc
mov
stos
sbb
xchg
pop
dec
loop
stos
sub
jb
mov
cs
enter
sbb
lcall
fiaddl
sbb
mov
test
sahf
jo
mov
mov
imul
cmc
pop
test
sub
hlt
push
mov
push
repnz
mov
cli
test
mov
cld
mov
cwtl
xchg
cmp
and
xorl
rorb
xchg
daa
add
loopne
cmc
leave
and
sub
jno
push
and
loope
dec
sbb
sbb
iret
mov
and
push
mov
add
lea
and
pop
lcall
scas
jbe
subb
push
lahf
cmc
jg
dec
adc
cli
sbb
add
cmp
sbb
mov
in
xchg
xchg
xor
lods
xlat
les
ret
mov
push
out
fnstcw
mov
mov
ret
into
cmp
aad
sbb
fidivl
out
or
push
sahf
mov
sub
cmpsl
adc
enter
jmp
stos
fldt
pop
roll
push
or
hlt
dec
sub
aam
roll
mov
sti
cwtl
outsb
mov
shrb
dec
or
rorb
mov
loope
dec
loope
or
and
dec
xor
je
mov
pop
inc
mov
jmp
std
inc
xor
sbb
sbb
lea
shl
mov
mov
imul
fidivl
dec
push
xlat
popf
aaa
sbb
ljmp
test
psubw
sbb
mov
and
xor
inc
pop
out
lds
dec
and
adc
jmp
xor
outsb
push
sub
scas
ret
jb
mov
outsl
pop
or
inc
or
adc
outsl
xchg
popa
push
xchg
popf
ret
dec
and
insb
les
call
pop
pop
cmpl
clc
inc
jp
dec
leave
dec
stc
xchg
call
outsl
incl
or
pop
jmp
xorb
lret
je
mov
mov
cmpsl
pop
and
mov
mov
mov
xor
cmp
cld
cmpsl
ljmp
mov
fmuls
clc
sub
sub
inc
arpl
push
and
inc
mov
adc
in
clc
pop
add
ficomps
mov
cmp
pop
pop
fdivrl
sub
mov
cld
mov
add
sti
test
ss
jp
mov
loope
fdivrs
es
punpckhbw
push
inc
data16
mov
adcl
inc
mov
xchg
xchg
inc
into
inc
sbbb
jmp
test
inc
or
dec
and
adcb
push
shlb
out
xor
outsl
mov
or
outsl
mov
or
push
add
mov
negb
mov
popa
daa
jbe
fs
mov
sbb
mov
stc
ret
out
jp
mov
aad
scas
ja
sub
test
out
sti
out
xlat
adc
stos
sub
int
jb
lahf
mov
push
pusha
fnstenv
mov
or
scas
aam
cmpsl
sub
lea
pop
incb
mov
jecxz
sbb
xlat
pop
aam
lret
imul
out
sbb
das
les
push
ss
and
pop
pop
lret
mov
data16
dec
cmpsl
out
jne
jns
mov
int
jmp
or
lock
or
jnp
sub
daa
stc
sub
mov
mov
sub
pop
pop
dec
xor
adc
mov
lret
adc
das
pop
inc
clc
jns
int
xchg
imul
lock
outsl
std
imul
rcll
imul
je
lods
outsb
cld
mov
cld
orb
xor
inc
cld
cmp
xor
jne
mov
push
sbbb
cmc
add
xchg
test
sub
mov
ret
jle
bound
and
xor
mov
fimuls
rclb
lock
gs
adc
pusha
dec
push
test
out
jns
xchg
psubb
cs
inc
and
sub
aaa
add
dec
mov
sbb
xchg
mov
shll
cmpsb
and
jl
lds
daa
sub
sub
sbb
ljmp
pop
mov
out
push
cli
dec
pop
sbb
push
dec
jnp
mov
stos
dec
adc
xchg
mov
adc
or
jo
aas
mov
lcall
js
nop
lahf
adc
jmp
inc
sbb
stc
cli
push
or
in
nop
imul
or
stos
daa
pop
xor
cmp
jmp
in
lret
jae
aaa
sub
xor
ret
add
cs
cs
push
mov
or
loop
push
int3
das
leave
sub
int3
mov
lret
pusha
lret
mov
add
add
xchg
push
or
jmp
and
imul
cmpb
cmp
pop
cmpl
pop
js
loope
cmp
sbb
cltd
push
cmc
sti
push
aad
imulb
push
add
lcall
inc
cwtl
sbb
dec
cs
cmpsb
inc
enter
dec
cmp
daa
mov
xchg
out
fidivl
sahf
cmc
jne
cmp
or
rcrb
or
mov
mov
es
out
xlat
xchg
aas
mov
fnstenv
arpl
sbb
mov
push
cmp
push
or
and
jns
gs
lea
or
jl
push
int
jo
lahf
jne
aas
movb
push
ljmp
outsl
push
popf
lea
cmp
inc
xor
je
adc
popa
jns
adcb
mov
mov
jns
mov
cmp
add
in
pop
cmp
pusha
in
stos
or
add
xchg
addb
mov
fnsave
sub
push
xchg
inc
or
int3
push
mov
hlt
repnz
jbe
int3
mov
lea
pushl
inc
push
popl
mov
loopne
shrl
shrl
push
fcoml
fisubl
addr16
xchg
xchg
mov
sbb
sub
jbe
cmpsb
mov
sub
push
sahf
cmpsl
ja
sub
fnstenv
add
push
scas
push
push
pop
test
stos
fnstsw
pop
push
mov
push
jge
lods
lea
fldcw
arpl
lea
ja
mov
xchg
cmpsl
fisubrs
jb
xchg
stos
dec
xchg
sahf
scas
into
test
xor
test
into
andb
pop
dec
cwtl
bound
push
das
int
mov
movsb
xor
popa
sub
sub
fsubrs
pop
gs
dec
out
daa
aad
inc
test
cmc
cmpsl
iret
pop
inc
movsb
dec
sti
and
hlt
cwtl
pop
cmp
fldcw
jmp
and
out
pop
push
into
mov
mov
xchg
xor
mov
movsb
test
and
adc
push
inc
out
jb
sub
cmp
xor
jae
jno
mov
push
inc
cmp
jmp
mov
subl
repz
test
aaa
scas
sbb
sub
cmc
ret
rolb
insl
sbb
in
xlat
jnp
and
mov
sub
dec
pushf
out
mov
sarb
push
sub
dec
rolb
mov
cmc
fidivs
sub
fsubrs
dec
xor
sub
pop
shl
imul
in
pop
test
dec
push
repnz
sbbb
call
cli
imul
ret
xchg
dec
push
push
xor
and
jmp
lahf
xor
push
jl
mov
iret
aaa
sub
add
adc
inc
ss
iret
inc
mov
mov
shr
mov
xchg
test
fstl
sahf
testb
movsl
je
push
je
gs
mov
pop
add
rorl
lock
push
daa
test
sahf
mov
pop
sub
mov
mov
fisttpl
adc
aas
adc
mov
roll
inc
mov
stos
jno
sti
sub
mov
jae
cmpsb
cmp
into
test
xchg
mov
mov
sti
xor
lods
xchg
data16
jns
inc
jae
popa
and
pusha
sbb
pop
push
mov
sub
repz
sti
xchg
xor
push
push
mov
jns
aas
xchg
or
or
pop
xchg
movsl
in
sbb
pop
sub
jecxz
iret
aam
sarb
outsb
jo
ljmp
fs
into
mov
clc
stos
test
adc
push
je
std
in
mov
cmpsl
and
mov
add
jp
jnp
rcrl
mov
or
inc
test
mov
clc
lock
call
in
jecxz
xchg
sub
or
lods
mov
sti
ret
ja
outsl
jne
orl
pop
cs
dec
xchg
neg
movsl
lcall
cmp
call
lcall
in
xchg
loopne
cmp
test
dec
inc
sbb
movl
dec
jo
xor
dec
hlt
ret
push
in
data16
mov
cmp
andb
insb
dec
test
cld
loop
in
push
imul
mov
mov
xchg
pop
pop
and
insl
mov
pop
ret
sub
popf
mov
mov
mov
movsl
mov
sti
cmp
xchg
ret
gs
jns
or
lret
call
ljmp
movsl
sahf
ret
aas
pop
jecxz
aas
jge
ljmp
clc
call
dec
pop
xor
push
test
cld
lcall
test
adc
mov
mov
bound
push
mov
jmp
and
push
test
cmp
dec
sub
mov
sbb
test
pusha
and
dec
pop
sbb
pop
test
adc
jl
and
pushf
int3
adc
mov
ret
cmpsb
mov
dec
imul
sti
test
enter
adc
repnz
adc
cmp
mov
pop
test
out
cmp
loop
cmc
cltd
cs
fadds
ret
inc
or
outsl
pop
pushf
jns
push
movb
mov
iret
fwait
jbe
jl
and
inc
sbb
xchg
xor
adcl
js
adc
cmpsl
inc
pushf
jnp
pushf
lret
js
cld
cmpsl
adc
fnsave
or
ja
es
jae
cld
push
fs
mov
and
pop
stos
pusha
bnd
mov
in
mov
xor
fistpl
sbb
xor
dec
cmpsl
inc
lods
shll
pusha
push
inc
rclw
lods
addr16
in
mov
sbb
out
test
mov
bound
pcmpgtw
test
lret
sub
or
sub
js
out
movsb
jne
in
xor
xchg
xor
cmpsb
sahf
sarl
outsb
xor
loopne
adcb
push
imul
and
xor
loope
mov
daa
inc
cmpsl
sbb
dec
nop
or
lock
or
lods
leave
lret
pop
pop
xor
mov
pop
sahf
mov
push
add
and
mov
xor
clc
aas
mov
or
sbb
sbb
inc
push
add
movsl
sub
mov
test
lods
sub
jecxz
lods
ja
mov
imul
out
rcrb
icebp
dec
lods
jp
sbb
les
jle
outsl
cwtl
mov
aam
adc
push
sbb
sub
or
popa
es
dec
cmp
int
pop
jle
gs
aaa
push
cmpsl
lods
add
sbb
out
jmp
into
sub
testl
push
or
push
adc
loopne
jae
xor
xchg
lret
pop
dec
push
or
or
leave
loope
dec
lds
sbb
dec
jb
lock
lds
outsl
adc
add
rcrb
aam
nop
mov
add
add
jae
jmp
pop
push
cld
jl
mov
add
nop
mov
pop
mov
lret
xchg
cmpsl
and
sbb
in
repz
xchg
xchg
lcall
lret
xlat
repz
popa
stos
mov
cmpsl
imul
mov
mov
test
mov
psrlq
fsubs
push
xor
cmp
adc
push
jne
js
stos
out
insb
xchg
pop
fcoml
mov
pop
daa
pop
and
sti
xchg
shrl
cli
lret
push
test
dec
xlat
lds
ljmp
push
xor
out
push
and
aad
and
pop
loope
dec
pop
inc
add
inc
inc
nop
mov
aas
mov
sbb
jo
mov
and
xchg
jb
or
or
mull
lock
xor
sub
out
cmp
int
mov
cmp
js,pt
shrl
addr16
sbb
push
cmp
adc
pop
xchg
in
ret
clc
aam
imul
pusha
mov
sbb
bound
pop
push
sahf
sub
mov
push
pop
pop
mov
adc
jge
and
mov
fcomp
in
xchg
inc
mov
les
pop
pop
in
test
and
sbb
jmp
insb
sub
or
inc
jnp
pop
hlt
mov
or
lcall
cmpsb
out
out
mov
lcall
jl
lret
aaa
or
int
push
mov
and
push
aaa
movsb
scas
push
and
xchg
sub
fnstcw
pop
enter
dec
dec
mov
inc
pushl
fwait
xchg
aaa
outsb
and
ja
popf
daa
mov
sbbb
pop
test
pop
faddl
sbb
mov
pop
mov
jge
mov
adc
ja
xor
dec
daa
xchg
mov
jne
push
mov
jp
fcomps
and
in
push
mov
mov
push
ja
add
test
ljmp
cmp
movsb
fsubs
or
jns
add
push
cld
mov
pop
jo
lea
jbe
ret
sbb
cmp
or
pop
comiss
mov
xchg
cmpsl
idivb
mov
cmp
mov
adc
inc
aaa
or
sahf
loopne
in
lds
and
jg
gs
repz
cld
inc
pop
pop
cmp
mov
sbb
ret
outsl
jmp
xor
add
mov
dec
mov
out
sahf
jne
xor
mov
xchg
movsl
fwait
inc
stc
jo
jns
inc
insb
pop
in
mov
test
jp
push
push
test
jmp
lcall
andb
out
addr16
es
push
inc
mov
loop
in
shrb
adc
out
stos
mull
sbb
xchg
loopne
testb
pop
loop
repnz
popa
pop
mov
repz
jo
ret
pop
push
jae
pushf
sarb
repnz
push
push
pop
std
cmc
or
inc
push
rolb
scas
pop
sbb
in
cmpsl
and
js
ljmp
push
mov
shll
add
cltd
sbb
jno
lcall
lods
add
dec
cmp
pop
mov
inc
and
ljmp
adc
xchg
out
pop
ret
pusha
mov
and
mov
aas
ds
dec
push
stc
lar
xor
inc
rclb
xchg
push
xchg
lahf
mov
inc
mov
mov
and
adc
mov
gs
das
lcall
sub
adc
outsl
test
xorl
cmpsb
lea
inc
pop
bound
outsl
dec
fildll
loop
in
dec
fs
or
dec
or
adc
sbb
jno,pt
mov
mov
cmp
sub
clc
stos
pushf
and
loope
or
shrb
push
push
dec
add
mov
and
enter
js
mov
dec
jno
dec
mov
mov
mov
pop
enter
clc
jg
out
and
fsubrp
insb
leave
mov
mov
clc
repnz
jl
or
lods
lcall
in
xchg
test
dec
add
xchg
jp
jnp
add
jmp
nop
fnop
inc
dec
add
test
call
adc
mov
adc
cmpsl
or
jge
aaa
mov
loopne
or
fistl
adc
lea
cwtl
mov
xor
pushf
sub
pop
push
lahf
shl
fstpl
ds
popa
lds
pop
xchg
cwtl
js
lcall
adc
push
aas
add
sub
push
wbinvd
jmp
adc
xor
call
push
push
sbb
inc
add
je
and
add
sub
push
sub
filds
mov
xor
out
adc
test
lods
int
and
out
leave
cmp
rol
imul
mov
xchg
fwait
add
cmc
popf
rcrb
leave
loope
rcl
cmp
mov
stos
clc
jg
sti
popa
mov
xor
and
adc
lahf
loope
adc
xor
mov
xor
stc
jmp
imul
jl
repz
or
cli
repz
and
cmp
icebp
xor
mov
fisttpl
lock
mov
pop
dec
xchg
int3
cli
add
adc
bound
popa
cmp
pop
popf
mov
rolb
xor
insb
add
in
test
xchg
adc
mov
es
ja
pushf
mov
stc
jne
insb
xchg
mov
hlt
mov
and
fidivrs
std
inc
xchg
mov
int3
int
js
and
lds
mov
xchg
stos
adc
dec
xchg
sub
loopne
dec
cmpsb
pop
pop
mov
jns
loopne
ret
xchg
add
movsb
testb
out
movaps
rorb
shrb
adc
xchg
mov
pop
inc
mov
add
lock
popa
mov
push
sbb
popa
push
push
ficompl
lods
inc
sub
adc
push
sub
sbb
adc
inc
fstpt
cmp
out
cwtl
sbb
call
data16
sbb
adcl
stos
xchg
shll
mov
and
xchg
mov
push
nop
and
imul
aad
flds
sbb
push
loop
xor
into
in
add
xor
into
cli
cmc
mov
push
pop
ret
lcall
mov
in
jo
rorb
leave
mov
mov
out
add
hlt
add
popf
push
and
push
lods
mov
xchg
into
xchg
int
cmp
mov
out
out
lret
xor
cmpsl
inc
xorl
and
out
pushf
dec
lods
shrb
movb
xorl
adc
out
dec
add
push
push
sbb
gs
rcl
cli
or
sub
pop
jmp
stos
movsb
das
daa
add
mov
xchg
pop
repnz
lock
sub
sub
xor
ret
movsl
dec
push
lock
mov
pop
bound
pushf
loopne
in
js
jb
adc
lcall
xor
push
sub
sub
pop
int
icebp
mov
mov
cmpsl
mov
dec
xchg
push
and
jp
and
int3
lods
mov
lahf
xchg
inc
cmpsb
add
xor
stc
fiadds
ljmp
jmp
lods
stos
pushf
lock
out
in
dec
jle
push
jmp
xor
xlat
push
mov
inc
stos
repz
sub
inc
pop
stos
mov
int3
jbe
pop
push
mov
sub
xchg
ret
mov
test
insb
adcb
sbb
inc
cltd
mov
inc
and
mov
push
push
lret
enter
xor
movb
pop
and
xlat
mov
pop
fs
jns
mov
mov
cmc
lods
inc
daa
shlb
leave
mov
outsl
adc
scas
inc
xor
mov
pop
dec
ljmp
in
test
dec
mov
bound
push
cs
inc
add
in
cmp
xor
aad
imul
js
mov
fs
lcall
jns
seto
leave
je
jp
leave
iret
push
pop
pop
pushf
data16
mov
mov
mov
ret
push
out
scas
enter
mov
sbb
adc
pop
in
scas
inc
pop
sti
inc
push
xlat
add
sahf
imul
clc
popa
push
sti
jecxz
inc
push
xchg
ret
jecxz
mov
mov
push
add
out
aam
aaa
xchg
mov
mov
jmp
mov
or
out
inc
and
push
out
push
loopne
sbb
cmc
push
inc
and
in
jno
xchg
rcrb
inc
jae
mov
xchg
scas
iret
dec
aas
aam
int3
xchg
or
xlat
xor
cmp
loopne
sub
cmp
dec
jnp
in
xchg
jne
arpl
aam
into
add
pop
xor
movsb
push
jnp
mov
outsl
xchg
cs
jmp
outsl
pop
adc
jg,pt
hlt
adc
sbb
pop
int3
mov
in
scas
adc
dec
inc
cmp
inc
adc
mov
jb
and
je
sub
jmp
lods
icebp
xchg
jp
mov
inc
pop
shlb
sti
shlb
pop
ds
jnp
mov
push
xchg
sub
sti
sub
sbb
sub
adc
sub
in
xor
int
mov
jo
or
in
cmp
jne
mov
inc
fcomps
mov
sbb
push
iret
push
mov
cmp
cmpsb
adc
jge
mov
xchg
icebp
jae
jno
mov
jmp
cmp
leave
xor
out
test
jmp
lahf
add
xchg
cmp
test
jle
imul
int
insb
mov
rcl
add
cs
repnz
fcmovnb
ret
shll
push
xchg
push
mov
or
pop
arpl
mov
push
pop
out
mov
lahf
mov
aad
outsl
iret
mov
lock
stos
repz
push
pop
sbb
popa
ljmp
aad
and
lret
xlat
mov
pop
pushf
jo
js
shrl
lods
jmp
cmp
adc
xlat
jp
insb
jno
mov
test
inc
mov
mov
pusha
pop
push
into
jecxz
sbb
push
mov
out
loopne
add
adc
pop
fs
xchg
movl
or
mov
jle
and
dec
sub
mov
addr16
jae
sbb
loop
add
jp
aad
xchg
es
mov
cs
int
mov
cmp
lret
scas
jecxz
xchg
outsl
outsl
cmp
jg
or
popf
ret
xlat
fstps
lds
movsb
ds
test
cmc
imul
mov
imul
pushf
add
popf
sbbb
mov
fistl
stos
mov
push
push
movsl
iret
jne
jo
scas
in
mov
push
sahf
mov
in
push
arpl
cli
movsl
je
jae
movsb
call
or
mov
inc
shrb
cwtl
dec
or
or
sbb
out
imul
arpl
pop
push
aaa
cld
inc
in
jp
pop
cmp
pop
mov
jno
xchg
out
enter
sar
mov
pop
jge
ljmp
adc
pop
ljmp
fsubrl
shll
adc
in
std
jne
sbb
cmp
jns
inc
outsl
ficomps
pop
dec
and
test
add
sub
and
in
popf
push
cli
mov
in
lea
sbb
mov
out
addb
mulb
cld
fdivrl
andb
cmp
mov
inc
fldt
jle
and
push
mov
and
in
insl
mov
jmp
ljmp
sbb
popf
jmp
cld
jb
jo
jmp
or
mov
scas
xor
push
lds
add
enter
shlb
add
loopne
sub
mov
aad
jle
cmp
fmulp
mov
pop
movsb
popf
aam
adc
mov
xor
xchg
jge
adc
loope
rcll
adc
fldenv
adc
or
inc
mov
jo
sub
dec
aaa
jle
outsb
xchg
jge
jecxz
lea
addr16
shl
sub
mov
lea
fisubrl
jmp
out
dec
lods
xor
std
sub
loope
dec
push
mov
xchg
aad
xor
es
push
dec
in
adc
loope
mov
lahf
pop
push
jbe
icebp
mov
sub
pusha
sbb
mov
cmpsl
cs
dec
scas
movsl
idiv
test
pop
out
add
adc
push
and
jnp
inc
arpl
cmpsl
push
xor
jne
push
pop
movsl
sbb
rcrb
or
stc
mov
push
lock
mov
mov
jne
cmpsl
mov
sbb
test
add
adc
int3
sub
xor
jge
and
rclb
in
addr16
and
xor
or
xchg
inc
sbbl
sbb
adc
or
out
pop
or
into
pusha
xchg
push
mov
fnstcw
mov
fldl
icebp
inc
movsb
adc
xchg
in
movsl
ss
dec
xchg
jbe
test
jb
inc
stos
shll
jmp
mov
sahf
mov
sub
std
loopne
loop
push
mov
adc
enter
movsl
pop
sbb
ret
xor
je
add
je
sti
fnstenv
pop
lret
push
pmullw
dec
and
incl
inc
test
mov
aam
mov
js
mov
inc
int
xchg
andb
shlb
dec
loopne
push
outsb
mov
mov
bound
sahf
das
sub
mov
popf
in
mov
out
cltd
jg
mov
add
pop
and
outsl
int
push
pop
movl
jno
push
inc
dec
dec
adc
shl
xchg
jecxz
sub
mov
adc
cld
sbb
js
push
out
inc
fwait
push
fsts
lods
cmp
sub
xchg
cs
and
jle
pop
mov
xlat
jmp
lock
push
js
mov
lret
dec
fst
stos
int3
stos
scas
mov
std
lea
jg
xlat
mov
xor
sbb
push
jp
dec
fstp
dec
cmp
repnz
stos
or
xchg
pop
outsl
pop
sbb
sub
mov
test
ds
mov
sbbb
xchg
adc
push
outsl
pop
dec
dec
jecxz
push
jnp
gs
ljmp
xchg
cmc
sbb
pop
or
jle
xchg
mov
jo
movsl
in
xor
lret
movsl
fmull
gs
mov
push
das
inc
shrb
cmpb
ret
sub
fstpt
out
decl
pop
add
sub
inc
xchg
data16
loop
ljmp
out
mov
test
clc
pushf
dec
sub
jnp
and
inc
orl
or
jle
or
insl
test
add
lret
ret
mov
cmp
xorl
pushf
cli
leave
scas
xor
push
cmpsl
xchg
sub
jns
pop
cmp
pop
cltd
cmpsl
pop
mov
jg
iret
mov
cmpsb
mov
xor
bound
jge,pt
adc
call
mov
push
rcl
add
pop
xor
mov
xchg
lahf
repz
scas
cmp
js
mov
outsb
push
jle
jbe
push
adc
sub
das
cmpsb
mov
add
dec
cld
xlat
pop
pop
sub
mov
ljmp
cmp
ret
cltd
aas
cmpsb
cmp
jnp
cmp
ss
xchg
mov
bound
repz
inc
pop
call
test
mov
popf
pop
or
xor
mov
pop
mov
add
inc
jbe
cmp
loope,pt
jmp
movl
push
cmp
adc
mov
mov
scas
xchg
loopne
ljmp
push
pop
movsl
lods
aaa
xchg
push
jne
cmp
movsb
test
call
xchg
cltd
push
mov
add
mov
cltd
movsl
cmpsb
test
pop
ljmp
stos
dec
call
cs
or
cld
dec
iret
sub
cmp
repnz
push
xor
jge
add
loope
mov
scas
aam
mov
inc
lods
negl
xchg
push
into
inc
lds
sub
mov
leave
shll
inc
sub
xchg
fcoml
xlat
ret
sbb
jns
out
mov
leave
adc
sbb
mov
in
shlb
mov
negb
push
or
pop
shl
or
jg
clc
xchg
push
fldcw
out
jno
and
mov
xor
and
mulb
xor
dec
xorb
inc
mov
jg
dec
idivb
shl
rcll
outsb
xchg
jb
shrl
popf
scas
stc
enter
fcmovu
jle
inc
inc
loopne
loope
insl
xor
cld
repz
sub
pushf
cmc
cmpb
mov
lds
inc
cwtl
jge
inc
pusha
aam
cmc
lock
mov
jmp
popa
les
xor
inc
pop
mov
pop
out
push
fwait
pop
jg
dec
pop
jmp
sub
out
ret
les
adc
mov
mov
jb
cli
and
fnstsw
ja
push
and
and
sub
fiadds
mov
outsb
xchg
xchg
cmp
xchg
stos
repz
cli
sti
cmp
pop
cmp
icebp
filds
jg
ret
je
aas
mov
into
dec
scas
and
xor
dec
insb
add
gs
imul
mov
and
outsb
out
inc
mov
jno
or
das
sarb
dec
loop
xor
xchg
out
add
xchg
dec
or
mov
clc
inc
aam
pop
inc
jnp
mov
jbe
and
cwtl
inc
adc
outsb
repz
dec
repnz
or
ret
leave
enter
loop
mov
scas
scas
testl
pop
xchg
add
aaa
fistl
mov
pushf
and
cld
bnd
inc
lret
jmp
or
mov
std
jnp
xlat
jle
sahf
or
aad
cmp
xchg
into
add
dec
xor
push
jno
movsb
mov
sub
jno
inc
xchg
enter
lods
xor
push
pusha
dec
and
repz
mov
lcall
cmpsb
push
scas
jbe
or
insl
mov
repnz
inc
cmp
popa
jmp
xlat
mov
test
mov
mov
cwtl
daa
adc
push
cmpsb
pop
xor
mov
fs
loop
xchg
xchg
loope
and
mov
fmul
bound
jo
imul
mov
int3
popa
lcall
movsb
xchg
lock
push
inc
inc
sar
nop
aad
lods
js
cmp
mov
mov
scas
sbb
popa
arpl
rclb
outsb
fildl
fsts
pop
mov
sbb
pushl
jns
in
xlat
push
das
xor
jp
xor
or
movsl
adc
int
jo
jmp
jg
or
push
ret
or
insb
or
add
fldl
xor
cmp
arpl
out
dec
add
mov
in
sub
popf
inc
adc
xchg
int3
jae
pop
pop
lahf
loopne
jmp
stos
pop
sub
sbb
mov
loop
or
ljmp
scas
sbb
xor
pop
ds
adc
adc
std
push
or
push
xor
test
shlb
jne
cmp
add
outsl
sub
addr16
inc
mov
push
xlat
scas
lock
pop
sub
sbb
int3
cli
fldenv
cmpsb
es
pop
pushf
int3
repz
jne
inc
dec
sbb
out
popl
pcmpgtb
outsb
in
int
lret
movsl
dec
aam
dec
in
pop
mov
test
ret
bound
rolb
inc
cmpb
sub
jecxz
pop
int3
or
rorb
xchg
and
test
sub
and
dec
insl
fstpl
mov
into
mov
movsb
inc
xor
insb
lea
mov
push
jns
inc
es
jl
sbb
cmc
adc
cltd
stc
insb
lea
mov
xor
jecxz
rcrb
push
call
stos
aaa
ret
push
mov
or
iret
pop
popa
leave
jl
push
test
mov
push
lret
xchg
lock
sbb
adc
mov
scas
dec
loope
clc
cmpsl
lds
negl
js,pn
mov
fisttpl
sbb
cltd
jae
enter
push
ret
xchg
or
aam
mov
mov
test
int
sub
and
jl
sub
mov
sbb
xor
xor
dec
fistps
sub
dec
or
xor
pop
mov
sub
shl
jns
cs
add
mov
cmp
icebp
arpl
push
inc
xchg
xor
call
mov
or
add
hlt
pop
pop
stos
test
in
loop,pn
dec
xor
jg
xchg
mov
jo
test
mov
push
mov
cmc
test
pop
decl
fmuls
mov
dec
repnz
out
cmc
mov
test
mov
fsubl
push
jae
movsl
aaa
or
lret
fiadds
adc
mov
xor
pop
insl
xchg
cli
xchg
test
mov
ret
subb
std
inc
cmp
or
jge
ret
notb
inc
pop
aas
jno
mov
fmull
out
push
mov
push
cwtl
insb
out
xchg
add
jns
cmpsl
andl
mov
adc
scas
xor
adc
sub
movl
nop
out
lahf
sub
decb
incb
xor
test
lods
push
or
jbe
das
fisttps
frstor
cmpsb
lahf
mov
ror
pop
adc
mov
testl
loop
jl
insl
lds
xor
or
das
out
push
je
pop
xchg
dec
out
mov
push
xchg
jbe
lret
xorl
or
pop
in
or
les
inc
add
pop
push
ror
mov
inc
jl
fstl
mov
add
arpl
leave
jmp
push
xchg
dec
dec
inc
xchg
mov
adcb
clc
pop
int
data16
pop
in
sti
clc
adc
push
std
andw
ds
out
xchg
aam
xor
sbb
jo
xchg
xor
cltd
push
iret
ss
pop
sub
add
mov
push
out
rcrl
in
ss
outsl
std
sahf
sbb
aam
lods
jno
out
popf
aam
fucomp
dec
adc
lock
dec
and
mov
fnstcw
in
lcall
jo
cltd
test
int
dec
xor
dec
xchg
dec
dec
arpl
push
cmpsl
outsb
mov
and
test
pop
cld
outsl
inc
sti
and
scas
call
and
ja
rcrb
jp
mov
inc
push
andl
and
sub
pushf
pop
inc
data16
add
cmp
inc
js
pop
ljmp
call
mov
xlat
frstor
push
mov
mov
xchg
sub
cmp
test
ret
dec
popa
roll
movsl
fsub
loop
bound
aad
test
inc
enter
cmc
vsqrtss
xchg
int
rcl
sti
add
xchg
pop
fs
es
adc
mov
sarb
call
pop
jno
insb
sarb
mov
lret
dec
mov
xor
lock
sbb
pushw
loope
lahf
int3
fsubrl
imul
push
pop
mov
rolb
mov
arpl
lahf
xor
inc
inc
call
outsb
imul
lea
nop
xor
dec
and
cmp
lea
or
inc
into
inc
out
dec
jne
pop
xor
popf
xor
pop
xrelease
xor
insl
inc
repz
movsl
aas
and
push
xchg
add
int
or
sub
das
int3
jmp
pop
repz
ror
sarl
inc
cmp
repnz
popa
push
lret
scas
jae
insl
cmpsb
shll
sub
cs
ret
imul
push
dec
push
xchg
dec
mov
pop
or
lcall
imul
negb
mov
arpl
sbb
clc
adc
cmp
insb
mov
in
addl
and
ss
add
adcl
repz
adc
stos
cld
cmp
rorl
adc
sbb
and
roll
and
sub
in
dec
lret
jae
ret
xchg
xor
xor
aas
nop
icebp
data16
pop
push
push
sub
daa
stos
scas
stos
or
mov
and
sub
push
enter
repz
sub
scas
xchg
inc
test
cs
xor
bound
ss
add
xor
std
adc
loop
xchg
pusha
loope
mov
shr
or
test
sbb
mov
out
xor
pop
pop
aad
mov
subb
das
jo
aaa
idiv
mov
aaa
dec
ja
dec
pop
mov
stc
sbb
lds
movsb
jmp
and
test
pusha
sahf
fcoms
mov
sbb
mov
rcr
push
pop
jae
mov
dec
inc
test
dec
rol
hlt
fsub
adc
arpl
cli
jno
inc
call
mov
scas
mov
je
xor
sbb
sbb
loopne
xchg
pop
clc
add
pop
push
leave
divl
icebp
out
mov
lods
cmc
or
jle
add
movsb
jno
pushf
xchg
mov
push
xorl
dec
mov
pop
sub
out
loopne
movsb
or
or
fbld
stos
andb
in
lods
lock
jbe
cmpsl
shrl
stc
sti
into
xchg
xor
add
scas
fcomps
adc
stos
aad
pop
sbb
push
mov
xchg
lds
ds
and
xchg
xor
xor
or
cli
jb
add
pop
cltd
cwtl
mov
jne
aas
aaa
ret
sbb
mov
mov
cmovp
dec
xchg
fisttpll
fcom
mov
fldl
data16
cmp
fcomps
int
and
pusha
push
bound
and
daa
scas
cli
nop
sbb
push
arpl
cmp
lret
fistps
mov
ljmp
bound
lods
sbbb
fbld
lods
lea
push
cs
lret
adc
jo
jmp
pop
sbb
loope
adcl
mov
fdivl
fs
pop
lcall
divl
cwtl
sub
xchg
hlt
out
das
movsl
outsb
or
sub
in
or
ret
rcrb
mov
sub
sub
xor
adc
sub
mov
lahf
sub
push
bnd
sbb
mov
cmpsl
ror
cmp
xchg
mov
sub
aam
mov
sbb
nop
mull
jg
xchg
push
clc
in
sbb
cltd
pushf
inc
lods
sahf
dec
xor
in
or
pop
cwtl
dec
inc
and
outsl
sub
lds
push
mov
cmp
dec
cmpsb
loop
fnstsw
pop
dec
js
lahf
add
inc
sbb
or
std
dec
mov
fcmovnbe
fs
or
std
cli
jg
xchg
cmpsb
sub
push
mov
repnz
add
add
mov
cmpl
pop
fcomps
xor
aam
mov
xchg
inc
fcoms
popa
mov
jg
jns
fdiv
add
mov
jbe
bound
clc
add
mov
push
outsl
adc
push
fstps
movsb
xchg
aas
lds
xor
xlat
inc
dec
loope
push
lock
hlt
pop
pop
mov
or
enter
pushf
psrlq
movsb
movl
jns
fildl
aam
std
push
jp
add
jns
cmc
adc
les
vpmacssdd
divb
jl
repnz
psrld
test
xor
cmp
out
xor
mov
cmp
sarl
fadds
aad
sbb
xchg
ss
cmpsl
lods
cmp
xchg
cmp
stos
mov
cmpsl
jmp
inc
icebp
push
out
out
mov
ficomps
xor
mov
repz
aaa
jmp
neg
rorl
insl
lret
adc
sub
adc
jbe
and
adc
fcomps
jl
outsl
cs
jno
cmp
inc
and
sub
fdivr
dec
dec
add
inc
iret
test
push
outsl
or
pushf
mov
and
xchg
andl
sarl
pusha
js
dec
push
movsl
jmp
fiadds
stos
scas
mov
cltd
push
sub
dec
xchg
pusha
add
fistpll
subb
jae
in
adc
xorl
jl
shrb
pop
mov
jl
jecxz
mov
insb
cld
push
mov
xchg
adc
jnp
fs
jno
sub
ret
pop
or
mov
push
adc
pop
std
mov
aas
pop
loope
enter
dec
mov
std
cmp
fisttpll
shll
out
stos
xchg
xor
call
push
xchg
cli
jb
xor
xchg
lea
into
mov
sub
sub
scas
mov
in
mov
xor
mov
loop
and
das
out
ja
dec
pop
inc
adc
mov
jmp
push
fdivr
push
sub
sti
xchg
rorb
js
lods
movsb
fisttps
mov
sub
outsl
sbb
mov
jbe
ret
push
arpl
pop
jp
lods
jbe
mov
ds
pop
test
push
fcomi
cmp
cmp
arpl
aaa
int3
xchg
push
mov
cmp
sbb
sarb
pop
hlt
test
adcb
mov
mov
push
mov
xchg
fxch
or
aam
cld
inc
pop
jl
sbb
jmp
js
xor
or
dec
jno
aam
pop
jg
shrl
pop
dec
jge
dec
les
lret
pusha
push
ficompl
sub
xor
mov
mov
icebp
lret
cmp
mov
push
jecxz
mov
sbb
inc
fidivs
lea
adc
xor
aam
pop
fadds
test
jne
pop
test
jp
xchg
cltd
sbb
loopne
es
test
mov
stc
adc
pop
mov
gs
fwait
test
adc
outsb
nop
dec
jg
sbb
pushf
push
fsts
jecxz
sbb
sub
clc
rorb
sahf
pop
dec
sar
sti
mov
movsb
cmc
xchg
and
pop
mov
push
mov
dec
jne
add
adc
adc
adc
popf
mov
repnz
lcall
imul
inc
mov
cmpsb
cmp
and
inc
add
cmp
adc
fs
mov
cli
mov
fbld
outsb
loop
popa
pop
add
jmp
cmpsb
mov
mov
jbe
lea
aas
mov
lods
outsl
jo
jle
cmp
mov
imul
adc
fsincos
scas
sbb
xlat
insl
xchg
push
push
lea
xchg
push
rolb
cmp
cmp
loopne
xchg
xor
test
xchg
sub
jns
outsb
loope,pt
mov
adc
sub
aad
jns
aad
push
shll
fcompl
dec
movsb
lods
nop
xchg
sbb
xchg
mov
fidivs
fistpll
enter
jle
add
xchg
les
dec
sbb
and
cltd
or
popf
call
jmp
pop
cli
setg
or
jl
fcmovnbe
mov
mov
jecxz
push
je
in
pop
hlt
lret
sbb
sub
imul
shl
mov
test
xchg
bound
sbb
movsb
xor
insb
pop
into
bswap
mov
push
pop
fdiv
pop
ljmp
adc
mov
ficoms
cmp
scas
movsl
test
push
outsb
and
adc
inc
dec
add
mov
loopne
or
nop
in
jmp
push
leave
subl
pop
xchg
push
push
stos
mov
cltd
or
push
cs
jp
inc
addr16
mov
xor
int3
push
and
lret
sub
lock
or
movsb
repz
addr16
xchg
test
adc
inc
test
adc
bound
xchg
push
add
cmp
mov
cs
leave
sahf
mov
insl
mov
mov
adc
ficompl
push
fistl
adc
xor
cld
adcl
in
push
ss
call
cmpsl
adc
mov
pop
xchg
mov
int3
popf
mov
cs
jne
mov
or
xor
sarl
pop
stos
xchg
cltd
test
or
mov
lret
dec
pop
orb
mov
lret
mov
xchg
fildl
push
xor
stos
xor
pushf
notl
outsl
pop
pop
add
xor
push
add
in
fbstp
sub
out
pushf
and
pop
mov
insl
std
hlt
sub
cmp
sti
adc
inc
mov
mov
aas
insl
mov
adc
mov
push
imul
dec
in
sub
aaa
fld
sub
xorb
jns
test
xor
adc
and
inc
sub
sahf
xchg
mov
into
cmp
cmpsl
cltd
ds
pop
stos
daa
lds
negb
jg
out
lret
adc
cs
idiv
das
xchg
negb
in
add
dec
std
adc
jecxz
outsb
xchg
dec
cmp
and
mov
or
xor
fildl
imul
add
mov
addr16
loope
in
test
bound
sub
xor
lahf
cmp
hlt
inc
popa
rolb
mov
lods
add
and
pusha
arpl
mov
jbe
aam
sub
shrb
mov
cwtl
pop
inc
mov
stc
mov
add
xor
jmp
or
mov
insb
std
xor
pop
popf
pushf
iret
jmp
int
sub
pushf
sub
rolb
test
loop
popa
jecxz
jmp
dec
xchg
xor
xlat
inc
jmp
loope
and
or
outsb
pop
sbb
scas
inc
mov
sub
inc
cwtl
and
jmp
and
push
sub
sub
and
jp
push
sub
dec
fwait
leave
in
jmp
movsl
pop
movsl
add
mov
movsl
pop
jnp
das
and
loop
scas
add
xchg
mov
mov
mov
or
adc
mov
insl
movsl
gs
aad
jmp
mov
sbbl
in
imul
xor
gs
add
test
bound
add
cmpb
int
mov
fimuls
out
loopne
icebp
or
jae
add
adc
imul
jb
repnz
pop
pushf
ja
rorl
sub
rcr
inc
nop
xchg
cmp
pushf
movl
clc
int
scas
add
or
adc
jmp
inc
jae
and
in
add
int3
xchg
test
or
scas
inc
sub
jns
pushf
bnd
add
cli
jle
xchg
in
jb
test
sbb
clc
repz
cmp
jecxz
or
mov
jge
push
movsl
lret
xchg
rcrl
js
pop
jecxz
inc
shlb
js
pop
adc
lret
ret
in
test
notl
cmp
mov
fdivr
shrl
ss
fldt
mov
dec
dec
sbb
lret
sub
dec
mov
imul
ret
or
icebp
jno
mov
cmp
xchg
iret
push
pop
lahf
sarl
sbb
fstpt
xlat
movsb
rolb
push
hlt
mov
dec
pop
popf
sbb
push
sbb
mulb
in
xor
nop
inc
and
add
in
lods
pop
xchg
xor
sub
sub
lds
cli
andb
adc
aad
pusha
mov
dec
push
sub
push
shlb
fdivp
cli
mov
inc
nop
dec
test
or
dec
ja
test
jnp
stos
add
mov
decb
test
cmp
lock
xchg
pusha
movsb
mov
cmp
adc
cmp
xor
aas
push
lahf
dec
cmp
imul
aam
test
push
imul
dec
ret
les
rcr
popf
lock
inc
insl
mov
push
pop
test
jmp
push
lock
cld
and
and
cmc
scas
and
aad
push
cmp
push
loope
lret
jo
ret
in
idivb
fistps
pop
sub
mov
out
lea
pop
cmpsl
lods
in
out
fsubp
mov
jnp
test
je
add
cmp
push
bound
mov
push
das
sti
xchg
sbb
pop
movsb
aad
mov
or
jge
inc
int3
adc
pop
insl
adc
mov
sahf
out
popa
and
insl
dec
js
push
imul
outsl
sub
out
add
ljmp
xchg
lea
int
pusha
iret
loope
dec
dec
sub
add
ja
stc
test
shlb
aaa
cld
cli
iret
mov
xchg
movsl
xor
aaa
inc
pushf
scas
dec
and
loop
mov
cmc
fs
mov
mov
cmpl
rcrb
cwtl
in
sub
pop
stos
push
jns
out
fcomip
fmull
jne
jo
and
ds
inc
repz
pushf
imul
mov
scas
dec
xor
cltd
fmul
std
push
int3
je
inc
mov
lock
nop
and
inc
push
rcl
jnp
sub
add
dec
stos
mov
ret
cmp
pop
scas
inc
jp
fisttps
ret
cmpsb
lret
add
into
movsl
sub
or
add
insb
add
jg,pn
les
dec
lock
negb
xchg
cli
mov
mov
mov
icebp
cmp
int3
shr
mov
or
dec
pop
addr16
sub
sub
rcrl
push
int
cmp
mov
xchg
cmc
js
dec
inc
fsts
call
popa
xchg
lods
mov
inc
sbb
mov
out
mov
lods
sub
das
jmp
inc
xchg
sub
fucomp
scas
ss
repz
lea
addr16
mov
inc
adc
movsb
sahf
jge
test
pop
stos
inc
aad
and
ds
sub
adc
cwtl
pop
xor
shrb
cmpb
lods
vmovntpd
pushl
and
push
cmp
roll
adc
icebp
and
insb
xchg
add
mov
std
xchg
adc
outsl
in
outsl
adc
pusha
push
stos
adc
call
dec
push
cmpsl
jno
dec
popa
dec
movb
jmp
sbb
nop
pop
inc
loopne
pop
add
sub
shlb
jbe
mov
or
std
mov
loop
ds
and
jns,pt
mov
hlt
jo
ret
xchg
jno
je
adc
adc
call
sbb
imul
inc
lahf
jecxz
jmp
in
decl
xchg
insb
or
mov
mov
lcall
mov
pop
add
add
fsubp
inc
pop
rcll
lcall
test
icebp
std
repnz
jnp
jne
mov
pop
lods
aaa
push
pusha
push
xor
xor
sbb
arpl
pushf
lea
je
sbbl
xor
out
mov
arpl
imul
daa
adc
xchg
scas
pop
dec
inc
jnp
jns
xchg
push
sub
cld
xchg
iret
add
mov
mov
xlat
xchg
mov
push
xor
cli
xor
mov
outsl
jne
lods
out
js
insl
les
in
mov
mov
fbld
sub
in
leave
lods
dec
les
arpl
lcall
sub
push
jmp
jg
jmp
nop
neg
in
or
js
cmpsb
inc
jecxz
mov
insl
and
js
mov
cmc
in
test
jno
std
mov
and
stos
cld
js
jg
insl
or
inc
movsl
push
jb
xchg
loopne
push
das
xorl
xor
mov
iret
in
cmp
mov
and
mov
ret
inc
arpl
ret
sub
stc
nop
hlt
out
lods
xchg
into
call
fdiv
das
push
test
dec
cltd
jbe
cltd
out
lret
jp
sbb
dec
aaa
mov
inc
inc
jo
les
pop
les
and
jb
mov
and
xor
add
push
daa
xchg
popa
or
iret
je
or
repz
cs
aaa
dec
inc
jne
jns
gs
mov
jns
push
dec
ja
cmp
dec
sbb
mov
fcmovne
mov
sub
fs
mov
in
addl
enter
inc
push
insb
leave
push
sub
fisubs
mov
xorl
sarb
mov
adc
cmp
sbb
fldcw
hlt
mov
dec
stos
loopne
cmc
sti
out
dec
cmp
mov
mov
enter
sub
push
lret
or
or
mov
adcb
sbb
mov
inc
call
cmp
ucomiss
nop
jmp
adc
data16
push
adc
test
push
mov
adc
xchg
addr16
push
int
call
dec
loope
adc
adc
adc
sbb
push
xchg
cmp
lods
and
rclb
cmp
dec
push
fidivrl
aas
dec
rcrl
and
dec
lock
dec
loopne
cmp
push
xor
sub
and
push
dec
int3
ss
xor
imul
je
cwtl
ds
adc
pusha
pop
int
push
dec
inc
pop
inc
testl
js
insl
and
mov
daa
jnp
cltd
add
fstpl
into
fmul
leave
cmc
aas
xor
jp
idivb
mov
push
xchg
add
mov
pop
xchg
adc
sub
sbb
inc
leave
jb
push
and
pop
test
or
and
daa
ljmp
xchg
repnz
gs
enter
jp
inc
in
sbb
cld
ficoml
insl
inc
jmp
insb
cli
push
xor
lcall
sub
xchg
out
mov
cmp
mov
mov
cmp
mov
sahf
int
mov
and
dec
dec
sbb
lods
cmp
add
cmpsl
xchg
mov
jne
push
lea
or
mov
fidivl
or
aad
xchg
leave
push
inc
dec
mov
xor
into
mov
cld
gs
lods
pushf
pop
push
cmc
push
jno
es
fs
pop
jb
jne
inc
add
dec
mov
adc
push
popa
mov
cli
mov
aad
pop
repz
xchg
jbe
dec
lahf
lret
stc
or
jbe
shrb
mov
jo
pop
popf
into
push
mov
mov
lods
sbb
out
addr16
mov
dec
xchg
push
es
sub
or
sbb
push
icebp
xor
jl
and
cmpsb
ss
xchg
cmc
mov
hlt
ljmp
aam
popa
xchg
lret
pop
cmpsb
lds
add
push
out
sbb
push
ret
pop
adc
jb
pop
mov
lret
mov
xor
xchg
mov
daa
and
stc
add
lds
sbb
mov
lret
loope
pop
dec
xchg
jae
fneni(8087
insl
xorl
sub
bound
jbe
add
jmp
call
or
and
mov
mov
push
imul
test
xor
and
cld
cmp
lods
fs
mov
rcr
add
mov
out
sbb
cmp
ljmp
mov
adc
mov
ret
xchg
mov
ret
testl
jmp
out
inc
dec
cmpl
xchg
pushl
xchg
pusha
mov
fstpl
lods
movsl
outsb
pop
mov
pop
inc
push
lret
lcall
cmpl
shll
stc
mov
sbbb
push
addb
in
xor
clc
jo
cld
sahf
frstor
add
loop
cli
test
pop
inc
jno
jmp
sbb
mov
es
ret
pop
ficomps
sub
out
jnp
out
rorb
and
cmp
add
das
or
pop
xor
fsts
cmp
movb
movb
sbb
fcompl
shl
cmpsb
in
rcrb
pusha
sub
lods
jnp
or
jae
ficompl
addr16
fsubr
sahf
jl
ds
faddl
pop
push
mov
jecxz
xor
out
leave
fs
lcall
clc
loopne
pop
and
clc
loop
mov
pop
xor
lock
push
repnz
lods
clc
push
cmp
lret
mov
sub
xchg
fwait
int3
out
movsl
testl
add
jb
sub
mov
xor
ret
xchg
mov
movsb
jae
pushf
popf
int3
mov
iret
cmp
push
out
sahf
push
and
and
paddusb
push
cmp
dec
inc
hlt
cli
inc
mov
les
jb
dec
pop
push
pusha
idiv
jmp
repz
data16
mov
jb
or
in
gs
js
clc
adc
jmp
aaa
or
aas
std
gs
cmpsl
in
imul
imul
and
cli
mov
ret
out
fstpl
arpl
pop
scas
cmp
sub
rcr
sub
leave
push
jno
mov
fbld
orl
push
cmp
jnp
stos
dec
add
sub
in
cs
bound
rorl
mov
bnd
call
scas
imul
sbb
mov
cmc
jge
adc
bound
dec
cmpsl
push
scas
out
xlat
xor
lods
dec
out
inc
lods
adc
sub
push
jmp
popa
jg
fsubrl
pop
aam
pop
xchg
lock
and
idivb
sub
sahf
cmpsl
test
test
xchg
xor
push
dec
pop
push
push
and
mov
push
push
cs
stos
xorb
sub
pop
daa
lahf
cmp
pop
lcall
xor
add
in
push
pop
push
mov
push
jmp
leave
aad
aaa
data16
clc
lret
fwait
and
and
aam
or
iret
push
push
sbb
cmp
cltd
std
shrb
pop
scas
in
adc
movl
mov
data16
push
or
xchg
outsl
push
push
into
hlt
lret
mov
dec
mov
je
popf
cmp
enter
cmp
aas
cmpsb
int3
mov
fistl
add
fwait
mov
dec
sbb
xchg
xchg
mov
leave
out
and
insl
add
fdivr
and
jp
clc
in
jae
loopne
sub
sub
fstpl
cmc
jne
addr16
xchg
xlat
cmp
xor
jg
iret
jae
pop
add
mov
icebp
jp
push
mov
and
mov
xor
sbb
mov
test
or
popf
mov
pusha
cmp
mov
repz
lahf
cwtl
dec
cwtl
mov
xor
push
and
mov
scas
jle
ficompl
xchg
inc
push
loop
inc
std
inc
lds
mov
adc
add
lcall
xor
mov
lds
push
adc
loop
in
push
adc
adc
incl
pop
stos
loope
push
and
sbb
js
mov
or
jl
pop
or
inc
mov
mov
inc
cmpl
lea
lahf
fdivl
mov
sbb
loopne
bound
mov
mov
iret
addl
jmp
pop
or
and
shlb
push
fs
das
fidivs
cmpsl
xor
jge
pop
sbb
or
cmp
pop
sub
push
xor
and
imul
stc
lds
mov
lret
add
adc
jae
imul
fstps
mov
push
fdivrs
in
out
mov
mov
mov
std
in
cmp
xor
add
dec
jmp
sub
mov
dec
loope
shlb
mov
jnp
adc
xor
cmc
sbb
imul
insl
jb
fisttps
lret
and
push
mov
mov
lret
mov
insb
lahf
xor
imul
imul
pushf
les
jnp
mov
xchg
or
mov
das
outsl
cs
mov
mov
and
popa
xor
cmp
jecxz
pop
adc
stos
fidivs
jl
xchg
push
das
iret
sub
inc
faddp
insb
adc
mov
sub
push
test
sbb
inc
pop
xchg
int3
xchg
dec
stos
stos
data16
or
aas
lcall
aad
test
into
dec
jl
mov
jle
cs
xor
pusha
xchg
dec
mov
popa
xchg
adc
xchg
bnd
ljmp
jp
pop
mov
out
lahf
cmp
dec
jmp
mov
or
xor
and
sti
xor
in
sub
ja
sub
test
shr
dec
cmp
sbb
addr16
mov
pop
nop
mov
adc
or
xor
or
leave
js
leave
in
add
mov
xor
xlat
xor
mov
cld
sub
push
fisttpl
test
push
sub
aam
push
pop
lahf
int
xchg
and
repnz
inc
int
lcall
mov
movsb
lcall
xlat
cmpb
mov
mov
mov
and
roll
or
mov
or
fsubl
pop
int
xchg
sub
sbbl
iret
shrb
popl
shrl
inc
add
pop
fdivrs
imul
push
push
arpl
lret
dec
or
in
pop
inc
in
test
jbe
daa
pusha
into
and
stos
icebp
loopne
in
leave
lods
mov
pop
test
push
enter
rorb
inc
test
mov
add
cltd
test
and
ret
push
jb
push
les
cmpsl
xor
jmp
cmp
lcall
jmp
mov
iret
fdivrl
clc
push
mov
leave
call
push
inc
cltd
xor
daa
push
sbb
jbe
rcr
push
jbe
cmpsb
lock
xor
lods
push
add
xchg
xchg
cmp
xchg
cmp
movsb
inc
jecxz
sub
sub
inc
pop
mov
or
nop
pop
push
push
sbb
js
dec
add
xchg
adc
add
loope
jo
sbb
add
and
fimull
pop
testb
psubusw
pop
loope
orb
jp
rcl
xchg
cltd
pop
loop
mov
xchg
int3
lds
or
xor
pop
sbb
out
lcall
jle
mov
and
xchg
nop
lods
ret
int
sbb
inc
dec
and
xchg
push
ret
out
pop
fcmovnu
lods
and
dec
mov
adc
adc
pop
xor
rorb
push
push
testb
or
dec
outsb
push
sahf
cli
dec
mov
xchg
lock
lea
xchg
repnz
mov
ljmp
rcll
ja
fisubrl
lahf
lea
cmpsb
dec
adc
ret
pusha
jge
dec
mov
push
xchg
or
adc
or
mov
cmp
mov
or
xchg
push
sbb
jb
inc
xchg
sbb
mov
fsubrl
rcll
enter
loopne
push
enter
adc
cli
fcmovnbe
mov
rcl
and
mov
and
xchg
adc
ret
dec
nop
bound
inc
add
jmp
stos
ds
inc
inc
mov
out
and
mov
jo
sub
je
std
adc
loop
inc
sbb
repnz
movsb
pop
stos
lods
dec
shlb
mov
inc
ljmp
inc
sahf
aaa
or
push
add
mov
cmp
pushf
sub
mov
cltd
or
test
in
pop
dec
sarl
ret
push
stc
fstps
shrl
xor
fmull
test
adc
orb
jl
mov
dec
mov
ret
lea
inc
xor
enter
insl
push
jp
test
stos
adc
ficoms
sbb
xchg
xor
xor
les
and
icebp
cs
mov
jae
push
ljmp
jl
out
cmpsb
jb
cld
adc
mov
pop
andb
addb
in
xor
cmp
add
inc
and
jmp
fst
cmpsb
xchg
lea
dec
shl
dec
scas
add
ss
lcall
iret
mov
dec
ss
dec
jbe
fistpl
mov
call
xor
inc
cmpsl
insb
push
and
jle
adc
in
jp
push
push
fcomps
and
inc
cmp
arpl
xchg
jne
dec
xor
int
fwait
pop
lods
stos
mov
in
xor
xchg
inc
inc
nop
sbb
cltd
dec
lret
sub
inc
mov
xchg
pop
xchg
xchg
rorl
lods
sbb
arpl
and
insb
sar
xchg
icebp
bound
mov
test
fsubrs
loopne
mov
and
jecxz
mov
xor
jo
cmp
addr16
sub
and
cmp
jb
ret
mov
hlt
repnz
mov
mov
popa
stos
mov
sbb
rorl
jge
fisubrl
ja
xchg
jnp
pop
push
fstpt
dec
jae
jne
adc
mov
dec
push
adc
jae
xor
sub
rorb
fldcw
fidivl
cld
pop
xchg
out
push
adc
sub
mov
mov
xchg
xchg
mov
cs
outsb
jnp
push
mov
pushf
sub
sti
imul
test
cs
mov
push
lahf
xlat
sub
mov
bound
pop
push
shlb
cs
adc
arpl
pop
bsf
pop
sti
jecxz
dec
pop
dec
sbb
inc
pop
fstps
sub
adc
sbbl
cmpsl
sub
ds
stos
insl
pop
pop
testb
mov
mov
lret
lods
add
ljmp
or
xor
cmp
stos
pusha
sub
dec
out
xor
adc
aaa
fnstcw
stos
pop
jo
in
mov
repz
mov
lcall
rep
cmpsl
pop
mov
and
xchg
adc
lods
cmp
mov
jae
push
xlat
jmp
sti
incl
int
flds
rol
push
jnp
jmp
and
or
outsl
mov
xlat
ftst
lods
lcall
pop
cmp
sti
mov
pop
xchg
mov
xchg
inc
jl
dec
insb
testb
shrb
jl
lock
jno
aad
add
mov
dec
xor
pop
aad
pop
in
cs
dec
imul
aam
arpl
ja
mov
loopne
mov
or
mov
out
cld
mov
cmp
mov
aaa
js
cpuid
enter
jge
int
and
dec
push
in
xchg
push
mov
mov
sbb
and
scas
push
pop
andb
jp
cs
test
popa
negb
adcb
popf
adc
pop
inc
add
into
daa
pop
jg
outsl
test
add
adc
in
sub
sub
jb
fsubl
xchg
gs
pop
mov
andb
mov
ss
fisubs
imul
hlt
sbb
or
push
cs
loop
cmp
test
adcl
push
lcall
faddp
lock
cmc
fdivl
cmp
add
je
jl
clc
repz
or
ja
push
cmp
or
push
fidivrl
and
xor
sbb
mov
sub
mov
sub
not
mov
popf
into
aaa
outsb
inc
add
nop
xor
xchg
mov
add
leave
ss
sbb
jmp
iret
sub
mov
cmp
sbb
cmp
shrb
fisubs
xor
cmp
mov
mov
in
sub
dec
mov
xchg
loope
inc
dec
sub
dec
out
mov
add
es
in
dec
and
pop
fisubs
lcall
inc
xor
movsl
pop
cmc
add
mov
bnd
dec
popa
outsb
insb
add
jmp
xchg
mov
fstl
sub
pushf
icebp
fisubl
inc
cltd
cmp
pop
test
imul
icebp
icebp
mov
popa
rol
cs
out
into
adc
jle
dec
cmpsb
and
add
mov
inc
les
push
cmp
or
mov
cli
mov
dec
sbbl
iret
xor
nop
xor
sub
adc
fsubs
adc
push
test
subb
cmp
es
push
pusha
ja
out
loopne
mov
cmc
fistpl
shll
push
cwtl
movsl
push
test
clc
xchg
xor
ja
mov
push
mov
not
cmpl
shll
mov
arpl
fadd
sub
mov
frstpm(287
sub
mov
repnz
mov
or
or
dec
icebp
andl
jnp
pushf
outsb
pop
enter
jecxz
outsb
sub
nop
test
or
add
pop
mov
sub
ret
push
sub
aaa
inc
shl
xchg
pusha
sbb
xlat
ret
cli
mov
add
mov
gs
push
jecxz
subl
outsl
mov
dec
mov
push
fnstenv
push
sbb
push
fcmovb
mov
cwtl
push
jnp
cli
test
aad
lret
mov
stos
push
imul
sub
insb
add
ljmp
jp
cmp
stos
out
ret
push
xchg
jmp
pusha
mov
in
stc
jnp
sarb
add
mov
add
inc
shlb
je
add
sbb
sub
call
pop
mov
call
push
cmp
cmp
inc
lret
cmp
enter
jge
flds
xor
or
mov
inc
inc
push
xor
scas
xchg
cmpsl
into
inc
sbb
mov
repnz
or
push
cmpsb
int3
add
jge
xchg
fs
cmp
test
mov
das
pop
rclb
xlat
movsb
add
mov
fs
sahf
test
pop
mov
je
addr16
mov
lahf
arpl
subb
insb
mov
adc
in
mov
into
push
outsl
push
push
test
dec
notl
inc
idivl
cmpsl
xchg
dec
mov
cmp
or
push
stc
sti
stos
shll
mov
stc
xchg
jmp
inc
arpl
into
leave
je
adc
fiaddl
jno
jg
cmc
add
sub
mov
popf
mov
in
subb
mov
jecxz
loopne
sbb
add
ret
cmp
movsb
mov
push
leave
jmp
cs
sub
jecxz
lods
insb
and
adc
call
jl
testb
aad
out
xor
push
movsb
pusha
dec
and
mov
iret
and
adc
dec
sbb
leave
jecxz
test
stos
fwait
inc
cmpl
ljmp
cmc
outsl
sti
insb
pop
das
sub
flds
push
cmpsl
xchg
inc
push
xchg
mov
mov
test
adc
js
orb
test
pop
outsl
mov
lcall
and
inc
xor
xlat
mov
fbstp
scas
aam
leave
xor
mov
xchg
jp
aam
rorb
lock
in
aaa
add
add
stc
popf
test
dec
js
adc
push
loopne
or
bound
ja
movsb
pop
mov
std
add
jbe
ljmp
stc
push
stos
or
pop
sub
add
xchg
mov
mov
shl
jl
rcl
ret
adc
in
add
pop
jl
jp
int3
xor
pop
jno
sbb
sub
adc
xchg
dec
stos
orl
outsl
jne
bound
test
scas
mov
iret
push
xchg
lcall
lods
dec
in
push
or
sbb
fwait
mov
push
pop
push
shll
mov
lods
inc
shl
or
ja
pop
mov
dec
out
hlt
out
inc
icebp
add
and
out
push
ret
cmp
adc
fisttps
sarb
cmp
xor
das
sub
jno
cmc
testl
lret
test
fs
enter
add
test
sbb
mov
mov
pop
add
cmp
dec
inc
stos
cmp
sbb
stos
push
nop
mov
jmp
sub
enter
and
mov
icebp
dec
shll
rcll
mov
inc
inc
mov
sbb
lret
cwtl
cmp
sub
rclb
jmp
cmp
mov
mov
inc
sti
inc
pop
ljmp
pop
lahf
aas
test
addb
cmp
ficoms
dec
movsl
push
stc
clc
lods
and
dec
dec
fwait
mov
pop
mov
sbb
hlt
stos
mov
mov
call
jge
cmp
inc
add
ja
and
xlat
and
mov
xchg
and
pop
scas
sbb
cli
cmp
jle
sbb
faddl
mov
mov
pop
and
cmpsb
jno
mov
jns
aam
mov
sub
int
and
shlb
insl
and
mov
dec
mov
fs
mov
inc
mov
sbb
mov
popf
int
repnz
adcb
mov
flds
call
insb
inc
std
fstpt
arpl
ljmp
pop
aam
mov
mov
arpl
popa
ret
loop
inc
clc
push
mov
outsl
loopne
cmpsb
sbb
mov
mov
jp
inc
and
jmp
mov
addr16
pusha
stos
dec
movsl
dec
fmul
cld
icebp
dec
sub
pop
scas
lret
in
icebp
lods
popf
enter
int3
xor
mov
cmp
fisttpl
inc
test
push
and
stos
xchg
sbb
fmull
rcr
pop
pop
shll
push
and
lret
jle
pusha
pop
inc
and
push
mov
pusha
push
push
push
popf
mov
mov
ss
mov
in
push
js
movsb
and
icebp
es
mov
adc
pop
mov
aam
mov
xchg
mov
dec
arpl
hlt
jne
ja
lcall
push
xchg
add
loope
push
fmul
mov
and
xchg
xchg
iret
int3
cs
shrl
and
rorl
xchg
mov
cmp
adc
test
fwait
inc
mov
add
inc
mov
or
movsl
and
fadds
shrl
push
cmpsb
cmp
into
mov
mov
test
mov
xlat
and
orb
aam
outsb
stc
sti
stc
push
jmp
les
lods
push
and
mov
cmp
ds
shrl
scas
movsl
pop
adc
mov
mov
into
inc
arpl
adc
mov
adc
cmp
pushf
mov
in
xchg
lret
sub
dec
xor
decb
jle
mov
lret
xchg
lcall
sbb
icebp
enter
pushf
stc
ljmp
add
cmc
inc
pop
int
loopne
xor
cmp
adc
mov
jmp
lods
ljmp
decl
int
sahf
daa
cmp
sub
jns
sti
pop
sbb
xsha256
cmpsb
adc
sub
sar
sub
dec
std
dec
mov
popl
shlb
insb
xchg
enter
std
movsb
pop
sbb
cli
pand
out
or
das
adc
and
lock
and
stos
cmp
stos
stc
fwait
jmp
shlb
inc
jb
push
add
pop
jecxz
ja
stos
inc
mov
jno
jnp
xlat
addr16
scas
cmp
inc
xor
pop
aam
pop
incl
mov
dec
cmp
ja
dec
and
and
lret
push
movsb
sub
cmpl
lock
mov
popf
mov
sbb
cs
mov
fs
cmc
ret
out
insl
inc
sub
push
xchg
sbb
sbb
repnz
in
mull
mov
std
adc
mov
push
std
imul
jb
fnstenv
out
or
shl
or
fwait
inc
jo
mov
cmp
mov
lcall
nop
pop
subb
cmc
cs
rcrl
jecxz
shl
xor
fisttps
cmp
adc
out
and
xchg
mov
fstl
mov
mov
mov
aam
push
sbb
pop
push
inc
mov
clc
mov
mov
cltd
cli
xchg
je
pop
mov
adc
inc
cmp
test
iret
push
adc
mov
sbb
sbb
movsb
push
mov
push
jg
sahf
lret
pop
jge
add
mov
stos
jb
nop
lcall
das
dec
inc
or
inc
inc
sbb
les
and
jbe
insl
mov
cmp
push
int3
fwait
lods
fildll
lret
jp
lock
pop
enter
icebp
fxch
je
imul
xor
sbb
mov
lcall
cmpsb
xchg
stc
xchg
xchg
stos
lods
mov
stc
dec
mov
jl
cwtl
push
push
sti
fcomip
xor
dec
mov
add
push
adc
int
ret
adc
jecxz
xor
pop
daa
sbb
pcmpgtw
or
nop
sub
mov
sbb
pusha
fcomp
push
jmp
mov
cmp
mov
adc
idivl
push
cmp
imul
jbe
mov
out
rcrl
xchg
xchg
stos
inc
sub
mov
mov
push
xor
arpl
loope
xchg
inc
lea
jne
mov
or
push
sub
mov
aad
jmp
aam
lods
loope
imul
into
cmpsb
jle
push
scas
cmp
mov
loop
aas
ss
lret
out
push
rol
enter
les
pop
out
inc
cs
push
js
jne
pop
daa
outsb
inc
dec
fs
cmp
adc
xchg
sub
inc
test
mov
fldt
push
cmp
je
notb
dec
out
jle
sbb
and
lods
sbb
sbb
add
adcl
data16
into
imul
ss
mov
mov
add
cmp
mov
dec
and
nop
mov
sub
movsl
stos
push
mul
test
loope
sahf
test
push
outsb
out
es
jg
popf
xor
fisttpll
jnp
dec
or
sbb
mov
lds
cmp
or
jmp
mov
aaa
mov
std
ljmp
movsl
adc
mov
xchg
inc
xchg
sysret
daa
adc
punpckhwd
leave
js
add
cmc
sbb
mov
shlb
adc
xor
in
or
rcll
fiaddl
pop
cmc
lock
jne
mov
enter
gs
pop
rorl
mov
push
dec
push
cmp
lods
xchg
mov
xor
movsl
fcmovnbe
push
leave
cmp
into
test
leave
nop
xchg
adc
hlt
mov
and
ja
xchg
movl
arpl
lcall
jno
jl
and
daa
iret
push
jl
lds
sbb
sbb
add
int
hlt
sbb
lods
call
adc
fwait
xor
inc
pop
mov
add
ret
mov
lret
fwait
xor
into
imul
push
mov
jns
xor
icebp
xchg
lods
jno
cs
xchg
fscale
and
push
dec
jmp
ret
arpl
shrb
add
adc
lods
aaa
mov
jecxz
stos
outsl
xchg
lahf
add
mov
sub
sub
inc
inc
in
inc
sbb
add
orl
mov
xchg
mov
cmpl
popa
ss
dec
cmp
cmpsb
lahf
pop
sub
xor
jo
sti
mov
dec
negl
test
into
stos
in
mov
adc
jg
adc
mov
ds
jg,pn
in
hlt
push
adc
mov
inc
jl
pop
pusha
icebp
loope
sub
in
mov
sub
pop
jle
mov
mov
or
jl
and
jl
jg
repnz
and
jp
jb
jb
or
dec
jae
mov
in
popa
mov
repz
adc
mov
fisubrs
add
or
or
aad
pop
ret
in
int
push
addl
mov
mov
xchg
shll
lret
test
fidivl
or
xor
mov
js
and
in
dec
dec
dec
or
mov
int
lea
xchg
sub
xor
inc
frstor
mov
imul
aad
add
mov
sbb
clc
inc
popf
jne
movsl
jbe
aad
cltd
dec
push
insb
rol
pop
pop
xor
and
and
adc
or
imul
push
out
or
std
fsubr
nop
push
out
aas
hlt
mov
push
cmp
int
fwait
clc
add
lock
push
mov
add
add
xchg
sub
mov
push
pushf
lods
and
outsb
push
ds
in
nop
mov
xor
sahf
adc
xchg
in
pop
jmp
xor
lcall
inc
and
dec
and
mov
push
arpl
dec
repz
nop
dec
int
push
stos
je
lock
jbe
jle
mov
ret
xor
pop
in
xchg
xchg
loop
out
and
or
add
and
je
jnp
mov
sarb
push
xchg
or
mov
insl
or
push
add
incb
xchg
movsl
jbe
inc
pop
andb
rcll
icebp
mov
or
sbb
ss
insb
gs
sbb
pop
stos
insl
or
mov
and
adc
pop
inc
pop
icebp
idivl
ja
inc
push
jbe
jle
cmc
mov
mov
enter
ss
fdivrl
pushf
ret
xchg
rdpmc
hlt
mov
jae
test
pushl
movsb
mov
fcomps
lock
push
cmpl
loope
push
sub
hlt
sbb
push
inc
testl
mov
add
xor
ret
jnp
pop
jmp
xlat
pop
movsb
bound
shlb
push
push
and
sub
cmc
testb
jp
je
jmp
xchg
stos
xor
mov
mov
scas
mov
popf
sbb
bound
test
call
jae
xchg
jae
push
inc
test
daa
jle
testl
and
sbb
test
call
inc
push
mov
cmp
fwait
xor
and
mov
and
repnz
push
mov
cmpsb
cs
lods
rorl
push
in
shl
or
cmp
jae
xchg
aas
pop
inc
fstps
xchg
loop
sbb
sub
mov
popa
lret
in
enter
sub
popa
insl
adc
inc
add
push
test
pushf
movsl
jmp
push
dec
mov
test
mov
xchg
out
mov
mov
mov
jmp
xor
sbb
xor
rol
mov
fdivl
or
divb
mov
pop
dec
jp
testl
inc
test
das
jl
repnz
push
in
jmp
leave
mov
data16
add
or
and
rcl
sahf
xchg
mov
inc
cmpsb
cld
inc
fcmovu
clc
mov
mov
lock
movl
icebp
call
inc
push
lods
loopne
scas
mov
test
push
and
frstor
test
mov
cs
inc
stos
lcall
dec
je
out
into
test
push
dec
push
adc
fcoms
notb
stos
clc
inc
pop
cmp
mov
push
jle
pop
push
out
lret
lret
pop
cmpsb
add
aas
sub
push
sub
outsl
dec
daa
sbb
dec
push
scas
lea
in
movsl
xchg
sub
mov
movsb
bnd
rcl
mov
push
loopne
pop
cmpsb
and
aaa
or
adc
int3
push
clc
cmp
mov
push
cmpsb
in
add
or
sub
in
mov
aas
lods
in
aaa
icebp
jo
mov
lret
jno
cmp
aas
in
imul
mov
or
lock
xchg
test
fisttpl
mov
jg
pushf
push
mov
fadds
xlat
cwtl
sub
outsb
sub
jle
fimull
push
cmpsb
sahf
sbb
dec
jne
xor
stc
adc
sub
stos
sub
sbb
xor
in
jnp
loopne
sub
mov
xorl
daa
imul
out
xchg
cmpsl
dec
jmp
lea
jecxz
out
dec
ret
cli
add
loope
sarb
push
pop
fisubl
shrl
ss
ds
or
push
cs
incb
loope
sub
jnp
roll
pusha
in
jbe
clc
adc
add
shll
je
imul
out
fimull
cmp
cltd
pusha
push
mov
lods
inc
jnp
sub
dec
pop
icebp
jne
sub
push
mov
jp
stos
out
addr16
ljmp
dec
mull
cmp
rolb
pop
xor
sbb
or
bswap
lret
mov
fsubrp
test
out
ja
cmp
enter
hlt
loope
outsb
cmp
filds
mov
pop
andl
sub
push
leave
inc
pop
mov
lret
cmp
mov
ficoms
ret
mov
cli
sbb
rep
test
mov
adc
iret
or
fldenv
rcll
pushf
xchg
int
inc
xor
mov
xchg
ss
dec
mov
add
cltd
jg
enter
pop
lods
add
xchg
mov
inc
es
popf
xor
adc
adc
in
repz
lea
jmp
pop
popa
pop
std
jno
frstor
mov
subl
fmuls
movsb
mov
out
ret
test
jmp
arpl
sbb
out
jne
int
or
iret
dec
dec
or
pop
outsb
mov
lea
testb
sub
lret
fwait
cmp
push
pop
out
mov
or
add
xchg
sub
ja
push
hlt
out
xchg
imul
and
cmp
dec
clc
fcoml
sbb
xor
mov
fimuls
sbb
pop
test
popf
inc
popf
cmpsl
push
rcll
and
dec
enter
add
cmp
and
add
shl
divb
dec
in
leave
lods
gs
int
inc
inc
xor
add
push
pop
push
xchg
dec
jg
fdivl
fldl
xchg
push
fimull
fnstcw
ja
lret
ss
out
pop
je
inc
xor
iret
jl
pop
sbb
add
inc
mov
in
subl
mov
cld
jno
repz
lahf
dec
jae
shll
mov
bound
xchg
or
pop
aad
pop
inc
cmpsl
add
aad
movsl
xor
repz
add
fldl
bound
mov
test
es
aam
cwtl
pop
jle
adc
jecxz
mov
or
adc
mov
xor
jl
jbe
test
scas
in
repnz
xchg
mov
pusha
into
push
jae
push
sub
mov
bound
add
outsb
test
test
cmpsl
pop
cmp
xchg
aaa
and
xor
cmp
rep
xchg
cmpsl
arpl
rep
and
dec
cmpsl
aam
xchg
gs
add
sti
adc
dec
insb
or
shll
xchg
hlt
and
ljmp
inc
sub
add
outsb
loop
push
test
cmp
dec
repz
push
push
push
loope
into
jmp
and
fwait
das
jno
add
dec
xor
out
je
dec
imul
jg,pn
xchg
and
sub
xor
push
xchg
int
sub
push
jns
dec
jo
popf
rcll
icebp
loop
add
dec
outsl
pop
pop
movsb
mov
mov
fmuls
out
in
push
sub
mov
scas
outsl
loop
pop
in
scas
es
pop
dec
pop
jg
jo
mov
pop
or
xorb
xchg
adc
cmpsb
es
dec
fwait
test
mov
add
in
sub
mov
out
es
call
insb
aad
jne
xlat
mov
add
jmp
iret
push
iret
jecxz
sbb
out
pop
pop
fsub
insl
lret
scas
es
nop
mov
insb
in
sbb
jno
mov
pop
pop
cmp
or
or
aaa
std
notl
mov
aaa
mov
repz
dec
mov
ljmp
push
fldl
mov
cmp
mov
cld
pop
add
xchg
es
jp
xlat
clc
rcll
nop
sub
stos
ljmp
fidivrs
xchg
in
in
sub
mov
adc
mov
pop
mov
addr16
test
mov
cltd
test
push
out
inc
xchg
ljmp
insb
cmpsb
test
inc
mov
sub
xchg
shlb
and
mov
cltd
jne
inc
xchg
test
push
and
mov
inc
sti
aaa
sub
faddp
cmp
outsl
inc
cmp
mov
ljmp
imul
pushf
dec
inc
add
mov
stos
adc
sub
jnp
fisubrs
insl
loopne
fildll
ljmp
xor
jmp
mov
inc
push
pop
and
popl
aaa
mulb
addr16
in
aam
imul
ret
adc
aad
push
int3
data16
cmpsl
ret
cmp
mov
ljmp
push
popf
adc
add
loop
fmul
iret
xchg
mov
dec
and
into
fsub
or
sub
iret
xor
andb
push
mov
fmull
outsl
pop
sbb
scas
adc
and
aas
cmp
sbb
repz
outsb
jge,pn
mov
out
shll
mov
pop
mov
mov
mov
or
cmpsb
aam
sbb
sub
fs
or
imul
sbb
fnstenv
enter
xor
int
add
push
push
mov
pop
jle
sbb
rep
sbb
xchg
loop
mov
aaa
jge
cmpsb
sbb
test
xchg
addb
imull
ja
push
xor
mov
cmc
or
fidivl
test
popa
mov
cmpl
adc
aam
fimull
int
aaa
loop
cmpsl
movsb
mov
test
shll
outsb
xor
sbb
out
mov
and
push
jle
mov
lret
push
inc
data16
cld
dec
xor
ja
xchg
push
mov
addr16
cltd
fisubl
testl
out
push
push
popf
and
mov
fnstcw
xor
xor
leave
xchg
fmull
xorl
and
mov
gs
stc
cmp
stos
cs
pop
stc
push
jl
ja
inc
in
push
add
mov
push
or
int
mov
out
inc
test
ret
out
mov
jecxz
mov
jecxz
hlt
xlat
cmp
jp
test
in
pop
inc
outsl
mov
mov
bound
aas
jno
xchg
mov
sub
and
inc
jg
fistpl
or
loop
dec
outsb
adc
mov
and
xor
mov
int3
lds
cmp
insl
call
sbb
je
lock
xor
fwait
clc
xor
arpl
adc
dec
push
dec
sahf
xor
in
xchg
iret
xchg
das
fs
push
xor
adc
sbb
sbb
ret
push
lds
outsb
or
mov
and
jno
cs
stos
cmpb
mov
or
sbb
and
cmp
enter
push
push
fsubp
pop
cwtl
testl
mov
pusha
les
mov
ficoml
inc
push
movsl
inc
in
test
and
pop
inc
xchg
dec
cmp
stos
movsl
or
mov
add
push
and
add
and
cmpsb
cmp
sub
pushf
jne
xor
sub
stos
pushf
stos
cmp
lcall
push
out
pop
pop
mov
call
sub
add
push
mov
fdivl
inc
pop
or
es
and
daa
imul
ss
cmp
dec
ja
or
fwait
inc
push
scas
mov
aaa
push
inc
mov
into
sbb
mov
or
push
hlt
arpl
sti
add
add
push
aad
adc
js
movsb
movsl
mov
popl
nop
push
arpl
pop
pop
sub
xchg
int
pop
add
jne
popf
cmp
push
jecxz
js
add
inc
nop
xchg
scas
xor
sub
jae
inc
sub
addl
push
scas
jns
inc
lret
pop
push
cltd
lock
mov
push
rcrl
cld
popa
push
adc
sub
cmpsb
stos
cwtl
out
pushf
mov
xchg
outsb
je
and
sbb
icebp
cmp
inc
push
cmp
out
mov
scas
cmp
xor
aas
adcl
in
mov
mov
cmp
rclb
push
or
hlt
call
mov
in
std
pop
jo
push
out
shlb
rorb
loop
cwtl
fcomps
mov
add
les
fwait
js
call
and
cmp
sub
mulb
inc
add
scas
mov
stos
jns
lcall
cld
cltd
xchg
fbstp
dec
sub
and
jae
sbb
xchg
dec
arpl
in
push
add
movsl
es
popa
cli
in
into
movsl
mul
mov
push
push
add
jo
repnz
mov
sbb
nop
sub
into
push
cwtl
sar
idivl
sub
int
insl
insl
std
add
inc
jle
pop
int3
lods
lahf
sub
jg
mov
push
std
dec
or
jnp
lods
sub
xor
clc
stos
lds
ss
mov
mov
mov
mov
push
scas
and
mov
xchg
dec
mov
mov
daa
cmp
push
test
repnz
or
repnz
mov
and
arpl
leave
std
xor
arpl
cmp
mov
repnz
ds
pusha
pop
xor
nop
test
dec
push
jle
mov
rcrl
shrl
cmc
dec
shrb
fldt
sub
push
jo
scas
outsl
jmp
push
test
xchg
mov
and
addr16
aad
jecxz
cli
mov
cmp
testb
sahf
push
and
rorl
xchg
dec
jmp
loopnew
push
mov
mov
push
je
in
mov
dec
adc
xchg
mov
mov
fwait
jb
cli
sub
xor
sbb
mov
jae
push
ror
sbb
xor
inc
sbb
add
negl
xchg
incl
ja
fmuls
mov
outsl
mov
push
aaa
xchg
mov
adc
and
aad
jl
adc
add
push
and
mov
outsl
fisubs
xlat
or
push
outsb
fs
mov
mov
lret
mov
inc
and
movsb
pop
xor
mov
rcrb
cmpsb
cmp
cmpsl
cmp
xor
jae
repnz
mov
movsb
mov
lgs
outsb
stos
lret
mov
xchg
mov
push
sub
lock
push
lock
push
jle
ss
sbb
gs
pop
sarl
aas
jmp
cwtl
dec
inc
fadds
ds
push
shl
xorb
int3
cmp
scas
scas
aas
sub
inc
inc
xchg
adc
das
push
movsl
mov
jo
and
pushf
jg
movsb
loop
outsb
mov
cmc
jle
aaa
daa
jg
mov
pop
lods
xor
in
ret
xchg
adc
fxch
xor
out
inc
dec
mov
repnz
repnz
or
sbb
sub
rcrb
cli
inc
sub
or
sbb
mov
in
insl
push
loop
dec
cmp
fs
sub
sub
bswap
jp
aas
in
in
jp
mov
loop
push
and
ret
aas
rep
dec
inc
std
cmp
shl
cmpsb
in
loope
xchg
push
test
icebp
sahf
inc
aaa
mov
insl
sbb
sbb
xchg
das
cwtl
dec
loopne
subl
xchg
scas
orb
stos
mov
fwait
hlt
xorps
or
jnp
test
outsl
lods
cmpsb
enter
jb
pop
jnp
test
pop
jbe
stos
sbb
add
dec
inc
pop
xchg
lcall
pushf
push
push
int3
into
mov
sub
test
js
and
or
repnz
push
jae
call
rcrb
bound
das
sub
lahf
out
pop
rorl
jl
inc
popf
into
nop
outsb
adc
aas
inc
popa
dec
test
ljmp
jge
push
xor
xor
test
jle
pop
or
jo
enter
cwtl
mov
xchg
inc
jg
pop
repz
jne
mov
in
mov
shll
xor
push
movsb
sbb
dec
jp
xchg
scas
xchg
nop
ja
pop
cmpsl
mov
imul
rcr
inc
loopne
cmpsb
mov
ja
fisubrs
jge
shl
adc
and
jmp
jg
insl
mov
jmp
pop
or
adc
fildll
add
stos
ret
iret
es
adc
adcl
std
repnz
mov
ja
pop
and
shrl
push
mov
mov
inc
xchg
adc
sahf
insl
aas
cmp
dec
push
cmp
or
loop
adc
sub
mov
addb
sbb
inc
fsubs
cmpsb
subb
sbb
enter
mov
mov
push
push
and
lods
or
and
outsb
insb
push
and
test
out
mov
and
divb
fs
jae
sub
xchg
fwait
out
push
pop
test
das
outsl
pusha
xchg
sub
std
push
inc
sbb
mov
divl
push
jbe
mov
sub
ja
icebp
push
pop
sbb
cmp
enter
and
scas
cmp
std
cmp
xchg
mov
cwtl
jmp
repnz
in
sub
mov
rclb
cltd
pushf
add
or
mov
mov
aam
repnz
or
lea
xor
iret
mov
xor
ret
lds
shll
dec
add
and
push
test
sbb
call
scas
repz
xchg
sbb
ljmp
jmp
push
jl
insb
inc
jne
mov
idivb
mov
scas
mov
mov
mov
jns
mov
test
xor
mov
pop
push
scas
inc
cmpsl
xor
ss
into
dec
mov
adc
stc
add
lods
jb
fwait
cmc
xor
mov
stos
adc
mov
out
das
test
leave
lret
loope
or
cmpsb
mov
cwtl
and
loope
inc
popf
jle
and
pop
push
pop
in
enter
jecxz
insl
pop
lods
adc
ficompl
jne
sub
pop
inc
decl
or
nop
nop
inc
fadds
lret
jmp
fstps
mov
lock
in
jno
inc
or
bound
or
stos
in
sbb
xchg
add
loop
enter
fs
inc
aam
sbb
xorb
adc
mov
fistpl
xchg
lock
int
adc
es
sub
mov
jnp
push
and
jns
popf
repz
adc
repz
icebp
push
les
jmp
fcoml
cwtl
call
sub
ss
push
loopne
sahf
lock
lret
push
loope
add
inc
push
pop
outsb
xor
push
mov
mov
add
sub
stos
add
mov
xor
test
ljmp
adc
fildl
cmpb
sub
cs
bound
cwtl
test
xor
pop
pop
lods
lods
pop
mov
out
imul
add
dec
lcall
and
mov
adc
int3
xchg
nop
hlt
sbb
test
jmp
icebp
xchg
es
std
mov
arpl
xchg
ret
cmp
aas
frstpm(287
insl
push
rcrb
add
ss
sarb
cmp
pop
and
dec
aas
push
inc
pop
jb
jns
dec
sub
repnz
into
inc
cmp
xchg
jle
arpl
int3
adc
cmp
add
in
add
cld
inc
mov
adc
sub
mov
mov
subb
addr16
dec
jge
sub
andb
sti
mulb
loope
fists
inc
jge
jno
loope
inc
mov
add
add
loop
lds
test
mov
rolb
xchg
loopne
push
fsubs
mov
fcomi
enter
ret
pop
push
mov
xor
icebp
mov
push
es
cmp
mov
and
leave
shll
xor
lcall
cmpsb
call
mull
jl
lahf
call
loope
int
add
pop
push
movl
add
push
dec
push
aad
mov
test
sbb
pop
adc
into
scas
or
add
jmp
and
in
cmp
xchg
inc
iret
ret
movaps
fldcw
lock
dec
xlat
lds
push
mov
shll
cmp
sbb
in
dec
mov
jbe
sub
mov
push
dec
adc
cmp
into
lahf
pop
sar
icebp
jo
sub
dec
outsl
mov
fidivrs
lret
cmc
mov
stc
jae
pushf
adc
ja
add
xor
shrl
mov
sub
test
fcmovnb
sahf
jmp
and
push
adc
cmp
andl
xor
cltd
into
xor
call
aas
mov
push
push
or
rcl
loop
test
mov
pop
or
xor
sbb
adc
sti
xor
pop
dec
add
adc
aad
xchg
mov
aam
xchg
push
push
mov
movsl
jns
xchg
aaa
inc
adc
fwait
jbe
das
pop
sub
das
add
mov
outsl
popl
data16
xor
mov
add
fwait
mov
xor
mov
ret
fsubl
adc
fists
test
fildll
inc
mov
imul
sbb
pop
nop
cmp
sbb
or
pop
or
xchg
cwtl
int3
repnz
jnp
xlat
inc
mov
mov
popf
ficoms
popa
les
or
cmp
movsb
xchg
adcb
iret
xchg
mov
dec
push
xchg
add
dec
and
ficoms
dec
and
testb
test
cld
es
fs
push
testl
push
loop
mov
stc
or
sub
add
dec
ds
outsb
outsb
ficoms
mov
xchg
daa
push
out
adc
mov
adc
sbb
pop
lahf
mov
test
and
inc
push
adc
lods
insl
lea
dec
roll
mov
and
adc
icebp
jge
push
sbb
movsl
test
inc
jbe
xchg
mov
and
mov
sub
push
sub
sti
je
hlt
enter
sub
push
cmp
fstp
scas
pop
xchg
dec
lahf
lea
fidivl
pop
push
inc
lahf
jp
adc
lods
sbb
xchg
mov
nop
xchg
inc
and
mov
mov
add
push
cmp
loope
jb
scas
mov
lahf
xchg
cmpsl
shrb
fwait
shrl
js
lock
test
fcoml
or
sahf
push
movsb
ret
pusha
scas
xchg
insl
mov
sahf
aam
test
roll
xchg
add
loope
or
push
mov
mov
cltd
ficoms
in
call
pop
sub
pop
mov
jmp
push
ret
sbb
test
pop
imul
and
ss
insb
mov
lds
out
mov
dec
sub
and
jmp
or
in
jno
xchg
and
pop
jg
lret
das
movsl
mov
dec
jmp
push
mov
xor
add
adc
pop
xor
insb
fdivs
xor
stos
mov
mov
daa
or
ss
mov
js
cmp
lea
je
jo
fdivrs
arpl
mov
xor
rcl
popa
xor
adc
mov
addr16
add
add
jecxz
dec
in
call
cmpb
movl
mov
je
fiadds
call
mov
pop
dec
jp
jne
cmp
out
imulb
cmp
scas
push
jge
rcll
dec
jle
mov
clc
pop
ret
movsl
fidivrs
int3
ja
pop
or
or
cld
or
pop
dec
pop
sub
pop
cmc
cwtl
mov
daa
adc
and
add
mov
popa
mov
dec
lock
repnz
xchg
jle
or
mov
push
and
mov
mov
and
push
jl
call
fstp
test
sub
scas
ljmp
shrl
or
lcall
pop
in
lcall
dec
aad
inc
fiadds
idivb
in
sbb
xchg
jb
adc
mov
outsb
out
call
mov
pusha
pop
inc
add
popf
enter
cli
jmp
mov
loop
mov
or
xchg
mov
enter
or
sub
enter
xor
sub
inc
inc
adc
xor
or
push
sbb
dec
icebp
and
dec
add
mov
lret
xchg
lods
sub
cli
sub
lea
dec
shrb
aad
and
push
mov
xor
xchg
dec
popa
jmp
fnsetpm(287
pop
sbb
mov
and
leave
push
inc
cld
fs
push
mov
xorl
xchg
nop
mov
leave
mov
fdivrs
xlat
sub
lret
shr
outsl
lret
jae
sub
xor
pop
xchg
adc
mov
and
icebp
int
dec
inc
jge
in
xor
sbb
jl
ret
out
and
imull
adc
jge
xchg
sbb
mov
rcrb
pusha
cmp
test
or
or
aam
int3
lods
xchg
mov
movsl
adc
iret
or
or
push
cwtl
inc
or
or
fldcw
in
xchg
adc
push
inc
leave
xchg
popa
adc
xchg
and
imul
jbe
and
fbld
int
idivb
or
stos
sbb
loopne
cmp
xchg
push
xchg
mov
push
and
fbstp
add
or
adc
jg
daa
push
push
in
cmc
mov
add
add
adc
inc
and
cmp
jl
sbbb
fs
and
push
arpl
scas
scas
mov
sub
jmp
ja
lods
repnz
add
insl
outsb
fnstsw
xor
pop
mov
sbb
adc
shrl
push
fmulp
push
rcrb
xor
sub
mov
and
loope
pushf
jmp
cmp
sbb
add
sbb
mov
jae
imul
push
mov
inc
add
push
inc
fcoml
lahf
orb
mov
jae
push
imulb
lahf
pop
out
inc
mov
lods
lods
aam
lods
mov
pop
mov
mov
mov
inc
lds
sub
test
jns
data16
popf
int3
adc
dec
mov
out
cmp
fstps
repz
data16
or
loope
inc
jne
inc
out
int
clc
jecxz
xchg
loope
dec
pop
pusha
jb
pushf
lods
inc
pop
pop
add
stos
xchg
loope
rorl
adc
dec
fwait
lock
push
and
adc
fdiv
mov
cwtl
andl
pop
push
mov
jmp
pop
and
xchg
movsl
sbb
imul
stc
jnp
pop
jecxz
insl
test
hlt
xchg
dec
ret
mov
imul
ret
data16
stos
imul
cmp
fimuls
mov
fiaddl
xchg
out
xchg
lret
push
sbb
mov
repz
loope
mov
cmp
imul
xor
inc
mov
mov
push
aas
icebp
cmp
jae
add
mov
push
sbb
sub
lods
jne
nop
cmpsl
xchg
shl
or
mov
pop
inc
pushf
sub
stc
push
add
clc
popf
add
loope
cmp
xor
dec
mov
ret
sbb
popf
push
lock
lds
mov
inc
repnz
mov
pop
jmp
pop
inc
or
sbbl
insb
stc
push
enter
ja
mov
or
sbb
mov
sbb
adc
fistpl
push
sbb
in
dec
icebp
adc
jns
lahf
add
and
fwait
into
sub
lods
pop
cmp
je
into
test
aaa
neg
xor
xor
imul
or
push
shl
loop
mov
pop
xchg
rcll
pop
sbb
jecxz
test
mov
jb
push
mov
mov
add
jecxz
lods
and
in
outsl
cmpsb
xchg
or
lods
enter
out
xor
fldcw
and
mov
sti
shll
sub
jnp
add
popa
nop
sarb
andb
fisttpl
lret
mov
imul
push
adc
iret
push
cmc
adc
pushf
in
out
add
mov
aaa
aas
mov
xor
adcb
outsb
and
push
ds
addr16
div
sarl
inc
sub
add
popa
xor
out
jp
sti
into
xchg
movsb
xor
ljmp
mov
in
cmp
imul
xchg
stc
or
mov
push
adc
das
push
xchg
mov
push
mov
mov
mov
movsb
pushf
push
icebp
or
mov
ss
sahf
lret
push
cmpb
xchg
hlt
popf
repnz
xchg
pop
or
sub
ret
xor
mov
xor
xchg
sub
mov
dec
pop
jmp
cs
fwait
test
movsl
mov
scas
add
push
fimull
movsl
add
push
scas
pop
jb
insl
aad
dec
pop
das
adc
in
xchg
cli
popa
xor
cmpsb
jecxz
bnd
dec
sarb
fdivrl
sti
xchg
jmp
mov
adc
test
mov
sub
ds
fstl
jge
and
jnp
dec
jg
cltd
fdivrp
and
stos
pop
pop
add
sbbl
add
mov
sbb
lds
jl
xor
cmpl
jg
mov
call
inc
mov
fcoml
dec
sub
xor
mov
jmp
fsubrp
push
pop
fs
outsl
fsubrs
xchg
movsb
stos
into
pop
hlt
mov
jno
sub
pop
cmp
dec
or
stos
cmp
push
inc
dec
insb
test
mov
je
and
movsl
mov
jbe
pop
aaa
jae
test
push
movsl
sub
xchg
scas
inc
shld
stos
mov
jne
int3
lea
pop
push
fstpl
outsb
setnp
jg
test
negb
popf
add
fdivrs
xorl
fdivp
iret
mov
pusha
iret
fs
stc
movsl
adc
cltd
mov
test
lret
scas
xchg
shr
xlat
sub
test
leave
loope
mov
push
jge
adc
push
mov
je
ret
aam
or
jl
cmpsb
push
rclb
lcall
dec
jo
mov
jns
in
aad
cmpb
xchg
out
in
or
mov
push
mov
inc
mov
mov
mov
nop
sbb
sub
in
sbb
xchg
out
and
xlat
sub
lret
adc
mov
jbe
xchg
int3
xchg
mov
xor
rcrl
inc
pop
dec
ljmp
sahf
dec
and
cmp
mov
jno
mov
inc
xor
sar
ds
scas
fadds
ss
test
cmp
push
movsb
pusha
out
fdiv
xchg
add
jb
pusha
arpl
notl
push
mov
fwait
ss
jo
dec
or
mov
scas
pop
dec
mov
jbe
jle
rcll
or
jp
movsb
fs
pop
mov
in
into
xchg
arpl
jb
push
add
dec
or
mov
stc
jae
cmp
mov
cmpl
test
lcall
ficomps
test
push
jb
jg
add
xchg
push
mov
sbb
mov
add
cmp
xchg
lods
xor
xchg
cmp
fwait
lock
lahf
push
lret
mov
imul
cmp
sub
and
mov
lea
mov
scas
xchg
and
jno
inc
push
decb
shrl
fucomp
mov
dec
inc
ja
mov
jle
add
repz
aaa
stc
es
jae
jle
les
mov
in
jge
pop
mov
sbb
test
push
xchg
test
mov
jg
std
inc
nop
fnstenv
negb
add
xchg
cmpsb
std
dec
xlat
insb
xor
int
push
sbbl
mov
out
dec
and
push
int
rclb
arpl
xchg
xchg
and
dec
lcall
and
mov
jle
lods
push
pop
mov
scas
mov
inc
dec
sbb
lea
mov
push
mov
ss
popa
push
cmp
call
dec
out
mov
inc
fdivl
cmp
xor
imul
push
push
movsb
in
filds
add
push
dec
sarb
out
sahf
sbb
gs
cmp
ljmp
loop
lods
in
fsub
xchg
ret
cmp
pop
or
cs
jo
xlat
mov
lock
mov
xlat
xchg
pop
cmp
rcll
push
dec
popf
and
pop
and
mov
pushf
movsl
jne
and
jge
push
cmpsl
add
ljmp
cmp
dec
popa
inc
pop
xchg
aaa
fdivrl
inc
in
or
or
js
mov
std
or
pop
mov
aaa
pop
mov
add
shrb
fidivs
pop
repnz
jnp
in
sbb
sbbl
jne
mov
mov
rcr
jg
cmpb
fs
adcb
aas
sbb
pop
push
mov
pop
pop
jle
jmp
add
roll
rorl
frstor
lret
or
xor
adc
jg
push
mov
movsb
repnz
or
xchg
and
insb
cmp
call
fucomip
aaa
add
add
dec
push
mov
movsl
push
movsb
rcrl
out
mov
jb
cltd
lock
shl
dec
cmp
and
xor
add
push
mov
or
addl
std
fs
mov
fistpl
out
mov
lods
fsubs
mov
jno
daa
sbb
mov
sbb
jle
lods
jecxz
xor
cmpl
dec
dec
pop
scas
jne
ds
popa
push
adc
xor
xor
in
jle
xor
int3
andl
xchg
aaa
adc
loop
adcb
enter
inc
arpl
or
movsb
pop
cmp
mov
imul
xor
mov
in
mov
sub
test
jae
in
out
dec
movq
add
cmp
mov
add
sahf
mov
stc
and
call
leave
popa
dec
cmp
hlt
mov
sub
cltd
jns
xor
nop
ret
xor
push
sbb
mov
js
pop
adc
sbb
arpl
dec
jne
push
std
push
ja
sahf
mov
push
push
push
push
push
xlat
lock
arpl
enter
mov
xchg
xchg
pop
js
jb
sbb
daa
mov
and
mov
cmp
dec
fs
and
loope
jp
fcmovu
cltd
push
fmuls
mov
dec
inc
mov
aaa
loop
pop
jb
into
or
lahf
loopne
mov
subb
or
dec
sbbb
popf
or
and
jne
subb
mov
dec
pop
push
daa
daa
adc
dec
mov
addr16
icebp
outsl
nop
jns
adc
popa
std
scas
xor
mov
negl
pop
xchg
out
les
les
fistpll
mov
imul
pop
sbb
cmp
stos
sub
into
sub
push
xor
ret
xor
push
xchg
notb
leave
into
lret
add
cli
lods
mov
and
xor
sti
out
imul
pop
cmp
dec
push
aas
ljmp
sbb
push
push
lret
mov
out
fcoml
inc
popf
cwtl
aam
cwtl
ljmp
sub
cmp
sahf
jbe
add
fstpl
push
fadds
adc
outsl
add
sub
fucomp
push
test
jmp
std
aam
add
xor
xchg
sahf
add
push
ljmp
in
scas
fadds
imul
cmc
je
cwtl
dec
cs
xchg
testl
fbld
dec
inc
and
cmp
es
in
mov
inc
je
adc
push
std
push
pop
cmp
sub
pop
pop
cmpsb
jp
mov
sahf
fsub
mov
dec
out
sahf
cld
ja
or
incl
bound
out
iret
push
ljmp
clc
sarb
cmpsl
test
push
xor
dec
shl
outsl
mov
mov
mov
roll
adc
cmpsb
pop
xchg
pop
shrl
sub
int
push
inc
mov
adc
fwait
dec
or
call
lods
mov
jl
loopne
movsb
fiaddl
inc
jp
jae
xchg
cmc
stos
fcomps
xchg
in
fisttpll
or
movsb
pop
mov
insl
pop
xchg
mov
jnp
cmp
sti
adc
sub
pushf
lahf
cwtl
adc
ljmp
or
pop
insl
out
mov
pop
dec
jmp
bound
lret
push
bound
mov
and
push
std
sti
pop
outsl
pop
sbb
jb
inc
js
sbb
pop
je
push
pop
popa
cmp
stos
in
xchg
loope
jle
lock
pop
pop
mov
clc
xchg
sbb
out
gs
arpl
mov
aam
xchg
push
or
inc
inc
mov
mov
mov
cld
mov
sahf
add
inc
cmp
sbb
sub
imul
stos
sub
add
add
leave
sbb
movb
movsl
sbb
add
add
in
orb
mov
leave
loope
stos
mov
pop
mov
imul
jae
mov
clc
fnstenv
shrb
fs
or
cld
jo
xor
lret
cmp
sub
outsl
sub
inc
jbe
jg
js
mov
ret
cltd
nop
popf
notl
popf
mov
pop
push
leave
cli
mov
pop
scas
xchg
and
cwtl
ficompl
das
andl
rorl
inc
fistl
lret
iret
jnp
push
push
hlt
jg
sbb
mov
add
js
xchg
mov
scas
bound
clc
andl
jecxz
scas
xchg
lsl
xchg
stos
mov
outsl
xor
and
cmpsl
popf
fnstenv
mov
xor
pop
test
stos
sbb
mov
inc
and
jle
das
loope
mov
ds
push
subl
iret
fwait
xchg
pop
sbb
inc
pop
mov
xchg
lcall
cltd
pop
mov
jo
add
and
mov
leave
jbe
aad
outsl
loope
adc
mov
add
sbb
sbb
gs
sub
aam
dec
in
test
cmp
add
mov
or
lods
inc
stc
adc
dec
dec
mov
ret
adc
push
push
xchg
loopne
aam
push
inc
fmull
xchg
or
add
pop
loopne
adc
imul
sbb
pop
ja
jmp
aas
xor
sbb
mov
xor
mov
stos
jmp
ficompl
fisubl
icebp
jne
shll
in
dec
cmp
jg
inc
or
jno
test
lahf
inc
xchg
lcall
xor
inc
cwtl
cmpb
adc
sub
pop
jo
pop
jno
movsb
sbb
pop
jecxz
cmp
dec
stos
imul
cltd
jle
xor
inc
xchg
adc
sarb
cltd
lods
push
cmp
inc
addr16
mov
cmc
pop
add
mov
enter
ljmp
push
inc
or
xor
int3
dec
cmp
xchg
push
orl
popf
outsb
test
mov
flds
lcall
js
mov
xchg
inc
ret
jbe
or
xrelease
cmc
or
inc
xchg
fdivl
sub
lods
dec
xor
lods
aaa
pop
aas
mov
or
clc
sub
push
dec
out
mov
or
or
mov
into
xchg
pop
pushf
sarb
enter
fsub
xor
ljmp
mov
add
cld
test
mov
rclb
ret
into
jne
mov
lret
dec
push
lret
push
insl
repnz
jp
push
add
movl
int3
jne
fidivl
xchg
fmuls
test
mov
out
mov
push
out
cmpsl
xchg
xchg
jl
adcb
mov
into
dec
aaa
fnstenv
jae
mov
repz
mov
test
iret
xor
cmpsb
mov
mov
cmpsb
sbb
xor
push
cmp
enter
sub
inc
scas
jbe
xchg
dec
iret
cmp
pop
jns
aas
test
push
nop
lret
out
aam
test
mov
imul
inc
outsb
repnz
mov
adc
sub
push
mov
adc
mov
adc
dec
popa
enter
inc
test
ret
idivb
mov
adc
sub
jne
ret
or
push
les
mov
clc
xchg
add
test
xchg
inc
daa
std
ret
mov
cmp
mov
popf
pop
sub
inc
cwtl
pop
shl
push
loop
cmc
xlat
jo
add
add
add
dec
cmc
or
xlat
ret
mov
sbb
cld
ffree
adc
lods
xor
sub
xchg
adc
inc
jns
jg
cmp
dec
sbb
xchg
cltd
mov
add
bound
or
mov
jno
add
test
jmp
cld
mov
jno
lods
test
pop
pusha
mov
cmpsl
cmovge
dec
loope
push
jge
push
cmpsl
das
adc
add
sti
cmpsl
and
js
push
arpl
inc
sub
clc
jmp
or
sarb
sbb
mov
push
fsubrs
and
pop
mov
mov
adc
iret
stos
loop
sub
jge
jnp
shlb
xchg
xchg
dec
and
insl
sub
rolb
inc
movsl
sub
dec
andl
int
cltd
mov
mov
cmc
jp
mov
push
jbe
and
lret
cmp
loopne
lret
lds
das
cli
cmp
cmp
cltd
stc
mov
add
incl
notl
lcall
push
aaa
cmpsl
push
adc
jne
and
inc
icebp
jl
adc
adc
jns
cmpsl
fists
dec
or
scas
ds
cs
imul
test
rep
rcrb
mov
mov
pusha
pop
movsb
insl
or
jo
and
ja
gs
xor
cmpsl
iret
fnstenv
repnz
sub
sub
mov
subb
loopne
lret
xchg
insb
inc
jge
pushf
or
add
mov
outsl
mov
outsb
mov
movsb
ja
iret
cs
loop
jbe
xchg
subb
outsl
inc
outsb
mov
push
cmpsl
cmp
mov
loop
jo
mov
mov
pop
or
cmp
mov
jecxz
mov
sub
loope
pusha
fcompl
outsb
icebp
outsl
add
pabsd
imul
in
iret
out
dec
int
add
sub
jp
fdivrs
dec
push
lahf
add
cld
pop
mov
dec
pop
sub
fildll
mov
mov
sbb
sarl
and
addr16
je
pop
push
aad
sti
repz
in
inc
inc
and
scas
ret
inc
ret
fwait
mov
jnp
daa
insb
lds
lret
fwait
cmc
in
dec
pusha
cmp
lods
pop
xchg
sbb
loope
nop
dec
leave
push
sub
aad
data16
pop
arpl
ds
out
scas
mov
pop
jnp
repz
push
lds
movsb
das
jmp
lahf
xchg
dec
out
lret
sub
pop
mov
imul
mov
cmc
xorb
mov
sub
mov
in
cmpl
dec
iret
fwait
int
sbb
inc
push
add
dec
rolb
xchg
and
mov
add
roll
pop
xor
aad
add
scas
mov
nop
add
fisubl
cmp
in
js
sbb
loop
dec
movsl
cmc
sahf
and
orl
mov
pop
jge
cli
cmp
pop
mov
push
jmp
push
pmulhw
mov
loopne
pop
sbb
std
xchg
add
in
das
mov
pop
xor
push
push
scas
in
push
push
test
pop
pop
push
scas
xor
aam
addr16
add
push
inc
inc
rep
adc
loop
mov
popf
adc
popa
and
sub
outsl
or
test
jo
sbb
push
sbb
mov
jge
mov
push
insb
out
mov
aad
call
add
add
addl
or
nop
sahf
add
jmp
dec
inc
mov
pusha
sub
out
and
jbe
jns
xchg
ficoms
inc
mov
rol
dec
hlt
and
cmc
inc
push
test
lock
ja
add
push
cwtl
je
xchg
leave
push
jl
cwtl
and
std
mov
lcall
mov
aad
xchg
sbb
outsb
dec
popa
or
fs
inc
repz
lods
mov
or
jl
idivb
out
jno
rolb
or
mov
push
shrl
in
mov
dec
inc
cmp
mov
sub
fidivrs
fiadds
dec
adc
mov
mov
xor
jge
lret
push
int3
adc
ja
dec
mov
push
lock
ret
add
jg
and
test
in
int
lahf
insb
repnz
cmpsl
jno
les
xchg
add
sahf
nop
xchg
mov
aaa
out
pop
mov
adcl
inc
adc
xchg
dec
jl
lcall
imul
mov
out
into
cmpl
int
xchg
or
add
and
add
mov
in
lahf
popf
mov
pushf
mov
cwtl
xchg
cmp
mov
shl
das
add
cltd
shll
pop
fwait
cmpsl
cmp
cltd
out
jmp
jl
dec
add
inc
mov
das
test
cmp
xor
shlb
mov
dec
xchg
pop
xchg
and
jge
in
sahf
dec
in
out
mov
jb
cmp
inc
dec
mov
pusha
insb
pop
xchg
mov
sub
jno
repz
in
outsb
jge
mov
mov
into
jg
ds
enter
sub
pop
jne
adc
cmp
cli
imul
add
push
xchg
sbb
fsts
roll
push
loop
push
mov
es
call
in
adc
pop
fildl
hlt
push
shlb
scas
andb
adc
adc
idivb
out
jnp
jg
jmp
adc
stos
pop
fisttpll
lea
int
imul
xchg
or
sub
arpl
jae
imul
scas
les
iret
mov
inc
dec
test
mov
mov
shrl
enter
mov
sti
insb
mov
mov
aas
sub
iret
jo
dec
scas
loopne
jp
lcall
xchg
lods
push
xor
push
imul
mov
mov
mov
jbe
mov
jb
daa
loope
fwait
xor
sbb
adc
add
inc
mov
in
xchg
lret
mov
push
adcb
andb
test
insl
pop
imul
and
add
bound
jmp
cli
sub
lea
inc
pop
cvtpi2ps
mov
mov
aad
in
jo
xchg
ds
mov
xchg
xchg
cli
or
cmp
mov
rcrb
push
pop
mov
movsb
mov
in
pop
adc
imul
pop
rcrb
xorl
mov
mov
xor
xchg
in
outsb
dec
mov
xchg
iret
cmp
mov
xlat
pop
mov
cmp
pop
cmpsl
sahf
sbb
fcoms
push
xchg
cmp
sahf
sbb
push
dec
cmpsb
jne
push
and
xchg
mov
cmp
mov
inc
adc
or
xor
adc
outsl
inc
sub
pop
add
loop
and
call
aam
nop
dec
mov
mov
and
frstor
jae
setae
dec
xchg
pop
mov
es
imull
faddl
mov
fdivrl
sti
xchg
incb
sbb
mov
icebp
and
cmc
aaa
sub
lahf
out
mov
add
mov
fbstp
lea
rcl
das
and
pop
dec
lret
fwait
jno
call
jl
push
jnp
es
mov
ja
and
scas
enter
xchg
ja
lock
mov
xlat
pop
ret
js
bound
and
push
jbe
adc
push
xor
loopne
rclb
cmp
imul
aas
jae
xchg
test
push
das
popa
movsl
ret
iret
aam
out
sub
jno
js
sbb
or
mov
dec
sub
arpl
cmp
or
jg
xor
or
push
push
into
add
fwait
lcall
test
clc
outsb
call
pop
inc
xchg
lcall
inc
fmul
movsl
sbb
inc
loopne
es
dec
push
pushf
push
ds
sbb
mov
cmpsb
push
add
dec
push
mov
adc
or
lods
and
mov
iret
pop
push
nop
js
and
arpl
push
jae
insb
push
pop
cmpsl
pop
jno
pop
aas
cs
xchg
xlat
sbb
sbb
or
mov
cmp
stc
add
rolb
popa
stos
xchg
sbb
sahf
add
test
push
mov
insb
call
in
lret
add
clc
ret
je
pop
es
aas
mov
ror
push
les
ror
pop
insb
mov
dec
stos
nop
arpl
test
das
jge
sub
in
xor
pusha
lcall
mov
cs
ret
orl
jp
nop
repz
les
ret
mov
pop
sub
lds
lret
movsl
mov
in
pmulhuw
and
mov
ja
mov
inc
push
mov
in
pop
jecxz
mov
xchg
xchg
jge
and
loope
pop
xor
aam
stc
repz
popf
ret
fdivp
fldcw
fsubr
dec
jg
sbb
mov
cmpsl
imul
inc
mov
mov
sarb
in
std
jle
adc
jl
out
cwtl
mov
jmp
cmp
stos
gs
mov
add
mov
adc
and
jne
add
jno
movsl
pushf
push
adc
push
xor
inc
adc
cmp
lret
scas
mov
push
mov
addr16
enter
leave
nop
sub
data16
movsb
fstps
sub
mov
das
xchg
cli
sahf
fnstenv
aaa
scas
add
pop
pushf
sub
push
pop
test
je
ja
repz
lcall
adcb
fisubrl
outsb
arpl
loope
loop
idivl
cmp
test
pop
lods
shlb
mov
push
sub
stos
push
mov
xchg
test
cmp
lcall
jns
jp
out
mov
roll
pop
mov
sbbb
sarl
adcb
cmc
bswap
mov
inc
popf
adc
stos
inc
sbb
dec
lahf
mov
mov
pop
mov
add
fsub
negb
pop
add
push
addr16
and
mov
cmc
cli
or
sub
adc
add
push
dec
adc
cmpsl
push
xchg
jo
or
mov
xchg
in
inc
shl
or
jbe
lretw
sbb
jg
enter
xchg
test
js
nop
cs
jns
add
sbb
in
mov
add
xchg
inc
out
jg
inc
cld
out
or
stos
shrl
mov
inc
sub
hlt
pushf
dec
jae
jnp
sbb
fildll
loopne
into
pop
jnp
scas
aad
int
test
xchg
rcrl
cmp
jle
and
cmc
jb
mov
mov
cmp
out
sub
vprotw
cmpsl
pop
mov
jne
xchg
push
inc
pop
lret
mov
push
dec
sub
and
test
in
ret
fcoms
repnz
decl
hlt
icebp
push
xchg
xchg
aam
lds
cli
adc
adc
lea
stos
cmp
data16
push
mov
cltd
xchg
aad
push
icebp
clc
jno
nop
xor
cmp
inc
cs
push
jecxz
fidivs
push
decl
test
dec
loope
jp
xchg
leave
push
xchg
push
pop
out
fwait
dec
add
rorb
add
inc
xchg
cmp
insb
adc
outsl
leave
sub
sub
mov
push
sub
add
mov
dec
mov
fs
fstpl
stos
or
push
cmp
loopne
or
mov
imul
ret
clc
loope
cmp
push
in
add
dec
mov
sbb
dec
arpl
push
xor
shrb
jne
mov
cmc
xor
cmpsl
outsl
mov
imul
jl
push
jbe
inc
int
jns
xchg
sbb
nop
inc
inc
cs
jl
scas
loop
cmp
lods
into
cmp
sub
rcrb
cmp
inc
sbb
jmp
cwtl
pusha
in
outsl
enter
inc
mov
push
dec
sub
push
aam
push
xor
sub
xorb
jnp
cmp
mov
push
sub
xor
jno
jp
add
aas
add
and
lock
das
pop
addl
mov
mov
in
es
mov
pop
xchg
in
stos
cltd
int
mov
scas
inc
pop
addr16
and
int
or
sbb
adc
int
in
xchg
aad
movsb
pop
stos
cmpb
or
and
pop
outsb
pop
enter
jnp
cmp
out
test
cmpsb
cmc
imul
sub
outsb
cmp
popa
dec
mov
aam
push
lret
mov
and
or
imul
add
push
les
popa
mov
mov
fstp
fs
pop
inc
and
call
pop
sbb
mov
dec
and
mov
inc
shll
sbb
jp
lcall
add
les
popa
pop
ret
popa
shr
mov
xchg
ss
loope
adc
push
cs
jg
int3
xchg
cmpsl
movsb
mov
xchg
xchg
add
jl
out
lahf
dec
aad
cmpps
and
push
sbb
jae
mov
inc
dec
jbe
dec
mov
movsl
sub
imul
dec
fwait
outsl
outsb
cltd
add
movsb
pusha
repnz
out
sub
jnp
adc
sub
int3
sub
or
jle
push
stc
cmpsb
aaa
and
lock
lds
jmp
cmp
push
xchg
mov
cmp
sbb
inc
xchg
mov
rorb
pop
out
lret
push
pop
pop
inc
pop
push
and
into
or
dec
push
hlt
sbb
pop
push
hlt
and
inc
into
int
iret
sbb
or
lret
aaa
mov
inc
xchg
clc
xchg
ja
jmp
xor
pop
sahf
out
mov
shr
jg
out
outsb
sti
cmp
cmc
jmp
add
out
push
movsb
push
mov
jns
or
cmpsl
sub
mov
mov
sbb
pop
mov
ret
mov
inc
xchg
call
mov
adc
sub
xchg
mov
push
and
sub
mov
mov
aam
push
push
xchg
add
add
mov
lods
push
pop
scas
inc
fwait
dec
pop
cmpsl
xor
inc
cwtl
in
pop
mov
idiv
fstl
mov
jmp
xlat
dec
or
fildl
stos
xchg
jne
mov
inc
push
mov
jne
popf
pushf
xchg
out
clc
leave
jmp
push
fcoms
push
hlt
in
push
push
dec
fmul
rclb
adc
dec
lahf
ds
sbb
imull
mov
lcall
dec
arpl
sbb
fcmovne
push
xor
sbb
mov
mov
cmc
and
push
jmp
mov
std
inc
mov
adcb
sarb
jmp
test
ficompl
xor
out
xchg
jb
mov
bound
sub
in
repz
sarb
lock
enter
ljmp
insb
inc
inc
adc
or
inc
add
stc
jge
add
fnsave
loop
cmpsb
in
pop
add
shr
xchg
fwait
or
js
addr16
pop
addr16
jecxz
inc
mov
fs
and
imul
pop
imul
push
fs
xor
xor
outsl
popa
mov
inc
movsb
sbb
and
test
arpl
cmc
jae
inc
cmpsl
inc
and
sbb
iret
dec
bound
repz
imul
roll
xchg
adc
repnz
fdivrl
call
in
push
mov
mov
je
sub
sbb
ret
dec
cmpsb
cmpsb
mov
and
movsb
xchg
pop
ja
enter
xchg
xchg
jno
lret
adc
imul
clc
sub
pop
jae
jge
mov
test
inc
ljmp
jno
jae
mov
dec
pop
sbb
pop
rcrb
inc
nop
mov
xchg
dec
fmul
pusha
xor
or
xor
out
ret
loope
pop
sbb
add
xchg
adc
adc
insb
push
mov
push
add
push
push
lret
pop
mov
mov
div
jecxz
xchg
std
pop
mov
stos
icebp
and
das
sub
lea
or
or
outsl
jno
scas
sbb
pushf
sbb
scas
push
push
sbb
mov
xchg
add
push
dec
bound
mov
mov
fcompl
fnstsw
and
mov
ficoms
xor
stos
loope
ljmp
xchg
mov
sbb
iret
adcl
cmp
inc
ret
loopne
and
faddp
adc
mov
mov
or
inc
fsubrs
mov
mov
add
push
cmpsb
jp
incb
stc
mov
dec
sbbb
int
int
rorl
jge
xchg
andl
add
fldenv
push
mov
dec
jge
sub
xor
cmp
and
mov
lahf
mov
imul
insl
cwtl
sub
sbb
insb
dec
xorl
or
lahf
aas
sbb
jg
jmp
fsubl
and
adc
push
xlat
loopne
int3
xor
add
xor
ss
pop
dec
and
aad
stc
stc
jb
fldenv
shlb
sti
shrb
xor
stc
cmpsl
imul
mov
out
cmp
cli
pop
and
jmp
stos
mov
push
jg
call
fs
test
mov
call
jbe
scas
inc
mov
add
aad
out
mov
adc
push
jp
arpl
bound
movsb
xor
mov
std
mov
mov
mov
mov
xchg
sbb
mov
mov
mov
xchg
push
hlt
jp
push
cwtl
cmp
fstps
push
adc
ror
insl
movsb
lea
sbb
sub
push
pop
idivl
push
push
addr16
and
mov
inc
lret
gs
dec
push
fcmovu
mov
xchg
sbb
adc
pop
divb
sbb
mov
sti
in
push
mov
push
or
loop
test
in
or
lret
and
sub
xlat
scas
shrl
mov
into
lods
or
lock
push
imul
jecxz
scas
int3
xchg
adc
int3
xchg
lahf
inc
inc
push
pushf
cmp
jp
ja
pop
and
mov
mov
call
imul
dec
sti
lods
xor
dec
sbbb
pop
clc
push
lret
in
bound
addr16
or
xlat
xor
shlb
mov
lret
test
ljmp
mov
ds
clc
cmp
js
cmp
push
dec
pop
jmp
test
imul
mov
jmp
jp
aaa
fwait
sub
push
in
inc
les
inc
aam
push
sbb
push
cmpsb
int3
das
and
dec
out
lds
adc
and
rcrl
fisubrl
cmp
daa
clc
mov
sbb
enter
test
dec
mov
dec
pop
jecxz
cmp
lods
cmpsl
movsb
push
pop
aad
push
jmp
rorl
mov
aaa
out
arpl
inc
jns
gs
inc
imul
cmp
loope
pop
and
jge
adc
sahf
mov
xlat
xor
jb
mov
or
imul
mov
lock
in
test
jl
outsl
enter
test
jmp
out
adc
inc
inc
loop
add
sbb
lods
push
in
ret
loope
inc
negb
ret
mov
enter
addr16
fmul
mov
sub
bound
mov
xchg
cli
jmp
sub
cmp
sub
jne
scas
pop
aas
pop
cmp
mov
and
neg
lods
mov
xchg
call
lods
ds
mov
movsb
in
or
push
mov
lret
sahf
mov
stc
mov
lods
aaa
adc
lahf
inc
loopne
fwait
sbb
inc
mov
mov
cmp
xchg
add
cmpsl
rcl
dec
es
je
adc
lahf
call
pusha
js
sub
fs
push
lea
add
ffreep
insb
mov
pop
insb
pop
lahf
sbb
pop
jle
mov
call
jle
sbb
jge
push
out
jb
sub
or
dec
sbb
mov
sub
imul
or
in
or
scas
push
mov
mov
sub
js
adc
stos
sbb
ret
inc
mov
test
test
jnp
imul
jne
pushf
stos
insb
fcoml
jge
or
xorb
je
test
add
fcoml
cli
or
cwtl
roll
add
and
je
pop
scas
std
mov
sub
js
fcomps
loope
push
xchg
repz
mov
stos
test
pop
aam
cltd
aam
and
fwait
sbb
incl
in
test
aam
push
push
call
mov
dec
mov
addr16
dec
popa
clc
cs
xchg
repnz
dec
data16
aas
or
mov
mov
lret
or
mov
std
ret
and
inc
inc
movsb
das
add
mov
fadd
jnp
cmc
mov
dec
mov
out
js
mov
mov
mov
inc
and
ja
inc
push
repz
xchg
xor
testl
imul
jg
jmp
je
fmuls
ret
inc
scas
inc
sub
adc
je
push
sbbl
or
fwait
stc
mov
es
repnz
lret
push
mov
jo
pop
movups
stc
sub
push
cld
ja
out
jg
sbb
or
in
mov
fs
mov
loop
mov
mov
mov
push
push
adc
cmpsb
sbb
ficoml
test
pop
in
xlat
int3
xchg
sbb
and
mov
and
loop
sub
or
test
jecxz
sbb
xchg
shl
aaa
add
xchg
aaa
cmp
loope
in
dec
mov
cltd
fstpt
pushf
and
aas
sub
xor
adc
outsb
xor
jl
jo
fldt
push
int
xlat
sub
xchg
orb
fwait
in
lret
xchg
sub
rcrb
cwtl
mov
fnstenv
fsubs
cmp
and
outsb
es
and
push
pop
mov
pop
or
adc
ljmp
pop
test
adc
leave
imul
mov
jbe
in
mov
adc
dec
sti
inc
call
lea
mov
xchg
cwtl
outsb
xchg
movsl
xlat
lret
sbb
and
addr16
push
push
pop
pop
sarl
xor
cs
inc
outsb
in
add
xchg
ja
push
enter
loop
jbe
popf
fwait
pop
sub
and
xchg
xchg
imul
addr16
mov
in
cmp
sbb
sbb
mov
loopne
fbstp
jno
popa
cmc
repnz
fwait
popa
xor
push
mov
ret
cmp
cli
adc
mov
out
xchg
xchg
cld
insl
pop
adc
lahf
push
add
adc
addr16
out
jo
lock
rcrl
outsl
jg
xchg
movl
out
fnstenv
or
xor
insb
hlt
addl
and
push
cmp
cmc
inc
js
push
nop
loop,pt
loopne
push
cmp
push
xor
jne
std
mov
dec
cltd
ss
iret
xchg
pop
in
mov
scas
fstp
mov
fstp
add
in
jecxz
in
stc
loop
out
and
mov
jae
jns
push
or
scas
mov
or
rorb
xchg
mov
dec
ret
call
pusha
paddsb
jg
dec
andl
mov
fstpt
lahf
sarb
inc
pusha
negb
mov
xor
scas
movsb
inc
aaa
push
dec
jmp
jl
add
and
cs
and
xor
je
pop
sub
arpl
inc
imul
xor
ss
pop
xorl
xor
push
pusha
dec
xor
jbe
pop
dec
inc
inc
jne
and
jbe
push
dec
cmp
jb
jle
pop
aas
inc
imul
xor
dec
pop
gs
pop
jno
data16
adc
dec
or
jnp
and
xor
sub
inc
pop
inc
insb
push
ss
push
jl
xor
je
data16
dec
cmpl
sbb
dec
and
addr16
xor
jle
dec
dec
dec
dec
pop
cmp
sub
cmp
pop
dec
push
cmp
cs
xor
pop
dec
dec
aas
pop
cmp
jg
pusha
inc
xor
cmp
outsl
imul
jnp
push
jne
push
outsl
sub
and
bound
cmp
jne
push
outsl
sub
and
gs
and
push
push
and
and
push
push
push
pop
push
pop
and
push
and
push
push
and
pop
and
sub
jge
js
or
jbe
jl
jle
or
jns
jle
jp
jle
jnp
or
or
or
push
pop
dec
arpl
jns
outsb
dec
push
jl
and
pop
push
pop
xor
xor
push
and
imul
imul
cmp
adcl
jae
pop
pop
dec
aas
cmp
inc
fs
gs
aas
push
push
cmp
cmp
sub
pop
jl
aaa
push
dec
jge
pop
dec
aaa
dec
dec
bound
sysret
push
or
adc
sysret
push
or
jnp
dec
cmp
outsl
inc
and
gs
jb
es
sub
fs
imul
insb
dec
insb
daa
inc
and
jle
pop
js
push
jb
dec
insb
daa
inc
and
jle
pop
js
push
jb
dec
insb
daa
inc
and
jle
pop
js
push
jb
dec
insb
daa
inc
and
jle
pop
js
push
jb
dec
