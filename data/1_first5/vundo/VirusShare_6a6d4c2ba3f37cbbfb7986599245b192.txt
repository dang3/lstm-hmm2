or
dec
mov
or
xor
add
mov
mov
push
lea
jmp
mov
mov
mov
lea
push
jmp
imul
add
movzwl
movzwl
add
jmp
pushl
jmp
add
int
cmc
int3
jae,pt
mov
inc
mov
and
sub
mov
add
mov
jmp
push
push
jmp
pop
push
call
nop
nop
push
subl
call
mov
rol
and
or
mov
jmp
movb
mov
mov
movb
call
test
je
lea
cmp
jmp
stos
in
inc
call
ret
add
add
add
sub
shr
dec
mov
shr
and
lea
and
rol
add
mov
add
sub
jmp
or
add
add
ljmp
imul
rol
mov
mov
pop
ret
add
add
add
jmp
pushl
call
add
pusha
jmp
test
jne
and
add
rol
mov
movzbl
add
mov
jmp
mov
mov
mov
add
ror
and
xor
mov
jmp
add
mov
mov
add
shl
mov
add
add
xor
cmp
jmp
jle
shr
add
mov
jmp
lea
nop
movzwl
jmp
push
jmp
leave
call
int3
push
dec
push
jmp
addl
jmp
call
lea
addl
jmp
outsl
sbb
mov
movb
jmp
cmp
je
sub
and
sub
shr
mov
mov
test
jne
jmp
call
mov
dec
xor
xor
xor
mov
mov
mov
mov
test
jne
add
ret
jmp
je
jmp
lea
dec
ror
add
mov
sub
cmpw
jne
sub
add
mov
mov
jmp
add
in
fildl
imul
or
mov
sub
test
jne
jmp
mov
add
jmp
mov
call
popa
jmp
mov
ret
add
add
add
jne
jmp
imul
mov
jmp
movzbl
add
mov
jmp
mov
mov
mov
movl
jle
jmp
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
add
insb
and
inc
or
or
mov
sub
mov
push
push
push
jmp
add
and
sub
shl
mov
sub
test
jne
and
or
rol
xor
and
mov
movzbl
add
jmp
lea
jmp
jle
jmp
or
xor
inc
sub
and
mov
mov
add
jne
add
ret
mov
jmp
add
add
add
add
sub
jne
jmp
or
ror
xor
mov
mov
add
and
mov
lea
and
and
add
or
or
mov
add
test
je
jmp
call
pushl
ret
or
ror
xor
mov
mov
xor
add
and
mov
jmp
add
add
call
mov
shl
dec
shl
rol
mov
sub
cmpl
jmp
push
jmp
jmp
leave
call
call
addl
push
jmp
push
jmp
call
subl
jmp
sub
inc
and
mov
lea
sub
test
jmp
jns
movzwl
push
jmp
mov
jmp
add
add
add
fcmovnbe
lret
sub
sub
mov
test
je
mov
add
cmpl
jmp
rol
mov
or
mov
and
cmp
jne
and
jmp
xor
and
cmp
sete
mov
ret
add
add
add
call
lea
cltd
and
add
sar
test
jmp
lea
push
push
jmp
add
push
or
mov
sub
push
push
sub
rol
mov
test
push
jmp
push
push
jmp
movb
jmp
lea
add
rol
shl
and
mov
add
push
call
mov
shl
mov
jmp
add
cmpl
jne
pop
pop
pop
mov
jmp
jne
add
ret
ror
rol
xor
mov
shr
mov
push
jmp
dec
push
dec
subl
call
mov
jmp
add
add
in
or
xor
and
mov
sub
mov
push
mov
movl
mov
jmp
push
push
rol
xor
dec
mov
mov
xor
mov
add
jmp
push
jmp
pop
call
pop
pop
pop
xorl
call
or
inc
sub
or
add
mov
push
push
mov
mov
jmp
je
jmp
lea
or
and
add
dec
dec
mov
shr
jmp
mov
dec
and
add
test
jne
mov
mov
pop
ret
add
add
add
sbb
rolb
pop
dec
add
mov
test
jmp
add
jmp
mov
jmp
add
add
arpl
or
inc
and
cmp
pop
incl
add
add
addl
add
int3
sti
call
mov
or
mov
sub
shr
test
jmp
mov
jne
xor
ret
test
jne
jmp
mov
movb
jmp
pop
push
dec
call
cmp
push
jae
call
push
jmp
addl
push
jmp
dec
int3
call
call
call
call
nop
addl
jmp
add
push
and
add
dec
or
ror
mov
sub
mov
mov
jmp
mov
movl
jmp
add
push
mov
jmp
movl
movl
jmp
push
jmp
add
push
jmp
pop
nop
call
inc
subl
push
jmp
push
xorl
push
jmp
push
inc
subl
call
jmp
push
mov
mov
push
mov
mov
jmp
cmpw
jmp
add
add
add
les
pop
add
jmp
or
cmp
jo
add
call
call
cmpl
jne
cmpb
jne
jmp
hlt
pusha
aad
les
ret
mov
and
jmp
nop
nop
shl
mov
nop
jmp
add
add
add
push
push
push
jmp
call
push
jmp
ret
push
call
leave
int3
jmp
dec
push
xorl
call
lea
jmp
lea
xor
dec
xor
mov
shr
and
add
test
je
and
and
rol
mov
jmp
inc
in
xor
je
movsbl
rol
add
jmp
add
xor
rorb
push
add
add
mov
add
sub
mov
mov
jmp
xor
mov
test
jne
cmp
je
add
cmp
jmp
rol
inc
sub
sub
add
mov
mov
jmp
jle
xor
sub
or
mov
rol
or
mov
and
and
mov
test
jle
shr
inc
or
rol
mov
jmp
mov
mov
add
xor
sub
xor
mov
mov
lea
jmp
xor
xor
add
call
call
push
jmp
call
push
addl
mov
call
push
jmp
call
call
int3
nop
call
call
push
ret
addl
jmp
lea
push
movb
mov
jmp
mov
rol
rol
or
shl
or
mov
shr
and
add
test
jmp
jl
pop
xor
pop
jmp
xor
xor
mov
add
mov
xor
xor
mov
and
or
add
xor
mov
jmp
call
add
mov
ror
mov
mov
jmp
rclb
sub
sub
sub
mov
jne
sub
jmp
xchg
adc
movb
incl
adc
jmp
sub
jne
test
mov
mov
jle
jmp
mov
call
push
jmp
call
call
call
call
dec
xorl
mov
call
push
jmp
push
call
leave
push
call
push
call
dec
xorl
mov
call
jmp
movb
movb
movb
call
test
je
cmp
jne
addl
jmp
mov
je
shr
mov
rol
sub
mov
sub
test
jne
movzbl
add
jmp
push
leave
test
in
in
dec
or
in
or
mov
pop
ret
xor
inc
mov
movzwl
mov
mov
mov
mov
pop
jmp
ret
mov
and
and
mov
rep
movzwl
and
shr
add
mov
dec
mov
add
add
sub
add
jmp
xchg
pop
xchg
mov
jmp
add
pop
add
add
xor
shl
mov
pop
ret
add
add
add
into
mov
jmp
jne
pop
pop
pop
mov
pop
ret
add
add
add
loop
lret
mov
rolb
and
cmp
addr16
mov
add
add
jmp
dec
popa
pop
add
mov
call
jmp
inc
xchg
adc
add
ret
subl
pop
add
ret
add
add
add
add
add
jmp
call
call
pop
pop
push
subl
push
jmp
dec
push
call
call
dec
leave
xorl
push
jmp
push
call
int3
dec
subl
call
jmp
lea
and
ror
mov
shr
and
add
test
je
xor
movl
jmp
dec
jg
mov
jl
xor
shr
and
mov
mov
mov
mov
push
jmp
push
push
push
and
sub
and
mov
sub
test
jne
movzbl
add
jmp
sarb
mov
jmp
push
loope
test
jmp
mov
jmp
jg
push
push
add
add
shr
xor
mov
call
jmp
fildll
test
mov
jle
jmp
je
add
ret
pop
pop
jmp
lea
or
or
shr
rol
mov
shr
and
add
subl
lea
jmp
fs
in
jne
test
mov
je
mov
shl
add
xor
mov
sub
mov
jmp
add
sub
xor
or
mov
mov
call
push
jmp
jmp
call
jmp
int3
xorl
jmp
shr
and
sub
inc
add
mov
lea
push
rol
add
add
mov
ror
mov
pop
shl
add
sub
dec
add
mov
jmp
out
fisttpll
adc
in
mov
pop
ret
add
add
add
jmp
movb
add
jmp
movzbl
xor
and
xor
sub
mov
jmp
push
js
push
jmp
push
jmp
call
push
xorl
jmp
in
adc
add
add
test
lcall
pop
jmp
int
push
xor
and
xor
ror
add
mov
pop
ret
add
add
add
add
mov
mov
jmp
xchg
xchg
scas
push
call
or
mov
call
add
add
mov
mov
call
movl
lea
call
jmp
or
add
add
add
add
lock
sub
add
sub
mov
mov
jmp
frstor
cmp
hlt
dec
and
sub
sub
mov
xor
xor
inc
mov
mov
mov
jmp
jo,pt
jne
sub
mov
mov
mov
movl
jmp
movl
mov
jmp
in
xchg
mov
cmp
jne
mov
add
pop
mov
jmp
push
mov
pop
mov
pop
ror
rol
or
or
ror
mov
pop
ret
add
add
add
inc
and
add
add
jmp
lea
call
cmpl
jmp
or
jne
cmp
jne
call
test
mov
je
rol
shr
shl
mov
jmp
sub
adc
add
jmp
outsl
sbb
decl
ret
add
add
add
sti
je
sbb
int3
mov
jmp
fbld
movzbl
shl
add
add
lea
rol
and
or
sub
shr
mov
mov
jmp
xchg
and
popa
out
incl
add
addb
add
add
cmp
jb
jmp
lds
add
cmp
jae
add
test
mov
je
lea
inc
sub
add
rol
mov
jmp
mov
popf
sub
mov
mov
add
sub
jne
mov
mov
xor
xor
rol
mov
jmp
ja
scas
dec
and
xor
mov
mov
add
dec
mov
movl
jmp
mov
mov
add
add
jmp
adc
cmpsb
mov
movl
mov
cmpl
je
pop
ror
shr
mov
sub
jmp
add
mov
xor
mov
pop
ret
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
scas
nop
dec
add
add
or
add
add
add
xor
xor
xor
aaa
cltd
aaa
push
cmp
ss
mov
cmp
cmp
cli
cmp
ds
aas
aas
xor
inc
cmp
jg,pt
test
xor
cmp
aaa
inc
cmp
mov
pop
xor
sub
mov
add
add
xor
xor
test
inc
xor
enter
popf
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
fadds
dec
std
mov
lret
sub
mov
jne
into
out
pop
push
mov
sub
mov
sahf
push
pop
sbb
pop
pop
pop
pop
pop
pop
pop
and
push
mov
xor
ljmp
fnstcw
sbb
mov
lods
movsb
and
and
in
push
sbbb
fimull
add
ljmp
and
pop
loope
test
ficompl
mov
xchg
xlat
push
ret
adc
stos
lret
dec
jecxz
or
into
ret
sub
and
stc
sbb
insl
add
pop
xor
xchg
arpl
in
stos
push
and
int
cmp
xchg
in
insb
or
dec
xor
dec
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
