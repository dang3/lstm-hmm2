jle
add
roll
add
loop
add
add
add
add
push
mov
andl
xorb
sbbl
movw
pop
addw
xor
jmp
jmp
jecxz
dec
jmp
jl
movsl
cltd
fwait
cmp
fsts
jg
or
add
push
and
pop
jae
movsb
clc
pop
call
sub
mov
jmp
aaa
ljmp
or
and
cmpsb
shl
and
or
adc
lret
cld
sbb
add
leave
sbb
dec
pop
sub
mov
in
repz
mov
sub
inc
mov
jb
push
push
xor
mov
mov
mov
lods
mov
pop
ret
push
jmp
ret
ss
inc
jmp
mov
mov
mov
add
push
addw
jbe
push
mov
subb
movw
pop
push
push
push
mov
mov
jmp
add
jae
in
inc
mov
mov
stos
mov
arpl
push
daa
scas
outsb
call
jmp
cmp
jae
mov
add
add
mov
add
push
popl
jnp
push
mov
orl
pop
xor
lea
mov
add
mov
xor
push
popl
rol
xor
inc
orw
jno
push
mov
andb
andb
sbbl
pop
cmpb
jne
cmp
je
inc
cmp
jb
mov
sbbl
jl
call
mull
sub
mov
xchg
sub
push
rcrb
pop
sub
into
xor
stc
cli
cld
adc
add
loopne
clc
or
aad
jae
js
cmp
lcall
aam
jne
jp
mov
addb
roll
cmp
adc
rorl
mov
jb
inc
sbb
rorl
cmp
jbe
push
sub
sub
popl
mov
cmp
jae
pushl
pushl
push
lea
dec
ror
mov
xor
xchg
addl
pushl
call
call
pop
pop
pop
jmp
jae
outsl
add
inc
or
test
mov
pop
iret
jle
fstps
cmp
cmp
js
xor
cmp
movsl
dec
push
lret
int3
sahf
push
push
cli
sete
js
iret
hlt
ds
out
sbb
mov
or
nop
xchg
pusha
push
leave
add
aaa
dec
mov
inc
es
jmp
mov
sub
ljmp
pop
leave
ret
call
test
jne
ret
push
popl
jb
push
mov
orb
xorb
pop
push
push
mov
call
push
shl
mov
xor
xchg
addl
push
call
push
push
shr
ror
mov
add
xchg
subw
jns
call
stc
xor
movsl
das
lahf
add
jbe
sub
jnp
cmp
or
jnp
mov
fsubrs
adc
xor
not
xchg
shrb
sub
out
iret
mov
inc
repnz
popf
std
loopne
mov
jle
adc
insb
and
dec
mov
loopne
cmp
inc
sbb
incb
jmp
push
aas
inc
mov
and
adc
pusha
movw
jge
call
dec
xchg
test
stos
mov
mov
cli
cmp
test
xchg
ljmp
fstpl
mov
mov
shll
add
jbe
adc
out
push
aam
inc
dec
test
dec
dec
test
int
in
movl
js
in
push
sti
add
call
mov
push
push
dec
shl
not
mov
xor
pop
addl
push
call
cmpl
jne
jmp
jmp
xor
xor
and
hlt
lods
movsl
cli
xchg
cmp
jnp
loope
cwtl
jo
out
icebp
jmp
popa
pusha
pushl
popl
jle
call
sub
dec
mov
int3
mov
cli
lahf
sub
xchg
scas
mov
dec
push
or
ror
fsub
xchg
lcall
sbb
dec
popa
js
pop
xchg
aam
inc
shrb
cmp
popf
cmp
cmp
sub
ds
shrb
jns
popl
call
mov
push
sub
shr
add
mov
sub
xchg
push
popl
addl
push
call
mov
mov
xor
pushl
popl
jbe
push
mov
sbbb
sbbl
pop
xor
rol
inc
dec
jne
cmp
je
cmp
jne
popa
shl
pushl
popl
ja
call
out
mov
daa
decb
aam
mov
jb
mov
and
jns
repz
mov
jmp
xor
dec
mov
cmp
cmpsb
pop
mov
mov
xchg
daa
imul
mov
xchg
and
mov
adc
leave
push
call
int3
jmp
jmp
mov
xor
jmp
xchg
movsl
scas
jg
pushf
mov
adc
sub
int
and
jnp
inc
mov
shrb
add
add
mov
pushf
in
xor
mov
add
mov
jno
add
in
add
xchg
adc
orb
jg
out
xchg
mov
xor
notl
push
xor
push
call
xor
push
mov
push
mov
and
popl
mov
push
jmp
pop
mov
push
push
push
mov
mov
rep
pop
addl
js
call
test
je
fidivrl
mov
or
adc
jl
mov
mov
in
cmp
in
bound
std
sarl
or
jbe
push
jle
dec
icebp
fucomip
sbb
sub
xchg
dec
cmc
xor
push
sti
cltd
or
sbb
std
inc
jno
adc
mov
fists
mov
add
pop
push
sub
lea
mov
xor
xchg
push
xor
jmp
sub
mov
add
or
jno
push
mov
orl
andl
movb
pop
sub
mov
add
or
jne
add
jmp
mov
shr
shl
mov
or
jmp
sub
mov
cmp
jne
jmp
fisubrs
jnp
mov
xchg
aad
or
mov
mov
jmp
push
in
mov
test
nop
sbb
jmp
push
xor
inc
mov
dec
cmpsb
mov
frstor
inc
sbb
fistpl
xor
cmpw
jne
ret
call
pushf
mov
or
dec
push
xchg
out
dec
jge
sbb
aaa
jle
out
scas
cmpsl
xor
jae
dec
jmp
test
in
andb
or
lods
addr16
and
mov
xor
mov
test
call
inc
dec
jge
xor
inc
mov
addr16
cmpl
ss
mov
test
jno
push
cmpl
or
lret
jae
orb
mov
pop
mov
loop
sbb
pop
call
adc
xorb
jl
stos
leave
lahf
ficoms
push
nop
add
mov
in
adc
xchg
sub
pop
cwtl
cmp
out
mov
mov
mov
pop
fstpt
cltd
jl
ret
dec
xor
je
int3
sub
mov
pop
jb
sbb
rorb
ret
mov
clc
mov
xchg
mov
dec
push
fbld
lret
int3
sahf
mov
adc
push
adc
mov
lret
sbb
pop
inc
fiadds
cmp
stos
pop
or
cld
and
jno
out
pop
mov
or
add
push
add
xchg
pop
or
pop
ret
notl
inc
sbb
stos
ret
mov
jo
jle
sub
dec
or
xor
pop
push
pop
jl
jno
mov
lock
cmp
pop
call
lret
pop
call
xor
jl
aam
ljmp
jle
or
pop
inc
mov
stos
test
je
popa
xchg
cmpl
scas
popa
out
cmpl
dec
or
aaa
mov
inc
sbb
cmp
jl
js
insl
mov
mov
sahf
dec
xchg
mov
notl
jnp
mov
mov
cmp
cltd
lods
fists
add
mov
pop
or
aad
scas
fimull
lret
rcr
leave
mov
fisubs
mov
mov
xchg
or
xchg
pushf
mov
int3
in
lods
mov
or
lds
pop
push
loope
push
push
js
insl
roll
popf
dec
xlat
subb
pop
les
adc
pop
pop
push
out
sbb
ss
test
lds
leave
cld
inc
mov
push
insb
xor
xchg
cltd
pop
ret
call
out
inc
xor
pop
call
test
xor
nop
test
jae
je
pop
gs
shr
aad
arpl
in
pushf
or
les
sbb
loopne
xchg
js
out
not
jg
xchg
les
pop
mov
sti
mov
pop
out
enter
call
inc
and
push
lods
inc
mov
inc
lahf
fisubs
ljmp
or
js
pop
mov
lret
xchg
push
dec
dec
mov
aas
fisubl
outsl
testl
repnz
cmp
popf
cltd
jecxz
call
pushw
pop
call
ss
popa
repz
cs
jnp
aaa
jne
dec
std
or
jnp
pop
test
cmp
cmp
inc
bound
lret
mov
cs
and
outsl
popa
cmp
daa
jmp
insb
ret
in
fistpl
pop
icebp
stos
daa
repnz
pusha
pop
xor
pop
in
cmp
dec
xlat
sub
jns
sbb
daa
mov
push
sbb
xchg
xor
stc
fdivs
xchg
or
push
rorl
les
pop
xchg
pop
repz
ret
jl
mov
mov
push
push
insb
stc
xor
bnd
mov
mov
inc
dec
pop
ja
dec
mov
mov
push
mov
icebp
out
pop
call
and
cmp
cwtl
mov
mov
mov
adcb
jbe
and
es
and
pop
addb
popa
mov
lods
and
inc
sbb
aas
mov
sbb
ss
mov
dec
addr16
pop
add
xchg
pop
or
and
mov
xchg
mov
loope
jge
inc
notl
and
and
addl
hlt
jmp
imul
mov
push
aad
pop
movsl
out
mov
xor
subl
pop
mov
pop
mov
jecxz
lods
js
pop
mov
in
and
mov
jnp
and
nop
cwtl
out
imul
jp
ljmp
popa
cmp
pop
sub
jae
sbb
pop
mov
sahf
mov
mov
cmp
and
mov
test
add
popfw
lret
sbb
push
inc
add
adc
pop
dec
lcall
sbb
xor
xchg
jecxz
iret
sahf
test
mov
insb
jno
jne
sbb
jbe
xor
mov
aam
sub
xchg
ret
lahf
xor
dec
mov
inc
push
movsb
mov
push
add
or
je
jb
and
loope
sarb
sbb
mov
in
std
addr16
leave
pop
call
pushf
adc
cmc
fs
repz
push
push
sbb
pop
loope
outsl
int
mov
jne
and
pop
dec
fisubs
cmp
out
xchg
pop
or
pop
jg
mov
mov
dec
fnstsw
or
in
repnz
lds
mov
jns
dec
inc
xchg
mov
mov
add
adc
fadd
inc
cmp
cmp
pop
or
add
lret
les
aaa
xor
les
adc
rcrl
adc
mov
mov
repz
aam
and
jne
mov
popf
jno
ds
xor
push
xor
inc
sub
pop
cmp
add
dec
sub
or
xor
arpl
mov
mov
decb
pop
imul
add
arpl
jp
sub
mov
push
repnz
aad
call
mov
mov
push
push
div
and
adc
pop
ljmp
pop
or
dec
daa
sbb
xchg
es
stos
dec
add
inc
mov
lret
stc
xlat
mov
or
mov
ljmp
in
lock
call
or
js
les
jnp
xor
pop
shll
dec
push
sub
mov
rcrb
aas
fistl
push
mov
jae
sbb
pop
push
push
xchg
mov
mov
sti
pop
mov
push
in
outsb
rcr
xor
xchg
clc
pop
sbb
scas
ret
int
cmpsb
sahf
rcr
xchg
clc
addb
sbb
cmp
aad
rorl
cltd
jecxz
lods
jbe
pop
mov
jp
mov
orps
pop
mov
and
fisttps
es
repz
pop
lods
jb
pop
mov
mov
stos
sahf
imul
lahf
es
pop
rcll
inc
mov
pop
dec
in
lahf
xchg
push
jmp
xchg
add
test
out
les
popa
sar
mov
push
ja
call
leave
ret
jge
sahf
adc
sbb
mov
outsl
jno
testl
movups
or
cld
les
scas
mov
mov
push
je
pushf
std
jno,pn
jp
rclb
cmp
mov
mov
inc
dec
inc
mov
xor
jb
mov
push
pop
push
or
pop
sbb
out
xor
pop
jmp
jg
sub
fimuls
cmp
pop
xor
in
je
sbb
cltd
lcall
je
scas
repz
mov
cld
sbb
pop
stc
cltd
xor
sub
nop
pop
imul
xchg
es
xchg
lock
pop
pop
inc
sbb
test
pop
sahf
stos
inc
push
ss
sti
jo
neg
jecxz
xchg
flds
sti
arpl
cmp
mov
ret
mov
pop
out
repz
in
rcrl
xchg
mov
mov
pop
pop
pop
scas
ljmp
imul
sbb
ja
xchg
in
shlb
test
negl
dec
push
stos
ds
cmp
push
sub
dec
test
mov
push
les
mov
xchg
xchg
add
add
add
int
fwait
out
cmpsl
ljmp
and
rcll
out
in
fs
or
jge
push
jb
fcoml
xor
jmp
stc
jo
test
pop
mov
out
outsb
and
and
push
mov
rolb
cmc
arpl
fnsave
jmp
leave
adc
mov
xchg
jbe
pop
movsb
xor
mov
add
pop
jecxz
sbb
nop
cltd
pop
pop
movsl
cmp
sar
stos
cmp
enter
sbb
ret
pop
popl
ja
sub
out
loop
pop
incl
aam
pop
or
bound
arpl
test
jg
jle
clc
push
insb
cmp
popa
je
mov
jno
into
push
push
sbb
pop
mov
lock
adc
nop
mov
pop
loop
js
jge
adc
ljmp
mov
std
int
xchg
xchg
lahf
dec
shl
loope
loope
xchg
cmp
dec
sub
xor
lock
dec
fidivrl
fidivrl
and
push
pcmpgtd
jo
sub
test
push
addb
shrl
cmp
lret
repz
xor
pop
cmp
xor
test
inc
addr16
adc
and
jge
ljmp
mov
cmc
fwait
clc
repnz
jo
pop
jne
xchg
fmuls
incl
mov
int
jl
stos
adc
sti
cmp
scas
dec
fisttpl
orb
xor
mov
inc
adc
sub
pop
jg
dec
addr16
in
es
stos
gs
xor
xchg
jo
sub
push
fistps
mov
pop
sbb
popa
cli
fdivr
push
mov
xchg
sub
test
jns
sbb
mov
insl
hlt
xchg
add
in
mov
mov
outsl
das
push
adc
subl
ffree
aam
outsb
xor
or
cmp
cwtl
flds
je
xchg
fimuls
push
fst
loope
rolb
mov
int
inc
add
daa
xchg
xchg
shrl
insb
je
sub
aad
lcall
cmp
xchg
or
pop
mov
rorb
add
xchg
pop
or
rcrb
daa
je
sbb
mov
int
loop
jg
mov
mov
repz
cwtl
or
adc
gs
jle
or
pop
mov
imul
inc
or
mov
push
aas
push
mov
pop
or
sar
cmp
fstl
push
dec
mov
inc
lods
test
js
andl
popf
fwait
jns
push
aas
push
mov
push
aas
push
mov
shlb
imul
fldenv
cmp
pop
push
lds
xchg
xor
add
into
enter
clc
test
into
enter
enter
xchg
adc
aam
repz
mov
iret
push
pushf
loop
sahf
hlt
inc
and
xor
mov
neg
push
inc
push
incb
jb
hlt
rcl
stos
xor
jb
pusha
jl
sbb
jne
fwait
std
pop
or
lods
push
add
xchg
pop
or
adc
fwait
les
out
stos
cmp
push
and
push
jo
pop
adc
shl
xchg
sbb
mov
sbb
adc
jge,pt
mov
mov
ljmp
imul
mov
add
aaa
negb
les
or
pop
push
jo
jmp
mov
ret
pop
mov
inc
leave
adc
fsubr
mov
test
cwtl
cld
and
cmp
dec
adc
sub
push
adc
dec
icebp
iret
cmp
popa
sbb
roll
int
mov
pop
scas
test
adcb
sbb
les
lock
call
pushf
test
or
mov
scas
mov
pop
std
fcoml
pusha
xchg
jb
jmp
lods
repnz
mov
into
adc
xchg
or
pop
sub
or
cmpl
mov
sbb
jmp
sbb
stos
shll
mul
and
mov
xchg
sbb
lcall
into
cmc
imul
arpl
mov
dec
mov
stos
icebp
lcall
cmp
mov
mov
cmc
pushl
mov
xor
xor
inc
mov
lock
mov
jnp
dec
les
aam
mov
loope
cld
jno
ret
rolb
add
mov
jg
mov
pop
icebp
jecxz
call
fcomip
dec
in
mov
icebp
jge
mov
mov
dec
pop
stc
fwait
shlb
fwait
xchg
bound
les
xchg
les
xor
push
clc
mov
add
jle
imul
sahf
into
add
fisubrs
movhps
outsl
pop
idivb
adc
mov
decb
adc
cmp
mov
pop
jge
dec
sub
jmp
push
in
push
rol
scas
mov
fldenv
imul
jno
cwtl
and
mov
sahf
dec
pop
mov
jge
rcl
loope
adc
xchg
mov
js
movsl
sub
mov
dec
js
xchg
aas
stos
add
pop
sbb
les
pop
or
adc
into
stc
jmp
loop
lret
and
lret
aaa
out
xchg
and
xchg
push
push
push
pop
adc
jnp
mov
daa
nop
ret
or
adc
loop
push
scas
jbe
scas
adc
mov
xchg
outsl
lods
aaa
ja
cld
push
popa
dec
dec
adc
cmpb
sbb
xor
dec
mov
jle
cmc
fcoms
int
jnp
lods
lahf
shl
jns
loopne
cs
or
sbb
les
mov
fiaddl
insb
mov
in
dec
dec
jb
sub
xlat
data16
cmpb
bound
sbb
inc
das
stos
ja
in
faddl
mov
mov
pop
pop
in
iret
int3
mov
aam
and
loopne
loope
xor
inc
xchg
nop
inc
int3
jns
mov
fimuls
add
pusha
bound
scas
xor
fisubrl
outsl
push
and
adc
or
movsl
and
adc
push
inc
fwait
shlb
in
testb
popf
jae
leave
pop
incl
fidivrl
iret
imulb
mov
imul
xchg
push
loopne
cmp
test
int3
mov
cwtl
bound
mov
in
adc
sbb
decb
mov
sbb
es
mov
lcall
sbbb
and
leave
xchg
pop
icebp
jecxz
call
gs
add
out
data16
test
jg
pusha
out
cmp
int3
negl
sbb
movsl
inc
les
pop
adc
andl
mov
add
stc
jl
out
psubd
pop
scas
push
sub
cltd
dec
xchg
and
lret
sti
test
mov
and
mov
sub
mov
pop
pop
sub
push
sub
jae
sbb
popf
dec
push
lahf
call
in
push
or
mov
xor
into
sbb
sub
stos
xchg
pop
or
inc
das
sbb
jno
fsubs
data16
and
mov
pop
jmp
cmp
push
mov
aas
and
cmp
mov
stos
mov
mov
push
add
dec
sbb
mov
fcmovne
xorw
push
cld
xchg
xchg
loopne
jl
das
adc
test
ret
or
pop
mov
xchg
sbb
push
mov
sahf
shlb
pop
movsl
rcr
pop
sub
pop
int3
psrlw
test
into
adc
mov
mov
cmp
pusha
inc
push
cmp
sbb
notb
lret
or
cmpsl
jg
xor
shrb
in
stos
sbbb
lods
fwait
and
jne
outsb
cltd
mov
inc
pop
scas
cmp
pop
sub
pop
cli
xor
aam
and
pusha
stc
sbb
fsubp
shl
ret
xchg
dec
int3
les
ret
or
pop
add
pushf
scas
pop
or
xchg
shrl
xor
jl
sub
mov
je
lret
iret
arpl
push
cmp
ret
pop
jg
mov
push
repnz
aad
fdivs
lcall
lods
outsl
jb
and
push
in
rol
cmc
jmp
mov
cmp
incl
and
cmp
ds
out
lock
dec
test
jmp
in
mov
mov
adc
cmpsl
push
mov
fs
pop
pop
decb
les
push
jle
or
pop
pop
mov
in
movsb
mov
add
and
add
lds
out
dec
inc
mov
out
call
jbe
push
sbb
pop
stc
pop
dec
repz
es
nop
push
jg
cmp
push
dec
mov
movsb
xchg
testl
outsl
cmp
mov
adc
lea
pop
call
pushf
int3
pop
or
addr16
dec
in
jl
nop
pop
pop
pop
cwtl
ja
mov
lds
sub
inc
insb
icebp
mov
xchg
lret
inc
jle
es
adc
insb
enter
negl
dec
test
jns
dec
push
ljmp
ja
and
test
lds
and
mulb
jo
cmpsb
dec
sub
es
pop
in
and
fucom
pop
mov
fcoms
mov
popf
add
loope
sbb
inc
adc
fidivs
sub
outsl
stos
je
or
xchg
inc
bound
push
push
lds
jne
mov
fistpl
in
xchg
lods
xchg
stos
loope
mov
mov
jno
mov
rcll
or
push
sub
bnd
repz
inc
add
push
jo
cli
jno
or
ret
in
insl
in
adc
sbb
pop
xorl
adc
out
inc
dec
mov
pop
or
sbb
ror
nop
jnp
cld
ret
addb
clc
ja
jne
push
mov
jle
aam
dec
fstps
nop
mov
ja
scas
jo
fwait
sub
push
ds
sar
movsl
push
mov
dec
jnp
pop
and
xchg
mov
dec
fadd
xchg
or
lea
fwait
fwait
cmp
ja
mov
push
push
mov
sbb
call
mov
orb
push
lcall
loop
and
dec
iret
sub
sahf
adc
and
rcrb
fiadds
icebp
subb
dec
or
test
jnp
clc
repnz
cmpsb
mov
ret
and
fimuls
mov
int
inc
inc
push
push
and
mov
fdivs
xchg
fimull
or
mov
mov
mov
js
lcall
sbb
inc
movsl
fs
dec
add
enter
mov
cmpsb
dec
jmp
shlb
sub
jge
or
pop
push
mov
scas
mov
dec
pop
int3
and
test
fldcw
dec
cmp
cmpsb
es
aaa
outsl
repz
add
es
mov
xor
rclb
mov
or
dec
and
das
insl
icebp
mov
sbb
lcall
jp
mov
dec
and
mov
pop
shll
iret
call
mov
sbb
sbb
sbb
loopne
sub
stos
pop
or
mov
dec
mov
rcll
pop
repz
popf
jb
fsubs
pop
rolb
adc
dec
dec
aam
imul
insb
mov
leave
lret
fadds
xchg
outsb
mov
dec
mov
push
les
lea
inc
mov
push
inc
addr16
pop
in
subb
enter
jne
pop
pop
scas
jl
add
jnp
pop
je
test
rorb
mov
add
nop
adc
ja
jmp
les
outsl
dec
out
ljmp
mov
xor
cmp
pop
pop
dec
add
xchg
pop
or
lret
adc
ficomps
aaa
lret
stos
sub
adcl
fsubs
push
jge
and
pop
decb
xlat
fisttpl
fstpt
sub
dec
adc
aaa
sarl
imul
js
test
in
incb
lahf
pop
in
leave
out
hlt
outsb
and
fimull
loopne
nop
ljmp
cmp
cmp
cmp
call
sbb
jmp
loop
pop
or
mov
sub
mulb
out
mov
shlb
cwtl
xchg
call
push
into
pop
sbb
movsb
pop
fs
push
pop
ja
leave
lret
lock
call
sbb
add
stos
pop
or
popl
lret
stc
and
popa
or
push
and
inc
xchg
or
push
frstor
push
jp
jle
xorl
xchg
inc
loop
push
les
roll
mov
cwtl
scas
sbb
mov
xor
cmp
jb
movsb
jmp
js
dec
fwait
dec
push
sub
adc
les
sub
or
cmp
lea
cltd
decb
ds
insb
into
xchg
push
in
sbb
mov
xor
fldcw
gs
out
jne
testl
mov
ret
icebp
popa
loop
jecxz
and
pop
pushl
xchg
hlt
aas
test
lock
dec
lods
xchg
in
scas
loopne
add
dec
sbb
and
aam
push
mov
les
or
xchg
icebp
icebp
pop
call
in
jb
loop
mov
scas
lock
inc
test
mov
dec
out
sti
xsaveopt
out
loope
mov
or
mov
xor
stos
stos
pop
or
push
jle
pop
jne
sahf
scas
add
add
je
cmp
mov
add
rclb
daa
or
gs
call
sbb
sbb
lcall
ljmp
sbb
ja
fiaddl
pop
xchg
mov
and
addr16
mov
jne
std
push
xchg
data16
sub
les
or
jb
or
arpl
push
ja
scas
xchg
adc
lea
loopne
add
inc
mov
cld
jb
nop
sarb
dec
into
loope
mov
dec
xchg
push
cmp
inc
lret
xchg
lcall
jle
scas
push
add
out
cltd
xor
fs
mov
cmpsl
fwait
pop
jmp
mov
inc
cmovo
dec
aam
fisubl
sbb
out
rorb
or
loopne
or
addr16
into
shrb
call
inc
movsb
or
xor
dec
push
rcrl
fadds
int3
push
cmp
bound
movl
or
rolb
add
fidivs
push
or
inc
inc
js
adc
rorl
cwtl
sub
jbe
hlt
push
or
aaa
mov
pop
lock
mov
adcl
mov
pop
rcrb
xchg
pop
or
stos
pop
push
lods
mov
daa
cmp
adc
mov
pop
xchg
mov
subb
mov
xchg
pop
or
jno
sub
outsb
cmp
push
in
sahf
sbb
daa
jns
fs
in
ret
loop
jl
and
pop
sahf
mov
adc
and
jnp
rorb
sbb
inc
pop
arpl
push
scas
imul
sti
pop
unpcklps
pop
pop
lods
jbe
pop
mov
test
mov
dec
mov
add
arpl
fsts
mov
lcall
pop
and
hlt
lods
cwtl
call
mov
inc
sub
ficomps
mov
mov
idivl
sbbb
je
inc
lds
pushf
adc
mov
fnstenv
mov
lods
push
push
shlb
push
push
lahf
cmp
mov
pop
andl
mov
sar
cmp
add
out
mov
negl
or
pop
mov
jg
dec
xor
subl
or
mov
ss
and
repz
ret
js
std
fistpl
mov
rorb
bt
sbb
add
jecxz
cmpsb
mov
aad
mov
jae
cmp
cmc
mov
xor
ret
pop
pop
ja
pop
or
outsb
sub
dec
js
flds
loope,pn
out
divb
push
aam
sub
imul
divl
sub
cmp
push
test
adc
loope
xchg
pop
loope
mov
jmp
ljmp
aas
shrb
jo
sbb
mov
aam
rorl
shlb
xlat
inc
dec
movsb
xor
ret
add
pop
push
sub
inc
aam
pop
sbb
or
or
pop
dec
imul
jg,pt
shlb
cld
jb
sub
cmp
xchg
lret
and
ret
jmp
test
ds
icebp
repz
call
repz
movsb
shlb
adc
popf
jecxz
inc
sub
and
xchg
stc
ds
sarl
adc
lcall
orl
push
in
jne
into
das
dec
cli
lods
pusha
fildl
jecxz
int3
inc
add
mov
jecxz
jmp
pop
or
call
pop
or
pusha
cld
add
jg
adc
int
mov
jle
pop
inc
lret
nop
xor
clc
sub
clc
out
cmp
je
repz
sbb
imul
test
dec
in
mov
jecxz
push
fs
mov
addr16
sub
pushl
add
xor
enter
lods
repz
mov
ja
stos
xchg
sahf
cld
mov
js
mov
sbb
dec
mov
pop
rcl
insb
test
sub
lods
cs
adc
in
filds
mov
daa
aaa
stos
add
fstps
push
iret
and
in
add
mov
test
xchg
pop
repz
loope
test
outsb
bnd
push
lods
jae
pop
push
sbb
inc
mov
pop
lcall
adc
inc
insl
push
xchg
shrb
test
pop
pop
dec
add
mov
jbe
les
or
fildll
hlt
arpl
jecxz
push
mov
jno
sbb
fidivl
loopne
sbb
push
ret
xchg
cwtl
pop
dec
lcall
les
dec
outsl
scas
mov
jae
sbb
sbb
imul
dec
scas
jb
adc
test
fs
and
cltd
movsb
mov
xor
jnp
mov
pop
mov
loopne
sbb
fcomip
sub
sbb
sub
inc
jge
jg
mov
add
sbb
sti
and
std
les
ficoml
in
sahf
rorb
daa
sbb
xor
insb
xchg
fldl
loope
orl
aas
sahf
icebp
mov
int
mov
pop
or
call
mov
push
or
pop
call
jecxz
repz
pop
add
clc
into
lods
sbb
mov
cmp
pop
or
push
inc
sbb
pop
incl
xchg
pop
or
pop
add
inc
repnz
xchg
push
fcompl
jle
xor
push
adc
inc
add
clc
out
dec
aaa
fwait
stos
xchg
addr16
icebp
pop
call
sahf
mov
mov
jp
and
mov
test
daa
and
push
xchg
xor
push
push
imul
call
pushf
ret
pop
or
fcomip
push
ret
or
pop
call
cli
jl
add
shrb
dec
lds
push
push
mov
ss
dec
cmc
add
pop
mov
or
push
sarl
outsb
aam
das
pushf
test
pop
xchg
enter
pushf
les
les
incb
sub
xchg
push
loope
sbb
incl
inc
enter
dec
fisubs
xchg
adc
and
mov
stos
mov
or
out
xchg
pop
or
and
push
push
movsb
push
add
out
jno
js
jnp
nop
cltd
jecxz
push
cmc
cltd
mov
in
leave
lea
and
sahf
adc
pop
sub
ret
sbb
mov
cli
rcrb
stos
divl
lock
stc
divl
das
das
ds
std
xorb
mov
mov
sub
inc
inc
adc
jo
dec
cs
xlat
pop
cmp
or
or
xor
sub
dec
dec
xchg
pop
xchg
int
sbb
xchg
dec
lcall
inc
dec
pop
push
sub
repz
pop
push
jp
mov
xcrypt-ecb
cmpsl
int3
sbbb
xchg
xchg
dec
leave
xlat
push
hlt
hlt
ficompl
call
mov
add
push
ret
inc
mov
xor
fiadds
test
outsl
imul
dec
repz
out
inc
mov
pop
or
shl
mov
jae
cmpsb
adc
xchg
call
mov
push
fsts
or
add
in
or
and
mov
mov
stos
repz
jb
cmc
sbb
shll
psubq
lock
outsl
out
adc
outsb
mov
pop
jmp
daa
mov
arpl
pop
jbe
lock
jp
sub
scas
xchg
push
pop
andb
cmp
test
adc
rcr
mov
in
repnz
xor
and
icebp
push
xchg
pop
push
xor
outsl
movsl
push
push
sarb
ja
enter
cmpsl
rcll
add
addr16
lcall
mov
pop
push
repnz
call
ret
leave
cltd
xchg
sarb
outsl
nop
mov
dec
sbb
sbb
or
insl
push
js
jecxz
call
sub
sbb
fwait
shrb
les
mov
fimull
push
push
sbb
dec
std
dec
mov
das
jbe
jb
test
pop
ds
in
int3
inc
and
sahf
inc
push
mov
push
out
mov
add
pop
enter
inc
mov
ret
mov
fnstenv
jmp
adc
sub
rcl
xchg
lret
test
dec
imul
mov
sbb
and
pop
or
pop
dec
and
popl
inc
dec
jbe
adc
pop
cmp
divb
or
fucomip
lahf
push
add
pop
push
add
in
test
inc
xchg
xchg
xchg
jl
xchg
inc
dec
stos
sahf
inc
sti
xchg
scas
iret
imul
sahf
jo
xchg
xor
push
mov
shrb
mov
xchg
pop
or
in
xlat
loop
mov
jae
aam
mov
pop
movsl
xchg
stos
mov
mov
pop
call
xor
pop
sbb
pop
mov
lods
js
pop
mov
ja
stos
sub
je
pop
xchg
into
sbb
orb
int3
or
popa
and
aad
push
lods
test
aam
jb
gs
je
lcall
xor
scas
pop
fwait
loopne
sbb
out
inc
and
pop
decl
icebp
mov
sahf
mov
inc
adc
mov
out
or
inc
fwait
jmp
lea
add
sahf
mov
jnp
clc
mov
mov
push
cmpsl
fists
jae
mov
push
sti
adc
das
cmp
pop
push
pop
dec
dec
push
outsb
pushf
rcrb
fiadds
lea
ds
push
orl
jne
mov
pop
jecxz
xchg
addr16
adcb
push
jle
or
pop
loopne
mov
pop
pop
arpl
aam
lods
dec
cmp
fldl2e
int3
adc
mov
jae
push
mov
hlt
cmpsl
fbld
pop
mov
sti
dec
movb
outsl
jnp
aad
aas
pop
out
mov
dec
mov
pop
andb
adc
jne
jmp
in
dec
popa
movsl
push
xchg
mov
out
inc
lods
lods
jle
call
mov
jo
push
jl
pop
lret
xchg
xor
jecxz
add
mov
jl
repz
ret
sbb
sub
mov
cmpsl
enter
int
repz
sbb
data16
loope
xor
and
dec
mov
add
mov
add
jmp
push
rcl
sub
icebp
jno
loopne
dec
dec
add
push
lcall
mov
cmpsl
test
sti
stos
add
dec
jge
test
xchg
ds
pop
scas
and
xor
inc
mov
icebp
fistps
sbb
push
push
mov
movsb
xchg
inc
imul
jns
mov
mov
ds
loope
cmp
mov
mov
scas
jo
pop
cld
js
outsb
inc
inc
or
mov
lds
mov
lods
jle
pop
mov
and
scas
scas
push
cmp
mov
xchg
frstor
outsb
mov
sub
adc
pop
sub
pop
add
sar
pop
scas
sbb
xor
pushf
lret
les
cli
inc
jbe
rdtsc
call
xchg
push
scas
mov
inc
mov
insl
loop
add
mov
mov
fidivs
cs
sahf
faddl
out
rorb
sbb
and
mov
bound
xor
out
mov
js
std
jmp
push
outsb
pop
call
pushf
enter
orb
cld
scas
loopne
jno
xor
aad
rorb
loop
out
xchg
dec
adc
dec
xorb
push
xchg
hlt
add
stc
or
adc
test
or
les
push
bound
or
repnz
outsl
pop
and
mov
sbb
inc
loopne
and
testb
jo
mov
and
mov
addr16
mov
and
xor
mov
imull
jb
push
push
mov
pop
mov
sbb
and
int3
cli
test
mov
sarl
push
mov
xlat
incb
or
aas
lods
mov
sbb
cmc
sbb
pushf
inc
mov
ret
mov
lods
xorl
or
pusha
dec
mov
dec
dec
cmp
data16
lret
dec
mov
mov
mov
jb
adc
pusha
inc
xor
adc
stc
rcr
dec
repz
add
mov
mov
int
xor
jns
mov
loopne
and
sub
xor
inc
ja
ss
out
jbe
popa
or
pop
call
dec
push
aas
popf
xchg
push
pop
inc
aaa
add
push
pop
idiv
out
push
push
pop
ss
popa
xchg
mov
sbb
sub
hlt
out
xchg
mov
push
inc
jecxz
or
fimuls
or
lcall
loope
and
xchg
or
add
jecxz
add
in
push
outsb
jmp
and
adc
jmp
ret
loopne
mov
imul
lock
ljmp
or
idiv
mov
adc
insb
adc
adc
xchg
pop
jne
mov
jno
cmp
dec
mov
pop
stos
cmp
andl
xor
mov
and
mov
sub
out
and
paddusb
scas
test
pushf
dec
push
jl
or
cmp
push
hlt
stc
sub
mov
lock
xchg
gs
inc
es
out
out
dec
out
mov
jg
inc
xchg
outsl
test
test
fwait
and
mov
mov
pop
jmp
sbb
lea
pop
call
pushf
lret
les
in
mov
ss
test
pop
into
lcall
fmul
xchg
add
xchg
cmp
jo
shll
movsl
pop
mov
push
add
ret
jmp
rorb
ret
ljmp
push
arpl
xchg
outsb
jae
aaa
cs
jecxz
dec
subl
scas
pop
dec
stos
bt
popf
inc
and
push
nop
ja
cmpsb
rorb
add
jg
cmp
jns
sahf
nop
mov
or
je
cmpsb
cmp
sbb
and
icebp
arpl
pop
je
adc
int
push
or
sub
add
mov
je
les
mov
data16
xlat
xchg
adc
mov
aas
mov
and
int
or
push
cmp
sets
jp
mov
fimuls
sbb
dec
pop
cmp
lea
pop
xchg
lds
sub
jg
pop
leave
adc
movsl
xchg
not
sbb
addr16
out
arpl
xchg
dec
mov
enter
in
fcomip
mov
mov
pop
sbb
lods
fs
sub
lds
pop
sub
negl
pusha
rcrl
int3
inc
xor
pop
cwtl
inc
ret
fwait
icebp
and
add
aaa
ds
and
neg
scas
xchg
jmp
jl
push
int3
adc
dec
ret
adc
add
orl
lahf
mov
ret
js
cmc
mov
insl
sbb
out
aas
fadds
out
outsl
pop
xchg
imul
sub
in
push
pop
mov
adc
push
pop
ret
pop
jmp
mov
sbb
aas
jns
inc
pushf
dec
adc
pop
addr16
cmpsl
mov
add
jecxz
pop
lcall
ret
pop
jmp
rcl
mov
clc
push
lea
push
lret
xor
cmpsb
and
mov
lods
adc
or
pop
test
cmp
sbb
imul
jmp
in
nop
cli
movsl
cmc
cmp
insb
dec
xchg
stos
add
loop
cmp
pop
popa
and
lahf
sbb
lods
jp
pop
mov
push
jmp
adc
xchg
xchg
std
mov
pop
jp
sub
pop
mov
push
add
int3
xchg
pop
or
mov
add
jp
xchg
mov
cwtl
mov
and
or
mov
jne
ljmp
mov
pop
pop
rcr
out
test
je
jle
bound
jnp
lock
imul
popf
xchg
divps
outsl
cmp
dec
bnd
call
loopne
shll
cmpsb
aad
pop
je
loop
fdivrl
jb
or
in
mov
jb
mov
int
mov
das
cmp
xchg
and
jae
icebp
or
testb
mov
push
popa
inc
js
vmovntdq
addl
leave
sahf
mov
jbe
push
scas
inc
cwtl
scas
mov
jl,pt
into
mov
push
or
dec
and
aas
and
movsl
adc
jmp
mov
movsl
mov
xchg
add
repnz
fsubr
cmp
mov
pop
fwait
rcll
ret
loop
daa
aaa
push
das
adc
shl
xor
mov
ret
mov
pop
mov
push
leave
stos
data16
ss
mov
dec
xchg
mov
sub
jmp
mov
xor
std
dec
test
push
pushf
test
or
xor
addr16
adc
push
iret
lret
add
popf
test
and
pop
mov
lea
nop
call
mov
sbb
xlat
scas
leave
mov
xchg
scas
cs
ja
sbb
adc
and
repnz
roll
mov
xor
test
mov
pop
xchg
or
push
ret
or
pop
mov
rcrb
sti
pop
call
aad
andl
das
dec
and
or
daa
inc
or
imul
jmp
cmp
sbbl
jmp
mov
les
loop
mov
ss
andl
mov
xor
push
pusha
pop
add
insl
pushf
xchg
mov
mov
sbb
pop
dec
sbb
call
jns
pop
pop
or
lods
mov
pop
xchg
or
dec
mov
pop
cltd
and
lahf
push
jp
cmp
jl
mov
cmp
fwait
xor
sarb
out
sub
clc
add
or
adc
xor
clc
addb
pop
push
frstor
jns
sbbb
mov
loopne
pop
lods
xchg
inc
pop
inc
stos
imul
out
mov
lods
jle
pop
mov
stc
mov
pop
jno
cs
adc
call
mov
sub
out
push
sahf
nop
lcall
push
int3
jns
xchg
outsb
sub
push
loopne
jbe
fmull
jo
fisttpll
cli
xchg
jl
add
ljmp
mov
jno
cmp
repnz
jnp
and
pop
sbb
sbb
call
mov
sbb
dec
inc
add
mov
jle
loop
mov
push
and
loop
shr
xor
test
pop
mov
insl
xor
mov
dec
repnz
call
adc
pop
fs
add
aas
shlb
inc
dec
mov
mov
dec
dec
dec
je
sub
mov
sub
push
push
mov
sti
mov
incl
sub
sti
add
xchg
pop
or
dec
pushf
or
cmpsl
jle
dec
lds
imul
in
xor
jmp
lods
pop
inc
dec
mov
fidivrl
or
inc
repz
arpl
mov
or
loop
daa
cmp
or
fcomip
sbb
sbb
or
pop
mov
jge
add
pop
jmp
leave
gs
nop
mov
scas
dec
xchg
mov
or
pop
jns
or
shll
stos
push
out
jns
test
push
push
pop
loop,pt
xor
mov
or
sub
xlat
movsl
clc
imul
add
lock
cltd
inc
mov
lcall
or
jb
in
sub
sbb
cmpsb
mov
adc
xor
fcmovb
loopne
lds
pop
stc
dec
inc
dec
out
jb
int
clc
js
jo
mov
xchg
mov
aas
inc
lahf
lds
fwait
cwtl
inc
sbb
pop
lcall
dec
stos
inc
stos
fcoms
xor
lods
cwtl
inc
sub
pushf
mov
or
cmp
and
and
mov
leave
cs
adcl
adc
into
mov
sbb
test
jecxz
insl
mov
add
jp
pusha
sub
add
jb
ljmp
sbb
cltd
into
sbb
lea
and
pushf
push
call
xor
pop
test
pop
push
lcall
call
mov
inc
xlat
movsl
pop
push
xchg
jecxz
daa
gs
ss
subl
jo
add
std
sbb
cwtl
call
mov
inc
les
lods
stos
jno
sti
std
rcrb
jge
jg
or
test
mov
jg
sbb
out
mov
push
rorl
addb
sbb
push
pusha
mov
pop
sbbb
xchg
addr16
pop
call
sahf
mov
or
shll
mov
dec
popl
scas
lds
inc
nop
inc
incl
popf
jae
fdivrl
pop
jmp
dec
add
imulb
movl
inc
mov
stos
lods
test
dec
outsb
pop
mov
insb
test
mov
pop
xchg
cmp
cmp
jle
ret
out
push
das
movsl
pop
mov
imul
pop
cmp
cli
push
icebp
outsb
cmp
mov
cmc
pop
sahf
mov
hlt
mov
add
insb
add
pop
mov
pop
aas
or
shrl
scas
mov
xor
call
mov
dec
jne
push
hlt
push
mov
sub
xchg
mov
add
add
fwait
mov
test
fwait
lods
insl
push
push
sahf
ficomps
fiaddl
dec
mov
mov
dec
or
dec
mov
sahf
lret
cmp
je
mov
ficoms
sub
aad
mov
jo
rcrl
sub
jno
insb
pop
sbb
std
dec
inc
dec
test
imul
fistps
sub
push
push
addb
lret
xchg
lods
call
outsl
fnsave
push
fcoml
ficoms
repz
mov
sub
and
pause
dec
dec
lods
cmp
pop
popa
or
rolb
xor
or
enter
hlt
push
cmp
cmpsl
movsb
xor
dec
stc
jae
repnz
sbb
enter
rorl
xchg
cli
inc
add
cmp
sub
sbb
jo
stc
aad
mov
sbb
pop
jno
dec
jbe
mov
sbb
aad
sbb
pop
mov
jns
fsubs
sbbb
imul
cmp
cltd
aaa
pop
cs
inc
popl
add
jl
dec
cmp
jnp
xor
iret
sbb
pop
mov
dec
cmp
pop
mov
movl
rcll
sbb
fdivrp
repnz
jp
add
adc
mov
pxor
lods
xchg
test
or
or
pop
adc
out
lods
ljmp
lret
mov
ljmp
ja
inc
les
lcall
adc
stc
and
xor
rcll
out
scas
add
int3
push
mov
outsl
ds
repz
and
test
sub
je
mov
les
aad
ret
pusha
sub
pop
aaa
or
sub
mov
pop
fs
imul
add
adc
stc
sub
in
in
sub
mov
mov
or
cmpsb
adc
push
out
stos
test
shrl
adc
mov
testb
dec
movsb
dec
pop
pop
add
push
lea
and
lcall
mov
in
scas
add
mov
cmp
ljmp
xorb
inc
push
clc
call
push
sub
inc
inc
ret
push
pop
js
push
add
leave
cmp
inc
adcb
shll
or
lret
and
gs
push
repz
loop
popa
mov
add
ja
nop
pop
out
jo
lods
cmpsb
iret
pushf
pop
lods
dec
data16
notl
or
mov
or
dec
jae
outsb
inc
loop
fnsave
lea
int
xor
cmpsb
shll
cmp
sahf
jg
mov
ret
pop
call
mov
call
pushf
into
pop
or
xor
pop
and
insb
es
sub
bound
imul
loopne
sub
popa
rorb
sar
jo
ss
xchg
add
and
sarl
sub
xchg
push
inc
push
lods
addr16
pop
call
ds
mov
das
push
cmp
push
test
adc
push
dec
aad
push
cmp
mov
into
ljmp
fisttps
roll
popf
dec
je
push
and
inc
jle
or
pop
jle
jmp
movsl
mov
stos
xchg
cmpsb
lock
add
lcall
sub
xchg
push
and
je
jo
ds
sbb
jbe
or
lods
sub
pop
xor
dec
mov
inc
xchg
mov
pop
inc
test
mov
pop
pop
cmp
lea
jl
aaa
mov
pop
push
in
movsb
xchg
aad
push
fildll
cli
xor
bound
adc
into
dec
mov
or
push
push
sbb
cmp
mov
inc
add
test
push
or
out
dec
pop
rclb
fists
xchg
add
mov
pop
hlt
aad
inc
xor
push
and
hlt
hlt
call
in
dec
fnstenv
adc
divl
mulb
cli
pop
inc
and
test
xor
ss
pop
lods
pop
loope
popf
pop
or
pop
call
