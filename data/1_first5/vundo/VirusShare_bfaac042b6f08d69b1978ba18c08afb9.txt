ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
ret
mov
sub
orl
pushl
pushl
push
push
call
add
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
call
mov
add
cmp
jb
mov
leave
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
push
pushl
call
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
push
call
add
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
push
mov
push
mov
push
push
movl
movl
movb
mov
movl
movb
movl
mov
movb
call
push
push
mov
call
push
push
mov
call
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
call
call
movzwl
mov
mov
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
add
add
add
add
and
and
xor
loopne
add
add
add
adc
or
add
insb
cmp
add
incl
popa
or
lods
inc
add
add
add
mov
lcall
push
or
xor
and
mov
stos
push
jb
outsb
inc
dec
inc
add
sub
add
sub
inc
mov
lcall
jmp
fdivrs
cmpsl
in
add
ret
xorb
adc
push
arpl
cld
push
call
pusha
dec
push
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
pop
add
add
sub
adc
xor
rolb
add
incb
dec
add
call
or
cld
xor
cld
and
adcl
inc
lock
lcall
sar
dec
repz
insl
xor
push
mov
hlt
push
push
add
nop
push
and
je
add
add
add
mov
and
add
cmp
cmp
out
xor
add
push
add
je
js
outsl
movsl
outsb
insl
je
add
inc
lods
jo
movsl
gs
jb
outsb
outsl
imul
cmp
push
gs
cmc
imul
add
xor
outsl
int3
imul
loopne
insb
push
insb
jl
add
add
add
mov
in
sldt
add
pushf
lahf
add
add
out
iret
adc
imul
int3
cmc
mov
xchg
mov
jl
sti
test
or
sarb
popa
test
mov
lock
ljmp
sub
movsl
add
pop
push
pop
lock
mov
inc
in
shrb
xchg
cmpsl
fadds
call
sub
or
pop
lds
dec
fimull
and
add
inc
jmp
xchg
push
std
outsl
mov
cwtl
in
ret
xchg
in
daa
cmp
jle
cmp
jae
faddl
iret
inc
mov
pop
inc
das
in
or
pushw
jbe
test
push
pop
push
mov
cwtl
mov
xchg
dec
sub
lcall
mov
mov
in
ret
jle
test
adc
shrl
cmc
push
in
cmpsl
or
jno
mov
pop
cld
sbb
es
pop
int
fisttpll
mov
sahf
adc
aad
or
aam
push
xchg
mov
sahf
and
pop
adc
add
es
movb
inc
inc
loopne
outsl
jno
in
into
int3
sub
mov
adc
iret
loope
cltd
int
mov
pop
aad
xchg
dec
sti
inc
cmp
out
aaa
jmp
out
xchg
sub
pop
mov
mov
in
mov
iret
inc
mov
aad
std
mov
jne
fidivl
or
clc
lcall
inc
aas
cwtl
or
mov
repz
sub
enter
mov
sub
jbe
jecxz
dec
jl
xchg
cmp
sbb
je
test
mov
jb
jbe
push
adc
cli
leave
pop
add
pop
cmp
jl
jecxz
flds
dec
pop
mov
mov
xor
in
rol
faddp
fimuls
dec
pop
jns
push
ds
aad
mov
out
xchg
cmp
adc
out
js
into
pop
jne
mov
inc
repnz
in
xchg
nop
push
push
loopne
cmpsl
cmpsb
dec
mov
movsl
sub
mov
jmp
in
sbb
sbb
les
cli
xchg
popf
or
es
imul
das
imul
dec
pop
and
pop
add
mov
mov
and
pop
xor
sub
pop
adc
pop
adc
loope
stos
data16
pop
push
dec
aam
lods
out
scas
dec
rclb
fisubl
jmp
loope
lea
dec
in
pop
scas
and
push
lods
pop
pop
push
pop
rclb
adc
dec
pusha
test
psllq
adc
movsl
mov
mov
loop
test
inc
dec
movsb
test
mov
mov
daa
addr16
arpl
ret
ret
fidivrs
jnp
mov
jge
pop
jno
dec
push
sub
ret
popa
int
aad
mov
adc
mov
gs
add
cmpsb
or
inc
xchg
xor
rclb
adc
push
hlt
add
mov
add
xchg
push
fstl
enter
enter
mov
cltd
lods
jb
mov
pop
je
inc
cmc
jg
and
sbb
in
xchg
in
and
xor
into
fisubl
lea
mov
leave
mov
ret
pop
xchg
xlat
mov
cltd
ret
mov
sub
pop
pop
jno
push
jns
mov
jge
imul
fcompl
push
lcall
scas
leave
sbb
mov
jmp
ret
in
dec
pop
rcr
inc
inc
daa
fsts
add
test
decl
adc
inc
hlt
pop
mov
dec
test
fcoml
ret
js
dec
pop
popa
and
rorb
push
or
sbb
inc
loop
sub
cmc
mov
mulb
std
cmp
arpl
adc
pop
imulb
loope
sub
inc
inc
cmp
adc
sub
add
lahf
jle
mov
inc
push
lahf
fldenv
test
jge
fadd
gs
dec
mov
arpl
in
mov
cs
lock
fnsave
sbb
mov
lock
es
pop
stos
sarb
and
repnz
push
cmp
mov
das
mov
lods
aad
popf
xlat
pop
mov
fisubl
jae
bound
and
jl
out
pop
iretw
adc
pop
xchg
inc
cmp
movsb
jns
sub
mov
mov
add
or
mov
sub
sub
loopne
lods
adc
aaa
jne
popf
and
push
xchg
enter
movsl
and
jae
cltd
mov
cwtl
and
mov
enter
pop
ficomps
push
pop
inc
push
mov
inc
sub
lcall
fs
fsubr
push
lahf
es
jnp
fwait
and
push
xchg
outsl
mov
es
pusha
rcrb
sub
push
adc
jmp
mov
xchg
inc
and
cmp
push
test
and
push
xor
fdivl
in
pop
dec
and
mov
movsl
lods
and
pop
push
out
popa
mov
cmp
mov
cli
clc
jg
add
pop
aas
mov
xchg
outsb
jg
pop
jg
or
pop
test
test
jl
out
int3
and
es
push
jo
loop
mov
nop
inc
das
push
sub
pop
mov
cltd
int3
idivl
or
pop
shlb
scas
lods
test
imull
mov
sbb
pop
scas
into
cmp
mov
or
xor
jb
inc
pop
fwait
sbb
scas
cmp
out
jg
in
loope
pop
jo
ds
les
aam
sahf
ja
mov
sub
jp
xchg
outsb
mov
sub
das
icebp
int3
mov
addr16
mov
jge
ljmp
mov
movsl
mov
lods
xlat
dec
cmp
pop
dec
xchg
and
adc
fisttps
push
adc
test
push
sti
jns
lock
mov
pop
ret
addr16
stos
push
mov
lea
or
aaa
mov
mov
test
inc
rcrl
xchg
cmc
mov
adc
jo
cmp
adc
scas
push
mov
lahf
cmp
inc
and
pop
pop
or
test
pusha
mov
push
aam
out
lcall
flds
xchg
in
push
gs
inc
daa
ss
pushf
mov
xchg
sbb
test
cwtl
lods
mov
out
push
or
out
pop
adcb
pop
jg
insb
out
rcll
movsb
aaa
sub
cmp
andb
mov
push
mov
xor
and
fcoml
xor
cmp
xchg
cli
roll
insb
pop
jecxz
shl
mov
pop
jl
and
cltd
jo
mov
into
mov
mov
lahf
pusha
arpl
sbb
xor
rclb
push
mov
frstor
in
out
jl
xor
ss
push
mov
jne
in
cmp
popf
or
test
in
call
add
cmc
fwait
into
or
jns
pusha
push
pop
sbb
test
iret
lods
clc
orb
aas
adc
cmp
mov
cmp
stos
jl
stc
cmp
aam
pop
sub
cld
push
stos
and
lods
scas
lahf
add
in
jle
or
push
push
mov
inc
ret
roll
call
cmp
or
in
enter
mov
das
pop
sbb
add
jmp
testl
add
push
icebp
pop
xlat
into
dec
setno
pop
adc
ret
insl
repz
dec
scas
jmp
gs
lret
push
lock
cmp
fsts
imul
xor
mov
das
dec
mov
sahf
scas
sub
fiadds
mov
mov
jl
adc
xor
or
out
sbb
inc
sbb
std
cmc
or
movsb
push
sbb
and
mov
shrl
clc
test
mov
push
jmp
clc
dec
sbb
jb
lcall
movl
or
or
cld
cmp
mov
arpl
adc
xchg
rcll
fyl2x
lret
ret
push
ss
xchg
mov
jbe
xchg
sbb
fisubrs
push
push
dec
or
mov
cmp
mov
jp
lods
mov
dec
popf
cmp
repz
mov
mov
loop
lods
or
out
mov
enter
stos
push
sbb
and
out
das
dec
and
movb
adc
mov
lret
jo
dec
inc
loopne
loop
push
push
jb
pop
ret
xchg
mov
pusha
dec
mov
mov
mov
cmc
jnp
sub
xchg
stc
movsl
ja
jb
sbb
test
and
adc
xor
xchg
xor
es
stc
subl
dec
outsb
mov
jb
mov
hlt
pop
mov
ds
enter
jp
gs
arpl
bound
ret
out
mov
xchg
dec
jo
mov
cmp
loope
stos
les
mov
test
add
adc
push
xlat
mov
lods
roll
xor
mov
cmp
pushf
push
or
addr16
and
aam
out
or
movb
mov
push
movb
dec
xor
push
aam
or
out
cmpsl
xchg
cmpl
mov
pop
cld
jle
push
add
jns
push
xchg
cmpsb
xchg
mov
xchg
les
es
fcmovnb
lock
lods
add
cli
dec
dec
push
test
fmuls
jl
xchg
nop
ds
lahf
mov
or
sbb
outsb
and
ret
inc
scas
rcll
aaa
lahf
aas
pop
jo
pushf
push
in
and
sbb
mov
mov
fwait
pop
cmp
es
test
cmp
and
sarl
and
lods
dec
pop
sbb
mov
mov
mov
xchg
jl
mov
or
xchg
add
ds
add
fcomip
fwait
dec
pop
lahf
adc
mov
lahf
dec
cmp
inc
mov
push
jle
push
jge
movsb
mov
push
pop
lret
test
mov
mov
sbb
jns
imul
xor
fs
cmc
pusha
xor
mov
mov
mov
dec
jecxz
movsb
ds
sbb
imul
cmp
sub
mov
fsubrp
or
popa
xchg
jl
aas
leave
negl
lahf
xchg
dec
leave
pop
lret
or
mov
mov
or
add
adc
or
ljmp
inc
xchg
or
cmpsb
jle
cld
test
into
mov
inc
or
out
mov
cli
cmp
insb
jb
mov
xchg
jmp
aad
and
xchg
out
imul
or
sbb
cmp
jecxz
rorb
data16
aam
insl
stc
cmp
fnstcw
imulb
mov
jl
sub
inc
mov
mov
out
aad
ja
scas
push
dec
fdivrs
mov
test
lcall
adc
shlb
insb
dec
out
or
sub
test
fcomps
ds
mov
jno
or
fldcw
inc
lret
movsb
and
out
dec
sahf
add
sahf
orl
sarb
dec
pop
out
add
adc
movsl
fcmovu
mov
fcoml
mov
dec
inc
outsl
sub
or
test
lahf
in
xchg
ret
roll
in
add
add
push
aas
fiaddl
mov
clc
sub
testl
cs
pop
enter
mov
and
jecxz
mov
cmpxchg
mov
jmp
xor
outsb
out
push
scas
ljmp
repnz
sub
cvttps2pi
sbb
sbb
mov
or
xor
dec
sub
and
andl
mov
fldt
insl
sbb
enter
js
pop
mov
fisubrl
sbb
outsl
push
pop
or
mov
cltd
jns
adc
sub
adc
inc
mov
repnz
arpl
cmc
mov
pushf
inc
repz
ret
mov
cld
in
sbb
or
cmp
add
test
cmp
data16
cmp
loopne
xchg
insl
sbb
int3
mov
mov
mov
push
and
pop
lret
and
and
addr16
push
pop
sbb
push
xchg
mov
bnd
popa
mov
xor
in
dec
leave
shll
push
dec
mov
jg
test
dec
in
sbb
or
cs
mov
pop
mov
pop
insb
repnz
xchg
call
inc
lcall
fwait
push
mov
clc
pusha
jle
insl
stc
dec
enter
ret
out
pop
add
pop
xchg
sub
or
aaa
ds
in
in
inc
sbb
aas
iret
and
xchg
mov
mov
test
iret
das
add
sub
adc
mov
js
fisttpl
std
bound
addl
xchg
mov
fcoml
and
je
push
xor
and
hlt
popa
or
lahf
bound
loope
dec
dec
arpl
inc
cwtl
jmp
xorl
frstor
ret
aas
mov
ja
rcl
dec
loop
push
popa
push
dec
repz
loop
inc
scas
insb
cmc
inc
dec
and
lock
pop
and
mov
enter
mov
leave
es
pop
cli
std
or
js
jbe
sub
lcall
inc
dec
pop
xlat
jecxz
dec
sub
mov
gs
mov
dec
pusha
sahf
dec
pushl
loop
jne
sub
adc
cwtl
in
mov
pop
hlt
xor
jae
xor
rol
dec
jg
int
xor
enter
pop
setge
push
js
pop
es
test
jne
insl
push
pop
inc
mov
pushf
in
push
cwtl
dec
cmp
cmp
mov
mov
jb
loop
sub
pop
rcll
lahf
dec
js
aas
add
lea
cmp
test
cs
mov
dec
sahf
jo
loope
hlt
mov
cwtl
aaa
sti
out
jl
nop
test
sahf
les
sti
icebp
out
std
xor
inc
mov
sbb
fiadds
jno,pt
push
adc
inc
inc
in
stos
cmp
neg
adc
popf
add
mov
out
sbb
xchg
repz
ss
icebp
inc
fcomps
sub
push
pop
pop
mov
dec
xor
cmovg
xor
das
cmc
sbb
fmuls
add
fistpl
sahf
push
cmc
inc
xor
push
push
push
arpl
cld
sbb
pop
cmp
xchg
mov
cmpb
cmp
sub
nop
mov
xor
push
add
mov
mov
ss
bound
popa
addr16
cmc
and
jns
stos
inc
cs
shl
push
mov
mov
fdivl
mov
mull
sbb
push
shrl
push
sub
mov
xchg
inc
add
test
cltd
pop
les
adc
push
iret
cmc
shlb
adcb
mov
shrb
pop
jae
jp
lds
lods
fdivs
inc
cli
test
out
adc
jecxz
jno
xor
lret
xchg
xchg
daa
lahf
xor
aaa
ds
adc
jbe
lods
call
mov
mov
sub
dec
cmp
inc
mov
shll
movsl
rclb
scas
shlb
hlt
mov
fimuls
mov
and
cli
pop
ja
add
lock
pop
pop
lods
scas
mov
mov
aaa
scas
in
and
cmp
adc
adc
adc
ret
xlat
and
and
movsl
lods
pop
dec
xchg
sub
xor
je
inc
push
adc
mov
popa
fimull
mov
and
mov
iret
test
xchg
add
icebp
fistpl
xchg
mov
or
adc
add
xchg
add
mov
xor
aam
ret
jl
xadd
clc
pop
cmp
cltd
mov
push
in
mov
cmp
in
dec
icebp
or
pushf
arpl
icebp
or
pusha
cmpsl
sbb
pop
inc
rolb
inc
ret
std
cmp
divb
mov
inc
mov
jmp
dec
in
jp
loop
sahf
nop
nop
outsl
popf
fcmovb
jno
xchg
xor
cwtl
xchg
or
cmpsl
pcmpeqd
stos
loopne
mov
xor
xchg
inc
push
mov
xor
push
in
scas
or
sub
push
sahf
adc
push
add
mov
pop
cmp
pop
adc
fcmovne
xchg
xor
sub
popf
fwait
mov
xor
dec
xchg
std
inc
popa
movsb
lahf
bound
cld
xlat
mov
or
mov
es
jae
pop
rcl
mov
adcl
test
cmp
jle
jmp
shrb
jmp
inc
fidivs
insl
xchg
push
aas
sub
cld
cmp
adc
scas
or
es
sub
sub
mov
mov
mov
test
out
push
jp
je
jmp
jecxz
test
test
pop
inc
pop
sbb
pop
lock
xor
xor
cld
fcompl
sub
andl
mov
jg
xchg
test
mov
dec
push
les
int3
or
pop
sbb
xchg
pushf
repz
inc
out
aas
xchg
sub
negb
lds
xor
test
std
loope
rolb
mov
out
xchg
inc
xchg
cmp
lcall
push
inc
cltd
das
lahf
cmpsb
pop
stos
movsl
pop
mov
add
pop
jne
das
jle
adc
or
add
mov
adc
mov
in
arpl
movsl
mov
push
xchg
xor
xlat
cmpsb
jnp
insb
out
popa
cmp
xchg
jle
jnp
fwait
mov
clc
mov
imul
or
xor
push
add
lods
xchg
inc
inc
lods
mov
or
addr16
or
bound
mov
lds
jno
aaa
jbe
insb
xor
out
cwtl
int3
and
or
jo
and
xor
cmp
imul
pop
dec
push
mov
add
repz
or
sbb
sbb
idiv
cmpb
mov
sub
jb
pop
xchg
mov
sub
mov
or
sbb
bound
mov
xor
das
cli
dec
aas
insb
rorl
fs
test
dec
cmp
loope
inc
push
mov
sbb
sti
mov
rorl
out
jns
inc
pop
sub
ficompl
call
jne
push
cmp
jp
mov
and
imul
adc
cmp
out
add
mov
jge
mov
mov
hlt
test
jae
decl
add
mov
ds
adc
add
repnz
stos
adc
das
inc
mov
or
gs
xorl
mov
scas
mov
lds
mov
or
test
bound
fldenv
fcmovne
out
inc
cmp
mov
hlt
and
sub
outsb
loop
jg
inc
push
dec
es
rorb
out
inc
cmc
int3
mov
fwait
push
pop
aad
mov
jg
mov
imul
mov
es
inc
sub
adc
ja
mov
pusha
jmp
out
sub
lcall
hlt
or
jbe
jo
sbb
cmc
cmp
dec
mov
int3
mov
mov
divb
add
mov
and
sti
pop
cmp
mov
xor
and
sbb
mov
shrl
adc
push
push
mov
stos
cmp
inc
sub
data16
mov
insb
shlb
loop
pusha
dec
fucomi
mov
sbb
pusha
xchg
xor
roll
out
cmp
cld
mov
das
push
pushl
cmpsl
mov
popa
sbb
dec
pop
clc
adc
cwtl
mov
inc
iret
clc
aaa
lret
mul
ljmp
push
std
popa
jp
negb
dec
addr16
ss
fiadds
xchg
outsb
iret
arpl
shrb
xchg
lret
ss
pop
data16
popf
inc
int3
sub
xlat
mov
mov
sbb
iret
rolb
xchg
mov
mov
inc
push
out
push
mov
sub
push
xchg
push
fs
outsb
movsl
test
stos
sbb
and
push
stc
out
imul
xor
out
jnp
stc
daa
dec
xor
loope
imulb
cld
test
shll
int
loope
push
pop
subl
xchg
xorb
ljmp
mov
mov
fisubs
cmc
into
aad
in
lcall
fsubp
and
or
negb
pop
pop
iret
dec
negl
ja
cmp
or
jbe
fildl
cmp
mov
mov
subl
stos
mov
add
add
add
aas
add
add
insb
popl
add
add
add
add
add
add
mov
add
add
xor
pusha
and
add
add
imul
rolb
add
add
add
movsl
add
add
or
in
in
in
in
inc
add
add
ljmp
ja
mov
add
pop
mov
outsl
add
add
push
adc
adc
add
add
add
add
add
add
or
add
add
add
add
add
jne
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
fildll
jne
dec
dec
je
jb
outsl
jo
add
sub
or
cld
shll
sub
dec
leave
add
fbstp
mov
decl
jns
add
push
pop
push
lock
dec
dec
call
mov
lock
clc
lea
pop
dec
mov
sub
aas
sbb
add
add
jmp
jmp
fnop
pop
adc
loopne
mov
add
test
push
lea
jmp
sbbl
je
rol
aam
adc
cld
call
add
adc
incl
je
clc
mov
add
push
fldt
push
incl
inc
test
loopne
add
push
rclb
adc
sbb
add
add
cmp
add
sbb
add
sbb
sbb
sbb
sbb
add
gs
gs
add
je
add
jb
outsb
or
add
gs
add
add
add
xor
je
cltd
inc
gs
gs
add
add
xor
sub
inc
js
add
add
aam
add
add
add
add
movsb
sub
add
add
add
add
add
add
add
add
add
adc
xchg
das
mov
negl
mov
xchg
adc
bound
faddl
cli
iret
mov
mov
clc
mov
mov
fcoms
aas
stos
push
sub
add
jno
push
cli
cmp
inc
fistl
lods
mov
push
out
cltd
shll
xor
stos
xchg
push
jo
xor
movl
mov
mov
lcall
fistpll
aaa
in
fisubl
push
mov
lahf
and
rcr
repz
fsub
imul
fwait
fwait
mov
jmp
or
jg
xchg
aad
stos
sbb
lcall
outsl
ret
int
je
cmp
jge
inc
inc
lea
xchg
or
mov
push
push
mov
mov
push
sbb
mov
leave
repz
jb
mov
xor
xchg
inc
rclb
xchg
flds
push
push
dec
push
pop
pop
cmpsl
xor
stc
icebp
jg
cmp
mov
pop
sti
lahf
fsubs
jmp
pop
pop
stos
push
push
cld
xlat
sub
ja
jl
fistpll
rclb
inc
push
cld
insl
in
das
push
mov
adc
jae
outsb
ret
fisubrl
push
testb
or
add
repz
rcll
imul
dec
ljmp
jmp
jecxz
jge
mov
out
add
inc
out
out
push
out
scas
fwait
dec
sbb
loopne
mov
insb
push
sbb
pop
push
inc
sbb
jnp
iret
xor
addl
jbe
rcl
in
call
inc
sti
scas
sub
shlb
les
inc
cmp
insb
sub
lcall
push
jns
ret
pop
cmp
pop
testb
rcrb
fwait
test
imul
inc
cmc
mov
lods
mulb
mov
das
fadds
jle
cli
add
cs
scas
cmpsb
jmp
leave
ja
insb
sbb
jne
mov
jbe
negl
push
sub
xchg
cltd
test
sbb
mov
rcl
add
cs
jmp
xchg
lret
inc
xor
test
jo
sahf
dec
aaa
and
outsb
cmpsl
pop
fists
aaa
cld
mov
sub
xor
outsb
xor
fcomps
shrb
cmp
add
insl
pop
movsl
into
mov
repnz
sub
shll
in
in
movzbl
jns
jle
sbb
cmc
bound
inc
xor
adc
xchg
push
repnz
cld
mov
jne
jno
sub
pushf
enter
shll
jbe
cmp
cltd
add
jg
fistpll
mov
push
out
movsb
test
loop
ja
loopne
push
fst
vmovlps
je
mov
dec
in
xor
dec
or
aad
insb
shl
cmc
xor
stos
lds
test
test
mov
iret
divl
mov
rcl
addr16
adc
es
sub
pop
mov
test
cmp
dec
xchg
fstps
test
mov
adc
jl
data16
push
cmp
adc
dec
js
xchg
sub
lsl
push
sahf
cmp
or
sbb
loopne
int
std
jmp
das
jb,pt
dec
mov
and
fidivl
out
call
jmp
or
push
fisubrl
iret
and
mov
mov
jns
adc
fwait
mov
aam
sti
jecxz
fld
xlat
loope
inc
push
sub
ud2
clc
dec
pusha
mov
xorl
fs
dec
mov
mov
mov
sahf
jmp
mov
inc
sbb
cmp
cmpl
add
mov
stos
pop
cmp
pop
cmp
inc
sbb
inc
xchg
aam
mov
cwtl
mov
jbe
dec
mov
push
dec
jl
sub
ljmp
sbb
jge
mov
mov
mov
test
arpl
loop
movsl
scas
mov
mov
mov
jmp
jge
cmc
jge
imul
rcr
pop
sbb
aaa
lock
in
cwtl
repnz
xor
mov
hlt
mov
adc
adc
test
cmp
mov
sub
shll
in
in
in
inc
imul
and
in
inc
jl
push
lret
push
mov
ss
mov
sbb
ljmp
mov
mov
sbb
imul
add
fdivr
xchg
loopne
xchg
es
scas
cmpb
xor
sbb
sub
ljmp
scas
hlt
test
push
popa
test
mov
jl
xchg
xchg
les
xchg
mov
fstl
sbb
testb
jmp
jns
lea
push
mov
xlat
movsl
popa
mov
add
and
push
mov
or
movsl
aaa
pusha
ror
jle
dec
pop
adc
cmp
or
fisttpl
xor
out
mov
mov
fdivrs
movsb
mov
pop
xor
in
sub
cmp
repz
sbb
xchg
xchg
in
inc
lret
push
fprem1
in
cld
aaa
stos
mov
xor
call
leave
int
clc
jno
xor
cmp
dec
dec
adc
sub
andl
call
shrb
cmpb
and
call
inc
jo
shlb
xchg
dec
dec
lds
fdivs
xchg
lahf
and
stc
jecxz
out
or
rcll
es
xor
enter
cld
jae
fs
inc
push
dec
sbb
sahf
mov
popa
movl
cmp
mov
iret
jmp
adc
pop
sbbb
lods
jne
pop
and
jns
fsubp
call
addb
xchg
outsb
popa
aam
repz
jle
push
fildll
aaa
xor
jle
clc
fwait
cwtl
xchg
filds
mov
xor
shr
sahf
shrl
xor
mov
je
test
fsubrs
nop
mov
push
loopne
dec
jnp
cmp
mov
std
mov
mov
sub
sub
cmpb
dec
mov
mov
ret
dec
arpl
fsubr
daa
scas
mov
in
inc
or
dec
xor
scas
jge
fsubl
in
and
lcall
out
scas
jno
mov
mov
pop
xor
mov
nop
pop
fs
lret
mov
jbe
jns
xchg
arpl
lea
dec
clc
pop
mov
aad
inc
outsb
in
addr16
add
inc
outsb
add
cs
xchg
pop
and
and
adc
outsl
mov
in
out
push
lods
xor
dec
mov
cmpsb
push
es
in
lods
xchg
jle,pt
push
scas
mov
mov
lds
mov
inc
xorb
pushf
pop
lea
jb
test
inc
sub
jmp
movsl
inc
stc
mov
mov
and
scas
jb
clc
inc
xor
lret
data16
orb
out
mov
pop
idivb
repz
in
pextrw
pop
jo
mov
lret
fimull
adcl
test
sbb
pop
das
stc
jge
mov
and
ja
ds
out
inc
lret
inc
or
pop
ret
pop
cmp
lods
les
pop
std
push
fidivrs
dec
sbb
sub
fmull
xchg
xlat
adc
mov
fisttpll
mov
sub
sub
adc
ds
mov
mov
jne
push
daa
nop
push
cmp
out
mov
fldl2t
dec
jnp
repz
ror
inc
int
lcall
inc
inc
mov
rcrb
jmp
sbb
xchg
jae
and
sub
in
sub
imul
mov
mov
mov
scas
out
sub
lahf
add
cltd
loop
test
pop
out
shll
cmp
insb
jbe
cmpsb
push
fistl
lods
add
mov
addr16
lahf
mov
js
dec
outsl
pushl
xchg
insb
xor
mov
cmovno
xlat
loope
data16
test
push
mov
loopne
lret
inc
mov
loop
adc
hlt
dec
ljmp
inc
push
sbb
repnz
jmp
lret
lea
jne
xchg
cmp
inc
mov
stos
stc
icebp
push
jo
js
jp
loope
aam
jbe
xor
lods
rcrb
pop
dec
out
pop
push
inc
mov
xchg
jb,pn
scas
mov
pop
sti
mov
inc
loop
xor
xor
pop
lea
jecxz
andl
out
lds
jns,pt
scas
sub
dec
push
and
mov
push
and
cmc
xchg
fisttpl
loopne
xor
loope
shrb
or
shld
xchg
xor
enter
mov
inc
xor
fstp
sti
arpl
sbb
fdivs
shlb
fs
notl
in
ljmp
push
hlt
jbe
lret
adc
les
lret
pop
scas
sbb
ljmp
lahf
mov
xor
inc
or
enter
add
fs
xchg
adc
in
nop
notl
sub
std
and
fcoms
fidivs
push
pop
les
sti
add
movsl
lods
pop
data16
vmaxpd
outsb
inc
fwait
mov
pusha
inc
pop
pop
pusha
rorb
lahf
int3
xchg
js
xchg
lret
sub
adc
dec
ja
push
stos
fs
push
add
and
scas
xchg
push
pop
lret
es
sbb
add
nop
addr16
mov
sub
ljmp
fisubrl
cmp
mov
push
ds
cmc
push
adc
push
lahf
popa
jo
or
faddl
insb
jle
cmp
xor
mov
pop
dec
repz
out
mov
int3
idivb
leave
pop
out
jae
lods
push
mov
xlat
lret
xchg
in
in
pop
xchg
jns
arpl
mov
outsb
dec
pop
mov
adc
mov
mov
dec
int3
mov
xchg
iret
insb
pushf
cmc
movsl
test
in
lods
xor
cmp
jmp
je
pop
jle
js
lods
std
int
dec
out
jge
mov
aas
std
pop
or
fmul
push
adc
push
or
pop
insb
scas
dec
stos
sub
push
inc
jmp
insb
xchg
fstl
mov
dec
cmp
pop
inc
int3
and
lcall
stos
popf
lock
dec
aas
mov
inc
jecxz
ret
pop
xchg
sub
scas
shl
mov
div
sub
cltd
push
dec
punpcklbw
jecxz
aas
inc
sub
repz
mov
lahf
add
and
inc
subb
daa
stc
call
mov
scas
mov
mov
jmp
adc
je
dec
jge
shlb
pop
cmpl
push
inc
je
adc
adc
inc
xor
enter
cld
push
or
je
dec
je
inc
or
shll
shlb
xchg
xchg
je
jns
mov
xor
add
pop
push
shrb
add
mov
and
mov
mov
push
pop
jg
sub
decb
xor
mov
push
mov
je
test
xor
fisttpll
jecxz
inc
aam
dec
push
lahf
in
jle
mov
dec
call
jbe
fldcw
fmuls
mov
mov
mov
js
sbb
std
sub
pusha
push
repz
xchg
mov
ds
pop
pop
push
test
jne
sub
fildl
inc
cwtl
inc
popf
aaa
xlat
ret
insl
div
xchg
aaa
xchg
in
aad
hlt
call
mov
cli
inc
or
aaa
jae
xchg
out
fdivs
mov
push
dec
jnp
jae
xor
inc
pop
or
mov
cmp
gs
lcall
stos
pop
or
fs
aad
mov
lods
push
dec
and
jl
movsb
out
out
or
xlat
ret
cltd
dec
out
cmp
stos
dec
out
mov
int3
push
or
inc
icebp
add
or
das
pop
dec
cmp
or
test
shll
fisttpll
add
mov
cmpsb
mov
leave
xor
cmp
sbb
rcrl
push
scas
and
daa
xchg
ljmp
fstpl
push
push
xchg
fs
add
jbe
scas
lods
inc
inc
mov
cmp
mov
push
push
pop
or
pop
push
std
dec
dec
push
or
mov
loope
or
in
clc
nop
out
test
inc
call
and
in
pop
in
dec
sbb
aaa
test
sahf
lods
xchg
push
push
cwtl
xchg
es
pop
lret
inc
fcoml
xchg
rcl
std
mov
pop
push
cmpsl
test
fisubl
push
flds
mov
scas
pop
test
adc
add
mov
test
test
cmp
add
xchg
into
pop
sub
in
mov
sbb
push
lods
pop
and
and
mov
es
mov
push
cmc
faddl
enter
out
mov
mov
and
scas
add
jmp
test
inc
inc
outsl
sub
test
and
xchg
mov
roll
pop
pop
iret
jge
aaa
cld
cmc
push
sbb
pop
outsl
sbb
fcomi
call
add
or
sub
jle
in
sub
dec
addb
adc
std
icebp
mov
push
int3
mov
pop
stos
rcl
mov
and
outsb
jg
inc
cmp
outsl
cmp
add
fadd
into
ret
mov
push
andl
push
inc
sub
inc
jmp
negb
and
mov
push
and
outsb
loope
adc
xor
jl
adc
add
das
inc
test
sbb
pop
jb
ljmp
adc
or
stos
cltd
imul
xchg
xchg
mov
loop
and
out
or
stos
jmp
nop
mov
sub
sbb
ljmp
arpl
mov
pop
inc
out
movsb
inc
test
sub
jae
aad
jl
test
sbb
and
adc
mov
jle
mov
pop
cmp
sub
adc
dec
enter
test
sahf
lea
fwait
add
dec
fnsave
mov
cmp
cmp
and
rcrl
mov
adc
in
mov
mov
insl
sub
ldmxcsr
cmp
loopne
add
fsubl
push
lcall
cs
mov
push
test
and
sbb
lea
ror
cs
or
cmp
dec
and
xor
loope
sbb
or
adc
movsl
shlb
or
or
lds
loopne
test
dec
inc
leave
lret
or
sbb
or
test
dec
cmc
sbb
xchg
je
mov
sub
or
add
adc
and
ds
xchg
or
cmp
mov
push
enter
call
jp
paddsb
fsubl
insl
pushf
jb
jmp
cmp
scas
inc
idivb
test
scas
or
pop
popf
loop
mov
imul
mov
add
movsb
cmpb
orl
pop
jns
imul
arpl
push
dec
jbe
push
mov
push
inc
shrl
cmp
loop
mov
ljmp
mov
rcll
out
je
mov
inc
mov
dec
mov
cmp
daa
pop
cli
or
xchg
cmpl
shld
test
outsl
or
nop
xchg
daa
cmp
pop
lcall
mov
sub
out
sahf
pop
xchg
insl
sbb
out
dec
stc
cmp
mov
aaa
jnp
add
dec
sub
stos
ret
mov
popf
mov
mov
xchg
aam
out
sbb
mov
jg
cmpsb
outsb
xor
push
adc
icebp
or
xchg
add
jnp
or
fildl
push
mov
ret
add
out
shlb
mov
test
ds
xorl
orb
dec
popa
sbb
jmp
loop
int
popf
dec
mov
in
fbld
mov
fnstcw
sbb
std
out
pop
and
enter
inc
packssdw
jne
loope
sub
inc
test
mov
outsb
ret
pop
cmc
mov
fcomp
jge
cwtl
test
xor
clc
jo
shll
mov
int
mov
pop
push
mov
xor
jg
insl
pop
add
loop
fisttpll
leave
mov
adc
dec
pushf
jmp
mov
dec
mov
cmp
std
inc
cmp
inc
dec
cmc
leave
cmp
imul
test
add
aad
insb
xor
lods
or
and
out
cmc
outsl
dec
jp
cmp
imul
add
lea
mov
aaa
dec
mov
mov
shl
jnp
adc
cmp
insl
xor
ret
stc
mov
adc
sub
sti
scas
adc
cmp
adc
pop
sbb
ret
add
cs
incl
imul
mov
mov
add
fisubl
shlb
inc
stos
out
push
sbb
push
js
mov
arpl
outsl
popa
jle
pusha
cs
jl
pop
js
cld
push
out
lret
repz
fld
mov
jne
mov
std
sub
bound
lods
outsb
pop
mov
dec
mov
lods
int3
clc
pop
adc
xlat
iret
js
mov
test
into
mov
mov
inc
mov
pop
lahf
test
mov
sub
sti
mov
xchg
xchg
jmp
inc
les
pusha
orl
push
je
xor
mov
or
add
rorb
jno
arpl
movsb
shrl
dec
mov
mov
xchg
mov
imul
daa
cmp
in
push
scas
sarl
push
icebp
jp
test
mov
push
adc
sub
daa
sbb
jg
movsb
jecxz
cmp
add
jns
test
sbb
add
mov
mov
push
insl
mov
adc
jle
es
fisubrs
sbb
cmp
pop
pop
sub
nop
jbe
in
int3
pop
jno
mov
fmull
xchg
test
ficoms
faddl
test
cmpsl
out
out
in
clc
jge
lods
mov
imul
aad
push
jae
sub
sub
cmpsb
dec
pusha
mov
sbb
dec
jge
cmp
int3
cmpsl
mov
adc
ss
in
and
and
sub
jno
mov
dec
in
jno
dec
shl
mov
insl
inc
mov
pop
ljmp
xchg
xor
int
mov
cmp
jae
sbb
lcall
loop
adc
push
lahf
sbb
test
lods
jl
xchg
mov
or
fs
out
movsb
mov
scas
mov
sbb
cwtl
inc
pop
dec
je
mov
dec
fcmovbe
mov
gs
or
scas
or
lret
or
mov
mov
add
mov
lahf
aam
fldenv
sbb
push
xlat
sti
sti
test
js
or
cmc
psrlw
cmpsl
ss
sub
push
popf
cmp
nop
mov
js
pop
xor
mov
cmpsb
movsb
dec
shrb
xor
mov
push
pop
in
imulb
mov
lds
jns
lahf
xlat
stos
xchg
lahf
fs
lahf
js
out
mov
dec
popf
sbb
jo
std
outsb
jo
sub
cli
insl
and
cmp
sbb
lods
mov
fiaddl
cmp
xchg
lret
icebp
jg
add
push
ds
cmp
or
fisttps
sbb
and
or
ret
mov
and
sub
mov
fldt
roll
cmp
mov
fcmovnu
shll
jge
jl
int
xchg
sbb
scas
mov
jge
clc
adc
js
dec
ss
xchg
and
push
sub
pop
scas
pop
or
fsubs
mov
fstpl
xchg
fld
por
movups
aam
pop
in
popa
jb
add
int3
push
outsl
jae
fsubr
inc
push
lods
xchg
lods
sbbb
mov
in
shrl
cld
xor
fsubrs
push
jbe
enter
aaa
jae
mov
xor
mov
outsl
lret
pop
or
call
push
fsubrl
int3
mov
mov
andl
call
xchg
xor
cmp
enter
sub
sbb
sbb
daa
loope
fistpl
xor
xlat
mov
mov
loop
pop
into
xor
fwait
or
call
dec
in
adc
pop
nop
sti
imul
mov
add
add
arpl
ljmp
repnz
roll
cmpsl
sti
scas
pop
and
shlb
mov
adc
dec
adc
mov
jecxz
cli
lods
add
add
pop
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
hlt
add
add
push
stos
add
ja
mov
jg
add
add
dec
xor
je
insl
add
add
add
add
add
add
cltd
or
jge
push
jmp
add
add
add
add
xlat
add
add
add
sub
clc
add
add
and
popa
popa
and
ja
jae
inc
jae
dec
imul
add
xor
add
leave
ss
in
inc
adc
xor
push
push
mov
pop
mov
sub
test
test
call
dec
leave
orl
addb
or
sbb
cmp
decl
call
mov
and
sub
add
add
cwtl
call
adc
adc
je
push
lcall
rorb
push
and
call
push
incl
push
add
push
add
test
cwtl
inc
lea
clc
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
or
add
add
add
push
add
add
add
inc
inc
add
outsb
gs
adc
push
popa
nop
inc
add
popa
je
inc
outsb
gs
inc
dec
or
gs
add
popa
dec
insb
imul
gs
jne
inc
outsl
jb
xor
jb
cmp
add
add
mov
add
add
add
fldl
add
les
in
pop
ret
and
or
nop
add
pusha
mov
mov
mov
mov
jbe
sub
lds
cltd
sub
or
jb
cmpb
dec
adc
out
fistl
test
add
stos
and
addr16
mov
inc
testl
inc
add
mov
or
inc
push
aad
icebp
sub
jmp
mov
int3
pop
sahf
out
sub
fistpll
repnz
aaa
cmpb
aad
mov
pop
push
mov
mov
lret
cmp
insb
cmc
xlat
pop
orb
pop
pusha
mov
test
out
daa
xor
pop
mov
xor
loopne
sbb
movsb
in
and
pop
jecxz
bnd
sub
je
mov
dec
mov
lock
or
push
outsb
cmp
clc
xchg
and
push
test
daa
jno
leave
test
xor
cmc
jmp
mov
jb
sub
dec
cmp
mov
cmp
fdivr
fcmovb
mov
cli
pop
call
mov
cmpsl
in
mov
xor
mov
cwtl
mov
insb
xor
mov
jge
repnz
mov
es
push
dec
cli
xchg
fdivr
pushf
jg
jnp
rcr
out
repnz
adc
xor
sub
stos
jae
mov
imul
add
push
mov
or
fwait
lret
fnstenv
repz
movsl
repnz
outsl
mov
scas
fs
mov
cld
rorb
dec
xor
xchg
sbb
adc
xchg
pusha
out
ret
mov
aaa
negl
lods
xchg
mov
push
cmp
xor
inc
mov
cli
rcll
out
push
jnp
movsl
lcall
mov
ljmp
push
jp
fstpt
pop
js
test
push
cli
lret
or
push
orl
dec
sub
cs
scas
loopne
insl
fs
into
lods
xor
outsl
xor
pushf
jle
push
and
je
mov
jns
cmc
inc
or
in
out
xor
std
dec
ret
mov
xchg
sub
xor
call
push
cmovae
pushf
mov
or
and
hlt
dec
in
jo
jge
test
dec
out
scas
or
cwtl
add
shll
pop
or
adc
add
push
add
cmp
loop
adc
cli
cmc
fbstp
lock
stos
dec
shlb
test
push
jae
and
std
pop
pop
xchg
js
fisttpll
repz
nop
stos
dec
xor
outsb
jp
inc
iret
adc
lds
jno
lcall
mov
lods
cmpsb
out
adc
xchg
fs
inc
adc
fwait
cmp
add
aam
push
mov
jbe
lods
dec
dec
fcmovne
out
ljmp
pop
mov
cmp
data16
popa
mov
faddl
out
sbb
popa
fnsave
fdivrl
push
sahf
dec
pop
pushf
push
xchg
sbb
push
stos
dec
cmpsb
cmp
aad
push
xlat
insl
jp
ljmp
dec
dec
cmpsl
out
jae,pt
mov
xchg
das
gs
and
inc
push
adc
stos
add
sarl
je
mov
fbld
jno
jb
cmpsb
leave
push
add
test
cld
cld
shrb
lods
sub
xor
xor
inc
enter
shlb
push
jmp
aam
and
loopne
scas
stos
in
scas
sbb
jae
mov
sbb
roll
aad
mov
dec
lret
jbe
push
xor
imul
adc
mov
jae
push
mov
adc
jg
shlb
push
xchg
dec
mov
push
mov
fidivrs
movsb
fbstp
test
test
cltd
imul
ret
fldl
daa
imul
add
insl
rcll
jg
outsb
out
jecxz
push
jae
mov
test
shrl
add
enter
sbb
in
sti
pusha
jae
popf
mov
clc
inc
aas
xchg
frstor
jmp
sti
pop
xchg
push
sarl
xlat
dec
vandnps
xchg
sbb
insl
jo
aam
ds
ds
rcr
out
pop
and
sub
ret
mov
lcall
or
jle
sbb
xor
jnp
lods
loop
jmp
push
loopne
adcb
nop
mov
xchg
lret
cwtl
jns
and
cmp
cmpsl
dec
cs
enter
outsb
pop
and
pop
mov
dec
mov
dec
cmp
sti
xchg
jge
bound
test
rdpmc
cwtl
inc
xchg
lcall
ret
cwtl
je
ss
clc
cwtl
or
je
jae
shrl
js
ficompl
fmuls
test
add
sub
leave
jnp
dec
insl
pop
ljmp
lea
and
xchg
jmp
pop
and
mov
in
fs
inc
movsb
mov
xorb
fisttpl
mov
jbe
hlt
out
xor
cmp
pusha
push
pop
mov
ja
adc
daa
testb
mov
and
push
test
sbb
rcr
add
inc
pop
sub
lods
inc
out
ror
out
adc
push
mov
or
in
scas
insb
fisubrs
xchg
fdivrs
adc
call
jmp
cmp
movsl
jnp
loope
mov
rcrb
out
cs
mov
dec
cmc
lods
or
mov
sbb
test
movsb
jp
mov
and
iret
in
ds
xor
xchg
or
inc
jg
xchg
push
xchg
add
in
mov
enter
mov
lahf
fmul
arpl
jl
cld
push
jmp
jbe
out
addr16
pop
jmp
lret
mov
repz
xchg
jp
es
xchg
push
arpl
push
adc
inc
leave
inc
ljmp
xor
in
or
pusha
sub
inc
fiaddl
sbb
into
pop
out
shrb
pop
dec
mov
fs
push
dec
lods
mov
movsb
testb
cmp
jae
lahf
xchg
loope
add
push
neg
dec
mov
inc
in
pop
fwait
imul
push
mov
xor
push
mov
add
xchg
or
dec
mov
nop
pop
xchg
sbbb
shl
insb
imul
xchg
or
lock
mov
mov
ja
mov
lcall
mov
fs
in
pop
call
in
cmp
fs
dec
enter
add
jl
sbb
mov
jno
and
sahf
out
jge
mov
inc
jno
pop
add
adc
xor
cmp
or
in
stos
adcb
stc
mov
ret
es
cmp
add
frstor
and
andl
or
xchg
sbb
nop
mov
xor
jae
jg
jb
pop
cmp
es
xchg
dec
dec
jb
adc
fcomps
mov
into
cmp
nop
and
into
repnz
or
jne
or
dec
cmp
lods
fnstenv
or
sub
shl
fs
insb
jo
out
lods
mov
mov
aaa
lods
ja
loope
mov
cs
mov
dec
xor
in
mov
aas
mov
adc
cmp
push
inc
push
jne
in
lret
popa
add
jp
mov
icebp
or
push
pop
sub
repz
dec
aas
add
xor
cltd
xor
pop
std
sbb
mov
mov
lods
mov
push
xchg
stc
mov
jp
cltd
sahf
into
mov
pop
je
cmpl
fimull
push
mov
mov
sbb
scas
cmp
fstps
mov
inc
subl
or
nop
mov
push
in
dec
add
dec
mov
cld
idivb
jl
pop
cmp
insb
into
jbe
pop
clc
xlat
mov
bound
mov
into
cmp
sub
inc
push
mov
jp
or
in
and
jg
add
add
cmovne
xchg
mov
sti
sub
or
jb
inc
aas
lahf
cli
aad
dec
ja
xchg
sub
mov
cmp
aam
jle
xor
int3
ss
sarl
cmc
decl
ss
mov
jmp
rcl
out
mov
mov
mov
and
shlb
js
stc
xlat
push
lea
sbb
mov
or
xor
jl
jecxz
inc
test
add
add
std
js
pop
jge
in
xchg
andl
pop
xchg
push
cmp
mov
jge
push
cmp
or
in
or
out
cmp
fwait
je
std
mov
dec
test
or
call
adc
add
loop
sub
mov
mov
outsb
dec
cmp
jne
cmpsl
out
sbb
sub
inc
mov
pop
inc
xlat
inc
cmp
subb
adc
inc
cmp
inc
sub
popa
out
test
sub
rol
out
stos
xor
cmc
jo
sarb
sahf
std
leave
stc
dec
adc
ss
out
xor
test
je
loope
cmpsl
inc
loope
aas
int
rcrl
aas
outsl
cld
jge
dec
mov
xor
push
pop
jp,pn
jge
sbb
adc
and
mov
dec
fs
xlat
nop
fistl
xchg
jmp
fsubrl
and
xchg
sub
pop
neg
mov
mov
orb
push
fmuls
xor
imul
std
das
jecxz
mov
ret
aad
hlt
aam
dec
pop
aam
lods
push
mov
stos
pop
mov
and
shlb
fildll
int3
adcb
shlb
rcr
orl
xor
sub
cld
push
mov
arpl
lret
pop
or
imul
movsl
fbstp
jmp
js
cmpsb
dec
inc
mov
repz
inc
sarl
xor
in
mov
cmp
cli
sbb
mov
cmp
xchg
pop
mov
pop
loop
adc
sbbl
movsl
sarb
cld
fsubr
loopne
ljmp
jmp
sbb
in
jbe
push
rcl
lret
je
pusha
add
loope
das
gs
push
xchg
mov
sbb
ljmp
icebp
andb
mov
les
cmpsl
adc
aad
lock
ret
insb
leave
ja
fnstsw
cmp
sub
scas
push
mov
loope
scas
jecxz
dec
pop
imulb
xor
movsl
inc
xchg
aaa
les
jns
insb
mov
and
out
mov
sbb
pop
push
add
ds
movsb
inc
inc
mov
sarl
sbb
jp
loopne
or
and
push
sti
xor
addr16
dec
int
in
in
sbb
sbb
push
fnstenv
pushf
mov
xchg
sbb
stos
into
mov
ja
daa
adc
and
cmp
xor
sub
inc
cs
jmp
mov
push
inc
int
jb
in
mov
insb
adc
das
push
sub
cmp
mov
mov
int
mov
mov
arpl
jno
repz
sbb
testb
sub
push
fbld
sbb
cltd
dec
jg
into
jno
scas
sbb
mov
or
lahf
adc
jge
push
push
dec
and
pop
shll
jmp
jmp
imul
inc
push
pop
xchg
in
fldl
iret
pushf
xchg
mov
add
and
adc
jg
inc
in
sbb
cmp
out
mov
out
jecxz
sub
mov
sub
movsb
int
xchg
std
sbb
jo
push
jno
or
lock
cmp
mov
popf
inc
cltd
xchg
repz
fsubrs
movsb
adc
out
addr16
imul
ret
popl
out
cmp
cmp
inc
test
xchg
pushf
call
enter
pop
mov
jle
shll
or
mov
xor
rcrb
jmp
repz
int3
pop
mov
jo
outsb
jo
sar
mov
leave
sbb
or
sahf
adc
lds
xor
jns
push
addb
and
sbb
pop
fwait
push
imul
pop
rcr
fildll
addl
dec
pop
pop
sub
loop
in
pop
jb
push
xor
fwait
lock
and
mov
or
out
and
pop
push
lods
mov
je
fcomip
cmp
cmp
shll
push
cmp
iret
mov
cmp
dec
jge
fcomi
loop
inc
shrb
xchg
sti
push
sub
cmc
mov
xor
in
dec
leave
sbb
mov
into
cmp
jns
shrb
xchg
ret
sbb
ret
jmp
cmp
jne
out
add
adc
shll
cmpsl
and
add
cli
inc
adc
jp
mov
cld
mov
dec
aam
fidivrs
insl
enter
push
mov
jp
arpl
outsl
int
fwait
add
jno
pop
inc
dec
push
mov
shll
cmp
inc
les
ficomps
fdivs
ret
jle
inc
movsb
stos
ljmp
adc
cwtl
into
in
inc
dec
addr16
mov
inc
aaa
jl
xor
aas
mov
mov
jmp
bound
mov
mov
xchg
mov
inc
fildl
mov
fadds
cwtl
sub
or
dec
cmp
mov
and
iret
sub
imul
jl
xor
sahf
pushl
ljmp
sbb
movhps
pusha
rclb
loopne
mov
mov
aad
insl
dec
sbb
sbb
lea
xchg
mov
lods
mov
push
add
loope
leave
ljmp
jecxz
pop
insb
cmpsb
jmp
fcmove
scas
rcr
cmp
dec
push
je
repz
clc
int
sbb
inc
sbb
mov
xor
xchg
pusha
adcb
or
push
lret
scas
xchg
insb
andb
movsb
push
pop
out
pop
ficoml
dec
pop
jbe
pop
sub
push
les
enter
xchg
test
xor
mov
sub
pop
mov
shl
lahf
sbb
adc
sub
push
jmp
rcll
repnz
dec
cltd
mov
enter
pop
xor
jbe
popf
jb
jl
inc
dec
out
dec
xchg
adc
push
xchg
xchg
sahf
test
std
adcb
mov
lahf
mov
xchg
adc
daa
and
jno
imul
dec
cs
dec
repz
mov
and
int3
in
dec
mov
adc
pop
or
lds
mov
loopne
pop
sbb
dec
mov
push
push
inc
or
push
fldl
pop
call
mov
mov
mov
jecxz
jmp
loop
mov
jg
cmp
fwait
push
lods
repz
inc
pmulhuw
jb
inc
shll
cmp
push
cltd
dec
or
cmp
sub
imul
mov
push
or
lock
roll
test
jne
cmp
mov
sub
adc
loopne
push
mov
xchg
loopne
pop
loopne
cmc
inc
cli
sub
movhps
push
fldenv
cmp
mov
fldt
fs
bound
cmpb
xchg
lods
add
dec
repnz
sarl
dec
dec
push
adc
cmp
xchg
fmull
and
insb
sbb
xchg
xchg
mov
imul
push
negb
fstl
shrb
iret
adc
or
sub
and
subb
loop
push
push
push
push
cvtps2pi
ret
push
out
xchg
jno
aam
xor
enter
xor
cmpsb
fisubs
std
pop
ret
mov
jns
cmp
imulb
icebp
mov
pop
out
aam
jae,pt
add
repz
sub
adc
push
or
nop
es
pop
mov
xlat
push
das
mov
lds
sbb
lods
popf
add
jge
jle
or
out
sbbl
push
sbb
loope
xchg
or
xor
in
pop
lcall
mov
push
push
mov
cwtl
ret
sbbl
xchg
shrb
xor
dec
ret
push
push
loopne
sbb
or
ret
or
dec
xchg
cmpsl
dec
xor
sbb
inc
sbbb
push
push
das
jp
nop
adc
pop
push
xchg
gs
repz
shlb
rorl
das
leave
mov
in
out
xchg
sub
lock
push
loop
cld
aaa
aad
outsb
inc
lret
dec
les
pop
push
inc
adc
rcl
and
imul
stc
adc
ss
mov
dec
jmp
andl
in
add
add
mov
xor
ja
es
cld
cmp
std
sbb
hlt
pop
cmp
fsubrs
lods
pushf
mov
dec
push
xchg
jl
xor
stos
inc
js
jmp
jnp
xor
stos
aad
in
pop
mov
mov
mov
out
mov
push
add
xchg
imul
gs
lea
dec
push
loopne
jmp
in
loope
cmp
cmp
jecxz
pop
jnp
push
negb
or
jge
ljmp
hlt
sub
cs
dec
icebp
aaa
jae
jnp
into
in
or
adc
pushl
mov
pop
sbb
and
loope
mov
cmpsl
adc
adc
fstpl
aam
mov
ja
ret
lcall
ljmp
add
divb
jbe
jns
cwtl
das
test
jge
jmp
mov
aad
sbb
mov
jmp
inc
dec
in
bound
jbe
movsl
mov
mov
int
pop
pop
lea
dec
jno
pop
xchg
jp
mulb
push
lods
loope
xor
mov
jae
fwait
or
std
js
sahf
xorl
sti
notl
and
jne
in
dec
ds
out
push
test
lds
push
cltd
leave
fadds
sub
daa
jecxz
imul
pop
add
sti
clc
sub
fisubs
sti
int
xor
in
dec
loope
jb
faddl
or
dec
leave
adc
xor
and
mov
mov
pop
xchg
stos
adc
ds
and
mov
mov
xor
sbb
int3
dec
jns
stc
incl
stc
in
push
ret
jmp
adc
mov
or
mov
ja
stc
push
pop
inc
jmp
pop
pop
fstp
ja
ret
xor
repz
mulb
mov
jno
int3
cmp
mov
jl
mov
in
loopne
xchg
jb
sbb
xchg
repz
mov
pop
repnz
int3
add
cld
jmp
push
xlat
adc
popa
or
sahf
mov
test
or
pop
push
pushl
inc
pop
push
leave
or
pop
lock
cltd
repz
sti
pop
loopne
fldt
mov
idiv
add
sub
jno
mov
mov
sbb
dec
push
add
test
jbe
mov
fs
sub
cmpsl
sbb
or
jg
loopne
stc
push
inc
pop
mov
xchg
cs
add
inc
lds
pop
popa
pop
inc
jb
cmpb
test
outsl
jp
scas
xor
and
sbb
and
pop
in
ljmp
dec
into
stos
fstp
push
sbb
add
scas
ja
inc
mov
pushf
dec
bnd
jns
jne
add
mov
and
rcrl
lcall
pop
xor
mull
xor
xchg
or
adc
out
cmp
pop
add
sub
out
dec
pushf
adc
arpl
jge
mov
xor
ja
std
stc
popf
hlt
sbb
insb
cltd
bound
mov
add
mov
divl
jne
adc
jne
push
sub
xor
fs
inc
inc
push
js
cwtl
push
inc
out
xchg
rcrl
sub
mov
xor
sar
pop
mov
decl
mov
adc
xor
or
mov
loopne
bound
movb
add
fcoms
aaa
shrb
mov
fbld
in
sti
ficompl
shrl
pop
and
xchg
mov
jnp
mov
mov
movsl
mov
daa
les
push
xchg
jne
ret
fsts
movsb
mov
idivb
xor
jecxz
or
cmp
cmp
push
mov
push
popa
movaps
movsb
cltd
cs
jo
movsb
cmc
jmp
stos
xchg
push
aad
test
clc
and
sub
inc
inc
add
fs
sub
inc
push
cmpsb
mov
sub
shll
pop
inc
sub
dec
insl
icebp
shrl
and
mov
cmp
call
fsubrp
lea
mov
xchg
scas
xor
pop
push
in
lds
jbe
fstps
or
xchg
push
xchg
and
mov
in
frstor
aas
repnz
mov
rolb
pop
clc
or
dec
in
dec
jmp
fs
add
jnp,pt
gs
in
test
xchg
sub
test
xchg
aam
out
imul
mov
cld
push
ja
mov
cltd
pop
push
sub
push
and
cmp
out
inc
addb
jo
add
pop
add
sub
add
add
mov
add
pop
add
or
add
add
cltd
add
add
adc
add
add
add
add
jl
add
add
or
add
add
sbb
add
xor
adc
add
add
add
add
add
stos
stos
leave
add
mov
incl
incl
add
in
add
gs
add
add
add
add
add
add
xchg
mov
mov
add
je
add
and
add
outsl
add
add
xchg
add
add
add
filds
arpl
jae,pn
push
arpl
je
cmp
add
outsb
jae
jb
inc
aaa
add
xchg
dec
fidivrl
mov
adc
mov
lea
inc
testb
cs
clc
add
adc
add
clc
add
rcrb
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
movsb
mov
adc
mov
lea
add
adc
mov
clc
inc
roll
add
xor
incl
cmp
add
add
push
lock
push
add
add
add
add
gs
sub
clc
add
add
push
imul
stc
clc
dec
outsl
imul
arpl
outsl
insb
push
add
inc
push
popa
gs
mov
add
add
gs
addr16
push
dec
jb
and
inc
imul
add
add
add
add
add
movsl
xlat
mov
cltd
imulb
mov
dec
movsb
pop
and
js
fidivl
stos
jbe
push
enter
into
mov
mov
aad
inc
andb
sub
ja
pop
cltd
ret
push
test
dec
rcrb
mov
stos
or
call
dec
mov
xor
jne
mov
mov
xchg
pop
adc
dec
push
xor
js
orb
jg
sub
jl
aam
lahf
aaa
add
add
or
movsb
outsb
xchg
jnp
imul
call
in
repz
gs
data16
ds
mov
or
mov
sbb
mov
in
lds
add
andl
or
inc
movsb
negb
add
rcrb
cmp
imul
sub
adc
frstor
mov
pop
decl
jge
ljmp
cmc
adc
cwtl
jle
out
call
jne
popf
inc
jae
jecxz
cmp
sub
sub
xchg
and
mov
in
fldenv
jno
mov
sub
inc
and
popa
mov
pop
dec
xchg
jne
popf
insb
fdivr
adc
dec
dec
and
xchg
filds
cmp
and
lcall
mov
jno
aaa
subl
sbb
test
sahf
sbb
lahf
inc
test
push
sarl
scas
repz
cwtl
ds
jecxz
lret
jb
jns
ror
pop
mov
mov
cli
add
and
dec
fdivrl
fwait
orl
jnp
dec
ret
pop
or
les
xchg
or
add
adc
sub
test
and
and
xchg
jg
ja
pop
outsl
rorl
jle
sub
inc
pop
daa
adc
aad
sti
adc
aaa
enter
scas
xchg
movsl
cmp
xchg
lahf
loopne
pushf
jbe
cmp
jecxz
in
push
jecxz
decb
cld
sarb
xlat
adc
or
fwait
dec
loop
cmpsb
sbb
insl
jg
pop
mov
push
sbb
dec
mov
fisubrl
jg
sub
xchg
or
sub
adc
daa
or
sbb
push
fldenv
mov
bound
xor
sub
fs
loop
pop
cmpb
jge
dec
sbb
cmp
jmp
mov
mov
add
lds
push
mov
or
icebp
jg
xchg
pushf
test
cmc
aam
movsl
bnd
dec
aaa
fstp
mov
sahf
jnp
aas
inc
int3
xchg
or
cmp
mov
popa
inc
or
push
ret
cmpsl
jmp
adcl
subl
sub
sub
es
out
xchg
mov
cmpsb
cli
outsl
ret
xor
fs
push
xchg
loopne
or
mov
jp
pushf
ja
or
shl
mov
addr16
int
ljmp
aaa
push
dec
xchg
cmp
out
fcomps
adc
adc
inc
pop
mov
icebp
pop
mov
stos
ljmp
xchg
fists
aad
push
xchg
jl
pusha
clc
and
sub
dec
cmpsl
dec
jge
add
fdivl
mov
mov
orb
push
popf
xchg
adc
dec
bswap
lock
data16
mov
pop
push
push
and
popa
or
and
popa
adc
dec
jnp
fwait
add
stc
ret
test
clc
fidivl
inc
loop
jo
push
or
pop
or
lcall
bound
int3
jecxz
lahf
stos
daa
xchg
xchg
inc
dec
pop
mov
xor
mov
jne
in
icebp
pop
lret
test
cltd
push
inc
pop
je
and
lahf
fildl
xchg
faddl
push
jb
dec
daa
js
mov
hlt
add
mov
out
dec
out
mov
stos
mov
arpl
mov
test
pop
test
pop
addr16
and
cmpsl
ret
ljmp
filds
cmp
push
push
sub
out
push
xchg
jl
pop
cmp
fstp
out
mov
mov
and
dec
inc
push
data16
movsb
push
stos
adc
pushf
mov
icebp
popa
dec
out
fwait
adc
cmp
pop
and
fsubrl
xor
and
ret
mov
cltd
stos
cmp
lds
and
fwait
int
adcb
push
hlt
sti
ljmp
ficoms
jbe
rcrb
xchg
jo
cmp
shlb
and
ret
shr
movl
aam
push
jge
xchg
dec
lcall
cli
lret
dec
rorb
adc
and
and
dec
pop
cmp
pop
mov
cmp
or
pop
jo
xchg
data16
cmc
dec
inc
sub
push
mov
inc
cli
push
pop
and
adc
mov
xchg
fists
mov
cmp
in
mov
xchg
adc
and
jno
stc
rorb
push
filds
in
mov
loope
cmp
inc
outsb
js
inc
insl
push
int
push
fldenv
xchg
stc
in
aam
pop
in
bound
mov
ds
inc
cs
pop
daa
and
cmp
sub
pop
loopne
mov
mov
mov
cmp
loop
sahf
out
xchg
ror
mov
sbb
testb
cwtl
sbb
outsl
popa
or
pop
and
stos
mulb
jns
add
in
add
int3
or
add
lcall
fmull
sbb
mov
sub
mov
xchg
adc
mov
sbb
adc
or
sbb
cs
int
out
pop
mov
cld
mov
ljmp
and
sti
lcall
jecxz
sbb
mov
mov
test
fsubrl
sbb
and
xor
repnz
lods
in
pop
loop
xchg
scas
inc
pop
pusha
stc
xchg
mov
inc
sahf
and
insb
mov
jbe
pushf
cmp
fwait
sbb
jl
jl
push
ds
outsl
pop
xchg
xor
js
mov
sbb
out
xchg
insb
mov
add
push
inc
popa
nop
pop
inc
sbb
daa
sub
lret
jg
xor
rol
mov
pop
in
das
push
mov
and
out
rcrl
inc
mov
imul
pop
mov
jns
bound
and
cmp
xchg
mov
xchg
test
sbb
mov
out
in
loopne
rcl
pop
fwait
push
xor
inc
mov
lods
add
push
mov
lods
mov
fdivr
jmp
clc
lahf
adc
jo
scas
mov
outsb
xchg
adc
pop
mov
in
and
mov
dec
dec
cmp
mov
pop
mov
pop
into
or
mov
or
lcall
mov
mov
setge
stc
imul
mov
pop
pop
stos
jo
test
pop
mov
dec
adc
divl
push
sub
outsl
js
outsb
jmp
push
in
test
lods
out
lcall
dec
aaa
out
cmpb
adc
xchg
mov
pop
leave
cwtl
jmp
mov
push
rclb
scas
xor
xchg
xor
add
pop
and
mov
cwtl
mov
add
push
fists
mov
into
mov
jl
xor
gs
fwait
cmp
or
mov
mov
push
lret
out
popf
mov
shrl
push
es
iret
cmp
add
fnstcw
in
pushf
fidivrs
jne
mov
stos
gs
push
inc
xor
sbb
mov
stos
or
pop
hlt
into
xor
loope
pop
rcll
or
int
dec
push
fdivl
fwait
aam
xchg
jbe
popf
mov
or
jne
rolb
fcomi
repz
and
imul
enter
minps
addr16
mov
loopne
or
popf
bound
sbb
mov
jg
mov
mulb
sbb
lods
jnp
inc
ficompl
dec
sub
int3
cmc
pop
lahf
xor
cmp
lret
test
xorl
add
xor
xchg
add
pop
movsb
std
inc
test
outsb
fs
imul
insb
mov
adc
imul
pop
xchg
psllq
je
std
and
das
adc
sbb
cmpsl
lcall
mov
lods
shll
mov
cmp
mov
fcomip
fimull
push
jb
test
and
xchg
aas
enter
adc
push
fadds
add
pop
jb
ja
pop
stc
lods
jnp
jl
sub
jl
mov
push
inc
push
mov
scas
ja
sbb
jmp
pusha
or
shr
mov
or
out
pop
dec
int
xchg
fs
sbb
mov
add
and
mov
leave
test
inc
inc
std
mov
push
shl
shll
aam
lret
fidivs
and
shll
inc
jmp
add
or
loopne
pop
push
pop
jle
or
mov
cmpsl
xchg
test
pusha
jecxz
push
loopne
mov
and
imul
sbb
dec
in
movsb
mov
mov
int3
orb
dec
ljmp
fs
mov
popf
jp
rol
mov
dec
jno
inc
pop
cmp
push
test
cmp
dec
add
into
shrl
lahf
sahf
aaa
idivl
cltd
mov
pop
out
push
xor
cmp
int3
xlat
bound
jmp
divl
dec
into
jl
loop
mov
js
sbb
daa
jb
xor
or
ds
pop
mov
dec
sbb
push
clc
or
and
ds
aam
push
daa
mov
mov
cld
out
cmpsb
xchg
dec
ja
push
ror
arpl
enter
inc
pushf
rcrl
or
ficoms
sub
shll
sub
scas
mov
jnp
ret
mov
push
loopne
lret
add
lahf
xor
lock
add
mov
xor
ret
int3
push
int3
pusha
mov
adc
push
dec
adc
push
xor
fistpll
xlat
mov
inc
push
mov
jg
dec
mov
push
sub
popa
and
and
stc
dec
adc
dec
pop
pushf
xchg
dec
cmpsb
mov
dec
jecxz
daa
mov
data16
in
push
stos
popf
adc
lock
inc
fwait
sub
xor
jae
movsb
mov
jl
or
out
fs
pop
cmp
sbb
ja
pusha
or
push
inc
add
out
ljmp
adc
shll
or
into
es
lods
pop
daa
mov
fisubrl
ret
mov
andb
shll
sar
xchg
mov
aam
daa
inc
scas
aam
mov
sub
lret
sbb
push
mov
sahf
sub
jae
fcom
decb
insl
xchg
std
ss
jb
inc
mov
into
and
aad
lods
cmp
jmp
jmp
negl
xchg
imul
test
lea
ficomps
cmc
in
es
xchg
shll
push
add
or
mov
insl
mov
xchg
andb
dec
es
xor
add
lds
and
rcrb
sub
rorb
ds
cli
push
lds
test
fistpl
push
xor
pop
shlb
jp
popa
mov
rolb
ret
and
imul
sahf
je
push
push
xor
loopne
push
test
insb
hlt
cltd
xchg
leave
insl
mov
loope
add
aaa
lret
pop
scas
adc
lea
and
inc
jmp
mov
inc
and
cwtl
popa
cmp
pop
out
mov
mov
jle
xchg
cli
loopne
and
mov
cmp
les
pop
mov
fistl
jo
or
cmp
mov
cld
shlb
roll
stc
mov
add
mov
pop
das
fidivs
dec
shrb
add
push
negb
imul
inc
pushl
into
testb
outsb
inc
push
into
dec
mov
hlt
inc
mov
imul
test
adc
inc
pushf
sbb
shrb
outsl
aad
adc
push
adc
push
fs
push
outsb
dec
jne
mov
pop
pop
aam
jp
in
xor
test
cmp
adc
fwait
adc
add
dec
test
push
sub
divb
repnz
sub
in
pop
popf
call
clc
jnp
shll
jg
loope
into
dec
inc
xlat
dec
sbb
rcll
and
imul
sbb
mov
pop
test
out
out
cmp
imul
andl
pop
adc
data16
or
clc
jo
jb
mov
mov
mov
in
and
mov
test
int3
shrb
test
push
jae
add
xor
cmpsl
repz
xor
movsb
je
ret
add
add
mov
cmp
mov
dec
stc
mov
sbb
mov
scas
and
inc
xor
jle
jnp
cmpsl
cli
rcrl
mov
xacquire
gs
in
flds
cmp
shr
dec
mov
lahf
push
xchg
dec
adc
mov
push
mov
int3
cmpb
pop
push
sahf
add
pusha
std
lods
pop
add
adc
pop
lods
inc
cmpb
bswap
sahf
and
cld
ja
out
orb
das
inc
dec
push
repnz
mov
repz
sbb
sub
ss
xchg
test
loopne
lds
sbb
jb
rorb
dec
sub
jns
and
jl
xchg
loop
aad
mov
push
aas
insb
push
imul
scas
sbb
data16
inc
push
ret
mov
lds
jns
fsts
xchg
pop
cli
in
ss
fisubs
sbb
mov
iret
mov
xor
mov
btr
and
inc
in
aas
sub
and
hlt
ds
push
rolb
lahf
fiadds
jae
pop
cmp
mov
mov
ljmp
xor
out
cltd
or
dec
test
adc
cli
mov
aam
xchg
lret
jnp
popf
mov
cmpsl
fcoml
jnp
subb
ds
lock
lcall
mov
fnsave
lret
js
add
and
dec
ds
mov
push
pop
mov
lds
jmp
xor
insl
dec
pop
inc
arpl
lods
test
push
hlt
ret
sub
in
int3
lock
lock
lods
inc
rorl
lret
inc
test
int
inc
add
add
or
jg
dec
clc
push
into
pop
mov
jae
xor
cld
xor
ret
mov
sub
lods
insb
mov
jbe
cltd
and
mov
adc
jmp
lret
cld
das
in
cld
mov
jle
aas
xor
scas
pop
pushf
xchg
arpl
iret
in
and
adc
neg
push
push
xchg
jp
je
mov
divl
arpl
inc
mov
xlat
mulb
les
jbe
xchg
fnsave
call
fdivrp
mov
test
mov
pop
pop
ljmp
icebp
leave
mov
int
in
jno
popa
aad
xchg
xchg
dec
inc
pop
or
stos
adc
data16
iret
cmp
fdivl
gs
movsl
jne
push
ucomiss
mov
orb
xor
sub
sbb
cmpsb
jb
cli
jge
ficoms
in
sti
dec
ret
adc
int3
xchg
cmpsl
gs
loop
leave
cld
cmpps
test
aad
mov
dec
push
and
mov
cmpsl
pop
xchg
sbb
inc
aam
mov
imul
cmp
andl
repz
mov
and
les
aam
dec
in
fs
lea
and
lds
xor
fdivrl
inc
insb
jmp
pop
cltd
pop
mov
shl
iret
push
fistpll
sbb
mov
or
mov
xchg
inc
mov
sbb
mov
mov
xchg
xchg
es
cwtl
sbb
xchg
subl
loop
push
enter
mov
lods
pop
cmc
or
imul
lret
mov
xchg
lcall
stos
mull
and
popa
testl
add
pop
enter
pop
repnz
mov
lahf
sub
xchg
pop
dec
mov
aaa
cmpsl
out
out
jns
loop
adc
xor
std
icebp
sub
inc
in
push
lahf
sbb
xchg
outsl
jnp
push
dec
out
loopne
pop
test
push
ret
push
sbb
movsl
dec
ja
dec
pop
push
xor
mov
xchg
or
js
aam
test
inc
xchg
mov
fwait
push
mov
cs
ljmp
pusha
xchg
in
mov
aaa
mov
lret
outsl
mov
cmpsb
movsl
xchg
cltd
lods
mov
dec
inc
and
pop
xchg
push
lcall
fmul
jnp
or
sbb
mov
sbb
mov
les
iret
pop
sbb
aas
lret
sbbl
mov
bound
mov
xor
ss
fcoms
pop
mov
push
jae
pop
jns
lret
fistl
test
jmp
cmp
out
cmp
dec
repnz
push
test
add
jmp
cwtl
sub
and
popl
aaa
push
adc
test
or
xchg
lret
ds
loopne
lods
js
jecxz
sarl
xchg
pop
pop
add
and
xor
call
fistpll
sarb
mov
scas
popa
sub
mov
cmp
adc
jmp
sbbb
call
mov
push
lock
jecxz
or
push
inc
ss
aas
xor
cmp
stc
and
sbb
inc
jno
sbb
ljmp
fsubl
ret
into
dec
int3
loop
xchg
dec
pop
mov
outsl
mov
lock
fisubrs
push
out
mov
popf
clc
ljmp
adc
mov
stos
mov
stos
stos
add
negl
cmp
or
icebp
pop
je
dec
icebp
outsl
mov
lods
scas
jmp
nop
lret
cvtdq2ps
push
xor
adc
repnz
push
enter
or
int3
sub
mov
mov
adc
push
lods
in
xchg
jbe
mov
insb
lds
fwait
pushf
xchg
pop
lock
cmp
mov
dec
xchg
aaa
mov
dec
cmp
xor
pop
cmp
rcl
loope
outsl
dec
cmc
xor
in
and
dec
lcall
es
stos
lea
lea
movsl
jns
mov
and
mov
divl
js
dec
push
mov
pop
mulps
repnz
push
inc
mov
mov
dec
fs
pop
loopne
push
xor
cmp
mov
mov
gs
cmp
fdivs
insb
dec
adc
mov
gs
mov
lcall
mov
daa
je
dec
jg
out
movsb
dec
mov
push
xor
mov
mov
push
cli
mov
stc
out
sbb
shr
inc
inc
jns
push
xchg
scas
mov
jae
mov
cltd
xchg
mov
enter
mov
jmp
fildll
andl
mov
dec
ss
dec
roll
jb
mov
cmpsb
gs
mov
fadds
xchg
or
sub
or
sub
fadd
push
leave
mov
sbb
subb
xchg
xor
sub
inc
xchg
int3
or
daa
xchg
addr16
lock
xchg
push
jmp
mov
cmc
mov
shl
fisttpll
sbb
mov
and
xchg
popa
xchg
mov
cltd
sbb
cmp
mov
or
add
pop
mov
push
jne
jle
add
shrl
pop
int
mov
mov
pop
jo
pop
fdivs
rorl
jecxz
test
stos
inc
lahf
sub
imul
loopne
push
push
or
ljmp
fucomp
lea
movsl
cltd
in
sub
insl
mov
cld
or
stc
push
out
outsl
rcrb
fcom
push
int
sahf
and
test
ds
mov
adc
aad
jl
bound
jecxz
pop
in
or
pop
mov
add
dec
ret
pop
xor
xor
enter
cld
neg
hlt
sub
adc
dec
xor
add
inc
movsb
or
adc
jmp
dec
mov
lods
insb
shl
gs
lods
outsl
jl
xor
lods
mov
sub
gs
or
or
cmp
xor
jne
repnz
adc
das
xchg
andl
adc
add
outsl
xchg
pushf
inc
or
rclb
lcall
outsb
jo
mov
sbbb
lods
xchg
jne
paddsb
jp
or
add
bts
cmc
pop
int
add
adc
inc
je
lock
mov
iret
ljmp
mov
inc
pop
cmc
in
gs
add
dec
add
add
add
add
fadds
add
add
add
add
add
add
add
incl
stos
stos
add
ja
mov
ret
add
add
add
add
or
add
add
add
add
test
add
add
add
push
add
add
add
dec
add
add
add
add
pusha
add
xor
incb
add
add
add
add
sbb
sbb
sbb
outsb
add
test
add
js
add
push
add
outsl
pop
add
push
push
movl
add
sahf
jne
mov
test
movl
ret
incl
sub
xchg
ss
sub
cld
add
push
jne
in
add
push
lcall
adc
testl
mov
in
push
std
ljmp
rorb
add
add
leave
ljmp
orl
jmp
ljmp
decl
loopne
decl
inc
sbb
sahf
cld
push
add
lock
add
call
call
data16
stc
pushl
repz
loopne
jne
add
adc
inc
adc
add
leave
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
imul
imul
add
gs
je
into
fs
add
jae
add
outsl
add
outsl
add
insb
dec
add
cmp
jne
popa
inc
outsl
add
fs
jnp
insb
push
insb
push
add
add
add
add
add
add
add
out
add
add
add
add
jbe
add
add
add
add
add
add
push
das
dec
mov
int3
xlat
sbb
xor
mov
cmp
insl
inc
es
ja
repnz
mov
into
or
enter
cs
jecxz
fbld
sbb
cli
divb
shl
mov
mov
inc
sub
std
inc
jae
cmp
mov
popa
mov
mov
es
in
dec
mov
mov
xlat
mov
enter
cltd
pushl
lret
fldcw
mov
sub
out
pushf
ljmp
xor
iret
and
mov
lret
inc
mov
movl
inc
std
adc
push
outsl
dec
sbb
inc
push
ret
movsl
add
divl
repz
nop
aam
push
imul
sti
fmuls
inc
out
loopne
cmpsb
outsl
test
push
push
fisttps
icebp
test
jg
add
cmp
pop
out
aad
and
xchg
daa
into
out
jp
insb
into
jge
test
mov
in
sub
or
cmp
jmp
popf
jecxz
aas
scas
xor
outsb
jmp
je
iret
scas
int3
xchg
lods
adc
pmulhw
leave
inc
push
sarl
ss
pop
push
outsb
jge
inc
and
out
hlt
mov
lcall
lahf
and
mov
imul
aas
shll
shrl
push
push
pop
push
imul
jns
xchg
push
sbb
outsl
xchg
pop
fucomi
cld
aas
inc
movsb
xlat
movsl
adc
in
std
into
fsubrl
js
sbb
mov
ret
lret
loopne
iret
jmp
push
cli
int3
cmp
enter
push
ja
test
lock
or
cmpsb
rcrb
sbb
es
cld
inc
cmc
pop
inc
fstpt
jo
jl
fnstenv
and
data16
mov
pop
pushf
sbb
add
push
jg
sub
xchg
push
das
sbb
cmp
lcall
jb
add
test
lea
push
jmp
dec
addr16
jb
push
out
divl
push
jl
push
mov
stc
pop
inc
mov
sti
mov
adc
fwait
mov
cld
sti
cmp
aaa
dec
popa
test
jmp
insl
mov
cmp
pop
popa
popl
jle
xor
inc
scas
mov
jno
and
sbb
xchg
test
xchg
mov
sbb
sub
mov
int
add
or
jnp
ss
cmc
mov
scas
and
shlb
push
adc
ljmp
out
sub
loope
fs
sbb
xchg
scas
test
xchg
fmull
xchg
or
mov
pop
test
shrl
data16
aam
addl
rcl
lcall
lods
cmpsb
mov
pushf
mov
fistpll
enter
inc
aaa
cli
sbb
push
adc
insl
sbb
test
pusha
in
popa
cvtps2pd
push
mov
pop
jle
cmp
scas
cmp
mov
test
int
js
lds
dec
pop
in
mov
je
sbbl
in
sbb
int
out
mov
movsb
pushl
test
mov
sub
and
sbb
imul
cmp
mov
test
add
xor
das
imull
dec
inc
cmp
aad
movsl
nop
push
popa
and
in
jg
xchg
xchg
lret
popf
cmc
scas
ret
sub
add
mov
ss
test
repnz
test
lret
dec
xor
mov
test
test
in
sbb
cmpsb
jnp
mov
rolb
bound
jecxz
xchg
ret
ss
movsl
je
jne
mov
aas
lahf
sbb
mov
daa
pop
unpckhps
stos
stc
out
inc
add
adc
mulb
aam
and
dec
pushf
pop
push
mov
lahf
outsb
jo
outsl
out
cltd
data16
dec
mov
loop
jbe
stos
pop
mov
pusha
mov
js
rcl
fadd
cmpsl
insl
add
push
test
jecxz
rolb
adc
insb
out
outsb
mov
ret
mov
insb
rcl
in
mov
pop
xchg
scas
dec
incb
xchg
jge
mov
aaa
gs
mov
add
and
dec
sub
das
in
adc
sbb
sbb
out
mov
dec
inc
lods
test
mov
cmp
stos
inc
scas
mov
int
daa
fstps
push
movsb
xchg
or
cmpb
xchg
add
lods
mov
mov
daa
or
dec
std
and
jge
xorb
popf
pop
pusha
mov
pop
add
adc
dec
sub
inc
inc
dec
adc
scas
icebp
enter
test
pop
imul
ja
and
adc
mov
lahf
out
dec
loopne
sti
and
mov
xchg
lock
xor
pop
outsl
sbb
push
nop
js
pop
add
mov
addr16
lds
xchg
mov
out
and
sbb
add
sahf
mov
xor
inc
jae
sbb
jno
hlt
je
xor
rcl
sbb
fmulp
fwait
xlat
cs
inc
ret
fcoml
lret
ret
repnz
call
inc
scas
addr16
or
adc
or
mov
sub
je
mov
lea
imul
cltd
fadd
fiadds
mov
loopne
incl
adc
into
imul
dec
push
add
jne
fdivr
pop
loope
push
mov
lock
cli
jnp
and
jns
hlt
sbb
scas
xor
add
lret
fdiv
je
sahf
mov
imul
in
mov
push
sbb
push
sbb
fs
mulb
xor
jne
fisubrs
dec
adc
inc
js
ds
std
loopne
cli
xor
adcl
mov
loope
aas
loope
js
repz
cmc
pop
cld
sahf
fcmovne
imul
pusha
lds
mov
inc
mov
mov
sti
jg
imul
cmp
mov
sti
scas
sbb
and
or
cwtl
push
adc
mov
mov
pop
adc
push
mov
movb
fidivl
push
xor
sbb
jmp
adc
je
mov
jno
rcr
push
mov
test
iret
mov
jno
pop
sub
imul
inc
mov
xchg
mov
pop
or
and
mov
rol
ficoms
lcall
and
fbld
movsb
shlb
stos
push
xor
pop
stc
insb
cmpsb
cltd
insb
cli
or
int
cmpsb
or
jae
push
sub
fcmovb
cmp
nop
icebp
jb
pusha
and
pop
and
cltd
dec
jns
test
jae
adc
jg
aaa
bnd
jns
jg
pop
pop
cmpsl
pop
sahf
and
push
cmc
pop
and
fwait
sub
ja
mov
lahf
cli
or
and
imul
lcall
cmp
sub
cmc
lods
dec
in
mov
mov
mov
mov
sbbb
je
ret
inc
je
lret
mov
aam
mov
aam
lods
and
or
push
hlt
std
ljmp
loop
sahf
push
mov
test
pop
addr16
je
dec
xchg
dec
aaa
pop
lock
aam
repnz
or
cmpsb
icebp
icebp
adcl
jle
pop
cwtl
push
fistpl
mov
test
icebp
arpl
adc
shlb
sbb
add
jb
fsubs
jne
jp
xor
xchg
mov
cwtl
cmp
cltd
mov
mov
pop
icebp
xchg
inc
xor
adc
bound
sbb
cwtl
and
jne
push
and
fs
lcall
or
push
and
cmpsb
fcompl
jmp
fildl
sbb
push
lods
and
rorl
xchg
shll
inc
ljmp
add
ds
jl
xchg
orb
push
mov
xor
adc
cmp
cld
nop
cli
sbb
daa
jmp
inc
fstl
fcmove
mov
push
jns
cmc
lock
sub
adc
mov
movsb
mov
insl
push
sbbl
rolb
in
jae
incb
fcoml
cltd
mov
jns
lret
js
rcrl
sbb
inc
xchg
dec
add
sub
lcall
aaa
adc
xor
xchg
sbb
into
mov
pop
sahf
pop
aam
inc
mov
jmp
shl
cmp
xor
and
xor
sub
mov
inc
xor
mov
in
out
testl
cmp
fistl
adc
mov
push
add
inc
cltd
add
xchg
xchg
mov
jae
inc
sbb
xchg
sbb
es
es
xchg
movsl
mov
inc
iret
mov
add
jecxz
inc
lret
test
pusha
nop
push
repz
dec
nop
mov
inc
out
rcrl
hlt
mov
lock
lock
xchg
jp
imul
adc
jb
xor
out
xchg
jecxz
pop
bound
adcl
repnz
das
pop
sets
sbb
loop
dec
cld
fs
sbb
jns
or
fwait
lds
orl
shll
jo
std
jle
sub
pop
sub
mov
pop
pusha
repz
xchg
mov
jns
inc
push
and
pop
pop
push
xchg
sbb
cmpsb
ja
xchg
cwtl
repz
fs
push
adc
pop
and
aas
cmp
xchg
addb
stos
pop
push
mov
orl
out
rolb
jae
xor
jge
into
sub
rcrb
bound
pop
inc
dec
out
jne
adc
jo
jecxz
adc
adc
mov
aam
fnstsw
adc
sbb
stos
roll
jae
or
stos
lods
add
lcall
mov
inc
xchg
mov
xor
aas
dec
jl
cmpsl
and
enter
jno
add
icebp
cmp
mov
arpl
loope
sbb
add
cld
mov
or
addr16
mov
push
and
add
test
or
out
rolb
and
idivb
jns
jle
popf
cs
into
pop
xlat
xchg
and
or
cmp
fs
lds
rcrl
adc
sbbb
sbb
adc
icebp
repz
xchg
or
inc
mov
jno
mov
imul
inc
lcall
loop
test
adc
inc
push
pop
dec
out
jp
ljmp
aas
imul
insb
in
jbe
cmpsl
or
fcoml
xorl
ror
mov
test
sarl
pop
and
aam
push
mov
pop
jne
stos
inc
das
movsb
or
cs
jmp
adc
lahf
add
cmp
inc
push
test
pop
gs
mov
xor
jb
xchg
inc
jns
mov
movb
in
sub
inc
xor
sub
cmpsl
jo
dec
mov
xchg
push
test
dec
mov
xor
nop
cs
sub
aad
hlt
in
push
push
clc
arpl
out
push
shl
sub
repz
and
and
rorl
pop
cmc
rcr
out
pop
frstor
out
xchg
push
sbb
sub
push
js
jle
loop
mov
sbb
repnz
pop
cli
jbe
loopne
mov
ljmp
xor
mov
data16
aaa
fdivr
or
lcall
sbb
sbbb
test
popf
pop
movsb
cmc
das
mov
int3
dec
in
cmp
and
mov
stos
insl
cmpl
lods
arpl
mov
sbb
cmp
jo
fiaddl
and
fldenv
add
mov
subl
fdivl
jo
lret
ret
leave
mov
jb
jg
mov
popa
mov
aas
xchg
xor
sar
xchg
push
fldenv
sbb
lea
das
out
in
pop
in
xlat
pop
xchg
add
xor
pop
dec
add
jp
jae
inc
xchg
pop
or
lds
rorl
or
cwtl
nop
pmulhuw
dec
adc
int3
nop
inc
pushf
mov
ret
inc
xchg
xlat
and
adc
por
bound
xor
xlat
inc
pop
aas
into
xor
cmp
cli
xchg
inc
inc
mov
lahf
cmp
jno
push
fsub
adc
repz
mov
popf
dec
rorb
add
movsb
idivb
fstl
jo
shll
jecxz
xchg
lcall
or
cmpsl
je
leave
push
sti
sub
inc
add
mov
repz
sarb
loop
mov
push
hlt
xor
repz
lahf
pop
movsl
cwtl
mov
andl
gs
inc
or
mov
add
fucom
push
les
lahf
sahf
dec
mov
clc
xchg
movsl
mov
imul
push
into
xchg
cli
mov
xchg
jecxz
sbb
sbb
xor
out
movsl
in
ss
pop
dec
inc
js
rolb
xchg
int3
sbb
fs
icebp
push
rorl
cmpsl
and
inc
xor
lock
push
dec
data16
adc
sarb
fcoml
cmc
loopne
push
les
dec
fcomp
dec
rcrb
dec
dec
xor
xor
aas
or
sub
rclb
jne
js
andl
sbb
mov
mov
test
cmp
mov
gs
cmp
jecxz
or
fmull
xor
aam
arpl
fadd
sbb
cmc
pusha
mov
adc
mov
mov
cwtl
pusha
stos
in
sti
dec
sub
mov
pcmpeqb
or
inc
and
in
mov
xorb
rorb
fwait
pop
add
push
xchg
ret
sbb
test
xchg
pop
orl
xchg
mov
bound
mov
imul
xchg
and
mull
sti
pop
xchg
xchg
cmp
sbb
lret
inc
jl
in
mov
xchg
or
mov
dec
jmp
dec
les
sahf
enter
adc
clc
push
inc
insb
rorb
xlat
cmpsb
and
test
mov
mov
sub
mov
jl
sbb
mov
rol
dec
fs
mov
jbe
jbe
les
push
cmp
push
push
mov
movsb
test
dec
xlat
dec
xchg
ja
int
add
insl
cltd
out
ljmp
jbe
aaa
jecxz
cmp
adc
loop
push
and
subb
insb
pop
mov
test
cmc
mov
jecxz
mov
mov
cmp
or
loop
fisttpll
pop
or
lahf
insl
mov
fmuls
inc
xor
iret
loopne
pop
andl
sbb
nop
test
stos
gs
fstp
lcall
add
mov
nop
push
pop
jns
cmp
jmp
pusha
fldt
je
add
inc
lcall
insl
insb
xor
push
xchg
mov
jge
cmp
mov
clc
fisttpll
inc
loope
adc
imul
xchg
mov
push
inc
daa
jle
not
xchg
inc
sub
ret
fisubrl
and
aaa
imul
dec
daa
pop
int3
cmpsb
in
sub
addr16
cmp
xchg
add
mov
and
test
adc
cmp
sub
data16
enter
int
sub
jg
loopne
mov
test
lret
jmp
mov
xor
mov
mov
clc
insb
imul
fs
inc
xor
imul
dec
pop
sub
jne
xor
xor
mov
pop
cwtl
stos
nop
sbb
mov
mov
fcomps
push
ds
into
bound
outsl
je
jg
xor
not
pop
sbb
adc
xchg
xor
add
nop
shl
xchg
push
lea
xchg
std
mov
dec
in
loop
and
mov
and
inc
roll
fstpl
je
xchg
add
adcl
into
mov
dec
inc
mov
adc
xchg
sbb
pop
fcompl
sti
scas
xor
xor
adcb
mov
scas
ds
add
fnstcw
sub
cltd
inc
jo
loopne
insl
fs
pop
xchg
fwait
lret
ja
and
xrelease
ljmp
test
pop
dec
lahf
inc
mov
and
jle
push
gs
adc
ljmp
dec
sahf
push
pop
imull
in
adc
push
and
imul
pop
jp
jg
loope
lods
add
iret
sbb
setbe
add
pop
int
jge
rcll
cmpsl
adc
lock
jl
in
push
xlat
icebp
mov
adcb
xchg
cmpsl
arpl
sub
lahf
pop
dec
pushf
stc
sahf
mov
push
sbb
lds
rsm
rcrl
sti
aam
or
jne
cmovno
test
popa
adc
and
psubb
jmp
mov
cmp
cmp
sub
sbb
test
scas
test
mov
mov
jnp
xchg
mov
fndisi(8087
fildll
and
es
cmpsl
fcmovbe
jb
cmc
in
int3
loop
ret
pop
fldcw
pop
cs
dec
iret
pop
mov
xlat
in
or
mov
shlb
sub
out
aad
or
inc
aad
pop
mov
mov
push
xchg
adc
mov
xchg
sbb
mov
mov
pop
add
xor
push
sub
jb
add
sbb
out
pop
pop
nop
enter
push
pop
pop
push
cmp
dec
xchg
pop
cmpb
cmpsb
popf
mov
test
or
pop
and
mov
add
mov
jg
xchg
lret
ficompl
stc
inc
mov
push
fcompl
bound
test
jno
dec
push
xlat
fdivrs
or
outsb
add
dec
nop
dec
daa
pop
xor
aam
lcall
in
inc
push
test
dec
idivl
insb
popa
xlat
das
cmp
mov
imul
popf
gs
cld
push
mov
popf
push
and
insb
arpl
jmp
xchg
lahf
push
jl
adc
inc
adc
scas
push
mov
cmp
shrb
jmp
out
jo
cmp
cmp
js
ficoms
pop
fsubrs
icebp
cli
rorl
sti
push
push
pop
jg
pushf
out
std
sbb
push
sub
lret
or
call
bound
mov
iret
mov
orl
fwait
pop
add
movsb
add
fistl
mov
xchg
mov
mov
jo
mov
jmp
mov
or
test
fwait
inc
and
adc
xchg
int3
ss
testb
inc
dec
sbb
setb
cwtl
cltd
ffree
cmp
pop
mov
xchg
stos
sbb
loop
adc
insl
sbb
push
sbb
mull
jnp
scas
xlat
pop
and
push
out
adc
adc
in
repz
into
fldt
mov
leave
rcpps
movsb
dec
inc
or
dec
es
movsb
clc
rcrb
jns
pop
jmp
enter
aam
mov
pop
or
shll
mov
imul
ficomps
stos
notl
out
clc
or
sub
mov
movsl
push
mov
jmp
push
jmp
or
icebp
xchg
shrb
push
lds
jo
imul
mov
fstps
leave
decb
jmp
mov
jbe
mov
ret
mov
pop
jne
inc
jmp
sahf
shll
pop
adc
push
stos
stos
icebp
ret
mov
in
imul
xchg
jne
test
dec
ss
ja
loope
and
aam
cltd
popf
sbb
xor
inc
push
jl
add
add
scas
lock
xchg
sahf
lret
or
popa
mov
movsb
inc
inc
idivl
out
stos
xchg
pushf
or
or
sahf
imul
cmp
lcall
push
pop
shl
scas
adc
mov
jnp
in
mov
jb
inc
mov
xor
ja
cltd
ss
sti
cmp
imul
mov
insb
inc
add
sbb
push
cmp
lret
sub
cwtl
inc
clc
stc
gs
pop
jns
shll
push
xor
adc
mov
gs
in
int3
int3
outsb
pop
mov
gs
outsb
fmul
mov
jno
cmp
aam
std
arpl
cmp
pop
mov
adc
pop
mov
inc
fidivs
or
mov
bnd
dec
in
jmp
pmuludq
dec
jg
rcrb
push
pushf
inc
mov
or
jno
fidivrl
cwtd
orl
or
add
shll
orl
enter
pusha
outsb
adc
and
mov
push
popa
and
inc
push
lret
sbb
dec
jg
cs
sub
aam
mulb
dec
jno
imul
cmp
pop
or
call
or
mov
loopne
mov
sbb
adc
inc
sub
xor
push
adc
cwtl
in
sbb
sbb
cs
and
dec
lods
loope
cmpsb
xchg
cwtl
aam
jle
push
mov
xor
lock
or
test
sub
fimuls
dec
mov
mov
out
xor
mov
push
movsb
sub
imul
cmpsb
iret
push
pop
or
jle
sahf
ljmp
inc
lret
mov
popa
aas
add
data16
add
add
mov
add
add
add
testb
add
add
add
xchg
add
add
add
add
xchg
add
dec
addb
add
add
add
add
add
incb
add
add
add
add
add
add
add
addb
add
add
stos
stos
add
ja
dec
mov
incl
add
add
add
and
push
jb
outsb
push
or
add
add
add
add
add
pop
inc
add
add
add
add
add
add
lock
add
add
and
add
add
fs
outsb
add
clc
je
fs
in
leave
mov
or
clc
jecxz
sbb
aad
add
push
inc
pop
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
jmp
push
add
pop
divl
mov
test
addl
add
jge
or
add
add
add
push
add
add
push
lea
test
call
push
cmp
shll
cld
loopne
std
pop
add
incl
aad
add
enter
add
push
std
test
clc
outsl
add
add
push
adc
mov
add
hlt
inc
adc
add
add
add
int3
rcrb
add
inc
inc
insl
je
imul
add
insb
imul
insl
add
jb
gs
gs
add
gs
js,pn
push
pusha
imul
insb
add
outsl
insb
jne
outsb
gs
pushf
je
je
je
insb
add
add
mov
mov
add
add
add
and
sar
xchg
push
gs
data16
sub
fisubrl
push
mov
jecxz
enter
pusha
mov
jg
les
mov
movsl
sub
xchg
outsl
test
je
xchg
lret
hlt
mov
fisttpll
jl
cld
xchg
mov
cmp
adc
pop
and
outsl
mov
loop
xor
and
xchg
push
scas
daa
push
cs
arpl
jo
jmp
repnz
out
xchg
outsl
outsb
lock
mov
lret
pop
imul
and
jns
mov
xor
ds
ss
mov
fsubrs
mov
adc
adcl
sbb
or
inc
cmp
cwtl
fimull
test
pop
sahf
xor
fcmovb
mov
shl
arpl
mov
xor
int3
or
push
stos
and
sti
xor
movsb
inc
jno
nop
or
sub
cmp
addr16
stos
cltd
or
test
pop
inc
xchg
ja
out
stos
scas
popa
mov
sub
leave
sarl
adc
cwtl
xchg
cmp
sti
and
mov
arpl
test
jno
or
insl
daa
pushf
lret
fsubrl
cmc
inc
fildll
lret
sub
sbb
out
fadds
mov
in
pusha
clc
mov
outsb
lds
dec
aaa
mov
cwtl
mov
or
imul
jge
mov
ror
add
shlb
add
daa
pop
and
mov
mov
and
test
cli
out
xlat
sbb
sbb
out
addl
inc
cld
aas
push
jno
jnp
mov
xchg
movsb
sahf
sbb
into
sub
inc
cmp
inc
leave
mov
sub
cmpsl
and
xor
sbb
repnz
mov
sbb
mov
loopne
addr16
bound
sti
push
sbb
pop
jge
popa
test
xchg
loopne
mov
lock
cmpsl
xor
jae
push
jge
lods
xor
xchg
leave
sbb
mov
es
mov
xchg
mov
nop
aaa
aad
fwait
jl
push
sti
mov
lds
mov
jne
mov
cmpsb
sahf
imul
jae
push
push
pop
sbb
ja
lahf
popa
jno
dec
jecxz
push
ljmp
mov
in
inc
js
stc
mov
hlt
rorb
mov
xor
pop
mov
xor
mov
pusha
adc
adc
rorb
jl
in
mov
inc
adc
mov
dec
mov
sarl
and
pusha
sbb
stos
adc
orb
xor
mov
xchg
loope
fwait
jecxz
pop
je
pop
mov
fsubrl
adc
scas
push
addr16
sub
jp
dec
cli
xchg
mov
pop
fs
jge
xchg
popa
push
add
sbb
jno
repz
scas
add
mov
sub
cmpsb
sbb
bound
mov
sar
sub
xchg
add
push
das
sbb
loop
adc
sahf
bound
fidivrl
cmp
and
mov
or
sub
ljmp
fidivs
xchg
repz
repz
adc
or
jbe
xor
mov
lahf
inc
fistl
sbb
aad
xchg
mov
dec
test
adc
mov
sbb
push
sub
xor
ret
movsl
sbb
xchg
outsl
cmp
pushf
mov
xor
jmp
out
fcom
sub
and
lret
setbe
insl
std
push
dec
push
int3
fistpl
cltd
dec
pusha
xchg
dec
sbb
iret
and
add
add
decl
or
fidivs
xor
cwtl
out
mov
jl
aad
lods
or
and
cmpsw
test
daa
pushf
xor
inc
sbb
pop
scas
xchg
icebp
scas
lods
mov
xchg
xor
shr
std
fwait
add
and
jb
rcr
inc
jmp
lret
mov
dec
int3
jne
mov
lahf
add
out
and
iret
out
jno
mov
mov
rorb
loope
and
pop
adc
pop
xchg
test
fsubrp
dec
sti
adc
fwait
pop
pop
outsl
adc
scas
jbe
jg
xchg
mov
insl
cmpsb
sarb
mov
sbb
pop
inc
inc
subl
mov
mov
pop
out
mov
dec
outsb
and
sahf
push
popa
in
imul
iret
push
incl
xchg
lods
adc
enter
xchg
sarb
mov
sbbb
adc
shll
add
out
sub
nop
loope
sbb
jle
fwait
inc
inc
lret
inc
ds
xchg
xor
pop
add
jmp
sbb
flds
or
mov
cmp
jno
pop
shlb
xor
ljmp
data16
es
jbe
cld
maxps
sbbb
inc
push
stc
je
dec
sub
add
insb
mov
dec
xchg
jno
movsb
dec
lods
inc
mov
sub
push
push
mov
jae
clc
xor
xor
rorl
std
xor
cld
insb
push
lods
jp
lcall
jb
push
xor
gs
and
dec
push
shrb
or
and
pop
add
sub
bound
jl
popf
daa
jno
xor
mov
adc
and
icebp
xlat
fisubs
sarl
push
or
sbb
and
mov
mov
out
shrl
insb
pop
pushl
pop
push
inc
nop
and
insb
outsb
es
cs
pop
ds
js
out
rcrb
in
fwait
and
jnp
out
add
or
and
add
mov
incb
push
dec
cmpsb
add
flds
mov
cmp
xlat
les
dec
fadds
dec
aaa
add
jecxz
in
aas
mov
add
sub
adc
pusha
shlb
pop
movsl
jne
and
insl
in
testb
sub
xor
es
sbb
jecxz
mov
scas
lods
sub
imul
lret
cmpl
sahf
adc
test
nop
mov
cmp
mov
mov
fs
mov
push
insb
ds
std
dec
mov
or
pop
xchg
adc
outsb
loop
push
icebp
push
xchg
movsb
test
loopne
push
sub
leave
mov
and
cld
insb
cmpsb
mov
dec
dec
adc
decb
add
mov
and
lds
inc
cs
jns
lock
in
in
not
push
repz
mov
xor
push
push
add
dec
lods
xchg
ret
insb
inc
lock
jg
stos
xor
pop
xchg
scas
dec
sub
mull
mov
gs
inc
lds
in
pop
sub
push
js
mov
out
pop
sub
add
fstpt
fwait
movsb
ficoml
xchg
jae
movsl
jne
push
movsl
enter
inc
ljmp
ss
mov
es
cmp
add
push
mov
xor
jns
addr16
push
jae
ret
ss
lcall
dec
fdivrl
pop
inc
mov
adc
sbb
es
ljmp
enter
sbb
mov
mov
push
lea
outsl
xor
cmp
jp
jecxz
push
jge
sbb
addl
outsl
xor
and
mov
rorb
sbb
testl
repz
jns
fildll
dec
jb
rol
and
push
int3
mov
inc
shll
add
js
psubsw
pop
cmpsb
mov
mov
jl
xor
sbb
leave
cld
jae
xor
xor
xchg
and
or
sbb
lock
popa
xor
mov
lahf
cs
mov
jp
xor
jns
fstl
sbb
xchg
mov
sbb
scas
mov
test
push
sbb
mov
mov
jge
stos
addr16
adc
lret
cmc
lret
xchg
pop
and
into
dec
out
or
test
xchg
inc
pop
pop
xlat
cmp
cli
imul
jecxz
sbb
ret
pop
in
int
ror
iret
sbb
dec
adc
movsl
shrb
lds
push
imul
mov
cmp
xchg
stos
push
mov
lret
pop
es
or
test
dec
mov
leave
int
es
jne
jmp
cmp
push
xchg
sbb
pop
iret
mov
or
pop
das
adc
mov
iret
and
fwait
cmpb
xor
mov
imul
int3
imul
cmp
iret
mov
push
push
mov
or
cmp
int
push
xchg
inc
xchg
push
test
repz
fisttpll
mov
movl
adc
sub
or
push
ror
fwait
inc
fidivrs
lahf
mov
daa
inc
cmp
decb
out
cmp
jbe
fcomp
jbe
dec
mov
jecxz
jae
or
and
mov
mov
sub
sbb
add
pushf
push
jne
ror
sub
ljmp
jno
adc
xchg
mov
adc
aas
jge
cmpsb
sbb
inc
jnp
nop
mov
jns
lcall
xchg
inc
sarb
sub
cmc
outsb
push
jbe
inc
mov
in
int
cs
scas
pusha
mov
jl
stc
ja
or
scas
bound
cli
mov
and
ret
mov
insl
inc
or
daa
sub
adc
mov
jle
xchg
loop
push
jne
jle
roll
jbe
inc
test
mov
pop
loope
mov
int3
cmp
lea
frstor
cltd
mov
lods
fs
xchg
adc
mov
aas
das
sbb
jbe
or
stos
outsl
xlat
mov
mov
sub
ljmp
inc
nop
push
mov
mov
mov
lea
cli
xor
pusha
cltd
or
sub
xchg
and
jae
push
mov
pop
add
mov
or
dec
mov
xor
push
cmp
push
cwtl
xchg
insb
pop
cmc
stos
bnd
pop
lret
lds
rcrl
add
lods
adc
sub
mov
shl
cli
outsb
out
enter
sbb
fidivl
in
insl
jae
fsubs
push
nop
mov
and
cmp
fwait
out
mov
fdivl
push
xor
cmp
lock
push
mov
xor
in
scas
jle
sub
cwtl
sarl
push
int
js
roll
inc
inc
xor
cmc
cmp
lret
popa
daa
mov
std
shlb
sub
test
push
iret
andb
sbb
jge
pop
sub
mov
andb
xor
sub
jecxz
sbb
hlt
stos
adc
std
das
or
cwtl
mov
mov
mov
sub
fldenv
xchg
int3
popa
testb
cmp
pop
and
jb
mov
in
in
pop
lahf
lods
lcall
jg
loope
shrl
scas
push
inc
sbb
mov
addr16
inc
jno
in
pushf
aad
addr16
das
fstp
cmp
stos
in
jne
cmp
mov
daa
sbb
into
test
pop
and
jnp
dec
fwait
pop
pop
insb
pop
jno
movsb
push
ljmp
mov
sbb
and
fincstp
xor
inc
mov
test
cltd
dec
fistpll
movsb
movl
jns
pushf
and
fcom
shrb
pop
cwtl
mov
cmp
push
iret
mov
xchg
dec
mov
mov
sub
and
aam
sti
push
call
shl
sarl
xchg
pop
sub
addr16
insb
into
sbb
mov
adc
jg
cmc
push
mov
paddw
lcall
fimuls
lock
dec
adc
sbb
jo
mov
mov
pushf
or
roll
jb
xchg
sub
test
dec
inc
js
add
jge
adc
dec
out
xchg
jl
and
sbbl
outsl
xor
add
add
popf
out
or
inc
push
loope
mov
movsl
cmpsl
jbe
add
insb
pop
sahf
push
adc
pushf
mov
add
xchg
sbb
lahf
pop
in
push
adc
push
pop
fldenv
mov
push
lods
jnp
and
orl
and
lods
or
xor
js
pop
hlt
lret
jmp
into
adc
mov
divl
into
cltd
mov
sub
bound
adc
daa
or
xchg
pusha
adc
jno
mov
pop
popf
clc
cs
xor
xlat
imul
push
pop
cmp
push
int3
add
in
mov
js
fsts
fs
leave
cmp
mov
mov
decl
les
fdivrl
xchg
aaa
outsb
mov
out
xor
loop
subl
fcoml
jb
rclb
aad
cmp
sbb
push
orb
fdiv
mov
add
pusha
popf
jecxz
sub
jne
push
loopne
inc
std
inc
inc
lret
mov
sbb
and
fmuls
outsl
sbb
mov
aaa
mov
sbb
dec
jle
mov
cs
or
add
cmc
cli
loop
sub
pop
cmp
aad
sub
into
and
js
enter
mov
xchg
add
xor
insl
cld
rol
test
mov
add
pop
add
ds
add
lds
cs
scas
sahf
and
jns
xor
stc
xchg
jnp
sbb
das
inc
mov
shr
add
sbb
mov
ja
lret
xchg
xor
or
repz
lcall
cmpsb
mov
inc
fcmove
pop
jp
fwait
push
test
cs
sub
enter
jl
pop
das
ljmp
gs
xchg
dec
mov
pop
dec
xchg
and
mov
aam
rolb
or
enter
js
xchg
pop
mov
dec
xor
rcrb
iret
cmp
sub
and
xchg
js
sbb
dec
push
loopne
jo
add
and
icebp
fbstp
pop
adc
out
push
jmp
xchg
lock
cmp
push
aam
stos
sbb
out
testl
or
enter
outsb
incl
or
and
add
dec
shlb
gs
or
dec
add
mov
xor
arpl
and
cli
hlt
mov
or
in
adc
xchg
insb
inc
gs
arpl
adc
imul
push
dec
aas
adc
inc
pop
pop
inc
mov
mov
add
adc
stos
mov
jb
shll
sub
pop
inc
mov
jmp
xor
data16
in
repz
daa
sub
scas
jg
push
cmp
shll
out
daa
push
dec
or
insb
sub
sti
fnsave
test
lds
nop
or
add
push
dec
outsl
add
test
mov
sbb
cli
dec
mov
xchg
sbb
or
xor
out
push
data16
cld
gs
mov
es
out
dec
mov
in
push
mov
or
dec
loop
xchg
mov
mov
xor
cs
mov
sub
cmp
insb
aaa
push
fdivs
pop
fbld
inc
scas
add
or
data16
cli
ds
jb
mov
icebp
loopne
jg
mov
pop
adc
mov
pop
jno
push
xchg
cld
or
lret
mov
add
sub
dec
subl
in
xlat
jns
jecxz
subb
repz
push
rorl
xor
jne
xchg
push
rcl
fwait
bound
int
push
jp
adc
mov
push
sbb
idiv
pop
adcb
shl
ds
and
cmpsl
shlb
icebp
insl
push
out
mov
or
push
stos
mov
addr16
xchg
inc
in
addr16
arpl
xchg
push
and
mov
xchg
std
aaa
sarl
ja
sti
aas
jmp
lock
push
loope
mov
and
cli
nop
in
mov
daa
jne
lret
xor
shrl
xor
int3
jge
add
inc
into
popf
jns
ds
and
and
das
adc
ljmp
ds
stos
or
adc
arpl
mov
xchg
insb
cs
nop
add
ss
ljmp
test
insb
mov
sub
popf
bound
dec
movsl
shr
scas
daa
jle
xor
shll
and
mov
mov
xor
movsb
xchg
mov
mov
or
fsubrl
mov
sbb
sbb
lahf
dec
push
flds
divl
sub
fld
jns
lret
pushf
mov
mov
xor
and
aam
aam
push
jae,pt
or
stos
clc
jmp
leave
outsl
add
sub
jge
je
je
aad
xchg
mov
sarl
pop
cmpsl
sub
movsl
jp
insl
rcll
cmp
mov
fadds
in
add
jae
jg
mov
xchg
push
xchg
out
pop
insl
mov
pop
mov
stos
sahf
jbe
xor
bound
clc
shlb
adc
pop
lcall
and
mov
pop
gs
mov
push
push
lds
stc
gs
pop
sbb
frstor
repnz
lods
jge
ja
dec
dec
call
jb
add
roll
test
scas
enter
xor
scas
jecxz
xchg
into
ret
std
pop
sub
imul
xor
xchg
sti
sub
clc
dec
xchg
mov
cli
mov
pop
cmp
xchg
ret
push
jnp
arpl
jp
mov
dec
stc
outsl
cmp
pop
sub
and
sub
fnstenv
dec
shl
je
repnz
jnp
fsubrs
out
dec
fs
sbb
mov
fnstenv
imul
cmp
les
pop
dec
insb
lahf
xchg
or
addl
sbb
clc
test
mov
cmp
jnp
jns
jbe
pop
das
cmp
insl
pusha
or
mov
push
adc
pop
sahf
jnp
fcomps
aas
arpl
negl
xor
inc
inc
ljmp
and
cmp
sbb
adc
lea
pop
jne
inc
xchg
add
fldenv
add
pop
fbld
lret
test
jl
fdivrs
add
movsb
or
shlb
popa
lods
lods
stos
ss
test
idivb
fucomi
xor
mov
stos
sub
repnz
aam
adc
scas
pop
mov
or
adc
lcall
aaa
add
roll
pop
popf
lock
mov
push
pop
ss
sbb
rcll
roll
test
aas
push
pop
into
xlat
movsl
inc
dec
pop
adc
push
adc
mov
repz
mov
pop
push
mov
sbb
mov
add
loope
sbb
addr16
push
pop
adc
enter
scas
inc
sub
dec
push
mov
pop
iret
push
cmp
daa
push
lret
in
sub
fstl
daa
repz
xor
std
cwtl
leave
nop
mov
rcrb
mov
hlt
repnz
mov
sbbl
sbb
jl
push
jns
insl
pop
jp
push
xchg
enter
lahf
pop
nop
jl
shlb
cmc
out
into
imul
xchg
das
jmp
inc
scas
xlat
cmp
add
push
jl
adc
mulb
dec
adc
xlat
cmp
out
pop
ficoms
out
cmc
push
xlat
push
fisttpl
stc
subl
lods
insb
dec
sbb
push
imul
mov
cmp
cmp
adc
js
adc
lods
aam
loop
jmp
lahf
xchg
sub
mov
xor
aaa
int
std
cmp
cmp
mov
stc
xor
push
out
insl
and
aad
rorl
xchg
mov
mov
push
int
arpl
data16
pop
mov
or
push
adc
and
mov
pop
xor
xor
lret
mov
mov
fnstcw
and
or
push
popa
xlat
pushf
cmpsb
repnz
in
cmp
in
jo
jmp
test
loop
pop
cmpsb
rorb
pop
and
pop
adc
mov
popf
push
in
adc
adc
aas
or
mov
sub
push
rorl
mov
inc
add
scas
xchg
insb
jmp
mov
mov
mov
adc
mov
test
daa
movb
push
and
scas
nop
adc
xorb
xchg
and
clc
gs
test
inc
fistpll
rcrl
mov
jnp
or
out
mov
add
mov
add
mov
and
rcrb
add
add
add
add
add
inc
in
add
add
add
add
add
add
lock
add
add
add
add
add
addb
add
stos
add
ja
mov
jo
jo
add
add
add
add
or
outsb
jne
or
or
adc
add
add
add
adc
add
jge
add
add
in
mov
arpl
rolb
add
add
sbb
add
inc
sub
add
add
add
add
add
and
jo
gs
inc
jae
inc
push
imul
add
psrld
ror
sub
jmp
xchg
adc
inc
pop
in
pop
incl
mov
cld
add
orb
adc
add
add
add
in
push
push
dec
fs
push
rolb
lret
in
mov
mov
mov
cmp
add
push
daa
insl
stc
add
xor
inc
pop
pop
add
lock
jmp
cmp
add
clc
mov
loope
std
lods
movsl
and
cld
cld
push
mov
add
mov
push
aad
incl
add
cmp
clc
loopne
add
lret
sub
mov
fidivrs
adc
lock
push
jne
call
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
pop
add
add
imul
gs
outsl
outsb
outsl
insb
test
imul
xchg
push
add
jbe
je
arpl
dec
xor
inc
insb
jb
addr16
jge
add
imul
inc
popa
gs
push
dec
lods
cli
sbb
add
popf
and
sarb
movb
into
mov
sbb
dec
and
mov
lea
add
in
push
testl
inc
es
mov
nop
inc
add
arpl
sub
sbb
jg
or
adc
inc
mov
pop
and
jle
into
adc
and
cld
adc
xchg
dec
sub
mov
sar
in
cmp
pop
and
push
ret
inc
inc
xchg
repz
fbld
pop
inc
push
sarl
add
leave
repnz
dec
dec
aas
jno
pop
sbb
jns
sub
stos
stc
jg
mov
aad
mov
js
lds
push
pushf
mov
adc
adc
gs
cwtl
pop
mov
inc
loop
fcoml
mov
sub
jle
fxch
xorl
cmp
sub
mov
dec
adc
pop
ljmp
jne
mov
jle
sub
add
decl
sbb
test
push
test
add
test
loop
jne
aaa
jnp
iret
and
cmp
cmp
adc
mov
aad
repz
cmpsl
mov
mov
ss
mov
and
mov
add
rolb
test
dec
ds
cmc
or
sti
cmp
sub
je
jo
xor
or
pop
icebp
xlat
add
ljmp
mov
mov
enter
mov
cmp
sub
xor
scas
popa
mov
sub
sbb
test
inc
jnp
out
cvtdq2ps
in
andb
xchg
dec
xor
js
scas
in
push
push
push
lods
outsb
aaa
dec
hlt
mov
push
adc
mov
cmp
lods
insb
insl
addb
repnz
dec
xor
mulb
xchg
inc
fldl
mov
je
lods
push
push
and
mov
mov
test
and
std
sbb
cmovge
dec
in
sbb
cmp
fs
adc
mov
int
push
leave
lock
rclb
stc
sub
cmpsl
push
aaa
push
icebp
xchg
sbb
xchg
lcall
adc
cmpsl
in
pop
ja
mov
sbb
and
subb
test
inc
mov
jp
insb
mov
test
scas
pop
add
sub
fsubl
das
sub
mov
jg
cmp
xlat
push
das
sbb
aas
sahf
divl
cli
ret
sbb
fistpl
xor
imul
dec
sbb
pop
incl
xlat
aaa
aas
inc
je
inc
sub
in
fmul
loopne
test
dec
incl
mull
jecxz
insb
jge
add
push
stos
addl
pop
and
imul
scas
pop
stos
imul
das
adc
dec
cmp
jbe
out
cwtl
gs
idivl
xor
ret
pop
movsl
std
in
sub
mov
orb
jl
in
dec
adc
mov
shrl
and
fldt
fisttps
sub
dec
mov
notb
mov
or
lods
lock
xor
dec
test
imul
dec
adc
lea
jg
and
inc
xchg
fwait
stc
sbb
jmp
clc
out
sub
add
cs
cmp
dec
add
and
xlat
jo
push
mov
std
jae
mov
inc
and
sbb
clc
das
or
scas
leave
jg
fisttpll
sub
fimull
push
mov
jmp
adc
jmp
sahf
cs
mov
xchg
xor
jb
or
mov
imul
adc
inc
or
mov
fwait
jl
je
ret
out
sub
dec
addr16
hlt
jecxz
xor
lods
cmp
aaa
mov
push
or
sbb
cmp
lock
cmp
pop
xchg
inc
xor
add
into
hlt
dec
dec
xchg
cmp
pop
ja
add
sbb
push
push
push
out
push
scas
pop
ficoms
hlt
push
inc
add
sbb
pop
shl
ljmp
mov
sub
jne
xor
pop
lahf
xor
out
or
insl
adc
int3
push
jge
fstl
mov
imul
shlb
push
mov
adc
ja
mov
enter
xchg
stc
or
mov
loopne
push
fisubrs
jge
ret
stos
lock
inc
sbbb
lock
aaa
inc
xor
stc
lods
jg
mov
xchg
leave
xchg
lret
outsb
lcall
sub
pop
fildl
jge
dec
dec
hlt
mov
cld
and
adc
add
jp
push
mov
mov
cmp
les
loop
test
js
das
out
inc
lock
cld
mov
sub
xchg
jbe
mov
scas
cltd
inc
lret
sub
xor
pop
adc
movsl
loope
cmp
arpl
and
jge
cmp
lret
loope
or
sahf
adc
mov
shll
outsb
and
popf
out
mov
ds
inc
outsl
scas
stos
xchg
cld
inc
push
sub
pop
push
mov
push
into
stos
xchg
lret
inc
cmp
sbb
addb
test
mov
pop
call
stos
xor
ja
xor
fwait
xchg
clc
popf
mov
inc
movsb
in
adc
mov
adc
ret
lret
push
ret
out
sbb
outsb
cmp
mov
fs
pushf
xor
push
xor
and
pop
mov
jns
cmpsb
mov
jae
bound
push
jmp
inc
popa
fadds
inc
mov
dec
or
add
into
xchg
xor
pop
ss
add
adc
pop
out
je
adc
adc
cmp
inc
ljmp
mov
cmp
and
cmpsl
fisubrs
xchg
loop
xchg
roll
mov
add
sub
lret
xchg
ja
aam
cmp
or
jbe
ret
dec
or
sub
fxtract
popf
xchg
mov
sarb
xor
cmp
xchg
icebp
jnp
les
push
mov
addr16
das
sbb
insb
je
popf
add
push
lret
jl
pop
or
js
fdivs
aaa
push
dec
add
dec
cmp
fimuls
inc
ficomps
sbb
xor
repz
xor
ss
add
sbbl
inc
mov
cli
jne
pop
popf
xchg
xchg
mov
mov
sub
lcall
xor
ret
dec
icebp
sub
das
xor
add
mov
pop
mov
into
push
addr16
inc
sub
jge
int3
jb
jno
or
mov
add
div
xchg
cmp
and
outsb
xchg
dec
and
pushf
subl
pop
or
loopne
jno
mov
fs
sub
leave
mov
cli
outsl
mov
movsb
sbb
fisttps
cmp
push
mov
outsb
imul
lock
subb
aas
cli
sbb
cmp
in
mov
add
cmp
call
fimuls
jno
adc
add
xchg
out
into
dec
jecxz
loop
clc
movb
nop
and
stos
xor
jmp
mov
mov
or
movsb
sti
sbb
call
lea
loopne
sub
jl
mov
cwtl
sub
mov
mov
push
lods
jecxz
push
dec
inc
xchg
loopne
icebp
push
mov
xor
xor
push
adc
sub
sbb
sub
fadd
or
sar
push
xor
push
jne
test
sbb
mov
xor
xchg
push
pop
fmull
push
xchg
jg
imul
mov
or
cmp
and
fldcw
repz
in
push
jbe
xchg
fstl
mov
les
sub
lods
je
sub
in
dec
adc
sarl
loopne
mov
out
aaa
dec
test
mov
cmp
xor
mov
adc
loopne
outsl
or
xchg
lahf
cmp
shll
aad
mov
int
inc
dec
addb
fldcw
or
movsb
xchg
pop
fwait
mov
insb
mov
inc
les
cmp
xchg
notl
arpl
mov
mov
js
sbb
ds
mov
cmpsl
rcrb
mov
mov
add
repnz
sub
sbb
inc
pop
cmp
cld
pop
pop
adc
lods
pop
jl
sti
pop
pop
sub
or
mov
xchg
sbb
jge
lret
repz
cltd
sti
ret
xchg
or
xor
jmp
iret
nop
add
sarl
cmp
adc
jecxz
mov
and
dec
inc
and
lret
fcoml
sbb
add
div
push
sbb
ret
mov
cmc
and
and
not
xchg
loope
xchg
fwait
mov
mov
mov
clc
rcrl
mov
pop
sbb
stos
pop
inc
sub
popf
call
ss
cmp
in
stc
jl
test
sbb
outsb
enter
lock
mov
pop
ljmp
inc
lds
mov
add
xchg
paddsb
aas
jno
dec
and
ss
mov
cmp
cltd
dec
sbb
fs
push
mov
inc
mov
push
lret
nop
hlt
insb
aad
pop
sub
ds
dec
std
or
stc
aad
iret
inc
andb
add
or
push
mov
jp
jbe
xchg
ja
cli
ret
push
stc
add
dec
mov
and
cmp
out
cmpb
mov
add
stc
mov
pop
jg
sub
mov
stos
lock
jo
mov
push
xlat
movsl
imull
mov
push
mov
mov
cmp
cltd
xchg
fs
scas
mov
add
aad
inc
sti
fldl
mov
jl
inc
mov
mov
xlat
or
sti
into
jl
xor
in
jo
into
test
mov
xchg
pop
sub
in
mov
movsl
and
xor
mov
decl
shll
imul
test
adc
rorl
test
push
or
roll
sbb
cmp
repz
ss
pop
ds
sbb
mov
repz
sub
xchg
push
cmp
ds
jbe
mov
ss
mov
out
sub
xorl
jno
in
dec
fisttpll
dec
fs
test
sub
sub
in
mov
dec
stos
xchg
mov
push
ffreep
jle
pop
out
add
push
xchg
cmp
mov
mov
mov
lock
cmpsb
jmp
rcll
and
push
or
xor
ret
sbb
ds
mov
add
inc
frstor
pop
jl
or
rorb
jmp
xor
adc
std
cmp
enter
adc
sbb
pushf
pop
scas
xor
or
jp
push
fcomps
fwait
sub
leave
add
mov
lret
and
cmpsl
xor
daa
xchg
sbb
inc
xor
and
xchg
lea
pop
jae
mov
sbb
jo
pop
push
mov
jns
arpl
add
lods
inc
icebp
in
add
daa
jne
xchg
fucomp
mov
jne
popw
das
imul
pop
int3
cmp
sub
pop
test
dec
pop
and
push
or
jne
rcl
push
adc
mov
cli
js
jge
jno
pop
int3
push
shll
es
push
arpl
mov
mov
jae
adc
xor
loop
adc
jmp
loop
sub
mov
dec
jne
mov
sarb
int3
cmpsl
sub
push
in
xchg
xor
xchg
lods
loope
adc
cmp
adcb
into
pop
adc
push
jbe
push
and
aaa
int
jne
scas
dec
add
or
xchg
cmp
dec
cmc
les
mov
pop
or
and
aam
loope
sbb
hlt
jb
push
or
xlat
push
mov
jnp
dec
sti
pop
test
mov
jb
pop
and
or
fdiv
xor
stos
repz
inc
push
fdivs
and
outsb
push
or
push
pop
fcomi
jo
xor
inc
mov
sahf
in
in
mov
adc
jmp
je
fdivrp
cli
push
sub
and
repnz
add
xor
mov
in
cmp
mov
xchg
iret
fstl
or
shrl
inc
dec
fcomps
pop
ret
mov
add
push
dec
movsl
jne
adc
mov
fisubl
pop
fiaddl
xchg
push
sub
fistpll
lods
mov
cltd
cmp
jecxz
sbb
insb
jle
mov
dec
sbb
dec
pop
mov
mov
mov
in
fs
mov
les
andb
pop
xchg
jmp
outsl
shr
jae
push
aaa
jp
loopne
pop
mov
imul
mov
movsb
je
sub
sbb
rcl
sbb
lods
ret
stos
iret
ds
adc
inc
sbb
popf
leave
outsb
dec
or
lods
push
and
sbb
add
lods
jge
push
out
inc
mov
sbb
xlat
or
imul
sbb
mov
sahf
bound
das
test
sbb
sti
js
pop
mov
push
lds
xchg
sbb
js
mov
fisttpll
push
push
mov
loop
iret
pop
outsl
xchg
dec
mov
or
sbb
sti
out
or
push
cmp
adc
mov
mov
dec
loop
xchg
push
aam
or
cmp
add
xchg
dec
pop
mov
lret
repnz
pop
push
in
xchg
repz
fwait
jecxz
xchg
dec
cltd
stos
shrl
xor
lret
jnp
xchg
popa
ret
and
repz
xor
cmp
insb
xchg
push
xchg
js
outsb
cmp
mov
pop
inc
fstl
mov
sbb
or
imul
jnp
pop
pusha
cmc
call
mov
repz
adc
or
cmp
mov
adcl
repz
aas
repnz
push
mov
mov
ljmp
int3
rorl
jmp
pop
cltd
aas
jae
pop
push
mov
sbb
and
pop
xchg
pop
push
dec
mov
cmpsb
daa
and
lea
mov
adc
mov
push
test
aas
rorb
push
push
scas
jg
mov
dec
into
in
mov
push
idivb
cmp
cmp
cwtl
das
push
sbb
stc
insl
lcall
jp
sbb
jns
xchg
jg
hlt
xor
jne
shlb
mov
enter
jno
push
int
adcb
stos
cmp
inc
jbe
inc
popf
lds
hlt
adc
jle
scas
ss
mov
jnp
cmp
mov
ja
fdivl
xor
sti
stc
adc
cmp
push
clc
pop
icebp
jl
cltd
dec
mov
adc
mov
add
repnz
add
pop
sbb
mov
xlat
rolb
shrb
fld
and
fstps
pop
imul
mov
jne
dec
jae
and
jne
push
add
dec
cmp
mov
repz
shrb
shlb
sub
lret
mov
jbe
add
das
aas
pop
ja
mov
insl
push
aam
inc
popf
outsb
adc
bound
inc
dec
cltd
sbb
les
push
add
and
ja
and
mov
mov
je
repz
outsb
adc
rolb
adc
xorb
fistl
fsubrs
push
ds
loop
popf
jmp
leave
mov
push
jae
aad
mov
adc
lahf
xor
xor
shl
into
fsubs
subb
enter
es
sub
cmp
add
adc
imul
jae
lea
out
pop
cmp
popf
pop
mov
mov
cmp
fisubl
pop
mov
in
fmuls
xchg
cmc
sbb
push
pop
mov
push
lods
fwait
lds
clc
mov
cmp
add
out
je
cmc
mov
xchg
cmpsb
imul
or
divb
adc
out
fistps
cmpsb
cmc
xchg
and
cs
insb
xchg
inc
movsl
add
cld
sub
push
stos
xchg
inc
jg
dec
in
mov
sub
orl
adc
int
fcomi
icebp
out
enter
into
sbb
push
decl
cmpsl
push
or
adc
lds
icebp
mov
xchg
jge
dec
out
cmp
xchg
jnp
mov
test
gs
mov
sub
jno
jecxz
jl
fnstsw
add
mov
xchg
inc
sub
adc
imul
dec
repz
pop
or
mov
cmp
pop
xor
push
or
leave
outsb
scas
sbb
leave
les
outsb
ret
or
lea
pop
insb
int
add
fcmovbe
fucom
push
push
inc
add
out
pop
lret
fistl
jbe
scas
outsl
daa
xchg
cmp
in
dec
xor
nop
inc
lahf
cld
lea
std
orl
xor
push
push
mov
loopne
cmc
cmp
push
mov
in
out
pop
les
pop
inc
ds
enter
fs
xchg
adc
lret
ljmp
sbb
xor
jne
js
and
jg
jecxz
bnd
sahf
mov
and
lahf
cli
or
xlat
lcall
lock
xlat
inc
inc
jne
lods
xchg
stos
jbe
stc
test
fsubr
icebp
mov
sub
xor
push
sub
jecxz
push
xchg
out
divb
inc
fistl
aas
repz
sbb
mov
andb
dec
mov
fstpt
xchg
mov
adc
pop
add
cmp
shlb
push
cmp
jns
lea
mov
in
enter
dec
stos
inc
loope
into
add
and
je
add
incb
adc
out
pop
gs
cmp
add
in
push
add
out
and
xchg
shll
and
jmp
lea
pop
jae
jle
dec
jne
int3
aas
dec
enter
mov
ret
out
pop
push
mov
les
push
xor
cmc
fwait
int3
ja
adc
cli
pop
fldl
xor
or
pusha
movb
pop
adc
outsl
mov
pop
jns
cld
out
xchg
inc
mov
outsl
xchg
pop
daa
lret
outsb
adc
jb
cmp
xchg
cmp
ss
fdivrp
in
cld
jnp
add
add
pop
movb
popf
loopne
leave
pushf
add
dec
add
xor
movsb
cltd
add
sahf
jmp
testl
rorb
push
xor
or
xor
cmp
mov
fnstenv
lods
jne
lcall
sbb
dec
pop
aas
push
iret
or
shr
and
or
push
or
inc
hlt
loope
shlb
cld
dec
mov
xor
insb
cmc
out
jbe
xor
arpl
rolb
iret
ljmp
dec
shlb
xor
and
out
sub
enter
out
repz
inc
mov
int
add
mov
leave
jbe
mov
add
or
lahf
fdivs
leave
cli
add
hlt
ja
sub
jo
loop
add
jmp
cmp
arpl
adc
xlat
xlat
add
bound
jl
pop
fidivrs
xchg
nop
gs
cli
mov
shl
out
mov
dec
cmpsl
dec
pop
dec
stos
cmp
or
divb
inc
test
push
lds
daa
xor
adc
pop
lea
dec
jo
pop
push
mov
jg
sti
add
adc
cmp
xchg
mov
xor
sti
jno
cltd
inc
push
mov
adc
mov
jmp
and
mov
xchg
lods
pop
iret
sarb
mov
data16
es
jge
add
fwait
popf
mov
xchg
daa
scas
fnstcw
lret
stos
ss
lea
out
pop
int3
add
push
push
and
fstpl
or
push
fdivrs
sbb
pop
mov
cli
aas
outsb
add
fimull
cmp
stos
push
stos
push
mov
and
cmc
cmp
fmul
pop
or
mov
and
adc
or
push
push
xchg
sti
push
out
clc
es
push
xchg
inc
or
ja
fldt
sbb
xlat
mov
inc
cmp
fwait
xchg
ja
fs
out
inc
cs
pop
adc
xchg
mov
sti
cmpsl
test
dec
xchg
popa
fdivl
xor
push
std
ja
mov
sub
scas
sbb
out
cmp
or
fwait
mov
and
push
sahf
jo
lahf
mov
rorb
or
adc
adc
mov
mov
icebp
scas
xor
pop
lcall
mov
pop
jmp
adc
and
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
mov
add
add
add
add
add
add
pop
sub
add
add
addb
add
add
stos
stos
add
mov
clc
clc
call
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
movb
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
add
jo
add
add
outsb
add
mov
add
add
add
adc
sub
add
add
add
add
add
add
add
gs
add
add
add
add
leave
xor
add
add
add
and
gs
arpl
pop
and
outsl
ja
dec
add
push
mov
out
sti
add
adc
cvtdq2ps
adc
decl
adc
inc
lea
adc
mov
decl
pop
decl
pop
xor
add
setb
add
mov
mov
fadd
add
push
add
ljmp
mov
lea
push
lea
adc
add
sub
loopne
add
adc
incl
call
push
adc
add
sar
stos
call
out
add
add
jne
push
ljmp
push
push
push
jo
pop
add
mov
enter
mov
loopne
add
jne
pushl
push
add
add
pop
add
jo
add
add
add
add
add
add
rolb
add
add
add
sub
add
inc
dec
adc
gs
gs
jo
sbb
fs
aam
inc
insl
jb
gs
insb
mov
dec
arpl
fs
push
js
push
gs
jb
addr16
dec
gs
push
in
push
jbe
cs
arpl
js
xor
add
add
adc
add
add
add
add
pusha
mov
add
add
add
add
cmp
add
add
add
jae
lahf
insb
fs
bnd
inc
js
popa
adc
ret
in
jg
iret
call
mov
mov
test
clc
push
mov
movsb
imul
scas
nop
xor
adc
mov
mov
inc
mov
je
mov
scas
jnp,pt
push
xchg
cmpsb
xlat
and
outsl
lods
jns
cld
cmp
push
aad
mov
scas
in
and
sbbl
fs
xchg
xor
sub
jp
and
pushf
cmp
out
loopne
call
test
inc
dec
mov
outsl
js
jae
cmp
int
cmp
push
mov
pusha
stos
fwait
xchg
cmp
jnp
jno
xchg
inc
mov
ja
and
pop
imull
jecxz
push
clc
ret
pop
aam
jle
sub
or
xchg
cmc
mov
mov
add
repnz
push
rcll
pop
outsl
cmpsb
cmp
aaa
inc
dec
jno
ror
push
enter
xchg
inc
stc
gs
aaa
iret
mov
mov
roll
test
std
add
and
jnp
lret
mov
or
jle
cmp
mov
sub
sbb
addl
stos
jb
mov
arpl
sbb
and
scas
loop
iret
xchg
test
sbb
push
test
leave
hlt
xor
dec
cltd
mov
ss
fs
icebp
jae
mov
pop
lock
sbb
and
addr16
push
sahf
sbb
test
sub
loope
mov
jno
add
repz
cmp
mov
aaa
push
xor
imul
nop
or
fcoms
jo
inc
outsb
push
imul
push
push
in
adc
push
xchg
std
xor
xchg
inc
test
inc
sbb
mov
jo
pop
pop
les
fsincos
rcrl
mov
jmp
fcoms
push
inc
cmp
outsb
je
xchg
gs
jecxz
xor
add
push
mov
push
sarl
mov
ja
cmp
repz
aad
js
fistl
loop
clc
mov
dec
scas
pusha
inc
xor
mov
or
sub
sub
sub
cmp
scas
pop
scas
and
push
push
cmp
add
cs
gs
or
insb
xor
pop
out
jbe
xchg
aas
sarl
push
fdivl
push
jno
repz
stos
arpl
adc
repz
repz
scas
jecxz
jne
fidivrs
hlt
push
es
cs
out
jl
lahf
ja
ds
addb
mov
insb
icebp
inc
pop
gs
subl
inc
cmpsb
mov
cld
shrb
or
in
std
mov
push
call
sub
xor
sti
hlt
and
js
push
lcall
test
or
addr16
add
push
dec
jge
mov
mov
cs
pusha
mov
inc
cmp
or
fstpl
sbb
in
xor
push
add
fnstcw
mov
insl
ds
lahf
ret
xchg
mov
movsl
mov
mov
insl
loop
mov
in
outsb
adc
add
outsb
fptan
pushf
jb
and
call
push
das
adc
sbb
sub
xchg
sahf
lret
cmp
mov
pop
fcompl
mov
test
iret
xchg
mov
adc
repz
adc
dec
mov
lds
and
js
inc
ljmp
imul
cld
pop
xchg
testb
mov
inc
and
sub
cmp
xor
mov
adc
push
jge
adc
pop
xchg
xchg
nop
cltd
sbb
movsl
lret
mov
fdivrl
or
jp
and
lret
iret
fildl
sbb
pop
push
or
push
xorb
adcb
jge
push
lcall
movsb
xchg
cmpb
leave
imul
add
cmc
jne
pop
std
popl
mov
dec
pop
lcall
test
rcrb
js
sub
lods
cmp
fsubr
ret
mov
stos
adc
ror
mov
call
push
inc
call
jae
pop
mov
dec
push
jl
jb
add
mov
enter
or
or
mov
repnz
js
jge
gs
orl
add
push
mov
loop
lea
jmp
xsave
push
and
lret
mov
iret
add
push
in
jp
leave
mov
call
lret
xchg
mov
movsb
inc
or
mov
push
dec
sbb
or
fs
lcall
dec
push
in
sub
jbe
in
push
xchg
call
ja
or
mov
pop
or
xchg
xchg
loopne
mov
dec
xlat
loopne
je
test
pushf
popa
and
sbb
stc
out
or
inc
test
in
dec
pop
jecxz
ret
add
push
xor
sahf
lcall
inc
or
imul
and
pop
xor
dec
lods
rcll
cld
shll
and
movsl
jne
inc
and
fsubr
inc
dec
in
add
pushf
fsubs
jmp
adc
pop
adc
pop
ret
mov
dec
cmpsl
scas
lods
or
xchg
mov
sub
inc
mov
and
sbbl
scas
push
insb
mov
lcall
fs
mov
add
rcrl
je
into
mov
adc
jne
mov
sub
mov
bound
pop
cwtl
lret
and
adc
inc
pop
lcall
test
xchg
sahf
ja
fistl
mov
arpl
add
stos
xor
mov
xchg
dec
adc
aaa
xchg
push
lahf
test
rolb
rsqrtps
dec
jp
dec
cmp
jnp
lods
mov
add
in
xchg
xchg
pop
mov
ljmp
shlb
mov
add
shll
or
lret
cld
das
cmp
adc
push
nop
jno
push
adc
or
dec
test
mov
pop
adc
adc
loop
std
mov
enter
push
addl
mov
outsb
push
mov
test
jmp
or
iret
in
sbb
shrb
test
pushf
jp
xchg
cld
rorb
fnstcw
enter
mov
dec
out
sub
iret
lahf
lds
icebp
or
cmc
or
xchg
mov
jmp
push
mov
leave
add
dec
xchg
cli
push
mov
add
jns
cmp
jmp
mov
in
call
add
jge
fwait
add
outsl
add
mov
dec
scas
insb
icebp
sbb
xchg
test
cmp
sbb
sbb
lods
stos
ret
cmp
shll
fdivl
jecxz
filds
jbe
lret
cmpsl
push
popa
mov
cs
mov
dec
xchg
push
ljmp
add
mov
xchg
shrl
xchg
jns
leave
pop
js
mov
mov
adc
test
out
rcrl
test
stos
mov
pop
adc
daa
pop
add
or
test
dec
rorl
iret
nop
sbb
jo
mov
xchg
stos
mov
repnz
xchg
mov
aas
pop
adc
mov
cmp
icebp
sub
add
bound
enter
out
xlat
ds
orl
sahf
push
fs
loopne
xchg
add
vpmacssdql
cmp
mov
xor
cmp
jl
add
pop
int
push
in
inc
fbld
sti
pop
xchg
sti
jmp
ss
dec
icebp
in
loope
mov
ja
mov
lea
add
fimull
inc
rorl
sub
mov
cmpsb
xor
aad
jno
add
stc
sbb
mov
icebp
iret
pushf
orb
pop
bound
clc
int3
test
push
mov
sbb
mov
inc
pop
aam
xor
bound
dec
push
loop
testl
sub
fistps
cmc
push
rorb
xor
movaps
or
dec
mov
xor
repz
shlb
lds
int3
out
sti
jg
setp
jle
add
int
fisttps
pop
ficoms
push
pop
lcall
jae
cmp
inc
or
ret
cmpsb
pop
xchg
or
clc
jbe
pop
out
test
lods
test
mov
dec
nop
sub
jge
mov
ficomps
leave
test
dec
or
xor
mov
adcb
adc
stos
dec
int
aam
imulb
out
xchg
arpl
pop
sub
cmpsb
aad
fldenv
cmp
jb
dec
rclb
inc
inc
addb
jnp
ret
cmp
clc
sti
lahf
stc
xor
or
or
icebp
movb
out
int
push
popf
mov
cmp
and
pop
rorb
xchg
jmp
js
adc
popf
inc
sbb
adc
nop
mov
std
leave
push
cmpsl
lock
add
sti
or
cmp
insl
or
call
pop
test
shrl
pushf
pusha
out
mov
imul
fstp
leave
das
outsb
push
loope
lods
pop
xor
mov
das
jae
in
rolb
xorl
adc
jmp
pop
mov
sub
cmp
xor
out
cmp
jp
cld
leave
and
mov
fdivr
iret
aad
xchg
lock
aad
sub
pushf
stc
stos
out
push
popa
rclb
pop
aaa
mov
fisubrs
stc
cmp
fwait
lods
sarl
int3
repz
aam
inc
lret
push
cli
hlt
xchg
aas
mov
inc
fstpl
subb
sbb
andb
jmp
pop
fcomip
je
icebp
sbb
mov
inc
scas
pop
push
xchg
ja
addb
subl
lods
js
jmp
arpl
cmp
outsb
sahf
push
divb
imul
push
jo
rcrb
cmp
das
sbb
xchg
adc
movsb
jnp
xor
out
xor
jno
hlt
popf
cmp
inc
jae
ljmp
dec
or
jg
mov
clc
inc
push
bound
mov
push
jecxz
push
fnstcw
push
pop
fcos
in
jp
stos
mov
int3
arpl
jns
inc
add
out
xchg
xchg
jo
dec
addr16
mov
xor
xchg
xchg
push
cmpsb
adc
int3
shrb
adc
test
outsb
icebp
pop
shll
sahf
add
fisttpll
mov
mov
cmp
dec
shrb
add
jp
cmpl
mov
add
fwait
mov
adc
pop
rcrl
hlt
mov
sub
mov
test
mov
roll
adcb
aad
lods
add
pop
mov
push
popf
add
dec
sbb
shl
xchg
bound
adc
xor
pushf
stos
mov
add
pusha
je
sub
xchg
test
das
loope
cli
inc
jbe
mov
xlat
xor
insb
data16
enter
cmp
out
mov
push
out
push
xor
sbb
mov
lods
mov
sbb
inc
fadd
cmpsb
das
hlt
add
dec
inc
push
xor
sub
std
stos
sbb
enter
and
or
or
inc
shll
push
lock
outsb
push
shlb
pop
leave
sub
push
cli
pop
xor
add
jg
nop
outsb
in
xchg
les
mov
fstpl
pop
outsl
negl
std
out
repnz
aam
inc
and
repnz
fidivrs
aad
xchg
ds
inc
in
mov
mov
cli
mov
push
jmp
movhps
lds
mov
xchg
jge
dec
adc
test
nop
test
jb
xor
push
andb
cmp
push
and
orl
leave
and
fadd
dec
ja
fdivrl
lret
add
orb
shrl
lods
and
jns
pop
mov
cmpsb
push
mov
jle
lea
imul
inc
fimull
pop
mov
bound
or
mov
int
mov
movsb
nop
ret
push
cmc
sub
inc
cmpsl
inc
dec
cmp
jbe
jb
jnp
popf
gs
push
rcr
jb
pop
insb
lret
outsb
loop
rorb
sbb
jno
inc
xchg
jle
movsl
jo
cmp
test
mov
sub
dec
jge
mov
jns
sbb
mov
in
lods
and
lods
inc
iret
addps
daa
add
mov
pminub
cmp
jge
in
mov
xor
jne,pn
cmpsl
scas
lds
das
fldt
jo
bound
mov
lds
addr16
popf
cld
mov
add
jp
push
jle
fwait
aas
out
ficoms
push
fwait
mov
adc
daa
insb
mov
inc
and
bound
dec
iret
scas
adc
je
jnp
int
cmp
lea
push
dec
dec
adc
test
sbb
or
scas
out
lds
mov
mov
dec
push
jl
mov
cmpsl
into
das
ret
iret
aad
xchg
push
in
xchg
lret
addr16
fwait
and
nop
push
adc
adc
test
cld
outsl
mov
es
inc
dec
adc
bound
ss
in
rcll
aam
gs
pop
adc
mov
pop
or
in
cs
jne
in
hlt
pop
cmp
jnp
cmp
push
bound
push
sbbb
fbstp
adc
mov
jo
in
int3
and
popa
mov
and
icebp
mov
sbb
je
incl
cmp
sbb
in
aas
shrl
mov
rcll
or
jecxz
xchg
imul
mov
sub
mov
fsubl
ljmp
xchg
mov
cld
cli
sub
xlat
jnp
pop
loope
lcall
adc
int3
fcomps
and
data16
mov
mov
adc
rorb
hlt
cs
mov
fists
sahf
pop
dec
cmpb
fwait
add
mov
orl
sbb
ds
jp
mov
mov
cltd
lds
rorb
fldt
dec
push
addl
outsb
call
add
lock
in
and
ljmp
xchg
shll
jmp
sbb
or
dec
fisubrl
ljmp
cs
jne
sahf
data16
lret
ljmp
int3
lcall
dec
icebp
cmpsl
or
call
arpl
mov
lahf
dec
mov
or
pop
xchg
fmull
bound
mov
inc
xor
xor
mov
adc
ds
cltd
adc
inc
hlt
ficompl
aas
es
dec
jecxz
xchg
cmp
mov
inc
xor
outsl
mov
div
jecxz
test
push
jnp
adc
movsl
and
es
push
fs
jno
inc
cmp
addl
inc
popa
into
out
imul
and
push
jns
lods
jge
push
or
fs
dec
adc
cmp
mov
in
mov
sub
inc
jp,pn
cmc
rorl
in
les
pop
cmc
pop
outsl
sbb
std
jge
in
xchg
int3
rorb
pop
xchg
lret
int
pop
ret
shlb
jp
std
shrb
dec
xor
in
flds
aam
daa
or
inc
arpl
xchg
sub
mov
pop
shl
add
jae
jnp
lea
fists
cmp
int3
shlb
int3
add
js
jne
lcall
xor
xchg
add
cmp
jne
inc
dec
mov
jecxz
adc
negb
jne
xchg
xor
in
add
call
adc
popf
pop
sub
rcll
loop
mov
mov
stos
jbe
mov
and
cmpl
mov
add
sub
nop
sub
fcoml
stos
fisubrs
in
shll
lret
jl
adc
pop
or
fdivl
fwait
xor
insl
movsb
sub
scas
in
jge
arpl
stos
cmp
jge
cmpl
shlb
jbe
rorb
jecxz
inc
je
inc
mov
or
rcll
sbb
pop
add
xchg
jmp
cltd
hlt
cltd
out
sub
mov
push
aaa
lahf
shlb
je
dec
sahf
pop
idiv
mov
mov
mov
cmp
jg
xchg
jl
add
mov
bnd
push
mov
movsb
les
ss
dec
icebp
mov
jmp
in
mov
sub
jecxz
das
cmp
popf
inc
pmuludq
push
or
int3
or
scas
cli
out
in
mov
sbb
dec
lret
xor
arpl
push
in
jae
movsl
sub
ret
xor
std
lea
ficompl
sbb
aam
and
aad
mov
pusha
lods
test
in
addr16
mov
js
cmc
loopne
cli
add
dec
in
sahf
fwait
aaa
adc
pop
jmp
xlat
nop
mov
inc
in
mov
jno
scas
inc
add
addr16
fs
dec
sub
loopne
into
fimuls
dec
loopne
pop
pop
push
xchg
dec
ret
jl
iret
inc
mov
stos
cwtl
pop
hlt
xchg
jo
lahf
dec
ja
mov
sub
mov
lods
push
in
jp
dec
lds
xchg
dec
ds
and
mov
mov
sbb
push
int3
scas
ret
ljmp
stos
pop
inc
pop
ss
ret
outsl
dec
and
push
cmp
testl
xor
mov
cmp
pop
stos
rorl
mov
mov
fsubl
cmc
sub
adcl
push
pushw
push
inc
mov
ja
sti
adc
getsec
add
fdivrl
or
dec
ljmp
xchg
jecxz
or
pushf
cmpl
xchg
dec
dec
addl
push
out
sub
loopne
xor
cmc
stc
sti
subl
push
ss
sahf
movsl
in
mov
lret
inc
out
int
cmpb
out
and
inc
cmp
fxch
dec
push
fcompp
mov
int
jp
test
add
jl
push
pop
cmc
mov
dec
lods
cmc
and
popf
jne
sub
bound
fwait
ds
scas
test
xchg
out
scas
adcl
cmp
sbb
cwtl
or
sbb
mov
mov
stos
sti
sbb
adc
mov
rcrb
mov
cld
mov
popf
cltd
dec
jmp
pop
repz
sub
shrl
xor
xchg
push
lods
insb
adc
pop
inc
icebp
stos
push
inc
add
sub
adc
fcompl
arpl
scas
mov
inc
lcall
ja
ja
pop
mov
pop
pop
xchg
mov
xor
mov
daa
js
cmp
sahf
or
cmp
std
dec
mov
into
adc
mov
jl
aas
ljmp
mov
cs
dec
jg
lods
aas
fstpl
push
dec
mov
int3
and
pop
dec
mov
mov
clc
cmc
jg
mov
mov
inc
mov
push
push
pop
clc
adc
xor
mov
jg
dec
insb
call
mov
repz
add
cmc
adc
int
aaa
inc
das
jae
mov
add
fdivrl
cmp
adc
add
jge
xchg
sbb
lea
mov
scas
movaps
popa
ja
test
xchg
mov
pop
daa
aas
cld
mov
out
inc
push
and
and
mov
out
std
pop
mov
inc
insb
test
pop
cwtl
and
adcb
add
lret
mov
out
mov
jbe
and
dec
jge
lock
lods
pop
jno
and
ss
dec
inc
stos
xchg
dec
mov
mov
xorb
adc
push
lea
pushf
pop
xor
pop
xchg
fcompl
cmpsl
jns
cli
ja
inc
aam
fisttpl
sbbb
in
pop
movsl
and
lods
jl
mov
iret
movhps
notl
jmp
dec
out
push
dec
xor
pop
cwtl
jl
or
or
fmuls
pop
xor
sub
sarl
imull
mov
jne
adc
dec
sub
gs
add
ret
cmp
nop
leave
jge
xchg
xchg
pop
mov
jae
inc
lea
xchg
adc
movsb
mov
mov
fmuls
jg
jbe
das
aas
imul
sbb
popf
out
adc
and
out
fwait
or
mov
sbb
or
pop
addb
repz
xchg
push
sub
push
adc
rcrb
cmc
imul
arpl
fwait
leave
mov
and
out
leave
sbb
and
or
outsl
loope
xor
nopl
mov
add
push
fwait
mov
mov
subl
jl
cmc
cwtl
xlat
and
dec
pop
jne
lds
leave
xorl
icebp
test
testb
loopne
clc
xor
xchg
jno
aas
rep
mov
std
ret
decb
cmpsb
sub
std
push
xchg
inc
xor
cltd
popw
clc
pop
ja
pop
movsb
mov
lds
xchg
inc
pop
aam
mov
pop
out
pop
adcb
hlt
push
jmp
cmp
pop
inc
jnp
ja
xchg
jne
or
or
and
scas
in
das
inc
bswap
adc
fnstcw
rol
cmp
inc
stc
jg
pop
jbe
add
add
add
add
add
loopne
add
add
add
add
jo
add
add
add
add
add
add
rolb
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
ja
mov
jg
call
in
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
in
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
in
add
sbb
add
adc
add
or
add
add
add
cld
in
add
hlt
in
add
in
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
in
add
push
in
add
pop
in
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
out
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
out
add
pushf
out
add
movsb
out
add
lods
out
add
mov
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
out
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
lock
insb
lock
nop
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
psllw
add
lock
hlt
lock
in
lock
in
add
fdiv
add
aam
add
int3
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
icebp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
repnz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
repnz
insb
repnz
je
add
jl
add
test
add
mov
add
xchg
repnz
cmpsl
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
repnz
fdiv
add
in
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
