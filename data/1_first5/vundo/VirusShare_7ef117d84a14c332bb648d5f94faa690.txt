mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
mov
call
fdivr
scas
mov
push
or
or
pop
das
pop
aas
lods
iret
mov
in
cld
lahf
int3
scas
fcoml
insl
addr16
insb
and
das
pop
aas
lods
imul
int3
movsl
fmull
insl
push
jns
subps
pop
fmull
int3
lcall
out
jle
les
mov
pusha
xlat
call
je
int3
xor
fldl
in
lcall
pop
mov
mov
xchg
sbb
jb
cmpsl
mov
psubsb
inc
pop
test
dec
pop
outsb
jecxz
sar
mov
clc
imul
fildll
shrb
cmp
cli
mov
mov
das
xchg
pop
rclb
push
sbb
fists
mov
add
hlt
sahf
int3
outsb
faddl
insb
dec
or
aas
gs
leave
jl
mov
xor
or
xor
xor
sbb
jns
xchg
adc
dec
ret
pop
push
repz
mov
in
cld
lahf
int3
scas
fsubrl
or
sbb
insb
xor
aaa
pop
or
loopne
rclb
mov
mov
das
arpl
js
sbb
jo
pop
sub
mov
cltd
clc
pushf
aam
mov
cwtl
int
movsb
mov
push
sub
dec
daa
inc
nopl
inc
dec
fidivrl
xchg
lods
ret
cld
lahf
int3
scas
fdivrl
or
sbb
insb
pop
dec
das
pop
aas
lods
iret
mov
in
cld
lahf
int3
scas
fdivrl
or
sbb
insb
pop
dec
das
pop
aas
lods
iret
mov
adc
jecxz
rcll
jle
stos
pusha
sbb
sub
pop
dec
sub
out
lock
sbb
mov
movsl
lret
insb
das
pop
cmpsl
mov
and
enter
scas
les
mov
push
jo
aam
psubd
aaa
pop
pop
or
mov
pop
std
mov
pop
imul
mov
cmpsl
lock
xor
pop
mov
cwtl
and
mov
pop
mov
stos
repnz
andb
xor
sub
outsl
jecxz
xchg
add
cmpsb
imul
mov
adc
and
and
orb
dec
pop
cli
xchg
push
fcoml
cmp
int
shlb
mov
ljmp
push
inc
and
ret
sub
mov
push
out
mov
in
test
xchg
xor
dec
sub
add
mov
or
out
push
dec
add
inc
and
fdivl
ja
fsubr
test
sbbb
adc
jl
fidivs
sub
cld
loop
sbb
cld
into
xchg
cmp
aad
jb
lret
push
sub
dec
adc
mov
add
adc
dec
lret
pop
inc
pop
jne
faddl
xchg
insb
adc
jmp
push
clc
pop
cli
xor
je
aam
movb
jmp
or
push
add
lret
loope
add
adc
cmpsl
mov
mov
pusha
jo
xor
in
movsb
fldenv
in
cmp
mov
xchg
cld
in
lea
and
mov
les
jmp
fidivl
dec
data16
and
test
sahf
adc
jns
test
scas
jp
stc
movsb
sub
jns
cmp
in
inc
push
fstpl
ljmp
lcall
sbb
push
jno
fsubs
lock
int3
mulb
push
mov
int3
xlat
insb
xor
test
loope
pop
iret
repz
loop
push
mov
ret
push
stos
pop
and
dec
jae
xor
hlt
or
xchg
rcl
aam
add
lcall
mov
les
inc
inc
xchg
popf
imul
jnp
inc
rcrl
lods
aam
icebp
pop
pop
sahf
jg
mov
inc
adc
ljmp
mov
sahf
cli
cmp
pop
cltd
icebp
push
lret
inc
out
leave
popa
xchg
insl
rcll
add
or
sub
jno
stc
inc
cmc
mov
push
mull
xor
inc
xchg
pushf
xchg
popw
push
aad
xlat
lods
and
dec
sarl
jge
adc
sub
std
push
xchg
hlt
pop
mov
iret
les
or
idivl
push
push
cmp
cmc
inc
cmpsb
cmc
jbe
jo
movsl
es
push
jmp
xchg
cmpsl
mov
mov
adc
rcll
mov
fidivrs
sbb
movntq
sub
dec
xor
or
in
or
movsb
sbb
fidivrs
sub
adc
jecxz
loop
aaa
cmp
dec
mov
add
fisubs
aad
pop
mov
stos
jmp
mov
repz
mov
fwait
xchg
fistpll
xor
pop
js
jp
andb
addr16
into
insl
mov
push
lret
cmp
sub
lret
test
push
movsl
inc
aam
xchg
adc
mov
pop
lret
pop
loop
bsf
pop
sub
fldt
jecxz
cmpsb
lds
in
pusha
xor
add
in
jp
or
lods
scas
inc
mov
push
rol
jp
xor
sub
aam
sbbb
cltd
add
xor
and
out
mov
jge
test
jae
cli
inc
xchg
std
cvtps2pi
xchg
sub
out
fidivrl
sub
cmp
push
cmpsb
in
or
ret
fimull
insb
jecxz
roll
sbb
shll
repz
aas
test
xchg
and
int
and
rcrl
dec
repz
mulb
js
and
enter
sarb
pop
rolb
lret
fwait
aaa
and
leave
in
pop
cmp
in
insl
and
cltd
ss
outsl
jmp
pop
pop
adc
not
addb
or
push
sbb
mov
push
subl
add
loopne
mov
push
fcoml
jge
es
loope
jecxz
sub
insl
mov
xchg
cmp
sub
mov
push
pop
pop
aam
jge
mov
push
mov
fisttps
jl
cwtl
push
xor
sbb
jno
test
aam
dec
rcrl
outsl
mov
imul
bound
sbb
in
dec
sub
mov
mov
push
testl
adc
cs
xor
pop
pop
inc
shll
scas
scas
sub
aam
mov
faddl
loop
push
aam
fstp
jne
inc
out
sbb
jg
test
sbb
xchg
fdivl
mov
pop
enter
cmpsb
sbb
fst
jno
jmp
xlat
lahf
xchg
pop
add
stos
jae
mov
xor
adc
xor
xchg
sti
in
sahf
adc
mov
imul
cmp
xchg
imul
jle
push
mov
lds
pop
dec
xor
rcrb
fcompl
int
fistps
push
fstps
mov
fsubrp
lock
mov
mov
test
pushf
test
fwait
loope
in
movsl
cmp
ss
inc
jge
and
test
or
xchg
mov
pop
dec
fmuls
push
test
int3
jbe
aaa
pop
int
jns
loop
ss
popa
mov
in
rcr
inc
pushf
in
dec
jmp
mov
lret
arpl
dec
jbe
insb
lds
imul
jbe
push
and
filds
sti
inc
jg
pop
xchg
or
sub
aas
dec
xchg
out
or
adc
sbb
out
push
xor
and
xor
mov
repz
sub
jecxz
ja
ljmp
adc
js
lock
mov
mov
xchg
dec
mov
arpl
into
cmp
outsl
xor
sbb
shl
mov
rcrl
xchg
cmp
int3
ficoms
mov
nop
mov
mov
mov
test
mov
dec
jge
jb
xor
jle
xchg
pop
or
sub
inc
jecxz
cmp
data16
jae
jg
pop
fsubp
outsl
mov
sub
imul
pop
out
dec
addr16
pop
cmp
mov
mov
clc
pushf
cli
push
fs
jle
test
mov
es
and
lret
stos
roll
adc
ret
xchg
pop
pop
sub
into
sti
fldcw
dec
mov
icebp
lods
ss
pop
data16
scas
adc
shrb
arpl
leave
stc
add
cld
push
jle
rcll
js
and
cmp
or
scas
scas
dec
xchg
mov
or
out
stc
aaa
pusha
sahf
push
ds
shlb
and
add
jns
xor
out
adc
inc
enter
sbb
popa
ja
pop
mov
stos
test
loope
shl
imul
ret
stc
lret
and
movb
in
push
pop
inc
stos
mov
add
ret
pusha
add
test
push
xchg
sub
pop
lcall
xchg
outsb
and
insl
inc
int3
jo
subb
push
jmp
loopne
out
pop
cli
sbb
inc
pop
sarb
lods
mov
lods
mov
rclb
vucomiss
cmp
popa
in
fidivs
push
pop
movsb
inc
out
adc
jnp
iret
cli
imul
adc
into
adc
xchg
mov
adc
xor
fnstsw
lods
popa
rcrb
adc
js
scas
out
ja
enter
sbb
sbb
in
lret
jl
or
mov
xorl
fisubs
pusha
or
imul
dec
mov
xchg
leave
xchg
sub
pop
xor
mov
in
adc
sub
dec
ss
xchg
loopne
mov
xor
xor
test
sub
cmpsb
lcall
inc
and
mov
jns
dec
in
cwtl
mov
jle
sub
jb
shl
sahf
test
lcall
dec
insb
mov
and
jmp
and
sub
xchg
pop
sti
inc
frstor
stos
fstl
hlt
fisttps
shrb
dec
fdivrl
in
push
sub
mov
fdivl
pop
stos
or
adc
jecxz
movsl
shrl
adc
scas
cmc
or
outsl
mov
jl
dec
mov
sbb
sahf
mov
push
aam
sbb
ja
push
xchg
jnp
out
jno
pushf
lock
mov
rclb
cli
inc
std
cs
ret
in
mov
cmpb
push
lock
xlat
lock
mov
fmuls
and
xchg
pop
sub
aad
xchg
xor
roll
xchg
loop
bound
lock
mull
addb
jb
lret
or
in
fimull
jecxz
lods
ljmp
xchg
addr16
sbbl
shrl
push
pop
inc
pop
std
mov
inc
dec
fwait
js
mov
jae
and
mov
ret
sub
jl
fcoms
lahf
nop
arpl
mov
push
int3
inc
push
pop
loope
out
loop
jl
push
pop
mov
jae
rolb
movsl
int
and
mov
sub
push
mov
jecxz
out
in
xor
xchg
xor
lahf
push
pop
add
arpl
dec
movsb
pop
mov
call
jg
cmpsl
or
aaa
sub
mov
clc
and
inc
dec
repnz
int
push
push
loope
mov
push
xchg
adc
add
mov
test
rol
mov
repz
jecxz
sbbb
jnp
mov
mov
mov
out
inc
pop
or
mov
test
imul
xor
dec
mov
jnp
sahf
or
jnp
push
sub
orl
xchg
out
out
mov
or
rcrb
push
dec
pop
loop
iret
push
arpl
lods
sub
adcb
cmp
lea
lea
add
push
rclb
xchg
iret
jb
cltd
mov
or
arpl
dec
fsubl
xchg
dec
insl
push
clc
lods
mov
test
sub
jne
loope
mov
adc
and
sbb
les
jnp
sbb
in
ficoml
adc
stos
ror
inc
jae
popa
push
jae
fistl
push
pop
sbb
test
cs
arpl
fisubl
or
or
ja
adc
jmp
leave
ret
jbe
fyl2xp1
xchg
add
adc
in
test
mov
scas
in
push
sbb
jge
push
fs
mov
adc
or
jl
pop
dec
xor
pop
mov
inc
or
loop
dec
daa
pop
lods
add
into
mov
jecxz
xchg
cmp
sti
pop
mov
push
adc
dec
fidivl
inc
xor
rol
insb
out
movzbl
add
adc
cmp
add
add
mov
icebp
push
cltd
push
xor
mov
fidivl
mov
repz
dec
rcr
mov
cwtl
push
test
lds
repnz
sbb
cmp
imul
push
mov
sbb
dec
mov
dec
mov
xchg
ret
sbb
or
inc
sbb
add
push
xor
int
sub
sbb
inc
jno
mov
sub
or
fnstsw
mov
sub
scas
mov
cld
out
or
push
repnz
dec
dec
adc
mov
pop
or
mov
lahf
out
int
dec
push
fidivs
xor
dec
push
popaw
inc
xchg
inc
jge
adc
lahf
imul
sbb
lahf
lcall
ds
xchg
scas
sti
xchg
outsl
clc
mov
xor
movsb
loope
jbe
mov
out
test
inc
popa
jle
or
nop
cmp
aas
dec
aas
aam
ja
imul
and
mov
or
jp
inc
push
fsubr
bound
out
movsl
inc
xlat
and
cmpsl
fmuls
adc
lock
les
repnz
mov
jp
out
shll
add
roll
lock
xchg
pop
loop
sbb
add
adc
or
dec
mov
scas
shll
test
xor
sub
and
mov
add
cmp
and
popf
mov
and
lods
jae
jl
push
pinsrw
xchg
jne
pushf
xchg
jno
mov
int
loop
adc
cmpsl
repz
popf
inc
subl
inc
addr16
jnp
inc
sub
pushf
pop
in
add
jo
fsubl
sub
sub
adc
sub
lcall
ror
fistpl
shrb
xor
es
mov
arpl
stos
cmp
in
popa
cld
push
and
sub
subb
fs
imul
sbb
dec
mov
or
loope
call
push
or
fcomp
push
mov
arpl
sahf
mov
and
mov
adcl
ret
mov
push
add
stos
jp
aaa
clc
jb
push
aad
loopne
movsl
pop
es
lods
cld
negb
xchg
sub
dec
cmpsl
cmp
mov
dec
jb
ret
ds
mov
sahf
ljmp
and
shlb
mov
mov
mov
inc
pop
lret
aaa
repnz
mov
repnz
xor
xchg
jl
jl
leave
filds
fcomps
popf
shrl
and
push
push
enter
scas
sbb
les
jne
push
pop
cmpsl
cs
mov
xchg
jle
mov
jmp
out
push
into
ja
jns
cmp
cmp
jle
push
and
xchg
roll
lret
sti
sbb
mov
ja
inc
lss
xchg
lock
and
jns
hlt
les
xorb
sub
mov
jo
cmp
xchg
xor
lock
ret
les
mov
in
dec
mov
fcoms
aas
adc
xchg
sbb
pushf
addr16
cmp
sbbb
inc
call
lret
call
or
icebp
jle
xchg
mov
sbb
sub
cli
cmp
int
or
lahf
mov
cmc
inc
ja
les
pop
daa
adc
xchg
jbe
outsl
cmp
mov
cmpb
cltd
xchg
je
sub
add
pusha
lahf
pop
pop
cmpsl
mov
and
mov
out
xchg
ret
out
mov
pop
cmp
jnp
mov
pop
add
int3
sub
out
push
xchg
loopne
push
fnstsw
jmp
inc
mov
fwait
test
sahf
icebp
xchg
das
inc
and
mov
int
cmp
xor
and
xchg
sub
popf
inc
and
pop
adc
inc
jbe
imul
les
and
pop
out
ja
mov
push
clc
or
jp
xor
scas
shll
cmc
ds
fcmovnu
pushf
es
scas
jmp
dec
loope
xchg
dec
sahf
in
int3
popw
icebp
cmpb
add
push
ret
dec
adc
out
faddl
insl
sar
dec
sahf
xor
dec
or
aad
pop
out
jo
xor
fxch
hlt
repz
adc
cmp
rorl
pop
xlat
lock
fisubl
sbb
lret
cld
mov
les
imul
sbb
adc
nop
pop
push
lods
jmp
aam
adc
lods
and
out
add
pushf
mov
jno
lahf
sbb
xor
xor
rclb
movsb
jb
mov
sahf
cli
mov
mov
adc
das
pushf
fdiv
inc
insl
or
repnz
popa
mov
scas
sarl
jmp
cwtl
xchg
sub
les
loopne
fs
in
dec
cmp
push
das
and
mov
pop
int3
fwait
sti
cwtl
pop
in
sub
mov
push
rolb
aam
lret
and
pop
mov
push
mov
mov
nop
mov
cmp
stos
or
scas
pop
pop
dec
jmp
stos
movaps
enter
xchg
xor
aaa
adc
popf
push
popf
ret
cmp
andl
sub
jne
mov
mov
cmc
pushf
push
int
inc
add
jb
push
jmp
dec
mov
das
sbb
bound
mov
ja
in
inc
loope
inc
popa
js
sub
push
pop
out
adc
inc
jnp
cwtl
aad
mov
inc
mov
jg
pop
xor
push
or
adc
mov
fldl
pop
inc
sbb
nop
cmpsb
mov
repnz
jne
jne
cmp
sbb
punpckhbw
out
sub
sti
xor
repnz
outsl
jbe
inc
std
cmp
or
popa
mov
sub
mov
pushf
fistpl
cmp
sbb
adc
test
ss
xlat
push
xchg
mov
and
orl
jmp
mov
aaa
and
sub
imul
push
xor
pop
mov
inc
xchg
xchg
pop
test
xchg
dec
mov
sub
add
into
cld
in
xchg
add
das
scas
push
push
es
mov
cwtl
in
xor
dec
xor
xchg
mov
xor
xchg
adc
popa
or
bound
and
xchg
ljmp
mov
add
inc
mov
cltd
icebp
and
orb
mov
cwtl
repnz
ds
fimuls
das
mov
das
sub
mov
or
inc
or
adc
rcll
ficoml
test
outsb
push
or
cltd
icebp
mov
xchg
shll
adc
nop
push
fimull
mov
push
dec
mov
test
pop
pop
jmp
fs
or
lods
test
dec
cli
jle
mov
subb
mov
cmpsl
daa
jno
mov
rcr
cmp
sti
pusha
mov
push
jg
aas
ljmp
mov
in
pop
mov
enter
xchg
dec
rcrl
outsb
inc
sub
cltd
icebp
sahf
shrl
xor
orb
and
rol
push
iret
and
xor
std
out
lret
jns
popa
mov
cs
gs
lahf
jecxz
outsl
inc
das
mov
xchg
adc
loopne
data16
push
cmovbe
mov
cmpsb
aaa
scas
movsl
ss
lods
int
stos
push
stos
dec
xchg
jae
mov
push
mov
jge
inc
mov
and
push
pop
cmp
pop
lea
pop
je
push
xor
out
aad
idivb
xor
test
inc
pop
pop
dec
insl
add
dec
inc
lret
ret
int
sete
jmp
push
loop
fstp
enter
call
xchg
shl
inc
jnp
push
dec
and
loope
jg
jbe
int3
push
movsb
aaa
fstpl
out
js
sub
cmp
imul
sti
xorb
rcll
push
sub
movsb
xor
xchg
inc
adc
fcom
nop
xlat
rep
sbbb
add
aas
mov
stos
xor
js
sbb
jb
ds
pop
leave
inc
dec
jne
dec
dec
in
ret
mov
fstps
sbb
xchg
lods
inc
cs
int
jl
cmpsb
lea
mov
add
rorl
out
sarb
add
sub
ret
aam
adc
rclb
fisttpl
or
mov
es
push
jmp
inc
out
cli
jp
or
pushf
mov
test
pop
adc
data16
cld
movsl
sbb
push
fsts
mov
ret
lcall
pop
int
pop
pop
pop
ss
dec
daa
mov
iret
loop
inc
and
inc
push
add
dec
cld
push
incl
es
scas
xchg
adc
rolb
and
xchg
cmp
push
les
cmp
or
lods
inc
jecxz
dec
cmp
outsb
push
cmp
cltd
ficomps
push
dec
inc
int
inc
repz
xchg
stos
dec
push
call
mov
dec
cmc
mov
cs
inc
lods
mov
sub
push
xchg
and
adc
jecxz
jbe
jg
imul
push
mov
or
fistps
add
scas
dec
mov
pop
pop
aaa
dec
scas
jns
lret
ljmp
push
xorl
inc
enter
cmpsl
or
and
sub
xor
inc
int
mov
lea
nop
push
loopne
sahf
adc
mov
orl
in
int3
mov
ret
cli
lock
pop
mov
xchg
clc
mov
pop
mov
aaa
das
les
pop
jl
xchg
bound
cmpsb
jae
jb
xor
inc
movsb
lahf
jbe
mov
dec
cmp
flds
stos
lret
adc
jne
pop
test
negl
mov
in
lock
sbb
push
dec
ljmp
add
cli
shlb
inc
loop
sbb
mov
mov
pop
and
daa
cmpsl
dec
cmp
and
or
xchg
push
cmc
sub
adc
divl
xor
sub
and
aaa
out
inc
jecxz
or
mov
xchg
jbe
jecxz
ljmp
xor
xlat
push
cwtl
mov
in
xor
cld
push
lret
pusha
xchg
pop
inc
bound
popa
inc
add
pop
sub
adc
mov
xlat
mov
addr16
xchg
sub
mov
jb
inc
mov
mov
inc
scas
xchg
xchg
mov
ret
shll
push
mov
outsb
push
push
and
ja
mov
outsb
pop
and
repz
xor
dec
push
sbb
pop
out
aaa
mov
jno
xchg
pushf
ret
adc
call
aam
shrb
cwtl
stos
stc
jmp
add
or
roll
scas
pop
std
nop
mov
jecxz
out
dec
je
leave
sbb
mov
lods
lret
push
into
and
jp
call
imul
push
mov
push
jp
xor
jno
adc
xor
lret
xor
and
jae
testb
ss
aam
xorb
cwtl
icebp
xor
xchg
out
sahf
negb
push
xchg
mov
test
xlat
ss
dec
fs
adc
xchg
lds
addr16
pop
repz
mov
sub
stos
popf
rorl
lcall
add
xlat
pop
ja
das
or
xor
mov
mov
mov
adc
inc
mov
fidivrl
add
cmp
ja
push
icebp
cmp
mov
outsb
dec
sti
push
adc
xchg
out
inc
outsl
pop
cld
xchg
jo
mov
fwait
mov
or
mov
push
add
test
inc
ja
xchg
pop
fldt
cmp
ljmp
stc
notl
pop
je
adc
movsb
fwait
pop
mov
in
data16
cmp
dec
ljmp
int3
scas
fdivrl
or
sbb
insb
pop
dec
das
pop
aas
lods
iret
mov
in
cld
lahf
int3
scas
fdivrl
or
sbb
insb
pop
dec
das
pop
aas
lods
lret
mov
sti
in
cld
hlt
int3
stos
fdivrl
or
sbb
insb
or
es
fldt
or
int3
das
fdivrl
mov
cmc
cmpsb
outsl
sbb
sbb
addr16
mov
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
into
adc
and
fcompl
mov
dec
sub
outsb
mov
movsl
push
aam
les
in
in
adc
and
scas
jne
add
pop
test
jo
push
mov
lds
cmc
ds
adc
out
xchg
push
xchg
jne
gs
xchg
jge
xor
push
lret
push
xchg
jno
jb
imul
fucomp
sahf
stos
outsl
jbe
pusha
enter
out
es
push
pop
pop
mov
or
and
and
movsb
inc
sahf
enter
out
lret
test
xchg
dec
xorb
dec
shll
mov
mov
xchg
mov
pop
push
sub
stc
js,pn
sub
cwtl
into
adc
and
jae
push
lahf
inc
push
jge
test
imul
icebp
lds
and
sahf
aad
cli
arpl
push
sub
xchg
dec
push
nop
outsl
dec
mov
rcrl
adc
sbb
mov
roll
dec
les
cs
sbb
adc
and
scas
jne
gs
xchg
inc
test
movsl
push
aad
lds
mov
fs
adc
xor
adc
pushf
sbb
mov
push
andb
mov
push
sahf
add
lock
outsb
sarb
testl
nop
pop
mov
push
mov
adcb
addr16
inc
scas
jne
gs
xchg
pop
test
jle
push
aad
lds
cmc
ds
adc
and
scas
jne
gs
xchg
pop
test
jle
push
aad
lds
cmc
ds
adc
loop
mov
pusha
xchg
jp
and
push
in
and
testb
icebp
loopne
inc
sbb
cmc
xor
jbe
mov
les
dec
jl
iret
clc
xor
gs
mov
mov
jne
rcrl
mov
imul
addr16
pusha
repz
sahf
mov
sub
dec
sbb
mov
ss
or
xchg
cwtl
int3
mov
ret
adc
xor
jne
decl
shl
aam
idivl
movsb
xchg
adc
lahf
push
sarb
sahf
sub
movsb
filds
loopne
sub
mov
les
shlb
outsl
dec
and
out
mov
push
int3
aam
das
sub
xchg
jp
pop
popf
ja
ss
scas
in
adc
addr16
xlat
mov
mov
movsb
add
and
mov
movsb
jae
idiv
leave
fadd
mov
dec
pop
and
cmp
cltd
inc
jno
dec
sbb
lods
jp
fistps
or
lret
xor
or
or
and
add
dec
jecxz
and
iret
sbb
addr16
iret
ficoms
push
ljmp
dec
cmp
imul
or
gs
mov
jns
mov
sub
imul
into
mov
mov
in
shlb
lcall
mov
dec
sbb
mov
cmp
mov
pop
sub
es
out
push
imul
jb
push
out
mov
lret
jb
les
cmp
push
setle
rcrb
cmp
arpl
mov
and
ljmp
xor
xor
rolb
arpl
pop
xchg
cmc
inc
lock
mov
js
lea
repz
mov
negb
or
or
or
mov
inc
xchg
stos
or
push
sbb
xchg
mov
sbb
loop
sub
ss
dec
sub
push
arpl
orb
xchg
xorl
xchg
stos
std
enter
cwtl
pop
mov
sbb
mov
mov
rcr
outsl
mul
imul
xchg
inc
mov
inc
repnz
pop
mul
jp
orb
adc
adc
pusha
add
cs
inc
or
mov
push
scas
or
orb
push
js
test
vmcall
test
aaa
fwait
sbb
popa
test
nop
rcll
jmp
jne
test
push
xor
jmp
cmp
jmp
xor
jge
lret
mov
jle
pop
lods
das
jbe
fisubs
shr
cli
sub
lret
pusha
xchg
sub
lret
pop
and
in
out
inc
and
popf
ret
scas
adc
sub
in
inc
ja
pop
mov
xor
xchg
add
cmp
sub
insb
mov
popf
pusha
or
dec
pop
rcrl
loopne
cmp
dec
xor
inc
mov
insb
mov
pop
mov
ja
jg
shrb
push
cmp
dec
pop
fimull
sbb
sti
jl
mov
jg
adc
jp
dec
dec
int3
test
shl
icebp
jb
int3
fstpl
test
xchg
xor
leave
dec
fwait
dec
aas
add
add
call
adc
dec
push
xor
inc
loop
ss
dec
pop
xchg
and
or
jp
out
jb
out
scas
xor
roll
sub
xor
lock
decl
sbb
inc
and
scas
sbb
orb
jge
mov
push
in
iret
int3
repnz
and
inc
ret
mov
mov
mov
xchg
mov
mov
sbb
push
or
aaa
mov
shrl
cmp
or
jne
jbe
mov
ljmp
or
insb
jl
xor
lock
shlb
insl
std
stos
xor
cmp
movsb
mov
or
xor
add
push
rcrb
jae
add
dec
dec
or
push
test
clc
inc
add
seto
jmp
rol
push
and
inc
mov
xchg
sahf
dec
mov
xchg
lods
sbb
cmpl
sar
daa
imul
or
xchg
and
fildll
roll
jno
arpl
pop
pop
mov
notb
aaa
hlt
test
push
lahf
sbb
popf
js
iret
lock
pushl
lock
aam
test
add
leave
int3
and
scas
push
dec
push
push
ds
xor
xchg
adc
fistpl
rolb
sbb
sbb
cli
out
repz
jecxz
aas
ret
or
cs
sbb
scas
or
testl
jecxz
sbb
cmpsl
xchg
shll
pop
dec
push
pop
sti
or
push
pop
push
out
stos
xlat
imul
fdivl
icebp
add
lods
repnz
jno,pt
rol
xchg
subl
cmc
xchg
mov
lods
push
arpl
sahf
call
das
jp
jbe
lret
sub
pop
movaps
lds
fs
jae
jmp
sbb
jno
mov
cmpl
outsb
add
push
xchg
hlt
test
push
das
mov
aam
lea
xchg
jmp
and
test
dec
popf
mov
jae
sub
dec
and
adc
pop
and
push
adc
test
or
push
and
mov
pop
or
mov
int
lret
and
cmpsl
xchg
mov
pusha
mov
daa
loope
cmp
push
pushf
test
dec
aam
or
adc
push
xchg
push
test
lock
shll
flds
mov
pop
or
stc
shll
lcallw
mov
aad
push
pop
clc
jle
cmpsl
gs
jl
ss
inc
loope
lock
cmc
data16
inc
mov
cmpsl
fildll
pop
adc
imul
aas
cmp
nop
dec
insl
arpl
leave
jnp
xchg
loope
mov
pop
cmc
xor
bound
cmp
sbb
ds
dec
xor
inc
ret
inc
pushf
mov
and
fwait
push
inc
je
je
mov
xchg
sbb
and
add
sub
arpl
or
dec
cmp
push
lret
cmp
pushf
xchg
dec
daa
mov
sahf
mov
and
ret
test
data16
test
cmp
push
fcomps
jo
stos
sub
xchg
mov
pop
std
jno
sbb
mov
inc
cltd
adc
fsubl
std
aad
jb
push
int3
cld
icebp
push
stc
cwtl
outsb
mov
int3
mov
rorl
jno
jbe
or
aas
jmp
and
adc
jns
adc
int
xchg
out
mov
and
and
inc
int3
jcxz
fwait
dec
mov
fldcw
stos
fcmove
cmp
sbb
push
xchg
xchg
pusha
movsl
out
jnp
mov
stos
add
outsb
out
pusha
cli
icebp
push
test
out
shlb
addl
orb
pop
das
or
cmp
aaa
and
push
icebp
in
popa
jb
push
in
add
insb
jg
cmp
in
pusha
test
jl
sahf
clc
mov
loop
xor
in
mov
cmp
mov
in
hlt
push
popf
xchg
sti
push
mov
test
push
push
movsb
stos
mov
pop
sbb
jp
xacquire
push
xchg
xor
cmp
jno
mov
cmp
shrl
repnz
or
lret
cmpsl
pop
adc
dec
push
andb
fstpt
xchg
jmp
push
push
push
mov
outsb
leave
inc
call
dec
sti
xchg
std
inc
cmp
in
clc
inc
dec
lock
xchg
ja
imul
call
lahf
adc
addr16
imul
add
out
adc
mov
mov
scas
clc
sbb
xchg
ret
push
leave
enter
dec
mov
das
push
cmp
test
and
or
inc
gs
adc
or
pop
mov
inc
jge
out
movb
sbb
adc
mov
cwtl
push
jno
sqrtps
imul
lret
mov
lea
mov
cltd
and
enter
scas
inc
lods
add
movsb
cmc
mov
aad
popa
xchg
jl
movsl
cwtl
lcall
test
cmp
sbb
xor
xchg
dec
js
cmp
xchg
jnp
or
cmpsb
clc
push
mov
push
gs
sbb
or
sub
or
mov
sub
add
or
bound
jge
aam
fsubrp
movsl
in
inc
mov
int
ret
jae
cld
mov
std
lahf
mov
scas
andl
aam
cmp
fistl
outsb
loop
scas
pop
lahf
insb
jl
mov
pop
daa
sbb
outsl
mov
push
stos
jl
lret
sbb
adc
js
push
xchg
inc
dec
pop
mov
push
push
mov
push
lret
pop
inc
ret
adc
lods
movsb
xor
inc
out
ds
jo
andl
sub
in
dec
cmpsl
jmp
int3
std
aad
mov
mov
scas
jmp
cmp
cmc
fwait
pop
mov
cli
adc
lods
mov
and
nop
bound
mov
pop
pop
lods
push
out
clc
jo
aas
in
gs
cltd
sub
xchg
mov
jb
dec
or
add
or
imul
xor
aam
inc
cmpsl
lods
jg
mov
inc
popa
leave
push
int
cmp
xchg
das
bound
jge
pop
push
sbb
cmp
xor
pushf
xchg
mov
jbe
lock
clc
icebp
int3
cmpsl
ret
loopne
mov
sub
aaa
jle
adc
add
mov
jecxz
sbb
mov
fistl
sub
dec
inc
call
inc
sub
test
lock
xlat
mov
test
outsb
sub
jmp
inc
xor
stc
sahf
and
imul
mov
mov
repz
or
out
lahf
mov
pushf
push
and
inc
fs
sbb
add
jnp
jnp
sbb
lret
jg
mov
movsl
arpl
ljmp
jb
and
dec
and
int3
sub
adcl
out
sub
out
dec
cmc
inc
cmp
inc
ss
test
xor
mov
jl
out
mov
inc
fmuls
ljmp
inc
loop
mov
orl
and
lds
cmpsl
scas
pop
outsl
mov
xor
jp
shll
or
dec
rcll
fistl
pop
fstps
or
push
jne
mov
arpl
push
inc
push
cmp
or
aaa
mov
and
cmp
add
rcll
and
shrl
data16
or
into
push
ljmp
push
or
adc
nop
adc
xchg
lahf
in
sbb
pop
sbb
sahf
fnstcw
test
mov
xchg
push
sub
outsl
xchg
xchg
loope
mov
adc
pop
lea
lea
stos
push
loope
call
rcl
xchg
sbb
inc
cmc
in
cmp
ja
push
sahf
lds
adc
aam
mov
scas
add
lret
xor
mov
loope
negb
mov
ja
dec
and
sub
cmpsl
mov
ss
aaa
push
push
sbb
mov
cmp
insl
dec
xor
aam
xchg
and
rol
hlt
fs
iret
fisubrl
adc
vpcmpgtb
or
jo
and
fcmovnb
test
cmpsl
fisttpl
les
test
shll
xor
cmpsl
cmpb
pop
aam
out
outsl
inc
fs
mov
inc
cmp
pop
cmpsl
add
ljmp
jb
lret
sbb
in
mov
rcll
loop
stos
fstpl
add
jle
sub
sti
pop
xchg
sub
xchg
add
movsl
call
and
xchg
das
dec
inc
into
icebp
in
push
add
mov
and
mov
pop
sub
in
in
inc
cs
push
lret
fdivl
cmp
aam
mov
mov
sub
dec
stc
jmp
fcomi
xor
jmp
fldcw
xchg
fucomi
mov
xchg
pop
push
popa
sarb
aam
and
xor
xchg
sub
fwait
xchg
ss
push
test
iret
xor
cld
add
mov
js
dec
mov
fwait
add
sbb
ret
sti
test
xchg
xor
ret
mov
dec
add
fcoml
in
fisubl
add
ljmp
dec
pusha
cld
pop
ds
cmp
rcrb
jb
push
jnp
pop
adc
sub
fisubs
adc
repnz
mov
inc
push
sub
popf
pop
lods
pusha
std
jnp
cmp
inc
cmp
loopne
add
adc
inc
lret
cmp
addr16
jo
adc
mov
sub
arpl
mov
lcall
mov
stc
jno
push
cmp
inc
adc
ret
cmp
cmc
jno
dec
add
mov
or
adcb
mov
mov
lcall
jo
dec
inc
dec
sti
imul
int
push
or
cmpsl
fcmovnb
pop
cmp
out
jle
sbb
mov
int
add
hlt
fnsave
jmp
mov
inc
dec
xchg
dec
iret
mov
adc
jl
sub
fdivs
int
jmp
fld1
js
xor
ret
inc
xor
movsb
jae
cmpsb
xchg
sub
es
mov
out
ljmpw
mov
cltd
xor
and
outsl
xor
pop
fcompl
dec
xor
and
test
lods
fdiv
movsl
mov
pop
mov
int3
loope
loop
xchg
jmp
cmp
in
or
jno
mov
sti
and
loopne
jnp
pop
mov
jge
pop
call
add
xor
stos
and
add
repz
loope
cmc
xor
xchg
pop
shll
and
and
pushf
ljmp
mov
cltd
push
mov
or
stos
fbstp
sbb
jmp
mov
dec
ret
mov
inc
es
adc
iret
lcall
xor
xorb
mov
push
addr16
xchg
jns
dec
fs
or
pop
stc
cmp
sub
pop
repz
jl
cmp
bound
leave
nop
mov
rol
hlt
daa
or
pop
dec
cmp
outsb
dec
call
push
and
fmuls
ret
cld
push
adc
popa
scas
aad
mov
cmp
pop
aas
arpl
mov
test
mov
push
scas
movlps
pop
push
icebp
dec
into
mov
and
mov
or
add
aam
stos
xchg
scas
mov
stos
pop
dec
xor
lds
dec
das
out
pop
xchg
mov
push
stos
cmc
mov
inc
out
jbe
add
fucom
mov
pop
das
and
jmp
movsl
movsl
mov
pop
push
jl,pt
pushf
mov
andb
rorb
sbb
data16
jp
push
daa
idivl
lret
insb
inc
adcl
std
mov
out
fwait
ss
in
xor
daa
xchg
add
fistl
movsl
adc
insl
pop
jno
repnz
rcll
lret
or
jae
mov
xor
subl
dec
and
shll
lds
aad
or
dec
mov
aas
rol
xchg
adc
imul
push
and
and
das
fdivl
or
inc
mov
mov
outsb
push
mov
mov
mov
shrl
sbb
sub
jns
sub
pop
ficompl
cld
and
pop
loope
push
cmp
jnp
mov
pop
mov
sbb
push
mulb
in
es
mov
mov
and
cmp
cmp
aas
mov
and
cmp
data16
js
aad
and
jbe
pop
xor
sahf
xchg
adc
add
lret
add
sub
mov
fwait
mov
rcrl
fstps
dec
push
mov
ret
popa
es
ret
jne
mov
aam
xchg
fs
jecxz
les
xchg
push
out
iret
lea
xchg
lock
cld
mov
push
shll
or
jae
clc
sbb
call
mov
pop
mov
jae
mov
lea
cmp
inc
xor
and
and
imul
pop
pop
or
std
les
add
adc
dec
pop
mov
ss
pop
cld
cmpsb
repnz
jno
push
push
inc
ret
in
sub
mov
xchg
lea
iret
fs
adc
and
nop
adc
in
xchg
nop
sbb
push
pop
xor
out
or
insl
jmp
in
push
cwtl
stc
popl
jb
das
stc
jae
mov
ret
jae
push
test
add
adc
xchg
pop
rcl
aad
mov
lods
adc
daa
xchg
mov
into
xchg
mov
sub
sub
rolb
daa
pop
loopne
lahf
push
push
or
call
xorl
jecxz
xor
in
insb
xchg
xchg
mov
xlat
cmp
mov
js
scas
jp
scas
addr16
insl
es
hlt
or
and
xchg
xchg
jbe
lds
cmpsb
shll
sahf
stos
in
sub
xchg
jmp
les
xchg
sbb
cmc
stc
orb
push
int
jb
push
hlt
xchg
xchg
fbld
test
das
shlb
adc
pop
fmuls
roll
dec
jl
pushf
dec
push
mov
std
cmp
inc
and
std
push
pop
fldt
mov
xor
popa
jb
pop
add
or
pop
negl
sbb
pushf
jecxz
mov
ret
pop
inc
cmp
mov
adc
or
cltd
or
mov
push
or
outsb
or
cmpb
fldl
test
js
jo
adc
das
jbe
adc
pop
push
and
sub
mov
xor
and
pop
daa
sbbb
mov
inc
insl
ljmp
mov
cwtl
cmp
test
mov
shrl
fcompl
stos
stos
xor
xchg
fstpl
or
mov
repnz
fdivrl
ja
daa
pop
repnz
pop
jno
aam
ds
add
ret
aas
mov
or
sub
push
into
adc
mov
sbb
lret
pushf
loop
pop
dec
lahf
xchg
aas
xchg
fidivrl
icebp
inc
pop
and
and
shl
xlat
rcl
jg
jge
xlat
fistpll
idivb
fwait
pop
mov
cmpsb
pop
xchg
pop
and
add
inc
cmp
push
das
into
call
data16
jmp
cmp
jmp
xchg
jnp
in
pusha
mov
push
adc
jnp
and
sbb
in
and
add
pop
out
ret
push
call
inc
aaa
sbb
inc
push
pop
mov
adc
xlat
arpl
test
fldcw
push
inc
test
sbb
enter
daa
fsub
add
xchg
push
mov
ror
aam
mov
scas
adc
call
arpl
in
call
inc
push
shr
test
and
lods
xchg
push
test
movsb
movsb
daa
fwait
out
cmp
mov
sti
es
lret
jmp
mov
leave
mov
mov
jmp
mov
mov
xor
inc
mov
aam
dec
insb
lds
mov
sbb
lretw
rcl
dec
adc
and
test
adc
xor
out
mov
xchg
lcall
dec
lcall
scas
mov
jae
or
mov
add
pop
jmp
push
cmpb
dec
adc
mov
push
adc
nop
sbb
sbb
sub
and
sbb
insl
jo
scas
or
mov
fadds
pusha
xchg
insb
or
lret
mov
mov
and
divb
je
into
nop
in
stos
sub
ljmp
adc
popf
sbb
sbb
nop
xchg
sub
ss
lods
or
int
cmp
shlb
add
adc
int3
les
push
mov
cs
inc
sbb
inc
mov
xor
push
in
sbb
andl
faddl
add
mov
xor
pop
dec
xchg
jns
or
repnz
push
jg
mov
mov
mov
push
jns
int
ds
leave
test
push
mov
add
mov
enter
enter
test
sahf
mov
mov
or
cmp
push
loopne
push
imul
mov
aad
or
jbe
loop
or
lods
in
outsl
pop
std
or
cmp
push
mov
roll
ret
test
int
test
stos
call
pusha
pop
jmp
jnp
popf
jl
cmpl
hlt
int3
es
daa
jge
lds
mov
lret
xchg
and
and
insb
xchg
pusha
pop
data16
mov
pop
test
jne
xor
imul
dec
push
xchg
mov
xor
fisttps
subb
cwtl
pushf
jns
popa
xor
cmp
mov
sub
add
dec
sub
and
stc
sbb
repnz
push
xchg
sub
sub
es
pop
popa
aad
ret
imul
and
or
fcoml
push
mov
pushf
icebp
loope
mov
shrb
xor
push
or
pushf
mov
add
adc
cs
out
mov
or
pop
jp
jns
flds
test
sub
pcmpeqb
jmp
nop
sbb
sub
sbb
xchg
in
mov
mov
mov
cmp
xor
rclb
push
push
cmp
daa
pusha
popf
pop
mov
push
mov
mov
bound
dec
push
js
mov
aad
pop
mov
mov
inc
push
mov
mov
or
sub
stos
jmp
sub
pop
shl
popl
push
mov
inc
dec
lret
push
mov
push
sub
and
jns
cld
sub
in
jg
je
mov
jl
test
fisttpl
mov
cmpsb
sti
into
sti
xor
mov
nop
add
sbb
xor
out
lahf
jg
push
hlt
lods
mov
imul
je
movsl
mov
jo
jmp
lret
and
cmpsb
pop
push
sbb
aaa
xor
dec
pop
adc
pushl
mov
jo
daa
addb
pop
xchg
jb
arpl
js
mov
push
adc
scas
adc
adc
fistps
sub
int3
add
imul
cmp
andb
ret
add
mov
inc
scas
jne
gs
xchg
pop
test
jle
push
aad
lds
cmc
ds
adc
and
scas
jne
gs
xchg
pop
test
jle
push
aad
lds
cmc
ds
adc
and
scas
jne
gs
xchg
pop
test
jle
push
aad
lds
cmc
cmp
into
adc
and
jne,pn
movsl
mov
mov
sarb
xchg
cmp
or
sbb
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
int3
sahf
fsubrl
xor
icebp
into
inc
jns
pop
js,pn
insb
dec
or
xchg
outsb
sub
cmp
int3
sahf
fadd
in
mov
mov
lods
dec
push
inc
push
pop
dec
insb
jl,pt
jle
push
outsb
sub
cmp
aad
lds
data16
xchg
mov
cmpsb
push
cmp
or
pop
and
adc
scas
mov
fwait
lret
pop
xor
aad
dec
xchg
sub
jg
hlt
pop
xchg
push
jp
int3
bound
in
lods
loopne
pop
outsl
arpl
inc
clc
mov
mov
mov
add
faddl
mov
fildll
mov
lahf
int
pop
dec
push
pop
cmp
sbbl
movsl
cmpsb
sub
jns
xchg
mulb
dec
adc
xor
cmp
lods
push
mov
mov
pop
cltd
outsl
sarl
jno
xchg
and
dec
push
jmp
cs
mov
or
pop
or
jg
mov
scas
adc
jbe
push
aaa
cmp
lods
lret
in
cmp
xchg
lret
and
cld
outsb
jge,pn
aad
enter
mov
pushf
out
lods
pop
movsl
enter
pop
jne
gs
adc
add
ss
out
in
scas
fimull
mov
lcall
pop
dec
push
xor
pop
inc
sbb
movsl
sti
mov
lahf
fists
sbb
stos
mov
dec
cmp
or
aaa
jl
sbb
dec
aas
dec
loop
repnz
mov
mov
out
lods
mov
cs
jl,pt
or
sbb
sub
cmp
int3
sahf
fsubrl
mov
pushf
out
lods
mov
cs
jl,pt
or
sbb
sub
cmp
int3
cmp
insb
imul
pop
mov
sub
nop
and
fiadds
cmpsl
fwait
push
cmp
jl
fcompl
imul
inc
pusha
in
xor
inc
ja
repz
stos
sub
fdivs
push
in
jno
mov
jno
xor
clc
mov
or
inc
push
and
mov
lcall
lea
mov
or
fucomip
fistl
clc
addb
or
std
fiadds
xchg
in
in
sbb
cmp
shr
and
inc
pop
cwtl
cmpps
pop
ret
in
pop
add
out
lret
stos
cwtl
mov
mov
sbb
movsl
or
dec
xlat
jnp
shll
add
cwtl
cli
shlb
pushf
fisubl
sub
aas
xlat
fsubs
lods
fistpl
xchg
rcrb
pop
decl
sbb
ja
cmp
xchg
or
push
mov
sahf
mov
fcom
push
adc
cmpl
popa
inc
in
in
int3
notl
add
cld
dec
cmpsb
adc
dec
xchg
xor
test
mov
idiv
mov
ja
clc
mov
fiaddl
sbb
stos
test
inc
sub
dec
out
adc
pusha
dec
sbb
pop
cmpsb
jecxz
sub
and
dec
inc
fsubrl
cmpsl
ret
loope
int3
sbbl
inc
jno
out
jp
mov
inc
in
jmp
pop
lods
cmp
inc
sbb
xor
lcall
jge
adc
stos
cmc
test
int
cmp
andb
cmp
xchg
outsl
pop
xor
fdivp
jnp
jp
push
inc
xchg
rcrb
push
add
mov
gs
iret
dec
sub
cwtl
mov
enter
pop
or
pop
out
aaa
popa
fdiv
and
dec
cmc
inc
icebp
addr16
aad
imul
cmp
rclb
js
fstps
jmp
xchg
sub
jecxz
fsubrp
and
test
dec
data16
xor
mov
fnstsw
or
xor
mov
jns
ja
mov
iret
cmp
cmp
popf
sbb
out
aad
jo
in
mov
dec
mov
sbb
push
pop
les
cmc
inc
and
es
fs
mov
movsb
mov
push
jno
fsubrs
ss
cmp
lahf
mov
outsl
mov
sbb
outsb
gs
sahf
ds
loope
shl
hlt
pop
add
pop
enter
xlat
jo
add
cmp
cmpb
sub
fidivrs
in
xor
dec
movsb
aad
sub
lods
bound
cs
mov
pop
movsl
out
in
mov
sub
mov
sub
sub
sub
shrl
xor
test
pop
xchg
js
cmp
mov
sbb
xchg
pop
psllw
mov
mov
sub
jns
imul
loopne
pushf
ss
xlat
add
mov
jbe
mov
cmp
mov
push
test
and
adc
bound
gs
test
lock
aam
adc
pop
inc
lods
jg
jmp
push
and
mov
mov
insl
cmp
add
outsb
jno
loopne
mov
adc
insl
dec
or
push
dec
and
movsb
cmp
and
aaa
mov
sbb
jg
fistpll
sbb
push
pop
cmc
dec
mov
mov
jl
loop
fcompl
dec
ret
sbb
fldz
pushl
mov
scas
cmp
mov
or
jecxz
pop
stos
sti
ret
cmc
lcall
cmp
xor
lar
iret
hlt
mov
xchg
cltd
push
add
fucom
and
mov
or
xor
lea
dec
mov
mov
test
lea
cld
inc
sub
addr16
mov
mov
fbstp
in
out
mov
sti
cs
repz
sub
pop
mov
push
loope
jmp
fcomip
addb
cmp
fcmovb
iret
out
pop
pop
in
pop
sbb
cmp
out
cmpsb
loopne
push
es
scas
out
push
sbb
dec
pop
divl
sub
or
or
cmpb
xchg
xor
pop
daa
leave
or
std
rcrb
ljmp
and
cld
sar
pop
xchg
in
mul
mov
loopne
jmp
push
adc
leave
cltd
out
rclb
pop
in
js
mov
mov
push
aam
enter
test
sbb
shrb
daa
ljmp
popa
popf
stos
sub
push
inc
or
inc
andl
js
inc
insb
mov
and
push
mov
xchg
gs
xchg
xor
jmp
or
sub
imul
out
lea
adc
repnz
mulb
mov
inc
pop
jg
mov
out
jecxz
or
cmp
daa
hlt
ret
push
sub
add
sbb
arpl
out
sbb
inc
pusha
call
icebp
fwait
add
cmc
ret
xchg
gs
push
lahf
je
inc
je
popf
mov
push
jae
addl
cld
aaa
mov
mov
bnd
lds
test
out
push
mov
bound
test
mov
nop
test
cmp
aad
frstor
mov
push
push
inc
xchg
mov
jb
sbb
ret
imul
xchg
imul
sbb
sahf
sub
xchg
imul
shll
xchg
clc
jecxz
push
int
mov
shl
or
hlt
outsl
dec
and
mov
out
call
add
test
das
ja
jns
aas
insl
mov
clts
aaa
rcr
inc
das
mov
cmc
into
outsb
sub
mov
jmp
lods
fsubrs
scas
or
out
test
lds
sub
or
call
sti
fdivl
lds
decb
mov
dec
fwait
popf
pop
in
movsb
mov
sahf
loope
aam
add
push
pop
test
aaa
inc
inc
pop
pop
pop
rcr
fisubs
test
cmp
xchg
loope
jmp
into
sub
in
sbb
mov
fcmovbe
or
xor
push
and
fwait
push
sbb
sub
dec
inc
adc
push
jl
mov
pop
xchg
fs
inc
imul
mov
cmp
cmp
test
mov
repz
insl
cmp
sti
xchg
or
and
cmp
loopne
push
push
xor
lahf
clc
cld
iret
adc
add
mov
mov
add
andb
or
dec
fcmovbe
mov
xchg
out
cmp
xor
sub
jb
mov
stos
sub
sub
stos
iret
ret
pushf
mov
stc
inc
icebp
mov
mov
hlt
push
jp
in
test
pop
loope
cmp
jmp
or
mov
mov
les
add
test
push
clc
jg
fs
xor
into
cmp
pop
mov
xor
popa
outsl
push
fdivl
int
in
in
out
push
push
test
push
sub
enter
aad
xchg
test
jmp
fcmovne
movsb
sbb
or
or
js
pushf
icebp
mov
aas
insl
test
jae
xchg
test
shll
jne
cwtl
jno
pop
dec
test
test
ss
jno
std
fistpll
add
sub
cld
xchg
stos
pop
mov
push
xchg
xor
xchg
or
xor
jle
stc
mov
jecxz
inc
mov
mov
push
sbb
mov
mov
sub
inc
fsubrl
popa
shrb
sarl
loopne
push
movups
mov
adc
push
jne
inc
orb
inc
in
or
call
mov
fs
mov
int
pminub
aaa
mov
pop
xchg
fimuls
add
xchg
adc
mov
adc
xchg
sti
lcall
shll
sbb
lahf
sbb
gs
test
je
sub
movsl
dec
cmp
nop
xchg
lea
mov
mov
lea
arpl
push
loopne
mov
int
dec
testl
or
pop
jbe
cs
xchg
leave
scas
add
mov
fistpll
jp
xchg
cmpb
test
and
lds
jae
sahf
aaa
inc
lds
aad
lcall
and
pushf
les
mov
sub
xor
adc
cmp
and
dec
add
inc
mov
xor
lock
ret
mov
mov
pusha
pop
mov
mov
dec
js
xchg
loopne
sti
notl
adc
mov
dec
jle
bound
dec
jl
mov
adc
mov
inc
pop
int3
push
fdiv
jg
mov
sahf
dec
mov
cmpsl
sbb
sbb
stc
clc
inc
mov
or
das
sub
cmc
jb
or
add
in
or
pop
iret
push
and
lcall
push
mov
insl
pushf
test
lds
inc
pop
add
ficoms
test
mov
push
adc
xchg
mov
test
popl
jl
dec
es
leave
xchg
adc
sub
mov
dec
and
jno
inc
push
test
xor
bound
lret
jg
xor
jmp
xchg
lret
jns
stc
xor
ja
mov
popa
dec
pop
fstpl
adc
imul
mov
fistpll
and
bound
pushf
aas
mov
xor
in
imul
es
fnstsw
mov
mov
inc
repnz
into
stos
xchg
push
fwait
adc
ss
mov
adc
mov
std
negb
in
pop
subb
jg
testl
mov
inc
adc
clc
pop
arpl
and
pop
dec
mov
iret
test
inc
pop
test
stos
cltd
popa
push
inc
test
inc
xchg
je
js
ljmp
xor
xchg
add
lods
dec
fs
jo
push
int3
dec
dec
mov
xchg
jle
adc
addr16
sub
push
dec
push
push
pop
repz
or
mov
popf
adc
sbb
cld
aam
push
lret
fcoml
pop
movsl
fucomp
push
sub
cmpsb
xlat
mov
jns
adc
sbb
jo
pushl
xchg
push
xor
jb
dec
gs
inc
mov
add
std
sub
pop
mov
xlat
add
pusha
push
xor
fisttpll
shl
cmp
js
mov
filds
cmpsb
pop
int
enter
lods
pop
stc
cmp
sub
pop
xchg
stc
dec
inc
testl
mov
xchg
add
add
shll
cmovo
sbbl
inc
ficoml
xor
lret
sub
adc
or
pop
inc
sbb
mov
mov
les
stos
xlat
sbb
enter
sbb
in
testb
in
or
imul
pop
lock
std
xor
push
dec
mov
pusha
pop
sub
dec
push
jg
xor
lods
pop
jecxz
jne
xchg
push
adc
repz
cltd
jne
dec
cmpsb
loopne
cmp
mov
pop
loope
mov
dec
push
les
inc
add
lret
sbb
int
sub
mov
and
mov
xchg
test
fidivrs
pop
lock
add
xor
mov
add
cmpsl
loope
lds
xchg
ret
in
cs
test
rcrl
loope
mov
dec
push
stos
jbe
jecxz
loop
lahf
ret
faddl
sbb
inc
mov
mov
push
and
jp
arpl
add
pusha
pusha
cmpb
xchg
clc
mov
sub
cmp
sbb
bound
and
pop
fidivrs
pop
dec
sub
fs
sub
adc
jl
or
mov
adc
mov
mov
sub
xor
int
enter
clc
fildll
fwait
inc
ret
push
inc
dec
push
pop
insl
dec
js
mov
inc
sbb
lock
fcmovbe
jmp
jmp
jb
rolb
pop
jb
outsl
popa
mov
add
rolb
out
or
ljmp
xor
dec
adc
push
sub
or
xchg
adc
mov
fs
je
inc
or
or
fwait
sbb
mov
mov
loope,pn
or
xchg
cmp
les
rolb
fidivs
movsl
sbb
cmp
lock
cmp
push
loopne
dec
ss
jae
movsb
adc
mov
xor
push
pop
sub
cwtl
xlat
jo
mov
mov
les
push
pop
adc
xchg
mov
jno
lock
sub
and
inc
dec
xor
dec
or
sub
lods
test
leave
aaa
movsb
mov
ss
test
in
repnz
xchg
scas
pop
jne
fnsave
xor
inc
enter
in
xchg
jmp
sbb
je
jb
push
and
sub
pop
outsb
cmp
or
shrb
jbe
lahf
mov
dec
enter
cli
or
mov
mov
je
lcall
sbb
daa
xchg
idivb
xor
jo
jmp
push
sub
mov
adc
inc
lret
mov
cmpsb
xchg
add
in
jge
lock
lret
dec
jns
cmpsb
js
sarb
pop
sbb
sbb
enter
stos
arpl
dec
idivb
xor
xchg
fs
mov
data16
lret
in
in
dec
clc
lea
jns
inc
pop
in
pop
jbe
ret
or
pop
push
dec
gs
call
dec
xchg
pop
loope
xchg
xchg
loopne
outsb
dec
mov
add
lahf
cltd
sub
dec
clc
inc
ficomps
sub
dec
out
inc
xor
loope
loop
sahf
mov
dec
jns
mov
pusha
fisttpl
cmp
push
add
mov
rolb
mov
or
fwait
mov
inc
in
add
push
dec
inc
mov
dec
xchg
adc
add
out
out
gs
mov
pop
testb
and
or
mov
loopne
in
jle
test
sub
jg
fs
leave
push
xchg
pop
imul
cmp
dec
xchg
notb
aad
and
mov
push
ljmp
or
push
out
dec
sbbl
aaa
mov
cltd
movsb
mov
jge
int
into
js
xlat
push
sbb
pop
rolb
jns
ss
dec
std
pop
fcomps
jns
pop
push
scas
pushl
and
loope
cmpsl
arpl
mov
push
add
mov
cli
mov
mov
mov
fisttps
mov
fisttpll
cmp
or
dec
jp
inc
dec
xlat
jno
xchg
loop
push
dec
push
gs
push
popa
push
adc
scas
ds
scas
popf
and
push
xchg
jmp
jge
sbb
popa
imul
das
dec
push
jnp
sbb
je
test
mov
add
cmp
lock
lods
xor
lret
imul
es
insb
int3
lcall
outsb
pop
dec
jnp
jl
lds
cmp
popf
sbb
data16
scas
test
out
sbb
xchg
push
fdivrl
or
andl
enter
add
sti
inc
or
fcoms
inc
push
mov
or
testb
scas
inc
repnz
jg
test
scas
sub
mov
push
or
dec
in
dec
mov
dec
sbb
mov
pop
sti
test
xchg
mov
mov
lds
dec
sbb
movsb
imul
test
loope
pop
out
out
in
lahf
add
int3
insb
xor
xor
xor
sub
xor
and
stos
sbb
stc
push
adc
add
in
xor
fistl
jge
xchg
push
mov
cvtps2pi
fwait
cmpsl
jnp
repz
xchg
or
xor
je
stos
and
fisubl
stc
sbb
leave
inc
gs
cmpsl
add
fs
dec
ret
js
mov
jnp
jno
in
std
mov
pop
shll
xchg
adc
sbb
or
pop
push
pop
add
and
stc
inc
inc
xor
icebp
imul
cmp
inc
mov
cld
stos
insl
out
aas
push
rcl
es
das
fdivrs
insb
push
stos
adc
inc
mov
rcll
mov
push
incb
push
and
dec
int
sbb
mov
push
sahf
outsb
mov
ret
inc
push
in
pop
xchg
push
dec
jbe
xchg
push
xchg
sahf
pop
cmpl
xchg
jg
sub
xchg
pop
incl
das
testb
sbb
das
loope
pop
out
cmp
cs
lahf
xchg
fstl
cli
je
je
imull
adc
and
adc
sub
in
add
push
std
incl
imul
mov
lcall
outsb
rorb
mov
mov
sub
int3
dec
xchg
ljmp
fisttpl
sub
mov
stos
cmpsb
arpl
push
rcrl
movsl
test
xchg
ficomps
xchg
xor
das
jmp
dec
jb
in
loope
pusha
negb
mov
push
addl
rcr
lods
mov
xlat
js
jmp
jmp
or
lods
sub
adc
jmp
push
int
sbb
fadds
hlt
inc
xor
xchg
or
and
ss
cld
ds
out
cmp
fcoml
ljmp
inc
xlat
loopne
les
sbb
adc
xor
inc
rcll
dec
aas
add
enter
inc
movl
xchg
jne
stc
lock
sbb
lods
lods
mov
fbld
mov
jae
xor
pushf
mov
rclb
mov
aad
xchg
cmpsl
adc
inc
jp
repnz
mov
push
orb
icebp
mov
in
das
rol
addb
or
mov
cmp
sahf
and
in
or
stos
lret
shll
pop
mov
sbb
cmpsl
pop
add
and
mov
shl
and
cli
aaa
in
bound
jo
std
out
add
aaa
mov
dec
rcll
repz
inc
dec
pop
repz
test
dec
faddl
testb
rorl
mov
adc
inc
push
bound
jge
shlb
pop
inc
push
aaa
inc
push
add
sub
out
cwtl
xor
push
sbb
xchg
add
roll
push
enter
jmp
mov
sbb
dec
pop
inc
or
das
cmp
jecxz
aad
sbb
mov
jne
inc
cmp
inc
inc
sarl
mov
jbe
push
sub
inc
pop
in
sahf
pop
sbb
xchg
pop
cs
out
and
adc
dec
sbb
int
xor
adc
push
dec
push
nop
push
sub
in
mov
loopne
outsb
int
mov
testb
xchg
movb
out
xchg
pop
inc
sub
out
mov
inc
add
jmp
pop
add
cli
jb,pt
jae
xchg
shl
pop
inc
pop
subb
cmp
xchg
and
cmpb
push
and
rorb
ret
stos
mov
jnp
out
popf
lahf
mov
daa
push
ffree
out
inc
cmp
inc
sbb
xorb
xor
sbb
out
mov
cmpsl
and
cmp
or
jl
mov
cmpxchg8b
enter
int3
insb
xchg
cld
push
inc
scas
mov
or
or
pushf
mov
or
push
mov
ficompl
aaa
cltd
in
inc
aaa
dec
repz
das
adc
push
inc
fwait
pop
cmp
leave
ret
or
insl
mov
jae
mov
jne
inc
xchg
sbb
and
sbb
mov
shrl
mov
or
adc
xchg
int3
test
jge
pop
popl
cmpsl
popa
lods
std
andl
sbb
cltd
notb
and
adc
scas
iret
jge
sub
adc
sub
pop
iret
pop
sbb
gs
cmc
xchg
out
jl
push
fdivrl
mov
sub
mov
xor
add
movsb
cmp
mov
mov
adc
fadds
xor
rcll
rolb
bound
add
shrl
cmpsl
bound
shl
cwtl
cmp
cmp
xchg
inc
pop
dec
mov
jae
lods
dec
fadds
add
cmp
jbe
mov
mov
loopne
sbb
xlat
fs
sub
jmp
jmp
test
popa
loope
mov
xlat
mov
in
and
push
sub
xchg
push
mov
push
sbb
mov
sub
mov
xchg
mov
les
mov
adc
push
jecxz
cmpsl
xchg
add
sub
std
cmp
sahf
mov
jp
ds
int3
jne
dec
icebp
mov
or
adc
push
pop
jne
std
pop
sarb
sti
sub
mov
mov
pop
clc
sbb
mov
sbb
pop
je
daa
and
cmpsl
data16
add
fldenv
aas
inc
inc
je
movsl
inc
rolb
sbb
movsl
arpl
insb
add
add
in
cltd
xor
mov
mov
and
and
jnp
ss
mov
dec
mov
ret
sub
fildl
fwait
ljmp
jmp
insb
imul
sar
mov
mov
in
sbb
leave
mov
sbb
out
dec
fbstp
lods
lods
rcr
jbe
scas
push
imul
es
cmp
mov
inc
or
mov
xchg
scas
sbb
adc
xchg
jbe
movsb
movsl
inc
push
in
imul
mov
rep
jbe
inc
or
inc
mulb
xchg
cmpsb
pop
rclb
add
and
movsl
jnp
push
dec
test
pop
lret
sub
xchg
shll
jb
sub
cmp
inc
sbb
mov
divb
xchg
jb
test
xor
andl
cmp
jno
xchg
cmpsb
fwait
xchg
into
dec
add
jp
das
or
js
in
mov
aas
sbb
rcl
repnz
movsb
hlt
orl
xlat
push
iret
in
arpl
dec
shlb
addr16
push
xor
pop
adc
push
add
sbb
push
xchg
dec
out
lods
aam
cmc
sub
jp
dec
jl
push
imul
xchg
lock
pop
in
rorl
xor
adc
lret
stos
pop
mov
sbb
fdivs
mov
lock
mov
push
ret
push
in
loopne
popf
mov
push
cmp
cltd
pop
icebp
sub
jmp
mov
pushf
out
lods
mov
cs
jl,pt
or
sbb
sub
cmp
int3
sahf
fsubrl
mov
pushf
out
lods
mov
cs
jl,pt
or
sbb
sub
cmp
int3
scas
fmul
in
mov
pushf
out
lods
ds
fisubrs
dec
or
sbb
sub
fdiv
call
into
pushf
out
lods
jle
push
dec
loope
test
cmp
inc
int3
int3
int3
int3
int3
in
idiv
out
xlat
ffree
movsb
jecxz
leave
clc
les
addr16
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
cmpsl
lea
pop
cmp
gs
inc
dec
jb
pop
cltd
negl
mov
xchg
push
movsl
imul
push
pop
adc
pushf
pop
into
add
add
lods
dec
mov
ror
lock
mov
mov
lods
pop
pop
dec
sti
adc
xchg
xor
loopne
sub
nop
ret
mov
cltd
pop
push
fadds
mov
sbb
out
fcmovbe
lds
popf
xlat
popf
inc
lock
test
cmp
es
add
cmp
popf
pop
jno
push
shrl
data16
shll
pop
not
and
sub
sub
aaa
inc
leave
enter
add
pop
cs
out
xlat
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
xor
xchg
fwait
or
repnz
sbb
cmp
sub
xchg
insl
bound
xlat
pushf
nop
enter
enter
pop
xor
or
add
ficompl
dec
bound
mov
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
repnz
and
mov
inc
inc
mov
pop
add
cs
or
ss
jmp
push
add
mov
std
mov
jp
lahf
mov
notb
jnp
adc
js
dec
or
into
dec
pop
out
jge
lds
sub
dec
ret
mov
jae
inc
jmp
call
and
xchg
cmp
out
inc
mov
mov
aam
stos
cmpsb
add
frstor
sub
cmp
push
pop
clc
in
dec
jbe
arpl
sahf
lahf
mov
mov
aas
dec
cmp
inc
adc
js
inc
cmpxchg
dec
xchg
xchg
iret
jp
dec
insb
test
inc
push
xor
pop
push
push
inc
loop
loopne
cmp
fwait
ss
fimuls
and
jge
sub
popa
add
and
adc
ret
and
or
jp
jbe
shr
fwait
testl
mov
pop
adc
jnp
lret
mov
xlat
lods
cwtl
lds
rorb
mov
inc
movl
sbb
test
push
sub
fwait
cmc
pusha
ljmp
divb
dec
les
pushf
inc
call
inc
push
out
xchg
cmpsb
jno
adc
leave
mov
or
cli
cmp
lcall
sbb
add
mov
xchg
xchg
xchg
and
arpl
mov
jb
xor
adc
dec
sub
or
xor
mov
seta
test
push
and
daa
pop
push
sub
cmp
sbb
push
shlb
and
lret
call
push
test
loope
dec
jle
in
adc
pop
movsb
sub
inc
out
pop
cmpsb
mov
inc
sub
mov
inc
xorl
xlat
cmp
push
add
ja
xchg
xchg
clc
stos
pop
fldt
mov
cltd
lods
fmuls
insl
sub
std
push
mov
jno
mov
mov
add
fisttpll
insb
jne
pushf
mov
loope
test
cltd
sub
repz
sbb
aam
nop
push
inc
pop
xor
sarl
or
sti
and
in
and
lea
call
fsubrs
push
add
xlat
or
jle
ret
gs
xchg
repz
sub
cli
and
mov
add
out
xor
inc
and
or
mov
sbb
ja
pop
cmc
sbb
outsb
pop
push
pop
cmpsb
mov
jnp
popa
mov
mov
jnp
inc
lds
xchg
mov
and
je
nop
xor
sti
idivl
cmp
mov
sbb
dec
mov
insl
and
cmp
add
sub
xlat
fstpl
pop
imul
xchg
push
xor
out
jnp
int
cld
mov
inc
cmc
mov
and
xlat
cmp
or
push
sub
or
mov
imul
mov
pop
stos
enter
fsubr
xchg
inc
testb
mov
pop
and
es
enter
iret
cmp
lret
rol
sub
sti
adc
adc
lret
jl
xchg
push
pop
stc
jae
leave
pop
cmp
repz
outsb
loope
xorb
roll
push
pop
fstpl
xor
scas
mov
aam
cltd
gs
sub
push
push
or
js
mov
jne
and
out
fnsave
mov
mov
jp
push
push
mov
dec
sbb
jle
lret
cmp
cmp
xor
jmp
mov
sbb
jae
out
push
or
xor
or
sub
loopne
xor
stos
hlt
iret
aad
jg
jno
jns
mov
xlat
daa
sbb
xorl
mov
lock
popf
xchg
in
jle
and
mov
shll
lret
jecxz
push
xor
xor
cmp
mov
xchg
lea
xor
mov
mov
xchg
xchg
cltd
sub
cmp
push
jbe
inc
loopne
and
enter
xchg
hlt
mov
adc
jg
sub
lds
vpcomub
scas
loop
cld
inc
mov
push
xor
cmc
pop
cmp
test
push
clc
dec
jo
pop
jno
fdivs
popf
sub
aad
jo
inc
test
mov
jo
inc
inc
push
jmp
sub
jo
pop
lods
jl
jnp
inc
mov
stc
dec
aam
jo
mov
xchg
fisubrl
xchg
rclb
and
mov
sbb
adc
mov
aaa
xchg
stos
lds
dec
push
xchg
mov
stos
es
repz
fs
pop
fisubs
push
ja
inc
into
nop
cmpl
cwtl
add
or
fistpl
sbb
movsb
sarb
jmp
scas
mov
insb
repnz
add
fwait
mov
inc
xor
adc
cld
sbb
sahf
pop
or
jne
xorb
sbb
inc
add
mov
pop
xchg
cmpsl
cs
loop
flds
or
mull
lret
push
dec
testb
inc
or
or
std
pushf
jno
sub
or
xchg
or
cmp
sub
inc
daa
out
jns
je
rsm
mov
pop
xor
loope
xchg
int
in
fwait
rcll
jbe
sub
mov
adc
dec
or
jp
push
daa
mov
pop
neg
jne
jae
mov
jo
cltd
jmp
fwait
mov
enter
xor
pop
inc
xor
pop
sbbl
into
or
outsb
popf
dec
cmp
cmp
negb
rol
aaa
addr16
jg
xor
lock
cltd
xor
icebp
dec
jno
mov
dec
and
test
xchg
xchg
scas
xchg
jb
out
shl
ja
sbb
add
es
int
icebp
dec
scas
jp
cmpsb
xor
adcl
and
push
adc
outsb
lds
in
es
pop
pop
jae
or
mov
aad
pop
pop
dec
jmp
or
fidivrs
mov
inc
sarl
mov
push
in
cmp
push
mov
mov
stc
pop
je
pop
lahf
jnp
mov
jbe
mov
sub
and
xor
mov
fistpl
pop
les
std
mov
loop
stc
mov
sbb
cs
repz
xor
cmpb
fisttpll
jecxz
mov
aas
cmp
int3
cmp
mov
sbb
pop
xchg
or
inc
jno
pop
daa
scas
jns
lret
mov
and
jae
jle
or
adc
mov
mov
das
cmp
cmp
xchg
inc
out
jmp
in
testl
mov
or
lret
das
and
xchg
mov
pop
jp
and
adc
sub
sahf
fnstenv
mov
xor
adc
sbb
and
push
addb
and
lock
dec
sub
jle
xchg
pop
mov
out
lret
test
daa
imul
mov
loop
hlt
fsubrp
lods
in
mov
cmp
fcmovne
or
mov
xchg
jb
cmp
cmp
fidivs
cmp
cmp
fs
loopne
and
aas
cld
ss
sub
aas
in
jmp
pop
js
fld
mov
insl
pop
jnp
pushf
popa
adc
pop
test
or
xor
shll
xor
push
data16
gs
cmpl
dec
inc
adc
lahf
cmp
into
sbb
scas
ret
cmpsl
rorb
dec
ja
mov
mov
jl
test
movsl
je
xor
push
in
out
loop
imul
out
sub
push
or
mov
mov
jmp
jbe,pn
add
loope
hlt
sbb
pop
out
es
out
test
test
fidivrs
xadd
and
movsb
jl
mov
dec
popl
mov
sbb
inc
and
outsb
cmp
aas
insb
call
dec
sub
mov
or
lret
movsb
ret
aad
shrb
fsub
pop
lea
cmpsb
cmp
mov
mov
xchg
icebp
stos
and
divl
cmpsl
xchg
mov
push
push
outsb
dec
xchg
out
xlat
sbb
push
mov
dec
add
aam
or
aam
push
imul
push
xchg
stos
mov
xchg
push
add
inc
scas
mov
jo
xchg
mov
jae
push
cmp
push
jge
stc
lret
mov
pop
testl
sbb
movsb
dec
test
out
sbb
and
stos
cld
push
push
mov
pop
in
stc
cld
rol
arpl
cmp
add
cmc
in
lock
jno
jecxz
ss
mov
daa
jb
call
lock
fisttpl
add
push
cld
fs
sub
aam
loope
in
std
add
testb
push
loopne
sbb
insb
inc
into
pop
rep
or
mov
dec
add
push
sbb
add
jecxz
leave
jae
dec
daa
loop
mov
pop
add
bound
sub
std
sub
xor
mov
enter
xor
push
jl
pop
push
push
sub
dec
inc
xchg
cmc
xorl
test
cmp
xor
dec
cmp
ds
int
xor
into
bound
fidivrs
jbe
es
adc
cmp
push
das
loop
sub
dec
xchg
stos
call
and
outsl
push
sbb
mov
outsb
aad
daa
xchg
imul
call
popf
inc
pop
cmp
add
jo
rorl
sbb
dec
xchg
cld
xor
sub
add
lock
mov
adc
in
cmpsl
xchg
jl
lret
dec
cltd
push
jge
mov
dec
lcall
outsb
xchg
lock
mov
inc
sub
dec
xchg
pop
lret
mov
in
inc
xchg
data16
lock
mov
pusha
in
push
push
mov
test
sbb
into
negb
jb
add
xor
xchg
inc
sub
or
fists
addr16
ds
sbb
lods
nop
shl
xchg
mov
stc
cmpsb
adc
push
test
ds
push
scas
ja
sub
cmc
pop
inc
mov
fildll
pusha
and
outsl
fisubl
arpl
test
pop
xor
loop
xorb
pop
lahf
dec
or
push
cmp
fadds
lds
push
jmp
inc
add
ret
fiaddl
cmp
sarl
push
leave
xor
mov
cmp
cmpsb
js
leave
stos
lock
mov
mov
pop
xor
xor
repnz
movsb
jo
add
inc
shlb
daa
in
jb
lods
push
mov
jne
mov
cmp
in
je
fs
adc
setl
push
ja
push
sub
push
inc
ss
test
shll
jle
into
int3
push
adc
je
cmp
and
adc
add
sbb
and
lea
bnd
rdmsr
inc
cmp
pop
popf
dec
mov
in
outsl
ja
loopne
inc
test
sub
push
jae,pn
bndstx
inc
adc
pusha
cmp
nop
xlat
cmc
and
sbb
pushw
mov
aam
leave
pop
lahf
xchg
cli
pop
mov
outsb
push
mov
lcall
mov
add
mov
push
jecxz
jmp
ja
jo
mov
xchg
sbb
aad
xor
jp
cld
gs
cmp
xchg
inc
push
adc
test
stc
pop
in
xor
or
mov
aad
sbb
shl
add
data16
mov
jno
cmpsb
popf
sbb
mov
mov
inc
sub
rcr
add
nop
xchg
adc
inc
add
sbb
int3
pop
sbb
xchg
or
mov
adc
push
imul
add
jg
cli
pop
jl
pop
pusha
shl
inc
ds
data16
das
repnz
ret
insl
jnp
push
push
inc
xor
aad
lods
dec
js
rcrl
movsb
jae
or
inc
roll
jl
sbb
add
lahf
movsl
add
xchg
mov
lret
jle
pop
mov
inc
jg
scas
xchg
outsb
decb
sub
mov
mov
arpl
inc
in
cmpxchg
adc
cld
pop
sahf
bound
cmp
pop
pop
mov
or
lret
lahf
test
shll
icebp
mov
aam
sbbl
mov
jg
mov
in
sub
sbb
mov
lcall
test
mov
in
push
bound
call
cwtl
test
xor
nop
xchg
loope
divb
jbe
jbe
cmp
ss
xchg
imul
sar
jmp
ljmp
cmp
push
shrb
fdivr
xchg
outsl
jge
add
dec
pop
vmovdqu
mov
push
mov
lea
inc
sahf
aaa
push
stos
jo
imul
xor
xchg
pushf
movsb
xor
cwtl
jno
repnz
or
shll
nop
inc
mov
dec
sbb
subl
sahf
les
pusha
sub
out
jb
hlt
bound
les
fidivs
push
inc
fimull
mov
jnp
lret
lret
mov
movb
push
rorl
sbb
cmp
lea
stos
jnp
inc
arpl
mov
cmp
ret
and
jae
mov
and
mov
repnz
mov
fisubrl
fsub
insb
out
cmpb
mov
mov
sbb
pop
dec
sahf
sbb
scas
xchg
jo
in
es
outsl
rclb
movsl
mov
sub
xchg
cmp
pop
mov
lret
mov
in
dec
cld
xchg
inc
mov
adc
ret
xor
out
mov
bound
iret
aam
pop
mov
sub
inc
pushf
add
jne
addr16
ja
inc
insb
sub
subb
jl
jp
xor
enter
cmp
xlat
adc
in
adc
mov
sub
ljmp
adc
cmpsl
and
jns
movb
dec
pop
mov
lret
xlat
mov
sbb
fmull
sbb
push
mov
stos
loope
sbb
sbb
pop
lret
pop
or
xchg
xchg
jb
xchg
icebp
fists
jae
arpl
sub
test
in
sub
addr16
call
lret
cmp
rcr
inc
fdivrl
pop
fstps
push
xchg
lea
icebp
inc
xchg
mov
sub
xchg
jecxz
mov
nop
add
in
aas
sarl
ja
mov
aam
out
insl
fnstcw
pop
hlt
jecxz
adc
push
leave
test
pop
jmp
rorl
jb
out
adc
divb
ret
cmp
cmpl
push
sar
imul
xor
and
in
mov
fs
adc
jbe
and
pop
dec
inc
imul
mov
movsl
fwait
adc
mov
inc
cwtl
mov
push
mov
jnp
sub
cltd
subl
ljmp
pop
js
sub
xor
pusha
into
inc
repz
pop
in
pop
jp
mov
clc
pop
cmp
cld
mov
pop
xor
add
pop
push
adc
lret
pusha
sarl
popf
cmp
jp
ret
push
addr16
jle
iret
pop
inc
xor
pop
push
lea
push
rorb
or
aas
addr16
sbb
lods
or
loop
popa
inc
pop
xor
out
loope
jp
mov
es
mov
fcoms
add
lods
daa
cmp
cmp
mov
cmovb
push
push
cmc
in
push
inc
stc
arpl
lret
push
fmuls
mov
push
aas
pusha
pop
dec
jne
repnz
mov
mov
sbb
ja
jp
ret
cmp
shrb
das
xor
mov
sub
inc
repnz
inc
imul
mov
adc
fdivp
or
push
add
mov
fld1
cmpsb
lahf
xor
sbb
movsl
out
xchg
shll
cmp
mov
das
cmp
sub
js
ficompl
xor
or
jne
loope
sbb
lahf
fdiv
sti
popa
ss
test
jns
cli
iret
add
outsl
dec
xor
dec
mov
xchg
call
clc
mov
cmp
sbb
cmp
pop
dec
and
call
jno
cmpsl
hlt
jecxz
testb
cmp
inc
stc
out
xor
cmc
push
mov
cmpsl
pop
push
aad
aam
repz
inc
jecxz
subl
xchg
hlt
mov
pop
mov
or
les
andb
pop
and
cmovg
pop
sub
test
sahf
adc
adcb
lcall
test
cli
sbb
push
inc
inc
loop
xchg
mov
jns
inc
mov
out
add
test
mov
jl
sbb
push
mov
movsb
loop
dec
and
sbb
dec
inc
or
xchg
mov
andl
pop
imul
sub
lret
pop
adc
pop
arpl
inc
and
adc
out
call
rolb
xchg
jl
mov
push
push
push
rcr
cmp
add
push
rcrb
test
mov
mov
mov
loope
add
call
push
xor
out
mov
push
popa
inc
xchg
insb
or
mov
mov
int
movsl
rcl
pop
xor
push
in
repz
mov
xor
mov
jne
mov
push
cmpsb
or
add
cmp
mov
daa
xor
adcl
dec
dec
int3
repnz
leave
inc
ljmp
mov
mov
movsb
movsl
sbbb
or
bound
inc
repnz
and
icebp
and
jo
mov
loop
mov
add
arpl
or
sbb
negl
mov
into
jmp
ljmp
jmp
lcall
mov
test
xor
movb
jno
pop
outsl
mov
out
repnz
aam
add
push
bound
packuswb
insb
test
ja
or
je
inc
cmp
adc
mov
add
icebp
insb
cli
adc
movsl
mov
pop
or
pop
jecxz
int
or
mov
outsl
int
enter
dec
fwait
add
dec
xor
loopne
mov
cmpsl
mov
outsl
test
test
or
xor
lods
repz
pop
jg
outsl
dec
and
mov
lahf
sub
pop
add
xchg
push
sbb
sahf
push
lcall
pop
sbb
xchg
andb
mov
insl
mov
cltd
fs
scas
cmp
push
mov
inc
scas
jge
add
mov
add
sbb
ror
push
inc
stos
fcomps
lea
inc
inc
and
test
test
ret
xchg
adc
mov
push
sub
imul
jg
xchg
sub
test
add
ret
gs
cmc
push
sub
mov
xchg
les
scas
popa
loopne
test
int
dec
stc
imul
ror
mov
dec
xor
dec
inc
adc
fwait
xor
lock
sti
xor
mov
xor
xchg
imul
inc
xor
adc
es
push
fnstenv
adc
add
cmp
or
in
out
das
sti
ret
jae
or
mov
or
dec
pop
dec
lods
aam
pop
fsubl
or
test
jmp
scas
scas
in
mov
jmp
add
mov
or
mov
ss
imulb
sbb
shrb
and
fstpl
push
dec
addr16
sbb
xorl
mov
xor
rcrb
and
ja
sbb
mov
test
sbb
xchg
mov
aas
out
idivl
scas
scas
lret
pop
cmp
leave
sub
cmp
ja
mov
push
dec
jmp
aas
adc
inc
inc
repnz
dec
shlb
aam
cmp
pop
dec
shrl
faddp
jae
data16
adcb
add
adc
int3
dec
adc
and
mov
lret
or
inc
or
and
xchg
into
add
cmp
sti
sub
cmp
popf
add
sti
call
mov
cmp
lret
pop
mov
sub
jge
testl
lcall
jecxz
mov
dec
mov
or
sub
loop
xchg
push
popf
lea
push
mov
xchg
jmp
push
test
movsl
add
scas
scas
mov
js
testl
pusha
jl
lcall
xchg
cmpsl
icebp
sbb
movb
xchg
daa
notb
das
add
ret
setns
out
addr16
out
dec
add
test
pushf
sub
dec
mov
imull
sahf
xchg
out
sub
shlb
or
xor
loop
sahf
push
incl
cwtl
push
mov
imul
xchg
and
scas
push
je
imul
insb
jns
sbb
inc
sti
ja
pop
lods
scas
mov
ljmp
xorb
popa
lahf
push
xor
pusha
and
stos
in
push
mov
fistpl
jbe
push
cwtl
mov
pop
test
cmp
dec
arpl
jle
mov
jo
mov
dec
pop
test
je
cltd
add
in
mov
hlt
fmull
sbb
lods
sbbb
js
sbb
or
divl
sub
cmp
push
sub
test
push
mov
adc
int3
loopne
sub
stos
pop
aad
jbe
lcall
pop
mov
aam
jmp
xchg
sub
mov
addr16
xchg
cmc
sub
sub
cmp
push
and
cmpsb
cvtdq2ps
bound
push
addr16
scas
dec
lods
les
daa
push
mov
mov
cmp
add
inc
imul
addl
out
mov
add
mov
mov
rorl
xchg
loope
jl
push
xlat
loop
sahf
adc
xchg
gs
jns
scas
ss
push
inc
test
push
lea
in
fisubl
dec
int
movsb
mov
mov
xchg
jl
and
mov
int
dec
xor
adc
repnz
xchg
in
adc
cwtl
dec
arpl
out
rorl
mov
lea
lret
les
and
ficompl
imul
mov
jmp
push
cmovno
cwtl
mov
push
jl
dec
or
fs
cmp
cmp
pop
out
mov
pop
xor
xor
fdivr
xor
mov
xor
movl
xchg
scas
jmp
sti
imul
mov
scas
data16
cmp
pop
inc
mov
jb
cmp
jecxz
pushf
fiaddl
std
mov
or
jle
call
pop
in
xor
or
push
adc
jnp
in
pop
cmp
pusha
std
mov
mov
sbbl
push
add
arpl
mov
arpl
mov
repnz
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
cmpsl
lea
jge
dec
push
pop
inc
sub
pop
sbb
out
xlat
ffree
lods
mov
daa
or
mov
xor
mov
cmc
call
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
movsb
iret
xchg
incl
mov
pop
and
outsl
je
mov
das
mov
movsb
iret
xchg
incl
aam
les
adc
add
mov
andps
das
mov
movsb
iret
xchg
incl
aam
les
js
add
je
or
dec
sub
jmp
rclb
pop
outsl
insb
fbld
stos
push
shr
popf
sub
ljmp
inc
in
cld
mov
dec
enter
or
jo
mov
mov
loop
push
jecxz
outsl
leave
jle
xchg
jg
xchg
pop
pop
lcall
mov
mov
sbb
xor
inc
cmpsb
mov
movsb
dec
xor
push
xor
push
mov
subb
jne
lock
shlb
aas
inc
xor
adc
stos
subl
cmpb
setnp
add
inc
mov
push
cltd
movhps
ljmp
arpl
aam
jmp
sub
and
jmp
js,pn
movsb
iret
xchg
incl
aam
les
adc
add
je
andps
inc
inc
cmc
mov
iret
std
xchg
in
xchg
repz
mov
pushl
inc
cmp
jl
jne
fs
cmp
ror
call
jmp
enter
daa
jne
push
push
add
jne
or
xor
xchg
movsb
pushf
sti
xchg
call
aam
les
adc
add
je
andps
inc
das
mov
movsb
iret
xchg
incl
aam
les
adc
add
je
andps
inc
das
mov
addl
mov
ljmp
imul
mov
ja
insl
repz
push
sbb
jge
or
inc
sti
inc
push
add
pop
sbb
cltd
inc
cs
sbb
push
aad
ret
inc
jno
xor
gs
iret
pop
cld
xorl
or
push
lret
int
sub
mov
lahf
sti
pop
jecxz
stc
xchg
je
push
fcoml
cmp
fnstsw
push
rorl
imul
or
add
hlt
les
dec
mov
pop
jmp
fsubr
mov
adc
psrld
pop
dec
cmp
iret
vpunpckhdq
fidivrs
mov
adc
sbb
lods
movb
ret
lret
pop
sub
lock
adcb
addr16
out
xor
sbb
scas
jmp
xchg
insb
or
xor
sub
adc
sbb
js
mov
add
add
movsb
push
pop
fnstsw
mov
and
and
jno
ljmp
dec
push
icebp
dec
pusha
test
aaa
adc
out
insb
into
into
push
cmpb
ret
js
fcoms
inc
adc
sbb
jle
addl
gs
mov
and
shl
jnp
pop
jp
mov
dec
mov
push
cmc
mov
js
je
pushfw
sub
adc
mov
mov
in
sub
pop
sbbl
leave
je
pop
push
push
aaa
push
std
adc
fmuls
testb
adc
mov
imul
mov
arpl
stos
mov
or
jbe
adc
mov
test
lret
lcall
test
jne
pop
push
daa
add
out
incl
movsl
inc
pushf
mov
jbe
or
pop
mov
in
mov
jmp
jp
push
adc
movsl
ret
push
sbb
mov
jns
sub
js
inc
test
adc
mov
shll
push
xchg
xchg
scas
push
psubusb
push
cli
jp
adc
mov
xchg
pop
subl
loopne
and
cmp
enter
push
inc
xor
mull
test
jb
popf
push
movsl
ds
and
imul
movsb
adc
inc
mov
push
pmullw
andb
jne
xlat
andl
sbb
xchg
mov
es
movsb
pop
lcall
mov
mov
xchg
popf
stos
stos
sub
lds
xchg
inc
jae
or
mov
inc
pop
or
sbb
andl
popf
pop
in
lods
lret
jnp
aam
lds
ret
pop
mov
mov
jb
mov
cli
in
rorl
in
pop
rcl
dec
out
push
and
in
hlt
ljmp
xchg
pop
and
std
xor
push
xchg
and
cmpsb
xrelease
push
push
pop
jnp
ljmp
dec
popf
pop
shrb
cld
mov
dec
jne
imulb
scas
lret
into
mov
outsl
cld
cmp
loop
xchg
mov
nop
xor
or
xor
or
mov
test
andps
icebp
ret
not
bound
sub
inc
seta
inc
pop
sahf
cmp
das
mov
pop
pop
xorb
jb
out
sub
hlt
fistpl
or
xor
inc
mov
cltd
aad
mov
pop
mov
xchg
xor
shll
xchg
shlb
cmp
shr
pop
inc
aam
mov
mov
sti
pusha
shll
adc
push
add
pshufw
or
and
ficoms
or
leave
cmp
arpl
push
mov
cmp
xor
idiv
ficoms
push
sarl
dec
shrl
in
stos
sti
popa
int3
fcomp
aad
hlt
loop
sarb
dec
out
add
out
repnz
ljmp
movsb
mov
and
xor
test
mov
jp
push
add
aad
loope
jle
sbb
or
test
push
lretw
add
ljmp
test
lcall
cwtl
daa
add
sub
sub
push
ret
mov
jl
dec
mov
pop
pop
in
jno
clc
cmp
dec
addr16
cmp
sub
pop
push
lods
mov
xor
in
ja
scas
pushf
jmp
lret
sbb
add
xchg
in
inc
int3
or
push
xor
out
inc
cli
int
and
and
subl
movsb
and
adc
or
dec
clc
sbb
dec
push
movsl
shll
mov
out
jmp
mov
outsl
jns
xchg
mov
xchg
test
pop
jmp
rclb
lock
mov
mov
mov
add
sbb
jp
mov
add
neg
movsb
add
xchg
adc
ljmp
lahf
outsl
adc
or
gs
sbb
leave
lret
subb
dec
sarl
test
and
int3
xchg
shll
into
xchg
mov
and
mov
pop
andb
jae
mov
dec
shrb
push
or
sbb
jmp
mov
add
lods
js
in
or
jb
in
sbb
shlb
xor
adc
jg
sbb
and
sbb
aam
pop
pop
repnz
jmp
jo
test
jnp
fistps
fwait
xchg
xchg
aad
jb
outsb
xor
int3
cmpsb
fstpl
shl
aam
call
xchg
mov
sub
outsl
movsb
inc
add
mov
and
dec
xchg
jl
xor
sbb
adc
mov
cmp
lea
shll
adc
fimuls
dec
mov
sub
or
ret
fcoml
mov
sbb
sub
sbb
mov
lahf
xor
mov
in
cs
adc
xor
push
push
xor
and
hlt
sub
mov
sarb
lret
das
jg
gs
fistpl
and
je
push
leave
popf
xlat
mov
pop
sub
pop
imul
jmp
rcrl
mov
jg
mov
cmc
data16
or
push
jecxz
pop
push
cmp
mov
popa
sbb
mov
push
mov
cwtl
jae
arpl
daa
int3
cmp
loopne
cmp
lcall
dec
mov
inc
mov
jae
pop
iret
jne
and
fnsave
xor
sub
cltd
mov
shlb
mov
dec
sbb
or
pop
cmp
jo
aaa
xchg
imul
xchg
shrb
cmp
nop
lcall
push
loope
test
pushf
mov
xchg
arpl
adc
arpl
dec
mov
push
push
add
es
dec
je
sub
pop
repz
jbe
dec
push
daa
add
pop
pop
mov
scas
adc
ror
mov
imul
mov
dec
ret
and
jno
add
push
cwtl
out
dec
mov
push
pop
cmp
mov
cli
xor
std
pop
mov
xlat
cmp
inc
adc
outsb
ds
pop
ja
sarl
lock
hlt
fwait
xor
repnz
xor
loop
decb
fisubs
push
test
out
add
sub
mov
incl
inc
add
xchg
sbb
adcb
inc
jnp
mov
push
bound
mov
lcall
rcll
adcl
imul
cwtl
mov
dec
lock
inc
sbb
cmp
cs
push
movl
imul
ljmp
pop
and
cmp
jne
aas
aaa
roll
jbe
xchg
ljmp
repnz
int
mov
and
xchg
mov
hlt
arpl
push
xchg
sbb
andb
mov
imul
jmp
sbb
inc
ss
fstpl
dec
or
mov
add
dec
xchg
dec
and
idivl
xchg
dec
jp
iret
dec
fsubrl
jmp
mov
ss
xchg
insb
mov
push
inc
aas
addr16
cmpsb
popa
fisttps
les
ss
popf
xchg
jnp
cld
jp
movl
cld
mov
je
xchg
push
loop
jp
push
out
jge
loopne
mov
sub
jg
mov
bound
stc
sub
cmp
insb
lret
xchg
pop
pop
and
sarl
fadds
sbb
enter
and
cs
pop
mov
fidivrs
mov
dec
in
fsubl
pop
mov
je
lock
mov
cmp
jbe
jbe
pop
inc
fdivrl
mov
popa
jg
pop
pop
mov
in
fucomp
cmp
sub
pop
dec
dec
pusha
and
cmp
or
call
sbb
xchg
sub
dec
dec
jge
test
cmp
sub
xchg
mov
inc
movb
stos
into
das
adc
mov
cs
shrb
push
mov
jno
cld
cmpsb
add
iret
mov
imul
sbb
push
pusha
cmp
pushf
cwtl
jg
in
aam
out
inc
in
ljmp
loope
adc
push
outsl
lret
xor
mov
jecxz
mov
dec
std
loope
pop
cmc
popf
es
xchg
adc
sub
sbbb
push
jae
int
push
dec
rorl
add
pop
xchg
add
jnp
fiadds
sbb
and
into
or
push
xchg
ljmp
jp
jns
ret
add
das
pop
iret
aam
xchg
add
pop
aam
push
pop
lock
fisubrs
scas
jns
fiadds
jle
and
xchg
cmpsb
les
js
and
xchg
into
jle
push
hlt
sarl
lods
out
pop
xchg
cltd
lret
sbb
or
dec
lahf
push
mov
xchg
push
lahf
cmp
push
ljmp
sahf
iret
sbb
sub
sar
xchg
aam
push
xor
outsl
and
jl
pop
pop
aad
cmp
sub
jle
xor
sbb
pop
add
fsubp
pop
cs
addr16
push
xchg
scas
add
arpl
mov
mov
pop
xor
scas
xchg
ja
and
insb
xchg
ja
mov
daa
outsl
scas
sub
popf
hlt
outsl
mov
xchg
dec
sub
out
ret
jg
ljmp
and
dec
in
cmp
adc
insb
mov
mov
stos
leave
push
ret
push
stos
xchg
xchg
aas
dec
push
jo
leave
dec
movsb
pop
gs
orl
add
loope
cmpl
mov
hlt
iret
icebp
mov
or
aam
gs
jecxz
dec
fwait
pushf
inc
mov
mov
mov
fisubs
hlt
mov
or
test
push
pop
shrb
push
jne
mov
inc
std
outsb
add
adc
dec
or
xchg
xor
xor
arpl
movsl
inc
sti
pop
inc
add
xlat
push
and
sub
sbb
shlb
mov
iret
vshufpd
xor
mov
inc
lret
imul
mov
nop
jg
leave
pop
pop
push
and
loop
or
sub
mov
lock
push
aad
xchg
cmpsl
fdivr
cwtl
sub
lcall
add
adc
scas
cs
incl
push
add
ljmp
fimull
mov
test
jmp
imul
jnp
loop
call
pop
std
mov
aas
pop
insb
clc
mov
subb
and
scas
sti
pop
imul
push
jbe
xorl
jb
btc
mov
xchg
fcoms
enterw
stos
jecxz
mov
cs
sbb
outsb
xor
stos
stos
in
pushf
cld
push
sub
adc
jg
cmp
xchg
test
push
dec
aaa
inc
fsts
adc
es
dec
lock
test
in
fbld
mov
or
call
cmpl
js
mov
inc
neg
fsubrs
rep
loop
add
adc
xchg
or
lds
in
or
in
push
fs
movsb
sbb
pop
pop
ja
lds
adc
sbb
push
dec
jno
hlt
movsb
aad
sbb
test
dec
cmpl
bound
or
cmp
pusha
adcb
sub
stos
jbe
mov
aam
push
mov
clc
xor
movsb
mov
dec
mov
jmp
aaa
pusha
je
push
mov
adc
and
scas
out
les
ljmp
jecxz
inc
jb
jmp
fwait
clc
ret
iret
add
inc
mov
ss
int3
jne
int3
pop
bnd
pop
and
inc
jp
jae
mov
andb
aad
ds
jl
dec
movsb
inc
cmp
mov
and
in
or
pop
jae
movsb
push
jbe
or
xchg
lret
jecxz
push
jae
cmp
outsb
popf
xchg
mov
jne
lods
pop
in
shlb
test
mov
rorl
subb
stos
dec
pusha
ror
divb
mov
das
cld
out
cmp
cmp
mov
mov
or
mov
pop
test
repnz
push
ret
leave
and
pop
test
or
out
pop
sahf
psubusw
mov
shl
push
jmp
ret
cmp
xchg
mov
fwait
sbb
jns
mov
xchg
jle
sub
fcoml
inc
or
adc
xchg
adc
stos
pop
mov
xchg
cmpsb
fidivl
cmp
mov
cld
xchg
addr16
mov
jne
adc
xor
stos
mov
cli
shr
jmp
push
add
aam
mov
push
movsl
fstl
jbe
mov
jb
add
fld
pop
adc
lahf
int
cmpb
imul
xor
xor
mov
aad
sbb
addr16
mov
mov
in
outsb
mov
push
push
repz
cmp
xchg
in
xchg
jp
cmp
adc
imul
xchg
cld
and
push
jnp
decl
xor
pop
sub
nop
nop
rorb
sub
push
push
jg
dec
cld
cmp
push
xor
dec
push
jg
add
mov
subl
pop
fimull
sbbb
jmp
js
mov
inc
insb
xchg
std
sbb
rcl
clc
sbb
ljmp
call
xchg
repnz
ds
mov
mov
scas
and
add
or
sbb
or
add
in
sub
push
iret
lret
les
popf
cli
push
fndisi(8087
mov
je
mov
rorb
aam
add
out
imul
movsl
sbb
movsb
lret
and
or
mov
push
xchg
jbe
cmp
dec
cmpl
test
add
add
or
loope
aad
and
or
jbe
clc
inc
and
lahf
add
jae
dec
test
jl
je
and
aas
lods
gs
bound
popl
fcmovnu
inc
add
call
inc
inc
mov
jge
mov
cmp
dec
subb
in
push
xchg
pop
dec
shlb
popl
jecxz
sti
dec
jno
xchg
lds
jg
fidivrl
rclb
add
stc
and
outsl
lods
ficoms
push
adc
fdivrl
idivl
mov
ficoml
iret
or
mov
repz
pop
jle
xchg
test
movsl
adc
je
push
lods
push
mov
or
and
cmc
pop
pop
subl
add
jae
adc
pop
xchg
jecxz
and
sbb
js
es
inc
int
xchg
cmp
sub
sub
add
imul
mov
dec
jno
sahf
adc
fsubl
es
cmp
nop
int
sar
gs
ss
cmp
mov
xor
cmp
xchg
daa
in
add
test
jecxz
jp
in
jg
mov
or
add
inc
iret
push
and
dec
xchg
mov
cmpsb
lret
mov
pusha
cmpsl
andb
lea
fistps
push
test
push
imul
dec
fstl
repz
popf
push
or
push
dec
sti
or
aad
popa
jg
sbb
or
lahf
out
stos
nop
out
mov
icebp
mov
mov
pop
dec
lods
shll
adc
in
fs
dec
scas
cmp
xchg
push
jg
cs
sub
xor
cmp
mov
sbb
dec
bound
leave
pop
xchg
mov
inc
inc
dec
pop
and
add
jo
sbb
dec
mov
jg
aas
lock
iret
pop
lret
dec
mov
inc
or
pop
nop
es
shrl
pop
add
sbb
ret
sbb
dec
adc
mov
mov
test
xchg
dec
pop
imul
inc
sbb
call
idivl
pusha
mov
push
roll
enter
shl
cmpsl
xchg
fstps
xor
xor
mov
jmp
in
mov
andb
out
mov
enter
loopne
fbstp
xor
mov
pop
cmp
cltd
hlt
sahf
rcll
out
popa
pop
xor
aam
adc
pop
fldcw
mov
fsubr
mov
jae
ds
dec
outsb
sbb
xor
and
pop
sub
push
into
inc
xchg
movsl
loop
inc
mov
in
aam
loop
or
daa
and
sbb
std
stos
adc
mov
nop
jg
fs
pushf
stc
jg
ja
or
lret
jo
shll
pop
fs
call
cmpsl
mov
push
loop
push
insl
ficompl
sbb
mov
mov
cmpsb
xchg
insl
mov
push
iret
test
or
lods
push
sbb
stos
mov
lcall
in
scas
insl
mov
ljmp
test
mov
cmp
mov
lahf
jl
push
cmpb
jne
sub
jae
lcall
shll
and
jb
jnp
nop
lock
cmpsl
outsl
int
les
repz
push
aam
insb
dec
mov
scas
arpl
lcall
sbb
push
and
or
mov
cmp
adc
sub
xor
or
xor
aaa
pop
push
pop
dec
pop
sbb
ror
sbb
push
dec
add
and
mov
push
out
imul
enter
cmp
pushf
das
or
mov
pop
cld
fs
adc
repz
pop
fisubs
inc
mov
dec
pop
out
rorl
cmpsb
inc
pop
xchg
call
inc
sbb
adc
cld
pop
pop
popa
outsb
inc
rcrl
mov
sub
xchg
pop
in
sub
out
adc
pop
or
sub
mov
push
xor
test
aas
pop
fwait
lahf
hlt
mov
cmpsb
pusha
jecxz
or
or
or
arpl
or
cwtl
scas
and
enter
daa
pop
sbb
mov
lret
mov
mov
lcall
xchg
jno
test
sarl
jns
mov
aam
stos
imul
jge
ljmp
cltd
sub
sbb
sbb
pop
mov
and
data16
jbe
icebp
ja
and
stos
xchg
xor
cmp
dec
imul
jne
pusha
push
sub
push
push
ficompl
lock
imul
mov
xorb
stos
daa
push
xor
fdivrs
sbb
dec
mov
jno
call
xlat
adcl
lahf
mov
fnsave
outsl
out
jecxz
cmp
push
pop
addr16
lret
dec
jno
dec
loope
outsb
push
fcmovbe
aad
mov
fsubl
fimull
fbstp
cmpl
add
mov
and
imul
xchg
inc
leave
ret
xor
sub
aas
pop
mov
lea
out
scas
aam
adc
sahf
and
lret
insl
push
rcrl
dec
sub
ljmp
sbb
jne
aad
cmp
mov
lahf
and
dec
jno
and
jbe
idivl
inc
cld
mov
xchg
pushf
pop
shrb
gs
dec
in
testb
jp
jno
pop
ljmp
push
cmc
ljmp
sub
push
or
inc
cmp
pop
and
push
adcb
stos
jmp
cltd
mov
dec
repz
inc
outsb
mov
push
pop
sub
dec
push
adc
jb
xor
add
int3
dec
in
xor
andl
pop
adc
ljmp
jnp
mov
mov
inc
mov
sub
clc
sbb
lods
add
lock
aam
stos
pop
push
jecxz
cmp
xchg
outsb
stos
adc
dec
bound
xchg
addr16
addr16
jmp
aas
fildl
xchg
leave
lods
xchg
mov
pusha
push
mov
xor
cld
inc
sbb
js
cmp
cmc
pop
pop
pop
insb
jge
dec
shlb
sti
scas
and
out
add
inc
dec
sahf
cwtl
jle
push
cmpsl
cmpsl
fistpll
ljmp
mov
cmpsb
pop
enter
mov
pop
loopne
lds
cld
jae
daa
xor
inc
mov
xchg
mov
push
mov
mov
std
mov
fwait
mov
shlb
clc
add
rep
lcall
sbb
xchg
and
lods
pop
sub
or
fdivrl
xor
cmpsb
push
lcall
leave
mov
insl
lods
pop
inc
adc
adc
cmp
mulb
push
xchg
bound
push
inc
aam
repnz
int
mov
mov
icebp
mov
push
jmp
gs
and
arpl
sub
sbb
push
cmpsb
and
cmp
insb
add
in
imul
cmp
or
jb
stos
aas
stos
jge
dec
xchg
aaa
je
xor
pop
inc
lcall
lret
aaa
lcall
fdivs
mov
fidivrs
daa
daa
enter
inc
lret
add
sbb
pop
stos
jmp
in
adc
aaa
scas
jmp
int3
movzbl
add
rorb
mov
sub
arpl
mov
insb
cwtl
test
mov
test
and
push
cmp
iret
adc
rcrb
das
push
xchg
jl
cs
cmp
mov
add
ja
insb
jmp
scas
cmp
inc
add
lret
in
inc
xchg
and
push
push
imul
mov
and
ret
inc
into
std
fsubrl
jge
mov
add
popa
flds
inc
insl
iret
xchg
incl
aam
les
adc
add
je
andps
inc
das
mov
movsb
iret
xchg
incl
aam
les
adc
add
je
andps
inc
das
mov
and
adc
test
je
in
aam
inc
scas
xor
and
adc
add
je
andps
inc
das
mov
movsb
iret
xchg
incl
aam
les
mov
xchg
adc
and
xor
int3
int3
int3
int3
int3
add
loope
imul
push
stc
cltd
or
adc
mov
pop
test
mov
imul
cmp
cltd
or
sbb
or
cmp
imul
mov
add
ljmp
test
aas
lret
mov
sub
es
add
sbb
out
jb
push
mov
mov
inc
aam
fcoms
lock
pop
inc
out
add
jno
mov
push
cmp
cmp
or
imul
imul
push
adc
push
xchg
pop
mov
pop
xchg
out
or
and
or
out
sub
mov
stc
leave
push
movb
cmpsb
mov
mov
js
push
mov
and
or
cmp
cltd
aam
imul
jns
test
loope
lods
rol
je
or
or
or
cltd
sub
xchg
test
mov
adc
fldcw
lock
xor
out
jmp
imul
cltd
sub
lahf
insb
mov
test
test
cwtl
popa
mov
and
or
imul
cltd
fnstenv
jmp
lea
icebp
jo
js
pop
xchg
jp
cmp
faddl
push
sbb
cmp
dec
movsl
sbb
sub
cmp
leave
or
sbb
sub
cmp
imul
mov
sub
cmp
leave
or
sbb
sub
cmp
imul
stos
inc
hlt
js
jecxz
and
insb
mov
fs
outsb
clc
adc
push
cmp
lea
mov
push
repnz
mov
push
xchg
test
fstps
and
popf
outsl
aad
fcoml
enter
fists
push
leave
aad
ret
inc
repz
mov
sahf
xchg
xchg
add
dec
jmp
jb
jl
mov
pop
mov
jge
cmp
mov
mov
fldcw
fs
mov
out
lods
stc
movsl
lret
sub
or
mov
or
jnp
aam
fistl
ljmp
cmp
rcrl
mov
popf
push
mov
add
sbb
cmp
dec
fisttpll
scas
sub
mov
cmp
in
shrl
sub
xchg
mov
ret
aam
imul
cmp
shrl
sbb
insl
scas
pop
add
mov
rclb
out
ljmp
cmpsl
mov
adc
ja
aam
nop
push
imul
pop
mov
adc
or
push
mov
lods
sbb
sub
repz
cli
addr16
pop
in
icebp
cmp
cmp
mov
or
dec
inc
add
mov
aam
jne
lods
int3
aam
xchg
jnp
fimuls
xchg
xor
andl
flds
sbb
jne
aas
mov
xchg
fdivr
fs
loope
xor
push
addr16
mov
cmp
mov
inc
add
icebp
aas
pop
pusha
cmp
inc
cmp
movsb
in
xor
mov
repz
mov
mov
xorb
cmpsl
mov
sub
and
out
xlat
xor
jmp
inc
cmc
bound
pop
scas
and
push
adc
adc
data16
mov
and
ret
imul
cmp
ret
push
xchg
subl
mov
dec
rorl
sbbb
popf
jb
iret
pushf
fwait
out
sti
icebp
repnz
push
in
popf
jae
jp
mov
push
stos
cltd
cmpsl
mov
ret
jbe
sub
cld
fsubrp
fbstp
cmpsb
dec
bound
shll
xchg
mov
sub
mov
or
mov
dec
cmp
and
test
push
mov
daa
mov
fwait
push
push
mov
jle
pushf
ret
test
into
test
cmpsb
fucompp
ds
and
jno
mov
xchg
mov
or
lea
inc
clc
cltd
cmpl
call
pop
mov
ret
out
pop
fdivrl
cmp
imul
sub
int3
shrb
mov
icebp
fiaddl
inc
sub
xchg
inc
jmp
aas
lcall
push
cmp
ljmp
add
stos
insl
xor
lods
cmp
jo
cmp
lock
sti
stos
xor
cld
inc
cmp
rclb
repz
jle
and
jl
jge
jne
mov
repnz
mov
xchg
fists
data16
leave
inc
mov
stos
dec
insl
xchg
add
data16
hlt
loop
fwait
adc
push
imul
adc
repnz
das
inc
push
push
test
outsb
fucomp
push
jg
daa
cs
shl
cli
jl
rclb
push
or
lods
mov
test
inc
movsl
pop
cmpsb
lods
jp
stos
xor
mov
xchg
fidivrl
adc
sbb
stos
adc
dec
push
es
sar
inc
adc
or
loope
add
push
adc
bound
mov
les
out
xchg
xor
push
insb
add
push
std
cmc
sub
sbb
push
ljmp
sub
test
jge
add
por
push
inc
dec
ds
pushf
mov
mov
push
cltd
add
imul
test
sub
jge
mov
cmp
or
mov
ds
or
ja
jecxz
fisubs
sbbb
lea
cmp
je
ret
out
mull
stos
in
xchg
movsb
pop
jo
pop
mov
jno
mov
xor
sbb
dec
push
data16
push
es
xchg
aam
mov
jg
adc
jmp
in
into
xchg
out
imul
stos
shlb
or
mov
and
jge
or
mov
shrb
int3
add
dec
lret
add
fisubrl
test
lea
pop
pop
pop
sti
sti
add
add
and
inc
mov
cmpsl
pop
outsl
sahf
repz
repz
stos
repz
out
popf
stc
addl
inc
dec
mov
sbb
pop
push
gs
push
push
lret
sub
fisubs
sbb
mov
jl
cmp
outsl
jns
addr16
daa
xchg
mov
add
mov
jno
or
pusha
inc
push
lea
and
jne
jg
sub
pop
add
idivl
rcll
push
lahf
jecxz
std
adc
loope
test
lds
xchg
mov
out
sub
sbb
and
push
mov
add
aad
mov
into
mov
pop
shr
out
dec
cmp
std
add
or
es
jne
or
lods
popa
scas
xlat
push
es
mov
dec
enter
and
das
pop
inc
out
lret
movsb
les
mov
mov
sub
jno
inc
daa
movsb
and
jp
outsb
jb
jo
mov
lods
cmp
lahf
mov
lcall
daa
and
inc
and
jo
pop
data16
loopne
sbb
in
mov
pushf
cld
sub
inc
lcall
xor
push
ljmp
cmp
mov
fwait
mov
dec
insb
dec
ret
jge
push
movsb
adc
outsb
dec
fcmovu
pop
dec
mov
mov
rolb
lret
out
out
mov
xchg
xchg
and
cmp
xchg
adc
jbe
push
lret
test
orb
add
pop
addr16
stos
sub
sub
xlat
sub
sbb
add
repz
dec
or
jb
testb
dec
or
popf
cmp
push
dec
push
sub
fcompl
sti
or
xor
cmp
or
sub
inc
cld
inc
mov
cmp
shrl
iret
push
out
adc
push
sub
and
incl
mulb
push
ljmp
iret
mov
bound
clc
sbb
jae
mov
rorb
in
stos
addb
pop
dec
mov
cmp
pop
ds
xchg
add
and
nop
pushf
movsb
aad
mov
sbb
xchg
jo
inc
push
xor
lea
jmp
pop
xor
mov
insl
or
mov
outsl
in
push
movsb
repz
js
dec
cmpsl
adc
xlat
sub
scas
add
je
sub
jb
stos
push
je
mov
and
dec
fisttpll
dec
jnp
inc
add
inc
xor
lahf
xchg
ret
aad
jae
stc
fldt
or
push
mov
sub
loopne
pop
insl
scas
xchg
popf
mov
mov
inc
cmp
aas
stc
jno
pop
loop
or
sbb
xor
fs
bound
in
stos
sbb
int3
stos
sbb
mov
mov
or
jecxz
std
push
arpl
mov
scas
pop
mov
mov
aad
nop
btc
push
in
outsb
sbb
mov
pop
es
or
add
adc
loope
in
out
bound
nop
les
movsl
push
sbb
pop
sti
mov
jno
add
pop
mov
pop
in
lds
aad
mov
in
pop
sbb
mov
aad
jmp
out
ror
jecxz
jle
iret
sub
push
das
movsl
bound
bound
xor
sub
or
pop
leave
out
pushf
cmc
jp
insb
repnz
xchg
push
movsb
pusha
cmpl
scas
pop
xor
insl
call
scas
add
out
xchg
cmp
adc
sbb
and
mov
dec
lock
jae
cmp
dec
xchg
or
xor
rcr
or
mov
mov
cmp
andl
test
cmp
movsl
jl
lret
mov
scas
cmp
mov
sub
shrb
outsl
dec
scas
inc
mov
arpl
and
int3
jge
xchg
lcall
movsb
leave
mov
mov
sbb
fiadds
lcall
int3
lock
lds
inc
stos
repnz
jo
lock
fcomps
jl
lret
jle
jnp
ficoms
xor
add
imul
pop
mov
sbb
sub
cwtl
and
sbb
int3
out
sub
rcl
outsb
clc
xor
cli
push
mov
sbb
jle
sbb
hlt
orb
lahf
xchg
adc
pop
and
aaa
shl
mov
xchg
fdivrl
fildll
stc
popf
insb
rclb
push
sbb
sbb
add
sbb
stc
and
push
push
xor
adc
mov
xchg
es
jp
push
fadds
lahf
sbb
mov
mov
cwtl
mov
and
scas
pop
and
lea
fucom
or
rcrb
cmc
mov
mov
push
cmp
seto
pop
pop
les
jbe
frstor
xor
out
fadds
adc
dec
mov
les
or
lahf
outsb
sub
test
or
jg
jbe
loop
jmp
add
dec
inc
fwait
sbb
jle
mov
xchg
or
shlb
adc
insl
aaa
xchg
inc
pusha
push
inc
and
leave
add
repz
int
mov
or
add
stos
arpl
push
jbe
lock
mov
sub
or
jne
adc
pop
test
add
push
cltd
mov
sub
adc
insl
sub
adc
add
lret
mov
out
and
ja
fwait
ror
cmp
adcb
cmpsb
mov
hlt
xchg
les
das
push
sub
aad
and
pop
in
addr16
in
movb
cmp
sti
or
sti
xor
rorb
xchg
hlt
cmp
shll
jge
js
push
rdpmc
popa
popf
push
xchg
add
xor
insb
jecxz
stc
jbe
xchg
jmp
pop
rolb
dec
sub
cli
jae
add
sub
push
ret
cmp
cld
sub
out
dec
mov
mov
insl
cmp
adc
rcll
call
pop
mov
dec
jecxz
rol
and
xchg
rcll
dec
cmc
rcrl
push
dec
and
aas
cmp
adc
sub
or
sar
addl
push
stc
nop
mov
mov
pop
sub
add
pushf
psubusw
pop
sub
int3
repz
and
dec
pop
and
sub
mov
out
jge
sub
add
xchg
enter
cmp
xor
les
aaa
stc
pop
push
cmp
dec
stos
test
pusha
cs
sub
sub
cmp
inc
dec
or
sbb
bound
call
imul
out
pop
pop
and
xchg
mov
add
adc
dec
jmp
shll
cmp
mov
stos
rorb
push
fnstsw
pop
add
data16
int3
popa
mov
mov
mov
sti
and
cltd
xor
fwait
pushf
pop
sbb
test
ret
cs
lret
pop
jae
jne
mov
adc
mov
inc
clc
addr16
shrb
fistl
xor
arpl
or
xor
push
je
push
and
movsl
sti
loope
jle
enter
push
jno
mov
jo
xchg
out
mov
in
add
test
mov
adc
mov
ret
ja
cmp
xor
inc
shll
les
add
in
gs
mov
lods
rorl
gs
repnz
pop
mov
or
adc
cs
stos
cs
loopne
adc
mov
test
dec
and
mov
jmp
xlat
cmpsl
adc
out
lret
cld
pop
out
gs
test
mov
mov
out
jge
jecxz
jo
ds
enter
add
jg
pop
insb
xchg
mov
pusha
xchg
sbb
or
imul
pop
mov
les
mov
mov
pop
add
lahf
mov
sbb
lea
sarl
mull
xchg
lock
cmp
pop
dec
push
cmpl
jle
dec
addr16
jle
xor
aaa
mov
aaa
dec
ss
cmp
add
ret
call
les
lahf
insl
or
fcompl
and
lods
xchg
jp
add
jg
xchg
mov
insl
jle
rcrb
int3
fs
push
mov
lcall
mov
cmp
aaa
sti
mov
mov
insb
test
xchg
std
lds
insb
fs
jo
sbb
pop
xor
fs
in
stc
stc
cmc
jbe
loope
mov
lret
popa
push
fsts
stos
ret
xchg
xchg
nop
sbb
cmp
and
push
stos
cmp
add
jnp
jmp
add
push
pop
and
shl
cmp
xchg
dec
sete
or
and
icebp
mul
repz
out
adc
mov
xchg
cmp
pop
push
mov
imull
scas
cltd
lods
cmp
mov
je
xchg
cmp
movsl
mov
xchg
xchg
js
dec
mov
add
out
and
xchg
push
pop
pop
out
gs
int3
cld
inc
mov
cld
sub
call
loope
pop
ret
push
hlt
cmp
and
rcrb
testb
imul
aad
call
sbb
sahf
xchg
nop
and
and
mov
pop
imul
cmp
mov
popf
into
mov
mov
outsl
loopne
test
cld
shrb
xchg
mov
jbe
add
mov
mov
sbb
sbb
das
lret
lods
callw
popl
sub
jns
pusha
or
dec
into
mov
mov
sub
insb
xchg
sbb
sub
test
mov
loope
jmp
dec
push
mov
movsl
daa
rdpmc
aas
mov
and
outsl
in
jg
lock
inc
cld
jbe
push
dec
xor
mov
enter
dec
lods
test
cli
mov
sub
jle
mov
fwait
adc
push
mov
inc
add
ficomps
dec
cmp
mov
xchg
xorl
adc
push
subb
int
rcrl
add
adc
pop
dec
rol
mov
sahf
lock
lcall
jecxz
out
adc
inc
loopne
out
orb
inc
insl
add
rolb
ljmp
pop
push
add
in
jbe
cmpsb
mov
out
andb
push
rolb
jnp
enter
inc
xchg
push
push
lahf
fadds
test
lds
dec
cmp
gs
pusha
out
mov
aas
sbb
inc
push
ret
ret
adc
stos
sub
cmpsb
xchg
mov
mov
jmp
jae
ret
jmp
mov
sub
sub
lret
xchg
xchg
inc
cmc
pop
enter
int
bound
push
mov
cli
arpl
cmc
orb
ret
jno
lds
xchg
pop
cmc
ret
in
cs
fs
scas
dec
mov
popa
push
mov
dec
sbb
xor
fmull
data16
cmp
lret
cmpsb
xor
cli
mov
and
add
push
mov
out
fisttpl
xor
ret
pop
lea
pop
xchg
and
xor
dec
scas
stos
sub
and
jno
and
aad
fistl
mov
idivl
aam
push
pop
push
sbb
xchg
lahf
insl
ficoms
mov
xor
adc
mov
mov
repnz
mov
adc
cmp
adcb
dec
popf
cmp
sbb
sub
sbb
es
pop
jae
testl
mov
outsb
int3
sbb
xor
push
mov
sarb
ret
pop
cmpsl
jmp
mov
lahf
jnp
pop
xor
insl
mov
jmp
testl
pop
int3
mov
repz
jbe
repz
div
imul
rol
scas
std
cld
daa
test
pop
imul
mov
push
pop
negl
mov
xchg
sbb
jp
pop
orb
xchg
insb
js
filds
push
jecxz
sbb
and
adc
into
cmc
movsb
jb
xchg
pop
add
pop
out
mov
int
imul
mov
popa
scas
pop
xor
imul
stc
ljmp
jmp
repnz
jb
push
daa
pop
add
push
fcmovnb
dec
sti
mov
aad
ret
loopne
adc
cwtl
sub
cmp
in
inc
cmpsb
nop
repz
das
popf
in
mov
int3
imul
es
data16
popa
in
nop
sub
and
mov
pop
sbb
and
lret
scas
cwtl
cmp
sbb
adc
xor
in
outsl
out
inc
xchg
cmp
push
js
adcl
das
shr
in
imul
mov
pop
jo
jecxz,pt
xbegin
sub
cmpb
insl
push
mov
out
ret
insb
mov
stos
mov
arpl
add
xor
ret
adc
xor
aaa
ret
xchg
adc
fcmove
into
mov
jecxz
or
mov
mov
mov
ja
in
jno
daa
xchg
enter
adcl
push
sti
add
sbb
pop
mov
das
push
pop
dec
pop
jp
sti
xchg
stos
dec
dec
out
cmp
fadd
stos
cwtl
dec
xchg
sbb
sub
cmc
xchg
add
jo
outsb
inc
dec
pop
pop
cmpsl
push
dec
and
push
xlat
jnp
adc
mov
adc
xorl
fldt
mov
pop
pop
sub
inc
pushf
and
sbb
repz
cmp
int
loop
xor
int
dec
push
push
xchg
rclb
hlt
es
push
ret
icebp
xchg
or
jne
xlat
mov
or
fdivs
mov
lret
mov
pop
or
xor
shll
cmp
add
enter
cmpsl
lods
psubsb
jae
push
mov
cli
loop
mov
dec
test
into
sbb
ds
pusha
notb
outsb
sub
cmp
cmp
adc
test
mov
cmp
mov
int3
test
and
mov
outsb
cwtl
cmc
loop
lcall
mov
testb
push
in
popf
pop
sub
dec
movsb
or
repz
pusha
mov
mov
jmp
xlat
les
andl
xor
pop
test
insl
les
cwtd
push
sub
push
push
mov
shrb
xchg
sar
in
xor
mov
inc
jb
jne
lret
mov
sarb
jnp
push
push
mov
inc
cmp
inc
icebp
pusha
imul
out
sbb
push
cld
mov
imul
sbb
leave
test
dec
xorb
jmp
cmp
push
push
mov
ficoml
cmc
std
shr
pushf
mov
adc
mov
je
jne
iret
clc
pusha
inc
test
lret
loopne
mov
adc
stc
movsl
fimull
cmc
or
inc
fisubl
push
div
push
popf
daa
lret
mov
je
push
add
jp
inc
sub
add
xchg
into
add
out
xor
sbb
int
fdivrl
xorb
or
popf
out
push
call
mov
fucomp
icebp
or
mov
cmp
mov
lea
adc
xchg
xchg
out
jno
lods
xchg
jno
add
pop
fisubrs
pop
scas
inc
enter
xchg
mov
and
ret
mov
xor
jg
mov
hlt
ds
sub
shrb
and
lock
sub
jb
test
xchg
lret
sbb
sbb
and
inc
call
jecxz
jmp
into
cld
xchg
pusha
jge
aad
paddd
sti
add
adc
cmpsl
push
int
add
mov
clc
mov
mov
fs
pop
inc
call
xor
jns,pt
rcll
inc
xchg
push
loop
add
sti
loopne
lcall
and
inc
or
dec
jne
pushf
enter
pusha
pop
aam
or
cld
mov
pop
mov
lds
fbstp
lcall
into
pop
jl
sub
dec
mov
test
or
setb
push
sub
mov
jbe
and
jno
gs
xor
sarb
dec
stos
enter
inc
jmp
imul
jl
jp
jnp
pop
stos
mov
pop
sub
mov
arpl
mov
cmp
std
add
pushf
jb
jne
and
inc
test
xorb
mov
stc
xchg
cwtl
clc
sub
cld
pop
sbb
ja
cmp
icebp
push
xor
push
lret
sbb
add
push
les
mov
movsb
push
ret
xor
xchg
xchg
popl
pop
lods
xchg
lods
imul
jg
add
iret
pop
xor
jae
arpl
xor
push
mov
jnp
jg
js
xchg
jo
lea
sbb
sbb
add
jo
jae
mov
fmul
ss
mov
jmp
psllq
inc
ret
xor
xchg
mov
xor
xchg
faddl
imul
int3
and
jmp
aad
or
mov
xor
xchg
shll
cmp
ret
enter
nop
cs
or
jge
push
xor
and
add
inc
mov
mov
jbe
out
lea
mov
mov
cld
mov
mov
addr16
inc
mov
cmp
mov
insb
jle
mov
jne
or
aad
bnd
insl
sbb
leave
inc
mov
cld
jg
add
sbb
sbb
push
fidivl
xor
lock
out
scas
jecxz
pop
adc
adc
cltd
push
cli
int
and
pop
adc
lds
mov
js
push
icebp
add
imul
call
mov
ret
ja
test
cmp
ret
ss
xchg
lahf
ja
cld
lcall
cmp
lcall
sahf
xor
jge
add
pop
add
pop
xor
pushf
dec
sbb
ja
push
dec
push
pop
in
inc
ljmp
add
xchg
out
or
xorb
outsl
mov
sbb
fisubs
aam
inc
add
mov
cmp
lea
lods
push
fsubs
pop
pop
dec
or
inc
inc
aaa
jp
xchg
mov
jo
or
mov
ss
sub
out
dec
inc
xor
repnz
adc
ja
xor
xorb
adc
mov
xor
jo
ficoms
or
rolb
inc
imul
in
cld
pusha
sbb
mov
aam
gs
sub
cmp
leave
or
sbb
sub
cmp
imul
mov
sub
cmp
leave
or
sbb
sub
cmp
imul
mov
sub
cmp
int
fstps
loopne
std
cmp
push
jne
loope
push
mov
sub
mov
mov
sub
dec
inc
adc
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
adc
jns
push
ljmp
mov
fincstp
jmp
mov
mov
ja
inc
jns
or
sbb
ret
out
xlat
sub
mov
cwtl
mov
mov
ja
out
popa
push
adc
add
xor
cs
cmp
xchg
test
aam
rclb
and
adc
mov
xor
and
add
cmp
in
aam
imul
lock
add
cmpsl
push
scas
hlt
xor
xchg
les
jb
pop
mov
mov
es
dec
push
pop
jbe
fdivl
cltd
cmpsl
dec
mov
out
sub
or
sar
call
jmp
cmpsb
lret
outsl
push
les
adc
rcrb
fnstenv
movaps
shll
and
cwtl
mov
xchg
inc
push
es
hlt
insl
mov
xchg
mov
inc
adc
ss
lahf
push
cmp
iret
dec
cmpsb
mov
xchg
xchg
outsb
pop
sbb
add
sub
and
icebp
xlat
loopne
xchg
mov
stc
cmp
sbb
pop
sub
jb
mov
xchg
mov
int3
fdiv
dec
and
or
jnp
jge
ja
inc
imul
mov
ljmp
xor
or
jns
jno
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ja
inc
jns
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
mov
es
xor
daa
shl
inc
ja
dec
lods
sub
testb
pop
adc
mov
push
scas
mov
or
dec
ss
repnz
sahf
mov
dec
out
lahf
jecxz
stos
or
sbb
sbb
adc
je
insl
je
mov
fwait
pop
in
add
or
jnp
dec
stos
sub
or
xchg
out
sarb
jecxz
xor
xor
loope
pop
xchg
pusha
push
dec
or
ficomps
inc
movsb
xchg
or
cmp
fcomip
mov
mov
std
push
or
push
xchg
lods
leave
idiv
xchg
push
xor
mov
mov
repnz
adc
daa
aaa
mov
and
dec
dec
pop
xchg
pop
int
push
cwtl
int
out
in
xlat
adc
inc
xchg
in
into
push
mov
push
or
mov
or
or
or
sub
mov
jno
cmp
lock
adc
test
cmp
xchg
fdivl
lock
sbb
out
lds
cwtl
add
cmp
cmp
sub
std
mov
xchg
mov
repnz
fidivl
sub
inc
mov
jbe
or
xchg
daa
adc
jb
fistl
daa
push
or
sti
jbe
shll
data16
mov
dec
cld
mov
icebp
mov
shrb
mov
lods
shrl
sti
adc
push
daa
mov
push
cli
iret
insl
cmp
xor
daa
cmp
add
mov
cmc
loopne
enter
mov
xor
js
inc
stos
and
xchg
pop
add
mov
lds
dec
adc
fs
push
shr
mov
adc
shlb
sub
push
les
aam
cmp
repz
or
mov
push
sub
call
sarb
cmpsl
sbb
shlb
sub
outsb
push
bound
dec
ja
jae
xchg
lret
mov
sbb
inc
sbb
jns
sbb
or
inc
data16
sub
push
stos
sub
cmc
add
dec
fs
xchg
loopne
icebp
shl
xor
mov
nop
in
and
je
in
inc
call
fs
push
xor
subb
xchg
and
and
or
xor
fdivr
lods
xor
add
aad
fisttpl
sub
out
fistps
psrad
sub
sub
rorl
push
mov
out
push
outsb
int
cli
jle
add
lea
jg
sub
aad
xchg
pop
ret
xor
int
pop
js
fisttpl
popa
adc
lock
mov
bswap
dec
push
in
sahf
mov
je
or
in
mov
cmp
lret
and
sbb
notl
xor
push
pop
mov
std
dec
push
jbe
fcmovne
dec
jbe
arpl
outsb
cmc
popf
xor
or
cmp
test
out
or
add
jo
and
fwait
stos
fldcw
or
add
adc
in
pop
rcrl
pop
in
sbb
daa
leave
sbb
cmpsb
out
push
and
cmc
test
xor
hlt
inc
cmc
into
mov
add
sbb
dec
rol
clc
jle
or
or
or
mov
pop
imul
dec
and
sbb
scas
cmpsb
aas
aas
in
in
cli
scas
clc
ja
mov
pop
push
mov
inc
scas
xor
in
xchg
dec
cwtl
out
jp
in
mov
jae
pop
xor
cmpsb
pop
cli
jbe
sbb
sarb
mov
mov
nop
cld
pop
and
cltd
test
cmpsb
mov
xor
rorb
cld
in
push
stos
push
scas
pop
xchg
imul
xchg
stos
adc
rcr
popf
jbe
negb
sbb
enter
mov
mov
jecxz
cltd
xchg
or
in
pop
add
add
stos
mov
and
pop
or
lea
ds
in
mov
sbb
popa
fwait
adc
adcb
and
mov
add
pusha
dec
fidivrl
push
test
push
dec
aam
pusha
daa
cld
out
lahf
lret
mov
rclb
pushf
cmp
inc
push
loopne
dec
pop
dec
jbe
mov
shll
es
pop
in
ret
push
scas
test
cli
inc
xchg
lcall
out
xchg
jp
push
lds
xchg
outsl
fisubrl
loopne
jmp
leave
xchg
and
xorb
mov
sub
pop
fwait
test
sbb
fimull
jne
mov
jg
adc
push
cmp
add
jecxz
cmpb
jecxz
call
dec
push
into
in
jecxz
inc
dec
pop
loop
xchg
sub
fstps
inc
lods
jge
xchg
int
imull
mov
xor
call
icebp
fld
popa
addr16
cmp
fs
jns
ret
adc
cmpb
push
fwait
cmp
icebp
mov
loopne
cwtl
pop
in
and
popf
inc
iret
popa
cwtl
enter
and
mov
test
fstpt
stc
cli
jl
jecxz
lret
das
and
pop
sub
inc
repz
leave
add
adc
ja
jno
lret
push
ja
lds
nop
icebp
repz
adc
stc
repnz
add
pop
or
inc
lret
mov
xchg
jle
cli
add
push
ds
jge
clc
xor
or
inc
adc
icebp
sub
cmp
pushf
std
jns
pop
repz
pop
add
adc
mov
insl
add
push
movsb
lock
mul
lret
cwtl
mov
roll
inc
aas
ficomps
xchg
js
inc
add
dec
mov
sub
add
push
xlat
rcll
fdivl
add
xor
cmp
xlat
adc
scas
shlb
jne
es
jl
pop
cmc
movsb
fiaddl
xchg
push
sbb
roll
imul
cmc
js
sti
out
cmp
xor
sub
jl
lods
xchg
fldt
test
jmp
cltd
xchg
test
mov
dec
mov
pop
shr
test
xchg
dec
add
lock
cli
mov
orl
lret
lds
xchg
mov
leave
xchg
or
mov
les
lea
arpl
call
scas
into
lods
push
shlb
pop
stos
movsl
mov
aam
inc
push
xchg
mov
push
cld
mov
cltd
xchg
adc
add
xor
out
mov
addr16
stc
mov
xchg
cmp
call
mov
cmp
mov
repz
enter
mov
lahf
adc
rcll
add
sub
or
pop
push
cld
iret
movb
mov
out
mov
xor
fimuls
out
test
daa
inc
int
leave
mov
fs
inc
dec
andb
rcrl
or
sbb
ss
dec
sub
nop
mov
or
roll
fcoml
cmpl
fldcw
cmp
inc
lods
lret
and
arpl
mov
adc
sbb
mov
cmpsl
pop
mov
cmp
int3
sub
xor
sarb
mov
pop
mov
jmp
mov
aaa
repz
xor
sbb
int3
push
test
or
std
ss
addl
or
stc
loope
imul
add
pusha
xor
sub
out
mov
and
mov
push
mov
fmull
push
mov
std
aam
inc
xor
jns
in
iret
push
inc
ret
jmp
add
scas
dec
mov
gs
mov
ret
jp
cwtl
dec
cwtl
sar
ror
rcl
fisubl
pop
xor
lret
out
aaa
sub
and
mov
addr16
pop
mov
int
adc
shrl
cs
inc
push
or
xchg
xchg
and
xchg
and
jns
arpl
scas
adc
popf
push
dec
lods
ficompl
loop
cltd
lret
or
movsb
and
sbb
imul
sti
mov
ret
inc
aas
testl
xchg
aad
js
adc
jae
mov
out
mov
insl
or
lcall
roll
into
sbb
insb
adc
pop
sbb
stos
jno
push
dec
mov
hlt
insl
iret
test
out
and
mov
or
push
imul
inc
cld
mov
adc
js
xor
lods
fidivs
ficompl
mov
sbb
test
sbb
test
popf
fmul
pop
push
xor
cmp
push
idivb
int3
cwtl
push
les
out
fimuls
pop
stos
iret
pop
xchg
dec
stc
das
inc
test
mov
mov
lock
xchg
adc
sbb
ljmp
mov
xor
dec
sahf
popw
mov
mov
rorb
movsl
shll
cmp
or
js
js
mov
sub
push
mov
test
jo
jg
push
cmpsb
shll
jle
ret
out
cltd
pop
jbe
in
loopne
push
or
sub
js
in
mov
jb,pt
lret
or
sub
push
xor
in
bts
shll
test
jb
ret
pop
stos
xor
int3
arpl
xchg
jno,pt
add
push
into
ss
in
adc
imul
icebp
push
aad
xchg
add
sub
ja
stos
xor
shll
js
mov
mov
mov
cld
xor
xchg
fisubrs
pop
or
pop
dec
push
add
fdivr
pushf
or
outsb
mov
jp
nop
xchg
in
mov
dec
ret
loope
pop
scas
gs
std
or
stos
push
je
jnp
call
and
out
or
dec
jb
push
cmp
hlt
movsb
out
cmp
leave
xor
les
js
and
add
and
adc
sbbb
or
addr16
sub
insl
cmp
aam
loop
mov
dec
pusha
push
insb
repnz
sti
inc
cs
xor
scas
scas
adcl
mov
mov
jecxz
mov
dec
xchg
mov
test
pop
mov
push
test
inc
loop
jnp
pop
push
cmp
popf
cmc
or
loop
sbbb
adc
stos
out
movsl
fs
sub
and
adc
dec
fbstp
mov
cld
jae
adc
imul
out
xchg
jne
jbe
repnz
dec
or
call
out
and
pusha
xor
ja
fsubrs
sub
or
movsl
fdiv
fs
push
popa
mov
push
cmpsb
sub
or
add
sar
shl
leave
jo
pushf
push
and
arpl
cmpsb
loope
loop
xchg
outsb
cltd
xchg
inc
or
xorl
dec
lcall
cwtl
and
mov
loop
rclb
cmpsb
push
rcll
mov
in
jle
hlt
test
add
cmpsl
jns
sbb
and
sub
popf
mov
lret
ljmp
adc
mov
push
jne
adc
fstpl
adc
add
rcr
sarb
cmpsb
sti
je
jno
aaa
push
mov
sbb
jmp
test
sub
sbb
repz
es
inc
ss
mov
xchg
mov
mov
mov
pop
add
sbb
insb
cli
icebp
jno
mov
imul
add
inc
fdivs
in
cli
push
mov
ljmp
sarl
adc
add
mov
stos
dec
add
jnp
cmp
iret
cmp
push
sub
inc
js
hlt
jo
and
inc
inc
cmc
fsubrs
sbb
and
pop
mov
out
mov
push
push
pop
insl
and
insb
das
pop
out
sbb
sbb
lock
hlt
jae
cmp
repz
cs
xchg
sub
outsl
lods
fidivrs
and
inc
push
pop
mov
bound
and
or
arpl
pop
inc
fwait
pop
sti
cmp
cmp
stc
push
inc
repnz
or
adc
fnsave
rorb
pop
jl
pop
sbb
pop
andl
clc
jge
xchg
clc
or
xchg
subb
dec
or
out
sahf
pop
daa
lcall
shl
adc
ljmp
pop
cmc
ljmp
loopne
xor
sarl
scas
inc
fnstcw
jmp
cmp
mov
lock
test
ret
cld
or
js
test
sub
mov
inc
dec
lods
adc
push
mov
adc
out
add
xchg
pushl
aaa
imul
mov
pop
dec
xchg
mov
cs
leave
push
or
cwtl
jle
push
test
fwait
dec
or
mov
in
ljmp
add
xchg
fsubrl
hlt
sbb
xor
icebp
insl
adc
xor
shl
mov
clc
inc
popa
mov
push
sti
mov
push
and
mov
mov
add
jb
mov
xchg
cmp
pop
xlat
jae
mov
sub
movsl
mov
xor
testl
inc
mulb
xor
inc
ret
mov
cmpsl
sahf
pop
mov
mov
inc
rcr
inc
pop
xchg
out
or
pop
pop
push
in
mov
jb
mov
leave
cmpsl
movsb
push
mov
cmp
mov
mov
iret
mov
sub
or
cld
jmp
fmuls
inc
or
add
je
ret
cli
cmpsl
cmp
adc
iret
sub
aam
pushf
push
cmpsb
arpl
mov
test
fwait
sbb
mov
mov
jno
adc
loop
mov
jg
mov
ret
push
mov
xchg
mov
insl
sub
fidivrs
jbe
into
mov
ret
push
mulb
call
scas
filds
or
daa
push
adc
xor
mov
sbb
xlat
lret
dec
adc
sub
add
in
ret
sbb
cmp
cmpl
mov
popa
shlb
inc
or
sti
mov
adc
fidivs
lea
testb
notb
cwtl
daa
push
aas
inc
insl
cmp
jmp
or
mov
ret
test
jl
insl
lret
adc
shll
je
sahf
outsl
pusha
add
add
cmp
outsb
insl
mov
fnstcw
sarb
sbb
mov
xor
sub
popf
popa
mov
sarb
xchg
sub
fistpl
loopne
sub
repz
add
and
push
ja
outsl
cmp
cmp
and
dec
pop
jb
in
and
aaa
cld
test
xchg
mov
push
mov
test
cmp
int3
ljmp
lret
and
inc
cwtl
lds
aas
mov
rorb
mov
clc
pop
pop
and
pop
jl
iret
jbe
mov
test
xlat
sbb
test
or
mov
cs
jge
test
aas
pop
enter
fisubl
js
mov
dec
pushf
push
xchg
dec
les
pop
les
insl
jns
les
je
mov
cmove
jb
insl
iret
inc
js
mov
jecxz
mov
jbe
mov
dec
xchg
stos
or
call
cld
cmp
pop
outsl
push
pop
or
mov
rorb
adc
clc
into
sbb
xchg
fld
dec
test
or
popf
notb
mov
mov
pop
sub
push
add
aas
std
xor
pop
fcompp
stc
and
push
insb
clc
pop
in
jbe
icebp
sbb
fnstcw
sbb
pop
cmp
aad
inc
fwait
adc
enter
pop
hlt
mov
scas
or
into
mov
sub
loop
pop
xlat
and
xchg
loop
inc
xor
nop
jbe
mov
dec
inc
sbb
gs
fdivs
xor
fwait
scas
roll
mov
mov
mov
inc
dec
mov
imul
mov
mov
lahf
inc
push
xchg
cld
xchg
inc
xor
or
sub
imul
sahf
cvtpi2ps
cltd
and
jne
and
stos
outsb
ljmp
aas
pop
cmpsl
clc
repz
stos
xchg
push
inc
andl
xchg
arpl
repz
rcl
jp
push
sub
push
icebp
push
pop
lcall
insb
push
or
and
popa
sbb
shrl
add
fisubrl
mov
mov
jl
punpckhdq
inc
mov
divb
roll
mov
cs
mov
out
divb
ficompl
jbe
subl
adc
mov
and
or
sbb
jbe
and
outsl
xchg
inc
and
cmp
fbstp
adc
or
out
lahf
or
cmp
mov
pop
daa
jmp
fwait
clc
cmp
into
inc
shrb
or
imul
jmp
push
movsb
add
pop
les
mov
lahf
mov
bound
ficoml
in
mov
adc
dec
mov
scas
jge
push
xchg
sarl
inc
push
add
inc
arpl
add
lods
dec
stos
pop
mov
rcll
leave
popf
or
push
cmp
push
dec
sub
mov
addb
jns
test
push
mov
inc
push
hlt
mov
xchg
sbb
pop
xchg
loope
dec
or
and
loopne
push
xchg
push
shl
shlb
or
lret
cltd
pop
jnp
cmpsl
icebp
or
dec
int
xor
icebp
sub
lods
movsb
xchg
pop
xchg
adc
addr16
loope
cmp
pop
cmp
cmp
ljmp
xor
mov
test
and
addr16
sub
inc
mov
adc
pop
or
movsb
fldenv
cs
test
ret
into
in
rol
jp
js
mov
cmpl
mov
loopne
push
xchg
and
xor
cmc
sti
jge
aad
lods
pushf
cs
clc
cmpsb
inc
mov
sbb
fwait
das
mov
imul
jae
mov
test
je
jmp
loop
jnp
push
addl
cmpsb
xor
push
mov
adc
pop
stos
jns
test
cltd
sti
mov
aam
xchg
add
pushf
ret
test
imul
aad
pop
or
addr16
rcll
clc
pushw
sbb
xor
insl
sub
jle
sti
fidivrl
adc
int
fidivs
jns
repz
loope
fldt
cmpsb
sub
xrelease
out
mov
insl
hlt
cli
and
xchg
xchg
sbb
sbb
adc
shrl
jge
adc
int3
mov
mov
pop
cmpsb
movsl
pop
mov
pop
or
sbb
in
adc
jnp
xor
cltd
push
ret
mov
clc
nop
push
idivl
jle
push
mov
sahf
pop
daa
in
mov
bound
sti
adc
and
imul
lcall
mov
or
idivb
sbbl
into
sub
sbb
fisubrs
ret
sub
jns
pushf
cmp
cmp
sbb
sub
cli
push
scas
insl
in
mov
xor
daa
mov
out
icebp
pop
adc
or
or
xor
mov
cltd
insb
push
push
and
pop
call
sahf
imul
js
stos
sahf
xchg
cs
push
icebp
mov
cmp
shlb
and
imul
jecxz
scas
outsb
pop
frstor
xchg
cmp
sahf
js
fincstp
xchg
sub
daa
add
icebp
xchg
lret
mov
lods
xchg
push
sbb
push
xchg
mov
xchg
mov
cmpl
add
push
into
lock
adc
dec
bound
cmpl
add
mov
in
sbb
mov
loope
test
mov
shlb
por
in
mov
mov
dec
sub
push
aaa
push
cmp
mov
push
paddw
cwtl
mov
inc
loop
mov
sbb
cs
sub
mov
dec
fwait
cwtl
scas
cmpsl
fwait
test
mov
dec
outsb
lret
sub
je
out
les
inc
push
mov
mov
rcrb
outsb
insl
mov
cmp
mov
jecxz
mov
test
mov
push
rcll
shl
cmpl
jns
cmpsb
adc
cli
inc
mov
mov
xchg
mov
gs
in
dec
imull
jl
xchg
mov
shl
push
pop
in
and
or
sbb
pop
insb
cmp
cwtl
mov
lret
int
push
push
sbb
xchg
xchg
or
mov
or
testl
orl
add
nop
fwait
addr16
subl
fisubl
out
adcb
adc
xchg
lahf
leave
or
jge
in
mov
arpl
xor
mov
fcomps
mov
push
push
mov
dec
jge
pop
pop
dec
and
dec
xchg
xchg
mov
jae
pop
and
ljmp
fildl
ret
sub
cmp
xor
xor
xor
rcrb
xchg
add
push
stos
push
dec
lret
scas
std
sbb
fists
idivl
fadd
int3
int3
daa
popa
nop
add
push
mov
cmp
das
jmp
add
lds
adc
sub
push
mov
movsl
mov
test
xchg
sbb
mull
cmp
inc
shll
movsl
pop
test
sahf
inc
rcr
jbe
lods
fisubs
mov
arpl
mov
jae
sub
shl
xor
hlt
cmp
pop
lea
jmp
and
data16
dec
lods
mov
xchg
mov
sub
in
push
inc
into
sub
fbld
mov
mov
call
inc
push
cltd
ret
pop
iret
lahf
mov
mov
jmp
inc
in
cmp
pop
pop
arpl
jmp
xchg
push
test
jne
fldcw
rep
adc
push
sub
test
inc
fwait
orl
clc
rcr
sbb
sti
ljmp
scas
ret
outsb
mov
faddl
sbb
sub
or
sub
lods
xchg
pop
jae
mov
inc
inc
push
out
push
fdivp
fldl
addr16
or
es
add
sbb
fwait
dec
bound
gs
mov
jmp
mov
mov
orb
pop
adc
jp
and
cltd
out
mov
in
sub
xchg
aad
xor
sbb
push
sbb
in
push
mov
or
jle
pop
adc
aam
cmp
cs
mov
xlat
pop
push
dec
loope
adc
jp
jle
xor
cmp
or
aaa
push
add
cmp
sbb
sub
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
ja
inc
jns
or
sbb
sub
cmp
leave
out
imul
stc
xlat
mov
mov
aas
imul
sbb
leave
aas
fincstp
in
stc
xlat
mov
mov
pop
inc
jns
or
sbb
test
sbb
pop
inc
stc
mov
push
js
push
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
ret
mov
mov
xlat
filds
push
aas
bound
jb
add
jg
dec
xor
scas
sarb
sub
jmp
das
push
aas
push
pop
add
adc
dec
xor
scas
sarb
sub
jmp
das
push
sbb
jge
jle
cmp
insb
and
notb
iret
xchg
cli
sub
or
dec
stos
and
sub
outsl
scas
les
dec
cld
outsb
aaa
pop
sarl
test
push
jp
movl
sbb
jnp
outsl
pop
mov
dec
int3
push
cmp
jp
fsub
cmpl
pop
mov
cmp
mov
lret
xchg
rcrl
orb
movsl
fisubl
inc
rolb
out
mov
outsl
jp
and
pop
cmp
adc
addr16
jbe
movsl
mov
push
shrb
sbb
dec
daa
mov
movsl
lahf
adc
jp
push
aaa
pop
cmp
lcall
sub
dec
pop
dec
pushf
scas
sarb
sub
jmp
das
push
aas
bound
jb
add
jg
dec
xor
test
xchg
lahf
out
mov
xchg
mov
mov
push
push
add
imul
sbb
adc
lret
mov
xchg
lahf
les
mov
daa
fs
inc
and
add
push
sbb
xor
std
repz
add
jmp
das
push
aas
bound
jb
add
jg
dec
xor
scas
sarb
sub
jmp
das
push
aas
bound
jb
add
jg
dec
xor
scas
ja
pop
pop
pop
fwait
insb
mov
cmc
cmpsb
jecxz
dec
leave
xchg
and
pop
vmread
stos
sub
cmpsl
nop
xchg
faddl
cmp
xchg
nop
push
cmp
mov
inc
push
jne
or
adc
inc
sbb
push
mov
xor
sub
dec
mov
xor
inc
jb
and
mov
sbb
fldt
xchg
xor
lods
mov
arpl
pop
scas
sbb
cld
das
out
cld
popf
inc
pop
xor
xor
aad
cmp
jl
js
fmul
mov
or
jge
gs
adc
mov
data16
outsl
mov
push
lahf
jl
adc
cmp
aam
outsb
ss
in
jge
push
adc
dec
sbb
les
bound
mov
repz
inc
sahf
insl
rcrl
clc
les
push
mov
test
je
or
xchg
adc
dec
in
adc
sub
xor
mov
add
insl
mov
bound
push
outsb
js
nop
adc
cmp
sbb
fidivrl
in
push
jmp
stos
and
sbb
lret
dec
mov
push
sub
imul
aad
adc
pop
icebp
in
repnz
pop
sahf
bound
fiaddl
mov
int3
dec
push
out
jp
push
adc
scas
lcall
inc
push
jg
dec
insl
loope
and
inc
cmp
aam
mov
and
testb
sub
sbb
xor
jb
in
test
idivb
cmp
jne
mov
mov
notl
lahf
or
inc
fldln2
dec
shrb
fiadds
repnz
mov
mov
dec
dec
jp
adc
hlt
loopne
push
mov
lock
sbb
cmp
adc
mov
stc
movsb
lods
mov
int
pop
repnz
rcl
insl
rclb
jp
test
inc
sbb
and
ret
cli
lods
rcrb
sbb
push
mov
lcall
and
jno
bound
scas
xchg
push
loope
pop
push
mov
xor
and
lcall
jl
outsl
outsl
add
push
mov
xor
xchg
and
and
movsb
inc
outsl
das
xchg
mov
or
mov
in
or
ds
pop
cmp
stc
and
mov
movsb
mov
out
adc
push
adc
sbb
cld
fstpt
dec
xchg
mov
mov
mov
js
push
push
add
add
cmp
pusha
and
jmp
jnp
daa
inc
out
mov
lcall
xor
and
pop
outsl
pop
cs
jmp
arpl
jnp
sub
aam
adc
int
jmp
adc
sub
lret
cmpsl
pushf
fisttpl
rorb
add
mov
pop
push
scas
fs
cmp
sub
and
testl
mov
dec
and
inc
sub
adc
ret
mov
sbb
notb
push
and
and
lea
lods
and
hlt
lret
or
cltd
arpl
or
iret
ljmp
cmpsl
dec
lret
push
mov
scas
imul
mov
aam
repz
jp
jb
popf
movsb
out
add
aam
push
clc
cmp
adc
pop
sahf
and
lahf
adc
and
and
sbb
pop
lret
mov
std
cs
mov
xchg
pop
pop
fdivp
addl
push
shrb
es
fsubrp
ret
cs
pop
xchg
lds
and
roll
mov
stc
adc
sahf
lret
adc
or
push
cmp
aad
mov
insl
shrl
shlb
push
fadds
lret
lds
jge
cmpsl
fmull
faddl
or
pop
mov
push
or
sbb
outsl
mov
dec
pop
pop
fucomip
clc
pop
pop
or
inc
outsl
andl
sbb
icebp
and
mov
enter
sbb
pop
cmp
outsb
xor
adc
dec
push
xor
out
pop
adc
xor
dec
inc
loope
or
adc
ret
test
jae
fs
xorl
test
scas
ret
nop
aaa
push
jl
push
pop
je
dec
mov
push
jbe
in
fists
daa
jo
adc
mov
dec
jno
xor
pop
xchg
movsb
test
lock
jb
sbb
je
pop
and
and
cmp
and
adc
fnsave
inc
pop
fmuls
mov
movzbl
sub
imul
test
fsts
pop
mov
dec
mov
aaa
hlt
and
jo
and
cmp
cmpsb
or
mov
ja
add
ret
insb
sbb
pushl
icebp
out
push
scas
ljmp
lds
xchg
sbb
es
gs
test
push
sbb
and
jecxz
push
scas
xlat
cmpl
lret
out
mov
jns
ret
sbb
inc
mov
xor
jo
ja
push
mov
popa
stc
pop
dec
rolb
shrl
and
aaa
jne
cmp
inc
xchg
xchg
test
fadd
mov
xor
inc
js
jg
and
out
fiaddl
sbb
int
and
adc
cli
nop
push
inc
sbb
stos
js
repnz
imul
fcoms
lcall
push
fs
out
stos
mov
sub
mov
mov
jge
cmp
push
cmc
enter
outsb
cmp
pop
add
dec
int3
in
push
xchg
aad
fmuls
je
mov
inc
in
scas
jl
dec
adc
das
and
push
xor
cld
call
lds
ret
call
popf
test
scas
lret
leave
scas
and
pop
sub
in
push
ret
mov
mov
jle
xlat
inc
stos
add
lcall
dec
cld
pushf
push
insl
dec
or
decl
mov
hlt
clc
inc
mov
xor
pop
jae
sub
xchg
cs
mov
xor
mov
xchg
loopne
sub
adc
cmp
lret
push
mov
xchg
popf
mov
xlat
mov
mov
xchg
push
fidivrs
mul
xor
adc
dec
jle
ja
mov
and
mov
insl
bound
fbld
cmp
inc
addl
stc
cmp
fwait
mov
lea
cmovnp
pop
test
adc
int3
jo
xchg
sub
divb
fsubrs
mov
xchg
mov
mov
add
in
cwtl
jge
xchg
xchg
jecxz
adc
and
jb
ret
mov
ret
sub
addr16
mov
sub
xlat
xor
xor
adc
mov
data16
scas
lea
dec
pop
ljmp
sahf
jnp
in
ljmp
cmpsb
lret
movsl
mov
xchg
push
hlt
stos
into
mov
jbe
jbe
cmpsl
jo
out
mov
xchg
test
insl
fdivl
movsl
push
or
lods
or
out
adc
loopne
mov
and
lahf
and
cmp
and
dec
mov
cli
loope
mov
stc
dec
mov
test
push
sub
sbb
adc
mov
stos
push
xchg
fists
lret
jne
subl
mov
icebp
add
mov
mov
mov
addr16
or
or
in
pop
mov
xor
cmp
fs
jo
insb
out
jne
inc
imul
xor
aam
pop
pop
popf
call
call
mov
mov
xor
in
adc
testb
inc
pmulhuw
jne
bound
mov
outsl
fcoms
jge
ja
cmp
dec
lea
int3
mov
data16
les
mov
movq
stos
sbb
pushw
jbe
in
jnp
or
lea
push
jecxz
mov
sbb
push
popa
and
inc
mov
mov
or
lcall
sub
lret
pop
fnstcw
jb
xor
lret
aad
das
in
mov
fimull
decl
fidivrl
jae
mov
fidivrs
les
dec
xlat
jmp
scas
call
adc
sbb
push
jb
sbb
lret
adc
mov
imul
cmpsb
or
mov
add
sub
xor
xbegin
xor
or
stc
loop
ret
sub
leave
repnz
dec
mov
data16
lods
lcall
jne
imul
cwtl
adc
in
jb
clc
mulb
into
lds
cmp
mov
test
popf
enter
lods
pop
adc
or
xor
mov
add
pop
leave
bound
dec
xchg
rcr
sbb
push
dec
pop
mov
rol
pop
out
dec
cltd
push
movsl
cld
outsb
orl
and
fldenv
mov
cmp
inc
rcl
jl
jmp
das
jg
adc
inc
out
mov
cwtl
icebp
aad
push
mov
imul
push
hlt
dec
fwait
mov
jno
push
cmc
cmp
mov
mov
cld
out
lock
jg
mov
rorl
mov
sub
xchg
sub
jp
cmc
inc
jb
lahf
pop
bound
mov
lret
mov
push
aaa
movsl
arpl
mov
scas
mov
pushf
leave
jmp
pop
movsb
outsb
cmp
mov
insb
mov
sti
jno
cmp
in
pop
dec
cld
rolb
repz
shlb
inc
and
insb
pop
jecxz
mov
cltd
inc
fcmovbe
out
lahf
fcmovbe
inc
push
adcl
jmp
mov
mov
stos
jl
in
lock
enter
xor
mov
loope
push
add
adc
xchg
mov
push
cmp
cmp
psubusb
movsl
es
inc
adc
shlb
jge
xchg
sbb
push
add
out
in
inc
ret
rolb
add
hlt
aaa
shl
sbb
data16
xor
ret
iret
pop
pop
xor
pop
test
jp
rcrb
loopne
movsb
dec
xchg
xor
cld
push
cld
jne
pop
adc
aaa
hlt
cmp
add
inc
mov
repnz
jle
ljmp
hlt
lret
insl
jno
mov
cmp
xor
adcl
xchg
pop
out
mov
mov
ljmp
sub
sub
subl
add
xor
push
ss
clc
and
lcall
fsubs
mov
cwtl
in
aaa
or
in
adc
fcmove
lahf
cmp
imul
stos
or
ja
pop
push
cmpsl
inc
rol
hlt
adc
addl
sbb
out
lcall
hlt
push
and
jmp
mov
mov
ljmp
bound
out
scas
xchg
and
ret
pop
pop
push
jmp
pop
rcl
loop
xor
std
notb
out
push
cmc
inc
call
pushl
ficomps
leave
dec
lock
mov
xchg
pop
dec
in
dec
imul
int3
push
add
mov
les
or
loope
in
sbb
mov
cmpsb
cmc
push
mov
push
call
mov
pop
push
loope
repz
jns
and
jmp
jbe
mov
mov
sbb
push
jae
jecxz
repnz
rorb
adc
addr16
mov
xor
cmp
mov
jg
xchg
adcl
lcall
cmpsb
sbb
cmp
stos
rolb
shlb
adc
fs
jl
and
cmpsl
xor
or
add
adc
or
ja
cmp
pop
test
andb
in
insb
mov
ficoml
jno
stos
ja
loope
fucomi
xchg
movsl
inc
mov
dec
inc
sub
mov
sbb
imul
jmp
dec
pop
loop
push
mov
adcb
xchg
xor
insl
sahf
in
popf
movaps
inc
lods
stos
xor
jge
fdivl
dec
pop
fstpt
lods
xorl
xchg
stc
lret
sbb
xor
xchg
leave
scas
push
test
inc
dec
imul
jle
mov
pop
sbb
and
inc
push
push
dec
adc
lds
inc
jne
mov
daa
fidivl
mov
mov
lcall
cmp
lret
cmp
ds
icebp
mov
jmp
jb
adc
push
cmp
sub
popf
adc
pop
and
push
sarl
imull
mov
cs
mov
std
ret
inc
cmp
sub
jecxz
arpl
cli
sbb
sub
inc
jb
add
jmp
fs
push
cmc
or
add
jnp
jns
xchg
push
pop
cmp
mov
or
lret
decb
xchg
aam
adc
and
aam
packssdw
mov
pop
iret
mov
lret
pop
idivl
addb
fwait
dec
out
cmc
fmul
pop
mov
push
and
out
enter
rcrl
adc
lock
push
aas
clc
dec
stos
mov
rorb
std
add
jmp
dec
bound
sti
ror
fcompl
je
in
add
cld
in
aam
iret
movsl
lret
push
popa
xor
lahf
mov
dec
mov
test
push
jnp
push
loopne
ret
fisttpl
sbb
cmp
push
test
ret
mov
xorl
mov
xchg
fwait
pop
jae
mov
aas
aad
sub
subl
sub
push
sahf
cmp
cmc
dec
addl
push
add
shrl
mov
test
pop
mov
xor
stos
lahf
dec
pop
into
loopne
sarl
pop
or
mov
pusha
pop
inc
mov
test
mov
idivb
mov
mov
orb
mov
push
movsb
addb
and
dec
popa
cmpsb
gs
sbb
sub
shrb
enter
nop
fiadds
addr16
in
ljmp
out
ss
pop
and
push
push
mov
loopne
mov
test
int
sub
xor
mov
sbb
and
cmp
ret
xchg
in
mov
js
test
mov
inc
int3
into
or
add
mov
mov
mov
data16
fs
mov
call
pop
scas
cmpsl
push
test
mov
loopne
nop
mov
cmp
jle
insb
xchg
sbbb
gs
sub
aas
movsb
insl
fcoms
fs
imul
lahf
mov
sbb
fdivrp
movsb
repnz
pop
repnz
out
idivl
in
lret
scas
pushf
aad
mov
cmp
mov
jg
pop
mov
cld
push
push
add
rolb
mov
out
or
call
add
mov
mov
and
sar
fdivr
xchg
mov
aam
push
sub
push
cmp
movsl
out
add
cmp
bnd
sub
and
adc
ljmp
roll
add
je
cmp
fcomip
inc
jmp
mov
popf
roll
mov
imul
cmp
fiadds
jl
sbb
iret
sbb
or
arpl
or
pop
in
xchg
ret
dec
es
xchg
outsl
mov
lods
mov
dec
mov
dec
and
add
sbb
add
or
push
mov
in
mov
repnz
imul
cmpsb
pop
test
push
cmpsb
jb
data16
push
cmp
ds
imul
sub
xor
dec
sbb
loope
pushf
xor
dec
sub
lock
xchg
fsubr
mov
xor
mov
bound
dec
test
inc
xchg
es
lds
push
inc
jb
xchg
jle
test
adc
mov
pop
test
stos
shlb
dec
je
ret
mov
mov
and
or
popa
adc
mov
aas
xchg
lahf
inc
dec
mov
fists
mov
or
popf
popf
fstl
mov
pushf
fcmovb
lods
mov
rorl
sbb
test
jo
jns
lcall
sbb
clc
mov
decb
int
push
xchg
test
adc
sbbb
and
sahf
sbb
fstpl
add
cs
fsub
mov
aad
fisubrl
xor
adc
xor
pushf
scas
jno
nop
pop
dec
push
mov
mov
mov
xchg
sbb
inc
loopne
cli
test
int
ss
pop
jno
imul
jns
into
enter
inc
int3
mov
movsl
add
push
inc
pop
scas
subl
incl
cli
dec
lock
jl
dec
jle
mov
jmp
sbb
xor
inc
or
or
outsb
loope
ja
lock
jecxz
add
pop
lahf
pop
hlt
outsl
cli
mov
fists
cmp
les
xchg
jno
ficomps
adc
inc
cld
pusha
push
lods
pop
push
mov
call
cmpsl
repnz
ja
fstpt
cmp
out
jecxz
movsl
pop
jnp
cmp
je
or
push
pop
into
pushf
das
clc
pop
es
outsl
and
xchg
xchg
dec
mov
mov
sub
in
out
cmp
fcmove
mov
mov
fstpl
lret
mov
sbb
iret
lods
jns
push
adc
push
pop
and
aaa
and
inc
int3
arpl
inc
mov
ss
rcrb
imul
or
add
and
inc
pop
lret
inc
or
xchg
mov
dec
sbb
mov
mov
testb
push
xor
fisttpl
sbb
mov
jb
jb
mov
in
cli
sarl
mov
and
in
les
je
in
cmp
pop
adcl
lret
xlat
sahf
push
les
adc
repz
in
mov
adc
push
xor
jl
dec
add
test
fdivs
pop
pop
push
icebp
xor
in
mov
jle
fs
lods
dec
frstor
addb
sbb
sbb
adc
loopne
jns
in
pop
pop
aam
dec
sarb
xlat
hlt
shll
das
data16
pop
xchg
push
add
jle
push
lret
push
mov
aad
jg
push
pop
sbb
mov
dec
mov
or
shrb
loopne
cltd
test
xchg
call
mov
sbb
clc
lods
sub
jp
cmp
inc
cmp
mov
in
test
les
jge
bound
jb
or
xor
jb
imul
dec
les
cmp
jge
jne
das
xor
sti
lods
imul
xor
stos
cmpl
lret
xor
xorb
arpl
xchg
mov
js
and
add
adc
adc
push
ljmp
out
ret
sbb
dec
ss
cmc
addr16
mov
shlb
fs
pop
cld
adc
sbb
cmp
aam
in
lret
jmp
jge
shll
mov
das
test
fstpl
ds
pushf
fld
ss
lods
sub
lods
dec
aas
mov
pop
mov
popa
lcall
shll
in
xchg
mov
fimuls
sbbl
adc
roll
lock
xor
mov
pop
repz
mov
mov
pop
imul
xchg
pop
js
jno
mulb
scas
push
mov
cmpsl
mov
inc
sbb
and
fwait
orl
mov
into
xlat
imul
inc
push
dec
sbb
mov
decb
aam
and
mov
shrb
outsl
sbb
sarl
and
clc
push
les
xchg
mov
mov
push
pop
fwait
iret
addr16
or
jae
in
dec
sub
mov
jno
cmp
inc
shll
mov
cmp
adc
out
and
jbe
push
out
sub
sbb
lret
lock
push
jp
xor
mov
aam
mov
pop
sti
cmp
addr16
or
pop
and
mov
push
ds
ss
cmpl
sbb
lock
and
push
pop
xor
outsl
dec
lods
push
pop
and
repnz
dec
dec
sti
xlat
arpl
movsl
sahf
mov
mov
fsubrs
movsl
xor
enter
or
dec
mov
ds
pop
pop
out
bound
pusha
ds
jbe
xor
arpl
jns
jae
lea
dec
cltd
sub
ljmp
mov
mov
cmp
cmp
test
xchg
xchg
push
push
mov
dec
dec
dec
sarb
push
cmp
loop
sub
mov
xchg
ret
cs
sbb
imul
data16
mov
sub
adc
pop
test
fisubs
rorl
arpl
cmp
adcb
or
pop
data16
in
xchg
or
add
cld
out
ss
cmp
cmpsb
xchg
popa
sarb
dec
ljmp
mov
and
out
pop
push
rclb
adc
xchg
mov
andb
repnz
lock
lea
xor
adc
xchg
adc
xchg
mov
test
mov
flds
outsb
insb
cmp
in
movsb
pop
sub
shrb
not
ljmp
push
cmp
sahf
popf
pop
lods
sub
popa
push
mov
sbb
inc
cmpsl
jecxz
rcr
js
scas
pop
mov
or
loope
mov
or
jg
or
pop
lcall
gs
shr
loop
arpl
push
inc
scas
mov
mov
mov
push
mov
fldcw
leave
xchg
mov
call
jmp
xchg
inc
pop
xor
and
loop
adc
loop
cmp
les
ds
dec
sbb
inc
mov
xor
lods
or
xchg
or
or
aaa
mov
test
call
pop
jl
jae
je
push
or
std
adc
cmp
push
cwtl
and
cwtl
into
aas
outsl
xchg
lea
xor
shlb
sub
out
pop
ret
test
stos
out
add
int3
add
xlat
ljmp
cvtdq2ps
adc
mov
mov
and
pop
addr16
int3
mov
ds
nop
in
dec
add
jmp
jbe
mov
sub
jmp
das
push
aas
bound
jb
add
jg
dec
xor
scas
sarb
sub
jmp
das
push
aas
bound
jb
add
jg
dec
xor
scas
sarb
sub
jmp
das
push
aas
bound
jb
add
jg
dec
xor
scas
sarb
sub
jmp
das
push
xchg
enter
jne
lcall
int3
int3
int3
int3
dec
dec
scas
rorl
pop
movsb
imul
add
add
add
add
pop
push
add
int
or
add
add
add
add
les
jp
cmp
add
add
add
stc
add
add
ss
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
popa
add
add
cmp
push
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
jl
add
repz
and
add
jge
stos
add
add
int
mov
add
add
add
add
add
add
add
add
lcall
add
add
xor
filds
movl
data16
add
add
add
mov
addr16
add
add
add
add
add
add
xchg
add
inc
add
add
sub
pop
add
add
add
add
add
mov
inc
add
add
add
add
add
mov
mov
add
add
fildl
push
add
jl
filds
pop
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
lea
jp
or
add
add
add
dec
add
add
add
add
iret
add
push
add
add
add
add
add
add
add
jp
and
cmp
pusha
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
add
filds
cs
add
push
add
add
add
add
add
add
add
jp
push
add
add
add
add
add
inc
add
sub
mov
add
cmp
pop
add
push
in
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
cmp
mov
test
add
add
add
mov
movsb
add
push
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
addl
inc
add
add
add
add
add
filds
push
add
add
sbb
jns
pop
add
add
add
mov
test
add
add
das
add
add
add
add
add
pop
add
dec
add
movl
push
add
add
add
add
add
add
add
add
add
add
jbe
test
daa
add
add
add
add
hlt
add
add
add
add
add
add
add
mov
add
cmp
inc
add
add
add
add
add
scas
add
int
popa
add
add
dec
add
dec
add
add
add
ret
bound
inc
and
mov
out
jmp
int3
outsb
into
add
fists
out
ffree
test
xchg
rcrl
jns
lret
jnp
push
and
and
dec
stos
loope
cmp
sub
psubusb
fildll
sbb
lds
pop
sbb
or
mov
stos
lahf
icebp
mov
cld
cld
mov
push
ret
cmp
popf
xchg
aad
lcall
shll
repnz
xchg
jl
sbb
adc
test
movsb
and
xorl
sbb
add
bound
and
inc
push
es
cmpb
repnz
jae
xor
push
sti
cmp
mov
xor
lock
pop
sbb
lahf
push
mov
pop
xchg
mov
inc
lods
inc
mov
arpl
data16
movl
dec
in
xchg
dec
sarb
lret
jecxz
add
aas
xchg
xor
addr16
mov
sub
enter
xchg
outsl
cmp
movsb
xchg
mov
inc
mov
int3
jp
cli
jno
clc
cmpsb
jno
add
pop
iret
out
or
gs
movb
test
mov
lods
clc
fisubs
adc
rorl
ss
out
scas
lea
test
xchg
repz
idiv
cmpsb
lret
int
out
sbb
movsb
jg
jle
sub
dec
inc
imul
stos
push
push
sahf
pop
jge
pop
or
push
xchg
and
pop
ds
jmp
cmpb
xchg
mov
aaa
mov
lcall
pop
pop
jg
in
fldcw
push
loop
mov
cmpsl
das
mov
lahf
cltd
or
pop
mov
jg
shlb
and
ds
stos
in
pop
or
pop
mov
inc
pop
loop
aaa
xchg
dec
jl,pt
push
lea
pop
mov
into
insl
mov
cmpsb
adc
aaa
push
out
cli
aam
fwait
cmc
mov
xor
xor
outsb
int
out
out
into
or
test
mov
lret
ret
repz
jmp
mov
or
mov
and
lods
mov
sbb
inc
insl
ficoml
cmpsl
or
pop
jecxz
out
scas
lea
push
xor
jmp
cltd
inc
pop
mov
sub
lcall
dec
icebp
sbb
sub
pop
xor
mov
out
mov
jns
sbb
and
loopne
cwtl
ja
mov
scas
jne
dec
or
das
push
lret
pop
xor
loopne
jbe
outsl
inc
xor
cmpsl
pop
pop
insl
in
in
sbb
add
push
stos
push
rcll
ds
das
cs
xor
xchg
in
jae
lret
fsubrl
inc
jle
gs
hlt
sbb
pop
dec
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
