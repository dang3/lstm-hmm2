add
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
lea
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
mov
push
push
call
mov
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
push
push
mov
call
pushl
call
push
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
add
add
add
cmp
mov
outsl
arpl
or
add
add
add
add
add
add
xor
add
add
add
inc
add
add
push
add
insb
xor
jmp
add
aam
add
add
add
add
add
sbb
and
pop
push
js
add
pop
outsb
push
jae
jae
dec
add
hlt
push
and
add
xchg
bound
leave
pop
js
inc
add
fmuls
decl
sub
add
test
xchg
or
adc
adc
add
push
incl
cld
or
mov
test
push
push
decl
add
add
leave
sub
jmp
add
mov
add
incl
add
mov
stc
add
lea
mov
decl
lock
push
jo
push
add
incl
adc
call
adc
inc
incl
or
adc
adc
add
add
add
cmp
pop
add
add
movsb
sbb
sbb
sbb
sbb
sbb
roll
sbb
sbb
add
add
inc
add
gs
imul
insb
add
fs
inc
gs
jns
dec
outsl
gs
mov
gs
insb
insb
add
sub
gs
aaa
inc
add
add
outsl
insb
inc
insb
dec
insb
jb
xchg
dec
add
add
add
add
cltd
add
add
add
add
add
add
add
add
xchg
add
mov
add
and
add
add
push
and
shll
ja
in
dec
push
mov
fwait
mov
es
xor
pop
int
sti
push
jne
xor
pop
pop
push
int
aam
push
adc
ret
xor
loope
sub
fs
loopne
jb
push
jbe
cmp
imul
repnz
popf
lcall
xchg
inc
mov
cmp
int
and
fdivs
push
leave
arpl
les
rclb
call
outsb
aam
shll
dec
xchg
cmpsb
cli
adc
xchg
or
jle
dec
xor
xchg
adc
sbb
daa
das
sbb
addr16
stos
cmpb
jl
jge
mov
inc
popf
lcall
xor
inc
js
imul
mov
adc
hlt
lds
push
xchg
leave
fidivrs
cmp
sbb
out
add
or
sbb
lea
push
movsb
sarb
push
or
fcmovu
pop
imul
outsl
cmp
add
out
adc
addr16
add
lahf
add
incb
xchg
aam
int
dec
loop
sarb
or
adc
into
decb
pop
jecxz
adc
pushf
mov
std
inc
mov
mov
mov
nopl
push
push
sub
add
ret
fistps
insb
ljmp
xchg
xor
inc
in
sub
sahf
shrl
xchg
scas
push
mov
popf
andl
in
pop
cltd
cmpsb
xchg
mov
fs
movb
lds
mov
mov
sbb
push
mov
sarl
dec
jmp
jno
int
scas
pop
fiaddl
ja
adc
inc
push
cmc
inc
xor
push
inc
sbb
mov
xchg
aaa
js
xchg
aas
mov
dec
mov
jg
cld
and
jg
push
out
clc
sub
jge
divl
pusha
adc
rcr
loop
notl
lcall
mov
pop
insb
mov
fisttps
arpl
hlt
and
fnstenv
or
shrb
fld
sub
pop
lods
push
xor
aas
loopne
mov
sub
popa
and
in
std
lret
rcrl
ret
ficompl
es
jb
mov
and
dec
pop
ja
movl
stos
imul
fcoml
das
dec
mov
int
hlt
aad
ljmp
loopne
clc
push
mov
add
mov
jbe
lret
cmp
fwait
cmc
push
out
mov
jl
mov
pop
mov
adc
and
sub
xchg
pop
pop
lods
pop
jne
sbb
sub
add
mov
jg
inc
mov
insb
fucomp
jbe
push
push
aam
xor
ret
orl
mov
mov
out
stos
or
stos
mov
out
sbb
subb
movsb
mov
push
and
idiv
jbe
inc
add
mov
xor
push
movsl
xchg
shl
repz
dec
inc
lods
enter
loop
add
lods
inc
sub
mov
lock
outsb
xchg
push
sbb
jl
fmul
cmpl
call
sbb
xchg
data16
mov
repz
sub
mov
leave
mov
iret
data16
shlb
pop
dec
mov
lahf
jno
in
arpl
sarl
dec
leave
and
inc
test
inc
cltd
movsl
cmp
fnstenv
aaa
mov
sub
cmp
cmp
sub
and
fstl
repz
pop
test
push
inc
pop
les
inc
lds
ja
in
popf
pop
dec
pop
adc
leave
int
mov
sbb
leave
pop
adc
xlat
lods
mov
shlb
sub
pop
xchg
lea
je
ss
mov
imul
fwait
push
add
and
movsl
fs
cmp
add
jp
movsb
lods
ret
xlat
add
negb
call
frstor
aaa
stos
gs
cltd
push
cli
or
pop
push
adc
add
scas
stos
sbb
in
ret
lcall
dec
jl
movb
aam
sbb
and
add
ds
stc
cmc
cmc
pop
mov
jns
push
scas
or
cli
sarb
mov
mov
mov
pop
pop
test
fdivl
xor
test
dec
stc
push
mov
jne
xchg
sub
mov
push
dec
mov
adc
out
data16
pop
xor
sbb
in
cwtl
les
add
aas
jl
dec
mov
loope
and
lcall
cmp
enter
sti
xor
in
cmc
fsubrl
or
dec
lea
add
inc
loope
fsts
sahf
pop
sub
popa
sub
dec
push
dec
mov
xchg
dec
int
sub
notl
cmc
xchg
adc
xchg
jmp
cwtl
adc
fsts
mov
out
adc
sbb
ja
fld
mov
mov
and
push
neg
pop
lahf
int
or
add
sub
mov
cmp
xor
ret
lock
push
dec
mov
push
out
movsb
mov
sbb
pushf
pusha
insl
arpl
movsl
mov
add
add
shll
add
cmp
ret
cli
fmulp
inc
aaa
jmp
shlb
mov
jns
xor
in
xor
gs
stos
aam
ja
push
pop
inc
mov
popf
outsl
loope
inc
cmc
aad
mov
jo
ret
push
rcl
sub
pop
fstpt
or
xor
sbb
aam
xchg
test
xor
push
adc
mov
test
pusha
fwait
push
inc
jb
out
stos
fcmovne
mov
cmp
lret
cmp
insb
pop
bound
adc
daa
sbb
dec
mov
pop
push
pop
lods
or
jb
push
dec
sti
orl
mov
and
outsb
and
enter
mov
cmp
push
cltd
std
dec
negl
xor
repnz
loop
adc
pop
jb
mov
lret
or
or
lret
repz
jle
push
adc
popa
mov
nop
into
or
add
sbb
sub
dec
cmpsl
dec
jp
and
xchg
jl
cs
mov
pop
jle
pushf
mov
jnp
pop
sbb
dec
outsl
jle
cmp
or
imul
movsl
addr16
xor
push
arpl
lock
ret
xchg
test
ja
ljmp
mov
jne
ljmp
imul
xchg
mov
mov
mov
mov
sub
inc
or
loop
addr16
pop
xor
faddl
push
mov
push
jle
add
dec
dec
dec
xchg
sub
and
mov
inc
xor
test
lea
sti
les
fldl
out
sub
pusha
mov
mov
or
inc
mov
leave
cltd
sar
or
shld
cmp
cld
in
cli
iret
sti
jmp
cs
cmp
fiaddl
stos
jne
jno
mov
cmp
scas
adc
loope
arpl
adc
mov
sub
fstpl
xor
jmp
xor
arpl
nop
je
pop
std
and
inc
fcmovb
daa
push
add
mov
jg
xor
xchg
aad
pop
js
jbe
icebp
jne
and
lock
call
mov
xor
ffreep
nop
sub
test
xor
movsl
jmp
sub
push
roll
into
mov
xor
insl
divb
fwait
push
rolb
cwtl
cmc
xlat
hlt
jbe
inc
out
cwtl
bound
fadds
in
cld
jl
out
jecxz
xchg
or
adc
int
je
test
inc
xor
push
push
je
insl
int3
cmp
popa
test
loop
push
dec
lods
stos
push
hlt
pop
dec
adcl
dec
movsl
or
cmpsb
fistpll
aas
mov
std
iret
cmc
jbe
and
pop
sub
mov
push
js
je
jb
loopne
gs
lcall
adc
arpl
xor
push
in
adc
add
or
mov
jno
icebp
orb
fcoms
mov
icebp
and
aaa
fidivrs
push
sbb
cmc
scas
clc
fistpll
jg
sub
pop
or
jecxz
cmp
cs
bound
mov
jmp
scas
outsl
ss
xchg
fcmovb
fdivp
dec
popa
jae
pushf
mov
mov
inc
daa
popf
fcomp
push
mov
aas
push
or
or
mov
out
pop
cmpsb
cmp
fsubp
sbb
or
ds
ds
leave
and
add
jp
fiadds
pop
inc
dec
adc
loopne
push
inc
dec
or
sbb
xchg
inc
in
or
lds
ds
lret
sub
mov
push
daa
popa
shr
add
mov
popf
xor
stos
inc
das
je
sbb
add
mov
push
pop
mov
repz
div
cld
loopne
pop
dec
aad
push
and
incl
xchg
das
das
or
fidivrl
xchg
outsl
call
xor
add
jne
xor
xor
pushf
and
or
cltd
jecxz
and
popf
imul
jge
or
gs
sbbl
das
std
mov
mov
inc
adc
xor
cmp
sbb
aam
push
add
mov
jmp
push
xchg
fisttps
adc
add
pusha
mov
and
inc
aas
xor
jl
xchg
shll
pop
inc
icebp
xchg
push
fbld
jmp
rcrb
cwtl
nop
mov
cmp
sub
and
cld
jp
adc
dec
nop
xchg
pop
dec
sahf
orl
push
xor
nop
adc
xor
fsubr
loop
imul
repnz
lret
cmp
adc
and
loope
out
and
add
shlb
push
int
or
popf
aad
incb
ret
dec
xchg
cld
cmp
data16
imul
lret
movb
push
sub
notl
dec
les
add
sbb
jne
gs
clc
cmpsl
test
or
cmp
data16
sbb
adc
lock
jns
jl
pop
aad
scas
pop
jo
dec
lret
lods
xlat
pop
scas
mov
adc
cmpsb
xorl
fidivl
sub
repz
pop
sub
mov
and
mov
loopne
jne
jnp
subb
repnz
mov
jp
jmp
icebp
lods
jle
mov
and
fwait
xchg
outsb
sahf
sbb
mov
int
sarb
mov
ljmp
repz
jbe
xchg
and
call
in
loope
xor
and
jno
je
mov
cmpsl
sub
and
and
fcomip
xor
jno
xchg
add
aas
dec
xchg
subb
jb
setle
xlat
inc
cs
orb
inc
adc
mov
ljmp
ss
cmp
jl
push
les
inc
in
andl
mov
testb
pop
idivb
adc
cld
mov
repz
xchg
lock
and
push
sbb
cmp
dec
mov
sub
test
push
lock
aas
shl
xchg
js
iret
cld
xchg
aaa
xor
push
out
or
push
add
or
lret
xchg
jae
das
add
std
daa
inc
rclb
shl
dec
jbe
jno
lock
cmp
mov
inc
mov
xor
lds
dec
mov
mov
ficomps
cmp
sub
dec
int3
out
push
aas
cltd
jl
es
insl
pop
adc
or
push
pop
add
push
stc
ret
aad
outsl
jae
dec
pop
sahf
test
push
xor
loopne
pop
std
cmp
or
or
mull
jae
push
xor
gs
jb
cli
stc
push
cmpb
push
jge
pop
xor
outsb
repz
xchg
mov
insl
sti
imul
push
dec
xchg
outsl
xchg
cwtl
repnz
mov
jnp
xor
cwtl
add
cli
mov
sarb
ss
xor
mov
lds
inc
dec
sbb
nop
adc
cmp
cwtl
mov
xchg
pop
or
je
and
cmpsb
xchg
dec
rcrb
jmp
lea
sbb
mov
xor
movl
cmc
jp
sbb
or
xchg
add
jp
repnz
fwait
pop
cmpsl
sub
cmp
movsb
pop
stos
push
and
sub
inc
movsb
test
or
pop
inc
lret
mov
cld
mov
adc
inc
inc
faddl
or
in
in
mov
aas
popa
and
dec
arpl
or
aad
lods
stos
and
in
je
dec
inc
es
arpl
mov
sbb
clc
ja
daa
out
push
leave
dec
lret
push
jmp
push
pop
and
out
pop
and
xor
aad
cmp
cmp
mov
mov
in
aaa
jle
nop
lods
adc
and
aaa
xchg
inc
xor
xor
es
mov
sub
daa
push
push
mov
movsl
pop
aad
fldt
enter
nop
xor
sarb
inc
out
jmp
pop
movsl
sbb
nop
or
loopne
mov
enter
shrb
jnp
mov
sahf
sbb
xchg
mov
and
or
xchg
fistpl
out
das
dec
jno
or
sti
push
push
cmovp
bound
push
jb
inc
xchg
jae
mov
into
mov
ljmp
in
test
pop
decl
int3
adc
push
test
pop
pop
sbb
adcb
inc
or
int3
xchg
ljmp
pusha
popf
push
xchg
xchg
and
and
xor
jge
push
clc
pusha
sbb
push
push
and
cmp
inc
mov
mov
dec
or
mov
xchg
shll
xor
mov
scas
cmpsb
popa
sbb
sbb
aas
and
repnz
dec
into
movsb
jae
mov
ds
pop
push
add
pop
sbb
sti
sbb
adc
xcrypt-ofb
cmpsl
sub
mov
loope
jnp
aaa
test
cld
and
fucom
mov
mov
inc
sbb
push
gs
sahf
push
aam
inc
xor
out
aam
xchg
mov
loope
pop
insl
pop
jns
dec
pusha
gs
dec
filds
addb
int3
dec
ret
mov
and
test
call
cltd
xor
loop
outsl
mov
pop
lret
sbb
xor
add
nop
loope
cltd
sbb
inc
pop
cltd
xchg
xlat
pop
dec
sbb
shrl
xor
imul
xor
bound
xchg
mov
aam
mov
cltd
repnz
xchg
cs
push
push
hlt
add
shrb
dec
lcall
fdivp
sti
mov
call
lds
mov
pop
aad
add
dec
cltd
inc
gs
lods
xchg
scas
push
mov
sub
sub
aaa
jle
sbb
mov
inc
jp
pop
int
push
and
jnp
and
mov
loope
jmp
cmp
xlat
add
jns
dec
mov
into
jmp
xchg
sub
popf
bound
push
les
mov
jg
jo
cli
stos
aam
push
sub
mov
xchg
mov
imul
jmp
int
movsl
jmp
imul
pop
xchg
dec
es
add
js
ja
in
or
and
mov
jns
inc
mov
cmp
pushw
test
mov
xor
icebp
outsl
outsb
lret
xor
out
or
lds
js
into
mov
mov
jnp
shrl
in
lea
fs
xchg
pop
in
xor
mov
inc
xor
shll
inc
add
shrb
mov
cmp
movsl
mov
nop
ret
xchg
stc
push
enter
mov
push
sbb
xchg
xchg
in
inc
mov
aas
and
leave
mov
pop
std
and
xchg
adc
and
sbb
push
add
mov
data16
sbbb
aad
shl
jmp
adcb
test
fildll
jge
xor
adc
adc
sbb
shrb
pop
addr16
mov
pop
mov
mov
stc
icebp
lods
scas
gs
dec
jae
push
add
lret
xchg
dec
inc
imulb
cmp
mov
add
movsb
rolb
addl
mov
push
stos
out
adc
enter
push
adc
or
hlt
stc
aam
lea
daa
shrb
cmp
xchg
inc
pop
int
sbb
mov
jl
clc
outsb
cld
fs
fs
xor
mov
insb
pop
xchg
mov
cmpsb
xor
fildl
sub
xor
xchg
jne
call
inc
lods
lock
scas
mov
into
and
inc
cmpsl
mov
into
add
sub
jmpw
dec
into
jge
cld
pop
pop
push
and
xchg
xchg
mov
ja
sbb
jg
sub
mov
and
loopne
daa
cmp
mov
sahf
stos
mov
mov
stc
pop
push
scas
mov
cs
sbb
dec
inc
inc
adc
jnp
jae
pop
lret
or
outsb
mov
addr16
push
and
mov
es
stc
imul
inc
loopne
mov
sbb
xor
push
dec
std
inc
sub
jge
adc
mov
orl
in
aam
hlt
or
daa
int3
lds
cli
adc
push
pusha
test
jno
pusha
inc
xor
hlt
repnz
pop
cmp
pushf
mov
mov
mov
jp
dec
sub
jb
adc
dec
data16
cmpsb
or
push
scas
adcb
or
mov
popa
std
inc
out
insb
sarb
add
imul
mov
xor
xchg
inc
test
cld
dec
cld
cmp
leave
push
and
pop
movsl
int3
fs
sbb
jle
mov
cli
jno
arpl
repnz
lret
lcall
das
aaa
sbb
push
mov
dec
bound
decl
jp
jmp
in
stos
call
inc
ret
outsb
movsl
jmp
mov
jae
mov
out
orl
divb
fdivrl
mov
out
popf
imul
add
sti
ficomps
das
popf
xchg
cmp
push
push
mov
pop
sub
imul
adc
insb
div
mov
mov
loope
inc
insl
adc
xchg
je
psllq
loop
std
pop
fistpl
or
aaa
cwtl
adc
into
xlat
push
cmp
or
fimuls
mov
cmp
stos
push
pop
out
mov
lahf
xor
daa
lcall
pop
or
sbb
jg
mov
mov
mov
push
cmp
sub
js
mov
dec
jp
cmp
shll
add
add
add
add
xchg
add
mov
add
and
add
add
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
sti
add
add
add
in
add
add
add
add
stos
stos
add
add
mov
call
add
add
dec
rolb
add
or
adc
add
add
add
adc
add
mov
add
dec
add
xor
add
add
mov
add
flds
add
add
add
add
add
add
or
adc
imul
add
imul
fsincos
sahf
xor
orl
xchg
dec
push
cld
mov
pop
lea
mov
add
jne
jne
call
std
test
push
and
clc
sbb
maxps
add
mov
mov
add
incl
cmp
add
push
add
add
sub
loopne
add
adc
incl
loopne
jmp
push
push
call
mov
push
cmp
loope
call
cld
add
add
jne
push
inc
jns
push
or
test
clc
verr
mov
test
imul
incl
adc
adc
sbb
mov
add
add
add
add
add
test
sbb
sbb
sbb
sbb
sbb
pop
add
cmp
inc
add
add
outsb
inc
insb
gs
and
dec
outsl
push
outsl
je
dec
push
insl
add
js
add
add
add
push
jns
popa
adc
dec
jb
outsl
push
insb
pop
gs
cs
jne
mov
add
add
jo
add
add
add
push
add
add
adc
lahf
lcall
repnz
and
loopne
jg
inc
repz
jecxz
rcl
imul
cmpsl
jge
inc
add
ljmp
jmp
bound
andb
in
subb
adc
fcoml
dec
add
push
cmpl
mov
lods
push
mov
cmpl
in
xor
shlb
ret
pop
or
lcall
mov
addr16
adcl
xchg
xor
pop
or
fisttps
ja
mov
cmp
shll
pop
repz
xchg
or
inc
lcall
pop
jp
mov
push
daa
movsb
stos
jl
fs
arpl
mov
inc
dec
imul
mov
gs
pop
mov
jl
mov
hlt
and
loope
aaa
cmp
fwait
and
push
out
xchg
jmp
jbe
push
or
jnp
mov
mov
in
inc
enter
in
mov
jge
ljmp
pop
add
ljmp
adc
sti
lock
mov
cli
stos
mov
dec
aad
ficomps
xchg
pusha
into
stos
inc
fisttps
sbb
push
idivb
lods
ret
jecxz
lock
fimuls
jle
sbb
or
add
movups
iret
roll
mov
mov
adc
inc
test
mov
jmp
or
inc
push
in
mov
sub
and
mov
sbb
in
imul
sbb
out
call
jbe
imul
out
jg
jge
sbb
add
pop
jae
outsl
and
fs
mov
pushw
push
inc
pop
mov
loopne
mov
jns
mov
ret
fiadds
xchg
lods
push
je
mov
sbbl
and
div
cltd
dec
sbb
stos
test
rcrb
outsl
orb
shr
stos
mov
cmp
push
xor
pop
in
int
cmpsl
xor
lret
dec
mov
outsl
leave
dec
lock
jle
ret
mov
les
push
scas
mov
and
leave
sbb
xchg
mov
push
test
pushl
scas
loope
cs
ljmp
repnz
and
inc
rcll
dec
sub
je
jno
mov
sub
fs
cs
fs
fisubl
jmp
ja
imul
mov
add
jl
gs
push
outsb
push
mov
pusha
imul
pop
movsb
xor
adc
ds
and
inc
sub
mov
mov
inc
push
xchg
adc
pusha
add
or
mov
popf
ss
or
xor
out
adc
into
aam
nop
xchg
fsts
xchg
cli
shr
pushf
mov
sbb
pop
mov
clc
pop
shrl
jge
into
xor
mov
jns
test
in
mov
into
xchg
and
push
jmp
mov
data16
sub
xchg
jmp
xor
push
pop
cmp
pop
leave
ja
cmp
jo
int
sbb
xor
insb
ja
mov
popf
ret
mov
mov
dec
clc
adc
mov
xchg
outsl
xchg
xchg
movsb
int
les
cwtl
inc
notb
clc
nop
lahf
hlt
out
cwtl
shll
out
addb
mov
jo
push
jge
cwtl
or
mov
cltd
jmp
lea
je
lods
fcmovb
mov
add
loop
xchg
lret
add
xchg
ss
loope
push
cltd
fnstenv
cli
add
jp
mov
or
xchg
cwtl
xor
mov
mov
hlt
cmp
jbe
arpl
or
adc
sub
movsb
push
in
gs
loopne
add
adc
sub
fadds
in
pushf
sbb
push
or
xor
inc
inc
inc
inc
cwtl
mov
and
or
fdivl
sti
xor
add
xchg
and
cs
jne
lret
jae
push
jecxz
insl
jp
xchg
adc
out
movsl
jle
pop
cs
shlb
sar
fsubrl
shlb
mov
dec
in
fimull
push
ret
fucomip
mov
andl
push
addr16
cmp
cmpb
rolb
sub
jae
cmpsb
jmp
sub
out
loope
inc
push
rclb
mov
mov
mov
push
inc
cmp
mov
lods
les
fildl
add
cmc
adc
leave
movsl
pop
jae
shrl
pop
cwtl
les
movsl
sbb
lcall
add
mov
mov
inc
sahf
jo
test
imul
cmp
aas
sbb
sub
adc
sub
sub
or
sahf
push
inc
dec
and
repz
movsl
orl
nop
mov
mov
ficompl
pop
lds
sub
inc
loopne
inc
mov
jno
fisttpll
push
ljmp
sub
jecxz
test
int3
xchg
inc
sbb
cmp
push
popa
adc
scas
inc
push
pop
cmc
mov
aad
fs
clc
ret
rcr
iret
in
addr16
sbb
and
fidivs
xorl
je
jnp
jo
sbb
aas
cmc
xchg
fcmove
xor
push
xchg
dec
pop
add
pop
jle
jo
mov
or
xor
mov
pop
or
lods
out
in
dec
cwtl
pop
lahf
bound
mov
into
mov
mov
aad
lea
xchg
sbb
mov
mov
dec
mov
fs
cmp
cli
mov
repnz
pop
or
test
push
sub
cltd
lcall
sub
lock
add
repnz
and
stos
scas
leavew
sarb
cmp
jbe
sahf
xlat
inc
addr16
xchg
dec
mov
ljmp
inc
mov
push
sbb
jne
aad
pop
cs
sub
and
and
sbb
xchg
mov
jbe
jo
out
push
inc
lods
test
stc
cmpsb
rcr
hlt
and
popa
shrl
repz
out
inc
es
sub
mov
pop
pusha
inc
or
scas
pop
xchg
jmp
test
sarl
mov
sub
sub
aaa
out
mov
ljmp
mov
roll
sbbl
jae
rolb
in
test
mov
ja
push
ss
pusha
cmpb
pop
mov
and
scas
add
adc
push
bound
arpl
pop
iret
dec
addl
pop
je
pop
sti
sbb
aad
inc
clc
xchg
outsl
mov
pop
and
jmp
sbb
jne
lret
fwait
add
xchg
in
jmp
mov
sbb
mov
scas
shrl
adc
or
pop
jbe
mov
out
cmpsb
mov
sbb
sbb
xor
out
jo
sub
int3
jno
mov
popf
nop
xor
xchg
push
insb
push
or
ljmp
nop
mov
xchg
leave
mov
jg
mov
sbb
stos
outsl
ljmp
icebp
lret
push
and
addr16
push
test
pop
ret
outsl
add
in
in
sti
mov
mov
outsb
rcrl
mov
add
pop
mov
fistps
xor
push
jmp
push
into
lds
aad
and
cmp
rcll
dec
add
mov
inc
jp
aam
cltd
mov
jnp
and
fs
testl
rorl
insb
adcl
test
int
rcll
xor
jbe
out
fs
jecxz
repz
std
dec
lret
popa
in
mov
cmp
popa
sahf
jmp
mov
xor
aam
outsb
mov
push
dec
jne
add
daa
rol
xchg
mov
dec
adc
movsl
or
insl
stc
xchg
decl
ds
dec
mov
rcrl
add
icebp
icebp
outsb
pusha
inc
rclb
dec
mov
and
jo
pop
shl
lds
scas
jno
mov
push
sbb
jmp
fs
jmp
dec
jno
sub
sub
mov
mov
test
inc
ret
scas
icebp
in
adc
sti
out
cmp
add
scas
lods
js
adc
sub
jmp
add
sub
inc
pop
cltd
cmpsb
loopne
dec
out
pop
lretw
xor
pop
enterw
adc
lds
mov
int
fisubs
insl
mov
out
push
sub
jbe
cli
add
dec
adc
int3
insb
outsb
sub
movsb
cmp
mov
pop
jno
mov
mov
push
lock
adc
imul
sbb
jecxz
mov
int3
dec
mov
scas
rolb
in
repz
sbb
fwait
pop
jnp
test
mov
xlat
pusha
into
lds
clc
mov
sub
xchg
sbb
dec
sbb
sbb
stos
aaa
adc
or
lret
es
add
ds
sahf
jp
test
cmp
xchg
scas
cmp
mov
and
mov
lret
repnz
movsl
lods
aad
sub
int3
push
inc
je
dec
outsb
push
cmp
out
adc
add
sbb
pop
jle
jmp
push
shrb
dec
or
dec
ret
cmc
xchg
arpl
dec
dec
clc
inc
test
xchg
cmp
movsl
data16
xchg
pop
add
cli
mov
jo
dec
leave
test
popf
pop
test
mov
popf
sub
pop
mov
loopne
xchg
lret
imul
subb
int3
pushf
decb
jns
aas
mov
movsl
loop
add
dec
lret
dec
dec
push
xor
pop
aaa
icebp
sub
sbb
aas
jl
add
out
ficoml
xor
jp
push
mov
test
lcall
inc
pop
xchg
mov
jp
and
fs
mov
xchg
rol
xlat
ret
cmovne
sub
arpl
adc
xchg
sub
aas
ret
je
inc
loope
inc
mov
nop
cwtl
jne
inc
add
dec
test
fadds
and
xlat
addl
mov
outsb
adc
insl
pop
adc
and
mov
mov
xchg
cmc
cmp
test
sub
dec
mov
or
mov
mov
and
and
mov
call
or
loopne
jne,pn
ja
adc
or
sub
lea
pop
adc
shrb
sahf
jnp
sub
cmp
test
cmc
fcomps
xorl
cmp
mov
dec
loopne
adcb
subl
and
cli
inc
popf
push
or
add
les
push
fimuls
pushf
mov
mov
sti
mov
pushl
inc
cmp
xor
mov
leave
mov
or
jo
std
push
je
or
cli
cmp
insl
lods
push
pushf
repnz
mov
insb
inc
gs
inc
push
pop
rorl
repnz
out
ja
mov
inc
jbe
and
xchg
sbb
push
push
ja
adc
or
jle
shl
fistl
test
push
inc
enter
movsl
mov
push
imul
popa
jns
sub
filds
loope
mov
adcb
and
test
lods
and
jl
enter
aad
inc
jmp
jo
addr16
or
andb
sahf
nop
lds
xchg
mov
mov
push
dec
daa
rclb
adc
mov
mov
sbb
neg
in
out
jmp
mov
lods
or
data16
push
shl
addr16
or
dec
pop
in
lock
in
cmp
outsb
xor
mov
in
push
ror
aaa
mov
xchg
icebp
and
testb
les
adc
sahf
ja
outsb
add
xor
loop
xchg
mov
push
stos
test
test
out
lret
shrl
mov
xor
jmp
rcrb
xlat
push
pop
rcll
bound
out
data16
loop
outsl
insl
sbb
rorl
es
or
push
ds
jp
imul
enter
or
scas
adcl
push
cmc
mov
jecxz
jle
push
stos
pop
dec
adc
and
push
sahf
cld
pop
mov
sahf
mov
cmp
hlt
inc
stos
xor
imul
jnp
pop
jg
mov
pop
leave
dec
orl
pusha
adc
adc
inc
pop
sbb
jecxz
stos
loope
hlt
mov
insb
subl
sub
test
ret
jne
add
movsl
pop
imul
dec
mov
roll
adc
cmp
pop
xchg
jp
push
push
mov
inc
or
pusha
or
in
mov
into
pop
add
jne
xor
push
outsb
loope
dec
dec
jl
and
pop
inc
dec
cmp
lcall
aam
cli
mov
sub
test
icebp
mov
fs
daa
test
sub
xor
pop
mov
sbb
je
adc
int
mov
sub
mov
ss
lret
cmp
es
pop
dec
out
push
std
std
cwtl
in
lds
out
inc
ffreep
push
ds
xor
div
xchg
or
mov
jbe
sub
jno
lea
aad
insb
movsl
cmp
insl
xchg
int3
sub
pushf
ljmp
jp
mov
aas
sbb
ja
sub
imull
fwait
xorl
push
jnp
btc
xor
jne
pop
mov
outsb
in
sub
stc
inc
and
outsb
je
cmc
cmp
cmp
jge
pop
xor
cmp
punpckhdq
inc
pop
mov
mov
pop
mov
mov
out
mov
xor
pop
jp
fdivrl
and
xchg
aas
arpl
sbb
sbb
das
sarl
pop
fiaddl
loope
hlt
mov
xor
add
in
inc
add
insl
inc
mov
in
cmp
mov
mov
xchg
sbb
mov
jne
or
mov
jmp
outsl
pop
cmp
pop
ljmp
push
cmp
div
cld
leave
xchg
add
pop
and
mov
pop
push
mov
arpl
adc
cmpsl
test
xor
rcl
adc
rcrb
jns
mov
into
jnp
test
pop
push
cmp
or
test
pop
movsb
fsqrt
inc
mov
leave
cld
cli
pop
pop
dec
leave
rcll
mov
jbe
es
and
mov
xchg
inc
or
push
dec
add
cltd
xor
js
mov
jno
mov
pop
aad
movsb
scas
stc
or
adc
push
insb
repz
or
sub
pop
popa
insl
enter
aad
xlat
push
mov
jmp
fnsave
movsl
in
inc
cmpsb
mov
insb
adcl
ss
je
and
dec
outsb
hlt
mov
pop
mov
adcl
mov
subl
shl
imul
mov
add
sti
out
or
ficompl
sub
push
mov
cld
call
inc
mov
jo
in
xchg
inc
in
add
out
inc
inc
xor
punpcklbw
ret
rcrl
push
xor
nop
filds
stos
nop
int
divl
pop
cltd
leave
cltd
or
sbb
in
cmpsb
sbb
jne
inc
es
nop
out
mov
outsl
xchg
divb
loop
push
jl
mov
fidivl
mov
pop
push
jl
cmc
je
xor
test
xor
push
out
addr16
mov
mov
cmp
push
mov
jae
mov
addr16
jbe
mov
jae
ljmp
mov
jle
jmp
mov
jl
push
mov
jo
cmpsb
in
ds
inc
shl
dec
mov
xor
lret
mov
fwait
xchg
add
mov
ror
ret
adc
mov
mov
mov
leave
ficoms
pop
or
out
push
xor
xor
ljmp
cmp
pop
sub
nop
dec
push
mov
pusha
sarl
mov
lcall
fildll
hlt
in
pop
adc
ljmp
lds
push
popa
scas
std
sbb
fcomps
stc
fnop
mov
jb
jae
sub
sbbl
jg
push
scas
sub
les
decl
arpl
add
dec
addr16
jns
mov
enter
popf
aas
fadd
push
mov
pop
cli
jb
mov
out
jns
lods
repnz
pop
mov
cld
mov
imul
xchg
sbb
je
cmp
dec
int3
daa
push
int
mov
lods
xchg
outsl
insl
and
loope
add
inc
cli
push
jge
cld
pop
es
push
mov
push
push
mov
mov
shrb
rorb
lcall
ret
shrl
add
lock
mov
nop
femms
push
sbb
mov
lret
sbb
arpl
pop
ja
push
push
cmpsl
cwtl
pop
pop
inc
loopne
sbb
add
mov
xchg
outsl
adc
pop
jno
mov
pop
xor
jl
out
jnp
scas
cmp
dec
fs
sbb
dec
out
outsb
inc
pop
dec
popa
nop
adc
cmp
in
xchg
push
cli
das
gs
pop
cmp
nop
mov
mov
mov
sbb
lret
lret
rcll
je
and
ds
es
lods
sub
push
int
loopne
shrb
jbe
arpl
sub
mov
in
xor
js
js
adc
pop
mov
jl
sub
cmp
sbb
enter
xchg
scas
loope
idivl
scas
and
jecxz
xchg
icebp
pop
add
and
hlt
fcompl
mov
push
xor
xor
test
add
fdiv
ret
mov
call
or
mov
push
shll
test
pop
inc
inc
popf
pop
xchg
mov
adc
out
sbb
imul
inc
ret
out
popf
cmp
jae
add
lcall
mov
mov
das
dec
xor
cmp
mov
and
or
leave
fsubp
jg
xchg
lods
push
mov
test
adc
loope
xchg
xchg
shrb
pushf
loope
add
mov
rcr
mov
adc
dec
gs
int
mov
pop
jns
add
jb
scas
insb
sbb
cmp
adc
loopne
sbbl
sub
in
and
push
push
lcall
xchg
mov
mov
push
popf
and
cmp
out
loopne
scas
dec
adc
cwtl
in
cmp
stos
cmp
sub
mov
dec
imul
or
add
add
add
add
push
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
call
add
stos
stos
add
ja
mov
incl
incl
add
pusha
add
and
dec
add
add
add
lock
add
add
adc
push
add
add
add
add
mov
add
je
add
add
add
mov
test
add
cmp
cmp
into
add
fbld
arpl
out
imul
push
je
mov
add
jne
push
jbe
add
inc
ret
xor
inc
cld
loop
add
add
in
mov
inc
sbbb
add
inc
mulb
cld
adc
add
add
add
leave
push
inc
cmp
cmpsb
xor
adc
mov
cmp
fadd
dec
adc
adc
mov
sti
add
add
add
xor
add
add
push
call
lahf
test
and
inc
mov
mov
and
adc
movl
clc
adc
incl
cmp
inc
mov
xor
add
mov
hlt
sbb
add
test
push
lock
add
in
js
add
in
movb
mov
xor
add
push
jb
je
js
outsl
je
outsl
je
add
inc
icebp
inc
gs
imul
gs
dec
inc
gs
pusha
popa
popa
and
cmc
dec
push
insb
addr16
push
add
addr16
outsl
dec
imul
inc
popa
push
push
arpl
add
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
pop
iret
cltd
adc
imul
test
xchg
bound
or
cmp
mov
sahf
or
mov
jo
sbb
jb
sub
and
int
or
stos
pop
and
imul
push
fsub
stc
cltd
pslld
test
movsl
adc
jnp
lds
stos
jg
call
pop
loop
movsl
jecxz
rcr
or
jge
mov
fsts
push
push
mov
cmp
sub
fnstcw
lods
jnp
add
xchg
nop
jge
aad
dec
repz
push
pop
rolb
gs
push
out
ret
push
mov
or
incl
and
push
scas
incl
pop
cltd
cltd
das
adcl
pop
sbb
pop
cmp
in
inc
pop
in
xor
xor
loope
testl
fildll
jecxz
dec
xor
push
cmp
aaa
cwtl
inc
dec
lahf
pop
mov
inc
xchg
pusha
jae
outsb
fwait
jge
jo
and
cmp
arpl
sbb
pop
add
in
out
xchg
mov
mov
jbe
ss
mov
lahf
jl
push
loopne
mov
std
aaa
adc
test
jno
inc
inc
add
adc
push
cmp
test
outsl
cmp
inc
fisubl
cs
inc
inc
stos
inc
sti
into
inc
add
scas
xor
sbb
pop
mov
lds
insl
dec
in
jmp
add
inc
dec
fstps
cmp
leave
popf
xor
xchg
pop
adcl
or
lahf
movsb
xchg
lock
mov
xchg
cmp
leave
clc
ss
and
pop
movsb
inc
xchg
inc
or
xchg
lock
add
jnp
pop
mov
sti
mov
jo
mov
dec
or
mov
sbb
pop
test
dec
sbb
or
imul
xchg
aam
les
fidivrs
scas
push
push
dec
leave
lods
mov
and
adc
sarl
pop
inc
adcl
shrl
cwtl
sbb
cltd
rcr
roll
add
test
add
sahf
or
std
clc
push
sub
fists
frstor
ds
sbb
xchg
das
cmpsb
into
cltd
mov
scas
push
cmpsb
cmp
mov
jae
or
push
jmp
jmp
stc
loop
jns
mov
leave
or
sarb
stos
xor
adc
and
stos
inc
and
cmpsl
sub
sub
test
cmc
lods
xchg
jne
pop
jecxz
and
jmp
repnz
lret
push
movsb
fcmovne
jbe
idivl
xorl
inc
and
and
add
scas
leave
fldt
or
dec
pop
aaa
mov
ficompl
jp
add
ret
sti
jmp
and
add
dec
pop
arpl
jge
xor
add
test
and
push
inc
push
xchg
jecxz
mov
movsl
cmp
and
push
dec
subb
movsl
addr16
aas
out
pop
repz
sub
dec
adc
test
frstor
pop
mov
scas
xor
popf
jg
sbb
rcl
mov
mov
je
jnp
xor
xor
imul
lods
or
cmp
and
out
mov
shrl
inc
xor
imul
jo
dec
sbb
mov
dec
jge
fneni(8087
mov
pop
or
and
addr16
addr16
imul
lods
cmpsl
cmp
loopne
jno
mov
mov
adc
add
pop
fistpll
pushf
sar
cwtl
sub
sbb
in
mov
leave
jbe
das
cs
xchg
ljmp
dec
int3
xchg
jbe
and
loopne
mov
add
hlt
inc
xor
and
stos
shll
mov
shlb
aam
movsl
xchg
and
out
aam
pop
jp
iret
cwtl
xchg
inc
sarl
jecxz
cltd
pusha
xchg
sub
pusha
add
sbb
loopne
add
fsts
in
dec
movsl
jp
repnz
inc
in
nop
mov
decl
das
adc
mov
cmp
in
cmc
jp
mov
test
imul
imul
mov
les
sbb
jns
mov
inc
jecxz
mov
mov
dec
scas
add
bound
adc
mov
jmp
mov
mull
in
in
mov
test
or
js
cmc
push
jo
scas
dec
jle
lods
es
inc
add
clc
xchg
sub
xor
jnp
out
rcll
daa
dec
out
cs
mov
push
and
adcb
pop
stc
jle
lret
lds
mov
jnp
jle
lods
sbbb
cmp
fwait
mov
sbb
out
jp
xlat
add
std
jno
js,pn
and
xor
or
dec
call
inc
push
push
xchg
into
xchg
pop
rorl
lds
add
out
call
repnz
mov
jo
xchg
xor
push
iret
push
xor
xchg
incb
and
mov
je
imul
lods
add
insl
add
repz
or
add
dec
adc
mov
jg
fsubrs
pop
sbb
mov
in
or
pusha
push
call
pop
push
loop
inc
inc
int
lods
or
xor
sti
mov
or
mov
fsubrl
inc
inc
or
add
scas
jecxz
or
mov
sub
xchg
movsb
dec
dec
mov
sub
aam
ds
mov
pop
imul
js
lock
cmp
test
outsl
js
out
lock
popaw
pusha
inc
js
mov
cmp
push
inc
push
sbb
dec
and
cld
mov
hlt
pop
test
pop
cmpsl
add
jle
adc
pop
xchg
popa
push
in
int
jno
mov
pop
cmp
xor
sub
fisubrl
sub
push
dec
mov
jno
adc
sbb
cmp
mov
and
jae
insb
lods
jp
into
push
popa
add
repnz
or
notb
xor
jp
pop
fmull
add
leave
ss
mov
jge
ja
lock
pop
inc
outsb
dec
adc
stos
add
cmpsb
jle
mov
or
leave
lea
lcall
lret
push
out
int
mov
dec
push
adc
jecxz
xor
dec
dec
sbb
sahf
out
xchg
push
rcr
neg
sbb
ret
and
xchg
mov
out
fbld
jge
pop
stos
pop
fstl
les
or
jmp
or
and
pusha
into
popaw
xchg
shr
add
in
push
dec
and
psrld
leave
repz
add
mov
arpl
pop
xor
jl
cmp
lret
inc
dec
out
ret
sahf
stos
cli
gs
mov
test
mov
cli
call
push
les
imul
mov
nop
adc
cmp
bound
cld
subl
roll
add
imul
xchg
test
popf
cmp
stos
xor
push
lcall
pushf
jmp
cmp
cli
or
stos
xor
repnz
ljmp
cmp
out
imul
les
adcb
push
jmp
dec
jecxz
mov
iret
push
add
xor
adc
jle
sarb
add
fwait
ss
inc
add
mov
pop
mov
outsl
cld
push
jns
imul
xor
lea
add
xchg
sahf
movsl
fisttpll
ffreep
ss
in
sbb
dec
mov
and
mov
mov
loopne
inc
int
stc
add
test
gs
test
and
sbb
push
cmp
adc
jne
test
data16
sub
int
cwtl
movsl
or
pop
out
xor
mov
sti
cmp
addr16
idivl
fwait
mov
enter
mov
xchg
lahf
inc
xor
sti
fisubl
mov
sbb
data16
xlat
mul
shll
stc
movl
mov
pop
pop
push
xchg
cli
loopne
rclb
or
push
sti
push
sub
pop
fcomi
xchg
sub
pop
jl
arpl
jl
or
or
push
loope
push
nop
xchg
sub
aas
scas
es
xor
loop
adc
ja
adc
loopne
leave
clc
popf
inc
iret
test
or
nop
xchg
lods
push
fcomps
lock
mov
rcll
mov
je
pop
mov
mov
loop
fdivs
mov
lock
rorb
xchg
or
arpl
adc
sub
iret
jmp
mov
sbb
inc
mov
leave
clc
fistps
jne
pop
jbe
jecxz
mov
jle
sbb
icebp
xor
xchg
leave
push
fwait
cmp
test
lock
data16
je
mov
or
and
dec
inc
mov
and
xchg
nop
pop
mov
insb
sbb
sub
fstps
jmp
or
ret
enter
push
out
xor
jmp
xor
aam
xor
jns
sbb
in
ja
pushf
mov
dec
xchg
cmpsb
rorl
out
cli
shlb
pop
sub
addr16
psubsb
je
aam
jle
xor
mov
adc
xchg
outsb
pusha
pop
lcall
cmpsl
repz
and
add
add
nop
lcall
imul
dec
jne
nop
out
clc
push
in
cmp
sbb
push
insl
jmp
xchg
or
inc
jmp
or
icebp
ret
movsb
mov
repnz
mov
ficoml
mov
xchg
push
lods
mov
aaa
sub
je
into
in
jb
repz
lock
out
jns
jns
aam
lretw
jne
imul
mov
in
cwtl
jge
ret
pop
das
dec
out
and
rcrl
ficoms
sbb
mov
repnz
mov
les
loopne
cs
je
pop
adc
dec
mov
mov
shr
pushf
imul
add
pushf
jp
jo
mov
sub
mov
mov
mov
pop
addr16
in
lods
js
xor
leave
shll
scas
push
cltd
jno
lret
enter
sub
sub
inc
mov
inc
das
mov
add
stos
rorb
cld
enter
mov
lahf
imul
sbb
out
and
xchg
adc
iret
sub
not
jmp
arpl
jmp
cld
push
mov
dec
cmp
sub
xor
dec
dec
outsl
rolb
mov
lcall
mov
and
mov
and
mov
cmc
xor
jo
jle
cltd
mov
gs
mov
movsb
sar
adc
push
xor
add
mov
dec
xor
xlat
pop
ja
filds
outsl
out
pushf
cmpsl
mov
xchg
shlb
dec
cmc
fwait
imul
cltd
addr16
mov
in
ljmp
xorl
int3
in
xor
sbb
add
sbb
cli
inc
ss
or
leave
cld
xchg
pusha
sbb
jae
clc
mov
test
clc
inc
shr
js
test
rcrl
inc
pop
std
push
cmp
addr16
not
and
std
xchg
inc
adc
pop
and
rol
adc
sbb
orb
jl
cli
or
inc
lret
arpl
mov
cmp
mov
repnz
jno
loopne
dec
and
mov
adc
daa
sbb
imul
jns
jge
jl
jno
mov
aaa
movsb
cmp
inc
dec
sbb
aaa
sar
jmp
lret
incl
in
sub
dec
ss
and
popf
repnz
mov
ds
push
push
lock
pop
icebp
sbb
cmp
inc
cltd
decl
dec
push
inc
jbe
dec
pushf
jbe
add
mov
lods
mov
ret
jp
test
hlt
clc
jbe
sbb
ds
cli
xchg
mov
pop
xor
and
in
xchg
test
jns
in
xor
xchg
jmp
test
cmc
ret
cmp
pop
aas
jl
test
lods
mov
mov
ljmp
xchg
add
aam
jae
cmpsl
shll
arpl
repnz
add
inc
xlat
dec
xlat
push
fcos
mov
jns
dec
test
pop
or
cltd
add
jmp
pop
jle
aaa
dec
call
mov
or
or
repnz
push
jb
out
inc
add
push
jmp
jmp
mov
andb
movsb
sarb
add
dec
loopne
push
mov
push
gs
into
pop
xchg
sti
int
cmp
inc
and
sub
clc
ret
pusha
faddl
cmpsl
std
sbb
xor
fisubl
clc
pop
push
cwtl
js
cmp
pop
mov
xchg
arpl
xorl
sahf
add
loopne
xchg
imul
test
nop
fadd
faddl
and
dec
xor
call
loope
push
enter
loope
mov
loope
mov
jne
out
mov
or
pop
sti
sbb
push
in
pop
adcb
imul
cmp
out
pop
es
add
aad
inc
adc
sbbb
arpl
dec
mov
jmp
js
sbb
lcall
rolb
inc
jne
push
pushf
ffreep
lock
stos
mov
mov
cmc
sub
rorb
fsubrs
mov
jg
sahf
je
imul
cmpsb
jb
lret
mov
std
pop
mov
sbb
imul
in
les
mov
lods
int
imul
lock
xchg
out
mov
or
pop
test
pop
jge
pop
lock
sti
dec
lds
mov
mov
test
lea
and
aas
push
push
scas
dec
stos
loop
inc
icebp
push
rcr
xor
mov
fisubrs
sub
jmp
div
jno
aas
dec
jmp
enter
repz
mov
push
push
pop
mov
and
push
dec
or
lcall
push
test
fldcw
aad
xchg
insl
daa
fcomps
push
jecxz
pushl
xchg
sti
inc
jnp
sub
and
xchg
xchg
pop
xor
sub
add
loop
sbb
cmp
cli
fwait
mov
push
pop
bound
and
adc
cmp
cmp
or
jg
pop
loopne
mov
mov
mov
jg
push
out
mov
mov
xor
jle
fstl
clc
push
js
fstpl
cmc
fdivs
push
fmuls
and
lods
xlat
mov
pop
mov
mov
notb
pop
push
rol
inc
shll
iret
and
sti
lret
gs
mov
cltd
push
add
and
dec
inc
mov
or
push
stos
pop
mov
or
push
push
imul
andl
repnz
loope
in
add
and
mov
or
arpl
inc
addb
jno
test
aam
sbb
push
dec
inc
sub
cs
ja
xlat
push
lea
jne
das
addr16
sbb
outsb
push
loope
mov
pop
pop
jno
in
cli
mov
sahf
rcrl
arpl
sub
mov
mov
xlat
xor
pop
and
sbb
mov
pop
pcmpeqd
cmp
lock
sbb
mov
enter
ss
xor
jns
imul
testl
or
popf
ficompl
mov
lahf
jge
sub
pop
dec
mov
inc
jmp
orl
jle
fistps
movsb
in
sub
sub
mov
lods
orb
sbb
cmp
dec
out
jo
push
pop
pop
cmpsb
out
inc
jmp
xchg
mov
xchg
sub
mov
sbb
add
mov
in
cwtl
andb
lds
sub
stc
cmp
push
xchg
jp
dec
dec
jns
sti
lcall
imul
ret
push
js
adc
pop
imul
mov
dec
gs
addl
jp
orl
xchg
sub
gs
movsb
in
cmp
sahf
sub
or
xchg
stos
push
daa
ljmp
ret
and
out
lods
sub
xor
pop
enter
dec
xchg
incl
jecxz
mov
xchg
cmp
mov
add
cmp
cmp
ja
lods
push
dec
or
sar
inc
cmp
add
daa
add
ljmp
movb
push
sarb
not
dec
inc
out
mov
minps
movsb
push
pop
xchg
cmc
cmpsl
pop
imul
clc
in
fsub
out
inc
push
lcall
xlat
repz
push
sub
fmuls
int
js
lcall
ds
mov
pop
mov
push
loope
bound
aas
fistpll
andl
adc
push
or
or
jne
cs
nop
sub
adc
imul
mov
inc
xlat
xchg
adc
test
cmp
arpl
lahf
sbbb
nop
jne
lock
aaa
and
push
lock
movsl
dec
hlt
dec
lret
jne
pop
jno
sub
pop
push
or
add
es
mov
mov
dec
or
cltd
sbb
cli
or
loopne
in
jp
dec
fistpl
jno
sbb
rorl
jge
aas
movsb
and
mov
cwtl
ljmp
lahf
cmp
aad
sub
inc
mov
sbb
adc
mov
push
mov
fisubrs
and
cltd
pop
cmc
popa
repnz
shrb
xor
push
pop
push
leave
insl
add
cwtl
xor
fstpl
sub
outsb
ja
ret
sbbb
aas
cs
shrl
mov
pop
pop
or
jbe
push
cwtl
mov
sbb
and
xor
aad
inc
je
fildl
enter
xor
insb
nop
xor
inc
in
fists
sbb
fs
mov
push
sub
loope
fs
data16
stos
mov
fwait
xor
fcom
or
fdivrl
in
arpl
xchg
xor
jg
mov
stos
xchg
ffree
mov
call
filds
xor
bound
outsl
inc
aaa
insl
aaa
lock
mov
sahf
mov
movsb
cltd
push
sbb
xorl
aaa
and
fcomps
lcall
push
pop
push
ret
call
in
jne
jmp
lods
mov
pop
ret
cld
fwait
movsl
xor
add
hlt
xchg
into
stos
jns
jnp
ret
xchg
dec
mov
pushf
dec
sbb
mov
xor
iret
or
xor
loopne
xor
je
xchg
xor
mov
lds
mov
shlb
popa
cmpsl
jns
pop
ret
sbb
sub
add
fcoms
push
iret
xlat
leave
ds
inc
insb
add
add
add
push
loopne
add
add
add
add
jo
add
add
add
add
add
add
addb
add
add
add
adc
js
add
add
add
fadds
add
add
add
adc
add
pop
add
and
add
adc
add
ljmp
test
pushl
jb
jo
add
sub
add
pop
add
and
add
add
fwait
hlt
and
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
sbb
sbb
sbb
sbb
sbb
jo
sbb
pop
add
add
and
outsb
das
inc
dec
pop
stos
shrl
jo
add
push
outsb
or
mov
sti
cmp
leave
pop
in
dec
je
cld
jne
decl
les
push
lea
add
adc
lock
mov
adc
decl
pop
in
mov
add
push
cmpsb
ret
dec
add
adc
sbb
add
incl
push
push
jbe
incl
stos
int3
rorb
mov
adc
add
xor
push
test
jne
add
sar
pop
pushl
mov
out
dec
adc
or
call
stos
push
add
lea
inc
loopne
add
dec
mov
mov
inc
aam
add
jne
inc
adc
push
loopne
add
rolb
inc
add
pop
add
add
add
add
add
add
add
add
add
add
inc
jae
gs
inc
insl
and
add
je
jo
sbb
outsb
jo
loopne
inc
gs
add
gs
add
inc
pop
inc
insb
push
inc
add
jb
addr16
gs
test
inc
xor
add
xor
add
add
cmp
add
test
add
add
sub
push
insb
testl
aad
gs
or
mov
clc
dec
inc
fsubs
inc
sahf
jbe
out
pop
inc
pop
xchg
jb
test
insb
cmpsl
cli
jle
stos
cmpsl
mov
ss
mov
or
cmp
dec
in
lcall
sub
xchg
call
insl
fldl
xchg
mov
dec
sbb
les
sbb
jl
push
aaa
xchg
mov
jmp
insl
cmp
cmp
xchg
sbb
xor
xchg
and
inc
or
push
fmuls
add
pop
call
mov
inc
pop
mov
inc
aaa
pop
aas
and
add
sbb
push
mov
xchg
es
aad
dec
clc
test
lods
ljmp
stc
icebp
jno
lret
mov
push
shrl
add
push
pop
and
mov
xchg
pop
xchg
loop
ja
adc
bound
icebp
add
mov
sbb
inc
fsubs
jb
inc
mov
icebp
nop
push
sbb
inc
pusha
xlat
dec
pop
loope
jmp
adc
cmp
mov
loop
jo
push
mov
sbb
pusha
xadd
aam
push
nop
pop
dec
sub
jnp
xchg
lds
aad
xchg
ret
fadds
add
mov
lcall
dec
cmp
lods
and
cmpb
stos
std
jg
fmull
inc
lahf
sub
bound
repz
cld
es
jae
decl
inc
push
dec
es
pop
testb
cmp
jns
jecxz
aaa
in
or
stc
xor
xchg
test
outsb
xchg
jae
xorl
mov
cmp
sub
cld
in
push
rol
scas
push
adc
repnz
rolb
sub
dec
inc
add
mov
sub
adc
mov
jae
jp
je
sub
and
jg
rcl
jge
sahf
in
ret
xchg
fnstsw
insl
add
dec
pop
pop
lods
imul
negb
or
in
cmp
movsb
inc
mov
ficoml
xchg
mov
cmp
div
lahf
sub
mov
not
ljmp
push
xor
into
sub
mov
push
jns
mov
subl
sub
push
sub
adc
jne
sbb
cmp
fdivl
fs
sahf
out
sahf
lcall
je
jmp
test
call
and
repz
imul
leave
adc
scas
lock
int
xor
cmp
int3
rcr
cmp
jl
mov
jl
fbstp
push
mov
loop
adc
ljmp
and
dec
sahf
test
sbb
pop
cltd
test
jo
es
inc
outsb
adc
sbb
pop
aam
pop
in
adc
inc
cmp
xchg
add
lcall
ret
fisttpl
or
xchg
test
data16
jg
data16
sub
push
movsb
xchg
xchg
shlb
sbb
push
ficompl
inc
adc
in
lods
aad
mov
xchg
fistl
sub
lock
lds
fistps
bound
push
lods
fmuls
inc
push
pop
dec
xor
dec
mov
push
bound
cmp
xor
repz
push
sbb
movsb
push
cltd
lea
or
jl
loope
mov
xchg
xchg
xchg
ficompl
add
xchg
sti
jb
inc
popf
scas
enter
jp
stos
push
or
stc
scas
mov
popa
push
or
test
or
pop
jl
sbb
jle
or
cmpsb
dec
ds
pusha
adc
pop
pop
movsb
clc
into
sbb
or
push
mov
mov
bnd
das
pop
fcomp
lahf
das
fidivl
popf
ret
dec
addl
jmp
push
push
xor
dec
into
cmp
aaa
out
sbb
inc
cmp
mov
cwtl
dec
cmp
sbb
in
packsswb
push
mov
int3
fistl
pop
in
les
xchg
sub
xchg
mov
rcrl
cli
push
push
fsubr
mov
rcr
jge
sbb
les
pop
push
ret
jp
and
popa
daa
rcl
shlb
dec
orb
dec
adc
mov
popf
add
in
iret
fistpl
adc
pop
cmp
dec
sti
fimull
mov
fldt
cmc
aam
iret
pavgw
sbb
xor
faddl
jmp
cmp
push
cmp
inc
cmp
fsubs
adc
stc
lahf
leave
data16
in
push
insl
push
mov
in
jnp
popf
mov
mov
pop
mov
fadds
cmp
rcll
inc
out
test
pop
addr16
pop
push
jp
cmp
popa
push
ss
sub
mov
mov
mov
xor
jnp
jo
pushl
outsl
cmp
dec
pop
xchg
mov
push
or
jl
push
gs
pusha
pop
cmp
test
cmp
out
sub
jnp
pop
andb
jmp
stc
sbb
into
stos
repz
cmp
cmp
and
data16
loopne
std
insb
sub
jl
sbb
popf
mov
mov
dec
loopne
cs
cli
movsl
xchg
mov
fwait
out
popf
add
jl
push
and
out
leave
popf
add
inc
mov
or
nop
and
inc
mov
lahf
shlb
cmp
out
pop
daa
mov
push
in
sahf
mov
mov
jmp
mov
cmpsb
hlt
repz
add
fisubs
xchg
ss
pop
fsts
sti
xchg
rolb
aaa
cmp
dec
call
sbb
mov
jmp
scas
in
out
pop
push
xor
xor
sub
fldl
pop
test
pop
mov
clc
popa
mov
sub
scas
adc
fldl
sbb
dec
fsubr
addr16
std
notb
out
xchg
sti
cwtl
sub
imul
push
xchg
mov
les
nop
pop
sbb
dec
xchg
jg
or
or
mov
shl
pop
add
and
out
stos
xor
mov
lds
adc
mov
or
jbe
mul
cmp
fcmovne
jp
cld
adc
pop
jp
mov
fbld
cmpsb
rolb
pop
idivl
jl
fmuls
push
cmp
or
mov
and
or
pop
out
stos
stos
or
sbb
mov
push
add
jle
push
mov
daa
push
andb
mov
cmp
jle
inc
xor
cmp
push
je
jns
dec
add
cs
jnp
ret
mov
or
out
std
cmp
cli
scas
inc
stos
add
test
dec
mov
repnz
fistps
insl
dec
or
std
test
cwtl
orb
addr16
sub
mov
lds
jge
leave
and
lods
fiadds
cwtl
filds
popf
sti
inc
testb
pop
scas
je
mov
test
js
dec
pop
xor
dec
add
cltd
cmp
bound
adc
sbbb
mov
inc
inc
mov
xchg
test
and
mov
xor
fld1
mov
jmp
lods
mov
nop
mov
dec
jmp
cltd
ret
cli
pushf
xlat
mov
mov
aas
lods
ja
popf
cmp
mov
sbb
jnp
sub
xor
cmp
cmp
mov
les
popf
fs
mov
mov
fimuls
push
insl
push
jnp
adc
push
fs
xor
repnz
mov
outsb
adc
and
xor
sahf
int
adc
dec
push
push
pop
and
cs
jo
mov
imulb
aas
addr16
mov
xchg
arpl
jl
cld
adc
mov
mov
sub
and
xor
shrb
mov
sub
outsb
dec
les
scas
pusha
inc
pushf
js
cmp
pop
out
cmpb
push
adc
fdivs
or
jecxz
dec
daa
sbb
push
cli
jge
or
es
out
add
xlat
push
jmp
dec
sti
pop
lods
shll
jno
jp
jp
cmp
dec
js
imul
pop
fists
dec
inc
popa
push
data16
rcrb
repnz
xchg
mov
movsb
jno
xchg
jmp
into
jmp
cmp
xor
mov
add
scas
ja
rcll
sub
jb
mov
push
or
xor
in
sbb
xchg
cltd
fldcw
sub
adc
stc
mov
adc
mov
clc
push
xchg
std
mov
shrl
clc
inc
enter
or
xchg
loopne
sbb
data16
int
and
shlb
adc
mov
inc
sub
clc
adc
rorb
mov
faddl
mov
sub
sbb
fmull
xlat
pop
stos
fldt
sub
jbe
call
mov
int3
push
sbb
mov
mov
jecxz
and
nop
lock
inc
jnp
push
sub
jp
add
imul
repz
das
push
out
push
xor
test
mov
xor
cltd
shrb
out
test
sahf
pop
adc
outsb
pop
pop
cmpsb
xlat
popf
addb
in
out
fisttps
cs
in
jb
rclb
push
aam
xlat
jge
or
dec
mov
add
adc
pop
cmp
and
int3
sbb
mov
dec
push
xchg
fisubl
xor
and
data16
ror
and
jno
mov
pushf
je
stos
int
inc
ret
add
cmpsl
xlat
cmc
mov
pop
jb
jns
inc
sbb
push
adc
in
push
and
test
or
outsb
nop
cmp
mov
sbb
aam
popf
or
in
and
enter
sub
sbbb
ds
bound
mov
movsl
testb
into
je
mov
mov
loop
cld
aaa
stos
jo
out
or
dec
push
fsubs
cmp
add
xchg
pop
push
fcmovu
lods
dec
std
andl
bound
adc
and
sub
ds
mov
fwait
mov
pop
xchg
pop
or
lock
mov
lahf
push
mov
lcall
aad
xchg
mov
stos
mov
es
lds
dec
fucom
arpl
push
in
bound
cmp
repnz
pop
shl
mov
out
movsb
push
bound
adc
lcall
jle
pushl
xchg
jecxz
cmp
mov
iret
or
push
jne
stc
push
lods
mov
inc
mov
fidivs
test
outsl
test
jne
pop
adc
push
ds
jns
adc
aaa
add
dec
enter
dec
sbb
adc
and
xchg
lahf
sub
test
add
or
xor
mov
sbbl
inc
mov
mov
sub
cmp
into
iret
lods
sarb
jbe
js
xchg
mov
cld
dec
lock
push
mov
pop
push
xor
fnstcw
out
dec
repnz
call
fstl
lock
xchg
lahf
add
rorl
push
cmp
sbb
push
shl
insl
and
push
push
xor
xrelease
movsb
and
sub
or
jb
outsl
aas
pop
and
add
mov
gs
into
and
xor
mov
popf
adc
sub
jo
loope
add
mov
std
dec
cmp
jmp
cs
testb
out
loopne
int
das
xchg
cmp
in
xlat
sub
mov
push
ljmp
and
add
out
inc
lret
int3
pop
or
lods
out
and
or
inc
fwait
jns
push
negl
movsl
add
adc
in
mov
in
xlat
cmpsl
shl
pop
xchg
xchg
xchg
lcall
push
fbstp
mov
int
test
lea
xor
loope
outsl
sarl
cwtl
mov
or
mov
and
inc
mov
daa
cmp
push
mov
mov
test
fiaddl
and
add
mov
daa
jne
xchg
aam
inc
lds
dec
loop
sub
clc
lahf
jg
aaa
cmp
jns
pop
insb
mov
sbb
inc
in
fsubl
test
sub
push
add
std
cmp
and
into
fs
inc
fimull
cmp
inc
jb
icebp
sbb
addr16
xor
mov
xlat
fcomps
das
cmp
outsb
nop
push
mov
adc
fldl
sub
xor
daa
lea
es
in
inc
int
mov
lods
lahf
mov
fldl
jae
popa
pand
sbb
and
xor
push
nop
sub
xlat
cmpsb
movsb
adc
and
movsl
out
cmpsl
cli
xchg
test
cmc
frstor
ret
cmp
leave
imul
mov
dec
adc
filds
aam
in
mov
sbb
fldl
pop
push
test
xlat
out
jmp
mov
jp
mov
cmpl
stc
daa
negl
inc
pop
add
xchg
enter
daa
dec
pusha
cmp
int
ret
dec
lods
outsb
push
cmpsl
iret
jb
orl
cmp
insl
mov
shll
add
sub
lock
jbe
ljmp
mov
pop
test
or
pushl
ret
push
lret
test
pop
xchg
stos
loop
test
lahf
shlb
lea
mov
pop
sti
pop
mov
dec
cli
nop
and
xchg
mov
push
pop
mov
mov
dec
or
cmpl
stos
mov
jnp
push
sbb
inc
push
pop
cmp
hlt
mov
pop
pop
jecxz
test
mov
rcrb
fimuls
ljmp
sub
cmp
xor
mov
pop
adc
pop
pop
subb
aas
pop
or
mov
sub
scas
out
lret
rcrl
imul
jp
gs
push
ja
or
cmp
out
out
mov
sti
fbstp
sbb
mov
xor
push
pop
aad
pop
xchg
ja
xorb
cld
mov
pop
sbb
faddl
gs
cmp
fbld
mov
mov
jb
scas
stc
inc
outsl
imul
aam
pop
je
ret
sbb
and
push
xchg
call
notl
sbb
xchg
dec
gs
adc
cmpl
mov
dec
addr16
test
mov
dec
call
xor
pop
jns
sti
push
cmp
inc
bound
fildl
fnsave
jb
mov
insb
adc
pop
fwait
sahf
test
mov
jb
and
xor
bnd
push
lret
jb
push
and
ret
jbe
cmp
test
fstps
sub
icebp
out
xor
inc
mov
dec
and
insb
sbb
ret
roll
add
shrl
jne
pop
hlt
xor
lret
and
out
nop
repz
dec
jo
jge
ljmp
or
ret
pop
mov
inc
or
pop
in
sub
sub
sti
test
push
mov
push
xchg
lcall
scas
sub
mov
mov
sarb
jnp
sub
mov
push
outsb
xchg
sub
inc
cmp
cmp
cmp
pop
adc
mov
mov
lcall
lahf
xlat
push
aad
stos
cwtl
and
xlat
cmp
xor
add
movsl
mov
pop
cld
fists
nop
push
rolb
les
push
jge
in
push
cmp
pusha
lahf
cltd
or
xchg
push
fldcw
dec
cltd
lea
xchg
out
cs
cli
cmpsl
pop
push
adc
pop
mov
mov
mov
test
pop
push
in
add
push
adc
pop
cmpsl
adc
mov
jp
mov
aam
or
mov
stos
mov
addb
subl
inc
pop
fcomps
movb
outsl
dec
out
adc
add
fbld
pop
mov
sbb
ss
pop
cmp
lea
cli
mov
add
mov
mov
sbbb
jp
and
mov
in
cmp
jae
ljmp
lea
push
fisubrs
inc
pusha
repz
neg
xor
xor
sub
push
testl
out
popa
sub
jecxz
dec
clc
pop
rorb
test
sbb
mov
or
jge
jae
mov
sbb
mov
jge
add
lahf
mov
xchg
sti
into
call
sbb
loopne
or
and
xor
lcall
inc
shl
scas
insl
nop
add
in
jecxz
mov
int
add
cmp
jno
stc
rcl
lahf
popf
rclb
jnp
lret
lahf
cmpsl
xchg
xchg
ja
and
xlat
ljmp
adc
test
add
rcl
std
lea
daa
sub
xchg
push
mov
cltd
iret
fisttpll
ljmp
mov
xor
mov
cwtl
and
clc
les
pop
mov
int
lods
ss
lret
or
push
mov
stos
test
mov
xor
pop
and
lahf
stos
jbe
add
rorl
into
xchg
ljmp
adc
add
mov
push
push
dec
cmp
aas
inc
addl
sub
lret
in
jno
insb
das
inc
test
insb
adcl
push
and
and
cmp
push
daa
adc
cmp
mov
sti
or
ds
add
adc
mov
lcall
fnstsw
inc
insl
add
mov
mov
cwtl
lods
or
jge
cmp
rorb
pop
ret
ljmp
add
jg
xchg
mov
push
mov
stos
ds
int
push
mov
std
cmp
cs
adc
mov
and
out
jl
mov
sub
jg
mov
sahf
clc
pusha
inc
cmpsl
addw
fisubs
andb
dec
add
dec
aaa
push
insb
int3
adc
test
dec
adc
pop
sub
inc
mov
pop
daa
xchg
mov
pop
mov
lock
cmc
and
lahf
dec
dec
mov
inc
outsl
xchg
push
or
cmpsl
mov
sbb
mov
add
add
je
add
add
add
add
add
add
add
in
test
add
add
xor
add
add
add
add
xor
sar
ljmp
ja
mov
pushl
pop
or
outsl
jne
or
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
pop
add
push
cmpxchg8b
jmp
mov
sahf
sub
or
test
sub
incl
add
cmc
mov
add
lea
add
push
push
push
push
mov
push
push
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
and
clc
decl
incl
test
adc
add
or
decl
jmp
cmp
clc
cmp
stc
sub
lea
jne
add
adc
in
push
mov
add
add
inc
add
outsl
cmp
imul
test
gs
or
inc
jae
add
jbe
je
arpl
aas
xchg
dec
fs
ja
add
addr16
popa
add
imul
push
addr16
add
push
push
xchg
scas
and
ds
add
add
popa
dec
popf
mov
inc
ror
xor
push
rol
push
cmp
mov
jae
sbb
mov
inc
or
je
cmpsl
xchg
sbb
or
lret
mov
pusha
jecxz
leave
cli
dec
hlt
aas
decl
inc
pop
aam
xor
js
lret
or
lods
mov
sub
mov
mov
leave
call
or
lods
dec
inc
jno
pop
mov
ret
nop
call
mov
xor
mov
das
test
mov
insb
pop
ja
shll
sub
push
int3
push
dec
sbbb
sub
lock
jmp
iret
fildll
and
stos
and
xor
xchg
jmp
arpl
in
adc
pop
jns
mov
jb
cmpsb
insl
cmp
pop
xchg
jle
inc
pop
shrl
push
jnp
leave
in
pop
xor
in
xor
push
jbe
pusha
lret
mov
push
pop
mov
jnp
fnstsw
jl
shrl
push
jl
ret
and
jo
push
mov
popl
add
in
cmc
scas
addr16
push
call
sub
fistps
sub
xchg
pop
xchg
rclb
sbbb
sbbb
jecxz
daa
sbb
sahf
es
lcallw
bound
lods
pop
xchg
push
fstpl
cmpsl
lcall
mov
sub
inc
rorb
lcall
push
movsl
pop
outsb
int3
mov
orb
shrb
sbb
inc
imull
dec
adcb
movsb
push
lds
and
sub
std
gs
call
add
mov
or
xchg
pop
mov
mul
jo
adc
adc
addr16
ljmp
fcoml
int3
xor
imul
push
cmp
inc
js
mov
dec
sub
ss
or
sbb
lcall
mov
fwait
out
sub
das
xchg
mov
movsl
fistpll
xchg
and
xor
mov
cwtl
repnz
cld
rcl
and
movsb
loop
adc
cmp
xor
stc
int
aas
out
mov
lock
add
mov
push
test
pop
jp
das
insb
rcrb
sbb
sub
repz
mov
out
jo
push
cmpb
sbb
inc
lret
jns
dec
ficoms
cmp
mov
ljmp
arpl
enter
push
aam
je
jo
sub
cli
dec
adc
pop
int3
push
fcomps
loop
cli
inc
lods
pop
pop
and
jp
out
aad
mov
and
out
pop
in
mov
pop
loopne
xchg
dec
in
mov
arpl
jecxz
sarb
or
fistpll
xor
cmp
xor
loopne
xchg
mov
xchg
sbb
or
jp
jo
sbb
or
inc
ja
jge
pushf
add
sbb
or
test
test
xchg
jno
stc
in
test
inc
push
xchg
mov
xor
mov
add
adcb
fs
xchg
ja
dec
xchg
test
cmpsb
pop
mov
sub
jbe
push
cmpsb
inc
daa
pop
test
adc
sub
or
in
aaa
fmuls
mov
sub
ss
add
shll
dec
add
sti
and
stos
subl
xchg
mov
fstpl
sub
inc
movsb
mov
enter
inc
dec
shll
sbb
mov
inc
loope
add
ret
dec
aaa
push
mov
dec
mov
mov
in
mov
and
dec
ja
dec
dec
adc
or
pop
cmp
sub
inc
je
imul
cmp
test
incb
mov
mov
fdivr
movsb
stos
test
sbb
mov
fbstp
jbe
inc
pop
jge
in
js
mov
push
ret
adcb
filds
adc
pop
dec
shrl
aaa
mov
xchg
mov
xchg
mov
lahf
adc
and
fcomps
das
ds
cs
movsb
shlb
push
cmp
jp
inc
ljmp
lods
addr16
dec
jns
cwtl
or
dec
fisttpll
sbb
jno
push
int3
ljmp
add
xor
hlt
sti
pop
add
pop
jge
add
cltd
sub
icebp
outsb
push
fwait
in
mov
cld
int
pop
shll
and
add
scas
adc
mov
shrl
inc
nop
jbe
adc
bound
test
gs
mov
lcall
enter
divl
dec
and
xlat
or
pop
pushf
pop
xchg
arpl
dec
mov
xchg
int
cs
aad
jmp
pop
push
insl
outsl
arpl
mov
jp
sub
cmp
push
insl
pop
mov
les
je
divl
and
adc
cmpsb
lret
notb
maxps
adc
cmp
mov
inc
daa
out
lock
aad
dec
sbb
fcmovnbe
fisttps
test
dec
or
sub
psubd
in
pop
adc
aaa
sbb
iret
sar
xchg
mov
pop
shlb
into
xor
aas
cld
inc
aam
adc
ret
in
add
cmpsl
sub
js
mov
mov
lcall
stc
aas
inc
xor
scas
adc
aad
push
inc
out
repz
dec
cmp
mov
xor
cltd
xlat
mov
xchg
xchg
xchg
movsl
push
mov
enter
mov
in
inc
mov
pop
stos
insb
push
mov
dec
stc
cmp
sub
outsb
xchg
pop
push
fcomi
cmpsb
and
cld
frstor
ss
jbe
push
add
sub
in
lret
adc
xchg
repz
push
cwtl
ja
dec
push
jb
cmp
push
loopne
in
sbb
mov
add
jnp
lcall
xor
bound
pusha
imul
xchg
mov
loop
pop
int3
adc
pop
shl
ljmp
in
sahf
jne
repnz
les
fbstp
mov
nop
mov
cmpsl
lret
pop
decl
pusha
push
mov
lahf
or
cmp
fldenv
add
mov
ljmp
ja
dec
insb
aaa
mov
sbb
xchg
or
fdivs
testb
outsl
ret
mov
jle
repz
lods
mov
insb
pop
pop
je
jne
push
lahf
mov
push
pop
stos
mov
jmp
pop
fildl
lcall
inc
cmp
pop
sbb
ja
adc
movsb
push
sbb
aam
cltd
popf
xchg
in
push
addr16
pop
jb
inc
dec
mov
hlt
notl
cmp
popf
lods
sahf
scas
mov
push
add
das
in
lea
inc
mov
or
and
adc
or
mov
jle
mov
insb
push
cwtl
mov
add
aaa
scas
mov
push
loop
orl
scas
cmpb
ret
fisubs
mov
and
test
or
mov
lock
mov
in
lods
idivb
dec
cld
mov
ror
adc
dec
jno
lcall
or
add
lock
push
mov
xchg
inc
inc
sarb
jo
js
cmp
lret
push
std
xchg
arpl
lea
imul
repnz
and
aas
jg
stos
leave
mov
fcomp
xchg
pop
fsubl
lcall
xchg
clc
sbbb
add
outsb
dec
inc
adc
movsl
scas
test
idivl
xor
pop
or
out
xchg
mov
shl
mov
wrmsr
or
je
data16
stos
pop
jnp
mov
jb
imul
or
jl
mov
sarl
std
stc
xorl
outsb
mov
pusha
js
jno
pop
jp
pushf
sbb
inc
cmp
adc
push
inc
pusha
scas
cld
dec
mov
sub
mov
mov
cmp
dec
xchg
sbbl
fwait
cltd
mov
scas
in
pop
daa
das
push
mov
fmull
dec
mov
in
aad
cmpb
fistpl
mov
sub
sub
fmuls
pushf
dec
sbb
add
and
sub
mov
lahf
aad
and
addr16
push
das
cld
cmpsb
inc
cltd
xlat
lahf
mov
adc
xlat
xchg
popa
mov
fstp
loope
xor
add
rcl
in
jb
fcomps
int3
fcoml
push
test
mov
xor
sub
cmp
ret
pop
mov
cmpsb
stos
cs
push
lods
iret
mov
add
loope
ret
mov
fldcw
jno
cld
push
jle
in
hlt
clc
push
cmp
nop
push
mov
nop
adc
push
cwtl
adc
and
shl
aad
pop
sub
data16
dec
dec
xchg
in
scas
sti
sahf
sub
push
lds
sbb
xchg
adc
addl
mov
push
ja
mov
cmc
popf
pop
dec
repz
addb
push
aam
xchg
or
pushf
test
cld
jns
or
kmovw
int
mov
mov
or
sub
pop
lods
out
test
or
out
xchg
xor
ss
jmp
aad
mov
jg
cmp
xchg
dec
inc
push
repz
or
add
insl
xchg
mov
ret
or
sbb
data16
and
cmp
pop
ds
xchg
jae
pop
sti
xchg
sbb
fnsave
inc
mov
jno
push
nop
aad
mov
adc
pop
mov
mov
out
dec
pop
stos
mov
popa
scas
and
jle
cmp
adc
imul
decl
or
popa
sub
fidivs
les
inc
or
mov
xchg
pop
dec
pop
jae
or
das
lret
mov
clc
sub
cmp
ja
cmpb
xor
add
in
pop
mov
imul
xchg
and
lret
cmpsb
jmp
out
out
jbe
add
je
pop
out
cmpl
adc
xorb
mov
inc
jg
and
dec
inc
inc
in
or
sbb
scas
scas
rcrb
mov
into
mov
test
dec
lods
jbe
lods
mov
dec
std
ficompl
mov
popa
sub
lret
inc
mov
add
mov
out
addr16
mov
cmp
xchg
xlat
stos
and
lock
sahf
mov
jle
out
stos
icebp
inc
movsb
in
fs
xor
jmp
mov
and
outsb
mov
test
out
add
fs
out
enter
fwait
or
mov
add
inc
ljmp
mov
jle
xchg
test
dec
cli
mov
jle
dec
mov
jno
scas
loop
out
add
add
and
xor
xlat
int
and
pop
jo
and
or
es
jns
int3
add
sbb
cmp
xchg
jmp
jmp
adc
ja
adc
sub
push
aas
aas
cmp
push
jo
dec
shlb
mov
jne
jmp
jne
arpl
cmp
mov
push
insl
bound
xchg
or
mov
mov
loope
icebp
stos
inc
dec
jge
stos
pop
jo
sbbb
xor
das
pop
int3
fwait
dec
lock
pop
inc
mov
shr
in
sbbl
push
mov
dec
mov
push
ljmp
movsl
xchg
movsb
mov
or
testb
int
shll
or
lock
or
cli
mov
dec
loop
mull
pop
and
addr16
es
xchg
sub
mov
aaa
rorb
daa
inc
inc
xchg
and
dec
movsl
adc
cmpsl
imul
sub
ja
xchg
outsb
inc
fistpl
xchg
add
dec
insl
andb
cwtl
aas
add
jno
sarl
pop
adc
inc
or
inc
call
push
orl
mov
inc
scas
sbb
inc
xchg
mov
lret
bound
adc
adc
adc
sub
xor
inc
cmp
in
jl
sbb
jbe
mov
push
inc
and
cmpsl
js
cmp
xor
xor
inc
mov
sub
dec
push
out
pop
mov
dec
pop
in
icebp
mov
in
sbb
dec
push
loopne
jge
sbb
push
inc
inc
ret
data16
loopne
test
lods
inc
ljmp
mov
add
lcall
pop
mov
xchg
xor
xchg
std
add
outsl
pusha
das
mov
dec
imul
mov
sbb
je
shr
inc
pusha
iret
xchg
insb
shrl
and
cs
pop
pop
mov
xchg
mov
inc
mov
adc
je
addr16
and
xor
push
sub
fmull
pop
test
lds
or
jp
cld
insl
lock
stc
in
dec
mov
out
mov
idivl
ja
sbbl
pop
sub
jl
ror
mov
insb
repz
sbb
stc
and
out
cmpsl
mov
fidivs
popf
test
div
loopne
adc
mov
mov
stos
push
inc
and
out
mov
pop
xchg
adc
test
in
cmc
dec
jl
loop
mov
add
xor
push
push
cli
mov
sbb
data16
cmp
dec
xchg
adc
mov
push
std
xor
icebp
jle
mov
push
cmpsb
mov
mov
jo
stos
fldt
test
jecxz
aas
es
inc
punpcklbw
cwtl
cmp
mov
push
lock
fnstsw
inc
cwtl
or
dec
mov
popf
xor
sti
inc
lea
fildll
cmp
adc
jg
adc
push
mov
in
nop
shlb
sub
sub
fstps
imul
mov
pop
xchg
mov
std
cmp
sbb
jp
jmp
jo
xor
cmp
cld
es
xor
sbb
jp
dec
ja
xor
aaa
out
pop
pop
mov
fidivrl
ljmp
xor
hlt
xchg
or
fisubrl
mov
mov
ss
cmpsb
inc
inc
scas
adc
pushf
daa
cli
jnp
sbb
xor
sub
xlat
cltd
aaa
aad
mov
and
loop
add
movsb
arpl
add
lock
push
test
sub
clc
rcrl
pop
adcb
sbb
out
or
jg
stos
aam
ficomps
or
lods
addb
roll
test
add
cmp
jecxz
dec
pop
jg
jnp
mov
jns
cwtl
cmp
stos
dec
or
cli
pop
cmpsl
shll
mov
out
mov
mov
in
cmpsl
jle
add
xor
jne
lock
dec
xchg
push
push
aad
adc
lret
jmp
mov
test
fstl
cmp
or
dec
dec
lret
mov
ds
std
xor
out
cmpsb
push
loope
mov
pop
rol
mov
pop
in
xor
test
mov
xor
push
push
cmp
test
sbb
data16
push
scas
jge
mov
aaa
mov
inc
repnz
cmp
idiv
add
pop
jmp
fstl
mov
mov
lea
pop
cmp
ds
jb
inc
mov
je
jbe
daa
cmpb
sub
sbb
inc
mov
sbb
fs
pop
xor
push
movsl
mov
popf
sbb
data16
mov
ret
in
xchg
cmc
ljmp
or
mov
xchg
mov
in
inc
sub
aad
lret
lret
lret
ret
inc
mov
fmull
add
lds
lods
ljmp
add
dec
scas
or
xchg
mov
jle
int3
dec
xor
add
mov
idivl
push
adc
filds
mov
xchg
iret
sahf
scas
pop
sbb
test
inc
mov
cmp
adc
push
jp
mov
call
imul
sub
cli
and
and
jb
insl
icebp
xchg
dec
loopne
cltd
xchg
std
fwait
mov
lods
nop
sti
negl
mov
clc
cltd
lahf
sbb
mov
or
cmc
jg
xchg
lret
dec
ds
xchg
jmp
aam
xchg
ja
cwtl
test
les
adc
test
insl
scas
arpl
mov
cmp
or
je
movsb
test
loope
cmp
mov
lds
adc
inc
cmpsb
xchg
xchg
xor
or
ljmp
push
or
xchg
pop
les
mov
int
lea
pop
js
adc
enter
mov
jle
jmp
icebp
mov
mov
cmp
test
in
fisttpl
mov
std
push
test
jns
adcb
xchg
inc
mov
fidivl
fnsave
push
lock
sub
popf
dec
popf
inc
add
jne
cmp
mov
jmp
lahf
int
cmc
lcall
frstor
shlb
jl
aas
xor
div
ret
mov
imul
xchg
int
imul
mov
add
mov
xchg
push
mov
jmp
insb
int
inc
in
dec
test
je
jmp
insb
movsb
xchg
fisubrl
rorl
mov
ja
add
xor
fstl
jmp
sub
adc
sti
adc
movb
xchg
pop
dec
call
and
sbb
bnd
cmp
jae
add
in
lods
push
lds
lods
jbe
lds
adc
inc
mov
or
adc
dec
clc
les
popa
xor
les
add
inc
mov
aaa
mov
add
xor
inc
pop
sar
sbb
inc
cltd
and
data16
std
or
and
or
mov
movl
enter
mov
jb
mov
shll
push
int
rcll
or
mov
out
shlb
test
shr
xchg
fcmovnbe
sub
clc
push
pop
daa
jb
add
imull
pop
jg
pop
mov
pusha
add
test
cli
dec
jg
lods
sarb
daa
popa
jge
xor
sub
mov
repnz
rcrb
add
add
add
add
mov
add
add
ficoms
add
subb
add
add
addb
add
add
pushl
add
add
add
add
test
add
add
stos
stos
add
ja
mov
ljmp
in
push
cmpl
push
mov
je
cmp
je
call
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
add
add
adc
add
push
mov
add
xor
adcb
add
popl
rolb
jb
add
add
add
or
add
add
jb
add
add
add
cmp
sbb
sbb
sbb
sbb
sbb
add
add
add
push
jb
outsl
dec
dec
add
gs
inc
enter
jecxz
out
jo
fimull
add
xchg
mov
adc
mov
sahf
mov
or
repz
idiv
idiv
cs
pop
push
test
jmp
scas
add
clc
clc
pushf
mov
xor
sub
out
pop
add
push
ljmp
call
mov
inc
pop
add
jbe
adcl
je
test
inc
adc
jmp
cmp
test
incl
adc
test
cmp
or
or
adc
cld
call
js
mov
loopne
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
sbb
add
add
jo
add
sbb
add
sbb
sbb
sbb
fiaddl
add
imul
add
gs
inc
xor
arpl
gs
inc
outsl
push
insb
add
imul
insb
dec
push
je
xor
add
inc
gs
add
push
add
ret
add
add
xor
add
add
add
add
nop
add
and
add
add
add
add
add
lock
add
add
movsl
adc
mov
movsb
push
mov
add
xchg
gs
out
shll
push
adc
inc
clc
push
xor
sub
push
mov
lods
notb
pop
jmp
int3
dec
xor
push
enter
sbb
mov
in
dec
mov
and
fiadds
sarb
mov
inc
popf
scas
call
mov
lods
out
inc
insb
or
jns
xchg
lcall
decb
scas
and
mov
add
cmp
les
daa
je
or
inc
add
mov
or
cmp
xlat
cltd
jae
push
fnstsw
xchg
add
and
es
sbb
mov
stc
mov
loop
test
fstp
clc
cmp
cltd
add
out
scas
cmp
mov
xchg
mov
cmp
aad
push
and
add
dec
repz
hlt
push
xchg
sub
add
mov
jbe
adcl
loop
sahf
hlt
jmp
aad
dec
pop
adc
aad
lea
lcall
cmp
jmp
hlt
enter
pusha
jp
push
icebp
mov
mov
xor
ss
jne
jg
ficoms
pop
mov
data16
add
cmp
push
movsl
lahf
sbb
fisubrl
push
xchg
mov
neg
pop
add
jle
les
ljmp
sub
je
rolb
int
cmp
xor
sbb
gs
jmp
jae
bound
cmc
jecxz
popf
stos
cmp
jecxz
and
pop
loopne
dec
bound
lret
inc
int3
pop
mov
pop
or
shr
iret
addl
iret
lret
out
xchg
add
popa
lcall
jno
sub
cli
arpl
dec
mov
dec
mov
push
jl
mov
int3
xchg
push
lcall
aad
xchg
mov
scas
lea
jl
sbb
aaa
or
setbe
inc
rorb
daa
aam
or
mull
addl
ja
push
mov
sub
dec
or
iret
test
jnp
jle
fists
pop
into
adc
lret
cli
sbb
cmp
dec
adc
daa
cmp
jmp
clc
xor
jo
std
mov
cli
stos
rclb
xchg
ss
aam
pushf
fiaddl
dec
out
cmpsl
cwtl
push
jae
pop
push
dec
mov
fdivr
mov
mov
sub
xlat
push
insb
dec
xchg
loope
fistpll
pop
xchg
xchg
enter
jnp
mov
mov
aas
fcomp
shrl
mov
test
inc
mov
mov
push
das
mov
into
or
sub
cmp
xchg
les
clc
andb
or
fidivrl
repz
push
push
test
mov
xchg
rcrb
push
add
add
pop
repnz
xchg
and
pop
push
scas
daa
hlt
cmp
arpl
inc
inc
call
ret
pop
cmp
xchg
adc
xor
mov
repz
xor
stos
jns
leavew
cmpsl
fcompl
sbb
jmp
adc
and
lods
cs
mul
mov
pop
or
mov
mov
xchg
jnp
sub
mov
mov
add
or
xor
mov
mov
push
or
pop
mov
add
stc
xchg
pop
lret
dec
roll
push
inc
push
ja
mov
sub
add
xchg
mov
shrl
xchg
iret
in
push
jno
lcall
aam
cltd
xlat
loopne
pop
xor
cmp
sub
pop
xsavec
mov
shrl
jl
incb
mov
mov
and
scas
rorb
pop
gs
mov
inc
or
push
rcrb
dec
push
mov
test
push
mov
push
and
dec
xchg
inc
in
mov
out
mov
lods
push
mov
mov
sbb
xchg
cli
push
repnz
add
ret
call
sbb
pop
push
rcll
test
mov
bound
sahf
cmp
lahf
movsl
inc
in
inc
jno
adc
mov
sub
test
jge
sub
lahf
shrl
cmp
stos
sub
xchg
cmpsl
mov
hlt
ja
rcll
mov
mov
pop
repz
mov
lds
cmc
xor
aaa
mov
pop
enter
adc
enter
inc
fdivrp
insl
fwait
pop
stos
pop
pushf
fcmovb
push
mov
cs
mov
das
push
cmp
les
aaa
push
cmpb
cmp
cmp
jge
addr16
das
jge
jge
push
aam
arpl
mov
xchg
movsb
pop
xor
xchg
inc
fiaddl
cmp
cmp
inc
sub
mov
data16
std
or
xchg
jg
push
lea
inc
lds
or
dec
dec
lret
test
out
jle
xchg
cmpsb
pop
push
inc
nop
sbb
mov
call
dec
adc
je
movsb
int
sub
test
mov
and
jb
dec
imulb
and
or
xorb
sbb
inc
sarb
ficomps
mov
push
insb
mov
dec
test
popf
pop
stc
xor
je
jbe
mov
mov
jecxz
fdivrs
pop
dec
ficomps
xor
cld
dec
sti
rorb
xchg
dec
pop
xlat
xor
and
lods
jp
outsl
in
fldt
xor
pop
aaa
ja
mov
arpl
xor
fmull
cmp
mov
sbb
dec
xor
push
inc
sub
jecxz
jmp
and
xlat
jge
out
je
and
sbb
add
cmpsl
inc
sbb
imul
mov
dec
notb
sahf
lds
jbe
jns
enter
mov
stos
test
xchg
lcall
in
les
rcrb
dec
shr
fisubs
mov
mov
ja
mov
and
mov
and
negl
pop
pop
ljmp
xor
mov
inc
inc
call
test
test
fiadds
test
shl
addr16
xor
pop
xor
mov
dec
int3
movsl
xchg
lock
mov
pop
push
inc
mov
imul
dec
xor
mov
bound
fbld
test
les
push
mov
dec
mov
fimuls
setae
adc
mov
fsts
cli
cltd
das
mov
push
sub
flds
lods
sbb
dec
sti
sbb
xor
lret
mov
fisttpll
and
dec
loop
mov
icebp
sahf
outsl
test
call
or
add
jg
adc
aad
call
loop
mov
ja
dec
add
cmp
cmp
fdivrl
out
imul
ds
inc
or
push
iret
pop
mov
pop
push
dec
cmp
xor
and
gs
mov
add
stos
outsb
xchg
sarb
repz
jb
push
mov
mov
scas
cmpsl
pop
and
fstpl
mov
xor
add
pop
mov
push
or
dec
and
sbb
stos
and
gs
sarl
mov
xchg
add
int3
lods
jl
add
dec
cmp
jae
pushf
sahf
je
leave
xor
push
push
jle
and
jg
cmp
jo
enter
gs
xchg
ficompl
sub
ret
ss
movsb
mov
sub
loopne
sbb
ret
pop
js
xchg
lock
js
mov
cmp
lods
in
inc
push
jg
addb
fdivrl
scas
stos
xchg
les
xchg
push
cwtl
scas
lds
mov
and
sti
imul
or
push
sub
test
jp
outsl
mov
mov
push
sub
int3
mov
pushf
inc
sbb
ficoms
int
test
adc
inc
dec
pop
addr16
cmp
and
fmull
dec
mov
idivl
out
pop
pusha
pop
hlt
loope
pop
imul
das
inc
push
mov
ljmp
in
push
sahf
mov
outsl
dec
lahf
add
pop
mov
adc
cmp
mov
or
jb
inc
or
sbb
jp
mov
pop
mov
icebp
shlb
jg
lds
push
pusha
mov
sbb
inc
ss
xchg
cld
iret
or
cmp
int
fidivl
popf
fsubs
xlat
mov
mov
mov
es
test
pop
xchg
outsb
add
or
arpl
dec
aas
insb
ret
push
es
idivb
stc
xchg
mov
data16
mov
push
sub
outsb
jo
push
rorb
arpl
shrb
lret
add
pop
popf
hlt
adc
or
fsts
seto
shll
adc
sub
jg
mov
lock
and
add
icebp
inc
and
icebp
bound
push
jno
jne
mov
pop
adc
andb
jg
cmpsb
and
cmp
sub
nop
xor
xchg
and
jle
test
jl
xor
lds
lcall
repz
xor
jo
nop
mov
in
outsl
push
stos
jmp
xor
sub
inc
pop
rdtsc
int3
xor
jmp
rol
imul
mov
out
mov
dec
dec
and
inc
dec
xchg
stc
mov
ja
testl
fldenv
lock
dec
pop
rorl
mov
mov
jo
jg
inc
push
and
mov
arpl
imul
lcall
dec
test
sti
ret
dec
cmp
orl
dec
dec
lds
xchg
cmp
xor
xlat
cmp
es
sbb
aaa
add
mov
addl
lock
imul
dec
or
xor
mov
lock
daa
pop
inc
sub
push
or
adc
xlat
mov
xchg
mov
or
sbbb
roll
sub
pop
inc
dec
cmovne
lret
fstps
notl
xchg
data16
sub
adc
xor
sbb
js
pop
dec
test
aaa
jp
sub
imul
mov
adc
fsubs
repnz
pushf
jno
inc
xchg
dec
add
out
test
sbb
adc
cmp
shr
dec
pop
mov
pop
add
shll
dec
insb
mov
imul
xlat
cmc
jmp
sub
jbe
dec
cltd
fs
mov
or
add
sbbl
jle
jns
mov
loope
loope
jo
mov
sahf
lods
fdivr
push
in
mov
or
je
int
mov
lret
fwait
shl
xor
sbb
sti
mov
scas
xchg
imul
neg
mov
sbb
mov
ss
and
jno
sub
mov
push
addr16
mov
mov
loope
lds
das
push
and
and
adc
mov
sarl
sbb
fidivs
and
dec
scas
ja
cmp
dec
lcall
mov
fadd
jbe
outsl
mov
xchg
fdivr
std
push
jae
push
sbbl
aas
sub
iret
rorb
rcrl
jge
faddl
pushf
xor
dec
frstor
loopne
or
add
xchg
dec
xchg
or
das
cmc
jo
mov
jb,pt
push
or
je
enter
sbb
xchg
dec
movsb
dec
jge
cmpsl
lods
mov
mov
mov
lods
push
scas
outsb
dec
pop
pushf
inc
lret
dec
es
int
xchg
pop
xchg
dec
xrelease
pop
pop
fsubl
movsl
imul
jp
andb
daa
xor
out
pop
and
ljmp
mov
sub
aaa
cli
adc
inc
inc
in
xchg
js
pop
stos
sbb
outsl
xor
je
sbb
fs
or
sub
stc
sbbl
or
out
push
into
mov
mov
les
jle
push
push
and
test
xchg
test
in
fadd
xor
jbe
shl
cmp
xchg
xchg
dec
mov
or
dec
movb
stc
je
mov
jno
sahf
sub
mov
sahf
mov
cmpsl
punpckhwd
and
push
je
sbb
xor
loop
sbb
inc
mov
sbb
ret
cwtl
and
dec
lds
push
jo
out
int3
loopne
addr16
mov
push
or
push
fcmovnbe
mov
mov
xchg
cwtl
inc
mov
aaa
add
daa
mov
call
loopne
dec
mov
push
sub
mov
cld
dec
inc
mov
pop
fwait
inc
int
les
push
add
inc
fnsave
push
outsb
pop
shlb
adc
add
jp
icebp
test
sbb
push
xchg
mov
dec
insb
aas
mov
sub
out
int
inc
stos
jo
movsl
push
add
mov
icebp
cmp
call
mov
xor
xchg
in
imul
mov
jmp
cld
sub
jae
out
mov
ds
sub
push
and
push
aad
push
inc
stos
es
orb
icebp
repz
cmp
xchg
or
ret
jmp
xchg
jle
mov
fdivl
fsubrl
sbbb
shl
shl
or
fwait
or
dec
mov
neg
out
push
mov
lea
arpl
cmp
or
shrl
fldt
inc
and
pop
xchg
icebp
cmp
dec
cmp
mov
inc
negl
or
sahf
in
dec
mov
movsl
nop
push
outsl
xor
push
fsubr
aaa
cmp
jae
imul
jecxz
mov
cmp
cmpsb
mov
idivb
mov
jle
mov
fsub
sub
dec
or
stos
pop
mov
sti
sub
imul
jns
xor
lret
mov
aad
and
push
out
pop
popf
mov
aaa
loope
xchg
pop
mov
sahf
inc
pop
mov
jg
loopne
test
adc
notb
xchg
ret
lahf
jae
inc
repnz
loopne
push
hlt
add
aam
jns
jl
inc
ja
jmp
or
addr16
leave
pop
sbb
add
sti
orl
je
aas
outsb
lods
rcll
push
xor
cmp
jae
ljmp
and
mov
mov
mov
inc
xor
cld
leave
jle
add
stos
lods
dec
xchg
jne
jge
mov
test
mov
stos
rorb
es
insl
adc
cmp
xor
loope
and
sbb
fidivrs
mov
mov
jbe
lods
push
lret
ljmp
xor
inc
stos
aad
dec
scas
es
scas
in
in
shrl
xchg
xor
clc
cmp
pop
sbb
shl
mov
rclb
scas
shl
addr16
leave
jmp
xchg
sbb
inc
hlt
ja
and
jp
icebp
sbb
test
xchg
pusha
jne
cmp
jle
mov
shll
push
cmp
mov
cmp
and
dec
xchg
ficoms
xor
xchg
dec
sub
cmp
shrl
cmp
in
std
mov
mov
ror
rorl
or
or
jl
iret
lock
test
das
inc
jne
enter
ja
popa
lods
aas
shlb
out
fldl
jbe
sahf
js
mov
popf
sbb
data16
add
push
shrl
andl
lahf
std
pop
and
not
or
mov
inc
push
imul
ja
sub
test
add
enter
sbb
xor
cwtl
leave
ret
adc
hlt
lcall
lea
fldt
jmp
add
xchg
pop
ja
sub
fs
arpl
in
dec
or
push
mov
roll
dec
insl
pop
mov
sbb
jb
repnz
and
sub
fwait
ss
sbb
movsl
in
add
push
xlat
insl
test
lea
in
hlt
fwait
mov
jne
and
hlt
ds
jnp
dec
cmc
jge
push
out
sbb
and
flds
cmp
cmpsb
sbb
data16
adcl
jg
lahf
in
mov
pop
movsl
xor
aaa
push
lock
int
cs
push
mov
sbb
outsb
jmp
rdpmc
adc
xchg
fisubrs
push
bound
outsl
testl
adc
loop
dec
daa
addr16
or
testb
and
fcmovnb
adc
add
ror
in
and
push
inc
mov
lahf
cmp
jbe
or
icebp
js
cld
vcvtss2si
sbb
filds
lock
ss
push
sbb
inc
fstpl
xchg
adc
sbbb
dec
jmp
jbe
jle
in
loope,pn
data16
cwtl
gs
je
pop
cwtl
mov
add
leave
fcompl
sub
push
lret
push
int
fwait
movsb
mov
lods
jns
in
shl
dec
xchg
mov
pushf
cmpsb
xchg
sti
rcrb
and
xor
fwait
movsb
cwtl
add
fldenv
xchg
xor
insb
ret
pop
mov
mov
enter
lods
jle
aad
inc
add
dec
lods
sbb
stos
xor
imul
or
and
mov
cmc
mov
sub
jbe
int
pusha
aaa
xchg
pop
imul
sub
fistps
shrl
adc
xlat
ds
dec
push
out
and
jo
jne
aaa
xor
or
jo
into
lods
jg
add
mov
aad
cmpsb
rcr
push
push
pop
ds
and
dec
repz
dec
mov
ret
push
jbe
mov
cmp
xor
jb
sbb
pop
sbb
adc
mov
loop
adc
fdivl
das
cld
cltd
jo
fimuls
sbb
and
popf
pop
bound
inc
adc
addb
xchg
stos
sub
rcl
cmp
and
loope
dec
int
ret
out
cwtl
mov
mov
inc
sub
mov
xchg
mov
cmpsl
ja
lds
inc
inc
lods
add
lds
loop
ret
in
jnp
mov
lcall
push
add
xor
test
mov
out
call
jmp
inc
hlt
sub
in
es
jp
sti
push
dec
cmpsb
scas
inc
enter
push
or
xchg
dec
cmpsl
inc
sub
xor
fldl
pop
movsb
mov
ljmp
sub
add
push
cltd
punpckhdq
or
push
jno
adc
pusha
shr
fcomps
js
adc
sahf
push
xor
jp
daa
adc
imul
xchg
cmp
jne
push
sbb
dec
inc
or
xlat
aaa
add
mov
test
pop
xor
push
add
add
add
add
lock
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
ja
mov
jg
jg
imul
jb
je
arpl
loopne
add
push
pushl
call
push
mov
pushl
call
pushl
call
add
add
add
add
outsb
push
or
add
add
add
add
add
inc
add
add
enter
rolb
add
dec
pop
fsubrs
and
add
add
fs
outsb
add
fdivl
insb
in
leave
mov
or
clc
jecxz
sbb
insl
addl
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
lcall
xchg
rolb
push
add
pop
divl
mov
pop
addl
add
jge
sub
incl
add
add
add
push
lea
test
call
push
cmp
jns
popf
loopne
loopne
std
pop
add
incl
insl
outsb
add
enter
add
push
std
test
inc
dec
add
add
push
adc
or
add
hlt
inc
adc
add
add
add
add
add
add
inc
inc
insl
je
imul
mov
add
add
outsb
add
jns
lret
gs
gs
add
gs
js,pn
push
fmuls
push
insb
add
insb
add
outsl
insb
jne
outsb
gs
mov
je
insb
add
or
add
add
add
push
add
add
add
sar
sub
int
sub
ficoml
pushf
sar
ds
jne
and
into
adc
jns
inc
pop
sbb
jo
movsb
shll
insl
addr16
push
repz
push
in
jno
push
push
sbb
movsl
cmp
inc
dec
sub
and
push
cmpsl
imul
fwait
jg
xchg
fwait
scas
add
rcrb
xor
jge
aaa
push
aaa
and
stos
sub
jno
jns
cmp
test
ret
inc
adc
sub
ds
dec
add
outsl
push
andb
pop
jb
iret
xchg
mov
pop
cmp
pop
pinsrw
or
repnz
xchg
jle
dec
mov
testl
sub
or
jg
or
push
fiaddl
push
cld
test
cmp
pop
sub
ss
adc
inc
or
dec
roll
or
push
rolb
jbe
int
ds
adc
scas
xlat
out
jb
sbb
dec
xor
popl
add
call
int
pop
mov
fsubrl
cmp
cmp
mov
shlb
jge
fcomps
fbld
mov
test
fsubrl
mov
jbe
mov
cmp
inc
xor
mov
pop
cmpsl
mov
push
mov
ficoml
insl
icebp
and
sbb
lahf
out
fcompl
sub
push
dec
adc
cmpsl
push
test
xchg
inc
mov
call
inc
cmp
push
jne
aam
mov
addr16
inc
test
rcrb
or
pop
addl
inc
sti
and
mov
cwtl
and
mov
pop
mov
sarl
cli
ljmp
les
pop
dec
push
xor
or
divb
icebp
mov
add
push
loop
or
stos
ret
push
test
xchg
jno
enter
jl
xor
test
repz
movsl
inc
aad
add
out
push
mov
push
in
jecxz
dec
lock
sub
jg
mov
leave
xchg
mov
mov
imul
in
fisubrl
imul
xadd
popf
ljmp
cmp
shlw
packuswb
mov
sub
mov
mov
or
clc
sub
adc
fsubrl
in
test
mov
mov
aas
in
std
pop
inc
xchg
nop
pop
lcall
jge
into
jle
test
pop
pop
into
mov
pop
sbb
std
xchg
cmp
and
mov
push
fnstenv
push
xchg
mov
dec
ret
hlt
pop
xchg
lret
stos
cmp
add
jp
jecxz
pop
and
scas
in
inc
bound
scas
sbb
xchg
dec
push
or
movl
outsb
fs
aam
inc
mov
mov
add
mov
lahf
fisubrs
cmc
das
lea
push
adc
xchg
jl
jg
xchg
out
add
sbb
mov
cmp
outsl
fisubl
add
or
adcl
fwait
data16
push
call
inc
iret
aas
mov
mov
dec
jecxz
dec
pop
or
not
jns
push
inc
arpl
je
das
repnz
lret
into
test
addr16
push
jno
popf
in
mov
xchg
sbb
mov
push
js
mov
cmp
imul
xchg
and
lds
repz
pop
rolb
repz
test
mov
pop
jge
in
mov
add
movsl
loop
cmp
je
cmp
mov
push
or
sbb
cld
lods
mov
xor
push
xlat
lods
pop
mov
mov
nop
aam
ljmp
inc
inc
and
popa
xor
xchg
xchg
cltd
movsb
mov
imul
in
ret
push
outsb
cltd
mov
lods
loop
test
cmpsb
mov
jmp
xor
jecxz
and
arpl
jp
stc
mov
ljmp
repnz
push
jo
lea
lea
out
cmp
mov
sti
dec
lods
int
ret
ficomps
leave
std
push
inc
sbb
sub
pushf
lods
int
out
out
push
rorl
pop
jp
popf
shr
mov
sub
mov
icebp
popa
dec
negb
or
and
scas
fstpt
js
pop
sarb
pop
dec
jne
cli
xorb
fldcw
repnz
sar
fists
jle
xchg
add
cmp
pop
push
pop
xchg
outsb
lods
push
daa
xchg
xchg
bound
push
mov
outsb
mov
mov
fwait
sub
inc
inc
cli
insl
jno
xor
mov
jp
push
lahf
test
addb
jne
pusha
cmp
pop
cld
jae
pop
lods
or
adc
icebp
xor
jo
test
dec
frstor
or
negl
dec
imul
loop
inc
loope
and
insl
pusha
lcall
inc
dec
loopne
leave
test
add
mov
push
mov
mov
outsl
mov
shrb
ja
sbb
mov
pop
shll
pop
hlt
rcrl
aaa
bnd
rcll
fisubl
cmpsb
or
xchg
dec
pop
inc
cmp
cmpl
rcl
les
imul
in
repz
push
or
cld
call
mov
sarb
es
adc
pop
sbb
bound
in
add
adc
cmp
stc
add
in
push
je
adc
jecxz
divb
jg
mov
clc
pop
jbe
dec
pusha
jge
pop
ds
pop
flds
loopne
or
xchg
add
xchg
xchg
sbb
mov
adc
cmp
ret
test
pushl
xor
jge
js
mov
pop
dec
loopne
int
in
adc
cmp
mov
rclb
mov
sub
sbb
cmp
push
lods
lock
cmp
adc
mov
mov
cmp
out
xor
dec
popf
roll
int3
out
outsb
pop
sub
dec
data16
cmp
mov
les
and
mov
cmpsl
into
hlt
or
sub
bound
or
xchg
push
inc
pop
stos
out
mov
push
or
jae
inc
add
icebp
sbb
pop
leave
mov
push
pop
cmp
das
jecxz
cld
xchg
aas
cs
pop
mov
mov
push
fld
shlb
loope
rol
leave
fdivrp
stos
push
lods
mov
lret
out
sub
mov
insb
dec
and
cmp
cli
inc
add
mov
in
pop
push
mov
adc
xor
sahf
mov
aas
xchg
movsb
mov
aam
add
js
popf
stos
inc
push
adc
aaa
int3
mov
jl
cmpl
inc
les
push
lret
movsl
pop
pop
scas
mov
dec
lods
rcrl
mov
stos
ds
push
push
mov
mov
into
or
jns
add
inc
lret
mov
adc
scas
cwtl
mov
jne
xor
add
pop
mov
cli
loop
fidivrs
xlat
inc
aas
fbld
mov
mov
jbe
fildl
scas
cmp
xchg
lods
jne
adc
sbb
insb
xor
pop
das
addl
push
repnz
push
je
xchg
cmpsb
popa
movsl
lock
dec
add
jecxz
hlt
mov
dec
nop
test
nop
push
pop
das
and
shll
jbe
std
add
lock
mov
jo
pop
lds
test
ficoms
adc
jb
or
movsl
mov
dec
repz
xchg
int
outsb
call
adc
out
sub
inc
push
ljmp
mov
pusha
mov
sbb
dec
adc
addr16
cmp
dec
mov
dec
dec
mov
test
fs
xchg
out
sub
test
mov
xchg
test
icebp
inc
jl
rcll
dec
in
test
out
in
cmpsb
dec
lahf
stos
and
cmpsl
jg
pushf
out
roll
jae
mov
les
loope
add
push
aas
andl
lds
leave
les
cmp
divb
aaa
sub
adc
sbb
xchg
subl
sub
insb
cld
jo
xor
aad
inc
iret
jo
xor
inc
sub
push
add
idiv
jg
inc
aad
or
repz
mov
ljmp
add
cmpl
shlb
ret
movsb
pop
andl
sbb
mov
dec
sar
xchg
insl
test
dec
fwait
arpl
and
into
lock
outsb
inc
push
cmp
dec
xor
push
test
push
in
add
jne
add
aas
mov
loop
or
cltd
outsl
pop
lods
push
and
icebp
pop
adc
sub
js
mov
popl
xchg
jno
shll
mov
lahf
jp
dec
fwait
and
dec
mov
mov
pop
sub
cltd
pop
cmp
aas
lds
pop
aad
out
int3
dec
push
mov
sbb
dec
dec
jbe
mov
sbb
fwait
lea
push
xor
pusha
pop
dec
dec
or
adc
inc
mov
stos
xchg
in
and
lcall
test
sub
daa
lahf
out
popa
arpl
dec
cli
out
scas
or
jle,pn
movsl
scas
outsl
scas
icebp
enter
mov
or
test
sbb
jns
ss
scas
scas
mov
idiv
and
cltd
js
push
mov
outsl
mov
shrb
add
xchg
cmp
clc
dec
dec
scas
lcall
jmp
push
inc
out
ljmp
lret
xchg
sub
jp
bound
mov
xchg
jl
js
adc
bound
jb
jno
pop
fistpll
jbe,pt
pop
scas
jbe
xchg
add
incl
xor
cli
add
or
jo
add
or
popf
ret
or
sahf
jmp
mov
movsl
dec
xor
and
inc
xor
mov
aas
jae
jae
shll
cli
add
and
push
inc
enter
dec
lret
or
ljmp
out
cmp
and
jmp
loopne
movsb
and
sub
adc
into
sbb
push
and
xlat
sub
xlat
adc
pop
fs
and
dec
sbb
mov
inc
test
mov
lock
in
or
or
sub
jmp
test
test
add
cmp
add
and
push
xor
sbbb
daa
inc
jl
outsb
addr16
jns
push
dec
cmp
pop
cmp
mov
pop
xorb
outsl
xor
cltd
and
inc
lahf
and
mov
push
outsl
and
mov
jno
and
icebp
jp
or
movsl
iret
xor
add
paddsb
cmp
mov
cmp
es
inc
pop
xchg
jo
fwait
jmp
or
add
inc
mov
clc
ret
in
add
mov
jo
lock
and
es
mov
cmc
das
pop
sbb
mov
sti
push
inc
adc
mov
push
cmp
inc
lds
popf
sbb
xchg
xor
nop
dec
mov
inc
leave
push
mov
leave
mov
or
testb
js
cli
addr16
sub
xchg
les
nop
mov
mov
inc
dec
loop
wrmsr
loop
test
jno
adc
fstpt
and
icebp
add
mov
popa
adc
call
jo
out
mov
test
cmpsl
dec
pop
xchg
fmul
gs
dec
cmc
pavgb
push
in
xor
mov
into
or
and
xor
mov
faddl
pop
lods
xor
stos
lfence
test
rcrb
ss
bnd
jp
insl
cwtl
sahf
test
fs
jmp
shrl
pop
js
cmp
les
insl
add
test
inc
and
jne
add
in
inc
add
adc
and
je
mov
mov
outsb
jmp
aas
or
cmp
scas
cmp
and
mov
xchg
sbb
xchg
lds
scas
jl
sbb
push
dec
movsl
dec
stc
jl
pusha
icebp
fdivrs
cmp
sbb
adc
loope
ds
enter
jno
sti
mov
sub
sahf
pop
jl
xor
xchg
cmp
insb
xorl
sbb
sti
cmp
jbe
cmp
mov
sbb
jbe
lods
or
jnp
jnp
js
nop
test
testl
shrl
xchg
mull
sbbb
in
dec
fistl
fisttps
into
add
cmp
in
push
jno
arpl
add
mov
js
addr16
mov
popa
cmc
xlat
xchg
int
cli
mov
and
jo
push
lahf
xor
jp
sahf
lock
fs
sbb
js
jmp
lea
jg
icebp
sbb
repnz
pop
fstl
jbe
inc
and
ljmp
inc
sub
loopne
stos
aad
xor
adc
cltd
repz
cmc
sub
sub
pop
mov
mov
jns
xor
pusha
mov
negb
imul
aaa
scas
imul
jmp
test
lahf
inc
mov
rorb
dec
xchg
ret
mov
sahf
fisttps
xchg
push
mov
mov
rorb
push
xor
pusha
and
cmp
sub
mov
jb
mov
fisttps
cld
insb
push
js
imul
inc
mov
sbb
cmpb
jb
fmuls
cmp
sub
arpl
cli
enter
sub
dec
mov
push
push
dec
pop
test
cmc
rcll
cmp
in
hlt
add
xor
cltd
jl,pt
pop
mov
sbb
mov
in
scas
stos
int3
lods
iret
pushf
std
mov
jne
push
xchg
lret
les
pusha
mov
idivb
loope
daa
jb
mov
jb
rolb
movb
lret
popa
leave
dec
sti
cwtl
pushf
int
adcl
cltd
sub
dec
fsubrs
pop
loopne
loopne
push
xor
in
fdivrl
shll
sub
cmpsl
adc
pop
add
mov
jmp
int3
xchg
ret
fisubl
cmp
and
popa
stc
aaa
in
stos
mov
inc
jne
push
mov
jle
out
xchg
scas
pslld
add
dec
inc
ljmp
aam
insb
add
ds
cmp
std
dec
shrl
sbb
xor
in
js
fisttpll
es
repz
mov
push
mov
ret
stos
mov
push
enter
int
add
xor
sbb
lea
xchg
in
pop
out
inc
mov
jmp
inc
sti
mov
aam
jmp
push
inc
daa
pop
and
pop
mov
fcmovu
inc
dec
mov
ds
dec
clc
cmpsb
pop
ljmp
pop
pop
adc
lea
xchg
les
xorl
movntq
add
jmp
pop
aaa
cli
mov
cltd
lock
xor
sub
mov
mov
cli
xchg
pop
push
pop
fldcw
dec
out
xchg
mov
dec
dec
push
sbb
xor
rclb
dec
ret
jbe
in
mov
dec
dec
sub
xchg
mov
pop
push
cmc
dec
add
push
mov
mov
adcl
mov
divl
jle
fwait
or
sub
sub
mov
test
xchg
sub
xor
movsb
or
inc
jns
or
inc
ja
test
pop
cmc
stos
cmpsb
jecxz
cs
fidivs
mov
scas
je
mov
fsts
jns
or
xor
icebp
insl
movsl
dec
sub
mov
lock
jb
push
rcll
sbb
cmpsl
ret
imul
inc
inc
lods
scas
dec
add
jge
sbb
xlat
mov
ss
sbbl
inc
and
nop
xchg
jo
ss
je
jno
scas
mov
pop
in
sahf
and
mov
dec
out
jbe
dec
jne
pop
dec
insb
sti
jno
sbbl
outsl
or
and
lcall
mov
push
ds
xchg
xchg
popf
cwtl
sub
sub
jecxz
cmp
mov
cmpsl
jnp
ret
sbb
pop
insb
ds
fwait
pop
xlat
xchg
add
xor
sbb
aaa
aas
leave
or
adc
pop
mov
bound
sub
push
mul
sub
sub
cmp
addr16
pop
dec
fimuls
ds
adc
inc
sbbl
fdivp
inc
cmc
cmc
shrl
es
fucomi
cwtl
mov
xchg
xor
mov
push
ret
inc
or
xchg
xor
dec
addr16
mov
mov
push
js
add
pop
pop
mov
add
push
enter
push
xchg
movsl
pop
pop
ret
in
cs
loope
popf
into
push
mov
cmpsl
cmp
cmp
out
subb
mov
pop
push
jo
leave
push
add
inc
clc
push
or
cs
aaa
add
jb
inc
pop
dec
shrl
inc
xor
mov
pop
and
xchg
and
and
and
pop
mov
pop
shlb
jmp
std
xchg
ja
inc
mov
and
iret
inc
or
push
add
sahf
ja
out
out
out
fs
xor
push
push
xlat
xor
divb
push
pop
fcmovbe
scas
dec
inc
mov
push
mov
add
enter
out
xchg
cmpsl
fisttpll
and
outsl
lcall
data16
pop
clc
jge
outsl
call
dec
jo
jle
adc
int
sbb
inc
push
rolb
addr16
cmp
cmc
or
sti
dec
jle
mov
roll
hlt
inc
je
out
repnz
cmpl
jmp
lcall
and
stos
inc
sub
ljmp
inc
fst
cmpsl
dec
addr16
xor
xor
scas
bound
mov
or
cmpl
jge
fs
add
jbe
jns
xlat
scas
xor
push
push
inc
pop
out
int3
sub
leave
stc
test
aaa
add
stos
mov
cmc
rorl
js
xchg
mov
sarb
pop
movb
push
xor
fucomi
fucomp
out
add
imul
ljmp
punpckhbw
jl
aam
jb
ret
je
push
mov
adc
dec
cltd
stos
rol
fwait
repnz
cmp
mov
fsubl
in
ljmp
jmp
std
fucomp
imul
jbe
sub
in
xchg
dec
int
lods
fidivrl
dec
mov
repnz
mov
xchg
mov
movntq
push
push
je
call
xor
lock
stos
mov
jle
or
test
pop
ret
pop
out
mov
mov
dec
loopne
xor
sbb
xchg
adc
ljmp
stc
cmp
pop
and
insl
push
loope
insl
fsubrs
and
ret
out
add
mov
sbb
add
add
clc
js
add
add
add
add
add
add
leave
pop
add
add
add
add
add
add
add
add
pop
test
add
add
add
add
addb
add
add
cmp
jo
jo
jo
jo
dec
cmp
add
and
je
insl
and
les
cmpsl
add
add
add
add
add
add
add
sbb
add
add
add
add
cs
add
add
or
mov
cs
add
add
lcall
sub
clc
xor
add
and
mov
jae
inc
inc
and
push
ja
mov
inc
stc
add
add
xor
push
jmp
fadds
inc
pushl
xchg
push
ret
cmp
js
decl
test
cld
jmp
test
lea
push
xor
in
jno
jl
cmp
add
adc
popf
push
cld
repz
movl
push
or
adc
xor
rolb
std
test
adc
incl
jmp
jl
test
std
sar
xor
cld
shlb
push
aaa
loopne
lock
adc
test
add
pushl
rorb
jo
dec
clc
push
clc
push
add
add
push
adc
mov
and
je
add
add
add
add
add
cmp
cmp
out
mov
xor
jbe
inc
jo
insb
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
out
imul
imul
lret
insb
imul
jae
cmp
jne
push
insb
xor
gs
jne
inc
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
add
add
add
fadds
add
add
add
add
sub
add
add
add
add
add
add
add
add
jp
jge
out
dec
and
outsl
cmp
fisubs
mov
dec
scas
jbe
cmpsl
ret
xchg
mov
sar
nop
adc
stos
lods
cmp
notb
push
insl
xchg
adcl
pop
pop
fbld
lods
xor
mov
mov
loopne
je
cmp
and
jge
idiv
loopne
fnstenv
icebp
jae
adc
dec
out
repz
fwait
ret
jno
mov
cmp
cmp
mov
cmp
nop
adc
pop
mov
xor
pushf
sbb
nop
mov
jp
ja
push
adc
es
mov
rclb
and
les
push
mov
test
jb
les
and
orb
sarl
or
repz
lods
xchg
loop
cmp
adc
rolb
repz
add
mov
jo
mov
mov
jecxz
fincstp
lahf
lea
cld
outsb
pop
iret
add
mov
out
daa
cmpsb
or
popf
int3
scas
aaa
subb
and
mov
popa
cld
xorl
sub
pop
outsb
arpl
pop
xor
fisttpl
cld
jge
gs
sbb
fldl
xchg
jb
enter
cmp
add
cmpsb
mov
adc
lods
addr16
dec
repnz
push
js
mov
call
lret
nop
loope
lret
lret
cmp
insb
inc
inc
lods
mov
jecxz
stos
stos
ffree
fiadds
mov
pop
cli
cmp
jmp
lahf
sbbl
arpl
sahf
adc
jle
sub
or
loopne
pop
enter
into
and
xchg
cld
jle
jmp
lods
cmp
test
cwtl
xor
dec
andl
mov
daa
xor
and
jge
jno
or
and
subl
jmp
fildl
jmp
or
jmp
jns
icebp
xchg
cmp
and
ret
dec
cmpl
mov
cmp
or
sub
push
jl
xor
outsl
repnz
xchg
cmp
es
lret
pop
dec
lcall
xchg
in
pop
mov
das
mov
and
stos
scas
mov
adc
fdivrs
rolb
test
adc
bound
or
push
dec
test
test
fcompl
test
or
pop
leave
inc
sbb
movsl
cmpsl
dec
pop
and
sub
fldcw
rcrl
jae
cs
cmpl
repnz
ja
sbb
cld
adc
sbb
insb
mov
lret
add
in
lds
ret
inc
mov
lret
notl
inc
lods
jmp
enter
aaa
mov
movsb
add
mov
sub
icebp
push
mov
aaa
jno
jo
std
xor
inc
in
adc
stos
lock
dec
cmp
mov
mov
xchg
rcr
add
mov
fs
shrl
inc
xchg
xchg
hlt
daa
insb
add
jp
rcrb
or
popa
aam
movsb
jge
xchg
fnsave
insb
mov
insl
xor
das
ds
fsubr
add
lods
loopne
shlb
inc
push
jne
repnz
mov
pop
into
incb
jne
push
add
insl
cmp
mov
rolb
js
or
fisubrl
outsb
fidivl
jbe
and
add
es
cmp
je
sbb
iret
dec
out
sub
cmc
ret
mov
out
jo
mov
jge
jne
mov
popa
mov
jle
int
pop
dec
xor
sub
jp
inc
adc
push
clc
jae
mov
cmp
xchg
or
std
stos
cmp
aas
stos
pop
popf
cld
xchg
leave
enter
mov
mov
adc
cmp
pop
and
jle
adc
testl
aam
rcl
add
add
pop
cmp
jg
cmpsl
sbb
sub
sar
sub
push
adc
cld
sbb
movsb
jl
lds
sahf
icebp
fwait
adcl
mov
adc
push
push
push
xlat
and
jle
movb
pop
push
imul
lcall
pop
lods
inc
or
inc
lea
mov
inc
cli
xchg
repz
sti
in
adc
push
push
jb
lcall
outsb
sub
mov
sbb
jmp
cmp
mov
rcrb
lods
sub
cmpsl
dec
push
jne
cmp
pop
fwait
dec
cmpsl
and
fimull
or
insb
mov
scas
clc
push
pop
push
dec
aas
pop
into
inc
or
push
sbb
loopne
add
in
js
sbb
or
movsb
lret
lock
pushf
push
adc
inc
cvtpi2ps
cmp
arpl
and
xor
daa
sbb
arpl
pop
imul
mov
push
jb
cmp
pop
jns
xchg
cmp
sbb
lret
xchg
int
xor
or
icebp
mov
movsb
pop
enter
pop
mov
xchg
adc
dec
pop
add
adc
dec
sub
sbb
pop
push
adc
or
scas
pop
rcll
int
test
and
aaa
mov
js
movsb
std
mov
stc
pop
and
push
jp
and
inc
movsb
cltd
fwait
sbb
test
push
add
arpl
std
mov
jecxz
int
jp
lds
cmpl
sub
cmp
and
dec
and
push
pop
ret
fisubl
int
aad
sahf
pop
pusha
call
add
lock
xchg
dec
cmp
test
adc
jmp
sbb
lret
mov
mov
out
add
adc
sbb
and
mov
sub
imul
pop
adc
dec
cmc
cmp
jnp
dec
inc
xchg
jbe
pop
push
test
jae
push
addl
stos
test
sub
mov
push
xchg
mov
cmp
xchg
fildll
xor
dec
ds
test
subb
fldt
in
jno
sub
mov
repz
cmpsl
movsb
leave
lea
lret
adc
or
imull
fistl
mov
cmp
bound
in
mov
push
cwtl
pop
sar
sbb
aam
pop
lods
dec
inc
sub
jg
test
nop
test
popf
add
sub
repnz
daa
mov
adc
cmpl
and
push
add
push
mov
mov
add
les
out
stos
mov
mov
clc
loop
sub
xor
mov
sti
ficompl
dec
xor
addl
sahf
push
inc
pop
dec
lret
cmp
jl
xchg
pop
push
mov
lcall
ret
adc
jb
xlat
mov
andl
test
adc
push
lods
outsb
push
fistl
mov
push
jmp
mov
shl
in
ljmp
pop
xor
jo
sbb
repnz
push
pop
test
adc
aam
and
mov
mov
mov
xor
fldcw
mov
pop
cmp
popf
xchg
or
mov
sahf
dec
adc
pop
adc
mov
xchg
es
in
pop
mov
push
sbb
jno,pt
mov
add
mov
ss
and
outsb
mov
cmp
mulb
jle
sub
pushf
daa
popf
loop
jbe
cltd
cmpsl
adc
sbb
dec
push
ds
cmpsl
lcall
addr16
cmp
jle
dec
push
sub
lahf
sub
mov
int
out
outsl
sar
jnp
test
mov
dec
mov
andb
ss
aad
loope
lcall
imul
adc
imul
inc
push
xchg
pop
pushf
mov
imul
pushf
mov
mov
hlt
imul
push
mov
pop
bound
sub
inc
mov
or
xor
insb
scas
call
jg
loop
or
inc
jo
pop
cmc
dec
mov
in
cmpsl
adc
inc
xor
out
cmp
js
jno
jne
push
les
or
push
frstor
or
push
repnz
push
jg
sbb
adc
sbb
sub
pusha
xor
cmc
dec
and
imulb
data16
jo
dec
out
mov
inc
mov
cmp
pop
mov
fstpt
fmuls
cmp
inc
sub
push
xor
adc
data16
test
sarb
xor
cli
xchg
ljmp
ljmp
jbe
mov
aam
outsb
pop
int3
sarl
push
mov
outsb
xor
fnstcw
out
in
call
cs
jno
mov
xor
cmp
stos
jnp
out
fldenv
adc
aaa
xchg
dec
pop
aad
fidivl
or
add
push
mov
repz
cmpsb
leave
cmp
pop
xchg
adc
cli
and
jno
outsb
cmp
pop
sbb
jl
xchg
lods
add
ja
pop
jb
lahf
out
fwait
cmp
jmp
es
cmp
outsl
testb
xchg
jmp
jne
add
jae
fmul
daa
test
push
iret
adc
mov
push
mov
dec
pop
rcr
jae
dec
stos
add
xchg
neg
rcr
bound
xchg
pop
popa
fwait
loopne
xchg
or
cmpsb
bound
sbb
cmp
jmp
push
mov
adc
jne
sbbl
jbe
pop
inc
inc
repnz
pop
or
or
fcmove
addr16
mov
xchg
cmp
lret
and
pop
pop
mov
int
ljmp
cmpb
loopne
stos
xchg
sub
push
sarb
nop
xor
fdiv
pop
mov
mov
shl
dec
repnz
pop
es
cmp
inc
inc
orb
add
dec
push
pushl
inc
outsb
les
inc
shrb
mov
dec
loope
faddp
cmc
inc
mov
sub
add
imull
pop
jno
mov
inc
outsb
loope
popa
sti
sub
insb
pop
cs
lret
mov
repz
adc
jg
cmp
fsubrs
imul
stc
push
cmpsl
outsb
lock
dec
push
sbb
mov
and
push
mov
pushf
push
inc
jl
dec
aad
push
subl
imul
and
xchg
sub
test
popa
dec
xchg
iret
mov
jno
insl
push
pop
in
push
xchg
lret
out
mov
test
enter
jo
sbb
lret
push
enter
inc
lea
push
fld
data16
incl
out
adc
cmp
pop
xchg
jae
cmp
cmpsl
sbb
dec
orl
mov
xchg
popa
shll
dec
dec
cmp
or
dec
push
lret
mov
in
lods
mov
xchg
sahf
sub
jb
mov
jle
push
pop
movq
bound
stc
int3
ret
jne
andb
xlat
push
jle
imul
and
in
sbb
les
xor
call
imul
sbb
rcll
in
or
cmp
dec
cmc
movsl
mov
out
mov
jge
rorl
lahf
in
icebp
mov
loop
jmp
addl
adc
mov
jl
into
cmpsl
mov
lock
ret
cmp
int
out
shlb
std
mov
outsb
mov
cltd
push
dec
sub
ja
jns
mov
xor
jmp
xor
mov
adc
sub
add
pop
push
shll
xor
lret
bound
xor
adc
xor
push
pushf
insl
fsts
push
std
jb
shl
mov
push
sarb
int
pop
loop
pop
frstor
insl
repnz
add
pop
outsl
lret
dec
push
push
push
hlt
out
add
cld
data16
jmp
or
push
mov
inc
adc
push
cmp
iret
loop
inc
cwtl
adc
push
test
pop
adc
mov
jmp
test
jp
stc
addr16
pop
gs
mov
cld
pop
add
pop
loop
lahf
dec
cs
cmp
cs
lds
mov
ud1
loope
notl
lahf
aam
jge
imul
dec
mov
js
add
xchg
xchg
lods
leave
mov
jnp
sbb
shll
adc
lods
fmull
xor
repnz
popa
leave
or
jl
dec
and
add
fidivs
sbb
inc
cmpsb
mov
gs
push
sub
cmc
jb
jle
or
lods
cwtl
roll
push
and
mov
add
mov
repz
and
imul
lock
in
or
sbb
test
xor
and
sub
cmp
inc
sti
icebp
pop
dec
loop
mov
out
das
mov
loopne
add
add
in
xchg
fildll
das
add
das
ss
mov
ja
fcompl
std
xchg
sub
popa
cmp
xor
lods
push
repz
arpl
sbb
gs
outsl
sbb
jmp
std
jp
xchg
in
and
roll
push
test
ret
add
jns
fisubrl
xlat
lret
add
lds
int
inc
add
bound
xchg
jp
cltd
sub
cs
pop
push
jl
xchg
dec
out
jmp
ror
cltd
inc
outsb
ficoml
cmp
or
addr16
add
data16
lock
push
push
shr
pop
sub
mov
dec
cwtl
out
and
lcall
shlb
sbb
ljmp
jmp
push
f2xm1
fistps
pusha
shrl
fisttpll
aad
outsb
sub
xlat
orl
aaa
das
adc
mov
lock
fstp
and
shll
aad
inc
aaa
loop
daa
stc
xchg
push
lret
aas
fs
and
pop
xor
or
out
mov
pop
pop
mov
dec
out
adcl
ret
jle
jmp
pop
mov
mov
scas
mov
out
mov
sti
cli
inc
test
dec
xchg
cld
push
mov
dec
add
mov
ds
daa
adc
xchg
and
addb
sbb
push
add
outsb
push
out
dec
or
popf
sub
stos
and
pop
dec
push
filds
ljmp
jmp
push
mov
aam
lea
push
enter
xor
in
cmpsb
movsb
test
lods
cmp
jge
cli
daa
jl
xchg
push
add
insb
aaa
cmp
mov
inc
shll
imul
xlat
sub
repz
jnp
cmp
and
in
cmp
jle
mov
xor
add
arpl
sub
mov
fidivs
add
dec
jmp
dec
rorb
lock
cli
inc
dec
pop
pop
pop
es
dec
pop
loope
push
outsl
mov
push
loop
movsb
test
dec
aaa
and
jle
imul
stc
cld
xchg
push
ljmp
adc
cmp
and
xlat
jge
js
adc
mov
jno
xor
pop
test
popa
mov
aaa
lea
mov
jb
push
outsb
rclb
cmp
dec
test
lock
dec
mov
aaa
fwait
lcall
mov
or
pushf
ljmp
add
repz
inc
mov
in
out
sub
jg
pop
adc
std
insb
int3
lods
mov
das
xor
stos
sbb
lods
rorb
mov
aaa
sbb
sbb
jl
jmp
push
inc
xchg
movsb
push
sbb
cmpsl
xchg
jo
xor
mov
mov
scas
mov
add
jbe
mov
dec
outsb
and
bound
lret
sbb
sub
jb
push
pushf
sbb
rorb
insb
xchg
push
cltd
fstps
repnz
jns
pop
sarb
push
dec
and
jl
cmpsb
cld
dec
mov
jg
stc
pop
inc
cltd
mov
popf
mov
lahf
mov
ret
out
dec
sbb
movsl
imul
std
dec
loope
jp
mov
jge
fstl
outsb
scas
pusha
sbb
push
add
cmp
leave
sarb
mov
mov
mov
lcall
sbb
fisubrs
aam
sub
into
mov
idiv
stc
sbb
or
aad
aas
es
lcall
sbb
inc
test
sub
jbe
mov
push
dec
or
popa
pop
lcall
mov
ret
mov
fists
lods
scas
outsb
test
pushf
mov
push
mov
mov
mov
and
dec
mov
mov
push
jo
cmpsl
add
or
mov
test
adc
sti
pop
jne
adc
lahf
in
mov
push
xchg
push
leave
iret
lret
mov
pop
mov
inc
mov
dec
mov
scas
adc
cmpsl
mov
fstpt
call
and
pop
mov
pop
shl
sub
jl
mov
fldl
adc
mov
out
sbb
adc
lret
daa
ds
adc
push
jb
les
out
inc
negb
maskmovq
js
push
inc
scas
and
pop
popf
lods
int
fs
add
pmuludq
lods
jle
adc
leave
pop
jnp
sub
push
mov
cmpsl
repnz
cmp
cmp
dec
inc
pop
pop
lods
insl
arpl
push
cmp
mov
mov
lahf
ret
ss
sbb
cmp
imul
and
jbe
mov
fnstsw
rcrb
mov
mov
pop
aad
ss
inc
das
fldl
and
pop
and
in
inc
mov
imul
int3
jns
mov
and
pop
xchg
sti
or
add
dec
mov
popf
fcom
inc
jbe
arpl
mov
das
inc
push
sbb
xor
cmpsl
cvtps2pd
cmp
pop
in
mov
cli
scas
adc
mov
push
adc
or
loopne
push
cltd
pushf
mov
pop
sub
adc
insb
push
mov
stc
pop
jg
pop
sbb
pop
mov
mov
cmp
popa
push
enter
dec
pop
jae
xchg
dec
insl
push
dec
add
movsl
fisubrs
sarl
mov
or
pop
bound
stc
shl
pop
pop
xor
loope
mov
push
test
std
out
aam
inc
mov
leave
ret
in
mov
xchg
push
mov
dec
xor
or
gs
aaa
mov
mov
popa
mov
iret
dec
jns
icebp
xor
imulb
dec
movl
cmp
push
jp
mov
xor
pop
scas
test
xor
cmp
push
ljmp
pop
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
pushf
cwtl
add
add
push
adc
add
add
add
add
add
add
add
add
add
sbb
add
xor
sbb
push
in
in
inc
add
adc
add
ljmp
ja
mov
movsb
js
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
add
adc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
call
add
in
add
in
add
add
aam
add
int3
add
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
xlat
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
fadds
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
fadds
add
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
fiaddl
add
add
xchg
fiaddl
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcomp
add
loopne
add
in
fiaddl
add
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
fildl
add
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
faddl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
