jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
adc
adc
xchg
xor
mov
add
push
add
pop
or
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
xor
or
mov
add
add
lcall
add
add
inc
add
aam
nop
add
add
add
add
adc
add
add
add
test
aas
add
add
flds
mov
lret
add
mov
add
pop
add
and
add
push
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
flds
mov
lret
add
mov
add
add
pop
add
add
add
mov
add
pop
add
add
add
add
incb
mov
jo
add
imul
pop
add
add
push
add
add
mov
mov
add
sbb
add
mov
add
bound
xor
mov
add
add
push
or
cmp
in
fldl
jecxz
mov
add
add
add
add
add
pop
add
add
and
add
xchg
jmp
jl
movb
add
popa
add
add
add
add
add
pop
add
add
roll
fwait
add
add
add
movb
add
fldl
mov
add
xchg
add
add
add
lcall
add
add
fldl
pop
add
add
add
inc
add
add
or
sub
fldl
add
add
add
add
add
add
je
sub
adc
fldl
jecxz
mov
add
movsl
add
add
add
add
insl
add
add
add
add
add
add
inc
add
inc
add
add
add
add
imul
out
add
add
add
sub
cmp
pop
add
mov
add
add
xchg
adc
adc
add
add
add
add
add
add
add
add
sbb
roll
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
les
xor
mov
add
add
fildl
pop
add
add
add
add
add
leave
add
add
mov
add
add
add
add
add
add
mov
les
mov
add
adc
add
add
adc
add
fldl
pusha
add
add
add
xor
mov
add
add
add
add
add
add
add
add
add
jo
add
add
or
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
incl
push
mov
xchg
outsb
scas
cmp
ret
fistl
mov
adc
aas
jmp
fcmovne
and
mov
nopl
pop
xor
jmp
repz
ret
aam
xorl
test
mov
cld
adc
jae
outsb
push
test
pop
pusha
mov
sbb
lock
aaa
and
test
adc
mov
dec
dec
orl
mov
jnp
dec
dec
sub
je
pop
stc
mov
push
jmp
test
cwtl
push
mov
arpl
pushf
dec
enter
out
mov
mov
jno
mov
outsb
enter
add
mov
inc
sbb
pop
inc
inc
frstor
gs
gs
imull
out
in
fcom
mov
cmc
xchg
inc
push
inc
xchg
xchg
mov
js
jmp
das
add
jns
loopne
rcrl
push
add
ficomps
stc
sbb
mov
add
cmp
lods
icebp
mov
inc
xor
inc
cvtps2pi
addb
xchg
fimull
adc
lea
inc
test
mov
inc
and
mov
mov
pop
subb
xor
jmp
incb
cltd
mov
or
std
mov
je
pop
dec
push
div
jmp
xchg
in
xchg
or
xchg
je
clc
push
mov
push
repz
int3
xor
jno
push
cmpsb
into
jne
xchg
lods
mov
inc
mov
stos
test
loopnew
inc
xchg
imul
pop
jge
inc
shlb
mov
fneni(8087
jae
cmc
in
popa
cmpb
adc
outsl
inc
cmp
mov
fsub
mov
push
orl
pop
push
mov
jne
imul
xor
jae
xchg
adc
ljmp
cmp
pop
dec
mov
cmpsl
fwait
xor
cmpsl
mov
cmc
cmp
jo
stos
shll
pop
mov
rcrl
aad
xchg
mov
popa
and
rcrb
pop
mov
test
push
imul
add
add
cmp
stos
out
stc
mov
mov
pop
outsl
mov
dec
out
pushw
cmp
addr16
sub
dec
mov
lods
sbb
addr16
inc
inc
mov
mov
jmp
jne
ss
imul
xchg
ljmp
sub
jno
cmp
xlat
mov
dec
mov
cmp
push
sbbl
jge
pop
pop
xchg
inc
nop
add
mov
pop
popf
jnp
shll
adc
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
imul
loop
fisttps
gs
and
sar
ret
stos
xchg
mov
mov
dec
jb
bound
adc
mov
xor
push
jmp
sti
loop
repnz
imul
orb
jnp
dec
ficompl
sub
cmp
or
sbb
jmp
fsubs
stos
inc
cmc
mov
dec
pop
aaa
aaa
loop
mov
add
jecxz
mov
xor
inc
xor
mov
lahf
cld
and
lock
pop
sub
cmc
jb
pusha
push
idivl
xor
and
push
xchg
mov
das
cmp
inc
dec
push
dec
cmp
pop
scas
inc
lret
jg
outsl
sti
mov
sub
fwait
mov
xchg
jnp
and
fimull
cs
leave
sbb
sub
xor
xchg
sti
jge
pop
scas
icebp
xchg
inc
fwait
stos
stos
and
mov
pop
and
subl
sbb
lcall
arpl
pop
jmp
jb
fidivrs
repz
sti
xchg
ss
mov
cmpsl
push
jnp
dec
negb
sub
cmp
or
sbb
lret
loop
stos
stos
mov
fwait
int3
sub
cmovb
xor
dec
sub
insl
outsl
pop
sbb
xchg
sahf
xchg
xchg
imul
repz
push
pop
push
add
adc
inc
sub
xor
dec
dec
mov
fildl
out
out
leave
push
add
add
addr16
add
xor
and
sar
ret
fnclex
stos
xchg
mov
mov
dec
jb
bound
adc
add
xor
and
sar
ret
fnclex
stos
xchg
mov
mov
shll
mov
pop
test
xor
xchg
pop
das
call
xchg
insb
js
add
mov
xlat
adc
xchg
xor
push
dec
xorl
inc
fidivs
mov
xrelease
lock
test
mov
mov
loopne
scas
xchg
js
xor
mov
jne
push
cmp
bound
push
clc
inc
inc
loop
sub
idivb
lods
jnp
mov
pop
xor
or
cmp
dec
into
pop
fstps
roll
inc
jp
aad
jb
clc
jle
in
imul
repz
lahf
scas
pusha
inc
mov
out
mov
stos
push
fnstenv
int
dec
xchg
jne
inc
or
sbb
push
iret
add
insb
xor
xor
xor
stos
mov
faddl
and
xchg
shl
imul
fmuls
or
rcrl
leave
lcall
xchg
jbe
mov
je
push
repz
je
cmp
loop
sub
repnz
repz
mov
add
cmp
cmp
dec
fidivs
out
pop
dec
dec
xchg
ja
xchg
lock
in
cmpsb
inc
fstl
push
ss
inc
jnp
es
popa
jbe
sarb
scas
xor
dec
subb
out
test
push
lahf
adc
inc
outsb
rorl
cmp
lods
jb
mov
cmp
movsl
mov
dec
notl
sub
adc
orb
mov
cmp
jmp
fcoml
xorl
push
outsb
push
nop
push
ret
scas
cmp
xchg
mov
sub
push
dec
mov
mov
push
cmp
inc
add
adc
cmc
loop
das
push
add
cmc
ret
inc
pop
stc
pop
add
push
mov
xor
cmp
cs
jmp
sub
mov
jp
adc
out
cmp
and
les
add
rorb
loopne
mov
loope
add
test
mov
dec
pop
pushf
fwait
dec
lods
adc
mov
mov
lcall
jg
cmpb
sbb
and
jns
mov
icebp
aas
test
pop
lods
jns
fwait
data16
lods
adc
je
dec
bound
xchg
mov
test
cmp
push
xor
inc
lret
push
push
cmp
push
in
pop
add
cmp
icebp
aaa
pop
mov
div
sbb
push
mov
add
dec
stos
xchg
jg
push
pop
addr16
repnz
mov
or
int
insl
lahf
loope
fsubrp
mov
cmp
and
lret
lods
sti
or
sbb
dec
inc
ljmp
aas
test
outsl
jl
out
mov
sbb
inc
out
cs
movsl
fistl
insl
sub
mov
cmp
rclb
pop
rcll
movsb
in
fsub
cmp
aad
mov
out
or
ja
pop
scas
sbb
cs
movsl
push
xchg
addb
ret
push
scas
dec
shlb
adc
pop
pop
incl
jg
mov
loopne
aad
mov
jge
cwtl
xchg
mov
inc
dec
hlt
inc
dec
jne
out
or
push
cltd
call
test
xchg
out
xchg
cmpsl
call
cmc
jbe
mov
adc
js
jo
subl
xor
leave
ljmp
in
iret
push
test
pushf
cmp
adc
jns
outsb
aad
bound
cmpsl
cmp
fldl
inc
mov
in
sarl
outsl
fwait
stos
ret
gs
rorl
loop
sbbb
and
xchg
ljmp
mov
cmp
cmpsb
cmpsb
popf
cld
outsl
movsl
test
xor
mov
sub
cld
pop
sub
shrl
hlt
sub
icebp
popf
mov
cmpsl
cli
in
pop
stos
add
sbb
jge
mov
roll
sub
sub
add
sbb
push
pop
inc
scas
aam
movsl
repnz
and
aad
in
lods
fwait
mov
out
sbb
fimull
ret
mov
dec
popa
imul
ss
or
mov
inc
mov
mov
lea
sbb
pop
bound
or
test
xlat
mov
jns
pop
pop
inc
and
and
ret
xchg
shrl
xor
xchg
stc
pop
icebp
cmp
fiaddl
push
xor
inc
aam
scas
fsubs
rcll
inc
insl
ss
and
xor
pop
dec
fmull
add
outsl
mov
rolb
sbb
addr16
and
cltd
popf
out
mov
push
scas
jno
and
push
loopne
jb
jns
push
pop
mov
mov
jmp
xor
clc
sub
repz
xor
gs
dec
xchg
enter
pop
cmp
scas
loop
inc
shl
insl
cmc
imul
jbe
testb
pop
fwait
stos
sti
ret
loopne
scas
rcrl
xchg
cmpsb
mov
xchg
and
pop
gs
xchg
jg
add
andl
hlt
push
icebp
ret
jo
cmp
lea
enter
scas
popa
in
cmpl
pusha
scas
sub
test
stos
add
mov
pop
and
mov
xchg
mov
orb
bound
into
scas
testl
in
lods
out
cmp
clc
aam
notb
or
ret
cli
repz
and
push
xchg
adc
inc
repnz
es
leave
shll
stc
gs
out
into
add
inc
jge
mov
ss
xchg
inc
movb
xchg
das
int3
xchg
in
mov
sarb
sahf
mov
ret
aas
int3
dec
pop
icebp
sub
shlb
jg,pn
lods
out
daa
push
pop
loopne
sbb
int
adc
dec
fdivrs
std
push
mov
sbb
add
mov
bnd
cmp
loope
in
nop
popa
es
hlt
push
inc
decl
mov
cmp
fsubp
lock
mov
adcb
and
and
lock
push
dec
rorb
pop
pop
stos
sahf
lret
shlb
inc
dec
dec
pop
jbe
imul
mov
pop
adc
out
lods
nop
and
rolb
cmpsl
jmp
push
xchg
cld
aas
insl
iret
sub
paddq
imul
cli
mov
adcb
jmp
pop
or
pushl
insb
push
js
inc
pop
pop
movsl
adc
mov
clc
hlt
lock
mov
sbbb
rclb
xlat
mov
jns
scas
cmp
adc
jno
int
inc
push
inc
mov
pop
cmp
push
in
mov
push
lods
dec
iret
movsb
pop
mov
mov
scas
mov
shlb
xchg
je
or
insl
mov
repz
jae
lcall
mov
inc
hlt
stc
std
mov
js
rcrb
pop
xchg
cmp
xorb
adc
inc
fwait
pop
xchg
insb
ret
out
jl
in
sti
insl
sub
add
fidivs
testl
repnz
xlat
xchg
jmp
sub
xchg
add
push
push
cli
out
cs
sbb
mov
cmp
sbb
out
pusha
pusha
and
inc
jge
int
shrl
add
push
mov
mov
out
inc
shl
cltd
xchg
test
jge
dec
mov
idivb
scas
mov
aaa
mov
adc
out
stc
int3
sbb
xlat
xor
call
mov
pop
mov
fs
in
push
mov
and
mov
leave
iret
insl
out
sbbl
in
jne
xlat
sbb
stc
shrb
pop
fwait
xchg
xor
lret
hlt
xchg
inc
sub
mov
imul
dec
ds
inc
push
mov
popa
mov
out
cmpsb
jno
cmp
aam
inc
mov
pop
popa
mov
xchg
jbe
xchg
cmp
jp
xor
jb
ljmp
mov
mov
cmp
outsl
stc
mov
pop
ljmp
mov
daa
pop
jbe
mov
xor
xchg
nop
or
sahf
mov
stos
ret
push
fists
inc
cmp
in
gs
cmpsl
lcall
jmp
js
xor
push
mov
and
cltd
mov
stos
adc
mov
and
call
dec
es
pop
jl
jmp
sub
and
pop
and
push
in
mov
mov
or
push
inc
push
fmull
push
push
iret
xor
fdivrl
in
lock
and
cld
fld
push
movsl
std
rorb
test
stos
push
out
arpl
cwtl
push
fidivrs
sub
sbb
inc
mov
mov
loopne
mov
xchg
outsb
push
cmp
push
imul
movsl
in
cld
adc
jae
repz
inc
stc
iret
aas
rolb
add
inc
insb
mov
ret
mov
inc
add
mov
xchg
repnz
loop
vmovhps
stos
sub
lret
xchg
mov
loope
jecxz
xchg
mov
push
sahf
jp
loopne
mov
push
or
mov
jo
jb
xchg
je,pt
fs
add
jg
push
pop
cmp
mov
fidivl
add
out
sbb
xchg
mov
int3
lcall
fstp
pushf
lret
adc
push
aas
or
pop
movsb
lods
pop
jae
mov
mov
cli
jge
dec
rcrb
or
sub
and
clc
scas
cmp
adc
dec
repnz
mov
scas
inc
jecxz
mov
das
xchg
jecxz
pop
into
sbb
or
or
fiaddl
jg
jns
in
or
mov
or
sub
int3
in
mov
cmp
sbb
dec
movsl
popa
cmp
fsubl
dec
lock
popa
scas
xchg
testb
sbbb
iret
pop
adc
push
shlb
mov
pop
jnp
outsl
aas
popa
rolb
xor
cli
jmp
imul
cmp
or
stos
inc
ss
test
stos
mov
pop
xchg
iret
pop
mov
jbe
loopne
in
dec
pop
xchg
fiadds
ja
push
pop
sbb
int
in
ret
xor
je
sbb
cld
add
dec
jb
shr
dec
add
pop
data16
test
rolb
inc
pusha
cmovl
popf
jge
aaa
add
mov
ror
jno
cmpsb
mov
xchg
dec
pop
mov
cltd
xchg
movsl
pop
imul
mov
sahf
xchg
push
pop
popf
or
jecxz
bound
mov
sub
lods
sbb
or
sub
idivb
fisttpl
imul
mov
stc
sub
aam
jle
mov
xchg
sub
sub
push
popf
jbe
mov
cwtl
jg
dec
add
into
idivl
xlat
ja
sbb
pop
lea
xchg
ds
pop
lods
scas
and
add
mov
and
imul
jno
pop
aas
fldt
pop
dec
imulb
jae
movsb
sbb
mov
in
outsl
mov
mov
add
fisubrl
cs
xor
adc
xchg
push
xchg
int
scas
loope
lahf
or
popa
cltd
jle
mov
vpavgb
ret
xchg
out
int
movsl
dec
cmpb
and
mov
outsl
xchg
adc
pop
mov
addr16
and
xchg
jnp
jge
jo
xor
adc
xchg
in
int3
xor
mov
inc
subb
adc
adc
mov
pop
pop
popf
inc
lods
sub
adc
std
loope
movsb
gs
aad
xchg
xchg
add
xor
push
je
insl
mov
dec
pushf
mov
push
stos
divl
dec
stc
pop
pop
mov
mov
scas
mov
out
jne
add
pop
and
sti
orl
adc
push
fsubrs
inc
shlb
push
jns
stos
jo
sub
lods
hlt
inc
and
shrl
push
dec
andl
lret
sbb
pop
cmp
cmp
sbb
jns
leave
aas
lods
jbe
mov
mov
ljmp
sub
shll
mov
insl
or
test
mov
sti
push
xchg
out
or
jmp
mov
mov
imul
pop
call
and
pop
in
ljmp
sbb
or
repz
inc
jp
dec
xor
ss
nop
call
adc
imul
xchg
xor
mov
pushf
sti
push
rcll
outsl
in
mov
jle
add
push
xchg
push
cmpsl
sbbb
mov
lret
push
movsl
mov
inc
ljmp
xchg
adc
movsb
xchg
lods
add
cmp
xchg
push
mov
and
test
and
dec
call
setne
dec
push
jne
test
leave
pop
dec
scas
pop
test
outsb
mov
jp
jp
bound
sahf
mov
in
sbb
dec
adc
out
loopne
out
out
repz
ret
xcrypt-cbc
cmpsl
push
cli
pusha
sti
popf
sti
lret
mov
add
xor
xchg
sbb
loopne
leave
pop
add
and
fldenv
jo
dec
out
jmp
dec
stos
jnp
push
movsl
iret
das
in
shll
xor
and
sbb
enter
xchg
add
stos
push
mov
pop
sub
push
outsl
imul
lds
sti
inc
gs
lods
stc
les
jnp
scas
jp
add
inc
jne
mov
ret
cmp
cli
sarl
cmpsl
sbb
hlt
push
incl
aad
push
push
adc
and
add
lcallw
jle
shlb
and
js
dec
add
push
test
jg
int3
ret
jne
enter
adc
sub
repnz
xor
mov
clc
insb
sub
sbb
lret
dec
pop
push
icebp
cmp
fs
cwtl
int3
cmp
pop
lods
jbe
cli
subb
and
pusha
call
scas
out
pmaddwd
sarl
push
lahf
jge
pop
hlt
pop
or
adc
xchg
cmpsb
cltd
pop
repnz
push
add
loop
cmc
inc
loopne
leave
mov
push
insb
add
test
in
lcall
jns
out
rorb
or
sbb
jo
pop
lock
jo
cli
jo
inc
fisubl
sub
pop
or
jp
cmp
aas
outsl
inc
xor
pop
movb
iret
rclb
clc
int3
repz
cmp
mov
aaa
jg
and
sub
or
xor
xchg
jns
cmpsb
cwtl
mov
aad
inc
mov
sbb
iret
or
jl
inc
mov
mov
pushf
or
sti
cs
or
shlb
and
xor
lahf
jecxz
sbb
and
pop
and
sbb
dec
ret
inc
mov
sbb
ficompl
or
push
js
dec
fsub
pop
out
add
call
jno
in
fs
daa
lahf
cmp
ss
les
jle
into
jno
sahf
mov
push
inc
movsb
sub
xor
les
jbe
nop
and
push
aaa
sti
iret
aas
sbb
stos
pop
into
push
call
add
cs
cmc
test
cld
test
xor
or
cmp
xchg
sbb
test
push
adc
adc
mov
inc
mov
mov
lds
inc
inc
add
fcompl
pop
mov
sub
jecxz
pop
stos
push
push
ret
insw
mov
push
pop
stc
sbb
daa
scas
fdivs
sbb
and
es
stc
inc
int3
shlb
xchg
pop
insl
pop
cld
fwait
mov
shll
and
push
int
push
repnz
pop
cs
nop
xchg
aas
add
jno
cltd
in
les
pop
cmc
arpl
inc
fsubrl
hlt
out
mov
test
xor
popa
lret
push
icebp
mov
and
sub
jecxz
arpl
js
scas
cmpsb
push
arpl
adc
out
add
mov
in
xor
inc
pusha
mov
int3
xor
mov
lcall
in
and
stc
popw
mov
fdivrs
jae
int3
fsubr
mov
mov
sbb
aaa
in
push
push
mov
jge
into
or
lahf
aad
sub
adc
inc
mov
mov
jmp
es
sti
fdivrl
adc
jns
sbb
pop
dec
ds
cld
test
cmc
in
cmp
ljmp
sub
xor
sub
pop
mov
adc
jge
adc
pmuludq
sbb
mov
orb
imul
loopne
shrb
jmp
xor
lock
cmp
xchg
lods
cmp
xor
push
inc
int
pop
aam
jnp
movsl
scas
adc
adcl
cmp
sbb
and
out
jo
movsb
push
das
add
subb
mov
jns
mov
push
les
cmp
cmp
mov
mov
ret
ds
jle
and
sbbb
orb
inc
aas
out
xchg
pop
repnz
push
fiaddl
inc
stos
cmp
xchg
xchg
scas
adc
mov
ret
std
pop
hlt
fidivs
je
pop
cltd
sahf
insb
pop
add
xor
sbb
cmp
sub
fimuls
mov
cmp
stos
and
cmp
nop
idivl
mov
jl
mov
iret
sbb
test
outsl
xchg
dec
push
test
sbb
jo,pn
cmc
mov
scas
push
or
mov
popa
das
js
daa
imul
subb
loopne
sahf
jle
or
ss
ss
lahf
jns
push
sub
jecxz
mov
sbb
xor
nop
and
scas
loopne
dec
imul
les
cwtl
sbb
aaa
mov
pop
and
jmp
loop
push
push
xor
cli
xor
push
jbe
lock
sahf
arpl
or
roll
xlat
sbb
imul
int3
sub
sub
addr16
in
lcall
insb
mov
mov
bound
imul
cmp
mov
jne
imul
xchg
mov
lods
cmp
jnp
fmull
add
jo
out
inc
mov
push
dec
mov
push
or
dec
sub
xor
pop
nop
sub
mov
cwtl
mov
push
ret
dec
mov
movsb
pop
fsubp
sbb
inc
fst
jecxz
in
jnp
loop
mov
cmp
imul
mov
xchg
xchg
pushf
push
fidivrs
add
mov
mov
insl
xor
imul
data16
dec
loope
mov
xor
cmp
sbb
aas
adc
movsb
mov
mov
test
or
loope
mov
mov
mov
xchg
mov
pop
xlat
ss
mov
cltd
sbb
dec
loopne
ljmp
sbb
xchg
mov
pushf
inc
xchg
jnp
sub
pop
sub
sti
add
repz
testb
cltd
enter
fldcw
jnp
mov
inc
lahf
sbb
dec
mov
xor
pop
sbb
jnp
enter
adc
fadd
stc
mov
sub
shll
inc
push
xor
ret
ror
arpl
push
insb
xor
test
pop
into
stc
mov
inc
inc
mov
imul
fisubrl
mov
pop
mov
in
arpl
in
ja
and
stos
jno
mov
leave
mov
jecxz
rcrl
in
std
fwait
adc
push
pop
sub
xchg
imul
push
sbb
repnz
hlt
stos
sbb
sub
inc
dec
loop
stc
lods
and
mov
test
mov
jecxz
or
test
call
lods
xor
sbb
mov
repz
mov
and
mov
dec
arpl
sbb
into
jns
mov
loop
rol
in
clc
movzbl
aas
adc
int
daa
xchg
jb
call
mov
rcll
popf
mov
mov
or
push
add
xor
addr16
ret
aam
mov
push
scas
jge
das
outsb
mulb
mov
or
data16
or
jecxz
push
add
test
inc
push
adc
scas
sbb
data16
jo
xchg
dec
pop
pop
adc
xchg
add
movsl
pop
gs
pop
fisttpl
ljmp
les
mov
xor
mov
push
push
cmp
scas
jl
mov
or
cli
mov
mov
call
test
mov
ret
insl
rclb
adc
push
jmp
in
jle
adc
fldl
mov
js
test
cmp
popf
int
movsb
or
xor
data16
enter
or
sahf
dec
add
pop
sbb
push
sti
xor
or
mov
inc
invlpg
mov
dec
mov
sbb
in
push
lcall
mov
xor
mov
sahf
orl
stc
push
cltd
dec
inc
fldl
pop
or
fnstcw
jne
test
dec
push
pop
bound
adc
add
xor
and
sar
ret
fnclex
stos
xchg
mov
mov
dec
jb
bound
adc
add
xor
and
sar
ret
fnclex
stos
xchg
mov
mov
lret
or
stos
adc
stos
or
fwait
and
or
ret
fnclex
stos
xchg
mov
mov
dec
jb
arpl
adc
add
mov
and
sub
fistl
sti
dec
jmp
mov
in
mov
lret
repz
inc
adc
inc
xor
inc
adc
and
ret
add
les
test
mov
movsb
repz
add
and
push
xor
and
int
fstl
ret
popf
shrl
dec
dec
sbb
xor
adc
inc
push
dec
jae
add
mov
add
pop
adc
and
mov
sub
hlt
mov
dec
push
cmp
inc
out
insl
sti
popf
mov
imul
fsubs
pop
xchg
les
push
es
xchg
test
in
jb
ret
mov
repz
inc
pusha
sahf
pushf
jecxz
add
aam
adc
outsl
cmpsl
mov
xchg
ret
pop
or
je
cmp
xchg
adc
je
int
xor
cmp
jne
dec
movsb
sbb
movsl
pop
inc
mov
add
fsubl
xor
les
mov
push
sub
add
mov
and
adc
les
test
sahf
shll
pop
adc
xor
sbb
xor
cmp
inc
xchg
in
cmc
lock
jmp
andl
inc
jp
dec
or
cs
sub
inc
push
aam
fsts
cmpsb
ljmp
inc
inc
jg
jne
pop
jno
ja
inc
push
and
mov
xlat
in
in
scas
test
mov
movsb
repz
add
and
inc
add
xor
and
aam
les
xchg
ret
test
mov
movsb
repz
add
and
inc
add
xor
and
aam
pop
xchg
push
adc
jae
test
jle
in
enter
pop
jle
mov
loop
mov
jmp
mov
dec
push
rcll
into
setbe
je
jp
dec
int
call
lret
stos
pop
inc
xchg
enter
pop
pushf
xchg
nop
and
jecxz
and
mov
xchg
lret
movsl
push
dec
scas
dec
cmc
jns
lods
or
jl
mov
lock
testb
or
fistpl
lcall
nop
inc
sub
jp
xor
push
push
pusha
add
or
jo
les
rcrb
pop
mov
shrb
lea
mov
xor
and
inc
and
cmp
aaa
call
xchg
jp
push
pushf
dec
scas
mov
fadd
in
push
imul
in
xor
sbb
mov
ja
call
jmp
shlb
sub
aas
mov
je
add
int3
pushf
or
and
scas
sub
loope
imul
pop
bound
std
shrb
mov
push
inc
or
test
sbb
pop
cs
pop
cmp
sub
in
jae
in
add
or
lahf
ljmpw
lods
fxch
scas
rcrb
repz
cmpsl
icebp
dec
test
sbb
add
push
xor
lea
pop
sbb
push
hlt
or
mov
popf
test
sbb
sub
cwtl
add
add
mov
jmp
sahf
mov
inc
das
nop
and
divps
add
fs
or
mov
or
ds
leave
shlb
cltd
xchg
enter
cmpsl
pop
sbb
in
push
cmp
sub
jo
dec
loop
test
push
fisttpll
cmpl
xchg
mov
frstor
popf
mov
xor
cld
outsb
xor
inc
imul
rcrb
push
test
inc
pusha
xor
hlt
scas
mov
jge
dec
call
rclb
cmp
add
arpl
int
pop
xor
push
xchg
in
pop
mov
dec
loopne
pop
xchg
mov
ljmp
dec
sarl
jecxz
fs
fst
sub
push
jmp
mov
outsl
fsubrp
pop
loop
xchg
xchg
daa
inc
push
rcrb
ljmp
add
mov
decb
dec
or
outsb
dec
mov
stos
sbb
cmp
jne
sbb
xor
cwtl
leave
mov
pushf
mov
mov
mov
idivb
inc
dec
lea
cmpsb
xchg
enter
cmc
das
inc
lods
mov
out
xlat
nop
scas
test
pop
push
mov
and
push
and
ret
lea
jno
cmp
or
dec
jnp
dec
push
negb
cld
js
add
xor
lds
sub
adc
mov
push
mov
mov
mov
mov
rcrb
fbld
and
js
xchg
ficoms
mov
mov
sub
insb
xorl
xchg
scas
inc
mov
xchg
dec
fs
in
lret
inc
xchg
pop
xor
sahf
mov
inc
sbb
das
popa
adc
mov
inc
ret
mov
inc
and
push
adc
movsl
mov
nop
es
cmp
gs
add
roll
into
fwait
arpl
add
cld
gs
dec
inc
jo
out
inc
sub
orl
enter
sbb
adc
sub
sbb
xchg
add
adc
xchg
sub
add
mov
loope
into
jb
aaa
aaa
mov
push
or
loop
add
addr16
ret
fsub
shr
jmp
or
sub
in
xchg
dec
pop
sub
data16
movsl
fwait
sti
adc
mov
mov
std
or
outsb
mov
iret
leave
xchg
sahf
out
mov
jo
mov
call
inc
cmp
pop
andl
add
test
cmp
movsl
adc
fs
fdivs
frstor
int
ret
and
leave
jae
sti
std
jb
imul
mov
addr16
pop
repz
dec
push
cmpsb
pop
adc
cmp
dec
cmp
push
rorb
pop
mov
inc
pop
jmp
nop
rorb
dec
mov
aam
xchg
or
fabs
dec
push
fisttpll
pushf
cmp
aaa
dec
scas
aad
jecxz
mulb
mov
sub
and
ljmp
dec
cmp
sub
inc
xchg
mov
cwtl
lret
lds
in
mov
inc
jbe
and
das
fwait
test
test
or
pushl
jg
sub
dec
clc
mov
dec
push
cmp
inc
push
pop
or
into
mov
push
hlt
jle
out
mov
push
jnp
arpl
aad
daa
mov
lret
cmp
inc
test
pop
loop
adc
or
mov
adc
xor
add
push
xchg
out
lahf
jle
xchg
int
aam
or
xchg
aas
jno
dec
into
sbb
mov
repnz
cmpl
dec
sub
daa
dec
popa
mov
stos
cmp
les
cmp
xor
or
lds
sub
adc
mov
outsb
push
std
pop
inc
subl
mov
in
outsl
add
rclb
sub
lods
adc
jo
testl
fsub
push
scas
jl
mov
out
outsl
pop
lcall
pop
mov
xor
es
int3
int3
pop
and
jl
mov
loope
dec
hlt
outsb
push
jne
push
push
mov
mov
push
pop
and
in
ficoms
push
and
jne
pop
mov
pop
pop
ljmp
mov
in
lret
push
mov
sbb
cmp
mov
ret
push
mov
mov
idiv
out
repz
push
dec
fistpl
cmp
push
or
adc
mov
jne
pushl
notl
repnz
test
in
rorl
push
jno
jle
stc
rcl
mov
jmp
test
stos
adc
mov
aas
fsubrp
sbb
fisubrs
popw
aam
mov
mov
out
insb
inc
cs
stos
jmp
sbb
fisubrs
mov
or
dec
jns
push
pop
cld
arpl
iret
push
repnz
inc
sti
addr16
push
cs
push
out
jle
lock
shrb
sbb
sub
sub
cmp
adc
dec
adc
insb
les
mov
add
pop
push
mov
add
add
incb
nop
nop
inc
xlat
mov
cmp
lods
cmpsl
lea
xor
mov
ds
fists
out
add
push
xor
push
setg
hlt
or
aas
xchg
jg
mov
xchg
pop
xor
xchg
jnp
jle
and
jbe
fistpll
push
out
jb
add
jns
lahf
pop
mov
push
xor
xor
mov
stc
rcll
enter
in
or
xor
lods
js
sahf
rcl
je
add
scas
sarl
add
loop
dec
subl
dec
stos
sahf
inc
ljmp
inc
fisubs
mov
in
test
lret
jge
das
mov
shl
pop
jno
cli
sub
cltd
pop
subl
cmc
rcl
jno
push
outsl
andnps
add
push
sbb
rolb
test
hlt
or
inc
repz
into
popf
iret
pop
lret
push
mov
loop
inc
dec
mov
ret
push
insb
inc
aad
cmp
pop
sub
jp
mov
xor
jecxz
mov
pop
add
sub
jns,pn
push
cli
mov
jg
push
stc
add
or
outsb
ja
ja
mov
pop
inc
rorl
cmp
not
in
cmp
xchg
mov
pop
push
jp
addr16
jne
sub
pop
cltd
rorl
pop
aaa
int
int
into
mov
mov
stos
xchg
xchg
jge
sti
cmp
jmp
cld
shlb
push
rorb
xchg
scas
jbe
xchg
mov
push
and
or
or
pop
or
les
mov
decb
dec
bound
roll
sbb
cmp
push
outsl
std
pop
cltd
sbb
add
lea
xchg
cmc
push
mov
cmp
pushf
jae
push
imul
sbb
js
ljmp
or
and
lods
decb
push
mov
cmp
jne
cmpsl
cmc
jmp
fmuls
pop
cmp
adc
arpl
cwtl
jmp
sarl
inc
mov
jns
lds
mov
mov
aad
addl
add
jge
aas
or
cmpsb
mov
sahf
and
sbb
outsb
bnd
sub
xor
daa
mov
insl
cmp
insl
and
fwait
xchg
add
xor
shl
outsl
jle
sbb
jp
out
pop
mov
cmpsl
sub
mov
adcb
lock
sbb
leave
inc
cmpsl
addl
cmp
das
sub
add
insb
xor
jge
mov
pop
ret
xor
jmp
loopne,pn
inc
xchg
popf
xchg
arpl
adc
repz
pop
jno
scas
and
fisubrl
adc
std
insl
add
loopne
fwait
retw
cltd
cmpsb
sub
aad
push
icebp
enter
nopl
repnz
cmc
sub
push
imul
clc
stos
loopne
pop
push
sub
aas
in
pop
mov
cltd
inc
imul
lcall
ja
push
xor
pop
pop
lea
xchg
push
add
shrl
js
push
scas
push
jo
cld
and
jl
movsb
push
aad
jecxz
fst
cli
mov
and
popf
stos
cmp
push
test
push
cld
pop
lods
sub
jbe
test
cwtl
xor
mov
fnstsw
inc
outsl
add
mov
ljmp
cltd
dec
popa
sarb
add
sahf
cmp
cmp
pop
xor
or
js
mov
lods
test
cmpsl
sub
adc
cmp
pop
dec
rorb
inc
or
pop
mov
pop
xchg
and
jo
pop
jmp
ror
mov
adc
fsub
cmp
mov
xor
mov
call
and
shll
icebp
aam
mov
dec
inc
sbb
xchg
in
es
or
jo
negl
mov
notb
sub
seto
cmc
mov
xor
dec
fcoms
pop
push
sub
lcall
xor
fmulp
mov
xchg
dec
xchg
jns
inc
jp
pop
dec
jmp
xchg
negl
add
inc
dec
mov
mov
push
lock
test
push
int3
xchg
jbe
xchg
mov
fnsave
inc
xchg
fbstp
dec
scas
jns
pop
bound
outsb
and
in
cld
pop
mov
inc
movsb
pop
mov
sub
fdivr
sub
sub
bound
stc
add
mov
testb
outsb
in
or
stos
pop
in
dec
sub
push
xchg
ljmp
bound
pop
gs
xor
mov
mov
push
mov
subl
and
xlat
sbb
push
inc
push
and
std
mov
jp
add
push
stos
rcl
nop
rcrl
int
call
and
inc
inc
jle
mov
mov
xchg
shll
inc
ja
xchg
adc
ret
ffreep
test
add
testb
jecxz
imul
mov
vmovlpd
imul
add
cltd
scas
xchg
xchg
pop
rcr
in
inc
clc
xchg
sub
cmp
insl
xor
ficomps
mov
mov
xchg
dec
pop
into
push
iret
ss
cltd
xor
rclb
test
cmp
in
and
mov
stos
push
lock
ja
stc
push
push
xchg
rcr
mov
jne
mov
add
sbb
inc
inc
fnstcw
mov
xor
add
ds
fcoml
aam
movsl
pop
in
sbb
jbe
jmp
sub
adc
lock
and
clc
lret
inc
sbb
adc
jle
iret
imul
leave
scas
jne
or
add
sub
sarb
imull
cli
push
cmp
xor
mov
sub
jno
ljmp
and
dec
xchg
or
sub
test
cmc
fwait
xor
ret
xrelease
testl
stc
mov
scas
lahf
sbb
fidivs
andl
rcl
xchg
push
fsts
jmp
loop
rcrl
insl
inc
ficompl
pop
adc
push
lds
pop
jnp
push
out
jl
out
push
xchg
mov
sbb
aaa
rorb
sub
jle
sub
push
push
push
xchg
and
cs
jnp
mov
imul
or
inc
mov
add
inc
jl
mov
test
je
loop
mov
cwtl
jo
mov
xor
mov
lds
add
mov
sbb
out
add
jmp
adc
fistl
mov
push
test
inc
adc
sbb
mov
popa
mov
jp
call
insb
aam
je
pop
or
and
xor
or
xor
jge
inc
push
adc
loope
in
icebp
push
js
rclb
into
xchg
cmpl
test
add
pop
sahf
aam
mov
xchg
jae
xchg
xlat
inc
sysexit
push
es
ds
mov
lcall
ds
cmp
aam
mov
push
movsl
in
add
lahf
dec
cli
leave
mov
adc
out
nopl
insb
sub
fwait
push
icebp
inc
dec
pop
fldenv
out
test
jp
sbb
enter
fxch
dec
dec
hlt
jge
sbb
leave
or
mov
gs
jl
mov
je
sbb
jl
fisubrs
sbb
rorl
fcmovnu
sbb
inc
push
adc
xor
pop
fildl
lods
lods
and
inc
or
or
dec
xchg
sahf
lcall
out
call
mov
push
dec
test
inc
push
nop
jae
sub
jno
movsb
xchg
mov
cmp
loop
lods
cmp
jo
sti
jae
shlb
adc
mov
popa
test
es
cmpl
sub
jae
popa
ret
shrb
jne
dec
stc
cmp
mov
jmp
push
insb
les
xor
cmp
jb
cmp
ret
and
sub
sbb
js
cld
scas
xor
inc
std
cmp
xchg
iret
adc
add
popf
jno
pop
mov
add
mulb
ljmp
cli
sub
pop
into
xchg
push
dec
addr16
imul
and
add
inc
adc
pop
adc
jbe
xor
lret
je
popf
fstps
and
test
sbb
andb
sub
jne
arpl
fwait
sub
xor
sub
ljmp
loop
xor
out
inc
pop
mov
subl
lahf
out
in
dec
jae
add
jae
pop
insb
in
xchg
mov
mov
sbb
sbb
movsl
xlat
fists
add
daa
dec
ficomps
mov
in
push
pushf
or
add
mov
cmpsl
push
and
popf
lea
rcl
mov
fdivrs
dec
mov
cmp
scas
bound
pop
fisubl
and
jne
xor
cmpsl
cltd
xchg
aam
mov
dec
dec
test
xchg
dec
mov
loopne
or
mov
in
xor
adcb
lods
icebp
jns
add
jg
out
xor
aaa
clc
mov
push
fs
cmpsl
push
sub
jae
cmc
imull
add
mov
leave
ds
cmpsl
cmp
mov
shl
fdivrs
cmpsb
lods
xor
mov
pop
stos
sub
mov
push
lcall
mov
cwtl
xchg
int
jae
rcl
fmuls
pusha
sub
aas
cltd
sbb
mov
sbb
addr16
jo
adc
outsl
add
xchg
sahf
pop
loope
out
push
int3
and
push
sbbl
push
or
push
dec
xchg
mov
cmp
mov
in
jb
lret
imull
mov
inc
mov
inc
jne
ret
xchg
daa
pushl
add
dec
loopne
mov
lahf
jo
cmp
cvtps2pd
or
mov
mov
std
push
push
fcomi
repz
mov
imul
out
lret
jp
lock
ficomps
testl
jmp
xchg
fistps
mov
popf
jge
aad
pop
sti
inc
das
or
lahf
xchg
jmp
int3
sbb
mov
add
sub
je
sub
mov
je
sub
inc
popf
mov
test
iret
or
pushl
mov
mov
gs
jecxz
mov
ret
xchg
add
xor
icebp
fldt
shll
inc
sbb
ret
sbb
inc
lds
test
arpl
in
cmp
bt
idivb
sar
lahf
mov
jle
mov
xchg
mov
stc
cs
popf
pop
arpl
pop
jg
fldlg2
call
jbe
popf
mov
mov
popf
adcl
fnstcw
idiv
ljmp
negl
pop
mov
cmp
stos
inc
inc
adcl
sub
cmp
int
mov
cmp
mov
cmc
mov
ret
and
lds
rcrl
hlt
cmp
cld
imul
das
fwait
or
gs
sbb
fldt
pop
fcmovnb
ja
bound
ret
hlt
mov
or
mov
sarl
push
mov
sub
adc
mov
mov
fisttps
push
fs
and
lret
nop
mov
dec
sbb
dec
popa
std
adc
push
lcall
fs
lods
push
pop
jg
popa
dec
repnz
push
push
dec
rcll
sub
in
add
pop
pop
jecxz
mov
sub
mov
push
pop
xchg
and
lret
bound
shr
lds
mov
cltd
pusha
bound
mov
lcall
test
push
insb
xchg
ja
mov
push
dec
and
add
cmpsb
push
mov
je
sub
or
fnstenv
in
das
fsubp
fstpl
fimull
das
stos
cwtl
dec
int
stc
jmp
mov
cmc
in
frstor
add
jmp
notl
outsl
pop
push
repz
pop
jecxz
scas
push
jae
dec
sub
ljmp
andb
jg
scas
push
call
cmc
fwait
add
sbb
xchg
push
xchg
sbb
jo
je
in
add
jp
into
and
pop
adc
add
cmp
lahf
js
push
push
push
int3
or
adc
enter
inc
jo,pt
adcb
icebp
rorl
sub
fs
cmp
mov
daa
fnstsw
xor
mov
push
lock
loope
or
out
pop
pop
movl
push
xor
into
rcl
je
out
das
sbb
xor
movsb
push
fistpll
and
inc
mov
fiaddl
add
mov
xor
je
jle
or
mov
xor
add
add
fwait
shrl
jno
xchg
lea
jp
push
add
inc
lods
adcl
outsl
arpl
add
call
lock
movsl
or
xor
lds
cmp
test
and
sbb
lock
cmp
ss
rol
testb
mov
repnz
mov
lds
sbb
jno
mov
mov
hlt
cmp
xchg
loope
imul
jo
xor
popa
mov
loop
fwait
imull
shlb
lock
fwait
lcall
aam
je
test
and
popf
mov
xchg
pop
pop
xchg
incb
lcall
pop
mov
mov
lcall
pusha
pop
adc
sub
mov
dec
loope
insl
xor
ljmp
sahf
jae
jmp
mov
frstor
adc
std
scas
cmp
inc
push
dec
inc
mov
ficompl
inc
outsl
mov
add
aas
sub
xchg
rorb
repnz
xchg
out
add
dec
out
push
ljmp
lahf
pushf
and
jmp
loop
fstl
cmp
cmp
xchg
push
pop
push
lods
mov
pand
std
push
push
and
cltd
ret
cmpsb
add
cmp
sbb
cmp
cmp
rep
movsl
push
mov
mov
or
inc
cmp
mov
dec
dec
fbstp
add
or
je
mov
imul
sar
ret
adc
pop
in
ret
addr16
mull
fcomp
cwtl
xchg
jo
lods
popw
pop
add
or
dec
cmp
movsl
fisttpl
hlt
inc
and
sub
adc
xchg
pop
and
movsb
jae
imul
mov
test
mov
movsb
repz
add
and
inc
add
xor
and
aam
les
xchg
ret
test
mov
movsb
repz
add
and
inc
add
xor
and
aam
les
xchg
ret
test
mov
movsb
repz
add
and
inc
add
arpl
xchg
ret
mov
ret
test
arpl
stos
cld
mov
inc
arpl
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
cmp
and
pop
lds
dec
les
movsb
popf
sar
les
fucom
int
cmp
and
push
jge
jge
pop
fs
mov
lods
lcall
out
hlt
fucom
int
and
xor
add
or
pop
inc
pushf
push
xchg
mov
mov
cltd
subl
pop
jo
push
push
mov
lods
jo
addr16
xchg
mov
add
aad
sbb
lods
pop
add
mov
mov
inc
jns
dec
int
jb
popf
push
mov
sub
adc
xor
movsb
push
fdiv
xor
adc
mov
pop
jb
pop
dec
push
pop
fnstsw
rorb
jno
push
jge
jge
sub
sbbl
add
push
xchg
mov
in
stos
mov
sub
push
inc
aam
dec
cmpsl
xor
inc
std
movsb
mov
pop
lret
in
xchg
idivl
insb
aad
mov
movsb
jb
aad
or
daa
sub
push
jge
insl
je
fcoml
push
mov
test
cmc
hlt
movl
push
xor
sub
rol
lods
in
cwtl
stos
out
xorb
inc
jae
out
bound
sub
jg
leave
clc
enter
mov
mov
inc
jns
dec
adc
insl
je
fs
xchg
mov
movsb
aam
in
hlt
fucom
int
cmp
and
push
jge
insl
je
fs
xchg
mov
movsb
aam
in
hlt
fucom
int
cmp
jnp
sbb
and
mov
inc
sbb
push
fdivr
and
dec
pop
insb
xor
mov
xchg
mov
xchg
sbb
sub
sub
sub
xchg
add
inc
xor
fistpl
inc
fcmove
jns
in
sub
sahf
outsl
lods
pop
js
adc
and
dec
sub
sbb
in
lds
or
loope
dec
mov
adc
push
mov
jl
mov
xchg
sub
xchg
push
mull
jno
jmp
cmpsb
sub
arpl
sub
int3
sti
mov
pusha
jmp
addr16
shl
fdivrs
add
add
adc
mov
rcr
addl
pusha
sbbl
sti
jbe
aam
fs
and
lgs
test
sub
sbb
mov
inc
movsl
pop
xchg
sbb
pop
and
addr16
or
rcr
cmpsb
pop
xlat
jp
mov
pop
iret
or
mov
sub
enter
ljmp
insl
scas
mov
push
nop
sbb
mov
push
sbb
pop
inc
mov
cmp
cmp
push
sub
sbb
cltd
rorl
out
bound
rcrb
xchg
icebp
xlat
lods
adc
adc
dec
out
xor
jl
ljmp
aad
xchg
cli
mov
fildl
adc
adc
incl
and
sbb
adc
mov
xlat
mov
fsubrl
fsubrp
jl
push
jmp
cld
test
mov
les
and
enter
mov
push
mov
push
pop
and
icebp
pop
dec
add
dec
xor
push
mov
notb
lret
jle,pt
cmp
jns
in
add
lret
inc
std
push
xchg
ja
mov
sub
ret
cmp
cli
and
stos
fdivrl
dec
push
scas
leave
mov
push
xchg
scas
xchg
repz
sarb
testb
and
arpl
nop
add
jge
mul
mov
mov
jns
mov
fstps
cmp
xor
fcom
push
test
mov
adc
lea
push
imul
xchg
std
addr16
lret
stc
out
mov
push
sbb
mov
push
repnz
ror
in
xchg
xchg
aaa
fidivs
jbe
xchg
sub
or
lahf
mov
into
push
xchg
pushf
pop
push
dec
inc
push
lock
mov
scas
js
fdivr
fwait
xor
push
jl
pop
mov
inc
frstor
das
xor
push
inc
adc
xor
jmp
testl
out
pop
add
sub
test
gs
test
leave
xchg
cmp
fisttps
jae
mov
aad
dec
jnp
jb
push
lcall
mov
imul
sub
inc
faddl
in
inc
jno
addr16
jl
lods
mov
push
test
xor
push
xor
mov
clc
mov
dec
pop
adc
add
psrad
jl
pop
pop
movsl
mov
sbbb
or
xchg
popf
xor
and
adc
sub
pop
dec
sub
adc
gs
cmc
fsubrl
aad
add
push
pop
in
test
pushf
rclb
mov
in
mov
popf
and
bound
aas
outsb
cmp
jl
pop
mov
jg
inc
mov
stc
mov
xorb
out
sub
jno
add
mov
movsl
pushf
movsb
test
lods
pushf
stc
lret
xchg
mov
outsl
adc
aam
inc
pop
outsb
outsl
popa
jnp
outsl
sbb
and
aad
xchg
jl
inc
pop
fisubl
ret
xor
fldenv
int3
lods
gs
xor
dec
mov
mov
hlt
xchg
lods
cmpsb
in
sti
ret
scas
pusha
cltd
push
int
jo
inc
out
adc
adc
data16
cmc
mov
mov
outsl
fwait
mov
lcall
sub
pushf
pushf
adc
push
fidivrl
inc
repnz
std
jo
loope
loop
inc
mov
lea
and
mov
pop
jp
fsubp
sti
test
adc
sub
hlt
xchg
dec
rolb
sub
and
les
push
test
scas
mov
adc
lock
addb
fstps
test
sub
pop
mov
test
mov
pop
stc
pop
shlb
andb
testl
shlb
push
pop
push
ds
stc
add
sbb
sub
in
sbb
in
daa
jns
mov
sub
jne
ja
pop
fisttpll
xchg
lret
rol
mov
mov
xchg
enter
lds
pop
jmp
sbb
fstp
jecxz
dec
pop
push
jmp
mov
shll
aas
sbb
push
lock
dec
pusha
fstpl
cld
lods
push
mov
mov
or
in
or
fwait
int3
mov
pop
xchg
notb
jmp
pop
mov
mov
ret
lods
lds
and
push
or
in
idivl
sbb
lds
test
mov
sub
cmp
cmp
mov
pop
inc
hlt
aam
mov
inc
sbb
mov
je
fsubs
cmpsl
mov
mov
mov
test
add
mov
sbb
ds
mov
pop
xchg
pop
sub
out
push
into
xchg
adc
sub
repnz
lods
add
notb
or
das
bound
push
add
sbb
push
dec
mov
xchg
in
push
lret
push
inc
mov
loope
mov
gs
inc
mov
std
aaa
push
insl
scas
xchg
and
or
push
mov
ds
and
popf
mov
push
sub
lret
inc
lods
adc
sbb
fsubl
sahf
mov
push
stos
adc
pop
xor
pop
pusha
add
ds
mov
mov
ds
imul
xchg
insb
mov
mov
enter
popf
fadds
or
lahf
or
and
jle
and
xorb
fs
rcr
orl
fbld
scas
imul
dec
or
out
int3
loop
xchg
lcall
and
aam
and
xor
xor
lcall
push
push
and
sbb
lret
push
ja
outsb
nop
jmp
push
sarl
adc
adc
in
mov
dec
mov
add
inc
pop
add
mov
sbb
mov
movsl
jecxz,pt
notb
jbe
std
sti
int3
pushf
and
lahf
add
loopne
and
cmc
inc
push
aam
in
fisttps
push
or
mov
push
cmp
lods
xor
insl
add
addr16
cld
mov
daa
ds
das
inc
inc
aaa
bound
sub
movl
add
lcall
pop
or
pop
or
inc
xchg
add
pop
xchg
fsubl
data16
mov
minps
or
out
mov
add
and
push
mov
nop
das
in
call
je
add
xlat
out
cmc
aas
outsb
mov
iret
pusha
out
dec
lods
aam
sbb
ljmp
jl
repnz
in
pop
in
push
in
rcrb
imul
aas
popf
mov
pusha
pop
add
notl
lds
push
and
cwtl
stos
inc
pop
sbb
inc
es
stos
mov
call
gs
xchg
cmp
push
and
add
jp
clc
cli
jae
les
sub
iret
inc
push
icebp
fistpl
jecxz
cwtl
xchg
fwait
iret
inc
adc
icebp
xchg
xchg
cli
shll
sbb
adc
pop
mov
hlt
dec
cmp
xbegin
xchg
fwait
jge
sub
adcb
pop
sbb
adc
loopne
adc
jno
inc
cmpsl
mov
sbb
fldcw
popa
pop
cmp
sahf
je
mov
inc
lods
dec
scas
inc
mov
cltd
aaa
lods
inc
inc
push
xor
lret
cmp
cmp
in
fldl
leave
cmovb
ja
and
adc
lods
and
jo
icebp
cmp
adcb
cs
or
jge
push
cld
sahf
push
push
loopne
loope
xor
pop
xor
add
xchg
pop
aam
cmp
sbb
cmp
repnz
dec
fs
mov
jo
sahf
bound
mov
stos
incl
out
inc
sbb
dec
movsb
inc
enter
pop
xchg
adc
mov
neg
jnp
pop
imul
or
cmp
mov
or
enter
lods
pop
pushf
scas
ljmp
lods
dec
sbb
inc
jge
fcoms
push
jecxz
cmp
pop
or
push
mov
pushf
ss
shr
and
clc
loopne
fisttps
data16
dec
jp
scas
push
dec
enter
pop
clc
repnz
or
or
xor
jne
pop
loope
fcmovbe
aas
fdivr
fsub
adc
cmp
ret
cmpb
aas
bound
or
and
or
ret
lret
enter
scas
dec
cmp
aam
lret
in
push
push
ret
shld
adc
into
mov
jge
icebp
jns
mov
mov
test
loop
lret
movsl
dec
sbbl
and
mov
push
sbb
xchg
mov
clc
mov
addb
hlt
shlb
cld
mov
out
lds
scas
sub
bound
push
mov
rcrb
outsl
ds
mov
jne
jb
daa
loop
vminps
mov
bound
push
fisubs
mov
add
lret
mov
jns
mov
inc
mov
fs
inc
mov
shrl
pusha
test
lcall
push
lret
sub
enter
loop
pop
mov
ja
fnstenv
out
orl
adc
push
push
clc
cmp
out
fwait
inc
mov
sub
adc
scas
lea
jnp
imul
pop
mov
fs
in
pop
testl
shll
das
ja
sarl
jne
xchg
sbb
sub
xor
negl
test
mov
test
xor
in
shrb
xchg
imul
cmp
pop
call
jg
push
into
push
leave
mov
ljmp
xor
xchg
dec
cltd
lea
fisubrl
and
pop
jl
mov
sbb
pop
mov
mov
das
shl
sub
jno
fcmovnbe
in
leave
popa
hlt
icebp
and
xor
mov
and
push
cmp
das
imul
mov
sbb
test
cmc
pushl
cmp
pop
pushf
arpl
sti
sbb
ss
cmp
je
mov
shlb
cmpsl
shll
mov
roll
xchg
push
xor
fcmovu
fstpt
mov
test
imul
sbb
xlat
xor
push
mov
in
mov
clc
arpl
pushf
mov
dec
loope
popf
jb
mov
push
push
loopne
xchg
imull
aad
cs
mov
xchg
and
jl
pop
shrb
in
js
add
push
add
sbb
nop
or
cld
mov
adc
sub
clc
std
sbb
shr
aad
das
cmp
mov
jmp
jne
add
repnz
xchg
fildl
fdivs
dec
adc
push
gs
gs
adc
jge
loopne
ret
scas
out
int3
jne
or
rcrb
push
jnp
push
dec
test
adc
in
es
scas
mov
pop
add
jmp
sbb
lret
in
repz
pop
inc
lods
lods
push
pusha
mov
sub
xor
fisubrl
out
lret
std
pop
daa
cmp
std
ret
bound
inc
rorb
dec
cmpsb
lds
ret
ja
ror
cmpsb
pop
jp
imul
loope
mov
adc
fcomi
call
mov
les
mov
push
dec
adc
jge
cmpsb
shrb
mov
pop
push
fnsave
dec
dec
popa
fstpt
ret
mov
into
or
push
mov
mov
mov
xchg
xor
jnp
adc
in
outsl
xlat
jo
test
cs
mov
ret
xor
stos
cmp
xchg
jae
push
mov
pop
rorl
nop
popf
lea
and
jns
mov
adc
popa
sbb
rcll
int3
jne
push
or
jns
jb
dec
xchg
jae
shll
aaa
outsl
push
sarb
push
sub
imul
inc
xor
lods
lret
lahf
je
adc
fidivs
cmpsb
mov
pop
xchg
mov
lcall
movsl
xor
enter
loope
push
and
add
clc
into
ret
out
xor
mov
lods
mov
pop
add
int3
mov
rcrb
inc
ss
jo
mov
mov
in
inc
lahf
iret
insb
lods
je
std
adc
lret
ljmp
push
mov
stos
mov
jg
das
lret
add
mov
push
jmp
mov
and
ret
dec
xchg
add
jecxz
dec
sbb
mov
pusha
xchg
leave
stos
dec
inc
sbb
ror
lds
icebp
mov
mov
out
clc
cli
jmp
mov
mov
in
lea
nop
mov
push
pop
sub
cltd
call
xor
jle
cmp
js
add
xchg
inc
and
adc
insb
iret
ja
aas
inc
scas
lret
inc
imul
pop
xlat
setle
aad
pop
xor
jnp
mov
mov
rorb
xchg
dec
and
lcall
cmp
sub
cmp
or
insb
cmpsb
std
dec
hlt
sti
mov
imul
xlat
arpl
push
das
adc
test
cmpsb
aas
divb
pop
cwtl
loopne
push
fisubl
xor
lds
sub
clflush
sub
insl
pop
jbe
pop
popf
xchg
xorb
push
lret
jno
sub
xchg
fimuls
xchg
lods
insl
mov
icebp
or
cmp
jne
add
movsl
imul
out
ljmp
pop
stos
xor
inc
fsubr
and
dec
pop
imul
sahf
sarb
mov
mov
ficomps
inc
xchg
sub
adc
and
test
mov
shlb
jmp
inc
dec
shl
std
icebp
lods
mov
jns
cld
xchg
repz
out
ftst
push
in
and
dec
pop
rclb
or
cli
sbb
push
das
xorl
stos
jbe
cmc
lds
paddsb
ret
mov
out
pop
or
cs
dec
das
push
push
mov
mov
or
repnz
add
fnstsw
aam
pop
jbe
sub
pop
dec
dec
mov
int3
lret
xor
and
sbb
mov
bound
xchg
fistl
popa
leave
jo
mov
sub
xchg
sbb
dec
xlat
mov
ficomps
mov
and
sub
xchg
dec
dec
lods
cmp
push
adc
dec
aaa
xchg
jae
add
jbe
push
cmpsl
jne
fistps
jns
xor
lock
mov
aam
lahf
cmc
inc
mov
popa
inc
inc
rolb
push
addr16
push
rsqrtps
shrl
push
jmp
mov
mov
gs
xchg
jp
or
sbb
add
adc
xchg
adc
imul
jge
sahf
jg
out
push
inc
pop
mov
or
fptan
xor
iret
inc
das
out
or
mov
dec
cli
scas
stos
pop
push
arpl
jle
adc
sub
sub
iret
mov
movsl
cmpl
loope
jmp
pop
in
adc
mov
jb
bound
fidivrl
xchg
sbb
and
adc
mov
add
movsb
push
inc
mov
push
inc
repz
jp
pop
jmp
sbb
xchg
sbb
lock
dec
repz
loope
dec
inc
aaa
mov
pop
pop
inc
icebp
ja
test
shrb
mov
xchg
push
sahf
insl
cmpsl
mov
xchg
and
jge
pop
jo
je
dec
jns
xchg
add
test
jo
popa
sahf
mov
xchg
subb
xchg
mov
nop
stos
adc
xchg
adc
pop
scas
xor
das
xchg
xchg
in
sub
imul
and
out
xchg
jns
test
iret
jne
xchg
loopne
rcl
or
xchg
push
aad
jl
pop
mov
mov
sbb
push
add
pop
sub
sar
mov
or
push
imul
lods
sahf
loope
adc
out
inc
inc
cmp
mov
rcrb
or
icebp
cmpsb
aad
cmp
cmp
gs
jb
ss
inc
cld
cmc
push
push
inc
ret
sbb
sbb
cld
and
add
cmp
stc
or
adc
push
cld
push
inc
cmp
adc
xor
inc
pop
mov
in
hlt
push
inc
mov
mov
test
xchg
fcoml
sbb
jmp
cmp
and
sbb
fsubrl
push
dec
jne
xor
popa
xchg
aam
mov
mov
out
add
mov
divb
loopne
sbb
or
sub
and
sbb
hlt
cmc
or
xor
xchg
fs
sub
cli
repz
or
aad
sbb
pop
out
cld
sub
inc
and
scas
ss
flds
nop
jae
mov
xchg
or
jecxz
mov
lds
add
or
sub
aam
test
push
jle
in
imul
scas
push
lret
out
ja
sbb
cmp
or
inc
ds
xchg
jp
in
pop
notl
push
lcall
loopne
test
mov
pop
cmp
mov
enter
jge
or
xor
push
call
fidivrl
push
pushl
lret
mov
les
or
cmp
lea
add
sub
xchg
aam
jnp
stos
cltd
fcoms
xor
sbb
rcll
dec
pop
sub
jle
jge
cmc
jb
imul
cmpsb
xor
push
pop
mov
push
fnsave
fistpll
pop
in
fnstsw
jecxz
inc
mov
pop
jp
xchg
lods
cmp
bound
xchg
jge
test
xchg
pop
cmp
add
dec
out
xor
or
loop
outsb
mov
and
outsb
mov
int
and
inc
js
mov
cmp
fistpl
add
fs
and
shll
repz
sbb
lahf
mov
leave
mov
mov
add
mov
cld
jecxz
nop
push
jp
popf
je
sar
shll
fmull
adc
push
lret
stc
jno
nop
fisubl
aaa
lods
jmp
lods
lret
cmp
adc
dec
fisubl
clc
jns
cmp
insb
mov
sub
je
es
in
mov
mov
dec
jno
mov
push
mov
repz
shl
mov
mov
gs
mov
ud2
ds
xchg
jo
xchg
in
xor
fbstp
adc
mov
das
jmp
ret
data16
xor
leave
xchg
sti
sub
fst
jge
imul
lea
mov
or
leave
subl
pop
sub
jg
bound
xorb
lahf
iret
or
sbb
nop/reserved
out
push
or
mov
mov
lods
lock
mov
test
push
push
mov
sti
aad
pop
out
ret
pop
lea
sbb
adc
inc
insb
pop
sub
and
adc
sbb
xor
push
or
es
mov
cmp
sub
fst
xchg
imul
cld
jb
les
push
push
enter
or
or
repnz
sub
nop
pop
bound
scas
push
pop
cmp
mov
outsb
inc
pop
xchg
test
movsb
push
cwtl
addl
test
data16
jge
mov
dec
icebp
or
sub
sti
mov
lods
or
pop
sub
inc
fisubl
sbb
ja
cltd
shrb
xchg
int
pop
ret
or
mov
xchg
hlt
sbb
mov
dec
icebp
dec
push
shll
sub
test
jge
daa
inc
lret
jnp
push
or
inc
int3
mulb
add
fisubl
mov
sbb
or
sahf
cs
notl
rclb
pop
or
repz
ret
cli
mov
in
scas
jnp
cli
mov
rolb
gs
clc
rcrb
push
jno
pop
fstpt
fs
xchg
add
aas
and
daa
xchg
xchg
sbb
adc
add
lcall
setbe
cld
jae
fwait
push
xor
jp
gs
sbb
sahf
js
jae
dec
jb
stos
movsb
push
pop
rorl
mov
test
movsb
xchg
je
lahf
inc
mov
fdivr
out
test
or
sub
push
jge
insl
je
fs
xchg
mov
movsb
aam
in
hlt
fucom
int
cmp
and
push
jge
insl
je
fs
xchg
mov
movsb
aam
in
hlt
fucom
int
cmp
and
push
jge
insl
je
gs
nop
mov
mov
in
lock
leave
or
sub
mov
jge
insl
je
in
xchg
mov
movsb
cli
mov
mov
nop
jmp
into
mov
xchg
mov
adc
pop
xor
cmp
pusha
or
cmp
jmp
sarb
in
add
imul
sub
jo
cmp
jmp
sarb
mov
jns
dec
push
cmp
daa
sub
jne
jl
jle
mov
cltd
rorl
rolb
lcall
call
mov
pop
in
out
int
stc
sub
push
mov
inc
ljmp
add
imul
pop
mov
mov
sbb
push
hlt
shll
push
dec
add
push
loopne
fsts
lds
int3
xor
push
xchg
cwtl
imul
lahf
push
int3
mov
insb
jb
jg
in
lret
les
fildl
enter
xchg
jl
cmpsb
mov
cmp
mov
push
sarl
adc
pop
adc
push
jns
insl
fsubrs
jns
sbb
neg
stc
nop
jmp
sarb
mov
jns
imul
cmp
pusha
sbb
stc
stc
nop
lds
cltd
fldl
or
inc
or
dec
cmp
imul
xchg
loop
lock
aad
xchg
mov
cmpsl
gs
sbb
jne
and
jl
pop
jmp
mov
shrb
add
imul
cmp
pusha
sbb
cmp
jmp
sarb
mov
jns
imul
cmp
pusha
sbb
cmp
rcrl
xchg
push
sbb
xchg
movsl
in
out
mov
push
adc
pop
sub
or
sahf
bound
cld
stc
cmp
mov
cmpsl
xor
cltd
es
loop
dec
lods
adc
jmp
jo
inc
aaa
out
cmp
mov
gs
inc
out
or
les
lcall
inc
pop
sub
xchg
jmp
out
arpl
inc
insl
xor
and
les
pop
out
bound
mov
lods
cld
and
mov
repnz
jmp
cmp
mulb
mov
sbb
cld
cld
and
cld
test
jns
aas
repz
add
xor
xchg
sar
stos
icebp
xorb
andb
cmc
popf
xor
test
and
shr
mov
insl
loope
mov
or
pop
sbb
adc
or
jge
cwtl
out
pop
js
daa
out
xchg
cltd
divb
adcl
mov
cmp
ror
into
lret
pop
jne
movsb
cmpsl
out
lret
pop
add
mov
aas
add
push
push
data16
dec
adc
adc
pop
push
cs
jl
mov
test
mov
push
sbb
cmp
xor
pop
inc
xchg
push
mov
lret
jo
push
fidivs
sub
pop
cmp
stc
divl
push
sbb
cli
xchg
test
xor
bound
mov
pop
adc
fldenv
cltd
loopne
jbe
mov
jp
pop
in
jmp
scas
adc
dec
lock
cmp
arpl
jo
repnz
insl
xchg
scas
vcvtdq2pd
jmp
push
sub
lock
test
aam
out
pop
inc
mov
sub
push
push
push
nop
sub
mov
lea
ret
xchg
lock
push
repnz
add
test
push
pop
leave
sub
push
imul
popl
sbb
cmpsb
mov
push
push
das
jl
jle
pop
pop
std
aad
div
jae
into
push
repnz
call
imul
pop
mov
cmp
mov
enter
pop
xchg
push
or
pop
cli
jb
ss
movsb
test
xorb
or
out
mov
int
leave
test
movsl
data16
adc
sub
dec
fildl
mov
xchg
cmpsb
push
lcall
leave
pop
aas
mov
cld
fcoml
jae
and
push
hlt
movsb
pop
nop
adc
sti
imul
stos
pop
shll
and
mov
mov
mov
enter
mov
inc
mov
pop
inc
das
inc
shl
icebp
pop
inc
mov
mov
dec
shr
test
mov
sahf
cmp
sbb
scas
jne
loopne
sbbl
movsl
mov
addr16
mov
mov
mov
sub
pop
stos
mov
cmc
mov
std
movsl
xchg
hlt
add
sti
ds
loop
mov
or
sub
dec
fldcw
sub
pushf
jb
bound
xor
cld
sti
lret
hlt
clc
ss
inc
pop
test
aaa
or
sbb
mov
loopne
adcl
inc
jge
mov
je
and
pop
ss
mov
or
dec
imul
cmc
enter
dec
outsl
mov
and
je
nop
add
mov
ffree
dec
push
js
fisubrs
mov
mov
xor
movsb
cs
jbe
mov
cli
negl
mov
orb
outsl
ss
push
add
cli
inc
outsl
paddw
and
xor
add
sbb
stos
push
cltd
mov
hlt
push
mov
jmp
aaa
pop
test
add
insl
sub
or
lds
int3
add
xchg
aas
scas
ds
mov
inc
movsl
ret
mov
cmp
jno
xor
sub
rcll
jns
jb
cmpsl
jns
data16
arpl
sub
popf
inc
out
or
icebp
sti
cmp
mov
out
or
in
add
cwtl
pop
mov
inc
jle
popa
fstpt
pop
nop
aaa
mov
mov
pop
leave
xchg
push
pop
and
or
sub
dec
mov
popa
insb
or
scas
fisttps
xchg
sbb
inc
sbb
insb
cmpl
stc
int
je
fildll
xchg
cmp
cmp
or
sti
and
mov
cli
inc
call
out
mov
xchg
sbb
dec
orb
outsb
push
mov
js
pop
jnp
xchg
ds
in
xor
xor
lcall
test
int
push
cwtl
mov
insb
pop
jns
fstpt
jnp
pop
xchg
or
call
test
cmp
addr16
addr16
sbb
popa
cmp
jmp
test
in
adc
inc
cs
xor
rol
fistpl
outsl
mov
pop
int
fiaddl
loope
test
fdivrl
mull
gs
lcall
cmp
dec
sbb
cmp
or
es
rep
xchg
adc
pop
dec
mov
adc
push
lret
mov
cmpsb
xorb
pushf
dec
xchg
adc
faddp
adc
inc
xor
push
and
lret
push
push
pop
pop
pop
cmp
aaa
pop
aad
int
push
scas
xchg
rorb
aas
lods
in
cmp
xchg
mov
or
sbb
adc
xor
pop
lcall
mov
push
fldt
xlat
sbb
insl
movsl
fs
lret
inc
add
cmc
lods
xor
xor
sub
mov
ficoml
addr16
test
scas
pop
or
in
sbb
mov
aaa
jbe
mov
adc
lret
mov
push
and
mov
cmp
push
mov
jmp
sbb
sub
mov
pop
xchg
ret
lock
xchg
scas
cwtl
inc
push
nop
cmp
outsb
test
pop
mov
or
pop
outsb
adc
mov
mov
outsb
insl
add
movsl
rolb
lea
pop
inc
inc
add
adc
dec
mov
adc
push
notl
mov
push
loop
mov
ret
mov
or
sub
dec
mov
scas
stos
mov
dec
repz
mov
movsl
dec
mov
adc
repz
pop
xor
pop
xchg
mov
push
xorl
sbb
mov
mov
test
rclb
ds
and
loop
icebp
clc
push
xchg
lea
std
iret
cs
push
dec
vpcmpgtw
push
xchg
sahf
enter
movsl
sub
pop
outsb
jo
sub
leave
xchg
or
inc
jo
out
xchg
shrl
sub
and
and
lret
dec
xchg
lock
loopne
mov
sub
sbb
iret
xor
and
aas
lret
ljmp
mov
xchg
mov
adc
in
insl
insb
dec
ret
mov
lods
fwait
and
gs
jle
ret
fnstcw
mov
mov
jne
dec
sbb
dec
cmp
pop
or
mov
mov
dec
and
aam
xchg
les
ret
call
loopne
insb
dec
decb
les
cmp
nop
mov
cmp
mov
aad
ja
sbb
mov
cmp
mov
rcrl
fucomi
fwait
cmc
push
fmuls
out
aaa
and
call
pop
daa
xchg
fs
and
fwait
cwtl
and
xor
add
mov
idivl
enter
and
out
arpl
sbb
fidivl
dec
dec
movsl
pop
sar
push
scas
out
repnz
mov
sub
dec
xchg
lds
sbbl
addr16
push
in
and
mov
mov
iret
xchg
mov
sub
and
mov
adc
in
imul
sub
push
add
or
fwait
mov
adc
and
mov
mov
int
add
push
fnstcw
add
insl
add
cmp
xchg
pushf
outsb
mov
pushf
jmp
insb
or
lods
out
fwait
cmc
fisubrs
inc
push
xchg
jnp
insl
xor
sar
movsb
mov
pop
iret
les
sti
adc
stc
lcall
xor
mov
pop
push
xchg
dec
jbe
push
test
inc
cmp
test
gs
test
cltd
pusha
ds
cmp
icebp
orb
pop
mov
fistps
fwait
dec
cmp
mov
jae
xchg
neg
mov
inc
lret
arpl
stc
cmp
adc
insb
ds
fcoms
addr16
pop
repnz
or
sti
dec
cmp
dec
push
repz
mov
nop
add
rorl
or
outsb
push
sbb
fstps
jne
mov
push
dec
mov
addr16
lcall
sub
push
mov
test
scas
or
pop
rorb
data16
jae
aam
xchg
push
out
cltd
dec
pop
lret
lods
imul
inc
ds
xchg
pop
cwtl
sahf
xlat
push
into
xchg
or
scas
ds
sub
xchg
jns
mov
jns
inc
fiadds
rorl
dec
mov
ljmp
imul
xchg
push
lods
mov
insl
add
fnstcw
popa
imul
push
mov
mov
inc
js
xor
xchg
out
xor
inc
loop
cmp
xchg
and
dec
sbb
or
pusha
adc
xlat
stos
je
enter
adc
cmc
mov
cmp
call
inc
stc
nop
js
jb
or
std
clc
adc
mov
pop
xchg
outsb
roll
cld
pusha
in
adc
mov
inc
aam
int
pop
xchg
cmp
arpl
xor
cmp
sbb
rcr
lahf
cmp
pop
mov
sub
or
dec
bound
dec
idivl
mov
mov
xchg
icebp
shrb
jnp
sar
xchg
outsl
cmpb
adc
fisttpl
aaa
push
in
fnstsw
jge
jl
stos
pop
xchg
xchg
negl
cmp
insl
es
xorl
or
cli
push
mov
cmpsb
adc
cmpsb
repz
sub
leave
lret
mov
xchg
decl
leave
cmp
adc
push
jae
notb
mov
push
dec
stc
orl
sbb
xchg
mov
mov
adc
je,pn
lods
mov
into
pop
into
ljmp
adc
sub
pop
and
lds
mov
mov
nop
jae
loop
stc
fimull
and
push
dec
sbb
aas
rorl
mov
cmp
imull
push
push
and
jge,pt
rcl
xchg
xor
sbb
jg
gs
add
arpl
les
cmp
cmpsb
sub
xor
negb
rcl
in
mov
pop
mov
jmp
mov
dec
insb
jnp
lea
cmp
sub
pop
ds
shlb
mov
add
pop
pushf
mov
int
dec
rcll
fcoms
dec
mov
orl
sbb
ret
in
cs
lods
sbb
mov
js
int3
jae
aas
ds
outsl
scas
adc
jl
mov
pop
jl
push
pop
and
cli
sbb
pop
movsb
or
mov
xchg
push
mov
lret
mov
pop
imul
in
aaa
mov
mulb
repnz
jg
inc
push
or
sarl
inc
andb
or
div
mov
add
jecxz
mov
stos
sub
xchg
xchg
lahf
pusha
dec
out
push
pop
jge
adc
jb
cmc
or
pushw
push
add
or
inc
pop
sbb
xchg
popf
addr16
fbstp
addl
xor
and
and
cltd
sbb
scas
popf
pop
sbb
xchg
xchg
and
sahf
or
sbb
inc
aam
xor
bound
movsb
xchg
inc
repz
test
sub
nop
dec
out
test
hlt
mov
fcoml
add
mov
dec
enter
or
add
mov
sbb
mov
fwait
ljmp
adc
push
lods
pop
sub
fwait
stos
fsts
mov
mov
adc
cmp
test
xchg
bound
dec
stos
fwait
cmp
jbe
cli
outsb
aas
mov
sub
adcb
addr16
push
mov
aaa
adc
je
sahf
bswap
pusha
add
sub
cwtl
out
loope
mov
mull
daa
cmc
pushf
aas
jp
sbb
inc
adc
ss
xlat
xchg
mov
lret
jns
mov
rcrb
icebp
xor
xor
push
stos
icebp
or
inc
mov
jl
mov
stos
xor
push
shr
fmul
push
xchg
psraw
cmc
nop
sbb
sbb
call
push
stos
iret
clc
hlt
test
inc
xchg
test
lds
sub
insb
xor
rcr
sub
add
push
xchg
lahf
xlat
clc
imulb
js
loop
arpl
and
and
jl
fstp
adc
sbb
adc
ret
pop
scas
or
or
push
dec
sar
test
cwtl
or
fmul
or
test
dec
dec
jb
out
aam
mov
sbb
jne
add
out
shrb
pop
sahf
dec
push
dec
sub
incl
sarb
mov
and
pusha
mov
push
xor
lock
dec
movsb
cmp
mov
sbb
cmp
cmpb
xor
xchg
mov
cli
mov
iret
sbb
mov
insb
aam
xchg
nop
adc
lods
insl
pop
fcom
faddl
daa
jmp
jl
call
lret
xor
xor
mov
clc
jle
in
mov
fs
sar
cmpsb
in
sbb
dec
dec
lds
mov
or
push
outsl
mov
mov
xor
push
push
daa
aam
fstpl
inc
cmp
dec
mov
adc
loop
aaa
xor
sub
jbe
mov
aad
jmp
mov
sbb
fistps
sbb
repz
jo
cmp
insb
stos
mov
stos
mov
dec
addr16
jb
iret
les
or
inc
insb
and
movsl
scas
leave
pusha
sub
sbb
ret
push
mov
fcmovb
and
hlt
fdivrs
mov
rclb
jg
lret
in
or
in
sbb
inc
mov
add
dec
jle,pn
sub
sub
imul
jb
ljmp
cwtl
pop
push
adc
repnz
mov
or
ret
hlt
jge
jbe
and
movsb
int3
lods
cmp
jle
out
sub
idivb
fistpll
and
xor
pop
hlt
je
stc
rolb
ret
xlat
cwtl
filds
push
fcmovne
cmp
push
fs
mov
pusha
xchg
and
xchg
cmpsb
jmp
jg
dec
push
rcrl
lods
icebp
out
cmp
mov
test
outsl
sub
lods
dec
ljmp
or
repz
pop
lods
in
lds
push
pop
add
fistpl
movsl
pop
mov
les
or
fsubs
push
sbb
imul
insl
jmp
lcall
mov
das
or
adc
xchg
dec
sbb
das
pushaw
out
mov
xor
cmp
imul
sbb
mov
rcrb
add
sbb
in
mov
push
adc
xchg
data16
jg
cmp
jge
xor
or
repz
push
xor
xor
lcall
xor
mov
xor
pushf
je
lea
xchg
shr
add
in
push
sub
roll
mov
rorb
outsb
fwait
fwait
dec
ja
in
sub
jl
jns
jg
cmpsb
xchg
out
mov
xor
imul
dec
addr16
call
stc
mov
cmc
adc
dec
mov
testb
test
mov
data16
cmp
cld
inc
fistpl
cwtl
in
xor
sarb
inc
and
int
stc
or
popf
adc
add
je
push
popl
call
test
out
filds
and
addl
test
dec
cmc
adc
inc
shll
add
mov
jno
sbb
subb
jl
pop
shl
lock
push
adc
aas
cwtl
int
or
addr16
rorb
bound
and
into
pop
lcall
add
or
cmp
fldl
mov
pop
adc
gs
sbbl
out
push
ljmp
add
mov
jp
andb
lcall
inc
fldt
rcl
jbe
fsubr
jecxz
inc
clc
sbb
add
movsb
dec
out
xchg
xchg
hlt
mov
cmpb
movsl
fistps
push
push
adc
push
dec
adc
rorb
dec
or
imul
jl
pop
ds
adc
imul
mov
push
call
pop
mov
or
xchg
pop
loopne
and
in
popf
je
sahf
cmp
mov
stc
inc
xchg
push
push
pop
enter
imul
es
je
jp
dec
pop
pop
test
pop
negl
jecxz
jmp
outsb
test
int
dec
sub
mov
sbb
cmp
neg
out
sahf
push
dec
push
rcll
or
stc
mov
dec
xor
sbb
js
push
ret
pop
std
mov
mov
jmp
add
insb
aam
xor
adc
fstpt
hlt
and
cld
lcall
repnz
xor
push
push
jmp
push
jmp
pop
int
xchg
es
fcmovu
popa
shrl
cltd
pop
sti
sbb
cltd
test
adc
imul
out
ror
cli
pop
mov
fsts
sub
push
inc
imul
ret
xchg
jg
mov
loope
popa
sbb
lds
mov
dec
cmp
fstps
mov
cmp
fadds
or
add
dec
sbb
rcrb
ss
clc
loop
mov
aaa
sbb
in
jns
dec
aas
dec
pop
mov
adc
iret
add
shll
push
daa
iret
stos
cmp
add
mov
repz
fisttps
outsl
scas
gs
add
lea
xchg
adcb
in
pop
ss
add
mov
sub
push
xchg
movsl
add
movb
inc
or
aam
and
out
repnz
jecxz
cmp
aam
stos
pop
mov
push
cmp
inc
cmp
clc
das
pop
pushf
shrb
sbb
insl
pop
sti
hlt
sub
shl
cmp
gs
cmc
mov
add
mov
cwtl
aas
adc
sbb
mov
add
adc
jmp
or
fldt
js
dec
dec
rcll
icebp
scas
popa
orl
movsb
imul
xor
sub
sub
xor
pop
sahf
xor
mov
es
outsl
test
jge
shrb
add
mov
mov
mov
orl
je
dec
call
aad
fdivl
scas
dec
xor
jne
cwtl
pop
stos
pop
pushf
and
add
cwtl
xor
add
out
add
inc
repz
mov
mov
inc
dec
sti
adc
loope
popf
imul
aaa
dec
push
and
mov
int3
stos
ljmp
or
push
aad
into
outsb
repz
int
xchg
out
stos
outsb
addr16
and
sbb
aad
bnd
dec
popa
add
nop
pop
push
ret
test
outsl
shlb
sbb
add
insl
jo
adc
mov
or
lods
push
xor
push
aaa
es
clc
adc
mov
shlb
ret
fildll
add
scas
sub
cmp
lds
enter
lcall
repnz
cli
gs
pop
mov
movsl
gs
mov
xor
mov
add
add
mov
es
icebp
fcmovb
adc
shll
pop
add
xor
rorl
imul
clc
push
imul
shlb
loopne
xchg
pop
add
and
xchg
mov
jl
pop
les
ds
lods
mov
cmp
jp
inc
aam
jo
xor
mov
fstpl
rcrl
fstp
xor
jge
dec
js
pop
jmp
scas
std
bound
out
decl
mov
test
inc
shll
add
fisubl
and
daa
fstl
fildll
mul
int
into
rclb
in
insb
pop
test
mov
loop
and
xor
adc
cmp
and
shll
xor
int
cmp
fst
push
test
call
xor
loope
jae
dec
inc
add
and
mov
mov
std
adc
xor
fs
push
push
push
pop
push
xor
xchg
ret
inc
hlt
sub
test
inc
cmp
leave
sarb
mov
jns
imul
cmp
pusha
sbb
cmp
jmp
sarb
mov
jns
imul
cmp
pusha
sbb
cmp
jmp
sarb
mov
jns
imul
cmp
pusha
sbb
cmp
jmp
sarb
dec
add
ret
mov
ds
mov
lahf
out
notb
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
test
mov
mov
fadd
dec
jg
and
adc
add
push
popa
push
inc
loop
xchg
mov
icebp
loope
shl
mov
inc
adc
add
sbb
jbe
ds
mov
fdiv
mov
clc
shl
shll
add
push
pusha
sub
aas
sub
call
stc
filds
cmp
fisttpll
shlb
jns
xor
jno
fidivl
push
push
es
add
icebp
push
fs
lret
lock
fisubs
jno
test
push
mov
js
shrl
stc
xchg
popa
out
and
xchg
push
addr16
lods
xor
push
push
adc
aam
stc
pop
hlt
incb
cmp
loopne
mov
push
fisubs
jno
lahf
addr16
jbe
jns
fwait
icebp
xchg
sub
jns
push
es
xchg
insl
es
jae
add
push
popa
sahf
push
jp
jns
or
orl
sbb
ret
test
jmp
add
push
fnsave
mov
and
scas
loope
rcll
shlb
and
push
add
jno
popa
push
push
jbe
out
mov
loopne
xchg
into
subl
dec
inc
and
push
jne
xor
add
sub
bswap
aam
aam
xlat
subl
jp
pop
es
dec
fs
pop
cmp
pop
aaa
cs
in
loope
shl
roll
push
and
adc
add
push
popa
push
jbe
xchg
mov
icebp
loope
shl
roll
push
and
adc
add
push
popa
push
jbe
xchg
jbe
or
gs
cwtl
push
inc
in
scas
or
out
add
pop
sbb
inc
ret
push
mov
push
ss
xchg
push
sub
xchg
lahf
out
test
cmp
push
repz
xor
mov
loope
in
ret
mov
push
mov
scas
stc
lds
adc
mov
cld
in
pop
jge
push
xor
pop
addl
fs
inc
test
popa
lods
mov
jb
mov
or
adc
jae
je
mov
adc
lds
xchg
lahf
sub
cltd
mov
or
in
cmpsl
arpl
pop
enter
sbb
push
mov
mov
leave
div
aaa
add
inc
inc
push
daa
fnsave
xor
inc
cmc
and
jae
pop
popf
pushf
sbbl
mov
xchg
outsl
add
adc
xchg
push
xor
pop
loop
dec
cmpsb
push
xchg
mov
mov
call
push
daa
out
cmp
mov
lods
stc
test
fdivrl
push
push
add
mov
xchg
int3
mov
andb
test
xor
xchg
clc
outsl
rorl
leave
sbb
sbb
jecxz
or
aas
fdivrs
cmpsl
vmovupd
add
jne
out
lcall
shl
sbb
popf
xchg
lcall
add
adc
movsl
pop
outsb
call
lock
cmp
xchg
leave
jecxz
std
inc
sub
push
dec
nop
xlat
cld
mov
jp
or
shlb
cs
iret
in
orl
lcall
popa
xor
pop
cmp
fst
jno
cmc
and
add
andb
fisubl
pop
daa
lcall
rcr
enter
xchg
cmpsb
dec
in
xchg
out
andl
lods
shr
xchg
cmp
lods
lahf
into
or
lea
div
iret
xor
jge
xchg
cltd
xlat
jbe
push
adc
cwtl
int3
sbb
dec
aaa
mov
sbb
aad
pop
sbb
xor
or
mov
pop
stos
mov
std
sub
loope
lret
push
and
sbb
and
imull
cli
lods
leave
imul
and
aaa
in
std
pop
inc
roll
test
xchg
push
popf
lods
ficompl
loop
fwait
sub
popa
add
hlt
inc
ja
cmpsb
aaa
push
mov
push
cmp
cmp
jns
mov
adc
test
insl
adc
pusha
aad
xor
ja
ljmp
inc
cmp
cmc
cmpsb
lcall
enter
mov
sub
jne
test
lea
sub
jb
mov
xchg
sbb
jae
push
dec
sub
or
push
hlt
ljmp
cmpsl
mov
daa
jmp
push
dec
and
outsl
jnp
mov
in
rcr
jne
daa
sbb
xchg
mov
push
movsl
mov
and
xchg
loopne
pop
fsubs
add
cli
sbb
jne
xor
rol
add
fldt
push
push
outsl
push
rol
push
fdivrp
and
andb
dec
outsb
mov
push
xchg
rcrl
pop
mov
xchg
push
mov
fst
xchg
dec
push
xchg
ss
jge
adc
stc
repnz
pusha
cs
sub
into
pop
and
bndstx
sbb
inc
jb
pop
adc
cmp
pop
jo
ficoms
and
inc
xor
sbb
adc
xlat
ja
test
test
pusha
ljmp
daa
pop
jns
insl
push
pop
in
xchg
push
sahf
hlt
xlat
movsb
sub
xchg
leave
jl
inc
ffree
xchg
in
dec
fldt
daa
pop
imul
push
arpl
mov
leave
pushf
les
mov
xchg
int
cmpsl
jb
mov
xlat
gs
aad
pop
mov
repz
lods
fcomps
cmp
pop
mov
cld
imul
xchg
ja
mov
dec
add
or
out
mov
mov
mov
add
repz
movsl
aad
pop
inc
ljmp
mov
fs
fmul
repz
jp
cmp
insb
xchg
xchg
jns
push
xor
dec
xchg
outsl
daa
notl
gs
pop
xchg
push
sbb
or
xchg
fistpll
outsb
popf
outsl
mov
inc
fists
loopne
inc
mov
ljmp
mov
shrl
sahf
popa
popa
rcrb
push
icebp
sbb
jnp
in
sub
or
or
bound
mov
jne
test
jae
enter
mov
push
dec
fmuls
loopne
pop
lds
sbb
adc
or
and
jo
movsb
jl
cmp
ljmp
and
ret
std
out
loope
fcompl
repz
xor
lret
inc
add
pop
pop
aam
fdivs
mov
ja
popa
add
dec
push
mov
repz
inc
or
lds
aaa
xor
mov
xchg
loope
outsb
adc
int3
jecxz
jle
cmpsb
mov
fstpt
xchg
mov
jp
ret
lahf
mov
xchg
xor
cwtl
add
idivl
or
ja
inc
test
test
pop
and
sbb
mov
aas
push
ret
push
leave
cmpsl
scas
pop
das
jg
and
sahf
jb
cmp
pop
stos
es
in
or
ja
ss
dec
push
mov
shll
ret
mov
mov
jae
scas
daa
stos
xchg
adc
into
lcall
pop
jns
sbb
out
movsl
mov
xor
test
pop
inc
stc
ds
inc
mov
scas
inc
push
scas
mov
dec
xlat
push
jg
mov
lret
incl
stos
sub
test
sub
cmpsl
loopne
bound
mov
pushf
rcl
fists
jb
sbb
js
mov
fstl
mov
shlb
mov
aad
sbb
mov
ret
xor
push
addr16
shlb
xchg
xor
sbb
pushf
dec
out
or
test
dec
aas
daa
adc
xor
bound
jns
push
mov
cmp
or
pop
insb
shll
pop
das
fs
lret
lahf
sbb
mov
outsb
arpl
in
dec
dec
dec
and
aaa
xlat
sbb
mov
and
xor
xchg
adc
add
daa
adc
pop
fcomp
sub
push
int3
mov
or
push
pop
push
pop
jmp
mov
mov
cmpl
or
mov
subl
fwait
arpl
pop
mov
inc
mov
fs
sub
test
out
fldl
leave
movsb
fs
scas
lods
shll
mov
lret
push
cmp
jno
loope
push
xchg
push
ret
mov
movsl
jne
test
stos
stos
imul
imul
dec
imull
ljmp
pop
xchg
sub
incl
icebp
outsl
jae
xchg
dec
mov
std
add
push
push
movsb
pop
mov
enter
aaa
dec
or
hlt
out
mov
cli
dec
sub
fmull
pusha
clc
dec
sti
jb
and
rcl
cmp
fldl
cwtl
imul
imul
fwait
lds
insb
rorb
aaa
xchg
adc
jge
push
sub
sub
jge
adc
mov
test
test
xchg
js
pushf
aam
lods
mov
cmp
addr16
and
out
sbb
xchg
fadds
test
jmp
pop
fists
sub
pop
roll
mov
sub
push
fcoml
insb
pusha
sbb
into
xor
arpl
add
xchg
nop
pusha
adc
mov
inc
aaa
call
inc
or
mov
jbe
xor
das
shll
mov
cmp
sub
and
xlat
push
cmp
pop
xchg
dec
and
popf
loope
dec
sti
cltd
addr16
popf
hlt
bound
js
pushf
cmp
testb
dec
in
or
jge
pop
out
adc
mov
stc
jno
jle
xlat
cmc
pop
xchg
clc
pop
fimull
daa
pushf
push
clc
icebp
int
fcomps
mov
roll
pusha
loop
add
jae
jb
lret
insl
outsb
cmpb
push
cmp
es
sbb
xchg
in
ljmp
push
mov
push
dec
mov
in
sahf
dec
and
or
imul
sbb
adc
lret
inc
xchg
push
xor
divl
dec
cli
imul
jb
and
pop
push
arpl
push
inc
sbb
mov
ret
jmp
outsl
stc
sbb
addl
shll
mov
add
ja
pushf
imul
repz
aas
mov
dec
outsl
lret
jmp
lods
aad
aam
or
repnz
lret
arpl
mov
stos
int3
pop
clc
and
jo
mov
test
pop
mov
cmp
sti
in
in
inc
insb
pop
les
sub
movsl
dec
int
outsl
jecxz
or
jo
cmp
jbe
inc
xchg
cmp
aam
out
iret
and
popf
outsb
inc
sub
pcmpeqb
es
adc
dec
jl
in
dec
sarb
inc
pop
std
std
pop
lahf
sahf
in
xchg
jecxz
push
pop
mov
xor
mov
dec
imulb
xchg
push
inc
outsl
lea
jl
decl
inc
lret
inc
rcrl
or
test
sbb
jmp
ret
cli
xchg
adc
mov
popw
jg
sti
loope
mov
xchg
das
add
push
pop
lret
mov
fisubs
lcall
fildll
jle
lahf
je
mov
scas
mov
pop
sbbl
fdivrl
mov
aad
pop
xorl
add
mov
daa
adc
adc
jmp
inc
mov
dec
xor
clc
test
push
aas
sub
imul
push
mov
bound
fcmovnu
push
es
in
cmc
xor
lds
xor
mov
aaa
xchg
in
imul
shll
add
dec
xor
ss
jo
dec
jmp
sub
dec
cmp
insl
shrb
jbe
leave
xor
roll
dec
es
xchg
jecxz
xor
cmp
addr16
xchg
adc
mov
jnp
daa
nop
dec
mov
xor
movsl
mov
aad
pop
ret
jbe
cs
sbb
jl
pop
push
and
aas
and
xor
fdivrl
adc
call
push
mov
adc
jecxz
pop
xchg
dec
ret
in
and
push
mov
mov
mov
or
mov
fcom
mov
es
and
push
jmp
inc
mov
pop
jno
insl
sbb
jne
roll
mov
mov
xorl
loopne
pop
cmc
rcr
jp
in
mov
adc
scas
lods
push
mov
mov
movsl
nop
stc
xor
jno
repz
mov
repz
push
adc
out
inc
es
adc
inc
jmp
sub
in
out
mov
imull
push
popf
in
adc
mov
cmpsl
ficoms
jge
add
mov
cwtl
ds
mov
sub
in
adc
enter
push
nop
mov
repnz
ja
mov
jmp
push
inc
mov
jl
add
iret
testl
adc
fwait
inc
ja
ljmp
push
clc
add
mov
int3
out
cmc
cmp
and
xor
cmp
icebp
fisttpll
fldl
divl
mov
jge
outsl
sub
pop
test
and
fwait
cmc
aad
pushf
inc
jmp
xchg
inc
mov
jl
push
cmp
lcall
negb
dec
sub
pop
add
divl
sbb
clc
jge
and
out
xchg
adc
fsqrt
xlat
out
xchg
stc
fstps
push
pop
inc
mov
push
or
in
and
inc
into
shr
add
mov
mov
sahf
hlt
inc
add
and
xchg
pop
popf
inc
inc
enter
push
iret
pop
and
fmulp
add
lock
mov
pop
xor
lods
neg
and
inc
jg
cmc
xchg
push
xchg
push
inc
jns
pop
fldcw
xchg
sub
inc
scas
jbe
pop
fs
push
xchg
dec
shlb
xchg
cmp
lock
cwtl
addr16
xchg
fcmovnu
sub
cld
pop
add
add
inc
loope
add
mov
faddl
xchg
loopne
out
sub
adc
clc
negl
in
ret
mov
fsts
sbb
cmp
jne
cmp
inc
arpl
sbbb
cmp
lods
lea
mov
xor
pop
jo
mov
and
outsb
sbb
hlt
lods
out
pop
pop
sbb
lods
sti
cmp
cmp
lea
mov
mov
add
mov
lcall
push
or
fwait
dec
mov
add
insl
mov
inc
rep
sub
testb
or
loope
insb
sub
add
xlat
xor
imul
hlt
xor
or
cld
in
xlat
jno
imul
mov
sar
xchg
inc
loopne
push
insl
sti
test
popf
mov
inc
mov
and
push
mov
cmp
aaa
cmp
pop
int
daa
mov
xchg
add
push
mov
iret
mov
jbe
jecxz
add
fbstp
sbb
movsl
bswap
sub
xchg
jl
dec
sbb
sub
rol
ret
mov
mov
adc
inc
pop
xor
and
mov
cmp
mov
stos
pop
loopne
inc
add
push
dec
rorb
push
xor
cmpsl
ret
imul
ja
xchg
add
mov
lcall
in
pop
outsl
stc
movsb
xor
loopne
jmp
mov
out
mov
pop
pop
stos
push
jecxz
and
cmpsb
cmpsl
pop
and
orb
jle
cwtl
xor
pop
inc
mov
std
jmp
enter
xor
mov
xor
mov
arpl
jmp
cmp
popa
adc
sbb
jecxz
push
les
lds
daa
lock
rol
packssdw
push
inc
outsb
and
testb
mov
mov
leave
icebp
testl
rcrl
push
and
movsl
inc
jmp
sub
mov
fsubl
repz
popa
dec
xchg
ret
adc
cltd
jbe
cmc
push
lret
mov
mov
sbb
and
xchg
adc
jp
sub
loope
inc
test
sbb
push
int
xlat
cmp
into
scas
push
and
jnp
xchg
aas
lret
outsl
fnstsw
decb
xor
pop
xchg
mov
jnp
push
into
cmp
mull
dec
cmp
mov
xor
aas
jp
lahf
sub
repnz
filds
sbb
and
fcmovnbe
popa
push
or
and
jg,pt
cmp
dec
testb
adc
rep
or
pop
mov
and
das
jns
push
cmc
data16
or
outsb
loope,pt
mov
fsubrs
in
cmc
mov
pop
daa
ficoms
mov
in
orl
xor
cld
pop
jmp
mov
lret
add
scas
mov
adcb
xchg
jmp
inc
or
lret
pop
and
xor
jo
mov
loopne
adc
out
jl
dec
aaa
and
or
adc
imul
loop
pop
push
insl
sbb
imul
sub
jge
and
and
adc
scas
sbb
adcl
or
mov
inc
mov
jnp
mov
sbb
cmp
mov
daa
jmp
inc
addr16
fisttpll
cmp
or
mov
xorb
xchg
mov
shll
movsl
sbb
pushf
mov
cltd
fwait
popf
add
pop
fstl
iret
fadds
je
or
fistl
cmp
testl
movsb
cmp
ss
enter
popf
mov
imul
pushl
pusha
cmp
in
addl
dec
xchg
sub
dec
std
cmp
cltd
xchg
cs
jnp
jmp
fidivs
pop
and
fcomip
mov
jg
movsl
sbb
mov
pusha
xchg
cltd
xchg
in
movsb
and
push
add
dec
jmp
push
rcl
push
and
adc
outsb
pop
sahf
xorl
cli
jns
aas
dec
mov
mov
imul
lods
jge
push
jno
adc
stos
mov
inc
cli
scas
mov
dec
cmp
inc
dec
adc
xchg
mov
xchg
mov
jecxz
pushf
push
dec
mov
lret
pop
int
ljmp
in
pop
rcr
sarb
jb
out
cwtl
sbb
ret
mov
cli
dec
adc
push
pop
push
sub
mov
outsb
shlb
imul
jnp
cmc
cmpsl
daa
fwait
jo
mov
jb
push
loopne
arpl
mov
aad
rcl
or
sub
data16
dec
inc
jb
jp
cmp
jae
and
das
call
int3
jg
and
int
and
pop
mov
daa
jnp
imul
in
sbb
popf
add
test
lock
test
push
outsb
mov
or
popf
ds
sahf
stos
das
or
sbb
aaa
inc
mov
adc
loope
jp
pop
add
sti
inc
shrl
scas
xor
in
mov
lds
into
push
cmc
dec
pop
mov
insb
add
sbb
testl
rcrl
inc
pusha
sub
insl
fs
and
ss
inc
addr16
frstor
test
daa
mov
push
imul
stos
ret
and
ret
jge
mov
js
daa
iret
fdivrl
mov
xorb
outsb
enter
xlat
push
cwtl
out
in
jl
mov
adcb
sbb
loop
or
or
inc
jecxz
outsl
out
mov
negl
mov
mov
sub
mov
rorl
gs
mov
mov
lret
fisttps
inc
repz
movsb
push
cld
lahf
inc
loop
or
jbe
orl
pop
xchg
lret
and
pop
sbb
js
jno
inc
cs
mov
xor
inc
insb
leave
mov
imul
lods
xchg
or
cmp
mov
jmp
xchg
test
fcoms
aad
pop
xor
cmp
add
mov
jle
add
push
sbb
xchg
mov
enter
sub
mov
push
addr16
pop
sahf
stc
inc
cwtl
shr
ss
inc
lret
xor
inc
add
sub
test
ret
mov
jnp
aad
lret
mov
popl
call
je
cld
pusha
movsb
push
in
ss
xchg
jne
dec
mov
ret
push
xchg
jmp
incl
fmul
mov
ss
je
mov
nop
shlb
das
mov
cmpb
jnp
push
bound
inc
add
test
pop
out
outsb
push
lret
les
pusha
insb
and
aam
mov
or
jecxz
ljmp
cmpsl
mov
and
fcmovb
add
out
jne
mov
enter
clc
repnz
aas
mov
xchg
in
das
mov
pop
mov
inc
out
cmpsl
sbbb
ffreep
lock
shll
jle
lods
into
shll
cmc
in
scas
fildl
std
mov
hlt
fiadds
addr16
stos
xlat
in
xor
shl
pop
call
mov
inc
call
push
xchg
sub
hlt
inc
xorl
jnp
adc
cmp
xor
icebp
int
add
sti
ret
jmp
nop
cmp
push
or
inc
imul
mov
fwait
cbtw
shl
ja
cwtl
iret
jmp
push
xor
mov
add
push
aad
dec
insb
mov
xchg
mov
lret
jo
push
pushf
push
jmp
stc
mov
sub
cmpsb
adc
dec
leave
adc
jnp
lahf
xlat
sub
adc
pop
insb
inc
pop
adc
negb
imul
mov
add
rorb
add
xchg
sbb
movsb
xor
loop
aam
les
cmp
inc
jl
or
push
mov
jge
movsl
mov
insb
jl
cld
and
in
dec
push
jle
push
je
scas
pop
dec
inc
inc
add
outsl
cmc
icebp
es
test
jge
jo
lret
stos
fmuls
mov
fadd
ret
fwait
enter
mov
mov
mov
pop
fnstsw
dec
rclb
mov
mov
mov
push
fidivrl
shll
mov
pop
js
repnz
cmpsb
xchg
add
lea
pop
sbb
push
mov
add
xor
and
adc
or
test
test
adc
aam
orl
add
mov
popf
imul
fistpll
icebp
inc
mov
push
dec
flds
pop
sub
clc
js
add
inc
add
adc
xchg
sbb
push
repnz
mov
int
xor
nop
fistps
stos
pop
cmp
jmp
fs
insb
stos
sub
dec
jb
clc
fstpt
andl
out
test
xor
and
adc
add
push
popa
push
jbe
xchg
mov
icebp
loope
shl
roll
push
and
adc
add
push
popa
push
jbe
xchg
mov
push
icebp
loope
shll
roll
push
and
adc
add
inc
popa
push
sahf
inc
xchg
mov
mov
icebp
loope
shll
push
xor
mov
ficomps
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sbb
lret
xor
and
jmp
fwait
pop
stos
xchg
pop
orl
mov
mov
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
arpl
sarb
imul
ret
or
jns
sub
fildl
lret
xor
and
push
fwait
inc
mov
arpl
rcrb
imul
mov
arpl
add
pop
arpl
popa
push
scas
adc
addb
repnz
push
andb
dec
inc
popf
bound
sbb
mov
jl
ljmp
out
imul
xchg
addl
cmp
inc
xchg
leave
pop
clc
sti
push
inc
xchg
cmpsb
shll
sbb
lret
jo
cmpsb
mov
adc
iret
jmp
lcall
addl
cmp
jno
hlt
jecxz
jmp
xor
jle
adc
lcall
sti
cmpsl
negb
test
divl
sbb
jmp
add
popf
cmpsb
adc
into
movsl
dec
insb
cs
dec
imul
cmpsl
push
ret
int3
repnz
loop
dec
fildl
lret
xor
and
push
fwait
inc
mov
arpl
mov
mov
or
cmp
inc
addr16
lret
pop
xchg
insl
adcb
mov
xor
fcoml
sub
sahf
cmp
leave
inc
sti
imul
int3
sbb
lret
sbb
add
js
pusha
mov
xchg
sub
mov
fwait
inc
mov
arpl
mov
mov
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
arpl
mov
mov
or
cmp
sub
fildl
cmpb
popa
popa
xchg
xor
add
ret
xor
and
scas
movq
in
adcl
mov
stc
in
pop
les
fisubl
inc
loop
lds
bound
xchg
ljmp
inc
cli
dec
push
pushf
test
leave
mov
bound
pusha
cmc
repnz
dec
test
push
aam
test
mov
stos
repnz
and
aam
xchg
dec
adc
mov
loopne
cwtl
cld
or
rorb
inc
jno
cmp
pop
cmc
xor
rcll
xchg
sbb
adc
or
mov
push
xchg
int
std
dec
adc
sbb
orl
and
das
or
add
mov
gs
outsb
sbb
dec
mov
cmp
lods
pop
lret
push
addl
scas
xchg
jp
pop
mov
popf
out
adcb
jae
icebp
or
and
xchg
and
daa
addb
daa
jp
pop
mov
stos
decb
add
lahf
xor
js
xchg
xor
push
inc
fisttpll
js
xchg
fs
imul
test
or
pop
enter
sbb
push
inc
in
adc
and
push
push
enter
sbb
les
inc
sub
or
mov
push
insb
hlt
mov
xor
fs
ss
mov
cmp
ss
jl
icebp
cmpsb
loop
sbb
aad
mov
pop
sub
test
fwait
mov
inc
daa
out
js
push
jae
lds
jl
fcoml
notb
in
pop
jbe
daa
mov
cmp
push
push
sbbl
mov
xchg
sbb
sbb
fldcw
push
sbb
test
fnstenv
pop
popa
xor
cmp
dec
popl
cmp
vminsd
cli
loopne
addr16
push
test
int
or
push
sbb
movsb
adc
movsl
stos
mov
inc
pop
mov
mov
xchg
es
fcmovne
xchg
aas
mov
inc
push
and
test
mov
push
or
cld
add
mov
out
cmpsb
arpl
setp
sub
mov
mov
pop
pushf
push
fiaddl
ret
jb
dec
and
sbb
pop
and
jp
add
xchg
xchg
mov
sbb
jo
xlat
lret
push
enter
shrb
xchg
add
xor
in
cmp
mulb
and
test
loope
stos
inc
enter
inc
add
test
sti
mov
xchg
pop
pop
incb
iret
push
and
xlat
jp
negl
int
hlt
fldl
push
jmp
add
or
lea
dec
ret
lods
xor
xor
icebp
hlt
cmp
adc
xchg
insb
and
cmpsb
out
lcall
or
pusha
lds
sub
and
adc
and
pop
jno
in
repnz
lock
push
mov
or
push
lret
nop
or
xor
loope
push
ljmp
js
test
xor
xchg
sbb
stos
aaa
hlt
xor
outsb
mov
pop
push
loopne
adc
popa
push
mov
enter
mov
stos
ljmp
mov
mov
sbbl
fwait
push
jne
push
adc
mov
mov
push
les
les
out
cwtl
dec
jb
decb
pusha
add
mov
mov
mov
imul
jb
or
or
arpl
jmp
cmp
add
sbb
xor
popf
insl
pop
mov
shr
adc
push
scas
jg
arpl
adc
mov
insl
inc
jae
imul
fwait
lahf
call
int
subb
scas
xor
fnsave
ret
push
xchg
sbb
add
test
imul
mov
push
mov
imul
imul
repz
out
ss
sbb
dec
xchg
out
mov
or
mov
clc
push
or
imul
mov
call
insb
jno
or
jmp
lret
xor
jb
xor
aas
shrl
pop
dec
arpl
mov
test
or
sbb
mov
orl
pop
call
adc
xlat
stos
or
add
not
lret
pop
mov
movb
pop
jne
mov
sti
or
scas
pop
cmp
inc
in
js
les
sbb
sub
add
pop
cltd
jb
mov
inc
jmp
js
mov
push
loopne
seta
push
ret
adc
jne
inc
das
fs
test
push
add
data16
cmp
mov
jbe
jbe
lret
mov
cmp
xchg
fisubl
sub
sbb
test
push
pop
push
sbb
imulb
pop
out
mov
add
push
jo
cmpsl
inc
push
dec
adc
mov
add
jo
sahf
inc
movsl
dec
inc
xchg
fdivr
lea
sbb
mov
xor
or
mov
fs
loope
nop
sbb
and
mov
imul
incb
xlat
stc
inc
fnsave
dec
adc
ljmp
pop
cmp
lds
dec
jle
out
xchg
inc
mov
push
stos
and
jae
or
fistl
lods
cs
ss
or
xchg
push
aad
inc
pusha
out
rclb
mov
inc
xor
call
loopne
mov
mov
imul
fnstenv
mov
adc
aaa
adc
test
xchg
sbb
aam
insb
push
fwait
call
out
arpl
mov
xchg
push
or
lods
jmp
in
repnz
push
idivb
push
or
add
jo
xchg
push
cmpsl
adc
dec
dec
stos
lods
inc
mov
out
sahf
xlat
jo
test
fistpll
js
sbb
mov
lods
inc
ret
mov
int3
stos
jmp
test
push
mov
sbb
cmp
xchg
sub
sahf
es
enter
push
xchg
mov
push
ret
or
es
jl
mov
ret
mov
sbb
pop
lds
sbb
xchg
pop
xchg
leave
pop
pop
test
jl
cmpsb
add
push
mov
js
and
lahf
pop
test
pop
aam
test
sub
jo
sahf
and
test
cli
cmp
xor
in
daa
xchg
mov
lret
aaa
and
sub
pusha
rcrl
fisttpll
insb
ret
push
popa
jle
rcl
daa
sub
mov
shr
fidivs
sbb
inc
lahf
pop
add
adc
aas
xor
addb
push
pop
adc
jle
stos
and
pushf
mov
mov
repz
cmpsl
sub
jmp
fsts
inc
jne
imul
ret
pusha
xchg
movsb
mov
test
icebp
push
fidivrs
scas
adc
pop
insb
sahf
cmp
xchg
out
xor
dec
popl
in
adc
jb
adc
sub
and
lea
ljmp
ja
xlat
in
icebp
xor
push
aad
mov
fstpt
cmc
fwait
cmp
sub
notl
mov
mov
pusha
mov
ja
xor
jno
ret
ja
push
mov
ja
mov
shl
sbb
pop
xchg
aam
lret
inc
add
or
mov
pop
lret
mov
in
mov
fsub
push
cmp
xchg
and
xlat
adc
and
xchg
mov
incb
scas
sti
dec
rol
and
or
push
jnp
cwtl
jno
xor
out
pushf
loop
dec
insl
movsl
jle
adc
inc
shll
cmp
jle
lods
cwtl
xor
inc
and
or
push
pop
push
out
iret
das
in
pop
add
sub
outsl
call
mov
mov
lret
dec
es
cmp
mov
push
aad
xchg
js
push
and
cmpl
push
jno
push
psadbw
in
jp
pop
popf
sbb
shlb
sbb
pop
test
rclb
pop
loope
push
rol
cltd
inc
add
int
mov
adc
lcall
mov
lods
ja
lret
mull
das
lods
rcll
imul
dec
lret
cmpsl
aas
mov
and
push
push
push
gs
adc
cmp
hlt
sbb
cld
pop
adc
cwtl
pop
jecxz
and
out
imulb
inc
pop
loopne
pusha
mov
ficoms
gs
fnstcw
and
pop
jns
shll
mulb
push
punpckhdq
jl
movsb
jno
adc
repz
pop
daa
test
or
jmp
lret
outsb
cmc
mov
cmpsb
rorl
sti
sbb
mov
cmpsb
test
adc
or
cmp
jns
lods
and
leave
and
jbe
pusha
cmove
loop
fildl
ljmp
adc
or
mov
mov
jae
dec
data16
fisttpl
inc
and
fnstcw
xor
adc
xor
push
adc
push
rcrb
popa
cltd
jne
adcb
leave
mov
dec
es
into
pop
pop
leave
in
repz
sti
pop
int3
ss
test
dec
fucomp
mov
push
lds
stos
inc
rcl
faddl
test
cmp
imul
cmp
jno
mov
loopne
sbb
jl
jne
jecxz
cs
pop
adc
inc
call
mov
mov
push
push
mov
sub
fisttpl
mov
arpl
repnz
testl
ficompl
jle
or
test
jmp
fst
mov
pop
in
scas
pusha
cwtl
repnz
inc
pop
test
cs
leave
add
jge
idivb
inc
sub
idiv
lods
mov
bound
ljmp
nop
dec
leavew
dec
sbb
daa
in
outsb
jl
jg
ficompl
and
sub
lret
xchg
push
dec
and
aad
jge
dec
inc
inc
fsts
push
stos
addl
andb
pop
mov
inc
push
std
aas
insl
test
adc
test
push
popa
xacquire
sahf
push
pop
lcall
popl
jbe
in
mov
test
enter
xchg
add
adc
imul
lcall
js
and
movsb
lea
mov
mov
and
outsl
inc
pop
iret
mull
ja
mov
dec
mov
inc
in
test
mov
imul
dec
bswap
sub
lods
into
pop
jns
mov
or
rorl
pop
rorl
and
cli
fwait
jge
stos
cmc
in
sbb
aad
cmc
out
out
and
jae
addr16
xchg
dec
xor
lods
or
dec
fbstp
test
movzbl
test
mov
ljmp
stc
jmp
out
jnp
stos
inc
imul
out
popa
xrelease
in
rorb
fs
mov
fdivrs
std
clc
jecxz
fisttpl
xchg
or
xchg
push
adc
or
lea
imul
ljmp
push
loopne
mov
imul
adc
fdivl
lds
sarl
sbb
jo
sbb
xlat
movsb
inc
inc
mov
cmp
xchg
sahf
ja
lods
sub
pushl
rdmsr
pop
xchg
add
jmp
dec
mov
xlat
call
sbb
inc
ds
scas
mov
pop
rcl
sahf
ss
decl
xchg
inc
sbb
pop
lea
pop
cmp
fwait
and
jmp
add
jg
fmull
or
cmp
push
imul
adc
mov
pop
rcrl
add
into
clc
cmp
not
adc
sub
inc
cmp
loop
lcallw
lret
adc
sbb
and
popf
sbb
decl
push
insl
push
fdivl
xchg
in
into
mov
aam
add
sarl
mov
mov
out
push
fwait
cmp
scas
es
enter
sahf
xchg
or
mov
jg
sahf
or
fwait
arpl
mov
pop
cmp
mov
xchg
inc
xlat
cwtl
mov
nop
js
jmp
mov
push
pop
filds
mov
in
stc
jae
movsb
rcll
sbb
outsb
push
xor
push
xchg
push
and
lcall
frstor
ds
lret
push
data16
add
ds
test
popa
jmp
lock
insb
in
in
test
imul
decb
dec
push
push
dec
shlb
lods
and
roll
movsl
add
xchg
jno
in
cmpsl
outsb
jnp
popa
xlat
icebp
pop
jbe
adc
and
add
imul
popl
pop
pop
addr16
inc
sbb
pop
add
aas
sub
pop
adc
cmp
scas
ljmp
mov
jnp
not
addr16
out
mov
in
xor
xchg
cmp
test
xor
xchg
test
es
inc
into
outsb
mov
call
lds
jnp
insl
sahf
and
xchg
ljmp
fmuls
outsb
push
cmp
pop
ja
jecxz
das
pop
pop
jmp
fsubl
mov
xchg
lret
or
loope
rol
lods
jmp
cwtl
and
arpl
push
or
xchg
imul
xorb
pushf
sub
push
lea
or
enter
push
nop
repz
mov
inc
lods
dec
push
and
mov
mov
outsl
adc
jg
push
push
testl
iret
pop
xchg
imul
lock
ss
pop
sbb
dec
fimull
jbe
lock
lods
pop
cmpsb
xor
mov
mov
pusha
aaa
push
pop
lods
cmp
addr16
flds
pop
stos
push
aas
sub
adc
out
jecxz
sahf
sti
mov
mov
mov
adc
mov
outsb
cmp
shl
idiv
shlb
mov
rolb
lds
incl
nop
pop
sub
ficompl
shlb
add
mov
fdivrl
jno
das
adcl
ret
cmc
js
insl
lcall
popa
jns
pop
test
sub
mov
les
sub
xchg
inc
out
cmp
cs
pusha
adc
sub
fisttpl
push
daa
sbb
xor
push
dec
nop
roll
lods
xchg
adc
sub
nop
fsubs
and
or
dec
mov
movsl
push
scas
sbb
and
mov
inc
mov
and
xrelease
cmp
adc
negb
cmp
mov
xor
sbb
mov
mov
imul
jmp
das
mov
in
movsb
bndstx
and
scas
adc
or
adc
pop
dec
mov
add
and
imulb
xchg
in
js
or
sbb
or
sbb
pushf
lods
xlat
lock
movl
pop
cli
test
std
push
mov
jg
pop
iret
fldl
or
mov
inc
push
lcall
shlb
int
movsl
fldt
xchg
cmc
das
stc
xchg
insl
imul
lea
inc
adc
repz
test
xchg
popa
or
mov
xchg
cs
imul
mov
jge
call
xor
fwait
mov
nop
xchg
popf
cmpsl
popa
cltd
nop
test
arpl
mov
xchg
sub
sbb
pushf
leave
mov
fdivrs
std
jp
mov
lret
daa
int3
or
jl
pop
inc
push
int3
push
mov
addl
cltd
fidivs
mov
xor
xchg
ja
fwait
mov
decb
shrl
divl
pop
fistl
adc
adc
shll
addr16
push
dec
in
shr
imul
adc
push
dec
pop
ss
sti
ret
ja
xor
inc
xchg
xor
sbb
sbb
and
in
out
cmp
pop
mov
pop
mov
pop
adc
fisttpl
les
ret
aad
xor
ficomps
out
rcr
pop
sub
lret
adc
cs
dec
stos
das
push
cmp
mov
mov
mov
sbbb
ja
or
inc
add
les
stos
das
pop
inc
jnp
in
les
sub
out
inc
cli
mov
stos
xchg
xchg
data16
sahf
push
and
imul
mov
and
mov
push
les
nop
cmp
dec
out
lcall
test
push
xchg
rcrl
fwait
jle
pop
js
xchg
push
pop
ja
hlt
out
es
lods
jg
popf
orb
add
xchg
movsb
sbb
jno
test
testb
pusha
push
andb
in
mov
push
or
push
and
inc
outsl
outsl
jl
jecxz
xchg
sarb
mov
fisubrs
push
cmp
jmp
dec
pop
and
jnp
mov
movsl
ss
cmpsl
adc
dec
jecxz
test
sahf
pop
cli
pop
cmp
pop
into
push
pop
bound
mov
mov
jl
pop
std
cs
sbb
mov
hlt
mov
jecxz
sbb
cmp
stos
dec
gs
push
nop
mov
inc
or
mov
dec
dec
clc
dec
lds
mov
nop/reserved
hlt
pop
mov
mov
je
and
and
enter
imul
xchg
scas
mov
mov
sub
test
xchg
cmp
xchg
cmp
sub
fcoms
mov
pop
xor
cs
aam
mov
pushf
int
outsb
ds
es
sahf
lock
nop
xchg
ficomps
mov
xchg
jbe
push
mov
jne
inc
sub
jecxz
push
dec
fcoms
mov
cwtl
mov
mov
or
mov
sahf
xor
lret
dec
sbb
or
or
sub
test
mov
xchg
bound
mov
xchg
mov
test
or
stos
sbb
and
xor
mov
add
fdivl
jae
inc
push
xorb
loopne
movsl
xor
xorb
ds
in
dec
pop
adc
sahf
add
push
loope
jae
mov
jb
mov
iret
sbb
stos
pop
into
xchg
adc
shll
jp
rcr
dec
stos
clc
and
and
dec
and
cwtl
push
cmp
cs
push
lods
in
inc
frstor
add
xor
sub
aaa
or
insl
lcall
les
lret
popa
mov
mov
mov
and
ficompl
adcl
pop
push
cld
xchg
test
cmp
popa
xor
push
int
mov
or
aaa
rcrl
sbb
mov
stos
jp
test
push
dec
outsb
jae
mov
test
fisubs
push
adc
inc
lahf
fucomp
adc
testb
adc
pop
test
mov
negb
mov
fisubrl
imul
out
scas
sahf
mov
mov
lcall
cmp
push
ret
ljmp
jge
jmp
test
popf
cmp
mov
pop
sub
xor
push
push
loopne
jl
sub
inc
inc
movsl
adc
scas
ds
pop
leave
mov
inc
ret
in
movsb
aaa
test
dec
mov
mov
ret
js
jg
or
mov
mov
movsb
jmp
xchg
mov
not
jo
aaa
inc
mov
sbb
inc
movsb
cmp
xchg
popf
or
inc
mov
lahf
xlat
faddl
stc
and
dec
ds
cmp
dec
andl
lahf
cmpsl
pop
xor
fwait
jg
cli
scas
std
sbb
cmpsb
dec
scas
popf
in
pop
push
fidivrl
orl
movsb
clc
repnz
mov
jg
popf
mov
stos
jae
fstl
push
and
adc
adc
lahf
fnsave
jmp
jg
pop
mov
les
mov
add
push
test
pop
pop
mov
pop
or
sbb
insb
fcoml
unpcklps
cwtl
pop
cmp
dec
cmpl
cli
loope
fld
addb
sub
pop
fsubrs
out
out
mov
pop
jl
push
imul
or
in
adc
aaa
iret
leave
add
sub
stos
cmc
mov
cli
xor
pop
stc
insb
add
test
sbb
cmp
sub
out
ds
dec
xor
lods
or
xor
not
repz
mov
jg
pop
testb
arpl
mov
lods
inc
aam
inc
add
or
inc
cmp
cmp
pop
cmp
in
xchg
inc
inc
loop
stc
mov
mov
lea
sbb
fsubrl
inc
jno
call
push
lods
adc
and
adcl
sub
loope
push
loopne
jmp
in
aam
sub
fnstsw
sub
dec
cld
rcrl
jae
fists
jbe
cmp
ja
jnp
insb
cmp
out
add
mov
outsl
loop
mov
mov
inc
mov
inc
pushw
out
mov
inc
pop
jge
sahf
lahf
pop
sbb
andl
xchg
jae
sti
mov
loopne
jb
sub
aaa
mov
in
movsb
jecxz
cmp
mov
xor
jb
popl
push
or
movsb
lret
mov
fwait
inc
mov
arpl
mov
mov
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
arpl
mov
mov
or
cmp
sub
fildl
dec
xor
jmp
fwait
inc
or
arpl
mov
mov
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
arpl
sbb
sbb
xchg
dec
hlt
or
sbb
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jne
gs
push
lds
addl
jns
push
lds
and
test
push
lds
xor
test
jne
gs
push
mov
xchg
in
add
jl
dec
fstpl
sub
cmp
in
xchg
dec
mov
mov
pop
leave
push
rclb
push
mov
pop
dec
and
push
jae
push
pop
inc
popf
add
stc
mov
hlt
mov
stc
sub
cs
sbb
sub
push
in
mov
xchg
add
cltd
jb
lcall
sahf
icebp
lds
loopne
mov
stc
dec
shlb
sti
test
pushf
lds
lret
jne
fldl
jle
in
loopne
cmp
push
popl
adc
cmp
dec
pop
aad
xchg
cmc
call
xor
mov
popf
ljmp
lret
push
out
or
popa
test
xchg
inc
lock
inc
xchg
cli
test
push
aad
iret
and
sbb
in
jge
insl
int
fmull
mov
jno
addb
xor
xor
inc
repz
fistpl
add
or
mov
shlb
call
cmc
cmp
and
stc
mov
adcb
into
pop
jecxz
loope
adc
mov
adc
gs
aad
lds
and
test
push
lds
xor
test
jne
inc
lds
and
test
ljmp
cmp
ror
icebp
jne
dec
cmp
fcmovb
or
sub
and
mov
mov
mov
fisttpll
std
jbe
sbb
repnz
ficompl
adc
mov
mov
mov
adc
push
or
iret
hlt
push
ret
and
sarb
inc
sbb
adc
int3
mov
pop
out
push
cmp
sbb
stos
push
jns
xor
or
sarl
and
je
or
jns
in
test
mov
dec
mov
dec
cmpsl
xchg
iret
aad
push
cmp
and
adc
fwait
mov
js
scas
dec
arpl
jg
test
cli
js
insl
jmp
arpl
test
xor
mov
jae
das
lock
ret
cli
mov
lods
cli
fists
jl
pop
fdivl
shlb
and
test
inc
adc
pop
cmp
bnd
push
inc
sbb
push
in
mov
iret
aaa
icebp
dec
repnz
cwtl
pop
mov
arpl
fcoml
rcll
mov
mov
rol
add
xchg
inc
call
sub
add
ret
jnp
jne
xor
inc
out
std
adc
adc
mov
in
mov
pop
lods
cmp
rorl
add
mov
lods
dec
lcall
inc
aas
popa
leave
sbb
fidivrl
lret
movsb
or
or
sbb
mov
mov
adc
cmp
stc
out
std
mov
pop
fildl
mov
in
int3
sbb
shll
loope
cmp
push
push
or
fisttps
shlb
adc
jmp
adc
repnz
daa
lods
or
pop
in
out
jl
div
enter
js
and
mov
flds
inc
popf
xor
loopne
jp
dec
shrl
roll
cwtl
mov
cmp
sub
mov
push
cmpb
testl
push
push
push
and
mov
in
or
loopne
mov
and
mov
jecxz
jl
dec
jnp
adc
and
outsl
fnsave
test
mov
fidivl
cmp
ficomps
sub
jmp
pop
sbb
adc
mov
insb
jmp
mov
dec
jnp
sbb
stos
inc
in
int
jns
jo
add
out
mov
xlat
movsb
movl
rclb
fnsave
fidivl
sbb
repnz
add
add
js
adc
jno
push
cmp
adc
cwtl
mov
mov
outsl
mov
inc
xchg
xchg
xchg
out
testb
fistl
sbb
jae
pop
xor
sbbl
jb
adc
arpl
mov
xorl
cltd
xchg
or
sti
or
add
addr16
das
add
data16
mov
out
cmpsl
lds
imul
xor
pop
mov
ja
loop
cmp
push
sub
xchg
push
nop
loope
negl
cld
push
std
inc
add
test
mov
push
test
adc
fs
dec
xor
inc
adc
or
pop
mov
sbb
xchg
insb
lods
into
push
pop
dec
dec
and
sub
es
aam
xor
sbbb
jb
sbb
loop
insl
jle
aam
push
mov
jne
sub
lock
aam
mov
jge
mov
aad
adc
in
stos
iret
mov
push
dec
addr16
mov
or
xor
jl
xchg
insb
hlt
or
or
clc
pop
push
stos
push
andl
cmp
in
xor
fidivl
or
std
fldcw
les
lods
roll
ret
into
out
andl
xor
add
add
cltd
jae
es
iret
push
push
or
inc
notl
hlt
xor
movsl
mov
outsl
popf
out
xchg
mov
and
aam
jne
jo
mov
sub
mov
inc
lcall
fidivs
inc
cmp
leave
jecxz
cmpb
call
mov
ds
add
enter
insl
cmp
cmp
cmpl
jmp
mov
jmp
jp
movsb
mov
push
dec
mov
bound
sub
call
adc
pop
mov
and
jb
push
pop
mov
mov
lcall
jge
into
mov
dec
aaa
lahf
mov
stos
push
push
inc
lret
loop
xchg
mov
rcrl
out
roll
gs
sbb
decl
fimuls
push
mov
js
lcall
pop
dec
mov
iret
stc
inc
inc
or
mov
and
jmp
or
gs
inc
xchg
repz
dec
sbb
mov
test
mov
movsl
shlb
and
add
cltd
imul
sub
add
sti
and
or
sub
int3
mov
fiadds
mov
in
outsb
push
out
sbb
cmp
imul
das
lods
mov
dec
shrl
addr16
movsl
jns
aam
jge
pop
es
xchg
push
and
push
xlat
mov
pop
pop
mov
sbb
stos
aaa
int
xchg
xor
jnp
aas
mov
daa
hlt
mov
pop
dec
roll
cmpsl
mov
xchg
gs
add
cmp
loop
push
pop
fldcw
inc
ss
lahf
adc
sbb
jg
lods
dec
mov
and
xor
xor
cld
or
or
in
movsb
pop
push
xor
lds
mov
jp
mov
test
roll
jo
test
adc
xchg
and
mov
and
adc
lcall
cli
jle
cmpl
aaa
sub
jmp
xchg
mov
stos
or
mov
inc
mov
xlat
subl
lahf
xor
mov
addb
mov
mov
lcall
push
xor
cmpsb
jo
orps
sbb
jbe
mov
push
idivl
test
stos
push
ret
dec
xchg
xor
cmp
cmp
sub
or
subb
jge
arpl
sahf
mov
mov
push
adc
xchg
jmp
mov
pop
test
pop
test
sub
cmp
xor
dec
fistl
and
shr
test
sbb
jno
scas
push
push
aam
loopne
lea
popf
adc
aam
sub
data16
or
popf
data16
insl
xor
jne
aam
pusha
ja
lds
sahf
jae
or
fisttps
pop
repz
xchg
ficompl
xchg
addl
pop
scas
ds
mov
dec
push
dec
jl
popf
or
push
mov
daa
mov
ret
outsb
or
jae
jo
xchg
add
add
or
sub
push
push
inc
add
sbb
fptan
cmp
hlt
cld
mov
xor
arpl
fistps
xor
hlt
xchg
sti
pop
in
jmp
sarb
sub
add
jp
pushf
bound
mov
in
in
pop
inc
jnp
cli
sbb
loopne
out
push
test
sahf
push
fisubl
enter
sbb
dec
dec
or
int
test
xor
ret
inc
iret
in
push
imul
popf
mov
mov
fcoml
sbbl
rclb
nop
sub
add
int3
insl
js
dec
or
ret
sbb
or
mov
cs
das
int3
in
loope
push
addr16
or
mov
les
fsubrs
gs
into
insb
adc
sbb
pop
and
cltd
out
xor
cwtl
pushl
xorb
cld
dec
adc
adc
sub
and
mov
in
lock
lahf
mov
or
in
mov
xchg
inc
xlat
aas
lret
enter
in
lds
movsl
mov
notl
shll
jno
andl
cmpsl
cmc
xchg
mov
bound
xchg
enter
jmp
shrb
cmp
stos
jnp
nop
push
sbb
and
inc
call
jns
xchg
sbb
enter
cwtl
pop
fwait
mov
loop
test
loopne
cmpsl
shrl
mov
idivb
mov
idivb
movsl
push
psadbw
adc
push
lods
sub
add
or
jp
pop
hlt
sbb
push
rorl
int
mov
pop
mov
adc
or
dec
hlt
jp
mov
les
xor
fnstsw
sub
movsb
js
xchg
rorb
ret
or
add
push
std
mov
inc
fnsave
add
ss
cmpb
imul
mov
fimuls
dec
cmp
sahf
jbe
pop
pop
mov
dec
cmp
and
xor
mov
ljmp
shll
addr16
and
mov
cmpsl
dec
cmc
mov
dec
lock
add
jmp
out
test
inc
dec
mov
out
push
fiaddl
movsl
jb
ficoms
js
jp
fs
rorl
inc
dec
push
popa
adc
jae
ss
lcall
shll
push
inc
dec
push
push
int3
or
cli
pop
mov
aam
jno
dec
stos
push
mov
sbb
xchg
and
dec
aaa
cs
mov
and
fmuls
in
cmpsl
push
aas
hlt
xor
inc
test
je
xchg
cmp
popa
in
add
loop
cmc
lds
les
inc
mov
cli
xor
stos
xor
into
cmp
sbb
and
mov
dec
inc
nop
or
test
and
add
ret
in
out
cmp
pop
add
xchg
call
js
xchg
xor
pop
or
aam
in
mov
mov
add
push
fwait
jne
cmp
mov
popa
mov
lret
mov
fldl2e
out
xchg
jl
movsb
hlt
in
fsubrs
pop
ds
inc
inc
aad
inc
sti
call
push
xchg
mov
ret
xor
mov
pop
or
sub
in
lods
or
jno
or
dec
or
call
pop
xor
cmp
push
ja
popa
mov
push
out
adc
mov
in
cmpsb
mov
adc
jmp
fsts
jle
add
cwtl
popf
mov
stc
sbb
test
ds
pop
out
sub
xchg
mov
fs
sbb
stos
dec
in
dec
shll
mov
lock
inc
adc
imul
lcall
loope
popf
jb
stos
out
cld
cmpsb
cmc
adc
pop
aad
shlb
lret
pop
mov
jmp
lea
and
fldl
aaa
jp
inc
push
or
mov
cmp
xor
fs
lods
out
fs
ss
loope
cmc
adc
xchg
rcrl
rcrb
popl
fstl
addb
loop
subl
mov
call
add
sbb
pop
jne
pop
push
inc
push
xchg
aas
cmpb
sub
fiaddl
pop
in
scas
aam
adc
fs
xor
cld
pmuludq
jmp
movsl
out
xchg
jg
dec
inc
jecxz
lock
sub
fwait
aad
adc
dec
lcall
add
ljmp
lcall
jl
mov
mov
cwtl
mov
jno
pop
xchg
jge
jae
lea
cmp
push
dec
xor
mov
test
inc
inc
scas
icebp
rcl
xchg
pop
mov
loopne
inc
sti
daa
fisttpll
pop
leave
mov
les
or
out
and
mov
inc
cli
imul
in
insl
cld
mov
adc
lds
dec
clc
int
mov
cld
les
push
fucomip
int
pop
in
movsl
cmc
gs
mov
lods
pop
es
inc
ficoms
inc
push
push
dec
mov
mov
call
dec
mov
cli
out
ljmp
divb
cmp
xchg
shlb
mov
mov
rolb
cltd
rcr
lds
call
push
sbb
sti
hlt
divb
cmp
lods
sub
xchg
je
cmp
iret
mov
sbb
mov
xorl
popf
fadd
cmp
inc
pop
js
stos
aas
in
out
imul
rclb
pusha
bound
sbb
sub
inc
or
outsb
loope
int
arpl
xchg
dec
fnstenv
pop
inc
lret
push
adc
hlt
jbe
xchg
jle
and
xchg
mov
sbb
dec
fcmove
pop
fistl
sub
loope
pop
inc
imul
jne
pushf
adc
xchg
pop
push
push
into
jge
mov
sub
fists
bound
and
aas
lahf
mov
aas
subb
sbb
push
loope
fstpt
jo
sbb
test
pop
ja
jno
jmp
rcrl
xlat
jle
mov
js
mov
adc
mov
push
mov
outsb
imul
sub
and
jecxz
stos
imul
arpl
mov
xor
subb
test
inc
in
lret
loopne
mov
dec
in
dec
lret
mov
dec
push
pop
dec
dec
cwtl
mov
aas
inc
inc
or
fbld
push
gs
pop
cmp
cmp
push
orb
dec
int
xchg
sub
mov
ret
std
sub
sbb
mov
xor
or
jge
xadd
dec
or
add
scas
jne
push
jge
daa
ret
ss
pop
mov
sti
xchg
adc
dec
mov
jns
push
and
test
fisttps
shl
es
and
mov
pop
outsl
xor
mov
xor
sub
xor
xchg
add
les
rclb
push
daa
push
adc
xor
popa
ret
sub
xor
lock
pushf
xor
neg
dec
cli
mov
jne
aad
cmpsb
xchg
ds
je
rcll
jp
mov
adc
daa
fwait
inc
test
out
nop
mov
pop
fdivs
jmp
test
or
mov
cmp
scas
int3
xor
inc
jae
push
push
lret
push
outsl
add
xchg
mov
jecxz
aam
xchg
and
cmp
imul
xchg
add
xor
xor
das
jne
icebp
int3
data16
cs
xchg
pop
pusha
mov
mov
mov
iret
shll
mov
sahf
icebp
mov
jge
sahf
popf
xchg
add
data16
lret
out
mov
int
inc
cs
pop
mov
jp
cmp
xchg
or
jno
maxps
lds
jnp
jne
pop
push
inc
notb
push
jbe
add
aaa
js
add
fisubrs
jo
and
in
enter
loopne
xor
and
pop
sbb
loop
hlt
xor
inc
push
aad
int3
and
sub
das
xchg
push
jb
pop
orl
push
xchg
and
xchg
mov
push
push
int
int3
popf
cs
cmp
mov
xor
insb
int3
sub
sub
or
sub
insl
popa
xchg
dec
dec
cmpsl
fisubrl
or
add
xchg
nop
cmp
or
mov
mov
stos
inc
aaa
jne
in
imul
loop
or
enter
cmpb
xor
ret
and
pop
dec
ds
push
push
data16
mov
adc
insl
addr16
leave
cmpsb
sub
lods
sahf
imul
ja
lds
sahf
and
jge
mov
in
arpl
out
shlb
mov
sarl
rorl
je
inc
push
cmpsl
jp
push
sbb
xor
pusha
pop
and
xchg
xchg
fistl
fnstcw
xlat
std
sbb
add
pop
shlb
mov
fnstcw
or
or
shr
shlb
pop
mov
adc
in
xchg
adc
inc
test
push
cmp
mov
mov
movsl
outsb
mov
sub
pop
outsb
daa
fisubrs
inc
jmp
fstpt
sub
jecxz
pop
mov
dec
ret
fwait
cld
adcw
pop
mov
stos
push
add
push
enter
mov
aas
sbb
fsubp
mov
adc
loop
mov
mov
adc
mov
xchg
daa
or
push
or
add
fsubrp
outsb
pop
dec
xchg
shrb
ljmp
cmpsb
inc
das
outsb
dec
xchg
ret
sbb
fstpl
imul
dec
fnstsw
pop
rcl
push
outsl
ret
popf
xchg
add
and
xlat
dec
mov
push
push
mov
push
mov
test
push
jns
popf
jle
push
stos
add
negl
aad
xor
fldcw
outsb
loop
cmp
cmpsl
mov
xor
push
push
xchg
arpl
std
push
jecxz
lea
outsb
xlat
sti
push
xor
cmp
push
mov
mov
andb
sbb
lock
push
pop
jnp
jle
rorb
mov
aad
mov
in
out
fisubs
addl
jb
mov
mull
popa
cs
push
std
mov
add
push
ret
mov
mov
xchg
mov
loope
mov
dec
aas
dec
fdivl
lock
mov
xor
imulb
cmc
xor
push
and
imul
and
push
mov
pop
pop
rcll
mov
popa
cmp
jp
xor
adc
adc
mov
xchg
movsb
cltd
dec
dec
mov
jle
leave
je
pop
test
sub
sbb
mov
ds
cltd
mov
sub
xchg
jecxz
jecxz
out
inc
jle
aad
sbb
add
dec
pop
dec
cmp
sbb
repz
ljmp
inc
mov
imul
sbb
fwait
mov
mov
add
stos
ret
mov
jno
xchg
inc
inc
xor
mov
pop
mov
mov
xchg
and
pushf
mov
mov
sub
pop
aaa
insb
in
and
sahf
mov
adc
ficompl
lds
insl
hlt
jp
pop
movsl
mov
sbb
inc
mov
fstpt
iret
negl
xor
push
sub
push
out
mov
fwait
mov
add
adc
sub
xor
inc
test
sub
cltd
and
sahf
mov
xor
push
mov
jle
jb
lods
inc
ret
fsubs
ret
sub
pop
jecxz
mov
mov
cld
dec
xor
jns
repnz
cmp
test
mov
iret
xchg
fisubrs
mov
call
mov
scas
pop
leave
fmuls
sbb
mov
mov
adc
mov
aas
mov
outsl
jbe
test
imul
push
leave
inc
cmpsb
dec
int3
shr
pop
scas
push
jbe
mov
mov
pushf
jne
aad
adc
pop
test
mov
std
gs
loop,pn
out
inc
mov
in
lods
mov
sahf
jb
fwait
ljmp
int3
sbb
outsb
or
and
orb
push
fstpl
xorb
and
mov
xor
cltd
insl
mov
adc
pusha
mov
loopne
hlt
inc
lret
sbb
scas
dec
adc
xchg
add
xor
mov
shll
in
push
call
faddp
leave
scas
jne
mov
xor
inc
cli
inc
cmp
jmp
js
cmpsl
mov
mov
add
jl
sub
xor
movsl
push
xor
out
rorb
cltd
dec
mov
dec
xlat
adc
mov
testl
add
inc
test
mov
push
mov
or
lret
inc
xchg
lahf
iret
mov
jmp
movsl
int3
pop
mov
pop
lret
shrb
xorl
movzbl
pusha
xor
pop
aam
jge
jmp
adc
jbe
fcmovnb
push
sub
and
jecxz
les
or
divb
outsl
pop
pop
gs
lock
jns
cmp
popf
mov
inc
mov
mov
push
popa
inc
not
je
dec
into
ja
mov
xchg
lret
sahf
xor
pop
or
sub
cmpsl
jbe
mov
sti
xchg
push
xchg
icebp
inc
out
push
lcall
jo
lahf
test
incb
sbb
xchg
adc
push
cmpsl
xor
int3
pop
adc
mov
pop
jecxz
sub
pop
add
push
ret
int3
mov
nop
cmp
mov
fs
stos
add
inc
in
addr16
xchg
inc
daa
paddq
pop
or
cmpsb
popf
ret
adc
mov
sbb
inc
aad
movsl
and
xchg
cmc
gs
aad
lds
and
test
push
lds
xor
test
jne
inc
lds
and
test
push
lds
xor
test
jne
inc
lds
movsb
xor
jne
addr16
push
lds
aaa
movsl
and
xchg
or
fistpll
lds
ret
lret
jp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
aas
lahf
das
lret
pop
mov
or
mov
or
cmpsb
fistpll
imul
das
mov
mov
outsl
lret
pop
sti
dec
lds
xor
dec
fistpll
imul
das
dec
pop
and
fnstsw
outsl
sbbl
fnstcw
pop
ljmp
or
lret
data16
jo
cmp
mov
les
ja
test
xchg
jns
shlb
inc
aaa
test
dec
loopne
repnz
jg
outsl
inc
mov
in
mull
jo
test
out
adc
lock
es
shlb
inc
pop
sub
mov
mov
sbb
aad
test
mov
scas
iret
lods
aas
fwait
or
pop
iret
nop
sti
push
cmp
dec
sahf
and
jle
jo
scas
dec
out
daa
test
dec
stos
jbe
inc
repnz
sub
lret
les
mov
fildl
scas
xor
and
iret
out
xlat
je
into
lock
xchg
in
sti
mov
clc
dec
ljmp
xor
cld
pop
das
stos
pop
iret
bts
outsl
lret
pop
sti
dec
jns
sbb
pop
jmp
movsl
fbld
pop
pop
fwait
dec
in
xlat
dec
sbb
cmpsb
xor
lret
sahf
lret
sbb
and
movswl
dec
fstpl
jl
dec
sbb
or
int
enter
sbb
adc
dec
mov
movsl
sbb
das
imul
cmp
dec
jmp
sbb
sub
pop
out
dec
fistpll
imul
das
mov
mov
outsl
lret
pop
sti
dec
jmp
sbb
sub
pop
out
dec
fistpll
imul
dec
fldl
mov
cli
xchg
cld
inc
pusha
test
lea
outsl
test
pusha
dec
push
mov
negl
pop
jge
dec
stc
incl
add
nop
test
mov
cli
add
js
in
leave
clc
dec
pop
ret
repnz
mov
jnp
js
adc
loope
dec
out
jp
clc
iret
mov
mov
dec
addr16
addr16
pop
mov
in
sbb
ret
std
xchg
pop
pslld
push
int3
inc
ficoms
cld
push
or
xchg
mov
loopne
scas
mulb
pop
fisttpl
fists
jg
gs
and
jp
mov
ja
lcall
das
sub
outsl
ljmp
xchg
data16
and
xchg
mov
out
sub
cmp
std
shr
fnstenv
push
sbb
dec
jg
cmp
push
sbb
jnp
cmp
mov
cltd
sub
loope
outsb
pop
xchg
jecxz
mov
into
stos
popa
in
fldl
jmp
dec
mov
inc
es
adc
cmp
jl
jle
pop
aas
dec
cmp
sbb
xor
aas
hlt
fisttpl
push
push
jnp
cmp
mov
xchg
or
push
add
fcompl
fcompl
mov
mov
testb
stc
sub
jns
and
rcrl
pop
and
loope
arpl
push
mov
cmp
or
push
xor
sbb
mov
sub
inc
push
mov
popa
inc
movsl
divb
cmp
jne
mov
mov
cmpsb
insb
lret
mov
daa
pop
or
aaa
mov
xchg
cli
mov
cmc
mov
pushf
cli
mov
sbb
push
shr
sbb
and
or
push
and
mov
test
cmp
xchg
dec
aaa
cmp
cs
xor
jno
ljmp
inc
mulb
das
ret
and
fwait
cwtl
test
mov
xor
fcoml
pusha
adc
scas
icebp
xorl
sbb
cmp
dec
es
sahf
mov
gs
push
inc
cmp
out
rcll
inc
sbb
mov
pop
mov
pop
mov
aam
inc
and
pop
and
jecxz
inc
adc
call
pop
jno
cmp
in
rolb
xor
inc
mov
scas
cmc
pop
outsb
sub
jecxz
push
popl
not
push
mov
xchg
jns
sahf
call
vpcmpeqw
mov
xchg
sbb
mov
cwtl
dec
add
adc
scas
out
xchg
dec
sub
ds
pop
cld
loopne
add
or
and
xchg
jo
in
sbb
xor
dec
jno
cmp
inc
cmp
movsl
pop
insb
subb
sub
fwait
stc
xor
lret
add
adc
not
adc
jge
fsubl
pusha
test
dec
mov
int
inc
daa
test
mov
xchg
jno
xchg
repz
shlb
mov
lea
adc
cmp
pop
fwait
mov
sbb
rcr
fbstp
jne
dec
mov
sbb
push
lods
jl
xchg
repnz
jg
cltd
adc
ljmp
fnstcw
cmc
ds
pop
lods
adc
dec
push
ja
jnp
popa
insb
xchg
jns
das
dec
pop
das
add
or
dec
push
sub
cmpsl
push
pop
add
xchg
lods
adc
sbb
ljmp
rcl
mov
push
ficompl
mov
fdivrs
inc
leave
pop
inc
orl
xchg
jns
in
rorl
adc
and
cmpsb
dec
or
jg
cwtl
adc
popa
xchg
xor
xchg
addr16
aas
loopne
leave
test
jmp
push
sahf
cwtl
test
push
adc
or
fmul
lahf
fsts
or
pop
xchg
stc
or
sbb
inc
gs
sub
jbe
nop
jno
mov
call
push
iret
adc
jne
loopne
dec
sub
int3
in
adc
jge
adc
cmp
xor
das
inc
xor
divl
xchg
mov
rcr
add
pop
xor
pop
lahf
mov
mov
iret
dec
aas
mov
lods
lods
cli
sbb
pop
shl
mul
in
mov
xchg
rorl
jl
pop
sbb
stos
fsubl
out
add
mov
or
ret
xchg
xchg
mov
jae
dec
repz
fdivs
cs
mov
fsubrs
dec
xchg
lret
add
ret
fimuls
sti
sub
adc
mov
mov
je
mov
inc
jl
js
jmp
pushf
add
fstl
fwait
mov
lahf
inc
icebp
test
sbbb
mov
dec
out
sbb
mov
scas
fs
pushf
pop
mov
outsb
jge
sbb
cmpsl
nop
scas
test
dec
cmp
int3
jno
das
pop
rclb
xchg
sti
jns
stos
sub
cltd
popa
xchg
inc
cmc
ja
in
cli
jns
pop
fstpl
sbb
and
imul
mov
sbb
xor
add
inc
out
and
sub
lahf
ret
xchg
adc
xchg
add
push
lds
enter
pop
mov
push
notl
mov
jp
or
lock
xchg
jecxz
xchg
jmp
mov
js
sub
cmp
add
cmpsb
fiadds
insb
sbb
and
pop
jne
adc
mov
lret
mov
sub
or
add
es
push
andl
and
orl
sbb
and
xor
enter
xor
and
cmp
mov
pusha
fmull
push
cld
ret
push
cmc
xchg
rcl
aas
std
stc
xchg
cmp
mov
adc
repz
cmp
jge
push
xor
xchg
movsb
jl
add
inc
subl
jae
leave
xchg
fsubrp
lahf
pop
adc
push
insb
stos
call
movl
cs
out
mov
pop
pop
mov
mov
inc
in
xchg
push
push
xor
cmp
adc
push
lods
xchg
sbb
insl
push
push
jne
fwait
in
sbb
pop
test
inc
xchg
es
imul
mov
mov
rcrb
xchg
outsb
push
mov
es
hlt
mov
shlb
pop
xchg
cmpb
mov
adc
ret
fidivrs
scas
adc
dec
adc
or
repnz
inc
loope
enter
dec
js
inc
ret
cs
dec
lcall
arpl
data16
arpl
sti
negb
mov
lahf
or
push
add
add
stc
outsl
fadds
add
and
or
addl
lcall
test
push
push
xor
dec
mov
inc
xlat
add
mov
movsl
not
negl
loopne
in
or
movsb
push
cmpsb
mov
imul
nop
aam
pop
mov
mov
adc
test
int
clc
inc
inc
test
push
sbb
hlt
adc
iret
ret
inc
pushf
lods
jl
and
stos
bound
xor
sub
lock
fs
notb
mov
jno
lock
in
push
cmpsb
arpl
sbb
adc
xchg
stos
pop
pop
stos
jno
pushf
jl
sbb
sbb
popa
mov
cli
es
mulb
es
adc
mov
fistpll
rclb
or
push
cmp
dec
popf
test
std
mov
addr16
mov
jno
pop
repz
sbb
aaa
or
pop
roll
or
jecxz
mov
inc
int3
xor
or
lcall
popf
push
mov
pop
inc
dec
jl
jge
fld
and
sbb
mov
sbb
sbb
int
xchg
xor
insb
inc
sbb
out
or
mov
add
cld
inc
aad
or
jmp
andl
ret
insl
fnstenv
dec
sbb
loop
popf
outsb
push
imul
push
push
subb
mov
sti
daa
lahf
xor
mov
mov
scas
push
mulb
clc
popa
jbe
xor
fcomi
sub
xor
adc
adc
ja
imul
outsb
sub
add
shlb
cmp
sub
movb
rol
nopl
push
imul
xor
jbe
pop
fwait
mov
inc
add
call
in
test
mov
mov
mov
or
lahf
xor
xor
movsl
cmp
pop
xor
pop
xchg
sbb
adc
test
subb
ret
aam
push
jb
mov
cmp
sbb
bound
sbb
or
cmpsb
jno
sahf
sti
in
mov
iret
and
cmp
pop
je
dec
push
xor
or
mov
rorb
js
insb
cmp
jecxz
mov
test
jno
lcall
sbb
sub
pushf
jbe
sar
sahf
mov
mov
pop
push
orb
mov
jge
outsl
push
test
enter
adc
cli
mov
mov
sbb
mov
test
ljmp
cmp
jne
jb
std
sub
mov
or
push
xor
int
sarb
mov
mov
leave
push
cmpsb
jl
or
fs
xchg
sbb
gs
gs
push
push
leave
addr16
dec
add
sahf
cs
mov
pop
cmp
add
in
call
out
xchg
call
lea
int3
cmp
sti
sub
outsl
sar
pop
ficompl
aad
shlb
xor
add
jae
mov
call
lahf
mov
jno
leave
cwtl
and
flds
adc
push
mov
dec
cmpsb
pop
dec
gs
mov
hlt
divl
sbb
xchg
inc
cli
bound
aam
dec
cli
dec
mov
xorb
add
insl
lock
xor
das
inc
mov
pop
lret
in
dec
cmp
mov
push
pop
fmul
inc
mov
out
mov
and
jnp
insb
jbe
xchg
or
ss
mov
xor
mov
xchg
insl
or
repz
das
out
negl
cmc
adc
jne
mov
gs
repnz
dec
nop
sti
dec
sbb
scas
out
sbb
sub
xchg
cs
sub
mov
iret
or
jecxz
cmp
xor
sbb
push
sub
mov
insl
adc
adc
adc
stos
pop
in
jae
loopne
or
jb
mov
pop
jmp
xor
jecxz
std
test
add
cmp
mov
dec
lcall
xchg
push
test
loopne
add
fsubrl
insb
jle
sbb
stos
adc
sub
lret
mov
cs
sbb
dec
cmp
push
fwait
rep
in
lods
jbe
inc
sub
inc
js
jmp
stos
mov
mov
mov
mov
mov
cld
inc
adc
cmp
fdivp
sbb
lds
pushf
and
or
sub
cmp
out
iret
pop
jbe
ror
test
sub
shrd
or
pop
and
xchg
leave
xor
xor
lret
lcall
dec
ret
cmp
sub
jns
jbe
dec
sbb
jbe
sbb
adc
inc
ds
ret
push
in
cs
loop
test
cmp
adc
mov
dec
cmp
movsb
xchg
bound
push
ljmp
ja
test
xchg
push
push
xchg
stos
mov
sahf
inc
inc
pusha
dec
scas
icebp
fstp
xchg
pushf
popa
cmc
adc
sub
push
test
or
inc
cmp
fildl
add
mov
dec
lds
fs
and
test
dec
xchg
std
push
push
jnp
xor
ret
nop
cwtl
pop
test
les
xchg
lcall
fucomp
inc
pop
stos
mov
and
push
dec
xchg
aam
sahf
adc
bound
gs
pop
or
sub
mov
insl
out
add
in
gs
cmp
fldt
cmc
addr16
clc
or
dec
xor
lahf
jbe
pushf
rclb
jmp
push
push
inc
xchg
pop
mov
jnp
push
push
push
fwait
xchg
mov
jge
das
xor
int3
mov
add
aad
call
xlat
inc
clc
shll
cmp
repz
sti
push
sbb
test
out
incb
push
popf
dec
aam
nop
push
lods
test
mov
fildl
mulb
mov
mov
lahf
test
mov
into
mov
sbb
sbb
dec
aam
test
lahf
jg
das
dec
and
push
jmp
add
nop
jns
jecxz
jbe
rcrl
scas
cmpsl
sub
test
test
fidivl
popf
xchg
xor
mov
sub
cmp
mov
pop
xor
mov
push
jmp
xchg
lret
pop
inc
mov
jbe
pushf
xchg
out
popf
lcall
xchg
fildll
loop
sbb
scas
shll
pop
rolb
cmpsb
pop
sub
loope
sarl
jnp
std
xor
dec
cmc
mov
orl
xchg
and
jg
dec
mov
sbb
xchg
testb
adc
mov
and
xor
lea
std
xor
jmp
sub
js
mov
loop
clc
pop
add
inc
sbb
and
mov
sbb
repnz
mov
roll
sub
jns
cmpsb
lcall
jb
out
jnp
inc
pushf
hlt
aad
fs
aam
pop
mov
push
push
pop
add
fnstcw
daa
dec
in
enter
sahf
xor
ret
pop
hlt
xor
in
outsb
dec
lds
dec
inc
jecxz
mov
xchg
jl
push
jecxz
jecxz
repz
movsb
jmp
inc
fidivs
shrb
push
out
aad
xor
add
sbb
scas
jno
sbb
ret
inc
mov
fsubl
mov
pop
adc
mov
sub
sbb
xchg
cmp
shll
cmp
adc
std
add
and
xor
fwait
and
push
fdivrs
mov
jo
dec
pop
pop
cs
xchg
repz
pop
push
dec
aam
mov
mov
push
and
cmpsb
and
sbb
int
out
addr16
rorl
add
add
mov
xchg
push
pop
mov
sub
ja
out
mov
out
outsl
lcall
and
mov
sbb
adc
mov
leave
add
lods
mov
cltd
into
jmp
push
mov
mov
inc
xor
ret
lock
add
stos
mov
jbe
xor
cmp
pop
data16
aad
mov
or
mov
mov
cmp
push
xor
cmp
clc
cmp
jp
push
test
clc
or
pusha
sbb
aam
xchg
pop
clc
gs
repnz
cmc
inc
dec
test
sbb
mov
pop
gs
lret
in
adc
mov
andl
cwtl
andl
push
in
fwait
ret
dec
fimull
jmp
insb
sub
cs
test
clc
shll
jp
mov
cld
xchg
mov
inc
lea
pop
aad
push
popa
iret
pop
or
xchg
jle
cs
sub
mov
shlb
imul
pusha
testb
xchg
mov
dec
mov
push
xchg
jbe
cmp
jns
cmc
lcall
sub
push
ret
mov
and
rcrl
popa
orb
push
mov
cmp
daa
jecxz
dec
mov
sbb
mov
test
xchg
jg
dec
push
push
dec
add
dec
sbb
test
jbe
stc
pop
or
xchg
repnz
lea
add
cmp
dec
ds
add
arpl
mov
in
lods
lcall
std
inc
mov
mov
stos
gs
inc
negb
xchg
mov
mov
fadd
sub
mov
movsb
jge
shlb
adc
ret
mov
data16
lcall
push
pop
cmp
ljmp
adc
shrb
insb
into
jmp
cmp
add
arpl
sahf
mov
ret
sbb
xlat
aad
out
and
and
mov
js
sysenter
and
notl
push
and
jo
sub
repz
out
or
mov
sti
xchg
pop
imul
shrl
mov
shll
sbb
aas
ss
mov
sub
sub
xchg
and
daa
adc
test
fdiv
out
lahf
cmp
test
sub
pop
imul
adc
je
adc
sbb
sbb
and
daa
cld
or
push
shrb
xchg
inc
adc
les
aaa
lret
jge
jg
sub
sbbb
cmp
fmull
int3
mov
inc
cmpsl
pop
jp
test
lock
arpl
push
push
cld
push
mov
daa
fidivs
add
mov
cltd
xchg
imul
in
jecxz
add
pop
test
and
fidivl
popf
nop
loope
xchg
and
mov
repz
mov
push
repz
ficomps
jae
lret
stos
adc
flds
push
xor
mov
rep
sub
sub
jp
pusha
xor
mov
mov
pop
and
lahf
sub
clc
sbb
xor
push
inc
outsl
shll
sbb
push
adcl
and
dec
push
gs
not
pop
push
dec
jno
cmp
adc
stos
inc
push
xor
lret
enter
add
adc
cmp
pushf
sbb
mov
cmpsl
mov
movl
mov
xchg
xor
adcl
pop
fwait
out
ret
aas
insb
sub
imul
in
add
dec
mov
push
mov
in
int3
lret
les
mov
lea
mov
into
cmpsl
testb
pop
inc
mov
idivl
mov
jne
jl
mov
gs
adcb
and
repnz
hlt
ret
popa
jle
loope
xchg
cli
mov
adc
dec
mov
test
outsb
sbb
push
jg
cmc
rorl
sbb
jb
fsubr
push
cmc
lret
aad
xorb
pop
paddd
lret
fs
aam
push
jo
dec
push
mov
push
enter
adcb
dec
add
xchg
add
ficomps
jmp
cmp
shl
test
and
sbb
xchg
dec
xchg
xchg
mov
lds
adc
mov
int3
gs
prefetcht1
add
mov
mov
aaa
pop
adc
push
adc
dec
mov
ljmp
jbe
shll
jge
push
mov
cmp
mov
scas
pop
fdivrs
push
mov
jne
mov
mov
movsb
pop
jle
jbe
lods
mov
sub
xchg
mov
dec
imul
cmpsb
mov
jmp
jo
icebp
addr16
dec
mov
and
mov
mov
je
pop
lret
lcallw
jge
in
mov
cs
and
lock
xor
in
cmc
daa
stc
inc
enter
jge
clc
scas
mov
in
xchg
imul
xchg
shll
mov
es
adc
cmp
jl
cmp
cwtl
jle
dec
fstpl
jnp
or
pop
sbb
mov
arpl
lcall
dec
jecxz
jmp
pop
push
fildll
and
or
cmp
rcll
sub
test
iret
pop
cli
sub
rorb
popf
pop
out
in
jbe
sbb
cmp
pushf
push
in
out
popf
mov
or
out
test
fnstenv
je
repz
cmp
divl
and
call
adc
pop
adc
or
mov
push
fdivr
fldcw
fimuls
decb
sub
dec
jne
sbb
add
aad
int3
mov
push
loop
mov
add
fisubs
push
imul
lahf
loopne
in
mov
cs
push
repnz
adc
fstpl
pop
dec
dec
mov
shlb
scas
aaa
les
icebp
pop
lahf
into
fidivrs
ds
es
fstl
repz
and
leave
seta
in
push
xor
xorl
fimuls
roll
cld
mov
mov
cmp
adc
mov
push
adc
jnp
or
inc
leave
pop
dec
xchg
mov
inc
push
mov
pop
pusha
popa
and
xchg
cmp
loop
push
daa
dec
in
cmc
jp
mov
idivl
lret
stos
sbb
shlb
pop
cwtl
push
iret
fcomip
notb
bound
push
test
repnz
mov
mov
mov
outsl
lret
pop
sti
dec
jmp
sbb
sub
pop
out
dec
fistpll
imul
das
mov
mov
outsl
lret
pop
sti
dec
jmp
sbb
sub
pop
out
dec
fistpll
imul
das
test
mov
outsb
mov
mov
cmp
dec
fidivs
aas
jg
outsl
pop
pop
por
outsl
lret
fistpll
sub
push
mov
mov
xor
add
adc
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
