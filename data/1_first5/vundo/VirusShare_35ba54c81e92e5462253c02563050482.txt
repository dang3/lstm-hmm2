inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
dec
shlb
cmp
adc
inc
jns
add
add
pop
add
or
add
bound
addl
mov
loope
cmpsb
add
add
data16
add
add
dec
add
add
push
add
add
add
add
add
add
and
mov
add
add
incl
addb
add
and
inc
add
push
add
add
add
mov
and
add
addl
adc
push
add
add
add
sbb
add
add
add
add
add
mov
add
add
add
dec
add
fadds
rolb
add
add
add
adc
push
add
addl
or
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
addl
lret
add
add
add
dec
add
add
add
add
add
add
add
push
add
addl
lret
add
add
jbe
addl
pop
add
add
add
das
add
add
ret
add
add
mov
jno
mov
add
je
fiaddl
pop
add
add
add
test
add
add
add
add
fadds
push
testl
push
add
add
add
add
add
add
push
mov
add
add
add
add
pop
add
add
add
push
add
add
add
add
pop
add
add
add
push
add
addl
fiaddl
mov
add
addl
testl
inc
add
add
das
add
add
add
add
add
das
add
add
add
addl
xor
mov
jae
addl
lea
das
add
add
testl
add
add
add
add
add
add
or
add
add
add
add
add
jae
inc
add
push
add
addl
inc
add
add
add
add
lods
add
adc
ret
add
sub
incl
sub
xchg
and
add
or
aas
add
add
add
push
add
add
add
add
add
add
add
aas
add
add
add
lahf
add
add
add
and
fiaddl
incl
push
add
add
add
add
add
add
add
add
mov
add
inc
add
add
addl
pop
add
test
dec
add
add
add
add
add
add
push
add
add
add
push
add
add
mov
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
testl
inc
add
add
mov
push
add
sub
and
outsl
add
sbb
add
add
add
add
dec
movsl
push
mov
mov
mov
or
and
inc
jo
cli
or
ds
pop
clc
add
xor
xor
push
cmc
add
loop
out
sub
cs
cmc
or
cmp
icebp
add
jnp
stc
ret
sarb
repz
ret
pop
xchg
or
mov
repz
jo
ja
daa
jp
push
data16
sahf
push
leave
cmp
cli
pop
mov
mov
mov
mov
push
scas
dec
nop
fcompl
push
daa
sub
jg
test
insb
ja
push
add
cmp
stos
icebp
out
mov
sub
roll
pop
dec
out
daa
pop
icebp
mov
pop
cltd
out
add
scas
and
cmp
cwtl
sbb
je
push
out
cwtl
mov
jbe
xor
scas
mov
push
sbb
cld
mov
ss
cmpsl
ja
jl
fwait
and
into
mov
add
or
sub
jbe
ret
sarb
pushl
or
dec
jns
jo
mov
mov
and
shlb
jge
mov
pop
pop
bound
arpl
les
jo
add
sahf
jno
and
pop
pop
dec
or
adc
cli
cmp
jbe
jbe
dec
push
rcrl
sub
pop
imul
scas
mov
sbb
jne
scas
mov
pop
jecxz
rorb
or
shlb
xchg
xchg
faddl
inc
je
scas
js
out
inc
sub
popf
sbb
movsl
int
pop
bound
xchg
mov
icebp
popf
mov
lods
dec
rcll
je
xor
subb
fadd
or
xchg
adc
dec
cmp
jb
ret
idiv
cmp
cmp
scas
sub
repnz
in
mov
jae
mov
icebp
pop
lods
inc
jle
sahf
push
adc
scas
mov
adc
lcall
testl
push
add
popa
and
aam
cli
cmc
push
mov
pop
inc
sbb
loope
add
test
push
mov
sbb
cmc
lds
sbb
pop
inc
xchg
aaa
pop
xchg
pop
mov
mov
push
sbb
imul
sub
cmp
jl
std
and
fs
xor
sbbb
sub
repnz
push
sbb
inc
imul
mov
push
dec
dec
divb
nop
out
mov
and
pop
dec
in
icebp
sub
mov
shrl
gs
xchg
add
addb
loope
clc
insl
repnz
xlat
inc
fisttpl
mov
pop
cmp
int3
repnz
push
lret
loopne
sbb
mov
inc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
subb
popf
bswap
mov
stc
add
adc
and
push
nop
bound
pop
subb
popf
ret
std
loop
repnz
xor
bound
pop
orb
jnp
pop
mov
ret
mov
repnz
add
xor
ds
cmp
jmp
fdivrp
or
pop
add
dec
or
cmpsb
ffree
stos
dec
repz
pop
jno
mov
push
lret
jle
stc
dec
bound
xor
and
rclb
dec
mov
call
rol
lcall
add
xchg
sub
sub
adc
jb
subb
popf
in
int
or
xchg
fstp
repnz
sbb
js
lock
inc
and
jb
inc
jo
bound
or
and
push
inc
push
in
dec
in
adc
lods
push
jg
insl
inc
popa
clc
cmp
mov
repnz
loop
fstp
sbb
add
repnz
dec
and
popf
ret
std
loop
repnz
add
xor
inc
push
push
xchg
bound
outsl
ret
lods
out
lret
loope
icebp
ret
nop
xchg
ja
and
push
adc
cmp
out
idiv
fdivp
ret
scas
lcall
dec
and
sub
push
sub
cs
xchg
pop
int
fdivp
mov
repnz
sub
xor
bound
pop
subb
popf
ret
std
loop
repnz
sub
xor
bound
pop
subb
jae
mov
lods
mov
rorl
add
adc
sub
aad
jecxz
jno
mov
icebp
ds
inc
cmp
insb
sti
movsl
xor
mov
test
dec
and
lea
dec
or
xchg
inc
aad
dec
or
inc
push
in
mov
jnp
in
mov
clc
mov
sub
jnp
sub
xor
inc
add
mov
js
push
adc
xorb
xor
xchg
pop
sub
xor
jae
push
sahf
mov
addb
fbstp
mov
mov
cltd
gs
or
lret
xor
out
sub
daa
outsb
dec
ret
pop
cmp
mov
rclb
push
scas
fldenv
mov
cmpsl
out
sub
cmpsl
xchg
lcall
loop
adc
mov
rcrl
or
popf
pop
movb
test
aad
mov
fs
in
adc
lods
or
ss
add
pop
sbb
jnp
sub
push
xchg
add
aam
pop
or
xchg
jge
ret
mov
push
arpl
xchg
outsb
xor
adc
aaa
cltd
adc
mov
mov
test
and
dec
bound
sbb
ljmp
rolb
push
movsb
adc
scas
xor
mov
xchg
sbbl
cli
fmuls
push
repz
inc
add
dec
or
xorl
fnstenv
loop
xchg
repz
repnz
push
mov
jecxz
roll
xchg
adc
mov
sbb
mov
jb
xchg
push
xor
push
jle
mov
dec
mov
pop
push
mov
cmp
insb
jo
sub
iret
xorb
inc
cmp
rcrb
xor
loop
daa
adc
ret
in
push
mov
xor
cld
xor
out
xchg
mov
sbb
ret
cwtl
std
mov
iret
and
sub
mov
xor
lret
in
xchg
arpl
mov
addr16
mov
subb
dec
adc
adc
js
add
test
mov
mov
push
mul
xchg
or
xor
adcb
test
pusha
add
push
lret
or
sbb
mov
cmpsl
insl
cmp
dec
cmp
pop
aaa
jmp
out
inc
sub
cltd
addl
mov
arpl
add
inc
inc
sbb
jmp
mov
xor
lock
sub
rorb
cmp
and
shlb
int
push
shl
inc
mov
stos
cs
add
imull
ficompl
jl
jecxz
push
fcomps
dec
insb
cmp
or
jmp
sbb
cld
out
dec
mov
jo
or
or
jle
les
inc
scas
std
mov
mov
xor
loop
lret
leave
lds
loopne
mov
fsubs
ret
cmp
or
lahf
add
cmp
in
adc
jbe
xor
js
jb
out
pusha
pushf
in
lret
cltd
imul
fneni(8087
fnstcw
push
dec
lods
and
mov
xchg
popf
pop
push
push
push
jmp
fildll
sub
imul
pop
xchg
jecxz
and
pushf
and
or
lods
ffreep
add
loope
mov
cs
insb
add
mov
push
sub
mov
push
enter
dec
push
jb
repz
sbb
lock
pop
push
es
add
pop
xchg
loope
insb
and
jne
xchg
jnp
ja
ljmp
int3
mov
call
xchg
push
subb
cmp
sarb
aas
xchg
adc
push
ret
jmp
mov
pop
stos
aas
popf
cmpsl
jnp
nop
push
ret
cmp
movsl
jecxz
das
xchg
push
dec
jle
add
dec
xchg
cmp
lods
jp
aas
cld
movsl
pmulhw
insl
push
mov
in
jecxz
scas
mov
sub
loop
push
cmpsl
push
sub
andl
inc
roll
push
cmpsb
fptan
pop
int3
xchg
out
mov
fldcw
mov
bound
mov
popf
imul
mull
mov
mov
ds
lods
fmuls
xchg
shrl
inc
inc
inc
mov
pusha
in
sbb
xchg
jnp
fldenv
pusha
add
outsb
ljmp
add
cmpsl
inc
cmp
adc
mov
push
push
dec
pop
cmp
call
test
sbb
in
mov
fwait
mov
inc
pop
ret
addb
lret
add
push
xchg
push
clc
jo
nop
push
stos
gs
mov
rolb
daa
lock
and
jmp
in
lahf
dec
es
push
cmp
repnz
jne
jae
fcomp
insb
push
loop
pop
jecxz
lds
lods
in
push
jne
scas
inc
mov
inc
jle
dec
pop
cmp
in
adc
sub
cmpsl
mov
sbb
mov
push
in
fwait
pushf
popa
push
es
cmp
sbb
cmpsb
sub
lahf
cld
pop
out
mov
cs
test
nop
and
ss
add
mov
jmp
neg
orb
jge
pop
mov
in
xor
mov
xor
test
pop
sub
pop
shrl
addps
cltd
jmp
sub
cwtl
sub
xor
mov
out
mov
das
jle
xor
add
test
xor
xchg
add
sbb
inc
add
xchg
cld
ret
notl
mov
xor
lods
adc
mov
sarl
and
enter
int3
cld
aas
cs
cli
div
add
mov
cmp
mov
cwtl
add
push
mov
inc
aam
push
cmpsb
dec
xchg
out
mov
fldt
adc
shlb
outsb
sbb
mov
and
pop
xor
and
mov
mov
add
jno
lods
mov
xchg
insb
ret
or
jmp
out
xchg
mov
pusha
xchg
mov
or
push
mov
rcll
outsl
jo
xorb
push
sbb
fcomp
xchg
xchg
jl
in
cmp
xchg
icebp
loope
dec
repnz
dec
dec
xchg
lods
aaa
out
mov
xchg
in
and
std
pop
daa
pop
in
inc
ljmp
rclb
lret
lods
jmp
inc
mov
fisubrs
xor
mov
addl
push
clc
add
popf
mov
popa
f2xm1
xor
pop
xlat
cmc
sub
jge
jns
lock
int
loopne
sti
test
fsubs
lcall
fdivrs
dec
fsubrs
fidivrs
xchg
js
in
outsb
cli
cmp
in
gs
lods
test
dec
mov
pop
jl
push
pop
int3
pop
imull
and
sub
hlt
or
hlt
dec
shr
stos
pop
scas
pop
xchg
enter
push
mov
cmc
inc
and
stc
jne
mov
ret
mov
xor
push
jae
dec
cmpsl
jns
mov
mov
mov
loope
hlt
loop
xor
out
jne
mov
jp
and
inc
sahf
jno
test
xchg
adc
aad
push
jmp
ljmp
pop
push
jnp
lock
pop
push
cwtl
ret
sub
dec
jle
mov
mov
jnp
es
mov
push
inc
mov
xorl
push
sbb
loopne
sbb
or
mov
jnp
inc
sub
loope
jb
fs
sbb
or
and
in
jl
arpl
fs
lret
push
inc
jmp
push
and
pop
repnz
dec
ret
popa
rcl
mov
inc
and
jl
sti
iret
add
sub
ss
xchg
test
mov
lods
cmp
add
mov
lds
lret
imul
jl
cld
into
mov
mov
mov
and
orb
imul
fwait
popa
ljmp
pop
and
xchg
push
popf
shll
in
and
mov
imul
pushf
aas
sbb
or
pop
xor
test
or
jge
adcb
mov
mov
lret
shrb
or
and
addb
or
lds
cmpsb
in
add
hlt
dec
inc
ret
lock
out
in
mov
and
bound
push
mov
pop
lods
mov
fiadds
jle
inc
and
subb
mov
or
sub
jbe
cmp
inc
std
pop
ljmp
push
dec
push
xor
adc
scas
mov
flds
pop
push
in
cli
ja
stos
aas
push
imul
in
cmp
and
push
dec
mov
sbb
ret
leave
loope
ss
js
xor
pop
enter
xor
cli
scas
mov
es
fldl
stos
fiadds
or
jns
xor
mov
das
shll
notl
gs
add
rolb
cmp
xor
outsb
adcl
adc
test
scas
mov
pop
and
stos
std
fcmovu
jge
sub
pop
jne
sub
sub
sbb
mov
inc
and
push
push
mov
ret
sbb
inc
lcall
push
lret
xchg
push
adc
xor
jne
push
pop
sti
stc
and
cmpsb
mov
or
das
pushf
in
or
rep
jp
add
mov
dec
sub
mov
cmp
pop
xlat
shlb
test
sbb
jb
jmp
cltd
sub
rclb
mov
or
xchg
ljmp
rcrb
repz
clc
push
mov
cmp
and
shll
cmpsl
push
pop
xchg
ljmp
cltd
lods
jmp
pop
int3
pusha
in
lahf
scas
rcrb
std
inc
sahf
add
xor
bound
mov
roll
mov
lds
clc
jl
loope
enter
es
popa
fmull
sbb
mov
ljmp
pop
cmp
push
sub
jmp
dec
and
adc
idivb
mov
add
insl
sub
imul
pusha
push
and
adc
jl
push
and
push
mov
jmp
incb
stos
mov
inc
lds
stc
jp
daa
test
or
pop
ss
xchg
es
inc
and
test
fistpll
hlt
mov
out
icebp
jecxz
push
je
push
in
sub
dec
xlat
dec
daa
and
std
jmp
adc
sti
push
mov
cwtl
adc
lods
mov
sub
ret
ret
sti
daa
cmc
test
jno
sub
cli
pushl
cmpsl
jmp
jns
cmp
and
and
xchg
test
jo
xor
notl
std
cmp
pop
mov
repz
push
movb
insl
std
cs
jbe
or
cmpsb
mov
dec
loopne
inc
ljmp
imul
jb
jno
xor
cmp
inc
in
shll
and
andb
andb
aad
cli
add
sbb
xchg
xchg
cmp
aam
xchg
mov
inc
ds
incb
jle
sbb
push
and
scas
sbb
cltd
out
fdivl
icebp
in
cmpb
push
cwtl
loop
mov
push
fisubrl
inc
pusha
paddsw
out
add
js
stc
shll
fucomp
fdiv
add
fs
dec
cmp
push
popa
fcmovne
xchg
faddl
into
and
pop
mov
mov
mov
xor
clc
arpl
sbb
hlt
sub
cmpl
xchg
out
test
dec
mov
lret
adc
mov
push
cmp
rclb
je
loopne
xchg
fadds
adc
dec
mov
fistpll
dec
mov
stos
loope
dec
jmp
pop
jns
and
mov
cli
adc
idivb
pop
sahf
add
ja
scas
cmp
in
xor
call
lret
clc
roll
jnp
xor
jbe
cld
push
sbb
data16
lcall
mov
lret
adc
mov
js
ja
andl
jae
shll
sub
mov
xchg
push
call
push
hlt
cmpsb
pop
inc
dec
dec
cmp
in
mov
in
popa
xchg
add
add
cmp
test
jg
cmp
inc
sub
call
scas
test
mov
sbb
out
inc
jmp
lret
push
xchg
call
jmp
mov
sub
pop
push
hlt
aam
inc
fs
pop
aas
loope
push
inc
test
cs
fdivrs
lods
xchg
scas
mov
fnstsw
jl
sub
bound
inc
out
out
imul
dec
adc
and
pop
addr16
lret
or
pusha
cmp
pop
cmp
das
mov
imul
adc
pop
jns
jnp
adc
mov
or
pusha
in
sbb
aam
mov
inc
xor
mov
rol
cmp
jmp
xchg
jnp
popf
dec
mov
lahf
movsl
orl
mov
int3
sub
or
movsl
inc
psubw
xor
gs
jae
je
dec
sahf
daa
flds
insb
adc
test
and
out
imul
sub
leave
fcmovb
adcb
aaa
lret
sbb
fdivr
in
lret
push
je
fdivr
aam
cmp
cmpsb
add
stos
outsb
and
outsb
mov
ja
jns
and
ss
js
pop
xchg
lret
lds
rclb
hlt
call
push
mov
xchg
clc
jmp
cmc
insl
orl
ret
adc
fadds
sbb
mov
jbe
mov
insl
cmpsb
sub
sahf
xchg
inc
cmc
rclb
stos
cmp
enter
xchg
lcall
jne
outsb
rcrb
pop
mov
in
jno
pushf
out
mov
fcompl
jbe
sub
or
pusha
mov
mov
cmp
iret
sahf
jno
cmpsb
stc
mov
and
mov
jmp
testb
sub
call
dec
loopnew
sub
jecxz
sub
sub
push
pop
jns
in
dec
je
testb
jbe
push
cld
xor
icebp
popa
aaa
iret
arpl
pop
jb
movntps
pop
movsb
adc
loope
imul
jnp
mov
mov
xor
jne
leave
dec
daa
movsb
jge
pushf
lea
sbb
mov
movl
jge
inc
fs
jno
repnz
leave
je
adc
cli
mov
pcmpgtw
in
cmpsl
lods
cmp
jg
inc
pop
cmp
ss
shrl
add
test
adc
movsb
push
cmc
lret
shrl
xchg
sub
lcall
hlt
pushf
cwtl
inc
sub
mov
js
mov
pop
xchg
repnz
add
je
loopne
imul
adc
test
mov
pop
jns
mov
dec
pushl
push
subb
arpl
fnstsw
xchg
test
dec
xor
pop
imul
adc
ss
mov
repz
nop
pop
aas
imul
xchg
xor
xchg
and
push
push
cmp
cmp
or
push
cmp
ret
dec
adcb
shl
notl
mov
or
int
jo
mov
xchg
push
push
push
dec
cli
cwtl
jno
ds
adc
cs
xchg
sbbb
fnstcw
dec
and
mov
inc
and
imul
movsl
inc
sub
das
sbb
rol
xor
mov
dec
sti
mov
shll
push
mov
int3
leave
cmp
adc
shl
outsb
sub
add
xor
xchg
push
mov
push
outsb
cli
repz
push
adc
and
mov
dec
jbe
adc
xor
push
pushw
jbe
imul
dec
pop
inc
cmp
dec
push
mov
adc
clc
push
adc
cmp
arpl
adc
mov
lods
outsb
sbb
cmp
add
enter
xchg
adc
sti
pop
or
pusha
call
out
or
dec
rcll
pop
jo
lea
shlb
fcoms
lods
add
adc
adc
pop
bswap
shrl
xchg
hlt
outsb
pushf
repnz
mov
pop
leave
stc
sti
cltd
sbb
loopne
xchg
aas
and
pop
push
adc
lcall
stc
mov
xchg
ret
mov
push
lods
or
loop
mov
xchg
js
call
rclb
in
mov
lahf
push
dec
or
gs
cmpsb
sub
adc
movsb
fidivs
xor
lods
mov
jecxz
pop
cmpsl
mov
push
adc
mov
jae
xor
mov
mov
int
pop
mov
dec
repnz
cmp
mov
lock
add
fisttps
sbb
fsub
sahf
xchg
lret
xchg
mov
nop
push
stos
xlat
sub
adc
xor
mov
mov
mov
pop
jb
push
sub
push
inc
adc
adc
inc
xor
pop
mov
in
stc
pop
rcl
sahf
xchg
mov
push
ret
popf
into
jp
inc
jo
fisubl
repnz
jnp
insl
add
cmpb
in
das
pop
cmpsb
or
icebp
inc
into
cmp
nop
mov
cld
lret
fs
stc
leave
int
call
inc
andl
jno
scas
adc
movsl
inc
cmp
fiaddl
aad
ds
mov
mov
insl
jne
mov
in
inc
popa
ret
out
sub
sbb
popa
pop
icebp
add
outsl
and
adc
scas
jne
lcall
inc
cltd
fdivrs
jmp
sbbb
loop
or
mov
mov
and
mov
cmp
arpl
imul
cmpb
pop
sub
xor
and
in
call
test
out
mov
mov
mov
inc
test
dec
inc
mov
imul
fcomi
inc
pop
aaa
pop
jp
ds
xor
arpl
and
test
shlb
xchg
ret
dec
es
mov
js
fimull
jne
test
out
xor
adc
shl
subb
imul
push
xor
fs
stos
xor
xor
mov
xor
jmp
jg
adc
add
jl
cmpsl
mov
cmp
add
and
in
lods
cmpsb
into
xchg
popa
mov
add
inc
pop
xchg
mov
dec
push
test
push
mov
jae
into
and
add
mov
out
pop
dec
inc
mov
es
or
fiaddl
adc
mov
pop
jns
mov
mov
lods
jo
push
sbb
jl,pt
mov
xor
xchg
adc
jle
rorb
pop
stos
into
aam
pop
cmp
dec
mov
cwtl
add
imul
test
pop
cmp
test
jne
dec
aaa
jns
mov
stos
cmp
xor
fnstsw
and
data16
cwtl
and
mov
test
addl
and
loop
and
adc
push
mov
or
test
dec
push
inc
fnstcw
xchg
or
jle
mov
shlb
jne
xchg
stos
sub
cmp
and
ror
ljmp
fistpll
jb
dec
inc
mov
fsubl
lret
xor
add
js
in
mov
jno
fadds
sub
xor
imul
pop
sub
inc
pusha
xlat
fcmovbe
pop
or
bound
dec
and
fcompl
fsubp
enter
pop
lcall
jo
mov
add
sbb
out
inc
and
ret
call
in
mov
jge
sbb
aad
or
or
int
dec
and
lahf
mov
arpl
sbb
mov
cli
cs
sub
add
fldt
in
imul
mov
hlt
stos
lcall
sbb
mov
jns
add
lret
rcr
adc
iret
mov
stos
jo
add
inc
and
lcall
and
adc
xchg
cmp
das
sbb
nop
mov
jo
sbb
xlat
pop
xor
test
sbb
jl
adc
jbe
xor
shlb
jno
dec
dec
or
inc
test
or
pusha
imul
pop
adc
fdivs
les
cli
stos
stos
sbb
lds
ja
scas
pop
arpl
adc
js
and
outsb
add
test
adc
mov
lret
addr16
movsb
cmp
out
cli
pop
sub
sbb
les
jne
daa
dec
jl
push
push
xlat
popf
outsb
addr16
mov
dec
nop
scas
inc
push
cmp
sbb
jmp
inc
ret
xor
and
daa
jo
fidivrl
popf
cmpsb
mov
adc
jb
push
push
sti
call
xor
jae
pop
mov
mov
jb
pop
mov
stc
push
scas
push
cwtl
andb
and
and
mov
std
loop
repnz
sub
xor
bound
pop
subb
popf
ret
std
loop
repnz
sub
xor
bound
pop
subb
cltd
inc
in
rclb
add
cmp
or
push
jge
inc
jb
orb
mov
in
sar
loop
repnz
mov
and
sahf
dec
aam
in
hlt
js
pop
out
test
cmp
enter
call
push
fsubs
xor
rorl
pop
aam
hlt
js
or
dec
enter
call
adc
mov
cld
push
lea
mov
negb
or
pop
cld
push
int
mov
test
lcall
sub
mov
call
call
jno
inc
pop
sbb
jns
xchg
imul
and
xor
call
inc
adc
test
inc
dec
pop
aam
lods
lahf
ss
pop
xchg
xchg
mov
lods
mov
xor
mov
sti
mov
mov
mov
add
jg
mov
shll
push
sub
sbb
fstpl
mov
or
xlat
movsb
outsb
dec
lea
lret
scas
inc
adc
call
stos
imul
inc
jecxz
mov
fwait
in
jne
les
insb
les
aam
in
jecxz
xchg
or
cmp
dec
fdivrs
clc
sbb
or
and
sub
mov
addr16
pop
cmpsb
dec
movsb
push
mov
xchg
xchg
push
sub
les
aam
subl
ss
inc
lea
mov
notl
xor
lods
sbb
sub
sbb
or
fs
sbb
push
fsubs
clc
add
adc
and
xor
les
pop
in
hlt
js
or
inc
enter
call
adc
and
xor
les
dec
mov
int
out
inc
lcall
aam
pushl
adc
xor
arpl
aam
push
pop
aas
sbb
in
xor
mov
or
sahf
movsl
icebp
pushf
sub
jbe
cld
xlat
pop
xor
lods
pop
or
or
lock
test
fwait
lahf
dec
jecxz
daa
xor
out
sub
mov
mov
dec
mov
aad
mov
das
jecxz
inc
add
fucomip
jecxz
inc
fcom
mov
test
push
repz
stos
jmp
test
filds
test
nop
movb
push
in
adc
or
push
mov
mov
add
nop
loopne
cmc
popf
shrl
lock
pop
pop
mov
mov
hlt
inc
fsubl
push
mov
xorl
inc
movsl
lock
jb
jg
fs
ror
gs
pop
pop
shl
das
jnp
fyl2xp1
cmovnp
sub
in
arpl
fisttpl
inc
xor
pushf
andb
cld
test
cld
mov
andl
dec
xchg
push
ret
or
add
out
ds
adc
mov
es
xchg
or
mov
pop
adc
scas
iret
lret
add
sub
stos
and
jns
imulb
inc
mov
fwait
sub
es
pop
rcrb
push
rorb
out
sbb
xor
dec
aas
sub
mov
adcb
cmpsl
dec
shl
test
mov
enter
jle
fimull
sbb
xchg
popf
out
loope
shll
icebp
mov
in
pop
fiadds
shrl
out
imul
xchg
iret
push
loopne
xchg
int3
inc
add
or
or
inc
pop
movsl
xchg
mov
sbb
inc
xor
jae
fistl
mov
lcallw
es
test
outsb
imul
jl
sbb
cmpsl
sub
popl
mov
loop
js
cmp
arpl
loope
cmpsb
ja
aad
fimuls
add
or
add
adc
cmp
or
aas
ret
js
xor
xor
rol
xor
mov
roll
add
mov
xchg
popf
gs
sbb
js
pop
or
inc
test
aaa
movsb
les
repnz
sub
xchg
xchg
inc
add
in
out
sahf
pop
pop
in
mov
mov
out
pop
into
xchg
jnp
cmp
and
sbb
xor
mov
enter
mov
xchg
inc
arpl
rorl
xchg
outsb
xor
xchg
in
xorb
cld
adc
pop
iret
subb
and
mov
sbb
mov
icebp
sub
inc
lock
ret
xchg
cmpsl
sti
mov
xchg
jo
xchg
xchg
vdivss
ljmp
cli
enter
popf
xor
aaa
dec
mov
dec
push
sub
gs
cli
sbb
movsb
pusha
mov
cmp
push
add
mov
inc
jl
dec
dec
xor
inc
xchg
cs
scas
xor
xor
aam
xchg
fdivrp
repnz
inc
cmp
sub
ret
in
cwtl
scas
xor
cmp
in
call
inc
pop
push
out
std
sbb
inc
push
dec
jnp
fmuls
fcmovne
sub
rolb
xchg
pushf
aad
nop
push
push
lea
jae
jp
in
dec
iret
mov
clc
inc
pop
sti
or
xchg
jmp
stc
mov
cs
inc
sbb
nop
add
fwait
push
mov
js
xor
sbb
lahf
pop
ds
call
lock
outsb
lds
lods
pop
imul
std
cmp
cmc
add
mov
adc
mov
inc
addl
sbb
cmp
adc
sbb
mov
enter
add
add
arpl
jp
pop
movsl
cmp
xlat
mov
xchg
incb
cmp
repz
push
je
je
stos
imul
mov
clc
lds
mov
xor
aad
pop
fcompl
adc
jp
test
sbb
rcll
les
mov
mov
sub
xchg
adc
lret
pop
testb
xchg
hlt
mov
xchg
stc
lcall
es
popf
lcall
mov
or
dec
mov
test
loopne
xor
or
rclb
mov
xor
xor
dec
cmp
xor
pop
mov
jecxz
pop
bound
out
cli
cmpsl
outsb
push
or
cmp
pop
jae
inc
mov
mov
or
imul
cmp
add
xor
push
pop
pop
rolb
dec
out
popa
or
xchg
addl
mov
mov
popf
stc
pop
adc
push
pop
hlt
sbb
jb
sub
ss
int
aas
and
cltd
or
dec
loop
push
lahf
xor
inc
fucomip
clc
dec
in
ss
pop
enter
pop
mov
nop
mov
inc
std
adc
xchg
cld
call
fstpl
xor
xorl
xchg
mov
test
and
popf
push
les
mov
hlt
mov
dec
mov
outsb
mov
arpl
shlb
ret
js
iret
loop
gs
js
cs
testl
xor
sbb
lret
xlat
mov
das
imul
lret
or
mov
loope
fwait
pop
lret
sahf
lods
adc
xor
xor
imul
ds
aam
sbb
cmpsl
les
jl
popf
sub
mov
je
jnp
jnp
xor
mov
mov
push
rcrb
les
or
dec
adc
outsl
decb
dec
iret
mov
dec
mov
and
sub
je
mov
pushf
mov
adc
test
dec
xchg
sbb
mov
mov
into
repz
mov
xor
xor
ljmp
bsr
adc
fsubl
daa
mov
push
ljmp
and
push
cli
pop
cwtl
imul
es
or
insl
pop
jmp
xchg
sub
pop
xchg
ja
dec
xchg
pop
add
xor
rclb
rorl
mov
pushf
icebp
jge
adc
scas
ror
push
test
push
inc
mov
add
sbb
pop
jle
xchg
fcoml
js
stos
mov
or
pop
fisttps
mov
mov
or
mov
addr16
shl
fnsave
out
hlt
icebp
inc
inc
lahf
or
xchg
inc
test
push
mov
mov
out
nop
popa
aad
jge
in
xchg
outsl
inc
shlb
mov
mov
loop
pushf
daa
fnstcw
push
add
enter
jge
shl
jbe
hlt
test
jne
xchg
pop
cmp
inc
subb
shrb
pop
aas
add
loope
and
lock
jecxz
and
cmpsl
xchg
icebp
jae
ljmp
aaa
aas
jne
outsb
ror
jmp
addr16
addr16
xchg
jge
sub
cmp
fistl
sahf
scas
push
jne
and
shrw
sbb
adcl
pop
dec
out
repnz
pop
xor
lahf
push
push
imul
arpl
mov
sub
dec
xor
scas
loope
jecxz
leave
or
jl
in
sahf
loopne
fmul
movsb
jno
or
mov
mov
or
mov
or
pop
mov
inc
and
stos
lods
jbe
push
adc
and
aaa
pop
ret
add
fwait
mov
push
lods
cmp
dec
popf
lahf
clc
cltd
bound
sbbb
inc
lret
adc
sub
pop
adc
popf
mov
inc
sbb
jge
dec
sub
sub
fwait
in
mov
jg
movsb
push
scas
mov
sub
inc
loop
xchg
sbb
mov
out
or
xor
int3
jb
jl
mov
or
fstps
pop
add
fidivrl
inc
int3
cmp
lahf
sbb
jg
add
shll
mov
xchg
mov
xchg
sbb
dec
mov
lret
pushf
cmp
pop
test
fwait
xchg
pop
pop
jmp
xor
shlb
les
mov
jbe
mov
mov
bound
cmp
or
xchg
sub
mov
sbb
adc
bound
add
sbb
inc
cs
clc
test
push
sbb
repz
mov
sbb
imul
paddd
rep
push
mov
ret
add
in
rcrl
scas
pop
sub
xchg
lds
jmp
lret
fcompl
or
sbb
aaa
and
add
push
dec
mov
out
push
inc
xchg
push
push
inc
xchg
mov
aaa
jle
ret
push
ljmp
mov
shll
pop
cmp
add
pop
imul
sub
adc
bound
pop
and
jbe
insl
ss
repnz
dec
pop
mov
push
jg
or
jbe
mov
jnp
scas
das
inc
jmp
xor
fwait
stc
add
into
cltd
mov
mov
mov
fs
std
fiadds
mov
imul
add
jae
insl
and
cmp
fidivrs
xor
lds
adc
pushf
lods
and
cld
cli
xchg
add
jecxz
cltd
add
test
in
pop
fcmovnb
aas
and
cmp
xchg
push
outsb
cmp
imul
stos
repz
inc
cmp
push
orl
leave
hlt
mov
jge
jg
xchg
sbbl
fs
shlb
jne
sahf
es
lock
es
push
mov
in
jp
lret
pop
jo
pop
cmpsb
xor
push
repnz
shll
subb
cmpsl
pop
dec
mov
mov
dec
mov
iret
subl
cs
andl
enter
push
add
pushf
push
lret
stc
iret
mov
sbb
mov
mov
pushl
cmc
sub
addb
pop
dec
stos
loope
in
xchg
bound
clc
add
mov
cmp
add
pusha
mov
adc
loopne
jmp
sbb
pop
sbb
dec
fs
inc
pop
add
test
hlt
sbb
add
pop
and
hlt
xor
inc
add
add
pop
sbb
cmc
push
lods
mov
in
cli
jge
pop
aaa
push
ss
repz
sbb
or
fdivr
xchg
add
psrad
xor
int
ja
loopne
daa
imul
push
add
jns
je
pop
cli
test
pop
sub
or
gs
cmp
popa
or
popf
sbb
scas
rcrl
jl
jb
mov
je
xor
mov
mov
xchg
cmpb
inc
shl
clc
add
mov
cmp
mov
pop
bound
mov
mov
movsl
rcrb
add
or
pop
jns
sbb
mov
jae
mov
dec
jnp
subb
scas
lea
add
js
pushf
push
adc
jmp
jp
cmp
jne
mov
ficomps
adc
sbb
inc
push
stc
dec
cwtl
jecxz
mov
dec
xor
mov
or
mov
and
pop
outsl
out
jle
jl
mov
cwtl
sub
in
scas
xor
sub
jns
ds
pop
lds
cmp
and
add
cmpsl
xor
inc
jmp
xor
pusha
cmp
scas
mov
jno
imulb
flds
push
pop
inc
cmp
sbb
and
push
pop
add
loop
je
cmc
sub
cmpsb
mov
fwait
push
lds
xor
cmpsb
in
mov
jb
jne
adc
dec
inc
imul
test
jg
dec
and
lods
fwait
test
or
rol
sub
adc
add
lds
adcb
mov
hlt
xor
sub
push
push
cmp
pop
bound
outsb
lret
scas
inc
loopne
lea
test
lcall
push
pop
add
testb
pop
fiadds
test
mov
push
mov
into
sahf
or
repnz
mov
sbb
pop
push
ss
xchg
cli
fmull
inc
xor
cmc
inc
mov
pop
mov
mov
lcall
fsubrs
jmp
xchg
lret
filds
jnp
cmp
subb
test
outsb
push
fistpl
std
pushl
pushf
inc
gs
rorb
cmpsb
call
aaa
fmul
ljmp
or
add
jno
pop
mov
cmp
add
into
mov
cmc
sbb
xchg
or
ret
test
loopne
xchg
fdivl
jns
mov
mov
sahf
or
loope
dec
jmp
dec
aam
pop
cmpsb
pop
cwtl
stos
int3
inc
in
int3
movsl
inc
sbb
adc
dec
clc
push
pop
gs
push
cmp
cmc
push
mov
clc
inc
fnstcw
xor
fisttpll
push
sub
mov
loope
push
pop
insl
enter
add
pushf
xor
hlt
je
cwtl
into
lea
adc
xchg
aad
cld
cld
and
mov
cmp
mov
xchg
cmp
adc
cmc
dec
sbb
adc
or
sbb
inc
imul
je
out
inc
scas
push
sahf
sbb
xchg
jnp
adc
movsb
lock
imul
lahf
bnd
sahf
mov
pop
sbb
movsb
fistps
mov
pop
pop
aaa
pusha
cmp
femms
inc
jecxz
sub
loope
loop
sub
sbb
pop
pop
js
mov
test
jns
in
push
outsl
inc
outsl
mov
daa
cltd
ret
std
subl
sbb
repz
xchg
sbb
xchg
add
jp
mov
ss
test
fcmovb
mov
repnz
jnp
daa
rcrb
sbb
inc
mov
subl
das
int3
push
mov
or
or
adc
lret
or
adcb
or
dec
push
inc
or
test
xchg
pushf
dec
cmp
jmp
inc
popa
ljmp
lret
movsl
adc
jle
adc
mov
push
enter
popa
aad
lods
in
or
ret
sbb
test
add
push
cmp
pop
xor
rep
ja
add
pop
sarl
outsb
jae
add
mov
pop
gs
push
dec
js
mov
dec
test
aam
js
fists
addr16
dec
hlt
pop
sbb
neg
jbe
test
loop
iret
push
jnp
cmp
sub
jae
xchg
ds
pop
pop
xor
cmp
mov
mov
test
mov
rolb
aaa
fnsave
push
mov
into
xor
and
push
mov
les
stos
leave
xchg
lcall
stos
aaa
cld
adcb
mov
mov
insb
or
xor
xor
stos
lods
xor
push
xor
sbb
mov
lea
mov
cmpsl
loopne
adc
pop
lcall
clc
cmpsb
and
clc
js
mov
pop
push
inc
bound
subb
fbld
xadd
mov
mov
xlat
test
adc
insl
cmp
idivl
mov
lods
aas
add
or
outsb
lcall
lahf
mov
test
xchg
scas
aad
xchg
loop
pop
rol
mov
cmp
pop
int3
mov
or
cmp
fsubrs
iret
and
bound
fwait
scas
shr
push
iret
push
push
mov
pop
mov
mov
jno
cmp
scas
mov
mov
shrl
imul
mov
jne
lods
and
addb
mov
out
outsl
popf
mov
ds
cs
cmpsl
add
cmp
mov
push
insb
mov
lea
gs
inc
mov
jp
aas
sub
ficoms
push
and
pop
cmp
jno
outsb
dec
idivl
aad
clc
push
mov
inc
push
in
mov
xor
pop
arpl
mov
cltd
xor
inc
or
lods
inc
cmp
outsb
or
dec
cli
cmpl
outsl
add
inc
and
jge
jecxz
mov
inc
ljmp
idivl
jmp
lcall
push
test
cmc
mov
push
jbe
mov
jecxz
push
fs
jmp
clc
cmp
add
sub
dec
inc
gs
jmp
arpl
dec
mov
xchg
cmp
js
dec
out
mov
cmpb
arpl
xchg
iret
xlat
dec
pop
nop
and
cmp
ljmp
in
bound
lcall
ss
sahf
cmp
pop
lock
int
xor
mov
mov
loopne
rolb
cld
dec
adc
xor
sti
out
cmp
dec
mov
int
and
mov
shll
pop
jo
outsl
lock
dec
out
mov
jo
cmp
dec
cmpb
add
addl
xchg
inc
leave
mov
fisttpl
loop
fisubrl
inc
ljmp
fistpl
sbb
mov
mov
loopne
sbb
es
cmc
sbb
fwait
mov
adc
sti
xchg
cwtl
or
inc
jge
xor
xchg
cwtl
or
jbe
jl
cmp
inc
pop
inc
scas
mov
sub
dec
xchg
mov
cs
js
test
mov
cltd
or
repz
mov
mov
fidivrs
arpl
and
inc
arpl
js
or
jl
in
dec
pop
call
dec
dec
jno
jecxz
idivb
inc
mov
imul
insb
jno
jne
inc
push
call
push
push
popa
adc
pop
jae
scas
and
mov
mov
mov
dec
mov
sub
addr16
add
and
cmp
popf
outsl
fnstsw
bound
test
xchg
je
and
insb
js
out
xchg
mov
loope
dec
shlb
mulb
shlb
fstl
addl
in
pop
repz
xchg
pop
loop
pop
popa
cmpsb
sbb
fsubl
xor
int
adc
in
movsl
lock
lds
imul
push
sub
dec
and
add
je
test
or
or
mov
mov
mov
imul
push
cmp
sbb
push
xchg
scas
popf
iret
xlat
daa
lret
movsb
scas
lcall
or
sahf
fdivl
or
cltd
xchg
push
mov
sahf
sbbl
shlb
push
jbe
aaa
add
sub
scas
aas
sti
outsb
loope
cmp
outsb
push
aaa
int3
xchg
xchg
test
dec
jle
xor
ficompl
push
clc
test
and
jb
mov
ljmp
mov
xchg
push
mull
or
stc
adc
mov
daa
imul
mov
pushf
push
movsl
movsb
icebp
jbe
subps
jae
icebp
hlt
daa
into
std
jl
xor
mov
fisttpll
in
pop
cmp
or
or
cltd
push
xchg
jp
or
pavgw
les
push
clc
cmpsb
stos
nop
push
push
push
pop
and
push
jns
jbe
cs
into
sub
jp
add
lods
jne
mov
xchg
fs
jecxz
imul
jo
xor
adc
push
into
xlat
jmp
mov
in
mov
addr16
adc
notb
cmpsb
loop
shl
cmp
xchg
and
cmpsb
ja
mov
scas
jno
cmp
jecxz
sub
loope
sub
xchg
xor
lods
or
in
subl
stos
loop
mov
rol
in
scas
les
lcall
jle
or
andl
lds
in
dec
gs
popf
fnsave
into
jno
ret
outsl
sbb
and
test
adc
xchg
inc
mov
rorl
xor
inc
dec
push
cmp
dec
rcrl
daa
sub
lahf
lahf
out
and
mov
cmp
scas
sbb
cmp
add
jbe
and
bound
adc
out
xchg
mov
mov
push
xor
mov
cmc
addb
xor
and
js
jo
xchg
bound
loope
jae
repnz
arpl
push
xchg
cmp
xor
jl
dec
pop
and
mov
lret
dec
fs
xchg
mov
xchg
mov
mov
pop
push
pop
and
and
dec
mov
fldt
leave
lds
bound
mov
mov
lahf
repnz
enter
imul
lret
cs
pushf
xchg
mov
adc
pop
jp
mov
cwtl
ret
pop
fwait
das
ret
and
mov
dec
test
add
add
enter
or
inc
jae
fs
nop
cmp
mull
mov
xor
mov
fwait
push
outsl
test
test
in
clc
int
mov
test
mov
ret
les
mov
pushf
jno
mov
cs
pushf
sub
les
push
xchg
cmpsl
pop
xchg
sbb
push
or
jg
test
fstpt
add
imul
sbb
push
fsubs
clc
add
adc
and
xor
les
pop
in
hlt
js
or
inc
enter
call
adc
and
xor
les
in
hlt
jns
or
inc
enter
call
adc
lock
loopne
shrb
jl
or
mov
call
pushf
fistl
inc
push
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
ds
push
push
push
ja
or
sub
inc
pop
mov
lcall
fmulp
into
fidivrs
cs
push
push
push
jle
outsb
outsb
pop
dec
dec
sub
mov
cld
fmulp
into
fidivrs
aaa
cs
push
push
push
push
jle
outsb
pop
push
dec
inc
mov
imul
jmp
mov
cmpsl
mov
bound
push
imul
cmpsb
cmp
jbe
test
xchg
mov
jne
xor
mov
pop
repz
jle
outsb
lea
push
and
fidivs
test
ds
shll
inc
sub
mov
add
scas
mov
popa
decl
inc
pop
into
into
fwait
jo,pt
rcr
or
outsb
xchg
outsb
pop
cmp
dec
dec
and
jno
adc
xor
insl
stos
stos
rcrl
dec
or
push
cmpsb
inc
adc
daa
scas
in
outsb
out
and
dec
and
icebp
xchg
push
in
dec
pop
push
stc
jmp
outsb
jno
popa
sbb
mov
fdivr
cmp
cs
pop
push
push
jle
outsb
jle
dec
dec
inc
mov
xchg
mov
into
fistps
dec
dec
pop
imul
insb
add
xor
lret
ror
in
mov
sti
js
scas
cld
mov
inc
pop
push
jge
dec
jno
outsb
and
insb
int3
fcmove
fninit
jmp
pushf
or
movsb
stos
pop
cs
push
pop
cmp
jle
dec
dec
pop
mov
mov
fmulp
into
fidivrs
cs
push
push
push
jle
outsb
jle
dec
dec
pop
mov
mov
fmulp
into
fidivrs
cs
sub
scas
in
mov
mov
cmpsl
jns
cli
fbstp
or
pushf
push
jo
es
xor
es
jge
into
adcb
mov
test
adc
dec
mov
fldcw
ja
addb
ret
sarb
or
fwait
insl
and
fcmovbe
jl
dec
js
mov
sub
repnz
cmp
xor
jge
push
push
pop
lods
mov
xor
xchg
addr16
mov
movsb
add
sub
in
inc
je
xchg
js
in
inc
out
arpl
cmpsb
and
test
test
repz
sub
mov
scas
daa
xchg
push
pusha
mov
sub
ljmp
js
jnp
mov
loope
push
std
or
xor
loope
and
push
lods
mov
mov
loopne
mov
dec
add
ss
filds
xchg
cmp
jp
add
inc
outsb
mov
enter
icebp
mov
gs
pop
sti
sahf
loop
dec
push
aad
jnp
adc
ds
in
imul
pop
cmpsb
nop
mov
pushf
clc
pop
rol
cmpsl
push
sub
push
les
and
mov
mov
pop
sub
sbb
sti
je
pop
jmp
int
dec
aad
daa
fs
xchg
cmp
adc
sbb
cmp
push
fstps
addr16
negb
inc
cltd
shlb
mov
je
add
inc
arpl
sub
and
stc
xor
mov
popf
push
and
stc
mov
hlt
mov
inc
sub
rcr
cmp
lret
dec
add
int
stc
mov
or
lock
pandn
test
mov
xchg
sbb
and
cmp
repnz
inc
aad
xchg
aas
int
loop
jge
xor
ret
pushf
lret
sti
jecxz
cmp
movsb
add
inc
dec
inc
mov
push
push
daa
mov
clc
push
pop
incb
stos
ds
xchg
addr16
jecxz
out
data16
lock
inc
jg
ret
std
pusha
inc
adc
lahf
jb
call
call
popa
mov
out
hlt
push
fcmovbe
enter
rcl
push
lds
sbb
inc
add
lret
ds
aam
mov
stos
add
jle
aad
ja
stc
dec
bound
push
xchg
mov
mov
dec
jge
loope
sub
sub
mov
add
or
or
out
jno
jb
push
pop
sti
mov
and
cmp
dec
push
dec
mov
daa
pop
mov
mov
ret
and
les
popf
cmpsl
test
mov
mov
xor
cld
dec
xor
mov
jl
stos
outsl
dec
pop
cmp
and
jmp
add
test
sbb
jo
xchg
mov
xor
pop
xchg
popf
and
int
pop
inc
xor
xor
or
imul
nop
mov
call
test
divl
pop
pop
cmp
pop
into
arpl
sahf
mov
stc
ds
push
aas
jmp
adc
pop
int3
xchg
ror
ret
mov
addr16
cmpsl
or
insb
xor
sbb
adc
sti
xchg
add
test
in
js
cmp
pushf
push
jae
jne
lods
test
xchg
and
inc
fnstenv
mov
lcall
fistl
mov
mov
aad
mov
mov
add
xor
flds
out
clc
push
ljmp
sbb
sbb
stc
jae
inc
loopne
mov
mov
shlb
sub
dec
out
push
repz
jae
xor
lahf
fnstenv
imul
imul
clc
xchg
cmp
lret
repnz
das
pop
lods
out
jp
hlt
lret
adc
xchg
call
stos
addr16
insl
adc
ss
aaa
adc
push
loope
jge
add
stc
out
mov
shlb
jp
dec
ret
mov
test
movsb
push
dec
hlt
pop
or
or
idivb
cs
inc
out
jmp
mov
adc
mov
into
enter
jbe
ds
and
dec
jmp
jns
enter
mov
ss
incl
pop
mov
pop
push
sbb
push
rolb
ss
pop
pop
adc
push
outsb
scas
or
jmp
fmul
add
fldlg2
jns
add
jno
and
cmp
dec
ret
mov
cmp
push
pop
inc
lods
sub
sub
into
cmp
pop
int3
push
jno
add
shl
cld
sbb
aam
push
sar
or
inc
out
fisttpl
jp
call
add
lcall
loop
daa
mov
div
ficompl
mov
and
mov
fsts
cmp
ficompl
cmp
or
out
repz
lods
mov
push
pop
inc
mov
lret
mov
adc
jo
sahf
in
xchg
or
sub
gs
sub
lods
mov
push
push
stos
dec
sbb
mov
outsb
pop
jae
int3
push
xchg
movsb
inc
jge
xchg
adc
mov
sbb
xor
shll
dec
aaa
iret
xor
and
in
mov
mov
xor
xchg
pop
add
loopne
in
push
das
jno
sti
push
test
in
mov
and
fldcw
add
imul
xor
sti
mov
inc
aas
push
inc
repnz
add
xchg
dec
push
movsb
test
call
lcall
sti
inc
sahf
jle
arpl
jp
out
xor
dec
repnz
mov
dec
push
mov
mov
xor
stc
sub
aas
dec
or
gs
jmp
imul
mov
mov
xchg
jns
gs
cmp
pop
mov
mov
add
push
popf
mov
mov
rcrb
inc
dec
pushf
adc
lods
sbb
cmpsb
dec
or
pushf
mov
adc
stos
bound
sub
push
pop
sub
jge
pop
fisttps
mov
mov
fisubrl
test
test
mov
imul
das
gs
sbb
jmp
ret
push
inc
fwait
pop
xor
ljmp
jae
sbb
jge
loope
mov
loope
and
pop
clc
sbbb
push
xchg
jl
rcr
jecxz
inc
adc
insb
subb
scas
inc
and
sub
iret
mov
add
frstor
push
sti
jne
mov
aad
mov
pop
fldenv
sti
cli
mov
inc
pop
mov
ret
insl
cli
pushf
incl
mov
adc
xorl
lcall
dec
mov
jno
dec
mov
inc
push
dec
movb
jo
dec
stos
xor
pop
adc
mov
cltd
sub
mov
repz
or
repz
js
pop
imul
js
sti
sbb
xchg
xor
dec
lods
popf
imul
out
mov
xchg
jge
mov
mov
mov
daa
mov
sahf
mov
push
ja
and
mov
mov
loopne
dec
enter
cmp
daa
mov
dec
xchg
dec
cmp
in
inc
push
or
ret
lods
inc
loop
lea
push
jge
push
pop
mov
cmp
lea
nop
cltd
dec
push
pop
ret
mov
test
fimull
mov
xor
into
xor
xor
jns
xchg
fdivs
daa
roll
loope
sbb
movsb
pop
icebp
push
xor
cld
sub
adc
jb
cli
push
xor
icebp
or
xor
push
test
or
xor
push
jg
popf
out
cmp
lods
loop
fldt
mov
or
call
or
sbb
sbb
inc
cmpsb
dec
jl
xchg
push
nopl
sub
dec
scas
out
mov
and
scas
xchg
fnsave
cld
dec
jno
pop
aaa
hlt
lds
cmp
das
test
pop
aad
mov
mov
xchg
sub
xchg
testb
xorl
pop
sahf
mov
mov
leave
add
fimuls
cld
and
ljmp
mov
data16
sub
add
enter
testl
hlt
xchg
loope,pn
sti
add
mov
js
jne
icebp
or
lret
mov
mov
mov
adc
xchg
aad
jne
out
jns
pop
jno
dec
in
or
popa
lret
test
shlb
test
pop
test
inc
jno
jge
fstpl
out
mov
mov
or
jp
inc
fcompl
pusha
push
ja
sbb
sbbb
pop
push
insb
push
loope
push
xlat
push
mov
and
lret
ja
nop
push
jge
xor
cli
sbb
mov
sub
adcl
cmpsb
mov
inc
mov
ret
mov
mov
shr
mov
cmpsl
pop
mov
lea
inc
js
sti
push
mov
out
sbb
dec
sahf
sub
stos
mov
call
out
pushf
ja
add
nop
mov
test
and
jb
fldcw
dec
les
xlat
push
jns
cmp
add
push
jne
xor
sub
dec
mov
pop
lock
insb
daa
test
xchg
mov
dec
xor
fmuls
bound
sbb
fldenv
fcoml
es
jle
nop
cwtl
aaa
sahf
addr16
cmp
pusha
xchg
arpl
ja
sub
inc
and
popf
jl
loope
fisubl
scas
xor
in
daa
pop
sbb
loope
xchg
sbb
subl
bound
fs
mov
lret
jp
cmp
push
lcall
push
mov
xchg
pop
in
push
inc
xchg
mov
adc
mov
cmc
xchg
aad
jns
ljmp
or
paddusb
test
fwait
scas
and
nop
pop
mov
mov
cli
mov
popa
pop
popf
jmp
imul
pop
xchg
out
push
add
cmpsb
loope
test
and
xor
mov
in
data16
sbb
movsl
jg
imul
inc
lret
outsl
rolb
sbb
int3
fidivs
jecxz
jmp
ja
mov
xorb
xchg
add
enter
xor
inc
icebp
xchg
scas
mov
mov
pop
lods
sbb
aaa
insl
xchg
cwtl
pop
xor
and
daa
cmpsb
repnz
lahf
or
mov
push
mov
lock
mov
and
cmp
repnz
jo
or
addr16
in
xchg
adc
test
mov
rcr
and
bound
mulb
xor
test
cs
add
sarl
mov
loopne
jp
push
lahf
xorl
jno
xchg
adc
xchg
pusha
fcoms
lret
add
loop
mov
inc
xor
jge
pop
mov
mov
inc
sub
xor
lds
aad
repz
push
pop
rcl
scas
or
inc
ja
dec
xchg
andnps
xchg
push
call
arpl
stc
fwait
ljmp
xorl
adc
pop
mov
sub
jbe
je
cmpsb
leave
sahf
sti
dec
loopne
cli
jne
dec
adc
in
popf
jp
mov
stos
sbb
jbe
data16
mov
mov
test
addb
or
icebp
in
insl
cmovne
popf
dec
imul
dec
cmp
pop
mov
ficoml
pop
mov
sbb
arpl
bound
aad
pusha
inc
mov
aaa
jo
push
les
sbb
dec
push
jecxz
data16
out
and
xor
mov
xchg
orl
test
push
jns
js
jge
cmp
fmul
cld
sub
inc
out
mov
jmp
scas
jg
jge
aam
sub
je
enter
mov
cli
fwait
dec
sahf
into
out
inc
outsb
cli
repnz
scas
test
ljmp
data16
sbb
sahf
or
fwait
jg
dec
leave
bound
inc
loop
ret
dec
inc
outsb
push
mov
fadds
inc
sahf
aad
mov
sub
sub
push
xorl
mov
mov
fs
repz
mov
adc
fiaddl
and
mov
xchg
or
pop
or
fistps
and
xrelease
clc
add
dec
lds
or
hlt
xchg
xchg
push
cmc
das
jg
dec
xor
sbb
cltd
jg
xchg
outsb
dec
test
aad
fistps
outsb
test
jns
ljmp
aam
insb
or
mov
pslld
jb
faddl
or
paddq
loope
push
aas
or
pop
inc
lods
sub
cmp
cmp
add
mov
push
movsb
cmp
decl
inc
dec
jge
xchg
adc
push
push
test
aam
xchg
mov
scas
jns
negl
cmp
in
dec
push
call
jg
lahf
leave
or
in
mov
xor
lretw
and
push
mov
pop
pop
mov
xchg
xchg
movsl
jns
add
inc
and
test
enter
inc
adc
or
lds
cld
movsb
orl
dec
add
scas
pop
jne
lcall
dec
movsb
mov
repnz
testb
outsl
mov
enter
insl
inc
out
ficompl
test
insl
jmp
fisubrs
inc
sbb
mov
pop
mov
mov
pop
pop
loopne
mov
sub
out
cwtl
jge
adc
or
add
setle
xor
pop
jno
sbb
inc
push
cs
test
xor
add
insl
lock
clc
push
jne
mov
cmp
xchg
or
jnp
mov
jne
insb
xor
adc
mov
push
push
pop
sbb
push
pusha
or
push
xchg
ret
out
jp
rcrb
add
add
ljmp
aam
add
mov
in
xchg
cwtl
sbb
aam
aad
push
adc
cmp
mov
fistpll
popa
arpl
in
add
lret
mov
mov
jne
pop
jbe
je
mov
outsb
in
movsb
stos
addl
ret
shll
ror
jnp
sub
and
xorl
dec
jecxz
jne
xchg
sbb
arpl
jge
dec
or
cmp
dec
sub
push
sbb
cmp
imul
imul
movb
stos
clc
jne
imul
rcrl
std
leave
test
xchg
pop
insb
mov
popa
sub
sbb
fisttps
es
inc
dec
sbbl
addr16
jae
xchg
adc
and
icebp
in
test
sbb
dec
push
pop
xchg
push
cs
inc
popf
mov
cmp
insb
push
movsb
jne
jmp
sub
fnsave
testl
shlb
sbb
imul
cmp
stos
jge
push
aam
mov
fidivrs
loop
jno
aad
pushl
xor
hlt
xor
push
push
jbe
xor
cli
ja
ljmp
out
cmpsl
es
sbb
push
inc
sub
xchg
pushf
sub
je
ss
sahf
outsl
arpl
pop
mov
push
cmp
mov
cmp
mov
mov
jns
sti
push
cmpsl
cmc
sbb
adc
mov
cwtl
in
mov
mov
push
inc
pop
cs
xor
cmp
pop
testl
dec
mov
lcall
jmp
ds
andb
mov
or
jg
sbb
clc
add
pop
test
test
sbb
int
call
sbb
xchg
push
clc
mov
popf
cltd
jp
imul
mov
and
cwtl
insb
push
push
sbbl
es
rorl
test
call
adc
repnz
push
xchg
jo
xor
in
inc
fistpl
cwtl
ds
enter
dec
xchg
fimuls
push
sbbb
and
je
mov
popf
mov
lods
icebp
mov
shlb
int3
cmp
sub
jbe
sub
dec
jae
cli
inc
cltd
mov
fistpl
adc
sbb
push
lret
repz
dec
cmp
imul
out
mov
dec
jecxz
mov
sbb
not
aad
test
sbb
int
or
pusha
fisttps
mov
adc
rorb
mov
push
in
es
int3
cmp
pop
ret
cmpsl
ja
inc
pop
mov
mov
sar
sbb
mov
push
cmp
aas
test
data16
lret
sarl
sub
shll
std
pop
arpl
dec
jns
cmc
in
push
hlt
stos
imul
clc
negb
lock
out
cmp
leave
ret
lret
pushf
sub
daa
add
pop
loop
ss
sub
arpl
push
sbb
and
pop
mov
insl
inc
subb
mov
and
jle
mov
xor
jae
lahf
mov
dec
fsubrs
jbe
faddl
pop
jp
icebp
adc
inc
mov
stc
icebp
jg
cld
mov
test
mov
inc
xchg
fistps
addr16
xor
cmp
in
inc
mov
movsb
popf
pusha
mov
test
push
push
sub
sbb
std
add
jnp
fs
lret
idivl
pop
mov
push
pusha
cmp
dec
push
in
lods
or
ficoml
jae
mov
cli
shrb
stos
ret
inc
data16
xlat
cmpsb
add
ret
inc
jecxz
adc
jns
push
loopne
jns
clc
js
shll
jg
sahf
lods
test
lret
lahf
loopne
ficoms
mov
add
jb
pop
cli
fstps
pop
scas
test
sti
sbb
add
dec
hlt
in
xchg
push
sub
mov
lods
dec
push
mov
add
dec
cwtl
mov
jo
imul
in
in
js
inc
mov
add
pop
and
adc
xchg
lods
bound
ds
call
inc
imul
jnp
cmc
call
add
arpl
sbb
ret
cli
jecxz
mov
cmp
loop
fnstsw
xchg
jno
pop
pusha
and
adc
mov
ja
addr16
mov
test
inc
enter
sbb
xor
add
shrl
add
cmp
pop
insl
mov
fdivrs
nop
xor
sbb
orb
mov
mov
std
add
in
or
mov
movsl
lret
std
cmp
xchg
jl
xchg
sub
add
mov
or
jge
test
lea
mov
and
enter
stc
jge
lret
pop
int
push
cmp
ja
inc
pop
hlt
lret
sub
jp
sub
ja
shll
mov
ljmp
dec
pusha
mov
aas
cmp
sub
lods
and
and
fcomps
or
fadd
movsb
sbb
in
and
imul
or
adc
and
mov
mov
out
movsb
out
sahf
add
inc
mov
inc
ss
lock
xor
es
and
enter
mov
mov
lcall
xor
and
jb
pop
pop
fnstsw
adc
mov
popa
loope
leave
aad
ljmp
daa
cmp
aam
add
adc
in
xorl
std
addr16
pop
es
sub
pushf
mov
dec
xor
inc
cltd
mov
mov
cmp
mov
insb
movsl
icebp
xor
sbb
subl
imull
pop
push
sahf
ficomps
cli
adc
dec
into
pop
dec
pop
sbb
xchg
sub
add
push
lods
and
adc
pop
pop
push
popf
mov
cmpsb
inc
push
xor
jo
loop
jg
iret
push
xor
push
outsl
push
xor
lret
icebp
into
sti
lret
and
xor
mov
sub
aaa
dec
hlt
mov
sbb
movsb
bound
lods
call
inc
stc
sbb
dec
cmp
sahf
push
iret
pusha
sbbl
jle
and
pop
stos
dec
adc
pop
lock
adc
ds
inc
xchg
xor
cmpsb
cmpsl
sbb
jo
mov
negl
andb
daa
inc
scas
data16
aaa
mov
mov
push
push
insb
xlat
out
mov
and
dec
mov
push
pop
imul
inc
test
rcll
or
repnz
jg
and
scas
xchg
xor
je
jo
sbb
mov
xchg
jge
into
cmp
jbe
dec
mov
inc
lcall
fbld
leave
ret
push
mov
arpl
xchg
mov
mov
jb
int
test
and
push
push
jle
outsb
jle
dec
dec
pop
mov
mov
fmulp
into
fidivrs
cs
push
push
push
jle
outsb
jle
dec
dec
pop
mov
mov
fmulp
into
fidivrs
cs
push
push
push
jle
outsl
jle
dec
dec
pop
mov
mov
into
fidivrl
sub
cmp
or
push
jle
outsb
jle
dec
into
sahf
inc
scas
push
adc
mov
andl
in
pop
cld
imul
cmp
dec
lods
pop
pushf
leave
and
jl
dec
stc
pop
mov
cmp
or
sbb
in
pop
cld
push
lods
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fstps
ds
cmp
mov
outsl
cmp
sub
orb
dec
fimull
out
test
test
sub
xchg
inc
sbb
aam
sbb
cmp
lods
push
cmp
sbb
xorl
data16
mov
in
pop
icebp
data16
sbb
or
jg
leave
leave
cmp
or
cmp
sub
pop
fmuls
xchg
mov
sysexit
mov
fsts
adc
push
mov
mov
cmpsb
lods
cmp
xor
mov
mov
pop
fidivrl
cmp
or
loop
imul
jmp
test
fnstenv
jge
das
pushf
mov
dec
std
sub
outsl
test
mov
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
jne
call
aaa
fmull
jl
outsb
lret
mov
sub
pop
les
push
push
mov
cltd
sbb
sarb
in
clc
fwait
daa
mov
xchg
pop
pushf
cmp
inc
ljmp
test
mov
mov
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
xchg
in
sub
jp
insl
and
lea
bound
popf
stos
mov
ss
dec
sub
aas
mov
push
cmp
xchg
push
sbb
pop
cwtl
jl
or
getsec
out
ret
jg
xor
and
xor
out
arpl
les
orl
pop
dec
xchg
lds
xor
lret
clc
push
repnz
push
inc
sahf
mov
xchg
dec
fcmovnu
dec
adc
add
mov
sbb
mov
insl
test
mov
loope
mov
addl
cmc
lods
pushf
cmp
mov
fcomip
mov
xchg
lds
mulb
xor
jmp
test
add
pushf
clc
lds
ret
out
pop
fbld
push
and
js
data16
bound
out
cwtl
mov
mov
sub
in
or
rorb
adc
das
inc
icebp
faddp
or
fdivs
in
and
or
xchg
ss
daa
and
loope
out
sub
xor
add
int3
add
inc
rolb
fs
repnz
stos
imul
dec
loopne
loope
shll
sahf
sbb
sub
loop
pop
clc
movsb
inc
sbb
lret
enter
mov
mov
jns
cs
or
push
fmull
jl
in
xchg
mov
jno
jle
jns
repnz
insb
cmp
pop
xor
sbb
flds
or
pop
pop
dec
cmp
out
push
adc
pop
jp
out
mov
and
fwait
dec
pop
push
repnz
sbb
fisubrl
mov
addr16
jno
push
data16
rcrl
mov
push
out
lcall
stc
or
mov
nop
and
jnp
adc
scas
je
in
mov
test
xchg
sub
pop
push
push
cld
sub
jae
aam
lea
add
jmp
xchg
inc
scas
cwtl
cwtl
xchg
and
sub
mov
jp
push
mov
and
cltd
out
loope
fsubr
imul
int
jnp
loope
mov
imul
mov
ljmp
bound
loop
xor
add
imul
mov
mov
sbb
dec
bound
jmp
sbb
movl
jbe
mov
push
imul
test
push
or
jns
ds
xchg
or
pop
enter
movsb
jo
mov
je
and
mov
xchg
test
jecxz
mov
cmp
testb
pushf
xchg
jg
cmp
popa
or
add
pop
or
repz
push
sbb
sub
pushf
filds
mov
and
fwait
dec
loop
pusha
sub
ret
int3
es
push
jne
sbb
mov
jno
daa
xchg
mov
xor
or
xchg
clc
loopne
ljmp
out
pop
mov
or
inc
cs
xchg
incb
add
adc
sub
in
sub
xchg
or
cmp
hlt
inc
loop
jp
mov
xchg
out
arpl
jecxz
jb
mov
xchg
cwtl
sbb
jecxz
stos
and
jne
ss
and
sbb
sbbl
fwait
sahf
mov
xor
jle
push
fcmovb
pop
lret
aaa
xor
inc
mov
or
add
adc
fistpll
or
iret
cmp
jmp
test
push
nop
pop
and
movsl
add
sub
inc
jge
stc
das
cltd
jns
in
pop
ret
movsb
js
inc
cld
xchg
pop
movsl
lcall
pushf
xchg
mov
xchg
sbb
inc
addr16
pop
aad
in
lret
ficoml
sti
jnp
add
jg
mov
repz
nop
mov
cmovl
enter
inc
aas
jne
in
cmp
repz
ja
repnz
jecxz
xchg
icebp
lods
mov
sub
add
pop
xchg
clc
lret
or
hlt
pop
and
mov
inc
sub
fldl
cmp
mov
adc
in
fcmovnu
jecxz
mov
repz
lahf
xchg
repnz
mov
cmp
shll
test
mov
xor
lret
xchg
popf
push
lea
hlt
cltd
arpl
pop
mov
mov
loopne
jnp
adc
and
xor
xchg
fcomi
xlat
add
pop
in
scas
pop
addr16
dec
sbb
mov
aas
and
xchg
mov
pop
mov
lret
mov
jl
jns
out
jb
fnstcw
mov
cli
out
insb
cmc
fiadds
mov
dec
jae
fsts
popa
mov
fiaddl
xchg
adc
outsl
lret
push
push
ss
scas
in
inc
mov
jbe
sub
mov
imul
jmp
fnstenv
lds
fidivrl
rolb
js
pusha
inc
xor
popa
sahf
dec
pop
cmp
inc
pop
loope
mov
xchg
fsqrt
dec
lahf
pop
mov
call
lods
and
shrl
mov
xor
cmp
movsl
add
adc
push
and
decl
bound
mov
push
cmp
mov
inc
clc
mov
xor
pop
dec
mov
jae
daa
jbe
dec
jae
sbb
add
mov
push
jnp
ret
hlt
stos
pop
sbb
xchg
mov
movsb
sbb
mov
push
in
jo
les
adc
mov
sti
fstps
and
and
addr16
push
xchg
in
cmc
enter
repnz
jno
cltd
or
insl
push
shrl
fwait
shrl
sbb
std
push
leave
sub
jne
jecxz
adc
pop
jmp
shll
xlat
pop
dec
stos
sub
sub
mov
out
pop
mov
daa
andps
rcrl
into
outsl
insb
jmp
mov
mov
stos
enter
pop
sub
add
lret
imul
jp
or
in
shlb
xchg
fistl
rep
add
jp
mov
pop
pop
adc
inc
out
in
les
adc
cmp
or
sub
in
jbe
clc
push
les
fildll
ja
fwait
nop
lods
mov
test
push
daa
icebp
sbb
mov
movsl
rclb
cltd
push
and
movsb
mov
and
aas
outsl
or
ds
jae
lret
and
or
aaa
fldenv
bt
xchg
xchg
les
ljmp
loope
pop
xor
jbe
and
xor
rorb
clc
dec
lcall
mov
in
add
dec
dec
xor
push
leave
ret
mov
mov
call
pop
ror
cmp
out
mov
jmp
lea
and
mov
fdivrs
jne
ret
int
mov
getsec
out
test
push
push
sub
push
xchg
fidivrs
insl
sbb
push
dec
ja
inc
js
imul
call
fbld
stc
test
jne
xchg
sub
imul
pop
aaa
aad
cmp
cwtl
push
movsl
dec
jecxz
pop
xchg
jmp
stos
inc
and
dec
jmp
xlat
push
fbstp
mov
dec
pop
lods
sub
les
mov
xor
test
pusha
cwtl
lods
add
shll
mov
icebp
pop
int
aad
sbb
xchg
or
sbb
in
cmp
lahf
and
dec
test
mov
mov
lea
jmp
lds
out
push
sahf
or
fsubrs
loop
and
insl
sub
loop
sub
lods
sbb
decb
addr16
push
es
ror
int3
xor
mov
mov
add
cmp
dec
xor
pusha
adc
add
sbb
xor
out
xchg
je
in
mov
mov
cmp
jb
dec
jo
xor
mov
cmp
fbstp
and
jae
or
mov
inc
mov
lods
fdivl
xchg
sbb
stos
jge
mov
cmp
adc
inc
aad
jae
lods
or
sti
fidivs
push
int3
data16
lret
cmc
xchg
emms
xchg
in
xor
mul
pusha
adc
push
test
adc
pop
push
mov
adc
cli
sti
fisttpll
lock
mov
sbb
mov
movsl
stc
loopne
pop
jne
mov
lahf
mov
repnz
hlt
mov
or
sbb
xchg
add
sbb
pop
dec
and
mov
and
xchg
pop
add
cmp
cmp
sbb
jmp
push
mov
jmp
and
inc
or
xchg
test
pusha
outsb
js
xchg
push
imul
sti
icebp
push
loopne
cmpsb
out
dec
push
mov
and
mov
call
lret
std
pop
push
into
ret
and
into
dec
or
mov
sahf
imul
ss
js
imul
pop
push
subl
dec
jg
lock
dec
jnp
int3
hlt
add
into
inc
scas
mov
or
jmp
sbbl
imul
hlt
xlat
hlt
pop
jno
out
mov
sbb
jns
je
push
cmp
push
sbb
imul
ret
pop
rclb
inc
dec
dec
test
pushl
jle
xchg
addr16
jae
dec
movsb
xchg
push
xchg
or
jg
push
jecxz
xchg
push
inc
stos
add
loop
mov
jne
loop
je
dec
push
cmc
push
and
inc
push
and
xor
pop
jmp
fsubrp
pusha
fistpll
jb
fdivs
mov
inc
xchg
ja
stos
push
xchg
into
jmp
jae
js
loopne
sub
cmp
loope
aad
rolb
mov
fisubl
push
dec
mov
movsl
test
mov
sbb
cs
cmp
shll
ds
data16
dec
popa
jmp
mov
sbb
idivl
add
cmc
pop
pop
add
loope
fwait
stos
push
in
add
sti
fcoml
fisubrl
pop
push
inc
scas
pushw
repz
adc
sbb
xor
mull
mov
movsl
ds
sbb
dec
xchg
repz
cltd
push
and
lds
add
sarb
xor
or
sbb
ljmp
sbb
and
pushf
fisubrl
fstps
mov
daa
jnp
insl
add
xor
jp
test
xchg
pop
add
or
jmp
out
dec
test
daa
mov
pop
in
sbb
dec
sbb
orl
scas
add
xorb
xor
xor
and
shl
jecxz
cmp
or
lret
rclb
scas
cmp
pushf
sti
cltd
out
dec
stc
fst
mov
inc
shr
in
dec
xchg
out
data16
cli
stos
xchg
or
test
dec
cmp
lods
push
fwait
shll
dec
xchg
adc
and
sbb
jns
add
mov
jo
and
sbb
mov
and
jmp
inc
push
xchg
mov
inc
sarl
fisubrs
jp
dec
cmp
outsb
push
push
push
lahf
mov
dec
sbb
xchg
aas
and
or
scas
adc
push
mov
aam
mov
jecxz
pop
lret
xchg
jb
inc
xchg
cmc
fimull
dec
cltd
pop
imul
ss
push
mov
inc
dec
pop
sub
mov
jno
repnz
mov
cmpb
dec
aad
frstor
xor
outsl
stc
lods
clc
lret
lock
insb
cmp
pop
jae
mov
push
jo
hlt
sub
cmc
or
out
daa
or
ljmp
sbb
jg
pop
mov
into
inc
xchg
insl
test
jle
fs
mov
add
push
aas
fsubl
hlt
in
mov
mov
pop
lret
mov
adc
adc
jp
xor
dec
inc
cmpsb
inc
repz
xchg
mov
pop
stos
xor
aad
mov
ret
jmp
imul
mov
dec
mov
push
in
jg
lret
inc
mov
insb
repz
into
pop
out
adc
outsb
xchg
xchg
fbld
push
pop
cwtl
ss
test
xor
xor
sbb
rol
lret
in
pop
gs
lahf
lods
clc
xchg
addb
cmp
jne
xorb
jae
inc
in
push
test
outsb
andl
insl
cmp
test
jp
sbb
push
outsl
xchg
sub
mov
jmp
mov
div
jp
or
jbe
arpl
lcall
dec
jmp
decl
or
in
adc
and
call
adc
aas
jne
dec
sbb
pop
notl
xor
mov
cld
sti
leave
daa
mov
xlat
xchg
mov
pop
pop
cmp
and
test
mov
mov
lea
sbb
push
jp
cmp
xor
test
jae
xchg
sub
jns
pop
inc
mov
in
mov
fld
movsb
xor
sub
inc
mov
push
or
negl
mull
push
sub
hlt
xor
ds
shll
xchg
mov
imul
mov
bndstx
arpl
xchg
stc
xchg
fiadds
pusha
into
shrl
dec
sahf
aad
je
adc
scas
cmpsb
cmp
cmc
push
lods
mov
test
test
gs
sahf
mov
popa
lahf
fsubrs
fisubs
in
mov
mov
incb
xchg
xor
xchg
pop
stos
aaa
aaa
mov
cld
clc
fcomip
stc
jbe
fs
sbb
mov
and
cmc
ljmp
lahf
dec
arpl
jg
inc
mov
adc
xchg
cmp
cmp
int3
xor
inc
adc
cli
in
ss
mov
xor
xorl
pop
ret
jecxz
inc
pop
jno
or
dec
and
sbb
cmpsl
fs
inc
fcmovu
and
cmp
push
and
inc
mov
int
scas
mov
lods
adc
sbb
test
cmp
or
inc
jns
shlb
mov
push
push
cmp
push
js
adc
push
mov
cmp
push
test
adc
push
push
in
js
pop
ficoml
cmpsl
mov
jbe
mov
inc
jg
in
inc
xor
jne
pop
scas
pushf
test
daa
xchg
int
inc
inc
mov
data16
push
dec
fs
fstl
sub
icebp
push
pop
xchg
pop
dec
sbb
inc
push
sbb
int3
aad
stc
push
fstl
cld
sahf
xorl
out
mov
push
repz
imull
mov
scas
je
push
xchg
fstpl
push
cmp
add
int3
cmp
bound
xor
adc
cmpsb
pop
xchg
popf
inc
enter
je
cmp
mov
fcom
scas
mov
jecxz
mov
push
inc
cmpsb
js
aas
fwait
push
jae
pop
orb
mov
xchg
jle
int
lds
jg
dec
movsb
dec
mov
out
in
fists
arpl
or
aam
insl
int
pop
fwait
out
add
and
xor
ljmp
inc
sub
ficomps
sbb
popf
or
lcall
es
mov
xor
movsl
call
sbb
fistpll
arpl
les
mov
lock
out
mov
outsb
push
jb
mov
adc
lahf
xchg
cmp
in
or
repz
scas
stos
cmc
dec
jl
popl
push
outsb
faddl
jecxz
loope
mov
mov
testb
bound
and
lods
shrl
inc
popf
pop
stos
fsubl
fidivs
push
sbbb
lret
jno
adc
insb
clc
add
aas
rcll
loop
gs
sbb
cli
hlt
cmp
or
lcall
mov
push
pushf
data16
aam
stos
aas
sub
inc
add
fldl
popa
js
fnstsw
and
pop
cwtl
mov
fdiv
xor
push
dec
jle
inc
inc
sub
test
mov
jecxz
cmp
nop
mov
sub
fwait
in
or
cmpsb
pop
cmp
push
xchg
imul
lods
in
lea
xlat
pop
sbb
mov
push
lahf
je
out
in
mov
xor
mov
es
imul
outsb
adc
xchg
cmpl
cwtl
ds
add
outsl
je
push
mov
sbb
in
call
pop
out
ds
arpl
or
mov
mov
cmp
mov
push
imul
jo
inc
addr16
mov
je
push
clc
mov
test
adc
pop
inc
in
aad
stos
xor
sbb
mov
mov
ret
mov
xchg
inc
jle
cmc
or
push
xchg
movsl
xorl
or
stc
stos
xchg
jb
add
pop
test
addr16
jmp
ljmp
and
pusha
mov
daa
push
or
call
scas
lock
or
lock
adc
mov
aad
and
cmp
mov
lods
push
fdivl
imul
imul
jbe
dec
push
push
jmp
sbbb
ss
and
movsl
pusha
adc
sbb
push
bound
mov
popa
pusha
or
out
sti
cmp
cmp
and
mov
rcll
jecxz
adc
jne
adc
jmp
ds
cmc
pushf
out
jbe
in
mov
jae
jge
push
out
popa
xor
and
jecxz
popa
into
xor
inc
icebp
orl
jne
shlb
movl
mov
jns
mov
or
data16
aad
imul
xchg
pop
outsb
push
ljmp
fcoml
loop
mov
cmp
and
xchg
in
je
sub
in
jb
jo
stos
push
xor
movsl
push
jne
mov
fists
sahf
repz
loop
daa
bound
scas
push
daa
scas
sub
inc
test
shl
fdivrs
das
sbb
pop
inc
push
mov
lcall
push
push
push
sub
mov
sub
pop
mov
push
into
xor
mov
pusha
push
rolw
sbb
addr16
mov
xchg
inc
push
push
gs
cmpl
ljmp
lea
adc
mov
fnstenv
ficompl
pop
stos
lock
lods
inc
inc
stos
adc
iret
mov
sbb
jbe
sahf
mov
push
adc
or
adc
into
jecxz
ror
cwtl
imul
push
sbb
sbb
lcall
push
mov
jge
out
mov
and
mov
cmp
or
stos
sub
cwtl
imul
push
sub
adc
movsl
cmpsl
cmc
lods
sub
ds
lcall
shrl
mov
loopne
int
and
lds
sbb
pusha
rorb
adcb
cltd
fmuls
pop
mov
rolb
sbb
cmpsl
nop
shll
adc
adc
xchg
pop
push
and
lret
xor
fmuls
add
mov
mov
insl
xchg
sets
jmp
popf
inc
fdivs
mov
jle
jbe
push
cmpsb
sbb
xor
jns
sti
das
jmp
leave
pop
fdivs
pop
xor
aam
bound
nop
int3
add
pushf
leave
push
adcl
addr16
ja
cmc
lret
cmp
push
add
jae
cmp
mov
jbe
push
xor
mov
xor
into
daa
pop
push
mov
sbb
ss
out
les
sbb
int3
sub
orl
cs
lret
xchg
cmpsl
roll
daa
xor
out
mov
std
jb
pop
add
lods
in
nop
cld
pop
je
add
mov
jb
adcb
mov
pop
and
xchg
dec
xor
add
cmpsb
jge
jge
fildl
pushf
hlt
push
leave
lahf
cwtl
outsl
repnz
push
and
jp
clc
repz
cmp
adc
arpl
cs
sahf
daa
mov
outsb
xor
stc
mov
inc
sbb
leave
mov
xor
ss
push
outsl
movsb
dec
es
add
mov
sub
or
clc
lods
xchg
loop
repz
int
adc
and
pand
jns
mov
xchg
dec
lods
dec
lea
imul
out
out
push
adc
out
or
stc
int
mov
pop
int
pop
stos
add
addb
addb
bound
mov
xlat
xor
xchg
rcrl
mov
imul
adc
sub
pop
sbb
call
dec
inc
jp
mov
or
push
rcrl
cmc
lret
inc
cmc
inc
stc
and
gs
cli
scas
mov
stos
rcll
rol
push
xor
int
add
outsl
and
rolb
add
mov
jge
lret
mov
pop
cmp
jo
ljmp
cmp
or
jecxz
add
lcall
fmull
lods
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
push
lods
sbb
insb
inc
dec
stc
sub
movsb
adc
push
repz
jecxz
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
shll
data16
push
loope
lahf
pop
icebp
dec
aam
les
push
testb
popa
adc
and
icebp
push
loope
xchg
andl
push
testb
popa
adc
and
icebp
push
loope
xchg
andl
push
pop
inc
out
mov
jns
leave
jg
dec
xchg
cmp
lds
int3
pop
add
xorl
lcall
inc
pop
and
add
insb
mov
mov
push
outsl
sbb
xlat
in
out
ret
adc
xor
sub
dec
je
mov
nop
test
or
sbb
mov
push
imul
in
lcall
dec
cltd
leave
stc
push
sub
inc
xchg
out
fsubrl
xor
or
xchg
mov
fwait
rcr
mov
mov
mov
mov
sub
push
pushf
cmpsb
add
imul
mov
add
dec
arpl
out
subl
mov
and
sub
orb
jbe
data16
push
loope
xchg
andl
push
testb
popa
adc
and
xchg
sbb
das
std
pop
enter
loopne
adc
or
aad
xchg
jne
shlb
mov
jle
inc
mov
mov
xchg
xor
push
int
repz
mov
loopne,pt
xchg
andl
push
testb
popa
adc
and
icebp
push
loope
xchg
andl
push
testb
popa
adc
and
dec
in
add
sbb
mov
subl
lahf
mov
movsb
ljmp
fsubp
mov
fists
push
xchg
popa
mov
xor
cld
dec
and
add
jno
imul
inc
sbb
jbe
dec
jns
lods
mov
sub
jno
mov
push
repnz
cmp
idivb
jmp
lahf
adc
fdivrl
cli
adc
cmp
push
ret
lret
loopne
xchg
push
outsl
cmp
lods
xor
or
push
mov
nop
add
nop
int3
xchg
fadd
push
jb
dec
lods
les
mov
lret
repnz
movsb
mov
add
push
xor
sub
flds
xor
xchg
in
fs
mov
lcall
jbe
push
scas
lret
jns
jmp
aas
sahf
push
inc
stos
pushf
pusha
or
orb
insl
mov
lds
aaa
jae
xor
sbb
cmp
inc
and
jbe
jns
sub
je
aaa
nop/reserved
or
mov
imul
decl
xchg
lahf
mov
pusha
adcb
out
int
ror
andb
jae
xchg
mov
and
add
jp
pop
test
outsl
stc
ret
mov
push
pop
adc
mov
lahf
fadd
imul
mov
push
inc
mov
pushf
mov
fsubrs
lret
sbb
jmp
ret
decb
dec
jecxz
loop
test
negb
sar
xlat
pop
insb
daa
daa
adc
mov
test
stos
and
pushf
pop
mulb
rolb
test
cwtl
add
inc
pop
call
mov
cltd
mov
fisttps
pop
loop,pn
mov
pop
lret
sub
fisubrl
inc
sbb
mov
pop
add
xchg
jae
cmp
push
aam
or
mov
test
dec
xchg
adc
cmp
outsb
mov
mov
sub
add
scas
fcmovne
ror
outsb
mov
dec
adc
pop
mov
push
inc
mov
scas
icebp
loopne
add
loop
aam
fnstsw
insl
mov
loope
mov
xchg
push
data16
cmpsl
dec
adc
and
popf
dec
mov
pop
aaa
ljmp
lock
sbb
lock
cltd
cli
int3
je
dec
test
sub
push
in
sbb
mov
mov
mov
dec
xchg
call
xor
and
out
jle
mov
mov
pushf
and
je
inc
testb
pusha
pop
movsl
jns
fcom
dec
ror
das
mov
push
cltd
std
jne
shl
jl
jns
cmp
xor
mov
ja
loop
mov
xchg
filds
jge
cs
or
subl
xor
lret
lret
js
cmpsb
cltd
fstl
rcl
shr
sub
mov
fcoms
inc
ss
adc
or
sub
cmpsl
lock
pusha
imul
add
sbb
cld
pop
xchg
pop
ljmp
ja
adc
outsl
lret
xor
mov
scas
adc
cmp
jp
inc
xorl
cmp
jno
stos
xchg
pushf
jecxz
dec
pop
xchg
outsb
xlat
push
and
cltd
stos
aas
xchg
jbe
ret
cmpsl
movsl
dec
fildll
mov
out
inc
jns
jb
add
dec
int3
or
mov
lea
hlt
fisubrl
jge
cld
icebp
inc
push
pop
ret
cmc
pop
xor
mov
xchg
sub
fistl
out
dec
mov
aam
lock
out
out
out
push
jg
outsb
stc
cmpsb
jle
popa
out
daa
popa
cmp
test
out
mov
inc
call
mov
push
or
jp
in
test
fs
and
mov
ja
mov
mov
adc
inc
xchg
aad
mov
jmp
ss
ss
fadds
ficoms
pop
add
push
int3
cmp
xchg
mov
jns
fdivrs
int3
and
sub
and
cli
imul
cmpsb
aam
ljmp
mov
mov
dec
dec
pop
pop
mov
xchg
pop
mov
mov
mov
xchg
int
aaa
test
sub
and
sub
mov
jle
sub
jmp
sub
pop
xchg
dec
incl
daa
daa
scas
mov
push
fdivrp
cltd
mov
dec
cmc
scas
mov
pusha
fstp
fildll
loopne
dec
outsl
out
and
lock
pop
mov
hlt
dec
push
cmp
pop
jmp
test
xor
dec
out
sub
leave
inc
imul
add
sub
xchg
adc
adc
lods
jnp
sbb
sbb
clc
scas
rorb
out
das
das
lods
insl
xlat
cmpsl
fildl
jl
jae
dec
cmp
pushf
test
sbb
push
add
cmc
sub
jmp
adc
adc
xchg
mov
jg
and
xor
aad
or
lahf
fdiv
lcall
and
and
add
in
inc
int3
xorl
mov
popa
pop
hlt
subb
mov
or
xor
fisttpll
add
jbe
xor
insb
inc
xlat
mov
ss
cld
ja
lods
dec
dec
mov
fildl
js
mov
imul
aas
pop
mov
outsb
aas
sub
lahf
mov
mov
mov
or
in
adc
cld
imul
es
icebp
loopne
das
mov
roll
cld
mov
insb
outsb
sub
xor
sbbl
push
pop
fwait
adc
outsb
dec
insb
inc
mov
repz
adc
xchg
xorb
dec
sbb
mov
sti
and
es
test
lret
jae
mov
subl
pop
xor
adc
dec
push
pop
das
push
xor
fbstp
hlt
push
fcoml
inc
mov
mov
inc
in
or
add
test
insl
sarb
jno
fisttpl
movl
sbb
scas
xchg
jns
pop
dec
sbb
mov
mov
mov
inc
jmp
and
shl
and
lds
imul
xchg
popf
dec
inc
lock
adc
push
outsb
sub
push
and
aam
ret
sbb
iret
cmp
jns
fcoms
je
es
in
sahf
fucomi
pop
push
push
mov
lahf
aad
addl
adc
cli
sub
jmp
lcall
dec
push
fdivr
dec
push
sub
mov
enter
lret
fldt
and
xchg
nop
jecxz
sbb
lock
dec
dec
nop
lret
aam
xchg
sbb
and
lret
inc
push
dec
inc
sbb
and
lret
mov
or
add
lret
icebp
out
rclb
xchg
cmp
repnz
into
shlb
lret
mov
or
mov
clc
jns
jnp
push
add
cltd
push
mov
ss
out
or
andb
mov
sti
int
int3
arpl
add
jmp
cli
add
hlt
out
sbb
dec
loop
rorl
rcrb
insl
mov
adc
mov
test
shll
mov
andl
mov
xchg
fidivs
movb
shlb
cmpsb
adcb
and
jnp
cmpsb
jae
aas
mov
add
sbb
mov
fisttpll
insb
cmp
xchg
dec
xchg
jge
js
es
sub
ja
cmp
push
xor
and
sti
mov
adc
lods
loope
sbb
push
ds
pop
sub
mov
dec
outsl
mov
xchg
jno
imul
adc
dec
xchg
fnsave
jle
fwait
xchg
int
pop
xlat
pop
lret
inc
stos
push
push
mov
out
sbb
fidivrs
inc
popa
decl
test
aam
sbb
and
push
outsl
sbb
pop
mov
sbb
pop
adc
mov
lahf
popf
xchg
xor
jl
and
lret
gs
adc
popf
jb
ss
inc
jle
xor
cmp
loope
jno
and
loopne
sbb
inc
stos
push
in
mov
sub
push
sub
out
cld
outsb
jl
inc
cmp
jmp
arpl
aad
push
dec
cmpsb
xchg
rclb
insb
call
sbb
ret
negb
stos
pop
sarl
ret
or
jle
push
lods
mov
pop
rolb
rcrb
mov
sti
mov
jae
pop
xor
add
push
adc
or
loope
stc
jbe
loop
cmp
mov
test
lock
lret
test
sub
sub
in
or
fisttpll
dec
jecxz
xchg
and
lods
orb
roll
cmp
or
xchg
data16
icebp
cltd
je
dec
adc
pop
pop
loope
jg
mov
shll
adc
pop
push
es
popf
test
lea
adc
pusha
xchg
dec
rorb
aad
rorb
ret
push
sub
dec
fisttpl
mov
push
and
xchg
inc
imulw
mov
repz
test
jle
test
xor
loope
xchg
fcomps
call
loopne
dec
xchg
das
mov
and
dec
lahf
mov
pop
mov
sahf
das
aam
jbe
or
and
dec
inc
ds
mov
push
repz
ret
xor
add
pop
or
adc
ret
xor
jno
xor
fisubrl
out
jecxz
loop
repnz
out
jo
adcb
outsl
cs
jno
mov
test
cmpsb
addr16
push
andl
dec
iret
adc
pop
mov
sbb
in
push
fisttpl
fildll
cwtl
cmp
xlat
sbb
sub
push
fldl
jle
int
mov
lds
adc
mov
or
nop
int
std
shrb
icebp
divb
jecxz
insb
movsl
shlb
inc
xor
scas
fcmove
sarl
dec
in
pop
sbb
dec
fmul
aas
lock
mov
mov
ficoml
cmp
pusha
lcall
and
sti
jp
lock
int
sbb
inc
out
movsb
or
sbb
lea
lret
push
lods
xchg
pop
test
inc
add
adc
gs
jns
mov
push
sbb
mov
pop
lret
popf
cmp
mov
sbb
cmpl
add
repz
aam
daa
jae
ret
cli
fnsave
mov
pop
or
loopne
or
lods
aas
xor
fildl
pusha
cmpsb
xor
lds
cwtl
jnp
insb
jo
or
aad
cld
push
sub
adc
js
add
les
xchg
mov
in
xchg
sbb
stos
popf
mov
sbb
cltd
mov
into
and
daa
imul
push
and
ret
jp
scas
xchg
push
cmp
daa
enter
push
jns
and
xor
xchg
xor
jbe
sbb
popf
in
sub
push
xor
ds
js
ret
dec
shl
cltd
arpl
jo
ffreep
out
shl
and
mov
imul
mov
ror
xor
xchg
popf
into
cmp
or
inc
mov
lods
xor
cmpsl
jmp
insl
ds
addr16
fists
das
ljmp
test
stc
call
int
xor
lea
xor
xchg
and
outsl
mov
adcl
pop
cmp
loope
mov
dec
pop
mov
addr16
push
cmp
xor
xchg
sarb
pop
mov
and
fistl
pushf
movsb
or
sahf
jge
inc
daa
ja
stc
or
xchg
icebp
pop
add
adc
adcl
push
repz
hlt
pop
fcomip
daa
cltd
imul
in
fidivrs
xchg
inc
out
jle
jle
and
mov
js
mov
sbb
xor
lahf
mov
and
loopne
mul
leave
int3
fcmovbe
pop
lahf
inc
mov
fnstcw
cmp
shll
mov
sub
dec
lock
xor
into
push
icebp
lahf
xor
xor
xchg
enter
adc
imul
jmp
inc
and
lods
dec
or
adcb
adc
jo
out
imul
stos
cmp
test
je
int
aad
dec
pop
imul
sub
icebp
sbb
xchg
xchg
cmp
out
pop
loop
bound
rcrl
ret
add
out
mov
sbb
xor
cmpsb
inc
push
xchg
shll
or
jnp
cld
aas
repz
stc
inc
lods
jmp
xchg
adcb
jns
xchg
int3
aas
les
adc
dec
mov
das
adc
iret
xor
mov
cmp
mov
mov
pop
out
cmpsl
fisubl
jno
test
stos
xor
out
add
popf
push
jbe
and
xchg
add
xor
scas
test
imul
xchg
ss
stos
fcompl
hlt
out
dec
je
arpl
sub
lahf
inc
test
leave
ss
pop
in
jne
inc
xchg
enter
xchg
mov
vandnps
push
adc
mov
in
dec
leave
insl
xchg
rorb
lret
xor
and
mov
mov
xchg
add
cld
sub
jns
and
lret
mov
add
sbb
xchg
ret
ljmp
cld
data16
rolb
xchg
ja
lods
pop
xlat
scas
xchg
push
faddl
sbb
jae
jae
fsubp
movsb
jno
mov
hlt
pop
fsubl
clc
push
push
cmpsb
addr16
mov
imull
jmp
jnp
cs
mov
ss
int3
cmpsl
mov
cmp
adc
fwait
and
es
pushf
fidivrl
repz
ficomps
ret
test
jmp
add
je
add
cmpl
mov
enter
push
jecxz
adc
lcall
push
data16
and
jge
jle
mov
push
call
and
mov
jne
repnz
cmc
mov
xor
out
loopne
pushf
shrb
push
stos
xlat
test
mov
xor
mov
sbb
cmp
inc
int
cld
imulb
test
shlb
scas
movd
icebp
dec
ss
stos
jbe
adc
lret
sub
pop
jae
mov
xor
sub
insb
pop
mov
cmp
stos
test
adc
xchg
inc
mov
mov
lret
shlb
mov
sbb
in
cmpsl
loop
das
dec
push
mov
jmp
pushf
push
stos
test
jno
insl
addr16
daa
xchg
pusha
or
dec
stos
popf
addl
or
les
fdivrp
inc
clc
outsl
movsl
fadd
jecxz
dec
xor
sbb
adc
in
dec
and
or
add
jge
lret
cmp
dec
call
jge
repnz
pop
movsb
push
imulb
jne
adc
popf
je
pop
push
es
push
ret
movsl
addl
test
push
add
movsb
inc
stos
xchg
in
push
jp
lret
mull
in
sub
mov
cmp
lahf
test
pop
lock
lds
push
cmp
sbb
mov
mov
ljmp
or
or
test
movsl
sahf
mov
stos
loop
sbb
inc
mov
jne
fdivl
push
lahf
mov
jns
bound
mov
jbe
inc
mov
dec
mov
xor
aas
pop
ror
and
lock
in
stc
lea
int3
jge
cmp
adc
test
jb
les
push
das
cmp
dec
gs
mov
jnp
xchg
adc
ret
push
jl
mov
sub
mov
push
mov
xchg
jp
mov
call
inc
ljmp
enter
cmp
add
cli
sahf
lahf
daa
sub
jnp
jnp
jbe
adc
xchg
jo
sub
and
std
adc
jle
xlat
dec
jge
test
cld
dec
mov
shll
loopne
and
mov
cmp
adc
sbb
pop
pop
xchg
lods
adc
out
rcrl
sbb
dec
lods
sub
add
or
dec
sub
jecxz
enter
mov
ret
pop
cmp
and
inc
pop
xchg
cmp
mov
sub
push
dec
xchg
xor
inc
ljmp
jb
icebp
incb
jge
dec
mov
jmp
mov
stos
xchg
nop
or
in
sbb
cli
roll
mov
leave
enter
and
ficoms
ljmp
cld
mov
and
fdivr
xchg
xchg
mov
fdivl
nop
lds
rcrb
and
dec
sbb
sarl
aad
ss
lahf
lock
daa
mov
loope
scas
insb
iret
inc
push
and
ret
pop
mov
mov
cltd
scas
cmp
imul
rcrb
pop
sub
jbe
loop
repz
cmp
bound
test
mov
in
mov
cmp
push
xchg
pop
fldt
popf
loope
inc
ja
out
movsb
jge
cs
pop
ret
mov
and
ss
fldcw
enter
shlb
cld
bound
push
int3
rolb
or
pop
lods
pop
mov
ss
inc
add
rorb
sahf
or
pop
daa
push
pop
insb
dec
stc
mulb
jne
or
or
cmp
jecxz
inc
cmpsl
xor
jnp
lds
clc
mov
imul
jl
add
xor
iret
js
fs
inc
dec
jecxz
mov
and
rcrb
cmc
cs
push
hlt
test
cmp
push
pop
faddp
repnz
ret
movsb
scas
mov
dec
lock
push
insl
cmp
pop
and
mov
out
push
sti
fiadds
in
xor
call
andl
xorb
pop
push
sub
lods
cld
xchg
and
jecxz
dec
mov
cmc
inc
fistpl
push
jg
push
push
andl
shl
push
mov
addb
fimull
enter
push
fwait
ret
or
out
push
outsb
sub
repz
xchg
jmp
pop
adc
sahf
test
imul
lods
arpl
mov
or
das
jnp
gs
jecxz
xchg
dec
idivb
in
jns
pop
mov
adcw
mov
xor
jbe
jp
leave
jns
mov
add
mov
add
outsb
mov
dec
lret
call
sbb
adc
xchg
inc
in
outsb
sbbl
in
test
fldcw
jmp
je
mov
sbb
arpl
cmp
jae
stos
xor
pop
into
mov
jg
jb
leave
fistpl
je
adc
mov
sbb
or
subb
popa
std
xor
push
xchg
and
out
clc
and
mov
daa
sub
mov
imul
push
push
dec
aad
lea
jl
mov
push
insl
cs
add
mov
imul
inc
adc
inc
fldl
int
movsl
push
scas
cmpsl
push
pop
lods
decl
daa
sbb
ja
push
cmp
movsb
xchg
mov
mov
addr16
cmpsl
push
adc
dec
scas
loope
pop
xchg
insb
xor
jnp
adc
cld
cmpl
test
jmp
mov
xor
test
pop
ja
vcomisd
pushf
clc
addl
add
xchg
testl
movntps
jbe
cmp
inc
ss
into
sub
dec
mov
adc
adcl
add
cmp
call
cld
insb
mov
stos
das
sub
mov
mov
jl
push
repz
sub
dec
sarb
shrl
dec
repnz
scas
repz
dec
orb
data16
fwait
cs
xchg
xchg
in
mov
aam
out
jns
mov
lods
out
or
sti
repz
lock
out
xchg
ret
add
mov
pop
sub
loop
in
sbb
clc
jno
adc
cs
cmp
add
add
les
adc
mov
add
jno
scas
loope
sub
jbe
mov
outsl
stos
or
sub
jo
add
enter
test
mov
xrelease
inc
jmp
pusha
pop
in
testb
jo
mov
lret
ss
pop
cmp
mov
call
mov
pushf
cmpsb
push
dec
mov
push
aaa
fldt
sbb
addr16
in
cmc
enter
pop
mov
lahf
inc
push
loope
xchg
andl
push
testb
popa
adc
and
icebp
push
loope
xchg
andl
push
testb
popa
adc
and
icebp
loope
xchg
andl
jno
popa
adc
and
icebp
push
loope
xchg
andl
push
testb
popa
mov
mov
imul
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
out
or
gs
xchg
push
inc
cmp
push
cmc
mov
xchg
movsl
clc
movsl
call
jne
sub
js
sbb
cwtl
lds
xchg
mov
enter
call
insl
nop
jge
or
sbb
jo
inc
out
stos
out
fistl
mov
call
jne
adc
outsl
add
mov
fwait
xor
call
insl
mov
mov
xchg
aas
pop
add
sub
in
fmuls
rcrb
mov
mov
pop
gs
sbb
push
or
jecxz
adc
push
enter
clc
push
fcoms
mov
pop
add
lret
xchg
pop
addr16
fadd
lea
push
push
test
adc
loopne
imul
js
aad
aad
add
insl
mov
pop
mov
sub
lret
cmp
loopne
inc
mov
rcr
aaa
mov
movsl
insb
pushf
sbb
mov
adc
call
in
test
loopne
hlt
popf
xor
dec
and
adc
push
data16
daa
js
and
int
int3
add
mov
and
sbb
or
xor
std
mov
iret
xchg
mov
test
cltd
roll
push
add
push
cmc
mov
test
mov
movsl
call
jne
sub
js
push
cmc
mov
test
mov
movsl
call
lret
add
shll
or
gs
mov
mov
scas
jg
int3
movsl
and
iret
jae
and
ret
jnp
push
cmp
push
cmpsb
mov
inc
out
into
lock
enter
pop
fidivrs
adc
adc
ret
lret
and
adc
imul
fimull
stos
popf
or
sub
ret
jl
mov
rcll
jb
xor
pop
xor
aas
fistps
push
lahf
test
into
cmc
out
jmp
idivb
cwtl
xchg
pop
sbb
nop
ret
sbb
mov
and
sub
push
adc
pop
into
mov
aas
xchg
pop
and
jp
std
xor
es
jl
sub
push
frstor
cli
dec
lods
fwait
insb
fmuls
cmp
jg
stc
popf
subl
daa
jnp
packsswb
popa
cwtl
enter
jne
popa
movsl
movsb
sar
jmp
mov
outsl
pop
ss
dec
mov
aas
or
mov
xor
inc
mov
jo
test
and
or
or
divb
sti
sub
cmp
in
repz
andl
adc
dec
adc
in
clc
push
shrb
pop
test
xchg
sub
inc
jbe
mov
pop
out
out
cmpsl
lahf
pop
iret
add
test
test
push
test
add
imul
out
dec
cmpsb
pop
outsl
out
xor
addr16
dec
fucomip
push
fcmovne
adc
adc
mov
or
pushf
mov
movhps
mov
ss
mov
lret
pop
jno
shll
pop
jp
mov
sub
fwait
ja
and
adc
jbe
in
iret
jp
mov
popa
popf
into
scas
mov
enter
mov
scas
inc
adcb
jb
pop
test
xor
lock
mov
enter
cmp
int
mov
and
pop
sub
insl
pushf
data16
call
hlt
jae
insl
add
imul
test
mov
cmpsb
xor
cld
orl
push
adc
xchg
icebp
pop
mov
mov
lcall
loopne
loopne
sub
cwtl
jg
test
or
into
dec
js
adc
xlat
fsub
data16
xchg
inc
rolb
mov
or
decb
stc
fwait
adc
mov
in
pusha
pop
or
scas
xor
test
rcrb
jge
xlat
insl
jo
dec
dec
call
cld
xor
pushf
mov
andb
xlat
in
sbb
fidivl
rolb
das
xchg
xchg
aaa
pop
pop
sbb
clc
mov
in
lds
dec
fldcw
fdivrl
ss
aaa
test
xchg
dec
cmpsl
fmuls
mov
or
sbb
xlat
movsb
int
adc
movsb
add
int
xor
test
decl
movsb
cmpsl
fnstenv
mov
mov
pop
loop
fsts
test
dec
cmp
mov
sbb
adc
sahf
add
cli
push
lcall
xchg
not
ret
pop
cmp
testb
cmp
push
jle
cwtl
pop
imul
aad
mov
mov
test
sub
jnp
test
mull
cmpsb
enter
iret
add
push
inc
in
or
cwtl
iret
jmp
adc
testl
mov
scas
cmp
je
mov
in
jns
lcall
sbb
ss
sub
push
jmp
lds
or
ficoms
adc
ljmp
pushf
inc
call
dec
insb
mov
jb
push
adc
adc
cmpsb
sbb
jno
aas
fildl
out
pop
jno
div
sti
pop
fnstenv
and
pop
ja
outsl
and
testb
adc
ja
cli
in
rorb
inc
mov
or
sbb
stc
fs
loop
push
roll
out
sahf
xchg
sbb
cmpsb
sub
popf
lea
test
add
lret
cmp
jbe
or
xchg
sti
inc
xchg
add
add
loop
pop
push
inc
push
loop
dec
fwait
mov
xor
inc
out
mov
inc
call
or
fistpl
sbb
movsb
fildl
push
or
mov
mov
add
push
push
push
or
stc
adc
enter
inc
cmpl
jmp
add
into
loope
cmp
scas
jnp
fadd
sbb
pop
and
xchg
sub
add
sub
cmpsb
cmp
xlat
int
jg
cltd
les
sbb
pop
fwait
pop
pop
cltd
mov
mov
arpl
push
addr16
add
pop
das
xor
cmp
jbe
mov
pop
mov
and
sbb
mov
push
push
dec
adc
ret
sti
push
inc
popf
push
scas
cs
sahf
adc
lcall
push
mov
out
nop
insl
fcoml
and
jl
int
adc
sti
and
shr
loop
push
mov
jns
addr16
inc
aam
push
add
push
jne
sbb
rcrl
popl
mov
int3
jp
loope
popf
nop
mov
inc
inc
aaa
jae
fwait
fwait
data16
sbb
jae
and
push
shlb
ret
cltd
es
daa
pop
sbb
mov
add
lock
outsb
sub
xchg
xor
imul
inc
notl
pop
sbb
jns
bound
mov
outsb
push
ret
shr
gs
xor
orl
sbb
push
ljmp
adc
push
pop
mov
shll
gs
cmp
mov
add
rol
xor
sbb
fwait
cs
jnp
arpl
daa
inc
stos
ljmp
jo
jle
xchg
adc
pop
in
push
scas
fsub
repnz
pop
icebp
lds
push
add
sbb
or
imul
jl
jae
dec
pop
adcl
lods
movsb
mov
stc
xlat
movsl
data16
adc
and
mov
mov
sub
mov
loope
into
int3
int
pop
sbb
xchg
out
and
push
push
jge
push
sub
mov
xlat
lea
mov
repz
decl
popa
ja
ljmp
jle
add
mov
or
inc
cmp
cmp
dec
mov
sbb
ljmp
and
sti
add
mov
add
rcll
in
sub
mov
mov
sahf
mov
xchg
dec
ljmp
sahf
aas
popa
lods
xchg
xchg
loop
adc
sub
popf
xor
xchg
test
xchg
adc
int3
aad
lret
fs
jmp
outsl
aam
mov
push
mov
mov
xchg
or
push
xchg
cmp
fists
lods
imul
mov
pop
popf
mov
dec
stc
pop
inc
cmc
sbb
es
out
mov
repnz
sub
add
sub
rcr
inc
push
push
dec
adc
add
int3
push
stos
shll
mov
test
mov
cmp
scas
mov
orl
out
int
lea
and
xor
mov
mov
mov
aam
or
loope
imul
and
mov
lcall
into
or
add
fdivrl
xchg
lcall
sbb
jle
mov
mov
testl
jno
xchg
fists
jae
stos
jnp
push
daa
sahf
int3
and
pop
inc
mov
imul
hlt
mov
dec
cmovp
pusha
sbb
lret
mov
dec
ja
xchg
pop
dec
in
out
pop
popf
rcll
subl
ja
outsl
jnp
mov
inc
std
add
ja
div
xchg
xor
jo
repnz
lds
xor
xchg
mov
dec
push
pop
push
popf
lea
xor
push
sub
or
mov
xor
dec
add
out
jnp
lods
dec
sub
sbb
mov
xchg
movsl
test
scas
cli
jno
movsl
pushf
pop
dec
xorl
movsb
adc
mov
mov
sub
pop
xchg
mov
insl
dec
outsl
cmp
and
fbstp
int3
popf
pop
data16
push
lea
dec
and
sub
pop
cmpsl
clc
mov
rep
add
bswap
pop
je
pop
and
jle
and
mov
inc
lret
hlt
add
repz
sti
push
daa
inc
jecxz
jae
jg
mov
xchg
or
mov
stos
or
shrb
xor
arpl
push
mov
aas
mov
sub
sub
pop
mov
cmpl
jb
inc
test
pushl
leave
xor
popf
scas
rol
or
loop
repz
lods
pop
or
jle
incl
movaps
iret
adc
cmp
and
insl
icebp
cld
lret
dec
pushl
cli
push
mov
fstl
mov
or
mov
and
adcl
and
inc
xlat
xor
idiv
mov
mov
sub
insb
pop
arpl
dec
fwait
mov
pop
xchg
dec
mov
mov
sbb
dec
mov
pusha
clc
movsl
out
lds
lret
xchg
test
ret
test
jns
in
sbb
movsl
fldl
jp
fsubp
and
push
inc
cmpsb
imul
icebp
inc
data16
pop
mov
push
inc
sub
mov
lock
add
mov
fs
scas
xor
push
arpl
fsub
fists
test
xchg
inc
push
sahf
out
pop
in
call
out
jge
and
sbb
fcmovne
aas
dec
aaa
jb
push
or
or
dec
int3
cmp
lcall
jp
fsubr
xor
sub
lock
mull
mov
enter
fdivs
sbb
sub
test
xchg
xchg
sbb
lea
inc
mov
addr16
sbb
mov
mov
arpl
iret
add
loop
fiadds
gs
inc
out
xchg
jb
mov
out
mov
and
insb
ljmp
enter
dec
mull
ficoms
ss
cmp
dec
xor
es
dec
or
test
push
and
arpl
gs
jo
and
push
adc
or
out
inc
jae
sbb
dec
and
repz
lods
lods
loope
mov
lds
les
xchg
test
sbb
cs
lods
mov
jnp
sbb
scas
jecxz
xchg
nop
jmp
mov
xor
push
das
aad
push
push
jecxz
hlt
push
out
outsb
idiv
jecxz
mov
popf
cltd
pop
outsl
pop
loop
cwtl
jmpw
cmp
fwait
shlb
mov
lock
inc
inc
add
fdivp
sbb
add
xchg
testb
int
xor
outsl
cmp
push
xchg
popf
push
daa
mov
jecxz
adc
add
mov
clc
test
idivb
jg
rcrb
es
dec
push
ljmp
dec
out
and
sub
ljmp
popf
decl
leave
xchg
sbb
ss
sub
push
ds
addl
xchg
cmp
sbb
mov
lahf
jge
mov
push
fcompl
inc
repz
mov
fsubr
inc
mov
mov
sbb
dec
cwtl
faddl
call
sub
sub
sub
insl
push
jns
bound
or
int3
pop
push
jae
mov
inc
and
cmp
inc
adc
push
lds
jecxz
mov
sub
mov
in
sub
fisttpl
or
xor
popf
fs
cs
inc
inc
fcoms
push
adc
add
orb
icebp
mov
rorb
cmpsb
or
adc
xor
or
cmp
dec
je
enter
dec
mov
pop
fbld
shrb
loope
or
shrl
add
jb
sub
sbb
sbb
hlt
dec
xchg
pop
scas
lods
mov
mov
or
push
push
xor
or
mov
inc
and
into
js
mov
jecxz
pushl
push
loopne
mov
test
add
push
je
or
jne
jae
cld
jo
fistps
sbb
scas
add
cld
ja
popf
push
cmp
xor
and
cmc
ss
jl
cwtl
dec
xchg
sbb
sub
or
push
fisttps
lret
mov
pop
cld
fimuls
mov
push
mov
xchg
mov
mov
and
xchg
jb
pusha
negl
clc
jne
or
dec
clc
xchg
adc
dec
jnp
and
fnsave
xorb
mov
lock
mov
ss
push
sbb
mov
aam
add
test
cmp
mov
jge
pop
xchg
mov
int3
sub
fstps
pop
jecxz
stos
and
and
push
bound
cmpl
mov
or
aad
les
and
sti
bound
cli
das
push
out
mov
leave
and
push
idiv
cmpsl
cmp
adc
sti
outsl
out
add
push
mov
test
xor
push
clc
and
mov
pop
shrl
cmp
sbb
loopne
loop
scas
mov
pop
or
fmuls
mov
push
inc
jns
das
jle
nop
fstps
push
cmc
fistps
cli
pop
scas
jecxz
roll
fisubrs
mov
mov
sub
sbb
xchg
mov
test
xchg
or
pop
mov
xchg
rorb
ljmp
nop
add
fcmovne
ljmp
jecxz
adc
lods
outsl
hlt
xchg
in
gs
cmc
int
data16
daa
cmp
inc
xor
enter
in
loopne
repz
mov
loope
xchg
push
aaa
cli
lcall
xorb
push
jbe
xor
js
adc
stc
rep
and
push
xchg
xchg
movsb
mov
icebp
push
sub
inc
xor
mov
aaa
movsl
dec
pop
ss
sbb
sbb
mov
xchg
adc
or
lret
xchg
lcall
xchg
test
xchg
in
push
xchg
jl
pusha
or
movsl
outsb
call
mov
push
bound
push
fisubl
cmp
xchg
jbe
aaa
fsubr
pusha
push
pusha
push
jmp
sub
bound
into
pop
fstpl
pop
jne
aad
adc
ss
je
repz
dec
jl
popl
arpl
movsb
add
xchg
dec
push
aad
cmc
in
push
mov
push
fcomip
mov
test
test
sub
inc
ret
and
je
rorb
hlt
pushl
lahf
jl
into
add
ljmp
cli
pop
sbb
sti
and
xchg
sub
dec
push
mov
cmc
cld
jb
scas
pop
movsb
add
push
push
in
rcrb
fwait
out
and
into
insl
rep
mov
add
xchg
add
pop
push
push
js
imul
cs
and
mov
fdivrl
stc
std
rclb
or
in
mov
fwait
jne
sub
lcall
les
fisubrs
in
loop
xchg
in
outsb
mov
sahf
xchg
push
inc
sarl
xor
ficoms
orl
out
out
dec
int
mov
shll
cmp
push
ret
int
add
dec
or
mov
gs
clc
dec
cmc
je
test
mov
cmovno
xor
jmp
rsqrtps
adc
les
and
xlat
xchg
and
popa
and
loopne
int
dec
xchg
jmp
sub
inc
mov
test
gs
jp
jecxz
and
inc
nop
jmp
mulb
xchg
jmp
push
aas
mov
xor
pop
sub
arpl
aam
cli
or
outsb
pop
pop
lock
push
ss
jl
hlt
pop
cs
push
pop
xchg
fadds
loope
inc
popa
mov
xchg
movsl
xor
jo
xor
cmpsl
cmpsb
loopne
das
mov
and
fdiv
mov
inc
mov
mov
jmp
pusha
call
xor
sbb
mov
fdivrs
mov
or
aad
adc
iret
nop
imulb
pop
shl
and
loop
ret
lahf
pop
fisubl
pop
arpl
dec
sub
aaa
loop
mov
imulb
lods
mov
repnz
int
out
jg
mov
sub
add
shrb
clc
ljmp
fldt
or
aad
lock
orl
sub
ss
jno
sub
mov
push
sti
xor
addl
ret
mov
popa
adc
push
inc
insb
mov
adc
jne
adc
addr16
in
test
adc
scas
jns
inc
rcl
pop
repnz
mov
lea
addb
pusha
call
pop
sti
add
add
sub
iret
pop
dec
fsubs
cmp
mov
imul
hlt
xor
cmpxchg
lods
lods
lcall
loopne
mov
rcrb
leave
inc
call
enter
add
and
fldt
pop
jle
xor
jmp
pop
pusha
fdivl
gs
ret
ret
in
fs
adc
inc
xchg
adc
into
mov
mov
mov
mov
push
mov
xchg
lahf
lea
mov
mov
push
sbb
in
outsb
fsubp
insb
aaa
mov
adc
xor
adc
mov
aas
stc
sbb
rolb
out
mov
es
dec
lahf
inc
dec
into
stos
jns
addr16
sub
push
js
pop
pushf
and
loope
xchg
mov
jne
test
repz
cltd
scas
jge
loopne
push
mov
push
sub
jge
pop
sub
leave
mov
cli
mov
shlb
sub
lds
add
push
inc
pop
adcb
or
call
repz
mov
test
repnz
leave
pop
mov
mov
lods
sub
add
cld
pop
pop
cltd
clc
enter
add
mov
inc
fmull
and
and
pusha
mov
test
lods
and
imul
fisttps
mov
ljmp
aas
test
test
mulb
jmp
js
jmp
insb
leave
filds
mov
out
leave
add
nop
pushf
inc
lret
and
sbb
jns
leave
fidivrl
fnsave
lock
imul
fisubl
nop
fxch
movsl
fsts
add
inc
push
mov
and
sbb
inc
addr16
mov
inc
ret
sbb
jp
mov
lods
xchg
ret
adc
mov
jl
jmp
fwait
out
test
mov
je
sti
mov
mov
sub
ss
pop
std
dec
adc
mov
sbb
inc
ljmp
test
iret
or
dec
inc
fst
push
mov
dec
mov
cmp
push
inc
push
shrl
and
mov
mov
jecxz
hlt
dec
xchg
bound
inc
pusha
imul
push
push
mov
rclb
shl
cmpsl
xor
into
cs
pop
nop
ret
jns
add
cmp
add
or
cmp
xchg
leave
mov
jp
out
lock
adc
repz
inc
jo
xor
outsl
cmpsb
push
adc
ljmp
pop
aam
pop
ljmp
jmp
scas
pop
add
fsubr
jmp
cmp
mov
stc
dec
adc
cmp
cld
out
xchg
and
mov
jl
pop
inc
dec
mov
fcomi
adc
inc
mov
cltd
push
mov
inc
dec
cmp
and
lret
fwait
sub
movsl
sbb
sub
pusha
pop
cmp
jg
pop
mov
or
negb
jecxz
nopl
cmp
jnp
aaa
xor
enter
mov
imul
xchg
popa
gs
rclb
xchg
mov
or
and
sub
fs
pop
pop
ds
pop
in
fcoms
cld
add
mov
mov
mov
ljmp
roll
clc
cmc
jno
and
aaa
mov
ret
adc
mov
adc
arpl
xchg
xor
loopne
or
loope
mov
cmpsb
out
mov
mov
pop
call
clc
das
insb
repz
aaa
shll
aad
imul
mov
ja
bound
icebp
aaa
loop
push
insb
push
imul
hlt
das
dec
cmp
pop
fbld
je
lds
aad
stc
leave
push
out
jo
mov
mov
or
inc
call
scas
addr16
mov
aad
loope
daa
push
mov
testl
fldcw
pop
add
test
into
xor
pop
in
mov
xchg
mov
xchg
pop
dec
pop
pop
lods
mov
insl
jge
les
cmc
fcompl
mov
jns
mov
xchg
mov
mov
das
mov
xchg
mov
mov
loopne
popf
push
mov
add
jg
sub
js
push
cmc
mov
test
mov
movsl
call
jne
sub
js
push
cmc
mov
test
mov
movsl
call
jne
sub
js
push
cmc
mov
test
mov
cmpsl
call
je
sub
pop
add
push
pop
mov
or
pop
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
addr16
inc
push
push
push
and
inc
pop
and
cmp
adc
les
mov
test
test
add
je
sub
push
push
and
xor
add
adc
in
hlt
mov
in
mov
test
xchg
xchg
push
mov
cmp
jle
dec
adc
subb
lock
test
mov
or
dec
inc
pop
cmp
xchg
fimuls
pop
mov
aad
aad
addr16
xorb
sbb
rcll
mov
cltd
aam
mov
sub
test
lcall
fldln2
and
or
daa
popf
mov
hlt
mov
mov
icebp
ret
test
mov
sbb
jle
inc
adc
in
hlt
inc
inc
dec
sub
pop
mov
test
jns
fs
leave
adc
in
xchg
pop
lahf
pop
les
stos
les
sahf
loope
mov
jl
cwtl
ds
ja
sub
stos
push
sti
les
xlat
xlat
scas
lock
sub
out
test
xchg
and
and
inc
push
push
push
shrb
add
mov
and
in
in
out
mov
cwtl
or
dec
sub
dec
sub
jo
adc
in
cmpsl
cmpsl
mov
lcall
sub
push
ss
xor
cmp
sbb
or
int3
jmp
fldt
stos
aad
or
insl
and
pop
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
push
xchg
fldpi
fwait
dec
mov
mov
leave
xchg
adc
fisubrl
inc
push
das
dec
cs
jmp
out
push
shlb
pusha
add
ja
cmc
loop
stos
xor
sub
std
mov
cmpsb
pop
inc
dec
cwtl
stos
xor
xor
sarl
mov
cmp
sbb
rorb
pusha
fs
fdivrs
xchg
sub
out
and
mov
jae
fnsave
or
push
filds
jecxz
push
lcall
push
cmpsb
sti
mov
test
js
cmpsl
adc
xchg
fwait
pop
lock
dec
pushl
mov
inc
pop
in
aaa
sub
stos
int3
test
hlt
inc
into
and
aaa
je
sub
sbb
aas
popf
stos
sahf
stos
shr
inc
cld
jge
add
xchg
xchg
insl
and
jne
add
inc
inc
sub
ret
sbb
xchg
stc
lahf
scas
lods
bound
repnz
aaa
or
daa
mov
pop
fs
aas
out
popa
push
loop
pop
ret
data16
inc
cltd
dec
xor
imulb
mov
out
fwait
xor
in
scas
jmp
xchg
pushf
add
pop
add
and
mov
enter
pop
clc
xchg
cmp
push
lret
and
insl
sbb
dec
mov
mov
and
jmp
shrb
jmp
icebp
jb
enter
push
fisttpll
hlt
push
xchg
mov
push
xchg
imul
sub
fwait
mov
add
xor
outsl
dec
jbe
xor
ret
jge
popf
mov
xchg
xchg
and
jnp
popa
iret
out
mov
cmp
js
sub
mov
lret
inc
push
popa
xchg
mov
ss
int3
orb
adc
ljmp
inc
fmulp
jns
sbb
push
mull
jb
mov
and
add
ret
je
inc
out
sbb
pop
xor
jbe
xor
cmp
and
scas
mov
cmp
loope
rcrl
ficoml
addl
jl
psllw
cmp
dec
push
xor
or
mov
pop
incb
pop
mov
sarb
enter
out
mov
push
xor
cmp
sbbl
push
dec
mov
jbe
mov
and
xchg
in
into
xor
sbb
fdivl
sbb
pop
mov
mov
cli
and
or
out
stos
mov
test
pop
div
std
shll
scas
out
std
xchg
cli
dec
add
mov
mov
ret
test
or
ljmp
and
cli
cmc
fisttpll
mov
sahf
andb
push
insb
cmpsl
ljmp
xor
and
adc
and
jmp
popf
or
push
rcrl
pusha
or
mov
scas
mov
js
pusha
rclb
push
loop
fsubs
mov
dec
pop
pop
fists
out
mov
out
push
mov
hlt
add
enter
jo
aas
inc
adc
xorb
test
xchg
dec
mov
in
repz
cmp
jns
cld
pop
lds
pop
std
xchg
test
pop
rcll
loopne
adc
or
and
call
xor
adc
rcrl
lea
mov
ds
imul
mov
sub
popa
in
pop
adc
mov
aaa
xor
mov
stc
fstpl
lods
mov
sub
sub
fdivs
mov
arpl
subb
or
sub
jno
add
sbb
cld
dec
in
lods
sub
add
pop
push
push
inc
and
jns
push
add
sub
cli
pop
and
fstpl
sbb
mov
mov
adc
jo
inc
jbe
and
cmp
ret
shrl
mov
adc
rcll
or
xorb
pushf
inc
adc
stc
or
dec
inc
add
or
pop
shl
cmp
pop
ror
arpl
add
dec
jmp
pop
movl
shlb
cmpsb
xchg
or
inc
sbb
pop
mov
rclb
insb
pop
iret
and
mov
xor
pushf
ret
push
mov
xor
sub
sahf
lock
cld
sahf
jmp
dec
js
ficompl
adc
and
dec
mov
imul
jp
push
test
pushf
fs
mov
mov
std
pusha
out
push
fisttpl
les
mov
mov
jb
out
aam
sbb
jns
je
icebp
roll
and
ja
nop
les
daa
into
aam
mov
iret
and
enter
cli
test
repnz
inc
clc
clc
and
fsubrl
ret
or
loopne
ss
jecxz
cmp
ret
xor
adc
cmp
and
fiaddl
jge
jmp
xlat
inc
pusha
mov
inc
jae
test
popf
in
je
mov
xor
jge
cmp
push
jmp
pop
pusha
jl
into
mov
push
push
mov
mov
test
stos
xor
test
dec
outsb
fcomp
pop
add
sub
jnp
cmp
adc
sub
mov
jmp
outsl
and
cmp
out
mov
mov
push
aad
mov
jns
rcr
xlat
xchg
xchg
push
add
jae
or
addb
push
xor
iret
mov
out
mov
xor
xor
dec
js
jl
loopne
add
mov
enter
or
insl
leave
jb
pop
xor
pmulhw
pop
out
xchg
fcomi
mov
addr16
jno
dec
filds
sub
add
popa
int3
inc
stos
push
mov
fistpl
and
shll
pop
push
sub
repz
jl
dec
addr16
mov
adc
sbbl
jbe
lods
cwtl
cld
push
dec
pop
pop
pop
sti
add
mov
mov
pop
out
scas
pop
imul
orl
jecxz
push
push
test
jge
cs
mov
test
stos
push
pusha
jge
ds
out
out
repz
dec
sahf
jg
stc
jb
mov
xchg
ret
jecxz
jbe
call
popf
out
loop
fdivrl
xlat
cmc
or
cmp
clc
mov
jae
xchg
andb
mov
mov
adc
dec
sbb
or
mov
mov
sbb
and
cs
in
jmp
ret
push
dec
add
insl
pop
ret
fiadds
sub
ljmp
std
cli
mov
dec
push
loope
jle
shlb
jo
test
gs
jecxz
xchg
cwtl
push
push
scas
outsl
xor
shll
into
push
inc
int
stos
mov
pop
pop
ss
cmp
mov
and
sbb
push
jg
ret
lods
jno
push
cmp
outsb
int
mov
sub
adc
push
and
or
inc
insl
jne
sbb
add
ucomiss
rorl
es
outsb
and
aad
mov
outsl
and
jnp
cltd
iret
ss
movsl
arpl
repz
push
mov
je
cmp
mov
add
ds
scas
lds
xchg
mov
mov
test
sbb
clc
add
and
mov
test
sub
jecxz
xchg
xor
divl
imul
or
mov
jbe
dec
aad
adc
loope
mov
xchg
stos
push
aaa
jne
cmp
cs
mov
insl
cmp
daa
fcmovnb
outsb
cmovge
push
test
ja
out
mov
sub
rclb
mov
inc
xchg
iret
je
outsl
leave
aas
test
aaa
jmp
aad
bound
out
daa
xchg
dec
mov
fcmovne
aad
into
orb
fldl
cli
dec
pop
sbb
orb
xchg
add
xchg
test
sbb
push
fcoms
cwtl
lret
adc
test
xchg
in
aam
pop
enter
iret
lahf
pop
pop
iret
fidivrl
shll
xlat
loopne
lock
ja
add
fimuls
xchg
push
notb
mov
mov
das
test
add
shll
mov
push
xchg
filds
sahf
imul
mov
push
adc
jl
mov
popf
pushf
push
fs
mov
cwtl
jo
repnz
shlb
cmp
cwtl
fisttpl
es
fdivrs
movsl
clc
inc
mov
movsl
idivl
out
enter
mov
mov
push
test
loopne
jno
hlt
je
in
fmull
sbb
sbb
or
out
jb
std
push
push
pop
xchg
test
insb
ficompl
call
jo
mov
sub
pop
loope
dec
cmpsb
inc
jecxz
xchg
inc
sbb
insb
jns
sub
push
jge,pt
inc
ja
call
rolb
and
add
xor
cld
mov
dec
fwait
dec
imul
loopne
cld
divl
loope
jge
stc
mov
cmpsl
les
pop
push
sbb
dec
adc
fcomp
int
inc
jg
lcall
xchg
fs
push
fistpll
lea
and
lods
sub
jns
aas
jbe
repz
sub
cld
or
dec
adc
push
stos
cmc
data16
jno
push
cmpsl
mov
jb
sbbl
mov
add
into
mov
rcr
sti
es
sti
arpl
mov
xchg
push
cmp
push
push
adc
mov
nop
movsl
aad
outsb
or
sahf
sbb
and
push
popf
mov
fld
xor
adc
daa
popa
cmp
or
in
mov
push
leave
and
iret
inc
and
dec
adc
pop
mov
clc
nop
mov
rol
and
cmp
mov
xor
popf
add
movsl
sub
jb
rol
aam
or
sub
stc
jg
adc
push
int3
dec
inc
push
cmp
sub
dec
cmp
and
adc
push
cli
and
incb
pop
pushf
ds
adc
inc
repnz
daa
jb
les
mov
jmp
loopne
pop
test
sbb
push
stos
js
xchg
jge
repnz
in
dec
xchg
nop
cld
sbb
clc
in
rcll
sbb
cwtl
and
lcall
es
mov
pop
xchg
or
jg
cmpl
mov
push
das
je
sub
pop
lea
sub
imul
fisubs
test
push
and
adc
js
into
inc
dec
mov
adc
and
ljmp
sbb
nop
and
call
stos
fisubrl
sbb
mov
mov
dec
mov
mov
xchg
xor
aam
clc
je
in
cli
in
fisubrl
mov
push
mov
movsl
jg
push
aam
std
out
pop
insl
mov
lea
dec
xor
out
sbb
in
daa
out
push
mov
in
pop
mov
enter
push
jae
lods
insb
mov
mov
mov
cmc
fidivrl
xor
fisttps
push
lcall
scas
sti
xor
push
pop
rcl
sub
pop
repnz
stc
push
xor
in
shrb
add
mov
ss
dec
cmp
pop
pop
pop
mov
jecxz
in
insb
jmp
popf
nop
dec
mov
gs
notb
div
popa
es
jmp
pop
cwtl
call
jge
pop
cld
aaa
inc
inc
dec
fwait
adc
lods
into
cmp
and
adc
jbe
push
mov
into
or
push
out
mul
push
mull
aad
gs
ret
int
push
das
icebp
ret
ror
repnz
inc
ds
fistl
test
xlat
arpl
add
jno
pop
mov
xchg
jmp
gs
xchg
and
mov
cmp
and
fstpt
adc
or
lret
les
in
lret
js
jle
mov
dec
add
mov
mov
push
fisttps
add
lret
das
dec
movb
sub
add
pop
pop
jmp
xchg
ljmp
pop
lds
jb
xor
jg
jb
int
fmuls
push
cs
imul
test
or
sbb
jecxz
jnp
xchg
dec
notl
or
loop
xchg
mov
daa
mov
test
jo
sahf
scas
addr16
imul
push
mov
cmp
push
jne
and
or
popf
adc
mov
and
add
dec
mulb
cmpsb
xchg
pushf
loop
sbb
push
iret
test
enter
shlb
fwait
push
mov
and
movsb
stos
cmp
je
xor
pusha
pop
xchg
rclb
sub
out
fisubs
sub
jge
sbb
mov
and
test
add
push
test
dec
aas
adc
test
xchg
xchg
jle
cmpl
sti
mov
sbb
jae
arpl
int3
call
nop
jno
push
or
ds
jl
enter
adc
sti
pop
and
jb
out
insl
roll
xor
sbb
shll
pop
cmp
cmp
and
shlb
cmp
inc
out
cmc
dec
in
mov
pop
jmp
or
ret
lods
add
mov
sahf
mov
incb
add
inc
daa
dec
jb
sbb
xchg
popf
cli
xchg
rclb
clc
lds
gs
dec
jle
xchg
loop
lock
pop
jae
andb
jns
mov
dec
pop
sbb
lock
pop
sub
in
sbb
sbb
cmp
xchg
add
fimull
sub
inc
out
mov
cs
stc
mulb
add
xor
sbb
and
cli
movsb
pop
lock
push
in
or
push
rcrb
mov
insl
mov
int
lret
add
sbb
add
subl
gs
mov
out
fwait
dec
test
push
rolb
adc
dec
gs
sbb
xor
mov
hlt
or
adc
daa
lds
mov
in
push
lea
pop
jo
test
pop
push
dec
and
pop
sub
xchg
orl
xchg
ljmp
cwtl
cwtl
enter
jns
dec
adc
cwtl
cli
add
push
push
pop
xlat
sbb
addb
mov
rorl
je
or
add
cmpsl
and
ljmp
aad
arpl
stos
shl
xchg
xchg
jg
sub
aad
push
pop
pop
and
mov
cli
mov
or
js,pt
push
cmp
xchg
pusha
push
adc
outsb
dec
fwait
lods
mov
popa
jg
aad
mov
psubusw
and
pop
int
fsubrl
or
pusha
fmull
sbb
xor
xor
sub
sub
mov
jbe
scas
popa
or
fcompl
cmpb
xor
xor
rorb
inc
in
jecxz
xchg
sub
nop
faddp
stos
test
imul
cmpsb
cwtl
ds
mov
cld
mov
dec
loopne
pusha
xchg
xor
iret
pop
mov
test
call
mov
shrb
in
add
jecxz
jnp
dec
fcompl
inc
sbb
dec
xchg
inc
sbb
in
imul
ljmp
cwtl
movsl
and
cltd
in
add
mov
mov
xchg
mov
adc
lret
gs
sbb
mov
mov
jns
arpl
xchg
mov
out
pop
mov
loopne
hlt
xchg
cmp
mov
loopne
ljmp
dec
aaa
fstl
in
enter
lods
dec
into
fimuls
fstps
test
repnz
nop
cmp
cmc
adc
push
out
mov
pop
cmpl
loopne
cmp
cmp
outsb
xorb
dec
cmp
sbb
out
sbb
jmp
scas
sti
sub
sarl
popf
nop
mov
mov
mov
push
jp
in
adc
jb
mov
adc
aam
inc
fwait
xchg
movsb
fdivrs
adc
jbe
xchg
sbb
popf
clc
pop
mov
xor
fists
sti
or
popf
mov
es
or
sub
and
xor
sbb
fdivrs
and
cs
js
aad
lret
cmp
out
cmpsl
and
test
mov
aas
leave
aad
jbe
mov
loop
and
pusha
mov
pop
in
iret
lret
dec
add
in
adc
cmp
fidivl
add
cmp
inc
in
iret
stos
sbb
pop
insb
or
mov
dec
mov
nop
push
mov
repnz
adc
push
jl
mov
and
jle
scas
in
sub
popa
add
and
ljmp
push
fbstp
jb
xor
call
sahf
jne
loopne
addr16
nop
pop
lods
xor
sub
loop
arpl
iret
mov
jp
popa
adc
cmp
cmp
aam
mov
sbb
daa
fcoml
int
pop
or
or
mov
fistpll
popa
icebp
pop
pop
cltd
rcll
sti
scas
or
or
mov
sbb
lods
outsb
inc
mov
pop
push
fdivrl
addb
push
int
inc
sbbb
mov
adc
adc
mov
push
push
sbb
lret
adc
and
movsb
jmp
fst
cld
fnsetpm(287
stc
pop
in
out
push
outsb
mov
icebp
fprem1
mov
nop
adc
lea
xor
xor
daa
lcall
sbb
scas
jmp
mov
dec
pushf
jge
in
pop
out
scas
lock
insl
mov
or
pop
jnp
sbb
push
enter
jb
dec
adc
dec
dec
xchg
loope
jbe
mov
js
or
mov
or
cmp
out
test
jns
fwait
cs
push
mov
sbb
adcb
inc
mov
and
fsubrs
cmc
call
pushfw
fdivl
dec
fidivl
aad
inc
mov
cmp
push
popf
or
push
das
mov
mov
sub
mov
lcall
push
stos
aas
adc
in
xchg
fmul
adcl
adc
xchg
xchg
xchg
and
sbb
jns
rcr
jmp
xchg
ljmp
xor
adc
lret
dec
push
ljmp
jns
fisttpll
xor
popf
fcmovnb
loopne
addr16
sub
and
fisubl
dec
bound
lret
jne
mov
adc
xchg
xor
mov
call
es
aas
in
xchg
cmp
push
xchg
xchg
stos
andl
scas
pop
jecxz
out
negb
arpl
xchg
or
push
mov
mov
jl
insb
ret
jne
test
imul
stos
dec
xchg
push
pop
or
idiv
sbb
adc
fsubrs
jbe
lcall
push
pop
cli
mov
insb
fdivrp
dec
jae
jns
jge
cli
mov
pusha
rclb
lahf
push
ljmp
stc
fs
js
enter
inc
aaa
rep
clc
pusha
xchg
mov
mov
inc
pop
jle
rorl
xorb
aaa
gs
inc
aad
adc
and
ljmp
sar
inc
xchg
scas
mov
sbb
je
repz
xchg
jecxz
xor
pop
adc
jge
in
cmpsl
loopne
leave
xor
in
push
xor
sub
rcl
hlt
in
loop
repz
imul
mov
dec
cmp
nop
fstpt
fs
sbbb
out
insl
inc
imul
cli
inc
test
add
mov
xchg
cli
mov
mov
popa
in
ja
push
fsubrs
mov
push
cmp
push
lret
mov
das
xchg
outsl
push
cltd
jl
pushf
rol
mov
adc
xchg
xchg
bound
dec
inc
outsl
jbe
pop
aas
xor
mov
adc
mov
inc
sub
add
jmp
mov
dec
xor
and
pop
lea
movsl
adc
mov
cld
fistl
or
inc
dec
out
xchg
aam
cmp
fcomip
push
jo
adc
xchg
cmp
jmp
shrl
mov
hlt
fnstenv
loop
sbb
mov
dec
pop
sub
push
int3
pusha
lods
popa
ljmp
jbe
popf
add
mov
adc
mov
cmc
sti
iret
or
add
xlat
sub
inc
sti
jmp
bound
fldcw
out
std
and
icebp
subb
test
clc
inc
enter
and
pop
int3
add
add
add
mov
cwtl
dec
popa
jge
rcll
pushf
test
push
adc
sub
mov
dec
mov
xchg
jns
add
mov
test
outsb
roll
or
mov
jge
pop
shll
imul
icebp
or
in
adc
repnz
call
xor
mov
lcall
sbb
mov
ljmp
fisubs
aam
rcrl
pushf
inc
test
loope
lret
popf
add
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
mov
xor
add
aam
in
hlt
mov
movsb
out
movsb
incb
sub
push
push
je
and
and
add
xchg
sahf
in
or
mov
jmp
jnp
imul
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
jne
or
pop
push
dec
pop
adc
in
cmc
xlat
andb
xchg
dec
gs
jne
inc
jne
add
add
aad
lret
in
aad
icebp
movsl
test
jne
pop
mov
adc
sbb
mov
aad
in
fcmovnbe
rol
xchg
add
jne
and
add
mov
push
in
and
jle
sarl
dec
rorb
dec
cmp
xor
int
test
push
mov
inc
sub
add
add
and
cmp
adc
sbb
xor
jno
stc
test
xor
jp
sbb
add
and
add
aaa
ljmp
or
or
xchg
dec
mov
dec
inc
pop
test
lcall
leave
popa
push
jge
add
xor
jbe
xchg
cmp
test
push
push
xchg
lcall
aam
aas
int3
cwtl
cmp
shl
lds
notb
test
push
bound
sbb
and
lea
std
inc
in
cmp
mov
shl
aaa
add
jne
inc
sbb
pusha
pop
imul
nop
xchg
mov
roll
fnsave
xor
je
dec
popa
inc
jns
pushf
xchg
xchg
xorb
fcmovbe
jmp
data16
dec
adc
adc
in
cmc
aad
movsl
xchg
mov
test
jne
inc
jne
add
add
aad
in
cmc
aad
movsl
xchg
mov
test
repnz
sub
sbb
add
loope
pop
outsb
sbb
mov
xchg
or
pop
jns
out
pop
mov
sub
sbb
pop
mov
mov
jae
push
add
xor
sub
mov
dec
inc
dec
fsubrp
push
rcrb
inc
cwtl
mov
movsl
inc
ja
testl
bound
aad
lds
test
dec
jge
das
scas
mov
cld
lock
xchg
mov
cli
das
xchg
into
sarl
cmp
cs
cmp
jmp
ljmp
mov
jbe
in
xor
jne
sbb
jae
or
and
sub
push
ds
lret
jg
testb
mov
mov
stos
ss
push
mov
addr16
nop
shrl
mov
push
fmull
cmp
xchg
repz
leave
or
sahf
jle
or
mov
dec
mov
push
push
mov
xchg
jmp
and
inc
dec
pop
lret
lcall
mov
jns
mov
repz
outsb
inc
fcmove
rolb
push
push
lahf
dec
arpl
mov
bound
jp
mov
push
inc
pushf
es
inc
push
fcomps
sub
pop
pushf
dec
sbb
jno
movsl
setno
add
mov
imul
xchg
out
jno
add
xchg
movsl
dec
or
loop
dec
xchg
lret
pop
inc
mov
jb
mov
sub
scas
mov
popa
sub
insb
fnsave
daa
shrb
les
inc
stos
filds
enter
mov
pop
add
lods
sub
pop
push
fbld
outsl
xor
cmp
push
fidivrs
ja
call
sbb
xchg
push
adc
hlt
fnstcw
rolb
stc
cld
adc
sbb
fwait
push
inc
mov
cmpsb
or
add
xor
dec
mov
mov
mov
and
jmp
xchg
addb
aam
int3
sub
add
fwait
pusha
or
push
mov
icebp
mov
fsub
arpl
sbb
ds
test
dec
mov
sbbl
pushf
xor
addr16
adc
and
inc
std
mov
jb
cmp
sbb
imul
push
dec
call
mov
or
sbb
cmp
test
mulb
sub
scas
sub
and
sti
jmp
dec
xchg
outsb
push
add
xchg
jmp
add
adc
xchg
jnp
cmp
out
mul
mulb
mov
sub
js
es
ret
lock
cmp
xchg
dec
cmp
mov
or
outsb
lock
mov
shll
jbe
adc
dec
jno
std
sbb
paddusb
jb
bound
leave
mov
or
xchg
sub
and
rolb
xchg
in
fdivl
repnz
cmp
orb
fstps
addr16
pusha
add
addr16
mov
mov
cmp
or
call
rcrb
mov
and
and
sbb
rolb
test
js
orl
inc
xchg
fiadds
adcb
ljmp
dec
add
push
lret
stc
and
in
and
sub
jo
test
jne
arpl
xchg
loope
stc
or
pop
dec
cmp
cmp
test
add
jmp
xor
pop
jl
movsb
pop
jo
clc
fs
and
jo,pt
dec
pop
xlat
mov
orb
adc
rol
inc
adc
insl
insb
lahf
push
mov
xchg
cmp
jnp
andb
aas
push
out
stos
nop
adc
mov
jae
push
sbb
sahf
js
xchg
mov
shlb
fsts
xor
jne
jne
lahf
icebp
push
sub
ret
pop
pop
cld
dec
jecxz
in
imul
jg
sbb
movsb
cwtl
mov
cmp
rolb
sbbb
dec
sub
push
imul
popa
and
ss
inc
je
shlb
fistpll
into
ret
sub
push
xchg
stos
pop
xor
in
cmpsl
xor
popa
aam
mov
addr16
xchg
push
cwtl
scas
scas
ret
xchg
or
imul
sub
push
rcll
lds
xlat
int3
out
mov
cmp
cmp
lock
sbb
cmp
mov
xor
jne
push
jno
jne
and
mov
mov
push
pop
jp
xchg
idivb
add
push
mov
ds
out
shll
xchg
xchg
call
test
in
sbb
sarl
scas
jl
loopne
add
mov
imul
std
in
stos
rcrb
jbe
push
xor
mov
dec
cmp
jo
xchg
lock
xchg
outsb
cld
cmp
xor
pop
mov
adc
inc
les
je
paddusw
pop
scas
fldcw
xchg
xor
lea
and
mov
shr
cmp
cmp
fcomps
add
mov
xchg
loopne
es
mov
ja
icebp
sahf
mov
dec
mov
cmp
dec
mov
pop
sub
xchg
shll
adc
cmc
iret
xlat
popf
mov
ret
and
inc
ret
mov
in
sub
shll
add
sub
inc
mov
ficompl
cmp
inc
mov
xor
orb
sub
push
andl
adc
mov
pop
ljmp
aaa
push
dec
mov
mov
arpl
mov
lahf
shrb
sub
mov
inc
in
jo
sarl
jns
sub
out
and
fisttpll
xchg
add
out
repnz
bound
mov
xlat
daa
mov
popa
pop
xchg
je
fldl
mov
lock
pop
jns
cmp
movsl
cwtl
stos
adc
shll
fldcw
pop
mov
jno
bound
jbe
xor
or
pop
leave
out
and
enter
lock
xchg
add
add
mov
test
inc
xchg
mov
lahf
nop
add
and
popf
jp
mov
fcomp
cmp
ds
sub
xchg
xchg
mov
faddl
scas
mov
sub
stos
lret
mov
out
sbb
int3
sti
aas
jno
push
and
or
and
call
pop
lods
aad
push
and
outsb
outsb
inc
int3
xchg
in
sub
ss
cld
lret
addl
mov
leave
jl
pop
sub
push
sahf
filds
out
int3
cmp
xchg
mov
xor
imul
add
jg
cld
push
xchg
daa
mov
pop
mov
push
out
hlt
and
cmp
cld
lods
out
cltd
sbb
xor
mov
mov
and
push
cmp
xchg
xchg
fsubs
fwait
neg
xchg
jmp
test
outsb
aam
fstpt
adc
mov
insl
out
icebp
sub
adc
decl
repz
outsl
xchg
lcall
in
pop
repz
mov
fstp
cs
sbb
imul
inc
cmp
adc
cmp
pop
sbb
fstl
outsb
inc
ljmp
ss
or
xchg
jecxz
pop
and
pop
lret
jp
xchg
pop
scas
mov
ss
pop
pop
jl
out
sub
fstl
mov
mov
fcmovnbe
xchg
sbb
xor
jno
pop
inc
call
jnp
mov
dec
add
dec
stc
insl
int
sub
ja
shr
sahf
sbb
sbb
arpl
stos
out
loope
movsb
xor
and
mov
repnz
nop
jns
or
xchg
push
mov
and
add
aam
pushf
fcomps
shll
mov
cmpsb
insl
out
pop
enter
mov
sbb
sub
fwait
add
adc
iret
push
jmp
inc
sti
cmp
jmp
dec
cmc
out
mov
mov
stc
jb
iret
mov
fistpl
imul
test
sub
test
mov
push
jecxz
popf
xchg
sbb
addr16
pushf
push
or
lret
cmp
pop
jno
inc
sbb
pop
adc
mov
jmp
mov
stos
lea
dec
cmp
ljmp
add
cmc
add
cmp
orl
nop
adc
aad
dec
xor
add
mov
out
mov
out
sarb
pop
dec
inc
inc
mov
int
mov
stc
mov
fstpt
inc
sub
pop
cmp
push
in
js
jns
xchg
ficoms
stc
mov
pop
mov
adc
daa
mov
lods
dec
arpl
clc
je
xor
xadd
enter
push
xor
jmp
out
mov
jge
lret
sbb
lods
mov
into
cltd
sub
sbb
push
scas
add
ljmp
rol
add
push
pop
insb
xor
sub
lcall
rclb
jp
mov
and
and
aaa
mov
jno
xor
mov
mov
fwait
sbbb
jbe
mov
jbe
cmp
in
scas
lods
xchg
xlat
xchg
jmp
xor
sbb
inc
mov
push
das
cmp
dec
cmpsb
fs
fmuls
insl
add
jle
lret
jne
push
pusha
or
inc
cmpb
inc
cmp
cs
push
sub
fidivs
mov
ret
fsub
movsb
repnz
loopne
sbb
mov
and
cmp
es
ror
jmp
and
repz
rcll
nop
test
loope
es
subl
jbe
in
insb
add
pop
and
push
sub
mov
out
sub
popa
xchg
out
and
mov
push
ja
push
ret
aam
fbstp
test
xor
pop
adc
add
push
add
aam
leave
add
stos
adc
cmpsl
cli
sbb
icebp
pop
cltd
push
pop
pop
jp
call
call
ljmp
mov
xchg
adc
bnd
push
out
test
and
addr16
sbbb
nop
push
jne
xchg
adcb
and
push
add
xchg
dec
push
jb
dec
dec
test
cld
xor
push
mov
pop
leave
jnp
xchg
add
jmp
es
pop
sbb
pop
and
in
lret
sub
addr16
inc
xchg
dec
sbb
pop
add
ja
fstpt
in
adc
mov
sbb
and
mov
fs
mov
xchg
fisubs
jmp
out
arpl
pushf
and
pop
shlb
cmp
arpl
out
enter
fwait
arpl
nop
imul
jb
mov
inc
push
pop
or
arpl
xlat
push
out
or
cmpsl
inc
or
in
inc
or
jle
push
xchg
in
adc
add
or
cmp
lahf
imul
fnstenv
adc
in
push
popfw
cmp
loop
fildl
test
xor
ret
lret
pop
imul
sub
mov
push
mov
ficompl
push
mov
push
into
inc
or
mov
out
adc
jbe
pop
in
pop
test
icebp
xor
or
dec
cmp
lock
cmp
lods
jb
fcoms
cmp
jns
cmp
pop
xchg
push
ret
lods
mov
pop
fisttps
sbb
bound
fwait
mov
inc
ljmp
imul
movsl
ficoml
and
dec
xchg
cs
cmp
test
inc
mov
jle
push
inc
mov
scas
cmp
loope
sub
and
push
cmp
sbbb
repnz
mov
into
cmp
js
into
mov
mov
xchg
or
add
call
jns
jecxz
shr
xor
shlb
sti
push
xchg
sahf
cwtl
jno
icebp
mov
std
add
lods
addr16
or
jge
adc
cmpsb
lods
hlt
sti
xchg
mov
mov
mov
mov
std
xchg
pop
loope
je
mov
push
out
daa
in
or
lods
imul
lock
and
adc
pop
jae
cwtl
repnz
pop
lea
xchg
movsb
lret
cmp
jo
adc
cmp
pop
pop
stos
pop
rcl
cmpsb
aad
loopne
aam
xlat
xor
or
fdivr
sbbl
xchg
mov
adc
mov
jbe
int3
sbb
sub
xchg
sub
mov
pop
cmp
test
add
cmc
cs
dec
dec
xchg
fadd
sub
xchg
into
mov
mov
cmp
ret
leave
mov
int
in
jp
cwtl
dec
ret
mov
cmp
mov
ja
and
cmc
fisubrs
shll
add
jp
push
pop
lahf
aam
or
in
mov
and
pop
fwait
mov
mov
xor
add
cmp
in
int
pusha
adc
push
call
inc
jl
and
mov
test
jmp
clc
sub
mov
into
sahf
stos
mov
fs
mov
or
int
movsl
ds
cmpsl
ja
mov
daa
fidivrl
sarl
add
repz
sub
stc
sbb
mov
xor
out
rol
adc
dec
push
loope
cli
shll
fisubrs
push
div
mov
lcall
pusha
jnp
mov
fldcw
mov
cwtl
ds
or
lea
mov
int
in
lods
mov
test
icebp
and
jmp
sbb
push
jmp
adc
loop
ljmp
dec
mov
arpl
lret
lea
or
pop
cmpsl
rolb
cmc
leave
test
scas
push
pop
nop
and
sbbb
inc
insl
mov
mov
xor
dec
sahf
and
and
jns
xor
sbb
test
std
mov
mov
inc
gs
jnp
std
sbb
sbb
sub
mov
bound
mov
emms
jp
sbb
ficoms
aaa
pop
movsb
xchg
add
add
inc
js
decb
bound
lods
xchg
jmp
pop
lods
fwait
and
sbb
sub
lahf
hlt
dec
cld
fdivrl
gs
mov
dec
mov
xchg
arpl
or
jmp
dec
into
mov
cmp
xchg
inc
inc
push
inc
push
lods
sub
cld
mov
ss
cmpsl
std
js
jp
daa
cmp
push
mov
sub
mov
loopne
lret
mov
mov
roll
cld
pop
sbb
and
iret
pop
cmp
jnp
aad
push
dec
sub
stos
jl
into
or
pushf
push
sbb
fstp
xor
shrb
push
jnp
mov
mov
psubsw
aad
pop
icebp
bound
shl
mov
push
cmp
xchg
cmpb
push
stos
lret
mov
jo
cwtl
mov
xchg
add
lret
mov
jmp
shlb
arpl
scas
mov
mov
lret
jne
scas
xchg
sbb
mov
adc
push
fiaddl
add
mov
fbld
inc
jmp
jl
dec
mov
pushl
or
pop
xchg
insb
push
xchg
aas
or
add
xchg
xchg
je
sbb
mov
test
and
movsl
sub
xchg
pop
dec
push
rcrl
xor
sbb
mov
or
out
fs
fimull
jmp
xor
test
repnz
enter
shlb
pop
ret
sbb
inc
arpl
stos
lahf
insb
adc
mov
xchg
lds
fwait
inc
pop
pop
repz
test
test
xchg
push
mov
insb
verr
jmp
xchg
mov
jb
test
push
cltd
cs
lcall
pop
dec
into
cmpsb
inc
shlb
das
mov
add
mov
das
enterw
fisubrl
sbb
dec
mov
pop
cmpsl
adc
inc
into
lcall
nop
ror
adc
push
popf
int
in
pop
dec
in
adc
pop
rcrb
dec
and
add
mov
add
lret
sbb
test
shll
xchg
jo
movb
loope
or
daa
jge
inc
pop
int
js
jl
jo
or
iret
pop
mov
jge
sbb
adc
lret
xor
imul
mov
aas
lret
mov
fsts
jno
iret
scas
in
std
ret
in
sahf
inc
and
add
std
mov
movsl
cwtl
ret
into
cmp
data16
xchg
into
lcall
xor
add
fimuls
leave
mov
insb
jno
repnz
and
insb
pop
sbb
inc
das
inc
sub
push
fadds
xchg
add
dec
dec
xchg
ror
adcl
push
repnz
sbb
aaa
testl
insl
or
cli
outsl
jnp
scas
ret
push
fistps
out
jle
shlb
dec
push
jno
and
jbe
sub
popa
stc
fs
loope
push
js
inc
movl
push
pop
in
sub
insl
mov
push
ret
imul
aaa
jg
lret
in
rorb
mov
fdivrs
popf
or
scas
imul
jle
movsl
aad
out
sub
adc
mov
mov
insb
mov
loop
xchg
xor
xor
cltd
mov
push
pop
mov
jae
xchg
jb
movsl
shll
mov
into
shrb
fildl
stos
and
out
and
imul
into
cmp
inc
in
js
xchg
mov
mov
lock
pop
sub
ret
imul
insb
pop
sub
lret
dec
hlt
cmpsb
adc
push
push
add
and
test
pop
hlt
xchg
jb
imul
push
or
fcmovnb
cmpsb
push
loope
pop
mov
inc
and
mov
dec
pop
dec
mov
jg
push
je
mov
pop
inc
fwait
filds
add
flds
mov
leave
pop
es
test
xor
jb
nop
pop
push
cmpsl
lods
adc
mov
ret
sub
jg
cli
inc
stc
cmp
insb
xchg
inc
cwtl
pop
mov
adc
out
mov
or
cmp
aaa
out
mov
cmp
cli
shrb
lods
lahf
or
push
orb
jns
xchg
mov
in
fwait
dec
lock
fistpll
lret
cld
mov
cmp
add
sbb
cmp
fisubs
mov
or
scas
adc
jg
in
cmpsb
nop
ds
add
mov
mov
pop
lahf
or
mov
fstl
lods
push
sub
fs
xor
jne
ds
cmp
xchg
fiaddl
push
in
sub
mov
lds
loope
mov
cld
mov
jecxz
inc
andl
rorl
fisttpll
jg
addr16
cmp
mov
mov
xchg
jmp
xor
js
mov
xchg
push
jbe
adc
imul
scas
mov
imul
adc
and
push
shlb
daa
shld
inc
mov
movsb
pusha
xor
mov
jp
call
xor
mov
jmp
push
mov
fistpll
shlb
sbb
test
inc
mov
rcll
cmc
sbb
stos
cmp
adc
sbb
pop
push
mov
ss
adc
lahf
fldl
cli
sbb
xchg
mov
mov
sbb
jle
bound
or
cmp
xchg
push
pop
xchg
push
andb
jl
loopne
int3
scas
add
repnz
pop
xor
push
rcr
sbb
mov
xor
mov
test
xor
lods
shrb
push
cmp
hlt
int3
sbb
xorl
mov
pop
xor
shrb
push
push
pop
mov
dec
stc
out
in
xor
and
mov
out
xchg
jo
mov
xchg
cmp
fisttpl
iret
mov
stos
popf
lret
mov
inc
mov
xchg
xchg
and
cmp
fistpl
and
sarb
xchg
xchg
cmp
fstpl
push
icebp
adc
xchg
cmpsb
jle
inc
add
sti
mov
cmp
mov
les
in
mov
cmpsb
movsl
fwait
test
cmp
test
inc
stos
adc
cwtl
ss
xchg
es
inc
cmp
aam
outsl
fimull
std
nop
addl
in
xchg
pop
xor
clc
xor
das
shlb
jno
arpl
mov
and
push
in
add
lcall
push
sub
stc
pop
clc
dec
subb
icebp
sahf
mov
aam
arpl
aaa
fwait
cltd
pop
pushf
add
dec
out
mov
dec
add
iret
push
mov
inc
and
pop
pop
loopne
lock
xchg
das
lcall
sub
rcll
int3
mov
stos
bound
jne
stos
imul
add
aad
in
cmc
aad
movsl
xchg
mov
test
jne
inc
jne
add
add
aad
in
cmc
aad
movsl
xchg
mov
test
jne
inc
jne
add
adc
shl
cmc
in
vpaddq
test
jne
inc
pop
push
add
add
sub
repnz
dec
push
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
