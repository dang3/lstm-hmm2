push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
and
add
add
sar
shr
int
int
cmp
and
jo
pusha
sub
pushf
mov
in
lock
int
cmp
and
jo
pusha
dec
nop
mov
vaddsubps
mov
xor
push
fwait
pop
jmp
pop
ds
push
mov
je
cwtl
sbb
cmpsl
or
cmp
fldl
mov
mov
sub
or
cwtl
xchg
shlb
sub
imul
mov
mov
and
shll
loopne
adc
daa
pop
cmp
sub
lods
pusha
inc
or
or
test
int
std
test
mov
fldl
scas
mulb
mov
dec
xchg
inc
mov
subb
sub
or
lret
out
xlat
jo
xlat
mov
lret
in
xchg
mov
sarl
and
jo
pusha
dec
nop
mov
mov
in
lock
mov
arpl
dec
xor
cmp
cmp
int
mov
into
in
push
mov
test
push
je
push
push
popa
outsb
xor
or
cli
mov
jnp
mov
add
js
jne
dec
inc
insl
jo
pusha
dec
nop
mov
mov
in
lock
int
cmp
and
jo
pusha
dec
nop
mov
mov
in
lock
int
cmp
pop
lret
inc
ret
aad
mov
sahf
sub
add
xchg
icebp
cli
in
adc
dec
mov
mov
jp
stos
or
dec
es
mov
push
or
aas
nop
and
and
xor
repnz
pop
adc
inc
aaa
sub
and
jae
push
or
add
add
xchg
xor
repnz
cmp
inc
adc
subl
cmp
shlb
mov
fisttpll
jge
fiaddl
scas
pop
mov
lret
ret
xchg
adc
divb
fmul
push
mov
fstp
cmp
scas
adc
inc
xor
push
cmp
stos
icebp
fnstcw
xor
push
mov
fsubl
out
sahf
add
gs
out
scas
push
and
adcb
or
out
push
cli
sti
fcmovnb
out
pop
movsb
jmp
sbb
mov
pop
adc
je
xor
jne
mov
dec
pushf
sbb
push
jo
pop
inc
stc
jnp
dec
cmp
dec
sbb
mov
sahf
movsl
mov
inc
push
jg
push
test
dec
add
movsl
pop
xlat
cmp
das
lea
jb
and
sbb
add
jbe
in
shrb
call
inc
add
negl
mov
push
pop
push
inc
cmpsl
out
lcall
js
inc
repz
imul
mov
add
sbb
nop
add
shlb
mov
js
test
sar
iret
or
data16
fidivl
sub
sub
sub
or
pop
inc
push
jae
addr16
es
repz
and
mov
cmp
lret
sub
stc
repnz
call
xchg
mov
sbb
inc
or
div
jg
aam
int
icebp
pop
sub
cmovno
insl
mov
push
xor
xchg
xchg
mov
or
shrb
and
popf
lods
in
xchg
inc
lods
int
sbb
inc
xchg
cli
test
hlt
hlt
lea
js
cmp
fstpl
lcall
mov
in
or
push
jle
lret
xor
sbb
adc
mov
rclb
shlb
mov
aaa
insl
cmpsb
or
ret
mov
jne
int
fstpl
or
ljmp
js
das
test
inc
test
xor
add
hlt
xchg
pop
push
xor
dec
aas
loop
mov
mov
pop
mov
xchg
cmp
rol
adc
push
push
lock
cmp
push
aas
jmp
ficoms
rcl
mov
loope
les
and
sbb
loope
int3
and
lcall
call
cmp
movsb
ret
stos
push
adc
add
mov
sbb
insl
xor
inc
bound
outsl
add
ret
scas
jns
adc
std
or
movsl
popa
scas
into
sarb
imul
int
sbb
aad
in
sarb
outsl
sbb
sbbb
int
push
lahf
cli
loope
into
aaa
lahf
mov
dec
inc
xchg
clc
pushf
shlb
hlt
inc
scas
ljmp
mov
xor
mov
xchg
shl
dec
and
push
adc
scas
xor
lds
js
lods
les
mov
push
outsl
fucom
lret
xlat
fucom
cli
xchg
inc
popa
bound
out
shrb
sbb
push
xor
loop
adc
ljmp
add
mov
negl
shll
mov
mov
add
lods
xchg
jbe
je
out
dec
dec
ret
xchg
in
xchg
lret
or
push
cmp
cld
inc
mov
mov
push
dec
iret
rol
cmp
pop
cli
mov
nop
stos
fcmovne
rorl
and
psadbw
ss
sbb
adc
adc
dec
or
out
or
lcall
inc
lock
outsl
adcl
and
dec
callw
outsl
add
ss
stc
pop
out
push
ljmp
pop
dec
adc
adc
fwait
push
xor
sbb
rcl
cmpsl
dec
into
push
xor
push
xchg
pop
xchg
test
adc
xchg
fldt
stos
ljmp
sbb
daa
imulb
inc
leave
push
fcompl
fwait
push
inc
arpl
pop
sbb
incl
testb
aad
pushf
leave
insl
cmp
call
aas
sbb
outsb
lahf
and
push
fistpll
pop
out
jne
mov
pop
les
mov
dec
sbb
les
cmc
xchg
mov
sahf
mov
dec
add
cmp
imul
mov
in
push
stos
ret
push
test
add
xchg
adc
outsb
mov
sbb
jns
mov
dec
negb
in
xchg
outsb
push
std
and
imul
cmp
xor
jle
jmp
dec
pop
negl
cwtl
dec
cmp
stos
mov
aam
jmp
stos
mov
adc
lea
mov
and
repnz
pop
sbb
pop
xchg
jb
mov
xlat
js
rclb
xor
iret
mov
xchg
dec
nop
adc
mov
data16
lock
insb
jp
scas
insb
fscale
stos
out
mov
movsl
and
inc
dec
sub
adc
bound
mov
mov
loop
mov
adc
xor
int
ficoml
mov
dec
popf
ja
imul
xchg
arpl
test
arpl
dec
les
sar
jnp
inc
cld
mov
test
rorl
adc
repnz
out
pop
sti
dec
mov
nop
lods
push
push
jns
ss
jne
adc
xchg
mov
rcrb
out
mov
xchg
imul
lea
insb
sub
lea
jg
and
dec
aad
pusha
xchg
add
or
adc
mov
add
xor
mov
cmpsb
push
mov
aad
shrb
cld
or
sbb
sbb
sbb
testl
movsl
add
movsl
aad
and
xchg
or
daa
xor
and
adc
add
push
lock
add
out
push
dec
addr16
xchg
jb
popf
push
dec
jb
xchg
sbb
mov
sti
xorb
testb
push
cwtl
inc
dec
mov
lods
jno
push
pop
jo
out
mov
mov
pop
jne
mov
xor
jl
into
or
jp
pop
mov
cld
jb
mov
aaa
pop
movsl
aas
in
sub
and
dec
imul
and
cmpsb
push
mov
jnp
xchg
stos
mov
xchg
inc
or
mov
xor
movsl
je
sub
mov
fld
rolb
test
lret
sub
mov
xchg
shrl
les
cmp
jb
xchg
ret
popf
pop
shll
xchg
sbbl
pop
mov
jl
mov
shlb
andb
xchg
or
in
pop
cwtl
push
xchg
gs
adc
xchg
mov
mov
adc
das
xchg
pop
pop
nop
xor
push
xor
ret
mov
inc
insb
cmp
adc
sub
mov
push
sbb
pop
in
loop
rclb
aad
inc
leave
push
push
mov
add
or
push
cli
xor
push
in
mov
mov
pop
mov
xor
enter
mov
pop
je
movsl
push
add
push
pushl
jl
call
cli
mov
xchg
mov
mov
loopne
cli
mov
mov
pop
stc
in
loop
rorl
cmp
sub
dec
mov
and
add
jg
mov
vpsubd
mov
mov
test
cmp
dec
xor
cmc
mov
sbb
inc
dec
pusha
mov
leave
add
out
inc
pop
sbb
test
div
xchg
pop
inc
sbb
mov
in
aas
repnz
dec
lods
dec
fstp
mov
xor
mov
cmp
xor
dec
popa
repnz
test
mov
fld
aad
cmp
scas
sub
arpl
test
shld
xchg
jb
jmp
je
ret
push
mov
adc
into
xor
jmp
pop
pop
jg,pn
jae
dec
in
je
inc
fs
sub
xchg
mov
adcb
xchg
jb
mov
icebp
fbstp
movsl
enter
adc
dec
fcomi
jge
ljmp
mov
push
xor
lret
mov
and
xor
int3
mov
ss
and
mov
fidivrs
inc
movsb
pop
fldcw
or
rcl
xchg
add
testb
push
cwtl
jp
lds
scas
mov
decb
pop
inc
dec
out
frstor
lret
dec
std
decl
mov
mov
sbb
mov
lret
jmp
addr16
mov
mov
addr16
jno
jg
mov
out
mov
dec
test
daa
pusha
daa
ja,pt
inc
addb
in
test
ss
xchg
or
fmull
pop
adc
les
push
cmp
mov
jbe
push
mov
push
inc
gs
ds
lds
xor
sub
xor
fildl
sbb
enter
adcb
stos
aaa
add
ljmp
loopne
loop
mov
loopne
inc
mov
pop
mov
xchg
jl
cmpsl
mov
jbe
test
ss
lds
daa
test
sbb
cmpsl
imul
popa
mov
xor
inc
pop
xchg
pop
pop
aad
inc
adc
andb
jbe
or
mov
mov
push
shl
inc
xor
jl
pop
lds
lock
xor
push
mov
rcr
adcb
subb
xor
lahf
ret
and
add
dec
jg
stos
pop
jb
jno
dec
lock
lahf
inc
jo
stc
out
lock
and
addb
add
jecxz
jno
sarb
ljmp
lret
jp
fistpll
pop
fs
jle
int
sub
into
sbb
xchg
popf
or
icebp
xor
in
cwtl
fisubrl
push
lret
pop
dec
out
sarb
testl
and
and
or
xlat
sti
adc
push
push
pop
sahf
fimuls
add
add
test
cmp
and
mov
les
rcr
or
xchg
jecxz
stos
call
mov
adc
cmp
leave
mov
mov
ret
inc
movsb
std
pusha
mov
gs
mov
cmp
pop
cmp
sub
iret
mov
pop
stos
sub
int3
cmp
and
lahf
sbb
or
out
mov
scas
adc
and
loop
pop
lods
inc
xchg
or
and
xor
imul
gs
xchg
add
ljmp
daa
sbb
daa
sbb
mov
test
add
xor
push
mov
mul
mov
inc
jmp
inc
loop
cmp
dec
fwait
ds
cltd
sub
int3
or
fwait
and
mov
adc
inc
test
les
gs
sbb
repnz
loopne
jmp
divl
sbb
inc
pop
loop
jg
mov
inc
xchg
popa
mov
xor
mov
popa
lock
int3
in
xchg
sti
aam
insl
mov
lea
inc
lret
cli
test
cltd
xchg
enter
jge
fnsave
adc
mov
bound
xor
mov
xchg
loop
mov
jg
push
pushf
movsl
clc
xor
imul
fmull
test
xchg
cli
push
adcb
pop
cs
mov
xchg
fwait
adc
cmp
clc
ljmp
lock
jns
enter
mov
ds
adc
sar
aas
add
loop
in
popf
push
mov
data16
xlat
ds
sbb
stos
mov
aas
pop
sar
out
aad
les
daa
test
mov
push
pop
addb
daa
test
out
out
sub
push
inc
insl
rol
xchg
dec
repnz
fld
sbb
push
xchg
xor
mov
jo
jo
jecxz
or
shlb
test
rorl
xlat
push
cmp
call
sbb
sbb
adc
rcrb
jbe
arpl
fbstp
test
mov
dec
int3
inc
inc
inc
or
inc
sbb
addr16
adc
ficoml
sbb
jae
outsl
leave
loop
ffreep
mov
fstl
mov
mov
sbbb
jne
aad
out
into
in
mov
stc
clc
jg
fsubrs
popa
mov
dec
pop
lahf
add
test
and
popa
loop
insl
dec
nop
repz
repnz
mov
inc
iret
adc
call
jg
mov
lds
fsubrs
fldl
pop
and
add
mov
rorl
lea
sbb
sub
cltd
or
adc
push
push
test
orb
mov
cmp
mov
or
push
xchg
addr16
test
cmc
roll
sub
arpl
push
xchg
in
fs
jle
jecxz
jp
add
pop
fsubrl
push
mov
xchg
lahf
mov
push
clc
sti
fcmovbe
push
lds
jae
add
scas
loop
mov
push
inc
lods
pop
sub
popa
xlat
lcall
cld
inc
push
mov
rclb
or
addr16
xor
out
dec
fsubl
add
xlat
push
mov
movsb
xor
pop
xor
fsts
stos
movsl
xchg
inc
fsts
icebp
scas
fldt
jge
xchg
push
gs
xchg
imul
cmc
xchg
jno
add
pop
scas
jecxz
and
add
mov
jg
pop
jp
xchg
scas
cmc
daa
inc
push
test
push
xchg
jecxz
int3
ja
rorl
xlat
pop
test
shrl
xchg
mov
jae
lret
int3
lcall
cli
add
jbe
mov
loop
mov
fwait
call
adc
adc
sbb
pop
push
cmpl
rorl
push
insl
push
lret
jnp
push
inc
sbb
in
and
xchg
dec
inc
inc
push
cli
add
lods
xchg
jbe
out
mov
and
stos
outsl
leave
sub
cmp
sbb
aas
add
mov
mov
or
stos
xchg
jnp
jmp
mov
dec
outsb
das
daa
fs
inc
loopne
adc
add
push
sub
cmp
imul
int3
mov
out
aad
cmc
fs
jmp
lock
jb
or
inc
adc
xchg
es
sbb
pushf
push
out
sub
sbb
sub
rcll
enter
icebp
xchg
jl
push
addr16
jp
loope
scas
rorb
sub
push
inc
fistpl
fsts
inc
int
jo
and
sub
fstpl
jmp
imul
fdiv
xor
out
loopne
or
jp
popf
add
pop
and
or
fstl
add
push
aad
lods
adc
cs
lds
test
pop
xchg
shlb
sub
sbb
lds
cld
nop
dec
xchg
lods
jne
mov
inc
aaa
mov
stos
and
push
mov
cs
dec
cmc
mov
mov
ret
shrl
mov
add
fdivs
in
test
xlat
cwtl
xor
jb
jb
cli
and
fs
test
jb
xor
inc
enter
mov
mov
sbb
mov
sbb
push
adc
mull
bound
mov
hlt
pop
notl
inc
gs
mov
lahf
out
mov
aas
lods
cmp
shrl
enter
xchg
jnp
in
mov
sbb
adc
scas
pop
lret
xor
enter
and
adc
add
je
data16
or
pop
jmp
stc
add
add
loop
int3
and
or
hlt
jns
fwait
ja
popf
cwtl
mov
orb
into
xchg
dec
jmp
adc
or
push
sbb
sbb
cmpsb
xor
mov
lcall
add
cmp
in
push
jbe
and
popa
aad
mov
mov
jnp
cmc
pop
andb
mov
dec
jecxz
ret
flds
mov
xor
loop
mov
add
inc
dec
sub
xor
dec
in
call
jnp
xchg
hlt
adc
jbe
adc
jnp
ficoms
jg
sti
js
mov
push
int
jae
mov
and
in
lds
pop
and
repz
jns
loopne
xchg
loopne
pusha
clc
repz
es
aam
dec
into
in
pushf
into
adc
aaa
xor
mov
pop
add
pop
push
fstp
mov
arpl
fists
sub
sub
lods
lea
stos
push
cltd
inc
or
iret
push
pop
std
push
add
dec
dec
sbb
sti
jns
inc
fwait
and
jg
inc
inc
jns
aas
inc
xlat
mov
and
clc
insb
add
jmp
movsl
jl
jbe
jo
sub
repz
dec
call
pop
jae
scas
shl
lcall
lret
xchg
dec
push
lret
test
dec
fbld
and
cltd
cmpsb
xchg
xchg
in
inc
jns
subl
daa
inc
xlat
repnz
jbe
jne
out
pop
inc
lret
imul
or
adc
repnz
xchg
mov
in
xchg
xor
xchg
test
xor
xchg
or
into
xchg
hlt
dec
sbb
sbb
jne
mov
pop
mov
mov
test
push
js
cld
mov
in
pop
test
gs
xchg
pop
scas
test
xchg
xchg
mov
or
outsb
inc
cmp
inc
mov
inc
add
sub
push
xor
jb
inc
or
ss
and
jg
cmp
xor
popa
mov
mov
push
aaa
aam
bound
gs
dec
stc
les
out
lret
xchg
rorb
movsb
es
mov
xchg
inc
int3
leave
faddl
jp
mov
add
sub
lret
enter
mov
andl
lcall
pop
sbb
adc
jns
aaa
add
ljmp
addl
dec
scas
test
jp
push
mov
xchg
js
mov
dec
aam
push
int3
or
loope
jle
pop
pop
cld
adc
cld
cmpsl
adc
les
or
stos
xchg
cmpsl
mov
fdivrl
or
xor
test
mov
jae
std
cmp
repnz
daa
mov
test
in
dec
pop
ret
es
mov
sub
les
dec
pop
bound
sub
xor
outsb
mov
mov
inc
xchg
or
mov
insl
add
mov
cwtl
lods
lods
jbe
jge
sub
inc
jae
sbb
sbb
rcll
pop
xchg
cltd
mov
lahf
cld
jp
popf
push
orl
jl
cmp
frstor
push
rolb
pusha
arpl
jle
jbe
repz
popa
pop
mov
or
mov
mov
pop
fcomps
sub
or
inc
fdivr
mov
lret
out
jnp
std
jmp
and
inc
negl
xchg
cld
and
sub
push
jnp
pop
adc
or
in
out
std
addb
mov
out
ss
shrb
pop
or
ds
ret
xchg
ds
jmp
jo
popa
shrb
scas
lea
cmp
aas
cmp
insl
sbb
add
and
int3
jo
lahf
cmpsl
rol
loopne,pn
jle
testb
or
pop
sbb
das
or
arpl
inc
inc
stc
pop
mov
cld
dec
fisubl
pop
mov
add
sbb
fmuls
sahf
xor
je
push
cmp
push
pop
jmp
faddl
push
in
cltd
lret
push
pop
pop
pop
inc
fnsave
bound
std
inc
out
out
xchg
jmp
inc
out
jg
out
cltd
add
xlat
rorb
rolb
push
mov
stos
mov
rorl
movsb
ret
pop
addb
int3
sub
fnsave
addb
adc
pop
inc
pop
xchg
adc
jecxz
lods
pinsrw
pop
push
decb
lahf
adc
std
bound
out
cli
lcall
dec
xchg
add
cmc
mov
push
loop
das
jmp
pusha
es
push
mov
inc
in
das
insb
fimull
iret
pop
add
push
sbb
sub
dec
dec
arpl
gs
ror
cmpsb
lcall
cs
jp
mov
push
sub
clc
mov
test
aam
jp
lahf
popa
fiaddl
aaa
jns
push
dec
jecxz
dec
jmp
dec
cmp
sub
andb
mov
int3
inc
mov
das
subl
mov
loope
sbb
in
lret
mov
push
js
cmpb
jg
cmpsb
dec
xchg
cmp
pop
cmp
enter
add
leave
lret
or
in
mov
lret
sub
les
add
cmp
jg
repnz
movsb
shll
lret
mov
jg
mov
shll
add
cld
mov
sub
push
jge
insl
jo
pusha
dec
nop
mov
mov
in
lock
int
cmp
and
jo
pusha
dec
nop
mov
mov
in
lock
int
cmp
and
jo
pusha
dec
xchg
mov
mov
in
icebp
fucom
int
cmp
and
lock
loopne
outsl
mov
mov
adc
and
xor
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
rclb
mov
pop
daa
repnz
inc
cmp
popa
sbb
push
js
dec
and
stos
sarb
ljmp
push
sub
jo
pusha
sbb
add
and
cmp
mov
nop
add
and
ret
arpl
push
pusha
imul
ds
pop
lock
mov
sub
pop
push
xchg
inc
mull
and
cwtl
and
lods
rcrb
outsl
jmp
push
dec
mov
lods
pextrw
push
bound
mov
subb
mov
mov
push
push
cmpsl
adc
jo
mov
jp
mov
dec
shrb
stos
lcall
xchg
xor
aad
push
aas
or
out
imul
mov
and
fstps
pop
leave
into
cmpb
jns
sub
int
sbb
jnp
pop
and
xor
jb
cmp
sub
add
lea
sbb
rorb
loopne
nop
ljmp
push
lods
inc
cld
jo
pusha
push
adc
xorb
and
clc
mov
cltd
leave
mov
mov
and
jae
add
cmp
jmp
mov
enter
xor
outsl
pusha
jge
cmp
pop
sub
mov
sar
fimull
mov
mov
cmp
pusha
sbb
push
jp
dec
and
stos
sarb
ljmp
push
sub
jo
pusha
sbb
push
jp
dec
and
stos
in
insl
sub
mov
jae
jmp
ds
push
std
and
in
ja
fucompp
outsl
mov
jmp
std
pop
cmp
shlb
stos
dec
orb
imul
loop
std
or
add
or
cmpl
jle
inc
repz
sbb
inc
pop
adc
pop
cmp
std
repz
aaa
mov
inc
insb
mov
cltd
test
ss
fsub
jno
or
in
jnp
mov
dec
mov
jl
addb
xor
outsb
mov
fsubrp
dec
je
loopne
adc
enter
jo
loopne
cmp
es
pop
jbe
cmp
dec
inc
mov
ss
sbb
pop
dec
shlb
popf
or
enter
sub
fistpl
inc
test
pop
jmp
repnz
adc
dec
lea
popf
add
mov
aaa
subl
dec
xor
push
test
neg
cmp
insb
subb
or
lds
hlt
mov
int
mov
loopne
stc
adc
nop
addr16
push
push
dec
or
sub
xor
lret
push
dec
ds
sbb
cmp
icebp
mov
das
jg
insl
hlt
or
aas
loop
push
mov
jbe
pop
adc
xlat
sbb
aam
roll
nop
outsb
xor
sub
loope
in
mov
incb
popa
mov
stos
and
sub
inc
daa
stos
popa
ret
sub
xor
jl
pop
jl
in
cltd
xchg
adc
iret
punpckhwd
notl
jne
mov
xchg
popa
add
pop
aad
jne
insl
mov
shrb
or
bound
push
or
xorl
divb
mov
out
inc
jecxz
mov
cmp
jo
or
pop
scas
xchg
sub
jo
jne
jo
cmpsb
sbb
sub
jl
fildl
xor
ss
sbbb
into
dec
lds
pop
dec
movsb
addl
xor
adc
adc
pop
inc
mov
xchg
and
mov
push
add
rorb
icebp
push
nop
inc
xor
in
mov
or
xchg
out
lods
mov
aaa
pushf
movsl
jl
and
or
dec
jg
push
mul
cld
dec
inc
test
pop
add
adc
cld
je
cld
pop
push
out
push
lret
iret
jl
or
pop
xlat
test
sub
add
pop
ja
scas
outsl
pop
frndint
jae
in
test
into
xchg
ret
lea
pusha
sub
jge
je
in
or
test
lcall
icebp
or
mov
jecxz
push
xchg
jle
cmpb
and
popa
leave
mov
add
pop
xor
inc
jp
into
mov
xchg
lock
scas
pop
push
jmp
cs
xor
or
push
mov
cmp
hlt
sar
mov
iret
mov
xor
jle
scas
xor
pop
lret
leave
lods
rorb
out
sub
insl
pop
lahf
adc
dec
stos
les
and
jne
jge
and
mov
in
mov
pusha
add
sbb
xor
sub
dec
mov
addl
dec
fildll
mov
adc
mov
nop
fcompl
inc
test
xor
dec
mov
cltd
lret
ds
addr16
add
jne
sub
cmpsb
pop
push
fldcw
out
pop
clc
xchg
mov
sub
into
cmpsb
xchg
aad
add
dec
bound
push
cmc
push
inc
std
and
call
loope
outsb
add
mov
mov
push
int
jno
stc
add
cmp
outsl
jmp
jp
sahf
aaa
lret
mov
jmp
in
and
ffree
and
arpl
xchg
mov
push
mov
add
inc
push
dec
dec
fdivrs
in
inc
nop
xchg
xchg
xchg
repnz
ds
cmpsb
hlt
xor
test
adc
push
stc
addr16
xor
xchg
add
dec
mov
xor
push
sub
sbb
jp
lds
mov
mov
jb
or
aas
xchg
lods
add
sbb
mov
mov
call
or
cmp
xor
adc
push
rcrb
adc
and
filds
shlb
or
xchg
dec
imull
fnstenv
xor
leave
cmp
imul
loop
push
pop
jecxz
ja
ror
mov
mov
aam
and
sti
ljmp
jbe
lods
mov
call
sbb
xchg
in
lds
cmc
fcomps
idiv
fwait
push
mov
jl
test
xchg
rcll
out
clc
lds
mov
sub
pushf
insb
inc
aad
sub
test
xchg
sarl
outsl
fwait
cmc
sbb
add
outsl
adc
fiaddl
xchg
sbb
pushf
cmp
test
push
push
xchg
sub
or
xor
in
negl
cs
loop
sbb
sbb
sub
mov
imul
gs
call
test
add
bound
js
mov
and
jmp
popf
imul
mov
scas
jbe
mov
and
push
out
and
jl
push
lods
jmp
in
rcrl
dec
add
call
shlb
add
jno
mov
mov
pop
xor
enter
imul
mov
pop
jne
aaa
cmp
add
inc
inc
sub
mov
jbe
or
inc
pop
sti
popa
cmpsb
push
lods
fbld
mov
fdivrs
lret
aad
into
lret
test
xchg
add
in
ret
and
inc
adc
mov
and
jg
sbb
in
aaa
cltd
pop
orl
and
mov
jle
popf
clc
mov
stos
sub
jmp
push
clc
xchg
ljmp
adc
int3
or
push
xchg
test
shr
jle
xchg
and
or
mov
int
push
and
fldcw
mov
rorl
inc
rcrb
dec
scas
ss
or
mov
bound
gs
or
vpmacsswd
push
shlb
inc
gs
mov
bsf
mov
push
pop
sub
push
sub
xchg
xchg
or
jnp
enter
cld
mov
cmp
sbb
mov
out
adc
stc
push
ficoml
xor
push
add
or
xor
outsb
mov
add
mov
cmpsl
push
or
jle
sbb
gs
aas
clc
cmp
add
push
cmc
jnp
xor
jae
mov
sub
addr16
jg
sbb
and
inc
sub
dec
pop
ja
cmc
out
stc
lahf
adc
or
popa
or
dec
xchg
sub
loop
orl
ss
jmp
das
test
jp
add
scas
xchg
add
out
xchg
mov
and
test
negb
pop
xor
stos
sub
fs
lahf
xchg
jae
mov
xchg
aaa
out
repnz
cmpsl
xchg
std
in
adc
jo
xor
fs
mov
jb
inc
cmp
mov
adc
inc
lret
fildll
push
movsb
outsb
fs
jne
mov
lret
or
or
movsl
push
rcrl
loop
aam
out
adcb
inc
sub
cmp
and
sub
stos
pop
mov
stc
mov
pop
ret
js
push
sbb
and
mov
pop
setge
rsm
xor
dec
and
pop
push
mov
jmp
lea
movb
icebp
fs
jmp
loopne
adc
ret
jo
pop
sbb
dec
mov
in
mov
mov
inc
push
lcall
sti
add
lcall
clc
dec
sarl
js
inc
lds
je
sbb
sbb
cmp
sub
cmp
test
mov
xchg
inc
fnstenv
jg
test
push
jae
pop
cmpl
pop
sub
jae
mov
aam
orb
pop
imul
loop
sbb
je
sbb
xchg
mov
outsl
and
ljmp
lods
mov
xchg
inc
push
std
dec
sub
cwtl
out
sbb
ja
or
in
js
dec
add
mov
fbstp
movsb
je
shll
jecxz
cmpsl
orl
push
xchg
mov
mov
fidivrs
pusha
test
rcrl
in
lret
adc
mov
cmp
jge
repz
dec
xchg
lea
jno
aas
jae
imull
dec
inc
test
sti
adc
push
push
adc
mov
cltd
jle
subl
jo
adc
ljmp
cwtl
iret
xlat
enter
mov
dec
xchg
aad
mov
cmp
out
add
imulb
int3
test
loope
mov
enter
lea
pop
jge
popa
add
and
jo
and
ficoml
mov
inc
shl
pop
aaa
and
ss
icebp
xor
stos
push
or
aas
jecxz
mov
add
dec
pshufw
cmp
out
lret
or
lock
sbb
push
sub
sub
sahf
stos
out
sub
fs
sahf
jg
std
dec
das
pop
int
out
add
sub
ljmp
jmp
fwait
xor
xchg
rclb
popa
into
or
inc
gs
push
mov
mov
inc
les
jne
pop
mov
movsl
aad
pop
shrl
sub
ret
gs
arpl
inc
adc
int
cmpsl
pop
mov
iret
adc
daa
add
repz
and
int
cmpsl
or
inc
or
dec
and
sbb
imul
push
je
and
cmp
clc
ljmp
mov
outsb
mov
xlat
popf
inc
mov
xor
in
mov
dec
sub
jmp
scas
mov
xchg
mov
das
dec
out
fcmovne
xchg
lahf
aad
adc
lods
mov
and
dec
lock
dec
jo
or
push
scas
mov
lea
repz
adc
cmp
sub
jo
roll
pop
loopne
inc
sbb
fbld
cmp
movsb
lcall
pop
xchg
icebp
xorl
out
out
sti
or
push
pop
insl
fmul
and
cld
bound
pop
xor
arpl
enter
leave
in
bound
rol
sub
mov
push
add
jecxz
lret
push
mov
pop
mov
out
movsb
test
push
lahf
or
enter
xor
enter
and
into
cmp
inc
sahf
push
dec
or
dec
mov
movsb
arpl
sub
mov
jg
ret
and
xchg
lock
outsl
jmp
push
enter
mov
je
cmpsb
test
adc
lret
int3
aaa
paddsb
inc
mov
cld
and
cmp
mov
xor
push
sbb
out
xchg
imul
ja
cmp
daa
xor
mov
cmp
loope
dec
xchg
lret
adc
sbb
fcoml
in
xchg
jl
test
mov
add
fmull
xchg
in
push
sub
and
mov
add
insl
jo
cmc
and
adc
jns
gs
ss
xor
pop
stos
xchg
xchg
add
sbb
mov
test
loopne
popf
push
push
in
cmc
imul
push
les
jge
call
ss
xchg
mov
rorb
mov
cs
add
dec
or
test
mov
orl
adc
mov
mov
inc
fiaddl
mov
cmc
lcall
insb
jp
dec
mov
sub
call
adc
pop
fs
popf
xlat
or
mov
dec
mov
es
cs
mov
sub
push
xchg
sbb
xor
or
xlat
or
jp
movsb
orb
adc
xor
cmp
sub
push
hlt
mov
pop
rcll
repnz
ret
adc
leave
jecxz
in
and
pop
jb
inc
out
in
dec
insb
lods
mov
fmul
jecxz
iret
out
jbe
xor
push
mov
xchg
movsl
loopne
push
add
adc
mov
imul
mov
pop
add
pop
shl
cli
jns
push
cmp
sub
cwtl
and
jge
fldl
imul
add
cmpsl
xchg
lock
mov
xchg
sbb
fisttpll
sbb
sbb
sbb
test
dec
or
cltd
push
sbb
cmp
int
hlt
mov
jae
fisubl
adcb
xchg
add
push
sub
xchg
sub
jbe
mov
test
push
and
imul
repnz
pushf
test
ljmp
add
daa
mov
aam
sbb
gs
adc
stc
cmp
fcoml
mov
jecxz
lods
jns
adc
pop
call
loopne
sub
scas
mov
test
hlt
ss
add
or
popf
or
xor
cmc
roll
orb
xchg
push
xor
lods
fnstsw
xchg
add
rolb
inc
aas
loope
sub
xchg
data16
fistl
and
jecxz
xchg
or
xor
pushf
xor
xchg
and
jne
mov
add
clc
cmp
and
aas
dec
pop
and
not
orl
sub
sbbl
in
loopne
je
sub
fisubrl
rcrb
mov
jle
mov
rorb
fs
add
push
inc
scas
sbb
pop
add
cmp
and
clc
mov
sbb
xchg
mov
js
sub
mov
cmpsb
iret
mov
xchg
nop
lret
hlt
mov
pop
pop
mov
aas
call
inc
loopne
and
mov
jns
xchg
clc
hlt
fwait
loop
xor
ret
mov
nop
imul
push
fidivrl
xlat
cmp
add
enter
and
sbb
pop
stos
popf
fbld
repz
outsb
jg
jge
addr16
sti
jg
sbb
push
insl
ljmp
daa
xor
scas
cld
mov
insl
jbe
cld
push
das
cs
sub
add
cmc
enter
loopne
mov
dec
lods
adc
iret
jne
sub
es
rolb
in
movsb
rol
add
cmp
and
movsl
nop
dec
or
aad
mov
in
fsts
ja
cmc
dec
or
sar
insb
and
aam
sub
adc
cwtl
push
cs
adc
add
sbb
popf
sub
mov
xor
pop
cmp
push
lahf
cld
push
fcom
push
out
cmc
inc
mov
lds
cs
mov
mov
push
ds
int3
pop
mov
sbb
stos
mov
mov
out
addr16
inc
mov
inc
mov
jo
xor
cmp
mov
enter
jp
sbb
cli
ficoml
lods
int
scas
xchg
stos
push
repz
call
lock
mov
lea
roll
iret
xchg
negl
ds
das
gs
adc
iret
or
push
push
push
lods
sbb
push
es
and
fcoms
inc
or
or
icebp
jp
xchg
xor
push
filds
pop
jg
jg
mov
inc
outsb
out
jo
dec
mov
xor
fucomip
push
or
add
cli
fs
push
out
imul
fwait
dec
mov
movsb
and
jmp
mov
rorb
pop
jp
bswap
imul
mov
shlb
mov
jp
and
xorl
cmp
imul
aas
popf
add
call
pop
push
insb
add
push
stc
lods
and
scas
lahf
cli
in
insl
fbstp
sub
dec
dec
xchg
ljmp
shrl
cmp
inc
pop
ds
in
sub
fcomp
mov
pop
in
cmp
pop
addr16
stos
loope
mov
aas
jne
jo
ret
push
and
in
stc
xchg
fbstp
pop
test
jbe
xchg
les
push
pop
sbb
adc
push
cmpl
repnz
sbb
out
pop
pop
cmpsl
cmp
xchg
cmp
push
stc
pusha
add
and
out
inc
pop
jle
mov
mov
frstor
leave
testb
push
sbb
dec
jg
push
sub
imul
sbbb
lret
pop
mov
out
and
xor
push
out
mov
fwait
jns
mov
jl
stc
push
adc
fs
ret
mov
fildll
bswap
mov
pop
insl
jge
insb
add
sbb
adc
orb
fdivrl
xor
aaa
push
stos
subb
pop
pop
popa
repnz
inc
add
popf
lock
push
les
inc
adc
mov
es
test
sbb
inc
inc
out
or
xor
sbb
rclb
pop
shlb
dec
add
mov
jnp
or
mov
jp
xchg
xor
dec
mov
dec
lea
leave
fildll
push
adc
sub
sub
sub
ds
cmc
lock
xor
insb
popa
addr16
xchg
xchg
icebp
hlt
mov
fildl
cmp
mul
jle
sbb
or
add
inc
fsubs
adc
pop
and
add
jge
imul
imul
dec
notl
dec
push
add
mov
push
popa
sub
shr
xor
or
movb
sbb
or
imul
lea
adc
fst
push
jbe,pt
pop
int3
jmp
pop
leave
fsts
pop
fldl
xlat
fdivl
push
adc
rolb
aam
dec
std
inc
inc
dec
out
lods
xchg
cmp
add
mov
sub
loop
popf
test
cld
scas
clc
and
add
dec
xchg
inc
mov
add
adc
adc
fidivrl
mov
repnz
ret
repnz
xor
aam
shlb
aaa
fimull
xchg
lods
and
mov
repnz
adc
out
aas
or
shrl
inc
mov
push
adc
mov
ljmp
repnz
mov
xchg
inc
dec
inc
and
or
adc
sbb
insl
test
pop
inc
cmpsb
inc
push
or
aas
cmpsl
fdivs
dec
add
and
mov
test
push
sbb
xor
sbb
in
leave
loope
push
jecxz
daa
stos
pop
pop
mov
cmpsl
adc
push
cli
xchg
dec
data16
js
cs
inc
mov
lock
nop
mov
dec
cltd
adc
in
xchg
sub
jmp
pusha
mov
in
jecxz
jmp
dec
fiaddl
int
ja
faddp
mov
imul
movsb
cmp
clc
loope
mov
or
aaa
enter
inc
sbb
js
aaa
and
jno
leave
les
mov
pusha
stos
push
ja
sub
dec
fwait
aaa
or
xorl
and
cmp
pop
out
mov
xor
gs
and
movsl
xchg
jmp
xor
pop
sub
jo
shrb
inc
xchg
adc
fdivrs
mov
inc
pop
xchg
or
fldl
aas
les
add
mov
dec
inc
cmc
jl
popf
xchg
xor
nop
dec
adc
and
test
movsl
lock
add
and
imul
leave
lea
xor
rorl
pop
mov
fiadds
movsb
fld
xchg
movl
mov
and
adc
mov
sub
mov
push
sbb
out
add
mov
daa
xchg
jp
testb
andb
or
pop
mov
aam
in
mov
subb
sti
mov
test
ret
movsl
pop
jl
xchg
rolb
andb
bound
out
loopne
mov
js
in
int
xchg
jecxz
xchg
mov
fdivl
sbb
lods
or
jg
mov
mov
xchg
inc
inc
stos
int3
in
xchg
cs
repz
mov
xor
aaa
jg
je
push
cli
fs
shll
adc
dec
push
lds
cmp
lahf
test
orb
jno
pop
sub
push
sarb
pop
inc
in
mov
xor
mov
in
or
iret
fadds
sub
jmp
xchg
rclb
sti
es
xor
push
leave
pop
sbbl
push
movsl
loope
cli
mov
sub
mov
or
or
lahf
xor
mov
stc
adc
mov
xor
push
lcall
inc
cld
fcomip
push
lock
mov
lock
xor
mov
pop
mov
sbb
inc
cmp
push
dec
xor
popf
in
mov
in
inc
inc
aaa
add
pushf
mov
imul
adc
test
cmp
jo
and
mov
ret
cmpb
fidivrl
nop
ljmp
push
sub
jo
pusha
sbb
push
jp
dec
and
stos
sarb
ljmp
push
sub
jo
pusha
sbb
push
jp
dec
and
stos
inc
bnd
loopne
adc
adcb
and
push
repnz
cmp
pusha
sbb
push
jp
push
pop
shrb
loopne
nop
ljmp
push
aad
nop
fimull
pusha
insl
pusha
loop
test
push
movsl
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
test
pop
mov
cmc
les
adc
roll
push
hlt
gs
sbb
add
xor
and
push
lds
in
les
movsb
xor
hlt
gs
into
test
inc
lds
xchg
add
lds
cwtl
add
mulb
jo
push
mov
in
shlb
addr16
out
pusha
mov
add
sub
push
sbb
add
mov
call
jno
ljmp
push
pushf
jne
imul
iret
movsb
mov
int
push
add
pop
mov
dec
jl
sub
push
pop
loopne
int
sarb
jno
push
mov
or
mov
stos
loope
sbb
stc
in
stos
dec
pop
xor
aam
dec
fisubl
push
movsb
gs
mov
mov
cmc
fld
mov
mov
adc
inc
mov
movsb
and
les
mov
hlt
pusha
daa
test
push
lds
aad
in
cmc
add
insb
and
ficoml
sbbb
jb
jo
dec
mov
mov
add
adc
inc
lds
push
stos
xor
loopne
lock
out
mov
test
pop
xchg
lods
dec
lds
enter
mov
sbb
aaa
fldl
rclb
jmp
aad
in
cmc
xchg
add
movsb
xor
hlt
gs
adc
add
xor
and
push
lds
in
cmc
xchg
add
movsb
xor
hlt
gs
adc
sar
dec
jnp
sbb
jge
pop
arpl
repnz
or
ljmp
hlt
mov
clc
mov
in
jbe
mov
popa
gs
jbe
lcall
mov
addr16
push
push
mov
inc
in
roll
aam
mov
push
jno
mov
xor
sub
out
cmc
data16
outsb
test
aaa
jb
push
dec
pusha
lcall
call
jl
mov
jo
mov
xchg
mov
or
in
dec
sub
mov
in
and
out
jns
push
movsl
sub
insl
das
push
sbb
inc
call
lahf
dec
cmp
aam
repnz
dec
adcl
pop
test
inc
je
push
cmpsb
adc
jmp
pop
gs
out
xchg
cltd
dec
outsl
and
mov
cmp
popf
adc
xchg
out
les
add
jns
ja
push
or
addl
jle
or
dec
bound
lret
js
jae
pop
push
jno
mov
jle
insb
cld
test
outsl
int
pop
clc
and
inc
call
pop
jnp
in
mov
sub
mov
mov
jnp
push
push
or
mov
rolb
push
jmp
push
loop
or
xchg
in
arpl
cli
xchg
xor
ss
imul
fldl
dec
repnz
or
hlt
jge
lret
ror
shl
inc
and
xor
imul
in
mov
jmp
data16
loop
push
mov
mov
adc
decl
dec
or
cwtl
jns
sbb
stos
sub
loopne
movsl
pop
jmp
push
xor
or
mov
push
into
inc
lcall
jne
mov
and
xor
cmp
sti
jno
jb
into
ja,pt
mov
imul
mov
scas
xchg
pop
in
jl
mov
jg
movsl
mov
loopne
cmp
and
or
insb
cwtl
iret
cmc
imull
stc
push
cmpsb
scas
pop
add
fistl
sbb
push
mov
filds
into
mov
mov
call
cmpxchg
loopne
hlt
popf
push
jp
in
xchg
das
xor
pop
movsl
jmp
add
outsb
fstpt
test
test
dec
daa
dec
and
mov
cmp
clc
and
xchg
adc
popf
mov
jnp
or
movsb
int
in
mov
dec
and
xor
cmp
jp
ja
test
dec
test
sbb
jae
fadds
dec
inc
jg
jb
addr16
pop
mov
adc
or
or
pop
jl
sub
cwtd
lret
and
mov
sub
inc
jbe
insb
dec
and
pop
daa
pop
fldln2
mov
sub
lds
push
cmp
and
sub
fistpl
mov
sub
mov
add
sub
sbb
es
sub
out
repz
aas
mov
lret
cwtl
in
insl
cmp
or
lea
push
mov
inc
scas
andb
jb
fwait
scas
iret
repz
push
cld
aam
into
dec
fisttpll
fsub
clc
imul
aaa
push
aaa
xor
mov
jbe
inc
sbbl
xchg
cltd
scas
xor
pop
add
mov
pop
jae
fsubrp
and
dec
xchg
in
outsb
mov
cmpsb
movsb
mov
mov
inc
pop
flds
inc
mov
add
aaa
lds
call
push
aam
sbb
icebp
add
mov
lret
jp
xchg
push
adc
repz
js
sbb
dec
mov
out
pop
xlat
int
jo
sbb
outsl
xchg
push
or
and
or
push
and
jg
clc
xor
push
movsl
roll
frstor
pop
dec
fucomip
in
adc
mov
bound
cmc
or
sub
sbb
in
cmp
iret
ljmp
jecxz
sub
clc
aas
push
ljmp
mov
cs
lret
add
aas
pop
mov
icebp
fs
xchg
aas
setno
stc
lods
aaa
ds
pop
sub
mov
dec
jnp
pushf
push
pop
add
dec
scas
dec
sub
push
cs
insl
xor
mov
fmuls
xchg
adc
xor
dec
xor
pop
mov
sub
or
mov
insb
ret
jne
jecxz
jecxz
jmp
in
mov
mov
mov
dec
outsl
faddl
inc
jp
test
push
adc
test
add
inc
adc
int3
cs
push
cmpsb
xchg
and
imul
dec
lcall
repnz
gs
into
std
jnp
imul
cwtl
dec
pop
mov
test
xchg
adc
popa
mov
xchg
mov
cltd
and
xchg
pop
or
xlat
outsl
ret
xchg
test
sub
mov
inc
hlt
add
cs
scas
cmp
sub
cltd
dec
cmp
out
bnd
frstor
and
adc
cwtl
cmp
popf
jbe
mov
xor
ret
mov
jbe
pop
xor
jb
call
cmp
pop
push
ficomps
fs
or
xor
jo
ret
aam
test
dec
jl
pushf
mov
sub
das
adc
pop
dec
xor
push
lods
in
cmp
mov
dec
rolb
mov
in
lahf
xchg
dec
or
lcall
jne
mov
icebp
pop
test
aas
adc
jmp
aaa
ss
ret
push
or
insb
jno
cmp
push
add
negb
mov
jbe
sbb
call
std
mov
nop
pop
xchg
pop
pop
lret
xor
insb
loopne
cmc
andl
cld
or
inc
adc
xchg
mov
in
sub
or
mov
stos
push
aam
sub
push
jne
aas
mov
je
scas
jns
push
mov
popf
sarb
sbb
jns
mov
aaa
cwtl
push
jno
push
xlat
and
push
jle
in
push
jnp
jns,pn
inc
pop
cmpb
push
pop
mov
mov
mov
adc
jns
cld
lea
xor
std
je
add
sysret
sub
or
xchg
push
add
sbb
jge
cmp
in
add
xor
xchg
push
push
dec
xor
dec
push
insl
jne
pop
xchg
inc
pusha
adc
stos
pop
loope
fistpl
addr16
mov
loop
stos
push
xchg
aas
push
lret
lods
sahf
cmp
pop
imul
mov
jcxz
jbe
cld
in
movsb
dec
je
jne
pop
push
pop
std
pop
shll
mov
push
cmp
js
dec
cltd
inc
sar
mov
in
test
mov
mov
test
add
clc
repz
adc
clc
popf
add
cld
add
cmp
dec
inc
push
movsb
leave
or
push
or
xor
mov
test
cwtl
pop
pusha
clc
sbb
pop
xchg
inc
loop
adc
add
jecxz
mov
inc
xor
adc
rclb
pop
inc
xchg
cmp
pop
cmp
cmp
into
stos
mov
adc
std
push
xor
push
jno
sub
xor
fs
cmp
jae
test
and
push
fucomp
xchg
jg
jns
test
push
dec
addr16
fs
or
jns
jge
cmpsl
inc
es
imul
call
sar
mov
mov
mov
out
into
jp
xor
push
push
les
pop
xchg
jno
mov
movsb
lods
mov
imul
xchg
mov
lret
fistl
cmp
xor
mov
xlat
sbb
in
adc
mov
shrb
das
jmp
ret
pop
xor
fwait
nop
sbb
push
das
cmc
int3
inc
sti
push
or
push
push
adc
fwait
int
cld
xchg
imul
cwtl
gs
les
xchg
nop
mov
adc
scas
xchg
jge
int
cmovle
jbe
inc
pop
cmp
cs
inc
hlt
dec
xchg
inc
lock
mov
sub
das
and
dec
jmp
es
cmp
mov
dec
cmc
outsl
mov
or
subb
and
out
add
jg
lock
and
and
xchg
jno
mov
aas
es
stc
lahf
je
data16
roll
out
mov
and
cmp
lret
testl
or
cmc
sbbb
fisubs
scas
pop
int
call
or
pop
imul
decb
jo
insl
xchg
test
xchg
rorl
test
push
mov
jmp
dec
push
clc
pop
repz
jne
stc
pop
and
scas
xchg
arpl
mov
inc
test
lock
xor
mov
movsb
pop
sbb
loopne
dec
mov
sbb
mov
stos
sbb
inc
adc
mov
inc
scas
sets
mov
pop
stc
sub
mov
mov
jp
lods
jo
lcall
lock
pop
mov
dec
pop
mov
outsb
mov
cwtl
cmpsb
dec
mov
adc
aad
insl
push
js
or
inc
dec
int3
pop
push
jl
add
add
push
mov
mov
mov
pop
test
sbb
test
icebp
punpckhdq
add
imul
ss
aad
pop
push
inc
xchg
push
leave
lods
xor
xchg
movsb
mov
mov
testb
mov
testb
cli
je
ret
jb
and
shlb
ret
and
xlat
incb
xchg
pop
aad
mov
shl
into
scas
mov
movsl
fadd
add
and
push
sub
das
jne
sub
inc
push
or
gs
sbbl
jns
lds
in
rcrl
insl
mov
or
enter
mov
stc
adc
lock
lds
xor
jnp
in
out
pusha
dec
roll
mov
xchg
pop
inc
jno
ljmp
mov
add
pop
insb
pop
arpl
iret
sbb
rcrl
ja
scas
out
jnp
mov
mov
mov
xchg
mov
pushf
out
loopne
fidivl
test
or
push
or
les
pop
pop
xor
lock
cwtl
pop
inc
popf
lcall
xor
xchg
test
arpl
mov
pop
enter
dec
cltd
push
movsl
adc
inc
mov
andl
idiv
xor
lods
sbbl
sub
loop
cmc
adc
dec
mov
aam
pop
adc
and
jno
jno
sbb
xchg
aas
lret
mov
or
inc
cmpsb
dec
cmp
mov
sahf
mov
aad
lahf
int3
jge
mov
push
jns
mov
aad
shlb
addl
mov
cmp
and
arpl
and
dec
sub
lock
movsb
jecxz
aaa
in
mov
mov
ljmp
push
call
pop
xchg
jb
push
je
push
mov
shll
insl
push
imul
daa
pop
addr16
jns
inc
mov
movsl
push
mov
shll
sbb
xchg
test
dec
pop
cmp
jbe
mov
js
dec
scas
xchg
aas
fcompl
mov
cld
fistpl
arpl
inc
adc
dec
fadds
out
outsb
mov
lods
scas
mov
xor
es
cmp
out
jp
jl
mov
ficomps
jmp
cvttps2pi
sub
adc
adc
je
int3
ljmp
mov
insl
dec
pop
mov
inc
pop
nop
lock
pop
data16
pop
jae
jne
fisttps
jno
dec
dec
les
mov
xlat
adc
inc
sub
enter
mov
push
nop
mov
and
mov
jns
test
mov
pop
mov
cmp
lock
push
testb
xlat
popf
cmp
dec
clc
add
cmp
aas
xchg
addb
dec
insb
push
ss
les
ds
pop
jecxz
gs
rcll
dec
jle
loop
gs
les
sub
lret
mov
xor
lcall
mov
nop
fmul
test
popf
repnz
nop
push
daa
adc
insb
mov
stc
ficoml
inc
addr16
sub
pop
xor
pop
or
sub
or
xor
mov
xchg
out
setb
roll
push
xchg
rcll
mov
loope,pn
mov
cmp
dec
jnp
adc
cmc
pop
push
sti
inc
loopne
jae
mov
repnz
iret
pop
dec
mov
xor
adc
xchg
fadd
mov
stos
scas
out
jne
clc
dec
fcmovnb
mov
xchg
sbb
xor
add
jns
mov
cmp
arpl
pop
pop
fisubs
pop
dec
jle
out
fdivs
sub
push
mov
mov
aad
cld
pop
dec
loop
pop
xchg
ror
fbstp
adc
mov
cld
cld
sti
jbe
push
mov
cmp
ret
add
ljmp
gs
inc
cld
cmp
pop
loopne
push
cmpsb
jmp
xchg
jecxz
fisubs
and
jns
leave
sub
imull
xchg
loopne
xor
jnp
push
adc
cmp
std
pcmpgtw
mov
cmp
sbb
push
aad
pop
xorb
dec
out
test
dec
and
cli
push
popf
roll
push
imul
test
sub
sbb
les
out
jnp
add
rcll
jnp
in
cmpsb
and
aam
sbb
daa
mov
sub
add
fnstenv
jnp
jnp
popa
addr16
add
pop
stos
mov
fadds
push
lods
sub
in
dec
repz
xlat
and
mov
jge
jle
xor
or
cmc
cwtl
scas
adc
xchg
pop
jbe
adc
repz
sbb
cmp
fisubrl
outsb
sbb
pop
sbb
adc
lret
cmp
cmp
mov
push
cmp
lea
cltd
out
or
js
cmp
adc
push
push
je
testb
mov
push
loope
out
shr
push
adc
add
mov
xor
xchg
and
inc
roll
in
push
mov
mov
addr16
and
mov
pushf
jecxz
popl
add
outsb
xchg
in
cmp
jbe
lods
insb
mov
icebp
dec
shlb
out
and
jne
ss
cli
fidivrl
lret
roll
lahf
xor
daa
pop
sbbb
in
and
sub
arpl
mov
add
pop
lret
dec
pop
dec
sbb
pop
rcrl
mov
inc
fcoms
arpl
pop
mov
pop
sbb
daa
cmpsl
cmp
aam
cmp
cmp
movsb
sub
sbb
jmp
mov
xchg
mov
inc
mov
mov
out
inc
pop
add
hlt
fisubl
outsb
aaa
pop
add
or
je
jg
sahf
mov
ja
inc
lock
jmp
push
push
mov
fs
mov
or
or
push
leave
or
push
mov
jmp
cmpsl
mov
fildll
rorb
jle
cmp
xor
xchg
orb
push
pop
cmp
jbe
jle
sti
cmp
mov
stos
clc
xchg
into
mov
out
xchg
xor
loope
xchg
stc
fidivrl
pop
stos
hlt
mov
aas
push
movb
xor
iret
xchg
jl
aad
jle
mov
loope
jge
jo
insb
jno
and
out
jb
cmpsl
jno
mov
aam
lahf
test
jmp
mov
loopne
shrl
cmp
mov
daa
lret
cmpb
jne
call
adc
cmp
addb
jp
adc
cltd
mov
inc
sti
test
and
sahf
cmp
in
addb
jo
out
test
add
pop
jbe
inc
in
inc
repnz
and
or
in
push
dec
sub
sub
call
mov
js
in
fstl
aad
dec
cwtl
cmp
into
lods
not
outsl
jb
ror
mov
sub
sbb
aaa
jns
imull
mov
mov
mov
mov
ror
shrl
and
jp
pop
adcb
push
adcb
push
inc
inc
aam
mov
cs
mov
aas
mov
add
movsl
dec
jnp
push
rcrb
daa
fstpt
cmp
iret
xor
push
jo
xor
xchg
clc
in
leave
les
pop
jne
xchg
fildl
test
test
push
lea
repz
test
sub
test
xor
rolb
xor
inc
mov
sbb
call
ljmp
add
jge
sub
out
in
jg
inc
in
mov
out
xchg
inc
aas
fstl
adc
mov
jne
mov
lock
adc
mov
and
push
cmp
jp
push
fldcw
cmp
cmp
je
jae
fsubr
push
jno
fwait
cmp
xchg
xor
rorb
shll
jmp
imul
in
clc
sahf
or
push
fsubl
mov
test
jmp
sbb
push
push
lret
mov
mov
push
xorl
fwait
xchg
divb
imul
and
sti
cwtl
cltd
or
roll
out
jno
cwtl
and
pop
test
mov
sub
fidivrl
shll
sbb
inc
add
mov
xor
cmpsb
in
sbb
popl
or
cmpsb
scas
loope
pop
in
ret
arpl
inc
ret
sub
cmpsb
mov
mov
sbb
lcall
push
jbe
jmp
dec
js
stos
addb
add
mov
pusha
mov
adc
xlat
xor
adc
mov
fistpll
fistpl
cmp
sbb
or
aad
xchg
push
jge
pop
test
test
or
push
scas
shll
data16
test
xchg
sbb
and
dec
rcll
popf
jmp
stos
in
test
gs
dec
adc
lods
and
stos
in
bnd
adc
mov
adc
ud0
xchg
xchg
adc
sub
out
adc
fcmovbe
std
cmp
xchg
ja
hlt
inc
jle
xchg
fsubs
rol
jg
and
loope
cwtl
add
xchg
rcrl
dec
fstps
adc
mov
test
mov
dec
std
pop
aas
mov
or
in
mov
mov
popf
cmp
pop
jp
jl
xchg
sbb
fdivrl
lods
add
inc
cli
mov
stos
cli
xchg
in
fcom
cwtl
or
adc
or
push
in
cwtl
iret
cmp
dec
lock
jb
ja
lods
out
pusha
push
dec
lods
addl
mov
dec
out
scas
xchg
in
hlt
lds
loope
jnp
out
jae
sarb
sub
and
lea
dec
fldenv
jae
int3
mov
insb
sbb
dec
and
leave
push
pop
loope
sub
sbb
je
sub
push
pop
sti
cmp
or
xchg
jb
jle
test
adc
clc
xorb
fldl
aam
movsb
push
popf
push
shll
scas
or
adc
adc
cltd
outsb
idiv
add
popf
cs
mov
adc
data16
xlat
cmp
or
push
fnstsw
ss
adc
mov
sbb
sbb
mov
push
xchg
mov
pop
cmpb
jb
pushf
and
imul
mov
scas
mov
xchg
fs
dec
cmc
daa
xchg
repnz
add
push
fisttpll
sbb
fisttps
popl
xor
movsb
dec
xor
sbb
jp
test
ret
arpl
xor
inc
or
mov
sahf
lcall
out
fidivrs
or
repz
mov
mov
hlt
int3
push
mov
jmp
stc
jecxz
and
mov
mov
mov
add
xor
in
enter
dec
jne
test
cwtl
adc
or
ja
inc
fstl
jbe
imul
pop
fdivr
repnz
jp
cltd
in
push
jo
inc
push
hlt
xor
push
divl
sbb
sbb
jl
sbbb
pop
sti
sbb
imul
push
ret
outsl
jecxz
aaa
sbbl
and
lret
or
test
lea
adc
jp
pop
cmp
mov
sub
inc
bound
inc
pushf
lret
add
xor
inc
pop
push
cwtl
push
and
cmp
dec
adc
clc
pusha
pop
jbe
jns
aaa
mov
in
dec
mov
shll
lods
sti
and
jne
and
xchg
pusha
cmp
sub
into
mov
mov
pop
xor
and
jmp
add
cmpsl
and
mov
xor
out
pop
pop
dec
outsl
test
mov
gs
fnsave
xchg
fldenv
in
sbb
stos
inc
fsubl
xchg
arpl
cmp
call
mov
ss
xchg
sbb
lds
in
cmc
xchg
add
movsb
xor
hlt
gs
adc
add
xor
and
push
lds
in
cmc
xchg
add
movsb
xor
hlt
gs
adc
pop
xchg
and
and
push
lds
je
gs
nop
add
mov
push
lock
or
sub
push
lds
in
cmc
xchg
add
movsb
inc
mov
lcall
adc
inc
mov
mov
mov
cmp
dec
loop
ret
imul
cltd
adc
arpl
push
jmp
mov
cmp
dec
jecxz
shrl
jns
mov
cltd
adc
arpl
push
jmp
mov
cmp
or
jns
mov
in
pop
int
push
clc
cmovae
test
jo
xor
shrb
dec
ja
test
dec
mov
subl
es
ss
mov
jns
sub
cmp
mov
fldt
test
pop
aad
sahf
jmp
js
leave
repz
sub
stc
dec
dec
and
xchg
xchg
jbe
cwtl
xor
dec
leave
mov
inc
test
xchg
xlat
imul
sbb
pop
into
adc
gs
jg
inc
fwait
leave
imul
push
inc
scas
fisttpl
ret
aad
or
push
and
test
int3
xchg
add
jl
divb
out
push
cmp
jl
jns
mov
cltd
adc
arpl
push
jmp
mov
cmp
dec
jecxz
shrl
aas
inc
in
dec
jg
dec
pushl
cmpsb
push
cwtl
adc
es
adc
inc
out
xchg
and
enter
test
pop
notl
cmp
loope
into
jne
jg
push
mov
sbb
pop
inc
int
movsl
arpl
push
jmp
mov
cmp
dec
jecxz
shrl
jns
mov
cltd
adc
arpl
push
jmp
mov
cmp
dec
jecxz
shrl
jns
mov
mov
or
adc
int3
and
cltd
mov
mov
ficomps
pop
mov
sbbb
xchg
cmp
das
mov
jecxz
gs
das
fisttpll
leave
jbe
mov
mov
dec
dec
push
pop
mov
out
adc
xor
int
pusha
jecxz
dec
cltd
adc
loop
out
and
insb
push
jbe
cltd
or
in
imul
sub
jg
fsubrs
in
mov
inc
mov
jno
add
add
mov
add
std
push
jmp
mov
test
sub
jae
dec
movsl
out
or
jnp
sub
adc
mov
pop
xor
inc
loop
stc
gs
nop
mov
rcrl
push
test
mov
push
and
jne
inc
jl
sbb
fimull
inc
iret
mov
sub
cmp
into
or
fcom
jnp
enter
cld
rcl
scas
int
mov
add
clc
lcall
arpl
jno
push
dec
mov
and
push
repnz
adc
jbe
fmul
fidivl
inc
push
outsl
sub
mov
arpl
push
test
test
cmp
jne
prefetcht0
decb
mov
sub
aas
test
pushf
ret
and
cmp
xor
loopne
jne
adc
xor
cs
icebp
ljmp
sub
pop
enter
aam
fidivs
test
sbb
fdivs
addr16
lahf
mov
adc
daa
mov
inc
mov
mov
out
test
xchg
xchg
mov
add
cs
fstps
sbb
cmp
adc
mov
int3
xchg
dec
mov
add
sbb
sub
test
cmpb
push
dec
inc
movsl
adcb
int
sbb
ljmp
xchg
xchg
mov
add
scas
or
xchg
popa
mov
les
dec
leave
cmp
cmp
out
roll
test
push
imul
pop
and
insl
xlat
call
outsb
jle
adc
jle
int3
popf
nop
dec
mov
and
adc
add
or
push
and
gs
inc
mov
insl
push
pusha
cld
pop
iret
xor
xor
push
aad
ret
mov
push
inc
stc
addl
stos
mov
xor
jp
scas
mov
pop
inc
sbb
inc
xchg
mov
enter
cmp
test
or
add
jp
ret
leave
xchg
data16
push
jg
mov
out
pop
sub
ret
pop
dec
loope
inc
loopne
jl
test
outsb
sub
fimuls
adc
scas
adc
into
jns
incb
and
sub
imul
and
insl
stos
dec
mov
mov
fmull
jl
bound
mulb
out
inc
jmp
ret
adc
ss
leave
cli
inc
add
fs
jnp
and
outsb
pop
adc
ret
xlat
mov
dec
std
aam
sti
or
mov
std
mull
cmp
cmp
dec
sbb
push
xchg
enter
sbb
and
sub
mov
sbb
sbb
addb
imul
outsl
add
dec
pop
andl
jecxz
xor
repz
js
xchg
inc
pop
addr16
push
mov
ret
scas
movsb
mov
push
into
cmpsb
mov
rcll
lock
and
cli
and
imul
imul
bound
fs
inc
scas
mov
cmp
sub
mul
pop
inc
mov
and
adc
dec
call
bound
jp
inc
and
enter
ret
cmpsl
inc
das
dec
in
dec
push
mov
sbb
dec
popa
inc
mov
pop
push
lock
lcall
shr
pop
sub
dec
pop
dec
push
popa
sbb
jae
dec
jmp
mov
adc
in
out
inc
leave
in
and
or
ds
add
inc
imul
sub
xchg
sub
inc
sub
jl
xor
adcb
pop
cmp
mov
out
mov
out
dec
push
pusha
sarl
xor
dec
dec
and
loop
inc
xchg
pop
cwtl
sbb
jge
dec
fisttpll
xchg
inc
sub
std
stos
outsl
arpl
xchg
pusha
xor
sbb
xchg
xchg
lret
movsb
scas
sub
pop
movsl
mov
xchg
pop
scas
adc
fs
cmpsb
nop
aaa
loope
cmpsl
mov
movsb
cwtl
jg
or
push
mov
es
cmp
inc
arpl
add
lods
xor
pop
mov
movsl
clc
fs
sbb
mov
add
mov
xor
aaa
lods
aam
popf
xchg
xlat
repz
and
popa
and
aad
push
mov
push
sub
mov
xchg
lds
lahf
out
mov
pop
xor
rcrl
jo
jnp
mov
pop
ja
sbb
mov
sbb
ret
aam
mov
or
sti
cmc
and
push
add
sti
and
cltd
sub
fwait
mov
repz
dec
sbb
mov
mov
jmp
add
lods
stos
pop
push
add
sbb
mov
fs
ds
xchg
into
fcomi
xchg
imul
jg
rol
in
ret
xor
mov
test
outsl
fwait
in
pop
cld
mov
cmc
jle
shll
mov
mov
in
jne
xchg
sbb
mov
int3
inc
rol
mov
mov
inc
pusha
test
cld
orl
dec
pop
aaa
sbb
push
fistl
dec
mov
bound
inc
adc
xchg
in
cmpsb
dec
cmpsb
repz
sbb
les
bound
insb
lds
ljmp
inc
je
repnz
jno
sahf
sub
mov
addr16
mov
mov
mov
mov
lods
dec
sub
xchg
mov
rcrb
es
pop
cmc
out
pusha
into
xor
dec
sti
cmp
popa
xchg
xchg
mov
add
mov
scas
add
int3
pop
lea
cmc
adc
adc
inc
insb
adc
jo
sub
add
pushf
outsl
aad
mov
sub
mov
pop
out
insb
lret
pushf
mov
and
adc
mov
sbb
adc
shr
mov
je
test
sbb
cltd
les
sub
xchg
add
lahf
into
into
hlt
jae
mov
hlt
js
int
pop
pop
sbb
setp
and
test
js
jnp
dec
or
jl
xchg
dec
cmpsb
int3
ds
mov
ljmp
adc
fsubrl
mov
mov
mov
mov
ficomps
aam
push
and
cmp
out
in
mov
xchg
sbb
fcompl
lcall
xchg
int3
leave
js
cmp
rcrl
mov
cmpsb
push
clc
mov
adc
jle
sub
add
test
scas
ficoml
into
pop
pop
imulb
dec
xchg
jecxz
insl
je
movsb
mov
sbb
mov
fstpt
mov
popa
addl
lcall
int
and
ret
mov
adc
movsb
push
dec
add
mov
push
mov
adc
out
mov
imul
mov
jecxz
lods
ds
clc
ss
jnp
stos
mov
mov
negb
mov
cmp
sti
sub
cltd
out
aad
stos
adc
sub
push
rolb
add
loop
xchg
jo
or
fisubrs
enter
cmp
add
jbe
pusha
dec
cmp
mov
sbbl
mov
adc
jle
sbb
subl
out
xchg
fcomi
ss
inc
test
cmpsl
push
imul
sbb
leave
xchg
outsb
daa
and
jmp
scas
cli
and
mov
test
into
aas
push
or
mov
sbb
push
fcmovb
jno
in
imulb
scas
dec
test
sbb
xchg
xor
cmp
mov
scas
sub
mov
ja
pop
jbe
jecxz
repz
sbb
or
scas
dec
adc
lahf
ror
and
push
pop
cs
cs
iret
fdivl
shl
push
dec
mov
and
mov
pop
outsb
in
imul
lret
fxch
scas
lods
int3
xor
cltd
fwait
repnz
lods
in
aas
or
pop
xchg
es
cmpb
pop
cmp
fimull
xchg
push
cmpsb
xchg
ret
dec
js
sti
and
ucomiss
in
mov
testb
popaw
adc
and
stc
sub
jmp
out
mov
xor
and
sub
push
stc
hlt
lods
repnz
scas
sbb
inc
xor
xlat
xor
imul
in
mov
inc
push
push
mov
lahf
push
call
aaa
and
jnp
popa
jb
push
push
xlat
cmp
fdivr
aam
and
cmpsl
inc
add
int
mov
mov
mov
lods
mov
dec
xlat
outsb
or
test
sub
dec
out
pop
push
push
and
push
mov
pinsrw
xor
std
pop
andl
xchg
add
sbb
add
and
aas
xor
jp
add
pop
dec
subl
jg
mov
js
arpl
popf
adc
push
pop
xor
je
push
pop
push
jb
xor
and
pop
xchg
nop
leave
bnd
in
cli
push
mov
test
pop
mov
roll
int3
sahf
pop
sbb
jecxz
insb
xchg
jae
js
push
jecxz
adc
pop
jl
fsubl
mov
xchg
pop
pop
cmp
lahf
xor
lock
in
movb
sti
loope
stc
fs
or
cmp
fildll
jo
out
leave
push
pusha
enter
cmc
nop
jp
mov
mov
xor
lods
fs
and
repz
xchg
add
shll
test
push
rclb
or
ficomps
or
inc
xlat
std
push
dec
insl
mov
adcl
outsl
adc
dec
add
ficomps
xchg
rorb
jp
mov
xor
pushf
push
out
dec
pop
jnp
mov
jnp
adc
clc
xchg
bound
xchg
xchg
dec
dec
jp
cld
ds
sbbb
xor
mov
jmp
loope
stc
inc
imul
mov
mov
pop
push
jno
imul
add
sub
mov
je
adc
icebp
pop
int
sti
test
push
imul
add
jne
int
inc
jmp
in
sub
out
stos
sti
dec
or
push
jb
inc
adc
cmp
or
popa
movsb
shll
int3
data16
mov
mov
mov
vpmaxub
frstor
or
jns,pn
mov
push
sub
lahf
das
add
cs
dec
pop
mov
lea
mov
rcr
stos
push
call
mov
mov
call
rcrb
clc
push
int
jbe
int
pop
popf
xchg
jg
aaa
adc
into
movsb
enter
shll
loope
popf
or
and
xor
push
or
insl
repnz
arpl
xor
into
pop
insb
jb
arpl
mov
pusha
ds
xchg
arpl
daa
mov
fistpl
adc
stos
mov
pop
loope
test
in
lds
fisubl
gs
jle
sahf
roll
cld
mov
inc
push
movb
jge
out
cmp
mov
push
cmp
outsb
push
jnp
mov
adc
inc
jmp
rorl
xchg
int
mov
xor
cltd
movsb
std
inc
test
adc
xchg
rolb
mov
add
hlt
nop
add
and
js
cmp
pop
les
mov
jl
insb
push
xchg
adc
lret
push
mov
jnp
xchg
mov
inc
xor
lods
sbb
sub
enter
arpl
mov
ret
fcmovb
mov
sub
lds
aas
dec
pusha
mov
or
and
jno
push
sarb
arpl
popf
xor
ljmp
test
and
rcrl
cmp
adc
stos
addr16
sub
pop
mov
mov
jo
mov
inc
pushf
jmp
ds
das
and
or
add
enter
mov
xchg
clc
in
xor
jmp
mov
lahf
adc
pusha
mov
and
insb
lock
pusha
into
aam
xchg
mov
roll
in
lods
fstps
data16
xchg
imul
lahf
mov
fwait
ret
inc
dec
mov
ret
sbb
imul
push
int3
stos
int3
push
addr16
rcrb
ss
xor
imul
add
scas
cmc
xchg
mov
scas
dec
leave
in
or
test
add
xchg
adc
xor
or
jno
push
shl
arpl
push
nop
or
xchg
xor
sbb
xchg
leave
pushf
dec
loopne
mov
xchg
pusha
aaa
cwtl
imul
aaa
daa
outsl
push
mov
pop
movsb
jae
shlb
mov
sub
mov
cwtl
stc
and
out
xchg
adcb
in
popf
push
addr16
movsl
sahf
inc
fadds
and
inc
orl
mov
push
lcall
ss
gs
mov
idivb
ljmp
in
aaa
inc
inc
pop
jl
adcl
clc
lret
xor
mov
icebp
daa
mov
fisttpll
xchg
add
fistpl
mov
adc
cmpsb
and
or
imul
inc
sub
loopne
xlat
push
js
push
jecxz
cmp
out
add
sub
sbb
pusha
out
or
idivb
dec
sub
pop
pop
cmpsl
dec
cmp
mov
cmp
mov
adc
loop
sub
fstps
call
movsl
fistpl
insl
iret
and
pusha
or
hlt
cmp
sub
test
mov
cmpsl
leave
fcmovu
es
pop
push
or
insl
sbb
fistpll
popf
fwait
mov
fcmovb
enter
mov
push
pcmpgtd
or
push
sbb
mov
jno
ret
ljmp
mov
inc
xchg
loop
pop
loope
hlt
mov
cli
or
pusha
mov
movsb
mov
sbb
jl
mov
lret
mov
sub
xchg
pop
ds
jnp
jmp
mov
or
jnp
sbb
out
cmpl
ret
cmp
lahf
inc
mov
dec
hlt
in
adc
pop
mov
dec
xor
mov
push
in
inc
out
rolb
push
push
outsl
mov
inc
xor
mov
sub
adc
out
and
cwtd
shlb
test
mov
imulb
pop
pop
rolb
lods
mov
xor
and
or
lods
mov
cmp
fsubr
sub
add
dec
lods
jle
and
sbb
inc
mov
dec
das
xchg
imul
jp
and
shl
dec
lahf
lea
mov
push
jno
push
insb
mov
jbe
sbb
push
popa
sbb
fldenv
xlat
gs
ljmp
jecxz
xchg
mov
repnz
mov
aaa
test
popa
jle
push
nop
mov
inc
cltd
fnstsw
jecxz
add
add
rcrl
xorl
rcr
hlt
add
shr
loope
div
mov
fcoml
fdivr
adcb
cs
aam
dec
je
in
push
repz
hlt
xor
sbbb
inc
fistpl
xchg
sub
add
add
mov
loope
mov
push
inc
cmp
movsb
adc
aas
mov
cwtl
jecxz
xor
test
js
popf
cmp
shlb
or
and
dec
push
fcoms
sub
sub
sub
xor
or
dec
fmulp
mov
outsl
fildll
xchg
movb
pop
sub
test
fmull
sub
sbb
jb
or
add
arpl
scas
sub
cld
add
aaa
or
inc
lock
jne
or
test
stos
jne
shl
or
adc
inc
shlb
xchg
cltd
pop
aam
jmp
push
mov
rcll
fidivs
adc
jg
lds
aas
mov
insb
in
add
lods
rclb
sti
xlat
jl
push
or
aad
mov
lock
push
or
mov
mov
cmp
addr16
pop
cmp
inc
push
jp
loop
pop
scas
mov
push
jno
inc
sahf
xchg
js
sbb
out
ljmp
sti
mov
iret
imul
jne
sub
inc
ljmp
std
sbb
push
mov
fildl
scas
jnp
out
jmp
push
cmp
pop
xor
cs
or
stos
pop
mov
test
sbb
in
sbb
fdivs
sbb
inc
jb
mov
mov
mov
xchg
adc
je
dec
mov
pushf
push
cwtl
adc
rcl
mov
sar
xchg
aaa
sub
xchg
push
xchg
enter
inc
pushf
decb
pop
call
cmpsl
mov
add
inc
or
lret
ljmp
lock
in
test
enter
rcrb
enter
push
mov
xchg
outsb
add
add
addl
fwait
jg
je
pop
jns
test
push
mov
shrb
push
inc
or
loope
cs
and
mov
adc
or
loope
rclb
mov
std
inc
imul
icebp
ja
insb
icebp
ret
mov
je
jl
add
push
jle
scas
cltd
inc
xchg
movsb
xor
sub
pop
mov
sub
and
adcl
inc
aam
test
jge
sbb
xor
out
es
push
add
cwtl
lods
add
inc
push
ret
movsl
je
les
out
fimuls
xchg
push
xchg
sub
adc
cltd
test
int
pop
pop
xchg
pop
loopne
xlat
cmpsb
call
jo
andl
xlat
add
dec
int
jl
ds
jbe
inc
int3
cmpsb
repz
cmp
loopne
fisubrs
or
or
andl
mov
mov
jp
cmpsl
into
orb
leave
les
xchg
add
lods
shll
add
dec
call
rcl
jle
cld
ja
daa
gs
add
inc
lahf
das
ja
scas
insl
jmp
out
mov
dec
mov
and
pop
push
jmp
repnz
fwait
jne
movsb
jb
rcl
cmp
lahf
into
jae
mov
push
icebp
insl
xor
lret
or
js
aaa
add
push
das
aaa
lahf
loope
mov
or
xchg
jbe
insl
xor
dec
and
mov
adc
mov
cmp
inc
jno
mov
shrl
int3
cmp
add
pop
xlat
in
lods
popf
fnstsw
jbe
fistpll
std
pop
enter
xchg
add
dec
xchg
cwtl
sbb
adc
movsl
sub
lahf
repnz
lock
xchg
push
adc
shrb
dec
push
shr
je
sub
inc
pop
icebp
lea
push
ljmp
cs
jmp
add
movsb
bound
lahf
adc
dec
clc
adc
jo
cmp
stc
ja
mov
lret
outsb
mov
sbb
sbb
push
stc
sbb
xchg
push
sahf
add
xchg
insl
mov
mov
jecxz
dec
das
clc
and
push
mov
out
out
repnz
push
lods
jge
imul
push
out
adc
imul
adc
shrb
push
push
pop
xor
leave
mov
sub
and
push
inc
or
ret
pusha
in
repz
lahf
insb
lock
fcmovnb
hlt
xrelease
icebp
xchg
pusha
jne
call
imul
pusha
ficoml
movsb
inc
fs
sub
in
pop
call
jp
xor
ja
data16
pop
jbe
dec
clc
xchg
jmp
scas
das
inc
popf
mov
xor
loope
inc
cmpsl
sbb
insb
mov
xor
jl
push
pusha
and
in
inc
loopne
jbe
int
clc
sar
nop
jg
hlt
push
in
out
dec
add
idivb
gs
or
in
es
scas
mov
sahf
daa
cmp
add
lahf
push
sbbl
call
push
hlt
fisubrl
xchg
aas
xchg
std
jle
xlat
divb
push
or
stos
mov
add
mov
sbb
xchg
sahf
mov
das
sub
mov
mov
or
mov
and
lock
pop
push
xor
lds
cs
lahf
mov
pushf
sbb
loope
and
pusha
push
or
push
jle
or
mov
mov
add
hlt
jbe
pop
movsl
and
mov
in
add
jmp
inc
popa
mov
imul
push
pop
inc
data16
mov
pop
mov
lds
insl
clc
outsb
scas
jnp
insb
dec
or
and
in
sub
test
scas
dec
pop
jl
add
cmpsl
jb
call
test
mov
push
jmp
mov
cmp
dec
jecxz
shrl
jns
mov
cltd
adc
arpl
push
jmp
mov
cmp
dec
jecxz
shrl
jns
lea
cltd
adc
arpl
push
call
mov
cmp
dec
jecxz
shrl
jns
mov
cltd
adc
arpl
imul
cmp
orl
imul
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
jae
arpl
xor
insl
pop
jl
and
mov
cmp
std
mov
sub
adc
insl
xor
popf
rcrl
jecxz
lock
push
in
mov
mov
xor
or
jne
jge
xchg
xor
jecxz
shlb
mov
sub
cld
pop
fisubrl
dec
and
in
lds
mov
mov
loop
push
sti
sbbl
or
sub
inc
jecxz
push
int
in
mov
out
repnz
loope
fisubrs
pop
mov
add
inc
mov
add
andl
in
dec
std
mov
in
sbb
xor
imul
pushf
cmp
adc
xor
fnstsw
std
leave
pop
imul
mov
inc
jmp
arpl
ret
lods
mov
jecxz
sti
fisttpll
adc
std
mov
mov
pop
loop
or
jb
adc
shl
in
repz
mov
in
dec
std
mov
push
add
sub
adc
insl
sub
lret
test
mov
movsb
cli
aad
lds
ss
dec
jb
bound
inc
cmp
pop
jge
lea
mov
into
bound
jl
inc
add
and
xor
cs
into
stos
clc
mov
int
mov
fistps
es
adc
add
xor
rcrl
jecxz
xchg
fldl
or
jae
arpl
pop
add
jge
rcrl
jecxz
xchg
fldl
or
push
dec
jo
cs
mov
mov
sarl
addr16
xchg
iret
xchg
dec
int3
test
jb
sub
enter
sti
std
pushf
imul
in
fs
pop
lea
clc
insl
xchg
test
aam
aam
cwtl
inc
mov
repz
roll
xchg
out
subl
push
in
mov
out
lods
cwtl
aam
in
sub
cmp
cmp
jp
fdivl
mov
loopne
shl
stos
sbb
in
inc
out
push
cmp
dec
sbb
dec
sub
xchg
xor
jg
sbb
pop
adc
icebp
shl
fidivl
scas
pushf
iret
inc
aas
addr16
xor
sub
dec
sbb
mov
es
mov
mov
repz
pop
fsts
cmp
nop
sbb
sbb
jno
ret
pushf
mov
enter
sbb
push
cmpl
sbb
enter
sbb
push
pop
jo
jbe
bound
cmp
mov
int3
and
cs
sub
push
bnd
cwtl
outsb
mov
leave
mov
gs
sub
jns
mov
cmp
leave
dec
sbb
xor
call
mov
hlt
hlt
adc
jo
push
mov
fdivr
mov
or
sarl
xchg
or
shll
pop
cli
int3
rorl
jae
cmc
outsb
sbb
insb
mov
mov
cmpsl
aaa
outsb
or
sub
divl
sarl
xchg
cmpsl
xchg
mov
rep
jb
mov
std
add
dec
jmp
jmp
sub
dec
pop
andnps
insl
or
sbbb
shrl
mov
test
popa
repz
adc
cmp
cmc
loop
jnp
test
xchg
mov
push
adc
ja
ret
or
adc
dec
test
and
jb
es
mov
cmp
in
sub
arpl
sti
xchg
out
stos
and
xchg
lock
jb
insb
mov
jb
or
pushf
out
mov
xchg
inc
push
jne
lahf
sahf
das
jmp
out
fisubl
or
inc
adc
cmp
sub
add
mov
in
out
adc
mov
pop
mov
loop
add
or
fstpl
in
sub
pop
cmpsb
mov
jmp
push
cmc
lret
sub
orl
fimull
xchg
divl
out
imul
cs
adcl
pop
fucomp
push
inc
lcall
pop
bound
xchg
int
cmp
push
or
sbb
dec
and
and
mov
loope
dec
test
pop
loopne
mov
sti
jecxz
ret
sar
pop
repnz
cmpsl
dec
push
push
ret
sbb
add
scas
movsl
cmp
out
out
sub
or
cmpl
movhlps
xchg
adc
scas
pop
movsl
call
stos
out
cld
clc
cltd
fwait
xchg
mov
push
pushf
xchg
xchg
fists
dec
mov
sbbl
movsb
sub
out
sti
pop
cmpl
iret
mov
mov
pop
fisubrl
inc
jo
js
pop
mov
xor
sub
mov
aam
pop
or
xchg
cltd
rcrl
loope
jo
mov
sbb
repz
je
sbb
xor
mov
cmpsl
mov
icebp
xchg
jb
add
fisubl
stos
fidivrl
into
lcall
and
mov
enter
xchg
jo
orl
pop
shll
push
mov
push
mov
adcb
dec
sbb
or
dec
adc
pop
insb
not
daa
jne
or
xor
scas
xorb
popf
adc
cmp
in
jp
lea
pusha
rol
test
jns
push
push
dec
into
cmp
xchg
push
test
sbb
add
sbb
mov
mov
sub
mov
sbb
jns
insb
sbb
push
inc
aaa
fwait
pop
jle
mov
lret
inc
xchg
arpl
jbe
mov
dec
mov
sub
repz
fsubrl
cmp
dec
jne
add
movb
jns
std
and
rolb
sbb
push
imul
push
lahf
mov
jg
adc
int
jl
cli
pushf
movsb
push
pop
add
jns
stos
lcall
aad
inc
mov
enter
test
sub
push
push
outsl
cmpsb
push
mov
xchg
ljmp
push
daa
cmc
and
push
lea
xor
add
add
add
aaa
cmp
push
movsl
cld
sbb
add
xor
or
lods
aam
inc
push
iret
adc
lcall
jecxz
stos
rol
adc
sbb
mov
aas
jb
push
aaa
adc
bound
mov
lock
decb
jno
push
cltd
lods
push
mov
sub
xor
mov
ja
hlt
test
mov
je
jg
and
aaa
insb
in
testl
jp
out
cltd
pop
outsb
cmc
jnp
test
outsb
xchg
fwait
in
mov
jp
and
cmp
xchg
in
pop
pop
push
jl,pn
call
lret
lods
sub
xor
dec
dec
cmp
hlt
nop
cltd
cmp
inc
dec
cmp
daa
xchg
arpl
bound
out
test
xchg
or
mov
jne
ljmp
ret
xchg
inc
cmpsb
or
scas
popf
jp
cmpb
imulb
fwait
push
gs
cli
mov
sbb
mov
subb
add
mov
fs
pop
push
sar
adc
mov
test
sub
xchg
inc
lahf
cmp
dec
jne
push
jne
jae
push
data16
pop
in
enter
mov
stc
imul
adc
out
and
ret
push
mov
dec
cli
int3
dec
lods
mov
push
cmpsb
fisubrs
sti
cli
mov
repz
lock
in
jbe
sbb
in
outsl
mov
add
pushf
xchg
and
das
fistl
int3
dec
rcll
aad
sarb
fwait
std
pop
fucomip
fmuls
js
mov
jecxz
xchg
ss
mov
lret
movsb
lea
psubsb
pop
sub
pop
lret
test
jge
sub
push
dec
sahf
sbb
and
aam
cli
addr16
cli
fmull
in
cld
push
add
in
and
outsl
mov
mov
xor
mov
ds
enter
and
jo
jbe
test
pop
or
insl
pop
xchg
mov
pop
dec
insb
xor
dec
pop
lods
notb
adc
and
out
into
mov
adc
push
sbb
sbb
pop
testl
ljmp
int3
add
pusha
test
mov
icebp
dec
in
fs
fs
sbbb
insb
stc
out
ret
pop
insl
je
scas
jmp
mov
xchg
sbb
lods
xlat
add
fimuls
fdiv
sub
fcompl
push
jno
add
fsubrl
ljmp
mov
aaa
cmp
out
sub
pop
out
jecxz
scas
xchg
es
inc
mov
jmp
sbb
ds
leave
dec
in
lret
cmpsb
clc
mov
sbb
push
pusha
rcll
or
enter
fistl
inc
jns
or
xor
add
sub
sti
lahf
out
arpl
mov
dec
fistpll
mov
enter
je
inc
push
inc
mov
out
lock
push
mov
test
cmpsl
stos
mov
adc
loop
and
mov
inc
leave
punpckhwd
icebp
xchg
out
std
mov
dec
out
seta
adc
outsb
dec
push
sbb
pop
xchg
mov
js
mov
out
push
sub
add
jl
add
cld
push
mov
jl
jbe
xor
push
cmpsb
mov
and
pushf
xchg
and
lahf
in
cmpsl
xor
outsl
js
jge
dec
insb
mov
jp
and
sub
fcompl
cs
idivb
jno
and
push
aad
or
mov
call
dec
and
pusha
jmp
ja
mov
push
addl
and
or
cmp
nopl
sahf
nop
popa
dec
mov
enter
sqrtps
test
or
out
mov
std
stos
movsb
mov
movsb
call
imul
aad
mov
lret
gs
movsb
add
mov
jbe
mov
imul
fsubl
lods
pop
push
das
pop
and
pop
shrb
aam
xor
mov
aaa
cmpb
popf
mov
loope
pop
fcompl
nop
adc
fadds
fnstcw
mov
xor
cmc
sbb
sub
inc
cmovs
loopne
ldmxcsr
fnstsw
dec
jg
clc
bound
ss
jno
into
out
mov
loop
gs
enter
imul
lahf
push
cmpb
dec
repz
mov
mov
inc
dec
negl
xor
mov
pmaxub
xchg
loopne
jl
pop
cwtl
mov
cld
pop
xchg
xor
std
sub
fiadds
jo
cld
in
sub
lret
int3
push
sub
cmp
int3
lret
cmp
aaa
xchg
and
lret
xor
sub
test
inc
lods
hlt
mov
dec
shl
outsl
ret
mov
cs
sbb
aas
and
scas
jno
lret
dec
int
xor
paddsw
mov
loope
mov
sbb
cmpsb
pop
loop
shrb
bswap
cwtl
fmul
loope
adc
outsb
imul
sub
popf
pop
mov
lret
cmp
inc
sar
xlat
test
mov
push
popa
inc
mov
adc
cmc
lahf
sub
xchg
dec
ficoml
xchg
push
ljmp
cmp
mov
mov
loopne
xor
jns
lds
xlat
stos
rorb
aad
or
inc
and
js
mov
lods
or
fcoml
mov
pushf
icebp
push
push
sub
xchg
lcall
sub
cwtl
int3
nop
push
xor
je
push
jnp
jl
ret
js
stos
pop
pop
sub
hlt
ljmp
jmp
lcall
ljmp
or
cmp
adc
pop
adc
and
mov
gs
pusha
outsl
push
iret
sub
rolb
lods
push
inc
push
inc
cmpl
jne
rcll
out
fisubl
xor
mov
push
movsb
adc
mov
dec
icebp
aas
jecxz
sub
lods
call
cmp
mov
sbb
mov
sarl
add
cli
jno
mov
sub
mov
fadd
dec
sbb
jo
cmp
arpl
pop
inc
xchg
lret
das
xchg
dec
and
or
or
fdivr
jb
sub
data16
xor
pop
callw
lret
jbe
mov
or
sbb
sub
loopne
gs
movntq
xchg
xor
or
lret
pop
xlat
xlat
add
les
jbe
sarb
mov
lods
sar
out
lock
sbb
fiaddl
lcall
jg
add
nop
fcmovu
imul
fbstp
mov
scas
sub
sub
cmp
or
test
mov
jg
sti
adc
xlat
aam
inc
mov
popf
gs
sahf
jle
xchg
push
inc
js
out
or
lods
cld
js
jmp
in
mov
in
daa
pushf
sti
mov
dec
and
jge
mov
sahf
push
mov
add
inc
in
sbb
lds
jp
mov
push
push
clc
loop
addps
nop
jnp
cmc
pop
xchg
sub
jnp
das
jb
lret
dec
pop
sbb
jo
pop
movsl
ret
and
ficompl
lahf
inc
scas
xor
je
jg
pop
inc
outsb
pushf
mov
test
addl
mov
mov
or
adc
mov
pop
sub
test
add
push
cmpsb
in
test
aaa
rcll
clc
negb
add
add
repz
mov
mov
sbbl
loope
jb
xor
add
mov
inc
stos
outsl
popf
es
ret
mov
das
lahf
jbe
scas
stc
cmpl
cmp
aam
test
cld
jp
movsb
pop
pop
roll
adc
cs
imul
pusha
mov
aas
stos
adc
xlat
jnp
loope
repz
popa
orb
fisttps
mov
daa
mov
adc
iret
outsl
in
aam
dec
lcall
aas
jno
jle
ret
insb
push
daa
scas
jne
dec
and
in
push
cli
dec
xor
mov
adc
adc
add
jle
stc
jnp
dec
pop
jae
fs
insb
mov
pushf
sub
sub
xchg
aas
lahf
add
and
mov
and
xchg
inc
in
jbe
mov
in
mov
insl
xor
iret
int3
add
pop
js
neg
pop
add
mov
add
orl
mov
int3
out
pushf
stos
popf
adc
subb
cmp
push
lock
xchg
rcrb
xor
adc
imul
insb
pop
sub
jno
popa
hlt
lahf
mov
cmp
or
cmp
add
xor
pop
and
inc
and
adc
imul
push
mov
mov
fidivl
ja
movsb
dec
mov
cmp
pop
out
mov
rcll
adc
or
push
lret
out
xchg
aam
or
test
sbb
mov
pop
xor
sbb
xchg
jp
addr16
pushf
push
fildl
pop
xchg
mov
outsl
mov
mov
cmp
sub
ret
sub
cmc
in
pop
sub
sbb
lcall
into
lds
cwtl
push
mov
mov
xchg
aaa
mov
cmp
mov
lret
jnp
push
adc
inc
scas
scas
scas
fcoms
push
mov
gs
dec
imul
rcrl
ror
mov
xchg
fsubr
bound
cmpsb
xor
mov
sub
jne
sbb
inc
xor
jbe
cld
or
mov
mov
shl
jo
push
adcb
ljmp
xor
pop
cmp
pop
mov
inc
inc
jb
stc
lcall
leave
add
jnp
imul
sub
into
addb
and
repnz
pop
outsb
pop
leave
gs
xor
dec
cmp
dec
pushf
inc
mov
pushf
pop
repnz
movsl
jge
les
adc
jl
rcr
jge
mov
push
xor
shlb
aad
mov
in
pop
mov
stos
xor
add
cld
sub
test
loop
ljmp
cli
retw
cld
test
push
lods
inc
fsubrl
sub
push
push
in
inc
mov
pop
stos
cmp
mov
jge
das
fdivrs
daa
jnp
mov
xchg
sbbb
sbb
dec
cwtl
fcomp
push
xor
or
mov
lods
daa
shr
ret
push
or
mov
ror
or
sbb
fsubr
movsb
jg
ret
push
push
inc
mov
cltd
aam
lds
out
aad
sub
test
jb
jo
jg
xchg
add
cli
out
and
cltd
mov
sbb
out
out
daa
or
jbe
fwait
sahf
fsubrs
inc
or
cltd
xchg
or
ss
sub
js
ret
movsb
mov
mov
dec
pop
out
inc
pop
sbb
xchg
fld1
pop
cmp
aam
pop
sub
call
mov
xchg
and
lahf
andb
mov
hlt
mov
push
inc
cmp
xor
mov
xchg
dec
aas
fwait
loop
add
xor
pop
mov
adc
jne
sahf
add
imul
fsubl
scas
mov
dec
fcmove
daa
sbb
vcmpsd
pop
dec
sar
dec
pop
mov
add
push
lret
mov
lods
add
incl
addr16
test
mulb
pop
sbb
mull
movsb
sub
icebp
ja
mov
mov
pop
cmc
mov
nop
cmp
movsb
clc
mov
sub
mov
mov
fldenv
outsl
fs
pop
frstor
or
ret
mov
arpl
filds
sub
out
in
push
fisubrl
lcall
lock
icebp
cli
lcall
sub
jns
lods
inc
or
mov
cmp
mov
out
out
pop
std
mov
leave
cmpsl
jle
mov
cmc
clc
pop
out
mov
call
mov
in
xor
stc
imull
and
dec
mov
arpl
pushf
int
pop
jb
je
inc
mov
cmp
sti
loop
ret
repnz
inc
mov
cltd
in
mov
cmp
out
dec
rclb
bound
adc
cli
jnp
popa
inc
add
mov
xchg
push
ret
jb
mov
cli
push
rorb
add
inc
mov
push
lds
sahf
add
inc
cmp
xchg
fbstp
inc
out
pushl
xlat
ss
mov
dec
sbbb
ljmp
mov
jnp
adc
xcrypt-ofb
cmpsl
push
xchg
fistpl
sub
int3
enter
ds
mov
in
mov
jbe
sub
cmpsl
and
xchg
in
inc
inc
adc
push
outsl
imul
jg
adc
xchg
mov
fldcw
inc
xchg
fdivrs
jb
orb
js
repnz
out
push
clts
mov
test
xchg
xchg
pop
mov
ror
pop
mov
xchg
lods
mov
fsubl
jle
shlb
sub
cld
inc
push
pusha
jge
push
dec
and
push
jl
icebp
sub
pop
sub
dec
fnsave
js
popf
push
std
mov
fldcw
cmpsl
cmp
or
push
cmp
adc
call
repnz
xchg
xrelease
push
mov
push
ret
jp
shrl
out
cmpsl
xchg
sub
push
addb
or
add
popf
dec
outsb
add
test
notb
dec
jb
inc
pop
inc
xor
mov
sbb
pop
in
jb
sti
push
in
push
xlat
xchg
jae
popf
dec
mov
mov
outsl
xor
mov
cmp
xchg
in
mov
jmp
jno
shrb
mov
jnp
mov
mov
cld
add
dec
add
mov
push
sar
mov
in
mov
test
dec
mov
xchg
cmp
dec
js
mov
sub
jnp
iret
and
mov
inc
aaa
mov
mov
xor
cmp
popa
iret
scas
jbe
aas
jns
or
mov
popa
or
jmp
sahf
pop
out
clc
mov
out
sbb
into
das
sahf
pop
sarb
idivl
aas
hlt
or
push
inc
nop
neg
lds
adc
jecxz
pushf
mov
xor
jl
pop
inc
frstor
outsb
sbb
cmpsl
inc
or
movsb
loop
mull
cmp
xchg
mov
jnp
arpl
xchg
sbb
aaa
ja,pn
mov
mull
xchg
push
out
push
aas
out
pop
or
cmp
mov
add
jne
out
leave
push
pop
inc
loope
pop
in
pop
mov
sub
pop
jb
fs
scas
add
fnstenv
cs
lcall
xor
push
loop
xchg
mull
xchg
notb
xchg
jecxz
pop
js
lcall
sbb
cli
fcomps
icebp
std
call
ret
test
push
imul
mov
repnz
adc
sbbl
mov
movsl
mov
cwtl
idivb
incb
add
stos
or
lds
ret
enter
mov
xchg
fidivrl
sti
jmp
icebp
push
shlb
pop
into
jo
in
xlat
pop
jg
pop
imul
fs
scas
cltd
cmp
sbb
insb
push
in
cmp
popa
sbb
insb
lods
pop
mov
ror
mov
sub
cmpsb
sbb
notb
sub
add
loop
sub
mov
stos
aam
outsl
rclb
test
lcall
and
fldcw
mov
add
stos
lea
jmp
jmp
dec
xchg
mov
lea
xchg
sub
cmp
xor
add
aad
cmpsl
mov
jecxz
add
lret
cmpsb
mov
and
mov
out
enter
add
rclb
add
and
fwait
push
push
mov
lds
lods
lahf
pop
mov
push
ja
data16
adc
jge
dec
fcoms
fisttps
lock
mov
sahf
repz
or
out
aad
mov
fnstcw
popa
push
leave
push
scas
pavgb
js
inc
mov
sti
fwait
mov
cld
imull
dec
push
inc
jo
pop
faddl
xchg
aas
in
pop
dec
divl
fistps
dec
push
or
push
aad
pop
jne
daa
pushf
cmp
add
jge
rcrl
jecxz
xchg
fldl
or
jae
arpl
pop
add
jge
rcrl
jecxz
xchg
fldl
or
jae
arpl
pop
add
jge
rcrl
loop
xchg
faddl
or
jae
arpl
pop
add
xor
and
bound
repz
jl
dec
add
in
mov
or
mov
test
mov
pop
adc
add
sub
sbb
sbb
cwtl
mov
int3
nop
mov
rorb
add
adc
sbb
or
inc
mov
adc
mov
fmuls
xor
sub
das
pop
add
xor
xchg
in
mov
idivl
and
jge
add
adc
sub
sbb
adc
pop
mov
xchg
nop
sub
adc
add
mov
sbb
fsts
out
ret
add
sbb
repz
cmp
fldt
imul
xchg
repz
xor
dec
out
sub
imul
and
test
jg
ret
inc
loopne
loopne
mov
push
jge
insb
into
fdivr
mov
ret
pop
sub
sbb
and
push
in
and
pop
fsubr
iret
pop
clc
or
in
add
add
fnstsw
sbb
inc
push
arpl
mov
pop
aad
mov
nop
sbb
orps
cltd
int3
nop
pop
loopne
lock
shrb
mov
sbb
js
push
xchg
mov
mov
shl
ret
lods
mov
cmp
jne
add
imul
rep
call
loopne
mov
sbb
pop
gs
inc
adc
jne
dec
and
mov
lahf
aad
shrl
jl
insb
xor
adc
sub
sbb
or
cld
mov
int3
nop
mov
rorb
add
pusha
sub
sbb
or
cld
mov
or
jae
rcrb
dec
aas
pop
fistl
adc
sub
fiadds
sbb
outsl
das
sbb
mov
stos
cmpsb
pop
ror
fldl
pop
aaa
shrl
es
stos
mov
mov
mov
into
mov
sti
push
cmpsl
cmp
xchg
lds
sbb
adcl
cmc
pop
or
cmp
and
std
dec
sub
ficomps
cmp
cwtl
scas
adc
clc
out
sti
outsl
sub
inc
ja
ret
cmp
dec
stos
jecxz
sbb
jne
jl
or
jp
cltd
pushf
outsl
adc
dec
in
lods
arpl
mov
adc
shl
notb
sbb
push
push
or
cwtl
jno
adc
xchg
out
rorb
mull
mov
shlb
push
popf
and
divb
adc
add
or
fs
jbe
ss
jl
decl
jmp
xor
sbb
push
subb
aaa
test
xchg
lods
sub
dec
push
or
arpl
cmp
test
xchg
in
mov
adc
out
mov
jbe
cmpsl
adc
iret
out
popa
inc
mov
adc
push
push
xchg
mov
sub
mov
in
cmp
ret
mov
pop
xchg
or
idivb
adc
mov
lds
cmp
fistps
pusha
daa
jnp
cmpsl
loopne
cmp
into
sbb
mov
mov
sbb
xchg
sub
sbb
mov
popa
lods
das
xor
jecxz
mov
xadd
add
push
std
cmp
fadd
or
stos
icebp
mov
jp
sub
popa
ss
mov
pushaw
sbb
mov
and
je
or
adc
dec
pop
jns
xor
data16
mov
fst
cmpsb
sbb
add
out
jg
ror
mov
imul
and
lret
test
lcall
mov
add
xchg
fadd
jg
icebp
loopne
xchg
add
push
inc
or
and
cmpsb
int
mov
or
or
push
aaa
push
inc
sti
int
inc
out
xor
div
aad
cwtl
cli
fldenv
xchg
push
movsb
int
fldcw
inc
push
mov
xor
push
mov
hlt
scas
int
pop
outsl
out
dec
push
xor
jge
and
pop
movsl
fistpl
stc
out
sar
lret
sbb
insl
pop
jge
fmull
fldt
mov
inc
and
mov
mov
inc
popf
jo
arpl
data16
xchg
push
xor
lcall
repz
push
in
insb
lock
sbb
fistpll
sbb
mov
in
dec
fstl
push
fcmovnu
out
pop
bound
dec
repz
loop
loop
add
mov
mov
push
inc
adc
xor
mov
icebp
rcr
and
inc
lods
mov
scas
lret
imul
std
adc
add
int3
out
pop
popa
lock
sub
insb
icebp
scas
xor
mov
fstps
jecxz
insl
or
aam
cltd
and
std
fs
fcompl
cmp
jb
imulb
jnp
xorl
xchg
inc
mov
lock
sub
out
dec
icebp
sbbb
jg
fmull
xor
incl
imul
cmp
push
out
aaa
pop
jo
jp
push
clc
out
cmc
sbb
xor
push
mov
ljmp
cld
popa
out
ret
inc
jae
js
jne,pn
xor
mov
xchg
nop
cmp
leave
inc
rcrl
inc
mov
adc
orb
dec
dec
push
lcall
mov
in
std
call
fisubs
or
stos
dec
fdivr
fistpll
test
fsubs
leave
inc
jmp
or
xor
lahf
int
getsec
and
popa
mov
jbe
out
or
leave
xchg
push
pop
cmp
arpl
stc
jmp
pop
stc
push
push
xor
sub
test
jno
aaa
mov
jo
pop
push
jo
dec
into
cmp
pop
or
mov
mov
mov
or
or
push
add
xor
dec
mov
fbstp
jp
dec
mov
jge
fsubrl
es
or
sub
lret
shlb
test
xchg
xchg
push
jb
sub
test
jle
dec
std
mov
jmp
les
pop
ja
xchg
mov
mov
pop
xor
adc
in
andb
sbb
dec
call
repz
push
xor
inc
sub
pusha
out
sbb
sbb
push
lahf
xlat
dec
fdivl
and
sbb
cwtl
push
cmp
and
mov
icebp
sub
jle
sbb
in
aad
clc
mov
fsubrp
lcall
and
sub
in
sahf
addl
pop
sahf
pop
add
and
aas
mov
dec
mov
mov
out
push
insb
int3
iret
test
into
cmp
dec
lds
cmp
dec
pop
scas
leave
out
adc
hlt
ljmp
dec
inc
cld
inc
mov
aad
mov
jb
mov
loope
loop
push
xor
movsl
xchg
xor
je,pn
scas
inc
push
ja
daa
xchg
stos
add
xchg
es
shlb
pop
cltd
sub
pop
subb
and
aad
jo
mov
push
push
pop
fs
push
dec
popf
xor
mov
cmp
mov
xor
daa
xchg
jge
push
test
sbb
into
jl
xchg
out
clc
sbb
clc
in
orl
leave
sti
popf
icebp
sbbb
aaa
xchg
mov
mov
jg
dec
in
in
push
inc
mov
dec
fdivp
fstp
arpl
dec
sub
mov
mov
jmp
inc
jnp
pop
je
inc
push
imulb
jg
cmpb
mov
jnp
mov
mov
pop
enter
pop
out
and
adc
insb
sub
lahf
xchg
inc
fisttpl
subl
xor
das
movhps
jle
cld
jbe
pop
adc
fst
and
push
sbb
out
sub
cmpl
jge
pop
jp
mov
rorb
test
mov
sub
shrb
pop
cmp
aaa
sbb
adcl
and
jb
xor
push
test
fs
lock
sbb
add
adc
jae
xchg
out
orl
aas
inc
xchg
sbb
adc
rcl
test
jge
fld
mov
lret
iret
pop
sub
or
test
adc
dec
int
xchg
inc
dec
xchg
out
stos
sahf
push
or
mov
lret
rorb
push
repz
les
or
jbe
sub
lret
nop
es
das
fdivs
gs
mov
shl
jg
xchg
stos
out
movsb
popf
ret
push
imul
xor
in
repz
out
push
pop
xchg
inc
shrb
inc
pop
insb
mov
cli
mov
dec
ret
outsb
movsb
mov
cltd
in
pop
ss
jp
mov
cmp
insl
shlb
and
or
or
clc
dec
aaa
in
sbb
jnp
or
rclb
insb
ds
pop
jl
xor
dec
test
jae
fiaddl
cmp
int3
add
mov
dec
add
call
and
cmp
or
outsl
outsl
push
inc
add
jo
or
test
adc
insb
pop
pop
xchg
mov
inc
outsb
xchg
inc
jge
lods
and
test
stos
and
data16
test
mov
sub
add
std
rcll
das
push
fists
push
sub
leave
mov
jl
test
ja
and
dec
dec
push
cli
add
or
enter
icebp
imul
repz
stos
notl
rorb
adc
push
mov
push
hlt
add
lea
aaa
mov
ret
les
sbb
dec
lods
add
inc
adc
cmp
imul
popa
add
jp
cmp
mov
out
pushf
mov
push
in
push
sbb
imul
push
push
aad
jmp
add
stos
sbb
call
and
pusha
icebp
ret
jnp
inc
hlt
sub
or
xchg
cmc
insl
in
and
in
dec
add
inc
jae
repz
jae
lahf
jbe
lahf
cmp
mov
into
pop
cmp
jecxz
jmp
movsl
sbb
pop
or
xorb
and
imul
adc
imul
pop
ja
dec
inc
movsl
arpl
fsts
insb
call
pop
arpl
hlt
dec
insl
jnp
mov
dec
fadds
mov
jbe
jmp
push
sbb
push
sub
fnstcw
stc
cvtps2pi
cmc
test
mov
jge
mov
pop
xor
dec
mov
xchg
sub
leave
fwait
inc
add
push
aam
pop
push
scas
jge
cmp
icebp
and
jmp
mov
xor
push
dec
jo
test
fmuls
add
test
into
and
jl
icebp
push
pusha
xchg
mov
mov
lret
loopne
out
push
add
xor
push
push
mov
mov
inc
mov
add
mov
jb
adc
mov
fsubs
or
jg
imul
clc
mov
rorb
sub
mov
test
out
iret
in
dec
or
xor
xchg
mov
fidivrs
inc
mov
ljmp
ja
stos
xorl
mov
push
add
loop
push
push
sub
out
lods
and
inc
fldt
pop
jbe
dec
lahf
jo
aas
sbbl
push
xchg
xor
pop
mov
shl
cs
leave
push
xlat
sub
jb
pop
scas
dec
into
out
gs
fldcw
lret
lods
jbe
fidivrs
push
repz
in
repnz
imul
adc
jne
fst
push
loop
adc
aas
movsb
aad
enter
mov
adc
fcmovu
jbe
jle
ss
rclb
out
ja
pop
jne
push
cmp
pop
mov
stos
dec
sbb
in
lahf
inc
test
dec
xor
pushf
repnz
pop
lea
mov
sahf
pusha
cmp
ret
aad
loope
sbb
std
inc
cli
js
cwtl
imull
sub
lret
arpl
cmp
lret
std
leave
xorb
out
outsl
mov
sbb
sub
jbe
cmp
fisttps
sub
jae
sbb
dec
mov
ret
jae
xor
fsubrs
in
rcrb
loopne
mov
and
pop
and
lods
lahf
jecxz
sbbb
movsl
push
incl
or
mov
jecxz
in
dec
cwtl
mov
hlt
xor
fmul
pop
or
pushf
testl
sub
roll
ret
aas
jp
mov
mov
inc
lods
inc
xchg
adc
cmpsl
xchg
add
in
sti
out
addl
mov
pop
xchg
shrl
sti
ljmp
pop
dec
scas
xor
push
push
mov
repnz
mov
dec
iret
iret
shrb
js
aad
jmp
inc
mov
repnz
mov
imul
jae
cmp
mov
lret
push
shll
clc
testl
pop
mov
sahf
pop
jmp
bound
push
jae
repz
jo
sahf
sub
in
xor
push
sbb
xor
mov
test
xchg
out
inc
ja
pop
inc
repz
cli
arpl
sahf
int3
xchg
mov
push
clc
add
or
mov
jp
and
sub
cli
jp
dec
inc
xchg
jp
in
and
ficomps
sti
dec
ljmp
jg
adc
es
sbb
pop
mov
cmp
out
bound
scas
lods
nop
add
inc
or
out
jo
enter
push
cmpsl
xchg
pop
call
push
dec
int
fnstcw
xor
mov
sub
ret
pop
xor
sbb
sbb
int
cltd
cmp
xor
mov
lods
mov
and
stos
push
movl
xor
and
jne
ret
repz
adc
xor
xchg
jle
or
fstpl
std
icebp
pop
adc
hlt
ja
nop
xchg
push
outsb
mov
xchg
lds
orps
push
rcll
add
aam
in
and
fwait
adc
xchg
lcall
cmpsb
mov
into
jnp
jp
jb
sbb
ja
adc
sbb
sbb
add
rorl
sbb
xor
sub
pop
dec
jp
xchg
cmpsl
stc
gs
stc
cs
popf
cmpsb
push
fimuls
xor
jle
nop
mov
mov
push
jae
cmpsl
clrssbsy
jecxz
lcall
mov
nop
js
fsubp
lock
sar
xor
cli
pop
icebp
movsb
and
cmp
rcl
imul
out
xlat
out
ficomps
jp
test
xchg
mov
xor
clc
mov
inc
or
pusha
test
and
pop
test
push
and
xchg
insl
jne
sub
jno
mov
lock
add
pop
push
pop
mov
fwait
mov
movsl
inc
mov
xor
cli
fdivrp
sub
mov
sbb
fs
lods
pop
fwait
rclb
mov
gs
outsl
pop
aad
incl
leave
xchg
sbb
mov
cmp
imul
sub
and
sarb
int
in
leave
cld
pop
adc
hlt
push
sub
stos
fistpll
adc
fs
pusha
sub
shrb
mov
xchg
stc
inc
lahf
fbstp
cli
push
ja
dec
mov
hlt
pop
rdtsc
mov
add
sub
xchg
iret
push
out
adc
pop
mov
fbstp
xchg
filds
dec
jg
push
mov
sbb
loope
push
aam
xchg
push
mov
jae
cld
notb
pop
stc
xorl
insb
insl
imul
xchg
mov
shlb
mov
enter
pusha
stos
mov
and
into
call
lahf
iret
xchg
sub
mov
adcb
add
test
sbb
mov
cmc
xchg
cmp
scas
mov
xlat
scas
or
ja
sub
movsl
out
xor
push
iret
imul
push
arpl
jno
hlt
sbbb
push
lods
mov
add
push
add
inc
pop
xor
clc
fsubr
cmp
dec
mov
fsubr
hlt
pop
mov
mov
push
sarl
or
verr
xchg
fcmovnu
jecxz
movsb
je
cmpsb
jg
pop
sbb
enter
std
xorb
mov
fsubrs
cmp
pop
mov
push
and
xlat
gs
arpl
cmp
pop
or
inc
movsl
stc
mov
add
pop
imul
call
jo
test
inc
xchg
add
pcmpgtw
push
cld
adc
add
outsb
lret
xchg
movsl
jmp
out
jmp
xor
in
scas
nop
je
rcr
outsb
push
dec
mov
mov
shrb
out
or
inc
andb
push
out
fldcw
subl
lret
icebp
fs
push
cmp
adc
push
rcr
pop
jge
popf
dec
fwait
pop
and
dec
roll
jecxz
insb
mov
cmpsl
mov
xor
sub
mov
mov
mov
cld
jmp
ljmp
int
movsl
add
mov
inc
cmpsl
mov
adc
fldt
jl
mov
pop
sbb
pushf
xchg
ficoms
pop
fdivrs
nop
jno
aam
push
pop
sahf
fstpl
sarb
sbb
mov
mov
in
cmp
pop
test
outsb
sarb
insl
int
mov
loop
stos
lods
xor
push
adc
cli
cmp
sbb
mov
fistpll
popa
mov
jns
xchg
aad
popl
movsb
sub
adc
stos
imul
xor
dec
imul
xor
push
scas
mov
out
lret
out
mov
call
xchg
cmp
mov
insl
sub
in
rclb
sub
pop
pushf
cs
jb
enter
stos
sbb
lret
dec
outsl
int3
add
inc
and
roll
jbe
unpckhps
iret
loope
ss
lahf
pop
or
pop
and
xchg
loop
xchg
or
or
cmp
sub
lret
lods
test
movsl
dec
jbe
dec
hlt
imul
push
xchg
out
or
mov
pusha
sub
push
push
sub
scas
ror
aaa
out
jns
pop
test
test
insl
test
stos
mov
cmp
pop
inc
jnp
mov
cmc
pop
push
push
mov
xchg
pop
jbe
push
out
add
add
lcall
lods
push
fwait
and
xchg
mov
nop
aad
pop
sahf
xchg
loope
inc
mov
jg
adc
push
pop
jnp
sti
test
and
in
rorl
adc
andb
or
push
dec
mov
ss
push
cmp
or
inc
mov
mov
icebp
inc
jecxz
lea
pop
loopne
mov
or
xchg
and
cmp
int3
ja
fsubp
outsb
add
xor
rcrl
int3
jge
rcrl
cwtl
xchg
add
leave
dec
mov
xchg
mov
lret
aam
in
ffreep
jo
ss
xchg
sbb
rep
jnp
xor
call
out
cmpsb
lds
cmp
imul
cmp
sahf
inc
adc
xor
jns
repz
mov
cmpsl
pop
call
js
and
icebp
or
shlb
loopne
xchg
jbe
popf
cmc
mov
scas
xchg
mov
mov
scas
push
and
nop
cs
dec
dec
lock
push
push
lret
xor
or
pushf
cmp
sbb
cmp
lahf
js
lahf
mov
pop
and
lock
rcll
cmp
lret
push
fs
cmp
into
push
add
push
rorb
xorl
inc
sub
inc
stos
sbb
int
leave
pusha
movsl
out
jo
aad
sbb
aaa
ja
jg
scas
or
mov
in
imul
cmp
stc
cld
add
xor
sub
gs
xchg
sbb
mov
ror
stos
inc
pop
loop
fwait
mov
aas
push
mov
fnsave
lods
push
push
loope
add
mov
sub
and
mov
sahf
xchg
mov
jae
add
xchg
jbe
adc
jg
lret
inc
jnp
and
jmp
das
ret
mov
sub
push
repnz
and
inc
and
xlat
or
adc
cmc
sbb
fs
bound
pcmpeqw
aam
and
cmp
sub
test
jo
pop
clc
mov
or
jnp
jo
cmp
sub
cmpl
dec
jg
lcall
add
jno
mov
fdivrs
inc
cli
mov
imul
loope
xor
mov
ja
scas
sarb
out
icebp
pop
and
mov
jb
aam
pop
lret
push
inc
dec
xchg
xchg
rcl
pop
pop
sti
sbb
rclb
push
lock
jo
nop
or
in
call
cmp
push
cld
xor
sub
cmc
inc
pop
js
jno
lock
mov
add
jecxz
repnz
adcl
rorb
outsb
dec
in
es
test
fwait
sbb
ds
xlat
rorb
pop
clc
sub
test
cmp
adc
sub
ljmp
mov
rcll
rol
inc
xor
cmc
sbb
add
ficoml
in
scas
rcr
mov
mov
pop
push
lea
fildl
mov
cmp
mov
inc
sub
jle
daa
lahf
ss
mov
push
aas
mov
test
rorb
imul
and
in
jmp
lcall
pop
mov
pop
adc
pusha
test
adc
stc
pusha
pop
cmpsl
pop
dec
dec
xor
lcall
or
ds
xchg
xchg
sbb
test
xchg
sub
bound
or
int
out
inc
jo,pn
inc
insb
sbb
out
push
mov
adc
into
ljmp
in
jo
jbe
shl
mov
sbb
fisttpl
dec
add
addr16
dec
fsubrl
pop
scas
faddp
hlt
outsl
call
mov
bound
rorl
enter
sbb
sub
dec
mov
mov
pusha
call
std
cmp
in
push
jmp
aam
and
add
xchg
sbb
and
movsw
leave
pop
and
inc
lea
jg
add
pop
cmpsb
lods
out
insb
xchg
adc
push
add
or
jmp
out
sti
and
push
or
add
push
stc
mov
in
ja
sbb
xchg
xor
or
fwait
or
mov
rorb
add
pusha
sub
sbb
or
cld
mov
int3
nop
mov
rorb
add
pusha
sub
sbb
or
cld
mov
int3
nop
sub
lods
lock
rorb
insb
xor
cmp
sbb
in
call
test
nop
mov
rorb
and
addr16
call
repz
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
js
dec
mov
push
mov
sahf
sbb
call
cmp
dec
test
cmp
mov
js
dec
mov
cmp
or
sbb
call
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
inc
sbb
pop
lods
adc
xlat
and
push
leave
or
rolb
sbb
jbe
lock
push
xor
cmpb
add
daa
clc
pop
cs
loope
pop
loopne
or
pop
cmpsb
leave
mov
push
push
test
jae
adc
mov
lret
dec
adc
pop
aam
push
and
push
ja
adc
jge
sti
fldl
cmp
xor
xchg
cmpsb
aaa
sbb
inc
imul
je
out
xchg
int
cmpsl
jo
shrb
sbb
scas
cmp
mov
mov
outsb
adc
in
cs
mov
adc
jo
pop
popf
jno
rcr
jle
ja
pop
jg
pushf
adc
stos
dec
mov
cmp
or
sbb
call
cmp
dec
test
mov
int
bnd
and
xor
inc
mov
mov
push
sahf
cs
xor
das
mov
dec
fisubrs
lea
pop
jmp
sti
sbb
sbb
cs
psrlq
in
jnp
loop
ljmp
ret
cmp
jmp
sti
sbb
call
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
call
cmp
dec
test
mov
mov
xor
cli
lahf
pop
adc
and
ljmp
mov
xor
and
daa
into
pop
test
jne
mov
adc
stos
mov
xorl
jae
lret
and
add
and
jge
lock
mov
imul
stos
sbb
shl
mov
stc
push
mov
cltd
sub
add
dec
jae
xchg
add
push
adc
push
into
and
sahf
pop
cmp
or
dec
int3
xor
xor
fcmovnbe
outsl
push
jl
stos
popf
sub
lret
loopne
lcall
push
or
leave
jb
aaa
push
xor
pop
addr16
out
cmpsl
repz
ja
mov
test
push
ret
mov
jle
lea
or
outsb
cld
ljmp
mov
pop
dec
jbe
dec
xor
ret
xchg
repnz
gs
jae
or
mov
mov
je
add
das
in
mov
pushf
xchg
jmp
gs
stos
ja
sub
sbb
jno
add
pop
cmp
sbb
inc
pop
pop
add
adc
leave
dec
fstpl
mov
mov
inc
lods
xlat
int
inc
or
mov
aas
or
or
pop
inc
sarl
iret
mov
ljmp
jle
jp
repnz
out
sbb
sub
dec
aam
fisubl
cwtl
rorl
int3
sub
xlat
loope
andl
push
mov
mov
inc
mov
mov
jbe
cld
pop
lea
clc
js
jle
sub
xchg
out
negb
jnp
fstl
sbb
mov
mov
xchg
idiv
scas
mov
sub
mov
shl
jle
jae
inc
push
xchg
inc
push
ljmp
lods
gs
popa
inc
fstpt
pop
cmpsb
addr16
pushf
mov
inc
cli
cmp
stos
add
mov
lods
push
dec
pop
cmpb
cmpb
popa
lea
and
mov
mov
and
pop
add
jo
daa
jecxz
lret
sbb
in
push
sti
xchg
mov
xor
pop
dec
cmpsl
mov
jle
arpl
xchg
xor
in
test
adc
jmp
loop
js
outsl
enter
mov
std
scas
push
sub
jns
mov
ret
fisubs
inc
leave
mov
mov
outsb
sbb
sub
ret
jb
push
jns
test
push
and
divl
xchg
fildll
leave
fdivrs
add
pop
in
nop
and
cld
popf
mov
fldz
push
push
aad
or
shll
movsl
test
movw
fwait
iret
insb
imull
cmp
add
ljmp
mov
pushf
inc
xchg
enter
aad
or
enter
xchg
inc
loopne
mov
int
xchg
xchg
mov
je
pop
sub
cwtl
jae
inc
int3
and
and
pop
pop
mov
xor
lret
mov
sub
cmc
xchg
popf
sub
addr16
xlat
push
hlt
pop
sbbb
sub
xor
popa
xchg
lret
fiaddl
mov
sub
or
inc
and
mov
xchg
leave
movsb
xor
sub
pop
movl
mov
push
addl
in
adc
xor
in
push
icebp
icebp
xor
nop
jmp
sahf
idivl
xchg
pop
hlt
leave
jnp
movsb
xor
xor
pop
stos
sub
int
fmul
int3
lds
ret
rolb
pop
cltd
cmpsl
fwait
mov
pop
std
mov
xchg
outsb
jbe
repz
clc
sbb
jmp
jno
stos
dec
cli
jae
out
add
inc
repnz
div
test
jnp
and
inc
xchg
lock
mov
repz
dec
ret
xlat
sub
mov
push
loop
leave
emms
test
dec
adc
mov
cltd
xor
nop
fnsave
js
ja
dec
insb
add
push
pop
cmp
mov
hlt
jnp
jmp
dec
aad
xchg
xor
mov
mov
les
scas
in
leave
jl
xor
and
adc
or
sub
xchg
rorl
inc
aad
and
sub
mov
sahf
xchg
je
and
shll
mov
mov
adc
sub
cmpsl
lcall
adc
ret
movsl
and
pop
sub
cmp
push
xchg
sti
push
inc
mov
sbb
sbbb
popf
inc
xlat
adc
scas
imul
jecxz
jbe
hlt
pop
push
cmpsl
pushf
call
pop
std
ljmp
or
mov
in
cmpsb
fldenv
lret
cmp
mov
and
xchg
leave
mov
fmuls
inc
aas
daa
test
loop
mov
insl
cmpsl
cld
jne
and
mov
js
inc
icebp
repnz
repz
repnz
fildll
dec
mov
ret
mov
repnz
jae
pushf
add
pop
xchg
adc
fisttpll
jp
cmpsb
pop
jg
cmpsb
mov
pop
shll
lods
sub
stc
faddl
pop
sbb
clc
aas
ds
push
sub
pop
out
jb
or
imulb
mov
sub
jecxz
idiv
xchg
stc
int3
andnps
bound
push
mov
shlb
xor
or
mov
loopne
shlb
cmc
cli
movsb
data16
out
add
push
pop
cmp
dec
jne
cmp
lret
sahf
inc
xchg
lret
stos
in
adc
push
pop
add
xor
pop
cmp
mov
cmc
lahf
sub
pop
xchg
mov
sub
sbb
pushf
lea
popa
movsb
mov
movsb
adc
xor
in
mov
cli
xchg
pop
add
pop
adc
repz
or
cmp
fisubrl
xor
cltd
popa
jmp
or
mov
jno
cltd
lods
inc
imul
mov
jnp
jb
or
out
sbb
popf
xchg
daa
mov
xchg
pop
cmp
in
test
out
inc
sbb
cmp
scas
leave
fsub
pop
insl
roll
aam
add
testb
jl
mov
cltd
mov
add
xchg
mov
jae
pop
sbb
into
in
out
cli
outsl
lods
jle
and
insl
addr16
rcl
mov
xor
mov
push
cmp
sti
aam
mov
shrl
mov
adc
add
or
popa
mov
in
fdivrs
cmp
mov
sbb
adc
sbb
and
mov
pop
out
jae
out
aas
mov
stos
test
cmp
and
inc
and
leave
dec
mov
inc
xchg
mov
shl
and
call
pop
pop
pop
or
mov
mov
lret
jmp
adc
loope
pop
xlat
xor
ret
add
imul
loope
out
fwait
mov
test
in
mov
lcall
dec
aam
push
les
pop
or
flds
mov
and
cmc
pop
push
lock
aas
movsb
in
popf
mov
int3
and
fists
cmpsl
pop
pop
cltd
mov
ljmp
pushf
imul
ljmp
mov
out
mov
cmp
xchg
aas
sub
stos
mov
cmp
cmp
test
jbe
lcall
adc
jecxz
cmp
pop
test
daa
mov
loope
iret
into
in
xor
insb
ja
fists
test
rcl
fsts
out
pop
mov
addr16
adc
dec
xchg
jmp
pop
sub
inc
adc
jbe
pop
pop
pop
sbb
jnp
repnz
and
imull
mov
jo
ss
xor
sbb
pop
pop
xchg
loope
mov
je
lret
leave
mov
mov
xchg
lods
lret
push
dec
cmpl
fs
mov
lods
dec
sbb
jmp
xchg
and
pop
mov
ljmp
pop
xchg
inc
push
or
out
cmp
jmp
xchg
inc
inc
dec
and
ss
mov
std
mov
sahf
mov
imul
lods
xchg
add
lcall
mov
jne
dec
xchg
dec
fstpt
lods
dec
psraw
int
ret
scas
xchg
lret
jmp
shl
shrl
adc
adc
stc
loopne
std
aam
sub
mov
mov
ds
test
xchg
insl
in
and
xchg
pushf
cmp
orb
and
hlt
push
hlt
xlat
pop
call
add
pop
dec
sbb
cwtl
jo
in
imul
inc
jge
outsl
push
mov
mov
int3
leave
sahf
dec
cmp
and
ret
pop
gs
and
mov
push
loopne
data16
xchg
xchg
fnstcw
xor
adc
xchg
lea
jge
insb
sub
shlb
test
je
ss
adc
notb
call
lock
ret
sarl
bound
mov
gs
xor
leave
mov
or
mov
fstpt
lds
out
in
jle,pn
push
jl
test
and
and
mov
push
mov
fsub
or
mov
enter
inc
xchg
jns
sub
adcb
xor
pop
mov
xchg
adcb
inc
push
push
cmp
scas
notl
stos
sti
mov
or
and
mov
insl
push
xchg
push
negl
jmp
dec
sti
add
mov
lods
stc
jmp
je
iret
jo
xchg
xchg
jmp
xor
inc
push
and
iret
push
xor
inc
push
xlat
stos
lods
ffreep
in
out
ljmp
inc
cltd
jbe
push
dec
push
jp
mov
jo
flds
jle
xchg
jno
xor
or
push
lds
push
add
xchg
mov
repz
in
or
aam
aas
xor
add
adc
pop
ret
fcoml
xor
mov
out
roll
push
sub
push
mov
and
lret
out
les
mov
adc
sub
clc
lock
loopne
xchg
add
jge
daa
or
je
dec
out
sub
dec
nop
inc
shr
xchg
jb
repz
mov
lret
in
lret
cmp
lret
dec
jbe
cmp
adc
adc
data16
xchg
mov
adc
add
pop
lods
loope
adc
and
mov
pop
xchg
jns
jecxz
push
imul
cltd
xchg
adc
rolb
cwtl
and
mov
cwtl
es
add
adcb
enter
cmp
rcrb
data16
mov
rclb
xorps
enter
push
jo
cmp
popf
inc
cld
mov
mov
adc
stos
test
int
lds
mov
test
dec
dec
jbe
outsl
fsubr
adc
test
push
mov
or
mov
rolb
es
and
aam
or
jmp
int3
xlat
jb
dec
and
jge
sub
xor
stos
and
push
in
int3
xchg
mov
outsl
pop
mov
dec
adc
mov
xchg
ljmp
loop
lods
xchg
and
aad
jb
mov
sbb
bound
adcb
sbb
mov
xchg
mov
mov
xor
cmpsl
insl
fimull
inc
adc
inc
and
push
adc
movsl
push
sarb
int
js
cli
iret
mov
mov
xor
out
dec
scas
and
aam
in
sarl
add
add
sub
mov
lcall
push
xchg
push
push
add
push
mov
addb
test
cmp
xchg
dec
xor
fwait
push
jno
inc
pop
popa
jecxz
mov
pextrw
sbb
repnz
mov
sbb
xchg
add
aam
stos
in
xor
cltd
in
jne
lock
fsubp
mov
daa
roll
scas
and
adc
pop
outsb
mov
or
sbb
insb
mov
mov
cld
sahf
test
fwait
insl
pusha
add
ljmp
bound
sub
nop
insb
cltd
add
mov
roll
jnp
jle
mov
mov
push
and
jl
lcall
ja
mov
dec
sbb
rorl
clc
sbb
cmp
pop
mov
pop
adc
and
test
adc
mov
and
insl
adc
fnstsw
adc
xor
adc
fsubs
cwtl
hlt
in
mov
or
divb
je
adc
mov
test
xor
addb
jae
push
or
loopne
dec
mov
test
mov
push
push
cltd
sti
es
in
mov
int
popw
mov
sbb
mov
lods
add
inc
push
mov
insb
ret
xchg
mov
loopne
cmp
repnz
mov
dec
mov
mov
sub
mov
sarb
repz
outsb
sbb
xor
and
sbb
pushf
adc
jp
and
int3
mov
jle
movsb
cwtl
sbb
mov
ss
xchg
push
pop
push
stc
adc
pop
dec
xor
mov
or
push
fistpl
adc
dec
cmc
incl
dec
inc
test
dec
notb
addr16
mov
int
mov
call
adc
mov
loop
test
clc
cmp
push
jbe
add
lcall
xchg
notl
mov
pushf
ret
jo
cwtl
inc
subl
pop
cwtl
pop
jge
or
pop
and
popf
sbb
in
pop
scas
mov
lea
mov
or
add
dec
mov
xor
adc
fisttpl
std
add
enter
pop
subb
lret
arpl
dec
out
movsb
sub
jae
jae
lret
sbb
out
mov
sub
push
add
and
ret
push
ds
loope
sub
mov
inc
push
xchg
mov
int
dec
test
sahf
in
aas
lds
sbb
mov
jg
jne
leave
xchg
jo
jmp
xchg
jmp
adc
and
in
mov
adc
adc
mov
jge
push
lds
scas
popf
cmp
enter
and
push
cwtl
loopne
stc
repnz
imul
mov
mov
in
ltr
stos
cmc
out
jle
jns
imul
mov
mov
and
mov
cmp
aas
adc
xchg
xchg
in
fsub
testb
cs
pop
into
pop
jge
dec
dec
cmpsl
loop
jne
adc
cmpsb
push
inc
mov
mov
test
sub
add
pop
pop
mov
push
inc
stos
adc
sub
movsl
sbb
ljmp
xchg
sub
xchg
and
adcb
jns
daa
adc
shll
popa
mov
mov
mov
jne
movsl
jle
push
pop
add
lahf
imul
call
mov
in
ss
fwait
push
fxch
aas
push
and
add
push
xor
push
lret
sbb
cmp
movsb
sbb
dec
sbb
stos
dec
aad
call
push
mov
jbe
mov
push
rclb
ret
mov
lods
adc
cld
and
push
sbb
insb
jl
mov
xor
sub
or
and
jmp
mov
lret
mov
arpl
add
aam
xchg
mov
or
sub
test
test
and
mov
movsl
mov
insl
lcall
cltd
int
and
dec
test
xchg
pop
outsb
aam
jae
pop
pop
aaa
pushf
ljmp
test
lret
or
popf
in
or
outsl
jnp
or
sbb
hlt
into
clc
fisubrs
call
ret
shl
test
pusha
fistps
shlb
inc
xor
shll
inc
xor
jns
stos
xlat
xor
pop
fnstcw
adc
sub
stc
push
inc
cmp
js
push
jae
pop
xchg
addr16
push
clc
int
js
bound
pop
popf
fsubrl
cmpsl
call
sti
add
lods
adc
inc
dec
int
negb
out
imul
push
cmpsb
cmpsb
mov
cwtl
int3
lret
or
pop
cmp
sarb
out
lods
rorl
xchg
fcomp
dec
les
cmp
pop
or
xchg
and
insl
push
push
rol
testb
sub
movsb
pushf
xlat
dec
ja
test
loope
bound
test
sbb
mov
dec
pop
jne
sbb
fs
mov
pop
sub
clc
mov
pop
insb
dec
sbb
ret
sub
sahf
xlat
push
adcb
sub
jb
cmp
push
cmpsb
jne
orb
sub
and
sub
mov
pop
fdivr
test
cmpsl
jmp
cmp
fwait
call
mov
push
xchg
or
inc
xchg
dec
push
push
scas
fwait
xlat
pushf
and
sub
mov
pop
loope
jae
pop
addl
mov
or
cwtl
aas
mov
repz
adc
inc
lret
test
xorl
sub
sbb
or
mov
bound
pop
mov
shll
and
clc
mov
int3
cli
movd
fcmove
cmpsb
cmp
and
adc
lds
jl
dec
cld
in
test
leave
bound
outsb
adc
sbb
pushf
loopne
jle
mov
mov
aaa
mov
dec
int
rcrb
xchg
and
mov
repz
arpl
push
ljmp
loopne
or
lods
hlt
inc
push
push
sub
orl
icebp
mov
iret
dec
dec
push
jbe
jne
testl
stos
dec
xchg
test
scas
mov
rorb
sbb
enter
jbe
and
testl
xchg
push
adc
and
add
push
out
lcall
xor
fadds
xchg
mov
pop
fadds
and
sub
and
mov
jge
int
popa
pop
adc
pop
stc
add
sbb
insb
popa
xor
fistpl
es
insb
cld
insl
or
ja
add
mov
cltd
dec
std
aam
ss
adc
jb
pushw
std
mov
xor
lahf
pop
ss
xchg
mulb
or
push
and
jl
inc
enter
pop
pop
cmp
inc
adc
jecxz
hlt
mov
fucomp
push
sub
push
stc
sbb
fdivl
sti
fmull
mov
iret
and
jg
arpl
hlt
loopne
jl
test
or
and
movsl
add
or
into
inc
das
lret
inc
inc
jge
jne
sti
push
dec
in
cmp
orb
orb
mov
stos
xchg
testl
sub
add
lods
dec
adc
jbe
mov
or
or
mov
sub
cld
fsub
cltd
ja
sbb
sbb
pop
adc
pop
aam
adc
inc
xchg
shrl
stos
data16
clc
lret
faddp
leave
pop
pop
in
je
dec
and
push
pushf
pop
push
mov
pop
dec
pop
das
add
add
push
mov
mov
adc
mov
loop
mov
mov
or
ljmp
xor
xor
push
mov
and
sbb
fwait
leave
int
shlb
cmc
inc
rol
scas
sub
clc
arpl
pop
jmp
sbb
outsb
rolb
mov
imul
mov
mov
xor
test
roll
ss
xchg
test
sub
or
insl
cmp
dec
sub
pop
inc
pop
ljmp
inc
jle
clc
xchg
xor
ret
insb
xor
dec
mov
icebp
ror
ret
arpl
sahf
xchg
xchg
dec
lea
jne
dec
dec
sub
in
sahf
aad
add
out
push
lcall
sahf
mov
das
mov
shlb
dec
dec
lea
out
add
jbe
mov
mov
cs
xor
mov
loope
pop
push
jmp
jg
test
cs
cmp
out
mov
jle
cld
loope
mov
popa
insb
jg
in
push
popa
pushf
popa
xchg
nop
cmp
lock
ficomps
repnz
xlat
inc
stc
in
and
decl
loopne
push
andb
cmpsl
cmpsl
dec
gs
mov
enter
and
es
inc
xchg
call
cmpb
cli
fisubrl
je
jnp
lods
dec
mov
ds
lock
mov
mov
dec
cld
sub
or
xor
mov
sub
mov
mov
xor
bound
jb
int
dec
jno
pop
jg
jp
call
jp
data16
add
es
and
and
mov
ja
jns
inc
pop
cld
sub
mov
sub
jmp
dec
inc
xor
in
outsl
dec
mov
push
aas
jp
mov
popf
jecxz
daa
stc
inc
cmp
adc
dec
mov
cmp
or
sbb
call
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
call
cmp
dec
test
mov
mov
clc
stos
enter
sub
mov
or
clc
sub
cmp
dec
test
mov
mov
js
dec
mov
cmp
or
sbb
call
cmp
xchg
ja
addr16
cld
je
add
adc
inc
iret
adc
sub
mov
sub
jl
or
sbb
sti
and
xor
add
adc
fs
jp
movsb
jl
sub
hlt
or
sbb
cmc
and
aam
les
push
movsl
cmp
dec
mov
movsb
ja
and
sub
add
jne
pushf
pusha
cld
jne
push
mov
movsb
imul
gs
xchg
das
test
mov
pop
cmp
clc
add
adc
int3
jo
jmp
jno
jl
push
stos
movsl
pop
orl
push
les
dec
xchg
cltd
popa
dec
cld
insl
test
in
mov
movd
mov
or
and
xor
add
mov
inc
test
dec
jnp
xchg
test
cmp
test
repnz
xchg
stc
test
cld
push
jl
pushf
test
pop
fs
xchg
in
or
cld
lret
xorl
adc
aaa
xchg
push
xchg
testl
mov
sub
sub
cld
adc
jo
adc
cmpsb
je
inc
test
jne
fs
xchg
xor
and
or
add
pop
test
rcl
mov
icebp
adc
out
les
and
testl
jns
in
cld
jb
ja
js
shlb
loopne
fldenv
lds
sub
mov
into
aam
push
mov
push
insb
movsb
jl
dec
test
in
hlt
or
sbb
in
and
xor
add
adc
fs
push
insb
movsb
jl
dec
test
in
hlt
or
sbb
in
and
bound
add
testl
push
fs
or
dec
add
mov
subl
pushf
xchg
or
push
clc
pushf
inc
cmp
mov
sbbl
ja
xchg
fwait
leave
js
mov
sahf
out
adc
xchg
sub
jne
shll
sub
push
jno
es
adc
out
mov
add
mov
push
aam
jne
adc
cmp
scas
mov
test
inc
adc
out
dec
add
lret
inc
cmp
inc
rcrb
mov
mov
pop
mov
jle
add
data16
pop
not
cmc
sbb
ret
js
aaa
sti
scas
shlb
sahf
push
je
shl
decl
movb
cmp
test
stos
aam
shr
xchg
push
ret
or
cmc
incl
test
cltd
and
loope
cli
or
mov
nop
gs
add
out
mov
cmpsb
mov
rorl
jmp
jmp
fld
jl
adc
shll
mov
scas
adc
fbld
push
sub
sub
push
adc
sub
jecxz
mov
ret
cmp
pop
into
xor
pop
or
add
xchg
pop
and
xchg
mov
sub
ffree
movsb
adc
sub
mov
repz
mov
or
pop
stc
ja
sbb
into
jb
out
or
xor
mov
jecxz
js
and
mov
scas
cwtl
jl
movsl
push
dec
inc
mov
sub
test
add
stos
fdivs
mov
imul
push
decb
add
test
sbb
pop
push
pop
loopne
inc
out
lods
sub
or
cli
jns
int
xchg
cmc
and
dec
jge
xchg
aam
jecxz
and
das
pop
jge
pop
jmp
jp
fisttps
repz
int
inc
mov
add
lods
sbb
cmpb
mov
adc
pushf
dec
jb
outsb
imull
push
jle
testl
je
stos
mov
es
sti
xor
lret
jnp
inc
mov
mov
dec
int3
adc
jnp
movsl
or
mov
push
jle
sahf
xchg
inc
out
jnp
add
cmp
push
mov
jmp
inc
sbb
mov
inc
xchg
pop
sbb
scas
add
jg
jle
psubd
mov
jp
dec
pushf
pusha
out
mov
shrb
int
xchg
pop
cli
repnz
mov
pop
cmp
cmp
aaa
sti
sub
cmpsb
cld
push
inc
mov
call
imul
mov
adc
mov
cwtl
roll
mov
enter
add
sbb
loopne
stos
bound
jnp
out
xchg
sbb
jp
sbb
int3
xchg
pop
add
out
mov
dec
pop
jne
out
push
mov
aad
stos
ja
push
xor
mov
jge
dec
outsb
dec
lret
inc
xchg
sub
movsb
mov
repnz
fs
dec
xor
iret
jno
out
mov
ljmp
loope
shll
fwait
leave
pop
inc
dec
cltd
inc
jle
add
sbb
pushw
mov
pusha
in
inc
xchg
jb
mov
xorb
clc
push
cli
pop
daa
lret
andl
outsl
jns
mov
popa
iret
inc
lret
sub
mov
inc
in
int
test
inc
mov
xor
mov
or
xchg
fwait
int3
jmp
xchg
pop
scas
sbb
out
imul
sbb
pop
addr16
push
test
pushf
fs
loopne
sbb
pop
imul
daa
dec
movsb
daa
aas
push
rcrl
add
dec
lret
in
cli
cmp
push
sbb
mov
xchg
ss
adcb
ss
cmp
fucom
xchg
jg
test
jnp
xchg
mov
jmp
fstl
stc
push
sbb
aam
push
pop
enter
sub
sub
ficoms
pop
sbb
inc
inc
push
pop
pop
xchg
adc
out
pop
icebp
bound
std
lods
sub
xchg
cmp
pusha
adc
xchg
xchg
pushf
mov
mov
scas
cmpsl
sub
sub
dec
add
stos
inc
leave
jecxz
jmp
mov
lahf
ret
mov
or
jns
andl
inc
mov
xchg
mov
mov
or
ret
pop
dec
mov
test
pop
xchg
out
sbb
stos
jp
jo
lds
dec
xchg
push
push
jae
mov
inc
jbe
xor
lcall
mov
push
or
xchg
push
mov
and
mov
test
mov
pop
inc
dec
andb
cs
jo
sbb
xchg
leave
jle
testb
mov
scas
add
mov
outsb
cmpsl
and
and
add
sahf
aad
cwtl
mov
jno
and
adc
jno
push
dec
lods
mov
or
and
or
int3
mov
iret
out
adc
lods
in
fistl
sbb
fcmovnu
mov
fsub
push
notb
jle
fdivrs
mov
test
movsl
test
push
in
push
add
xchg
leave
adcl
lahf
in
imul
mov
mov
or
mov
test
pop
incl
jecxz
pop
add
sbbl
xchg
xchg
cmp
jge
jp
insb
fcoml
mov
iret
aas
test
add
js
pop
xlat
dec
jl,pn
or
inc
cmpsb
ret
repnz
mov
test
push
testl
mov
dec
cmp
inc
test
clc
out
pushf
push
mov
or
ds
call
push
dec
add
xor
xor
mov
cmp
fldl2e
inc
inc
cmp
jmp
sub
repz
scas
dec
add
mov
les
push
lds
test
xchg
jbe
adc
dec
xchg
mov
shrb
lcall
shlb
pop
xor
and
add
dec
std
movsl
ss
bound
lods
aas
xor
mov
jmp
paddd
xchg
xchg
mov
mov
loope
mov
or
inc
fs
movsb
adc
addr16
mov
lods
push
aas
loopne
ss
sbb
shrl
filds
fwait
jl
inc
and
aad
loope
pop
cmp
mov
leave
test
mov
push
cmp
mov
cmp
dec
gs
jae
daa
dec
in
repnz
mov
negl
mov
cmpl
dec
push
pop
push
sub
or
inc
les
fmull
inc
inc
lret
test
pusha
fnstcw
ljmp
push
hlt
jl
ja
mov
mov
xchg
jbe
incb
inc
dec
dec
test
add
xchg
nop
mov
inc
jae
pushf
or
outsb
dec
xor
call
jb
je
rorb
insb
mov
adcb
int
ds
jae
arpl
jmp
in
or
adc
ficoms
jae
addr16
cmpsl
inc
sbb
jecxz
dec
scas
jbe
and
nop
icebp
hlt
lds
jmp
sti
lret
jmp
inc
push
dec
stos
adc
push
pop
adc
test
sahf
loopne
out
dec
addl
daa
sub
jne
stos
stc
incb
clc
leave
leave
cmp
lcall
repz
sbb
lret
mov
jg,pn
and
nop
jmp
mov
pop
daa
mov
adc
out
outsb
push
xor
sub
enter
inc
cmc
in
mov
lret
incb
rorb
imul
in
adc
xor
sahf
les
mov
dec
pop
cmpsb
mov
test
sbb
sbb
std
push
xchg
pop
cli
testb
test
jp
pop
mov
mov
jns
jno
jno
jb
ret
ss
inc
or
adc
insl
pop
daa
or
pop
out
rclb
adc
push
xchg
mov
push
sbb
in
add
cwtl
sbb
sub
aas
xor
arpl
stos
mov
xchg
and
scas
xchg
jmp
imul
mul
cmp
into
and
rcl
cmc
das
xor
lcall
mov
push
push
fcmovbe
js
mov
jp
dec
cwtl
loopne
dec
jae
mov
pop
or
fcoml
push
loopne
and
jnp
push
fdivrs
dec
xor
aas
jmp
and
or
test
aaa
repz
sbb
sbb
xor
or
lea
out
sbb
sbb
fucomi
lcall
push
lahf
mov
jle
push
scas
mov
rorl
xchg
xor
sbb
jmp
xlat
xor
repz
loop
xchg
push
mov
repz
outsl
aas
jae
jns
dec
in
ja
popa
int3
pop
test
push
mov
fildl
mov
in
ficompl
mov
int
sarb
out
jno
test
dec
data16
mov
ds
inc
add
imul
ret
push
cld
mov
push
jmp
mov
cmp
pusha
mov
in
rorl
and
push
test
xchg
or
adc
push
out
push
add
int
loop
inc
aas
in
ret
inc
imul
xor
pop
insb
shrl
lea
dec
xchg
jmp
and
push
leave
faddl
pop
arpl
mov
cmp
and
pop
dec
dec
jae
mov
xchg
inc
dec
and
mov
push
shrb
sahf
or
cld
es
and
jns
ret
imul
dec
fisubs
sahf
dec
gs
pop
and
xor
xchg
ljmp
repz
in
ficomps
inc
imul
cld
push
fidivs
cltd
lds
leave
lcall
cli
std
xchg
cmp
adc
adc
in
shrb
lds
dec
mov
int
jl
call
dec
call
test
stos
in
rcrb
pop
adc
adc
mov
aad
mov
mov
cmp
int3
jne
rorl
cld
repnz
mov
cmpsb
nop
mov
jmp
pop
jl
inc
jne
push
sarb
jecxz
sbb
xchg
loope
jns
ljmp
push
push
cs
mov
adc
mov
aad
push
add
mov
mov
inc
mov
lret
xlat
out
sub
jae
mov
or
add
sahf
enter
add
jb
popf
ret
push
clc
test
xor
cmp
push
dec
icebp
jbe
adc
arpl
add
xchg
dec
jnp
imul
add
mov
fdivrl
xor
sahf
int
add
push
xchg
mov
or
jecxz
imul
mov
and
out
pop
mov
or
out
push
subb
aas
pop
inc
movsl
cmp
push
cs
mov
push
pop
mov
xchg
sub
xor
stos
movsb
lahf
add
xchg
push
push
xchg
jnp
dec
mov
lahf
mov
mov
out
fdiv
test
loopne
out
ret
mov
test
ljmp
inc
mov
sub
push
ret
inc
jg
ffreep
cmpsb
xor
cld
loope
xor
and
repz
inc
fstps
ret
pop
inc
testl
or
jne
test
or
or
call
ficoms
inc
cmp
or
mov
imul
sbb
xchg
shll
mov
mov
test
lret
pop
xchg
xor
jp
ret
movsl
mov
mov
aas
lcall
inc
rcll
mov
sbbl
testl
ja
mov
xor
mov
xor
cmpsb
lahf
add
pop
lahf
ds
push
jno
cld
jne
push
lahf
outsl
or
movb
jns
into
mov
int
rcr
push
lahf
sbb
ret
pop
test
shl
loope
mov
mov
mov
into
sbb
test
cwtl
inc
sbb
ficoms
mov
les
or
loop
sbb
push
mov
lret
sbb
jno
hlt
sub
jp
and
loopne
divb
pusha
lret
call
outsb
xor
std
jne
pop
jmp
jecxz
testl
pop
mov
add
mov
lock
sub
test
test
test
lds
mov
fisubl
cmp
sbb
aaa
mov
nop
lods
xor
clc
lods
or
mov
lea
imul
fisubs
in
push
cs
add
xor
cmp
test
mov
lock
inc
inc
adc
mov
mov
dec
adc
hlt
cs
ja
dec
and
pop
xchg
pusha
jmp
or
jg
or
sub
mov
cwtl
sub
ds
data16
dec
or
shl
mov
leave
xor
mov
or
sub
cltd
cmp
mov
enter
leave
fs
push
xor
pop
sub
push
sub
stc
push
inc
mov
loope
lcall
push
sbb
push
mov
jle
add
lea
mov
push
cmpsb
aaa
rcr
nop
sub
aas
inc
cmpb
cs
sbb
js
jnp
mov
or
xchg
adc
mov
push
sub
push
cmp
mov
jge
add
std
cli
pop
push
sub
push
or
or
dec
sarb
sbb
cmpl
and
mov
lods
mov
pop
scas
bound
sbb
pop
and
adc
arpl
pop
and
jnp
aam
fs
pop
fdecstp
cmp
mov
sbb
push
cmp
movsb
adc
clc
xchg
outsb
push
add
sbb
shl
scas
outsb
xchg
out
cmp
pop
fdivr
and
repnz
mov
les
mov
push
ret
call
icebp
addb
movsl
in
inc
fwait
mov
mov
dec
mov
filds
faddl
xlat
push
out
arpl
test
inc
cmpsb
pop
int
rdmsr
push
push
pushf
adc
xor
add
scas
inc
imul
adc
fdivr
mov
lcall
loop
xor
push
add
cmpsb
dec
pop
lea
and
sarb
das
scas
mov
jg
jge
push
loop
xor
popa
js
or
sbb
lret
inc
push
inc
sbb
sbb
mov
jmp
out
inc
push
mov
test
les
push
xchg
dec
loopne
pop
jg
outsb
imul
stc
mov
pusha
aaa
mov
push
dec
repz
or
ds
or
das
cs
cmp
add
xor
in
inc
imul
in
dec
fidivrs
add
mov
jae
roll
adc
or
inc
dec
mov
push
loopne
daa
out
inc
into
mov
jge
lds
dec
lods
pop
ret
or
loopne
and
mov
mov
stc
in
aad
sbb
pop
jge
xchg
hlt
cld
les
jb
bound
jnp
mov
into
orl
pushf
push
cmc
fcom
jp
adc
adc
incb
loopne
mov
sub
push
push
sub
insb
xchg
push
and
les
pusha
cmc
cli
fisttps
loopne
adc
out
add
fsubrl
inc
xchg
pop
out
mov
mov
idiv
leave
push
dec
add
cmp
xchg
inc
adc
mov
mov
add
mov
dec
loopne
mov
or
push
add
and
loopne
cwtl
aas
mov
dec
mov
jle
xchg
jo
cmp
lahf
les
push
push
mov
out
test
xchg
mov
xchg
push
fwait
lock
mov
call
jl
add
out
mov
jb
adc
mov
das
pop
insb
xchg
cwtl
push
hlt
inc
mov
stc
sub
inc
add
ljmp
mov
adc
xlat
out
stos
xchg
call
out
jne
ljmp
jbe
dec
push
movsl
jmp
dec
stos
cmpb
std
or
adc
imul
or
in
repz
pop
mov
aas
push
cmpsb
shl
push
mov
cmp
adc
movsb
scas
rorl
lret
jp
popf
clc
jge
jbe
aaa
leave
xchg
push
xchg
push
mov
mov
push
dec
aas
mov
xor
lods
out
out
mov
add
dec
cmpsl
pop
xor
mov
mov
add
pop
pushl
mov
fnstcw
addl
and
pop
or
add
sti
adc
add
lock
jo
dec
xorl
rorl
jle
xchg
aaa
mov
adc
ds
fistl
jo
nop
mov
jle
push
mov
xor
das
lret
std
scas
mov
sub
lds
fisubs
out
mov
aaa
dec
stc
xchg
into
ss
in
inc
dec
mov
out
push
and
jmp
dec
sub
xchg
pop
out
popa
outsl
adc
mov
jae
loope
mov
inc
pop
xchg
pop
push
mov
mov
xor
mov
sub
or
call
inc
test
or
enter
cmc
push
bound
mov
shlb
inc
pop
sbb
xchg
add
enter
inc
push
inc
push
mov
or
xor
xchg
int
test
xchg
fwait
and
cmpsl
jne
xchg
lea
arpl
fstpl
dec
sub
jnp
mov
lret
hlt
mov
jb
fldcw
popa
xchg
sub
fdivs
rcll
nop
xchg
imul
loop
push
test
jbe
out
cmp
ss
pop
stos
xor
xchg
mov
adc
push
lods
js
enter
addl
add
daa
pop
jae
clc
shll
loope
inc
outsb
in
adc
es
ss
sbb
cmp
mov
in
lea
int
in
enter
mov
jae
xchg
mov
pop
sahf
add
adc
xchg
mov
popf
adc
loop
dec
jo
into
cmpsl
adc
bound
lcall
mov
adc
in
sub
sub
int3
pop
push
aas
cmp
insl
pop
out
sti
mov
sbb
sbb
sub
inc
pop
pusha
inc
sbb
bound
dec
aas
les
gs
sti
imul
mov
test
add
pusha
repnz
dec
call
mov
loope
push
inc
xchg
iret
jae
push
xchg
xchg
lods
movd
mov
adc
pop
cmp
and
test
scas
test
jae
repz
arpl
sub
scas
ror
dec
jecxz
cmp
inc
leave
xchg
sbb
push
dec
notb
pushf
inc
and
pop
sbb
sub
and
jne
pop
sbb
outsb
mov
popa
add
nopl
and
addl
sbb
jl
lahf
repz
dec
loopne
push
fnsave
mov
push
and
lahf
xchg
mov
or
std
in
push
and
dec
in
dec
cmp
pop
cmp
out
test
shll
pushf
sub
mov
in
add
cmp
mov
data16
out
nop
push
xor
mov
pop
popf
lock
dec
cld
testb
sub
xchg
aam
test
scas
inc
repz
sub
sahf
push
dec
mov
jge
call
addb
shll
mov
push
nop
or
mov
adc
std
pushf
arpl
loopne
jge
call
mov
into
int
ss
dec
adc
flds
xchg
xor
or
xor
cmpsb
sub
cmp
and
int
dec
xchg
fldt
and
ret
sub
sub
mov
bound
enter
mov
mov
mov
or
or
xchg
and
mov
cwtl
inc
iret
lahf
lea
addr16
scas
mov
add
sarl
xor
leave
or
mov
sub
and
xchg
sub
and
xchg
ss
inc
shll
jecxz
mov
clc
nop
stos
cwtl
sbb
in
rclb
pop
inc
xor
cmpsl
push
dec
jno
mov
mov
pushf
jb
xor
xchg
jno
mov
fimuls
inc
mov
xor
mov
loope,pt
fdivrl
lock
sub
movsl
hlt
push
cltd
dec
jae
cmpsl
rolb
inc
adc
popa
mov
lcall
fmulp
pop
bound
push
add
pop
fists
sbb
dec
fs
add
adc
fs
push
insb
movsb
jl
dec
test
in
hlt
or
sbb
in
and
xor
add
adc
fs
push
insb
movsb
jl
dec
test
in
hlt
or
sbb
in
and
cmp
sbb
adc
pushf
push
insb
movsl
jl
dec
test
loopne
hlt
or
sub
sar
loopne
push
lods
fs
xchg
xchg
pop
sbbl
test
pushf
mov
repz
in
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
adc
xor
sub
aaa
mov
or
push
add
add
add
dec
add
add
add
lahf
add
add
push
add
add
test
roll
je
in
add
test
xchg
push
add
add
addl
add
inc
add
adc
add
dec
add
add
add
outsl
add
outsl
add
add
add
add
add
add
add
add
add
sti
add
cmp
inc
add
cmp
add
add
xchg
add
add
jl
sub
inc
add
add
dec
add
loop
in
add
add
add
add
data16
add
mov
add
in
and
dec
add
adc
lea
out
add
add
add
jnp
or
in
add
arpl
inc
add
sbb
int3
add
push
add
add
add
daa
add
fwait
add
clc
add
add
add
adc
int3
add
add
add
add
add
xchg
add
sub
pop
add
add
add
add
xchg
add
add
ja
or
adc
rolb
add
add
add
xchg
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
dec
add
add
add
add
add
add
cmp
inc
add
add
add
ja
lahf
add
loope
push
add
mov
add
add
add
add
add
add
add
sbb
jecxz
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
test
jae
cmp
rolb
loope
push
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
xor
add
add
add
add
add
add
add
add
add
add
lds
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
scas
add
add
jnp
aam
in
add
mov
pop
add
add
dec
add
add
add
movsb
add
addl
add
sub
jmp
xchg
add
add
add
ja
sbb
rolb
or
xor
mov
add
add
ja
xchg
add
add
add
add
add
xor
push
add
add
add
add
add
mov
add
add
mov
cmp
inc
add
add
add
add
jmp
in
add
loop
inc
add
add
add
add
roll
or
addl
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
addl
fisttps
adc
xchg
sub
imul
push
leave
push
fldcw
xor
test
into
shrl
jnp
into
sub
icebp
pop
pop
sbb
int3
push
xor
dec
pop
mov
xor
sbb
pop
pop
push
xorb
cmp
push
mov
movsb
jg
jge
sub
add
mov
pop
nop
aam
xor
mov
sti
mov
shlb
adc
fs
fbstp
fsubrp
popa
stc
adc
out
loopne
push
shll
mov
mov
mov
jp
mov
test
jle
inc
sbb
xchg
jge
test
lret
fadd
stos
pop
pop
and
testb
mov
mov
fidivs
sbb
dec
or
clc
mov
cmc
in
fs
mov
out
scas
or
push
lock
das
push
dec
pop
pop
or
invd
cltd
add
pop
jns
ds
sub
jmp
arpl
sub
mov
dec
adc
cltd
pop
in
out
fs
outsb
cltd
or
movsl
dec
daa
das
cmp
sbb
mov
push
lods
cli
xchg
dec
scas
out
jnp
sbb
mov
mov
gs
sti
xor
add
aad
popf
insl
jo
adc
mov
jo
lret
out
test
scas
es
add
and
mov
cmp
inc
inc
es
in
popf
subb
pusha
push
inc
rorb
add
es
sub
jecxz
shr
push
arpl
jg
xchg
xchg
test
cmp
test
cmpb
negb
bound
jecxz
dec
push
lret
cmp
adc
cwtl
pop
lea
in
push
jp
sbb
jg
push
mov
inc
mov
add
hlt
push
aad
inc
jns
cwtl
jle
jmp
adcl
jp
lods
faddl
outsl
pop
or
mov
add
cmp
bound
out
mov
fmull
mov
stos
cmpsl
sbb
jp
stos
stc
xchg
inc
stc
inc
fistl
popa
push
fldcw
xchg
cmp
scas
add
nop
testb
inc
pushf
insl
jo
xor
js
xor
pop
push
pcmpgtw
pop
stos
pop
add
les
je
cmpsl
mov
add
inc
xchg
push
inc
push
pop
mov
fidivl
inc
sbb
push
pusha
sbb
enter
jb
addr16
dec
cmp
rorl
loop
jg
dec
fadds
lods
mov
es
and
mov
xorb
scas
movsl
gs
cmp
xor
iret
xor
xchg
adc
mov
mov
scas
or
repnz
or
cwtl
dec
mov
or
adc
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
