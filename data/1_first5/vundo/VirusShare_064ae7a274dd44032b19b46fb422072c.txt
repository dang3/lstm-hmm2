mov
or
jl
rclb
dec
xor
or
xchg
inc
into
int
sarb
and
sahf
daa
dec
stos
in
inc
ret
stos
add
cmp
ljmp
pushf
mov
fldenv
mov
push
cmpsl
xchg
inc
arpl
cli
js
ja
mov
mov
sub
std
cmp
mov
pop
in
lcall
or
mov
push
xor
add
mov
pop
ds
lock
jo
rcr
mov
xchg
pxor
idivb
dec
mov
shlb
sub
cmp
outsl
pop
ss
cmp
int
lret
xor
or
sub
aaa
int
cmpsb
arpl
mov
sti
mov
xchg
es
inc
push
mov
lcall
mov
incl
orl
push
je
push
inc
pop
and
xchg
dec
mov
mov
in
adc
mov
dec
leave
test
inc
ljmp
cmp
popa
jns
or
push
in
mov
sub
movsb
sbb
jp
dec
repz
movsb
jp
test
gs
out
jmp
aam
pop
fnstenv
fmulp
push
in
xchg
or
loopne
addr16
fsubrp
repnz
popa
fcoms
testb
mov
pop
movsb
push
inc
in
jle
repz
xchg
aaa
push
mov
push
push
push
mov
add
cmp
daa
mov
push
pop
push
push
xor
jne
jmp
push
pop
push
mov
leave
jne
jp
out
out
xorl
sbb
jns
xchg
dec
adc
je
adc
cmp
ljmp
in
jp
pop
xchg
push
add
pop
mov
xor
push
push
test
inc
add
call
notb
cmp
out
lea
sub
lds
bound
lahf
mov
adcb
mov
pop
or
je
ret
xor
push
push
and
jne
jmp
out
pop
jne,pn
js
xor
jne
jp
push
test
sbb
pop
xchg
stos
pop
jg
xor
lret
cmp
je
and
xor
notl
mov
jp
sub
cmp
mov
repz
lea
pop
call
test
jne
push
push
test
inc
add
call
or
pop
mov
jp
inc
add
jmp
dec
lods
cmp
xor
mov
pop
ret
push
push
push
push
sub
add
call
inc
jmp
pop
jmp
scas
add
jmp
xlat
xorb
dec
dec
sar
pop
mov
push
push
sub
jne
jmp
mov
sti
cli
movsl
push
pop
inc
cmp
int
pushl
jp
xor
pop
mov
mov
pop
xor
push
xor
test
pushl
jns
je
rcl
lock
loop
pop
add
pop
call
mov
push
clc
or
add
call
iret
jg
sbb
and
clc
adc
add
jmp
insl
gs
clc
shl
xchg
jmp
inc
dec
xchg
addl
jmp
xor
push
push
push
push
xor
jne
jmp
cltd
inc
inc
out
fildll
xor
jne
jp
adc
leave
jmp
cmp
cmpsb
rorb
jb
jns
inc
aad
shrl
mov
sti
mov
jae
idivb
inc
and
movl
add
es
add
push
push
push
and
lea
add
call
and
sbb
or
lahf
jl
movsb
add
jmp
das
push
sbb
sub
loopne
mov
shl
push
push
clc
cmp
sbb
sub
mov
nop
mov
jae
rol
adc
add
pop
pop
xor
push
clc
rcr
or
add
call
mov
rolb
and
clc
xor
add
jmp
ss
add
inc
and
add
add
or
add
or
cmp
sbb
and
xchg
cmp
jmp
push
call
push
push
push
test
inc
add
call
dec
jp
inc
add
jmp
pop
and
pop
mov
push
push
xor
jne
jmp
outsl
jns
pop
js
add
leave
xchg
jp
xchg
or
stos
loop
mov
rclb
pop
add
pop
test
jns
adc
or
in
sub
mov
pop
push
push
clc
sub
mov
mov
jae
rcr
adc
add
pop
pop
jmp
pop
jmp
push
clc
add
call
int3
movsb
pop
jno
dec
xchg
clc
mov
shl
add
jmp
scas
stos
adc
in
cmp
dec
and
jmp
icebp
out
sbb
add
daa
cmp
mov
sub
push
push
xor
add
call
in
xor
jmp
mov
add
or
mov
xchg
jmp
pop
push
push
clc
mov
sar
mov
add
call
out
test
xchg
xchg
clc
xor
add
jmp
cmp
insl
push
fistps
add
add
add
add
or
add
pop
outsl
in
pop
lock
addl
jmp
push
push
push
clc
sub
mov
nop
mov
jae
rcr
add
add
pop
pop
call
jmp
push
push
and
jne
jmp
mov
xor
jne
jp
xlat
add
sahf
lret
jo
jmp
dec
aaa
outsl
stos
ret
out
jne
dec
jb
jns
jb
movsb
jns
je
pop
iret
mov
jp
xchg
out
cmp
lea
pop
call
push
push
sub
jne
jmp
mov
pop
inc
mov
jne
jp
add
sbb
xor
jmp
ja
popa
pop
cwtl
stos
dec
jb
jns
sahf
insl
pop
pop
xchg
je
inc
cmp
jl
xchg
mov
in
xchg
or
arpl
fldl
call
push
push
test
add
call
add
add
out
push
cmpsb
jbe
inc
add
jmp
cmp
js
mov
pop
pop
push
push
and
jne
jmp
test
lret
dec
shlb
leave
jne
jp
imul
sysret
mov
fsub
inc
cs
mov
jle
push
jns
pop
mov
push
je
int
mov
sarb
sbb
mov
pop
sub
push
push
and
add
lea
call
pop
sti
pop
push
ds
pop
jmp
add
cs
cmp
add
jmp
cmp
mov
pop
add
push
push
sub
jne
jmp
inc
nop
nop
pop
sub
jne
jp
xchg
inc
filds
cmp
jns
fadd
inc
jbe
push
je
inc
dec
jno
add
ljmp
jmp
cltd
lea
lea
pop
mov
add
add
push
clc
shl
sub
mov
mov
jae
rcl
sub
add
pop
pop
add
mov
add
push
clc
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
mov
push
push
push
test
add
call
aaa
mov
inc
add
jmp
rcr
stos
mov
inc
xor
leave
jp
pop
push
push
push
push
test
add
call
jns
cwtl
dec
out
cmp
mov
add
jmp
sub
push
mov
mov
cli
lahf
sbb
outsb
stos
mov
loop
push
push
call
push
push
test
add
call
mov
sub
pop
jle
inc
add
jmp
pop
notl
xor
in
pop
pop
pop
push
push
sub
add
call
inc
sbb
ror
adc
add
add
dec
pop
insl
jmp
pop
push
push
clc
shl
sub
mov
nop
mov
jae
ror
test
add
pop
pop
push
add
mov
push
clc
or
sub
mov
sub
mov
nop
mov
jae
rol
and
add
pop
pop
push
push
clc
rcr
or
rcl
add
call
shll
repz
clc
sar
mov
or
add
jmp
shld
xor
xchg
jmp
int3
sub
js
sub
jae
add
stos
ss
repz
add
push
push
and
jne
jmp
leave
and
scas
movsb
xor
jne
jp
shrb
mov
jo
jmp
jecxz
inc
lock
test
inc
jb
jns
outsb
adc
jns
je
push
inc
mov
std
enter
and
add
pop
add
add
mov
push
clc
sub
mov
nop
mov
jae
shr
xor
add
pop
pop
pop
push
call
push
clc
adc
sub
add
call
mov
inc
cmp
push
and
clc
sub
mov
cmp
add
jmp
lds
popa
imul
clc
xor
xchg
jmp
mov
sub
xadd
sub
addl
jmp
mov
push
push
sub
jne
jmp
push
push
jl
or
adc
xor
jne
jp
pop
pop
cmp
outsb
jo
jmp
dec
xchg
mov
sub
cld
rorl
fdivl
daa
mov
push
adc
fistpll
cltd
rcl
add
pop
xor
push
push
push
clc
mov
add
call
inc
mov
cmp
and
clc
cmp
add
jmp
pop
inc
sub
fildl
shl
xchg
jmp
ror
sbb
ja
jmp
call
add
push
push
test
add
call
rorb
sbb
sbb
cmp
inc
add
jmp
mov
pushf
mov
pop
call
pushl
push
push
xor
add
call
dec
and
jmp
pop
jmp
xchg
lods
in
imul
rol
mov
add
movzbl
push
push
and
add
lea
call
sub
stos
ja
cmp
shr
sbb
or
add
adc
sub
sbb
inc
adc
xchg
pop
jmp
pop
pop
sub
push
push
push
and
jne
jmp
inc
mov
fucomip
sbb
jp
push
mov
pop
jo
jmp
aad
clc
fidivs
jb
jns
mov
mov
addr16
add
je
icebp
jb
ljmp
mov
mov
movsb
and
add
add
mov
push
push
xor
add
call
sub
int
rorl
pop
jmp
sub
add
shlb
rol
or
enter
in
add
xor
mov
jae
shl
sub
add
pop
pop
push
mov
add
push
clc
shl
mov
add
call
jmp
xchg
mov
inc
and
clc
add
jmp
frstor
xchg
jmp
jnp
imul
add
sbb
loop
add
and
push
push
test
lea
lea
call
mov
or
inc
add
jmp
jg
fistl
sahf
jb
jg
pop
mov
pop
pop
add
call
push
push
test
add
call
lcall
add
jmp
rorl
lock
pop
push
push
and
jne
jmp
mov
or
cltd
jl
shlb
shlb
and
lahf
aad
imul
shl
aam
stos
inc
adc
sbb
nop
jns
push
mov
xchg
jns
je
pushf
inc
dec
mov
push
pop
push
mov
jp
push
loopne
xchg
mov
fldl
mulb
push
popf
test
xchg
jmp
or
or
adc
jne
jp
and
pop
jo
jmp
addr16
out
mov
jns
dec
dec
jp
adc
in
pop
lcall
add
in
call
lret
add
push
push
clc
add
call
xor
and
loope
mov
outsb
insl
xrelease
clc
adc
mov
add
jmp
adcl
mov
leave
shr
xchg
jmp
leave
or
jne
int3
push
addl
jmp
add
push
push
push
and
add
call
ficomps
xchg
jp
adc
add
add
idiv
jecxz
push
push
push
push
and
add
call
dec
loopne
imul
pop
jmp
or
jle
lds
jmp
xchg
pushf
inc
adc
lret
inc
cmp
pop
call
push
clc
or
xor
rcl
add
call
mov
lods
sbb
xchg
clc
add
jmp
clc
mov
push
cmpsb
int3
clc
sbb
sbb
xchg
jmp
xor
mov
addl
jmp
pop
pop
push
push
test
add
add
call
cli
inc
xchg
mov
cmpsb
push
xchg
and
pop
jp
inc
add
jmp
repnz
adc
in
cmp
mov
pop
mov
add
push
push
and
add
call
arpl
sarl
mov
pop
dec
out
jmp
pop
jmp
push
test
add
jmp
arpl
jae,pn
xchg
popf
xor
int3
jb
dec
push
push
test
inc
lea
call
int3
pop
xchg
clc
out
std
or
sbb
sarb
inc
add
jmp
jb
inc
push
or
es
jg
mov
pop
push
push
push
push
test
add
lea
call
add
ret
add
jmp
addb
mov
aas
jmp
jle
pop
push
push
push
sub
jne
jmp
mov
imul
daa
push
push
jo
fsubl
xor
push
jo
jmp
adc
jmp
push
sbb
push
and
fstps
mov
jns
je
les
mov
ss
jp
adc
cmpsb
push
fimuls
add
push
call
push
push
and
jne
jmp
stos
add
in
fildll
icebp
xor
jne
jp
into
push
jmp
in
sbb
jns
and
add
cmc
inc
push
pop
jns
je
push
cmp
stos
lea
pop
pop
mov
push
clc
or
sub
mov
nop
mov
jae
ror
and
add
pop
pop
push
push
push
clc
adc
add
call
jnp
fs
xchg
jecxz
movsb
int3
in
je
add
add
jmp
add
dec
shl
and
into
clc
ror
mov
sbb
xchg
jmp
in
scas
jns
push
aaa
sbb
pop
addl
jmp
call
add
add
push
push
xor
lea
lea
call
dec
add
jmp
pop
jmp
mov
push
adc
add
push
push
clc
sub
mov
nop
mov
jae
shl
or
add
pop
pop
push
push
push
push
and
add
call
cmp
in
mov
jmp
pop
jmp
fld
nop
push
jmp
ret
or
or
and
data16
aaa
aam
jecxz
call
pop
call
push
push
and
lea
add
call
popf
and
add
lods
arpl
cmp
sub
jmp
pop
mov
push
push
test
add
lea
call
mov
add
jmp
test
cli
mov
xor
or
push
mov
pop
add
mov
push
push
push
sub
inc
add
call
cli
jmp
pop
jmp
mov
rolb
or
adc
or
add
outsb
jbe
loopne
push
push
push
sub
jne
jmp
shll
pusha
daa
movsb
pop
xor
jne
jp
push
scas
add
scas
pop
icebp
jo
jmp
sub
aam
sahf
imul
movsl
mov
jns
je
in
cmc
sub
dec
scas
in
xor
adc
pop
mov
add
add
pop
push
call
push
push
and
inc
add
call
es
push
jmp
pop
jmp
dec
cmp
jo
pop
add
jmp
inc
jmp
pop
mov
add
push
push
sub
add
call
mov
shlb
or
cmp
or
push
cmp
mov
jecxz
mov
push
push
xor
lea
add
call
or
cwtl
addr16
scas
jmp
pop
jmp
in
lods
dec
jo
add
jmp
popa
insl
push
sbb
int
jmp
pop
add
push
clc
mov
sub
add
call
xchg
add
clc
adc
sbb
popf
leave
xchg
xchg
clc
adc
shr
adc
add
jmp
stos
pop
ja
clc
sbb
xchg
jmp
pop
sub
mov
add
addr16
cmp
push
push
push
push
clc
or
sub
mov
mov
jae
rcr
test
add
pop
pop
call
pop
push
push
test
add
call
pushf
and
jmp
xchg
xlat
cmp
rolb
pushf
negl
orl
out
mov
push
clc
sub
sub
mov
mov
jae
shl
test
add
pop
pop
push
call
push
push
test
lea
lea
call
fucomi
ds
pusha
test
add
movb
mov
pop
mov
xor
push
push
push
test
add
call
insl
es
cmc
into
fnstenv
inc
add
jmp
sbb
sub
pushl
push
push
clc
sbb
cmp
shr
add
call
pop
inc
jne
pop
push
sub
inc
and
clc
add
jmp
lds
clc
add
sbb
xchg
jmp
dec
push
sbb
mov
and
cltd
cmp
jmp
call
push
push
and
add
lea
call
andl
fiadds
sub
adc
push
adc
and
inc
int
rorb
add
fsubrl
push
push
and
inc
lea
call
inc
cmpsl
sub
jmp
adc
mov
add
or
add
jmp
or
test
ret
push
pop
mov
loope
mov
push
push
sub
add
lea
call
nop
stos
inc
iret
test
sbb
or
addr16
pop
pusha
add
or
das
into
and
or
fwait
mov
loopne
pop
push
clc
sub
sar
add
call
jns
and
add
sbb
add
jmp
push
lods
loop
mov
repz
add
or
add
mov
mov
lcall
bound
cmp
rcrl
push
test
add
call
inc
fs
and
add
mov
and
inc
add
jmp
push
scas
data16
ja
sub
mov
pop
pop
pop
push
push
clc
add
call
imul
enter
stos
pop
aas
sub
add
add
jmp
imul
in
je
add
push
add
add
lds
cmc
test
add
push
hlt
aaa
cmp
fisubrs
push
push
push
sub
add
add
call
cmp
or
test
or
adc
popf
cltd
rcrl
sbb
add
jmp
sub
cmp
notb
loopne
push
push
clc
add
call
inc
ljmp
push
int3
add
push
and
clc
rol
mov
xor
add
jmp
call
add
xchg
jmp
push
pop
pop
jmp
ret
es
addl
jmp
push
push
push
test
add
lea
call
int
jbe
inc
add
jmp
sbb
movb
into
sub
pop
ret
push
mov
push
clc
adc
sbb
shl
sub
mov
nop
mov
jae
shr
sbb
add
pop
pop
add
push
push
push
test
inc
add
call
adc
dec
cwtl
outsb
jnp
je
inc
add
jmp
sub
or
pop
dec
in
mov
pop
push
xor
push
push
test
add
call
arpl
neg
jle
inc
add
jmp
lret
loopne
jo
sub
jbe
pop
mov
push
push
xor
add
call
test
clc
jmp
pop
jmp
repnz
jmp
leave
sub
and
xor
testb
jmp
pop
mov
mov
mov
push
clc
shl
or
sub
mov
mov
jae
ror
add
add
pop
pop
mov
push
push
sub
jne
jmp
add
mov
shlb
and
in
push
xor
jmp
xchg
imul
test
insl
mov
cli
call
push
and
subl
sarb
jb
popf
test
or
les
mov
push
clc
add
call
popa
cmc
and
shr
shl
sub
add
jmp
xchg
mov
mov
add
add
xchg
jmp
insl
adc
addl
jmp
mov
mov
jmp
push
push
test
add
call
adc
sub
adc
inc
add
jmp
pushf
int3
lea
inc
insl
out
adc
add
sub
jbe
pop
pushl
popl
add
push
push
xor
add
call
and
adc
jmp
pop
jmp
imull
dec
jecxz
ret
or
movsl
fcoml
lret
mov
jmp
pop
pushl
popl
push
push
test
add
lea
call
push
push
mov
sub
testb
add
jmp
popf
imul
adc
pop
add
pushl
push
push
and
jne
jmp
test
mov
and
stos
loopne
add
shlb
sbb
jno
and
lods
sub
cltd
jne
xorb
in
cltd
jb
or
loop
pop
cwtl
jne
fmuls
pop
mov
xor
mov
lea
pop
popl
add
push
push
test
add
call
scas
ds
and
in
push
jle
inc
add
jmp
ret
xor
sbb
jbe
pop
pushl
push
clc
sub
add
call
in
pusha
aad
jne
mov
fimuls
je
add
shr
sub
cmp
add
jmp
cmp
mov
clc
sbb
shl
xchg
jmp
pop
aam
sbb
mov
popl
push
push
xor
jne
jmp
mov
pop
xor
jne
jp
mov
ja
popa
jo
jmp
push
sub
mov
shlb
loope
and
cwtl
pop
mov
in
or
out
add
push
jmp
mov
jp
loope
and
mov
mov
les
add
push
clc
shl
shr
adc
add
call
cmpsb
cmpsb
jge
je
add
mov
mov
sub
add
jmp
mov
clc
sbb
xchg
jmp
sbb
push
cld
cmp
adc
cmp
pushl
popl
push
push
and
jne
jmp
xchg
jns
xor
jne
jp
mov
inc
add
loop
je
and
jo
jmp
inc
cmp
adc
push
orb
lds
pop
mov
inc
mov
inc
pop
inc
ret
jns
je
gs
sbb
jp
inc
aaa
out
out
cwtl
push
dec
push
add
pop
add
mov
add
push
push
and
jne
jmp
pop
ret
pop
inc
mov
add
divb
jp
idivl
loop
xchg
cmpsb
pop
or
jo
jmp
negl
push
lret
nopl
jl
repz
fnstsw
jns
je
iret
pop
sub
or
jp
lds
or
add
add
add
push
clc
sbb
add
call
ret
sarl
push
mov
and
clc
cmp
adc
add
jmp
pop
cld
rclb
xchg
jmp
loop
clc
jae
enter
lret
addl
jmp
pushl
push
push
xor
jne
jmp
pop
pop
and
cmpsl
movsl
cmpsb
xor
jne
jp
call
mov
lods
mov
shr
and
rorb
mov
jb
jns
sbb
jecxz
push
or
sbb
outsl
jb
jb
mov
outsb
dec
loope
fistps
or
inc
imul
pop
call
push
clc
sbb
add
call
and
xchg
clc
or
adc
add
jmp
cltd
push
inc
sbb
jo
xchg
jmp
clc
daa
fistl
in
addl
jmp
push
push
clc
sub
mov
mov
jae
shl
add
add
pop
pop
push
call
push
clc
shl
sub
sub
mov
nop
mov
jae
rcl
sub
add
pop
pop
cmpl
je
push
push
sub
jne
jmp
sar
sub
mov
adc
jp
test
call
mov
jo
jmp
fisttpll
cmp
jecxz
jecxz
push
jns
je
lahf
leave
push
outsb
dec
mov
jmp
lea
add
pop
push
push
call
push
clc
mov
add
call
int3
enter
xchg
clc
xor
add
jmp
sbb
xchg
mov
add
or
add
or
push
mov
dec
pusha
scas
mov
mov
sub
jmp
add
cmpl
je
pusha
push
clc
sbb
ror
add
call
push
cmp
loopne
movsl
mov
clc
add
jmp
inc
mov
int3
scas
in
sbb
fldl
xor
cmp
xchg
jmp
fdivp
movsl
fstps
addl
jmp
mov
push
push
xor
lea
lea
call
sahf
imul
pop
jmp
gs
add
add
add
jmp
pop
shl
push
push
sub
add
call
aad
inc
mov
xchg
mov
pop
jmp
sub
and
sbb
pop
push
push
push
and
lea
lea
call
inc
insl
jne,pt
jmp
pop
jmp
movsb
push
cmp
mov
lds
leave
mov
in
push
push
push
test
add
call
xor
sub
jo
cwtl
test
inc
add
jmp
cmp
mov
sub
je
pop
push
push
push
clc
mov
sub
mov
mov
jae
ror
adc
add
pop
pop
call
mov
push
push
clc
add
call
inc
cs
push
leave
jp
fildll
push
and
clc
sar
sub
add
jmp
adc
cs
fcomp
loope
cmp
xchg
jmp
mov
inc
addl
jmp
push
call
pushl
push
clc
add
call
pop
mov
add
add
jmp
mov
xchg
clc
adc
xchg
jmp
fwait
addl
cmp
fld1
cmp
add
sbb
push
clc
add
call
xchg
int3
pop
ret
test
sub
shr
add
add
jmp
pop
push
adc
and
jmp
jbe
push
push
jae
add
jns
add
jmp
mov
push
push
test
add
call
adc
movsl
cld
inc
ja
enter
je
inc
add
jmp
movsl
mov
divb
sub
push
clc
sub
mov
nop
mov
jae
rcl
sbb
add
pop
pop
mov
add
push
push
push
xor
jne
jmp
stos
jnp
sti
or
push
xor
jne
jp
test
pop
xchg
push
scas
pop
dec
pop
push
jo
jmp
mov
fbstp
jns
jecxz
xor
jns
je
pop
jle
adcl
mov
jp
arpl
cmp
mov
add
pop
push
push
clc
sar
mov
add
add
call
out
ret
adc
lcall
shl
add
jmp
out
stc
clc
pop
std
lock
lock
add
xchg
jmp
pop
xchg
add
pop
fsubr
xlat
pushl
push
push
test
add
call
mov
nop
sub
add
ret
add
or
adc
push
sub
mov
pop
call
push
push
push
and
jne
jmp
jae
inc
fnstenv
xor
jne
jp
pop
out
jo
jmp
ja
adc
jne
loope
aam
mov
jbe
cmp
in
sbb
daa
xor
pop
add
lea
pop
push
push
push
clc
sub
sub
add
call
hlt
iret
xor
movsb
xchg
pop
xchg
clc
cmp
add
jmp
int
fadds
shr
sar
xchg
jmp
jns
cs
insl
push
sub
mov
add
cmp
call
popa
mov
push
push
test
add
call
adc
and
jp
inc
add
jmp
jno
push
xchg
push
stos
movzbl
pop
add
push
clc
cmp
xor
add
call
add
mov
xchg
clc
add
jmp
push
aad
pop
jo
jbe
or
xchg
jmp
outsl
dec
faddl
or
cmp
addl
jmp
pushl
push
push
and
lea
add
call
js
dec
arpl
fsub
jmp
pop
jmp
out
or
inc
add
add
jmp
inc
daa
loop
in
pushl
push
push
push
and
add
call
cmc
sbb
int
jmp
pop
jmp
jno
add
jmp
push
outsb
cmp
repz
push
ret
pop
call
push
clc
sub
mov
mov
jae
shr
sub
add
pop
pop
add
push
push
and
jne
jmp
mov
in
lret
pop
test
divb
jp
add
sub
adc
cs
jecxz
dec
jns
mul
dec
mov
je
lods
shll
mov
fs
lea
pop
decl
push
push
and
jne
jmp
stos
fisttpll
xor
jne
jp
jge
inc
dec
add
into
jg
mov
pshufw
iret
repz
jns
fucomi
jno,pn
push
push
mov
je
mov
xor
stos
enter
decl
push
lahf
push
scas
mov
add
mov
push
push
test
add
add
call
mov
aas
ret
inc
mov
je
inc
add
jmp
mov
mov
inc
jb
mov
pop
or
jne
pop
push
push
and
jne
jmp
fiadds
adcl
shlb
jp
je
mov
ds
into
test
push
and
movsb
inc
jb
jns
movsl
xchg
idiv
mov
sbb
jmp
jns
je
lcall
pop
outsl
test
rcll
mov
add
add
pop
pop
push
push
and
jne
jmp
dec
in
imul
sbb
shll
jmp
ljmp
jb
jns
adc
adc
mov
mov
in
jae
xor
add
and
in
lret
xlat
sbb
pop
leave
ret
push
push
clc
sub
mov
sub
mov
mov
jae
shl
test
add
pop
pop
mov
push
push
test
lea
add
call
clc
inc
aam
in
int3
jno
int3
lds
rolb
inc
out
adc
incb
push
addr16
mov
pop
push
mov
mov
push
push
sub
jne
jmp
int
call
out
xlat
xor
jne
jp
popa
sbb
insl
insb
inc
scas
jo
jmp
mov
push
push
jno
ja
loop
or
fcompl
into
insb
add
push
nop
cmp
pop
jb
js
hlt
rolb
pop
dec
add
not
push
push
test
inc
add
call
int3
mov
push
jbe
inc
add
jmp
in
xor
jle
pop
and
pop
push
push
xor
add
call
jg
mov
mov
jmp
mov
or
push
xchg
movsl
sub
add
jmp
pop
leave
push
clc
add
call
cli
lcall
add
adc
add
jmp
and
int3
mov
push
clc
mov
adc
xchg
jmp
and
mov
dec
addl
jmp
ret
push
clc
sub
mov
mov
jae
rol
and
add
pop
pop
push
push
push
test
add
lea
call
mov
mov
jp
inc
add
jmp
mov
stc
mov
test
or
xor
jbe
pop
mov
push
push
xor
jne
jmp
out
xchg
mov
xor
jne
jp
cmp
mov
jo
jmp
daa
jmp
and
jmp
in
xchg
dec
jns
je
mov
test
in
call
lds
test
add
push
push
push
test
add
call
xor
add
jmp
mov
mov
push
lock
add
mov
pop
push
push
clc
or
sub
mov
mov
jae
rcl
sub
add
pop
pop
push
mov
mov
push
push
test
add
call
fdivl
inc
xor
in
add
movl
pushf
mov
enter
push
jbe
xor
jle
pop
add
push
clc
shl
add
call
adc
add
jmp
mov
xchg
int
rcrl
jl
add
or
add
xchg
data16
push
jne
out
addl
jmp
mov
push
push
and
add
lea
call
xchg
fldl
sbb
int3
sahf
cvtdq2ps
add
add
add
xlat
in
jmp
pop
test
je
push
push
and
jne
jmp
scas
mov
cmc
adc
cli
xor
jne
jp
in
push
aaa
ret
ja
popa
jo
jmp
sarl
nop
jb
jns
push
sbb
add
iret
cmp
rcrb
lret
add
add
lea
pop
add
mov
push
push
clc
cmp
sub
add
call
mov
and
clc
ror
xor
add
jmp
lods
or
rclb
out
jge
clc
cmp
xchg
jmp
adc
cmp
push
sub
add
or
add
jmp
push
mov
xor
push
push
and
jne
jmp
push
test
leave
fs
fwait
inc
dec
xor
jne
jp
and
call
movsl
jo
jmp
jb
xor
int3
and
jb
jns
xchg
or
or
push
je
jbe
xchg
inc
mov
jp
stc
inc
mov
js
pop
lahf
inc
add
pop
pushl
call
call
push
push
and
inc
add
call
jp
mov
jmp
jl
jne
jmp
xchg
adc
roll
or
les
add
sbb
jmp
pop
test
jne
push
clc
sar
add
sub
mov
mov
jae
rcl
test
add
pop
pop
push
push
mov
push
clc
or
sub
mov
nop
mov
jae
sar
xor
add
pop
pop
xor
push
push
sub
inc
add
call
stos
or
jmp
rcrb
xchg
mov
mov
movb
dec
lods
add
sub
out
pushl
push
push
and
lea
lea
call
shrl
jmp
pop
jmp
mov
std
jo
fildl
daa
in
cwtl
and
into
jnp
int
jmp
pop
call
push
clc
mov
add
rcr
add
call
call
nop
adc
sbb
xchg
clc
xor
add
jmp
ss
xchg
in
jbe
lahf
clc
mov
xchg
jmp
mov
push
inc
scas
out
jl
addl
jmp
call
mov
movl
push
push
and
add
lea
call
push
cmp
or
sub
mov
pop
xchg
dec
ljmp
xchg
es
iret
aad
jmp
pop
mov
push
clc
rcr
xor
sub
mov
mov
jae
rcl
test
add
pop
pop
mov
test
jne
mov
push
clc
mov
cmp
sub
mov
mov
jae
sar
sbb
add
pop
pop
add
add
mov
push
clc
or
shl
add
call
inc
mov
sahf
je
cmp
xchg
clc
add
jmp
notl
adc
cwtl
cmp
xchg
clc
cmp
xchg
jmp
inc
xchg
clc
and
add
xchg
jmp
imul
push
push
test
add
call
lock
out
jp
inc
add
jmp
pop
mov
loop
sub
jp
pop
add
add
push
push
and
jne
jmp
daa
inc
pushf
mov
xor
jne
jp
test
ja
loope
jo
jmp
mov
in
mov
jns
imul
arpl
je
fisubs
xor
lea
lds
mov
jno
les
add
pop
test
je
push
clc
or
sub
mov
mov
jae
rcl
or
add
pop
pop
test
jne
add
push
clc
ror
cmp
sub
mov
nop
mov
jae
rcl
sub
add
pop
pop
inc
push
push
test
inc
add
call
mov
cmpsb
push
dec
dec
rcll
add
or
jbe
inc
add
jmp
push
sbb
dec
stos
inc
mov
pop
inc
push
push
push
test
inc
lea
call
dec
cwtl
xor
ret
je
inc
add
jmp
xor
sbb
sub
jp
pop
and
push
push
push
xor
add
call
out
sub
inc
jmp
pop
jmp
sub
jle
mov
jle
pop
add
jmp
mov
jecxz
pushl
push
mov
push
push
xor
add
call
cltd
adc
adc
add
inc
hlt
cmpsl
add
jmp
neg
and
jecxz
xor
push
push
xor
add
call
mov
sti
jmp
pop
jmp
sub
bound
rolb
push
stos
fdivrp
loopne
pushl
push
push
test
add
add
call
mov
inc
add
jmp
and
mov
jle
pop
call
push
push
xor
jne
jmp
inc
cld
test
ss
popl
jo
jmp
push
xor
rcrl
dec
jb
jns
mov
ret
mov
cltd
and
adc
inc
adc
xor
adc
les
add
add
rclb
out
test
add
call
or
insb
jle
inc
add
jmp
mov
insl
mov
mov
pop
pop
push
push
test
add
call
mov
push
push
outsb
movsl
movsb
daa
fdivrs
inc
add
jmp
insb
mov
fwait
sub
xor
jbe
pop
test
jne
test
jne
push
push
and
jne
jmp
cld
lods
fbstp
pushl
jp
aaa
jae
xorb
and
pop
cmp
inc
jb
jns
stos
xor
jns
je
ljmp
cmpsb
cmp
mov
jp
ja
scas
and
xchg
adc
add
pop
xor
and
mov
push
push
sub
lea
lea
call
stos
int
push
bnd
pop
jmp
testl
add
pop
mov
sbb
jmp
pop
cmp
jne
push
clc
xor
mov
sub
mov
nop
mov
jae
shl
test
add
pop
pop
push
push
push
test
add
add
call
es
inc
add
jmp
add
and
cltd
mov
pop
mov
dec
shl
push
clc
mov
sub
mov
mov
jae
rol
add
add
pop
pop
mov
mov
mov
push
push
and
jne
jmp
xchg
int3
call
shlb
jp
sbb
insl
fnsave
jmp
and
hlt
sbb
bound
jns
pop
pop
xorb
cli
movsl
lahf
jns
je
test
mov
jp
mov
jnp
loope
fs
jns
push
lea
add
pop
add
push
clc
sub
mov
nop
mov
jae
shl
add
add
pop
pop
mov
add
push
push
and
jne
jmp
cmpb
cmp
mov
leave
jne
jp
mov
pop
fistpll
jo
jmp
jno
int
xchg
xor
iret
jb
jns
dec
inc
data16
dec
leave
inc
jmp
fstpt
je
int3
fmul
pop
jnp
xchg
mov
jp
pop
sbb
clc
or
add
pop
pop
jmp
xor
push
clc
shr
or
add
call
popa
movsb
xchg
add
cmp
xor
add
jmp
das
jne
cmp
dec
sub
add
add
xchg
jmp
sub
fisubrs
hlt
lcall
stc
jmp
pop
push
push
test
add
call
incl
sbb
loope
add
roll
leave
or
stos
lret
mov
pop
pop
push
push
sub
add
call
mov
jmp
mov
add
jmp
test
pop
outsl
pop
jmp
pop
pop
push
push
and
jne
jmp
push
and
cmp
adc
jne
jp
and
test
shl
adc
inc
jo
jmp
jb
ja
divl
jns
stc
std
pop
aam
adc
stos
mov
fstpt
lcall
add
add
pop
leave
push
clc
or
adc
sub
mov
mov
jae
rcl
sbb
add
pop
pop
ret
push
lea
push
push
and
add
call
xorl
adc
sbb
pop
mov
ja
add
jmp
out
imul
fcos
loope
push
push
clc
sub
mov
nop
mov
jae
shl
or
add
pop
pop
push
push
push
and
add
call
subb
test
int
test
jmp
pop
jmp
mov
and
imul
ret
jb
and
pop
push
push
push
xor
add
call
lods
mov
jmp
pop
jmp
add
popf
ret
stc
leave
adc
sbb
sbb
xchg
iret
jmp
pop
push
call
pop
push
push
and
jne
jmp
loopne
pop
icebp
jp
xor
in
jne
jp
xor
dec
jae
aad
jo
sbb
xor
sub
ja
inc
jb
jns
push
and
jnp
or
mov
jg
sub
add
lea
pop
mov
push
push
test
add
call
pop
ret
add
lds
jl
icebp
push
mov
pop
sub
lea
push
push
clc
mov
cmp
sub
mov
mov
jae
rcl
sbb
add
pop
pop
pushl
push
push
sub
jne
jmp
jl
sub
popf
rcll
jl
shlb
jp
cmp
sbb
insl
jo
jmp
mov
inc
or
adc
std
jb
jns
outsb
dec
pop
pusha
mov
mov
ffreep
jnp
pop
je
add
mov
jp
mov
and
mov
mov
add
pop
push
push
push
xor
jne
jmp
leave
jb
push
and
xor
jne
jp
and
adc
dec
rcll
jo
jmp
mov
adc
dec
jb
jns
or
loope
and
hlt
mov
jns
je
jo
pop
pop
add
lods
pusha
pop
data16
pushf
push
mov
add
add
pop
push
call
add
push
push
sub
add
call
hlt
and
arpl
jmp
pop
jmp
inc
xor
inc
testb
add
jmp
cmp
jecxz
addl
push
clc
add
sub
mov
mov
jae
shr
sub
add
pop
pop
jmp
add
push
push
and
jne
jmp
sub
aaa
popf
xor
jne
jp
add
int3
insb
xchg
pop
jo
jmp
test
push
jb
jns
lcall
cmc
sbb
jns
je
xor
mov
jp
pop
pop
shrl
cli
lea
lea
pop
mov
push
clc
add
call
pushf
inc
dec
sub
and
clc
ror
add
jmp
add
xchg
movsb
jne
mov
rcr
or
xchg
jmp
dec
dec
int
aad
and
icebp
leave
jmp
jmp
pop
pop
push
push
and
jne
jmp
repz
cltd
cld
jae
add
xor
jne
jp
fisubl
mov
popf
jmp
imul
arpl
mov
jle
xchg
les
out
sahf
lahf
jg
mov
jp
jbe
movsb
cwtl
add
pop
pop
push
clc
rol
add
call
xor
arpl
insb
lods
loop
xchg
clc
mov
add
jmp
imul
stc
aas
clc
sub
rcr
xchg
jmp
mov
add
sti
cmp
inc
jmp
leave
ret
push
push
clc
adc
sub
mov
nop
mov
jae
rcl
sub
add
pop
pop
mov
push
push
xor
add
add
call
vpshaq
subb
or
jo
daa
inc
adc
or
test
pop
call
push
clc
sbb
add
call
xor
loop
jge
xchg
clc
adc
add
jmp
or
xchg
pop
cltd
clc
mov
xchg
jmp
in
scas
jbe
lock
sbb
incb
enter
mov
push
push
sub
jne
jmp
xchg
in
sbb
ret
mov
inc
jp
mov
fs
test
dec
add
adc
jb
jns
adc
and
jns
je
mov
seto
lds
jne
xchg
xchg
cmp
add
pop
xor
push
push
sub
add
call
dec
push
outsl
inc
or
sbb
or
aad
aam
add
jmp
out
and
fistl
jmp
pop
push
push
clc
rcl
sbb
add
call
mov
je
add
add
jmp
xchg
scas
popf
and
cmc
add
add
roll
xchg
jmp
movsb
ljmp
dec
lcall
out
inc
add
push
push
and
add
call
or
jno
adc
sub
add
jmp
cmp
loop
jmp
pop
pushl
pushl
push
push
test
add
add
call
aad
xchg
out
lcall
rcll
add
jmp
je
addr16
icebp
fimull
pop
cmp
in
je
pop
pushl
push
clc
xor
sub
shr
add
call
roll
and
add
jmp
jno
popf
sahf
or
inc
mov
clc
xchg
jmp
sbb
fwait
pop
jns
lods
icebp
push
add
or
aam
jne
push
push
test
lea
lea
call
or
pop
jbe
inc
add
jmp
incl
dec
inc
mov
pop
call
leave
push
push
and
add
lea
call
insl
jb
jl
mov
jmp
enter
pop
jmp
dec
dec
test
test
cmpsb
gs
jmp
pop
ret
push
push
and
jne
jmp
mov
out
xchg
xor
jne
jp
js
clc
mov
sbb
in
jb
jns
movups
ds
dec
jns
je
addr16
fstpt
adc
fs
lea
pop
push
mov
push
clc
rol
add
call
je
cli
mov
jg
arpl
sub
mov
add
jmp
rorl
shl
sbb
xchg
jmp
dec
mov
call
and
cmp
and
into
call
push
push
push
and
add
lea
call
shr
minps
add
push
lds
jmp
and
mov
ja
aam
xor
push
push
clc
mov
add
add
call
cmpsl
mov
jb
jbe
insb
and
clc
add
jmp
dec
cwtl
jne
xchg
je
rcrb
test
leave
add
push
add
add
xchg
addl
jmp
push
push
push
sub
add
lea
call
or
and
add
jmp
pop
jmp
cmpsb
and
add
jmp
movsb
jo
fs
lahf
xchg
jmp
pop
call
pop
pushl
push
clc
add
sub
mov
mov
jae
rcl
sub
add
pop
pop
pushl
push
clc
mov
mov
add
call
jae
imull
test
xor
xchg
clc
add
jmp
pop
and
mov
cmc
clc
xchg
jmp
loopne
cld
or
and
cmp
pushl
pushl
call
push
clc
mov
rcl
mov
sub
mov
mov
jae
rcr
sbb
add
pop
pop
leave
ret
push
push
clc
rcr
xor
sub
mov
mov
jae
shr
xor
add
pop
pop
mov
push
push
sub
jne
jmp
pusha
and
push
sti
and
jg
shlb
and
and
jo
jmp
fstpt
xchg
aas
push
xchg
cwtl
sub
mov
jle
jb
jns
je
fsubrs
mov
jp
fdiv
mov
push
xchg
lea
lea
pop
call
mov
xor
push
push
sub
add
add
call
or
cmp
icebp
mov
add
add
jmp
jnp
sti
xor
test
pop
push
push
push
clc
sub
mov
mov
jae
shr
and
add
pop
pop
call
pushl
pushl
push
clc
add
call
lea
into
loope
ljmp
clc
mov
or
mov
add
jmp
jl
and
inc
cld
aam
clc
xchg
jmp
in
add
addl
jmp
pushl
call
push
push
test
lea
add
call
in
xchg
dec
shll
add
ret
add
jmp
and
imul
into
mov
pop
leave
ret
push
push
test
add
call
fcoms
sbb
push
bswap
outsb
cmp
add
lds
mov
xor
jle
pop
push
push
push
test
add
add
call
test
sahf
data16
pop
repz
inc
add
jmp
mov
and
xchg
aam
sub
jbe
pop
mov
add
push
push
and
jne
jmp
into
pop
adc
cmpsb
mov
jp
mov
outsl
sahf
mov
repz
mov
or
in
ds
scas
jb
jns
xlat
aad
sub
inc
push
movsl
lret
sbb
cmp
fwait
pop
out
fidivs
loopne
mov
cmp
lret
stos
inc
add
pop
push
push
clc
add
sub
mov
mov
jae
rcl
test
add
pop
pop
mov
push
push
and
jne
jmp
xchg
fcmovu
push
xor
jne
jp
add
jo
jmp
jns
stos
mov
sub
jns
lahf
add
add
cmpsl
mov
jp
repnz
pop
mov
push
clc
shl
sub
mov
nop
mov
jae
rol
or
add
pop
pop
add
push
clc
add
call
in
sti
out
sbb
and
xchg
clc
add
jmp
xchg
insb
gs
mov
aad
cmp
xchg
jmp
fistpl
add
mov
fistl
clc
or
adc
add
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
push
push
push
test
inc
lea
call
mov
pop
mov
sub
jp
inc
add
jmp
jecxz,pt
dec
inc
lret
mov
sarb
pop
lea
push
clc
sbb
sub
mov
mov
jae
sar
add
add
pop
pop
push
push
push
and
jne
jmp
test
add
mov
leave
jne
jp
insb
int
shlb
inc
jo
jmp
cmp
fwait
insl
fidivrs
jb
jns
sub
je
cmp
mov
pop
movsb
jne
lea
add
pop
push
push
clc
shr
adc
sub
mov
mov
jae
ror
cmp
add
pop
pop
push
pushl
push
clc
add
sbb
sub
mov
mov
jae
shl
cmp
add
pop
pop
call
pop
pop
push
clc
sub
add
call
xchg
add
pop
and
clc
sbb
sub
add
jmp
sbb
sub
clc
xchg
jmp
dec
arpl
loopne
xchg
push
addl
jmp
push
push
push
push
clc
add
call
add
in
fdivrs
add
xor
add
jmp
xor
pop
addl
jl
clc
shr
mov
shl
xchg
jmp
push
xchg
addl
jmp
call
movw
push
push
test
add
call
sbb
mov
dec
mov
movl
xchg
push
adc
jl
mov
pop
pop
leave
ret
push
push
test
add
lea
call
dec
scas
imul
fs
jbe
inc
add
jmp
mov
sbb
rorl
and
sub
jle
pop
push
push
push
sub
jne
jmp
mov
divl
lds
jle
aad
shlb
pop
cmp
fs
jo
jmp
jae
das
dec
jb
jns
out
inc
jns
je
popa
popa
pop
jle
mov
sbb
les
add
pop
mov
push
clc
mov
add
add
call
push
mov
add
add
add
jmp
sub
mov
shr
xchg
jmp
and
mov
push
addl
jmp
push
push
push
sub
jne
jmp
int
das
xor
jne
jp
je
pop
insb
push
push
or
mov
jmp
dec
xchg
xchg
pop
ret
jb
jns
jb
dec
jns
je
mov
nop
cmp
mov
jp
sbb
les
push
push
push
and
add
add
call
leave
sbb
jmp
mov
add
push
and
dec
mov
mov
push
clc
add
add
call
xlat
icebp
pop
pop
mov
clc
sub
add
jmp
dec
mov
and
jmp
jl
sarl
addl
jmp
mov
xor
test
jbe
push
push
and
add
call
clc
std
movsl
ss
mov
jmp
jnp
ret
add
stc
jmp
pop
mov
mov
push
clc
mov
sub
mov
nop
mov
jae
rol
or
add
pop
pop
mov
add
push
push
xor
add
call
or
sbb
or
in
mov
xchg
add
jmp
cmpsl
test
rcrb
jmp
pop
add
add
push
clc
or
sub
mov
mov
jae
shr
xor
add
pop
pop
cmp
jb
pop
pop
push
clc
add
call
sub
and
clc
or
add
jmp
test
xor
divl
fprem
xchg
jmp
out
fs
rol
sbb
inc
addl
jmp
pop
leave
ret
push
clc
or
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
push
mov
push
push
push
and
add
call
mov
and
xchg
ss
pop
jmp
loope
inc
cltd
roll
test
das
sar
pop
mov
add
push
push
test
inc
add
call
xchg
or
jle
inc
add
jmp
sub
mov
pop
mov
push
clc
xor
add
call
mov
mov
pop
sbb
adcl
add
sar
rcl
add
jmp
cmpsl
movsl
enter
pop
inc
das
clc
xchg
jmp
in
cmp
mov
add
xor
pop
push
clc
sub
add
sub
mov
nop
mov
jae
shr
test
add
pop
pop
leave
ret
push
push
push
and
add
call
dec
jmp
pop
jmp
cwtl
sahf
inc
js
ret
add
add
pop
and
in
push
clc
sbb
sub
mov
mov
jae
rcl
sbb
add
pop
pop
push
push
clc
sar
sbb
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
push
push
push
xor
jne
jmp
test
and
jp
adc
sub
jmp
xchg
jmp
xorl
out
std
cmp
mov
jns
je
jmp
lcall
jp
dec
adc
pop
fidivrs
push
add
pop
mov
push
clc
add
call
push
add
icebp
cli
stos
mov
xchg
xchg
clc
mov
add
jmp
test
sub
or
xchg
jmp
imul
sbb
addl
jmp
mov
mov
push
push
test
add
call
les
jmp
test
inc
add
jmp
cmp
or
pop
mov
push
clc
mov
shr
add
call
in
xchg
in
mov
and
clc
mov
rol
add
jmp
add
fs
leave
dec
repz
mov
inc
and
jmp
inc
scas
stc
inc
addb
fucomip
xlat
jmp
push
push
test
add
call
jmp
insb
and
into
and
add
jmp
mov
sarb
mov
push
push
and
add
call
push
es
jns
push
pop
jmp
cltd
push
and
jmp
mov
test
jmp
pop
cmp
jne
push
clc
ror
add
call
pop
fnstsw
je
add
xor
shl
sbb
add
jmp
or
sbb
mov
mov
rcl
rcr
cmp
xchg
jmp
mov
xlat
stos
xchg
cmpsl
cmp
addl
jmp
mov
mov
pop
push
push
test
lea
add
call
cmp
xor
jbe
inc
add
jmp
and
ja
shrb
fwait
sub
sub
jbe
pop
pop
leave
ret
push
push
sub
add
call
lret
jmp
pop
jmp
push
pop
add
jmp
pop
adcb
lret
pop
push
mov
push
push
xor
jne
jmp
arpl
push
push
cmp
adc
xor
divb
jp
jns
and
jbe
jo
jmp
mov
xorb
jns
popa
je
call
daa
jns
je
dec
dec
mov
mov
iret
aam
mov
add
push
push
push
clc
add
call
cmp
out
in
xchg
clc
add
jmp
push
fwait
shrl
clc
cmp
xchg
jmp
lea
lret
scas
aas
sti
push
dec
addl
jmp
push
push
clc
shl
add
call
cmp
ja
add
xor
add
jmp
sub
mov
call
rol
mov
xchg
jmp
xchg
lcall
adcl
call
mov
push
clc
rol
add
call
movsl
mov
les
xor
pop
pop
add
add
add
jmp
xchg
hlt
xchg
arpl
xor
int3
add
and
jmp
add
add
mov
cmp
jmp
xor
push
push
and
add
call
jge
jmp
pop
jmp
stc
add
jmp
jg
scas
dec
paddusw
push
push
push
clc
add
call
aam
and
push
and
clc
rcr
add
jmp
out
sti
idivl
clc
mov
cmp
xchg
jmp
add
xchg
xor
iret
in
add
fistpll
jmp
call
push
push
and
jne
jmp
xchg
jmp
jne
jp
jo
sub
jmp
aas
dec
mov
into
jns
data16
mov
cmp
adc
call
mov
jp
jl
jne
mov
addb
cld
xor
push
clc
mov
mov
sub
mov
nop
mov
jae
rol
xor
add
pop
pop
mov
push
push
and
jne
jmp
fdivrl
xor
jne
jp
mov
test
and
scas
jo
jmp
add
fcomps
jb
jns
mov
cmp
pop
jmp
in
mov
hlt
add
pop
mov
jp
push
inc
mov
aam
add
pop
test
je
or
test
je
push
clc
add
call
mov
imul
and
clc
sub
add
jmp
in
roll
inc
cltd
fsts
shr
xchg
jmp
cmp
and
popf
addr16
addl
jmp
or
test
je
or
push
clc
sub
mov
mov
jae
shl
or
add
pop
pop
cmp
jne
push
push
and
add
call
in
adc
push
or
jmp
pop
jmp
or
ret
or
mov
sub
aam
xchg
jmp
pop
mov
jmp
cmp
jne
push
clc
add
add
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
mov
push
clc
sbb
add
sub
mov
mov
jae
ror
add
add
pop
pop
jmp
cmp
jne
push
push
test
inc
lea
call
push
aad
jge
adc
cld
sub
ret
add
or
loopne
sub
jo
fnsave
adc
pop
mov
jmp
cmp
jne
push
push
xor
jne
jmp
push
imul
push
stos
lds
in
jne
jp
fildll
adc
sub
push
fcoms
jo
jmp
out
mov
arpl
test
jns,pn
cwtl
pop
lock
les
daa
mov
loope
icebp
xor
sbb
fstpt
add
fistpll
std
push
test
lea
lea
pop
mov
push
clc
cmp
rcl
sub
mov
nop
mov
jae
ror
adc
add
pop
pop
jmp
push
push
xor
jne
jmp
fs
lea
jp
and
lods
cwtl
into
mov
or
jo
jmp
lret
decb
imul
fists
adc
sub
xchg
jns
je
mov
in
jp
in
mov
fiadds
add
les
add
pop
cmp
jne
mov
sub
push
push
test
add
call
pop
jecxz
push
sti
adc
adc
fs
fistpll
jbe
inc
add
jmp
and
sub
jbe
pop
lea
push
push
xor
jne
jmp
clc
mov
fsubrs
or
pushl
jp
sbb
dec
mov
lcall
jmp
add
mov
push
jb
jns
cmc
xor
jbe
ja
xor
loopne
aas
mov
repz
sub
mov
jp
mov
sahf
xor
dec
aad
or
add
add
pop
push
push
push
push
xor
jne
jmp
repz
adc
mov
movsl
loop
and
jmp
shrb
xor
jns
jecxz
fildl
sbb
cmp
mov
xchg
mov
mov
mov
jp
jmp
divb
pop
jmp
les
add
add
pushl
push
push
test
add
call
mov
bound
add
jmp
and
test
imul
push
clc
cmp
add
call
push
nop
fisttpll
adc
xchg
clc
add
jmp
dec
sbb
dec
inc
mov
clc
sbb
mov
xchg
jmp
lahf
mov
mov
adc
lret
addl
jmp
call
push
clc
shl
sub
mov
mov
jae
shl
sub
add
pop
pop
add
push
push
sub
jne
jmp
add
imull
sbb
test
mov
xor
jne
jp
inc
cmovs
dec
jo
jmp
out
fnop
outsb
pop
das
dec
jb
jns
mov
inc
sbb
je
outsl
cmpl
test
in
das
inc
jno
lret
add
pop
pop
push
push
xor
add
call
ret
cmp
mov
xchg
jmp
pop
jmp
cmp
cmpsl
test
js
andl
mov
cmp
push
dec
jmp
pop
leave
ret
push
push
and
jne
jmp
popf
dec
fcmovnbe
in
xor
jne
jp
pop
cwtl
mov
insb
jne
jo
jmp
sbb
push
cmp
scas
jb
jns
cld
mov
sub
adc
ret
ljmp
add
add
push
push
xor
jne
jmp
data16
pushl
jp
push
inc
xchg
jo
jmp
enter
jg
push
jns
icebp
xchg
xchg
xorl
dec
adc
in
movsb
cmp
sub
das
jmp
gs
mov
add
pop
mov
push
push
push
sub
jne
jmp
sbb
iret
lcall
jle
sbb
and
pusha
jo
jmp
not
jo
pop
mov
mov
outsb
lret
je
insb
and
xor
jp
sub
add
add
pop
push
push
push
push
test
add
call
adc
ljmp
inc
add
jmp
xor
in
lock
fidivrl
lcall
xor
push
clc
add
call
out
mov
pop
scas
xchg
clc
add
add
jmp
jno
add
add
std
add
push
add
add
mov
addl
jmp
mov
mov
rep
push
push
test
add
call
daa
call
jp
inc
add
jmp
jecxz
jmp
xor
in
jo
mov
pop
pop
pop
push
clc
add
call
stos
shrb
mov
and
clc
xor
add
jmp
inc
jnp
xor
mov
clc
xchg
jmp
js
cmpsb
push
xor
das
outsl
addl
jmp
pop
push
clc
mov
add
call
push
adc
popf
outsl
imul
fadds
add
jmp
notb
xchg
adc
xchg
jmp
loopne
and
pop
mov
cmp
push
test
lea
lea
call
mov
loope
leave
mov
add
jmp
outsb
xchg
scas
jecxz
cwtl
pop
xor
pop
jg
sbb
pop
ret
push
push
sub
jne
jmp
fs
mov
xor
jne
jp
mov
ljmp
jmp
sti
xchg
or
jns
xchg
pop
pop
imul
jns
je
sbb
add
cmpsb
fimull
xor
pushf
jo
lods
lea
add
pop
push
mov
push
push
clc
xor
sub
mov
mov
jae
shl
xor
add
pop
pop
push
push
push
and
jne
jmp
test
fnstenv
in
jne
jp
aam
ret
jne
sub
ljmp
push
lret
mov
int3
mov
lret
test
cmpsl
mov
jp
dec
fildll
mulb
add
add
pop
push
call
mov
push
push
and
jne
jmp
out
xor
in
jne
jp
sti
pop
je
xchg
jmp
jne
movsl
lods
outsb
mov
cmp
bound
jns
bound
push
mov
je
xchg
dec
sub
jp
pop
movsb
adc
jg
mov
lea
add
pop
xor
push
push
clc
or
sub
add
call
mov
pop
jecxz
daa
lret
xchg
clc
adc
or
add
jmp
or
faddl
sbb
mov
clc
or
xchg
jmp
ffree
mov
and
cmp
nop
jmp
push
push
clc
add
call
xor
xchg
clc
add
jmp
mov
cs
xchg
jmp
inc
pop
outsl
ret
or
cmp
jmp
call
mov
xor
push
clc
rcr
add
call
nop
ret
mov
xchg
clc
add
jmp
jbe
add
xchg
jmp
or
xor
inc
bound
cmp
jmp
mov
add
add
push
clc
sub
mov
nop
mov
jae
ror
or
add
pop
pop
add
mov
mov
push
clc
mov
add
call
inc
jge
pop
mov
bound
mov
add
jmp
aaa
pushf
jae
sbb
mov
xchg
jmp
sub
add
mov
mov
fiadds
jne
push
push
xor
add
call
xchg
inc
jl
lahf
mov
jmp
shl
jmp
movb
sbb
loope
push
sub
lea
push
clc
mov
adc
sub
mov
nop
mov
jae
shl
test
add
pop
pop
push
push
push
clc
sbb
sub
mov
mov
jae
sar
sbb
add
pop
pop
push
push
push
push
and
jne
jmp
lahf
int3
in
xor
sarl
push
mov
jp
dec
cmp
jo
jmp
dec
or
flds
jb
jns
pop
std
jl
clc
jns
je
nop
xchg
xchg
dec
fldenv
push
testb
jecxz
mov
add
pop
call
add
mov
push
push
test
add
add
call
gs
cmpsl
int
push
adc
mov
inc
add
jmp
bound
cmpsl
lods
repz
mov
jmp
push
push
and
jne
jmp
inc
and
daa
cmp
jne
jp
sub
ja
outsl
jmp
out
inc
fs
cmp
fnsave
jns
inc
adc
cmpsb
push
lret
jns
je
cli
jae
mov
jp
hlt
mov
xlat
add
pop
movswl
push
clc
or
sub
mov
mov
jae
rol
and
add
pop
pop
dec
push
clc
cmp
shl
sub
mov
nop
mov
jae
rcr
or
add
pop
pop
xor
mov
push
clc
sub
mov
nop
mov
jae
shl
or
add
pop
pop
mul
pop
cmp
je
push
push
and
inc
add
call
cmp
push
jmp
jmp
insb
in
mov
or
xchg
jmp
pop
add
push
push
test
lea
add
call
xchg
add
inc
add
jmp
aam
push
or
mov
je
pop
jmp
pop
push
clc
add
call
mov
sbb
adc
xchg
clc
mov
or
sbb
add
jmp
sbb
js
clc
add
add
mov
xchg
jmp
push
cmp
add
and
pop
pop
push
push
and
jne
jmp
or
mov
xor
jp
sub
inc
mov
jmp
mull
mov
lea
jns
push
stos
orb
or
je
in
mov
xchg
mov
or
sti
jecxz
les
add
add
add
pop
leave
ret
push
push
test
add
add
call
lods
pusha
js
mov
stc
stc
mov
jle
inc
add
jmp
adc
mov
pop
push
push
push
test
add
call
aaa
xchg
pop
xor
add
movb
or
lock
mov
push
push
push
push
test
add
call
clc
mov
cmp
jno
lahf
inc
std
jbe
inc
add
jmp
mov
push
xor
gs
push
pop
in
mov
pop
push
push
clc
mov
shl
add
call
xor
movsl
xchg
clc
rcr
sar
add
jmp
cmp
pushf
dec
sbb
xor
in
jl
add
or
add
mov
fistps
xchg
roll
add
sahf
cmp
scas
jmp
push
push
clc
sub
mov
nop
mov
jae
ror
and
add
pop
pop
mov
mov
mov
push
clc
add
call
popa
loop
mov
inc
flds
add
jmp
xchg
aam
clc
xor
xchg
jmp
xchg
add
aad
out
sti
jp
addl
jmp
mov
push
clc
sub
mov
nop
mov
jae
shl
xor
add
pop
pop
push
push
push
sub
lea
lea
call
icebp
stos
jmp
pop
jmp
cwtl
jmp
int
add
jmp
xchg
inc
rolb
call
clc
shr
push
push
test
lea
add
call
pop
scas
push
sarl
mov
into
pusha
push
jle
inc
add
jmp
add
cmp
and
pop
mov
add
mov
push
clc
add
xor
sub
mov
mov
jae
rcl
and
add
pop
pop
shl
mov
push
push
test
add
call
lcall
pushf
jp
inc
add
jmp
push
inc
sbb
mov
pop
add
push
clc
adc
sub
mov
nop
mov
jae
sar
and
add
pop
pop
xor
lea
xor
push
push
and
add
call
sub
iret
inc
out
in
rolb
add
sub
testl
jmp
lea
sti
loopne
xor
jne
jp
jne
inc
lcall
push
and
stos
dec
add
add
xchg
dec
jns
inc
sub
test
sbb
aaa
aaa
imul
rcrb
jp
inc
sbb
in
add
pop
shr
mov
add
push
push
xor
add
call
outsb
add
dec
aaa
gs
jmp
pop
jmp
das
insb
pop
add
jmp
mov
pop
mov
shl
push
push
sub
add
lea
call
dec
jmp
pop
jmp
pop
push
pop
imul
add
add
pop
mov
add
push
clc
shl
mov
add
call
fsubs
lret
push
xchg
in
dec
xchg
clc
add
jmp
xchg
stos
sub
mov
and
jmp
loope
leave
gs
mov
imul
sti
push
clc
add
call
inc
ret
xchg
clc
add
jmp
push
cmp
clc
mov
mov
xchg
jmp
hlt
cmp
push
pusha
dec
inc
push
addl
jmp
lea
xor
push
push
and
jne
jmp
xor
leave
xchg
aad
mov
adc
subb
dec
pop
jo
jmp
mov
out
dec
ljmp
daa
scas
inc
xor
jns
je
sbb
decb
sub
add
add
pop
sub
add
push
clc
adc
shl
or
sub
mov
nop
mov
jae
rcl
or
add
pop
pop
pop
dec
jne
mov
push
push
test
add
call
iret
pop
mov
xor
add
ret
add
add
mov
pop
pop
push
push
and
inc
lea
call
outsl
sub
push
pop
jmp
mov
xchg
inc
mov
add
jmp
xor
jmp
pop
pop
push
push
and
add
call
and
or
pop
pop
jmp
add
lret
gs
nop
insb
jnp
xchg
insl
cmp
jmp
pop
pop
pop
leave
push
push
test
add
lea
call
cmp
mov
jle
inc
add
jmp
mov
add
repnz
pop
ret
push
push
test
inc
add
call
cmp
sti
jbe
inc
add
jmp
cwtl
ret
sahf
mov
pop
push
push
clc
add
call
test
and
clc
xor
shr
add
jmp
out
mov
mov
leave
movb
jp
sbb
mov
xchg
jmp
adc
cmp
fwait
popf
addl
jmp
mov
push
push
push
and
jne
jmp
jb
inc
mov
jnp
cltd
xor
jne
jp
xchg
das
push
test
fdivrl
jmp
rcrb
inc
addr16
pop
jns
scas
fisubrs
jns
je
stc
mov
cld
pop
mov
jp
pop
sahf
out
movsb
and
add
add
add
push
push
push
xor
jne
jmp
fwait
mov
loop
fdiv
xor
jne
jp
clc
out
sbb
fistl
pop
push
jns
jo
jmp
mov
lea
xchg
lret
jns
out
xorb
jns
je
aam
shll
imul
add
pop
mov
push
push
test
inc
lea
call
ss
sbb
dec
ds
inc
add
jmp
sub
into
mov
jp
pop
mov
shr
mov
push
push
test
lea
lea
call
inc
out
sbbb
aam
jbe
inc
add
jmp
jp
xor
mov
pop
mul
push
clc
mov
sbb
add
call
orl
xchg
clc
or
rol
sbb
add
jmp
out
jb
in
push
xchg
jo
clc
xchg
jmp
inc
cltd
cmpsl
rcrb
and
lahf
xchg
fnstcw
rorl
cmp
add
add
push
push
test
add
call
xlat
cs
cmp
push
fidivrs
inc
add
jmp
xchg
jl
sbb
xor
jp
pop
mov
mov
mov
push
clc
add
mov
add
call
loop
lods
int
dec
and
clc
add
jmp
in
repz
sbb
xchg
jmp
jg
aas
jecxz
ds
and
cmp
push
jmp
pushl
pushl
pushl
push
push
test
add
call
test
mov
lahf
sbb
push
push
je
inc
add
jmp
daa
mov
out
std
push
lock
insb
xchg
out
pushl
pushl
pushl
push
push
and
jne
jmp
mov
icebp
cld
xor
jne
jp
cld
xor
stos
cwtl
bnd
jmp
pushf
mov
out
jb
jns
lock
cmp
in
into
lahf
mov
jp
sub
sbb
add
add
add
pop
call
mov
push
clc
add
call
pop
push
pop
add
add
jmp
loopne
scas
ds
add
xchg
jmp
mov
mov
cmp
jmp
mov
push
clc
xor
sub
mov
mov
jae
rcr
add
add
pop
pop
sub
jne
push
clc
add
call
push
les
popf
xchg
clc
cmp
mov
mov
add
jmp
jmp
stos
clc
shl
xchg
jmp
pushf
cmp
scas
addl
jmp
pop
push
push
test
inc
add
call
js
outsb
xchg
xchg
mov
add
ret
add
add
aaa
mov
pop
pop
pop
leave
push
clc
mov
sub
mov
mov
jae
rcr
cmp
add
pop
pop
ret
push
push
test
add
lea
call
loope
mov
xlat
dec
orl
mov
jle
inc
add
jmp
imul
adc
add
je
pop
push
mov
push
push
and
lea
add
call
mov
mov
aaa
jmp
pop
jmp
sub
inc
cmpsl
addb
rclb
pop
movsl
fidivl
pop
pusha
push
push
and
add
call
add
adc
add
add
jmp
aas
fists
inc
lret
in
mov
nop
push
clc
adc
rcl
add
call
mov
movsl
xchg
clc
xor
add
jmp
mov
cmc
sti
and
xchg
jmp
mov
addl
jmp
nop
push
clc
add
call
xor
and
clc
sub
mov
add
jmp
out
xor
pop
and
jmp
jge
out
xor
insl
mov
roll
jnp
mov
push
clc
mov
or
sub
mov
nop
mov
jae
rcl
add
add
pop
pop
xor
rep
popa
push
clc
add
call
add
aas
cli
lahf
stc
xchg
add
ror
add
jmp
shrl
pop
aas
jecxz
mov
into
add
add
add
add
lds
fbld
cmp
jmp
leave
push
push
test
add
add
call
into
pop
loope
jbe
inc
add
jmp
lret
mov
pop
ret
mov
lea
push
clc
ror
add
sbb
add
call
aaa
aaa
loop
insb
and
clc
ror
add
jmp
sti
fiadds
cmpsl
clc
xchg
jmp
lods
loope
fistps
addl
jmp
mov
push
clc
mov
mov
sub
mov
mov
jae
shl
sub
add
pop
pop
test
jne
mov
movzbl
push
push
xor
add
call
int3
jmp
pop
jmp
mov
add
gs
add
jmp
mov
pop
jmp
pop
inc
mov
push
clc
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
mov
push
push
and
jne
jmp
mov
leave
and
fmull
shlb
shlb
jp
lea
movsl
push
adc
dec
jo
jmp
inc
fnstcw
xchg
sbb
jge
jb
jns
dec
stos
pop
jmp
xchg
cmp
fbld
je
loop
and
ds
dec
mov
jp
je
out
clc
add
add
pop
movl
push
push
and
inc
lea
call
dec
xor
jmp
pop
jmp
xchg
mov
movb
add
add
addr16
pop
mov
push
push
test
add
call
cltd
sbb
xchg
js
or
inc
add
jmp
push
jle
jns
pop
idivb
xor
xor
jp
pop
mov
push
clc
mov
sub
mov
mov
jae
ror
xor
add
pop
pop
shr
add
push
clc
mov
shl
add
call
add
daa
mov
cwtl
std
xchg
clc
rcr
xor
add
jmp
jno
lods
clc
mov
adc
xchg
jmp
hlt
enter
stos
sub
addl
jmp
and
mov
ret
push
push
test
lea
add
call
dec
movsl
dec
mov
je
inc
add
jmp
pop
and
jno
fdivrl
pop
push
push
clc
or
add
call
add
jns
loop
jl
add
add
jmp
and
enter
jp
xor
and
jmp
lret
popw
addl
jmp
xor
push
clc
rol
add
call
jg
push
test
add
cmp
shl
add
jmp
lock
sar
dec
sub
mov
testl
pop
and
jmp
jo
stos
jle
add
clc
addl
jmp
inc
call
push
push
test
add
add
call
or
push
scas
jmp
lcall
add
push
xchg
js
push
xchg
mov
pop
lea
push
push
xor
jne
jmp
adc
xchg
push
push
in
dec
arpl
xor
jne
jp
inc
jl
adc
in
into
jmp
sbbb
int
jb
jns
addr16
rcrl
lcall
adc
jmp
mov
xor
mov
jp
push
cld
lods
sar
les
add
pop
call
push
push
sub
lea
lea
call
jo
mov
pop
jmp
and
andl
jmp
pop
test
jne
push
clc
shl
sub
mov
mov
jae
shl
cmp
add
pop
pop
mov
push
clc
adc
rol
or
add
call
js
aad
mov
or
cmpsl
xchg
clc
add
shr
add
jmp
shrl
int3
mov
clc
shl
xchg
jmp
sbb
or
in
addl
jmp
pop
push
push
test
lea
add
call
fistpll
fnstcw
jbe
inc
add
jmp
lock
icebp
sub
inc
or
mov
pop
ret
push
push
clc
cmp
sub
sub
mov
nop
mov
jae
sar
sbb
add
pop
pop
mov
push
push
and
jne
jmp
jae
test
dec
scas
cmc
or
xor
jne
jp
mov
adc
cltd
pop
push
test
dec
push
add
push
jns
xchg
mov
jns
je
in
scas
jne
sbb
mov
and
xchg
es
add
pop
sub
push
push
and
jne
jmp
outsb
movsb
xor
cmp
pop
xor
jne
jp
cli
mov
mov
and
data16
test
jb
jns
mov
xchg
jnp
adc
jb
hlt
add
xchg
orl
dec
es
lea
add
pop
mov
push
push
and
jne
jmp
loop
popa
cltd
xor
jne
jp
and
ss
jmp
ds
fnsave
jns
pop
pop
ret
xlat
add
jns
je
pushfw
testb
sbb
mov
push
add
pop
mov
andl
push
push
push
xor
add
call
mov
jmp
mov
or
push
mov
jmp
pop
mov
push
push
test
add
call
cmpl
ret
add
push
lret
pop
lock
cmp
push
mov
ds
pop
push
xor
and
push
push
xor
add
call
jne
add
movsb
into
lret
jmp
pop
jmp
stos
add
jmp
loop
pop
or
cmpb
mov
push
clc
mov
mov
add
call
imul
fcmovnu
outsb
xchg
adc
sbb
ror
add
jmp
fimuls
loop
jb
or
mov
xchg
jmp
lock
addl
jmp
lea
push
push
test
add
lea
call
adc
popf
je
lds
add
ret
add
jmp
xchg
xor
mov
xchg
xor
rorb
pusha
clc
es
mov
pop
inc
push
mov
push
push
test
add
add
call
nop
inc
lds
in
sub
addb
mov
jp
inc
add
jmp
roll
fsubr
sti
push
mov
mov
pop
mov
push
push
sub
jne
jmp
xor
popf
xor
jne
jp
sub
inc
in
and
icebp
jmp
test
les
pop
inc
mov
jns
enter
jns
je
jae
push
jns
mov
jp
dec
out
out
lods
add
add
pop
lea
push
push
and
add
call
dec
jmp
pop
jmp
lret
sbb
push
add
jmp
mov
shrb
fdivrp
jecxz
call
push
clc
add
call
loop
pop
and
clc
rol
sub
or
add
jmp
sbb
dec
test
add
or
add
and
ret
pop
push
popl
inc
js
faddl
push
add
push
push
sub
jne
jmp
fsubl
mov
or
xor
jne
jp
jne
or
inc
lcall
jmp
jecxz
jmp
jecxz
popa
pop
mov
fdivr
int3
pop
mov
es
je
xchg
sbb
mov
jp
lods
xor
pop
call
push
clc
sbb
add
add
call
dec
sub
push
sub
movsl
mov
pop
and
clc
shl
add
jmp
jns
adc
iret
movsl
sar
xchg
jmp
mov
sti
add
addl
jmp
test
je
push
clc
rcl
sub
mov
nop
mov
jae
shl
sub
add
pop
pop
call
push
clc
sub
mov
mov
jae
rol
or
add
pop
pop
test
je
push
push
push
xor
jne
jmp
jp
adc
or
shlb
jp
pop
mov
mov
adc
xchg
jns
in
adc
iret
xor
je
push
dec
and
jp
mov
ds
mov
les
xor
pop
lea
push
push
xor
add
call
test
or
incl
pop
jmp
pop
call
lea
dec
jne
push
push
and
jne
jmp
mov
cmpsb
push
lods
xor
jne
jp
pop
fs
aam
pop
push
mov
jmp
add
inc
divl
cmpsl
lods
mov
jns
je
dec
cmp
mov
sarb
fildll
aad
inc
add
pop
mov
push
clc
mov
sub
mov
mov
jae
rol
sub
add
pop
pop
test
je
mov
push
push
xor
jne
jmp
movb
pushl
jp
or
leave
cmp
lods
jmp
cmp
mov
pop
jns
iret
adc
sbb
push
test
push
mov
ficoml
mov
jp
pop
cwtl
dec
xor
in
inc
lea
pop
sub
push
clc
add
sub
add
call
mov
in
stc
aas
xchg
clc
cmp
sbb
xor
add
jmp
cmpsl
es
in
mov
and
jmp
inc
insb
cvtps2pd
add
xchg
out
cmp
fimull
xchg
inc
clc
add
call
inc
cmpsb
dec
leave
pop
xchg
clc
shl
add
jmp
push
mov
dec
mov
cmp
xchg
jmp
mov
popa
repnz
add
sbbb
inc
jmp
mov
jmp
movb
push
clc
cmp
mov
sub
mov
mov
jae
rol
xor
add
pop
pop
incl
push
clc
add
sub
sub
mov
mov
jae
rcr
sbb
add
pop
pop
jmp
push
push
test
add
add
call
push
xchg
lret
add
lds
das
loopne
inc
imul
jp
pop
mov
movzbl
incl
push
push
xor
add
call
sbb
mov
and
jmp
pop
mov
inc
hlt
add
jmp
mov
leave
inc
mov
push
clc
shr
shr
sub
mov
nop
mov
jae
sar
add
add
pop
pop
and
inc
inc
push
push
and
jne
jmp
repz
repz
xor
jne
jp
mov
mov
jo
jmp
lds
sti
jns
mov
popa
fnstsw
sbb
mov
jge
clc
mov
jp
mov
out
cmp
scas
ret
mov
add
add
add
pop
shr
je
push
push
and
add
add
call
mov
jmp
pop
jmp
pop
add
jmp
mov
push
pop
xchg
jmp
pop
test
je
push
clc
adc
sub
or
add
call
cmc
stc
call
add
add
jmp
lock
xchg
int
lret
sub
mov
xchg
jmp
push
pop
dec
movb
mov
or
cmp
jmp
mov
push
push
test
add
call
jbe
lahf
mov
jle
inc
add
jmp
sar
push
fwait
mov
idivb
pop
sub
push
push
test
lea
lea
call
repz
inc
add
jmp
or
sbb
mov
aam
mov
pop
mov
push
clc
rcl
or
sub
mov
nop
mov
jae
ror
sbb
add
pop
pop
mov
incl
push
clc
sar
rol
sub
mov
mov
jae
rcl
cmp
add
pop
pop
inc
push
push
and
add
lea
call
dec
loope
adc
mov
add
jae
rorl
or
out
out
mov
pop
push
push
xor
add
call
push
adc
sbb
pop
ss
rcr
es
add
jmp
mov
imul
cmp
pop
dec
jne
jmp
push
clc
sub
mov
mov
jae
sar
test
add
pop
pop
mov
push
push
test
add
call
inc
into
inc
ja
aaa
in
xchg
into
mov
add
jmp
scas
sub
fstpt
pop
jmp
push
push
test
add
lea
call
sarl
shlb
cmp
ja
add
ret
add
jmp
sti
repnz
out
jg
cmpsb
imulb
mov
pop
call
push
clc
mov
add
call
xor
add
iret
xchg
push
cs
xchg
clc
add
jmp
and
in
clc
xchg
jmp
xor
cmpsl
testb
or
faddl
add
add
je
push
mov
jmp
aam
pop
xor
jne
jp
xchg
push
jle
adc
ret
add
jmp
aas
and
jo
push
arpl
hlt
jns
mov
mov
data16
je
lret
fimuls
jp
xchg
adc
push
pop
out
dec
inc
lea
pop
cmp
jne
lea
call
push
push
xor
jne
jmp
jge
xor
adc
xor
jne
jp
push
or
jmp
push
xor
shll
outsl
dec
push
xchg
fnstenv
jns
lods
jle
ret
les
je
dec
mov
inc
or
mov
jp
and
cld
mov
cli
add
pop
test
je
push
push
test
add
call
loopne
add
rolb
sub
adc
and
jmp
call
push
clc
mov
shl
adc
sub
mov
mov
jae
rol
or
add
pop
pop
sub
push
clc
add
call
aam
loop
shlb
fs
lock
insb
and
clc
add
jmp
sub
nop
addl
xchg
jmp
ljmp
jne
bound
lock
push
push
test
lea
add
call
sahf
sahf
mov
mov
jle
inc
add
jmp
das
icebp
xchg
iret
test
mov
aaa
push
in
mov
pop
incl
push
push
and
add
add
call
cmp
adc
pop
scas
scas
pop
ret
add
mov
lds
jmp
inc
ja
in
inc
mov
push
clc
mov
mov
xor
add
call
jb
gs
jl
xchg
fcomi
in
xchg
clc
add
jmp
jno
daa
cmpsb
je
jne
xchg
jmp
xor
fwait
sbb
stos
addl
jmp
dec
jne
push
push
sub
add
add
call
sub
fisubrs
and
push
pop
jmp
sub
add
jmp
fsubs
loop
jmp
push
clc
sub
mov
nop
mov
jae
sar
add
add
pop
pop
sub
push
clc
or
add
call
mov
push
and
clc
mov
add
jmp
out
test
sarl
and
testb
insb
and
jmp
mov
pop
jl
adc
addl
jmp
jmp
dec
dec
push
push
and
add
call
arpl
jmp
push
pop
xchg
add
jmp
mov
mov
movzbl
push
clc
sar
shl
sub
mov
mov
jae
rcl
sbb
add
pop
pop
shl
add
incl
push
push
and
jne
jmp
sbb
add
xor
jne
jp
or
xchg
push
jne
aaa
adcb
jns
and
xchg
sti
mov
jb,pt
jns
add
imul
jl
rcll
adc
and
in
jo
insb
test
xor
jnp
inc
lea
pop
lea
mov
call
push
push
and
inc
add
call
jecxz
xor
xor
divps
add
imul
add
jmp
sahf
jmp
pop
cmp
jb
inc
cmp
jb
push
clc
shl
or
mov
sub
mov
mov
jae
ror
test
add
pop
pop
inc
cmp
jae
inc
push
clc
sub
mov
nop
mov
jae
rcl
cmp
add
pop
pop
inc
push
push
test
add
add
call
mov
dec
jle
inc
add
jmp
jg
add
insb
stos
adc
mov
pop
test
je
mov
sub
push
clc
mov
add
call
add
add
lock
cmp
mov
mov
add
jmp
push
mov
jl
in
test
movsl
add
clc
xchg
jmp
mov
add
xor
mov
lock
push
clc
xor
add
call
dec
sahf
xor
sbb
sbb
cmp
add
jmp
and
rolb
shl
xchg
jmp
call
sarb
xchg
addl
jmp
incl
push
clc
adc
sub
mov
mov
jae
rcr
test
add
pop
pop
inc
push
clc
mov
add
call
and
out
pop
mov
and
clc
xor
add
mov
add
jmp
out
ret
lret
push
jl
js
clc
or
or
rcl
xchg
jmp
mov
add
mov
pop
jmp
mov
push
clc
shl
add
call
push
push
mov
movsl
sbb
xchg
clc
rcl
add
jmp
mov
inc
clc
xchg
jmp
inc
xchg
dec
arpl
sbb
add
jb
mov
jne
push
clc
rol
adc
rol
add
call
data16
movlps
xchg
clc
cmp
rcr
shr
add
jmp
fsubrp
mov
clc
adc
mov
mov
xchg
jmp
mov
pop
dec
push
sti
mov
cmpsl
lcall
xor
inc
push
clc
add
sub
mov
mov
jae
rcr
sbb
add
pop
pop
jmp
push
push
test
add
call
clc
ror
push
inc
ja
add
movb
push
add
loopne
xor
idivb
pop
mov
push
clc
xor
add
call
jmp
jle
pop
jl
pop
and
clc
adc
add
jmp
pop
int3
push
push
js
sti
sub
shr
xchg
jmp
pop
stos
inc
lock
jmp
mov
mov
push
push
xor
add
lea
call
fdivl
lcall
in
aad
mov
movb
inc
jl
out
incl
incl
mov
push
clc
mov
xor
sub
mov
mov
jae
sar
adc
add
pop
pop
xor
cmpl
je
push
push
test
add
add
call
repz
inc
add
jmp
je
mov
pop
mov
push
push
and
lea
lea
call
iret
dec
jmp
pop
jmp
loope
outsl
addl
addr16
pop
pop
pop
push
push
test
lea
lea
call
data16
lahf
je
inc
add
jmp
push
jb
xor
orl
mov
pop
sub
pop
push
push
test
inc
lea
call
xor
addr16
loopne
push
push
sbb
repz
jp
inc
add
jmp
jmp
mov
arpl
call
cmp
fisttpl
call
outsb
outsb
adc
push
and
clc
add
jmp
or
popa
add
pushf
xor
clc
xchg
jmp
add
leave
fisubrl
addl
jmp
ret
push
push
xor
lea
lea
call
scas
jb
movsl
xor
jmp
mov
add
jmp
lcall
and
add
call
mov
out
add
add
jmp
rcrb
outsb
std
mov
divb
jp
gs
sub
sbb
ss
jo
jmp
jmp
xor
into
lock
or
adc
hlt
pop
pop
testb
inc
testb
arpl
rorl
add
jbe
jle
add
call
dec
jp
mov
and
clc
or
add
jmp
mov
xchg
jmp
jo
shlb
testl
pop
cmp
jmp
sub
push
clc
sub
mov
mov
jae
sar
cmp
add
pop
pop
mov
cmp
jne
lea
push
push
test
add
call
cmp
cmp
mov
inc
add
jmp
hlt
arpl
and
sub
jp
pop
mov
push
push
xor
jne
jmp
insl
mov
lds
mov
jp
stos
dec
adc
mov
and
and
cltd
pop
xor
mov
aaa
inc
push
xchg
cltd
inc
jns
je
dec
jb
cmpsl
mov
xor
jl
mov
jp
cld
mov
stos
fs
lea
pop
mov
and
cmp
je
push
clc
mov
mov
rcl
add
call
imul
fsubl
and
clc
rcl
sbb
add
jmp
outsl
mov
into
jg
rcr
mov
xchg
jmp
or
push
addl
jmp
xor
push
push
and
jne
jmp
xchg
aad
scas
and
jp
mov
in
sbb
and
out
mov
jb
jns
pusha
inc
leave
sbb
jns
je
out
mov
mov
jp
ficoms
cmp
out
ss
les
ret
push
xor
push
push
test
add
call
je
add
movb
push
inc
mov
je
pop
mov
mov
mov
push
push
xor
inc
add
call
pusha
jp
jb
sarl
pop
jmp
jmp
int
bnd
rorb
add
lret
jmp
pop
lods
push
push
test
lea
lea
call
adcb
add
lds
inc
popf
xor
mov
dec
mov
pop
mov
push
push
sub
jne
jmp
mov
xor
xor
jne
jp
bound
push
jo
jmp
loopne
xor
hlt
or
fistpll
pop
jns
je
dec
add
shrb
push
orb
in
outsb
and
add
add
push
clc
mov
shr
sub
mov
nop
mov
jae
rol
sbb
add
pop
pop
ret
push
push
test
add
call
mov
in
add
roll
mov
pop
push
mov
add
push
clc
mov
sub
mov
nop
mov
jae
shl
test
add
pop
pop
push
push
push
push
push
sub
jne
jmp
cmp
bound
inc
xor
jne
jp
das
repnz
jo
jmp
addl
ja
mov
cmp
sub
jns
je
push
sarw
push
mov
jp
enter
call
les
add
add
mov
push
push
xor
add
add
call
xchg
mov
jmp
dec
add
jmp
xor
loop
mov
add
push
push
test
lea
add
call
inc
xor
adc
and
jbe
inc
add
jmp
cld
xlat
test
gs
test
mov
pop
pushl
mov
add
push
clc
sbb
sub
add
call
mov
jl
add
add
jmp
mov
xor
outsb
xchg
jmp
or
add
xchg
jmp
lods
mov
and
cmp
pop
jmp
add
mov
add
push
clc
add
call
xor
and
clc
sar
rol
or
add
jmp
icebp
pop
mov
xlat
mov
add
add
or
add
inc
pop
bound
addl
jmp
xor
lea
mov
push
clc
sub
mov
nop
mov
jae
rcr
adc
add
pop
pop
add
push
clc
add
call
ljmp
add
add
jmp
inc
sbb
movsb
fimull
sub
add
pop
add
add
adc
add
jb
test
jmp
mov
xor
rol
push
push
test
lea
add
call
aam
add
lds
dec
add
adc
scas
shrl
sahf
mov
call
cmpb
jne
push
clc
mov
sub
mov
mov
jae
rcr
or
add
pop
pop
cmp
je
inc
cmp
jb
push
push
and
add
call
fwait
push
xlat
adc
sarb
shl
jmp
pop
jmp
xchg
mov
les
adc
pop
mov
add
movzwl
push
clc
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
mov
add
mov
push
push
sub
add
call
pop
mov
push
int
mov
add
insb
cs
jmp
and
or
out
add
push
clc
add
call
mov
cmp
mov
cmp
add
add
jmp
sti
jbe
jnp
sahf
pop
lds
aam
mov
xchg
jmp
test
ljmp
add
cmp
jnp
lret
pop
cmp
jbe
cmp
jae
push
push
and
jne
jmp
or
or
xor
jne
jp
jno
jge
cmp
jmp
sarb
jmp
and
adc
pop
adc
je
push
mov
out
add
fwait
and
add
add
pop
pushl
push
push
xor
add
call
insb
mov
imul
mov
pop
push
mov
sbb
rolb
pop
pushl
push
push
push
test
add
call
cmp
dec
mov
jns
add
jne
and
rolb
dec
call
movsl
mov
sahf
mov
pop
xorl
push
push
and
lea
add
call
adc
in
jmp
pop
jmp
jb
add
jmp
aas
jmp
pop
pushl
call
call
push
clc
adc
sub
mov
nop
mov
jae
sar
adc
add
pop
pop
pop
push
clc
sub
mov
nop
mov
jae
shr
adc
add
pop
pop
pop
pop
leave
push
push
sub
add
call
bound
imul
jmp
pop
jmp
jecxz
fldl
or
add
lcall
call
int3
cmp
add
sub
.byte
mov
insb
inc
.byte
