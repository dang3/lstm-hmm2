out
or
inc
lea
add
or
loop
or
add
scas
or
scas
movb
jne
add
push
xchg
add
add
xor
add
add
add
fcoml
add
inc
add
adc
add
lcall
loop
or
push
sub
add
push
add
in
add
inc
str
sbb
add
xor
add
and
add
testb
or
stc
les
add
aaa
or
mov
fildl
add
out
add
sub
add
and
add
add
add
xor
add
js
add
or
push
stos
or
push
bound
add
xchg
add
lret
cmc
test
add
add
add
push
add
or
add
sub
add
stos
xor
or
cmpsb
cmc
add
repnz
add
jmp
add
popa
add
add
and
add
fwait
or
and
or
lods
pop
verr
inc
or
push
loop
add
cmp
add
in
add
movsb
or
mov
jge
add
add
add
add
cltd
mov
add
add
stos
mov
or
lcall
add
ja
add
push
add
inc
or
add
mov
or
lock
push
add
xor
add
mov
std
or
add
add
cmc
add
fsub
add
hlt
xchg
add
hlt
add
fwait
mov
add
or
jb
pop
add
cld
push
add
jnp
add
add
add
add
js
or
dec
xchg
or
pushf
clc
or
decl
add
loop
add
push
add
sub
or
stc
cmp
add
mov
add
sldt
add
in
ltr
or
and
add
sub
or
xor
add
or
add
sub
push
add
or
scas
les
mov
bound
add
iret
verr
or
aaa
arpl
add
add
xchg
ret
fsts
add
mov
add
dec
add
add
or
add
mov
push
add
mov
andb
pop
push
mov
addl
subl
pop
xor
jmp
mov
mov
and
mov
add
and
jmp
sub
mov
and
cmp
jne
push
mov
addb
pop
lea
mov
mov
and
cmp
je
xor
ret
push
mov
andl
subb
pop
push
xor
mov
mov
push
mov
andl
pop
mov
lods
mov
pop
push
mov
xorl
xorw
pop
ret
push
push
popl
mov
add
push
push
push
push
mov
pushl
popl
mov
add
pushl
mov
add
add
push
mov
sbbw
pop
mov
add
xor
lea
mov
add
mov
xor
rol
pushl
popl
jle
push
mov
orw
pop
xor
inc
cmpb
jne
cmp
je
jmp
inc
cmpsl
jl
push
adcl
mov
xor
mov
xor
scas
add
insl
mov
or
fildl
or
je
xor
stos
cmp
or
cmp
add
cmpsl
ja
mov
std
lahf
pusha
into
repnz
dec
inc
out
xchg
rclb
and
ds
inc
lahf
mov
pop
in
mov
call
dec
mov
cli
mov
xor
xchg
jmp
push
ja
push
xchg
cwtl
push
flds
jle
mov
daa
das
mov
push
in
imul
or
inc
cmp
jb
mov
add
movzwl
mov
add
push
mov
subw
movl
pop
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
popl
jno
call
fucom
rorl
and
xchg
jo
lods
adc
jg
cltd
jmp
outsb
outsl
in
xchg
dec
aad
stos
or
cmp
and
adc
or
jbe
dec
push
ja
pop
xlat
in
sub
dec
xchg
adc
sub
push
and
call
dec
loopne
or
rcll
add
sub
movl
addl
pushl
call
push
mov
subw
orb
pop
call
pop
pop
pop
pop
push
mov
andw
sbbl
pop
leave
ret
call
test
jne
ret
push
push
mov
call
jmp
cmpb
mov
clc
sub
pop
cwtl
xor
lods
add
cmp
cmpsl
test
jnp
jo
cwtl
popf
fdivs
sub
inc
sti
test
sub
bound
js
mov
mov
scas
popf
inc
push
dec
push
sbb
in
dec
sub
movl
addl
sbbw
jnp
push
mov
xorw
subl
pop
push
call
push
push
push
shr
lea
mov
xor
pop
mov
pusha
push
mov
movb
addb
pop
call
mov
sub
movl
push
mov
movl
pop
addl
push
call
mov
mov
xor
jmp
dec
test
movsb
cltd
inc
movsb
dec
lods
out
cmp
aam
mov
jge
mov
jb
mov
and
icebp
iret
jns
xchg
fistpll
add
add
cmp
les
or
gs
add
cmp
fstpl
mov
mov
sub
adc
add
lret
add
mov
add
rolb
jmp
mov
add
fs
jmp
test
orb
fisttpl
movsl
add
sbb
mov
repz
rolb
push
pop
lods
fwait
bound
daa
pop
inc
cmp
mov
leave
rcll
push
or
xor
cmp
adc
cltd
and
sbb
xor
mov
dec
sub
negb
mov
xchg
int
mov
test
cmp
je
cmp
jne
popa
shl
andl
jbe
call
into
cmc
xchg
cli
out
pushf
lret
loop
rcrl
cmp
test
sbb
call
cli
jecxz
cmpsb
lock
out
and
xchg
mov
jno
aad
sahf
scas
sti
add
and
jle
mov
lahf
ret
sub
cmc
into
bound
hlt
sahf
cmp
pop
in
std
sbb
cmp
pop
icebp
push
iret
jg
xlat
stos
sbb
fsubrl
lods
out
and
mov
movsb
jae
test
xor
into
popl
push
xor
push
popl
push
call
push
mov
push
mov
andb
pop
push
jmp
jmp
popa
jmp
dec
and
loope
ret
mov
leave
hlt
jecxz
sbb
add
sbb
jo
dec
arpl
mov
iret
fiadds
aaa
mov
push
mov
orb
movb
pop
xor
push
call
push
mov
push
push
popl
jns
call
and
pushl
shlb
and
xor
xchg
inc
nop
xlat
mov
mov
movb
push
pop
test
inc
je
dec
lcall
hlt
test
and
data16
sbb
push
pop
shr
std
out
clc
repnz
xchg
movl
repnz
cmc
cltd
lret
ds
adc
dec
in
in
push
popl
jmp
pop
mov
push
push
push
mov
push
mov
orb
movb
pop
mov
rep
pop
pop
push
push
ror
rol
mov
xor
pop
push
shr
mov
add
xchg
push
mov
orw
pop
xor
jmp
sub
mov
push
mov
movb
xorw
pop
add
sub
mov
add
or
jne
push
mov
subw
pop
add
jmp
call
fsubl
outsl
mov
ljmp
fdivl
out
add
mov
loopne
dec
fcoms
sub
scas
rcr
pop
lock
daa
push
or
add
pop
sbb
aam
sbb
xor
stos
pop
cmc
pop
clc
cmpsb
popf
fisttps
sbb
jmp
add
std
aam
xchg
add
add
xor
pop
inc
sbb
popf
sub
arpl
mov
popa
aas
mov
pop
shlb
mov
pop
andl
fisubrs
sbb
mov
outsb
hlt
cwtl
mov
mov
arpl
mov
enter
add
mov
daa
fadd
not
mov
in
aad
cmp
adc
addl
insb
icebp
adc
or
leave
daa
insb
dec
jl
xorl
movsb
pusha
xor
xlat
or
lcall
inc
pushf
jmp
xchg
mov
call
cmp
dec
jl
imul
mov
xchg
popa
jl
pop
in
mov
stos
pop
cmc
pop
clc
cmpsb
js
dec
mov
mov
mov
fmuls
pop
mov
or
fnstenv
mov
mov
xor
add
insl
mov
leave
sti
pop
push
adc
repz
clc
dec
pop
ds
xchg
sbb
idivb
or
adc
fucomp
lods
movsl
or
or
flds
xorl
repz
out
mov
stos
popf
cmc
push
push
inc
xor
cld
ret
subb
shll
dec
jl
cmp
adc
ss
jl
cmp
or
cmp
mov
lods
jae
xchg
repz
in
daa
jl
xchg
dec
outsb
rcl
into
jno
jnp
push
add
pop
or
cmp
push
mov
push
out
jo
test
jnp
mov
inc
imul
daa
insb
dec
jl
xorl
hlt
push
fimuls
pop
sbb
jb
pop
cmp
in
sbb
sarl
mov
addr16
in
fwait
adc
fcmovnu
adc
or
push
addr16
sbb
mov
adc
mov
cwtl
jno
rolb
cmp
mov
jmp
das
add
ret
icebp
sbb
mov
xchg
lahf
sub
repz
inc
cmp
jns
or
sar
mov
mov
inc
mov
pushl
push
lock
outsb
enter
fisubrs
pop
sbb
adc
push
lds
cli
aad
mov
xchg
repz
mov
push
notb
movsl
pop
mov
repz
cmp
loope
sub
xchg
ret
mov
xor
adc
scas
pop
fdivp
aad
mov
std
jle
test
sti
fidivl
adc
xlat
pop
xchg
int
push
push
inc
repnz
insb
xchg
or
in
negl
inc
mov
and
inc
push
xor
adc
or
outsb
push
add
mov
mov
clc
cmpsb
sahf
icebp
push
add
std
xchg
pop
and
push
xor
loope
pop
fcmovnbe
filds
and
ds
out
jecxz
mov
lret
fs
sti
sub
sbb
ds
xchg
mov
in
scas
test
pusha
stos
gs
lret
adc
push
push
cmp
sbbb
pop
push
or
adc
mov
jmp
jb
pop
cmp
and
mov
daa
lock
fsubrl
xchg
lret
mov
push
push
mov
push
dec
cmc
pop
mov
aaa
dec
jle
dec
mov
pop
aad
lods
jl
and
out
mov
icebp
xchg
repz
xchg
lret
aad
inc
add
fnstsw
xchg
addr16
popf
mov
jmp
hlt
nop
loop
sub
popf
push
les
adc
xor
cmp
std
cli
pop
aas
inc
inc
cmpsl
and
mov
jle
pop
insb
icebp
xchg
outsl
ds
jns
pop
dec
cmp
xor
pop
pop
xchg
xchg
dec
test
pop
and
pop
and
mov
xlat
lret
mov
je
and
cmc
xorb
inc
rcrl
notb
in
lret
shll
cltd
push
xor
mov
jmp
dec
rclb
pusha
inc
popf
mov
insb
orb
adc
add
mov
jecxz
xor
jl
mov
mov
pop
mov
or
push
sub
dec
fwait
repz
insb
icebp
ljmp
icebp
repz
ds
fcomp
cmp
sub
add
jl,pn
lods
xchg
jae
shll
lods
mov
push
rol
or
mov
std
push
mov
and
lock
mov
xor
push
cmp
scas
pop
in
mov
mov
repz
fs
inc
pop
inc
xchg
aas
shr
push
xchg
jp
stc
jne
or
fistpl
testl
cmpb
adc
int
roll
or
or
cltd
test
sbb
enter
dec
into
and
neg
mov
push
repnz
jno
adc
mov
in
in
cmc
mov
cltd
in
jns
sbb
insb
ja
xor
pop
pop
xchg
xchg
mov
scas
into
jnp
lock
or
icebp
pop
cmc
outsb
stos
pusha
imul
sbbb
icebp
sbb
inc
xchg
rclb
cwtl
icebp
xchg
rep
loopne
push
pop
mov
loope
rolb
icebp
lods
sbb
jl
inc
movsl
pop
inc
mov
adc
push
sbb
icebp
mov
cmp
int
mov
notb
xchg
sbb
jbe
mov
icebp
cmp
in
dec
pop
int
cmp
cmc
cs
jne
fisubrl
test
sub
lret
imul
push
jl
xorl
repz
jecxz
mov
or
sbbb
popf
lods
in
and
mov
cmp
mov
sbb
mov
call
mov
icebp
pop
xor
stos
dec
jne
int
cmp
in
pop
andl
inc
imul
sub
repz
lea
mov
mov
imul
sub
adc
or
jp
lret
cmp
aam
mov
insl
lea
jae
push
pop
ret
lds
in
dec
xor
xchg
hlt
popf
inc
add
cmp
adc
es
hlt
mov
add
fiaddl
or
and
push
adc
inc
in
cli
jp
lret
mov
mov
push
adc
pop
xor
andb
repz
rcr
sbb
jbe
imul
ds
and
xchg
adc
jle
sbbl
rclb
xchg
pop
push
insb
ror
daa
insb
in
test
adc
push
sarl
int3
cmc
jne
iret
daa
add
jb
insl
fidivl
fs
sbb
and
in
mov
orb
imul
and
roll
dec
daa
jnp
cs
xchg
push
xorb
mov
insb
in
insb
movsl
std
fisttps
sub
andl
icebp
xchg
inc
xchg
pop
insb
icebp
xchg
mov
out
dec
mov
add
mov
lock
fsubs
or
stos
push
call
sub
cli
cwtl
xchg
sbbl
push
pop
in
cmpb
jb
fidivl
das
iret
pop
imul
sti
out
cmp
mov
aaa
push
xor
push
pop
add
adc
xchg
repz
lahf
and
cmp
icebp
jno
dec
cld
sti
inc
call
mov
adc
leave
dec
sub
out
out
dec
add
rcl
cld
inc
add
outsl
mov
in
inc
jl
jmp
flds
jnp
repz
or
and
xchg
pop
pusha
aas
lods
mov
xorb
mov
popa
outsl
pop
int3
arpl
fdivl
cmpsb
cmpsb
loopne
aas
dec
fwait
cwtl
mov
dec
shll
ret
imul
sub
mov
cmp
mov
adc
sub
mov
aad
out
add
addr16
repz
in
nop
jecxz
inc
push
inc
fistpl
sub
repz
xchg
sub
or
sub
mov
dec
repnz
in
enter
aad
out
pop
out
out
dec
and
cli
bound
ficoml
insb
ror
daa
insb
mov
fs
jno
es
out
xchg
cltd
popf
icebp
loop
sub
or
push
push
jg
stos
fsubrl
cmp
inc
xchg
sub
insl
icebp
xchg
jbe
mov
pop
insb
icebp
xchg
aaa
pop
lahf
sti
push
cld
test
sbb
xor
lock
nopl
dec
nop
daa
or
and
sub
mov
mov
pop
inc
or
mov
ret
rcr
and
testb
add
sub
in
push
sub
pushf
pop
shl
movsl
sahf
lret
out
push
mov
daa
fnstcw
xorl
dec
mov
rorl
push
and
push
adc
lds
jle
jo
fidivrl
out
inc
out
imul
cwtl
mov
dec
sbb
data16
mov
popa
xchg
and
mov
ds
and
push
test
icebp
xchg
inc
add
xchg
jne
xchg
fdivl
fsub
fisttps
stos
xor
push
gs
les
jle
pop
loop
push
imul
shlb
hlt
jmp
test
inc
xor
shrb
push
repz
adc
sub
mov
scas
bound
rclb
in
pop
sub
xchg
pop
sbb
add
repz
scas
xor
xor
outsl
mov
lcall
mov
mov
imul
fdiv
in
jbe
xor
ficoml
daa
adc
xchg
rep
lret
mov
cmp
je
mov
xchg
push
loop
ss
push
clc
mov
mov
push
mov
mov
sub
jge
lret
movaps
mov
iret
out
push
mov
or
call
stc
xchg
xorb
cmp
mov
orl
lods
or
xor
jnp
sti
mov
ljmp
sarl
out
jb
fwait
repnz
add
dec
xchg
stc
add
movl
xchg
arpl
dec
xchg
dec
mov
popa
in
adc
adc
icebp
mov
loopne
dec
mov
out
daa
push
or
sbb
adc
or
in
pop
stos
in
iret
aam
or
out
fidivs
je
or
mov
fst
sub
pop
cli
xor
in
jle
cli
fistps
mov
lea
mov
stc
or
in
loopne
add
gs
lret
cli
scas
pop
in
and
sub
xor
addr16
scas
and
fucomi
faddp
or
sbb
pop
push
cs
bound
aas
jo
icebp
adc
sbbb
repz
call
add
ds
pusha
lret
les
jne
sbb
popf
add
out
cld
outsb
int3
mov
pop
inc
dec
lock
rolb
or
test
lret
push
inc
jl
xorl
insb
lock
pop
jns
pop
ss
scas
iret
call
dec
push
lahf
mov
nop
fimull
mov
pop
insl
push
scas
dec
dec
adc
cld
fs
or
xor
xor
sub
aam
enter
push
fs
mov
pop
popa
daa
adc
fwait
mov
sub
loop
mov
arpl
mov
xchg
pop
pop
imul
dec
dec
insb
fmul
daa
insb
mov
xor
das
pop
mov
push
fldenv
sahf
fstp
xchg
mov
cmp
mov
leave
lcall
pop
ljmp
inc
in
icebp
pop
jl
test
and
sub
jae
ss
lods
rol
lods
xchg
paddb
pusha
pushf
lahf
js
js
xchg
jo
jge
sbb
pop
and
jge
stos
push
insl
push
out
jle,pt
xor
imul
sahf
in
inc
and
jge
mov
push
sbb
xlat
and
out
shrb
dec
push
mov
js
fsub
or
mov
loope
sbb
daa
insb
icebp
daa
adc
shr
jb,pn
faddl
jp
movsb
xor
adc
or
cmp
adc
xchg
repz
sbb
movb
jno
adc
mov
pusha
js
lods
popa
cmp
jae
cltd
bound
lods
add
sbb
fiaddl
mov
mov
repnz
icebp
sbb
loope
mov
lds
out
fnstcw
cli
xchg
add
sub
mov
fsub
push
jns
mov
into
leave
daa
insb
hlt
dec
loop
xor
int3
jae
ret
mov
push
inc
push
xchg
mov
adc
mov
dec
out
push
sub
call
js
or
push
scas
ret
loopne
dec
dec
icebp
mov
sub
out
xor
negb
hlt
xlat
aad
ss
dec
mov
movsl
fs
repz
loope
sub
cmpsb
cmp
dec
icebp
mov
mov
sub
sbb
push
stos
adc
inc
addr16
xchg
popf
cmc
push
jae
xchg
xchg
repz
dec
enter
push
jnp
std
sbb
or
xchg
push
mov
movl
cmp
adc
inc
aad
or
inc
fs
arpl
push
fistl
push
jl
push
jmp
jae
loopne
mov
pop
jae
jnp
rorb
xchg
cmpsl
mov
xchg
lcall
les
lret
lds
out
imul
daa
insb
fidivrl
mov
add
fcoms
roll
leave
fldt
shrl
aaa
inc
in
pop
push
scas
jbe
jmp
in
call
je
call
outsb
icebp
xchg
dec
fstps
mov
or
mov
add
mov
into
jmp
sub
pop
lds
and
cwtl
pop
lcall
nop
icebp
xchg
div
cmpsl
mov
insb
icebp
xchg
popa
rclb
adc
int
add
push
loopne
push
jno
mov
stos
pop
repnz
repz
unpcklps
rcll
daa
hlt
mov
xor
dec
imul
mov
mov
mov
push
call
es
or
sub
fcompl
cmp
xchg
lret
icebp
loop
sbbl
adc
bndldx
sub
popa
jns
sahf
jno
cwtl
and
add
add
jnp
fldenv
insb
icebp
mov
sub
pusha
and
xor
mov
cmp
xchg
cmp
xchg
ret
or
aas
in
daa
insb
lock
insl
fimuls
xor
push
cmpsb
aad
mov
mov
in
xor
jmp
mov
daa
jns
adc
push
aaa
cmp
dec
jno
fstps
je
stos
repz
cmp
jno
je
push
addr16
jbe
fwait
sbb
push
clc
shrl
stc
jnp
xorl
out
call
jb
gs
jle
cmp
in
out
aas
mov
sarb
leave
popf
je
xor
xorl
popf
sub
insl
pop
lcall
mov
call
pushf
jbe
insl
jbe
ja
test
jb
fs
dec
push
dec
pusha
dec
sub
mov
icebp
jnp
xorl
push
dec
dec
loopne
rcr
out
or
leave
addb
fcmove
mov
pop
xchg
mov
dec
outsb
leave
inc
mov
repz
add
int
in
mov
adc
mov
lahf
cmpsl
fists
out
stc
in
inc
lds
fadd
mov
ret
ret
cmpsl
push
mov
push
aam
scas
pop
out
insb
jae
jecxz
shll
jle
pushf
jp
sti
call
cmp
rcrb
cmp
fistpll
xchg
push
icebp
pop
xor
sbb
or
in
xchg
shll
loop
xchg
imul
xchg
xor
mov
add
negl
jnp
mov
adc
inc
xchg
icebp
daa
mulb
inc
popf
fbld
cltd
cmp
sbb
hlt
pop
loopne
add
push
and
mov
mov
call
loope
add
stc
fbstp
xchg
jl
mov
or
push
stos
cltd
jmp
inc
ret
mov
stc
cld
cmc
loopne
lods
idivl
jnp
mov
sub
jb
addr16
or
mov
fidivl
sbb
out
sbb
jo
xchg
stos
lcall
cmpsl
xchg
jg
aad
jnp
mov
push
pop
out
pop
das
mov
dec
in
sar
mov
addr16
or
dec
mov
lods
rcll
je
push
jl
xorl
arpl
ja
movsb
adc
stc
add
adcb
pop
nop
clc
or
je
movsl
pop
dec
test
mov
jle
ljmp
pop
inc
jmp
pop
xchg
mov
push
xor
sbb
mov
sbb
xor
jbe
xchg
inc
push
clc
shll
inc
sahf
icebp
mov
bound
add
and
xor
adc
cmp
add
push
or
push
ret
sbb
data16
mov
sar
or
out
loop
or
pop
mov
addl
or
push
insb
icebp
xchg
mov
out
lea
xchg
ja
cmpsl
addr16
xor
fadds
add
orl
mov
dec
mov
pop
mov
mov
mov
je
call
insb
std
sti
hlt
push
or
pop
imull
push
pop
sub
jmp
enter
lock
ljmp
insl
in
insl
cmc
xchg
jo
stos
iret
inc
mov
ljmp
inc
je
pushf
stos
sbb
jl
xchg
scas
pop
scas
xor
fisubs
push
jb
or
xor
pop
mov
sar
in
stc
aad
sub
pop
fisttps
icebp
xchg
repz
fadds
out
xor
insb
fisubs
inc
aam
sahf
ds
daa
sub
sub
stos
and
dec
shrl
push
jne
push
mov
mov
aad
testb
out
fstl
daa
sbb
popa
and
sub
test
mov
add
push
xchg
xor
cltd
outsb
je
pop
lahf
jle
lods
push
jnp
sbb
jp
dec
inc
out
arpl
daa
insb
xchg
xchg
sub
sub
mov
cmp
stc
mov
loop
imul
adc
int3
test
adc
decb
clc
cmpsb
stos
loopne
mov
test
mov
add
add
sub
pmuludq
out
adcb
lds
addl
push
stos
fadds
call
mov
mov
mov
push
in
or
mov
lret
movsl
sti
sub
mov
daa
push
sub
jmp
outsl
sarl
jbe
mov
daa
jl
mov
xchg
xor
push
dec
pushf
dec
nop
cs
xchg
lea
add
leave
xchg
adc
stos
test
dec
dec
mov
sbb
adc
mov
inc
mov
cltd
in
adc
lret
jb
lock
mov
enter
ja
ret
xor
subb
adc
es
push
push
and
push
sub
pop
pop
fisubs
xor
insl
mov
sahf
dec
sarb
sbb
push
neg
int
cltd
repnz
insb
fidivl
mov
xchg
outsl
mov
ja
cltd
and
mov
repz
sbb
clc
inc
shll
push
sahf
jmp
jg
repnz
std
ror
pmaxub
fwait
mov
imul
fnstcw
aaa
ja
inc
xchg
push
mov
daa
testl
daa
and
cmpsl
and
or
imul
lds
sbb
mov
or
push
adc
shl
aas
xor
mov
rcrb
sbb
ret
jb
sub
dec
sub
cmp
repz
cmp
xchg
repz
pop
dec
cwtl
arpl
scas
out
mov
and
arpl
lea
js
ljmp
repnz
shrb
fdivrs
cmpsb
add
push
mov
shrb
mov
xchg
inc
push
imul
lds
sbb
enter
and
lock
divb
shl
test
push
inc
imull
idivb
and
xchg
repz
sbb
loop
cmp
xchg
rcr
dec
xlat
jmp
cltd
pop
pop
push
mov
aaa
ja
insb
icebp
jge
and
test
xor
jb
popa
inc
dec
and
lea
insb
icebp
adc
or
leave
daa
insb
fidivl
push
ljmp
jl
mov
loop
push
fwait
add
sub
mov
imul
add
call
xor
data16
daa
in
inc
jl
xorl
push
js
or
inc
jg
hlt
sub
fstpl
aad
inc
ror
sub
adc
jecxz
lahf
sbb
cli
mov
cmpsb
test
mov
ljmp
jg
cmp
pop
jne
jbe
dec
xor
pop
pop
jg
mov
mov
mov
pop
andl
repnz
ret
mov
xchg
icebp
xchg
repnz
push
mov
push
xor
lock
sbb
insl
push
dec
loope
xor
sbb
es
cmp
repz
add
mov
daa
insb
and
jne
mov
daa
in
jl
sbb
icebp
xchg
repz
sarl
and
jge
pop
cmp
jns
mov
sub
in
in
pusha
mov
mov
daa
push
adc
fistpl
jns
mov
ret
loop
mov
xchg
js
sbb
push
or
mov
cmpsb
repz
lds
push
jns
push
ds
pop
mov
imulb
pop
jne
movsl
repz
ret
je
jae
cwtl
shll
mov
icebp
lahf
mov
shl
jg
aas
fwait
jns
popa
cmp
and
adc
jle
scas
push
mov
sti
pushf
add
insb
icebp
leave
mov
mov
cmp
mov
mov
add
mov
cmc
fsubrs
cmp
test
pop
adc
add
or
shl
mov
or
ja
icebp
xchg
fsubrl
mov
je
fcmovnb
or
ja
jbe
loopne
xor
lods
shl
dec
cld
fisubrs
sub
xchg
fldenv
dec
loop
mov
insb
icebp
xchg
sub
xchg
das
pop
xor
and
and
push
xchg
ljmp
ret
test
or
sub
pop
mov
aad
jb
movsb
shl
cmp
fidivl
dec
and
pusha
inc
std
imul
mov
adc
xlat
int3
orl
cltd
push
cli
out
popf
test
movsl
mov
enter
adc
repnz
repz
daa
insb
aaa
xchg
dec
or
and
setb
ret
mov
mov
movsb
xor
psubusw
fnstenv
ja
loope
mov
iret
into
and
movzwl
adc
xor
cmp
insb
pop
pop
jns
data16
out
and
out
lods
and
xor
inc
add
test
leave
push
add
popf
pusha
pop
xchg
dec
outsb
rclb
data16
xor
or
out
ret
or
insb
loope
push
aad
push
es
pop
mov
daa
out
mov
fsubl
pop
lds
push
test
test
adc
fs
js
mov
sbbb
push
ja
stos
into
adc
in
xchg
rep
faddl
xchg
ret
jb
mov
mov
push
test
jbe
loop
cmpsb
push
add
cs
push
andl
mov
xorl
aad
cmpb
ret
xor
test
mov
fisubl
repz
cmp
xchg
push
lea
aam
insb
lock
push
loope
add
insb
icebp
int3
push
scas
sbb
fcmovne
ret
inc
stos
movsl
mov
nop
cmp
push
scas
sub
jg,pt
and
sub
repnz
cmp
jo
ja
mov
orl
inc
clc
cs
jg
mov
xchg
imul
and
sbb
aam
cmp
and
bound
ds
pushf
adc
lret
hlt
mov
les
push
push
inc
jg
pop
out
cmp
cmp
jg
xchg
mov
push
pusha
and
sahf
xchg
adc
xorb
sub
sub
xchg
outsb
aam
test
stc
ret
sub
daa
xchg
out
mov
cmp
or
insl
pop
movnti
mov
and
push
jo
shll
fnstsw
sbb
clc
cmpsb
stos
loopne
mov
mov
adc
repz
mov
arpl
or
cmp
mov
cmp
int
cmp
andb
subb
es
jge
jae
sub
adc
jno
mov
cld
jl
push
lahf
loope
inc
xchg
dec
push
inc
jge
or
pop
inc
xor
mov
xor
dec
sub
dec
repz
and
imul
mov
mov
aas
insb
icebp
xchg
shrb
jbe
jp
mov
into
inc
inc
ss
js
pop
addr16
fcompl
push
jle
or
flds
pop
lret
loop
out
gs
in
dec
xlat
mov
jl
fnstsw
shrl
ficoms
test
shlb
outsl
mov
xchg
idivb
jns
jp
adc
mov
or
call
adcb
int3
cmp
push
mov
and
push
fstl
jnp
es
xorl
sbb
or
mov
or
movsl
testl
mov
mov
icebp
xchg
repnz
enter
mov
xorb
fiaddl
ficoml
dec
and
aas
fidivrs
xchg
aas
stos
fs
popf
ret
inc
mov
add
popa
sub
pop
arpl
scas
xchg
pop
push
or
xor
lahf
sub
add
jp
xchg
shll
xor
repnz
mov
mov
shlb
mov
lret
xor
ret
fsubl
repnz
xchg
imul
in
push
loopne
aaa
sbb
lods
add
repnz
pushf
frstor
insb
icebp
jne
adc
shrb
in
sub
adc
insb
inc
push
loopne
in
daa
insb
std
rorl
pop
sub
dec
pop
jmp
notb
xor
sti
cltd
int
out
cltd
rorb
icebp
xchg
mov
cmc
pop
clc
cmpsb
sbb
sub
xchg
pop
jnp
sti
pop
mov
cmp
and
sub
faddp
insl
aas
xor
cmp
repz
inc
xor
add
adc
pop
fadds
insb
lock
in
daa
insb
arpl
push
xor
dec
xchg
lea
mov
inc
call
sub
out
dec
adc
dec
popf
fdivs
xchg
xor
pop
mov
mov
cmp
daa
xchg
das
pop
mov
rcrl
push
ja
adc
jg
pusha
push
dec
sbb
icebp
add
adc
repnz
mov
pop
hlt
xchg
mov
and
push
leave
or
js
or
test
push
adc
dec
inc
mov
mov
insl
es
dec
or
mov
sahf
in
cmpb
adc
push
daa
sub
pop
cmp
inc
movsl
outsb
inc
cmpsl
movsb
aad
pop
out
mov
jg
add
insb
icebp
mov
lods
pushf
divl
jge
xchg
out
sub
pop
sbb
arpl
int3
xchg
xchg
sub
aas
popa
xchg
cmp
mov
scas
lret
sub
ljmp
pop
aad
inc
inc
std
imull
mov
mov
xorb
jle
mov
enter
aam
lock
sbb
sub
and
lds
ja
xchg
mov
insb
int3
xchg
sub
repnz
cmpsb
andb
push
mov
sub
mov
adc
inc
cmp
xor
popf
je
sbb
xorb
jl
out
mov
xor
fisttpll
adc
imul
dec
cmpsb
pushf
pop
inc
pop
sub
cmp
lcall
sub
mov
fcmove
sub
fdivl
sub
popa
cltd
push
xchg
mov
xchg
fimull
out
lock
lret
bnd
and
adc
xchg
repz
dec
in
sub
jmp
adc
loopne
fisttpl
pop
movsl
and
rcrl
ret
dec
ds
adcl
insb
icebp
clc
mov
push
push
xchg
repz
jno
fisttpll
addl
filds
rcr
push
jg
pushf
jge
mov
mov
add
mov
mov
adc
pop
cmp
fistps
and
dec
std
pop
mov
and
movsl
xchg
pop
pop
xor
loopne
or
loope
lock
inc
and
xor
pop
lds
cmp
test
mov
js
inc
adc
push
push
popf
js
test
daa
sbbb
sbb
fiadds
icebp
adc
lock
aaa
push
add
int
mov
leave
in
dec
jne
pop
xchg
cli
es
sahf
stc
mov
mov
paddq
dec
lods
dec
in
mov
lahf
sarl
cld
in
ret
mov
mov
js
movsb
cmpsl
sub
mov
inc
stos
mov
sbb
xorb
add
decl
insl
sub
leave
daa
fisttpl
ds
sbb
scas
dec
and
dec
push
jmp
dec
in
iret
in
popf
push
add
inc
aas
pop
imul
mov
hlt
pop
fnstsw
out
cli
fsubr
loope
push
xchg
int3
sarb
pop
adc
in
rol
mov
xlat
mov
ljmp
cmpsb
mov
scas
mov
push
repz
cmc
mov
lock
repz
sbb
cmc
mov
mov
ds
sbb
cmp
sub
xorb
adc
insb
aad
iret
out
push
mov
bound
xchg
adc
cs
add
sub
movsb
inc
scas
cmp
scas
loope
mov
xchg
repz
xlat
sahf
xor
jl
adc
jp
cmpsb
outsl
inc
lods
mov
push
and
lahf
sbbl
int
cmp
jb
stos
cld
cmp
jmp
adc
roll
jg
scas
hlt
jae
nop
push
xchg
sub
or
pop
xor
int3
adc
jp
test
into
cmp
sarb
or
jp
xor
inc
or
push
mov
push
add
dec
cmp
xchg
cmp
insb
inc
jle
daa
dec
enter
mov
inc
cmp
aas
or
sub
int3
jne
imul
fwait
jl
dec
ficoml
imul
xchg
jle
mov
xchg
das
cltd
outsl
movsl
in
pop
xor
or
pop
nop
xchg
sbb
add
fdivr
imul
daa
insb
fdivl
push
lea
mov
leave
scas
cmp
pop
ja
jno
and
shrl
shll
xor
cmp
lock
jg
mov
jle
cld
dec
stos
xchg
sub
or
ja
std
mov
and
and
mov
mov
xor
and
lcall
mov
mov
mov
mov
mov
fdivrl
cwtl
sub
xchg
xchg
mov
test
cwtl
aaa
cmp
mov
repz
scas
js
push
mov
push
or
sub
jmp
cmp
jno
nop
jg
lock
or
fwait
lods
outsl
pop
lods
out
push
test
in
cmp
pop
call
inc
jno
xchg
rclb
sub
add
sbb
lods
out
mov
xor
mov
fistpl
test
mov
sbb
test
jae
dec
out
or
cmpsb
xor
adcb
push
mov
out
xor
test
and
pop
divb
enter
dec
and
add
or
lds
fcmovb
repz
push
out
mov
out
dec
xchg
or
test
jp
jns
pop
mov
pop
mov
push
mov
ds
int3
fimull
xchg
repz
stos
movsb
icebp
xchg
repz
outsl
xchg
mov
xchg
add
dec
sbb
xchg
jnp
sub
or
xchg
js
push
sub
inc
push
add
mov
pusha
subb
inc
repz
lret
xor
daa
out
mov
leave
daa
in
add
push
xorl
sbb
enter
dec
jmp
sub
lahf
push
fwait
mov
test
enter
call
or
mov
mov
mov
cmp
sub
or
cwtl
bts
out
lock
out
fcomi
mov
in
and
xchg
mov
add
sub
or
in
testl
orl
inc
je
push
xchg
cmp
daa
insb
icebp
dec
adc
mov
adc
xchg
rep
aam
ljmp
inc
hlt
in
in
jnp
jg
sub
mov
and
sub
pop
mov
daa
push
adc
cmp
popa
pop
jmp
push
sbb
outsl
xchg
rorl
fs
add
subl
pop
sub
decb
cs
into
out
cltd
adcl
movsl
cmp
out
in
mov
lahf
scas
push
add
gs
xor
out
xchg
repz
sti
xchg
repz
insb
icebp
jnp
xorl
js
mov
daa
push
and
dec
push
mov
fstpt
mov
cmp
mov
cmp
push
orl
mov
insb
xor
pop
loopne
insl
into
daa
insb
icebp
jnp
xorl
pop
xchg
xchg
test
mov
sti
push
inc
loopne
sub
stos
cmpsb
mov
sahf
push
fimull
fdivl
leave
lea
adc
pop
scas
daa
add
cmpsl
lods
int
add
push
fildl
loop
dec
cmc
mov
adc
cmp
sub
inc
jl
xorl
xchg
push
js
cmpsl
add
jnp
shr
mov
in
in
inc
ret
adc
cmp
daa
inc
push
dec
mov
clc
mov
mov
rolb
outsl
jne
iret
xchg
mov
push
insl
rclb
sbb
fimull
orb
test
jl
cmpsl
lcall
in
jo
jl
xorl
sbb
and
xchg
mov
mov
sub
es
iret
mov
mov
stc
push
sub
mov
and
pop
jp
js
fs
mov
hlt
xchg
push
dec
cmc
and
loop
jecxz
mov
mov
sbbl
aaa
in
aam
push
es
push
scas
sahf
pop
sbb
push
jg
pop
and
cmp
sbb
sarl
out
movsl
les
jle
cmc
and
in
ds
xchg
or
jecxz
lret
push
lcall
sarl
lret
cwtl
add
pop
movsl
fnstenv
mov
sbb
sub
ljmp
outsb
fidivs
xchg
xchg
or
xchg
int
arpl
cmp
call
fdivrs
sbb
out
ljmp
jo
pushf
ss
xchg
lahf
roll
in
mov
inc
pop
pushf
xchg
push
fdivs
repnz
loope
in
mov
mov
mov
fdivl
fwait
movsl
jle
mov
stos
imul
jbe
dec
loope
dec
enter
movsl
add
ja
adc
repz
lods
ss
int3
and
lret
jne
pop
mov
les
push
mov
sub
movl
fs
xlat
dec
xchg
lods
lret
pop
cmc
mov
mov
popf
data16
or
popa
inc
cmp
pushf
adc
fistps
fcomps
lea
push
hlt
pop
les
dec
lods
aam
mov
xchg
and
xchg
lea
jae
leave
enter
test
fs
mov
mov
pop
ljmp
scas
jnp
jo
xchg
icebp
adc
dec
into
dec
aas
imul
fcompl
int3
fs
dec
inc
les
stos
inc
mov
cmp
or
mov
inc
insb
fmul
daa
insb
out
fmul
stos
adc
loopne
sbbb
in
jp
aas
sarl
jne
xchg
out
mov
xchg
jle
sahf
cmc
and
xor
xchg
dec
add
les
scas
iret
push
jb
dec
into
sbb
cmp
pop
jnp
push
imul
push
lret
stos
int3
xchg
xchg
push
dec
adc
add
clc
out
fsub
mov
mov
daa
push
push
mov
or
pop
sbb
mov
stos
call
mov
test
not
mov
mov
pop
fstl
xor
pop
dec
cltd
mulb
inc
inc
sub
inc
jp
lock
add
daa
mov
mov
mov
out
and
ljmp
push
fwait
mov
insb
lock
mov
cmpsl
inc
popl
add
fcmovb
repz
movl
add
inc
adc
xchg
cmc
mov
xchg
inc
lret
and
or
mov
xlat
into
or
aam
stos
jno
mov
jb
hlt
xchg
mov
mov
stc
adc
mov
jmp
leave
test
cli
adc
arpl
jnp
les
imul
insb
stos
lret
dec
out
and
cmpsb
pushf
repz
insb
icebp
pop
mov
rorb
push
or
sbb
bound
pop
inc
leave
int
push
xchg
xchg
mov
fdivr
and
mov
in
repz
and
or
sti
clc
fs
jno
imull
call
iret
lds
je
out
push
add
ret
rcll
fildll
aaa
icebp
jle
pop
mov
fdivrl
add
mov
push
ds
shr
jo
mov
pusha
loop
push
lret
repz
lahf
loope
xor
cmp
scas
mov
dec
fsubl
jne
popa
push
icebp
mov
mov
xor
pop
pusha
nop
ret
sbb
xor
aad
cmpsb
jo
jmp
pop
mov
cs
sbb
subb
fcoms
pop
add
xchg
repz
daa
insb
xchg
outsl
jns
or
jmp
mov
fldcw
or
ret
dec
outsb
rolb
pop
ret
pop
int
inc
mov
xchg
repnz
xchg
add
aad
push
adc
loope,pn
popf
or
repz
popf
jbe
call
mov
faddp
pop
xor
cmp
pushf
das
or
add
pop
insb
icebp
xchg
sbb
cmp
and
pusha
or
shlb
loopne
mov
dec
loope
fldt
repnz
je
mov
cmp
std
and
cltd
mov
mov
aas
xor
sbb
sub
repnz
dec
sbb
cltd
div
or
push
push
das
lock
testb
arpl
xor
pop
scas
mov
jl
fbld
push
mov
subb
xlat
push
mov
clc
jae
ja
mov
cli
mov
jb
lock
icebp
xchg
addr16
jo
mov
nop
mov
pushf
dec
sub
inc
sti
jecxz
test
je
stos
fcom
push
mov
rol
ret
in
sahf
mov
test
push
sarb
lret
cmc
sbb
adc
xor
adc
aas
outsb
or
jl
or
mov
mov
mov
rcrl
inc
jo
pushf
xchg
fldt
out
adc
mov
mov
jmp
fdivr
push
test
adc
das
dec
xor
aaa
in
lahf
pop
inc
out
xor
mov
xlat
shr
inc
out
push
add
cmc
enter
xchg
out
dec
jns
dec
push
pop
mov
cmc
push
clc
out
push
jecxz
pushf
out
insb
icebp
inc
and
pop
dec
or
into
in
push
adc
jns
sub
out
scas
les
cmp
insb
jae
fiaddl
ds
adc
inc
or
jbe
out
jae
scas
mov
jno
data16
jge
hlt
insb
fbstp
adc
jnp
stc
jmp
paddd
cmp
jmp
les
pushf
xchg
mov
push
adc
mov
dec
add
sarl
out
adc
xlat
pop
addr16
fistps
repnz
cmpsl
fstp
shr
or
iret
push
subb
test
pop
push
fsubrs
mov
ljmp
ret
rcr
inc
stos
sub
add
pop
fwait
sub
cmc
mov
mov
xchg
push
sub
pop
jns
cmpsl
fwait
add
mov
jmp
and
cwtl
fldenv
insl
dec
xchg
int3
adc
sbb
mov
lock
out
jle
fst
sub
icebp
sub
outsl
push
ficoms
sub
mov
pop
sub
js
push
arpl
fsubrp
pop
jle
jmp
daa
hlt
and
sarl
xor
nop
inc
xor
cs
xchg
repnz
testb
dec
insb
leave
daa
insb
and
mov
pop
pop
scas
dec
fadds
in
push
lahf
mov
insb
icebp
xchg
pop
pop
sub
bound
ds
ffreep
aaa
call
aad
shl
out
lods
cmpsb
mov
fcoml
adc
or
mov
insb
sbbl
dec
and
push
sub
int3
lods
aaa
fwait
iret
jg
sub
xchg
data16
jmp
mov
fcmovnu
mov
mov
sti
imul
filds
icebp
mov
mov
icebp
xchg
repz
daa
insb
test
int3
repnz
xchg
loop
test
add
lcall
jp
cmp
mov
ja
out
mov
jle
pushf
loope
insb
icebp
xlat
fs
fs
inc
xchg
pop
add
jb
fwait
out
rcrb
jl
cld
insl
in
jecxz
jl
jmp
rol
mov
and
push
cmp
xchg
mov
and
shl
jg
jno
jg
adc
frstor
jge
test
subb
es
xchg
imul
arpl
lahf
fbstp
pusha
add
rcll
adc
mov
xor
ror
movsb
adcl
lock
and
push
mov
insb
movsl
in
jl
xorl
orl
inc
es
jecxz
jns
mov
mov
nop
xor
xor
push
push
adc
sub
pushf
je
rolb
push
jl
jmp
test
add
ret
and
pop
jmp
fisubrs
xchg
mov
or
call
mov
jnp
fdivp
xorb
inc
xor
jecxz
data16
sbb
loopne
dec
add
mov
jno
sbb
ds
inc
dec
sbb
add
stos
addr16
pop
sbb
lret
dec
jne
daa
push
sbb
jno
outsl
dec
fiaddl
mov
punpckhbw
or
mov
sbb
fadd
int3
mov
pxor
dec
push
lahf
mov
insb
icebp
xchg
push
ffreep
mov
imul
jg
sarb
fwait
imul
test
dec
sarl
or
adc
outsb
cmp
xchg
stos
dec
lret
xchg
jnp
or
inc
pop
xchg
clc
mov
cmp
jl
add
xor
adc
dec
sub
ja
pop
cli
out
fsubs
inc
cmpsb
adcb
jno
cmp
xchg
cwtl
js
roll
idiv
dec
dec
inc
mull
fcoml
adc
ret
dec
js
jno
fsubrs
in
mul
out
adc
xorl
xor
or
test
int3
lret
adc
add
ljmp
cwtl
cmp
mov
std
add
xlat
xor
inc
mov
pop
inc
cmpb
icebp
mov
js
mov
daa
push
and
xor
mov
test
int
ficompl
inc
in
fistpl
push
cltd
mov
pop
sbb
rolb
mov
ds
mov
lret
push
mov
push
insb
icebp
xchg
xor
aam
sub
mov
outsl
lcall
fisttps
test
data16
sbb
dec
fstps
sub
jl
jle
lcall
lcall
nop
repz
inc
inc
fmull
push
data16
mov
xchg
loop
lock
pop
out
out
aam
push
sub
xchg
repz
sahf
sbb
cwtl
subb
mov
pop
jecxz
test
ret
dec
nop
push
pusha
mov
mov
movsl
cvtps2pd
insb
jl
sti
or
hlt
jnp
push
xchg
mov
loopne
faddl
xchg
sbb
movsb
jo
arpl
movsl
inc
out
pop
cmp
je
cmc
imul
daa
insb
jae
cmp
inc
cmp
shll
int3
mov
sub
in
out
cmp
hlt
loope
out
js
jp
scas
mov
dec
lock
push
shrl
push
jns
mov
es
mov
pushf
stos
ss
icebp
jb
ja
sbb
sub
mov
sub
cs
cmp
push
adc
mov
mov
fnsave
loope
or
jl
gs
fwait
daa
es
lock
repz
jmp
xchg
jmp
inc
push
les
adc
les
ret
sub
xchg
jae
fstp
icebp
xorb
and
sub
outsb
adc
neg
inc
lea
xor
adc
fstpt
std
mov
pop
cli
adc
jo
jne
dec
inc
pminsw
mov
push
or
lods
cmc
lock
repz
jns
inc
test
ret
popa
or
sub
mov
jl
inc
xchg
push
insl
mov
dec
out
push
inc
or
lock
flds
imul
cmp
lret
fdivrl
xchg
stos
dec
cmpl
xor
adc
or
aas
add
mov
int3
mov
aaa
cmp
aaa
cld
sub
cmp
je
clc
jmp
push
mov
insb
icebp
xchg
lcall
xchg
icebp
dec
cmp
sbb
dec
xlat
ss
xchg
push
in
pushf
mov
sub
int
push
test
cmp
jp
push
adc
adc
push
cmpsl
or
dec
xor
mov
inc
nop
fstps
xor
jnp
pop
jae
cs
fs
jno
nop
xor
lahf
or
sbb
mov
pushf
in
and
js
mov
xor
ljmp
xor
mov
clc
fistl
jae
fisubrl
lea
mov
sti
repz
push
fs
fistpll
xor
mov
shll
cmp
stc
cltd
mov
add
test
sahf
inc
scas
lret
push
fidivs
inc
test
test
fdivl
push
int
pop
arpl
jbe
ss
arpl
lcall
mov
leave
daa
jno
mov
fst
in
imull
into
xchg
jp
test
pop
xor
sbb
sub
es
mov
daa
ja
jp
jecxz
clc
mov
mov
mov
and
out
and
aam
insb
movsb
push
inc
bound
outsl
loope
or
push
xchg
add
mov
inc
dec
ljmp
in
mov
adc
adc
mov
sub
popf
and
les
popa
mov
jge
dec
iret
es
dec
jp
insl
lahf
pop
pop
outsl
add
jnp
mov
cmp
jnp
xor
xorb
jns
ret
outsl
icebp
xchg
scas
leave
daa
repnz
ja
mov
daa
push
or
popf
sti
cmp
roll
pusha
fmull
test
pop
xchg
es
stc
daa
insb
icebp
sub
and
aam
call
dec
jns
out
test
fsubrs
xchg
sbb
lret
outsb
lret
jl
xorl
mov
pop
mov
add
add
jno
xor
pop
and
lea
push
sub
loopne
and
outsb
cld
or
pop
or
sbb
push
clc
push
iret
jl
jne
fisubl
sub
lock
test
inc
shlb
rcll
xorb
js
mov
daa
clc
cmpl
dec
mov
icebp
xchg
fcoml
dec
sub
or
add
outsb
mov
jl
jecxz
fdivr
pop
sahf
push
pop
nop
hlt
mov
cmpsb
int
jmp
sbb
sub
dec
pop
xchg
ss
mov
stc
mov
jl
xor
fdivrl
jl
sub
imul
mov
cs
cs
mov
scas
pop
je
hlt
dec
pop
mov
mov
test
mov
inc
mov
mov
xchg
repz
jecxz
inc
iret
daa
insb
fdivrl
lret
cld
xchg
xor
and
dec
popf
fwait
daa
cmc
adc
push
cmp
lret
stos
sahf
inc
and
fbld
insb
icebp
dec
out
and
movl
rol
cmp
xchg
inc
xchg
aaa
and
xchg
cmp
xchg
adc
inc
xchg
dec
pop
rcll
jl
pop
mov
jns
sub
jge
inc
cmp
cs
mov
adc
fwait
test
int
pop
stos
pop
pop
sbb
arpl
dec
test
mov
insb
loopne
daa
insb
and
dec
or
icebp
xchg
pop
dec
in
mov
xchg
cmp
lahf
sbb
and
dec
scas
daa
test
or
and
push
ds
daa
icebp
mov
ja
mov
daa
idivl
sbb
mov
daa
ret
xchg
pop
xchg
jecxz
xor
sbb
cmpb
sbb
sub
xchg
and
arpl
enter
call
je
jo
outsb
pop
data16
fistps
push
ds
sbb
add
daa
insb
icebp
jae
jb
rol
aad
pop
pop
mov
sbb
loopw
divb
push
sbb
lret
ret
imul
fbstp
push
sub
jge
sub
mov
cli
in
sarl
imul
inc
jae
pop
adc
xlat
fists
xchg
jl
scas
mov
scas
mov
js
cld
outsl
dec
inc
or
mov
cli
nop
cwtl
stos
xor
mov
into
enter
push
pop
sarl
stc
sbb
cmp
std
int
int3
jb
test
xchg
repz
ret
daa
insb
jbe
add
out
lret
je
notb
icebp
jge
xlat
mov
push
imul
mov
adc
shll
mov
add
outsl
jbe
pop
and
int
mov
pop
in
mov
fnstsw
jl
leave
adc
leave
stos
mov
cmp
outsb
sub
pop
pop
es
push
ret
and
test
pop
jge
jg
and
clc
bound
push
push
push
or
stos
xor
xchg
repz
stc
jnp
xorl
sahf
dec
cmp
xor
scas
xchg
add
add
pop
repz
sbb
jns
scas
and
mov
xchg
adc
int3
ret
push
imul
aam
test
leave
daa
jmp
dec
repz
pop
adc
cmp
out
addr16
add
stc
push
add
in
pop
and
loopne
jnp
push
repz
inc
xor
mov
pop
add
inc
cmp
negb
xchg
movsb
sub
cld
clc
mov
cmp
push
or
sub
xchg
repz
adc
repz
imul
push
in
fcoms
call
inc
outsl
ret
sub
mov
adc
or
push
shl
fldenv
loop
pop
stos
xor
push
or
jne
jl
fadd
stos
leave
daa
out
out
xchg
jo
mov
test
imul
daa
insb
data16
dec
mov
lock
clc
dec
inc
pop
and
pop
inc
dec
jmp
fdiv
push
imul
in
je
mov
daa
insb
add
adc
jno
add
add
cs
addr16
ret
fistpll
push
gs
pushf
mov
std
les
xor
sbb
push
outsb
shrb
ss
push
xchg
repz
xlat
mov
or
aad
jo
xor
pop
daa
or
in
jns
dec
dec
imul
mov
mov
lds
mov
dec
add
xchg
js
ffree
mov
lea
add
lods
mov
out
aam
jno
fsubs
lods
jbe
add
cmp
loopne
insb
leave
daa
insb
or
pop
enter
cltd
sbb
pop
hlt
mov
rorl
mov
sbb
jo
fistpl
clc
inc
or
mov
jne
scas
ret
lret
notb
adc
and
sub
adc
add
sbb
lret
ret
imul
frstor
insl
or
xor
das
push
testl
jo
add
mov
sar
xor
outsl
aas
jge
mov
xchg
fsubrl
jl
add
nop
les
stos
cwtl
mov
ltr
scas
in
icebp
scas
pop
push
mov
outsb
lods
enter
popa
and
cmpsb
xor
add
outsl
xchg
mov
adc
fdiv
xchg
repz
icebp
xchg
repz
sahf
test
out
dec
imul
sub
jne
addl
mov
shlb
dec
cli
jmp
dec
mov
dec
shrl
dec
test
aas
add
push
bound
call
push
lds
pop
mov
es
mov
sbb
jl
out
stos
jmp
sub
daa
insb
fadd
js
mov
movsb
sbb
divb
into
mov
aam
pop
and
or
std
xor
add
ja
xchg
sub
clc
mov
repz
lret
hlt
lock
and
popa
jno
mov
dec
pop
fistps
or
lahf
mov
inc
int3
into
cmp
push
cld
sbbb
lahf
mov
add
inc
sub
cmp
fisttpll
bound
sti
testl
mov
je
cld
insl
ror
ds
pop
into
rorb
std
out
mov
jle
jecxz
dec
pusha
jmp
push
cmp
out
lea
pushf
cmp
jg
push
out
inc
push
dec
inc
clc
arpl
incl
or
mov
fcmovnu
in
mov
push
test
cmpsl
lods
test
push
inc
ja
jle
cmpsl
cmp
stc
mov
data16
adc
cmpb
jno
adc
sbb
mov
mov
push
std
sbb
mov
fmull
leave
daa
insb
mov
sub
fwait
mov
pop
fwait
sbb
je
inc
fstpl
repnz
or
pop
sbb
repz
xchg
sub
add
jl
movsb
imulb
or
ja
jl
xorl
loopne
test
cmp
jecxz
iret
loopne
dec
inc
pop
test
dec
sub
ljmp
ficoms
mov
hlt
arpl
lea
fnstsw
adc
enter
fcmovbe
test
outsb
add
jae
cs
in
xchg
lods
xor
or
and
aad
and
mov
xchg
repz
int3
daa
pusha
mov
push
cmpsl
lea
jno
or
in
or
adc
sbb
adc
adc
pop
pop
cmp
loope
cmp
daa
stos
daa
movsl
add
and
dec
xchg
jb
stos
push
call
pop
popa
outsb
fmull
mov
jnp
ja
jl
frstor
pop
and
and
mov
cli
imull
in
in
sub
test
sub
and
sbb
loopne
sub
in
inc
pop
cmpsb
fwait
jp
sub
je
mov
loope
loop
nop
mov
jmp
and
call
jle
shll
decb
xchg
add
subb
iret
jb
fidivl
cmpsl
stos
push
lds
mov
cmp
add
jbe
push
sbb
scas
mov
insb
icebp
xchg
sbb
dec
dec
pop
repnz
or
add
aam
fadds
mov
pop
pop
fisttpll
mov
jae
call
mov
cmp
xor
movsl
mov
and
mov
pop
or
push
arpl
mov
cmpsb
adc
mov
mov
add
inc
sbb
aad
lcall
mov
mov
out
pop
test
sbb
jmp
cmpsb
icebp
mov
daa
test
lahf
add
aad
daa
insb
aaa
into
data16
ret
imul
fstl
pop
es
push
push
shll
jl
dec
or
sbb
push
lds
xlat
int3
clc
push
add
dec
push
in
adc
pop
in
and
fiadds
cmp
cmp
push
mov
sub
jle
imul
adc
int3
daa
add
test
movsb
push
shlb
adc
mov
lods
imul
push
sub
popl
leave
push
mov
ret
lods
cli
mov
add
dec
xor
xor
push
dec
lcall
addb
push
jp
mov
es
xchg
imul
mov
cwtl
fcomp
xchg
push
mov
mov
dec
shlb
cmp
xlat
fisubrl
mov
and
mov
jp
pop
aaa
xchg
mov
fldcw
pop
clc
cmpsb
test
xchg
pop
jnp
sti
pop
imul
ret
daa
insb
sarl
mov
movsb
icebp
psadbw
call
adc
leave
outsb
sbb
pcmpgtb
sti
lds
mov
and
sub
mov
rep
fists
addb
and
pop
add
push
and
inc
fsts
imul
dec
rclb
jne
daa
insb
