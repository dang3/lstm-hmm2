shr
and
and
xor
inc
mov
jmp
movb
xchg
movb
nop
movb
push
pop
jmp
jmp
push
mov
xor
xchg
inc
push
pop
call
nop
jmp
leave
sti
repz
jmp
push
xchg
ror
xor
xor
or
mov
jmp
adc
jo
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
enter
xor
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
nop
sub
push
pop
mov
xchg
andl
mov
jmp
and
inc
add
or
mov
push
xchg
call
mov
shl
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
jmp
push
shl
shl
pop
push
xchg
call
mov
jmp
push
popl
pushl
add
mov
ror
shl
pop
rol
shl
sub
xor
mov
pushl
or
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
mov
dec
mov
or
mov
pushl
shr
or
pop
xor
mov
sub
nop
jmp
ror
mov
jmp
jmp
jmp
addr16
xor
shl
sub
or
mov
push
xchg
jmp
jmp
jmp
jmp
push
mov
mov
sub
shr
mov
sub
xchg
or
rol
and
mov
nop
nop
nop
nop
nop
mov
push
pop
andl
mov
push
xchg
add
nop
sub
or
add
and
add
mov
jmp
push
mov
push
nop
push
xchg
push
mov
push
mov
push
push
pop
push
mov
push
mov
xor
mov
jmp
push
xchg
shl
rol
inc
mov
mov
jmp
jmp
addr16
ror
mov
mov
sub
mov
push
mov
push
xchg
push
addr16
call
mov
mov
nop
jmp
push
nop
nop
nop
nop
pop
push
mov
push
mov
and
xor
add
xor
mov
push
nop
jmp
add
mov
cmpl
xchg
je
push
push
pop
shl
sub
sub
xor
dec
mov
sub
mov
jmp
movb
addr16
movb
mov
movb
mov
movb
nop
movb
xchg
jmp
jmp
xchg
mov
or
mov
sub
xchg
push
xchg
push
xchg
call
mov
mov
mov
mov
mov
mov
push
pop
jmp
sub
rol
sub
add
xor
mov
push
xchg
call
mov
sub
sub
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
movb
mov
movb
mov
jmp
inc
nop
inc
push
pop
jmp
jmp
jmp
mov
push
nop
xor
xchg
push
xchg
jmp
push
xchg
sub
sub
pop
add
or
and
mov
and
pop
jmp
mov
mov
jmp
push
xchg
jmp
jmp
jmp
jmp
jmp
push
pop
call
mov
mov
addr16
mov
xchg
mov
xchg
xor
xor
rol
mov
or
mov
call
xchg
jmp
mov
mov
jmp
jmp
jmp
push
addr16
call
nop
mov
nop
jmp
jne
or
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
nop
jmp
jmp
jmp
jmp
mov
cmpl
nop
jne
push
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
push
push
pop
push
xchg
push
xchg
jmp
jmp
jmp
jmp
jmp
xchg
dec
rol
mov
push
xchg
call
mov
jmp
push
mov
jmp
jmp
jmp
nop
or
add
shr
mov
push
xchg
push
mov
push
push
pop
push
push
pop
pushl
xchg
call
addr16
jmp
push
mov
xor
addr16
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
dec
nop
jmp
jne
orl
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
jmp
jmp
jmp
jmp
push
pop
sub
mov
sub
mov
pushl
mov
pop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
xchg
jmp
jmp
mov
nop
mov
mov
ror
xor
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
sub
add
rol
mov
jmp
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
cli
decl
add
jl
adc
and
or
inc
sbb
nop
mov
mov
jmp
push
xchg
rol
shl
inc
mov
call
mov
or
xor
sub
mov
ror
pop
pushl
xchg
push
xchg
pushl
xchg
push
nop
jmp
mov
sub
or
mov
mov
mov
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
inc
add
pop
cmp
push
pop
jmp
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
mov
xchg
mov
nop
movl
xchg
mov
sub
mov
ror
shr
ror
mov
jmp
movb
mov
movb
mov
jmp
jmp
jmp
jmp
inc
sbb
leave
mov
mov
jmp
push
addr16
push
xchg
push
xchg
push
push
pop
add
mov
push
xchg
call
addr16
and
sub
or
mov
or
mov
rol
add
xor
mov
mov
jmp
movb
xchg
movb
nop
movb
xchg
movb
nop
jmp
andl
nop
add
xchg
mov
push
pop
jmp
cmp
nop
jmp
jmp
jmp
jmp
xchg
xor
mov
and
xchg
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
xor
xor
or
shl
sub
mov
shr
ror
ror
mov
mov
pop
jmp
inc
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
pop
mov
add
and
or
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
sub
sub
mov
push
xchg
push
mov
mov
xor
mov
mov
xchg
add
nop
add
xchg
add
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
addr16
pushl
mov
pushl
xchg
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
and
or
or
or
sub
mov
and
xchg
cmp
xchg
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jbe
add
xchg
jmp
or
and
rol
mov
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
and
xchg
mov
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
mov
nop
mov
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
hlt
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
inc
and
xor
add
or
mov
mov
push
pop
jmp
xor
sub
shr
inc
xor
mov
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
xchg
jmp
call
push
pop
shl
inc
inc
rol
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
add
shll
xchg
sub
mov
sub
mov
jmp
sub
rol
dec
xor
inc
mov
xor
addr16
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
xor
or
or
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sahf
hlt
jmp
movl
nop
push
mov
pushl
nop
call
xchg
dec
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
idiv
incl
add
add
nop
add
mov
add
nop
mov
mov
jmp
mov
xor
mov
mov
mov
sub
or
mov
add
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
pop
shr
sub
or
pop
xor
and
or
or
sub
pop
mov
xor
xor
pop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
add
movb
nop
movb
mov
movb
nop
movb
push
pop
movb
xchg
jmp
jne
xor
xor
inc
sub
and
pop
xor
mov
dec
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
pop
call
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
add
xor
decl
or
jmp
jmp
jmp
jmp
jmp
test
add
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
xchg
and
sub
mov
mov
jmp
call
xchg
sub
or
sub
mov
or
mov
push
addr16
call
addr16
rol
shr
inc
xor
add
mov
movl
xchg
call
xchg
sub
xor
rol
pop
jmp
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
xchg
cmpl
mov
jne
xor
xor
inc
add
or
pop
ror
mov
mov
xchg
jmp
shr
mov
xor
mov
and
sub
sub
mov
shl
shr
mov
add
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
xchg
add
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
push
pop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
xor
mov
add
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
dec
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
add
add
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
jmp
movb
nop
call
xchg
ror
or
and
shr
rol
mov
jmp
and
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
mov
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
notb
push
xchg
jmp
push
mov
add
shr
mov
call
xchg
inc
xor
xor
pop
dec
shr
add
mov
sub
pop
dec
or
pop
jmp
mov
jmp
jmp
jmp
dec
cld
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
je
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pusha
add
add
inc
clc
xchg
sub
shr
sub
inc
inc
mov
mov
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
call
enter
mov
cmp
nop
jmp
add
xchg
add
xor
xor
mov
add
pop
mov
mov
inc
or
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
sub
mov
pushl
inc
or
or
or
pop
pushl
mov
mov
mov
dec
pop
push
shr
add
ror
pop
add
add
nop
mov
xchg
or
and
sub
mov
add
addr16
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fsubs
rolb
add
jmp
je
rol
shr
mov
mov
sub
push
pop
mov
mov
mov
addr16
jmp
movb
nop
jmp
je
incl
nop
shr
mov
inc
xor
xor
mov
cmp
addr16
jmp
call
mov
and
mov
movl
push
pop
call
xchg
shr
mov
jmp
mov
nop
mov
xchg
mov
nop
call
mov
jmp
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
add
push
pop
xor
push
pop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
enter
shr
sub
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
dec
or
ret
sub
inc
sub
mov
push
xchg
call
mov
add
xchg
jmp
incl
mov
jmp
mov
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
and
xchg
xor
mov
inc
push
pop
jmp
jl
xor
push
pop
jmp
or
ror
shr
mov
ror
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
add
xchg
shr
add
and
pop
jmp
movl
mov
call
xchg
movl
mov
push
mov
inc
rol
mov
jmp
cmpl
mov
je
cmpl
mov
je
cmpl
mov
jne
dec
sub
mov
mov
jmp
jmp
add
xor
mov
and
xchg
inc
xchg
inc
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
bound
rorl
test
add
ror
or
mov
pop
or
inc
shr
and
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
pop
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
addr16
mov
pop
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
inc
lock
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
shl
xor
mov
mov
nop
sub
mov
jmp
in
mov
sbb
movb
mov
movl
xchg
call
mov
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jb
sti
cmp
push
cld
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
pushl
ljmp
std
mov
mov
xchg
sub
addr16
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
call
mov
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
call
mov
call
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
mov
dec
xor
mov
jmp
je
push
addr16
call
xchg
jmp
xor
xchg
add
shl
or
pop
mov
or
xor
pop
or
add
ror
inc
or
pop
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
rol
or
add
mov
jmp
mov
mov
mov
mov
incl
addr16
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
push
pop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
stos
xor
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
jmp
mov
xchg
jmp
lret
lcall
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
addr16
pushl
nop
call
mov
inc
inc
sub
mov
mov
addr16
nop
nop
nop
nop
nop
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
ret
sbb
jmp
mov
mov
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
cmp
xchg
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
lret
xor
mov
jmp
mov
shll
call
pop
or
add
and
mov
call
nop
mov
xchg
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
and
and
addr16
or
mov
mov
nop
incl
push
pop
dec
xchg
jmp
sbb
orl
nop
xor
shl
add
rol
sub
mov
dec
mov
or
mov
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
nop
call
nop
push
mov
call
xchg
jmp
pusha
cmc
cmpsl
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jp
lahf
xor
ror
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
add
and
add
shr
dec
mov
xor
and
mov
add
mov
sub
xchg
jmp
outsb
hlt
test
test
xor
add
sub
xchg
jmp
dec
nop
dec
push
pop
xor
sub
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
sbb
filds
add
or
rol
shl
ror
mov
sub
xchg
jmp
pop
jbe
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rcll
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
rol
mov
mov
and
mov
jmp
adc
xchg
jmp
pop
mov
add
addr16
jne
and
xchg
jmp
inc
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sahf
jne
xor
or
mov
call
xchg
cmp
xchg
jb
jmp
mov
in
or
add
nop
pushl
xor
shr
and
rol
or
pop
inc
xchg
inc
addr16
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
fbld
incb
add
jb
inc
addr16
cmp
xchg
jae
inc
xchg
inc
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
cmpl
push
pop
jne
call
xchg
mov
nop
mov
nop
mov
push
pop
add
inc
mov
nop
nop
nop
nop
nop
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
jmp
push
addr16
xor
and
mov
call
push
pop
jmp
and
je
and
or
dec
mov
sub
add
and
mov
sub
mov
mov
push
pop
incl
xchg
dec
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
stc
addl
mov
push
pop
call
nop
mov
mov
rol
or
add
ror
mov
add
shl
or
sub
mov
jmp
mov
popa
jne
mov
nop
xor
nop
inc
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
pushl
and
dec
inc
pop
add
xchg
jmp
or
add
or
and
dec
mov
jmp
push
jmp
and
mov
shr
mov
mov
xchg
incl
mov
jmp
lock
insl
add
addr16
jmp
xchg
cmc
incl
xchg
mov
xchg
xor
xchg
cmpl
xchg
jmp
in
icebp
push
xchg
call
mov
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
arpl
adc
test
ljmp
and
mov
add
xor
pop
sub
mov
add
or
add
or
add
pop
inc
sub
and
ror
mov
and
or
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
ror
shl
rol
mov
inc
mov
nop
nop
nop
nop
nop
mov
sub
mov
shl
mov
add
xchg
add
xchg
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
pushl
sub
pop
nop
nop
nop
nop
nop
add
xchg
add
xchg
push
push
pop
pushl
mov
call
addr16
mov
mov
add
xchg
add
xchg
ror
sub
mov
sub
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
cmpl
mov
jne
call
mov
mov
mov
nop
nop
nop
nop
nop
sub
mov
pushl
shl
and
xor
add
pop
mov
or
pop
add
add
pop
ror
mov
shr
pop
mov
push
pop
cmp
mov
nop
nop
nop
nop
nop
jne
mov
or
rol
add
sub
and
add
add
nop
mov
xchg
add
inc
add
or
xor
mov
add
mov
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cli
js
or
in
ja
xchg
dec
mov
test
jnp
jb
std
cltd
fcmovu
into
jno
xlat
jae
dec
inc
push
sti
lds
xchg
inc
pusha
dec
shrl
push
inc
aas
daa
aas
or
ss
lods
mov
sbb
mov
and
in
push
std
lret
arpl
mov
rcll
enter
ljmp
mov
dec
cmp
cmp
mov
push
push
int
shrl
iret
and
fstps
pop
pop
jne
je
cmp
and
cmp
popf
mov
pop
sti
pop
lea
inc
std
fmuls
xchg
mov
xlat
stos
jno
ret
popf
fisubrl
inc
mov
sbb
fdivr
mov
leave
mov
outsl
roll
or
xor
xchg
xchg
push
fs
xor
dec
or
push
cmp
outsb
outsl
sub
push
jno
stos
cwtl
mov
dec
mov
movsb
jo
or
sti
fprem
mov
lods
hlt
lret
cmpsl
imull
ss
jl
cmp
repnz
mov
jbe
in
mov
in
jl
lods
xor
xor
cmp
mov
and
sub
mov
add
sub
and
or
push
idiv
xchg
xchg
sbb
inc
in
inc
pop
jns
fwait
lock
int
and
and
sahf
push
lret
cmp
xchg
int
lods
dec
jno
call
xchg
pop
je
jmp
nop
loop
xchg
repnz
cmp
in
pop
push
cltd
mov
adc
lods
test
cmp
cmpl
or
or
adc
mov
ror
xchg
ljmp
outsl
push
fwait
aam
xchg
mov
jae
mov
out
repnz
icebp
jnp
add
lods
int
fists
in
test
dec
test
pop
pushf
inc
rclb
rclb
sub
stc
jecxz
xor
cmc
ljmp
xchg
arpl
movsl
cmc
in
cmc
inc
push
movsb
push
sarb
push
inc
sub
negl
lods
or
mov
cmp
and
fdiv
sti
mov
test
lea
scas
cmc
sub
fstps
repnz
popf
push
mov
jnp
lea
mov
inc
ljmp
mov
dec
xor
add
repnz
andl
aad
lea
jecxz
xor
adcl
push
ljmp
fcoms
andb
lahf
push
sbb
push
jb
inc
lret
lret
push
leave
xor
xor
daa
int
movsb
sub
mov
cmp
fimull
out
imul
mov
out
inc
mov
roll
mov
movsl
fildl
mov
mov
imul
adc
outsl
push
jmp
or
cwtl
add
lock
jmp
popa
scas
or
xor
stc
pop
mov
sub
or
cli
or
cmp
sub
or
xchg
nop
dec
clc
in
mov
mov
xchg
aaa
cld
shrl
outsw
fists
ja
pushf
addr16
imul
nop
mov
faddl
and
lock
ds
mov
hlt
dec
xor
inc
inc
sub
sbb
cwtl
jl
mov
loope
les
mov
daa
test
cli
push
in
sbb
pop
mov
mull
mov
mov
push
sbb
sub
mov
pop
or
jge
adc
ds
mov
jp
loopne
and
inc
insb
jecxz
fwait
iret
pop
mov
sbb
inc
imul
sbb
inc
dec
pop
addr16
or
repnz
inc
pop
lock
ret
es
pop
xor
stos
and
add
or
xchg
cmc
pop
xor
rol
je
mov
icebp
xchg
icebp
xchg
js
mov
ss
clc
cmp
pop
int
adcl
ficompl
test
test
push
jo
outsb
and
nop
ficoml
ficomps
mov
jge
push
inc
pop
push
mov
sbb
mov
push
mov
cmp
cmp
xor
scas
cmpsl
jle
pop
and
mov
dec
fcom
push
push
pop
in
pop
jne
lods
mov
rcrb
and
inc
leave
ffree
sti
mov
xchg
imul
stos
cmp
fwait
ss
add
mov
aam
push
sti
lods
or
mov
test
jb
pop
adc
push
fucomip
push
jnp
mov
and
mov
xor
ficompl
cmp
mov
jge
jae
aad
sahf
and
or
cmp
stos
lock
or
in
hlt
das
xchg
jecxz
cmc
push
in
shll
inc
sbb
pop
adc
xor
jg
adc
test
iret
or
or
add
push
data16
pusha
jge
jecxz
sub
mov
int
mov
nop
fpatan
push
push
subb
mulb
sbb
adc
sbb
scas
or
mov
inc
push
push
ret
jmp
jbe
gs
mov
or
xor
jge
dec
scas
mov
xchg
dec
stc
mov
xor
dec
scas
cmp
mov
xchg
cmp
stc
dec
dec
ss
jae
out
mov
test
pop
daa
cmp
js
hlt
decl
das
pop
movswl
lods
mov
insl
adc
ficoml
mov
mov
inc
aas
inc
xchg
divl
push
sahf
out
sub
outsb
int
cld
xor
pop
jae
mov
hlt
dec
std
jg
and
out
jae
or
cmp
jecxz
jp
hlt
inc
adc
jb
sub
add
outsb
or
pop
jl
sbb
mov
pop
into
ja
and
mov
stos
es
test
pusha
scas
mov
ss
adc
or
cmp
divl
hlt
int
or
mov
push
mov
movsb
adc
dec
xor
push
pop
add
sub
mov
mov
pop
nop
pop
aad
adc
dec
aaa
pusha
adc
xor
shll
faddl
shll
jl
out
xchg
push
jne
jp
ds
pop
add
add
dec
stos
lret
inc
push
xlat
xchg
and
pop
orb
push
mov
mov
pop
inc
clc
popf
cmpsl
js
nop
test
adc
mov
cmpsb
mov
fsubp
xchg
inc
out
fstl
push
mov
sub
cmp
sti
xchg
incl
in
push
cmpsl
jl
outsl
mov
xchg
lea
push
dec
cli
out
lret
sti
jns
or
es
add
pushf
inc
sbb
mov
fnstsw
fbstp
cmp
mov
cmp
fs
lea
sub
lods
xchg
cld
cltd
fdiv
cmpsb
lret
imulb
cmc
sbb
das
add
pop
xor
mov
mov
push
je
adc
pop
fnstcw
lods
lcall
cltd
cmp
addr16
jae
imul
jae
in
sub
or
mov
cmp
cli
sub
mov
and
out
pop
addr16
arpl
push
cmc
inc
xchg
push
jo
movsb
ja
or
or
xchg
js
loope
pusha
ret
mov
inc
jae
sub
mov
push
sbb
in
xchg
mov
insl
loop
xchg
xchg
jle
scas
pop
int
xchg
cmpsb
pop
iret
mov
push
dec
push
sub
mov
pushl
or
out
pop
mov
scas
aam
pop
xchg
in
das
jae
cmp
enter
inc
stc
push
mov
out
stos
mov
mov
inc
ret
xor
sub
and
icebp
sbb
push
push
adc
dec
inc
adc
add
jle
add
sub
push
dec
fsubl
gs
mov
pop
mov
sbb
or
or
push
xchg
ud0
test
cmc
je
idivb
in
xor
in
ret
and
int
or
xor
sub
push
mov
mov
pushf
cmpsl
jmp
xor
and
and
lret
shrl
ret
push
insl
xchg
repnz
sub
repz
and
mov
adc
pop
and
adc
xchg
daa
jbe
cmpsb
cmpsl
push
push
mov
lcall
jle
push
insl
mov
xchg
mov
dec
mov
mov
testb
jmp
aaa
jo
add
xor
xchg
xor
inc
cltd
cmc
push
jnp
mov
xchg
pusha
push
add
xchg
xchg
repnz
std
xor
or
xrelease
push
out
sub
lret
icebp
fdivrl
xchg
and
inc
cltd
mov
dec
inc
outsb
or
movsl
push
jb
push
leave
push
mov
pusha
inc
fcomps
mov
pop
jnp
ljmp
dec
das
sub
lods
out
fists
loop
push
imull
cmc
jb
fwait
dec
jp
stos
subl
push
jge
lods
and
fwait
adc
sub
lret
js
je
push
mov
cmp
jne
gs
xchg
or
ss
mov
mov
outsb
pop
adc
push
iret
add
ljmp
jg
dec
test
dec
inc
ljmp
cmp
rolb
mov
jne
cmp
out
dec
jnp
pop
pop
pop
jp
mov
jnp
mov
or
fdivrs
aam
lcall
sub
inc
insb
mov
addr16
mov
in
fnsave
fisttpl
and
push
fisttpl
dec
push
jmp
mov
sarl
movsl
fisubrl
mov
mov
push
sahf
adc
inc
int
cmp
cli
mov
movsb
daa
aam
adc
fldcw
jmp
fbld
les
inc
out
popa
mov
shll
cmp
std
xlat
jbe
add
ja
call
in
or
push
and
or
popa
cmpsb
hlt
mov
jo
push
cmpsl
inc
mov
cli
jno
or
shlb
pusha
jbe
jge
add
adc
mov
shlb
cmp
jp
aas
hlt
jge
repz
js
ror
insl
outsl
in
icebp
out
add
and
push
ja
or
ret
or
mov
adc
inc
dec
arpl
xchg
and
adc
mov
mov
xchg
movsl
aad
out
lods
sub
xchg
jbe
les
.byte
.byte
pop
inc
or
inc
or
pop
adc
fidivrl
lahf
shl
loopne
sti
xor
jecxz
mov
inc
sbb
out
push
add
fwait
mov
xor
cmp
pop
inc
mov
mov
leave
scas
jns
out
push
mov
cmp
mov
inc
fld1
sbb
adc
fsubrs
cmp
stc
sub
jno
sbb
pop
mov
call
adc
and
mov
addl
and
sti
sbb
bound
jnp
popa
push
mov
aad
jns
int3
mov
sub
mov
shll
fldcw
gs
cwtl
cmp
or
scas
dec
mov
cmpsl
inc
inc
gs
js
push
add
mov
push
cmp
mov
fnstsw
gs
das
movsl
and
mov
jns
dec
inc
sub
cmp
repnz
lods
and
sub
daa
add
and
xor
and
and
and
or
sbb
mov
pop
sbb
nop
mov
mov
cltd
sub
mov
inc
lret
aam
lret
adc
stos
popf
mov
sub
loopne
mul
adc
cltd
mov
jae
mov
mov
mov
push
sub
fbld
push
mov
out
mov
push
mov
pop
es
scas
jb
insb
fistpl
fwait
int3
lret
push
insb
int3
push
adc
pop
sbbb
or
fldt
sbb
and
fildl
pushf
mov
sbb
arpl
lahf
inc
lsl
in
js
test
xchg
sbb
and
xchg
test
in
and
mov
jno
into
aas
push
loopne
or
enter
popf
adc
repz
dec
inc
jo
xor
push
stos
aaa
dec
dec
sarb
subb
cwtl
mov
shl
xchg
nop
xchg
js
popf
ss
mov
rcr
dec
cwtl
pop
jg
into
in
rcr
aam
adc
shrl
pop
pusha
adc
inc
sbb
cmp
scas
imul
lret
dec
out
lret
sub
xlat
mov
loop
dec
stos
push
call
es
iret
xchg
sbb
add
insb
data16
mov
std
pop
adc
mov
jecxz
cmp
out
into
mov
jge
pop
push
sub
js
js
sbb
jb
aam
hlt
cmp
aam
mov
ja
rcr
inc
ud1
addr16
fsubr
iret
ss
iret
dec
leave
sbb
gs
jne
and
xchg
mov
loop
js
dec
push
push
add
mov
movsl
xor
sub
aad
adc
outsl
mov
sub
xlat
gs
xchg
and
pop
les
adc
ret
adc
in
repz
pop
stc
lret
mul
sbb
jo
mov
push
loope
add
mov
mov
cmp
mov
outsl
xor
das
xchg
outsl
stos
jne
stos
sbb
pop
pop
dec
test
faddl
xchg
mov
ja
setle
xor
jecxz
pop
push
xor
sbb
or
shrl
clc
jecxz
test
adc
xlat
pop
dec
sbbl
and
movsb
push
rorb
aad
push
push
test
sub
mov
jmp
adcl
lea
xchg
enter
outsl
xchg
jmp
lret
iret
xchg
xor
push
data16
and
sti
mov
aad
mov
sub
in
pop
inc
mov
and
arpl
les
pop
mov
test
mov
rcrl
ret
lret
lcall
scas
add
cli
pushf
outsb
dec
adc
lock
pop
push
in
int
adc
xor
jnp
popf
fcoml
or
inc
lret
jbe
mov
jmp
aas
or
pop
out
sbb
push
mov
arpl
mov
leave
mov
push
cli
sbb
pop
jns
push
sub
test
inc
pop
ret
adc
cmpxchg
mov
jp
inc
scas
or
stc
sar
in
sub
cs
add
fnsave
xchg
fisttpll
add
mov
jp
adc
rcrb
addl
out
pushf
inc
loope
sbb
call
in
stc
lds
pop
test
push
adc
pop
ja
daa
arpl
aas
lcall
mov
div
lea
andl
call
inc
inc
roll
popa
cmp
mov
jb
push
xor
out
sub
pop
jmp
add
ljmp
jb
gs
aad
repnz
xor
mov
mov
and
movsl
ret
sbb
aam
cmc
out
scas
lcall
push
lock
mul
fdivs
fisubrl
xor
cld
jno
jle
sbb
in
leave
iret
push
mov
pop
aad
test
pusha
and
add
in
mov
xor
stc
or
jae
enter
mov
gs
inc
jno
jl
dec
xchg
add
push
fcompl
andb
rolb
jle
hlt
sbb
mov
add
into
mov
rcrb
stos
lahf
hlt
loop
ljmp
and
into
imul
and
pop
hlt
or
jo
jb
cmc
or
out
rcrl
and
xchg
adc
rolb
pop
pushf
push
mov
lods
das
arpl
xchg
fwait
mov
outsb
lahf
ds
mov
or
nop
and
jmp
jae
pop
es
mov
jge
call
sbb
mov
in
and
out
adcl
and
sub
xor
inc
in
aad
xchg
mov
mov
inc
or
mov
repnz
cmp
jmp
std
in
and
xchg
adc
scas
in
xchg
cli
notb
push
push
pop
popf
in
pop
lcall
push
lret
push
int
fs
js
mov
jb
fmul
test
inc
js
xor
movsb
mov
ljmp
or
adc
out
pusha
fadds
push
in
loope
inc
lahf
mov
push
dec
jne
in
xor
jp
dec
lahf
add
enter
faddl
push
and
jg
scas
cli
mov
pop
hlt
in
decb
jno
pop
dec
shl
adc
push
push
iret
add
jnp
psubsw
mov
imul
enter
cmp
out
shlb
jns
sti
inc
aaa
xor
xchg
jno
dec
repnz
aas
xchg
cld
mov
ss
dec
add
xchg
or
rolb
add
xchg
xor
push
fimull
dec
mov
push
sub
xor
data16
pop
ds
in
aaa
cltd
and
pusha
lock
nop
rcrl
scas
std
inc
roll
loope
test
sbb
sub
ds
push
scas
dec
jns
mov
rcrl
and
mov
pop
bound
add
pusha
sub
fwait
and
stos
ljmp
hlt
inc
inc
xlat
sub
mov
iret
jns
mov
add
mov
shlw
pop
ljmp
sbb
fdivp
mov
or
xchg
cltd
cmp
pop
into
lea
je
cmp
js
rolb
pusha
xchg
add
lret
push
pop
add
dec
or
xorb
add
loopne
dec
nop
popf
jns
sbb
jnp
pop
vxorps
arpl
in
insb
xor
push
cmc
test
mov
repz
stos
push
or
xchg
jne
testb
mov
imul
scas
and
lret
pop
scas
rolb
fimull
mov
das
fsubl
movb
inc
xchg
mov
pop
xchg
scas
shrl
movsb
dec
jge
mov
jecxz
xchg
sbb
popa
sub
mov
xor
fs
xor
pop
sbb
inc
inc
cmp
fcmovne
pop
inc
mov
push
sbb
push
dec
cli
fisttps
mov
jo
movb
jae
in
je
ljmp
stc
sbb
jno
push
pop
test
xor
cmp
ds
sbb
shlb
and
mov
mov
mov
into
lret
in
loop
pop
test
insb
mov
mov
movsb
insl
int
xchg
lret
xor
ja
add
xchg
sub
ds
add
push
pop
push
loop
pop
cmpl
ret
dec
sti
push
ja
dec
xchg
jbe
testb
test
inc
aas
faddl
sub
out
cmp
fwait
mov
scas
mov
out
mov
adc
add
cmc
xchg
push
hlt
adc
shll
push
xchg
jae
push
xor
aad
int
lods
int
pop
dec
cmp
or
mov
vmaxsd
insb
or
mov
mov
fistps
inc
xor
mov
adc
inc
iret
stc
mov
cmpsl
cmp
ja
pushf
xchg
mov
push
ss
fisubrs
shll
mov
sub
mov
aam
cli
lods
ret
pop
push
data16
aad
sub
lock
mov
mov
jo
ds
and
addps
addb
mov
ret
jnp
lahf
cmp
rorb
push
mov
mov
in
or
mov
sub
sub
hlt
adc
jb
mov
mov
and
or
stc
mov
sbb
cmp
lea
test
popf
loope
or
ds
push
daa
and
dec
push
add
insl
inc
xchg
mov
and
stos
mov
outsl
ljmp
outsl
xchg
ja
mov
sbb
lahf
jmp
xorl
lahf
cmp
daa
aad
push
push
push
enter
sub
sub
adc
jp
add
icebp
cmp
inc
mov
or
jae
ljmp
dec
and
mov
jnp
les
jmp
loopne
sub
add
lret
or
mov
jg
add
stc
test
add
sahf
mov
push
pop
mov
push
mov
lret
mov
idiv
pop
mov
jl
xchg
pop
repnz
repz
push
daa
fbstp
mov
mov
in
rolb
hlt
jnp
out
mov
push
push
push
dec
push
out
insl
inc
cmp
or
xchg
arpl
push
ss
mov
jl
mov
mov
push
lret
xor
add
mov
sbb
int3
out
pop
mov
loopne
mov
dec
stos
mov
arpl
ss
cli
addb
int3
insl
mov
das
lea
dec
and
mov
lock
cmp
lahf
add
mov
adc
inc
or
mov
mov
mov
mov
add
xchg
sahf
lcall
test
sar
sbb
movsl
push
cmp
leave
std
shll
or
mov
push
push
mov
aaa
push
sbb
push
mov
mov
mov
mov
or
leave
movsl
dec
dec
mov
fsts
stos
fisubl
cmp
mov
outsb
mov
xor
mov
idivb
jmp
mov
or
push
mov
and
lock
or
nop
ret
movsb
mov
into
das
mov
mov
push
pop
mov
imul
mov
imul
adc
aad
sbb
lret
mov
fistps
or
inc
aad
inc
pop
sti
int
iret
and
adc
or
mov
iret
icebp
sarb
aam
and
sbb
adc
mov
mov
dec
dec
push
imulb
inc
push
gs
aaa
je
mov
icebp
sbb
dec
in
sub
add
shrb
popa
xchg
int
pop
inc
insl
nop
cltd
jae
in
fimuls
jle
cmp
pop
pop
inc
das
adc
cmp
lock
nop
cmp
sub
mov
dec
pop
inc
out
lcall
sti
shl
mov
shrl
mov
fwait
enter
in
pop
sti
insb
cmp
inc
pop
or
idiv
notl
cmp
jb
jmp
sbbb
fwait
icebp
aam
jae
or
push
in
xchg
addl
cmp
add
pop
in
push
xchg
cwtl
cmpsb
dec
and
aaa
lock
push
and
add
outsb
xor
pop
add
cmp
scas
push
rclb
dec
iret
clc
std
cmp
dec
loopne
pop
adc
jg
popa
movsb
sub
outsb
mov
imul
std
push
cld
cmpsl
es
mov
sub
loop
add
and
xchg
mov
adc
fs
push
xchg
andl
xchg
or
rol
clc
mov
push
pusha
call
jne
sahf
scas
add
pop
jno
imul
jnp
out
stc
xchg
cmc
movsl
xchg
jecxz
imul
mov
and
and
inc
adc
inc
ljmp
mov
cmp
in
mov
or
pop
ljmp
sbb
and
cmp
sahf
jp
and
push
gs
sti
jns
inc
and
jne
jns
adc
mov
std
or
xchg
add
out
mov
pop
test
xchg
cmp
dec
dec
jmp
cmp
xor
psrld
sbb
and
aad
sbb
mov
mov
fwait
sbb
pop
push
fsubs
mov
mov
mov
ret
stos
cmp
lret
xlat
in
cmp
and
add
xor
push
arpl
cltd
sti
arpl
ret
push
inc
xchg
out
jae
out
out
xor
arpl
and
aad
lds
xor
sub
dec
inc
imul
push
ljmp
jae
xor
loop
insl
repnz
jae
push
sbb
dec
ja
dec
push
push
add
mov
in
push
fs
and
mov
mov
fcmovnu
lret
pop
sarb
adc
scas
idiv
mov
outsl
test
mov
cmpsl
scas
pop
cmc
jnp
and
sbb
out
or
sbb
mov
xchg
in
xlat
sbb
jl
loop
inc
call
pop
sub
popa
jle
pop
inc
data16
fcmovbe
mov
sbb
adc
push
loopne
pop
lcall
xchg
sbb
fildl
dec
lds
lods
sti
or
cmpl
sbb
mov
xchg
push
hlt
pusha
sub
ret
sti
jl
loopne
inc
sub
arpl
stos
test
insb
scas
loope
xchg
or
mov
xchg
outsb
scas
lcall
jecxz
push
xchg
lods
push
pop
xor
pop
xor
das
sbb
xor
push
outsl
sbb
push
adc
cs
xor
sbb
pop
fsubs
push
fistl
es
int
mov
lock
xchg
mov
or
mov
cli
push
adc
and
lret
loopne
pop
jg
call
mov
inc
ljmp
jecxz
lahf
or
scas
movsb
aas
out
daa
adc
sub
fdiv
sub
sub
stos
jbe
aam
mov
mov
aaa
stos
jnp
add
pop
cmpsl
inc
push
scas
jecxz
cmc
movsl
adc
aaa
jmp
loopne
add
in
lock
outsb
sub
subps
cltd
pop
sub
aam
icebp
pop
pop
add
add
clc
mov
push
je
in
arpl
pop
enter
hlt
inc
push
sarb
into
std
aam
sub
fmull
jecxz
rorb
xlat
jge
pop
dec
hlt
ljmp
mov
adcb
inc
ror
sub
adc
iret
sub
test
enter
aam
mov
xor
sub
shrb
cmpl
lds
aad
in
push
fdivrl
fwait
add
pop
xchg
mov
mov
mov
test
or
or
loope
adc
inc
jge
scas
test
es
mov
js
pop
pop
test
and
scas
mov
loope
sub
jecxz
jno
cli
pop
xchg
fimull
mov
stc
pop
inc
cli
lods
push
push
mov
lock
xchg
or
cs
xchg
enter
add
cld
pop
push
push
arpl
aam
adc
loopne
nop
int3
rcll
xchg
stc
int
push
scas
and
mov
cmc
out
xchg
cmpsb
mov
bnd
mov
push
and
lahf
mov
mov
xor
dec
call
fwait
sti
add
mov
rol
mov
xor
sub
sbb
popf
aam
mov
jge
jb
and
mov
and
dec
pop
jl
dec
mov
sbb
add
int3
in
cs
fs
mov
jbe
popf
mov
daa
jmp
push
inc
dec
les
ja
call
cmp
mov
mov
scas
or
loopne
ljmp
inc
sti
imul
lret
or
pushf
popa
arpl
push
in
das
jae
mov
jne
xor
jae
jbe
popa
mov
add
fnstenv
inc
imul
rcr
leave
fmull
lds
push
pushf
mov
call
adc
mov
mov
push
lea
dec
and
lret
addl
leave
sub
mov
ljmp
mov
or
xorl
jmp
mov
pop
faddl
jmp
repnz
testb
sub
or
pop
fadd
mov
sub
aad
into
outsb
mov
pop
or
divb
pop
pushf
push
mov
jmp
pop
cmp
inc
xchg
ret
sti
orb
daa
and
cltd
out
aas
cmp
mov
std
nop
push
xchg
pop
and
inc
ret
add
gs
out
adc
adc
inc
cmc
xchg
mov
pop
xchg
pop
leave
fwait
test
jo
dec
mov
push
adcb
nop
gs
cwtl
stc
mov
insb
imul
cs
mov
imul
negl
stos
sbb
cmp
cmp
repnz
js
cpuid
pop
adcl
lcall
pop
sbb
subb
sub
lret
sub
shll
popf
adc
mov
clc
push
lret
fcoml
sbb
data16
icebp
dec
shlb
aas
mov
dec
int
das
hlt
jecxz
mov
sbb
fbstp
sahf
js
xor
xor
lret
xchg
push
lcall
in
cld
sbb
jle
or
int
sub
movsb
iret
pusha
adc
pop
xor
es
push
setl
gs
push
xchg
cmp
jne
jo
mov
ror
les
xchg
outsl
pop
data16
lret
push
mov
mov
std
add
dec
leave
push
sarl
mov
pop
cmp
andb
sub
mov
pop
les
cld
mov
icebp
cli
sbb
push
jne
sub
mov
jo
mov
sub
sarl
mov
jl
rcl
push
pop
sub
addl
adc
sbb
aaa
jne
mov
mov
test
cmp
push
xchg
adc
or
lahf
in
sbb
pop
or
bswap
xor
mov
inc
inc
out
mov
les
nop
or
adc
inc
rorb
inc
push
and
push
call
jge
shrb
cli
lock
mov
mov
and
fs
pop
jns
cmp
add
or
inc
imul
negb
mov
sbb
sub
cmp
orl
or
ds
ret
outsl
mov
aad
dec
std
stc
add
and
sbb
mov
add
mov
inc
loop
mull
icebp
lret
sub
int
lea
les
fst
stc
pop
cmp
aam
ss
adc
stc
cwtl
adc
test
imul
dec
rcrl
aaa
fisttps
mov
repnz
sbb
int
pop
xor
das
mov
inc
xor
lods
fcoms
pop
xor
xchg
jp
pop
scas
imul
push
xchg
imul
mov
fbstp
mov
dec
ja
mov
ja
insl
jb
jmp
adc
jns
mov
movsl
movsl
sbb
jae
outsl
dec
imul
inc
or
push
pop
cmc
mov
rclb
sbb
lods
jae
and
cmp
adc
lods
inc
loope
and
insb
lds
xor
jg
jo
cli
push
inc
add
mov
or
xor
mov
adc
fdivs
and
pop
mov
pushf
lret
xchg
jno
into
lock
dec
aas
sbb
xor
out
jmp
inc
int
aas
push
into
xlat
mov
cmp
out
xor
xor
xor
mov
hlt
add
mov
and
aas
addr16
mov
add
add
std
sub
sbb
jle
gs
push
int
sti
sbb
testb
or
xor
sub
fadd
sub
sub
aam
shll
jne
xor
jns
push
scas
or
cs
insl
lret
sub
push
iret
test
and
clc
bound
cld
sbbb
pop
mov
loope
enter
bound
add
jmp
les
mov
mov
scas
adc
shrl
std
clc
cmp
insl
fdivl
in
enter
xchg
sub
ret
mov
xchg
test
cmc
and
xor
div
pop
jle
push
sub
jne
mov
pop
mov
adc
push
scas
dec
push
scas
fdivrp
stc
mov
pop
dec
jecxz
inc
aas
and
rcrl
imul
sahf
lret
adc
sbb
xchg
cmp
fwait
cld
sbb
sti
incb
lret
insb
add
inc
stos
jle
jle
jge
stos
pop
mov
mov
jno
cmpl
daa
xor
fs
ja
outsl
mov
cmp
pop
push
inc
adcl
jge
dec
aas
lret
in
sub
and
hlt
push
test
jb
mov
mov
dec
sub
sub
std
dec
imul
or
mov
or
dec
fwait
pop
dec
mov
sbb
mov
dec
jge
cmp
dec
jmp
sub
mov
cli
add
add
or
adc
cmp
cmp
push
or
xchg
xchg
scas
popa
out
stos
into
stc
push
or
std
lahf
das
lock
clc
enter
imul
cmp
sub
mov
ss
push
mov
push
pop
pop
push
jo
loope
in
cmp
lret
xchg
sub
ja
subb
out
fcompl
pop
jge
sub
inc
sbb
cltd
jno
adc
dec
addb
ficompl
push
fwait
call
push
push
call
rorb
mov
std
cld
out
pop
sub
xchg
push
je
mov
fadd
pop
inc
into
ss
mov
fists
push
jecxz
pop
jb
jae
lods
out
mov
mov
gs
jmp
sbb
and
jae
jmp
mov
pusha
pop
push
sub
fnstsw
push
add
shlb
or
sub
out
cmp
adc
cwtl
sub
xlat
push
nop
daa
sbb
and
dec
xchg
repz
mov
fsubrs
loopne
scas
mov
adc
xchg
mov
mov
cmp
daa
inc
jno
inc
jge
cs
adc
stos
push
ret
mov
mov
lret
xchg
lret
mov
jg
lea
enter
push
dec
jle
lods
pop
loopne
push
test
mov
scas
ja
insl
mov
out
mov
or
inc
xor
mov
mov
sub
cli
push
cmpsb
sarl
xchg
jg
xlat
popf
scas
sub
call
int3
int
xor
pop
vcvtdq2ps
pop
rcl
out
mov
aad
xchg
mov
xchg
cmp
pop
jecxz
lret
jno
or
test
imul
rclb
xor
cmc
std
and
and
lods
cmp
push
lcall
mov
lea
push
push
aaa
sbb
sarb
xchg
mov
and
jb
out
cmpsl
xor
cmc
lcall
scas
push
dec
xchg
jmp
les
sbb
fisttpl
or
jmp
and
push
xchg
in
int
add
mov
push
mov
fisttps
inc
aad
dec
or
push
outsl
sub
dec
xchg
push
dec
sbb
scas
or
jecxz
sarl
sti
mov
out
.byte
