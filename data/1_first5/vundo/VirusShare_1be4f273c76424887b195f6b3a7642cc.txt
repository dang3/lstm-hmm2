inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
xor
xchg
mov
or
add
pop
add
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
push
xor
pop
add
add
xor
addl
stos
add
add
and
int
xor
pop
add
add
add
jbe
loope
and
scas
add
lahf
add
add
add
xchg
add
xor
xchg
add
add
add
add
add
add
add
xor
xor
jbe
or
push
add
add
lret
add
add
sbb
addb
add
fadds
sub
add
add
pop
add
cmp
add
add
jbe
jl
and
loope
push
lahf
add
add
xor
sbb
add
add
add
add
popa
add
add
add
add
add
add
push
mov
and
pop
add
add
add
add
add
add
add
add
jmp
or
jo
push
cmp
add
add
add
add
jmp
xlat
add
add
add
add
add
popa
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
testb
add
add
sbb
movsl
add
add
dec
add
add
add
sub
push
out
add
lds
xlat
add
xor
mov
sub
pop
add
add
and
push
push
and
cmp
add
add
push
pop
add
add
imul
inc
add
xchg
add
xor
lods
add
add
add
add
add
add
push
push
popa
add
add
add
add
add
add
mov
roll
add
sub
mov
outsb
add
add
add
add
add
add
mov
xchg
add
add
add
cmp
add
add
add
roll
add
add
add
xor
sbb
push
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
stc
add
add
add
add
pop
add
add
add
add
push
add
jl
stc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
nop
add
dec
add
push
push
jmp
scas
add
add
add
and
push
add
out
stos
add
add
popa
add
sub
xlat
add
add
roll
add
mov
in
addl
push
and
in
scas
add
add
add
mov
push
addl
and
insl
add
mov
scas
add
mov
add
add
das
add
add
add
add
add
sub
add
jl
mov
add
add
add
add
add
add
add
add
add
add
daa
data16
out
pushf
pop
cs
cmp
inc
vandps
and
mov
insl
fmul
lock
shlb
mov
lods
insb
fmull
in
mov
js
or
test
adc
mov
testl
push
cld
lret
xchg
add
mov
or
mov
mov
stc
pusha
dec
mov
dec
fcoms
cli
dec
or
orb
mov
push
stc
mov
outsb
fistpl
jmp
sahf
sub
mov
push
mov
ss
sub
sub
xor
xor
cwtl
ret
sub
nop
movb
popa
enter
xchg
icebp
pop
in
add
fisubrs
jle
jg
pop
or
popa
mov
lea
lcall
mov
insl
jp
dec
pop
int3
mov
jo
mov
push
test
test
stos
adc
mov
xor
jns
pop
jg
sbb
push
push
bnd
mov
test
sbbl
lahf
cmp
sbb
xchg
lret
mov
cmp
fimull
cltd
outsb
insl
lds
inc
sub
jns
pusha
cmp
es
cmp
insb
pop
je
xlat
xor
mov
jb
insl
mov
cmpsb
push
loopne
add
push
or
rorb
xor
adc
push
jbe
cld
dec
jl
jb
add
mov
push
pushf
movsb
pushw
ret
jae
xchg
outsb
jae
xlat
aad
push
shll
add
arpl
flds
adc
or
add
les
jecxz
dec
cmpb
push
sti
test
sbb
sub
inc
out
sbb
push
testl
mov
int
mov
mov
mov
xorl
push
pop
popa
dec
sbb
fsubl
xchg
scas
int
stos
pop
pop
jg
lods
movsl
js
pop
fwait
mov
xchg
stc
jae
mov
out
stos
add
or
outsl
enter
jbe
nop
jmp
sub
adc
jl
xchg
std
push
lock
aad
ja
jo
mov
add
mov
and
jne
xlat
cmp
and
mov
in
sub
mov
cmc
cmp
xchg
jno
addb
rcl
jle
aaa
sub
xchg
std
jge
loopne
sub
xchg
jmp
mov
and
daa
dec
push
repnz
add
call
cmp
ror
adc
shrl
lock
mov
loope
add
sub
adc
repz
in
je
cmp
mov
ss
inc
xlat
fucom
sub
rolb
jae
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
not
mov
lcall
mov
imul
cmp
dec
lret
mov
or
int3
dec
fsubrl
es
cmp
push
test
dec
mov
mov
test
cmc
push
in
aam
lret
inc
sub
aaa
fldenv
push
xchg
aas
mov
mov
dec
in
add
call
adc
les
lds
ficompl
push
xorb
push
test
mov
cmp
adc
ljmp
sub
mov
sub
mov
in
shrl
daa
ret
aas
pop
pop
jecxz
xchg
lret
out
fwait
lret
lods
sub
mov
and
fsubl
or
inc
jmpw
add
dec
aas
inc
rcl
pop
call
aas
faddl
pop
and
ret
stos
sbb
lcall
movsb
and
ret
sbb
and
ja
sub
mull
repz
subb
pop
insb
sub
cld
push
jp
nop
sub
jl
lcall
dec
lret
fistpll
cmp
dec
clc
xor
push
xchg
adc
pop
in
cmp
jle
jb
add
cmp
jmp
add
cltd
ss
cmp
dec
out
imul
cmp
pop
mov
jl
jge
pop
pushf
jns
push
cld
jp
dec
fcompl
stos
cmp
or
sbb
insb
ljmp
lods
sub
in
push
jp
dec
fcompl
stos
cmp
or
sbb
insb
ljmp
lods
sub
aad
hlt
ss
repz
dec
aas
xacquire
adc
loopne
testb
add
pop
xchg
jp
fsts
adc
sbb
mov
jg
scas
sbb
jno
hlt
roll
cmp
cmp
xchg
out
in
mov
int3
cmpsb
fld
push
inc
cmp
jae
enter
repz
aas
mov
mulb
mov
pop
add
adc
aas
adc
xor
lds
repnz
lahf
cmp
cmp
push
xor
jns
cli
pop
add
add
cmp
clc
icebp
test
inc
pushf
shrl
adc
jmp
sbb
xor
orl
out
mov
sbb
jno
jbe
rclb
in
push
jle
push
xor
mov
lods
gs
cmp
sub
pop
sti
scas
call
sbb
adc
fisubs
xor
jmp
add
ja
aas
popl
stos
mov
bound
movsb
mov
cwtl
inc
pusha
inc
cmp
divl
loope,pn
jl
xchg
lods
xor
add
push
ss
push
sti
into
jl
cld
adc
fwait
cmpsb
inc
mov
and
xchg
hlt
lods
idiv
ret
lret
mov
mov
mov
pop
push
dec
int3
test
xchg
cmp
xor
xchg
jnp
lret
rclb
inc
adc
rep
sbbb
movsl
insl
scas
ret
mov
and
dec
mov
in
je
dec
jno
mov
mov
pushf
lds
and
adc
jnp
mov
jle
xchg
dec
jmp
xchg
sbb
jb
sbb
cmpps
xchg
test
test
enter
sbb
aam
push
jno
or
mov
jae
pop
jecxz
pop
push
mov
out
cs
stc
xchg
pop
jmp
lcall
dec
adc
jle
sub
cmc
pop
aad
jb
xchg
imul
xchg
sbb
xor
imul
in
push
pop
add
mov
add
sub
jae
mov
add
cld
inc
incl
mov
xor
xor
adc
jecxz
test
dec
inc
mov
push
mov
sbb
bound
xor
mov
rcrl
faddp
clc
call
pop
arpl
sub
lock
dec
mov
xor
fidivl
jmp
ja
inc
cmpl
ja
cmp
push
loop
sub
pop
movsl
mov
mov
or
out
lods
dec
pop
sbb
add
or
rcrl
mov
mov
push
jge
adc
push
rcrb
jge
addr16
cs
push
mov
bnd
mov
and
jp
shlb
lahf
add
xchg
and
imul
sbb
and
push
add
dec
pop
ss
sub
test
jmp
mov
std
enter
pop
shlb
mov
add
sub
outsb
je
mov
arpl
shrl
das
ds
and
into
lret
mov
js
sbbb
add
adc
inc
xchg
push
bndstx
repz
adcl
cmpsl
dec
fadd
xchg
mov
mov
mov
sbb
push
movsl
pop
fistpl
pop
lods
std
dec
push
cld
in
xor
mov
cmpsl
jl
in
in
sbb
jmp
ds
pop
andl
xor
add
inc
addb
insl
add
sub
jae
mov
and
or
hlt
xor
in
aaa
shrb
mov
insl
jg,pn
imul
sarb
loope
xlat
push
jbe
fwait
pop
into
xlat
ss
cld
fistpl
pop
pusha
pusha
ret
sbb
or
out
rcll
or
pop
test
adc
push
xchg
inc
or
add
pop
sti
bnd
scas
jae
int3
das
shrl
int3
add
pop
push
shll
mov
push
cmp
or
sbb
stos
mov
xchg
stos
lret
jbe
jg
jmp
mov
jne
shlb
movsl
cmp
imul
and
mov
mov
pop
pop
mov
out
push
jg
popf
cmp
addb
jnp
into
jae
sbb
aad
xchg
cli
push
xor
adc
inc
mov
jp
sti
int
adc
js
jl
inc
shrl
inc
lahf
movsb
push
lret
scas
inc
lock
xchg
push
movsl
pushl
popa
xchg
or
dec
out
inc
mov
popa
mov
subl
mov
cwtl
cmpsl
icebp
jl
push
adc
jle
repnz
add
push
gs
mov
std
dec
sub
push
push
fbstp
cmpsw
pop
shlb
sub
or
shll
stc
xchg
dec
test
ljmp
mov
pushf
mov
xchg
cmp
jb
dec
test
xchg
shlb
push
les
dec
loop
mov
orb
das
mov
mov
xchg
xor
add
rcrl
adc
jmp
jmp
aam
in
ret
data16
add
ret
pop
scas
push
jp
daa
dec
xchg
push
add
push
lods
lock
cmc
sbb
iret
mov
push
inc
or
lds
mov
in
jle
ss
jmp
test
jge
fdivs
mov
aad
aad
pop
xchg
push
add
mov
rorl
test
fs
sub
ss
loopne
in
sbb
jmp
arpl
xor
mov
scas
cmpsl
mov
mov
pop
pop
or
stc
ret
push
and
add
jmp
cmp
and
jno
loopne
sahf
sub
les
pop
sti
loopne
push
call
test
ficomps
push
cld
mov
call
jnp
xchg
aad
add
lcall
pop
fisubs
mov
mov
and
lcall
lods
loope
lods
xchg
jmp
xor
pop
js
pusha
mov
cmp
add
xchg
fwait
cmp
ficoml
sbb
cli
hlt
fists
sbb
js
les
aad
adc
jecxz
jle
scas
sub
xchg
xor
scas
adc
adc
dec
dec
fsubrs
push
stc
arpl
sbb
and
call
mov
das
pop
loop
rcrb
sahf
repnz
push
mov
mov
dec
pop
fsubl
lcall
push
mov
cld
xchg
or
mov
inc
lea
add
sub
sti
flds
stos
sub
xchg
sarl
mov
nop
fidivl
arpl
push
lea
mov
or
jecxz
adc
sbb
mov
aas
dec
pop
and
nop
inc
mov
adcb
scas
lods
push
daa
stos
adc
jmp
sbb
aas
and
cmc
icebp
mov
xchg
add
shlb
add
ljmp
dec
cmp
scas
inc
push
add
mov
jg
and
push
daa
add
mov
pop
push
cmp
mov
jl
jp
xor
iret
stos
test
mov
in
nop
mov
sbb
dec
orl
test
ret
dec
pop
cmpl
mov
call
add
aaa
bswap
loopne
xchg
push
sub
aam
insl
int
push
orl
xchg
xchg
lahf
and
mull
and
popf
pop
and
loope,pn
mov
in
add
mov
stc
sub
dec
add
xorb
xorb
push
mov
sbb
inc
test
cmp
sbb
addb
aad
shrl
inc
push
add
addr16
aam
sahf
lret
sbb
pop
adc
dec
int
inc
or
jo
pop
rorl
jmp
rcr
xor
enter
dec
imul
mov
test
push
inc
out
outsl
pushf
cmpsb
pop
loop
roll
lea
mov
std
mov
mov
push
movsb
xchg
es
lahf
aam
out
xchg
outsb
pop
or
mov
icebp
hlt
dec
mov
ja
mov
mov
mov
imul
mov
in
push
mov
push
xchg
mov
loop
jmp
loope
cltd
stos
pop
dec
adc
or
jno
stc
cld
mul
or
cld
dec
push
mov
cmp
or
cmp
mov
loope
ret
jle
cmp
mov
or
add
repnz
push
cmp
pop
dec
mov
pop
scas
rdmsr
daa
shr
mov
jo
jmp
adc
cli
pop
and
je
callw
xlat
aam
inc
insb
jnp
rolb
push
les
mov
scas
out
sub
jo
iret
mov
sub
stos
ljmp
std
fdivr
inc
push
in
sti
inc
cmp
mov
mov
push
jl
outsl
seta
enter
es
push
dec
jne
push
bound
test
inc
mov
xorl
add
inc
push
cmpsb
test
data16
popl
fwait
mov
shrb
push
sbb
test
jmp
and
movsl
inc
and
into
or
hlt
push
pop
mov
mov
popf
xchg
fsubr
popa
mov
lret
push
xchg
mov
out
mov
adc
scas
rcl
add
push
cmp
mov
call
fcoms
jne
cli
dec
stos
int
cwtl
jmp
fcomps
lahf
jge
lds
sub
aam
cmp
mov
lahf
mov
sub
mov
mov
jmp
pop
mov
sub
das
xlat
mov
out
mov
pop
lret
pop
js
push
testb
mov
mov
mov
jb
dec
outsl
loope
in
ja
cmpb
data16
jecxz
inc
je
pop
lret
fld
push
mov
ss
les
rorb
pop
add
mov
scas
dec
inc
cmpsb
pop
dec
xchg
lock
jno
mov
push
pop
push
mov
xchg
sbb
repz
test
lcall
pusha
xor
loopne
xlat
ffree
mov
lea
lcall
mull
shrl
jp
mov
repz
adc
popa
dec
adc
jge
dec
enter
divl
call
aaa
fsin
shlb
and
ficoml
mov
inc
mov
cmp
cmc
mov
notl
mov
ds
das
pop
mov
and
lcall
inc
mov
adc
push
pop
cmp
xor
cmp
push
or
pop
mov
rorl
push
cmpl
lds
adc
dec
shlb
cli
daa
pop
in
jae
rorb
pop
lea
stos
jp
in
das
xor
push
jl
and
fsubrl
xchg
lods
add
lcall
dec
sub
arpl
cld
cmpsb
call
inc
fistpl
mov
mov
mov
iret
divb
lret
push
pop
imul
mov
mov
inc
or
stc
mulb
jge
sub
sub
cli
sub
les
aam
dec
mov
fwait
pushf
fdiv
clc
xchg
shll
data16
dec
cwtl
xchg
inc
bnd
fwait
inc
inc
sub
dec
dec
in
mov
add
inc
jge
mov
jbe
in
and
mov
mov
mov
pop
popf
lods
and
out
push
xchg
pop
jle
insl
mov
cld
daa
xchg
icebp
pop
arpl
inc
mov
add
in
loopne
loope
test
inc
sahf
leave
addl
cmpsb
lcall
xor
test
nop
loop
xor
pop
jmp
sbb
or
and
filds
stos
pop
mov
lcall
outsl
es
and
nop
sbb
pop
lds
subl
jl
jb
cld
cltd
ljmp
pop
sbb
stos
xor
aad
xor
insb
or
or
push
or
add
mov
dec
fsubl
lret
pop
cld
mov
and
sbb
cwtl
mov
or
imul
iret
xchg
push
pop
push
ljmp
adc
jne
mov
ss
sbb
pop
xor
inc
dec
mov
adc
and
sbb
xlat
rol
cmpsl
jl
sbb
test
mov
scas
jp
pop
ljmp
adc
sbbb
and
mov
push
jle
lock
jecxz
jmp
pushf
cmp
in
sbb
and
nop
adc
arpl
stos
daa
mov
mov
in
mov
leave
push
adc
lds
lods
testb
arpl
or
push
nop
stc
sbb
inc
mov
mov
enter
xor
xchg
out
dec
mov
or
xchg
pop
mov
std
xchg
pop
add
mov
outsb
dec
fadds
adc
ja
add
nop
cmp
aad
sub
test
pop
sub
cmp
inc
psubw
adc
rclb
mov
inc
sub
mov
mov
mov
shlb
add
sub
sbb
add
cli
popf
mov
cld
jle
addb
push
outsl
cs
mul
insb
stos
in
test
cmpsl
jg
sbb
jp
push
pop
sub
test
pushf
push
loope
jmp
cmpl
lret
gs
dec
add
mov
orl
push
pop
sub
push
mov
rolb
cmp
jg
subl
mov
jg
cmp
adc
gs
shrb
xchg
cmpsl
in
ljmp
xchg
mov
movsl
fisttpll
data16
cli
add
adc
idiv
lods
pusha
jnp
xchg
daa
clc
hlt
xor
int
mov
xchg
scas
in
js
and
loop
add
sub
call
mov
bound
dec
ja
outsb
fsubs
sbb
and
mov
sub
idivb
push
pop
call
push
or
adc
or
test
and
pop
imul
fs
mov
je
out
cltd
adc
add
int
cmp
cmp
xor
push
sbb
xor
add
data16
test
cmp
mov
mov
aaa
pop
insb
mov
xor
scas
sbb
aaa
jle
adc
dec
stc
sub
mov
push
mov
repz
loope
cmp
sub
scas
icebp
dec
cmpsl
sbb
jnp
and
jp
call
loope
nop
inc
xchg
push
adc
dec
repnz
mov
sub
sahf
roll
cmp
sub
aam
sub
ret
leave
xchg
inc
push
cmp
test
xchg
cmp
fs
inc
lods
mov
adc
and
xchg
mov
popf
cmp
ficomps
decl
push
movsl
popa
pop
aam
adc
mov
testl
in
pop
lahf
insl
cmp
inc
ja
repz
xor
fnstenv
mov
fadds
shll
jecxz
sti
add
in
js
lods
xor
pop
test
repnz
lea
imul
imul
int3
js
add
xor
in
outsb
push
mov
out
xchg
out
xchg
mov
fs
repz
imul
nop
inc
push
out
mov
das
into
shr
jmp
pop
cli
push
adc
xor
mov
dec
jmp
lret
bnd
cmp
aas
int3
mov
pushf
mov
adc
bound
lea
out
imul
cmp
adc
sarl
dec
jb
iret
cmpsb
cmpsl
out
push
add
repnz
in
cmc
sub
inc
outsl
cmp
lds
aam
and
xchg
cmp
lret
cmp
addr16
push
dec
imul
test
xchg
into
push
or
ret
adc
lahf
add
fmull
ljmp
mov
xchg
icebp
jbe
test
shll
ds
sbb
or
mov
add
mov
mov
xor
aas
or
scas
dec
jns
sub
inc
dec
mov
insl
jg
push
pop
cmc
xor
mov
arpl
lret
stos
xor
cmp
mov
xor
data16
imul
pop
fs
mov
mov
lret
ret
sbb
inc
sub
or
add
lcall
lcall
pusha
lret
or
mov
and
push
xchg
test
out
sbb
push
dec
sub
jmp
sbb
mov
fildl
add
pop
add
and
aas
xor
or
mov
mov
jnp
jmp
or
insl
test
cmpsl
jbe
test
jmp
ja
outsl
icebp
ljmp
cwtl
ds
mov
lahf
mov
out
fsubrp
xlat
aad
arpl
mov
xchg
mov
dec
out
push
adc
fimull
or
ret
bound
fcompl
xor
or
sbb
jp
sbb
or
repz
mov
test
lods
in
stc
mov
jae
stos
xor
lea
jmp
popa
shll
cmpsb
mov
sub
dec
ljmp
mov
lcall
je
shlb
fwait
sub
push
outsw
call
and
dec
ss
fstpl
xor
sub
mov
mov
test
or
sbb
lret
int
pop
sbb
imul
add
push
push
fadds
out
pushf
lds
pop
test
push
adc
lods
jns
pop
or
shrb
sub
cmp
pop
xlat
dec
sub
mov
cmp
call
repnz
xor
sti
mov
cmpsl
mov
xchg
test
adc
sahf
and
push
mov
add
push
xorb
sahf
mov
cmp
notl
or
and
test
xchg
sub
mov
sbb
aad
dec
push
mov
dec
dec
adc
cmp
scas
into
inc
mov
iret
pop
incb
mov
stos
adc
aad
bnd
fistps
or
not
movsb
sbb
ftst
jnp
adc
adc
push
out
test
lcall
mov
imul
jg
dec
in
fxam
cmp
fidivl
cwtl
std
call
int3
ficomps
dec
jns
inc
xchg
movsl
and
pop
lahf
popa
rol
push
fisubs
mov
cmp
xorl
mov
jb
ja
jbe
adc
test
add
cld
daa
js
xor
sti
xchg
iretw
movsb
fldt
nop
pop
imul
pop
sbb
rolb
fistpl
adc
push
fwait
mov
xchg
in
xor
adc
and
lcall
pop
add
mov
pop
dec
ljmp
pop
jnp
inc
enter
mov
xchg
movsl
icebp
pop
adc
sub
out
push
loopne
jp
inc
push
sub
xor
pop
push
pop
in
out
mov
out
jle
jno
fmull
mov
mov
jmp
int
jge
sbb
mov
jge
mov
movsb
cmp
ror
repnz
sbb
dec
inc
mov
xor
pop
pop
aam
lret
dec
sub
insl
or
push
cwtl
cmpsb
int
repz
sarl
adc
test
cwtl
ror
jmp
fmull
test
add
js
push
addr16
nop
fsubrl
aas
jecxz
push
inc
adcl
gs
or
mov
adc
les
pop
mov
push
adc
in
mov
jmp
sti
mov
out
sbb
sbb
pop
sub
adc
and
ret
loop
cmp
ret
xchg
addb
mov
mov
mov
pop
push
mov
push
sarl
lea
and
mov
lods
pop
or
mov
pop
icebp
hlt
call
push
jl
add
hlt
outsb
loopne
mov
int
out
lods
aam
mov
sbb
pop
dec
rcrl
dec
leave
cltd
bound
sub
ficoml
or
loope
mov
sar
xchg
dec
hlt
outsb
sbb
inc
dec
xchg
push
push
movsl
mov
loop
lret
cltd
shll
or
imul
pop
xchg
inc
cs
orl
popf
push
cmc
nop
fmuls
loop
leave
std
cmpsl
pop
jge
fidivrs
das
test
imul
push
imul
cmp
lahf
mov
jge
inc
lock
out
subb
cmp
imul
xchg
dec
or
adc
shrl
mov
mov
iret
ds
push
cmp
xor
sbb
jae
mov
or
sub
inc
fisttps
jno
inc
push
adc
jl
adc
push
sbb
push
jp
dec
fcompl
stos
cmp
or
sbb
insb
ljmp
lods
sub
in
push
jp
dec
fcompl
stos
cmp
or
sbb
insb
ljmp
lods
sub
in
push
ror
dec
fcompl
jb
mov
insb
ljmp
cwtl
sub
sbb
push
jp
lret
rcll
adc
hlt
add
mov
cmpsl
insl
xchg
pop
xchg
test
or
pop
leave
pop
fnsave
and
inc
lea
pop
xchg
cmp
jns
icebp
daa
in
pop
fldl
int
iret
scas
push
popf
inc
lea
inc
xchg
and
xor
aaa
std
add
movsb
bound
adc
loop,pn
xor
sbb
clc
cmc
mov
cmp
dec
loop
daa
or
sbb
inc
in
es
jge
out
push
jp
testl
repnz
stos
adc
clc
xor
frstor
add
jne
loope
push
std
outsb
into
adc
cs
push
mov
xor
pop
mov
xor
in
adc
popf
inc
enter
xchg
push
mov
sbb
sbb
clc
inc
daa
andl
in
and
or
pop
sub
das
adc
mov
inc
or
movsl
js
fdivl
xlat
pop
jo
bound
xchg
xchg
xor
nop
lahf
inc
mov
jge
inc
xchg
cmp
adc
std
daa
cmc
pop
les
aam
movsl
addr16
xchg
sarb
pop
sarl
shrl
aas
mov
inc
push
flds
icebp
fsubs
scas
xor
aaa
loope
adc
add
cs
and
imul
iret
or
lods
ds
sub
insl
sarl
loop
mov
out
xlat
sbb
daa
in
pop
fldl
int
mov
inc
lea
pop
xchg
cmp
or
pop
fldl
int
mov
inc
lea
dec
daa
mov
out
xor
jno
cmp
hlt
lock
jae
cmp
inc
test
jge
sbb
dec
xlat
sbb
xor
stos
sbb
gs
dec
xchg
sbb
mov
leave
sub
or
notb
iret
inc
stos
add
dec
out
addb
dec
aam
mov
fndisi(8087
in
adc
inc
inc
fdivrl
mov
into
mov
mov
repz
mov
inc
sub
cmp
xchg
dec
mov
cmpsb
call
notb
stos
and
sarl
lock
inc
pushf
imul
or
jnp
add
rcr
push
jo
sub
cmp
mov
or
mov
in
jp
add
mov
mov
push
inc
lcall
sub
ss
pop
cmc
notl
repz
sbb
out
mov
shll
sbb
das
adc
xchg
mov
aaa
or
scas
mov
cld
insl
xchg
out
aas
and
orl
or
or
pusha
xor
adc
mov
sbb
stos
lock
out
jb
xchg
roll
jno
push
xor
lret
xlat
push
aad
in
or
sbb
es
sbb
jnp
pop
jle
jo
std
cmp
cli
push
adc
jl
in
fists
cmp
dec
or
push
push
push
or
mov
in
std
mov
movsl
push
test
or
or
push
fisubs
jmp
stos
xchg
iret
xchg
rorl
lea
bound
in
in
ljmp
bound
iret
lret
insl
aas
stc
mov
jp
hlt
push
push
les
sti
inc
aam
inc
fistpl
rclb
dec
adc
dec
jle
lret
sbb
cld
fsts
sbb
aaa
push
icebp
push
inc
push
adc
ja
dec
pusha
add
xchg
pop
jl
pop
pop
lods
push
popf
imul
test
and
mov
ret
xor
cs
sub
dec
xchg
ret
and
push
xor
push
dec
loopne
mov
ljmp
std
jecxz
dec
mov
cs
jmp
inc
movsb
dec
push
leave
add
jle
lea
sub
aam
xor
loopne
jecxz
cmp
add
std
popf
cmp
mov
jnp
sub
dec
sbb
stos
sub
loopne
repz
jae
lods
aad
es
and
mov
lcall
sub
aas
xchg
out
fadd
push
rolb
add
add
subb
mov
lea
push
push
sti
roll
dec
hlt
ja
insb
jae
inc
xor
push
jo
scas
js
enter
insb
and
mov
cltd
cmp
dec
imul
xchg
pop
sbb
int
mov
sub
hlt
sub
in
push
mov
jg
cmp
cmp
and
fiadds
mov
cmpsb
movsb
push
sub
scas
or
jae
int3
jae
ja
lods
insl
push
into
push
imul
pop
cs
adc
push
mov
push
iret
pop
adc
popf
cmpsb
dec
mov
aad
mov
into
inc
jno
inc
ret
filds
js
cmp
mov
mov
test
mov
fs
mov
adc
test
adc
xchg
pushf
ror
push
test
jl
sub
xchg
dec
stc
rcll
mov
fimull
fnstenv
dec
adc
cmp
add
xlat
sti
loopne
sbb
and
inc
pop
jl
mov
adc
lcall
sbb
movsb
daa
sub
sbb
xor
push
aaa
faddp
insl
add
mov
pushf
cmc
addr16
sbb
pop
outsl
push
sbb
shrl
push
gs
sub
lods
xor
adc
int
aaa
je
fistps
push
mov
icebp
cli
mov
mov
es
iret
xor
sbb
ja
in
lret
mov
aaa
inc
and
jb
stos
aad
sub
out
push
addr16
subb
ror
push
test
push
test
dec
orl
sub
scas
push
mov
mov
or
sub
fstps
mov
loop
or
xor
dec
cmp
fimull
lret
sub
fimuls
jno
sub
sbb
xchg
in
or
cmp
test
insb
xchg
dec
mov
movsb
incl
test
inc
push
xchg
push
or
push
xchg
push
aad
pop
push
sub
in
ljmp
enter
bound
adc
xor
sub
loop
cmc
or
stc
push
fcoms
inc
and
test
das
inc
imul
mov
fnstcw
push
fbld
xchg
jns
fdivrl
mov
lcall
adc
inc
add
pop
sub
out
daa
xchg
jae
fwait
sbb
addr16
sarl
sbb
jge
push
test
inc
add
mov
stos
cmp
dec
cmp
and
shll
and
xor
mov
ret
fucom
sub
jecxz
or
paddusw
je
mov
mov
lcall
out
push
or
dec
or
iret
addr16
jnp
cmp
addl
popf
mov
pop
mov
std
fsubs
jle
push
imul
in
sub
vmwrite
stc
dec
pop
mov
sti
mov
pop
xchg
inc
sub
push
test
lea
dec
sub
pop
dec
jecxz
fs
mov
mov
addr16
mov
sbb
fimuls
sti
dec
xor
in
call
xor
xchg
jecxz
lcall
ds
stos
repz
push
sub
cmp
bound
mov
jbe
mov
dec
leave
inc
lahf
ror
jnp
mov
inc
ss
sarl
in
pop
or
sbb
cmpsb
repz
mov
mov
test
repz
ds
adc
inc
push
icebp
push
out
shrl
testb
mov
or
lcall
mov
xchg
and
cmc
fnstcw
js
bound
pop
adc
sub
pop
and
pop
jp
dec
mov
pop
mov
mov
es
pusha
xchg
mov
push
sahf
and
imull
dec
imul
fisubs
out
mov
popf
sbb
xor
ret
push
pop
cmp
xchg
push
sbb
xchg
das
mov
or
pop
test
pop
pop
xor
cmpsb
mov
ret
xor
or
cmpsl
cli
into
pop
jl
dec
and
and
and
jnp
rcrl
lods
popf
jmp
jg
jle
stc
es
sbbb
mov
cltd
mov
out
add
pop
or
xchg
sub
lds
push
inc
cmp
jbe
mov
bound
in
out
push
mov
adc
sub
and
mov
sub
cmp
inc
leave
or
fsubrl
mov
sub
mov
in
and
dec
subl
push
pop
rorl
icebp
mov
in
lock
lret
cmp
test
and
rorb
test
fcomip
aaa
fimull
push
xor
and
loopne
jecxz
idivb
stos
mov
jns
cli
push
not
cmp
pop
xor
sahf
sbb
hlt
add
lahf
add
shlb
cwtl
mov
dec
nop
mov
add
mov
jbe
cmp
push
fisubrs
cmp
mov
shr
sub
push
shlb
fbld
cmc
into
ja
xchg
add
push
hlt
cmp
mov
ss
xlat
sbb
leave
stos
sub
cwtl
clc
pushf
cmpsl
mov
or
adc
int
movsl
or
jb
das
loopne
fsubrs
adc
or
mov
xor
sub
dec
xchg
add
pusha
dec
push
es
pop
sahf
cwtl
xor
icebp
sub
lret
repnz
outsl
push
das
iret
arpl
sbbb
push
mul
leave
popa
pop
pop
out
mov
and
mov
mov
xchg
repnz
stos
jnp
dec
mov
mov
and
test
or
mov
or
inc
cld
leave
inc
loopne
mov
loope
jle
push
insb
or
lock
xor
push
stos
adc
jg
sub
jmp
aas
add
jp
clc
scas
mov
xchg
aam
xchg
lahf
sub
cld
adc
and
aam
jg
fstps
push
sar
data16
cmp
mov
mov
aad
hlt
or
push
fs
sub
shll
dec
lcall
lods
xor
inc
xchg
mov
adc
cld
mov
test
vpsubusb
int3
pop
cmp
cmp
push
loope
jge
push
ret
adc
add
cltd
les
lret
cmp
push
imulb
or
shll
add
cmpsb
mov
push
and
not
shrb
mov
sbb
leave
pmulhw
fmull
pop
loop
in
push
imul
mov
mov
pop
pop
mov
adc
insb
xchg
insl
out
push
pop
int
push
cs
inc
jb
outsl
mov
stc
pop
sbb
mov
jg
movsb
mov
mov
xor
mov
dec
jl
xor
int3
xor
jne
or
inc
pop
rclb
in
int
sub
rorb
fisubs
repz
push
cli
adc
xorb
cmc
or
fldl
xchg
dec
cmpsl
cmp
push
jecxz
loopne
mov
sub
dec
mov
jbe
in
fst
test
add
pop
icebp
mov
rclb
dec
jl
pop
add
fucom
xlat
xchg
mov
fsts
inc
fwait
cmp
push
ret
call
mov
xchg
xchg
cli
sbb
cs
add
mov
imul
pushf
add
cmp
les
pop
sbb
cmpsb
or
push
add
cwtl
push
sub
lret
std
and
or
orl
and
dec
or
fs
adc
bound
cmc
cmpsl
jecxz
stc
jno
ljmp
inc
add
dec
or
adc
push
add
pop
aad
pop
fsubr
lahf
pop
popf
imul
sub
addb
sbb
push
test
jecxz
sbb
int3
adc
aad
int3
pop
mov
mov
cmpsl
cmp
das
sahf
popf
mov
fs
jb
xchg
mov
sub
fwait
rcll
pop
sub
iret
xchg
test
jmp
jns
test
cmpsl
inc
mov
aas
hlt
lcall
xchg
daa
xorl
scas
out
mov
shll
leave
sub
ret
shrb
pusha
xor
pushl
push
ja
xor
push
push
mov
mov
jmp
clc
add
adc
mov
pop
cli
cmp
icebp
or
pop
xor
mov
jns
jle
xor
sub
or
inc
out
adc
cltd
push
jmp
repnz
and
pushf
xor
ljmp
inc
mov
jb
lods
into
mov
outsl
add
inc
imul
fbld
cs
add
xchg
pop
out
xchg
xchg
jb
mov
sbb
popa
in
dec
je
les
fdivrs
push
cs
sub
mov
movsl
int
xor
mov
jl
jno
pop
xchg
fs
imul
xor
je
mov
cmp
shrl
pop
shrb
and
dec
sub
cmp
add
fwait
jmp
std
add
xchg
xchg
dec
add
adc
repz
push
cmc
pop
inc
sbb
repz
pushf
push
push
mov
jle
test
push
int
mov
add
push
push
aas
mov
or
lcall
cld
test
sub
lcall
ret
lret
cwtl
addl
jg
out
int
fiadds
insl
push
cmp
xor
aam
das
and
xor
imul
aad
add
cmp
test
orb
or
pushf
add
jno
out
fnstsw
pop
sbb
adc
or
inc
stos
jae
push
imul
jns
add
in
filds
sub
div
xlat
aaa
fs
dec
xor
movsb
pop
out
inc
nop
inc
dec
mov
xchg
cmc
inc
push
insl
icebp
pop
mov
pop
xchg
je
jmp
aaa
sbb
mov
daa
add
setne
push
in
push
dec
icebp
sub
out
xchg
or
je
movsl
cli
mov
lret
pop
sbb
orb
jns
aas
fcomp
adc
add
fsts
les
jmp
nopl
adc
lahf
cmp
xchg
out
out
daa
aad
sub
lahf
xor
lahf
negb
mov
cmpsl
jnp
xor
mov
lcall
and
jmp
add
ljmp
inc
jne
leave
fdivrs
call
mov
fists
sbb
rorl
push
jns
pop
mov
jecxz
imul
dec
push
push
call
loope
inc
in
inc
inc
cmpb
mov
pop
cli
or
sarl
add
nop
sbb
xor
fs
iret
pop
jle
mov
inc
nop
leave
cld
ret
push
and
and
mov
push
pop
adc
xchg
xor
fbld
subb
push
in
js
fsubrl
or
daa
insb
adc
inc
xor
mov
std
and
movsl
pop
orb
addr16
inc
dec
jnp
mov
xor
mov
xchg
pushf
push
xchg
gs
cmpsl
mov
fdivrp
out
data16
cmpsb
add
fwait
in
dec
cli
mov
mov
int3
lcall
or
inc
cmpsb
xor
lret
dec
pop
arpl
loop
mov
sub
jp
adc
rorb
fs
push
movsb
fimuls
hlt
xchg
lods
shll
out
mov
cmpsb
and
xchg
pop
push
jne
arpl
mov
and
lret
bound
dec
dec
sub
dec
jno
sbb
loopne
pop
adc
lods
movb
lods
dec
cmc
imul
mov
jg
aaa
jnp
dec
sbb
rol
push
dec
dec
xchg
fdivr
les
aas
sahf
mov
daa
enter
int
sbb
sbbl
mov
pop
push
sahf
or
jns
ljmp
cs
aas
jmp
dec
imull
enter
fs
add
pop
loop
aam
aam
sub
adc
stos
mov
pop
inc
inc
jae
loopne
xchg
cmp
jno
and
mov
mov
ret
movsb
es
dec
faddp
mov
add
scas
dec
mov
fcmovnu
dec
cs
test
fs
mov
and
mov
mov
addr16
in
push
movsb
jbe
fiaddl
xchg
orb
pop
or
xchg
movl
fcomps
mov
mov
mov
test
mov
stos
push
push
loopne
test
add
jmp
dec
push
std
pop
cwtl
push
fcoml
fistps
imul
in
movsb
sub
popf
dec
mov
mov
mov
jle
pop
adc
pop
adc
mov
mov
adc
mov
jbe
xor
fldt
push
mov
jle
adc
mov
xor
push
cmpsl
daa
cli
push
add
test
test
mov
and
nop
lods
fnstcw
dec
fldenv
pop
xor
sub
out
in
lret
jno
add
mov
xchg
mov
mov
idivb
mov
rcrl
leave
xchg
jno
pop
sahf
pop
or
add
xor
nop
stc
jbe
mov
add
push
or
negl
ss
js
test
in
and
fsubrp
cs
cmpsl
out
add
rorl
and
imulb
fcomps
imul
push
test
fcomip
lret
add
inc
test
into
fs
push
mov
loope
add
cwtl
mov
nop
cwtl
xor
rolb
jno
movsb
ljmp
add
stc
sub
out
lock
adc
jmp
fidivrs
xchg
fwait
inc
ror
or
dec
sti
mov
leave
nop
jmp
sti
insb
mov
test
stos
pop
test
popf
dec
and
inc
loopne
mov
js
jp
lds
xchg
xor
lock
imul
sbb
xor
leave
inc
push
xor
inc
dec
pushf
std
arpl
add
fwait
mov
aas
cmp
adc
testb
test
jle
sbb
notb
cli
dec
shrl
nop
mov
mov
inc
xorb
dec
jbe
out
fs
mov
arpl
push
adc
inc
mov
addr16
stos
mov
fdivp
jns
outsl
or
in
cmp
xchg
jo
jnp
movsl
or
daa
jno
adc
lea
mov
pop
mov
ficoms
loopne
fsts
lock
mov
mov
ljmp
xchg
lret
inc
andb
mov
cmpsb
jo
pop
jb
shl
or
adc
or
int
mov
adcl
out
sbb
lods
mov
adc
aad
popa
in
jmp
ret
outsl
nop
push
or
into
dec
aam
insb
aam
loope
stc
mov
movsl
mov
repz
inc
xchg
lret
pop
push
dec
add
out
mov
gs
add
push
sub
ja
xchg
sbb
shr
pusha
add
jp
insl
or
xor
pop
mov
push
lea
les
les
fimuls
xchg
pop
xor
cmp
mov
push
adc
xchg
data16
dec
add
imul
out
dec
inc
in
pop
shrb
aaa
lock
lock
pop
pop
in
stc
mov
int3
sub
sbb
popf
jae
in
sbbl
je
mov
xor
fwait
pop
pop
aaa
call
cs
movsl
pop
addr16
lds
shlb
mov
cwtl
jmp
sbb
rolb
ret
mov
dec
pop
aaa
or
bound
sahf
inc
fstps
inc
scas
mov
jb
loop
pop
insl
dec
shll
daa
add
push
stc
pop
mov
in
push
mov
cmpsl
sub
add
or
daa
lds
inc
dec
mov
popa
and
fdiv
fistpl
jmp
inc
push
js
push
mov
xchg
repz
repz
xchg
mov
jp
sbb
jns
ret
xchg
ss
adc
adc
xlat
push
icebp
jecxz
xchg
lret
cmp
and
in
pop
outsb
sub
mov
movsb
in
jp
cmp
ds
loop
jecxz
cmpb
jl
or
lds
cld
pop
bound
ja
jl
pop
push
loope
lret
push
sub
cmc
add
lret
sbb
adc
jl
sbbb
stc
dec
hlt
movsb
pop
xor
aaa
pushf
les
jne
dec
icebp
push
repnz
pop
jne,pn
add
add
mov
and
pop
lret
pop
popa
sub
pop
xchg
push
lock
xor
fs
cmp
cmp
cld
pop
shr
mov
loop
fldenv
stc
lret
sub
or
cmp
xor
data16
dec
push
jg
stos
cli
mov
jbe
mov
pop
xor
or
aad
lret
jne
jb
hlt
mov
jnp
ljmp
loope
pop
into
mov
test
daa
popa
rcl
or
aad
dec
cwtl
mov
cli
lock
add
mov
pop
jg
inc
dec
movsb
stc
js
inc
leave
sub
jno
popa
stos
imul
mov
sahf
ficomps
lock
mov
and
push
cld
sub
push
push
mov
push
adc
es
add
mov
ret
inc
insl
sbb
mov
lret
sarl
loopne
or
aad
jge
je
mov
je
cmp
jne
cmpsb
clc
gs
arpl
leave
dec
rol
mov
and
int3
add
mov
and
push
push
pop
cmp
movsl
fisttpll
ret
dec
push
jbe
pusha
or
mov
push
addr16
jne
mov
adc
cmp
aam
push
inc
add
jecxz
mov
lods
jno
imul
imul
stos
or
pop
push
pop
pop
inc
lret
jne
int3
sbb
cmp
dec
add
enter
pop
ja
and
inc
pop
pop
sub
fnstsw
pop
inc
imul
lahf
pushf
mov
popf
shrb
sub
dec
pusha
push
jmp
push
jmp
int
pop
mov
xorb
mov
daa
loope
pop
pop
push
sub
jp
pop
pop
mov
sbb
xor
adc
adcl
andnps
sub
adc
test
xchg
cmp
or
pop
fldl
int
mov
inc
lea
pop
xchg
cmp
or
pop
fldl
int
mov
inc
lea
pop
xchg
cmp
or
pop
fldl
leave
ja
lods
push
cltd
inc
mov
pop
xchg
cmp
inc
int
std
fadds
fldl
mov
scas
loop
repnz
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
adcl
mov
xor
add
adc
and
xor
inc
xchg
push
outsb
jae
jae
adcl
mov
adc
add
xor
or
and
cmp
andl
mov
mov
and
dec
sti
cmp
adc
shll
loopne
xchg
dec
xchg
inc
sarb
pop
cld
add
sbb
cli
and
call
or
push
mov
push
insb
sbb
setl
push
rorl
xchg
aas
fisttps
fsubl
mov
jl
outsl
sbb
cmc
xchg
add
push
cli
push
shr
rcrl
repnz
jg
addr16
adcb
push
xchg
arpl
shlb
sbb
repnz
mov
and
or
loop
xchg
call
test
mov
cmp
lret
add
lock
and
ret
adc
loopne
imul
cmp
shl
adc
and
sbbb
push
sti
add
arpl
leave
dec
fisttps
arpl
adc
add
xor
mov
rorl
imul
sub
pop
scas
dec
insl
jns
jae
out
push
imulb
pop
cmpxchg
repz
push
addb
in
adc
push
lret
repnz
scas
inc
rcll
pop
mov
mov
mov
cmp
out
jmp
mov
add
xor
and
rcll
ret
and
xor
inc
xchg
push
andl
mov
mov
adc
add
xor
and
rcll
ret
and
xor
inc
xchg
push
andl
mov
sbb
rorb
repz
addr16
dec
aas
mov
cmp
cld
js
int
and
ret
jno
sbb
scas
leave
fnstenv
in
aad
dec
shll
rcrl
mov
dec
loopne
sahf
stos
scas
dec
mov
pop
pop
mov
jge
pop
cmpsl
popa
out
inc
arpl
or
mov
orb
jns
scas
pop
nop
pop
mov
test
adc
inc
adc
repnz
into
mov
and
cwtl
faddl
adc
adc
in
pop
xchg
rol
lahf
in
cmp
lret
or
mov
aaa
pop
scas
imul
movsl
fisttpl
fsts
cmp
xor
sub
fldpi
push
les
stc
jmp
lar
cli
or
pop
inc
inc
ret
dec
push
bound
cmp
cmp
mov
lcall
shld
xchg
pop
and
push
mov
push
jne
scas
movsl
push
mov
sbb
sbb
and
pop
rclb
lret
mov
sbb
js
mov
rclb
inc
mov
orb
cmp
iret
in
sub
std
mov
pop
stos
fcmovu
lds
pop
movsb
pushf
rcrb
ror
adc
cmp
movsl
enter
mov
test
jle
inc
sbb
stc
dec
mov
into
shll
nop
cmp
cmp
cmp
sub
and
mov
aaa
add
mov
sbb
mov
addr16
sbb
mov
or
int
imul
lock
adc
adc
jo
daa
mov
hlt
mov
cmp
jmp
std
out
int3
ret
setg
sub
movsl
pusha
out
fwait
or
cli
movsb
leave
enter
mov
inc
daa
mov
add
dec
aaa
nop
imul
je
clc
gs
jp
andl
sbb
mov
sti
repz
mov
outsb
jp
xlat
outsb
xor
rcrl
or
cmp
sbb
loopne
push
int3
cmc
fists
push
insl
adc
mov
stc
lret
cwtl
leave
movl
push
insl
xor
cmp
push
imul
shr
call
cmpsl
sbb
ljmp
dec
lods
push
xor
pop
fscale
gs
pop
jnp
sbb
imul
adc
or
adc
sti
jno
ljmp
ss
xor
sub
jns
cld
int3
fldcw
cmp
xor
mov
mov
movsb
out
xchg
in
mov
xor
pop
mov
aam
push
adc
and
nop
add
push
xor
inc
cmpb
jge
repz
jg
js
iret
inc
je
adc
sbb
jge
cli
mov
push
inc
cmp
cli
test
popa
dec
push
clc
sub
cvttps2pi
data16
push
cmp
sub
popf
cmp
inc
sbb
xchg
outsb
loopne
insb
out
std
push
adc
push
stc
div
xchg
rcll
jg
jecxz
jnp
sahf
nop
fcoms
mov
test
leave
dec
nop
xchg
mov
invd
outsb
outsb
movsl
xchg
outsb
lods
test
inc
daa
xchg
cmp
addb
ss
xor
bound
cmc
inc
push
pop
dec
pop
fwait
inc
xor
mov
mov
rcrl
adc
adc
adc
inc
adc
push
sahf
fcom
mov
xchg
mov
cmpsb
xchg
loopne
mov
inc
push
lea
adc
and
cmp
add
dec
fidivrl
fwait
jo
cmp
bound
nop
jmp
es
aad
jle
ljmp
lods
xlat
mov
mov
outsb
rclb
dec
les
jbe
gs
dec
jle
dec
cmp
dec
pop
sbb
cmp
xchg
mov
pop
lcall
arpl
add
ja
adc
push
mov
mov
movsb
mov
mov
loop
jbe
aas
cmp
and
and
dec
add
inc
pop
push
adc
roll
cmpsl
repnz
xor
mov
xchg
mov
ret
iret
outsb
imul
loop
sahf
sbb
hlt
int3
sub
sub
sub
js
xchg
dec
mov
out
and
and
lods
mov
mov
pop
jecxz
pop
pushf
push
loop
add
or
adc
je
jo
leave
cld
scas
jns
inc
std
dec
mull
push
cmp
call
cmp
leave
jmp
ss
aad
lahf
aas
jecxz
xchg
sbb
pop
mov
pop
testl
movsb
pushl
jge
lea
adc
test
xchg
test
mov
movsb
aaa
sbb
sbb
subb
and
js
add
inc
pop
dec
jge
jnp
arpl
fiaddl
lret
fwait
jg
pop
adc
leave
stos
cmp
pop
push
xor
mov
bound
and
test
mov
xchg
jg
int3
gs
xchg
hlt
leave
cmp
ret
jl
dec
or
test
loop
out
push
xchg
xor
jge
ja
and
add
dec
xchg
rcll
xor
or
xchg
nop
push
jb
jo
dec
dec
adc
pop
cmp
xchg
loop
lret
cli
shrl
ds
pop
sub
xchg
mov
daa
cwtl
xchg
aad
push
jl
push
mov
mov
popf
lds
or
dec
dec
xchg
outsb
adc
cmp
ss
pop
mov
test
into
xchg
les
aaa
inc
push
xchg
pop
in
add
mov
je
inc
std
js
arpl
add
out
int
out
cwtl
sbb
jge
xor
fldt
sub
das
sub
popf
into
std
or
out
cmpsl
cld
adc
inc
mov
in
test
shll
and
or
aaa
fmull
push
push
mov
pop
into
xor
dec
cmc
jle
ja
loope
xlat
mov
test
nop
dec
inc
test
int
das
mov
inc
pop
mov
imul
push
jbe
pushl
fstpt
lcall
clc
sub
fs
lahf
cld
movsb
hlt
adc
cwtl
push
mov
fisubrs
push
lock
mov
pop
xchg
cmc
js
mov
pop
iret
mov
add
push
enter
xor
test
or
xor
mov
out
sub
adc
les
push
xchg
mov
nop
fstpt
mov
shl
inc
adc
std
mov
out
inc
jo
mov
hlt
inc
outsl
pop
xchg
add
ljmp
ds
adc
pop
mov
loopne
clc
cmpb
jb
inc
jo
js
and
jb
das
lahf
test
iret
ja
jmp
scas
repz
pusha
nop
adc
int
dec
sbb
sbb
add
jecxz
cli
paddw
or
add
push
iret
popa
repnz
sbbl
or
in
dec
mov
push
stos
mov
pop
and
push
jbe
mov
addr16
mov
sbb
aad
sbb
jp
jecxz
pop
xor
and
movsb
inc
daa
testl
in
xor
dec
mov
popl
ret
popa
jg
inc
aas
cltd
pop
ret
lret
sbb
push
das
jb
or
xchg
pop
cmc
popa
push
mov
dec
js
jnp
push
mov
push
das
mov
aam
sbb
loope
push
mov
fmull
sbb
xor
outsl
add
mov
adc
cmp
pushf
lahf
push
scas
pop
aad
xchg
sub
js
add
sub
jno
addr16
fcomip
popf
jg
les
jl
jnp
sbb
inc
jo
add
mov
test
add
rcrl
jno
inc
adc
pushf
cmp
jp
fwait
repnz
or
icebp
loop
in
es
mov
jns
inc
mov
inc
pop
pop
outsl
or
lea
ficoml
je
std
sbb
or
mov
or
das
sbb
push
dec
pop
mov
insb
fsubr
sub
and
cs
clc
outsb
add
leave
or
nop
mov
out
push
inc
dec
mov
or
out
lods
mov
leave
push
mov
jne
jb
pop
push
xchg
pop
stos
shlb
bound
rep
mov
outsl
psubw
in
adc
cmpsl
fcmovbe
push
and
out
sub
cmp
push
fildl
sbb
cli
stc
dec
inc
dec
xchg
stos
inc
mov
mov
outsb
jle
pop
mov
ret
aaa
js
mov
add
ds
fdivrs
test
push
mov
or
shlb
fucomi
xchg
and
aas
xchg
push
and
push
jne
fdivs
dec
push
sbb
das
mov
gs
push
ficomps
mov
sbb
std
cmpsl
jnp
pushaw
sbb
add
jge
pop
clc
cmc
dec
nop
mov
dec
fs
pop
pop
and
aad
pop
ljmp
call
cmp
icebp
and
mov
cmp
out
xor
adc
insb
adc
sbb
pop
and
inc
lds
cmp
xlat
adc
mov
mov
mov
aad
sub
push
jb
adc
pop
push
sti
xlat
sub
pop
xchg
add
sbb
je
cwtl
imull
lcall
shlb
mov
xlat
aas
std
xchg
pop
xchg
popf
xlat
mov
paddb
ficoml
arpl
dec
dec
push
push
sarb
adc
or
test
and
mov
pop
xchg
es
fcompl
mov
or
std
imul
push
int
cli
bound
mov
cwtl
ss
int
sbb
insb
std
imul
adc
ret
addl
subb
pop
cwtl
lret
mov
xchg
arpl
mov
in
fldl
ds
lret
and
in
push
gs
aad
inc
pop
xor
adc
adc
fiaddl
out
jbe
xlat
mov
lret
frndint
pop
or
xor
mov
cmp
inc
xorb
fdivrs
dec
jp
mov
sbb
cs
xchg
pusha
ss
xlat
ja
dec
stc
pop
xchg
mov
fisttpll
imul
test
mov
dec
adc
xlat
lds
inc
icebp
in
mov
mov
jmp
movsb
push
hlt
dec
in
cmp
out
out
mov
popa
mov
jo
sti
xor
in
mov
out
fists
leave
dec
inc
into
orl
push
lret
mov
cmp
jp
insb
sub
sbb
fcoms
faddl
fmull
jmp
adc
mov
mov
cld
jns
faddp
push
shll
push
sub
subl
adcb
std
push
loopne
xchg
cmpl
push
sahf
std
add
fcomp
pusha
sbb
and
push
out
push
scas
lds
loopne
fdivl
roll
stc
mov
pop
xchg
push
sub
sbb
fmull
sbb
mov
sub
in
lea
push
pop
dec
adc
rolb
rol
fs
test
inc
mov
dec
fsubrl
jnp
mov
pop
scas
loope
add
push
push
call
push
aaa
push
loop
lods
ffreep
mov
push
cmp
outsl
or
leave
pop
jle
adc
hlt
mov
add
imul
cwtl
scas
jnp
mov
adc
loopne
mov
mov
mov
sub
pop
cmp
pop
adc
fistl
in
mov
bound
inc
js
lods
cld
mov
jo
lret
loop
and
outsl
xchg
jno
mov
cmp
nop
fstps
push
stc
inc
stos
sub
lods
mov
jae
adc
popa
mov
or
sbbl
adc
out
ret
mov
js
ret
fnstcw
or
adc
popf
jmp
rorl
jno
push
push
test
adc
push
push
in
adc
scas
mov
mov
popf
jp
fidivrl
add
aad
push
clc
nop
mov
into
data16
jl
movsl
mov
sub
aaa
mov
in
pushf
nop
in
enter
sbb
stos
ja
rcrb
push
js
jne
dec
push
cmpsb
call
mov
lock
cmp
mov
dec
pop
sub
stos
addr16
repnz
lret
cmp
pusha
out
and
jg
stos
jns
jmp
or
ss
in
cmpsl
loopne
bndstx
std
sbb
clc
cmp
and
xchg
push
push
icebp
mov
or
out
sub
inc
mov
lods
sub
out
or
sub
push
push
sub
cmp
push
sbb
repz
push
bound
jmp
cmp
xor
push
iret
jne
test
mov
xor
popf
push
int3
pushf
mov
fs
add
xor
out
mov
in
cmc
and
jmp
add
ja
icebp
cmp
sub
jnp
dec
mov
sti
and
lds
xchg
dec
pop
imul
mov
movsb
rolb
push
aad
push
gs
push
pop
inc
mov
cmp
sarb
testb
je
popl
shl
or
cmp
and
mov
xchg
test
mov
xchg
rorb
ss
adc
jp
cmpb
dec
dec
ret
push
push
aaa
jnp
mov
imul
dec
mov
xchg
mov
jb
xor
js
add
in
xlat
and
sub
shrl
test
fdivrl
mov
pop
sbb
lret
rcl
mov
enter
icebp
push
hlt
mov
adc
outsl
pop
or
cmpsb
inc
xchg
push
mov
cmp
and
in
rorb
out
sub
out
cmp
ret
fmuls
mov
push
rcrb
push
mov
push
imul
cmc
movsl
sub
es
mov
cld
adc
aam
cli
sti
mov
add
add
cmp
mov
iret
hlt
and
mov
mov
xorb
in
push
push
jns
add
jno
xchg
jp
jle
arpl
insb
fsts
test
mov
push
pop
je
xchg
les
sub
aas
adc
xor
outsl
jecxz
dec
lcall
pop
push
inc
jb
les
sbb
enter
and
call
xchg
ja
insb
mov
jns
xchg
and
or
inc
xchg
mov
inc
movntq
popa
gs
mov
lret
fidivs
dec
jae
cmp
stos
cmp
mov
push
cs
sbb
and
ss
mov
xchg
out
inc
jge
push
in
fsubl
or
mov
push
insl
in
movsb
adc
cli
or
inc
aaa
jo
jecxz
inc
pop
mov
mov
lea
push
xchg
and
mov
dec
out
mov
mov
mov
push
movsl
das
aas
stos
sbb
jmp
jp
js
pop
lret
xchg
fcom
test
xor
mov
addr16
sub
jecxz
lock
add
test
out
push
js
int3
sti
arpl
and
scas
outsb
push
fs
gs
jmp
das
mov
imul
xchg
add
leave
sbb
push
and
or
dec
into
cmp
int3
ret
mov
cmc
daa
cmp
ljmp
mov
lret
sub
sub
jbe
pusha
xor
movsl
cmp
mov
mov
divb
aaa
daa
mov
cmp
pop
sub
mov
in
lods
push
dec
cmpsl
cltd
sub
jnp
jno
add
js
jns
inc
dec
or
enter
divl
xchg
clc
vmwrite
sahf
mov
repz
push
jo
sub
fimull
add
mov
rcrb
nop
lods
dec
fisttpll
jecxz
adc
pop
jb
or
lods
leave
xor
inc
sbbb
xor
mov
fadds
into
mov
js
and
mov
lcall
mov
ja
std
int3
lcall
jp
mov
inc
cwtl
hlt
cwtl
enter
and
sub
popf
lcall
cmpsl
cmp
addr16
cmp
dec
jmp
mov
aad
push
or
push
add
xor
dec
enter
cld
dec
dec
pop
aad
fs
loopne
stos
daa
sub
in
ljmp
dec
iret
sbb
adc
aaa
shlb
icebp
xchg
push
mov
fs
rcrb
add
lcall
pushf
and
jbe
and
inc
xchg
xchg
push
stc
push
xor
pop
aas
add
dec
pop
xchg
xorb
fisttpll
inc
loop
mov
jbe
pop
xchg
minps
mov
repnz
sbb
cmpb
cmp
cmpsl
mov
sbb
movsb
jle
imul
fnstsw
jg
cmpsl
and
into
subl
jns
into
push
xor
xchg
test
jno
or
xor
xchg
lds
jbe
and
arpl
aad
lock
setne
in
int
bound
pusha
sub
pusha
scas
aad
inc
rorb
iret
pop
add
test
arpl
addr16
mov
out
mov
jge
push
ret
or
movl
jne
das
mov
cwtl
xchg
frstor
lret
dec
pop
jl
xchg
jecxz
inc
mov
pushf
add
dec
xor
mov
dec
xor
adc
test
add
xor
mov
add
mov
cli
cmp
jecxz
and
mov
jge
test
xor
and
pop
xor
in
and
cmpl
cltd
add
jl
test
push
jb
cmp
jl
loop
test
inc
add
outsb
or
xchg
ret
mov
jg
or
or
xor
insb
cmp
mov
idivl
test
add
lret
ds
shll
fsubr
cmc
in
push
xchg
fcmovbe
loopne
scas
mov
jae
addr16
and
pop
dec
movsb
inc
clc
xor
mov
inc
pushf
arpl
andb
pop
lahf
divb
sbb
arpl
adc
sahf
cmp
and
in
shl
rcrl
imul
push
ja
and
dec
cli
dec
mov
pop
in
inc
subb
in
xchg
push
dec
out
clc
mov
insl
mov
pop
out
mov
jl
pop
enter
rorl
int3
cmc
sub
jbe
test
inc
flds
inc
jge
in
xor
cmp
addr16
mov
and
xor
cli
xorl
fcoml
mov
cmpsb
mov
cltd
inc
les
movsb
adc
imul
and
pop
fnstenv
arpl
leave
lds
push
push
push
inc
mov
pop
scas
out
cs
mov
adc
fcmovb
push
ja
adc
push
shlb
mov
mov
adc
sub
sub
fsts
hlt
data16
mov
mov
jbe
dec
scas
xchg
add
and
jne
ds
outsb
daa
stc
and
jbe
mov
cwtl
dec
rorl
pusha
dec
and
rorl
add
mov
aas
jle
xchg
jno
inc
xor
or
or
xchg
add
insb
jmp
mov
jge
frstor
dec
scas
in
jb
pop
inc
out
add
dec
inc
adc
dec
pop
push
test
xchg
shll
icebp
push
les
jl
lea
fsts
mov
sahf
cmp
mov
pop
and
daa
xchg
bound
jg
fs
jo
pop
cmp
addr16
sarl
push
pop
roll
push
fidivrs
sub
out
sbb
popf
insb
sub
in
fdivrl
mov
lds
push
psubb
pop
fs
mov
jge
mov
jg
xchg
pushl
adc
xchg
stc
sub
lods
xchg
mov
mov
dec
xchg
mov
aas
mov
mov
jmp
int
adc
stos
es
dec
lahf
cmpsb
adc
cwtl
ljmp
inc
or
fnstsw
add
mov
mov
jae
xor
mov
imul
into
test
iret
add
push
loope
pushl
pop
mov
lds
mov
cs
stos
pop
inc
xchg
and
push
mov
cmovne
movl
inc
sbb
shlb
jno
les
adc
push
sahf
dec
int
enter
jnp
dec
add
push
sarb
test
inc
pop
sbb
mov
sub
in
mov
xchg
bound
mov
mov
sti
pop
jae
sub
xorl
inc
mov
loope
int
push
test
js
movsl
or
rcr
out
xchg
jb
aaa
jo
mov
test
adc
add
xor
and
rcll
ret
and
xor
inc
xchg
push
andl
mov
mov
adc
add
xor
and
rcll
ret
and
xor
inc
xchg
push
andl
mov
mov
adc
push
add
adc
and
xor
inc
xchg
push
andl
inc
xorl
and
adc
add
jae
cld
sub
imul
lret
mov
sbb
lcall
fdivr
iret
mov
sbb
push
cmp
xor
jp
jp
mov
lcall
mov
mov
or
add
cmp
xor
push
jp
mov
lcall
mov
mov
or
sbb
xor
inc
sub
dec
dec
bound
mov
inc
ja
inc
adc
test
add
into
stos
cmp
cmpsb
pop
pusha
fbstp
aad
pusha
xchg
pop
jg
in
jae
mov
mov
movsl
int3
bound
push
push
fwait
repnz
daa
fldt
rorb
lahf
jl
lds
jmp
in
arpl
mov
mov
sbb
rclb
stos
pop
or
jp
jo
ja
gs
stc
push
scas
aas
and
cli
add
outsl
aaa
jp
cmp
out
out
test
and
adc
cmc
add
mov
ds
jnp
aad
lcall
mov
mov
or
pusha
sub
inc
dec
xor
push
jp
lahf
fsubp
mov
mov
shlb
test
inc
cmp
ds
push
push
pop
adc
inc
aad
repnz
clc
mov
sbbb
adc
add
dec
cmp
push
cld
mov
lcall
nop
cli
orb
sbb
push
cmp
xor
push
jp
mov
lcall
mov
mov
or
pusha
sub
inc
dec
xor
push
jp
mov
lahf
test
mov
xchg
sub
add
sbb
pop
inc
insb
test
int
imul
pop
or
sbb
push
ljmp
in
adc
insb
in
lds
iret
or
out
sahf
leave
add
pop
fcmove
mov
aam
jbe
fdivr
jg
dec
and
xchg
xor
fistpl
or
aam
std
pop
mov
sub
aas
adc
or
cmpsb
xchg
cmp
test
mov
std
popa
mov
adc
scas
incb
xchg
leave
sahf
inc
jb
add
cmpsb
or
fisubs
int
clc
pop
ja
and
lret
mov
shl
sub
nop
js
mov
ja
sub
iret
or
xor
lds
add
or
pop
sahf
ss
call
dec
mov
adc
and
ficomps
test
inc
jnp
lods
imul
xor
xchg
mov
lea
lahf
das
inc
lods
dec
adc
jbe
inc
lock
xor
mov
out
inc
mov
in
cmp
fs
jae
dec
call
mov
andb
in
roll
mov
push
cld
ss
xchg
inc
in
stos
nop
movl
pop
xchg
add
dec
push
xor
xchg
mov
or
mov
jmp
jmp
stos
in
add
adc
pop
push
movsl
sbb
or
lahf
xchg
pop
ds
mov
pop
jg
and
lock
test
lcall
jb
testl
pop
jle
pop
jmp
cltd
jecxz
dec
or
jge
xchg
dec
arpl
jbe
das
mov
inc
sub
xor
sub
enter
shlb
jle
je
shrl
movsl
fdivr
mov
outsb
inc
data16
adc
insb
xchg
loop
movsb
imull
pop
adc
pop
add
ret
xor
lods
xchg
fwait
shll
aam
mov
add
push
lock
pop
mov
es
mov
inc
icebp
push
mov
or
je
mov
xchg
scas
sbb
push
push
sbb
pop
shlb
cmpl
pop
add
inc
fcoml
aam
dec
repz
jg
loope
dec
cwtl
ss
cwtl
aam
jne
pop
jge
insl
popf
hlt
dec
push
jp
es
xchg
insb
sbb
outsb
cmpsb
dec
cs
cmc
aad
out
aam
xchg
or
imul
lock
xchg
daa
in
push
or
decb
out
enter
cmp
cmp
add
mov
mov
mov
inc
jno
xor
push
sub
xor
jmp
fimuls
sti
mov
cs
es
xor
push
add
lcall
xchg
movsl
and
jne
add
pop
stos
stc
lods
sbb
js
xchg
sahf
out
pusha
jecxz
sub
xor
inc
lcall
mov
popa
aas
sar
lds
sbb
dec
sbb
insl
mov
es
or
lahf
add
xchg
mov
ljmp
push
out
movsb
mov
repnz
jle
jl
arpl
jp
push
in
sbb
les
dec
pop
insb
mov
adc
jbe
lea
adc
pop
cli
sbb
les
xor
cs
pop
dec
push
sti
fsubrl
into
gs
sbb
jecxz
test
mov
scas
pop
sub
push
xchg
fwait
dec
jbe
popf
dec
fninit
je
out
fcmovbe
in
fldcw
dec
cmpsb
fiaddl
adc
sbb
inc
add
sbb
add
ficompl
loop
mov
stc
or
fisubl
inc
lahf
jmp
cmc
stos
fstpl
test
outsl
movsl
je
sub
cltd
xor
lret
hlt
or
sbb
cwtl
add
lds
int
cmp
dec
loope
stc
pop
mov
inc
mov
rcr
addr16
adc
call
ret
clc
push
fwait
mov
aam
cmp
mov
out
xchg
cltd
inc
ret
inc
rep
lcall
lahf
push
adc
stos
mov
insb
or
enter
in
icebp
push
lea
mul
dec
les
cmp
push
test
aas
push
jl
xchg
mov
popa
sti
in
call
mov
adc
mov
repnz
das
bound
mov
pop
dec
and
repz
shrb
fsubrl
dec
jmpw
xchg
dec
out
arpl
loope
inc
out
xchg
mov
xor
aaa
mov
ss
lret
rol
xor
daa
and
ret
mov
lret
out
pop
or
mov
fwait
push
push
inc
testl
cmp
test
notl
jge
dec
stos
jbe
inc
in
test
ret
inc
arpl
mov
adc
enter
fcmovnu
dec
push
repz
cmpsl
out
cmp
cmpsl
les
jne
stc
mov
jp
inc
out
inc
outsb
push
loop
add
adc
adc
adc
adc
pop
push
loopne
fwait
mov
push
mov
pop
loope
ficoms
das
lods
dec
mov
cli
jnp
xor
shrl
jecxz
inc
adc
into
dec
ficoms
cmp
fcmovnu
and
test
or
jmp
adc
fnsave
cmp
aas
mov
mov
data16
pop
pop
adc
and
ljmp
cld
xchg
nop
xor
mov
inc
jp
xor
xchg
xchg
mov
pop
mov
push
xor
inc
clc
ficompl
add
movsl
adc
scas
ljmp
push
add
faddl
loope
adc
push
jl
pop
and
mov
inc
pop
sub
ja
ss
xor
test
test
pop
adc
add
mov
cmp
scas
sbb
pop
pop
outsb
push
sub
jge
or
mov
mov
in
icebp
in
imul
fimull
cmp
jo
inc
push
add
and
outsl
or
or
neg
js
popa
sub
mov
iret
mov
inc
imul
jg
and
mov
lock
sbb
test
pop
jecxz
rcll
adc
dec
repz
sub
adc
mov
cld
std
stos
sti
jns
push
test
pop
out
sbb
jae
cltd
addb
xchg
fs
xchg
xchg
xchg
or
ret
iret
ficomps
aas
adc
mov
dec
inc
movsb
jge
hlt
repz
mov
popa
popf
fsubl
jle
jge
adc
pop
xor
out
dec
pop
pop
test
ljmp
daa
inc
inc
mov
push
inc
inc
fsubrs
fcomip
mov
les
outsb
xor
lahf
and
hlt
push
adc
or
dec
pop
xlat
lret
mov
mov
fimull
dec
js
imul
cli
sarb
mov
mov
xor
sub
leave
mov
add
jns
dec
cmp
aam
mov
leave
fucomp
jo
pop
and
xchg
outsb
je
mov
enter
js
fcmovne
jmp
lds
jecxz
jns
js
jo
pusha
sbb
mov
insl
mov
jno
lret
pop
jae
mov
and
ret
or
and
popf
xchg
movsb
shlb
jno
test
pop
fisubl
or
lea
xchg
ss
adc
dec
dec
test
movsl
or
sub
repnz
pop
out
fwait
inc
inc
les
fists
aam
dec
and
dec
xlat
pusha
push
and
ljmp
mov
push
out
push
mov
es
mov
xlat
fadds
outsb
fsts
fcompl
stos
or
repnz
mov
in
arpl
mov
dec
lods
es
rcrl
sub
rcr
and
add
and
test
jae
notl
push
add
cmp
cmp
ret
pop
aas
pop
or
and
or
jle
mov
jb
aad
sbb
push
lock
inc
scas
xchg
inc
sub
ljmp
hlt
sub
cli
fistpl
jne
or
ds
push
jnp
pop
jns
iret
add
ret
sub
sahf
fsts
xchg
sahf
jp
addr16
mov
ljmp
cmp
mov
jno
jmp
lret
sub
aam
daa
mov
lock
loopne
mov
shll
or
cmp
dec
iret
hlt
scas
or
and
sti
stos
pop
fwait
inc
cli
rcll
xchg
lods
dec
sahf
fiaddl
add
scas
bound
mov
push
jge
adc
or
mov
cmpsl
mov
jle
or
out
mov
rorl
out
push
repz
loopne
dec
mov
jp
dec
das
pop
ds
jo
or
icebp
mov
aad
mov
outsb
fs
push
aas
xor
test
mov
std
cmp
push
mov
pop
mov
jmp
sbb
add
aas
out
mov
mov
sub
stos
sbbb
xor
or
scas
mov
popa
xchg
mov
insl
sarb
jns
and
sahf
in
scas
cmpb
clc
mov
add
mov
movsl
adc
or
push
sbb
test
stos
lods
aaa
es
test
xchg
out
xchg
repz
cltd
and
dec
push
adc
and
bound
repnz
into
pop
push
xor
fcomps
push
and
push
imul
rcrl
test
lods
xor
out
mov
cmpsb
jnp
cmpsl
add
sbb
lds
pandn
add
cltd
xchg
into
and
inc
mov
sti
mov
xchg
fidivrs
mov
dec
pop
lret
rolb
sub
fstl
xor
sti
insb
xchg
xor
shll
cli
dec
xchg
or
data16
pop
inc
lret
dec
lods
lret
imul
das
stos
pop
mov
xor
ficoml
dec
and
jne
mov
inc
jecxz
push
and
rol
inc
and
push
xorl
and
mov
addr16
outsl
add
cmp
push
mov
mov
fwait
add
mov
lret
pushf
pop
dec
pop
shld
mov
lods
pop
in
movntps
int
popf
sub
and
xchg
adc
mov
inc
pusha
es
sti
mov
sub
pop
cmp
jne
loopne
inc
xor
xchg
int3
outsb
add
adc
sbb
or
add
int3
mulb
cld
pop
dec
outsl
dec
sub
push
loopne
mov
fdivs
and
push
popa
enter
jmp
mov
xchg
xor
call
repz
fcoms
subb
jne
and
sarb
or
test
jbe
xchg
scas
sbb
mov
sub
pusha
and
push
adcl
xchg
je
in
adcb
loope
push
xor
leave
mov
or
pusha
and
adc
jle
nop
inc
xchg
sub
imul
insl
bound
out
xorl
push
mov
movsb
inc
jecxz
push
je
sbb
push
mov
cltd
or
ljmp
in
cmp
les
sti
xchg
jmp
fsubs
outsb
popf
iret
leave
mov
add
pop
fildll
std
je
sbb
das
movsl
pusha
ret
jecxz
inc
test
test
in
aaa
xor
mov
sbb
or
mov
cmp
mov
ret
mov
imul
ds
jae
test
fildll
dec
dec
shrb
inc
std
jge
xchg
cli
cmp
jb
add
mov
nop
aam
std
lcall
loop
xchg
pop
fucomi
jge
fiaddl
pop
pop
cli
lods
xchg
pusha
idivl
dec
sahf
js
push
add
mov
cmp
and
cmpsl
popf
vpcmpgtw
repz
test
mov
or
lods
test
and
mov
mov
stos
sbb
xchg
mov
mov
mov
mov
jg
jne
jns
test
adc
jecxz
enter
sbb
push
iret
inc
jno
psrad
subb
mov
int
iret
mov
xorb
outsb
enter
pop
add
je
xor
xchg
rorb
add
sub
jl
cltd
xor
and
lahf
mov
mov
repnz
pushf
pusha
xchg
pop
cmp
cmpsl
add
scas
dec
aaa
push
dec
or
add
fdivs
cmp
jbe
xchg
repz
cs
push
jecxz
popf
movsl
sub
xor
in
push
sub
dec
fldz
stc
outsl
xlat
enter
shrl
mov
mov
ja
into
leave
and
mov
inc
inc
out
sbb
aaa
inc
pop
lods
jp
call
xchg
mov
lods
test
stos
loopne
dec
sbb
incl
shlb
pusha
in
sbb
dec
aad
add
xchg
gs
and
out
cmp
scas
test
and
and
cld
mov
mov
stos
fisubrl
das
in
mov
xor
push
nop
push
ja
xor
add
call
in
jo
imull
fwait
push
mov
push
in
lret
and
sbbb
inc
jnp
test
std
xor
push
aas
lods
dec
rcrb
iret
rcrl
fstl
clc
mov
mov
stos
sub
lods
hlt
fadds
mov
mov
add
ds
icebp
insl
out
loope
push
popf
dec
rol
rcrl
adc
int
icebp
add
jnp
xor
out
jg
into
addr16
sub
inc
in
repz
or
sar
adc
mov
mov
imul
out
add
sbb
inc
jmp
daa
lods
sti
mov
je
xor
outsl
jbe
js
test
and
push
dec
lahf
mov
daa
call
loope
dec
out
popf
sbb
aam
push
pop
pop
daa
push
and
cmp
mov
pop
es
inc
jne
jecxz
rorl
jne
das
mov
or
xor
mov
add
repz
stos
add
movsl
add
pop
stos
fs
nop
std
add
mov
int
stc
lods
outsl
movsl
or
add
out
stc
inc
mov
xor
jne
push
dec
scas
lahf
out
scas
pop
add
into
pop
mov
sbb
outsl
sub
dec
sbb
les
imul
sub
sar
cmpsl
adc
lahf
pop
out
data16
cld
test
jb
pop
mov
sarb
pusha
push
hlt
pop
lock
inc
push
aas
orb
pop
insb
inc
iret
cmp
sti
dec
xchg
sbb
enter
fwait
sti
loope
sbb
sahf
sub
in
test
mov
cld
pop
fcomps
pop
ffree
xor
jnp
or
inc
push
inc
pop
addr16
scas
jo
xchg
fsubrl
adc
jl
cmp
cmpl
lds
imul
inc
shl
add
lods
incb
xchg
sub
ja
xchg
inc
pop
adc
stos
push
imul
sbb
test
ljmp
sti
lods
std
or
xlat
nop
out
mov
mov
jo
or
ret
in
adc
into
dec
sbb
cld
xchg
xchg
sbb
xchg
jbe
mov
ljmp
mov
les
mov
ret
lods
out
cltd
adcl
sbb
add
dec
lcall
jb
ja
sub
adc
and
jnp
les
lock
mov
js
aaa
xlat
in
nop
lahf
fistl
pop
mov
test
fisttpl
and
xchg
arpl
out
adc
jge
outsl
mov
ja
cmp
add
fistps
or
xlat
xlat
mov
mov
pop
sarb
xor
rorl
hlt
add
adc
cmp
sub
in
fsubrs
add
loope
dec
cmp
cmc
add
sarb
jae
repz
mov
imul
sub
mov
aaa
fs
mov
mov
fwait
data16
loop
shlb
jbe
imul
das
fimuls
mov
nop
cmp
fistps
or
push
jbe
scas
push
fidivrl
sti
aaa
int
sub
cmc
xchg
outsb
lcall
ret
hlt
fists
cmp
fisubrl
sbb
pop
jae
insl
pop
gs
fsubrl
pop
pop
insl
mov
test
mov
paddsb
in
mov
sub
popa
lods
dec
out
aas
sub
xchg
dec
ljmp
jecxz
or
imul
adc
pop
push
inc
xor
cmp
mov
inc
mov
jae
xor
sbb
shrb
inc
mov
das
in
mov
jg
out
xchg
outsb
jl
mov
fisubrl
fcmovbe
add
jb
dec
ret
movsl
jle
mov
mov
es
dec
and
dec
mov
test
int3
shll
andb
adc
jg
js
or
push
jae
pushf
xlat
test
pop
pop
jne
sbb
xorb
pushf
jmp
or
imul
es
pop
popa
xrelease
pop
int
decl
xor
jmp
cmpsb
int3
test
pop
mov
inc
call
shll
sub
mov
inc
sub
cmp
sub
mov
hlt
lcall
fdivs
add
cmp
imul
les
xchg
shlb
sbb
roll
roll
sti
mov
fs
adc
and
push
mov
sub
sub
sbb
mov
lods
cmp
dec
sub
adc
bound
jecxz
add
or
or
movsl
cltd
popf
out
std
dec
and
jecxz
sub
adc
mov
lock
pop
pushf
mov
out
mov
mov
std
pop
xor
push
add
decl
mov
inc
xchg
push
fildl
sub
icebp
ds
mov
cltd
adc
and
push
xor
add
and
lds
adc
xchg
xchg
pop
aam
jl
lock
adc
lods
ss
jae
inc
pop
dec
arpl
xor
add
cmp
imull
cmpsl
lods
push
jg
movsl
sub
mov
and
pop
mov
cmpsb
out
cld
ret
stos
std
lahf
cmp
je
lods
std
sbb
inc
cli
mov
jns
adc
mov
sbb
push
jl
or
and
icebp
xchg
cmp
hlt
jnp
and
adc
js
inc
movsb
pop
mov
call
aad
test
xchg
xchg
push
movsb
push
xor
pushf
inc
enter
mov
ficoml
in
sti
out
jge
xchg
mov
out
out
out
es
jae
jmp
lods
or
mov
xchg
mov
jecxz
pop
xchg
pop
push
mov
fidivl
ds
and
and
mov
loop
jp
adc
popa
out
mov
add
dec
push
popa
rol
adc
cmp
fcmovbe
int
jbe
imulb
movsl
leave
jb
push
lods
jno
xor
push
sbb
mov
cmpsb
xchg
add
mov
fdivrs
lret
mov
inc
xchg
pop
adc
in
or
mov
ret
xor
push
into
pushf
aaa
mov
xchg
pop
push
daa
xlat
dec
hlt
sarb
pop
es
dec
hlt
popa
xchg
pop
lret
pop
sahf
fcoml
outsb
jae
mov
lds
das
sub
int
cltd
mov
jp
insb
pop
mov
xor
popa
mov
idiv
imul
sti
pusha
or
out
out
mov
out
mov
ja
sbb
push
bound
xchg
pop
jns
leave
mov
fidivrl
mov
wbinvd
hlt
xchg
jno
test
sbb
dec
mov
ret
pop
pop
gs
movsb
mov
cmp
lahf
out
clc
gs
jae
push
dec
dec
sahf
ja
repz
ss
mov
in
cmp
lock
xchg
clc
mov
mov
push
push
pop
cmc
inc
or
mov
adc
mov
mov
jmp
rol
push
ljmp
inc
mov
test
ljmp
cmp
push
or
enter
xchg
xchg
insl
iret
jl
xor
test
mov
mov
cmpsb
aam
fadd
mov
lods
or
pop
pop
aam
and
cmp
movsl
lock
cmpsl
leave
pop
mov
andl
hlt
icebp
lcall
pop
fldcw
scas
stos
into
daa
dec
cmpsb
inc
mov
sub
and
loopne
pusha
xor
adc
push
mov
out
or
inc
mov
icebp
aad
repz
pop
ret
pusha
push
mov
test
dec
test
add
xor
xor
sbb
and
pop
jmp
or
sub
xorb
or
fisubrs
xlat
xor
out
or
dec
add
xorl
loopne
sarb
mov
or
pusha
sub
inc
dec
xor
push
jp
mov
lcall
mov
mov
or
pusha
sub
inc
dec
xor
push
jp
mov
lcall
mov
and
nop
cli
orb
sbb
push
cmp
xor
push
jnp
mov
fwait
loopne
sarb
mov
or
lret
cmp
cmp
out
test
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
add
xor
add
xorb
shlb
and
jo
pusha
aad
in
cmc
mov
mov
xor
shlb
jne
test
xchg
adc
pusha
aad
in
cmc
mov
mov
xor
sahf
add
loope
shll
add
mov
inc
pop
and
lock
cmpb
lea
cmp
mov
inc
mov
add
gs
nop
stos
inc
fcoms
fldcw
xchg
jno
sub
outsl
and
cmc
push
inc
imul
jp
xchg
data16
andl
mov
mov
sbb
push
mov
iret
sbb
jae
dec
lret
lds
push
sbb
mov
push
jge
loop
xor
iret
add
insl
push
movsb
loopne
mov
mov
jo
cli
lret
and
xor
shlb
jne
test
xchg
adc
pusha
aad
in
cmc
mov
mov
xor
shlb
xor
dec
inc
jne
gs
sub
imul
xchg
out
adc
les
inc
movsl
gs
mov
inc
cmc
aad
mov
pop
xchg
sub
pop
aad
loope
roll
shll
aad
in
cmc
mov
mov
xor
shlb
jne
test
xchg
adc
pusha
aad
in
cmc
mov
mov
xor
shlb
jne
test
fs
add
sub
bound
pop
inc
mov
sbb
inc
lcall
aas
js
imul
and
aam
shrl
inc
sbb
mov
movl
leave
xor
mov
callw
cmpb
xchg
and
stc
pop
rorb
mov
mov
dec
popa
mov
push
adc
sub
sbb
loopne
and
scas
cmc
pop
addr16
xor
xchg
mov
or
push
icebp
jne
pop
fs
xor
xchg
gs
xor
iret
jo
and
xchg
mov
imul
inc
lds
xor
adc
sub
cwtl
subl
loopne
mov
or
les
xchg
mov
int
scas
andb
pop
and
addl
mov
stc
and
cmp
jbe
fs
jmp
fsubrs
iret
push
ds
es
xchg
loop
or
lea
dec
call
push
subl
daa
scas
cmpsl
out
scas
aad
mov
aaa
mov
dec
cmc
fisubs
insl
jg
inc
jne
in
pop
push
testb
sub
andb
call
inc
mov
xor
insb
inc
pinsrw
ret
jmp
add
cmp
stos
scas
jecxz
iret
cmp
adc
cltd
xchg
lock
sahf
add
clc
cltd
jecxz
sub
mov
push
or
sbb
cs
mov
pop
test
or
fcmovne
enter
cmp
leave
sub
pop
xor
dec
out
sbb
cs
or
xlat
sbb
cmc
inc
in
jbe
repz
fldenv
repnz
inc
sbb
and
cmp
xchg
mov
xchg
dec
adc
sbb
xlat
cmp
pop
xchg
mov
push
cmpsl
cmp
xchg
cmp
sbb
mov
dec
pop
sbb
push
popa
pop
mov
shll
dec
or
pop
cmpsb
ret
test
pusha
nop
push
push
adc
loopne
push
push
fistps
test
or
aam
dec
sbb
and
shrb
and
jmp
mov
outsl
ja
xor
push
sub
js
cmc
repnz
push
popf
mov
sub
fcoml
in
fiaddl
cwtl
cwtl
sub
orl
sbbb
dec
mov
or
lods
scas
inc
push
pop
pop
mov
int3
outsl
sub
ds
cltd
in
xorb
inc
mov
test
and
movb
pop
lahf
push
or
xchg
push
popf
sbb
outsb
jno
orb
push
mov
stos
jb
mov
push
jo
and
movsl
ja
arpl
push
js
sbb
sti
sub
scas
popf
shrl
mov
outsl
add
das
sti
mov
xchg
cmp
xchg
out
lods
cmp
or
pop
jne
cmp
jmp
cmp
mov
ja
sbb
pop
pop
test
pop
mov
jp
push
jb
les
imul
inc
sbb
and
aas
imul
xorb
mov
lret
adc
xor
mov
mov
out
cmp
xchg
and
out
jo
out
adc
cmpsl
mov
cli
das
fnstcw
and
clc
orl
push
dec
out
push
adc
sub
cld
ret
repnz
sbb
and
jp
mov
adc
test
hlt
fcmovnbe
push
imul
push
lret
test
jno
ret
andb
nop
in
daa
push
xchg
popa
sbb
push
enter
jg
test
inc
jge
and
adc
push
mov
out
mov
test
adcb
sub
jae
mov
xorb
mov
pop
outsl
test
lahf
cmc
mov
lods
lcall
aad
pop
mov
jge
ret
xor
xor
aam
mov
mov
jmp
mov
movsb
add
add
push
cli
pushl
sub
imul
jecxz
imul
dec
movsb
xchg
test
lea
push
adc
xor
lcall
lret
pop
push
or
imul
sub
int3
push
arpl
into
repz
pushf
sbb
faddl
jle
adc
cmp
movsl
ret
xchg
ret
adc
rcrl
jno
mov
or
pop
mov
sub
mov
lds
pusha
xor
je
and
mov
rcr
push
aad
push
xlat
dec
xchg
scas
xchg
pusha
inc
jns
cwtl
xchg
sti
and
xchg
cli
iret
xor
mov
repz
push
mov
cld
sbb
fistl
add
data16
sbb
inc
mov
push
icebp
jecxz
push
jne
mov
inc
sbb
mov
mov
push
xchg
dec
lcall
push
add
adc
rcll
dec
in
insl
rorb
js
xchg
fwait
jb
pop
imul
cmp
scas
ficoms
mov
test
loopne
push
adc
or
push
popf
mov
in
test
rcll
hlt
add
rolb
sbb
mov
loop
leave
push
inc
sbb
in
pop
sub
mov
or
xor
mov
clc
les
xor
call
add
jl
cld
aam
inc
adc
sahf
movsl
aam
xchg
arpl
das
test
or
clc
push
mov
push
outsl
fisttps
cld
jp
les
das
jg
inc
jns
lods
push
jno
mov
push
js
jp
mov
xor
pop
cmc
stos
leave
mov
jo
mov
mov
test
mov
test
lahf
mov
jo
sub
xchg
insl
test
or
ret
sbb
mov
push
insl
lds
adc
sbb
int3
daa
inc
stos
outsl
cmp
pop
sbb
adc
cmp
cmpsl
std
adc
insl
rcll
test
scas
aam
filds
sub
xor
addl
cld
aas
pop
aad
sahf
jmp
out
loope
push
inc
push
dec
add
test
jmp
mov
add
fisubl
mov
mov
test
jp
or
arpl
pushf
jg
pop
idivl
or
sbbb
push
aas
push
cmp
adc
jle
pop
sub
inc
dec
lret
fcomp
jns
shrl
jge
inc
rorb
stos
out
in
aam
cmp
mov
add
xchg
xchg
push
pushf
adc
arpl
cmpsb
hlt
xchg
dec
adc
add
jo
pop
sub
lahf
and
pop
mov
cs
mov
push
xchg
cmpsl
xchg
sbb
subl
pusha
imul
incb
xchg
outsb
enter
or
aas
repz
mov
cmc
fldenv
push
xor
sub
pop
enter
inc
aas
xchg
mov
psubsb
xor
xchg
xchg
pop
inc
push
int
subb
fwait
pushf
movsb
or
jg
add
xchg
inc
das
neg
imul
mov
mov
es
sub
icebp
outsl
inc
push
hlt
lods
arpl
iret
inc
xchg
into
test
dec
cmp
dec
cmp
push
lret
mov
subb
leave
inc
dec
out
rcll
sbb
cwtl
ja
int3
outsb
pop
xchg
nop
rcll
xor
mov
sbb
movsl
push
xchg
mov
xor
or
aam
sahf
inc
pop
mov
fildll
es
jno
mov
xorb
hlt
mov
into
imul
xlat
sti
stos
loop
adc
xor
inc
lea
mov
push
push
jl
outsl
mov
mov
mov
sbb
xlat
jecxz
lock
cmp
inc
shlb
jno
sbb
xor
int
adc
xchg
fwait
jg
fs
xchg
mov
push
sbb
aas
push
shl
sub
xor
data16
xchg
lds
mov
mov
sahf
dec
mov
dec
clc
outsb
push
mov
outsl
int3
or
ret
enter
fistpl
ficoms
arpl
or
mov
test
adc
clc
je
fldcw
dec
loop
popf
fcmovu
sub
jle
cmpsb
push
xchg
sbb
xlat
push
shrl
lcall
aas
push
rolb
test
pop
or
shrb
and
pop
add
shrb
mov
lds
cmpsb
testb
push
js
inc
push
aam
sub
jmp
lcall
xor
pop
aam
xor
fwait
push
ss
push
sahf
adc
adc
fadd
mov
movl
fadd
dec
lret
cli
add
push
lcall
push
scas
aam
repnz
cmpsb
dec
jge
fwait
insl
inc
cmpsl
and
mov
das
out
mov
jno
sti
add
aaa
mov
ret
xchg
icebp
jnp
push
sub
cmp
leave
push
mov
inc
xchg
inc
adc
stos
push
push
sbb
out
push
xor
cld
into
fs
clc
arpl
push
push
jb
test
lret
hlt
aas
jmp
repz
add
mov
pop
nop
sub
mov
out
test
sub
fcompl
or
xor
add
push
rorb
or
ja
daa
cmp
pop
mov
push
jecxz
mov
push
xor
lcall
xor
in
pop
push
fcoms
fdivrp
inc
sbb
cmp
imul
mov
stos
jecxz
or
adc
sbb
or
push
push
aas
jmp
mov
imul
nop
stos
wrmsr
psrlw
divl
test
xor
aas
jae
pop
cmc
aam
pop
sub
imulb
and
jle
mov
lcall
fdivr
stc
gs
jle
jge
lahf
loopne
xlat
adc
daa
jns
les
pop
aas
mov
cmp
sti
popf
or
sbb
test
js
arpl
jbe
scas
popf
int
adc
adc
mov
imul
fcmovu
insb
jae
xchg
divl
imul
xchg
shlb
hlt
sbb
data16
push
test
test
jg
push
and
fisttps
incl
and
es
enter
or
jg
inc
out
jmp
arpl
pop
sub
pop
jmp
sbbb
jae
cmpsl
stos
sarb
sub
mov
icebp
jns
repnz
rcrl
jne
fsub
in
loop
push
ja
sub
mov
aas
lods
xchg
test
xchg
stos
xor
test
ss
xchg
dec
hlt
pop
cld
push
out
les
nop
mov
clc
pop
pop
sahf
repz
mov
std
movsb
push
stos
stos
iret
jne
jns
daa
faddl
in
popa
stos
outsb
fisttpl
in
lcall
push
cmp
fldln2
push
xchg
adc
jg
lea
shrl
call
int3
mov
ss
mov
in
xor
jge
stos
ret
enter
call
pop
sahf
xlat
nop
ret
dec
push
cmp
ds
inc
repnz
fs
adc
aas
repz
inc
cwtl
sbb
pop
mov
shll
outsb
mov
push
call
lret
sbb
cmp
or
adc
jbe
pop
adc
in
lret
movsb
stos
xchg
pusha
movsb
rolb
adc
repz
lods
mov
jbe
jle
xor
mov
insb
pop
mov
and
mov
push
mov
pop
outsb
xchg
sti
cltd
xor
test
adc
mov
pop
sar
push
test
mov
sbb
sub
rcrl
imul
dec
add
leave
insl
mov
ja
add
xchg
jae
lret
adc
pusha
and
xchg
fadd
bound
pop
out
add
aad
data16
or
bound
xchg
mov
pushf
pop
jecxz
xchg
hlt
push
inc
gs
jns
ror
xchg
sub
mov
pop
loopne
shlb
add
pop
push
insb
cmp
mov
stc
or
pop
inc
cmp
lods
cmp
mov
imulb
or
jecxz
dec
and
inc
inc
repnz
mov
add
outsl
sub
pop
cs
cltd
xorl
push
mov
loopne
test
jnp
ds
insl
addl
enter
jp
sub
pushf
jecxz
mov
push
jmp
xorb
insl
pop
pop
movsl
inc
or
add
lods
test
mov
push
repnz
sahf
sub
dec
cld
pop
xchg
jno
in
std
inc
inc
add
mov
sub
repz
adc
dec
nop
imul
in
subb
and
xlat
xchg
xchg
cmp
or
inc
sub
mov
subl
nop
adc
xor
movsb
jo
mov
setno
jae
xchg
push
inc
jbe
scas
push
adc
test
clc
and
dec
aam
push
or
loope
insl
outsb
addr16
jno
mov
mov
filds
mov
loopne
aas
dec
cld
loopne
xchg
and
aad
pop
mov
stos
lods
pop
mov
out
adc
xchg
push
jmp
jl
dec
cwtl
cmp
imul
in
popa
sbbl
out
mov
sbb
push
fcoms
out
xor
call
insb
fwait
daa
ljmp
pop
xchg
int
jb
lock
pop
lret
mov
mov
sbb
jns
jae
hlt
daa
mov
jmp
push
sub
aad
cmpsl
repz
push
aad
popl
dec
popf
fucomip
mov
and
mov
xchg
cwtl
ret
dec
loopne
fdivp
dec
or
and
in
cld
inc
or
push
mov
lahf
cli
xchg
mov
xchg
fcomp
or
lcall
shrl
shll
fiadds
lcall
pop
xchg
loope
outsb
mov
jl
repnz
inc
inc
jge
push
adcb
add
mov
push
mov
xchg
lret
gs
sub
out
ja
or
mov
js
jge
out
push
clc
mov
xchg
cmpsb
push
add
or
push
mov
lea
cmc
jmp
add
gs
fildll
repnz
in
sub
inc
and
inc
xchg
ja
popf
popa
mov
in
adc
int
test
outsb
mov
aad
push
dec
imul
xor
fcomp
lds
fsub
lcall
movsb
lcall
cmp
in
hlt
push
cmp
out
jmp
ss
int3
roll
sahf
int3
daa
cmp
pop
mov
push
push
lods
ret
jne
push
js
xchg
xchg
sub
outsl
mov
lret
jmp
xor
rorl
add
into
cmp
mov
mov
jb
add
fsts
mov
add
pop
inc
movsl
sub
loop
dec
pop
cmpb
mov
test
addr16
push
daa
test
push
cmp
push
dec
in
inc
pop
add
loop
fs
addb
imul
jmp
and
pop
enter
pushf
lcall
inc
sahf
inc
shll
pop
pop
pop
mov
cmp
adc
movsl
imul
test
in
and
mov
xchg
cmpsb
ja
outsb
sbb
addr16
clc
fldcw
mov
js
sbb
int
loope
out
sbb
sub
dec
mov
paddusb
jb
jae
xchg
fdivr
pop
push
push
inc
sbb
sbb
cmp
stc
adc
fldenv
mov
mov
mov
cld
push
fwait
movsl
xor
aam
and
jg
or
xor
idivb
mov
push
xor
adc
movsl
jp
cmp
jl
and
xchg
dec
adc
shll
mov
test
xor
jb
cmp
out
test
loope
aaa
pop
test
jo
rcr
mov
or
fcompl
xchg
adc
sbb
mov
lock
out
xlat
xchg
pusha
add
mov
jnp
loopne
jo
inc
sti
xor
cmp
push
imul
insl
nop
jno
ret
push
lea
jno
mov
test
in
mov
imul
sub
addr16
mov
pop
popl
fisttpl
sub
add
push
scas
lret
insb
add
mov
mov
outsb
adc
mov
lods
adcb
das
ja
fsubrl
dec
in
cmp
stc
mov
enter
sbb
pusha
out
into
sub
sub
pop
dec
cmpsb
repz
inc
int
icebp
cltd
subl
sub
or
call
adc
pop
ficomps
inc
mov
sete
adc
jb
aas
fstpl
scas
in
fidivs
prefetch
lea
dec
imul
into
in
adc
mov
jl
sbb
mov
dec
aas
pop
adc
insb
aad
xchg
inc
jl
or
pop
lret
das
mov
add
sub
fs
xor
mov
cwtl
jg
jge
nop
push
mov
test
imul
test
scas
clc
inc
cmp
mov
aad
push
push
mov
mov
push
movl
mov
push
adcl
sbb
or
mov
in
sub
repz
inc
leave
sub
stos
xor
xlat
in
scas
ss
pop
in
and
mov
sub
push
fmull
ljmp
push
push
fwait
or
shll
dec
push
out
iret
xchg
gs
xor
jle
lret
out
sub
xchg
test
subb
ljmp
cmp
int3
and
sbb
iret
and
cltd
test
fwait
xchg
mov
mov
data16
div
add
pop
add
orb
repz
lret
repnz
repz
scas
fnsave
adc
sub
jecxz
cmp
mov
xor
rclb
or
pop
xchg
xchg
in
arpl
push
jmp
add
negb
cmp
or
mov
mov
ret
adc
cmpsb
fadds
es
test
jecxz
push
out
pop
add
jl
sbb
sub
or
lock
in
xor
out
inc
jne
movsl
andl
push
sub
mov
jl
int
mov
jae
iret
lret
xchg
xchg
mov
aad
jmp
dec
push
mov
cli
inc
mov
shlb
inc
add
or
mov
add
scas
out
mov
adc
stc
xor
ljmp
popf
add
jbe
rcrb
cs
cld
cmpsb
lret
mov
repnz
psubw
pop
add
sbb
mov
loope
push
xrelease
inc
xor
xlat
bound
lcall
push
sub
fistpl
cwtl
add
xchg
out
sub
pop
loop
jp
dec
mov
xchg
xchg
push
cmp
daa
scas
test
dec
popa
jle
cmp
filds
orl
jg
std
aad
scas
and
jg
sbbl
sub
cmpb
or
inc
xchg
sahf
xchg
ss
add
mov
nop
aam
lahf
adc
lods
faddl
fsubs
xchg
cli
shll
sbbl
mov
fildll
sbb
or
jno
adc
fsubrs
or
jg
and
mov
mov
jno
daa
xor
fildll
lret
nop
or
dec
jmp
add
add
call
sbb
test
add
xor
inc
push
jle
cmp
insl
and
dec
dec
xor
in
cmp
cmp
jl
mov
xchg
and
mov
dec
xlat
add
inc
mov
call
adc
jmp
pop
push
test
gs
pop
cmp
sub
mov
xchg
fdivl
scas
cmp
enter
sbb
add
inc
pushf
dec
movsl
jbe
movsl
and
sarb
test
inc
popf
negl
testl
inc
inc
dec
mov
in
and
cld
pop
and
push
sub
andl
aaa
pop
inc
cmp
out
sub
pop
fidivrs
mov
fs
mov
inc
notl
aam
sti
cmp
cmp
mov
iret
cmp
dec
lods
outsb
jg
or
mov
xor
stos
xchg
cmpsb
push
loop
push
cmpsb
aas
push
push
fstpt
xorl
mov
hlt
subb
adc
imul
ds
repnz
mov
rcrl
xchg
cmp
mov
xor
pop
fcmovnbe
lret
pusha
pop
mov
ret
mov
add
dec
clc
push
popa
mov
outsl
scas
insl
xchg
fisubs
outsb
mov
loope
inc
push
mov
cmp
push
cmp
mov
pop
mov
out
cli
or
or
arpl
shr
lods
iret
adc
mov
mov
lds
push
in
cmc
mov
mov
xor
shlb
jne
test
xchg
adc
pusha
aad
in
cmc
mov
mov
xor
shlb
jne
andl
mov
lds
push
in
cmc
mov
mov
xor
shlb
jne
test
xchg
adc
pusha
push
push
gs
or
and
push
mov
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fnstcw
jmp
jnp
push
xor
jns
push
xchg
cmp
leave
push
stc
gs
adc
pop
dec
aad
lds
or
movsl
sub
stc
jge
insb
cltd
sbb
or
pop
es
adc
les
dec
repz
mov
inc
lods
cmp
adc
int3
mov
push
hlt
cmp
pop
lock
mov
push
sbb
movsl
in
push
mov
mov
inc
scas
push
mov
xchg
xchg
cmc
out
or
outsb
movsl
movsb
clc
mov
pushf
adc
push
cld
adc
pop
inc
sbb
jo
xchg
je
pop
pop
sub
xchg
gs
aad
jge
lret
int3
sub
dec
push
das
sbb
es
mov
lcall
cmp
xor
dec
pop
aad
mov
negb
imul
bound
xor
test
roll
test
jl
test
inc
stc
jne
outsl
cltd
add
test
int
cld
imul
cmp
mov
je
push
sti
jnp
dec
stos
pop
pop
lods
sub
jns
adc
pop
movsl
outsl
fdivrs
test
jbe
daa
roll
cmp
sbb
mull
push
leave
pop
sarb
test
aad
mov
pop
lds
jns
imul
cmp
leave
push
stc
gs
adc
pop
lds
jns
imul
cmp
in
shlb
data16
and
shll
xor
xlat
cmpsl
imul
fcomps
and
das
pop
cmp
inc
lret
and
ds
mov
fadds
and
popf
jns
sub
mov
test
mul
cmc
lcall
shll
pop
and
icebp
movsl
sar
jle
or
je
mov
rcll
push
sbb
rorl
loopne
out
or
xchg
jae
and
jbe
int
hlt
and
in
pop
mov
xor
andb
dec
in
add
lret
fldl
and
icebp
es
in
fidivrl
inc
jmp
add
xor
lea
mov
adc
repnz
mov
or
sahf
xlat
cmp
mov
inc
push
xchg
mov
test
das
sarb
inc
not
and
jno
pop
jle
or
jno
fs
xchg
xchg
and
add
inc
ljmp
pop
shr
jge
loope
testl
cli
jg
xorb
sub
mov
push
jb
fmull
es
push
fcomps
cmp
and
sbb
cmp
insb
add
icebp
cmpsb
mov
jge
sub
in
test
or
xchg
imul
inc
rcrb
push
pshufw
iret
xor
loop
cmp
insl
xchg
mov
dec
shrb
js
out
xlat
pop
pop
xchg
add
jnp
nop
shrb
mov
iret
dec
stc
xchg
xchg
jns
cmp
sbb
dec
movsl
sub
shl
hlt
bound
scas
dec
andl
lods
pop
in
aas
gs
fistl
dec
pop
xchg
in
lea
push
jmp
mov
addl
xor
imul
xchg
jmp
divl
aas
cmpsl
mov
cmc
jmp
mov
cmp
jmp
adc
jb
data16
xchg
mov
pop
ds
mov
clc
mov
xchg
cmpl
sub
pop
notb
pushf
pop
and
enter
mov
xor
pop
ss
mov
lahf
xchg
movsb
xchg
dec
jp
fwait
loope
fdivr
in
daa
mov
sub
inc
mov
jae
cmp
xchg
add
leave
pop
fisttpl
shll
int3
push
pop
xchg
dec
pop
loopne
out
aam
mov
ret
sub
push
mov
out
mov
divl
xchg
xchg
call
sub
sub
cmp
push
sbb
frstor
sub
push
add
test
push
push
push
jmp
iret
mov
add
push
cs
xor
sub
ret
std
pushf
push
adc
and
les
into
mov
sub
add
dec
cmp
add
dec
cmp
stc
movsl
jno
inc
sbb
insb
inc
and
mov
lahf
add
das
mov
pop
lahf
mov
pop
push
inc
xchg
mov
or
pop
shrl
inc
pop
push
pop
fiaddl
fsub
jnp
ja
push
out
mov
movsl
sbb
notl
push
add
add
cltd
or
fwait
mov
xchg
pop
or
pusha
or
int
mov
in
ss
scas
jne
add
test
dec
push
add
popa
test
cld
pop
sbb
loopne
mov
push
ret
sarl
jge
scas
movsl
mov
clc
ja
and
jns
cmp
mov
xchg
add
jns
shlb
and
popa
out
mov
int3
loop
push
insb
mov
iret
adc
xchg
push
pop
sub
and
add
rolb
or
mov
jle
sbb
sti
adc
cltd
mov
stos
and
icebp
orl
into
lods
mov
test
adc
cmp
loopne
sbb
add
popf
rorl
jle
stos
loop
sub
movsb
sbb
pop
ret
fcmove
dec
mov
ja
inc
bound
icebp
push
das
add
cmp
push
push
cltd
cltd
ret
adc
mov
daa
sub
push
lds
ret
fwait
dec
in
inc
jbe
adc
sub
jecxz
imul
pop
inc
in
mov
and
ds
fs
jecxz
and
xchg
iret
cmp
push
sti
loop
adc
lret
int3
push
fld
jb
mov
jno
xor
daa
adc
pop
insl
sub
push
gs
mov
pop
mov
rorb
sub
shll
xchg
or
cld
mov
dec
cltd
test
icebp
pusha
mov
das
adc
fbstp
std
outsl
sbb
movsl
cmp
xor
adc
pop
mov
xor
data16
fxch
hlt
inc
sbb
xlat
and
fldl2e
pop
iret
pop
iret
sti
fisubrl
call
sbb
add
xchg
pop
icebp
xchg
dec
lret
push
cli
enter
cmp
mov
push
sub
sti
mov
mov
adc
shll
and
scas
mov
xor
push
push
mov
adcb
repz
xor
and
jne
fadds
lret
dec
add
pop
push
cmp
test
in
sub
arpl
pop
jbe
addr16
addr16
stos
dec
jno
push
out
push
pop
out
inc
addr16
pop
xor
and
fldcw
ret
sbb
cmpsl
pop
outsl
movsl
inc
add
fdivp
xor
cmc
and
mov
mov
and
dec
aad
mov
stos
ja
nop
popa
or
and
sub
xchg
enter
scas
jmp
cltd
jns
xchg
xor
adc
pop
int
repz
cmp
sub
xchg
lea
in
xor
pop
clc
mov
das
adcb
sbb
aas
sahf
sub
jmp
dec
xor
cmp
jns
addr16
daa
cmc
jmp
dec
xchg
adc
test
fnstcw
or
jno
and
rcll
mov
shll
mov
stos
inc
sbb
insl
xchg
lock
test
mov
dec
lcall
adc
pop
fisubs
xchg
lods
scas
pop
rolb
xchg
sbb
call
std
sbb
xchg
fdivs
mov
ret
es
jl
pop
out
test
pushf
adc
mov
mov
push
out
inc
jl
cmpsl
in
dec
jmp
add
mov
mul
mov
sub
shlb
andb
adcl
sarb
jns
adc
sub
ds
xor
push
sbb
or
sbbb
mov
mov
or
gs
jge
and
push
sub
add
add
and
xchg
xor
push
sbb
push
sbb
ja
xchg
and
iret
xchg
xor
stos
mov
neg
shr
pop
xchg
xor
pop
fsubs
mov
in
ds
mov
popa
xor
xchg
pop
cmpl
cmpb
inc
stos
mov
xor
lds
lret
loop
mov
ret
ds
mov
ret
pop
rol
xchg
loop
iret
movsb
in
outsl
fildl
dec
pop
cmpsl
push
adc
xchg
fnsetpm(287
sub
push
sbb
jae
lods
or
fiadds
lods
mov
test
jne
fs
lods
sub
sahf
cwtl
pop
enter
mov
je
and
jne
pusha
cmp
ret
mov
clc
jl
push
imul
xor
pop
es
and
push
or
ret
xchg
addr16
scas
push
insb
mov
shlb
mov
xchg
pushf
xor
inc
repnz
sahf
fmul
dec
pop
sub
cltd
jle
sbb
ret
ret
lea
int
push
xchg
jae
cmp
cmp
daa
sub
jge
pop
sub
pusha
clc
lahf
and
or
or
xorl
test
cltd
lret
inc
test
aam
outsb
data16
in
push
inc
or
dec
sbb
mov
mov
mov
nop
daa
mov
xchg
mov
imul
xchg
dec
adc
lret
and
mov
dec
cmp
rcrb
loope
mov
aas
xchg
inc
mov
push
into
inc
hlt
push
bound
jle
jbe
and
xchg
hlt
into
andl
stc
movsl
lcall
push
sbb
or
lahf
sub
les
inc
mov
mov
push
cld
jbe
push
pop
gs
rclb
add
rcll
fs
mov
mov
jg
sbb
xchg
pop
or
push
xor
test
adc
cli
out
shrb
dec
inc
mov
out
out
xchg
pop
flds
or
pushf
nop
bound
mov
test
loopne
mov
adc
nop
pop
jbe
ss
mov
cmc
jns
idivb
nop
inc
mov
or
test
inc
movsl
mov
xor
jl
add
jge
repnz
stos
sahf
cld
lret
rorb
lea
and
sub
int3
xchg
mov
jge
rcr
and
jne
xchg
repnz
in
daa
sub
mov
mov
jmp
dec
popa
xchg
les
ret
adc
mov
cmp
cld
push
cmp
dec
clc
jle
sti
xor
xor
fsubrs
sbb
fidivrl
ss
jp
and
xorb
gs
in
mov
sub
pop
outsl
or
orb
cmp
cs
cmp
popf
lock
mov
xor
insb
outsb
movsl
sbb
sbb
xlat
and
cmc
lahf
cmp
sbb
mov
cmp
mov
sti
mov
out
or
and
ljmp
and
in
sbb
lahf
mov
mov
in
stos
mov
inc
mov
push
add
sub
in
movsb
xor
cwtl
push
xchg
lods
pusha
xor
fsubl
pop
xorl
cwtl
xbegin
push
add
mov
movsb
and
faddp
add
dec
dec
cmp
fs
jns
sub
ljmp
iret
les
mov
mov
int
in
sbb
mov
sbb
nop
jb
dec
mov
xor
inc
jecxz
sub
dec
les
cmp
and
cmpl
pop
nop
push
mov
loope
xchg
push
jmp
test
leave
dec
enter
das
adc
inc
add
cmpsl
insb
jge
push
sbb
mov
out
outsl
or
mov
cmpsl
xor
ret
xchg
icebp
lcall
sbb
lret
inc
shrb
movsl
mov
xor
fdivrl
or
sub
sub
stc
mov
xchg
cltd
push
xor
lahf
cli
lods
cmp
test
fadds
repnz
jne
adc
cmp
call
and
sbb
and
ss
xor
loopne
cmp
les
pop
sub
xor
push
dec
add
repz
cmp
repz
not
or
repz
out
lock
dec
pusha
dec
pusha
movsb
push
icebp
fldt
stos
lds
push
cmp
adc
data16
lods
jg
jecxz
int
rcr
xor
mov
sbb
stc
insl
push
outsb
std
loopne
jmp
lret
mov
roll
xor
sub
clc
icebp
repnz
adc
imul
test
gs
mov
jp
mull
repnz
xchg
insl
sub
jnp
icebp
sub
enter
cmpb
lret
insb
cmpsb
mov
faddp
push
data16
scas
jp
out
sbb
pop
and
push
jmp
push
in
jno
test
inc
push
dec
cmpb
jns
int3
jmp
call
insl
cmp
loop
and
loopne
popa
roll
inc
push
cmp
roll
test
test
hlt
mov
loope
pop
mov
adc
mov
push
addb
sahf
xchg
push
lock
jne
test
xchg
lret
mov
mov
nop
ljmp
out
mov
inc
and
dec
cwtl
in
jno
sarl
inc
xor
sub
push
jmp
jle
dec
bound
inc
rcll
ret
sub
cmp
or
sub
insb
ret
adc
cld
sbb
sbb
mov
dec
addl
mov
mov
pop
cmp
xchg
in
ret
sarb
jnp
iret
or
stc
popf
dec
mov
mov
addb
inc
lock
ficomps
dec
jp
adc
or
cmc
loope
sti
sub
dec
iret
and
mov
fsubs
mov
aaa
ss
mov
push
sbb
pop
les
sub
or
push
dec
imul
jns
or
xchg
jecxz
leave
or
dec
rolb
lahf
inc
and
xchg
fiaddl
ljmp
cmp
jns
cmp
sbb
jecxz
rorb
leave
adc
or
push
jno
inc
mov
add
add
jae
pop
lods
sbb
inc
cmc
fwait
sahf
adc
and
push
xchg
ljmp
pop
push
sti
and
repnz
adc
sbb
je
mov
dec
cli
add
mov
aad
adc
push
dec
pop
fmulp
jecxz
xchg
jo
xor
jecxz
into
in
ss
mov
imul
pop
cmp
hlt
fdivrs
mov
and
sub
mov
leave
jl
push
js
imul
cmp
in
or
push
jno
repz
and
sbb
pop
loope
mov
xchg
pop
in
push
shll
je
aam
xchg
inc
popl
sbb
ljmp
out
or
sbb
and
popf
mov
jl
xor
or
or
and
repz
fwait
aaa
add
nop
lret
test
xchg
or
push
jbe
test
inc
ss
mov
subl
fxch
dec
fsubrp
xchg
cltd
pop
add
mov
mov
int3
xor
pop
enter
mov
arpl
call
add
shr
imul
dec
call
xchg
xor
ds
jbe
push
stc
adc
xchg
inc
xchg
orl
sbb
xchg
mov
pop
xlat
push
dec
test
aaa
jnp
nop
mov
aaa
xchg
js
push
push
leave
shll
sub
jns
xor
push
jnp
les
jno
push
sbb
fsqrt
adc
mov
int3
in
xchg
stos
fwait
les
mov
sub
bnd
dec
sub
imull
movsb
push
and
add
ljmp
push
push
mov
pop
xchg
xchg
push
je
or
scas
inc
rorl
dec
sbb
mov
repnz
sub
fildll
je
insl
je
mov
es
jecxz
test
shlb
loope
in
dec
xchg
adc
dec
leave
mov
fsubs
int
sbb
jo
repnz
lea
jne
andb
xor
jle
sub
mov
test
out
pop
lock
dec
sub
cmc
cltd
push
cmpsb
mov
push
pop
sbb
dec
sete
or
adc
inc
jle
jnp
adc
fdivrs
add
adc
scas
sub
push
push
inc
mov
mov
pop
mov
xchg
insb
daa
jecxz
fisttps
cwtl
or
pop
mov
adc
sub
imul
rcrl
in
rcrl
subb
push
mov
lahf
add
nop
xchg
or
xchg
push
xchg
xchg
loop
movsb
cmp
jp
add
cltd
and
mov
cmpsl
push
ret
and
sbb
jne
sbb
shlb
inc
adc
je
lret
inc
ret
sbb
repz
cmc
sbb
lret
inc
inc
jbe
xor
js
push
ljmp
pop
insl
cmpsl
nop
push
orb
out
cmpsb
ljmp
pop
aas
pushf
out
and
test
call
push
mov
jmp
mov
shlb
mov
pop
loopne
xor
push
std
xchg
pop
sbbl
shlb
mov
iret
mov
iret
pop
lahf
adc
mov
jecxz
adc
in
shll
cwtl
test
or
popf
and
data16
shrb
in
sbb
jge
insl
shld
xor
xchg
fiaddl
cmpl
xor
aam
stos
cs
xor
mov
cli
stos
inc
fistpll
mov
dec
lret
pop
les
cmp
call
mov
add
sbb
mov
jbe
popa
xor
jle
es
loopne
das
imul
dec
aas
push
mov
imul
test
pop
xor
jl
mov
lds
cli
xchg
push
add
and
or
cld
sub
sti
push
rorl
test
sub
or
sub
ss
out
sbbl
shlb
pop
bound
mov
scas
xchg
xchg
ss
ss
loop
jmp
cmp
popa
jmp
std
movsl
add
cwtl
add
add
add
lock
sbb
aad
insl
cmp
mov
or
es
push
inc
mov
pop
insl
js
or
jecxz
dec
fs
inc
mov
cwtl
daa
fst
rorl
xor
cmp
fcoml
popa
fwait
mov
cwtl
xchg
les
or
test
hlt
sbb
fldl
push
mov
mov
sbb
lods
and
icebp
pop
mov
push
es
ret
ret
lahf
fnstcw
out
popf
cmp
xchg
or
popf
xchg
cmp
jo
adc
jne
test
xchg
mov
out
enter
push
or
lods
dec
push
mov
jg
jp
aad
or
call
dec
mov
sahf
or
or
xchg
mov
xchg
inc
outsl
int
xor
test
add
mov
int
xchg
rorb
mov
fldt
mov
mov
adc
in
jno
aas
dec
cltd
or
stc
add
mov
xchg
ja
and
jg
cmp
dec
add
push
pop
add
cmpsb
loop
ffree
add
inc
fcomip
inc
or
inc
int3
jb
data16
and
inc
pop
adc
or
mov
inc
lret
inc
leave
add
xor
and
repz
pop
outsb
aam
sub
mov
mov
mov
imul
dec
fisubl
dec
daa
mov
negb
mov
in
push
pop
scas
lods
movsl
add
outsb
cmp
mov
push
test
bound
out
sub
inc
xchg
xchg
fstpt
xor
inc
out
xor
lock
test
add
aam
or
adc
mov
push
insb
outsb
sbb
lock
aas
mov
xorl
andl
mov
or
outsb
add
push
fisttpll
movsl
call
jecxz
imul
or
stos
icebp
mov
mov
shl
clc
sub
call
and
in
xchg
mov
and
xchg
push
dec
jbe
loop
lret
mov
and
xchg
or
dec
in
push
and
out
xor
pop
scas
push
das
sti
insb
sub
mov
mov
lea
mov
nop
pop
ficoml
test
pop
mov
jecxz
sbb
and
js
pop
int3
loopne
mov
movsl
fstpt
mov
int
xlat
mov
sub
arpl
sbb
inc
les
neg
lds
aaa
fwait
roll
and
push
pushf
hlt
aaa
push
pop
fwait
cmp
sub
ret
loop
mov
cmp
mov
cs
add
jno
mov
repz
ret
push
xchg
inc
in
mov
sub
sbb
mov
icebp
xlat
add
dec
imul
add
dec
mov
adc
push
movsb
push
pop
and
push
pop
test
xchg
aad
pop
mov
cmp
in
ss
xor
aas
pop
add
in
adc
out
cltd
cmpsb
cs
cmp
daa
mov
cmp
lahf
jnp
xor
fcoml
cmp
les
sbb
and
dec
push
testl
lret
mov
push
ljmp
cmp
jno
inc
nop
out
sub
in
in
sub
mov
or
mov
int3
test
clc
iret
jns
fistpll
add
shrb
jp
jg
sbb
inc
mov
repz
sbb
dec
sbb
in
out
sar
add
lahf
push
lock
mov
mov
mov
cltd
inc
lock
and
outsb
mov
push
clc
mov
jne
add
test
aad
in
cmc
sbb
sub
stc
gs
adc
pop
lds
jns
imul
cmp
dec
push
jns
jmp
adc
pop
lds
jns
imul
cmp
push
stc
gs
adc
pop
lds
shl
imul
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
push
mov
mov
push
mov
dec
ret
fnstcw
and
jae
arpl
push
cmc
inc
jno
add
adcl
jecxz
shll
xchg
xor
add
push
in
lods
mov
mov
dec
repz
ret
icebp
xor
bound
cmp
dec
ljmp
inc
out
pop
dec
dec
rcl
mov
ljmp
jae
fsub
sbb
loopne
sub
repz
fucomi
leave
arpl
fdivl
push
pop
sub
stos
cmc
push
sbb
jmp
inc
scas
inc
stc
xor
jge
push
xchg
ret
test
lds
arpl
imulb
sarb
inc
loop
mov
test
xor
lds
ljmp
push
test
mov
push
outsl
mov
loopne
nop
and
arpl
ss
cs
fcmovnb
stos
repnz
sub
and
push
pop
jae
xor
push
out
dec
mov
mov
mov
cmp
ret
push
xor
and
adc
arpl
push
in
jl
ja
inc
xchg
pop
cmpl
sub
xchg
dec
and
jbe
ja
xor
or
inc
testb
and
bnd
pop
mov
frstor
sbb
movsb
sub
imull
push
loope
out
fldl
jne
gs
xchg
xor
add
jae
arpl
push
in
adc
xchg
and
jecxz
shll
xchg
xor
add
jae
arpl
push
in
adc
jle
inc
lcall
scas
enter
fs
cmp
xor
pop
jecxz
test
jge
mov
push
and
sbb
jg
pop
aas
pop
int3
push
std
xchg
inc
scas
push
movsb
subl
xchg
pop
pop
jecxz
and
add
sbb
arpl
movsb
and
test
lock
rclb
cmpsl
pop
dec
clc
push
test
xor
adc
sahf
jo
cld
push
dec
jbe
data16
rcr
inc
mov
jno
push
das
aas
aam
stos
les
add
out
ljmp
insb
roll
out
gs
pop
addl
clc
cmp
lds
arpl
enter
adc
jecxz
pop
stos
test
jno
cwtl
popa
out
lahf
mov
rcr
xchg
rcrb
imulb
or
sbb
jo
cmp
xchg
jae
ret
inc
sti
pusha
push
push
cmp
cmp
sub
jno
out
jl
sub
mov
cmpsb
adc
inc
cmc
sahf
test
fstpt
mov
jns
insb
test
into
ror
lods
cmpsl
pop
inc
imull
dec
push
fwait
sti
jnp
test
push
es
out
mov
pushf
int
mov
mov
stos
jp
cmp
out
push
cld
test
jle
mov
cwtl
push
mov
push
jb
dec
mov
jae
lcall
aad
xlat
test
push
xchg
scas
mov
je
ror
imul
dec
cmc
test
stc
loope
cld
jle
cmp
jl
ds
cld
and
lret
sarl
dec
fsubl
call
stc
fwait
cmp
das
loope
sub
or
push
repz
push
nop
jo
bound
xor
cmp
outsl
mov
push
dec
call
pop
aam
mov
inc
int
push
pop
mov
dec
pop
dec
popf
movsb
je
dec
dec
pop
cmp
pop
cmp
jmp
xchg
sub
mov
dec
adc
iret
dec
cmp
inc
and
andl
mov
repnz
out
push
loope
add
stos
andl
add
push
popl
pop
jne
jg
mov
jns
sub
loope
outsb
inc
in
xchg
cmpsb
les
mov
dec
xor
adc
or
fiaddl
push
cmp
mov
dec
and
loop
out
mov
iret
dec
xchg
xchg
mov
in
jecxz
jae
test
test
dec
jecxz
cmpb
bound
das
xchg
je
inc
iret
inc
adc
addr16
ret
scas
mov
ror
shlb
jecxz
xchg
out
sbb
dec
xchg
scas
outsl
inc
sarl
fmuls
or
lds
or
xor
push
mov
fwait
rorl
sub
fnsave
add
ret
pushf
pop
sbb
dec
pushf
scas
test
cmp
pop
inc
es
lds
fisttps
pop
pop
mov
imul
pop
pop
bound
ds
lds
loopne
in
and
outsb
outsl
push
push
add
mov
inc
arpl
pop
jno
mov
sub
inc
cmpsl
cld
mov
cmp
inc
pop
cmpsl
fildll
adc
js
mov
xchg
mov
enter
push
or
je
adc
fmul
clc
mov
inc
sbb
addr16
loop
or
pusha
jnp
cmp
test
mov
in
cmp
jb
add
cmpsb
cmp
mov
out
dec
jns
insb
jle
inc
cwtl
mov
add
outsb
stc
xor
pop
or
lret
sub
mov
inc
dec
mov
adc
xor
push
mov
and
int
and
clc
jne
arpl
ficompl
iret
add
icebp
jecxz
in
pop
pusha
or
pusha
js
aaa
xlat
pop
into
xor
imul
sub
jb
cwtl
std
push
add
mov
push
xchg
and
call
iret
push
repnz
and
mov
in
jnp
rorb
dec
lea
lcall
lret
pop
xor
xchg
pop
dec
cld
je
sbb
adc
outsb
sub
jmp
ja
and
xchg
or
jmp
sbb
sbb
loopnew
std
cmpsb
mov
fbld
fucomp
daa
cmp
repz
popf
mov
mov
int3
mov
push
scas
sub
or
in
cmp
sbb
js
pushf
xor
mov
test
ret
out
imull
hlt
adc
movsb
sbb
cmc
lods
add
push
shll
push
icebp
dec
xchg
aam
xchg
in
jg
sub
or
mov
mov
lret
inc
dec
mov
push
xor
mov
xor
xor
dec
test
dec
pop
nop
outsl
dec
cmpsl
int
sbb
movsl
sahf
clc
int
mov
pop
adc
mov
dec
xor
or
dec
movb
gs
mov
test
repz
clc
js
mov
jmp
cmp
in
pop
rcrb
icebp
mov
pop
mov
into
jg
stc
mov
insb
xchg
imull
inc
int
mov
dec
and
push
cltd
and
or
jno
rcr
std
mov
std
jle
inc
and
out
daa
lods
aas
je
imul
in
cld
jmp
aad
adcb
cmpsb
mov
fs
out
dec
mov
repz
repz
pop
mov
loop
cmp
xchg
mov
shrb
push
in
push
xor
lahf
shlb
pop
stc
xchg
shrb
push
cmp
adc
mov
and
ret
in
mov
and
arpl
mov
sub
add
lods
bnd
js
dec
out
sub
push
or
jae
mov
aad
mov
jg
sbb
xchg
sbb
push
movsb
daa
nop
lcall
xchg
push
xor
sbb
lcallw
in
subb
rorl
cmp
jp
push
lret
cmp
cwtl
mov
sbb
fmul
add
xor
pop
inc
jo
pop
ret
xchg
push
enter
jae
pop
pop
sysret
inc
test
jp
scas
sub
arpl
jae
pop
pop
les
movsl
inc
inc
enter
sbbl
xor
popa
sarl
mov
push
lods
inc
pop
sahf
movsb
pop
mov
movsb
pop
cmp
inc
mov
mov
int
je
loop
sub
push
cmp
popf
imulb
fprem1
pop
bound
lahf
inc
push
push
dec
int
lea
sub
dec
and
push
ret
mov
push
setge
enter
cmp
mov
repnz
add
test
icebp
pop
add
pop
aas
jbe
mov
lds
dec
stos
sub
jns
cltd
filds
xchg
adc
rcrb
cltd
pop
addr16
mov
xor
repz
mov
cs
mov
and
sub
sub
push
dec
push
mov
and
mov
or
xchg
sub
sahf
popf
int
frstor
mov
xor
cmp
push
les
cmp
add
ret
inc
jmp
mov
jo
pop
jg
ss
inc
sahf
jl
jecxz
aam
filds
push
ja
adc
stos
arpl
pop
lcall
out
sub
movsl
pop
cwtl
inc
jnp
lods
int3
lret
imul
jl
fiadds
call
enter
xchg
lret
sub
lahf
push
int3
mov
sbb
adcb
fs
lds
cmp
mov
cs
decl
jae
outsb
dec
pop
int
aam
fidivl
adc
shlb
fmul
dec
sbb
mov
add
adc
scas
mov
cmpl
shrb
jmp
sti
mov
ljmp
mov
dec
pop
mov
adc
cltd
cmp
imul
mov
pop
mov
and
test
sarl
nop
pop
pusha
clc
daa
jle
pop
stos
movsb
mov
pop
cmp
pop
ss
andb
divl
call
inc
lds
mov
inc
jge
repnz
jg
push
cli
ss
mov
xchg
mov
and
enter
repz
ret
adc
xchg
dec
aaa
cmp
cwtl
rcll
or
fildll
mov
outsl
popa
pop
movsl
mov
das
int3
adc
jl
xor
jnp
or
not
mov
xchg
jne
push
dec
push
sbb
cmp
pop
xor
mov
lods
imul
push
sub
into
mov
and
jnp
push
lret
std
mov
mov
rep
movsl
ds
fwait
enter
cmp
and
lods
inc
inc
jne
fdivl
jne
loopne
ja
mov
push
push
fs
jge
fcom
xchg
hlt
stc
pushf
bound
aad
bound
dec
rcll
dec
outsb
mov
xchg
sahf
out
movsb
sahf
sti
arpl
int
sbb
xchg
pop
or
roll
aaa
pusha
es
inc
popl
xchg
mov
mov
jp
in
and
pop
in
push
mov
cmp
push
iret
call
lods
mov
test
and
pop
mov
mov
sbb
and
jecxz
aas
fistpll
sub
mov
sahf
add
pusha
push
orb
mov
sarl
mov
xchg
decb
mov
xor
jmp
xchg
ficoms
sbb
sub
outsl
fnstsw
xor
jmp
mov
stc
popa
shlb
mov
mov
xchg
in
jge
gs
inc
in
mov
popf
outsl
push
pop
push
jmp
mov
push
in
stc
xlat
jo
stos
pop
insb
or
nop
popa
ret
subb
nop
mov
subl
inc
cmp
test
cmpb
or
add
or
pop
sub
in
test
jp
stos
fsubr
outsl
mov
add
imul
aaa
xor
cmp
stos
loopne
and
pop
jg
insb
mov
sub
mov
jo
out
fs
je
mov
pop
jecxz
push
movsb
cltd
loopne
arpl
pop
dec
push
outsl
fdivr
lret
mov
cmpsb
test
mov
cld
enter
aad
jae,pt
jno
outsl
test
xchg
loopne
push
pop
data16
sbb
dec
out
daa
mov
add
dec
cmp
imul
mov
arpl
push
add
mov
or
jecxz
das
ffree
outsl
mov
jge
dec
lock
sub
enter
xchg
or
sub
adc
out
mov
xchg
mov
cli
test
xchg
mov
pushf
into
jp
sbb
mov
cmc
and
jg
push
inc
sub
imulb
mov
inc
test
sbb
daa
out
push
addr16
or
dec
mov
push
inc
sub
js
in
inc
jnp
cli
gs
call
mov
lds
push
out
mov
add
inc
adc
mov
rclb
out
in
jmp
shrb
mov
or
push
jecxz
jge
xor
lock
xchg
stos
cmpsb
pushf
mov
fdivrl
mov
mov
dec
xchg
mov
bswap
cmp
int3
dec
mov
jo
std
add
adc
mov
addb
xchg
jb
sti
mov
and
cmpsl
out
sbb
push
mov
fidivs
push
shrb
jp
cld
insb
mov
addr16
inc
out
sahf
icebp
in
mov
popf
and
js
mov
daa
sbb
sub
fldt
mov
xor
cwtl
mov
xor
repz
test
xchg
mov
rorl
roll
pop
mov
lods
sub
into
push
sbb
push
and
or
les
movsb
adc
aas
jp
scas
pop
mov
das
mov
shll
cmp
gs
sbb
hlt
cmp
push
push
out
inc
testb
mov
pop
adc
leave
insb
sbb
dec
cmpsb
sub
enter
pop
daa
int3
xchg
mov
push
and
mov
push
filds
cltd
mov
nop
loop
fsubrs
outsb
in
out
mov
int
or
jne
jge
add
or
xor
sub
jb
ja
push
push
cmpsl
jo
out
pop
lcall
add
adc
push
test
scas
ds
aaa
sahf
sti
jnp
mov
cmp
push
cmp
inc
loop
jle
outsl
pop
mov
lods
ret
dec
insl
jno
push
sbbb
dec
lds
mov
cs
dec
rolb
les
inc
add
xor
push
je
js
movsl
rorl
xchg
or
test
jnp
cmp
dec
mov
ret
outsb
pop
sub
iret
scas
cmp
into
mov
out
jle
add
divl
pop
xchg
test
adc
cmpsb
jmp
fidivs
movsl
or
inc
cmp
push
add
cmp
ljmp
shlb
out
iret
data16
call
rcll
adc
sahf
pop
or
lret
in
insb
rorl
stos
out
adc
notl
aam
mov
leave
sbbb
pop
add
stos
xor
mov
and
leave
and
adc
xor
jecxz
add
inc
mov
push
mov
xor
int3
addr16
cli
into
ret
pop
xor
cmp
xor
mov
pop
fs
cmp
or
fstpt
gs
gs
cmp
cmp
int
sub
iret
sti
mov
repz
mov
jns
cwtl
insl
jecxz
dec
or
negl
jbe
scas
gs
cwtl
int3
jno
popa
adc
fwait
mov
pop
cwtl
mov
or
inc
aaa
mov
in
sar
add
hlt
mov
push
test
sbb
sbb
pop
add
out
xchg
aad
imul
mov
pop
pop
les
dec
cmp
mov
jmp
pushf
mov
inc
push
push
sub
cmpsl
sarb
push
jnp
repz
addr16
mov
xchg
loopne
ror
sbb
mov
jg
loopne
pop
jbe
cmp
repz
ljmp
mov
sub
push
std
out
mov
push
je
cmpsb
lock
cmp
push
jne
imul
push
fadds
xchg
stos
cmp
imul
scas
cmpsl
into
add
iret
loope
adcl
jno
mov
add
aam
imul
cs
push
sbb
xchg
jl
out
mov
int
cmp
fcomp
xchg
push
sub
jecxz
into
popa
jp
mov
movsb
imul
xor
mov
inc
popf
stos
fmuls
icebp
cmp
in
xchg
xlat
lock
adc
inc
add
out
jbe
or
popf
popf
cmp
aad
pop
push
sahf
xchg
pop
ds
aam
movsb
jb
sub
sbb
ret
mov
scas
es
cmp
and
into
jle
mov
adc
mov
mov
pusha
dec
sub
test
lds
lds
pop
jo
dec
jae
adcl
adc
pop
pusha
das
imul
jle
add
stos
dec
cmp
repz
xchg
aam
icebp
daa
xor
xlat
mov
js
pop
jecxz
dec
mov
xor
test
loopne
mov
and
or
sbb
ja
mov
pop
pop
scas
aam
inc
aas
nop
jmp
and
push
jecxz
dec
roll
daa
pop
loopne
mov
xchg
jg
rcpps
out
xchg
inc
aaa
pop
vpunpcklwd
and
jno
pop
inc
xchg
test
sbb
sbb
mov
xorb
fwait
sbb
sahf
lcall
imul
je
add
das
scas
mov
jmp
sbb
clc
jae
sbb
out
push
outsb
repz
mov
icebp
mov
popf
inc
mov
cmp
arpl
aad
pushf
mul
fistps
jo
cmp
clc
addl
jge
roll
push
jp
jmp
in
dec
in
aam
int3
jne
sub
imul
mov
cmp
cmp
sbb
push
lcall
cmc
inc
icebp
in
xor
lea
sbb
call
dec
mov
aad
cmpsl
int
pusha
jmp
in
icebp
insb
jno
aam
mov
sti
loopne
fsubrp
lods
xchg
and
xchg
cmpsb
out
add
cmc
sbb
sbb
cs
rorl
pop
push
sub
sbb
sti
rcrb
jae
mul
in
or
mov
xor
in
mov
lret
and
das
cmpb
pop
mov
shll
nop
and
sbb
pop
xor
lods
jo
push
push
ss
mov
jno
lretw
cmp
cmpsl
sbb
push
inc
jae
xor
sbb
sbb
cmp
or
sar
pop
jbe
and
sbb
add
inc
inc
adc
jmp
test
ret
adc
imul
or
jle
or
lods
rorl
cmpsl
cwtl
adc
inc
cmp
je
sbb
jl
cmc
fildl
pushf
adcl
outsb
rcr
lret
sbb
fnstsw
add
inc
test
sbb
push
iret
jne
inc
pop
lret
imul
add
add
mov
test
pusha
loope
sub
sub
popf
cmp
xchg
add
or
lahf
insl
push
pushl
aam
pop
mov
shlb
xchg
xchg
int
movsl
inc
pop
adc
lahf
xor
fidivs
leave
icebp
jae
add
ljmp
movsb
jmp
inc
pop
mov
xlat
inc
repnz
adc
ja
jbe
mov
sti
jne
fcompl
sub
xor
pop
out
sub
incb
sbb
push
aad
add
push
into
outsl
incl
inc
push
addr16
outsb
cld
mov
or
out
mov
sahf
pop
das
fiadds
aas
and
fmul
test
daa
pop
leave
movsl
push
arpl
pop
push
rcl
push
mov
inc
mov
push
xchg
push
mov
pop
dec
sbb
xchg
lea
ss
dec
or
mov
mov
jle
dec
push
mov
xchg
cmp
jbe
sbb
pop
bound
sbb
clc
movsb
data16
enter
and
and
and
insl
jne
and
jno
add
loope
mov
inc
dec
mov
cwtl
int
repnz
pop
push
outsb
stc
add
sbb
lods
dec
mov
cmc
xchg
and
das
dec
prefetchwt1
clc
das
loop
pop
out
lahf
push
mov
lcall
push
or
jb
ret
fildll
lock
sub
mov
pmulhuw
insl
sbb
addb
push
push
int
clc
jp
in
mov
dec
lods
pop
mov
call
in
popf
push
xor
jg
pop
dec
xchg
sbb
fs
mov
dec
lcall
mov
mov
pop
xchg
dec
xchg
call
test
fwait
lret
lock
aas
out
sar
mov
pop
mov
fcomps
xor
fmulp
std
fildll
push
inc
xchg
dec
jecxz
cltd
repnz
xchg
sbb
shlb
enter
jecxz
test
jecxz
mov
inc
and
int
sub
dec
jbe
cmp
data16
lcall
aaa
shll
mov
push
jmp
xor
jns
and
mov
jno
orb
or
outsb
in
add
in
outsl
mov
mov
push
mov
or
hlt
stc
movsb
sbb
aad
aad
dec
sub
inc
in
aaa
insb
insb
xlat
ja
cli
add
push
fdivrl
daa
jo,pt
pop
push
jmp
inc
dec
movsl
in
aam
fsubrs
stos
or
jl
aas
out
mov
sub
nop
repnz
or
inc
jb
push
ja
xchg
xlat
push
push
sub
es
mov
mov
and
mov
push
fcomps
ljmp
outsb
loopne
dec
jnp
shrl
and
adc
inc
bound
mov
pushf
shl
xchg
inc
and
in
sub
mov
or
dec
stos
cltd
pop
jne
insb
and
mov
int3
icebp
sub
dec
rcrl
add
inc
sub
lret
add
xchg
xchg
cmp
jecxz
sub
sbb
mov
and
xor
push
dec
mov
out
je
aaa
jnp
mov
jg
pop
lods
mov
add
mov
sub
push
push
mov
aas
jne
jp
clc
int
adc
xor
mov
jg
loope
fcmovne
insl
or
or
inc
sub
sbb
mov
aaa
jl
jbe
loope
adcl
sbb
sbb
pop
cmc
rcr
daa
cmpsl
jb
icebp
out
out
push
scas
aam
jns
lods
xor
sbb
inc
jb
lock
scas
cmpsl
mov
cmpsl
sbb
xchg
test
inc
or
test
add
int
repnz
push
repz
jecxz
shll
xchg
xor
add
jae
arpl
push
in
adc
xchg
and
jecxz
shll
xchg
xor
add
jae
arpl
push
in
adc
xchg
and
jecxz
shll
and
movsl
add
jae
arpl
push
or
mov
push
repz
jecxz
shl
ret
xchg
xor
pop
adc
pushf
or
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sbb
jno
inc
fs
sbb
insl
adc
dec
adc
in
xchg
mov
movsb
xchg
pop
popa
inc
jno
inc
fs
adc
add
xor
and
test
icebp
fcmovb
in
xchg
loopne
mov
movsb
xchg
mov
jno
inc
mov
xor
add
adc
loope
rclb
out
in
ret
in
out
sub
adc
fwait
inc
fidivs
add
adc
or
dec
sub
icebp
jle
push
pop
popa
adc
sub
faddl
mov
push
icebp
cmp
or
pinsrw
adc
rolb
mov
xchg
in
pushf
insb
jne
inc
ficompl
xchg
loope
lock
sbb
imul
inc
or
pop
adc
cmp
or
adc
or
icebp
rcrl
push
sbb
pop
xchg
shll
movsb
pop
jmp
xchg
jo
insb
adc
xchg
in
ds
repnz
shll
cmp
inc
pop
cltd
outsb
cld
mov
sub
cmp
cmc
mov
adc
mov
addr16
inc
jno
inc
or
and
xor
pushf
adc
loope
icebp
sub
cli
shl
mov
rcl
popa
xor
xor
or
jp
jno
daa
fs
gs
test
movsb
xchg
test
shl
hlt
push
or
scas
xor
gs
push
push
aas
in
test
and
loope
shl
lds
and
add
and
xor
and
aam
icebp
hlt
shl
xchg
mov
movsb
xchg
push
popa
inc
jno
inc
fs
adc
add
xor
and
aam
icebp
hlt
shl
xchg
mov
movsb
xchg
push
popa
sbbb
cmp
adc
mov
fmul
push
jg
test
lds
push
cmp
mov
fdivs
add
mov
mov
adc
cs
mov
out
push
dec
mov
repz
sbb
out
inc
inc
jbe
add
jae
stc
push
pushf
outsb
or
or
sub
in
xchg
dec
and
in
xlat
dec
mov
arpl
dec
test
pushf
dec
push
in
xor
sub
push
ret
sub
xor
aaa
mov
sbb
incb
test
xor
sub
jae
stos
arpl
je
aas
xor
clc
or
addr16
out
lret
add
mov
movl
jl
cwtl
incl
xchg
test
push
fdivrp
mov
add
push
xor
jns
jne
lahf
push
cs
cwtl
in
xchg
mov
sub
shll
enter
clc
and
dec
cmpl
dec
outsb
stos
sbb
lods
out
xor
imul
outsl
inc
pop
clc
movsl
mov
pop
outsb
sbb
and
cmpsl
out
subl
push
inc
clc
jg
inc
jb
pushf
or
dec
mov
imul
push
xchg
xor
push
std
or
cmp
arpl
clc
lret
sub
sub
mov
call
push
add
out
test
mov
mov
mov
or
int3
pushf
rolb
gs
ficompl
push
xor
pextrw
adc
mov
mov
hlt
push
adc
dec
cmc
int3
inc
xlat
cmp
sbb
and
lcall
sbb
mov
icebp
inc
lret
dec
aas
test
out
mov
pop
xor
jae
dec
push
mov
sbb
xchg
ja
std
push
xor
jbe
xor
mov
mov
jp
pop
jmp
cwtl
sub
and
out
mov
jmp
mov
outsb
insl
push
inc
push
rol
mov
out
xlat
pop
mov
insb
push
adc
jp
jl
mov
cmp
mov
cmp
insb
push
in
jecxz
xchg
aas
and
mov
mov
sub
dec
xchg
loop
inc
pop
sbb
push
mov
push
or
cmpsb
push
push
je
pushf
mov
ror
xchg
cmp
add
push
and
pushf
cmpb
jl
ljmp
cltd
hlt
cmp
sbb
push
xor
leave
nop
cmp
mov
mov
mov
clc
inc
loope
lea
push
popf
lea
pop
sbb
mov
cmpsb
mov
jmp
mov
xor
stos
call
pop
outsl
movsl
cmp
inc
and
xchg
mov
inc
jb
aas
cmp
push
out
lret
pop
sbb
cld
sub
enter
push
or
mov
cmp
mov
adc
jbe
ret
add
or
shll
nop
xchg
outsl
jge
jns
ss
imul
mov
dec
inc
decl
clc
push
pop
adc
jp
test
xor
cwtl
sbb
cli
inc
lret
cwtl
mov
sbb
movhps
fs
mov
add
cmc
mov
sub
in
test
mov
mov
mov
mov
jp
data16
mov
stos
sarb
mov
sub
cmpsl
cmc
repz
in
in
cmp
movsb
cld
aam
lds
xor
dec
ss
pop
jnp
push
adc
xchg
jnp
sub
loope
popf
or
mov
sbb
sub
clc
mov
imul
cmp
imul
xor
icebp
adcl
cmp
xchg
inc
shll
and
mov
popa
sahf
lea
jl
sub
xor
idivl
and
xchg
mov
inc
repnz
or
leave
sub
mov
popa
ljmp
test
test
xchg
and
mov
sbb
sahf
lods
and
xchg
xchg
leave
ror
pushf
cmp
or
xor
push
addr16
mov
cs
pop
repnz
mov
mov
pop
sub
hlt
mov
push
mov
bound
or
fiaddl
jne
shlb
incl
sahf
pop
call
ljmp
add
testb
dec
adcb
push
or
mov
and
rorb
in
mov
or
scas
pop
sbb
adc
and
push
in
xchg
mov
movsl
inc
sub
push
je
pop
lret
cmpsb
jae
hlt
out
stos
inc
scas
pop
push
inc
aam
xchg
incl
fidivrs
call
stc
jno
mov
imul
cmp
les
jmp
pop
ret
std
shll
mov
cs
mov
jecxz
hlt
pushf
lods
scas
rclb
push
rcrl
aam
dec
xor
or
pop
add
push
insl
mov
jg
dec
gs
ret
inc
or
push
sub
pop
adc
in
xor
push
out
jp
jecxz
pop
adc
dec
dec
testb
add
or
add
or
pushf
cmc
pop
cld
ja
pop
sub
test
stc
sub
jns
jle
data16
sub
xorl
jno
mov
sbb
sbb
shlb
push
xchg
inc
mov
mov
cmp
or
mov
mov
push
xchg
cmpsb
sbb
add
adc
iret
or
jns
sbb
push
inc
inc
and
je
jnp
jno
loop
shrl
gs
loope
icebp
and
and
sti
xchg
inc
sbb
cmp
icebp
outsb
fadds
mov
ljmp
fdiv
imul
mov
lods
add
xor
jl
negl
je
lahf
sub
pusha
outsb
daa
adc
repz
sahf
fadds
scas
xor
lods
daa
hlt
mov
aaa
push
xchg
ret
and
orl
fnstcw
xor
pmaxub
push
outsl
and
or
mov
mov
lods
insb
loop
sub
jne
testl
in
jb
ljmp
push
stos
jbe
lcall
lods
push
mov
dec
inc
sahf
pop
sub
mov
sub
rorl
aas
sub
fcmovnb
insb
pop
adc
adc
dec
dec
adc
inc
arpl
sarl
bound
mov
cmp
addl
push
dec
push
pop
jae
scas
and
data16
mov
pop
imul
ljmp
popf
rorl
cmp
xor
jno
mov
add
mov
mov
dec
js
cmp
push
jp
imul
rorl
push
and
imul
lcall
aad
jnp
popl
pop
ss
stos
testb
push
dec
push
lds
mov
es
push
adc
dec
jmp
jns
adc
call
das
and
sub
lds
push
jns
pop
adc
aam
or
hlt
adc
out
mov
inc
cs
dec
aam
inc
xchg
add
xor
outsl
push
sahf
cmc
xor
dec
cmp
test
outsl
mov
cli
outsb
insb
push
push
jae
push
dec
cmp
out
stos
fidivl
mov
dec
in
fs
pushf
sub
mov
mov
sbb
rolb
xor
mov
rolb
mov
pop
fdivl
flds
push
pop
dec
addl
jbe
imul
shl
cs
ss
je
push
jge
add
jns
inc
sub
and
xor
test
xchg
push
push
iret
out
xchg
dec
insb
repz
jns
inc
sbb
pusha
sbb
aas
pop
add
xchg
into
shll
push
adc
js
cmp
hlt
mov
cmp
cmpsl
sub
lods
jge
xchg
pushf
shrb
pmovmskb
cmpsl
sahf
outsb
mov
loopne
fiaddl
pushf
mov
sahf
gs
fcoml
stos
or
sub
mov
or
mov
sub
ret
pusha
adc
jmp
pop
movsl
enter
nop
push
or
das
rorb
inc
es
shlb
sub
jns
pushl
xchg
imul
dec
mov
dec
mov
or
imul
xchg
adc
cwtl
jo
dec
lret
movsb
aad
xchg
lret
mov
inc
adc
push
mov
xor
aaa
jmp
sub
cld
dec
cwtl
lods
int3
add
pop
stos
pop
bnd
dec
pop
sti
mov
lret
xchg
adc
jl
adc
mov
dec
xchg
sbb
js
sahf
push
xor
sbb
sbb
add
inc
cs
ds
ficoms
into
out
fidivrs
push
imul
popa
cmp
jae
mov
inc
or
fstl
mov
ficompl
push
and
adc
mov
xor
in
iret
clc
fwait
jl
cmpsl
pop
cmpsb
inc
fwait
jno
adcb
jl
ret
and
xor
js
repnz
sahf
in
sbb
jae
out
jp
ss
add
mov
loope
out
fwait
or
push
dec
addl
xorb
sub
pop
xor
mov
das
sub
popf
fucomip
push
sti
add
dec
into
mov
sarb
dec
mov
mov
scas
xchg
pop
out
dec
popa
gs
mov
pop
adc
push
xor
gs
std
mov
xor
adc
or
rclb
xchg
pop
sub
in
je
sbb
dec
rol
outsl
jp
inc
xor
jle
cmp
xor
sti
cmp
hlt
popf
sbb
and
out
mov
mov
hlt
pusha
jp,pt
test
out
das
sub
int
das
mov
inc
pop
test
data16
mov
nop
xchg
cmpb
inc
sbb
push
out
pop
cmp
roll
in
xlat
xchg
mov
mov
inc
sbb
leave
test
xchg
setns
cmp
shrl
fst
icebp
mov
shrl
stc
fistpl
jmp
push
push
xorb
orb
adc
cwtl
push
xchg
or
or
test
dec
or
push
cld
inc
add
mov
es
test
sbbb
andl
push
mov
lock
lds
fdivr
int3
fdivp
adc
pop
jbe
rcr
insl
push
push
movsl
std
jno
jl
and
out
lods
xchg
xchg
test
xchg
sub
cmp
in
sbb
mov
and
sub
adc
repnz
inc
int3
cld
shrl
data16
or
jno
int3
int3
ja
xor
sbb
xor
mov
cmp
jne
push
lret
pop
rcrl
mov
pop
out
adc
popw
popf
mov
fiadds
cs
xadd
int
inc
repnz
je
lret
add
cmp
cmpsb
out
jecxz
pop
icebp
add
mov
push
int3
push
sub
jns
adc
lds
dec
and
lret
or
test
mov
in
cmp
push
mov
push
subl
mov
adc
lcall
aaa
arpl
xlat
shl
jge
addb
scas
and
movsb
adc
inc
fldt
insl
leave
mov
data16
lock
gs
adc
or
stc
sub
xchg
or
push
and
pop
aas
aaa
jp
xor
daa
stos
mov
call
cs
in
xchg
xchg
call
xor
stos
imul
jo
fldpi
inc
jl
adc
cwtl
ljmp
dec
repnz
subb
daa
xlat
sub
mov
xlat
mov
and
and
repnz
sahf
cmp
loope
cli
jo
xlat
and
push
inc
gs
dec
jp
shlb
lcall
mov
cmc
pop
outsb
or
cwtl
mov
ret
adc
sub
and
jae
pop
pop
data16
xchg
call
adc
popf
out
or
push
and
add
dec
ret
cmp
pop
mov
add
jne
and
inc
cmp
ja
adc
cmpsl
cmc
mov
xchg
or
bound
mov
mov
or
jne
rclb
arpl
ret
subl
adc
mov
or
dec
out
ret
xor
xchg
add
int3
and
lea
mov
inc
sub
sbb
mov
daa
mov
pusha
jle
or
push
pop
push
add
push
sbb
xchg
xorl
pop
inc
jae
dec
mov
pop
loopne
loopne
repz
jmp
ja
loopne
dec
pop
cmp
jl
hlt
sbb
mov
cmp
pop
push
shrl
in
sbb
int
cmpsl
sbb
pop
in
cli
add
and
cmp
pop
aas
pushf
or
loope
mov
fdivl
in
push
cmp
mov
lahf
pop
rolb
insb
out
mov
jns
sbb
push
bound
mov
or
daa
data16
jp
sahf
mov
inc
xchg
in
cwtl
or
adc
or
cli
imul
sbb
fsts
divb
std
mov
pop
adc
daa
cmpsl
mov
sub
xchg
arpl
lret
jmp
std
mov
jmp
sub
and
out
sbb
mov
ds
out
sahf
and
pushf
push
repz
mov
repz
lahf
inc
sti
hlt
aad
iret
or
mov
dec
jl
into
mov
shrb
mov
inc
mov
push
sub
sahf
not
aam
cmp
or
cmp
clc
dec
dec
xchg
mov
dec
out
mov
popa
shll
data16
push
out
adc
mov
mov
lock
mov
call
mov
mov
aam
in
mov
mov
jns
jmp
pushf
xchg
and
fsub
dec
cli
sti
add
jae
jne
dec
mov
mov
sub
sti
cld
push
repz
out
inc
inc
xchg
ficompl
jle
pop
xor
dec
ljmp
mov
enter
cs
sbb
lahf
aaa
mov
out
sub
jge
push
out
mov
pop
in
xor
out
inc
xchg
jo
cltd
push
ss
jecxz
movsl
sti
call
faddl
scas
mov
imul
jae
sbb
cwtl
push
adc
push
adc
lock
mov
add
sbb
cmpsl
cwtl
lds
or
insb
inc
bound
mov
cmp
lods
mov
xchg
clc
scas
pushf
rclb
pop
cmp
jp
orl
nop
dec
shll
xlat
dec
inc
int
insl
scas
fisubrl
xor
cltd
pusha
shlb
or
mov
js
jmp
out
dec
je
in
mov
xchg
cmpsl
xor
push
xchg
inc
lock
xchg
pop
call
lock
stos
test
out
add
xlat
jno
lret
rclb
je
outsl
addr16
add
pop
xor
lock
sbb
pop
pusha
cltd
pop
aam
jecxz
xchg
rcll
mov
jmp
shrb
out
push
bound
sub
jecxz
sbb
addr16
les
jo
jno
pushf
insl
imul
ret
dec
movsb
insl
std
insl
xchg
hlt
clc
push
stos
and
mov
pop
and
outsb
shl
mov
mov
or
movsl
dec
dec
xchg
push
loope
push
sahf
stos
and
pop
js
sub
std
repz
ffreep
mov
or
or
loop
lea
dec
dec
jnp,pn
inc
jle
daa
out
sbb
dec
mov
mov
addb
sub
lret
ljmp
sub
add
pop
sbb
mov
js
pop
shr
sbb
pop
xchg
shrl
or
mov
orb
repnz
loop
xor
adc
push
in
push
cwtl
mov
push
outsb
loop
inc
push
orl
adc
pop
pop
cmp
xchg
inc
pop
sti
cmp
add
inc
sbb
jb
ss
cmp
mov
lock
ret
push
jbe
dec
ja
bound
lret
loope
icebp
repz
mov
fsubr
dec
pop
mov
js
movsb
inc
mov
push
andb
js,pn
into
jmp
push
fs
int3
push
pop
mov
mov
sub
fwait
ljmp
lea
push
lret
pop
sbb
fbld
jmp
dec
je
push
fsts
mov
jg
dec
push
cmp
outsb
dec
leave
ljmp
or
add
cwtl
cmpsl
jns
arpl
push
fs
xchg
aad
mov
hlt
imul
lock
adc
je
enter
popf
js
or
sub
xor
mov
das
mov
testl
dec
mov
sub
sbb
cltd
cld
cmpsb
xor
jae
test
dec
sbb
mov
cmp
xchg
rcll
xchg
lret
insb
xchg
sub
sub
jbe
pushf
jl
xchg
jno
lods
sbb
adc
outsb
xorl
adc
adc
mov
aam
jmp
inc
mov
lock
mov
cmpl
cmpsb
addr16
mov
xchg
sbb
xorb
xor
add
loopne
mov
inc
outsl
xchg
xlat
loope
pusha
xlat
mov
dec
mov
mov
add
inc
repnz
adc
or
dec
add
adc
push
or
nop
cmp
out
outsl
pop
mov
pushf
test
out
push
or
mov
push
cli
mov
icebp
loope
imul
xchg
aaa
dec
imul
mov
push
cwtl
sbb
adcb
push
cli
jp
fnstenv
xor
lea
cmpsl
outsb
and
jmp
or
cmp
xchg
cmp
sbb
subb
divl
fs
outsl
dec
push
ljmp
out
cli
flds
loopne
mov
lret
sub
cs
dec
aam
jl
outsl
mov
push
lahf
sub
fcom
mov
mov
outsl
std
mov
sbb
and
pop
cmp
mov
and
scas
sti
popf
xchg
push
das
xor
xchg
scas
sbb
jae
bound
dec
lret
push
pop
imul
insl
mov
shl
pop
das
inc
xlat
push
push
lea
jp
call
mov
out
cmp
sbb
fxch
nop
lock
xchg
jne
pop
adc
imul
push
cmpsl
shlb
shrl
aaa
scas
dec
mov
lcall
movsb
xor
jmp
xchg
ss
dec
mov
insb
subb
fwait
cld
das
or
cwtl
in
jbe
js
jae
mov
lock
sbb
test
xchg
mov
aas
orl
sbb
addr16
mov
mov
push
jno
repz
jle
mov
mov
xor
xchg
lret
sub
mov
xor
xchg
xchg
inc
fwait
or
cmp
les
or
std
jnp
xchg
mov
ret
lock
push
pushf
xor
adc
mov
and
rcr
mov
jno
pop
fimull
in
fdivrl
pop
sub
pop
cmp
int3
sub
xchg
test
cmp
xchg
ret
loop
jmp
mulb
leave
xor
daa
push
movsl
addr16
xchg
stc
shrb
lret
js
inc
lock
mov
into
rcrl
rolb
popf
pop
rolb
fisttps
mov
pop
inc
ret
repnz
jmp
std
call
insb
es
outsb
cmp
es
fst
aad
flds
and
sahf
pop
xchg
or
jecxz
js
or
xor
in
movsb
push
adc
and
jl
cwtl
xor
mov
sahf
sbb
jns
test
inc
fidivrl
jecxz
jmp
push
cmp
pop
jecxz
xchg
cmp
dec
xchg
inc
xchg
mov
add
push
mov
mov
movsb
fcoms
clc
int
dec
push
cltd
ret
mov
enter
sahf
xchg
adc
in
leave
inc
mov
mov
mov
pop
fisttpl
fs
dec
xor
push
pop
push
or
ljmp
sbb
out
push
lret
fcompl
repz
push
ds
das
cmp
gs
addr16
gs
mov
in
jae
repnz
cmp
stos
xor
add
xchg
add
out
pop
add
mov
repz
mov
arpl
add
cli
ds
and
test
enter
ret
jp
xlat
clc
lods
dec
subl
aam
jnp
popa
adcb
loop,pn
popf
inc
popf
dec
mov
stos
ret
cld
mov
outsb
sbb
xor
out
imul
ret
lds
inc
adc
adc
add
mov
mov
or
repz
push
sub
int3
and
add
dec
bound
mov
jno
inc
js
adc
add
xor
and
aam
icebp
hlt
shl
xchg
mov
movsb
xchg
push
popa
inc
jno
inc
fs
adc
add
xor
and
aam
icebp
hlt
shl
xchg
mov
movsb
xchg
push
popa
inc
jno
inc
fs
adc
add
icebp
std
shl
xchg
mov
xchg
xchg
dec
popa
push
push
adc
adc
xor
movsb
rcl
loope
pop
pop
shl
jecxz
or
dec
jle
outsb
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
