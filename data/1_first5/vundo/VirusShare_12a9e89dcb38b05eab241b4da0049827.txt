pop
outsl
adc
sbb
addl
popf
negb
aam
add
push
push
push
hlt
mov
mov
cwtl
mov
mov
adc
mov
and
inc
dec
xchg
sbb
or
cmpsb
insb
sub
dec
hlt
aad
inc
scas
fisubrs
imul
push
xchg
jp
sub
xor
cltd
jl
and
int
sub
push
add
test
cld
cmp
lea
mov
imul
int
iret
call
jmp
cltd
inc
ljmp
sub
mov
jl
dec
or
xor
mov
nop
mov
mov
mov
fwait
sbb
mov
mov
rcrb
mov
cmp
adc
test
mov
push
outsb
sub
jae
test
jno
stos
iret
mov
mov
inc
dec
lret
mov
loope
push
mov
jge
xchg
pop
mov
dec
rcr
adc
test
cmp
pop
imul
test
jge
jo
dec
mov
inc
addr16
jecxz
push
lcall
add
mov
or
ret
cs
pop
sub
jae
incb
loopne
popf
push
adc
xor
cmp
fisttpll
int
inc
int
pop
or
inc
iret
xchg
in
aad
je
loopne
gs
jne
loopne
jno
cmp
sub
dec
aaa
pop
mov
enter
mov
imul
xorps
pop
enter
mov
pop
aam
movsl
test
push
ljmp
xchg
xor
jg
bound
mov
and
and
xchg
aad
jge
xchg
mov
movsl
pop
xor
test
jge
mov
test
cmp
adc
popf
add
lcall
loop
mov
div
shll
sub
pop
mov
adc
or
xchg
into
aas
mov
mov
jmp
xchg
or
insb
push
xor
aam
stos
pop
adc
aas
adc
stos
xchg
add
ficoml
jle
push
cld
or
mov
daa
into
xor
les
incl
or
sub
insb
xchg
bound
adc
test
sub
ret
dec
xchg
pop
cmc
sti
mov
adc
mov
stos
lcall
sti
mov
das
xor
xor
lds
loopne
mov
mov
int3
pop
jl
mov
es
fwait
nop
imul
push
or
das
ljmp
insb
mov
cld
push
idivb
and
leave
push
jg
push
test
fisubl
test
mov
loop
mov
cmp
sti
xchg
test
lret
ja
pop
insl
fldl2t
jmp
or
xchg
cld
ficompl
sbb
mov
rcll
push
adc
ds
fisubs
mov
sub
adc
outsb
iret
scas
sbb
xor
pop
mov
push
mov
js
test
push
pop
ret
iret
cmpsl
mov
mov
cmp
mov
and
nop
pop
add
nop
mov
xor
push
lds
sbb
scas
lock
and
outsl
lret
or
adcb
xchg
sub
sbb
cmp
testb
cmp
lcall
push
jmp
fdivrl
out
xchg
sub
leave
cmpsb
sti
mov
pop
sbb
push
mov
inc
popf
add
stos
push
xor
pop
fisubl
pop
iret
sub
inc
adc
pop
jp
ret
std
or
clc
mov
adc
xlat
cmp
inc
sarl
mov
out
sbb
jbe
call
pop
pop
mov
lret
loopew
fnsave
in
pop
leave
repnz
dec
mov
jne
sub
cmp
push
xlat
sbb
dec
pushf
mov
fidivrl
shrl
cs
arpl
inc
cmp
dec
xor
out
sti
in
pop
fisttpl
xor
gs
inc
dec
test
cwtl
les
lret
lret
push
mov
fstpl
pop
adc
pop
or
test
mov
xchg
stos
sbb
push
xchg
push
cld
repnz
xor
rcll
lods
stc
xchg
popf
sub
sbb
pop
incb
xchg
or
pop
adc
test
push
scas
aas
inc
xor
div
mov
addr16
or
cmpsb
inc
push
xlat
leave
popf
out
divb
sub
int3
in
add
mov
mov
xchg
jp
push
cld
xor
dec
dec
push
into
mov
out
mov
mov
nop
lds
xchg
jne
mov
fwait
xlat
add
sub
cwtl
mov
adc
test
mov
scas
cmpsl
ja
jg
or
cli
sbb
mov
cltd
xor
jle
xor
pop
xchg
xor
mov
or
dec
push
mov
out
mov
sbb
jle
ret
dec
loope
inc
out
cli
sbb
sub
lret
loopne
int3
out
subl
inc
sub
and
sub
test
dec
arpl
nop
leave
sbb
jp
xor
inc
and
into
insl
arpl
lahf
sbbl
out
dec
fcomip
pushf
lret
jnp
adc
cld
mov
fiadds
mul
mov
dec
fimuls
std
push
sub
xchg
loop
lea
add
push
jnp
sbb
scas
test
popa
pusha
xor
push
ret
sarl
pop
aas
out
xchg
leave
adc
xchg
std
or
mov
mov
mov
in
jmp
in
push
xchg
xor
js
in
jecxz
push
sub
sub
mov
out
subps
push
test
mov
cltd
and
fstl
dec
jl
cmp
cmp
cmpsb
add
les
cmp
add
jno
dec
sbb
sbb
insl
into
cmp
fucomi
jb
dec
inc
jmp
push
mov
es
ret
fistps
pop
test
push
sbb
sub
inc
xor
adc
push
mov
cld
push
add
mov
push
cld
int
loopne
adc
jl
in
jmp
sub
movsl
push
ss
sub
inc
xor
cmpb
or
mov
enter
lds
in
fistpl
push
rcr
inc
mov
jno
lea
mov
mov
jle
jbe
cmp
cmp
sti
iret
mov
test
cmpsb
andl
stos
mov
jbe
aas
je
push
dec
outsl
inc
shll
out
in
add
push
leave
daa
xchg
ret
ja
loopne
jmp
test
jge
mov
jmp
js
bound
lods
mov
xchg
in
mov
dec
hlt
cmpl
pop
sarl
test
cmpsl
or
cs
pop
pushf
lods
lock
inc
push
sarb
jge
and
icebp
and
mov
imul
cli
pop
add
leave
mov
cmp
int3
sarl
pushf
xlat
mov
cld
xorb
subb
sub
lods
je
push
in
gs
imull
mov
sbb
xchg
add
pusha
loopne
lods
in
int3
divb
test
fisubs
jge
sar
xchg
xlat
mov
lea
flds
leave
jp
mov
jne
orl
shl
aam
out
jb
stos
movsb
cli
push
dec
pusha
sbb
xchg
dec
ljmp
cmp
rcll
xchg
shrl
shl
repnz
in
adc
push
popa
aam
xchg
scas
aaa
sbb
or
mov
shr
or
in
pushf
mov
test
ja
in
fs
dec
fmul
mov
jb
in
mov
jecxz
fnstsw
or
xchg
jmp
pop
out
fdivrs
sub
cmpl
mov
insb
inc
and
repz
out
orb
cmp
inc
sub
cmp
xchg
adc
mull
test
loope
clc
fidivrs
loop
xchg
insb
sbb
and
sahf
das
push
xchg
dec
loop
mov
int
or
sub
iret
jl
data16
ror
js
shrb
pop
fwait
dec
sub
and
xchg
jb
pop
adc
test
int
lock
jbe
cmp
cli
pop
insl
mov
ljmp
xchg
mov
mov
scas
mov
aam
push
mov
ljmp
rcr
fincstp
mov
stos
pop
mov
fwait
sub
fs
int3
iret
dec
inc
lret
stos
inc
pop
mov
leave
aas
sub
push
inc
adc
push
and
enter
fildl
inc
sbb
fwait
rcrb
dec
hlt
jo
lea
pop
shl
gs
lods
sar
nop
push
lods
insb
push
sbb
mov
jmp
call
vmovaps
lcall
pushf
dec
or
subl
pop
xor
push
mov
lea
mov
mov
lahf
lods
test
sub
mov
sub
push
es
ljmp
xchg
mov
scas
outsb
or
subl
insl
pop
test
jne
inc
lcall
jo
andb
jns
sbb
iret
push
and
sahf
sti
mov
pop
std
sti
inc
outsl
mov
cmpsb
pop
inc
call
loope
je
sbb
stos
jae
dec
stc
insb
mov
add
iret
cmp
mov
int3
lock
push
jge
pop
es
push
inc
push
fs
dec
jne
aaa
shlb
xor
imul
stos
lret
gs
out
adc
fimuls
adc
or
xchg
cli
cmp
fadds
xor
jns
jl
sbb
ljmp
mov
pusha
dec
mov
dec
scas
les
nop
push
int3
into
mov
xor
jmp
mov
pop
int
xorl
pop
xchg
icebp
ds
mov
popf
movb
dec
inc
int3
adc
into
adc
stos
bound
dec
sbb
xchg
mov
lods
fs
push
mov
jbe
loop
cmc
in
les
scas
jne
sub
mov
or
les
or
neg
push
cld
in
daa
sar
mov
jno
push
cmpsl
aad
lret
lds
das
inc
xor
pop
and
das
lret
xor
hlt
je
xchg
mov
shl
pop
es
xchg
sub
sbb
xchg
mov
xor
shrb
mov
loopne
cld
pop
push
mov
test
pop
add
xchg
scas
push
popa
mov
push
sub
fbstp
mov
lods
add
std
scas
cmp
lods
sub
je
or
cmpl
hlt
aad
xchg
lods
add
pusha
dec
and
or
add
mov
in
shl
out
push
push
mov
out
movsb
mov
sub
aad
or
ficoms
insl
fdivr
pop
sbb
insl
aad
in
ds
or
aas
add
add
add
int
lret
mov
mov
test
mov
jecxz
mov
jae
pop
test
pop
pushl
test
xchg
bts
imull
nop
rcrb
insb
mov
xor
push
sub
cli
or
popf
sbb
adc
repz
in
add
pop
xorl
cwtl
int
inc
dec
and
out
xor
add
add
int
inc
ret
cmp
pop
std
cld
mov
dec
adc
dec
xchg
dec
bound
rol
xchg
and
out
in
and
mov
std
mov
aas
push
mov
and
push
mov
orb
inc
cmovns
cmp
mov
in
notb
sub
mov
xchg
add
loope
jae,pn
test
cld
sti
xlat
ja
add
lcall
xchg
sbb
aas
lock
shlb
cmp
push
adc
jecxz
pop
test
inc
xchg
sarb
neg
and
call
and
or
pop
scas
je
sahf
aam
repnz
sub
mov
sub
add
mov
in
sub
out
and
cmp
sti
fiadds
xorb
or
scas
mov
cs
push
shlb
mov
xchg
and
and
dec
jge
loopne
sbb
jecxz
mov
fmuls
add
mov
inc
inc
and
xchg
pop
cmpsl
scas
daa
mov
sbb
mov
mov
aam
lret
pop
sbb
add
push
imul
add
mov
iret
push
sub
test
xchg
les
push
jmp
mov
or
pop
xlat
xor
push
mov
add
xor
and
jns
cmp
sbb
int
dec
mov
mov
push
stos
xchg
es
cmpsl
les
cmpl
mov
ret
lret
pop
push
stos
mov
sub
ljmp
dec
insl
jns
push
ja
cwtl
in
rcrl
add
add
nop
sub
and
test
add
inc
js
popf
mov
test
fyl2xp1
sub
pop
ljmp
xchg
je
pop
cmp
and
mov
je
movsl
inc
imul
filds
pop
mov
cltd
push
dec
mov
mov
cld
mov
add
pop
clc
out
stc
mov
inc
dec
adc
bnd
lret
pop
or
mov
ret
add
in
sub
mov
sub
push
sbb
iret
lods
push
int
jge
nop
scas
cmp
sub
jae
mov
out
dec
push
fistpll
mov
mov
mov
das
dec
or
mov
dec
std
add
push
adc
cmp
or
mov
and
loopne
and
fs
pop
add
push
test
fdivrl
push
dec
shr
jae
pop
push
loopne
xlat
adc
repz
sub
aam
inc
js
leave
mov
test
jno
cmp
test
mov
gs
xchg
push
mov
push
and
or
test
and
mov
or
cmc
std
cld
and
inc
jo
cmpsb
push
rclb
or
sahf
into
mov
and
daa
in
cmc
icebp
mov
sbb
test
pop
fnstenv
adc
in
ret
jnp
data16
popf
inc
int
sub
cmc
mov
imul
in
mov
mov
add
push
dec
jle
stos
add
mov
jp
loope
mov
addb
in
cmp
sbb
push
int
mov
inc
std
out
xchg
mov
andl
adc
add
aaa
sub
and
xlat
pop
ret
test
ss
and
or
jecxz
xchg
mov
clc
movsl
push
sbb
add
rorb
movsb
adc
js
stos
add
decl
pop
or
push
mov
fdivs
jmp
insl
push
and
sbb
aaa
add
pop
or
mov
pop
adc
outsl
mov
arpl
mov
push
shl
popf
xor
rcrl
jge
xor
pop
cmc
sbb
loop
mov
lock
xor
mov
out
xorl
cltd
test
ret
cwtl
mov
add
loop
inc
jg
mov
and
push
add
mov
fistps
lahf
and
mov
icebp
cmc
pop
pop
mov
push
add
inc
push
stc
mov
sbb
xor
gs
xchg
sub
sahf
adc
lds
pop
jl
sti
pop
pop
lock
rcll
sti
fucom
mov
jno
push
in
lea
cmc
ja
lods
iret
mulb
dec
jl
cli
xor
imul
push
mov
in
dec
repnz
fs
adcl
jbe
insb
pop
cmc
mov
in
sub
das
sbb
jmp
rcll
pop
add
adcb
std
jle
clc
pop
test
daa
call
add
push
or
lret
icebp
mov
dec
dec
mov
dec
sahf
lods
dec
push
or
adc
aas
enter
xorb
cmpl
or
in
xchg
xchg
repz
outsb
out
mov
mov
adc
repz
push
or
or
je
adc
push
mov
cmp
in
sbb
jne
jmp
pop
xor
stos
and
out
adc
cwtl
jp
mov
mov
and
and
and
js
ficompl
or
xchg
popa
pop
sbb
xchg
push
dec
inc
mov
pop
pop
inc
ds
cmp
les
inc
push
xor
xchg
stos
push
jne
les
mov
jns
test
mov
pop
in
arpl
loopne
add
mov
sbb
inc
notl
jae
out
das
in
ss
push
stos
mov
xchg
xchg
scas
or
test
nop
xchg
mul
out
pop
out
sbb
data16
imul
loop
mov
pop
mov
and
lods
jmp
jo
add
mov
push
xchg
scas
add
sbb
lock
rcrb
inc
out
lock
xor
pop
xor
mov
jbe
bound
adc
add
pop
movsl
and
pop
pusha
in
mov
jle
cwtl
adc
sbb
adc
dec
cmp
sbb
dec
out
fwait
rcl
lea
test
pop
ja
idivl
mov
rcll
mov
psubusw
bound
xchg
mov
cld
loop
dec
xlat
pop
adc
aam
add
in
inc
sbb
xchg
pop
push
xor
out
dec
out
cli
rorb
fdivs
pop
and
fildll
or
ret
mov
push
out
push
and
into
and
pusha
imul
cmpsl
and
lods
push
mov
jle
push
test
adc
pop
or
out
pop
mov
lods
push
jb
iret
xor
mov
leave
inc
dec
mov
bound
nop
test
aaa
idivl
pop
mov
add
test
add
out
inc
insb
push
test
negl
inc
pop
xchg
cmp
jnp
jns
xchg
xor
add
cmp
repz
js
ret
inc
push
mov
popf
add
int
decl
fsubr
pusha
xchg
cs
std
sbb
jae
mov
xor
mov
pop
sahf
insb
inc
add
mov
cmp
xor
sbb
cmc
cmpl
leave
loopne
cmp
mov
arpl
clc
in
or
dec
fnsave
or
mov
ds
out
xchg
ret
jl
rorb
fldt
shl
jne
or
sbb
inc
inc
pop
or
sahf
push
imul
dec
addr16
shlb
ss
cmp
in
pop
and
jne,pn
adc
sbb
cmpsl
cmpsl
ljmp
and
in
cmpsl
adc
inc
jecxz
pusha
popa
and
movsl
fmul
and
cmpsb
or
xor
cmpsb
lds
aam
jns
push
insb
adc
loopne
mov
push
cmpsb
and
fisubrs
xchg
ret
mov
addr16
mov
cmp
into
and
rorb
add
loopne
sbb
sbb
ljmp
int3
adc
push
jmp
fldt
loop
xchg
out
add
mov
xchg
call
loop
pop
xchg
sub
push
sbb
add
or
push
jge
cmp
and
std
mov
mov
test
fs
imul
bound
push
popf
push
out
push
fnstenv
sbb
fldcw
jne
dec
sahf
add
jmp
loop
mov
pop
out
cmp
lret
adc
add
clc
mov
addr16
dec
mov
int
ds
or
test
in
pop
fstl
xor
xor
cmpb
fimuls
dec
outsl
push
adc
and
jb
ja
adc
mov
mov
loope
xorl
mov
shrb
stos
insb
cmp
adc
ss
cs
add
inc
lods
jmp
adc
pop
negl
or
push
call
push
dec
and
out
jns
mov
fcompl
mov
xchg
jne
dec
sbb
mov
call
outsb
inc
cmpsl
push
jle
int
aas
pop
clc
mov
cmp
fwait
push
dec
jecxz
push
cmp
xor
ret
xchg
cmp
lcall
push
push
and
xor
je
mov
loop
mov
mov
int
xor
imul
push
add
sbb
inc
sub
adc
add
or
xchg
out
int3
aad
ss
pop
mov
and
call
sbbb
data16
cmp
jle
in
stos
leave
jge
mov
adc
xor
out
push
xchg
or
fnstsw
dec
sbb
or
mov
addl
xchg
leave
lods
out
mov
imul
cld
xchg
push
jns
mov
ret
mov
aam
imul
mov
sub
add
push
xchg
push
cmp
jecxz
add
outsl
or
int3
add
sbb
or
add
mov
mov
mov
addr16
pop
and
inc
mov
dec
pop
pushf
nop
fisubrl
or
insb
jge
sbb
shl
adc
mov
xchg
popl
int3
test
mov
mov
xor
test
sub
pop
inc
jns
jae
add
mov
push
imul
xor
sbb
mov
les
inc
lcall
int
loope
sub
fwait
push
jno
adc
aad
mov
sti
push
iret
push
int3
xor
outsl
sbb
outsb
cmp
mov
and
insb
mov
fwait
cmp
jne
lock
jae
or
pop
cld
rcr
sub
data16
cmp
add
out
sub
call
dec
shl
je
lds
sbb
or
fcmovne
xchg
stos
push
ffreep
sbb
jmp
push
cmpsb
xlat
pushf
xor
inc
js
ja
je
insb
cwtl
pop
push
js
pop
push
cmp
inc
add
dec
stos
pusha
repz
jle
std
inc
outsb
ljmp
aad
enter
push
xchg
adc
jb
hlt
js
pop
add
fldt
adc
add
xchg
aam
inc
add
jno
lea
and
ds
into
adc
sarl
lret
insl
in
sub
iret
sub
gs
notl
and
push
bnd
and
arpl
jne
cmp
int
mov
adcl
out
movsb
pop
std
movsb
pushf
int3
cmpsb
movsl
pop
data16
pop
pop
jns
xchg
enter
xchg
outsl
xor
cmp
jl
dec
je
mov
inc
push
xor
std
adc
sti
cmp
pop
mov
mov
adc
enter
jge
cmp
pusha
dec
inc
jb
mov
mov
mov
push
je
repz
inc
mov
stc
and
adc
bound
add
es
pushw
pop
mov
das
sbb
cmp
inc
ret
adc
sub
jno
adc
cmp
lds
lcall
inc
shlb
loope
adc
jecxz
sahf
inc
xchg
xor
push
aam
sub
imul
jns
nop
xlat
mov
push
shr
inc
cmpsb
int
mov
and
imul
add
xchg
adc
lret
aaa
push
andb
insb
dec
insb
inc
or
das
stc
ret
push
dec
mov
ss
fsubl
pusha
ret
mov
and
cmpsb
pop
les
adc
fs
fs
cmpsl
fsubs
mov
out
dec
xchg
adc
lahf
aaa
fistpll
mov
cltd
add
cmp
jmp
adc
outsb
dec
nop
xor
cltd
stc
mov
jbe
mov
push
mov
adcl
fnsave
cli
add
push
les
sbbb
lock
fs
mov
mov
test
adc
inc
jns
jp
jo
test
pop
push
fucomi
or
lds
dec
test
dec
jns
mov
fsubs
aas
and
insl
icebp
jbe
push
xor
iret
lock
je
mov
andl
adc
lock
cltd
mov
pop
and
iret
insb
mov
jge
inc
lret
in
sti
andnps
scas
adc
es
xchg
xchg
rolb
das
shll
out
xchg
and
test
popa
decb
cs
inc
iret
std
adc
inc
call
aaa
ret
scas
inc
xlat
pop
xor
subb
adc
clc
ljmp
push
sub
dec
xchg
or
push
add
mov
add
sahf
cltd
inc
push
fwait
stos
mov
fidivs
xchg
inc
out
shl
dec
inc
and
cmp
rorb
mov
mov
int
dec
movsb
cmc
call
and
popa
cmpsb
andb
out
jmp
test
and
sub
mov
pop
jo
adc
cli
cmp
pop
cmp
cmp
xchg
les
aaa
movsl
jne
inc
in
pop
mov
jmp
sub
jb
jbe
mov
bound
or
dec
lea
mov
movsl
jmp
and
loopne
fwait
push
mov
cmp
fisubrl
ja
mov
xchg
sbb
mov
add
cs
dec
cltd
test
push
shlb
gs
xchg
mov
fistps
jbe
rclb
jnp
pop
out
cltd
mov
inc
jne
jne
sbb
sbb
pop
vpclmulqdq
mov
push
jns
in
ret
stos
lret
std
adc
mov
leave
subb
mov
mov
pop
rclb
or
mov
ret
lock
sub
imul
lret
lcall
mov
std
jecxz
and
cltd
mov
adc
add
dec
xlat
rcll
lret
loopne
shll
adcb
push
pop
mov
jae
ret
cmp
out
ja
inc
leave
test
dec
jmp
mov
adc
rcr
inc
push
jnp
sub
sub
lahf
sub
mov
mov
test
lods
cmp
xchg
jl
dec
scas
push
and
push
add
fsts
push
cmp
ja
jmp
test
ret
sub
in
mov
mov
int3
call
lock
iret
nop
adc
jns
or
loope
jnp
and
sarl
push
xor
inc
xor
clc
and
push
fildll
sbbb
inc
and
insb
aas
cmp
stc
mov
arpl
and
lahf
rcll
clc
cmp
push
lahf
cwtl
shl
movl
outsb
test
imul
sbb
int3
outsl
aaa
test
testb
xchg
arpl
inc
push
daa
jp
cld
lretw
dec
sub
mov
mov
push
dec
test
push
add
pop
arpl
sbb
icebp
mov
ja
jo
jbe
ljmp
adc
jge
mov
mov
sti
push
ja
dec
arpl
loopne
cmp
cmp
addr16
rcl
inc
fcmovnb
adcl
sbb
fwait
in
jns
sub
repnz
cmp
out
ljmp
sub
sbb
jmp
jle
adc
nop
lahf
int
mov
push
sti
push
popf
sub
ror
icebp
or
outsb
push
mov
mov
push
movb
setae
inc
and
jae
mov
int
lds
aam
aas
int3
scas
push
mov
sti
inc
rcrb
cmpsb
xor
rcll
out
mov
mov
push
adc
jbe
pop
sti
pop
rorb
jl
fdiv
cmpsb
int3
pop
sbb
idivb
sub
rcll
xchg
daa
adc
sbb
dec
jae
mov
repnz
and
pusha
lahf
jle
xor
pop
fiadds
lock
stc
sub
lds
out
mov
xchg
xchg
cwtl
and
movsl
and
loop
stos
mov
mov
cmp
push
cmp
jl
aam
emms
movsb
fisubrs
mov
sbb
scas
jae
push
xor
in
addl
adcl
xchg
jmp
loop
ret
push
ret
xlat
and
scas
loop
sub
mull
popa
jo
negb
icebp
repnz
repz
popf
dec
adc
push
mov
lods
push
icebp
sub
jbe
push
aad
mov
pusha
or
push
insb
pop
xorl
mov
bnd
in
loope
sub
int
mov
cmpsb
xchg
mov
lods
mov
rcl
lods
pop
pop
dec
imul
adc
xor
imul
cmc
andb
test
sub
inc
dec
fidivs
bound
mov
fadds
inc
gs
mov
cmc
xchg
je
fcmovbe
adc
jae
mov
dec
and
shlb
mov
call
xor
ljmp
jnp
mov
and
test
xor
or
out
fwait
inc
inc
mov
cmp
fld
xchg
xor
fbld
inc
rolb
es
inc
insl
add
jnp
mov
rol
mov
fcoms
into
fmuls
and
imul
xchg
aas
orl
mov
push
jb
and
lcall
leave
ret
cltd
jl
jnp
aas
push
fwait
push
jns
push
pop
lods
je
mov
mov
das
push
cmp
cltd
inc
notrack
fidivs
mov
pop
js
imul
popa
insb
rcl
sub
lcall
adc
mov
sbb
call
jmp
and
or
jb
xor
sub
sub
mov
in
sbb
xchg
pop
es
push
jl
loopne
mov
xor
fstpl
push
and
addr16
jo
arpl
mov
popf
bound
lahf
cmp
pop
or
pop
jge
push
imul
loop
shll
dec
ljmp
mov
cli
pop
rorb
jns
dec
call
orb
mov
sbb
add
cmc
outsl
adc
lahf
push
je
iret
fimuls
std
mov
and
icebp
mov
xor
test
mov
loopne
lock
dec
sti
xor
xor
dec
adc
pop
insl
pop
mov
repnz
xchg
pushf
repz
lods
inc
test
or
mov
push
jbe
lcall
or
xor
cmc
jmp
outsb
scas
mov
pushf
cltd
jnp
mov
add
dec
xchg
out
jno
pop
pusha
movsb
add
mov
ja
mov
movsb
cmpsl
testb
adc
and
fmull
scas
mov
sarb
sub
or
fstpt
aas
bound
cli
bound
xchg
addl
mov
inc
into
sub
add
push
jns
mov
and
enter
or
aas
movsb
dec
and
sub
das
lds
xor
sub
cmp
jp
mov
adc
aas
pop
or
mulb
inc
inc
daa
push
hlt
xchg
adc
inc
pop
and
imul
enter
jmp
lds
xor
pop
jl
mov
sbb
test
xor
xchg
pop
mov
add
ret
pop
ljmp
xchg
leave
hlt
and
cmp
lods
add
cmp
pop
ja
xchg
add
int3
or
rorb
xchg
sti
adc
adc
jne
ljmp
mov
or
jge
arpl
xchg
adc
push
mov
push
iret
sub
jl
subl
mov
mov
pop
pop
cmp
dec
ror
xorl
je
cmp
lds
scas
dec
insl
stc
push
push
les
outsb
mov
xchg
cmpsb
jno
fldcw
imul
lret
mov
or
push
jg
jns
std
push
sub
adc
mov
xchg
jmp
mov
mov
adc
andl
in
scas
test
adc
mov
cmpsb
push
repnz
arpl
lahf
or
cwtl
pop
xchg
mov
push
inc
add
stos
cmpsb
xchg
or
loope
pop
pusha
enter
or
js
loopne
pushf
cltd
mov
dec
adc
inc
lock
scas
sub
mov
cmp
and
pop
xor
xchg
test
adc
jmp
fisttps
adc
and
jg
cwtl
jg
dec
fsts
mov
and
and
jecxz
xchg
nop
repz
jnp
dec
stos
aam
mov
adc
mov
mov
lock
das
mov
add
mov
xor
inc
shll
xchg
and
out
lds
push
sub
stos
popa
loop
out
lret
or
xor
addr16
sbb
movl
das
lret
pop
jg
decb
in
cld
mov
outsb
mov
lcall
push
pusha
jo
sub
cli
mov
faddl
inc
aad
movsl
fs
sbb
sbb
sbb
mov
cli
push
add
scas
in
cmpsl
sarl
decb
pop
or
mov
lea
and
or
cltd
insl
hlt
jecxz
aas
xchg
and
repnz
and
cmp
jbe
jge
dec
mov
das
push
cs
mov
jmp
sbb
cmp
in
ljmp
jae
iret
in
xchg
jne
pusha
mov
imul
movsb
ret
add
repnz
lret
mov
sahf
in
adc
mov
ja
negb
lods
int3
xchg
test
xchg
sub
imul
mov
jge
ja
jbe
push
lods
dec
xchg
aad
add
leave
ljmp
stos
push
test
scas
xchg
pushf
xchg
xchg
out
pop
aad
fdivl
adc
mov
fnstsw
dec
add
jg
subb
mov
scas
repz
mov
jb
insl
insl
cs
in
mov
out
ret
lods
xor
ja
ss
jge
lret
mov
push
or
cltd
aaa
rolb
pop
adc
gs
and
shrl
add
jp
jne
outsb
ljmp
sub
pop
test
addr16
mov
xor
add
xchg
pop
pop
lret
lods
stos
inc
jns
dec
push
enter
test
addl
xor
das
mov
cmpb
xor
cmp
push
push
jo
jo
shr
xchg
push
cmp
mov
les
mov
mov
ljmp
inc
inc
add
stc
cmp
push
dec
mov
and
push
pop
imul
push
mov
bound
fs
dec
mov
bound
add
mov
sub
push
repz
movsb
rcrb
pop
mov
jae
mov
cmp
push
sbb
fnstenv
jge
hlt
xchg
mov
loop
mov
ret
leave
mov
stos
out
or
test
xchg
or
stc
into
push
sbb
fwait
mov
cltd
xor
movsl
int3
shll
out
or
jb
and
rorl
sbb
sbb
or
pop
ljmp
mov
pop
pop
adc
popa
push
adc
rdmsr
stc
arpl
repnz
ret
jo
jnp
jns
or
mov
fsubs
adc
lret
adc
aam
imul
gs
movb
pop
xchg
out
mov
stos
xor
xchg
lods
sti
mov
add
ret
and
shll
aaa
int
mov
mov
mov
push
add
push
lods
stos
add
mov
rorb
adc
in
ret
dec
imul
cld
sbb
dec
pop
into
mov
and
xchg
in
hlt
cwtl
push
sub
xchg
add
imul
xchg
push
cmp
rcl
out
aam
inc
cs
push
sbb
mov
rcr
xchg
mov
xor
mov
in
dec
xchg
sahf
cs
pop
pop
dec
loopne
inc
addr16
lods
in
fwait
pop
fidivrs
sahf
test
sub
mov
mov
mov
mov
pop
test
push
mov
call
inc
mov
call
inc
shlb
push
js
inc
ja
insl
ficompl
iret
iret
pop
add
shl
lcall
mov
outsb
mov
rcll
in
arpl
ret
les
aam
xor
fwait
mov
cmp
cmp
int
gs
mov
push
jp
cmp
fwait
dec
mov
jmp
cli
sbb
jg
xchg
dec
adc
xor
cmpl
test
adcb
adc
adc
std
pop
popf
mov
mov
mov
inc
lret
adc
arpl
cmpsb
call
cld
push
jne
scas
dec
hlt
out
ds
xlat
sub
loope
scas
sub
mov
jecxz
mov
xchg
xchg
sar
push
nop
std
out
xor
xchg
dec
jle
push
sti
out
xor
mov
inc
mov
popa
lods
pop
les
sub
or
or
lods
outsl
sbb
shrl
xlat
les
adcb
push
sahf
imul
testb
jecxz
adc
sbb
mov
nop
cmc
lods
insl
jne
lret
in
jg
cmpsb
test
imul
jns
ds
dec
add
ret
add
jecxz,pn
mov
sub
push
pushf
in
fxch
jnp
pop
bt
out
sub
testl
stos
cld
insl
rcll
arpl
stos
push
xorb
popa
mov
pop
push
scas
sbb
xchg
lret
int3
je
mov
mov
xchg
xchg
mov
aaa
adc
imul
cltd
lea
int
in
jae
test
sub
push
push
push
mov
xchg
sub
push
imul
and
push
repnz
add
testl
dec
loope
inc
roll
pop
pop
inc
das
insb
push
divl
dec
dec
sbb
cmp
or
inc
cltd
lret
push
iret
cmp
test
faddp
js
adc
fwait
mov
icebp
call
arpl
sbbb
sahf
sbb
stc
jge
xchg
jae
sahf
rclb
mov
mov
jg
cltd
imul
and
mov
or
dec
orl
or
insb
sbb
xor
jnp
cmc
xchg
call
push
lret
push
jno
aad
sbb
adc
fistl
addr16
pop
dec
xor
setge
cs
in
cmpb
sbb
repnz
jo
push
inc
hlt
inc
and
jne
dec
stos
pop
popa
adc
movsl
inc
loopne
shlb
insl
test
nop
pushf
in
mov
mov
mov
scas
popa
jb
leave
stos
mov
mov
aad
and
lret
lcall
xor
dec
push
int
push
dec
shl
lret
mov
lcall
jbe
cli
imul
mov
bound
inc
push
adc
adc
jmp
imul
inc
add
jbe
add
out
lock
arpl
jne
xchg
jns
xchg
dec
jle
xchg
xor
test
lcall
mov
push
into
mov
mov
fs
dec
push
xchg
inc
mov
dec
mov
mov
cwtl
push
push
or
and
cmp
pusha
out
outsl
arpl
or
jg
sub
pusha
pop
out
popa
outsb
cmc
adc
in
lret
mov
mov
out
xchg
push
sub
gs
jae
fmul
jecxz
js
les
push
xor
sbb
imul
jl
xor
cmp
jo
adc
or
enter
pusha
mov
fisttpll
ret
sti
xchg
test
sub
inc
xor
fs
in
push
adc
sahf
sbb
std
push
xchg
and
adc
add
mov
mov
aam
mov
pop
das
gs
adc
into
ss
fsubp
xor
lds
sub
mov
pop
negb
insb
xchg
xchg
inc
cmp
sub
lock
cmp
stc
xchg
iret
and
int
jne
xor
mov
lret
pop
cmp
push
inc
push
pop
add
mov
shrl
aad
sbb
popf
dec
cmpsb
icebp
pop
clc
sbb
or
mov
and
cmp
push
pop
hlt
out
sub
fisttpll
xchg
into
inc
push
fstps
jle
mov
push
xchg
cmp
popa
jns
lret
mov
ja
out
gs
add
xor
in
scas
aad
addb
ljmp
pop
xchg
int3
movsb
sti
movsb
xor
mov
loop
ret
push
pop
iret
adc
push
rorl
jno
test
push
dec
dec
lret
or
fiadds
jp
data16
sbb
enter
mov
adc
aad
sub
inc
mov
adc
dec
inc
mov
fcompp
lock
jmp
call
push
sbb
sub
std
jb
cld
push
sbb
cwtl
mov
pusha
aaa
dec
push
clc
cmpsl
movsb
adc
loope
jo
inc
iret
call
xor
sbb
fidivrs
mov
test
jns
and
stos
inc
inc
repnz
mov
sub
scas
mov
dec
mov
out
push
xchg
push
insl
pop
add
push
push
lock
mov
dec
aaa
mov
cltd
loop
fildll
or
mov
js
dec
subl
movb
mov
sub
fwait
clc
lahf
mov
pop
sub
sbb
and
adc
mov
pop
addl
xor
xchg
sbb
adc
pop
jae
push
mov
inc
loopne
lds
xchg
fwait
mov
mov
daa
xor
outsb
push
mov
mov
mov
popf
add
andl
mov
cli
mov
lods
pop
hlt
dec
repz
mov
push
pop
sbb
pop
fstps
maskmovq
notl
jnp
pop
sbbb
cmp
fidivrs
jne
shlb
mov
and
or
int
enter
dec
jp
push
stc
push
sbb
mov
push
sbb
mov
xchg
movsl
negl
pop
mov
leave
lea
sbb
cltd
int3
popf
in
xchg
aad
je
dec
ljmp
adc
in
and
jb
out
lret
leave
out
cmp
daa
adc
add
clc
mov
pop
mov
mov
push
cmp
es
cmp
bound
dec
outsl
adc
pop
sbb
push
cmp
mov
out
sbb
jp
je
loopne
cmpxchg
jne
aas
sub
mov
push
jnp
fsub
mov
xor
dec
sub
inc
pop
int
stos
inc
mov
mull
ret
xor
xor
aam
ja
nop
les
lock
adc
mov
in
dec
rol
xor
adc
mov
stos
xchg
cmpl
test
test
lret
sbbb
sti
jl
jp
clc
sub
sub
aad
ds
loopne
jmp
push
icebp
fyl2x
cmc
push
in
adc
fs
push
cmpsb
sbb
xor
outsb
push
std
and
pop
mov
xchg
cmp
test
xor
testb
sbb
push
mov
push
push
adc
orl
mov
cmp
xchg
xchg
mov
and
xor
dec
mov
adc
cmp
int3
loopne
imul
push
cmpsl
ja
imul
in
mov
lret
imul
clc
int
js
test
jo
mov
negl
mov
push
mov
insb
fs
or
adc
cld
pop
pop
in
xchg
pusha
pop
imul
repnz
js
cmp
sbbb
xchg
not
neg
inc
or
cltd
jge
xchg
push
jns
cli
push
lahf
sbb
pop
and
lods
xchg
stos
or
andl
les
enter
add
jmp
cmp
xor
xchg
jecxz
jns
adcl
push
xchg
test
and
mov
aam
test
inc
mov
or
pop
mov
push
cmp
mov
daa
ficompl
call
outsb
xor
xchg
sahf
gs
mov
fmul
stc
mov
pusha
cmp
sub
jb
inc
jmp
mov
ds
xchg
mov
out
lcall
outsl
and
push
adc
jno
cltd
jg
cmp
out
in
push
lcall
sbb
rclb
jne
pusha
xchg
inc
xor
cmp
cmp
adc
sar
xchg
mov
dec
aaa
push
hlt
lock
mull
sub
mov
jb
push
movsb
mov
pushf
xlat
jmp
jno
cwtl
push
dec
sub
jmp
rcrb
fisttpll
mov
ss
and
xor
xor
cmpsb
out
mov
push
mov
std
mov
add
ja
cs
insl
mov
inc
lret
and
xchg
push
inc
sbbb
adc
sub
jp
fbld
mov
dec
stc
mov
int
pop
ss
xor
in
and
mov
push
sub
aam
and
dec
outsb
call
push
jnp
leave
in
ds
pop
jmp
dec
pop
incl
filds
dec
out
sbb
imul
std
add
sbb
notb
outsl
rorl
mov
xor
xor
mov
ss
out
movsb
insl
add
out
mov
xor
add
xchg
pop
adc
push
sub
lret
out
into
sbb
pop
in
outsb
test
int
pop
iret
jno
les
fchs
jg
bound
mov
jl
iret
test
cli
rcr
adc
mov
bound
in
lcall
or
or
mov
movsb
adc
sub
es
test
test
push
cmovs
push
jle
fnsave
adc
jnp
lods
mull
clc
xor
pextrw
stos
cmpsl
xchg
push
jge
mov
mov
mov
aas
mov
or
push
cmpsb
sub
or
mov
movsb
mov
fmull
dec
xor
call
cmp
icebp
pop
pop
sbb
jmp
jns
cltd
add
xor
es
mov
mov
popa
cmp
in
stos
dec
test
aam
cmp
xchg
lds
xchg
pop
fs
sbb
dec
or
xor
or
out
adc
add
cmp
jb
ljmp
repnz
xor
bound
fs
add
sarl
dec
dec
jge
and
cmp
lods
sahf
das
lret
and
and
xor
jg
dec
ja
cld
inc
or
subb
imul
std
cld
mov
pusha
ja
sahf
push
ss
cmp
push
repz
js
mov
sub
in
pop
lods
dec
and
jbe
cli
sbbb
std
pop
jle
jno
and
jne
xor
shll
mov
xchg
xchg
mov
jl
sbb
mov
stos
jecxz
xchg
stos
test
popa
in
iret
xor
jae
jg
dec
cltd
ficoml
or
jle
push
pop
mov
jle
or
cmp
push
cmp
ficoml
hlt
xor
pop
aaa
test
cwtl
pop
jne
sti
imul
int3
pop
fxch
icebp
inc
test
jecxz
fistl
push
lahf
outsl
xchg
xchg
cmp
lret
mov
movsl
jnp
idivl
addr16
pop
enter
ds
pop
sbb
fistps
cmp
add
jbe
pop
add
repz
lds
sub
mov
jo
mov
fstp
push
xlat
and
cld
mov
pop
mov
adc
and
sbb
out
xlat
movsb
sub
xchg
sub
sbb
movsl
add
xchg
adc
fsubrl
xchg
jl
xchg
arpl
sbb
mov
pop
mov
iret
adc
pusha
outsl
ja
insl
push
popf
xchg
popf
pop
fs
in
xchg
jg
lahf
fs
fnstenv
mov
stc
mov
jb
mov
nop
rcrb
mov
or
push
insb
mov
addr16
orl
cmp
cmp
mov
mov
adc
call
and
xorl
sbb
mov
sahf
addl
and
insb
ds
iret
andl
mov
mov
addr16
mov
xchg
mov
and
int
clc
jl
pop
lds
iret
mov
jno
enter
imul
dec
mov
mov
mov
mov
jnp
inc
lock
fdivl
imul
out
jbe
cltd
push
push
cmpsl
shll
outsl
hlt
dec
xor
movsb
mov
cmp
pusha
and
mov
out
daa
pop
adc
xor
lds
add
movsl
icebp
pop
fcoml
mov
or
scas
push
test
decb
into
push
adc
les
mov
push
or
addr16
push
bound
call
fwait
pop
iret
addl
data16
test
ds
lea
repz
hlt
inc
negl
mov
aam
cld
rol
rorl
jecxz
xchg
rclb
mov
out
pop
int
dec
cld
iret
xchg
stos
push
call
cwtl
add
movsl
pop
in
pop
inc
lods
in
stc
sbb
jl
iret
test
test
fildl
lret
cmp
lret
jg
adc
mov
cli
ret
popa
cwtl
lcall
sbb
and
cmc
push
std
xchg
pop
leave
push
mov
xchg
pop
fisttpll
cmp
xor
outsb
in
xor
jle
stos
pop
jbe
and
add
and
popaw
aas
cli
mov
jecxz
mov
add
sar
push
push
jbe
int3
mov
imul
sbb
xchg
int
dec
xchg
sub
pop
out
repz
pop
mov
mov
cs
xchg
push
xchg
rcrb
loop
decb
sbb
sahf
xchg
rclb
ss
aas
xchg
int3
cmp
repnz
pushf
inc
lret
je
push
ljmp
jle
mov
xchg
loope
cmp
pop
cmc
popa
jg,pn
cli
cmpsb
mov
pop
xchg
and
mov
scas
add
ss
je
or
repnz
clc
mov
test
test
push
adc
cltd
mov
pop
cmp
jae
lret
and
lods
cli
adc
inc
or
add
jno
int
and
incb
in
in
ds
xchg
mov
bound
aam
popa
mov
dec
pop
cld
xchg
sub
aam
lock
sahf
dec
je
add
jns
or
inc
jne
es
shrb
arpl
cmc
dec
lret
outsb
ds
jne
movsb
aam
and
jge
test
loop
in
mov
in
fwait
loop
sbb
sti
mov
push
fnstcw
xchg
mov
imul
sub
xchg
addr16
sub
mov
out
or
push
fstpt
sub
pop
outsb
mov
jge
gs
dec
nop
subb
sti
sub
dec
sbb
mov
popf
sahf
pusha
push
or
movsb
xor
or
nop
pop
jmp
stos
add
xor
xlat
fistpll
inc
jl
lods
push
push
pop
sahf
dec
inc
pop
jbe
add
popa
xchg
shl
jp
pop
push
push
jp
sub
add
lret
xchg
inc
push
ds
and
cs
insb
sahf
cwtl
in
stos
xor
pop
pop
fs
jnp
mov
js
inc
pop
pop
push
mov
imul
ret
xchg
push
or
push
jmp
mov
arpl
cmp
jg
xor
pop
stos
sub
mov
iret
hlt
cmpsl
call
jg
bound
pop
andb
in
inc
divb
icebp
jbe
pusha
loope
pop
xchg
jns
fistl
out
fs
dec
mov
sub
inc
push
mov
push
hlt
es
push
into
stc
shlb
in
mov
fildl
adc
out
stc
ja
jae
cmp
sbb
push
dec
fisubrl
aam
insl
sbb
push
jnp
cmp
xor
fldt
les
ja
mov
inc
out
jge
loope
dec
or
int3
rol
fisubrs
clc
mov
xor
bound
inc
jle
xor
xchg
and
lcall
dec
or
lcall
jnp
cld
push
aad
and
jb
enter
push
or
test
push
sbbb
xchg
fs
adc
jno
mov
aaa
or
push
push
adc
jne
mov
call
sbb
lods
dec
dec
lods
or
jb
xchg
test
iret
mov
jmp
dec
adc
lds
and
mov
fdivrl
sbbb
jle
cmp
jmp
sub
test
addr16
xchg
jge
test
imul
sbb
add
popf
or
sub
clc
daa
mov
push
lods
jo
scas
sub
pop
sub
sti
add
aam
imul
cwtl
xor
ficoms
movsl
cmp
push
dec
fadds
pop
mov
push
cld
adc
imul
push
jmp
cmp
call
std
idiv
outsb
xchg
jne
xchg
int3
and
xor
je
add
inc
jge
xchg
mov
cmp
cmp
cltd
push
in
repnz
pop
xchg
inc
mov
insl
out
pop
dec
ljmp
pop
inc
std
pop
das
and
push
movsb
push
xor
jp
xor
inc
push
or
repz
xchg
decl
movsl
xchg
sub
push
jns
sbb
cld
xchg
pop
push
data16
and
push
mov
frstor
sahf
out
cmp
in
les
es
js
sub
sub
xor
cwtl
outsl
mov
fst
sahf
lcall
jae
ss
bound
test
out
jno
xor
shrb
push
jb
dec
outsb
sbb
clc
or
int
in
fs
mov
add
loopne
arpl
fwait
and
cltd
push
sub
dec
jb
dec
in
imul
add
aam
xchg
push
loopne
jae
mov
push
push
xor
jmp
lds
xor
clc
incb
pushf
cs
shl
fdiv
stos
fmul
nop
fistps
adc
jg
imul
push
cli
dec
dec
loop
push
cld
ficompl
in
das
ss
leave
and
daa
mov
mov
mov
test
pop
inc
fistpll
icebp
and
push
js
mov
jbe
fmuls
test
iret
add
push
xor
xor
jo
test
pop
dec
pop
xor
xchg
stc
add
outsb
movsb
in
ss
push
enter
fbld
or
imul
mov
jl
mov
sub
xchg
lods
adc
insl
sbb
in
add
jnp
fstp
scas
mov
sub
jbe
xor
xor
mov
cmp
mov
xchg
cmp
cmp
jecxz
ret
ret
test
rcrb
loopne
mov
ss
push
jp
inc
inc
das
add
and
mov
lods
jno
lock
cmp
xchg
imul
pusha
shll
rcl
scas
lods
cld
adc
jle
aam
mov
sub
sbb
ss
test
sub
rolb
hlt
imull
addb
lret
in
int
push
cs
jnp
clc
sub
mov
cmp
xor
add
es
shr
sahf
push
sbb
push
rorb
jle
xchg
lods
mov
ss
adc
lahf
imul
test
mov
cmp
scas
ds
lea
fs
xor
mov
aam
jbe
xchg
inc
inc
fisttpll
mov
cltd
adc
inc
repnz
adcl
inc
fsubrl
inc
mov
fs
add
xchg
mov
fisttps
ret
cmp
sub
inc
jnp
sti
aas
addl
or
scas
push
and
das
lret
notl
imul
mov
cltd
add
pop
loopne
jmp
sbb
data16
adc
into
fildl
inc
out
xor
add
js
pop
stos
dec
lahf
out
mov
aaa
adc
sti
bound
fcmovb
xor
mov
aaa
test
popa
lahf
mov
cmp
xor
or
pop
xchg
loop
xchg
push
hlt
clc
sbb
dec
cltd
in
mov
fnsave
int
jecxz
sub
mov
inc
jle
addr16
mov
cmp
sub
out
cmc
popf
mov
mov
mov
or
fidivs
shrb
ud2
cltd
enter
pusha
test
dec
mov
add
decb
cmc
int
ja
imul
mov
lods
xor
xor
je
mov
cwtl
sub
loope
cmp
iret
mov
and
rcrl
add
inc
sub
or
xchg
add
and
hlt
mov
cmp
clc
in
xchg
imul
shlb
mov
cmpsl
xor
nop
lahf
pop
bound
sahf
cltd
jns
mov
pop
jno
dec
ljmp
push
pusha
xor
jecxz
pop
sbb
and
lcall
xor
in
repnz
push
into
pop
adc
jle
sarl
pusha
cli
xorl
rcl
js
sbb
imul
sub
sub
push
test
cwtl
ret
bound
pop
rorl
add
cmp
jne
lcall
stc
push
mov
ss
ret
or
dec
stos
and
ja
or
sub
sbb
daa
push
add
cmp
mov
ficoml
imul
aas
xchg
stc
xchg
jno,pt
in
xor
pop
mov
xor
adc
xor
fcomps
cmpsl
pop
lahf
filds
stos
push
cli
adc
pop
and
mov
loop
mov
insl
or
inc
jnp
adcb
push
inc
mov
push
or
jno
cs
pop
mov
add
pusha
cltd
imul
mov
je
rcrb
inc
out
orb
lock
std
arpl
dec
test
filds
clc
mov
loopne
mov
inc
into
insl
jbe
xchg
or
adc
fwait
push
outsl
jge
mov
push
movsl
sbb
aam
push
mov
mov
daa
shlw
ficoml
mov
or
out
xchg
and
inc
or
in
mov
xchg
fwait
pop
scas
mov
fsubs
out
adc
cld
pop
mov
aad
aad
pop
sbbl
cmp
xor
fidivl
cmp
shr
sahf
sbb
cs
mov
scas
adc
push
jae
inc
arpl
xchg
cmp
aas
pop
adc
and
pop
es
cmp
and
mov
jnp
mov
stos
andps
dec
insl
jge
mov
xor
add
lcall
mov
dec
push
push
fimuls
sahf
and
adc
insl
bound
xchg
and
int
popa
je
dec
out
adc
mov
cmp
icebp
jp
loop
jb
dec
shrl
dec
sub
dec
in
and
in
cmp
frstor
out
outsb
sub
mov
sbb
hlt
fnstenv
orl
sbb
lret
je
adc
xchg
and
popf
imul
jae
sub
lret
pop
xor
lds
or
xor
sbb
jmp
or
pusha
addr16
mov
and
scas
or
mov
lods
sahf
inc
and
scas
ljmp
ds
jp
lea
or
scas
add
movsl
jg
adc
adc
dec
imul
push
test
pop
roll
out
push
xorl
insl
sub
jmp
loopne
call
les
mov
mov
pop
or
std
cld
hlt
ficomps
dec
add
jl
xchg
sti
call
ss
je
shlb
mov
out
adc
call
pop
xor
lret
aam
stos
lods
aaa
mov
clc
jbe
dec
adcb
in
jnp
aaa
mov
fcomi
pop
arpl
pop
lds
or
test
stos
loope
push
sub
xor
xchg
pop
pop
xchg
sub
jmp
out
incb
jge
out
pop
inc
mov
inc
jmp
cs
js
in
fisubrl
cmp
cmp
push
daa
pop
iret
xchg
leave
clc
lock
lcall
mov
mov
jnp
cmc
sbb
ficompl
mov
xor
pop
mov
iret
adc
add
test
ds
out
sahf
inc
dec
cli
add
dec
xchg
sbb
aad
inc
decb
inc
mov
cmc
adc
add
insl
or
fwait
xlat
cmp
and
lret
sub
and
movaps
sbb
in
push
inc
and
enter
pop
sub
jge
sbb
mov
push
jle
mov
cmp
rep
cvttps2pi
enter
mov
jmp
cwtl
push
shld
ret
jecxz
shll
out
push
push
mov
rolb
mov
mov
cltd
xchg
ja
add
in
gs
sub
jno
rclb
inc
pop
mov
inc
dec
frstor
xor
mov
cltd
data16
in
cmp
push
xor
mov
inc
jne
cmp
mov
mov
ss
popf
arpl
cmp
jp
out
jp
mov
dec
movsl
lock
pop
test
xchg
and
add
pop
pop
cmpsb
cli
sub
enter
xor
push
mov
scas
jno
rclb
push
and
push
or
out
pop
cwtl
int
lds
lea
push
fdivr
pop
jle
jnp
dec
lahf
mov
test
clc
popa
loopne
fsubl
push
cmp
add
pop
aad
stos
test
jp
cs
push
mov
push
adcb
dec
pop
and
nop
fiadds
jle
sbb
jbe
inc
sbb
push
int3
pop
mov
xchg
cmp
jge
xlat
mov
je
loope
rcrb
fists
decl
push
cltd
xor
hlt
dec
lcall
add
fiaddl
int3
pop
mov
push
loope
inc
int
mov
mov
sbb
outsb
pop
pop
movsb
enter
lea
mov
ret
pusha
dec
aas
push
je
call
fbstp
xchg
clc
jnp
push
add
pushw
sub
adc
jmp
pop
cmpb
aaa
and
rorl
aad
sarl
mov
pop
stc
dec
adc
inc
pop
inc
scas
fdivr
or
push
dec
mov
or
in
gs
lcall
and
inc
addr16
stos
pop
test
ret
mov
out
imul
das
push
lahf
xor
jecxz
outsl
ret
mov
add
push
clc
movl
lock
shlb
cmp
jnp
out
lock
outsb
fcmovne
or
js
inc
fnstsw
adc
mov
xchg
or
jnp
ss
and
xor
mov
call
shr
xor
mov
mov
insb
stc
mov
hlt
lahf
pop
mov
mov
jg
add
aaa
rorl
neg
jno
mov
cmp
xor
testl
dec
mov
adc
es
in
push
cmp
mov
or
jge
xor
test
cs
sbb
icebp
rcrl
cmp
cmp
sbb
rorb
mov
inc
cmpsl
cmp
arpl
xor
adc
inc
xlat
jl
mov
into
push
je
fistps
cltd
scas
push
lock
int3
les
fcoms
popa
mov
pop
sbb
and
leave
or
insl
mov
leave
mov
add
cltd
stos
jl
sub
lods
or
xchg
lods
mov
push
sub
aad
scas
pop
cmp
mov
mov
inc
adc
xchg
dec
xor
mov
imul
test
push
inc
mov
mov
push
sbb
ds
jge
cli
sti
fsubl
xchg
and
pop
or
sub
pop
fstpt
xor
imul
cmp
mov
xor
xchg
dec
sub
sub
xchg
gs
and
daa
cmp
mov
jmp
adc
jb
popa
xor
insl
ret
aaa
out
and
or
xchg
pop
dec
ds
rorl
ret
xchg
mov
sbb
in
inc
test
scas
fsubl
push
mov
ss
je
sub
mov
stos
ret
jbe
xchg
subb
push
sbb
mov
shll
adc
mov
or
inc
mov
and
pop
push
in
inc
sti
ja
xor
pop
dec
mov
sbb
sbb
cmp
or
stos
mov
pop
fwait
mov
lcall
xor
and
push
push
jl
fwait
push
imul
pop
sahf
add
clc
push
repnz
mov
sbb
adc
sub
lods
jae
notl
fidivrs
lds
lret
fcomps
xchg
cmc
mov
or
dec
aad
mov
jb
pop
lahf
dec
mov
jnp
fwait
adc
mov
rol
fsubrl
dec
pop
push
popa
jecxz
sarl
jns
gs
in
outsb
test
push
popf
pop
fnstsw
adc
outsb
lods
popl
dec
leave
push
loopne
imul
push
mov
and
inc
adc
and
pushf
dec
inc
addr16
cmp
dec
clc
mov
push
loopne
daa
fnstsw
lret
xor
mov
dec
mov
inc
jmp
stc
leave
cmpl
gs
inc
shrl
js
pop
pop
jne
inc
loop
add
sub
fsubl
outsb
xchg
push
jmp
sub
js
jbe
cli
addl
push
push
cmpsl
aaa
cmc
incl
fistps
adc
mov
testb
pop
shlb
pop
inc
dec
pop
into
lods
mov
xchg
repnz
ds
push
add
repz
xchg
mov
push
aaa
shlb
jns
cmp
je
adc
mov
aad
loopne
jb
lods
mov
pop
inc
mov
out
lods
mov
cmp
jb
inc
jae
pop
xchg
cmp
push
cli
inc
mov
mov
mov
lock
cmp
xchg
push
xchg
ja
out
outsl
clc
cmp
dec
pop
dec
dec
gs
push
adc
mov
pusha
xlat
pop
jb
lret
cmp
mov
mov
inc
vpaddusw
lahf
cmp
inc
pop
mov
jb
outsl
movsb
add
or
fldenv
daa
hlt
or
or
cmc
dec
gs
sbb
loopne
fldl
sub
stc
jge
icebp
ds
xchg
jns
imul
fsin
mulb
adc
jae
xor
addb
jbe
pop
pop
fldt
dec
dec
ret
push
mov
fisubs
push
pop
or
cmp
jg
scas
rolb
mov
push
pop
into
lret
lock
jle
or
aam
push
das
mov
shl
test
add
fisttpl
jp
call
adc
popf
fucomip
test
jae
fwait
xchg
outsl
outsl
sbb
adc
in
stc
repz
sarl
ss
in
or
outsb
cmp
cmpsb
icebp
sbb
or
jns
dec
mov
fwait
fwait
sub
scas
dec
mov
lock
dec
imul
jae
outsl
test
daa
jb
cmp
imul
cli
sub
scas
cli
push
cmpsb
in
lock
iret
icebp
es
cmp
add
ljmp
sbbl
int
les
stos
andl
fstpt
cmpsb
ret
out
out
sub
cmp
js
test
notl
jg
movsb
cmpsb
push
sbb
repnz
sub
lods
xor
jp
sub
xlat
mov
out
dec
and
repnz
push
mov
inc
mov
pop
pop
ss
push
inc
cmpsb
clc
pushf
and
push
mov
push
hlt
repz
je
incl
jmp
xchg
add
sub
sbbl
or
sbb
bound
lods
mov
mov
enter
pop
inc
outsl
ss
push
scas
add
mov
mov
sbb
xchg
clc
push
mov
sbb
mov
adc
push
mov
and
outsb
mov
sub
ja
push
and
or
std
mov
popl
mov
jg
notb
nop
mov
xchg
loopne
xchg
mov
xor
shrl
shlb
or
fwait
push
push
jno
jge
inc
outsb
xor
mov
rcrb
cmc
into
aaa
pop
mov
pop
fstps
in
sbb
addr16
sbb
adc
ljmp
ss
subb
enter
cld
loope
loope
or
mov
xor
lock
xor
data16
sub
out
mov
inc
std
push
xchg
jne
repnz
sub
cmp
sahf
inc
fisttpll
jb
jnp
jns
mov
mov
sub
adc
into
fstl
adc
test
aad
shl
jo
cmp
xorl
pop
or
mov
mov
ret
mov
xorb
ja
movsl
jb
cs
cmp
add
in
mov
pop
lret
repz
adcb
aad
xchg
into
nop
mov
imul
testb
into
fiadds
push
sub
mov
aam
into
mov
je
scas
lea
imul
stos
inc
add
xor
popfw
lar
push
jne
jg
mov
mov
mov
test
jecxz
mov
imulb
jno
xchg
stc
bnd
hlt
aas
pusha
test
shr
movsl
cwtl
into
xor
jl
rolb
sub
add
insl
dec
mov
mov
bound
fs
les
stos
mov
aam
in
xchg
xor
clc
insl
inc
cmp
repz
add
jnp
fstps
loop
into
jecxz
cmpsb
mul
fldcw
fisubrl
into
fcompl
or
int3
pop
and
outsb
mov
xor
push
and
or
pop
inc
sbb
jle
or
cmp
lds
in
cld
cmpsb
jecxz
shr
lods
pop
mov
mov
orl
stos
sub
popa
addr16
jp
fwait
dec
gs
ja
mov
jae
cs
mov
pop
call
iret
jge
sbb
data16
xchg
fcompl
aaa
sbb
andl
in
xchg
cwtl
push
add
mov
jl
xchg
jbe
or
jb
jp
jbe
mov
testb
lods
cmp
mov
cmpl
xor
mov
jnp
mov
and
sarl
xor
nop
out
or
scas
sbb
xor
int3
stos
jecxz
lds
fiaddl
or
rclb
sbb
nop
lret
add
leave
push
xor
mov
inc
inc
push
lcall
repz
mov
mov
int3
xchg
ret
out
mov
lea
mulb
jp
popa
adc
and
movsb
mov
add
imul
test
cmpb
mov
xchg
mov
cmc
cmp
lods
add
mov
rorb
cld
ss
int3
add
mov
addr16
mov
outsl
sarl
lcall
sub
jne
cs
daa
xchg
das
sbb
lret
mov
or
push
outsl
or
ret
fistpl
ljmp
stc
rorl
and
popf
mov
mov
mov
in
cmc
lret
sbb
xchg
pop
pusha
pop
xor
xor
mov
push
push
cs
mov
add
ret
cmp
pop
cltd
iret
pop
and
test
int3
cmp
fisttpl
dec
push
xor
lods
roll
sub
jnp
add
sarb
push
mov
gs
pop
sbb
mov
pop
dec
xor
fisubrl
add
push
scas
add
push
imul
jge
add
inc
xor
ja
frstor
rcl
jnp
mov
dec
or
dec
int
negb
pop
test
cmpsb
popa
shll
mov
sub
std
dec
adc
aad
sbb
inc
ret
mulb
push
jp
pusha
mov
ljmp
and
mov
std
insb
mov
push
cmpsb
sub
ljmpw
outsl
mov
pushf
in
mov
mov
jecxz
lcall
pusha
outsb
xchg
clc
sub
pop
movsl
loope
cmp
nop
sub
repnz
fildll
arpl
jnp
mov
popf
lahf
int3
test
pop
or
xchg
loop
in
add
fnstcw
cmp
mov
test
add
mov
in
ret
sbb
dec
imul
push
fcmovnu
sbb
sub
fdivr
daa
ljmp
adc
xchg
sub
mov
fstpl
and
sub
inc
idiv
jle
jne
repnz
and
ja
les
jns
movsl
test
jae
jl
pusha
mov
into
aad
adc
subl
jns
mov
xchg
dec
repnz
sub
dec
imul
jle
adc
das
mov
out
jp,pn
lret
push
ljmp
ret
cmpsb
add
xchg
inc
dec
or
push
scas
mov
repz
pop
adc
add
filds
sti
mov
and
jne
mov
dec
jge
push
and
pop
mov
mov
iret
sahf
test
stos
mov
loope
mov
dec
cltd
daa
rorl
mov
ja
xchg
add
ret
jno
outsb
mov
out
les
and
adc
add
pop
and
add
mov
fnsave
daa
sub
movsb
xchg
mov
scas
daa
and
ret
ror
inc
movsb
adc
das
movsb
ret
add
jmp
shrl
xlat
mov
loop
insb
adc
pop
insb
stos
fucom
mov
xchg
clc
repnz
sub
inc
mov
or
or
pop
aad
daa
or
lods
cmp
loope
shlb
js
mov
roll
test
jns
cmc
ficoml
jns
test
mov
push
mov
adc
pushf
push
mov
scas
out
jle
rcrb
fsub
dec
aaa
cmp
cmp
mov
dec
fisttpll
or
imul
jae
mov
dec
xor
jae
xchg
pushf
mov
mov
shll
hlt
adcl
adc
jg
mov
mov
cltd
rcrl
call
clc
xor
stc
insl
mov
mov
jmp
pop
jns
ds
in
inc
ror
cmp
inc
pop
and
xor
shll
mov
mov
jmp
push
fs
or
or
or
jb
fstps
arpl
push
mov
add
in
inc
test
scas
cmp
scas
lds
push
ljmp
xchg
sbb
lods
mov
adc
or
sbb
xor
xchg
fistpl
scas
mov
rcrb
push
pushf
jmp
jne
cmp
sbbl
mov
in
adc
mov
mov
outsl
mov
cmpsl
ret
add
test
in
pop
fisubl
das
mov
into
es
cmpb
cwtl
lret
frstor
test
pop
sbb
add
mov
cwtl
jmp
popa
pop
shll
enter
xchg
and
cmc
sub
push
sub
add
add
mov
push
cmp
leave
push
mov
pushf
sub
fwait
notl
and
push
fidivrs
enter
pop
fisubs
cmp
pop
dec
xchg
lret
mov
or
xchg
jle
icebp
xchg
mov
into
jne
and
imul
adc
cmp
aaa
in
inc
mov
lret
into
xchg
mov
xor
out
imul
cli
xchg
jle
inc
insl
push
test
lret
xchg
stos
in
sub
mov
xchg
inc
bound
icebp
and
decb
mov
xchg
icebp
test
cmp
int
cltd
mov
jo
test
jne
int
mov
adc
out
stos
sahf
rorl
repz
das
inc
repnz
test
in
inc
xor
fdivrl
js
je
push
xchg
dec
xchg
faddl
mov
sub
out
stos
cmp
fsubp
xlat
xchg
mov
cmpsl
rorb
dec
mov
push
xor
in
lods
or
xchg
dec
in
imul
adc
out
in
dec
subb
xchg
fiadds
daa
xor
das
into
and
gs
jge
popf
jecxz
jno
xlat
jne
xchg
arpl
cltd
or
out
mov
aas
jmp
fstps
push
sti
pop
outsl
scas
push
sbb
lods
sbbb
lock
repz
pop
inc
sbb
gs
mov
inc
adc
imul
push
daa
mov
jns
pop
aad
fadd
cmp
cs
aas
int3
imul
mov
dec
lahf
mov
inc
lcall
test
fcmovb
arpl
aam
push
xchg
or
mov
dec
aam
repnz
in
mov
es
mov
sarb
xor
imul
cmc
addr16
scas
xlat
jb
je
pop
sub
lahf
test
imul
andl
scas
jbe
jmp
xchg
fstpl
icebp
mov
xlat
inc
outsb
push
aad
xor
push
adc
or
ftst
in
inc
cli
movsb
mov
fisttpll
iret
test
in
and
push
xor
ds
movsb
push
xchg
sahf
or
nop
dec
push
jno
jmp
imul
inc
nop
jmp
popf
inc
mov
pop
xor
scas
out
notb
xchg
popf
pop
mov
addr16
es
pop
lret
fstl
xor
sbb
xchg
xchg
in
jnp
sti
mov
out
imul
jp
repz
ds
jo
cwtl
fistl
js
add
and
rcrb
pop
insb
and
mov
push
xchg
js
mov
add
movsbl
push
xchg
mov
sub
dec
fmuls
xor
in
add
pop
hlt
std
or
and
mov
push
repnz
lods
shll
add
dec
icebp
add
mov
gs
mov
mov
aas
jnp
rcrb
push
in
cli
cmp
sbb
rol
stos
add
repz
xchg
rorl
ss
bound
inc
inc
insb
and
mov
mov
aam
push
mov
xchg
push
fdivrl
aas
sbb
pop
ljmp
push
repz
lret
pop
je
mov
cmp
icebp
lock
push
jp
mov
jb
mov
rclb
outsb
jae
std
and
lahf
mov
scas
push
jmp
jmp
pop
xchg
ffree
imull
ds
movsl
ficomps
loope
jne
dec
ss
addr16
jae
cmp
inc
mov
fidivs
sub
xchg
sub
movsb
mov
outsl
inc
mov
insb
add
or
icebp
mov
arpl
push
test
pop
and
add
and
xor
add
icebp
lea
ds
data16
pop
jmp
pop
or
les
xor
ret
add
push
incb
lea
jo
dec
xchg
jne
jle
lock
das
data16
lcall
dec
out
int
xor
jp
lods
adc
adc
add
add
aas
bound
mov
stos
lea
and
das
mov
add
cmp
ds
mov
enter
in
push
je
jl
fstps
leave
and
xchg
or
sti
ja
xor
icebp
inc
and
je
loop
fs
add
mov
ss
jmp
jbe
adc
xchg
cmpsb
inc
mov
mov
pushl
and
iret
sub
inc
or
nop
je
pushf
out
popf
test
ret
xor
jmp
ret
test
mov
push
repnz
sbb
pop
cmc
mul
in
imul
xchg
leave
xchg
repz
cmp
adc
shll
mov
xchg
xor
es
movsb
xchg
xor
or
mov
inc
mov
clc
and
cmc
push
ret
into
adc
push
jne
xor
arpl
lahf
js
dec
je
fldt
xchg
pop
sti
and
or
mov
inc
xlat
in
pop
icebp
movsb
mov
push
or
aam
movsl
andl
pop
fiaddl
ljmp
mov
mov
jmp
lods
cs
mov
mov
adc
lods
in
or
iret
sbb
mov
pop
pop
aas
loope
mov
inc
rorl
jecxz
add
add
inc
std
pop
pop
xorb
dec
cmp
in
push
out
jo
xchg
lods
sub
aad
dec
push
aas
mov
or
popa
or
insl
cmp
mov
jne
fcmovu
mov
jb
or
scas
and
xchg
fimull
aad
nop
fildll
decl
les
or
pextrw
sbb
aad
mov
mulb
decl
xchg
mov
mov
shll
adc
jle
les
and
dec
out
adc
sarl
pop
mov
arpl
jnp
fldenv
mov
add
shll
cs
pop
sahf
fsubs
inc
icebp
fsubrs
mov
int3
dec
iret
stos
aad
sbb
repz
sbb
and
mov
and
mov
movsl
mov
xchg
gs
subb
mov
mov
int
dec
cmc
xlat
pop
sub
divb
lods
mov
int3
jns
addr16
cltd
add
subb
push
jbe
mov
xor
xor
pop
mov
xchg
js
in
mov
mov
add
iret
jge
into
int3
jo
ss
mov
mov
xchg
pop
push
fbld
sub
repz
sub
jle
gs
cmpsb
mov
push
adc
dec
ficoml
jp
xchg
xchg
pop
mov
out
pop
in
sbb
sbb
sahf
jns
xchg
mov
add
call
sub
cs
fsts
xchg
daa
icebp
push
lea
dec
push
jp
xchg
mov
in
pop
mov
adc
test
xor
ja
xchg
imul
dec
push
icebp
cli
jne
loopne
aam
nop
add
lret
ss
pop
out
or
jecxz
js
stos
addr16
sbb
divl
mov
dec
push
xchg
cs
pop
mov
dec
mov
ret
sbb
dec
add
daa
mov
xchg
xchg
inc
jbe
fs
dec
cli
push
mov
push
lods
test
stos
mov
mov
mov
pop
fistpl
jb
dec
xchg
gs
add
stos
mov
rcrl
out
inc
fists
mov
mov
addl
pop
pop
leave
test
and
and
test
sbb
dec
and
cmp
xchg
fst
push
lock
in
xor
mov
jmp
test
sbbb
xchg
mov
jmp
add
mov
mov
sub
mov
fsubl
jl
dec
in
in
and
aaa
mov
or
dec
loopne
jno
xor
sub
scas
lahf
push
push
pop
xor
pop
mov
ds
scas
push
sub
mov
pushf
inc
adc
push
sub
in
sbb
sub
dec
js
lods
sbb
mov
push
xor
adc
and
inc
loope
adc
mov
pop
iret
out
mov
int3
inc
dec
push
inc
pop
xor
push
push
mov
mov
sbb
cs
ja
imul
lds
bound
ss
icebp
push
sub
out
int3
sahf
in
pushf
dec
loopne
pop
push
aam
outsb
xor
or
sti
fldt
mov
aad
jo
mov
mov
jl
or
xor
lods
dec
in
or
popf
outsl
mov
rcll
movntps
or
add
sub
subb
cmpsl
push
out
ljmp
sbb
out
jmp
fwait
adc
clc
outsb
fs
mov
mov
mov
add
and
push
das
xchg
ja
dec
xchg
cmp
push
test
daa
pop
sub
fmull
jecxz
xchg
sub
and
testl
lahf
call
sub
mov
fistl
outsb
in
les
and
ror
inc
or
icebp
mov
cmpsl
leave
jmp
lret
sahf
gs
rcl
lods
mov
mov
imulb
lahf
xor
jae
cmp
or
ja
das
fs
popf
addr16
jle
lret
fcoml
les
rol
jl
dec
push
push
int3
lret
jge
jne
scas
ljmp
sbb
imul
insb
dec
fbld
dec
lahf
cwtl
push
scas
or
dec
pop
xchg
in
je
cmp
or
fmul
lds
addr16
dec
inc
and
sub
aam
jg
mov
fs
sbb
mov
push
mov
cwtl
testl
push
jbe
daa
cli
or
loop
pop
jp
pop
and
insl
push
jbe
lea
sahf
sti
loopne
sbb
in
adc
mov
push
out
sbb
nop
mov
jg
inc
mov
je
pushf
sbb
add
lods
iret
push
negl
and
jge
incl
icebp
pop
pop
sub
cld
mov
mov
movsb
out
cmpsl
fwait
push
push
lods
test
mov
jnp
outsl
out
xchg
lds
out
insb
movsb
sbb
cmp
xchg
mov
in
add
ds
mov
sbb
push
cmp
ljmp
adc
mull
jle
fisttpll
movsb
bound
repnz
push
lret
pop
ljmp
and
lea
jno,pn
or
mov
sahf
fwait
je
ret
cs
cmpb
fdivp
cmp
xchg
and
dec
xchg
dec
imul
add
fisttps
pop
ret
mov
xchg
lds
sahf
pushf
inc
push
out
jae
xchg
add
xor
test
daa
ret
aas
inc
sub
fisttpl
and
or
hlt
std
and
addr16
jge
xor
mov
dec
mov
mov
push
dec
fcmovu
out
mov
bt
aaa
pop
cmp
mov
aas
or
jns
pop
movsl
loopne
test
dec
and
xor
daa
ss
and
xchg
push
mov
pusha
jne
mov
dec
jge
or
daa
sbb
push
mov
inc
lea
jecxz
roll
sbb
push
imul
push
jne,pn
mov
push
aam
add
or
mov
pop
and
lock
xchg
lock
pop
insl
mov
ret
and
pop
pop
sbb
arpl
cmp
push
mov
pop
sub
dec
push
hlt
call
push
les
add
mov
jmp
dec
push
je
jmp
ljmp
mov
push
je
repnz
jno
int3
cmp
push
cmpsl
fpatan
cmp
mov
sub
icebp
sbb
lret
dec
inc
xor
jae
cld
dec
jae
imul
int
in
lea
pop
push
clc
movsb
inc
mov
or
lret
ficomps
adc
pushf
sbb
aas
ja
jae
je
fs
adc
nop
je
fdiv
popf
push
jb
dec
cli
out
int
xor
int
inc
clc
jge
test
fimuls
scas
out
xchg
or
out
inc
lods
push
jbe
xchg
add
sbb
imul
dec
stc
jg
xchg
lret
or
mov
xchg
movsb
loopw
in
je
lret
out
mov
lcall
lock
and
cltd
sub
popa
aad
pop
repz
cwtl
or
mov
or
xor
mov
je
ffreep
jae
mov
test
cmpsl
push
mov
out
sbb
bound
sbb
adc
xchg
popf
mov
data16
jnp
xchg
cli
cld
mov
jo,pt
testb
out
stos
call
push
in
pop
data16
vcmppd
outsb
sbb
xchg
imul
dec
xor
sub
add
lea
mov
in
sbb
hlt
add
xor
pop
icebp
xor
decl
lahf
or
sti
and
mov
and
xchg
mov
fwait
test
sbb
scas
adc
add
mov
gs
cld
bound
loope
mov
mov
sbb
pop
into
pusha
mov
mov
imul
sub
leave
int3
push
scas
dec
aam
test
inc
cmpsl
jae
pop
test
imul
iret
loopne
aas
cld
les
jbe
cli
aas
cmp
and
push
int3
repz
inc
push
cwtl
xchg
inc
loop
mov
push
dec
test
jno
lahf
fldpi
pushf
inc
je
sub
frstor
jae
pop
push
cli
cmp
movsb
lods
sub
inc
mov
jb
lods
cmp
and
adc
or
sti
adc
cmp
lock
add
jmp
mov
adc
dec
shlb
mov
fcmovbe
adc
negl
in
sbb
pop
jmp
inc
fstp
sahf
jno
mov
imul
loopne
xor
adc
mov
iret
mov
shl
inc
in
cmp
imul
jp
inc
shl
loope
pop
inc
ja
loope
xchg
ja
cwtl
movl
ljmp
jns
cmp
outsl
push
or
pop
sbb
push
jecxz
inc
push
aas
ds
and
sbb
pushf
or
clc
jecxz
out
add
jp
xor
daa
roll
inc
out
inc
push
dec
aaa
pop
jecxz
lea
in
jnp
ljmp
cmp
pop
sub
xchg
pop
test
subl
out
mov
adc
loope
jg
adc
mov
pop
add
in
imul
sbb
xchg
aas
adc
fiadds
shl
fdiv
jns
cmp
cmp
push
sbb
jmp
fisttps
fs
cmc
iret
jle
in
cmpsb
lahf
mov
xchg
leave
adc
stos
cmp
push
inc
pop
and
xchg
cmp
sub
sbb
insl
lds
mov
adc
cmp
aas
adc
js
dec
inc
lock
out
xchg
iret
xchg
fisubrs
test
xchg
fwait
icebp
rclb
outsb
fadds
and
cmp
add
jl
jl
dec
xchg
pop
pop
sbbl
mov
xchg
bound
dec
test
lock
in
and
dec
mov
pop
sbb
roll
pop
nop
mov
adc
out
pop
imul
push
adc
inc
mov
cwtl
bound
scas
stc
mov
adc
in
cli
or
mov
je
mov
and
mov
inc
insb
inc
fst
repz
push
mov
fiaddl
fnstsw
pop
cmp
mov
sub
out
cli
lock
mov
iret
add
arpl
dec
pop
ja
lds
test
cld
add
out
sbb
js
push
imul
fwait
xchg
or
bound
jno
inc
lock
mov
outsl
pop
dec
mov
jg
lods
and
push
outsl
jne
and
pop
cmp
jae
sbb
out
pusha
push
scas
das
mov
clc
fnstcw
test
xor
test
shrb
xchg
dec
mov
and
fcmovnbe
aaa
inc
out
mov
or
push
ljmp
out
sbb
loop
jno
in
push
loopne
test
mov
pop
push
arpl
add
push
push
mov
rolb
cmp
sub
lods
rcl
sbb
xchg
mov
pop
mov
lods
movsb
pop
and
mov
mov
les
pusha
dec
nop
mov
xor
ficomps
push
cwtl
mull
mov
ja
lret
scas
cld
mov
mov
fnsave
imull
cmp
push
jns
into
mov
test
dec
inc
pushl
mov
mov
add
lods
mov
nop
jno
or
movsl
jns
cmp
mov
int3
xor
mov
inc
mov
daa
xchg
pushf
add
pop
mov
inc
out
add
in
mov
loop
idivl
sub
add
sbb
sub
clc
arpl
frstor
or
loopne
icebp
rcl
sbb
sbb
out
and
pusha
dec
testl
fdivr
push
dec
div
fsubr
mov
sbb
cld
imull
adc
adc
sbb
popf
pop
aaa
shrb
stc
ds
out
ret
fwait
mov
pop
mov
into
push
daa
stos
inc
popf
jae
xchg
ret
cmpl
imul
push
xchg
pop
pop
jae
jle
lcall
pop
jns
inc
insb
fsqrt
dec
repz
pop
shlb
dec
pushl
cli
stos
cmpsb
or
in
pop
push
add
stc
cmp
xchg
push
inc
mov
insb
add
jae
popa
adc
cmp
pop
int
xchg
test
xchg
mov
hlt
mov
pop
dec
pop
out
stc
mov
pop
pop
sub
sahf
or
arpl
cmp
pop
xchg
adc
popf
pop
clc
adc
imul
add
scas
out
xchg
sub
movsl
xorb
inc
nop
mov
push
pop
fldl
les
jmp
cmp
pop
cmp
aam
mov
movsl
mov
mov
lcall
xor
mov
and
mov
inc
inc
xchg
lods
cmp
rorl
inc
in
cmp
pop
push
test
cltd
stos
aas
lods
fwait
mov
and
lahf
xchg
push
push
movsl
mov
mov
sub
inc
cmp
fmuls
jns
mov
rolb
dec
mov
arpl
pop
pushl
in
xchg
gs
mov
fiaddl
mov
enter
lock
cmp
cmpl
loope
mov
jb
fisubl
hlt
sbb
js
pop
sbb
and
add
lret
pop
mov
mov
xor
xchg
and
aas
clc
int3
adc
jne
test
mov
mov
push
jg
xor
adc
cmc
or
inc
sti
jmp
rorl
outsb
fisubl
xor
pop
gs
mov
aaa
mov
or
mov
cmpsb
ds
rolb
sbb
jne
es
test
sbb
and
pop
and
sbb
mov
inc
scas
xchg
lahf
pop
add
addr16
sbb
cwtl
push
inc
shrl
fsts
cmp
sbb
adc
xorl
cli
sub
push
add
xchg
pop
call
clc
dec
addr16
mov
aam
in
push
push
cltd
mov
push
dec
mov
shrb
mov
lcall
xor
and
ret
sbb
imul
aam
lcall
dec
add
fstps
int
dec
out
push
fwait
popf
imul
outsl
inc
into
xchg
dec
cwtl
inc
mov
daa
sbb
push
fs
cltd
and
add
push
xor
push
cld
insb
fldl
sbb
dec
adc
pop
sarb
adc
sub
xchg
cmp
inc
sti
enter
xor
or
jmp
fnsave
mul
movsb
jno
or
xchg
mov
pop
les
pop
loop
and
ret
push
dec
es
xchg
ja
jl
xlat
or
xor
or
sti
mov
sbb
lahf
xchg
xchg
das
js
lds
sub
fsubrl
adc
into
ja
fldenv
add
cmp
mov
inc
pop
je
jne
jecxz
inc
mov
popf
repnz
test
out
sub
inc
dec
xchg
sahf
ja
pusha
cltd
add
arpl
adc
scas
pop
jne
sahf
mov
popa
sub
divl
jne
adc
leave
movsb
mov
mov
fistpl
scas
dec
sub
push
mov
adc
and
pop
jecxz
xchg
mov
aaa
out
sub
inc
rcr
adc
repz
out
xor
cmp
adc
mov
iret
out
push
mov
sbb
out
sub
mov
cmpsl
and
pop
fidivrs
pushf
out
mov
imul
rol
xor
push
cmp
int3
dec
movsl
fnsave
pop
ss
test
mov
mov
adc
mov
mov
mov
pop
cmp
mov
popf
fidivl
test
mov
daa
cmp
aad
mov
jge
cmpsl
enter
loope
dec
jns
mov
cwtl
adc
jb
dec
jne
sub
xor
adc
xor
mov
aas
jp
enter
or
xchg
scas
out
mov
sbb
xchg
imul
arpl
inc
into
cmpsb
and
dec
mov
dec
xchg
imul
jge
mov
or
inc
dec
and
arpl
int
push
pop
push
and
push
int3
push
pop
inc
inc
lea
aam
mov
inc
fdivr
in
ret
mov
mov
sti
jo
inc
add
mov
aam
sbb
push
mov
inc
icebp
movsl
cmpsl
fidivs
sarl
adc
sub
aas
movsl
push
xchg
xchg
sarb
out
imul
sbb
sbb
outsb
hlt
bound
jnp
movl
mov
je
outsb
stos
notb
das
fwait
sbb
fwait
mov
scas
mov
push
cwtl
push
pmullw
pop
sub
cmpsb
repnz
mov
cmpsb
mov
mov
iret
xor
aad
jmp
fxch
and
cmp
sarl
out
popf
hlt
imul
jl
mov
and
push
cwtl
movsb
push
fimull
lret
in
mov
cwtl
ficoms
inc
push
inc
cmovo
dec
iret
jl
adc
shll
dec
mov
lods
xchg
jl
xchg
xor
pop
icebp
dec
cmpsl
jp
sub
popf
or
clc
cmp
or
xor
push
xchg
pop
shl
inc
mov
std
pop
sbb
cwtl
add
jp
or
bnd
xchg
and
jle
mov
sub
lods
dec
mov
add
inc
adc
cmp
sbb
movsl
adc
arpl
mov
ret
push
mov
je
shl
jnp
jo
adc
clc
sti
fdiv
xchg
call
and
mov
repz
cmp
rorb
and
fcmovnu
xor
inc
divps
cmpsl
clc
xor
adc
jno
into
dec
aaa
push
sahf
inc
rorl
popl
aad
sahf
and
loope
jl
jl
cmp
adc
add
les
mov
cmp
pop
inc
jge
mov
imul
mov
scas
cltd
or
mov
and
icebp
jbe
fwait
mov
sbbb
cmp
loope
or
das
nop
insl
insb
xor
mov
mov
int
vpmaxub
mov
adc
add
sub
ret
push
mov
push
cld
movb
shrl
cmp
pop
jmp
int
sahf
popf
pop
lea
jecxz
aam
mov
pop
fnsave
push
test
bound
cmp
cmpb
decl
stos
lahf
mov
jmp
testb
inc
mov
rol
and
mov
xchg
out
shll
nop
sub
adc
push
pop
fs
mov
in
or
xor
enter
add
jp
jg
adc
xchg
mov
pop
cwtl
arpl
pop
jne
pop
add
jmp
movsl
loope
int3
xor
or
arpl
xor
imul
sub
repnz
mov
inc
push
imul
outsl
sbb
mov
sub
in
movsb
lahf
sub
gs
scas
add
mov
adc
dec
inc
xor
xor
int
in
cmp
scas
enter
icebp
cmpb
mov
test
inc
cmpsb
adc
stos
gs
jne
xor
insl
adc
adc
aam
sub
clc
xchg
scas
gs
fsts
lds
imulb
jns
xchg
leave
lods
fsubrs
out
gs
mov
pop
das
mov
mov
je
xchg
sbb
pop
stos
shll
jge
fcomps
dec
xchg
mov
ret
je
mov
and
cmp
mov
outsb
push
ret
or
pop
loop
mov
cmp
adc
mov
sti
and
dec
sbb
xchg
shrb
loope
mov
push
add
xchg
int3
add
xor
test
mov
add
mov
or
pop
adc
fisubs
fwait
rcl
inc
repz
fs
sbb
xchg
lods
out
xor
mov
rorl
imulb
cld
rcr
mov
mov
repz
cmp
les
add
xlat
push
jge
inc
int3
gs
xor
fadds
cmp
jae
jne
adc
lcall
pop
out
xor
push
ja
lcall
insl
and
movsb
add
lea
or
int3
repz
in
aam
cltd
or
cltd
das
pusha
arpl
loopne
push
sub
sahf
icebp
mov
push
mov
pop
imul
jne
push
pop
test
je
cmp
pusha
ss
sub
lock
loop
out
cmp
push
jp
dec
into
jle
sarb
das
cmp
negl
mov
shlb
dec
adc
mov
fwait
aas
jae
add
fisttpll
fisttpll
fcmove
in
ret
push
stos
stc
icebp
jb
sbb
jmp
mov
cmpsl
jns
adc
pop
lahf
cmp
rcl
in
inc
xor
imul
push
push
int
cmp
inc
addl
lret
pop
leave
aas
inc
sbb
add
sbb
pushf
aad
mov
inc
into
fwait
bnd
xlat
test
icebp
xor
and
push
fcmovb
pusha
jnp
int
cmp
mov
ret
push
pop
push
mov
sbbl
aad
icebp
int3
in
mov
fcoms
xor
lea
iret
jae
mov
sub
inc
das
ret
mov
mov
sub
dec
mov
xchg
call
dec
es
cmp
and
hlt
dec
outsb
cmp
add
test
inc
in
ja
pop
jnp
pop
push
aas
flds
mov
dec
sub
add
fs
push
jge
in
jge
mov
add
popa
lret
mov
rorl
cmp
mov
lods
mov
mov
cmc
imul
sarl
cltd
sar
addps
pop
sub
addr16
aam
adc
imul
movsl
dec
test
mov
cmp
inc
fwait
pop
and
jle
push
mov
cmp
mov
fwait
adc
ds
mov
leave
push
call
ds
sbb
std
push
sti
jmp
inc
loopne
dec
add
mov
lret
sub
mov
mov
in
movsb
adc
push
lahf
lret
aas
lods
fs
mov
xor
outsl
push
or
cmp
mov
ds
pop
jo
cmpsl
dec
jbe
or
sbb
adc
ret
pop
inc
push
mov
pop
inc
push
repnz
mov
mov
pop
jb
mov
xchg
movsl
push
rcr
push
xlat
pushf
cltd
sti
icebp
jae
mov
or
shlb
dec
sbb
sbb
xor
por
lcall
jp
outsl
lret
push
test
cwtl
sbb
push
add
jl
jg
or
mov
ds
push
pop
push
ret
jno
xor
push
aad
sbb
aas
icebp
cli
mov
je
push
or
inc
and
scas
imul
scas
adc
aad
mov
sub
lcall
fcomps
mov
inc
xchg
lods
paddd
inc
das
jmp
pop
jg
bound
fnstsw
mov
sbb
sub
imulb
lret
pop
pop
push
adc
sti
inc
fcmovbe
iret
test
in
gs
aad
fistpll
jnp
out
outsb
incb
insl
mov
vpmovw2m
ds
cmp
jb
incl
pop
fmull
stc
and
push
xchg
xchg
test
rolb
push
xchg
push
fstps
out
icebp
dec
int
popa
mov
int
test
test
stos
orl
inc
stc
negl
je
mov
sub
adc
clc
and
mov
sti
addr16
mov
inc
ds
adc
or
addl
push
dec
sbb
test
mov
jl
inc
scas
das
sub
jecxz
sbb
or
or
movsb
loop
mov
inc
ficomps
hlt
adc
pop
out
imul
xor
test
jge
jns
shrd
aas
sub
mov
imul
pop
aam
popa
enter
shll
xor
push
cmp
sub
popa
adc
imul
imul
inc
mov
mov
fadds
call
mov
mov
mov
ret
out
inc
sbb
mov
imul
adc
outsb
cmp
repnz
push
lret
and
push
pop
lods
addr16
add
cli
faddl
mov
or
sub
sbb
lahf
stos
lock
sub
dec
mov
cmpsb
adc
rorb
mov
ret
imul
rorb
cmpsl
mov
ss
mov
ljmp
les
data16
jne
mov
push
sbb
into
frstor
pop
aaa
pop
movsl
push
shlb
add
jl
leave
repz
lahf
cmpsl
adc
xchg
loope
js
ror
jb
rorl
pop
dec
push
pop
nop
ret
xor
dec
bound
jo
sbb
mov
pushf
lock
leave
cld
sbb
xor
pop
es
in
icebp
popa
repz
inc
js
inc
sbb
cmc
lcall
fwait
ljmp
xchg
popa
mov
push
dec
aas
dec
es
pop
nop
aad
or
mov
dec
int3
nop
mov
stos
cs
jo
outsb
mov
xchg
dec
add
adc
push
shll
es
sbb
dec
sbb
cmp
mov
ja
or
xchg
sarl
xor
xor
or
push
scas
push
xor
hlt
xchg
and
xchg
pop
fnstenv
push
lods
push
or
cmp
cwtl
dec
lahf
and
cli
icebp
ljmp
mov
inc
mov
jl
xchg
int3
inc
xlat
push
imul
ds
jg
and
pop
dec
fimuls
out
adc
leave
fs
pop
movsb
mov
ss
insl
mov
xorb
dec
mov
xchg
xor
ficoms
ret
adc
inc
mov
outsb
or
sub
popl
xchg
push
in
ret
popl
out
push
jno
lods
jbe
lea
mov
icebp
inc
lock
adc
xchg
push
enter
lock
mov
mov
cld
inc
test
cmp
pop
aaa
cmp
inc
fs
inc
push
vlddqu
push
inc
fistpl
mov
fwait
in
in
leave
jnp
cs
dec
scas
cmp
pop
xor
fdivrs
and
add
insl
push
xchg
call
pop
in
jle
dec
sub
or
sub
je
jmp
imul
insb
jbe
jns
rcl
insl
mov
out
push
icebp
insl
jnp
mov
lods
pop
push
call
add
lods
test
rcrl
jmp
lcall
pop
bound
or
push
add
jnp
insl
sub
imul
adc
out
mov
sbb
clc
lret
xchg
cmp
or
cmp
rcrb
and
adc
mov
adc
dec
mov
scas
jb
xchg
push
sub
fdivs
das
jb
std
decl
adc
pop
lahf
mov
inc
xor
pusha
mov
and
in
or
sub
pop
jecxz
jae
cmp
stos
lret
sub
and
pushf
xor
ror
leave
stos
push
xor
or
sbb
xchg
lock
mov
xchg
loop
mull
into
sbb
icebp
das
and
mov
in
lock
add
inc
aad
sbb
sbb
jl
rorl
cmp
xor
add
les
mov
add
jb
mov
andl
mov
cmp
mov
loope
insl
cmc
je
lahf
adc
sub
mov
and
mov
jno
lahf
pop
in
mov
inc
mov
inc
adc
sbb
iret
inc
inc
dec
clc
xor
stc
inc
push
insl
push
pop
cs
adc
cmp
fdivl
add
jno
imul
leave
push
orl
mov
frstor
push
rcrb
dec
sub
pop
or
rcll
jns
ljmp
dec
pop
adcb
sbb
inc
filds
out
movsb
inc
mov
cmp
push
adc
and
and
int3
and
or
outsl
xor
cmpsl
testl
jb
test
dec
dec
cmpsb
les
pop
sbb
xchg
cmp
cmc
loopne
jl
fs
hlt
in
loop
aaa
int
loop
mov
ljmp
adc
mov
mov
jl
gs
out
or
mov
adc
xchg
mul
arpl
inc
jge
icebp
pusha
std
and
xor
xor
sub
mov
fldl
push
mov
pcmpgtb
jmp
push
add
lods
push
sbb
inc
cmp
inc
mov
mov
pop
or
scas
out
mov
scas
fnstenv
mov
xchg
inc
rcrb
mov
mov
repz
icebp
and
loopne
out
mov
inc
jp
pop
mov
fdivl
int
iret
dec
push
add
or
nop
fisubrs
rep
xor
and
or
daa
aad
sbb
inc
stos
aaa
je
into
jne
movsl
pop
dec
inc
les
xchg
pop
jnp
jl
mov
out
add
xor
outsl
ficompl
dec
push
ljmp
incb
inc
jnp
fistps
test
aaa
or
enter
mov
xchg
mov
jge
aas
mov
les
hlt
jp
inc
pop
cmpsl
stos
jae
popa
test
add
pop
imul
sbb
aam
pop
or
dec
addr16
adc
and
out
rol
pop
push
mov
push
push
pop
sub
xor
xlat
scas
fwait
mov
iret
cmpsb
xchg
sub
adc
lret
mov
xor
ret
scas
sub
or
or
add
mov
adc
scas
mov
cmpsb
jae
xchg
and
mov
push
lahf
jge
pop
test
sbb
insb
and
pop
lds
rcl
jb
push
sbb
pop
xor
jns
pop
jnp
mov
lea
mov
pushf
in
push
jge
lcall
loopne
cs
add
xchg
int3
shll
movsl
mov
popa
xchg
add
iret
pop
jnp
sub
addr16
pop
stos
cli
lods
push
xchg
pop
out
clc
test
mov
shlb
loop
sub
and
ficompl
sbb
rcrb
stos
lods
pushf
and
mov
dec
cmp
mov
fstpt
ficoms
mov
push
ror
or
jo
int
cmp
lret
test
or
test
push
add
jl
jg
jne
inc
jg
jne
hlt
js
insl
gs
xchg
insl
sub
addb
add
jbe
addr16
repnz
lds
xchg
cs
dec
fsubr
test
fwait
and
stc
inc
xor
mov
insl
mov
rorb
scas
xor
mov
aad
mov
inc
sub
fs
mov
inc
jb
lea
inc
xor
xchg
mov
inc
pop
inc
pushf
incb
push
adc
ret
jb
nopl
lods
call
fsubrp
push
test
adc
nop
push
mov
jge
cmp
int
lret
test
inc
pop
adc
pop
aas
test
std
jmp
or
ds
ljmp
iret
test
push
mov
imul
dec
add
jmp
add
je
and
aaa
jns
mov
test
ret
fs
stos
jnp
jmp
out
lods
mov
int3
ljmp
shll
xlat
sub
bound
push
loope
bound
sbb
aad
or
fildl
insl
cmp
cwtl
nop
enter
inc
xchg
jmp
add
cmpl
sbb
outsl
sub
inc
pop
mov
fs
enter
or
xor
mov
adc
or
insl
js
xchg
jg
movsb
or
push
test
ss
xor
popa
movsl
in
js
cmp
mov
cltd
push
js
pop
sub
jmp
not
xor
pop
pushf
dec
xor
jle
and
mov
cmp
loope
adc
loope
inc
mov
scas
fbstp
lods
xchg
scas
or
into
fstpl
cmp
aad
jae
fcoms
xor
xchg
xchg
shlb
xor
cwtl
xchg
xchg
testl
mov
mov
ss
pushf
or
push
push
adc
jmp
repz
mov
pop
cmp
pop
dec
jmp
insl
jb
cmp
cltd
mov
push
ja
xchg
jbe
loopne
and
adc
or
mov
and
pcmpeqb
repnz
sahf
cmc
jg
lock
inc
or
adc
inc
xor
loope
mov
sub
fldcw
or
mov
cs
push
loop
je
outsb
fwait
sbb
imul
scas
shll
popa
imulb
aad
inc
loope
adc
or
sub
or
jae
xor
pusha
movsb
push
into
pop
dec
pop
cmp
scas
cli
dec
push
fdivrs
js
adc
inc
lret
and
es
popa
into
bnd
aaa
xchg
cld
addr16
add
lar
mov
insl
pop
in
in
aam
pop
jns
into
sarl
add
pop
out
or
pop
adc
xor
clc
pop
xor
xchg
stos
xor
into
mov
ljmp
jl
dec
inc
leave
ljmp
repz
jmp
stos
and
pop
mov
sub
ljmp
out
and
mov
xchg
repnz
movsl
iret
hlt
add
adc
cli
dec
fiadds
lds
arpl
jae
addl
xlat
dec
inc
mov
insb
rcrb
sub
inc
inc
std
pop
push
insl
jp
ret
out
addr16
popf
xchg
jl
and
fisubrs
inc
jle
pusha
hlt
mov
mov
or
pusha
push
inc
outsl
repz
lahf
mov
int3
inc
xor
pop
mov
enter
cmp
sahf
push
jl
push
ljmp
in
or
mov
hlt
js
or
cmpsl
subl
xor
cmp
jecxz
daa
les
loopne
iret
jp
sub
push
add
sbb
cmp
sub
and
test
les
add
divb
sub
add
adcl
add
aaa
in
subl
pop
stc
shrl
xchg
push
jg
mov
pushf
aaa
jmp
imul
sbb
fmuls
push
aas
dec
out
in
out
cmp
mov
adc
insl
xchg
and
push
insb
jecxz
es
mov
cli
sub
negb
insb
std
cmpsl
xchg
mov
mov
push
int3
sub
repz
pop
and
movsb
jmp
jbe
insl
cmpb
jnp
adc
or
dec
sbb
int3
inc
repz
lods
fidivrs
inc
sti
xchg
dec
push
jno
jne
cltd
scas
xchg
ja
ljmp
cwtl
subl
cmpsl
aam
enter
addl
movsl
cmpsl
jbe
sub
enter
cmp
pop
dec
dec
push
loope
xchg
ret
lea
pushf
lods
jbe
shrl
mov
cmp
jmp
mov
lret
lahf
cmpl
inc
sarb
cltd
push
icebp
and
clc
dec
fldl
adc
mov
inc
leave
push
add
mov
das
sub
shl
cmp
xchg
fbstp
or
addb
cmp
ret
test
jl
inc
jnp
es
stos
xlat
addb
faddl
loope
sub
arpl
mov
movsb
pop
jo
sbb
cltd
addr16
lret
fidivrs
pushf
popf
cmc
mov
cmp
jp
add
push
xchg
fisttps
or
push
fwait
xchg
mov
sub
jmp
shll
test
cmpsb
jmp
xor
push
insl
dec
xor
inc
lahf
sbb
stc
mov
das
nop
outsb
ficoms
and
ja
outsb
test
outsb
sbb
sbb
loope
imul
dec
lcall
out
loop
pop
mov
daa
mov
xchg
xchg
sbb
push
fisubrl
loope
mov
add
loop
mov
out
adc
test
subl
js
push
scas
lds
insb
ds
push
aad
pop
xor
lea
cmpsb
das
ljmp
pop
clc
insb
fidivrs
cmpsl
or
in
mov
or
mov
pop
or
mov
leave
xchg
mov
es
push
ss
push
dec
push
mov
hlt
xchg
mov
scas
sub
rolb
sub
xchg
cmp
shll
mov
mov
aas
outsb
mov
outsl
xorb
mov
sub
xor
loope
pop
pop
jns
jns
bound
cmpsb
popa
push
test
int
xchg
add
mov
cmpsb
sub
pop
out
pop
and
mov
inc
jae
inc
mov
into
pop
lds
jge
pop
cmc
mov
ret
fistpl
lods
rcrb
mov
jae
js
hlt
xchg
ss
frstor
stos
fs
cmpsl
out
loopne
push
dec
jl
fsub
dec
and
mov
dec
pusha
jg
xchg
in
pop
jb
stc
jbe
mov
out
pop
aam
jl
and
sbb
idiv
sub
push
js
adc
inc
sbb
jecxz
mov
mov
jge
in
or
fimuls
aas
in
xchg
pop
negl
or
andb
mov
popf
inc
dec
inc
mov
fcoms
pusha
addr16
out
inc
push
sti
mov
pop
push
rcl
dec
int
xlat
and
dec
jnp
inc
dec
add
int3
fcomps
bnd
decl
cltd
jno
int
sub
mov
or
xorl
add
mov
mov
inc
mov
fildl
pop
aaa
insb
add
jmp
inc
orl
push
into
sub
push
xchg
and
mov
scas
dec
xchg
pop
inc
sbb
pop
std
rcrl
arpl
pop
xchg
jle
jecxz
lret
or
push
lods
fildll
movsl
fwait
adc
lods
inc
xor
jg
xor
roll
push
jle
int3
dec
push
jmp
fs
addr16
aad
fists
dec
sub
push
aaa
adc
mov
adc
fistpl
xchg
cli
jp
shlb
mov
addr16
mov
in
fisttpll
mov
push
and
or
lahf
sbb
mov
add
test
mov
sub
jns
call
inc
dec
icebp
gs
pusha
xchg
cltd
loope
call
sub
incl
adc
icebp
push
or
fdiv
scas
mov
hlt
cltd
pop
mov
cmpsl
jecxz
inc
lahf
push
pop
pop
int
shrl
stc
hlt
xchg
push
clc
push
sub
sub
arpl
jle
andb
in
mov
jns
mov
jle
paddd
adcb
jb
xor
xchg
mov
pusha
push
jmp
push
dec
pushf
pop
fisubrs
cmp
or
mov
mov
lcall
imul
xchg
cmp
lcall
xor
mov
in
inc
and
push
pop
xlat
stos
out
outsl
int3
cs
adc
xor
xor
mov
rcrb
or
mov
pop
and
xchg
pop
leave
sarb
shr
pop
lds
and
out
daa
inc
push
movsl
in
lret
adc
inc
pop
inc
repnz
fidivl
rol
cltd
xor
rorb
jns
dec
outsl
iret
sbb
ds
inc
fists
aas
or
in
mov
sbb
mov
cli
aaa
orl
push
das
scas
test
inc
jecxz
xor
mov
orl
shrb
js
cmpl
pop
addr16
inc
pop
dec
movsl
les
add
scas
dec
add
fs
mov
scas
bound
mov
push
dec
and
mov
ds
push
andb
dec
into
add
mov
sarb
daa
es
std
mov
repz
push
mov
push
mov
mov
lds
out
lea
imul
adc
mov
test
jae
fnstenv
icebp
lret
pop
sti
push
mov
push
or
call
mov
or
or
out
dec
aam
fcmove
ficompl
call
push
addr16
scas
jg
pop
push
cmc
add
sub
fstpt
out
cmp
sub
scas
lret
mov
insb
fs
fstl
dec
enter
xor
out
je
dec
cmp
pop
fbstp
test
lds
push
icebp
int
ja
inc
push
push
mov
mov
je
xchg
mov
dec
push
loopne
test
dec
daa
aaa
gs
cld
into
xor
fistpll
aaa
mov
js
mov
adc
icebp
subb
int
sub
and
js
xchg
andl
or
sahf
gs
int3
stos
pop
inc
inc
cmpsl
stos
mov
test
push
cwtl
adc
push
sbb
mov
ret
pop
push
or
and
cld
nop
les
add
cmp
xchg
dec
data16
adc
popf
or
cmpsl
adc
fisttpl
punpcklbw
and
mov
add
pop
jmp
cli
sub
flds
inc
addr16
pop
aad
sub
insl
and
inc
sbb
push
rcrb
les
jg
pop
testl
fwait
daa
inc
inc
xchg
push
mov
or
add
insl
jns
bound
push
repnz
movsb
fnstcw
xorb
mov
hlt
dec
push
fbld
xchg
sbb
mulb
pop
rolb
stos
bound
cmp
stc
and
out
adc
gs
out
pop
movsb
inc
mov
mov
fistpl
fildl
in
cmp
pop
aad
shl
and
mov
xor
add
pop
dec
shlb
pop
or
gs
dec
add
jmp
cmp
push
icebp
push
xchg
mov
pop
push
aad
test
loope
clc
xchg
andl
cmp
stos
jns
jne
stos
xor
dec
lret
mov
pop
in
mov
maxps
in
xor
dec
cwtl
jbe
push
mov
fwait
mov
xchg
sbb
xor
pop
mov
fildll
sbb
loope
cmp
lret
inc
aam
scas
lret
jne
or
dec
lea
idiv
test
xchg
cmpsl
std
jmp
in
leave
lock
fwait
in
fnstsw
fwait
ret
inc
xor
repz
lahf
jb
stos
sti
int3
inc
mov
pusha
push
imul
mov
aas
and
pop
sahf
add
cmp
idivl
aam
mov
repnz
fwait
movl
out
jne
gs
in
xchg
imul
add
dec
xchg
out
mov
mov
pop
dec
pop
jo
stos
repz
pusha
aaa
lret
push
jae
call
jl
arpl
cltd
ret
leave
pop
inc
jle
lea
shll
xchg
sahf
leave
lahf
insl
inc
pop
adc
jg
jne
rcll
mov
mov
pop
inc
pop
loopne
pushf
inc
mov
add
push
repnz
rcrb
ss
cwtl
xchg
mov
je
ds
and
ljmp
adc
loope
mov
mov
inc
adc
sahf
sahf
aam
scas
lds
in
idivb
outsl
cmc
jp
sbb
push
push
pop
push
cld
mov
add
inc
sub
shl
je
and
dec
mov
ror
scas
or
insb
mov
mov
imul
imul
ffree
sahf
out
mov
xchg
outsl
ja
or
sahf
pop
jne
jo
aas
bnd
mov
roll
icebp
mov
loop
mov
mov
rorb
into
push
gs
fmul
adc
push
std
pop
jbe
dec
scas
jns
fwait
sarl
jmp
ss
es
roll
push
or
xor
mov
icebp
movsb
dec
xchg
pop
lea
nop
add
push
lock
mov
sbb
bsr
stos
cmp
xchg
imul
into
pop
hlt
cmp
pop
loope
cmpsb
jns
movsb
sub
fwait
push
cmp
cli
pusha
mov
push
xchg
and
fdivl
push
push
mov
leave
clc
sub
mov
sbb
inc
into
cmp
and
popf
push
fdivs
pop
push
gs
insb
movsb
or
fwait
push
dec
sbb
je
jg
mov
jbe
nop
fcmove
aad
ss
sbb
pusha
jge
jne
or
mov
xchg
mov
loope
cmpsl
call
mov
jg
test
ret
or
xchg
icebp
in
test
cmc
mov
mov
push
je
pop
or
mov
or
pop
hlt
or
xchg
aad
dec
xchg
lds
pusha
rcrl
dec
or
insb
mov
mov
pminsw
cmp
and
mov
fldl
xchg
push
xorl
mov
lods
repz
cmp
icebp
pop
popa
dec
dec
xchg
mov
xor
adc
nop
nop
movsl
inc
add
cmp
shlb
cli
sbb
xchg
imul
cli
push
inc
pop
std
sub
loopne
aas
ljmp
mov
call
mov
mov
xor
outsl
pop
scas
fadds
mov
mov
cmp
pop
xor
jmp
shll
pusha
dec
loopne
mov
int3
dec
in
mov
sbbb
das
loop
sbb
mov
decl
or
fstl
jne
stos
lock
imul
xchg
push
icebp
ljmp
nop
pushf
ret
dec
pusha
into
sbb
xor
movsb
or
mov
pop
sarl
shr
cmp
fsts
inc
mov
and
or
and
mov
stos
loopne
jae
inc
mov
ret
cwtl
fxch
mov
fisubrs
cmp
incb
cmpl
pop
sub
fstpl
mov
push
pop
push
insl
negl
pop
fstl
push
cmp
push
dec
mov
loope
movsl
out
pushf
ds
cmpsl
mov
addr16
bound
aam
pop
cld
push
notb
mov
lcall
jno
int3
jl
cwtl
push
jo
bound
stos
sbb
fmull
xor
sbb
xor
sarb
sbb
xchg
incb
mov
popf
dec
xchg
scas
ja
pop
out
je
and
adcb
add
xor
or
xchg
pop
xchg
xor
lods
add
js
xchg
jno
addr16
xor
add
cmpl
jp
cli
pop
pop
daa
jbe
cltd
popf
cli
js
sti
jge
test
add
pop
dec
cmp
imul
fwait
sbb
fisubrl
push
cmpsb
sbb
addr16
pop
cmpsl
and
dec
cmpsb
xchg
divl
fldcw
rorb
add
jno
xchg
in
test
outsb
js
insb
sbb
jl
xchg
repnz
and
sub
inc
push
pop
loopne
lahf
jno
push
incb
jnp
dec
or
sbb
adc
add
cmp
push
pop
cmpsb
enter
test
loopne
aas
xor
sbb
lods
mov
shlb
movsl
insb
dec
aaa
mov
sub
xor
rolb
ds
fidivs
popf
fwait
mov
xor
test
push
mov
inc
sub
pop
mov
dec
push
in
add
fsubrs
xchg
add
dec
and
pop
int3
orl
cltd
stos
stos
sub
pop
cmp
inc
add
jae
enter
mov
inc
jne
dec
aad
mov
xchg
inc
xchg
and
int3
mov
dec
cmp
in
popa
rorb
push
jo
sub
push
cmc
add
fisubl
bound
iret
inc
sbb
sbb
pop
daa
sbb
inc
sti
push
scas
andl
inc
ret
rcrl
mov
fisttps
xor
cmc
xor
dec
pop
std
hlt
lret
repz
loope
je
sahf
idivb
push
dec
push
icebp
or
xor
inc
aas
dec
mov
jge
leave
xchg
pop
add
outsb
cwtl
jno
sbb
mov
pop
mov
mov
js
insb
movsb
into
cmc
iret
sub
jg
insb
insl
mov
rol
ret
lds
ret
or
push
xor
xchg
mov
cmp
jne
cmp
js
add
mov
mov
push
and
repz
xchg
test
lret
jge
cmpsb
lock
cwtl
sub
bnd
jbe
mov
xchg
adc
jle
jmp
ss
jns
in
outsb
push
jp
cs
xor
shl
in
in
sub
jmp
and
cmp
imul
stc
hlt
aam
fidivl
mov
mov
mov
adc
fs
or
xchg
lcall
ret
loopne
add
bound
push
and
mov
or
push
dec
repz
lods
mov
xchg
int
add
sahf
jo
push
lret
outsb
jns
mov
out
mov
loopne
mov
std
or
daa
test
shl
cmp
sub
sbb
mov
push
out
mov
xchg
test
xlat
mulb
sbb
cmpsb
jae
loopne
xchg
lea
mov
testl
hlt
adc
iret
out
adc
cmp
and
pop
notl
sbb
negb
fstps
idivl
cld
arpl
mov
add
mov
divl
ja
push
push
sub
pop
xor
xorl
mov
arpl
fdivrl
sarl
xchg
test
cmp
add
inc
fistpll
mov
movsl
rcl
mov
in
and
xchg
inc
inc
cmp
scas
jle
lahf
out
mov
xlat
cmpsb
add
add
sbb
mull
and
ljmp
ficoml
aad
adc
icebp
jl
mov
and
cmpsl
sub
mov
mov
xor
mov
or
or
xchg
jle
mov
aas
enter
cs
or
roll
insl
cmpsb
jge
fmuls
or
add
sub
lcall
addr16
and
addl
push
add
test
imul
and
push
mov
jle
mov
cwtl
or
push
xchg
shrw
mov
mov
mov
nop
mov
fstl
cmc
adc
lock
xor
js
mov
inc
dec
cli
add
arpl
lea
or
mov
fnstenv
push
iret
mov
push
xor
les
jne
sbb
cwtl
xor
pop
repz
into
movsl
shl
dec
enter
xchg
jnp
je
xor
mov
dec
daa
lret
pop
inc
push
loope
xchg
fwait
imulb
addr16
fsubrp
insl
add
mov
jmp
xchg
mov
movsb
mov
push
imul
dec
or
jmp
ss
stos
insl
push
xchg
int3
je
and
scas
jecxz
push
add
pusha
adc
das
xchg
inc
ljmp
jp
push
aam
jae
jmp
dec
pop
jns
jge
mov
jb,pt
nop
mov
jae
inc
and
outsl
jge
pop
aaa
loope
jg
ss
add
pushf
jns
mov
and
xchg
int3
leave
sbb
pushl
loope
push
dec
xchg
lods
sbb
dec
add
bound
push
popa
push
in
pop
inc
stos
mov
lahf
imull
jne
lea
mov
push
aaa
test
test
push
inc
mov
adc
add
das
and
mov
or
cmpsl
lret
xor
das
into
dec
rorb
jecxz
test
dec
aas
xor
sub
sub
inc
mov
pop
xchg
ret
testl
push
mov
stc
sub
mov
push
jl
cmp
push
jmp
nop
fdivrl
jge
inc
xchg
push
cmp
mov
addr16
xor
adc
adc
scas
adc
cwtl
pop
stc
lock
dec
data16
push
jl
pop
xchg
ret
push
pop
imulb
out
test
pop
dec
shl
mov
mov
repnz
icebp
push
push
add
out
js
mov
lods
jmp
rcll
mov
mov
aas
pop
mov
cmp
cmpsl
add
jns
add
add
cltd
and
ret
cwtl
mov
pop
insb
das
or
out
mov
cmpb
adcl
xchg
ret
out
imul
pusha
sahf
aad
jo
pop
or
or
jbe
sbbb
scas
sbb
jns
xor
fadd
into
sarb
mov
or
pop
das
pusha
sub
das
int3
lcall
sti
mov
or
sub
loopne
test
fists
push
cmp
sbb
fdivrl
sbb
mov
jb
jns
xchg
cli
flds
insl
sbb
dec
or
dec
lock
ret
enter
pop
in
lock
jl
rcrb
pop
sbb
xchg
cwtl
sahf
data16
enter
popf
outsl
aaa
mov
sbb
mov
cmp
mov
cwtl
shrb
mov
fs
pop
sub
sbb
mov
add
insl
cmc
dec
push
loopne
sahf
sti
pop
incb
loop
fistps
mov
loope
daa
iret
sbb
cmpsb
stos
pop
inc
icebp
outsb
mov
and
or
popl
adc
cmp
jb
scas
and
lcall
jno
roll
xor
pop
inc
addr16
ja
mov
mov
and
test
loop
jae
out
push
sbb
and
addr16
jno
xor
xlat
decb
mov
and
pop
rclb
mov
bound
xchg
sbb
push
mov
sub
add
push
repz
xor
mov
mov
mov
mov
outsb
pop
dec
pop
mov
sar
insb
mov
pop
xchg
repnz
sbb
jp
jns
mov
cmp
pop
push
mov
in
cmp
stos
int3
xchg
cmc
shl
mov
sti
push
aas
pop
mov
mov
test
int3
mov
lds
fwait
stos
cmpsb
idiv
sub
xorl
ss
cwtl
pop
das
test
xor
xchg
adc
aas
dec
js
cmp
rcr
add
jns
ja
xchg
pop
dec
pop
push
out
mov
add
fnsave
sar
mov
sti
jo
dec
pop
mov
sub
cli
inc
push
dec
inc
jnp
out
jecxz
out
negl
in
out
add
jnp
pop
outsl
jle
movsb
ljmp
aas
movsl
lret
fimull
lea
sti
es
mov
and
sahf
lahf
fidivrs
pusha
lahf
fnstsw
sub
pop
push
or
aad
ljmp
push
mov
sahf
push
test
pop
std
cld
addr16
lods
cmp
mov
add
adcl
cld
inc
adc
xchg
mov
stos
inc
dec
lcall
and
inc
or
and
repnz
xor
pop
inc
mov
jae
pop
stos
cs
jl
sbb
xchg
jmp
inc
lea
gs
xchg
sub
loope
dec
add
outsb
outsl
addr16
jne
push
hlt
movsb
sub
into
ret
out
cltd
xchg
je
in
adc
cltd
jmp
jge
int
lcall
cmp
sbb
dec
sbb
xchg
fsubr
mov
hlt
adcb
dec
adc
subl
sub
int
pop
jl
add
int3
repz
leave
or
insl
ja
rcrl
clc
test
fwait
popa
cmp
push
mov
lods
fyl2x
imul
or
fsts
or
ds
jb
aad
loop
shrb
pop
dec
inc
adcl
lds
out
inc
popf
jbe
sbb
fildl
jle
xchg
das
jo
dec
dec
ss
repz
cli
adc
fstpl
pop
bound
outsb
icebp
shrb
lahf
popf
and
lods
test
lret
icebp
pop
lds
pop
outsl
push
and
fistpl
push
aaa
ret
fstps
xchg
das
jno
fcompl
mov
insl
push
test
loopne
out
shll
scas
xchg
jne
stc
out
mov
jbe
and
mov
xor
jno
jge
and
sbb
jb
dec
pop
fisubs
sub
lods
adc
mov
rcrl
push
int
test
shrb
arpl
adc
jo
incb
inc
int3
testl
imul
pushl
leave
js
mov
in
mov
cmc
shrl
fistps
inc
xchg
in
adc
cmpsl
sbb
dec
or
addr16
loope
test
and
loopne
push
mov
add
dec
sbb
cmp
ret
dec
pop
sub
sahf
cmpl
pop
in
mov
addb
fisubs
lods
notl
xchg
inc
mov
in
roll
xchg
mov
jg
pop
movsl
ljmp
pushf
mov
je
xchg
negl
loop
repnz
fs
jb
sbb
push
mov
push
xchg
call
aas
aad
xor
adc
outsb
sub
scas
shl
sub
add
xchg
out
add
or
mov
fcmovnu
pop
jns
test
jp
cmc
add
adc
fmull
and
adc
dec
xchg
push
xor
xchg
ret
test
stos
nop
mov
adc
mov
mov
nop
aaa
mov
jnp
shlb
xchg
push
clc
cwtl
xchg
jne
dec
int3
and
jmp
jecxz
cmpsl
mov
mov
faddl
dec
lods
push
scas
pop
sbb
daa
inc
jmp
push
add
cld
sbb
pminsw
cmpsb
fists
and
mov
ret
arpl
repnz
shr
clc
out
and
icebp
xor
or
cmp
scas
je
sbb
jns
pop
cltd
dec
repnz
mov
lahf
call
mov
sub
pusha
andl
dec
jecxz
cmp
mov
mov
jae
adc
in
dec
fimull
shrb
pop
cmc
lock
pop
push
repz
push
stc
dec
cmp
xchg
mov
add
jecxz
xchg
ja
mov
xlat
mov
push
jno
ret
std
sbb
mov
xchg
je
cmp
dec
and
xchg
dec
imul
daa
scas
push
scas
roll
shll
xor
jb
dec
out
or
and
pop
sbb
xchg
pop
push
xchg
push
mov
aam
cltd
sbb
mov
fwait
xchg
inc
stc
shll
mov
rolb
faddp
out
mov
pushf
cwtl
mov
lar
call
sbb
cltd
loope
sti
adc
scas
xchg
out
push
mov
push
push
jae
cld
les
cli
out
stc
dec
movsb
or
ss
lahf
inc
sub
push
cmp
dec
mov
lahf
in
pop
insb
sbbb
jo
cmp
mov
jge
xchg
shll
movsl
loopne
and
xchg
jo
cs
imul
aaa
sbb
test
mov
ss
lcall
loop
xor
cmp
imul
test
fs
pop
sub
js
rorb
mov
and
cld
push
test
ret
lret
cmp
mov
sbb
lds
dec
lods
cmp
and
sbb
dec
inc
mov
icebp
clc
dec
lods
outsl
jae
icebp
fwait
inc
hlt
cmp
rcr
sbb
pushf
out
add
xor
mov
cmp
mov
pop
or
add
ss
loopne
jmp
pop
mov
mov
or
lea
pop
roll
dec
divl
inc
sti
adc
movsl
mov
imul
adc
sahf
ss
call
xlat
cld
mov
push
nop
sti
or
cmp
insl
mov
push
cmp
mov
int3
scas
adc
inc
hlt
jecxz
sbb
xchg
add
push
xchg
icebp
pop
fistl
mov
fnstcw
or
mov
ljmp
aad
ljmp
stos
mov
aad
jp
add
lea
test
scas
jecxz
push
or
nop
popa
jecxz
jmp
lcall
push
pop
inc
fwait
decb
add
jp
mov
imul
sarl
pop
nop
pop
and
clc
sti
dec
fcmovnb
mov
leave
dec
out
scas
push
repz
xchg
les
cmp
or
stc
push
ljmp
and
push
in
or
sarl
faddp
int3
faddl
popf
pmulhuw
movsl
xor
cmp
lds
adc
in
adc
dec
xchg
mov
cwtl
popl
gs
cmc
aas
dec
xchg
adc
iret
sbb
in
imulb
clc
dec
es
sbb
sbb
fildl
sub
mov
push
addb
movsb
test
ficompl
outsb
and
das
jl
fldcw
sub
sti
jae
movsl
sub
cmpb
pop
aam
jnp
pushf
inc
popl
mov
mov
push
pushf
and
mov
or
lcall
mov
cmp
loope
and
pop
add
and
cmpsb
lea
test
xor
lods
aaa
loope
sbb
inc
jmp
les
mov
insl
jp
js
repz
repz
gs
dec
and
cmp
pop
lds
adc
sti
sub
mov
push
adc
pop
movsb
add
jb
add
and
sahf
stos
imul
mov
test
dec
sub
into
mov
add
sub
lods
push
push
arpl
pop
stos
ljmp
ds
std
popa
sbb
add
sub
and
pop
mov
inc
jnp
int3
imul
mov
outsl
xor
ljmp
popa
and
loope
mov
inc
test
dec
and
mov
and
mov
add
push
push
int
xchg
mov
sub
mov
xor
movsb
fisubrl
scas
dec
out
cmpsl
test
in
dec
jns
mov
pop
lds
cmpsb
jmp
lods
cmp
pop
mov
jg
loop
push
sbb
inc
sub
pop
dec
pop
lock
inc
xor
inc
xor
lea
out
nop
shl
or
enter
and
es
add
adc
test
mov
sub
stos
push
lods
and
lods
adc
out
cs
jnp
shrb
mov
hlt
cmp
jbe
add
mov
lret
cmpsb
outsb
push
inc
cmc
scas
sub
and
xchg
int3
add
popa
jge
cmovle
lea
mov
or
mov
repnz
test
inc
lods
mov
xchg
push
dec
push
inc
sbb
inc
jno
ja
aaa
lcall
cli
andl
pop
daa
dec
cmp
movsb
in
and
ja
out
rcrl
subl
jle
sbb
mov
cmp
mov
pushf
adc
out
subb
lods
aaa
sar
pop
scas
xchg
push
mov
pop
cld
jge
jg
mov
push
inc
out
or
mov
add
inc
popf
inc
pop
loop
jmp
cmp
fnstcw
lea
sti
in
fistps
jmp
or
shlb
hlt
insl
je
adc
stos
mov
dec
lds
jae
mov
pop
or
popa
cmp
std
lret
mov
divl
ret
shl
mov
in
lods
jle
pop
enter
leave
imul
faddp
insl
adc
adc
sbb
pop
mov
xchg
cmc
mov
jmp
lock
jecxz
add
push
sbbb
daa
sbb
add
xchg
adc
sub
push
ret
jb
jne
pop
lea
jg
aam
sub
xchg
add
sub
push
push
call
scas
fistl
addr16
clc
and
imul
aaa
in
aaa
xchg
dec
mov
push
lds
inc
push
cltd
cmp
pop
mov
je
xor
popf
jge
cmpsb
inc
sti
mov
jnp
cmp
mov
push
xchg
mov
repnz
pop
mov
fsubl
xor
cmp
mov
push
jnp
mov
inc
stos
jnp
inc
jecxz
lods
mov
jo
fstpl
push
shl
sbb
inc
pop
xchg
rcrl
or
sarb
fnstsw
dec
and
sahf
cmc
xchg
ret
adc
pop
xchg
je
in
das
xor
cmp
iret
sbb
mov
mov
cmp
jo
cld
test
bound
fldcw
cmc
out
jae
std
int
ss
test
or
pop
mov
bound
mov
xor
int3
cwtl
push
and
mov
fdivrs
pushf
cli
pushf
push
mov
lcall
mov
dec
subb
aam
or
dec
add
adc
loopne
jns
fdivr
add
jae
cmp
ss
dec
lods
cmp
movsb
sbb
pusha
cs
out
sub
sub
cmp
cmpsb
out
push
push
test
dec
or
pusha
dec
rcll
sub
lret
sbb
pop
hlt
rorb
dec
imul
mov
mov
scas
sub
es
popf
pushf
lahf
add
xchg
popf
dec
mov
mov
lock
and
je
rcrl
and
es
dec
xchg
or
das
inc
mov
adc
out
ss
stos
fisttpl
xorps
mov
sbb
int
outsb
stc
dec
push
sahf
and
mov
pop
sbb
out
and
push
shrb
xchg
sbb
ds
es
pop
dec
pop
lcall
std
and
push
cmp
aaa
popf
adc
sahf
aaa
lcall
fldt
jl
push
movsl
mov
int3
imul
outsl
lret
pop
jno
outsl
mov
mov
dec
push
lock
daa
ljmp
outsl
xchg
inc
ret
sub
xor
movsb
and
call
call
out
gs
outsb
mov
inc
fwait
sbb
sbb
push
mov
das
pop
dec
ror
insl
add
push
mov
mov
pop
test
dec
add
inc
cltd
inc
add
cwtl
pushf
push
cmpsb
test
jg
es
stc
cmp
sub
sub
cli
sbb
shlb
push
arpl
inc
mov
daa
jnp
arpl
mov
hlt
xchg
pop
std
adc
push
xchg
call
cli
je
mov
in
xor
ja
pop
adc
pop
jne
jbe
aas
es
loope
loop
fcmove
imul
sub
pop
push
movsl
andb
stos
daa
xchg
add
notl
fwait
or
rorl
dec
pusha
adc
ljmp
sub
pop
jmp
out
jb
push
jns
rolb
lods
js
sub
dec
lcall
inc
ja
and
add
orb
movsl
daa
rol
cmpsl
sub
dec
cmpsb
out
or
lcall
xor
vrcpss
dec
aad
cmp
cwtl
jg
mov
adc
sti
xchg
out
mov
push
test
xorb
insb
push
xchg
cmpsl
ljmp
pop
cmpsb
mov
pop
inc
mov
jne
jb,pt
inc
cmp
jecxz
xchg
xchg
cltd
sbb
nop
cmp
addl
mov
adc
push
jae
pop
jbe
mov
adc
or
repnz
or
or
mov
and
ja
outsb
pop
dec
mov
dec
popa
push
jg
cmp
loope
test
mov
sub
inc
lahf
adc
nop
adc
lcall
ds
cwtl
aas
fisubrs
mov
dec
out
rolb
add
mov
adc
jge
incb
adc
sub
jns
lcall
sbb
in
hlt
jns
pop
and
adcb
bound
add
outsl
xor
xchg
mov
adc
in
subb
sub
mov
fistpll
addl
xor
mov
dec
sbb
pop
data16
pop
test
out
xchg
sub
mov
cli
scas
push
pop
xchg
loopne
xlat
push
sub
popf
ja
mov
lods
fcompp
sbb
in
aam
aas
inc
mov
push
sbb
xlat
add
jle
xor
mov
pop
fstl
and
adc
faddl
inc
nop
xor
sti
lods
shrb
test
je
shrb
lds
popa
imul
xchg
mov
or
pop
dec
sbb
stc
inc
xchg
cmc
push
frstor
enter
inc
inc
shlb
push
or
jmp
adc
iret
inc
loopne
js
fwait
popf
outsl
xchg
dec
je
or
shrb
jmp
stos
leave
pop
pop
cltd
xchg
add
pop
popa
pop
inc
sub
inc
fcompl
loopne
sti
sub
push
dec
pop
and
cmp
ficoml
ds
inc
push
das
cmc
push
mov
data16
jp
imul
mov
rcrb
out
sbb
mov
scas
fisubrl
and
into
add
sbb
pop
lds
mov
mov
loop
dec
repz
adc
mov
bound
cmc
or
mov
jl
popf
pop
shlb
pushf
int
in
add
cmp
nop
loop
xchg
loope
decl
std
xor
int3
out
dec
xor
aam
cld
adc
or
or
rcll
aaa
mov
inc
lret
cmc
mov
or
xor
sub
add
and
sbb
mov
cmpsb
cltd
cli
cmp
jb
adc
adc
sbb
xchg
mov
ds
loope
movsl
daa
add
sub
push
add
adc
std
jb
cmp
or
xchg
jbe
mull
mov
pop
xchg
cltd
cs
adc
stos
mov
mov
xor
test
stos
dec
shrb
pop
cwtl
pop
mov
push
adcb
push
addb
addl
or
mov
cmpsl
push
pop
imul
mov
and
mov
dec
stc
lds
push
or
sub
cltd
jecxz
sarl
dec
adc
or
pushl
loopne
je
push
sub
mov
push
lds
iret
lea
out
cltd
hlt
sub
movsl
stc
mov
sbb
insl
out
or
xor
mov
and
loopne
fisubrs
pusha
push
adcl
iret
xchg
ja
push
sub
sub
imul
sub
enter
pop
sbb
dec
addr16
aas
rclb
sub
mov
out
add
xchg
mov
popf
test
das
fiadds
dec
fmulp
mov
jbe
jg
in
sub
loopne
aas
scas
cmp
mov
roll
pusha
cmp
inc
xlat
push
negb
sbb
popa
imul
mov
jae
jp
leave
pop
cli
mov
gs
sti
xchg
mov
xchg
jnp
lods
pop
push
hlt
sbb
insb
imul
fdivs
add
jne
xor
sub
fwait
mov
sti
mov
and
pop
ret
inc
push
push
ficompl
xchg
jp
stos
jl
inc
lods
mov
test
orb
loop
cmp
jle
addr16
enter
xchg
fwait
push
stc
xchg
pop
jnp
push
arpl
mov
adc
outsb
xor
mov
cmpsl
std
into
fisubrs
jge
fmuls
and
fcmovnu
je
rcrb
mov
push
cli
and
or
adc
call
mov
xchg
out
cmp
bound
fidivrl
lahf
xor
xchg
xchg
add
sti
cmp
mov
jb
xlat
addl
lret
or
cs
into
in
mov
pusha
xchg
fcompl
adc
test
dec
in
aaa
cmpsb
cld
pop
dec
sub
xchg
fidivl
and
fimull
inc
cld
jge
rolb
outsl
in
add
daa
das
or
push
sub
lods
xor
mulb
pop
pop
xchg
jmp
mov
test
lea
sub
xchg
mov
rcrb
dec
mov
clc
sub
xchg
fcmovbe
mov
std
leave
mov
mov
aaa
adc
adc
adc
inc
dec
cmp
push
out
jae
or
pop
out
sbb
xchg
leave
xor
out
lods
lock
lds
repz
mov
rcrb
testb
push
daa
push
lds
sarl
sub
loope
mov
fsub
mov
push
jb
sbbb
shlb
sub
and
fistpl
jns
adc
fnstsw
decb
iret
adc
into
pusha
xchg
jmp
xchg
inc
lcall
movsb
popf
adc
pslld
and
cltd
imulb
lods
xor
pop
insl
pop
and
mov
test
repnz
jl
xchg
mov
lret
cmp
adc
adc
and
ss
jne
test
in
dec
mov
cli
add
adc
ja
jp
sbb
add
call
jle
inc
push
in
push
shll
cltd
hlt
xor
and
imul
dec
lock
mov
add
push
scas
lds
cld
lahf
addr16
hlt
sbb
cld
cwtl
mov
jbe
add
pop
pop
movl
je
rorb
push
push
sbb
in
rcll
dec
mov
pop
aad
lds
and
shl
xor
ficomps
adc
shr
roll
hlt
sub
and
jae
xchg
sbb
mov
or
dec
push
lods
pusha
xchg
pusha
jmp
arpl
repnz
in
or
push
mov
cwtl
dec
icebp
cs
insb
outsl
adc
arpl
xchg
scas
sbb
pop
add
jmp
xorb
js
js
pushf
add
jmp
fiadds
push
sub
mov
mov
movsl
hlt
int
sbb
jae
sar
ret
inc
int
in
arpl
xorl
dec
test
pop
xorb
push
mov
mov
sub
xor
inc
sbb
das
lods
push
add
mov
push
push
cmovge
adc
inc
out
lods
aad
xlat
out
xchg
insl
fsubr
enter
inc
mov
xchg
adc
mov
push
imul
js
call
stc
loope
stos
sub
mov
push
nop
sub
in
xchg
sub
std
dec
adc
movsb
rcpps
xchg
test
loopne
pop
add
add
fwait
es
push
pop
andl
mov
std
jl
inc
in
mov
add
rorl
dec
ret
mov
jl
mov
dec
das
xchg
adcb
rcll
mov
shlb
lods
gs
xor
push
push
test
aam
and
shlb
out
fldt
bnd
pop
test
add
and
cltd
lods
cwtl
push
adc
repnz
mov
sbb
or
sbb
jns
dec
test
push
pushf
jg
cwtl
fcmovu
xor
jnp
xchg
mov
cld
in
call
push
hlt
icebp
dec
mov
mov
xor
add
jo
xchg
push
movsl
cmp
add
sbb
push
rclb
std
loopne
in
mul
jo
sub
cmpb
xlat
sbb
popf
or
pop
jns
jnp
fsub
gs
or
jg
dec
adc
fildll
inc
das
pop
and
sti
fisttpl
stos
mov
cmpsl
xchg
into
cmp
jle
push
and
frstor
fbstp
cmp
xchg
sbb
test
push
or
subl
inc
and
lcall
add
mov
fisubrs
imul
jae
test
imul
sbb
in
push
jnp
xchg
mov
xchg
pop
mov
repnz
sbb
mov
aad
movsl
mov
inc
out
dec
mul
xlat
out
jne
inc
add
movsb
cltd
into
sbb
dec
pop
lock
adc
in
pop
mov
mov
popa
adc
mov
loopne
add
shr
ds
sub
sub
int
outsl
stos
jecxz
jge
push
adc
lods
nop
out
out
mov
shr
mov
out
mov
fwait
xchg
mov
cmc
mov
gs
push
push
push
cs
inc
lret
fcoms
xchg
add
std
pop
mov
mov
cmp
sbb
jns
shrl
sub
mov
mov
inc
pop
gs
or
andb
xchg
test
mov
test
pop
push
mov
push
fcmovb
hlt
push
sub
gs
int3
insb
lret
push
cwtl
int
clc
dec
jge
xchg
sub
shrl
push
mov
xchg
jae
sbb
pop
aad
ja
test
fwait
inc
dec
stos
arpl
fsubrs
pop
ret
sbb
bound
sbb
out
out
mov
cpuid
pop
add
int3
out
cmc
jo
sbb
popf
ja
xchg
sub
jns
mov
outsl
call
sub
sub
push
fnstcw
icebp
mov
lret
add
add
or
push
pop
xadd
inc
imul
ss
shlb
pop
ljmp
div
mov
add
fidivrl
loop
cbtw
movsb
push
pop
icebp
les
imul
xor
mov
stos
add
cmp
repz
enter
sbb
sub
addr16
adc
scas
pusha
in
lds
repnz
push
movsl
fstps
jecxz
dec
insl
dec
popf
data16
push
mov
ret
xor
pop
jg
outsb
xchg
outsb
cmp
jbe
jecxz
xchg
push
mov
fs
icebp
lock
pop
leave
lret
jle
or
insl
inc
enter
and
xor
addl
mov
scas
stc
loopne
cmc
lahf
gs
aaa
and
jmp
loope
or
jnp
or
loop
push
mulb
mov
jae
movsb
or
cwtl
jg
add
les
add
gs
outsb
into
movsl
jg
bound
mul
mov
mov
test
jge
pop
fsincos
xchg
les
repz
push
push
xor
inc
rcl
std
mov
ficompl
mov
daa
xor
out
dec
imul
inc
aaa
add
add
cs
dec
pop
xchg
xor
dec
inc
add
sub
ret
aad
pop
fwait
sahf
movsl
loop
cmp
jns
or
jg
cmp
out
push
notl
clc
aas
repnz
scas
cmp
mov
in
jg
pusha
lea
dec
push
pop
push
hlt
dec
scas
add
ffreep
push
fucompp
add
sub
hlt
int3
sub
add
xor
mov
insl
hlt
add
lret
adc
pop
lods
jno
aad
jo
dec
insb
xchg
mov
gs
mov
mov
andl
dec
cmc
lret
adc
data16
cmc
adc
or
jg
ljmp
outsb
int3
dec
and
jns
dec
sbb
in
das
or
mov
xor
rcrb
inc
fcomi
pushf
mov
daa
pop
pop
cmp
sbb
mov
lahf
sbb
test
clc
pusha
pop
dec
test
fstpt
cmovle
cld
cmc
out
mov
pop
jnp
in
add
sub
sbb
jecxz
push
dec
ja
mov
dec
sbb
fldcw
test
fdivrl
mov
loope
push
dec
mov
mov
gs
pusha
pop
dec
test
and
jns
movsb
mov
or
jle
xor
push
xor
xor
es
andb
dec
mov
es
cmp
leave
lcall
stc
mov
shlb
and
or
lods
aam
dec
push
mov
inc
mov
lret
mov
scas
imul
cmp
fstps
out
mov
ss
ljmp
mov
pop
cmc
mov
lahf
cmp
xchg
dec
daa
into
scas
pop
mov
adc
outsl
mov
xor
std
das
js
add
inc
ret
jae
or
mov
mov
hlt
mull
sahf
jp
mov
imul
cmp
out
push
sahf
fs
inc
std
sbb
imul
cmpsl
out
pop
arpl
pop
scas
fsubrl
push
fcompl
mov
xlat
arpl
in
adc
push
push
mov
push
mov
jae
shrb
popf
shlb
push
cmp
mov
xor
scas
fsubrs
iret
fmull
rcrl
test
je
cwtl
jl
pop
jae
imul
pop
enter
and
lock
loopne
xor
or
pop
into
in
push
movsb
cld
lods
pop
sbb
insl
push
mov
out
jae
imul
xor
ja
scas
mov
xchg
xor
add
and
test
and
lret
jae
mov
icebp
dec
fisttps
rcrl
cmc
sub
in
push
js
out
mov
shrb
stos
or
js
scas
pop
jl
fidivs
pop
xchg
mov
mov
or
enter
jecxz
mov
sub
jecxz
movsb
push
testb
addr16
outsb
pop
adc
fists
in
insl
inc
sub
jmp
cli
and
xchg
sahf
outsb
sbb
pop
and
xor
inc
xchg
sbb
pop
and
cmp
mov
mov
push
fnstcw
dec
adc
jae
fmuls
clc
xchg
cmpsb
pusha
xchg
addl
dec
cmp
fldenv
stos
xchg
lods
add
dec
jp
notb
dec
and
xor
inc
test
or
inc
jg
repnz
pusha
jno
push
mov
adc
stc
test
shl
loopne
adc
pop
mov
leave
fmulp
bound
dec
adcb
and
arpl
out
mov
clc
ds
jmp
jle
cmc
mov
jl
into
mov
imul
jb
fsubs
and
jg
pusha
das
lods
popa
or
aaa
ds
in
outsb
inc
mov
fwait
sub
out
add
or
fs
es
int
push
insl
cmc
pop
and
popa
cs
lock
dec
sbb
push
in
dec
in
xchg
cmp
hlt
sarb
notb
xchg
pop
inc
add
mov
push
sbb
stos
adc
les
sub
sbb
int
xchg
je
clc
and
loop
cmp
addr16
mov
mov
xchg
inc
imul
push
cld
xchg
mov
xchg
mov
cmp
xchg
add
out
push
fstl
aas
clc
xor
mov
mov
jb
jle
insb
into
push
lock
or
push
mov
pop
es
scas
repz
jnp
dec
xor
and
lahf
scas
insb
push
cmp
fisubrs
sbb
xchg
and
jne
cmp
pop
inc
jg
es
loop
loopne
xor
xlat
inc
out
leave
out
mov
mov
rolb
mov
sarb
shrb
jnp
js
mov
and
xchg
or
sarb
mov
sub
xor
rcrl
push
pop
adc
enter
cmp
sub
or
adc
and
and
test
inc
add
inc
xchg
outsl
int
arpl
mov
dec
xchg
shlb
addr16
pop
pop
jnp
push
add
and
out
pop
adc
out
loope
rorb
repz
mov
rorl
cmp
sbb
inc
popf
or
xor
push
cmc
cmp
out
xorl
movsb
push
push
in
sub
ret
decb
movsl
cmc
out
mov
pushf
cmpsb
xor
add
or
repnz
mov
roll
xchg
sbb
cmp
mov
cmc
pusha
mov
addr16
jb
add
xlat
bound
jne
mov
mov
push
push
jb
mov
jp
mov
les
loop
mov
sub
pop
pop
sbb
ret
xor
push
dec
cwtl
rorl
xlat
shr
push
addl
add
in
cmp
jle
xchg
lahf
mov
sub
popf
divl
xlat
add
mov
inc
cld
test
iret
idiv
test
jb
je
xor
fwait
lret
jno
sti
test
pop
jbe
notb
sub
pop
pop
and
imul
scas
not
scas
pop
inc
jnp
aam
push
pop
mov
push
dec
cmpsl
xchg
adc
test
out
mov
imul
add
out
xchg
push
mov
ja
mov
repnz
push
or
addr16
cwtl
fwait
cmp
orb
int
jle
fildl
mov
pushf
gs
dec
mov
fldcw
call
andb
orl
dec
cli
not
xor
inc
sub
out
sbb
shlb
mov
movsb
push
dec
stos
gs
or
loope
jl
push
and
mov
pop
mov
imul
and
rclb
cmp
in
cmp
int3
das
push
or
sbb
pushf
repz
lahf
movsb
int
imul
fimuls
mov
sarl
mov
rorb
push
jle
stos
sub
out
sub
shll
sbb
dec
pusha
test
dec
ja
xlat
ljmp
mov
fwait
gs
pop
pusha
idivb
push
data16
test
sbbb
jne
lock
adcb
popf
xchg
sbb
int
outsl
xor
xchg
add
js
sub
mov
loopne
cmp
jg
dec
jns
inc
insb
sub
dec
les
ss
mov
adc
lods
push
fwait
and
out
ds
dec
jne
pop
mov
imul
pop
repz
hlt
je
dec
push
and
or
adc
dec
cwtl
lahf
jp
xchg
pop
xlat
push
mov
in
out
and
ss
sub
arpl
fsts
adc
fs
aam
and
fucompp
adc
push
shlb
gs
mov
push
or
mov
xor
stos
into
pop
lcall
cli
mov
push
push
and
int
pop
push
add
jecxz
in
insb
inc
or
int3
or
hlt
push
inc
push
jl
inc
fwait
sbb
cmp
repz
pushf
loope
pop
mov
loopne
push
mov
dec
push
sbb
fs
aad
call
jg
lcall
outsl
xor
stos
jo
push
and
sub
mov
sti
inc
jbe
lcall
loop
sbb
inc
xor
hlt
je
shlb
stc
into
in
scas
bound
ljmp
push
pop
push
les
or
es
push
mov
in
outsl
js
mov
push
cwtl
cmpb
xor
inc
inc
mov
dec
jo
pop
mov
lods
outsb
push
xor
jmp
mov
mov
lods
shr
fistpll
pop
cmpsl
ljmp
aam
call
test
leave
aad
push
fcmovnu
xchg
mov
dec
xchg
negl
loopne
aad
mov
push
sbb
mov
mov
dec
xor
fucomip
sbb
ret
jmp
imull
jp
cmp
and
and
sbb
and
xchg
rcll
loop
stos
cmc
pop
shrl
add
xchg
xchg
sahf
lock
push
and
hlt
pop
mov
xlat
mov
sti
cli
add
inc
aad
fildll
cmp
adc
mov
mov
fwait
js
sarl
jge
sti
imul
and
sbb
xchg
pop
mov
aaa
fbstp
sub
adc
ljmp
jb
and
mov
out
lock
xor
and
inc
loop
outsl
rcr
fsub
sahf
fldcw
pop
inc
mov
lods
dec
xor
mov
pop
xchg
add
cltd
jge
imul
icebp
or
adc
ficomps
fwait
jne
pop
aad
mov
xor
inc
mov
inc
xchg
dec
out
nop
insb
in
clc
xor
hlt
lea
popf
inc
jnp
or
enter
out
jae
xchg
aam
hlt
xchg
xchg
jmp
arpl
leave
cmp
pushf
xor
xchg
popf
pop
ds
mov
pop
jbe
lods
pop
into
cli
cmpsl
std
xchg
jnp
cmp
fwait
xchg
pusha
add
push
incl
cli
lods
jp
fwait
xor
test
mov
mov
lahf
dec
fdivs
int3
bound
aad
mov
add
or
mov
lret
push
popa
or
ffreep
sbb
mov
or
xchg
dec
xchg
pop
call
inc
lods
pop
pop
adcb
cmpsl
push
jno
outsb
out
sarb
xchg
enter
xchg
mov
test
sub
sbb
add
andb
xchg
push
cmpl
pop
dec
out
inc
add
jne
pop
jb
or
or
enter
and
lret
dec
dec
pop
dec
scas
pop
mov
sahf
int
and
mov
mov
mov
popa
fbstp
xchg
dec
aad
ss
dec
fnsave
ret
xor
ficoml
dec
jae
stos
in
jmp
testb
cwtl
fs
and
xor
sbb
xor
jle
and
and
cmp
xor
es
dec
adc
sbb
jecxz
pop
lods
and
push
fwait
push
daa
call
je
lret
insb
mov
inc
shll
xchg
cli
imulb
mov
and
mov
pusha
cmpsl
or
out
arpl
mov
leave
lret
and
test
out
sbb
sbb
pop
repnz
mov
daa
jecxz
enter
inc
jbe
cmp
arpl
jbe
pop
xor
leave
imul
sbbl
inc
test
call
jnp
pop
lock
pushf
inc
sub
push
ret
and
jb
sub
and
mov
sub
push
rcrl
add
loopne
pop
push
repnz
fisubl
pop
cmp
sub
imull
movsb
popf
andb
arpl
movsl
dec
add
cmpsb
mov
mov
mov
cmp
repz
pop
pop
xor
and
or
inc
shll
pop
jo
cmpl
jno
pop
add
cld
test
add
push
mov
push
arpl
scas
andb
xchg
push
aad
pop
mov
push
orb
xor
incb
push
vaddsubps
pushf
inc
jo
incl
test
mov
imul
push
xchg
repz
xchg
push
push
outsb
mov
andl
test
fnstenv
lret
in
imul
lea
fisubl
mov
int
dec
jns
add
pop
cld
or
adc
je
std
xchg
cmp
push
fs
jecxz
enter
dec
cmpsl
stc
jnp
xchg
jmp
fisubs
shl
fs
mov
aam
and
lretw
pop
xor
outsl
xor
adc
add
mov
or
jg
ljmp
dec
push
popa
and
pop
loope
push
sub
out
inc
sbb
jb
add
adc
adc
inc
loopne
mov
lret
daa
push
das
test
mov
xor
or
inc
jo
push
fstps
mov
dec
lds
imul
sub
pop
decb
xchg
xor
dec
ja
sbb
repz
mov
cli
push
cltd
lea
xor
cld
dec
and
adc
rcl
lods
jae
jae
sbb
cmp
mov
mov
jecxz
sub
or
cmp
lret
cwtl
lret
in
mov
sbb
lahf
test
and
sbb
lods
int3
xor
jbe
push
hlt
lcall
fldl2t
lock
jge
sbb
mov
xor
in
int
mov
cld
cltd
or
pop
shr
imul
popa
xchg
mov
lahf
outsl
and
push
lea
movsl
or
into
cmc
add
cmpsl
pop
cmp
fsubr
bound
enter
cmp
and
sub
nop
sub
jne
dec
add
rorl
loope
pop
dec
fs
out
xor
push
inc
cmpsb
ja
outsl
jg
dec
mov
lods
pop
sub
mov
imul
cmpl
scas
dec
mov
sbbl
push
aad
xchg
lock
sbb
mov
inc
dec
fcmovnu
jmp
cmc
test
sub
inc
mov
cmp
cs
into
cmp
insl
or
xchg
rorb
cmp
aas
mov
mov
mov
and
sbb
loop
roll
es
ds
and
stc
iret
and
and
cmpsb
outsb
stc
or
adc
shr
add
movsb
mov
adc
aad
test
scas
fidivrl
inc
cld
scas
adc
mov
push
add
fxch
shrl
loope
das
adc
fmull
pop
cltd
mov
cmp
das
testl
stos
mov
adc
test
inc
mov
js
je
or
inc
mov
adc
mov
fisubrs
mov
js
stc
ja
imulb
les
imul
scas
sub
mov
jg
mov
pop
mov
push
fsts
andb
push
lock
push
andb
ds
je
cmp
shll
jmp
sbb
out
push
mov
dec
bswap
xchg
add
push
inc
and
insb
cmp
push
gs
stc
pop
mov
aad
cmp
rorb
fsubrl
xchg
sub
xlat
clc
add
or
daa
xchg
mov
lods
xchg
cmp
stc
outsb
adc
pop
les
xor
lret
adc
out
push
iret
je
push
ja
stc
add
scas
mov
pusha
ret
xor
sub
mov
addw
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
clc
add
orb
add
dec
add
cmpb
add
add
cwtl
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
loopne
add
in
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
or
add
add
in
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
lret
add
add
add
add
add
add
add
push
add
pop
arpl
add
add
add
add
add
jbe
add
xchg
add
mov
add
lods
add
mov
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
pop
imul
mov
add
add
arpl
add
add
and
xor
add
add
mov
add
add
add
in
arpl
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
inc
and
pop
rorl
push
inc
inc
outsl
insl
jo
arpl
add
adc
push
sbb
push
dec
xchg
lock
lahf
imul
push
fwait
das
into
pop
dec
in
inc
adc
out
iret
jnp
add
mov
pop
sti
xchg
pop
enter
movsb
push
push
push
decl
sbb
jl
sub
imul
cmp
xchg
xchg
add
in
inc
xchg
jns
sbb
out
mov
push
adc
jbe
ss
lahf
aam
inc
in
in
sbb
add
out
jae
js
imul
sahf
push
loopne
lcall
mov
inc
call
dec
lock
ret
std
sbb
xlat
and
xchg
and
loopne
rcrl
inc
cld
pop
jecxz
loopne
add
xchg
adc
fnsave
and
fisubl
in
sub
pop
mov
sub
popa
call
adc
ss
enter
repnz
pop
pop
jmp
insb
ljmp
sbb
add
push
and
sub
aaa
xor
mov
cwtl
adc
jns
mov
sbb
popf
sti
adc
add
adc
jb
sbb
les
cwtl
pop
adc
clc
imul
mov
cltd
jecxz
xchg
sub
testl
push
sub
mov
dec
push
push
sbb
xchg
adcl
dec
jge
js
adc
add
or
or
push
mov
jne
jnp
pusha
xorl
add
sbb
movsl
loopne
adc
pusha
jns
and
sbb
jno
pop
loope
adc
ja
mov
aad
xor
test
mov
xchg
mov
aas
push
pop
pop
gs
sbb
test
adc
sbb
lds
push
testl
dec
scas
sbb
popf
fst
int3
cmc
xchg
dec
ffreep
mov
inc
adc
cmp
int3
xchg
fists
iret
dec
mov
in
mov
leave
mov
lock
push
ficoms
mov
push
stos
nop
inc
cltd
dec
jle
and
fisubs
pop
xor
xchg
mov
sbb
jbe
in
mov
xchg
in
lahf
fimuls
cmc
sbb
xor
es
inc
cmc
cld
cltd
jne
cmp
pop
hlt
push
fs
xorl
aas
cmpsb
mov
pop
clc
or
rol
jle
cli
ja
push
dec
sbb
dec
push
push
loope
scas
pop
pop
add
mov
decb
or
xor
mov
pop
adc
jecxz
pop
lret
popf
std
cs
xchg
out
pop
lret
test
jge
cmp
cltd
insl
sbb
cmp
ja
xor
sahf
jns
testl
cwtl
aad
adc
pop
or
sub
jbe
out
les
in
sbb
rolb
and
pop
pop
mov
add
out
test
xor
lods
fucom
sub
push
inc
jecxz
arpl
mov
adc
in
test
xor
jbe
data16
jns
sbb
in
bnd
pop
negl
outsb
jbe
inc
loopne
mov
sbb
and
aas
or
push
int3
mov
or
add
lret
test
adc
mov
push
out
sbb
adc
and
in
lcall
xor
les
iret
loop
out
push
pop
insb
xchg
mov
push
lahf
cmc
sbb
pop
int
pop
and
xor
sbb
xchg
xchg
xchg
leave
pop
push
movsb
sbb
add
mov
jnp
test
cs
hlt
push
cwtl
decb
movsl
push
popf
or
movsl
mov
fnsave
leave
int
jp
std
pop
mov
jb
xchg
pusha
and
popa
sbbb
cmp
mov
rclb
sbb
pop
shlb
mov
pop
push
pushf
cwtl
mov
hlt
push
daa
cli
add
adc
lcall
xchg
sbb
faddl
fiadds
sarl
xor
adc
sbb
sbb
jbe
inc
jmp
in
sbb
insb
je
or
pop
stos
fcompl
xchg
test
insb
popa
popa
mov
and
js
call
rcrl
dec
jbe
jecxz
dec
loopne
std
xchg
sbb
icebp
pop
faddl
fldt
or
loopne
movsl
rcrb
pop
or
adc
cltd
pop
pushf
dec
pop
sbb
ficoms
out
push
rclb
dec
lods
jg
adc
or
inc
push
sbb
xor
xchg
add
loope
and
or
loope
add
or
push
add
adc
cwtl
sbb
je
or
add
lods
xor
add
push
add
or
aam
mov
int
cltd
add
cmpsl
or
jle
mov
in
or
and
dec
dec
fmul
sbb
inc
popf
icebp
push
pandn
adc
sbb
push
out
ret
lods
loopne
push
sub
xchg
mov
mov
push
pushf
mov
push
cltd
ljmp
les
out
mov
xchg
sbb
sbb
xchg
mov
jecxz
add
mov
xchg
sbb
xchg
xchg
aaa
push
cmp
push
js
lea
xchg
cltd
cmp
push
dec
hlt
ljmp
cltd
fsubrl
jo
fnsave
xchg
or
dec
push
xchg
dec
push
sub
xchg
cltd
push
outsl
add
es
sbb
xchg
mov
mov
adc
mov
xor
fstl
dec
popf
std
mov
cltd
sbb
add
add
unpcklps
lahf
pop
xor
into
out
xchg
xor
mov
lcall
testl
cmp
test
sbb
jmp
sbb
lahf
inc
fnsave
push
xchg
pop
dec
cmp
sub
insl
ds
test
daa
pop
pop
sbb
pop
fildl
inc
inc
fildll
cmp
popf
negl
or
pop
xlat
dec
jecxz
xchg
mov
cmp
dec
xchg
fbld
daa
sbb
push
push
fisttps
das
fcompl
inc
lahf
ficomps
xor
clc
and
sbb
shll
inc
in
add
pushf
inc
lahf
daa
fildll
cmc
imul
dec
and
out
xchg
iret
aaa
les
jae
scas
push
jle
aaa
aam
enter
mov
jp
mov
mov
decl
arpl
sbb
add
in
sti
cmc
adc
test
std
adc
sbb
push
and
imull
pop
fnstsw
sub
rcrl
inc
sbb
ficoms
sahf
adc
call
mov
hlt
add
inc
or
or
push
pop
sub
testl
adc
push
pushf
imul
mov
cwtl
data16
dec
sbb
push
fldcw
sbb
in
shll
movsb
movsb
inc
pop
testl
lahf
push
push
add
imul
adc
fmull
fdivrs
mov
cli
pop
adc
cmp
pop
or
jb
ss
or
add
popf
or
xchg
and
lahf
lock
jp
push
dec
dec
cmp
mov
add
and
cli
dec
std
stc
mov
mov
ret
pop
icebp
xor
push
cmp
outsl
add
xor
adc
in
fstl
in
out
mov
icebp
jecxz
sbb
out
mov
pusha
mov
push
mov
iret
mov
je
and
into
sbb
jbe
cmp
pop
xchg
sbb
in
dec
dec
dec
xchg
pop
xchg
pop
lret
cmpsl
test
enter
aaa
aam
sub
pusha
fsubs
pop
lods
test
int3
jle
adc
dec
aad
adc
push
outsb
mov
xchg
xor
dec
mov
jns
popf
or
push
test
xor
xchg
icebp
cmpsl
sbb
pop
mov
and
popa
sub
adc
testl
cmp
lret
xor
cld
sub
roll
clc
xabort
inc
pop
cmpsl
adc
xor
xor
sbb
mov
jle
xchg
stos
mov
movsl
adc
push
pop
dec
add
mov
cltd
jecxz
cmp
dec
dec
hlt
add
imul
push
xchg
shl
mov
or
outsl
adc
push
inc
jp
inc
fildl
adc
ja
js
or
cmp
push
rsqrtss
lahf
out
inc
xor
notl
jg
aas
mull
adc
cltd
into
push
push
mov
shr
adc
dec
xchg
out
ljmp
xchg
mov
cmp
adc
push
notl
les
xor
pop
lret
pusha
add
jns
push
add
inc
push
je
sub
fwait
movsl
cmp
lods
dec
js
testl
cwtl
loopne,pt
jae
out
cld
ss
sub
xchg
int3
hlt
mov
sahf
add
push
adc
testl
push
cwtl
cmp
dec
popf
sti
pop
and
sbb
xchg
pusha
sbb
call
jl
std
rorb
push
stos
lcall
xchg
sbb
sbb
fs
dec
inc
add
sti
and
jle
cltd
aaa
xor
ds
mov
das
xor
xchg
pop
insb
cmp
jne
jge
hlt
jae
jb
jns
and
repnz
imul
je
ret
add
jecxz
or
cmp
mov
xor
push
jge
out
imul
pop
push
add
sub
sarl
dec
shll
jg
jo
imul
push
in
clc
jge
ljmp
imul
fisubl
or
and
les
pop
or
dec
mov
jl
je
jge
js
out
push
insb
neg
jg
pop
in
push
negb
pusha
adc
outsb
push
xchg
add
in
dec
push
xchg
adc
mov
hlt
sbb
iret
adc
and
sub
iretw
insl
addb
mov
shrl
xchg
pusha
cmp
scas
pushf
das
mov
sbb
sbb
ljmp
sbb
add
fdiv
inc
sbb
sbb
aas
scas
push
pop
lods
or
push
sbb
sbb
fsubrl
imul
push
sbb
sbb
xlat
imul
divl
int
push
add
mov
xor
sbb
sbb
sbb
outsl
push
pushf
loopne
outsl
sbb
pop
pop
mov
xchg
jmp
in
out
mov
shlb
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
fs
adcb
add
add
mov
arpl
add
add
adc
arpl
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
inc
xor
add
jo
add
add
pop
xor
add
add
push
call
shlb
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
jmp
fidivrs
js
mov
repz
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
mov
pushfw
push
call
or
push
and
mov
add
add
inc
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jg
xchg
stos
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
jne
jmp
pop
aas
or
push
xor
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
jmp
xchg
pop
add
and
jmp
pushf
movsl
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
jmp
or
add
cmp
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
xchg
and
sahf
jg
xchg
stos
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
pushfw
push
call
je
adc
loopne
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
or
push
clc
shll
aaa
movsb
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
or
das
cmp
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sub
daa
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ret
inc
jns
pop
insb
xor
mov
add
add
sahf
aam
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xchg
pop
add
and
mov
add
add
pop
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jmp
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sub
mov
add
add
repnz
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
int3
adc
div
fs
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
les
xor
cmp
dec
jmp
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
pushfw
push
call
push
xchg
test
xor
imul
add
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
push
and
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
sub
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
fimull
call
out
cmp
jle
jmp
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fsubrp
fucomp
das
mov
js
mov
and
inc
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
push
call
out
sbb
cli
stos
or
or
add
pop
jb
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
stos
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
jmp
fsub
mov
inc
je
adc
icebp
jecxz
cltd
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
and
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
movsl
jp
mov
xor
jmp
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
jmp
sub
mov
sbb
divl
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
dec
jmp
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
jmp
fstps
imull
ja
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
inc
pushfw
push
call
sub
add
add
testl
add
add
push
mov
decl
lcall
mov
add
add
popfw
jmp
pushfw
push
call
sub
mov
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
enter
je
adc
das
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
fidivrs
ret
inc
jns
pop
insb
xor
xchg
pop
push
jmp
pushf
movsl
jp
mov
inc
pop
xor
xor
mov
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xor
pushfw
push
call
lods
loop
xor
mov
add
add
cmpsl
add
add
add
add
decl
lcall
mov
add
add
add
push
pop
popfw
jmp
jmp
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
dec
mov
xor
lock
icebp
cli
stos
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
jmp
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
cmp
jmp
or
push
clc
shll
aaa
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
je
pushfw
push
call
shlb
add
add
mov
add
add
add
add
decl
lcall
mov
add
add
add
fwait
pop
popfw
jmp
pushfw
push
call
push
dec
adc
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fs
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jae
test
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
jmp
sar
lahf
jmp
in
mov
mov
xor
lock
stos
or
push
and
fstps
fwait
cmp
jbe
fdivl
dec
add
push
dec
dec
outsl
jmp
jl
pop
jmp
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
jmp
pushfw
push
call
aas
or
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ss
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cmp
sbb
inc
out
cs
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
fisubs
inc
pop
xor
jmp
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
jne
jmp
gs
dec
loope
cmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
shr
stc
ds
in
mov
mov
test
xor
in
jmp
lock
stos
or
push
and
fstps
fwait
cmp
jbe
in
fisttps
adc
dec
outsl
jl
pop
jmp
mov
jmp
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
pop
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
repnz
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
push
call
xchg
div
fs
xchg
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cld
test
or
add
jmp
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
add
jmp
scas
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
mov
push
and
fldpi
repz
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
mov
pushfw
push
call
repz
scas
dec
fcompl
mov
add
add
fldt
add
add
add
add
decl
call
mov
add
add
add
aad
popfw
jmp
jmp
enter
je
sub
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
jmp
pop
add
and
pushf
movsl
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
jmp
test
or
add
addl
jle
sub
mov
pushfw
push
call
sbb
xlat
les
mov
add
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jae
test
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
mov
js
mov
jmp
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
fldt
xor
sbb
cli
stos
or
icebp
mov
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
es
mov
jmp
cmpb
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
mov
pushfw
push
call
or
push
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ss
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shr
icebp
mov
sub
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
out
add
addl
jle
sub
mov
sbb
mov
jmp
iret
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
pushfw
push
call
fwait
cmp
jbe
in
add
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
jl
pop
mov
es
mov
and
cmpb
jne
jnp
icebp
push
jmp
inc
sub
scas
dec
fsub
mov
inc
je
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
call
jmp
mov
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
mov
pushfw
push
call
sub
mov
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
les
mov
add
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
gs
inc
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
push
xchg
test
xor
imul
out
cli
stos
or
sub
fstl
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
call
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
add
xor
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
iret
dec
sub
daa
aam
jb
inc
jns
jmp
pop
insb
xor
jmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
rolb
add
and
addl
jle
sub
sti
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
hlt
sbb
pusha
sbb
mov
js
mov
jmp
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
sub
xor
imul
stos
or
ljmp
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
jne
pushfw
push
call
andl
mov
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
add
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shr
daa
ss
movsb
or
jmp
push
das
cmp
sbb
sub
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
out
and
pushf
movsl
jp
mov
inc
pop
xor
rorb
mov
mull
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
fidivs
xlat
jmp
les
cs
pop
gs
cmp
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
jmp
lock
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
fldt
es
mov
jmp
cmpb
jne
jnp
icebp
push
inc
jmp
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
loop
clc
shll
aaa
movsb
or
adc
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
add
pushfw
push
call
sub
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
shlb
add
add
mov
add
add
add
add
decl
lcall
mov
add
add
add
ficompl
popf
jmp
pushfw
push
call
push
dec
adc
negb
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
xor
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
sub
add
push
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
das
cltd
pop
aas
or
clc
push
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
cs
aam
jb
inc
jns
pop
insb
xor
xchg
pop
jmp
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
jmp
sub
mov
aas
sti
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
jmp
nop
mov
and
lcall
std
repnz
sar
in
ds
in
mov
mov
push
xchg
test
xor
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
popa
jmp
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
jmp
shll
aaa
movsb
or
xor
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
outsb
setl
inc
pop
xor
icebp
jmp
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
sub
or
sub
pop
gs
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
jmp
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
sbb
cli
stos
or
push
and
fstps
xchg
stos
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
mov
pushfw
push
call
in
imul
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
loopne
pop
aas
or
push
xor
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
fidivl
and
outsb
setl
mov
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
jmp
or
add
addl
jle
sub
mov
sbb
inc
push
pushl
loop
jmp
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
movl
jmp
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
sarl
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
movl
jmp
cmp
sbb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
jmp
dec
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
xor
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
fsubr
aas
xor
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jmp
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
call
cltd
pop
aas
or
jmp
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
movl
push
call
pop
add
and
push
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
setl
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
xor
addl
jle
neg
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
mov
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
fldpi
hlt
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
inc
jmp
pushf
push
call
mov
or
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
icebp
push
inc
sub
mov
add
add
jp
add
add
adc
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
imul
enter
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
aad
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sub
cmp
sub
xor
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
add
add
jmp
sar
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
jmp
pop
mov
es
adc
mov
xor
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
ficompl
push
clc
shll
aaa
movsb
or
pushfw
push
call
push
das
cmp
sbb
inc
out
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
mov
pop
add
xor
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
int
jmp
xchg
ror
into
out
cld
test
or
jmp
add
cmp
jle
sub
mov
sbb
xlat
les
cs
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
loopne
add
jmp
mov
and
cmp
mov
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
fstps
xor
insl
adc
jl
pop
jmp
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
jmp
xchg
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
xorl
jmp
mov
sub
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
xchg
shr
sub
test
or
jmp
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
loop
hlt
sbb
and
fidivrs
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
rolb
call
lahf
in
mov
mov
push
add
add
push
or
add
out
add
add
decl
call
mov
add
add
add
ficompl
popf
jmp
pushfw
push
call
xchg
test
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
cli
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
aam
cmpb
jnp
sub
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
inc
pushfw
push
call
lds
dec
sub
daa
aam
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
int
xchg
ror
into
out
cld
test
or
add
cmp
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
fidivrs
js
jne
pushfw
push
call
and
inc
push
nop
mov
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
