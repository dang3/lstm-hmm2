jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xchg
jle
pop
test
jmp
inc
minps
add
add
or
add
add
add
add
add
add
xor
inc
add
add
mov
jae
push
add
nop
add
add
add
stos
add
add
add
add
add
nop
add
add
incl
pusha
add
add
add
cwtl
add
jns
xor
cwtl
add
sbb
jne
nop
add
add
insl
add
add
add
add
add
add
add
add
cwtl
add
add
add
imul
add
add
xchg
add
add
add
add
add
push
xor
nop
add
push
add
add
add
add
add
add
add
xchg
add
add
add
test
ljmp
add
add
add
cwtl
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
test
add
nop
add
add
add
fiaddl
test
cwtl
add
add
add
add
add
sub
pop
add
add
add
add
and
fwait
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
and
cmp
xor
mov
add
add
add
add
sub
add
mov
add
add
sub
xor
imul
nop
add
add
xor
outsl
add
mov
add
add
add
mov
outsb
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
arpl
nop
add
js
adc
fiaddl
movsb
add
add
xor
popa
add
add
nop
add
add
add
mov
dec
add
add
nop
add
lods
add
add
add
add
add
add
nop
add
add
add
in
add
add
cwtl
add
add
or
push
cwtl
add
add
sub
and
xchg
cwtl
add
cmp
or
cmp
imul
or
add
add
add
cmp
cmp
add
add
add
mov
add
add
dec
add
and
add
mov
ljmp
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
sbb
cmp
nop
add
add
add
nop
add
add
imul
add
add
add
add
add
add
add
and
cmp
sbb
jp
or
cltd
add
testl
dec
add
cmp
mov
xchg
test
add
cs
push
jne
inc
add
add
add
hlt
loope
insl
insb
js
arpl
mov
jle
adc
xchg
cmp
xchg
into
mov
sbb
dec
mov
mov
ret
fwait
fsubrl
shll
enter
push
ret
packssdw
xchg
cmp
fwait
jo
pop
mov
js
in
hlt
xchg
jnp
shrl
dec
pop
pop
sbb
cld
xchg
xchg
pop
jl
imul
or
rcrl
adc
iret
jne
outsb
sbb
stc
push
fwait
jnp
aam
jl
or
call
ljmp
lahf
insb
mov
dec
ds
push
pop
inc
xchg
mov
scas
mov
cmc
push
push
lret
and
repz
lret
add
faddl
mov
jl
out
lret
popa
adc
sbb
fisubl
dec
adc
mov
pusha
or
mul
push
rcr
sbb
xor
in
repz
test
js
mov
jmp
pop
cmc
mov
lret
in
or
ds
and
inc
jg
mov
ds
stos
push
add
xchg
testb
leave
ret
mov
adc
shrl
mov
mov
mov
adc
xor
push
or
fbld
or
adc
mov
mov
mov
pop
inc
xorb
adc
outsl
jae
cmc
enter
push
jns
cli
xor
xchg
push
clc
add
mov
push
xchg
cmp
inc
lahf
pop
sub
mov
pop
out
mov
inc
cli
inc
repz
fcompl
xor
fwait
pop
cmp
nop
push
int3
or
mov
js
icebp
mov
sahf
or
popa
jp
dec
push
jmp
shl
sarb
or
pop
jmp
cld
outsb
fnop
push
push
jp
mov
test
int3
dec
lcall
and
sub
fwait
push
or
jnp
xor
xchg
test
stos
stos
cmp
jl
add
add
rolb
cmp
pop
flds
xor
xchg
loope
xchg
or
movsb
mov
out
test
fcompl
jle
arpl
inc
fdivl
inc
add
sar
fstl
mov
ljmp
push
repz
add
je
es
xor
adc
mov
test
loop
aam
inc
int
xor
rcll
in
xor
pop
insl
ret
adc
cli
push
xor
stos
inc
pop
mov
sahf
ljmp
call
jae
enter
adc
mov
jno
jnp
jmp
arpl
xchg
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
dec
dec
pop
and
pop
pop
aas
das
pusha
cmp
out
fistpll
lahf
push
dec
dec
pop
aas
das
das
aas
pop
rdtsc
cmc
out
out
mov
subl
mov
es
ss
add
in
mov
mov
fldlg2
std
out
movntps
adc
cmp
and
sub
neg
add
pop
add
lea
xor
ja
mov
jo
aam
insb
loop
pop
cmp
clc
cmp
mov
lock
loopne
adc
add
xor
popl
mov
add
repnz
outsl
es
push
lea
or
out
adc
into
xor
inc
pop
ljmp
outsl
jg
mov
cmp
maskmovq
setb
push
pop
fbstp
xchg
fidivrs
mov
data16
mov
cmp
bswap
pop
jecxz
int3
adc
adc
fdivl
lahf
nop
outsl
adcb
ret
pusha
movsb
int3
jg
push
add
mov
mov
cmc
mov
cmp
das
das
xor
out
notl
int
jecxz
xchg
mov
lahf
xchg
xchg
lods
or
or
cmp
sub
pop
mov
sbb
lods
out
lods
push
mov
cli
sti
ljmp
cmp
xor
inc
insl
jae
dec
sub
mov
mov
loopne
mov
push
sbb
lahf
cmp
dec
xor
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
lods
sub
xor
mov
dec
mov
jae
xlat
rorl
mov
call
sub
testl
pop
cmc
add
sub
or
jo
std
inc
mov
repz
adc
cmpsl
xchg
pop
sahf
popa
lds
mov
xor
dec
push
pop
xchg
fstps
xor
fldenv
aas
add
cmc
sbb
outsb
cli
pusha
push
imul
adc
faddl
pop
aad
ror
cli
push
cmp
fimuls
movsb
xor
sub
mov
jge
inc
subb
inc
in
fdivp
aad
or
lods
pop
repz
jbe
in
sbb
dec
adc
daa
xor
fs
and
test
std
jle
jmp
fmuls
mov
push
std
movsb
xchg
xchg
add
push
and
or
sub
ja
mov
nop
pop
sarl
lods
orps
filds
mov
cmp
adc
add
jbe
insb
dec
scas
sub
push
loop
sub
jmp
sti
mov
mov
data16
shl
and
les
jl
into
orl
mov
lock
out
sub
ja
inc
cmpsl
dec
lcall
cmp
sub
adc
aam
das
jo
sbbb
adc
cld
adc
pop
xor
cmp
ret
stos
xlat
adc
shrb
test
aad
cld
je
orl
das
add
je
push
cld
inc
iret
lods
jg
aad
pop
add
push
jno
sbb
jecxz
scas
cmc
outsl
inc
pop
inc
jnp
cmp
dec
xlat
inc
mov
xchg
iret
cmpsl
lahf
fcompl
push
and
mov
dec
repnz
adc
data16
popf
add
scas
movsb
popf
mov
sub
movsl
xchg
movsl
dec
lock
js
jne
lock
dec
jb
mov
sub
xchg
cld
rolb
jp
outsl
clc
add
or
lock
push
push
stc
insb
jns
jo
icebp
xchg
jmp
push
xchg
std
xor
mov
cmc
jne
add
or
jmp
jb
push
jg
fwait
cltd
and
cwtl
in
clc
cmp
das
mov
loopne
je
push
pop
xchg
js
negb
jle
pop
adc
stos
es
lock
test
enter
inc
icebp
lods
test
cli
mov
daa
nop
mov
pop
lret
pop
mov
mov
fs
lret
insl
push
mov
mul
fisubs
out
or
jbe
inc
cwtl
pop
daa
hlt
cs
outsb
fcmovnbe
and
xchg
push
js
jecxz
jb
fisubrs
xchg
icebp
out
pop
adc
sahf
lea
inc
les
sub
popa
ret
add
movsb
push
call
arpl
inc
sub
mov
andb
loope
adc
std
adc
or
pop
jmp
outsl
int3
mov
mov
jmp
push
fcmovnb
mov
mov
or
mov
test
rcrb
sahf
movsl
lahf
push
enter
pop
dec
xor
jl
fs
aaa
sub
and
pop
inc
mov
add
mov
mov
inc
add
inc
mov
push
add
sub
xchg
mov
add
in
pop
adc
sub
push
in
mov
add
mov
mov
int3
sbb
notb
insl
mov
push
ror
outsl
push
cwtl
test
lret
sarb
mov
jo
sub
imul
xchg
shrb
sub
js
pop
adc
add
add
ds
test
xor
mov
and
mov
mov
and
inc
sub
mov
jns
push
lahf
cmc
lock
fwait
adc
ffreep
aam
shufps
mull
hlt
adc
fsubl
ret
xlat
mov
in
xchg
fwait
inc
sbb
stos
cmp
xchg
mov
sub
das
jne
stc
sbb
and
cmp
dec
rol
adc
mov
imul
fwait
push
push
mov
xor
pop
mov
aaa
fwait
add
fisubrs
mov
movsb
iret
mov
ja
push
pop
pop
push
or
int3
xor
pusha
cmp
mov
add
xrelease
adc
lret
aad
push
and
jne
cmc
sub
aad
lock
inc
xchg
mov
cmp
ret
and
xchg
adc
ljmp
inc
jb
xchg
cmpsb
mov
xchg
cli
notl
xchg
sbb
adc
rorl
leave
jno
dec
mov
sub
in
les
loopne
gs
add
mov
mov
ss
or
das
sti
cltd
pop
cmpsb
dec
add
lods
fistpl
int
neg
rcrb
fnsave
xchg
add
sub
or
push
pop
or
sbb
mov
loope
sub
pop
mov
imul
mov
dec
cmpsb
fstpt
xchg
shll
sbb
sub
addb
rorb
aam
movsb
and
jne
and
sti
adc
js
or
xor
rcrl
pop
xor
and
decb
mov
cmp
sub
adc
leave
adc
int3
fimuls
les
add
sbb
js
jb
icebp
mov
les
and
push
lock
gs
inc
jg
fcompl
jae
je
popa
mov
sbb
fistl
loopne
pop
pop
or
test
mov
subb
cmp
sub
or
xor
mov
out
in
xor
and
jns
xor
or
aam
out
mov
aad
mov
call
fmuls
inc
and
out
pushf
mov
xor
and
clc
push
or
sbb
cli
adc
sahf
jp
iret
or
gs
les
mov
pop
leave
xor
mov
les
in
fs
repz
xchg
adc
lea
aas
cmp
xor
cmc
fdivrs
cmp
ret
pop
sti
imulb
ss
aas
call
xchg
lods
arpl
in
cmp
sub
mov
push
loope
loope
idivb
hlt
jo
inc
adc
jo
or
sbb
or
test
xchg
lods
jo
xor
mov
pop
cmp
sbb
mov
pop
mov
xchg
mov
arpl
lock
jo
pushf
sbb
or
sahf
rorb
lcall
outsb
xchg
xchg
movsl
jo
push
add
imull
and
fs
adc
mov
adcl
call
mov
inc
cs
push
cmp
xlat
loope
push
stos
cmp
test
jbe
leave
incl
into
mov
cwtl
mov
test
cmp
scas
ret
mov
loop
gs
xchg
cmp
jg
movsb
pop
inc
jl
add
in
add
fldt
popf
push
jle
rol
outsl
pop
adcl
inc
les
in
sub
ss
popf
outsl
repnz
insb
pushf
push
les
cwtl
loop
dec
jmp
inc
jmp
pop
loopne
lretw
lret
fs
sub
cwtl
or
mov
daa
rorb
mov
xchg
out
cmp
adc
add
imul
xor
cli
mov
mov
punpckldq
scas
add
movsl
lret
mov
fs
fcomi
xchg
fptan
fists
jp
push
or
sti
xchg
sub
stos
ret
andl
push
aas
fists
mov
or
outsl
push
adc
and
lret
push
lret
stc
out
sbb
insb
sbb
add
adc
addl
mov
xor
incb
mov
cmc
sarl
js
inc
fcmovnb
dec
adc
mov
mov
rcr
arpl
ds
sbb
repz
jmp
les
fisubs
lock
sub
sub
int3
mov
cmp
lods
jne
dec
lahf
fwait
icebp
jp
mov
pop
gs
shll
mov
sbb
mov
push
cmpl
sbb
aam
jmp
test
pushf
ret
jl
imul
push
dec
mov
icebp
js
mov
fidivrs
movsl
mov
in
push
mov
sbb
mov
add
aas
pop
mov
inc
lcall
clc
imul
roll
mov
pop
lds
lock
call
std
pop
cmp
js
mov
decl
pop
dec
jge
mov
fst
pushf
faddp
lcall
in
bound
inc
test
mov
clc
dec
lret
pop
shl
mov
mov
jle
mov
and
shrb
sub
mov
jae
fldcw
call
jnp
push
cmpsl
iret
mov
adc
fldt
cmp
push
and
popa
outsl
test
jbe
shrl
out
lods
repnz
ret
xchg
adc
cmp
xchg
mov
enter
push
in
add
inc
fiadds
push
push
pop
aad
add
xchg
movsb
pop
out
inc
std
das
mov
and
clc
ljmp
adc
push
jae
cmc
fbld
cmp
stos
mov
jmp
jecxz
popa
nop
cltd
dec
pop
push
stos
ret
or
movsl
in
lret
inc
push
dec
imul
int
push
aad
in
cltd
ljmp
and
xchg
pop
adc
mov
sahf
and
dec
sub
addr16
cmp
sub
push
mov
adc
lods
add
sbb
cmp
aaa
psubsb
pop
cmp
push
mov
jmp
cmp
lds
ror
pop
lods
mov
or
in
test
pusha
cld
out
push
sub
mov
andb
fisubrs
rclb
push
fnstenv
nop
pop
push
and
sub
and
ss
lods
mov
mov
dec
push
pusha
sbb
dec
mov
lret
psubusb
mov
xchg
nop
out
into
sbb
jno
push
add
nop
push
sti
leave
vandnps
mov
es
arpl
addr16
daa
ret
gs
incl
je
adc
jae
aam
lods
pop
adc
insb
push
inc
jb
pop
jae
scas
sbb
fisttps
dec
cmp
pop
inc
mov
out
sbb
xorb
hlt
ret
shrl
pop
mov
bound
aam
outsb
aam
xor
xlat
test
das
sbb
xchg
mov
in
sub
sbb
pop
xor
sub
daa
and
repnz
lret
xchg
test
push
adc
lods
or
mov
ret
cmc
sbb
testb
adc
lcall
aaa
pop
cmp
movsb
cwtl
or
rcrl
jbe
fidivrl
imul
std
loope
mov
add
jnp
cmp
mov
gs
das
inc
mov
jg
test
pop
mov
dec
cmpb
ret
dec
jge
adc
xchg
call
test
mov
jo
lds
jmp
or
inc
outsb
or
dec
ja
jbe
lcall
ret
pop
cmpsl
es
lcall
les
jbe
dec
arpl
push
xchg
scas
cli
push
mov
mov
inc
add
stos
aad
sub
mov
imul
xchg
mov
pop
aam
sub
jbe
xchg
cwtl
push
xor
orl
hlt
imul
daa
mov
ret
es
iret
add
icebp
mov
adc
pop
xor
fisttps
mov
push
jnp
xchg
decb
jge
sbb
out
cmp
rorl
adc
pop
xor
cmp
aaa
inc
mov
fdivs
in
mov
push
adc
in
pop
inc
jp
daa
pop
dec
push
lret
ja
cli
leave
js
jno
ds
or
pop
sub
sub
fidivrl
jg
loope
mov
mov
andl
sub
in
insb
inc
jp
push
arpl
fistpll
loopne
sub
fistps
mov
mov
xor
push
mov
loop
test
fistl
imul
rcll
cmp
push
cwtl
ljmp
ret
aam
adc
lahf
aad
bound
imul
mov
jge
aas
sub
push
or
inc
enter
loopne
cwtl
out
aaa
fsubl
dec
mov
std
arpl
unpcklps
cmc
pusha
jmp
test
or
jns
mov
movl
outsb
pushf
inc
data16
mov
add
movsb
cmp
loope
pop
test
adc
rcrl
lret
pop
or
xor
fld
int3
inc
cmp
mov
out
loopne
loop
mov
outsl
out
repnz
ja
lahf
leave
psrld
js
call
lcall
cwtl
mov
inc
inc
fisttpl
mov
out
or
fisttpll
not
jbe
fisttpll
pop
call
lret
adc
sub
fwait
push
pop
sti
or
stos
adc
loope
adc
stos
cwtl
bound
lods
xor
mov
adc
test
sub
push
mov
daa
mov
mov
lret
int
enter
fstpl
dec
in
sti
fdivr
mov
adc
pusha
jnp
rcl
stc
mov
and
aam
imul
push
or
mov
push
aaa
fimull
xor
cli
and
xchg
push
mov
int
das
mov
cmp
jnp
sbb
jecxz
xchg
jo
sbbl
xchg
mov
jbe
mov
mov
nop
xor
aam
ja
pop
in
test
pop
les
pop
pop
dec
mov
popa
sub
fst
out
push
or
push
ss
push
rorl
shlb
jno
fsubl
sbb
int
lds
test
pop
cmp
pop
inc
push
xor
loope
out
fwait
cwtl
mov
mov
gs
push
mov
repnz
or
jmp
jmp
insb
negl
fcoms
inc
cmc
inc
leave
adc
ds
sbb
jmp
jmp
push
ss
pop
call
jmp
repz
mov
jns
push
add
fidivrl
loope
mov
mov
adc
push
or
push
fiaddl
push
enter
repnz
pop
rorl
call
pop
sarb
push
xchg
xchg
bound
add
dec
mov
and
pop
cld
and
mov
mov
sarl
cmp
call
addr16
mov
xor
outsb
push
lock
or
fwait
into
test
inc
mov
or
cmc
in
jbe
and
or
add
lods
aaa
push
das
add
adc
aaa
push
movsl
outsb
jp
mov
hlt
xchg
inc
push
pop
xlat
xlat
fisubl
xor
pop
bnd
add
je
pop
dec
fnsave
dec
adc
outsb
add
cld
cld
cs
dec
pop
outsl
inc
rorl
cld
rcrl
pop
stos
out
push
test
movsl
jle
ret
dec
sub
cwtl
push
int
addb
fdivl
xor
add
xchg
cmpsl
mov
xchg
xor
push
push
pop
fs
mov
and
aas
cmp
add
jecxz
int3
int
sub
push
pop
sbb
lret
xor
sbb
fwait
pop
jmp
mov
cltd
ret
sub
xor
repz
xchg
out
test
inc
aam
xchg
mov
or
mov
bound
in
daa
inc
cwtl
inc
xor
push
loop
imul
call
movsl
push
jp
lods
lret
add
mov
sbb
cmpsb
pop
push
xor
xchg
mov
mov
and
bound
js
cmpsl
jbe
mov
sbb
pop
or
push
leave
cmpsl
std
cwtl
cmpsl
cmp
mov
mov
nop
aad
xchg
shrl
push
and
jb
roll
sbb
pop
outsb
rcrb
out
adc
mov
testb
sub
mov
xor
movsb
cmp
stc
mov
ljmp
push
pop
outsl
xor
mov
adc
push
decl
adc
push
mov
into
loope
xchg
mov
loopne
enter
xor
push
adc
push
pop
push
jg
pop
cmp
scas
cs
pop
or
cmp
adc
gs
cmove
or
inc
in
mov
sub
popf
push
mov
mov
mov
and
jbe
dec
jb
shrl
pop
std
cs
mov
sub
mov
adc
mov
adcl
xchg
enter
xchg
inc
popl
xchg
fldl
sub
dec
dec
movsb
mov
and
dec
and
mov
jo
lea
test
or
and
ljmp
xor
loope
addb
fmull
into
cli
dec
pushf
dec
stos
xchg
inc
lahf
mov
aad
and
les
imul
mov
dec
cmp
jo
add
clc
ss
xchg
rolb
add
and
jl
dec
xchg
lods
cmpl
pop
mov
inc
popa
mov
push
divb
shrl
hlt
jle
or
adc
push
lret
xchg
sub
jnp
push
xlat
ds
inc
xor
add
mov
lods
jmp
jp
movsb
fimuls
leave
addr16
cmpsl
mov
cmp
iret
sub
xor
dec
xor
adc
mov
pop
fs
ret
and
sbb
das
mov
repnz
push
fbld
push
jmp
xlat
inc
add
and
stos
jge
pop
scas
pop
mov
jb
dec
sbb
xor
inc
xchg
scas
test
xor
ret
inc
sub
add
shlb
xchg
sbb
xlat
arpl
imul
pop
ljmp
pop
lret
jl
fwait
push
xor
rcl
jae
je
mov
jp
push
test
icebp
jno
into
adc
push
cmp
insb
jo
or
push
in
inc
aam
int3
push
and
iret
mov
jp
scas
dec
ficomps
sbb
mov
cmp
ja
mov
adcl
mov
orb
sub
mov
cmpsb
jp
push
jne
sub
or
mov
cmpb
subl
mov
arpl
cld
cld
test
gs
mov
xchg
sti
es
into
icebp
xchg
xchg
inc
or
add
push
jge
js
repnz
cmp
loop
jo
rolb
fldl
loopne
shlb
scas
in
in
adc
pop
out
pop
aas
inc
add
dec
cmp
sbb
jbe
jmp
call
dec
repz
in
mov
cmp
mov
es
clc
rcrl
xchg
mov
mov
daa
lea
inc
add
or
pop
sub
rcl
imul
mov
outsl
cmc
add
outsl
add
nop
pop
idivb
in
lahf
and
mov
inc
mov
mov
stos
lret
mov
xor
pop
mov
push
scas
fldl
aam
dec
pop
nop
xlat
je
fisubs
movsb
cld
inc
fsin
pop
movsb
cltd
xchg
out
ds
mov
mov
xchg
sub
out
fnstsw
mov
and
add
lcall
xor
push
dec
mov
popa
fistl
cmpsl
pslld
sbb
jae
scas
push
sbb
jg
mov
cmc
pusha
loopne
cmp
xchg
push
sub
cmp
mov
cltd
fcoms
aas
repnz
add
pop
pop
mov
ret
mov
push
pusha
dec
mov
insl
sub
mov
push
jle
jg
push
hlt
jnp
cmc
insb
shlb
fmul
cmp
inc
jne
mov
in
lea
inc
jno
xchg
adc
pop
cli
inc
jne
jecxz
das
addr16
jecxz
add
into
aaa
jo
out
inc
xorb
outsl
rorb
pop
mov
out
ret
inc
or
in
out
sbb
mov
sub
ds
bound
or
push
enter
lcall
pop
adc
ljmp
ret
pop
mov
in
shlb
leave
xchg
mov
jo
mov
sub
stos
adc
stos
adc
mov
ret
cmpsb
and
add
push
cmpsl
mov
das
movsl
stos
sbb
push
sub
fdivs
inc
cmpsl
out
cmpsb
mov
gs
loop
jbe
mov
aas
cltd
cmp
pop
idivl
mov
cmc
fisttpl
jnp
xchg
insb
sbb
pop
push
cmp
aas
test
fs
lcall
xchg
shlb
fidivrs
and
cmp
mov
mov
mov
icebp
or
mov
sar
xchg
aad
dec
pop
aas
das
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
outsl
jno
push
dec
pop
aas
das
das
push
pop
or
pop
out
out
sti
fcmovne
iret
mov
xchg
fwait
imul
filds
adc
push
jne
iret
test
xlat
daa
pusha
divl
popf
std
sbb
xor
arpl
cvtps2pi
jb
sbbb
int3
ret
std
repnz
repnz
and
push
insl
bound
lea
mov
add
loop
repnz
cmp
dec
insl
jp
push
int3
xlat
fdivs
int
xchg
bnd
sbb
mov
xchg
cld
dec
mov
or
in
sub
mov
pop
nop
push
pop
stos
jl
dec
leave
push
lods
out
or
clc
add
hlt
mov
mov
inc
and
mov
sbb
and
push
dec
adc
push
out
or
sti
push
inc
aaa
jae
sbb
repnz
adc
bound
lea
jge
popf
rcrb
lods
inc
push
dec
sub
push
loop
jle
sub
movsl
bound
insl
xor
in
call
mov
stos
mov
push
or
mov
mov
pop
mov
xchg
mov
mov
in
sbb
sbb
sub
pop
push
insl
jnp
imul
mov
vpsrad
xchg
jns
pop
adc
jae
push
adc
cmp
push
sbb
in
das
ljmp
xchg
addl
push
jne
sub
cmp
push
add
repz
fdiv
xchg
loop
jnp
xor
inc
sbb
push
insl
bound
lea
mov
shr
loop
repnz
and
push
insl
bound
lea
mov
shr
loop
repnz
add
jg,pt
fimull
sub
push
dec
cmp
fdivrl
sbb
mov
or
dec
pop
aas
rclb
hlt
pop
mov
sbb
xchg
xor
fs
and
dec
stc
fldcw
xlat
push
mov
mov
dec
pop
movsb
ret
cmp
stc
sbb
inc
rorl
lret
mov
mov
in
lock
mov
xchg
inc
pop
pop
addl
icebp
mov
xchg
testl
stc
mov
and
mov
aam
jmp
push
lcall
push
xor
push
stc
dec
gs
cmc
sahf
lahf
xor
push
add
dec
xor
jb
xchg
inc
fiaddl
sahf
in
adc
roll
cmp
mov
xor
inc
aas
dec
scas
sbb
sbb
imul
insb
sbb
push
stos
xchg
pop
pop
pop
sahf
sub
xlat
adc
mov
outsl
mov
cli
shl
fnstsw
lcall
pop
mov
dec
out
or
bound
mov
jnp
cmp
sar
dec
scas
int3
repz
xchg
xchg
stos
out
sahf
mov
cli
add
loope
int
sbb
xchg
pop
push
iret
sub
popa
push
je
test
gs
in
lret
dec
mov
ss
movsl
cmp
into
sarb
sbb
cmp
sbb
sub
bound
or
xchg
test
std
out
lret
fidivs
inc
jne
add
xchg
push
icebp
inc
test
xchg
jnp
sti
mov
or
pop
xchg
xchg
andb
inc
rcll
inc
mov
fwait
inc
xchg
call
fdivs
jno
data16
leave
js
pop
jp
sub
hlt
inc
push
jl
cmc
inc
jns
inc
dec
mov
push
test
dec
fnop
pop
popf
dec
dec
scas
imul
insl
cmp
xchg
mov
jo
pop
cmp
jecxz
xchg
cltd
xchg
inc
pop
inc
pushf
ret
pop
in
mov
dec
push
push
in
inc
sbb
shrb
ret
inc
fwait
adcl
jmp
int
sbb
ret
in
adc
xor
out
inc
inc
dec
in
cwtl
pop
mov
xlat
cmp
enter
jne
cmpl
mov
inc
inc
movsb
repz
or
out
rcll
bound
in
push
jo
std
mov
sahf
bound
sub
and
push
xor
cld
pop
pop
sysexit
in
stos
fdivrs
inc
fcoms
sbb
adc
out
sahf
pop
cmpsl
inc
mov
scas
xor
sub
popa
lahf
hlt
dec
or
or
jns
loopne
mov
movsb
into
mov
xchg
into
stc
mov
das
inc
add
dec
and
scas
mov
pop
push
cmc
jmp
popf
dec
subl
arpl
fwait
fs
or
add
mov
lea
push
imul
sub
jmp
sub
mov
fsubr
bound
mov
and
rcrb
hlt
repz
mov
xchg
stos
xor
cmp
ret
mov
cwtl
mov
outsb
call
movsl
jns
shr
je
test
out
hlt
lret
fadds
fcomp
in
cmpsl
lret
mov
testl
out
fisubrs
aaa
inc
stos
push
dec
mov
rcl
jg
data16
popf
push
in
adc
repz
xchg
fcoml
add
cmpsl
jnp
mov
sub
mov
lret
insl
mov
lods
dec
xor
cmp
pop
mov
ret
sub
add
and
pop
inc
mov
orb
hlt
jle
adc
aas
pop
cmp
ret
movsb
and
outsb
adc
jp
jbe
test
dec
mov
je
in
xchg
fs
sbb
mov
jge
mov
das
cmc
mov
xor
xor
je
out
les
stc
jnp
mov
xlat
int
sbb
xchg
jl
mov
aas
dec
pop
jle
rorl
inc
adcl
shlb
out
jle
lock
clc
loope
aas
repnz
cmp
jns
mov
cmp
pop
push
stos
aaa
and
push
jle
sbb
pop
fisubrs
test
xchg
cmp
iret
shl
inc
jns
popa
movsl
int3
fldenv
out
pop
xor
jae
pop
out
mov
clc
dec
adc
mov
enter
fstpt
lods
pop
bound
jnp
jae
fucomp
test
mov
outsb
pop
lret
rcl
cltd
int
add
icebp
mov
mov
dec
jmp
sbbb
sbb
out
mov
into
dec
in
adc
and
adc
jae
scas
jne
mov
inc
pop
dec
cmp
ljmp
lock
inc
movsl
ja
mov
add
xchg
popa
stc
pop
dec
mov
add
push
dec
mov
add
jmp
repz
add
cmp
scas
imul
pop
pushf
xchg
jbe
or
sub
mov
dec
xor
out
add
testb
jae
test
jo
push
pop
adc
mov
sub
sub
imul
int
imul
jo
dec
mov
adc
shrl
push
or
mov
call
addr16
and
outsb
dec
cmp
into
ffree
or
lds
lods
sub
aas
and
ret
jo
cmp
adcl
add
mov
in
movsl
mov
clc
cld
cmpl
mov
outsl
cbtw
int
lock
or
jb
jmp
roll
sbbb
dec
mov
mov
sub
inc
out
lods
pop
ret
ljmp
pusha
adc
sub
outsb
les
sub
jbe
cltd
popf
js
leave
es
loop
inc
ffree
fdiv
xchg
and
test
lret
or
push
hlt
mov
push
pop
adc
fnstcw
ja
add
out
mov
jmp
cmc
jg
push
in
scas
push
out
adc
sbb
mov
shlb
dec
or
jnp
mov
pop
std
jne
int3
pop
test
int3
je
dec
shr
jnp
mov
ss
mov
and
pop
pop
sbb
rorb
lcall
mov
cmp
mov
dec
lret
inc
in
negb
and
xchg
stc
das
fdivrs
cwtl
and
adc
mov
std
or
daa
das
or
push
clc
jae
js
lret
leave
sub
fsubs
mov
jae
aas
rorl
and
inc
add
js
pop
mov
pop
mov
mov
int
dec
xor
pop
out
push
xchg
add
xchg
call
andb
loop
adc
ficoms
insb
inc
adcb
xchg
mov
pop
loopne
and
out
mov
popa
jns
pushl
jge
add
decb
pop
push
pop
pop
sbb
push
int3
inc
pop
sub
loope
add
cld
ret
cmc
sbb
fwait
pop
insb
ret
push
push
push
dec
lahf
lret
nop
jnp
xor
xchg
loopne
inc
stos
std
ss
imul
fwait
stos
cmp
stc
mov
sub
call
add
ljmp
cmp
push
add
popf
sbb
add
add
push
or
cs
arpl
clc
jle
int3
les
push
rcrb
mov
imul
loopne
and
pop
dec
les
xor
xor
push
cwtl
pushf
inc
cmp
cmp
jp
sti
mov
testl
inc
sub
dec
movsb
ds
les
stos
movsl
out
or
lods
push
jge
andb
lret
fsubrs
push
loope
or
and
mov
xor
lods
sub
jbe
cmp
xor
and
hlt
and
ss
xor
sbb
lcall
cmpb
pop
push
std
and
xlat
aas
daa
test
or
cmp
cmp
shll
mov
jne
pop
cmpsb
push
js
adc
std
adc
dec
sbb
bound
add
mov
in
sub
and
lret
cmp
int
scas
push
stos
nop
mov
in
icebp
test
lods
ljmp
aam
mov
in
in
dec
push
xor
ret
pop
xor
outsl
adc
and
jl
pop
inc
lcall
jo
mov
dec
popw
jae
repnz
jmp
adc
test
notb
pop
push
dec
mov
loop
ds
pop
je
scas
push
icebp
addl
push
adc
pop
pusha
testb
mov
shrl
xchg
testb
arpl
gs
xchg
jno
cmp
inc
sub
mov
jbe
ret
hlt
fsts
adc
mov
shlb
cmp
xorl
lcall
cmpsl
dec
pusha
outsl
push
sbb
movsl
loope
fwait
cmp
cmp
inc
data16
mov
fistpl
std
stos
dec
and
xchg
mov
imul
lods
pop
jl
add
jo
mov
or
dec
xchg
jmp
sysexit
push
sbb
addr16
shll
loope
les
push
add
push
cmpsl
gs
jbe
gs
sar
inc
adc
and
hlt
cmp
icebp
push
sbb
lds
outsb
pop
cmp
xchg
or
rcr
testl
ds
cmp
cs
fsubrl
sub
adc
out
ljmp
dec
cmp
xor
les
mov
hlt
out
jge
dec
sbb
out
mov
mov
sahf
push
adc
adc
dec
das
push
pop
pop
cwtl
fmull
out
pmullw
aam
dec
pop
ljmp
inc
and
ljmp
lock
cmp
mov
sahf
testl
lds
fwait
push
push
lea
movsb
lret
mov
cmp
push
sahf
xchg
pusha
jns
pushf
adc
repz
xchg
pshufw
movsb
js
fldcw
pusha
inc
loop
divl
pop
insl
ret
push
or
stc
rolb
xor
push
push
pop
mov
xchg
inc
xchg
xor
std
popa
call
sbb
sbb
inc
add
fldl
out
or
into
push
xor
int
lds
xor
and
call
lds
ljmp
jmp
mov
inc
adc
fisubrl
leave
stc
pop
outsl
cmp
xor
test
push
mov
outsl
mov
mov
jae,pt
shlb
cs
test
mov
sub
scas
pop
sti
ss
dec
das
clc
push
cmp
out
mov
leave
pop
and
xor
sahf
pop
or
daa
pop
inc
gs
push
dec
icebp
mov
lds
add
push
mov
ficomps
push
xchg
inc
pusha
mov
test
cmp
xchg
dec
jle
xor
into
test
mov
pushf
sbb
mov
inc
hlt
sub
icebp
xchg
andb
lea
test
mov
les
jae
pushl
add
popf
jle
jle
ss
je
xor
dec
lret
popf
jbe
pop
into
dec
or
lods
mov
sub
push
dec
lcall
testl
pop
jbe
inc
push
sbb
inc
cmp
sbbl
and
xchg
xor
adc
jno
lock
popa
daa
inc
sub
leave
sbb
push
arpl
dec
pop
mov
fisubrl
cmpsb
mov
insl
mov
mov
pushf
inc
mov
mov
addr16
sarb
loopne
xlat
jbe
sti
jmp
push
in
inc
ret
xor
add
cli
sbb
jecxz
push
imul
mov
addr16
xchg
out
push
inc
add
out
jp
insl
out
adc
adc
inc
jecxz
cmpsb
loope
repz
cs
in
fstp
jb
lret
inc
sub
stos
test
mov
mov
cmp
xchg
xchg
inc
sbb
dec
or
or
adc
lods
aas
sbb
mov
mov
cs
jo,pn
adc
mov
mov
pop
push
lea
test
adc
ljmp
and
fidivrs
dec
out
test
scas
jb
and
movsb
shll
mov
mov
xor
and
fsubs
in
adc
push
lods
jae
js
inc
push
movsb
mov
rolb
fwait
jno
orb
jnp
in
jno
faddl
mov
push
mov
mov
dec
out
push
mov
add
pop
or
inc
jl
jbe
aam
test
or
push
out
ret
in
mov
insl
xchg
rorl
pop
sahf
pop
xchg
jbe
xchg
jne
aas
popf
lock
insb
adc
adc
es
adc
dec
rolb
mov
xor
int3
xchg
les
scas
in
repnz
mov
sbb
dec
ss
sub
insb
ret
lret
jne
into
xor
push
in
adc
adc
das
inc
cmpsb
cmpsl
push
fadds
or
mov
fimuls
sub
data16
les
sti
shll
or
add
iret
jp
push
icebp
icebp
mov
clc
xorb
cwtl
jno
add
lcall
jg
arpl
divl
cmpsb
push
into
inc
aam
out
push
and
mov
sub
sbb
jbe
cmp
inc
out
out
mov
add
popf
jg
imul
ror
scas
subb
std
cld
jecxz
mov
lahf
fadd
mov
xchg
bound
push
loop
cltd
iret
mov
je
popf
add
dec
fnstsw
xchg
jecxz
xchg
add
push
repz
outsl
jle
add
jmp
sub
adc
lods
cltd
notb
mov
movsl
mov
roll
aaa
aad
lcall
in
push
mov
xchg
xchg
out
sub
pushf
cmp
neg
dec
pop
fsubrp
cwtl
push
movsb
mov
add
andb
andb
or
cmp
aad
enter
jbe
jmp
mov
jne
and
in
outsb
das
mov
out
aaa
das
inc
imul
cwtl
mov
pushf
daa
cmp
xchg
cmpsb
mov
lea
xchg
sbb
cmp
stc
sbb
das
test
sbb
pop
outsb
push
and
into
sbb
jb
push
test
xchg
sti
shrb
jge
lea
dec
std
push
ss
fcmovb
fidivrl
jle
mov
and
popf
pop
jne
mov
clc
dec
cltd
xchg
lret
jne
pop
imulb
mov
mov
inc
mov
test
or
push
mov
mov
inc
rol
or
testl
aam
pop
leave
sub
jo
mov
out
cmp
ret
push
in
adc
daa
jecxz
nop
shll
hlt
pusha
iret
cmp
in
xchg
sub
mov
sub
mov
inc
jb
into
ror
jns
pop
in
mov
popf
xor
adc
jns
fildll
shrb
mov
jbe
mov
mov
add
mov
mov
insb
insl
in
and
into
xor
jae
mov
mov
in
and
ljmp
inc
cwtl
xor
xchg
out
aaa
enterw
sub
outsb
inc
dec
outsb
push
insl
add
addb
push
and
bound
scas
sarb
mov
lods
mull
andb
leave
pop
xchg
aaa
sbb
cli
pop
cmp
sub
mov
adc
mov
xor
cltd
dec
jg
aam
add
insb
or
lods
repnz
add
lods
gs
aam
xchg
in
mov
dec
shlb
neg
int
xchg
les
push
dec
cmp
es
inc
and
fbstp
xlat
ja
data16
int
add
movl
push
pop
or
xor
xchg
in
mov
jo
mov
cmc
repz
loop
notl
leave
call
cmpsb
sbb
movntq
out
cmp
push
sbb
mov
or
bound
add
jge
minps
mov
mov
push
dec
movsb
daa
pushf
jmp
nop
movsb
xchg
lods
xor
ds
dec
sbb
sti
pop
popf
ds
and
add
dec
xor
andl
lock
sbb
mov
and
in
adc
movsb
insb
loop
insl
and
out
mov
mov
xor
cmp
cmp
inc
aas
stos
outsl
test
sbb
nop
icebp
pushw
mov
sbb
jno
mov
movsb
push
mov
icebp
sub
sub
adc
gs
mov
cmpsl
or
lcall
clc
ret
je
mov
lcall
loope
sbb
pop
sarl
cmp
insb
jno
mov
pop
jnp
mov
push
xlat
mov
jle
je
pop
loop
sahf
pop
ljmp
rsqrtps
add
cli
popa
push
cmp
or
jns
mov
outsb
pop
outsl
aad
jb
adc
stos
and
lods
mov
adc
test
pushf
jb
cmpsl
das
stc
scas
loop
adc
aam
push
test
pop
cltd
arpl
sub
or
pop
lahf
out
mov
adc
in
ja
cltd
das
call
jo
cmc
sub
leave
lds
inc
inc
dec
sbb
mov
lods
inc
fsts
insl
jge
sahf
cmpsb
mov
push
dec
fcomps
fs
mov
orb
rol
aas
xchg
jge
loop
loopne
fdiv
dec
repz
scas
iret
cs
mov
or
lahf
std
push
adc
cmp
xor
sbb
ss
pop
inc
test
out
mov
scas
pop
jb
and
add
outsl
or
cmp
ret
ficoms
inc
clc
repnz
xchg
in
popa
mov
fsubrl
sub
dec
pop
jo
sahf
sub
sbb
cwtl
push
mov
cmp
xchg
scas
pop
jle
push
sub
fcmovu
pushf
flds
repz
push
fldz
and
mov
cmp
mov
xchg
subl
push
in
pop
fimull
out
jmp
cmp
cmc
sub
and
sahf
dec
and
pushf
fpatan
aas
cmp
out
cmpl
or
cwtl
adc
and
push
dec
movsb
sbb
cltd
pop
cld
loope
out
call
out
pop
orl
sub
and
mov
shlb
fucomp
or
cmp
mov
inc
pmullw
or
cmp
icebp
xor
fsub
mov
fistpl
adc
fidivrs
mov
rcrl
sbb
adc
inc
mov
xchg
pop
iret
mov
mull
movsb
test
cmp
pop
add
jno
mov
mov
push
ret
jle
dec
mov
sarb
aas
pushf
sub
xchg
mov
pop
and
daa
gs
std
imul
aam
fcomps
jg
push
hlt
jbe
sub
mov
xchg
out
jns
push
popf
repnz
lods
inc
cmpsl
ficomps
test
pusha
pop
or
int3
jae
sbb
sbb
jno
iret
mov
dec
jmp
ljmp
pop
adc
cwtl
pop
cmp
mov
add
hlt
push
lea
das
lock
cmpsl
cmp
inc
jo
pushf
pop
or
rcll
cmc
cmc
stc
push
adc
addr16
daa
lods
enter
pop
ret
jb
pop
inc
xchg
mov
cwtl
push
lea
out
outsl
cwtl
and
aam
pop
cs
sub
xchg
sub
decl
incb
mov
repnz
sub
out
out
sub
xchg
and
int3
jl
mov
push
dec
sbb
inc
mov
das
arpl
xor
test
loope
mov
pop
clc
sbb
je
out
jecxz
inc
adc
lcall
iret
sub
xor
pop
iret
sub
push
xchg
js
test
or
ds
je
in
outsb
movsl
mov
adc
xchg
mov
mov
dec
popf
daa
jge
insl
dec
cli
out
js
inc
push
scas
add
stc
jb
mov
in
push
inc
jno
call
rol
push
xlat
pop
or
jl
jl
addr16
cmp
or
jb
lcall
mov
pop
insl
mov
lods
loop
mov
in
in
sub
outsb
out
cmp
shr
and
insb
loope
inc
cmp
fstpt
aam
hlt
and
scas
mov
adc
outsb
mov
rclb
cmpsb
sbb
jl
aad
jno
decl
insl
inc
lods
repz
cmpb
mov
adc
xor
sbb
int
xor
pop
push
insl
bound
lea
mov
shr
loop
repnz
and
push
insl
bound
lea
mov
shr
loop
repnz
and
push
insl
bound
lea
mov
shr
jecxz
repnz
sbb
sub
cmp
push
insl
bound
lea
mov
sub
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
repz
repz
ret
sarl
mov
popa
jae
inc
inc
push
xor
and
repz
repz
ret
shll
addl
push
inc
inc
push
xor
and
adc
adc
jecxz
repz
ret
shll
addl
and
es
xor
pop
push
jno
adc
lods
stos
cmpb
xchg
mov
push
inc
mov
or
mov
jae
movsl
ds
and
ror
mov
mov
push
and
inc
push
push
inc
or
mov
mov
jno,pn
pop
ret
fdivrl
sahf
jbe
inc
add
xor
test
nop
cld
add
adc
rcr
mov
subl
pop
mov
mov
int3
jmp
mov
push
inc
ds
mov
or
jb
imul
enter
mov
sahf
iret
jne
or
movsl
cmp
cwtl
sub
aaa
notb
jae
push
sub
ss
aam
add
xor
jecxz
rol
ret
shll
addl
push
inc
inc
push
xor
and
adc
add
mov
mov
cld
int
ret
add
push
pop
and
push
adc
jbe
jae
test
xchg
icebp
mov
andb
hlt
xchg
add
add
and
les
pop
jp
imul
stos
cmpsb
mov
mov
adcl
inc
inc
push
xor
and
adc
add
repz
repz
ret
shll
addl
push
inc
inc
push
xor
and
adc
add
repz
mov
arpl
pop
lea
push
cmpsl
add
lahf
add
arpl
push
fldenv
sub
mov
lea
inc
std
push
sbb
call
inc
mov
cltd
inc
inc
repz
inc
icebp
in
inc
sarl
aas
xchg
push
into
mov
pop
xchg
cmpsb
ficompl
gs
in
loop
pop
je
vrcpss
sub
fstps
subl
jno
mov
pop
in
fwait
leave
add
mov
mov
lds
jnp
dec
in
loope
notb
jge
and
mov
arpl
push
ret
add
enter
jge
lahf
aaa
inc
mov
bound
out
or
or
push
cmpsb
push
adc
pusha
sbb
call
push
pop
sbb
xchg
test
push
test
jo
lods
mov
push
sub
xchg
cmpsb
push
cmp
dec
ror
data16
fwait
sarl
xor
inc
pop
and
mulb
xor
test
out
xchg
dec
inc
sub
adc
push
gs
xor
pusha
cli
into
dec
mov
enter
imul
dec
pop
xorb
sbb
mov
repz
or
test
gs
mov
mov
dec
push
movsb
das
push
cmpl
stos
push
cmpsl
mov
icebp
data16
mov
mov
sbb
jecxz
rcrl
lret
fldcw
loop
xchg
jnp
sbb
fdivl
fcmovnu
inc
dec
mov
adc
cmp
or
loop
adc
sub
aas
pusha
ljmp
fistl
dec
into
pop
out
dec
ret
add
lods
mov
insb
sub
or
pop
ret
stos
and
ret
add
fwait
and
inc
std
jge
jb
mov
shll
ljmp
loopne
ficoms
jno
rclb
adc
push
mov
dec
mov
mov
push
movsb
inc
pushf
mov
mov
arpl
out
ds
push
xchg
xchg
or
mov
cmc
sub
mov
cli
inc
int3
imul
scas
icebp
jbe
push
push
inc
dec
leave
shll
arpl
inc
or
mov
mov
insl
jo
sbb
cmp
mov
sbb
icebp
cli
pusha
lds
mov
adc
cmp
imul
mov
cmpsl
sbb
enter
dec
add
mov
leave
inc
fisttps
shrl
pop
faddp
xchg
cmc
add
sub
imul
mov
mov
arpl
lods
dec
leave
pop
lcall
aaa
testb
add
jmp
xchg
mov
outsb
mov
imul
lea
adc
adc
pop
nop
or
xchg
test
xor
fwait
jge
add
dec
lea
jnp
nop
outsb
gs
mov
nop
pop
sub
mov
pop
in
inc
pop
insl
jo
hlt
mov
push
add
cmp
scas
sbb
gs
xchg
xchg
into
add
jae
pop
xorl
push
push
dec
sbb
imul
xchg
inc
cmp
test
es
nop
xor
fldcw
cmp
mov
ljmp
fcmovne
pop
lods
ds
iret
mov
sbb
cmpsl
mov
in
push
and
in
dec
push
stos
movsb
adcl
ja
jo
ret
fcmovnu
sub
fdiv
pop
push
imul
pop
int
push
cwtl
xor
xor
repnz
rol
cmp
inc
xor
sub
sarl
push
orb
dec
xchg
loopne
rorb
adc
add
pop
push
dec
adc
lods
mov
pop
sbb
and
ror
and
insb
or
mov
add
ret
clc
packuswb
arpl
lret
subb
js
xchg
sbb
jl
push
or
outsb
push
in
push
pop
push
xlat
cmp
jge
jae
ss
mov
mov
aam
pushf
fnstenv
jge
push
sbb
sub
inc
stc
push
adcb
add
cmpb
adc
fstpt
int
cld
cltd
xor
sarl
orb
ffreep
sbb
cmpsb
xor
in
add
cmp
stos
mov
jne
push
cmpsl
or
mov
rol
js
mov
adc
sbb
gs
pop
push
sar
shlb
test
test
rcrl
fimuls
sub
and
notb
sti
and
sub
inc
mov
and
shl
popa
push
in
sbb
roll
ljmp
loop
mov
adc
xchg
nop
jmp
sbb
enter
and
push
std
aaa
aaa
pop
cmp
jecxz
mov
iret
loope
or
test
jmp
in
lods
ret
sahf
pop
subb
aas
stos
mov
or
pop
subl
in
aad
pop
mov
xor
mov
push
inc
call
cmp
adc
aas
xor
mov
or
inc
push
iret
dec
rorl
xor
icebp
inc
lahf
xor
push
mov
call
fwait
jae
adc
jge
sub
idivl
push
dec
xchg
add
sbb
jo
scas
and
mov
adc
mov
pop
push
and
js
out
repnz
push
fdivrp
sub
sbb
xor
lds
cs
shrl
mov
and
lret
inc
mov
out
iret
popf
dec
insl
sahf
int3
add
push
psubsw
pop
fisubrl
ret
rcpps
ja
cmp
mov
jb
push
jle
xor
aaa
mov
vpmuludq
stos
xor
lret
rcrb
cli
sub
fs
je
add
arpl
not
roll
rclb
pop
mov
mov
xor
pushf
pop
pop
js
lret
sub
lds
dec
dec
mov
aad
xchg
push
ret
mov
bound
ss
jecxz
sub
adc
repz
sub
sbb
and
ret
sbb
pop
mov
fcomp
or
pop
hlt
ljmp
loop
jmp
gs
inc
pop
movsb
scas
dec
roll
pop
sbb
adc
cmovne
and
mov
hlt
aas
in
sub
fs
jbe
pop
pop
xchg
data16
cmp
stos
mov
icebp
push
pusha
sbb
cs
cmpsb
lea
pop
stos
mov
lds
lret
xchg
iret
inc
insl
jecxz
push
mov
dec
rcrl
push
jmp
sbb
lods
movsb
jle
rcll
mov
push
repnz
js
dec
setnp
jecxz
sub
mov
push
fists
pop
sbb
int3
rorl
gs
int
jmp
xchg
adc
int3
rorb
pop
xor
loope
mov
clc
push
jg
add
inc
push
fs
add
or
enter
mov
sub
push
ljmp
or
dec
aad
loopne
mov
mov
in
and
cmp
test
cwtl
sub
fprem1
adc
jge
mov
jno
lds
je
push
jne
adc
stc
pop
rcrb
pop
dec
cmpsl
mov
dec
sbb
dec
out
rcl
jge
dec
repnz
pop
mov
roll
shll
inc
ret
lahf
mov
mov
out
loop
negb
jbe
mov
sti
jne
xor
mov
xchg
push
enter
int
xlat
jmp
push
insb
push
inc
jbe
xor
shlb
test
dec
push
es
xchg
dec
leave
inc
push
jne
sub
lahf
popf
xorb
in
pop
das
ljmp
inc
in
iret
adc
pop
and
sub
test
push
add
or
pop
mov
nop
les
add
xchg
imull
push
push
andb
mov
lret
stos
es
lock
lock
dec
cli
jecxz
das
int3
jnp
xor
mov
adc
popa
sbb
xor
push
mov
push
dec
hlt
jne
imulb
xor
adc
xchg
pop
inc
adc
mov
fwait
es
adcl
enter
mov
ja
push
out
iret
adc
popf
pop
test
inc
cwtl
imul
sbb
mov
movsl
cli
xor
js
gs
rorb
inc
addb
mov
mov
jbe
shll
pop
adc
sbb
stos
mov
adc
inc
mov
negb
xorb
xchg
shrl
addr16
add
jnp
sbb
icebp
push
mulb
or
in
adc
out
jo
push
jne
hlt
pop
pop
cmpsl
push
inc
push
push
int3
mov
jge
sbb
dec
icebp
mov
jae
mov
ja
es
mov
jo
ja
sbbb
sahf
add
xor
sbb
sub
imul
insl
loop
movl
mov
push
add
or
aaa
push
xor
sbb
int
icebp
and
enter
ja
add
sbb
pop
icebp
clc
pop
fbld
test
pop
fbstp
push
sbb
movsb
jae
sbb
loop
lock
sub
imul
ror
push
fidivs
movsl
adc
aas
inc
fs
clc
test
cli
outsb
cmp
insl
iret
scas
out
scas
jecxz
outsb
jae
scas
fildl
aad
jo
hlt
sahf
test
mov
sbb
loop
sub
pop
pop
pop
pop
nop
adc
sub
negl
es
mov
pop
mov
in
or
sub
mov
xor
pop
xchg
es
push
addr16
das
adc
gs
mov
roll
push
pop
daa
cld
les
add
cmp
add
pop
xchg
pop
xor
les
push
and
add
rclb
pop
fdivr
in
jmp
cmpsb
adc
das
dec
adc
inc
cmpsb
js
jge
pop
jecxz
lea
pop
lea
pop
jo
nop
enter
rolb
lea
sub
sub
lods
popf
mov
fwait
fwait
jl
mov
adc
adc
pop
mov
push
test
es
fs
xor
xor
mov
jno
cmp
aaa
adc
iret
or
imul
aad
movsb
jno
dec
hlt
loope
jge
imul
sbb
mov
cmp
jmp
sub
add
jne
loope
sub
dec
outsb
shrb
jge,pt
cmp
jle
push
jle
xchg
xchg
fcmovu
xchg
test
orl
or
dec
insb
xchg
mov
dec
jecxz
cmp
mov
sbb
aam
sub
dec
mov
push
fidivrl
fsubl
add
test
mov
push
mov
xor
in
push
sub
push
pushf
shlb
loopne
inc
sbb
out
xchg
mov
and
push
mov
sub
fcmovnu
pop
fdiv
fadds
mov
mov
mov
test
ror
loopne
inc
push
adc
push
xchg
mov
in
mov
fsts
lds
push
xlat
mov
dec
xor
cli
fstl
xchg
dec
shl
xchg
ss
in
push
popf
lods
xchg
mov
or
xor
xchg
shll
lret
pop
sub
cmpsb
mov
js
dec
imul
jle
insb
adc
mov
js
cmp
or
lea
cmp
jg
jo
jo
pusha
ret
sub
adc
lea
cmp
aaa
xchg
mov
mov
imul
loopne
or
sub
push
push
jmp
cmpsb
mov
js
test
sub
push
clc
shrl
popf
test
lret
cld
adc
out
cs
loop
shl
xor
sub
and
int
and
ret
push
sahf
xchg
pop
lahf
jnp
mov
icebp
mov
mov
lods
orb
or
cmp
and
xchg
test
mov
in
mov
in
popf
sub
and
sbb
sbb
pop
dec
enter
pop
test
dec
scas
inc
lods
mov
xchg
daa
mov
adc
arpl
lcall
xchg
scas
dec
push
adc
lds
iret
adc
xchg
xchg
fsubrl
dec
push
in
call
leave
loop
mov
fldl2e
jnp
int3
ret
mov
ljmp
gs
pop
ja
mov
xlat
leave
aaa
mov
cmc
lahf
sub
inc
push
jb
xor
leave
ss
je
add
popf
shrb
testb
fdivs
push
vmovddup
iret
jg
jb
in
inc
loopne
and
jne
fsubp
aaa
in
pop
sbb
lods
or
int3
fistpl
add
fiadds
dec
xchg
jmp
and
mov
add
lds
cmc
fsubrl
mov
xchg
sub
xorl
int
xchg
jg
cltd
paddsb
xor
xorb
sub
jns
je,pt
addr16
sti
popa
mov
and
push
sbb
push
repz
lea
repnz
fs
repnz
int
insb
jae
dec
sahf
dec
inc
and
cltd
rolb
push
mov
and
dec
jecxz
dec
into
cmpsl
mov
imul
xor
mov
jbe
fsub
mull
pusha
popf
inc
or
mov
iret
in
cmp
cmp
call
add
loope
leave
lods
movsb
or
out
jmp
xor
cmc
mov
push
movsb
les
ljmp
test
rcr
and
ja
jb
idivl
stos
sub
xor
bound
add
cltd
sbb
cmp
sbb
mov
aam
or
xchg
ror
bound
mov
xor
mov
pushf
xor
pop
sbb
mov
jp
mov
jo
out
and
fcmovu
adc
inc
pop
mov
pop
cmpb
iret
icebp
insl
dec
sbb
xor
test
xor
jo
sub
jo
daa
dec
sarb
jp
sahf
ds
ret
xor
jge
mov
xorb
sub
push
movsl
push
adc
sbb
sbb
das
or
std
mov
pop
mov
clc
pusha
jo
je
and
mov
mov
daa
xchg
xor
outsl
mov
pushf
mov
xchg
int
push
push
mov
mov
iret
xor
cmp
jmp
mov
dec
fistpll
dec
fs
lods
cmpsl
pop
mov
sub
ret
pop
mov
enter
ret
push
adc
in
mov
push
rolb
or
das
sbb
andl
sbb
test
xchg
test
shll
fisttps
xor
fdivrs
mov
js
dec
sbb
jb
mov
ret
dec
rcr
les
fmull
sub
mov
dec
mov
js
sub
add
subb
xchg
jo
dec
adc
je
ljmp
sub
sahf
add
in
adc
inc
sub
call
cltd
pusha
xchg
rorl
call
aam
fmull
dec
and
xor
sub
push
push
scas
xor
adc
mov
rol
xchg
out
xor
sti
add
adc
inc
clc
add
mov
mov
pop
jae
fdivl
mov
xchg
lea
in
ret
fistpll
in
sbb
mov
xor
jg
aam
dec
mov
inc
mov
sbb
xorb
or
imul
fldcw
je
aas
mov
filds
movsb
and
push
fs
stos
mov
jbe
insl
jle
sub
repnz
inc
insl
pop
add
pop
xchg
sti
and
xchg
or
and
pop
mov
inc
js
cwtl
sub
inc
or
into
add
sbb
add
push
cmp
or
in
mov
in
mov
add
mov
push
jecxz
mov
pop
pop
xor
lea
xchg
out
repnz
push
pop
pop
dec
push
dec
jecxz
test
and
inc
xchg
pop
sub
scas
pop
mov
cmp
jmp
jbe
in
jbe
dec
dec
fwait
sbb
sub
xchg
ds
sbbb
inc
add
fldt
cmp
cmp
or
das
add
mov
cli
int
mov
addl
dec
fwait
lahf
dec
lcall
ljmp
mov
out
leave
or
cwtl
push
jmp
adc
dec
dec
in
lret
out
adc
insb
mov
imul
jnp
dec
mov
push
js
aas
sub
inc
mov
mov
sbb
mov
and
lahf
mov
jbe
lahf
test
mov
shlb
push
pop
xchg
pop
jecxz
test
inc
stos
xor
xchg
pushf
or
mov
push
daa
inc
incb
mov
out
in
repnz
cmc
icebp
fidivs
xchg
dec
mov
outsl
notb
or
pop
xor
cmp
loope
rcll
mov
xor
por
pusha
ret
sbb
sbb
out
mov
pop
fwait
mov
ficompl
xchg
xchg
and
xor
pop
or
pop
jno
in
imul
jecxz
loope
ret
mov
pop
das
and
push
cld
into
inc
mov
xor
cli
push
cmp
testb
sub
push
pop
mov
sbb
movsl
sbb
adc
adc
insb
mov
leave
mov
test
push
inc
stc
adc
push
bound
dec
xchg
push
out
cwtl
pop
pop
and
cs
mov
sbb
xor
sub
inc
movsl
ja
data16
sub
push
ret
push
xlat
or
fistpll
pushf
dec
inc
lret
sbb
cmp
xchg
aad
jle
adc
cmp
je
loop
mov
popa
fstpt
rcrb
fst
push
lods
dec
addl
adc
in
loop
push
and
add
dec
mov
pop
pop
das
adc
sahf
add
mov
mov
or
sbbl
scas
sbb
pop
dec
imul
das
xchg
or
sbb
mov
add
frstor
pop
ds
data16
xchg
adc
loope
gs
rolb
lret
fdiv
xlat
rorb
cmpsl
mov
xchg
sub
mov
mov
xchg
push
call
pusha
jno
aad
push
into
insb
dec
roll
aaa
mov
cmpsb
inc
outsb
lods
jl
sbb
roll
and
iret
leave
jns
mov
mov
outsl
push
mov
cli
scas
cmp
outsb
or
jmp
stos
or
push
jne
clc
mov
out
xchg
cmp
cld
sbb
ret
xor
movsl
stc
jb
mov
aam
xchg
mov
popa
or
xlat
sub
aaa
js
lock
mov
fistpll
ja
add
add
xor
push
or
loop
and
icebp
repz
cld
scas
add
cmp
push
iret
xor
push
mov
aas
adc
test
push
sbbl
inc
jmp
jno
cmp
outsl
mov
rcl
adc
fcomps
inc
pop
push
hlt
in
enter
pop
jo
xor
test
stos
lods
iret
pop
inc
push
ret
hlt
addr16
cmpsl
clc
arpl
repnz
imul
or
iret
xchg
inc
fistps
clc
or
mov
pop
xchg
ret
sbb
scas
mov
inc
lcall
test
movsb
popf
jge
std
jl
cltd
notb
xchg
mov
or
mov
pop
mov
add
std
sbb
fdivrs
pop
mov
or
and
pop
pop
pop
mov
cmp
push
jl
or
cwtl
add
dec
xchg
stos
jnp
cmpsb
or
jns
loope
mov
jne
sub
jnp,pn
pop
jecxz
test
gs
inc
push
leave
xchg
shll
jae
ret
int3
js
sti
cmp
mov
jae
clc
mov
sbbl
sahf
fldl
jne
aam
mov
cld
jmp
sbbl
push
test
xor
pop
shll
adc
mov
push
add
andb
mov
jmp
les
cmc
sub
cmp
iret
cltd
loop
lds
mov
xchg
mov
inc
inc
xlat
out
repz
ja
xchg
stos
into
arpl
in
xor
lret
and
jp
shlb
dec
sbb
out
mov
cmp
imul
lods
pop
adc
add
jecxz
ja
sbb
push
xorb
mov
jo
call
or
pop
fwait
xchg
mov
test
aas
sbb
inc
jbe
jg
scas
aam
mov
jbe
shlb
addl
push
sub
popa
ljmp
repz
push
imul
pop
xchg
xor
or
cmpsl
int3
loope
dec
sbb
inc
xor
or
in
ret
ret
shll
addl
push
inc
inc
push
xor
and
adc
add
repz
repz
ret
shll
addl
push
inc
inc
push
xor
and
adc
add
repz
jae
inc
ret
shll
addl
push
inc
inc
push
xor
and
adc
add
repz
repz
ret
shll
addl
mov
fyl2xp1
inc
inc
and
stos
stos
int3
jmp
sti
in
fdivl
sti
ffreep
test
test
cmp
add
xor
and
push
mov
jno
popa
mov
mov
mov
xchg
icebp
sub
dec
inc
lret
add
pop
jmp
sti
push
in
fwait
jno
popa
mov
aaa
ret
addr16
aaa
mov
ffree
sbb
adc
mov
sbb
mov
cmc
push
cs
cmp
nop
cmc
aaa
loop
and
add
sub
push
xor
push
in
rcl
mov
sub
orl
gs
out
cld
mov
or
aam
rcrb
stos
in
rorl
mov
and
pop
mov
test
pop
into
data16
stos
int3
fwait
subb
aam
stc
dec
int3
jnp
ret
rorb
jae,pt
shl
les
push
mov
pop
fmull
sahf
call
dec
cmp
cs
inc
pop
mov
test
lret
into
sub
sti
mov
mov
and
pop
dec
cmp
jmp
adc
jecxz
mov
xor
jno
mov
out
int
rorl
test
icebp
icebp
pop
mov
jmp
cmpsl
pop
arpl
add
pop
cmc
sub
push
mov
inc
sbbb
inc
sahf
popa
lahf
inc
xchg
cmp
das
out
add
push
or
testb
pop
mov
inc
xchg
push
sub
dec
pushf
and
and
add
and
jecxz
mov
sarl
sbb
loope
adc
add
xor
and
push
mov
jno
popa
mov
mov
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jno
popa
mov
sbb
push
popf
xchg
mov
inc
fucomp
jecxz
pushf
mov
js
mov
faddl
pop
push
fs
ds
or
sbb
mov
int3
adcb
imul
sub
or
push
jb
jno
dec
pop
gs
pop
call
outsb
pop
xchg
mov
mov
mov
inc
ja
pusha
fiadds
insl
testl
nop
cmp
push
or
push
xor
sbb
xchg
mov
or
fsts
insl
ret
cmp
aas
adc
dec
cvtps2pi
jecxz
inc
mov
add
test
mov
movb
adc
fcompl
and
mov
pushl
aaa
ficomps
test
je
iret
pop
sub
cmpsl
test
cs
fwait
adc
out
in
pavgw
ds
xchg
adc
mov
mov
hlt
loope
addr16
add
push
scas
cmpb
test
in
imul
jne
or
mov
xor
xchg
subl
mov
insb
or
imul
dec
or
outsl
outsb
push
enter
add
scas
fsubrs
sbb
xchg
push
dec
add
imull
mov
mov
cmp
cltd
xor
xchg
mov
outsl
inc
xlat
fstpt
pop
cmp
add
sbb
cmp
loopne
jbe
jmp
xchg
jge
xchg
insb
cmp
inc
mov
inc
lods
iret
insb
sub
inc
xchg
cmp
test
bound
inc
dec
dec
daa
icebp
xor
add
cmp
iret
mov
outsl
mov
fildll
lods
sbb
scas
mov
adc
cli
lods
jnp
fistpll
xor
jmp
popf
lods
movsb
test
idivl
jbe
push
hlt
mov
lods
out
ljmp
inc
sub
and
and
jbe
or
dec
push
test
and
gs
or
xchg
jae
add
sbb
jl
pop
popf
add
push
fwait
and
pop
sbb
jle
les
imul
fwait
pop
and
mov
adc
cli
push
leave
and
lret
add
hlt
push
mov
cmc
xchg
cwtl
mov
xchg
fnstsw
clc
test
jnp
xchg
or
ss
inc
mov
rol
pop
cmpb
aam
jae
cmp
mov
xor
inc
add
loopne
sbb
cld
pop
mov
cmp
movsb
adc
inc
out
push
arpl
xchg
lds
sub
xchg
rorl
cs
mov
inc
mov
in
rorl
jge
sti
push
sub
data16
jl,pt
sub
aaa
mov
loopne
push
lods
popf
nop
cmp
jg
test
pusha
cmpsb
jns
hlt
popa
mov
lods
jge
push
xchg
lock
pop
in
mov
into
das
mov
jne
sub
int
popa
int3
push
cmp
pop
mov
cmp
out
and
mov
les
icebp
pushf
xor
scas
out
mov
test
xchg
add
shlb
data16
push
imul
nop
jno
adc
add
das
and
cli
jb
test
test
jbe
cs
mov
aad
mov
in
jbe
dec
cwtl
test
and
or
mov
rcr
cmpsb
in
test
push
xchg
cs
xchg
arpl
sub
xor
aad
xor
jle
into
jecxz
dec
cmpsb
je
xor
ret
fisubrl
xchg
mov
movsb
test
pusha
imul
popf
xorl
fistpll
in
jle
xor
pop
mov
das
bound
std
outsb
mov
test
pop
cmp
andb
fld
sub
mov
fwait
sahf
dec
mov
xchg
xchg
xchg
stos
cmp
pop
popf
mov
pusha
mov
adc
xor
sahf
xchg
push
fimull
mov
push
sbb
pop
mov
xchg
aad
xchg
shl
int3
mov
sub
stos
xchg
push
cmc
lock
arpl
outsb
scas
int3
lahf
nop
cmpsb
cld
es
mov
pop
lods
out
lret
in
dec
shl
aaa
into
mov
jmp
ss
xor
cmp
lea
fldcw
push
dec
jne
inc
popf
hlt
call
ljmp
je
fcmovu
lock
test
jbe
repz
jmp
xchg
fldcw
mov
arpl
daa
outsl
inc
mov
loop
pop
xchg
les
xor
rcll
sbb
jno
cwtl
mov
inc
test
jbe
sbb
push
cmp
mov
or
mov
loop
leave
stc
cmp
pop
dec
add
sbb
jl
insl
div
add
mov
adc
je
cmp
dec
stos
in
ret
pop
loope
or
adc
imul
cmp
push
arpl
cmp
pushf
xor
jno
mov
addr16
sub
fisttpl
in
mov
push
fwait
nop
pop
pop
mov
and
mov
mov
pop
inc
or
pushf
cld
mov
mov
test
mov
int
popa
and
dec
dec
in
loopne
test
xchg
cmp
mov
stos
sar
cld
xlat
inc
sub
icebp
inc
xchg
sub
data16
mov
or
dec
sti
xchg
pushf
xchg
add
sbb
outsb
pushf
mov
jmp
int3
ret
mov
shrl
jno
ds
sub
dec
or
pushw
xchg
inc
pusha
xchg
hlt
loopne
cmpsb
popa
test
sahf
mov
sbbl
sahf
mov
clc
in
fdivrs
add
xor
std
sub
fdivs
enter
cmpsl
add
lds
test
jo
dec
gs
jno
bound
fists
stc
popa
nop
cmp
sar
cltd
in
jo
jno
or
dec
push
rcrl
mov
ficomps
sub
gs
js
or
mov
enter
pop
xchg
cs
out
push
mov
hlt
lahf
xchg
or
inc
mov
lods
rolb
incb
ljmp
xchg
in
mov
rcl
repnz
fisttpll
movsb
in
sbb
hlt
in
pop
inc
cwtl
cs
cmp
ror
es
pop
mov
je
pop
lock
insb
gs
cmp
popf
cwtl
jns
mov
dec
loop
mov
or
sbb
dec
ret
mov
rorb
add
or
or
sub
sub
mov
xor
in
pop
cmp
adc
ds
pop
push
push
push
fistps
movsb
es
xchg
dec
cmpsl
jns
mov
or
addb
pop
or
cmc
push
or
es
mov
shll
xchg
lahf
dec
enter
loopne
pop
fadd
ja
enter
pop
push
mov
jae
es
cmp
jecxz
xchg
dec
or
cmp
push
mov
fstl
rcll
std
dec
test
fsubs
sub
xchg
xchg
call
in
adc
daa
jae
sbb
insl
or
push
iret
inc
xor
iret
movsb
mov
push
in
inc
clc
stos
xchg
pop
and
dec
adc
popf
pop
insb
push
lret
popa
push
frstor
in
sarb
arpl
repnz
pop
mov
dec
mov
dec
xlat
push
mov
push
scas
je
call
fisubs
or
cmp
sub
jl
fiaddl
nop
pop
sbb
xchg
mov
ret
jmp
cmp
leave
mov
cmpsb
mov
iret
inc
test
inc
fildll
mov
addr16
clc
and
push
fmulp
sub
cmp
or
iret
xchg
outsl
stc
les
mov
dec
fldt
mov
lret
inc
movsl
outsb
add
jmp
mov
pop
fdivp
mov
jne
aaa
movsl
jl
xlat
mov
inc
loope
les
fnstcw
rcll
xor
cmp
inc
ljmp
and
insl
mov
ret
adc
fstpl
adc
xor
repnz
pop
mov
cmp
jmp
dec
xor
aad
jle
out
lea
mov
outsb
and
repz
mov
mov
test
inc
sbb
movsb
orb
sbb
pop
in
insb
pop
xor
jnp
leave
rcl
mov
addr16
and
xor
arpl
outsb
insb
mov
inc
in
test
jnp
jmp
sub
fildl
pusha
push
lcall
adc
push
mov
jg
sub
pushf
push
test
imul
repz
js
pop
push
xchg
mov
or
xor
mov
cmp
data16
xchg
dec
push
lahf
lods
enter
and
aam
loopne
dec
sbb
mov
movsl
je
mov
fidivrl
and
pop
aam
dec
int
jl
dec
and
xchg
inc
sub
in
cmp
ret
pop
mov
sub
test
inc
cmp
push
or
cmpsb
mov
fiaddl
imul
iret
jecxz
pop
aas
frstor
fs
push
mov
add
mov
sbb
mov
sbb
or
test
sub
add
pop
cmp
mov
xchg
loop
imul
loopne
or
or
mov
es
ja
xor
add
cmc
repnz
lds
mov
fsubs
cmpxchg
mov
mov
fcoml
cli
andl
add
sub
or
fsubrs
bound
or
loopne
push
pop
cmpsb
shl
outsl
xchg
jns
fildl
cs
xlat
push
cmpsl
jmp
sbb
jg
cmp
addb
sub
xlat
insl
movsb
adc
ret
lea
ljmp
push
inc
sub
sar
push
mov
ds
add
push
leave
pusha
push
dec
sub
cmp
xchg
sub
fsubrs
mov
xchg
rcll
mov
js
sbb
fnstenv
cs
sbb
outsb
popa
imul
mov
or
dec
sub
je
and
xlat
icebp
dec
fdivrs
jb
je
pushf
mov
rorl
lcall
sub
inc
mov
xor
push
cmp
insb
adc
cmc
push
shll
addl
fisttpl
push
add
in
sub
inc
fisubrl
call
sbb
mov
icebp
lock
sub
fwait
mov
push
enter
dec
addl
scas
fstpt
push
stc
push
sahf
add
pop
cli
xchg
jmp
leave
ret
mov
xchg
fisttpl
popf
mov
mov
enter
jne
xchg
xor
sub
into
pop
pop
nop
push
rcr
stc
add
adc
mov
or
sub
mov
scas
pop
jmp
sub
lea
ss
push
jnp
mov
cmp
out
call
loopne
das
rorl
outsb
into
fsubrl
adc
inc
mov
cwtl
jmp
xor
mov
fldt
filds
push
lret
fisubrs
pop
insl
cld
hlt
call
inc
dec
das
pop
fldlg2
inc
xlat
push
and
std
mov
mov
lods
int3
pop
jno
xor
mov
lahf
mov
fs
jbe
nop
dec
push
les
lock
fcompl
adc
mov
fs
xlat
ds
pusha
and
in
sbb
test
mov
jmp
in
jp
fucomip
sub
adc
lret
mov
aaa
inc
jbe
xchg
mov
or
imul
aad
mov
adc
loope
xchg
repz
pop
test
ss
popf
les
sbb
jo
imul
xor
cmp
push
std
in
xor
mov
js
iret
mov
enter
loopne
mov
push
or
push
push
lds
in
arpl
sbb
in
fdivl
pop
mov
push
sub
fsub
pop
addl
push
mov
in
lret
pop
mov
in
and
test
sti
lock
jae
pop
xor
sub
adc
rcrl
sbb
out
jge
lahf
into
adcb
mov
push
jns
xchg
inc
and
out
push
mov
loop
jge
and
add
xchg
aad
lods
fcomps
stos
push
popf
fwait
iret
adc
es
mov
leave
push
push
jmp
adc
test
mov
imul
je
sub
inc
inc
xchg
dec
sarb
movsb
mov
or
pop
clc
divl
push
loop
imul
cmp
jg
cwtl
mov
mov
xchg
lret
or
xor
mov
xchg
mov
in
popa
adc
xchg
and
push
fsubl
vcvtsi2ssl
sbbl
daa
xchg
mov
or
jmp
xor
jle
out
jb
std
push
shlb
cmp
fsubl
xchg
add
lret
outsl
xor
movsb
sti
add
test
or
gs
insl
lock
pop
pop
mov
pop
cmpl
lret
pusha
xchg
mov
add
mov
pop
movsb
aam
jo
insb
negl
dec
push
sarb
jae
sbb
xchg
outsb
and
inc
filds
push
mov
test
jp
mov
sbb
jae
cs
inc
xchg
bound
add
xor
scas
jp
push
ret
mov
mov
and
add
lret
xor
imul
mov
inc
xchg
jp
popf
mov
mov
std
sbb
xor
dec
sub
fs
pop
pop
mov
dec
sub
shl
mov
xchg
jecxz
mov
jns
aaa
nop
js
push
popf
mov
je
nop
sbb
jnp
rcll
lret
cmpsl
stc
inc
cld
lahf
pop
and
popl
fsub
icebp
or
aam
or
push
ljmp
inc
xorb
data16
and
lcall
jbe
inc
cmpsl
fistps
mov
dec
sub
sbb
mov
enter
call
dec
jge
push
out
xchg
add
adc
adc
fs
or
jg,pt
or
jecxz
inc
lods
mov
and
dec
repz
test
aaa
jnp
mov
mov
pause
and
test
pop
xor
or
mov
scas
pop
mov
push
push
jae
adc
mov
xchg
inc
cld
inc
push
and
push
aaa
cmpsb
inc
gs
test
stc
dec
cmpsl
das
mov
fcomps
dec
test
dec
add
fcmovne
sub
and
fists
pop
in
pop
jp
adc
xchg
in
stc
add
sbb
dec
cltd
xor
enter
or
mov
in
add
mov
fistl
int
call
sub
shll
lods
das
jb
lret
shrl
xlat
push
sbb
fldt
pop
in
xor
test
jmp
jge
iret
loop
in
mov
or
jmp
cmp
xchg
fidivl
mov
test
subl
pop
pop
mov
adc
mov
jmp
es
popf
mov
push
dec
dec
mov
cli
inc
es
jo
sub
scas
imul
push
dec
jl
shll
clc
ficomps
and
cli
or
mov
iret
repz
orl
dec
aam
mov
add
mov
bswap
nop
ret
and
lds
xor
aad
sub
xchg
lods
das
and
es
pop
mov
mov
dec
pop
lods
insl
imul
sbb
xchg
stc
push
loope
jne
xor
sbb
dec
mov
jg
pop
cmp
jno
or
lret
popf
out
cmp
enter
push
lret
aas
mov
lret
or
stos
xor
mov
push
loope
fstpt
jg
clc
faddp
and
rcrl
dec
xchg
cmp
cmp
ret
xchg
test
outsb
jmp
insb
stos
adc
test
fidivrl
sub
pop
pop
filds
push
xchg
sbb
aas
jne
aam
push
repnz
jecxz
sbb
movsb
cmp
rol
sub
adc
insb
mov
mov
aaa
pop
and
aad
imul
pop
mov
mov
fistps
cs
shrl
icebp
stc
stos
push
test
jecxz
lock
adc
adc
push
xchg
mov
pushf
in
add
in
push
dec
pushf
gs
subb
push
cmp
ds
icebp
outsl
dec
bound
sub
push
rcl
outsb
add
sub
clc
inc
inc
jb
mov
sarl
sbb
in
imul
sub
jmp
ljmp
dec
sbb
xchg
cltd
push
jo
cmp
mov
sub
daa
mov
or
es
lcall
dec
xchg
dec
nop
jne
inc
pop
add
mov
add
imul
stos
mov
in
aad
inc
pop
xor
jae
add
inc
movsl
cmp
xchg
loop
data16
pop
push
or
push
mov
sbb
daa
daa
fisttps
fbstp
in
lods
jge
sub
cmc
add
mov
push
ds
jno
inc
or
cmc
fimull
daa
ss
xchg
adc
das
stc
add
dec
xlat
out
xchg
mov
mov
sbb
mov
pushf
add
inc
cmpsl
es
cmc
shrl
clc
xchg
xchg
sub
cltd
ja
mov
mov
or
mov
aaa
xrelease
jge
and
enter
or
and
testl
outsl
int3
mov
xchg
adc
pop
and
ss
mov
mov
repz
repz
xchg
push
dec
sti
fildl
or
aaa
lcall
adcl
mov
mov
icebp
test
mov
push
cmp
je
xorb
mov
mov
mov
mov
mov
mov
xor
dec
ret
inc
mov
or
addr16
mov
xchg
or
xchg
sahf
loope
mov
repz
mov
cs
cld
dec
dec
add
je
movsl
or
add
add
push
test
or
dec
lods
mov
mov
rclb
or
je
rcrb
mov
jb
jmp
pop
test
data16
or
sbb
adc
das
scas
jnp
gs
mov
popf
adc
xchg
sbb
shr
js
clc
fs
dec
loope
and
mov
adc
fidivrs
adc
sarb
popf
add
imul
mov
or
sub
xor
popaw
mov
pop
and
xchg
xchg
adc
push
mov
xchg
dec
inc
test
sbb
xor
data16
divl
cmpb
xor
popa
mov
push
imul
sub
in
jmp
insl
or
movsl
adc
test
mov
clc
ja
mov
xchg
mov
dec
not
filds
and
ficoms
dec
and
mov
sub
or
xor
sbb
ror
pop
inc
inc
dec
mov
cmpsb
jg
stos
les
push
fsubl
pop
push
mov
int
push
cmp
or
or
pusha
and
add
rclb
push
rcrl
and
mov
mov
jb
decb
sbb
andb
push
mov
mov
scas
add
sbb
mov
push
cmp
lds
xchg
faddp
in
ficoml
xchg
sbb
jl
cmpsl
mov
stos
es
jg
adc
cmpsl
ljmp
pop
data16
and
scas
rorl
nop
imul
jbe
push
xchg
jle
add
mov
int
or
nop
and
lds
int3
xchg
nop
xor
inc
fadd
into
outsl
pop
pusha
mov
cwtl
adc
mov
xor
enter
pop
ret
xorb
mov
or
pushf
xor
jns
sbb
idivl
nop
aad
out
sub
mov
cmpsl
xchg
push
sbb
iret
mov
add
dec
icebp
push
in
mov
cmpsl
xchg
pop
loope
or
gs
arpl
sbb
push
cmp
mov
cli
icebp
scas
ret
or
push
mov
jo
pop
sub
ss
cli
das
fldpi
loopnew
andb
jne
jns
sbb
push
xchg
pop
sbb
xchg
ret
inc
rolb
sub
fnsave
and
or
arpl
pop
or
loopne
xor
adc
cmp
pop
in
lret
mov
insl
xchg
les
cli
out
cli
aaa
jmp
gs
add
jae
mov
out
arpl
mov
pop
mov
xchg
aad
scas
aaa
sahf
in
or
push
add
cli
test
hlt
dec
dec
mov
in
cmp
cwtl
mov
dec
in
jno
in
gs
xchg
sub
jno
nop
dec
popf
mov
pop
add
imul
push
je
rolb
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jno
popa
mov
mov
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jno
popa
mov
mov
or
mov
sub
cmp
jmp
sti
push
mov
jne
push
mov
cmp
jp
or
sbb
stos
popa
cmp
xor
jno
jmp
mov
add
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
in
push
cld
inc
int3
jae
arpl
into
insl
loop
xchg
and
ret
dec
repz
jecxz
xchg
cmp
or
sbb
in
push
cld
inc
int3
jae
arpl
pushf
and
ret
dec
repz
jecxz
xchg
cmp
or
sbb
in
push
cld
inc
int3
jae
arpl
pushf
and
lahf
and
push
out
jb
mov
cwtl
aaa
int3
pop
mov
gs
ret
rorb
popf
mov
xchg
jns
pop
cmp
push
pop
ja
nop
bound
pushf
push
jmp
cld
jb
popa
sub
repz
or
xchg
pop
mov
test
mov
xor
mov
dec
negb
imul
cmpsb
jb
ja
adc
jae
loopne
mov
ss
sarb
sub
sub
and
bswap
fnstenv
xchg
sub
leave
mov
jg
ret
pop
mov
repz
add
outsb
fmuls
add
pushf
cmpsb
cmp
shlb
insb
mov
dec
cmpsb
pushf
mov
int3
jae
arpl
pushf
and
ret
dec
repz
jecxz
xchg
cmp
or
sbb
lods
mov
lods
jl
inc
call
mov
and
sub
xor
mov
cltd
or
jbe
sub
or
pop
sub
imul
mov
jg
add
jl
dec
repz
jecxz
xchg
cmp
or
sbb
in
push
cld
inc
int3
jae
arpl
pushf
and
ret
dec
repz
jecxz
xchg
cmp
or
sbb
in
push
fsts
xor
enter
loop
push
mov
cmc
cmp
insb
scas
loope
inc
das
mov
in
popf
sub
inc
ljmp
icebp
pop
ljmp
jge
sub
cmc
add
loopne
jp
cmpsb
jmp
insl
inc
mov
push
lret
popf
fsubrl
leave
movsb
hlt
cmpsb
testb
cmp
int3
fs
cmpb
mov
lods
pop
nop
mov
mov
scas
jmp
shrb
mov
test
push
push
dec
push
push
xchg
std
shlb
andl
inc
or
cli
leave
mov
pop
sbb
mov
jns
sub
mov
testb
insb
nop
insb
aas
cmp
mov
or
divb
mov
and
cmp
shlb
xlat
cmp
xsavec
add
movsb
out
dec
mov
adc
fcomi
gs
sbb
sbb
or
nop
mov
int3
and
imul
popf
jl
xchg
cwtl
xor
mov
dec
or
adc
push
ret
mov
xchg
ja
inc
faddl
mov
insb
xor
xchg
sub
mov
scas
ljmp
std
xchg
pop
inc
dec
xor
rolb
mov
or
pop
cmpsb
inc
mov
loop
scas
icebp
mov
inc
lods
in
mov
mov
fcompl
call
jns
adc
xor
addb
in
out
jno
mov
mov
push
movsl
cmp
andl
sti
and
sbbb
nop
xorb
jmp
sbb
test
push
or
mov
fistps
nop
cmc
cmp
jo
push
sbb
fwait
lret
or
sub
enter
dec
mov
pop
pop
mov
lock
adc
add
pop
dec
mov
jle
jmp
dec
jne
xchg
out
xchg
cmpsb
cmpsl
cmpsl
pop
scas
int
popf
lods
cmp
and
mov
inc
cmpl
stos
call
scas
sbb
push
xchg
sbb
pop
xor
mov
add
in
lock
cmp
and
sbb
push
jg
add
fwait
outsl
dec
test
dec
sahf
loopne
lds
loop
xchg
and
mov
fnclex
clc
xor
repnz
es
push
lret
pop
inc
cmc
jae
jl
into
int
sbb
fidivrs
pusha
insb
inc
mov
cmpsb
mov
out
stos
dec
jmp
addr16
outsl
dec
cltd
pop
mov
rorb
dec
and
ds
sub
jl
movsl
sahf
xchg
mov
push
aaa
repz
adc
mov
inc
scas
and
push
test
pop
std
sbb
sbb
jo
push
jbe
xchg
add
jl
mov
mov
nop
movl
jb
adc
imul
xor
and
loopne
out
sbb
xor
push
xchg
loopne
sarb
ret
jo
loop
cmpsb
pop
stos
in
xor
mov
fistpl
cmpsb
dec
xor
jno
sbb
rcll
adc
and
jmp
dec
call
shl
adc
xor
sub
stos
and
or
sbb
and
dec
jb
pop
movsb
imul
mov
fiaddl
negb
inc
loope
cmp
cmp
push
out
add
pushf
add
pop
out
jnp
mov
mov
xchg
mov
cmp
pop
cld
hlt
mov
imul
mov
pop
imul
fdiv
xchg
int3
sub
dec
inc
and
mov
bound
icebp
mov
out
pop
sbb
leave
jle
outsl
jns
dec
int3
ret
sti
out
pop
lods
nop
repnz
inc
mov
sub
loopne
and
xchg
enter
aas
out
inc
jl
in
out
push
dec
cmc
cmpl
cs
mov
xchg
lods
aad
xchg
test
pop
lds
push
xchg
rolb
ja
mov
aaa
data16
push
out
xchg
xchg
leave
mov
push
or
ja
xchg
aad
sbbb
faddp
pop
dec
mov
jmp
add
jne
push
lret
ret
dec
out
cmp
insb
sbb
xchg
cmpsl
mov
jge
fisttpl
hlt
cwtl
mov
loopne
das
repnz
sbb
not
bound
adc
mov
push
push
je
das
out
jae
mov
js
imul
fs
add
xchg
repz
gs
sub
mov
outsb
jge
xchg
test
jnp
dec
push
and
inc
aas
lds
call
aaa
pxor
push
push
das
aaa
sub
inc
ja
roll
pop
cmp
fisubs
orb
cmpsl
dec
rcl
mov
dec
add
mov
xchg
sub
or
mov
fdivrl
jl
dec
cmc
sbb
outsb
insl
sbb
pop
adcl
dec
call
mov
sbb
jns
mov
dec
or
push
dec
xor
sub
and
push
sarl
adc
add
sub
dec
shld
ss
or
mov
sbb
loope
inc
xchg
popa
pop
sarb
xchg
filds
jbe
sbb
jmp
jecxz
loopne
fdivrs
inc
test
jne
scas
sbb
mov
xor
push
nop
shr
ds
or
int
cli
scas
add
cmp
pop
bound
fcoms
daa
outsb
rorb
lahf
mov
rorl
aaa
dec
imul
aaa
ljmp
sbb
mov
push
das
in
inc
mov
daa
outsb
aad
sbb
lds
jmp
xchg
sbb
or
cmp
in
js
push
lret
inc
push
mov
lods
pusha
mov
adc
xor
sbb
and
fwait
pop
push
nop
xchg
rol
iret
pushf
jne
out
mov
jecxz
xor
aas
lea
aad
cmp
inc
mov
mov
in
sbb
popf
sbb
mov
std
inc
mov
in
rcr
negl
mov
or
cmp
pop
cmp
ret
sub
jecxz
add
jno
inc
and
mov
pusha
push
sbb
imul
mov
mov
testb
xchg
stos
xor
bound
int
out
fxch
mov
gs
loop
push
xchg
dec
adcl
jmp
mov
int3
in
popa
mov
cltd
rolb
mov
leave
xchg
push
cmp
cmp
roll
pop
mov
xchg
or
lods
icebp
jg
sbb
cltd
mov
mov
xor
cmp
mov
cmp
aaa
xchg
xor
call
push
sti
arpl
jns
ret
push
cmp
pop
inc
shlb
jne
lods
ljmp
xor
idivb
fnsave
loope
push
mov
int3
xor
insb
je
add
sub
cwtl
pop
xchg
shll
push
leave
mov
cmp
std
lret
out
mov
sub
popa
jmp
mov
mov
mov
pop
jb
lahf
shll
lahf
and
push
sahf
jne
popl
sbb
mov
xchg
and
imul
mov
lea
pushf
sbb
test
xchg
cmp
xchg
dec
sahf
cmpsl
push
in
scas
fwait
push
cltd
jmp
push
in
popa
xor
out
lods
and
pop
loop
dec
orb
pushf
lods
nop
lods
leave
mov
rcll
imul
notl
std
loope
aaa
lods
xchg
and
lock
add
inc
stc
add
and
dec
mov
sub
pop
xlat
jmp
pop
mov
pop
mov
int3
pop
sahf
mov
mov
pop
incl
inc
mov
js
push
loopne
loopne
xchg
pop
cmp
arpl
and
les
lret
cmpl
push
mov
lret
lods
pop
movsb
rcrb
inc
sub
addr16
data16
push
mov
gs
out
fdivs
int3
mov
pushf
dec
adc
and
pop
pop
lods
repnz
push
cld
fs
and
adc
sub
sbb
push
cld
stos
xchg
loopne
mov
cmp
push
ja
push
mov
je
in
lods
push
loop
aaa
mov
push
xor
push
mov
inc
subl
sub
call
and
ljmp
sub
in
lcall
in
test
repnz
jecxz
test
xor
rcll
loop
scas
lods
lock
cmp
imul
ret
mov
aam
movsl
out
enter
pop
ret
out
jp
mov
adc
movsl
mov
inc
fcos
push
mov
mov
fwait
les
fdivrl
loopne
ja
xchg
dec
sub
mov
add
loop
pop
push
mov
ret
ficoml
and
lock
jg
dec
int
inc
cmp
xorl
jg
mov
push
add
push
aam
mov
cltd
arpl
mov
jb
stos
popf
sarl
pop
sub
into
movsb
mov
stos
dec
pusha
gs
xchg
bound
stc
or
sub
dec
inc
stos
test
in
pusha
jo
daa
xor
dec
int3
add
stc
mov
or
out
fsubrl
mov
jne
and
cmp
lea
inc
aas
aad
sti
in
lods
ljmp
out
xchg
lods
jecxz
in
cmp
mov
lods
cltd
xchg
bound
cmc
out
in
mov
pusha
cwtl
xchg
fwait
dec
mov
jge
mov
add
xchg
rcl
add
cmp
jo
sti
cwtl
mov
outsb
xor
rclb
or
hlt
fmuls
dec
out
push
mov
lea
fwait
and
xchg
loopne
inc
xchg
xchg
into
pop
and
rclb
lcall
inc
mov
orb
ds
outsl
in
pop
mov
pop
jb
mov
inc
pop
test
push
pop
sub
outsl
cmove
repz
add
xchg
lods
push
jne
in
rclb
bound
inc
mov
mov
js
jo
cmc
sub
imul
pop
loope
dec
cmp
fsubrl
stc
cltd
stos
inc
mov
testb
sub
addr16
lahf
ror
insl
mov
xor
fs
insl
push
call
xlat
inc
lcall
scas
aad
pop
add
out
lcall
and
sub
jns
out
push
cmpsl
int
mov
shll
fmuls
dec
or
jecxz
rorb
cli
daa
test
or
jae
mov
xlat
fs
inc
loope
imul
pop
adc
mov
push
out
cli
or
dec
push
push
das
xchg
icebp
or
sbb
mov
out
mov
rcrl
inc
into
mov
mov
fsubr
adc
leave
pop
addr16
call
xor
dec
int3
pushf
dec
inc
icebp
inc
ficoml
inc
into
testl
or
sbb
inc
cmp
and
loopne
mov
push
sbb
cmc
xor
insl
data16
xlat
lahf
jecxz
cmc
in
cmp
popa
mov
pop
xor
xchg
stos
pop
or
cmp
adc
ret
pushf
pop
mov
testb
cmp
add
test
pop
in
jb
add
sbb
clc
pop
imul
in
nop
xchg
aaa
roll
pop
pop
jns
jecxz
and
xorb
mov
outsl
xchg
cltd
out
mov
sbbl
xchg
fstl
out
and
and
inc
arpl
cmp
xchg
xchg
sarl
call
jbe
cmp
cwtl
add
mov
pop
rolb
pop
aad
or
aaa
dec
jl
mov
outsb
cmp
cmp
xor
neg
repz
aaa
mov
stc
jge
mov
in
mov
icebp
pop
inc
xchg
hlt
mov
and
jo
push
push
mov
mov
sbb
pop
adc
jno
dec
lock
popf
int3
in
mov
imul
add
test
push
pop
popf
mov
test
push
into
sub
stos
hlt
push
dec
pop
cld
and
into
push
aad
sbb
mov
mov
cmp
scas
loop
mov
ret
out
jne
mov
fisubl
mov
inc
dec
pop
inc
unpckhps
rorl
imulb
js
sti
iret
nop
out
mov
jp
mov
mov
insb
into
adc
inc
add
les
scas
inc
mov
fistpll
add
mov
clc
mov
dec
inc
inc
and
and
fst
je
dec
sub
insb
enter
es
into
add
push
cmpsl
addl
js
cli
mov
sti
dec
mov
push
jge
leave
in
dec
repnz
sbb
loop
dec
adc
jmp
pop
xchg
sub
jge
hlt
mov
sbbl
pop
cmp
jbe
mov
les
popa
mov
add
adc
bswap
jle
mov
xchg
cmc
insb
das
arpl
and
pop
and
stc
dec
add
xchg
cltd
dec
sub
pop
movsl
mov
inc
pop
into
fsub
fsubrs
xchg
jmp
jb
inc
leave
pusha
js
or
inc
je
movups
dec
outsl
cmpsb
xor
jae
mov
test
subl
jns
je
clc
mov
pushf
mov
aaa
leave
inc
popa
movsb
cwtl
mov
xor
mov
aad
leave
aaa
jno
or
or
fisttpll
iret
push
ret
in
loope
insb
adc
push
push
sub
add
and
out
push
jg
stos
jecxz
inc
bound
neg
adc
sub
mov
mov
ja
iret
fstpt
popf
imul
aaa
fwait
inc
sbbb
fnstsw
sbb
push
mov
dec
sub
mov
jo
push
sbb
addr16
dec
cltd
inc
out
lret
push
les
in
and
mov
and
mov
sub
mov
push
mov
mov
ror
adc
stc
add
das
mov
aaa
jne
fcompl
xchg
xchg
jle
ss
mov
cmp
jns
in
cmp
int
xor
and
inc
jecxz
xchg
inc
addr16
ret
mov
cmp
rclb
sbb
stc
or
decb
mov
or
push
addb
inc
pushf
test
add
scas
out
out
repnz
lret
insb
out
pop
aad
fstpt
and
aas
inc
push
jp
xor
mov
sub
mov
loop
mov
dec
out
cmp
mov
xchg
fistl
and
mov
imul
insb
fs
mov
call
addr16
inc
mov
lret
and
ret
sub
les
sub
mov
clc
mov
enter
add
hlt
roll
in
imull
lods
cltd
add
int3
push
shrl
insb
dec
xchg
xor
fwait
jecxz
sbb
psllw
xor
cmc
jmp
pushl
clc
out
inc
jae
leave
or
sub
mov
out
shrl
dec
outsb
jne
xor
dec
test
cmpsl
pusha
mov
cmp
push
push
loop
fisubrs
popa
inc
cmp
ret
or
pop
lahf
inc
push
imul
cwtl
fisttps
leave
and
add
int
les
movsl
sub
shrl
dec
mov
mov
dec
or
xchg
shl
les
ds
mov
sahf
cmp
ret
lahf
cmp
ret
std
aas
push
in
xchg
ja
mov
popa
movsb
inc
inc
in
loope
xor
in
fnstenv
arpl
mov
pop
push
outsb
rol
shll
lods
mov
pop
sbb
out
es
pop
cmpsl
xchg
dec
jp
sar
je
ret
pushl
jle
out
lahf
fldcw
and
out
cwtl
jp
add
cmp
cmp
add
pop
jbe
xor
sbb
mov
lods
lods
cs
ljmp
push
xchg
insl
push
cli
dec
rclb
pop
outsb
mov
cld
cli
test
aam
call
push
mov
pop
push
divps
stos
fs
cmpb
data16
popa
test
sbb
jnp
sub
les
add
imul
push
xchg
xchg
leave
pop
jne
or
mov
clc
or
lea
jle
test
dec
stc
shl
shld
mov
call
insb
and
les
push
inc
in
fistps
clc
lcall
push
mov
inc
repz
ret
xor
push
cmp
test
xchg
push
jno
push
sub
idivb
dec
sbb
int3
xor
call
xchg
push
outsb
lahf
cmpsl
sub
cwtl
mov
push
adc
xorb
pop
loope
clc
xchg
lods
test
xchg
fsubrs
fwait
and
and
fwait
scas
roll
add
cmp
xchg
fucomp
bound
jae
and
pop
mov
jno
data16
jmp
xlat
je
je
push
xchg
sbb
push
in
data16
jg
adc
pusha
xchg
cltd
dec
ljmp
loop
iret
ja
pop
jno
pushf
ret
fdivs
push
xchg
gs
push
cmp
mov
cmp
pop
fs
sbb
push
adc
pop
sti
sbb
xor
xor
add
test
mov
xor
adc
push
or
mov
mov
movsb
in
subl
dec
sbb
push
std
cmp
sub
xchg
fiaddl
xchg
dec
aas
dec
arpl
mov
cbtw
outsb
push
sbb
sahf
jns
mov
mov
mov
jmp
jno
movsl
sbb
sti
and
mov
in
jns
std
xor
js
cli
sti
push
hlt
mov
sub
xor
test
into
bound
pop
add
fisubs
mov
out
aas
shrl
mov
mov
cli
mov
adc
call
mov
fisubrl
xor
imul
rolb
mov
imul
mulb
mov
test
sbb
fld
fdivrs
movsb
pop
pop
cmpsl
outsl
sbb
lods
pop
outsb
xchg
or
and
scas
clc
int3
sti
mov
mov
jno
adc
sbb
push
pop
test
sub
xchg
aaa
xchg
xchg
loope
in
cwtl
not
outsb
mov
imul
sar
into
jge
add
xchg
loop
xchg
and
ficomps
out
sbb
sub
fisttps
test
out
pop
ja
sub
jmp
mov
and
adc
nop
or
xchg
push
ja
popf
inc
fptan
xor
stos
pop
mov
push
adc
loop
ss
sahf
sub
mov
jb
xor
test
imul
adc
pop
xor
arpl
test
inc
and
xor
jb
cmpsb
scas
cwtl
out
jno
jo
dec
int3
mov
ds
je
imul
fcoms
out
push
xor
sub
xor
jno
mov
add
in
xchg
cltd
adc
repz
sbb
sahf
lods
push
lahf
cmp
xlat
das
and
sti
mov
adcb
lea
adc
and
push
cmp
and
test
insb
mul
fistl
cmp
cmpl
scas
imul
pop
stos
rorl
xor
xchg
gs
cmp
mov
add
mov
insl
cmpsb
sub
push
pop
push
add
addb
dec
mov
aaa
push
dec
lea
dec
insb
icebp
push
mov
sub
mov
test
into
sbbb
and
iret
fcoms
rorl
cli
jno
sub
lcall
andl
dec
cmpsb
mov
scas
fimuls
daa
and
pushf
adc
mov
push
jmp
mov
repnz
fst
fldcw
cmp
push
jno
dec
cmp
aad
imul
lcall
cwtl
test
fbstp
mov
int3
or
loop
mull
setbe
stc
fldenv
cmpsl
inc
fsubs
push
pop
inc
push
outsl
sub
mov
inc
or
add
push
mov
mov
hlt
imul
subl
repz
mov
mov
cmp
mov
sti
push
test
xchg
or
cltd
lret
cmc
xor
mov
fidivs
sarb
sub
aaa
pop
movsl
sub
fwait
filds
mov
outsl
sbb
icebp
cld
js
lods
mov
mov
pop
jp
sbb
test
out
adc
fnstcw
dec
pop
pop
mov
ret
shll
dec
cmp
arpl
sbb
adc
sub
lahf
ret
add
rolb
pop
icebp
inc
sub
or
xchg
and
xchg
sub
daa
inc
pusha
sahf
adc
cmp
pop
sub
xor
mov
rcr
rorb
and
imul
cmp
inc
sbb
add
inc
pop
mov
pop
dec
je
outsl
or
sti
les
xchg
js
fsubr
mov
push
push
pushf
sub
push
jnp
xchg
xchg
add
ret
cmpsb
or
test
and
insl
es
stos
fcmovb
fmul
je
lahf
push
or
movsb
dec
stos
sbb
icebp
cmp
inc
int
fsubl
adc
insb
sarl
repz
jecxz
xchg
cmp
or
sbb
in
push
cld
inc
int3
jae
arpl
pushf
and
ret
dec
repz
jecxz
xchg
cmp
or
sbb
in
push
jl
dec
jae
bound
mov
and
ret
pop
jecxz
xchg
cmp
or
sbb
in
push
cld
inc
int3
jae
lods
adc
insb
sub
imul
sbb
dec
insb
pop
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pop
mov
push
test
dec
leave
fmuls
sub
or
mov
mov
mov
push
stc
cmp
sub
mov
call
imul
dec
mov
subl
cmp
sub
fdivrs
enter
jl
ss
imulb
es
dec
cld
sbb
pop
xor
sub
jecxz
xor
cwtl
loop
cmpsb
call
and
mov
cs
out
jne
insl
mulb
popf
aaa
mov
and
loopne
inc
jb
ret
xchg
fdivrs
mov
idivb
faddl
rcr
pop
push
push
push
jmpw
stc
sbb
lods
inc
dec
fcomp
fcom
jne
into
test
loopne
mov
cmp
push
adc
std
mov
shrl
mov
call
jnp
jns
or
fnstsw
popa
mov
loopne
leave
dec
fsubs
inc
add
lods
mulb
rorb
dec
mov
sbb
or
cmp
sub
fdivrs
enter
call
jno
inc
test
push
mov
or
mov
imul
sbb
imul
cld
and
sub
or
cmpsl
cmp
lret
jl
or
or
imul
mov
imul
cmp
sub
fdivrs
enter
call
imul
cltd
push
jmp
fdivrs
enter
call
imul
push
dec
mov
jb
add
pop
cmp
ds
push
ret
and
mov
dec
out
sbb
mov
xor
push
and
mov
xchg
jp
xchg
adc
popa
xchg
xchg
xlat
int3
mov
repnz
mov
fsts
adc
movsl
in
cmp
rcrb
sbb
clc
aad
adc
push
sbb
sub
mov
movsl
lcall
xchg
outsb
lds
mov
add
mov
adc
sbb
push
push
adc
ret
add
or
ret
sub
push
int
xchg
dec
pop
aaa
mov
int
dec
stos
pop
clc
ljmp
push
jmp
pop
cltd
in
imul
ret
xor
or
daa
inc
mov
sub
adc
add
stos
cli
dec
nop
inc
in
jno
das
sbb
loope
dec
mov
aaa
pop
inc
cmp
pop
jb
add
xchg
or
jmp
pushf
cmp
sub
out
rcll
lods
out
fcmovb
push
pop
or
test
or
nopl
rorl
imul
dec
adc
popf
outsl
aam
popa
lea
mov
cltd
inc
inc
mov
pop
loope
jle
pop
clc
xchg
call
dec
dec
rcll
push
std
push
lret
fcompl
add
repnz
sbb
xchg
push
inc
jno
daa
daa
pop
aam
shll
pushf
dec
dec
mov
add
xchg
loop
lret
lcall
push
in
std
mov
shrl
sbb
inc
add
ret
rorl
sbb
subl
sbb
movsb
repz
fstp
mov
mov
in
xor
imul
xor
addr16
mov
push
jo
xor
xchg
dec
sub
mov
int3
or
incl
push
inc
lock
xchg
mov
iret
out
jl
or
in
outsl
sti
lock
mov
pop
shl
mov
aaa
fimuls
sub
pop
jecxz
testl
fs
jns
xchg
js
test
dec
stos
es
cmc
les
lock
stos
or
in
pop
enter
xchg
xchg
lods
sub
sub
loopne
ja
insb
js
push
fistl
div
dec
xor
xchg
push
mov
jl
xchg
push
mov
repnz
pop
mov
and
jne
mov
dec
xor
jae
fsubl
push
addr16
cld
cltd
out
cmp
push
dec
mov
sbb
clc
mov
test
jne
inc
mov
jge
imul
les
mov
loop
ss
pop
pop
int3
mov
cmc
arpl
mov
int3
iret
mov
push
jecxz
scas
test
aas
inc
mov
sub
imul
xor
dec
inc
aas
popf
mov
add
incl
rolb
popa
add
cwtl
cltd
mov
mov
add
fwait
xchg
push
pop
orb
push
test
ss
dec
dec
into
cmpl
out
and
mov
pop
pop
jmp
add
and
rcrb
mov
cli
mov
pop
rorb
rorb
mov
sarb
dec
cltd
xchg
cmpsb
sub
mov
lcall
jmp
xchg
aas
cwtl
shrb
ret
and
push
push
inc
and
pop
and
aas
in
pop
or
mov
add
pop
adc
out
pushf
dec
shlb
pop
aam
jmp
mov
adc
nop
insb
cs
data16
dec
add
jmp
lret
push
sub
dec
aas
sarl
ss
fdivs
mov
and
add
cmpsb
jb
push
xchg
pop
jmp
pop
cmp
outsl
sbb
insb
sub
or
xor
and
inc
int3
add
adc
jo
push
push
daa
js
sbb
dec
xchg
flds
mov
test
loope
xchg
add
or
mov
out
dec
cwtl
dec
mov
js
movsl
andb
jb
mov
pushf
inc
push
jo
cli
mov
int3
sbb
lods
lods
mov
insl
xlat
pop
ret
jl
and
cmpsl
mov
jmp
xchg
inc
dec
fisubrs
jp
ja
ret
fimull
xchg
outsb
xor
or
mov
xlat
cltd
cmp
inc
inc
ljmp
inc
xchg
mov
lods
out
dec
pop
xlat
ja
aam
or
test
xchg
scas
add
adc
or
inc
aaa
repz
cmpb
pop
movsb
add
dec
mov
xchg
cmp
cmpsb
test
lahf
call
dec
cmp
add
mov
outsb
ja
dec
aad
into
mov
imul
xchg
out
adc
out
pop
dec
fistl
cmp
mov
mov
lcall
adc
mov
fstpl
or
push
aam
or
sahf
push
cmp
aam
repnz
mov
and
and
fisubrl
or
lock
xor
arpl
push
movsb
pop
inc
xlat
loopne
pusha
mov
pop
push
icebp
cmp
pop
clc
push
mov
xchg
or
ljmp
ret
xchg
mov
adc
add
lods
nop
cmp
cmpsb
ja
mov
xor
mov
jo
pop
push
ror
int3
daa
sbb
mov
stos
inc
ja
rorb
xchg
pop
dec
dec
pop
loope
cld
cmp
cmp
in
arpl
or
rclb
jecxz
sub
in
loope
lods
ds
rcrb
mov
shr
int
sarb
pop
cmp
push
mov
sub
repz
int
stos
xor
adc
or
stos
sbb
or
test
in
pop
adc
sub
outsb
loop
or
xchg
and
push
pusha
cltd
push
sahf
sbb
sub
mov
and
or
cmp
pop
aad
mov
loopne
and
movsb
sbb
jb
pop
aaa
popl
in
lcall
push
dec
cld
push
pop
jecxz
addr16
sahf
sbb
push
loop
pop
push
sbb
xchg
fcoms
add
lret
mov
loope
fisubrs
xor
mov
fwait
jae
mov
sub
jmp
or
clc
mov
stos
pop
imul
xor
mov
push
pushf
jo
xchg
es
push
fcmovu
inc
pop
inc
inc
xor
pop
sub
mov
sarl
es
xor
gs
jle
lods
or
sub
jmp
enter
hlt
and
push
or
jg
push
cmp
adc
pop
or
iret
cmpb
and
cmp
mov
test
fldcw
pop
jge
lds
mov
rcrb
leave
aad
push
lods
fdivl
fcmovnu
pop
inc
cli
ss
push
add
sti
fwait
scas
lret
popf
jo
xchg
adc
test
cmpsl
scas
movsl
lret
dec
cmpsb
mov
out
lock
stos
mulb
add
sub
mov
xor
push
adc
add
sub
ljmp
xchg
int
cwtl
mov
and
jge
inc
mov
in
lods
test
lret
aam
sub
andb
cmpsb
sti
pop
dec
or
dec
add
dec
pop
arpl
and
dec
andb
jle
mov
out
jae
fxch
jge
bound
popa
xchg
cld
int
sbb
xchg
mov
xchg
cli
imul
mov
mov
push
inc
inc
pusha
aas
add
pop
xchg
and
adc
pop
imul
mov
inc
pusha
and
rolb
lods
inc
mov
add
dec
sbb
aaa
fwait
je
fldl
and
push
jge
inc
jne
ret
push
xchg
std
repnz
mov
icebp
in
lret
cld
jg
cmc
cltd
movsl
out
fdivrl
ficoml
jae
dec
inc
push
rclb
mulb
xorb
xchg
mov
les
add
cmp
int3
jbe
ja
outsl
add
fiadds
or
fstps
jns
push
insb
inc
push
outsl
and
jp
pop
pop
insb
push
add
shrb
cmp
fwait
dec
jo
std
sti
les
test
mov
sbb
jmp
out
out
cwtl
xor
push
ljmp
jnp
mov
in
inc
bound
mov
nop
jo
mull
adc
repnz
push
popf
iret
sub
dec
notl
stos
ja
aad
stos
push
sbb
push
stc
xchg
mov
pop
add
fmull
or
mov
cmp
xchg
pusha
xchg
cmp
enter
in
xchg
pmulhuw
mov
nop
add
jb
push
dec
sub
icebp
cli
fsubr
mov
lahf
stc
mov
push
nop
out
fwait
xchg
mov
and
add
adc
ret
mov
mov
mov
aam
jg
shrb
mov
add
cmp
repnz
test
rcrl
push
fisttpl
cmp
xchg
aad
leave
loopne
mov
dec
fs
aaa
sarl
or
push
dec
std
pop
nop
jo
and
xor
daa
add
jo
call
js
xchg
out
shl
mov
stc
mov
std
lods
lods
aam
add
cmpsl
scas
sub
inc
addl
jbe
add
mov
xor
pop
mov
cmpsl
enter
push
imul
xchg
xor
lcall
mov
mov
cmpb
icebp
es
orb
es
add
mov
xor
ss
mov
fiadds
push
and
or
out
adc
orb
pop
dec
jns
add
jp
inc
in
cmp
fadds
insl
filds
dec
mov
cld
sbb
push
jae
and
vucomisd
out
stos
mov
xor
adc
push
sub
sbb
pop
insb
lahf
cmp
repz
rep
jmp
mov
xor
inc
pusha
sbb
test
jl
aad
jmp
jl
or
outsb
sbb
imul
insb
mov
sub
mov
sub
and
mov
and
cmpsl
cmc
inc
or
push
stos
adc
mov
aaa
or
mov
cmp
fcoml
bound
je
xchg
pop
mov
add
xchg
test
call
ja
fwait
imul
jne
add
and
mov
sbb
cmp
rclb
pop
xchg
mov
mov
mov
jno
test
aad
data16
sub
lcall
pusha
es
inc
imul
leave
inc
inc
pop
jg
fbstp
jle
shrl
es
bound
or
addl
insl
popl
ud2
jbe
or
sub
insl
dec
pop
cltd
pop
std
mov
xchg
mov
dec
outsb
aaa
into
scas
xor
lret
lock
cmp
into
sbb
aas
ljmp
cmp
rcl
test
negb
pushf
jnp
rcrb
jnp
or
sarl
fsincos
ljmp
jl
into
fiaddl
popa
adc
xchg
ss
js
flds
lea
shrw
loope
jmp
lahf
or
adc
aaa
sbb
fs
lock
push
mov
adc
add
mov
subb
addr16
in
mov
jnp
push
dec
test
xor
xchg
aad
dec
loop
dec
imul
int3
aas
dec
lcall
lahf
mov
xor
pushf
jae
lods
push
outsb
nop
mov
pop
shll
jne
mov
jle
aad
or
mov
mov
repz
jae
add
xchg
fdivl
cmp
mov
outsb
notrack
icebp
cmp
jo
or
xlat
add
addr16
push
mov
sub
ds
push
mov
add
adc
xchg
sub
cmp
cltd
popa
add
ljmp
stos
dec
xlat
add
sahf
ja
inc
or
test
cmp
pop
pusha
scas
arpl
outsl
cmp
das
push
aaa
loope
pop
scas
xchg
sbb
xchg
test
xorl
xchg
repnz
mov
xlat
aas
dec
mov
jno
or
rclb
pop
push
loopne
jnp
jl
in
inc
jg
mov
jle
lahf
push
imul
jno
iret
lods
aad
pop
inc
xchg
xor
cmc
aam
cltd
inc
mov
out
xlat
xor
or
cmpb
cltd
pop
adcl
mov
cld
pop
sbbl
cmp
repz
jae
xchg
outsb
iret
imul
or
aad
xor
arpl
or
fs
pop
ja
add
mov
xchg
test
cmp
sub
fdivp
push
mov
cmpsb
sbb
or
ja
push
pop
adc
jg
or
pop
xorb
push
pop
andl
pop
in
inc
mov
cmp
insb
test
add
cmp
sbb
sub
inc
inc
pop
pop
adc
fmull
mov
or
fiadds
xchg
jle
jmp
lret
xor
sub
push
mov
fdiv
pop
jne
jle
in
pop
pop
pop
loop
fistpll
lods
xchg
mov
adc
sub
push
cld
cmp
imul
imul
xchg
loop
and
into
in
or
ss
pop
jmp
out
jo
es
xchg
punpckldq
mov
mov
cmp
inc
and
sub
scas
adc
ss
push
iret
pop
push
mov
mov
popf
cmpsl
push
adc
stos
mov
out
and
leave
pop
dec
cmpsb
jg
mov
jne
pop
or
dec
jge
push
arpl
sub
or
icebp
add
add
mov
cmp
fildll
mov
addr16
jns
add
cld
jmp
stos
mov
dec
xor
xchg
std
jb
inc
sbb
sbb
adc
jno
xor
fs
pop
cmpsl
in
cmp
and
add
sbb
loopne
jg
imul
mov
pop
cmp
xor
mov
cmp
in
dec
scas
fsubr
mov
shll
cltd
and
sbb
in
jl
ljmp
adc
sbbb
leave
xlat
sti
cmp
pop
pop
pop
sahf
aam
loopne
mov
sahf
iret
repnz
stos
pop
mov
popf
mov
mov
cmp
and
mov
push
jae
pop
mov
pushf
cmp
inc
pusha
xor
xchg
jne
popf
mov
repz
pop
cmp
and
pushf
test
adc
gs
out
int
test
shlb
stos
cmp
inc
scas
push
data16
cmp
xchg
fnstsw
icebp
dec
ret
popf
jg
ss
mov
sub
or
lcall
loopne
xor
mov
mov
jg
cmp
iret
fwait
mov
xor
push
xchg
ja
ds
out
dec
pop
cmc
insb
inc
pusha
mov
cmp
sbb
inc
sub
les
ja
outsb
scas
lods
enter
add
fmuls
rcl
outsl
mov
lods
movsl
sti
push
subb
jl
jmp
sub
mov
adc
adc
dec
or
mov
jmp
pusha
sbb
inc
mov
ja
push
xchg
fs
fwait
js
loop
jl
sbbb
xchg
xchg
in
int
adc
aas
jbe
enter
and
add
std
cmp
add
jns
lret
cmp
repz
jmp
push
push
dec
in
loope
pop
ds
pop
xor
imul
push
pop
and
xchg
and
mov
dec
outsl
mov
iret
jno
mov
mov
aad
cmp
icebp
cwtl
sub
or
mov
outsb
mov
or
loopne
push
movsb
push
xchg
outsl
push
repnz
xchg
mov
inc
popf
mov
sub
sysexit
scas
and
jo
pop
pop
jb
jmp
subl
sbb
data16
ljmp
movsl
jle
lret
or
cmc
outsb
push
mov
cmp
jb
adc
add
les
adc
aam
rcr
push
cwtl
push
sarb
in
sbb
mov
adc
jg
call
jnp
sbb
pop
mov
test
xor
and
jnp
jg
loope
mov
sbb
sbb
push
cmp
insb
sub
cmp
imul
lret
sbb
cmc
and
jne
jae
in
lods
shrl
and
lods
push
and
aaa
sbb
aam
inc
pop
push
sti
mov
mov
cmp
cmp
and
movsl
gs
push
imul
pop
out
sub
mov
add
popa
ss
rclb
mov
add
popl
test
mov
cmp
jge
mov
addl
mov
sbb
out
mov
push
fadd
adc
sbb
sub
loop
leave
cld
mov
mull
sub
or
pop
gs
lret
mov
test
pop
lods
add
test
lret
and
fnstsw
repz
xor
dec
pop
inc
fwait
xor
mov
mov
jae
jnp
push
negl
pop
and
cmp
mov
jecxz
stos
fmul
aam
pop
push
sbb
add
mov
or
fxam
lcall
enter
sub
pop
in
flds
insl
xor
out
cmc
xor
stos
xor
aas
test
mov
lds
mov
sub
es
dec
jno
or
xor
loopne
addb
push
mov
cmpsb
dec
jnp
xchg
addr16
or
test
in
push
fimuls
jae
jmp
js
inc
cmc
in
ljmp
popa
push
ret
adc
enter
push
sub
add
insl
std
jo
std
xor
jge
xchg
or
fistl
negb
add
mov
movsb
mov
lea
lret
sbb
cmpsb
rcll
add
push
pop
xor
dec
or
sti
loope
out
mov
mov
cmp
xchg
jb
outsb
sub
int3
inc
fwait
in
jge
pop
dec
xor
fdivl
push
xchg
adc
jp
shlw
aam
mov
mov
or
loopne
mov
das
movsl
sti
imul
xlat
nop
or
movsb
aam
lret
adc
inc
fcmovnu
lods
push
mov
mov
in
jmp
int
xchg
mov
or
cmp
jae
pop
jge
xor
shll
cs
test
inc
mov
inc
pop
push
lret
ljmp
mov
or
in
mov
add
mov
out
mov
push
js
lret
js
cwtl
mov
icebp
adcb
repnz
and
dec
mov
or
stos
sub
lds
adc
mov
scas
clc
pop
les
pop
repz
arpl
dec
or
mov
aas
sub
int3
popa
das
mov
xchg
jl
pop
orb
lods
icebp
mov
in
push
mov
adc
arpl
add
test
xor
dec
aaa
clc
push
xchg
adc
jecxz
inc
loopne
icebp
dec
or
ljmp
fwait
dec
or
shll
push
mov
pop
fucom
mov
sbb
mov
dec
outsl
push
mov
adc
cmp
sub
xchg
fiadds
sbb
push
insb
enter
cmp
notb
dec
stos
push
ret
inc
scas
gs
aas
adc
jno
and
movsb
add
dec
cmp
es
cmc
int3
add
push
push
xchg
movsl
lcall
mov
js
stos
dec
dec
sub
pushf
cmp
fcompp
int
mov
mov
jle
and
insb
xor
or
pop
xor
jp
push
pop
mov
dec
ss
cmpsl
dec
int3
loopne
mov
cmp
std
fstpl
mov
js
inc
rcll
sbb
sbb
push
fildll
iret
or
ljmp
dec
aam
loope
mov
addr16
aaa
push
mov
out
daa
test
mov
outsb
jecxz
jmp
cs
push
je
mov
enter
fnsave
jmp
mov
call
mov
adc
mov
inc
cli
sub
rep
test
icebp
in
dec
jge
or
addr16
in
into
imul
stc
lds
movsb
jnp
aaa
stos
clc
sarb
iret
xchg
sbb
inc
or
sbb
cmp
mov
nop
insl
pushf
cmp
or
xor
movsb
out
add
fisubrs
and
lret
loope
sti
add
outsb
mov
sbb
movsb
lahf
mov
lods
push
leave
ss
add
in
shl
or
mov
arpl
dec
push
ret
add
add
mov
mov
repnz
aam
aas
enter
dec
pop
sahf
fists
bound
imul
adc
push
jnp
or
xor
inc
adc
repnz
imull
dec
jle
repz
fisubrs
inc
ja
lret
pop
mov
popf
jns
pop
jnp
inc
mov
lret
cmpsb
push
faddl
xor
sti
hlt
rcll
push
sahf
or
sub
push
jmp
fdivrs
enter
call
imul
cltd
push
jmp
fdivrs
enter
call
imul
cltd
push
jmp
fdivrs
enter
call
imul
popf
push
jmp
fdivrs
enter
call
push
inc
es
ss
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
sbb
sub
cmp
cld
xor
or
jg
dec
mov
cwtl
scas
test
mov
out
clc
iret
or
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
enter
call
aas
add
xor
and
push
jg
outsl
jo
js
xchg
mov
shr
stos
mov
mov
scas
mov
sub
bndstx
push
aam
les
pop
arpl
and
test
push
leave
nop
mov
push
inc
test
in
push
in
inc
or
mov
cwtl
dec
es
aas
in
or
lods
mov
and
ljmp
or
or
aaa
sbb
mov
pop
outsb
xchg
xor
cltd
push
popf
sbb
aaa
fcoms
arpl
clc
into
pop
dec
xchg
jg
dec
fadds
and
inc
pop
jecxz
pusha
dec
mov
lods
fsubr
pop
fucomip
xor
mov
dec
mov
pop
cmpsl
fwait
push
jo
ja
adc
lcall
clc
fcmovb
aas
add
sub
cmp
pop
jg
outsl
push
mov
mov
out
repnz
cmpsb
cmp
dec
pop
dec
sbb
push
and
hlt
scas
fdivr
enter
lcall
dec
inc
jp
adc
push
hlt
std
test
stc
ljmp
pushf
mov
inc
insl
push
push
push
pop
outsl
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
aaa
inc
xchg
repnz
int
or
cmpsb
jae
imul
xor
fsts
jge
xchg
imul
stos
jecxz
insl
fcomps
mov
test
adc
loope
jo
xchg
mov
pop
fcompl
push
sub
movsb
fwait
mov
jmp
das
sbb
cmp
popf
ljmp
push
fidivrl
rcrb
jmp
inc
in
push
int
je
add
dec
mov
jecxz
in
and
mov
enter
inc
loopne
pusha
or
mov
into
xchg
dec
xchg
mov
mov
cmp
outsb
mov
push
int
movsl
lds
sub
out
sbb
xor
out
pusha
add
sub
xor
push
xor
hlt
pushf
in
cs
outsb
push
cmc
inc
dec
lcall
mov
mov
stos
mov
xlat
pop
mov
mov
popa
push
xor
ret
iret
mov
out
cltd
cwtl
rorl
daa
dec
push
scas
jle
notl
pop
test
rorb
mov
xchg
in
shld
jae
sbb
repz
mov
call
pushf
pushf
pop
xlat
jno
pop
mov
push
sbb
cmc
subl
add
je
push
inc
jns
jl
cs
outsb
or
subl
fidivrs
sti
adc
ret
out
ret
lods
nop
fwait
push
xchg
cmc
pop
inc
xor
fwait
mov
lea
js
adc
pop
out
mov
cmpsl
sub
xorb
fisubrl
std
jp
into
adc
add
xchg
cmp
mov
stos
jnp,pn
sub
jmp
add
mov
shlb
cltd
cmpsb
je
cmpsl
daa
outsl
fdiv
mov
inc
int
test
pushf
nop
scas
or
mov
jno
ffree
add
loope
std
mov
rcrl
outsb
xchg
xchg
xchg
cmpsl
bound
stos
shrl
lock
sti
inc
popf
adcb
popf
sub
jbe
or
pop
inc
xchg
or
ss
ljmp
sahf
mov
ds
leave
mov
ljmp
sarl
jl
nop
nop
insb
xchg
mov
inc
rcrb
pop
fimuls
and
or
push
pop
add
je
cwtl
xlat
pop
pop
shld
lret
mov
cmp
dec
insl
push
mov
xor
popf
test
aaa
mov
inc
in
xor
push
std
stc
imul
outsb
lcall
lds
outsl
xchg
cmp
mov
cld
js
loope
adc
clc
popa
cmp
not
scas
fdivrl
mov
sbb
inc
cmp
sbb
xchg
sar
push
inc
clc
jmp
dec
jo,pt
or
sarb
cs
shrl
in
inc
mov
aaa
gs
mov
movsl
mov
mov
icebp
push
ss
cmp
aas
xor
push
jle
push
fwait
and
add
jle
lods
mov
test
sub
xchg
and
popl
or
addr16
pop
pop
sti
sarb
jae
inc
mov
sti
pusha
mov
cmp
push
mov
rep
push
and
rcrl
inc
xchg
push
aad
loope
scas
pop
push
adc
inc
leave
sbb
pop
fwait
and
xchg
sub
push
str
jge
loopne
pop
mov
xor
add
lods
stc
sub
rorb
cmpsl
aaa
test
fldcw
test
xor
or
cmp
xchg
add
xchg
adc
stos
xor
out
scas
sti
pushf
out
jecxz
push
in
dec
std
dec
pop
mov
loopne
or
add
add
xor
shll
je
fs
data16
call
sub
nop
aad
outsb
jg
repnz
rcll
idivl
movsb
xchg
mov
xchg
int3
lahf
or
mov
stos
nop
mov
iret
lahf
aam
xor
dec
cmc
js
xor
and
mov
jnp
inc
lret
sub
xchg
add
out
sbb
lods
add
inc
pop
es
xchg
rolb
add
push
fildll
mov
cs
xor
xor
cmp
cmp
mov
call
call
and
test
cmp
negb
push
jecxz
vpsubb
rorb
cmpsb
sub
mov
cli
push
mov
or
cltd
push
into
or
cwtl
in
jnp
or
sbb
jp
leave
gs
shl
xor
lock
lea
xchg
mov
das
xchg
shr
sub
lcall
addr16
daa
es
scas
leave
scas
xor
mov
in
mov
or
ret
inc
push
in
push
fs
cltd
imul
sub
popf
cmp
lea
pushl
xor
insl
insl
sub
xor
mov
inc
lods
stos
inc
add
xor
out
sarl
dec
xchg
or
loopne
adc
imul
push
iret
jp
mov
push
or
adc
jmp
mov
dec
mov
xchg
outsb
fsubl
loop
pop
sub
adc
or
or
lret
lea
and
loopne
repz
or
mov
jae
xorb
hlt
jns
and
or
scas
sti
cltd
cmpsb
dec
or
push
fs
loope
and
xor
repz
sbb
and
sub
xchg
sub
xor
pushw
sub
mov
out
cltd
jge
shrl
push
mov
cmp
sbb
and
call
fmuls
scas
inc
dec
and
mov
jne
cmp
fs
push
cmpsb
push
jne
mov
dec
push
push
pop
data16
jle
setp
out
push
dec
and
sub
test
fs
cli
dec
out
mov
roll
xchg
lcall
imul
into
mov
rcr
lcall
xor
inc
lret
cmpl
ret
add
ljmp
sbbl
addr16
jno,pt
pop
cmp
test
or
inc
mov
xor
and
jae
aam
aaa
fcomps
lods
inc
stos
sub
xchg
dec
or
xchg
ficoms
mov
addr16
add
inc
pop
push
fiadds
repz
inc
rol
leave
scas
test
mov
rclb
xchg
mov
pop
mov
outsl
sub
adc
inc
jne
bswap
aas
stos
dec
jmp
mov
xor
repz
inc
mov
call
inc
rorl
bound
je
sbb
mov
cmp
pop
stc
fnsave
ss
fildll
fcoml
dec
fwait
or
stos
out
cmpsl
stos
push
xor
dec
mov
mov
mov
or
push
insl
cli
je
push
int
and
inc
cmp
loop
sarb
and
movsl
iret
mov
loop
imul
je
movsb
dec
pop
xchg
loop
xchg
cs
lcall
int
les
insb
ss
mov
push
add
mov
cmp
stos
jmp
xor
lret
outsb
push
mov
sbb
mov
out
cs
xchg
push
cmp
inc
aas
dec
fcoms
imul
fwait
scas
fucom
pop
pop
or
sub
add
cltd
ret
gs
add
or
xchg
xchg
push
insl
adc
xor
popa
xor
popa
enter
inc
pop
xchg
in
and
arpl
cld
out
shrb
gs
pop
sub
outsb
test
sub
out
add
pushf
mov
int
fdivr
sub
dec
mov
sbb
cmp
cmp
ja
xchg
cmp
movb
fisttps
mov
xchg
adc
enter
iret
xchg
cmp
aam
addr16
mov
push
jge
inc
mov
lcall
adc
push
or
lods
shlb
outsl
jb
rclb
scas
outsb
movsb
push
lret
sbb
test
lcall
adc
sarl
jne
sbbl
movsb
roll
je
and
int3
cmp
loope
out
sub
iret
ja
cmp
lahf
jo
outsl
xorb
adc
loop
sub
iret
fidivl
scas
fs
xchg
mov
cld
shll
popa
pop
adc
imul
sub
fdiv
sub
mov
sahf
dec
rcrl
das
xor
sub
iret
push
addl
lods
jo
cld
xchg
loop
cmp
nop
pop
inc
xor
xor
push
shl
loope
aas
mov
inc
fwait
sbb
adcb
and
add
int3
hlt
dec
lds
xchg
jbe
fisttpll
jbe
jp
push
push
lret
insl
addb
rcrb
add
push
pushf
mov
pusha
loope
cmp
add
mov
clc
hlt
mov
xchg
adc
mov
mov
and
dec
add
dec
sbb
mov
xlat
mov
add
jecxz
xor
jo
cld
int3
lods
mov
loope
xchg
inc
in
push
jb
mov
repz
xor
mov
stos
adc
int3
fdiv
sti
jno
inc
inc
cwtl
je
jne
jmp
push
xchg
out
jge
pop
dec
pop
jnp
xchg
imul
jmp
pop
xchg
and
or
ljmp
test
and
dec
mov
cmp
cli
push
jo
lahf
sti
andb
sub
sbb
and
push
fsts
and
adc
sbb
enter
jne
jmp
xor
cmp
pop
movsl
popf
lods
subb
mov
dec
jno
xorb
and
icebp
mov
and
cli
xchg
mov
mov
mov
push
in
dec
dec
push
aam
lock
ffree
mov
sahf
xlat
add
fcom
add
mov
mov
inc
push
fildll
xchg
iret
and
xchg
jns
imul
xor
repz
icebp
stos
aas
fisubl
addr16
cmp
or
pop
cmp
xchg
lds
xorb
pop
pop
jno
outsl
pop
jl
ss
add
repz
jno
cmp
pop
xor
ret
cmp
aaa
shll
sub
xor
xor
je
push
mov
mov
cmp
insl
add
jge
fiaddl
das
cmpsb
inc
fwait
bound
daa
cmp
dec
or
jp
mov
into
sbb
lods
mov
pop
mov
lock
sub
push
xor
mov
adc
and
cmpsl
ja
jle,pn
pop
xchg
inc
push
xchg
pop
lahf
into
push
popf
cmp
mov
sbb
xor
fwait
push
mov
cmp
pop
mov
dec
sbb
call
cmpsl
adc
jno
dec
adc
push
add
ret
dec
pusha
loopne
lods
lock
inc
jae
pop
jmp
int
dec
aam
imul
sbb
inc
and
xchg
aam
je
aam
jecxz
sti
leave
into
xor
pop
sub
mov
push
jnp
push
inc
arpl
loope
mov
in
sbb
sub
push
decb
jl
imul
jg
scas
sub
dec
pop
dec
daa
cmp
xchg
pop
pop
pop
inc
xchg
pop
cmpl
or
movsb
adc
xchg
jmp
cltd
je
sbb
xchg
stos
push
sahf
sti
mov
mov
inc
mov
jne
fcompl
mov
xlat
inc
in
movsl
push
cmpsl
xor
mov
in
repnz
loop
out
and
push
mov
out
in
cs
and
or
adc
adc
insl
adc
xchg
push
lds
jns
add
and
jbe
push
mov
pop
push
test
jg
mov
out
push
mov
rorb
bnd
or
int
jge
or
add
das
inc
sbb
rolb
mov
mov
fwait
add
mov
sbb
rorb
icebp
aam
xor
pop
rcr
sub
mov
fucomi
lods
aas
outsb
jmp
out
mull
negl
mov
ss
cmp
neg
jge
mov
adc
xchg
out
mov
aas
loop
and
dec
lret
pop
push
push
fdivrp
mov
shlb
movsl
or
mov
mov
clc
jl
jecxz
push
rclb
jb
mov
mov
xchg
cmp
or
jmp
dec
in
mov
sahf
arpl
out
bound
cmpsl
push
fucomip
dec
movsb
jecxz
jne
pushf
ret
divl
cltd
adc
jb
loope
daa
bound
and
adc
push
cmpsb
dec
push
fwait
lds
sub
ficoml
adc
cmc
loop
orl
pop
imul
add
mov
jmp
pop
cmc
insl
mov
jmp
sub
pop
xor
fcmove
int3
jns
dec
test
fndisi(8087
lret
into
sbb
test
jge
cmp
dec
fs
sub
pop
mov
and
inc
push
push
fists
cli
test
cmc
cld
dec
leave
xchg
push
xchg
jle
xor
punpckldq
push
test
xchg
push
add
icebp
cltd
stc
es
inc
xor
jmp
mov
lret
fnstenv
pop
je
and
out
xchg
push
cmc
mov
inc
inc
inc
or
or
sbb
cli
lea
xchg
push
cli
in
jl
mov
scas
lock
ss
fwait
mov
cmp
es
pop
inc
push
pusha
pop
fstps
cmc
int
push
sub
popa
data16
mov
mov
or
outsl
ljmp
subb
out
insb
inc
mov
inc
cmp
mov
jmp
cmpsl
mov
hlt
loopne
mov
jl
std
imul
out
jae
xlat
sub
mov
gs
xor
push
mov
dec
aam
lea
rolb
mov
pushf
xchg
movsl
jnp
ds
mov
cmp
daa
add
sub
or
cmpsl
mov
nopl
push
addb
int3
loope
out
js
repnz
aam
or
or
loope
ja
iret
sqrtps
and
ret
sub
aad
push
cmpb
push
pop
pop
push
mov
imul
shl
mov
movl
add
jge
lods
mov
dec
ja
dec
jnp
popa
cli
repnz
loopne
or
push
test
mov
inc
pop
or
daa
or
mov
cwtl
mov
pop
clc
push
movsb
shrb
out
dec
mov
ljmp
stos
mov
mov
ror
xor
leave
mov
dec
les
pop
clc
push
cmp
cld
incb
add
arpl
gs
mov
es
adc
xor
inc
stc
mov
pop
hlt
test
jmp
mov
and
jmp
aad
push
xlat
sub
loopne
xlat
ss
nop
movntps
jg
movsl
and
jnp
mov
jp
in
les
pusha
out
lret
and
adc
adc
mul
jnp
sbb
mov
lret
je
mov
add
sbb
xchg
sbb
addb
divb
pop
adc
mov
sbb
pop
push
mov
and
daa
or
insl
daa
loop
stos
not
jge
icebp
or
cmp
hlt
pop
lock
pop
add
ret
fs
xor
dec
loope
mov
aaa
out
test
or
lret
js
stos
sbbl
mov
call
xor
test
icebp
jg
cmp
rolb
sub
cmp
fs
movsl
pop
sahf
jg
sbb
scas
or
jne
fucomi
mov
js
fstpl
and
push
outsb
add
fstps
pop
mov
je
sbb
push
mov
adc
in
mov
cmc
push
cmp
push
test
mov
fwait
bound
pop
xchg
into
and
mov
jo
mov
enter
pop
and
jae
xlat
jno
mov
jb
in
dec
fisubs
sbb
lds
jae
adc
movsb
pop
cmpsl
add
lock
mov
in
into
pushf
test
add
adc
inc
lahf
sub
mov
xor
and
insl
and
or
pop
mov
into
shrb
pop
stc
out
xchg
and
mov
xchg
adc
outsb
int3
dec
popa
cli
push
je
xchg
aaa
test
inc
rolb
repz
in
mov
push
mov
insb
sub
shl
lock
data16
xchg
data16
sahf
bound
packuswb
pop
ret
inc
into
xchg
dec
nop
add
sub
mov
sub
dec
fcoml
jbe
mov
aaa
lahf
cwtl
popa
adc
out
in
push
int3
mov
push
stos
es
xor
dec
push
and
sbb
dec
into
sub
mov
dec
jmp
insb
or
and
es
subb
xor
andb
xor
loopne
or
cld
lcall
push
xlat
mov
aad
fidivrs
mov
sub
in
test
push
js
ljmp
mov
scas
push
cld
and
adc
pop
adc
cltd
and
popf
out
in
int3
lods
rorl
mov
and
mov
add
pop
jno
sahf
pop
repnz
arpl
xor
xchg
jg
aad
sub
int
in
jl
cwtl
cmp
nop
jb
adc
movsb
lahf
sahf
sbb
push
insl
pop
mov
jmp
mov
leave
out
inc
lods
test
jb
loop
xchg
jge
jmp
push
cs
out
cmp
mov
inc
add
loope
sub
dec
into
pop
xchg
testb
jns
lret
ljmp
and
jo
jb
xor
rorl
xchg
pop
out
movl
and
mov
or
rorl
and
bnd
leave
jl
rolb
sahf
cmc
cmpsl
sbb
push
sbb
dec
mov
or
push
es
jb
test
ljmp
jp
sub
int
cwtl
std
aas
xor
adc
adc
dec
addr16
pop
shlb
cmp
mov
sub
or
fisubrs
ds
xchg
scas
inc
sub
insb
sar
xor
cmc
jge
push
loope
mov
push
test
decb
in
and
jns
fdivl
ss
dec
dec
jle
and
pop
addr16
or
jnp
jle
mov
adc
jecxz
pop
lock
mov
mov
inc
sub
mov
cmp
jg
adc
call
test
in
pop
sahf
enter
inc
test
mov
inc
mov
add
int3
push
jmp
jo
inc
adcl
dec
repnz
sub
shlb
repnz
imul
adc
loopne
add
push
and
xor
adc
icebp
rolb
loop
xlat
loop
pusha
aam
dec
inc
cmp
xchg
xor
cmp
ja
sbb
cmpsl
or
ficoml
sbb
mov
lret
fidivl
cs
sti
test
or
sub
leave
dec
repz
das
dec
push
push
push
out
ss
push
lods
cmp
dec
push
repz
and
mov
outsl
push
sub
es
push
xchg
and
pop
push
mov
les
xlat
lods
fs
in
sbb
rolb
jl
lods
cmp
push
pop
pop
movsb
mov
mov
fadds
lcall
adc
pop
jecxz
inc
in
sbb
sub
adc
cmp
out
jl
das
arpl
or
test
jno
inc
dec
movsl
push
mov
jae
repnz
push
orb
mov
out
push
mov
jp
subb
leave
icebp
fmuls
test
pushf
mov
stc
mov
int
outsb
loopne
fsubs
mov
mov
jecxz
mov
jmp
or
push
ret
adc
add
pop
lock
negb
mov
movsl
int
and
iret
and
sub
or
lock
pop
sbb
faddp
adc
movsl
inc
test
repnz
shlb
inc
mov
push
mov
lods
scas
test
add
xor
jle
push
and
push
mov
dec
xor
mov
fmul
pop
mov
cs
mov
or
or
mov
or
sub
call
mov
push
mov
mov
ss
movsl
and
loope
imulb
dec
lea
mov
movsb
cltd
sahf
ja
inc
dec
mov
loopne
mov
loopne
dec
cmp
mov
jecxz
int
jge
pop
add
in
inc
aaa
add
jl
insb
cmp
and
sbbb
mov
stc
sub
xor
lock
cmpsb
mov
pop
sub
mov
pop
test
insl
mov
les
lods
or
jnp
push
sub
adc
test
pop
sub
fmulp
mov
sbb
push
cmp
sub
inc
aad
and
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
call
mov
mov
adc
and
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
and
icebp
mov
mov
fists
and
push
inc
and
popa
adc
in
xchg
icebp
int
mov
shll
hlt
add
jno
inc
xor
inc
push
xor
jno
cmp
arpl
xor
imul
incl
xor
and
aas
sub
insl
xor
lods
fldl
lds
rcrl
sbb
inc
loop
lea
mov
inc
gs
jne
insl
loope
loope
stos
xor
out
mov
cmp
or
jno
mov
or
inc
jg
aam
aam
cmpsl
push
or
nop
jg
pop
ret
popa
adc
inc
xor
test
insb
stc
in
aam
xchg
mov
icebp
jno
popf
adc
mov
je
adc
pushf
push
cmpl
pop
pop
push
jp
and
je
add
push
and
mov
dec
fnstcw
out
cmp
push
or
sbb
popa
adc
scas
int3
xor
popa
popa
add
icebp
mov
mov
push
xchg
popa
mov
inc
add
and
push
add
call
or
scas
out
lds
adc
inc
adc
push
aas
jbe
jae
je
hlt
popf
rorl
mov
adc
movsb
mov
and
dec
add
inc
cmpsl
or
in
mov
loop
xchg
xchg
shll
add
jno
inc
xor
and
popa
add
and
mov
shll
xchg
add
jno
inc
xor
and
popa
add
and
jno
push
push
mov
gs
call
or
scas
scas
pop
inc
pop
cltd
aam
mov
mov
fucom
and
xchg
sub
add
xchg
xchg
movsl
gs
loope
add
int3
jae
mov
fidivs
popf
dec
mov
xor
mov
ficoml
rcrb
cmc
jg
stc
hlt
inc
push
adc
lahf
push
or
fstpl
adc
mov
cmp
cs
cs
loope
mov
sti
je
dec
fisubrs
push
push
xacquire
inc
mov
cmpsl
mov
cmp
lea
clc
cmpsl
sbb
cmp
sarl
and
mov
jns
pushf
cwtl
push
mov
sahf
test
or
ljmp
xor
cmpsb
lcall
fistl
aam
roll
adc
test
dec
test
es
inc
jecxz
push
xchg
stos
iret
out
xchg
lcall
test
xor
mov
and
xchg
pop
int3
jns
mov
out
orl
sahf
inc
dec
or
stc
lods
xchg
scas
test
or
add
ja
pop
push
pop
cld
xchg
stc
int
mov
inc
xor
dec
loopne
in
addb
enter
enter
pop
cwtl
mov
push
cmp
jg
jnp
mov
mov
mov
test
iret
push
jno
inc
mov
push
mov
or
push
pop
cwtl
jb
sbb
decl
lods
out
ds
lret
inc
sub
call
fcomi
aad
push
in
push
das
and
cmp
clc
jecxz
in
fdivl
ds
fstps
loopne
rorb
cld
fcmovnbe
and
imul
das
in
insb
in
sbb
pushf
push
mov
jo
and
mov
imul
mov
adc
subb
xchg
sti
movsl
and
test
mov
jecxz
je
nop
dec
or
push
mov
mov
mov
push
mov
addl
rolb
nop
cld
inc
pop
sub
cmp
mov
outsl
icebp
fdivrs
push
push
mov
push
push
mov
adc
fnstsw
cmp
push
rorb
push
movsl
mov
sub
insb
cmpsb
fldcw
in
decl
std
xchg
push
dec
imul
add
pop
mov
andl
push
xchg
sub
pxor
pop
sub
popa
sub
loop
inc
adc
xchg
sub
je
enter
push
jecxz
rcl
xchg
aam
mov
sbb
cld
xchg
hlt
jns
sbb
adc
cld
pop
pop
fiaddl
push
mov
pop
lds
xchg
outsb
iret
mov
lcall
nop
add
cmp
push
hlt
ret
or
add
jmp
faddl
mov
or
test
into
fdivs
and
fsubl
jne
ss
scas
loopne
push
insl
pop
sbb
push
lret
push
add
jmp
push
mov
xchg
fsubrl
sub
shl
ds
loopnew
sbb
mov
jge
cld
fistpl
cmp
xor
cmp
insb
lea
ja
mov
test
xchg
stos
and
mov
fwait
dec
push
dec
fs
and
inc
jp
lahf
loope
rcl
insb
movsl
mov
push
nopl
dec
mov
push
and
lahf
daa
inc
mov
es
data16
add
lret
xchg
lods
imul
insb
sbb
outsl
cltd
jmp
leave
iret
and
insb
js
pop
fldl
addl
jno
rcrl
cmpsb
push
addr16
aad
push
jae
sbb
dec
add
lret
scas
cmp
out
fisttpl
shr
loop
sbb
xlat
mov
mov
mov
frstor
jne
xchg
fbld
inc
sub
pop
mov
outsl
mov
sti
repz
insl
sub
or
jae
sbb
std
ficoms
test
dec
mov
pusha
clc
pop
cltd
adc
shlb
or
movsl
xchg
rorb
push
jne
fildl
fldenv
das
sub
cwtl
and
wrmsr
mov
je
jg
mov
mov
mov
iret
or
xor
mov
arpl
xchg
movsb
aam
xchg
dec
movsl
cmp
sbb
shrl
les
mov
xor
aad
enter
xor
inc
push
ret
cmp
gs
cs
jns
inc
adc
js
in
mov
push
outsl
xor
cmp
mov
jb
push
aam
jecxz
jb
jnp
jl
xchg
mov
fcmove
fwait
fwait
add
jno
cld
out
push
mov
cmpl
and
ret
lock
cmp
ss
inc
daa
insb
fisttps
fdivs
pop
or
pusha
sub
sub
repnz
icebp
idivb
add
xor
pop
inc
mov
add
cmpsb
insl
js
or
xchg
adc
loop
cmpsl
test
dec
incl
scas
or
daa
fdivr
cmpsl
popa
cmp
fisubrs
cmp
fcompl
rolb
adc
fcomps
jle
jno
call
pop
ds
xor
jns
adc
pop
fstps
pop
mov
jbe
sub
jge
pop
lods
pusha
in
inc
shll
ss
and
mov
add
fs
pusha
sbb
push
xchg
je
sbb
cmp
cmp
xlat
test
and
mov
sbb
test
pop
jns
mov
xor
adc
fcmovu
and
add
pop
loop
mov
and
adc
sbb
mov
pop
sub
dec
dec
mov
inc
push
or
mov
insl
jno
std
cli
dec
mov
movsl
fsubl
jmp
xor
jnp
dec
mov
in
cwtl
pop
mov
fdivrs
mov
les
pop
test
in
cmp
or
push
cmpsl
jg
xchg
test
jg
into
nop
add
cmc
mov
mov
aaa
call
pop
mov
mov
insb
leave
es
sub
xchg
inc
jns
stos
and
sub
outsb
jmp
jl
mov
jl
cmc
add
icebp
and
and
sub
testb
loop
xchg
xor
jle
jl
dec
lods
sub
inc
xor
daa
adc
scas
add
fdivs
dec
xchg
jecxz
int3
inc
lea
iret
add
sub
les
jl
mov
into
das
mov
add
popa
inc
pop
mov
leave
fs
cmp
push
imul
jge
in
lods
lods
or
xchg
dec
push
sbb
dec
roll
testl
cwtl
insb
or
sbb
lods
push
ss
test
push
in
mov
sarl
mov
aas
pop
xchg
ss
inc
cmp
lods
xchg
pop
push
push
iret
xchg
leave
jae
mov
int
or
xchg
xlat
push
cmp
int
pop
cmp
out
push
int3
leave
adc
jno
insl
dec
in
mov
mov
dec
and
leave
and
jp
lret
pusha
call
lret
mov
test
jp
sub
xchg
adc
dec
sub
inc
enter
lds
or
jne
dec
in
cmp
fstl
sub
dec
push
dec
clc
cmp
sbb
cli
pop
cmp
std
sbb
jnp
pushf
rcr
mov
jae
mov
jge
xor
xchg
movsb
insb
int
in
enter
adc
push
sub
push
lods
nop
data16
mov
or
pop
sub
insl
xor
lods
aas
je
mov
push
adc
out
mov
mov
out
fwait
leave
mov
xor
loopne
mov
sub
add
aas
repnz
ret
insb
test
sub
xor
fbstp
jo
lcall
fcmovu
std
mov
pop
inc
dec
add
mov
gs
jne
jecxz
add
pusha
in
sub
iret
inc
mov
jmp
dec
push
jl
cmc
std
mov
dec
ds
insl
movsl
and
imul
in
andb
mov
mov
xchg
sbb
and
lahf
outsb
jle
mov
int3
or
mov
sub
xchg
xor
cmp
outsb
les
cmp
pusha
mov
and
add
fdivl
pop
ss
xor
imul
mov
sarl
clc
push
repnz
ret
fwait
and
leave
add
mov
inc
vpandn
mov
jp
dec
out
mov
dec
je
fmull
push
pop
cmc
fwait
int3
popa
addr16
icebp
sbb
rclb
int3
pop
ficomps
xor
imull
mov
lock
adc
test
scas
sbbb
pop
cmp
aas
push
test
lret
daa
gs
call
mov
mov
cld
xor
mov
xchg
testb
sub
sahf
lods
xlat
ret
stos
add
std
mov
mov
test
cmpsb
mov
adcb
mov
int
jle
and
imul
push
lock
xor
pusha
push
stc
icebp
test
cmovo
enter
pushf
mov
rorl
mov
mov
cmp
xor
scas
pop
daa
stos
dec
sub
cs
cmc
mov
adc
ficoms
jle
inc
mov
mov
dec
shll
mov
ja
je
mov
andl
cwtl
push
xchg
fcompl
xchg
jo
xchg
fwait
add
mov
clc
xlat
mov
insl
dec
adc
out
daa
adc
adc
pop
push
or
mov
enter
pop
scas
int
sbb
add
jg
ret
pminub
pop
shll
and
int3
sub
or
adc
push
xchg
pop
es
mov
dec
jp
or
les
test
inc
leave
and
sub
or
push
mov
loope
pop
test
and
cmpsb
out
or
int
stc
test
jmp
lcall
and
cmp
inc
sub
and
test
or
xchg
test
sub
pop
adc
xchg
fisubl
pslld
jno
neg
dec
ficoml
sub
aad
clc
decl
leave
sbb
cmp
mov
nop
inc
mov
fwait
clc
sbb
xor
fcomps
lret
inc
sub
pop
cwtl
fwait
sahf
inc
cmp
pop
push
lods
mov
arpl
dec
pabsw
std
xlat
fwait
jp
dec
jl
sub
mov
movsb
mov
push
pop
addr16
lods
jecxz
inc
lret
in
jg
outsb
rorl
testb
lahf
adc
xor
mov
sbb
jl
mov
jle
or
rcrl
ficompl
jmp
lock
jnp
xchg
repz
push
scas
add
mov
jb
pop
xchg
aaa
xor
jge
inc
push
jo
pop
xchg
ss
fwait
out
lret
fistps
lahf
aad
fdivrl
test
dec
gs
pop
add
and
or
jl
xchg
xchg
xor
mov
fdivrs
inc
cmp
and
sub
data16
imul
jmp
xor
adc
cmp
mov
adc
push
adc
sbb
call
mov
mov
dec
sarl
popa
xchg
mov
add
aam
icebp
and
xchg
lods
cmp
jecxz
gs
xchg
stc
decl
cmp
arpl
mov
out
push
ja
mov
jae
mov
push
and
inc
icebp
mov
mov
stos
xor
xchg
or
sbb
es
mov
xchg
lds
push
fadd
add
lret
dec
xchg
adc
les
loop
loop
cli
in
in
push
xor
das
add
cmp
xor
inc
jo
test
repnz
fs
in
mov
std
mov
mov
jb
icebp
sbb
mov
jns
xchg
addb
es
mov
push
stos
or
repz
and
cmc
mov
dec
xchg
adc
fisttpll
pop
pop
push
and
les
push
int3
scas
dec
or
adc
bound
lds
mov
scas
mov
push
jle
loope
lea
xchg
xchg
or
inc
pop
jbe
shr
or
push
lcall
or
mov
add
mov
pop
jmp
pushf
mov
je
push
and
popa
sub
mov
daa
pop
jo
jnp
dec
sbb
jmp
fildll
pop
mov
dec
mov
addl
mov
mov
cmp
stos
dec
movsl
incl
in
cs
mov
test
aaa
lret
inc
rcl
or
arpl
pop
insb
cli
outsb
sbb
push
ss
and
push
imul
dec
outsb
dec
and
mov
sbb
inc
adc
cmp
mov
stos
add
mov
dec
imul
out
ja
jb
lods
xchg
and
aas
mov
daa
fcmovb
stos
insb
lods
jmpw
jae
lea
je
cmp
popf
rcrb
cmpsb
fdivl
mov
nop
es
es
adc
mov
sbb
jle
out
cld
cmpsb
lcall
enter
mov
sub
xor
dec
mov
aaa
sti
inc
sbb
leave
outsl
add
movsb
insb
popf
cmp
pop
es
add
jno
adc
dec
dec
js
adc
lcall
dec
xchg
xchg
push
and
out
aas
not
imul
sbb
mov
leave
loope
fs
int
and
pusha
pop
loopne
mov
test
or
out
cmp
std
mov
mov
or
rcll
pop
xchg
popa
sahf
fmuls
fisubrl
enter
push
cmp
push
fsubl
outsb
push
into
call
mov
pop
and
jecxz
fdiv
call
cmp
push
pushf
xor
sbb
nop
dec
mov
adc
xchg
outsb
std
mov
add
pusha
mov
mov
loop
mov
ja
aas
nop
stos
popa
mov
aam
pop
adc
mov
sub
jo
test
int3
shll
pop
and
lds
push
lret
stos
std
mov
adc
notb
out
push
xchg
add
cs
repnz
ret
jo
sub
lret
hlt
push
or
push
inc
lcall
mov
cmp
or
test
jne
divl
sbb
imul
xor
pop
add
repz
sbb
fsubrs
xor
dec
mov
cmp
jnp
inc
addr16
mov
in
es
jae
or
dec
mov
jno
sub
push
jno
and
push
sbb
je
xor
dec
push
mov
mov
mov
lock
or
push
iret
add
ljmp
lods
jno
ds
andb
stc
loop
sub
es
sti
inc
insb
inc
pop
pushf
sahf
push
mov
push
cli
popa
sbb
xlat
ficomps
out
and
add
mov
add
jne
lods
and
pop
jne
pop
iret
js
pop
cmp
jnp
loopne
sarl
lods
rol
mov
stos
data16
xor
jns
push
pusha
mov
gs
jae
sub
mov
inc
loop
pop
inc
inc
imul
movb
mov
fs
je
je
adc
fnstenv
mov
push
rcl
cmp
orb
xor
xchg
add
fsubrl
inc
inc
pop
add
cmpsb
shl
or
pop
xchg
sub
lods
popf
es
sarl
pop
xchg
fsubs
arpl
test
lret
add
add
mov
cli
cli
pusha
xchg
push
mov
test
mov
push
pop
pushf
inc
ret
mov
sbb
ja
cmpsl
imul
and
out
and
out
cmp
adc
in
jecxz
mov
push
rcl
xor
sub
or
inc
cmp
std
jbe
mov
inc
cmpb
psubsb
push
mov
cli
jns
mov
dec
mov
push
or
cli
cmp
shrb
in
les
mov
leave
jg
mov
lret
jo
mov
bound
and
push
rcll
adc
out
dec
inc
out
pushf
add
loop
xchg
adc
push
dec
jo
gs
je
repz
jl
into
enter
nop
mov
sub
aad
stc
sbb
sbb
inc
dec
sbb
insb
add
popa
and
cmp
and
add
jecxz
push
repz
mov
mov
mov
cwtl
xchg
mov
xor
pop
shrb
sbb
and
pusha
mov
ja
pop
subb
mov
movsb
loop
and
xor
jecxz
inc
inc
sub
jg
dec
inc
ja
pop
insl
popa
pop
into
xor
les
repnz
ret
nop
repz
and
jecxz
pop
cmp
mov
xchg
js
sub
xchg
add
push
or
cmp
add
inc
fistpll
pop
xchg
adc
lret
push
inc
dec
test
xor
pop
or
dec
not
lret
inc
pop
or
scas
mov
mov
shrl
push
in
pop
jbe
loop
pop
imull
push
aaa
inc
sahf
popa
in
ficompl
mov
sbbl
pop
mulb
sub
mov
sub
loope
adc
pop
outsb
movl
push
pop
jo
sbb
in
cld
xchg
fcmovu
stos
sbb
jmp
mov
fisubl
stos
pop
jnp
mov
sar
xchg
test
push
or
mov
popa
sbb
pop
push
adc
inc
push
cmp
int
jmp
xchg
loop
sub
in
mov
jnp
mov
lods
daa
jno
int
cmp
cmp
aad
sbb
inc
stos
pop
cmp
jo
dec
pop
adc
mov
mov
xor
hlt
fildll
loope
dec
and
ret
mov
pop
jnp
sub
xchg
or
add
cld
add
add
lock
add
adc
mov
fistpll
aad
popf
dec
fwait
in
mov
or
xchg
jae
or
and
ss
jecxz
fldcw
xor
cwtl
mov
leave
cltd
imul
ret
inc
xor
scas
sbbl
loop
sub
mov
cltd
xchg
mov
test
fstpt
adc
xchg
jae
fwait
imul
add
inc
testl
mov
push
es
fidivl
movsl
scas
push
add
std
lcall
sub
dec
popa
shll
gs
jl
xchg
jg
pusha
add
inc
or
int3
stc
orb
fldl
pusha
mov
adc
sbb
push
ror
roll
xor
push
jno
bound
mov
jmp
fs
sarl
pop
aas
sub
push
pop
inc
xor
lcall
cmp
rol
aas
mov
clc
cltd
jmp
imul
mov
sbb
inc
push
ret
sub
dec
lods
pop
pop
push
xor
aas
pop
mov
lock
adc
fcomi
addr16
xchg
test
add
push
or
xor
adc
mov
jecxz
stc
sub
mov
cld
push
adcb
jne
cltd
sbb
mov
cli
inc
adc
cwtl
sbb
mov
lock
pop
inc
inc
add
out
xchg
inc
push
cwtl
cmp
add
flds
mov
push
push
xchg
imul
xchg
xlat
cmp
and
cmc
clc
cmp
in
rcrb
fiadds
mov
adc
xchg
fidivl
mov
jle
imul
push
fcmovu
dec
xor
fwait
xor
or
add
or
mov
fcompl
push
insl
inc
shll
jmp
and
inc
test
and
cmp
cmpsl
mov
out
out
clc
add
add
or
sbb
push
rorb
lret
test
into
cmpsb
out
or
lds
or
cmp
cmp
stos
jb
cmp
cmp
xchg
inc
outsb
mov
push
jae
push
decb
lret
daa
loope
jecxz
das
add
and
or
jl
add
xchg
push
fildll
jnp
inc
dec
add
mov
jns
push
pop
rcr
in
mov
mov
or
das
pop
arpl
ljmp
shlb
sub
test
rcl
mov
iret
mov
pop
xchg
aam
mov
movsb
sub
and
sbb
loopne
iret
in
adc
jecxz
ljmp
sub
push
mov
loop
arpl
cli
lods
ljmp
insb
and
addr16
mov
push
les
dec
mov
xchg
decb
test
sub
addr16
into
addb
add
adc
mov
movsl
xor
xor
push
inc
test
cmp
imul
gs
decb
push
notl
pop
arpl
fucomp
ret
stc
mov
shl
jp
push
sbb
enter
je
sbb
popf
dec
jmp
fwait
icebp
out
mov
shll
xchg
add
jno
inc
xor
and
popa
add
and
mov
shll
xchg
add
jno
inc
xor
and
popa
add
and
mov
push
mov
xor
roll
push
inc
and
popa
add
icebp
sti
rcll
loope
jno
add
fisttpl
test
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
