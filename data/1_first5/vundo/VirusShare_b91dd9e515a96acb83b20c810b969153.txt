add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
clc
mov
lock
dec
insl
inc
clc
jmp
add
add
or
add
push
add
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
pop
add
add
mov
insl
add
add
add
add
cmp
mov
add
lret
add
add
sbb
addl
add
add
pop
add
add
add
add
add
add
or
addl
add
add
add
add
add
mov
addl
add
addl
add
add
add
or
addl
add
add
add
add
add
or
addl
add
add
add
add
or
addl
add
add
addl
add
add
pop
add
addl
add
and
add
add
add
add
add
add
add
add
add
add
roll
sub
addl
add
adc
insl
add
add
add
adc
mov
add
add
jbe
roll
or
add
add
add
addl
add
add
insl
add
add
jbe
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
faddl
cmpsb
add
add
insl
add
pop
add
add
add
add
add
add
add
add
mov
faddl
das
add
add
addl
add
add
add
loop
xchg
dec
add
add
add
add
cmp
xchg
add
dec
add
add
add
roll
adc
add
add
add
addb
add
add
add
add
add
add
faddl
dec
add
add
add
add
add
add
add
and
add
imul
addl
add
add
addl
add
xor
add
add
add
push
add
add
add
cmp
adc
mov
addl
add
add
add
scas
add
add
add
cwtl
add
add
mov
jns
xor
inc
add
mov
insl
add
pop
add
add
mov
add
mov
add
add
add
insl
add
add
add
scas
add
add
mov
cwtl
add
add
add
adc
add
add
sub
add
pop
add
add
add
add
add
add
add
add
addl
add
add
add
add
pop
add
lock
add
pusha
add
jns
insl
add
add
add
addl
add
add
addl
add
add
insl
add
addl
add
add
add
add
addl
add
add
in
add
add
pop
add
add
add
add
add
cmp
add
mov
add
sub
out
roll
jle
addb
add
add
add
add
add
addb
add
add
insl
add
and
sbb
das
jae
clc
cli
sbb
out
in
pop
repz
dec
cli
popa
xchg
popa
loopne
add
pop
enter
aam
cmp
lea
dec
mov
push
add
pop
adc
push
pop
mov
xacquire
inc
cmp
mov
mov
mov
jb
mov
push
cmpsl
jge
push
loope
leave
stos
icebp
loope
xchg
aam
adc
pop
jge
mov
sbb
xchg
xchg
insb
fs
lods
lcall
mov
inc
fisttpll
push
pop
cmp
stc
add
inc
hlt
xchg
cltd
in
fdivs
movsb
js
jmp
mov
pop
clc
pop
scas
mov
arpl
inc
cltd
lods
dec
pushf
cmp
sub
out
lock
inc
outsb
lret
in
sbb
js
flds
sub
jge
jno
bound
imul
mov
jae
mov
les
sbb
pushf
dec
cmp
insl
sahf
mov
int
fisubs
sbb
xor
out
xor
out
inc
push
dec
lret
jle
xor
ja
shrl
mov
jnp
jmp
push
cmp
mov
in
mov
icebp
out
repz
lahf
jns
sub
push
jmp
and
into
jno
addb
jo
call
push
add
andb
add
xor
imul
insw
aam
and
popf
xor
add
ja
fidivs
add
adc
jnp
sub
gs
in
lock
xlat
push
outsb
sub
cld
and
and
insl
adc
cld
aam
lret
lahf
and
push
xlat
test
mov
push
mov
inc
mov
mov
ss
pmulhuw
out
adc
testl
aad
test
sbb
xchg
xor
adc
jbe
mov
sbb
aam
das
sub
loope
mov
inc
xchg
push
cli
pcmpgtd
repnz
mov
adc
mov
or
movsb
or
mov
sub
imul
repnz
pop
dec
push
cmp
mov
shll
ja
or
insb
jp
push
out
inc
xchg
lret
lahf
jae
sbb
dec
pop
sub
inc
or
xchg
xchg
sahf
addr16
jmp
leave
push
mov
and
sbb
push
xchg
cmp
add
pop
imul
daa
dec
movsb
cmpsb
xchg
aaa
xor
neg
outsb
adc
xor
call
mov
add
xchg
clc
icebp
inc
push
mov
fildll
and
add
fdivrl
mov
jp
xor
push
hlt
jle
rol
insb
jbe
mov
clc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
inc
xor
popa
adc
mov
jle
push
add
shlb
addl
mov
inc
xor
popa
adc
add
arpl
push
xor
mov
mov
xor
mov
pop
xor
jns
imul
cmp
inc
fmuls
mov
std
mov
ret
sub
ds
popa
ja
out
push
mov
mov
inc
scas
sub
push
hlt
nop
cmp
orb
cmp
cld
sub
movsb
dec
inc
push
clc
ret
sbb
xor
aas
mov
in
outsl
ret
call
xchg
jae
pop
fsts
insl
shlb
int3
inc
and
jb
jae
mov
shlb
jle
xchg
mov
sub
in
lds
pushf
insb
lods
rcll
outsl
add
pop
shlb
adc
pusha
rcrb
pop
mov
xchg
mov
pop
mov
xor
popa
adc
push
jae
arpl
push
sub
mov
mov
cltd
repz
mov
pop
xor
add
add
and
xor
fistpll
in
sbbl
xor
adc
push
insl
push
adc
cmp
inc
xor
iret
loope
mov
sbbl
push
or
pop
adc
push
xor
mov
mov
xor
mov
inc
xor
popa
adc
add
arpl
push
xor
mov
mov
xor
mov
inc
xor
fsubp
add
insl
mov
popf
inc
cmp
jno
test
loop
test
inc
fidivl
push
out
in
data16
js
shl
cmpsb
dec
fcmovbe
in
jge
jg
js
or
pop
cld
lcall
mov
xor
cmc
add
xor
jae
scas
pop
dec
add
xchg
and
scas
data16
hlt
cmpb
xor
dec
roll
dec
xchg
mov
test
aas
mov
bound
cmp
sbb
adc
iret
ffreep
xchg
testb
imul
stos
add
cmp
jb
jno
jne
dec
or
movl
mull
adc
push
nop
imul
sarl
mov
adc
xor
in
mov
pop
mov
jecxz
lcall
jmp
fwait
sbb
xor
cmp
jae
js
add
mov
popa
jl
call
daa
loopne
mov
inc
pop
cld
add
lahf
jno
popa
mov
mov
mov
movsl
inc
lea
loopne
popa
pushf
test
shll
shll
stc
xorl
loopne
ljmp
outsb
xorb
cmpb
pop
jb
and
sbb
adc
cs
jno
inc
and
fisubs
mov
cli
xchg
inc
cmp
test
and
jbe
pop
test
movsl
cmp
lret
or
push
or
leave
hlt
rorb
add
xchg
icebp
addr16
pop
xchg
mov
aad
inc
push
fldl
xchg
xchg
xchg
mov
jecxz
js
dec
divb
ds
js
sub
xchg
js
enter
addb
sbb
lret
xchg
cli
xchg
adc
dec
jne
dec
enter
or
lock
dec
stc
stos
dec
test
xchg
cld
push
jge
mov
fisttpll
mov
or
cld
sbb
sub
fwait
xchg
mov
hlt
cld
or
jns
aad
cmc
dec
lret
push
filds
aad
inc
sbb
bound
je
sbb
addb
sub
mov
jmpw
or
jae
mov
sbb
and
cmp
cmp
mov
fcmovbe
xor
xor
pop
cmpsl
inc
fsubrl
push
mov
xor
es
or
loop
pop
mov
fists
popf
lock
push
les
dec
sti
mov
add
xchg
ja
daa
cmp
and
imull
jo
je
inc
out
fdivrl
aas
scas
mov
sbb
and
inc
cmp
and
jle
pop
xchg
bound
jns
arpl
jp
pxor
insl
mov
mov
rolb
inc
cmpsl
ficoms
hlt
sub
cmpsl
mov
repz
pop
add
push
vpmacsdql
mov
lret
loopne
mov
cli
push
pop
sub
and
fists
out
dec
or
inc
stos
divb
dec
shrb
and
add
inc
fstps
jb
adc
sbb
loopne
jns
es
leave
pop
xchg
ss
dec
adc
mov
jbe
fchs
jge
lea
into
das
aas
out
jmp
movsl
repz
xchg
mov
pop
stos
shld
loop
addb
cltd
packsswb
jp
jno
fsts
pop
xchg
push
cmp
ds
int3
inc
cmp
arpl
mov
mov
add
out
arpl
cmp
lds
lret
dec
inc
call
jp
ficoml
sbb
fdiv
scas
sarb
rcr
insl
adcb
mov
push
call
rclb
adc
mov
lret
or
aaa
mov
sub
jp
xchg
mov
push
jns
or
inc
mov
jecxz
or
xlat
mul
jnp
pushw
repz
sub
or
xchg
subl
xor
xor
daa
ds
subl
repnz
in
test
rcl
xor
je
add
lahf
adc
cmp
push
fisttps
adc
cli
cld
jb
mov
xor
movsl
mov
cmp
jae
fdivs
ljmp
sub
xlat
rorl
movl
mov
aam
fnstsw
mov
in
in
addr16
loope
int3
sub
push
mov
loopne
ficoml
push
les
data16
add
repnz
int
xor
xor
stc
imul
shll
icebp
inc
sbb
jle
adc
mov
dec
mov
inc
or
out
cmp
hlt
nop
mov
push
imul
inc
sub
adc
mov
pop
push
aam
js
iret
pop
sbb
and
inc
les
adcb
inc
mov
imul
jl
dec
icebp
cli
lea
mov
pop
add
mov
jnp
jp
cmc
push
test
ljmp
sbb
sbb
xchg
test
sarl
pop
sub
inc
int
adc
in
cs
mov
fs
idivl
adc
or
jp
push
lods
mov
sbb
mov
inc
call
iret
js
push
or
popf
fdivrs
xchg
fwait
mov
dec
xchg
cmp
aam
sar
and
ret
fldt
scas
in
fs
xchg
push
lods
adc
adc
pusha
fiaddl
lods
lcall
lret
sti
dec
cs
sbb
out
jle
push
jmp
mov
mov
or
pop
sbb
arpl
decl
dec
imul
pop
idivb
arpl
and
xor
cmp
cmpsb
ds
shrl
jno
or
sbb
lods
jbe
aam
xchg
scas
lock
paddsb
mov
and
out
adc
cli
fisubrl
sbb
xor
dec
jg
and
push
and
shl
testb
push
jns
pop
mov
mov
in
jne
sarb
iret
and
cmp
pusha
jno
enter
cmovb
pop
mov
loop
sarl
jns
jnp
and
lods
mov
lea
pop
loope
movl
push
test
aas
and
mov
loopne
lods
add
repz
xchg
cld
push
push
push
in
pop
mov
adc
cmp
sbbl
test
stc
xchg
stc
in
adc
xor
mov
mov
lcall
xchg
loopne
xor
std
jg
adc
sbb
jno
inc
into
mov
cmp
icebp
sbb
nop
popf
add
ds
aaa
fmull
xchg
jmp
iret
and
dec
xor
pop
dec
repnz
inc
test
dec
js
jnp
loope
mov
xor
xor
aas
mov
dec
inc
adc
loopne
aam
push
int
xlat
or
xchg
dec
in
sarb
bound
into
inc
in
pop
push
out
pop
add
rcrl
and
push
ret
inc
mov
xchg
jp
pop
fsubrp
jae
popf
add
or
into
cmp
sub
and
lret
push
xchg
ret
push
gs
fstl
sbb
mov
dec
jns
fabs
adc
test
ja
out
movsl
mov
xor
xor
pop
lcall
inc
iret
pop
jg
or
pop
mov
rcrb
int3
xchg
sbb
inc
jg
mov
mov
inc
push
sub
fstpt
push
dec
cmp
jg
shll
jno
rol
push
cmpsb
xchg
mov
or
hlt
cmp
sub
jecxz
inc
mov
push
rorb
or
adc
imul
mov
mov
nop
inc
sub
imul
ds
lods
push
aas
xor
jmp
subb
sub
test
pop
stos
fs
les
sarb
das
aad
mov
arpl
ret
lods
in
inc
mov
dec
cmp
std
out
and
imul
bnd
inc
adc
in
aam
pop
je
iret
mov
sub
push
adc
outsb
cmp
pop
and
iret
adc
insb
lods
fiaddl
or
jl
loope
movsb
mov
aad
or
shrl
fmulp
js
loop
mov
or
or
fisubl
int
mov
inc
cmpb
mov
dec
pop
mov
shll
jmp
sub
sbb
or
or
lods
lret
xchg
push
loop
bound
imul
jo
sub
cmp
sub
or
xchg
jl
lds
adc
pop
fsubs
enter
shl
jmp
xor
movsl
push
out
adc
push
out
adc
sbb
outsl
movsb
call
sub
or
push
shlb
int3
pop
add
decb
and
jl
out
stos
jg
cli
mov
into
mov
lock
mov
inc
mov
rorl
xlat
stos
dec
loopne
mov
dec
sub
xor
mov
aaa
pushf
movsb
ljmp
pop
mov
shll
push
xor
mov
in
pop
clc
scas
lahf
xchg
inc
mov
push
mov
pop
adc
mov
fmuls
repz
mov
lods
mov
xchg
xchg
int
mov
cmp
rolb
rcl
cmp
pop
rorb
jne
test
movsl
jae
pop
cmpl
and
sub
pop
or
add
es
push
cltd
stc
aaa
mov
add
or
jo
jno
xor
imul
jns
stc
sub
movsb
mov
test
xor
lcall
jno
dec
sti
pushl
ret
rorb
push
xchg
xchg
push
push
jecxz
cmp
test
cmp
stos
and
inc
test
adcl
fs
inc
dec
hlt
mov
negb
je
add
push
or
pop
mov
or
cmpsl
dec
sub
hlt
inc
lret
mov
int
das
rcll
repz
dec
les
or
and
push
dec
jge
stos
mov
mov
cmpb
cmp
mov
test
jg
mov
cmp
fstl
and
ret
out
jp
iret
sti
dec
push
je
add
iret
mov
or
addr16
decb
and
adc
dec
out
lret
or
jg
xor
xor
add
xchg
pop
les
adc
mov
out
addr16
aam
xchg
sbbb
dec
inc
mov
idivl
mull
adc
outsb
push
fimull
call
xlat
scas
sub
mov
mov
sub
adcb
push
lock
fwait
add
push
or
imul
sbb
push
dec
rcl
lret
out
adc
inc
xor
aam
inc
sub
jp
call
mov
test
gs
ret
lahf
out
bound
in
mov
fdivrs
mov
icebp
js
cmp
aad
push
mov
xor
arpl
sub
push
rorl
adcl
add
loope
cmpsb
scas
dec
das
aam
lahf
daa
push
add
push
adc
mov
out
cltd
jbe
ret
je
push
push
lods
shlb
mov
arpl
iret
jl
cmpsl
daa
insb
xorb
loop
hlt
leave
mov
js
mov
add
clc
out
rcr
dec
jne
xor
sub
cmp
adc
shlb
push
insl
mov
mull
ss
lret
and
cmp
setle
shlb
xor
in
fsubs
lahf
and
lcall
adc
hlt
fadds
cmp
mov
pop
sbb
js
addr16
cmp
clc
sbb
cmp
in
xor
sub
shl
push
shlb
mov
or
dec
lret
push
addr16
aaa
leave
pop
fs
jl
push
out
cmp
or
inc
pop
fldt
mov
fcoms
push
ret
testl
cmpsl
mov
gs
adc
ret
hlt
mov
stos
sub
rcll
jbe
add
or
cmpsl
insl
fcmovu
orl
ss
mov
mov
jbe
repnz
mov
outsb
movsl
popf
shl
rorl
movsb
pop
cld
pop
fstpt
fimull
imull
ret
mov
icebp
mov
inc
mov
push
adc
out
sub
sarb
call
cmp
sub
lret
pusha
and
out
fucomip
test
jge
jl
js
hlt
inc
pop
add
jb
xchg
xchg
or
mul
cmp
adc
xor
repz
shlb
out
stos
push
inc
lcall
add
test
cmp
stos
in
bound
repnz
and
ljmp
adc
lds
mov
jle
sbb
in
or
js
xor
jns
aam
sbb
cmc
mov
add
pop
adc
sub
jge
cmp
push
mov
xor
or
fadd
leave
mov
nop
xor
inc
xor
enter
addr16
roll
jecxz
adc
clc
sub
pop
loopne
das
into
int3
xchg
das
dec
jnp
jl
mov
cmp
test
daa
cmovno
aas
lret
dec
mov
call
and
enter
insb
xchg
xchg
in
mov
xor
fadds
test
add
dec
jb
mov
scas
ds
clc
xchg
push
xor
ret
test
mov
daa
sub
lods
icebp
cmp
push
or
xor
cmp
loop
pop
inc
cltd
or
pop
loopne
out
xor
faddl
jecxz
pop
push
mov
movsb
icebp
sub
dec
mov
adc
fsts
mov
loop
sarl
mov
cli
ret
jbe
fcoms
cltd
incl
dec
mov
pop
stc
cmpsb
bound
addr16
lcall
cmpsl
mov
fwait
dec
xor
insb
push
pop
inc
fucomip
shl
pop
cmp
mov
lcall
call
stc
pop
pop
and
int
or
jno
mov
pop
lea
jo
xchg
cmp
cmc
mov
pop
ficomps
xchg
sub
enter
xchg
inc
dec
mov
jnp
jecxz
clc
gs
cmp
imul
or
dec
cmp
andl
lds
or
imul
je
cmp
or
lahf
aad
repz
lods
mov
pop
xchg
pusha
push
shlb
repz
sbb
js
adc
jbe
out
dec
inc
test
jnp
mov
shrl
cmc
mov
cmp
adc
fisubl
in
es
inc
pop
inc
arpl
jo
fsts
cmp
loop
inc
fstps
js
mov
out
and
clc
nop
add
sbb
gs
test
mov
xchg
mov
cmp
insl
pop
pop
lcall
fiadds
jne
xor
mov
scas
jecxz
jo
jae
enter
sbb
dec
jne
push
jmp
popa
ret
out
iret
out
adc
mov
arpl
inc
cltd
out
adc
sbb
shrl
fiadds
push
pop
pop
or
test
repz
rcll
testl
jae
xchg
push
aad
sbb
mov
jmp
mov
sbb
cltd
fwait
mov
mulb
out
add
scas
sub
aaa
push
push
jae
outsl
insl
inc
mov
mov
mov
sti
cmp
mov
fisttps
insl
inc
xchg
daa
fisubrl
scas
sarb
nop
xor
stos
leave
sbb
push
clc
sahf
ss
mov
inc
jmp
fs
jp
cs
push
xchg
hlt
ret
test
mov
daa
xor
jb
jmp
movsb
lods
call
les
out
pop
rclb
adc
int
sub
nop
sbb
xchg
mov
mov
repz
clc
jmp
popf
movsb
rolb
xor
aas
push
fldt
pop
mov
adc
in
push
mov
xor
push
push
gs
test
leave
stc
mov
inc
pop
lods
inc
arpl
xchg
loopne
test
mov
mov
pop
jp
xchg
jns
popa
dec
and
sti
inc
add
fidivrs
divl
insl
test
mov
pop
mov
mov
cmp
shrb
push
imul
sub
in
xchg
ss
adc
loop
dec
lods
aad
mov
or
cmp
mov
mov
cmp
xchg
pop
movsb
dec
pop
pop
xchg
fildll
popa
punpcklbw
jnp
lahf
dec
pushf
sub
mov
sub
rcrl
sbb
cld
andl
jb
out
fsubl
cli
and
xor
mov
lock
and
clc
stos
add
cli
aas
aad
and
mov
pop
sbb
mov
sub
xchg
add
fsub
aas
and
out
cwtl
push
sbb
imul
pop
loope
mov
test
sbb
xchg
bound
sub
and
xor
mov
push
pop
xchg
sbb
cltd
mov
mov
and
mov
jae
push
dec
cld
out
sbb
sub
inc
dec
push
imul
push
add
dec
lahf
ret
dec
mov
aam
adc
loope
mov
fdivp
xchg
cmp
cli
bound
mov
aam
jne
mov
lret
sub
in
enterw
arpl
and
pop
lds
inc
addr16
sbb
pop
cmc
xor
faddl
mov
pop
cmc
arpl
xchg
mov
xchg
popa
pushf
dec
xchg
movsl
dec
lods
dec
dec
push
cmpsb
push
fdivp
stos
sbb
es
inc
cmp
dec
inc
mov
xchg
shll
enter
stc
jo
sub
shl
andl
pop
inc
int3
jb
inc
fadd
stos
adc
imul
or
ja
mov
sub
lods
dec
call
jle
repz
and
rcr
mov
rorb
pop
xchg
or
push
lods
sahf
cmp
cmp
dec
xchg
pop
inc
adc
enter
sahf
cmp
sub
cmp
mov
dec
add
inc
cs
clc
call
sbb
idivb
add
jbe
push
push
ss
mov
fwait
xchg
xchg
outsl
sahf
cmp
xor
out
aam
adcb
aas
nop
adc
enter
and
test
mov
bound
lock
fldenv
dec
aam
xchg
dec
pop
pop
sub
cs
adc
and
cmp
xor
inc
stc
jb
push
gs
xor
adc
pop
pop
push
or
push
imul
sbb
mov
in
adcl
push
xchg
mov
mov
dec
arpl
mov
cmp
mov
fsts
pop
icebp
and
mov
sbb
imul
pop
push
fcompl
loopne
jecxz
dec
pop
shrb
cmp
inc
mov
inc
fcmovnbe
fsubrl
rorb
mov
pop
out
ficoml
fisttps
pop
clc
jnp
out
mov
inc
es
sti
xorb
jns
push
inc
push
rorb
sbb
cltd
dec
jle
out
lret
pop
push
mov
add
mov
pop
arpl
negb
pop
sti
and
mov
cmp
inc
mov
out
pusha
jbe
or
pop
cmc
ds
cmp
add
faddl
jnp
push
xlat
je
movsb
dec
cmp
mov
and
pop
std
imul
jecxz
or
xor
sub
out
mov
ret
repnz
cs
stos
dec
mov
lahf
jne
shrl
cmp
fwait
adc
lret
nop
sarb
jo
lock
pop
mov
adc
cwtl
jb
adcb
mov
xlat
clc
add
mov
fs
or
aam
movsb
mov
pop
sbb
cmp
les
cwtl
stos
hlt
mov
cmpl
mov
mov
xchg
pop
cmp
push
lods
pop
sbb
stos
or
ds
and
gs
xor
jge
std
jne
stos
arpl
push
dec
push
data16
popf
push
call
loopne
movsb
mov
xchg
rolb
jo
cmp
xchg
cmp
or
cmpsb
lahf
loop
shrl
ficompl
js
adc
icebp
mov
inc
jbe
sets
sti
cmc
push
and
jno
add
arpl
push
xor
mov
mov
xor
mov
inc
xor
popa
adc
add
arpl
push
xor
mov
mov
xor
mov
inc
aaa
push
and
jno
add
arpl
push
xor
mov
mov
xor
mov
inc
xor
pusha
adc
add
jecxz
shll
or
icebp
hlt
idivb
sbb
sub
cmp
fs
addl
loope
call
rclb
les
jno
inc
test
lds
in
inc
xchg
push
loope
icebp
and
add
pusha
and
xor
pusha
les
aam
jno
inc
test
sbb
insl
adc
cmp
rorl
inc
in
xlat
imul
or
add
and
xor
in
icebp
cmc
sbb
cli
sti
data16
and
jno
inc
jnp
in
dec
fs
incb
dec
adc
iret
push
jno
dec
sti
pop
jmp
sbb
test
ljmp
hlt
pop
hlt
ja
or
scas
mov
leave
aaa
loop
ja
xor
adc
adc
jno
xor
mov
mov
pop
push
and
and
jo
xchg
and
or
cwtl
jno
inc
jnp
test
mov
and
or
jl
sbb
insl
and
jno
mov
fwait
sub
cmpb
ds
xor
sub
mov
push
inc
xchg
cli
jae
sbbl
xor
add
or
ja
and
sub
xchg
enter
cmc
and
xor
push
hlt
shlb
pop
mov
jmp
clc
in
or
lock
jo
es
nop
arpl
sbb
push
mov
jecxz
loopne
fnsave
ret
pop
icebp
xor
add
adc
in
hlt
add
adc
popa
movsb
jno
inc
test
mov
inc
xchg
push
loope
icebp
xor
add
adc
in
hlt
add
adc
popa
movsb
jno
inc
test
mov
ret
push
push
cs
mov
cmp
push
mov
push
test
jbe
dec
jmp
nop
aad
fadds
jne
rorb
movsl
inc
or
in
xlat
mov
adc
and
ret
pushf
jmp
int3
mov
inc
movsl
mov
js
dec
sbb
xor
fistpl
in
movsl
fdivl
stc
xor
fimuls
iret
leave
stos
lods
pop
fidivs
fstl
mov
adc
xchg
mov
cld
and
rorb
test
aaa
jne
pop
jl
xchg
inc
and
stos
mov
dec
add
out
dec
int3
out
inc
mov
mov
xchg
shrb
adc
lret
xlat
push
add
fidivl
adc
inc
cld
cld
adc
inc
push
out
dec
push
cmpsl
scas
out
bound
int
nop
and
xor
dec
out
mov
xchg
movsb
push
iret
pop
andb
and
mov
adc
test
xor
pop
pop
icebp
cmpsb
sbb
mov
jnp
popa
lods
mov
add
cld
jbe
pop
jecxz
xchg
sub
mov
sarb
pop
mov
std
cmp
adc
enter
add
cwtl
das
idivl
subl
jns
sub
mov
sahf
mov
xchg
gs
filds
pop
cmpsb
insl
fcomip
pop
sbbl
popf
jle
shrb
cmp
aad
pop
sub
mov
adc
decl
or
insb
mov
cld
jnp
int
sarb
sbbl
or
popf
into
pop
mov
das
out
cmp
std
push
sub
xchg
pop
sub
push
dec
sbb
clc
aaa
dec
cld
mov
subb
vmovsldup
gs
xlat
adc
xchg
fistps
call
inc
adc
aaa
mov
jg
and
enter
fs
je
pusha
mov
sbb
lods
and
idivl
xor
add
jp
mov
movsl
jns
fsubrs
sub
jecxz
sub
lods
sub
dec
mov
iret
test
cmc
daa
int3
and
popf
xor
push
and
lahf
bound
mov
sahf
add
adcl
insl
and
xchg
inc
add
lds
pop
xchg
into
xor
sub
sbb
stos
dec
pushaw
push
shlb
aad
insl
cs
sub
jae
pop
mov
mov
jp
adc
cmp
sti
ss
imul
rorl
add
pop
pop
and
or
fwait
sbb
cmp
cmp
cltd
mov
mov
int
jbe
fnstenv
xor
add
cmp
jns
push
lock
scas
or
loop
mov
xchg
adc
cld
push
rcr
lret
cmp
gs
xor
loop
jmp
xchg
sub
and
xrelease
dec
scas
jecxz
aaa
pusha
add
cmpsb
mov
pusha
lock
les
not
shrl
push
or
fnsave
cwtl
sub
pusha
or
out
push
out
lods
sbb
test
pop
jg
fucomi
int3
cmp
jecxz
jne
dec
je
sub
cmp
movsl
sub
sbb
cmp
mov
push
mov
push
inc
push
jecxz
push
fsubrl
sbb
push
mov
icebp
jno
mov
mov
pushf
pop
iret
daa
pop
cmp
push
jbe
adc
cwtl
mov
push
ret
or
js
loopne
xor
xchg
xchg
push
testb
mov
sar
das
dec
dec
jns
dec
inc
js
sbb
mov
std
add
xchg
sub
inc
sbb
xor
inc
pushf
pushf
sub
ljmp
pop
xor
fists
gs
outsb
cld
nop
push
stos
aas
jae
push
cmp
jne
jge
xor
ja
pop
lods
sbb
sbb
cvtps2pi
adc
orl
scas
cmp
arpl
lret
fldcw
xchg
adc
mov
jle
or
pop
stos
or
pop
leave
repz
std
sti
adc
push
dec
stos
mov
jle
movsb
orb
ret
sti
push
daa
cmp
js
mov
decb
inc
cli
jno
test
inc
sub
lret
adc
pop
cmpsb
inc
xchg
inc
xor
inc
stos
sub
pop
dec
push
loope
out
sahf
and
loop
jns
cmc
ret
sub
pop
add
stos
dec
adc
and
mov
lods
leave
xor
divb
lfs
mov
mov
push
mulps
inc
push
and
or
mov
push
xor
in
aam
xor
daa
gs
xor
pop
xchg
in
fldenv
pushf
out
test
jnp
xchg
add
pop
decb
mov
cmp
fimull
sbbb
add
push
lret
xor
dec
cmpsb
outsl
cmpsl
mov
xor
sbb
and
fwait
test
stc
xchg
jns
sub
dec
daa
xchg
push
int3
mov
jae
add
mov
hlt
outsb
mov
mov
mov
jno
push
sti
pop
scas
repz
es
dec
lret
sbb
jb
sub
in
xchg
movsb
test
lods
rorl
push
sbb
push
dec
dec
pop
mov
inc
push
jns
insb
orb
repnz
mov
loopne
jno
fsubrl
sbb
imul
sub
lcall
stc
scas
cmpb
cmpsb
xchg
sbb
rclb
xchg
mov
inc
or
call
pop
in
mov
scas
daa
jb
pop
bound
jg
and
xor
and
cmpsl
and
clc
ljmp
xor
test
add
cmp
clc
xor
add
in
jbe
js
stc
scas
and
lcall
mov
scas
inc
fldt
xchg
cmp
dec
mov
mov
and
mov
out
sub
aam
faddl
cmc
out
jg
mov
xor
fldl
into
cmp
clc
xor
xchg
adc
loop
enter
pop
sbb
push
je
mov
icebp
cmp
rcll
stos
push
notb
pushf
idivb
mov
mov
imul
sbbb
inc
jecxz
jl,pt
sahf
mov
or
and
repz
jmp
aam
pop
mov
dec
out
xor
mov
dec
mov
mov
jnp
adc
xor
add
jmp
lds
inc
pop
push
or
or
lcall
pop
sbb
enter
stos
loop
adc
jns
ftst
pop
jmp
test
xchg
cli
nop
push
out
sub
sub
fucomp
mov
sti
mov
pusha
out
adc
out
sub
aad
xchg
fcoml
dec
xchg
xor
jmp
cmpsb
nop
out
xor
xor
divl
xlat
mov
stos
in
dec
sbb
mov
inc
ss
insl
lods
jge
jle
jb
inc
xchg
mov
addr16
inc
lahf
or
sbb
and
lock
cli
repz
xchg
into
ret
add
push
lret
xchg
and
jge
jno
jp
sbb
and
in
and
pop
sbb
add
sbb
jge
xchg
lea
and
and
out
dec
popa
push
mov
ficomps
adc
push
fisttps
add
mov
orl
sbbb
cmpb
jp
inc
or
mov
pop
mov
xchg
inc
rcrl
stos
push
ja
bound
pop
out
lods
test
pop
mov
pop
inc
mov
fsqrt
pop
out
mov
test
dec
jne
ret
leave
js
cmpsb
inc
push
in
arpl
out
mov
addb
mov
xchg
jmp
data16
movsb
push
lret
fistl
fwait
outsl
in
call
pop
pop
jecxz
hlt
subb
add
sub
inc
int3
sarl
jo
and
lret
or
sub
fnstsw
fmulp
inc
jge
xor
push
sbb
adc
fidivl
mov
push
outsb
xor
fwait
push
fdivrl
adc
jp
cmp
scas
and
arpl
push
stos
or
or
jmp
jmp
cmp
pop
mov
add
in
movsb
insl
sub
xor
sbb
nop
push
push
adc
pop
inc
push
pop
hlt
enter
ds
dec
sub
inc
outsl
xchg
cmp
mov
and
dec
shrl
adc
sbb
clc
xlat
inc
add
pop
pop
insb
lods
mov
sbb
jge
pop
in
lcall
mov
repz
pop
mov
adc
sub
add
push
push
xor
inc
int3
and
inc
pushf
out
cmp
jle
or
push
and
loopne
xchg
jne
xchg
cmpsb
fisubs
inc
mov
mov
sbb
aas
adc
ret
fnstenv
pushf
scas
in
fwait
aam
in
jle
xor
add
cmp
mov
push
rorb
jne
pusha
jne
std
jl
mov
xor
mov
dec
ret
xchg
push
fcmovnbe
cmp
into
jl
mov
inc
gs
ret
lds
insl
xchg
sbb
lods
into
push
cmp
jo
pop
loopne
mov
hlt
addb
inc
aaa
mov
aas
xchg
sbb
push
dec
cs
imul
sbb
mov
fs
jmp
xor
pop
sbb
movb
lods
push
and
enter
jno
push
dec
insb
cmp
test
push
aam
les
mov
mov
mov
into
mov
into
andb
push
jge
les
mov
dec
je
mov
shr
jo
sub
fnstsw
cmpsl
dec
ffree
inc
fldenv
cmp
mov
insl
sbb
aaa
xchg
enter
fs
nop
xor
out
dec
test
loopne
pop
xlat
xchg
scas
out
sub
jp
pop
pop
dec
lods
pop
mov
fldpi
xorb
in
cmp
jecxz
js
xchg
inc
lods
cmc
inc
sti
fisubs
mov
lds
sbbb
push
inc
xchg
xchg
pop
jl
mov
sbbl
in
adc
mov
fldcw
xchg
in
add
sbb
inc
fmull
cmc
movsb
mov
call
cmpsl
and
daa
push
mov
mov
mov
adcb
insl
mov
sub
out
shl
in
dec
ljmp
jecxz
sarl
daa
xchg
jns
mov
push
mov
mov
scas
popa
and
int
or
mov
cmp
jmp
imul
jmp
lods
insb
pop
ja
mov
cs
mov
cltd
cmpsb
mov
lock
xor
ror
sbb
in
mov
jne
out
jno
inc
and
std
mov
fldt
push
enter
cs
mov
out
xchg
insb
jecxz
loope
mov
jmp
sarb
xor
mov
cmc
mov
or
mov
pop
dec
jmp
inc
jae
testb
jnp
dec
lret
hlt
jnp
shr
je
rorb
repz
xchg
pop
mov
xchg
je
outsl
push
pop
test
fadd
mov
inc
jne
sbb
cltd
in
inc
je
mull
mov
mov
jns
cmp
mov
jle
xor
sub
lods
push
add
sbb
push
add
and
test
in
mov
pop
arpl
mov
mov
fcom
aas
pop
mov
jnp
cmp
pop
push
xchg
ss
jg
and
lods
jle
dec
xchg
mov
or
arpl
mov
or
ljmp
add
fwait
pop
mov
addl
jl
iret
jmp
and
mov
lods
aaa
aas
nop
sub
mov
out
mov
insl
mov
xchg
jge
movsb
imul
xchg
pop
mov
ljmp
pop
mov
fists
adc
push
fistpll
jne
rclb
add
or
das
push
inc
addr16
adc
adc
in
sbb
sub
sti
fisttps
fdivrl
aam
fstcw
cltd
and
add
pop
add
loopne
scas
add
lds
mov
inc
pop
lods
cwtl
fsub
xor
push
or
adc
xchg
mov
popa
pop
imul
lea
jge
and
lods
push
xchg
mov
and
cmp
add
dec
loop
and
mov
ret
loopne
jnp
push
xchg
add
add
pop
movsl
dec
fnstcw
xchg
mov
adc
mov
and
lods
dec
inc
cmc
jnp
rorl
in
mov
imul
inc
jle
inc
mov
xor
adc
and
bound
cmp
push
mov
jnp
lret
jmp
repz
inc
jge
mov
test
sub
inc
add
push
jbe
lods
add
and
push
jb
outsl
pop
fwait
and
stos
or
or
jb
xchg
lret
xor
out
sbb
inc
leave
pop
repnz
imul
mov
cmc
jmp
mov
add
hlt
fsubrs
out
adc
mov
lods
pop
dec
jns
sahf
cmp
adc
push
xchg
jno
icebp
out
ja
sub
mov
pop
out
xchg
es
in
imul
or
cmp
aad
cmpsl
mov
sub
in
sub
xor
jnp
ds
inc
jle
mov
xchg
outsb
ljmp
xchg
fidivrl
rcrl
loop
pop
int3
add
lods
out
fwait
mov
jmp
movsb
scas
dec
pusha
push
push
nop
dec
jae
inc
int
js
scas
add
cld
xor
lcall
and
rclb
mov
outsl
push
sbb
xchg
lret
or
cmpsl
lret
push
cli
repnz
push
outsb
xchg
lods
push
xchg
cwtl
andb
xor
jmp
in
sbb
mov
pushf
pop
cltd
sbbl
jp
xchg
repnz
int3
push
sar
or
xchg
sub
out
sub
mov
mov
pop
scas
jg
test
js
jge
jl
movsb
nop
sarl
jne
cmp
push
fisubrs
sbb
cmp
mov
es
aam
data16
cmp
ret
and
or
push
and
mov
lahf
popa
or
xchg
and
inc
sbb
sbb
push
mov
push
js
movsl
inc
mov
xchg
add
add
mov
rorl
mov
in
mov
bound
add
add
jmp
lret
aad
cmc
adc
sub
xchg
dec
cmp
and
mov
and
bound
notl
xor
das
pop
fidivrl
aaa
mov
sbb
mov
nop
jp
add
pop
cmp
sbb
cmp
addr16
in
leave
mov
mov
lret
jae
inc
mov
inc
sti
leave
cmp
inc
pop
rclb
push
ss
mov
ret
or
mov
mov
outsb
add
call
test
pop
mov
pop
push
scas
sub
sbb
pushf
mov
mov
out
out
mov
mov
arpl
hlt
icebp
stos
mov
jg
mov
frstor
sub
or
loop
adc
push
and
cwtl
sub
rol
jmp
add
dec
cmpsl
mov
fwait
xchg
sahf
enter
sub
pushf
xchg
xchg
xchg
push
ljmp
xchg
fildl
enter
sub
inc
add
mov
out
sbb
push
idivb
mov
insl
add
xor
and
out
and
inc
repz
push
out
lods
jmp
pop
cmpsb
filds
pop
fdivrl
cmpsl
or
pop
movsb
out
mov
mov
mov
push
sbb
mov
imul
rcr
in
lret
cmpsl
repnz
rcrb
cmp
lock
pop
scas
inc
arpl
push
mov
mulb
fcmovnu
imul
adc
jb
loope
add
aam
dec
sub
mov
stc
punpckldq
test
add
or
lods
int
lock
add
cld
fisubl
or
dec
inc
mov
mov
ret
push
pop
adc
ret
shrb
inc
or
or
mov
int3
dec
pop
dec
imul
jge
icebp
test
jbe
xchg
aam
pop
lods
inc
test
adc
jns
sbb
xchg
lea
cld
out
dec
gs
or
pop
mov
cmpsl
adc
into
jecxz
or
bound
jp
hlt
in
test
ret
js
mov
xor
cmpb
cld
sahf
icebp
pop
xchg
aas
add
jecxz
mov
mov
je
cmpl
or
mov
adcl
mov
out
sub
loopne
or
or
jno
jp
mov
repz
rcrl
adc
xchg
add
inc
popf
fbstp
test
pusha
add
mov
adc
repz
lds
mov
cltd
xchg
aam
add
fstp
les
cld
and
pop
enter
aad
push
or
fldenv
into
cmpsl
xor
mov
ds
loope
lret
pop
out
mov
adc
sbbb
pop
outsb
lods
mov
out
pop
add
iret
dec
loope
dec
jge
fcmovnbe
or
pop
and
jne
mov
das
ds
imulb
lds
cmp
mov
add
out
pusha
inc
mov
sub
lea
int
push
jmp
adc
and
mov
jb
mul
sbb
je
cmpsb
inc
inc
mov
push
outsb
out
mov
xchg
pop
jo
in
scas
lea
mov
adc
pop
lret
mov
pusha
out
in
rol
mov
push
ret
or
not
rclb
insl
mov
or
sub
movsb
lods
sbb
cld
jne
dec
jmp
mov
out
lods
imul
loop
sub
push
push
sub
clc
aaa
xchg
imul
mov
ds
std
cmp
bound
push
push
stos
or
inc
stos
icebp
adc
jmp
inc
xchg
cli
out
imulb
push
fsubrs
jns
test
cmpsb
adc
mov
or
and
stc
int3
cs
call
in
add
dec
outsl
or
sbb
fstl
rorl
and
scas
pop
outsb
jge
jae
pop
xor
pushf
pop
imul
push
or
ljmp
iret
iret
pop
lea
pop
sub
ljmp
mov
jecxz
inc
jge
movsb
pop
jae
movl
sti
xchg
mov
mov
enter
and
or
xor
push
dec
mov
or
sbb
int3
xor
daa
xchg
rorb
mov
mov
leave
testb
rcrl
filds
pop
xchg
pop
xor
scas
cmpsb
pop
cmp
add
test
outsl
inc
xchg
fimull
adc
test
add
icebp
fwait
jnp
adc
mov
cmp
aad
shlb
pushf
jnp
jge
cmc
js
cmp
mov
les
icebp
out
pop
addl
lods
pop
incb
rcrb
sti
test
adc
jmp
mov
gs
paddsb
outsl
adc
hlt
mov
fisubl
aad
je
std
lock
dec
in
push
xchg
xchg
es
insb
add
pop
arpl
lret
clc
movsl
lea
push
data16
fisubl
notb
inc
pop
cmp
xlat
xor
mov
loop
sbb
push
out
pop
out
sti
xor
dec
cmp
addr16
add
push
push
lods
xchg
xchg
jbe
sub
fisubrs
and
shrb
pop
and
push
add
or
add
pushf
das
inc
hlt
mov
or
push
mov
iret
sti
test
sti
add
mov
jo
ljmp
push
mov
cmp
xchg
inc
sub
jne
add
xchg
pop
xchg
sub
popa
lds
mov
insl
imul
sbb
push
or
mov
add
cmp
pop
cld
movsl
dec
push
fmull
inc
pop
lahf
lret
outsb
sarb
sub
pop
mov
pop
pop
sub
ds
insb
in
inc
clc
push
dec
dec
ret
xchg
ss
jl
mov
mov
jge
jb
ss
cmp
xchg
in
add
push
xchg
dec
xchg
fisttpl
imul
stos
bound
push
dec
fldl
sub
stos
and
adc
fwait
xchg
cwtl
rcll
mov
lods
andb
mov
hlt
in
or
dec
cli
in
xchg
in
cmp
xchg
ret
je
inc
xchg
push
loope
icebp
xor
add
adc
in
hlt
add
adc
popa
movsb
jno
inc
test
mov
inc
xchg
push
loope
icebp
xor
add
adc
in
hlt
add
adc
popa
movsb
jno
inc
test
mov
inc
xchg
push
jno
icebp
xor
add
adc
in
hlt
icebp
les
shlb
popa
mov
cmpb
fildl
push
loope
loope
roll
and
into
pop
stos
les
mov
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
out
lods
pop
popf
outsb
lea
setle
std
inc
mov
aam
out
sub
lahf
pop
mov
lods
pop
lods
outsb
lea
push
in
push
int
aaa
into
sub
jge
insb
sahf
pop
scas
dec
mov
test
jle
push
hlt
push
lds
fidivrl
cmp
mov
push
enter
lret
and
int
lods
sarl
adc
out
sub
aad
aam
loope
or
xchg
jmp
push
inc
jp
dec
and
add
repz
adc
hlt
and
adc
jmp
sahf
cmp
mov
shr
pop
lods
sahf
aam
dec
mov
iret
cmc
aad
aas
into
rcr
dec
call
sub
insl
ret
mov
sub
psubb
xor
xor
sbb
sahf
jle,pt
les
sub
ds
adc
mov
mov
pop
pop
lods
dec
rcl
add
inc
xchg
cmp
into
rcr
loop
or
mov
scas
dec
inc
jge
lods
pop
popf
outsb
lcall
cs
and
xor
mov
pop
scas
push
clc
into
dec
enter
jmp
push
dec
mov
outsl
mov
or
cmp
sub
mov
es
sbb
mov
mov
aas
stos
sub
lods
sbb
push
or
setg
test
ds
out
or
sahf
pop
scas
dec
mov
popf
outsb
lea
push
in
push
int
cmp
out
or
sahf
pop
scas
dec
mov
les
in
sar
icebp
xlat
pop
fucom
test
pusha
outsb
test
pop
jbe
jnp
cld
adc
outsb
stc
and
enter
sbb
call
addr16
je
mov
ja
andb
xchg
pop
test
add
gs
adc
enter
insl
sahf
push
or
pop
mov
mov
je
adc
dec
inc
in
gs
mov
mov
pop
pop
jecxz
mov
mov
add
and
gs
add
xchg
mov
cmp
inc
add
rclb
add
clc
fidivrl
insl
mov
fstpl
imul
jp
push
mov
or
out
movl
and
fadd
fnstcw
arpl
js
jecxz
mov
sub
cli
xor
mov
jle
jno
ljmp
icebp
dec
aaa
dec
outsl
and
xchg
jb
jmp
xchg
sub
xchg
jmp
jmp
mov
in
cmp
aad
loopne
ljmp
pop
lds
aad
shrl
dec
sarl
loopne
sbb
inc
mov
xor
icebp
pop
or
rcrl
dec
jne
push
insb
xchg
enter
pop
insb
adc
gs
lea
add
aas
mov
push
xor
sub
cwtl
push
add
into
ret
sub
lret
xchg
insl
roll
fidivrl
sarb
sbb
pop
imul
or
lds
cli
jp
ret
ja
dec
cmpl
movsb
or
sub
fldl
dec
and
xor
fisubl
jge
icebp
les
movsl
mov
flds
cli
mov
lds
inc
cmp
dec
pop
bound
icebp
std
sub
cmp
arpl
lods
ljmp
adc
ret
sub
aad
lahf
or
cltd
xchg
pop
inc
push
push
xchg
stos
loopne
mov
xchg
testl
cmpsl
xchg
mov
scas
sbb
mov
xor
xlat
cmp
fs
cli
sub
ds
outsb
dec
sbb
es
xor
push
icebp
inc
push
pop
xchg
jecxz
jge
aaa
and
push
pop
in
mov
sbb
jg
dec
imul
fdivrp
sub
mov
es
in
enter
sub
mov
sbb
or
push
jns
aad
jecxz
inc
imul
xchg
jecxz
in
inc
inc
mov
dec
in
hlt
xchg
xchg
lock
les
test
fdivrs
aaa
inc
and
pop
cmp
xchg
and
addr16
shr
pop
scas
sub
dec
insl
repnz
call
push
or
jl
addr16
xor
shl
mov
leave
lahf
add
aad
mov
loop
mov
inc
push
lods
outsl
test
cmp
mov
sub
imul
outsb
sbb
repz
add
push
mov
cltd
mov
push
in
rcrb
outsb
lcall
sub
or
lcall
adc
in
aad
sbb
pop
shll
pop
mov
fadds
out
dec
push
sbb
andl
test
pop
loope
test
in
or
xlat
sub
dec
sbbb
sbb
or
jg
mov
arpl
sbb
adc
lret
sbb
les
les
nopl
mov
arpl
shr
loope
pop
and
js
adc
pop
pop
mov
jp
shlb
mov
sbb
fldcw
cltd
pop
dec
iret
mov
jge
repz
add
pop
fildll
jno
fcomp
push
xchg
aas
inc
mov
pop
loop
lcall
into
xchg
fbld
pop
js
sarl
or
pusha
aam
int3
push
sbb
mov
imul
addr16
sub
xchg
pop
stos
scas
sti
xor
ret
cmp
loopne
stc
call
fdiv
mov
add
pop
adc
dec
loope
sahf
mov
pop
cmpsl
jmp
outsb
loope
mov
adc
insb
out
xlat
inc
xchg
sub
push
xchg
sbb
and
inc
sbb
mov
pop
fstpl
bound
mov
sahf
sbb
fsubr
aad
movsb
bts
jle
push
jle
push
fmulp
lock
lahf
sarl
jecxz
aas
push
xchg
dec
lret
dec
mov
stos
mov
stc
cld
insl
lock
aaa
arpl
jecxz
clc
adc
cmp
pop
cmp
jge
pop
addb
jne
daa
jae
into
cld
push
and
push
dec
lods
add
jne
pop
xchg
push
inc
cmpsb
fadd
mov
dec
loop
or
pop
loope
dec
mov
inc
test
sti
push
xor
pop
pop
inc
pop
fstl
jnp
int3
stos
int
adc
or
sbb
mov
fdivs
or
jb
sets
mov
jp
mov
cmp
cmp
mov
aas
mov
xor
xor
pop
mov
inc
jmp
jg
mov
push
pop
push
fucomip
fyl2x
jnp
lret
scas
cmp
fistps
imul
insl
aaa
jge
dec
outsl
or
out
stos
cmp
jmp
push
mov
sti
jns
ljmp
lock
add
push
pusha
or
fidivrs
lahf
js
es
popa
lcall
pop
push
stos
sar
clc
mov
jne
imul
push
hlt
push
or
aad
fcoms
data16
and
ss
out
bound
mov
arpl
mov
aad
xor
cmc
ja
sti
dec
mov
mov
dec
push
faddl
inc
xlat
push
cmp
xchg
call
pop
bound
lea
sti
lcall
jg
xor
outsb
and
lret
out
lods
fsts
shll
insb
gs
cmp
xor
pop
imul
jb
inc
cli
sahf
cld
sbb
cwtl
mov
dec
push
and
jmp
aam
andl
pushf
mov
inc
fld
xchg
mov
sub
icebp
dec
out
repnz
xchg
sti
jge
add
mov
xchg
xchg
test
sbb
pop
adc
pop
jne
push
jb
mov
cmpb
mov
push
fidivl
or
mov
test
popf
mov
pop
sub
inc
out
ss
subl
mov
or
loop
sub
pop
inc
pop
pop
jnp
mov
and
inc
pop
xchg
out
in
mov
cmp
lret
loop
xor
cmp
popf
sbb
xchg
ficomps
fcompl
scas
sbb
pushf
push
push
or
pop
das
inc
lea
mov
xchg
nop
sub
mov
push
rcll
pop
test
cmpsl
loopne
stc
andb
je
inc
jl
mov
pop
cld
das
or
inc
or
jnp
ror
jo
shrb
xor
ss
ljmp
add
ljmp
pop
jg
dec
stos
ret
push
loope
rep
mov
adc
inc
fistpll
jns
sbb
mov
dec
dec
fstpt
insb
imul
es
xor
test
shlb
xor
sub
dec
jnp
sub
jae
xchg
inc
cmp
roll
movsl
cmpsl
xchg
and
xor
addr16
cmp
cmp
add
xlat
int3
test
or
lods
mov
in
mov
cmc
jmp
pop
pop
push
mov
xchg
xchg
inc
test
xchg
aad
inc
out
test
rorb
icebp
test
adc
repz
jl
jg
cld
and
add
or
and
lcall
mov
std
xchg
inc
cmpsl
pop
mov
popf
xchg
fstps
loopne
add
mov
mov
mov
mull
xchg
sbb
dec
ss
aad
inc
jns
sbb
mov
lcall
adc
mov
xchg
mov
test
sbb
fs
inc
sub
shlb
dec
out
pop
scas
popf
cmp
push
fildll
out
dec
pop
dec
add
sbb
ficoml
in
jecxz
mov
and
cmpsl
fmuls
cld
mov
push
ret
jle
xor
hlt
test
bound
or
xor
fst
aam
in
jb
dec
fnstsw
test
mov
cltd
dec
xchg
jnp
mov
adc
nop
lods
cmp
sbb
ljmp
rorb
shrl
fistpll
dec
fldenv
inc
fidivl
jg
push
lcall
jae
fs
add
jecxz
je
jecxz
stos
ss
orl
aaa
sub
mov
ljmp
cmp
adcl
or
jmp
add
in
int
push
dec
jbe
fdivl
jno
and
mov
dec
push
in
lret
mov
mov
out
xchg
gs
xor
popa
push
cwtl
sahf
dec
or
jg
xchg
enter
fcom
add
xor
je
dec
imul
add
add
and
pushf
mov
push
pop
sub
xchg
xorb
and
mov
jmp
int3
pop
ljmp
in
mov
or
test
fwait
or
mov
sahf
popf
cmp
sub
sub
out
aad
jle
int
scas
pop
xchg
cli
and
lea
xchg
adc
pop
pushf
mov
pop
mov
and
jns
cmpb
mov
lds
mov
mov
adc
imul
roll
roll
dec
adc
aaa
outsl
rcrb
bound
outsb
dec
jb
jae
mov
push
mov
mov
mov
aas
lock
icebp
sbb
add
add
mov
rol
cmp
mov
cmc
cwtl
pop
lea
aas
jg
push
inc
pusha
dec
or
mov
dec
fsts
clc
and
mov
loop
dec
push
push
in
add
mov
sar
xor
add
cmp
mov
push
jecxz
bswap
cmp
mov
xchg
sbb
push
xlat
push
test
in
lods
dec
adc
inc
and
cmp
push
js
les
inc
fisubs
cmp
xchg
movsl
lahf
nop
scas
fnsave
or
dec
sbb
mov
dec
add
mov
jae
dec
test
dec
xchg
sub
aam
jno
fwait
xchg
xchg
or
mov
fsub
pop
mov
ffreep
jo
mov
insb
popa
imul
inc
fidivs
shl
rcr
cwtl
and
cmovno
js
in
sub
iret
mov
dec
dec
and
in
loopne
cmp
test
stc
rorb
rcr
or
pop
inc
fisttpll
jae
and
push
lret
call
jl
pop
inc
in
dec
sub
ja
adc
dec
pusha
jmp
enter
mov
sbb
xlat
icebp
iret
js
add
xor
stos
sti
shr
inc
dec
fwait
mov
faddl
in
mov
in
test
adc
leave
push
in
data16
xchg
daa
push
fs
aam
or
ja
sbb
repnz
ljmp
je
xchg
mov
cmpl
lahf
pop
mov
outsb
data16
and
mov
sbb
testl
test
in
insl
push
es
mov
ljmp
int
and
call
push
jmp
subl
ficoms
add
mov
cmp
outsl
cmp
out
scas
sbb
jo
jbe
sbb
sti
popa
and
cmc
inc
inc
mov
push
or
outsl
mov
lds
daa
sarb
add
mov
movsb
xchg
pop
jne
mov
jb
push
add
xchg
push
call
data16
fsubrs
or
push
jg
xor
xor
push
fs
jmp
in
xchg
dec
push
xchg
mov
cmp
leave
pop
mov
ret
inc
add
std
adc
in
cwtl
pushf
sub
ret
xchg
or
addr16
fxch
jmp
push
mov
cltd
xchg
push
orl
ljmp
or
sbb
mov
add
adc
cmp
in
push
into
inc
ret
sub
jp
xor
push
hlt
dec
aaa
out
pop
sub
fstl
lcall
rcll
xchg
and
mov
bound
fs
fidivrs
xchg
mov
decb
mov
lret
cmp
or
roll
fsts
clc
push
das
jo
sub
mov
repnz
or
push
leave
sbb
xchg
xor
ds
and
mov
mov
inc
add
sti
mov
ljmp
xor
adc
inc
addl
fwait
enter
out
or
lods
rorl
jge
loop
fwait
ds
dec
mov
clc
sub
jae
cli
xchg
imul
jno
jp
hlt
sbb
shlb
pushf
lock
mov
add
bound
int3
hlt
dec
insl
push
pop
int3
ret
fbld
sti
pop
inc
mov
mov
adc
shlb
adc
fisttps
cs
mov
pushf
pop
test
pop
mov
jne
fiadds
cltd
ret
data16
ljmp
jb
test
fbld
scas
adc
xor
fmul
push
outsl
push
repnz
xchg
mov
adc
or
fcmovnbe
add
shrl
inc
cmp
pop
sahf
xor
mov
hlt
xor
ja
add
jg
into
jg
mov
and
and
jo
mov
int3
pop
dec
adc
or
add
jle
pop
lock
ficompl
pop
add
lahf
dec
ret
pop
xchg
scas
rol
stos
out
ror
inc
push
daa
mov
add
sbb
and
push
js
or
stos
xor
cmp
ret
ret
pop
lret
dec
ja
cmpsb
mov
lahf
push
jmp
aam
inc
hlt
xor
jbe
inc
lahf
adcl
idivb
mov
and
adc
iret
lcall
adc
adc
popa
xchg
dec
xchg
cmp
adc
or
call
into
sarb
in
inc
xchg
int3
mov
and
aad
fcmovb
inc
out
and
test
mov
cmp
lds
into
cs
mov
or
stc
push
mov
dec
jecxz
mov
pop
jo
out
push
inc
ficomps
push
rolb
rolb
out
arpl
mov
pop
push
push
inc
push
adc
lock
pop
xor
mov
shrb
xor
mov
cmp
or
dec
sbb
dec
inc
ljmp
sahf
imul
add
jmp
inc
or
xchg
js
jl
in
scas
frstor
pop
mov
or
adc
pop
fisubrs
data16
mov
mov
inc
jno
push
and
pop
ja
movsl
or
les
cmpsl
xchg
pop
pushf
jmp
cli
js
push
push
mov
imul
out
in
add
jbe
pop
or
lods
movsb
scas
cmp
dec
xchg
push
dec
dec
negl
mov
in
or
adc
pop
add
mov
sub
pop
adc
adc
and
pop
jecxz
fistps
into
xchg
addr16
les
xchg
sbb
push
mov
push
aas
sti
mov
cli
xor
xorb
into
fnstcw
pop
add
mov
fmuls
call
mov
addr16
popa
pop
xchg
push
or
cmc
jbe
mov
insb
bound
lcall
mov
jecxz
loopne
jns
lret
icebp
jae
loope
daa
jge
adc
xchg
scas
jmp
and
pop
add
push
xchg
jle
mov
cld
inc
xchg
mov
xor
ljmp
mov
ljmp
inc
jne
lcall
mov
push
inc
js
adc
mov
movsl
mov
mov
dec
xchg
ljmp
andl
lahf
mov
cmp
lock
arpl
outsb
sbb
fisubrl
sub
jno
sbb
cmp
xchg
into
fs
cli
aad
ss
jg
ret
loop
adc
loope
pop
sbb
xor
mov
adc
aas
sbb
sbbb
sahf
sahf
add
cmpsl
rclb
pop
je
mov
xchg
cmc
addb
and
negl
pop
dec
xchg
sbb
test
adc
add
push
lret
int
std
sahf
mov
jge
test
int
std
dec
cmp
dec
ss
mov
imul
mov
jge
dec
sbb
mov
push
leave
adc
sarl
sbb
jp
pop
loop
push
xlat
push
xchg
ss
es
cmp
cmp
imul
cmp
in
shl
fsubrs
mov
out
jp
fwait
out
outsl
mov
mov
cltd
xchg
fisttpll
sub
test
or
lret
cltd
movsb
outsb
adcb
hlt
xadd
cmp
stc
pop
leave
mov
fnstenv
push
jg
jbe
dec
out
repz
sbb
pop
clc
mov
popa
sarl
data16
enter
imul
neg
push
mov
ret
fstps
arpl
cmp
add
and
sbb
or
sbb
daa
sahf
enter
loopne
xor
stos
sbb
cmp
push
bound
push
imul
mov
inc
push
lock
mov
cmp
sbb
xor
inc
imul
dec
cmc
add
sub
pop
aam
jg
ror
mov
cmp
das
das
cli
and
or
jge
cwtl
add
mov
mov
mov
pop
movsb
in
out
or
mov
xor
stos
jno
lock
out
iret
xchg
cmpsb
jno
sbb
xor
lea
jmp
and
dec
push
lods
insb
sbb
mov
sbb
fdivrs
sbb
adc
xor
dec
push
addb
mov
movsl
scas
xlat
and
cmp
arpl
jo
xchg
aaa
push
pushf
fsubr
pop
mov
insl
sub
mov
sbb
ret
and
cli
pop
leave
mov
xor
jne
xor
inc
addr16
sbb
mov
jne
sub
sbb
mov
lret
push
sbb
cmpsl
test
scas
pop
push
pusha
mov
pop
adc
in
icebp
dec
out
test
mov
repz
cmp
fdivs
dec
leave
push
sbb
out
jns
add
jmp
testl
outsl
pusha
cs
mov
pshufw
int
jbe
leave
push
push
movsb
rcrl
pop
das
fnstcw
mov
movsl
mov
repnz
push
add
jp
sub
ror
outsl
cmc
es
orb
test
or
call
inc
jnp
mov
add
mov
ss
sbbb
out
movl
inc
and
test
mov
mov
jb
rorl
mov
cli
push
stos
dec
mov
loopne
or
bound
in
mov
daa
es
movsl
and
incl
push
or
adc
ljmp
fnstsw
rcrb
pushl
lds
in
icebp
pop
sar
sub
jmp
pop
lds
test
jmp
add
pop
xlat
add
pop
and
out
rorb
inc
sbb
rorb
sbb
stos
inc
test
in
xchg
mov
xchg
jmp
add
test
pop
outsl
sub
imul
addr16
std
fdivrp
mov
arpl
sub
mov
testl
mov
bound
mov
mov
test
sub
cmp
iret
adc
mov
or
ja
add
movsb
jmp
call
call
test
dec
ret
cmpsb
jl
xchg
sub
cli
xchg
pop
pop
sbb
dec
xchg
into
andl
adc
mov
cmpl
loope
call
lds
add
mov
mov
mov
mov
lock
xorb
daa
out
cmp
ficompl
stos
and
jb
pcmpgtw
xor
jmp
inc
mov
mov
and
iret
add
fdivs
in
rcrb
or
dec
lds
adcb
pusha
push
push
int3
jmp
adc
addr16
mov
stos
fwait
pop
add
fxch
jmp
jg
inc
push
mov
or
adc
adc
sub
into
dec
mov
inc
std
and
orl
push
jbe
cmp
xlat
and
add
and
popa
pusha
jne
out
imul
ret
int
enter
inc
xor
mov
outsb
lea
push
in
push
int
cmp
out
or
sahf
pop
scas
dec
mov
popf
outsb
lea
push
in
push
int
cmp
out
or
sahf
pop
scas
dec
mov
popf
outsb
lea
push
in
push
int
cmp
out
or
sahf
pop
scas
jl
mov
pop
stos
outsb
lea
push
in
push
pop
cs
inc
into
shlb
or
popa
mov
insl
out
dec
pop
mov
sub
fs
push
int
fnsave
lods
cmp
lea
popf
imulb
jge
dec
pop
mov
cmpsb
cmp
jbe
popfw
push
int
fnsave
lods
daa
mov
imulb
jge
dec
pop
mov
cmpsb
cmp
jbe
inc
std
es
push
rclb
outsl
popf
subb
and
fidivrs
or
cmc
pop
cwtl
inc
pop
mov
test
sbb
sbb
sub
cmp
push
outsb
pop
lret
add
fsubs
push
inc
fstl
or
xor
mov
fyl2x
enter
inc
or
lods
jge
jb
adc
js
adc
sub
cmp
xchg
jmp
mov
mov
inc
out
jb
adc
enter
sub
sub
or
stos
int
mov
jmp
sti
push
sub
cmp
js
std
xor
sub
sarb
add
xor
dec
pop
mov
cmpsb
cmp
jbe
data16
push
int
fnsave
lods
es
xchg
add
xor
inc
leave
cmp
push
mov
mov
int3
addr16
jae
jbe
subb
mov
xchg
shll
pop
sarl
sbb
sub
jg
insb
int
and
cs
and
cmpsb
cmp
jbe
data16
push
int
fnsave
lods
es
imulb
jge
dec
pop
mov
cmpsb
cmp
jbe
data16
push
int
fnsave
lods
es
imulb
xor
mov
int3
je
cmp
or
or
js
lcall
enter
fsubl
out
es
imul
fmul
mov
mov
mov
and
andb
xor
leave
mov
dec
pop
inc
ja
fsts
push
dec
mov
jns
adc
sub
xor
push
out
and
fimull
sarl
test
inc
and
jbe
cmp
push
mov
sub
nop
cmp
gs
mov
mov
or
inc
ss
mov
movntq
out
sbb
and
add
in
out
sub
nop
xchg
or
add
add
orb
out
mov
jl
push
int3
out
notb
xchg
sub
ret
push
icebp
cmp
sbb
fwait
cmp
sub
jae
jnp
sbb
test
mov
mov
xchg
xor
shr
leave
lcall
jecxz
les
cmpsl
and
jg
icebp
in
inc
out
fnstenv
rep
jl
xchg
dec
sti
inc
add
clc
test
dec
fs
push
and
push
sti
add
mov
pop
pop
jl
mov
faddl
add
adc
jnp
push
mov
push
daa
add
in
popa
dec
shl
or
lahf
sub
nop
cmpsb
dec
pop
rolb
clc
in
mov
pop
push
pop
cwtl
add
arpl
add
xchg
dec
push
dec
lret
rcrb
pop
rcll
pop
lahf
pop
in
cmc
lahf
cmp
jbe
ret
adc
js
iret
rclb
popa
inc
lahf
xor
mov
adc
aaa
test
adc
aaa
stc
stc
mov
and
mov
ror
xor
cmp
sar
mov
and
insb
pop
sahf
imul
arpl
cmp
mov
cmp
sti
imul
xchg
sbb
sub
jns
mov
adc
divb
cmp
or
repnz
mov
call
push
in
push
ja
jb
push
adc
shll
xor
out
daa
out
dec
insb
loop
inc
push
inc
aas
cli
arpl
popa
pop
xchg
inc
mov
clc
dec
jp
js
pop
sbb
mov
sti
push
mov
pushf
xlat
xchg
jp
sbb
sbb
test
and
das
push
xor
jne
push
incb
adc
mov
adc
test
ja
outsb
mov
aaa
test
je
popf
jl
out
fdiv
repz
jg
lret
out
dec
jl
inc
xchg
popf
pop
xor
dec
jp
scas
out
outsb
sahf
jecxz
pop
dec
out
jnp
pop
mov
addr16
bound
pop
add
xor
scas
lock
inc
mov
std
clc
in
mov
outsb
pop
mov
push
inc
add
cmp
mov
testb
mov
icebp
aad
outsl
jl
je
mov
int
lock
mov
xchg
jb
push
es
adc
mov
sub
lods
js
push
data16
inc
mov
pop
push
sub
push
pop
mov
shl
mov
mov
rcrl
insl
in
lret
mov
mov
add
sbb
lret
es
push
loopne
and
stos
std
xchg
lret
iret
push
dec
test
punpckhbw
rcr
sbb
xchg
add
int
in
fbld
inc
pop
fldt
xchg
mov
push
xorps
pop
js
es
daa
push
inc
fmuls
dec
testl
nop
std
or
lcall
sbb
stos
sti
test
sub
mov
lahf
inc
push
cs
pop
push
cmp
adc
stc
in
pop
cmp
testb
pop
mov
or
divb
imul
mov
or
adc
inc
jmp
dec
loope
mov
add
ret
xchg
add
sbb
jecxz
push
stc
bound
outsb
push
lahf
pop
mov
insl
lods
outsl
add
push
sbb
add
adc
jg
mov
arpl
test
stos
push
dec
pop
mov
xchg
out
sub
push
sar
mov
mov
addr16
jae
arpl
lds
sets
adc
cld
mov
mov
fsubl
cwtl
and
sbb
aad
rclb
lret
in
mov
or
pop
sar
ffreep
mov
mov
sub
mov
shll
incb
leave
mov
sbbb
stos
mov
fcoms
aad
pop
stc
inc
shrb
push
sub
je
sbb
adc
in
xor
out
mov
xor
scas
movsb
out
cmpsl
mov
xor
enter
aam
mov
jb
add
pop
ds
cmp
popf
mov
mov
cltd
cltd
and
xchg
sub
and
std
inc
pop
or
push
orb
into
aad
or
test
push
lock
ja
cli
add
inc
mov
jo
xorb
cmp
adc
mov
lret
gs
ret
imul
dec
negl
gs
jns
add
out
sub
enter
loope
stos
or
int3
and
sub
adc
or
xlat
enter
jg
mov
push
dec
js
sub
ret
movsb
fcmovnu
add
icebp
mov
pop
sbb
adc
repz
popa
mov
cmp
aad
testb
mov
push
dec
loopne
cmpl
dec
dec
aad
and
adcl
mov
add
mov
and
cmpsl
imul
wrmsr
cmp
ljmp
mov
test
pop
or
xchg
divl
mov
or
jnp
int3
inc
test
andb
mov
mov
lock
dec
mov
loop
pop
lcall
lods
mov
push
cmp
add
sub
out
push
jb
lret
and
ljmp
add
test
ds
dec
xchg
test
push
fisubrs
xor
insl
pop
lea
pop
pop
push
mov
xchg
xor
jle
mov
lock
mov
sbb
loop
in
test
sub
cmp
js
mov
push
inc
sub
adc
imul
mov
fwait
or
xor
bound
jmp
xchg
xchg
cmp
loope
enter
mov
push
cmp
shrb
lods
test
push
mov
sbb
out
test
call
pop
testb
out
lods
pop
leave
push
cmp
sub
cmc
lret
dec
enter
stos
ret
outsb
test
adc
lcall
iret
scas
mov
nop
nop
test
mov
cmp
mov
sbb
sub
pop
pop
xchg
and
movsl
mov
outsb
out
cmpb
lret
adc
fildl
cli
pusha
cwtl
mov
test
das
lahf
mov
out
push
push
enter
cmp
add
shr
insl
or
scas
pop
mov
mov
rorl
xchg
mov
or
jbe
mov
and
fwait
mov
cmp
cmp
adc
push
int3
sub
push
loopne
cmp
lcall
clc
jb
sbb
outsl
shll
insb
std
aas
bound
fnstsw
repz
fsubp
adc
out
ret
stos
adc
testl
mov
imul
cmpsb
pop
or
enter
cmpsl
fs
inc
pop
jbe
xor
leave
mov
xchg
repnz
ja
and
xabort
sbb
push
call
scas
in
mov
mov
out
loop
roll
aam
pop
ds
repz
adc
push
mov
adc
pop
push
sub
xor
xchg
nop
mov
pop
add
mov
in
jl
sub
inc
xor
xchg
xchg
xchg
mov
shll
mov
roll
popf
cmp
ljmp
into
xorl
sub
lock
mov
idivl
xchg
into
push
push
in
cli
in
outsb
movl
ret
jbe
xchg
xchg
pop
jle
aad
pushf
adc
je
or
cwtl
ds
out
sbb
retw
cmp
pop
ja
lock
adc
jmp
jbe
gs
aam
pop
ljmp
xchg
out
xor
pusha
dec
lahf
cld
xor
and
stc
ret
and
or
or
or
popa
sti
test
mov
int3
icebp
shll
fisubrs
rcrl
dec
mov
mov
pop
mov
out
and
jle
fwait
cwtl
leave
scas
fwait
cmp
or
cmp
rcr
std
inc
dec
insb
or
out
or
shlb
popa
push
int
mov
cli
dec
push
stos
sub
out
mov
mov
or
jnp
and
jno
push
xor
sbb
or
inc
xor
mov
mov
pop
mov
in
jae
fsubrl
sbb
and
jecxz
mov
enter
bound
dec
xlat
loopne
jmp
aad
inc
mov
sub
or
jbe
ds
adc
or
leave
mov
cli
jg
jecxz
cwtl
loopne
mov
xchg
mov
bound
push
outsb
and
add
sub
andl
fiaddl
jp
pop
out
mov
scas
mov
and
jb
xchg
mov
adc
pop
mov
jg
popa
rcll
sbb
notl
mov
fbld
cmc
mov
push
push
mov
mov
or
test
fsubs
cld
xchg
sub
ss
pop
iret
push
cli
leave
push
jle
rcr
cwtl
jmp
jbe
add
or
fs
mov
movsl
pop
jge
outsb
dec
mov
call
sub
lds
xchg
push
cmpsl
std
sub
mov
dec
fidivl
fcomi
jmp
in
nop
sarl
sub
xor
nop
es
pushf
jne
nop
and
sahf
int
sti
popf
stc
test
cwtl
clc
push
pop
stos
xchg
pusha
int3
or
mov
mov
adc
adc
inc
shl
call
jmp
inc
dec
in
jbe
js,pn
divb
xor
xor
dec
push
lock
inc
add
div
jae
mov
stc
and
pop
rolb
mov
test
push
lods
js
insl
jmp
rorb
outsl
push
jge
mov
jb
dec
jae
lcall
rcrb
bound
pop
scas
ss
dec
mov
and
rolb
xchg
call
jl
mov
subl
jle
sbb
xchg
les
loop
sub
icebp
mov
pusha
jb
lahf
dec
movsb
xchg
and
lret
fsubrs
daa
cli
out
pop
add
scas
lcall
xchg
cwtl
div
inc
test
cmp
mov
aad
aas
or
xchg
xchg
cmp
pop
push
push
mov
es
imul
mov
xchg
cmp
lock
fbld
jne
xchg
cmp
decl
sbb
mov
mov
pop
push
shl
loope
in
clc
ret
addr16
inc
test
cmp
or
loop
jmp
inc
mov
xchg
push
cmp
mov
jmp
xchg
in
inc
mov
mov
outsl
dec
test
dec
xchg
sbb
xchg
sub
scas
inc
mov
mov
push
shlb
cmc
outsb
add
cwtl
push
mov
sahf
js
movsl
and
ja
loope
push
mov
mov
add
rorb
clc
adc
test
jg
sbb
jb
mov
ficoml
adcb
sbb
addss
jge
push
sbb
test
sub
jbe
push
leave
sbb
mov
add
sbb
jg
fcmove
test
pop
shlb
imul
sahf
mov
bnd
push
cmp
inc
jl
fidivl
cmp
fistpll
fsub
xchg
movsb
std
ret
inc
sub
cmp
add
xor
inc
lcall
mov
lahf
shrl
pop
push
mov
lcall
cmpsb
mov
movsb
mov
cmp
leave
test
mov
mov
inc
aam
jmp
aaa
test
rcr
hlt
in
add
enter
inc
in
fisubl
mov
popf
mov
push
and
sbb
outsb
dec
inc
jnp
dec
xlat
stos
xor
add
cmp
inc
mov
jecxz
fsts
in
rorb
ss
or
pop
fs
popf
fisubrl
mov
inc
incl
pushf
sarb
lret
jge
imul
fwait
scas
xchg
lahf
in
xor
out
pop
add
imul
std
adc
push
xor
loop
lea
lcall
lea
sub
addr16
dec
loopne
cmpsl
lea
dec
daa
sarb
insl
das
push
jmp
gs
data16
mov
pop
sub
jb
or
subl
jecxz
add
xchg
addr16
mov
js
xchg
mov
jle
scas
loopne
push
pop
push
and
int3
cmp
xor
dec
adc
mov
sub
insl
sub
cltd
ficompl
xor
scas
mov
pop
inc
imul
aam
mov
xchg
pop
push
jne
push
and
xchg
ja
hlt
fistpl
aam
mov
psubb
leave
inc
je
iret
aad
xchg
test
sub
fwait
push
arpl
or
lods
mov
aam
and
adc
outsl
insl
mov
pop
ja
cmp
loopne
testb
mov
jne
mov
lea
inc
lcall
dec
dec
add
pop
sbb
sub
pop
push
ret
mov
cmp
lods
ljmp
push
iret
repz
mov
mov
adc
cs
adc
adc
push
aam
mov
mov
dec
adc
mov
adc
push
mov
and
jne
orl
jae
add
dec
sbb
in
add
std
jne
lret
sbb
mov
in
push
movsb
xchg
jb
cmp
popf
or
ja
idivb
push
cmp
cmp
dec
mov
in
dec
popa
xor
or
sbb
cli
mov
sbb
sub
mov
clc
mov
stc
fisubl
sub
out
lahf
and
push
push
outsl
or
inc
leave
js
ds
or
jo
xorb
sub
mov
enter
ficoml
xchg
jp
int3
mov
lcall
mov
xchg
in
mov
cld
pop
daa
dec
mov
push
add
jb
ds
mov
cmp
sbb
xchg
fisubrs
pushf
push
test
les
lods
push
scas
aas
lds
std
lahf
stos
mov
clc
or
sub
hlt
outsl
dec
filds
cwtl
es
cmpsb
popa
and
adc
or
test
outsb
ss
or
ds
in
lret
roll
pop
in
pop
inc
pop
fwait
push
leave
push
xchg
nop
scas
mov
lret
loop
outsl
out
out
dec
dec
mov
pop
sub
imul
test
jae
arpl
mov
push
cmp
jmp
dec
push
push
jb
sbb
xchg
ja
xchg
xchg
sbbl
mov
push
lock
jge
aam
fildll
mov
mov
test
and
push
mov
into
push
movsl
mov
and
sarb
pusha
push
mov
es
iret
loopne
cmp
sub
popf
inc
xor
mov
mov
xchg
cmp
frstor
repz
idiv
jecxz
sbb
test
test
cmp
nop
jno
stos
jnp
add
jnp
clc
mov
aaa
and
flds
jg
pusha
and
hlt
insb
ret
popf
test
loop
add
loope
cwtl
ds
aad
int3
xchg
pushl
push
pop
int
and
inc
mov
cmp
movsl
adc
jo
jecxz
sqrtps
rcrb
outsl
lret
cmp
xor
mov
icebp
mov
cmpb
push
daa
mov
xchg
cmp
test
cmpsl
lret
cmp
add
jmp
jnp
test
daa
ja
pop
clc
jne
fcoml
aas
jle
lods
not
scas
sbb
lret
fwait
adc
mov
sti
enter
xchg
pushf
cmp
sub
and
add
mov
sub
lods
adc
adc
add
cmc
or
jae
or
dec
push
sub
pop
sub
xlat
mov
insl
pop
bound
fs
outsb
jb
inc
mov
xor
ret
mov
pop
or
js
sub
mov
sub
movsb
xchg
fadds
pop
jns
aam
and
outsl
mov
lods
cli
outsb
mov
and
clc
outsb
jbe
push
xor
push
sub
xor
xchg
bound
xor
out
and
in
xor
imul
ljmp
xchg
xorl
mov
test
ss
sbb
rcr
fildl
xchg
cmp
into
in
sbb
lds
lea
les
jno
mov
adc
jle
cmp
adcb
xor
inc
cmpsl
ret
sbb
out
or
mov
xchg
dec
cmp
xor
or
outsl
mov
push
int
pop
cmp
and
mov
xchg
inc
dec
ret
cmp
inc
pop
adc
push
sub
lcall
jnp
adcb
clc
out
ror
inc
jo
aam
jno
push
out
mov
mov
es
je
mov
inc
mov
cmp
or
mov
inc
movsb
mov
mov
xor
es
inc
pop
dec
imul
mov
lods
mov
add
sbb
ret
mov
inc
movsb
outsl
call
and
aas
cmp
jne
jle
pop
ljmp
in
adc
lret
push
or
fidivrs
jl
mov
jae
jecxz
incb
out
inc
jecxz
pop
inc
enter
add
sbb
cmp
movsb
xchg
push
in
bnd
sbb
into
out
out
aad
data16
jecxz
int
imul
int
mov
push
bound
pop
push
adc
mov
lret
inc
cmp
out
dec
xchg
dec
ja
idivl
push
cmp
jb
es
js
andb
cmp
mov
repz
icebp
sbb
imul
and
push
fwait
push
sub
imul
dec
sub
and
inc
sarl
add
orb
pusha
sbb
pop
add
push
repnz
jecxz
mov
call
out
sbb
repz
test
inc
enter
mov
xchg
test
sub
adc
mov
xor
push
dec
mov
inc
xchg
out
filds
pusha
jo
shl
jb
fwait
stos
pop
outsb
stos
das
mov
or
into
mov
ret
push
jl
es
push
xor
mov
add
mov
dec
mov
cmp
data16
es
mov
push
fildl
push
sarb
add
dec
lahf
mov
out
jne
std
sbb
loop
fidivl
cmpsl
out
dec
mov
jp
int
and
mov
inc
pop
fdivrp
in
dec
sbb
xchg
in
cli
inc
or
push
into
fs
push
mov
mov
lods
cmpsl
orl
pusha
cmp
call
mov
push
mov
xor
push
adc
daa
inc
aad
outsl
sub
push
sub
cmp
sbb
sub
jb
cmp
pusha
push
mov
call
xor
xor
or
rcr
lea
sub
scas
sub
and
jp
fwait
push
xchg
dec
cmp
fldcw
les
inc
push
add
mov
std
andb
clc
subl
mov
xor
jle
pop
xchg
loopne
xor
outsb
lret
sub
in
xchg
faddl
mov
ja
xor
and
xor
and
jmp
cmp
cmpsl
lods
shrl
jp
mov
jmp
jecxz
push
push
and
xchg
lods
hlt
enter
les
adc
cmp
sar
and
cmpl
sbb
jle
cld
negl
cmpsb
jmp
popa
jae
enter
loope
and
mov
or
mov
mov
cmp
arpl
pop
mov
xchg
xchg
mov
mov
xor
mov
leave
daa
push
pop
xchg
sub
mov
std
lds
jo
dec
arpl
mov
or
push
inc
shr
in
movl
sti
cmc
outsl
xor
fstpl
aas
push
lret
cmp
mov
insl
push
xchg
test
add
stos
push
loope
clc
cmpsl
dec
sbb
add
cli
xor
jecxz
sub
popf
pushf
ss
push
pop
sbb
dec
jno
movsb
inc
push
mov
push
pop
insb
in
cld
clc
addr16
pop
fcmovbe
jp
in
lret
jne
cmp
jns
bndldx
imul
jle
ret
inc
sarb
add
add
push
mov
stos
out
lds
pop
stos
and
dec
pop
mov
cmpsb
cmp
jbe
data16
push
int
fnsave
lods
es
imulb
jge
dec
pop
mov
cmpsb
cmp
jbe
data16
push
int
fnsave
lods
es
imulb
std
int
pop
mov
cmpsl
mov
ja
data16
push
int
fnsave
lods
es
imulb
jge
dec
pop
mov
cmpsb
cmp
mov
cltd
push
cld
int
stos
inc
and
bound
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adc
mov
iret
dec
mov
pop
add
xor
popa
fbstp
subl
mov
shrl
loope
icebp
pop
add
xor
popa
iret
jno
xorl
mov
shll
loope
icebp
inc
add
push
cli
pop
lahf
sub
pop
das
xchg
push
sarb
xchg
addl
lret
xor
mov
lret
ret
in
xor
test
jb
jle
xchg
jmp
push
sub
das
aas
push
lods
lahf
mov
mov
iret
xchg
jns
sbb
lahf
cmp
jg
cmp
mov
sub
fidivs
pop
sbb
fdivr
add
mov
les
aas
xlat
wrmsr
das
rorl
pop
pop
cltd
mov
lods
outsl
pop
pusha
mov
inc
jae
jle
in
lret
lock
jp
fiaddl
adc
in
mov
int3
xchg
or
test
aam
push
adc
push
scas
jnp
fstps
push
mov
sbb
fildll
xchg
sub
outsl
sarl
push
icebp
inc
add
xor
popa
iret
jno
dec
clc
aas
les
aam
lods
cmp
xor
adc
lock
cmp
push
jecxz
icebp
jg
sbb
sub
xor
fisubs
je
and
add
mov
enter
roll
jg
dec
icebp
pop
add
xor
popa
iret
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
iret
jno
subl
xchg
or
push
dec
dec
fisubrs
icebp
xor
push
push
les
gs
loope
jae
in
jns
push
xchg
mov
stc
lea
aam
aas
jge
and
fisttps
sub
adc
movsb
decb
mov
inc
sbbb
push
pop
pushf
and
mov
or
lods
mov
mov
imul
out
mov
loope
xor
or
xor
ud1
mov
lds
lea
jl
xchg
dec
sbb
mov
mov
lcall
jno
cli
ret
cld
cmpsl
or
xchg
mov
adc
add
std
sub
lea
lret
cmp
mov
lcall
and
in
xchg
lods
popf
sbbl
imul
bound
xchg
jne
popf
xor
add
jecxz
mull
fwait
stos
dec
cmp
inc
lcall
dec
or
add
adc
mov
pop
test
insb
stos
pop
jns
xchg
int3
cmp
cmpsb
push
ret
dec
dec
subl
sbb
add
loop
into
mov
stc
sbb
test
and
jl
pop
jge
add
mov
je
xchg
mov
adc
xchg
pop
sub
addr16
sub
test
xor
push
nop
push
mov
jp
test
xchg
mov
jnp
and
mov
jnp
jnp
mov
cmp
and
mov
jecxz
xor
fsubrl
pop
pop
inc
push
mov
xor
bound
mov
mov
jl
loope
mov
push
pop
outsb
mov
imul
mov
sub
outsb
add
add
pusha
cmc
mov
cmp
jge
jae
add
fcmovu
ret
inc
gs
pushf
in
cltd
ljmp
rcrl
cltd
pusha
push
gs
cld
lock
loop
sub
xchg
cmp
mov
mov
cmpsl
adc
xor
leave
xor
or
dec
mov
push
inc
cmc
clc
out
ja
popa
adc
fwait
xchg
inc
xor
fnstenv
loope
pop
scas
sbb
inc
push
or
leave
jge
popa
pop
sar
repnz
inc
std
imul
add
pop
mov
jmp
das
out
cmp
xchg
stos
stos
dec
cmp
aas
xchg
dec
xchg
pop
addr16
fld
dec
daa
in
push
les
fwait
test
sub
iretw
inc
aas
cmp
lods
insl
push
mov
dec
jg
sbb
and
xor
xchg
leave
ja
sub
test
add
aas
dec
push
mov
lea
pusha
mov
cmpsb
adc
inc
xchg
nop
push
out
mov
xchg
pop
cs
jl
mov
adcb
dec
xchg
ret
pop
xor
bound
adc
sub
rclb
mov
sub
or
mov
adc
andw
adc
cmp
adc
gs
xor
sarl
ja
pop
shlb
dec
ds
xchg
les
cwtl
push
sub
ljmp
sahf
rclb
cmp
ret
fwait
xor
cmpsb
ret
fdivl
fcoms
cld
dec
add
icebp
dec
fiadds
cmp
add
push
into
sub
lahf
insl
xchg
jb
fs
out
push
xor
int3
lock
xchg
push
add
insl
jo
and
pop
in
jae
jno
movsb
mov
pop
and
repnz
call
repnz
insl
dec
jp
ljmp
out
mov
call
outsb
fwait
inc
jae
mov
xlat
xor
daa
push
mov
mov
mov
call
stos
xchg
rcll
jb
lods
mov
or
bound
jbe
mov
mov
cmc
dec
outsl
cld
mov
scas
std
insb
mov
jb
push
out
inc
icebp
out
aaa
sbb
addl
mov
lahf
mov
push
inc
sti
dec
loopne
inc
ret
inc
mov
xor
inc
movsb
in
nop
xchg
test
sbb
inc
repz
int
in
out
push
lds
lods
sbb
adc
jb
push
lods
or
xchg
lahf
and
mov
push
leave
dec
inc
loop
xor
inc
test
sub
shll
xchg
jno
inc
inc
lcall
out
sbb
dec
inc
gs
jmp
mov
jg
sarb
add
push
pop
data16
cmc
ret
mov
pop
loope
into
ret
and
pushf
ror
dec
xchg
mulb
test
rcll
pop
aaa
flds
cmp
adc
mov
mov
xchg
adc
jne
push
mov
imul
mul
pop
int3
pop
loope
mov
add
mov
sub
mov
and
mov
pop
and
es
push
xchg
call
pop
int3
cli
cmp
or
xchg
idiv
push
shll
pop
sub
add
addr16
jne
inc
add
adc
adc
and
and
pushf
nop
pop
jg
jbe
adc
ja
lods
jp
mov
xchg
or
cmpsw
jp
test
cwtl
push
cmpsl
daa
jl
xchg
lods
jne
icebp
repz
mov
sbb
outsb
ja
ljmp
jae
popf
jecxz
not
fcompl
mov
mov
insl
sub
sti
fcomp
stos
movsb
shll
push
outsb
or
fmuls
sbb
dec
xchg
aad
jo
adc
cwtl
cmpsb
idiv
add
inc
pop
add
xlat
ss
cmp
ftst
aaa
xor
mov
xchg
dec
xor
fwait
cltd
mov
cmp
mov
int
sbb
jmp
mov
add
out
or
enter
scas
je
jmp
or
test
xchg
cmp
push
sti
test
rolb
inc
gs
or
sti
ljmp
dec
mov
push
js
loope
cmp
in
cmpsb
je
stos
mov
dec
adc
pop
cltd
pop
bound
push
mov
out
push
cmp
sub
push
fisubs
xchg
arpl
xor
and
xchg
cwtl
aam
pop
hlt
pop
repz
pushf
movl
and
push
sbb
in
and
dec
add
test
push
mov
ret
in
repz
push
mov
fnstsw
pusha
push
shl
jns
xor
arpl
rcrb
stos
lds
fwait
add
mov
cmp
cmpsl
call
and
mov
cmp
fs
outsb
sahf
sub
jno
mov
jns
jbe
or
mov
in
icebp
xlat
xchg
andl
inc
testl
inc
xor
iret
fiaddl
push
fisttpl
pop
jae
in
jl
js
es
popa
lock
into
int
cwtl
mov
std
and
mov
movl
adc
cltd
adc
repnz
mov
test
mov
adc
fistpll
mov
push
stos
jmp
sub
cmpsl
fldt
jmp
in
jmp
scas
xchg
or
aaa
xlat
mov
aam
mov
and
das
inc
out
inc
jl
mov
xchg
dec
iret
pop
add
sub
mov
and
add
sbb
test
push
mov
jge
rorl
sbb
dec
jne
movsb
inc
scas
fnstcw
mov
ljmp
fmull
add
sbb
scas
leave
clc
popa
insb
pop
cmp
add
push
dec
int3
mov
out
inc
jle
mov
enter
gs
jmp
add
dec
add
inc
mov
cmp
xchg
popa
fisubl
fadds
imul
mov
xor
movl
loopne
sub
insl
inc
push
jns
insb
in
jne
and
xor
pusha
pop
fiadds
xor
nop
sub
xchg
xchg
jbe
adc
fisubl
pop
add
ffree
xchg
cmpsb
repnz
fs
xlat
sarl
sbb
insl
mov
xchg
in
fiadds
dec
adc
jo
roll
dec
sub
cltd
jmp
sub
loope
inc
out
fwait
movsl
mov
not
les
loop
sti
sahf
notb
sarb
scas
pop
jae
xor
push
movb
nop
aam
sti
es
mov
or
test
test
ds
inc
jns
call
jge
push
mov
ja
jb
dec
orl
dec
xchg
divb
aad
fs
add
bound
xor
push
xor
sbb
or
es
jne
loope
scas
jp
movsb
jo
lods
cmpsb
mov
sbb
aad
and
js
ret
xchg
arpl
jo
dec
push
mov
push
jmp
shll
pop
rcll
add
and
add
adc
lahf
pop
fxch
pushf
pop
and
sti
push
sti
cmp
aam
cmpl
push
add
lock
cmp
push
xchg
jmp
push
leave
cmp
mov
pop
icebp
jge
pop
jl
mov
mov
pop
je
mov
inc
mov
cmp
xchg
pop
mov
lods
jg
or
out
add
leave
je
lds
or
cmc
shll
fistps
inc
sbb
push
pop
dec
xor
jns
xlat
xor
ror
jg
mov
cmp
fisubl
aaa
push
add
test
jge
sub
rolb
mov
xor
inc
lods
mov
mov
cli
push
jle
outsl
bound
jge
dec
jmp
inc
mov
push
jmp
jb
pop
testb
inc
push
test
stos
and
aaa
lret
out
push
aad
outsl
fsubs
in
mov
in
fdivrl
stos
mov
clc
or
add
aam
xor
push
aas
cli
dec
aam
pop
imul
fwait
sbb
dec
lret
nop
fs
arpl
mov
imul
rcr
in
or
adc
rolb
adc
jecxz
xor
scas
repnz
mov
sub
rorb
push
xchg
jmp
jns
cmp
cmp
adc
fimuls
xor
cmc
jns
sub
sub
adc
mov
fstps
ja
lret
insl
xchg
out
fdivs
cmp
mov
cmp
in
cwtl
mov
push
es
es
adcb
xchg
lods
jno
xchg
add
or
ret
js
cmp
out
stc
test
stos
xchg
out
or
inc
adc
xor
and
pop
inc
and
je
mov
repz
pop
jo
lock
xchg
add
inc
fisttpl
push
push
xor
aas
push
dec
xor
push
inc
scas
dec
xchg
inc
jns
jmp
divl
sahf
pop
jmp
jmp
int3
mov
aaa
mov
imul
push
mov
in
fs
sub
sbb
sbb
pop
lods
shl
ljmp
cwtl
sbb
mov
fnstenv
xchg
xchg
in
hlt
stos
mov
push
dec
aam
and
lods
cld
sahf
sub
or
mov
std
mov
aam
fwait
rcrb
test
lds
inc
sti
stos
jbe
pop
xor
out
pop
and
rep
enter
cmp
xchg
pop
cld
fisttpl
xor
js
ljmp
inc
comiss
sub
fs
adc
xchg
cld
sbb
mov
xor
lahf
test
test
lods
sbb
and
mov
add
xor
sub
or
xor
pop
mov
lock
push
add
jns
jecxz
loopne
cmp
mov
addr16
sbb
int3
sbbb
and
mov
mov
mov
out
leave
cmpsb
pusha
mov
fimuls
pop
mov
in
xor
pusha
cmp
mov
repnz
mov
out
cli
xor
xchg
popf
fbstp
dec
inc
push
jb
pop
sbb
push
dec
cmp
test
outsb
cld
mov
sbb
movsb
addb
jge
shl
pop
subb
sti
pop
pusha
mov
push
clc
push
sbb
in
shlb
jg
add
lea
lea
popf
sub
nop
lahf
sti
xchg
mov
mov
xor
popa
pusha
pmaxsw
fisubrs
mov
repz
in
addr16
aas
mov
ds
dec
jg
pop
imulb
cs
movsb
or
push
cwtl
fisubrl
adc
int3
jecxz
inc
jecxz
jno
jp
cmp
sahf
loop
inc
jbe
adc
xchg
mov
inc
inc
mov
and
les
sbb
iret
fisubs
dec
lret
and
out
xchg
fwait
adc
jmp
in
pop
nop
mov
int
fs
sbb
insl
cmpsl
repz
ret
rcl
xchg
xor
outsb
mov
jbe
in
mov
test
js
imulb
inc
out
inc
in
and
push
lea
sti
in
xchg
aad
frstor
jecxz
adcl
in
ffreep
mov
clc
std
or
sahf
cmp
jnp
aam
fsubrs
out
xor
bound
add
sub
mov
xchg
push
sbb
jg
or
out
push
in
mov
out
cmp
addr16
sub
mov
addl
shr
ds
and
jle
roll
faddp
int3
and
mov
in
jle
jmp
and
inc
sub
or
cltd
nop
ja
nop
ds
out
pop
dec
pop
loope
adc
pop
enter
stc
lods
cmpsl
les
mov
push
imul
push
fmull
inc
mov
out
adc
xchg
shl
mov
cmpsl
sub
arpl
loopne
in
cwtl
dec
fisttps
add
xchg
test
pop
add
or
pusha
jmp
xlat
inc
int
stos
test
mov
mov
push
xchg
cmp
jno
push
lock
push
fnstcw
out
outsl
sbb
pop
scas
adcb
icebp
out
mov
jp
and
and
mov
sahf
xorb
push
jns
repnz
push
cmp
mov
adc
mov
aaa
cltd
mov
cmp
mov
inc
lret
cltd
jl
sbb
mov
into
mov
addr16
xchg
and
stc
mov
aad
adc
add
jle
lods
in
sub
lea
mov
repnz
iret
push
out
ret
mov
or
adc
je
pop
dec
add
jp
loopne
stos
ds
mov
jae
xorl
int
fidivl
jle
movl
mov
mov
sub
jb
xchg
or
bound
arpl
adc
and
int
imul
cmpsl
test
and
loop
jl
mov
mov
xchg
mov
xorl
nop
ret
repnz
cld
ljmp
insl
insl
fcoml
xor
xchg
scas
push
jns
popf
dec
cmp
data16
jge
repnz
scas
mov
ret
adc
sbb
and
int3
scas
xlat
and
scas
push
cwtl
mov
dec
mov
lahf
daa
test
repnz
into
ret
xor
dec
jo
cmp
cmp
inc
sub
lret
add
sub
fld1
das
push
fcoml
push
sub
inc
add
xor
movsl
bound
mov
and
sub
es
out
cli
jl
dec
pusha
mov
popf
jle
scas
adc
add
add
stc
xor
inc
orl
mov
add
sub
ss
jmp
mov
fimuls
aas
imull
jl
mov
dec
pop
push
rcrb
popa
push
xchg
lret
jne
lods
fildl
les
xor
xlat
cmp
mov
pop
lcall
hlt
int3
scas
cltd
jae
xor
test
lock
mov
push
sub
inc
cli
inc
and
push
or
mov
test
movsl
pop
adc
fidivrs
fsubrs
and
or
scas
jbe
mov
lahf
cmp
decb
aad
hlt
cli
subl
jle
fistps
jl
cmp
mov
jb
shrb
into
addl
js
and
cld
dec
mov
jae
pop
aad
xlat
jnp
dec
xor
out
mov
xor
lcall
ret
push
and
adc
data16
pop
popf
add
inc
fcomi
bound
negb
call
stc
out
popf
mov
dec
aaa
popa
jmp
inc
jp
mov
mov
push
lahf
sub
insl
stc
int
mov
jmp
lock
xchg
fnstsw
aad
add
jg
je
sti
fistl
test
out
dec
mov
mov
sub
icebp
push
cs
je
push
inc
pop
sub
shlb
fs
cmpsb
xchg
add
or
add
int
jnp
ret
cltd
in
jo
mov
and
test
jne
enter
ret
ficoml
adc
ss
call
dec
jle
jne
cld
js
add
sub
pop
in
or
cmc
pushl
aam
out
aaa
fidivl
dec
sbb
inc
and
mov
pop
and
lds
insb
ret
adc
xor
stc
xchg
jae
inc
test
push
xor
inc
add
test
insb
pop
stos
sbb
mull
gs
repz
cld
mov
jge
out
ds
xchg
adc
adc
mov
dec
stc
adc
cmc
out
and
into
addr16
inc
mov
push
pop
jno
cmc
stos
jno
decb
dec
cmp
mov
adc
dec
sub
jg
xor
xor
lret
adc
cmp
lds
lock
sub
scas
xor
pop
cmc
pop
mov
mov
daa
ret
mov
pop
cmp
scas
lds
icebp
ret
test
outsb
bound
jne
jnp
mov
jp
or
mov
insl
mov
jno
dec
loop
xor
sahf
js
push
insb
push
or
lods
sbb
shl
pop
fdivs
outsl
test
and
popa
repz
inc
jp
jo
fwait
or
push
fs
xchg
xchg
das
xchg
out
mov
sub
cmp
pop
push
fidivl
cmp
adc
clc
mov
mov
call
and
or
hlt
or
and
into
jle
inc
pop
mov
repz
xor
pop
xchg
add
repnz
mov
outsb
scas
lds
test
mov
sbb
and
insb
scas
add
jne
push
out
jo
fsubs
out
insb
sub
add
scas
jne
inc
cmpsl
and
aaa
mov
subb
pop
pop
cmp
cs
cmp
cmc
in
adc
push
xor
jb
in
ljmp
mov
jl
jae
mov
cltd
popf
cs
xchg
fincstp
addr16
mov
xor
jle
sbb
inc
mov
lret
pusha
jle
pop
mov
push
jmp
sbb
mov
jle
pop
frstor
aaa
fstl
jl
test
dec
ljmp
out
pop
lods
pop
addl
mov
adc
out
lods
daa
insb
js
daa
jmp
mov
inc
jl
mov
mov
mov
or
xchg
or
in
insl
das
fwait
dec
imul
fdivs
inc
std
push
jmp
xchg
sbb
push
jp
fldcw
and
nop
cmp
mov
xchg
inc
push
mov
and
shl
fstpl
adc
mov
and
dec
test
jae
mov
add
jecxz
cmp
sub
xchg
xchg
dec
sbb
jbe
sub
call
rorl
cmpsb
adc
fs
lahf
insl
add
push
sub
inc
adc
ret
idivl
jmp
push
imul
jl
jb
or
and
sbb
mov
pusha
mov
in
scas
mov
xor
jp
out
fistpll
leave
icebp
and
mov
loop
and
outsl
ret
fs
and
push
xor
xchg
ja,pt
dec
cmp
mov
or
inc
mov
out
aam
loope
mov
pushf
outsb
or
in
mov
pop
mov
cmp
sahf
mov
test
mov
xlat
arpl
lods
mov
cmc
and
mov
adc
inc
lcall
lds
or
mov
ljmp
jae
fdivs
js
mov
mov
jno
inc
add
popl
xchg
mov
adc
or
dec
push
ret
or
data16
xlat
call
jg
ret
and
enter
jecxz
sub
dec
dec
fwait
mulb
lock
scas
mov
sbb
lret
hlt
loopne
data16
xor
inc
popf
dec
nop
mov
loopne
imul
mov
mov
scas
jmp
xchg
lea
xor
lods
shl
out
iret
cmp
dec
push
xor
xchg
insl
or
cmp
push
out
xorl
out
ljmp
adc
popa
repnz
sub
jns
add
lods
out
mov
imull
dec
inc
cmp
pop
jb
in
out
xor
shll
loopne
adc
mov
shrl
loope
icebp
pop
add
xor
popa
iret
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
iret
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
into
jno
subl
mov
shrl
loope
icebp
pop
add
xor
flds
sahf
xor
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xchg
sbb
push
sbb
aam
shr
pop
gs
jne
inc
es
push
and
addr16
mov
cmpsl
aad
movsl
cmp
test
loope
gs
push
aaa
inc
daa
push
xchg
dec
inc
xor
xchg
ja
cmc
mov
cmpsl
xlat
xlat
cltd
mov
imul
pop
mov
daa
es
jb
pop
add
adc
mov
lret
sbbb
dec
ds
cltd
pop
dec
jbe
enter
out
adc
add
fildll
in
lahf
pop
imul
lds
xlat
ljmp
inc
test
inc
mulb
add
cwtl
in
lock
sar
pop
divb
push
pop
call
out
pop
add
addr16
fst
cmpsl
insl
lock
rcr
jb
out
lcall
test
hlt
in
push
inc
push
xchg
pop
push
mov
mov
gs
pop
push
add
mov
ljmp
sub
adc
inc
negl
pop
and
lret
out
pop
in
add
xlat
movsl
mov
pop
out
pop
jecxz
mov
push
daa
sbb
ja
addr16
mov
cmc
fiadds
mov
xchg
in
in
pop
and
aaa
xor
push
dec
inc
inc
adc
and
loop
shlb
xchg
add
xor
jne
jns
adc
mov
mov
xchg
lret
mov
rol
testl
daa
push
push
and
addr16
mov
cmpsl
aad
movsl
mov
test
xchg
pop
gs
jne
inc
daa
push
push
and
addr16
sub
stc
sub
dec
test
adc
sbb
movsb
xor
lea
pop
and
xorl
insb
mov
fscale
fiaddl
or
test
fcomps
dec
xchg
scas
lret
push
rcrb
sbbl
adc
push
push
in
das
mov
lahf
xchg
mov
int3
js
in
pop
loopne
andb
cli
dec
divl
sub
sub
cmp
xor
ret
sbb
int
fstps
cmc
inc
dec
std
push
dec
xlat
mov
popf
push
mov
popa
loop
stc
imull
or
xchg
lret
jnp
out
jl
sahf
push
dec
inc
pushf
mov
ret
mov
sbb
js
mov
outsb
mov
push
fistpll
mov
pushf
push
pop
aas
sub
aas
jcxz
or
sar
loopne
sub
mov
cmpsl
push
movb
std
test
xor
lret
add
push
pop
jo
mov
xchg
xchg
pop
iret
ljmp
int3
or
lods
fldenv
insl
sub
add
test
xchg
mov
imul
loopne
jbe
sub
stos
ds
xchg
ret
test
and
repnz
fdivrs
dec
and
leave
push
cs
jmp
cmp
inc
xchg
out
xor
mov
into
aaa
leave
pop
adc
push
ret
cs
ds
test
clc
test
add
in
cmp
jg
sub
fmuls
test
lods
gs
cmp
testb
sub
ret
mov
pop
cmp
repz
imul
iret
xchg
ret
hlt
xlat
ss
add
aas
call
pop
rcrb
stc
xlat
cmp
mov
clc
bnd
jb
int3
sahf
in
xor
loope
xor
or
jno
lcall
scas
push
outsl
push
cld
outsl
dec
cs
cld
mov
and
daa
pushf
out
dec
mov
outsb
xchg
xor
dec
lcall
mov
adc
fcomps
push
das
outsl
std
add
mov
sub
jbe
mov
repz
jb
push
pop
nop
fmuls
dec
ds
shll
xlat
mov
inc
fxam
push
outsl
out
jb
popf
insb
dec
xchg
popa
repnz
adc
fcmove
add
add
xor
jns
bnd
sub
pop
add
push
loope
fadds
add
repnz
push
inc
setno
daa
adc
push
xchg
push
hlt
adc
hlt
std
push
adc
push
inc
fs
inc
xchg
cmpsl
das
mov
and
fwait
ljmp
sub
ds
out
je
inc
or
out
movsl
and
xchg
mov
aad
and
and
xchg
dec
xor
mov
mov
lret
mov
sti
push
test
cmp
adc
outsl
out
add
jmp
mov
xor
ror
inc
xor
dec
fcomps
push
mov
lods
push
orl
push
jecxz
and
sbb
jae
push
mov
lea
dec
in
cltd
pop
fwait
adc
and
loopne
cmpsl
mov
mov
push
add
sbb
cltd
out
js
xlat
mov
loop
and
test
adc
orb
out
sbb
xchg
xor
adc
enter
bnd
cmp
push
loop
jmp
cmp
dec
mov
lods
sub
and
mov
pop
cmp
lods
pop
sbb
mov
sbb
int3
pop
lahf
mov
mov
sbb
cmp
xchg
in
rol
xor
int
cwtl
arpl
aad
pop
mov
xor
popa
pop
sbb
test
bound
nop
or
mov
mov
mov
in
inc
sbb
ds
dec
xchg
jnp
xchg
adc
cmpsl
fildl
pop
and
and
add
out
ljmp
scas
sbb
xor
sub
xchg
xchg
push
add
adc
leave
pusha
adc
stc
fldl
push
insl
push
fucom
movsb
fwait
push
outsb
ss
pop
pop
int
sub
fisubs
je
in
or
movsb
mov
shl
dec
push
adc
jmp
scas
hlt
mov
xor
dec
push
inc
pop
xchg
sbb
fmuls
jle
in
pop
add
dec
jmp
mov
fs
cmp
xchg
into
sbb
shll
shll
lods
or
cmpsl
or
outsb
rorl
cltd
mov
xor
iret
cmp
jg
mov
mov
fsubrl
xchg
mov
stos
ds
inc
pop
nop
outsl
es
incl
xchg
lods
and
sbb
sub
sbb
iret
mov
jl
out
ret
adc
mov
or
out
out
lcall
data16
out
cltd
mov
rcl
add
stos
pushf
pop
lods
sub
pushf
sbb
cmpsb
jnp
loope
dec
pushf
cmp
and
jge
and
jmp
inc
stos
daa
xchg
xchg
pop
jo
test
fcompl
sub
jmp
jmp
fdivl
das
jge
xchg
stos
arpl
xchg
insl
push
mov
lret
sbb
jle
cmp
fistpll
stos
sub
and
ds
popa
xor
shlb
jnp
cwtl
out
inc
jl
dec
popa
lea
cltd
mov
into
insl
push
ret
mov
adc
pop
popa
sub
adc
int
dec
outsb
push
dec
insb
xchg
sahf
outsl
and
add
das
cmp
in
out
add
ror
mov
push
rcrb
insl
sbb
or
ja
lcall
dec
or
movsb
ljmp
adc
cmpsl
mov
cmpl
outsb
inc
inc
repz
stc
jp
xchg
add
dec
scas
stc
sub
jp
jns
mov
jge
lods
and
cmp
xchg
sbbb
aad
movl
sub
pop
or
stos
xchg
jb
shll
fs
lods
push
cltd
cmp
dec
cli
pop
pop
or
cmp
push
fidivl
dec
or
pop
pop
std
or
test
jnp
testl
in
jg
sbb
shlb
idivl
push
ret
jecxz
les
loope
mov
cs
inc
xchg
cs
pop
nop
fs
xchg
imul
xor
cmpsb
pop
xor
jge
push
out
push
jmp
std
addl
loop
ret
cmp
aas
clc
fwait
lret
jnp
les
sbb
femms
shll
repz
shrl
cld
fdivl
les
and
fdivl
scas
ret
jns
shr
fidivrs
daa
pop
inc
jmp
mov
push
inc
adc
fcompl
xchg
push
inc
test
lret
and
inc
pop
ficoml
jne
or
ret
xor
mov
xor
sub
adc
addr16
push
pop
adcl
cmc
insb
repnz
lahf
out
add
xor
shl
insl
repnz
lea
jmp
mov
cmp
addr16
outsl
xchg
cmc
pop
mov
jne
imul
js
pop
ss
push
mov
pop
add
sub
and
adc
and
and
fstps
xchg
sub
stos
rcrb
xlat
jbe
dec
test
fcmovne
addr16
inc
stc
insb
ja
push
xchg
cmpsb
xchg
out
inc
pusha
loopne
mov
mov
jecxz
out
cld
rcr
xor
sti
enter
aad
sbb
ja
add
pop
out
dec
stos
mov
xchg
je
clc
xchg
call
cmpsl
test
ss
and
aaa
enter
inc
out
sbb
pop
popa
aad
scas
popf
mov
addr16
or
add
das
push
ret
cli
pop
lcall
rolb
mov
lea
int
jp
in
outsl
xor
cmc
lret
dec
pop
add
jno
mov
and
inc
dec
adc
test
movsl
inc
xchg
adc
mov
sub
pop
and
lret
ret
xor
jmp
ret
cmp
push
and
rol
push
inc
xchg
xchg
xchg
mov
subl
pop
add
xor
lods
movsb
mov
out
xor
js
pop
xlat
add
ds
and
jb
pop
xlat
xchg
icebp
rorl
jmp
mov
lock
mov
jl
jb
popf
xchg
pusha
das
imul
jp
loop
pop
jecxz
lret
je
inc
mov
les
movsb
movsl
jle
adc
cmp
dec
add
sbb
push
int3
xor
push
repz
xchg
arpl
push
inc
and
dec
jns
vmread
jbe
mulb
imul
cmp
orl
xchg
dec
sub
mov
xchg
stos
lret
scas
xchg
lcall
xchg
cld
loop
mov
adc
jbe
mov
inc
cmpsl
push
lcall
aas
adc
fstpl
or
aas
orb
or
jbe
mov
sub
pushf
cld
gs
iret
jo
or
adc
push
cmp
pop
loopne
gs
or
aam
rolb
fmuls
ljmp
mov
int
pop
cs
xor
mov
mov
in
and
sahf
sub
and
mov
mov
mov
cmp
push
adc
cmp
mov
xchg
lret
ss
ret
jae
stc
push
fwait
ds
pop
inc
loope
mov
es
test
cmpsb
inc
cmp
jbe
imul
jge
pop
shrb
pop
aad
pusha
jecxz
shll
dec
aaa
jg
mov
push
mov
fdiv
addr16
xor
mov
lea
mov
inc
sbb
mov
pop
repz
jbe
lds
cmc
add
and
nop
pop
push
push
inc
mov
lret
aad
fldl
pop
jne
add
mov
hlt
pop
and
cmp
and
mov
adc
scas
test
xchg
inc
jns
fisttpll
xor
dec
add
fcmovnbe
js
push
mov
psubq
xchg
not
hlt
cmp
mov
in
adc
push
stos
loope
pop
hlt
sbb
ljmp
in
sbb
mulb
enter
inc
stos
insb
shll
mov
jge
rcrl
std
pop
mov
test
dec
push
inc
std
push
lea
xor
jg
sub
lods
cld
mov
push
cmpsl
xor
jp
into
xchg
jp
dec
jp
or
iret
xor
ret
cmc
push
push
jl
xchg
add
lahf
lock
mov
push
ret
add
cltd
aaa
jne
sbb
push
push
and
dec
movsl
lret
outsb
aad
ds
jns
dec
fnstsw
adcl
or
lock
fsubrs
popf
cmp
outsb
add
push
xchg
sbb
call
cmc
iret
cld
mov
lds
ret
inc
fiaddl
cmp
sub
add
repz
or
movsl
push
and
and
adc
sbb
shll
out
xor
cs
test
ss
call
pand
push
loopne
and
xchg
push
and
in
inc
mov
jo
xor
cmp
mov
mov
pop
xchg
mov
push
das
xchg
aas
mov
push
jle
scas
adc
mov
add
mov
push
xchg
jmp
in
jno
dec
hlt
int3
and
sarb
cmp
nop
lcall
cli
outsb
insb
testl
mov
int
pusha
aam
xchg
outsb
inc
fs
add
cli
xchg
adc
mov
xor
lds
shl
mov
pop
sbb
jl
dec
mov
in
mov
mov
test
outsl
inc
xchg
repz
push
mov
lret
push
mov
mov
dec
pop
enter
or
lock
out
insl
xor
pop
es
ljmp
lods
mov
out
push
idiv
add
xchg
pop
jg
popf
imul
or
mov
popf
xor
xor
jl
pop
pop
dec
adc
dec
cmp
add
jecxz
out
xchg
jge
pop
pop
xor
in
cmp
or
xor
mov
and
push
xchg
or
jb
arpl
dec
sub
jnp
shr
out
push
sbb
cltd
pop
int3
mov
cli
jne
popf
push
pop
push
mov
push
mov
sub
adc
in
clc
inc
adc
ja
push
in
xchg
pop
sub
mov
clc
mov
pop
mov
jo
cwtl
stos
lret
and
cmpl
enter
jp
jg
adc
shll
push
add
jle
jno
imul
jge
push
imul
into
addr16
iret
les
jge
fistl
pop
mov
movsb
rcrl
xor
jae
push
inc
and
dec
rolb
icebp
sub
cmpsb
push
inc
outsb
lds
pop
lock
int3
lret
lds
int
loope
inc
and
push
int3
xor
pusha
pop
fistpll
mov
sahf
and
cmovns
test
or
dec
jno
andb
addl
pop
cltd
pushf
and
xor
inc
cmp
inc
jle
stos
mov
out
clc
es
push
sub
jmp
dec
ds
movsl
rcrb
add
fisubrs
in
jge
ret
or
outsl
and
scas
cmp
jg
test
rorb
sub
pop
jo
xchg
lea
sub
call
sub
loope
ret
arpl
add
rorb
ret
call
imul
dec
mov
xchg
int
and
xchg
and
lret
lahf
dec
adcb
jmp
dec
inc
push
iret
xor
dec
aaa
decb
xor
cmp
xchg
sub
nop
sub
jp
aam
cmp
push
jns
scas
insb
idiv
ljmp
xchg
mov
xor
inc
cli
rolb
lea
inc
push
pop
int
je
lret
xchg
popf
sbb
stos
insl
nop
and
cmp
mov
xchg
cmc
sahf
push
push
in
and
add
mov
fstps
fidivrl
fmull
inc
arpl
iret
movb
push
jo
jge
icebp
mov
jnp
jl
inc
sub
pop
ftst
mov
shl
adc
lahf
es
nop
cmpsb
aaa
jecxz
es
mov
mov
push
lock
outsb
aas
lret
cs
ret
inc
test
push
loope
jbe
push
out
push
data16
or
out
test
pop
ja
dec
xchg
movsb
ret
jne
pop
cld
jb
iret
and
pop
push
inc
dec
orb
jle
data16
into
adc
sbb
mov
dec
les
cmp
xor
mov
push
dec
mov
jne
popl
subl
outsl
insl
roll
mov
loope
jp
push
ret
sbb
cmpsl
outsb
mov
fisubrs
xor
sub
add
cmp
nop
jne
jbe
insl
add
dec
xorb
lds
push
mov
int3
das
call
or
mov
pop
pop
sub
and
mov
mov
addr16
mov
xor
fistpll
inc
push
shll
jle
fwait
push
dec
cmp
stos
loop
insb
stos
sar
inc
xor
fistps
popa
outsl
call
cmp
in
inc
push
jmp
ljmp
mov
movsb
ffreep
push
cmpsb
leave
popf
loope
xor
stc
mov
add
mov
jmp
sub
jne
jmp
incb
mov
lea
push
lret
adc
dec
into
xor
jg
cltd
mov
xor
cs
decb
add
mov
fsubrs
sbb
xor
jnp
sbb
cmp
es
mov
insb
sbb
jle
sub
and
and
add
pop
xchg
cmp
out
insl
lds
add
cmpsb
fbld
sbb
xchg
xchg
mov
add
enter
jp
nop
lret
call
pop
jp
jecxz
daa
std
jmp
adc
repnz
mov
outsl
stos
push
sub
test
fidivl
mov
xchg
push
push
xor
push
cltd
ljmp
and
mov
sarb
bound
rcl
jne
insb
mov
push
push
add
mov
mov
adc
mov
jae
popf
lcall
out
xor
enter
jmp
out
sub
lcall
out
cmp
test
pop
or
jg
mov
jecxz
mov
imul
outsl
lods
sub
mov
mov
iret
jle
in
or
cbtw
inc
adc
fmuls
sbb
mov
sbb
testb
fbstp
xor
clc
cmp
mov
aas
scas
movsl
nop
sub
pop
mov
sti
fs
xor
cmp
dec
stc
nop
sub
push
push
rolb
mov
pushf
jge
ja
lcall
adcb
insb
jp
xor
ret
mov
scas
pushf
lcall
mov
movb
lcall
pop
std
gs
lret
or
aad
pop
fildll
ret
mov
jo
cmp
xchg
sahf
jp
int
push
pop
push
inc
popa
rorl
adc
je
cmpsl
or
push
je
sar
popa
ja
outsb
addr16
dec
movsb
mov
ret
pop
test
aam
mov
jnp
mov
filds
push
or
lods
push
lock
out
and
or
push
sbb
out
jmp
stos
pop
push
mov
fs
repz
xor
sbb
test
push
sub
pop
add
mov
std
xchg
pop
mov
das
pushf
mov
leave
mov
mov
mov
sbb
icebp
sahf
mov
loope
nop
cmp
push
sti
xor
out
sub
jne
dec
pop
ss
imul
mov
pop
push
rolb
mov
rclb
and
popf
lahf
mov
add
test
and
lret
or
test
xchg
mov
fisttpll
xchg
cmc
sub
ljmp
repnz
jecxz
jmp
fsubl
mov
pop
xor
bound
mov
mov
sub
cmp
and
lea
fsub
imul
js
mov
lahf
jmp
les
shll
mov
pusha
cmp
inc
mov
aaa
add
js
scas
inc
xchg
test
jo
into
mov
push
xchg
cmc
and
sbb
rorl
das
pushl
into
dec
js
pop
mov
lcall
sarb
mov
mov
mov
xchg
xchg
cmp
and
add
sbb
jmp
xchg
shr
sbb
sub
jmp
pop
gs
lcall
movsl
les
mov
cmp
stc
mov
or
imulb
jmp
cltd
push
or
cmp
lret
jns
pop
hlt
cmp
mov
mov
add
and
sarl
sub
rorl
inc
mov
mov
das
cmp
push
and
loopne
cltd
push
repz
dec
out
jnp
cltd
inc
test
add
jecxz
xlat
mov
adc
dec
push
fsubrs
sbb
aad
cmc
loop
mov
int3
and
mov
arpl
cld
out
xor
xchg
mov
mov
std
andb
test
or
aaa
cmp
add
mov
es
mov
pop
jp
jns
cmp
jle,pt
out
icebp
inc
fnstsw
sub
into
jp
or
loopne
fdivr
xchg
es
push
sub
pop
add
sbbb
popa
shll
xchg
or
pushf
rcrb
lds
and
mov
inc
pop
das
mov
test
inc
adc
jne
into
push
and
negb
cmp
das
nop
dec
loop
bound
cli
ljmp
cmp
jl
fidivrs
dec
outsl
xchg
mov
call
dec
enter
mov
and
sbb
xlat
insb
add
cmp
jns
scas
xchg
mov
adc
sbbl
mov
loopne
imul
dec
inc
andl
into
xchg
sub
push
cs
or
push
leave
dec
xchg
and
jbe
add
gs
push
ljmp
outsb
mov
mov
gs
das
xlat
jmp
shlb
cmc
sub
bound
int3
sub
mov
adc
scas
repz
and
inc
or
mov
clc
fimuls
push
xchg
xor
cmc
push
push
loope
testb
dec
cld
cmp
mov
pop
addr16
fldenv
outsb
pusha
addr16
push
ret
pop
xor
adc
sbb
jno
dec
icebp
cmp
adc
or
xchg
and
rorb
cmc
mov
cmpsl
aad
movsl
mov
test
xchg
pop
gs
jne
inc
daa
push
push
and
addr16
mov
cmpsl
aad
movsl
mov
test
xchg
pop
gs
jne
inc
daa
push
push
and
addr16
aaa
mov
sbb
pop
mov
daa
push
push
and
addr16
mov
cmpsl
aam
movsl
mov
add
pop
fistps
lods
aaa
lret
pop
ljmp
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
and
mov
ret
dec
inc
shlb
and
push
add
xor
inc
adc
mov
mov
ret
repnz
mov
xor
arpl
add
pop
bound
push
adc
mov
mov
ret
repnz
mov
xor
inc
jae
and
or
jge
jo
andb
jns
ret
sbb
or
lcall
add
mov
ret
inc
repz
es
fwait
mov
inc
pop
fstpl
xor
push
aaa
repz
push
xor
std
adc
mov
mov
mov
outsb
xchg
repnz
mov
and
mov
inc
sbb
dec
xchg
roll
sub
stc
ret
mov
inc
lods
add
pusha
or
xlat
adc
outsb
sbb
pop
adcl
sub
fwait
add
int
hlt
xor
push
push
xor
push
adc
in
repz
ret
repnz
mov
xor
arpl
push
add
xor
push
adc
mul
mov
mov
xchg
xchg
aad
xlat
pop
or
aaa
push
jo
inc
aas
push
dec
in
xchg
loope
out
lret
filds
out
cmp
push
cmp
and
inc
pop
insb
les
mov
mov
xor
arpl
push
add
xor
push
adc
mov
mov
ret
repnz
mov
xor
arpl
push
add
xor
push
adc
mov
cmpsl
mov
rolb
add
adc
js
xor
js
mov
xor
movsl
fsts
add
and
int3
pop
add
mov
test
cmp
or
sub
in
pop
lds
jbe
rcrb
test
sbb
or
test
xchg
in
mov
sarl
lret
jmp
hlt
mov
mov
or
jbe
xor
xchg
adc
lods
cs
fmuls
jbe
int3
or
adc
outsb
pop
js
or
mov
pop
mov
and
add
popf
mov
loope
test
sbbl
fwait
lods
cs
mov
or
jle
sbb
xlat
out
adc
fldt
cmp
jmp
loope
adc
lock
cwtl
mov
mov
xlat
pop
pop
lock
mov
jge
imul
xor
xchg
aad
cmpsl
xchg
push
push
insl
scas
cltd
add
xor
push
mov
addb
dec
in
stc
lahf
loopne
lret
adc
pop
jae
lcall
iret
icebp
loop
les
out
mov
sbb
cmp
enter
mov
scas
mov
gs
mov
cmp
pop
loope
fmul
push
lahf
dec
or
xor
xor
call
aam
sbb
loop
and
jp
and
or
xor
pop
mov
int3
mov
jle
js
in
pop
push
cmp
or
mov
sbb
pusha
cmp
jg
inc
sbbb
or
les
mov
ja
testb
add
or
pop
fstps
jmp
fnstsw
adc
sub
pop
and
mov
aam
jg
bnd
xor
or
fistpl
pushf
push
mov
fdiv
mov
sub
popf
inc
push
les
jmp
sub
stc
sahf
xor
dec
adc
and
jge
adc
xor
jbe
push
xor
fcoms
jl
fbstp
cli
jae
bnd
aad
dec
into
pop
add
mov
into
dec
in
dec
xor
jge
push
repz
mov
popf
add
and
inc
xor
ljmp
outsb
inc
aam
jl
xor
jg
add
leave
cld
test
bnd
dec
xlat
hlt
jb
test
inc
mov
inc
insb
pop
adcb
scas
and
dec
js
sub
pop
arpl
xor
les
dec
repz
sub
xchg
mov
mov
stc
cli
dec
fwait
sbb
icebp
push
loope
shrl
jge
cmpsb
cmp
shlb
leave
adc
xchg
pop
push
shrl
adc
cmp
pop
xor
outsb
or
dec
mov
jno
or
in
xor
gs
adcl
cld
cltd
test
clc
push
leave
sbb
jg
inc
mov
xorb
and
xchg
popf
jmp
insl
lcall
popa
stos
push
sahf
push
int
dec
cs
cmp
enter
cli
pop
je
test
sub
cli
in
cmpsl
mov
sbb
jmp
ret
lahf
mov
inc
out
jae
pop
mov
fadds
lcall
push
xor
jo
mov
sub
loop
adcl
or
movb
mov
shl
xchg
push
rolb
push
stos
adc
dec
push
xchg
inc
mov
movsb
and
aaa
cld
out
xchg
popa
jbe
test
ds
dec
fldcw
stos
in
xor
inc
stos
lret
xor
pushf
imul
lock
icebp
lahf
je
aaa
lcall
int3
test
cmpsb
pop
rol
dec
insb
rcl
push
push
rcrb
mov
push
and
and
sbb
mov
stc
pop
mov
scas
je
xor
ds
or
xchg
push
lret
pop
xchg
dec
je
mov
imul
or
push
js
aam
hlt
sti
cmpsb
pop
add
aad
adc
cmp
cmp
cli
dec
scas
ficomps
outsl
jmp
cltd
jle
mov
pop
mov
mov
inc
andb
push
pushf
andb
sti
in
or
adc
mov
and
sub
clc
arpl
nop
add
lret
in
outsl
imul
fcmove
les
pushf
adc
jecxz
lods
cmp
stos
aaa
sti
dec
fnsave
pop
rorb
cmp
imul
das
push
movsl
cmp
adc
xchg
test
mov
xchg
into
cltd
ret
add
nop
mov
jecxz
pusha
mov
mov
js
sbbl
fsubs
negl
push
or
xor
add
fidivrl
xchg
mov
cmc
mov
pop
xchg
pushl
pop
push
test
testl
mov
jno
sbb
cmp
pop
fdivr
pop
pop
test
add
dec
mov
mov
cmpsb
jb
sti
mov
mov
lret
add
in
aam
sub
xchg
mov
ret
dec
inc
inc
add
xchg
and
imulb
dec
bound
mov
mov
or
and
jp
mov
xchg
push
and
add
pop
xchg
push
lea
test
out
lods
adc
xor
pop
xchg
icebp
lret
xor
stc
pop
movsl
int
loope
mov
aas
data16
dec
rcll
jecxz
out
adc
dec
nop
lahf
mov
push
cmpl
iret
out
mov
lods
lahf
mov
jns
jne
add
subl
mov
dec
pop
pop
das
sub
mov
lret
pop
cmp
cmp
movsb
hlt
clc
andb
aas
sbbl
add
cltd
jp
inc
movnti
in
mov
ja
xor
mov
sbbb
or
jnp
insb
push
scas
outsb
push
adc
dec
cltd
sub
push
inc
int
outsl
cmp
mov
inc
sbb
andw
mov
imul
pop
xchg
lcall
xchg
ret
cwtl
cwtl
ljmp
push
loope
mov
shlb
hlt
call
push
pop
out
push
cmc
gs
mov
mov
mov
push
lret
mov
and
lods
pop
sbb
dec
push
push
inc
sti
xchg
push
cmpb
sub
pop
test
hlt
xor
dec
lds
sbb
shll
lods
ljmp
enter
sti
sbb
cmp
xor
fcomps
outsb
int
mov
insl
lcall
outsb
adc
inc
das
dec
inc
in
pop
mov
fldcw
ret
cmc
lock
addr16
test
sarl
clc
add
mov
aad
jbe
sub
test
mov
je
jl
in
inc
adc
xor
sub
sub
aaa
cmc
pop
xchg
mov
fdivl
pop
fcmovne
xchg
test
cmp
es
std
mov
fstps
mov
fnstcw
sub
jmp
aaa
insl
das
enter
mov
rcrb
addr16
mov
js
pop
mov
addr16
bound
outsb
data16
xor
push
cli
sub
xlat
mov
inc
stc
pop
ret
in
pushf
in
stc
shll
cli
sub
sub
lods
rep
dec
and
xchg
mov
rcll
dec
ss
jmp
shrb
movsl
cmp
sti
stc
add
jle
xchg
mov
rcll
andl
shl
cmpsl
scas
dec
les
aas
push
lock
push
mov
dec
fs
test
pop
push
loop
dec
pop
into
mov
mov
xchg
inc
pop
orb
nop
xchg
imul
cmpsb
and
add
fidivrl
adc
das
cmp
ficoml
pop
scas
in
rolb
jno
insb
sbb
int3
sbb
sub
push
movsb
jge
scas
imulb
je
mov
cmpb
icebp
or
cmc
leave
adc
stos
cmp
cmpsl
imul
sbb
push
lds
inc
ja
add
call
xchg
stc
inc
adc
mov
add
adc
imul
test
xlat
inc
xor
pop
cmp
inc
shlb
cmc
addr16
or
jmp
lahf
pop
cmp
in
mov
cmp
sahf
or
rcll
sub
xor
xchg
cmpsl
test
rcl
setns
loopne
push
adc
xorb
xor
xor
cli
rorl
mov
and
add
inc
cmpsl
pop
lcall
inc
aas
add
das
lret
lret
popa
pop
roll
cwtl
ja
shll
int3
xchg
cmp
and
in
or
outsl
push
or
pop
in
cli
pop
cmp
xchg
aas
fistpl
mov
mov
xlat
and
bound
call
lock
cmpsb
shlb
repz
jns
jl
pop
imul
xchg
xor
or
xlat
adc
in
sbb
jno
enter
testl
pop
jle
add
ret
shrb
movsl
jno
mov
bound
push
lods
and
cmpsl
aam
fimull
mov
fdivl
ror
jb
dec
lods
and
xor
mov
jb
xchg
out
lock
mov
jmp
mov
ds
add
sarl
or
cmp
popa
mov
pop
popf
dec
and
call
dec
cmpsl
cmpsl
mov
mov
push
fistps
add
loope
push
cmp
mov
pop
pop
test
and
inc
sub
xorb
jno
mov
push
push
mov
inc
dec
je
inc
fistl
pop
faddl
xchg
xchg
fmul
or
movsb
mov
outsb
or
fs
pop
fs
inc
push
adc
push
pusha
push
gs
aad
or
in
aaa
jb
sti
outsl
lret
push
adc
add
cltd
inc
outsl
jge
cmp
ja
or
out
push
cli
jo
popf
inc
and
xchg
push
sbb
je
cmp
mov
imul
push
and
xor
mov
sbb
ficoms
test
idivl
sub
or
int
or
leave
add
mov
roll
cmp
mov
rep
jbe
push
mov
test
loopne
enter
mov
xchg
fisubs
ljmp
add
cmp
flds
jle
fdivrs
add
push
subb
sti
mov
mov
sbb
push
jmp
mov
fnstcw
lea
lea
xor
pop
cmp
pop
pop
mov
addr16
dec
mov
cwtl
daa
sub
movsb
iret
mov
push
mov
sub
add
out
inc
inc
xchg
mov
push
pop
jno
pop
inc
scas
leave
test
lea
in
jle
mov
jae
jl
or
fstps
xor
or
sbb
gs
ja
leave
test
mov
bound
daa
dec
repnz
and
jl
xor
xchg
call
xchg
mov
push
pusha
mov
aad
in
into
jae
jae
jae
out
pop
leave
cmpsb
lds
jmp
sbb
gs
loop
mov
or
ja
ljmp
dec
sbb
ds
into
enter
repnz
mov
mov
mov
push
pop
add
outsb
pop
push
pop
add
sbb
adc
mov
loop
cmpsb
fisttpll
sbb
lods
push
mov
jmp
repnz
imulb
lea
pop
or
pop
cltd
mov
movsl
cmp
movsl
add
and
repnz
sub
stos
push
daa
sbb
sub
and
mov
jmp
shll
xor
and
or
in
jo
lock
cmpsl
mov
inc
xlat
mov
xor
pop
call
adc
mov
jns
lods
es
mov
stos
pop
gs
out
mov
addr16
or
sub
jne
jns
stc
mov
push
call
pop
pop
or
cmp
adc
out
xchg
push
push
xchg
sub
xor
mov
jmp
or
adc
mov
mov
subl
mov
xor
stc
pushf
dec
dec
insl
sahf
cmpsb
pop
pop
pop
jmp
dec
rcrb
xor
les
outsb
inc
std
mov
imul
imul
mov
or
repz
cmp
fiadds
and
out
jp
adc
in
push
repz
push
in
and
ljmp
dec
shll
add
fimuls
push
imul
lcall
lahf
sti
stos
pop
mov
lcall
mov
dec
enter
xchg
stc
cmp
mov
out
add
fisttps
and
out
inc
scas
mov
xchg
int3
dec
cltd
shlb
dec
stos
lods
sub
cmp
mov
and
xchg
inc
js
sub
adc
add
inc
dec
iret
adc
add
cmp
cwtl
hlt
fisubs
rorl
add
sti
inc
cmp
inc
pop
testb
or
xchg
scas
popf
insb
cmp
sbb
push
imul
inc
mov
mov
mov
insb
pop
lret
hlt
push
popa
jge
push
mov
sbb
imul
aad
sbb
push
mov
jne
pop
pop
jmp
and
pop
or
or
cld
push
imul
mov
leave
ds
inc
clc
jbe
jno
repz
xchg
or
or
mov
scas
scas
mov
jae
lock
inc
ss
inc
repz
wbinvd
pop
xchg
inc
pushf
mov
lret
clc
rcrl
sub
mov
push
xchg
mov
jp
xor
test
flds
shll
mov
pusha
fistpll
mov
and
xor
jge
daa
mov
adc
lret
mov
inc
pusha
sbb
scas
mov
inc
push
push
mov
aaa
dec
or
ret
jb
imul
push
xchg
repz
dec
xchg
shll
cli
jle
rolb
in
dec
in
data16
cmp
sbb
jge
mov
sarl
jg
add
pop
popf
sub
xchg
cmc
pushf
lcall
sbb
leave
arpl
sbb
xchg
ja
dec
cmpsb
aad
repz
xor
cmp
mov
rcll
cmp
pop
mov
mov
fsubrp
sbb
jecxz
std
add
push
fdivl
enter
adcb
push
cmc
jnp
adc
mov
sbb
aas
ret
pop
outsl
dec
adc
and
movl
jnp
int
mov
mov
lcall
imul
outsb
test
sarl
andb
inc
stos
scas
adc
sbb
rcrb
bound
push
call
repz
mov
xor
xor
add
dec
shrb
shrb
enter
lock
gs
shl
pop
add
test
mov
push
insl
add
xchg
mov
das
cvtdq2ps
call
mov
test
ja
xor
aas
and
scas
bound
loope
sub
call
mov
push
sub
pop
mov
and
int
push
adc
sub
cmp
ret
fisubrs
cld
dec
data16
icebp
jp
inc
mov
mov
arpl
in
fsubrp
push
notl
add
in
fistps
test
outsb
hlt
pop
in
xor
sahf
xor
es
jno
mov
adc
stos
pop
mov
cmp
scas
pop
loope
je
jno
outsl
insl
lods
jl
test
jl
and
inc
or
jo
sbb
cld
push
rolb
xchg
mov
jb,pt
jo
rorl
xor
mov
lods
scas
lcall
and
cwtl
stos
hlt
repz
fwait
mov
adc
xor
pop
lds
dec
outsl
hlt
push
adc
sub
lcall
and
das
push
imul
jg
mov
stc
repnz
mov
or
idivl
lea
jno
jne
jb
mov
cwtl
inc
xchg
push
mov
or
dec
mov
ficoms
or
cld
js
jne
jo
adc
sti
sub
push
cmc
test
inc
add
push
inc
xchg
mov
xchg
rolb
mov
sub
mov
cmpsl
imul
adc
fnstcw
pop
and
jb
bound
xor
dec
jnp
and
sub
sbb
xchg
das
sub
mov
int3
lcall
insl
lahf
cmpsb
jp
xchg
inc
lret
add
cltd
int3
xchg
cmp
out
mov
fisttpll
or
jne
fs
in
mov
push
add
pushf
sub
or
add
cmp
lcall
lret
cltd
adc
inc
fs
imul
test
jecxz
xlat
adc
sub
movsb
out
or
mov
adc
jmp
and
sbbl
mov
jno
loopne
and
movsb
scas
out
mov
mov
stos
inc
push
sqrtps
stos
sahf
hlt
pop
add
movsb
cld
movb
jne
jo
mov
aas
sub
push
cmc
push
out
cwtl
pop
xchg
mov
dec
cli
ljmp
int
rclb
out
xchg
imul
scas
rolb
imul
insl
aaa
rcr
stc
ret
jno
inc
xchg
ror
cmp
and
lds
cmp
push
xor
dec
std
in
int
cmpl
sub
pop
daa
pop
push
in
xlat
pop
jb
sub
fldenv
adc
aaa
push
sbb
stos
arpl
dec
mov
jb
or
pop
pop
dec
lcall
mov
scas
mov
xor
push
sbb
enter
lcall
adc
fmul
repz
cwtl
lcall
cli
mov
mov
movsl
in
inc
push
outsl
popf
fwait
cld
ljmp
test
cmp
cmpsl
inc
xlat
jne
push
cmpsb
int
ret
push
aaa
and
cs
imul
mov
sub
inc
rcl
sub
push
sbb
idivb
inc
rcrl
cmc
test
ds
pusha
repnz
add
or
sti
jae
cmp
movl
insl
mov
add
xor
adc
mov
je
movsb
push
in
imul
mov
sbb
or
cmp
lahf
pop
cmpsb
pop
mov
pop
cltd
popa
sbb
push
mov
jecxz
dec
dec
push
mov
mov
cmp
xchg
stc
fmuls
push
mov
pop
ja
mov
inc
repnz
stos
mov
pop
xorl
sub
fiaddl
cltd
ret
and
daa
decb
and
xor
int3
pop
mov
and
jmp
xor
lock
add
inc
dec
aaa
ljmp
mov
cmp
lret
adc
xchg
aas
mov
sub
mov
sbb
stos
inc
mov
push
dec
dec
cmp
rcrb
test
das
out
adc
xor
shll
sbb
fiadds
notl
dec
ret
fistpl
xlat
enter
sub
push
stc
push
add
push
and
aaa
out
out
mov
cmp
test
sub
fwait
push
loope
cli
sahf
and
shl
sbb
adc
rol
dec
push
outsl
or
cmpsl
sarb
dec
pop
sub
pop
xchg
rclb
hlt
xor
out
jns
mov
ds
je
hlt
lock
call
jae
cld
pusha
mov
xchg
sbb
sarb
and
fadds
out
in
test
fwait
mov
mov
sub
cmc
jp
mov
xchg
sbb
test
mov
mov
add
gs
jae
mov
sti
dec
pop
mov
shrl
inc
loop
dec
push
ds
xor
gs
scas
or
push
vhaddps
inc
ficomps
stos
repz
aas
call
and
xchg
jmp
xchg
faddl
add
sbb
sub
pushf
popf
push
fs
mov
cmp
mov
out
and
xor
nop
mov
or
orb
pushf
test
leave
ljmp
ja
mov
mov
out
mov
repnz
lahf
daa
jae
movsl
jl
faddl
push
mov
aam
cmc
es
lcall
jecxz
push
or
imul
jbe
pop
popf
inc
clc
pop
pop
mov
popf
push
adc
stos
sub
jno
lfs
sbb
inc
xchg
scas
cmp
sub
jp
pop
xchg
sbb
cmp
dec
xor
into
pop
adc
cs
cld
aad
rorb
pop
lret
insl
mov
sub
lret
and
cmp
es
push
dec
mov
or
add
mov
mov
xor
arpl
push
add
xor
push
adc
mov
mov
ret
repnz
mov
xor
arpl
push
add
xor
push
adc
mov
mov
ret
repnz
mov
xor
arpl
push
add
xor
push
adc
mov
mov
ret
repnz
mov
xor
leave
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
push
adc
fs
shll
in
sub
push
hlt
cmp
movsb
or
fs
test
cwtl
and
sbb
les
jbe
dec
hlt
cmp
or
decb
add
jo,pn
js
add
test
xchg
xlat
je
outsl
jnp
mov
aaa
mov
in
pushf
cmpsl
mov
dec
dec
imul
cmpsb
ret
pop
jecxz
insl
cwtl
pop
pop
cmp
hlt
inc
mov
mov
adc
mov
or
cld
cmp
movsb
mov
das
test
test
clc
or
xor
fldln2
in
aam
outsl
cmp
xchg
les
ja
push
mov
pusha
popf
je
adc
cltd
in
mov
dec
sbb
sbb
xchg
adc
mov
sub
mov
add
add
out
sub
jge
call
movsb
xor
push
jno
adcb
sahf
mov
dec
sbb
lret
enter
adc
cwtl
and
cmpsb
mov
cli
jl
out
enter
jp
mov
sahf
cmp
fnstsw
push
jmp
movsb
or
xchg
push
ret
inc
sti
insb
rorb
clc
add
lahf
pop
add
rcll
inc
hlt
dec
sti
pop
inc
movsl
sub
dec
lret
dec
xchg
insl
rorl
aaa
dec
test
cwtl
and
xor
les
pop
in
hlt
cmp
mov
inc
call
je
add
adc
and
xor
les
pop
in
hlt
cmp
mov
inc
sub
jo
xchg
lcall
adc
dec
imul
add
dec
std
fldt
stos
push
xor
sbb
cmc
push
arpl
xor
and
rcrw
jg
movsb
out
and
loopne
pop
orb
daa
pop
lahf
gs
loop
push
lcall
dec
adc
adc
mov
jge
xchg
jnp
fsubs
dec
push
popf
adc
jo
pop
sub
dec
and
pop
cwtl
cmp
mov
and
jns
or
ss
mov
mov
adc
jns
in
call
insb
and
xchg
jnp
je
repz
inc
sarl
shll
imul
adcb
loopne
mov
inc
cli
pop
nop
movb
incb
ret
jp
out
ficompl
pop
xchg
jne
repz
xor
in
jg
ljmp
jo
xchg
in
pusha
jl
mov
lret
mov
shll
sbb
and
dec
pop
or
lods
xchg
mov
test
mov
sti
ja
fstpt
adc
test
mov
cmpsl
pop
pushf
int
mov
mov
pop
js
jbe
mov
arpl
sbb
lcall
cltd
cli
pop
sub
jbe
jnp
in
loopne
fwait
cmp
dec
imull
iret
imul
pop
jbe
cmp
cmp
fwait
out
sahf
mov
lahf
mov
lahf
cmc
xor
cmp
pop
lods
cld
xchg
adc
sub
sub
sub
mov
outsb
sti
and
dec
inc
sbb
add
leave
sub
push
xchg
inc
and
xor
dec
testb
xchg
rep
pop
mov
icebp
dec
bound
xor
add
mov
inc
xlat
push
movsb
and
hlt
cmp
jb
or
pop
mov
repnz
xlat
aam
jbe
ret
call
movl
aad
shrl
push
es
mov
xchg
push
nopl
mov
inc
rclb
pop
iret
in
std
rcll
scas
rorl
pop
aaa
and
out
jle
mov
cmp
divb
jne
and
sbb
or
xchg
inc
ficoms
arpl
dec
outsb
and
addr16
mov
mov
mov
inc
sbb
pop
insl
jb
sbb
adc
out
test
cltd
lods
dec
or
jle
stos
dec
dec
and
out
sub
and
ret
dec
in
lahf
adc
pushf
and
cmp
mov
sbb
push
jecxz
inc
es
jge
xchg
adc
cld
mov
add
mov
jp
xor
and
cmp
jb
fldenv
jl
mov
dec
bound
mov
xlat
loope
jp
cmp
jmp
xchg
xor
fsubrs
adc
rcr
push
or
cmp
inc
fwait
lea
adc
pop
popf
dec
push
cmc
push
push
outsb
inc
and
sub
pop
or
cmp
inc
test
leave
mov
sub
push
outsb
in
cmpsb
sar
sti
jecxz
fsubl
cs
lret
imul
popf
outsl
mov
in
aad
stos
or
xchg
mov
fs
sbb
jne
stc
pop
mov
mov
xor
pop
lahf
mov
inc
or
loopne
test
mov
pop
and
pop
and
daa
pop
mov
push
xchg
mov
stos
aas
daa
jae
mov
lock
mov
call
hlt
sbb
in
ret
into
jnp
push
cmc
cmp
inc
push
insl
scas
hlt
aas
add
es
mov
or
jo
jp
sub
test
out
fs
lret
sar
loope
pop
enter
sub
inc
test
jnp
movb
mull
scas
mov
pop
dec
sub
scas
popa
and
adc
pop
add
es
sbb
fldl
test
sbb
pop
push
push
add
cmp
fs
icebp
lcall
dec
pushf
xchg
lret
xchg
stc
cmp
mov
push
fwait
mov
lods
icebp
push
or
cmpsb
or
inc
push
mov
inc
imul
ss
and
scas
iret
inc
push
ss
adc
popf
mov
jecxz
jae
jne
cmp
and
pop
test
xor
xor
or
inc
pop
cmp
out
xor
jns
mov
sbb
jp
cmc
pop
repnz
sbbl
stos
and
dec
notb
ret
mov
cmp
movsb
int
addr16
adc
cmp
xorl
mov
iret
xor
stos
aam
popf
lcallw
movsl
mov
mov
rcrl
ficoml
js
inc
mov
and
aam
sub
fstl
repz
fistpll
lret
jecxz
mov
sahf
and
adc
sar
dec
loop
adc
call
fdivp
je
jnp
cltd
adc
mov
and
pushf
inc
stc
rorb
inc
xorb
mov
fmuls
add
push
fwait
pop
shlb
scas
dec
jne
out
sub
mov
adc
sub
push
xlat
pop
pop
sub
inc
or
or
pop
hlt
fucomi
xor
in
popf
out
jmp
cmp
outsl
ss
sbb
jle
bound
pop
in
arpl
cld
cltd
clc
subl
mov
pop
ss
adcl
shlb
aas
lods
push
stos
nop
nop
fisttpll
scas
cmp
lahf
mov
cmp
fadds
sub
daa
sti
enter
cmc
pop
cld
or
inc
and
aam
out
repnz
ja
push
jmp
jl
mov
adc
nop
into
push
movsb
icebp
fisubl
xchg
xor
xchg
loopne
adc
ret
jg
iret
das
sti
inc
or
imull
popf
mov
test
or
in
jge
fistpl
clc
pop
stc
loop
push
int3
adc
cmp
xor
test
cwtl
lods
mov
cmc
rcrl
inc
jg,pn
xor
inc
scas
std
fmull
stc
out
or
fiadds
xlat
xor
in
hlt
leave
inc
lods
and
adc
push
insb
push
mov
sahf
and
lds
test
in
push
jge
cltd
mov
loope
repnz
dec
lahf
mov
inc
lods
notl
data16
push
mov
push
cmp
setg
jl
sbb
outsb
sahf
out
dec
cmp
movl
jp
call
cltd
dec
fildll
ss
movsb
jl
jle
and
lahf
mov
and
fs
jb
add
ret
lret
dec
testl
inc
cmp
jle
scas
push
fildl
je
xor
arpl
adc
lods
adc
push
jo
lds
in
cmp
mov
hlt
sub
rorl
mov
sahf
cmp
aam
push
jp
push
cmp
jmp
ret
outsl
lds
inc
ja
test
pop
in
push
mov
or
mov
arpl
dec
and
fidivs
leave
xchg
push
pop
xor
faddp
sbb
sbb
mov
sahf
cmpsw
je
lods
mov
xor
mov
add
outsl
aad
stos
and
mov
push
popf
add
cmpl
out
mov
inc
cmp
inc
pop
scas
jl
data16
adc
adc
cld
jno
inc
push
scas
fsts
adc
pop
mov
sbb
push
jne
rcrl
call
ror
testb
mov
xchg
add
and
ja
mov
add
xchg
ror
lods
pop
dec
fdivrl
dec
test
xchg
push
adc
lcall
sahf
mov
pop
or
aaa
sahf
imul
pop
jb
insb
lock
mov
add
out
scas
arpl
stc
mov
sub
popa
or
or
popa
cmp
outsl
les
loopne
mov
and
rcl
add
iret
decb
fucomi
xchg
cmc
push
adc
pop
cmp
aad
xchg
adc
fs
jbe
push
sbb
mov
add
sub
xor
add
enter
xchg
fwait
je
shrb
sbb
call
loope
repnz
ljmp
rorl
xor
mov
pop
inc
push
ret
push
hlt
insl
push
xchg
inc
or
je
cmp
push
inc
dec
test
push
sbb
inc
adc
or
inc
stos
inc
xchg
aas
jp
mov
cmp
sbb
stos
pop
dec
movsl
lea
jecxz
decl
subps
cmc
add
xchg
bound
fisubrl
sub
xor
push
insl
fdiv
sub
loope
lea
jbe
xor
mov
outsl
pop
subb
pop
push
cmp
jb
aad
cmc
push
mov
addr16
movsb
jle
push
pop
in
mov
mov
leave
sbbb
sub
popf
push
mov
add
addr16
mov
lret
data16
aas
xor
xlat
xlat
pop
fistpll
fs
pop
push
xor
mov
xchg
sbb
pop
cmp
insb
sub
push
ret
sbb
mov
stos
jmp
mov
pop
fucom
daa
lcall
inc
or
jg
fimull
scas
inc
movsb
pop
add
lcall
inc
dec
loope
sub
decl
outsl
out
mov
cwtl
cmp
in
add
sub
lea
push
maxps
fistps
inc
cmpsl
cmp
jne
outsl
in
movsl
gs
sub
scas
xchg
lea
test
mov
dec
cmp
xchg
jne
call
push
and
and
mov
mov
pop
std
jge
jnp
in
adc
icebp
in
in
sahf
or
cld
cmp
arpl
test
mov
into
mov
sub
push
mov
pushf
xor
test
cmp
hlt
xchg
negl
loop
fcompl
xchg
in
popa
xchg
or
mov
mov
cmp
scas
scas
mov
mov
dec
out
jnp
fidivrs
cli
xor
out
mov
pop
or
fcoms
ljmp
shl
cmp
popa
sub
cld
test
xchg
jmp
dec
lea
test
fidivl
mov
pop
xchg
adc
ret
mov
icebp
sub
loopne
mov
test
cmc
lods
popa
flds
cmpb
xor
pop
arpl
mov
jle
mov
movsl
add
lcall
gs
pusha
mov
addb
add
aam
outsl
lods
lcall
jle
jl
push
popf
pusha
and
and
inc
je
cli
cltd
and
cmp
stc
in
fildll
ja
popa
cmp
cmp
sti
mov
dec
push
ret
jmp
out
xor
aas
pop
dec
lock
mull
je
and
xor
clc
nop
into
or
jg
aam
aad
cli
ret
int3
mov
iret
test
mov
cld
pop
dec
mov
movsl
pusha
mov
test
mov
push
stos
arpl
in
ja
bound
movsl
pop
sbb
sti
outsl
pop
mov
push
jp
cli
in
insb
jbe
fucom
cld
nop
xor
repz
call
test
mov
mov
js
adc
and
push
mov
adc
mov
mov
lods
push
or
mov
push
fbstp
xchg
inc
call
mov
xchg
test
in
outsb
insl
jle
pop
cmp
push
js
outsb
pop
imul
mov
shl
xchg
push
hlt
inc
flds
pop
push
adc
mov
sbb
mov
sub
int
movsb
lahf
push
fisubrl
xchg
mov
pusha
adc
incl
cmp
scas
outsl
pop
jp
sub
out
mov
xor
stos
pop
sbb
push
dec
push
lcall
xchg
mov
nop
scas
out
sbb
adc
pusha
scas
inc
pop
inc
pusha
jge
xchg
bound
cs
mov
outsb
sbb
fcoms
fcmovne
fnstcw
addb
jnp
xchg
pop
in
rcrb
repnz
xor
xchg
mov
cmp
sub
cmp
push
jne
nop
lcall
es
xor
push
call
loopne
insl
mov
mov
inc
pop
jmp
fiadds
xor
sbb
cli
outsb
ret
jle
fldl2t
cmpsl
mov
push
adc
add
or
test
enter
sahf
mov
jns
pop
mov
cltd
dec
xor
icebp
jl
lahf
mulb
push
push
mov
lret
jecxz
arpl
mov
daa
dec
icebp
iret
es
sti
rorl
push
fs
push
js
call
daa
test
ret
popf
insl
loop
test
push
pop
iret
ret
sub
xorb
ss
xchg
popf
test
movsb
ret
push
nop
and
push
mov
inc
es
test
inc
iret
adc
adc
or
arpl
xchg
jmp
sub
xor
inc
push
jo
cmp
int
hlt
push
in
lret
leave
jb
aas
cmp
notb
dec
add
jo
sti
lret
sub
leave
cltd
aad
xor
into
xlat
dec
loopne
cmp
xchg
sub
shrb
sbb
adcb
sarl
jecxz
jno
ss
cld
sub
lea
push
jbe
out
cmpsb
jne
out
cmc
sbb
stc
push
dec
jmp
adc
in
dec
push
stc
stc
leave
jmp
enter
sub
jns
mov
inc
inc
jns
cmp
fstpt
fmull
mov
adc
add
insb
push
das
fmulp
fists
cmp
pop
sub
jg
mov
xor
lcall
lcall
fisttpll
shrb
mov
subb
int
addr16
sti
outsb
lret
stos
int3
jnp
adc
ret
movsb
cmp
add
sub
into
jbe
ja
mov
mov
cmp
push
add
dec
ret
notb
xchg
hlt
lods
daa
faddp
sbb
jp
or
push
and
xchg
pop
pop
cli
stc
andb
in
jg
lods
xorl
sub
pop
mov
out
es
je
pusha
je
scas
repnz
sub
mov
cltd
pop
popf
cmp
int3
imul
inc
jle
add
lahf
pop
jp
jmp
or
repnz
imul
pop
out
rcr
arpl
xchg
aad
repz
jge
and
xor
cmp
cli
xor
inc
mov
sbb
push
cmp
into
and
fs
enter
pusha
cmp
push
fprem
push
or
sub
pop
cmpb
mov
cltd
lcall
fisubs
arpl
adc
adc
or
sbb
adc
push
mov
xchg
out
mov
orl
adc
out
cmpsb
stos
sarl
pusha
fisubs
std
and
andb
inc
push
ret
hlt
xor
mov
xchg
test
dec
add
or
mov
push
mov
std
test
sti
test
out
inc
sbb
and
roll
sbb
push
out
jle
mov
jbe
mov
inc
into
shl
xchg
cmp
fstl
pop
jmp
out
adc
xchg
mov
mov
xchg
xor
jge
out
in
mov
mov
sub
loopne
mov
adc
int3
and
in
push
ss
mov
dec
pop
leave
mov
mov
mov
arpl
jge
rcl
imul
mov
popf
cmp
scas
call
cltd
fildll
jno
out
mov
imul
pop
add
movsl
push
int3
sbb
shll
test
cmp
arpl
sub
or
sub
mov
outsl
sti
das
mov
popa
ds
into
js
lea
rol
sub
dec
aad
outsb
aam
mov
jg
dec
xchg
dec
add
fnsetpm(287
mov
xchg
test
xor
ljmp
jb
xchg
mov
xchg
mov
aaa
xor
roll
inc
leave
jbe
bound
or
loopne
popa
ja
mov
out
xor
inc
movsl
lods
jbe
and
inc
daa
or
fs
cmp
outsb
testb
fadds
inc
pop
push
and
cmc
pop
mov
or
imul
rclb
inc
push
loopne
repz
data16
pop
or
sub
pop
shrl
or
loop
add
sbb
mov
jne
gs
inc
movl
xor
hlt
iret
iret
daa
sbb
pop
daa
mov
cld
inc
bnd
lcall
call
and
xorb
adc
mov
jmp
pop
rclb
add
jae
cmp
inc
or
lcall
fidivs
out
in
or
sub
pop
jbe
lds
stc
mov
mov
jno
mov
mov
pop
lret
jne
loopne
and
pusha
movsb
lcall
jle
data16
cmp
xchg
jp
enter
or
sbb
les
pop
cmpsl
adc
push
cwtl
jns
aad
xchg
sarb
pop
mov
leave
lcall
mov
jecxz
mov
mov
sub
jnp
ljmp
int3
pop
nop
xor
jae
shlb
imul
fidivl
sub
pop
or
scas
xor
pop
cwtl
aad
clc
loopne
and
inc
mov
shrl
mov
sti
test
sub
out
inc
push
testl
cltd
es
and
pop
pop
into
lods
insb
or
in
popf
jl
pop
xor
pop
or
dec
lods
or
dec
mov
pop
shrl
pop
mov
in
sbb
imul
inc
sarl
icebp
imul
jp
jmp
jb
pop
add
and
lret
dec
push
bnd
ret
into
inc
aam
inc
mov
loop
jg
push
pop
pop
outsb
and
ja
fisubl
lock
dec
pop
xor
push
inc
or
cmc
mov
mov
call
or
cmp
or
mov
shll
and
cmc
push
jae
sub
adc
mov
mov
push
movsl
dec
out
sub
out
mov
and
push
out
fmull
rorb
push
jbe
xchg
push
mov
pop
xchg
push
aas
xor
push
cs
jne
inc
sbb
inc
orl
push
xor
aas
int
push
jno
out
icebp
ret
or
sbb
pop
cltd
fidivrs
xlat
or
int
push
push
mov
jae
cmpsb
shrl
cmp
push
jl
fistpl
or
xor
flds
inc
neg
sbb
outsb
mov
mov
loop
dec
push
ds
test
pop
xchg
pusha
gs
shll
lret
adc
adc
add
pop
test
mov
aaa
test
into
fldenv
push
mov
sbb
movsl
outsl
mov
inc
imul
add
inc
and
jb
shrb
ds
popf
xchg
sbb
push
aas
mov
pusha
xchg
aam
mov
movsl
pop
xchg
adc
sbb
ss
dec
cmc
jge
sbb
imul
mov
or
fnsave
in
js
shll
xor
lcallw
jne
jecxz
xchg
shlb
xor
scas
xor
and
jns
jecxz
outsb
cld
cmpl
fisubrs
dec
mov
push
shrl
jmp
lret
insl
jo
in
subl
mov
inc
fneni(8087
in
testl
or
jg
mov
cmp
hlt
jnp
xor
ret
cwtl
mov
cmp
cld
sbb
imul
dec
lods
cmpsl
scas
push
xchg
push
jno
loop
loop
cmp
rcrl
jb
sti
lcall
cmpsb
sbb
nop
inc
rcll
jno
outsl
sbb
push
pop
inc
mov
ja
fwait
add
mov
fadd
sub
push
lods
or
mov
push
ja
lcall
cmp
mov
mov
jo
cli
setl
dec
bound
xchg
push
vaddsubpd
inc
outsl
mov
aaa
lret
xor
es
mov
scas
pop
test
mov
xchg
btc
cmp
pusha
iret
mov
push
and
push
cmp
push
aam
pop
sbb
sbb
leave
inc
cmpsb
ss
adc
dec
mov
push
and
or
outsb
add
aaa
in
sbb
cmp
scas
jb
pop
adc
iret
out
scas
cmp
or
jne
inc
int
mov
in
shr
add
popa
testb
cmc
add
imulb
in
or
and
and
jp
push
push
aaa
adc
jae
andb
aaa
pop
dec
dec
mov
push
xchg
push
mov
aam
mov
and
xor
les
pop
in
hlt
cmp
mov
inc
call
je
add
adc
and
xor
les
pop
in
hlt
cmp
mov
inc
jmp
enter
mov
and
rclb
dec
std
cmp
cmp
mov
loopne
mov
movsb
or
js
xchg
jle
in
orl
in
out
test
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
