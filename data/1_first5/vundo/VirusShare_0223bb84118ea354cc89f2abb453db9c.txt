add
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
lea
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
mov
push
push
call
mov
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
push
push
mov
call
pushl
call
push
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
nop
add
mov
mov
outsb
add
mov
add
add
add
adc
lret
add
add
add
popf
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
sti
gs
arpl
pop
and
outsl
ja
dec
add
push
pop
mov
xor
addl
xchg
jne
decl
adc
inc
lea
adc
mov
inc
pop
decl
pop
sarb
add
maxps
add
mov
mov
aas
ret
add
push
add
jmp
mov
lea
std
lea
adc
add
sub
loopne
add
adc
insb
incl
call
popf
adc
add
sar
dec
call
out
add
adc
push
push
push
mov
mov
enter
mov
sub
pushl
push
add
add
pop
add
mov
add
add
pop
or
add
add
lret
add
inc
dec
faddl
gs
gs
jo
sbb
fs
sbb
jb
gs
insb
imul
fs
push
gs
jb
addr16
dec
gs
push
sub
push
jbe
cs
arpl
js
xor
add
add
fldl
add
add
add
add
lods
push
add
add
add
add
add
add
fiaddl
add
add
add
jae
lahf
insb
fs
repnz
loopne
jg
inc
inc
sarb
fsts
and
cmp
dec
fsubr
lahf
pop
sbb
dec
sti
lret
jo
lea
inc
adc
lods
mov
mov
mov
cli
bound
hlt
mov
or
out
mov
pop
xorb
rorl
or
filds
add
out
nop
lods
mov
loopne
and
and
mov
sbb
ja
popf
out
xor
add
sbb
nop
push
cmpsb
xor
mov
test
data16
sub
jae
or
sub
mov
stos
das
fs
out
xor
jmp
or
cmp
xchg
int3
pushf
shll
xor
or
pop
or
lcall
add
mov
ds
fdiv
jns
or
pop
xchg
repnz
icebp
pop
push
test
pop
mov
mov
aaa
sbb
inc
add
in
push
nop
stos
dec
decb
and
xchg
mov
lcall
or
dec
jno
cmp
push
pop
mov
mov
mov
cs
xorb
hlt
cmp
inc
push
adc
adc
pop
pop
insl
clc
lods
loopne
fstpt
jge
repz
sbbl
fistpll
addr16
mov
test
and
xlat
aam
inc
ljmp
shlb
dec
xchg
cmp
int3
or
lods
cmp
xor
iret
std
fwait
jb
jg
and
rorl
mov
adc
mov
aam
jbe
sahf
add
adc
xchg
push
adc
fdivs
push
subb
mull
dec
cmc
add
inc
mov
insb
scas
push
or
xor
inc
shll
lahf
push
jne
aad
xlat
lahf
fnstsw
dec
cld
xor
push
push
sub
cmc
dec
popa
mov
mov
pushf
sti
shlb
push
add
jne
subb
call
in
add
popa
pusha
mov
jmp
add
clc
pop
aaa
xchg
push
jbe
dec
sub
mov
sbb
test
push
inc
adc
cld
xchg
or
mov
jge
jnp
push
out
out
push
fdivl
es
outsl
mov
mov
xor
popa
or
ret
pop
lods
dec
jns
mov
pop
mov
cld
testb
rorl
add
sbb
cmp
inc
test
mov
insl
ret
xchg
jnp
lret
pushf
imul
insb
fldenv
jno
xchg
movsl
pop
dec
push
xchg
lahf
in
and
add
arpl
int3
lret
pop
adc
test
stos
and
leave
xor
lret
std
in
inc
enter
in
lahf
cmp
mov
out
push
fisubl
rcl
out
add
and
push
mov
jg
ljmp
mov
hlt
pop
push
lds
push
sbb
mov
mov
cli
dec
gs
dec
mov
addr16
mov
pop
inc
or
std
pusha
fisubrl
pop
mov
out
in
fwait
sub
push
mov
cmp
lret
outsl
and
cmpsl
mov
fisubrs
dec
ja
leave
dec
or
sub
sbb
rcrl
push
repz
mov
addr16
pop
imul
loopne
fidivrs
and
pusha
aaa
sarl
adc
jecxz
inc
dec
insb
mov
hlt
scas
push
imul
leave
hlt
out
inc
icebp
nop
pop
aas
movsb
mov
jno
mov
repnz
mov
in
daa
sahf
jp
xor
and
sbb
sbb
iret
inc
and
mov
and
inc
push
fwait
fs
jmp
enter
xchg
and
fcoms
clc
das
and
or
mov
je
mov
lcall
or
cmp
clc
sub
fcoms
in
cs
push
out
and
in
xlat
or
aaa
testl
repz
dec
sub
imul
lds
rorb
push
jg
ret
repz
rcll
inc
out
stos
rcr
and
and
sbb
and
sahf
sub
rorl
and
jl
jecxz
dec
dec
cli
sub
lock
mov
scas
loopne
sarb
pop
xchg
dec
data16
aam
cwtl
sbb
dec
sub
pop
xchg
add
lea
fcmovnb
roll
cmp
sbb
enter
rcl
rolb
push
pusha
adcl
jae
fisubl
in
adc
out
inc
jle
push
repz
cmc
filds
icebp
xorb
adc
ljmp
push
mov
in
lret
mov
sbb
fisubrl
cwtl
push
xor
pop
xchg
inc
xor
jge
iret
and
jno
push
popa
jg
testl
mov
mov
pop
out
loop
push
push
mov
aas
xor
mov
cmpsb
sub
data16
js
repnz
out
push
jmp
sbb
sbb
fiaddl
inc
icebp
cmp
in
popa
cltd
push
pop
sub
leave
in
push
lds
clc
je
inc
xchg
push
add
mov
imulb
iret
sub
in
inc
loope
shrb
stos
das
loop
fisubs
mov
shlb
jecxz
sub
pop
ja
adc
xchg
adc
add
add
jnp
fdivs
cmpsb
push
cmp
ret
xchg
pop
dec
bound
sub
scas
addr16
fs
scas
push
out
push
xor
test
push
xchg
js
mov
cmpsb
adc
mov
mov
mov
xchg
inc
xor
lock
push
clc
testl
mov
insl
adcb
fdiv
loopne
jbe
cmpsb
inc
insl
cmpsb
fisubrl
dec
mov
or
xlat
xchg
xorl
inc
mov
jnp
push
mov
sub
test
addr16
iret
fucomp
xorl
inc
jns
mov
mov
repnz
not
mov
arpl
mov
add
mov
xchg
nop
fcompl
out
imul
add
xor
imul
or
mov
sub
pop
es
or
jno
enter
sarb
loop
ss
aam
mov
jmp
mov
dec
sbb
mov
scas
lea
push
sbb
adc
rcrb
mov
or
xchg
or
lods
dec
jmp
in
mov
mov
fwait
mov
iret
out
and
lods
cmc
lret
pop
sbb
jl
call
pop
sub
cmp
xchg
mov
ljmp
imul
sbb
mov
jecxz
sub
fs
jno
into
add
loop
or
cld
jns
fistpl
aam
ss
leave
adc
test
adc
or
pop
or
aas
dec
pop
dec
add
out
xchg
or
pminsw
insl
aas
inc
out
inc
call
push
sub
mov
sbb
xor
popf
adc
push
pushf
mov
ljmp
popf
aas
sub
pop
test
jne
jnp
mov
mov
dec
ret
stc
loope
into
test
jo
outsl
xor
dec
shr
das
sub
xor
and
push
push
sub
inc
jno
ljmp
pop
mov
ja
out
andl
sarb
inc
push
xor
jmp
cmp
int3
adc
adc
int3
in
dec
daa
cmp
fisubs
shrb
lret
mov
cmp
xor
lods
and
xor
test
inc
mov
testb
add
aad
ret
fwait
push
dec
ret
and
test
bound
xor
out
mov
andl
lock
xor
cmp
bnd
mov
lock
dec
cmp
dec
mov
sti
out
aaa
push
shrl
lods
xchg
cmp
test
lds
jg
mov
hlt
xor
bnd
fs
je
push
jmp
add
scas
cmp
negb
hlt
aas
lret
outsb
mov
int
jp
or
cmp
rcrl
pop
dec
test
lret
scas
or
lea
fistpl
iret
adc
adc
shrl
or
dec
pop
pop
test
popf
fwait
mov
loopne
push
loopne
cmc
or
jle
fldcw
mov
sahf
mov
icebp
movsb
js
ljmp
inc
inc
or
mov
insl
jo
mov
js
cmp
or
dec
add
fucomp
into
into
test
icebp
pop
mov
xor
enter
adc
and
insl
out
sbb
cmp
jb
add
jne
xchg
add
inc
jg
repnz
subl
dec
std
mov
jl
popf
pop
add
lret
jae
sub
loope
pushf
les
mov
out
popa
and
pop
jo
outsb
sahf
daa
repnz
std
cmp
or
out
lret
add
xchg
mov
mov
xchg
sbb
mov
mov
push
push
adc
movsb
std
or
fwait
icebp
sub
packsswb
lret
push
hlt
jle
lahf
mov
outsl
mov
pop
cmp
lret
orb
repnz
dec
push
or
mov
cmpsl
shrb
add
out
sub
lret
xlat
sbb
lret
push
add
into
int
xchg
es
jg
push
fsubrl
xor
mov
lods
mov
aam
fmuls
repz
xchg
jp
adc
xchg
data16
cmpsl
test
mov
mov
mov
jnp
vmovhps
dec
lsl
rcl
pusha
cs
or
mov
aad
movsb
or
pop
inc
leave
in
sub
sbb
cmp
push
jo
scas
idivb
lods
cmp
jae
inc
jns
hlt
daa
adc
push
dec
idivl
ficoms
or
add
mov
jne
mov
mov
sbb
out
jmp
arpl
les
dec
xchg
movsb
mov
pop
aas
cli
inc
std
mov
fimuls
mov
mov
out
sbb
pop
pop
fldenv
imul
mov
stos
push
fists
sbb
cld
sub
adc
sub
movl
inc
ja
sar
mov
rcrl
jge
mov
pop
or
loopne
call
imul
test
pop
add
into
out
dec
cmp
sbb
pop
push
xor
cvttps2pi
fldcw
mov
data16
xchg
sbbl
sbb
or
ds
dec
in
cs
and
xchg
jbe
adc
dec
test
js
jl
add
xchg
add
push
xchg
cmp
addr16
out
std
jo
mov
imul
xor
test
cs
or
adc
mov
jmp
ss
dec
cli
aaa
dec
add
loopne
mov
mov
xor
ficompl
imul
iret
lret
cmp
insb
or
and
cmp
js
sub
sbb
stos
sub
cwtl
sub
sub
xchg
lds
add
sbb
cmp
enter
sub
test
popa
pop
mov
add
ret
jnp
jecxz
xor
hlt
ds
mov
jecxz
loope
adc
fwait
and
and
movsb
mov
das
push
sbb
sub
pop
stc
sti
mov
mov
xchg
adc
out
lods
xchg
jns
out
mov
pusha
mov
sbb
mov
shrb
nop
in
cltd
lahf
add
push
jl
inc
and
mov
rcrl
fs
test
cmpsl
pop
fcmovnb
adc
ret
push
pmulhw
push
adc
sbb
in
and
jb
pop
popf
lods
repnz
and
inc
sub
xor
adc
test
shl
outsl
push
push
push
sub
push
imul
cmp
jnp
into
and
inc
sbb
ret
sbb
cmp
sbb
or
aam
outsb
jl
mov
int3
iret
leave
sahf
pop
sub
or
mov
hlt
lods
inc
data16
test
xor
inc
andb
sti
mov
cmp
and
popa
or
add
pop
shll
mov
xchg
imull
sub
sub
sub
mov
add
xchg
hlt
sub
pop
push
into
dec
test
push
movsb
lods
scas
aaa
xor
lcall
lea
sbb
in
mov
les
aam
xor
dec
outsl
and
orb
imul
insl
out
dec
hlt
cltd
mov
lock
outsb
fidivl
jmp
rcl
adc
mov
xchg
push
and
push
xor
or
roll
je
jge
pop
xor
push
repnz
dec
mov
insl
sub
jmp
outsl
cwtl
xchg
pop
repz
push
and
mov
xchg
inc
adc
aad
cmpsl
popf
or
call
and
xchg
clc
cmc
nop
xchg
in
stc
sahf
jo
mov
pop
push
xor
sub
xlat
fisubs
ds
pop
ss
xchg
pop
out
iret
fdivs
jecxz
sbb
sbb
dec
push
mov
jecxz
iret
and
je
or
ret
mov
ss
or
insb
out
fildl
das
push
xor
cmp
fwait
sbb
inc
mov
test
sub
cmpsl
lock
popf
arpl
movl
jge
or
jle
lods
fucomip
icebp
xor
lret
pusha
or
mov
in
xchg
or
popf
in
pop
sub
xchg
cwtl
mov
mov
in
dec
ja
addr16
arpl
or
pusha
faddl
popf
pushf
cmp
xor
pop
add
cli
and
flds
xchg
cwtl
das
pop
add
leave
mov
es
inc
repz
inc
lret
rcl
dec
inc
mov
jo
pop
cmp
jmp
or
or
repz
mov
inc
adcb
pop
test
enter
outsb
add
dec
fcomps
fwait
nop
jecxz
ss
bound
mov
cmp
xchg
pop
xchg
mov
push
out
mov
mov
xchg
sbb
jae
aaa
pop
mov
cltd
and
ljmp
roll
or
cs
fdivs
cmp
cmp
push
adc
sub
insb
hlt
xchg
jbe
stc
decb
fimuls
mov
adc
adc
jo
mov
xchg
adc
stos
out
mov
dec
sub
push
pushf
xchg
jl
int3
mov
xchg
inc
jns
inc
mov
popa
inc
pop
inc
or
xchg
push
js
mov
rol
fucom
negl
cld
filds
pusha
shll
sub
cmp
and
mov
or
cmp
mov
cmpsl
adcl
rolb
pop
push
dec
hlt
push
push
xchg
stc
gs
dec
cmp
orb
cmp
mov
sub
mov
insb
jge
mov
sub
add
inc
or
test
lea
xchg
mov
sub
cmp
ja
movsl
mov
or
inc
aaa
adc
xchg
add
adc
push
imul
addl
adc
cld
lods
imul
fcoml
add
cmp
sbb
sar
mov
lret
ret
pop
roll
push
push
dec
in
dec
adc
push
sbb
addr16
adc
hlt
push
pop
add
imul
adc
and
cltd
push
inc
std
fnstsw
xchg
scas
cmp
xchg
mov
loopne
in
mov
in
xchg
sbb
dec
inc
popa
xor
adc
bound
rorb
dec
inc
add
adcl
and
xacquire
mov
adc
call
cld
mov
xor
loop
pop
push
addb
cmp
fistl
dec
lcall
and
dec
push
pop
xor
xor
rcl
sbb
cmpl
andl
scas
arpl
xchg
pop
inc
jle
lcall
jb
dec
xchg
imul
push
push
sub
out
rcl
sub
loope
pmaxub
push
adc
lret
xchg
imul
fiaddl
sub
sbb
dec
adcb
pop
sbb
jno
or
cmc
int3
lds
cmpsl
fsubr
bound
nop
sbb
imul
lods
rcrb
sbbb
in
xchg
mov
mov
arpl
shr
and
std
sbb
and
call
in
lret
icebp
xor
xor
cmp
out
or
mov
mov
mov
pop
dec
or
cmp
movsl
popl
imul
mov
inc
pop
dec
lds
ss
xor
sahf
imul
push
xor
leave
or
xchg
cmp
neg
out
mov
push
popf
into
xchg
add
sbbl
jb
iret
dec
dec
adc
adc
jno
mov
int3
es
outsl
and
pop
sahf
in
aad
daa
inc
pop
loope
ss
bound
inc
arpl
aaa
dec
lds
andb
sub
push
adc
xchg
out
lcall
pop
and
xor
andb
out
test
cmp
mov
insl
sbb
add
xor
add
adc
cltd
fs
add
cmc
cmpsl
pop
popf
or
jle
ret
pop
stc
cmp
sbb
sub
mov
out
xchg
or
call
adc
mov
pop
out
aaa
inc
scas
sbbb
or
adc
pop
add
push
lret
in
in
cmp
div
or
das
mul
fbld
and
cmp
shr
and
dec
stc
mov
fisttpl
scas
jge
imul
xchg
aad
xchg
rcrl
dec
lret
nop
iret
adc
cmp
test
stos
mov
jmp
mov
stos
xchg
jae
repnz
push
inc
imul
sbb
cwtl
pop
and
rolb
je
call
insl
adc
add
adc
loopne
pop
mov
lock
and
cmp
je
aaa
and
dec
orl
sub
xchg
cs
sub
lret
nop
and
push
mov
sub
inc
in
cmpsb
scas
aad
and
add
add
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
dec
sbb
add
add
cmp
add
add
add
add
stos
jge
add
add
add
add
int
rolb
add
ja
mov
jmp
add
add
add
outsl
and
ret
add
test
add
add
add
pop
insb
add
add
add
add
add
add
jp
add
push
add
add
add
dec
add
jb
push
jb
add
dec
pop
add
push
fld
add
fcmovu
sub
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
call
cld
pushl
in
add
push
adc
jne
push
insb
leave
lea
or
in
dec
std
add
adc
inc
ror
cmp
fcoml
in
add
add
add
popl
incl
fildl
insb
mov
push
incl
incl
jmp
or
cld
or
andl
adcl
inc
rcrb
add
decl
add
stc
pushl
lcall
loopne
jne
add
adc
add
add
add
in
js
add
dec
add
lret
jbe
xor
dec
add
add
add
imul
imul
je
add
gs
je
andb
popa
outsb
jae
add
dec
add
iret
add
imul
add
push
jne
popa
push
outsl
jns
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
dec
add
stos
add
std
add
cmp
add
add
dec
ret
inc
iret
int3
adc
imul
push
pop
mov
lret
mov
fnsave
sbb
jp
push
xor
mov
jne
ljmp
push
sti
data16
push
sub
mov
inc
ret
fdivl
dec
cmp
test
je
jg
mov
push
mov
call
inc
in
shll
jmp
mov
jmp
popa
pushf
push
mov
add
xchg
push
jns
es
add
inc
mov
mov
addl
js
stos
aam
push
jo
jp
xor
cmc
cld
fstpl
bound
sbb
sbb
mov
notl
xchg
add
cld
push
mov
sub
push
iret
aam
loope
stos
pop
jbe
jg
in
mov
mov
mov
stos
push
mov
push
xlat
test
int3
fdivrl
cmp
daa
paddd
lods
sahf
push
insl
mov
gs
sbb
fldcw
mov
mov
sbb
jg
lret
xor
sbb
or
cs
bsr
fs
xchg
mov
dec
out
test
movsl
fs
mov
aas
ja
pop
sbb
and
sbbb
ficoms
inc
iret
push
pop
mov
cmpsl
imul
loop
sbb
imul
cld
popf
icebp
inc
test
and
xchg
int3
xchg
imul
cmp
lock
out
movsl
dec
adc
adc
jg
cmc
push
icebp
movsl
ljmp
push
fs
cld
ds
aad
dec
push
inc
ss
addr16
xor
adc
fwait
test
push
mov
cs
lcall
pop
jne
xchg
fidivl
and
jge
add
or
mov
sbb
enter
scas
mov
inc
dec
push
lods
jne
cmp
adc
sahf
jnp
adc
add
mov
xchg
dec
mov
jne
mov
sti
pop
ljmp
outsb
movsb
cwtl
cwtl
test
inc
jle
les
sub
lea
and
inc
sbb
mov
and
fdivrs
push
notb
es
in
sbb
ret
pop
pop
mov
ss
bound
add
add
cltd
lcall
dec
stos
add
imull
aas
aam
dec
scas
mov
cmp
divb
rorb
xchg
shl
loope
fwait
cwtl
outsb
fldt
inc
les
sub
sti
cwtl
jle
das
push
cmp
repnz
test
fwait
mov
cmc
and
jl
add
mov
cmp
icebp
in
stos
loope
les
sbb
sub
xchg
push
lret
xchg
xor
int
xlat
and
xchg
mov
das
xor
mov
pop
xor
mov
imul
xchg
or
xor
popf
jmp
pop
mov
out
xor
xchg
jge
xchg
inc
pop
add
leave
push
inc
lcall
sbb
test
popf
fsubp
jmp
roll
cwtl
cmp
jmp
push
loope
add
int
dec
xor
push
mov
mov
pop
imul
packssdw
ds
push
arpl
scas
subb
inc
dec
sbb
mov
and
add
scas
mov
pop
inc
int
imul
jb
rolb
pop
js
sub
mov
sub
in
cmp
cmp
jg
movsb
enter
jg
inc
fwait
sub
xchg
dec
loope
rolb
test
xchg
aaa
test
or
add
mov
aam
rcrl
adc
data16
lds
ja
jl
cmp
cmpsl
rcrl
mov
mov
loop
xchg
adc
mov
sahf
adc
dec
shl
xchg
sbb
mov
gs
xchg
add
hlt
and
mov
xor
adc
add
stc
and
xchg
pop
out
jno
aam
std
rorb
sub
stos
roll
fistpll
divb
or
and
sub
jle
jne
insl
pop
movsl
and
imul
mov
push
out
mov
or
jge
popa
pushf
aam
cmp
push
stc
shrl
cmp
add
sbb
mov
aas
dec
fldz
sbb
ja
xorb
enter
xchg
mov
mov
cwtl
pop
fwait
or
loop
insl
imul
jl
loopne
add
jns
push
dec
xchg
and
das
bound
adc
dec
shll
cmp
out
fwait
cmpl
ret
outsb
pop
inc
mov
cld
enter
xor
xor
cmp
add
cwtl
hlt
xchg
mov
push
ret
pop
nop
fdiv
jo
into
insb
mov
mov
fadds
ja
dec
lds
ss
jmp
je
rclb
loope
inc
mov
add
add
scas
mov
rorb
lods
stos
lret
aam
fwait
aaa
fcmovu
xor
dec
jbe
ss
jmp
dec
jne
popf
movsl
data16
pop
ret
or
add
fs
ljmp
and
lods
add
sub
sbb
arpl
stos
out
xchg
loop
jb
xchg
sub
ret
push
mov
cld
adc
sahf
das
rorl
leave
cld
btcl
push
jo
dec
pop
aam
lahf
or
js
faddl
rcrl
fidivrl
and
movsb
add
into
dec
in
addr16
xchg
adcb
int3
push
sub
inc
xor
lods
push
mov
lds
jp
mov
aam
pushf
loope
loopne
mov
rcrb
inc
xlat
test
out
adc
rcrb
fildll
and
mov
mov
shll
call
dec
xor
aad
cmpsl
push
sbb
dec
xchg
add
jb
mov
aaa
mov
mov
std
sub
daa
jmp
lods
pop
cltd
add
cwtl
mov
imul
and
jge
adc
loop
sub
call
cmpsb
add
call
in
sahf
pop
and
dec
lea
insb
mov
cmpl
js
pop
jns
xchg
scas
xor
mov
mov
sub
ds
sbb
mov
sbb
jne
icebp
adc
xor
je
mov
fnstsw
lret
adc
inc
sahf
push
sbbb
daa
cmp
hlt
je
decb
or
xchg
xor
pop
repz
jg
shlb
lahf
ljmp
shr
inc
aad
mov
imul
mov
and
cmp
sub
push
insl
iret
inc
in
out
add
aaa
rcr
repz
mov
or
aad
call
aam
inc
sbb
ds
add
in
loop
dec
inc
cs
cmp
cld
daa
xchg
mov
push
cmp
test
aaa
sbb
push
push
roll
dec
xor
lea
pop
xchg
jb
ret
xchg
rcrl
push
js
dec
inc
repnz
cmp
enter
mov
mov
jbe
or
pop
jp
and
in
mov
cmp
mov
es
jmp
jp
sti
and
mov
sub
mov
sbb
cld
shlb
dec
mov
adc
xchg
sar
ret
in
imul
inc
bound
xchg
inc
jb
or
test
ljmp
fs
xor
aad
jnp
arpl
lret
dec
mov
stos
rcr
daa
lahf
and
cmp
lods
in
mov
inc
lcall
sbb
xor
pop
fwait
inc
add
xor
lock
cmp
and
mov
mov
lods
push
or
outsl
stc
push
ret
dec
sub
std
fucomp
push
and
mov
popf
mov
sub
jnp
std
lcall
jb
orl
pusha
shlb
and
es
les
sahf
push
add
popa
or
sti
cmp
inc
cmpsl
jbe
stos
aam
enter
js
push
fdivrl
or
rolb
gs
inc
adc
sub
xor
mov
lods
in
cmpsb
clc
je
cli
sbb
cld
inc
scas
jle
add
sbb
stos
in
dec
jb
leave
sub
nop
repnz
mov
xchg
fstps
sti
aad
inc
dec
sub
sbbb
xor
cmp
and
xchg
or
aam
lods
daa
cmp
pop
clc
mov
cmc
icebp
sub
in
test
push
xor
pop
xchg
mov
sbb
xor
and
in
sarl
or
jp
and
popf
push
pop
cli
xchg
xchg
inc
in
mov
adc
xor
xlat
lods
testb
jl
jmp
movsl
xchg
in
enter
xor
jns
mov
cmp
das
pop
sarb
and
inc
inc
aam
rcrl
mov
inc
loope
cmp
out
mov
push
cmc
or
and
mov
cs
sahf
cmp
xlat
adc
mov
repnz
loopne
out
imul
push
mov
les
ljmp
je
loopne
xorl
push
dec
fidivl
test
sbb
ror
or
pop
mov
mov
cmpsl
ja
cmp
xchg
and
pusha
pop
xlat
lock
int3
lock
xchg
data16
xlat
inc
xchg
adc
shl
mov
std
fnstsw
test
popf
pop
xchg
popa
addl
pop
fildl
dec
insb
mov
sub
cmp
mov
xlat
push
push
push
dec
pusha
shl
int3
daa
pop
fwait
dec
xor
imul
inc
sti
insl
sbb
decl
pop
daa
daa
test
fnstsw
sahf
push
jo
push
jae
bound
outsb
jbe
stc
pop
ljmp
popf
push
sahf
fisttpl
mov
jae
movsb
add
lret
lcall
jns
dec
cltd
fstl
shll
dec
call
push
sbb
mov
sbb
aas
outsb
or
test
cld
out
lods
ja
pop
inc
mov
pop
adc
jp
std
pushf
movsb
insl
popf
push
sbb
pushf
sub
push
mov
push
mov
divl
aam
insb
mov
push
stc
shrl
loopne
in
push
xor
sarl
pop
xor
addr16
lret
movsb
mov
loop
hlt
leave
out
jo
xlat
xor
dec
adc
mov
xor
and
xorb
aaa
pop
pop
jnp
mov
jns
inc
std
cmpl
cmc
rcrb
stos
inc
or
xor
fdivs
lret
test
sub
mov
in
test
jecxz
stos
pop
movsl
adc
push
dec
jo
xor
inc
adc
sub
aad
lods
add
in
pop
insl
xchg
xchg
pop
sbb
stos
mov
cmpb
insb
xchg
std
flds
das
sbb
scas
stos
xor
mov
ror
pop
popa
lock
inc
pop
sub
scas
and
test
adc
out
add
jp
leave
lea
xor
cmp
mov
scas
call
mov
add
pushf
and
xchg
call
pop
jae
inc
iret
aad
mov
pop
shll
lret
xchg
hlt
mov
popa
mov
aaa
jne
outsb
mov
xor
and
jno
adc
mov
loope
ds
popa
mov
stc
or
fadd
mov
mov
adc
ret
pop
mov
mov
dec
push
lahf
cmpsl
sarl
xchg
xchg
outsb
adc
mull
push
mov
xchg
repz
stos
xchg
sbb
call
jb
imul
sti
inc
jge
adc
mov
mulb
sbb
cmpl
scas
xchg
mov
inc
iret
clc
and
rol
andl
mov
scas
jb
mov
dec
dec
outsl
sub
push
pop
xor
and
cmpsl
les
shll
rorb
push
data16
dec
negl
mov
sbb
je
inc
xchg
out
repnz
xor
cmpsb
sub
dec
inc
aam
mov
mov
mov
add
pop
pushf
repnz
cld
popl
ret
cld
adc
or
ret
xor
subb
hlt
push
pop
push
fistpll
sub
rcl
insb
fdivr
addr16
arpl
and
push
and
mov
lcall
mov
push
es
loope
dec
mov
mov
inc
xchg
inc
in
out
les
or
lods
xchg
add
push
and
cwtl
js
jl
inc
das
xor
in
pop
mov
shrl
pop
insb
add
in
fstl
outsb
clc
in
insl
movsl
xor
adc
xchg
xchg
cld
mov
push
aad
sub
sbb
sub
movsb
stos
outsb
mov
jmp
mov
jne
push
pop
ss
mov
cwtl
push
cmpsl
push
mov
not
hlt
dec
into
sbbb
fcmovu
jb
es
cmpb
pop
inc
and
mov
pop
mov
test
add
test
mov
jno
movsb
sbb
ja
sarl
stc
mov
xchg
sbb
in
scas
and
xor
or
lds
adc
in
iret
jb
cmpsl
or
xchg
push
pop
sbb
loopne
sarl
pop
sub
dec
xchg
popa
sub
pop
cmpsb
mov
xchg
lods
xorb
rcll
lods
paddsb
lret
sbb
bound
inc
inc
or
jecxz
adc
notl
stc
xor
int
out
repnz
movsl
lock
enter
and
div
hlt
mov
sub
jle
fldl
lar
cmc
dec
sbb
dec
aam
sbb
xchg
push
icebp
xlat
and
dec
or
lret
xchg
in
nop
test
jbe
mov
inc
or
sub
push
in
push
xchg
jp
adc
sub
shrl
popa
jmp
cmp
or
mov
loopne
jbe
test
inc
shr
repz
and
push
scas
lret
xor
add
shll
xchg
cmp
ret
or
sbb
rolb
inc
loope
cmp
mov
imul
insb
mov
mov
arpl
mov
lahf
adc
aam
repnz
mov
xchg
shrl
negb
cmpsl
adc
cmp
iret
sub
fildll
bound
push
frstor
lahf
sub
mov
jg
jae
mov
mov
xchg
iret
mov
xor
inc
test
in
adc
xor
jae
sub
xchg
shlb
jae
push
cwtl
lods
inc
fstpt
mov
mulb
pop
mov
ret
cld
push
sub
je
shrl
stos
inc
jno
xchg
dec
outsb
icebp
out
xchg
lcallw
mov
inc
or
dec
test
int
or
insb
int
shlb
sbb
mov
sahf
leave
jo
cmp
bound
cwtl
dec
mov
shl
ret
in
mov
cwtl
sub
cmpsl
xchg
push
mov
push
ss
leave
test
push
dec
jbe
fisttpl
aas
es
sub
and
lea
shl
mov
mov
sbb
stos
jl
xor
jg
mov
rcl
test
ret
out
nop
push
push
add
pop
outsl
gs
push
xor
sbb
jmp
cmpsb
test
cmp
mov
sbb
in
xorl
loop
or
xor
push
jl
imull
jmp
jg
mov
adc
in
dec
outsl
push
jg
xchg
and
jae
js
jle
push
lret
lods
repnz
in
or
mov
jns
fs
push
leave
or
dec
mov
pushf
pop
call
push
test
cmp
rolb
bound
jmp
out
mov
jmp
out
pushf
stos
aas
arpl
or
and
and
addl
jne
lock
cmp
aam
push
sti
adcb
cld
sbb
fistpll
sbb
mov
or
iret
jg
insb
jle
sar
shl
nop
mov
sub
insb
hlt
mov
jle
dec
mov
push
xchg
xchg
repz
je
sti
aad
test
into
adc
mov
mov
mov
xor
test
pop
mov
call
cmp
out
push
mov
pop
pushl
xchg
ja
xchg
inc
dec
xchg
neg
mov
clc
push
mov
inc
sbb
mov
pusha
jmp
add
adc
aad
sub
insl
icebp
test
in
mov
push
jb
dec
lret
or
les
xor
sbb
sub
movsl
xchg
sbb
mov
call
repz
adc
add
fistl
push
push
pop
ret
imul
cltd
jmp
cltd
sbb
xchg
inc
push
xor
ret
iret
aas
daa
mov
jmp
aas
addr16
ljmp
stos
or
sub
or
mov
inc
bound
and
cmp
mov
imul
and
iret
rorb
pusha
xchg
bound
pusha
fcmove
call
addl
or
fstpt
or
sbb
loope
xor
push
mov
lods
out
bound
icebp
ja
daa
jle
push
jb
fstpt
lret
pop
repnz
sub
add
mov
adc
sub
sbb
jns
js
popa
test
aam
mov
xor
mov
stos
outsl
cs
jo
jne
mov
add
imul
stos
push
sbb
mov
push
jge
addr16
pop
adcb
push
mov
dec
test
push
mov
fdivp
pop
roll
popf
inc
adc
lock
mov
mov
test
cld
stc
negb
adc
sahf
sahf
mov
jo
xor
mov
pop
mov
pop
movsb
jae
sahf
sbb
sarb
xor
fnstcw
les
push
sub
movsl
je,pt
fwait
xor
lret
loopne
xchg
mov
mov
mov
hlt
xor
insl
fsubrl
adc
cmpsb
xor
rcrb
cmp
jb
cmp
es
add
movsl
sub
outsb
test
shrb
cli
es
xchg
pop
lds
jae
xchg
or
pop
mov
loopnew
dec
inc
dec
sub
and
popf
scas
jo
and
pop
mov
jo
lds
nop
adc
repnz
push
lock
loopne
aas
and
dec
rcrb
ss
lcall
sub
mov
aaa
cwtl
cmp
inc
arpl
and
fadds
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
add
addb
int
add
add
adc
add
call
add
lea
add
adc
add
addb
add
stos
stos
add
ja
mov
incl
add
add
add
xchg
push
or
add
add
add
add
add
inc
add
add
dec
add
add
add
add
push
fildl
add
add
stos
and
add
add
fs
outsb
add
pop
je
fs
in
leave
mov
or
clc
jecxz
sbb
jb
add
push
inc
pop
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
incl
adc
add
push
adc
jne
mov
pop
addl
add
jge
scas
incl
add
incl
add
add
add
push
lea
test
call
push
cmp
data16
loopne
loopne
std
pop
add
incl
jb
add
enter
add
push
std
test
pop
enter
ret
add
push
adc
adc
hlt
inc
adc
add
add
add
add
add
add
inc
inc
insl
je
imul
cmpsb
das
add
insb
imul
insl
add
aad
gs
gs
add
gs
js,pn
push
into
inc
push
insb
add
insb
add
outsl
insb
jne
outsb
gs
je
je
je
insb
add
mov
add
add
add
jmp
and
sar
xor
gs
data16
sub
ficoml
pushf
sar
ds
jne
ds
sahf
aam
popa
out
lods
mov
add
lock
add
pop
dec
outsb
jecxz
out
mov
xor
mov
test
xor
sub
int
jnp
adc
cmp
in
adc
int3
sbb
jmp
sub
dec
and
xchg
ss
aad
popf
jno
adc
fwait
fs
push
loope
sbb
cmp
sub
rcll
cwtl
mov
push
and
sub
das
test
fwait
mov
inc
mov
xor
jae
xchg
push
lcall
push
fadd
xor
jo
cmpsl
dec
aaa
clc
jno
add
pop
sarl
int3
add
add
wbinvd
mov
mov
add
xor
outsb
sbb
dec
add
stos
nop
pop
pop
pop
mov
jg
lcall
sbb
or
rorl
adc
push
sti
or
jo
test
mov
mov
cmp
push
mov
pop
jb
lret
fnsave
loop
test
pop
fists
fdivp
and
push
movsb
inc
lcall
in
mov
xor
adc
pushf
cs
fcmovb
leave
jecxz
ret
and
test
scas
push
pop
loope
pusha
loop
push
rorl
lcall
adc
je
lret
and
lret
out
push
ss
cmp
stos
lea
jg
iret
xor
shlb
jno
pop
in
test
cmp
enter
fs
mov
mov
jmp
fs
data16
pusha
dec
xor
push
add
in
pop
inc
sub
mov
and
xor
or
inc
push
idivl
push
adc
fidivrs
push
rep
out
ret
sub
js,pt
in
divl
andl
sti
pop
xlat
mov
insl
clc
std
orl
gs
faddl
outsb
xchg
adcb
mov
or
dec
mov
push
inc
stos
cmp
inc
pop
stos
jae
mov
dec
movsl
lods
call
loop
aaa
test
pop
push
and
in
xchg
jns
jne
add
push
cmp
clc
and
inc
push
lret
sub
stos
xor
pop
sub
xor
xchg
sbb
inc
mov
push
add
mov
dec
popf
jns
rcrb
xchg
sarl
fnstenv
xchg
dec
pushf
movsl
cmp
and
testb
pop
add
dec
in
inc
mov
mov
xchg
push
sub
outsb
loope
mov
fdivrs
popa
cmp
dec
pop
mov
mov
pop
jns
fisubl
add
nop
iret
in
dec
pop
sbb
pop
fidivrs
mov
mov
cmp
cmp
mov
or
xor
dec
ljmp
adcb
sbb
xor
xchg
inc
mov
add
jecxz
cmp
push
negl
leave
aaa
mov
mov
or
subl
cmpsb
dec
arpl
sub
mov
test
lahf
mov
pop
stos
inc
mov
push
adcb
sub
pop
xor
cmc
call
lods
inc
inc
arpl
fmuls
xchg
shlb
xor
xor
mov
iret
mov
dec
or
jl
cld
pop
test
pop
jnp
cmp
into
inc
inc
pushf
jns
shrb
clc
sbb
pop
mov
push
jge
cmc
pop
xchg
dec
sbb
add
sbb
adc
outsl
xor
pop
dec
pop
adc
rcrl
stos
fisubrs
push
imul
dec
pop
push
arpl
or
dec
add
xchg
xchg
jl
pop
nop
cmp
sub
sbb
ljmp
rcr
cmpsb
es
jp
out
or
shrb
lahf
xor
int3
xchg
lret
fsubl
or
add
cmpl
xchg
add
inc
loope
cld
clc
cmp
lret
in
mov
push
mov
inc
xor
mov
outsl
jb
nop
stos
ret
icebp
inc
fsubs
mov
mov
lods
sbb
jle
xor
mov
mov
xor
push
out
pop
jp
push
or
xor
lret
or
xor
cmp
mov
push
cs
add
leave
push
mov
jge
rcr
lods
cmp
cmpsl
out
andb
daa
outsb
icebp
push
in
jp
pop
lea
pop
adc
or
fs
es
jbe
sub
testl
xchg
sub
icebp
dec
and
or
inc
insb
inc
xor
lods
lahf
sbb
pop
and
test
adc
pusha
xor
mov
push
xor
pop
sbb
jbe
lcall
addb
leave
scas
mov
and
and
lods
dec
andl
jmp
mov
adc
ss
dec
sub
test
imul
xchg
mov
and
adc
insl
xor
add
pushf
xor
sahf
push
gs
mov
stos
iret
aam
outsl
xchg
clc
enter
sub
push
cmp
cmp
jge
jmp
sbb
xor
xlat
sbb
cmp
inc
mov
or
sahf
ficoml
daa
iret
pop
outsb
jbe
loop
test
pop
fcmovu
into
cmp
lds
fmuls
ror
pusha
sarl
push
in
jmp
sub
mov
mov
aaa
pusha
push
adc
jb
pop
or
shlb
mov
test
or
test
pop
fmul
es
call
test
out
clc
xchg
pop
pop
dec
or
jge
out
out
stos
lcall
add
sti
jge
cld
jge
jl
add
cwtd
adc
xchg
jo
mov
xor
ficoms
mov
shrb
push
xlat
repz
xchg
sub
cmp
sahf
orb
movsb
fnstcw
push
mov
inc
mov
test
nop
mov
add
les
and
xchg
sub
out
iret
call
leave
sub
dec
addr16
xchg
ja
mov
sub
pushf
test
orb
dec
loopne
push
pop
in
sbb
jl
cmp
loopne
sti
adc
rol
jns
jnp
mov
mov
pusha
cmp
push
repz
in
stos
add
fucomp
sub
insb
lds
push
cmpsb
mov
test
adc
push
repz
iret
jnp
fwait
loop
popf
cmp
dec
std
ret
insb
pop
js
sbb
scas
mov
push
mov
iret
add
mov
sti
fistpl
hlt
popa
jmp
fucomi
gs
out
fsubl
out
lods
stos
cmp
fdivl
fwait
into
movl
mov
ljmp
popf
lods
push
lods
mov
add
cmp
jb
or
mov
jae
and
add
clc
jb
into
cmp
jecxz
into
cmp
xchg
adc
push
stos
out
scas
js
push
mov
or
dec
sbb
cmp
fidivrl
push
xorl
incb
pop
loop
xchg
jle
imul
imul
mov
mov
test
fcompl
inc
out
movsb
xchg
lock
xor
scas
test
cmc
xlat
and
or
hlt
cmp
jg
sahf
xchg
mov
mov
aas
in
call
lret
and
cmp
mov
adc
mov
scas
dec
xor
lods
mov
or
in
test
xor
fildl
pop
lcall
loope
mov
in
cmc
xchg
pusha
fldt
loopne
pop
insb
aas
pop
nop
into
jbe
je
adc
loopne
loope
aad
mul
das
or
dec
and
and
lds
ret
sub
xchg
sarb
push
inc
mov
mov
jl
popf
sub
adcb
mov
popa
test
loope
xor
inc
dec
jp
and
pop
cs
sbb
or
mov
fdivrp
jns
jecxz
lods
test
or
lock
adc
bound
not
mov
mov
aam
xor
insb
shrl
inc
outsb
xchg
pop
aad
pop
jno,pn
dec
andb
iret
pop
mov
adc
adc
call
in
arpl
inc
and
shrl
mov
out
mov
inc
es
sbb
jne
mov
repz
jp
repz
jb
jle
jmp
shl
clc
mov
jo
scas
div
lahf
cmc
xchg
pop
ret
das
pop
xchg
lods
mov
ror
push
cmc
aas
sbb
testb
and
dec
ja
pop
mov
lahf
mov
mov
cltd
cmp
mov
push
inc
push
lock
pop
lea
push
mov
dec
mov
or
addr16
ljmp
test
or
dec
mov
fcoms
loopne
or
rorb
ljmp
not
imul
out
pop
push
dec
cmpsl
call
imul
cmp
adc
or
cmpsl
rcll
sub
mov
inc
push
and
loope
int
cli
sbbl
std
out
stos
lcall
outsb
mov
cmp
enter
pop
mov
sbbb
xchg
mov
scas
pop
loopne
aaa
into
xchg
mov
mov
cmp
cmpsl
dec
and
mov
xchg
xchg
jae
insb
mov
jge
xor
sub
insl
loopne
lret
xchg
jp
pop
push
jae
push
mov
das
dec
xchg
ds
icebp
xlat
xchg
xor
arpl
inc
into
movsb
imul
fcoml
add
push
sarb
dec
fistl
inc
xchg
in
shl
in
sub
out
pop
test
and
test
sbb
aaa
pop
jge
jp
daa
cli
ljmp
dec
push
sahf
sub
xor
movsl
push
and
js
push
xchg
ja
andb
test
inc
scas
cltd
jg
inc
xlat
hlt
dec
shl
ret
cmpsl
pop
call
adc
shll
in
inc
push
push
pop
or
shrb
mov
pop
cmp
xor
push
icebp
inc
hlt
in
arpl
sbb
and
push
push
outsl
jmp
dec
fisttpl
mov
pop
data16
movd
xchg
in
cs
lret
ret
mov
ret
add
adc
mov
cmp
lock
mov
xlat
fdivrs
fsubl
std
movsl
xchg
shlb
psrlq
xchg
lea
imul
mov
adcb
aad
in
fisttpll
scas
scas
aas
cmp
sbb
push
andb
xlat
out
cli
je
addr16
imul
int3
movsl
shr
fadds
div
popf
jg
fiadds
sbb
adc
cmc
jo
pop
fwait
sbb
sbb
data16
adc
dec
lret
js
xchg
mov
xchg
xor
sbb
iret
outsb
lds
and
loope
hlt
icebp
pop
jae
xchg
add
pop
mov
cmc
mov
push
mov
iret
xchg
sbb
jae
and
dec
xor
mov
stc
xor
cmp
jnp
and
loopne
xchg
es
jno
in
cwtl
or
xor
mov
fbstp
shll
aas
dec
mov
ds
addl
pop
inc
pop
xor
jg
rcr
es
inc
mov
cmp
out
lret
jo
dec
dec
jno
jp
les
data16
cmp
ljmp
fdivr
add
and
add
mov
lret
ret
stos
or
push
ja
inc
cli
int3
xchg
fs
sbb
dec
xor
dec
sub
jns
pop
aas
mov
add
add
mov
sub
int3
lret
push
mov
divb
lea
mov
mov
popa
inc
jle
outsb
sub
cld
in
push
inc
mov
inc
std
test
xchg
sbb
xor
and
ja
je
into
lds
fnop
stos
cmp
add
jg
lea
push
mov
or
cmp
mov
enter
sti
idivb
lock
in
inc
cmp
js
lahf
add
xchg
cld
mov
lahf
roll
or
xor
xor
subb
addl
aaa
mov
sub
insl
mov
mov
test
repz
mov
inc
fnstcw
mov
faddl
mov
push
dec
outsb
cwtl
lock
jp
mov
push
push
inc
aaa
int3
inc
fbld
icebp
ja
mov
lods
pop
pop
pop
xor
mov
lock
ja
mov
dec
xchg
in
inc
outsb
and
aas
cmp
insb
adc
xchg
jb
xor
loop
push
dec
sub
sbb
dec
inc
into
leave
cltd
stos
mov
fcoms
dec
in
jns
lods
test
sbb
jno
mov
sbb
neg
popa
mov
cli
imul
add
lret
xchg
dec
out
mov
jecxz
shl
jns
mov
adc
pop
mul
test
pop
xchg
cltd
and
jb
lcall
push
sbb
xor
jmp
mov
mov
in
aas
push
lds
mov
lcall
pop
mov
cltd
lods
rorl
rcl
dec
push
push
adc
push
pop
inc
inc
adc
call
int
lods
add
repnz
xchg
xor
xlat
inc
popa
adc
mov
lea
lock
and
mov
or
aaa
fucomp
or
push
test
iret
jb
and
das
push
out
popf
cmp
rol
mov
ret
inc
cmp
jno
icebp
jl
sti
push
in
bound
pop
sbb
push
test
and
repnz
repnz
xlat
in
or
mov
into
pop
lret
lds
adc
fldl
jae
mov
jo
xlat
pop
faddl
lds
sbb
mov
mov
dec
fbld
dec
test
imul
not
mov
inc
xor
push
in
aam
pushf
scas
icebp
mov
mov
sti
xchg
mov
dec
dec
inc
mov
cli
fwait
push
mov
inc
dec
sbb
aad
jl
test
mov
jge
in
add
imul
repz
stos
inc
or
sbb
stos
mov
lret
out
cmp
aas
out
dec
mov
mov
fs
insb
push
mov
push
adc
rclb
mov
insl
pop
ds
pushf
outsl
popa
xchg
pop
insl
scas
or
mov
imul
je
mov
lahf
stc
out
insl
insb
daa
hlt
adc
mov
lcall
ffree
dec
je
jge
jo
cmp
xchg
pop
lcall
push
je
pusha
jae
or
daa
sub
sahf
out
mov
cmp
loop
sub
xor
enter
mov
fistpll
dec
jl
sti
mov
xchg
mov
push
mov
fs
cmp
iret
sbb
xchg
lcall
and
out
in
xchg
mov
xchg
setb
movsl
mov
call
shl
aas
pop
aad
rcr
es
lods
ret
shlb
xlat
fsubrl
add
and
jle
xchg
call
dec
lret
mov
xor
xor
mov
push
int
cmp
mov
mov
lods
aaa
mov
bnd
cmp
sub
shll
cltd
dec
daa
cmpsb
add
fistl
in
dec
pop
and
ffree
andb
cwtl
add
mov
lods
aad
mov
mov
mov
test
push
daa
xchg
loopne
dec
outsb
je
add
mov
mov
cmp
imul
jge
push
ljmp
and
xor
sbb
inc
cmp
in
sar
test
xchg
mov
inc
push
push
jle
xchg
mov
cli
and
inc
cmp
add
ja
mov
scas
mov
movsl
sbb
popf
in
add
add
lahf
mov
lods
jo
loop
fdivr
dec
dec
lret
adc
js
mov
or
into
inc
xchg
popaw
repz
dec
dec
pop
cmp
outsl
andb
mov
mov
hlt
jbe
js
cmp
xchg
arpl
xchg
lea
sahf
adc
sbb
aad
dec
lods
mov
lahf
movb
xchg
clc
push
xchg
movsl
test
sbbb
into
mov
jl
leave
xlat
jns
dec
stos
and
xor
std
mov
xchg
or
add
jnp
dec
adc
pop
arpl
int3
sub
pushf
xchg
adc
aaa
mov
call
lods
mov
ss
aaa
adc
sbb
fsubrp
rcrl
cwtl
shrb
pushf
mov
enter
and
add
pop
mov
adc
lahf
stc
cmpsl
xchg
mov
stos
lret
mov
cltd
pop
popf
js
xlat
mov
mov
add
loopne
cmpsl
push
cmp
cmpsl
push
cmp
dec
ljmp
and
and
and
clc
movsl
and
inc
movsb
jge
and
imul
inc
adc
scas
enter
hlt
lcall
sbb
cmpb
cmp
mov
xchg
cmp
enter
inc
adc
xor
popf
mov
hlt
jp
stos
adc
rcll
dec
fdivr
lret
adc
cs
fdivrl
and
out
cmpsb
push
stos
aad
adc
pop
push
sbb
pushf
mov
jnp
out
icebp
out
aam
adc
and
xchg
jb
bound
pop
mov
xchg
lret
lahf
lret
pushf
jecxz
outsl
das
mov
popa
std
jo
jno
xor
div
and
ret
xchg
dec
sarb
mov
rcl
cmp
imul
data16
xchg
stos
fnstcw
aaa
cld
sbb
mov
cwtl
xor
push
scas
add
aaa
mov
mov
jb
insb
ficompl
movsl
inc
pop
stos
subl
fcmovu
jbe
das
xor
js
cmpsb
push
les
and
mov
or
pop
inc
xchg
xchg
dec
sbb
inc
ds
add
les
xor
push
dec
add
les
sub
inc
sub
scas
jb
imul
lcall
cmp
ljmp
sub
mov
icebp
sub
xchg
and
addr16
in
or
add
sub
add
adc
inc
test
mov
jb
sub
lret
ds
push
xchg
sub
lret
push
test
arpl
jno
mov
scas
mov
imul
jg
rcl
aaa
arpl
orl
push
and
inc
mov
and
js
and
fxch
movsb
xchg
mov
xor
shl
dec
add
sub
cmp
out
ret
mov
add
add
jmp
add
add
jnp
add
add
add
add
add
add
add
add
fildl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
mov
ja
mov
jo
jo
jae
jb
jo
add
incl
add
fildl
orb
jo
gs
add
add
add
add
add
add
add
add
add
and
add
outsl
shrb
add
add
xchg
add
add
add
jne
sbb
filds
arpl
jae,pn
push
arpl
je
or
add
jne
push
inc
aaa
add
inc
js
mov
mov
adc
mov
lea
inc
testb
cs
das
xor
ret
add
decb
enter
pop
push
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
jae
adc
adc
mov
lea
add
adc
mov
clc
inc
roll
add
add
incl
cmp
add
add
push
lock
or
add
add
fiaddl
addb
add
add
mov
add
clc
add
add
push
imul
cs
dec
outsl
imul
arpl
outsl
mov
popa
add
inc
push
popa
gs
cmc
add
add
gs
addr16
push
dec
jb
repnz
imul
arpl
add
add
add
cmpb
add
adc
mov
add
out
cltd
imulb
mov
bound
add
mov
cmp
mov
bound
out
gs
xlat
les
sbb
jmp
sub
fdivp
insb
add
push
mov
loop
pusha
sbb
adc
xor
xchg
pop
push
in
cmpsl
add
xchg
pop
out
jmp
jmp
dec
movsl
test
or
pop
push
sbb
mov
xchg
or
inc
stos
inc
push
stos
mov
push
les
inc
out
repz
sbb
mov
fst
out
cld
insb
cltd
ficomps
lods
lahf
adc
mov
cmp
jbe
mov
clc
sub
iret
in
stc
outsl
fs
adcb
adc
adc
in
movsb
push
and
sub
xchg
xchg
gs
mov
jmp
shlb
jo
enter
inc
js
fs
scas
cmc
inc
sahf
ja
ret
pop
mov
cli
xchg
cmp
pop
cmp
insl
or
mov
fidivs
sbb
cmpsb
ss
sbb
into
out
out
scas
cmpsl
loopne
inc
faddp
outsl
iret
mov
shufps
pop
xor
loope
sub
xlat
fildl
and
mov
push
jecxz
repnz
xor
jp
das
and
or
aad
leave
adc
pop
xor
jmp
dec
xor
lahf
sbb
jns
mov
out
sub
popf
out
hlt
inc
ss
sub
pop
cmp
jge
jp
out
ret
leave
mov
mov
cmpsb
mov
xor
idivb
in
push
clc
popl
push
fbstp
outsl
dec
dec
aam
lods
lcall
inc
fnstenv
popf
inc
sub
mov
lret
test
out
mov
pop
mov
xchg
push
nop
repnz
jbe
sahf
in
cs
xchg
pop
je
sti
and
je
adc
movsb
rorl
inc
add
sti
mov
adc
xchg
into
and
repnz
stos
mov
dec
cmp
pop
jge
or
jecxz
sub
icebp
sub
flds
lcall
push
cltd
ja
icebp
push
and
and
cmp
lock
and
lret
ficomps
aam
enter
xchg
add
int3
or
xchg
test
xchg
fidivs
push
insb
adc
arpl
xchg
mov
dec
jnp
js
mov
andb
fstpl
mov
sub
push
ficoms
mov
or
pop
cmp
sbb
sbb
mov
stc
decb
xor
movl
in
lret
pop
xchg
push
mov
and
pop
stos
xor
add
into
mov
mov
cmp
jmp
shrl
xor
ds
mov
xor
in
dec
ret
xchg
repnz
lea
loop
sub
aaa
icebp
out
dec
aas
jle
pop
sarb
les
cld
rolb
xchg
push
aas
sar
push
push
call
jb
enter
xchg
jbe
jmp
std
int
or
mov
jp
hlt
or
inc
sbb
push
or
ret
cmp
pop
daa
mov
xor
add
nop
dec
adc
xchg
push
dec
mov
out
or
sub
or
sub
scas
jl
icebp
add
inc
mov
ret
add
je
fldcw
sub
sbb
imul
push
repz
sti
sti
sub
xchg
dec
imull
mov
loopne
cmp
adc
push
enter
ljmp
icebp
jne
add
lods
push
mov
xchg
adc
mov
fucomp
iret
scas
mov
add
add
in
jge
xchg
or
jmp
add
lcall
in
add
and
lret
in
push
jmp
out
adc
push
pop
sub
push
flds
and
or
push
insl
sbb
addb
push
js,pt
and
pushw
sti
addr16
pop
mov
jae
bound
push
adc
mov
hlt
inc
sub
mov
repz
xor
dec
ret
push
ret
mov
das
loopne
adc
mov
mov
xchg
sbb
cs
rol
shrb
dec
xor
cmp
add
pop
aaa
mov
add
lock
mov
mov
aas
lods
sub
ror
pop
pop
in
rorb
movsl
or
sbbl
enter
sub
add
sbb
jl
ds
pusha
sub
lret
lahf
vphaddbw
jle
sete
xor
sub
rolb
in
lock
fisttps
in
inc
aas
push
push
pop
pushf
imul
aas
jne
cltd
bound
mov
rolb
sahf
loopne
push
test
icebp
mov
inc
sbb
movsl
stos
jbe
stc
push
scas
xchg
adc
lcall
loope
fcoms
pop
mov
in
jo
sti
push
pop
mov
int3
dec
push
jmp
mov
jg
fs
test
fwait
test
lret
jge
push
xlat
cmp
in
in
ja
faddl
and
bound
adc
xchg
jge
mov
and
cmp
lds
in
push
push
mov
jno
and
push
push
pushf
push
push
push
ds
inc
jmp
sbb
cmpsl
cmp
dec
sbbl
test
repz
cmp
mov
cwtl
jmp
popf
filds
adc
fsubrp
mov
lods
pop
mov
sub
movsb
jle
push
sahf
pop
lcall
pop
iret
popa
push
dec
mov
add
adc
sarl
pop
cmp
pop
cld
nop
ret
or
jmp
fisubl
dec
aaa
push
cltd
cmp
cli
leave
jae
jbe
fs
mov
push
dec
inc
push
outsb
push
jg
fisubrl
xchg
ret
shlb
dec
add
insb
fisubrl
inc
jp
mov
inc
push
pop
movd
sub
rol
addr16
dec
jno
mov
loope
sub
dec
jp
rcrl
jge
sub
das
adc
lret
cltd
mov
iret
mov
xchg
pop
int3
or
sbb
enter
ficomps
test
insb
xor
dec
add
insb
add
fwait
popa
sysexit
ret
xor
movsb
mov
or
mov
mov
rclb
xor
pusha
std
arpl
mov
fisttpll
loopne
xor
jmp
or
js
cs
or
jns
leave
cltd
pop
sbb
fs
add
es
sub
std
inc
fiadds
jmp
xchg
fnsave
inc
es
mov
mov
pusha
push
sbb
sbb
and
out
mov
leave
mov
repz
cli
gs
jns
sub
loop
pop
lcall
hlt
and
sbb
or
or
cltd
aaa
dec
pop
xchg
xchg
adc
loopne
and
dec
shr
adc
jae
xor
or
repnz
xor
scas
jle
adc
psubq
xor
pop
test
mov
inc
jnp
adc
pushf
or
dec
jne
mov
mov
mov
cmpsl
adc
out
or
ss
or
xchg
adc
adc
into
xor
movsb
jmp
shl
pop
pop
push
add
mov
repz
xorb
cmp
mov
push
inc
add
pop
jge
pop
xchg
xor
xchg
stc
jns
inc
les
push
inc
mov
pusha
jmp
dec
jb
pop
sub
hlt
and
stc
xor
test
inc
js
xchg
pop
rclb
out
loopne
adc
push
mov
into
rol
add
dec
ret
or
pop
int3
or
mov
xlat
add
arpl
pop
pop
pop
push
sbb
fs
dec
jecxz
cmp
xor
mov
movsb
xchg
popf
call
fwait
sub
stos
cmp
mov
sbb
sbb
jge
cmc
shrl
fimull
xlat
and
stos
neg
pop
mov
repz
jbe
bound
mov
dec
and
popa
push
es
rcrb
loop
push
das
add
in
sub
inc
sbb
xor
sub
add
pusha
mov
cmp
pop
loopne
sahf
and
scas
or
jbe
pop
mov
aaa
xlat
pop
cmp
pop
sbb
xor
mov
xchg
sbbb
pop
mov
cld
jne
push
aaa
ljmp
stc
cli
and
int3
and
cmp
xor
imul
stc
push
xlat
lods
dec
mov
gs
jge
cmp
mov
dec
cltd
or
cs
bnd
fcoms
add
lcall
pop
push
jnp
xchg
ret
mov
dec
cld
mov
shlb
cs
sub
ss
adc
mov
loop
lds
adc
inc
out
push
lods
test
dec
or
and
fisubs
inc
mov
out
jg
adc
addb
test
inc
xchg
dec
push
add
mov
jp
xchg
mov
jle
out
pop
imul
dec
jp
mov
push
mov
add
andl
ret
rcr
mov
pop
fidivrs
mov
and
mov
scas
xlat
sub
jne
pop
jl
test
ficoml
in
sub
inc
mov
and
pop
data16
cli
mov
lahf
sbb
jne
movsb
aad
cld
pop
subb
stos
call
push
aam
das
les
pop
mov
jmp
sbb
pop
bnd
push
push
mov
adc
rol
sbb
cmovle
arpl
in
pop
jle
jg
mov
cwtl
jl
add
cli
inc
rcrb
addb
sub
xchg
jns
mov
or
in
inc
push
xchg
add
sti
lret
aas
jl
lds
outsl
fwait
jb
xchg
sbb
add
or
jne
mov
pop
std
dec
add
loop
pop
or
loop
and
jb
push
rep
cmp
xor
jmp
test
mov
add
int
stos
in
aad
fwait
inc
sub
push
fmull
jo
rcll
and
push
jmp
jo
and
hlt
mov
ja
sub
inc
dec
fucomp
hlt
fisubrs
sbb
clc
aad
fwait
in
mov
pop
jae
cmpsl
xor
xor
lahf
nop
inc
pop
xchg
inc
sbb
pop
add
cmp
pop
sub
cmp
fbld
lods
mov
fcomps
shlb
jl
dec
add
xlat
imul
jbe
xchg
mov
daa
fcoms
jnp
das
add
aaa
scas
dec
mov
call
arpl
xchg
add
ret
jnp
icebp
cmp
mov
lock
mov
mov
inc
incl
xor
fisttps
cmpsb
cwtl
xorb
adc
sub
xor
sbb
add
lahf
imul
repz
in
sub
xchg
sti
mov
jne
pop
cs
das
sbb
push
cmp
adc
dec
outsb
insl
aam
cmp
xchg
test
cmp
mov
lcall
sub
mov
mov
sti
mov
aam
ja
pushf
ja
mov
mov
int3
ret
fcoml
cmp
add
xacquire
inc
or
and
or
or
sbb
or
add
xchg
dec
fs
pusha
aam
xchg
cmp
sub
call
outsb
stos
cwtl
fdivs
shrl
or
mov
push
into
daa
call
rcrb
xchg
pusha
cld
lahf
lods
or
nop
loop
les
out
push
pushl
loop
inc
xbegin
int3
mov
jp
cmpsb
pop
scas
lods
mov
jmp
test
stos
sub
jne
cmp
rol
rcrl
inc
xor
or
lods
repz
shlb
mov
push
sub
addb
sti
in
hlt
push
adc
stos
hlt
insl
pop
mulb
fidivrl
xor
test
or
out
mov
cs
call
fdivl
mov
push
adc
dec
stos
loop
lret
cmp
out
or
lock
sbb
stos
les
add
sti
enter
sub
xchg
shll
sub
mov
lret
repnz
push
and
fistpl
in
repz
and
aam
test
mov
dec
dec
stos
jnp
jne
and
dec
mov
icebp
lods
xor
dec
sbbl
lcall
inc
orl
or
jmp
mov
mov
adc
mov
push
out
bound
dec
mov
cmp
aam
jl
sbb
loopne
addr16
lahf
or
in
or
dec
fwait
jge
xchg
push
adc
icebp
mov
int3
outsb
cmp
jmp
jl
sub
loope
cmp
pop
test
fsubp
mulb
fldt
xor
repnz
inc
or
mov
dec
repz
mov
bound
jns
mov
adcl
push
inc
shr
lahf
pop
notb
popf
jmp
f2xm1
ss
imul
mov
sbb
test
adc
and
or
out
sub
mov
subl
into
xor
das
enter
lahf
movsl
mov
dec
mov
enter
aas
leave
push
test
rorl
bound
jo
cwtl
lods
aaa
sbb
shrl
fiaddl
inc
lret
pusha
std
lods
jns
push
mov
jp
add
das
xor
pop
jg
pushw
je
mov
add
inc
loope
dec
xor
mov
mov
push
lahf
call
ror
inc
mov
imul
mov
fldl
fiaddl
shll
jb
loope
rcr
loopne
inc
cmp
xor
xorb
sub
cmpsb
push
jno
jge
sub
inc
and
nop
sahf
test
jp
movsl
lahf
push
std
add
pop
sbb
loope
jae
sbb
xchg
inc
jnp
dec
jnp
mov
std
dec
sarl
pop
test
mov
popa
in
push
stos
cmp
data16
push
sbb
mov
xchg
jle
aas
push
mov
mov
rcrb
jmp
ret
mov
lock
negb
clc
sbb
aad
xchg
insb
shlb
jmp
cltd
mov
std
in
into
jnp
sub
mul
push
and
and
cmp
xchg
int3
xchg
xor
mov
fwait
movsl
push
sub
in
push
inc
js
pop
push
lahf
shrb
cmp
iret
test
notl
sub
mov
mov
and
cmp
insb
sub
in
cmp
xor
add
mov
xor
dec
add
and
pop
call
dec
sti
jae
cmpb
pop
mov
ret
mov
mov
das
sbb
shr
cmp
int3
iret
lcall
xchg
adc
cld
dec
jle
dec
out
xor
lea
cmpb
pop
xchg
incl
std
dec
sub
mov
fndisi(8087
sub
scas
in
pushf
xor
xchg
xchg
loopne
push
popf
and
ljmp
ficoml
ret
jo
sub
popa
inc
lods
ss
pop
mov
cmp
fisubrl
pop
or
adcb
jg
add
push
cmpsb
cmc
lds
push
scas
int3
xchg
cwtl
or
ret
call
cmp
xor
mov
xor
imul
xor
jl
sti
stos
lock
pop
fyl2x
push
push
fisttps
sbb
xchg
jp
aam
addl
popf
jl
sub
int
out
sub
aas
rcl
sbb
inc
jnp
jecxz
sub
cmp
test
daa
jb
mov
xor
subl
adc
mov
addr16
movsb
push
add
pop
cld
pushf
fs
popa
ret
inc
sbb
scas
sub
adc
repz
and
loopne
int
lods
mov
adc
js
mov
ljmp
sub
push
add
mov
das
in
fsubrs
sbb
fmull
gs
popf
mov
mov
jbe
mov
pop
push
movsl
out
dec
cwtl
jno
dec
push
mov
mov
mov
shll
out
xlat
push
cld
pop
sub
cmp
stc
out
and
jno
cwtl
sub
pop
fsubs
aad
aad
mov
add
jmp
call
mov
into
shrb
push
js
shl
movsl
add
movups
sub
adc
lods
jnp
inc
push
inc
mov
imul
dec
or
mull
pop
mov
jae
adc
negl
sub
inc
movsb
or
mov
mov
mov
adc
xchg
roll
jno
mov
jne
mov
jnp
dec
cli
lret
xchg
test
ljmp
sub
sub
scas
pop
imul
rclb
in
or
js
push
mov
daa
push
mov
mov
pop
sub
or
push
push
nop
mov
fstps
push
dec
mov
repnz
jno
jns
outsl
jl
mov
add
inc
fbstp
insl
xor
sub
loopne
test
fwait
adc
or
jecxz
adcl
sub
mov
mov
lds
dec
jmp
xchg
xchg
jmp
adc
mov
mov
loop
lret
mulb
lods
aaa
push
test
jmp
mov
es
add
mov
enter
ds
jmp
sub
mov
popf
pop
std
dec
xchg
fs
push
or
mov
mov
push
cmpl
ljmp
repnz
movsb
das
in
fldz
mov
das
jns
sub
xchg
das
andl
ss
mov
ss
insl
jne
test
push
imul
outsl
out
fstpt
pop
in
ds
in
xchg
sarl
jmp
adc
loopne
push
ret
movsl
rcrb
js
inc
push
and
nopl
fnstsw
jl
cltd
mov
push
xlat
movsl
push
testb
xchg
jae
mov
push
imul
adc
inc
sub
and
sahf
lds
shlb
mov
sbb
mov
rcrb
inc
lahf
xor
xchg
loop
leavew
xchg
fcoml
pop
movsl
std
stos
xor
pop
loop
addb
jb
xchg
sar
stos
mov
xor
fwait
jns
inc
sub
es
insl
arpl
adc
jle
in
mov
add
inc
ds
lds
repnz
sahf
js
jmp
insb
add
mov
add
lret
ret
dec
add
add
add
add
add
add
add
loop
add
add
add
add
add
ja
mov
incl
incl
add
add
add
and
jne
or
or
adc
add
add
add
adc
add
je
add
add
in
and
add
arpl
mov
add
add
add
add
add
add
add
add
and
jo
les
inc
jae
inc
push
imul
add
pand
fldpi
sahf
mov
enter
or
push
jmp
cwtl
clc
cld
inc
pop
in
pop
incl
mov
cld
add
push
call
push
test
push
push
add
ud0
push
dec
fs
push
rolb
lret
in
mov
mov
mov
cmp
add
push
daa
adc
pop
xor
inc
pop
pop
add
lock
jmp
xor
call
add
clc
mov
loope
std
movsb
dec
and
cld
cld
push
mov
add
mov
push
fsubl
cmp
clc
loopne
add
lret
sub
mov
xor
adc
lock
push
jne
imul
ret
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
addl
add
gs
outsl
outsb
outsl
insb
test
imul
xchg
push
add
jbe
je
arpl
add
inc
fs
insb
jb
addr16
jge
add
imul
inc
popa
gs
pop
mov
movsb
adc
add
add
test
add
popf
and
sarb
movb
and
cmp
enter
repz
out
push
movsl
adc
and
jae
andb
aaa
cwtl
fs
stos
or
sub
pusha
mov
sub
cwtl
in
ror
clc
lea
aam
mov
lds
dec
inc
call
and
xor
fisubl
dec
mov
adc
leave
adc
stc
jl
mov
ret
pop
mov
mov
sub
xor
cmp
mov
jno
cmp
xlat
add
cmc
xchg
xor
fsubl
pop
inc
inc
outsl
out
leave
xor
outsb
clc
cmpsl
addr16
sub
pop
pusha
adc
scas
sub
adc
pop
mov
dec
rolb
add
push
mov
lds
sub
addr16
std
in
pop
fwait
lret
test
popl
loope
cli
jmp
sahf
push
lcall
scas
les
loop
pop
outsl
in
fisttpll
repnz
inc
loopne
jmp
and
out
int3
pop
or
dec
jmp
jns
in
add
leave
xor
jb
jecxz
add
push
pop
repnz
mov
outsl
xchg
bound
in
push
imul
push
mov
std
cmp
shrb
mov
dec
sub
outsb
adc
test
add
insl
je
cmc
sub
repnz
or
popf
hlt
int3
cmpsl
add
lcall
mov
test
ds
and
push
jns
mov
push
fsubl
dec
pop
and
fcomps
xchg
push
add
icebp
stos
jg
cmp
add
dec
lcall
jns
mov
xchg
movsl
xor
push
jl
sub
bound
mov
aas
mov
out
and
loope
add
add
ficomps
insl
hlt
div
mov
push
pop
rolb
pushf
mov
test
out
dec
push
or
or
mov
sub
and
mov
rorl
jae
lea
scas
fisubrs
xchg
adc
bound
inc
decl
inc
negl
fsubr
shr
jae
out
loope
lret
jmp
hlt
push
arpl
mov
mov
adc
call
je
shll
mov
jno
mov
fcompl
rcrb
lret
cwtl
addr16
std
fs
lahf
inc
xchg
outsl
push
jmp
ss
mov
fnstcw
mov
dec
or
scas
pop
outsb
or
cwtl
or
cmp
or
call
jns
push
xchg
dec
sub
mov
or
shl
mov
ds
sti
movsl
fisubs
sahf
sti
out
in
mov
mov
daa
xchg
cli
lods
jb
imul
in
aaa
sub
jae
mov
ficoml
je
push
ret
ja
jno
sbb
cld
mov
jecxz
pop
inc
mov
jecxz
push
mov
jle
xchg
push
hlt
addr16
js
push
add
pop
aaa
lahf
or
pushf
scas
pop
jmp
pop
outsb
dec
fs
loopne
aad
jmp
mov
repz
push
xor
lea
sub
cwtl
push
insl
das
or
mov
jp
mov
and
jg
pusha
dec
pop
xchg
outsb
and
mov
loope
jo
mov
mov
jo
mov
sub
sub
ds
xor
sbb
mov
pop
push
adc
adc
ss
popf
call
adc
cmp
imulb
cld
aad
jecxz
dec
sub
and
test
vaddps
repnz
ret
xlat
xchg
test
pop
lods
and
pop
mov
add
or
lahf
xor
push
push
adc
incl
or
popf
setno
lea
repz
lock
add
jmp
push
idivl
ljmp
into
pop
shll
mov
lret
mov
sub
mov
inc
icebp
inc
sub
shrl
pop
pop
fs
and
inc
pop
jle
ret
sbb
inc
jo
es
fcoml
repnz
or
popa
sbb
dec
insb
movsb
xchg
shl
mov
cmp
mov
mov
pop
pushf
cmp
push
cmpsl
mov
inc
sub
mov
gs
aad
dec
jae
in
pushf
hlt
sbb
pop
into
mov
cmp
int3
add
in
in
lods
dec
push
cmp
xor
cltd
pop
repz
aad
xchg
dec
lods
sub
repnz
mov
mov
bound
mov
addr16
stos
sbb
in
adc
mov
jno
test
ret
shlb
cmp
aaa
ljmp
or
hlt
push
push
dec
inc
imull
aaa
sub
inc
push
or
mov
mov
jae
ret
jmp
hlt
mov
stos
and
out
cltd
xor
call
subl
jnp
mov
push
sub
jns
dec
sbb
xor
int
sub
xor
sbb
pushl
ret
push
std
push
lods
push
into
arpl
push
push
movsb
out
daa
loopne
je
xchg
inc
jle
adc
ret
adc
inc
popf
jmp
adc
repnz
sbb
sbb
mov
and
pop
ljmp
fistps
int3
mov
imul
data16
es
mov
mov
sub
xchg
rcll
add
xor
pop
int3
iret
outsl
gs
dec
in
loopne
arpl
out
stos
sub
sbb
jae
sub
aam
adc
xor
cwtl
jne
bound
cld
jbe
aad
clc
loope
out
loopne
push
out
mov
push
fisubs
pusha
popf
cmc
adc
rolb
repnz
cmp
int3
mov
sbb
cli
outsl
popf
inc
fldl
xchg
std
cwtl
repz
and
es
das
hlt
add
pusha
mov
lret
pusha
stos
inc
movsb
pop
fcoml
xchg
out
mov
pushf
jne
mov
pusha
addr16
and
add
cmp
insb
jbe
push
insl
inc
sbb
and
test
adc
mov
jne
or
xchg
pop
xor
fs
cli
jns
cmp
movsl
sahf
test
add
mov
rclb
sub
ret
pop
sarl
bound
fisubs
dec
shll
call
test
mov
cmp
jg
mov
pop
andl
mov
cmp
cltd
call
orb
jmp
aad
test
inc
jge
inc
in
xchg
movsl
mov
adcb
lea
push
loope
pop
xor
sbb
xor
dec
adc
dec
fidivrl
xchg
cmp
js
mov
xor
push
xchg
es
jle
rcr
xor
les
jg
xor
xor
mov
inc
testb
repnz
cmpsl
insl
aaa
call
data16
lods
scas
mov
jb
stc
stc
inc
jmp
lea
es
ds
xchg
mov
dec
dec
lcall
fs
mov
nop
std
popa
bound
fsts
arpl
nop
popf
pop
jg
in
in
out
cmp
inc
jl
repz
add
ss
dec
fs
sbb
sub
loopne
cli
xor
adc
pop
cmpsb
cltd
popf
sbb
push
dec
pusha
pop
mov
sub
sbb
mov
jge
nop
lods
les
ror
xchg
test
cmp
pop
dec
rcl
mov
sbb
out
pop
stos
rcrl
inc
jbe
mov
in
faddl
mov
adc
mov
sbbb
arpl
data16
push
mov
test
push
and
or
inc
xchg
clc
mov
pop
pusha
into
push
mov
jb
leave
and
loopne
and
pop
imul
pushf
pusha
mov
jle
or
cltd
out
lret
cmpsb
cmp
pop
clc
daa
and
aas
pop
cmp
call
scas
repnz
push
das
test
aaa
xor
and
test
enter
test
and
pushf
gs
adc
mov
add
xlat
icebp
mov
test
dec
or
das
pop
pop
xor
shl
cmp
ja
orb
and
cmp
ljmp
push
add
cmc
jnp
mov
xchg
cs
in
push
mov
testb
xor
lcall
mov
xchg
dec
mov
aad
adc
ss
stos
mov
loope
fildll
fstpt
aaa
scas
lds
es
sub
jb
jle
add
dec
xor
mov
pop
adc
iret
shlb
jae
pop
jle
out
push
test
in
adc
insl
mov
lahf
push
scas
and
dec
jle
or
or
aam
popa
jecxz
xlat
out
and
xlat
cmc
cmp
hlt
pop
test
in
call
cmp
sbb
cmc
in
xchg
xchg
pop
rorb
xchg
mov
lahf
or
repnz
jl
loop
cmp
xlat
cmp
shll
iret
in
push
out
into
js
andb
dec
in
fldt
rcrl
jl
push
inc
xchg
or
in
xchg
mov
push
arpl
jle
dec
outsl
into
jno
pop
aaa
jmp
push
mov
mov
scas
and
pop
in
xlat
xor
xor
push
aam
in
mov
in
sub
ljmp
jmp
jb
es
mov
mov
or
cs
push
sbb
sub
pop
ja
shl
into
int
lods
inc
scas
pop
push
xchg
adc
into
adc
mov
test
out
clc
aad
hlt
xor
inc
in
add
bound
or
add
in
fwait
pop
sahf
ja
lods
dec
lods
jno
xchg
adc
mov
mov
sub
sub
divl
int3
and
lret
inc
movb
jle
popa
lret
pop
mov
out
arpl
popa
imul
out
or
fs
cmpsl
mov
fwait
xchg
and
push
xchg
test
jecxz
mov
push
cmp
mov
jns
enter
imul
sbb
leave
sbb
push
inc
pop
fisttpl
mov
cli
bound
push
adc
xor
jle
fldenv
cmp
mov
pop
in
dec
xchg
push
lods
adc
and
cwtl
lods
dec
pop
mov
dec
mov
push
cmpsb
stc
xor
lods
push
mov
addr16
addr16
dec
dec
mov
insb
mov
outsb
cltd
movl
push
popf
add
pushf
subl
imull
sbb
mov
inc
pop
popa
out
fsubs
sbb
ljmp
das
rorl
inc
sub
jge
sub
dec
pop
and
and
insb
xor
pop
cmpsl
mov
inc
xor
inc
bnd
js
lods
test
dec
add
cmp
add
icebp
movsl
add
in
jp
iret
lods
insl
adc
jle
xchg
cmc
mov
cmp
xor
int3
dec
movsl
ja
fwait
xlat
or
roll
js
lcall
stc
mov
loope
cmc
sbb
sbb
inc
dec
jo
add
pusha
or
popa
aam
push
popf
cmpsl
dec
fdivl
popf
jne
pop
pop
repnz
push
mov
add
dec
rclb
pop
pusha
sbb
inc
pop
loop
jp
jmp
inc
loope
hlt
push
cmpb
ret
sahf
repnz
sub
pop
outsl
mov
pop
mov
push
push
xor
lret
jnp
push
aaa
push
mov
mov
fsub
insb
aaa
cmc
fisubs
add
fmull
fsubrs
or
or
in
adc
jo
fwait
xor
movsb
cmp
mov
mov
enter
lock
sub
test
mov
test
mov
pop
cmp
fwait
sub
popf
xchg
mov
sarl
aaa
divl
push
mov
sbb
cwtl
or
adc
sbb
shrl
push
fwait
ret
cmp
or
add
stc
push
nop
mov
sbb
xlat
adc
nop
and
cmp
mov
orb
jmp
fcomip
cli
insb
dec
push
rol
loop
hlt
push
aas
sti
incl
and
loopne
aas
inc
mov
sti
pop
inc
ds
pop
and
fxch
sub
lret
mov
mov
mov
fnstenv
mov
inc
cltd
xchg
js
cmp
lret
mov
sub
inc
jle
out
add
popa
cmp
movsb
dec
hlt
inc
cli
out
fcompl
popa
js
ret
dec
dec
pop
loopne
pop
xchg
push
and
sub
cmpsb
add
jmp
aaa
adc
mov
sub
mov
shlb
sbb
add
mov
jo
divl
jns
add
inc
test
push
loope
ret
cmpsb
lret
dec
mov
and
daa
xchg
cmpsb
aas
in
andb
sbb
add
loope
or
push
imul
fisubrs
dec
push
ret
leave
add
std
mov
les
es
push
cwtl
jecxz
jbe
push
lcall
and
dec
jbe
push
mov
or
jmp
xchg
cmp
js
xor
in
xchg
adc
not
or
mulps
inc
dec
mov
mulb
in
mov
es
cmp
push
xchg
outsl
adc
xchg
mov
in
shlb
jg
clc
ja
jae
imul
push
pop
shrl
cli
inc
xchg
adc
mov
lds
fucom
and
mov
dec
lods
lea
mov
shl
push
mov
xchg
call
orb
mov
in
mov
jo
lea
mov
jae
push
mov
jae
xchg
sbb
loope
lret
add
cmp
rolb
lret
sub
fwait
cmp
pop
inc
mov
lcall
sti
pop
or
fcoms
pop
stos
sbb
cld
repnz
ret
sti
mov
cmp
fsub
lods
jne
sub
in
daa
hlt
pushf
jne
mov
sbb
lcall
movsl
push
mov
popa
fldenv
inc
cli
or
fistpll
orl
sbb
jge
dec
lea
push
aad
std
call
out
movsb
int
xchg
jg
rcll
in
or
or
outsb
add
ss
push
adc
gs
out
pop
pop
ret
jno
mov
mov
cli
cld
ds
xchg
pusha
fwait
call
adc
mov
mov
add
inc
movsb
shlb
repz
cmp
xor
out
cld
aad
andl
mov
or
cmpsb
hlt
fwait
iret
std
fwait
out
js
das
cmp
sti
sub
mov
je
std
add
insb
mov
xor
das
fcoml
jo
test
xchg
pushf
stos
sbb
inc
xorb
fidivl
ret
or
mov
xchg
inc
cmovl
aad
push
push
and
aas
loope
jne
add
sahf
sahf
idivl
adc
mov
dec
cli
add
pop
fwait
jmp
loopne
sbb
stos
aas
mov
mov
cmp
push
pop
cmp
mov
dec
xchg
jp
xor
jp
and
push
mov
adc
sbb
rcll
mov
or
dec
aam
shll
in
jmp
push
sbb
mov
push
push
leave
lea
aam
or
bound
inc
mov
push
gs
and
jb
insb
push
test
pop
dec
xor
outsl
fdivp
adc
adc
mov
fdivrp
cmpsl
mov
pop
xchg
push
test
clc
pusha
adc
xor
in
sub
mov
sbb
mov
dec
scas
mov
inc
and
cmpsl
or
inc
dec
mov
cmp
mov
lret
add
mov
inc
mov
mov
mulb
data16
push
shrb
or
repnz
clc
enter
or
cmp
test
and
dec
or
xchg
jnp
stos
scas
jae
popa
mov
mov
jl
jbe
leave
xor
pop
aad
enter
mov
inc
aad
clc
mov
movsl
xchg
sub
mov
test
jge
mov
push
push
test
adc
xor
mov
loopne
aam
mov
aad
jmp
sbb
or
push
fs
insl
push
iret
imul
negb
and
inc
and
ljmp
xor
subl
xchg
aaa
or
xchg
adc
xchg
out
push
add
jecxz
mulb
imul
out
push
insl
fidivs
lods
inc
push
push
fmuls
not
in
jo
test
lds
fidivrl
xlat
out
xchg
cmp
movb
mov
and
shrb
scas
xchg
xor
and
imul
icebp
adc
sahf
out
jl
and
mov
push
cmp
fisubs
mov
add
add
and
add
push
mov
inc
popf
cmp
stc
mov
mov
outsl
and
inc
push
dec
cmpsl
imul
cmp
shlb
stc
mov
pushf
shlb
jl
repz
out
imul
stc
out
divb
inc
mov
mov
jmp
lods
movsl
xor
push
push
push
push
and
sub
sahf
mov
jne
add
sbb
inc
fmulp
fisttps
sbb
push
push
xor
or
sbb
mov
inc
push
sub
mov
mov
jo
mov
xchg
movsb
imul
sarb
pop
adc
insl
fwait
xchg
sub
cmp
sub
andb
xchg
ss
outsb
loop
es
xchg
mov
int3
pop
mov
jno
dec
insl
xchg
push
jo
cmpsb
add
incb
pop
mov
hlt
icebp
push
add
and
scas
in
test
idivl
lret
out
mov
outsb
inc
lcall
sbb
sbb
pop
mov
cmpb
sarb
jl
fs
mov
sub
out
out
or
xor
dec
jecxz
pop
gs
mov
jp
je
jo
roll
loop
push
sarl
jle
mov
cmpb
sub
sbbl
testl
xchg
jb
sbb
dec
arpl
push
xchg
cmp
pop
insb
xor
adc
lahf
roll
fwait
int3
sub
push
push
xor
add
outsb
sbb
test
leave
mov
pop
mov
pop
pop
fsubrp
movsb
aaa
push
mov
dec
push
push
xchg
ja
jb
jp
mov
rolb
mov
iret
jl
adc
cmp
adc
icebp
or
mov
imul
pop
sub
xor
pop
and
pop
jecxz
xor
add
add
add
adc
test
hlt
pusha
rolb
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
mov
add
addb
add
add
stos
stos
add
ja
cmp
clc
clc
call
in
push
cmpl
push
mov
je
cmp
je
call
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
add
add
add
sbb
mov
outsl
arpl
or
add
add
add
add
add
add
inc
add
jl
add
add
xor
push
add
insb
xor
int3
add
add
add
movsl
sbb
sbb
sbb
sbb
sbb
pop
add
add
and
js
add
pop
outsb
push
jae
jae
dec
add
test
add
xchg
inc
jne
leave
pop
js
xor
adc
mov
pop
adcl
test
add
pusha
test
xchg
or
adc
adc
add
push
incl
cld
or
scas
or
push
push
decl
add
add
leave
sub
jmp
add
mov
add
xor
add
decb
je
push
decl
lock
lock
push
add
incl
adc
call
adc
inc
push
add
repz
inc
call
lea
clc
push
adc
add
add
add
sbb
pop
add
add
aad
add
add
add
add
add
add
add
add
sub
add
inc
add
sbb
inc
add
insb
add
fs
inc
gs
gs
shrb
add
dec
add
fs
dec
gs
inc
inc
add
add
outsl
dec
inc
insb
dec
insb
jb
loopne
add
add
add
add
mov
add
jne
add
add
add
add
add
pushf
add
add
add
push
add
add
das
push
add
dec
shll
ja
in
dec
push
mov
fwait
mov
addr16
cltd
std
add
popf
rcrl
adc
insb
dec
mov
movsb
cmove
insl
lcall
pop
push
mov
mov
mov
jmp
shll
sahf
je
pop
mov
push
dec
cld
mov
stc
sbb
test
add
push
and
shlb
xchg
shlb
and
clc
xor
mov
xor
loop
xchg
xor
adc
xchg
or
lea
pop
inc
pushf
add
in
xchg
insl
sub
fnstsw
lcall
xchg
mov
jg
add
enter
es
andb
pop
cmp
lcall
mov
lcall
sub
test
xchg
jmp
add
jne
mov
sub
sahf
leave
hlt
test
add
fcomi
stos
xor
mov
ficoml
push
jno
sti
inc
xchg
xchg
test
aaa
or
sub
pop
aas
sar
movsb
mov
sti
testb
adc
test
pop
inc
and
jno
push
fimuls
rclb
sub
mov
adc
addr16
sbb
mov
sub
dec
ja
loopne
mov
fidivl
popa
lahf
je
mov
pop
dec
ret
scas
test
push
inc
stc
sbb
shrb
mov
lods
fwait
call
sbb
cmp
jl
xor
out
add
mov
fnsave
inc
ror
cltd
inc
jl
aad
hlt
jecxz
jnp
mov
movsl
mov
insl
push
mov
inc
pop
xchg
or
rorl
imul
cltd
xchg
test
sbb
outsb
pop
fimull
sub
call
sbb
bound
xor
loop
in
mov
adc
insl
fldt
fisttps
jl
sti
test
pop
lea
xchg
jo
jnp
cwtl
jbe
add
out
inc
add
lea
jecxz
xor
lahf
out
pop
xchg
imul
sub
and
sarb
imul
sub
add
pop
push
pop
xchg
dec
cmpsb
and
mov
adc
xor
xor
pop
dec
sahf
rcll
xor
adcl
bound
push
or
inc
std
lds
aad
ds
cmp
cmp
pop
xchg
adc
jne
rcrl
imul
or
xchg
pop
mov
iret
push
pusha
inc
imul
das
xor
lods
loopne
fistps
push
lock
loope
in
push
add
shrb
xchg
bound
popa
sub
iret
sub
cmp
push
pop
sub
cmp
dec
addb
pop
mov
shl
mov
sub
cmpsl
std
xchg
std
into
jae
nop
out
pop
call
xchg
lahf
fidivs
push
jno
jne
aam
cmp
leave
push
and
stc
js
push
cmc
adc
mov
js
nop
sbb
aad
fwait
and
push
cmp
push
jmp
leave
jmp
inc
addl
mov
fists
push
lods
sbb
and
pop
or
aad
stc
xor
mov
xchg
xor
cmc
data16
pop
xchg
iret
ds
or
in
jge
adc
dec
mov
aad
sbbb
iret
shrb
jnp
lods
aad
movb
inc
inc
leave
push
pop
loope
fbld
sub
push
inc
fs
loop
pushf
push
sbb
test
out
add
push
pop
adc
and
push
mov
sub
and
stos
bound
xor
popf
mov
pop
mov
sub
jnp
into
testb
jnp
xchg
jmp
orb
out
inc
add
sti
das
xor
add
mov
outsb
popf
sub
loop
cld
clc
iret
mov
movsb
clc
push
inc
mov
mov
ffree
pop
clc
add
les
out
push
sbb
adc
lock
shlb
pop
out
les
lcall
or
mov
mov
jge
mov
mov
inc
and
push
idiv
repz
and
test
daa
call
movsl
fimuls
loop
pushf
sarb
cltd
mov
cmp
sbb
fisttpll
ficompl
xchg
and
mov
int
mov
icebp
mov
test
daa
lret
vaddsd
insl
dec
lods
call
jbe
faddl
sbb
out
cmpsl
xor
sbb
inc
push
out
int3
fnstcw
fldenv
fistl
repz
ds
hlt
pop
push
int3
mov
fmull
movsb
or
sub
sbb
sarb
fldcw
xor
aaa
jno
mov
insb
out
lds
inc
std
mov
adc
pop
in
insl
push
rclb
pop
push
push
jg
fimull
mov
or
xor
xlat
in
mov
pop
int3
faddl
adc
imulb
jmp
mov
lcall
out
add
xchg
dec
bnd
push
xchg
stos
adc
into
shll
imul
mov
shll
lcall
xchg
shlb
insl
inc
cmpsl
out
out
scas
or
push
inc
popa
out
test
push
fcomi
lods
add
dec
pop
sub
dec
mov
and
and
addr16
insb
sbb
push
adc
stc
addr16
mov
lods
push
mov
xchg
sbb
push
lret
dec
xchg
stos
popf
ret
orb
test
add
jge
xor
jb
cltd
cmp
or
jae
sbb
sbb
fmul
andb
xchg
push
cmp
lea
js
ljmp
sub
loop
sbb
fcompl
or
cmp
jg
clc
test
fidivs
pusha
orb
adc
cli
mov
push
mov
push
xchg
out
adc
xchg
jle
fldcw
outsl
or
xorl
jns
inc
test
aaa
ss
in
pop
mov
mov
and
scas
bound
mul
push
testb
mov
popl
movsl
add
insb
jne
jmp
push
jmp
sti
mov
out
mov
scas
cli
leave
xor
int3
push
pop
dec
cs
jmp
and
mov
scas
sub
jmp
scas
lret
in
push
xor
inc
in
into
sbb
jnp
push
lahf
inc
sarl
xlat
or
mov
das
and
sub
dec
and
sub
clc
aaa
xor
dec
inc
popa
mov
inc
mov
xlat
call
into
or
int3
mov
ljmp
pop
add
and
inc
dec
js
outsl
jnp
addr16
gs
insl
lahf
inc
andnps
jb
mov
mov
or
jnp
adc
adc
push
iret
xchg
fs
fcomps
int3
or
ja
xor
ja
xchg
and
xor
aad
mov
mov
out
sub
push
call
jmp
adcl
decb
hlt
test
mov
xchg
ret
movsl
fsubl
in
xor
sub
sub
int3
call
inc
cmpsl
test
or
popa
jno
out
dec
mov
sbbl
dec
stc
and
in
push
push
mov
dec
stos
add
in
and
sub
fs
ds
push
shrl
outsl
leave
inc
xor
subb
mov
cmp
iret
sbb
lea
stos
add
cmp
je
mov
out
ret
xchg
bound
xchg
outsl
shll
neg
movsl
or
test
rclb
pop
jecxz
repz
out
lret
mov
jae
mov
imul
int3
mov
pop
inc
inc
sarb
dec
stos
and
inc
pop
and
repz
lret
mov
sbb
imul
inc
jecxz
cwtl
push
mov
lods
adc
call
inc
sub
mov
shl
dec
fsub
shll
mov
jge
jge
out
inc
cmpsl
cwtl
lcall
insb
jo
xchg
lea
mov
lods
jmp
lcall
jae
cli
dec
data16
mov
mov
adc
cltd
test
repnz
in
inc
cmpsl
gs
rcrb
and
jge
out
add
cld
xor
enter
mov
cmpsb
cwtl
xchg
inc
ret
shlb
add
mov
sub
test
jl
and
xlat
xor
mov
int3
stos
scas
mov
add
fisubrs
ljmp
aaa
mov
repnz
and
mov
cmc
sbb
scas
and
bound
repnz
push
out
or
push
addr16
add
lds
mov
cli
pop
inc
fdivr
mov
dec
test
loopne
adc
push
mov
rorb
in
inc
ljmp
mov
scas
mov
xor
pop
fld1
and
dec
adc
subb
andw
mov
insl
lds
fwait
insl
dec
js
inc
popf
xchg
fldenv
xchg
rcr
lret
in
dec
push
inc
push
clc
insl
or
shll
inc
ja
sti
xchg
mov
jns
lods
pop
adc
mov
dec
or
call
mov
ror
mov
add
outsb
lods
arpl
jp
in
mov
repnz
xchg
loop
adc
pop
in
enter
pop
and
cmp
dec
sub
inc
dec
rcrb
mov
mov
xchg
sbb
outsl
lahf
loopne
popa
xor
sbb
xor
mov
jp
sbb
jge
pop
mov
push
lea
std
push
leave
and
jl
cmp
jno
xor
pop
cltd
sbb
jo
pop
push
stos
pop
imul
adc
call
stc
mov
in
or
mov
cld
das
sbb
int3
push
mov
or
pop
out
inc
sti
mov
sbb
xor
push
ss
jns
mov
orl
jg
ja
das
js
push
mov
push
cmpb
mov
dec
cmpsl
jmp
mov
inc
and
mov
fisttpl
cmp
icebp
mov
and
inc
ljmp
jg
dec
mov
insb
pop
inc
cltd
fiaddl
test
insb
pop
jmp
jne
lret
sahf
lds
sub
dec
push
or
mov
mov
dec
sub
pop
mov
lock
and
xchg
std
mov
into
jne
sub
pop
jns
out
dec
arpl
or
fbstp
cltd
xchg
sbb
xor
arpl
jne
sub
push
pop
cmp
in
push
shlb
lahf
out
inc
push
xchg
clc
push
fstpt
adc
pop
mov
enter
xchg
out
in
cmpsb
add
sbb
cld
xchg
lock
addr16
add
cmp
inc
xor
cmp
xorl
add
pause
aam
mov
push
ja
cmp
repz
les
cmpl
aam
fiadds
sbb
stos
xchg
mov
mov
js
cwtl
fnstenv
mov
push
test
xor
adc
inc
mov
daa
sahf
scas
out
movsb
orb
mov
in
mov
or
in
push
mov
ret
jl
ljmp
xchg
sbb
add
xorl
xor
mov
repnz
jae
pop
fldt
ja,pn
dec
aad
test
jge
inc
inc
cmp
lock
mov
xchg
neg
clc
call
in
mov
dec
jae
movsb
clc
mov
repnz
imul
movsl
mov
loope
sub
inc
stc
jo
test
sub
outsb
sbb
roll
dec
cmp
cwtl
cmp
jmp
add
xchg
stc
xlat
lahf
dec
push
ficompl
jmp
ret
fldcw
jg
iret
insl
xor
xor
sbb
fistpl
arpl
andl
xor
fmuls
mov
fadds
mov
xchg
pop
sbb
orb
popa
sub
mov
cltd
mov
push
loopne
ret
icebp
adcb
pushf
repnz
add
lret
stos
xlat
mov
test
xor
sub
divb
push
sbb
test
push
push
fsubs
adc
ljmp
out
pusha
inc
inc
test
jmp
je
neg
repnz
stos
cli
inc
test
cmp
sub
dec
xchg
push
mov
pop
lret
add
ret
cld
out
ja
test
aaa
pop
xor
mov
fxch
cmp
and
sbb
pop
jle
js
rcrb
mov
jl
cmc
les
test
sub
lds
and
pop
adc
out
xchg
das
jno
mov
js
lcall
je
sub
mov
push
psubusb
out
gs
pop
xchg
and
nop
and
jge
cmpsl
test
ds
rolb
inc
in
push
andl
add
mov
mov
sub
mov
dec
jns
sbb
in
adc
rcrb
add
mov
mov
jns
std
iret
fnstenv
cli
fcoml
mov
negb
scas
mov
call
sub
stos
in
in
mov
pop
push
xchg
das
enter
cmpsl
or
jbe
sub
outsl
pop
iret
jns
mov
dec
adc
inc
icebp
jno
inc
push
daa
sbb
hlt
cmp
leave
xchg
in
loop
jno
das
lahf
fsubl
inc
negb
pop
add
fimull
cmp
mov
adc
add
mov
push
or
shrb
jmp
daa
cmpsl
sub
push
adc
ret
sbb
es
dec
in
sbb
sub
in
jno
fs
in
das
fs
dec
pop
inc
popf
fnsave
call
enter
imul
sbb
shl
mov
jle
xchg
cmp
jns
xchg
or
js
jae
xchg
push
ja
stos
sti
xlat
xchg
inc
mov
test
stc
jg
cmp
mov
push
imul
outsb
loope
gs
cmp
mov
add
cmp
mov
rcrb
jp
scas
xchg
push
push
mov
xchg
popa
mov
lods
push
arpl
mov
cmp
insb
test
mov
sbb
pop
inc
into
rcrb
mov
in
jns
inc
cmp
adc
jae
lds
jb
jbe
xor
adc
mov
in
mov
or
dec
push
aaa
popf
int
fstl
imul
cmpsl
fcoms
mov
mov
xor
in
sub
cmp
and
mov
cld
or
adc
inc
mov
xchg
lret
adc
aam
xor
ret
mov
xchg
xor
cmp
sub
jg
adc
pop
mov
rol
faddl
mov
test
mov
adc
ja
hlt
xchg
lret
test
inc
push
mov
hlt
xor
out
mov
or
pop
cmp
pop
or
jbe
jne
sbb
xchg
nop
cmp
add
shll
xchg
and
adc
mov
in
iret
jmp
das
inc
les
mov
mov
sub
imul
popf
mov
adc
test
push
dec
push
pop
test
mov
cmp
push
adc
fnsave
test
in
push
pop
fldcw
and
arpl
pop
jp
loope
shrl
push
test
push
mov
and
cmp
into
pop
xor
addl
and
sar
sarb
lods
and
xor
mov
insb
daa
mov
mov
or
imul
sbb
in
add
in
mov
ja
sbb
jbe
mov
cli
mov
sub
mov
cmp
add
xchg
jmp
mov
arpl
mov
jl
hlt
add
pop
lret
shrl
jo
test
xor
imul
mov
popf
push
cmp
ret
lahf
addb
pop
and
jg
push
push
cs
pushf
mov
and
inc
pop
sbb
les
inc
aas
sub
insl
jmp
fimuls
and
and
mov
push
popf
shll
repz
sbb
push
sti
add
lcall
or
sahf
sub
xlat
or
xchg
or
in
mov
jle
mov
xor
lds
cmp
mov
or
xlat
fimull
xchg
pop
cmp
test
pushf
cwtl
mov
and
inc
ss
sub
adc
mov
push
adc
xchg
mov
pop
or
mov
sbb
dec
sti
adc
sub
daa
sbb
call
jne,pt
fs
sub
daa
and
xchg
int
imul
xchg
or
insl
sahf
adc
mov
lea
dec
fs
pusha
cwtl
push
aam
add
jmp
inc
test
call
shrb
leave
test
cmp
xchg
mov
dec
mov
sbb
mov
xchg
jmp
push
rcll
jl
dec
or
nop
and
mov
dec
push
adc
fisttpl
mov
push
dec
fdivrl
and
pushf
add
inc
dec
cmpsb
popf
je
nop
adc
pop
jae
lock
fdivrl
mov
inc
mov
data16
scas
xchg
fs
inc
push
std
in
add
addr16
cmp
mov
fdivs
sbb
mov
les
pop
xor
pushf
aad
mov
inc
lret
fdivrl
imul
lods
push
loopne
lcall
outsb
sub
cmpsb
enter
dec
adc
loop
push
mov
dec
in
fstpt
das
dec
or
dec
push
pop
fisttps
lds
push
xor
push
sub
lret
jbe
popf
pop
jns
int
mov
das
femms
test
cmpsb
int
leave
jmp
and
xchg
inc
add
les
mov
jecxz
ss
call
loope
enter
movsl
xchg
pop
movsl
add
sbb
sti
gs
xchg
in
adc
movsb
inc
inc
and
fstl
fwait
test
clc
sti
out
add
dec
jg
loope
movsl
imulb
aas
or
and
mov
mov
stos
sbb
in
xor
out
push
ss
push
adc
push
add
add
add
in
add
add
add
add
add
lds
add
add
add
add
mov
add
add
add
and
add
add
add
fiadds
add
add
add
add
addb
add
ljmp
ja
mov
call
jb
jne
insb
push
jb
je
arpl
loopne
add
push
pushl
call
push
mov
pushl
call
pushl
call
pop
lods
cltd
inc
add
add
pop
and
and
outsl
and
les
xor
xor
add
add
add
pop
add
add
mov
add
add
or
add
or
add
add
sbb
sbb
fadd
dec
sbb
pop
xor
add
and
jb
push
dec
push
sbb
fs
add
push
outsb
or
cld
stc
xor
sar
clc
dec
inc
in
jmp
fdivr
or
decl
adc
je
inc
adc
leave
dec
xlat
out
decl
pop
in
mov
loope
pop
ret
in
add
adc
sbb
add
adc
push
inc
cld
stos
aam
rolb
adc
loopne
mov
call
test
add
pop
add
jmp
std
pop
std
je
push
xor
stc
stc
rcll
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
fdecstp
push
call
add
push
add
and
and
je
add
add
add
add
xchg
sbb
sbb
sbb
out
add
sbb
jae
outsl
gs
insb
movsl
insl
insl
add
inc
je
add
movsl
outsb
jnp
inc
outsl
gs
imul
jae
insb
je
mov
insb
imul
inc
push
jne
gs
jae
sbb
jae
jae
loopne
insb
add
add
add
stc
pop
mov
add
add
sbb
add
ret
out
lock
out
das
addr16
idivl
mov
xchg
mov
mov
or
pop
xor
pop
pop
outsl
adc
and
cmc
dec
push
rorl
lret
test
repz
fisubs
stos
add
add
sbb
mov
and
test
out
xor
jl
fdivs
dec
lahf
test
repz
fistpl
lock
das
adc
shrl
push
mov
xor
jns
lock
out
mov
pop
mov
hlt
adcl
push
sub
imul
nop
dec
jp
xchg
mov
pop
cmpsl
or
pop
xlat
jae
popf
mov
sahf
lods
test
push
vcvttsd2si
fcmovnu
in
fdiv
add
lds
or
lea
or
jecxz
jb
int
mov
mov
lea
pop
fwait
mov
insl
sti
sbb
jecxz
cmpsl
push
pop
cmp
sbb
ljmp
inc
imul
ss
aaa
mov
loopne
and
aad
ficomps
lock
cmp
hlt
pop
xor
cltd
xor
jne
mov
push
cld
fisubl
outsl
mov
and
push
jge
mov
hlt
mov
push
lcall
arpl
or
mov
cmp
jo
in
outsl
cmpl
pop
mov
xchg
cmp
mov
pop
push
fcoms
lahf
add
cmp
pushl
repz
in
sub
push
lock
pop
popa
pop
add
scas
add
or
pop
mov
pusha
je
test
add
movsl
mov
jle
insl
icebp
xchg
in
xor
nop
xorb
sbb
iret
addr16
jg
leave
lcall
and
int
xor
cmpsl
mov
mov
pusha
jl
mov
mov
pop
push
test
jne
xor
sti
xchg
in
xchg
adc
and
in
in
test
out
xor
pop
pop
dec
lret
adcb
cld
lret
pop
mov
sub
pextrw
and
cmp
shlb
rcll
pop
pop
jmp
xchg
in
cli
shrl
inc
dec
mov
xor
js
popa
xchg
pop
clc
cltd
jmp
ljmp
jl
or
and
or
in
xchg
test
ja
lret
adc
ja
clc
sarb
push
mov
xorl
lods
aam
push
enter
cli
xlat
cli
xchg
sbb
cmp
and
dec
es
in
int
dec
rcl
in
insb
daa
or
mov
and
mov
out
pop
loope
aad
aaa
sub
ss
add
jg
jl
inc
adc
mov
xor
loope
dec
sub
insb
pop
mov
fcoml
fsubr
inc
movsl
sti
cmc
loop
xorb
addb
test
cmp
mov
push
inc
jmp
ss
inc
stos
in
add
push
fsubrs
dec
jl
push
sbb
cld
add
pop
cmpsb
cli
and
mov
mov
clc
gs
inc
das
stos
push
iret
outsl
xorl
ret
out
cltd
add
inc
loop
mov
pop
std
push
push
and
int3
mov
clc
imul
lock
adc
test
jbe
iret
outsl
adc
push
mov
outsl
inc
pop
bound
ret
loopne
and
aas
pop
or
aaa
pop
aas
jo
test
andl
pop
mov
push
jno
jl
iret
addl
adcl
ud2
es
les
mul
fdivl
mov
fistpl
scas
and
sbb
fildl
fmul
ljmp
mov
jae
pop
and
movsb
adc
pop
push
scas
andl
mov
ror
adc
addl
or
adc
sub
mov
ja
mov
push
fldt
std
call
fmulp
and
outsl
das
pop
mov
stos
sub
xor
adc
and
sbb
pusha
xlat
rcl
test
ret
aad
jecxz
les
pop
inc
xchg
or
xor
out
fiadds
iret
and
xor
cmp
cmp
fidivs
mov
mov
loopne
loopne
icebp
clc
in
mov
ja
jbe
push
mov
xchg
mov
ja
sti
addr16
repz
in
ret
xchg
xor
addr16
daa
xlat
mov
inc
mov
and
and
les
les
jge
xchg
loop
imul
cmp
mov
cs
iretw
sub
nop
pop
nop
jo
sub
mov
mov
add
lock
fiadds
call
xlat
xchg
push
cmpsb
sub
movsl
insl
aaa
faddl
mov
cmp
nop
or
add
adc
mov
add
xorl
xor
mov
stos
cld
push
add
xchg
lods
ss
mov
movsb
pop
push
push
mov
shrb
fcoms
dec
mov
inc
mov
sbb
sub
mov
push
cmp
push
mov
in
out
cltd
sub
xchg
xchg
test
sbb
lcall
arpl
mov
cmc
jne
jecxz
test
mov
lret
cmp
xlat
test
addr16
inc
pop
mov
jp
cmp
xorb
mov
bsr
mov
popf
data16
add
mov
scas
jbe
andb
gs
sbb
sbb
cmpsl
movsl
push
sub
ja
jp
popf
repnz
jnp
xor
bound
mov
lret
aam
outsb
iret
adc
out
pop
sub
popf
jmp
aam
add
xchg
xor
inc
pop
push
inc
std
bound
fstpl
sub
add
inc
les
ds
lods
jmp
stos
mov
idivb
jno
adc
jnp
cmp
cmp
push
mov
jp
xor
pop
cmpsl
ljmp
hlt
addr16
ret
lcall
pop
loopne
pop
repz
movsb
mov
sarb
jae
out
jo
imul
daa
shll
pop
js
inc
push
inc
fldl
out
sub
push
rcl
add
lods
movsb
jmp
cmp
popa
rcll
scas
mov
arpl
jle
mov
inc
in
push
out
hlt
pusha
addr16
push
cmc
clc
xlat
cs
xchg
lods
outsb
add
mov
cmpsb
es
jnp
ds
mov
inc
loop
jle
mov
lea
and
cld
xchg
jnp
jns
repnz
test
ljmp
xor
pop
and
fsts
add
int
mov
adc
sub
loop
negb
xchg
ret
cmp
jno
mov
loopne
in
test
sbb
or
push
add
movsl
pop
inc
xor
sbb
add
mov
dec
repz
or
ror
enter
inc
sbb
mov
sub
in
movsl
pop
adc
jne,pn
imul
into
daa
xlat
xor
dec
jae
cwtl
pop
jae
xor
fwait
les
xor
aas
pushf
mov
mov
test
subl
mov
dec
fmulp
fs
lahf
pushl
scas
loop
push
fcoml
cmp
add
ss
outsb
jp
and
jb
add
sbb
js
mov
movsb
outsl
xchg
lret
mov
cmp
addr16
mov
lock
ja
rorb
pop
sbb
xor
popf
fs
mov
out
mov
pushf
mov
pop
add
jg
add
sub
sti
and
sub
jno
iret
popf
movsb
ja
out
sahf
daa
add
inc
sub
xor
mov
fstpl
ret
mov
pop
mov
stos
xchg
in
mov
mov
mov
int
fcoms
bound
lods
mov
mov
mov
jbe
mov
mov
hlt
cmpsb
mov
cmp
repnz
push
cltd
int
lods
lock
into
pusha
shll
xlat
xchg
addr16
out
imul
pop
loop
loopne
add
xchg
jne
dec
out
rcl
or
js
dec
jno
ss
dec
orb
mov
jmp
repz
sbb
mov
cmp
jle
lods
mov
jb
push
in
xor
in
add
leave
inc
adcb
pop
mov
outsb
aam
xor
pop
jno
ja
sti
mov
imul
shlb
add
push
xor
adc
movsl
mov
popf
xor
bound
lock
mov
jo
inc
loop
cmpsl
rolb
iret
adc
test
push
adc
and
icebp
adc
mov
imul
push
mov
and
leave
sub
jno
mov
test
popl
ss
js
sbb
sbb
jo
movsb
sarb
cwtl
sarl
inc
push
pop
stos
xchg
ja
jno
cmp
loope
rcrb
mov
stc
cmp
jl
cmp
movb
in
iret
pop
adc
mov
xor
pop
jg
inc
xchg
sub
inc
push
push
xchg
orb
jp
push
add
mov
scas
push
rorl
fstpt
stos
insl
negb
mov
add
dec
cmp
cmpsb
cs
andl
xor
xor
sub
stos
xchg
mov
pop
call
sub
cmp
movsb
xor
loope
icebp
and
clc
jae
cld
rcr
test
xor
lahf
and
hlt
leave
jb
rorb
add
and
scas
imul
mov
xor
mov
sbb
jecxz
jmp
dec
mov
movups
shlb
add
aad
mov
mov
and
jbe
rcl
cmp
dec
fdivrs
and
test
jnp
sub
mov
cs
dec
and
cmp
cmp
push
cmp
or
stc
push
jbe
add
add
ds
gs
js
cmpsl
jo
jns
and
popf
sti
xchg
mov
imul
jmp
data16
mov
cmpsl
or
xchg
dec
mov
push
fisttps
lock
hlt
imul
das
xchg
jbe
xchg
js
shrl
dec
ret
out
lcall
sbb
sub
lret
cmp
out
addr16
fstps
sbb
stc
lret
pusha
sbb
adcb
mov
inc
mov
cld
and
cmp
imul
aad
lret
and
repnz
out
push
xchg
sbb
cmc
ror
xchg
sub
ljmp
push
adc
leave
ds
sbb
ss
rolb
loope
aad
cmpl
gs
fisubrs
cmp
out
out
or
xchg
jbe
add
sub
mov
stc
xorb
mov
cwtl
addr16
clc
mov
jne
push
sbb
dec
les
xchg
sub
stos
push
movsb
in
icebp
pop
sarl
mov
out
lahf
js
lock
sarb
shlb
cli
ds
inc
lcall
xchg
aaa
ret
mov
cmp
dec
outsb
in
mov
jmp
loop
ss
or
mov
pop
xor
in
push
or
cli
fsubp
scas
mov
aam
or
lock
add
nop
pop
inc
add
sarb
js
sbb
jmp
daa
ljmp
cmp
mov
in
lcall
movsb
aad
and
cmp
xor
and
fcmovnbe
in
fstpl
or
and
jbe
mov
mov
mov
cmp
addb
sub
in
xor
mov
aad
adc
orl
bound
mov
lret
fisttpll
xchg
adc
sub
add
es
mov
stc
pop
in
test
rorl
push
cltd
aam
test
ficomps
shll
xor
call
mov
stos
ret
clc
ret
ret
testl
jle
mov
sub
jno
sbb
xor
gs
aas
xchg
xor
dec
fiaddl
loopne
push
in
scas
int3
rolb
fistpll
sub
push
ljmp
leave
mov
mov
xor
xor
mov
sbb
dec
or
js
mov
ret
push
negl
pop
adc
xchg
out
mov
lea
mov
mov
mov
mov
push
mov
jl
inc
rolb
repz
sti
sub
lret
into
mov
mov
shll
cltd
xor
lahf
inc
xor
and
xchg
sahf
mov
or
sbb
mov
ret
fisubs
mov
mov
xor
test
jns
mov
cmp
inc
cltd
adc
cmp
push
clc
jo
pop
jb
or
xchg
outsl
push
sub
mov
inc
cmp
sbb
add
sarb
jae
sbb
sbb
xor
pop
rorl
lods
ja
enter
cmp
sbb
adc
xor
xchg
and
inc
sub
push
and
in
test
mov
movsl
movsb
int
in
jp
call
jmp
pop
loope
stos
loop
cmp
mov
inc
hlt
push
mov
fbld
sbb
push
stos
xchg
icebp
test
push
xor
jbe
fs
gs
xchg
lock
push
rcrl
addr16
ja
sti
jno
fcoms
inc
sub
pusha
xor
movsl
inc
nop
adc
cmp
adc
pusha
popl
push
aas
jne
test
fldcw
ss
jge
xchg
sti
das
xchg
and
adcb
jge
iret
pop
xchg
push
fldcw
bound
sarb
js
decl
repz
scas
xor
jbe
mov
sbb
push
xchg
dec
jge
out
fdivr
inc
cmpsl
leave
loopne
cmp
popa
je
mov
mov
imul
por
sub
mov
cwtl
and
popa
pop
popl
xchg
xchg
dec
leave
cmp
adc
sbb
xchg
scas
sbb
mov
lahf
cmp
jns
xor
mov
scas
popl
xor
and
in
test
lods
leave
push
or
xor
dec
jp
mov
sbb
mov
ljmp
add
xchg
mov
pop
pop
add
pop
xchg
sbb
lea
stc
arpl
jmp
xor
push
jge
or
out
out
push
arpl
into
xchg
adc
dec
sbb
fwait
js
or
mov
roll
mov
hlt
mov
dec
test
mov
lock
into
dec
xor
adc
out
push
lds
je
stc
lods
insl
and
or
hlt
xor
fucomi
int
jle
repnz
fcomi
pushf
into
xor
jp
outsl
xchg
add
pop
es
fisubrs
in
mov
roll
movsl
insl
cmp
pop
add
or
fmull
icebp
loop
xchg
divb
mov
mull
mov
jl
test
cmpsb
mov
ljmp
fst
jnp
jno
xchg
mov
icebp
test
sbb
push
dec
xor
je
add
fcomi
cwtl
mov
data16
outsb
sub
xchg
xchg
rclb
and
lods
mov
push
mov
push
add
sbbl
or
test
jge
xchg
adc
outsb
xchg
sub
and
mov
jp
and
add
das
mov
fidivrl
movsb
imul
mov
int
pop
shl
scas
sbb
cli
sahf
mov
inc
incl
adc
aad
mov
xchg
cmp
int3
in
jl
xor
stc
sub
in
add
xchg
out
gs
decl
sub
sub
inc
out
mov
or
idiv
dec
or
daa
pop
dec
or
stos
sub
push
xchg
stos
es
insb
frstor
scas
jae
in
insb
add
imul
clc
addl
lret
xor
daa
es
lods
rol
mov
std
out
jecxz
imul
repz
int
repz
mov
lret
xchg
movsl
adc
mov
jbe
mov
hlt
out
sbb
popa
mov
add
in
and
add
scas
sbb
mov
add
rorl
or
pop
insb
test
enter
dec
jnp
iret
pop
popf
scas
cltd
inc
xlat
add
fdiv
add
jne
push
stc
scas
mov
adc
push
jb
cmp
dec
push
cmp
push
mov
jbe
dec
call
pop
add
outsl
aam
xchg
fidivrl
sub
arpl
mov
rcl
inc
ret
xchg
xchg
dec
lods
jo
out
sbb
xchg
lds
pop
pop
in
out
in
arpl
add
lret
stos
jnp
cmp
dec
mov
stos
sbb
insb
sbb
imul
mov
sbb
cmp
inc
ja
inc
and
xor
jo
lahf
push
sub
lods
or
xchg
stc
leave
add
add
cmc
in
shll
outsb
clc
lock
shlb
cwtl
fldt
push
xor
jns
adc
cmp
jnp
mov
xor
cmpsl
sti
ljmp
mov
sub
pop
dec
mov
pop
add
xchg
or
fisubrl
loop
test
dec
adc
movsl
cmp
xchg
movsb
dec
mov
insl
repnz
into
std
pop
add
sbb
xor
pop
adc
add
pushf
lcall
dec
cmp
inc
inc
jle
mov
ja
insb
adc
sub
add
orl
dec
add
push
adc
add
aaa
movsl
or
movl
sub
imul
je
in
sub
cmpsl
insl
jns
int
sbb
addr16
test
rclb
lds
movsb
xor
pusha
mov
mov
cmc
push
pop
xor
fwait
cltd
mov
adc
xchg
mov
fwait
adc
hlt
jbe
mov
aad
repnz
ffree
sub
rcrl
sub
push
dec
lahf
inc
cmp
mov
inc
inc
or
sbb
inc
push
jo
cmp
jns
in
xorb
sbb
ds
pop
mov
arpl
dec
cmp
dec
fwait
icebp
aaa
dec
add
insb
scas
push
icebp
test
enter
clc
add
add
add
add
add
sbb
add
add
add
cmp
add
push
add
add
add
add
add
add
add
or
insb
pop
add
or
in
in
in
in
inc
add
add
imul
add
js
js
xor
add
add
add
mov
insl
add
add
add
adc
mov
add
add
dec
pop
push
or
add
add
add
jb
add
add
add
inc
sbbb
sbb
sbb
sbb
sub
clc
sbb
add
jmp
jns
jne
dec
pop
je
jb
outsl
inc
dec
and
sbb
inc
roll
out
xor
add
add
jmp
clc
inc
mov
xor
add
cmp
mov
push
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
cmp
add
add
push
jmp
xchg
in
inc
pop
js
jge
push
push
add
call
add
lods
cmp
adc
decl
adc
test
mov
inc
je
rolb
sar
jmp
add
push
push
jne
test
add
lods
loop
mov
movsl
test
stc
push
clc
push
add
jge
add
inc
add
push
xor
add
add
insb
add
add
add
mov
sbb
sbb
sbb
push
sbb
mov
jbe
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
cmp
mov
jae
outsl
imul
jae
cmp
gs
add
add
inc
je
add
add
inc
inc
inc
xor
add
add
add
call
add
add
adc
mov
movsb
aas
cs
aad
adc
xchg
gs
jne
testl
imul
nop
pop
mov
xchg
mov
lods
cmp
out
jle
xor
sub
decb
pop
add
cli
xor
pop
xchg
mov
push
xor
ficoms
push
mov
add
mov
vpsraw
repz
dec
push
bnd
int
mov
and
push
mov
daa
mov
test
push
mov
and
leave
jne
push
lret
fadds
outsl
cmp
pop
cmp
movsl
sub
cld
xchg
xor
aam
lods
push
mov
in
jecxz
lahf
ficomps
dec
mov
jl
int3
push
xlat
sub
psllw
out
pop
insl
imul
xchg
dec
adc
scas
jno
bound
mov
scas
imul
cld
push
and
aaa
and
mov
adc
test
loopne
jae
jp
mov
cmpsl
out
cmp
into
movb
jnp
out
mov
xor
and
sti
xor
xchg
loop
gs
adc
mov
xchg
mov
or
sub
aam
push
dec
movsl
cmovbe
scas
pushw
cmp
lahf
jns
cmc
dec
push
cmp
stc
mov
pop
xor
cmp
and
cli
stos
xchg
xchg
mov
xchg
xor
push
or
cltd
sub
ret
frstor
les
sbb
sub
cmpsb
sub
jnp
je
adc
add
sbb
into
sub
inc
xor
movsl
loope
xor
out
por
imul
adc
xor
fcomp
jae
negl
push
sbb
shll
scas
out
je
aaa
popa
sbb
jmp
insl
mov
mov
mov
lods
or
fsub
pop
dec
pop
out
xchg
pop
sti
add
push
pop
sub
pop
fstl
sub
sub
sbb
pop
int
mov
iret
adc
and
das
les
idivb
or
pusha
lahf
mov
out
movsb
adc
roll
aad
xchg
pop
mov
mov
xor
push
mov
popa
pusha
dec
cli
pop
mov
rolb
jo
inc
push
je
jmp
rolb
xor
out
repz
jno
and
jne
psubsb
xor
and
sbb
clc
pop
lds
inc
es
and
in
clc
pop
inc
and
push
mov
test
fnstsw
jns
inc
jge
inc
cltd
pusha
mov
cmp
jg
test
bound
imul
ds
mov
cwtl
mov
push
roll
sub
mov
xchg
lret
dec
pusha
push
pop
lcall
lahf
pop
sbb
ret
popf
adc
xchg
inc
and
mov
jne
aad
cmp
ss
dec
loop
test
mov
sub
mov
nop
pop
pop
jne
cmpsl
popa
lahf
pop
add
jg
push
aaa
push
fsubl
xchg
cmpsl
adc
and
xchg
stc
mov
xchg
fisubrl
insl
jb
and
add
addl
outsb
rolb
xor
sub
jnp
sahf
cld
in
xchg
mov
or
push
ljmp
loopne
fcmovne
flds
lahf
in
mov
cwtl
mov
cltd
pop
cmp
lock
sahf
jb
mov
jmp
sub
and
adc
add
fisttpl
ret
hlt
ret
dec
test
ret
setb
jmp
fptan
pop
das
xor
jne
dec
cmp
stc
mov
sti
push
sub
jno
sbbb
mov
dec
dec
pop
dec
leave
dec
cmc
pop
pop
mov
sub
mov
mov
dec
insb
mov
or
call
sbb
xchg
repnz
xchg
aas
subb
out
mov
lds
movsb
xlat
xchg
adc
fidivl
enter
dec
hlt
loop
jle
lcall
rorl
and
mov
imul
xor
std
fisttpll
xor
aaa
cmp
imulb
jo
test
lcall
mov
pop
test
mov
mov
xchg
rolb
and
cmpsb
or
mov
push
stos
and
mov
inc
inc
movl
ficomps
test
sbb
rolb
fcomi
popa
test
inc
pop
scas
or
dec
sbb
push
test
or
or
mov
adc
mov
test
mov
adcb
jnp
mov
inc
mov
movsb
cmp
xchg
fldl
outsb
cmp
adc
inc
jmp
es
test
add
jns
xor
dec
dec
cmp
lds
mov
and
loope
mov
stos
jne
dec
add
ret
push
pusha
and
push
dec
in
mov
pop
loope
imul
popf
ljmp
scas
jnp
aas
push
repnz
mov
sbb
mov
test
sub
or
push
std
mov
push
xlat
cmc
js
ficomps
fdivs
je
aam
jns
inc
fs
stos
sub
mov
cmp
es
xorl
daa
das
cmp
rorl
cld
sub
ret
enter
stc
add
inc
fldcw
aad
xchg
xchg
popf
add
arpl
mov
test
outsb
hlt
push
mov
xor
in
sub
dec
add
adc
pop
sub
ljmp
mov
ret
and
xchg
loop
mov
lea
jne
out
stos
mov
mov
pop
jmp
sub
jge
in
jbe
sbb
testb
call
imul
mov
aaa
lods
mov
mov
adc
xchg
or
cmpsb
dec
fs
outsb
outsl
xchg
dec
je
xchg
ret
dec
pop
add
add
ret
fisttpll
bound
lret
inc
cmpsl
nopl
mov
ds
and
cs
scas
aad
pop
dec
cmp
mov
jl
or
xchg
pop
insl
loope
jo
lock
xor
gs
loopne
pop
pop
je
xor
xor
and
jp
out
inc
clc
fsubrl
pop
inc
and
decb
jb
lock
call
push
xchg
mov
sbb
sub
add
dec
or
scas
jns
hlt
push
loope
arpl
js
sub
xchg
mov
sub
cmc
push
jle
sub
push
pop
out
mov
loopne
pop
aad
sbb
ja
cmpsl
fldenv
pop
aas
cmc
and
xchg
out
aaa
aam
adc
sub
jae
sub
xchg
cmpsl
add
das
inc
mov
int3
fisubl
inc
sbb
lds
mov
rcrb
and
daa
cltd
std
out
inc
inc
aas
jle
out
lret
inc
xorb
idiv
pusha
or
loop
jnp
pop
push
ljmp
mov
sub
xchg
mov
repz
and
pop
push
movsb
movsl
and
std
sub
insl
insb
popa
fisubs
les
xor
pusha
or
push
inc
roll
clc
cs
dec
ja
ja
sub
pop
xor
mov
sarb
xchg
ds
or
dec
sbb
push
seto
mov
negl
into
mov
scas
jne
mov
xor
cmpsb
inc
mov
push
or
add
xchg
xorb
cltd
adc
jb
sbb
clc
out
into
dec
movsb
jmp
adc
jg
sti
mov
lahf
jp
mov
movsl
outsl
jnp
mov
icebp
aas
pop
pop
stc
sub
jmp
pusha
dec
push
add
jbe
andl
fnstsw
pop
addb
fwait
mov
mov
xor
in
repnz
dec
adc
add
pop
push
cmp
call
insl
xor
in
adc
in
and
aad
push
mov
add
push
jnp
mov
rclb
cmpsb
in
push
mov
cmp
sub
fisubrl
shlb
mov
pop
cmp
mov
xchg
cwtl
dec
movsb
aaa
outsb
jo
stos
xor
nop
jge
daa
std
xor
rcrb
pusha
fistl
sarb
imul
test
rclb
imul
aaa
negl
dec
or
or
cmp
xchg
cli
mov
push
add
push
mov
out
mov
and
jp
mov
arpl
pop
fmull
nop
dec
sub
inc
addr16
and
jp
cwtl
jmp
pusha
sub
pop
xor
std
loopne
inc
fwait
jbe
and
sbb
and
aaa
lea
stc
jge
jnp
je
jne
mov
cmc
loopne
out
dec
ljmp
movsl
mov
fcmovnu
add
outsl
cwtl
shr
mov
mov
mov
and
fwait
inc
push
lods
xchg
lds
stos
imull
cmpsb
imul
out
jns
add
cwtl
popa
mov
pop
cmp
jnp
jg
lock
ss
sbb
or
daa
scas
push
and
repnz
jo
daa
cld
loop
cmc
push
hlt
jmp
mov
fbstp
mov
stos
cs
pop
mov
push
and
rcrl
push
mov
cwtl
mov
fcompl
or
std
pop
mov
pop
push
adc
sti
dec
xchg
in
adc
cwtl
sbb
jmp
cmp
add
add
iret
insb
int3
shr
cwtl
call
rcl
sub
cmp
sti
testl
xchg
mov
adc
outsb
pop
or
aas
mov
adc
out
jbe
push
mov
push
int3
stos
jg
xor
lret
cmp
mov
jl
aaa
out
jnp
fwait
adc
cmp
pop
mov
adcb
imulb
dec
mov
jle
fnstsw
jp
fs
cmpsb
outsl
fwait
and
jmp
stc
push
fucomp
inc
and
dec
ds
in
bound
adc
in
add
lds
les
push
test
pop
les
je
sahf
mov
dec
sub
cmp
sbb
cli
push
fiadds
das
sbb
sub
jmp
imul
push
cmp
pop
lods
pop
ret
aad
xchg
jae
xchg
jo
inc
iret
jb
roll
mov
dec
rcrb
cmpsl
add
adc
insl
jge
xor
sub
xchg
xchg
cmp
jne
lcall
inc
fldcw
leave
add
adc
aas
shrd
pop
add
push
jb
stos
dec
cmp
imul
xor
sbbl
push
pop
adc
push
test
inc
hlt
rol
loope
xor
push
jno
loop
push
jl
aas
sbb
xchg
xchg
adcl
pop
pop
xchg
cltd
xchg
mov
push
mov
cmpsb
pcmpeqb
ret
vorps
sti
mov
adc
inc
leave
shll
mov
sar
lods
adc
push
pop
sub
fstpl
dec
test
mov
xchg
test
int3
dec
mov
dec
cmpsl
adc
mov
in
addr16
insl
pop
inc
jecxz
push
push
out
stc
mov
adc
imul
push
js
jp
lock
scas
xchg
pop
xor
fldenv
ror
push
lods
jno
push
movsl
mov
fs
inc
sub
shrl
gs
shrl
xor
push
xchg
lret
adc
fs
or
mov
push
fstl
push
sbb
aad
ret
outsl
xchg
jmp
push
pop
cmpsl
pop
pop
mov
repnz
jmp
push
je
jmp
inc
fimull
mov
push
cli
mov
push
inc
jp
push
stos
inc
adc
mov
inc
inc
pop
out
cwtl
fwait
dec
xor
stc
mov
jnp
out
out
lods
xor
jp
jo
pop
pop
cwtl
mov
rorl
fidivrs
insb
cltd
sbb
sub
movsl
loope
mov
lods
mov
out
mov
mov
jmp
sahf
out
sbb
mov
xor
fcmovu
fidivrs
imul
nop
xor
and
dec
pop
mov
mov
xchg
fwait
adc
inc
fmulp
xchg
jne
mov
int3
xchg
dec
nop
and
sub
push
xchg
jmp
sub
push
push
push
push
inc
gs
mov
shrb
dec
push
or
dec
out
cmp
test
int
daa
mov
mov
fcomi
aam
cmc
xor
jge
push
in
fstpl
mov
mov
push
xor
shrl
push
or
mov
out
cmpsl
pmaxub
call
dec
fmuls
inc
fcoml
dec
fstl
call
int3
repnz
loope
out
add
mov
jne
out
adc
imulb
mov
dec
ja
and
leave
in
mov
and
jo
adc
sub
push
push
mov
repz
nop
jle
ss
fs
stos
xor
ret
ljmp
aad
mov
mov
iret
xor
in
adc
repz
decl
mov
push
jg
mov
mov
andb
inc
test
xchg
xor
enter
pop
push
cmpsb
in
jg
mov
les
stc
rorl
xchg
in
adc
pop
or
aam
int3
adc
dec
hlt
jbe
mov
clc
pop
cmpsl
sti
cmpl
pop
jp
or
lret
es
pop
or
dec
lsl
mov
sbb
call
mov
cld
or
inc
or
xchg
and
mov
out
out
daa
repz
xorl
cmp
outsl
lahf
cmp
lock
hlt
sub
addr16
xchg
sbb
dec
rcll
dec
push
ljmp
sti
sbb
orb
dec
jb
sub
pusha
jbe
lds
bound
shlb
cs
push
lds
push
mov
popa
pop
inc
in
hlt
sbb
push
enter
jae
adc
mov
arpl
jp
shlb
inc
lahf
je
xor
push
icebp
jnp
fistps
jae
inc
jb
dec
leave
lea
leave
int3
dec
jbe
adc
xlat
sti
stos
mov
dec
in
inc
sub
jle
cmpsl
scas
or
popa
push
in
add
pop
insl
stos
ficomps
cmpb
xchg
out
cmp
fwait
sub
rcl
push
push
cltd
push
or
mov
or
fists
or
mov
imulb
push
icebp
aaa
pmaddwd
repnz
dec
push
loop
test
lea
inc
loopne
loopne
aaa
data16
ljmp
repz
pop
pop
test
jg
or
out
cmp
scas
sub
push
sub
cwtl
jb
jecxz
xlat
adc
nop
daa
add
ret
push
loope
or
jo
dec
xor
pop
or
adc
pop
push
mov
scas
sub
lcall
loop
mov
pop
add
jo
xchg
pop
outsb
movsb
aas
mov
mov
je
and
bound
and
sub
push
lret
mov
jo
xor
loopne
push
pop
insl
push
call
bound
push
mulb
pop
mov
int
out
test
imul
adc
mov
xor
je
cmp
cmp
cmp
arpl
cmp
xchg
rcl
mov
loopne
dec
pop
ret
mov
inc
out
popa
shl
push
and
sub
in
sets
int
movsl
pop
jp
inc
test
cltd
fildll
cwtl
filds
adc
push
jae
sub
xor
mov
xchg
fcomps
fimull
testb
add
jae
gs
lea
mov
add
ret
aaa
fucomi
call
mov
sub
xchg
sti
mov
inc
jnp
stos
lea
cmp
bswap
in
pop
or
mov
std
push
add
aaa
hlt
mov
fbld
push
and
push
out
cmp
fdivp
xchg
sbb
sbb
inc
pusha
ret
dec
sbb
das
mov
add
xchg
in
xchg
or
stos
xor
jnp
push
add
sbb
mov
lods
xor
sbb
lcall
outsb
inc
mov
pop
jns
and
jns
or
mov
sbb
popf
in
cwtl
daa
pop
inc
push
dec
cli
jns
mov
cmp
jno
sti
xchg
ret
mov
test
adc
js
xchg
xchg
mov
and
fistps
pop
pop
aas
arpl
outsl
leave
and
test
and
cwtl
call
rolb
jae
pop
int
xchg
sub
ret
pushf
out
movsl
sub
mov
scas
rcl
jns
or
and
cmc
xor
dec
push
push
insl
sbbl
or
and
pop
cmpsb
dec
push
add
stc
cmp
insb
or
aam
call
xor
fld
or
shll
xchg
mov
daa
mov
dec
dec
or
ss
dec
nop
insl
or
out
sahf
cmp
fwait
cld
adc
loope
setae
stc
adc
sbb
fisubrl
push
push
mov
mov
pusha
loope
data16
push
jmp
jle
lcall
jo
jp
xchg
lds
les
in
pushf
push
daa
jnp,pt
ja
mov
addr16
adc
push
add
ds
test
icebp
xchg
fldl
in
mov
outsb
cmc
xlat
xlat
dec
xor
inc
mov
mov
fldt
add
inc
outsb
fiaddl
test
jecxz
inc
arpl
sbb
inc
iret
jns
dec
int3
push
jge
mov
cs
add
or
call
in
test
pop
sbb
adc
and
xchg
add
add
xchg
mov
enter
imul
cs
fdiv
ret
in
aam
sbb
pop
daa
bound
sub
rcll
movsl
mov
pop
xor
dec
shlb
mov
xchg
sbb
loopne
sti
jne
data16
arpl
dec
mov
pop
ja
outsb
push
out
or
cmpsb
jle
fwait
or
stc
test
incl
lods
mov
xchg
jmp
jecxz
or
sub
push
pop
outsb
pop
xor
mov
je
xchg
push
test
fstpl
mov
ret
movsb
inc
adc
hlt
pop
sbb
jae
xlat
movsl
rcrl
sbb
lds
cltd
fcomi
push
cs
repz
adc
loop
xor
add
mov
andl
test
sbb
js
call
add
enter
add
adc
add
add
add
add
add
mov
add
add
sbb
add
xor
add
dec
mov
add
add
add
add
stos
xor
add
mov
jg
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
add
adc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
call
add
in
add
in
add
add
aam
add
int3
add
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
xlat
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
fadds
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
fadds
add
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
fiaddl
add
add
xchg
fiaddl
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcomp
add
loopne
add
in
fiaddl
add
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
fildl
add
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
faddl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
