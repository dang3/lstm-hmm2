push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
movb
out
cwtl
fcomip
arpl
jbe
and
inc
ret
data16
xchg
push
xorb
mov
divb
bound
xor
loop
repnz
std
push
xorb
mov
neg
out
xchg
xchg
mov
cmpsb
cmp
inc
mov
jle
gs
dec
mov
test
xchg
aaa
and
pop
cli
xchg
rcrl
popf
outsb
push
btc
data16
pop
fnstcw
add
imul
adc
mov
imull
sti
lcall
aaa
mov
das
cs
dec
inc
ds
xchg
cmp
xchg
dec
test
mov
outsl
mov
popl
xchg
xchg
push
andb
xchg
adc
fstl
push
xchg
sti
movl
ss
and
sub
stos
pushf
and
out
lea
cmp
shlb
out
loop
roll
mov
pushl
push
inc
orl
sub
mov
pop
jge
mov
mov
mov
mul
push
mov
cmpsb
mov
jbe
data16
push
mov
es
nop
add
dec
cli
iretw
insl
rcrl
inc
pop
xchg
inc
xchg
std
outsl
divb
jb
aad
mov
cmpsb
adc
xor
mov
xchg
aaa
xchg
and
inc
shll
leave
mov
and
add
xor
ret
data16
xchg
push
xorb
mov
divb
bound
xor
ret
data16
xchg
push
xorb
mov
dec
rol
dec
dec
mov
ret
les
scas
mov
in
sbb
jp
push
fwait
test
aad
stos
dec
mov
inc
push
iret
stos
pop
or
mov
js
imul
jmp
dec
dec
test
add
cmp
xlat
repnz
fstp
clc
xchg
and
fld
lods
ds
jle
fstpl
cmpl
icebp
and
mov
jl
push
movsb
dec
lret
rcrb
dec
in
mov
sbb
cmp
fwait
fwait
or
adc
nop
adcb
aas
sbb
adc
test
pop
fldenv
cli
cwtl
mov
mov
int
push
add
xchg
and
cmc
lock
xor
push
repnz
push
pop
sbb
stc
movsl
fsubrs
shll
enter
inc
dec
push
fcmovne
dec
and
out
pop
sbb
adc
dec
and
pop
loop
dec
jl
pusha
mov
add
push
jns
mov
push
push
xor
out
cli
mov
imul
mov
mov
xor
mov
loopne
jecxz
jno
xor
pusha
push
mov
neg
lea
das
sbb
hlt
dec
aaa
push
movsl
hlt
sbb
and
repnz
dec
iret
mov
or
jns
jmp
dec
iret
jecxz
aam
mov
cmc
ret
mov
jl
jb
mov
cmp
cwtl
add
lea
adc
jo
jnp
mov
jg
aad
xchg
mov
cmp
jno
push
fiadds
xor
sbb
cld
fwait
xchg
push
push
push
cltd
dec
and
aaa
cltd
sbb
test
mov
mov
out
and
addb
sub
sub
in
ffree
lea
filds
push
das
dec
pop
out
aam
arpl
jge
mov
ljmp
inc
fsubr
and
pusha
js
sahf
jmp
inc
mov
lods
addl
sub
push
mov
adc
push
enter
dec
inc
cltd
fistpll
jne
stos
push
mov
jnp
in
stc
dec
shlb
mov
push
ds
lea
sbb
arpl
pusha
lock
mov
xchg
aad
sub
loopne
out
dec
push
cmc
add
inc
jno
daa
loope
fwait
jnp
and
loop
cmp
popf
rorl
out
imul
fldenv
andl
rcrb
outsb
je
sbb
mov
popa
cli
test
push
push
push
xor
xchg
bound
jns
iret
jl
fnstsw
jmp
pop
push
lods
imul
aam
icebp
ret
pop
enter
sub
adc
mov
es
adc
cmc
inc
ds
in
in
ss
ds
stc
fldcw
jecxz
into
and
mov
mov
dec
push
adc
mov
test
mov
mov
mov
push
clc
jbe
add
scas
cld
popf
into
inc
out
test
mov
jne
sub
test
jl
aaa
out
ss
aaa
ret
push
popa
lret
test
lods
int3
inc
xor
xor
pop
or
add
push
scas
movups
or
mov
push
sbb
cmp
pusha
jg
mov
cmp
test
fldt
xchg
rolb
cmp
adc
sbb
mov
push
inc
popf
sbb
push
xchg
rcrb
ss
sti
fs
mov
cmp
inc
sbb
mov
int
loopne
ljmp
cld
cltd
cmp
xor
jns
jnp
movsb
sub
xor
pop
ficoms
mov
das
cs
and
cmp
nop
insl
int
xor
adc
push
fdivl
aad
outsb
clc
mov
sbb
jp
mov
add
and
dec
sub
dec
movsb
and
dec
dec
mov
lcall
popf
sbb
fstpl
xor
pushf
dec
sti
pop
out
mov
insb
pusha
push
nop
inc
jb
push
and
sbb
dec
pop
je
stc
mov
cmp
xchg
jle
dec
mov
push
rorb
cmp
jno
pusha
test
cmp
sahf
mov
iret
cltd
inc
call
jo
shrl
mov
pushf
ljmp
pop
add
pop
xchg
mov
mov
add
mov
fldcw
lcall
pusha
mov
mov
inc
mov
sub
test
and
cmovns
xlat
pop
mov
jnp
inc
mov
jns
hlt
icebp
aad
xor
lret
cli
mov
fistl
ja
xchg
daa
push
mov
pusha
inc
vmread
ljmp
and
fs
and
cltd
mov
jl
mov
enter
sti
imul
cld
pop
lcall
push
stc
lods
xchg
push
iret
push
push
addl
test
stos
pusha
mov
fucomi
mov
mov
dec
push
dec
pop
mov
out
fwait
sub
cmpl
divb
std
ljmp
and
stos
add
test
and
mov
sti
hlt
jge
dec
pop
popf
icebp
popf
mov
adc
pusha
arpl
push
int
mov
jp
and
ss
repz
repnz
lret
aas
ljmp
xchg
dec
fildll
out
fiaddl
lods
dec
mov
iret
xor
adc
test
sub
dec
gs
mov
jle
jo
sti
push
jne
lcall
push
xor
daa
jne
cmp
mov
in
imul
jl
fisttpll
mov
clc
es
inc
push
pop
js
dec
adc
adc
cmc
movsl
imul
shrb
or
pop
pop
iret
je
cmp
cmpb
sub
mov
scas
xor
ret
mov
daa
pop
test
pop
jns
mov
cmc
push
outsl
popf
push
push
xor
ss
icebp
lds
mov
cmc
fiadds
push
and
in
jo
inc
insl
dec
or
mov
sub
inc
out
pusha
push
sub
push
pop
pop
addb
imul
add
icebp
out
mov
std
sbb
pushf
dec
dec
push
push
xor
int
pop
mov
push
jecxz
adc
cmpsb
bswap
loopne
popa
mov
pop
cwtl
gs
push
inc
ror
inc
ret
mov
and
fdivrs
cmp
inc
xchg
shll
outsl
xlat
out
inc
pop
sub
loop
int
mov
repnz
lods
test
mov
dec
fs
mov
in
popf
adc
leave
in
lcall
add
stos
and
and
push
je
mov
pop
sub
mov
jp
push
pop
dec
cmp
jns
mov
or
xchg
std
push
and
popf
ljmp
jb
mov
cs
adc
adc
xchg
adc
stos
test
bound
ret
popf
dec
pop
fmul
mov
or
push
inc
xor
cmp
sbb
movsb
lret
add
inc
adc
push
sbb
mov
ljmp
in
aaa
push
adc
dec
dec
push
test
mov
xor
dec
sub
repnz
int3
test
push
inc
jecxz
push
imul
es
insl
or
out
jmp
inc
js
adc
sbb
mov
lods
call
xchg
testl
xchg
leave
xor
out
fcmovnb
xchg
pop
fs
jecxz
mov
pusha
and
incl
shrl
push
jge
je
out
movsl
ret
mov
adc
cltd
mov
subb
sub
icebp
or
sbb
sahf
xor
jg
jl
add
loopne,pn
mov
pushf
ljmp
lods
pop
adc
mov
jmp
lods
xchg
xchg
out
movsb
ret
fs
inc
aaa
push
xchg
flds
cwtl
mov
add
addr16
das
js
pop
repnz
cld
lods
inc
pop
jp
jmp
mov
shll
lcall
sub
add
fwait
lock
mov
fsubl
int3
mov
mov
lods
adcl
ljmp
push
stos
cmc
adc
and
lahf
repnz
fs
rcl
push
and
sbb
mov
pusha
in
hlt
cmpsb
popf
cmp
ljmp
dec
gs
jnp
sbb
xchg
add
addr16
sbb
pushf
out
lods
jo
push
jbe
fcom
mov
fldcw
adc
imul
dec
adc
aad
filds
out
push
and
mov
mov
adc
test
adc
add
xlat
in
shrl
sub
shl
adc
stos
jp
xchg
out
negl
jg
inc
cli
add
dec
xchg
fnstcw
xchg
stos
mov
adc
and
xor
divb
push
cmp
adc
out
andb
jle
rcrl
push
xchg
imul
xorb
das
outsb
jae
mov
loop
icebp
call
xor
loop
es
aaa
addb
fistpl
into
sub
mov
sbb
lfs
push
push
sbb
iret
mov
and
inc
mov
mov
call
popf
std
pop
stos
outsl
sbb
cli
int3
xor
pop
aad
fsubs
daa
mov
and
add
out
push
clc
sub
hlt
loopne
dec
or
mov
jg
imul
mov
cmp
mov
sbb
dec
adc
hlt
outsl
enter
es
jmp
push
loop
cltd
or
jno
leave
aam
xchg
mov
inc
imul
add
repz
mov
popf
scas
push
dec
std
data16
stc
push
call
mov
fwait
pop
jbe
xchg
pop
sub
xor
xchg
loopne
and
rolb
push
mov
cltd
pop
inc
push
dec
mov
jmp
std
pop
xchg
int3
add
movsb
mov
adc
mov
cmp
xor
push
jl
and
push
jb
sbb
inc
push
jne
push
adc
ret
sti
and
dec
scas
mov
pop
or
pop
cld
movsl
jo
sub
push
stos
cmp
jb
mov
out
inc
pusha
mov
or
scas
andb
or
xor
dec
sub
sbb
mov
dec
sbb
push
in
mov
mov
push
xor
push
inc
inc
std
push
les
aam
stos
jle
and
mov
fbld
mov
jae
mov
out
out
xor
arpl
push
fldcw
repnz
push
sbb
jp
sbb
roll
fstpl
pop
inc
test
xchg
push
popf
loop
lods
mov
ss
pop
inc
lcall
push
mov
aaa
xor
lods
flds
popf
mov
or
jmp
popa
pop
int3
lcall
sub
jnp
push
scas
xchg
das
xchg
push
repnz
push
dec
pop
push
xor
ror
mov
cmpsb
mov
iret
dec
dec
cmp
xchg
andl
pop
xor
out
or
es
sar
pusha
scas
push
jge
mov
icebp
fwait
adc
cmp
jo
fwait
pusha
negl
sbb
popa
pop
in
sub
int3
and
and
outsl
fdivrs
test
inc
enter
out
mull
mov
imul
cmpl
cs
push
cmp
pop
pop
jle
jl
neg
push
cmpsl
and
or
lahf
mov
lahf
push
aam
mov
sbb
mov
aam
cmpsl
push
aas
imull
mov
pop
jo
sar
mov
xchg
imul
insb
push
mov
into
cmpsl
jne
cmp
loopne
pop
push
push
pop
pop
fdivl
daa
rorl
cltd
adc
insb
cwtl
add
cmp
addl
rsm
rcll
jo
dec
lret
test
fucomi
cmp
or
scas
jg
clc
ss
fisubrl
add
outsb
sbb
pop
shrl
shlb
and
mov
mov
loopne
mov
cmc
add
shl
roll
push
sbb
mov
and
or
jl
or
sub
sti
loop
out
xchg
jmp
jg
mov
or
jle
mulb
mov
cmp
leave
popf
fcomps
adc
fbld
sub
pop
fidivrs
mov
sahf
lods
xor
xchg
shll
cmp
inc
aam
lds
and
xchg
xchg
pop
aaa
mov
pushf
call
xlat
sbb
loop
outsb
arpl
or
rolb
movsl
cmp
repnz
inc
adcb
fadds
out
mov
adc
out
adc
pop
cmpsl
negl
mov
lods
mov
sub
stos
jno
mov
fcoms
int
ret
fsubr
push
fmul
sub
adc
mov
daa
dec
sbb
cmp
out
mov
js
sbbl
inc
add
mov
int
or
repz
dec
cmc
or
pusha
aad
call
jo
or
dec
or
jle
pop
jge
fcmovbe
mov
call
dec
sti
ds
lahf
stos
jecxz
fwait
push
or
aas
leave
sahf
dec
stos
pop
adc
cmp
pop
es
aas
xor
xchg
dec
xchg
clc
cmpsl
dec
enter
add
out
cmp
sbb
jp
or
imul
mov
inc
or
xchg
dec
ja
sbb
fsqrt
decb
int3
mov
cmp
ffreep
stos
iret
fildl
push
ss
scas
dec
xchg
pop
repz
lret
into
sub
test
data16
xor
pop
inc
addr16
mov
or
dec
mov
loop
pop
mov
jmp
or
and
fdivrs
or
popa
push
adc
adc
iret
addr16
iret
cmp
and
in
inc
pop
sbb
cmc
mov
and
outsl
ret
repnz
mov
mov
test
sub
mov
inc
cmp
mov
jae
jg
dec
and
enter
test
sbb
lea
add
and
sub
jne
ret
ja
sub
adc
scas
jne
movsl
sbb
ds
popf
pop
pushf
add
int3
fnstcw
test
sbb
jns
lahf
lret
iret
in
push
scas
scas
loop
les
std
sub
cmp
lock
xor
gs
fsubr
scas
lret
out
or
mov
and
cmp
sub
out
movb
jnp
pop
les
and
ret
pushf
addb
fdivp
pusha
or
ss
pop
scas
cltd
pop
cmp
out
leave
popf
cmp
xchg
push
dec
jecxz
mov
aad
ret
mov
outsb
enter
cmp
mov
cld
fldt
cmpsb
mov
mov
inc
xchg
cmp
add
call
push
lock
sub
out
pusha
ret
mov
loop
and
jo
ljmp
hlt
dec
arpl
xor
push
fldt
les
addr16
push
mov
loopne
js
ljmp
mov
repz
dec
test
fwait
rcrl
sub
in
adc
shll
rol
push
mov
adc
jbe
mov
into
push
mov
filds
movsb
in
add
mov
insl
jl
aad
jecxz
frstor
jo
adc
fildll
and
imul
int
dec
mov
push
sbb
dec
mov
rclb
cmpsb
sahf
es
dec
pop
fwait
nop
int3
outsb
mov
pop
pop
sub
scas
sub
and
cmc
push
push
lret
cmpsl
push
push
lods
mov
jno
sub
pushf
cmp
shlb
insl
aaa
setg
inc
ja
test
fisttpll
aad
lods
xor
cmpsl
push
popf
mov
jae
and
out
adc
pop
add
into
std
xchg
mov
minps
pop
scas
test
jbe
je
call
lcall
loope
lds
sub
lods
rclb
in
mov
leave
arpl
icebp
mov
or
repnz
xor
sbb
dec
mov
xchg
and
mov
inc
adc
movsl
mov
mov
adc
and
fdivs
fsubrs
xor
mov
dec
add
rcll
mov
adc
push
ficoml
sub
adc
test
cmp
cld
popf
into
jg
mov
pop
adc
fidivrl
inc
xor
xor
and
cmpsb
imul
push
xor
bound
outsl
add
fstpt
inc
xlat
aad
push
mov
adc
ja
enter
imul
jne
mov
dec
mov
inc
sbb
mov
cmp
lea
ret
adc
push
jns
pushf
add
jns
and
mov
cmp
ret
cmp
cli
jp
add
mov
adc
stos
mov
jae
fcmovu
cmp
mov
dec
fbstp
out
mov
xchg
or
ret
cmp
repz
or
lea
adc
mov
imul
inc
divl
inc
stos
dec
and
stos
inc
addr16
pop
aaa
and
sub
ret
fwait
pop
xor
or
gs
mov
jae
loope
mov
loopne
cmpsl
aas
push
jb
xor
pusha
inc
mov
in
inc
mov
fwait
addr16
push
push
xchg
mov
push
cmpsl
jb
pop
test
and
inc
jge
mov
aas
jo
fcoml
mov
sti
sti
cli
adc
jge
add
arpl
push
shrw
sub
inc
pop
xchg
mov
sahf
mov
sarl
clc
cli
repnz
sub
ret
test
push
pop
inc
fs
xchg
jge
ja
idivl
mov
sub
xor
push
xchg
scas
pop
in
sub
sub
xchg
js
cmp
or
add
outsl
test
xchg
jle
mov
dec
test
xor
mov
dec
inc
movsb
lret
sahf
lcall
dec
jae
insb
adc
sbb
add
scas
xor
mov
xchg
jp
in
lds
push
ja
outsb
mov
xchg
dec
mov
inc
push
push
test
pop
repz
test
sbb
mov
movsl
imul
cmpsb
sub
bound
aam
daa
in
ret
mov
xchg
cwtl
dec
loopne
lods
into
xorb
inc
inc
push
push
lcall
in
stc
push
dec
sbb
scas
mov
pop
push
fsts
jecxz
fcmovbe
aam
popf
frstor
push
nop
loop
in
ret
sub
aaa
out
sub
sbb
jae
arpl
xchg
pushf
xor
pop
adc
mov
mov
mov
push
cld
xor
fidivs
dec
dec
pop
div
int3
push
rep
aam
adc
outsl
and
loop
out
and
scas
lods
js
int3
or
mov
push
or
lea
out
push
rclb
add
or
fsubrl
or
cmp
pop
es
test
fbld
enter
pop
cltd
dec
dec
ret
jbe
xor
push
mov
mov
fbld
sahf
mov
or
bound
xor
jno
cmp
add
push
mov
shl
fwait
xchg
gs
sti
loopne
lret
pop
outsb
arpl
jl
fsubl
cmp
push
push
xor
out
int3
and
outsb
cld
mov
xor
dec
jmp
xchg
sbb
orb
fwait
scas
or
adc
bound
js
dec
bound
xchg
jae
pop
daa
fistps
aam
pop
stos
sub
cmp
movsl
lret
cmp
pop
test
test
jbe
in
sbb
inc
xchg
gs
leave
hlt
jno
adc
sbb
call
cmpsb
fsub
add
fisubrs
add
inc
push
sbb
orl
xchg
pop
movsl
dec
mov
push
jne
in
adc
push
scas
xchg
popf
mov
loop
push
cmp
add
fdivl
fwait
aam
mov
mov
call
repnz
mov
push
jl
sub
aam
cltd
inc
daa
mov
enter
jno
inc
pop
cmp
push
call
cmpsl
sarl
in
insb
inc
scas
inc
sbb
rcrb
pop
mov
fs
enter
pop
sub
aad
aaa
fxch
mov
mov
imul
gs
push
jbe
lods
push
lret
cmpb
lret
add
push
jecxz
frstor
cmp
cmp
pusha
outsb
or
xor
clc
push
push
cmc
and
int3
lcall
mov
pusha
movsl
inc
rcrb
int3
std
xchg
xor
add
pushf
pushf
dec
jno
inc
or
cltd
je
jno
jmp
mov
sub
mov
dec
das
inc
inc
cmp
xor
mov
int
or
and
push
inc
stos
adc
sub
in
popa
xor
and
push
bound
outsl
push
push
or
inc
and
out
xchg
adc
and
inc
ret
data16
xchg
push
xorb
mov
divb
bound
xor
ret
data16
xchg
push
xorb
mov
testb
bound
xor
ret
data16
xchg
push
xorb
mov
divb
arpl
mov
and
inc
push
popa
sbb
pop
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
inc
cmpsl
or
cmp
sub
inc
out
xlat
pop
test
mov
fsubl
jbe
push
in
push
or
sub
pop
out
idivl
mov
daa
mov
fadds
outsb
pop
faddl
int
cld
inc
in
push
add
xchg
inc
out
mull
xlat
pushf
daa
xchg
fdivrs
and
and
jo
inc
repnz
pop
mov
dec
les
lret
jne
inc
pop
test
xor
hlt
mov
andl
mov
pop
push
aaa
jae
inc
clc
mov
sub
jmp
xchg
mov
ja
push
out
push
adc
je
sahf
daa
jae
in
add
and
sub
fcoml
pop
notl
in
mov
ja
xchg
mov
addr16
gs
lcall
jl
xchg
fdivs
test
xor
addr16
adc
cld
decb
jae
mov
jl
dec
inc
pop
arpl
jae
inc
jb
call
sbb
in
test
cmpsl
or
cmp
cmp
jl
jne
test
xchg
aaa
movsb
pop
mov
les
ja
inc
cmc
adc
imul
cmp
add
into
push
ret
adc
xor
or
pop
iret
cs
sub
stc
sahf
inc
mov
pusha
flds
add
add
ds
loop
out
and
dec
idivl
xlat
pushf
daa
mov
mov
addr16
ja
inc
in
push
sbb
or
cmp
sub
pop
out
idivl
xlat
pushf
daa
mov
mov
addr16
ja
inc
in
push
sbb
iret
lahf
gs
fistpl
sti
popa
and
mov
pop
jbe
mov
pusha
add
mov
mov
push
std
pop
hlt
pop
xlat
je
pop
sbb
xor
subl
jle
repz
jg
test
out
int3
fs
rorb
mov
imul
mov
mov
orb
add
mov
fcmovbe
insb
jnp
pop
push
mov
xchg
adc
sbb
jbe
push
push
call
lret
jg
jmp
push
or
sbb
pop
jmp
pushf
push
adc
sub
ljmp
into
lcall
cwtl
push
cli
dec
divb
loop
jno
aaa
dec
mov
xor
add
pop
or
shlb
xchg
aaa
cmp
popa
cmp
scas
in
addr16
push
pop
pop
cltd
cld
repz
test
bnd
mov
push
repnz
mov
add
mov
sub
mov
bound
ret
add
aam
dec
push
dec
or
imull
dec
mov
add
cltd
xchg
es
into
cmc
iret
inc
aam
mov
mov
ljmp
xor
cld
add
xor
or
sahf
clc
sub
in
in
mov
xchg
push
cmc
inc
pop
popa
jp
push
dec
inc
jg
ret
stc
push
xchg
dec
and
aaa
iret
leave
out
mov
fsts
in
insb
sbb
pushf
and
dec
sub
jb
or
les
into
ficompl
jge
loope
adc
jb
out
cmpsb
iret
stc
push
push
mov
xchg
mov
js
mov
aad
push
xor
out
dec
mov
inc
and
arpl
xchg
test
lock
icebp
ret
lds
cli
adc
mov
add
jmp
orl
or
ret
bound
mov
jnp
daa
cld
outsl
and
jae
sbb
add
leave
add
shl
inc
dec
aas
jmp
fidivrs
loopne
sahf
shrb
adc
jle
int
stc
and
xchg
cmc
jecxz
sahf
data16
pop
cli
add
inc
arpl
pop
pop
aad
ret
push
fstps
cmp
sbb
imul
dec
jo
xchg
push
lds
jg
lea
lea
fs
push
lods
out
test
outsb
sti
enter
sub
fadd
das
push
push
inc
pop
popa
popa
enter
pushf
mov
int3
xchg
fnsave
into
cltd
lock
cltd
xor
inc
mov
or
or
hlt
cmc
fmull
sub
dec
mov
aaa
inc
rclb
sub
push
rolb
xor
mov
movsb
inc
xchg
xor
xlat
pop
push
test
test
lahf
mov
movsb
jg
xlat
test
pop
xor
stos
push
in
movsb
jno
fwait
jmp
pop
or
fnsave
data16
mov
popf
pop
and
and
cmp
fildll
push
mov
pop
mov
mov
mov
rcr
in
fildll
cld
out
xor
xchg
fdivl
lcall
and
sti
and
outsl
push
push
and
test
inc
push
mov
in
not
ret
js
inc
fisubrs
shrl
jae
sbbl
push
ljmp
imul
push
mov
ret
fisttps
add
xchg
in
push
popa
pushf
push
push
jg
iret
pusha
jb
icebp
dec
sub
add
and
gs
mov
cmp
stc
sbb
outsl
dec
iret
jb
xchg
sbb
repnz
mov
outsl
lret
dec
sbb
jnp
leave
ret
push
mov
out
xchg
pop
and
inc
in
jle
or
push
in
sti
dec
aas
jmp
fsubrs
out
sub
xor
push
dec
xchg
scas
cmp
outsb
fbstp
mov
int
shrl
adc
pusha
fucompp
notb
jno
iret
shr
es
dec
in
daa
int3
cmp
lahf
sub
rep
adc
jns
inc
sub
sbb
jg
push
lods
cmpsb
mov
add
or
adc
xchg
outsb
fwait
cmp
addr16
stos
cmp
fbld
orl
scas
test
pop
sbb
push
dec
int
fsubrl
sti
shrb
bound
jl
pop
push
add
inc
add
lahf
mov
stos
jmp
mov
mov
std
cmp
fdivrp
push
mov
jo
push
flds
xchg
fiadds
fstl
cs
movsb
adc
stos
xor
sbb
mov
xchg
pop
dec
xor
or
js
fcoml
jle
mov
inc
jae
or
jne
jbe
aaa
inc
mov
repz
push
notl
in
or
sbb
pop
sub
push
cwtl
out
adc
push
add
sub
cld
fnstenv
jns
sbb
sub
xor
in
push
sbb
cld
das
test
sub
add
pop
push
push
in
add
xor
inc
xchg
movb
jge
ret
cmp
jbe
cld
adc
xlat
pop
dec
and
arpl
jl
aad
jmp
jmp
cmp
movb
test
call
test
test
in
ret
xor
pushf
andb
ret
sbb
cmc
fbld
adc
cmp
fnstsw
scas
shll
and
sti
arpl
je
cmp
pop
or
scas
fdiv
int3
cli
sbb
loope
pop
dec
jbe
stos
xchg
mov
stc
arpl
cmp
lret
js
rcl
lret
arpl
imul
dec
xchg
mov
sub
dec
and
loope
jne
test
sahf
sub
cmp
mov
imul
imul
pop
sti
lock
or
out
push
mov
mulb
stos
inc
or
pop
data16
pop
mov
sub
popa
or
lds
cltd
cmpsb
repnz
lret
sub
inc
outsl
and
enter
add
test
adc
sub
aad
shrl
cmpsb
test
mov
fnstsw
pop
insl
push
and
add
adc
xor
imul
or
push
xchg
jge
xchg
xor
daa
test
push
lds
adc
add
mov
dec
das
sub
mov
maxps
js
pop
aam
pop
lds
xor
fistpl
pop
pusha
lret
mov
mov
jns
jnp
dec
aad
stos
add
pop
cmc
movsb
jg
xorb
jbe
add
fnsave
xor
scas
fs
out
movsl
pop
imull
lock
out
mov
adc
int3
dec
pop
lods
mov
mov
pop
lods
lahf
xlat
and
in
push
mov
cld
es
mov
sub
adc
loop
pop
cmpsl
fiadds
xor
mov
mov
fldt
xchg
pop
mov
xchg
sub
pop
int
cmpsl
fwait
bnd
imul
add
push
mov
mov
iret
in
fucomi
stc
aad
sub
adc
cmp
iret
imul
add
test
test
sahf
in
push
ja
mov
cmp
loope
sbb
jno
incl
mov
cltd
sbb
dec
mov
fucom
ja
wbinvd
sub
in
sub
std
pop
test
bound
andb
pop
or
or
sub
mov
daa
push
mov
push
cmp
jmp
xor
popa
subl
daa
inc
mov
xchg
movl
sbb
mov
mov
mov
movb
cmp
inc
mov
arpl
and
mov
into
pop
mov
rclb
in
fidivl
jno
mov
dec
dec
mov
jp
pop
lahf
aad
mov
lea
inc
mov
aas
outsb
inc
aaa
loope
call
dec
cmp
repz
insb
test
ror
lds
lcall
call
or
dec
lods
dec
aas
xchg
lock
les
jg
inc
jmp
cmc
mov
faddp
in
pop
dec
xchg
popf
popa
cmpsl
in
cmp
push
pop
in
xor
cmp
ja
inc
sub
sti
je
xor
andb
sarl
out
jl
or
jmp
add
lds
adc
inc
test
sub
inc
andl
pop
lahf
xor
in
pop
cwtl
dec
ficomps
out
inc
add
cmp
push
xor
or
cmp
std
movsb
cmpsb
clc
out
cld
lret
in
and
adc
fs
sub
jo
es
mov
test
in
pop
scas
push
movsl
test
aam
cs
es
call
cld
cmp
ret
out
jno
out
clc
dec
and
jns
lods
xchg
cli
addl
mov
fwait
popa
push
pusha
les
std
push
sub
push
inc
dec
cmp
stc
data16
inc
imul
fs
cmpsb
insb
lret
lcall
jge
cmp
pop
xchg
sti
dec
sbb
mov
xor
outsl
mov
scas
hlt
movsb
sub
sahf
xchg
or
iret
adc
pusha
sub
jns
push
cmc
and
or
push
xchg
fists
sub
lock
stos
or
and
idivl
scas
popa
mov
or
mov
in
add
test
and
mov
xchg
jno
push
out
dec
outsb
ficomps
pop
or
xor
out
xor
jae
add
mov
stc
std
jle
sahf
and
hlt
sub
fs
adc
xchg
and
lds
cmp
loope
lock
xor
lods
xor
pop
sub
jne
adc
push
imul
loopne
push
cmpsl
hlt
fimull
stos
les
into
scas
push
adc
lock
test
push
out
mov
pop
cmp
das
and
lahf
aaa
jp
jbe
jne
xor
and
fisubrl
call
lods
cwtl
dec
lret
loop
inc
mov
cld
mov
add
ljmp
mov
addr16
lahf
fmull
cmp
mov
jecxz
pop
ja
fdivrs
add
pop
cld
pop
push
push
nop
mov
inc
jg
inc
jecxz
or
dec
bswap
dec
and
inc
nopl
incl
push
iret
cwtl
xlat
pop
pop
bnd
out
adc
sbb
gs
sub
xchg
lock
movsl
jmp
push
mov
mov
pop
xor
add
push
push
lock
mov
cmp
pop
fwait
into
cmp
std
push
shll
rcll
add
xchg
int3
fincstp
pop
fs
jbe
push
push
push
nop
xchg
adc
sub
mov
repz
lods
add
xlat
xor
imul
or
mov
outsl
ja
ss
xchg
add
mov
mov
add
std
mov
cmp
rclb
and
call
iret
xchg
call
insl
mov
push
mov
or
out
aas
std
mov
mov
gs
jmp
andl
cmp
push
mov
mov
fs
lcall
adcb
mov
or
sbb
dec
or
mov
mov
int
fildll
shl
dec
je
mov
ficoms
fcompl
in
das
clc
pop
mov
xor
mov
aad
lds
mov
das
or
sti
repnz
addr16
ja
lods
les
divl
jne,pn
mov
fs
push
push
jnp
pop
ret
pop
jle
dec
into
sti
aam
mov
inc
or
cmpsb
cwtl
icebp
adc
add
int3
mov
pop
pop
sti
inc
push
fnstsw
mov
dec
fisubl
add
mov
mov
cmpl
push
loope
iret
insl
stc
pushf
push
sbb
rcrl
scas
movsb
outsl
cmp
punpcklwd
add
inc
fistl
adc
rorb
sub
insb
lret
in
pop
int
jmp
and
mov
stos
cmp
and
pop
sub
sbb
aam
jo
jnp
xorl
pop
adc
pop
adc
mov
adc
dec
scas
mov
fdivs
rcrb
lods
jp
lea
lahf
pushf
sahf
pop
mov
das
insb
dec
insb
ret
popa
jnp
rorb
push
cmp
stos
and
cmp
jl
repnz
repz
pop
pop
int3
xor
cmp
xchg
aam
bound
insl
dec
cmpsb
mov
fs
pop
in
xchg
jnp
pop
test
xchg
lea
xor
sbb
ds
das
cmp
stos
push
insb
lret
jle
aaa
les
jnp
fs
andb
dec
stc
sbb
lds
call
push
jne
mov
xor
jo
cltd
ret
pop
in
sbb
pop
push
pop
cld
mov
jle
dec
xor
ds
repz
mov
xor
jbe
cmp
mov
nop
out
mov
jno
popa
cmp
adc
pusha
imul
shr
fistpll
leave
inc
mov
leave
mov
jge
inc
add
insb
das
adc
pop
dec
test
shlw
lock
fstl
into
push
leave
xor
js
stos
mov
push
imul
sbb
test
mov
aad
pop
dec
aas
rcrl
test
sbb
das
ficoms
in
xor
repz
jno
push
es
ficomps
stos
push
push
daa
cli
xor
loope
adc
or
and
popa
xor
mov
dec
shrb
test
mov
mov
xchg
dec
jno
mov
insl
pusha
push
mov
xchg
push
pop
fstl
adc
imul
or
mov
adc
stc
fisubrl
fs
pushf
pop
mov
pop
jle
fwait
test
lret
or
pop
mov
push
mov
jns
cmp
mov
insb
or
loopne
pushf
scas
xor
aam
mov
sub
or
mov
pushf
cld
sbb
mov
xor
cmp
enter
lret
in
gs
cld
jmp
lret
dec
sub
cmp
stos
imul
cwtl
jmp
into
or
popf
mov
inc
mov
out
in
sbb
push
std
or
mov
das
scas
cld
adc
inc
clc
add
clc
dec
jns
dec
sub
and
adc
adc
cwtl
js
sbb
cmp
cmp
push
and
xor
push
cmpsb
jle
mov
arpl
push
xor
xchg
and
out
movsb
push
push
cs
push
pushf
mov
jp
push
xor
lahf
inc
inc
cmpsl
pop
out
sahf
cli
add
pop
ja
cltd
mov
jne
push
mov
mov
mov
cwtl
pop
sub
push
adc
xchg
das
sub
into
mov
push
repnz
xchg
shl
lea
outsl
sti
adc
pop
mov
mov
dec
test
icebp
mov
inc
dec
mov
xlat
push
repnz
out
mov
cmc
or
adc
push
inc
or
jmp
data16
push
mov
fwait
xor
cmp
sub
pop
repnz
pop
lea
stos
ds
pop
pusha
sub
add
das
movsl
in
and
sub
cmp
cld
lock
pop
leave
jno
lret
sub
push
xchg
mov
in
movl
push
jmp
in
dec
mov
negb
xor
divb
jb
shrb
test
subl
addr16
xchg
mov
dec
push
adc
inc
jecxz
scas
sbb
add
fwait
inc
gs
adc
lahf
sub
mov
adc
jns
aaa
cmp
aas
pop
xchg
sahf
lods
xor
mov
ljmp
adc
adc
sahf
push
in
loop
imul
mov
fdivrl
push
daa
aaa
push
sbb
mov
test
pop
aaa
xchg
jb
test
bound
ss
dec
mov
rorl
push
sbb
add
jge
enter
xor
sbb
mov
daa
fisttps
pop
mov
xor
mov
dec
mov
leave
jge
xchg
cmpsl
push
sub
call
cmp
inc
mov
pushf
xor
rclb
cmp
std
test
jg
jbe
fcoms
sbb
push
adc
xor
loop
push
mov
bound
arpl
jmp
jne
je
cld
cltd
pop
xor
mov
jno
sbb
pop
mov
or
shll
pop
pop
cmpsb
rcrb
sti
std
test
arpl
push
jmp
fmulp
mov
ret
mov
adc
and
add
push
xchg
fwait
pop
bound
sarl
daa
fcompl
outsb
lods
dec
cld
adc
sahf
and
test
mov
mov
inc
pop
cmp
sub
dec
shrl
dec
fwait
push
mov
mov
xchg
and
cltd
mov
movsl
pop
lods
and
jp
mov
mov
js
cmp
or
dec
sbb
out
int
pusha
pop
sarb
jnp
bound
add
mov
in
add
in
icebp
xchg
movsb
add
insl
dec
cmpsb
sbbb
cmp
push
fimuls
repz
jg
xor
sub
cmpsb
lret
nop
jno
push
popf
sti
inc
ret
and
in
jmp
pushf
aas
ds
xchg
mov
sbb
xor
pop
pop
rclb
or
cwtl
push
jb
hlt
pop
cld
dec
or
push
das
lds
mov
sbb
jbe
scas
mov
movsb
add
inc
mov
xor
test
xor
fcoml
push
call
push
xor
push
cwtl
es
push
test
mov
add
out
mov
adc
cmc
pop
xchg
lahf
xchg
fistps
mov
adc
test
out
mov
aaa
inc
fwait
add
aam
xchg
daa
sbb
jb
jp
or
sbb
jp
inc
mov
hlt
pusha
jae
test
mov
xor
sbb
or
test
xchg
pop
fstps
mov
xchg
out
dec
push
sub
dec
outsl
loope
lea
add
fidivrs
divl
lods
ret
xlat
mov
pop
in
dec
or
and
int
mov
adc
orb
std
sbb
int3
adc
out
leave
testl
int
dec
pop
fwait
ljmp
jo
movl
inc
and
or
pop
loop
mov
scas
jmp
jno
je
pop
mov
pushf
ret
out
fildl
or
jne
xchg
inc
mov
pop
push
cmp
or
sbb
cmp
push
insb
jecxz
xchg
cltd
jnp
push
scas
call
outsb
ljmp
mov
loopne
movsl
int
sub
add
add
roll
dec
push
and
int3
in
mov
lods
ja
jmp
ret
pop
mov
lahf
or
bound
or
mov
mulb
imul
add
int3
jbe
cmp
pusha
mov
mov
jbe
mov
test
and
inc
in
sti
mov
or
sbb
xchg
or
inc
mov
mov
adc
jo
xchg
adc
pop
movsb
bndldx
jecxz
out
and
mov
push
dec
int3
push
loope
fistpl
jo
outsl
aas
jns
int
cmc
fldl
pop
jnp
dec
xor
push
test
cmpsl
mov
push
jno
fistl
addr16
mov
test
jp
shlb
adc
xchg
or
mov
ss
ret
mov
mov
push
add
add
cmp
fistpll
aam
pop
adc
sub
xchg
add
push
scas
sti
sbb
rcrb
movntq
out
mov
fs
push
push
mov
cmp
int
ficomps
mov
cmc
pop
fstpl
rcll
mov
rcrl
imul
lret
negb
stc
pop
mov
decl
insl
cmp
jg
jns
daa
push
mov
jecxz
divb
sbbb
mov
mov
test
test
shlb
inc
sbb
inc
shlb
test
arpl
cmp
popf
divl
inc
push
daa
insl
push
pop
out
mov
mov
and
pop
pop
sub
ja
repz
mov
or
test
pop
mov
fisttpll
rcrb
cmp
nop
mov
xor
test
jg
int
cmpsb
push
daa
xor
add
push
in
jbe
ss
jle
sub
aad
out
outsl
sbb
adcl
mov
outsl
cltd
pop
jb
lret
lea
add
mov
adc
jp
mov
sbb
mov
pop
push
std
jg
enter
js
mov
cwtl
push
pop
cmp
inc
stc
pop
sub
std
lret
lock
stos
inc
pop
std
into
or
inc
adc
pop
mov
mov
adc
dec
or
pop
push
add
sub
rcll
sbb
shl
dec
sub
hlt
shlb
les
or
mov
cwtl
aaa
mov
and
cmc
mov
mov
aam
or
les
outsl
inc
lret
xorb
xchg
jo
lds
push
inc
nop
or
fcompl
mov
addr16
mov
out
idivl
xlat
pushf
daa
mov
mov
addr16
ja
inc
in
push
sbb
or
cmp
sub
pop
out
idivl
xlat
pushf
daa
mov
mov
addr16
ja
inc
in
push
sbb
or
cmp
sub
pop
out
idivl
xlat
pushf
daa
mov
mov
addr16
fstl
cmpsl
cmp
pop
out
idiv
in
pop
arpl
jae
push
pop
lods
pusha
stos
out
inc
mov
mov
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
into
push
loop
cmp
dec
sahf
pop
out
cs
fimuls
ficomps
cs
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
inc
ds
push
ficomps
cs
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
aas
lea
imul
popf
ds
cmpsb
dec
fsubp
mov
mov
insl
adc
addl
push
inc
jnp
mov
jnp
pop
pop
outsl
scas
jno
les
inc
adc
cs
push
es
stos
out
aas
repz
lds
lret
scas
cmp
repz
popa
push
push
cmp
ds
mov
fisubrl
out
mov
push
mov
mov
lret
push
lods
rcr
aam
rcrl
or
es
dec
in
mov
fidivs
xchg
ds
push
and
imul
test
fwait
sahf
mov
cwtl
fistl
push
dec
lcall
or
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
cs
ds
push
fidivs
ljmp
sub
enter
pop
or
loope
cli
sub
ja
push
jno
jge
jp
push
fimuls
ret
dec
out
cli
cld
and
sti
cmp
pop
shll
adc
das
cmpb
mov
scas
outsb
mov
pop
out
cs
ds
push
ficomps
cs
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
cs
ds
push
ficomps
cs
cmp
sbb
mov
mov
adc
mov
movsb
jne
ret
enter
sti
ds
in
xor
js
mov
test
mov
push
sub
mov
mov
mov
jbe
and
lret
ficompl
push
lcall
faddp
dec
imull
ds
test
cmc
xor
xchg
cmpsl
sar
xchg
fs
aaa
bound
das
iret
lcall
int3
jge
lods
push
mov
pop
mov
dec
adc
test
mov
sbb
out
loopne
and
xor
jbe
xchg
stos
jne
shr
inc
sbb
mov
daa
cli
jnp
lods
push
jbe
and
cmp
int
push
dec
ja
inc
pushf
mov
and
addl
cmp
mov
iret
imull
dec
jl
int
das
inc
pop
inc
js
fwait
ds
xchg
and
and
fistpl
xor
mov
or
inc
gs
dec
mov
xchg
mov
daa
xchg
inc
in
sbb
and
js
or
clc
mov
xchg
jg
jae
in
movsl
data16
call
add
shll
clc
lods
and
pop
sbb
sarl
mov
rcrl
inc
pop
mov
dec
aas
clc
dec
je
mov
dec
fs
mov
cmp
jp
fs
xchg
stos
pop
lea
in
inc
pop
je
aas
test
sbb
out
rclb
leave
and
or
xor
or
std
xchg
jo
push
mov
mov
loopne
add
out
insl
jne
adc
inc
push
shrl
movsb
ret
mov
fs
adc
mov
orb
lods
adc
jg
adc
mov
add
or
std
mov
pop
adc
clc
xor
stos
jbe
shll
sub
xor
sahf
lds
cmp
test
cmpsl
pmovmskb
popf
jno
cmp
leave
sub
mov
rcrb
dec
add
daa
sub
cmp
push
int3
mov
add
lcall
sub
jge
mov
inc
jmp
lcall
imul
inc
les
pop
add
inc
push
push
lret
nop
push
and
pusha
lret
in
mul
fcoms
int3
scas
cmc
xchg
xchg
aaa
mov
xor
adc
mov
mov
pop
sar
insb
adc
test
icebp
data16
lret
int
test
mov
adc
mov
pop
cmpsb
mov
hlt
lods
clc
or
xchg
inc
hlt
iret
in
jnp
popf
dec
xchg
xchg
jg
jb
lcall
stos
pusha
imul
fs
sub
cs
sbb
jmp
xor
adc
stos
push
out
jne
adc
ret
xor
mov
imulb
ja
add
add
mov
inc
scas
jecxz
mov
inc
and
jle
jg
push
mov
imul
fstl
leave
push
in
mov
outsl
sbb
jge
pop
pop
adc
add
xchg
insl
loope
fistpll
lock
mov
mov
add
aas
mov
inc
inc
ror
lahf
test
dec
out
lock
lock
sbb
in
std
fisubrs
int
das
lret
rcr
pop
insl
jnp
adc
lret
sub
imul
shl
adc
mov
dec
dec
mov
mov
or
mov
dec
and
test
aam
outsb
test
popf
das
mov
subl
jmp
xor
sti
movsl
fldt
xchg
pop
leave
and
mov
scas
into
fdivl
jmp
or
mov
idivl
xorl
mov
outsb
clc
cwtl
fimull
mov
loop
out
pop
popa
mov
repnz
or
aas
das
outsb
loop
mov
call
or
mov
cmp
xchg
dec
fs
addr16
pop
outsb
push
add
add
inc
insb
mov
addl
stos
push
xchg
or
lods
scas
xchg
loop
mov
out
inc
fcmovnb
imul
push
inc
jnp
cmpsb
xor
imul
inc
adc
idivl
fwait
insb
push
aam
cmpsl
fdivl
inc
fstl
and
arpl
push
mov
lds
out
out
ja
arpl
adc
arpl
mov
adc
mov
mov
lret
andl
dec
lret
sbb
pusha
rcrb
jae
lret
je
aaa
push
mov
jg
push
ljmp
popf
addr16
push
lcall
jnp
add
out
sti
xchg
inc
or
push
sbbb
rorb
xchg
mov
add
fidivs
mov
cmova
shrl
adc
mull
lea
sub
push
cmpsl
and
lret
inc
sub
orb
cmp
push
test
adc
sbbb
popf
add
pop
and
cmp
icebp
iret
setae
in
jecxz
inc
sub
call
inc
ljmp
in
clc
mov
aas
call
mov
repz
xor
push
jl
adc
loope
sub
lds
out
bound
mov
dec
iret
clc
into
cmp
jecxz
jge
enter
test
test
cwtl
push
bound
adc
add
je
fsubs
insl
mov
sbb
ret
or
mov
imul
jo
jne
sbb
fnstsw
shl
jae
mov
inc
lock
pop
fsubr
and
fisubrs
cmp
jg
pop
and
test
mov
jge
icebp
or
sub
sub
push
or
lds
pop
cld
dec
maskmovq
notl
jno
cmpsl
sub
pusha
push
jo
out
push
and
push
xor
push
xchg
in
out
fst
out
inc
xor
ret
xor
sub
enter
mov
hlt
shll
mov
js
hlt
push
add
ss
adc
sar
push
aas
xlat
mov
sbb
cmp
bound
int
pusha
xchg
mov
sbb
aam
mov
xor
mov
mov
mov
sub
dec
pop
mov
out
int3
mov
cmp
and
fstl
insb
dec
fdivrs
scas
or
xchg
push
incb
pop
dec
les
add
jmp
xlat
xchg
pop
sahf
inc
in
pop
lods
repnz
sub
aas
scas
aad
fwait
insb
ret
int
test
ljmp
movsl
mov
or
or
fimull
cmp
cmp
dec
mov
pop
nop
inc
or
call
dec
imul
mov
daa
sub
sub
or
lcall
icebp
out
insl
mov
addr16
pop
pusha
cmpsl
cwtl
lret
xor
mov
dec
push
sbb
sub
inc
cmp
in
in
jnp
outsb
insb
popa
xor
jl
aas
fistpl
mov
js
inc
jno
jno
add
out
xchg
es
sub
xor
push
mov
pop
adc
data16
hlt
inc
sahf
insl
lret
loopne
add
lahf
inc
add
add
inc
rsm
mov
jae
xor
aam
stc
iret
movsl
dec
fdivs
notl
lock
sahf
data16
dec
lcall
pop
and
movsl
xor
imul
add
or
nop
clc
arpl
fcompl
cli
daa
sub
dec
insb
hlt
inc
push
loop
in
sbb
adc
cmp
jnp
adc
lret
adc
ret
mov
add
in
lret
adc
jb
add
clc
daa
das
or
repz
imul
stos
in
add
cs
fsubrs
enter
shl
or
mov
push
dec
test
mov
rclb
push
fidivl
imul
fwait
push
repz
pop
mov
lahf
cs
cli
ljmp
xchg
outsl
cmp
sbb
or
push
push
xchg
sub
addr16
xchg
shrl
adc
loopne
aam
or
int
ret
pop
xchg
insb
mov
dec
or
ja
jne
in
stc
in
jge
and
xor
adc
inc
inc
mov
mov
cli
pop
imul
xor
ds
adc
data16
mov
inc
dec
xor
mov
jo
out
push
aad
lock
jp
js
jo
fldt
test
mov
xor
xchg
fdiv
sti
hlt
adc
std
jns
lahf
xchg
sbb
sbb
cli
inc
stc
add
mov
iret
shlb
sub
out
mov
or
test
or
xchg
adc
jns
ljmp
int
in
or
push
into
call
mov
jle
cmp
out
cmpsb
lahf
inc
adc
mov
pop
test
jae
push
push
into
inc
aas
sbb
pop
add
mov
pop
in
xor
or
addr16
repz
sarb
xlat
push
pop
imul
dec
fisttpl
mov
lock
lea
xor
pop
test
rcrb
aas
hlt
add
jle
push
loope
ljmp
push
xchg
or
push
fs
xchg
jb
mov
pop
testl
dec
xchg
push
pop
xor
scas
jp
es
notb
popf
mov
mov
aam
cs
addb
je
les
loope
cmp
jb
and
add
mov
sub
mov
or
sbb
je
cs
jo
pop
je
dec
in
xchg
or
cmpsb
pop
mov
xchg
sbb
sbb
mov
aas
aam
daa
add
push
and
lcall
xchg
inc
or
dec
mov
adc
unpckhps
repnz
dec
pusha
mov
push
or
ljmp
dec
std
bound
pop
cmp
out
sub
les
or
and
aas
sub
iret
stc
mov
cwtl
inc
cld
xchg
repz
mov
mov
adc
pop
add
push
stos
add
imul
mov
sub
insl
shll
adc
push
pop
ret
rorl
jo
push
dec
data16
clc
outsb
daa
mov
jnp
cmp
psrlw
mov
stc
stc
mov
imul
cli
sbb
add
xchg
and
jnp
lret
or
mov
inc
repz
xchg
xchg
mov
add
fnstcw
and
adc
inc
out
and
add
addl
adc
mov
sbb
mov
notb
sbb
aaa
lcall
mov
pushf
iret
mov
push
jno
sub
cs
pop
add
into
cmc
movsb
clc
jae
mov
fisttpll
add
enter
outsb
dec
enter
adc
test
sub
xchg
ret
subb
lods
and
mov
lods
jl
sub
push
xor
and
call
lock
push
push
int
cmc
dec
xchg
push
pop
sub
push
jns
xor
mov
jbe
sbbb
aas
fnstsw
jmp
imul
repz
inc
dec
scas
and
sbb
pop
in
mov
push
mov
mov
add
fistps
or
add
cmp
xchg
nop
fisubrs
dec
popf
imul
add
push
adc
push
popa
push
sahf
add
push
xor
cmpsb
pop
pop
cwtl
sbb
sbbb
mov
mov
mov
mov
mov
fisttps
lds
ret
in
add
cmpsb
push
rorb
add
sti
cmp
jo
lock
or
sbb
stos
fadds
repz
xor
test
fistpll
mov
xchg
inc
pop
jb
pop
push
jno
add
dec
rcrb
xor
repnz
sbb
sub
roll
or
xchg
xchg
iret
bound
xlat
aaa
mov
push
lea
pushf
cmp
fwait
stos
popf
arpl
lret
adc
mov
movsl
mov
pushf
push
mov
jno
dec
cs
lods
test
push
sbb
xor
stos
addr16
mov
dec
pop
imull
inc
push
scas
div
or
xchg
fwait
int
imul
jl
outsb
aas
dec
mov
mov
mov
lret
int
xor
or
push
mov
push
xchg
stc
gs
pop
repnz
into
insb
insb
cmp
fwait
divb
icebp
insb
dec
pop
fistpl
mov
repz
xchg
xchg
mov
mov
ss
push
mov
les
lret
lea
fwait
iret
sti
sti
dec
aam
lods
adc
or
add
shll
pop
xchg
sbb
pop
repz
scas
mov
mov
push
in
out
inc
ds
js
leave
ds
test
fnstenv
sbb
mov
or
fdiv
out
loop
leave
pop
fwait
insb
loope
imul
lock
cmpsl
pop
mov
mov
mov
mov
push
mov
test
rcrb
mov
inc
test
stc
test
xchg
lds
ss
mov
or
lods
inc
sub
xstore-rng
cmpsl
inc
shlb
add
cmp
lods
sbb
dec
stos
shlb
pusha
jno
mov
test
mov
mov
dec
and
push
inc
test
dec
shll
dec
popa
xchg
sbb
ljmp
xor
sbb
adc
jmp
test
mov
and
stc
push
mov
fstpt
and
cmp
mov
and
jecxz
push
dec
addb
push
sbb
push
pusha
add
xchg
enter
add
bound
divb
test
int3
lods
cmpsb
jmp
imul
stos
lock
into
or
xchg
orl
mov
pop
frstor
push
out
pop
sbb
scas
mov
cltd
ss
enter
mov
fdiv
xchg
cmp
push
and
sbb
lahf
or
sbb
xchg
in
dec
lret
jb
decl
rol
cwtl
call
adc
add
inc
bound
mov
imul
xchg
arpl
in
mov
test
in
faddl
mov
lds
and
inc
push
adc
sbb
xlat
insb
push
icebp
pop
loope
push
pop
add
stos
push
fwait
cmp
aaa
cs
xchg
popa
push
popf
in
adc
mov
imul
xor
inc
aaa
fnstenv
mov
movsb
lea
add
sub
add
xor
pop
sub
in
sub
test
roll
faddp
shll
sbb
insl
imul
jno
shrb
mov
fbstp
or
mov
notrack
jne
mov
pop
sub
jno
mov
mov
fwait
movsb
inc
scas
es
mov
inc
fadd
and
and
sbb
cmpb
xor
inc
loopne
and
test
icebp
xchg
popa
jmp
in
jg
cli
push
int
lea
adc
push
cwtl
mov
scas
mov
stc
lea
icebp
mov
mov
shlb
fcomp
or
xorb
push
mov
js
mov
lret
sub
sti
xor
mov
test
pushf
imul
mov
cmp
inc
jo
rorb
ss
cmp
cs
pop
out
xchg
push
cli
mov
push
jae
add
or
mov
mov
mov
pop
lret
es
cmp
stos
pop
lods
sbbb
mov
or
xchg
push
sbb
in
and
lods
fldt
subl
in
fistl
leave
sbb
jno
je
fstpl
das
ds
lock
cmp
ja
mov
test
ja
jle
repz
jns
in
fnsave
aaa
das
inc
xchg
leave
mov
out
or
push
testl
fprem
fs
sbb
adc
stc
movsl
mov
mov
in
out
mov
mov
lret
adc
pop
and
test
cmp
mov
hlt
jg
rcrl
push
cmp
jecxz
out
or
jg
add
jmp
stos
pop
xor
call
cli
jge
sub
andl
mov
pusha
jbe
lock
sbb
adc
jle
add
add
ret
cltd
cmp
add
lret
xchg
nop
int3
les
enter
xchg
push
jp
cltd
xchg
push
ds
inc
out
inc
aad
fidivs
scas
mov
aas
ljmp
sub
xchg
aas
jo
or
adc
pop
add
or
dec
add
daa
or
loopne
mov
add
jge
fnclex
sub
mov
xor
mov
inc
cmc
les
mov
aas
push
mov
sbb
jb
pusha
out
xor
sub
loop
outsb
cld
lock
and
das
sub
pop
cmp
pop
push
ljmp
and
sti
in
jno
stos
mov
xor
inc
inc
inc
scas
bound
pushf
psubd
cmp
fadd
dec
adc
xchg
jbe
push
loope
adc
stc
ffree
xor
xchg
push
out
mov
fldcw
cmpsb
scas
data16
out
rcr
loop
xchg
into
jp
lcall
js
inc
js
xor
sbb
ljmp
dec
dec
or
jnp
testl
add
inc
popf
orb
add
mul
add
xchg
push
imul
add
out
icebp
mulb
jno
scas
sub
and
ljmp
adc
xor
mov
mov
lret
mov
imulb
mov
mov
insl
dec
loopne
pop
fwait
movsb
lcall
or
hlt
mov
pop
test
xchg
mov
repz
repnz
je
lods
shl
sub
stos
es
mov
jo
jmp
fsubrl
sub
lahf
rcl
jns
add
jp
inc
insl
mov
mov
dec
add
lods
push
or
fstl
std
test
out
in
sub
adc
daa
jmp
lret
push
pop
or
call
ds
dec
mov
loopne
pop
sbb
dec
mov
jo
repz
je
cmp
mov
mov
sbb
into
loopne
int
stos
int
xchg
arpl
fsubs
mov
sub
arpl
cmpsb
popa
arpl
repnz
ret
mov
cmp
paddusw
or
cwtl
fprem1
bound
pop
push
xor
adc
in
pushf
in
negl
js
stc
lcall
emms
adc
push
test
push
rcr
xor
ja
sub
fs
mov
and
rcll
outsl
adc
es
fwait
lds
and
sub
out
cmp
pop
into
std
add
dec
cwtl
mov
js
jns
ret
dec
notl
adc
mov
push
mov
cmpsb
add
xchg
push
mov
lcall
into
adc
ds
ljmp
push
in
inc
hlt
fdivs
mov
mov
and
push
xchg
insb
push
sub
mov
cmp
insb
arpl
pop
popf
adc
xchg
mov
adc
inc
and
insb
fst
inc
dec
loopne
mov
xchg
mov
fcmove
stos
push
sub
jmp
mov
roll
mov
inc
out
jg
xor
pop
iret
push
out
sub
fisttpll
lss
into
sti
xor
mov
pop
push
outsl
int
in
je
push
jne
push
pop
insb
das
mov
leave
je
push
xlat
lahf
jnp
test
ret
and
push
mov
ljmp
ljmp
insb
stos
mov
aaa
pushf
rcrb
insl
hlt
mov
aaa
add
mov
aas
or
jle
pop
repz
mov
cmp
sub
fldcw
or
movsl
aam
jne
outsl
pop
lahf
mull
clc
pop
sti
lods
jmp
icebp
pop
jns
fnstenv
xchg
aad
fldl
mov
pop
mov
sahf
push
push
and
adc
cli
jne
mov
cli
cmp
xchg
mov
sbb
sbb
cmp
xor
mov
jp
scas
fldenv
cmp
sbb
add
repz
push
push
adc
outsl
fimuls
out
insl
leave
addr16
jbe
sub
add
push
or
cwtl
std
and
mov
cld
add
clc
repnz
mov
and
sub
rcrb
bound
cmpsb
mov
inc
adc
inc
or
mov
es
mov
repz
xor
mov
sbb
sub
clc
sbb
pop
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
cs
ds
push
ficomps
cs
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
cs
ds
push
ficomps
cs
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
pop
out
cs
ds
push
fistps
das
out
aas
decb
into
push
fisubrs
jle
dec
mov
scas
outsb
mov
sub
icebp
and
lock
and
adc
add
cmp
mov
xor
and
rclb
ret
jecxz
mov
jb
jb
push
xorl
mov
inc
xorb
loopne
rolb
ret
adc
inc
or
sbb
dec
sbbl
inc
cmpl
mov
pop
lods
popf
jle
push
shll
gs
mov
lods
xor
push
out
or
into
xorl
pop
mov
push
sbb
popf
add
xchg
push
lods
push
mov
ret
int3
xchg
jg
adc
cld
cmp
and
pop
jp
loop
fwait
popa
mov
and
clc
inc
jge
push
pop
fcmovnbe
aas
xchg
insb
mov
ss
das
push
dec
jb
jb
es
push
arpl
mov
adc
add
or
out
in
pop
jbe
mov
pop
sbb
sub
loopne
push
push
cmp
and
jmp
cmova
cmp
insb
push
mov
inc
fisubl
fisubrl
jge
fidivl
adc
add
test
mov
rorl
ret
add
push
and
mov
jnp
sub
and
add
lcall
fdivl
add
andl
fnsave
mov
inc
xchg
dec
loopne
mov
xchg
popa
mov
sub
es
jo
xor
push
idivl
orb
loop
mov
mov
xor
inc
loopne
mov
inc
jae
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
adc
iret
sbb
adc
js
adc
adc
sbb
or
out
push
mov
cld
shrb
sub
or
decb
jb
mov
lcall
sahf
notl
inc
dec
enter
and
mov
jo
xchg
xor
pop
test
mov
sub
stos
jo
xor
int
stos
inc
adc
movsb
into
push
or
lret
pusha
pop
inc
mov
cmp
push
xor
jp
xor
sarl
add
outsb
dec
xchg
adc
jns
xchg
movsb
cmpsb
xchg
mov
dec
std
cld
fstpt
test
mov
mov
test
jne
roll
mov
js
mov
xchg
push
loope
push
lods
jnp
xchg
data16
mov
cld
pop
cmp
out
cmp
push
addr16
aaa
and
mov
scas
mov
lahf
dec
dec
sub
enter
leave
xor
popf
ljmp
xor
adc
push
push
push
sub
sub
std
dec
arpl
scas
outsb
lods
in
push
loopne
aas
push
jge
xor
fdivrp
push
jb
sub
add
add
cmp
aas
mov
lret
push
inc
cmp
aad
xor
push
repz
xchg
inc
sub
jb
or
jecxz
inc
mov
jecxz
pop
add
flds
lock
jge
xchg
mov
mov
scas
incb
pop
add
add
pop
test
ss
mov
pop
adc
lods
add
and
adc
daa
repz
push
into
or
enter
movsb
inc
sti
xlat
test
xor
repz
adc
sbb
mov
mov
dec
cmp
jns
mov
inc
cli
sbb
test
dec
imul
cltd
inc
les
les
jne
mov
mov
insb
inc
add
cmp
jb
iret
or
leave
pop
imulb
inc
movsl
shr
xchg
sbb
popa
mov
xlat
push
les
pop
cmp
fdivl
cmp
add
jl
bsr
pop
jle
push
aaa
shll
daa
fwait
call
leave
adc
mov
out
inc
inc
sbb
insb
lock
xchg
pop
inc
movsb
pop
adcl
clc
sub
push
or
push
mov
xchg
cld
je
rcrb
mov
jno
sub
inc
jnp
jbe
pop
aad
lret
mov
or
xchg
cmpb
stos
push
cmc
or
ljmp
sbb
add
idivl
cmp
nop
sar
pop
pop
jp
jle
mov
push
cwtl
shr
leave
aam
and
jnp
das
call
xchg
cmp
test
sub
mov
mov
pusha
fimuls
xchg
insl
test
dec
sub
rcl
cs
enter
and
sbb
add
xchg
lea
icebp
dec
jne
dec
int3
dec
adc
mov
add
outsl
pop
imul
das
xor
pop
xor
pop
xor
loopne
adcb
push
mov
adc
loopne
mov
imull
sub
or
cmp
jb
cmp
lea
jbe
js
mov
adc
out
cmp
cmp
fimull
scas
adc
cmpsb
or
pop
pop
movsb
ret
ret
mov
lret
sub
adc
mov
push
jne
mov
push
rcrb
push
leave
add
jo
loopne
shl
gs
or
rclb
adcl
mov
imul
shll
test
aaa
mov
mov
and
push
xor
pop
push
mov
add
mov
ljmp
outsl
mov
push
imul
jge
xor
jo
xor
cmp
mov
inc
ss
xchg
mov
add
call
sub
pop
or
sub
pop
adc
mov
cld
pusha
lahf
out
dec
xchg
and
mov
sub
pop
push
cmpsb
jae
mov
jp
xorl
sbb
add
in
and
fwait
imul
lods
movsl
mov
movsb
mulb
cmp
add
add
lea
pusha
mov
jg
in
sub
lea
int3
out
or
cmp
push
aam
sub
loopne
and
xor
or
push
es
cltd
pusha
dec
les
xchg
nop
xor
lods
or
sahf
jecxz
pop
test
mov
sub
pop
testb
mov
jmp
icebp
cmp
insl
imul
popa
std
mov
ret
push
add
sub
mov
clc
cwtl
pop
in
leave
imul
cltd
les
cmp
test
push
std
mov
out
sbb
and
mov
mov
mov
sbb
mov
pushf
pop
decb
sbb
dec
sub
jg
jb
push
shrb
shll
lea
mov
das
xchg
in
stos
pusha
add
iret
fcoml
leave
sub
orl
sti
push
mov
mov
fwait
leave
xor
repz
into
cmp
pop
jae
pop
js
push
leave
mov
rcrl
push
mov
mov
and
in
call
push
mov
add
ffreep
lds
out
scas
mov
mov
call
adc
dec
fdivs
sbb
data16
mov
pop
fidivrs
push
ficompl
test
xchg
mov
and
push
mov
test
fcomps
stc
pop
inc
bound
jg
xor
insl
sbb
sti
mov
fwait
mov
adc
jl
pushf
and
scas
ret
ret
int
insl
lcall
inc
scas
mov
shll
xor
mov
or
sbb
hlt
pop
mov
in
cmp
dec
fcomps
xor
cmp
addb
data16
pop
sbb
mov
adc
aas
adcb
jmp
xor
pop
pop
xchg
fsubl
xchg
jg
or
push
fistl
fidivl
mov
xlat
inc
add
out
pop
das
add
movsl
jns
adc
stos
inc
and
movsl
lahf
fimuls
mov
ret
les
lea
arpl
imul
adc
mov
lds
add
push
cmpsl
mov
nop
je
fisubl
pop
mov
jg
mov
sti
mov
dec
or
mov
jge
adc
mov
mov
inc
movsl
rolb
push
enter
inc
mov
sbb
es
xchg
mov
dec
mov
sub
int3
fimull
push
pop
pop
std
lret
pop
lods
cmpl
push
mov
ss
mov
repz
cmpsb
sbb
notl
test
xlat
stos
int3
mov
lds
sub
pushf
notl
iret
std
fwait
repnz
aad
nop
pushf
leave
mov
adc
bswap
aam
iret
adc
xor
icebp
cwtl
jmp
aad
ret
int
and
icebp
push
lods
cmp
or
or
rorl
sahf
aaa
jne
jns
xorl
ljmp
mov
add
add
jecxz
ret
lahf
inc
and
inc
xchg
cmp
xor
lock
cmp
mov
jne
int
test
and
sahf
in
sub
dec
adc
pop
cmp
fimull
outsb
xor
xchg
in
into
dec
ds
rclb
mov
or
mov
adc
iret
xchg
data16
ja
pusha
mov
jle
sub
mov
xchg
enter
test
imul
repz
mov
adc
add
adc
into
data16
add
test
adc
in
outsl
leave
adc
fcomps
ret
cltd
xchg
xchg
mov
sbb
mov
test
mov
jo
pop
adc
mov
push
dec
or
xchg
jnp
adc
adc
popa
les
or
js
pop
fildl
lcall
repnz
stos
sarl
xor
mov
fcmovbe
jae
add
adcl
pop
in
fists
jle
rcl
jo
aad
in
push
dec
sub
ret
in
push
mov
popf
leave
lret
lods
in
mov
iret
mov
scas
ss
sub
jge
fnsave
dec
popa
sbb
in
adc
inc
aad
nop
mov
stos
push
popa
jb
mov
push
cmp
or
insl
fs
insb
outsb
push
out
xor
test
daa
push
xor
leave
leave
and
clc
pop
jns
add
cld
push
stc
fsubr
sarl
dec
adc
mov
inc
xor
sarb
inc
pop
leave
das
and
or
out
xchg
out
clc
pop
sub
sbb
rcl
push
arpl
push
ljmp
xchg
xlat
or
insb
mov
push
inc
mov
aaa
mov
pop
js
fsubrs
imul
out
push
cmp
pop
jp
test
mov
icebp
iret
pop
cltd
daa
shrb
insl
jp
mov
and
cmp
cltd
adc
repz
enter
repz
cmpsb
es
sbb
insb
ret
pop
sub
xor
pop
cltd
nop
xor
sbb
jmp
shl
mov
cltd
scas
int3
mov
xor
push
fs
push
ret
sbb
es
aam
cld
pushf
scas
adc
sub
lea
mov
test
mov
xor
add
xor
clc
or
test
cltd
or
aaa
out
push
daa
hlt
es
ss
add
and
adc
cmp
add
movsl
lods
icebp
and
jp
dec
pop
insl
pop
pop
fidivl
fwait
or
mov
dec
in
mov
loope
fists
mov
sbb
and
pop
aad
loope
outsl
popa
mov
fabs
shll
cltd
pop
decl
imul
adc
or
jl
xchg
sub
inc
inc
dec
in
divl
js
xor
sbb
add
bound
mov
mov
push
iret
scas
push
mov
and
sub
or
xor
jbe
or
stos
jo
push
xchg
and
in
inc
mov
loope
mov
xor
inc
xor
inc
mov
add
sbb
test
cli
xor
pop
clc
lds
pop
xchg
lods
jl
stos
daa
push
cmp
mov
or
lea
mov
shll
and
aad
cmp
int3
add
add
dec
jl
xchg
xor
fstps
mov
mov
xchg
aad
pop
and
loopne
lret
imul
aad
pop
add
dec
mov
imul
daa
stc
mov
jae
and
inc
test
aad
repnz
std
jnp
das
cmc
pop
push
into
addr16
sbb
jno
popa
inc
aam
ret
lods
insb
sbb
or
sub
bound
mov
flds
jno
xor
mov
xchg
adc
or
push
ss
out
arpl
mov
dec
movsl
fmul
inc
dec
sbb
popa
sbb
cmpsl
fbld
fstl
ret
push
mov
outsl
pop
cs
jmp
lret
testl
outsl
lcall
in
scas
adc
dec
filds
jp
jle
push
sub
movsb
mov
mov
jecxz
lret
inc
xor
and
jmp
pop
and
gs
mov
mov
cltd
shrl
cmpsl
sbb
es
cltd
cmp
or
mov
test
in
cli
adc
and
sbb
add
xchg
out
out
movsb
into
pop
and
mov
gs
inc
dec
and
add
adc
lods
shrl
add
xor
lods
rorb
mov
cmc
ret
testb
lret
sbb
scas
lods
cli
aaa
xor
xorb
je
and
jo
lods
sub
or
dec
inc
mov
add
into
js
lahf
sbb
bound
push
aaa
std
das
jmp
jmp
push
mov
inc
dec
cmpsl
out
es
push
sbb
lods
pop
pop
adc
xchg
fbstp
cmp
mov
and
dec
mov
xchg
cmp
adc
pop
arpl
jbe
sbb
mov
aad
or
push
sub
icebp
lods
mov
cmp
call
call
inc
push
cmp
fsubs
add
outsl
and
neg
xchg
xor
hlt
sbb
xlat
test
pop
mov
cmp
pop
mov
dec
sub
sub
fwait
sub
lcall
xchg
xor
mov
movsw
mov
or
cmpsb
adc
add
mov
sub
and
shlb
lods
adc
test
jns
jmp
arpl
dec
adc
inc
sub
sub
jle
xlat
test
xchg
xchg
cmp
mov
subl
int
int
pop
pop
ja
xchg
push
mov
and
outsb
ret
xor
subb
les
std
lcall
rcrb
hlt
mov
enter
and
sbb
add
push
jb
decl
xchg
pop
rcll
cmp
rcl
cmpsl
xchg
aas
orb
pushf
test
pop
sub
cmpsl
cwtl
movsl
in
xchg
sub
jmp
rcrl
jb
xor
push
pop
mov
aaa
dec
ljmp
mov
mov
leave
pushf
pop
daa
out
jp
jg
pop
mov
sbbb
cmc
in
jecxz
mov
nop
addb
mov
in
mov
cmp
ror
jmp
xor
lds
push
std
mov
or
and
and
push
out
xor
fstl
pop
xchg
cld
inc
stos
or
je
sbb
test
int3
negb
xor
test
aad
in
fadds
push
add
fnstcw
js
js
or
es
decl
mov
mov
jo
mov
icebp
sahf
shlb
jno
cmp
push
aam
fs
or
imul
inc
jne
push
ret
in
pop
mov
inc
mov
popf
jp
adc
aaa
xor
lret
sub
or
pop
jl
sbb
testb
cmc
ror
add
pop
jl
push
int
fcoml
fists
movsl
or
imul
pusha
fwait
std
mov
fwait
gs
icebp
jno
pop
outsl
hlt
jno
or
incb
mov
fsubrl
lahf
pop
pop
fucomip
insl
dec
cli
push
movsb
dec
das
out
jb
or
cmp
mov
mov
jne
xchg
push
insb
shrl
rcrl
lds
push
je
or
and
into
or
adc
movsb
or
fildl
xchg
bound
dec
pop
dec
imul
arpl
mov
cmp
inc
or
mov
lahf
or
mov
into
aaa
lods
stos
inc
pop
pop
loopne
test
jecxz
add
lahf
cmp
das
mov
pop
mov
fstpt
add
push
out
and
sub
xor
jnp
lcall
mov
inc
sub
push
xchg
mov
xchg
push
aas
adc
out
pop
int3
int
and
repz
fwait
in
fs
xchg
sub
gs
ret
mov
xor
lock
inc
sub
mov
stc
lea
test
dec
push
decl
out
push
std
inc
pop
mov
inc
dec
fisttpll
mov
fdivr
inc
xchg
xor
loopne
lcall
add
add
pop
jl
std
sbb
sbb
xchg
scas
jne
aas
jl
xchg
pushf
jno
sub
dec
fsts
movsl
repz
rolb
popf
sub
daa
inc
and
jp
jl
sbb
sub
pop
out
fmuls
lret
in
or
sbb
push
enter
cmpsb
cmp
jo
stos
sbb
in
call
mov
inc
nop
push
add
ret
mov
jge
push
mov
sbb
cmp
int
xor
dec
je
cmp
insl
test
jmp
decl
fld1
iret
pop
and
cwtl
dec
jge
adc
in
ret
cmp
push
vcvtps2pd
cmp
push
les
and
adc
sub
pop
pushf
cli
lock
pop
lcall
jno
mov
jle
add
mulb
push
aad
gs
lods
mov
std
lret
dec
pop
and
add
push
fcomp
sub
inc
inc
fnsave
adc
sub
xor
xchg
adc
dec
jle
lea
aam
cmpsl
dec
into
dec
inc
mov
nop
sbb
cmp
into
ja
adc
aad
outsb
into
add
sbb
push
cmp
mov
movsb
or
into
pop
lock
sbb
add
pushf
or
inc
ret
cltd
mov
iret
jnp
mov
std
cltd
dec
fstl
push
or
les
aad
adc
int
inc
ss
or
int3
mov
lock
adc
adc
push
int3
data16
ja
adcb
or
into
les
addr16
xor
movsb
in
adc
dec
lcall
push
sub
out
aas
pop
sub
adcb
fidivrs
pop
lods
sub
mov
inc
inc
in
pop
es
inc
dec
mov
dec
dec
add
add
enter
pop
dec
inc
js
mov
sub
add
out
mov
popf
mov
cld
xor
lret
jno
in
pop
test
sarl
stos
mov
pushf
cmpsl
decl
and
out
mov
test
out
xchg
out
xlat
nop
arpl
or
mov
aaa
pop
repz
je
add
lock
bnd
xor
movsl
or
ficomps
cmpsl
cmp
cmp
icebp
pop
cltd
sbb
xlat
rcrb
sbb
push
cmp
mov
out
fmuls
fucomip
outsl
push
fnstenv
mov
jg
js
push
sbb
jmp
jge
daa
push
test
push
call
test
mov
stos
push
mov
mov
push
adc
sub
stos
pop
or
stc
push
push
hlt
fistl
push
cs
push
xor
cltd
xchg
sarl
mov
imul
lock
jnp
outsb
aam
or
data16
xlat
or
adc
pop
in
xor
lods
pop
sbb
and
test
lret
popf
loope
ljmp
stos
sub
xchg
dec
lock
cwtl
adcl
pop
fdivl
cmp
mov
push
insl
ja
push
mov
fdivrs
dec
popf
pop
aas
fcom
jl
inc
sub
jns
or
test
mov
mov
adc
jbe
mov
jo
test
sbb
ss
mov
repnz
ret
jl
aam
inc
movsl
inc
std
push
mov
push
pop
push
push
adc
fistpl
jecxz
mov
sbb
xchg
fcmovu
mov
cli
push
sbb
sub
nop
aam
mov
add
ja
loope
scas
mov
test
les
fs
jns
inc
sbb
push
arpl
cmp
cmp
les
push
add
lahf
scas
xor
mov
xor
outsl
std
arpl
sub
out
and
xchg
xchg
push
leave
shl
add
data16
pop
jge
or
jae
lock
idivl
shrl
sbb
inc
std
or
filds
lods
pop
flds
dec
sub
sbbb
cmp
clc
cmp
int3
inc
inc
inc
and
fisttps
dec
push
fnstcw
sahf
push
in
mov
mov
push
fcomip
in
test
scas
rclb
rcrb
pusha
leave
xorl
in
je
aam
addr16
test
into
adc
std
in
fcmovne
fwait
aaa
or
mov
insb
cmp
xor
popf
stos
and
int3
fwait
or
jmp
in
push
jbe
xchg
shr
mov
sub
fadd
stos
push
push
mov
and
mov
mov
mov
jns
test
or
daa
add
push
push
rclb
fnstenv
mov
lock
and
pushf
fdivr
icebp
test
mov
jge
addr16
cmc
inc
mov
xchg
or
fwait
cmp
jp
push
mov
mov
loope
or
into
xor
mov
movsb
mov
cmp
xor
int3
sbb
push
and
sbb
adc
push
loop
dec
dec
jge
iret
push
js
jle
aam
cmp
sbb
and
cwtl
lods
lea
add
jecxz
int
sbb
or
push
repnz
push
and
mov
cmp
push
xor
inc
test
fistpl
sbb
sbb
test
jmp
clc
mov
in
stc
mov
adc
lea
mov
push
out
mov
and
jg
push
or
arpl
xchg
lock
push
sbb
or
pop
test
inc
mov
mov
xchg
adc
add
push
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
and
jb
bound
mov
mov
xor
xor
adc
jmp
out
mov
add
push
add
stc
xchg
inc
cmc
inc
jp
popf
in
lods
cld
mov
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
iret
mov
pop
out
push
jp
sub
je
gs
dec
lret
outsl
cli
jg
jp
aas
mov
out
push
jp
or
cmp
pop
fisubrl
jno
psubsw
dec
das
stos
aas
mov
divl
arpl
xor
loopne
lahf
pop
cli
bswap
jo
jae
push
xor
push
mov
fsub
lahf
ret
outsb
mov
sti
leave
inc
movsb
push
out
daa
lods
pop
popa
push
cmpsb
notl
loope
pop
and
xchg
loop
xchg
mov
jbe
xchg
cli
cmp
das
stos
shl
mov
fstpl
sbb
and
jg
sbb
sbb
bnd
lcall
into
sbb
pop
es
dec
jo
sahf
ficoml
mov
and
lock
movsb
and
rcrb
xchg
pop
lcall
dec
cmp
cltd
fisubrl
cli
mul
pop
pop
shrb
aas
mov
jo
popf
sti
pop
adc
into
adc
das
ljmp
aas
stos
push
dec
dec
out
jp
pusha
cwtl
or
and
inc
ret
data16
xchg
pop
lea
das
mov
jnp
pop
stc
je
inc
mov
mov
movntq
pop
stos
push
xlat
mov
sbb
sub
mov
mov
psubb
pop
fildll
or
sbb
lret
outsl
ljmp
das
stos
aas
mov
out
push
jp
or
cmp
pop
fisubrl
jg
jp
aas
mov
push
dec
mov
aaa
fwait
xchg
mov
popa
inc
jnp
and
dec
movsl
push
push
push
push
in
or
test
inc
fwait
xchg
inc
push
ret
mov
xor
out
xchg
stos
inc
sub
cmp
stos
neg
jle
add
js
js
jle
xor
out
sbb
mov
out
adc
outsb
push
pop
fs
aaa
cs
roll
inc
pop
jl
lods
cmpsl
ljmp
dec
adc
or
xchg
xor
ljmp
dec
jb
pop
arpl
movsb
popf
fstps
enter
mov
iret
fistpll
mov
cmpsl
lods
pushf
loope
in
add
xchg
imul
aam
clc
pop
xor
dec
mov
rorb
mov
mov
or
dec
push
cmp
and
clc
xchg
lahf
pop
sub
jne
stos
andl
das
cmc
sbbb
ss
in
or
fwait
sbb
dec
xchg
mov
mov
out
into
xlat
daa
popf
inc
mov
jl
fistl
mov
lret
dec
js
out
lods
sub
push
test
ja
andb
mov
mov
mov
xchg
jmp
and
scas
xchg
jae
mov
lock
addl
arpl
inc
inc
xor
lret
insb
out
nop
cld
cmovl
test
dec
push
lret
clc
push
jne
pop
cli
xor
sbb
mov
sub
cmpsl
fimuls
or
xchg
fstpl
clc
xchg
movsl
sbb
int3
stos
inc
popf
push
js
mov
sub
out
and
sub
lret
jmp
pop
cmp
and
shll
psraw
xor
dec
in
mov
mov
dec
lods
fildl
iret
outsb
enter
insl
cmp
cld
push
movq
movsl
cmc
out
or
pop
xorb
inc
sub
mov
cmc
mov
lea
sub
fdivrl
shll
std
test
adc
fwait
es
lahf
or
idivl
xchg
xchg
dec
jne
ret
test
test
in
popf
imul
sbb
lock
mov
dec
mov
jl
push
mov
fwait
xchg
inc
aaa
lock
je
test
test
notl
ljmp
imul
jle
push
int
ja
ljmp
hlt
lods
jo
xor
das
add
pop
mov
sbb
pop
adc
outsl
mov
pop
in
mov
pop
add
popf
shll
sbb
mov
cmc
and
mov
imul
hlt
shlb
push
and
jno
outsb
dec
imul
fnsave
push
cmc
lods
mov
push
xor
jmp
aad
jb
mov
mov
test
int
mov
xor
lds
sbbb
ja
push
imul
sub
movsb
int3
xor
mov
movsb
pop
mov
pop
push
fwait
cmpsl
mov
gs
test
int
sarl
bound
out
ret
jecxz
scas
imul
push
xchg
mov
and
cmpb
lret
stos
mov
movsb
cmp
lret
jbe
ja
dec
sbb
cwtl
aas
stos
sub
sbb
out
stos
in
mov
xor
nop
fwait
adc
inc
mov
or
xchg
cld
cmp
jle
mov
js
dec
add
push
movhps
mov
adc
and
pop
into
jno
out
or
push
pop
lahf
pushf
lock
xor
idiv
std
sbb
add
xor
pop
mov
pop
sbbb
jp
std
jae,pt
cs
les
sub
sub
mov
arpl
sub
adc
andl
lds
jge
stos
fnsave
repz
cmc
ljmp
push
ds
add
mov
pop
int3
pop
lods
or
sbb
cmpsb
jle
outsl
rol
cs
sub
jno
push
fldl
mov
cmc
pop
popa
xchg
cmp
loop
call
aas
test
gs
jnp
scas
inc
or
add
push
call
cmp
in
sub
xor
repz
cmp
cmp
jge
dec
pop
ja
out
movsl
cmp
cmp
fadds
popf
iret
jae
mov
lahf
scas
mov
es
sub
fidivrs
dec
mov
pop
pop
xlat
sub
sub
sub
pop
sahf
popf
dec
adc
mov
push
ljmp
push
xlat
add
in
push
fwait
sti
scas
filds
ja
and
jb
cwtl
adc
ret
mov
push
shrb
sub
test
scas
pop
lods
pop
cwtl
xchg
or
push
inc
push
sbb
clc
ret
in
push
mov
es
mov
add
dec
pop
aaa
pusha
push
call
xchg
sbb
xchg
mov
sahf
fisttpl
ja
add
xlat
cmpsl
xor
lahf
inc
stos
pop
add
dec
scas
bswap
or
xchg
jge
mov
cltd
mov
addr16
mov
stc
pop
les
inc
aas
and
xor
pop
movsl
sub
ret
shlb
push
cmpsb
mov
int3
in
pop
jmp
jle
jns
int3
in
and
push
cltd
add
jg
lret
movsb
adc
mov
cwtl
xor
fnsave
push
shl
fsts
or
testb
and
jmp
sub
rolb
aas
pop
mov
icebp
test
repnz
cmp
mull
sub
shrl
out
cmp
cmpsl
push
or
add
pop
sarl
popa
xor
dec
push
sub
aaa
movsb
cld
pushf
aam
stos
cmp
bound
ds
inc
xlat
mov
scas
add
rcrb
xor
std
mov
dec
mov
scas
xchg
mov
inc
mov
adc
ret
cmp
les
mov
cmp
push
xchg
add
mov
adc
sub
sarl
mov
pop
inc
cmpsb
shrl
std
aad
fsts
movsb
ds
mov
fsubrs
xchg
jge
jecxz
insb
sbb
inc
imul
adc
loope
pop
sbb
sub
push
ret
in
inc
out
les
test
pop
lcall
adc
mov
test
pop
push
cmp
dec
frstor
pop
mov
sbb
xchg
fsubrp
push
popa
dec
out
fnstcw
push
test
push
popa
push
push
icebp
rorb
jno
fsts
int3
lahf
aam
loopne
add
sbb
setne
ljmp
mov
push
inc
adc
sub
call
repz
cmp
dec
adc
mov
push
sub
fnclex
mov
sbb
mov
pop
js
into
mov
inc
daa
shlb
subb
popa
test
and
inc
enter
jbe
popa
dec
xor
sub
fsubrs
cmp
jo
ret
jmp
repz
sti
fistpl
repz
in
pop
in
cwtl
mov
shlb
jp
sarb
ljmp
dec
bswap
lock
adcb
pop
into
pop
and
popl
add
ficoms
or
fs
dec
and
inc
xchg
decb
les
subl
jge
push
sub
clc
or
jo
inc
stc
jg
lods
push
testb
xchg
jle
mov
push
cmp
jle
cmc
sbb
cmp
mov
mov
imul
mov
insb
push
loopne
sub
jbe
dec
xor
movsb
xor
jp
xor
mov
aam
xor
xchg
scas
jl
fnstcw
mov
mov
aaa
inc
xor
fistl
outsb
out
fsubl
and
loope
sub
sbb
mov
movsl
insb
dec
mov
test
mov
mov
jo
lret
sahf
dec
mov
pop
mov
lods
mov
sahf
push
adc
rclb
movsl
push
push
into
call
int
fwait
stc
inc
push
xor
gs
nop
inc
shr
out
sub
add
cmpsl
pushf
xor
xchg
and
mov
sub
pop
movsl
aam
stc
push
or
inc
dec
jno
fstpt
outsl
pop
pop
shll
add
inc
and
mov
imul
mov
mov
add
pop
rcrl
push
jp
push
jmp
imul
aaa
das
cltd
scas
clc
pop
cmc
lahf
cmc
lods
fcoml
pop
mov
or
insl
dec
sbb
inc
adc
or
mov
mov
in
pushf
xor
mov
cltd
adc
mov
sarb
xchg
dec
xor
repz
pop
mul
movsl
mov
adc
iret
mov
sbb
aam
or
or
sub
mov
sbb
sahf
xor
and
cmpsb
push
dec
stos
aad
jnp
push
adc
sbb
std
stos
shlb
jnp
scas
movsb
imul
jecxz
jl
shr
enter
dec
aas
movsb
dec
add
fadds
jecxz
push
fnstsw
mov
inc
icebp
ss
or
idivb
pop
mov
movsb
adc
test
mul
sbb
sbb
xchg
or
int
and
aad
in
push
ja
ss
or
mov
dec
lret
xchg
push
movsl
fiaddl
adc
sub
or
mov
push
xchg
addr16
xor
sub
jge
loope
andb
imul
in
scas
jle
xchg
stos
pop
or
xchg
je
cwtl
xchg
mov
mov
xorb
pop
add
shlb
inc
push
pop
jg
push
daa
les
cmp
mov
mov
dec
mov
mov
test
in
push
inc
add
xor
movsl
stos
jne
jge
mov
call
mov
inc
decb
sub
fldt
aad
pop
imul
stos
pop
xchg
mov
movsl
and
xchg
jmp
push
adc
test
popa
fiadds
sbb
mov
inc
cld
out
cmp
push
loope
cmp
lret
cmp
js
pop
loop
and
adc
in
mov
shll
and
cltd
jb
xchg
xor
orb
or
lret
lods
inc
fildll
and
lock
add
ret
cmp
aad
imul
outsb
stos
adcl
mov
pop
shrl
adc
pop
nopl
mov
xor
sub
fadd
and
pop
ja
icebp
fs
bnd
test
movsb
mov
push
cmp
adc
test
mov
pop
cmp
pop
pop
mov
mov
lods
inc
mov
test
push
stos
ss
mov
dec
and
scas
xor
pushf
add
xchg
lds
dec
shl
add
push
inc
sbb
js
pop
mov
arpl
je
xchg
idivl
loopne
and
cld
fsts
or
cli
inc
imul
inc
mov
dec
stos
jns
repnz
sub
add
push
jae
test
pop
subl
cmpsl
out
dec
xchg
mov
sahf
icebp
rcll
aam
dec
fsubrs
stos
cmpsl
or
lcall
pop
in
add
daa
mov
repz
mov
mov
andl
xor
and
xchg
or
dec
cli
mov
push
fdivl
inc
dec
je
sbb
popf
ds
and
fidivrl
dec
xchg
imul
and
dec
fcmovnb
push
xchg
in
adc
xchg
nop
xchg
insl
xor
xchg
test
jno
les
dec
stos
xor
xor
and
imul
sbb
jmp
xlat
push
sarb
daa
pusha
mov
push
push
loopne
int
xchg
ret
aas
ficoml
inc
call
aas
jo
mov
xchg
shll
sbb
xchg
sbb
popa
cli
rorb
xor
xor
or
jb
jl
jl
aaa
xchg
fs
rol
outsl
mov
jecxz
in
jge
push
test
cmp
xchg
test
mov
lods
mov
in
mov
mov
pop
xchg
sbb
out
add
adc
pop
loop
fwait
stc
add
inc
push
xchg
push
mov
test
add
imulb
shrl
sarb
cmp
mov
ret
addr16
cmc
lds
loopne
popa
dec
jl
cmpsb
aam
dec
lds
pop
rolb
mov
or
repnz
movsl
mov
daa
mov
aas
mov
in
adcl
or
shl
outsb
pop
xchg
mov
mov
xchg
pop
lret
jno
and
mulps
imul
sarl
jb
mov
stos
add
in
sub
popa
testb
out
xlat
imul
mov
pop
jbe
mov
cmc
inc
push
push
loop
pop
inc
inc
inc
dec
movl
inc
in
mov
sbb
xor
imul
lea
fstl
mov
ds
outsl
push
aaa
inc
sub
movl
loopne
es
insb
xchg
or
mov
pop
cmc
lahf
mov
xor
popf
xchg
aaa
in
js
cmp
lret
mov
testb
leave
xor
jecxz
jle
ljmp
mov
aaa
mov
pop
arpl
call
dec
mov
pop
iret
jb
sub
sti
push
sbb
inc
mov
and
xor
push
in
cli
jl
mov
fcoml
jecxz
stos
fincstp
pop
xchg
mov
cmc
lock
xchg
cmp
pop
xchg
dec
test
stos
cmp
loop
mov
push
push
mov
mov
rclb
jns
mull
pop
push
hlt
mov
sbb
push
idivb
lds
in
fstl
add
mov
sub
sbb
ja
scas
cmp
xor
mov
rorl
xchg
pop
lret
loop
inc
jg
jp
add
mov
and
cmp
jno
adc
add
inc
mov
int
inc
ficoms
sub
lods
int3
ja
mov
mov
scas
xchg
cmc
stc
and
shll
adc
jecxz
test
enter
inc
push
out
hlt
push
jmp
push
movsb
mov
jmp
aad
ja
ret
roll
sub
out
fcompl
jecxz
jl
mov
ljmp
bound
repnz
cmc
sbb
pop
mov
testb
popa
test
cmp
adc
inc
jle
and
stos
mov
pusha
jnp
jnp
adc
adc
sahf
and
sti
mov
sub
les
xor
sub
rorl
push
pushf
adc
out
mov
ss
and
arpl
pop
and
inc
or
int3
and
push
mov
lds
call
leave
gs
loopne
loop
fwait
dec
mov
and
inc
mov
sbb
mov
xlat
dec
lret
inc
lds
jbe
mov
pop
or
push
push
or
je
outsb
ss
fimuls
cwtl
fstpt
push
mov
add
dec
inc
sbb
push
push
aad
bound
jae
jle
je
popf
sti
add
lcall
decb
cmpsl
cmp
dec
pop
jb
cmp
imul
push
je
push
ja
pushf
dec
dec
sub
jmp
add
sbb
ss
outsl
rorl
ja
cmp
nop
mov
xchg
pop
lds
lcall
sub
outsl
cs
hlt
cmp
mulb
mov
lock
movsb
sub
mov
xor
dec
lock
int
ljmp
push
div
out
push
ja
pop
dec
and
jecxz
or
sub
pop
out
lret
xchg
int
fildl
inc
js
inc
sub
adcl
fldenv
mov
leave
mov
xor
xor
xchg
sahf
mov
cmp
ds
pop
stos
sbb
cli
cmc
sahf
push
nop
push
cmp
sbb
aaa
pop
or
adc
push
hlt
pop
mov
insb
imul
jnp
outsl
rcrb
pop
or
push
or
data16
cmovs
and
mov
lret
push
xor
adc
int
int3
mov
js
add
out
out
dec
in
in
sub
cwtl
jge
adcb
loope
adc
inc
mov
mov
and
lods
cmpsl
mov
ror
sti
out
jmp
sbb
mov
add
aaa
jg
push
aad
pop
scas
out
mov
sub
mov
jge
mov
popa
adcl
adc
push
cmp
loope
lahf
mov
push
cmp
sahf
push
sbb
and
iret
mov
and
mov
dec
sbb
add
mov
push
rol
scas
in
mov
cmp
rol
or
mov
push
cmp
pop
and
adc
ja
push
es
andb
popa
and
and
popa
dec
lock
xorl
push
imul
ret
pop
inc
pop
movsb
fcom
add
mov
insl
push
mov
push
lods
in
sahf
sub
stc
arpl
aaa
mov
fdivrl
repnz
cmp
sbb
mov
and
xor
add
je
pop
stos
add
sarl
pop
pop
imul
inc
ret
loop
lret
xchg
pop
out
int3
popl
mov
rolb
je
jmp
ja
jno
inc
and
imull
mov
mov
fwait
sub
cmp
popl
shll
sahf
lret
mov
mov
repz
or
mov
mov
push
enter
sub
repz
cmp
jl
mov
mov
inc
imul
insb
and
ds
sar
jg
aad
xor
addb
testb
fiaddl
mov
cmp
in
shlb
aad
ss
loopne
and
insl
out
repz
es
fsubrl
ja
mov
cmp
aad
std
lar
aam
ds
fiaddl
aaa
out
jg
mov
imul
lock
cmp
jecxz
mov
mov
sub
jno
in
popa
or
testb
in
mov
inc
sub
es
imul
pop
cwtl
adc
cs
cmp
adc
stos
shlb
dec
inc
push
mov
mov
mov
lret
add
cld
int3
cmp
and
mov
inc
fwait
test
add
cmp
insb
inc
in
inc
jge
filds
jae
mov
mov
sub
pop
std
cmp
cmp
lea
xchg
jbe
pushf
xchg
inc
out
mov
imul
inc
mov
cltd
mov
cwtl
mov
mov
cmpsl
in
inc
lret
jp
sbb
jbe
ret
cmp
xchg
cmp
xor
aad
jb
sarl
loop
sbbl
lcall
xor
pop
xor
shll
or
jmp
lret
jle
jns
out
jle
pop
dec
adc
sub
aad
insl
pop
xor
dec
data16
mov
push
in
jbe
clc
repz
xor
mov
inc
sbb
ss
sbb
sbb
insl
jecxz
dec
std
es
xor
movsb
mov
test
repnz
mov
test
mov
sbb
rorb
mov
pop
jecxz
in
mov
pop
jb
pop
int3
push
and
mov
into
outsb
mov
jmp
sub
in
les
lahf
aaa
mov
mov
mov
lds
cli
dec
sub
into
sbb
jne
cmp
jo
jl
jmp
push
fs
call
sbb
and
mov
sti
pop
bound
js
push
or
mov
jb
popl
repz
and
or
enter
ja
jp
je
add
mov
mov
and
cmp
pop
data16
xor
pop
stos
cmp
add
imul
jmp
movb
inc
leave
pop
jecxz
mov
repz
and
insb
jg
add
sbb
jnp
addr16
inc
mov
dec
lret
jmp
sbb
rol
push
adc
cmpsb
ljmp
ficoms
and
test
and
dec
enter
sbb
jp
sbb
pop
iret
and
aaa
pop
hlt
dec
mov
mov
add
xchg
add
xchg
in
mov
mul
ret
adc
fwait
dec
mov
cmp
leave
mov
xlat
sbb
add
dec
daa
pop
jle
pop
push
out
arpl
sub
mov
add
test
mov
pop
in
enter
fiaddl
push
repz
test
xor
push
cmp
jecxz
or
data16
sub
jl
or
and
ret
mov
out
addr16
inc
inc
and
enter
inc
ljmp
cmpsl
mov
cmpsb
lret
stc
nop
fwait
daa
test
inc
pop
jp
push
test
in
jp
or
cmp
pop
fisubrl
jg
jp
aas
mov
out
push
jp
or
cmp
pop
fisubrl
jg
jp
aas
mov
out
push
jp
or
cmp
pop
fisubrl
jg
jp
cmp
pop
out
push
jp
or
cmp
ljmp
rclb
inc
cmpsb
mov
xchg
test
es
pop
push
das
pop
aas
dec
jbe
inc
outsl
push
jg
mov
xchg
neg
out
jmp
pop
push
das
push
aas
cmpsb
dec
jbe
inc
outsl
push
jg
mov
xchg
neg
out
jmp
xor
aas
sbb
xor
cmp
shr
xchg
cli
push
das
or
int
cs
adc
dec
das
xlat
push
pop
in
mov
xchg
inc
sbb
mulb
cmp
sub
jmp
aam
outsl
fildl
sbbl
push
dec
call
pushl
dec
or
push
jle
jo
sahf
in
scas
xchg
stos
ror
iret
inc
push
scas
stos
cmp
or
sarl
sbb
pextrw
xchg
arpl
adc
data16
inc
mov
adc
push
adc
or
xchg
das
pop
or
inc
scas
sbb
fmull
jp
lock
push
stc
sub
aas
ss
stos
add
jg
mov
xchg
neg
out
jmp
pop
push
das
push
aas
dec
jbe
inc
outsl
push
cmp
loop
dec
out
jmp
test
arpl
push
inc
outsb
push
and
and
into
rcl
jecxz
cli
call
mov
dec
addr16
jns
push
and
xor
sbb
adc
fbstp
lret
stos
mov
jmp
pop
push
das
push
aas
dec
jbe
inc
outsl
push
jg
mov
xchg
neg
out
jmp
pop
push
das
push
aas
dec
jbe
inc
outsl
push
jg
xchg
mov
pop
mov
adc
jbe
ds
lret
mov
mov
lahf
mov
add
jmp
jb
adc
out
dec
andl
cmpsl
adc
notl
jnp
sbb
punpckhdq
in
gs
adc
xor
idivl
jbe
dec
add
xchg
shll
push
jbe
fwait
jle,pn
and
mov
xor
insb
aas
mov
cli
push
repnz
out
rol
dec
cmpsb
cli
or
lahf
stc
sbbl
out
dec
out
jb
xchg
hlt
xchg
ja,pn
f2xm1
fiaddl
loop
rcr
pop
ja
inc
push
iret
call
loope
fidivrs
iret
leave
movb
xor
cmpsl
push
jle
fcoms
push
mov
mov
rorl
out
mov
inc
sti
fwait
sbb
aad
xor
das
int
push
mov
iret
andl
push
jo
popl
into
cld
adc
fdivrl
xchg
or
cmp
clc
xor
jns
fcomps
xchg
inc
nop
icebp
push
out
inc
sbbl
xor
pop
sti
dec
mov
jb
mov
loopne
insl
mov
adc
popa
rcll
mov
in
in
xchg
mov
push
imul
xchg
divb
push
xlat
xchg
xchg
push
fs
dec
arpl
sub
or
test
mov
dec
push
or
mov
loope
ss
insl
push
shrb
std
and
push
sbb
insb
or
xchg
ret
adc
inc
cmpsl
push
out
ja
jecxz
add
jb
sub
xchg
mov
lods
xchg
jl
or
ja
jno
sub
sahf
mov
std
mov
fcmovbe
mov
xchg
in
jo
pop
test
xor
mov
loope
sbb
lret
pop
ror
sbb
cmp
inc
ss
push
xor
mov
clc
mov
push
sahf
je
imul
inc
mov
fwait
sub
mov
lret
xor
dec
mov
clc
cltd
ds
pandn
bound
call
bound
and
pop
int3
lods
push
inc
xorl
add
imul
jno
cli
mov
xchg
sbb
jno
xchg
pop
mov
adc
ret
pop
mov
leave
mov
mov
inc
cltd
cmpsb
mov
xor
pushw
and
add
inc
and
push
into
cmp
xor
rcrl
xchg
sub
fisubrs
and
mov
out
mov
into
scas
sbb
stos
js
icebp
sarl
push
mov
adc
fnstcw
stc
sbb
adc
les
mov
dec
push
lods
ret
sbb
ret
pushf
cmp
adc
scas
xlat
sub
xchg
adc
mov
push
sub
mov
and
stos
add
xchg
in
mov
sub
fbld
add
dec
out
push
jno
mov
test
test
rorl
jmp
add
sub
jl
add
stos
mov
jno
std
fsubl
in
push
jae
sub
xor
fdivs
cmpsb
mov
or
push
loopne
add
mov
aam
jge
cmc
cwtl
cs
scas
jo
jecxz
fiaddl
movhps
adc
mov
dec
and
int3
stos
popa
nop
ret
arpl
sbb
mov
xchg
pop
in
cmc
adc
xchg
stos
xor
inc
dec
xchg
xchg
push
mov
or
sub
mulb
adcb
fsubr
or
pop
jbe
rol
pop
ret
cmp
lret
xchg
out
xlat
daa
push
lods
ljmp
ja
mov
jmp
lret
mov
call
jmp
es
mov
sbb
jne
add
add
in
cmp
and
fldcw
vmread
mov
or
nop
xlat
sub
push
or
cmp
mov
sub
test
jle
mov
add
fsubs
imul
pusha
mov
xor
mov
loop
push
push
sbb
mov
push
in
out
stos
add
mov
je
mov
call
dec
adc
stc
dec
repz
pop
xchg
xlat
je
cmpsl
insl
jnp
or
jb
popa
nop
xchg
gs
outsl
out
xchg
arpl
dec
xchg
xchg
xor
or
dec
push
xchg
rorb
leave
and
dec
test
jmp
clc
cli
xchg
jl
dec
je
mov
hlt
pop
mov
mov
daa
outsl
xor
stc
leave
fsubrp
cwtl
pop
icebp
fwait
popf
push
inc
sbb
test
jne
inc
aas
dec
mov
lahf
push
jbe
sub
ja
ret
and
xchg
mov
xchg
push
cmp
pop
cltd
lock
push
jno
cmp
xchg
pop
fldl
insb
add
add
sbb
popa
mov
cmp
stos
add
mov
and
aad
sahf
adc
jbe
mov
test
call
and
or
idivl
imul
or
mov
lods
loopne
mov
rcrl
xor
dec
aam
xor
cltd
std
or
mov
pop
inc
sahf
enter
xchg
insb
leave
cmp
jecxz
pop
arpl
mov
mov
dec
in
imul
hlt
lahf
adc
or
push
adc
fstpl
pop
stos
inc
rcrl
mov
cli
lods
cs
arpl
test
inc
in
in
jno
in
test
add
inc
mov
and
mov
dec
paddd
dec
jecxz
cwtl
sub
or
jge
lcall
dec
inc
ret
cmp
movsl
xor
icebp
fstps
outsl
xchg
cmp
roll
fsubrl
loop
pop
popa
test
sahf
cmp
add
mov
or
sbb
sub
push
aam
sub
sti
jecxz
cmp
dec
imul
loopne
outsl
sbb
int
cmp
mov
pop
mov
cmc
outsb
mov
xchg
fs
iret
scas
div
es
xor
sarb
lods
mov
ficomps
int3
outsl
jge
mov
arpl
lea
pop
mov
mov
aad
hlt
pushf
loopne
xor
sahf
xchg
cmp
inc
add
fsts
je
xlat
or
push
enter
sbb
faddl
xlat
shrl
sub
outsl
xor
jno
mov
inc
add
mov
inc
xchg
in
adc
xlat
sbb
aas
push
sub
xor
add
jle
fistpl
loopne
dec
mov
mov
mov
cmpsb
xor
sbb
stc
jae
sbb
mov
xor
cmp
dec
ljmp
bound
push
mov
cmpsl
adc
ret
insb
xor
mov
sbb
jo
pop
cmpsb
push
call
inc
cld
vmulss
jecxz
adc
inc
pusha
or
out
jmp
xorb
nop
mov
fwait
scas
fiaddl
jge
push
xchg
mov
dec
cs
and
cwtl
add
or
inc
in
ror
sbb
and
in
mov
mov
mov
aaa
stos
pop
ds
loop
aam
push
add
jno
jl
lea
xchg
and
hlt
bound
ss
pop
leave
push
mov
dec
push
and
call
pop
mov
sbb
adc
cmp
pop
outsl
and
push
mov
rcll
add
aas
cmpsb
sbb
mov
out
fwait
jg
mov
mov
fiaddl
addr16
imul
lock
inc
in
add
test
fldt
cmovg
nop
int3
push
arpl
push
shlb
clc
cmp
and
mov
inc
mov
dec
xchg
lods
jno
push
addl
stos
push
les
mov
aam
or
or
cmc
cli
or
mov
insl
dec
sbb
movsl
ljmp
and
bsf
movsl
int3
mov
sub
shlb
loope
daa
jmp
stos
push
in
pop
mov
icebp
add
loope
cli
shll
jae
cmp
mov
jns
popa
jl
cld
movsl
xor
jg
pop
iret
data16
loop
ss
mov
and
push
scas
pop
add
mov
sub
in
xlat
in
std
xor
andb
popf
xchg
in
cmp
cmp
cmp
add
mov
subb
imul
sub
jmp
jg
jp
pop
sub
sahf
or
aad
or
clc
ret
in
aam
and
scas
mov
aad
pop
mov
push
int3
shlb
outsl
push
xchg
or
jae
sti
pop
mov
decb
aaa
cs
adcb
push
loopne
pop
fstpt
jecxz
pop
ja
insb
retw
or
in
jne
inc
lret
idivb
cmp
add
sbb
mov
mov
adc
mov
jmp
cltd
inc
jbe
xor
sbb
pop
jecxz
jnp
jmp
das
fs
insl
jl
lock
push
push
imul
idivl
cmpsl
outsb
into
aas
sub
jle
int3
sub
inc
mov
lods
mov
jp
es
dec
or
scas
mov
dec
pop
jge
push
jnp
into
fsubrl
cmp
je
imul
add
mov
and
scas
dec
mov
push
loop
mov
xlat
dec
pop
sub
roll
jmp
mov
jp
add
neg
hlt
jns
lahf
inc
xor
cmpb
subl
pop
mov
adc
call
push
sub
das
pop
das
out
fbld
pop
insb
mov
jo
sub
fcoms
or
andb
out
in
xchg
jnp
loopne
cmp
add
imul
push
mov
dec
cmp
dec
and
jmp
out
test
jno
lods
scas
aad
sub
shll
inc
int
sub
xchg
addr16
test
dec
rclb
adc
dec
nop
push
adc
imul
int
rorb
pop
les
jmp
std
aaa
pop
mov
outsb
mov
das
in
iret
adc
gs
mov
arpl
cmp
lds
jae
cmp
adc
push
out
dec
movsb
mov
adc
mov
fiaddl
adc
ja
mov
mov
xchg
dec
sub
inc
rol
adc
aaa
mov
mov
and
sbb
cmpsl
sub
or
xchg
popf
pop
std
fwait
leave
mov
arpl
xor
mov
jle
enter
mov
inc
lods
rcll
loopne
pushf
mov
xor
push
stc
mov
inc
xchg
out
out
sti
insl
jne
adc
jle
sbb
inc
mov
daa
scas
stc
xor
xor
xchg
dec
add
mov
cmpsl
mov
daa
cmp
lea
sbb
pop
iret
std
jg
clc
cmp
sub
cmpsb
shlb
dec
in
mov
cmpsb
mov
insb
xchg
pop
jp
mov
pop
icebp
pop
fiadds
pop
push
xchg
outsl
push
hlt
imul
mov
push
cmpsl
xchg
pop
subb
mov
xchg
repz
xchg
aaa
adc
aad
mov
mov
or
lret
les
std
push
test
jecxz
aaa
repz
xlat
sbb
ret
jecxz
jg
xchg
loop
sub
sarb
scas
movsb
cmp
int3
incb
loopne
pop
mov
pushf
divb
pushf
into
in
imul
into
pushf
jne
pop
cmc
shlb
push
lods
pop
xor
jl
add
mov
mov
test
jnp
cmp
and
notl
out
daa
dec
or
mov
lods
loope
and
ret
lods
test
cli
push
xchg
ss
mov
fsubrl
insl
pop
cmp
dec
js
mov
dec
es
pop
cwtl
scas
add
mov
mov
cwtl
insb
pop
movb
in
mov
xchg
pop
sbb
ret
xor
mov
xor
negl
js
pop
dec
jge
cmpsb
rcrb
jo
inc
adc
sbb
dec
sbb
dec
pop
movsl
mov
arpl
mov
subl
mov
incb
xchg
out
or
mov
xchg
jns
lahf
popf
scas
aad
stos
ficoms
xlat
or
pop
ds
insb
addb
pop
out
jo
push
leave
mov
inc
imul
dec
pop
stc
add
sti
fnsave
cli
jg
pop
pop
cmp
shll
jae
push
lods
imul
push
aaa
mov
or
lahf
sarb
push
jns
pop
inc
inc
mov
pushf
inc
add
inc
jl
loop
push
cmp
push
mov
sbb
test
sbb
cmp
push
outsb
mov
ljmp
mov
sub
add
cmpsl
or
cli
arpl
adc
mov
sub
sbb
iret
xchg
mov
roll
or
lcall
int3
cltd
inc
push
xor
pop
add
jp
scas
and
inc
test
scas
jle
add
mov
sub
mov
dec
lds
aam
pop
neg
negl
inc
sarl
in
icebp
xor
pop
scas
adc
lcall
mov
inc
jp
cmpsl
vandps
pop
nop
push
push
jmp
pop
test
push
addl
inc
adc
cli
loope
sbb
adc
loope
popa
cmp
mov
jp
ljmp
stos
ret
and
push
push
outsb
ret
arpl
mov
push
and
outsb
xchg
pushl
xor
and
scas
ja
dec
shl
mov
mov
fstpt
leave
imul
ja
aad
popa
pop
roll
imul
cmp
cmp
pop
stos
cmpsl
rcll
ja
add
popf
cmp
out
lods
rcrl
mov
cmp
data16
adc
pop
jl
xchg
sub
push
jl
outsl
sbb
aad
call
adc
loope
aam
lock
imul
in
cmc
mov
cs
imul
ds
in
pop
mov
ret
js
hlt
das
arpl
pushf
loope
dec
dec
add
inc
pop
negb
fcoml
xchg
out
sub
popa
scas
outsl
xor
ja
fcomps
in
in
fistl
es
data16
push
adc
lods
pop
sub
or
cmp
inc
inc
lret
je
rcrl
adc
repnz
inc
inc
pop
jg
clc
jb
jns
inc
lock
jae
pop
jp
push
fwait
inc
int3
xchg
cli
mov
add
jl
jecxz
fcmove
mov
cmpsl
dec
or
rcl
fsubs
push
int
aas
mov
sbb
add
xor
adc
add
dec
mov
jne
aam
adc
sbb
rcrb
js
lret
mov
pop
pop
push
stos
mov
mov
lea
mov
mov
xor
pop
ss
mov
fdivs
xchg
xchg
inc
cmc
jle
addr16
sub
push
jecxz
out
pop
mov
push
mov
lods
loop
ret
out
mov
adc
lcall
mov
mov
mov
adc
aas
add
popa
mov
js
xchg
das
push
mov
cmp
mov
dec
xor
rcrl
stos
xor
movsb
pop
mov
daa
outsl
hlt
movsb
inc
and
xchg
jg
push
dec
xchg
or
leave
dec
jecxz
lea
lods
fisttpl
popf
int
mov
shlb
bound
in
ds
mov
jl
outsb
mov
mov
pop
xor
add
xor
mov
sbb
push
mov
pop
lcallw
stc
enter
pop
popf
jne
notb
dec
push
mov
pop
jns
loopne
in
mov
mov
inc
stc
mov
out
lret
sahf
outsb
insb
out
mov
jne
adc
cltd
xchg
add
mov
cmpsb
rolb
pop
sbb
jg
mov
mov
jmp
and
inc
pop
sar
imull
in
out
jae
js
shlb
adc
adc
dec
cwtl
cwtl
popf
idivl
push
xchg
jmp
cmpsb
xchg
push
xchg
mov
pop
fistpll
push
adc
fisttpll
lods
pop
pop
mov
xchg
aam
cmpsb
aaa
aaa
pop
test
inc
js
or
notb
in
out
movsb
gs
daa
add
test
je
cltd
pop
mov
add
int3
out
pop
mov
sub
sbb
or
sub
push
es
jb
call
sub
scas
jge
insb
lret
xchg
mov
ss
hlt
loop
and
sub
in
jbe
in
sahf
add
outsl
loopne
push
test
pop
ljmp
scas
fscale
mov
dec
sbb
xchg
dec
js
cmp
push
adc
pusha
lds
pusha
pop
fwait
jle
addb
fimull
or
xchg
inc
aam
jo
in
movsl
xchg
adc
mov
inc
cwtl
and
stos
inc
int
sub
and
dec
les
mov
jne
or
or
xchg
cmp
push
aad
jl
mov
inc
into
pop
xchg
iret
movsb
je
mov
ss
das
sub
cld
sub
movsb
mov
popf
cmc
push
mov
je
les
leave
rcrl
into
xlat
insb
mov
cmp
test
imul
cmp
push
dec
cmp
sti
and
add
lahf
fsubr
pop
clc
popf
adc
es
das
jmp
push
xchg
ja
inc
cmpl
dec
sbb
jge
in
push
aam
in
arpl
cmc
jnp
dec
pop
fnsave
loope
add
xlat
mov
int
dec
sbb
lcall
out
push
test
scas
cmp
mov
inc
lods
lods
jle
jp
mov
mov
and
jp
cmp
and
lahf
adc
dec
add
mov
and
outsb
sar
xlat
dec
push
sahf
dec
sar
fisttpl
sti
adc
pop
pop
jns
xor
test
lcall
int3
lds
mov
adc
inc
stos
ror
addb
idivl
insb
das
mov
and
movsl
xlat
in
popa
push
cmp
dec
push
pop
sub
add
shll
or
xor
dec
cmpsl
jo
loop
mov
dec
mov
movl
sub
mov
jno
jbe
out
adc
xor
xchg
mov
loop
mov
aad
xchg
mov
jnp
hlt
mov
popa
add
pop
aas
in
pop
gs
xor
pop
add
mov
lods
iret
add
mov
rorl
mov
cltd
shl
lods
inc
adc
lret
adc
dec
mov
outsl
mov
iret
ljmp
adc
mov
push
cmpsb
jp
lcall
mov
je
std
dec
jb
mov
aam
frstpm(287
mov
sar
mov
es
in
sbb
pusha
add
out
mov
fwait
sub
ja
xchg
xchg
ljmp
repz
add
popa
das
rorl
xchg
bound
sub
shll
frstor
and
lds
loop
mov
pop
inc
pop
mov
icebp
fwait
mov
fs
divb
xlat
sbb
cwtl
pop
jl
and
hlt
xor
in
or
outsl
sub
xor
insb
in
adc
adc
shll
repnz
fadds
enter
rcl
add
stos
shl
repz
jo
inc
std
popf
mov
lcall
ret
cmp
flds
and
dec
pop
pop
or
jns
sbb
or
xlat
mov
pushf
mov
std
mull
xor
mov
movsb
imul
adc
push
shrb
in
mov
mov
addr16
jl
xor
fstps
dec
mov
cltd
add
out
or
in
es
add
arpl
pop
or
cld
xchg
adc
sub
test
lods
xor
cmpsl
daa
sbb
mov
outsb
sti
arpl
es
xor
scas
jnp
fldl
fwait
inc
xchg
sbb
jle
xchg
or
ret
add
jl
cmp
ret
or
in
arpl
adc
stc
sub
push
sti
and
fidivrl
adc
adc
mov
xchg
add
out
inc
outsl
inc
aas
std
jp
push
xor
mov
add
test
call
aaa
ja
js
lcall
imul
int
mov
sbb
mov
jb
loop
or
call
and
mov
fsubr
jmp
pop
int
push
cltd
outsl
dec
or
cmp
jp
fdivs
inc
rcr
mov
popa
cmp
nop
pop
aas
insb
pop
ffree
mov
or
fsubrl
fwait
daa
mov
rcrl
ret
sub
les
test
sti
int
cmpsl
loop
mov
out
neg
out
jmp
pop
push
das
push
aas
dec
jbe
inc
outsl
push
jg
mov
xchg
neg
out
jmp
pop
push
das
push
aas
dec
jbe
inc
outsl
push
jg
mov
lahf
push
scas
xchg
mov
out
push
jmp
push
push
das
push
aas
dec
jbe
inc
outsl
push
jg
mov
xchg
negb
outsl
add
lock
das
push
dec
push
movl
adcb
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
cli
mov
movsl
ficoml
int
out
cmc
xchg
jns
push
add
sbb
inc
cli
mov
movsl
ficoml
stos
in
aad
lds
push
pop
adc
sub
pop
or
mov
movsl
ficoml
stos
in
aad
lds
dec
and
cmp
pop
or
arpl
mov
cli
mov
push
jno
add
mov
inc
sub
mov
mov
xchg
jecxz
and
mov
shll
fucom
fisubl
sub
add
bound
xor
xchg
aad
enter
aad
clc
cmp
cltd
stos
or
cli
mov
int
shl
push
in
pop
mov
mov
out
mov
pop
sub
test
adc
jp
hlt
mov
data16
jnp
bound
ljmp
in
or
and
pop
loopne
xor
push
cmp
add
jns
fldl
inc
cmp
lret
cmc
stos
in
aad
lds
push
pop
adc
sub
push
or
fimull
in
fistps
push
xchg
or
push
sub
inc
mov
push
jp
mov
mov
fistpll
iret
lds
dec
or
push
push
dec
push
jae
pusha
adc
pushf
std
scas
loopne
cmc
stos
in
aad
lds
push
pop
adc
sub
push
or
mov
movsl
ficoml
stos
in
aad
lds
push
pop
adc
sub
push
or
mov
in
inc
daa
mov
push
stos
je
bound
add
mov
andl
pop
popf
sub
cli
xlat
adc
in
lods
dec
pop
jle
jmp
or
push
jno
xor
aad
xchg
ds
push
jnp
xor
test
cmp
mov
cmp
push
out
shll
xchg
inc
lods
movsl
cli
sahf
push
ret
jmp
fwait
mov
scas
pop
push
imul
dec
jmp
nop
inc
xor
mov
scas
dec
mov
sbb
movsl
cld
lret
jg
icebp
fdivrl
inc
inc
cmovnp
mov
pushf
roll
xchg
sbb
adc
dec
jne
test
sub
inc
cmc
dec
pop
xor
ds
and
outsl
pop
and
push
adc
orb
insl
gs
lea
xchg
adc
or
enter
stc
push
test
lods
adc
and
add
cmp
push
jge
jno
bound
lock
int3
mov
xor
cwtl
ja
push
xchg
mov
jns
dec
jns
fidivs
cs
xchg
push
addr16
ret
add
daa
mov
sbb
or
test
pop
push
jns
adc
mov
jno
mov
outsb
jns
gs
dec
pop
lcall
adc
mov
cltd
xor
xor
je
sbbb
dec
out
ljmp
scas
loop
xor
fcoml
sub
arpl
js
xor
add
je
add
jge
or
pop
add
cmp
sbb
adcl
xor
or
xchg
andl
loop
cmp
scas
in
mov
xchg
cs
in
rcll
and
std
popf
adc
aaa
and
sbb
sbb
pop
notb
je
add
dec
idivb
neg
sbb
frstor
xchg
stc
push
inc
mov
jb
aad
push
dec
jmp
jbe
xor
mov
enter
outsl
add
xchg
push
sbb
mov
pusha
fdivs
aaa
mov
ljmp
add
or
inc
push
dec
mov
mov
in
or
jae
push
test
lret
sub
cltd
scas
pop
mov
pop
dec
add
imul
lcall
ds
shl
outsb
adc
into
lea
cmp
mov
jno
xor
gs
out
sbb
sbb
sub
cmp
push
imul
clc
cmp
mov
sub
adc
inc
adc
adc
cmc
xlat
xor
insl
mov
push
jmp
in
fldenv
dec
push
cmp
cmpsb
lods
cs
and
mov
mov
jecxz
mov
inc
mov
inc
mov
add
data16
cmp
mov
xchg
in
mov
mov
xchg
inc
sbb
scas
repnz
xchg
mov
fwait
je
sbb
dec
sbb
js
test
popf
inc
xor
rclb
pushf
enter
adc
cmpsb
nop
jbe
jae
inc
movsl
mov
xorl
dec
cmp
push
cld
shll
rcrl
push
mov
xor
and
pop
aam
add
call
jnp
jno
pop
pushf
sbb
xor
inc
jmp
testb
daa
jns
mov
xchg
leave
adc
adc
sti
add
xchg
idivb
jle
pop
pcmpgtd
push
clc
jecxz
cli
or
lods
cmpb
in
sub
sub
lea
ds
fdivs
lcall
decl
push
scas
stc
mulb
filds
stc
pop
adc
xor
jl
mov
push
adc
loopne
nop
out
std
mov
jnp
mov
jo
add
sub
or
stos
dec
fmuls
cwtl
cmpl
mov
sbb
movsl
fisttpl
lret
stc
ret
or
dec
cmc
cmp
in
les
mov
movsb
ja
or
sub
dec
dec
out
add
xor
jnp
icebp
xchg
mov
xor
int3
jp
es
mov
or
sbb
add
call
jl
sbb
or
int3
or
aam
cmp
inc
in
dec
repz
popf
cmc
std
fcmovnu
lahf
dec
xor
dec
jns
lret
loope
inc
repz
lret
test
lret
mov
adc
push
and
icebp
mov
int
cmp
mov
outsb
in
mov
mov
sub
rorl
inc
mov
xchg
sub
or
pop
mov
jmp
popa
add
sti
and
daa
popf
outsb
and
and
or
cmpsb
push
jns
mov
xchg
lods
push
jno
imul
das
jg
fdivrl
ds
into
notb
shlb
scas
cmp
out
adc
jnp
insl
js
and
testl
cmp
into
mov
pop
movsb
xchg
jae
cmp
lret
cmp
outsl
ja
add
jle
mov
test
vpsllq
mov
movsb
mov
inc
jmp
hlt
loop
sarb
mov
xor
arpl
mov
leave
cmc
sub
jecxz
push
ds
xor
fdivrs
in
sbb
out
imul
mov
mov
pop
lcall
sub
pop
clc
jnp
jno
or
add
into
lods
pop
lods
adc
leave
push
pop
jmp
sarl
adc
jge
stos
imul
lahf
or
stc
lds
push
push
scas
repz
or
cs
popf
mov
sbb
adc
aad
cmp
rcrb
gs
ja
sub
inc
test
aad
mov
sahf
scas
mov
xchg
and
fsubs
pop
cwtl
test
cmp
or
out
or
dec
push
sbb
fnstsw
insl
popf
or
xchg
push
outsl
imul
test
incl
ja
xlat
ret
adc
lcall
loope
mov
test
sti
dec
mov
cmc
mov
pop
insb
dec
push
or
popf
dec
mov
and
push
mov
inc
push
call
aas
fs
jne
call
shl
mov
mov
bound
stos
outsb
stos
lret
sbb
in
jns
int
mov
jns
cs
pop
mov
xor
and
lahf
imul
push
and
pop
int3
shll
dec
imul
test
fbstp
js
dec
sub
mov
idivl
pop
push
in
mov
aaa
insl
push
das
add
rclb
push
loope
mov
mov
test
jae
shr
mov
popa
cwtl
pop
fnstcw
stos
cwtl
and
loopne
dec
out
nop
push
fiadds
mov
hlt
xor
iret
es
loop
inc
fisttps
aaa
jle
mov
sub
rcll
setns
pop
scas
cmp
fistpl
sub
jp
pop
cmp
push
out
lcall
iret
sbb
mov
lfs
call
mov
or
loopne
pushf
add
sbb
or
xor
test
xchg
pop
inc
sub
js
inc
rorl
mov
lret
cmc
sbb
sahf
sub
mov
pop
push
aaa
ljmp
sub
orl
or
adc
xchg
inc
sub
push
cmp
dec
cmpsb
aad
and
mov
sub
sahf
sbb
call
pop
in
frstor
btr
xchg
outsb
jmp
rolb
mov
test
cmpb
jno
adc
cmp
adcb
sbb
inc
add
xchg
xor
lods
pop
out
jle
cld
shlb
jg
add
loopne
fstpt
inc
test
insl
call
in
jle
sahf
inc
in
mov
sub
push
test
lods
lods
lods
ret
scas
iret
dec
data16
mov
lret
int3
std
push
jns
out
ja
les
aam
xchg
lods
mov
dec
ljmp
push
imul
or
rol
pop
mov
nop
mov
xchg
in
dec
gs
ret
mov
adc
cld
orl
ficompl
mov
dec
ficoml
dec
jl
repnz
int3
jle
pminub
cmp
jae
int
fst
dec
mov
mov
fwait
jbe
stos
jmp
mov
icebp
xchg
xchg
stc
mov
in
fwait
popf
imul
xchg
test
arpl
jo
jmp
xor
and
add
sbb
mov
cwtl
outsl
mov
xchg
adc
dec
cmc
cmp
add
sbb
stos
mov
scas
and
aas
fxch
sbb
cmp
inc
dec
jp
pop
sarb
jns
adc
inc
cmp
mov
mov
movsl
shrb
fbstp
mov
push
stos
mulb
or
ss
scas
imul
xchg
jnp
shld
dec
je
idivb
fstpt
mov
inc
mov
pop
pop
add
inc
add
xlat
push
imul
or
inc
xchg
add
ds
addl
push
xchg
imul
cmp
lock
pop
xor
fwait
pop
jmp
pusha
arpl
jo
cmp
mov
leave
scas
adc
xchg
gs
enter
mov
bound
push
xchg
push
dec
insl
mov
fidivl
inc
mov
int
sbb
adc
adc
daa
dec
inc
into
aas
faddp
stc
rcll
lahf
push
hlt
cmp
popa
pop
test
and
push
ds
jbe
inc
divl
pop
aad
testb
outsb
push
mov
movsl
mov
xchg
rcrb
dec
mov
jno
int
xor
sub
jg
mov
dec
sub
pop
cmp
cmp
ljmp
sub
mov
dec
mov
decb
mov
mov
jp
and
pop
pop
mov
push
xor
and
rorb
lods
aam
sub
jb
or
sbb
jne
or
fldenv
lds
inc
xlat
xlat
mov
mov
out
add
test
pop
mov
rcrb
push
stos
pop
cld
std
ret
stc
subb
fcompl
mov
neg
aas
xchg
lcall
pop
cld
call
fsubrl
sar
fbstp
cld
stos
rol
jne
adc
push
mov
insb
aas
imul
sbb
in
push
sahf
lods
add
jp
adc
pop
dec
out
dec
imul
pusha
test
cli
ljmp
fdivrl
adc
sub
popa
pop
in
sbb
or
jno
loopne
in
dec
js
inc
sti
push
mov
mov
push
nop
stc
mov
repnz
pop
scas
mov
popf
out
xchg
push
std
fsubs
push
aaa
fisttpll
push
lahf
ds
add
pop
mov
iret
mov
mov
out
and
add
and
add
rcrl
xchg
mov
ror
cmp
sub
scas
mov
adc
sbbl
push
cmp
arpl
int
das
jae
mov
add
ret
mov
or
add
daa
cmpsb
cmc
xchg
outsl
imul
andb
cmpsb
jbe
pop
add
mov
sub
out
test
mov
xor
adc
arpl
mov
jo
inc
inc
icebp
jno
push
mov
mov
mov
ja
ret
repz
out
test
dec
std
cmp
cld
cmp
and
mov
pushf
mov
pop
in
pop
cmp
test
push
jbe
and
dec
jge
push
fcoms
dec
sub
pop
pusha
ret
test
mov
dec
and
out
pop
and
cmpl
mov
push
rolb
sbb
fildll
pop
jg
xchg
and
dec
or
mov
outsl
jl
jne
sub
scas
cmpsb
add
add
ljmp
lods
ret
jecxz
das
xlat
cltd
mov
sbb
mov
push
dec
test
mov
hlt
out
pop
les
and
jno
outsl
adcb
jp
pop
mov
cmc
pop
sbb
wrmsr
lret
nop
loope
pop
mov
jns
fwait
xor
fucom
mov
fisubl
jmp
push
xor
nop
xlat
lcall
jecxz
mov
dec
fidivrl
mov
imul
fists
mov
lahf
pop
scas
xor
lahf
scas
cld
mov
xor
arpl
mov
mov
or
xlat
cwtl
lds
leave
mov
jmp
ret
xchg
out
shrl
mov
popa
push
test
scas
add
cmp
test
movsb
and
fisubrs
mov
nop
cmpsl
xchg
inc
aas
jmp
fstpl
popa
push
cmp
or
jae
in
adc
adc
gs
add
xorb
pop
loope
icebp
mov
jno
jl
sarb
push
cmp
das
add
stc
xor
aas
mov
in
pop
shrb
std
lods
xor
cmpb
enter
push
cli
js
pop
bound
adc
movb
sub
rcrb
or
and
out
dec
int
cli
xchg
js
inc
sub
dec
xchg
sub
xchg
shll
pop
xor
jb
ret
ja
and
movsb
cltd
dec
out
mov
cmpb
xchg
sub
sub
sbb
clc
out
jmp
enter
add
push
xchg
imul
mov
mov
pop
adc
mov
out
and
clc
push
ret
push
sub
xor
push
adc
lret
push
pshufw
push
popa
and
shrl
lcall
out
enter
fldenv
push
and
inc
jno
out
pop
inc
aad
pop
bound
cltd
adc
xchg
sbbb
in
pop
or
out
adc
insl
fsub
test
sub
sub
insb
xor
or
fstps
ja
inc
sbb
xchg
mov
rol
je
stos
lock
inc
cmp
cmp
push
outsb
lret
push
inc
out
out
xchg
sbb
inc
jo
and
mov
enter
data16
out
clc
into
push
jno
scas
dec
repz
pop
pusha
les
leave
mov
mov
mov
cwtl
mov
mov
nop
mov
out
or
sbb
add
adc
xchg
in
pop
les
xchg
adc
pop
or
mov
sahf
adc
lret
bound
loop
popf
insb
bound
out
dec
add
and
fildll
stos
pop
enter
or
push
lahf
loopne
push
ds
cmpsl
cmp
icebp
scas
lret
lahf
push
dec
out
xchg
pop
adc
jg
add
test
lcall
push
sbb
repz
jne
lds
cmpsb
xor
fsts
nop
insl
xchg
stos
add
add
pop
sbb
in
inc
ljmp
in
dec
push
mov
cmp
push
pop
out
mov
shll
jp
mov
mov
inc
fbld
mov
out
jae
jle
xor
insl
lret
fmull
jb
imul
mov
test
push
mov
fidivrl
out
cwtl
ja
xchg
out
sub
data16
ret
pop
out
cmpsl
push
pop
or
push
insb
mov
out
fld
in
negl
or
roll
sbbl
sbb
jle
jne
jns
ss
jne
fs
je
and
pop
insl
cs
rorl
sub
and
sbb
and
fs
popf
jp
xchg
shl
out
pop
cmp
adc
in
gs
sbb
cwtl
or
movsb
dec
adcl
subb
or
mov
repz
ljmp
test
jmp
in
test
je
jecxz
mov
jo
jp
sbbl
mov
call
ret
and
cwtl
mov
pop
repz
mov
pop
aam
int3
xchg
mov
bnd
ret
lock
test
lret
popf
xchg
xor
stc
jle
or
push
into
leave
pop
lods
xor
outsl
xor
xlat
fisttps
ret
cmpsb
sbb
jg
test
es
xlat
imul
and
push
dec
iret
rorl
std
out
int
inc
ja
outsl
rolb
clc
add
mov
shl
mov
js
insb
insl
icebp
and
pop
pop
cmp
jge
xor
xchg
cwtl
inc
or
xchg
mov
sbb
fisubs
imul
inc
xchg
jecxz
fnstenv
test
or
jne
mov
pop
push
shll
mov
xchg
add
in
aaa
mov
insb
ds
fbld
dec
cwtl
fstpt
push
dec
outsb
jns
aaa
cmp
mov
in
xor
push
inc
jae
test
ja
insl
dec
fisubrl
push
and
and
push
cmp
lcall
or
pop
repnz
mov
xchg
lret
xchg
cltd
sbb
fdivrs
arpl
mov
rclb
insb
mov
or
test
out
bnd
and
push
popl
xchg
inc
cmp
out
mov
es
lock
clc
push
mov
pop
stos
adc
outsb
and
mov
cmp
xor
rclb
adc
dec
pop
das
inc
cmpsb
fistpl
outsl
popf
sub
and
sub
inc
jo
outsb
arpl
stos
mov
add
jae
inc
sub
sub
push
jge
fists
or
push
push
mov
sub
mov
pop
insl
push
loopne
push
iret
xchg
pop
and
and
sbb
mov
sarl
bound
jp
lret
cmc
arpl
adc
jmp
xchg
pop
sub
inc
mov
sub
and
and
int3
mov
fildl
js
xchg
mov
dec
push
sub
push
add
sbb
pushl
fincstp
stos
lret
mov
adc
jo
out
cltd
and
lods
data16
mov
pop
xor
jle
jo
or
sbb
jb
cld
jbe
mov
scas
loopne
adc
mov
pusha
js
xor
inc
shl
out
stc
lods
pop
sub
jne
cmpsb
es
push
das
mov
push
xlat
sub
adc
pop
cmp
adc
jbe
jl
cmpsb
or
sbb
cmp
and
outsb
lret
push
fsubrs
xchg
popa
push
cli
dec
lds
dec
mov
xchg
inc
test
mov
mov
mov
inc
lea
int3
xor
les
xchg
pop
test
inc
loop
xchg
fucomip
mov
call
bound
inc
enter
add
sbb
sarb
push
xor
and
ds
shrl
mov
out
mov
jne
mov
mov
je
loop
loope
mov
inc
bound
push
cmp
dec
cmpb
xor
xor
sahf
repnz
rcrb
into
cmp
inc
call
in
xchg
and
mov
mov
pop
mov
std
jg
push
sbb
jge
and
jge
or
push
les
in
sbbb
std
xchg
ret
fsts
pop
cmp
lret
jo
pop
clc
stos
fisttps
cs
xor
imul
xchg
xchg
faddl
pop
mov
sub
and
jmp
fucomip
inc
or
cmc
pusha
sbb
push
iret
push
je
sbb
rorb
jb
xor
punpckhdq
xorl
or
cld
in
mov
pop
sbb
iret
aam
jno
das
fmul
loope
add
stc
leave
stos
jb
push
xchg
insb
popf
dec
aaa
or
into
into
lds
subb
push
xor
cld
in
rorl
push
stos
lods
sbb
mov
ja
dec
jecxz
outsb
and
mov
test
popf
je
ret
sub
cli
mov
sbbl
mov
ss
mov
xchg
repz
repnz
cmp
lea
jmp
xlat
adc
xor
rclb
mov
push
xor
xchg
mov
aad
adc
add
es
js
ss
mov
mov
shlb
pushf
dec
sub
jge
rcr
inc
lods
jecxz
push
xchg
mov
add
in
jae
lret
pop
aaa
iret
xchg
movsb
out
js
push
pushl
icebp
bound
popf
pop
sub
jg
push
dec
outsl
push
jg
sbb
stc
push
inc
je
clc
imul
mov
sti
mov
std
sbb
ja
xchg
cmp
sahf
out
jecxz
inc
pop
inc
pop
sub
test
scas
xchg
int
mov
dec
inc
jle
negb
pcmpgtd
sbb
fs
fwait
dec
xchg
stos
mov
add
push
test
inc
movsl
std
pop
lods
aam
pop
mov
dec
cli
add
repz
lret
add
xchg
ds
cmp
mov
in
movsl
in
lret
cmc
stos
in
aad
lds
push
pop
adc
sub
push
or
mov
movsl
ficoml
stos
in
aad
lds
push
pop
adc
sub
push
or
mov
and
mov
aad
lds
push
pop
adc
sub
push
or
mov
movsl
ficoml
stos
in
aad
lds
adc
mov
mov
mov
out
nop
gs
adc
iret
or
sbb
insb
xchg
jns
dec
mov
movsb
mov
je
fs
xor
or
cmp
daa
cld
sbb
imul
cmp
stc
and
dec
in
and
sub
push
out
xchg
js
dec
and
shr
cltd
add
bound
mov
in
pop
cmp
push
mov
lss
or
push
xchg
add
loop
pop
fldt
or
mov
sub
jmp
mov
mov
mov
aad
aam
cmc
out
xchg
addr16
js
pusha
push
arpl
push
roll
fs
hlt
fldt
sbb
out
in
jnp
pop
dec
cmpsb
fsubrs
inc
mov
push
daa
jp
cmc
xchg
fsubr
imull
notb
adc
jns
sbb
sub
sub
mov
mov
pop
add
dec
inc
and
or
sbb
or
dec
into
lcall
fs
xor
mov
aam
insb
shl
pop
fmuls
test
push
lods
cmp
sub
sbb
or
inc
mov
mov
push
js
add
pop
jmp
rcrb
test
pop
push
or
pop
stos
pop
adc
jne
sbb
sbb
cmp
sbb
mov
pop
stc
add
xor
and
aam
les
hlt
sbb
imul
inc
mov
jmp
xor
and
aam
les
hlt
sbb
imul
adc
or
mov
js
dec
in
fistl
jge
pop
scas
out
je
lret
dec
sub
push
lcall
pushl
jno
xchg
lret
loop
mov
outsb
dec
sub
std
jmp
fadd
dec
cmpsl
ret
cmp
ficoms
ret
lcall
inc
xor
add
mov
dec
es
pop
sub
popa
pop
pop
rorl
stos
insl
adc
js
mov
mov
mov
shll
and
ljmp
add
stos
aam
jns
push
mov
push
idivb
mov
push
and
ja
dec
push
cs
push
mov
sub
insl
into
and
jbe
daa
and
mov
addr16
add
sbb
dec
inc
and
cmpsb
sbb
cli
sub
aaa
adc
hlt
dec
xchg
inc
jbe
andb
fcoms
fwait
mov
ret
aam
xchg
ret
add
cs
lock
daa
xchg
xchg
inc
gs
movl
popf
scas
and
jg
jne
lcall
or
fdivrp
sub
hlt
cmp
adc
pop
and
or
xlat
divl
movswl
out
sbb
icebp
mov
loopne
stc
sbb
sahf
push
xchg
pusha
or
xchg
aam
das
mov
inc
cmpsl
pop
sbb
pop
inc
jle
in
aas
inc
xor
cmp
dec
fwait
aaa
fstpt
add
push
pop
sub
jg
fisubl
std
sarl
jl
fnstenv
lcall
mov
xor
sub
pop
push
mov
mov
shll
imul
mov
ja
jns
push
sbb
sub
sub
mov
or
xchg
jp
pop
aam
pop
cltd
loop
mov
loop
mov
sub
mov
jecxz
imul
nop
and
mov
rorb
data16
pusha
jge
aam
mov
outsb
sub
push
cmpsl
sbb
push
fwait
sbb
dec
lock
hlt
or
imulb
ds
pop
icebp
mov
fldl
iret
mov
sub
stos
adc
jns
mov
scas
sti
stos
push
call
test
adc
sub
sbb
sbb
cmp
daa
fcmovnu
push
inc
mov
enter
add
rcrb
cwtl
ljmp
cmc
sub
dec
lcall
push
arpl
xor
repnz
mov
xchg
adc
outsb
mov
or
adc
push
jnp
pop
movsl
int3
xor
mov
push
sub
fisubrl
data16
inc
stc
dec
aad
outsb
xchg
jns
add
mov
pop
dec
sub
pop
xlat
test
pop
mov
add
or
ficompl
jecxz
in
jp
pop
jecxz
loopne
pop
inc
inc
mov
loopne
xchg
push
xor
std
in
and
mov
jge
aad
mov
jae
pop
shlb
pop
outsb
insb
inc
test
mov
out
adc
sbb
pop
xchg
jae
sub
push
scas
imul
sbb
and
xchg
outsb
and
shrl
sbb
push
mulb
adc
jmp
imul
push
negb
sub
pop
test
dec
dec
add
xchg
arpl
out
mov
lds
push
shll
pop
jge
cmpsl
in
dec
jo
fldenv
call
fisubs
dec
sbb
out
fisubs
mov
add
mov
adc
jno
int
andl
push
int
or
adc
add
or
into
mov
in
mov
inc
lods
out
shrb
xchg
sub
adcl
lock
xchg
out
std
jb
jbe
outsb
dec
scas
loop
and
stos
xor
scas
cmp
or
cld
inc
nop
int3
bound
or
lods
mov
mov
loop
jne
idivb
adc
test
jne
lods
cmp
int3
push
mov
xchg
mov
repz
xor
in
lods
add
hlt
push
in
js
xchg
pop
mov
ret
adc
sbb
mov
popf
nop
out
les
int3
daa
stos
gs
jp
push
cmpsl
clc
cmp
sub
bound
test
out
jns
inc
push
sub
push
imul
ficompl
mov
adc
lock
icebp
or
mov
push
mov
push
add
adc
in
dec
mov
jb
iret
mov
jb
aas
stos
popf
and
outsl
ret
hlt
lcall
push
or
inc
pop
popf
cmpsl
leave
inc
or
pop
push
hlt
into
push
clc
mov
ss
enter
xor
push
sbb
cmp
push
dec
mov
pop
xchg
icebp
cmp
outsl
in
mov
mov
cmp
or
pop
sbb
fdivp
mov
mov
rol
andb
ja
imul
jecxz
xor
xchg
pop
int3
sarb
or
cli
popa
sbbl
jmp
fwait
lcall
jb
cmp
xchg
mov
jl
loope
shlb
cmp
jns
mov
inc
stc
mov
adc
es
leave
cs
jmp
sub
mov
mov
dec
cwtl
sbb
sub
or
adc
inc
mov
ss
inc
adc
hlt
mov
sub
call
push
fwait
mov
arpl
pop
les
movsl
cwtl
mov
push
in
jo
lret
dec
scas
cmc
xor
mov
sub
jle
jmp
lcall
ja
xor
jae
cmp
sbb
xor
fldcw
sti
cmp
ljmp
arpl
cltd
lcall
stc
inc
fdivr
loopne
data16
mov
xorl
cli
imul
push
das
cmpsb
cwtl
mov
mov
testl
cmp
jp
mov
push
cmp
jmp
ss
mov
sbb
or
dec
hlt
nop
cmp
pop
cmp
fcoms
popf
or
mov
mov
mov
mov
mov
jbe
sub
mov
lods
ffree
mov
dec
mov
lds
or
js
mov
fbld
sub
jno
xor
mov
push
test
sbb
mov
pop
dec
in
pop
mov
int3
out
pavgw
mov
test
xor
inc
xor
pusha
fmulp
scas
icebp
inc
out
in
inc
and
mov
sub
push
rorb
ds
push
aam
pop
jl
sbb
rorb
jns
bound
insb
lods
fsubp
js
cmpsb
jo
xchg
add
inc
sub
lods
jbe
hlt
jl
lods
pop
xor
xchg
jg
mov
mov
jbe
cmpsb
addr16
add
ret
movsb
cmpsl
sti
xchg
pop
bound
pop
fidivrs
pop
and
sti
inc
in
mov
and
ljmp
add
cld
cmp
repz
lods
xlat
mov
mov
pop
cli
int3
push
push
dec
xchg
sbb
and
xor
js
pop
fwait
push
mov
stos
or
jbe
btr
ficompl
mov
inc
push
push
mov
jge
aam
sub
clc
inc
mov
xor
popf
push
and
mov
hlt
dec
jl
lods
dec
cmp
xchg
shrb
push
sbb
iret
repz
dec
rcll
cwtl
stos
push
into
mov
fcmovnbe
movsl
jbe
inc
imul
jnp
or
je
dec
js
or
jle
bound
iret
add
fcmovne
mov
dec
sbb
mov
inc
sbb
fstps
cld
xor
pusha
stos
pop
xor
stos
aas
movups
mov
scas
sbb
stc
and
mov
dec
cmp
cli
cltd
xchg
mov
xchg
das
mov
test
enter
test
jno
lret
mov
and
sbb
jmp
dec
mov
xor
pop
lods
out
icebp
lea
mov
adc
and
sub
xchg
mov
aam
dec
mov
andb
lea
xor
push
pop
jo
in
mov
or
jmp
xor
pop
mov
xchg
mov
dec
outsb
pop
inc
mov
sub
test
dec
mov
mov
lcall
in
mov
mov
ja
out
push
arpl
mov
mov
inc
push
loope
mov
mov
sti
mov
ja
push
outsl
jl
add
xor
cltd
out
es
repz
xorl
lock
aam
jns
lret
pop
mov
jno
fstpt
xchg
mov
inc
sbb
leave
jle
dec
popf
jo
jbe
jb
xor
mov
xlat
daa
cltd
ja
movsl
popf
mov
int
pop
mov
cmp
mov
out
sahf
cmp
daa
jmp
rclb
out
sub
cmp
stos
outsb
or
ret
outsl
pop
cmp
sbb
stc
jecxz
cmpsl
out
cmp
mov
mov
inc
sbb
lret
decb
out
out
aaa
out
pop
out
cmp
icebp
cltd
mov
xchg
inc
sub
cmc
push
jae
mov
xchg
inc
xchg
dec
out
sub
lret
jl
and
jb
hlt
xchg
xor
push
das
mov
addr16
mov
jns
jl
arpl
mov
imul
orb
scas
mov
jnp
mov
fwait
inc
adc
pop
jl,pt
aam
pop
scas
jle
adc
and
outsb
rorl
sub
in
jl
inc
add
movsb
mov
dec
loop
mov
xor
je
or
sub
dec
mov
xchg
jno
xchg
out
cmp
cltd
xor
das
iret
xchg
mov
push
push
pop
mov
jno
inc
jl
sub
dec
cmp
inc
or
cwtl
int
arpl
pop
sbb
mov
jne
adc
jecxz
incb
mov
dec
shlb
les
sahf
cmp
daa
and
scas
imull
sahf
mov
imul
loopne
pop
mov
daa
imul
cmpsb
daa
add
aad
fwait
pop
cmc
rorl
jo
push
cmp
rcll
arpl
xor
add
add
add
inc
cmc
movsl
xchg
and
sub
rcll
scas
mov
orb
pop
xor
addr16
mov
dec
dec
repz
xchg
test
mov
xchg
push
pop
jge
testb
jle
mov
xchg
inc
dec
push
in
or
fstp
add
arpl
xchg
mov
aad
mov
mov
pop
mov
and
xchg
data16
bnd
cmc
sub
out
cmp
adc
mov
rcll
jns
lahf
mov
std
push
lea
add
les
fnsave
popa
and
stos
add
push
out
lahf
ret
cmpxchg
ja
cmp
bound
fimuls
sub
int3
aam
mov
stc
xchg
push
inc
pop
jno
inc
adc
mov
push
mov
cwtl
cs
inc
fsub
pushl
in
mov
repz
frstor
add
xchg
inc
dec
pop
add
add
pop
xor
adc
rcrl
fbstp
popf
xor
adc
shlb
inc
aaa
sub
shl
add
dec
daa
cld
dec
movsl
inc
mov
leave
inc
or
arpl
sbbb
test
xor
pop
daa
push
pop
xor
add
loope
sarl
in
mov
paddq
push
fcoms
repnz
sbb
scas
cmc
dec
outsb
jl
xor
push
lret
int3
xor
fcmovbe
xchg
mov
mov
inc
frstor
cmp
orb
mov
loope
into
xchg
mov
je
add
push
add
or
icebp
lea
mov
addr16
push
xor
ret
add
xor
outsb
sahf
cltd
mov
cmp
push
jg
push
pop
stos
sub
rcrl
xor
lcall
add
add
enter
xchg
pop
xchg
fs
mov
fists
mov
les
aad
jge
ljmp
add
mov
pusha
mov
divb
adc
mov
sub
lock
setp
or
mov
sub
mov
inc
pusha
outsb
or
xor
xor
popa
dec
fildl
into
or
jb
pop
jbe
aaa
lret
out
push
insb
sub
sti
and
inc
pop
mov
push
mov
jne
addr16
shll
push
xchg
xchg
xchg
out
lea
push
add
mov
jg
xchg
sbb
jge
movsb
push
jno,pt
pop
lahf
cmpsl
push
mov
push
xchg
dec
out
push
repnz
movb
int
sti
repz
aam
mov
mov
nop
out
pop
fadds
stos
fbld
stos
sub
jo
adc
push
mov
jne
jmp
std
sub
or
mov
lods
mov
cmp
inc
mov
and
xchg
aas
pop
and
sar
lret
clc
popf
adc
mov
cmp
in
or
mov
sub
mov
sbb
push
push
insl
mov
xchg
mov
in
leave
daa
sbb
mov
inc
jecxz
inc
shlb
aad
loop
jge
push
dec
fsubrs
adc
mov
jae
cmp
jo
cli
add
inc
inc
inc
sbbl
icebp
andb
ja
xchg
dec
push
jl
or
jb
inc
out
sub
push
sti
add
loope
loop
or
mov
xchg
in
sahf
gs
xchg
popf
dec
jbe
lret
and
dec
es
fimuls
lret
xor
xor
lahf
mov
sarl
stos
add
out
ss
mov
pop
sub
jge
xchg
dec
mov
outsb
outsl
sahf
and
out
xchg
push
iret
mov
test
fdivrs
cmp
int3
popa
orb
add
sti
stos
call
push
mov
cwtl
jno
and
hlt
cmp
pop
xor
lock
stos
into
aam
adc
repnz
jb
fdivrs
mov
sbb
push
aad
mov
add
int3
aaa
mov
fildl
insb
cmp
cwtl
push
xchg
fisttpll
xchg
mov
add
fsubr
jle
test
cmp
xor
mov
adc
cmpb
inc
jno
sbb
add
lods
jg
push
xchg
sbb
sti
push
push
sbb
subb
adc
inc
incl
push
xchg
cli
aam
movsb
xchg
mov
mov
mov
cltd
push
das
int
daa
cmc
xor
inc
mov
aam
push
mov
mov
outsl
xchg
xchg
mov
dec
test
push
jle
push
out
jl
push
addr16
addr16
dec
mov
in
xor
mov
icebp
mov
mov
jecxz
hlt
add
imul
orl
ret
inc
xchg
sahf
push
adc
clc
data16
or
cld
push
fdiv
cmp
movsb
outsb
aaa
xchg
mov
jae
xor
adc
cli
out
add
xchg
sahf
pop
dec
repnz
sub
dec
adc
repnz
icebp
pop
call
in
jg
cmp
and
push
mul
xlat
hlt
jnp
clc
adc
das
push
andb
mov
pushf
mov
mov
mov
enter
push
loop
and
sub
mov
xchg
out
push
outsl
dec
push
xchg
gs
lods
shl
fdiv
mov
decl
into
and
push
cmp
jbe
adc
push
push
mov
enter
das
cmpl
inc
int3
jmp
pop
cltd
repnz
mov
push
sbb
in
imul
add
cli
and
out
inc
adc
ret
cmp
jno
in
aam
inc
scas
or
loopne
pop
shrl
and
jp
push
daa
push
into
xchg
add
sbb
xchg
cld
xlat
or
mov
sbb
ret
test
repnz
push
add
popa
sbb
push
mov
adc
aad
cs
lds
mov
into
sub
lret
push
mov
daa
add
mov
xchg
mov
sbb
mov
orl
test
lret
icebp
out
insl
sub
movsb
pushf
cwtl
sub
sti
lret
dec
je
es
xchg
pop
movb
outsb
jmp
mov
je
arpl
adc
jmp
pop
daa
lods
fldl
rcr
push
add
outsl
add
arpl
mov
lret
push
fnsave
mov
inc
cmp
popf
xor
mov
cmp
and
or
pop
addb
movsl
in
roll
sbb
cld
fmulp
jne,pt
rcl
lds
rcrl
mov
adc
shll
mull
mov
subl
push
jae
arpl
mov
jb
in
or
fstpl
pop
sbb
push
mov
fst
iret
js
dec
sbb
ja
xlat
mov
loopne
addr16
mov
filds
mov
fisubs
push
cli
dec
or
cmp
cmpsl
daa
push
lea
pop
inc
jns
popf
fimull
sbb
push
sub
cmpsb
es
xchg
dec
aad
movsb
xchg
jbe
les
add
push
fisubrl
xchg
sub
into
sbb
mov
add
ss
push
imul
push
or
adc
pop
sbb
lahf
lods
cmpsb
mov
insb
inc
dec
scas
clc
pop
popf
xchg
add
inc
ja
dec
out
xor
and
ret
xor
xor
xchg
xchg
jne
and
dec
cld
stos
lods
mov
push
inc
popa
jmp
bound
mov
mov
mov
jmp
aaa
mov
mov
sbb
adc
daa
cmp
in
adc
outsb
xor
test
push
out
out
clc
mov
xchg
cmp
xchg
xchg
cmp
mov
lds
dec
add
fistpl
faddl
movsb
pop
and
data16
cmp
fwait
je
aaa
stos
out
sbbl
shrl
push
push
daa
ss
lods
gs
xchg
mov
add
xchg
jo
ds
pop
fimuls
call
addr16
push
shll
push
mov
mov
mov
outsl
hlt
pop
xchg
dec
jns
xor
mov
outsb
test
imul
xchg
test
sbb
lods
enter
and
lods
cltd
repz
pushf
cs
mov
xor
add
loop
pop
mov
xchg
push
sbb
into
inc
cwtl
mov
in
lahf
jne
sbb
xchg
inc
push
xchg
mov
sub
push
scas
orb
mov
std
jle
and
ja
lods
lret
mov
mov
mov
aas
sub
push
das
sahf
test
mov
shl
int3
jl,pt
mov
dec
mov
add
cmp
mov
pusha
lods
push
stos
mov
jl
xor
cmp
xlat
decl
lods
dec
sahf
add
iret
adc
jno
sbb
repnz
push
daa
dec
in
and
mov
cmpsb
jbe
jo
inc
adc
sahf
push
insl
add
and
mov
add
ljmp
cmp
push
sub
push
rol
je
ds
dec
cmp
dec
call
mov
push
adcb
pop
lods
in
outsl
clc
fnsave
test
mov
sahf
in
in
jnp
jbe
decb
in
pop
cmp
das
or
ljmp
ret
jle
jp
mov
ja
dec
movsb
adcb
in
inc
mov
int
in
sbb
rolb
scas
push
mov
adcb
xlat
aad
dec
jno
pop
xor
dec
sarb
jle
xchg
dec
ret
imul
mov
jnp
push
cmc
sbb
mov
fisubrl
jle
les
fldenv
loop
mov
xor
loopne
mov
les
lret
loope
or
mov
add
jno
jecxz
into
cli
aad
xlat
outsl
sub
add
call
ljmp
loopne
and
jae
xor
pop
shll
sub
lret
ret
outsl
mov
int
or
sbb
jp
mov
stc
imul
mov
inc
jecxz
dec
and
sub
nop
cmpsl
sub
push
mov
pusha
adc
dec
pop
sub
lock
xchg
pop
repnz
in
mov
out
out
inc
mov
mov
call
mov
cmc
pop
sbb
mov
sbb
xchg
xor
stc
fs
add
pop
hlt
dec
jbe
or
cmp
fwait
and
movmskps
aam
xor
add
mov
dec
push
adcb
or
outsl
scas
and
sub
ficompl
cmp
cmpb
int3
repnz
std
mov
dec
jecxz
jns
pop
hlt
mov
xor
mov
mov
and
in
mov
xor
mov
inc
clc
dec
cmp
testb
test
stc
add
xor
and
aam
les
hlt
sbb
imul
inc
mov
jmp
xor
and
aam
les
hlt
sbb
imul
dec
cltd
insb
cltd
pusha
call
xor
and
aad
rolb
sbb
test
imul
nop
mov
jmp
mov
in
sub
outsb
mov
in
icebp
cld
mov
cmpsb
fcoml
in
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
test
lret
pop
cmp
mov
add
pop
push
or
add
add
pop
add
xchg
add
addl
add
mov
add
add
adc
push
add
addl
add
add
add
add
add
add
add
add
les
add
jo
aad
aaa
add
add
push
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
pop
add
adc
testl
flds
cmpsl
add
fldl
push
add
pop
add
inc
add
add
add
push
add
pushf
add
or
sub
add
xor
adc
add
sbb
xor
testl
push
add
add
add
add
add
add
add
push
add
or
sbb
add
add
add
add
add
add
pop
add
sbb
jecxz
pop
add
add
add
add
outsb
add
add
add
add
add
push
add
add
inc
add
add
and
pop
add
add
mov
add
add
push
add
pop
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
in
add
add
add
icebp
add
add
add
jns
push
add
js
les
add
add
add
add
add
add
add
add
push
add
add
adc
into
add
add
add
add
add
add
push
add
outsl
add
mov
add
in
add
add
add
add
add
xor
aam
je
inc
add
les
sbb
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
and
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
mov
es
add
add
add
add
add
add
add
add
add
add
add
roll
add
movsb
add
add
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
ja
js
mov
and
push
add
mov
and
add
inc
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
sbb
int
testb
add
popa
add
add
add
add
add
pop
add
add
add
push
add
popa
add
lret
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
mov
push
add
add
pop
add
add
xor
popa
add
add
push
add
push
add
add
add
add
add
or
add
sub
cmp
add
add
add
add
add
add
add
add
add
test
jb
push
add
cmp
inc
add
add
xchg
add
add
add
sbb
mov
pop
add
xchg
ret
stos
jno
pop
popa
icebp
gs
iret
mov
pop
xor
cmc
xor
mov
ljmp
std
push
imul
add
cltd
cmp
outsl
xchg
xor
fidivs
rolb
mov
testb
dec
in
fsubl
shrl
fimull
shr
mov
mov
lcall
xchg
dec
lret
lret
cmp
mov
sub
shlb
neg
push
xrelease
es
sarb
and
sbb
ficoml
pop
fsts
mov
arpl
mov
lret
imul
jle
xlat
rol
les
out
cmp
int3
xor
out
rorl
sbb
mov
cli
decl
mov
xor
adc
pop
jbe
cmp
jne,pn
cmc
sub
fnstenv
in
sbbb
stos
daa
incl
mov
push
adc
ret
cli
sub
shll
push
addb
push
pop
mov
imul
hlt
fwait
cltd
hlt
repnz
bt
mov
fiaddl
les
fstpt
add
les
iret
das
in
mov
das
pushl
add
push
fadd
jae
mov
arpl
rol
sub
pop
int
mov
mov
push
scas
pop
pop
test
shrb
movsl
adc
inc
cmp
inc
jecxz
push
repnz
pop
fstps
into
mov
jle
or
gs
aaa
insb
dec
aad
cmpsb
pop
pop
imul
adc
jno
and
int3
mov
pop
mov
cmp
jbe
adcb
insl
ret
jmp
sub
cmp
fimuls
testb
fists
mov
xchg
imul
iret
jp
push
pop
cmpsl
adc
ficompl
mov
loop
in
add
push
cmpsb
loopne
dec
mov
insl
outsl
fiaddl
dec
push
xchg
sbb
out
fwait
inc
shrl
push
stos
cmp
aad
or
loope
mov
lods
cltd
dec
fcomip
cmp
and
inc
outsb
jl
push
xchg
fbld
or
xchg
scas
lcall
sub
ds
out
push
push
jne
fcmovne
lcall
arpl
pop
mov
sahf
scas
xlat
xor
push
popl
xor
inc
xor
and
xor
dec
mov
xor
mov
push
xchg
lods
mov
cli
notl
or
jp
lock
xchg
pushf
bound
push
daa
clc
sahf
or
fsubl
pop
or
insl
dec
adc
ss
cmp
pop
and
xorb
sub
jb
rclb
or
test
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
