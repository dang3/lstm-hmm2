jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sub
and
rorb
add
pop
push
add
add
or
add
add
add
add
sahf
add
xchg
add
add
xor
out
dec
add
add
add
add
add
add
jno
sbb
js
cmc
add
add
add
add
mov
testb
insb
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
cmc
add
dec
add
cmpsl
add
add
add
add
loope
incb
cmpsl
add
add
add
add
add
add
add
cmpsl
add
add
add
add
sahf
add
add
add
add
cmc
add
add
jecxz
cmpsl
add
add
add
cmp
lods
add
add
add
add
add
daa
add
cmc
add
pop
add
add
add
in
xchg
cmc
add
mov
add
add
add
add
add
mov
add
cmc
add
add
add
add
add
add
add
add
add
out
movsl
add
add
add
add
add
arpl
inc
add
add
add
add
add
add
jecxz
mov
add
addl
leave
add
add
add
add
add
add
mov
add
add
add
sahf
add
add
add
adc
add
add
add
add
add
add
js
insb
add
add
add
add
adc
add
add
push
das
add
popa
add
add
add
add
add
add
add
add
fiaddl
pop
add
add
insb
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
mov
loope
leave
add
add
add
arpl
insb
add
cmc
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
out
dec
add
add
add
add
add
leave
add
sbb
fiaddl
cmc
add
add
cmp
mov
scas
add
add
add
add
cmpsl
add
add
push
add
add
sahf
add
cmpsl
add
mov
je
add
jecxz
mov
mov
cmpsl
add
pop
add
or
sub
dec
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
mov
imul
sbb
inc
add
add
test
mov
inc
add
add
add
out
popa
add
add
add
sbb
add
cmc
add
cmc
add
add
add
add
add
add
add
add
add
add
jb
lods
add
add
add
add
add
add
add
add
add
add
sbb
fiaddl
cmc
add
leave
add
add
add
add
add
add
add
cmc
add
dec
add
add
add
add
pop
add
add
add
sbb
add
faddl
inc
add
add
dec
add
add
add
out
js
push
add
fiaddl
add
lods
add
add
add
icebp
in
xchg
movsb
scas
in
jge
add
test
dec
pop
in
fcomps
js
ret
dec
loopne
xlat
xchg
dec
xor
dec
sbb
or
jmp
gs
fstpt
orl
lock
cld
sub
out
int
fs
push
mov
xchg
dec
jns
xlat
cs
dec
repz
adc
xor
pop
cmp
pop
jbe
dec
jg
add
mov
push
test
aas
cwtl
jno
pop
sti
shrb
dec
and
mov
fsubl
rcl
mov
aam
sub
push
daa
push
mov
out
enter
dec
jl
pushf
inc
cmp
jmp
xchg
sti
cli
js
int3
xor
jbe
push
imul
pop
insl
lret
jb
xor
mov
scas
fisubs
loop
pop
xor
inc
inc
mov
int3
and
pusha
cli
inc
dec
std
xchg
js
xor
dec
cmpsl
sub
gs
cwtl
pop
jle
inc
xor
data16
repnz
pop
sbb
dec
fdivl
notb
push
xchg
test
jno
decl
je
bound
sbb
or
sbb
sub
xor
adc
add
or
mov
out
xchg
dec
pop
in
add
mov
cmp
test
fwait
insb
mov
xchg
hlt
leave
pop
in
insl
push
mov
lods
out
xchg
dec
mov
adc
std
xor
xor
mov
mov
and
movsb
pushf
test
adc
insl
pop
inc
or
test
std
in
lock
std
push
imulb
pop
sbb
push
mov
jmp
testl
mov
out
dec
push
cmp
int3
sahf
xorl
mov
movsb
mov
cld
jnp
nop
xor
dec
jns
xchg
cmp
scas
stc
shll
out
sub
jecxz
add
sbb
movsb
xchg
pop
cwtl
jnp
pop
cmp
into
movsb
mov
sbb
out
out
scas
int3
leave
pop
adcl
cs
jns
jb
lahf
nop
pop
xchg
lods
mov
push
cmpsb
sbb
inc
mov
repz
iret
sub
in
stos
das
mov
les
xor
call
test
iret
inc
dec
cld
push
insb
push
mov
inc
das
loop
je
xchg
popa
into
cwtl
ss
lahf
push
push
jno
divb
jp
adc
les
fucomp
es
sbb
enter
fcmovne
popa
mov
xchg
adcb
adc
xchg
lods
shr
bound
cmp
jle
mov
and
add
test
jne
cmp
adc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
outsl
mov
dec
stos
pop
mov
push
jp
out
inc
lcall
iret
sub
cmp
push
jp
mov
dec
stos
pop
mov
pminsw
sub
lcall
mov
es
jp
mov
dec
stos
pop
mov
pminsw
cli
out
or
cmp
fmull
es
jg
cmp
sub
filds
and
inc
and
scas
dec
add
fbld
mov
lret
add
jmp
in
aas
pop
pop
push
dec
stos
xchg
mov
sub
rcl
jno
cs
jb
icebp
scas
out
pop
xchg
xchg
xor
push
pop
ss
ljmp
mov
das
imul
add
cmc
out
in
scas
stc
ficoml
xlat
movsb
pusha
popf
jnp
decb
lret
addr16
xchg
inc
xor
push
sbbb
push
add
aad
and
mov
test
mov
adc
loop
mov
aaa
rcrb
or
mov
dec
stos
pop
mov
pminsw
cli
out
or
sbb
sub
cmp
push
adc
mov
fldt
stos
cmp
push
pop
scas
scas
jae
sbb
aas
lret
adc
xor
out
or
mov
jae
std
arpl
and
pop
std
cmp
adc
fcomps
das
in
fimull
ljmp
iret
sub
cmp
push
jp
mov
dec
stos
pop
mov
pminsw
cli
out
or
sbb
sub
cmp
push
jp
mov
repnz
inc
jnp
cmc
mov
or
or
adc
push
stc
mov
enter
sti
dec
push
xchg
mov
dec
pop
dec
sbb
jae
out
inc
sbb
mov
push
cmp
test
add
jo
test
dec
dec
dec
jae
sub
test
lret
ss
mov
jge
lods
push
int3
shll
outsb
leave
mov
imull
pusha
pop
sub
movsb
sub
xor
or
jb
lock
mov
mov
idivb
pop
sub
pop
cmp
mov
mov
mov
inc
jg
outsl
call
idivl
and
jp
sub
jb
cs
lcall
call
orb
cmp
ret
mov
loopne
xlat
dec
pop
test
gs
or
dec
lahf
inc
sbb
fs
and
ret
sub
fstpt
sbb
push
add
push
stc
popf
add
ret
aaa
sub
mov
sub
xchg
push
jecxz
jo
sti
inc
push
cltd
rcrb
push
in
icebp
ss
sub
stos
sub
or
mov
mov
jno
fstpt
jo
cmp
vpshaq
push
loope
daa
loopne
dec
pop
int
mov
jno
imul
mov
popa
sub
shlb
push
cmpsb
sbb
dec
push
inc
sub
pop
sti
push
sbb
fdivrl
jns
and
push
and
sbb
push
out
adc
adcl
adc
bound
lahf
dec
mov
je
xchg
sub
insb
mov
add
fwait
pop
testl
fisubs
adc
jl
fcmovnu
in
loop
sub
outsl
xor
mov
nop
mov
shr
mov
push
repnz
and
sub
in
mov
enter
sbb
inc
mov
jo
push
aad
aas
and
cmpsb
add
aam
addr16
add
sbb
push
jbe
lret
fisttpll
pop
or
enter
or
xor
inc
lods
rcrl
jno
fcoml
mov
bound
negl
cvtpi2ps
testl
mov
sbb
jmp
cmpsl
push
jns
mov
mov
out
jge
adc
pop
psraw
psubusw
rorl
out
mov
push
sbb
enter
inc
xor
push
nop
inc
mov
movsb
pop
xlat
and
mov
pushf
retw
cmp
or
cmp
mov
xchg
loop
fldenv
idivl
add
add
or
dec
stos
in
sahf
or
sbb
mov
inc
outsl
aad
fcmovnbe
jmp
aaa
lahf
jle
cvtdq2ps
imul
cld
mov
test
outsl
mov
jbe
popf
dec
push
cltd
add
xor
insl
dec
cmp
icebp
jnp
pop
and
fadds
pop
jb
mov
dec
lret
fdivrs
jbe
mov
xchg
movsl
jmp
jp
dec
fnstcw
push
cld
push
xor
inc
push
es
mov
pop
add
push
fsubr
pop
sbb
mov
or
lar
cwtl
dec
sub
pop
pop
les
stc
div
fldenv
in
sarl
sub
sti
inc
or
fs
loope
leave
je
fnstsw
jbe
or
mov
sub
inc
mov
mov
xchg
imul
cmpsb
lcall
mov
cmpsb
xor
in
lret
mov
popa
dec
frstor
or
fidivs
adcl
aaa
cmp
arpl
stos
fidivrl
push
xchg
fldl
ds
ljmp
sbb
and
xchg
mov
jae
stos
dec
test
push
xor
push
loop
lea
cli
push
cmp
das
repnz
push
mulb
rol
jmp
outsl
lret
xchg
add
loope
mov
jae
popa
test
lock
push
pop
add
scas
aaa
cli
dec
sub
jne
jbe
fcoms
ljmp
adc
out
sahf
sbb
popl
jle
test
sbb
ficompl
shlb
mulb
test
test
cs
inc
jp
mov
js
sarl
lods
add
mov
lods
mov
xchg
cmpsb
xor
xchg
jnp
lahf
enter
pop
scas
setbe
fwait
mov
rcl
in
inc
shr
lock
testl
negl
sahf
mov
fdivrs
fldcw
sub
or
push
fnstenv
cmp
imul
in
shrl
jp
push
into
sub
das
sbb
xchg
xor
sahf
aas
ja
lods
repnz
fcmovu
mov
faddp
adc
sbb
cli
mov
out
mov
daa
sub
or
or
inc
subl
add
mov
mov
movsl
and
inc
pop
cmc
and
or
xor
popf
adc
dec
fsubs
cltd
or
xchg
fbld
xor
hlt
ja
fidivl
sub
xchg
xor
xor
cmp
push
or
icebp
cmpsl
pop
xchg
mov
adc
cmpsl
pop
xchg
or
stos
popa
or
jle
sub
je
and
subb
xor
int
push
or
popa
mov
inc
sub
lahf
push
mov
addr16
or
int3
mov
bound
rcl
out
jg
fdivrl
inc
cmp
cs
hlt
jge
sub
shr
xchg
mov
and
jns
pop
push
das
dec
xlat
or
mov
and
adc
push
ss
out
xchg
ret
and
call
aad
ljmp
stos
lahf
pop
add
mov
mov
cs
adc
add
mov
xchg
or
lods
aam
dec
xchg
jb
adc
push
rorl
xchg
jnp
fcomp
jno
mov
xor
in
add
daa
or
sbb
lock
sbbl
and
or
movl
jbe
ficompl
fsubp
dec
xor
fisubrl
ret
insb
sar
or
imul
mov
adc
cmpsl
sbb
imul
mov
out
inc
ret
jne
es
xlat
mov
sbb
mov
jns
jns
ja
mov
sbb
aas
inc
jb
inc
push
sub
sub
cmp
xor
add
aad
popa
push
jae
popf
pop
pop
jns
pop
xchg
xlat
pusha
sub
dec
pop
mov
cmc
in
in
fdivp
inc
jnp
push
fldcw
div
xchg
or
jge
mov
enter
add
or
mov
inc
nop
dec
sbb
and
movsl
xor
mov
push
addr16
repz
sbb
dec
mov
and
lcall
inc
lret
sbb
dec
sbb
aaa
cmp
mov
xor
inc
xchg
jo
jmp
bound
pop
push
pop
in
out
mov
imul
jns
mov
xorl
test
in
xchg
in
sbb
add
pop
mov
fistps
mov
jae
jae
mov
scas
xchg
dec
push
lret
mov
dec
pop
std
in
out
inc
sub
aad
push
call
push
sbb
test
sub
adc
shlb
test
stos
cmc
lret
sbb
mov
pop
shr
sahf
ljmp
jb
jo
es
or
and
mov
cli
cmp
sub
inc
divb
ljmp
push
push
sub
mov
rorb
sub
fstl
add
jo
sahf
pop
lds
xor
pushf
shll
mov
cmp
mov
out
jecxz
add
mov
pop
out
mov
mov
add
sub
sbb
sbb
xlat
mov
lret
jno
xor
fbstp
pop
adc
dec
inc
sub
mov
mov
xor
lcall
jb
int3
lock
inc
pop
ret
je
push
cld
rol
xor
cmpsl
dec
jns
push
inc
jg
cltd
shll
jg
sbb
jne
mov
fstpl
aam
ror
lret
icebp
hlt
sbb
inc
sbb
jp
loope
jae
dec
mov
enter
mov
mov
jge
cs
scas
movb
insl
xor
mov
jp
push
in
aaa
pushf
lret
or
into
inc
pop
dec
cmc
dec
jmp
dec
adcb
mov
in
and
sbb
ret
int3
add
sbb
scas
idivl
int3
lahf
lret
out
adc
sub
inc
mov
dec
movsb
xchg
pushf
jbe
jbe
cmp
push
push
pushf
add
push
inc
jecxz
push
in
imull
loope
and
sub
lods
xchg
cmp
insb
in
jge
inc
xchg
lock
xchg
lods
mov
pop
jecxz
test
xor
fwait
cmp
pop
bound
imul
pop
loope
lea
test
pop
xchg
mov
mov
push
push
xor
out
xor
sbb
dec
xchg
add
jl
add
or
sub
popa
add
dec
pusha
mov
cld
cmp
mov
mov
lods
stc
test
push
inc
mov
xorb
inc
fcompl
outsl
mov
push
add
xchg
clc
mov
shr
out
and
cli
push
dec
gs
sub
notb
scas
into
jbe
dec
cmp
fmuls
fidivrl
xchg
pop
mov
scas
aad
xchg
mov
data16
mov
add
sub
pop
push
mov
cs
fnstsw
into
sbb
ds
pop
add
xor
fcoms
mov
lods
cmp
mov
dec
adc
nop
rcll
xchg
mov
enter
xor
fs
cltd
repnz
out
mov
cltd
je
sub
in
mov
add
out
js
add
rcrl
xchg
sbb
loopne
test
add
ljmp
sub
stc
push
jb
loop
pop
enter
je
data16
inc
hlt
addr16
std
cmp
push
test
xchg
xchg
cmp
and
dec
test
mov
xchg
test
vpcmpgtd
sbb
adc
movsb
lock
push
cltd
pop
adc
jp
add
jmp
jge
loop
mov
dec
sub
mov
inc
ret
push
mov
fbld
push
pop
int
leave
xor
pushw
shl
mov
xlat
xor
or
or
mov
stos
or
bound
xchg
cltd
jae
mov
in
sbb
mov
mov
imul
jns
add
pop
mov
pop
scas
int3
xchg
mov
and
xchg
sub
dec
repnz
cmp
adc
scas
sbb
push
sahf
inc
std
cmp
stos
or
mov
push
push
outsb
push
ffree
sbb
push
and
lret
addr16
jg
ja
in
int3
popa
mov
fwait
repz
fisubs
cs
cmc
call
pop
fcomip
pop
cmp
cld
sbb
int
fs
fistpl
mov
inc
outsb
enter
aad
jge
stos
cltd
cmp
mov
inc
dec
sub
adc
imulb
rclb
xor
repz
sub
imul
mov
xor
in
in
mov
push
pop
lea
ja
push
inc
add
sbb
aaa
ret
adc
movsw
jle
ljmp
aad
xchg
pop
insb
cmp
xor
scas
xchg
js
add
jne
dec
ss
add
mov
neg
xor
in
lods
ds
push
sarb
mov
lea
xchg
sub
sub
aaa
loope
stos
mov
fists
mov
pushf
shll
push
dec
or
dec
cmp
popf
or
jg
and
inc
out
call
jmp
push
mov
ret
fistpl
or
add
pop
add
xor
sub
out
pop
popf
fadd
add
mov
xor
pop
xchg
in
repz
movsb
das
mov
cmpsb
or
ret
add
pop
lods
lods
mov
xchg
inc
mov
sbb
sahf
les
repz
inc
xchg
cmp
insl
mov
mov
jno
dec
adc
sub
jno
mov
push
xchg
pop
pop
inc
fs
test
test
ja
pop
mov
jnp
std
ficoms
iret
adc
jmp
mov
jb
add
sahf
dec
insl
cmc
dec
loopne
jg
or
pop
sbb
mov
test
push
cmp
jo
div
mov
in
lahf
and
je
pop
mov
pop
scas
push
xor
add
inc
cltd
bound
add
cltd
loope
pushf
mov
mov
clc
mov
es
aam
push
sub
lret
orl
push
pop
mov
movsb
outsb
dec
push
xor
les
lds
pop
pop
lea
std
push
fistps
ret
cmp
jmp
stos
fistpll
fiaddl
in
stos
clc
popf
mov
leave
mov
mov
lret
sub
mov
and
mov
ja
int
ja
clc
scas
inc
mov
frstor
clc
fstpl
xor
iret
mov
pop
in
or
pop
dec
cmp
addr16
mov
mov
js
sub
imulb
jg
bnd
add
inc
mov
fucomp
cmp
fimuls
into
popa
adcl
dec
add
adc
andl
ficoms
das
enter
xchg
pop
xchg
incb
iret
lret
push
cmp
arpl
xor
push
jmp
movsb
fstpt
iret
iret
push
jg
icebp
or
mov
xchg
jb
lret
push
push
jg
cmp
std
jge
out
sub
mov
testl
shlb
pop
xchg
jg
pusha
bound
or
inc
data16
pop
sbb
fisubs
pop
cwtl
adc
fcoms
cltd
push
and
sbb
sub
and
or
mov
mov
push
pop
sarl
cmp
cmp
dec
icebp
mov
inc
jmp
fld
mov
js
dec
push
out
inc
or
test
xchg
dec
and
lods
hlt
sub
das
jo
and
dec
push
adc
dec
call
inc
data16
sub
test
sub
mov
sbbb
stos
adc
add
scas
ljmp
jo
sbb
sbb
xchg
inc
aaa
sub
sbb
mov
loope
inc
jmp
dec
xchg
das
xlat
push
jae
or
icebp
mov
add
cmpsl
sarb
ja
push
enter
push
mov
stos
loope
jns
js
sbb
sahf
mov
je
ljmp
scas
jne
jns
inc
sbb
xchg
out
loopne
mov
pcmpgtd
mov
call
out
add
jg
aad
iret
ret
jg
sahf
cld
xchg
add
or
fistps
cmpsb
jnp
lods
cmp
xchg
sti
loope
add
sarb
or
or
mov
faddl
bound
fstp
outsl
in
inc
push
sub
xchg
cmp
popf
add
loop
adcl
and
out
xor
or
or
fs
das
insb
rolb
dec
pop
inc
loop
mov
mov
mov
jmp
js
dec
push
fcmove
addb
xor
pop
clc
dec
dec
sbb
cmc
adc
orb
aaa
lods
mov
mov
cmp
into
les
push
int
xor
rcrb
imul
jns
pop
imul
pop
jp
push
testl
movsl
mov
in
push
xchg
jae
mov
and
dec
mov
adc
mov
push
lcall
rorb
mov
add
xchg
pop
xchg
cmpsl
pop
in
leave
pop
mov
das
in
aam
out
and
mov
xor
or
sbb
push
xor
test
adc
cmp
mov
rcrl
bnd
jl
adc
jg
in
or
ds
jl
hlt
and
cmp
sub
mov
insl
stos
xchg
stc
mov
pushf
mov
mov
dec
inc
sub
lea
bound
dec
pop
pop
sbb
mov
inc
fistpll
jne
jno
cltd
cmp
sbb
add
xor
loop
cld
mov
jmp
jb
cwtl
insb
imul
cwtl
add
call
loope
popf
stos
ret
xchg
int3
sbb
xchg
rcr
adc
xchg
sbbb
fs
mov
stc
js
in
mov
pop
adc
jle
fcompl
xor
out
cmp
bnd
and
clc
xchg
pop
xchg
sub
mov
sub
jecxz
push
and
cmp
in
out
shr
fmull
lock
adc
xchg
and
xchg
sti
fbstp
push
push
add
ljmp
xchg
xchg
mov
pop
push
jl
push
mov
fcoms
xchg
out
xchg
cmp
stos
sbb
xchg
push
out
nop
push
cmpsl
cli
in
in
mov
push
outsl
push
mov
outsl
rcrb
lret
aaa
or
mov
test
outsb
sub
mov
push
aad
mov
sbb
out
adc
je
xchg
outsb
das
insl
inc
test
xor
add
sti
jne
cltd
daa
aad
jb
jo
and
and
cmp
push
ljmp
adc
sbb
lret
jl
mov
mov
sub
ret
test
or
clc
xor
addr16
or
or
decb
ss
xor
lods
popa
xor
cmpsb
dec
sub
imul
ss
xor
pop
packuswb
mov
ds
lea
int
dec
sub
into
fstl
cwtl
fs
jb
xor
scas
mov
mov
xorl
push
nop
mov
xchg
cmp
call
or
mov
dec
mov
xchg
daa
inc
in
add
ljmp
jnp
xchg
pop
sbb
dec
or
pop
mov
fdivrp
jecxz
scas
ret
shl
popf
pushf
cmp
lds
out
add
lods
getsec
xor
into
shl
outsl
fdivp
pop
adcb
mov
das
loope
fwait
mov
jb
addl
hlt
lock
out
test
xlat
nop
popf
sbb
enter
pop
loop
outsl
nop
jb
repnz
call
or
fidivrl
jb
mov
adc
push
sbb
add
inc
data16
roll
xchg
aaa
or
ja
lds
int
xchg
add
lds
mov
incb
stos
andl
lcall
sub
stos
test
pusha
stos
jge
push
lahf
lcall
xchg
lea
inc
iret
test
bound
xchg
push
out
aaa
push
push
lahf
cltd
cwtl
js
std
pusha
decb
xchg
lock
adcb
xor
pusha
mov
xchg
cltd
adc
xchg
stc
add
std
and
in
adc
inc
addr16
bound
filds
xchg
xorb
inc
mov
pop
outsb
call
ds
adc
sbb
mov
cs
xor
iret
mov
sub
mov
test
dec
adc
movsb
test
mov
xchg
pop
jl
lret
sub
fstl
pusha
mov
cli
mov
pop
testl
mov
sbb
loop
insb
into
es
and
or
enter
dec
pop
les
cs
fwait
test
add
fstl
add
cmpsb
aaa
jle
cmp
sub
cmp
mov
frstor
fs
xchg
std
lods
sub
mov
mov
cmp
sbb
mov
je
popl
jae
xchg
pushf
mov
inc
mov
mov
fstenv
mov
in
sub
bnd
insb
adc
adc
or
sub
dec
mov
mov
es
and
mov
or
sub
imul
mov
dec
push
or
xchg
sub
xor
or
mov
sbb
xchg
outsb
xchg
insb
xorl
cltd
adc
ja
inc
mov
orb
jmp
pop
in
out
imul
mov
loop
jp
lea
aaa
and
ret
aad
out
jmp
test
ljmp
into
xor
push
mov
mov
mov
jp
mov
jl
cmc
test
jle
faddl
cmpsb
jge
sbb
push
xor
das
fwait
jmp
loop
loopne
nop
dec
push
aas
shlb
push
mov
push
out
jp
cwtl
xorb
cmc
dec
cwtl
fstpl
int3
or
xor
jnp
sub
adcl
cmp
mov
test
popf
pop
mov
in
fwait
cmp
cmp
pop
add
stos
pop
mov
pminsw
cli
out
or
sbb
sub
cmp
push
jp
mov
dec
stos
pop
mov
pminsw
cli
out
or
sbb
sub
cmp
push
jp
mov
dec
stos
pop
mov
pminsw
cli
out
or
sbb
sub
cmp
push
jp
mov
dec
stos
pop
mov
pminsw
cli
out
or
mov
sub
dec
fadd
aaa
movsl
jo
pusha
test
fldcw
mov
testl
arpl
int3
sub
or
or
fldcw
test
popf
jns
imul
pop
int
std
sbb
or
fldcw
test
popf
jns
dec
fdivrl
daa
mov
jl
jle
mov
cltd
jno
jge
add
xchg
mov
shll
data16
stc
cmp
mov
inc
pop
test
sbb
call
cmpsb
and
xor
mov
or
xor
dec
push
pop
hlt
testb
popf
jns
push
arpl
or
or
lahf
pop
mov
insl
imul
sub
or
cmp
push
outsb
es
mov
inc
inc
jge
insl
mov
xchg
jl
cmpsb
lods
dec
mov
cmp
adc
in
or
sarl
stos
add
pop
insl
enter
test
sbb
testb
jmp
pop
mov
insl
mov
pop
lods
dec
fnstsw
int
std
sbb
dec
imul
arpl
cmp
or
cmc
or
jo
or
cmp
imul
dec
xchg
gs
cmp
sub
jge
adc
sbb
ds
mov
pop
imul
mov
mov
jge
insl
mov
pop
lods
dec
fnstsw
int
std
sbb
or
fldcw
test
popf
jns
imul
sbb
or
mov
push
cs
outsl
push
cltd
movsl
cmpb
or
inc
js
mov
adc
pushf
mov
pop
out
and
imul
dec
notb
xchg
shl
cmp
das
pop
add
inc
and
jmp
movsb
inc
jo
pop
mov
stos
cli
iret
stos
lods
addb
idivl
jb
ret
inc
out
pushf
js
sub
in
imul
out
hlt
aas
mov
adc
rcrl
pop
xchg
fst
push
loope
adc
insb
ret
inc
pop
out
aam
fldcw
call
jbe
jo
inc
stos
mov
push
cmpsb
mov
loope
aam
in
mov
popa
lret
cli
sbb
pop
xchg
leave
dec
adc
xchg
push
les
dec
cli
sahf
sbb
cwtl
jle
adc
jmp
mov
shlb
and
std
inc
lock
jns
cmp
ret
mov
icebp
hlt
mov
fldenv
daa
int
sub
mov
cs
clc
and
outsb
test
rorb
jle
stos
out
xor
jge
lret
mov
shlb
je
mov
and
test
mov
das
and
sahf
pusha
or
pop
adc
hlt
cmp
xlat
mov
jp
cmp
or
push
pop
fcoms
imul
orb
scas
cs
stc
int3
cmc
sbb
fwait
lcall
and
pop
mov
data16
mov
add
and
fwait
inc
mov
sahf
push
pop
cmpsb
dec
inc
xor
push
movsl
pop
adc
jbe
iret
fmuls
or
xlat
addl
inc
ret
jno
jle
cmp
jne
jne
mov
add
fldl
mov
mov
rol
mov
mov
setge
inc
stos
pop
ret
add
shl
inc
pusha
sub
scas
leave
adcb
paddusb
gs
mov
shlb
sub
ljmp
iret
sbb
test
je
ret
cwtl
sbb
leave
pusha
cltd
lds
pop
dec
fnstcw
jbe
cmp
inc
mov
push
out
leave
pop
mov
pop
push
fdivr
aaa
dec
cmp
stos
mov
fwait
inc
aaa
sbb
xchg
sub
test
test
sbb
pusha
jno
add
scas
xor
icebp
push
cmpsl
xor
and
les
mov
add
mov
aas
repz
int
insb
push
pop
and
dec
ljmp
push
or
sbb
ds
pop
or
into
mov
sub
cli
ret
sbb
push
mov
xchg
mov
xchg
test
mov
xor
jae
out
xchg
jle
mov
andb
push
xchg
adc
cmp
fimull
pushf
mov
dec
mov
popf
mov
cmp
mov
push
out
popf
mov
into
mov
push
sar
jae
mov
adc
adc
andl
xor
push
mov
dec
push
sbb
sub
sbb
sti
push
in
out
pop
fwait
jne
jmp
lcall
sbb
push
push
fwait
ss
inc
daa
ja
mov
sub
pop
out
bound
sub
mov
fcomi
shlb
push
mov
jb
out
mov
pop
pop
mov
sub
hlt
imul
loopne
cwtl
push
mov
add
push
mov
cli
xchg
stos
xlat
mov
pop
icebp
lret
int3
out
leave
ret
adc
cli
dec
mov
mov
push
sub
addl
inc
popl
mov
repnz
or
mov
sbb
lea
xchg
or
push
jno
fcompl
mov
dec
push
dec
rorl
int
int3
mov
icebp
xchg
or
mov
add
and
iret
xchg
inc
inc
std
dec
cmpsl
idiv
inc
mov
in
adc
dec
jecxz
scas
call
inc
iret
jmp
jb
inc
jp
push
fildll
test
sarl
xchg
mov
dec
std
std
push
add
lods
xchg
jno
rcll
mov
push
mov
jecxz
fildll
mov
popf
and
stc
push
sbb
sahf
loop
adc
mov
nop
sbb
es
xchg
test
test
in
add
inc
fnsave
xor
lcall
roll
subl
sub
push
dec
jbe
push
aad
mov
or
push
mov
or
ja
xrelease
or
sub
xchg
sub
mov
repz
adc
pop
out
fcmovb
outsb
scas
into
adc
mov
add
push
mov
sub
out
fbstp
pop
das
data16
cmp
stc
fcmovbe
call
sahf
mulb
push
or
imul
in
ljmp
xchg
jmp
xchg
cmp
dec
aas
lods
push
adc
pop
aaa
orb
mov
dec
pop
fidivs
and
mov
jns
xor
push
int
mov
insl
mov
sub
inc
call
and
dec
pop
test
xlat
es
fstpl
and
pop
jae
sub
cmp
adc
es
aam
dec
pusha
sbb
rcrl
adc
dec
addr16
sbb
gs
mov
call
xchg
sbb
cmp
xor
jnp
out
fidivs
jg
pop
adc
dec
pop
add
mov
fisubs
xor
add
fs
out
or
bound
jecxz
cmp
mov
jo
vrsqrtps
or
push
repz
pop
mov
dec
pop
dec
js
in
movsb
outsb
xchg
jp
xchg
mov
shll
sbb
dec
xor
push
ffree
lcall
mov
dec
or
ja
mov
fcmovnb
lret
xchg
bound
cmc
out
movsl
iret
or
ds
sub
xor
push
push
aas
icebp
jne
adc
out
inc
dec
inc
in
cmp
add
add
mov
xchg
bound
jns
push
fisubs
inc
insb
adc
rol
sbb
sbb
adc
mov
call
push
sti
add
adc
adc
lods
or
cmp
add
in
pop
jbe
jbe
mov
and
inc
lahf
pusha
mov
shll
add
fstp
mov
pop
aaa
fstps
gs
cmp
ret
push
insb
arpl
popa
clc
das
je
jg
sub
add
dec
adc
lcall
lahf
sbb
dec
hlt
rclb
or
adcl
cmp
and
std
xchg
sub
mov
cwtl
loope
jns
jno
stc
ficomps
or
jge
arpl
mov
fnstsw
dec
cmp
dec
push
ret
xor
es
ficoms
es
rcrl
popf
stos
mov
push
shll
jae
xor
sub
jns
pop
nop
mov
sarb
cmp
lahf
test
adc
imulb
mov
lret
push
sbb
lods
insl
leave
cmp
push
jae
xor
jl
out
test
ljmp
hlt
dec
test
addb
pop
xchg
in
inc
sti
mov
or
pop
mov
test
inc
push
push
sbb
sarl
sub
aad
and
aam
push
fists
push
enter
pop
or
inc
lods
mov
cmpsb
add
fistl
inc
jg
xchg
and
test
lcall
bound
mov
add
push
daa
pop
movsb
push
scas
loope
stc
mov
pop
sub
stos
out
mov
xorb
pushl
push
test
mov
popf
jecxz
xor
sub
inc
inc
call
inc
or
lahf
pop
inc
mull
or
stos
cs
jo
sub
popf
movsl
fld
xor
add
ja
lods
test
movsl
mov
jo
dec
sub
mov
cmpb
xor
jae
loop
test
dec
ret
xor
xor
icebp
pop
sbb
icebp
adc
loopne
mov
ss
xlat
xchg
jnp
jecxz
shrb
xchg
out
clc
push
jno
pop
dec
test
je
pop
repnz
xchg
int
insl
inc
jnp
pop
add
xor
pop
lcall
loop
jnp
add
pop
rcr
sarb
loopne
add
bound
push
daa
jle
push
pushf
rcrl
adc
jo
push
xchg
je
xchg
inc
cmp
fidivs
push
dec
xchg
sub
out
in
mov
inc
sub
hlt
sbb
or
lods
insl
pop
xor
sub
and
bound
dec
aas
sarl
push
lods
scas
xchg
cmpsl
movsb
outsb
cmp
inc
call
xchg
insb
shlb
lea
sbb
insb
in
adc
sarb
and
loop
jge
out
andb
mov
fadds
data16
xor
push
addr16
jl
in
repz
xlat
jp
or
aaa
pop
in
out
adc
push
push
sub
cwtl
or
cmp
cltd
in
jmp
add
xchg
cs
loope
out
xorl
jmp
sub
mov
repnz
xor
cmp
in
sbb
dec
aad
sub
aaa
mov
inc
mov
shrl
jb
lods
imul
pop
pop
xor
outsb
ret
ss
fmuls
test
and
inc
test
inc
inc
add
xchg
sbb
sub
rol
js
mov
push
subl
pop
pop
shlb
cli
lea
sar
fidivrl
cli
lods
aas
mov
test
and
sbb
add
and
push
in
iret
sarb
rorb
pop
call
mov
lret
js
ja
mov
inc
pop
inc
test
xchg
out
lret
shlb
pop
popa
adc
mov
les
mov
cmpsb
and
xor
xorb
pop
mov
cmp
pop
pop
add
dec
pop
and
gs
add
repnz
adc
sbb
into
popl
in
cmpsl
mov
sub
lret
sbb
jle
scas
dec
xor
push
mov
push
divb
cmp
insb
mov
stos
mov
mov
xlat
lds
lods
test
mov
and
scas
les
imul
sti
and
sti
popf
xor
rcrb
sti
mov
test
addr16
jl
jmp
das
test
fwait
dec
imul
aad
fcompl
out
jbe
cli
sbb
push
adc
dec
pop
rcll
aas
and
pop
in
shl
push
sbbb
js
mov
sub
outsb
pushw
dec
flds
mov
lock
inc
mov
sbb
xchg
popa
repnz
pop
insl
loope
xchg
call
jle
jne
out
lret
fidivs
call
insb
cmp
call
sub
cmpl
fidivl
pop
fldl
repnz
mov
or
inc
fwait
aam
pop
pop
cmp
push
pop
scas
xor
or
lods
test
dec
jbe
dec
mov
mov
dec
cwtl
sbb
mov
scas
sub
sub
pop
mov
mov
popl
fidivl
pop
jnp
jmp
out
pop
scas
xor
into
jb
mov
pop
push
shlb
dec
pushf
sub
neg
mov
fnstsw
or
or
sub
popl
pusha
jno
jno
add
pushf
xlat
sub
add
push
fwait
push
jb
pop
cmpsb
sub
sub
xor
sbb
ds
pop
mov
xchg
rcl
dec
hlt
fistl
mov
push
leave
cld
insb
pop
pop
sarl
bnd
iret
push
out
test
dec
fistpll
sbb
leave
sar
jae
ret
push
xchg
and
sbb
or
gs
inc
add
or
test
rcr
mov
cld
pop
cmpl
pushf
sbb
pop
lds
push
fiaddl
jge
lret
test
sub
and
jge
fptan
aad
cmp
lods
mov
out
test
add
xor
popa
and
leave
ficomps
mov
loop
mov
test
xchg
jae
ret
cs
pushl
xor
jp
fs
jne
mov
dec
jbe,pn
pusha
mov
shrb
sbb
mov
cmp
jmp
jmp
or
mov
mov
cmp
pop
add
jge
movsl
lods
xor
cld
xchg
jb
jg
dec
add
jp
or
ljmp
dec
xchg
outsl
lds
mov
lret
inc
fldt
push
and
shll
xlat
fs
fnclex
adcl
out
in
sbb
clc
lcall
pop
ret
push
stos
xlat
les
inc
scas
bound
adc
imul
lahf
push
int
scas
pop
push
loop
int
push
sub
xchg
and
xchg
mov
call
andl
es
adc
vminss
jbe
cli
inc
mov
pop
mov
ja
loop
mov
xlat
mov
xchg
ss
dec
xor
mov
mov
paddusb
cmpl
adc
lcall
stc
shrb
mov
push
fyl2x
push
fistpll
cs
sbb
mov
xorl
adc
or
sub
ret
add
and
loope
or
into
mov
pop
cmp
test
inc
idivl
fisttpl
out
mov
fistpll
sti
lds
mov
add
jg
out
and
stc
sti
push
jle
out
xor
sarb
mov
ja
fisubrl
cmp
sub
clc
xchg
pop
fistpll
dec
sbb
pop
xchg
imul
fnstenv
loope
adc
dec
adc
es
xchg
mov
cld
xchg
push
adc
loopne
push
pushf
pop
shrb
cmp
jmp
outsb
mov
sahf
cli
sahf
les
mov
xor
dec
mov
cwtl
mov
call
lahf
jecxz
dec
jg
hlt
or
roll
mov
lds
xor
scas
shll
aad
std
enter
xor
sahf
arpl
adcl
pop
xorl
lret
xorb
pop
xor
movsl
mov
sarb
or
imul
pushf
fmull
loop
pop
jp
pop
dec
jns
lds
inc
stos
lock
mov
jns
add
clc
sub
sub
movsl
fs
dec
xor
lea
inc
repz
out
cmc
stos
push
cmpsl
shll
xchg
add
add
jnp
jge
mov
mov
push
lods
jecxz
iret
mov
add
dec
inc
pop
ja
inc
fsubp
add
xchg
xchg
xchg
dec
adc
mov
pop
jbe
mov
cwtl
pop
cmp
dec
mov
inc
xchg
clc
jae
outsb
jnp
xor
xchg
cwtl
hlt
repz
test
push
cmp
imul
fwait
pop
mov
sbb
ret
mov
dec
imul
and
dec
add
call
push
pop
mov
adc
cmp
cmp
inc
pop
dec
mov
jmp
jnp
jmp
cmpl
out
lea
add
dec
cltd
cmp
dec
dec
xchg
cmp
sbb
sub
sti
cltd
out
stc
xlat
leave
and
and
jmp
std
sub
scas
iret
xchg
or
adc
test
jecxz
inc
dec
jbe
push
xchg
push
daa
push
lock
xor
or
sbb
pop
sbb
xchg
out
xchg
xchg
push
xor
hlt
stc
mov
cs
pushf
dec
adc
inc
fsubr
rcl
into
mov
shlb
jmp
lods
pop
popf
jecxz
mov
in
iret
inc
ja
adc
shrl
aam
and
push
lret
lock
stc
cs
jno
and
mov
push
cli
pusha
xchg
push
or
sarb
and
stos
dec
cmp
rolb
dec
test
or
pop
loopne
ss
add
dec
pop
bnd
xor
iret
xlat
push
and
xor
dec
inc
cltd
push
inc
nop
lea
add
push
out
mov
test
sbb
inc
xor
lcall
addl
ss
dec
cmp
data16
cmp
cmp
ss
in
sub
shlb
add
insb
roll
xchg
ljmp
mov
cmp
inc
mov
outsb
dec
fwait
pop
popa
sti
fiadds
push
ja
or
bound
lods
and
je
outsl
xchg
mov
decb
orl
adc
dec
daa
ljmp
rcrl
xor
mov
mov
std
stc
sar
jge
mov
addr16
pop
mov
pop
popf
pop
nop
popf
inc
addr16
xchg
in
loope
stc
jbe
movb
mov
add
pop
outsb
int
in
cmpsb
or
cmp
gs
ljmp
imul
mov
add
addb
inc
sub
mov
and
leave
cwtl
sub
push
fimuls
movsb
call
xchg
outsl
imul
or
jecxz
pop
push
push
pushf
jg
imul
push
push
mov
pop
popf
addr16
pushf
ret
rol
mov
add
mov
mov
mov
xchg
and
lret
dec
jnp
sti
push
push
jle
or
dec
or
adc
add
lods
cmp
ljmp
jno
adc
mov
ja
das
repnz
adc
sub
cmp
mov
jmp
mov
pushf
mov
sub
pop
xchg
sbb
jo
and
dec
popa
shlb
and
lahf
add
outsl
inc
stos
jb
mov
enter
sbb
add
adc
mov
xchg
pop
xchg
sti
mov
adc
ljmp
xchg
dec
dec
mov
add
add
xor
push
scas
jmp
pop
outsl
add
cmp
das
in
mov
or
in
imul
dec
lea
daa
ffreep
movsl
jbe
xchg
inc
aad
cmp
arpl
outsb
jmp
or
aas
sahf
outsb
shlb
jo
call
adc
add
fldl
cmp
enter
into
lds
out
mov
pop
sbb
jg
jns
insb
aas
pop
aad
jae
lods
popa
jp
aad
jg
insb
loope
pop
jb
or
xchg
lcall
push
mov
dec
jmp
adc
cmp
popa
loope
out
add
cmpb
pusha
inc
mov
mov
ret
repnz
xchg
xchg
test
jne
jg
xchg
daa
enter
add
or
sbb
outsl
stos
cmp
mov
cmpsl
lods
imul
outsl
dec
test
inc
cld
movsb
pop
jmp
dec
cld
xor
mov
into
push
fldt
adc
dec
pop
iret
xor
ret
mov
out
dec
jnp
test
jle
jnp
in
das
mov
fsts
outsb
cmp
ja,pn
mov
bound
aad
andb
jecxz
repz
int
iret
jle
dec
scas
lret
lret
pop
jae
wbinvd
inc
xchg
xchg
xor
and
lret
adc
mov
lahf
or
xor
and
sub
cmpsb
iret
or
or
mov
into
pop
pusha
and
incb
adc
mulb
push
dec
mov
aas
fists
adc
pop
sahf
lcall
adc
xor
pop
sbb
mov
pop
mov
movsl
repz
push
adc
ds
sub
mov
nop
aam
mov
xchg
mov
fmull
nop
sbb
mov
push
std
out
mov
adc
inc
jmp
mov
lods
xchg
jl
cmp
cmp
ja
sub
xor
test
in
xor
jnp
cmp
add
mov
cmp
inc
or
lcall
cs
mulb
xorb
inc
lods
out
mov
or
inc
cmp
push
lret
pop
inc
rorl
ja
gs
fdiv
mov
je
das
sub
dec
jbe
sub
in
lahf
adc
popf
pop
lret
flds
mov
mov
jnp
xchg
sub
testb
pop
inc
mov
clc
xor
pop
stc
pop
sbb
popf
add
push
repz
push
movsl
lcall
mov
leave
stc
ljmp
aas
ljmp
shll
inc
or
rorl
mov
dec
addl
arpl
dec
pop
leave
xchg
push
jnp
sub
add
jb
xchg
sub
add
js
test
push
aad
or
xor
dec
lock
add
pop
adcl
in
or
int
and
mov
push
rolb
lds
movhps
xor
subl
jge
mov
cmp
sub
imul
ds
pop
jns
mov
fnstsw
dec
mov
cmp
loopne
cld
lahf
out
dec
fiadds
lods
dec
jmp
pop
mov
insl
mov
pop
lods
dec
fnstsw
int
std
sbb
or
fldcw
test
popf
jns
imul
sbb
or
fldcw
test
popf
jns
imul
sbb
or
or
cmp
sub
test
popf
jns
ret
pop
pop
lods
ds
mov
add
adc
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sarb
loopne
lock
xor
incl
cmp
call
add
xor
loopne
lock
cmpb
sub
clc
push
mov
jle
add
xor
clc
pop
call
sub
push
jae
aas
mov
jg
jl
mov
aaa
loopne
xchg
sar
nop
lret
popa
ret
stos
loopne
lea
dec
or
and
nop
add
cs
call
stos
mov
and
pop
pushf
inc
and
iret
fnstcw
and
adc
adc
sub
in
add
std
xor
and
add
insl
shr
xchg
aam
jg
xchg
sub
mov
lret
and
push
daa
cwtl
call
adc
xor
nop
cwtl
pop
xchg
insl
fstl
mov
cmp
mov
xchg
mov
clc
test
push
fbld
add
cmpsl
cmpxchg
xchg
movsl
push
insl
mov
call
inc
lods
inc
outsl
and
push
xchg
cmp
or
dec
call
sbb
xor
lods
pop
mov
test
test
repz
imulb
in
push
mov
inc
popf
cmp
adc
jne
push
lcall
pop
cmpb
jo
dec
mov
xorb
add
jnp
push
std
push
fsubs
xor
sub
clc
push
call
add
xor
loopne
lock
cmpb
sub
clc
push
call
add
xor
pop
ljmp
adcl
cmp
fdivr
add
cwtl
adc
fs
pop
imul
xchg
pusha
or
jae
int
inc
mov
popa
push
inc
leave
push
pop
adc
push
cmp
and
mov
xor
pop
popf
and
dec
mov
ret
dec
mov
cs
xor
mov
fidivs
cltd
sarb
xchg
mov
call
push
xchg
scas
hlt
xor
cltd
bnd
push
testb
xchg
ds
sub
xchg
jle
mov
faddl
test
cmp
in
push
pop
xor
sub
imul
fstpt
iret
fcoml
xchg
cwtl
addb
jae
cwtl
in
jl
pop
fwait
rol
sub
cltd
or
pusha
mov
lock
test
adc
mov
push
enter
add
push
dec
xchg
fiadds
or
ret
adc
inc
lret
xor
jno
fildl
add
out
mov
popf
sub
icebp
sar
test
leave
pop
jecxz
xchg
cmove
rolb
sub
pop
mov
gs
js
mov
cmp
call
fisttpl
jbe
out
or
push
mov
or
cmc
repnz
pop
rcrb
lret
cmpsb
dec
xor
fisubrl
aas
aam
xchg
lods
sub
fcoms
xor
sbb
cmp
dec
xor
out
pusha
loop
push
repz
cmp
xor
stc
jecxz
mov
pushf
xchg
sbb
mov
cmp
rcrb
sub
mov
sahf
in
jo
dec
scas
lcall
cmp
hlt
cmc
xchg
mov
sub
sbb
insb
mov
mov
mov
inc
or
ja
sarl
mov
movsb
loop
cltd
fisubrl
jb
or
dec
lcall
mov
xchg
popf
out
mov
or
dec
into
test
aad
arpl
inc
dec
test
int3
push
sbb
pop
jmp
dec
xor
mov
aaa
and
push
shlb
ror
jnp
sub
mov
dec
and
add
cltd
lods
addr16
int3
pushf
adcb
inc
shlb
andb
dec
add
ja
cs
sbb
or
jne
mov
int3
cmp
mov
stos
pop
mov
and
leave
xchg
stos
inc
movsb
push
or
inc
daa
inc
mov
sub
in
jae
insb
bound
sub
sub
jp
cmp
lret
cmpb
xor
push
lret
test
jbe
fs
pop
enter
mov
decl
lock
lret
pop
mov
lcall
sub
fcmovb
mov
pop
std
push
mov
cmpsl
ficoml
mov
xor
xchg
orb
mov
pop
sub
xor
dec
js
lret
push
xlat
xchg
in
xlat
pop
push
mov
push
inc
or
leave
xor
pop
add
or
xchg
xchg
mov
pop
fsubl
aam
pop
xchg
push
ret
sbb
pop
pop
les
test
xor
inc
jmp
pop
jbe
push
mov
int3
loope
je
jns
or
xchg
mov
fdivrp
lods
aad
or
adc
and
push
jbe
aas
cmp
push
je
push
sbb
movl
fldt
push
pop
push
lahf
sub
aad
dec
aaa
jnp
test
and
jle
ljmp
jg
loop
add
pop
adc
lahf
dec
fcoms
add
fiadds
push
out
inc
loopne
sbb
xchg
repnz
pop
add
fs
adc
ja
mov
mov
rclb
lahf
cmpsl
inc
jmp
and
cwtl
xlat
clc
add
jo
fwait
sbb
pop
cmp
rorl
fmull
or
and
xor
out
in
pop
fadds
jmp
or
mull
int3
mov
aas
push
dec
jno
outsb
sub
adc
adc
ja
and
call
inc
sub
fstpl
js
xchg
cmp
iret
fdivrl
sub
cmc
xchg
inc
xchg
out
push
in
jne
adc
int3
rcr
shrb
xchg
test
adc
call
hlt
and
jecxz
mov
movsl
mov
or
and
inc
push
scas
mov
jnp
xchg
push
ja
mov
mov
or
lahf
and
mov
jp
mov
sub
les
jne
sbb
push
and
rep
xchg
mov
dec
lahf
nop
scas
add
jmp
sbb
inc
shrb
into
jp
shl
aas
xchg
push
fisttpl
sbb
sub
dec
mov
arpl
js
jecxz
mov
imul
xor
jno
mov
and
cmp
cmc
js
inc
or
jns
dec
push
mov
mov
cld
pop
insb
and
shrb
mov
mov
jl
push
outsb
outsb
pop
jno
sbb
xchg
fstp
mov
icebp
sub
pop
push
xor
lahf
mov
sbb
jp
cmc
int
cmpsb
dec
adc
add
cmp
dec
icebp
xlat
sub
adcb
pop
push
xor
pop
hlt
in
fwait
cs
loope
and
fsub
enter
adc
hlt
sub
loopne
loope
xor
dec
cmpsl
or
test
dec
or
fstpt
sarb
xor
pop
sbb
and
xchg
ljmp
lds
in
sbb
jmp
jnp
dec
adc
imul
mov
mov
adc
mov
loop
in
mov
xchg
mov
push
adc
mov
sbb
rcr
les
and
lahf
mov
stos
cmp
lods
fdivr
or
shlb
mov
in
shll
js
in
aas
mov
lea
insb
icebp
xchg
popf
dec
inc
or
sbb
and
push
int3
iret
and
sub
mov
fmuls
fwait
sub
bound
pop
pop
gs
adc
dec
lods
add
ljmp
mov
sbb
out
sub
mov
push
js
or
dec
push
pop
inc
adc
in
xchg
and
adc
jp
imul
stos
outsb
int3
out
or
test
mov
pop
xor
rorb
fimuls
xor
push
and
inc
test
scas
pop
loop
data16
aaa
stc
sub
mov
sub
pop
jg
lock
mov
mov
aad
xor
mov
jg
cmp
sub
and
loop
lock
mov
repz
fnstenv
lcall
push
xor
into
hlt
jo
movsb
loope
jp
xchg
xchg
cmpl
insb
jle
dec
pop
out
or
fcomps
and
push
mov
inc
lret
pop
subl
push
xlat
jle
scas
stc
cld
cltd
mov
shll
jns
xchg
leave
jle
roll
or
outsl
jns
leave
adc
jnp
sbb
into
sbb
decl
cs
adc
std
outsb
mov
cmpsl
adc
jb
nop
xchg
fistpll
sbb
cmp
in
imul
sub
fdivl
mov
add
std
add
lds
sbb
or
push
and
movb
and
cld
fists
aaa
sub
sub
rorl
inc
inc
imul
into
xor
rclb
mov
outsl
add
xadd
xchg
mov
mov
fbld
imul
dec
call
inc
xor
into
faddl
faddl
cltd
cmp
jb
sbb
int3
jb
add
cmp
test
or
cmp
mov
jle
mov
pop
mov
or
cli
insb
ljmp
cmp
sti
inc
mov
in
mov
sbb
dec
test
pop
in
cmp
xor
add
movsl
shrb
in
jmp
es
mov
jl
outsl
inc
mov
icebp
dec
or
jecxz
ds
cmc
cmp
xchg
sbb
xor
aas
pop
cmp
jg
jge
scas
push
mov
sub
dec
ret
lcall
jae
movsl
push
lret
sti
adc
inc
into
pop
cmc
pop
test
xor
sti
lods
notl
mov
mov
aas
dec
std
idivb
add
popa
data16
cmp
daa
xor
roll
xchg
adc
lret
popf
int
push
repnz
xchg
mov
dec
adc
je
add
mov
in
cmp
dec
lds
sbb
sub
xor
xchg
ds
imul
sbb
jp
stc
or
shrb
pusha
mulb
xor
fidivrl
ljmp
mov
and
fisttps
aam
mov
andb
pop
jne
adcb
movsb
jno
mov
jne
and
movsl
mov
xchg
push
imul
call
pop
stos
push
pop
mov
in
arpl
int3
inc
jmp
icebp
and
inc
add
shrb
stc
push
push
mov
cmp
daa
aad
pop
mov
jmp
jo
fistpll
insl
mov
pop
cltd
push
stos
fidivrl
sub
xchg
dec
adc
stos
and
mov
movsb
jb
ret
jp
into
push
ljmp
ss
jo
or
lea
es
dec
mov
ljmp
outsb
test
pop
outsl
ljmp
test
xchg
jge
pop
jae
adc
ret
add
and
stos
xchg
cmp
and
sahf
cmova
add
aaa
hlt
into
sahf
nop
and
pop
ss
pop
jg
or
lods
mov
out
lret
mov
xor
rol
jle
adc
inc
add
call
mov
nop
jle
mov
aam
pop
subl
and
xchg
cmp
dec
pop
stos
dec
push
out
mov
sbb
in
call
pop
push
pop
adc
cmp
loope
inc
test
std
dec
sbb
sbb
adc
mov
popa
leave
pop
mov
cmp
mov
nop
repz
in
jp
loope
pop
imul
sbb
jmp
stc
or
jmp
enter
std
shl
adc
mov
out
in
daa
adc
sub
dec
or
in
mov
daa
lds
push
aam
cwtl
jecxz
add
push
mov
fiadds
inc
sbb
adc
imul
ficomps
in
sub
cwtl
int3
sti
cmp
jbe
in
push
mov
daa
pop
lods
mov
mov
mov
and
push
add
lea
lret
add
aad
cmc
sbb
aam
out
lds
pop
mov
xor
xor
pop
push
repnz
xchg
fnsave
add
in
iret
sahf
stos
jmp
add
mov
or
imul
nop
xor
or
sbb
out
mov
jns
cmp
loope
int3
movb
mov
cld
mov
or
or
andb
inc
mov
sub
push
inc
mov
insb
sub
cmp
jo
adc
nop
shlb
testl
jbe
cmp
xor
fcmovnbe
shrb
mov
sahf
ljmp
aaa
stc
xchg
pop
stc
fstp
inc
shrl
in
jo
cltd
lea
cmpsb
cmp
push
in
and
adc
jnp
bound
push
cmp
sbb
lret
lahf
xchg
sbb
addr16
xor
inc
mov
mov
sub
or
push
lret
into
scas
lods
insl
icebp
sbb
mov
adc
popa
sub
sub
sbb
mov
and
out
xor
std
sahf
xchg
xor
adc
fdivrs
scas
or
dec
iret
popa
xor
adc
enter
push
mov
sbb
into
inc
add
xchg
lret
adc
add
sub
pop
adc
jg
test
jb
xchg
cmp
paddsb
cli
das
jl
mov
push
push
inc
mov
mov
sub
rolb
fcoml
popa
es
hlt
rorl
pop
out
or
jg
ficomps
loopne
mov
rcrl
int3
fnstsw
popf
scas
in
cltd
das
hlt
lods
jno
sbb
fs
dec
cmc
and
cmp
sahf
rclb
mov
imul
scas
sub
jno
inc
mov
stos
jg
imull
adc
movsb
aas
add
movsl
adc
jge
cmp
inc
rcll
pop
insb
push
sbb
mov
sbb
fldenv
aas
add
sqrtps
xor
arpl
cmp
pop
pop
in
jne
jle
rcll
sbb
xchg
xchg
in
and
and
in
mulb
pop
hlt
aaa
test
fnsave
ja
rol
add
mov
pushl
jbe
imul
out
in
cmp
sbb
cs
data16
push
roll
mov
push
outsb
sbb
mov
or
hlt
enter
movsl
mov
pushf
pusha
in
mov
les
fistps
rorl
cmpsb
rorl
into
pop
dec
jecxz
addl
pop
andb
in
inc
fs
into
lds
jb
push
mov
or
icebp
jecxz
popa
in
es
mov
ljmp
cmp
or
fisubrs
loopne
sti
sbb
clc
leave
cld
enter
nop
mov
pop
push
shll
mov
xor
adc
add
inc
sbb
sbbl
adc
mov
push
je
jo
daa
das
mov
test
adc
fdivrs
add
and
and
cs
mov
jo
loop
inc
xchg
fidivl
movsb
pop
imul
pop
jle
dec
push
scas
mov
aaa
and
bound
mov
rcl
popf
in
mov
out
jle
inc
inc
or
fs
jg
out
loopne
cmp
sahf
add
sub
lret
pop
ds
mov
jnp
jg
mov
fidivl
adc
fdivrl
dec
outsl
push
ljmp
push
hlt
arpl
jecxz
nop
int3
mov
loopne
add
in
dec
xor
mov
dec
adc
loopne
ss
push
icebp
inc
daa
adc
bound
outsl
cmp
jmp
in
dec
xchg
fimuls
rcrb
adc
mov
mov
mov
dec
mov
cmp
push
or
sbb
bound
leave
adc
cwtl
repz
out
dec
and
pop
repz
jle
stos
jnp
sbbl
cmp
sub
sub
xor
shlb
out
imul
sahf
lods
jnp
pop
popa
out
aad
jmp
pop
jmp
mov
cmp
pop
ret
pop
lret
cmp
sbb
nop
inc
sbb
jne
in
movsb
scas
xchg
scas
sarl
sbb
ds
ds
addb
jo,pt
movsl
insb
xor
ficoms
or
in
pop
aas
lret
push
les
icebp
mov
movsb
nop
pop
mov
jle
subb
mov
movlps
add
sub
movsl
ror
out
je
sbb
xchg
ds
out
repnz
stos
out
leave
leave
sahf
adc
jne
test
sbb
cmc
andb
adc
cs
mov
jbe
aad
imul
popf
or
or
jle
lds
popf
or
push
in
lret
leave
lock
push
or
test
fisubs
pop
mov
sbb
ret
popf
pop
sub
loope
inc
inc
shlb
idiv
sahf
xchg
adc
mov
gs
cli
push
jo
cmc
mov
dec
or
cmp
es
lahf
ret
movsl
jecxz
and
mov
movsb
bswap
inc
cmp
outsb
in
push
xchg
decb
mov
sbb
rorb
push
jae
inc
es
jnp
imull
dec
jbe
mov
cmp
inc
test
test
xchg
jle
pop
cmpsb
add
sub
outsl
in
inc
xor
iret
jmp
jmp
mov
stos
push
roll
jmp
fwait
xchg
repnz
sub
push
push
pusha
std
cmp
mov
cli
shl
repz
loope
lock
or
jle
mov
fistpll
push
enter
or
in
aam
fmulp
push
mov
push
in
mov
dec
xlat
mov
in
mov
bound
mov
loopne
sbb
sub
movsb
jb
jbe
das
clc
add
cmpsl
js
rorb
aaa
jmp
call
push
push
cli
fcompl
rclb
pop
fnstcw
das
adc
dec
cmp
mov
call
jbe
mov
jmp
shlb
mov
jp
jb
push
mov
sub
hlt
ljmp
sub
mov
call
xchg
xchg
adc
loop
orl
lods
ljmp
sub
or
scas
mov
push
pop
test
cmpsb
rcrb
pusha
sbb
xor
dec
mov
hlt
insb
idivl
faddp
xchg
mov
xchg
rcrl
adc
sbb
loopne
sub
adc
xchg
xchg
shlb
movsb
sub
out
jnp
fldl
jno
mov
in
roll
movsl
mov
or
mov
sbb
subb
and
inc
sub
sbb
movsl
fnstcw
adc
sbb
sub
fs
lret
and
fdivl
push
int
lods
xchg
in
push
dec
adc
std
outsl
lods
pusha
mul
sub
cmp
fmuls
dec
mov
jg
inc
int
xchg
mov
test
mov
sub
pop
push
sub
popa
fmuls
std
jb
nop
sbb
push
push
idivl
mov
lods
in
out
out
cmpsl
push
mov
jmp
or
pop
imul
mov
mov
in
into
jmp
loop
pusha
mov
pop
adc
jecxz
add
insb
cs
testb
shll
mov
inc
bound
nop
fldcw
mov
xor
cli
pop
cmc
push
test
push
or
push
je
mov
inc
ret
lret
mov
sbb
nop
mov
mov
jle
fistpl
shrl
and
fxam
xchg
or
pop
gs
mov
add
cmovge
inc
push
leave
sub
outsb
lret
fstpt
loop
je
imul
mov
mov
mov
adc
add
pusha
rclb
lret
lcall
popa
jg
dec
inc
test
push
sti
cmpsl
inc
jmp
dec
mov
repz
adc
push
sub
test
cmp
fsts
rclb
add
mov
rclb
xlat
dec
push
ja
inc
jmp
jae
push
stc
icebp
jns
push
cmp
sub
aas
jne
lods
mov
or
dec
cmpsb
cmp
pop
fisubl
repnz
push
xchg
ljmp
mov
xchg
mov
dec
bound
dec
out
mov
je
aad
jmp
and
sbb
lret
lods
pusha
xchg
xchg
dec
mov
pop
fisttpll
popa
mov
push
test
and
roll
outsb
popa
and
jbe
jp
jge
cwtl
addb
faddp
jo
push
jecxz
call
xor
jecxz
cmp
scas
fsubs
cmp
test
out
frstor
ss
mov
xorl
bound
in
sbb
bound
cmp
stos
mov
sbb
adc
mov
mov
push
and
sbb
roll
and
push
sbb
scas
cmpsb
mov
sbb
stc
xchg
sub
je
cli
jecxz
jnp
inc
lock
popf
ss
loope
pop
sahf
adc
add
add
out
clc
or
aaa
cmpl
fdivrl
jle
dec
popf
repnz
icebp
mov
and
ss
fwait
cmp
xchg
push
pop
mov
xchg
mov
jns
jno
mov
rol
test
sbb
fbstp
ja
xor
lock
stc
shrl
shll
push
pop
xchg
sbb
fnstenv
mov
xor
cmp
mov
les
inc
pop
xchg
xchg
ds
jge
push
xor
xchg
push
lcall
mov
cli
fcmovnb
movsb
popf
insb
add
mov
push
push
xor
ds
xchg
sub
rcl
nop
xchg
dec
cmp
mov
sbbb
outsb
adc
xchg
int
dec
jg
mov
divb
xor
push
in
jo
mov
adc
lcall
outsl
lea
mov
jnp
mov
enter
add
test
mov
mov
aaa
push
mov
repz
sbb
mov
mov
dec
fistps
lock
cmpb
sub
clc
push
call
add
xor
loopne
lock
cmpb
sub
clc
push
call
add
xor
loopne
lock
cmpb
test
sbb
call
add
xor
loope
lock
cmpb
sub
sbb
or
fdivs
ja
cwtl
push
fbld
ja
cmp
pop
sbb
pop
or
jge
imul
clc
lods
add
cmp
dec
or
sbb
mov
int
std
shrl
int
fwait
lahf
jmp
xchg
and
cltd
mov
test
scas
fisttps
adc
insb
pop
dec
and
cmp
xchg
fisubs
mov
filds
clc
and
mov
repnz
out
mov
cltd
push
pop
bound
fldl
icebp
mov
push
jb
adcl
sub
hlt
xchg
insb
xchg
adc
mov
int
lods
push
call
or
sbb
pop
loop
or
dec
pop
bound
mov
lods
pusha
pushf
and
sarb
shl
rorl
xchg
pushf
xchg
fnstsw
jge
xchg
lods
clc
mov
rcrb
ffree
xor
sahf
loop
cmp
jmp
out
xchg
test
xor
or
fnstcw
insl
sbb
mov
std
mov
shll
adc
pop
inc
sub
popa
push
fadds
imul
mov
out
iret
mov
call
imul
sub
push
das
dec
aas
call
fdivrl
mov
hlt
mov
add
cmp
push
popa
outsb
xor
dec
std
mov
int
mov
fisttpll
sub
cmp
pop
or
lods
fstpl
lods
in
popf
fisttpll
jnp
pusha
jecxz
sbb
xchg
adc
frstor
adc
sub
outsb
stc
dec
fsts
notl
cmpsl
jnp
sbb
cmpsb
and
rcrl
push
fsubp
pop
or
ja
pop
mov
cs
sbb
pop
fidivrs
xchg
mov
xor
sub
mov
inc
insb
xchg
cwtl
shr
pop
outsb
out
shlb
jmp
stos
rcr
xchg
loopne
rcrl
faddp
icebp
test
shlb
cld
add
icebp
sub
fistps
push
push
subb
pop
inc
xor
les
sti
xchg
jge
jno
popa
arpl
add
sbb
push
ljmp
inc
ljmp
lods
sbb
addr16
or
ret
lahf
ja
jo
rcrl
mov
mov
mov
mov
add
shll
ljmp
push
scas
push
popa
xor
rcrl
add
dec
inc
rsqrtps
ja
clc
sbb
icebp
or
fsts
loope
out
jb
psubq
call
xor
lds
adc
test
psrlq
mov
adc
jae
add
push
jo
mov
call
divb
scas
pop
pop
iret
push
adc
add
jle
push
adc
xchg
mov
push
and
jbe
cli
mov
nop
mov
outsl
out
xchg
enter
add
cmpb
jb
lret
test
cmp
push
enter
jecxz
cmp
xor
adc
lods
addr16
mov
xlat
roll
into
push
and
sub
jnp
inc
testb
fs
or
iret
jne
aaa
jecxz
or
jmp
xchg
testb
dec
xor
mov
adc
push
cmpsb
hlt
into
push
mov
ds
std
daa
lea
cmp
sub
pop
loope
jb
sub
mov
push
cmpsb
inc
mov
bswap
add
xor
xchg
adc
and
jmp
insl
pop
jbe
mov
ja
lahf
das
rcll
cmp
test
fstps
xchg
scas
pusha
aaa
imul
xlat
pop
or
jnp
adc
sbb
out
mov
mov
sahf
xchg
mov
ret
cmp
sahf
mov
test
mov
cwtl
sahf
cmp
sbb
decb
ljmp
mov
inc
push
and
xor
push
inc
xchg
xchg
dec
mov
and
xor
jns
popa
fildll
dec
imul
inc
outsl
stc
test
and
in
xchg
fnsave
mov
ljmp
out
and
mov
test
xchg
stos
mov
js
popl
mov
roll
sub
mov
jb
xor
dec
cmp
mov
js
inc
jg
test
stc
add
movsl
cmp
addb
call
mov
xchg
pop
bound
xor
movsb
outsb
fwait
sbb
or
mov
mov
jae
adc
int3
mov
in
or
inc
fnstcw
xchg
dec
dec
bound
pop
lahf
pop
sbb
sub
cltd
insl
and
repz
in
lahf
or
in
out
push
push
xchg
int3
pop
les
jle
insl
aaa
cwtl
lret
inc
add
dec
sbb
sahf
iret
add
pop
xchg
aad
mov
xor
jo
in
pop
mov
xchg
dec
xchg
or
mov
aad
insl
lea
test
push
mov
xor
xchg
mov
pop
incb
sbb
inc
std
xchg
pop
aad
fisubrs
mov
mov
iret
in
mov
insl
jecxz
push
xor
in
dec
mov
test
xchg
pop
aam
jnp
jno
jge
aad
fcmovnb
mov
inc
in
inc
in
cmp
movsl
pusha
mov
jecxz
pop
lock
scas
inc
sbb
lahf
adc
sub
sbbb
adc
dec
sbb
inc
mov
aas
push
jmp
lcall
pushf
or
lock
dec
sbb
add
jbe
fimuls
xchg
mulb
pop
sbb
mov
stos
mov
mov
inc
add
or
movsb
jo
lods
xchg
pushf
xchg
jle,pn
jo
push
dec
lret
adc
mov
lds
out
cmpsb
inc
fucomip
mov
add
int3
dec
int
hlt
cmp
pop
mov
pop
dec
fldt
fbld
popa
mov
jnp
inc
cmp
imul
or
test
scas
mov
cmc
lcall
out
xchg
fsubr
cmp
jo
mov
lahf
jns
mov
notl
std
fsubrp
or
int
aas
pop
adc
in
mov
insl
or
mov
out
mov
out
cmp
lods
mov
cmp
sbb
xor
dec
jnp
movsb
imul
repnz
jp
mov
push
dec
shl
push
fstp
mov
out
or
fcmovnu
mov
push
jge
mov
xor
push
loop
lds
sbb
lods
inc
and
shll
enter
xchg
inc
xchg
dec
xor
sti
rcll
xor
in
or
insl
mov
push
sbb
int3
mov
mov
cmp
orb
shl
push
gs
popl
hlt
jl
sub
push
ja
or
jns
sub
xchg
push
or
aad
lock
mov
mov
mov
shlb
lea
add
mov
ret
dec
jo
sub
dec
cmp
and
sbb
test
aaa
aaa
sbb
fldcw
scas
movsl
dec
test
nop
ret
scas
fiadds
xor
inc
xchg
loope
nop
sub
icebp
pop
mov
clc
cltd
mov
or
sbb
cld
mov
sarb
mov
orl
add
xchg
jg
repnz
imull
insb
xor
sbb
adc
addr16
or
mov
inc
lcall
stos
cmp
pop
repz
mov
cmpsb
leave
lcall
push
das
stc
inc
adc
cmp
inc
fs
pop
inc
sbb
jge
add
inc
xor
and
cmp
xchg
stos
adc
mov
in
adc
mov
je
scas
jae
out
mov
pop
xor
inc
jno
stc
jmp
aam
jnp
add
sbb
insl
btl
adc
and
xchg
dec
lods
jmp
or
sbb
mov
cmc
data16
jbe
xchg
or
fstps
rolb
loope
movsb
lods
inc
bound
sbb
pop
cmp
ds
popf
push
add
in
pop
stos
dec
mov
pop
pop
mov
test
pop
je
cwtl
or
cwtl
out
dec
push
js
enter
clc
ds
push
sbb
loopne
mov
xor
fisubrl
rclb
cmpsb
jne
inc
jmp
nop
lea
icebp
adcl
jle
jl
add
pop
fwait
hlt
pop
or
xchg
imul
jl
or
lock
mov
imul
movb
xchg
add
movsb
mov
mov
mulb
adc
cltd
ret
movsl
or
pushf
pop
das
lahf
filds
xchg
cs
or
sub
outsb
js
adc
pop
dec
push
add
loope
mov
movsl
jo
out
lret
dec
nop
sahf
push
pop
mov
addr16
mov
or
dec
arpl
rorb
mov
ds
mov
imul
push
mov
les
lcall
cmc
orl
aam
mov
mov
push
cmp
movsl
in
inc
jns
popa
js
or
outsl
sbb
adcl
std
cmp
cmp
mov
fmulp
add
xchg
add
push
pusha
mov
jmp
in
pushf
jg
cli
test
pop
das
jo
repz
in
pop
lds
inc
mov
mov
dec
js
fadd
jb
aad
bound
xchg
into
filds
lods
xchg
pusha
push
or
fnstsw
mov
cmpsb
repz
lods
dec
test
pop
test
jecxz
mov
or
xor
mov
push
adc
jmp
mov
sbb
xchg
or
xchg
mov
jns
stos
fistpll
loopne
and
or
out
xor
or
push
in
daa
imul
sbb
mov
in
push
sub
pop
fsubs
test
rclb
mov
sbb
jecxz
iret
cli
loope
fisubrl
in
repnz
push
mov
mov
adc
aas
inc
xchg
sub
lods
mov
or
push
aam
jp
inc
push
mov
bound
push
repz
push
mov
mov
add
pop
mov
mov
aam
xchg
sti
jno
xor
sbb
in
mov
xor
aaa
ret
sar
call
mov
xor
add
pop
push
add
andl
xor
mov
fisubrl
adc
in
hlt
int
mov
lods
cltd
mov
call
les
out
mov
pop
sbb
adc
xor
ja
shl
imul
add
and
mov
mov
sub
mov
add
and
adc
out
int3
xorl
mov
insl
mov
cmp
adc
cmpsb
stc
mov
les
into
jmp
jae
loopne
xchg
push
notb
iret
sbb
xor
mov
xchg
push
loop
sbb
rcrb
pop
ret
ret
push
inc
mov
push
add
cmp
ret
xchg
test
and
or
xor
jns
jno
dec
pop
call
push
lcall
loopne
cmp
scas
push
stos
xchg
fwait
lahf
loopne
in
aad
add
mov
fs
cmp
adc
cs
inc
outsb
jo
adc
test
outsl
mov
jns
push
js
pop
jmp
push
inc
lret
push
fisttpll
xchg
insl
mov
push
cmp
inc
bound
test
incb
stc
movsl
sub
push
add
inc
lea
xlat
sub
dec
loop
adc
testb
mov
lods
jp
les
or
rolb
lock
cmpsb
sub
push
pop
dec
xchg
sbbl
aaa
jp
iret
cld
hlt
dec
daa
aaa
jb
in
call
in
pop
gs
add
ret
push
adc
xchg
pop
fwait
mov
xor
pop
mov
sub
adc
leave
lock
icebp
adc
jae
cli
mov
sbb
test
xor
pop
and
pop
jp
and
movsl
je
hlt
imul
xor
loope
mov
lods
cwtl
mov
gs
sub
insl
mov
call
loop
jb
rol
mov
sbb
inc
jmp
out
mov
dec
xchg
mov
mov
and
in
adc
mov
hlt
aam
icebp
rclb
icebp
lret
push
aas
imul
in
bound
jle
call
outsl
cmc
push
cmp
mov
mov
mov
and
and
adc
pop
outsb
nop
cld
push
pop
pop
sarl
sti
mov
mov
cld
xor
loopne
and
pop
or
jge
negl
xchg
mov
and
xchg
stos
inc
popa
rclb
inc
mov
jmp
out
enter
adc
xchg
add
pop
scas
jge
mov
lcall
aad
test
rcll
add
stos
cmpsl
fistl
int3
aam
push
mov
ret
dec
xor
pop
sub
aaa
outsl
and
jbe
push
xchg
outsl
mov
jge
sbbb
cmc
ss
cld
mov
xor
dec
push
andl
push
mov
jbe
push
jg
xchg
je
push
xchg
pop
in
pop
sti
xchg
pusha
push
inc
mov
lods
push
orl
mov
push
shll
scas
jmp
add
or
xor
call
neg
mov
data16
cmpsl
cmp
popa
mov
xchg
icebp
aas
xor
pushl
stc
jmp
rolb
div
out
test
mov
insl
out
cmp
mov
jecxz
push
pop
das
inc
pop
and
mov
subb
cli
sub
xor
and
sbb
rcrl
add
xor
or
stos
dec
fcoml
mov
cs
mov
insl
push
sub
push
icebp
add
push
inc
inc
push
sbb
mov
icebp
push
std
dec
cmp
les
out
insb
out
mov
lea
repz
mov
ja
mov
and
mov
loopne
jb
xchg
inc
lret
push
pushf
std
mov
rorl
ds
xchg
lret
mov
mov
mov
dec
sbb
lahf
pusha
dec
notl
jl
enter
fcomps
xchg
cmp
imul
and
push
push
or
andl
xchg
or
push
ret
push
idivl
xor
pop
divb
inc
jb
or
jg
push
mov
xor
jns
or
lds
imul
xchg
out
adc
outsb
rol
fwait
test
add
and
cli
scas
push
stos
jg
lahf
xchg
decb
sbb
jnp
hlt
stos
test
push
cld
xchg
pop
fiadds
inc
stos
divb
lods
jmp
xchg
addl
rcrb
adc
inc
loop
movsl
imul
nop
push
sbb
rcrl
adc
inc
aad
es
add
stos
cmpsl
inc
mov
fisttpl
dec
mov
insl
fidivs
insl
mov
mov
fcmovne
stc
mov
fidivs
aas
out
inc
aad
lret
test
sub
iret
loopne
out
jmp
fldl
pop
jae
adc
mov
pop
insb
push
jae
adc
mov
dec
lcall
mov
inc
gs
sbb
inc
mov
cmp
stos
push
xor
fsubrs
fstpl
mov
ret
mov
test
or
jmp
cmc
call
scas
xchg
push
lea
and
dec
in
jmp
cmp
xchg
mov
test
insb
sbb
inc
mov
and
pop
mov
cmpl
jno
int3
add
mov
mov
push
adc
clc
xchg
cmc
aad
adc
mov
loop
cmp
popa
adcb
and
ja
not
shll
add
repnz
lods
out
xchg
hlt
clc
addr16
inc
call
imul
xorb
or
add
cmp
call
ficoms
fnop
jecxz
js
adc
inc
add
loope
ret
push
lods
flds
jnp
scas
mov
jge
into
movsb
mov
lret
je
push
pop
pusha
imul
lods
in
pop
mov
xchg
mov
rorb
mov
push
adc
in
sub
lret
aad
aad
sub
mov
jmp
das
jg
add
inc
push
lret
jp
mov
push
xor
cmp
imul
mov
mov
adc
adc
int
lahf
mov
xchg
jg
cmp
push
insb
adc
sbb
sahf
mov
mov
fcmovne
adc
std
cltd
fsubl
mov
test
leave
and
cmp
es
mov
aaa
jecxz
xchg
add
mov
decl
mov
aad
or
sub
mov
in
jge
mov
fists
pop
daa
fadds
lds
mov
adc
mov
fldenv
and
addr16
fisttpll
cmp
loopne
loop
out
push
and
dec
jp
es
imull
int3
in
out
stc
cmp
scas
xor
jge
ret
cmc
shr
leave
pop
sub
out
mov
mov
mov
xchg
pop
lock
ljmp
sbb
mov
xor
outsb
sub
call
adc
mov
dec
jmp
sbb
ja
loopne
lds
push
testb
mov
xor
and
loop
cs
mov
std
pop
pop
push
and
adc
sbb
push
fwait
jns
ja
mov
add
ss
aas
into
cs
movsl
sarb
lea
jle
imul
mov
xor
into
insb
push
sbb
sbb
dec
pop
iret
testl
mov
pop
rcll
out
js
mov
xchg
push
pop
test
mov
mov
inc
push
dec
pusha
push
adc
leave
loope
mov
inc
xor
jmp
ss
ret
test
in
pusha
sbb
mov
iret
mov
pop
xor
push
mov
stos
pop
lret
rcrl
dec
xchg
sbb
mov
pop
xor
inc
lahf
pop
sub
adc
mov
pop
stos
push
push
ds
scas
inc
push
mov
inc
and
int3
and
dec
push
cmc
cmpsb
dec
mov
daa
inc
divb
mov
sub
pusha
adc
mov
add
jp
scas
int3
call
pop
int3
xchg
fsubrs
ljmp
xor
shll
outsl
dec
scas
repz
aaa
jns
adcl
dec
adc
mov
dec
sbb
mov
and
mov
sub
xchg
sbb
inc
add
imul
addr16
movsl
push
sarb
push
lock
in
sub
cld
sahf
bound
push
ss
push
stc
mov
mov
and
push
mov
rcl
arpl
add
xlat
sbb
scas
jo
mov
nop
cmp
lea
pop
mov
cs
vpsraw
adc
mov
add
ret
jne
dec
addr16
dec
mov
jbe
mov
cmp
sub
shl
out
in
rcr
fcmovu
shrb
test
fisttps
stos
or
xor
push
insl
faddl
and
jp
test
sub
push
subb
fldcw
mov
mov
ret
lods
enter
aaa
faddl
icebp
add
out
movsl
andb
loop
mov
jbe
pop
aad
pop
negb
mov
mov
pand
push
dec
loop
jl
arpl
cwtl
cld
adc
pop
mov
xorb
lret
ret
add
dec
and
push
sarl
mov
xor
inc
movsb
test
sbb
orb
call
out
dec
ljmp
or
pop
pcmpgtb
xor
xchg
lods
enter
stos
mov
dec
movsb
jmp
dec
dec
fwait
mov
mov
jl
jp
in
popa
mov
mov
icebp
pop
imulb
mov
inc
aad
mov
ljmp
push
and
xor
test
mov
sahf
jno
dec
push
jo
cmpl
int3
and
inc
cs
loope
jmp
mov
cmp
adc
insl
pop
les
mov
iret
xor
xor
pop
out
inc
fnsave
sti
push
or
dec
pop
test
fiadds
in
std
pushf
mov
lods
and
sub
andl
les
dec
pop
mov
mov
fucomip
xchg
add
pop
cmp
dec
pop
xchg
cs
mov
pop
dec
jns
les
jp
jne
add
cs
stos
sahf
mov
fdivp
mov
xchg
aaa
jns
insb
mov
loope
dec
into
mov
or
dec
push
das
pop
lods
fldl
sbb
mov
lods
pop
or
stos
sub
pop
out
push
sbb
dec
push
clc
dec
mov
rol
sub
lods
inc
mov
out
andl
mov
leave
or
clc
fcoms
loope
popa
and
jbe
mov
and
inc
pop
mov
clc
pop
and
pop
aas
mov
sbb
orl
add
insb
xor
pop
lret
jne
xchg
pushf
add
xchg
cmp
in
cmp
mov
xchg
mov
pop
lret
scas
sub
icebp
or
shrl
clc
imul
bnd
sub
jbe
loop
lret
das
jno
in
and
orb
fldl2e
pop
jge
pop
push
xchg
xchg
bound
dec
jb
outsb
cs
int3
or
pop
jmp
sbb
sbb
aad
mov
xchg
adc
dec
mov
daa
sub
dec
mov
ss
lds
inc
mov
cmp
xchg
int
inc
mov
pop
sub
xor
je
mov
xor
idiv
jns
call
sub
add
xchg
add
xor
idivl
aad
ret
adc
and
popa
or
mov
cmp
sbb
mov
ss
stos
push
out
jbe
outsl
adc
sbb
dec
or
sbb
mov
int
mov
fisttpll
sub
cmp
pop
or
lods
fstpl
lods
in
popf
fisttpll
and
jge
push
sbb
mov
int
mov
aam
sub
xor
pop
stc
insl
dec
cmp
fisttpll
pop
ja
int
lret
xchg
bound
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
movw
rcll
stc
aas
hlt
ss
inc
mov
ja
pop
sti
push
lret
daa
and
cmp
or
sbb
imul
mov
inc
mov
ja
pop
lahf
pop
lret
daa
icebp
mov
idivl
xor
stos
jns
or
pop
cli
ja
push
cmpsl
jae
inc
test
push
sbb
loopne
ds
dec
movsb
pop
push
cwtl
pop
mov
and
add
daa
iret
insb
xchg
xor
xchg
or
jg
push
das
cli
inc
aaa
je
jo
outsb
push
dec
daa
push
lret
jnp
sub
or
fwait
fwait
jecxz
or
mov
inc
test
adc
jbe
cmp
test
outsb
cmp
jbe
dec
jecxz
xchg
mov
cltd
mov
stc
inc
fcompp
and
scas
pop
sub
xor
or
adc
imul
push
je
cwtl
inc
sbb
sti
push
fwait
es
scas
inc
cmp
hlt
out
and
adcl
inc
inc
mov
ja
clc
sti
jecxz
xor
aaa
sbb
cmp
or
ja
imul
mov
inc
sub
test
pop
in
lret
daa
mov
add
mov
push
pop
ret
lret
fisttpl
cli
sbb
movsl
pushf
push
sub
shlb
daa
enter
add
cmp
xor
sbb
push
lcall
xchg
pop
subl
jnp
dec
cmpsl
pop
mov
inc
mov
ja
pop
sti
pop
lret
daa
sub
cmp
or
sbb
imul
mov
inc
mov
ja
pop
sti
pop
lret
daa
sub
inc
mov
inc
sbb
inc
jbe
sbbb
test
sarl
clc
sarb
pop
adc
lahf
fucomi
lret
andb
fistpl
push
xchg
sub
mov
jecxz
popw
sahf
cmpsl
xchg
xchg
mov
sub
xchg
inc
fistl
stos
cld
or
sbb
mov
lods
enter
std
lret
ss
adc
out
mov
sbb
xor
test
dec
sub
mov
mov
mov
cs
sub
push
mov
sbb
sbb
push
sbb
out
ficomps
in
mov
cmp
sbb
movsl
sbbl
mov
je
rcrl
movsl
xor
cmp
lock
fwait
stos
decb
fs
in
jne
testl
inc
arpl
mov
in
imul
mov
lret
or
scas
xchg
cltd
inc
or
dec
add
lods
loopne
gs
jp
xor
dec
xchg
push
push
pushf
vpmuludq
or
xor
stc
jl
mov
cmpsb
mov
imul
lret
aaa
mov
rcrb
and
cmpsl
test
in
pop
mov
and
loopne
dec
inc
stos
pop
mov
sub
push
rorb
sub
lret
jle
aad
dec
jno
xchg
gs
aas
dec
scas
mov
mov
mov
cmp
lock
repz
and
cmp
in
mov
pushf
or
repz
cmp
xchg
aas
mov
int3
ret
lret
cmpsb
mov
jnp
inc
scas
push
jle
rolb
out
push
dec
jle
inc
pop
push
out
loopne
mov
out
leave
sub
jmp
cmp
call
in
xor
push
movsb
cmp
int3
dec
mov
push
scas
insb
fstps
fildll
ds
jnp
inc
dec
leave
push
mov
add
mov
jmp
out
add
fsubl
xorl
shll
stc
or
sub
fidivrl
fmull
add
push
sub
jl
gs
pop
and
mov
testl
js
sub
repz
popl
sarl
andb
data16
test
and
std
nop
fucomip
push
mov
dec
pop
dec
jae
jecxz
pushf
out
jmp
jno
popf
rolb
pop
mov
lret
add
rcll
jbe
rcr
mov
mov
push
jl
push
and
xor
test
imulb
mov
xchg
incb
jb
stos
or
xor
pop
add
cs
lcall
and
in
mov
mov
int3
das
adc
mov
ja
aas
mov
outsb
in
cmp
mov
jns
rolb
push
loopne
and
xor
xchg
sbb
xor
fadd
jecxz
lock
leave
aam
push
and
scas
mov
sahf
sbb
lods
cmp
stc
mov
repnz
mov
xlat
pop
sbb
sbb
fs
icebp
mov
dec
push
jg
add
scas
xor
xchg
dec
popf
xchg
cmc
arpl
in
je
add
stc
dec
push
into
and
mov
loopne
mov
scas
int3
aam
test
lds
add
lods
in
int
outsb
inc
lea
ss
jmp
sbb
loope
std
fsubs
loopne
jae
or
xchg
stos
ret
and
or
ds
adc
add
dec
movsl
nop
mov
mov
mov
scas
cmc
adc
jecxz
cmp
inc
mov
and
mov
scas
and
pop
pushf
fidivs
aas
test
mov
lcall
jnp
jbe
jbe
icebp
xor
cs
daa
insl
popa
mov
arpl
sub
add
or
mov
inc
cs
loopne
dec
js
int3
fnsave
shrb
xor
push
xchg
data16
shrl
xchg
cmp
cwtl
test
mov
stc
sub
stc
ljmp
sbb
cmc
adc
jno
shll
jb
pop
iret
jmp
adc
cmp
push
mov
into
lahf
std
inc
push
pusha
ja
jo
aas
roll
in
mov
add
andl
push
bound
xor
mov
lods
add
fld
lods
mov
adc
pushf
out
sub
notb
popl
aam
loop
sbb
xor
xchg
test
stc
das
cmpsb
mov
jo
inc
adc
imul
mov
xor
dec
fmull
popa
rorl
jmp
mov
fdivl
mov
cmpsl
add
xchg
or
outsb
mov
lcall
ljmp
mov
outsb
fnstcw
lods
mov
std
inc
mov
stos
dec
cli
mov
and
out
sbb
jno
cmc
or
rcrb
scas
cli
mov
fwait
sbb
aam
mov
lcall
pop
out
scas
xor
dec
dec
pop
pop
out
popf
shl
hlt
jl
out
mov
or
shrb
out
xlat
frndint
clc
xor
mov
sub
push
xchg
inc
aas
sbb
fisubs
xor
outsl
jnp
mov
fadds
inc
call
fstpt
jl
in
adc
ficoml
dec
fwait
test
repnz
scas
add
add
imul
xor
and
push
pop
imul
je
cli
insb
leave
testl
mov
dec
out
mov
dec
js
sub
xchg
push
sub
or
xor
or
ljmp
adc
insl
xor
call
movsb
test
pop
dec
imul
sbb
out
arpl
out
cs
adc
inc
push
gs
cltd
adcl
mov
ljmp
fld
sub
test
mov
xchg
stos
add
neg
push
mov
cmp
cmp
dec
cwtl
out
mov
adc
dec
or
jmp
test
inc
loope
mov
in
jp
sub
adc
mov
iret
inc
push
mov
sahf
jno
jp
outsl
mov
push
fwait
subl
in
stos
pop
xchg
loope
dec
jg
fcoml
sub
sbb
mov
aaa
ja
ds
rolb
add
cmpsl
cmp
inc
insl
aam
fs
add
push
shlb
ret
xchg
xchg
aas
inc
xchg
dec
nop
shlb
mov
mov
andb
call
sbb
dec
sub
add
fstps
or
and
jae
dec
adc
outsl
scas
cmp
roll
xchg
iret
pushl
pop
out
rol
mov
out
scas
jmp
adc
and
rcll
pop
lds
pop
movsl
sahf
fdivrs
inc
shlb
jno
push
into
lods
cmp
mov
das
imul
xor
or
aad
pop
xor
fwait
mov
in
mov
lds
mov
lds
dec
fisttpll
fcom
sub
adc
cs
jo
jbe
sti
inc
push
decb
jae
mov
fs
mov
xor
les
pop
pop
add
and
mov
xchg
cmpsb
mov
xchg
inc
movsb
jmp
out
out
int3
mov
jae
js
enter
mov
mov
out
scas
pop
daa
imul
outsl
sub
mov
mov
fldcw
xchg
mov
aad
sub
or
xor
jne
xlat
les
push
cmp
xchg
aad
testb
in
in
std
jne
sbb
call
or
mov
xchg
and
mov
and
dec
ss
mov
adc
push
out
cld
mov
mov
rcrl
insb
repnz
subl
mov
daa
jecxz
adc
in
mov
xor
in
cli
xchg
loop
adc
imul
movsl
pop
sub
mov
mov
and
fimuls
or
data16
daa
fs
mov
dec
lods
xchg
out
jns
jbe
jo
in
daa
push
mov
movsb
push
scas
xchg
cli
sbb
cmp
lea
out
jne
mov
icebp
mov
in
fimull
inc
cmp
orb
push
push
scas
stos
rclb
or
rolb
lods
fucom
orb
daa
cmp
inc
mov
sbb
roll
in
icebp
pop
push
cmpsl
shlb
movb
in
lret
int
jo
sbbb
pop
dec
xchg
sbb
xor
add
pusha
mov
jo
or
arpl
sub
aam
xchg
jp
iret
setle
shrl
adc
bnd
or
hlt
jl
pushl
cs
xchg
fucom
xchg
sub
or
ss
cmp
fs
repnz
or
and
sub
xor
xchg
imul
movsl
rclb
orb
xor
daa
pop
gs
inc
loop
pop
in
icebp
imul
adc
out
cmp
cld
xor
xrelease
mov
sub
hlt
xor
nop
sbb
outsl
sti
sti
fnsave
aas
pop
inc
int3
add
adc
dec
imul
lret
sub
and
test
decb
decl
dec
mov
sbb
outsb
test
lods
pop
ja
or
jl
add
dec
ds
psubsb
xchg
jns
testl
and
dec
sti
xor
fnstsw
mov
cmp
sbb
dec
je
arpl
dec
xor
dec
cmp
and
pop
fstps
aad
inc
fldcw
sub
xchg
pop
and
jmp
xor
icebp
mov
nop
mov
insb
rorl
jnp
add
pushf
mov
jp
add
fdiv
inc
mov
and
mov
dec
sub
out
inc
inc
dec
repnz
filds
sub
pop
test
rorl
or
add
cmp
push
xlat
and
popf
nop
ljmp
leave
mov
xchg
sti
dec
mov
pop
sti
rol
scas
test
je
popf
dec
pop
addl
jns
mov
mov
xor
outsb
mov
fisttpl
mov
fs
jl
idivl
push
inc
add
insb
jge
inc
clc
fstpt
outsb
in
into
sbb
and
inc
inc
stos
or
and
sbb
xchg
nop
inc
mov
and
int3
mov
or
cltd
push
push
cli
out
xchg
jp
dec
add
push
pop
xor
and
enter
and
fcomp
add
ss
cmp
lods
in
pop
mov
jno
mov
jecxz
ret
into
mov
lods
mov
sub
mov
jbe
dec
daa
leave
loope
addl
lods
sti
inc
test
and
cld
popa
aas
je
mov
rcl
aam
sbb
mov
cmp
and
xor
mov
or
mov
sti
xor
loope
pop
adc
jb
and
mov
and
push
call
rorl
cmp
xchg
mov
ret
jb
shll
std
xchg
sbb
xor
push
sub
adc
mov
cmp
mov
jno
out
cmp
cmp
push
jbe
in
rol
jo
push
fsubr
cmp
jb
cltd
add
add
imul
mov
ret
push
dec
daa
jne
pushf
sub
inc
pop
mov
or
ds
out
mov
movq
mov
div
scas
out
out
movsb
fs
fisttpl
dec
pop
mov
mov
push
dec
mov
fdivs
pop
repz
arpl
fildl
mov
add
in
mov
xchg
test
bound
cmp
push
arpl
loop
xchg
jbe
aad
or
sub
mov
movsb
inc
ror
adc
lret
cmp
xlat
ret
adc
sbb
sub
ja
sahf
insl
fldcw
push
sahf
xchg
adc
adc
fistps
lcall
add
inc
out
add
sbb
roll
cmp
jg
sahf
rcrl
cwtl
mov
add
mov
push
mov
dec
mov
addr16
sbb
mov
adc
lahf
dec
shlb
out
or
imul
cltd
pop
push
std
loopne
lods
in
adc
popf
jg
sub
loopne
lret
insb
sbb
dec
mov
fdivl
cmpsl
rcrl
nop
xchg
in
lret
clc
sahf
popf
std
in
dec
pop
insb
lret
add
nop
clc
xchg
sbb
mov
dec
xor
mov
aaa
test
andb
pop
push
imul
push
cmpsb
dec
cmp
enter
bound
cmp
nop
cltd
pushf
push
lock
adc
lcall
pushf
mov
mov
lock
xchg
inc
mov
lret
rcl
ljmp
scas
scas
fcoms
std
cld
mov
push
sti
in
cwtl
mov
cld
or
in
xchg
pop
faddl
ret
mov
push
or
mov
rcrb
jp
xor
sahf
mov
lock
mov
stos
nop
popf
pusha
test
bound
testb
fsubl
sbb
loop
pop
push
je
cmp
mov
mov
mov
dec
stc
dec
sub
xor
clc
jbe
xchg
push
mov
xchg
jmp
mov
in
mov
pop
jne
mov
out
idivb
adc
push
shrl
xor
cmc
aas
xchg
pop
movsl
sbb
or
add
loopne
lret
cmp
stc
mov
push
push
movsb
ret
out
clc
aas
push
icebp
xchg
fneni(8087
mov
lea
iret
mov
xchg
pop
cmpl
push
call
iret
stos
test
dec
pop
dec
loope
mov
dec
imul
cmp
stos
movsl
xchg
and
xor
rcll
cld
arpl
dec
add
cs
cmp
les
lock
and
inc
mov
xchg
pusha
pop
adc
loop
addr16
add
xchg
xor
adc
jmp
cs
sub
adc
mov
lsl
gs
ds
inc
pop
mov
pop
push
dec
in
or
mov
push
enter
inc
cwtl
sub
outsb
icebp
sub
sub
pushf
xchg
jb
adc
js
xchg
and
adc
test
orb
push
ljmp
pop
incl
mov
pop
mov
iret
ret
xor
decb
aad
imul
xchg
pop
ret
in
and
mov
int
mov
jns
lods
cmp
dec
add
in
cmp
in
hlt
cmp
aad
sbb
jl
mov
pop
xchg
xchg
ja
sub
sbb
xchg
pushf
inc
mov
test
std
mov
jb
mov
push
roll
rcl
call
push
jbe
out
push
mov
and
lods
mov
jmp
rcrl
loope
xchg
out
cs
insb
xor
xchg
cmpsl
ljmp
sbb
cmpsl
inc
mov
aas
loop
xchg
jmp
jae
mov
inc
xchg
and
pop
or
imul
shrl
push
xor
pushf
sarl
dec
mov
adc
mov
or
sti
ret
and
test
dec
sarb
push
in
mov
js
mov
aam
push
mov
mov
popa
adc
andl
jb
pop
push
inc
and
fisttpl
push
test
xchg
push
orb
nop
sarb
dec
cs
sub
int3
stos
cmp
mov
cmc
pop
test
movb
iret
adc
push
mov
adc
iret
sahf
sti
jns
adc
pop
pop
out
mov
cwtl
adc
rolb
fidivs
arpl
roll
cmp
push
xorl
iret
sub
fidivrl
enter
dec
shlb
bound
add
nop
push
iret
cmp
sub
jbe,pn
and
shlb
dec
xchg
cmc
and
loope
lcall
add
insb
outsl
inc
xor
jge
stc
mov
jp
orb
adc
xchg
ljmp
xchg
jmp
mov
hlt
call
gs
or
sbb
add
or
in
fsubrs
repz
lret
mov
stos
jecxz
mov
js
movsb
scas
roll
pop
jae
ret
aam
cltd
pop
mov
sub
sbb
xchg
mov
or
dec
ss
inc
test
repnz
mov
add
push
in
cmpsl
rclb
cmp
jl
add
inc
inc
enter
mov
loopne
ret
cmpsl
pop
push
sub
out
cltd
and
mov
cmp
dec
enter
xor
add
mov
loop
dec
and
sbb
jno
cmp
sbb
mov
xchg
dec
aam
pusha
xor
jecxz
mov
jae
mov
sbb
jge
mov
movsb
mov
xlat
push
mov
sub
in
or
sti
rcrl
jnp
scas
mov
mov
aas
jbe
push
and
push
or
mov
test
mov
lods
mov
mov
adc
lods
popa
mov
dec
xchg
inc
or
mov
jg
in
sti
pop
push
je
loop
xlat
cs
hlt
xchg
mov
mov
std
or
add
popa
imul
fmuls
into
add
stc
shll
lcall
lahf
mov
dec
or
jb
adc
lahf
imulb
inc
dec
dec
sbb
mov
in
insb
inc
in
insl
out
fdivr
cmpsb
lods
adcb
push
mov
jbe
lret
dec
aas
cwtl
pop
negb
ljmp
lods
add
aad
add
scas
lds
aas
sahf
outsl
sub
xchg
out
mov
or
push
repnz
push
push
js
ret
jo
into
mov
es
cwtl
mov
sub
mov
incb
adc
adc
nop
dec
fdivs
aaa
sub
xchg
inc
adc
incl
jae
shll
fdivr
mov
stc
pop
cmp
das
push
sar
adc
push
mov
lds
out
inc
push
sbb
mov
inc
mov
gs
pop
test
inc
test
sarb
mov
pop
sbb
dec
les
sbb
jmp
add
in
push
lea
fwait
pop
push
mov
or
lods
rclb
fsubrl
es
mov
pop
out
cmp
dec
test
cmp
ja
mov
ret
pop
cwtl
dec
iret
rorb
int
pop
lock
mov
inc
cmp
lds
xchg
push
iret
pop
or
sahf
sbb
cmc
pop
fs
movsl
jle
mov
adc
mov
fwait
mov
dec
adc
and
dec
mov
xor
movsb
mov
cmp
fcomip
and
ret
imul
test
mov
add
dec
into
hlt
shrb
xor
inc
add
and
imul
mov
and
mov
scas
leave
in
hlt
stos
cmpb
push
fadds
jp,pn
leave
shlb
fbld
int3
push
add
xlat
sub
insl
sub
out
jmp
and
into
inc
add
lret
dec
xor
sbb
leave
and
js
push
js
jno
sub
int
hlt
push
jo
inc
xchg
inc
mov
pop
or
out
xchg
andl
dec
out
arpl
push
rcrl
add
dec
pop
jns
adc
pop
call
pusha
adc
adc
mov
scas
jg
pxor
dec
jne
lock
popa
movsl
push
mov
call
lock
rclb
mov
repnz
out
outsl
sub
inc
push
or
clc
dec
pop
adc
es
adc
jg
jnp
cmpsl
inc
sub
ret
pop
mov
xchg
push
push
repz
sub
nop
mov
loopne
pop
push
jno
movsl
push
jo
dec
xchg
insl
add
mov
outsl
movaps
adc
stc
mov
aad
sbb
daa
add
sbb
test
outsl
cmp
sub
sub
fcompl
mov
jnp
jl
lahf
mov
mull
pop
mov
and
jecxz
into
bound
imul
popf
in
or
fbstp
mov
iret
xchg
mov
add
mov
mov
clc
pop
inc
cmp
rcll
mov
mov
pop
ljmp
sbb
add
outsl
dec
les
sub
cltd
loope
fstpt
lods
mov
pop
push
sbb
enter
jne
iret
out
adc
mov
jbe
mov
push
ret
repnz
dec
mov
xchg
xor
xchg
ss
int3
push
or
je
das
into
sti
sahf
mov
fs
and
inc
inc
mov
inc
gs
mov
pusha
and
scas
aad
adc
fcoml
fmulp
out
xchg
rcrb
push
xchg
add
hlt
xlat
mov
pop
imull
jnp
dec
cmpsl
pop
mov
inc
mov
ja
pop
sti
pop
lret
daa
sub
cmp
or
sbb
imul
mov
inc
mov
ja
pop
sti
pop
lret
daa
sub
cmp
sbb
sbb
push
jg
dec
cmpsb
pop
mov
inc
mov
ja
push
loop
iret
daa
jmp
xor
pop
xlat
and
repz
dec
stos
mov
fwait
add
and
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
push
nop
push
sub
daa
ficompl
fwait
xor
pusha
out
jo
inc
into
push
fisubs
push
nop
push
loopne
lock
rorb
and
adc
inc
into
push
fisubs
push
nop
push
loopne
lock
and
adc
pusha
mov
ds
aam
subb
sub
sub
mov
xor
cmpsl
call
pop
outsl
dec
pop
push
lock
mov
mov
fsubrp
popa
lahf
mov
pop
frstor
lock
push
xchg
test
jge
add
scas
fs
xor
inc
and
jo
shr
nop
dec
outsb
in
inc
cmp
fldt
jno
adc
xor
pop
stos
push
shll
push
scas
lock
xchg
ss
test
daa
xor
out
adc
dec
dec
inc
negb
xchg
and
add
dec
dec
rorb
ja
rcl
jno
popa
xor
std
push
add
cmp
push
loopne
lock
dec
rolb
scas
xor
pusha
divb
inc
aam
les
stc
jnp
insb
sbbb
and
cmp
rcll
mov
popa
mov
and
aad
in
cld
jno
outsb
mov
mov
fisubl
add
adc
test
mov
out
push
pop
lods
pop
lock
dec
rcrb
scas
xor
pusha
out
jo
inc
into
push
fisubs
push
nop
push
loopne
lock
dec
rcrb
scas
xor
pusha
out
jo
inc
into
push
fisubs
mov
xchg
sahf
lret
fwait
dec
stc
push
mov
cmpsl
and
iret
or
mov
mov
movsb
sub
and
inc
test
nop
enter
pop
leave
bound
das
pop
lds
in
into
imul
adc
dec
sub
fisttpll
pop
mov
or
fildl
sub
add
es
pop
xor
and
mov
add
adc
mov
cld
shrl
sub
es
pushf
rcll
leave
mov
stos
jae
js
cli
mov
dec
xchg
ja
adc
cmp
mov
pushf
xchg
cmp
or
leave
mov
sbb
push
aas
push
cmc
inc
and
sti
pop
mov
popa
stos
or
divb
mov
add
into
imul
mov
xchg
mov
ret
xchg
sbb
into
cli
in
ret
mov
outsb
dec
fldcw
inc
push
jp
js
inc
push
imul
dec
cwtl
aam
test
xchg
xorb
and
call
dec
xor
or
jno
cmp
xlat
lock
jns
fsubrs
popf
mov
add
mov
dec
icebp
fidivl
mov
lods
inc
ljmp
adc
push
cmpsl
pop
cmpsl
arpl
cmp
mov
jecxz
sub
push
push
je
nop
ja
out
xchg
loop
add
out
jle
or
sub
hlt
add
in
adc
or
icebp
movsl
push
mov
or
add
inc
sbb
ljmp
inc
inc
push
sbb
iret
aam
sbb
inc
lock
cs
pop
inc
pop
mov
jl
adc
inc
cli
popa
cmpl
stc
or
aam
stc
repnz
shlb
shrl
dec
int3
aam
sub
lahf
je
push
stos
into
dec
adc
or
repz
xor
push
and
mov
rsqrtps
jg
lret
jp
lret
dec
add
pop
mov
cmp
inc
jl
or
in
orb
in
int
dec
negl
xlat
mov
fcomi
add
lods
dec
cmpsl
ljmp
popf
or
sub
hlt
jae
in
cmp
mov
or
xchg
jo
repnz
add
cmp
or
adc
rcll
or
aaa
mov
outsl
aaa
lods
sahf
cltd
inc
add
dec
scas
in
pop
cmc
std
push
ss
xor
mov
pop
outsl
push
mov
cli
lret
pop
push
dec
stos
pop
jbe
stc
add
cmpsl
add
int3
push
std
inc
inc
rorl
cs
mov
or
aam
leave
scas
movsb
xor
jmp
push
push
cltd
leave
dec
mov
mov
mov
pop
mov
mov
sahf
rclb
push
rorb
movsb
in
aam
sub
xor
repnz
lods
fxch
cmp
addr16
out
ljmp
in
into
push
mov
xlat
jmp
orl
subl
lcall
and
jo
mov
jmp
mov
scas
nop
cli
sub
cmpsb
stos
test
dec
shll
mov
mov
push
sbb
jbe
test
repnz
lcall
testb
xchg
in
in
push
pop
jp
leave
xor
jecxz
lds
add
out
jp
int3
xor
xchg
mov
mov
in
adc
mov
test
das
cmpsb
ljmp
je
movsl
pop
imul
movsb
cmc
lret
inc
push
test
js
push
fdivrl
sbb
pop
or
call
pop
mov
or
lret
add
pop
loope
mov
loope
hlt
out
push
cmp
faddl
add
mov
sub
rolb
aam
addr16
jg
dec
imul
in
ljmp
push
mov
movhps
dec
pushf
jae
push
scas
aaa
jae
push
mov
rcrl
fsubrl
cwtl
or
push
jmp
adc
movaps
clc
cltd
outsb
aam
pop
and
and
dec
roll
popa
pushf
add
clc
mov
cmc
es
in
jb
je
test
jmp
lret
mov
stc
and
sbb
or
pop
fstps
jae
mov
jl
push
pop
rorb
lret
fstpt
addr16
fsubs
cmc
imul
add
jle
pusha
push
sub
shrb
scas
leave
mov
push
mov
sti
test
out
and
sbb
cmp
push
dec
ret
scas
cmp
cmpsl
xchg
mov
inc
mov
and
jl
xlat
std
inc
xor
and
scas
pop
outsb
jbe
arpl
mov
dec
loopne
mov
fidivrl
cmp
cmp
jg
xchg
lock
xor
mov
inc
xchg
pop
mov
das
mov
fcmovb
mov
fs
xchg
cmp
adc
dec
add
ss
pop
push
mov
xchg
mov
xorb
push
xchg
scas
push
inc
fs
ret
mov
cli
adc
aam
xchg
stc
jge
pop
cmp
inc
ret
cmp
pop
repnz
std
sub
jge
sbbl
or
lret
adc
test
subb
iret
outsl
jl
insl
aam
enter
sbb
movsl
icebp
cmp
js
push
lahf
shrb
leave
aas
adc
pop
scas
jg
ljmp
jmp
out
pop
repnz
popl
stos
lods
test
sti
inc
insb
ljmp
sub
jecxz
xor
ret
jno
sahf
rcrb
cmp
nop
jo
adc
jbe
and
stos
lds
shl
dec
call
adc
xchg
jo
sub
scas
pop
dec
daa
imul
inc
pushf
out
mov
cmc
pop
rcl
jge
in
or
sti
out
ljmp
sub
cmc
aaa
cli
xchg
mov
test
scas
mov
mov
mov
lock
sbb
test
pop
loop
inc
stos
push
mov
outsb
and
addb
ror
jnp
aad
loopne
cltd
clc
jle
cmp
adc
mov
xor
xchg
mov
mov
xlat
loopne
mov
icebp
or
in
push
and
push
push
call
pushf
xchg
push
ds
fstps
cwtl
sbb
xorb
inc
loope
xor
int3
lcall
push
sub
repnz
out
fwait
push
out
jmp
mov
subb
jp
in
loop
pop
dec
xchg
test
ficoml
sub
add
jge
pop
je
mov
adc
add
cmp
adc
mov
loopne
push
stos
sbb
mov
jae
call
mov
dec
lahf
mov
popa
xchg
into
subl
pop
jp
jge
sub
or
shll
in
xor
mov
xor
inc
dec
pop
cmpb
in
cltd
mov
or
pop
nop
xor
sbbl
xchg
inc
lds
dec
popa
push
cmp
in
xchg
icebp
pop
lods
dec
sbb
out
xchg
xor
mov
or
lcall
imull
inc
mov
lcall
lds
jle
cmp
mov
fidivrs
fmull
cli
fstl
mov
push
lods
int
mov
ljmp
push
mov
sub
jl
shlb
loopne
int3
cmpsl
jecxz
out
jmp
cmp
xchg
movsl
or
stos
ret
icebp
xor
mov
aaa
sub
aam
dec
mov
repnz
adc
into
adc
pop
cmpsl
sbb
pushl
shrb
push
arpl
outsb
add
shrb
ret
decl
rclb
xchg
lods
and
clc
add
sub
cmp
outsb
cmc
adc
pop
mov
mov
mov
mov
sbbb
xor
jnp
sbbl
lret
notl
stc
imull
cmp
and
in
lret
xchg
lock
out
xor
pop
add
jno
popa
jns
out
fldenv
sarl
hlt
push
out
aaa
adc
dec
stos
jle
aas
mov
inc
adc
fistl
je
and
pop
int
lcall
inc
lea
or
pusha
and
movsb
stos
adc
insb
cmovae
rcll
sti
mov
mov
loope
push
out
cwtl
cltd
dec
dec
clc
mov
xchg
xlat
mov
repnz
std
add
popf
lock
inc
xchg
lods
xor
lcall
mov
cmp
std
sub
mov
ds
outsb
out
sbb
jo
and
inc
mov
dec
pop
je
je
jl
push
xor
imul
and
xchg
adc
cmpsb
and
push
xchg
aad
xchg
sub
roll
ror
test
push
push
pop
mov
xchg
xor
mov
jno
mov
pop
and
mov
fwait
jno
jnp
scas
jg
idiv
aad
shll
cmp
dec
mov
or
jg
jb
test
dec
stos
push
scas
jns
aas
mov
repz
pop
mov
jecxz
scas
sbb
movb
in
out
sub
sub
xchg
sbb
push
pop
inc
push
push
mov
rcrl
lcall
adc
aaa
arpl
aas
pop
jge
inc
repz
adc
jo
jmp
data16
out
imul
outsb
daa
adc
mull
jecxz
and
xchg
mov
mov
int
inc
outsl
adc
daa
nop
sub
push
hlt
jo
sub
push
mov
loope
addb
in
mov
cmp
nop
pop
mov
inc
iret
scas
pop
out
stos
push
adc
dec
stos
js
cmc
arpl
test
lods
jmp
jae
loopne
scas
mov
dec
addb
mov
xor
aam
xchg
dec
mov
sub
out
hlt
or
xchg
sbb
enter
mov
test
call
pop
icebp
mov
jecxz
negl
pop
mov
sbb
jge
inc
xchg
lcall
lods
cli
jmp
rcrb
in
or
mov
mov
cmp
xchg
mov
mov
mov
mov
stc
sub
loop
fwait
push
jle
pop
push
faddl
dec
roll
frstor
add
lock
jo
imul
lea
fwait
or
mov
sbb
dec
xor
mov
mov
and
dec
test
xchg
pushf
inc
fistpl
outsb
xor
sbb
scas
das
sti
imul
cmp
clc
mov
mov
cmpsb
sbb
arpl
mov
mov
push
pop
push
jg
jae
in
cmp
lock
jp
jnp
sbb
mov
ret
xchg
and
es
lds
popa
lahf
mov
push
dec
add
adc
xor
lods
mov
pop
lock
dec
cmpsl
addl
adc
jge
cs
fsubs
jbe
or
pop
cwtl
xchg
jge
das
test
push
add
mov
cmp
inc
daa
inc
push
aas
int
dec
iret
jnp
and
sub
out
xor
mov
jo
loop
dec
sub
insb
cmp
out
jo
loop
lods
inc
mov
xchg
roll
test
fdivp
sbb
mov
sarl
cmp
mov
cwtl
and
cwtl
fldcw
mov
or
test
dec
sub
rclb
clc
ret
xor
and
pop
insl
inc
cmp
xor
ret
repnz
rcll
rcl
jl
push
or
jecxz
shlb
leave
rolb
inc
lret
push
jl
out
push
or
xchg
jno
jns
sub
lds
pop
mov
imul
cltd
adc
pusha
pop
mov
imull
frstor
test
lds
mov
or
push
push
push
pop
and
clc
cmc
and
cmp
arpl
outsb
addr16
sahf
jecxz
push
or
dec
sbb
pop
xchg
xchg
aaa
jmp
jo
xor
in
push
cltd
sbb
mov
les
rorb
sub
rcrb
lcall
int3
or
aad
push
aad
pop
jo
push
inc
loop
or
lcall
push
out
jg
pop
push
imul
int
les
push
or
icebp
mov
rcll
and
sub
inc
inc
and
jecxz
or
dec
cmpsl
mov
cmp
jb
subb
push
mov
jo
inc
mull
cs
js
rorb
push
out
pop
push
or
sub
add
out
adc
loope
cmpsb
loope
and
mov
int3
popf
xchg
cmc
aad
mov
aas
jp
and
mov
jno
xor
mov
adc
lcall
sub
sub
mov
mov
sbb
and
sbb
iret
outsb
out
inc
dec
jge
lock
sahf
mov
mov
fcomip
lcall
mov
pop
or
xlat
jmp
stos
in
in
mov
xchg
aam
xor
stc
fnstsw
mov
cmpsl
add
loopne
jb
lcall
arpl
cld
xor
dec
mov
inc
mov
mov
fucom
xchg
or
and
push
dec
adc
or
sub
mov
ljmp
inc
push
or
out
cmp
or
mov
mov
out
push
fwait
or
xchg
es
mov
jmp
push
inc
shrl
clts
and
sub
mov
int
and
mov
mov
lret
add
add
hlt
mov
adc
mov
sti
int3
rcr
add
lock
jge
push
jmp
and
in
jbe
out
cmp
cmc
jecxz
test
cs
arpl
lods
pop
icebp
mov
xor
lahf
into
xchg
push
stos
jp
hlt
sbb
ljmp
call
mov
or
test
int
inc
repnz
push
add
ret
nop
aam
push
and
movsb
cs
lds
jbe
add
fisttpl
xchg
test
pop
sbb
xchg
push
lods
push
imul
mov
mov
xor
maxps
xorl
lds
imul
mov
dec
xchg
lods
xor
test
decl
enter
jo
jmp
push
dec
lcall
fisttps
inc
subps
pop
insb
arpl
sahf
sbb
int3
sti
push
and
lock
lret
andb
push
movsl
shlb
pop
lcall
add
mov
repnz
mov
jno
int
outsl
cmp
and
mov
sti
pop
adc
rorl
sbb
in
out
sbb
jnp
inc
sarb
mov
xor
push
icebp
cli
jmp
cmp
or
mov
xchg
filds
imul
cmp
xchg
lret
ret
mov
ror
aaa
push
xchg
aad
push
sti
add
jp
fs
sub
sbb
sarl
dec
adc
bound
stc
pop
stos
cltd
mov
inc
lock
and
in
cmp
sbb
imul
mov
sub
pop
fistpl
out
das
mov
jno
jnp
sbb
imul
clc
andl
pop
mov
in
cmc
jge
push
mov
add
jle
ljmp
push
loopne
push
sbb
adc
jnp
sub
push
inc
push
dec
mov
dec
cmc
xchg
or
ret
mov
ds
dec
xchg
mov
fst
pusha
data16
add
lods
cmc
pop
cmpsb
cmp
sub
mov
add
xor
push
das
leave
push
enter
add
ja
mov
out
jne
addl
mov
fisttpl
arpl
outsl
mov
fldenv
inc
shrl
insl
jae
out
std
loop
sbb
mov
out
and
das
sarb
and
xchg
inc
jbe
scas
scas
dec
cli
sbb
cmc
xlat
xor
addr16
in
stos
mov
mov
cmp
lret
fs
jmp
lea
aam
add
ret
movsb
sahf
aad
out
arpl
shlb
cmpsl
inc
mov
push
out
add
xlat
lret
hlt
add
idivl
inc
leave
mov
bound
cmc
mov
add
ffree
fucomi
push
mov
xchg
loop
imul
rcrb
fistl
sahf
fidivl
jg
dec
sahf
rcrb
lret
adc
push
divl
repz
gs
fdivrp
movsl
fcompl
sbb
inc
pop
aas
pop
subb
arpl
cmpsl
call
inc
xor
cltd
or
jb
xchg
lods
mov
cwtl
pop
fsubrl
mov
sbb
and
add
inc
das
arpl
cmp
pop
rol
fstl
std
dec
subl
xchg
out
lcall
subb
frstor
sub
std
int
std
outsl
test
pop
out
cmp
aam
xchg
push
push
pop
sub
jle
orl
jge
cli
jo
cmc
stos
lahf
call
pop
push
pop
shrl
lods
not
idivl
movsl
mov
or
daa
adc
int
mov
lea
jbe
sbb
cmp
sub
mov
fs
arpl
fwait
pop
push
xlat
and
mov
fwait
jmp
and
or
sbb
add
xor
es
aaa
ds
stos
into
sub
popf
pop
and
push
cmp
xchg
leave
jne
popf
xchg
lret
out
in
sub
insl
mov
dec
cmp
nop
xchg
xor
aaa
push
test
cmp
add
cli
ficomps
insl
fiadds
test
dec
int3
jmp
xchg
stos
dec
mov
idiv
addr16
xchg
imul
mov
lea
cmp
and
jns
cmp
dec
fs
in
sbb
cmpsb
push
lret
pop
mov
dec
jle
sbb
sahf
jmp
cli
jl
pop
cs
lret
imul
mov
push
lret
int3
mov
ror
fldenv
or
rcll
nop
jbe
dec
mulb
mov
cli
mov
and
push
arpl
leave
dec
loopne
adc
inc
aas
movsl
pop
add
insb
sbb
fisubrs
add
daa
jo
jp
jne
adc
lods
inc
js
stos
out
inc
enter
rorl
mov
pop
xor
inc
sbb
fcoml
mov
pushf
rclb
push
add
jle
sub
sub
testb
in
imul
or
iret
inc
jbe
stos
out
int
ficomps
out
icebp
ss
das
das
lea
ljmp
xchg
subl
outsb
pop
movsl
xlat
mov
push
xchg
cld
lock
scas
add
test
inc
jg
mov
dec
ja
pop
mov
or
inc
fisubs
cmc
into
scas
sbb
push
push
fbstp
and
js
adc
add
push
inc
ret
lods
xchg
inc
fiaddl
aas
and
pop
scas
mov
dec
jb
icebp
dec
hlt
xchg
mov
out
decl
imul
adc
aam
dec
js
mov
adc
mov
push
mov
or
orb
inc
outsl
adc
stos
data16
xorl
push
xchg
pushf
fstpt
mov
xor
mov
pushf
xchg
cmp
mov
movsb
mov
stos
imul
sub
jb
into
sahf
stos
pop
mov
pop
lcall
xchg
not
push
scas
pop
cmp
pop
lds
dec
and
and
inc
sti
cmp
scas
jl
lret
test
shll
fbstp
mov
movsb
xlat
pop
aaa
loop
sub
fisubrl
xchg
movsb
in
pop
push
or
xor
je
mov
outsb
movsb
fmuls
push
fwait
repz
loopne
scas
xchg
sub
fs
push
mov
xchg
stos
fisubs
jae
inc
daa
cmp
rorl
jge
inc
popa
das
pop
fadds
inc
fildl
jns
sbb
mov
std
bound
mov
push
dec
push
xor
mov
adc
xchg
inc
mov
add
ljmp
adc
les
scas
xor
add
orl
xchg
out
imul
push
lahf
insl
mov
jge
sti
ret
mov
mov
push
sti
dec
xchg
lods
loop
mov
mov
and
sub
pop
out
push
loop
and
add
arpl
je
loope
popf
add
xor
ficoms
sub
mov
add
jle
pop
jl
mov
dec
loope
scas
std
imul
lret
inc
and
cld
out
insl
push
aad
add
lret
outsb
mov
ss
pop
in
and
and
pop
mov
cs
mov
inc
in
jns
mov
mov
or
int
sbb
push
loopne
pop
xchg
push
or
dec
mov
mov
cmpb
mov
cmp
lods
adc
jp
add
xor
rol
in
jns
xchg
adc
sbb
inc
mov
cmpsb
pop
jb
orl
lock
dec
rcrb
scas
xor
pusha
out
jo
inc
into
push
fisubs
push
nop
push
loopne
lock
dec
rcrb
scas
xor
pusha
out
jo
inc
into
push
fisubs
push
nop
push
pusha
outsb
lock
dec
push
pop
and
adc
inc
lret
mov
or
jle
dec
rcrb
stos
mov
jmp
xor
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
and
xor
add
adc
insl
in
mov
cmpsl
add
sbb
hlt
push
les
and
xor
add
adc
les
in
hlt
movsb
push
mov
test
xor
daa
cmc
test
fs
and
xor
add
adc
fnsave
cld
push
out
movsb
out
cs
push
icebp
xor
add
mov
std
add
jge
imul
or
insb
lahf
lahf
mov
xchg
bound
jg
sub
xchg
das
enter
sti
sub
dec
fs
je
mov
test
cld
jp
imul
hlt
add
jnp
adc
pop
shlb
xchg
cmpsb
aam
nop
or
sbb
adc
inc
lcall
movsb
adc
mov
cmp
les
mov
hlt
stos
cmp
pop
push
ja
mov
sbbl
sub
mov
mov
je
cmp
sbb
jmp
dec
pushl
jecxz
icebp
add
and
pop
cmpsl
and
fwait
fs
xor
add
adc
les
std
push
in
movsb
sbb
or
cmp
hlt
inc
les
inc
loope
xchg
inc
movsl
push
mov
xchg
sbb
aam
shrl
rcrl
sub
sbb
inc
xchg
addr16
mov
mov
out
adcb
jge
jne
push
xchg
ja
ss
cmp
lds
inc
lds
and
push
hlt
movsb
add
adc
and
xor
inc
hlt
push
les
and
xor
add
adc
les
in
hlt
movsb
add
adc
and
xor
inc
hlt
push
les
and
push
adc
stc
jne
pop
in
loope
mov
pop
mov
imul
movsb
mov
andl
insl
dec
cs
add
loopne
loopne
adc
sub
rorl
pop
test
cmp
imul
dec
add
mov
add
rorb
push
repz
js
push
stos
sbb
jecxz
xlat
mov
aaa
mov
jp
fldenv
fsubs
adc
push
ljmp
lods
xor
out
jecxz
xchg
push
aam
inc
mov
adc
int
xchg
push
jmp
xlat
jbe
xchg
lock
pop
xchg
ret
movsb
or
scas
inc
lret
add
js
and
pop
faddl
shr
mov
sub
ret
shrb
je
test
pop
fldcw
mov
jb
gs
add
sbb
mov
insb
sub
fs
ja
fstl
test
jae
aad
cmpsl
dec
das
sub
fcompl
mov
xchg
dec
mov
lock
cmp
aad
mov
xchg
aas
adcl
cmpsb
fwait
orb
add
lret
mov
cld
jno
jo
setg
insl
jmp
filds
jbe
aaa
or
lcall
push
icebp
add
push
ljmp
and
testb
dec
bound
jno
mov
cmp
xchg
movsb
sbb
cli
push
icebp
cmp
in
jle
movsb
jae
or
adc
dec
andl
clc
in
mov
cmpsl
int
cli
cmp
fcoml
xchg
sub
mov
and
push
sub
aas
dec
jae
fidivl
popa
mov
out
mov
ffree
test
jno
adc
jae
fdivrl
mov
xchg
xor
jbe
enter
push
xor
dec
fcmovnbe
dec
fistl
movl
in
adc
add
aas
adc
sti
fcomps
sub
cmp
es
rolb
mov
mov
in
push
mov
shll
adc
out
or
pop
mov
jo
loope
push
inc
mov
lcall
xlat
mov
fstpt
cs
jno
mov
test
out
popa
xchg
popf
dec
gs
xchg
xlat
push
jecxz,pn
dec
loop
dec
orl
lret
or
cmp
xlat
cmc
les
fnstsw
je
inc
add
and
repz
ljmp
mov
test
and
js
fs
push
frstor
int
dec
fimull
outsb
fistpll
mov
cs
insl
xchg
sub
pop
outsb
sbb
or
lret
out
push
gs
push
xchg
loope
mov
pop
mov
pusha
hlt
dec
insl
push
shll
jno
std
loopne
adcb
sbb
lock
daa
xchg
pop
das
std
cli
mov
add
fildl
ds
cli
and
test
mov
aaa
jae
mov
sbbb
sub
cmp
test
push
and
outsb
pop
es
mov
cmc
in
cs
sub
cwtl
out
mov
repnz
pop
repz
mov
in
mov
fidivl
ret
lcall
adc
pop
mov
adc
mov
movsl
xor
push
push
daa
adc
decb
mov
jp
push
es
sbb
mov
lret
sahf
loope
xor
sahf
pop
or
stos
push
test
test
in
jne
bound
sbb
inc
pop
or
shld
loopne
int
dec
popf
and
stos
stos
mov
hlt
mov
mov
adc
add
test
inc
mov
rcrl
jns
insb
and
rcrl
sarl
lods
or
mov
bnd
fucomp
push
out
xchg
cmp
ljmp
mov
loope
imul
lods
fldl
push
inc
sub
in
mov
inc
xchg
fs
mov
mov
jae
jg
cmp
adcb
xchg
sbb
mov
jp
fsts
fiaddl
push
les
push
inc
fldt
sub
jo
fidivrl
mov
fs
in
dec
leave
lods
cmpb
or
rcr
xchg
out
aaa
icebp
stos
std
or
xor
scas
inc
inc
cmpsb
popf
dec
push
lcall
in
mov
jne
mov
sub
sub
add
lret
push
xlat
loope
jl
repz
subl
cmp
cs
pop
cmp
mov
mov
loop
cmp
lret
sbb
data16
fcompl
push
fwait
inc
add
xchg
adc
popf
mull
xor
xchg
icebp
out
lds
push
out
out
and
mov
xor
addr16
lret
popf
add
mov
jno
stc
scas
push
jmp
cld
xchg
addr16
je
inc
xor
imulb
jge
jle
fisubl
imul
aad
push
xchg
mov
and
cmp
data16
xlat
sbb
fisubrs
mov
pop
mov
cld
or
loopne
pop
cmp
pusha
or
mov
pop
mov
lret
inc
sub
mov
ffree
notl
sbb
cld
loopne
mov
stos
mov
fmull
cwtl
mov
sub
pop
inc
jne
mov
xchg
add
push
arpl
inc
sbb
cmc
and
xchg
pop
push
fcom
and
sbbb
clc
scas
inc
jbe
pop
pop
sub
pusha
cli
jmp
imul
daa
and
imul
or
jl
jle
dec
addl
xchg
mov
lret
je
adc
and
mov
inc
push
stc
shrl
inc
aaa
xor
push
pop
xlat
jg
insb
stos
inc
jno
inc
loope
test
ror
outsl
pop
gs
addr16
gs
dec
mov
mov
and
mov
jno
cmp
out
lods
in
and
adc
addr16
mov
add
and
sub
sarl
gs
jmp
xor
sub
enter
pop
fld1
mov
or
sbb
gs
scas
mov
loopne
test
jp
dec
out
cli
aam
jae
ret
pushf
cmpb
fistpll
sahf
dec
js
push
cmpsb
ficoms
insl
pusha
shrl
jbe
int
mov
dec
pop
adc
std
xor
pop
lcall
dec
and
inc
movsb
loopne
pop
lret
stos
fwait
mov
add
xchg
jp
shll
jl
and
inc
sub
xchg
je
and
adc
aam
mov
dec
mov
lea
mov
loop
mov
xchg
daa
sbb
lods
sub
xchg
jo
mov
popa
mov
add
in
push
adc
cld
cltd
lds
inc
sarl
mov
mov
popf
insb
inc
lea
inc
sub
test
mov
test
lahf
sbb
mov
cs
mov
nopl
or
mov
in
clc
xchg
push
pushw
dec
pop
je
lods
insl
aad
lret
es
ret
stos
and
clc
sarl
inc
xor
xlat
ss
sti
inc
mov
cmpsl
imul
mov
adc
fildl
dec
rcrb
push
push
xchg
jmp
mov
dec
push
sbb
sbb
pop
movsl
dec
cmp
sarl
push
jo
sub
mov
clc
mov
fnsave
stos
scas
mov
js
push
ds
ds
mov
fwait
push
add
jo
mov
mov
mov
inc
fldenv
cmpsb
addr16
dec
sub
hlt
mov
data16
fistl
subb
mov
fstps
push
test
or
mov
dec
sbb
mov
xchg
shll
outsb
inc
out
fs
add
xor
sub
insb
ss
rclb
xor
pop
and
dec
sub
fstl
sub
loop
lods
sbb
fwait
mov
xchg
rol
clc
fdivs
cmpsl
es
sbbl
adc
mov
xchg
mov
sti
mov
pop
aam
mov
cld
sarb
mov
jae
out
ds
mov
jbe
xchg
pop
push
sbb
mov
mov
shrb
repnz
cmpsl
pop
sub
jne
pop
push
adc
nop
jne
sub
xchg
shl
or
or
ficoml
mov
jne
jl
and
outsl
arpl
or
cmp
aam
xor
imul
popa
arpl
test
daa
xchg
pop
pop
aaa
adc
mov
repnz
ljmp
lret
sub
cwtl
lock
rolb
xor
mov
xchg
lock
xor
sub
mov
xor
addr16
mov
int
rcrb
loopne
xor
mov
add
in
or
dec
push
add
sub
shlb
dec
fwait
push
xor
out
imul
pusha
cwtl
out
mov
je
jmp
add
enter
lret
movsb
loop
mov
rclb
scas
mov
jle
xchg
xchg
in
clc
inc
adc
and
mul
cmpb
out
shlb
lahf
sub
jg
inc
movsl
stos
jecxz
add
ret
repz
cmp
mov
xchg
and
cmpsb
aam
std
inc
lods
lahf
push
mov
out
loop
inc
mov
lock
lods
loope
std
mov
adc
mov
xchg
jmp
jbe
xchg
or
and
push
jp
fxch
jmp
ja
add
lods
insl
fnstcw
cs
push
repnz
mov
jge
inc
mov
xor
pop
lock
outsl
jg
andl
mov
in
cmpsb
fmul
adc
incl
loope
gs
andb
ret
jne
adc
popf
jae
mov
dec
sub
cmp
mov
dec
fcompl
faddl
add
aad
or
scas
shrl
loope
addl
adc
mov
pop
lahf
and
or
push
mov
cmp
mov
sub
jns
jge
pusha
mov
and
dec
xchg
cmp
inc
push
mov
cli
push
fisttps
mov
pop
inc
add
into
lret
mov
mov
jmp
pusha
dec
sub
jnp
pop
in
arpl
shll
bound
loope
cmp
cmp
and
filds
shl
or
adcb
jnp
cmp
mov
test
clc
add
iret
jno
in
lock
lock
push
lahf
out
pop
loope
scas
jg
cmpsb
or
push
sub
pop
shlb
sbb
out
insb
mov
imul
add
addr16
mov
cli
inc
sub
test
jge
out
adc
adc
arpl
inc
ja
notb
xchg
shlb
pusha
pushf
jb
ljmp
fnstenv
fimull
mov
jbe
enter
mov
clc
lock
idivl
push
test
mov
push
xor
dec
sbb
mov
sbb
cmp
sub
or
adc
and
out
aaa
sbbb
std
sti
push
sbb
lock
xor
dec
push
test
test
sbb
scas
loopne
mov
jae
xchg
xchg
jmp
mov
sahf
test
push
sub
ds
jo
aam
cs
jns
jp
add
cmp
hlt
mov
mov
mov
iret
sbb
hlt
mov
clc
sbb
ficompl
test
insl
cmpsb
jmp
jnp
fs
rorb
and
dec
inc
movb
cs
mov
mov
xor
int
fs
inc
dec
sub
sub
outsl
in
adc
xchg
mov
scas
call
inc
inc
sbb
mov
pop
or
jmp
movsb
push
adc
sub
cmpsl
js
sbbb
cmc
jg
xchg
sbb
push
cmp
clc
insb
inc
test
enter
dec
hlt
mov
jae
sbb
dec
pop
stos
fldt
cmp
pusha
xchg
in
mov
mov
shll
test
xor
jp
push
aam
sbb
loopne
jg
loopne
push
jae
xchg
pop
pop
test
xor
dec
arpl
icebp
daa
add
in
sahf
cmp
aaa
call
jp
nop
les
xchg
or
call
pop
xor
pop
in
popa
pop
sub
test
inc
cmp
ret
fstpl
and
scas
pushf
fmull
mov
cwtl
and
insl
test
inc
fnsave
mov
stc
adc
popa
cs
pushf
fcmovb
jge
push
clc
xchg
mov
dec
push
lret
jecxz
pusha
repz
add
push
push
sub
addr16
fstpt
lods
shrl
push
into
cli
sbb
jnp
lock
arpl
js
scas
addr16
jb
enter
addr16
fldln2
popw
in
in
mov
mov
pop
bound
mov
sbbl
lea
push
movsb
fcomp
xchg
mov
lret
push
inc
or
cmpsb
pop
add
out
and
mov
scas
fidivs
lahf
movb
sbb
adc
sbb
stc
mov
inc
int
or
xor
cli
jbe
add
jg
and
sbb
lea
jns
lcall
stos
nop
fmul
mov
jae
aam
adc
negb
aaa
pushf
das
lcall
fmull
test
out
rorb
insb
loopne
imul
cltd
pop
mov
inc
js
out
mov
inc
or
sub
leave
and
adc
out
sub
in
fidivl
lar
mov
mov
cwtl
push
or
scas
sub
adc
xlat
lock
test
rclb
rclb
scas
sbb
insl
hlt
add
loope
sub
mov
aas
mov
xchg
test
push
xchg
gs
rcrb
xor
dec
inc
out
les
pop
pop
inc
sbb
out
xor
les
mov
adcb
adc
outsl
cld
jo
inc
pop
sbbb
add
xchg
mov
aas
mov
andl
adc
shl
push
ljmp
add
sbb
addl
cmp
mov
inc
negl
push
push
add
mov
mov
xor
es
sub
loop
sbb
daa
mov
inc
xlat
xor
mov
sub
xor
jne
stc
imul
pusha
mov
sub
add
inc
mov
sbb
ret
inc
fstpl
fadd
push
mov
int
popa
jp
xchg
mov
mov
mov
in
add
dec
jl
xor
ljmp
adcl
sbb
mov
lds
xchg
sub
push
adc
pop
dec
cmpsb
sbb
aam
adc
sbbl
jnp
movl
cmp
mov
inc
stos
ljmp
mov
pop
out
roll
cmp
sub
subb
call
inc
mov
jbe
mov
push
rcll
mov
insl
cmp
lds
xchg
cmp
or
nop
mov
sbb
or
lret
xor
addl
adcb
mov
mov
add
inc
movsb
mov
insl
jg
enter
add
stc
cld
scas
stos
aam
in
xor
pop
pop
sub
lret
sub
sbb
std
aam
imul
bound
fstps
jmp
xchg
dec
aam
sub
dec
and
mov
test
mov
xchg
xor
pop
push
xor
and
adcb
clc
mov
push
lods
daa
mov
fnstcw
imul
fwait
enter
add
movl
leave
mov
push
lret
sbbb
jle
inc
and
pop
pop
add
sbb
flds
lahf
mov
loope
les
mull
pop
add
pop
push
and
jle
sahf
xchg
fldenv
fldl
mov
pop
cmp
mov
in
mov
cmpsb
enter
xchg
in
popf
test
ret
mov
out
lock
adc
je
cmp
sub
dec
and
test
xchg
add
leave
out
xchg
std
daa
xor
into
aam
cmp
sub
pop
and
push
scas
fcomps
cmpsb
push
xchg
adc
pop
in
loop
push
xchg
out
mov
push
add
scas
pop
mov
fisubrs
mov
push
cmp
lahf
outsb
mov
insb
xor
imul
test
adc
lahf
scas
mov
cli
aaa
jns
mov
mov
mov
push
push
push
mov
daa
adc
test
rorb
xchg
ret
push
outsl
and
push
push
aas
sbb
leave
push
inc
pushf
push
nop
shrl
rcr
sub
fcomp
rorl
sub
daa
das
add
icebp
scas
ret
jle
mov
mov
mov
cmc
jmp
xor
jg
adc
push
cmp
and
in
sub
std
in
add
sbb
add
pop
cmp
mov
insl
push
sahf
pop
mov
mov
repz
icebp
pop
cmc
gs
adc
stc
mov
mov
insb
xchg
pusha
sbb
scas
xchg
les
jb
and
sub
dec
mov
or
dec
stos
jmp
adc
push
clc
add
mov
fdivl
mov
ljmp
mov
out
ja
mov
and
mov
adc
mov
sbb
adc
cmp
mov
inc
sbb
daa
addb
mov
je
sahf
cmpsb
fcomps
das
cli
lock
mov
aas
bound
sbb
or
fs
push
jg
rolb
shrl
out
in
mov
enter
std
rcl
or
in
lret
mulb
addr16
jle
call
mov
cmpl
out
stc
hlt
cltd
sub
pusha
xchg
jns
js
lret
out
mov
pusha
jg
mov
outsb
push
xchg
mov
scas
mov
fildll
mov
adc
xor
sahf
aad
cmpsl
mov
sbb
leave
sbb
mov
stc
arpl
push
inc
cltd
adc
daa
mov
jge
push
out
xchg
mov
cs
js
inc
xorb
loope
pop
lds
popa
test
ja
test
les
icebp
cmp
arpl
lahf
push
adc
jmp
gs
mov
cmc
xor
sti
xor
xchg
mov
out
cltd
dec
lock
arpl
jne
push
imul
xchg
pop
adcb
pop
pop
and
mov
ds
cmp
xchg
jle
mov
adc
sub
inc
lret
push
scas
sub
lods
dec
std
lahf
cld
and
jb
xchg
fs
popa
sub
xchg
orb
movsl
divps
pop
aam
iret
bound
jno
insl
cmp
add
mov
inc
mov
add
or
pop
ja
and
cmp
inc
enter
call
mov
mov
and
dec
jle
jbe
les
rorb
leave
bound
and
subb
fists
or
ss
sahf
lret
sbb
mov
mov
pop
xor
or
js
jns
scas
xchg
fcomps
or
inc
mov
mov
sbb
pop
push
or
outsb
lret
or
push
mov
mov
ret
dec
sbb
mov
cmc
xchg
xchg
lret
fwait
sahf
cmpsl
adc
inc
lret
nop
inc
scas
cli
insb
mov
into
push
test
orl
sbb
inc
mov
push
add
stos
std
pop
push
jbe
or
mov
jle
push
mov
add
icebp
mov
adc
fildll
shll
sbb
lret
dec
push
sarl
stos
fwait
jmp
ja
sbbb
mov
out
push
mov
adc
mov
sub
push
add
lods
les
orb
fmulp
push
hlt
lret
stos
adc
push
pop
outsl
pop
mov
add
xstore-rng
cmpsl
xchg
mull
push
std
cmp
pop
xor
cmp
xchg
or
sub
adc
mov
sbb
je
sbb
jb
popa
dec
sbb
das
push
push
jge
mov
insl
mov
mov
je
push
out
jle
cld
or
xor
dec
sub
ffreep
fsubr
xchg
rolb
inc
cmp
jl
out
scas
lret
test
cmp
add
jmp
adc
stos
aaa
out
aas
out
repnz
in
ljmp
xchg
mov
or
stos
mov
sub
push
scas
adc
movsl
mov
jle
inc
push
repnz
or
and
cmpsl
outsb
sbb
andb
out
sub
xchg
xor
mov
shrb
pop
pop
and
xchg
jg
cmpsb
xrelease
stos
push
fisttpll
xor
cmp
sub
inc
lcall
insb
jg
cltd
gs
mov
inc
jnp
dec
xlat
adc
lret
jmp
stos
xchg
lds
mov
mov
adc
les
in
hlt
movsb
add
adc
and
xor
inc
hlt
push
les
and
xor
add
adc
les
in
hlt
movsb
add
adc
and
xor
inc
hlt
push
les
and
xor
add
adc
les
inc
in
hlt
movsl
add
adc
and
xor
lds
je
test
add
adc
les
in
hlt
pop
add
mov
xchg
int3
jl
cmp
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
outsb
xor
adc
add
imul
je
sub
insb
movsb
jl
or
push
aam
les
int3
and
and
add
je
adc
enter
jl
insb
inc
jl
arpl
sbb
insb
les
inc
sbb
insl
mov
mov
mov
scas
aas
clc
xor
pand
jne
pop
lods
cmp
int3
and
pop
cltd
push
jl
cwtl
pop
addr16
fs
dec
pop
out
scas
push
xchg
fsubrl
bound
test
inc
mov
fwait
pusha
movsb
in
jge
pop
or
add
insb
dec
or
dec
mov
int
fstps
sarb
fbld
inc
or
rcrl
loope
icebp
or
sbb
in
add
or
int3
hlt
cld
popl
jno
mov
mov
or
pop
fadds
xchg
les
xor
mov
movsb
flds
mov
subl
cmp
aam
and
pop
std
mov
leave
lret
out
pop
mov
outsl
inc
dec
dec
pop
xor
xchg
test
hlt
jecxz
sub
mov
adc
adc
mov
push
jbe
cmp
lret
mov
in
and
in
sub
push
inc
sahf
inc
fdivl
pusha
rclb
clc
or
push
lds
fld
or
cwtl
arpl
pop
xor
and
jno
push
flds
jecxz
scas
cmp
add
mov
movsb
or
or
sbb
dec
les
lcall
or
fs
push
lods
inc
mov
xchg
insb
test
in
aam
les
int3
and
adc
add
je
fs
push
lods
inc
mov
xchg
insb
test
in
aam
les
int3
out
dec
dec
insb
rcrb
repz
xchg
pop
dec
rcrb
dec
or
mov
repnz
ret
xor
xor
mov
mov
push
pop
and
jns
push
sbb
pop
lcall
cltd
rcll
into
push
repz
shr
jns
test
insl
push
jge
jg
mov
push
stos
xchg
push
push
sbb
xor
in
jle
flds
cltd
out
pop
dec
inc
je
or
outsb
test
xor
xor
in
out
into
pushf
xchg
adc
pop
pop
jl
mov
lret
ljmp
lcall
mov
or
addr16
dec
pop
add
movsb
int
mov
fimull
aas
mov
push
sub
mov
mov
adcl
rcrl
or
push
mov
test
mov
es
or
mov
shrb
and
xor
lea
mov
scas
stos
dec
inc
and
ss
lahf
mov
mov
movl
push
cwtl
sbb
or
lea
pop
addb
add
sub
out
dec
adc
loop
movsb
mov
popa
rcl
mov
xchg
pop
daa
sub
je
push
repnz
jmp
mov
xchg
sub
pop
dec
mov
mov
movsl
bound
xlat
test
int
insb
jo
jge
cmpl
in
add
jg
sub
push
jnp
enter
sbb
ljmp
adc
mov
mov
push
subl
sahf
mov
cmp
cltd
jae
iret
js
push
jle
je
pop
push
push
andl
xchg
ss
in
mov
xchg
jnp
bound
sub
dec
cld
fildll
arpl
xor
dec
sub
xor
fcmovnu
add
cmp
push
iret
xor
mov
ds
mov
pop
dec
push
movb
push
jmp
inc
out
jb
call
xor
pop
push
dec
hlt
cmp
loopne
sti
neg
adc
cmc
mov
popf
jecxz
loope
inc
push
es
pop
xor
in
cmp
sub
test
pop
mov
or
sub
push
pop
cmpsl
cmpsb
sbb
mov
and
out
fwait
ljmp
cmp
jb
frstor
pop
and
test
lcall
stos
sbbb
ret
dec
leave
ficoms
int3
in
and
popa
sbb
adc
and
sbb
jne
or
movsb
pop
push
data16
pop
nop
aas
popa
inc
out
stc
hlt
cmp
les
sbb
push
ja
test
addl
dec
hlt
or
or
dec
call
pop
lods
pop
movsl
lods
inc
mov
mov
sbb
pop
mov
xchg
ret
jns
mov
mov
jmp
sbb
cld
cmpsl
and
in
xor
stc
adc
or
adc
hlt
xor
lods
pusha
loopne
adc
mov
dec
loopne
xchg
inc
aas
xor
out
push
sub
jp
std
xchg
int3
cld
aas
fildl
out
movsl
in
push
ss
aaa
sti
pop
call
shrl
iret
mov
fyl2x
jne
push
jne
push
loopne
mov
xchg
sub
or
in
xchg
mov
sahf
push
add
ja
sbb
das
jmp
dec
mull
sub
xchg
sub
xor
fwait
sbb
and
sbb
sar
mov
fwait
cmp
inc
inc
je
lods
cmc
jle
lahf
pusha
fs
push
aam
jb
jo
jl
dec
add
dec
jo
pmaddwd
mov
xchg
sub
adc
std
addr16
andl
inc
and
sbbl
lcall
add
outsl
inc
jne
out
inc
mov
scas
scas
fimuls
stos
pop
xchg
test
push
leave
fcom
dec
cwtl
jecxz
call
dec
add
out
lods
in
fcomip
leave
pop
fcmovnb
mov
lcall
aam
into
dec
mov
test
inc
xchg
xchg
mov
pop
jge
xor
jno
rcrl
jecxz
sbb
xor
and
and
mov
daa
pushf
mov
ret
jnp
sbb
xor
push
repz
mov
insl
mov
stos
push
es
jge
mov
sti
popf
cltd
xor
movsb
sub
push
aad
push
or
mov
icebp
rcrl
cwtl
or
mov
mov
sbb
cmpsb
loope
lret
cmpb
jle
jge
dec
mov
inc
jl
je
sbb
rcrb
les
xchg
jg
cmp
and
or
aam
mov
je
xchg
cmp
lret
in
fstps
push
insl
xor
dec
jb
jmp
stc
imul
and
imul
ficoml
cwtl
adc
cmc
and
add
or
flds
shlb
sbb
inc
sbb
add
fs
insb
aam
bnd
xor
mov
or
sub
xor
mov
jnp
int3
fwait
mov
test
sbb
or
arpl
pushf
adc
arpl
adc
ret
mov
or
outsb
push
movsl
sbb
enter
push
pusha
xor
mov
mov
xor
stos
int3
cmp
xor
jg
dec
mov
or
fdivrp
dec
xchg
ljmp
dec
imul
or
xor
mov
lahf
sbb
push
in
mov
xor
mov
daa
and
ss
stos
adc
inc
xchg
jge
icebp
arpl
jmp
shll
fisubrs
push
jns
dec
mov
popw
lahf
fldcw
test
outsb
and
dec
add
das
test
mov
imul
dec
cmp
adc
sbb
mov
pop
mov
jnp
pushl
stc
adc
mov
and
sub
jns
sub
pop
and
mov
bound
mov
inc
inc
lea
aaa
js
push
subl
inc
jecxz
popa
cmpsb
cld
pop
movsb
push
mov
jmp
in
xchg
xchg
pushf
pop
femms
jne
or
xchg
inc
adc
mov
and
inc
pop
lods
aas
sub
loope
sub
sbb
jg
insb
dec
mov
adcl
sub
call
adc
stos
loop
cmpl
pop
fcmovnb
ljmp
cmp
nopl
leave
pop
xchg
lret
pcmpgtb
int3
outsb
and
repz
es
cmp
inc
sub
and
jp
call
inc
xchg
add
xchg
popa
cwtl
inc
daa
cmpsb
pop
adc
nop
cld
shlb
das
mov
mov
xlat
jb
jo
xchg
ret
std
lea
lds
lcall
jnp
xor
ja
loop
xor
lods
daa
mov
pushf
in
sub
adc
add
movsb
test
mov
cmp
test
pop
dec
getsec
jp
aaa
lret
outsb
aad
cmp
mov
fistpl
shlb
push
shll
xor
jae
push
hlt
out
cs
cltd
push
scas
leave
xor
xchg
sarl
cmc
jbe
aad
test
or
test
cmp
push
mov
sbb
fisubrl
push
mov
fldenv
xor
imul
fucomi
imul
inc
mov
in
psubsb
adc
loopne
or
jnp
js
mov
pop
xchg
and
repz
xchg
mov
xchg
das
in
lret
fwait
or
out
ret
scas
mov
frstor
adc
cli
push
and
iret
pop
xlat
or
push
rcll
sbb
imul
jno
xor
stos
mov
jo
fnstsw
pop
mov
lahf
dec
mov
or
pop
mov
int3
push
add
hlt
lret
pop
mov
sbb
frstor
pop
mov
mov
scas
mov
nop
test
ja
insl
aaa
add
aam
fisttps
mov
mov
arpl
dec
sub
pop
movsl
mov
ret
popf
mov
inc
ds
stc
jl
clc
int
sub
loop
xchg
in
int3
mov
sbb
or
ret
nop
lods
xchg
dec
xchg
push
jle
xchg
and
popf
xor
jle
inc
push
jecxz
cmpb
cltd
fisttpll
xor
outsb
mov
pushf
scas
cmp
dec
rsm
fldcw
mov
andl
pop
add
bound
loopne
add
fs
rcr
mov
rorl
and
mov
lock
outsb
push
negb
cmp
or
xchg
sub
dec
xchg
mov
and
dec
xchg
in
lret
push
jb
pop
incl
add
rol
lds
jno
dec
mov
ss
add
es
mov
push
lds
lret
xchg
cltd
add
jge
sub
jg
and
sahf
add
mov
scas
sarb
jno
movsl
xchg
enter
push
sbb
out
pop
cmp
dec
pop
xor
int
xor
int3
pop
mov
outsl
in
mov
mov
xchg
scas
je
jno
mov
scas
adcl
sub
xchg
adc
arpl
mov
ds
push
roll
roll
push
loope
push
pop
mov
cmpsb
jl
push
popf
inc
test
clc
xor
aaa
mov
inc
lahf
hlt
insl
sets
imul
out
inc
xor
mov
lds
xchg
sub
test
mov
jl
mov
dec
popa
sub
jmp
std
mov
es
je
lcall
and
je
pusha
pushf
add
xor
lcall
mov
scas
loope
mov
imul
pop
jl
cmp
push
outsl
jne
int
dec
pop
es
aad
nop
ja
jge
jnp
xchg
lds
jp
sbb
aaa
testl
mov
cltd
mov
sub
aam
ffree
test
xchg
jp
stos
adc
nop
aad
mov
cmp
sub
mov
arpl
stc
adc
shll
rclb
cs
mov
shll
stos
nop
mov
pop
orl
jne
adc
cmpsl
stos
xchg
mov
or
rorl
mov
adc
rcll
lods
or
je
mov
xor
mov
lods
lcall
rcrb
mov
sahf
mov
pop
xchg
loop
jle
js
lret
cltd
push
daa
mov
dec
pop
cs
bound
fdivs
popf
stc
sbb
sub
stos
lods
fimuls
mov
push
and
sbb
and
or
cmp
add
mov
sbb
js
les
stos
in
int3
cmpsb
call
hlt
and
mov
outsb
jbe
adc
outsb
popf
inc
jo
and
shr
xor
into
sbb
push
clc
out
outsb
cmp
lea
arpl
mov
bound
add
cmp
aad
mov
icebp
ljmp
int
jns
mov
cmpb
adc
xchg
and
sub
inc
pop
xchg
scas
sbb
rol
xchg
dec
jecxz
dec
xor
mov
lea
pop
je
push
cmp
cltd
shlb
fimuls
pop
outsb
mov
jno
cmp
mov
lret
or
cwtl
and
xor
jne
sub
push
dec
test
inc
push
mov
jl
mov
repnz
and
fmuls
shll
mov
pop
jns
xchg
mov
xor
xchg
arpl
mov
add
repnz
cmp
rcll
sbb
mov
mov
and
sahf
insl
inc
sbb
mov
iret
es
iret
push
push
stos
fwait
inc
daa
adc
popa
mov
and
pushl
jmp
fdivrl
out
roll
addr16
mov
dec
jle
nop
negb
pop
pushf
jae
add
enter
outsb
pop
dec
add
xchg
push
push
add
scas
dec
mov
setl
stos
lds
das
xlat
mov
lret
or
sbb
push
lret
sti
xor
lea
xchg
push
mov
xchg
pop
out
pop
jg
jb
xchg
js
push
cltd
xor
sub
imul
cmp
test
jmp
pushf
notb
fs
sub
cmp
int3
xor
test
push
mov
mov
movsb
cli
xchg
adc
jmp
push
daa
sub
test
out
jp
std
xchg
out
xchg
cmp
jg
mov
fistpl
popa
dec
push
outsl
es
inc
int3
sub
andl
xchg
and
push
movl
test
add
out
int
nop
mov
and
in
push
in
lock
es
fistpll
push
pop
fcmovne
or
outsb
add
push
popa
or
mov
out
adc
inc
jmp
lret
scas
in
add
sub
sbb
jno
stos
pop
movsl
daa
data16
mov
lock
jno
pop
pop
mov
cltd
xor
pop
cmp
popa
ficoml
jo
cltd
jge
lock
adc
mov
inc
add
mov
mov
xor
insb
mov
ljmp
cmp
jo
sub
out
xchg
repnz
outsl
cmp
in
or
mov
mov
jmp
xor
lret
add
dec
in
add
subb
pop
dec
jb
cmpsb
lahf
call
gs
out
push
lcall
sub
cld
inc
mov
pop
stc
hlt
sub
pop
xchg
insl
xchg
jae
mov
sub
sti
inc
sub
mov
add
mov
push
cwtl
mov
repnz
push
ret
lcall
push
testl
out
push
push
pop
loope
das
fbld
sub
mov
rclb
mov
mov
jg
dec
mov
int3
les
add
jecxz
loop
sbb
pop
push
rcrb
sub
popf
das
lds
jnp
call
enter
pop
icebp
ljmp
aaa
jo
adc
iret
jb
inc
fimull
out
inc
sbb
ljmp
mov
sbb
sbb
push
and
xchg
test
jne
push
and
cwtl
jge
push
sbb
in
es
xor
xor
mov
jno
push
or
sbb
bound
dec
es
cmp
fbstp
mov
mov
mov
pop
out
call
dec
pop
jb
in
out
dec
mov
push
jo
push
jmp
pop
cmp
mov
mov
adcl
add
scas
mov
lods
imul
data16
inc
lcall
xor
jmp
sti
jp
call
test
dec
lret
iret
fistpl
jle
pop
sbb
sbb
stos
mov
or
jo
adc
dec
inc
pop
je
mov
int
jno
repnz
popa
enter
xchg
jge
cli
push
cwtl
sub
lret
nop
pop
call
scas
sbb
clc
mov
adc
sub
jl
je
adc
ret
aas
xchg
negl
xchg
jle
loope
inc
mov
sbb
cwtl
scas
xor
cli
jo
push
xor
inc
aad
push
ljmp
lahf
add
push
insl
ret
xchg
mov
out
sbb
andl
mov
stos
fwait
sahf
pop
fsubs
inc
xchg
cli
sub
inc
push
sbb
lds
jmp
mov
xlat
xchg
scas
popf
in
adc
lret
mov
dec
xlat
popa
sub
fs
xlat
ljmp
andb
dec
mov
jge
and
out
add
lock
jae
xor
enter
adc
cltd
add
cmp
lcall
imul
adc
push
mov
pxor
ret
stos
jg
jmp
stos
icebp
inc
loop
ret
lods
inc
cmp
popa
lea
fstpt
push
and
sbb
leave
out
push
push
cs
cmc
sti
xor
mov
xor
mov
sub
mov
addb
add
mov
dec
pop
aaa
lods
push
test
iret
and
mov
pop
shlb
push
push
xchg
mov
fbstp
pop
inc
add
xlat
pop
jmp
rorb
push
cli
xor
mov
xor
or
enter
xchg
sbb
dec
sti
mov
fldt
lret
sahf
in
jmp
test
pushf
popl
jmp
movsl
fs
cmpsl
aas
fcomip
scas
inc
pop
es
jg
orb
push
pop
sub
mov
in
shll
push
ljmp
mov
mov
pushf
or
jp
jae
cmp
jbe
fbld
mov
or
clc
arpl
mov
mov
xchg
mov
mull
lea
xor
outsl
mov
arpl
inc
test
data16
sbbb
dec
or
mov
adc
aam
xchg
xchg
mov
inc
mov
inc
arpl
in
loopne
fxch
mov
push
and
sbb
insl
push
cs
js
cmp
mov
icebp
fs
mov
jae
jle
sti
dec
stos
lock
jae
add
outsl
cmp
push
loope
xor
and
test
lock
sbb
or
je
sar
mov
das
cmc
and
cltd
clc
xor
sahf
xor
cmpsb
dec
aam
negb
int3
push
xorb
in
xor
fnsave
pop
scas
push
int3
mov
andb
addb
stos
and
adc
stos
pop
dec
sbb
push
movsl
ret
test
adc
push
xor
or
or
push
sbb
outsb
mov
outsb
aad
aaa
mov
inc
xchg
gs
fwait
mov
mov
fldcw
insl
mov
xor
xchg
cmp
pop
imul
xlat
and
out
scas
xchg
mov
and
bound
jmp
xor
movsb
mov
jmp
xor
lods
pop
adc
mov
xchg
cmpl
fsubrs
and
aam
fidivs
jae
add
lret
imul
dec
mov
or
js
and
enter
nop
adc
std
xchg
movsb
cmp
dec
das
ds
lcall
mov
adc
xchg
xchg
aam
js
call
fidivrl
clc
popa
add
dec
or
xchg
imull
test
and
out
lcall
pop
and
lahf
push
cmpsb
sub
test
sub
imulb
and
in
rol
add
adc
cs
xchg
shrb
inc
pop
sub
test
xchg
mov
addb
adc
in
mov
push
ret
push
sbb
mov
or
lret
sbb
or
sub
push
insb
movsb
push
daa
testb
sbb
cltd
or
adc
into
xor
jb
fldl
inc
repz
cmp
sahf
in
cli
mov
or
out
sub
push
pop
cmpsl
mov
jmp
inc
idivl
xchg
in
jl
mov
das
mov
mov
mov
adc
je
shlb
aas
inc
iret
inc
lock
mov
scas
mov
mov
xchg
sub
test
mov
or
xor
mov
sarb
out
xor
in
mov
fmul
clc
push
sarb
insb
adc
dec
lret
inc
shrl
shll
push
mov
inc
dec
lea
test
cld
sbb
push
lahf
push
cmp
mov
add
mov
mov
jle
add
inc
inc
pop
cmp
das
cld
xchg
mov
es
or
fwait
xchg
adc
sbb
xchg
and
jbe
add
icebp
mov
sub
jbe
sub
adc
sahf
or
xorl
repnz
lods
cld
pop
push
ret
adc
inc
push
pusha
xor
fcmovbe
dec
mov
or
push
add
lahf
fwait
into
rcr
jg
xor
test
rorb
dec
jg
push
mov
jo
adc
jl
dec
jae
dec
sbb
dec
jle
mov
mov
in
fcompl
dec
nop
mov
mov
inc
dec
sbb
mov
jbe
jmp
lods
sbb
rolb
inc
sbb
js
stos
pop
jl
movsl
psrlw
adc
sbb
sbb
arpl
test
push
xchg
adc
xchg
test
arpl
inc
xor
ja
rcr
pop
outsb
stos
mov
xchg
pushl
shl
pop
stos
fimuls
shlb
lcall
or
lods
fsubl
cld
je
fs
push
lods
inc
mov
xchg
insb
test
in
aam
les
int3
and
adc
add
je
fs
push
lods
inc
mov
xchg
insb
test
in
aam
les
int3
and
adc
add
je
fs
lods
inc
mov
nop
insb
test
loopne
aam
cmc
cmp
int3
adc
and
add
je
fs
aam
les
insb
test
addl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
