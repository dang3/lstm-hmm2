pop
or
lds
add
or
add
add
push
add
add
mov
add
mov
add
or
add
pop
jo
or
add
punpcklbw
sbb
push
add
add
or
loopne
mov
addb
add
ret
or
dec
or
add
add
add
inc
add
or
iret
jo
add
add
jne
pusha
add
pop
adc
adc
nop
add
pop
push
add
lock
push
pusha
add
add
mov
add
add
or
add
add
cmp
jo
enter
push
pshufw
pop
jo
jecxz
loopne
mov
adc
leave
add
add
add
repnz
add
nop
add
add
lock
rolb
daa
or
add
or
add
add
jecxz
and
gs
push
add
add
xor
xor
popa
push
push
add
pop
nop
add
loopne
xchg
or
add
push
add
inc
add
push
add
add
add
add
pop
add
add
or
add
or
add
add
rolb
add
add
lds
pusha
add
lock
add
add
jo
xor
pusha
add
or
les
lock
pop
nop
add
add
add
jb
add
ret
lcall
add
push
mov
pop
pop
pusha
add
or
inc
add
add
mov
pusha
add
or
add
or
add
incb
add
or
nop
add
or
add
jo
test
add
syscall
add
inc
push
lock
add
push
add
mov
lcall
add
pop
nop
add
push
inc
add
push
add
add
add
add
or
add
or
add
rolb
or
add
add
adc
push
push
rolb
cmp
xor
xchg
push
add
or
adc
jnp
pusha
add
add
add
pop
addb
or
lock
add
add
add
roll
mov
push
popl
xorb
xor
call
test
jne
ret
push
push
mov
pusha
call
mov
push
xorl
addl
push
call
cmpl
jne
call
ret
jmp
xor
mov
shl
mov
shl
mov
cmp
jne
call
popa
pusha
call
mov
push
xorl
addl
push
call
push
xorl
addl
push
xorl
addl
push
push
call
add
or
je
ret
popa
call
push
xorl
addl
push
call
push
push
not
mov
sub
xchg
mov
shl
push
xor
push
call
push
mov
push
jmp
pop
mov
push
push
push
mov
mov
rep
pop
pop
push
mov
xor
xchg
push
shl
lea
mov
xor
xchg
xor
jmp
sub
mov
sub
sub
mov
sub
or
jne
add
jmp
mov
shr
shl
mov
xor
jmp
sub
mov
xor
cmp
jne
mov
add
cmpw
jne
ret
push
xor
pushl
pop
lea
or
mov
mov
lods
mov
pop
ret
push
mov
add
push
push
push
push
push
mov
mov
add
pushl
mov
add
add
mov
add
xor
lea
mov
add
mov
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
xorl
addl
pushl
call
call
pop
pop
pop
pop
pop
leave
ret
call
sbb
push
pop
dec
cli
enter
mov
xor
push
and
out
pop
stos
icebp
pop
es
cltd
ret
cmp
pop
es
add
or
mov
nop
arpl
out
stos
mov
repz
ljmp
cmpsb
sub
sub
cs
add
inc
jg
push
jb
notb
jmp
ja
cmp
or
mov
xor
cmp
add
xorb
and
jo
ss
ja
fstpl
mov
lods
xchg
xchg
lds
and
jns
adc
ffreep
repnz
roll
scas
xchg
xchg
in
out
mov
lock
cwtl
loop
shl
push
jmp
into
test
xchg
xchg
test
mov
lret
sbb
adc
add
loope
ret
movsl
sub
lods
xchg
xchg
lds
incl
lods
and
xchg
pushf
mov
aaa
xor
daa
mov
jmp
fs
movsl
cmpsb
dec
leave
es
clc
fbld
arpl
and
lret
mov
sub
adc
mov
mov
out
clc
arpl
call
lock
xor
add
adcl
adc
mov
sbb
mov
inc
inc
subl
fstpl
rcrb
lcall
shrl
pop
pop
add
lods
jbe
lea
repz
stc
pop
addl
push
leave
mov
shll
xchg
iret
and
ljmp
loope
stos
or
enter
mov
leave
out
add
cmp
mov
mov
dec
imul
mov
mov
cmp
lahf
sbb
insb
data16
push
loopne
jns
pop
dec
ret
mov
pop
int
ret
sub
rorb
cs
inc
arpl
out
jbe
lds
add
fdivrs
adc
cmpsb
inc
xchg
test
mov
roll
das
imul
in
mov
push
adc
and
mov
lds
mov
fsubl
ret
outsb
lock
push
xchg
out
sbb
mov
xchg
test
xor
sbb
ret
sbb
out
sbb
sub
xchg
sbb
pop
gs
sbb
repnz
fs
dec
mov
pop
lea
pusha
cmp
inc
sbb
cmc
subl
add
mov
push
push
adc
dec
mov
rorb
in
les
inc
cltd
leave
mov
jg
sbb
push
pusha
stc
jno
jle
leave
out
mov
mov
xor
pop
mov
iret
inc
sub
pop
notb
test
daa
test
mov
pop
bound
fstl
and
fisubs
aaa
jb
fimuls
ds
cmc
and
aas
and
mov
mov
mov
shlb
mov
mov
clc
add
and
je
xchg
inc
xor
mov
pop
sbb
movsb
lds
xor
sbb
nop
into
inc
add
lds
push
dec
sub
adc
ds
les
mov
or
stc
test
inc
pop
test
jae
shr
ret
sbb
mov
add
lea
adc
mov
fiaddl
ret
pop
test
lds
in
mov
jp
loopne
push
enter
adc
int3
loopne
repnz
jp
cmpsl
mov
call
xchg
cltd
pushf
repnz
test
insl
jns,pn
or
xor
dec
shlb
jg
adc
fsubs
push
test
or
pop
or
push
mov
insl
pop
movsb
dec
es
frstor
call
xlat
out
or
jmp
das
lods
sbb
lahf
rcr
xchg
test
aas
call
sbb
test
ret
dec
jle
mov
pop
and
in
and
jo
xchg
xchg
or
vmxoff
lea
call
fildl
scas
xchg
movsl
push
adc
push
ret
jle
push
cltd
lds
cmc
pop
aad
sbb
std
les
sub
daa
ret
std
cmc
ret
fs
xchg
sbb
jge
rclb
mov
stos
hlt
sub
and
in
lret
aas
pop
inc
lea
cld
xor
sbbl
es
in
ret
jecxz
pop
push
movsb
pop
aam
adc
jecxz
mov
push
ss
adc
mov
add
jns
or
or
dec
dec
sahf
inc
or
push
xor
xor
jne
out
scas
adc
fists
sub
dec
jns
in
dec
or
mov
addb
ret
jg
and
lahf
jl
mov
mov
jp
test
sub
inc
js
push
in
daa
std
les
bound
cmpsb
add
sub
push
cltd
je
sbb
int
ficompl
ss
jbe
stos
repz
cmp
aas
decl
movsl
repnz
scas
lcall
cs
pop
imul
addr16
mov
lcall
xchg
ss
fistps
sbb
std
ret
adc
aas
and
push
es
jecxz
lea
lret
cmc
and
cwtl
addb
cmp
ret
outsl
icebp
es
dec
js
xor
mov
inc
daa
cmp
cltd
mov
sbb
lds
mov
pusha
and
mov
daa
sub
call
pop
das
push
pop
dec
gs
mov
ret
inc
aaa
mov
xor
jmp
inc
dec
lock
andb
inc
jl
jnp
inc
dec
lock
pop
scas
jecxz
sbb
stc
das
hlt
mov
adc
in
or
lret
pop
cmpsl
cmp
push
adc
sbb
push
fsubrp
loope
hlt
bnd
sti
es
push
fsubrp
dec
dec
mov
pop
lret
dec
lock
nop
mov
mov
cmpsl
jns
pop
fcompl
hlt
ds
in
cmp
adc
aas
jne
paddsw
pop
and
jns
fisubs
dec
sbb
xchg
cmp
xchg
lds
jg
jns
sub
test
enter
loope
out
add
in
mov
stos
in
call
mov
and
aad
rolb
call
es
sbb
sbb
add
pop
sbb
pop
jmp
test
inc
mov
inc
push
mov
dec
shrb
adcl
les
arpl
add
addr16
orb
and
sbb
mov
outsl
stos
push
repnz
test
test
in
cmp
add
clc
inc
out
out
xor
jno
mov
popf
jnp
rolb
lods
cmp
push
mov
stos
cwtl
inc
cmc
pop
dec
adc
stos
jge
and
jge
test
push
jecxz
push
outsb
aaa
in
push
clc
mov
and
es
fucom
jge
pusha
clc
int
mov
aas
pop
das
jo
xor
push
dec
xchg
sbb
in
daa
std
les
adc
sub
xchg
nop
pushf
or
mov
xchg
dec
cltd
stos
cmp
sub
cmp
jp
and
mov
cli
inc
les
and
sbb
pop
pusha
cwtl
insl
movsl
fs
mov
loopne
cs
je
hlt
js
mov
push
aaa
push
cmp
test
aas
jbe
sub
cld
outsb
inc
lock
outsb
gs
into
shll
mov
cli
mov
pushf
jmp
sbb
push
jo
divb
dec
addr16
in
rcrb
icebp
cwtl
add
mov
jge
rorl
ret
daa
cmpsl
das
std
les
ret
popf
cmc
mov
rcll
pop
or
sbb
mov
mov
rcll
lcall
mov
inc
popa
pop
xor
push
mov
add
inc
in
scas
xchg
lods
div
xor
and
repnz
addl
xchg
call
call
test
gs
mov
xchg
lds
cmp
loope
xor
jg
ss
in
jge
lahf
add
jge
inc
inc
jbe
add
imul
mov
popf
shrl
mov
pop
mov
test
lea
into
mov
jns
and
rolb
adcb
or
jp
jg
xor
lea
push
frstor
pushf
mov
inc
inc
jbe
add
sub
lods
inc
dec
xchg
jne
add
xchg
out
inc
dec
mov
cmp
push
xchg
push
test
out
and
adc
push
movsb
dec
adc
std
xor
gs
cltd
loopne
cwtl
xlat
cmp
stos
movb
xlat
lcall
cltd
inc
mov
inc
cmp
jecxz
adc
pop
insl
nop
or
sub
push
xor
fldl2t
adc
mov
icebp
add
or
xchg
inc
fbstp
ds
jl
fidivl
mov
shl
lahf
adc
jns
xchg
enter
test
xor
out
xorl
add
jae
sub
les
jle
subl
pop
xor
mov
inc
mov
pop
and
ja
in
call
repz
hlt
fstl
jmp
pushf
out
sbb
jne
mov
fnstenv
push
or
or
frstor
xchg
jnp
mov
stos
stc
lods
movsb
sub
jae
dec
lret
and
out
lea
jae
mov
xchg
dec
ja
mov
jb
mov
mov
gs
mov
sub
insl
outsb
xchg
outsl
fsts
jl
push
fwait
ret
jbe
mov
js
loop
or
cmp
lods
div
es
sbb
push
in
testb
sbb
and
ret
add
aas
sub
cmpsb
rcrb
or
sub
fisubrs
pop
jl
out
sbb
jae
cmp
fst
lcall
dec
ret
push
adc
pop
push
int3
adc
ret
in
daa
std
les
mov
in
inc
add
out
and
gs
mov
adc
cwtl
or
inc
mov
or
fmuls
or
pop
mov
jb,pt
adc
xchg
mov
hlt
mov
roll
cmp
cmpsb
cs
les
mov
leave
test
or
jns
aad
lea
int3
es
push
jecxz
mov
lods
xchg
xchg
lds
or
iret
inc
in
scas
xchg
ljmp
js
imul
mov
hlt
test
inc
popa
aam
adc
jne
lds
push
fnstcw
and
ret
sub
addr16
jg
mov
jl
mov
push
mov
je
icebp
xchg
mov
inc
cmp
ljmp
ss
push
cltd
xor
add
aas
jnp
mov
cmp
imul
mulb
jbe
mull
push
testl
fnstenv
sbb
shll
lods
incb
add
imulb
mov
add
cmp
leave
jb
cmp
xor
dec
arpl
push
int
push
or
out
mov
adc
xchg
cmp
push
stos
inc
test
mov
notb
ss
lock
inc
test
outsb
fstpt
or
into
lcall
and
in
outsl
sysret
jl
pop
or
outsl
aaa
cmp
test
aam
jmp
push
mov
push
scas
inc
test
adc
jle
mov
mov
shl
int
mov
fcomps
les
test
mov
xchg
xchg
shlb
mov
and
pop
mov
mov
imul
mov
jle
adc
xchg
in
sbb
std
ficomps
mov
lods
xchg
xchg
lds
add
aad
call
dec
jg
addb
xor
mov
mov
std
les
int
in
lret
notb
lret
ja
jecxz
and
mov
push
out
loope
call
adc
dec
adc
fsubs
inc
in
xchg
mov
insb
shl
push
das
emms
mov
sti
push
in
test
xor
mov
sbb
inc
jno
lds
mov
out
stos
mov
xchg
cltd
pushf
lods
movsl
sbb
dec
das
inc
call
pop
fdivrs
outsl
mov
adcl
dec
and
repz
dec
sub
ret
and
inc
cmpsl
std
les
daa
jb
jns
mov
stc
xor
loope
loope
push
insl
mov
mov
mov
add
aas
dec
xchg
dec
sbb
nop
add
or
jae
gs
aam
mov
dec
inc
ljmp
subb
jne
lds
call
mov
scas
xchg
hlt
inc
mov
sbb
xor
les
pop
sbb
mov
jg
fs
add
js
adc
mov
test
or
pop
mov
cld
test
adc
adc
std
les
fstpt
sub
scas
xchg
adc
cld
cmpsl
jmp
jmp
fs
ret
mov
in
leave
test
jl
sbb
ljmp
sbb
rorb
fsub
outsl
xor
jg
aaa
xor
test
movsb
jns,pt
or
neg
ret
mov
pop
lret
sub
stos
call
pop
sbb
out
inc
popa
mov
pop
jae
mov
call
int
stos
ds
scas
xchg
xchg
inc
rolb
push
lahf
mov
cld
cmp
fwait
arpl
arpl
xchg
pop
pop
pop
mov
lret
lds
sahf
icebp
mov
jbe
mov
push
jo
push
xor
wrmsr
pop
mov
jae
outsl
or
mov
hlt
mov
mov
fsubs
pop
dec
das
jns
xchg
stos
shrl
jle
mov
fbld
movsb
sub
mov
insb
dec
daa
inc
leave
mov
and
in
int
adc
xor
je
adc
repnz
inc
add
mov
sub
pop
dec
imul
out
pusha
sbb
cmp
fwait
lahf
stos
adc
mov
cmp
dec
fistpll
imull
push
fistps
cmpsl
fs
xor
pop
and
mov
out
jb
or
sub
and
push
mov
add
dec
xchg
stc
xlat
cmp
fst
lcall
int
mov
cli
cmc
repnz
adc
xorl
clc
in
pop
xchg
in
mov
loopne
repnz
jno
cmp
jns
aas
xor
js
jg
mov
pop
fwait
insl
pop
jns
adc
jle
lods
lock
push
movsb
cmp
movb
lods
pop
sub
pop
adc
adc
mov
insl
idivl
xor
ja
into
out
or
inc
outsl
xor
xor
daa
andl
add
repz
cmpsb
push
in
jb
clc
xchg
push
mov
or
les
push
lock
add
ss
ja
sub
clc
inc
mov
xor
sub
out
cli
ret
push
push
or
push
lds
jmp
je
pop
cwtl
outsl
lret
jecxz
outsb
pop
or
loopne
inc
popa
lods
mov
fs
add
inc
in
scas
xchg
mov
pop
adc
in
sbb
mov
or
mov
iret
dec
dec
rolb
out
sub
enter
cld
mov
sbb
imul
xlat
mov
pop
cmp
add
pop
mov
nop
popl
jno
dec
mov
pop
xorl
xchg
inc
popa
jle
lods
addr16
lds
sahf
addb
clc
adc
dec
ret
mov
or
cmpsl
mov
rorl
test
rcrl
movl
or
push
mov
pop
jge
lea
loopne,pn
push
lock
test
xchg
cwtl
xchg
mov
in
add
push
inc
mov
pop
les
nop
pop
lods
and
push
mov
xlat
jb
ljmp
mov
and
jo
js
cmc
or
scas
xlat
mov
popa
add
mov
lock
out
or
xchg
jbe
sbb
pop
xchg
into
xchg
add
enter
gs
pop
and
lret
fs
mov
dec
cmpsl
sub
dec
test
jns
adc
xchg
sbb
stc
jecxz
outsl
xor
ljmp
jbe
lds
call
leave
cmp
mov
cltd
mov
fwait
popf
jne
mov
repz
orl
add
jg
pop
mov
and
stos
ret
enter
pop
cmpsl
jo
lods
xchg
xchg
lds
in
out
push
mov
xor
cmp
adc
or
in
add
mov
pop
test
into
pop
inc
adc
xchg
cmp
cmp
push
push
aam
push
test
xor
and
pushf
mov
and
aaa
jae
or
in
mov
jbe
add
pop
fsubs
and
stos
pop
dec
or
adc
stos
pop
ret
les
or
stc
cmc
lret
dec
ret
sti
adc
test
pop
dec
rorb
push
outsb
sub
mov
or
in
mov
in
pop
cmp
xor
pop
outsl
xchg
and
mov
mov
ljmp
inc
mov
pop
lret
in
add
insl
cmp
add
inc
pop
aad
sub
push
loope
sub
ficomps
ret
fldt
xchg
xchg
lds
call
inc
jp
rcl
pushf
dec
dec
and
mov
test
ret
outsl
icebp
sub
ret
add
xchg
jns
jg
cs
clc
in
xchg
das
repnz
or
xlat
xor
dec
cmp
or
pop
call
add
and
mov
xlat
mov
sbb
xchg
lds
insl
test
std
les
sub
scas
mov
in
lret
xor
dec
sub
adc
cs
icebp
les
jle
cmpsl
stos
xchg
lds
pop
mov
pusha
xor
inc
orb
cmp
out
dec
loope
daa
or
aas
lcall
div
xchg
bound
and
xchg
test
mov
jle
loop
pop
mov
lea
repz
shrb
mov
push
mov
sbb
jno
lods
nop
out
es
movl
daa
or
out
cltd
lds
mov
dec
imul
adc
mov
push
les
jmp
xchg
sbb
dec
mov
in
nop
scas
add
mov
cmpb
xor
jmp
lds
adc
pop
hlt
push
ret
in
ret
notb
and
ret
xor
mov
mov
aaa
aaa
cmp
adc
jb
or
mov
inc
mov
and
hlt
lea
les
push
pusha
andb
inc
push
daa
adc
out
das
fs
ja
nop
jne
mov
mov
addb
mov
sbb
les
nop
sbb
test
mov
pusha
andb
inc
jo
das
test
icebp
sbb
std
faddp
mov
mov
es
rcr
imulb
in
test
ret
decb
rol
ds
adcb
pop
bound
mov
in
call
dec
adc
or
or
arpl
in
mov
das
dec
inc
mov
xchg
add
push
add
loope
pop
dec
scas
lahf
out
mov
repnz
add
dec
popf
mov
push
fstps
lea
mov
int
jmp
ret
gs
or
lahf
add
aas
or
pop
sub
dec
mov
es
lods
cmpsb
add
adc
mov
fst
lcall
movsb
add
pop
in
mov
cmp
jns
ret
add
jae
insl
or
and
ja
lods
out
mov
jg
ja
es
inc
jne
lds
pop
scas
mov
out
ret
add
test
aam
adc
popa
mov
mov
xor
ja
or
je
xor
mov
xor
ds
push
pop
cmp
in
stos
pop
sub
pop
sub
push
sbb
jle
fs
lret
orb
ret
insb
xchg
mov
push
ds
filds
int3
jle
add
jecxz
push
push
mov
xchg
aas
inc
les
xchg
nop
loop
aas
jbe
or
insl
icebp
pop
mov
loop
mov
inc
and
cmpsl
lds
inc
mov
sti
adc
ret
cmpsl
mov
xchg
stos
pushf
pusha
ds
inc
sub
adc
sbb
sub
pop
mov
ds
cwtl
outsl
sub
je
or
xchg
sbb
mov
add
sbb
inc
int3
mov
push
inc
mov
stos
out
adc
add
lea
adc
jns
mov
js
iret
xorb
inc
pushf
xchg
test
fisttpl
daa
jb
jns
push
inc
mov
xchg
out
out
jb
or
mov
dec
add
or
sbb
aad
or
stc
aaa
cmp
jmp
es
out
mov
js
xchg
or
mov
loope
lods
push
pop
sbb
test
pop
into
movsb
inc
in
ljmp
mov
xchg
adc
in
push
cmpsl
dec
xchg
mov
push
mov
rorb
in
xor
sbb
cwtl
icebp
mov
test
out
inc
dec
mov
cld
mov
sbb
mov
scas
xor
pop
repnz
jecxz
outsb
adc
push
xor
test
or
frstor
dec
push
fst
lcall
xor
jg
enter
ljmp
add
xor
jmp
mov
or
insl
out
mov
leave
insl
pmulhw
movsl
mov
fcmovnu
cmpsl
and
dec
sub
stos
xor
jbe
shrb
push
adc
jle
aam
dec
xor
mov
dec
and
mov
add
out
pop
dec
sar
jae
icebp
add
pop
mov
inc
dec
in
ljmp
cs
loop
sub
add
outsl
and
fstpl
xchg
xlat
or
push
cmp
dec
push
xchg
outsl
stc
andl
xor
dec
jmp
aas
xor
jmp
popf
fnsave
lahf
add
subl
jmp
popf
dec
pop
push
jle
push
jo
pop
jl
and
adc
fsubs
mov
rcl
cmp
xor
pop
mov
addr16
faddl
std
insl
shrb
insl
scas
lahf
divb
mov
test
jg
mov
int3
pop
repz
lds
std
les
push
lock
test
call
inc
pop
lock
popl
fsubl
test
mov
add
fwait
push
mov
scas
or
dec
scas
test
cmp
insl
pop
repnz
out
mov
xchg
cmc
aad
mov
aas
and
imul
std
scas
xchg
mov
out
rclb
lret
mov
mov
hlt
xor
sbb
inc
ds
enter
jne
mov
scas
movsl
repnz
es
subl
and
push
cld
cmpsl
jmp
mov
shl
sbb
cmp
xor
jo
and
push
xor
cmp
add
xchg
xor
and
adc
add
ds
cld
push
jle
mov
movsb
mov
jbe
add
pop
fs
loop
mov
mov
shr
or
cmp
adc
adc
insl
adc
or
cmpsl
mov
call
mov
sub
sbb
sbb
orb
rclb
or
dec
xlat
out
rorb
pusha
les
push
jge
sbb
int
mov
jne,pt
lods
xchg
pop
mov
rclb
pop
aad
push
das
std
ficomps
les
punpckhbw
xchg
lds
stos
cmp
push
dec
rolb
test
jns
cmpb
add
fimuls
cmpsl
sub
les
sub
pop
cmp
rcll
enter
or
jecxz
sbb
mov
je
ret
xor
sbb
pop
and
in
out
adc
mov
lret
sub
movsl
mov
fcom
scas
adc
iret
cmc
rorl
inc
pop
xchg
sbb
dec
popf
jge
cmp
stos
or
inc
push
int
cmp
in
iret
fstpt
sahf
mov
in
dec
push
sbb
lahf
sbb
mov
ret
mov
xchg
outsl
mov
xchg
cmp
xor
sbb
add
cli
or
lods
gs
sbb
mov
or
mov
icebp
mov
push
leave
addb
jecxz
and
jle
orb
or
cmp
lret
mov
inc
jnp
inc
test
mov
subb
cmp
into
int
sbb
scas
cmp
repnz
and
mov
jb,pt
inc
xor
lahf
cmc
sbb
mov
sar
adc
sub
xchg
mov
pop
mov
lock
in
dec
push
sbb
lahf
fxch
push
cmp
lea
test
fs
jns
jl
adc
clc
movsb
sub
push
cltd
adc
dec
push
es
adc
xchg
xchg
leave
lea
call
add
pop
out
adc
dec
ret
pop
add
xchg
cmpsl
mov
rorl
push
sbb
ds
mov
dec
mov
ret
jmp
rcrb
sahf
adc
scas
mov
sbb
inc
addb
jb
jle
dec
popa
adc
movb
test
jle
test
int
imul
mov
inc
out
dec
xchg
xchg
lds
or
inc
mov
fnstsw
mov
mull
and
inc
xchg
mov
idivl
cmp
inc
ds
insl
push
xor
mov
jbe
add
cli
xor
pusha
adc
mov
push
sub
sbb
push
xor
xchg
sub
and
or
leave
mov
add
call
into
pushf
add
daa
cli
gs
gs
sbb
jae
call
test
fs
cwtl
lds
loop
add
mov
cmc
stos
imul
movsl
mov
in
scas
stos
or
ljmp
or
movsb
lds
dec
or
jecxz
lahf
rcll
leave
scas
cld
jbe,pt
std
es
sub
adc
enter
add
mov
and
icebp
and
and
dec
mov
cmp
loop
inc
shll
xor
ja
cwtl
sahf
push
mov
pusha
mov
mov
mov
and
rcr
sbb
mov
or
mov
repnz
fiadds
out
leave
iret
dec
daa
rclb
mov
xchg
test
ret
lea
lahf
fcmovb
jecxz
push
xor
jle
inc
sbb
je
sbb
and
dec
push
lds
test
inc
or
xchg
std
inc
ret
clc
or
push
in
mov
test
add
sub
lods
dec
or
xor
lods
sbb
inc
or
aas
jae
or
xlat
adc
mov
or
or
aas
sub
sbb
or
arpl
in
ret
mov
jbe
scas
push
add
sub
ss
inc
out
ljmp
push
es
pop
loope
andb
clc
clc
aaa
mov
dec
inc
add
pop
mov
and
pop
dec
dec
cmpsl
dec
cmpsb
shlb
pop
adc
fnstcw
lret
ss
pop
fdivrs
aas
adc
xchg
xchg
mov
cs
xchg
test
cmpsl
sub
cmp
call
sub
ja
fcmovnu
cmpsb
adc
nop
pop
dec
sub
inc
cmp
adc
mov
rcll
vpcmpgtb
xchg
iret
jp
sbb
lds
jns
pusha
sbb
mov
dec
sub
adc
cmc
jns
and
out
int3
ret
jne
inc
inc
mov
sbb
or
es
pop
mov
cmp
push
jne
push
cmp
loopne
pop
fdivrs
js
loop
jbe
gs
and
pop
mov
aad
in
cmpl
mov
fildll
dec
pop
mov
push
mov
in
xorl
pop
lods
mov
std
movsb
mov
mov
pop
dec
popa
loop
in
test
popa
int
int3
fs
lea
or
ret
adc
stos
es
dec
jp
mov
loopne
out
jns
pusha
cmp
inc
xchg
jne
adc
or
out
push
sarl
jle
repnz
aaa
mov
sbb
push
jo
jg
dec
or
sbb
seto
pop
in
lea
scas
popf
cmc
mov
icebp
iret
mov
lods
cld
stos
in
and
jle
imul
setne
xchg
sub
out
lea
push
scas
xchg
rorb
test
xchg
addb
and
mov
lea
mov
xlat
mov
imul
mov
and
arpl
std
les
or
scas
xchg
and
push
pop
insl
out
sbb
or
push
inc
xchg
add
lea
call
clc
mov
add
mov
movsb
lds
inc
push
scas
insb
mov
mov
nopl
sbb
lret
lcall
out
test
fsubs
xor
and
in
lock
lds
xchg
add
xchg
call
daa
push
jbe
lds
scas
scas
mov
mov
addl
mov
adcb
lds
push
jg
or
aaa
xor
mov
sar
cmp
test
cs
cmc
mov
sbb
rcrb
test
shrb
xchg
hlt
scas
lods
cs
test
push
pop
addl
fst
lcall
jle
pop
and
pop
inc
inc
sti
adc
mov
adc
cmp
out
repz
pop
dec
jp
stc
aas
xor
ja
dec
jg,pn
pop
jbe
or
add
inc
adc
neg
mov
adc
fsubs
mov
push
cmp
in
rcrb
pop
push
xchg
mov
push
push
dec
leave
mov
test
inc
inc
inc
stc
out
stos
jmp
sbb
fs
mov
cmpsl
sub
les
adc
bound
mov
js
pop
aam
es
sub
js
jle
mov
sahf
cmc
sbb
lds
insb
cmc
enter
arpl
sbb
lods
xchg
xchg
lds
call
test
js
scas
mov
sbb
sarl
jns
shlb
ss
subb
daa
or
lcall
cwtl
notb
or
cs
add
sbb
push
pop
cmp
xor
push
call
arpl
cmp
push
xchg
cmpsb
and
and
sbb
scas
xor
pop
dec
inc
pop
fbld
jmp
pop
loope
xor
bnd
dec
andl
cmp
push
cltd
loope
sbb
push
push
adc
cld
sub
pop
dec
es
lret
adc
push
adc
and
sbb
in
add
jb
cld
test
mov
int3
jmp
pop
loope
add
ljmp
mov
cwtl
loope
sbb
sbb
lds
lea
jg
xchg
shrb
sub
sub
in
sahf
out
mov
or
dec
fmull
mov
sub
movsl
mov
sub
cmp
push
out
push
hlt
sub
cmp
mov
lea
pop
and
cmp
push
cmpb
pushf
mov
lods
insb
stc
add
jns
ljmp
jne
xchg
mov
push
scas
adc
and
or
mov
mov
mov
jo,pt
add
or
pop
mov
lea
mov
imul
xchg
or
leave
shlb
aaa
cld
cmp
test
cmp
fisttps
std
dec
aam
call
dec
dec
or
lret
dec
cmpsb
add
lea
arpl
call
mov
jbe
lds
imul
sub
insb
sbb
fmul
in
idiv
pop
fistps
mov
xchg
jmp
cmpsl
rorb
push
sbb
cs
pop
push
imul
cmpsb
add
jg
mov
rorb
push
bswap
jmp
inc
xchg
mov
push
inc
jne
cmp
test
push
cmpsl
ja
pop
cld
cmp
aaa
aad
stc
mov
lret
mov
lahf
int3
cmp
pop
jb
frstor
je,pt
mov
jmp
notl
les
cmp
outsl
push
push
ja
inc
cld
inc
xchg
cs
call
mov
test
jl
lcall
xor
icebp
push
movsl
push
pop
cmp
and
into
and
roll
lahf
lods
xchg
xchg
lds
ret
andb
roll
dec
daa
adc
pop
cmp
ret
jno
fld
ja
lea
xchg
mov
loope
dec
int
insl
pop
cmp
add
aas
jg
xchg
dec
jnp
les
das
and
sub
sbbl
mov
cmpl
ljmp
pop
push
push
movsl
jp
sbb
into
jecxz
mov
fwait
adc
inc
jbe
xchg
stos
pushf
jge
test
add
mov
sub
cli
test
bswap
xor
cmpsl
pop
add
fst
lcall
mov
subl
xchg
mov
je
jnp
mov
jmp
mov
mov
lock
js
adcb
ret
sub
jle
mov
fbld
int3
xchg
lea
cmpsl
xchg
dec
mov
mov
in
int
jmp
jbe
popf
sbb
in
push
ficoml
stos
sti
icebp
dec
xchg
insl
mov
mov
mov
cmp
sub
xor
out
jbe
add
sub
mov
cmp
fwait
test
fidivrs
nop
mov
fcoms
lods
lcall
xor
jmp
aam
or
dec
out
pop
or
outsb
mov
inc
movsl
mov
pop
or
xchg
xchg
mov
add
hlt
loopne
xor
sbb
xor
jge
mov
dec
sbb
dec
cmp
stos
and
and
add
xor
mov
lcall
subl
es
cmp
dec
roll
in
out
sub
lret
jl
inc
fs
lret
ret
jne
sbb
stos
stos
rol
sbb
lods
xchg
xchg
lds
lcall
sub
and
mov
jg
xchg
les
pop
int
ja
xchg
push
xchg
fidivrs
es
in
adc
pushf
add
fldcw
sub
push
aas
xchg
loopne
add
mov
xor
iret
and
mov
cmp
rcrb
dec
orb
jge
stos
fisubs
mov
add
in
sbb
mov
jg
fs
mov
ds
inc
add
insl
arpl
call
mov
adc
xlat
mov
push
dec
mov
sbb
loopne
sbbb
clc
enter
mov
vaddss
and
pop
ret
add
std
sbb
xchg
fs
outsl
in
lea
pop
and
imul
adc
sub
cld
stos
in
cmc
push
in
loop
sub
lret
fs
sbb
test
inc
dec
and
jb
xor
mov
xchg
and
adcl
lea
inc
in
jno
mov
sbb
add
test
call
jae
loope
mov
mov
std
loopne
mov
dec
xchg
int
sbb
mov
mov
ds
xor
xchg
insb
or
stos
out
sub
adc
fsubrs
xchg
push
cmp
push
dec
pop
lods
and
sbb
xchg
lcall
xchg
lds
sahf
mov
add
xchg
in
roll
lret
js
mov
test
push
xchg
lods
ret
aad
lea
inc
push
setno
cmp
jmp
lds
pop
mov
popf
icebp
mov
rcrl
leave
das
mov
cmc
mov
es
out
pop
or
bound
xchg
xchg
nop
pushf
sarb
sub
insl
adc
mov
rorl
push
outsl
push
pop
andl
add
adc
cltd
push
dec
cmp
and
js
inc
pusha
call
js
jge
adc
popf
cmpsl
sbb
lds
jp
cmp
dec
call
xchg
mov
addr16
movsl
push
movsb
sti
data16
xlat
outsl
sub
or
repnz
or
and
daa
popa
mov
sbb
iret
scas
js,pt
dec
pop
xlat
push
push
and
scas
clc
and
stos
in
add
xchg
ds
mov
xchg
mov
sbb
mov
dec
sub
dec
lahf
pop
and
cltd
outsb
cmp
dec
pop
pop
mov
inc
fdivr
push
out
mov
inc
sahf
dec
and
jmp
mov
push
sbb
xor
test
inc
sub
mov
ret
jp
sbb
dec
push
seto
enter
daa
push
adc
pop
add
enter
ret
xor
pop
sbb
les
adc
xchg
inc
add
mov
lahf
cmp
push
cmp
cmc
xchg
cld
aam
adc
sub
loopne
leave
mov
mov
mov
into
lcall
dec
or
cmp
xor
cmp
mov
sbb
lods
xchg
xchg
lds
add
dec
lret
jle
xchg
sub
ret
outsb
lock
sub
call
mov
mov
fdivs
es
dec
jp
lock
das
call
gs
sahf
jno
clc
and
inc
ja
sbb
push
cmp
cmp
lods
mov
pop
adc
fsubrs
and
mov
out
sbb
cmp
add
out
pop
push
mov
inc
jbe
lds
pop
pop
jns
sbb
inc
dec
fwait
mov
inc
ficomps
mov
mov
es
psrlw
mov
sbb
add
sbb
in
lahf
dec
mov
pop
lret
pop
mov
xchg
shl
testl
adc
fsts
stos
dec
xchg
daa
scas
mov
call
jp
inc
loope
cmp
adc
lock
adc
cli
in
pop
in
or
mov
icebp
mov
push
je
rcrl
add
adc
cld
cmpsb
call
pop
iret
cmp
xor
mov
xchg
fnstcw
sbb
call
pop
mov
inc
hlt
xor
mov
mov
loop
xchg
push
push
cmp
outsb
shll
xor
mov
dec
sbb
enter
xchg
adc
enter
fs
stos
sbb
aam
jle
leave
inc
out
scas
nop
push
add
jg
add
out
inc
dec
mov
xor
hlt
cmp
push
xchg
mov
cmp
sbb
icebp
test
ljmp
push
jns
orl
mov
lret
lcall
mov
or
out
xor
and
stos
into
cltd
add
mov
ljmp
fs
sub
ret
rcrb
lds
jb
nop
and
dec
data16
cmpsb
cmpsb
dec
pop
mov
mov
das
scas
mov
imul
mov
scas
mov
imul
mov
mov
cmp
push
cmp
jno
push
mov
enter
lods
fcoms
ljmp
or
and
es
les
fs
aaa
adc
lods
iret
dec
cmp
mov
xchg
sub
add
mov
pusha
sbb
push
jns
cmp
ret
add
aas
jp
loope
int
sub
or
mov
aas
jne
adc
adc
or
mov
push
adc
mov
xlat
mov
jne
into
xchg
mov
and
andb
sbb
enter
adc
jge
insb
into
mulb
xor
arpl
mov
xchg
aam
adc
push
mov
lods
xchg
add
aas
inc
in
out
dec
xlat
ja,pt
or
mov
in
mov
sbb
dec
dec
lcall
es
inc
mov
mov
push
add
lea
pop
scas
xchg
sbb
ret
inc
push
mov
dec
rclb
jmp
dec
add
idivl
inc
push
xchg
ljmp
jbe
lds
int
cmp
ss
aad
call
cld
fwait
cmpl
ret
js
push
outsl
xchg
test
call
mov
in
inc
xor
mov
fcomps
sbb
mov
out
sbb
es
fs
dec
xchg
and
and
jl
es
xchg
mov
or
fs
xor
sub
inc
pop
iret
xor
data16
cmp
rdpmc
mov
push
push
rol
xchg
inc
jae
inc
std
les
into
xchg
xchg
xchg
dec
test
sub
mov
push
adc
out
aaa
or
fstl
std
les
sub
bnd
ja
rcrb
add
test
dec
push
pop
jb
cmpl
sub
xor
cld
outsl
xchg
pop
jl
aas
adc
pop
sbb
ss
adc
push
in
stos
mov
dec
cmp
xchg
cmp
fistl
mov
xlat
mov
lea
arpl
and
fbld
std
les
fs
fimull
les
shll
insb
es
fists
daa
and
xchg
or
stos
in
sbb
les
es
sbb
push
inc
test
dec
addr16
in
out
test
cltd
add
mov
or
scas
xchg
lds
std
les
cltd
into
xchg
add
cwtl
imul
ja
lds
cmc
lret
sbb
mov
lea
cmp
xor
cltd
pushf
xor
xor
cmp
adc
lahf
pop
movsl
push
arpl
xor
xor
pop
jl
jbe
add
inc
out
aas
call
or
ror
xlat
sahf
xchg
xchg
je
out
mov
dec
sub
adc
in
xorl
pop
movsb
xchg
aas
adc
cwtl
loop
pop
push
fucomip
jle
imul
aaa
mov
add
hlt
hlt
push
fadd
jo
jg
ret
add
shl
subb
pop
fwait
cmpb
lock
pop
inc
push
pushf
and
xchg
cmp
inc
shll
pop
ja
loop
sbb
cs
jb
or
cltd
mov
mov
pop
out
mov
imul
mov
out
push
mov
pop
xchg
cmp
in
ja
jae
adc
push
sub
call
lret
es
sbb
xchg
rcll
stc
in
lea
call
dec
pop
dec
pop
or
dec
sub
adc
xor
xchg
stos
rorl
sbb
nop
mov
inc
mov
lea
pop
scas
xchg
cmp
stc
pushf
adc
dec
rolb
in
in
sbb
jle
jle
ret
daa
cmpsl
das
std
les
pop
push
scas
mov
push
sbb
lds
dec
lret
arpl
ljmp
jne
lds
xchg
pop
jns
and
dec
jg
clc
mov
daa
ret
iret
cmpl
pop
sbb
in
xchg
cmp
in
xchg
inc
push
xchg
roll
jmp
mov
cs
imul
push
jecxz
loopne
repnz
sbb
jle
add
lcall
xchg
iret
jg
push
and
sbb
jmp
lods
jg
dec
sub
adc
adc
jecxz
out
pop
in
negb
inc
jg
int3
fs
outsl
mov
pop
adc
mov
xchg
or
jb
fistps
dec
adc
inc
std
enter
stc
test
mov
jmp
shl
rolb
stc
lods
xchg
xchg
lds
push
and
inc
fisttps
sbb
dec
sub
stos
int
inc
nop
add
in
in
push
mov
loopne
jns
popa
cmp
and
and
lock
dec
sub
fucom
jge
push
clc
cmc
aaa
mov
inc
inc
pop
and
push
mov
push
sbb
add
lds
dec
push
sbb
xlat
nop
lahf
inc
xchg
mov
dec
sbb
xchg
ds
lods
pop
in
lea
push
andnps
mov
pop
or
add
or
mov
mov
fs
repz
sub
cmc
xor
lahf
sbb
sub
test
movsb
call
mov
int3
xor
mov
aam
add
ret
or
lcall
mov
pop
seta
aad
in
lea
adc
jns
cmp
subl
aaa
pusha
push
cmp
fld
sub
fucomip
jle
xchg
clc
fidivs
mov
aas
clc
pop
fidivrl
jo
jg
rorl
mov
or
les
push
add
shl
pop
or
pop
adc
pop
inc
dec
ficomps
aad
mov
stos
ss
adc
cmpsl
insl
in
out
aaa
cmp
jnp
inc
je
out
stos
icebp
fistpll
inc
jge
and
and
test
inc
lea
adc
stos
loopne
add
into
enter
xchg
push
fdivrs
push
adc
mov
ds
dec
ficoms
and
jnp
rorb
pop
pop
test
loopne
jb
sti
movsl
inc
lock
clc
gs
dec
pop
cmp
test
pop
lret
jmp
lods
mov
pop
cmp
in
mov
iret
pop
imull
sub
push
aam
adc
sub
out
xchg
stos
mov
ljmp
cmpsl
cmp
push
sahf
inc
dec
je
sub
cmpsl
lock
jle
mov
call
sub
sti
fldenv
xor
ja
and
movsb
push
dec
movsb
insl
stos
jns
push
test
cltd
ss
adc
or
fcmovnu
cmpsl
shll
pop
sbb
dec
adc
stos
mov
clc
aam
out
lds
dec
lods
inc
jp
arpl
loop
add
mov
lds
push
mov
cs
ret
cmp
call
filds
mov
imulb
jae
pop
int
mov
mov
pop
roll
lea
test
xchg
xchg
std
inc
cmc
push
sub
in
and
xor
lds
aaa
jae
sbb
add
fstpt
scas
xchg
push
xchg
add
fistps
into
test
ret
lea
add
mov
sbb
push
stos
aas
push
scas
xchg
xchg
orl
std
dec
inc
dec
sahf
mov
xor
int3
fs
leave
mov
cwtl
aad
mov
adc
les
out
call
pop
cltd
scas
imul
les
incl
xor
xorb
dec
out
clc
jne
lds
sub
scas
pop
dec
stos
cmp
xchg
pusha
mov
adc
inc
adc
dec
ret
mov
jle
icebp
ret
inc
lea
jb
dec
sysret
les
mov
andb
mov
push
lahf
mov
sbb
sub
inc
sbb
cmc
orl
cmp
fiadds
cmp
adc
subl
mov
or
fdiv
adc
rcl
mov
jbe,pt
pand
cltd
mov
sbbb
in
cs
out
pop
sahf
test
sti
jne
lds
sub
fnstcw
dec
fldt
xor
and
adc
movsl
jl
ficomps
out
inc
pusha
mov
popf
lds
mov
dec
ret
ret
leave
dec
ret
cltd
lea
mov
xchg
ljmp
jbe
lds
ljmp
cmp
xchg
repnz
repz
stos
ror
sahf
out
mov
jnp
mov
xchg
xchg
cmp
and
bound
test
lds
test
je
cmp
stos
dec
int3
adc
mov
in
movsl
stc
in
fldcw
push
call
cmp
iret
or
sub
movsb
adc
mov
stos
mov
cmp
add
ffreep
lea
sub
ljmp
xchg
add
aas
adcl
lret
imul
mov
add
inc
sbb
push
ficoms
inc
lcall
cmp
add
push
mov
call
and
sbb
and
ja
pop
repz
jmp
mov
jo
or
scas
cmp
inc
fst
lcall
dec
lret
xchg
out
mov
sbb
pop
pop
cmp
cmc
dec
inc
fs
shrl
sub
call
push
jle
ret
add
xchg
cld
loopne
jb
arpl
xchg
mov
dec
jg
dec
or
dec
sub
lcall
jp
or
inc
mov
loope
cmp
lahf
stos
lret
xchg
cmp
pop
cli
dec
mov
outsl
int3
jae
data16
push
and
cmp
xor
sub
mov
rol
notb
leave
ja
jg
arpl
sbb
ss
test
repz
pushf
inc
scas
add
into
cmp
call
push
in
mov
filds
or
es
les
ds
xorl
cmc
push
or
pop
lods
pop
addr16
lret
cs
call
pop
mov
das
xchg
aad
fcmovu
mov
mov
xor
jp
movntps
lret
and
movsl
lock
fxch
fistps
in
xchg
mov
fs
mov
sbb
pop
lret
aam
cmp
lods
ret
js
std
les
cmp
in
jg
fs
gs
test
and
add
or
shlb
orb
aas
and
popa
cltd
jge
addr16
stos
sbb
push
add
stos
inc
out
scas
rol
inc
pop
mov
loopne
ljmp
mov
je
add
mov
sbbl
mov
std
mov
cmp
mov
fistpll
jle
dec
ds
adc
dec
and
bound
js
xor
ja
mov
lcall
sbb
shlb
add
and
inc
jno
lds
sub
mov
cmp
sub
push
jg
or
out
loope
lods
aas
push
in
shlb
add
lock
pop
es
sbb
aas
jge
or
pushf
ficoms
popa
dec
jb
cmpsl
sbb
sbb
or
sti
xor
lahf
mov
mov
es
add
lret
xlat
test
lret
rcll
cs
push
pushf
mov
add
popa
arpl
sbb
cmp
into
pop
out
addr16
and
and
cmpsb
push
sbb
cmp
xor
and
mov
call
test
loopne
sub
in
mov
lock
fisubs
pop
mov
xchg
lret
mov
cs
add
jg
lret
fs
lods
pop
aad
pop
fdivrs
mov
mov
dec
pop
mov
int3
mov
push
scas
stos
jo
test
mov
push
cmp
lahf
test
fs
jnp
push
dec
in
outsb
inc
decl
iret
ja,pt
cmp
repz
mov
xchg
mov
mov
sbb
fmul
xchg
add
ja
int3
ret
dec
push
sbb
cmc
fldenv
jp
lahf
add
mov
icebp
dec
lcall
mov
stc
and
arpl
jmp
std
inc
xchg
sub
negl
bound
xchg
cmpb
repnz
jae
dec
sahf
ja
bound
ja
test
cli
mov
jo
aaa
cmc
dec
or
jl
addr16
push
mov
and
roll
inc
pop
jge
pop
lods
jg
mov
adc
fsubrs
cld
lods
cmp
jae
in
arpl
cmp
sbb
jnp
mov
loopne
and
cmp
sbb
popl
shlb
or
out
push
mov
adc
fldcw
cmp
fistpl
xchg
mov
fdivl
outsl
movb
jne
addl
dec
push
fbld
js
mov
dec
add
in
lret
fidivl
mov
or
dec
sub
dec
pop
notl
sub
fsubl
adc
xlat
movsb
cmpsl
in
xor
sbb
shr
xor
xor
jbe
mov
in
push
dec
aas
cmp
sti
cmpsl
pop
push
les
fisttps
and
fildll
lea
call
fmul
test
js
mov
sbb
pusha
mov
lcall
lea
popf
sti
nop
and
lcall
add
inc
sbb
jg
xchg
clc
aaa
mov
iret
aas
icebp
add
dec
inc
js
adcb
in
sbb
dec
loop
mov
xchg
xchg
test
enter
gs
pop
and
pusha
sbb
mov
or
mov
mov
lahf
into
icebp
ret
stos
ret
enter
fldt
cld
stos
in
pop
fisubs
jmp
ret
enter
lea
push
adc
rolb
xor
dec
mov
push
mov
std
test
mov
or
mov
cmpsl
and
cli
in
adc
dec
rcrl
mov
and
lods
insb
mov
clc
insb
in
adc
jns
push
or
nop
xor
arpl
mov
cmc
mov
add
dec
les
std
out
enter
call
in
insb
mov
push
fwait
mov
sbb
lds
call
lds
loope
seta
aad
mov
leave
lea
call
push
and
addb
cmpl
cs
inc
sbb
rcll
in
lds
mov
fs
xor
adc
repnz
sbb
jae
or
insl
push
jns
leave
dec
sbb
outsl
testl
add
lcall
stos
push
ja
push
ret
test
dec
cmp
xchg
inc
sahf
dec
ds
xor
push
and
insb
dec
and
sbb
stos
lar
lea
pop
scas
nop
and
out
sub
push
cmpsb
frstor
xchg
cmp
pop
iret
stos
add
scas
aad
xchg
gs
pop
and
loope
mov
mov
pusha
sub
inc
pop
or
call
shlb
sarl
std
les
jg
cmp
or
test
les
fdivr
movsl
out
cmp
ffreep
add
lea
xor
mov
clc
jb
pop
mov
pop
stos
xchg
mov
mov
or
ret
lahf
loop
xchg
xchg
fcomp
aam
jecxz
arpl
jl
mov
loopne
movsl
mov
in
adc
mov
fucomip
jle
add
pop
xchg
push
mov
jo
jg
ret
add
rorl
ret
in
lods
fs
xor
in
jns
xor
mull
vmread
push
jecxz
in
or
jg
neg
ds
nop
ficompl
in
lods
decl
mov
clc
mov
sti
fistps
rol
mov
lea
mov
lcall
cmpsl
xlat
mov
sbb
inc
mov
sbb
dec
mov
cmp
jns
adc
out
nop
mov
arpl
mov
pop
div
dec
mov
xchg
cmpsb
dec
sti
mov
imul
fistpl
loope
xchg
add
inc
rorb
into
jle
pop
dec
jl
in
sub
loope
lret
push
aaa
adc
fsubs
jl
dec
jbe
les
push
jg
sbbl
sti
push
push
lods
xchg
xchg
lds
xchg
dec
repnz
loopne
sbb
jle
call
arpl
push
pop
loopne
or
rorb
in
rcrl
sbb
adc
es
mov
cmp
stos
sbb
ss
test
xor
daa
call
aas
inc
push
and
mov
adc
dec
dec
adc
loope
pop
fisubs
cld
cmp
xchg
sub
pop
lock
icebp
jmp
xchg
cmp
mov
mov
or
pop
jnp
jo,pt
push
xorl
in
in
adc
xchg
push
or
and
nop
xchg
and
mov
mov
outsb
inc
jg
adc
sbb
jmp
cltd
jp
push
and
and
dec
jbe
outsl
icebp
push
mov
pop
xchg
cmp
hlt
outsl
inc
mov
int3
fldt
sub
ljmp
pop
loope
test
rorb
in
dec
sbb
mov
orb
push
dec
ljmp
adc
dec
imul
pusha
icebp
les
stos
ret
js
jecxz
adc
cmp
lret
push
inc
xchg
push
les
test
js
and
push
orl
outsb
sbb
arpl
out
sbb
push
xchg
into
mov
mov
cld
lods
clc
dec
xchg
gs
dec
pop
and
inc
pop
mov
insl
xchg
jbe
lds
cmp
jns
adc
mov
jg
call
rcrb
jno
ret
outsl
icebp
xchg
ja
jge
mov
dec
xor
mov
cwtl
sbb
lds
push
fs
shlb
adc
sarl
inc
scas
push
outsb
inc
lods
cs
loopne
call
out
add
inc
mov
stos
cmp
in
cmp
xchg
test
stc
ja
shlb
cmpl
jo
out
dec
jo
lds
loopne
add
pop
ds
mov
cmpl
das
sbb
mov
lcall
pop
pushf
mov
pop
adc
movsl
ret
ds
shll
insb
mov
lds
mov
xlat
mov
gs
lock
and
comiss
xchg
jb
inc
invd
les
and
fadds
sbb
add
dec
xchg
aaa
addb
jl
cwtl
movsb
or
arpl
imul
cmp
stos
push
aaa
insl
rcll
jl
loopne
add
and
xor
lds
xchg
sarl
cmp
je
mov
or
and
shld
nop
mov
mov
xor
jmp
xchg
mov
jns
scas
dec
push
call
jge
ljmp
mov
mov
sub
sbb
out
xchg
mov
inc
in
adc
dec
jb
cmpsl
inc
cmpsl
xchg
push
call
packuswb
lds
icebp
sub
fimuls
jle
lret
mov
cltd
add
ss
in
cld
movsb
out
scas
imul
cli
mov
inc
stos
dec
lds
std
les
stc
das
stos
cmp
xchg
lock
dec
dec
sbb
ret
jno
enter
decl
lahf
push
xchg
xchg
stc
dec
xor
mov
xchg
or
xor
imul
cmp
or
stc
sbb
jg
cmp
lods
cmp
or
loop
inc
rol
mov
fsubp
jge
inc
clc
int
mov
cli
aas
not
jb
pop
push
jbe
ret
arpl
out
test
mov
pop
inc
push
cmp
mov
es
lds
push
fdivrs
and
out
xchg
jo
leave
out
add
or
scas
cmpsb
shr
mov
adc
mov
xlat
add
jle
and
mov
ljmp
out
dec
and
pop
adc
xchg
in
sti
dec
in
lea
in
popa
jns
sbb
inc
dec
popf
mov
scas
cmp
ret
outsb
lock
lcall
stc
push
pusha
xor
gs
dec
mov
sbb
mov
cmpsb
sub
les
cmp
nop
cs
out
sub
int3
cmpsl
mov
push
cmp
cmp
pop
xchg
mov
and
fsubr
into
mov
pop
pop
sbb
push
sbb
xchg
xor
imul
in
ret
jmp
inc
xchg
mov
les
adc
push
jns
shl
subb
leave
shlb
loopne
sbb
shll
pop
xchg
cmp
clc
outsb
inc
jg
cmpsl
adc
or
out
sbb
dec
into
jae
cmpsl
sub
inc
pop
fwait
adc
and
fidivrl
push
pushf
mov
mov
mov
mov
in
out
push
xor
call
mov
or
insl
push
jns
mov
sbb
or
xlat
sub
dec
loop
pop
cmp
mov
ss
lret
mov
cmp
sbb
xor
mov
fimuls
stc
out
jo
dec
pop
mov
xchg
jns
xchg
cwtl
leave
mov
jg
adc
sbb
int3
xchg
fwait
add
adc
dec
pop
and
fnsave
insl
pop
lea
pusha
adcb
push
inc
cmp
icebp
daa
sub
ljmp
mov
xchg
fwait
imul
cmpb
fldl
jl
scas
test
pop
in
add
xchg
loope
adc
fsubs
xor
ja
call
cs
sbb
sub
std
les
shlb
mov
fs
sbb
jmp
iret
leave
es
aaa
pop
scas
xchg
scas
fildl
stos
js
xchg
arpl
xchg
lds
test
mov
dec
ret
es
les
adc
sbb
stos
rol
pushf
ljmp
sbb
jae
pop
inc
lea
lret
jl
addl
mov
clc
cmp
lds
mov
mov
in
cmpl
mov
jl
cmc
mov
cwtl
loop
pop
lods
dec
xchg
lds
test
dec
cs
push
dec
les
std
les
push
aad
call
fadds
add
jo
mov
lret
xchg
cmpsl
mov
mov
push
xchg
cmp
push
mov
aas
inc
cld
ljmp
scas
test
and
inc
cltd
in
jne
fistpll
or
jbe
add
roll
mov
nop
mov
lea
rcrb
dec
pop
scas
push
arpl
addb
mov
mov
mov
mov
test
std
push
adc
fldenv
jae
jle
adc
iret
cmp
dec
outsb
lods
pop
add
call
lcall
ret
dec
mov
cmp
movsb
push
sbb
inc
add
dec
sbb
dec
fildl
dec
inc
mov
xor
lsl
lea
or
jns
enter
call
mov
mov
cmp
test
xorl
pushf
cmpsb
ds
push
fldt
fimull
add
xchg
sbb
adc
roll
jno
ljmp
mov
cmp
sbb
jge
sub
cmpl
sahf
test
pop
mov
repnz
inc
mov
outsl
push
popa
cmp
aam
adc
mov
movsb
outsl
imul
adc
cmp
scas
add
xor
mov
jae,pt
mov
icebp
in
and
push
adc
hlt
mov
cmpsb
sti
dec
enter
icebp
sbb
sub
jbe
dec
scas
cmpsl
ficompl
in
outsl
mov
or
into
pop
jbe
add
pop
pop
ret
sub
mov
lret
mov
clc
shll
popf
dec
mulb
adc
dec
aad
xor
jae
inc
popa
cmp
sbb
rcrl
movb
orl
mov
jle
dec
lahf
xchg
loope
bound
and
mov
jae
jns
xor
cmpsl
outsl
cmc
jae
mov
inc
pusha
leave
cmp
pop
aam
ficomps
mov
outsl
addl
inc
mov
popf
pop
sub
into
sahf
in
dec
lock
stos
mov
pop
add
push
inc
call
into
xchg
add
icebp
cmp
dec
push
sbb
nop
sub
les
in
mov
pop
cmp
in
das
inc
imul
push
dec
sub
call
dec
movsb
in
adc
test
mov
mov
cmp
xor
add
fcmovnbe
push
adc
add
rol
xor
jbe
adc
cmp
test
jbe
add
push
add
and
mov
mov
adc
js
fnstcw
and
popa
lock
orb
mov
sub
adc
scas
jmp
push
sarb
add
dec
and
mov
test
push
push
aas
dec
and
in
mov
in
add
div
in
mov
cltd
aas
push
in
loope
inc
mov
movsl
in
notb
insl
call
daa
cli
push
jae
roll
mov
xchg
xor
adcl
scas
call
pop
jbe
sbb
sbb
addr16
fst
lcall
nop
mov
dec
cmp
or
pop
mov
jge
fs
int
lcall
sbb
out
adc
or
ljmp
sbb
and
or
and
lret
cmc
and
fstpl
mov
adc
jo
mov
cwtl
orl
out
cltd
mov
and
sub
les
in
dec
or
std
fistps
test
xor
call
mov
mov
std
cmp
add
test
je
inc
cmp
add
and
cmp
adc
pusha
sbb
call
ja
loope
push
add
pop
lods
out
pop
arpl
dec
jmp
jle
lock
xlat
mov
xchg
add
sub
jbe
lds
jmp
arpl
test
jge
push
std
les
jmp
dec
adc
pop
jns
fadd
inc
je
aam
sbb
stc
xor
or
inc
fwait
lds
mov
mov
xchg
mov
popa
or
shlb
pop
sub
xchg
ljmp
jbe
lds
shll
jns
js
adc
pop
mov
ror
pushf
dec
adc
and
push
push
jle
rcrl
lods
xlat
mov
jg
cmp
xchg
incb
mov
and
iret
and
inc
arpl
xor
jbe
lds
jl
ss
dec
rolb
dec
sub
adc
mov
or
dec
movsb
call
into
mov
xchg
xchg
pop
leave
adc
lret
sbb
mov
lcall
mov
pop
scas
mov
lea
lock
icebp
cmc
jp
jo
fisttps
xor
mov
outsb
cltd
jns
pop
adc
clc
sbb
xor
jmp
aad
jl
out
mov
js,pt
pop
sti
sbb
bound
cmc
scas
stos
mov
lret
mov
cmc
and
add
js
pop
mov
or
dec
add
dec
adc
jb
pop
mov
push
sub
repz
jle
or
or
test
pop
xchg
pop
outsl
mov
jp
out
push
xor
jmp
cmpsl
lret
outsb
xor
imul
ss
stos
inc
clc
std
add
mov
stos
cmp
jbe
fiadds
fcomp
mov
push
dec
dec
xchg
aad
cmpsl
jnp
in
orl
pop
cmpsb
insb
adc
mov
enter
pop
lret
mov
shll
dec
inc
mov
inc
mov
mov
enter
testb
aad
fdivl
movsb
adc
fsubs
adc
cmp
enter
jmp
mov
in
jo
dec
lea
pop
test
iret
add
cwtl
icebp
mov
test
mov
sbb
lods
insb
mov
in
aaa
sbb
cltd
cmp
test
popa
arpl
xchg
lds
pop
mov
pusha
xor
inc
mov
dec
lahf
in
sbb
call
mov
fs
cwtl
lret
xor
lds
mov
lods
outsb
mov
cmp
daa
scas
mov
aam
out
adc
dec
les
sbb
lds
addr16
push
cwtl
lds
push
les
fists
loope
js
pusha
addb
inc
jle
mov
push
sub
call
jle
xorl
lea
les
adc
xor
push
mov
cmp
mov
lahf
mov
shll
ret
mov
jmp
into
movsl
add
push
rclb
gs
sbb
scas
ja
ret
jl
cmpsb
sub
les
adc
out
or
rclb
jne
es
arpl
xchg
cmp
cmp
sbb
and
scas
sti
inc
leave
fistpll
lahf
xor
repnz
arpl
xchg
shlb
and
cmp
xchg
bound
cmp
cmp
pushf
xchg
xchg
cmpsl
jl
xor
sbb
loop
sbb
test
push
push
mov
or
adcl
pop
lods
int
inc
ret
lea
dec
jle
jmp
xor
mov
xor
lret
mov
inc
lods
dec
cwtl
lds
cmc
jns
mov
dec
es
les
in
inc
adc
and
daa
sub
xchg
fsts
mov
test
ret
jmp
fs
mov
test
leave
sbb
arpl
ja
clc
in
lret
insl
pop
jns
lcall
adc
mov
cmpsl
or
jns
subl
mov
jne,pt
bound
sbb
push
pop
and
loopne
adc
idiv
aaa
mov
jmp
mov
movl
stos
scas
pop
setbe
enter
test
jns
es
addb
es
rorl
dec
sub
lds
js
in
sahf
push
not
push
imul
mov
push
out
add
dec
adc
mov
jnp
xor
mov
dec
inc
mov
pop
les
and
test
sub
ret
pop
scas
dec
es
les
test
xchg
in
sbb
dec
jmp
roll
xchg
jns
loop
scas
sub
pop
and
into
fs
dec
jge
mov
xor
sahf
sbb
lds
out
inc
xchg
out
push
add
lea
push
scas
xchg
sbb
xlat
adc
dec
dec
mov
cmp
loopne
repnz
xchg
dec
mov
shl
sbb
lret
push
adc
xchg
xchg
lds
inc
mov
sbb
dec
sub
adc
cli
sbb
pop
push
sbb
loop
adc
ret
mov
mov
pop
aam
or
fdivs
push
cmp
xor
pushf
sti
lea
mov
add
xor
mov
sbb
outsb
andb
hlt
xchg
jns
out
stc
ds
stc
sar
mov
lcall
psllq
jmp
sbb
or
lea
mov
push
shlb
fcompl
xchg
bound
loope
xlat
pop
mov
dec
xor
stos
les
jbe
add
ja
pop
xchg
and
inc
int
and
adc
mov
sahf
xor
pop
shll
cmp
cmc
dec
das
ret
call
mov
cwtl
ss
adc
cmp
aaa
cmp
test
push
fwait
and
pop
push
cmp
push
mov
mov
dec
jmp
stos
out
sub
ss
ja
jne
add
or
js
hlt
pop
arpl
das
shll
xlat
mov
pop
cmp
repnz
addb
dec
or
or
leave
stos
dec
dec
cmp
imulb
xor
sbb
test
mov
out
inc
xchg
addr16
and
xchg
sub
out
mov
jle
xor
imul
pusha
ja
incb
mov
and
adc
lea
std
les
xchg
insb
shl
or
ds
in
add
movsb
test
sbb
int
aas
or
les
push
inc
int3
inc
or
xchg
jne
cmc
push
or
push
fldt
aam
adc
lret
cs
aaa
add
pop
jge
shl
ja
in
push
test
ja
dec
adc
jl
fmul
mov
lret
loopne
ja
ret
xchg
mov
js
add
push
dec
mov
sbb
inc
je
cmp
stos
push
pushf
mov
pop
sahf
push
mov
rorb
mov
inc
xchg
imul
imul
les
fcoml
cmpsb
lcall
orb
and
addb
loope
dec
mov
cmp
call
add
in
jns
sbb
jecxz
ss
inc
add
rcrb
in
js
push
or
test
cmp
pusha
or
and
or
or
je
mov
mov
cmpsb
out
pop
les
and
out
fadd
test
test
add
movsl
test
mov
inc
pop
cmp
sbb
cmc
dec
or
xchg
daa
mov
pusha
stos
inc
dec
pop
mov
cmp
xchg
pop
cmp
pusha
dec
adc
movsl
cmp
loopne
sbb
dec
out
add
stos
sbb
movsl
daa
std
les
leave
repnz
xchg
push
stos
dec
hlt
roll
fnstenv
mov
push
sbb
int3
xchg
sbb
inc
cld
add
loopne
lods
cmp
neg
mov
mov
push
fwait
movsl
xchg
xchg
dec
mov
mov
and
mov
cli
shlb
mov
fld1
or
mov
jb
adc
dec
lds
outsl
popa
repz
arpl
pop
int
aas
and
jbe
jae
imul
adc
adc
xchg
add
mov
fsts
xchg
push
or
and
and
push
shrb
sbb
pop
add
mov
lea
jb
jns
mov
and
es
sbb
dec
or
pop
or
xor
jg
in
pushl
dec
mov
mov
push
push
mov
mov
push
mov
jne,pt
sbb
mov
xor
scas
xchg
lds
jo
pushf
sbb
mov
and
stc
test
inc
dec
add
jmp
call
rcrl
xchg
scas
std
push
add
sbb
mov
fbstp
inc
push
popf
mov
scas
or
pop
pop
ret
movsb
test
out
ret
inc
outsb
cwtl
cmp
stos
inc
mov
mulb
xor
push
aam
adc
sub
mov
into
lcall
jge
mov
fdivrs
test
ljmp
add
fs
leave
pop
aad
xor
std
loopne
test
cmp
stos
push
int
jb
inc
cmp
sbb
adc
test
adc
aam
jmp
xchg
cltd
mov
xlat
mov
daa
mov
mov
lds
stc
sbb
push
or
dec
jbe
in
lret
aaa
les
stc
mov
mov
clc
jb
js
cmc
add
insl
sahf
cs
enter
mov
xor
push
ficoml
cmp
xchg
test
jbe
push
cmpsb
arpl
pop
out
mov
jecxz
mov
out
addr16
pop
push
inc
ret
clc
or
jle
mov
sbb
lds
cmpsl
mov
dec
lock
test
xchg
xor
stos
nop
mov
shrb
xchg
pop
cmp
ss
test
xchg
in
sub
cmpsb
mov
mov
je,pt
fistpll
cld
cmp
imul
add
inc
mov
mov
pop
jbe
shlb
into
push
shrl
stos
pop
jl
add
inc
jl
pop
or
mov
movsl
sbb
daa
jns
push
sahf
rorl
frstor
imul
sahf
or
dec
lea
lods
data16
sub
and
sbb
test
cld
mov
ds
andl
out
sbb
scas
add
lock
or
test
or
frstor
mov
push
pushf
xchg
in
ss
movsb
lret
mov
jbe,pt
int3
popa
add
das
andl
mov
fs
.byte
es
