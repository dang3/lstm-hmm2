add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cmp
xchg
adc
leave
jne
push
pop
mov
add
add
pop
add
add
dec
add
add
or
roll
add
add
add
aaa
add
pop
add
cmp
roll
cmpsb
add
sahf
add
add
add
add
add
sbb
roll
pop
add
pop
add
add
add
add
adc
flds
pop
add
xchg
add
add
cmp
and
or
add
add
add
add
add
pop
enter
inc
add
add
add
add
or
roll
sub
add
add
add
add
push
add
or
roll
mov
js
mov
add
add
or
add
add
add
add
add
add
add
push
add
or
add
inc
add
add
add
add
or
roll
roll
add
add
add
add
inc
add
or
roll
add
add
add
pop
add
int3
or
add
add
add
sub
roll
and
pop
add
add
or
pop
roll
aam
adc
jne
roll
add
add
roll
add
add
add
add
add
push
add
pop
add
js
and
and
roll
sub
add
add
sbb
inc
add
add
add
add
add
sbb
mov
out
loope
cmpsb
add
cmpsb
add
add
cmp
popa
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
flds
inc
add
push
cmp
popa
add
add
pop
add
mov
push
add
pusha
add
add
add
xor
cmp
popa
add
mov
push
add
push
pop
add
add
add
add
add
add
test
add
aaa
add
add
cmp
sbb
add
roll
add
add
push
add
push
daa
add
add
pop
mov
addr16
add
add
add
add
xor
dec
add
dec
add
add
mov
add
add
add
xor
push
cmp
roll
out
push
add
add
add
add
roll
pop
add
add
add
pop
add
mov
add
add
sahf
add
add
add
pop
add
add
add
roll
pop
add
add
add
or
inc
add
push
add
add
add
add
add
stos
add
inc
add
add
inc
add
mov
sub
mov
sahf
add
adc
push
add
pop
add
roll
pop
add
add
or
add
into
add
add
sahf
add
add
add
add
pop
add
sub
imul
adc
push
add
pop
add
add
add
pop
inc
add
add
lcall
add
add
sub
sub
stc
add
add
add
les
pop
add
inc
add
bound
jmp
roll
mov
add
add
or
add
add
add
roll
add
add
add
roll
cmp
mov
mov
and
mov
pop
add
sbb
and
push
sub
roll
stos
add
push
roll
sub
push
add
or
add
add
cltd
add
add
add
pop
push
add
add
xchg
int3
or
add
add
dec
add
add
add
add
add
fadds
add
add
jnp
dec
add
add
bound
add
add
add
aas
add
add
add
add
add
add
sub
mov
add
add
add
add
add
push
aaa
push
add
out
pop
aas
cmp
ljmp
into
push
aas
in
int3
fisubl
cmp
add
and
lock
popa
fiaddl
xchg
ds
xor
movsb
dec
xchg
outsl
adc
mov
and
push
adc
xor
cmp
loopne
dec
pop
or
ds
xor
push
push
imul
push
push
push
jl
ficoml
rcrl
aaa
jmp
es
jbe
call
bound
or
inc
mov
sti
jno
mov
jb
sahf
into
jle
adc
ljmp
xchg
adc
push
std
sub
xchg
leave
sub
aad
repz
cltd
fisubs
mov
lock
mov
fwait
inc
mov
jle
and
jne
add
mov
cmp
jp
pop
lahf
add
push
iret
stc
cmp
dec
aas
pop
xlat
pop
rorb
pop
jb
xchg
cmp
imul
jno
xor
or
rorb
pmulhuw
pop
outsl
frstor
aaa
pop
roll
cltd
xchg
jnp
dec
imul
sarb
xor
jne
scas
cltd
push
cmp
lods
aad
mov
test
sub
inc
or
add
rcll
sub
ljmp
add
pop
mov
cltd
cmp
dec
enter
fs
sub
es
iret
mov
mov
in
add
movsl
stc
add
inc
add
rorb
jg
cmc
pop
sub
popl
arpl
or
adc
jo
inc
mov
fdivl
outsl
jecxz
mov
cwtl
ljmp
sbb
xor
loop
dec
xlat
and
shrb
dec
xlat
data16
mov
xchg
push
sbbb
mov
mov
int
dec
sbb
dec
je
pop
in
movsl
idivl
lds
adc
xor
sbb
test
mov
pop
stos
jae
mov
fwait
lret
repz
scas
xchg
jb
adc
sub
std
jmp
addr16
jmp
jno
imul
jnp
pop
push
aaa
rcll
lahf
idivl
negb
rorb
jl
fistpll
push
mov
push
dec
ss
clc
rcr
push
scas
xchg
mov
cmc
cli
adc
lds
cmpb
add
movsb
lea
cli
push
cmp
repnz
mov
in
inc
jmp
stc
xlat
sub
sahf
mov
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
xchg
inc
movsb
jne
gs
hlt
and
add
adc
and
xchg
push
test
movsl
test
inc
movsl
jne
les
hlt
inc
add
adc
inc
hlt
xor
inc
lock
test
movsl
test
inc
movsb
jne
les
hlt
and
inc
nop
push
mov
sarl
shl
sbb
dec
scas
hlt
ljmp
pop
cmp
scas
gs
dec
sbb
lock
popa
rcll
push
rcrl
cmc
call
outsb
mov
jmp
jge
mov
fisubrs
hlt
add
test
pop
pop
lret
outsl
out
and
jb
lret
sbb
push
mov
inc
fcoms
les
add
adc
sarb
and
test
gs
jle
jns
imul
sahf
fsubr
in
hlt
and
je
xor
pop
cmp
loope
mov
or
push
cs
xor
pop
sbb
sbb
xor
cmpb
gs
pop
fistl
inc
movsb
jne
les
hlt
and
and
xor
inc
xchg
push
test
jecxz
push
sarb
xor
and
push
mov
mov
movsl
cmpsb
fmull
push
xchg
xor
sbb
or
add
fstpt
xlat
sub
cmp
mov
in
mov
push
mov
mov
xchg
push
mov
lock
adc
imul
adc
push
adc
in
hlt
and
and
xor
inc
xchg
push
test
movsl
test
inc
movsb
jne
les
hlt
and
and
xor
inc
xchg
push
test
movsl
test
insl
sub
out
mov
mov
sahf
in
inc
sahf
sbb
sub
jns
add
fisttpll
add
push
lret
xchg
xchg
cmc
jo
mov
pop
fdiv
orl
hlt
push
das
in
ja
push
loope
xor
fiaddl
sub
mov
jg
or
ljmp
addl
mov
push
ret
shlb
adc
scas
rolb
addb
aaa
cmp
mov
frstor
out
adcl
scas
insl
es
imul
aas
adc
adc
jne
jg
sbb
out
jmp
jp
test
cmc
in
or
dec
add
xchg
add
push
dec
pause
js
test
into
xchg
les
or
rdtsc
and
push
aas
ficomps
add
fdivl
bound
dec
cmc
xor
lods
xor
faddl
popf
fcmovbe
push
push
ds
mov
sub
rorl
mov
push
mov
or
rolb
shlb
mov
std
mov
shll
pop
sub
rcll
std
loope
into
insb
xor
jp
mov
or
add
and
push
inc
lea
fdivr
or
test
mov
movsl
enter
jae
fidivs
pusha
or
mov
hlt
adc
rcr
inc
insl
sbb
idivb
push
mov
mov
jne
adc
into
das
jae
fnstsw
sbb
in
fiaddl
or
mov
sti
push
cmc
rcr
scas
pusha
sbb
add
in
out
jl
jnp
jl
ja
sbb
cwtl
call
mov
mov
push
jno
xor
adc
std
jns
and
cwtl
popa
add
pop
xchg
adc
pop
out
scas
fstl
add
sbb
daa
fiadds
xchg
test
mov
inc
mov
stos
call
adc
sbb
rorb
jge
xchg
jne
scas
cld
mov
add
xchg
cmp
cmp
jp
dec
fidivrs
popf
sbb
mov
loopne
pop
mov
and
and
fxch
mov
or
push
mov
loop
lahf
fadds
or
lods
mov
int3
fiadds
add
dec
jb
fsubrl
cs
imul
push
jg
std
mov
aas
ja
cs
mov
mov
cmp
or
cli
push
sti
inc
sahf
scas
out
pusha
push
add
shr
add
bound
mov
insl
or
mov
mov
ss
and
and
ss
jae
mov
dec
popl
insb
jne
mov
pusha
cltd
dec
cmpb
or
inc
mov
into
lods
outsl
or
push
jle
outsb
jae
add
pushf
mov
in
daa
rorb
imul
test
icebp
in
test
rolb
dec
inc
pop
adc
and
adc
inc
xlat
sub
sub
das
loopne,pn
pop
fldenv
sbb
dec
out
and
inc
inc
ljmp
jbe
pop
dec
ds
repz
inc
call
daa
sti
popa
lock
cmp
in
jge
mov
movzwl
sbb
mov
sub
pop
loopne
dec
lods
inc
push
insb
xchg
sub
test
enter
clc
inc
jno
test
je
mov
sti
mov
mov
std
sahf
and
sbb
jl
pop
xor
sub
fisttpll
cltd
mov
test
jae
in
sub
addb
nop
std
sbb
mov
rol
mov
fistpll
popa
mov
data16
sub
cmp
aas
fists
pop
mov
xlat
sahf
dec
push
jno
xchg
mov
inc
dec
mov
out
ja
mov
lods
add
mov
scas
sarb
outsb
outsl
xchg
adc
ljmp
cli
mov
test
mov
pop
sbb
mov
mov
jno
adc
roll
sub
sbb
cmp
cli
mov
or
lods
bound
mov
pop
mov
adc
mov
mov
inc
cs
xlat
mov
xlat
xchg
mov
push
jg
dec
adc
inc
sub
cmc
cmpsl
xchg
push
iret
cwtl
movsl
push
push
lea
scas
add
mov
mov
rcrb
lods
or
xor
into
iret
fnsave
fs
or
mov
push
pop
lcall
cmpsb
shll
lret
pop
ss
bndldx
jg
pop
sbb
test
popf
cmpsl
fmuls
jno
lcall
call
push
ds
shr
mov
repz
lcall
pop
jne
or
xor
iret
out
add
or
jmp
ret
cs
enter
jae
jae
xor
je
jns
inc
mov
push
inc
mov
pop
shlb
aad
xchg
jp
aad
pop
push
jecxz
inc
jb
testl
or
sub
jmp
je
repz
or
movsb
js
popf
jge
inc
mov
arpl
adc
popf
pop
insb
ja
je
iret
push
push
adc
mov
les
popl
stos
icebp
stos
fisttpll
aaa
mov
addr16
mov
ja
mov
xchg
shl
leave
out
std
sub
mov
scas
pop
clc
mov
out
cltd
mov
pop
adcb
inc
jecxz
mov
jno
push
pop
cmpb
and
or
or
xor
mov
pushf
xchg
sti
and
rol
inc
call
xchg
mov
fdivl
jmp
bound
das
and
adc
jmp
xlat
repz
mov
dec
cs
retw
out
mov
push
iret
lds
int3
jmp
ficompl
jg
push
cmp
jne
add
dec
xchg
mov
mov
xor
ret
jp
jbe
dec
xor
stc
or
mov
das
pop
popf
jne,pt
mov
mov
pusha
out
adc
movsl
jge
cmpsl
repz
int3
ja
sbb
and
xlat
adc
jecxz
fimull
cmp
outsl
xchg
punpckhdq
cmp
mov
hlt
sbbl
lds
mov
stc
and
es
pop
aas
dec
mov
leave
hlt
sub
mov
adc
add
cmc
mov
dec
inc
rolb
add
mov
adc
mov
lods
push
movsl
inc
scas
pop
pop
lahf
xchg
or
jle
sbb
mov
pop
jno
dec
pushf
push
mov
lds
and
movsl
push
shll
dec
and
and
push
ljmp
neg
dec
pop
mov
cmp
pop
dec
into
cmpsl
sub
enter
jge
shlb
push
push
cmc
ret
mov
xchg
popl
xchg
cmp
cmp
daa
jnp
loopne
jmp
in
mov
call
leave
iret
pop
adc
ja
aaa
divb
cmp
or
shlb
sti
cmc
idiv
dec
sahf
es
sbb
adc
pop
fdivr
inc
sub
inc
and
add
scas
test
test
addr16
sbb
sbbl
adc
fidivl
and
outsb
hlt
and
inc
jno
filds
loop
in
cmpsl
sti
mov
call
icebp
mov
cmpsb
aas
or
or
sbb
out
in
into
cmc
inc
scas
xor
ja
aaa
test
dec
fnstsw
sbb
dec
repnz
aas
jecxz
in
lods
pop
stos
cwtl
scas
add
or
jg
mov
pop
lds
rclb
sub
mov
xchg
lods
mov
and
sub
pop
or
inc
nop
popa
xor
pop
sbb
mov
pop
mov
test
rclb
data16
ja
pop
fsubl
adcl
jae
popa
mov
std
js
sbb
pop
jl
stos
icebp
adc
pop
push
out
xchg
mov
pop
cmp
loopne
xchg
jg
into
aam
pop
mov
or
sbb
popa
jne
cmpsl
push
sbb
jbe
mov
xchg
mov
jle
add
dec
inc
lods
outsl
xchg
test
cltd
stc
xchg
lock
jg
iret
sahf
fcoml
loope
xor
xchg
je
mov
stc
mov
pop
orl
hlt
mov
aaa
loop
test
lcall
pop
int
pop
push
sahf
xor
addr16
aam
je
or
adc
cmpsb
dec
outsb
mov
add
jecxz
mov
pop
pop
adc
inc
inc
std
and
fmuls
cmp
jne
orl
repz
mov
repnz
test
cmpsb
cmp
cld
xor
xor
sahf
in
pop
in
xchg
jg
pop
rcll
clc
pushf
adc
lods
mov
inc
xchg
subl
iret
in
add
mov
ja
mulb
call
or
mov
fld
and
je
stos
insb
pushf
mov
adc
lcall
shl
mov
xor
pop
push
jns
jle
push
cld
pop
xchg
push
push
mov
pop
mov
icebp
cmp
in
fstpl
ss
and
pop
pand
add
mov
into
xchg
or
les
inc
sub
sbb
lock
pop
or
jle
sbb
nop
pop
aad
mov
or
mov
xchg
mov
test
sub
hlt
add
mov
addr16
leave
fnstenv
mov
jnp
lret
mov
dec
loope
jp
jecxz
stos
and
movsb
mov
test
mov
mov
mov
mov
test
cmpsb
xchg
scas
fwait
std
arpl
loop
mov
push
mov
cmpsl
ror
mov
lds
in
fnsave
fmulp
cmp
mov
and
mov
psubsb
inc
aad
adc
mov
mov
dec
sub
in
sub
outsb
pop
jge
lret
mov
push
mov
ja
jmp
jnp
push
push
rolb
out
or
sub
xor
aad
pushf
sub
xlat
cmp
imul
and
es
push
push
aam
leave
clc
test
xor
mov
pop
mov
pushf
adc
xor
insl
rorl
add
cmp
cmp
dec
mov
sbb
aaa
or
mov
sub
repnz
xchg
and
gs
xlat
pop
jl
inc
popa
sbbl
or
mulb
cmp
fdivl
lock
cmc
aad
mov
aaa
lea
and
mov
lea
std
mov
mov
imul
pushf
iret
inc
je
mov
add
or
cltd
xor
jbe
andl
dec
jle
dec
es
xchg
cmp
sub
popf
sbbl
pusha
insb
in
shll
shrb
cmc
xchg
jp
iret
ja
pop
push
sbb
das
out
enter
int3
cli
jae
mov
out
cmpsl
je
ret
jnp
cmp
sub
and
das
jge
add
pop
push
in
insl
leave
dec
and
and
rolb
jg
push
sti
dec
xlat
xchg
jmp
ljmp
loopne
push
pop
adc
adc
cmp
and
mov
or
cmpb
movsl
pushl
leave
ds
xchg
ja
inc
sbb
pop
dec
insl
daa
sub
add
adc
jle
aas
test
xor
jp
out
icebp
xchg
pusha
mov
xchg
sub
scas
lods
or
mov
add
scas
arpl
inc
xchg
jge
out
iret
gs
sub
jge
pop
rclb
stos
jbe
cmp
add
xor
sbb
ja
dec
movsb
repz
pop
and
int3
pop
shll
scas
hlt
inc
mov
push
fisubrs
fwait
jo
push
add
aaa
movsl
push
fwait
pop
xchg
movsb
fs
inc
inc
sbb
jbe
dec
or
or
aam
out
cmp
sti
mov
xor
fistps
cmc
popa
xchg
test
cld
jb
cld
insl
cmp
jno
jmp
es
bound
outsl
mov
outsl
sub
into
lods
js
pop
out
rcl
pop
popa
popa
sbb
pop
xor
loope
jge
mull
adc
dec
xor
jmp
cmpsl
loop
sbbb
jmp
aaa
jle
add
lds
es
dec
pop
pop
lods
push
sarl
push
jl
xor
in
gs
insb
sbb
push
lods
sub
inc
and
int3
push
aaa
xchg
aaa
aaa
les
mov
into
cmp
cwtl
pushl
or
aam
or
or
push
repnz
movsl
pop
xlat
lock
ljmp
sbb
sub
lock
ja
sahf
xchg
or
mov
aad
addr16
mov
fucompp
push
insb
xchg
mov
xor
mov
sbb
clc
ror
popf
push
lds
jae
dec
imul
pop
mov
or
mov
jbe
out
and
sub
pop
dec
mov
jb
sahf
pop
femms
pop
int
push
and
iret
add
mov
mov
mov
cmpsb
sbb
sbb
fcmovnu
adc
jge
mov
mov
or
into
shl
adc
inc
lods
movb
pop
leave
int
je
cmpsb
daa
push
movsb
bound
xchg
imulb
aad
int3
sub
xor
out
and
inc
test
sysexit
in
mov
fmul
icebp
mov
or
inc
mov
jl
xchg
sub
aam
add
aam
mov
mov
xchg
outsb
mov
aam
mov
xchg
and
mov
pop
or
jge
xor
imul
push
cltd
xor
imul
pop
sbb
xor
mov
cmp
pop
sub
cld
pop
movsl
and
int3
lods
or
sub
or
aad
inc
mov
xor
shrb
cld
sbb
xor
aam
ss
inc
cli
inc
pop
test
cmp
jmp
stc
jnp
lock
sbb
aaa
lahf
sahf
pusha
lds
fcomi
fists
popf
jge
fcmovnbe
push
pop
pop
dec
fwait
mov
lcall
inc
cmpsl
jmp
cmpsb
xchg
divl
cli
push
push
push
pop
sub
sub
rorb
decl
aas
mov
pop
dec
xchg
shl
repz
inc
imul
std
or
ffree
aam
lds
test
shrl
and
jmp
add
pop
jnp
mov
test
shll
lret
cmpsb
pop
cmp
insl
sbb
cmpsb
jnp
mov
mov
xchg
jb
push
aam
jecxz
dec
jns
push
mov
movsl
add
out
sbb
fisttpll
es
fwait
add
cld
sub
xor
pushf
mull
and
sahf
fcomps
fdivl
pop
clc
in
rorl
sub
fistps
jmp
xor
mov
xchg
and
lods
xchg
call
adc
out
fstpt
into
loop
in
fildl
hlt
iret
out
mov
stc
inc
cmpsl
mov
fwait
or
sbb
rorl
xor
adc
ljmp
mov
aam
cwtl
and
rorl
pop
arpl
nop
or
inc
cld
xor
push
jg
lahf
and
xchg
fwait
jl
mov
std
rcrl
pop
loop
hlt
add
into
sub
jb
dec
repz
xlat
mov
and
outsl
fisubrl
jl
sub
mov
and
and
xor
lret
jp
push
dec
insl
pop
jl
mov
sbb
cmpsl
in
sbbl
jnp
icebp
fbld
jecxz
je
mulb
pop
push
notl
popf
cltd
call
push
fisubl
es
movsb
jl
pop
push
faddl
adc
push
pop
lods
sbb
cmp
xor
roll
push
fdivr
ret
out
adc
xor
or
andl
sub
lods
les
cmp
dec
or
lds
nop
add
lods
xchg
push
dec
pop
test
jg
lret
pop
out
nop
dec
jns
ljmp
jb
cmp
dec
pusha
ds
aaa
lcall
arpl
dec
xor
add
jnp
xchg
cld
stos
push
movsl
enter
xor
fisubl
popf
and
mov
sarb
aam
sarb
sbb
test
out
xor
dec
inc
xor
xchg
lods
xchg
mov
repnz
mov
pusha
jbe
subl
rcrl
fs
sar
pop
inc
jmp
and
pop
mov
jno
adc
movsb
sahf
dec
adcb
daa
mov
adc
xor
aas
cmp
cmc
and
andb
xor
xchg
push
cltd
cmpsl
mov
mov
cltd
shlb
xchg
cli
fwait
mul
int3
push
jae
or
test
icebp
scas
sub
mov
js
or
inc
popw
dec
and
and
sub
mov
cmp
add
movsl
xchg
hlt
int
dec
fsubp
mov
mov
test
add
lods
fldl
das
fisubrl
cltd
fsubr
mov
jg
data16
ss
mov
imul
jne
mov
scas
iret
mov
push
mov
mov
pop
inc
xchg
jbe
cmp
xchg
std
stc
jo
and
arpl
inc
faddl
stos
icebp
movsb
and
stos
js
stos
popf
sub
mov
test
xor
or
les
or
in
fldcw
pop
add
lods
sub
xchg
clc
push
xorl
or
popa
ret
fstl
jl
adc
mov
sbb
push
test
call
dec
les
xor
sub
fisubrs
push
xor
inc
nop
cmpsl
mov
cmp
mov
mov
into
adcb
div
das
xor
in
pop
neg
or
into
fwait
mov
mov
add
mov
aam
mov
mov
xchg
rcll
cltd
nop
xor
adc
adc
ret
aas
test
xchg
notl
jl
push
xor
jno
pusha
cmc
sub
or
inc
repz
and
cmc
xor
out
insb
movsbl
jno
xchg
xchg
inc
and
xchg
push
cvtpi2ps
and
pop
clc
jecxz
jl
outsb
jo
je
sub
adc
out
aad
dec
lock
mov
sbb
or
lahf
sahf
testb
fwait
stc
lods
ds
psadbw
cmp
jae
or
jae,pt
lock
dec
clc
cmp
lock
xchg
and
lods
jecxz
xchg
xor
popf
dec
push
cmp
fwait
sbbb
push
mov
mov
aam
or
cmpsl
das
push
jnp
dec
fwait
lcall
lods
cmp
in
mov
mov
cmp
cmpsl
push
movsl
mov
jp
pop
pop
and
in
roll
xor
stos
jmp
sub
pop
rep
pop
imul
dec
rclb
pop
popf
and
mov
hlt
add
jns
dec
cmp
xlat
pop
fisubrl
repnz
fisttpl
push
lods
fbld
or
cmp
pop
jg
das
dec
fdivl
dec
pop
inc
or
icebp
ret
mov
push
pop
fs
sub
in
out
in
call
dec
popa
xchg
cltd
adc
push
dec
jecxz
add
aaa
in
sub
jp
ret
outsb
in
bnd
jns
loop
push
push
shlb
pop
jno
scas
jmp
inc
das
sub
push
popa
jb
jecxz
lods
sbb
push
scas
add
dec
jno
jecxz
les
pop
mov
jb
sbb
pop
xor
add
outsl
or
pop
and
add
mov
and
xchg
cmpsb
enter
pop
pop
jns
into
sti
sub
xchg
adc
xor
in
inc
jb
dec
cld
ja
jg
shr
int
not
pusha
stos
ds
repz
movsbl
and
adc
std
in
add
lcall
icebp
loop
dec
subb
or
xor
xchg
dec
lock
cmp
ds
sbb
popf
dec
stos
cmpsb
lcall
movsl
ficoml
dec
jne
jbe
iret
xor
mov
jg
jo
pop
and
jno
mov
add
jg
sbb
out
push
mov
add
adc
int3
std
dec
pop
push
mov
daa
mov
add
jp
inc
xor
sub
ds
cmpsl
and
and
pop
add
aad
ficoml
cld
jae
inc
cld
icebp
cltd
cmp
adcl
mov
or
sbb
cmp
repz
push
in
mov
sub
or
pop
imul
das
stos
jno
or
jbe
mov
cmpsb
pop
add
xor
jle
das
xor
sbb
shrb
int3
mov
jecxz
shlb
push
stc
sub
add
lods
cwtl
imul
inc
push
pop
imul
data16
jmp
xchg
xor
scas
aas
pop
lcall
cmpsb
fisttpl
mov
iret
test
cmp
das
jge
inc
mov
mov
les
hlt
and
and
xor
inc
xchg
push
test
movsl
test
inc
movsb
jne
les
hlt
and
and
xor
inc
xchg
push
test
movsl
test
inc
movsb
jne
les
hlt
and
and
xor
inc
xchg
push
test
movsl
test
inc
movsl
jne
les
hlt
in
aad
outsl
mov
xor
xor
mov
lods
or
jae
arpl
xor
and
jecxz
loope
xchg
enter
ljmp
jae
arpl
dec
add
push
mov
mov
mov
lock
push
cli
mov
mov
and
jp
or
bound
push
xorl
stc
in
shl
fcmovbe
movsl
in
cmpsb
in
mov
cmp
pop
call
mov
pop
jno
xor
repnz
js
mov
fwait
push
cmc
add
xchg
lahf
jo
dec
std
mov
mov
jecxz
push
fcmovbe
cli
mov
out
in
test
sub
pop
cltd
inc
into
add
inc
stos
iret
int
jne
orb
fiaddl
ljmp
jae
push
movsl
xor
test
fcoml
orl
and
cmp
leave
dec
imul
movsl
xor
aaa
arpl
ret
mov
sti
lret
mov
pop
repnz
ljmp
sub
mov
bound
out
repz
rcrb
rcll
push
cmp
jns
adc
jp
jae
or
mov
xchg
loopne
ljmp
jb
bound
inc
sub
aaa
pop
push
lcall
mov
scas
rorb
sub
push
add
ss
dec
xor
cmp
stos
out
mov
mov
jg
es
adc
adc
add
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
test
jo
cs
push
sub
dec
fisubs
mov
in
popf
test
pusha
icebp
aad
in
loop
sub
xchg
int3
nop
dec
in
or
and
xor
mov
ret
adc
dec
sti
ret
sbb
pop
inc
inc
outsb
push
jnp
jp
xor
out
stos
xor
shl
sbb
cmp
pop
sbb
mov
mov
ljmp
xor
push
jo
in
mov
filds
lcall
cld
testl
jb
xor
adc
inc
xchg
cmp
push
out
call
sub
xor
fs
cmp
or
out
shl
out
fucomip
pusha
or
pop
jo
popf
inc
mov
fistl
xchg
pop
leave
jae
out
inc
call
mov
jmp
lea
sti
out
cs
dec
popa
jle
xchg
push
cmp
das
fs
cmpsb
hlt
dec
inc
gs
sahf
nop
lahf
push
xor
iret
scas
ret
push
mov
es
inc
cmp
xor
sbb
std
mov
cmp
stos
adc
push
xchg
jl,pn
xchg
dec
xchg
js
mov
cmp
cltd
pop
lret
dec
jne
cltd
mov
daa
sbb
mov
jle
int3
push
sbb
inc
dec
add
xor
dec
leave
jne
insl
mov
lods
adc
jle
jmp
outsb
jae
adc
insb
ljmp
fs
adc
pop
aad
sbb
iret
mov
iret
or
dec
push
xchg
stos
icebp
jle
lock
pusha
xor
sahf
cmp
and
aaa
and
ja
pop
push
arpl
call
pop
insb
mov
dec
mov
pop
xchg
dec
ja
xor
gs
cmpsl
pop
sbb
testb
jmp
popf
loope
ja
pop
push
imul
cld
mov
ror
iret
lahf
fwait
sbb
mov
sub
ljmp
in
mov
pop
jl
or
adc
cmp
jp
stos
or
xlat
ret
add
mov
ljmp
arpl
test
pop
cmp
inc
sub
aaa
js
arpl
mov
mov
push
in
mov
push
repnz
jp
mov
pushf
aam
rcl
bound
push
mulb
fstpt
dec
shlb
add
mov
ret
imul
push
inc
inc
imul
dec
das
mov
pop
adc
scas
pushf
mov
sahf
mov
and
fucomip
mov
in
sarl
xorb
in
xor
lret
lahf
add
out
outsb
adc
sub
mov
lds
das
push
fsubrp
xor
mov
cmp
mov
xchg
aam
dec
cmpl
and
inc
icebp
or
xor
dec
add
mov
push
into
enter
fisttpl
sahf
lds
insl
rorl
mov
and
adc
daa
mov
mov
nop
mov
xchg
in
mov
outsl
inc
outsb
pusha
or
mov
aaa
imul
push
and
fldt
cwtl
ret
loopne
and
mov
movsl
pop
lock
or
pusha
add
lods
call
in
jmp
jae
xchg
fildll
outsl
stc
inc
sbb
or
test
int
adc
sub
cmp
inc
sbb
nop
test
mov
jne
outsl
xchg
loopne
lcall
lock
push
pop
jge
test
sub
mov
inc
push
and
xchg
mov
ret
add
cwtl
ds
aas
jmp
dec
roll
xchg
clc
ds
shll
dec
cmp
in
mov
insb
jno
sbb
repz
sti
pop
negl
adcl
dec
insl
mov
packsswb
mov
jecxz
ja
hlt
outsl
test
hlt
jle
iret
stc
std
fnstenv
fiadds
je
imul
dec
scas
in
push
lods
js
dec
subb
cltd
lds
xchg
sbb
jb
xor
cmc
mov
push
std
into
jl
movswl
in
mov
push
jg
xor
jo
inc
cli
push
fmulp
push
test
jmp
xchg
or
addr16
inc
pop
mov
mov
pusha
js
dec
fwait
xor
jmp
mov
lock
shll
pop
aad
or
jmp
repnz
sbb
imul
iret
xor
dec
lds
arpl
movsl
mov
mov
mov
pop
and
mov
fisttps
in
mov
push
pushf
jge
sbb
int3
daa
or
lods
xchg
inc
sbbb
inc
lret
push
in
mov
addb
sub
pop
in
in
xlat
mov
fdivr
pop
xchg
mov
inc
mov
aad
inc
std
adc
movsb
inc
mov
or
sub
mov
dec
mov
sbb
cmp
mov
lods
or
dec
jl
push
and
flds
inc
xchg
jns
scas
in
ljmp
out
popf
add
push
push
inc
sahf
les
sahf
addr16
pop
sbb
cmp
sbb
adc
es
push
out
fiadds
sub
aas
in
dec
stos
movsl
mov
mov
mov
mov
sti
mov
jae
dec
out
and
outsb
addb
add
mov
xor
adc
xor
cmc
daa
repnz
fcmovu
leave
adc
inc
lret
jmp
pop
push
cltd
pop
cmc
outsl
in
fisttpll
jg
lds
xor
outsb
pop
cmp
scas
out
xchg
and
jno
dec
aaa
cmp
stc
xor
adc
mov
lock
add
ljmp
stc
add
push
in
or
push
xlat
cltd
shrl
pop
xlat
inc
cmp
ret
dec
hlt
jb
xchg
ds
dec
stc
xor
push
push
and
in
mov
mov
push
inc
xor
sub
mov
mov
adc
cmp
sarl
inc
leave
stos
xor
cmp
xchg
sub
movsl
jno
push
and
and
xchg
fbld
jl
ljmp
out
sbb
pop
stos
jmp
mov
sbb
sbb
inc
pop
pop
daa
aas
mov
or
mov
enter
pusha
test
sti
call
shll
enter
or
es
cmpsl
repnz
xchg
pop
mov
adc
in
sub
lds
js
rcrl
push
js
idivl
pop
nop
bound
lods
into
push
push
sub
sub
pop
lods
jecxz
and
cmpb
xor
sarb
push
test
or
ret
jo
dec
adc
sbb
out
dec
xor
dec
adc
out
repz
xchg
xlat
sub
mov
jbe
dec
sub
inc
nop
mov
xchg
dec
mov
rorb
arpl
cltd
out
cmp
or
add
sarb
xchg
push
loope
mov
adc
mov
mov
pop
rcrb
pop
aad
xor
mov
inc
inc
inc
decb
aas
loopne
bound
int
pop
cs
mov
xchg
imul
push
push
jo
xor
inc
mov
sbb
push
cmp
xchg
je
push
in
sbb
outsl
mov
jle
mov
push
test
jecxz
adc
jp
stos
cmc
cld
popa
or
or
mov
and
lahf
pushf
jnp
sbbb
inc
sbbb
cld
lock
out
pop
insb
push
cmp
adc
pop
xchg
cmp
subl
cmp
fistl
lahf
inc
rorl
push
lahf
mov
lock
pop
loop
mov
gs
mov
ja
roll
stos
cmc
or
add
cmpsl
or
popf
stos
insl
iret
aas
jmp
mov
mov
sub
fwait
pop
lret
in
xor
pop
push
push
test
sti
mov
incb
mov
push
mov
adc
mov
mov
test
xchg
cmp
andl
int
sti
xchg
arpl
ss
jecxz
aam
in
std
ljmp
sbb
inc
xchg
mov
sbb
add
adc
popa
aas
int3
scas
mov
mov
mov
test
and
fadd
int3
addr16
hlt
rcrb
and
dec
push
fucomip
js
and
rcll
push
inc
arpl
adc
imul
leave
cmp
inc
and
hlt
sub
push
jmp
test
test
or
das
inc
pop
pop
aad
dec
rorl
and
pop
lock
adc
xor
jne
popa
decl
stos
jb
in
cwtl
daa
dec
add
imul
sbbl
dec
imul
imul
xchg
pop
adc
push
mov
dec
xchg
sbb
in
lea
mov
mov
jnp
or
mov
sarl
dec
add
loope
nop
faddl
mov
add
aam
test
test
jl
pushf
mov
jae
sub
iret
inc
stc
mov
cwtl
lret
inc
fdiv
mov
in
dec
stc
sarl
pushf
inc
clc
adc
lcall
sub
jmp
in
push
test
or
fnstsw
pop
xchg
jl
or
arpl
jnp
je
aas
sbb
jge
pop
shll
out
cmp
xor
lods
inc
dec
cmp
mov
lret
pop
lock
and
rolb
pop
push
cs
mov
insb
xchg
lret
push
adc
adc
mov
lds
mov
mov
push
mov
and
or
mov
int3
int3
add
cltd
inc
jne
mov
outsl
and
push
testl
xor
mov
jbe
loope
bound
or
or
xchg
inc
pop
pop
mov
pushf
fs
mov
xchg
xor
push
inc
mov
mov
jbe
je
pop
mov
or
and
dec
jnp
imul
aad
addr16
inc
cld
push
jae
mov
imul
dec
fcompl
inc
ret
out
pop
cmp
and
xor
pop
clc
cli
pop
icebp
pop
xchg
dec
jge
xor
jno
mov
lret
sti
xchg
iret
push
pop
or
jno
or
add
sub
push
xchg
mov
subb
xchg
stc
stc
cmp
jp
xchg
fdecstp
pop
movsb
add
aam
test
stos
iret
fsubl
or
mov
adc
jl
pop
jno
push
fdivrl
push
add
popf
jmp
mov
stos
dec
dec
pop
add
lret
mov
sbb
pusha
idivl
mov
ja
mov
jp
test
push
adc
and
xorl
jl
push
xor
inc
sahf
push
dec
jg
lret
sub
shl
loopne
sub
and
and
xor
faddl
sti
fnstsw
std
mov
push
add
xor
mov
jnp
pusha
insl
arpl
sti
sbb
ficoms
sbb
mov
hlt
iret
mov
fwait
xchg
inc
adc
push
repz
or
insl
inc
dec
adc
xchg
outsl
adc
push
call
fnstcw
in
popa
scas
mov
ljmp
or
pop
adc
add
daa
test
xlat
inc
daa
imul
into
pop
andb
sbb
inc
popa
push
pop
call
pop
aad
jg
add
lock
fucom
sahf
je
cmp
and
call
jmp
xchg
imul
andb
push
push
dec
data16
loope
fists
into
addb
jmp
insb
outsl
cltd
stos
insl
or
mov
outsb
sub
sbb
push
fs
jmp
lcall
cmp
mov
mov
flds
or
jmp
mov
enter
rcl
ror
mov
cmp
or
xor
adc
cmpsl
jae
xbegin
je
lea
jae
bound
mov
pop
mov
aam
inc
test
adc
and
aad
pushf
setns
frstpm(287
icebp
icebp
js
or
mov
push
lock
movsl
fistpl
mov
rol
cmpl
ds
packsswb
aad
mov
jl
js
mov
jne
pop
dec
mov
imul
add
mov
mov
je
or
lods
ds
clc
fdivl
mov
jns
and
jns
mov
and
outsl
mov
mov
inc
jmp
loopne
xor
lahf
sbbl
sub
rolb
ljmp
inc
das
push
xchg
cmp
xchg
mov
enter
out
cltd
in
xchg
out
xchg
xor
push
les
filds
adc
adc
mov
jp
int
or
out
inc
sbb
daa
orw
jb
jl
xlat
adc
aad
push
push
js
int3
popf
test
aam
hlt
or
and
fdivrs
add
mov
repnz
mov
mov
aad
sbb
aad
inc
xchg
push
xchg
add
test
or
fldt
negb
lods
push
pop
adcb
cmp
mov
jg
ljmp
sub
aam
fmulp
shrl
sbb
inc
push
sub
mov
jno
dec
movsb
mov
dec
repz
idivb
mov
and
mov
inc
aas
jl
jo
push
mov
lods
iret
popaw
icebp
cmp
frstor
fiaddl
sub
aam
xchg
sub
jno
lock
push
mov
push
and
jle
fistl
or
sub
mov
jge
add
leave
je
or
cld
pop
xor
sub
fmuls
inc
cmpsl
out
inc
mov
out
and
popa
or
and
imull
mov
jmp
xor
mov
inc
bound
insl
pusha
test
and
jo
inc
adc
adc
das
loop
jb
nop
dec
pop
xor
lds
xchg
pop
add
movsb
cmc
dec
repnz
int3
and
and
mov
pop
push
xlat
js
inc
push
repnz
dec
adc
sbb
cmp
testb
inc
mov
and
push
xor
movsl
popa
lea
push
xchg
scas
test
xor
aam
fisubrl
ret
jmp
int3
push
push
fistps
icebp
mov
call
dec
scas
enter
out
mov
ret
hlt
pop
mov
cmp
outsl
pop
stos
jo
cmp
pop
jno
xor
or
inc
stc
and
cmp
adc
push
and
pushf
and
mov
pop
pop
into
dec
adc
adc
mov
std
push
dec
dec
lcall
mov
in
ret
sbb
insl
fisttpl
mov
dec
and
lock
in
insl
mov
push
jg
pop
mov
insl
fsubrs
bound
jp
sub
dec
and
loope
lahf
mov
dec
inc
frstor
mov
mov
push
mov
das
jbe
inc
jle
dec
xchg
cltd
fsts
pop
cmpsb
mov
adc
das
jb
mov
cmp
and
jg
or
jae
sub
mov
push
loopne
dec
and
xchg
and
or
dec
xor
out
adc
loop
cmp
out
repnz
rorb
and
cmp
scas
fsubl
and
loop
and
inc
in
xchg
jmp
and
movl
arpl
mov
xor
jbe
fwait
and
mov
mov
push
jecxz
dec
stc
sbb
sbb
clc
in
xor
or
call
test
jg
jns
test
in
arpl
push
add
movsb
xlat
data16
icebp
bnd
xchg
adc
lcall
scas
cwtl
xchg
pop
leave
xor
push
daa
push
not
add
xchg
loopne
mov
dec
ss
sarl
ret
inc
out
mov
adc
pop
and
add
push
push
test
data16
xchg
cmp
rcrb
repnz
jmp
aaa
or
outsl
sbb
bnd
cmp
stos
sub
push
pop
jl
jns,pn
cmp
mov
ficoml
dec
mov
cmp
xchg
cmp
mov
push
jb
lahf
sub
and
mov
xchg
add
lock
out
mov
les
push
aaa
add
imul
sub
push
mov
shll
cmpsb
ret
pushf
and
fimull
les
repnz
mov
testl
push
les
test
lcall
mov
es
pop
or
pop
pop
mov
movsl
cli
cmp
jbe
cld
cli
es
sahf
insl
xchg
lods
jnp
andb
xchg
cwtl
add
fsubl
aad
xlat
stc
gs
idivb
mov
mov
test
pusha
daa
pushf
jmp
mov
cwtl
gs
xchg
inc
outsb
sti
sub
rcl
jecxz
and
jl
xchg
fnstcw
stos
mov
add
in
add
aam
add
dec
fildl
sub
cwtl
daa
sbb
pop
es
ficomps
arpl
dec
lret
adc
adcl
adc
jp
cs
call
mov
pop
pop
sti
jbe
mov
nop
pop
outsb
push
sub
inc
dec
cmpsl
cwtl
ljmp
jne
pusha
ss
pop
sahf
mov
cmp
cmp
enter
mov
add
in
bound
test
add
xor
xchg
cmc
xchg
int
testl
mov
pop
fnsave
das
lods
fbld
in
ret
xchg
fwait
in
and
test
mov
ss
and
loopne
xchg
sub
fisubrs
mov
push
mov
add
shrl
adc
mov
xchg
repnz
in
cmc
mov
dec
imul
pop
cmp
sbb
sub
mov
in
lret
jle
imul
stos
pushf
icebp
pushf
leave
fwait
sbb
adc
push
mov
xlat
rdpmc
pop
sbb
cwtl
push
xlat
lret
mov
addr16
pavgw
int3
fwait
cmp
out
mov
dec
cmc
xlat
je
pop
sbb
in
outsl
push
xchg
sbb
ja
bound
es
adc
mov
jbe
mov
cwtl
pusha
mov
pop
push
cmp
jmp
cmpsb
pop
js
cbtw
testl
mov
sbb
out
aam
xchg
cs
add
jecxz
add
loop
sub
nop
test
push
push
pusha
sub
pusha
sub
imul
rcll
xchg
mov
fiaddl
inc
addb
lods
push
gs
ret
pop
mov
rcrb
scas
jmp
mov
je
dec
adc
test
pop
sub
or
xor
or
sahf
or
sub
xor
dec
and
cwtl
sub
faddl
fld1
add
mov
nop
in
ret
call
dec
fildl
fwait
insb
push
or
outsb
mov
icebp
out
clc
insl
or
xchg
js
xchg
push
mov
mov
in
pop
jno
in
ss
loopne
and
xchg
xchg
ja
jno
push
addr16
in
arpl
addr16
insl
push
dec
xor
outsl
mov
out
scas
fcomps
rol
pop
lcall
fs
in
push
pop
nop
incl
nop
pop
jne
cmp
iret
push
inc
xchg
push
iret
fcmovnb
push
pusha
jl
xorb
cmp
aas
mov
movsb
jnp
shlb
std
pop
or
xor
inc
stos
ffree
rclb
arpl
mov
mov
and
jnp
adc
cltd
cmp
mov
push
shrb
test
daa
mov
decb
inc
imul
sub
pop
mov
or
es
sub
push
daa
cs
repnz
jge
aaa
sbb
xchg
mov
sti
xchg
int
cltd
pop
adcb
dec
clc
inc
or
push
dec
lds
xchg
hlt
inc
outsl
ja
mov
dec
sub
out
test
test
arpl
xchg
cmc
out
and
pop
jo
dec
cwtl
ficoms
sub
xor
dec
mov
jo
stos
repz
add
sbb
lret
and
mov
call
mov
hlt
shl
out
lock
dec
cmp
aad
or
xor
test
dec
xchg
mov
mov
fadds
lods
imul
jmp
push
push
or
dec
icebp
dec
inc
jp
sahf
cmp
jg
xchg
jp
cmp
sub
jbe
or
cltd
movsl
mov
xor
aas
inc
or
xor
push
and
xchg
aas
jbe
cltd
rcl
inc
push
scas
lcall
movsb
push
mov
nop
xor
and
mov
dec
shl
pop
cmp
and
mov
or
std
dec
adc
jb
add
jo
xor
call
sahf
sarl
sbb
pop
jo
ss
adc
dec
adc
adcb
sub
adc
jp
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
loop
xchg
lret
cmp
call
inc
cmp
arpl
dec
add
xor
and
jne
adc
stos
xchg
lods
sbb
add
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jb
push
repnz
lcall
jecxz
testb
repnz
jecxz
shlb
bound
xor
ret
inc
loop
xchg
and
adc
loop
shlb
bound
mov
and
push
pop
inc
loopne
scas
and
repnz
shll
sub
int
out
in
and
xchg
mov
movsl
test
jp
push
sub
and
out
out
ret
ja
jl
pop
jmp
pop
int
and
bnd
emms
adc
sbb
rol
imul
shrl
push
call
push
mov
repnz
out
loop
filds
div
xorb
adc
cmp
inc
pop
adc
dec
add
lods
adc
inc
test
dec
adc
std
adc
mov
movl
xchg
mov
mov
push
mov
inc
pop
add
and
jg
jecxz
fdiv
aad
add
push
adc
sub
adc
std
xlat
xor
cmpsb
mov
jbe
call
adc
and
aam
test
sub
xor
ret
sub
xor
push
in
jbe
add
repnz
pop
rolb
mov
jbe
jae
inc
pop
xchg
pop
xorl
cs
xor
addr16
fcoml
xchg
aaa
mov
rclb
ret
inc
int3
dec
push
testl
mov
and
repnz
loop
shlb
bound
xor
ret
inc
loop
xchg
and
repnz
loop
shlb
bound
xor
adc
int3
or
mov
jmp
add
sub
jne
push
dec
mov
jbe
insb
mov
pop
or
cmp
add
add
pop
gs
cmp
pop
in
fistl
iret
pop
stos
add
ficompl
inc
sub
in
bound
loop
add
push
sub
out
fdivs
or
xor
pop
xor
cmpsl
or
int
xchg
cmpsl
frstpm(287
mov
mov
mov
cld
jg
sarb
jo
xchg
xor
sub
iret
loopne
imul
mov
or
cwtl
out
lods
jg
sbb
insl
call
or
or
pop
arpl
gs
nop
out
inc
sbb
scas
mov
into
mov
push
movsl
aad
fdivs
cmp
ds
inc
adc
fcoml
xchg
dec
push
shll
lods
int3
pop
addl
in
jbe
jl
sub
iret
pop
mov
pop
repnz
xchg
push
mov
and
dec
lods
or
aad
mov
and
test
je
push
fs
insl
xor
add
sub
ss
jnp
mov
adc
adc
or
scas
pop
adc
stc
cmp
push
cs
stc
pop
leave
inc
out
adc
jle
jbe
jg
adc
imul
or
lods
or
repz
jge
sahf
jmp
or
paddw
shrb
andb
pusha
xlat
xchg
cld
sub
jp
int
push
rorl
mov
sbb
addl
lret
sub
pop
sbb
xchg
or
insb
insl
popf
sub
movsb
nop
lods
fnstcw
fistpll
xchg
dec
adc
jnp
mov
jnp
leave
out
push
xor
add
fchs
int3
adc
dec
cmp
cmp
adc
addr16
out
stc
cmp
push
inc
mov
or
fcmovu
lret
mov
std
pop
nop
ja
add
popw
dec
xchg
std
incb
hlt
ja
pop
enter
ret
test
and
mov
adc
push
notl
push
sbb
inc
movsb
imul
insl
jae
push
sub
pushf
dec
sar
lods
and
xchg
jno
iret
pop
cmp
sub
leave
sbb
out
jno
dec
lahf
mov
inc
mov
jl
jp
jl
lock
add
cmp
test
sub
mov
adc
add
cmp
out
lcall
and
or
and
push
sbb
jb
cmp
ss
mov
lret
xchg
mov
adc
and
mov
mov
xor
or
pop
push
mov
js
sub
rcll
cmpsb
out
loopne
je
std
lahf
cmp
outsb
cmp
mov
cmp
lret
lods
or
xchg
mov
ja
loopne
push
sbb
pushf
loope
push
xchg
cmpsb
cli
push
iret
lods
enter
mov
mov
pop
roll
in
lahf
mov
add
test
pop
int
mov
sbb
jne
mov
fdivl
xchg
imul
insb
aaa
pop
rorb
jb
dec
adc
cmpsb
filds
int
cltd
push
mov
shrb
incl
addr16
sbb
iret
mov
roll
xor
pop
pop
mov
mov
mov
pop
lock
mov
daa
loopne
rorb
mov
xchg
das
dec
test
push
mov
sbb
or
lahf
fdivs
lahf
and
mov
iret
loop
imul
jns
xchg
xor
js
xchg
jae
mov
sub
clc
loopne
mov
cwtl
sub
xchg
push
cld
popf
xor
cmp
sbb
add
ljmp
or
sahf
mov
lods
push
mov
mov
jl
mov
xor
int3
inc
jl
decb
lock
gs
test
movsl
adc
popa
call
cmpsl
xchg
stc
mov
test
sub
dec
enter
int
testl
push
into
iret
in
and
mov
adc
into
movsb
in
sbb
cld
es
aaa
mov
push
sub
lcall
stc
cmpl
xchg
cmp
gs
imul
mov
sahf
fsubs
aaa
jmp
xchg
sbb
or
jmp
pop
cmp
cmpsb
inc
xchg
scas
or
pusha
xchg
enter
arpl
imul
sbb
mov
cmc
mov
jg
loopne
sbb
sub
lret
int
or
mov
sbb
les
xchg
aaa
push
push
in
call
test
push
adc
cld
lds
imull
ss
dec
icebp
pop
cmp
add
add
fstpt
mov
sbb
mov
shrl
adc
in
inc
int3
mov
jmp
mov
mov
lahf
cmp
xchg
adc
jbe
jle
loopne
js
mov
jno
fwait
push
movsb
cmp
fisubrs
add
inc
or
and
push
push
mov
andb
pop
stos
icebp
or
xchg
pop
ljmp
aaa
ficomps
loopne
push
dec
xchg
mov
or
pop
loope
pop
jns
movsl
gs
orb
pop
daa
out
add
jae
add
and
mov
and
fcomip
test
mov
movsb
popf
std
inc
cmp
add
insb
lods
dec
add
push
scas
jne
xor
test
lods
jmp
and
je
jle
test
subl
fidivrl
les
cmpsb
popa
mov
jmp
std
push
jmp
push
sub
push
or
repnz
push
dec
jle
repz
or
jg
inc
mov
jmp
jge
lcall
inc
adcb
pop
jo
adc
ljmp
popa
jnp
test
idivb
adc
pusha
cmp
mov
js
into
xchg
out
mov
adc
call
fcomip
fstpt
jns
mov
or
lahf
stos
push
cmp
inc
jns
and
sbb
dec
jmp
xlat
adc
mov
jnp
push
inc
xorl
pusha
lods
mov
pop
fs
cwtl
sbb
int
inc
lea
loope
add
mov
cld
inc
in
pop
xor
lea
xor
pop
mov
inc
in
cli
fsts
mov
push
jns
or
lods
inc
cli
push
or
lods
or
nop
add
lds
in
out
fsubrs
jns
sbb
cld
add
cmc
mov
jnp
lret
leave
pop
subl
or
sub
into
jne
push
subl
cmp
jle
cmp
mov
pop
addr16
adc
lea
int
bound
adc
loope
jle
ffreep
sub
jno
or
or
mov
inc
mull
jnp
les
leave
fistpll
dec
or
mov
sub
fidivrl
mov
add
jecxz
pop
or
mov
sysenter
nop
stc
inc
cmp
pop
jge
mov
mov
xor
push
cs
repnz
jne
jp
xchg
jbe
and
and
xor
push
sbb
inc
push
std
jo
inc
sub
sti
pop
lret
ds
repz
sub
push
outsb
subb
or
out
les
mov
aad
cmpsl
std
sbb
in
sbb
inc
inc
aaa
sbb
std
lcall
insb
inc
pop
popf
sbb
popa
pop
xor
pop
nop
inc
mov
push
fwait
sbb
call
push
cmp
xchg
adc
mov
jge
mov
push
and
mov
pusha
jbe
push
pushf
inc
dec
testb
jecxz
and
add
dec
out
int
inc
fmulp
lcall
mov
inc
xorl
out
scas
sbb
mov
lods
add
stos
mov
push
lret
loope
inc
push
jle
mov
ret
out
and
xor
push
jmp
mov
mov
xor
xorb
dec
pushw
out
sub
mov
lcall
stos
mov
cmpb
dec
or
sub
fldl
dec
or
or
ss
jmp
addr16
pop
jl
fldl
cmpsl
push
fbld
cli
dec
and
xor
cld
enter
enter
push
lods
aad
xor
jno
sbb
popa
dec
inc
out
mov
andb
scas
dec
pop
inc
add
add
mov
inc
fwait
aam
mov
dec
dec
add
xchg
mov
cmp
bound
test
add
loop
cmpl
sbb
mov
add
fs
insb
in
scas
jmp
fsubrl
adcb
dec
add
pop
aam
fbld
lds
dec
sub
jno
hlt
test
inc
sbb
push
or
idivb
push
mov
rclb
mov
pop
in
pop
adc
cli
xchg
and
cltd
ret
pusha
cmpsl
rcl
in
mov
adc
jns
mov
pop
cmc
arpl
loope
es
jl
movsb
xchg
pop
pusha
xchg
and
dec
mov
add
repz
hlt
xlat
and
dec
sbb
mov
popa
and
mov
push
outsb
jge
icebp
mov
fldt
adc
push
rcr
or
mov
mov
sbb
add
cltd
fucom
push
rcrl
sub
jp
fistpll
cltd
das
mov
dec
unpckhps
lcall
push
cmp
sbb
jg
jo
mov
in
fmul
push
fidivs
cld
mov
mov
out
int3
int
div
pushf
jbe
insl
dec
test
adc
mov
mov
push
mov
nop
movl
lock
aad
lock
inc
jmp
inc
in
mov
inc
mov
jns
mov
mov
dec
ljmp
das
xchg
insl
inc
hlt
jecxz
lcall
arpl
add
sbb
inc
scas
cld
cmp
and
ret
mov
adc
mov
cmpb
mov
add
add
ret
aam
add
into
sbb
lret
adc
jle
outsb
ret
jmp
sub
fiadds
cmpsb
add
push
fbld
into
add
ss
pop
in
aas
jbe
nop
sub
int3
gs
mov
dec
inc
mov
fwait
jbe
jle
mov
rolb
mov
call
cmp
inc
pop
ficoms
aaa
fisubs
jp
mov
mov
jbe
xor
movsl
sarb
mov
cmpxchg
mov
sbb
push
ret
test
inc
mov
xchg
out
lea
jne
inc
inc
mov
pop
sub
jo
cmp
mov
enter
dec
and
pop
xlat
xor
in
push
mov
mov
dec
ret
sar
cmp
stos
xor
adc
fwait
sbb
jmp
aam
add
mov
ds
ja
jb
fdivrs
mov
push
inc
xchg
xchg
cmpsl
sub
push
outsl
loope
dec
pop
movsl
mov
or
adc
pop
ror
stc
test
sbb
mov
test
shll
dec
and
xchg
in
dec
jl
xor
push
subb
inc
push
sub
ljmp
jle
sub
mov
inc
scas
mov
es
jne
sub
sahf
adc
imul
nop
pop
inc
movsb
in
inc
add
aaa
out
enter
push
popa
push
cmp
loope
negl
jge
inc
loope
pop
cltd
pop
push
dec
jle
sbbl
leave
inc
cmpsl
sahf
sbb
test
clc
shll
dec
mov
fnsave
and
sub
cmp
dec
data16
or
and
xlat
mov
mov
xor
scas
lea
fidivrs
pop
test
shrb
decl
stos
arpl
sub
mov
jae
xchg
arpl
in
mov
push
test
lret
cld
mov
addl
call
icebp
jbe
mov
adc
jb
insb
ret
sub
mov
jnp
popf
mov
add
fs
sub
call
sti
dec
imul
mov
fldl
fld
cmp
jo
out
lods
das
adc
inc
mov
adc
mov
and
cmp
out
daa
divl
mov
sub
mov
cwtl
mov
out
jnp
stos
popa
push
hlt
out
mov
int3
mov
add
js
add
mov
sub
push
shl
ret
add
jbe
cmp
jl
data16
data16
cmp
pushf
adc
loopne
enter
lods
inc
pop
mov
fcoml
das
pop
dec
push
lcall
ret
pop
pop
test
popa
jnp
adc
jge
xchg
cmc
cmp
aaa
sbb
jnp
push
mov
adc
lods
std
mov
jb
adc
sbb
pop
and
lret
ret
idivb
hlt
adc
jb
mov
stc
cmp
inc
nop
into
jl
mov
das
loop
push
push
xchg
sbb
aas
aas
xorl
pushaw
sahf
iret
jns
lahf
mov
cmp
mov
add
fldcw
cmp
imul
sub
jnp
xorb
xchg
icebp
mov
cmp
add
orb
fldl
jge
daa
fcomps
mov
mov
jp
dec
daa
pop
adc
aaa
gs
ja
mov
push
xor
or
xchg
fiadds
xchg
imul
clc
insl
jg
and
adcl
lock
imul
rcrl
xchg
dec
cltd
hlt
insl
mov
and
pop
test
push
ljmp
sahf
jl
push
sub
mov
sbbb
scas
and
cld
les
movsb
adc
or
sbb
sahf
pop
insl
jge
in
lret
xchg
fldt
sbb
push
mov
out
notb
dec
inc
add
cli
pusha
lret
insl
outsl
fwait
or
ret
fnsave
push
in
jns
xlat
or
je
pop
cmp
insb
or
inc
popa
movsl
aad
sarl
cs
add
dec
mov
sub
arpl
pusha
stos
int3
add
int3
add
lods
sub
add
movsb
mov
cmc
fdivl
dec
ret
jnp
sti
inc
das
insl
ret
pop
es
mov
cmp
lahf
and
add
std
bound
shrb
mov
jecxz
fdivrl
fwait
pop
push
pusha
mov
je
or
iret
ljmp
hlt
mov
mov
out
inc
fistps
sahf
cld
push
xor
cmp
inc
rcll
js
enter
pop
cs
pop
add
add
add
divb
enter
jecxz
xchg
gs
cmp
popa
push
push
jg
addb
data16
xchg
jp
shr
popf
push
cmp
arpl
pop
adc
adc
push
aas
fsubs
aas
ficompl
jb
mov
pop
insl
cmc
or
les
cld
testl
addb
xchg
dec
out
test
jns
or
dec
mov
and
and
mov
fildll
in
and
jns
push
xchg
or
sbb
clc
test
mov
adc
lea
addb
int3
xchg
popf
in
xchg
into
jecxz
push
ja
cmp
ret
test
stos
and
cmc
push
sub
aas
jns
sub
mov
shlb
and
rcrl
in
mov
xchg
outsb
or
rorl
adc
jmp
lcall
mov
sbb
sub
jg
arpl
or
aas
int3
pushl
pop
hlt
xchg
lods
fimuls
fsubs
cmpsl
and
ret
mov
cld
in
ds
jns
pop
jecxz
xchg
imul
or
cwtl
push
fisubrs
jmp
aaa
adc
jbe
or
fwait
pop
push
subb
je
push
xchg
outsb
cld
call
rcrl
or
out
mov
inc
jp
and
loopne
iret
or
lds
loop
xor
data16
adc
sbb
mov
jp
cmp
xchg
fldl
in
int3
jle
push
dec
push
mov
ficoms
lds
mov
cmp
or
outsl
aaa
add
icebp
fcom
pop
pop
repz
in
mov
popl
or
mov
sub
and
mov
movsb
ljmp
jo
mov
push
cwtl
xor
add
dec
xchg
adc
aam
mov
stos
push
mov
push
out
or
dec
cmpsl
dec
jmp
montmul
cmpsb
les
fadds
lret
adc
mov
lcall
push
lret
mov
pop
xchg
sub
pop
jp
or
pop
inc
xor
std
sub
xorl
int3
inc
fistps
dec
add
sub
addr16
int3
ja
mov
notl
cltd
push
dec
jnp
repnz
sub
cmp
hlt
jns
mov
icebp
int
jae
hlt
jne
cmp
mov
or
xchg
lret
subb
mov
sti
jecxz
aam
lods
xchg
into
push
sub
shlb
movsb
fisubrs
xchg
out
das
out
cmpsl
daa
addb
hlt
mov
sbb
and
cmp
push
or
out
fidivrl
inc
mov
pop
adcl
les
sbb
sbb
push
mov
inc
sbb
cmp
fucomi
shl
add
mov
add
movsb
or
mov
loop
out
fnsave
cld
push
xor
rcl
adc
gs
xchg
adc
outsl
std
xchg
pop
cmp
lds
and
mov
jecxz
fldl
fistpll
test
je
mov
lcall
decb
mov
loope
mov
push
pop
dec
fs
jp
xchg
enter
cmp
insb
cmp
sarb
push
inc
or
adc
or
mov
xlat
fcomp
or
icebp
push
sahf
fnstcw
ja
inc
lods
gs
mov
sbb
push
mov
shll
mov
sahf
inc
pop
loop
fidivl
int
jbe
icebp
daa
jb
cmpsb
mov
test
fmulp
int
cmp
ja
movsl
dec
daa
adc
mov
test
dec
mov
push
pop
insl
xlat
xor
mov
pop
loopne
in
sarl
push
jnp
popf
lret
sbb
push
jecxz
daa
push
inc
push
int
adc
test
jb
sbb
cltd
xchg
dec
mov
dec
jecxz
push
jae
add
aam
cwtl
test
jns
xchg
mov
cmp
cmp
arpl
stc
adc
arpl
enter
sub
mov
push
mull
pop
addb
cs
mov
stc
xorl
xor
jecxz
inc
les
fwait
mov
mov
sub
add
inc
xor
in
adc
push
icebp
andl
sarb
bound
leave
stos
lods
add
cmc
dec
sbb
test
mov
lret
in
in
scas
sbb
imull
loopne
popf
aas
rcll
mov
je
pop
imul
adc
daa
outsl
sbb
pushf
pop
inc
mov
in
adc
test
daa
bound
negb
sub
fistl
test
leave
xor
lea
and
or
jne
pop
popf
sub
adc
and
dec
pop
imul
jnp
xor
inc
dec
nop
ds
xor
iret
or
sbb
sbb
pop
mov
loop
sbb
sbbb
mov
data16
push
out
or
sub
dec
jae
bound
mov
push
cmp
fnstcw
lahf
inc
inc
shlb
cmp
jbe
popf
jbe
sbb
or
das
mov
test
cmp
cld
mov
pushf
add
test
out
pusha
cwtl
add
xchg
andl
icebp
push
je
dec
cmp
adc
mov
cmc
fucomip
cmc
push
and
sbb
xchg
lahf
xchg
mov
pop
loopne
or
jg
xor
pop
xchg
cmp
loope
mov
cli
scas
les
stos
cmp
sbb
stc
jecxz
mov
mov
xor
pop
mov
shl
xchg
test
popa
pushf
push
test
adc
aaa
push
lea
xchg
xchg
push
xor
ficomps
pusha
add
mov
scas
xchg
mov
gs
out
push
sti
das
fsubl
pop
cmp
fiaddl
out
test
jns
push
push
push
push
jno
and
push
push
lods
inc
cmp
flds
int3
pop
or
ret
outsb
push
xchg
outsl
jl
cmp
and
add
rcl
lret
cmpsl
fst
movsl
rcr
mov
jns
insl
loop
data16
aam
mov
jbe
mov
mov
or
mov
loop
mov
mov
lods
mov
test
push
in
pop
leave
inc
es
lods
notb
mov
mov
ret
jno
iret
fwait
dec
sbb
shll
inc
loop
xchg
and
repnz
loop
shlb
bound
xor
ret
inc
loop
xchg
and
repnz
loop
shlb
bound
xor
mov
mov
mov
and
adc
loop
shlb
bound
adc
ret
inc
jecxz
xchg
and
repnz
loop
js
ret
lcall
jbe
xchg
or
jne
add
das
cs
jmp
stos
lea
fucomp
lret
in
xor
or
pop
jge
insl
jmp
stos
lea
fisttpll
in
loope
stos
or
imul
ja
mov
mov
int
lods
fisttpl
mov
jns
pop
jl
lock
mov
dec
mov
mov
scas
adc
aaa
adc
adc
movsl
xchg
mov
jno
gs
and
fs
jp
pop
std
inc
adc
cmp
sbb
mov
or
das
jp
in
sti
pop
push
jae
mov
data16
sub
xchg
in
jle
push
or
cmp
cmp
xchg
pop
pop
xchg
dec
cmp
mov
push
jbe
jmp
int3
mov
jmp
rolb
add
jnp
sti
mov
sahf
or
mov
cmc
in
scas
pop
notb
mov
inc
bound
lcall
cmp
sbb
addr16
pop
jge
insl
dec
popf
cmp
int
std
scas
stos
dec
jo
ficomps
imul
sub
lret
shr
ret
xchg
mov
mov
jg
mov
pop
mov
jp
cmp
arpl
adc
insl
sbb
loope
jmp
rorl
mov
imul
xor
pop
jge
insl
mov
mov
jmp
lret
in
cmp
or
pop
jge
insl
mov
mov
jmp
lret
in
cmp
push
cld
aaa
cwtl
dec
mov
adc
jmp
test
lods
stc
cmpsl
cld
sub
mov
pop
sbb
bound
mov
in
sub
xchg
jbe
or
je
jnp
lds
or
pop
sbb
fcoms
mov
shr
negl
adc
pop
js
ret
add
jmp
aaa
inc
je
push
mov
shrl
add
mov
push
cmp
ret
sub
mov
movsb
push
data16
loope
mov
lahf
lcall
fnstenv
add
lods
mov
push
push
or
jnp
and
push
mov
add
fdivrs
cmp
icebp
xchg
mov
and
fistps
jle
jo
adc
jae
data16
mov
xchg
push
pop
jne
rcl
push
lds
sbb
jp
pusha
adc
test
sarl
and
mov
sbb
add
cmpb
adc
aad
loope
sbbl
lock
jle
xchg
ret
mov
addb
out
and
dec
pop
outsb
and
leave
inc
mov
cmp
test
push
out
sub
stos
cmp
andl
adc
jp
rolb
push
je
lcall
data16
push
scas
cs
pop
pop
aad
lret
mov
jne
xor
jo
insb
push
fnstcw
or
mov
aad
int3
scas
aaa
push
push
dec
mov
es
xor
test
or
pop
mov
mov
xor
fidivs
add
loop
pop
addr16
dec
imul
scas
imull
push
call
hlt
mov
packsswb
cmpsl
ret
xor
popa
sub
jl
sub
sbb
orb
fwait
imul
mov
mulb
out
into
dec
jae
xor
mov
sti
ljmp
or
pop
pusha
sub
fwait
sub
adc
xchg
adc
mov
dec
in
and
inc
mov
ret
shl
sbbl
lret
in
scas
xor
out
sbb
sbb
mov
call
sub
push
add
xchg
push
add
lret
mov
sbb
sub
stos
add
push
rcl
xor
mov
mov
repz
xor
cli
cmp
leave
mov
mov
push
push
sub
sbb
cmp
neg
xchg
inc
dec
dec
sub
and
out
popf
adc
fiaddl
xchg
xor
jnp
fadds
xor
ret
arpl
add
sub
xchg
pop
or
out
outsl
in
cmpsl
cmpsl
jae
push
pop
pusha
push
mov
or
inc
fucomi
enter
cmp
push
mov
xchg
sti
pop
xchg
in
add
sti
push
pusha
mov
mov
jmp
loop
mov
ss
adcl
or
int
cmp
pop
or
pop
mov
mov
hlt
lret
xlat
test
cmc
hlt
jno
cmp
mov
or
test
xchg
into
mov
mov
dec
mov
lods
push
loope
in
in
dec
add
cmp
stos
std
lods
sti
ret
or
mov
jbe
sbb
mov
jge
push
subb
enter
aad
scas
push
hlt
incl
mov
flds
in
enter
not
mov
inc
inc
sub
sub
rep
mov
aam
push
jp
out
lds
nop
mov
pop
push
jo
cs
xor
mov
adc
sub
aas
nop
leave
adc
xchg
scas
push
mov
mov
jne
out
adc
push
in
cwtl
push
test
xchg
and
cwtl
lods
js
fdiv
mov
pop
pop
xlat
add
bswap
bound
xlat
sub
test
pushf
mov
es
js
mov
jns
enter
pop
mov
dec
mov
pop
call
mov
int
outsl
xchg
push
sbb
xchg
cmc
sbb
rcl
cmp
add
clc
xor
incb
imul
mov
mov
aaa
into
jp
cmp
add
or
adc
shll
out
movsb
jecxz
mov
pop
mov
inc
and
xchg
jbe
pop
shlb
std
clc
cmc
sbb
mov
cld
stos
fs
xor
or
bound
mov
in
mov
test
sti
insb
push
stc
mov
push
cmc
out
repz
imul
cs
js
out
cmp
jb
cmp
xor
in
mov
dec
jle
inc
cmpb
add
jo
mov
stos
test
mov
clc
in
repnz
jle
mov
movsl
pop
imull
cs
add
cmp
mov
lds
out
shll
mov
pop
sbb
out
loope
pop
push
cs
inc
push
push
sbb
or
cs
scas
pop
xchg
xchg
mov
lcall
data16
add
out
outsl
inc
popl
test
sub
adc
mov
jmp
out
test
pop
mov
push
xchg
aad
mov
ss
stc
sub
ret
mov
mov
xchg
push
jp
jp
mov
shr
divb
cmc
jecxz
pop
sub
lods
pop
data16
mov
add
insl
arpl
leave
push
fnstenv
mov
xor
into
sbb
popa
inc
cmp
xor
enter
mov
add
xchg
mov
sbb
out
add
lock
arpl
or
and
xor
push
stos
sub
sub
xlat
or
dec
js
cmp
and
mov
insb
ret
rorl
cmp
jo
sub
ss
sahf
mov
test
icebp
pop
or
scas
fwait
stos
loop
sub
mov
jne
hlt
sbb
pusha
jae
mov
lret
mov
and
sub
outsb
lret
inc
std
add
pop
out
and
rolb
insl
bound
jmp
lods
icebp
fnstsw
mov
inc
xchg
push
sub
xchg
xchg
movsb
xchg
mov
in
sbb
je
cmpsb
pop
cmc
aas
mov
lahf
cwtl
xchg
inc
je
mov
cmc
ja
addb
insl
or
dec
pop
mov
rcrl
rcl
sahf
cmpsb
xor
and
jge
lock
pop
data16
ret
cmp
cwtl
fildl
sbb
popf
mov
movsl
cli
lods
icebp
popa
rcll
arpl
outsl
lret
cmp
gs
shrl
jno
mov
sub
mov
mov
cmp
lea
inc
xchg
push
add
mov
rcl
jbe,pt
pop
xchg
es
das
inc
pusha
mov
or
mov
push
jo
inc
push
popa
cmpsb
push
outsb
stos
xchg
into
mov
xorl
push
imul
shrl
daa
mov
iret
loope
mov
fs
sub
inc
and
push
adc
cli
imul
push
and
rorl
rep
xor
mov
dec
andl
mov
cmp
cmpsb
cli
inc
jne
ja
mov
xlat
in
xchg
mov
dec
movsl
rorl
mov
and
dec
sub
pop
or
push
inc
inc
filds
test
dec
add
ja
lcall
in
pop
add
push
repnz
and
and
sub
lcall
mov
and
aaa
lcall
jb
aas
fs
pop
gs
sub
flds
and
mov
mov
and
pop
mov
pop
jbe
hlt
scas
push
es
lods
js
ja
xor
shll
pop
leave
scas
adc
pop
lret
fmull
jnp
call
add
cld
mov
xorb
insl
js
into
sbb
in
pop
hlt
xor
sbb
inc
std
cmp
lret
aad
in
jp
loope
scas
ret
dec
int
dec
fildl
cmp
mov
enter
hlt
add
or
dec
das
mov
mov
mov
aam
fdivrp
scas
cltd
push
addr16
loop
adc
xor
or
mov
or
push
push
mov
sub
xchg
scas
xor
into
movsb
rclb
cmp
jnp
ret
xlat
inc
sbb
lock
adc
fwait
add
lea
or
es
sbb
ljmp
nop
xchg
jle
aam
adc
repz
movsb
pop
push
push
stos
sub
out
roll
mov
xchg
or
test
push
push
push
imul
xorl
cmp
gs
push
das
mov
xor
pop
adcl
xlat
add
out
mov
jns
dec
shll
dec
pop
xor
je
pop
fildll
pop
cmc
repnz
jnp
cmp
inc
bound
or
cmpl
or
cmc
filds
sahf
cwtl
or
pop
and
xor
xchg
js
jg
push
xor
xchg
dec
mov
out
hlt
call
pop
xor
adc
pop
mov
mov
jg
sar
jl
or
out
pause
out
push
scas
mov
jmp
and
mov
fwait
sbb
push
aad
aad
inc
out
movsl
xchg
je
sub
add
pusha
and
xor
dec
lcall
xor
bound
dec
fidivl
test
push
mov
and
add
mov
cmp
fstl
xor
test
cmpsl
xchg
std
lcall
cmp
inc
aas
mov
dec
sub
icebp
sub
inc
nop
inc
dec
shl
lahf
jecxz
jle
dec
add
jmp
aas
lods
lcall
jecxz
imul
sahf
test
jne
hlt
loop
addr16
leave
je
lahf
mov
mov
aaa
movsb
and
mov
dec
push
mov
out
in
les
lods
xor
lret
ljmp
push
or
notb
jmp
je
inc
jecxz
fs
cmp
and
sahf
pop
mov
push
or
or
neg
loop
mov
insb
mov
xor
cltd
repz
popf
inc
pop
cld
mov
sbb
push
sar
sarl
js
lods
repz
mov
mov
jg
jae
imul
mov
cmp
pushf
pop
les
mov
outsb
dec
pusha
sti
call
jae
fstps
xor
sbb
ljmp
xchg
jne
jne
cmp
mov
lods
gs
ljmp
jg
adc
mov
cmp
test
dec
dec
loope
mov
dec
ss
testb
inc
rorb
enter
inc
in
mov
sub
mov
lods
enter
icebp
ljmp
orl
adc
xlat
and
sbb
xor
ljmp
stos
lahf
iret
mov
mov
gs
cmpl
sub
scas
in
int3
xchg
xchg
or
ja
imul
nop
popa
dec
ss
int
cmp
push
xor
sbb
lret
adc
daa
and
and
mov
int
fisubs
popa
pop
in
jle
andb
and
call
cmp
jno
pushf
push
dec
cld
xchg
jle
push
pop
inc
test
jge
popa
clc
imul
in
jl
xchg
sub
push
xor
xor
ret
inc
out
aas
and
inc
inc
or
std
or
jecxz
add
scas
imul
xchg
inc
jp
mov
pusha
xor
push
jge
and
loope
jns
push
dec
cltd
gs
xlat
gs
in
jne
mov
mov
xchg
sbb
pop
cmp
inc
pop
mov
cmpsl
aam
or
loope
gs
pusha
orl
jg
aas
push
xorb
xchg
jns
add
xchg
and
dec
sub
mov
in
push
mov
sbb
pop
data16
pop
fwait
push
push
lock
loop
int3
es
xor
nop
pushf
pop
xchg
sbb
inc
daa
in
or
mov
push
in
stos
outsb
and
inc
and
adc
in
inc
mov
cmp
mov
add
pop
sahf
cmp
xchg
fildl
stos
movsb
add
popa
and
addr16
mov
mov
repz
or
cmp
add
push
jb
adc
lods
xor
xor
cs
push
fisubrl
mov
mov
pop
out
call
data16
mov
cmp
out
stc
jo
icebp
loope
mov
dec
push
and
sub
xchg
repnz
sarl
rorl
mov
xchg
add
dec
sbb
mov
or
rcr
xchg
fsts
push
push
mov
xor
and
xchg
xchg
pop
fiadds
and
aaa
mov
push
sarb
das
fimuls
movsl
add
pop
scas
and
mov
sub
sbb
pop
jnp
pop
adc
imulb
mov
and
in
iret
pop
loopne
aaa
adc
nop
repnz
ss
xchg
mov
int
push
jns
lock
clc
xor
xchg
cmovbe
inc
ret
mov
jl
cmp
shrb
sub
imul
adc
add
aaa
mov
rorb
mov
adc
repz
mov
jg
cmpsl
sub
scas
inc
jp
push
lods
ficomps
mov
lcall
fdivrs
mov
cmp
inc
lahf
pop
pop
in
mov
mov
out
fucomip
push
gs
out
in
mov
xchg
movsl
add
mov
sti
lods
mov
daa
pop
lods
inc
push
jmp
lcall
imul
ss
ja
push
pusha
fwait
inc
pop
xchg
insb
pop
jmp
mov
shll
mov
fdivs
rol
loope
add
xchg
ljmp
jae
jg
push
mov
sbb
call
mov
daa
and
insl
scas
addr16
push
test
loopne
push
pop
shlb
shl
int
or
out
xor
lods
jmp
mov
js
push
xchg
in
sbb
push
and
sub
test
adc
in
jl
cmp
mov
inc
mov
jns
xchg
bound
aam
iret
cld
nop
mov
lods
decb
out
stc
arpl
mov
cmc
mov
in
xchg
lcall
cmp
jp
repz
mov
loop
test
push
repnz
js
sub
jno
jns
xchg
pop
sub
mov
mov
call
call
shll
and
sub
add
test
pop
fdivp
in
movsl
lds
push
pop
and
cmpsb
lods
pop
dec
addr16
xchg
fcomps
in
frstpm(287
mov
mov
lret
jae
sahf
fwait
ret
and
cld
hlt
mov
inc
xchg
cld
dec
repnz
mov
aam
inc
inc
mov
sbb
loope
jl
test
in
xchg
fsubrp
test
xchg
aaa
add
sub
push
mov
or
mov
jmp
sub
aam
or
push
insl
mov
out
mov
jo
imul
jns
stos
call
or
mov
pusha
xor
ss
push
mov
fdivrs
mov
push
and
iret
or
scas
mov
inc
and
mov
fucom
xchg
sbbl
in
jne
jb
jmp
pop
pop
xchg
or
xchg
push
cmpsl
xor
lahf
add
inc
lods
insl
sub
fcomps
mov
add
xchg
lahf
mov
inc
pop
push
outsb
push
gs
orl
sub
cmp
mov
mov
sti
jg
sbb
sarl
pushf
pusha
popf
int
fcos
jno
sbb
mov
xor
mov
fldt
adc
test
test
jns
aam
fsubrs
jmp
test
jmp
push
clc
nop
aas
test
xchg
lret
adc
test
cld
addr16
repz
or
push
enter
mov
insl
xor
in
mov
scas
or
ljmp
test
or
jp
arpl
outsb
cmp
mov
and
lods
and
push
loope
inc
int
leave
dec
mov
mov
fidivrs
aas
push
out
rcrl
insl
lcall
insb
or
idiv
pop
or
mov
pop
pop
fmulp
out
pop
inc
dec
arpl
fs
movsl
test
cmp
fnstsw
mov
pop
cltd
lcall
cmovne
mov
mov
rorb
je
dec
fcoms
xchg
out
sbb
popa
decl
in
loop
movsb
cmc
jne
mov
inc
test
mov
lock
pusha
push
cltd
adcb
mov
fildll
or
je
and
outsl
xchg
xor
fildl
imul
cmpsb
lahf
daa
sub
stos
stc
repz
aas
push
or
jge
push
xor
dec
inc
push
pop
out
jl
adc
cwtl
mov
push
pop
scas
inc
or
sbb
xorl
push
jnp
mov
dec
nop
pop
lods
js
sub
pop
std
sub
sub
scas
or
push
pop
orb
or
addl
sbb
aas
xchg
add
in
hlt
arpl
push
jl
cmp
mov
push
loop
pop
cmpsl
jmp
aas
ja
das
pop
clc
xor
mov
pop
mov
jecxz
adc
push
inc
push
test
loopne
es
je
dec
es
test
sbb
fwait
out
cmp
mov
rcrb
push
cld
out
leave
mov
sahf
gs
mov
jecxz
inc
cmp
fnsave
shrb
daa
mov
mov
je
iret
stc
push
pop
mov
and
shll
jge
xchg
mov
daa
add
mov
fsubrs
and
fcoms
dec
sub
or
dec
inc
ljmp
pop
cmpsl
mov
sbb
sahf
push
mov
jae
mov
jae
push
mov
cwtl
mov
xchg
cmp
arpl
cmp
cmp
mov
push
xchg
cli
or
mov
test
mov
ret
mov
add
cmp
lds
repz
lahf
cmp
cmp
or
or
in
xchg
jl
dec
adc
sar
hlt
orl
stos
adc
sub
in
jge
sub
fistpl
push
cmpsl
push
pop
xor
lahf
ja
cmpsl
jecxz
adc
push
cltd
or
addr16
data16
fbld
push
fs
rolb
aad
lock
add
mov
fdivrs
nop
cs
incb
es
mov
fwait
adc
imul
rcr
jle
mov
jecxz
iret
xor
mov
jle
adc
jns
inc
push
mov
ljmp
inc
xchg
lret
mov
stc
les
xor
jle
inc
add
ret
inc
and
dec
inc
jb
andb
test
or
or
fs
outsb
cmp
scas
test
sbb
jbe
insl
xchg
mov
std
pop
adc
xchg
cmp
dec
add
xor
sub
cmp
into
jl
ror
dec
cmp
adc
mov
loope
movsb
aam
xchg
test
test
or
and
dec
or
iret
xchg
int
cmp
pop
push
jg
sub
push
or
jl
movsb
popf
pop
pop
xor
dec
sub
repnz
jle
cs
or
sbb
lret
xlat
jmp
adc
pop
sbbb
push
rorb
dec
or
xchg
jne
xor
and
lahf
jge
pusha
rolb
mov
and
aad
and
cmp
mov
or
out
inc
aas
insl
int3
and
lods
and
stos
pop
inc
sbb
adc
mov
inc
pop
cmpsl
mov
mov
outsl
cli
adc
xchg
scas
mov
sbb
mov
cmpsl
in
enter
adc
addb
aad
mov
push
add
dec
mov
clc
inc
jae
adc
test
in
jnp
mov
jns
push
jmp
hlt
clc
out
aas
loop
int3
xchg
cmc
push
test
clc
inc
test
cmp
bound
adc
ss
mov
xor
nop
sbb
pusha
jle
jb
jl
jae
mov
mov
xor
pop
and
xchg
jns
jno
mov
adc
dec
frstor
mov
dec
pop
xchg
or
xchg
lret
sahf
inc
xchg
dec
xchg
mov
xchg
cltd
stos
cmp
push
mov
pop
repnz
je
sarb
ficompl
push
scas
mov
xlat
gs
dec
jne
enter
pop
sub
pop
jge
insl
mov
mov
jmp
lret
in
cmp
or
pop
jge
insl
mov
mov
jmp
lret
in
cmp
sub
jp
outsl
dec
pop
jl
insl
mov
mov
repnz
std
sti
in
and
and
jnp
jnp
pop
std
lret
xchg
mov
mov
arpl
and
xor
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
iret
mov
mov
xchg
mov
dec
jge
and
jg
pop
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
and
jg
nopl
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
add
popa
sbb
daa
insb
xor
cmp
mov
addl
xor
xchg
je
fidivrl
xorb
jae
fdivrs
and
and
adc
add
repz
push
fistl
repz
rcr
xchg
push
andb
pop
stos
jns
outsb
adc
mov
scas
test
mov
dec
arpl
loopne
icebp
gs
scas
jg
cli
push
push
xchg
arpl
clc
xchg
clc
aam
push
pusha
loop
mov
rcr
mov
pop
popf
xlat
pop
mov
pushf
pop
repz
add
jo
mov
jecxz
int3
push
outsl
loop
hlt
pop
pop
and
mov
aad
add
movsb
repnz
or
scas
xchg
and
jo
jmp
push
jmp
dec
xor
push
cmp
mov
repz
jecxz
sarl
and
jg
pop
arpl
push
aas
sub
xchg
mov
mov
xchg
cmp
sbb
cmp
xor
dec
sub
mov
idivb
scas
ljmp
pop
adc
data16
sbb
push
sub
neg
jmp
loope
out
fstpl
ret
dec
xor
outsl
adc
pop
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
and
jg
pop
arpl
push
aas
inc
iret
mov
lret
jb
addb
mov
scas
push
rclb
dec
loopnew
scas
loopne
or
out
sti
int3
xchg
in
jl
rcr
cli
mov
xor
lods
shl
jae
cmpsb
mov
lods
jl
andl
push
mov
vhaddpd
mov
call
mov
push
jmp
lcall
pop
inc
ja
mov
adc
mov
jns
pop
push
inc
out
flds
push
mov
neg
push
out
hlt
adc
fchs
sti
push
ret
outsb
in
lods
mov
movsl
lahf
lods
dec
loop
jo
shll
incl
fildll
xchg
sbb
inc
int3
ja
int
flds
cld
mov
ret
adc
xchg
movsl
arpl
rcr
inc
adc
push
cmp
adc
add
dec
xor
outsl
mov
orb
push
xchg
cmpsb
sbb
mov
outsb
repz
incl
sub
mov
inc
out
push
rorl
shlb
dec
pop
adc
fidivl
cmp
mov
sbb
push
in
nop
ret
cmp
adc
scas
pop
jbe
mov
sbb
push
or
mov
test
scas
mov
xchg
adc
dec
fsubrs
sub
scas
adc
or
cltd
pop
fildll
addb
push
push
pop
jns
pop
inc
mov
sbb
lahf
add
fistpll
dec
aas
xchg
call
sarl
lea
cmp
xlat
adc
test
sti
cmp
pop
scas
shlb
xor
add
mov
fisttps
mov
in
in
xor
stc
imul
popf
repz
pop
icebp
nop
dec
dec
cli
push
adc
jo
into
inc
sbbb
insb
inc
sub
xlat
inc
out
and
cli
or
mov
sbb
out
mov
dec
push
xor
lods
add
icebp
fs
xor
add
jbe
mov
cmc
jns
nop
iret
call
movsl
xchg
xchg
ret
push
inc
push
mov
dec
and
sbb
daa
push
xchg
push
fdivrl
sbb
fcomip
outsl
xlat
push
xor
rcll
mov
call
jo
jmp
ljmp
mov
sbb
cmp
repz
jns
and
sbb
fsubrs
stos
sarl
dec
jno
fisttpl
out
jnp
mov
push
lahf
sbb
mov
sub
jo
xor
sbb
mov
movsl
call
sbb
push
sti
cltd
cmp
adc
scas
sbb
add
in
in
add
xchg
jnp
or
mov
add
mov
sub
pextrw
outsb
sbb
inc
cmp
sub
push
xor
dec
fsubr
jl
leave
mov
dec
fwait
xchg
sub
pop
ds
lcall
dec
cmp
xchg
sbb
push
cmp
jnp
in
jmp
adc
out
push
icebp
pop
fucom
mov
cmp
sahf
adc
or
fldl
scas
mov
xor
inc
enter
movsl
loop
adc
cmp
addr16
mov
in
idivw
or
sbb
aam
adc
sub
pop
push
mov
loop
push
in
add
xor
or
loopne
jnp
jle
fstl
out
rorl
clc
cmp
nop
lcall
lods
cld
lock
stos
outsl
je
mov
jno
fs
cmc
or
add
jbe
mov
cmp
jo
mov
stos
inc
and
dec
dec
rorl
push
inc
cld
inc
test
pop
adc
imul
mov
mov
popa
dec
sbb
mov
xor
dec
sbb
orb
aam
movsl
mov
aaa
sbb
inc
mov
ds
mov
mov
out
mov
xor
push
xchg
lds
and
or
out
arpl
lcall
pop
pop
or
sahf
pop
push
loopne
cmpsl
add
add
add
into
outsl
imul
add
loopne
push
clc
out
add
and
icebp
jle
shlb
dec
addb
sub
out
sarb
inc
shl
dec
jns
testb
xor
pushl
popf
mov
rclb
mov
push
mov
pop
nop
and
dec
gs
gs
xchg
inc
leave
inc
mov
in
lock
subl
cmp
cmp
add
fs
leave
add
ror
xor
andb
xchg
sti
cmp
lds
fiadds
mov
add
scas
pop
fdivrp
test
pop
in
xchg
cmp
iret
test
loope
push
gs
fs
int
cs
repz
cmp
into
shrb
int
in
jns
mov
cmpsb
iret
and
mov
lcall
cmpsb
pop
mov
imul
fisttpl
scas
and
faddp
dec
daa
mov
int
test
cmpsb
test
imul
pcmpeqd
mov
shll
lret
cmp
aad
cmp
sub
sub
mov
mov
adc
jge
cmp
xchg
jmp
push
and
int
xchg
jns
aaa
add
xor
inc
or
or
bound
jb
lds
pop
js
cltd
rep
imul
outsb
or
incb
dec
pop
insl
das
mov
mov
pushf
lret
lds
push
test
inc
int3
dec
dec
adc
aam
sahf
les
insb
shlb
pop
or
dec
or
test
pop
dec
or
cli
mov
cmp
mov
add
adc
bound
in
jmp
lret
mov
xor
sub
gs
inc
mov
inc
add
mov
add
lods
jnp
inc
ss
jl
add
gs
cli
push
pop
shrb
mov
scas
imul
arpl
test
aaa
stos
sub
sbb
int
mov
int3
inc
pop
xor
mov
popf
mov
xor
je
ljmp
sub
ljmp
or
hlt
jno
hlt
test
int
shlb
fs
or
inc
xor
clc
into
and
mov
mov
or
lret
std
decl
stos
xchg
iret
ljmp
mov
cmp
xchg
add
push
call
arpl
dec
mov
ror
scas
mov
xchg
pop
mov
stos
fistpll
dec
loope
jbe
pop
jecxz
jnp
das
mov
inc
dec
repnz
ss
outsb
cmp
sub
mov
das
sub
out
cmpsb
push
add
push
rorb
in
adc
xor
mov
dec
mov
repz
push
inc
add
data16
pop
stc
mov
mov
adc
movsl
adc
int3
add
cmpsb
inc
dec
gs
lcall
pop
stos
xorb
lods
in
cmp
popf
loopne
fs
jmp
inc
leave
rcl
xor
popf
fistl
data16
lods
or
arpl
pop
push
add
push
and
das
xor
mov
add
mov
push
mov
mov
data16
out
cltd
push
pop
mov
es
call
lods
jl
jge
pusha
xchg
jp
jnp
mov
ret
in
cmp
test
lret
jp
dec
jmp
loop
nop
jl
mov
add
scas
xor
ret
insb
mov
loop
mov
movsb
lods
mov
cs
enter
mov
inc
pop
inc
jns
cmp
fstl
ja
jne
popf
add
js
vmread
lea
mov
add
jbe
xor
and
int
outsl
push
jno
or
ss
popa
push
lahf
inc
test
adc
add
mov
jge
mov
xchg
sub
out
mov
push
pop
mov
add
dec
roll
int3
adc
inc
push
sub
inc
outsb
iret
popa
pop
das
test
out
sarb
fimull
aam
jno
in
ss
lahf
mov
pop
sub
xchg
mov
push
add
cmp
lret
dec
mov
lea
adc
jmp
shll
mov
das
push
lds
ds
aam
ss
fstp
jno
out
xchg
ljmp
lods
rorb
push
stc
rorl
sbb
cmpsb
int3
rorb
lds
out
and
push
data16
dec
sbb
jne
add
scas
cmp
notl
fldt
outsl
push
pop
lea
adc
inc
jbe
jbe
rolb
mov
orb
cmp
jb
push
movsb
pop
int
je
xchg
add
cli
mov
ret
mov
je,pn
and
cmp
push
cmpl
test
xor
mov
imul
into
and
popf
rcrl
aam
test
mov
mov
or
jae
add
ja
dec
push
or
das
pop
ret
notl
xor
aaa
xchg
rol
cmp
mov
pop
hlt
mov
dec
test
xor
pop
jp
pop
jecxz
push
jns
std
sub
mov
lods
adc
push
in
push
insb
pop
mov
add
imul
push
xchg
sbb
sti
mov
fdivrs
scas
out
lods
fildll
mov
daa
pop
movsl
andl
push
jl
jno
cmp
xchg
inc
nop
cmp
sub
cmp
bound
negl
adc
mov
test
fs
mov
leave
or
dec
ja
lods
popa
fistl
xlat
insb
call
into
push
leave
xchg
xlat
mov
lea
mov
sub
sub
movsl
lret
pushf
movb
test
fstpl
repz
jns
inc
aas
sub
fsubrs
inc
or
outsb
popa
pop
gs
testl
xor
mov
cmp
adcl
sbb
sbb
ret
movsb
mov
bound
pop
sub
cmp
jg
fsubrs
sub
ja
leave
lret
pop
push
add
jmp
xchg
pusha
push
dec
movsb
int
mov
mov
fcomp
cltd
insb
in
mov
jp
adc
mov
adc
mov
push
cmc
xchg
js
inc
jo
inc
es
mov
sbb
in
mov
xor
mov
test
inc
and
in
inc
push
movsl
sbb
arpl
pop
lods
cmp
sti
loop
jle
jb
mov
lahf
mov
cld
and
ja
push
cmp
adc
pop
inc
inc
sbb
leave
cmpsl
stc
jge
inc
lcall
scas
jns
loopne
out
dec
sub
cld
clc
lods
insb
lret
insl
imul
sub
lahf
imul
aaa
cmp
xchg
mov
mov
inc
sub
mov
push
xchg
xchg
mov
add
dec
movsb
jl
jecxz
inc
sbb
xchg
xchg
in
js
imul
cmp
jecxz
cwtl
and
adc
or
aaa
add
testl
js
inc
nop
cmp
popf
data16
fdivrl
jmp
pop
xchg
inc
shlb
pop
pop
xchg
hlt
or
mov
cltd
dec
pop
int3
inc
or
outsb
pop
and
and
das
cli
mov
arpl
sub
out
ss
or
and
xor
in
mov
mov
or
sbb
cmpsb
gs
hlt
inc
dec
enter
insl
pop
add
push
in
daa
xchg
ja
adc
addb
jecxz
clc
arpl
sub
inc
in
xchg
ja
xchg
cmp
inc
xchg
jl
push
cmp
movsl
or
je
pop
lods
mov
xor
scas
sti
and
test
mov
sub
arpl
jle
ror
adc
xchg
sbb
ss
jnp
add
jnp
sbb
testl
adc
and
mov
fildll
mov
inc
xor
sub
jge
jecxz
int3
inc
jb
mov
xor
mov
mov
stos
rcr
xor
daa
imul
push
dec
or
mov
xchg
jnp
jns
ret
jg
clc
mov
insw
rcr
fdivrs
mov
xor
dec
subb
jb
mov
push
aaa
ljmp
jecxz
xchg
add
dec
mov
pop
add
addr16
in
cltd
or
sbb
and
cmc
and
gs
outsl
pop
les
dec
xor
or
pop
mov
stos
popa
jge
cmp
mov
loope
xchg
insb
dec
bound
push
test
pop
jbe
inc
mov
cmp
inc
cmp
int
fcmove
insl
call
ret
mov
or
mov
mov
stos
popa
int3
shll
nop
mov
mov
cmc
stc
ja
sbb
loope
enter
rorb
sub
adc
pop
in
imul
inc
les
push
addr16
sbb
mov
mov
lret
push
xor
arpl
add
je
pop
xor
es
das
sub
xor
sbb
iret
out
mov
jo
popf
jne
je
js
cmp
adc
sub
popa
dec
xor
push
xchg
ljmp
push
scas
inc
sub
inc
jecxz
int3
mov
mov
mov
sahf
out
xchg
or
ret
dec
pop
xor
adc
or
test
and
cwtl
xor
cmpsl
addr16
inc
sar
xchg
cmp
push
mov
mov
pop
jmp
adc
movsl
mov
sbb
lods
adc
pop
push
lret
xchg
push
ljmp
sub
xchg
dec
lea
and
or
jmp
xchg
icebp
push
xchg
clc
rorb
xchg
pop
in
cltd
and
in
jle
loopne
dec
jl
mov
and
lock
mov
xor
out
mov
fcomi
insb
sub
mov
scas
daa
pop
test
jae
lcall
scas
ljmp
mov
bound
mov
shl
dec
movsb
sbb
add
xchg
push
adc
jecxz
sti
mov
shll
fisubrs
add
imul
bound
mov
movsl
jl
pop
fcoml
fistps
ljmp
dec
push
stos
dec
into
xor
je
loope
xchg
test
xchg
sbb
sub
pop
jb
shl
push
sbb
inc
pop
xor
nop
adc
mov
scas
xchg
stos
sub
mov
out
xchg
iret
mov
repz
popa
lret
pop
xor
dec
loope
add
dec
dec
shlb
fiadds
adc
push
test
negb
fyl2x
mov
push
xlat
dec
outsl
jo
enter
test
pop
into
add
mov
push
sub
idiv
add
test
xor
sbb
and
jge
ds
fmuls
ds
data16
cli
or
aas
ljmp
inc
inc
cmpsl
addl
pusha
out
lret
mov
fists
imul
push
out
sub
in
push
add
ljmp
loopne
push
xor
repz
scas
ja
inc
pop
stc
adc
mov
rol
mov
jecxz
xchg
pop
or
ret
scas
scas
mov
jge
jmp
push
and
cmpsb
fwait
mov
test
jl
sbb
cmpsl
push
stos
mov
fstps
jbe
roll
mov
ret
outsb
addr16
mov
fidivl
loope
push
insl
inc
daa
in
push
loopne
lcall
out
pushf
push
mov
cmp
int3
fs
cmc
adc
aad
cmpsb
fidivl
clc
sahf
leave
pop
fbstp
xchg
mov
pop
mov
mov
mov
cli
jecxz
pop
cwtl
cmp
daa
les
es
shll
sbb
in
add
push
cmp
imul
inc
leave
xchg
jl
repnz
nop
inc
cli
inc
jle
pop
xchg
das
jns
sub
test
mov
jg
ds
mov
and
mov
mov
sbb
xchg
cmc
icebp
out
ja
mov
test
inc
fbld
int3
mov
les
es
call
push
or
push
shrl
sub
mov
stos
in
cmp
popa
ljmp
mov
cmp
outsl
stos
or
fldenv
sarb
cmc
shr
rclb
cmp
fnsave
add
lods
add
jb
insb
aam
ljmp
nop
sbb
xor
xor
and
add
enter
mov
imul
lds
pop
pushf
sbb
cmp
pop
aaa
add
adc
push
pop
loopne
mov
adc
xchg
stc
dec
fnstcw
iret
lret
int
test
mov
fildll
ds
push
pusha
ljmp
sub
adc
push
sti
fcmovne
sahf
inc
cltd
inc
je
dec
cltd
jecxz
sbb
insl
cmp
pop
xchg
add
cmp
jae
push
add
int
loopne
push
sub
flds
call
xor
push
daa
into
das
cmp
imul
rolb
fstpt
lahf
adc
push
mov
les
adc
add
jecxz
fcompl
sbb
fidivs
cmp
ret
mov
jmp
mov
lahf
cmp
cs
loope
ja
int
jns
inc
pop
and
pop
movsb
add
mov
pop
mov
add
insl
outsl
push
mov
adc
into
cmp
or
pusha
jg
sbb
cmp
pop
mov
les
jno
push
std
xor
fcmovne
jbe
shr
repz
jp
aad
lock
jnp
std
jbe
lds
and
sub
stos
adc
cltd
jne
nop
pop
fdivr
push
xchg
dec
stos
shl
aad
mulb
cmc
mov
mov
fs
fmull
mov
imul
dec
mov
fdivp
adc
jmp
mov
shll
mov
lea
or
cli
cwtl
inc
divb
mov
adc
add
add
push
lock
in
inc
xchg
pop
push
dec
jecxz
xchg
xor
lods
sbb
leave
pop
test
pop
std
les
daa
jp
and
scas
xchg
sub
dec
adc
fstpt
std
inc
push
sbb
call
sub
iret
lds
sbb
jecxz
enter
xor
popa
iret
idivb
movsb
and
testb
leave
lret
int3
lea
ss
jmp
movsb
nop
jno
enter
dec
and
push
push
mov
mov
adc
jno
push
mov
mov
ret
clts
test
lret
mov
pop
push
fnstsw
int
xorl
mov
notl
push
dec
adc
test
cld
iret
mov
xchg
stc
cmpsl
cmp
sti
push
mov
sub
inc
sar
inc
adc
mov
iret
fidivs
incb
jbe
push
fstpl
xchg
or
dec
mov
cmpl
cmp
test
loop
sub
jbe
enter
js
push
ss
mov
mov
sbb
xchg
xchg
movsb
xor
pusha
xchg
xchg
and
fmuls
xchg
int
sub
dec
mov
dec
stos
and
dec
lret
cltd
inc
cld
inc
xor
adc
std
scas
lods
sbb
daa
xor
adc
ljmp
cmp
push
jmp
std
jl
xchg
or
emms
js
inc
clc
repnz
es
cltd
aaa
cltd
or
sbb
mov
xchg
cmp
push
mov
cmp
or
add
xor
ljmp
fs
and
imull
xor
push
filds
jb
repnz
mov
movsb
pop
pop
sbb
call
gs
pushf
clc
daa
and
adc
mov
inc
iret
push
dec
adc
inc
jae
mov
mov
push
in
ljmp
outsl
xor
sub
pop
sbb
mov
dec
in
mov
loope
dec
cld
loopne
inc
clc
ljmp
fbstp
inc
fistpll
fnsave
fdiv
cmpsl
and
push
push
adc
test
or
push
cmp
rclb
out
sbb
or
test
xorb
lock
mov
mov
pop
out
clc
fstp
int
loop
xorl
mov
mov
stc
int
pop
push
jmp
ret
sub
and
icebp
into
dec
or
sahf
dec
or
lret
fs
in
mov
mov
mov
add
sub
cs
jno
movb
or
cmpl
cmp
adc
xor
loop
add
jnp
jle
dec
xor
pop
shl
std
adc
sub
xor
lret
mov
pop
imul
ffree
add
and
stc
and
mov
sbb
inc
mov
js
pop
das
mov
jbe
jbe
shl
mov
idivb
add
cmp
mov
mov
pusha
movsb
fmuls
lcall
inc
mov
rclb
lahf
jecxz
sarl
and
jg
pop
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
and
jg
pop
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
and
jle
pop
arpl
push
aas
inc
iret
mov
mov
repz
jecxz
sarl
ret
mov
mov
je
sti
xchg
pushf
xlat
lods
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmp
dec
sbb
imul
sub
in
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
pop
mov
stc
mov
cli
jmp
mov
mov
sub
popa
or
add
pop
and
mov
andb
lret
movsb
jae
sub
imul
enter
js
jo
push
std
fldl2e
jno
cli
add
mov
mov
xchg
ret
out
jo
cmp
out
cli
push
mov
aaa
pop
test
call
fisttpl
push
ret
and
dec
xorb
xchg
jnp
daa
or
gs
loopne
pop
cmp
xor
pop
sub
jp
jp
movsb
dec
and
push
lods
fs
orb
enter
pop
mov
xchg
sbb
pop
xor
stos
and
add
fwait
call
sub
cmpsb
adc
adcb
jns
mov
mov
mov
imul
dec
sub
pusha
or
sbb
pop
cmp
mov
loopne
lock
sub
test
pop
inc
cmp
outsl
or
sbb
push
sti
mov
leave
stc
std
out
lahf
cld
orl
xor
dec
or
cmp
push
inc
pop
dec
dec
sbb
lods
test
fistpl
mov
pop
dec
dec
jae
or
sub
pop
cmp
mov
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
pop
mov
xchg
repnz
push
loop
xchg
fimuls
ja
jl
sbb
les
fimuls
inc
push
cmp
mov
adc
outsl
dec
mov
mov
adcb
jp
adc
cmpsb
movsb
shlb
or
xchg
dec
push
push
pushf
mov
and
push
xchg
cmc
xchg
push
push
cmp
fistpll
cmpsb
sti
xor
cltd
or
mov
dec
rclb
pop
inc
cmp
sbb
or
sub
xor
cmp
incw
hlt
mov
dec
jns
shrl
sbb
mov
xor
sub
and
and
pop
jo
sub
movsb
jmp
jg
arpl
push
outsl
fdivl
push
pop
sbb
ja
mov
push
dec
rcrb
dec
mov
or
mov
test
les
sbb
xorb
push
test
adc
test
xor
or
ret
movsb
xor
xor
mov
adc
xchg
repz
test
sti
loop
sub
pop
pop
sub
or
das
jo
xchg
fmull
fildl
jo
popf
jge
push
addb
loope
and
les
mov
dec
mov
pusha
lea
and
pop
pop
shl
sbb
push
jno
scas
subl
call
aam
cmp
cwtl
stos
push
rclb
xor
lcall
int3
icebp
jl
aam
dec
in
jge
loope
addr16
xorl
ss
jge
aad
cs
sbb
stc
xchg
jnp
leave
dec
push
mov
test
sub
sahf
mov
fisttps
mov
or
dec
out
imulb
add
popa
dec
jnp
sarl
mov
dec
jcxz
imul
neg
cpuid
sub
scas
add
jbe
in
adc
stos
pop
mov
dec
data16
stos
repnz
test
dec
mov
test
mov
and
popf
mov
ror
cmp
dec
sub
pushf
add
xchg
adc
dec
pop
xchg
in
scas
mov
add
mov
fs
ljmp
pop
and
ret
lret
xor
int
je
or
and
mov
adc
fsubl
scas
jl
mov
ret
rclb
or
ret
mov
xchg
les
shr
cmpb
jl
jbe,pn
or
or
and
loop
fbstp
push
jo
ja
inc
add
adc
dec
stos
add
or
nop
mov
sbb
insb
mov
mov
xlat
adc
fxam
push
test
inc
mov
jl
cwtl
mov
or
jle
jge
add
sub
dec
test
xor
pop
mov
fildl
popa
mov
stc
xchg
pop
fisubrs
push
or
mov
mov
test
pop
pusha
jmp
and
cltd
cwtl
dec
mov
shll
mov
mov
add
xlat
sbb
sbb
testl
out
lea
cmp
or
and
outsb
jo
das
lods
enter
cs
inc
jnp
or
leave
sarb
pop
pusha
andb
dec
int
push
mov
cltd
insb
loopne
sbb
repz
enter
mov
lock
scas
stos
xor
fcomps
ret
cs
mov
ret
adc
mov
aas
inc
jo
mov
jecxz
loope
xchg
int3
jge
sbbb
add
or
lea
push
mov
push
addl
fmuls
push
test
cmp
push
loop
sbb
jae
mov
cmp
inc
xchg
push
sub
es
xchg
xchg
dec
mov
inc
jmp
and
sbb
outsb
in
pop
dec
adc
loopne
movsl
xchg
jb
mov
and
sbb
pop
xchg
fldl
orb
mov
pop
lcall
mov
mov
cs
mov
sarl
or
or
sbb
mov
jb
lcall
xor
andl
inc
xchg
bound
subb
inc
cmpsl
mov
push
out
repz
mov
cmpsb
pop
sub
xor
shll
test
jmp
jmp
mov
out
add
pop
xor
or
mov
mov
sub
add
dec
mov
les
cli
push
shlb
push
fs
jne
xor
sub
mov
cltd
icebp
cmpsb
cmp
lods
fwait
mov
fcomip
fisubrs
xchg
mov
mov
cmp
rcll
adc
or
dec
pop
mov
dec
lret
fcmovu
repnz
icebp
sub
outsb
cmp
fs
daa
mov
push
not
scas
sbbb
sbb
int3
xchg
test
xor
mov
mov
sbb
jo
dec
mov
jp
popf
add
pushf
mov
mov
sbb
scas
movsl
fistpll
or
cmp
imul
fwait
jg
int
xor
inc
pop
std
gs
lods
mov
sub
pusha
add
add
in
push
mov
pop
xor
inc
jecxz
or
sahf
mov
sbb
insl
cwtl
lea
adc
das
cld
inc
xor
jg
lods
imul
push
jno
sub
push
dec
imul
add
cli
and
xchg
arpl
pop
arpl
jp
mov
test
push
and
and
cmp
sub
test
mov
scas
repz
jg
xchg
adc
xlat
jecxz
rcrb
out
add
sbb
adc
testl
into
sub
or
and
enter
pop
loopne
pop
jnp
data16
cmp
push
les
divb
ret
mov
decl
mov
in
fs
adc
jecxz
xor
xchg
nop
lods
rclb
test
hlt
or
sar
outsb
pop
push
sbb
lods
cmp
test
mov
mov
inc
sbb
jnp
fisttpl
cmp
std
and
mov
mov
in
pop
mov
pop
sti
cltd
test
fbld
dec
mov
sbb
cmp
lahf
cwtl
gs
iret
iret
aas
dec
fxch
test
mov
out
in
adcb
fldt
mov
popa
cmpsl
sub
cs
insl
dec
icebp
mov
movsb
pop
out
pop
mov
movsb
bound
jmp
jl
push
loopne
outsl
pop
adc
leave
ret
adc
cmp
xchg
xchg
in
sahf
sub
int
out
inc
and
push
cmpsl
jo
pop
cmp
inc
dec
faddp
mov
fsubrp
ret
xor
jl
notl
sub
sbb
adc
mov
dec
inc
test
xchg
ljmp
xor
cmp
ficompl
xchg
mov
leave
movb
ret
aas
into
sub
sub
loope
add
xor
scas
inc
push
fstpl
and
sahf
je
imul
stos
clc
pushf
jp
mov
push
lods
xchg
loope
in
push
push
jb
cmpsl
push
in
lods
cwtl
test
dec
les
cmp
or
ds
pop
xor
out
repnz
sub
out
loop
cmc
push
mov
and
popf
xchg
adcl
lods
add
inc
fwait
pop
or
negl
clc
mov
loope
pop
xor
push
into
jne
dec
loope
dec
in
jae
jl
push
xchg
push
jg
aam
movsb
mov
dec
xor
dec
xchg
jae
push
push
or
int
das
lock
mov
pop
lcall
test
and
push
jge
or
xor
jg
call
fmull
sub
inc
and
shrb
lret
mov
sbb
testl
add
sub
mov
scas
divl
es
jae
cmpsl
mov
jmp
sarb
add
pop
cltd
jnp
inc
repz
inc
movsb
mov
inc
jae
cmpsb
push
push
dec
push
faddl
movb
test
bound
outsl
sub
call
daa
mov
faddl
sub
pushf
enter
xchg
fwait
push
jg
mov
in
push
mov
jb
sub
movsb
ficoms
test
sbb
insl
aam
aas
sbb
insb
ja
fnstsw
orb
das
push
sub
lods
push
insl
stc
dec
and
or
aaa
inc
cmp
es
or
sti
sub
pushf
lods
ljmp
mov
sahf
xlat
cmp
inc
daa
or
mov
push
mov
adc
xor
fldl
lods
ja
mov
rcr
xor
xchg
ret
arpl
dec
or
inc
mov
repz
push
sbb
sub
arpl
insl
pop
clc
jo
in
pop
xor
ficoms
in
clc
es
jo
mov
mov
adc
fs
outsl
ret
fdiv
mov
call
lret
aas
mov
add
imul
mov
jo
xchg
mov
dec
xchg
jle
push
lret
sub
pop
aam
jg
mov
sbb
cld
mov
mov
xor
insl
iret
push
cmpsb
mov
xchg
hlt
push
and
push
jl
movsl
mov
push
and
ss
xor
pop
aas
xchg
pop
adc
sbb
add
sbb
inc
cs
loop
sbb
in
dec
jns
setle
cmpsl
dec
inc
inc
dec
lahf
or
cmpsl
pop
sub
call
pop
fidivrs
pop
and
mov
cmpsl
pop
fsubrs
pop
pop
ss
pop
and
pop
sub
ja
shll
cmpsb
ficoms
fcmovnb
aas
or
mov
jl
lods
jae
nop
push
sarb
push
fimuls
xchg
out
xor
push
mov
cmc
loop
jne
cli
adc
or
fwait
aaa
data16
fidivs
es
dec
gs
push
outsl
aas
int3
pusha
enter
adc
cltd
dec
gs
jns
lea
movsb
xchg
dec
jne
adc
lods
leave
mov
push
mov
cmpsb
dec
mov
and
testb
xor
jmp
pop
mov
push
push
loop
xchg
outsb
add
xchg
jge
jmp
jae
outsl
rclb
sbb
int
fxch
repnz
jns
or
xchg
js
out
xlat
mov
cld
les
inc
out
fildll
push
sbb
xor
fwait
or
mov
push
es
push
xchg
movlps
mov
out
f2xm1
int
orl
mov
mov
and
lcall
mov
dec
push
sub
dec
add
inc
push
xchg
adc
mov
inc
in
sahf
mov
inc
cmp
mov
loope
shr
pushf
xor
sub
jecxz
fisubrs
mov
lret
lock
dec
inc
pop
clc
push
test
cmp
les
ss
cmp
ret
or
adc
pop
mov
cmpsl
or
cmp
cmp
add
aam
mov
stos
out
popl
cs
js
jno
sub
or
lret
cmp
icebp
fucomip
push
mov
cmp
dec
mov
sub
adcl
inc
push
cli
cmp
push
fstl
dec
lret
mov
xchg
lods
movsb
in
fmuls
mov
sbb
add
xchg
jno
test
add
mov
cmp
pop
mov
and
test
out
cmp
xchg
cmp
fwait
xchg
mov
std
arpl
push
div
and
xchg
mov
jne
dec
mov
icebp
scas
mov
aaa
daa
loop
sub
sbb
inc
movsb
mov
roll
arpl
xchg
dec
fildl
je
shrl
push
lods
cli
arpl
adc
adc
test
jb
mov
rcrb
sti
movsb
andb
sub
add
pushf
out
adc
daa
jg
pop
sub
nop
push
push
imul
adc
lds
cmp
push
insl
xor
shr
jne
push
aad
int3
dec
fs
sbb
popa
test
sbb
fwait
dec
pop
in
lods
add
rclb
pop
call
pop
mov
sub
je
cmp
pop
jo
adc
push
stc
pop
xor
ftst
stos
or
fldt
adc
dec
push
out
mov
jo
mov
sub
xchg
jl
sbb
xchg
xlat
jno
ss
insl
push
pop
or
fcmovbe
push
jo
jg
aam
out
add
sbb
add
add
not
dec
mov
rep
or
xchg
xor
xor
into
rcrb
sub
inc
int3
push
cmp
aam
mov
arpl
dec
push
loope
iret
sub
push
in
inc
loopne
out
inc
mov
mov
push
gs
scas
in
and
push
scas
jbe
add
movsb
push
inc
test
insb
add
push
push
or
shll
xor
loop
test
cmp
insl
int3
xchg
ja
lret
loop
or
icebp
or
dec
push
ds
dec
cmp
aad
test
pop
rcr
nop
ficompl
mov
sub
aad
mov
xchg
icebp
mov
aas
adc
mov
push
lea
out
jae
mov
mov
push
jns
jae
and
push
push
push
fcompl
mov
fidivrl
sti
lock
sbb
mov
or
pop
stc
inc
adc
mov
es
test
mov
pop
adc
lock
popf
int3
scas
sbb
mov
jecxz
adc
ljmp
pop
sar
mov
fadds
sbb
std
in
and
xor
mov
pop
popa
cmp
outsl
jnp
cmp
andl
lock
mov
inc
orl
push
mov
movsl
dec
sbb
mov
mov
pusha
test
pop
cmp
pop
stc
pop
pop
fisttps
fwait
loope
cmp
std
and
jns
sbb
and
or
lcall
inc
out
pop
xchg
push
and
fistps
pop
arpl
scas
jae
ljmp
pop
fdivrs
shll
xchg
jnp
fs
clc
stc
pop
jmp
push
mov
icebp
fwait
dec
jmp
or
outsb
pushf
bound
xor
movsl
inc
dec
and
push
popf
sbb
aas
pop
int3
stos
sub
add
mov
hlt
in
popa
pop
cltd
lahf
dec
push
sbb
movsl
xchg
sbb
mov
aad
data16
aas
rorb
js
or
testb
push
arpl
stos
jo
addr16
inc
or
sbb
inc
cs
push
popf
std
cmc
jle
inc
andl
inc
sahf
movsb
addl
ret
jno
sti
jo
xlat
popf
sbb
aaa
lea
ficompl
sahf
stos
lahf
cmp
cmp
fucomp
loope
xor
subb
push
movsb
pop
cld
in
xchg
jmp
mov
ss
jb
repz
inc
ret
push
inc
scas
push
in
mov
push
jo
pop
xchg
push
imul
insb
push
cltd
pop
outsb
stos
bound
leave
pop
std
lret
popf
in
cmpsl
adc
cmp
mov
outsb
xchg
and
xchg
and
inc
jecxz
jns
jb
cmpsl
mov
mov
push
mov
sbb
mov
dec
push
sub
arpl
jo
loopne
xchg
out
jp
ret
inc
imul
inc
lret
cmp
jb
xchg
fisttps
imul
icebp
je
inc
push
adc
push
fcomps
test
pop
pop
cmp
mov
or
push
push
inc
insb
pop
pop
jne
hlt
sub
mov
xor
popf
leave
std
add
lds
pop
adc
dec
xor
jb
inc
dec
int3
rcrb
and
mov
add
xorb
lret
sbb
mov
ja
inc
das
js
xorb
or
gs
sbb
mov
imul
or
mov
out
js
bound
sbb
sbb
decb
dec
lods
push
es
out
xor
mov
jbe
hlt
pop
xor
mov
adc
arpl
enter
nop
jl
sbb
data16
and
jg
pop
inc
lcall
cmp
cli
or
xlat
iret
add
and
add
out
data16
outsl
insb
mov
jae
mov
movl
popa
push
lods
ret
jns
cli
adc
xchg
movsb
leave
pop
mov
push
mov
aam
testl
fadds
dec
lock
pop
leave
xchg
dec
fs
mov
fucomp
mov
pop
testl
test
movsb
ljmp
popa
pusha
mov
push
insb
ds
loop
insb
ljmp
sbbl
leave
rorb
inc
dec
lds
xchg
cmp
cmpl
cld
lods
adc
xor
je
imul
jl
push
xlat
aaa
ljmp
sbb
mov
fidivl
jb
fmuls
fcompl
mov
mov
aam
in
mov
insl
icebp
divl
or
dec
or
xor
jb
out
inc
mov
cli
xlat
outsl
cmpsb
mov
adc
test
outsl
and
jg
into
mov
mov
in
pop
out
dec
mov
ja
fldt
cltd
push
inc
arpl
ja
cmpsl
in
outsb
hlt
jl
cld
iret
ss
inc
adc
scas
into
out
pop
out
insb
sbb
sahf
inc
ds
add
inc
push
fcmovnu
and
sahf
pop
and
sbb
mov
pop
or
mov
jge
cmp
xchg
xchg
nop
or
push
ja
adc
mov
hlt
aad
push
cld
or
enter
pop
pop
jp
sub
and
popf
dec
adc
adc
stos
sbb
cmp
xchg
pop
sahf
adc
sbb
pop
aam
xor
mov
ret
mov
inc
cmpsb
push
insl
shrb
cs
pop
dec
loop
add
push
and
iret
jns
adc
sub
sub
subb
lea
add
jno
jg
pushf
loope
inc
movsl
lods
imul
push
fdivs
cmp
fldt
cmp
std
dec
jmp
mov
icebp
and
lret
sbb
pop
cmp
jg
inc
ss
aad
movsb
sub
aam
sub
jge
sub
fildll
push
into
aas
push
repnz
sub
mov
cmp
das
imul
lret
sbb
pop
sub
inc
fmuls
insb
push
lcall
mov
clc
sub
xchg
and
fs
lret
and
into
push
jno
cmpsb
orb
fs
sub
xor
mov
or
pop
inc
mov
xlat
rcr
std
mov
lds
push
mov
or
xchg
cmp
das
ret
pop
and
push
lea
pushf
cmc
jle
scas
mov
daa
push
js
or
pushf
fwait
dec
push
jb
scas
dec
pop
jno
sbb
mov
sbb
dec
sti
ret
nop
inc
ret
cld
pusha
jle
jae
ja
sub
aad
stos
jl
fsub
shll
insl
movsl
addr16
icebp
mov
dec
jle
hlt
inc
lods
std
outsl
repnz
jl
insb
cmp
in
popf
sub
push
and
mov
addr16
push
sbb
mov
xor
loope
xor
into
lret
jg
out
push
rcll
sbb
pop
mov
mov
mov
sbb
movsl
push
test
pusha
das
rol
call
pop
in
mov
cmc
mov
pop
mov
daa
inc
push
fisttpl
sbb
add
xchg
xchg
inc
push
andl
psubw
imul
jg
xlat
stc
push
jge
mov
leave
xchg
icebp
out
sub
test
pop
dec
call
cmpsl
loope
cmpsl
pop
inc
jge
xor
sahf
popl
jns
shll
jo
jns
xor
sbb
cmc
les
mov
xor
inc
adcb
add
mov
test
out
nop
pusha
cwtl
jmp
test
dec
sbb
push
xchg
sub
in
call
es
mov
push
rcr
xor
test
jo
jle
fistps
aaa
loopne
mov
stos
adc
mov
sbb
addr16
cmp
inc
arpl
xchg
jns
fwait
mov
pop
cmp
jne
mov
xor
icebp
push
daa
xor
test
aaa
push
cld
mov
cmpsl
andl
aad
jno
xchg
inc
pop
dec
push
or
inc
xorb
pop
cmpsl
inc
or
mov
sub
mov
rcr
and
jp
mov
shlb
aam
fistpll
push
clc
pop
add
add
xchg
repnz
ja
bound
pop
cld
push
xor
fnstcw
xor
insb
push
or
xchg
add
push
divl
or
hlt
jae
xor
sub
and
dec
fs
inc
mov
and
mov
mov
or
sbb
pop
cmp
mov
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
sub
jns
imul
dec
sub
stc
mov
cli
cltd
ljmp
pop
sub
jge
imul
dec
jmp
xor
mov
and
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
aas
add
xor
and
push
pop
add
dec
fdivrs
movsb
aam
les
fcomip
iret
jo
add
pop
pop
and
push
jg
outsl
je
fs
xchg
mov
movsb
xchg
inc
out
hlt
popf
in
lods
aas
imulb
cmpsb
pop
cld
cmovp
outsl
push
fs
lock
cmpsl
scas
fdivr
rorl
lods
mov
jo
jo
pop
push
mov
dec
dec
shll
mov
jmp
sub
xchg
cmp
lock
loopne
clc
imul
lock
les
bound
push
xor
cwtl
add
sbb
inc
call
add
mov
mov
incb
inc
enter
rcl
enter
inc
outsl
mov
fs
fs
xor
fildll
xchg
les
cmc
and
inc
jmp
or
adc
mov
jp
dec
out
int3
mov
pop
clc
mov
loope
xchg
out
les
or
call
shlb
or
scas
cmpsl
lret
cmp
ljmp
dec
aas
push
das
xor
and
mov
cmp
je
ret
mov
xchg
pushf
dec
out
cmpsb
jge
jbe
inc
jbe
cmp
sub
adc
fcmovbe
fcmovnbe
test
pushf
popf
fldl
sub
cmp
sub
dec
repz
fidivl
stos
test
jbe
jl
ja
push
jg
outsl
je
fs
xchg
mov
movsb
aam
out
hlt
iret
adc
add
xor
and
push
jg
outsl
je
fs
xchg
mov
movsb
aam
out
hlt
iret
adc
mov
dec
fwait
mov
sahf
mov
out
fs
pop
sbb
lds
mov
adc
adc
test
sub
ds
mov
fs
fsubr
add
imul
cmc
pusha
ja
jbe
std
inc
call
or
jp
add
addr16
xchg
jge
adc
test
cld
sahf
add
cmpsl
repnz
clc
dec
movaps
into
sbb
out
jno
mov
iret
movsb
dec
repnz
insl
out
repz
push
adc
bound
imul
push
sub
leave
jno
adc
mov
push
pusha
testl
out
adc
aad
push
std
push
cmp
lea
cld
pop
and
mov
sub
pop
ret
jbe
dec
out
cld
mov
lret
dec
or
mov
stos
pop
jp
push
sub
fwait
mov
add
cmp
push
sbb
in
push
dec
and
insl
rorb
jnp
xchg
sbb
adcl
sub
pop
and
jge
scas
fistpl
xchg
dec
das
push
out
fwait
mov
xor
fdivrl
dec
dec
add
outsb
ds
js
xchg
in
inc
ret
mov
or
jp
cld
stos
mov
lret
push
mov
lcall
fs
fwait
sbb
sbb
push
fdiv
out
mov
notb
and
cmpsb
in
lods
sbb
add
xor
jmp
ja
lahf
jne
test
add
mov
mov
outsb
cs
pop
pusha
popl
outsb
push
cmp
ds
movsb
xor
cli
and
dec
and
inc
pop
xor
les
clc
xchg
mov
push
dec
shlb
xchg
test
sub
repz
mov
idivb
cmp
enter
sbb
popa
dec
cmc
add
sahf
das
das
dec
or
mov
shrb
cmp
push
adc
dec
mov
mov
jge
test
aam
pop
cmpsb
xchg
idivl
loopne
xor
and
push
mov
mov
adc
xchg
xchg
mov
mov
add
mov
lods
ficomps
ljmp
or
js
mov
lret
sahf
lret
cmp
lods
shl
inc
ds
movl
xchg
inc
xor
cmpb
nop
test
lahf
sub
xor
mov
sub
outsb
dec
sub
rolb
mov
sub
xchg
jle
adc
xchg
mov
pop
cmp
call
inc
sub
xor
pop
insl
loop
push
mov
or
push
lea
push
out
pop
arpl
leave
cmp
in
jnp
mov
shr
outsb
lret
sub
mov
and
fs
cltd
and
nop
gs
test
sub
sti
ja
inc
mov
mov
lods
sahf
jmp
push
pop
call
push
les
addb
mov
dec
cmpsl
xchg
jle
jb
xchg
inc
xor
cs
lods
jp
movsl
inc
mov
les
insl
fadds
ja
cmp
mov
ret
or
inc
push
pop
xchg
in
mov
and
push
lea
jne
les
cltd
mov
push
lret
lret
mov
aam
pushf
mov
pop
cli
sub
dec
ljmp
movsl
hlt
les
enter
aas
pop
imul
shl
xchg
into
adc
test
sti
xor
dec
cmp
fwait
dec
mov
and
iret
mov
scas
pop
test
popf
psraw
dec
in
insb
loope
subl
jb
call
dec
lret
push
popa
out
leave
and
bound
lea
adc
lret
push
mov
fldl
push
bound
push
jae
addl
leave
leave
popf
ljmp
inc
cli
fidivrs
mov
fnstcw
push
out
push
jne
hlt
or
imul
or
mov
lock
or
sbb
pop
jns
dec
sub
sbb
jmp
rolb
stc
inc
sbb
cmp
clc
xlat
loopne
icebp
into
pusha
and
inc
cmp
xchg
xchg
push
lahf
repnz
jp
outsb
mov
fucomip
mov
push
and
push
aad
mov
push
jle
or
insb
clc
int
adc
nop
imul
jns
or
cltd
jno
and
stc
mov
mov
pmaddwd
imul
and
push
sbb
aam
push
iret
fcompl
sub
mov
xchg
stos
mov
mov
add
pop
add
lock
testb
mov
leave
imul
imul
imul
pop
pop
pop
mov
sbb
add
cmp
and
int3
push
xchg
mov
adc
xor
cmpsl
xchg
nop
mov
add
add
loope
mov
pushf
sbb
mov
xchg
aad
mov
aam
mull
mov
adc
imul
pusha
jo
imul
pop
test
add
pusha
mov
mov
jmp
pusha
push
mov
popa
pop
and
dec
push
sub
lea
pop
adc
cwtl
js
pop
stc
ds
je
insl
jb
mov
shlb
js
mov
loopne
cmp
xchg
add
rclb
fucom
mov
dec
push
sub
mov
or
or
lea
mov
sbb
loopne
dec
insb
es
pop
mov
sub
insb
and
xchg
movsb
mov
cltd
add
xchg
outsb
fcmovbe
and
roll
add
add
jbe
adc
dec
and
stos
loope
ds
jae
xor
std
lods
push
jge
pop
mov
js
adcl
aas
jns
aad
dec
sbb
dec
cli
xor
cs
mov
dec
pop
inc
popa
push
aaa
std
mov
xchg
sbb
jge
xchg
inc
add
pop
cmpsb
aam
les
pop
test
jne
test
cli
adc
dec
inc
lret
adc
sahf
fisttpl
leave
mov
mov
sub
mov
jb
jl
mov
cli
jecxz
mov
mov
js
mov
sub
xchg
sub
repnz
test
cmpsb
scas
sbb
in
icebp
sub
pop
pushfw
out
jmp
fucomip
aaa
push
ds
sbb
mov
imul
fidivl
or
mov
cwtl
xchg
dec
and
nop
or
cmpsl
add
lods
adcb
dec
push
push
pmaddwd
mov
push
arpl
das
stos
insb
call
or
popl
popf
pop
nop
scas
and
mov
mov
mov
jg
outsb
neg
popa
dec
inc
movsl
xchg
rolb
push
push
xchg
add
adc
das
ret
sub
inc
pusha
push
in
add
sbb
mov
xchg
insb
lret
push
sub
pushf
jb
adc
add
lock
xor
inc
xor
push
jnp
dec
cmp
add
lret
aas
addps
xchg
cmp
fistpl
lret
out
jp
lods
scas
aam
or
mov
dec
mov
and
mov
fstpl
clc
outsb
out
daa
ja
jbe
ljmp
in
sub
lods
push
daa
movsb
sbb
fildl
scas
cli
mulb
test
movsl
add
stos
das
ss
pop
jb
and
jmp
cmpsl
jae
jecxz
sbb
js
xor
or
dec
repnz
sub
xchg
cmp
push
andl
orl
xchg
adc
add
imul
pop
das
mov
xchg
repnz
xchg
adc
pop
bound
insb
cmpsl
inc
insb
pop
dec
or
mov
mov
sbb
push
mov
cmp
dec
imul
in
lahf
stc
imul
jo
cmp
pop
sbbl
repnz
mov
inc
mov
loopne
mov
mov
int3
aad
pop
call
adc
and
dec
cld
or
dec
add
in
xchg
jl
lods
mov
movsl
decb
inc
dec
jge
lahf
imul
sub
mov
stc
adc
add
inc
outsl
scas
xchg
dec
push
ljmp
add
xchg
jnp
adc
loopne
cs
pop
loop
jnp
cmp
inc
xor
mov
xor
scas
in
lds
ljmp
cld
dec
dec
xor
rorb
pop
test
leave
push
das
xchg
mov
push
clc
push
sub
std
iret
push
mov
xchg
jge
ret
xchg
negl
jecxz
enter
fcmovnu
mov
cmp
adc
mov
test
sub
jge
out
inc
push
daa
call
jge
pusha
fs
xchg
push
cmp
fimull
call
lods
adc
mov
push
dec
add
test
sub
push
jecxz
daa
jns
fldcw
mov
ss
xchg
pop
cmp
push
jecxz
lcall
shr
je
test
adc
pop
lods
je
fidivrs
jne
sbbb
into
add
cld
aam
ret
stos
dec
insb
fsubrs
mov
cmpsb
dec
imul
dec
and
lcall
pop
fistps
pushf
int3
jl
pop
xchg
add
and
dec
nop
fldcw
rorb
xor
ret
ss
out
mov
xchg
stc
fisttpll
xchg
pop
int
push
xor
mov
add
or
incl
mov
inc
das
sar
fcomi
sbb
add
cmp
sub
je
dec
xchg
push
out
fwait
inc
mov
or
and
inc
mov
mov
mov
sub
arpl
std
test
jnp
mov
dec
fcmovnbe
xchg
cwtl
repnz
jb
mov
les
scas
test
jns
cmpb
push
cmp
jnp
insl
ss
into
cmp
mov
shrb
sarl
xchg
mov
jecxz
push
nop
mov
test
aad
shrb
sahf
test
insl
cmc
mov
shlb
ret
push
mov
sub
cltd
rcrb
mov
shr
rcrb
xchg
je
xchg
rcrb
leave
pop
ret
mov
aaa
cmp
cmc
gs
aas
mov
mov
push
cmp
push
mov
insl
xlat
lods
clc
xor
or
test
mov
jo
nop
lds
ret
push
lods
cmp
sub
stos
add
in
jp
std
sub
fldl
xor
inc
into
dec
push
rorl
mov
popf
pusha
popa
ret
cmp
in
jbe
xlat
jne
mov
xor
test
or
rclb
push
mov
cmp
xchg
lds
cmp
cld
add
imul
arpl
cmp
lret
xor
andb
pop
nop
mov
js
xchg
ror
pop
add
sub
sub
xorb
icebp
loopne
int
inc
inc
cld
aas
idiv
adc
adc
jecxz
out
into
xchg
dec
jmp
std
movsb
sub
cld
test
mov
jmp
push
jo
dec
mov
fisttpll
out
dec
mov
sub
push
int
cltd
cmp
cwtl
mov
inc
call
pop
mov
mulb
fidivs
out
pushf
cmp
ja
mov
scas
sbb
dec
ds
enter
aad
fstpt
rcll
fwait
add
cmp
test
icebp
mov
cmp
or
out
lods
jno
mov
shll
imul
adc
push
mov
cmpsl
and
pop
inc
jns
push
fcmovnb
stos
jbe
xchg
xchg
xor
push
sub
pop
out
mov
roll
or
mov
mov
je
push
cmpsb
and
les
cmpsl
pop
out
add
pushf
js
ds
fistl
mov
scas
mov
in
pop
mov
push
std
sub
popf
or
or
fcmove
out
aas
gs
push
mov
jb
mov
aas
fs
stc
ret
test
cmp
cltd
pop
dec
push
push
push
xor
fsubs
popa
mov
lcall
inc
ret
notl
es
push
sbb
in
pop
ja
mov
inc
imul
inc
and
xor
pusha
pop
dec
or
inc
mov
roll
aad
adc
adc
add
fistpl
cmc
jo
cmpsb
sub
daa
arpl
test
pop
push
mov
cmp
int
sbbb
leave
add
mov
imul
lret
inc
mov
les
inc
outsl
loop
dec
addr16
scas
int3
shlb
adc
icebp
xor
jbe
test
mov
mov
mull
sbb
adc
dec
mov
pusha
addl
and
jnp
hlt
sub
inc
jl
lahf
in
xchg
lods
aam
fwait
mulb
iret
stos
test
sbb
mov
out
lock
je
imul
addr16
and
push
push
int3
shl
shlb
mov
mov
adc
push
jns
enter
adc
add
cmpsb
adc
mov
inc
mov
repnz
push
in
pop
cmp
je
sbb
mov
bound
rorl
movsb
aam
lods
das
cmpsb
js
xor
dec
sub
push
mov
mov
jp
inc
call
fiaddl
mov
dec
fdiv
insb
mov
jo
xchg
ja
pop
into
es
push
mov
hlt
jmp
jne
popf
sbb
push
fidivs
int3
jle
add
pop
add
mov
sub
mov
inc
ljmp
out
sub
add
mov
clc
add
xor
xchg
cmp
jo
push
jmp
and
imull
fdivp
mov
add
into
aas
xor
sub
outsb
movl
push
outsl
mov
and
xor
insb
dec
xchg
pop
lcall
clc
outsb
push
fdivs
push
mov
jbe
es
jmp
xchg
mov
in
int
cwtl
push
movb
lods
decl
scas
push
cltd
or
movsl
aad
xor
pusha
or
pop
aaa
xchg
dec
sti
sub
movsl
fwait
iret
scas
dec
sbb
inc
shll
loope
pop
or
andb
xor
inc
jmp
adc
or
fs
data16
test
in
jb
jmp
popa
mov
lahf
mov
inc
jb
xorl
dec
or
sub
push
repnz
repnz
sbb
xchg
daa
mov
and
pop
inc
and
mov
xchg
shlb
pop
jecxz
idivl
lods
mov
fdivr
sbb
repnz
xchg
ja
push
jl
add
sbb
xchg
sub
cmp
xchg
sbb
pop
pop
addr16
fsubl
lock
fmul
adc
dec
icebp
fnstsw
ds
cmp
lea
mov
mov
adc
add
mov
andb
sbb
cmp
add
stos
shll
xchg
mov
dec
adc
mov
adc
repnz
shr
push
cmpsl
mulb
fmul
insl
pop
jp
jp
mov
dec
sub
xchg
sbb
pop
into
je
cs
pop
loop
fstpl
xor
add
inc
ret
notl
cwtl
sbb
push
das
ja
mov
jg
movsb
jmp
push
add
mov
and
loopne
rcll
pushf
outsl
and
ret
xchg
cmp
fsubs
aad
getsec
or
cmp
je
in
mov
mov
lock
insl
and
loope
adc
dec
loop
jg
cs
pop
push
jg
stos
lcall
mov
ds
mov
fdivl
ss
inc
leave
mov
xor
lcall
fld
sub
leave
or
jbe
lods
or
lret
filds
jb
sub
xor
cli
lea
pop
loop
sub
sub
outsl
filds
test
jge
pusha
pop
jnp
dec
dec
xchg
push
mov
mov
xchg
xchg
or
xchg
out
fs
stc
mov
jns
data16
std
cld
ljmp
mov
imul
inc
xchg
es
dec
xor
pop
cwtl
lods
cmp
bound
pop
jne
cmc
out
lret
hlt
jle
jp
mov
stos
mov
insl
out
out
mov
movsl
pop
iret
jne
icebp
or
arpl
in
xor
pushf
int3
ror
or
fwait
jnp
mov
sbb
cmpsb
add
nop
dec
sbb
fs
testb
cmp
push
pop
rcrb
in
popf
js
rcrl
cmp
and
aas
or
lods
mov
pusha
xlat
xor
movl
sbb
pop
pop
xchg
loopne
in
rep
aam
cmc
insl
mov
subb
xor
out
mov
inc
sub
pop
adc
fmull
jg
mov
scas
mov
adc
jmp
movsl
ficompl
push
pop
mov
enter
cli
stos
es
sbb
lret
xchg
int3
adc
jne
mov
xchg
inc
lret
sbb
int
fldl
idiv
push
mov
lret
push
cld
push
daa
lock
lcall
dec
jl
je
fldt
iret
imul
pop
js
ljmp
adc
cmp
xor
addr16
lds
inc
adc
sub
sbb
or
or
outsl
movsb
mov
xchg
cmp
les
out
ret
mov
arpl
enter
cmc
out
or
cmpsl
mov
pop
sbb
fwait
adc
or
lcall
out
jns
cltd
in
enter
hlt
jge
cmpsl
repnz
in
lods
push
sti
jecxz
push
xchg
shrb
mov
and
das
sbb
cmp
fsubl
cmp
and
xor
cmp
dec
mov
push
rcrl
and
nop
addr16
mov
sbb
lea
inc
ss
fdivs
mov
stos
or
or
cld
sti
pop
xacquire
shlb
push
sub
in
add
lea
inc
loop
lds
and
sbb
ret
push
jg
daa
in
push
sbb
or
je
or
and
sbb
and
insl
out
push
fidivrl
ds
sub
dec
push
sub
test
arpl
scas
cmovge
jns
push
pop
cwtl
push
push
call
sbb
lret
aaa
stos
mov
cli
cmp
lcall
mov
mov
sahf
xchg
loop
jne
insb
mov
repz
xchg
push
or
cmp
mov
or
pushl
cmp
jae
jne
cmp
icebp
sub
mov
stc
adc
stos
rcrb
xchg
scas
in
cmp
and
data16
pop
cmp
iret
xchg
lock
xchg
mov
lds
mov
or
lret
push
xchg
xor
mov
mov
decb
xorb
in
xor
inc
push
faddp
ss
clc
mov
insl
int
aam
pop
mov
add
outsl
pusha
pushf
loope
dec
or
push
mov
mov
inc
movsb
out
pop
adc
xchg
push
cwtl
lods
scas
xor
je
jnp
mov
in
shll
ja
fistl
aas
subl
fs
pop
mov
aad
jbe
mov
es
inc
sahf
scas
push
xor
jae
mov
cmp
jns
mov
lds
sahf
idivl
mov
int
jnp
jle
scas
add
jns
adc
iret
pop
out
adc
jg
imul
leave
fildll
and
popf
and
add
jnp
sub
nopl
pusha
fwait
adc
test
ljmp
repnz
jo
hlt
popl
mov
xchg
sbb
mov
xor
xchg
jecxz
mov
lret
pop
or
push
mov
movsb
subl
jno
jo
and
pop
enter
push
xlat
mov
jmp
ret
add
test
sub
pop
push
and
cmpsl
enter
adc
push
jae
mov
push
jmp
les
adc
sti
pop
std
push
bound
cmc
movb
sbb
pushf
push
imul
lds
inc
loopne
jnp
in
mov
fisttpll
adc
std
cmp
lods
jno
jle
dec
inc
push
test
test
sub
les
lcall
loope
sbb
shrb
xchg
aas
sbb
mov
and
or
add
hlt
cmp
or
xchg
jnp
cli
mov
sbb
sub
stc
xor
cmp
sub
xor
movb
es
mov
in
in
fwait
mov
insb
jp
repz
call
jb
lea
xor
adc
sti
jg
xor
imul
xor
into
out
loopne
cld
je
js
sarb
pop
sbbl
push
repz
decb
popa
pop
and
xor
mov
int
jmp
mov
adc
pop
subb
pop
and
push
jg
outsl
je
fs
xchg
mov
movsb
aam
out
hlt
iret
adc
add
xor
and
push
jg
outsl
je
fs
xchg
mov
movsb
aam
out
hlt
iret
adc
xor
push
lahf
and
les
out
je
movsb
dec
xchg
aas
test
aam
aam
hlt
fisttps
add
pop
das
outsb
pop
add
push
jg
outsl
je
in
xchg
mov
movsb
clc
mov
and
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
ss
loopne
popl
repz
nop
es
xor
testb
mov
and
rolb
nop
xorb
push
mov
notb
mov
mov
xchg
xchg
leave
rcr
call
push
cltd
jle
or
and
out
aad
cmpsl
adc
aas
cmc
dec
rolb
dec
repnz
adc
jl
addl
or
jle
mov
shlb
mov
xor
test
inc
stc
imul
cmp
lods
mov
jmp
pop
push
shrb
pop
and
mov
out
out
lahf
sub
push
inc
dec
lcall
jbe
inc
imul
xchg
push
pop
mov
push
jo
cmp
xchg
mov
cmp
leave
ljmp
xchg
test
mov
lds
es
aad
sbb
cltd
rorb
imul
pop
scas
mov
cmpsb
adc
ror
adc
shrb
cld
adc
rclb
notl
es
out
pop
push
lcall
mov
sub
mov
int
and
inc
xchg
arpl
mov
loope
fsts
inc
call
and
xor
je
fsubrl
and
xor
jmp
and
mov
sub
cmp
push
ss
mov
divb
pusha
adc
and
lock
loopne
nop
xorb
push
mov
divb
pusha
adc
and
test
inc
pushf
aad
mov
push
add
dec
pop
movsl
xchg
and
outsb
push
stc
xchg
mov
and
inc
mov
mov
ficoml
rclb
sub
jl
push
sub
xchg
outsl
mov
cltd
shl
xor
cltd
xchg
and
mov
out
out
pop
mov
pop
dec
cwtl
ljmp
push
and
sbb
mov
xchg
mov
push
dec
ret
mov
push
call
cmpsl
push
xor
dec
sbb
mov
push
sbb
push
mov
sub
mov
cwtl
das
cmp
clc
clc
mov
push
loopne
sbb
cld
dec
les
popf
pop
popa
adc
sbb
into
hlt
aaa
arpl
movb
rclb
sbb
or
cmp
aam
aaa
enter
insb
or
sub
xor
nop
imul
pop
scas
fisubrl
sub
ret
hlt
adc
loope
addl
in
xchg
cmp
aad
sbb
push
cli
pop
sub
lret
inc
testb
idivl
lods
rol
mov
pop
std
pop
pop
andb
mov
int3
test
pop
scas
push
mov
mov
push
adc
sub
mov
or
xor
clc
sub
out
xchg
cld
mov
push
xchg
ja
les
shlb
pop
sbb
out
mov
inc
and
push
imul
iret
clc
es
lcall
xchg
dec
shll
outsl
loope
pop
js
test
mov
xor
jmp
and
insl
pop
xchg
leave
lds
adc
stos
mov
scas
hlt
mov
mov
adc
add
cmp
inc
inc
pop
jnp
push
mov
sarl
inc
cwtl
xor
push
gs
jl
cmpsl
or
pop
push
fists
mov
or
mov
sub
jle
adc
lret
movd
sub
jne
adc
pusha
notb
cli
lcall
push
jne
mov
dec
inc
cmpsb
outsb
jp
sub
arpl
sbb
and
andb
adc
push
add
jge
iret
imul
mov
ja
and
psrad
xchg
lds
test
in
cmp
cs
icebp
mov
mov
aam
add
jno
and
scas
es
hlt
out
xchg
inc
scas
xor
sub
cmp
push
loopne
jne
and
mov
in
cld
into
inc
stos
aas
sbb
mov
arpl
xchg
cs
lcall
push
mov
jmp
pop
cmp
incl
pop
mov
aam
jl
fcom
jb
inc
lods
rcll
sbb
sti
add
out
mov
es
jnp
adc
push
push
cmpl
roll
xchg
ret
jno
jmp
arpl
fnstcw
loopne
push
in
add
bound
inc
nop
aad
fbld
sahf
sub
cltd
aad
aas
ss
cmpsl
mov
mov
mov
cmp
je
mov
mov
push
xor
inc
fsubrs
cltd
out
adc
imul
test
popf
adc
or
aad
pop
adc
push
insb
inc
xchg
xchg
mov
scas
les
shrl
xchg
dec
push
lret
lcall
mov
roll
and
mov
inc
imul
and
mov
in
ja
sub
repnz
push
adc
aas
je
xchg
daa
ds
pop
push
ret
pop
xchg
sets
mov
or
lods
repz
mov
adc
dec
xchg
pop
pop
in
mov
cltd
imul
dec
jo
sub
sarb
cmp
mov
out
scas
popf
push
and
mov
xor
mov
pop
jecxz
cmpsb
scas
in
push
jmp
jno
stos
xchg
loope
xchg
pop
nop
test
sub
xchg
jecxz
ret
mov
jne
add
stc
shlb
addl
and
jp
int
xchg
xchg
fadds
mov
adc
das
ret
mov
dec
cmp
cld
test
xchg
xlat
js
lods
dec
ljmp
pop
or
gs
and
jl
inc
hlt
dec
mov
inc
outsb
dec
cld
mov
mov
lods
mov
xsha256
cmpsb
adc
inc
xor
hlt
add
cmc
dec
inc
mov
jge
cmp
fidivrs
push
jnp
test
jp
push
insl
or
mov
xchg
cmp
mov
sbb
xor
shlb
mov
mov
cmp
add
loopne
out
out
stos
push
sbb
addr16
stos
mov
cmpsb
arpl
jb
mov
iret
pusha
lcall
pop
movsl
rcrl
xor
mov
jg
movl
mov
jns
hlt
ud2
ss
push
dec
jmp
mov
nop
and
or
lret
call
mov
imull
push
jo
rcrb
aad
jo
out
xor
push
test
daa
int3
jecxz
mov
add
jg
inc
into
or
andl
pop
fidivs
mov
outsl
jl
int3
int
dec
jl
inc
inc
in
jne
sub
pop
push
clc
adc
add
jecxz
fwait
enter
add
pusha
std
or
clc
fs
sbb
das
mov
sub
pop
stos
lea
jmp
or
aas
dec
pop
fwait
cmpb
pop
add
cmp
jbe
sbb
mov
cwtl
adc
fsubrl
cmpsl
or
xor
xor
jecxz
xchg
fistps
xchg
jmp
sub
jno
or
xor
mov
sbb
shlb
lock
das
stos
fisubs
mov
pop
push
jmp
and
push
fcmovu
jge
add
mov
push
add
jae
lahf
mov
xor
xor
daa
cmp
and
jno
stc
xchg
xchg
cmp
jnp
sub
ljmp
dec
dec
arpl
pop
fadds
mov
es
mov
sub
out
cmp
jp
pminsw
sub
add
pusha
mov
push
je
mov
cli
call
cli
and
stc
std
jle
out
or
xchg
lret
lcall
xchg
mov
inc
test
sbb
inc
lret
push
xchg
cld
mov
jae
gs
out
inc
loop
push
iret
movsl
mov
dec
cmpl
sahf
adc
dec
fs
add
lahf
in
mov
push
aam
and
push
push
shlb
loope
pop
jbe
push
cltd
sub
or
in
pop
aas
clc
mov
sbb
inc
imulb
add
jge
cmc
shrl
inc
stos
mov
mov
pop
pushf
iret
aaa
lods
test
mov
mov
push
stc
mov
mov
xchg
xchg
adc
call
mov
and
int3
lcall
inc
jl
clc
pop
enter
fcoms
lock
test
stos
dec
pop
cwtl
lds
pushf
scas
add
icebp
sbb
stos
adc
paddusb
dec
dec
sbb
rclb
jmp
ja
in
xor
sbb
pop
mov
jo
adc
in
cmpsl
testb
sahf
call
out
xchg
jae
and
mov
push
or
and
andl
add
or
iret
add
mov
in
sbb
cmp
cmp
mov
lcall
insb
ja
cmpsl
enter
push
sbb
clc
mov
inc
cmp
sbb
xor
movhps
sbb
std
dec
ja
int3
into
mov
adc
pop
cmpsb
into
or
sbb
in
sbb
test
sbb
lahf
jecxz
mull
test
data16
popf
rcrl
cmp
and
imul
inc
push
loop
fwait
push
add
jge
sub
in
arpl
into
push
insb
rclb
dec
cmpsl
mull
adc
xchg
cmp
cli
push
push
notb
and
mov
mov
mov
inc
jecxz
or
fs
push
dec
cmp
mov
iret
cmp
sbb
push
out
adc
lahf
clc
stc
loopne
or
mov
adc
pop
in
adc
sbb
jo
sbbb
lods
fldt
fs
loopne
and
nop
jae
in
ds
sub
push
in
bound
lahf
ja
mov
lods
fs
dec
xor
jmp
push
fs
stos
inc
lods
fstps
movsb
pop
lods
aaa
or
xchg
lea
cmp
js
iret
pop
pop
cmp
sarb
pop
aad
mov
dec
and
cmpb
movsl
out
fcomip
mov
aad
aaa
jl
insl
out
mov
inc
add
xchg
dec
lods
or
mov
sahf
insb
pop
and
cmp
sbb
lret
or
ss
fistl
adc
push
test
adc
sub
hlt
mov
int3
sub
sub
ror
sbb
mov
xor
add
push
xchg
pop
les
mov
dec
xor
jg
cmpb
out
jns
add
jb
xor
mov
cs
out
and
or
aad
imul
pop
cmp
xor
daa
inc
and
insb
push
mov
push
adc
mov
in
sub
loope
test
test
or
loop
call
xor
and
inc
or
mov
add
imul
cmpl
jb
sti
adc
arpl
bound
les
sbbl
mov
adc
pop
sbb
test
sub
cmc
in
pusha
leave
es
addr16
lods
hlt
jne
xchg
dec
insl
enter
cmpsb
sbb
pop
sbb
jecxz
dec
sbb
mov
sub
repnz
outsl
or
scas
and
int3
nop
lea
and
mov
push
fs
movsb
mov
push
std
ror
stos
cmp
cmp
sbb
pop
ret
mov
push
pusha
push
es
insb
arpl
jmp
hlt
sbb
repz
adc
and
cmc
fnop
mov
ret
mov
jl
mov
repnz
int3
adc
aad
pop
xchg
out
cli
repz
sahf
xor
jecxz
in
popw
loope
jmp
push
xor
cmp
jo
fistps
mov
stc
test
or
pop
mov
das
ds
scas
jno
jl
outsb
arpl
loopne
sub
adc
cld
mov
arpl
jae
add
ret
gs
int3
out
mov
fwait
mov
mov
pop
push
fisubrs
pop
fisttpll
mov
repz
test
push
rolb
iret
andb
pop
xor
inc
sbb
fsubl
pop
in
adc
pusha
lcall
mov
enter
pop
cmp
or
sbb
imul
fdivr
and
pop
jns
enter
mov
loope
cmp
pop
cli
ja
xchg
not
in
dec
xor
dec
mov
sbb
mov
and
mov
adc
popa
leave
mov
pusha
sti
enter
mov
push
push
sub
das
dec
mov
add
xchg
sahf
push
mov
jge
inc
mov
or
or
leave
insl
ja
dec
aaa
and
mov
scas
xchg
xchg
outsb
iret
int3
xor
pop
mov
push
xchg
mov
sub
add
pop
mov
jb
mov
test
or
rorl
leave
sar
xor
cwtl
mov
sub
sbb
and
sbb
adc
mov
mov
cld
and
mov
mov
pop
ss
cmp
jle
pop
pop
or
push
adc
fwait
loope
inc
pop
inc
push
mov
jp
movsl
shlb
hlt
mov
jns,pt
xchg
jge
xor
xchg
xor
aam
test
into
or
ss
add
sbb
sarl
in
xor
nop
mov
or
and
and
xor
arpl
ret
pop
fcompl
pushf
arpl
or
sub
andl
adc
pushf
and
ja
popa
mov
push
inc
and
scas
sbb
das
adcb
call
aas
std
test
loope
or
jl
int3
fstl
sbb
pop
outsl
lret
xor
call
sbb
push
loopne
pop
xchg
jmp
and
into
bound
decb
test
push
test
mov
xchg
or
inc
in
fcmovu
in
cmp
and
push
dec
adc
pop
call
mov
std
imul
mov
mov
xor
lods
divb
cwtl
and
rcrl
flds
cld
test
fdivrp
jge
aad
pop
mov
inc
xchg
inc
dec
loop
mov
jns
scas
cmp
push
sub
xor
or
xchg
push
or
mov
sarb
fcoml
xlat
sbb
dec
test
dec
leave
push
add
jb
aas
inc
dec
adc
movsl
cmp
jns
lcall
enter
insl
pop
inc
sar
loopne
cwtl
dec
fistps
lret
sbb
inc
sub
mov
arpl
mov
clc
cmp
jo
ljmp
mov
xchg
cwtl
stc
xlat
dec
das
adc
mov
mov
mov
push
je
orl
cmp
fimull
sub
test
stc
push
pushl
iret
mov
fwait
mov
mov
mov
lcall
adc
out
fcoms
and
and
jle
shlb
jo
jns
mov
mov
scas
push
inc
push
mov
mov
sub
push
pop
push
or
js
xor
or
stos
and
jb
dec
adc
fs
xchg
jp
add
sub
les
mov
stc
jb
sub
lds
cmp
push
add
xor
nop
mov
add
push
cltd
inc
jle
inc
push
pop
pop
jne
mov
jb
adc
mov
adc
dec
push
ret
mov
mov
or
call
xor
sti
adc
fadd
sub
and
push
or
jo
mov
sub
push
mov
popa
in
clc
xchg
into
or
hlt
push
add
or
test
fwait
cmpb
cmpsb
pshufw
push
lahf
ret
inc
xlat
cli
mov
mov
lret
pusha
adc
xchg
pop
inc
sbb
out
insl
add
aaa
sub
pop
pop
and
push
icebp
mov
mov
sub
and
aam
inc
or
pop
aam
mov
popf
adc
pop
lahf
xchg
xchg
jb
rorb
das
in
sahf
sbb
dec
les
mov
push
fsubrl
js
popf
jle
lcall
push
leave
clc
jnp
adc
sti
and
pop
stos
aad
adc
jns
sbb
adc
out
js
xchg
ljmp
leave
and
sarl
movb
mov
mov
hlt
adc
cmpsl
and
dec
xchg
imul
mov
mov
gs
loopne
lds
pop
insb
pop
outsl
nop
repz
mov
xchg
clc
dec
addl
mov
and
es
adc
inc
idivb
or
or
movsl
mov
sbb
leave
in
into
and
jo
scas
xlat
pop
ljmp
xchg
mov
add
mov
mov
sahf
mov
add
decb
cs
xchg
jbe
push
push
idiv
adc
adc
cmp
inc
jp
sub
bound
inc
addl
ret
out
jecxz
or
xor
mov
je
sub
add
and
or
ret
leave
or
adcl
pop
mov
lcall
mov
daa
push
out
call
jecxz
push
ljmp
ja
dec
jmp
and
xchg
outsl
hlt
stc
scas
mov
pop
pop
les
outsl
push
ljmp
ss
xlat
fmul
stos
add
imul
sbb
sub
add
jnp
insl
mov
fnstenv
pop
ret
inc
mov
dec
sbbb
dec
stc
xchg
stos
mov
push
fmuls
test
in
outsb
or
dec
push
aaa
orb
fsubs
hlt
or
fs
jae
mov
adc
cli
or
mov
or
shr
lea
jae
jo
inc
imul
dec
lods
sub
sahf
ja
rorb
mov
fucom
or
xor
fbld
cmpsl
cwtl
add
jp
out
cmp
int3
dec
jae
sbb
adc
push
mov
lret
push
add
xlat
mov
and
pop
pxor
pop
cmp
fs
clc
out
cmp
enter
xchg
pop
iret
dec
arpl
sbb
push
mov
add
xchg
lods
ja
out
mov
add
adc
fwait
cmc
mov
mov
or
jbe
pop
xchg
jecxz
jns
jno
cmpsb
jb
xchg
sub
pop
inc
vmread
roll
pop
into
test
adc
push
shl
cmpl
cmp
inc
fwait
pushf
and
mov
imul
loop
outsb
sbb
inc
push
popl
lds
scas
add
cmp
push
fstpl
sub
jns
bound
sbb
in
je
and
inc
pop
and
push
jne
dec
xlat
sbb
or
cmpsl
pop
push
add
in
fwait
sub
sar
jg
sub
jb
std
mov
repnz
cmp
cmp
dec
fs
push
fcmovu
sahf
js
mov
xor
int
clc
pop
ds
mov
sub
xor
unpckhps
add
or
mov
jp
xchg
aad
pop
mov
sub
add
sbb
std
repz
pop
shrl
sub
pop
scas
sbb
jecxz
push
jecxz
cli
xor
mov
js
pop
andl
sub
stos
pop
mov
sub
cmp
pop
inc
stos
fs
popf
adc
or
adc
mov
int3
mov
cmp
idivb
jmp
outsl
pop
xchg
pop
mov
popa
jmp
pushf
mov
add
out
pop
dec
mov
or
push
out
cmp
adc
icebp
fimull
insl
in
xlat
aad
adcb
or
loop
mov
fcmovne
lret
mov
mov
movsl
pop
push
jl
jle
xchg
inc
idivb
adc
fcomps
push
rcl
into
ret
test
int3
out
scas
addr16
pushf
mov
cld
stos
test
jle
iret
les
pop
xchg
push
jb
aad
mov
stos
fists
cmc
movb
and
in
rclb
lds
repnz
out
lods
cmpsl
mov
iret
sub
cmc
mov
arpl
aam
insl
or
cmp
mov
scas
and
push
insb
mov
sbbb
pop
insl
inc
dec
dec
test
dec
push
push
mov
popa
inc
xor
decl
mov
sub
inc
jne
jbe
int
dec
sub
dec
adc
or
push
mov
and
jnp
cltd
stc
lret
mull
mov
inc
adc
sub
rcrl
jae
pop
mov
inc
insl
xor
sub
stos
cmc
pushf
xor
pop
cltd
or
je
push
dec
inc
push
addr16
pop
test
iret
lahf
sarb
rol
pop
jb
cwtl
out
rolb
adc
adc
imulb
mov
js
and
jmp
es
add
mov
inc
mov
loopne
push
hlt
ss
cmpxchg
xor
push
xchg
cld
jne
pop
push
jle
aad
ret
xchg
cmpsl
cmp
xor
rcrl
repnz
mov
movsl
scas
pop
xchg
adc
leave
je
rcr
bound
inc
into
popa
cmp
jp
rcrb
sbb
test
push
clc
divl
aas
inc
add
xor
pop
subb
iret
int
decl
cmp
lds
push
loopne
pop
pop
xchg
and
pop
cltd
push
std
mov
test
cmp
lock
insb
test
dec
adc
adc
add
pushl
mov
into
and
mov
xchg
cmpl
cld
sbb
scas
out
imul
xchg
pop
xor
mov
pop
stos
adc
lret
jmp
outsl
leave
sbbl
fidivs
add
xor
cmpb
xchg
insl
dec
pop
xchg
mov
je
shl
pop
push
icebp
xchg
pop
add
ja
adcl
mov
das
add
pop
cltd
push
xchg
enter
ret
dec
lret
idiv
imulb
inc
addr16
mov
push
mov
aam
push
cmp
inc
in
icebp
test
ret
ror
lods
into
test
jnp
negb
push
pop
daa
push
jb
mov
lds
xchg
fadds
adc
dec
stos
cmp
rclb
and
lods
mov
xlat
sub
cmp
rorl
int3
ret
inc
out
adc
sbb
andb
shl
gs
aad
aaa
sub
and
and
inc
loopne
nop
xorb
push
mov
divb
pusha
adc
and
lock
loopne
nop
xorb
push
mov
divb
pusha
adc
and
lock
loopne
nop
sbbb
mov
bnd
pusha
fists
mov
adc
xor
mov
xorb
xchg
scas
sbb
mov
iret
fucomip
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
