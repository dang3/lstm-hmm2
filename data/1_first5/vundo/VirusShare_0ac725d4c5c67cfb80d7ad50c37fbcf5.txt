or
mov
sub
mov
mov
push
lea
inc
xor
mov
jmp
cmpl
jne
cmpb
jne
jmp
push
mov
mov
mov
add
jmp
ret
add
add
add
add
in
cmp
addr16
and
mov
add
mov
and
sub
mov
mov
mov
jmp
adc
outsl
call
addb
movb
movb
movb
movb
movb
movb
movl
jmp
push
jmp
push
call
jmp
push
dec
inc
call
push
addl
call
test
jne
xor
ret
ret
add
add
add
xor
xor
and
xor
mov
mov
mov
xor
mov
jmp
inc
and
xor
or
rol
mov
jmp
shr
and
lea
add
mov
add
sub
test
jne
jmp
cmpsl
loopne
lea
jle
add
rol
add
mov
jmp
lea
nop
movzwl
mov
mov
and
jmp
ret
shl
rol
shr
mov
pop
ret
add
add
add
test
add
add
add
cmp
jne
xor
mov
mov
jmp
rol
sub
xor
inc
mov
movzbl
add
mov
lea
add
mov
shr
ror
xor
mov
shr
and
add
jmp
movzwl
add
ror
mov
jmp
cmp
jne
and
add
add
jmp
call
inc
xor
mov
cmp
je
mov
dec
xor
mov
mov
test
jne
xor
rol
rol
sub
and
mov
mov
jmp
add
sub
mov
mov
sub
xor
mov
shr
lea
lea
cltd
and
add
jmp
pusha
mov
call
popa
jmp
ret
add
add
add
test
mov
jmp
and
mov
jmp
add
in
xor
insb
and
mov
sub
test
jne
push
jmp
leave
call
pop
dec
call
jmp
call
call
int3
addl
call
or
mov
push
jmp
push
push
lea
sub
add
shl
and
ror
mov
add
jmp
add
mov
mov
or
mov
add
dec
mov
add
add
xor
jmp
mov
jmp
add
add
fst
int
in
or
xor
mov
jmp
test
cmpl
lea
je
push
push
xor
sub
mov
sub
shr
test
jmp
call
test
jne
call
jmp
sub
mov
push
push
push
push
jmp
jmp
addl
push
jmp
push
push
call
xorl
nop
nop
nop
nop
nop
push
push
jmp
ret
call
int3
call
push
addl
call
mov
inc
and
and
mov
movzwl
jmp
sar
test
jle
mov
sub
sub
inc
shr
mov
test
jle
sub
and
rol
mov
lea
jmp
lea
sub
test
mov
jmp
add
jne
jmp
add
add
mov
test
je
push
push
mov
sub
and
mov
sub
jmp
xor
and
cmp
sete
mov
ret
add
add
add
adc
subl
xorl
movl
xorl
ret
add
add
add
mov
pop
add
jmp
test
mov
mov
jle
jmp
add
add
push
sub
inc
mov
test
je
mov
add
cmpl
je
push
jmp
mov
and
cmpw
jmp
mov
add
add
push
jmp
mov
sub
int3
cld
decl
pop
and
mov
mov
xor
sub
and
mov
sub
test
jmp
push
call
add
jmp
add
add
add
push
dec
mov
sub
mov
jmp
push
push
call
call
xor
inc
mov
xor
mov
jmp
mov
jne
add
ret
add
shr
dec
dec
mov
test
jne
pushl
ret
jmp
cmp
jne
xor
decl
jmp
jmp
mov
or
mov
mov
mov
jmp
add
sub
jne
add
cmpl
jne
pop
pop
pop
jmp
and
add
test
jmp
pop
ret
jmp
add
int
and
xor
or
sub
mov
sub
push
push
push
movb
movb
movb
jmp
push
push
mov
xor
test
push
mov
mov
jmp
sub
test
jne
ror
mov
ror
and
mov
movzbl
add
mov
lea
mov
mov
rol
mov
jmp
jne
add
ret
shl
mov
inc
mov
test
jmp
test
jne
mov
mov
pop
ret
add
add
add
xor
adc
or
decl
add
mov
add
test
je
jns
movzwl
jmp
sub
sub
sub
jne
mov
sub
subl
jne
jmp
add
mov
lea
ror
mov
shr
and
add
test
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
push
mov
xor
ror
xor
mov
sub
push
jmp
call
addl
lea
jmp
nop
jmp
call
jmp
add
out
clc
decl
test
add
add
add
add
hlt
jmp
add
push
jmp
jmp
nop
int3
pop
nop
dec
nop
leave
xorl
jmp
call
lea
call
mov
add
and
and
sub
mov
mov
test
jmp
add
add
add
call
jmp
nop
shl
mov
nop
push
nop
jmp
pushl
call
add
jmp
cmp
mov
mov
jmp
add
add
addl
sub
decl
incl
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
push
jmp
jmp
push
ret
xorl
push
jmp
jmp
push
xorl
movb
call
cmpb
jne
add
jmp
shl
add
mov
jmp
ret
shr
xor
or
or
mov
mov
push
jmp
call
push
subl
call
xor
xor
mov
or
mov
add
lea
push
jmp
pusha
fldl
push
clc
movl
jle
add
jmp
mov
jmp
push
jmp
mov
lea
push
jmp
inc
dec
sub
inc
mov
mov
push
jmp
call
nop
jmp
dec
call
addl
jmp
pop
dec
inc
je
shl
shl
mov
sub
test
mov
jne
movzbl
add
inc
rol
or
dec
mov
jmp
cwtl
pop
xchg
and
xor
xor
and
mov
nop
add
add
sub
jne
mov
test
jmp
push
push
call
push
jmp
jmp
leave
ret
inc
call
call
xorl
mov
call
push
jmp
nop
call
call
int3
inc
dec
leave
nop
push
dec
dec
addl
mov
call
jmp
stos
test
mov
add
add
add
rol
sub
mov
shr
jmp
add
ret
mov
xor
test
je
movsbl
jmp
add
icebp
and
mov
mov
sub
mov
add
mov
xor
sub
mov
jmp
ds
and
rclb
stos
mov
call
push
jmp
push
int3
dec
jmp
push
push
xorl
jmp
rol
add
xor
jmp
inc
add
rol
xor
mov
mov
rol
shl
mov
rep
movzwl
shl
mov
add
add
jmp
mov
and
shr
sub
mov
add
test
jne
jmp
in
cld
insb
mov
jle
jmp
icebp
rclb
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
sar
ret
push
shr
mov
sub
sub
add
mov
ror
mov
jmp
sbb
enter
add
call
add
jmp
adcb
je
jmp
mov
test
jne
jmp
sub
add
cmp
jmp
pop
add
and
ror
sub
mov
xor
add
jmp
push
jmp
ret
call
jmp
pop
leave
int3
xorl
lea
push
push
jmp
call
dec
call
push
call
xorl
push
jmp
push
jmp
call
addl
mov
movb
call
jmp
ror
add
and
inc
mov
sub
test
jne
movzbl
add
mov
lea
dec
mov
add
and
shr
mov
jmp
pop
icebp
iret
cmp
je
add
cmp
jl
pop
xor
pop
jmp
test
sub
loopne
add
test
je
xor
jmp
add
mov
les
ror
mov
mov
jmp
jl
sub
mov
or
mov
mov
mov
add
shr
and
and
and
mov
call
jmp
sub
jne
pop
pop
pop
rol
mov
pop
ret
add
add
add
ljmp
sub
inc
and
add
add
and
shr
mov
sub
test
jne
movzbl
add
lea
dec
inc
and
xor
shr
mov
jmp
xor
jne
add
ret
jmp
shr
and
add
subl
lea
jne
test
mov
je
jmp
add
xor
add
shl
shr
mov
movzwl
mov
add
dec
dec
and
mov
mov
pop
add
pop
sub
xor
add
shl
and
mov
pop
jmp
call
push
jmp
call
pop
inc
xorl
push
jmp
call
leave
push
int3
pop
addl
push
call
mov
shr
add
mov
call
jmp
lahf
xchg
call
push
subl
push
jmp
jmp
call
int3
call
call
subl
push
jmp
subl
call
jmp
arpl
mov
shrl
jmp
or
rolb
sub
push
xor
add
add
pop
mov
nop
nop
nop
nop
nop
pop
or
xor
or
and
ror
mov
pop
ret
add
add
add
roll
fldl
add
movb
jmp
std
mov
inc
inc
cld
add
add
lea
jmp
add
jmp
movzbl
and
add
or
rol
mov
mov
and
nop
nop
nop
nop
nop
add
add
shr
mov
mov
je
test
je
jmp
jmp
int
fisttps
rorl
xchg
loope
pop
test
lret
inc
mov
and
dec
shl
shr
rol
mov
mov
mov
cmp
jmp
fcomps
mov
shl
xor
add
xor
mov
sub
add
sub
mov
mov
jne
jmp
mov
push
jne
mov
add
pop
mov
mov
pop
mov
jmp
mov
dec
shl
add
xor
mov
mov
jmp
or
pop
push
cmp
or
or
or
mov
pop
ret
add
add
add
inc
and
add
add
jmp
nop
nop
nop
nop
nop
movl
mov
movl
jmp
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
call
cmpl
nop
nop
nop
nop
nop
jne
cmp
jne
call
test
mov
je
jmp
nop
nop
nop
nop
nop
lea
shl
add
shl
or
mov
sub
add
sub
mov
mov
nop
nop
nop
nop
nop
jne
mov
jmp
sub
jmp
sub
ror
mov
shl
mov
movzbl
shl
nop
nop
nop
nop
nop
add
add
lea
nop
nop
nop
nop
nop
add
mov
mov
nop
nop
nop
nop
nop
call
cmp
nop
nop
nop
nop
nop
jb
add
nop
nop
nop
nop
nop
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jae
nop
nop
nop
nop
nop
add
test
mov
je
rol
or
mov
sub
mov
mov
add
nop
nop
nop
nop
nop
sub
jne
mov
nop
nop
nop
nop
nop
mov
and
or
xor
mov
sub
dec
xor
mov
mov
add
inc
mov
movl
jmp
mov
mov
add
nop
nop
nop
nop
nop
add
mov
nop
nop
nop
nop
nop
movl
mov
cmpl
je
pop
xor
or
mov
sub
pop
pop
nop
nop
nop
nop
nop
xor
xor
inc
mov
pop
ret
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
jae
inc
jb
jbe
jb
sub
push
jns
gs
gs
jae
inc
popa
jo
jne
add
add
je
jb
arpl
jae
push
add
gs
je
inc
imul
add
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
jb
push
outsl
add
add
add
imul
js
add
adc
adc
add
add
add
add
add
add
mov
mov
add
mov
add
cmp
pop
bsf
xor
adc
jl
add
jecxz
addr16
push
jmp
add
ja
mov
xchg
xor
cli
cmp
aaa
or
cmp
cmp
cmp
cmp
xor
xor
xor
xor
xor
cmp
cmp
cmp
int3
ds
cmp
or
lahf
aaa
sbb
mov
aam
add
cmp
cmp
cmp
adc
adc
push
and
aaa
cmp
inc
aaa
mov
add
add
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
idivb
lcall
js
fnsave
cmp
jae
mov
jge
inc
push
ficoms
int
das
cmp
movb
hlt
div
div
mov
inc
jl
jle
jg
jp
daa
or
ja
cld
imul
dec
xchg
shl
add
xchg
mov
mov
stos
or
or
mov
jmp
xor
pop
pushf
imul
dec
add
pusha
dec
dec
push
mov
or
mov
sub
cmc
ret
mov
frndint
cld
adc
jne
mov
mov
and
dec
stos
mov
cmp
imul
sbb
inc
pop
lcall
push
adc
dec
xchg
testb
outsb
bound
test
mov
shlb
sbb
sub
test
mov
.byte
.byte
fld
inc
