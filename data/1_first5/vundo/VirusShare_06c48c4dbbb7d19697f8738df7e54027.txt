ljmp
push
xor
inc
dec
dec
dec
dec
dec
dec
pusha
call
sti
test
lret
jle
std
mov
sbb
jg
xchg
call
aad
test
add
lods
push
or
and
test
lret
mov
inc
int3
cmp
jo
xorl
fstl
or
and
mov
inc
das
lods
sub
jnp
or
pop
cmp
and
cmp
gs
pop
xchg
adc
or
or
cli
loop
popa
aas
fiaddl
sahf
or
fstpl
iret
pop
pop
enter
cmp
mov
push
jnp
and
mov
loope
add
js
xchg
inc
fdivs
jge
inc
lods
stos
mov
roll
add
mov
cmc
cmp
dec
fldl
cmp
lods
xchg
test
int3
or
jl
mov
inc
movsl
icebp
aam
cmp
sbbl
cmp
add
adc
add
decl
fmull
cmp
stos
xor
arpl
dec
sbb
leave
test
cmpl
fistpl
jo
nop
jp
sbb
mov
mov
insl
scas
push
pop
stos
test
jne
iret
push
lcall
movsb
cmp
xchg
inc
add
mov
cmp
inc
mov
jp
mov
dec
add
loopne
add
or
lahf
sbbb
sbb
inc
mov
outsb
pop
inc
in
mov
mov
enter
xor
mov
fucomip
or
cli
ds
mov
jp
sub
jg
xor
pop
pop
out
jno
out
pop
ffreep
xchg
fwait
loop
xor
stos
xor
add
pop
fwait
roll
xchg
ret
sar
push
clc
or
pop
pop
mov
pushf
test
negb
lret
inc
mov
imul
fwait
lds
rol
lahf
pusha
dec
xchg
push
sbb
sub
imulb
test
aaa
cbtw
jno
leave
imul
push
mov
negb
daa
mov
push
mov
mov
testb
stos
sub
out
cli
fsubl
push
inc
les
shl
sub
idivb
call
sar
icebp
mov
popf
fsubr
int
cmpsb
popf
jno
aas
push
mov
fstpt
popa
mov
and
imul
or
mov
xchg
xchg
decb
shlb
ficoms
push
ja
shl
jb
addb
and
pushf
jns
jl
cmp
pop
leave
cmp
js
pop
ja
fisttps
or
movsl
mov
shlb
pusha
aas
neg
jnp
in
stos
sbb
sbb
enter
cltd
data16
dec
andl
jno
sbb
jge
jecxz
dec
xchg
sub
xor
cs
inc
insb
jmp
shrl
push
sbb
bound
outsb
lahf
or
push
movsb
pop
mov
test
adc
dec
outsb
mov
enter
aaa
sub
rcl
and
cs
pop
mov
cmpsl
test
fisttps
add
xor
out
sub
iret
ss
sbb
insl
addr16
inc
mov
outsb
pusha
sub
js
mov
roll
xor
insb
test
pop
outsl
call
cmp
lods
rorb
frstor
shlb
lods
cmp
mov
mov
icebp
xchg
outsl
jne
cmp
out
in
fidivrs
jle
cs
xorb
repz
nop
inc
jo
jns
hlt
cmp
test
add
jno
xchg
cli
xchg
adc
int
nop
jns
aam
jl
ficompl
ja
push
push
mov
out
std
jne
js
lahf
shrl
arpl
out
jmp
jp
or
aaa
imul
fs
jmp
jge
pop
jmp
push
dec
push
je
or
je
sub
and
adcl
stos
loop
sub
into
xchg
inc
insb
xor
loope
cmc
pop
ret
sub
lock
test
inc
xor
jl
mov
and
add
jo
dec
lods
das
sti
adc
nop
cmp
repnz
shlb
fwait
dec
ds
scas
sbb
mov
jge
stos
data16
movsbl
test
int3
pushf
sbb
fists
xchg
pop
sbbb
jge
jmp
push
pop
sub
mov
andl
test
sahf
adc
mov
push
pop
in
xchg
inc
addl
dec
outsl
test
adc
adc
fnstcw
loope
xlat
xlat
adc
jne
loope
js
scas
push
sbb
loope
js
pusha
and
test
cltd
ss
cmc
bound
loop
fcomps
bound
mov
push
or
cli
xchg
loop
pop
xor
ljmp
cld
mull
add
ja
vmwrite
xchg
cwtl
ret
iret
inc
repz
dec
into
cs
lds
and
rcll
sbb
push
hlt
outsb
mov
lds
lahf
adc
xchg
testb
data16
test
pop
inc
shrb
imul
inc
pop
or
mov
add
scas
xor
cs
xchg
test
mov
sub
adc
dec
sarl
push
sub
xor
push
mov
in
cmp
sub
push
or
push
stc
jo
sbb
cmp
xlat
adc
add
mov
adc
fcomi
mov
mov
outsb
pusha
jb
movsb
imul
pop
outsl
imul
je
fsubrl
enter
popa
rcrl
adc
sub
cmp
push
dec
adc
aad
addr16
mov
out
jo
inc
lods
in
sbb
je
daa
mov
inc
je
mov
add
pop
and
fcoml
sub
add
scas
mov
outsl
xchg
leave
clc
push
xor
shll
mov
add
stos
ljmp
pop
dec
adc
mov
imul
loop
add
pop
sbb
mov
dec
not
out
jns
sub
js
hlt
adc
inc
or
into
mov
and
push
aad
daa
js
push
jne
into
and
mov
fisttpll
enter
or
push
add
jb
jno
push
and
pop
imul
jmp
or
xlat
push
add
cmpsb
aas
lret
int
mov
mov
int3
xor
out
es
xor
pop
cmpxchg
inc
jae
lahf
sbb
iret
enter
jns
into
sbb
add
xor
sbb
pusha
and
addr16
jl
xlat
jl
aad
mov
jg
jae
dec
mov
dec
add
lods
xor
or
sbbl
inc
or
lret
cmp
in
in
rcll
out
sub
mov
inc
mov
sub
or
xchg
pop
xor
stos
mov
jp
sbb
sub
xchg
xor
fsubrs
in
dec
lods
in
in
adc
cmp
mov
and
add
test
out
xor
rol
dec
shrl
xor
ffreep
repz
and
pushf
add
adc
stc
aas
popf
out
les
mov
fistl
fnsave
sbb
or
lods
daa
pop
std
add
out
xor
inc
aaa
shl
shll
mov
push
or
mov
and
les
js
or
mov
push
rdpmc
dec
lods
stos
jo
testb
out
rcrl
gs
ds
ljmp
adc
movsl
pand
inc
dec
outsl
xchg
mov
adc
sbb
gs
daa
mov
add
add
sub
add
sub
sub
inc
sub
dec
sbb
lcall
sub
es
shll
test
pop
and
loopne
and
mov
mov
dec
popf
mov
jecxz
sub
or
xor
pop
mov
mov
sarl
mov
and
mov
cmp
fdivs
push
xor
cltd
mov
push
xor
je
hlt
pop
push
into
cmp
mov
add
jno
clc
out
jb
sbb
enter
arpl
sub
pusha
mov
outsl
ret
mov
and
and
outsl
int
cltd
jmp
cmp
test
sub
imul
cltd
gs
cmp
imul
mov
std
add
pop
jl
outsl
xchg
ret
jl
mov
rorb
pop
adc
pop
jbe
jecxz
loop
loopne
and
or
mov
mov
add
mov
nop
jno
jbe
daa
ljmp
pminub
xor
popa
fimull
or
cli
push
ja
or
in
jns
js
lods
xor
data16
xchg
adc
cmp
cwtl
sbb
dec
call
jle
pop
bound
movsl
cmp
jg
xor
jo
nop
xor
mov
cmpsb
idiv
aad
aam
or
adc
mov
adc
fwait
es
popf
icebp
jg
icebp
ds
jp
adc
push
mov
lret
push
out
push
inc
fildll
insb
adc
cmp
mov
dec
cmp
xor
pop
int
and
or
enter
in
mulb
and
and
mov
imul
gs
outsb
das
out
inc
cli
jmp
cmpsl
adc
sbb
mov
add
btc
aaa
outsb
sub
les
adc
in
fwait
sahf
xchg
mov
mov
pop
cmp
loope
dec
inc
mov
push
push
push
jmp
jecxz
lcall
icebp
adc
int3
jno
daa
push
or
and
loop
and
loop
pop
fs
sub
lds
addr16
stos
pop
jb
xchg
test
xor
add
daa
pop
repz
test
das
jmp
fcmovne
dec
add
add
out
adc
mov
mov
xor
ljmp
xlat
test
pop
ss
fdivrs
lahf
je
cmp
comiss
mov
daa
repnz
nop
loope
mov
lds
xor
push
push
jae
lods
pushf
into
movsl
adc
lea
mov
mov
cli
jp
add
xor
arpl
and
xchg
int3
inc
lret
sbb
sbb
adc
jp
aas
addr16
mov
and
into
push
test
es
lds
jp
xchg
add
cld
mov
push
push
shrl
int
push
pop
sub
orl
push
stc
aad
daa
sub
push
mov
dec
in
fxch
sub
jo
mov
xlat
sahf
dec
xor
sub
movsb
or
or
mov
stos
dec
rcr
lret
shrb
dec
dec
loopne
mov
add
hlt
sahf
imul
pop
push
fistl
int
in
arpl
scas
fadd
ret
jnp
call
insb
cltd
push
cmp
push
cmp
fsubl
mov
cmp
lods
add
cmp
xor
sbb
or
insb
cmpsb
cwtl
in
test
test
out
sar
jae
mov
ljmp
icebp
mov
ret
dec
xlat
stc
push
iret
stc
xorb
loop
dec
int
jbe
cli
bound
addr16
clc
subb
mov
aam
cs
mov
jg
addr16
cmc
stc
ljmp
adc
mov
sub
add
xor
push
pop
in
lret
pop
adc
push
push
aas
pop
xor
jg
dec
sub
mov
mov
cmpsl
repnz
fstp
enter
mov
ja
jb
push
enter
out
pop
loope
or
outsl
loope
cmp
pop
fwait
cld
arpl
inc
test
inc
mov
hlt
sub
leave
outsb
lock
sub
lods
rol
sub
arpl
popa
sub
jle
aad
mov
out
and
pop
out
leave
js
imulb
mov
cmp
mov
and
imul
fnstcw
mov
mov
mov
in
mov
pop
dec
out
test
cs
call
aam
in
mov
adc
fdivrs
daa
das
popf
pop
mov
mov
popf
outsb
ja
add
xchg
cld
out
lcall
mov
push
push
bound
add
lea
jns
mov
sub
lods
in
sahf
dec
lds
cmc
and
mov
or
xchg
arpl
push
inc
mov
testb
test
inc
movsl
pop
adc
fnstenv
lahf
push
pop
ret
cmp
call
scas
add
adc
cmpb
push
push
mov
popf
ret
mov
lds
les
fcomps
outsb
pop
das
shlb
mov
sbb
add
pop
mov
in
imul
pushf
push
jo
mov
sbb
lods
iret
jb,pn
cld
fdivrs
hlt
testb
mov
pop
shr
js
cwtl
mov
ror
jle
fistl
mov
adc
mov
mov
jo
dec
ljmp
xchg
idivl
aas
incb
test
les
xor
adc
jbe
and
dec
mov
addr16
ror
pop
movsl
shll
sti
adc
sbb
mov
jmp
push
fs
sub
aas
into
dec
xchg
dec
lea
sub
cmc
xor
add
insl
cltd
loopne
andb
pushf
pop
inc
jb
leave
adc
icebp
ljmp
test
adc
sbb
cmp
call
mov
fsts
leave
fimull
xchg
pop
pop
mov
es
ret
mov
xor
stc
sbb
pushf
pop
mov
push
pushf
pop
cmp
lods
sbb
arpl
ret
in
clc
daa
mov
outsb
and
push
xor
dec
imul
fimull
pop
jae
les
mov
mov
fiadds
shrl
push
or
push
mov
adc
icebp
cmc
xor
int3
fcomi
shlb
das
mov
adc
insb
mov
outsl
pusha
aas
jg
stos
ds
adc
add
pop
pop
rclb
bound
shlb
enter
ds
xor
push
btc
shlb
mov
push
push
sarb
jmp
adc
loopne
int
adc
push
sbb
repnz
pop
mov
pop
mov
icebp
or
lods
xchg
mov
sbb
mov
sub
arpl
push
sbb
sub
adc
movsl
mov
test
fs
and
add
int3
sbb
js
add
xchg
push
icebp
jne
pusha
loope
in
push
test
jae
das
scas
ja
test
cli
in
adc
sub
xchg
fdivrs
pop
dec
or
dec
add
and
outsl
sbb
cwtl
sbb
lock
add
sbb
imul
mov
pusha
addr16
ret
enter
mov
addl
lock
push
inc
lcall
xchg
sub
jg
xor
xchg
lods
pop
in
nop
lock
adc
nop
addr16
dec
fstpt
lods
std
subl
leave
jg
repnz
out
mov
mov
movsb
out
dec
xchg
jg
pushf
cltd
inc
pop
imul
ljmp
lcall
addr16
xchg
cli
pushl
cmp
loopne
test
sub
dec
rcll
and
iret
mov
push
lods
stos
add
jg
mov
scas
lahf
lret
js
dec
out
pop
mov
jne
jns
andl
js
jbe
inc
cs
and
cmp
lret
pusha
mov
pop
xchg
or
out
sub
sub
call
arpl
stos
test
movsb
lock
and
mov
push
push
add
imul
pop
push
or
xchg
std
xchg
cmc
ror
mov
incl
rcll
hlt
jle
loope
and
leave
push
jmp
std
dec
cmp
lahf
mov
push
int3
ret
push
movsl
cltd
mov
lods
stc
enter
and
add
loopne
jecxz
dec
stos
lods
push
dec
add
sub
push
jae
jecxz
sub
xchg
in
or
and
faddl
ljmp
cmp
cmp
cmp
mov
or
fildl
sbb
cs
leave
push
adc
es
mov
ds
jns
jae
cmp
inc
xchg
pushf
std
js
jno
adc
fisttpl
divl
pop
repz
xor
shll
adc
mov
std
daa
push
push
push
stos
mov
adc
rcrb
add
loop
jecxz
repnz
inc
jne
or
dec
mov
out
sbb
fsubr
fldcw
cli
outsb
sbb
imul
sbb
stos
sub
inc
mov
mov
repz
leave
xor
repz
jbe
into
xchg
jl
lds
inc
or
cltd
adc
leave
or
sbb
stos
and
jae
adc
push
loope
pop
fists
xchg
mov
mov
and
push
dec
adc
insl
aas
lea
cmp
sub
pop
cs
subl
dec
dec
jnp
fsubrl
bound
mov
xor
xchg
cmp
jne,pn
sub
cmc
and
jmp
gs
fisttpll
jnp
jecxz
cmpb
xchg
ja
aaa
movsl
jo
scas
mov
adcb
lahf
jge,pt
jnp
sbb
in
loopne
dec
cmp
pop
daa
xchg
push
ja
jl
inc
jno
insl
cmp
clc
jne
lcall
xor
add
xor
cltd
popa
adc
jl
and
jmp
repnz
dec
popf
das
mov
fsubrs
std
xchg
sbb
pop
out
in
gs
pop
mov
loop
popf
cltd
sub
mov
insb
mov
jge
and
out
pop
psubq
popa
sbb
xor
in
xor
pop
fsubl
in
in
mov
insl
mov
movsb
test
sbb
sbb
sub
cwtl
repnz
loop
jecxz
sbb
dec
ds
jnp
mov
loope
stos
cmp
mov
sbb
mov
lahf
adc
xchg
lcall
adcb
mov
loope
jecxz
add
cmp
mov
nop
pop
push
cmp
sbb
mov
in
fs
scas
pop
int
mov
lds
cmp
mov
shlb
mov
dec
test
jno
shrb
dec
fadd
dec
or
add
push
int3
push
leave
shrl
mov
jecxz
inc
and
xchg
mov
repnz
jno
dec
mov
enter
push
add
mov
outsb
adc
aas
lahf
cmp
or
in
pop
es
xor
arpl
add
push
dec
xchg
fdivl
inc
cmp
pop
sub
jne
push
adc
movsl
inc
jg
jno
mov
cltd
rorl
push
or
pop
jb
aam
mov
inc
or
inc
mov
cld
lcall
sbb
loopne
repz
cmp
sub
gs
int3
or
add
pop
je
sbb
sbb
push
mov
pop
lds
jns
pop
rorl
or
les
jo
push
sahf
lret
cmp
or
ljmp
aad
add
aas
loop
pop
int3
xchg
xchg
jno
lret
test
mov
lock
movsb
xchg
lods
and
test
out
xor
xchg
mov
fimuls
dec
mov
movsl
lret
cmp
test
popf
shll
dec
stos
ja
icebp
clc
pop
inc
pop
inc
loope
jno
dec
stc
mov
test
in
lods
cmp
rcll
fcompl
push
ficoms
cmp
dec
sub
stc
sub
inc
xor
hlt
iret
mov
cwtl
push
xchg
loopne
fsubs
add
les
pop
add
loope
test
cmc
lret
and
ret
sti
and
pop
xor
push
mov
xchg
sbb
inc
xlat
xor
mov
inc
lcall
add
jne
daa
fstpt
jne
jo
xor
sbb
sarl
xchg
imul
pop
mov
ret
test
fimull
pushf
sbb
pop
adc
call
mov
mov
sbb
out
in
cmpsl
or
pop
add
sbb
mov
jle
adc
bound
into
mov
mov
adc
rol
scas
inc
fnstcw
inc
ret
sub
cltd
mov
stc
sub
sbb
movsb
push
stos
mov
xchg
mov
push
inc
or
or
xor
lret
fists
lods
jmp
dec
int
adc
jb
in
add
xchg
cld
movsl
jg
fstl
and
frstor
adc
fnstenv
stos
iret
pop
testb
jb
enter
mov
adc
fcmovne
shlb
outsb
add
sub
insb
inc
ret
arpl
movsb
jo
dec
out
mov
and
dec
lock
jmp
add
out
ds
dec
nop
mov
add
aam
or
cs
xor
lds
idivb
daa
jns
hlt
rorb
dec
or
dec
cmc
jle
push
popf
outsb
xchg
outsb
jp
repnz
sub
pop
adc
dec
mov
mov
leave
inc
filds
sbb
pop
sbb
adc
dec
xor
xor
sahf
nop
movsl
test
popl
movb
pop
pop
pop
test
loop
or
jb
push
pop
pop
popl
aam
sub
lahf
push
daa
and
pop
cmp
push
out
cmpsl
popf
mov
xchg
xchg
scas
stc
pop
in
test
mov
add
push
and
movsb
test
adc
andl
cltd
lahf
inc
popf
outsb
xchg
cs
cmp
testb
lahf
jp
pop
cmp
imul
dec
push
push
lock
popf
xlat
adc
adc
adc
out
add
push
hlt
mov
mov
mov
insb
cmp
fnsave
adc
std
xor
cmc
leave
fdivrs
or
cmc
dec
sarb
rcl
mov
xor
and
xchg
mov
push
and
out
lods
aaa
inc
dec
xor
hlt
aam
xor
cmp
ret
cmpsl
lahf
in
jne
dec
scas
sub
push
movsb
in
push
pop
or
scas
loopne
in
mov
iret
cmpsb
xor
fcomps
xor
arpl
xchg
mov
add
ficomps
inc
xor
repnz
and
pop
cs
xor
inc
mov
icebp
repz
jae
dec
test
and
jmp
jmp
inc
or
mov
mov
adc
lcall
sub
addr16
or
scas
jp
aad
lcall
clc
mov
and
loopne
add
pop
outsl
jo
jge
and
add
jle
stos
shll
dec
mov
scas
test
cmp
dec
lcall
jl
scas
inc
sub
icebp
dec
push
pop
movsb
mov
ljmp
pusha
mov
mov
int
jg
lea
jb
inc
iret
xchg
xchg
lcall
or
mov
push
insl
mov
cs
mov
sbb
pop
cmp
andb
test
mov
out
push
push
mov
jmp
sub
mov
xor
jle
cmp
jecxz
push
xchg
mov
mov
and
cmc
rcr
fadd
cmp
pop
daa
mov
lcall
test
popa
test
aaa
jae
std
repz
pop
imul
out
or
bound
in
mov
push
jmp
add
popf
mov
pop
xchg
ljmp
outsl
sarb
test
adc
mov
cltd
cmpsb
xchg
xor
popa
pushf
insb
lds
mov
insb
push
cmp
jo
jo
dec
mov
orl
dec
mov
into
push
fnstcw
test
ljmp
data16
mov
adc
bound
hlt
pop
js
jno
imul
cmp
xchg
add
sahf
pop
pop
das
bnd
fwait
out
das
insb
pop
add
push
jnp
adc
push
push
out
sbbl
sbb
add
mov
push
subb
cmp
sbb
lods
clc
das
lods
push
fbld
mov
out
xlat
cmp
and
int
or
cmpsb
pop
lret
or
cli
mov
clc
adc
mov
arpl
into
dec
add
mov
xorl
sbb
fisttpl
lret
jmp
bound
add
aad
ja
mov
sahf
popf
pop
pop
adc
lret
cltd
inc
xchg
repnz
push
test
push
imul
mov
mov
cld
xchg
inc
out
rcll
jae
mov
inc
cmp
dec
mov
push
fwait
nop
fs
xor
rorl
jecxz
add
mov
cmpsb
pusha
bound
or
inc
lods
sbb
pop
push
mov
xchg
or
mov
in
dec
fisubrl
lahf
ret
adc
pop
push
and
jns
cmc
push
cmpsl
adc
mov
test
sub
push
jge
jp
addl
pop
xor
or
sub
lret
cld
outsl
pop
jp
jp
lcall
dec
loope
xchg
jecxz
cmp
sbb
cmpb
decb
sbb
in
lahf
push
roll
push
cmpsl
ljmp
adc
mov
adc
into
pop
cmp
push
and
int3
or
dec
imul
sub
cld
jl
sahf
xchg
mov
add
fwait
icebp
or
stos
dec
lods
mov
lods
or
test
ss
into
inc
sahf
adc
jl
cmpb
enter
leave
fildll
inc
fs
ficoml
rcll
mov
xor
jge
inc
dec
fstpt
pop
xchg
fwait
mov
push
into
mov
lahf
ljmp
out
xchg
sub
sub
push
and
movsb
xor
cmp
xor
mov
push
push
pop
mov
xchg
sbb
dec
lret
xchg
cwtl
cmp
lret
cmp
lcall
icebp
ficompl
das
xchg
rcr
mov
fistpll
ds
test
aam
sub
loopne
mull
push
lahf
pushf
inc
in
cld
dec
fdivl
cmp
mov
and
inc
movsb
gs
aad
es
es
sub
lahf
mov
sbb
fwait
sbbl
xchg
sub
into
fsubr
repnz
int3
xor
scas
popf
ret
dec
add
and
icebp
stos
in
mov
movsl
xchg
and
mov
aaa
cs
lds
popa
frstor
mov
lcall
dec
push
pop
and
lods
mov
or
pop
outsl
ret
jnp
jb
add
js
mov
sub
lock
outsl
push
cmpsb
add
push
ret
mov
test
add
jo
jle
sbb
lahf
sbb
aas
lods
mov
mov
pop
mov
and
in
mov
test
add
xlat
mov
sub
out
test
pop
sti
xchg
insl
mov
mov
jns
cmp
sbb
pop
dec
pop
mov
sub
adc
sbb
mov
shl
and
stc
cwtl
or
push
xor
cwtl
inc
xorb
fistl
daa
mov
fildl
add
mov
stos
clc
outsb
int
add
fwait
sub
shlb
cmp
xchg
sbb
inc
mov
adcb
test
mov
and
data16
je
sbb
sub
mov
insl
inc
les
popf
push
adc
mov
jbe
icebp
lods
pusha
popa
sbb
jle
mov
fildl
fcompl
adc
ja
cvttps2pi
lea
mulb
push
push
jo
mov
mov
sti
cld
add
sub
push
jns
cmp
or
push
aaa
add
jae
in
gs
call
push
push
mov
and
lahf
test
jns
push
aam
sti
mov
and
in
jecxz
aam
dec
mov
pop
add
cmp
ret
popa
lret
jp
sarl
add
repz
fmull
cmpsb
mov
push
jl
xor
cmovp
test
xchg
mov
test
das
mov
sbb
pop
dec
scas
add
jb
movsb
cs
push
and
jge
pop
xor
pop
js
cmc
add
lcall
popf
jb
inc
pop
jae
mov
rol
mov
and
popf
push
fldt
cmp
out
dec
int3
aam
gs
mov
jle
dec
inc
push
jno
lea
daa
and
and
fcmove
jecxz
push
inc
xor
les
adcl
notl
loopne
sbb
dec
mov
mov
nop
jno
inc
or
call
shrl
dec
cltd
pop
lahf
lock
xchg
in
gs
push
js
decl
insb
pop
cmpb
loopne
xchg
sbb
loope
pop
js
imul
pop
lods
push
pop
ds
xchg
xor
or
sub
mov
es
sbb
mov
in
scas
out
test
add
inc
mov
push
xlat
mov
lahf
shlb
xchg
mov
adc
lahf
notl
into
push
cltd
add
jnp
pop
dec
arpl
fwait
pop
mov
and
cs
and
bound
pop
adc
out
aam
xchg
inc
push
test
jge
mov
push
fstpl
add
rep
mov
jge
lcall
mov
sub
and
fcoms
je
jo
push
iret
ljmp
and
pop
mov
or
enter
std
jl,pn
mov
test
cmp
jmp
fwait
mov
enter
pop
adc
add
and
fists
es
movd
bound
stos
push
push
mov
sbb
xlat
ret
in
push
jmp
andb
pop
fdivs
mov
jne
xorl
fisttpl
xchg
cmp
repz
mov
popf
pop
push
data16
divb
in
pop
sbb
scas
sbb
dec
pushf
adc
outsb
jle
in
adc
inc
dec
outsl
mov
in
pop
dec
or
shlb
stos
test
or
mov
into
test
scas
sub
add
mov
jp
dec
lret
xchg
jecxz
aas
jne
aas
cs
jg
push
add
xchg
jb
pop
dec
mov
jle
sub
arpl
fs
sti
out
loopne
mov
test
xchg
int
cmp
gs
or
jbe
mov
scas
cmc
daa
xor
cmc
jnp
xchg
ss
dec
add
fisubrs
sarb
iret
and
pop
es
add
mov
daa
mov
sti
stos
cvtps2pd
jbe
push
xor
and
out
adc
mov
jb
add
fnstsw
or
pop
push
xchg
mov
mov
push
scas
inc
cli
dec
int3
jp
pop
pop
mov
xchg
ret
xchg
sbb
inc
pop
mov
cmp
push
sub
loop
and
ficompl
orb
jmp
cmpsl
mov
icebp
stc
xchg
sub
dec
fs
int3
add
leave
mov
sub
loope
mov
jp
xchg
dec
adc
xlat
stos
xor
cltd
push
xor
or
insl
cmp
cmp
xor
js
sub
out
jmp
or
inc
cmpb
sbb
sub
js
add
mov
xchg
lds
ret
test
ret
popa
stos
loope
nop
mov
stos
mov
imul
inc
sbb
pop
jne
leave
sbb
mov
or
xor
sbb
add
jo
and
xchg
je
fwait
test
mov
popf
inc
inc
in
out
iret
mov
stos
loopne
or
jo
icebp
xor
mov
aad
push
lds
lahf
inc
sti
fcoms
bound
cmp
dec
dec
jno
or
out
into
stos
movsb
pshufw
in
loopne
icebp
fwait
inc
jge
cmp
xchg
xchg
xchg
loopne
in
dec
dec
push
loope
lods
push
mov
dec
setge
pop
mov
mov
cs
in
dec
out
mov
fstl
lods
sahf
test
and
xchg
xchg
ja
pop
insb
ljmp
sbb
bound
mov
arpl
sbb
loopne
es
addr16
fwait
mov
adc
sub
lock
icebp
jl
decl
mov
jge
loop
jbe
cltd
dec
xchg
ds
ret
lret
push
aaa
negl
cltd
clc
mov
cwtl
int3
fidivl
xchg
sarb
jnp
popf
nop
rcll
test
pop
jns
inc
ljmp
sahf
mull
push
jp
dec
int3
imulb
pop
imul
aas
inc
cmpsl
cmp
dec
jns
push
faddl
lahf
pop
je
jle
push
xor
inc
pop
outsb
testb
jae
lret
sbb
mov
jl
dec
hlt
icebp
add
mov
test
push
pop
xchg
aam
add
outsl
dec
xchg
imul
les
cmpsb
lea
sbb
or
mov
push
or
addr16
movsb
push
shrb
cltd
fdivrs
mov
enter
out
and
loopne
push
lock
loop
lret
lahf
jae
aad
stos
mov
pop
or
outsb
sbb
push
pop
adc
in
pop
sarl
mov
aad
dec
scas
fdivrp
sbb
std
sahf
loope
call
movsb
jns,pt
popa
aad
cmp
pop
add
and
lods
stos
lods
jbe
les
fwait
mov
adc
jecxz
jo
ljmp
mov
insl
sbb
push
mov
jp
xchg
shl
loope
pop
cmp
sti
outsb
add
bnd
or
jae
sahf
xor
add
jo
lods
fwait
push
xchg
scas
pop
add
inc
scas
lret
cltd
jns
lea
clc
dec
cmp
lods
test
lret
inc
enter
cmc
aaa
xchg
and
push
sahf
arpl
cmpsl
mov
aaa
xabort
stos
scas
adc
push
pop
test
clc
lea
or
ds
sti
jmp
js
or
pop
xor
dec
enter
pop
push
push
insb
aas
and
xor
dec
fwait
jp
sub
fwait
or
outsb
enter
mov
outsl
and
lahf
add
icebp
imul
pusha
cmp
stc
test
std
mov
jbe
or
arpl
dec
xchg
iret
nop
mov
outsl
xchg
mov
orl
imul
rcll
and
mov
sbb
in
adc
jno
inc
pop
nop
sub
xchg
fwait
pop
pop
mov
jno
not
out
sbb
dec
sub
dec
jb
xchg
mov
cmp
out
sbb
mov
into
nop
dec
pop
aam
fidivs
jmp
dec
xor
and
lahf
stos
xor
pop
jl
xor
cmpsb
dec
ds
decl
scas
cmp
mov
dec
cltd
add
push
push
mov
sub
movsl
cwtl
cmpsl
mov
xor
push
xchg
out
adc
push
int3
jecxz
jo
mov
mov
pusha
xor
lcall
icebp
das
push
jno
loop
sbb
push
outsl
adc
das
das
inc
xchg
icebp
dec
fisubrl
je
inc
or
sbb
orl
fistpll
mov
xor
icebp
icebp
test
dec
jae
movsl
cmpsb
mov
ds
mov
adc
add
cmp
sbbl
ljmp
and
add
decl
movsl
es
test
in
dec
out
pusha
adc
enter
mov
jge
idivb
bound
out
xor
mov
adc
es
mov
ficomps
add
loop
movsl
inc
loopne
sar
or
xchg
add
add
or
inc
pop
je
aad
call
sbb
das
mov
out
inc
mov
xor
xchg
push
out
inc
rcrb
pop
sub
cmp
aaa
js
std
or
xchg
daa
ds
and
test
cmp
push
dec
pusha
fwait
sub
sbb
imulb
jbe
rol
negl
call
popa
xlat
js
pop
scas
inc
adc
sbb
xor
addb
mov
aad
movsl
std
mov
enter
sbbb
test
inc
fadd
outsb
adc
aad
mov
hlt
adc
pop
int
arpl
sbb
add
cmp
sub
popf
int3
mov
aam
popl
xor
out
hlt
push
testl
add
adc
sub
sub
ds
shlb
pop
psrlq
or
inc
cmpsb
inc
add
in
xchg
and
addb
pop
clc
je
lods
pop
rolb
sub
mov
or
mov
les
pop
cmc
pushf
lret
jmp
jecxz
rcrl
or
or
or
push
pop
jnp
repnz
mov
sub
mov
je
xor
jle
dec
arpl
pop
mov
jge
and
ret
nop
adc
shl
iret
or
lret
aad
pop
aas
sbb
adc
inc
sub
sub
sub
rclb
imul
xchg
mov
popa
pop
mov
sub
sub
scas
dec
sub
movsl
gs
lods
dec
aaa
xor
add
mov
pop
in
arpl
test
or
push
inc
dec
shrl
mov
pop
jne
dec
clc
outsb
mov
xlat
into
jl
int3
out
call
call
out
push
imul
jno
inc
lods
cmc
sub
pop
xor
or
jmp
test
xor
jb
mov
sbb
daa
repz
dec
sub
inc
js
push
and
dec
pop
ja
dec
xchg
repnz
orl
pop
xorb
mov
pushf
pop
dec
or
cmp
push
mov
out
int
shll
sub
fs
stc
dec
adc
enter
cmp
push
mov
or
imul
xchg
imul
adc
mov
cmpl
and
dec
xchg
jle,pn
mov
dec
push
and
jne
bound
dec
sbb
roll
mull
stos
xchg
loope
sub
sbb
or
imul
insb
aam
arpl
jmp
push
leave
mov
inc
or
aaa
jmp
jl
dec
or
jae
jle
cltd
push
inc
pop
lds
cmp
sub
loop
enter
insl
sahf
push
cmp
in
rdmsr
inc
icebp
xor
es
inc
dec
push
cmp
mov
mov
cltd
push
and
int
subb
mov
pop
iret
sub
pop
js
jecxz
gs
lcall
pop
mov
xchg
jmp
mov
mov
fidivl
loope
notb
mov
cld
rolb
cs
data16
cmc
inc
loop
repz
xchg
aaa
fisttps
jns
test
les
sub
add
pop
pop
cli
mov
push
or
mov
clc
or
sub
fnstcw
jnp
fsubrp
and
xchg
pop
xor
jbe
fcomp
xchg
in
movsl
jno
rorl
mov
call
adc
mov
mov
popa
out
jbe
sbb
in
pop
jmp
rclb
shlb
push
push
sbb
mov
jno
push
rcrl
sub
sahf
push
mov
int3
jge
std
xchg
dec
xchg
sub
sbb
xchg
lret
imul
mulb
sub
mov
adc
clc
pop
ljmp
rcrb
icebp
push
dec
cltd
scas
pop
push
inc
dec
subb
lods
jle
movsl
or
jns
adc
pop
pop
push
jae
adcb
fcom
jae
sbb
outsb
cmp
arpl
mov
lds
xor
les
fidivrs
cli
mov
std
adcl
popa
leave
jle
xor
push
fisubl
leave
inc
sarb
icebp
or
push
cltd
mov
jmp
aaa
popf
mov
out
rcr
mov
scas
push
jne
push
pusha
cmp
fisttpll
rorw
add
je
pop
pushfw
mov
lock
subl
dec
imul
mov
mov
cli
push
rol
mov
data16
dec
in
lods
mov
sub
repz
mov
pushf
bound
inc
cmc
fstl
pop
or
push
add
or
sti
cmpsb
mov
icebp
cmp
push
stos
sub
ja
add
imul
pop
add
les
jg
push
xor
pushf
sub
lods
shrl
test
push
push
cmp
fdivs
and
ja
call
xchg
aad
fnstcw
aam
shrb
rclb
cli
cltd
rorb
mov
cltd
out
lret
xchg
xor
jbe
xchg
es
sbb
repz
fstl
dec
movsb
cmpsb
sti
jle
or
sbb
add
xchg
and
mov
lret
mov
ror
rcr
fsubrp
xchg
fimull
in
mov
adc
add
into
mov
cmp
push
sbb
je
movsb
dec
fnstsw
repnz
in
lcall
add
adc
inc
jmp
push
ds
out
mov
cwtl
add
orb
test
cmp
jbe
cld
jmp
addps
xchg
maskmovq
imull
pop
mov
pop
jns
adc
aaa
je
mov
xchg
inc
loope
pop
daa
jge
fucomi
nop
aaa
add
pop
push
pop
sub
mov
int3
rol
and
js
mov
jno
add
andl
xor
dec
ljmp
add
fldenv
mov
ljmp
inc
add
jnp
lea
clc
lock
jp
int
or
mov
and
in
push
call
mov
cmpsb
js
test
lahf
or
and
add
jl
mov
nop
ret
cld
pop
ret
cmpsl
inc
add
xor
cld
loop
jl
ss
push
mov
xlat
cmp
sbb
adc
ret
aaa
stc
into
or
jne
xor
insl
inc
test
pop
je
sub
inc
jmp
mov
sub
fwait
inc
pop
cmpb
add
outsb
sub
or
mov
gs
ja
fsubrs
jge
xchg
adc
push
fstpl
frstor
bound
or
in
mov
movsb
mov
cmp
sbb
sub
std
push
mov
lds
decl
pop
mov
xor
mov
out
mov
cmc
push
jge
sbb
adc
jg
mov
push
jae
sbb
cmp
dec
mov
xor
mov
in
add
pop
or
inc
andps
jne
ret
inc
lret
add
lds
idivl
push
rcll
loope
dec
in
aad
scas
sti
rcl
in
push
js
sub
mov
jno
mov
test
sahf
daa
repz
and
shlb
call
and
or
gs
daa
sub
xchg
jb
jne
sarb
push
pop
or
mov
test
dec
mov
stc
dec
adc
jnp
sub
mov
inc
std
or
xlat
dec
add
bound
aaa
inc
fsubr
xchg
scas
push
scas
cmc
pop
pop
add
add
insl
mov
cmpsl
mov
test
nop
push
sub
lock
sarl
mov
scas
mov
fstps
and
pop
cmp
add
test
add
sahf
das
mov
loop
add
jecxz
hlt
test
mov
pop
clc
push
cwtl
dec
mov
dec
mov
inc
or
jnp
inc
push
jl
fiaddl
cltd
into
mov
fwait
test
jo
sbb
lcall
mov
push
push
fst
xor
xchg
jae
mov
out
aad
scas
dec
add
inc
js
sbb
test
clc
push
jo
mov
push
das
cmp
js
and
enter
cmp
inc
xor
out
lock
imul
xlat
jmp
hlt
lret
nop
adc
jno
add
and
aaa
test
adc
pop
fildl
ds
rclb
les
dec
sbb
in
sbb
subl
and
pop
aam
jo
push
frstor
fists
dec
fs
dec
movsl
nop
push
inc
divl
movsb
gs
dec
jo
jl
clc
cmpsl
pop
xchg
popa
in
ret
push
mulb
xor
inc
xor
repnz
cmpsb
sub
cmp
mov
xor
ficoms
insb
cs
nop
xchg
testl
or
repz
call
cmp
std
mov
jns
pop
mov
repnz
adc
mov
mov
es
adc
rcrl
push
lods
popa
pop
nop
push
push
inc
sbb
nop
mov
sub
add
ficompl
cmpsl
xor
push
shll
push
xor
push
leave
lea
push
out
add
stc
aas
fimuls
inc
rclb
outsb
push
pop
xlat
into
push
pusha
leave
in
fimuls
jmp
xor
pop
ljmp
cmp
push
pusha
dec
and
test
std
xchg
mov
push
mov
lods
loope
fstpl
push
cmp
xchg
in
inc
push
sbb
push
cmpsl
movsl
in
dec
and
pop
sahf
pop
cld
fisttpl
dec
das
mov
fnstenv
imul
pop
jo
jb
sub
sbb
in
fcmovbe
loope
lahf
push
fstps
cmp
aaa
xchg
dec
dec
add
jg
rcrb
enter
add
jecxz
imul
je
movsb
stos
aas
cmc
push
aaa
test
les
dec
fldenv
dec
cmp
adc
imul
cmp
xchg
iret
push
mov
adc
les
jp
xorl
pop
mov
fnstenv
xor
stc
lret
cmp
fsubrs
das
jae
sbb
sbb
cmpl
cmp
cld
minps
push
inc
pop
es
cmp
idivb
scas
mov
sub
mov
adc
xor
je
xchg
inc
xor
sbb
sbb
cmp
loopne
inc
rcll
jb
jnp
daa
clc
out
sbbl
lret
leave
daa
xchg
sub
pop
cmp
clc
or
push
or
ja
and
cmp
xlat
ss
orb
xor
cmpsl
pop
scas
popf
push
jmp
push
out
data16
jns
bsf
jmp
je
pop
jns
fisttps
sbb
or
mov
fdivl
out
or
jns
mov
mov
and
cmp
mov
mov
push
dec
xlat
fisttps
sarb
mov
out
and
jmp
sti
adc
ret
idivb
mov
in
jnp,pt
sbb
pop
fidivrl
rorb
js
aad
div
pop
rcr
mov
mov
adc
pop
int
adc
mov
jns
sarl
cmp
mov
aaa
jge
testb
sub
xor
shl
mov
jno
sub
shrl
cmpsl
lahf
jno
out
dec
lret
cmp
ret
es
mov
das
hlt
stc
ret
xchg
fstpl
in
jp
jne
dec
lcall
mov
xor
xchg
mov
and
dec
jg
xor
xor
repz
pop
stos
rclb
pop
icebp
pop
lods
xlat
sbb
dec
mov
add
mov
pop
fldt
cmpsb
popf
sti
jmp
std
cs
imul
test
inc
shll
push
or
sub
adc
movsb
dec
mov
shrl
push
inc
dec
mov
or
dec
lret
pop
adc
push
or
jle
mov
int
jae
into
scas
test
sbb
ficoml
xchg
repnz
mov
test
and
arpl
out
and
cs
sbb
ljmp
sbb
xchg
call
lret
stos
jb
shl
js
lods
pop
or
cmp
dec
in
pop
cs
hlt
xor
repz
mov
mov
push
push
outsb
pop
jl
icebp
and
xchg
les
imul
fmuls
call
daa
movsl
stos
pop
js
inc
imul
movsl
lds
mov
mov
lahf
sub
js
mov
jno
cmp
xor
stos
adc
adc
push
mov
pop
lcall
dec
jno
arpl
dec
jle
in
mov
imul
and
push
sbb
jg
pop
xor
sub
pop
cld
and
xlat
jl
xchg
push
stos
nop
cmc
arpl
mov
js
xchg
pop
sub
xchg
fcoms
test
mov
and
rolb
std
iret
mov
out
fldcw
dec
clc
adc
sub
push
xor
aam
jmp
pop
mov
pop
rcrb
push
lock
and
jecxz
xchg
and
add
shll
and
push
sub
clc
sarl
mov
cmc
outsb
or
jns
fdivrs
es
mov
rcrb
inc
int
add
and
cmp
add
mov
cmpb
add
pop
inc
in
lds
or
jmp
dec
mov
int3
xor
orb
pop
or
arpl
add
add
add
mov
pop
adc
pop
int3
hlt
mov
or
push
xor
sub
cmc
insb
gs
in
jne
fcompl
out
push
fnstenv
js
mov
ret
fadds
jge
int
sub
stos
repz
fmuls
dec
movsl
stos
dec
push
mov
popa
push
push
outsb
lea
mov
cmp
test
pop
addr16
pop
inc
insb
fdivs
test
in
pop
push
rclb
loopne
insb
xor
and
and
xchg
sahf
and
movsl
dec
xchg
ljmp
dec
jle
cwtl
stc
mov
and
loope
leave
sub
dec
inc
or
add
insl
add
xor
mov
or
pop
cmpb
sbb
test
enter
dec
mov
jge
pusha
loop
or
aas
or
idivb
and
popf
int3
out
jmp
sub
fisttpll
mov
call
cmp
ret
adc
mov
cs
andl
adc
adc
movsb
mov
daa
pop
adc
xor
nop
lods
pushf
inc
mov
imul
dec
pop
scas
icebp
xchg
fisttpl
push
ljmp
test
dec
popa
cltd
pusha
and
aaa
xor
sbb
and
in
cmpl
jnp
and
adc
out
xchg
lock
pop
xor
pusha
or
fisubs
and
cld
mov
enter
popa
mov
cmp
in
addr16
or
jno
cli
xchg
gs
inc
sahf
daa
loop
or
in
xchg
sub
cltd
xchg
notl
dec
das
xchg
push
mov
dec
add
loopne
mov
std
inc
mov
and
jnp
push
pop
or
cmc
aad
pop
xchg
or
mov
add
fmuls
pop
lods
jmp
subl
test
or
inc
mov
dec
test
movsb
pusha
inc
inc
ljmp
add
sub
outsl
xchg
movsb
nop
sti
add
repz
lcall
dec
mov
jmp
pusha
xchg
mov
xorl
insl
and
and
push
cltd
mov
daa
xchg
xlat
inc
gs
pop
aas
dec
lea
inc
push
push
add
adc
mov
lahf
mov
sbb
sub
or
scas
mov
xchg
xchg
shrl
dec
dec
out
pop
hlt
imul
jge
pushl
cmpsl
push
fidivrl
jecxz
gs
adc
pop
fadd
leave
stos
lds
loop
hlt
test
aad
sub
bound
movsb
adcb
mov
mov
jnp
lcall
xor
enter
sbb
and
push
mov
dec
leave
das
mov
or
iret
jae
and
fisubrl
mov
xchg
popa
sbb
cltd
rcrb
xchg
push
adc
jno
mov
add
xchg
lret
sarl
inc
or
mov
mov
add
adc
push
xchg
cld
xchg
sar
dec
movsl
inc
inc
pushf
push
pop
sbb
mov
jnp
inc
dec
mov
jne
in
cmc
or
imul
lds
inc
mov
xlat
xchg
jl
jl
push
fisubs
xchg
xor
cmp
je
xchg
inc
mov
out
out
in
rclb
imul
pushf
pop
mov
shrb
sub
cmp
popf
lcall
fsubs
mov
inc
loopne
es
stc
pop
mov
and
popa
push
cld
jb
cmp
inc
push
pop
xchg
out
mov
daa
pop
add
enter
mov
test
lds
push
pusha
adc
jns
sub
ljmp
xor
sub
cmp
push
mov
pushf
jl
sti
rcrl
jo
sub
aad
push
ja
xchg
mov
sub
lret
mov
test
sbb
jl
xor
imul
in
into
imul
js
lock
push
mov
cmp
push
stc
xchg
pop
sbb
fdivrl
fcomp
iret
jecxz
adc
pop
pop
lahf
lods
rcr
jle
xchg
test
xchg
sahf
rcrb
mov
ljmp
sbb
mov
je
shl
ljmp
les
in
jne
arpl
ds
sbb
pop
jno
sub
jge
pop
jg
repnz
andb
adc
js
cwtl
outsb
nop
stos
xchg
test
xchg
xchg
into
pop
sub
dec
or
adc
cmp
mov
mov
incb
popa
push
xor
scas
mov
dec
addr16
rcrb
adc
and
lret
jbe
stc
jne
clc
adc
cmp
sar
rolb
call
mov
sarl
or
negl
js
rolb
push
inc
mov
dec
mov
gs
dec
test
fs
arpl
pop
jne
scas
sub
push
movsl
and
adc
xchg
dec
mov
add
mov
mov
xchg
mov
lods
mov
clc
cmpsb
sbb
bound
xor
les
addl
dec
xchg
push
jg
cmp
xor
mov
lret
ret
call
add
push
mov
lods
jnp
mov
shl
or
inc
test
roll
setb
daa
push
dec
cmpsb
iret
mov
pop
push
mov
pop
das
ljmp
sbb
sub
lret
or
pushf
cltd
outsl
jbe
gs
xor
adc
push
mov
or
fdivrl
mov
out
add
lods
push
push
pop
or
xchg
dec
mov
mov
outsl
jle
mov
in
mov
repz
jmp
jecxz
jno
out
jecxz
sbb
scas
add
cmp
out
std
inc
in
inc
mov
fsubl
push
lret
cltd
mov
outsb
lock
sub
iret
fcmovne
mov
ret
gs
and
addr16
inc
inc
xor
xlat
ss
sti
outsb
daa
nop
filds
and
mov
stc
xor
loope
mov
aaa
aas
inc
cmp
mov
ds
out
int3
cmp
adc
push
push
arpl
cmp
pop
adc
into
jmp
xchg
imul
cmp
xchg
bound
jno
push
pop
inc
or
push
fsubl
xchg
adc
lea
xchg
aam
test
es
ret
xchg
idiv
movq
dec
mov
ret
bound
sarb
lret
xor
xlat
mov
xchg
enter
xchg
add
jecxz
in
shrl
int
inc
rdpmc
push
sub
dec
test
decl
loope
sub
lods
jb
clc
jecxz
push
cmp
sbb
test
push
fsub
data16
sbb
xor
sbb
outsb
lock
lea
push
leave
mov
sub
test
mov
sbb
push
sbb
arpl
or
fs
leave
or
lock
arpl
popa
movsl
test
push
jp
dec
lds
jae
jp
mov
je
xor
adc
pop
rclb
into
jb
stc
nop
bound
loope
mov
push
cmpl
lret
idivl
sarl
in
mov
lock
dec
mov
clc
scas
mov
mov
repz
fidivl
les
adc
cwtl
ret
int3
inc
shll
orb
push
xchg
mov
stos
data16
scas
mov
sbb
icebp
sub
xor
mov
dec
pop
daa
mov
cltd
mov
push
in
testb
ljmp
dec
sub
pop
mov
pop
fcom
mov
sbb
insl
shll
jnp
push
data16
sbb
je
push
std
and
fwait
dec
or
adc
and
sbb
insb
repz
cmp
push
mov
lods
enter
push
cmp
cmpsl
les
sar
lret
stos
daa
dec
imul
mov
enter
lahf
popa
leave
lods
fstps
push
inc
popf
aam
jae
xor
repz
fisttps
test
mov
mov
push
loop
mov
jbe
scas
arpl
dec
call
sub
adc
mov
add
repz
movsl
popf
xchg
lahf
and
int3
neg
cmc
jae
test
inc
inc
pushf
mov
cmp
sub
inc
or
dec
pop
lds
mov
mov
or
inc
push
xlat
mov
test
jge
loopne
ja
fistps
aas
mov
add
fisubrl
cmpb
pop
lahf
add
out
mov
jno
cli
pop
fistpll
inc
sbb
push
int
push
jne
sub
push
imul
sub
imul
fistpll
push
mov
add
pop
xor
shll
xchg
mov
mov
push
scas
out
lahf
add
js
add
addr16
push
pop
neg
jl
dec
iret
cld
int3
dec
dec
or
cli
jo
dec
push
pop
xor
mov
insl
or
mov
lods
ds
mov
cli
add
fwait
ds
xor
inc
sbb
icebp
call
andl
cmp
add
xchg
imul
scas
jne
mov
mov
mov
pop
or
mov
mov
gs
mov
andb
les
int3
js
das
jbe
xchg
jbe
mov
fcmovu
daa
pop
sub
repz
jbe
lahf
push
daa
int
sub
sti
pushf
mov
ds
movsl
cmp
fsubl
rcll
adc
xchg
mov
or
add
cmp
lock
jns
lea
or
out
mov
jge
mov
xchg
in
out
push
clc
pushf
dec
mov
jnp
lds
mov
sbb
movaps
shrb
jno
inc
test
pusha
pop
and
mov
dec
cmp
push
inc
push
aad
cmp
jne
xchg
pop
inc
or
xor
popf
insb
fwait
push
cmp
adc
add
outsl
jmp
or
xchg
jno
push
sub
pop
stos
pusha
dec
subb
out
xor
insb
sar
inc
push
dec
ret
ljmp
ja
nop
add
scas
mov
popa
lret
inc
mov
push
sarb
mov
inc
sbb
insl
loopne
out
add
out
mov
inc
ss
arpl
in
mov
xchg
test
mov
inc
bound
rclb
jbe
xchg
jmp
pushf
pop
mov
and
shl
ret
cmpsb
in
lock
mov
jmp
daa
or
mov
arpl
pop
jmp
imul
pop
add
in
or
dec
push
xor
fstps
jmp
push
nop
mov
lret
stc
cltd
sub
sub
jge
aaa
gs
imul
add
xor
xor
inc
imul
cmpsb
or
sbb
jb
mov
cmp
sub
pushf
xor
and
ret
imul
stos
xlat
jbe
and
fbld
pop
mov
cmp
xchg
and
push
imul
pop
jb
mov
jmp
mov
dec
lods
lods
mov
pmulhuw
sahf
das
insl
dec
gs
shl
cmp
dec
ss
cmpsb
aad
mov
push
jmp
loopne
icebp
lds
mov
inc
shrl
inc
push
cmp
jnp
repz
mov
dec
sub
mov
nop
cmp
adc
stos
loope
jae
cmp
pop
es
pop
adc
aam
or
and
sbb
push
add
sbb
xor
cmp
or
das
dec
cmp
push
add
fdivr
test
mov
push
mov
addb
add
xor
xchg
mov
jmp
jle
icebp
enter
aaa
cmpsl
fwait
add
sbb
in
and
sbbl
movsl
aas
or
inc
addr16
xor
push
ljmp
out
int3
pop
xor
sbb
mov
mov
mulb
xchg
inc
inc
addr16
mov
test
adc
xchg
aas
ljmp
xchg
gs
or
mov
cmpsl
mov
mov
inc
mov
inc
jbe
insb
and
in
insb
pop
sbb
in
and
insl
push
jae
out
bound
xor
dec
js
mov
dec
js
add
xor
jmp
lods
sub
sbb
pop
cmp
xor
in
xor
or
insb
or
mov
and
lds
adc
xchg
jae
negl
es
lock
pusha
test
jns
ljmp
jnp
push
outsl
mov
mov
sar
sbb
sahf
lods
stc
jnp
xor
jle
ds
push
cmp
mov
adc
ss
imul
lcall
adc
movsl
or
jb
fimuls
xor
fimull
add
mov
mov
fdivs
pop
and
aas
in
rclb
push
adc
pusha
sahf
mov
push
jbe
icebp
xchg
jb
leave
inc
pop
outsb
sub
roll
dec
loop
ss
movsl
outsl
imul
sub
and
cmp
pop
pop
lcall
pop
sub
xchg
sbb
xor
and
mov
lds
inc
dec
inc
imul
sti
cmp
sub
sub
int3
mov
in
ret
xor
daa
mov
dec
repnz
ret
scas
inc
sub
pop
and
inc
sti
xchg
pop
call
jbe
xor
push
push
roll
push
and
ret
sub
popf
lcall
push
lock
sahf
fisubrs
push
sbb
insl
pop
xor
pop
cmp
nop
inc
sbb
mov
cmpsl
aas
das
in
popf
dec
sbb
xchg
aam
or
mov
pushf
xchg
bnd
lret
fwait
push
fimuls
push
call
mov
xor
or
cmpl
sbb
add
jmp
inc
pop
or
movsl
cmp
popf
fbstp
in
or
inc
sbb
mov
out
xor
in
pop
jnp
iret
out
xchg
push
and
push
mov
or
inc
ret
mov
sub
xchg
ds
sbb
mov
and
outsb
or
and
icebp
mov
pop
or
add
sub
stc
inc
jl
dec
adc
clc
shll
xchg
xchg
nop
xchg
jae
fcmovu
mov
mov
int3
or
stos
jecxz
cmp
aaa
js
outsb
addr16
xchg
push
in
or
push
jae
mov
sahf
les
ja
test
es
int3
repz
stc
xchg
and
xor
arpl
push
negl
fcomp
les
lret
cmp
lcall
pop
rorl
pop
cld
fistpl
out
je
add
lcall
je
rcr
mov
scas
xor
jbe
into
push
xchg
lret
test
loope
sub
add
gs
ja
fadds
jne
std
xor
clc
lahf
sub
jge
mov
popf
add
pushf
lahf
ss
jge
sahf
and
adc
pop
and
lea
shr
fwait
sub
icebp
lret
sbb
adc
shr
rol
hlt
ret
pop
add
jmp
fcmovu
jne
or
xchg
in
fs
insl
or
imulb
pop
int3
pop
cmp
ficompl
fcmovnbe
lret
jne
stos
cltd
scas
push
in
loopne
mov
test
movsw
mov
pop
mulb
aaa
ja
aas
mov
push
lods
xchg
add
add
jbe
adc
lock
movsb
ret
jmp
sbb
nop
loope
aas
lahf
out
fists
roll
mov
into
cld
lret
int3
inc
mov
push
sub
adc
addl
orb
nop
or
std
push
sti
xor
mov
and
push
iret
adc
flds
popf
sarl
sub
sahf
cli
fstpl
jns
in
add
leave
ss
imul
and
dec
sbb
dec
xorl
aas
std
hlt
sbb
inc
sbb
cli
in
jle
push
stc
lahf
cmp
mov
out
add
pop
pusha
test
aam
sub
jecxz
push
jnp
std
outsl
repz
aam
mov
push
sbb
push
adc
pusha
lock
dec
mov
clc
cmp
imul
and
orl
dec
test
loopne
daa
cltd
lods
and
gs
or
cmp
iret
lods
cmp
shll
cld
mov
xchg
xor
xchg
movsl
lds
int
fldl
xor
clc
mov
cwtl
iret
enter
jae
xlat
push
or
pusha
test
xchg
lret
sub
xor
stc
rolb
loop
dec
push
lock
xor
gs
xchg
jecxz
stos
repnz
sub
adc
push
mov
and
inc
and
xor
clc
xor
pop
daa
jae
les
push
xchg
cwtl
scas
inc
add
jg
pop
add
jno
dec
push
xor
mov
fldcw
test
orb
lds
in
jp
dec
dec
les
addl
cmp
test
or
mov
mov
movsl
add
xchg
enter
jg
add
nop
sub
aam
inc
movsb
aam
stos
test
das
clc
push
inc
xchg
xorl
xchg
cli
adc
cmc
test
mov
lret
xlat
leave
out
push
stc
sbb
pusha
pop
jnp
sub
jge
or
out
sbb
inc
mov
jle
ret
cmp
push
out
mov
out
jp
inc
add
mov
lret
nop
stos
cwtl
out
xchg
out
outsl
xchg
popf
mov
arpl
cld
sahf
jnp
repz
imul
repnz
ja
or
arpl
pop
mov
dec
stos
jl
push
sahf
daa
jnp
ret
mov
pop
and
sbb
lock
jns
or
rolb
aaa
pop
or
dec
jmp
mov
xor
xor
pop
dec
jns
lods
sub
inc
ret
lock
cmp
mov
and
popf
das
inc
leave
sahf
loope
add
mov
xchg
jne
sbbb
push
sbb
test
stos
loope
lret
xor
mov
mov
pop
jno
in
inc
in
ds
sbb
xor
mov
jecxz
out
stc
xchg
fstps
lahf
pop
jno
rorl
inc
inc
and
jnp
pop
mov
pop
ds
insb
mov
xor
pop
repnz
push
in
jge
and
xor
inc
push
mov
xchg
jmp
dec
add
pop
pop
jno
mov
hlt
out
movsb
inc
and
push
in
jne
and
xor
std
fdivl
mov
jmp
add
sub
dec
xchg
ljmp
rclb
pop
sub
cmpsb
sbb
test
out
pushf
mov
scas
mov
add
cs
ds
adc
ret
filds
xchg
rol
jp
jo
in
mov
sub
loop
es
sbb
outsl
rcll
movsl
sbb
call
into
sub
adc
clc
fwait
lcall
roll
push
or
cmp
fldenv
adc
xchg
pop
shlb
cltd
jo
loope
adc
call
add
pop
jmp
or
lods
xchg
mov
loop
xchg
xor
cld
out
or
aaa
aaa
jmp
sub
mov
mov
out
outsb
dec
push
and
faddp
gs
fiadds
jno
add
insb
lods
cmpsl
test
sbb
mov
inc
ret
and
jge
in
xchg
dec
and
mov
rcrb
arpl
into
rcrl
jb
pop
sub
insl
push
mov
pusha
inc
dec
scas
outsl
mov
push
cmc
rolb
add
inc
setg
push
push
pop
cmp
and
and
push
or
std
pop
xor
rep
jno
add
push
xchg
in
cld
mov
dec
and
xchg
fs
jecxz
xchg
or
imul
adcb
dec
mov
outsl
xor
xchg
push
inc
ret
cmp
pop
pop
jmp
hlt
in
mov
mov
sbb
sahf
lcall
push
rcrl
aaa
fildll
jno
xchg
bound
jo
jne
inc
hlt
add
outsl
jne
bound
lods
xor
mov
add
cmp
fcoms
and
shlb
ret
pop
xor
mov
in
lea
test
and
mov
bound
jmp
sub
sbb
pop
mov
pop
xor
aaa
call
in
jo
fadds
fldenv
jae
loop
test
inc
movntq
add
sti
loopne
mov
lret
push
clc
nop
mov
push
cmp
loopne
shrb
stc
stos
int3
cwtl
out
or
inc
stos
jp
data16
cmp
fists
and
fsub
jne
in
mov
icebp
xchg
push
insl
mov
inc
leave
shl
popa
aas
add
in
fildll
sbb
adc
push
dec
adc
and
jg
lea
mov
rcr
out
pop
xor
cmpsl
mov
adc
or
xchg
jmp
xchg
xchg
into
mov
jl
jbe
push
sub
les
adc
mov
notl
and
fcoms
xchg
cmp
jmp
ret
nop
mov
aam
enter
fs
inc
jg
in
pop
movsb
and
cmp
inc
or
push
mov
push
dec
sub
aaa
cwtl
cmpsl
aad
ret
imulb
mov
notb
sbb
mov
mov
sti
dec
fistps
dec
sbb
ret
sub
loope
test
xchg
mov
aas
jne
jno
cwtl
aad
add
jae
stc
hlt
add
ret
sbb
push
ficoms
dec
xor
cvttps2pi
ja
and
or
and
jb
in
cmp
out
in
xchg
and
mov
in
dec
add
cmp
or
push
xor
ss
cmc
push
mov
push
xchg
and
xor
cmpsl
xchg
sub
dec
fidivs
aad
push
imul
adc
pop
imul
test
ficompl
mov
mov
sub
inc
scas
pop
fisttps
in
ret
out
lret
inc
mov
arpl
lcall
test
add
dec
cli
mov
fwait
or
es
das
iret
adc
loopne
arpl
cmp
pop
iret
adc
das
popf
fldcw
dec
mov
dec
push
aam
lods
adc
inc
inc
push
mov
daa
dec
test
rclb
push
mov
data16
pushf
fwait
and
pop
pop
add
lods
dec
repz
lds
jo
fmuls
int
push
inc
xor
add
in
lret
mov
fdivl
out
in
cli
hlt
lods
adc
rcrl
pusha
shrl
jno
inc
jl
sub
and
jne
imul
into
iret
mov
dec
sbb
sub
sbb
and
adc
lcall
xchg
jg
mov
lods
add
push
mov
dec
pop
insb
push
gs
inc
dec
and
jl
mov
popf
mov
mov
lret
mov
push
lock
jbe
push
call
cmpsb
loope
jnp
jo
or
mov
mov
in
fidivl
mov
or
sbb
gs
ja
pop
mov
sbb
bound
jmp
jge
cmc
daa
in
and
call
jg
xor
mov
ss
out
jp
gs
mov
push
add
add
fdivl
out
pop
push
lods
cmpsl
mov
mov
mov
mov
sub
xchg
push
xchg
aaa
loope
test
pushf
pusha
daa
xlat
rcrb
fmull
push
movsb
dec
push
inc
or
ficoms
push
xor
and
cmpsb
add
push
xchg
push
mov
lock
roll
aaa
mov
testl
in
xchg
mov
push
cmpsb
stc
outsl
add
popa
jae
cmp
cmp
inc
add
imul
jae
mov
adcl
nop
jge
test
scas
ljmp
sbb
mov
int3
lods
lock
fiadds
ret
int
mov
cmp
xchg
jb
push
out
cmpsl
mov
fmul
xchg
or
sbb
cwtl
wbinvd
icebp
push
jl
jns
cwtl
jo
insl
or
insl
pop
popa
aaa
cmc
jo
xor
nop
ret
push
adc
add
int
les
outsl
imul
sbb
push
mov
loopne
les
xchg
out
sub
not
ret
imul
les
jge
pop
push
popa
aaa
daa
xchg
sbb
add
jp
xor
xor
mov
imul
pop
cltd
xor
jl
push
into
and
js,pn
test
jp
lock
testb
andl
stc
xlat
imul
mov
inc
clc
lret
jne
lods
js
ljmp
imul
and
adc
adcl
xor
and
adcl
movsl
mov
mov
sbbb
rcr
jg
cs
test
hlt
pop
mov
fstpt
bound
xlat
xchg
sti
mul
xorl
mov
aad
jbe
mov
outsb
sbb
test
jmp
aas
lret
adc
cmp
daa
dec
xor
sub
push
xchg
dec
lock
iret
stc
and
lahf
jmp
xorb
jo
xchg
pop
inc
gs
scas
pop
ret
ds
fdivs
lds
ljmp
outsl
cmp
jmp
push
mov
dec
hlt
add
ret
ljmp
pop
xchg
mov
mov
cmpsb
fwait
fwait
stos
xchg
mov
stos
fistpl
fisubrl
aas
test
daa
stos
shl
lret
mov
jmp
pop
cmp
sub
mov
cld
or
inc
std
aad
stc
cmc
into
mov
dec
lods
sbb
sub
mov
cltd
test
daa
jno
rcll
jge
pop
outsb
repnz
fidivs
rorb
jp
add
mov
cmp
repnz
cmp
outsl
jnp
les
cmp
cmp
cmc
mov
movsl
mov
push
pop
in
hlt
in
repz
fwait
jnp
push
mov
push
in
or
roll
cmp
es
js
fdivrs
push
mov
mov
or
sbb
cmpsb
lret
aas
jmp
cmp
lock
int
inc
mov
mov
or
xlat
je
xor
mov
or
inc
clc
mov
and
mov
pop
in
data16
iret
popf
insl
outsb
lea
inc
out
pushf
shlb
loop
insb
dec
lcall
fwait
imul
pop
inc
out
into
dec
gs
sti
mov
mov
jle
jns
dec
mov
xor
cmp
xchg
dec
daa
pop
pop
push
sti
lret
cmpsl
movsb
adc
aad
jo
sbb
repnz
ja
push
das
imul
cld
xchg
sub
andl
lahf
cmp
or
push
les
outsb
in
mov
adc
aaa
mov
sub
dec
mov
test
aas
imul
push
adc
pop
shl
mov
jno
cmpsb
test
andl
sub
push
dec
popf
add
jae
imul
retw
mov
mov
dec
add
fadds
and
loopne
in
sub
test
cmp
enter
in
mov
inc
addr16
out
add
push
fmull
enter
daa
push
lds
cmc
jle
adc
inc
or
outsl
roll
test
int
sbb
xchg
xor
aad
scas
stc
dec
jb
xchg
jno
adc
jns
pop
aam
cli
int3
cmpsb
lret
adc
and
sbb
sbb
fcmove
lds
iret
aam
dec
xchg
jnp
jmp
inc
out
and
test
fistps
mov
in
jp
pop
push
loope
fs
ficomps
mov
js
es
adc
dec
dec
inc
out
cmc
stos
adc
int3
jns
adc
in
call
mov
jle
nop
jb
mov
adc
out
scas
jno
std
mov
jae
ret
mov
mov
repnz
pop
adc
lock
push
cmpsl
inc
inc
jge
mov
fwait
decb
test
pop
pminub
jae
rclb
into
ret
test
mov
pop
mov
mov
data16
jo
insb
xor
push
inc
xor
movsl
nop
xlat
jmp
aas
sti
dec
sub
sti
jp
loopne
add
int3
es
mov
aaa
xor
fsubl
ljmp
jg
add
stos
cmp
pushf
add
xor
dec
mov
or
push
fstps
sub
mov
xchg
gs
out
outsl
lret
test
and
int3
jns
sbb
xchg
jg
dec
popf
sub
mov
shll
jb
xor
jno
xchg
mull
mov
jle
stos
add
and
pop
pop
cmp
cli
das
and
or
test
inc
pop
ja
fdiv
pop
daa
popf
push
mov
stc
scas
lods
mov
fidivl
jle
bound
push
jne
aad
fadd
or
sbb
sbb
and
pop
jle
in
sbb
push
pop
push
leave
adc
xor
push
lret
push
pop
lods
enter
icebp
test
pop
dec
mov
lret
stos
cltd
jb
outsl
and
xchg
arpl
adc
mov
gs
test
sbb
outsb
pop
sub
cmc
insl
xor
xchg
adc
out
xor
sbb
mov
cld
out
data16
pop
pop
pop
pusha
iret
popf
cmp
sub
bound
or
nop
adc
stos
sbb
push
pusha
test
in
std
push
mov
mov
and
and
mov
dec
call
in
cwtl
mov
jecxz
sub
fidivl
les
aas
lcall
shrb
push
insb
pop
mov
cltd
lods
jo
dec
xor
int
dec
adc
pop
jne
mov
and
stc
dec
addl
leave
fmuls
cmpsb
add
adc
js
dec
dec
fsqrt
xor
nop
stc
and
rorl
and
cmp
andb
fdivrl
rcrl
aad
sub
xchg
arpl
lods
gs
ja
idivl
cmp
sar
dec
fstpl
mov
cmp
loope
fsts
daa
fsts
sub
aam
scas
nop
add
aaa
int
mov
sub
lret
aad
stos
push
adc
imul
repnz
and
mov
sbb
xchg
push
rcl
lock
cmp
mov
push
mov
loopne
mov
cwtl
jns
aaa
sbb
stos
and
pop
mov
adc
push
loope
std
adc
je
xchg
sbb
mov
jl
outsb
out
pop
pop
or
add
pop
fs
mov
fwait
jmp
out
ja
adc
pop
mov
loopne
xor
jno
mov
cmp
daa
in
scas
jmp
xchg
inc
mov
mov
pop
mov
imul
jecxz
in
xchg
adc
loope
cmp
into
mov
jno
push
std
sahf
rcrl
mov
in
adc
sub
call
push
ja
mov
test
sarb
mov
adc
lods
sti
out
aam
mov
pop
mov
and
and
movsb
jnp
subb
jns
insb
mov
imul
cmp
jp
js
push
mov
xchg
dec
scas
add
xor
jg
ds
imul
shr
scas
cmp
cvtpi2ps
sub
xchg
data16
mov
jne
add
cwtl
add
adc
pop
in
lahf
lock
incl
jecxz
fldl
push
pop
jae
xlat
mov
inc
movsb
jge
mov
sub
out
shll
mov
mov
call
and
xor
pop
fsubrs
jmp
inc
test
mov
jg
jno
jo
cmp
ret
dec
and
mov
mov
lcall
subl
insb
jne
stos
int
fdivr
mov
inc
mov
or
cmpsl
push
xlat
and
add
mov
std
add
fisubrl
test
sub
ss
insl
mov
xor
aas
pop
shlb
inc
fsubr
add
mov
lea
push
idivl
js
test
out
mov
out
push
jnp
add
cmpsb
test
add
xor
dec
push
mov
or
repz
sbb
push
jl
mov
cmp
mov
imul
jecxz
inc
leave
mov
psubw
mov
outsb
into
push
testb
scas
sbb
xchg
cmpsl
mov
movsb
mov
xor
subl
mov
lcall
arpl
hlt
les
popf
push
sbb
ss
scas
push
movsb
dec
clc
sbb
inc
pusha
sub
out
push
inc
mov
adc
int3
shrb
mov
out
inc
xor
ljmp
xchg
sbb
mov
fistpl
push
push
push
rclb
repnz
in
in
mov
fld
lret
lock
nop
test
fcoml
imul
test
pop
mov
dec
lock
pop
sbb
sahf
test
sbb
mov
mov
jae
push
xlat
popa
adc
inc
pusha
sbb
lahf
outsb
push
adc
jg
jnp
aad
or
jne
jne
pusha
lret
jb
lret
inc
adc
xchg
repz
or
cmp
mov
hlt
push
or
fiaddl
xchg
xor
movsb
mov
cmp
inc
jge
jns
inc
fwait
jbe
rolb
sarl
lods
inc
stc
jge
pop
add
dec
aad
bound
jbe
rcl
jne
push
shrl
xor
jb,pt
push
xor
inc
cmp
jno
insl
inc
insl
inc
add
repz
xchg
push
and
clc
xchg
pop
pusha
lods
sbb
dec
mov
jb
adc
inc
test
bound
jne
fcmovb
xor
inc
mov
mov
xor
jno
mov
push
stos
lods
cmp
adc
movsl
mov
and
je
push
mov
arpl
negb
mov
adc
and
cmp
popa
adcl
punpcklwd
xchg
fimull
jp
sbb
fisubl
xor
cmpsb
jg
pop
ljmp
stc
pop
imul
int
shlb
and
cmp
mov
adc
in
test
xchg
mov
call
push
adc
or
and
jns
push
lret
sbb
lods
push
xchg
jae
xchg
int
jl
test
daa
add
lods
insb
or
sbb
jnp
fldt
data16
in
mov
int3
xor
add
in
sub
mov
popf
imul
pop
xchg
pop
adc
pop
pop
push
jg
or
lods
clc
adc
outsb
xchg
lahf
stos
fmuls
dec
and
cld
addr16
insb
jno
push
lea
sub
loopne
sub
sbb
or
or
into
jmp
jmp
pop
pop
jp
or
or
push
insl
gs
insl
mov
movsl
xor
pushf
jmp
scas
add
std
rcrb
icebp
cli
jne
xor
fidivrs
and
mov
cmp
adc
cmc
mov
cmpsb
test
and
cwtl
pop
fisubl
fwait
xchg
pop
icebp
adc
xor
push
mov
jo
data16
sahf
nop
call
sub
xor
and
mov
int
jecxz
adcb
adc
adcb
and
jae
xchg
jb
sub
sub
push
mov
adc
adc
xor
xorl
jb
cmp
in
inc
arpl
sbb
push
or
jecxz
dec
mov
mov
dec
bound
cmp
mov
ucomiss
pop
and
sti
dec
or
fldt
out
ljmp
push
jno
mov
int
insb
aaa
pop
leave
scas
lahf
insl
cwtl
mov
leave
imul
scas
nop
fcomp
pushf
aad
add
push
pusha
cmpsb
test
int3
add
lcall
repnz
out
arpl
xor
jle
and
add
add
data16
lahf
push
ds
lods
jecxz
jecxz
jmp
inc
es
jno
fisttpll
stos
cld
stos
stc
lock
pushf
in
jp
mov
and
xchg
js
xchg
imul
in
repnz
pop
arpl
sub
mov
inc
inc
idivl
mov
adc
sub
add
stos
mov
mov
stc
mov
icebp
loop
sub
subl
and
popa
add
mov
js
int
stos
sbb
ljmp
add
push
pop
outsl
inc
scas
push
std
mov
je
scas
cmp
insl
fldt
add
cltd
mov
lock
adc
sub
pop
cmp
inc
out
into
push
bnd
dec
into
outsl
loopne
jns
push
pop
arpl
lcall
mov
lret
or
repnz
int3
testl
and
xor
testl
xchg
fwait
sbb
inc
lds
push
arpl
aas
jle
mov
mov
mov
xchg
loop
add
inc
lods
jp
sub
xor
jmp
dec
gs
stos
cmc
repnz
stos
jnp
jne
mov
into
xor
xchg
out
pushl
or
sbb
js
out
aaa
fdivrl
sbb
int3
fldt
lea
mov
nop
mov
dec
inc
or
jge
incb
sbb
pop
jae
loopne
adc
inc
jnp
inc
rcll
push
add
lods
and
mov
hlt
mov
mov
cmp
push
incw
stc
sub
pop
lods
out
orl
test
lds
in
sub
pop
push
ss
push
test
add
sbbl
rolb
fidivl
loope
cmp
divb
inc
xchg
xorb
leave
imul
and
jle
daa
ror
mov
cwtl
mov
hlt
into
push
fbstp
add
jne
xchg
sbb
scas
and
jnp
dec
sub
out
jb
lret
leave
mov
les
fidivrl
ss
xchg
out
out
fildll
subb
inc
cmp
lret
mov
fimuls
dec
outsb
adc
fldz
repnz
add
movsb
orl
ja
fnstcw
dec
sbb
adc
les
push
mov
xchg
iret
into
xor
pushf
nop
cmp
arpl
dec
fdivs
scas
push
cs
dec
and
test
sahf
or
cmp
xor
outsl
adc
mov
cltd
lods
fwait
andb
and
mov
mulb
cmp
or
xchg
add
xchg
out
pop
mov
mov
andl
fdivrl
outsb
mov
movsb
aas
jmp
icebp
subb
xchg
inc
inc
int
fnstsw
push
sbbl
lcall
aas
xchg
ss
or
mov
lcall
es
dec
and
insl
adc
mov
mov
stos
addr16
or
inc
shrl
or
ds
popf
outsb
ljmp
and
adc
dec
mov
adc
push
rclb
es
jmp
loop
mov
xor
loope
fdivrs
and
out
repnz
jno
adc
loope
dec
pop
inc
add
mov
add
call
sub
clc
add
sbb
and
fcoms
dec
ret
mov
cmpsb
movsb
xor
xchg
pop
int3
fisttpl
adc
shr
out
repz
inc
stos
sahf
jecxz
mov
aas
mov
test
lods
jg
push
xlat
sbb
and
xchg
jae
jns
je
adc
jecxz
sub
jne
cltd
lahf
xlat
enter
inc
or
ds
adc
arpl
test
mov
jle
shlb
pop
testb
push
jne
dec
rclb
loopne
inc
das
scas
pop
rol
mov
add
aad
test
cmpb
fsubl
sbbb
popa
lret
hlt
std
xor
add
adc
int
dec
mov
pop
jmp
sub
dec
xor
outsl
xor
sbb
in
add
add
pop
hlt
dec
jmp
fldenv
jae
xor
jg
jb
int3
xchg
pop
filds
lods
fmul
pop
in
in
push
jns
dec
adc
cwtl
cmp
mov
subl
sbb
cmpsl
out
outsb
cwtl
push
xchg
imul
rol
inc
ror
cmp
lods
fwait
sbb
outsb
dec
xchg
xor
insl
or
rorb
add
sub
int3
ror
jmp
mov
outsl
cmp
push
popf
nop
dec
push
fsubrl
std
or
aad
adc
gs
jmp
int3
add
dec
jg
movsl
cli
out
sbb
lea
push
xchg
dec
jo
mov
sub
dec
ret
movsl
faddp
popf
rcll
mov
enter
outsb
stc
daa
into
int
or
ficoml
adcl
sbb
mov
sbb
aad
aas
movsb
mov
inc
ja
fwait
adc
mov
jl
pop
mov
ret
sub
sub
pop
or
dec
mov
cltd
movsl
mov
mov
dec
mov
xchg
mov
inc
fimull
ss
mov
or
imul
jne
ja
or
fbld
sbb
stc
sbb
mov
pop
lret
call
test
jb
xchg
stc
cmp
in
dec
mov
mov
pop
push
test
mov
dec
test
push
mov
push
fstps
inc
pop
repz
mov
sub
js
jbe
loope
mov
xor
popa
push
pop
pop
jo
fiaddl
jmp
xor
clc
push
inc
in
add
in
popf
sar
fildl
or
xorl
push
movsb
sub
shlb
mov
add
inc
call
xorb
dec
push
adcb
js,pn
mov
or
mov
sub
mov
call
jg
in
mov
cltd
fldenv
js
mov
mov
in
sbb
mov
jno
addr16
neg
lea
test
pop
mov
pop
ficomps
aas
and
mov
enter
sbb
popf
andl
cmp
fwait
mov
jne
test
xor
mov
add
xor
call
push
out
mov
jo
inc
inc
inc
lcall
push
dec
adc
adc
insl
icebp
inc
cs
push
mov
mov
fidivs
xlat
sbb
sar
inc
inc
adc
xchg
or
es
adcl
test
sub
add
push
lret
lods
add
loopne
mov
jno
lret
dec
jo
mov
xchg
or
lret
inc
pop
bswap
fdivrs
das
paddd
nop
mov
outsb
fdivl
imul
xor
xor
add
test
pop
push
int
xchg
insl
pop
test
jmp
xchg
mov
jb
fsubs
enter
mov
inc
icebp
out
neg
lcallw
jge
xchg
mov
addr16
add
daa
push
mov
jge
sbb
mov
xor
mov
and
mov
leave
add
push
out
xchg
or
leave
sbb
push
ficoms
jne
pusha
gs
cwtl
ljmp
cmp
add
adc
sti
jae
mov
bswap
repz
push
iret
in
mov
pop
adc
call
jle
pop
jp
jns
mov
add
lret
mov
add
loope
into
and
mov
push
push
push
xchg
sub
ljmp
mov
xchg
mov
or
test
dec
ret
xor
lahf
xchg
or
mov
test
lds
orl
push
and
xchg
ljmp
nop
shll
in
test
dec
mov
call
add
mov
andl
push
mov
mov
adcb
imul
pop
int3
fnstsw
push
cmp
inc
bound
sub
or
push
mov
cmpsl
adc
dec
int3
loop
jl
jns
call
fwait
loope
ja
mov
es
idivb
cmp
lret
sub
pop
adc
jg
int3
cs
fmuls
nop
or
inc
or
lods
frstor
inc
push
mov
add
shl
lahf
cli
mov
loopne
ljmp
mov
js
fistpl
enter
sub
inc
shl
push
imul
cmp
stc
std
sbb
sti
scas
push
pop
xchg
pop
stc
adc
int3
cmp
decl
out
xchg
fisubrl
in
fistpll
icebp
in
repnz
sub
mov
push
or
xchg
sahf
movsb
mov
icebp
adc
sub
inc
aad
stc
mov
pop
pop
adc
aad
popa
dec
outsl
cmpsl
xchg
mov
test
push
mov
sub
adc
test
sahf
cmc
jmp
bound
add
imull
loopne
jno
aad
sub
inc
lds
mov
sbb
in
mov
sbb
xor
adc
aam
loopne
ja
inc
push
insb
mov
sbb
mov
or
popf
cmc
out
shrb
mov
push
scas
int
test
test
popf
cmp
pop
rcll
scas
push
mov
xchg
in
xlat
outsb
dec
repz
xor
mov
sub
lods
sti
das
dec
sub
pop
fstpl
or
mov
push
lods
mov
loop
dec
mov
push
sbb
jne
ror
cmpsb
pop
je
in
push
in
mov
mov
jbe
cltd
arpl
push
sbb
adc
mov
cld
scas
pop
pushf
mov
sub
in
and
hlt
xchg
mov
push
data16
jo
arpl
push
mov
pop
xor
jno
sub
cld
testb
add
mov
and
cli
mov
in
lahf
cmp
or
adc
push
add
fwait
xorb
in
mov
scas
inc
ret
xchg
mov
xchg
clc
mov
pop
mov
std
dec
cmc
pop
add
push
inc
adc
movsl
dec
xor
test
andl
ds
adcb
xor
or
sub
adc
xchg
loop
loopne
arpl
xlat
cmp
int
pop
daa
cmpsl
dec
lahf
pop
cmp
call
and
test
xchg
jmp
inc
clc
sub
dec
cwtl
std
inc
jmp
repz
mov
hlt
xchg
imul
repnz
and
push
cld
jmp
daa
pop
sti
mov
cmp
mov
cwtl
xor
sub
lret
sbb
in
and
clc
xchg
jne
into
or
ja
test
js
clc
test
add
xchg
mov
sbb
xor
clc
mov
mov
insb
sarb
icebp
xchg
imul
clc
inc
adc
call
and
or
push
push
xchg
jnp
jnp
jns
cli
mov
lods
ja
mov
pand
stc
sbb
mov
mov
xchg
mov
das
ds
mov
pop
rolb
arpl
lcall
andb
push
mov
out
icebp
ret
popa
sbb
daa
push
iret
scas
or
ret
mov
push
aas
pop
mov
pop
into
iret
pop
jmp
push
sub
rorb
lods
push
pop
xchg
pop
sbbl
xlat
lahf
xchg
iret
or
cmp
mov
rorl
insl
outsl
pusha
pop
dec
jnp
mov
out
push
mov
out
outsb
jle
push
aad
test
pop
or
cli
or
add
mov
cmp
int3
sbb
je
jns
bound
cmp
cmc
mov
sub
shl
movsl
jae
cmp
test
jb
sahf
aam
lahf
lret
sbb
inc
mov
sbb
cmp
adc
call
aad
dec
ljmp
in
sub
dec
jo
bound
lds
adc
xor
aaa
cmp
jo
loop
aam
in
jp
sub
cmp
or
add
mov
pop
jle
outsb
mov
out
roll
aam
pop
js
aam
sub
int
pop
adc
dec
cmpsl
into
cmp
push
xlat
xor
sbb
sub
sbb
rorl
push
xor
or
stos
ficoms
in
sbb
sbb
jbe
or
cmc
xor
cltd
sbbl
jb
stos
mov
jmp
frstor
in
andl
movl
push
sahf
cmpsl
shr
sub
imul
insb
test
arpl
jmp
mov
mov
out
loop
ds
mov
inc
rclb
xchg
nop
mov
xchg
dec
js
fsubs
out
rorb
xchg
cmp
mov
scas
ljmp
aaa
insl
mov
adc
addb
mov
movsb
push
mov
jmp
add
fs
int3
fisubs
add
push
push
dec
pop
ret
hlt
adcb
sahf
aaa
and
loopne
daa
mov
popa
lock
jg
fwait
mov
movsb
shlb
jmp
xchg
in
pop
xor
jl
cmc
pop
pusha
sbb
xchg
push
mov
sub
pop
inc
cmp
sub
adc
outsl
test
cmp
cld
lret
jl
xchg
inc
pushf
xlat
add
lret
fnstsw
pop
mov
pop
jge
pop
insb
mov
out
mov
cwtl
cmc
mov
jae
in
faddl
das
push
adc
sbb
fdiv
imul
rcr
sub
mov
fwait
sbb
lcall
rolb
mov
xor
mov
adc
or
jnp
in
jge
sub
pop
adc
jcxz
xchg
into
push
outsb
insb
stos
jge
insb
clc
inc
jge
ret
push
cmp
mov
sti
test
xchg
leave
insl
adc
sub
push
or
xorb
push
in
popa
xor
rorl
inc
in
popf
adc
fidivl
mov
push
sub
pop
int
xchg
cmpb
jns
push
mov
rolb
dec
sub
nop
and
add
test
pop
test
adc
movsl
sub
mov
scas
push
xorb
jb
sub
jp
xor
mov
cwtl
adc
fisubl
loopne
push
lds
es
mov
scas
pusha
in
std
pavgw
mov
repz
and
add
xor
movsbl
push
mov
inc
or
push
pop
dec
jmp
pusha
and
fidivl
test
xchg
mov
into
mov
rcrl
sti
data16
mov
jns
ret
jae
out
sub
or
mul
stos
lcall
or
jo
popa
sbb
pop
pusha
xchg
dec
rolb
cmp
jge
jo
scas
fisubs
add
subb
xor
hlt
mov
bound
clc
arpl
sbb
iret
or
push
mov
test
repz
hlt
clc
enter
lret
mov
fistps
sub
cli
in
bound
dec
loopne
andl
aam
mov
mov
mov
loop
iret
fs
in
push
fadds
sbb
lds
clc
pop
int
rcrb
mov
icebp
pushf
lods
loop
inc
pushf
xor
int
dec
mov
not
jmp
lcall
out
jns
sbb
pop
dec
iret
mov
loope
icebp
js
out
inc
inc
and
arpl
pop
inc
xor
loop
popa
pop
mov
test
lock
mov
repz
cmpsb
in
mov
addr16
push
pop
inc
cmpsl
pop
enter
add
test
sub
add
sbb
aas
sbb
cmp
outsb
push
frstor
imul
out
xlat
addb
cmpsl
jo
mov
or
or
cld
out
js
mov
jnp
xchg
xor
ja
iret
sahf
pusha
ss
std
mov
pop
rorb
pop
fisttpl
popf
jecxz
jns
inc
pop
mov
insl
and
inc
fcmovbe
xchg
inc
mov
das
jns
jecxz
loop
scas
mov
mov
gs
in
add
xchg
jae
dec
scas
outsl
jmp
push
call
fidivs
jnp
dec
ret
loopne
dec
xor
pop
push
mov
push
push
cmp
aam
imul
in
xchg
call
sbb
leave
pop
xor
xor
fstpl
stos
hlt
xor
in
pop
cmpsl
sbb
xchg
push
push
sub
adc
push
sbbb
sub
inc
ja
sahf
roll
minps
xor
je
mov
rorb
pop
iret
jne
fwait
ret
jne
stc
mov
pop
xchg
add
outsl
and
lahf
inc
adc
jl
cmp
jmp
push
addr16
fcmovnu
inc
mov
mov
pop
test
pop
mov
mov
imul
push
jbe
xchg
adc
pop
mov
sbb
dec
inc
or
push
daa
mov
add
pop
fwait
clc
pusha
nopl
push
mov
xor
mov
loope
lock
aad
fsubp
push
insl
mov
clc
adc
mov
dec
mov
inc
cmp
cmpsl
jecxz
fldt
ficomps
adc
sbb
mov
imul
mov
mov
push
cmp
dec
push
and
pop
popf
push
ss
inc
mov
test
repz
sbb
ds
sbb
sub
xor
nop
xorl
ret
es
xchg
lods
pop
sti
inc
scas
adc
sbb
and
pushf
and
and
lcall
fstpl
inc
stos
in
jp
lcall
xor
sarl
enter
jne
data16
mov
repnz
sar
inc
add
xor
lret
inc
and
cmp
sub
arpl
dec
rcll
outsl
ret
xor
insb
mov
dec
insl
shrl
or
out
adc
mov
adc
push
mov
scas
inc
mov
cmp
and
ljmp
loope
lods
ret
cmp
adc
insl
add
fwait
sbb
cld
shll
fildl
das
fisttpll
xchg
movsb
dec
cmc
jecxz
push
mov
icebp
add
iret
xchg
nop
xor
fstpt
mov
sbb
xor
sub
inc
mov
mov
out
popf
mov
mov
jmp
hlt
dec
fsubp
push
adc
or
cmp
rol
movsb
jg
jnp
and
pushf
gs
lret
mov
mov
and
sbb
aad
sub
pop
mov
dec
jne
push
stos
dec
mov
mov
push
mov
les
lahf
cmp
push
arpl
jl
stos
push
add
mov
xchg
xlat
pop
rclb
dec
push
xchg
subl
pandn
push
and
lret
add
jmp
jecxz
sbb
mov
adcl
pop
inc
or
mov
dec
pop
stc
sub
imul
dec
das
inc
fisttpll
mull
add
aas
add
mov
pop
loop
ds
imul
ja
inc
aas
or
pop
adc
sub
clc
mov
mov
gs
lods
or
pop
call
ret
clc
adc
xor
cmp
push
xchg
inc
pop
out
leave
scas
call
dec
out
pop
jbe
mov
mov
mov
sub
mov
mov
daa
imull
jecxz
xchg
popf
adc
aaa
fists
in
xor
test
jbe
mov
out
or
std
sbb
fsubl
mov
mov
dec
test
or
fistl
loop
push
and
pop
inc
popf
mov
lods
loopne
sbb
int3
inc
pop
js
lcall
xor
adc
ucomiss
ret
imul
leave
xor
mov
jg
repz
hlt
adc
in
ljmp
mov
xchg
mov
xchg
jecxz
pop
pusha
cmp
sbb
dec
lea
js
inc
cmp
jecxz
cmc
or
jbe
repz
std
sbb
out
add
fstl
dec
and
or
test
mov
dec
sbb
jecxz
xchg
adc
push
sbb
dec
pushf
add
mov
xchg
add
inc
jl
int
pop
fiaddl
mov
int3
int
insb
fimull
jo
push
lea
jge
inc
sub
push
or
lcall
shr
mov
lret
xor
mov
and
dec
andl
test
mov
jns
mov
add
push
test
rcll
mov
sbb
jnp
jmp
sbb
mov
dec
loopne
adc
ret
inc
cmp
lret
pop
es
xchg
inc
xchg
and
shlb
push
in
dec
push
out
xor
cmp
ja
and
test
lcall
mov
cs
jge
test
pop
rcrl
cmpsl
jne
int3
test
jp
pop
and
aam
pop
fwait
fwait
xchg
leave
out
sbb
or
fldcw
pop
fdivrs
imul
ror
mov
cmp
pop
repz
je
cltd
call
mov
mov
sbb
dec
imul
dec
fstpl
loope
sbb
add
and
out
icebp
outsb
or
xor
inc
call
bnd
sub
add
or
jae
dec
inc
sbb
jne
jbe
out
and
pop
popf
add
test
sbb
aad
gs
fsubl
mov
mov
mov
mov
sub
fdivs
sub
cmp
movsb
lea
lods
and
ret
in
sub
popl
testb
cwtl
orl
int3
inc
test
inc
pusha
outsb
pop
adc
inc
cltd
add
mov
stos
test
cld
cmp
int
xchg
xchg
add
addr16
movsl
std
add
cltd
dec
or
aad
scas
shrb
push
cmp
mov
mov
xchg
mov
dec
test
add
mov
add
dec
int
sbb
ss
cmp
dec
push
cli
mov
sarl
xchg
stc
enter
mov
outsb
iret
inc
cmp
shrb
xor
inc
xchg
pop
stos
int3
icebp
cltd
xor
inc
pop
adc
mov
inc
clc
push
pop
lret
pop
icebp
add
loop
xor
mov
fwait
sub
mov
sbb
and
lcall
shll
cmp
cmp
mov
dec
xchg
test
push
je
cmp
or
mov
test
xchg
idivl
xchg
xor
icebp
bound
add
sbb
inc
pop
fldcw
sti
test
xor
mov
cmp
sub
decb
xor
ret
shlb
sbb
dec
mov
nop
jp
ret
lret
daa
xlat
cmp
daa
and
fisttpl
into
addl
ja
or
xchg
push
mov
adc
int
fists
mov
and
cmpsb
sbb
adc
jge
sahf
mov
and
mov
jl
and
test
fmul
movsl
dec
sub
mov
jecxz
clc
pop
ljmp
imul
fadd
push
movsl
jne
push
pop
data16
cmp
lret
rcr
mov
lock
mov
mov
xchg
mov
scas
fwait
push
cli
sbb
push
iret
lcall
ds
dec
or
iret
sub
orl
push
rcrl
ss
outsb
lods
lcall
mov
xchg
cwtl
and
mov
cmc
inc
and
outsb
in
mov
cmp
dec
fisttps
iret
mov
fcompl
push
leave
mov
jne
pop
movsb
in
pop
hlt
mov
lods
fst
cmpsb
sbb
fwait
jmp
iret
push
in
aam
lds
fcomps
outsb
mull
es
gs
mov
or
or
jge
xchg
test
sub
push
lea
imul
add
popf
cmp
push
xchg
out
ds
add
in
mov
adc
pop
fistpll
add
add
pusha
aaa
insl
xorb
or
push
add
mov
popa
in
mov
mov
lea
jne
sbb
outsb
push
shlb
outsb
push
push
inc
icebp
inc
cmc
add
or
ret
mov
insb
xor
jl
sub
push
or
push
push
lcall
pop
ds
fsubrp
lret
cmp
dec
sbb
cmp
sub
dec
mov
jmp
jl
xchg
mov
jno
nop
aas
pop
sub
mov
dec
xor
xor
sub
inc
xchg
jg
push
cmp
leave
int
xchg
repz
je
dec
test
xor
xlat
in
pop
jecxz
in
movsl
dec
cmp
pop
subl
push
pushf
test
inc
insl
std
pop
jne
dec
adc
pushl
aam
sub
fisubrl
xor
cs
repnz
sti
add
enter
jecxz
aam
mov
out
inc
mov
rolb
xor
mov
imul
adc
mov
xchg
xor
xchg
aam
hlt
xor
idivb
jns
popf
clc
pop
jl
pop
and
sahf
jae
push
lock
mov
fwait
and
lods
push
and
pushf
pop
and
aam
sub
lds
sbb
std
test
xchg
arpl
sarb
hlt
dec
xor
push
cmp
imul
dec
shlb
cli
outsl
enter
mov
cs
stc
subl
adc
jg
mov
add
sbb
dec
and
test
mov
xor
andl
cld
push
test
lods
push
dec
js
pusha
jle
add
xlat
fstps
cmpsl
iret
fsubl
mov
and
dec
or
ds
pop
dec
cli
push
mov
insl
sub
sbb
xlat
or
out
loope
jns
jecxz
gs
dec
loope
popa
xor
jnp
popf
adc
scas
push
mov
pop
push
or
dec
xorl
in
cli
ret
ja
jg
mov
sti
int
cmp
jo
push
fstpt
xor
xor
mov
and
ficomps
clc
cld
mov
xor
pop
sbbl
pop
xchg
mov
cwtl
push
subl
jbe
lret
sarl
movsb
dec
adc
pusha
sahf
mov
mov
push
dec
jg
lds
lahf
sbbl
add
call
jge
jmp
aam
inc
fsubrl
and
sahf
lcall
out
out
sub
xchg
xchg
jb
cmpsl
enter
and
mov
and
sbb
loop
aad
dec
adc
jecxz
xchg
neg
jnp
dec
nop
mov
in
pushf
or
sub
iret
xor
cmc
cmp
hlt
daa
xor
mov
xor
jmp
lods
shll
adc
or
inc
outsl
divl
pushf
pop
repnz
stc
xor
push
cld
repnz
mov
int
out
pop
jmp
mov
pop
add
pop
cs
xlat
lret
push
sbb
dec
mov
add
push
loope
mov
push
test
jl
mov
mov
mov
cmp
jne
mov
mov
lods
loop
jecxz
mov
mov
add
or
lahf
pop
sub
cmp
push
in
enter
lods
and
dec
lahf
int3
scas
push
ljmp
fdiv
pop
es
cltd
dec
cld
in
sub
mov
loop
les
and
xor
mov
add
std
xchg
dec
jp
ds
leave
enter
addr16
xchg
mov
dec
inc
pop
and
jp
push
lcall
and
ja
outsb
sub
loopne
popl
xor
mov
aaa
sub
adc
xor
lea
dec
jns
insb
inc
jne
add
loope
testl
pop
andl
xlat
fisttpl
inc
and
or
adc
pop
lods
cmpsl
mov
loop
and
mov
sahf
cmc
das
xchg
repnz
xchg
cmpsb
idivb
pop
lods
push
loop
imul
mov
pop
mov
ficomps
lcall
jne
pop
lea
in
je
xorb
je
xor
fcom
sub
jmp
scas
adc
fwait
ret
adc
shl
push
add
data16
add
cmp
loopne
mov
dec
sahf
fmuls
xor
mov
mov
imul
nop
cmc
std
push
mov
jb
sbb
xor
xchg
jnp
int3
sub
or
cmpsb
push
fisubs
pop
mov
sbb
icebp
jb
add
sbb
push
pop
mov
xchg
adc
sub
push
jle
add
adc
je
fiaddl
jl
or
and
dec
insl
imul
aad
and
xor
push
icebp
pop
mov
dec
and
pop
pop
bsr
pop
jb
jno
push
inc
leave
push
inc
xchg
mov
js
out
sub
andl
out
add
icebp
mov
mov
mov
mov
or
int3
loope
dec
out
mov
push
outsl
mov
dec
sbb
mov
jno
xchg
testl
aas
int
test
dec
dec
pop
popa
push
dec
int3
xchg
int3
xchg
ficompl
test
xchg
js
mov
negb
idivl
sbb
jecxz
aam
lock
sar
test
adc
jge
mov
test
sbb
push
imul
sub
xchg
stos
ds
insb
mov
xchg
arpl
or
mov
test
mov
je
repnz
clc
mov
pop
jo
lret
or
mov
cwtl
stos
mov
and
jnp
xchg
sub
dec
jnp
cmp
sbb
sub
or
mov
jb
popf
bound
lcall
ds
cmp
fisttpll
in
xorb
jp
dec
jno
ret
ds
out
enter
cli
inc
lods
or
jnp
pushf
popf
inc
movb
mov
jmp
cmpsb
and
add
mov
sub
pop
xor
mov
adc
push
add
lret
pushf
cmp
xchg
fs
adc
into
rcrb
lds
imulb
fisubl
add
enter
and
sub
jae
hlt
loope
inc
sbb
repnz
mov
das
jl
pop
push
data16
leave
mov
ljmp
stos
push
ss
cmp
mov
push
adc
sbb
jp
jl
pop
fidivrs
mov
or
mov
js
lds
sub
ja
cmp
cmpsb
sbb
push
sub
ss
insb
adc
inc
in
imul
inc
cwtl
into
cwtl
dec
and
mov
jb
imul
in
cmp
sub
repnz
ficomps
outsb
dec
and
add
sub
aaa
fiadds
dec
xor
push
hlt
or
inc
push
jg
sub
fwait
or
jns
sub
sub
jg
lods
loope
lcall
orl
in
ret
inc
cltd
dec
pushf
sbb
test
push
repz
or
push
xchg
jae
idivl
sub
iret
mov
push
inc
ret
xchg
ud2
call
push
shlb
out
lock
int3
push
cwtl
push
mov
nop
and
int
and
pop
rorb
insl
movsl
jmp
loope
in
insb
imul
adc
or
xchg
enter
fistpll
cmc
xor
sbb
xor
int
adc
push
add
movb
lcall
dec
xchg
insb
loope
and
lret
xor
mov
inc
jle
dec
mov
cmp
xchg
test
xchg
mov
mov
sub
addr16
or
inc
inc
test
adc
pop
xor
cmc
dec
mov
es
cmp
xor
cld
dec
or
sbbb
and
mov
sti
bound
jns
dec
sub
daa
inc
mov
adc
andb
and
lds
shrl
call
dec
sbb
cmc
mov
out
idivl
dec
adc
repnz
push
push
nop
xor
push
xchg
fwait
lods
out
dec
data16
lds
inc
mov
or
insl
lea
sbb
xchg
jo
jg
sub
sbb
ret
stc
sub
jae
xchg
jno
sbb
ds
mov
repnz
jmp
mov
xorps
sub
sarl
test
int
jae
popf
sub
icebp
shll
or
mov
fnstenv
fwait
jae
movsb
in
aam
push
cmp
mov
dec
dec
xchg
lcall
or
xor
js
xor
iret
roll
and
test
sti
dec
fs
sub
bound
int
xor
aam
adc
lahf
or
lahf
inc
inc
in
or
loop
enter
mov
sarb
in
jbe
scas
fs
or
push
mov
cmp
mov
insb
outsl
or
ljmp
jl
fsubp
out
cmc
inc
nop
dec
jl
xchg
cmpsb
js
aas
add
push
mov
jns
inc
insl
ret
mov
pop
dec
mov
cmp
jge
cwtl
repz
cmc
mov
addr16
jnp
inc
aam
jg
xchg
rcrb
pop
dec
xchg
movb
xchg
mov
sbb
jmp
mov
je
jl
mov
push
mov
shrl
xchg
mov
out
pop
int3
ret
je
lock
andl
andl
outsb
pop
or
inc
inc
dec
shll
fcmovne
pop
outsl
and
mov
push
test
fsts
mov
addl
fdivr
or
enter
jns
mov
adc
int3
rorb
nop
mov
sub
insb
nop
icebp
or
cwtl
int3
push
les
into
or
mov
cld
dec
mov
arpl
stos
es
popf
dec
sub
push
add
xlat
aaa
cmp
data16
icebp
in
imul
and
jnp
mov
enter
and
mov
push
rcrb
fisttpl
or
mov
ds
push
insb
aas
jbe
adc
icebp
ljmp
mov
cmc
jg
inc
mov
test
bound
mov
dec
push
mov
mov
arpl
inc
cmp
rcl
pushf
lds
ss
mov
xchg
mov
inc
xchg
pop
inc
jmp
mov
inc
mov
jg
fcmovbe
and
xchg
sub
inc
inc
outsl
and
inc
push
das
into
pop
ss
dec
and
pop
mov
addr16
push
stos
mov
xchg
cmp
rorl
push
popa
out
inc
mov
negl
ds
push
xchg
mov
lahf
push
fdivl
not
scas
jns
xor
sbb
mov
daa
cmp
or
jbe
sahf
sub
fucomp
outsb
sbb
les
orb
icebp
sarb
or
mov
cmpsl
xchg
cmpsl
jmp
adc
and
in
pop
and
aad
or
or
lcall
mov
or
lods
pop
pop
xor
ja
or
cmp
and
popf
ds
in
or
pushf
test
fs
insl
xchg
mov
mov
outsl
test
insl
inc
xlat
jle
inc
inc
popf
mov
and
jle
dec
jp
cmp
mov
jecxz
aaa
enter
push
dec
inc
jne
sbb
sahf
xor
movsb
inc
push
fstps
xor
add
in
mov
inc
push
add
jae
cmpsl
jp
mov
aas
xchg
inc
es
jle
mov
daa
ljmp
fsubs
or
jno
out
xor
aam
inc
test
push
je
cwtl
jb
clc
outsl
and
std
jno
mov
mov
insl
ja
cmp
pop
aad
and
mov
std
and
arpl
jp
and
fs
jl
mov
xchg
xor
push
jns
int3
cmc
add
iret
adc
in
enter
inc
inc
mov
push
aas
or
scas
pushl
int
mov
cli
fcomps
les
mov
int3
push
imul
adc
rorl
inc
jbe
mov
in
jae
hlt
popf
inc
adc
pop
xchg
lods
mov
imul
js
outsb
cld
mov
lds
jnp
out
addb
lahf
or
out
sub
sbb
jb
push
psadbw
into
mov
mov
dec
test
outsl
push
lret
fwait
mov
js
or
or
mov
iret
fs
lods
jns
mov
dec
repz
ffreep
cmp
mov
dec
insl
sub
jp
xchg
movsb
mov
stos
cli
insl
in
pop
out
out
lock
jge
xchg
sbb
push
or
aam
xor
add
sbb
fnstenv
mov
mov
add
insl
jae
xchg
jmp
mov
scas
jbe
adc
jnp
mov
inc
out
into
mov
std
pop
lret
pop
dec
punpcklwd
clc
loope
jns
xor
insl
scas
pop
adc
and
lret
sub
or
popa
sbb
mov
sub
adc
cmp
sub
js
aam
cmp
xchg
pop
add
ss
bnd
cltd
into
ljmp
in
pop
mov
leave
jle
outsb
mov
roll
sahf
or
inc
in
out
cmpsb
lods
mov
or
inc
jmp
mov
add
imul
or
and
insl
rol
push
inc
add
ret
test
fsubrl
inc
push
push
int3
aas
pop
push
cld
add
push
or
push
mov
aaa
in
and
shll
dec
mov
xchg
add
lret
sbb
scas
imul
daa
mov
sub
into
inc
std
jge
outsb
jg
test
pop
cmp
sub
xchg
das
mov
mov
stos
mov
nop
xchg
mov
dec
nop
sub
imull
and
mov
in
jae
cmp
mov
incl
mov
mov
mov
inc
out
icebp
frstor
xchg
rcl
notb
into
xchg
shlb
lea
out
sbb
les
or
pusha
mov
arpl
cli
mov
roll
sub
dec
add
pop
dec
inc
jb
xchg
jae
xchg
cmp
mov
in
pop
dec
jl
stos
mov
push
sti
pop
or
jae
pop
lods
pop
out
xor
or
stc
pop
xor
inc
sub
sahf
sahf
push
push
push
jns
test
movsl
movb
sub
cmp
pop
loop
jne
fsubs
sbb
ret
jno
mov
pushf
push
dec
jbe
incl
mov
add
sahf
mov
mov
mov
imul
popa
test
mov
and
push
xor
lahf
xor
push
add
les
xor
enter
mov
or
arpl
mul
lret
and
jo
jg
sub
mov
fwait
out
pop
sub
ja
jg
mov
adc
sub
fwait
pop
or
aaa
mov
fisttpl
push
or
inc
rcrl
cli
cli
pop
adc
fs
enter
xchg
xchg
outsl
mov
pop
dec
in
movsl
inc
ret
iret
lea
push
inc
rorb
shl
push
cltd
data16
adc
dec
dec
mov
cmpsb
aad
scas
incl
mov
imul
dec
push
xchg
loopne
aaa
arpl
xor
xor
cmp
xchg
lock
inc
movl
cltd
ljmp
imul
adc
das
mov
jbe
inc
adc
rcrb
add
frstor
decb
inc
fcoms
mov
push
xor
out
mov
fdiv
into
je
fs
dec
and
aad
pop
pop
inc
repnz
push
xchg
pop
ds
and
daa
inc
or
arpl
cmp
mov
sbb
insl
movl
outsl
outsl
mov
aaa
mov
add
inc
test
xchg
jp
mov
daa
jne
leave
dec
aas
and
arpl
shr
jg
sti
lahf
adc
xlat
jmp
jo
xchg
and
adc
lcall
data16
or
mov
and
or
imul
xor
stos
mov
jb
or
rorl
outsl
pusha
int3
cmpb
fadds
push
pop
pop
mov
test
push
push
mov
jl
mov
cltd
pushf
aas
adcl
mov
or
clc
icebp
in
aaa
push
data16
cmc
test
je
push
push
movsb
call
or
sbb
cmpsb
sbb
cmp
adc
jl
inc
test
push
sbb
or
push
ja
mov
in
cmp
dec
adc
into
adc
mov
roll
adc
fists
stos
push
sbb
das
sbb
out
rcl
and
dec
popa
and
cmp
mov
and
pusha
xchg
mov
jae
mov
jno
xor
test
dec
call
stc
rcrl
xor
push
pop
insb
rclb
insb
lods
je
jns
es
jne
data16
mov
aam
cmpsb
add
xor
or
adc
push
jb
xchg
addb
add
pusha
stc
sti
jae
adc
cltd
ljmp
ljmp
mov
and
sub
dec
ja
imul
add
int3
lock
jnp
push
inc
in
fwait
push
ret
cmp
fistl
fisubs
jecxz
mov
in
xchg
add
adc
sbb
sbb
xchg
lods
inc
push
ja
mov
xchg
mov
imul
sub
or
pop
fwait
pop
mov
push
push
ret
cmp
jl
mov
xor
or
jbe
or
mov
add
adc
inc
push
dec
gs
push
movsb
xchg
push
mov
arpl
mov
outsl
pop
insb
loop
leave
js
daa
repnz
insl
adc
xchg
ds
cmp
adc
sub
cmp
test
cld
out
add
mov
push
jo
insl
test
cmc
or
in
ret
ficoms
xchg
sub
fmull
bound
testl
jp
lret
jno
dec
mov
scas
roll
add
rclb
test
sbb
clc
pop
jl
nop
xlat
imul
jmp
sbb
bound
call
push
push
or
and
sbb
jle
loope
jl
add
shlb
imul
cli
fwait
outsl
stos
daa
jnp
mov
cmpsb
inc
pop
inc
mov
pop
push
sbb
mov
imul
fs
dec
pushl
data16
cmp
rclb
inc
leave
push
jecxz
pop
mov
out
cli
or
pop
cltd
sbb
movl
xchg
shll
xor
mov
xchg
dec
enter
or
mov
cwtl
xchg
xor
mov
mov
sub
pop
pop
xchg
movsl
jae
sub
dec
dec
add
scas
mov
mov
negb
jae
data16
inc
xor
out
jns
adc
pop
mov
or
imul
test
cli
shrb
mov
cld
fdivp
dec
sub
xchg
aas
ljmp
jno
clc
ret
imul
movsb
arpl
rcrb
xor
stos
and
arpl
fisttpll
jae
test
gs
inc
adcb
test
mov
leave
outsl
cli
enter
in
mov
push
push
fdivrs
scas
imul
loopne
push
inc
xchg
lea
pop
adc
adc
int3
xchg
cmpxchg
aam
popa
je
out
xchg
lahf
cld
and
arpl
jnp
push
lret
ret
cmpsl
or
mov
mov
pushf
and
or
mov
stos
loope
das
scas
dec
inc
xchg
push
pop
int
leave
jge
mov
xchg
cwtl
pop
insb
mov
adc
push
cwtl
shr
imul
lret
in
mov
push
in
or
fsubr
enter
push
sub
xor
mov
xorl
cmc
addr16
sub
mov
jmp
xor
daa
xchg
fs
jle
std
mov
popa
js
xchg
xchg
test
cmp
popa
out
lods
lock
push
out
lds
andb
sbb
mov
push
or
cli
shl
movsb
lahf
mov
negl
mov
es
jb
aas
call
cmp
aam
inc
loop
rcrl
xor
dec
pop
shrb
or
xor
adc
cli
fmul
cmpsl
pop
stos
inc
and
jne
mov
inc
dec
mov
mov
pop
sti
adc
mov
cltd
pop
cli
mov
adc
pop
aas
mov
xchg
fisubl
pop
sahf
mov
push
jb
xor
repz
xor
fnsave
add
in
pop
mov
mov
aam
dec
mov
mov
ja
pushf
add
jp
sub
testb
cmp
das
leave
dec
dec
cmpsb
movsl
lahf
mov
fcomps
push
xchg
pop
test
out
and
dec
sub
call
pop
inc
sti
push
ret
or
ret
xor
pop
mov
xor
popl
clc
fmull
sbb
dec
pop
pop
jo
xchg
or
and
imul
push
fdivr
cld
jae
adc
data16
and
test
mov
orb
nop
jmp
xchg
fisttpll
lcall
sahf
lock
jb
lea
pop
xchg
cmp
mov
cmc
out
lods
aas
push
cwtl
test
lock
pusha
sub
cmp
pop
adcl
jmp
dec
lds
push
rep
mov
mov
push
sti
jno
sub
jne
jle
nop
pop
dec
insb
cmp
push
add
aad
lret
xchg
stos
repz
dec
xchg
push
jnp
ja
mov
jl
push
dec
movsb
push
lahf
dec
mov
push
nop
insb
push
jecxz
jecxz
or
inc
dec
jbe
jno
test
cmp
mov
pop
insl
push
xchg
sbb
fsubl
loope
xor
hlt
push
xlat
xchg
lds
mov
push
and
mov
cli
cmp
inc
gs
and
mov
fdivrl
sub
out
pop
dec
test
cmc
int
push
loop
mov
lods
push
stos
mov
pop
jle
sbb
fnstsw
inc
dec
out
outsl
mov
mov
adc
jae
sbbb
mov
out
rcrb
out
or
dec
jg
sub
cmp
pop
fimull
jbe
pusha
push
stc
jno
xchg
mov
loop
lock
cwtl
push
addr16
lcall
jg
pop
nop
pop
push
jg
subl
aas
ss
sbb
push
lods
in
pop
xor
push
inc
stos
adc
sbb
lret
add
xchg
push
inc
and
test
sub
pop
in
imulb
in
ds
faddl
mov
jmp
xchg
jne
stos
xor
ljmp
xchg
add
rcr
mov
push
inc
jmp
mov
out
mov
cmp
adc
dec
fisubl
outsl
clc
mov
movsb
lods
pusha
call
out
ror
lret
xor
lret
nop
inc
pop
aas
cld
ret
cmc
test
lret
test
push
mov
in
inc
sarl
add
xchg
jno
test
call
dec
push
mov
sarl
aad
in
pop
call
ja
mov
pusha
std
adc
xchg
lock
scas
mov
dec
out
add
or
inc
in
and
rolb
and
jo
push
outsb
pop
test
adc
shlb
xor
xor
adc
mov
lcall
dec
pop
xchg
clc
cmp
mov
nop
mov
and
jae
xlat
cmp
sub
in
adc
mov
cmc
push
jo
sbb
dec
punpcklbw
imul
aas
xchg
in
mov
xor
sti
js
jg
cltd
or
mov
xor
and
jmp
lahf
dec
push
into
pusha
outsb
in
sub
mov
decl
xor
xor
repz
test
cmp
sbb
sub
add
ret
and
cmp
rcr
xor
cmp
pop
mov
loope
jecxz
jb
gs
sti
loope
sti
push
lods
sbb
inc
inc
in
cmc
movsb
fistpl
mov
jmp
imul
imul
cltd
cmp
iret
adc
sahf
pop
cmp
add
hlt
xchg
movsb
cmp
stos
rolb
notl
les
add
or
mov
sbb
fnstcw
mov
mov
fidivs
pop
aad
repnz
popf
nop
outsl
xor
jp
sub
xchg
ljmp
les
cmpsl
inc
xchg
push
into
jmp
sbb
jmp
cs
outsl
mov
add
test
inc
xor
xchg
xor
push
xlat
jle
mov
cmp
adcb
xchg
hlt
jp
int
stos
mov
je
loopne
aam
pop
call
nop
jb
ja
icebp
and
push
dec
pop
mov
fldenv
jle
sub
xlat
sbb
movsb
aaa
mov
dec
jl
fucomi
into
push
mov
mov
push
xor
or
xor
shl
dec
nop
outsl
xor
cs
iret
push
inc
popf
sub
pop
jbe
das
mov
pop
jge
push
scas
stos
or
jne
mov
and
push
add
cmp
fldenv
mov
pop
adc
sbb
stos
mov
mov
cwtl
pushf
movsl
jecxz
test
int3
mov
ljmp
mov
xchg
popf
cmpsl
xchg
cmp
mov
add
add
jb
fwait
inc
js
aaa
inc
das
sbb
loope
sbb
popf
cmp
lcall
push
mov
fbld
xor
dec
lahf
ret
shrl
movsb
test
jge
dec
popf
ret
insl
mov
jl
jge
dec
jp
mov
mov
hlt
fstps
mov
push
mov
inc
pop
pop
xchg
outsb
jbe
dec
sarl
loope
pop
or
mov
cmp
mov
jae
popf
push
iret
sub
mov
into
and
xor
xor
inc
jge
sti
adc
mov
fdivs
sub
shrb
stc
mov
shr
sbb
popf
clc
mov
sub
mov
imul
sbb
cmp
ret
push
hlt
dec
jae
push
cld
xchg
inc
and
sbb
push
fwait
jecxz
xchg
and
mov
mov
pop
inc
push
xor
jmp
ret
adc
mov
add
lahf
pusha
out
dec
lret
fs
or
cmpsl
adc
pop
adc
fcom
bound
in
loope
gs
testl
fildll
cmc
mov
les
sub
inc
xchg
std
xor
jmp
xor
nop
subl
in
pop
mov
arpl
lea
xchg
iret
cld
enter
ljmp
xorl
dec
cmp
cmp
enter
fidivs
ds
aas
add
xchg
in
pop
lock
outsl
cmpsl
mov
cmpb
and
jg
mov
pop
mov
movsb
cld
cltd
and
and
sbb
xor
push
mov
sub
inc
jbe
dec
int3
or
jne
fidivrs
push
mov
inc
out
scas
fisubs
cmp
jno
loop
ljmp
push
pushf
sbb
inc
xchg
fcmovnu
test
loope
imul
xchg
nop
cs
or
mov
sahf
testb
scas
xchg
in
lds
or
mov
iret
dec
rolb
fldenv
movsb
dec
xchg
ret
jecxz
jb
loop
pop
mov
inc
popa
fdiv
xor
mov
repz
movsl
mov
test
daa
cld
xlat
fwait
and
push
or
mov
ds
mov
adcb
or
adc
lret
cmp
int3
pop
mov
loop
lods
ds
ljmp
mov
xor
xchg
push
stos
lahf
out
xor
mov
mov
jecxz
movb
pushf
lock
aad
enter
clc
push
lret
mov
add
cli
jl
mov
shlb
and
aaa
mov
and
sbb
les
jecxz
cld
push
aam
cmp
fsub
lret
aas
in
sti
cmpsb
mov
mov
outsl
add
jns
and
jae
dec
xchg
scas
rorl
dec
jle
mov
andl
jmp
sbb
jne
fmull
sbb
scas
push
add
or
mov
pop
dec
sub
stos
cmp
pop
insb
jecxz
repz
and
cmpsb
cmpsb
xor
les
sub
enter
test
dec
push
push
fiadds
jae
adc
fstpt
mov
pop
test
or
fsts
sub
push
int3
fisubrl
pop
adc
push
sar
or
add
mov
sti
negb
or
mov
js
movsb
daa
dec
xchg
push
mov
cltd
nop
sti
inc
imul
push
sub
mov
jo
cmpsl
xor
sub
cmpb
dec
aaa
mov
popa
in
iret
rcrb
and
sub
bnd
and
mov
jmp
lret
out
jmp
mov
lods
ljmp
dec
jecxz
in
inc
pusha
xor
sub
mov
lcall
pop
lcall
add
test
sarb
btr
ret
fsubrs
cmp
addps
xchg
inc
cmp
fs
adc
pop
sbb
pop
addr16
mov
mov
lea
push
jne
int3
mov
cmp
inc
sti
je
rcll
stc
xor
push
dec
mov
and
cmpl
and
sti
mov
xorb
xlat
insl
cmc
push
push
hlt
dec
aam
jecxz
test
outsl
test
out
lods
notl
jl
repnz
mov
lods
repz
insl
lock
test
jmp
push
inc
dec
mov
loop
imul
mov
aaa
cmp
dec
inc
or
fmull
imul
subb
mov
std
inc
div
dec
sub
cld
lock
lahf
or
sub
fimuls
jno
adc
rolb
xchg
pop
push
cmp
popa
inc
xor
cli
into
pop
mov
inc
cmp
std
loopne
in
push
inc
jno
nop
popf
lea
jecxz
push
pop
mov
inc
cld
push
inc
aaa
or
movsl
out
jnp
mov
pop
add
sbb
or
and
jne
gs
movsb
mov
mov
cmp
lret
xchg
dec
loop
mov
movsb
jne
inc
nop
and
mov
mov
jmp
ss
sub
lock
hlt
sub
adc
xor
cs
mov
mov
push
mov
xor
dec
mov
sub
mov
cmp
in
mov
cs
sbb
xchg
pusha
add
nop
adc
xor
aam
mov
shlb
lea
out
gs
jecxz
popa
mov
movsl
jae
nop
rolb
jbe
rolb
lock
arpl
outsl
rolb
cmp
xchg
and
jae
cmpl
lods
imul
pushf
outsl
jns
mov
adc
push
add
mov
xchg
outsb
inc
repnz
in
mov
loopne
and
adc
pop
or
cmpsl
lds
cmc
nop
testl
iret
sti
stos
or
pop
rcrl
cmp
dec
lods
adc
lods
jge
shrl
lds
int3
pushf
jbe
pop
js
mov
mov
or
fcmovnu
sbb
fs
movsl
rcrl
adc
adc
pop
jmp
in
xchg
imul
pop
aaa
shll
cli
jecxz
inc
lods
mov
dec
rcr
and
aas
jne
xchg
mov
rcll
xchg
dec
push
notl
test
fmull
sub
mov
push
jmp
and
sub
pop
sti
mov
sbb
aas
pop
mov
jae
fwait
popa
add
sbb
popf
popa
or
cmp
inc
clc
imul
ljmp
mov
cwtl
mov
jbe
repz
mov
mov
and
xor
sbb
aaa
rolb
inc
imul
repnz
and
daa
xchg
sar
clc
repz
ret
cmp
add
pop
ja
mov
mov
lahf
mov
insl
int3
sbb
movsl
sbb
iret
pop
fmull
xchg
lea
mov
popa
popa
mov
add
cmp
mov
lods
pop
aad
call
lret
and
sub
clc
xchg
xor
std
in
jnp
pop
iret
mov
ds
push
dec
dec
xchg
cltd
sub
ja
jp
test
sub
imul
push
dec
popf
jnp
and
fcomi
cli
loope
filds
les
addl
lock
stos
shll
mov
pop
loope
ret
out
mov
xchg
mov
outsl
push
in
gs
push
pop
fisttpl
xorl
jb
rolb
loope
mov
sub
and
or
pop
scas
lods
push
mov
cmp
shlb
dec
int3
inc
add
pop
push
mov
dec
push
jno
add
or
hlt
jne
mov
mov
and
mov
cmpsb
std
and
add
outsl
gs
inc
or
mov
lock
daa
push
push
inc
inc
in
dec
dec
shlb
leave
xchg
sub
mov
xchg
sarl
movsl
cli
aaa
mov
adc
mov
mov
jecxz
adc
cmp
psrlq
out
lret
test
out
or
aaa
push
mov
fidivl
dec
push
rcrb
inc
push
ja
stc
repz
std
push
jge
std
sub
cmpsl
mov
sbb
faddl
or
in
ljmp
pop
and
mov
ret
pop
lods
inc
cs
stos
adc
xorb
mov
xchg
ja
fisubrs
pusha
mov
mov
jne
aam
adc
ret
mov
hlt
cmp
int
out
stc
push
xor
mov
mov
ret
mov
aaa
sbb
rolb
into
adc
add
adc
negl
jge
dec
cmp
icebp
ficoml
pop
push
jmp
jo
test
dec
and
mov
jge
out
aad
sbb
cld
icebp
ret
fmull
lock
cmpsl
sub
imul
and
jmp
xor
movsl
leave
lea
arpl
push
jnp
movsl
scas
inc
aas
add
add
scas
mov
sbb
sub
popa
pop
jmp
or
sub
push
stos
or
popf
adc
test
scas
fidivrs
pop
scas
and
cwtl
push
outsb
inc
cltd
pop
mov
jle
lea
pusha
push
fmul
fcoml
or
dec
sahf
idiv
jge
cmpsw
mov
dec
jno
jne
ss
stc
sbb
jp
leave
daa
cwtl
and
fbstp
xor
adc
lds
pop
movsb
neg
dec
cltd
sub
popa
xor
iret
pop
repz
xchg
or
xchg
mov
xchg
sbb
xchg
scas
jb
adc
sbb
hlt
adc
jge
fmull
jns
push
leave
xchg
xlat
mov
test
push
push
jns
sbb
push
std
push
adc
scas
cmp
sub
pmullw
scas
dec
nop
popa
in
xor
inc
clc
mov
cmpsb
xchg
cli
in
outsl
cmp
push
mov
jecxz
jns
fwait
mov
stos
std
gs
ss
pop
imul
into
nop
movd
ret
enter
xchg
out
test
lea
xor
mov
sub
sahf
mov
iret
sub
shrl
and
ret
dec
push
adc
stc
sar
repnz
cwtl
mov
jnp
cmc
outsl
cwtl
push
mov
mov
and
outsl
jae
insl
mov
sbb
shll
xchg
cltd
scas
or
das
in
cmpsl
fcomi
cmpsb
sbb
jl
sbb
jo
out
sti
int
inc
jbe
loopne
push
movsl
push
pop
lcall
test
in
pop
lcall
cmpsl
fadd
or
out
insb
out
dec
repnz
fidivrl
or
dec
lcall
scas
test
sbb
orl
xchg
cmp
or
mov
inc
mov
nop
aaa
jo
xlat
out
push
icebp
rorb
push
add
mov
outsl
fwait
notb
or
add
mov
ljmp
xchg
adc
ret
xor
and
mov
loop
or
jl
iret
xchg
loope
ljmp
fwait
jle
shll
push
test
mov
out
testl
or
or
iret
call
les
mov
addr16
lock
testl
cld
add
stc
mov
or
adc
adcb
lret
je
loop
iret
push
mov
or
sub
push
mov
test
hlt
std
cmp
lds
cmp
or
push
nop
xchg
cmp
push
repz
sub
push
in
dec
in
adc
jmp
test
rcr
cli
jecxz
dec
js
inc
sbb
push
mov
adc
mov
shrb
push
pusha
sbb
mov
jp
mov
sub
data16
jp
in
ja
inc
xchg
data16
cwtl
in
fs
jg
scas
xchg
xorb
xlat
pop
lods
test
xor
pop
push
pop
stc
jns
aam
xor
shll
dec
jmp
sub
imul
out
shrb
in
inc
lahf
pop
jg
aaa
inc
cmp
test
inc
jno
and
addr16
xor
insl
xchg
stc
cmp
add
mov
xor
mov
jae
xor
or
xor
mov
and
mov
or
sub
mov
cmp
pop
and
lea
pusha
adc
xor
mov
jns
sub
cltd
push
ret
cmpsb
out
push
leave
out
cwtl
dec
pop
add
dec
sbb
movsl
xchg
ds
sub
inc
push
in
push
ljmp
aaa
pop
clc
mov
inc
lret
outsb
lea
adc
adc
sbb
inc
sub
xor
lret
cmp
lret
jmp
ss
movsl
scas
ret
add
sbbl
bound
xchg
xchg
insb
mov
adc
and
mov
jb
ja
dec
push
cmp
shr
push
mov
ljmp
scas
sub
dec
repnz
mov
mov
lds
push
loope
inc
popa
push
dec
aaa
test
addr16
lahf
out
repz
sbb
or
roll
pop
jmp
xlat
mov
fcoml
xor
xchg
push
aas
ljmp
adc
dec
add
nop
cs
xchg
sub
loopne
sahf
cwtl
mov
shll
jge
ror
test
aam
xlat
jbe
dec
add
cmp
mov
gs
cmpsl
shrb
ja
sub
mov
adc
jne
sbb
mov
jmp
std
sti
sub
sbb
sbb
pushl
rcrb
add
push
xchg
enter
incb
sar
dec
shlb
insb
inc
rorl
push
push
inc
and
mulb
nop
test
mov
fdivl
pop
jo
mov
sarb
fdivrs
insb
xor
mov
movsb
and
or
pushf
cmpsl
imul
enter
mov
dec
inc
jbe
popa
imulb
scas
movsb
jg
dec
jg
insl
inc
and
outsl
ret
mov
inc
std
pop
divl
jo
popa
xchg
mov
pop
and
mov
js
cmp
jae
add
rolb
sub
mov
clc
push
movsb
jno
dec
and
adc
cli
dec
cmp
jns
rcrl
mov
imull
inc
fistpll
stos
ds
push
out
hlt
pop
xchg
cld
lcall
stos
in
js
orl
icebp
js
mov
out
cmp
sbb
mov
jl
cmp
popa
fldcw
std
lods
push
inc
jae
insb
pop
fcoml
mov
pop
imull
pop
xchg
dec
movl
shl
push
out
sbb
mov
inc
loopne
push
bound
out
and
pop
mov
data16
shrl
jmp
mov
shll
fbld
sahf
dec
shrb
xorl
ficoms
xor
popa
mov
sub
xchg
cmp
arpl
inc
push
je
mov
loopne
test
xlat
dec
outsb
out
aas
sub
sbb
sub
setns
into
loop
lcall
xchg
insl
loope
inc
dec
lea
sub
xchg
sbb
jb
cltd
mov
loop
loopne
les
test
out
push
sahf
or
movsb
sbb
mov
daa
and
lods
push
movsb
enter
roll
adc
add
cs
inc
xor
mov
dec
jl
xchg
lret
insb
ljmpw
test
xchg
jno
xlat
inc
stc
xor
pushf
loop
xchg
pushf
ja
leave
cmp
mov
xorl
scas
call
rcr
mov
imul
mov
or
insb
jmp
inc
push
or
xchg
enter
in
out
cmp
test
mov
jge
or
jo
jg
mov
js
xor
test
mov
xchg
cltd
inc
stos
movsb
test
mov
xchg
sbb
bound
pop
pop
test
adc
lcall
nop
cs
popa
in
loop
mov
scas
mov
jo
dec
sbb
dec
outsl
sub
mov
push
leave
or
inc
sbb
notl
inc
ja
jl
cmp
fadds
adc
add
jl
mov
xchg
xchg
lods
fs
je
mov
pop
mov
xor
dec
sub
lea
or
imul
mov
ret
imul
gs
add
adc
mov
mov
mov
adc
mov
inc
cmc
ds
jmp
add
push
nopl
inc
add
daa
cli
sarb
fxch
aad
cmpsb
sbb
shl
ds
fcompl
dec
and
push
cld
sahf
or
push
scas
mov
jg
pop
cmp
xor
in
jnp
xor
mov
cmpsl
inc
lea
std
das
fwait
pop
js
insl
jmp
popa
cmc
mov
rcrl
out
jge
inc
out
sbb
test
jo
test
out
test
cltd
xchg
pop
jecxz
cmp
dec
pop
add
push
dec
cmp
fwait
cmp
pop
xlat
call
sbb
es
push
fs
pushf
jle
in
jmp
jbe
dec
xor
mov
outsb
xor
idivl
outsb
outsl
cmp
imul
xchg
dec
push
je
loop,pt
mov
sbb
ficompl
scas
or
out
and
cltd
aam
xchg
mov
xorl
lock
and
mov
loopne
test
lods
cwtl
enter
mov
push
push
mov
adc
int
ljmp
movsb
adc
idiv
leave
arpl
jg
jo
sub
mov
pop
decl
out
xor
rcrl
call
and
or
pop
xchg
jno
jae
cwtl
cmpsl
call
cmp
mov
mov
dec
sbb
inc
mov
insl
andnps
mov
por
jnp
xor
sub
enter
subl
pop
adc
sub
pop
pop
in
mov
push
test
adc
call
xor
mov
mov
inc
pushf
je
popf
cmpsl
push
lds
je
cld
bound
dec
dec
psubsw
mov
cwtl
pushw
mov
jle
pop
cld
adcl
cmpsb
or
fs
push
pop
pop
dec
pop
push
jp
sbb
fnsave
xor
dec
mov
push
xor
rclb
fiadds
sub
dec
sbb
jecxz
ret
cmc
bound
inc
cli
jno
push
mov
pusha
push
in
fwait
adc
mov
call
pop
mov
neg
pop
scas
add
sbb
cmpsb
lea
inc
mov
mov
ss
pop
add
mov
adc
xchg
int
cwtl
or
mov
in
cmp
shl
xor
fimull
push
cld
adc
loopne
jecxz
adc
lock
inc
ret
xor
loope
outsl
lods
scas
adc
dec
push
ret
out
xchg
mov
subb
mov
xor
movsb
enter
push
out
shr
cwtl
ja
iret
dec
pop
rol
inc
mov
or
int
call
xor
xchg
das
inc
mov
dec
fldcw
lods
divb
xor
out
std
jle
and
in
movsb
pop
pushf
and
fwait
lahf
imul
inc
fucomp
dec
pop
and
movsb
jp
repz
cmp
push
cwtl
inc
out
aas
xchg
dec
cltd
scas
jne
imul
pop
test
lods
scas
sub
aas
repz
bound
mov
hlt
push
lea
das
cmp
in
xor
lcall
xor
lods
shrl
push
push
es
or
dec
loopne
mov
ja
cli
pop
and
mov
xor
mov
movsb
outsb
pop
adc
leave
and
pop
repnz
hlt
lea
popf
push
sahf
sbb
pop
ficomps
mov
sub
xchg
cwtl
lds
jge
cld
pop
pusha
pop
orl
mov
imul
and
cmp
mov
sbb
fnstenv
aad
mull
mov
dec
add
push
push
or
cld
dec
cmpsb
or
arpl
pop
and
lahf
orl
repnz
pushf
xchg
lahf
and
nop
jne
pushf
imul
push
or
mov
pop
in
sub
ds
add
mov
imul
lret
push
push
out
lahf
push
xor
subl
xor
and
lret
test
mov
xorb
lret
adc
cmp
add
loop
imul
mov
aad
gs
xchg
dec
xlat
xor
call
inc
xchg
pop
daa
adc
arpl
mov
dec
xchg
sub
jecxz
mov
push
shl
xchg
mov
in
in
sti
mov
mov
cmp
mov
jbe
arpl
int
xor
push
pop
mov
call
repz
mov
sarl
fldl
or
push
popf
pop
test
dec
repz
addb
dec
stos
aaa
mov
mov
or
sar
aaa
mov
mov
lea
adc
inc
cmpsb
and
jg
jle
idiv
andl
inc
push
mov
sbb
adcl
xor
loopne
orb
add
sbb
and
lods
dec
mov
imul
mov
push
nop
test
or
pop
fstl
sbb
lret
aaa
in
mov
lods
ljmp
int3
shrb
inc
test
dec
or
sub
push
xchg
cmp
sbb
fldt
mov
cwtl
jle
jns
pop
mov
not
imul
stc
mov
cmp
mov
pusha
enter
mov
dec
ret
sbb
inc
sbb
add
xchg
push
in
les
in
fstps
add
shll
push
bt
cmpsl
lahf
mov
loopne
adc
jp
jg
outsb
hlt
mov
inc
adc
std
pop
mov
inc
fildl
nop
icebp
inc
mov
dec
or
jo
push
and
xor
xor
mov
sbb
mov
mov
mov
jecxz
icebp
ljmp
xor
out
cmp
ja
adc
mov
sub
cld
xchg
nop
pop
in
lret
mov
aaa
sbb
and
inc
pop
xor
jns
imul
std
fstps
xlat
push
ds
mov
or
fidivrs
cmp
mov
stos
out
mov
sbb
bound
xor
and
loopne
ss
pusha
mov
fs
ljmp
arpl
sub
mov
adcl
test
pop
push
int3
mov
jnp
ret
mov
or
imul
test
sti
mov
cwtl
mov
mov
push
outsb
pop
lods
mov
dec
cmp
jp
pop
imul
lock
mov
push
loop
jnp
pop
and
call
sub
jnp
imul
in
pop
jmp
hlt
mov
aad
dec
jbe
mov
fmuls
test
dec
xor
inc
outsb
das
push
popf
stos
sbb
scas
lahf
clc
inc
imul
mov
mov
ret
arpl
fistpll
movsb
lds
and
frstor
jae
gs
pop
xor
mov
jae
add
and
sbb
mov
and
cli
clc
fcomps
dec
mov
inc
inc
pop
fistpll
mov
push
arpl
mov
arpl
sbb
jne
test
mov
adc
ret
loope
jg
jl
lcall
xor
fistps
jns
push
sbb
lea
int
les
pop
and
sub
mov
js
inc
aaa
or
cmp
xor
rcl
loopne
js
iret
xchg
incb
xor
movsb
sbb
mov
cmp
mov
lahf
mov
add
fidivrs
cli
jle
xlat
shlb
jo
pusha
testl
filds
pop
lret
in
or
mov
outsl
fdivs
fstl
nop
cmp
ret
adc
shrb
rcrb
dec
mov
jp
xchg
popa
dec
flds
mov
sbb
test
mov
mov
rorb
test
bnd
mov
mov
lds
loopne
jbe
lods
pop
addr16
lret
insl
loope
sbb
cwtl
int
mov
and
or
sbb
push
ljmp
scas
adc
lret
pop
loopne
sub
inc
jbe
ret
lret
and
stos
iret
dec
repnz
jmp
mov
in
into
sbbb
mov
pop
cmpb
mov
xchg
cwtl
scas
jnp
dec
push
movsb
loope
inc
into
and
sbb
mov
add
outsb
int
jecxz
mov
mov
mov
push
cmpsl
xor
lret
fistps
xchg
mov
pop
aad
or
ja
jmp
jns
popa
xor
add
fcompl
daa
test
cs
and
xorb
cmpsl
adc
mov
inc
stos
sti
mov
push
cmpsl
bound
ret
sahf
adc
push
jo
cwtl
repz
loopnew
loop
call
mov
dec
cmc
dec
xlat
cmp
jno
jno
ret
sbb
jp
inc
xchg
cs
lea
xor
iret
mov
fidivrs
and
ret
movsb
push
mov
ret
xchg
dec
stc
cltd
ljmp
cmp
movsb
xchg
fisubl
dec
mov
into
lcall
mov
add
or
pop
and
inc
xchg
push
out
test
imul
xor
xor
mov
into
inc
in
push
cmp
mov
xchg
sbb
xchg
fadds
mov
hlt
mov
ds
rol
insb
fld
and
das
pushl
xlat
mov
pop
dec
stc
or
jbe
rorl
mov
pop
add
adc
shr
andl
cmp
std
mov
icebp
inc
sahf
jmp
daa
and
lock
jne
xor
cmp
jne
pop
cmp
sub
jns
dec
mov
mov
xor
mov
adc
iret
aas
popa
jne
mov
inc
pop
sub
data16
cs
test
sub
xchg
loope
push
and
dec
pop
int3
fistpl
not
push
popa
add
cmp
cmp
push
ret
in
mov
mov
mov
std
mov
pop
icebp
inc
xchg
pop
ss
daa
pop
sbb
in
repz
out
in
sub
and
in
dec
into
loope
ja
jne
icebp
pop
dec
ret
push
push
or
dec
insb
xchg
or
sub
dec
sbb
cmp
adc
dec
xrelease
adc
and
push
aas
jp
popf
test
adc
jno
test
push
push
addr16
lret
arpl
jmp
push
repz
inc
dec
cld
cmpsb
insl
shrd
imul
mov
leave
aas
xchg
nop
pop
add
mov
mov
loop
jae
mov
adc
pop
outsb
outsl
loop
mov
in
and
jo
or
data16
dec
inc
iret
sub
pop
cmp
push
mov
lcall
adc
add
imul
fs
sbb
mov
sahf
ret
imul
out
addb
fidivrs
frstor
cli
mov
adcb
inc
sbb
loop
and
adc
xchg
jns
insb
pusha
das
xor
out
mov
mov
mov
inc
push
pop
mov
mov
iret
sahf
jbe
outsb
out
push
push
pop
inc
sbb
jb
adc
xchg
outsb
cli
and
scas
add
js
mov
leave
push
mov
mov
pop
push
push
xchg
cli
je
pop
test
stc
repz
out
mov
mov
fcomip
mov
mov
add
sub
fwait
sbb
push
fsubl
mov
and
dec
mov
jmp
or
xchg
nop
fstpl
insl
aad
dec
shrb
or
sub
aas
call
xor
iret
jnp
pop
fstpl
mov
xchg
ret
sidtl
sub
leave
xor
fistps
xchg
jge
xorb
inc
aaa
fwait
lcall
jge
mov
leave
sbb
stc
call
cmpsb
adc
ficoms
insb
add
lods
xor
push
dec
sti
aad
cmp
fnsave
mov
push
jae
leave
adc
lods
lds
dec
icebp
pop
fs
shlb
push
xchg
mov
lock
cmpsb
fbld
lock
mov
fnclex
cmpl
dec
imul
shl
cltd
stos
jg
or
mov
push
cmp
gs
ficoms
sbb
into
and
sub
fldt
push
cmpsb
aaa
fsubrl
push
not
xchg
mov
and
xchg
mov
fimull
aam
mov
fcoms
and
je
adc
cmp
mov
or
sub
adc
xor
lret
sbb
pop
mov
fmulp
xchg
cwtl
inc
mov
push
mov
fs
imul
push
stos
inc
fists
xchg
sub
sbb
aam
icebp
sub
mov
out
mov
in
xlat
push
cld
call
icebp
xor
cwtl
inc
sbb
xor
daa
jbe
dec
fists
js
push
push
mov
fisubrs
lds
aas
frstor
push
aad
mov
inc
out
adc
pop
sbb
add
sbb
dec
stos
hlt
dec
mov
pop
cmp
rcll
push
test
xchg
ret
dec
ds
stos
pop
mov
imul
pop
jnp
pop
ficoms
dec
xchg
mov
adcl
and
js
sbb
xor
mov
xor
mov
dec
aam
stos
sub
add
jl
dec
cltd
rcll
cmp
fisubl
ficoms
das
mov
cmp
aad
cld
jecxz
cmp
jb
fcmovb
pushf
dec
sbb
sub
pusha
adc
aad
loope
lahf
pop
mov
mov
ds
int
adc
loopne
xchg
add
imul
mov
dec
mov
jl
cmpl
repnz
inc
or
cmp
sarb
stos
pop
push
lret
je
daa
inc
sbb
std
loop
hlt
scas
fwait
movsl
xor
ret
nop
int
xor
scas
or
sti
ljmp
push
in
pop
shlb
data16
in
inc
sbbl
or
mov
rcll
scas
daa
out
lret
lock
sub
aaa
pop
and
ret
mov
dec
pop
pop
and
or
push
and
cmp
jp
movsl
repnz
movsb
repnz
insl
mov
xchg
scas
inc
adc
lahf
imul
jp
stc
adc
out
xor
cwtl
dec
nop
jb
sahf
iret
xor
xchg
cs
add
nop
scas
xchg
pop
dec
xor
bnd
mov
stos
mov
push
xchg
mov
xchg
pop
movl
aaa
jo
jmp
dec
int3
leave
iret
hlt
jmp
enter
push
sub
jl
stc
out
imul
shll
or
lds
stos
test
clc
fsts
adc
push
das
loop
jae
cmp
subb
xchg
dec
js
cli
inc
stc
add
push
dec
lcall
out
into
mov
fs
std
mov
mov
lods
xor
or
sub
aam
push
test
lret
xchg
mov
in
orb
mov
sub
pop
or
mov
add
fdivs
pop
sub
cmc
mov
and
popa
dec
mov
enter
mov
mov
cmpsl
je
fcoml
pop
dec
pop
test
outsl
addr16
adc
adc
jo
jl
adc
into
jmp
stos
orb
jmp
mov
negl
push
nop
adc
mov
sub
mov
push
test
xor
jle
in
dec
xor
mov
test
aaa
movsb
pop
dec
mov
pop
xchg
and
test
pusha
shll
push
add
in
sbb
imul
scas
cs
stos
enter
out
bound
sbb
add
adc
jae
dec
scas
and
jns
ljmp
jno
jbe
xlat
cltd
gs
mov
sbb
icebp
jecxz
decb
in
leave
jmp
imul
mov
jbe
frstpm(287
imul
enter
sub
shlb
cwtl
test
into
lock
jne
adc
imul
inc
out
pop
sarl
pusha
sub
adc
js
push
xor
out
or
lods
adc
add
fcmovne
jns
mov
clc
or
cmp
mov
rclb
mov
push
adc
push
dec
xchg
mov
loopne
xchg
roll
inc
cmc
push
popf
dec
loope
je
mov
cmpsl
mov
ror
es
es
push
imul
rolb
mov
clc
xchg
cmp
fisubrs
cmp
inc
mov
pop
ja
adc
ret
push
pop
mov
jmp
rorb
insb
fisubrl
mov
xchg
adc
stos
je
es
divb
fmuls
out
xchg
out
dec
pop
push
cmp
jae
jb
gs
es
mov
mov
es
jmp
jo
loope
push
jbe
cmc
xchg
jno
mov
jmp
lods
lods
cwtl
sbb
adc
ds
push
mov
mov
js
ret
stos
jl
repnz
cli
out
add
stos
jae
gs
pop
mov
popa
cli
xchg
mov
xchg
pop
mov
repz
cltd
inc
mov
les
or
sbb
sbb
imul
dec
cmp
sbb
push
fcomip
mov
mov
push
cwtl
mov
mov
cs
popa
jl
outsl
lcall
adc
mov
pop
mov
inc
mov
add
jle
stos
and
aam
xchg
test
cld
push
sbb
dec
push
sti
lret
pusha
inc
or
rol
xor
jmp
mov
jbe
pop
cmp
dec
push
movsb
sub
mov
loopne
push
sti
outsl
sbb
rorb
pop
fcmove
sub
lret
sbb
inc
scas
jb
int
adc
jle
js
in
aad
leave
pusha
addl
cmp
loop
jmp
int
dec
aaa
in
scas
or
or
push
inc
repz
leave
jnp
inc
cld
push
mov
xorl
pop
ficomps
jno
xor
push
cmp
sarl
pushf
sahf
lret
mov
test
test
cltd
mov
ror
aaa
push
push
sbb
jb
repnz
add
je
mov
stos
lea
pop
mov
cs
or
ss
lahf
inc
inc
inc
mov
in
sub
mov
lcall
imul
mov
jae
mov
imul
or
sub
xchg
dec
stos
ja
incb
or
lds
or
pop
call
adc
mov
pop
pop
pop
mov
pop
mov
fsubr
out
adc
dec
push
push
lods
cwtl
inc
xchg
popf
cmc
fisubrl
je
jmp
outsb
sbb
out
in
cmp
dec
mov
fnstcw
ja
pop
ret
dec
insb
ret
add
cmp
sub
pop
stc
in
mov
cmpsb
cmpsb
push
fwait
arpl
dec
push
into
cmp
pusha
and
addr16
ret
lods
dec
inc
test
or
nop
fsubr
pop
out
test
cmpsl
mov
xor
lods
push
pop
sbb
repz
or
cmpsl
mov
out
call
dec
jns
sbb
sub
push
sub
aas
fwait
mov
sub
in
adc
rorl
pop
jno
mov
xor
mov
push
adc
jl
fisubs
jns
cmc
mov
mov
iret
loopne
pop
int3
rol
xchg
fimull
je
or
popa
add
test
lcall
outsl
sbb
lock
ss
xchg
or
xor
clc
xchg
mov
jne
insl
push
mov
imul
jle
and
stos
out
xor
inc
or
nop
mov
sbb
jae
inc
xchg
jno
dec
inc
pop
add
and
pop
mov
popf
push
adc
dec
sbb
in
in
testl
shll
es
xchg
cmp
cmpsb
stos
sub
xchg
aad
mov
mov
lods
mov
jb
das
sub
xchg
inc
xchg
jecxz
lods
nop
ljmp
cmp
clc
jbe
icebp
jae
das
loop
stos
dec
xchg
lcall
mov
shl
aaa
pcmpeqb
insl
fiadds
rol
icebp
xor
mov
mov
pop
cmpsl
pop
stos
inc
andb
sub
inc
loope
loope
mov
fisubrs
std
or
ficompl
js
xchg
ss
mov
xchg
popf
rclb
cmp
fstpl
mov
sub
cli
or
sbb
push
fcoms
in
lds
add
scas
mov
sbbb
push
stc
dec
sub
pop
dec
lahf
mov
popa
mov
dec
push
xor
nop
or
out
sub
xchg
mov
cmp
aam
jmp
jp
icebp
les
mov
dec
jle
movsb
inc
scas
add
imul
daa
popf
movsl
xor
dec
inc
idivb
xor
adc
pop
push
ffree
repnz
or
dec
in
adc
sbb
push
xchg
cwtl
push
sahf
nop
mov
fmull
mull
mov
push
mov
les
inc
nop
aam
call
aad
push
xor
scas
or
pusha
sub
push
in
push
push
frstor
xchg
inc
test
dec
sbb
dec
jecxz
push
jle
mov
adc
sub
lret
cmpl
test
cs
jecxz
fildll
cld
ret
pop
fdivs
sbb
fnsave
mov
xor
mov
leave
jecxz
and
in
pop
or
dec
cmp
xor
std
jmp
test
rclb
jecxz
mov
inc
lea
pop
repz
pop
xor
cmp
aas
and
sbb
sub
xchg
adc
rcr
mov
sbb
mov
enter
test
and
mov
lds
addl
loopne
jae
adc
ja
inc
push
adc
cmp
bound
test
fsubrl
inc
and
nop
decl
mov
popa
pushf
push
test
mov
es
movsl
punpckldq
pushf
jl
jg
dec
jge
out
add
jle
ja
jle
mov
mov
cmp
xchg
cwtl
scas
out
cmp
dec
jge
cmc
add
adc
pop
je
repz
ja
call
mov
jl
or
dec
mov
adc
and
fcmovb
mov
sbb
popf
insb
sub
xor
and
mov
adc
enter
jnp
mov
cmp
jnp
mov
in
sti
das
femms
jo
add
xor
lods
push
outsb
push
jl
daa
adc
js
test
mov
cltd
push
or
fdivrs
ja
mov
xor
push
das
xchg
sub
add
sub
mov
icebp
das
inc
jnp
pop
mov
nop
inc
bound
addb
in
inc
xor
inc
call
xchg
sti
scas
jno
out
xchg
pop
and
mov
imul
mov
test
leave
xchg
ss
aad
addr16
pop
ss
fbstp
and
ljmp
daa
sbb
inc
push
cltd
test
orl
cs
lods
sbb
xor
test
stos
gs
jne
fildl
jmp
pop
cmp
xchg
pop
sub
cmp
nop
lahf
outsb
repz
notb
adc
jne
push
cmpsl
testl
dec
repnz
and
fsubl
dec
and
push
aas
nop
aam
jecxz
fnstcw
xlat
int3
add
call
lcall
mov
xor
lahf
cwtl
push
mov
jnp
test
cltd
cwtl
xchg
ficoms
jno
sti
xor
sbb
mov
sarb
leave
fwait
push
push
idivl
int
pop
cwtl
pop
mov
inc
add
pop
push
imul
ss
xchg
bnd
mov
cli
xchg
imul
out
insl
sub
scas
mov
int3
jge
cmp
lret
mov
inc
dec
fdivs
inc
push
shl
cmp
jecxz
test
es
cltd
add
inc
inc
push
mov
aad
mov
rcll
rcrl
mov
or
addr16
int
jecxz
jae
push
jbe
ret
sbb
sub
pop
push
inc
pop
mov
pushf
xlat
adc
cmc
inc
daa
pushf
subb
xchg
push
mov
lock
popa
jge
mov
lods
adc
adc
cmc
inc
add
test
pushf
inc
inc
xlat
or
jge
add
mov
movsl
inc
sub
lahf
aad
cwtl
ds
mov
jns
push
add
adc
js
mov
pop
jbe
jbe
jns
sbb
push
mov
add
xchg
inc
xacquire
adc
pop
test
adc
adc
push
faddl
adc
adc
jle
movsl
enter
and
mov
sbb
in
add
inc
sti
pushf
push
in
or
inc
call
insl
mov
push
nop
shlb
mov
int
sub
je
and
xchg
fcmovu
adc
mov
std
and
sub
xchg
fs
sbb
fcomps
out
push
sub
inc
movsb
xor
or
adc
lods
rcrl
cmp
and
ror
enter
outsl
fwait
jne
and
ja
adc
jmp
lret
xchg
add
jno
mov
insl
cs
push
sti
dec
cmp
xchg
mov
cmp
xchg
mov
cwtl
pop
xor
adc
cmpb
lcall
imul
int
or
js
rcll
push
insl
aas
unpcklps
inc
es
repz
sbb
mov
pop
sub
dec
aad
stos
add
inc
cltd
push
mov
in
mov
push
dec
jnp
inc
ljmpw
mov
push
pop
test
mov
sub
gs
jne
insl
lods
bound
movsl
push
stos
add
xor
outsl
jbe
and
xchg
out
icebp
xor
test
hlt
mov
loopne
cld
and
scas
push
test
js
test
sub
incl
pop
push
jne
jae
sbb
ficomps
jne
iret
jo
sbb
nop
and
sbb
sub
fidivl
out
gs
inc
mov
mov
and
jmp
pop
pop
mov
lret
mov
js
push
inc
lds
popa
loop
jb,pt
pop
pop
imul
lret
ds
lock
sub
and
pop
out
movl
ljmp
es
cwtl
mov
in
and
inc
insb
cli
mov
popa
adc
lds
jp
push
mov
inc
test
cmpsl
jno
jno
ljmp
add
inc
out
inc
push
adc
sbb
xorl
xor
popa
inc
jb
ss
xor
test
push
push
addl
leave
cli
in
and
mov
loop
out
sahf
pusha
cmp
in
adc
mov
nop
rcr
in
push
mov
in
iret
scas
mov
clc
repz
mov
push
lcall
and
push
jecxz
lock
imul
pop
push
fcmovnb
je
loopne
mov
dec
fwait
insl
or
insb
dec
out
inc
xor
sarl
test
repnz
lock
call
dec
sub
popf
iret
dec
jp
mov
push
mov
xor
mov
icebp
clc
in
xor
sbb
pop
or
dec
fidivs
fwait
inc
loopne
rolb
cwtl
mov
jmp
into
sbb
jne
mov
mov
outsl
inc
pop
sbb
pusha
stos
ja
into
jl
out
test
adc
pop
mov
mov
iret
outsl
push
cs
fsubrs
loop
int
cmpsl
pop
cmpsb
push
or
mov
stos
out
inc
lcall
shrb
push
pop
cld
dec
outsl
pop
push
les
add
jno
mov
loope
cmp
add
sahf
int
mov
and
sbb
mov
add
js
adc
pop
je
add
dec
and
shll
jecxz
ja
in
sub
pushf
insb
mov
in
mov
inc
outsl
mov
add
bound
data16
das
cmp
push
and
mov
cmp
jp
insl
sahf
jb
xchg
or
fnstcw
nop
xchg
sub
mov
in
push
mov
test
sbb
shl
mov
ja
mov
pop
aam
lods
mov
cmp
repz
mov
push
jns
mov
addr16
into
pop
imul
pop
xchg
je
and
pop
mov
push
loope
sub
leave
fnstenv
testb
xchg
sub
ss
lds
jecxz
gs
fidivl
mov
dec
dec
leave
pop
jns
inc
insl
lock
adc
dec
fstps
and
gs
les
es
cmc
pushf
in
xor
imul
das
xchg
and
je
loop
insl
test
xor
or
loope
dec
ficoml
ja
out
dec
pop
mov
jbe
add
add
ja
add
add
jno
jb
mov
sbb
push
adc
adc
pushf
outsl
fiaddl
jp
mov
imul
mov
lahf
add
adc
addl
xor
mov
lods
imulb
loope
outsb
leave
sbb
pop
pusha
mov
cmpsb
popl
mov
mov
jb
sbb
aas
mov
sub
jecxz
inc
ss
fld1
les
xlat
pushf
add
cmpsb
lods
push
out
sub
loopne
out
jno
hlt
pop
popf
add
push
sub
mov
addr16
pop
add
jne
into
lods
sarb
inc
lahf
xchg
std
mul
cld
push
dec
hlt
notb
loopne
mov
jecxz
adc
xlat
pop
lods
stos
stos
xchg
xchg
in
xor
xor
clc
inc
aam
mov
fs
arpl
xchg
popa
aas
sti
pop
mov
stos
repz
xor
sub
loopne
xor
add
adc
adc
lds
insb
push
rolb
jnp
sbb
call
mov
iret
sbb
icebp
sub
repnz
sbb
in
ds
or
scas
add
jne
out
shrl
adc
xchg
out
icebp
fsubs
lods
js
jmp
arpl
roll
pop
stos
jnp
cmp
ja
sub
pusha
pop
lretw
mov
fcmovnb
dec
je
jg
jmp
lcall
sbb
aas
cmp
call
int
jno
stos
mov
mov
or
fcmovb
jle
ror
push
mov
or
jns
pop
dec
mov
stc
jbe
mov
shrb
mov
jl
or
push
sbb
addr16
sub
add
jbe
cmp
inc
test
adc
cmc
test
pop
test
mov
fwait
sbb
incl
lea
cmp
and
mov
fidivrs
xor
push
stos
mov
push
add
rclb
loope
xchg
jb
sub
mov
xor
testl
mov
negb
pop
pop
mov
sbb
aam
cwtl
pushf
pop
cmp
xor
adc
aad
lock
daa
icebp
push
divl
xchg
mov
dec
jo
cltd
sub
outsb
leave
push
cmp
test
or
test
mov
xchg
shrl
gs
adc
xchg
pop
shlb
jae
jge
xorl
test
mov
ljmp
repnz
and
mov
dec
out
xchg
mov
sub
sbb
fcomip
pushf
shll
mov
jge
push
push
pop
push
pop
jno
das
xor
adc
xor
push
mov
add
hlt
je
icebp
leave
lret
sub
mov
pop
movsl
lret
aam
sbb
and
test
addl
mov
sub
pop
out
fcompl
sbb
rorl
mov
lods
add
movsb
sub
fimuls
cs
add
rcr
cmc
outsb
lret
arpl
add
in
je
dec
cmp
pop
hlt
popa
dec
jno
mov
adc
add
stos
aaa
push
pop
jbe
inc
cmp
jae
call
pushf
xchg
lds
call
pop
lahf
xchg
into
sbb
out
hlt
mov
mov
lods
fbld
add
and
ljmp
mov
jnp
insb
rcr
insl
mov
add
cmp
ss
mov
lcall
or
cli
fmul
shr
push
push
add
push
push
fldcw
aad
and
mov
sbb
mov
cmp
xchg
sub
and
les
add
or
jp
sbb
fs
pop
sub
nop
mov
add
dec
jbe
loopne
sbb
fistl
jle
popa
xor
or
inc
xchg
popa
mov
and
aaa
imul
hlt
aam
sub
or
mov
mov
cmc
pop
popf
xchg
in
les
xor
ret
fidivl
mov
stos
xchg
xor
out
std
fisubrl
sub
or
mov
sbb
addr16
es
lcall
and
cmc
cld
jno
inc
movsl
pop
aad
jg
test
xchg
nop
into
xor
or
ficoms
add
mov
jae
push
adc
adc
aad
cmp
jne
push
xchg
cmp
or
lret
and
push
xchg
lods
ljmp
das
and
jo
push
jbe
aaa
lock
mov
aam
push
rcrb
xchg
cs
pusha
xor
int3
push
das
lcall
and
fldt
aas
fwait
xchg
xor
aad
xchg
inc
aas
lret
jo
sub
xchg
fwait
rcl
mov
pop
aad
fstps
sub
test
sub
lret
cmc
jnp
aad
frstor
test
rorl
in
cmp
imul
aaa
cli
mov
out
or
xor
sbb
mov
inc
popf
sub
test
cmp
push
cmpsb
aad
in
imul
cmpsl
clc
fcoms
xchg
ja
movsl
jl
popf
pop
sbb
xor
adc
and
nop
stos
xchg
lea
inc
loope
int
sub
addr16
sbbb
ss
inc
iret
aad
jns
sub
rcll
and
mov
xor
pop
iret
test
jbe
outsb
pop
xchg
aas
pop
fs
mov
lods
mov
out
push
aaa
mov
inc
fsubrs
fisttps
stos
push
xor
mov
mov
cwtl
mov
cmp
scas
jns
mov
popa
sbb
mov
aam
daa
ss
rol
ljmp
ljmp
ljmp
shrb
pop
push
inc
pushf
inc
loope
mov
xor
popf
orl
mov
add
xchg
mov
jmp
clc
out
jbe
dec
nop
mov
mov
cli
cmp
adc
xor
test
ljmp
inc
add
sub
insl
in
js
xor
xchg
sbb
out
push
cld
cli
and
jg
popf
sbb
shr
dec
pop
mov
fsubrs
push
push
sub
orps
addr16
cmc
xor
xchg
stc
or
sbb
push
mov
sbb
add
dec
dec
jo
js
adc
cmp
cmp
push
or
mov
mov
xor
inc
jl
imulb
adc
repnz
mov
cltd
in
popa
divl
cmpsb
xchg
jae
adc
sub
fsubs
xchg
je
push
dec
xchg
sbb
fwait
adc
loope
add
push
sub
add
mov
jge
pop
popa
mov
pop
lret
in
jnp
jg
enter
add
pusha
mov
int
jg
sbb
and
scas
mov
inc
mov
and
jmp
cwtl
pop
mov
adc
cltd
pop
mov
fsubrs
adc
mov
add
xor
in
jno
icebp
shrb
and
inc
or
and
or
push
addl
rorl
adc
fisttpll
addr16
ds
cmp
popa
rcrb
or
insb
movsb
imul
mov
lahf
sahf
add
dec
fcomip
mov
jbe
push
add
jne
jg
jmp
jne
adc
pushf
cmpsl
mov
push
cmp
fimull
aam
push
and
lock
mov
cmp
cld
iret
fsqrt
jp
test
xchg
cs
negl
imul
loopne
out
jmp
pusha
pop
es
out
hlt
xor
push
repnz
cltd
xor
outsl
pop
fbstp
pop
test
xchg
pop
fnsave
or
xchg
or
sub
mov
adc
repz
cs
xchg
cmp
adc
push
jg
cwtl
sub
jecxz
push
cld
addb
inc
xlat
clc
mov
mov
pop
decl
aaa
inc
push
movsb
mov
ljmp
imul
inc
sub
or
jno
jbe
adc
cmp
aaa
leave
sti
lods
jbe
sub
and
xchg
cld
pusha
jge
sub
aam
faddl
push
xchg
insb
mov
push
cwtl
aam
aaa
sbb
in
or
xchg
imul
jmp
xor
fadds
insb
mov
fdivl
in
mov
ljmp
lds
in
test
xchg
pop
stc
dec
cmp
in
ret
int3
and
popl
daa
sti
shl
and
popa
and
pop
lret
inc
xchg
mov
mov
mov
mov
lds
sub
stos
xlat
fnstcw
sub
pop
les
add
cs
insb
aad
loop
add
xor
fdivl
aas
mov
subl
jne
add
aas
adc
mov
in
xor
insb
add
adc
enter
pop
xlat
mov
imul
lods
or
mov
push
inc
push
daa
dec
loop
in
leave
mov
xchg
mov
adc
pop
ds
mov
fs
sar
or
int
sbb
shrb
mov
daa
imul
mov
mov
int3
mov
add
pop
dec
lock
xor
sbb
ret
out
add
je
and
jecxz
sti
scas
mov
jle
mov
mov
jp
rolb
sbb
jb
loop
mull
ljmp
gs
shll
adc
test
sbb
mov
adc
fcmove
jo
push
call
pop
cmp
jmp
jne
and
xchg
or
andl
pop
sbb
dec
cmpsb
inc
pushf
inc
aam
pcmpeqw
int3
mov
add
push
pop
aas
in
jmp
xchg
add
dec
mov
xor
repnz
push
inc
mov
cmc
pop
add
test
pushf
lock
sub
cld
fistl
mov
pushaw
xchg
jle
inc
aaa
xchg
xchg
addr16
xchg
cmp
mov
xor
cli
lret
sbbl
rorl
pop
test
pop
push
lds
hlt
pop
ss
pop
out
xor
dec
dec
mov
arpl
mov
add
iret
out
xor
pop
stos
shlb
pusha
and
push
out
lds
rcrl
mov
cmp
adc
xchg
and
cmpsb
mov
imul
int
mov
mov
xor
cs
setle
scas
dec
repnz
push
add
pop
or
rcrl
cmp
lret
in
popa
out
sbb
push
cli
pop
fmuls
out
fisubrl
dec
xchg
out
iret
fisubrs
fdivs
call
test
fsubrl
daa
mov
aad
in
jecxz
dec
dec
mov
out
jbe
dec
hlt
cmp
cmp
adc
mov
int
loopne
lcall
xor
rorb
arpl
inc
inc
out
pop
cli
jo
push
xor
xchg
push
jbe
xorl
mov
xchg
cltd
push
jno
repnz
or
fstp
adc
mov
lret
push
clc
sbb
jns
int3
add
icebp
mov
and
jl
xorb
fisttpl
insl
cmp
test
aas
ds
popa
pusha
adc
mov
mov
mov
inc
sbb
std
mov
sbb
loop
inc
iret
xor
mov
and
ret
call
add
push
out
xlat
jnp
mov
and
or
mov
jne
dec
jne
popf
jge
imul
cmp
dec
fbld
testl
cmpl
aad
sub
sub
data16
jo
jne
imul
clc
mov
aas
add
mov
arpl
pop
mov
shrb
adc
xchg
push
mov
shrb
push
pop
fwait
imul
pop
lock
ljmp
cmp
or
mov
xor
sbb
sbb
xchg
jp
mov
and
out
aam
js
jg
push
pop
adc
int
ljmp
pushf
jno
mov
shlb
js
mov
sbb
adc
mov
jns
sahf
iret
addr16
xchg
and
rclb
sub
and
xor
in
std
jae
js
xlat
popf
jp
pop
imul
lea
dec
pop
pop
cmpsl
xchg
mov
iret
jg
xor
fiadds
jno
pop
icebp
mov
push
push
aad
in
xchg
adc
gs
xchg
mov
jno
enter
inc
mov
adc
mov
jecxz
or
jmp
mov
sbb
in
mov
push
imul
in
mov
adc
and
adc
jne
inc
jl
insl
push
mov
dec
sbb
movsl
cmpb
jecxz
inc
test
cmp
sarb
push
fdivs
scas
mov
js
cmpsl
fisttpl
leave
enter
jbe
and
test
pop
adc
dec
dec
test
fildll
mov
xor
mov
ljmp
push
das
xchg
sbb
ret
call
add
fwait
rcrb
pop
inc
fdivl
sbb
adc
sub
lcall
add
icebp
push
xchg
out
push
orb
jo
aad
iret
fidivl
addl
scas
inc
stos
pop
fildll
nop
vunpcklps
flds
mov
push
cli
xchg
xchg
mov
inc
lds
les
lock
xor
fwait
cmpsb
clc
sbb
sbb
pushf
fcmove
lock
sub
cmpsb
adc
rol
iret
add
pushf
loope
loope
push
dec
xchg
jns
xchg
or
jnp
mov
fdivr
and
sti
mov
push
fildl
or
push
ss
mov
es
stos
jae
lahf
inc
and
mov
mov
push
fcompl
adc
fisubs
jae
push
mov
mov
repnz
fwait
fwait
mov
push
xchg
out
rcll
push
test
hlt
pop
popf
out
pusha
inc
sub
iret
push
mov
in
lret
and
add
mov
push
inc
dec
ds
in
pop
movsb
jl
mov
cmp
xchg
movl
mov
sbb
adc
ss
xor
pop
push
add
mov
xor
pop
xchg
adcl
das
iret
jno
push
mov
flds
leave
add
out
mov
daa
xchg
in
push
cmp
hlt
sbb
stos
mov
ss
cwtl
bound
lcall
jno
imul
dec
add
insb
inc
shrl
gs
jbe
int3
cmpl
imul
fdivr
cld
fisubrs
sub
call
in
push
fisttpl
movb
mov
icebp
lods
and
jl
inc
jns
mov
adc
lret
mov
int
cli
aam
mov
add
fnstenv
into
xor
js
push
vpextrw
movsl
add
cmpsl
bound
fcom
or
mov
jg
dec
or
lods
icebp
pop
dec
mov
adc
xor
inc
sbb
dec
lea
fwait
push
fists
rolb
and
push
inc
mov
jo
cmp
cli
into
incl
cltd
push
and
arpl
aad
cmp
nop
adc
idivl
shrb
push
ret
dec
push
fs
push
cmp
or
jg
or
sarl
movb
enter
mov
jl
leave
and
jb
jecxz
in
je
inc
mov
loopne
iret
sbb
outsl
sub
jns
dec
pop
inc
inc
ret
jnp
and
daa
sub
push
sti
mov
jnp
sti
ret
js
ds
jg
inc
and
jns
jle
mov
dec
mov
std
xor
mov
test
loop
hlt
sbb
xor
aad
int
push
lds
out
shrl
pop
in
insb
mov
sbb
ss
mov
je
sbb
cld
push
push
xchg
ds
out
out
les
hlt
inc
add
xchg
xchg
in
mov
test
xor
mov
pop
inc
cmp
dec
sbbl
xor
aam
shl
icebp
sub
lret
lods
dec
call
or
ja
call
std
jo
dec
pop
xor
sti
lcall
movsb
pop
into
es
mov
es
cmp
add
push
das
in
std
mov
jae
mov
ror
mov
cmp
ret
pushf
jo
shll
testl
pusha
cmp
out
sahf
imul
add
leave
sbb
popf
dec
mov
daa
add
push
cmp
or
scas
stos
mov
jo
cmpsb
mov
sub
lods
sbb
pop
mov
xchg
in
push
into
out
ja
mov
pop
add
jle
movsl
xchg
jge
sbb
out
push
lcall
push
cmpsb
test
jg
ret
or
add
daa
lahf
scas
inc
cs
and
lds
mov
not
mov
popf
jg
pop
std
adc
rorb
push
popf
mov
movsl
stc
lods
sbb
jae
or
cmpsl
repnz
icebp
mov
jbe
mov
push
push
push
pop
adc
jle
cmp
xchg
rcrb
pop
xlat
fldz
cmp
cmp
adc
push
adc
fdivl
sub
pop
or
and
out
fcmove
cmp
jb
shrl
std
arpl
in
or
xchg
lcall
bound
das
pop
xchg
sahf
xlat
in
lret
call
mov
sti
xchg
or
sahf
in
xchg
jmp
inc
movsb
xchg
shlb
jb
int
dec
mov
scas
mov
int3
movsl
mov
adc
sti
push
sar
shlb
add
add
lods
bound
outsl
sbb
daa
add
push
jns
xor
or
aaa
inc
dec
pop
dec
in
loopne
out
xchg
in
and
int
insb
sub
mov
aaa
jbe
mov
dec
sbb
jae
dec
je
cmpb
rorb
pushaw
xchg
adc
enter
xor
inc
or
test
jge
call
cli
dec
outsl
decb
cmpsb
xchg
in
and
sar
test
pushf
ret
jns
lea
repnz
rclb
loope
and
add
xchg
jg
xchg
repnz
or
daa
cltd
dec
orl
insl
mov
dec
negb
adc
outsb
dec
jg
leave
inc
testl
jne
clc
sub
dec
xchg
cmp
jg
jno
icebp
mov
cwtl
stc
ficoml
mov
shll
jmp
push
fwait
cwtl
aaa
imul
in
movsb
mov
aam
int3
add
and
jmp
xchg
ficomps
popf
sbb
ja
sub
xchg
aam
dec
enter
fmulp
adc
push
test
dec
pop
fstpt
cmp
sub
adc
scas
push
sbb
jns
icebp
loopne
or
mov
xor
arpl
pushw
jg
fdivr
jl
inc
inc
push
mov
push
mov
rcrb
int3
jns
push
pop
rorb
push
pop
dec
das
mov
dec
pop
push
adc
jg
dec
sti
adc
jbe
shrl
push
cs
lahf
lret
push
iret
int3
add
mov
dec
cmp
and
xchg
movsl
out
jmp
ds
call
adcl
mov
pop
fistpl
jo
rorl
cmp
push
xor
jmp
fldenv
sbb
cs
hlt
sub
fwait
lahf
icebp
jecxz
or
lds
lock
fwait
add
lahf
adcb
mov
add
into
pop
cltd
scas
out
out
aas
mov
pop
in
jp
shr
testb
mov
sbb
push
fistpl
aas
lock
add
sbb
cli
dec
scas
sbb
push
jle
push
mov
adc
outsb
das
inc
mov
inc
cmp
ficomps
notl
inc
mov
inc
sbb
sahf
lea
cltd
out
clc
jae
cmp
icebp
in
icebp
or
out
hlt
xchg
dec
mov
jge
into
and
sub
jae
iret
mov
push
jbe
mov
cmpsb
loopne
pop
adc
test
ljmp
inc
or
loope
sbb
addr16
rorl
cli
out
addr16
stc
dec
rclb
stos
pop
cs
cmp
xlat
test
das
mov
jle
enter
jb
xlat
and
sbb
or
adc
and
mov
add
lock
jne
xor
jecxz
cmp
adc
jle
dec
aas
sub
dec
mov
fmul
add
xor
adc
stc
mov
ret
dec
adc
dec
mov
mov
xchg
inc
mov
jg
cmp
hlt
aam
and
adc
sbb
in
stos
add
adc
mov
mov
pushf
push
mov
xor
bnd
push
dec
push
xchg
cli
negl
shlb
icebp
mov
js
cwtl
lret
jo
ficoml
imul
xchg
or
test
jnp
lods
cmp
es
xchg
and
das
pop
cmp
icebp
mov
shlb
pushf
mov
or
cmp
push
out
jge
fistpll
clc
nop
shrd
lea
push
ficompl
mov
test
dec
sbb
jecxz
or
dec
or
jecxz
inc
jae
sub
call
xchg
nop
adc
pop
mov
les
enter
ret
push
loope
in
jp
adc
push
inc
ret
aaa
cmp
addl
pop
mov
add
pop
call
andl
inc
sbb
xor
cmpsl
nop
mov
es
mov
push
add
cltd
fimuls
xchg
cs
pushf
aam
repnz
stc
arpl
outsl
adc
add
pop
mov
leave
data16
push
mov
push
sbb
cmp
pushf
leave
lcall
cmp
mov
cmpsb
cli
sbb
or
jmp
gs
inc
lods
dec
leave
mov
xor
jae
xchg
and
ret
aas
pop
adc
adc
imul
notb
divl
push
lock
mov
or
xor
xchg
addl
mov
rorl
loope
and
hlt
dec
sbb
adc
or
pop
pop
daa
mov
in
jmp
jp
addr16
mov
push
fs
repz
push
aad
arpl
mov
in
xchg
sbb
lret
dec
ret
inc
dec
sub
jo
and
fsubr
inc
mov
call
inc
cmp
sbb
inc
clc
in
jo
push
ds
inc
jmp
xor
jb
push
movsl
mov
pop
frstor
adc
xor
inc
xor
out
pop
cmp
jg
popf
orl
lds
mov
mov
cmpsl
push
push
inc
ja
mov
in
jb
mov
xchg
push
lahf
aaa
lea
jbe
movsl
mov
jb
cmp
ds
mov
leave
cltd
jmp
mov
int3
push
adc
pushf
mov
loop
cmp
jmp
mov
dec
jge
lret
adc
repz
push
roll
test
ret
and
sub
mov
jae
lods
lahf
and
movsl
imul
ljmp
lea
lcall
mov
enter
adc
push
imul
test
inc
lods
ja
out
test
xchg
lret
sub
dec
inc
leave
add
shlb
rolb
arpl
mov
mov
loope
inc
add
adc
mov
jne
and
dec
sub
aad
mov
iret
pop
loope
sub
inc
or
mov
pop
invd
pop
pop
outsb
popf
xor
mov
cltd
sub
in
xor
test
jbe
inc
scas
sub
pop
aaa
imul
cmp
xchg
test
mov
and
pushf
ret
cmpsb
pop
cmp
xchg
aaa
addb
rorb
inc
in
push
push
repnz
sub
nop
or
sti
mov
shll
out
mov
cs
adc
hlt
in
out
cld
xchg
and
pop
outsl
sbb
pop
sahf
fsubl
adc
pop
add
mov
xchg
jg
sub
xor
loope
fcomps
mov
pop
mov
mov
xor
inc
fists
and
pop
in
jae
scas
stos
xchg
cli
cmp
mov
jmp
out
or
int
cmp
jne
adc
ret
pushf
xor
inc
in
fisubrl
add
ret
or
aas
push
xor
or
xorb
xchg
lea
inc
aas
stos
mov
popa
mov
and
xor
mov
sbb
xor
sti
and
out
out
pop
add
insb
lea
inc
ret
mov
push
out
fsubs
mov
loop
and
cmpsb
imul
mov
sbb
arpl
clc
bound
adc
pop
lea
cmp
out
push
add
xor
add
dec
mov
test
out
leave
jae
pop
xchg
out
fadds
jmp
jb
jno
add
pop
mov
push
and
cmp
ret
sub
cmp
add
sahf
sub
mov
test
pop
test
xchg
cmpsl
stos
xchg
cmp
push
add
mov
cli
inc
push
lea
test
jb
nop
fsubrl
stos
jle
nop
mov
cmpsl
pop
add
dec
orl
aam
hlt
jg
mov
cwtl
or
outsb
xlat
and
adc
mov
jno
lea
sub
cmpsl
jg
arpl
push
push
xchg
push
fs
mov
int
aas
arpl
xlat
lods
ss
sti
mov
addr16
mov
xchg
sub
mov
out
jno
mov
push
cld
sarl
lea
popf
dec
jo
jbe
jae
data16
call
cmc
test
jae
mov
in
out
sub
mov
pop
or
and
ror
lock
xor
xorl
inc
imul
add
shrb
int3
sbb
jmp
xor
les
ds
clc
pop
leave
jg
mov
cmp
push
pmulhw
cmpl
inc
mov
test
mov
aad
sarl
push
iret
mov
mov
xor
inc
fisttpl
imul
pop
sbb
sarb
mov
sahf
pop
inc
dec
shrl
enter
mov
push
lahf
inc
pop
mov
or
pop
jge
xchg
jge
push
dec
sub
or
xchg
aad
gs
push
popf
imul
in
aam
es
xchg
in
test
cmp
lea
mov
dec
mov
jge
cmpsb
idivb
pop
fldt
movb
mov
cltd
ret
jg
pop
addl
pop
ficoml
les
jmp
stc
fsave
ljmp
mov
pop
popa
xchg
insl
mov
cmp
test
fwait
xchg
andw
add
arpl
lahf
stc
push
jl
cwtl
movsl
cltd
lods
setb
pop
dec
fcomps
ret
cmpsb
aad
add
ret
sub
pop
cmpsb
shrb
cmp
out
lods
rcr
jle
fcomps
adc
mov
dec
ja
aad
shr
mov
ficomps
or
imul
filds
scas
mov
and
adc
std
out
mov
dec
or
out
xor
mulb
std
mov
xchg
in
mov
es
xchg
mov
sti
sub
jg
nop
ret
and
adc
jnp
shll
cmp
sti
xor
arpl
cld
clc
clc
fists
mov
jae
pop
test
cmp
sub
in
dec
push
enter
add
mov
arpl
shll
mov
loope
fcomps
lea
lds
test
jns
ss
pop
pop
jmp
xor
mov
in
jnp
fisttpll
inc
sbb
xchg
mov
arpl
mov
lea
testl
sub
out
mov
pop
arpl
cmp
inc
jne
into
out
cs
xchg
test
xlat
jo
xchg
push
jp
push
or
cmpl
mov
shlb
cltd
call
je
loope
in
gs
adc
xrelease
lock
pop
mov
fs
and
jg
gs
aad
mov
bound
cmp
pusha
sub
jae
or
sub
jbe
les
dec
mov
popa
lods
push
sub
push
jle
enter
int
divb
pop
cmpsl
mov
dec
jns
test
cwtl
xchg
inc
jmp
lret
dec
push
inc
cmc
or
outsb
out
jmp
test
iret
sub
jns
mov
popa
mov
xchg
out
cmp
cmpsl
ds
lock
pop
sar
push
adc
mov
inc
std
sti
faddl
popf
pop
mov
mov
xchg
mov
outsb
icebp
js
aas
pop
enter
cwtl
adc
test
pop
dec
mov
cmpsb
sub
xor
ja
lea
mov
fincstp
jmp
mov
or
in
jbe
mov
fs
pop
out
sbb
sarb
insb
stos
mov
xor
adc
pop
inc
loop
push
nop
and
bound
imul
enter
pop
jns
xchg
sbb
pop
pusha
jmp
push
lea
loop
push
out
mov
es
stos
inc
mov
jl
push
lods
lds
xchg
mov
sbbl
push
sbb
dec
popa
or
jnp
in
xchg
pop
xor
add
jb
push
in
lret
push
nop
rcrb
ja
out
jge
popa
dec
dec
pop
push
lds
lret
test
insl
jge
inc
pushf
in
cmp
mov
add
sbb
mov
movsb
in
xor
subl
push
or
adc
test
pop
mov
mov
cmp
adcb
insl
jne
lret
testb
push
jmp
in
in
ret
jl
ds
xlat
outsl
imulb
or
adcb
outsb
push
xchg
sub
bound
test
xor
std
pop
jno
mov
outsl
sbb
popf
push
ss
xchg
mov
mov
test
adc
cltd
outsb
sub
mov
subl
cwtl
cli
adc
inc
fwait
cmpsb
add
dec
push
stc
push
std
dec
ss
jle
adc
mov
loop
fadds
nop
xchg
mov
adc
sti
jae
fiaddl
inc
sbbb
int
inc
xchg
imul
fs
movsb
jb
adc
cmc
dec
lret
outsl
insl
jne
or
int3
jg
jmp
mov
sub
lcall
add
icebp
and
pop
shr
aam
arpl
aad
mov
test
cmp
shlb
fwait
loope
aam
int
popa
sbb
imul
push
cmp
push
stos
cmpsl
cmp
inc
jge
jl
xor
sub
insl
rclb
push
inc
scas
hlt
cld
inc
mov
bound
sub
jp
mov
pop
sbb
inc
dec
imul
std
or
add
loopne
xchg
cmp
mov
fwait
pusha
xor
out
cmp
popf
and
out
movsl
out
xor
incb
ror
neg
sarl
dec
movsl
repnz
push
aas
sbb
or
mov
movsb
rorl
inc
cmp
jno
int3
add
in
mov
push
xchg
popa
aaa
out
mov
xor
fstpt
out
mov
in
mov
xchg
orl
fdivp
push
shl
mov
xor
jno
cld
sahf
jb
sub
ret
test
push
sbb
adc
and
jae
test
sub
int3
out
or
mov
push
inc
enter
sub
imul
insl
sbb
stos
inc
popaw
jg
repz
and
push
ret
adc
adc
pop
cmp
lret
out
leave
stc
pop
mov
out
jno
mov
mov
xor
bound
and
imulb
cs
cmpsb
repnz
lods
jne
mov
nopl
adc
aaa
in
or
inc
ja
jno
sub
popf
mov
mul
pushf
movl
in
hlt
pop
pop
loope
pop
or
out
push
rol
or
push
pushf
pop
jle
pop
inc
movsb
jno
push
mov
rcrl
push
jnp
aam
pop
jno
arpl
mul
or
sbb
sti
mov
daa
out
xchg
sbb
push
jb
mov
xor
push
mov
aas
stos
xor
dec
push
aam
dec
cmp
icebp
mov
aad
popa
jp
and
testl
mov
add
rcrl
jbe
fstl
or
sbb
fldt
jl
jb
mov
dec
cmpsl
push
pop
mov
xor
push
xor
or
cltd
test
daa
mov
std
cmp
clc
sbb
mov
sbb
push
mov
push
mov
xchg
and
pop
pop
mov
cld
cmp
push
push
dec
jae
push
pushf
mov
sub
xchg
sub
pop
add
jge
dec
mov
sub
xchg
ds
cmc
dec
ficoml
push
popf
xchg
add
jmp
stos
dec
in
and
pop
lods
jo
inc
pop
lods
and
int
pop
jne
adc
push
mov
adc
movsl
add
cmp
incl
pop
pop
ljmp
lea
xchg
test
jmp
sub
push
lret
lret
jmp
call
pop
sub
cmp
push
mov
push
scas
jp
sub
ds
add
mov
push
pop
sub
in
xor
pop
ret
aam
jno
xchg
cltd
pop
jge
jb
movsl
lcall
adc
scas
sbb
in
add
addr16
and
ss
ss
and
cli
fdivr
les
add
add
cmp
movsb
int
mov
repz
xchg
test
stos
lcall
push
jmp
ret
daa
popa
lods
daa
xor
mov
cmp
mov
imulb
add
sub
imul
dec
mov
xor
jae
or
aas
test
dec
mov
leave
mov
push
xchg
mov
mov
mov
mov
mov
rorb
sbb
add
sbb
pop
scas
adc
fadd
in
inc
mov
mov
push
mov
adc
xchg
inc
jo
push
fsubs
hlt
mov
cld
cmp
xor
or
cltd
mov
fwait
push
inc
in
mov
lret
xor
jae
sbb
mov
cltd
lea
mov
cmp
mov
fcoml
pushf
pusha
adc
and
je
xor
adc
outsb
clc
in
jbe
gs
lds
jg
or
repz
das
inc
repz
lds
repz
inc
stc
and
cs
adc
cltd
cs
push
and
xor
push
mov
sub
and
out
or
lods
es
xchg
outsb
or
insl
fbld
push
test
loop
or
ljmp
shll
push
dec
mov
les
fwait
inc
xchg
out
jbe
adc
pop
add
cmp
adc
push
imul
mov
in
push
dec
cmp
mov
in
mov
jg
loopew
dec
loopne
fistpl
mov
xchg
shl
push
mov
dec
sti
push
pop
add
jns
mov
or
xor
das
mov
test
and
push
shll
add
xchg
clc
test
pop
loope
xor
mov
jle
or
rcrl
cmp
cmp
mov
lret
xor
pop
and
cltd
lret
pop
enter
ror
push
adc
clc
push
aas
xor
nop
jmp
push
int3
xor
lods
mov
sbb
mov
sbb
nop
ljmp
insl
mov
adc
sub
test
loopnew
daa
mov
aas
mov
dec
pop
outsb
in
fcompl
fstps
xor
push
push
aad
xor
hlt
mov
mov
bound
push
sub
adc
rcrl
lds
sub
sub
lock
sbb
es
daa
mov
xchg
bound
add
dec
sbb
add
xor
lds
inc
lods
xchg
dec
jo
and
out
andb
cmp
nop
outsb
movsb
mov
mov
lds
mov
cmp
xlat
ret
hlt
sub
mov
orl
or
into
and
ss
sub
cmp
imul
rcrl
idiv
cmp
pop
popa
push
sbb
jnp
sub
push
ret
loop
js
cli
aas
sbb
dec
clc
add
iret
addr16
stos
jge
lock
cmc
movsl
push
add
fnstsw
push
push
cltd
or
pop
push
sahf
test
xchg
xor
and
outsl
xchg
lcall
stc
mov
iret
push
fst
into
repz
outsb
mov
add
into
sub
mov
lret
sbb
insb
dec
and
out
jne
hlt
and
xchg
mov
dec
dec
inc
out
adc
xchg
push
inc
pop
sbb
cld
inc
pop
fwait
inc
and
dec
lock
decl
subl
mov
aaa
dec
sub
loopne
adc
add
sub
push
ljmp
mov
sbb
inc
and
pop
call
push
add
inc
stc
mov
inc
int3
sbb
insb
mov
mov
enter
movsb
popa
mov
lahf
adcb
add
xlat
mov
int
cld
pop
faddl
dec
pop
daa
xchg
push
cmove
mov
mov
jno
jl
jg
dec
ja
test
mov
cmp
xorb
fiaddl
lock
enter
adc
lock
sti
mov
repz
fstl
insl
lret
in
mov
jl
jmp
int3
std
xor
fnsave
loopne
xchg
not
iret
jbe
push
and
ss
pop
add
add
ja
add
mov
fildl
movsl
or
xor
mov
fnsave
mov
mov
mov
lds
leave
push
ret
sub
inc
loop
fsubrl
lret
mov
sub
enter
xchg
ret
sub
inc
xlat
dec
and
jbe
outsb
cmp
jns
mov
and
inc
insb
out
lock
sbb
daa
mov
ss
xchg
movsb
call
test
sahf
cltd
mov
inc
inc
sti
cli
enter
sbb
or
les
push
repz
mov
testl
out
mov
movsl
xchg
hlt
cmpsb
aaa
cmp
cmpsb
in
pop
jge
sbb
cmp
daa
or
add
adc
or
in
outsb
xchg
inc
sub
push
icebp
or
mov
into
mov
and
cs
mov
or
pop
mov
shll
fstpt
push
shll
mov
not
pop
or
pusha
xchg
pop
xor
jns
scas
xor
add
imul
hlt
ds
xor
mov
xchg
pop
sbb
xor
and
or
push
push
mov
nop
out
jnp
mov
push
movsl
add
mov
sti
lock
ficoms
popf
scas
gs
xor
aaa
sub
adc
cli
lahf
clc
out
aad
dec
sbb
add
jnp
mov
mov
mov
loope
push
test
imul
jle
push
jae
pop
cmpsb
dec
xor
fimuls
pop
and
leave
jns
iret
or
and
pushf
popl
push
and
inc
jb
jbe
cmp
insl
dec
iret
rcrl
aad
and
or
cli
mov
movsl
push
or
dec
out
dec
sbb
inc
mov
arpl
sbb
and
pop
cs
mov
sub
fs
adc
mov
adc
stos
iret
xlat
adc
mov
or
cs
fdivrl
lock
jb
es
mov
dec
mov
aas
adc
sbbl
cmpsb
pushf
fldcw
mov
aaa
sub
xchg
or
pop
loop
lock
mov
out
imul
mov
and
scas
xlat
or
sub
and
lods
push
pop
stos
dec
stos
mov
push
fsin
aam
push
jmp
out
dec
pop
scas
mov
inc
jne
sub
adcb
cmp
cmp
cmp
sbb
xchg
loop
xchg
mov
repz
cmp
fwait
scas
mov
mov
mov
sub
jne
in
xchg
imul
xchg
movsl
mov
out
fs
mov
xor
scas
cwtl
in
test
add
jns
not
mov
jg
into
xchg
mov
loopne
js
pusha
cltd
jbe
mov
mov
pop
dec
movl
jmp
mov
mov
xor
cmp
ffreep
adc
cmp
xchg
mov
dec
pavgw
je
pop
lods
out
push
aas
mov
push
or
xor
rolb
and
inc
popa
clc
xorl
dec
imul
gs
push
out
cli
out
xor
sbb
ror
mov
ss
and
jne
dec
int
cmp
outsb
sbb
adc
pusha
pcmpgtd
mov
jo
dec
pop
jmp
adc
mov
and
fldt
leave
dec
and
outsb
test
call
int3
jno
or
mov
adc
or
dec
push
xchg
fadds
scas
sti
add
jbe
les
adc
xchg
cmc
mov
mov
leave
lods
jns
movsl
mov
nop
aam
pop
xor
xchg
mov
ret
repz
lds
cltd
mov
rcrb
cld
ljmp
dec
and
nop
popa
inc
lods
fistl
scas
stc
and
inc
daa
and
push
xchg
fistl
jge
jge
add
sbb
subb
ss
add
mov
lahf
fdivrl
imul
jg
fdivrs
imul
outsl
sub
lret
dec
loope
mov
jmp
in
out
adc
sbb
std
addr16
je
test
mov
pop
and
push
lods
test
int3
test
repz
std
and
insl
mov
mov
outsb
or
jno
leave
add
mov
pop
rcr
mov
cwtl
fxch
ja
ret
arpl
and
sbb
mov
adc
and
hlt
mov
xchg
push
test
xor
aam
push
fisttps
adc
aam
inc
xlat
imul
dec
popa
add
cmp
inc
sti
mov
into
scas
aas
cwtl
js
negl
aas
cmp
xchg
cli
or
imul
add
mov
xchg
repz
lods
cmp
push
xor
xor
jns
cmp
pop
lret
std
lods
or
jge
lds
xor
add
add
inc
dec
and
sbb
mov
inc
fs
sti
cld
mov
fisubl
push
jle
cmc
pop
loop
xor
insb
mov
pop
icebp
rcll
lcall
mov
incl
and
test
mov
aas
or
nop
pop
rorb
in
push
adc
mov
cmpsb
mov
je
hlt
cmp
pop
push
lea
jne
mov
stos
psrlq
mov
cmp
or
xor
pop
add
push
lret
add
mov
fwait
pushf
movsb
popa
jnp
fst
dec
pop
fildll
push
push
sbb
mov
imul
push
rcrb
mov
int3
or
ret
shrb
out
jno
push
sbb
adc
and
lods
cmp
mov
xchg
iret
mov
pop
add
xchg
sub
mov
dec
cwtl
faddp
sub
sti
dec
in
repnz
inc
pop
pop
lcall
aad
or
fcoms
add
or
in
cmpsb
mov
test
and
clc
lea
inc
xor
sbb
test
stos
movsb
fstl
gs
icebp
stos
push
insb
adc
dec
stos
mov
gs
push
push
xchg
mov
cmp
addr16
mov
cli
mov
das
cmpsb
popa
iret
mov
stos
outsb
pusha
out
mov
test
aas
and
mov
jbe
mov
js
rcrb
sbb
movsb
mov
test
pop
mov
push
cmp
mov
rcrl
pop
and
out
xchg
fucomip
mov
mov
xchg
imulb
stos
jno
mov
jmp
ds
outsb
sti
push
mov
or
loop
hlt
mov
add
sub
mov
fimull
outsl
dec
jb
sbb
int
imul
mov
cmp
push
aam
push
sbb
popf
xor
inc
sbb
rcll
lds
push
ficoms
fdivs
adc
dec
out
sbb
call
aas
lds
xor
lock
shrl
je
imul
or
les
mov
dec
addr16
mov
pop
push
jmp
cmc
mov
es
pushf
xchg
adc
cmpsl
test
sbb
push
xchg
cmp
or
pop
sbbb
sub
xor
adc
sbb
pop
popf
fisubrs
jbe
adc
and
ja
pop
cmpsl
fsubrl
mov
in
dec
jbe
dec
mov
sti
pusha
xchg
dec
pop
mov
cmpsl
sub
hlt
xchg
testl
adc
lcall
cwtl
mov
in
je
cli
push
popf
dec
pop
lds
push
mov
ss
sahf
aas
or
dec
dec
ljmp
add
lcall
and
jnp
jbe
inc
pop
push
jne
cmp
rcrl
ss
push
add
mov
mov
or
cltd
inc
leave
cmp
fldl
push
dec
lock
scas
test
sbb
les
roll
jge
sbb
jnp
xchg
and
dec
dec
and
jae
aas
sti
scas
cwtl
add
adc
mov
inc
jb
ret
stos
repnz
pop
jb
dec
pop
lds
in
dec
lods
jb
jge
icebp
mov
push
and
cli
jb
mov
mov
pop
xor
lock
sbb
adc
dec
mov
shrl
out
addr16
xchg
mov
inc
test
and
mov
imul
stc
rcrl
or
jne
xor
movsl
push
lret
test
fbstp
hlt
cmp
rcll
xor
xchg
jp
or
sub
mov
pop
dec
dec
test
fwait
adc
loop
cvtpi2ps
cmp
mov
push
pop
insb
ja
add
dec
dec
dec
ja
ret
pop
inc
inc
jb
sbb
cs
out
rcr
mov
das
test
xor
add
and
cmp
jmp
fisttpll
push
les
mov
pop
out
jo
mov
out
lds
ret
or
push
lea
inc
add
inc
mov
xlat
insb
pop
pop
xchg
or
push
sbb
int
jge
jnp
dec
imul
popf
loop
adc
pop
jne
leave
sbb
xchg
in
adc
sti
adcb
repnz
loopne
or
shll
adc
dec
or
adc
out
ficoms
add
dec
int
cmpsb
std
inc
xor
cmpsl
stos
daa
mov
out
dec
les
and
mov
test
inc
jno
mov
pop
push
dec
inc
aas
cmp
or
pushf
stos
sti
dec
sbb
lahf
in
jge
popa
ljmp
dec
sbb
xchg
sbb
sub
addr16
dec
fwait
and
cmpsb
xchg
andb
mov
sub
faddl
fisubl
sbb
jb,pt
sub
scas
sbb
ret
in
pusha
push
pop
popa
arpl
push
dec
cs
jmp
pop
jnp
in
cmp
test
sub
xchg
sub
rorl
movl
ror
mov
dec
mov
pop
sahf
pop
dec
or
add
sub
cmpsb
sbbl
orb
inc
pop
lods
popf
cmpsl
inc
ror
and
pop
mov
ds
adc
out
in
push
mov
cmpl
arpl
pop
lods
push
sbb
data16
sub
xchg
cmp
fwait
rcrb
test
cmp
dec
in
out
cmpsl
lock
mov
cmc
repz
pop
in
push
arpl
push
mov
lods
mov
jo
push
push
mov
mov
lds
test
add
mov
mov
daa
cltd
insl
rclb
jo
enter
inc
test
pop
push
cmpsl
jge
jnp
test
pop
sbb
sbb
aaa
insb
iret
xchg
mov
push
inc
and
fidivrs
out
xor
or
jecxz
mov
xchg
rol
xor
daa
ja
jae
scas
add
push
jne
pop
push
cmp
dec
mov
jl
pop
jnp
add
in
xchg
arpl
or
push
lret
push
fdivl
aas
les
loop
test
mov
inc
cmpsb
imul
icebp
test
int3
xchg
outsb
loopne
sahf
insl
sub
es
dec
cmpsl
mov
sub
dec
and
jp
rol
cmp
jge
pop
jb
cmp
xchg
jg
sub
pmulhuw
jbe
xchg
incl
daa
ds
inc
xchg
comiss
lret
ss
push
xchg
jecxz
pushf
dec
mov
repz
and
inc
cmp
fcompl
loopne
xchg
jmp
stc
mov
pusha
mov
les
jp
fisttpl
je
adc
adc
pop
cmp
and
mov
cmpsb
cmpsb
dec
daa
dec
test
mov
sarb
jae
inc
and
jg
inc
scas
jge
pop
mov
mov
stos
fmuls
inc
xchg
or
cwtl
mov
cwtl
loop
push
test
fucomip
inc
jmp
inc
popf
dec
icebp
cs
inc
andl
mov
or
aam
cld
imul
gs
sub
ljmp
imul
fstps
aas
adc
lea
fistpll
sub
outsl
incl
or
xchg
sub
and
sub
cmpsl
push
hlt
jo
loope
xchg
lods
pusha
push
or
jecxz
cwtl
je
sbb
sub
mov
stos
push
rorb
movsb
jge
pop
add
fsts
xor
aaa
popf
or
sbb
and
xlat
push
insb
pop
cwtl
aaa
cwtl
sub
and
xor
dec
or
push
push
es
mov
sbb
push
lret
in
push
dec
or
xchg
je
mov
fnsave
shl
mov
dec
adc
dec
or
and
ficoml
leave
sahf
xchg
pop
pop
and
sbb
int
xor
loopne
add
pop
repnz
inc
sbb
sbb
add
movsl
sbb
push
negl
dec
in
mov
in
sbb
lock
add
add
stc
xchg
and
leave
popf
mov
loope
mov
adc
icebp
das
push
shll
je
sbb
fadd
pusha
push
xchg
cld
add
mov
aad
mov
out
out
cmpsl
fidivs
add
dec
insl
jle
imulb
leave
sbb
ds
ret
xchg
fs
jbe
lea
mov
mov
ljmp
mov
add
xor
sarl
push
fwait
and
push
pop
xchg
mov
mov
stos
inc
popf
stos
fs
iret
incb
or
in
imul
push
pop
mov
push
xchg
in
mov
dec
lret
mov
add
mov
cmpsl
sub
mov
in
jo
cmp
loop
outsl
pop
xor
jns
jbe
sbb
mov
xchg
inc
sbb
dec
push
lock
pop
shr
in
cmc
ret
aad
fnsave
test
adc
popf
mov
mov
xchg
mov
outsl
pop
cmp
cmpsb
inc
mov
imul
sub
scas
ficoml
jns
ds
or
ja
pop
jnp
jb
icebp
int
pop
fstpt
lret
int3
and
fsts
xorl
movsl
push
xchg
jecxz
shll
inc
lret
or
mov
xor
ds
scas
ds
lea
add
out
or
ljmp
lahf
mov
arpl
mov
pop
or
dec
pop
jno
add
and
jbe
jbe
pop
and
lods
pop
push
lods
and
sub
sahf
jb
mov
mov
nop
insl
imul
mov
dec
push
out
inc
jb
xchg
mov
mov
pop
in
rolb
rclb
loope
pop
les
and
js
ret
ja
mov
outsb
jle
or
jns
cmp
jns
mov
jge
add
insb
sbb
xchg
test
shll
imul
idivb
push
popa
es
mov
lahf
pop
add
xchg
out
xor
push
test
and
xchg
sub
rorl
mov
sbb
xor
clc
fiadds
add
ret
test
aaa
pushf
cmp
stos
loop
cltd
fadds
inc
call
roll
adc
jae
in
xor
push
je
and
pop
pop
sbb
or
ret
dec
bound
mov
arpl
cli
and
and
enter
xchg
ret
cld
xor
popf
cmp
or
push
sti
lods
lret
xor
and
sub
or
mov
mov
fldt
in
cmp
mov
clc
in
push
and
fwait
xchg
test
test
inc
jns
add
mov
call
cmp
mov
mov
outsl
mov
divb
sbb
pop
mov
popf
sti
add
xchg
xor
hlt
popa
iret
addr16
cmpl
cmp
sti
dec
idivb
xchg
fs
xor
in
cs
cltd
inc
arpl
dec
and
std
adc
addb
leave
inc
daa
xlat
pop
jle
sbb
aas
test
aas
lret
jnp
jp
test
adc
in
adc
cmp
scas
dec
test
push
fcoml
push
inc
jle
mov
cmc
pop
inc
in
pop
push
add
js
and
xor
sub
mov
jae
shl
aaa
cmp
loope
ss
hlt
repnz
xchg
mov
add
xchg
or
xchg
inc
xchg
scas
ficompl
cmpsl
cmc
jge
pushf
lods
inc
lds
add
data16
jmp
sti
lds
lods
std
jp
mov
sar
add
cli
dec
jo
ss
cld
mov
hlt
cwtl
shrl
das
test
xchg
push
rcrl
mov
fsubrs
loop
ror
das
push
cmp
rcrb
adc
call
aas
jl
cmp
cmp
xchg
ret
aam
pop
xchg
cmp
sbb
test
jae
outsl
mov
pop
mov
ret
mov
sub
movsl
ljmp
addb
inc
mov
xchg
fldenv
and
in
in
mov
add
xchg
and
jg
lcall
arpl
loopne
inc
inc
sahf
jno
or
pop
push
out
popa
dec
ds
scas
movsl
and
outsl
lret
daa
add
mov
out
pusha
mov
dec
adc
aam
pop
push
dec
xor
out
dec
jmp
jp
mov
out
dec
adc
adc
mov
or
cs
mov
cli
jle
sbb
xor
mov
sbb
mov
outsl
xchg
mov
mov
and
cmc
sti
in
dec
testl
xchg
repnz
aad
cmc
imul
or
mov
scas
shl
in
gs
mov
cmp
mov
shrl
sti
pop
lds
mov
inc
jecxz
mov
lret
sbb
add
and
lock
stc
or
mov
inc
testb
fimull
jle
mov
push
cmp
push
mov
dec
dec
sahf
xor
jb
ffreep
pop
lock
cmc
and
xor
mov
hlt
ret
pop
addr16
jg
pop
imul
gs
int3
ret
sub
sbb
jno
xchg
xchg
mov
addr16
stos
call
dec
andb
es
sbb
popa
mov
push
les
lods
fcomps
dec
push
rorb
lahf
ja
inc
and
xor
jnp
xorb
hlt
mov
jp
stos
sbb
xchg
or
loop
insb
inc
fnsave
jge
data16
ffreep
call
das
mov
insb
jb
jnp
imul
pop
pop
jno
push
sub
enter
ds
xor
add
out
mov
loopne
loopne
and
sub
mov
cmp
mov
and
das
mov
add
aad
pop
pop
sbb
push
inc
xlat
dec
movsb
rclb
sub
or
sbb
push
add
jl
inc
stos
add
and
scas
insb
xchg
or
cmc
or
aam
scas
cmp
subl
xor
adc
leave
jl
ret
xor
sub
imul
mov
dec
cmp
push
outsl
mov
or
gs
cltd
nop
ljmp
in
stos
inc
mov
aad
fmul
mov
add
std
sar
stos
gs
pop
cmpsb
or
dec
push
inc
outsl
leave
add
mov
leave
cs
sbb
stc
sub
daa
sbb
jmp
bnd
xor
push
fisubs
inc
jb
or
add
add
rorl
gs
dec
mov
fidivrs
add
sbb
xchg
sbb
in
mul
jg
and
cwtl
in
std
jno,pn
stc
sub
mov
xchg
or
mov
sub
and
jae
mov
mov
jb
sub
outsb
daa
mov
sbb
sti
push
mov
inc
cmpsb
mov
mov
sub
fimull
adc
loope
sub
push
cmc
shl
sub
fstpt
loopne
aas
mov
or
add
aaa
cld
das
int
out
xor
aaa
jg
add
jmp
repnz
and
cmp
xchg
imul
xchg
and
xor
and
orb
sbb
imul
loopne
fwait
mov
cltd
mov
sbb
loope
mov
jns
inc
push
mov
xor
jae
shl
cmp
jo
sbb
xor
cmp
cli
outsl
push
js
and
pop
push
mov
mov
jbe
lea
scas
or
mov
lods
xchg
addr16
das
popa
cmp
ds
adc
push
outsl
movsl
aas
add
or
xor
aam
std
dec
popa
mov
push
xchg
punpckhwd
sbb
push
gs
mov
add
lods
sti
gs
stos
pavgb
or
mov
psrad
push
xor
inc
dec
sub
cmp
sub
sbb
dec
aad
test
icebp
fstpl
lods
stos
jmp
add
pop
mov
pop
loopne
mov
sbb
push
or
xchg
or
sub
rcll
dec
fcompl
loope,pt
fsts
lret
or
popf
push
icebp
push
xor
pop
movsb
scas
sub
sbb
xlat
push
popf
sti
inc
fimuls
mov
and
xchg
dec
xor
jg
push
fsubrl
lods
test
mov
in
mov
jl
sbb
daa
xor
fstpl
rorl
push
shlb
cmpsb
fistpl
outsb
xor
pop
inc
push
jae
mov
iret
push
mov
add
iret
cmc
add
repz
adc
sub
xor
int3
iret
popa
xchg
sub
lret
push
add
jnp
movsb
in
js
test
or
adc
stos
adc
popa
push
jp
movsb
mov
cmpsl
lret
mov
dec
jp
push
aaa
adc
nop
in
push
in
jl
or
pop
shlb
daa
fscale
leave
out
roll
mov
sbb
or
jle
js
bound
in
repz
dec
stos
aad
or
mov
mov
mov
rcrl
lds
and
cmp
or
mov
dec
and
idivb
jmp
push
test
push
fwait
and
pop
aam
push
movsl
mov
dec
xor
sub
and
test
test
fcomip
lret
lods
mov
add
adc
push
mov
ja
and
pop
fists
sub
test
cld
in
mov
clc
sbb
ret
aam
xchg
jno
adc
aad
ret
fisttpl
and
aam
mov
add
jl
repnz
movsb
add
cmpsl
mov
outsb
adc
in
clc
sbb
mov
sub
pusha
xchg
loopne
clc
lock
xchg
loope
imul
dec
pop
mov
lcall
out
and
js
divb
sub
push
loop
ret
fadds
aam
in
cmp
popa
shll
sub
data16
in
lock
jno
jp
add
cmp
decl
mov
int
xorl
movsb
imul
std
pop
mov
or
outsb
mov
xchg
addr16
pushf
iret
mov
hlt
pop
fldcw
filds
lods
icebp
test
sbb
lea
jb
sub
cmp
mov
out
sbb
and
scas
xchg
adc
xor
mov
xor
pop
andl
test
add
lret
subb
xlat
cmp
iret
fs
out
std
push
loopne
ja
fs
in
cwtl
shl
cmp
into
je
mov
pop
aas
lahf
daa
es
mov
clc
enter
adc
inc
je
xor
fstpl
jp
dec
push
jmp
movsl
arpl
arpl
les
sub
sbb
je
mov
cmc
arpl
mov
jo
cmpsb
int3
dec
outsl
push
sbb
movsb
stc
mov
andb
inc
aaa
xchg
adc
jmp
dec
js
lret
mov
sbb
iret
lret
add
mov
push
cmp
insb
mov
sbb
scas
test
mov
into
cltd
testb
pop
push
pop
scas
mov
clc
or
xor
jne
add
mov
inc
jmp
shl
pop
lock
rclb
lock
mov
add
frstpm(287
in
lret
daa
mov
add
jo
hlt
fstps
pop
mov
mov
mov
loopne
mov
pop
cmovne
lea
push
pop
cwtl
inc
xlat
mov
test
stos
or
test
ret
mov
nop
pop
je
fidivrl
int3
js
cmp
popf
adc
push
ljmp
add
sti
sub
push
lcall
je
popa
jl
orl
jb
jp
cwtl
xor
push
pushf
xchg
addr16
mov
push
or
outsb
mov
push
ud0
mov
movb
stos
mov
sti
ss
call
adc
ret
test
mov
inc
call
cltd
les
xor
mov
mov
ret
jno
ret
push
or
dec
jl
jo
arpl
inc
xor
enter
dec
aam
adc
sbb
test
fstpt
mov
jnp
mov
push
inc
mov
fwait
rorw
jle
in
push
sbb
inc
adc
lods
adc
test
mov
fldt
mov
les
mov
pop
repnz
cli
inc
dec
test
jb
call
ret
sbb
out
int3
or
shrb
inc
outsl
push
push
imul
ss
jno
and
mov
faddl
lods
push
pop
push
jle
jp
sahf
orl
jo
mov
filds
xchg
test
inc
movsl
lds
mov
xchg
pop
leave
pop
xchg
xchg
inc
mov
shll
xchg
push
or
lock
repnz
ficoms
push
ljmp
dec
dec
mov
pop
fwait
cmp
and
mov
sub
scas
xchg
stc
xchg
mov
xchg
test
outsl
and
add
pop
rcrl
inc
dec
add
cld
imul
dec
push
out
mov
xchg
ret
inc
fldcw
or
inc
imul
out
mulb
push
test
sbbb
mov
xor
and
mov
pop
jmp
popf
lahf
mov
xchg
jg
fisttps
push
es
lret
addb
cld
ljmp
pop
add
push
push
cmp
out
jno
inc
loopne
adc
fsts
sub
push
popa
aad
and
int
rclb
sub
push
or
out
pop
push
test
lea
mov
mov
insb
sub
xchg
pop
sbb
out
xor
push
fnstsw
xlat
mov
ja
add
or
mov
fs
dec
daa
mov
pop
fimuls
fdivrs
mov
jmp
adc
outsb
rcl
lods
lret
cs
lea
jle
push
jne
sbb
mov
ss
mov
inc
adc
adc
stos
repz
icebp
popl
xchg
lock
mulb
int
cmpsb
and
xchg
mov
xor
dec
adc
dec
cmpsl
xor
cmp
mov
cmp
fidivrl
push
jle
insl
jb
aam
fistpl
dec
xor
adcb
enter
pop
cmp
jo
push
mov
dec
or
sti
aaa
ror
sti
xchg
shrl
aas
inc
fdivrs
lods
movsl
iret
loop
les
idivb
xchg
lds
add
ljmp
inc
in
cmpsl
xchg
stos
movsl
popf
pop
dec
lahf
inc
lahf
out
mov
je
pop
loope
mov
iret
aam
imul
cmp
adc
xchg
enter
mov
mov
adc
andb
xlat
addl
mov
add
adc
imul
cmp
mov
adc
ljmp
dec
jae
ds
inc
dec
enter
cmp
sbb
adc
mov
dec
jne
add
sbb
sbb
jge
push
iret
and
or
mov
gs
and
add
shll
jbe
mov
mov
push
push
ret
nop
inc
inc
jb
cld
icebp
sahf
cmp
into
les
mov
andb
cmp
xchg
jge
test
push
cmc
dec
dec
cli
scas
sub
jne
jno
xchg
inc
or
sbb
adc
aad
les
lcall
test
in
cmc
jo
or
fisubrl
inc
stc
int3
xor
cmp
jns
call
insb
mov
sub
xchg
push
jnp
into
aad
xchg
cmp
test
dec
sahf
adc
movsl
hlt
hlt
dec
in
gs
aam
shl
fcomip
std
push
lock
mov
gs
push
jge
push
out
arpl
ds
xchg
cmp
cmpsb
data16
push
and
inc
test
fsts
sub
test
dec
bound
mov
mov
xor
jae
and
cli
mov
mov
mov
mov
fidivrs
push
push
xchg
jmp
dec
mov
cmp
nop
in
sti
pusha
sub
xor
cmpsl
out
ret
int3
iret
pushf
sbb
jl
and
or
cmpsl
xor
push
cmc
nop
inc
jge
cmpsb
xor
in
into
in
push
sub
gs
or
jecxz
adc
cmpsb
and
sub
or
mov
jb
or
pop
push
cmp
xor
mov
pop
jle
jo
mov
pushf
into
int
fs
shlb
scas
or
or
ret
xchg
test
xor
jbe
xor
jno
ja
jnp
and
sub
add
pop
cmc
jle
cmp
mov
pop
ds
or
xchg
dec
pop
sbb
push
push
sub
xchg
hlt
arpl
int3
and
out
jb
outsb
push
xor
pop
pop
xchg
jecxz
add
mov
enter
fisttpll
int3
mov
pop
orb
mov
jno
add
scas
rcrb
push
sbb
lds
adc
leave
push
daa
jo
scas
pop
ror
mov
push
mov
xchg
inc
pop
lea
inc
add
fsubrl
adc
movsb
in
scas
mov
mov
pusha
push
ss
mov
scas
les
pop
inc
ret
outsb
cmp
and
movsb
add
or
sbb
lret
into
push
pop
inc
dec
add
adc
dec
ljmp
scas
add
mov
in
push
lods
jo
roll
pusha
and
loope
enter
or
add
jns
daa
mov
sbb
mov
les
lods
mov
mov
fadds
push
jle
mov
push
xchg
mov
xchg
xchg
or
test
pop
test
pop
dec
pop
xchg
in
neg
xor
xor
push
xchg
ja
sbb
pop
jno
cmp
xchg
mov
adc
jns
hlt
sbb
fstpl
stos
mov
aaa
subb
sbb
sbb
push
sbb
push
mov
mov
pop
stc
stos
cmp
fimuls
and
dec
or
loope
jg
ljmp
push
addb
addr16
lds
mov
ss
jae
mov
cmp
leave
stos
adc
lret
lods
test
inc
loope
push
or
add
xor
test
dec
adc
out
and
mov
ds
xchg
inc
mov
pop
popl
fadds
imul
and
pusha
in
iret
dec
cld
sub
shrl
outsl
inc
sbb
jns
std
sub
movsb
arpl
push
test
dec
addr16
mov
push
push
scas
sub
push
rclb
addb
fdivr
shufps
mov
push
cmp
xor
adc
xchg
cmpsb
add
cld
push
mov
push
mov
and
imul
push
icebp
addr16
ss
mov
in
lret
pop
icebp
mov
rcll
mov
pop
cld
fmuls
adc
jb
sbb
pop
out
pop
adc
adc
adc
loope
int
push
ret
xchg
xlat
jbe
cmpsb
mov
add
popa
lds
gs
jp
mov
inc
movsl
adc
lock
add
pop
push
mov
ret
mov
fnsave
inc
push
cmp
popa
outsb
sub
es
mov
and
repz
inc
pop
jo
and
test
js
dec
cmp
test
loop
cmpsl
push
lods
adc
jne
jmp
or
sbb
in
stos
popa
push
loopne
test
addr16
test
xor
adc
incb
inc
and
ljmp
mov
push
pop
xchg
dec
out
repz
xor
lcall
filds
xor
inc
mov
in
jne
inc
ljmp
aas
ds
bound
shrb
insb
fmull
orl
pusha
pop
inc
out
jle
scas
dec
fldt
adc
inc
arpl
xlat
xorb
jbe
cmp
nop
in
test
dec
les
lods
pop
mov
fstpt
arpl
lcall
sahf
xor
cmpsl
imul
jge
mov
pop
iret
pop
fnstcw
mov
dec
mov
scas
arpl
sub
lods
mov
repz
or
jecxz
cli
sub
aas
pop
arpl
mov
jns
or
into
adc
mov
mov
pop
sbb
test
cmp
pop
rcr
cli
mov
jno
cmp
push
cmp
test
pop
fcmovnu
aam
adc
and
mov
xchg
jno
sahf
lahf
rcll
pusha
push
push
inc
xchg
mov
jnp
stos
cmp
jo
and
lret
fmulp
jbe
jae
jl
aaa
xor
push
push
imul
or
pop
test
sub
sub
pop
cmpsl
xor
cwtl
inc
out
dec
repz
out
mov
xchg
ror
sbb
popl
dec
mov
enter
pop
jecxz
jno
inc
dec
jne
fdivr
fisubrl
xor
push
mov
jmp
roll
in
aas
cmp
fiaddl
lock
cmpsb
adc
int
nop
mov
and
mov
pop
arpl
fstenv
and
test
dec
xchg
js
test
jns
lods
jmp
xor
inc
push
lcall
lods
mul
sti
inc
and
shlb
pusha
inc
mov
leave
loope
dec
push
pop
mov
shrb
hlt
mov
xor
sub
mov
js
cmp
fisttps
clc
out
pop
lahf
add
jb
enter
mov
je,pt
xchg
add
cmc
sub
mov
lods
mov
loopne
shl
jbe
sbb
pop
int3
inc
bound
adc
or
outsb
cmp
xchg
pop
sbb
adc
jecxz
mov
xchg
jp
sub
push
xor
bswap
dec
add
or
imul
sbb
fistpl
xor
std
pusha
jo
lcall
mov
inc
mov
and
movsb
pop
cwtl
adc
ret
push
rol
pusha
mov
xchg
or
lock
or
mov
jl
inc
jnp
or
lahf
lret
push
std
xchg
inc
nop
loope
mov
ds
adc
outsb
jmp
out
cmp
pusha
add
xor
sbb
ljmp
push
int3
dec
xchg
add
testb
sub
stos
push
mov
add
test
add
sbb
mov
fstpt
mov
shll
es
add
sti
push
repz
inc
or
jmp
stos
nop
inc
int3
mov
imul
fwait
and
dec
pop
sub
jle
adc
ret
es
mov
stos
sarl
cmpsb
and
dec
pop
sbb
movsb
add
inc
add
in
push
push
scas
jnp
int3
test
and
aaa
mov
inc
movsb
push
ja
xchg
scas
in
sub
lahf
and
ret
pusha
lds
xor
adc
pop
ret
cwtl
mov
jp
sub
fsubs
sar
dec
popa
mov
loope
mov
and
adcb
test
jns
ljmp
dec
pop
mull
sub
cmc
mov
xor
mov
adc
subl
sbb
jg
hlt
jg
inc
insb
xor
pop
push
stc
dec
js
and
test
arpl
jge
pop
cwtl
adcb
leave
mov
xchg
imul
cwtl
mul
xor
jo
lret
aam
mov
ficoml
add
jns
iret
jns
ret
adc
insl
sbb
or
pop
mov
add
nop
lahf
mov
les
movsb
lret
mov
sbb
xchg
push
ss
sarb
mov
push
push
fistps
jo
andb
dec
cmp
sub
call
inc
test
jge
test
and
insb
daa
in
adc
fdivrl
hlt
pop
adc
rorl
pop
lds
fcmovu
pop
rol
mov
in
sub
push
gs
mov
mov
mov
shlb
fs
adc
sub
mov
pop
push
fsubl
xchg
sub
pop
push
mov
jno
push
inc
jae
xchg
ret
xchg
sbb
and
adc
ss
xor
xchg
xchg
xchg
enter
ljmp
adc
jb
jle
jno
aas
and
mov
imul
xor
out
xor
xor
xchg
mov
mov
popa
sbb
bswap
out
je
cs
pop
in
test
fmuls
push
es
lcall
stos
das
mov
add
stos
clc
xor
push
dec
cltd
idivb
adc
xchg
xor
fistps
dec
test
mov
loope
jo
dec
jecxz
pushf
insb
mov
lds
iret
stc
das
fnsave
mov
add
in
nop
sbb
sub
nop
mov
outsl
push
sbb
ja
into
xor
xchg
in
and
sub
jne
mov
test
mov
inc
mov
mov
mov
int
mov
fidivs
jo
daa
or
imul
jne
pop
pop
jg
repz
pop
das
addr16
xchg
cs
pushf
das
or
and
dec
dec
out
ljmp
dec
adc
inc
ja
and
fwait
stc
fisttpl
test
js
or
das
jle
pop
sarb
add
out
mov
out
pop
mov
aam
iret
or
jp
insl
mov
inc
jg
out
adc
or
inc
push
fistps
cli
adc
loopne
inc
in
dec
mov
lds
cmpsl
sub
daa
cwtl
notl
add
push
outsb
lods
mov
pop
or
jb
xlat
dec
outsl
sbb
xor
test
fdiv
or
cs
pop
lea
ret
jmp
dec
into
scas
imul
pop
mov
xchg
jns
test
rcrb
lock
clc
cmpb
push
adc
jle
dec
lock
mov
popf
mov
nop
mov
and
mov
leave
stc
add
mov
pushf
jb
push
lds
pop
int3
imul
dec
jge
jge
xchg
stos
aaa
clc
ljmp
subb
fists
ret
xor
cmp
imul
cmp
dec
inc
mov
pop
add
fdivrs
dec
add
sbb
xor
cmpsl
xchg
pusha
fiaddl
outsl
sarl
iret
mov
sub
add
enter
fstpt
xchg
mov
shl
xchg
mov
xchg
or
xchg
lahf
fisubl
cmp
test
mov
or
fists
fs
test
fimuls
pop
lret
add
aas
stos
ja
pop
fimuls
or
ss
aam
mov
outsl
in
mov
testl
inc
mov
rcrb
loope
push
add
int
aaa
aas
jno
hlt
bound
out
addb
lock
pop
push
and
adc
sti
je
sbb
mov
ds
inc
lcall
xchg
das
adc
dec
clc
pop
xor
pop
cmpsb
fstpt
inc
test
mov
adc
jg
and
stos
outsl
pinsrw
orb
arpl
pcmpgtb
lock
mov
lret
hlt
das
addr16
fists
mov
cmp
cli
push
imull
test
repnz
fcmovbe
push
adc
mov
sub
pushf
mov
je
pop
cwtl
imul
loopne
mov
inc
xchg
push
sbb
js
sti
insl
iret
jle
jbe
sbb
xorb
int
xchg
jnp
jbe
mov
jae
shlb
sbb
xlat
cmp
cld
test
push
mov
mov
out
add
aas
aas
pop
iret
imull
dec
xchg
daa
mov
fldt
lods
stos
jg
and
add
or
mov
dec
fucomip
inc
add
pushf
fisubrl
push
loop
dec
mov
lea
mov
pop
fdivrl
lods
xchg
fsubs
nop
icebp
cmpsb
data16
testl
inc
outsb
mov
xor
cmp
int3
dec
push
lods
or
rorl
mov
movsb
cs
mov
inc
mov
mov
add
dec
mov
jb
jne
push
into
mov
pop
ja
ret
pop
test
scas
sahf
cmp
int
rcrl
test
iret
loope
sbb
pop
mov
adc
cltd
jmp
lea
daa
and
jno
out
daa
inc
xlat
insl
leave
jb
je
in
sbb
es
popa
ljmp
in
or
js
sub
cmp
cmp
adc
or
jno
mov
insl
or
jbe
sahf
imul
pop
push
vfrczss
mov
shlb
ror
rcll
jle
push
mov
add
mov
sbb
jb
and
popa
xchg
gs
fucomi
icebp
cmp
ss
mov
sti
sbb
out
inc
push
xchg
fwait
stos
mov
mov
sbb
sbb
cmp
loopne
xchg
sub
test
sub
jl
add
pop
mov
fists
iret
inc
dec
xchg
test
push
sbb
test
outsl
insl
sub
add
test
cmpsb
mov
push
sub
mov
lds
mov
lds
adc
ja
std
hlt
cmpsb
jge
cli
test
icebp
call
outsb
cli
mov
adc
jne
jno
jb
fs
ja
aad
adc
push
es
lods
push
int
pop
js
ds
mull
es
jmp
scas
jnp
xor
ja
sub
pushf
int3
mov
and
addr16
inc
cmpsl
ds
sbb
outsb
les
lret
mov
je
push
mov
or
in
js
or
rorb
pop
aad
sub
aad
sbb
into
cld
test
je
leave
pop
into
mov
sbb
cmpsl
xchg
stc
mov
les
das
js
mov
jle
dec
pop
cs
hlt
mov
add
xor
adc
sahf
mov
pushf
test
add
sti
xor
push
mov
orb
sahf
lret
xor
mov
daa
dec
vaddsubps
cld
mov
insb
sar
or
pop
shrb
cmp
fistpl
xor
push
hlt
mov
xchg
cmp
cmp
cmpsb
mov
jns
dec
enter
in
xor
je
stos
lcall
pop
cmpsb
sub
add
popf
jo
add
dec
mov
mov
xchg
sbb
scas
lods
aam
dec
int
movsb
sbb
mov
loop
sbb
mov
lds
enter
push
lret
and
adc
repz
cmp
adc
sbb
xchg
enter
je
push
test
std
pop
mov
xchg
scas
pop
call
dec
movb
fcomip
aad
mov
outsb
xchg
pop
cmp
dec
jo
arpl
aam
paddq
addr16
pop
mov
inc
push
sub
movsb
mov
mov
pop
cld
cmp
inc
mov
js
cmc
loop
mov
xchg
push
iret
xlat
bound
inc
xchg
lock
or
test
test
nop
sbb
adc
pusha
mov
loop
jno
sub
inc
ja
mov
jae
sub
loop
pop
bound
jle
out
jno
mov
aas
test
mov
rorl
dec
fld
add
jecxz
sbb
dec
mov
dec
insb
int
dec
add
adc
test
fwait
xchg
aad
pop
test
pop
xchg
insl
lcall
add
mov
pop
cmp
hlt
push
mov
mov
sbb
pop
sub
cs
cmpsb
and
cmp
xor
inc
jae
leave
insb
dec
mov
in
movsb
ljmp
or
push
inc
test
xor
loope
bound
sub
and
les
lret
or
clc
out
ret
nop
pusha
idivb
inc
cmpsb
clc
repz
cmp
adc
dec
dec
repnz
push
in
lock
aaa
and
or
pop
bound
into
or
sub
xchg
mov
xchg
cli
test
push
into
or
mov
outsb
mov
insl
scas
push
pop
lods
into
imulb
cmp
mov
xor
mov
popa
lods
or
bound
or
pusha
mov
dec
or
jo
es
jp
lret
add
dec
sub
add
sub
and
enter
scas
imul
ficoms
sub
cmc
test
cwtl
out
and
hlt
call
in
fidivl
mov
je
lret
in
movmskps
and
push
shll
loopne
jl
push
push
iret
push
ljmp
stos
andb
xchg
aad
mov
sub
cwtl
mov
cmp
push
cltd
xorb
xchg
popf
pusha
inc
aaa
das
mov
cmp
gs
roll
sbb
repnz
and
or
je
lret
xor
stc
push
loope
add
pushf
sbb
data16
cmp
cmp
and
add
push
or
adc
pop
inc
adc
sbb
cmp
mov
ljmp
dec
je
jno
cmpsl
or
xchg
stos
mov
sub
jge
sbb
adc
shl
jnp
lcall
xor
or
xchg
jle
lret
shll
repz
dec
rolb
mov
push
dec
mov
jl
lret
push
pop
shl
test
andl
dec
fisttps
and
jb
lret
xor
jne
xchg
fs
out
mov
mov
sbb
lods
lock
roll
or
mov
imul
repnz
mov
insl
push
pusha
mov
xlat
lods
jmp
jne
insb
sti
scas
mov
cmp
mov
daa
movsb
push
or
aam
jae
cmp
enter
and
lds
fldt
or
inc
cltd
cli
loope
adc
pop
add
mov
mov
rorb
mov
pop
jno
mov
mov
xchg
aas
mov
add
xchg
pusha
cmp
push
stc
xchg
repz
call
ret
dec
push
cmp
std
xor
mov
fsubs
test
cmp
test
inc
inc
xchg
or
sub
insl
imul
movsl
iret
jns
lahf
adc
push
imul
bound
add
mov
cltd
repz
int3
mov
xchg
int3
stos
out
fildll
push
lret
andb
iret
enter
jp
cmc
jb
lods
and
ss
sbb
scas
add
inc
pop
mov
mov
hlt
scas
pop
mov
xchg
cld
pushf
push
orb
inc
out
mov
xor
dec
pushf
shrb
es
aam
jb
mov
movsb
dec
fistpl
out
jnp
or
and
cld
ss
cltd
gs
std
nop
xor
mov
enter
mov
gs
icebp
les
ss
and
repnz
dec
lahf
out
xchg
out
inc
adc
cli
mov
js
std
mov
icebp
test
sbb
mov
adc
push
fistpl
sarl
xor
push
mov
addr16
aas
xor
or
jbe
mov
cmp
jecxz
pop
sub
fcmovnb
sub
roll
fstpl
sub
popa
xor
fistpll
push
xchg
sbb
dec
sub
mov
xor
movsb
mov
push
mov
jo
mov
mov
push
loope
inc
jmp
push
aad
adc
push
fldl
jecxz
lds
fcmove
sbb
mov
adc
push
data16
mov
jnp
fwait
shll
sbb
ds
rcrb
inc
nop
xchg
gs
dec
repnz
xchg
xchg
popa
inc
sub
mov
movsl
int
faddl
or
insl
dec
mov
inc
aad
addr16
mov
jae
daa
jbe
and
aaa
mov
out
ds
pop
xor
out
rorb
inc
out
fcomps
sbb
xor
scas
ret
push
lds
or
or
jge
jno
xchg
mov
outsl
jle
lret
cli
adc
pop
fldenv
outsb
sub
jmp
push
loopne
dec
xor
and
pushf
and
leave
sbb
xchg
stc
push
dec
cmpsb
repz
in
push
sahf
clc
mov
adc
test
mov
inc
lock
cmpsl
dec
inc
xchg
std
mov
or
nop
aad
push
ret
and
leave
xchg
mov
enter
orb
jge
fcmovnb
push
cltd
nop
lcall
mov
dec
repnz
pop
cs
ret
loop
jne
cmpsl
ljmp
lret
mov
adc
sub
pop
dec
mov
cmc
out
fiaddl
cmp
cmp
aas
lods
push
inc
jge
mov
add
in
shrl
pop
adc
fdivr
loopne
xlat
shll
mov
and
push
bnd
out
jo
sub
or
jno
outsb
aad
push
das
add
ljmp
xchg
push
cmp
inc
mov
or
adc
dec
or
inc
in
mov
push
push
adc
mov
icebp
popf
out
dec
mov
or
push
add
mov
mov
lods
dec
xor
test
scas
cmpl
gs
imul
je
mov
ficomps
and
push
sub
into
ror
push
repz
sbb
cs
cwtl
adc
pop
push
push
mov
xor
hlt
mov
lods
js
add
insb
daa
insb
in
lock
and
das
or
dec
lret
mov
mov
push
xor
adc
push
iret
lea
test
xor
or
dec
xchg
leave
inc
jne
jle
xchg
xchg
mov
cmpsl
jp
mov
and
lock
push
xchg
inc
outsl
jne
jg
mov
in
int3
and
push
clc
pop
vpunpcklbw
mov
mov
jle
pop
stos
dec
jle
mov
rorl
mov
loope
lret
mov
sbb
push
stos
xlat
fnsave
inc
adc
out
jge
imul
pop
test
xor
je
pop
insb
mov
clc
sub
test
and
cmpb
pop
mov
fistl
loope
scas
movsl
in
inc
ljmp
sbb
mov
int3
repnz
sbb
insb
fimull
mov
dec
imul
and
mov
aaa
shlb
mov
in
leave
inc
rclb
mov
fnstsw
mov
call
jne
mov
inc
cmpsl
xor
dec
stc
popa
push
lret
jo
ds
pusha
adc
push
add
mov
decb
fnstsw
ss
dec
jne
insl
movq
cmp
jg
mov
outsb
mov
sarl
inc
dec
pop
dec
mov
pop
rorl
mov
lret
mov
mov
xor
xchg
cwtl
shll
and
jl
dec
stos
mov
cmp
cltd
and
push
jmp
add
enter
mov
pop
jge
sbb
sub
movsb
push
push
or
cwtl
cltd
or
fwait
xor
cmp
ret
lods
jns
jle
push
xor
cmp
aad
daa
nop
pop
aad
add
add
aas
arpl
jl
mov
mov
cmpsb
ss
mov
test
lahf
jae
out
or
repz
pop
fdivp
jmp
add
aam
sbb
sbb
movsb
xchg
xchg
adc
cwtl
push
mov
xlat
fisttpll
rolb
insb
frstor
xorl
ljmp
xor
ret
incb
lcall
sub
insl
scas
add
out
cs
movsb
cwtl
jo
xchg
lods
cmc
outsb
iret
xor
cli
ljmp
sbb
ret
pop
inc
jno
mov
or
sub
popf
sbb
pushf
adc
dec
leave
insl
cwtl
pop
and
sbb
pop
and
popa
or
jg
dec
stos
mov
jl
push
lcall
lahf
ljmp
pop
test
scas
mov
cld
idivb
mov
push
lods
imulb
shll
testl
cmp
in
ret
or
sarb
imul
inc
icebp
fbld
mov
lods
call
add
rorl
aaa
inc
mov
subb
daa
mov
loope
call
les
pop
std
sub
cltd
push
pusha
hlt
lods
clc
call
sbb
scas
sub
dec
loopne
push
cmp
jp
ja
xchg
xchg
pushf
arpl
jecxz
and
fcoms
daa
fimull
daa
push
inc
das
clc
iret
movsl
js
jecxz
or
mov
adc
cmp
dec
insl
cmp
cli
pop
inc
push
icebp
cmp
pusha
push
rcll
sti
enter
sti
jg
jle
ret
xor
dec
mov
xchg
pop
pop
je
decb
insb
dec
pop
mov
adc
imul
aam
cmp
mov
sbb
dec
fdivs
in
mov
mov
mov
mov
ret
push
mov
cmpsl
stos
and
mov
pop
dec
jmp
add
into
jb
out
fidivs
sbb
or
mov
inc
loop
lret
cmp
or
aad
lret
dec
jnp
xchg
icebp
mov
outsl
ret
inc
cmp
mov
cmp
add
aad
pop
in
mov
sub
dec
add
outsb
sub
xchg
mov
leave
out
mov
dec
pop
aas
add
add
sbb
mov
jecxz
stc
lea
adc
cs
ja
insl
adc
mov
mov
insl
sub
aad
lret
fistps
xor
js
cwtl
push
pop
adc
call
test
cmpsb
cld
ds
aam
jmp
push
and
loopne
jecxz
into
xchg
push
adc
pop
push
mov
aas
mov
fwait
decl
mov
fcmovbe
mov
cwtl
and
popa
adc
rolb
data16
xchg
mov
ret
dec
pop
inc
push
fnstcw
les
xorl
cmp
out
pushf
lret
in
dec
add
mov
rcl
das
sbb
test
ja
mov
hlt
inc
jae
xor
adc
repz
xchg
pop
popa
inc
and
lods
jp
cld
sbb
leave
mov
pushf
or
out
int
cmpsb
imul
add
mov
lods
mov
pop
pop
pop
lds
mov
xchg
test
and
mov
jle
outsb
out
sti
insb
mov
and
hlt
cmpsb
out
test
jne
dec
cwtl
inc
shll
fwait
lock
inc
ret
pop
loop
scas
inc
loopne
lods
push
dec
je
jl
mov
sahf
imul
out
dec
mov
push
push
cwtl
or
aad
mov
pop
nop
sar
sub
fimull
iret
in
lds
cmpsl
xor
out
xchg
fidivrl
ds
fnsave
push
call
and
popa
insl
inc
cmc
jae
dec
xchg
pop
mov
mov
mov
sti
ja
in
in
out
outsl
ds
outsl
in
cmp
xchg
stos
stc
ja
mov
xor
sbb
lret
outsl
or
dec
dec
out
dec
xchg
or
or
mulb
push
push
pop
xchg
or
sub
and
jbe
cmc
out
clc
inc
int
pop
adc
mov
jo
loope
cmp
xchg
jecxz
xlat
mov
pop
fsubrl
xchg
pop
popa
mov
inc
arpl
mov
lret
add
xor
push
xor
cmpl
inc
cltd
fidivl
pop
in
jmp
sub
cs
add
adc
shr
xchg
or
cmc
stos
jb
add
daa
movsl
mov
add
mov
sub
push
push
cmp
mov
leave
loopne
pop
movsl
push
test
into
dec
or
cli
mov
xchg
jb
cmp
in
add
push
test
cwtl
and
in
nop
scas
repnz
or
mov
rol
in
std
loopne
pcmpgtd
in
out
adcb
pop
fcomps
imul
imul
out
in
sub
flds
ret
xchg
or
pusha
arpl
insl
arpl
mov
sub
pop
dec
int3
std
mov
xchg
imul
mov
jp
dec
mov
fmulp
fiadds
ret
int3
iret
enter
loopne
ret
ror
notb
ja
xor
cld
sub
std
sub
cmp
sub
std
stos
int3
xchg
xchg
cmp
pop
decb
xchg
mov
adc
sbb
loop
and
adc
mov
sub
xchg
cltd
aam
adc
jo
jae
mov
imul
aad
andb
nop
imul
fidivs
mov
loope
sub
ljmp
loope
inc
ficompl
movsl
cmp
movsb
xor
ja
test
pop
xchg
fwait
enter
aam
ret
lds
je
aad
lret
push
les
fdivl
enter
adc
mov
mov
xchg
inc
jmp
push
jb
pop
sbb
out
xchg
pop
mull
mov
daa
and
ret
lea
nop
pop
sti
lret
xor
cmp
mov
mov
mov
push
loopne
add
inc
fsubl
inc
je
mov
lock
push
sbb
cmc
push
dec
and
jno
mov
mov
inc
inc
fs
pop
mov
jne
loope
cmpsl
push
mov
sbb
inc
sub
sbb
popa
lar
push
jae
and
mov
or
shrb
pusha
adcl
dec
filds
and
faddl
shrb
das
stos
or
in
out
mov
imul
fstl
stos
ficompl
pop
enter
xchg
ror
cld
rclb
jmp
loope
pop
sbb
adc
icebp
mov
scas
fs
jae
sub
imul
mov
xchg
call
cwtl
fnstsw
add
mov
xchg
push
lds
enter
sub
stos
movsb
imul
dec
lea
pop
lret
movsl
iret
fldcw
ljmp
sarb
lret
jmp
idivb
push
inc
and
jns
in
mov
jae
or
mov
xchg
and
adc
int3
shll
lods
cmp
pop
popa
test
mov
adc
mov
es
shr
aas
call
mov
inc
adcl
inc
jno
test
cmp
lock
int
aas
cmp
pop
adc
loope
pop
nop
popa
cmp
ja
adcb
gs
or
flds
xor
rolb
ss
cmpsl
mov
add
sti
pop
dec
jb
cmp
pusha
inc
fs
pusha
mov
add
sub
mov
jne
jmp
cmpsl
ss
shrb
fs
lods
loope
sbb
inc
incb
das
jbe
into
adc
pop
mov
jbe
mov
mov
pop
push
adc
cmp
pushl
or
movsb
icebp
xchg
jge
jecxz
fnstenv
jp
jecxz
push
sub
and
insb
sub
push
mov
mov
pusha
mov
ret
addl
pushf
cmp
adc
mov
sub
dec
ds
mov
adc
imul
cmp
sub
mov
xchg
add
jbe
jae
sub
aad
stos
hlt
imul
sbb
ret
out
loopne
sub
mov
jo
std
movsb
testb
xchg
fucompp
mov
xchg
cmp
push
xlat
popf
hlt
jge
push
rcll
ret
loope
mov
shlb
add
ja
jne
adc
pop
push
pop
cmp
sbb
scas
mov
jle
or
add
lcall
fs
into
mov
testb
push
call
or
jns
test
or
pushf
shrl
ret
inc
pop
in
popl
movsl
jecxz
mov
fnstenv
add
cmp
aam
sub
clc
mov
and
loopne
outsl
mov
pop
arpl
jno
adc
jo
call
sbb
or
fsubl
push
testl
out
xor
fidivrl
movlhps
rcrl
ret
femms
xor
xchg
adc
sbb
aas
inc
cmp
adc
dec
fidivrs
mov
mov
inc
lods
and
das
pop
aaa
adc
ss
fwait
sahf
jb
lods
and
mov
pop
inc
push
lahf
cmp
jmp
or
es
cmp
gs
dec
ljmp
push
adc
in
push
hlt
fs
aam
stos
dec
and
addr16
popa
and
adc
pop
add
adc
mov
hlt
cmp
into
pop
bnd
add
imul
and
lret
dec
jmp
addr16
lret
daa
mov
dec
fistpl
int
xchg
mov
jmp
in
mov
jl
outsl
push
shrl
pop
xchg
lret
push
cmp
inc
es
jb
inc
jecxz
loop
lahf
daa
xchg
int3
lahf
push
inc
sbb
das
notb
push
push
pop
and
addr16
bound
and
shl
loopne
aad
rorl
rclb
aaa
mov
outsl
sbb
vmovlpd
xchg
jae
pop
add
sbb
sbb
dec
insl
setle
pop
fadd
mov
out
and
jge
testb
scas
xchg
sbb
je
cmp
add
cmp
pop
and
sub
or
neg
xchg
mov
out
repnz
adc
push
pop
aad
cmp
cmp
gs
es
decl
mov
call
stos
mov
sbb
cmp
jo
sub
mov
or
xor
dec
insb
test
add
jno
push
jge
flds
push
mov
int
inc
adc
mov
sarl
lds
andl
inc
xchg
dec
and
pop
jmp
je
in
cmpsl
cmp
push
out
inc
fstpt
cmp
aam
pop
pusha
jnp
in
jp
lods
pop
test
dec
adc
xlat
dec
repz
xchg
int3
xchg
fisubs
sub
or
repz
push
push
jbe
xchg
jne
jns
imul
xorb
adc
fsubp
jge
and
sub
testb
enter
inc
jle
pop
or
mov
and
jecxz
leave
popa
aaa
cmpsb
jl
mov
out
pusha
or
inc
inc
adc
xchg
cli
push
or
call
imul
bnd
lods
or
fcmovnb
ret
xchg
dec
scas
cmp
push
mov
imul
out
cmpsb
into
add
insb
pop
inc
and
or
fildl
inc
fwait
sub
ss
pop
pusha
rclb
or
movsb
adc
adc
or
out
ret
xchg
push
and
xchg
pushf
imul
arpl
out
inc
icebp
sub
mov
nop
cmp
out
out
inc
add
jge
jge
mov
or
mov
and
push
push
inc
js
mov
adc
pop
cmc
cmpl
sub
cld
outsl
pusha
inc
push
popf
cmp
mov
out
and
dec
lret
xchg
adc
gs
scas
push
sahf
in
push
rclb
mov
xchg
jl
addr16
cmpsb
mov
xchg
lock
lret
cmp
lahf
pop
adc
loop
lahf
nop
popa
mov
jecxz
dec
push
mov
pop
push
stos
out
inc
ficoms
jnp
sbbb
mov
sbb
cld
mov
popa
lock
popa
xchg
adc
jle
sub
adc
aad
cmc
mov
mov
lret
and
out
push
ja
aas
movl
mov
icebp
mov
mov
cwtl
push
mov
pop
xchg
pop
mov
dec
lret
inc
add
divl
sbb
fldt
add
adc
mov
push
adc
jp
vucomiss
sbb
fdivl
in
xor
push
sti
mov
das
fnstcw
xchg
les
or
mov
stos
adc
outsl
div
jle
jg
popf
jnp
loopne
leave
push
mov
inc
dec
push
dec
dec
stc
cmpsl
das
bsf
shl
and
push
out
lret
iret
add
dec
hlt
jge
aas
mov
push
pop
and
call
call
clc
scas
insb
jmp
sub
mov
cmpsl
push
pop
or
decb
test
add
dec
mov
mov
std
xchg
mov
mov
sbb
repnz
lods
rolb
dec
jae
jecxz
pop
push
mov
mov
and
inc
adc
mov
mov
lods
pop
push
sub
and
xchg
jg
fisubl
jno
aad
add
in
inc
jns
fxch
jb
xchg
out
inc
or
lahf
enter
adc
add
les
cli
sahf
and
loop
cwtl
or
aaa
fwait
aaa
std
call
lods
adc
cmpsl
pop
int3
sbb
jns
lea
and
pushf
pop
gs
in
cs
popf
je
and
cli
cld
mov
leave
out
roll
sti
gs
cmp
fwait
js
les
add
cmp
loop
shll
movsl
mov
push
in
cli
push
test
in
lret
push
add
dec
pusha
stos
xor
push
push
loopne
and
fwait
xchg
fidivl
fisubs
in
adc
sbb
jle
pop
pusha
sti
repz
and
das
cmp
notb
pop
jecxz
dec
pop
lock
mov
pop
cmp
jmp
fcmovnb
push
xor
bound
mov
inc
dec
orb
jns
lods
xor
inc
jo
mov
mov
push
adcl
lds
sarb
bound
in
push
adc
incb
cmp
xor
push
mov
pop
pop
sbb
add
sti
rcrb
or
xchg
mov
addr16
sbb
fnstcw
mov
mov
inc
push
fs
shlb
xchg
outsb
ja
shlb
test
cmp
sub
mull
push
dec
fs
xor
lods
test
xchg
add
stos
push
mulb
lods
fcom
dec
loop
mov
ja
out
xor
adc
cmpl
divl
popf
js
call
into
scas
notb
sti
fsubrs
fiaddl
push
adc
insb
push
xor
mov
nop
jp
enter
jmp
mov
adcb
add
mov
ss
fldcw
clc
sbb
les
ljmp
lret
jl
shrl
aas
rcll
push
push
aaa
ret
mov
mov
mov
push
andb
cmc
mov
cli
pop
cmp
imul
mov
sub
sbb
outsl
push
stos
push
sbb
and
in
cmpsb
fdivr
xchg
inc
lods
enter
rcll
pop
adc
js
mov
test
lcall
dec
mov
mov
leave
push
dec
xchg
fsubr
mov
xor
push
int3
sub
lods
jmp
cld
sbb
pop
in
imull
lea
call
int3
divb
mov
pop
aas
sarl
jbe
dec
dec
iret
mov
test
mov
mov
aad
mov
push
fisubl
ss
or
xchg
cltd
pusha
jns
push
dec
rcll
aad
ljmp
sbb
hlt
scas
cld
inc
lock
js
jne
notl
jmp
inc
cli
pop
or
jmp
dec
fcoms
dec
aaa
js
mov
inc
mov
lods
lds
hlt
pop
jo
shrl
and
pushf
outsb
add
idiv
cs
aaa
push
dec
push
mov
cmc
clc
jge
ja
fcompl
xchg
cmpsl
mov
lcall
shlb
push
test
and
divb
mov
jge
cmp
pop
and
sahf
std
pop
cmp
lret
jbe
push
loop
loope
outsb
clc
int3
add
sar
mov
mov
sub
or
arpl
iret
lds
mov
jns
les
pop
push
sub
popa
jecxz
dec
xchg
cmp
jg
pop
pop
lahf
popf
loop
add
loopne
xor
lock
dec
mov
mov
cmp
mov
out
push
ret
std
test
in
sets
jp
repnz
fildl
cmp
lods
in
jge
out
inc
or
cmp
sub
test
pushf
fs
lahf
jmp
xchg
ds
and
nop
adc
jae
mov
jb
and
clc
imul
cmp
mov
bound
dec
add
cld
inc
mov
cmp
call
adc
int3
mov
inc
ret
and
xchg
push
int
cld
out
icebp
ljmp
push
cmp
inc
jp
xor
and
or
cmpsl
in
dec
mov
pop
sbb
push
mov
and
out
loop
insb
jp
fldcw
ficoml
icebp
stos
fisubrs
pop
movsb
pop
dec
cmpb
jae
push
jl
mov
lods
mov
aam
rcrb
into
loop
outsb
fstpt
or
cld
cmp
inc
lret
dec
enter
sti
insb
outsb
push
loope
sub
inc
mov
mov
mov
pop
outsl
jle
negl
push
scas
mov
lret
lahf
dec
mov
hlt
xchg
shl
adc
shlb
mov
lds
inc
or
and
lods
xchg
nop
push
pop
out
pop
ficoms
and
into
dec
jp
fs
pop
cmpsb
cwtl
jns
sbb
adc
mov
or
stos
setbe
cltd
jg
and
sbb
sub
push
fstpt
sbb
adc
leave
aad
dec
out
mov
push
in
sbbl
mov
call
ficompl
adc
pop
lret
test
repz
xor
mov
rol
scas
mov
dec
mov
testl
jg
and
inc
into
mov
neg
fs
pop
sbb
xchg
scas
scas
inc
push
mov
outsb
mov
out
xor
dec
imul
ljmp
addr16
jne
mov
mov
xchg
jbe
pop
enter
inc
sbbb
das
adc
cmp
hlt
loopne
adc
mov
cmp
stc
adc
pop
fsubrs
outsl
sti
xor
add
mov
bound
push
adc
call
or
and
js
pop
sti
movsb
ja
dec
inc
adc
jb
push
jle
sub
xchg
sub
xchg
pusha
in
push
mov
aam
mov
mov
dec
int
add
sarb
push
movsl
dec
push
pop
mov
out
cmpsb
cltd
out
or
push
std
inc
lcall
sbb
xchg
imul
bound
arpl
std
in
imul
or
imul
dec
inc
les
mov
dec
imul
bound
cmp
mov
test
push
stos
xchg
inc
aas
jo
cli
hlt
cmpsl
or
mov
aam
in
push
push
ficoms
lahf
out
adc
ret
dec
pop
xchg
push
sbb
jns
sarb
xchg
mov
repnz
mov
lcall
xor
loop
loope
inc
pop
roll
sub
divb
lret
mov
lock
call
loopne
call
push
or
in
les
addr16
fxch
add
mov
pop
cmp
cmc
or
jp
lahf
fstpl
stc
jbe
jo
or
lret
mov
mov
pop
and
dec
and
outsl
cmp
je
in
cmpb
xchg
mul
and
notb
adc
insb
pop
int
in
in
cltd
pop
call
lock
pop
test
inc
iret
cwtl
nop
iret
mov
add
pop
inc
repz
stos
add
mov
gs
mov
jae
jno
adc
ljmp
adc
addr16
xlat
sbb
out
aas
je
adc
aad
int3
repnz
out
gs
xchg
cmp
push
addr16
adc
add
jb
pusha
fistpll
rolb
das
nop
sub
icebp
push
cmp
jp
fsubp
xchg
icebp
dec
jbe
mov
aad
sbb
pusha
jo
adc
xchg
imul
xor
popf
dec
and
imul
jmp
inc
and
xor
stos
mov
fcmovbe
imul
cmpsl
ret
out
inc
adc
pop
cmp
stos
jmp
popf
out
rcr
mov
inc
pop
mov
mov
jbe
mov
xchg
pop
icebp
jno
imul
lods
dec
jno
cmpsb
scas
dec
sarb
push
cmp
data16
jg
enter
rcrl
iret
or
cmp
movsb
adc
sub
add
imul
aaa
je
psraw
sbb
out
hlt
lcall
ss
and
sti
inc
jns
mov
jmp
sbb
aas
jno
cwtl
out
in
stc
cmc
xor
out
pop
fsubs
test
test
add
out
push
xchg
pop
int3
pop
inc
fildl
cmc
xor
data16
and
xrelease
bound
lds
loopne
stos
xchg
mov
sub
and
rorl
push
cmp
adc
xor
repnz
aam
lods
fwait
xchg
stos
and
movd
stc
pop
or
fwait
push
cmpsl
inc
repz
ss
cltd
xor
in
xor
int
push
xchg
rcrl
lahf
jmp
pusha
ljmp
and
sub
or
int
or
mov
int
movsl
lods
or
aam
sahf
cmpsl
faddl
lods
out
stc
ret
icebp
push
stos
adc
test
lods
mov
and
and
stos
jmp
push
mov
add
movsb
sbb
push
cltd
enter
pop
push
movsb
push
jecxz
mov
mov
dec
lea
scas
fiadds
xchg
je
mov
pusha
and
scas
into
and
mov
and
mov
jge
cmpsl
push
popf
inc
sbb
fdivs
mov
cmpsb
ljmp
and
cmc
lcall
mov
add
push
mov
push
orb
xchg
dec
adc
aam
das
scas
or
ds
pop
jae
fwait
push
sbb
sub
mov
pushf
loop
lods
int
mov
clc
imul
shrb
adc
stc
jp
dec
mov
pop
push
lahf
dec
jle
inc
shlb
sub
push
inc
outsl
cmp
adc
xor
jnp
mov
xlat
cmp
jo
sbb
mov
lds
jno
ret
sti
add
cmpsl
or
pop
test
or
stos
inc
pushf
xor
mov
jp
in
adc
stos
pop
xlat
xchg
fldcw
popa
lcall
sbb
cmc
lds
adc
aad
lea
js
test
fldt
pop
xchg
call
test
fidivs
push
out
ds
fwait
adc
push
push
and
dec
add
mov
cmpsb
mov
mov
loop
jae
push
adc
test
sbb
mov
add
dec
mov
and
add
jl
outsl
mov
pop
imul
sbb
leave
imul
push
ja
dec
outsb
rcrl
pop
sbb
push
dec
sub
stos
jbe
or
push
insb
inc
aaa
into
jae
int3
mov
cwtl
jae
fstps
dec
add
dec
and
xor
movsb
arpl
sub
clc
sbb
cmp
mov
shr
or
nop
adc
lods
ret
or
xor
lcall
xchg
scas
fucomip
lahf
pop
cmp
xor
xchg
outsb
nop
push
adc
loopne
jmp
loop
cs
push
nop
and
jecxz
adc
adc
add
in
mov
dec
sub
enter
pop
fnsave
mov
adc
inc
push
cld
mov
mov
repz
dec
pop
rol
adc
cmp
call
loope
into
test
fidivrs
in
add
or
daa
dec
jmp
sub
push
lods
imul
mov
push
xchg
idiv
in
cmpsb
mov
lret
jb
xchg
pop
add
adc
cmp
sub
adc
roll
cmpsb
or
stos
pop
in
pop
inc
pop
lds
jecxz
js
inc
nop
add
xor
mov
mov
loopne
ss
sub
xchg
test
sbb
jle
out
sbbb
in
fcmovnbe
and
cwtl
outsb
dec
sbb
into
arpl
xchg
push
stos
inc
sub
lret
pop
dec
scas
push
and
inc
fcomp
xchg
pop
pop
sbb
add
out
lea
dec
sbb
std
divb
inc
push
xchg
pop
mov
dec
mov
xor
mov
addr16
sahf
scas
pop
push
outsb
sarl
fsubrp
lcall
sbb
test
stos
pop
add
iret
jge
and
test
ljmp
push
clc
in
ss
es
ret
shll
into
ret
mov
dec
mov
enter
mov
sbbb
hlt
call
shlb
jnp
fsub
mov
sbb
xor
sti
jns
pop
xor
addr16
test
test
rcr
push
jae
lret
push
ret
js
mov
cmp
dec
test
dec
mov
inc
pop
imul
sub
add
dec
cmp
stc
aad
jno
sbbl
call
dec
push
xorl
pop
cli
stos
push
into
and
nop
das
push
roll
imul
ret
mov
push
aam
push
in
add
push
add
sbb
cmp
fldcw
fadds
xor
add
inc
push
sbb
arpl
xchg
xor
cmp
hlt
mov
push
adc
jb
mov
push
mov
sbb
push
adc
and
je
cmp
and
pop
jmp
sub
xor
push
xchg
cmpsb
rclb
popf
xchg
mov
xor
sahf
pop
lock
dec
xchg
cmp
add
cmp
icebp
inc
push
adc
lret
mov
pop
lods
sub
xchg
push
mov
dec
jno
adc
gs
dec
fstp
push
lret
sub
test
mov
mov
dec
and
or
sbb
push
lds
or
jnp
xchg
mov
and
inc
stos
mov
inc
jle
out
fs
mov
popf
push
outsl
dec
stc
jb
inc
in
aas
movaps
test
ss
mov
cmp
sbb
jecxz
adc
mov
es
arpl
push
mov
sbb
sbb
mov
sub
or
gs
movsl
push
and
add
inc
mov
push
leave
xor
xchg
mov
dec
lahf
lods
cmc
and
jo
mov
xlat
push
das
mov
test
jnp
dec
push
lods
dec
and
iret
inc
shrl
mov
sub
ljmp
and
add
insb
mov
test
dec
cmp
ja
cli
popa
mov
nop
ficoms
cmp
sub
pop
mov
add
pop
mov
xchg
push
mov
cmp
into
inc
push
or
shlb
dec
sbb
dec
ror
push
fldl
xor
adc
jns
fistps
in
lods
pop
sbb
int
push
test
cwtl
jmp
gs
adc
shll
aas
ret
scas
icebp
and
faddl
sub
cld
dec
popa
adc
pop
mov
mov
or
dec
mov
sub
lds
dec
xchg
fadds
pop
lret
xchg
nop
std
es
pop
and
xor
mov
insl
or
push
aas
int
outsl
sub
sti
cli
adc
std
fidivs
ljmp
fwait
mov
push
call
inc
mov
stos
jne
xor
fidivl
dec
mov
movsb
push
jb
ja
aas
lea
les
dec
xchg
xor
dec
pop
ljmp
push
pop
inc
dec
jp
ljmp
pushf
jl
xor
cltd
or
mov
adc
jge
daa
cli
int
lcall
push
fnstenv
movsw
pop
sub
jbe
push
push
or
sbb
js
or
dec
lods
imul
je
daa
cmpsb
sbb
mov
pop
push
mov
inc
mov
cli
pop
jmp
ror
jp
sub
out
dec
or
data16
mov
aam
sbb
lcall
pop
adc
ja
adc
std
push
cvtpi2ps
add
push
add
add
sbb
in
das
mov
jae
ja
mov
inc
rol
push
outsb
outsb
or
cs
xchg
fistps
jo
sub
dec
jl
ret
push
jecxz
mov
sub
adc
int3
ds
jg
inc
mov
push
mov
out
outsb
push
int
subb
xor
das
cmp
xchg
bound
fidivrs
cltd
jbe
and
pop
cmp
jb
xchg
dec
ror
sub
add
aam
adc
push
jl
mov
movsl
in
or
mov
add
mov
repnz
inc
inc
ds
lahf
test
sub
mov
mov
outsb
push
pop
xlat
and
lds
adc
stos
mov
aad
push
sub
lods
out
xor
int
pop
cltd
cld
sti
js
add
sub
xchg
xchg
fidivrs
imul
jmp
xchg
pusha
cmp
in
leave
jle
mov
fcomps
loope
sbb
loop
loopne
fisubs
mov
movsl
mov
mov
movsl
cs
jno
outsb
mov
jnp
xchg
jp
cli
fildl
in
push
rcrl
rcrb
sub
scas
fidivl
or
or
add
add
xor
xor
cmp
cmp
or
jle
bound
mov
dec
add
sbb
jg
pop
ss
or
xor
cld
stos
push
lea
mov
cli
jb
lods
es
aam
lcall
push
and
sub
or
xchg
jnp
mov
lods
in
mov
sarb
rol
out
dec
lret
call
shr
int
test
mov
cmp
arpl
insl
test
in
cmp
sub
xlat
push
sub
shrl
fs
mov
test
andb
setge
and
mov
sti
mov
hlt
xorb
jb
mov
loopne
loope
adc
adc
mov
dec
outsl
loop
lods
inc
pop
aaa
in
je
push
test
scas
jbe
xor
sbb
test
fsubl
mov
sbb
lret
push
imul
mov
repz
pop
xor
mov
adc
jae
int3
loope
dec
mov
mov
adc
negl
lcall
scas
loop
fcomi
mov
adc
push
cwtl
xor
mov
mov
lcall
push
xor
das
in
sub
jne
lds
adc
data16
icebp
lahf
add
rcl
test
popf
push
adc
mov
lods
and
fistpll
mov
mov
jmp
jl
sbb
aas
cmp
add
mov
sbb
lret
pop
gs
rcll
test
in
inc
mov
mov
dec
daa
ljmp
jecxz
jg
fcompl
push
fstpl
dec
or
aad
mov
sahf
cwtl
adcl
sub
inc
es
sbb
ss
add
add
xor
loopne
gs
sub
lret
out
test
push
popa
int3
fcoms
xchg
nop
jmp
sbb
lea
push
or
rcrb
cmc
xor
xchg
fldcw
paddq
test
xchg
inc
mov
fsubrl
or
iret
jns
std
mov
cwtl
xchg
dec
imulb
mov
or
push
outsl
lcall
out
out
movsl
push
mov
fwait
or
add
push
mov
push
fstpt
int3
mov
jecxz
xor
and
or
roll
out
pop
sub
shrb
pop
fldcw
loope
lods
aaa
push
inc
or
hlt
dec
adc
adc
imul
pusha
pop
cmpsb
rcr
lock
rcl
and
or
cmp
nop
xchg
enter
mov
stos
mov
mov
xchg
mov
scas
cmp
add
pop
movsl
and
mov
std
int
and
loop
sbb
clc
cmp
loop
imul
sbb
enter
ret
mov
lds
icebp
lock
addl
mov
loopne
lods
pop
icebp
int3
jae
test
xchg
rorb
adc
lret
into
fst
push
js
test
xlat
test
or
and
inc
jno
js
je
je
cmc
mov
divl
inc
into
jns
xor
into
sbb
xchg
leave
int
pop
loopne
ds
jg
push
pop
stos
sbb
leave
push
leave
or
add
jns
mov
fsubs
sbb
gs
pop
loope
outsl
inc
fcoml
cwtl
cld
mov
sub
sarb
sbb
xlat
or
popf
ljmp
inc
sub
xchg
leave
cmp
aam
movsb
dec
mov
push
mov
leave
shl
pop
pop
loop
repnz
arpl
jae
popa
aaa
ret
push
rcl
jmp
xchg
adc
stc
cmp
stc
sub
adc
cmp
lods
lods
xor
jo
lods
cmp
test
dec
shrb
pop
cmp
and
shr
mov
idivb
and
xchg
push
pop
rcll
loopne
loop
loope
es
push
mov
icebp
imul
mov
stos
cld
inc
mov
enter
add
inc
xchg
out
je
pushf
mov
mov
test
inc
cmp
pop
fstl
mov
lret
cld
jl
loop
loopne
inc
xor
xchg
je
jns
xchg
or
leave
xor
dec
add
fcmove
mov
out
pop
pop
mov
icebp
std
or
int3
push
mov
clc
jmp
test
xor
xor
jae
out
cmp
adc
insl
sbb
mov
cmp
pop
fdivp
bound
xor
in
insl
data16
cmpsl
les
gs
mov
out
xchg
cwtl
dec
and
sbb
sub
jmp
popf
xchg
movsb
jmp
sub
iret
xchg
sbb
pop
in
mov
mov
or
dec
xchg
mov
push
into
jo
loop
rcrl
or
pop
test
push
lds
fisttps
fdivr
scas
movsb
mov
insl
enter
or
mov
leave
mov
sbb
dec
das
lea
lahf
mov
in
and
xor
leave
mov
cmp
cmpsb
insb
mov
xor
repz
mov
jmp
stc
xchg
inc
cmpl
enter
out
fstp
fldenv
add
ss
and
in
push
or
dec
int3
add
sbb
and
in
xchg
test
xchg
adc
mov
jnp
dec
xor
mov
mov
dec
mov
mov
sub
orl
ret
mov
repz
xor
xor
push
lfs
dec
or
das
ret
or
test
push
bound
ficoms
sar
ficoms
xchg
jmp
aam
and
inc
popf
in
out
sub
lret
leave
aas
dec
add
cs
xor
mov
outsb
xchg
ss
sub
jmp
push
fdivr
mov
rcll
lods
sbb
push
pop
mov
sbb
scas
or
enter
lods
xlat
inc
scas
mov
iret
push
aam
pop
cmpsl
adc
inc
movsl
cli
lods
iret
pop
jae
imul
sbb
xor
lock
xor
incl
add
addr16
pop
shl
and
movl
repz
arpl
pop
cli
cmpsb
aam
fisubrl
adc
mov
xor
mul
xchg
and
ret
cmp
stc
out
sub
xor
pop
popa
mov
pop
cltd
mov
ss
enter
push
pushf
dec
push
in
sub
fs
add
adc
cmp
xchg
and
cmp
fucomip
leave
in
movsb
stos
mov
icebp
sub
ret
add
inc
jnp
push
sbb
add
cltd
cmpsl
cmp
adc
fdivs
mov
xchg
xchg
xchg
lcall
pushf
punpcklwd
adc
int3
xlat
rcrb
pop
imul
mov
mov
loopne
xlat
sub
mov
test
out
inc
mov
push
imul
cmp
add
in
push
shrb
and
ljmp
mov
sub
jnp
adc
mov
dec
sub
in
cmp
pop
dec
push
mov
xchg
mov
stos
ss
stos
mov
call
cmp
jp
dec
sbb
les
push
mov
push
insb
pusha
pop
and
lods
test
jae
xor
sahf
sbb
ljmp
imul
sub
inc
mov
sbb
and
imul
movsl
imul
push
pop
xor
pop
fiadds
xor
inc
mov
mov
xor
add
cmp
mov
and
add
clc
xchg
enter
jp
cltd
inc
int
push
adc
rorl
test
cld
pop
rorb
js
jnp
cld
xchg
shr
mov
stos
cli
cwtl
or
loope
pop
in
pop
imul
andb
jl
xchg
mov
or
mov
xchg
xchg
dec
xor
sbb
push
or
jmp
insb
cld
mov
xchg
xor
inc
push
xorb
loopne
clc
adc
mov
xchg
push
ja
pop
aad
lods
push
or
add
popa
pop
dec
jmp
sbb
bound
jl
das
ljmp
or
mov
mov
ja
push
int
mov
enter
jns
js
test
outsb
inc
jne
icebp
into
pop
incb
xor
adc
sbb
push
dec
xchg
or
and
and
xchg
cs
mov
rol
out
iret
enter
dec
js
xor
scas
mov
sbb
call
jge
out
ljmp
es
ja
push
fs
cmpsl
mov
mov
lods
repz
push
in
and
cld
mov
inc
ret
sti
in
mov
mov
lods
cmp
sbb
jns
lahf
xor
daa
loop
inc
adc
out
cmp
dec
push
shll
call
cld
mov
sbb
outsb
ljmp
mov
sub
rcrb
jecxz
xchg
nop
popl
inc
sub
mov
rcl
pop
js
sbb
stos
xchg
mov
mov
pop
dec
shl
mov
push
mov
in
jbe
cltd
addr16
add
ljmp
sub
push
scas
mov
les
jge
int3
ret
jmp
aad
stc
push
in
imul
push
cltd
inc
nop
lcall
bound
sti
add
insb
dec
push
inc
fisubrs
sub
add
jmp
mov
inc
loop
loope
xor
adc
or
mov
push
fmull
fcmovne
std
outsb
in
pusha
xchg
and
dec
sbb
adc
nop
pusha
xor
mov
inc
outsl
enter
jle
jle
mov
fwait
loop
imul
add
gs
mov
add
fnsave
push
sub
xor
int
popa
stos
int
jo
ficoml
xor
aad
sub
sbb
jbe
inc
int3
or
add
cld
outsb
popf
out
lods
stos
adc
bound
cmp
push
in
pusha
jnp
stos
fcompl
int
xchg
ret
cmc
outsb
sub
or
je
or
std
xchg
negb
fidivrl
stos
push
out
xor
sti
push
xor
cmp
mov
push
in
inc
jmp
xchg
and
mov
fdivp
mov
dec
mov
and
fwait
xor
pusha
push
loop
jae
push
mov
jno
push
insb
in
rorl
push
mov
stos
xchg
cltd
imul
mov
xor
pop
push
test
inc
notb
and
and
jmp
inc
pop
jbe
into
arpl
fiadds
rcrb
and
into
mov
mov
mov
pusha
or
repz
es
pop
inc
jle
jecxz
sbb
cs
aam
xchg
icebp
mov
nop
aas
enter
mov
xor
inc
jmp
mov
push
sbb
stos
ja
push
mov
hlt
inc
add
outsb
lret
push
and
inc
repnz
jnp
cmp
sub
push
xchg
xchg
adc
fisubs
insb
pop
cld
inc
push
pop
roll
enter
sbb
pop
ljmp
sbb
and
daa
pop
shlb
pop
es
cld
mov
sahf
mov
xlat
in
test
and
pop
cmpb
ljmp
mov
jle,pt
daa
cli
nop
out
jmp
cmp
addr16
fisubs
pop
inc
sbb
sbb
inc
xchg
cmp
sub
test
pop
inc
and
inc
jnp
jp
lret
nop
fildl
push
jns
popf
mov
lods
inc
push
je
jns
ficomps
cmpsl
fs
mov
cmc
jb
shrl
cmp
mov
mov
call
insl
xchg
pusha
in
jne
mov
add
fsubrl
dec
push
clc
pop
leave
rcll
adc
add
mov
scas
mov
fbld
hlt
adc
and
dec
fidivl
mov
pop
mov
dec
in
add
insb
jmp
decl
sbb
pop
cmpsb
cmp
mov
mov
inc
jle
pop
cwtl
cltd
adc
les
jae
or
inc
test
xchg
push
mov
mov
in
shlb
cltd
pop
sbb
push
shlb
cwtl
push
subl
dec
repnz
loope
cltd
adc
popa
xchg
arpl
dec
mov
jnp
cmp
jge
popa
xorb
inc
test
mov
push
xor
dec
mov
sub
mov
jne
rcl
and
sbb
and
fmuls
outsl
lret
pop
and
sbb
inc
and
ds
jae
xchg
in
or
cmp
adc
adc
mov
aas
pop
dec
or
in
loopne
sbb
aaa
push
jb
stos
xchg
out
pop
adc
dec
sub
mov
popf
dec
test
int
popa
and
gs
mov
pop
std
out
push
pop
loop,pt
lock
lock
movsl
cltd
int
test
stos
fdivrl
daa
and
dec
setl
jl
bound
repz
call
shrl
into
lret
test
int3
mov
push
outsb
and
es
dec
pop
and
pop
leave
jno
fisttpl
pop
shl
mov
jno
cmp
jns
in
adc
mov
xor
shrl
mov
fwait
stos
mov
pop
xchg
dec
jae
jne
pop
adc
push
push
lock
lret
pop
push
scas
xor
sbb
dec
test
fld
jmp
cwtl
sub
pop
setnp
mov
push
mov
lcall
mov
mov
xor
hlt
add
stos
jno
shl
or
push
into
dec
jae
add
out
popf
fisttpl
mov
out
and
rcl
cmp
in
test
push
dec
scas
ja
xor
xchg
out
sti
push
push
or
fs
sub
ljmp
pop
sbbl
mov
xchg
jecxz
jno
aam
jmp
cmp
sbb
cmpsb
movsl
insb
mov
test
pusha
and
ds
arpl
add
or
rorb
mov
stos
push
aam
test
rcrb
lds
add
xchg
adc
popa
iret
cmc
pop
add
xor
pop
inc
sahf
outsl
push
jae
and
repz
xor
mov
mov
add
adc
lock
jl
cltd
fcomps
push
shrl
mov
xchg
or
inc
in
or
sar
ljmp
or
mov
xor
je
add
cltd
pop
jge
out
xchg
jae
mov
adc
outsb
push
test
xchg
arpl
enter
pushf
mov
mov
lds
sbb
mov
icebp
lahf
dec
lret
sub
mov
jl
ja
pop
add
mov
sub
mov
movsb
in
nop
and
ljmp
add
fisubrl
sbb
fs
pop
xor
inc
in
mov
pop
push
popa
xchg
pop
adc
les
mov
and
es
pop
cmpsb
loop
pop
inc
push
pushf
in
xchg
fdivrl
add
dec
rcll
mov
movsb
mov
xor
xor
add
and
sub
sti
cli
div
xor
cmpsb
in
push
popa
nop
pop
subb
jle
adc
dec
add
xchg
sub
loopne
push
push
pop
repnz
mov
push
mov
in
js
xor
add
js
cwtl
inc
xor
jnp
cltd
insl
repnz
and
push
idivb
mov
clc
or
sub
lds
icebp
xchg
mov
imul
adc
inc
add
cmp
add
rcrl
jae
scas
in
adc
mov
dec
jp
sub
jb
jmp
aaa
inc
loop
mov
mov
call
nop
or
push
jmp
idivl
jl
sbb
xor
adc
jae
insl
repz
insl
rcrb
mov
adc
mov
inc
adc
mov
jb
jnp
inc
mov
cli
dec
mov
mov
fistps
mov
mov
mov
test
loop
mov
sbb
mov
adc
scas
adc
mov
shlb
cmp
jle
inc
lock
pop
or
aad
das
xchg
pop
mov
stos
jae
fnstsw
icebp
lret
aaa
aaa
aad
mov
sahf
mov
test
fwait
nop
push
xchg
les
fadd
sub
fs
fists
xchg
push
pop
icebp
sbb
ror
xor
mov
popa
jl
bound
sub
arpl
sub
sti
stc
sbb
sahf
or
icebp
xchg
shlb
push
mov
sbb
lcall
lret
add
push
and
jb
push
add
push
xchg
pop
push
push
mov
mov
addr16
mov
lret
ja
push
adc
mov
hlt
xor
push
jae
mov
and
push
adc
xchg
fcomp
xor
fs
xchg
mov
xor
xchg
shll
adc
je
push
xchg
outsl
xchg
leave
fs
insb
cmpsl
les
inc
shrb
jle
aaa
cmc
pop
pop
je
mov
add
pop
call
addl
adc
inc
sub
aaa
mov
gs
pop
dec
in
pop
loop
shlb
push
fstps
pop
movsl
cmp
mov
in
mov
jb
pop
fisttpll
dec
pop
ljmp
xchg
adc
popf
cmp
jb
jne,pt
xor
shll
ljmp
sti
push
xchg
test
fisttpl
pop
mov
nop
out
int
call
xlat
pop
arpl
mov
loopne
mov
pop
rcrb
int
ret
gs
push
xor
sti
pop
fimull
daa
xchg
jmp
sbb
movsl
jmp
inc
fwait
pop
or
test
ljmp
fbld
xor
fwait
stos
ss
sbb
ja
adc
mov
mov
cmpsb
jo
jnp
jno
pop
jo
cld
push
les
mov
outsl
out
pushf
add
push
cmp
ret
adc
insb
inc
pop
adc
lea
sbb
mov
insl
xor
ljmp
jmp
pop
and
mov
mov
addr16
mov
cmp
ret
aas
dec
xchg
pop
dec
jl
xchg
outsl
scas
pop
dec
cld
psrad
add
sub
popf
ljmp
sbb
and
imul
jnp
mov
pop
mov
ret
cwtl
mov
sahf
pop
mov
pop
dec
nop
push
sub
mov
out
insl
iret
jo
adc
mov
outsl
adc
mov
xor
cmpsb
xor
or
xor
jmp
xor
bswap
dec
adc
jno
add
in
lods
xor
jbe
ds
add
addr16
and
push
push
push
sbb
add
setnp
add
lods
ret
aam
mov
and
mov
sub
fldcw
mov
fidivrs
inc
push
jne
mov
mov
pop
es
ss
xchg
rcll
popf
imul
sahf
add
adc
leave
fsts
xchg
jecxz
imul
push
inc
lcall
cmpsl
and
test
push
cmp
mov
jp
outsl
cmp
push
sub
jl
sub
sub
jmp
pop
adc
and
adc
inc
dec
dec
and
ljmp
jnp
ljmp
jo
out
insb
sub
xchg
push
outsb
sub
jp
and
lea
call
pusha
int
mov
test
lret
pop
mov
xor
pop
popa
or
pop
lret
and
test
cltd
ljmp
notl
outsl
mov
fdiv
jmp
mov
add
push
faddl
push
sbb
pusha
push
sub
mov
mov
jecxz
push
mul
jg
or
inc
insb
dec
pop
mov
stc
inc
stos
jae
pop
mul
repnz
cmc
jl
cmp
xchg
lea
inc
mov
mov
sahf
or
popf
gs
push
xor
adc
sbb
imul
call
mov
mov
scas
sarb
into
std
add
ret
nop
pop
outsl
aam
dec
adc
cmp
inc
sbb
das
bound
xchg
sub
mov
je
sbb
mov
xchg
jmp
and
dec
shlb
fadd
xchg
leave
or
lods
xchg
xor
jp
jmp
push
adc
jne
mov
pop
inc
les
xor
dec
sub
sahf
adc
fldcw
clc
mov
movsb
jp
int
shl
sbb
push
jmp
jns
jmp
add
inc
pop
lods
ljmp
push
mov
push
mov
fisttpll
push
push
pop
sahf
leave
cmp
rcll
jg
mov
push
aaa
iret
pop
dec
mov
jmp
lds
adc
insb
jb
pop
cs
stos
add
mov
inc
dec
enter
push
test
jne
mov
arpl
stos
fwait
subl
rorl
inc
sbb
push
mov
xor
sbb
rorl
and
adc
data16
sub
sahf
in
mov
data16
jns
rol
pop
mov
fsubl
pop
and
sub
mov
sub
xor
mov
fmuls
std
mov
std
add
xchg
ret
mov
add
addr16
es
cmpsb
pop
icebp
shrl
inc
sbb
stc
sahf
cs
inc
dec
outsb
in
cmp
sbb
mov
xchg
repnz
jge
sub
push
xor
sti
and
lock
insb
push
push
add
xchg
push
in
and
ljmp
inc
mov
or
xor
repz
dec
jecxz
das
int3
mov
inc
push
xchg
xchg
cmp
inc
cmp
jo
cmpsl
cmpsl
mov
push
cmp
inc
push
pop
fnstsw
inc
jb
inc
in
cmc
out
ljmp
adc
and
mov
pop
xor
aaa
daa
sbb
xor
mov
rcrb
dec
xor
pop
mov
sarl
mov
push
mov
push
mov
pop
sub
iret
movsb
jno
push
int3
movsb
sbb
and
cltd
pop
jo
mov
cmp
cmp
into
jmp
mov
jmp
ja
xor
es
jp
sbb
dec
push
cmp
sub
mov
push
out
sbb
push
add
or
call
sub
lcall
xlat
lret
inc
and
bound
loope
arpl
je
stos
jo
xchg
push
xor
outsb
cmpsb
and
jecxz
sarb
push
outsb
jbe
inc
addr16
mov
jns
mov
fdivl
int3
sub
int3
daa
adc
add
sti
scas
ret
pop
ljmp
jns
xor
mov
inc
sub
lea
inc
les
mov
sbb
push
jmp
loope
mov
sbb
inc
int
xor
xchg
subl
test
xor
adc
mov
pop
pop
xchg
in
pop
int
xchg
cs
movsl
push
outsl
xchg
gs
test
jne
std
inc
jge
lock
xchg
mov
aas
cs
sub
or
push
das
mov
lret
pop
inc
push
shr
pushf
push
aad
ljmp
stos
ret
pop
dec
dec
sub
hlt
fcompl
xchg
mov
mov
inc
mov
loope
and
push
pop
jecxz
fildl
fdivs
push
pop
shl
icebp
jo
andl
xor
push
or
mov
xchg
cmp
or
cmp
into
repnz
xor
es
and
cld
cmp
lods
jnp
test
cmp
loopne
stos
frstor
fimull
lahf
mov
movsb
ds
dec
int3
inc
shl
ret
pop
and
nop
dec
ret
ja
pop
into
lret
adc
stc
lock
xchg
mov
inc
cmp
std
ds
aas
add
or
int
clc
js
pusha
pop
jbe
int
out
lds
pop
dec
xlat
sti
popa
cld
data16
sbb
jmp
leave
sub
lret
in
push
sub
pop
fmull
loope
add
jg
dec
pop
inc
lcall
insl
mov
and
sbb
pop
xchg
jl
ja
jle
jle
jmp
aam
test
or
add
sub
pop
xor
pop
xor
push
cmp
imul
sbb
subl
faddl
in
into
test
mov
dec
negb
push
sti
xchg
gs
mov
jo
sub
stos
js
inc
enter
sbb
push
or
frstor
push
imul
ss
ficomps
pop
inc
bt
sbb
dec
or
cmpsb
pop
xor
and
call
adcb
fisubrl
cmp
flds
std
mov
push
bound
push
mov
add
inc
pop
int3
nop
jbe
mov
ror
adc
sub
rolb
loop
mov
std
int3
jg
ljmp
sbb
mov
add
mov
stos
adcb
dec
call
xchg
cwtl
test
sub
pusha
imul
jecxz
mov
popf
mov
push
mov
mov
movsl
jne
ljmp
subb
mov
in
cmc
fistl
daa
xor
push
jbe
je
pop
mov
adc
enter
iret
test
adc
adc
mov
mov
jbe
or
hlt
mov
pop
or
mov
sbb
xchg
adc
inc
push
negl
aaa
xchg
push
adc
push
loop
popf
test
lret
aaa
addr16
lea
mov
pushf
xchg
pop
jmp
stos
int3
repz
popa
popa
and
int3
and
mov
in
outsl
pop
xchg
adc
dec
ljmp
in
dec
shlb
fwait
int
test
mov
mov
mov
add
lahf
push
or
mov
jle
jp
andl
pop
push
sahf
inc
jbe
inc
xor
mov
ja
mov
out
or
cmp
mov
loop
popa
or
jo
push
dec
imul
sub
mov
adc
rcr
push
fildll
fnsave
ds
fwait
adc
addb
test
inc
loopne
dec
add
jo
adc
loop
fwait
push
lcall
insb
pop
cmp
sbb
aam
repz
xchg
test
mov
jae
xor
mov
and
dec
push
addb
adc
in
nop
cmp
flds
and
jno
hlt
lret
xchg
icebp
and
cli
dec
xchg
enter
and
jo
ret
ljmp
push
sub
jl
or
inc
pop
dec
jnp
outsl
mov
sbb
cmpsb
fadds
imul
xchg
inc
leave
js
mov
jnp
push
cmp
ja
ret
inc
shll
dec
jle
ja
iret
cmp
out
dec
push
push
insl
mov
movsl
pop
xchg
jg
xor
cmc
and
cmc
jns
stc
push
or
or
daa
inc
ds
stos
sbb
lock
xor
pop
sahf
sub
push
lods
or
into
outsl
jp
sub
sbb
and
pusha
and
add
add
or
outsl
es
loopne
xor
adc
stc
in
xchg
jmp
int3
cmpsl
pop
xchg
mov
xchg
popf
xlat
faddp
hlt
je
lret
xchg
sub
inc
fucomi
and
imul
adc
sub
mov
inc
shll
insb
pop
jl
push
out
add
add
xor
ret
sahf
and
lret
aad
ljmp
adc
ficomps
in
mov
in
and
ljmp
es
jmp
push
fcmovnu
lcall
pop
cld
pop
arpl
scas
ret
les
sbb
dec
jmp
add
into
popa
les
cld
add
xchg
and
fiaddl
dec
xchg
push
sbb
or
orb
ss
rorl
or
and
lret
push
inc
xor
sbb
adc
in
dec
out
in
jo
or
das
mov
loop
fdivl
out
adc
cmp
outsb
jl
test
imul
cld
cmp
outsb
arpl
ja
outsl
js
add
mov
stos
mov
test
xor
cmp
xlat
mov
push
sub
adc
ret
and
push
movb
mov
dec
negb
push
int3
call
popa
lcall
das
mov
dec
dec
push
pop
sub
add
pop
lods
pop
xor
pop
inc
pop
cmp
inc
shlb
push
or
lods
push
mov
mov
repnz
leave
rcll
and
data16
sbb
dec
arpl
cwtl
out
xchg
jb
inc
xchg
sti
sahf
lcall
push
mov
push
cmp
xchg
les
or
popa
int3
mov
in
cmpsl
lock
sbb
std
pop
repz
mov
pop
repnz
mov
pop
xchg
cli
inc
cmp
enter
cli
inc
adc
fsubr
inc
add
je
shll
pop
xchg
sbb
arpl
and
jns
scas
cmpsl
fildl
scas
bound
jmp
test
int
shlb
imul
lcall
loop
xchg
aad
adc
insb
add
aas
jmp
das
in
leave
inc
out
out
popf
sbb
push
in
adc
adc
xchg
es
sub
pop
in
mov
xchg
js
jp
mov
cld
cmp
das
pop
stc
xchg
add
xchg
fcoms
pop
mov
fstpt
negb
shrl
lcall
mov
jbe
and
add
imul
jecxz
mov
mov
mov
hlt
or
scas
jno
lea
popf
or
cli
sbb
sbb
or
js
xorl
stc
nop
and
mov
jecxz
mov
mov
jg
je
and
divb
or
ret
cmc
cmp
ss
subb
test
popa
outsb
leave
addr16
pop
cmp
adc
mov
out
les
sbb
push
cli
sub
sbb
lcall
rorb
mov
stos
cmp
adcl
dec
loop
jb
dec
push
mov
push
sti
arpl
mov
outsl
arpl
inc
dec
xor
aad
call
or
xor
pop
jno
adc
lods
or
cmp
mov
leave
adc
test
adc
xor
or
je
xor
inc
jmp
mov
mov
lea
decb
xor
loopne
or
imul
les
and
negb
out
jne
repz
movsb
lods
leave
js
lds
mov
pop
das
mov
mov
xchg
ss
dec
cmp
xchg
in
jns
sahf
mov
sub
pop
pop
inc
je
decl
sub
xor
mov
stos
add
add
adc
lret
push
xor
push
jle
dec
gs
mov
dec
fisubs
or
mov
jbe
repz
int
neg
sub
xor
js
push
outsl
rcrl
dec
loopne
nop
lods
sbb
into
xor
out
and
lods
mov
rcr
popf
push
sbb
xchg
jns
jne
arpl
push
jmp
cmp
pop
out
cwtl
popf
das
and
push
pop
cmp
adc
add
movl
enter
mov
push
lock
or
idivl
or
mov
xor
xchg
imull
mov
push
popf
loopne
mov
mov
insb
or
je
in
adc
adc
mov
mov
xor
push
imul
scas
pop
loop
leave
jb
popa
enter
pop
sbb
add
test
cmovbe
xchg
ds
lret
lret
xor
rclb
and
jle
mov
adc
clc
std
dec
jp
test
lods
and
mov
mov
push
dec
mov
lods
xor
lock
cmpsl
add
lods
dec
and
push
popa
mov
sti
xchg
lock
mov
cmp
lods
xor
mov
jbe
xor
sub
aad
ret
mov
into
and
push
in
es
aaa
jno
fildl
das
add
mov
dec
add
std
lret
addr16
cmp
mov
push
rorb
fcompp
je
pop
xchg
xor
fs
aad
sbb
fwait
test
add
mov
xchg
cmp
scas
dec
addb
pop
clc
jno
sbb
mov
mov
adc
ffreep
and
add
xor
and
xchg
lock
movsb
ljmp
imul
pop
shrb
xchg
jns
pushf
jg
and
push
fwait
mov
sarl
fidivrs
jle
and
add
cmp
shrb
out
lret
sbb
fdiv
shr
sub
sti
or
cmpsl
lds
stos
fistpl
movsl
lcall
mov
jp
out
testl
mov
ror
xchg
daa
dec
mov
dec
gs
lock
stc
aam
mov
mov
bound
lods
sbb
xor
add
scas
lret
imul
add
sub
rorl
fcmove
xchg
and
and
cmp
mul
fiadds
shlb
push
mov
mov
jmp
inc
shrl
repnz
cmp
fnstsw
dec
inc
dec
cmc
outsb
mov
push
pusha
sub
add
out
xor
cs
leave
scas
sbb
push
in
lods
loop
add
push
stos
jge
aad
xor
scas
ss
stc
adc
fucom
or
or
cmpsl
insl
and
sti
aas
adc
js
mov
or
dec
xchg
imull
in
sbb
fistpll
sbb
cmpsl
jge
xchg
push
scas
lret
add
jle
mov
bound
in
adc
dec
mov
dec
xor
jbe
aaa
insl
mov
mov
mov
rclb
mov
adc
jae
push
ret
lock
dec
idivl
push
pop
fcmovbe
xchg
mov
cmpsb
shrl
rcll
dec
jnp
cmp
clc
mov
pop
rol
lods
mov
in
ljmp
push
pop
xor
mov
nop
mov
pop
mov
jne
inc
sti
mov
pop
fs
mov
xor
mov
lret
pop
push
add
cmp
xchg
jno
cmp
push
add
inc
imul
jg,pt
xchg
lods
xchg
pushw
mov
int
hlt
lods
outsb
inc
mov
dec
or
mov
popa
imulb
insb
pop
ret
add
out
pop
cmp
mov
push
adc
push
lret
dec
mov
aad
adc
mov
ret
dec
xor
jmp
fisubrl
jl
pop
lret
addr16
scas
ja
mull
xor
xor
cmp
cmp
or
cwtl
sti
mov
ds
and
fisubl
inc
lea
xchg
push
jne
out
mov
push
dec
inc
adcl
test
or
jae
mov
gs
xchg
stos
imulb
lds
mov
je
iret
aad
xchg
inc
lock
pop
iret
out
dec
sub
cmp
mov
sub
es
ds
sub
dec
in
pop
cmp
inc
add
out
cmc
mov
mov
dec
push
call
dec
add
arpl
pop
fcmovnb
mov
lret
mov
scas
sub
cmpsl
scas
in
in
pop
loop
fwait
sub
in
xor
xchg
dec
xchg
lret
out
popf
scas
cmp
add
repz
outsl
andl
in
pop
xor
int3
mov
sub
mov
sbb
pop
mov
out
adc
mov
aas
or
jb
movsl
je
inc
xchg
pop
xchg
mov
test
add
sbb
or
xor
xchg
sti
clc
outsb
es
loopne
fisubrl
inc
jmp
push
mov
in
cmp
xor
mov
dec
cmpsb
push
jne
mov
ret
cmp
xor
in
arpl
sub
or
call
pop
scas
out
inc
pop
scas
adc
dec
push
test
js
divb
xor
add
test
push
and
adc
or
in
pop
cmp
movsl
bndldx
adc
xchg
hlt
bound
xor
inc
mov
fs
xor
add
cmp
push
push
dec
pushf
mov
dec
outsb
int3
pushf
sub
bound
fistpl
into
push
mov
ret
insl
xlat
lea
movl
push
stos
mov
mov
sub
sti
xor
loop
cmpb
addr16
ds
fsubrl
sub
insb
mov
dec
jmp
out
inc
ret
int
jge
shlb
inc
push
adc
popa
pop
outsl
xchg
imul
sub
xor
cmp
xor
imul
addl
fs
es
shlb
aas
or
cmp
inc
sbb
pop
mov
sub
pop
sub
aaa
insb
aad
xor
sbb
test
mov
fiadds
imul
test
or
sti
test
cmc
cvttps2pi
and
dec
or
insl
les
push
mov
lret
es
xchg
push
shll
fidivrs
das
sub
pop
daa
fadds
cmp
pop
mov
inc
aaa
mov
hlt
push
push
mov
sbb
jne
out
add
sub
in
xor
out
mov
and
nop
testl
mov
mov
xchg
pop
lea
insb
lods
lock
enter
nop
sub
pusha
push
pop
pusha
cmp
test
jae
out
mov
dec
dec
sahf
sti
inc
adc
ds
test
aas
cs
out
add
stos
cli
into
xor
arpl
pop
sub
inc
sbb
fs
xchg
xchg
ret
scas
nop
inc
dec
in
sbb
or
or
add
mov
xchg
dec
pop
jnp
xorl
cmpl
popa
push
push
xor
ret
xor
sbb
das
jne
lods
cmp
in
clc
loope
jp
call
mov
add
das
ja
pop
icebp
shl
daa
mov
adc
pushl
aaa
dec
fimull
or
push
imul
int3
shl
ret
popf
sbb
mov
xor
push
lret
sbb
push
mov
add
adc
or
inc
xchg
rol
sahf
test
repz
or
and
pop
push
cltd
mov
xor
cmp
jmp
sub
pusha
pop
loopne
and
jle
xor
movl
sbbb
shl
stc
stos
adc
in
push
aad
pop
lds
loop
dec
push
or
movsb
cmpl
sub
test
jno
jo
push
sbb
idivb
jg
xorb
sbb
and
sar
scas
mov
shrl
ljmp
xor
icebp
inc
sti
and
and
arpl
push
pusha
sbb
mov
add
mov
ja
test
mov
rcrb
cmp
lods
icebp
bound
adc
xchg
daa
mov
and
xchg
int
imul
jo
sti
aas
sub
fstl
add
fcmovnb
push
faddl
loop
stos
outsb
lock
lea
stos
xor
clc
sbb
pop
inc
loop
and
cmpsl
lahf
xchg
push
mulb
imul
adc
or
sub
bswap
movsl
int
int3
sarl
test
xchg
sub
clc
enter
mov
int
gs
dec
testb
addl
mov
ficoms
pop
outsl
les
mov
in
mov
inc
add
sbb
dec
or
lret
cld
or
lret
sub
xchg
inc
repnz
jno
sub
bound
leave
cli
push
cmp
inc
pop
push
mov
push
push
mov
scas
add
mov
mov
loopne
sarb
das
add
pop
cltd
push
add
test
in
test
or
xchg
inc
test
jns
push
movsb
or
inc
pushf
ss
lods
sahf
lods
adc
mov
fs
fstl
push
bound
push
xor
adc
dec
pop
lretw
inc
aad
add
mov
adc
xchg
cmpsl
bnd
and
or
push
arpl
loopne
inc
cmp
add
aad
repz
iret
stc
xchg
jmp
xor
dec
dec
jle,pt
mov
push
push
add
sbb
imul
repnz
add
add
jno
inc
lods
or
gs
int
les
adc
add
dec
mov
and
push
loop
add
in
jae
mov
rol
xchg
imul
pushf
jnp
pusha
jne
popa
insb
fcomi
fdiv
sti
cltd
loop
jecxz
sub
lahf
push
xchg
push
aam
mov
js
jb
leave
loope
xchg
jne
js
lds
pusha
ss
fsubr
cmpsl
push
cltd
inc
dec
jmp
xor
mov
pop
addr16
out
dec
and
push
movsb
fs
outsl
xor
clc
sbb
int
stc
mov
mov
xchg
xlat
xor
add
mov
cmp
cld
scas
inc
fnsave
push
mov
lahf
ss
jb
sub
icebp
sub
pusha
testl
pop
insb
mov
cltd
dec
cmpsb
xchg
pop
xchg
push
or
insl
mov
mov
das
movsl
andl
je
fwait
loope
ljmp
insb
inc
fisubrs
in
insl
jmp
mov
dec
cld
icebp
jle
scas
sub
pop
das
jne
mov
into
outsl
cmc
and
aad
cmpsl
das
je
mov
jle
stos
loop
and
dec
clc
dec
mov
lcall
push
xlat
ret
mov
cmpsl
mov
leave
loopne
data16
mov
sub
int3
loope
jp
mov
and
push
shlb
pushf
push
push
cwtl
cmpsb
mov
ja
dec
lock
push
cli
nop
insl
xor
rol
test
rorl
cmp
push
sub
in
adc
dec
pop
adc
je
jp
push
pop
shll
xchg
in
push
cli
jns
addb
test
ljmp
hlt
rcrb
jmp
idivl
js
ret
sbb
pop
sub
shll
xor
daa
test
cld
or
leave
roll
std
adc
jg
cmp
lahf
lret
loop
mov
mov
movsb
addb
pop
jb
add
xor
mov
mov
lret
shlb
and
out
sbbl
pusha
add
sahf
mov
jecxz
ret
mov
cmpsl
xor
mov
adc
out
or
dec
mov
rclb
out
les
flds
out
out
dec
jbe
test
push
push
push
addr16
roll
push
fistpll
into
dec
icebp
enter
fs
dec
loopne
out
jmp
adc
dec
into
ret
in
in
das
test
addb
jle
push
fwait
mov
inc
jo
mov
add
cmp
out
push
adc
jge
mov
mov
mov
mov
aam
call
cs
jle
popaw
out
addl
mov
popa
sub
xchg
in
sub
imul
xor
lods
pushf
cmp
or
dec
iret
mov
scas
mov
adc
sbb
adc
push
fwait
hlt
sbb
fdivrl
fsub
fisubl
sub
pusha
test
mov
cmc
and
inc
call
test
pop
jb
adc
or
imul
dec
in
mov
stos
inc
pop
fnsave
sahf
xchg
ja
imul
sub
xchg
rorl
xor
sbb
jg
jno
jg
js
cmp
sahf
out
jle
and
or
mov
sub
and
mov
gs
mulb
sbb
aas
cmpsb
push
sub
in
jecxz
mov
push
mov
imul
mov
out
test
insl
xchg
pushf
push
jp
inc
daa
add
push
and
int3
adc
inc
xchg
xchg
outsl
and
test
outsb
push
inc
xor
xor
loope,pn
pop
pop
fcmovbe
lock
mov
popa
data16
push
cltd
push
jns
mov
ret
or
mov
cmpsl
pop
push
add
and
mov
mov
xchg
sub
jo
test
push
cmc
mov
sbb
sbb
popa
dec
out
dec
add
mov
sub
sbb
scas
aaa
sarb
or
in
jl
jbe
push
jno
ficompl
pushf
jno
popf
mov
mov
push
pusha
into
sub
fucomp
xchg
outsl
nop
mov
cmp
shll
push
cmc
jmp
jbe
shl
add
cli
sbb
push
pop
std
fcmovu
test
or
adc
jl
stc
sbb
jmp
lods
dec
dec
mulb
fwait
cmpsl
and
nop
push
rolb
lds
mov
push
ljmp
or
push
ret
lds
jnp
xchg
dec
mov
mov
cmp
popf
test
mov
adc
daa
cs
jno
jno
movsl
ficompl
adc
mov
inc
inc
adc
adc
xor
push
push
in
push
and
test
inc
fs
fwait
addr16
mov
gs
adc
call
adc
xchg
aad
cmpsl
mov
int3
inc
mov
aam
je
mov
ja
cmp
or
insl
loope
into
ret
mov
dec
jge
push
jge
and
jge
jle
xor
adc
popf
fcomip
insb
jno
jl
push
adc
add
sub
jbe
aas
and
add
xchg
xchg
mov
add
lds
push
mov
cmpsl
dec
dec
lock
in
lds
scas
mov
adc
stos
inc
ja
jae
lret
jle
jl
imul
aaa
ja
fldenv
xchg
adc
shrb
mov
or
out
xchg
xchg
fimull
mov
cs
adc
cmp
mov
imul
fwait
push
cmp
push
mov
push
pop
pop
pop
clc
sti
inc
andb
movsb
jnp
roll
cli
sahf
int3
or
sbb
push
es
adc
xorl
add
dec
and
pushf
das
mov
sbb
clc
and
insb
loopne
add
add
mov
les
sub
loopne
pop
jbe
test
scas
or
test
inc
fnstenv
cmp
movsl
sbb
sub
imul
jle
xchg
xchg
xchg
shl
pop
sub
out
dec
push
popa
xchg
cmc
shrl
push
xor
jne
dec
inc
push
jns
push
stos
lahf
push
dec
lods
mov
outsl
sbb
daa
mov
dec
jae,pn
sbb
rcr
int
or
mov
sub
scas
mov
add
repz
imul
leave
mov
aas
test
and
mov
cmp
fidivl
cmp
loop
sub
aas
push
clc
push
dec
call
pop
fmull
and
mov
fisubs
ljmp
stc
xchg
test
xor
and
dec
and
adc
add
aam
lcall
cmp
bound
loopne
jo
in
sbb
jae
shrb
das
xor
sbb
xor
pop
jl
sub
inc
sub
xchg
cli
pop
sahf
sahf
popa
out
push
sub
scas
loop
xlat
clc
sti
add
ret
cld
sub
pop
inc
inc
sub
int3
push
pushf
inc
jle
imul
mov
lds
das
popf
sub
fstpl
sbbb
mov
push
mov
inc
jae
lret
mov
lret
cmp
mov
add
pop
shll
jo
lods
mov
cmp
xchg
mov
mov
sub
pop
cmp
test
xor
test
mov
pushf
decb
adcb
clc
scas
jp
mov
lods
and
inc
in
push
les
pushf
mov
outsb
repz
fwait
out
mov
sbb
push
jg
fisubs
cmpsl
add
in
lret
dec
leave
mov
test
mov
mov
inc
mov
inc
in
fiadds
xchg
mov
sahf
cmp
popf
fldenv
call
lock
adc
jge
xor
sbbl
mov
xlat
sbbl
push
rcrb
repnz
notl
pop
aaa
mov
cmp
pop
adc
cmp
outsl
test
stos
push
xchg
repz
pop
inc
jb
mov
mov
int
popf
push
push
ss
and
mov
inc
fwait
dec
outsb
in
rorb
gs
mov
repz
dec
and
jge
push
aaa
loop
inc
and
xorb
mov
push
fadds
cmp
sbb
push
dec
pop
inc
or
js
xor
dec
dec
mov
and
pop
test
in
sub
shlb
popf
inc
repnz
imul
repnz
int3
das
dec
sub
mov
flds
subb
sbb
iret
or
cs
lock
shlb
insl
or
dec
mov
sbb
inc
addr16
xor
mov
das
push
aam
bound
cmp
jmp
pop
in
aas
adc
cmp
dec
dec
mov
mov
adcl
mov
sub
stc
sbb
lcall
mov
push
adc
sbb
gs
dec
fscale
dec
mov
fcomps
out
xor
mov
fcoms
xor
fcom
dec
sbb
inc
or
jecxz
mov
add
xchg
ljmp
dec
push
popf
add
data16
scas
je
push
mov
repnz
or
fisttps
into
pop
add
cmp
dec
jmp
sbbb
xor
push
pop
dec
xlat
ret
pop
gs
lods
adc
movb
mov
in
popa
popf
mov
mov
fiaddl
xlat
arpl
dec
sbb
ja
xchg
pop
stos
mov
rcrb
fnstenv
jns
sbb
out
aad
xor
lcall
fmull
jg
adc
jg
xor
shll
sarl
icebp
inc
mov
into
repnz
mov
mov
ds
lea
shll
addr16
xchg
and
mov
aam
stos
aaa
jg,pt
xchg
mov
and
lods
jecxz
shrl
cmp
mov
arpl
lret
fcoml
xor
xchg
sub
inc
and
testb
sbb
scas
jmp
enter
dec
es
push
ss
mov
dec
xchg
into
pop
les
push
mov
sbb
mov
mov
in
aam
sbb
xor
test
fistps
jmp
sbb
dec
push
dec
movsl
fcmovu
and
or
mov
mov
stc
fdivs
inc
xor
mov
cmp
fsubs
xor
jmp
xchg
out
adc
leave
jge
jno
popf
and
adc
cmp
shll
ljmp
sub
les
xchg
sub
imull
xlat
cs
inc
xchg
dec
sub
outsl
pop
inc
jge
andnps
pop
pop
add
jne
sub
jns
jp
lret
ds
sbb
fiaddl
jns
jl
mov
das
jae
sbb
adc
in
fistps
jecxz
add
lods
clc
xor
or
mov
sbb
cmpsb
and
push
es
mov
lret
lret
or
mov
inc
add
cmp
inc
mov
in
test
mov
sub
ss
aam
mov
divps
lret
xchg
arpl
cmp
jmp
in
push
outsb
mov
loopne
jnp
nop
pop
bound
insb
sahf
orb
add
cmpsl
addr16
shlb
out
fnsave
sbbl
lds
jno
mov
and
pop
and
ja
fdivrs
push
call
mov
jmp
enter
mov
mov
lcall
lods
cmp
cmc
loope
pop
push
and
sahf
cmc
std
cmpsb
inc
add
or
test
mov
popf
fnstenv
push
enter
and
jmp
mov
lret
mov
repz
jg
add
mov
jo
xor
sub
test
pop
mov
mov
add
jecxz
jne
insb
fstpt
xor
push
addr16
inc
adcb
xorb
or
lret
in
loope,pt
shrb
lcall
push
ficoms
vmwrite
push
mov
fimull
push
or
rcrb
jecxz
sbb
into
dec
dec
xchg
pop
jg
sub
dec
dec
shll
push
push
adc
pop
jmp
sbb
mov
fstpt
pushf
or
pop
or
sub
cmp
or
mov
add
inc
xchg
push
in
ret
popa
int
pandn
mov
or
xor
sbb
mov
add
jns
leave
xor
dec
loope
jno
push
mov
xor
lods
addr16
lods
cmc
popf
cs
in
cld
dec
xchg
das
mov
cltd
arpl
or
jge
xor
sbb
and
pusha
mov
sbb
stc
pop
into
inc
xor
daa
cmc
insl
call
dec
jns
in
adc
stc
shlb
ja
or
push
push
inc
lahf
lret
push
outsl
jae
rcrb
xor
xchg
jg
repnz
movsl
adc
sub
in
insl
imul
enter
sbbb
mov
dec
jne
adc
xchg
xchg
jno
shrb
cli
scas
in
add
mov
loop
leave
scas
mov
pop
cli
jle
jle
push
adc
fcmovnu
xchg
sub
mov
stos
pop
sbb
and
push
leave
stos
mov
repz
add
out
movsl
clc
mov
xchg
loope
es
add
push
jns
push
sub
jmp
sbb
xchg
scas
jle
lcall
pop
and
dec
cltd
sub
xor
mov
inc
mov
xchg
inc
sbbl
push
adc
adc
test
stos
loopne
insb
add
cmpsl
test
lods
pop
in
subl
cmp
rclb
fdiv
jl
test
fisubl
cld
push
cmpsb
jg
orl
aam
push
outsb
pusha
push
mov
and
jle
sbb
fidivrs
mov
mov
scas
mov
mov
shrl
dec
mov
add
adc
imul
das
adc
or
stc
jmp
dec
call
lds
arpl
arpl
mov
add
into
outsl
loopne
push
dec
adc
adc
loopne
popa
lea
dec
jb
push
rorb
push
cld
popf
je
pop
out
dec
fisubs
mov
mov
jns
jo
movsl
sub
cwtl
lea
fsub
xor
shr
adc
or
outsl
adc
push
cli
push
add
xchg
xorl
mov
pop
inc
or
jle
fldt
popf
je
adc
adc
jecxz
mov
jecxz
xchg
pop
xchg
aas
test
test
dec
push
dec
jbe
ret
pop
cmp
adcl
ss
stc
outsl
dec
xor
xchg
inc
sub
mov
jp
cmp
filds
pop
lods
inc
je
daa
or
call
aad
insl
xor
fisubs
movsb
mov
sub
repz
adc
lahf
or
pop
cmp
repnz
push
cmpl
adc
mov
outsl
stos
inc
movsl
push
dec
ljmp
inc
sub
dec
gs
sub
fimull
inc
push
repz
pop
test
cmp
add
sub
icebp
sbb
movsb
outsl
out
out
and
loope
lret
mov
pop
das
mov
xchg
int3
pop
mov
cmp
adc
pusha
rclb
jmp
push
push
icebp
xchg
out
sbb
xchg
ffreep
add
cmp
pop
add
insl
das
fiadds
sbb
push
pop
stc
sbb
and
mov
lods
bound
mov
inc
mov
nop
repz
cltd
movsl
inc
xchg
in
add
std
dec
repnz
int3
lahf
or
sub
pop
adc
insl
xchg
push
scas
lcall
push
shll
adc
xlat
pop
movsl
icebp
mov
add
mov
mov
loopne
push
cmpsl
mov
jns
cltd
fstpt
out
andl
or
add
mov
inc
dec
icebp
fdivrl
nop
sti
cmp
outsl
stc
and
arpl
clc
pop
xorl
insl
in
and
xchg
pop
loopne,pt
jns
pop
or
cmpsb
pop
push
enter
add
data16
inc
sub
lods
fwait
sub
xor
aad
dec
sarl
inc
mov
mov
pop
daa
stc
jno
dec
test
inc
mov
adc
mov
cmpl
outsb
outsb
daa
sahf
jne
dec
add
mov
dec
lock
insb
mov
iret
pop
out
dec
in
add
cwtl
outsb
test
scas
or
push
popf
outsl
stos
int
outsb
adcl
jnp
imul
xchg
inc
xchg
mov
stos
repz
push
add
add
lcall
adc
incb
add
sti
inc
cmpsl
push
enter
inc
jmp
and
fwait
mov
cmc
lahf
xchg
sbb
pop
jle
jb
jbe
inc
jl,pt
shl
mov
mov
ds
cmp
and
fwait
xchg
add
enter
daa
mov
push
xchg
stos
mov
push
sti
push
xchg
arpl
outsb
out
xor
pop
pop
pop
push
add
or
mov
mov
inc
jno
mov
daa
dec
repz
aaa
scas
mov
ja
aaa
aad
mov
mov
sub
rclb
xchg
xor
cmc
and
mov
xchg
push
ss
icebp
pop
out
pop
inc
push
mov
mov
fidivrs
repz
ret
into
mov
popl
jae
cmpsl
shll
inc
cltd
mov
lret
test
addr16
repz
out
addl
pop
and
in
cmp
fwait
jbe
mov
jns
mov
dec
inc
sub
call
add
loop
iret
hlt
push
mov
cwtl
fsubrl
adc
loope
lahf
ret
stc
inc
imul
mov
jp
loopne
add
fwait
push
mov
js
data16
popa
sbb
jnp
add
icebp
xchg
xchg
repnz
push
das
nop
rclb
dec
and
lret
int3
or
cmp
jnp
or
stos
adc
enter
lret
lret
jmp
cmp
loopne
mov
imul
jle
add
ja
adc
xchg
xchg
mov
in
out
pop
jnp
push
ljmp
bound
mov
ret
sbb
sti
cmp
lea
xchg
fst
cmp
mov
cmpsl
mov
out
tzcnt
mov
divl
mov
ljmp
jno
jmp
rcrl
and
xlat
movb
mov
push
jns
mov
fdivrp
sub
and
mov
mov
inc
fcoml
pop
and
test
pop
dec
shlb
call
aam
mov
lahf
ret
adc
sub
push
mov
mov
scas
movsb
ja
fimull
adc
add
es
mov
aas
push
sti
ret
std
int
xor
mov
test
loop
sub
fcomps
ljmp
jle
push
mov
jmp
xor
je
pop
or
je
jmp
int
cmpsb
cmp
dec
xchg
gs
pusha
testl
ror
cmp
test
fstpt
aam
roll
dec
mov
loopne
xchg
xor
dec
gs
into
pop
out
add
lret
dec
pushf
mov
fsubr
pop
mov
mov
leave
jne
shlb
jbe
or
aam
aas
pop
xor
cmc
popa
shl
loopne
push
sarl
mov
push
fistl
nop
mov
mov
mov
lods
in
das
fisubl
mov
cmp
movsl
jne
mov
imul
shl
and
insl
lock
jns
cmp
xchg
push
cltd
mov
clc
and
movsl
jo
inc
test
in
jg
dec
mov
inc
outsl
cmpsb
hlt
and
sarl
mov
jecxz
inc
xor
xor
lahf
sti
sbb
sbb
in
ret
jo
jl
mov
mov
mov
arpl
cmp
add
dec
aam
or
lods
xchg
mov
pop
in
push
fs
stos
xchg
ljmp
jae
dec
sbb
mov
enter
push
pop
and
repnz
clc
and
dec
sbbl
stos
jmp
mov
in
pop
sti
push
outsl
rolb
cwtl
adc
sbb
cmp
mov
lret
mov
outsb
sub
cltd
das
push
mov
xchg
imul
int3
iret
loop
mov
pop
sbb
inc
bound
xor
push
notb
pop
adcb
add
leave
outsl
lock
lods
mov
xchg
sub
xchg
inc
xchg
jl
aam
mov
es
insl
bound
add
test
testb
pushf
mov
fsubp
pop
aas
leave
mov
jg
fld
or
push
lock
nopl
mov
daa
adc
push
mov
arpl
push
dec
add
inc
mov
dec
xorl
decb
or
cmp
xchg
pop
dec
in
inc
add
sub
fdivl
push
nop
xchg
shr
mov
pop
sbb
xor
jl
in
lock
push
enter
es
pop
sti
pop
mov
inc
push
or
andl
test
popf
pop
les
es
call
sbb
push
repz
clc
loope
inc
es
cli
leave
mov
imul
les
add
popa
negb
mov
loopne
pushf
adc
cmc
movsb
ss
popf
hlt
arpl
xchg
xor
insb
loop
popa
and
stc
leave
add
pop
aam
pop
xor
lock
int
jl
mulb
cmpl
fsubrl
xchg
into
call
mov
loopne
test
insb
inc
dec
xchg
cmc
pop
lock
adc
fbld
bound
sub
icebp
ret
fs
xor
in
int3
push
ss
pop
dec
dec
inc
xchg
bound
and
mov
add
addr16
in
mov
add
lods
sbb
es
js
cs
jns
or
pusha
fcmove
push
or
add
stos
and
dec
lods
cmp
in
and
mov
scas
jbe
adcb
push
out
in
stos
dec
add
lret
je
into
stc
rorb
mov
fisubl
xor
mov
data16
mov
sahf
arpl
aaa
mov
lea
adc
sbb
int
enter
pop
and
aas
int3
fsts
add
sub
mov
jmp
xor
mov
testb
lret
lds
loope
or
out
cmpsb
cld
pop
in
push
and
cmp
add
inc
inc
add
pop
lods
divl
jbe
sbb
movsb
call
mov
push
jne
test
pop
insl
orb
scas
dec
sbb
inc
fcomps
adc
xor
mov
pop
test
test
jnp
fsubs
std
loopne
mov
dec
cmc
bound
mov
or
test
cmpsl
xor
fidivrl
xor
aas
out
fnsave
mov
ds
test
rclb
xor
cld
js
popf
aaa
imul
jge
add
test
aad
aas
addb
daa
js
push
mov
xchg
gs
mov
scas
rclb
movsb
pop
mov
adc
std
leave
gs
mov
loope
sub
dec
rolb
add
test
add
je
rorl
into
pop
rcl
out
cltd
mov
inc
test
push
pop
push
jmp
mov
and
xchg
dec
aaa
pop
in
outsb
ljmp
or
in
loop
data16
loopne
pop
dec
pop
test
scas
push
mov
movsl
divb
icebp
lock
fcomi
push
inc
test
mov
hlt
shll
and
mov
pop
xchg
pop
loope
xor
inc
repz
sti
push
cwtl
jl
enter
imul
push
mov
leave
jne
push
mov
lods
cmp
pop
in
movsb
es
or
dec
mov
movsb
push
dec
divb
cmp
push
jns
sub
and
repz
xchg
aam
mov
iret
and
arpl
jl
scas
xor
dec
call
mov
sbb
loopne
sub
gs
push
ret
fsub
stos
xor
pop
add
jle
neg
inc
mov
popa
fdivs
xor
pop
mov
sub
lods
pop
mov
xchg
imul
sub
out
cmp
les
cmp
fisubrs
inc
lret
bound
ret
push
add
mov
int3
pop
scas
data16
mov
add
mov
pop
adc
int3
movsb
ds
test
shrb
fistl
dec
mulb
pusha
mov
iret
fwait
fs
adc
ficompl
es
dec
es
inc
xchg
fisttpl
dec
xchg
cs
dec
stc
add
aaa
addb
insl
aad
and
xor
lea
mov
lods
das
fwait
data16
push
xchg
aas
mov
dec
es
arpl
lahf
scas
aaa
ficoml
mov
inc
cwtl
daa
popf
and
sub
xchg
dec
jecxz
cltd
lods
push
and
mov
insb
adc
pop
gs
icebp
cmp
hlt
sub
flds
jnp
xchg
pop
lret
cli
lea
xchg
fidivl
sbbb
push
das
sub
push
fidivrl
pop
sub
pushl
popf
cmp
leave
jns
jmp
jo
cmp
popl
or
addr16
das
sbb
or
sbb
in
mov
mov
and
mov
out
aaa
gs
mov
mov
xchg
mov
sbb
jmp
sarl
stos
addr16
lret
bound
pushf
mov
jge
je
out
xchg
sub
mov
mov
mov
cmp
and
xor
rolb
xchg
inc
add
add
xchg
sahf
adc
lret
dec
lret
lods
xchg
scas
xchg
fs
xor
mov
add
push
out
sub
int
test
cltd
add
mov
xor
and
push
imul
add
push
cmc
leave
cmp
subl
push
ds
pop
inc
cmpsl
jo
mov
xor
loop
insb
mov
add
xchg
push
cmp
sub
pop
jp
ja
inc
test
lret
jns
arpl
loop
jle
xchg
cmp
xlat
lock
adc
mov
jmp
shl
mul
ret
mov
cld
sub
mov
jae
lcall
test
std
inc
push
push
mov
add
repz
push
mov
and
lret
inc
fmul
cmp
adc
das
xchg
sahf
and
in
adc
js
sub
repz
hlt
lds
test
cmp
mov
and
jmp
loop
mov
pop
inc
imul
pop
sub
insl
inc
and
jae
cmp
sub
mov
inc
addl
mov
cmp
inc
cmc
int3
xor
pop
inc
lret
pop
sub
pop
inc
ret
adcb
fisttps
mov
sub
popf
repz
es
jne
push
xor
test
insb
cltd
sahf
fists
pop
cmpsb
or
daa
pop
xchg
pop
cmp
data16
hlt
leave
decb
mov
dec
scas
mov
mov
mov
sub
test
cwtl
test
xchg
in
jb
push
aam
adcl
xor
sub
mov
test
lods
std
es
mov
lahf
lcall
daa
sub
inc
xor
xor
lret
mov
test
mov
in
jns
fdivrl
xor
ds
call
popf
iret
or
mov
xchg
in
push
mov
push
arpl
push
mov
and
pop
mov
es
sbb
bound
in
mov
pop
sar
mov
push
nop
aad
mov
aas
ss
in
jno
jp
add
or
roll
mov
or
cmpsl
cs
loopne
in
pop
ds
jg
jnp
mov
out
sub
adc
cli
pop
and
fld1
cmp
fnstcw
fisttpl
outsl
jo
into
adc
popa
push
enter
test
mov
lods
xchg
xchg
filds
ljmp
push
xchg
rcrb
std
xchg
ja
pop
enter
mov
xchg
loopne
movsb
xchg
or
jge
test
jne
arpl
imul
cwtl
daa
popa
bound
iret
out
lsl
fsubrl
les
add
pop
xchg
push
jns
fidivrs
mov
pop
inc
jns
xchg
stos
pop
jl
xchg
xchg
jno
xchg
adc
inc
repnz
into
shlb
adc
jecxz
in
mov
sbb
mov
in
push
fwait
lods
in
sub
cmpsl
adc
enter
popa
movsb
ret
clc
out
jo
xchg
lods
cmpsl
imul
xchg
jmp
xchg
cmpb
outsb
push
int3
hlt
jge
aas
insb
mov
mov
test
pop
xchg
gs
xor
pushf
out
fdivl
pushf
adc
xchg
or
jbe
xchg
or
jge
mov
dec
mov
inc
or
add
sub
xchg
mov
sub
or
jge
inc
dec
lods
cld
fdiv
mov
adc
imul
xchg
jg
mov
je
mov
xor
cmpl
push
sahf
mov
rcrl
aam
aam
dec
mov
cmp
jl
and
test
mov
jne
mov
or
ss
repz
xchg
scas
leave
mov
nop
mov
add
sub
lret
fdiv
mov
mov
int
outsl
dec
scas
ljmp
xor
outsb
stc
inc
adc
mov
mov
jbe
mov
inc
ja
andl
fcmove
cltd
mov
stos
xor
xchg
out
mov
shrl
subl
sbb
xor
mov
push
sbb
sti
pusha
dec
in
sti
pop
jg
ficoml
inc
movsl
or
imul
scas
int3
dec
xchg
bound
aas
push
push
call
gs
lret
jbe
sahf
mov
stos
daa
pop
pop
lret
in
lods
loope
sub
mov
adc
sub
jmp
fs
fisubl
orb
jmp
mov
outsl
int
fcoml
mov
adc
icebp
int3
cmp
pop
into
inc
dec
std
push
sbb
sarb
pop
jmp
pop
xchg
jg
shlb
mov
js
and
into
mov
stc
jl
fs
int
mov
and
jb
jg
loopne
mov
popf
add
in
out
xor
ljmp
mov
enter
cld
aaa
repz
test
ficoml
mov
mov
popf
push
stos
ds
push
hlt
push
mov
sbb
outsb
repz
sub
jnp
dec
push
ret
fs
xchg
sub
pop
sahf
pop
push
inc
movsl
inc
mov
loope
pushf
cs
leave
into
in
mov
pop
fnsetpm(287
mov
adc
jno
adc
movsb
shl
icebp
jbe
lcall
jecxz
sbb
pop
push
in
in
call
dec
pop
outsb
mov
push
pop
fldl
pop
inc
mov
sbb
add
andb
ja
pop
and
dec
sub
xor
dec
outsb
outsl
sub
imul
cmpsb
cmp
mov
repz
inc
mov
cmp
mov
lods
push
mov
xchg
mov
repz
shll
or
add
das
test
test
mov
jmp
or
gs
add
push
repz
mov
xlat
cmp
add
inc
sbb
movsb
pop
bound
lods
sbb
neg
sub
loopne
jno
imul
outsl
out
lock
inc
and
loope
mov
out
adc
xor
or
jmp
and
xchg
pop
inc
sub
mov
xlat
movsl
add
and
lcall
cmp
add
mov
arpl
mov
jecxz,pt
repz
push
cld
into
inc
imul
cmp
mov
in
mov
or
sub
ljmp
or
xchg
lds
push
jmp
lds
mov
in
jnp
jecxz
jae
sbb
stos
into
and
sbb
adc
fmull
ds
popf
add
out
xchg
or
and
rcll
jae
sbb
pop
aas
mov
dec
popl
push
stc
out
ja
imul
dec
cmc
das
cmpsb
xchg
inc
mov
ljmp
bound
fs
push
dec
add
sub
add
imul
callw
mov
sub
pop
push
test
shl
out
dec
gs
xchg
into
push
loopne
repz
popa
das
adc
pop
jge
mov
aaa
pushf
iret
push
scas
mov
mov
jb
xchg
push
sbb
stos
pop
sub
pop
fildll
test
mov
mov
adc
shll
pop
pop
jl
pop
add
fcmovbe
jne
pop
and
inc
cmp
fcomps
ljmp
jo
mov
test
and
leave
xor
xor
popf
jmp
add
push
and
push
into
out
aam
shlb
fcmovnb
incl
cmpsl
mov
test
xchg
xchg
dec
scas
aas
nop
gs
jg
xor
cs
jae
or
xchg
or
xchg
mov
sub
gs
fucomp
inc
push
inc
add
xchg
xor
fwait
scas
sti
mov
ljmp
push
fucomip
mov
sahf
rcrb
and
loop
jo
cmc
gs
aad
push
dec
adc
nop
pusha
lds
inc
pop
int3
or
rorb
jo
jmp
es
test
testb
mov
inc
or
popl
xchg
in
daa
negb
sbb
outsb
mov
push
pop
push
mov
fisttps
xlat
add
mov
pop
lods
add
aas
pop
repnz
push
or
xchg
jb
pop
adcl
inc
sbb
push
mov
mov
int
pop
adc
out
pushf
fistpll
push
cld
jne
and
or
and
in
mov
pop
out
mov
sahf
pop
sbb
inc
adc
scas
cmpb
pop
outsb
mov
add
xor
add
mov
lods
sbb
jp
mov
pop
std
xlat
sub
adc
lods
mov
sahf
mov
scas
rcrl
aad
add
pop
adc
repz
dec
stos
aam
xlat
push
cmp
in
adc
mov
pop
jl
push
rclb
es
out
fbstp
shrb
fcompl
pop
jmp
pop
push
data16
adc
in
inc
out
mov
sahf
xchg
mov
loop
cmp
cmp
push
mov
in
jg
lock
pushf
push
idivb
clc
dec
or
jns
mov
dec
pop
and
pop
fidivrs
gs
fadds
testb
pop
adc
out
push
or
ds
dec
into
les
jne
xor
lods
subl
mov
out
out
std
iret
insb
inc
sbb
lea
mov
mov
jbe
std
jnp
fcoml
rcr
xchg
mov
adc
pop
leave
ss
out
xor
in
jecxz
out
popa
sbb
mul
andl
and
or
mov
fidivrs
in
or
lcall
and
xchg
and
and
pusha
out
cmp
leave
pop
jnp
rcr
sub
adc
aad
aaa
mov
cmp
enter
ror
xchg
mov
fcomip
fs
inc
xchg
mov
jo
push
mov
mov
mov
mov
std
mov
dec
cmp
mov
aad
stos
inc
push
test
xor
add
das
fistpll
loop
mov
ret
mov
test
out
cli
cltd
sbb
daa
iret
xchg
mov
add
mov
das
mov
mov
push
mov
or
je
xor
push
mov
mov
mov
lods
fbld
fxam
jns
cwtl
jns
je
jp
imulb
lods
subb
sbb
pop
and
and
dec
jno
jne
icebp
adc
sbbb
dec
test
dec
stos
sub
lcall
sub
mov
lret
jle
mov
mov
mov
notb
push
out
jbe
inc
repnz
loopne
stos
mov
mov
pop
std
add
mov
sub
mov
cmpsl
dec
or
push
xor
sub
push
roll
lea
xor
pop
int3
xor
nop
jbe
in
jbe
cmc
loopne
mov
sbb
push
das
jmp
cld
shlb
clc
xor
in
jae
out
mov
in
es
clc
push
repz
ds
mov
add
dec
jp
inc
inc
pop
mov
je
stos
mov
xchg
jnp
sbb
mov
pop
jne
mov
int3
pop
mov
stos
lods
sbb
mov
out
cmp
out
stc
jnp
loopne
pop
ror
sub
dec
aas
push
mov
inc
in
xlat
fisubl
add
sbb
lea
fwait
lock
dec
addr16
es
cmpl
xchg
scas
jecxz
movsb
rcll
mov
movsb
push
dec
mov
and
fucomp
push
adc
mov
push
test
sahf
dec
or
cmp
pushf
inc
imul
ret
pushf
jno
add
mov
dec
loope
mov
or
rdpmc
mov
xorl
or
sbb
pop
dec
std
add
jb
add
daa
scas
ret
int
and
pop
mov
push
mov
cmc
jp
xchg
fildl
es
les
out
cli
in
rorl
popa
or
xchg
sbb
pop
mov
jge
dec
in
aam
jmp
sub
pushf
ficoms
int
cli
mov
fistpl
push
or
daa
push
pop
pop
sahf
enter
xlat
sbb
enter
mov
inc
or
or
iret
sub
pop
xchg
repnz
fs
inc
pop
std
in
ffreep
push
push
mov
ja
push
mov
xchg
sub
xchg
sub
mov
data16
js
sub
inc
aaa
mov
out
mov
jecxz
shrb
jno
dec
mov
sub
mov
adc
enter
movsl
cli
mov
cmp
out
xor
rcrl
and
lods
pop
inc
pop
sub
mov
jns
jge
inc
ja
lods
push
out
jnp
cmp
inc
sub
push
mov
das
pop
insl
pushf
js
cwtl
insl
xchg
xor
aaa
ficomps
and
add
popf
sbb
insl
xchg
repnz
cmpsl
clc
test
imul
out
jbe
push
aam
scas
out
jmp
fs
push
stos
add
adc
cld
mov
in
mov
and
pop
or
sahf
pop
or
push
and
mov
and
and
mov
nop
scas
lret
loop
mov
jns
ret
mov
sub
xchg
jo
fiadds
inc
lds
xor
cwtl
pop
jns
xor
mov
and
insb
clc
ror
push
fs
cmc
and
jp
sub
das
mov
in
movsl
xchg
add
mov
and
sbbl
inc
xchg
movsw
pop
and
pusha
sub
push
xlat
enter
movsb
pop
mov
pop
scas
mov
mov
lds
sahf
push
repnz
repz
xchg
pop
repnz
push
mov
arpl
out
gs
inc
pop
jle
cs
xlat
jmp
jecxz
pop
lret
push
sub
jns
or
scas
cmc
sbb
jle
inc
call
ficomps
ja
push
outsb
std
mov
lods
ret
xor
mov
dec
pop
scas
or
shll
test
dec
ror
repnz
scas
movsb
rcrb
jb
lods
and
repz
pop
int3
mov
lods
and
stos
cmpsb
or
cli
sbb
xchg
daa
pop
push
lods
nop
mov
es
loope
fnstenv
negb
les
push
fcomps
pop
in
push
inc
sbb
and
lret
jmp
push
ja
mov
jns
bound
push
out
and
pop
or
test
sub
in
jnp
fsubr
imul
cmpsb
pop
and
out
mov
nop
xchg
scas
pusha
sub
jbe
loopne
jmp
xlat
loopne
mov
pop
nop
insl
repz
pop
stos
and
inc
daa
sbb
add
in
xor
int3
xor
ret
sbb
jmp
popa
xchg
fimull
and
mov
push
adc
psubb
daa
mov
dec
addr16
jp
or
xor
pop
or
xchg
bound
fs
sub
insl
pop
adc
add
out
cli
out
lds
mov
testb
test
xorl
add
lods
xchg
mov
or
daa
ljmp
inc
lods
rol
sub
mov
das
or
jge
std
jp
sub
psrlq
mov
fisubrs
mov
rol
lea
adc
cmp
les
and
in
sub
dec
xlat
mov
insb
xchg
arpl
cmpsb
addr16
pop
inc
push
js
cli
int
fucomi
js
leave
pop
ret
pop
add
adc
test
xor
fimull
lods
cmp
fidivl
fs
inc
out
insb
in
or
sbb
mov
dec
movsb
lods
divl
dec
pop
or
lea
sub
sub
inc
movsl
clc
mov
mov
push
jbe
loopne
outsb
or
pusha
jne
mov
and
xchg
push
ds
xor
mov
pushw
stos
or
mov
jb
ja
push
pop
pop
sub
aas
xor
mov
das
inc
dec
outsb
rorb
in
int3
negb
test
and
leave
outsl
les
mov
pusha
or
jp
adc
dec
xor
pop
or
movsl
sti
and
pop
inc
ficoms
sub
cmp
sarb
clc
xchg
cmp
jne
add
les
mov
xchg
mov
iret
pop
inc
test
int
pusha
je
xchg
sbb
fnstenv
out
fdiv
or
jo
mov
xor
cmp
test
push
jno
mov
out
nop
mov
sarl
hlt
cmc
out
fsubrs
popf
sbb
andb
stos
mov
loopne
push
clc
pop
int3
insb
into
cmc
sub
pop
cltd
testl
jne
push
cmp
mov
gs
addr16
inc
inc
cli
adc
jge
xchg
mov
test
pusha
mov
loopne
movsl
das
and
je
mov
nop
cmp
sbb
daa
inc
adc
push
sbb
pop
pop
inc
dec
jns
sub
xchg
lods
cltd
out
cmpsb
bound
push
rcll
adc
iret
push
sub
push
out
fsub
sbb
cmpsl
mov
aaa
sti
stos
pop
int
pop
inc
imull
xchg
lock
and
push
in
ljmp
test
mov
je
in
mov
out
cmp
push
movsb
out
aam
lret
shlb
popf
rclb
adc
in
xchg
imul
shrb
nop
addr16
ljmp
outsl
xor
jo
pop
rcll
icebp
les
ja
and
inc
xchg
jnp
cmpsl
lods
out
std
mov
dec
lock
mov
fimull
mov
mov
popa
nop
add
inc
and
push
test
pop
push
inc
push
ret
sarl
loope
movsb
out
cli
mov
lret
lret
mov
sbb
cmp
pushf
pusha
jg
mov
lods
jb
jno
testl
enter
ja
mov
jb
lods
pusha
sbb
dec
mov
mov
jmp
out
pop
mov
jg
dec
movsl
or
cwtl
cs
xor
push
mov
or
mov
pop
adc
movsb
int
mov
push
int
aas
mov
cmp
xchg
cmp
aaa
push
cltd
out
leave
adcl
xor
adc
push
push
xor
and
push
xchg
loope
xchg
jl
jmp
push
cmpsb
cmpsb
dec
mov
dec
into
jge
inc
nop
inc
sbb
aaa
xchg
sbb
adc
dec
shlb
inc
icebp
popa
fdivrp
inc
repz
lret
add
out
ffree
adc
cli
mov
sub
mov
jmp
jno
mov
mov
es
lods
sbb
popa
lock
pop
sar
pop
add
add
xchg
xchg
sbb
pop
idivl
loope
mov
pop
divl
jne
jp
mov
mov
add
inc
sti
cmp
gs
push
lea
or
lcall
xor
divb
push
push
mov
outsb
sbb
or
test
ljmp
fdivr
push
cmp
xchg
xchg
dec
stos
or
xchg
stos
out
pop
je
lret
movsl
je
aaa
adcb
stos
mov
push
int
jl
rolb
cwtd
jmp
imul
nop
clc
mov
out
in
aaa
mov
sbb
jb
andl
loopne
ss
inc
xchg
xchg
jp
sbb
je
js
and
in
icebp
movsb
sbb
cmpsb
pop
inc
and
rcl
out
jne
pusha
in
cmpl
inc
enter
pop
ret
jno
popa
sbb
int
test
inc
jecxz
xor
xchg
sbb
adc
popf
mov
xchg
hlt
mov
jge
inc
shlb
adc
cmc
in
sti
xor
and
mov
daa
scas
out
ds
lcall
outsb
pop
lods
popf
pop
popa
dec
jecxz
imul
push
iret
add
push
cwtl
clc
push
mov
ret
push
jg
outsl
mov
or
jno
dec
fmul
ja
mov
pop
or
sub
cwtl
lock
cld
in
dec
outsb
add
xor
pop
aam
xlat
xor
fsubrl
mov
ret
sub
in
jmp
pop
call
adc
fsts
push
and
cltd
jnp
mov
pop
ret
inc
jle
sarl
add
dec
mov
mov
jecxz
bnd
push
in
not
imul
subl
xlat
push
leave
into
mov
fstpt
test
lods
or
adc
push
in
xor
xchg
cmp
aas
add
test
cmp
adc
mov
je
mov
sti
call
or
jg
rcrl
pop
xchg
aam
sub
movsl
mov
lret
or
xchg
imul
or
jns
scas
cmpsl
stos
adc
fs
add
rcrb
pop
ljmp
shll
icebp
mov
hlt
add
pusha
mov
fistps
aaa
xor
sbb
sub
and
xchg
inc
mov
popf
mov
adc
mov
jle
sbb
inc
xchg
lock
ret
daa
adc
jl
mov
mov
cmp
aad
cmp
lods
jg
cli
imul
jbe
imul
jo
dec
sub
cld
js
jl
fcmove
test
or
jo
push
std
stc
int
pushf
push
cltd
inc
jne
xchg
pop
push
int
scas
mov
inc
pop
mov
stos
test
mov
inc
lock
mov
cmp
shl
mov
push
scas
sti
push
lock
inc
dec
cmp
ror
push
mov
sub
lock
in
mov
cmc
repnz
push
xor
outsb
pop
das
inc
sbb
pop
aas
inc
pop
addr16
mov
movsl
outsl
xor
sub
test
xchg
jo
cmpl
cmp
cld
pop
sarl
pop
mov
jnp
cltd
lods
scas
popf
loope
xchg
and
xlat
fistpll
jp
mov
fwait
enter
inc
pop
shrb
scas
jbe
jae
xchg
push
xor
sub
jo
test
iretw
push
mov
jb
and
lds
jle
je
cltd
or
sbb
push
push
cmp
test
sbb
sbb
jle
in
clc
clc
push
fbld
xchg
bnd
fs
jns
cli
leave
add
xlat
incl
inc
and
aas
sub
dec
mov
loopne
mov
jo
int
mov
inc
dec
jmp
cmp
in
jecxz
aas
adc
push
pop
je
pop
push
std
jp
inc
mov
push
fadds
and
cmp
xor
movsb
xor
pop
aas
jnp
mov
cltd
mov
aaa
aam
out
adc
adc
loop
jle
cmp
shrb
xlat
mov
shl
fcoms
mov
and
jne
pushf
rclb
mov
pop
pop
cmp
mov
mul
insb
xchg
cmpsl
iret
push
leave
dec
push
les
cmpsb
cli
lret
into
push
push
jne
jmp
xchg
scas
inc
push
inc
mov
notl
lods
xor
adc
jnp
add
pop
in
std
popf
rolb
das
cld
sub
popf
aam
pop
push
imul
mov
lidtl
sub
xchg
pop
outsl
cmp
jmp
in
lock
testb
and
jge
xchg
stc
inc
daa
pop
enter
in
mov
das
mov
adc
call
es
lea
mov
lcall
insb
les
add
xchg
sbb
ss
xor
inc
pop
adc
dec
dec
xchg
push
mov
mov
pusha
mov
call
pop
ds
cmp
add
inc
mov
dec
xchg
in
mov
xchg
jmp
mov
popf
aam
pmaddwd
clc
das
mov
adc
inc
add
xchg
mov
push
mov
fildll
pop
xchg
push
and
jns
or
jge
movsb
mov
lahf
fs
aad
cmpsl
jne
test
cmp
mov
popf
and
jl
push
scas
addr16
mov
ds
popa
push
jl
lret
pop
sti
stos
insl
and
lret
outsl
sub
xor
sar
sub
jle
fistpl
aaa
jnp
xor
mov
sub
xor
pop
add
push
cmp
cli
scas
sub
mov
jmp
xor
xchg
jecxz
js
adc
stos
mov
loopne
hlt
jmp
aad
dec
mov
push
dec
push
les
je
mov
adc
adc
dec
imul
scas
pop
jb
sbb
pop
cmc
or
add
aaa
cld
mov
mov
sub
xchg
mov
xchg
mov
lds
gs
xchg
in
dec
mov
ljmp
or
cmp
pop
cmp
jno
test
mov
cmp
inc
lea
ljmp
stos
call
sbb
add
test
dec
adc
mov
dec
cmp
and
das
jge
out
add
and
adc
movsb
mov
mov
inc
sub
in
iret
andl
daa
sub
movsb
jb
out
popa
insl
cmpsb
fldl
pop
mov
stos
lea
adc
add
adc
clc
sub
in
cwtl
pop
pop
and
pusha
icebp
jns
cmp
inc
fiadds
in
mov
inc
fildl
icebp
jle
or
icebp
andb
push
mov
sub
rolb
cmp
pop
dec
gs
das
inc
push
and
sahf
popa
loope
mov
pushf
arpl
dec
pavgb
pop
out
push
lods
jnp
xor
mov
inc
cmp
add
or
pop
clc
std
and
xor
inc
cwtl
xchg
mov
addr16
jb
add
xor
sti
pop
int
or
jne
loop
jle
hlt
rcrb
fnstenv
pop
dec
cmp
jecxz
pop
xor
dec
mov
fwait
iret
push
push
mov
cltd
xlat
dec
pop
adc
xor
push
sbb
fdivr
jae
mov
cmpsl
mov
mov
fdivl
bound
push
enter
or
inc
int3
and
sub
adc
adc
mov
and
jge
aam
loop
clc
sub
test
jge
outsb
mov
fsubp
xor
mov
stc
in
sti
call
add
and
push
jns
mov
sub
ret
pop
hlt
and
sub
and
jl
repnz
ja
mov
sbb
hlt
out
cmpsb
cld
fadds
jle
orb
xor
out
xchg
sbb
cld
sbb
add
adc
push
dec
cmp
adc
push
jne
dec
mov
mov
dec
jnp
sbb
fs
scas
mov
adc
gs
adc
or
inc
shll
sub
and
test
out
rorb
out
xor
in
mov
in
and
pop
mov
imul
lea
lret
andl
jns
jno,pt
ljmp
loopne
arpl
sub
pop
dec
push
pop
scas
cmc
inc
lret
mov
sti
jle
adc
in
movsb
lahf
push
mov
fs
mov
or
cmp
pop
add
adc
push
cmp
push
jge
js
ja
arpl
and
mov
add
xor
xchg
iret
je
push
jno
ss
dec
jnp
insb
loopne
mov
outsl
sti
stc
inc
mov
inc
push
jo
dec
movsb
lods
pop
cmp
adc
cltd
sbb
xchg
dec
clc
fadd
push
lea
gs
and
stos
repnz
pusha
fildl
sbb
xchg
pop
insb
xchg
fadds
fs
daa
dec
xor
test
ret
outsl
push
sbb
test
jns
shrb
adc
sarl
inc
std
mov
cmpsb
add
movsb
and
xor
dec
xor
cmp
lahf
sub
inc
mov
dec
mov
and
push
aas
fdivr
mov
mov
cwtl
sbb
cmp
int
mov
add
and
das
jmp
insl
ss
insb
dec
inc
test
fs
xchg
scas
repnz
pop
jg
inc
rcrl
xchg
or
or
adc
jno
cli
inc
push
lret
enter
mov
fptan
pop
lcall
sti
in
mov
jno
pop
adcl
dec
pusha
stc
fdivrs
popf
fwait
mov
out
sub
push
mov
xchg
lahf
sbb
inc
xor
or
or
add
fdivrs
pop
pop
cmp
dec
mov
dec
popf
insl
icebp
shrl
jae
xor
lret
jecxz
pusha
js
inc
std
jge
xchg
lret
push
dec
pop
add
fistl
jg
push
orb
adc
mov
rclb
inc
cmpsl
dec
inc
fldenv
sub
adcb
sbb
data16
into
cltd
ficoms
lahf
push
cli
jnp
rorb
ret
sub
pushf
pop
or
gs
mov
sti
repz
mov
pop
gs
push
cs
mov
insl
int
loop
xor
out
stos
fidivrl
xchg
push
and
mov
aas
and
movsb
int
mov
and
sbb
aam
cli
jne
nop
cwtl
or
pop
inc
mov
outsb
cmpsb
jae
cld
mov
push
cld
std
and
test
mov
dec
dec
ljmp
insb
sub
outsl
cmp
aad
xorb
xor
movsl
cmp
dec
sbbb
add
mov
sub
pop
mov
jmp
repnz
pop
or
aam
loop
scas
cmc
loop
and
jae
ljmp
fs
imul
and
ljmp
add
ja
bound
mov
outsl
out
sti
pushf
sbb
out
xorb
lock
cmp
sbb
sub
xor
mov
cmp
xchg
inc
xchg
aam
movl
sbb
push
xchg
xlat
push
jg
dec
add
sbb
cltd
lods
dec
sbb
jle
lock
jo
cmc
mov
pop
ret
imulb
add
rcrb
sahf
iret
fwait
pop
test
xchg
mov
outsl
adc
inc
cmpsl
cmp
mov
pop
sahf
xchg
inc
mov
pop
push
sub
mov
icebp
add
add
push
cmc
outsb
adc
mov
pop
mov
call
sarb
fisubl
cmp
and
add
pop
pop
not
repnz
push
and
sbb
cmp
fistps
mov
and
call
insl
inc
sub
xor
mov
xchg
loope
mov
jb
div
je
cwtl
and
divl
and
mov
jno
call
cmpsb
fsts
lock
pop
into
cld
pusha
fdivrl
inc
ret
dec
movsl
sbb
jl
call
lret
push
fsubs
je
mov
addb
mov
into
xor
mov
lcall
mov
mov
ret
popa
sahf
xorb
xchg
sahf
aaa
push
leave
fwait
sahf
or
sbb
xchg
shl
addb
sub
in
in
pop
ret
adc
xchg
mov
ja
es
in
cmc
sbb
jb
fldcw
push
mov
jge
inc
out
fists
push
ljmp
jle
jmp
in
sti
data16
cmc
sbb
scas
movsb
test
lods
ret
push
test
jle
daa
xor
add
daa
push
aaa
out
add
mov
or
and
jle
or
loop
cltd
sub
jno
scas
mov
pop
push
add
cmpsl
pop
outsb
jg
sub
push
or
xchg
and
sub
xchg
ljmp
jae
lods
inc
les
movsb
mov
or
fs
sbbb
jp
mov
call
or
sub
mov
nop
cmp
arpl
scas
inc
cwtl
dec
cmp
jno
inc
lahf
jbe
mov
stos
rol
out
jnp
mov
xor
jb
cmpb
sahf
out
pushf
add
fadds
jns
pop
mov
pop
leave
lods
xor
les
popa
addr16
dec
adc
clc
mov
mov
test
fwait
lock
cltd
pop
scas
ret
xor
fwait
jno
add
mov
xor
adc
pop
iret
sbb
movsl
rcr
pop
popf
ja
jae
pop
nop
fs
xor
scas
arpl
test
mov
in
iret
pop
fbstp
or
ljmp
mov
imul
xor
sub
push
mov
mov
inc
inc
cmp
mov
xor
mov
add
nop
mov
add
gs
jecxz
sti
inc
mov
call
adc
xor
mov
nop
sahf
sub
xchg
stc
push
sub
jl
push
sub
and
test
mov
dec
and
adc
sbb
lret
push
push
stos
mov
and
inc
testb
in
divb
sub
imul
mov
cwtl
pusha
and
push
mov
loopne
or
pop
xchg
fwait
and
push
ret
jae
mov
push
sti
sti
std
inc
lret
loopne
adc
push
movsb
mov
jne
mov
addl
sub
xor
fcomps
mov
cmp
cmp
xlat
adc
xor
loopne
int
push
loop
cmp
imul
dec
test
arpl
lret
xor
cs
clc
push
xor
mov
mov
mov
or
push
xchg
imul
roll
mov
or
fistl
mov
in
lcall
mov
mov
jne
das
sbb
adc
std
fs
or
stos
clc
mov
andl
jno
jb
mov
mov
jne
sub
mov
pushf
xor
cmp
mov
in
mov
int
adc
inc
hlt
dec
jg
movsl
inc
xor
sub
jnp
xor
jnp
shll
inc
inc
lcall
cwtl
xchg
sbb
shrb
cmp
imul
push
fwait
xor
fs
stos
into
mov
xchg
arpl
or
shrb
push
push
sbb
push
fdivp
lock
push
mov
lock
inc
mov
or
or
sar
cmp
lahf
sahf
fwait
adc
repnz
pop
arpl
repz
adc
shlb
das
faddl
mov
test
or
xchg
orb
test
mov
ds
lahf
sub
push
pop
mov
or
xor
outsb
xchg
cwtl
movsl
push
shll
lods
pusha
adc
andl
and
dec
jle
pop
aaa
dec
test
pop
test
scas
in
xor
por
dec
sub
mov
andl
and
sbb
mov
jle
pushf
pusha
ljmp
inc
aas
mov
or
xlat
mov
lea
sbb
push
mov
xchg
sahf
inc
je
aas
dec
xchg
push
mov
fbld
enter
sbb
or
das
jo
pop
ja
push
cmp
scas
mov
pop
fcos
dec
in
shll
cli
ljmp
sbb
pop
jmp
sub
adcl
loope
or
or
push
sbbl
leave
adc
lret
and
leave
aam
adc
ret
push
inc
aaa
push
lods
or
sbb
int
add
pop
dec
jns
insb
xchg
jp
xor
in
xchg
sub
les
mov
call
movsb
push
xlat
in
mov
lahf
mov
arpl
pop
push
push
xchg
jae
sub
or
push
lock
and
mov
aaa
dec
fisubrs
add
es
push
inc
or
movsl
shll
xor
add
ds
dec
out
xchg
xchg
pop
iret
das
inc
daa
cmp
ret
lcall
arpl
sarb
andl
insb
inc
insb
sub
pop
lret
pop
inc
jne
jle
aaa
mov
fimull
rorb
jne
fsubrs
nop
popf
mov
mov
stc
pop
mov
cmp
ret
pop
mov
mov
popf
stos
fstpl
dec
add
jge
mov
ret
shr
or
adc
fldl
pop
ror
inc
lret
xchg
repz
mov
inc
dec
sbb
in
cli
ficomps
push
adc
test
xchg
jle
push
xor
fs
and
lcall
insl
js
outsb
movsl
jle
or
dec
pop
fmuls
andl
loope
pop
xchg
test
leave
pop
scas
mov
lahf
dec
insl
jg
xchg
jecxz
pop
and
pop
or
jge
jl
inc
fcomi
out
jmp
or
repnz
scas
pop
je
sbb
mov
inc
jnp
adc
cmp
repnz
jnp
loope
test
pop
mov
inc
pop
fnstenv
fs
xor
iret
and
into
scas
adc
dec
lods
xchg
aas
outsl
sti
sbb
cltd
sbb
pop
and
mov
movsb
les
jb
jl
lods
rcl
push
mov
push
scas
stc
sbb
sbb
aas
push
aam
stos
clc
dec
mov
stos
inc
jecxz
inc
push
call
fsts
dec
push
rclw
cmp
dec
add
jecxz
rcll
scas
scas
mov
inc
mov
or
inc
mov
mov
sub
movsb
jb
mov
mov
xor
int
int3
push
ds
jle
sub
jle
and
cmpsl
cmp
in
dec
jge
pop
in
or
scas
push
mov
xchg
cs
imul
xor
add
icebp
rcrb
sub
idivb
iret
xor
stos
inc
or
sub
mov
push
sub
sbb
inc
hlt
sub
cmp
mov
xor
cmp
js
bound
cmp
pop
cmpsl
push
push
pop
or
out
sub
mov
jmp
in
sbb
les
shll
mov
or
inc
pop
test
cwtl
imul
rorb
orl
jp
in
dec
lahf
pop
daa
gs
push
js
lret
in
dec
xorb
push
lods
and
mov
in
mov
cmp
cltd
shlb
inc
mov
test
addr16
pop
ja
leave
inc
int3
das
add
and
or
pop
mov
insl
test
ficoms
push
jnp
int3
in
push
mov
pop
shlb
stos
incb
push
in
gs
int3
jmp
mov
test
test
imull
gs
and
mov
pop
shll
jmp
arpl
fisttps
push
sti
enter
mov
divb
out
fs
push
fisttps
dec
cld
int3
daa
sbb
mov
negb
jb
cli
rcr
dec
or
inc
pop
das
lds
imul
mov
or
xchg
inc
pop
into
add
push
push
mov
adc
mov
outsb
sbb
aaa
xor
fstps
mov
jns
jle
pop
jbe
xor
pop
push
inc
xor
adc
fadd
in
add
scas
fdivr
inc
xchg
jmp
pushf
mov
sub
jnp
js
imul
in
fdivrs
inc
enter
add
out
push
ja
ds
cmpsl
nop
pop
mov
cmp
xor
xor
sbbb
mov
repz
lea
in
ret
add
gs
movsl
push
xor
push
mov
push
mov
push
sub
or
or
gs
imul
mov
fimull
or
es
inc
sub
xlat
pop
aaa
in
push
sub
call
xor
adc
fstpt
aas
rcrb
enter
mov
jae
cmpsb
push
inc
and
jbe
ja
lcall
mov
arpl
jmp
xchg
es
test
sbb
add
push
sbb
hlt
sub
enter
cld
xor
pop
test
push
jmp
lretw
imul
cmp
cmpsl
scas
ss
lods
clc
lret
es
pusha
dec
add
bts
push
or
std
mov
dec
mov
mov
xor
lods
adc
sahf
xor
lods
sub
mov
inc
subl
jl
mov
xchg
mov
push
sbb
or
int
imulb
movsb
std
cmpl
sub
insb
out
mov
lcall
fiadds
subb
inc
ljmp
sbb
jle
push
ret
stos
rol
cmp
adc
test
jg
cmp
clc
in
jecxz
mov
mov
outsl
das
and
insl
pop
add
aaa
or
shlb
cltd
aad
mov
inc
cld
jle
lahf
adc
popa
sub
out
cmp
mov
pop
cltd
add
enter
and
dec
pusha
scas
mov
pop
xor
dec
add
pushf
jne
jmp
xchg
out
mov
mov
sbb
ja
je
mov
les
push
sbb
shr
xor
dec
fstp
aas
insb
xchg
sarb
pushf
jno
subb
je
inc
or
std
mov
repnz
test
stos
ds
mov
mov
and
lods
in
into
aam
aam
dec
cltd
test
daa
dec
popa
je
jge
lret
pushf
adc
sahf
or
adc
pop
jmp
mov
movsb
dec
js
cmp
sub
fbstp
add
aas
or
dec
ficompl
add
test
notb
jnp
rcrb
jecxz
pop
outsb
push
pop
jno
fnstsw
in
cmp
xchg
adc
imulb
mov
xchg
jecxz
xchg
inc
iret
mov
stos
addr16
mov
inc
insl
lcall
adc
out
adc
mov
inc
jecxz
cwtl
imul
sub
ret
imul
sbb
imul
mov
pop
jo
push
loope
scas
mov
jb
flds
or
dec
pop
cli
scas
inc
jmp
jo
popa
out
lret
cld
sub
mov
ds
sub
in
pusha
lea
lock
inc
xchg
negl
divb
mov
shl
sub
add
pop
nop
sbb
decb
test
jecxz
dec
data16
mov
pop
jo
cmp
aas
scas
cli
stc
stos
jmp
lods
test
popf
movsb
jle
jmp
fcoml
int
ljmp
push
push
mov
and
scas
imul
sub
mov
pop
jnp
dec
aam
aad
es
push
push
mov
fisubl
out
adc
icebp
inc
shlb
loop
or
shrb
cld
push
insl
cmp
insl
js
adc
mov
dec
pop
arpl
jae
push
ret
and
pop
roll
mov
js
xchg
lods
add
int
jmp
adc
adc
mov
fisubrs
jb
in
rorl
dec
cmp
push
and
mov
pop
dec
inc
repnz
pop
int3
add
int3
add
push
xlat
xchg
fs
fsubr
add
mov
pop
lock
insl
movb
jmp
or
mov
sub
sub
mov
cli
cmp
xlat
ljmp
push
int
xchg
and
movsl
push
pop
sub
mov
loopne
fcmovbe
cmp
cmp
mov
xchg
push
sbb
ret
jmp
xchg
loop
ret
dec
push
cli
push
mov
push
popf
nop
sbb
gs
rcr
mov
sbb
pop
cmp
test
mov
shrl
push
mov
mov
jmp
inc
outsb
loopne
jb
in
into
jg
mov
mov
sti
xchg
ss
inc
cmpl
xchg
fwait
hlt
sti
mov
ficompl
xor
lock
dec
lahf
dec
stos
sbb
and
aas
and
xor
push
sub
fmuls
cli
js
cld
jle
lods
pop
ret
je
jbe
addr16
xor
jl
andl
mov
mov
adc
cmp
imul
adc
sbb
ficoms
popa
dec
push
outsl
fcomp
xlat
je
cmp
leave
lcall
dec
and
dec
jne
pop
lahf
cld
xchg
cmp
jmp
lods
mov
mov
xchg
int3
and
movsb
mov
rcrb
jg
jge
jnp
jp
and
stc
clc
idiv
cmp
inc
mov
jmp
or
cmpsb
jmp
rol
xlat
adc
fcoml
sbb
jmp
mov
inc
and
pusha
pop
pop
loop
inc
cmp
mov
mov
xor
sbbb
xor
jae
divb
mov
into
ret
in
jno
ficoml
adc
mov
push
mov
fdivrs
cwtl
mov
clc
jge
mov
sub
and
pop
jns
xchg
adc
jns
dec
daa
lcall
dec
leave
add
ftst
loope
popf
cld
xor
sbb
ds
xor
or
mov
hlt
sbb
dec
inc
inc
mov
jge
sbb
stos
sti
sarl
addr16
in
sahf
shlb
pop
mov
int
mov
xchg
out
mov
mov
mov
xchg
std
sahf
add
jb
sub
mov
sbb
leave
or
in
push
clc
inc
cltd
pop
dec
dec
pop
int3
scas
addl
mov
add
cmp
es
push
movsl
adc
inc
daa
add
xor
cmc
std
int3
ret
fstp
cld
js
jnp
mov
insw
adc
jl
mov
out
sbb
mov
lret
fwait
mov
pop
addb
sbb
sbb
sbb
imulb
add
incb
sub
lea
push
cmp
push
shrl
shrl
and
dec
std
xchg
adc
hlt
std
stos
dec
push
sbbl
ret
push
sub
dec
add
or
out
std
push
xchg
sub
aad
mov
int3
sbb
pop
xor
xor
stos
push
sbb
cmpsl
out
pushf
and
int3
scas
cmpsl
fdivrl
outsl
mov
mov
outsb
xor
inc
jmp
inc
adc
jae
cwtl
mov
adcb
outsb
lahf
cltd
pop
cmp
mov
aad
subl
mov
rcrl
push
stc
sub
mov
push
fadd
pop
mov
fsubrl
and
data16
cmp
rcl
paddusw
pop
in
std
mov
aaa
ret
lret
ret
or
testb
mov
aad
mov
filds
or
pop
jle
mov
cmpsb
std
mov
cli
push
nop
paddd
xor
xor
sarb
mov
lea
mov
sbb
int3
mov
lcall
jae
jno
xlat
outsb
in
mov
dec
mov
dec
dec
push
mov
inc
xchg
shrl
test
add
add
daa
pusha
push
cmp
or
fimuls
loop
jbe
into
adc
mov
mov
dec
aam
push
addl
xchg
dec
test
bound
jmp
mov
bound
and
xor
out
cwtl
pop
xor
sbb
pop
jge
mov
xchg
sub
in
cmp
ss
sti
pusha
ret
push
int3
xlat
mov
and
loope
outsb
mov
jbe
stos
pop
popf
rorl
jnp
xor
in
inc
outsb
jo
addl
xchg
cwtl
mov
lahf
jp
mov
add
push
pop
inc
addr16
adc
or
mov
push
mov
repnz
bound
mov
inc
mov
outsb
mov
jle
icebp
xor
sbb
xor
loop
add
lods
fsubs
int
jbe
mov
sbb
pop
push
shlb
inc
mov
xlat
out
in
inc
xor
and
loopne
dec
movsl
cli
out
ja
mov
mov
mov
mov
enter
scas
leave
mov
sti
cli
mov
ss
ljmp
xlat
in
ret
std
das
xor
xchg
std
icebp
jb
out
cmp
push
inc
jae
negb
pop
push
inc
inc
sbb
xchg
pop
test
dec
fistl
leave
pop
ret
aaa
fisttpll
dec
dec
sbb
mov
mov
std
mov
and
xchg
mov
push
pop
cvtps2pi
mov
lahf
mov
sbb
sbb
sahf
cmc
pop
aas
arpl
popf
fdivrl
dec
nop
sbb
sahf
and
xchg
and
lods
rcrl
outsl
pop
bound
xor
sub
mov
mov
dec
xchg
jnp
imul
or
push
cmp
div
lret
mov
scas
pop
or
pop
outsb
nop
pop
fdivl
add
sub
lahf
icebp
leave
lret
mov
aad
pop
mov
stos
jge
pop
sbb
xor
xchg
jne
data16
lahf
and
jle
loopne
ss
mov
fsubrs
pop
inc
inc
sub
push
aad
mov
jno
or
aam
cmp
dec
mov
mov
insb
push
out
and
mov
jo
or
adc
cmp
adc
test
push
fwait
push
xchg
std
jecxz
test
add
or
test
and
xchg
subl
arpl
minps
push
sbb
scas
jp
hlt
mov
mov
test
enter
mov
repnz
stos
mov
pop
cs
push
jno
mov
clc
mov
push
push
sub
loop
imul
jbe
sahf
mov
es
add
adc
xor
insl
mull
je
shll
je
or
dec
mov
pop
pop
jmp
in
inc
mov
sbb
stos
mov
cmc
fwait
movsb
test
fstps
xchg
mov
xchg
mov
out
sbb
mov
lahf
mov
rcl
xchg
cmp
lcall
mov
sbb
insl
test
aad
test
adc
shlb
rcrb
push
sbbb
ffreep
push
fimuls
imul
dec
mov
jg
jl
lods
mov
xor
lods
lods
sub
sahf
mov
int3
ja
jge
xchg
adc
outsl
pop
out
scas
pusha
call
mov
mov
notrack
add
test
dec
sbb
mov
push
cmpsl
push
movsb
imul
mov
test
xor
fbld
stc
jnp
mov
fcompl
repz
pop
sbb
pushf
aam
mov
out
gs
cmp
xor
lds
adc
jecxz
ds
mov
cmc
test
fdiv
popf
loop
sbb
insb
pop
mov
push
sub
les
scas
out
xlat
adc
cmc
push
jae
jle
ja
pop
ror
outsl
cvtpi2ps
stos
add
sub
test
lock
mov
mov
mov
or
or
xchg
sub
lcall
add
repz
xchg
es
sbb
in
hlt
xchg
hlt
inc
pop
sbb
pop
das
call
loopne
inc
push
enter
pop
shr
xor
xor
pop
bound
cmpsl
add
or
test
fmul
and
movsb
and
sub
lock
mov
fdivrp
std
jne
add
lods
das
xchg
pushf
icebp
xor
adc
outsl
sub
jp
mov
mov
sub
inc
cmp
into
mov
cmp
sub
pop
scas
pop
mull
xor
andl
ljmp
sbb
add
or
sbbl
popf
xchg
mov
dec
sahf
mov
mov
mov
outsb
call
cmp
mov
les
mov
ds
mov
dec
cmp
mov
stc
cmpsb
repnz
xor
es
decb
and
repnz
push
mov
pop
outsl
xchg
mov
or
rcrb
call
bnd
fisubl
or
cmp
xor
jne
leave
fincstp
std
cmp
xor
jp
std
xor
into
mov
sahf
sarl
jge
sbbb
es
in
ds
scas
ds
and
pop
mov
test
scas
cmpsl
movsl
fdivl
push
mov
lret
leave
mov
pop
inc
xor
mov
xchg
jae
lahf
mov
cmp
jg
mov
xchg
and
xor
icebp
cmpsb
repz
imul
or
repnz
push
arpl
sub
push
adc
adcl
repz
test
movsb
das
sti
fsubr
fmuls
mov
dec
outsl
or
scas
fwait
or
movsb
lea
cmp
lcall
jns
jb
push
js
push
xchg
and
ss
inc
pop
leave
inc
int3
gs
sbb
pop
div
xchg
sub
dec
ficomps
mov
mov
inc
lods
lret
cmp
pop
or
addl
xchg
mov
inc
sbb
mov
aas
or
jo
cmpsl
aas
adc
adc
or
je
inc
popf
jns
test
jp
or
mov
aas
sub
cli
mov
iret
mov
inc
pop
fsts
loop
stc
push
cs
popf
push
sub
jecxz
mov
jns
in
mov
mov
push
data16
aas
outsb
push
test
data16
push
aad
rorl
dec
data16
and
aam
stos
out
icebp
in
or
sbb
lods
sub
mov
push
pop
mov
dec
jb
xchg
sbb
push
sub
pop
xor
lahf
fwait
add
jl
add
add
sbb
call
mov
aaa
push
repnz
pop
inc
mov
cmp
lahf
mov
push
xchg
jae
stc
mov
fstl
mov
inc
jmp
test
leave
and
lock
cmp
loope
call
addr16
stos
sub
jae
out
xor
subl
mov
in
cmp
sbbl
adc
fldt
jne
imul
jge
xor
and
xchg
sbb
xor
nop
xchg
push
arpl
adc
xor
jp
insb
xchg
ror
jmp
jno
push
ja
daa
cmpsl
outsb
jae
sub
fcmove
inc
jmp
movsb
xchg
cmpsb
mov
pop
cmp
out
adc
cmp
xchg
andb
xchg
adc
mov
sbb
xor
jmp
mov
pop
push
push
sbb
popf
xchg
dec
adc
xchg
sbbl
pop
cmpsb
shll
aas
cs
ljmp
scas
rcr
cltd
cli
mov
adc
in
mov
lods
push
testb
xor
dec
push
ds
sbb
sub
popf
xor
cli
jbe
ficoml
subl
cs
in
fisubl
nop
jo
dec
lret
incb
mov
inc
cmc
in
pop
imul
xchg
rorb
adc
jne
aam
clc
mov
mov
lea
ret
mov
icebp
xchg
mov
or
mov
jne
dec
mov
cmp
push
push
icebp
or
scas
add
add
xorb
andl
add
je
ss
into
xchg
out
jle
xor
xor
pop
and
or
lods
jne
push
jl
dec
push
jae
mov
mov
pusha
adc
sahf
in
das
mov
sub
mov
sbb
xor
test
rclb
loope
test
jb
pop
jge
faddp
enter
aaa
das
movsb
ret
mov
add
xchg
lods
scas
sbb
sbb
aam
movsb
jg
add
sub
test
mov
sbb
xchg
or
addr16
nop
mov
cmp
test
xor
inc
push
fimull
push
das
cmp
sbb
xor
fldl
andb
cmp
inc
cmp
adc
bound
leave
shrb
call
inc
and
pop
pop
pop
and
lock
push
lcall
mov
ret
fiaddl
sti
push
repnz
jle
push
repz
jnp
mov
pop
mov
fnsave
pop
xchg
jp
mov
mov
lods
adc
sbb
ja
rcl
add
jns
pushf
fwait
push
ja
mov
sbb
dec
pop
imul
fdivs
in
int
and
mov
jmp
jns
xchg
jge
mov
aad
fstp
je
pushf
sbb
sub
pop
icebp
das
clc
arpl
es
or
sahf
push
jmp
mov
test
inc
mov
hlt
push
add
sti
or
lret
dec
pop
dec
add
mov
inc
das
lea
sub
fsts
cs
dec
jo
sbb
cmp
scas
ficompl
pop
pusha
jmp
fldcw
push
scas
pushf
mov
popa
cmpsl
mov
imul
add
adc
cmpb
sub
and
test
cmp
cmp
jno
popf
cmc
inc
xor
or
movsl
repz
sbb
mov
push
cld
xchg
sub
mov
cmp
leave
and
cmpsl
sub
xchg
movsb
jb
dec
loope
dec
push
sarb
sub
das
pop
call
mov
lods
std
xchg
pop
lret
lahf
dec
dec
fldenv
adc
and
rolb
cltd
lret
stos
scas
jl
dec
inc
rclb
or
loop
mov
xlat
mov
add
fisubl
jmp
movsb
pop
rol
pusha
loop
inc
repz
out
int3
imul
test
jecxz
je
push
sbb
int
lcall
out
cmp
setne
mov
scas
bound
pop
fcompl
sti
inc
mov
out
fistps
jo
sbb
push
int
push
sti
xor
enter
loop
and
andb
cmpsl
lahf
aaa
sbb
sbb
sbb
sub
outsl
or
dec
fcomps
cmp
push
xchg
inc
push
icebp
popa
sbb
mov
pop
or
outsl
pop
cmp
or
cmp
out
mov
sub
mov
mov
jmp
adc
sbb
scas
adc
pushf
jno
xchg
sub
pop
sub
rorl
dec
cmp
push
mov
in
rorb
movsl
dec
test
js
cmp
add
js
iret
outsb
add
bound
jmp
xor
ss
cmpsb
test
mov
mov
pop
jp
inc
daa
aad
adc
repnz
fistps
lods
mov
leave
mov
jmp
leave
add
mov
adc
xor
mov
incl
sbb
pop
loope
loope
test
cmp
or
mov
and
sbbb
push
mov
xor
cwtl
leave
call
dec
mov
out
jns
mov
dec
and
cmp
mov
fsub
cmc
aad
jnp
sub
sbb
pop
imul
inc
push
pusha
mov
add
pop
inc
lahf
enter
cmpl
jg
inc
rol
add
dec
aas
mov
xor
inc
adc
push
dec
addr16
xchg
out
jne
push
jne
int
shr
aam
lret
aad
jnp
cmp
gs
aas
lret
movsb
mov
sub
pop
pop
fbstp
movq
jns
popa
xor
or
mov
sbb
rclb
and
fdivl
mov
push
popa
cld
cwtl
and
aad
stos
sub
inc
mov
push
fwait
cli
popa
arpl
inc
mov
cld
cmp
dec
fidivs
xlat
loopne
fs
inc
adc
add
xorl
push
mov
imul
inc
outsl
sub
arpl
in
movl
and
fxch
cmpsb
dec
mov
and
add
cli
cmpsl
mov
leave
jno
adc
jg
mov
and
sbb
pop
into
mov
add
push
aad
pushf
rcl
mov
orl
into
addb
imul
cmp
jb
cmpsb
aas
fbld
cmp
mov
stos
dec
cmc
out
rorl
ds
sub
into
loop
jo
push
add
test
testb
jae
xor
sbb
sar
xchg
jp
cmp
fbstp
mov
les
dec
cmp
inc
test
fsubs
lcall
jb
sarb
dec
cmpsb
dec
push
ss
adc
push
and
out
mov
cmpsl
pop
aaa
pop
lret
cli
or
sub
stos
adc
je
insl
outsl
cli
addl
jo
std
mov
adc
imul
jae
sub
xor
cmp
test
add
xchg
or
test
pop
scas
cmc
gs
ret
jb
repnz
shll
mov
es
jp
std
loopne
add
int3
pop
outsl
xor
xchg
pushf
jae
adc
mov
jp
aad
jge
testb
jnp
dec
or
inc
mov
lods
nop
int
aam
ret
movsl
mov
mov
xchg
in
dec
or
and
mov
leave
xor
inc
dec
cwtl
xor
jg
pop
xor
dec
push
mov
cli
mov
je
and
dec
leave
nopl
nop
xor
fcomip
jae
xchg
leave
repz
in
mov
mov
mov
push
pop
sub
adc
jne
push
xchg
fstpl
cmp
sub
rol
inc
cmp
jae
cmp
iret
adc
hlt
add
mov
call
mov
cmp
sub
cmp
adc
mov
pop
mov
push
pop
fcmovnb
leave
sahf
fcmovne
or
aad
xchg
push
adc
test
into
outsb
push
and
or
int
sahf
mov
mov
addr16
mov
adc
insb
sub
mov
adc
push
daa
pop
idivb
aas
jo
xor
sti
cmp
icebp
mov
in
sbb
inc
adc
pop
movsl
add
xchg
sub
scas
and
rolb
in
push
mov
outsb
adc
sbb
or
or
or
mov
lcall
or
and
add
sahf
aad
es
sub
jp
inc
icebp
in
sub
push
in
xlat
and
push
add
sbb
xor
out
cwtl
and
dec
sub
out
xorl
push
int
or
testb
mov
push
imul
hlt
sti
out
dec
sub
lahf
pop
lret
xor
xor
xchg
pop
xorl
and
pop
inc
xchg
test
fsubr
or
imul
adc
lahf
push
sbb
xchg
fwait
cmp
push
out
pop
mov
adc
or
adc
jns
imul
in
pop
xor
lret
hlt
cmp
ss
jmp
popf
outsl
movsl
iret
lcall
jmp
clc
mov
adc
test
je
call
ds
mov
sub
pusha
adc
add
movsl
cmpsb
js
cmp
int
mov
iret
fcoms
ja
rorb
addr16
pop
mov
sbbb
stos
or
fnstcw
adc
addb
ljmp
add
into
and
add
and
cwtl
push
sub
push
cli
mov
dec
ljmp
adc
cs
clc
icebp
movsb
push
push
loope
push
stos
pop
adc
out
pop
js
add
cmp
add
xchg
adc
das
inc
mov
cmp
into
out
inc
in
dec
jbe
adc
cmpsb
repz
xor
fimuls
movsl
and
dec
pushf
xchg
pop
pop
push
ljmp
mov
popf
sub
in
mov
popf
outsb
jo
leave
xchg
icebp
mov
test
sub
xabort
rorb
dec
loopne
dec
cmp
sub
pop
int3
aas
pusha
cmp
mov
dec
sub
je
ret
ret
add
sahf
mov
xchg
mov
stos
lcall
inc
add
fsubs
pop
pop
mov
jno
fsubrl
stos
cltd
add
mov
xor
stc
mov
lds
out
add
add
cmp
or
adcl
and
shrl
insl
xchg
dec
nop
xor
add
push
out
rorl
push
sub
xchg
jbe
leave
jge
outsl
jbe
pop
orb
fisttpl
or
mov
cmp
xchg
filds
scas
add
sub
decb
ljmp
cwtl
mov
jmp
push
iret
fwait
mov
xchg
dec
push
or
sbb
das
enter
push
mov
loope
add
xlat
repz
mov
adc
xorb
mov
dec
stos
sbb
pusha
jle
dec
push
sbb
je
and
addr16
xor
cmp
push
mov
xor
push
andb
sub
mov
mov
inc
inc
mov
scas
mov
xchg
lods
pop
xchg
sar
lea
xchg
dec
sub
cmp
inc
jbe
lcall
cmpsl
pcmpeqb
popa
fdivrl
mov
jb
lahf
movsl
lret
pop
aam
lds
sarl
xchg
cli
pop
cmpsl
dec
sub
aam
rcrb
sub
cmpsl
rolb
xchg
xchg
test
lahf
add
pusha
data16
clc
lods
fs
sub
sbb
aaa
dec
stc
add
sbb
aam
cmp
insb
and
push
and
addr16
rorb
idivb
ja
hlt
mov
inc
addr16
or
pusha
mov
inc
xchg
fs
mov
shll
out
or
sub
mov
push
add
sbb
sti
lea
pop
movsl
call
scas
pushf
lods
aas
xchg
clc
jmp
fists
dec
test
inc
fmuls
add
shll
pop
add
loop
dec
xor
ljmp
mov
jbe
and
cs
push
mov
test
shrb
int
mov
fs
mov
cmpsl
xchg
aam
aaa
sahf
leave
xchg
sub
xor
leave
loop
ja
xchg
cltd
mov
in
dec
movsl
push
loopne
mov
nop
cld
mov
cmpsb
sbb
outsb
out
cmp
outsb
push
add
stc
cmpsl
cmc
pop
pop
jle
sbb
jae
notl
outsl
mov
loopne
push
push
lahf
dec
push
mov
ljmp
mov
push
xchg
insb
and
rol
mov
jle
cmp
sbb
pop
pop
push
aad
ret
mov
push
jp
push
mov
test
adc
stos
pop
xchg
iret
jb
push
mov
nop
jnp
and
add
loope
sbb
into
mov
push
in
sbb
cmpsl
sbb
lret
mov
mov
mov
dec
push
les
mov
jns
add
adc
sti
sbb
jmp
xor
imul
inc
mov
ja
sti
xlat
sbb
les
out
push
adc
mov
cmp
ret
fs
in
add
fcmovbe
pop
lock
mov
sbb
stos
mov
jns
fwait
out
add
std
add
sarl
lret
or
shrb
jb
sub
sbb
int
xor
mov
popa
push
in
push
fisttpll
cmpsl
push
xchg
repz
lods
push
xchg
mov
cmp
leave
cmc
rcrb
or
mov
out
cmp
fsubrl
push
cmp
adc
mov
mov
lahf
cmp
jmp
fs
jnp
mov
and
shrl
cs
push
leave
lods
inc
fnstcw
jg
outsb
or
mov
out
bnd
movsl
push
mov
decb
sbb
movsb
rcr
sub
sub
add
data16
sbb
inc
iret
mov
clc
roll
lret
iret
jne
sbb
iret
mulb
jg
mov
addr16
mov
test
jo
add
scas
or
pop
adc
je
xchg
and
andl
mov
shrb
mov
and
add
fldlg2
orb
mov
push
cmp
outsb
mov
mov
mov
lock
mov
in
or
icebp
rorl
stos
loope
aaa
cmpsb
push
jne
test
outsl
jle
outsl
sub
inc
lcall
adc
das
xchg
clc
cmp
and
add
jne
pop
daa
aad
cli
enter
mov
push
and
mov
ja
dec
mov
dec
test
inc
scas
sbb
adc
divl
in
add
ror
mov
xor
mov
rcrb
cwtl
nop
cmpsl
pop
cmp
das
adc
cmpsl
mov
add
imul
dec
mov
or
dec
adc
lods
jge
xor
pop
and
xchg
aas
je
push
sbb
pop
xchg
jne
push
sti
fs
xor
sub
js
mov
nop
out
push
or
jno
cmp
xchg
leave
inc
arpl
cmp
popf
ss
fldcw
or
inc
adcl
movsl
fnstsw
daa
xchg
adc
les
inc
stos
sbbl
movsl
inc
mov
jae
xchg
mov
inc
adc
insl
fs
xchg
mov
scas
push
or
out
test
aad
dec
inc
fidivl
fidivrs
nop
out
mov
in
inc
scas
pop
insb
loope
mov
push
push
ud2
ja
xchg
mov
ds
xor
scas
ss
lea
sti
shl
jo
std
ss
je
stos
sub
data16
cwtl
or
cmpl
loop
dec
push
mov
cmp
sti
loope
pop
fisubrs
fs
notb
push
or
push
pushf
dec
add
add
or
ja
dec
add
add
loop
push
push
sarl
lea
mov
mov
pop
test
and
and
in
ret
sbb
lea
inc
fs
mov
dec
in
out
pop
les
stos
add
data16
sbb
mov
adc
adcl
lahf
mov
stos
pop
ljmp
cs
sbb
xchg
ficoms
adc
pop
mov
test
lds
mov
loope
clc
cmp
adc
and
leave
jno
xchg
fwait
scas
and
stc
mov
sub
jnp
push
leave
out
adc
fiaddl
push
adc
jg
xchg
push
dec
or
cmpl
add
push
cs
ret
add
pushf
sub
adc
sbb
xor
and
div
in
cmp
pop
or
add
lods
stc
sbb
pop
xchg
test
lea
pop
fwait
hlt
mov
shll
add
fsubl
call
int
lahf
out
insb
mov
mov
in
add
mov
loope
pop
out
cmp
jns
out
imul
jmp
ss
je
js
or
xchg
ljmp
add
push
outsb
dec
pop
jns
pop
out
cmp
mov
sti
sarl
out
or
lcall
outsb
fcomp
cmp
psrad
cmc
push
aad
pop
pusha
jb
insl
cltd
test
sbb
jnp
dec
js
psraw
jnp
orb
lcall
mov
adc
fisubl
sbb
mov
push
cmova
out
test
pop
rcr
and
inc
xor
idiv
inc
sahf
in
mov
inc
xchg
inc
lcall
repnz
sahf
pusha
pusha
mov
out
testb
notb
inc
iret
icebp
dec
add
or
nop
lods
mov
xor
cs
dec
jnp
sub
dec
inc
nop
addr16
and
push
ds
ret
in
mov
int
push
add
adc
lcall
test
mov
pop
bound
andb
int
or
stos
shrb
adcb
mov
jns
inc
mov
es
xchg
repnz
sbb
sub
push
lea
aaa
inc
fisttps
adc
mov
leave
mov
addr16
arpl
cwtl
iret
jb
pushf
repnz
xchg
sub
rol
sahf
out
add
push
inc
fisttps
mov
ljmp
push
mov
nop
adc
inc
pop
scas
add
mov
sahf
xchg
into
adc
add
and
xchg
push
lods
xchg
cs
fs
lock
mov
shll
js
cmp
mov
adcb
clc
inc
repz
inc
shl
sub
sub
mov
repnz
clc
or
xchg
or
leave
add
or
movsl
iret
or
mov
pop
mov
ret
stc
sub
iret
jmp
pop
push
push
pop
or
xchg
and
mov
js
sub
sbb
daa
or
and
mov
call
sahf
inc
mov
xchg
jp
xor
dec
fs
lahf
mov
xchg
lea
jae
dec
and
jge
dec
lahf
jge
movsb
incb
xor
add
fnstsw
lret
jne
jno
jmp
sub
dec
aad
push
les
int
mov
sbb
rcl
dec
ljmp
and
or
jb
add
es
sbb
cs
push
into
fsubs
mov
mov
repz
sub
jb
sbb
jge
mov
icebp
popa
lahf
dec
iret
mov
sbb
fists
push
jp
sub
lret
popa
or
and
dec
mov
pop
sbb
mul
je
and
add
and
or
xor
faddl
sub
pop
fdivrp
test
rcrl
pop
xchg
fstpt
cwtl
xor
jns
push
pop
cmp
or
or
ja
jl
or
ljmp
and
mov
mov
pop
push
mov
aam
scas
gs
hlt
cmp
mov
popf
or
jmp
out
insl
adc
push
xchg
adc
xchg
fwait
dec
imul
and
pop
xchg
jge
inc
push
pop
pop
lcall
icebp
in
ret
ljmp
out
jp
mov
or
mov
sbb
xor
mov
jb
jl
adc
pop
addr16
xchg
jnp
xlat
enter
jo,pt
jmp
shrl
sub
pop
inc
sbb
push
mov
inc
or
and
cmc
sub
int
and
cltd
push
repnz
push
flds
add
mov
and
or
dec
cwtl
jbe
stos
jecxz
pop
lret
sar
shl
std
out
shrl
cmpsb
mov
mov
xor
jecxz
nop
mov
inc
xchg
sub
cwtl
test
in
cmc
adc
xchg
rcll
mov
iret
ja
pushf
push
xchg
xchg
andb
and
lcall
andl
push
cmpl
push
orb
cmp
sub
inc
shlb
xchg
mov
mov
pop
into
popa
push
ret
mov
jae
lret
dec
sti
rorb
mull
xor
scas
jno
test
jo
imul
mov
insb
cltd
sbb
clc
insb
add
fcomi
cld
sbb
xchg
dec
in
mov
fisttpl
out
bound
repz
repnz
inc
pusha
loope
lea
inc
pop
into
lea
sub
fisttpl
arpl
push
out
xor
xor
xor
push
stos
fistps
inc
dec
adc
push
inc
lea
inc
jns
test
xchg
jns
mov
jle
out
sub
and
cmp
ja
mov
shlb
jae
pop
xchg
xchg
push
sbb
jl
xchg
add
fistpl
or
jp
mov
dec
and
in
mull
ret
sub
leave
pop
xchg
fdivrp
add
loopne
mov
inc
push
sub
mov
add
stos
into
insb
ss
cld
sbb
xchg
pop
roll
xor
sbb
repnz
push
mov
xchg
mov
mov
sbbw
jo
jae
mov
icebp
pop
cmp
cmpsb
repz
fbstp
sub
aam
xchg
mov
in
dec
inc
pushf
xor
jbe
lods
out
pop
stc
dec
dec
fcomp
ret
cwtl
sbb
jg
dec
aaa
mov
out
int3
dec
mov
cltd
mov
inc
pushf
ret
push
dec
adc
cmp
outsb
cli
adc
loope
push
jo
jge
mov
nop
jmp
dec
fs
inc
pop
lcall
pop
pop
inc
cli
sbb
hlt
dec
sbb
outsl
or
dec
outsb
sahf
fs
repz
xchg
inc
in
imul
int
sahf
pop
insb
dec
ds
add
call
pop
imul
adc
and
movsl
ss
adc
dec
mov
jle
inc
sbb
bound
icebp
sti
test
mov
adc
xchg
push
mov
sti
jge
inc
test
fmulp
mov
mov
loope
xchg
push
int3
into
movsb
sbb
sub
inc
loop
xchg
inc
and
repz
push
xlat
jb
repz
data16
push
jbe
dec
mov
sbb
xchg
gs
mov
xchg
pop
dec
mov
out
ja
clc
incl
nop
pop
jnp
lahf
xor
pop
pop
push
fucomip
add
adc
mov
push
fadd
pop
lahf
mov
fisubl
ljmp
mov
negl
sub
xor
push
xchg
adc
sahf
test
sti
popf
shlb
ljmp
xchg
sbb
mov
test
push
test
pop
mov
xor
sbb
rol
fildl
cmp
pop
xchg
mov
and
bound
xor
inc
addr16
ja
sbb
sub
adc
xor
mov
sub
lea
xchg
push
xor
fwait
lret
cmp
aad
xor
push
sbb
sub
mov
jecxz
cltd
xchg
test
insb
cltd
js
or
lret
sub
dec
je
or
loop,pt
pop
hlt
push
or
mov
int3
mov
xchg
outsl
ljmp
cwtl
sbb
inc
js
ljmp
push
mov
and
xchg
push
lods
pop
inc
aas
movsb
imul
in
pop
nop
in
ljmp
mov
add
rcll
stos
sub
data16
inc
mov
xchg
pop
dec
ds
add
or
sbb
xor
inc
sub
pop
xchg
xor
in
aam
lcall
test
daa
dec
lea
int3
aam
inc
cwtl
imul
push
cmp
mov
outsb
or
mov
sub
adc
mov
jge
add
mov
outsl
negl
cltd
and
sub
or
inc
imul
bound
mov
xor
push
mov
mov
das
cmp
in
aam
adc
cmp
in
jbe
lret
mov
mov
inc
adc
ret
mov
out
cld
pop
xor
add
call
sub
je
xor
push
dec
frstor
sbb
outsb
imulb
push
add
sub
nop
dec
es
daa
push
add
push
push
fidivrl
inc
push
dec
push
pop
filds
mov
jg
mov
imul
je
sbb
or
mov
and
pop
leave
xor
popl
test
mov
mov
jl
or
xchg
xchg
inc
add
mov
lcall
dec
ret
scas
xchg
pop
jne
mov
sbb
clc
cmp
jno
cld
jmp
cwtl
lahf
inc
cmp
mov
push
adc
divb
cltd
inc
insb
je
xchg
xorl
jg
cli
dec
push
inc
mov
cmp
or
xor
das
jecxz
fsubrs
sar
mov
push
push
sbb
adc
push
mov
cmpl
jp
aas
movl
adc
cmp
adc
ljmp
pop
mov
jp
jmp
imul
out
push
neg
cmc
xchg
nop
add
fsubs
inc
xchg
mov
or
xor
sub
cmpsb
fisubrs
push
mov
js
inc
lock
xor
push
jecxz
mov
pop
mov
insl
addr16
lea
mov
inc
jo
and
dec
jns
das
or
js
push
cmc
stc
les
dec
pop
mov
mov
mov
jo
xchg
les
je
aaa
std
test
sahf
push
fdivrl
pushf
test
cwtl
in
sbb
cwtl
or
movsb
pop
ljmp
call
jecxz
xor
data16
xor
pop
xchg
notb
cmp
mov
mov
into
outsb
push
mov
sarl
hlt
loop
mov
ljmp
outsb
dec
jnp
aam
loope
push
dec
int
out
flds
rcll
mov
sub
mov
test
push
std
test
test
loop
nop
adc
scas
rorb
lods
cwtl
scas
inc
push
jo
imul
loop
or
mov
out
cmp
push
lods
sbb
cmpsb
mov
fidivrs
mov
cld
dec
insl
into
add
push
push
scas
dec
dec
jp
mov
ja
jmp
mov
sti
mov
sbb
push
add
imul
in
push
mov
lds
imul
in
push
dec
mov
jae
popa
repz
out
lahf
ret
sti
hlt
mov
test
int
adc
inc
scas
outsb
mulb
lods
mov
xchg
ja
hlt
dec
adc
lahf
clc
mov
sbb
testl
dec
daa
inc
push
lcall
mov
sbb
push
sbb
push
cmpsl
mov
cmp
cmp
mov
arpl
lods
xor
loope
popa
enter
lcall
xchg
fistps
push
adc
jle
push
xchg
dec
in
call
and
jb
sbb
sub
mov
mov
pop
das
es
mov
mov
es
inc
dec
sbb
jne
scas
cmp
pop
push
mov
movsbl
dec
push
cmp
adcb
ljmp
sahf
fistl
cltd
repz
xchg
out
mov
adcl
pop
cmp
adc
mov
sarl
frstor
daa
xchg
mov
mov
pop
cli
pop
sub
out
cmpsb
jne
mov
out
mov
outsb
pop
inc
rorb
cmpsb
push
push
push
cli
add
sub
or
cli
mov
pop
mov
setae
or
jns
mov
bound
mov
mov
jne
adc
negl
call
adc
loope
push
cs
push
jmp
xchg
adc
xchg
out
or
cmp
clc
test
jne
loope
or
loope
lods
enter
pop
lock
xchg
mov
neg
je
aam
leave
insl
shrl
xor
gs
pusha
inc
arpl
lea
lret
popf
and
sbb
and
or
scas
lea
sub
cmc
mov
and
mov
std
or
pusha
pushl
and
pop
xorb
call
aas
mov
jecxz
add
push
ret
addr16
inc
insb
sub
pop
xchg
fnstenv
lret
popf
es
iret
pushf
hlt
out
sbb
leave
icebp
cwtl
das
cld
enter
mov
pop
sub
inc
mov
dec
pop
jle
addr16
stos
in
mov
jns
data16
shl
cmpsb
sub
mov
dec
inc
mov
or
adc
js
xchg
lea
adc
xchg
out
jns
lock
out
out
insl
jl
jp
aam
btr
xor
xchg
aad
jnp
adc
mov
out
inc
in
jp
or
jmp
jbe
out
pop
in
and
out
mov
push
mov
or
push
jae
leave
pop
fbld
xcrypt-ofb
cmpsl
test
int
mov
lcall
ljmp
or
xchg
jns
push
cmp
jmp
xchg
mov
inc
lret
mov
hlt
test
bound
stc
into
or
and
inc
sbb
test
fistpll
in
dec
xchg
xchg
jecxz
mov
lahf
fidivrs
pusha
xchg
lods
fldl
cmp
in
nop
sahf
inc
ja
pop
lods
mov
push
sarl
xchg
in
aas
sub
or
es
push
jmp
jmp
push
fidivrl
sbb
inc
inc
stos
sub
lock
test
dec
cmp
scas
shlb
pushf
sbb
pop
cmp
cmp
sbb
movsb
stc
mov
mov
testb
test
mov
mov
dec
cmp
xchg
xor
aas
dec
notb
xchg
leave
push
xchg
imull
iret
inc
cmc
mov
dec
mov
fcompl
scas
jbe
mov
jecxz
and
mov
addb
gs
pop
lods
mov
xchg
push
push
inc
push
mov
js
lahf
popa
xor
rcr
out
xor
pop
dec
mov
xor
sbb
cmp
lret
sub
xor
sbb
sbb
mov
cmp
mov
loopne
shll
or
fldcw
jge
pop
mov
and
pop
test
fstl
jge
xchg
ljmp
ljmp
cmp
out
push
cltd
push
cmp
push
add
add
push
lret
rcrl
mov
lret
mov
aas
push
lret
iret
scas
ja
icebp
xchg
dec
and
mov
adc
push
leave
xlat
push
dec
mov
mov
movsb
pushf
pop
aas
addb
mov
cmc
je
sbb
sub
nop
inc
call
and
pop
and
jns
xchg
es
xchg
adc
ds
test
addr16
cli
test
dec
orb
xchg
mov
xchg
stc
sub
sbb
out
mov
mov
icebp
repnz
jne
gs
mov
or
mov
pop
das
sti
nop
pusha
movb
and
cltd
mov
lret
lds
xchg
jne
sub
xchg
push
cwtl
inc
and
lret
dec
shl
sahf
cmpsb
fisubs
rcrb
push
pop
int
subl
jnp
pop
test
dec
scas
ja
inc
mov
jnp
jne
clc
or
into
dec
dec
movb
ljmp
push
jns
push
mov
sub
outsl
xchg
sti
lret
and
inc
dec
dec
jg
add
ja
loope
and
movsb
lret
lds
jb
into
repz
sarl
std
fnsave
xchg
daa
xor
stos
pop
std
push
cs
sahf
std
add
cwtl
repnz
xor
mov
or
scas
jmp
adc
data16
mov
loopne
add
xchg
push
mov
dec
loope
fbstp
divl
stc
sub
sti
sub
xor
mov
into
pushf
shll
push
push
scas
inc
pop
cmpsl
mov
mov
pop
xchg
pop
xchg
or
and
gs
add
shrb
and
add
cmp
jo
test
sarl
ja
in
push
orb
sbb
inc
lock
mov
mov
push
in
cmp
test
popf
push
lret
fwait
push
jmp
sahf
bound
and
xchg
decl
pop
lods
mov
imul
fdivr
and
dec
pusha
mov
mov
push
xor
mov
in
cwtl
xchg
fnstsw
sahf
sub
push
dec
cmp
jno
cmp
lcall
loope
mov
shrb
add
xchg
sbb
jl
stos
add
popf
cmp
insb
xchg
sbb
and
xchg
stos
ret
inc
adc
lea
ljmp
xchg
enter
lock
into
cmp
into
dec
fdivrs
cli
out
into
push
neg
and
scas
pop
fwait
mov
pop
inc
cmp
and
jl
inc
sub
ljmp
mov
mov
adc
mov
insb
xor
pop
push
mov
or
and
xchg
pop
dec
sub
mov
iret
hlt
aas
sbb
xor
dec
insb
subl
push
test
mov
xor
cmp
jns
xchg
pop
pop
rcl
and
push
xchg
lock
shr
mov
sub
sub
je
inc
jmp
and
andl
into
call
sti
adc
bnd
nop
loope
out
mov
mov
cmp
mov
ljmp
mov
push
lods
adc
cmp
fmull
dec
lea
les
mov
je
fists
mov
xor
jbe
out
pop
rolb
dec
in
icebp
pop
in
pop
dec
xlat
push
arpl
add
fwait
outsl
sub
movsb
add
std
insl
dec
jl
aas
test
fdivrl
inc
pop
daa
and
movb
nop
pushf
mov
int3
int3
mov
jle
das
jmp
pusha
js
jge
mov
repnz
adc
xlat
mov
dec
sub
popa
aas
jns
in
xchg
mov
frstor
jne
push
cmp
pop
sub
nop
lock
mov
icebp
mov
jnp
bound
decb
adc
ds
call
bound
ret
aad
pop
mov
sub
enter
aaa
jae
loope
xchg
push
sub
repz
jb
sbb
clc
cmc
cmpsl
xchg
fsubrs
fisubrl
jo
icebp
and
mov
mov
add
lret
jnp
adc
shlb
rcll
lock
cmp
repz
sti
nop
cmp
lret
dec
or
shrb
dec
push
and
or
xor
cmp
pop
mov
sahf
test
lock
mov
mov
sub
das
int
adc
cmp
push
insb
dec
scas
mov
jge
shlb
xchg
scas
dec
int
or
push
in
adc
mov
pop
xchg
aad
std
xchg
inc
in
stos
lret
push
jp
data16
xchg
cwtl
loopne
sub
add
mov
in
data16
mov
pushl
fs
sti
fld
test
mov
push
sbb
cmp
or
push
in
sub
fs
mov
adc
das
pop
and
sti
mov
mov
das
stos
leave
leave
adc
rcpps
xlat
outsl
jnp
and
daa
scas
mov
mov
push
sbb
cli
into
negl
insb
ficoms
jb
filds
jle
or
mov
inc
dec
sbbl
push
cli
out
loope
add
mov
es
xor
inc
cmc
cmpsb
clc
rol
cli
bound
call
loope
adc
aad
jmp
aas
mov
push
pop
inc
icebp
mov
jle
fldenv
cmp
inc
sti
cmp
add
gs
stos
add
movsl
mov
jne
fstps
pop
mov
sub
or
sahf
sti
jp
int
jbe
fcomip
dec
movsl
and
movb
scas
push
ja
sub
rclb
enter
movsb
cld
loope
dec
mov
pop
outsb
loope
in
xchg
fsubl
jle
repz
ret
aad
mov
mov
test
or
data16
pop
imul
addb
and
xorl
je
adc
sbb
xor
sub
scas
scas
call
addr16
sbb
repnz
dec
xor
xchg
and
pop
pop
xor
pop
js
push
loopne
stos
sub
inc
fucomip
xchg
mov
mov
jae
xor
pop
jb
test
decl
rcrl
sbb
das
mov
sbb
adc
push
rcrb
popa
xchg
aas
rcrb
mov
in
cmpsb
add
mov
pop
mov
and
out
push
dec
fdivr
out
aaa
out
adc
mov
fisttps
sbb
jno
xchg
fs
adc
or
cld
xchg
push
mov
push
sub
mov
jb
pop
mov
dec
cld
pop
inc
jp
loop
addl
mov
and
dec
xchg
div
andl
pop
mull
and
je
push
pop
ja
cmp
into
mov
das
jo
call
xchg
rorb
jbe
cmp
std
clc
or
dec
push
insl
rorb
lock
hlt
mov
pop
std
repz
shlb
movsb
pop
or
add
push
stos
cmp
xchg
jne
sbb
lcall
or
sti
mov
jecxz
xor
enter
stc
inc
and
pop
mov
outsl
inc
ljmp
scas
out
adc
fdivl
fiadds
mov
shlb
mov
ja
ja
imul
fxtract
cli
sbb
jmp
mov
fidivs
dec
sahf
leave
cmc
inc
call
add
mov
dec
and
dec
add
sub
push
cltd
clc
dec
mov
xor
lea
adc
xchg
or
and
sti
mov
fldt
icebp
inc
into
dec
mov
and
push
call
iret
sbbl
jnp
pop
int
adc
clc
sbb
pop
xchg
pusha
inc
fidivrs
adc
fwait
mov
add
xor
mov
fimull
mov
adc
fidivl
and
loopne,pt
addr16
xchg
mov
mov
jge
movsb
inc
pop
mov
movsb
mov
push
cmp
cmpsl
mov
test
jbe
cmp
stos
daa
push
jo
out
inc
dec
popl
cmp
mov
pop
imul
and
mul
dec
pop
ds
mov
clc
js
imul
or
ss
not
aaa
pop
arpl
jge
sub
stos
cs
scas
repnz
int3
incb
jnp
aas
test
in
js
scas
mov
sahf
jp
cld
adc
sub
push
and
xchg
mov
dec
negl
fnstcw
mov
inc
test
fimull
jno
jne
ss
cmp
nop
sbb
mov
mov
jno
movsl
push
ret
roll
pop
in
push
sub
push
sub
or
mov
ja
pop
repz
lea
push
mov
sub
shl
xor
add
adc
pushf
aad
push
xlat
sub
jne
or
lea
and
or
sub
xchg
pop
addl
ja
dec
imul
jmp
call
lea
and
mov
jmp
popf
mov
jle
out
pusha
xchg
inc
std
pop
mov
rolb
pop
dec
adc
or
mov
out
call
shl
add
push
mov
movsb
out
mov
mov
fwait
xchg
inc
test
outsl
dec
mov
shlb
ja
push
lahf
scas
mov
leave
jg
clc
ljmp
jne
pop
outsb
adc
ds
pop
cli
gs
ja
icebp
adc
pop
aas
jae
lea
dec
adc
inc
out
cmpl
cmovle
mov
outsl
jns
test
imulb
stc
pop
add
les
scas
mov
sbb
test
or
jo
rcl
cmp
imul
outsl
adc
inc
cmp
test
repnz
inc
and
insb
mov
pop
sub
push
inc
stos
insl
or
jo
sub
jb
add
jge
jne
inc
ret
sahf
pop
outsb
add
les
test
and
or
mov
pop
dec
mov
jae
lahf
push
xor
imul
add
mov
lahf
xchg
jp
dec
lahf
les
cld
mov
inc
imul
push
stc
fistl
movsb
aaa
test
mov
daa
jecxz
out
in
adc
pusha
pop
add
mov
push
fdivrp
lcall
adc
dec
or
mov
adc
cmp
sub
clc
push
add
sbb
out
mov
divl
test
dec
ficompl
out
fnsave
out
imul
jb
jmp
cmp
sbb
mov
loope
fidivs
add
sti
fildll
outsl
lock
inc
mov
loope
sub
jnp
int
or
and
mov
subl
movsb
iret
mov
or
mov
adc
in
shll
cmp
xchg
movsl
push
and
sbb
mov
sti
faddl
icebp
mov
add
cwtl
sub
ss
fstl
mov
cwtl
call
push
cmp
add
lret
mov
sbb
pop
and
loopne
mov
scas
push
or
dec
or
mov
insb
pop
xor
andl
fidivl
mov
jo
inc
cmpl
xchg
fimull
push
push
cld
ret
xchg
fsubl
mov
push
ja
push
sub
clc
jbe
xor
mov
mov
call
sub
jecxz
sub
push
xor
xchg
push
cwtl
mov
jmp
pop
and
stos
push
repz
out
add
mov
frstor
push
les
xor
fstps
sub
daa
aas
repz
testl
or
mov
hlt
pop
fs
push
mov
outsl
and
gs
pushf
mulb
push
sti
sahf
ds
xchg
inc
test
loope
repnz
cmp
lock
negb
and
ds
das
sub
dec
push
or
pop
sbb
repnz
pushf
test
js
push
push
adc
sahf
adcl
lods
pop
testb
adc
sbb
sbb
stos
mov
sub
mov
out
add
in
in
push
repnz
cmpsb
sbb
sub
shl
pop
sbb
cmpl
ja
jns
rclb
mov
jb
sbb
in
cmc
js
lods
push
mov
and
sbb
psubusb
inc
pop
jp
mov
mov
fnstsw
movsl
or
xchg
or
aas
sbb
cmp
xchg
xor
jl
int3
mov
xor
std
mov
mov
jne
mov
adc
sbb
and
xor
addr16
add
sbb
pop
jmp
xchg
lahf
jo
clc
adc
pop
int3
lret
dec
clc
mov
aad
sub
sbb
pop
nop
fcmovnb
movsb
jnp
aaa
xor
mov
inc
in
push
out
sbb
ja
and
cmp
jmp
roll
shrl
and
dec
mov
push
aaa
clc
push
out
xlat
add
xor
pop
mov
inc
rcr
cmp
shrl
jo
rolb
sub
scas
inc
outsl
add
movsb
fcmovb
add
add
aad
fwait
adc
in
cmp
mov
fidivs
shll
int3
inc
nop
jmp
icebp
shrb
and
cld
xor
or
pop
rep
sbbb
in
pushf
jb
push
inc
ret
fsts
xor
xchg
cmp
fbld
xchg
jnp
push
adc
ds
xor
cmpsl
mov
in
add
jbe
lock
out
pop
pop
dec
js
popa
scas
and
loope
pushf
loop
adc
sub
mov
scas
fbld
mov
jg
inc
insb
jle
in
and
mov
ja
clc
scas
stos
test
inc
push
popl
and
rcll
dec
loop
cwtl
jg
sbb
ret
jnp
iret
pop
es
pop
sti
fidivl
in
fsub
fs
dec
adc
ret
mov
pop
mov
clc
test
dec
clc
mov
dec
nop
ret
mov
jle
push
sub
push
xchg
adc
std
inc
cli
std
xor
cltd
jo
clc
lahf
popf
jnp
pop
aad
xchg
xor
lret
repz
addb
cmp
sub
add
xchg
sub
inc
bound
xchg
xchg
shll
fistl
inc
and
adc
je
pop
sbb
adc
nop
movsb
aam
loop
adc
push
dec
nop
cmp
mov
xor
movsb
mov
cmp
aaa
rcrb
cmp
sub
test
gs
and
mov
out
data16
pop
fidivrs
mov
pop
cwtl
xor
mov
jge
data16
mov
call
lds
jns
rcrb
cmp
jno
mov
dec
xchg
pop
ljmp
push
popa
push
and
push
push
leave
mov
repz
cmp
push
fucomip
inc
ja
int
and
stc
add
scas
lret
sbb
xor
repz
xlat
adcb
cmpsl
imul
daa
mov
push
or
mov
scas
lds
js
fisubrs
mov
add
push
push
pop
mov
jle
mov
or
lds
mov
xchg
sbb
leave
inc
out
mov
pusha
adc
es
push
mov
jne
test
xor
nopl
fsubrs
dec
sub
adc
incl
add
add
jle
and
sub
xchg
aam
mov
ds
mov
sub
fnstsw
mov
roll
pop
loopne
cli
sub
insb
xlat
or
bound
lds
daa
xor
loope
jb
ret
push
push
mov
out
lret
mov
mov
mov
aam
arpl
push
ss
imul
das
mov
jge
xchg
mull
push
dec
clc
mov
outsl
dec
dec
icebp
inc
or
mov
mov
jno
xchg
push
stos
test
adc
push
rcr
in
mov
dec
mov
sbb
push
mov
ret
pushl
fstpl
dec
lock
or
jb
xor
jl
jge
in
adc
mov
push
mov
test
pusha
push
icebp
mov
xor
daa
out
insl
xor
fsubrp
pop
xchg
jecxz
mov
push
pop
sbb
ljmp
inc
loop
and
mov
jne
shrl
or
xchg
mov
mov
repnz
dec
mov
arpl
cmp
xchg
xchg
cmp
aam
mov
push
pop
repnz
lea
call
push
int3
outsl
enter
xchg
insl
inc
fldl
jle
jo
add
push
dec
adc
and
lahf
sbb
adcb
fstl
jecxz
cmp
shrb
roll
pop
ja
pop
adc
inc
out
loope
jg
fistps
adc
jmp
sub
movups
enter
scas
pop
ror
sub
fwait
mov
int
xor
xchg
pushf
mov
btr
xchg
hlt
jo
cmp
rolb
dec
cmpsl
mov
sbb
repz
es
fdivs
push
inc
inc
dec
fnsave
sub
fldl
movsl
mov
out
add
pop
push
mov
dec
xor
pop
out
push
fcmovb
xchg
push
cmpsl
dec
nop
jge
pop
push
pcmpeqb
sbb
fidivs
lret
push
data16
mov
jge
mov
test
or
mov
sbb
dec
dec
jmp
push
int
sub
cwtl
or
jmp
shll
or
shll
push
inc
enter
dec
js
pop
fmuls
xchg
out
and
sub
inc
insl
test
mov
inc
mov
mov
inc
or
arpl
cmpsb
lret
add
add
fidivrl
and
pop
cmp
test
mov
jmp
cmp
call
pop
test
test
loope
pop
xchg
jle
xchg
ret
and
pop
sbbb
cmp
xor
xchg
pop
imul
and
mov
jp
ljmp
mov
pop
xor
jns
test
outsl
cmp
jmp
mov
inc
add
mov
xchg
pop
cs
sub
cli
dec
mov
popf
jno
scas
ljmp
push
stos
xor
fimuls
push
or
inc
subb
xor
pop
pop
stos
mov
jg
arpl
ficomps
mov
mov
popf
jmp
es
cmp
jae
pop
pop
pop
add
xor
lcall
loop
ret
jno
add
and
pop
mov
push
jg
mov
xchg
rcll
imul
sbb
lcall
lcall
cltd
sub
das
test
cld
and
xchg
add
mov
xor
jge
daa
idivb
int3
pushf
imull
inc
cmp
dec
and
pushf
mov
pusha
dec
xchg
inc
cltd
mov
outsb
push
jnp
fwait
xchg
popf
ja
mov
mov
jmp
dec
adc
leave
xchg
and
sbb
sbb
cltd
pop
or
sub
test
adc
pop
out
xchg
adc
gs
adc
jle
add
jno
cmp
jl
sub
int
das
cltd
mov
imul
cmp
dec
inc
cmp
xor
loope
jmp
or
loopne
pop
cmpl
lods
jge
sbb
out
clc
xor
and
add
fwait
loop
ret
fdivp
dec
pop
push
inc
lods
movsb
lret
es
jl
int
pop
out
dec
mov
in
mov
fwait
stos
cwtl
cmp
pop
inc
int
out
adc
mov
bound
cmpsb
fadds
std
dec
mov
fldl
xchg
sbb
jnp
ret
mov
fsubrs
in
sub
fwait
pop
dec
sti
mov
push
js
js
in
das
jle
aam
sub
out
scas
popf
insb
cs
sbb
mov
std
mov
pushl
les
call
and
mov
sbb
pop
faddl
push
pushf
adc
cli
frstor
cmpsl
shrb
sbb
jg
imul
and
leave
dec
add
call
dec
cltd
push
repz
inc
push
cmp
mov
xor
adc
insl
mov
xchg
xchg
imul
lcall
hlt
pusha
lds
mov
mov
repnz
mov
lea
sub
cld
add
pop
inc
fstpt
xor
out
stos
mov
or
sub
dec
jp
test
cs
sahf
dec
push
mov
xlat
cmp
addr16
xchg
cmp
sub
pop
mov
int
pushf
jne
xchg
add
mov
cltd
mov
pop
addb
out
adc
xchg
sbb
or
aam
cmp
add
or
xchg
ret
std
cmpsb
add
shrb
mov
or
loopne
mov
mov
xchg
mov
jns
mov
outsb
sub
xor
add
mov
xor
aas
arpl
mov
push
dec
pop
lahf
cmp
movsb
notl
test
mov
mov
xor
and
test
aaa
fcoms
test
scas
sbb
imul
sbb
mov
int
shrd
inc
adc
jne
cmpsl
jmp
jmp
das
mov
mov
lret
pop
mov
cmpsb
lea
mov
pusha
movb
xchg
xlat
sbb
mov
cld
ljmp
ljmp
fidivrl
or
insb
add
adc
es
scas
add
rcll
mov
lea
sahf
loop
cmp
inc
adc
and
lret
push
add
ret
jecxz
cmpsl
movsl
push
pop
mov
xchg
mov
pop
or
pop
test
loop
inc
rcll
push
mov
gs
pop
clc
xor
loopne
and
sbb
out
aaa
sub
ljmp
jne
fisttps
pushf
adc
xlat
call
adc
adcl
das
fstps
imul
jl
stos
cmp
popf
mov
push
cmpsb
or
cltd
aad
ds
xor
sbb
aas
adc
rcl
jae
xchg
adc
jne
jmp
std
fiaddl
lods
cli
out
lock
cmp
cmpsb
cltd
fisttpll
les
adc
popa
inc
mov
roll
or
or
mov
jns
daa
lret
addb
nop
cmp
out
pop
mov
dec
sbb
mov
jl
loopne
aad
dec
jmp
loopne
orb
jbe
js
xor
addb
and
outsb
jmp
dec
xor
sub
cmp
std
mov
push
pop
dec
cmp
lods
arpl
inc
xor
out
insl
sub
stos
push
aas
xchg
dec
xor
call
mov
dec
aaa
mov
xlat
out
hlt
das
inc
jo
jg
scas
dec
les
divb
mov
xchg
or
xchg
jge
mov
push
and
mov
cmp
repz
xchg
in
inc
enter
adc
lods
xor
ljmp
outsl
sub
adc
push
iret
in
jb
pop
sub
icebp
nop
rcr
ret
je
stos
lods
data16
dec
jge
call
rcll
inc
jne
dec
fmul
movsb
inc
insb
xor
push
cmp
into
dec
lcall
int
mov
lds
add
or
aad
mov
cli
pop
arpl
cmp
jl
push
jae
jae
push
aaa
sbb
dec
pop
and
rcrl
out
xchg
push
dec
sub
daa
movsb
push
daa
inc
js
or
loope
andl
push
xor
dec
movsl
dec
jle
dec
jmp
aaa
lds
mov
in
push
fwait
xor
mov
call
insl
dec
shlb
or
cwtl
push
pop
pop
cltd
xchg
imul
lret
out
xor
mov
add
stc
cmpb
cltd
ss
fstpl
sbbb
jl
and
sbb
jmp
push
add
test
outsb
fstl
inc
lcall
jno
xchg
mov
sbb
mov
mov
pop
out
imul
sub
add
cmp
enter
roll
data16
mov
cmp
ljmp
xchg
add
ficompl
insb
cmp
es
in
jno
test
push
ficoml
xor
repnz
push
les
adc
jnp
sub
out
or
loop
mov
inc
inc
imulb
xchg
sti
mov
arpl
icebp
test
mov
push
shrb
pushf
out
rclb
push
adc
dec
push
xchg
push
add
sarb
into
xchg
push
mov
lcall
add
sub
inc
push
int
cmc
xchg
insl
mov
mov
out
mov
adc
int3
dec
push
mov
dec
inc
repnz
fs
push
call
outsb
sbbl
lret
lock
mov
mov
cmp
and
xor
jb
fwait
push
cld
mov
fs
push
addb
loope
repz
mov
adc
jg
scas
push
je
rcrl
cmpsb
nop
call
push
xchg
mov
imul
das
lods
es
mov
mov
cmp
pop
ds
pop
xchg
xor
mov
les
mov
mov
dec
std
pop
cmp
or
mov
lea
aad
mov
and
inc
daa
pop
mov
fbstp
and
mov
sbb
mov
jmp
push
mov
ljmp
scas
test
sub
iret
stc
cmp
mov
sub
xabort
stc
jnp
mov
cwtl
adc
sub
mov
fdiv
pop
scas
call
xchg
gs
mov
xor
jge
mov
fcoml
repnz
pop
gs
lret
add
rorl
adc
into
movsb
addb
ret
jns
ret
mov
xchg
arpl
inc
lods
mov
jle
pushf
das
ljmp
xor
push
fisttps
sbb
xchg
sbb
mov
or
cmpsl
sti
jg
pop
push
mov
pop
dec
mov
lret
push
mov
cmp
sbb
aas
add
push
inc
xchg
into
fnstenv
ret
mov
test
pop
lahf
loopne
aas
dec
subb
cld
ds
xor
dec
mov
xor
ret
jne
xchg
shll
push
xor
aas
pop
iret
sub
cmp
loope
lds
cmp
pop
arpl
lds
repz
sbb
lret
sub
insb
insl
negb
ret
mov
adc
das
or
test
sbb
inc
push
add
nop
mov
push
addl
jmp
jge
adc
inc
scas
ret
mov
dec
sbb
jne
lds
jmp
cmpsb
shufps
sbb
inc
push
fwait
cld
jne
add
mov
aas
iret
pushf
out
and
scas
push
sbb
xor
or
push
fwait
enter
sbb
mov
cmp
lods
pop
ret
pop
add
push
mov
and
call
es
cld
shll
cltd
jmp
pop
stc
jne
push
push
mov
mov
adc
fisubl
ret
rol
adcb
rclb
sahf
adc
pop
nop
popf
dec
pushf
in
push
cltd
jns
es
shlb
dec
cmp
xchg
sbb
pop
shrl
jmp
or
in
ret
lret
adc
mov
dec
adc
je
pusha
mov
lcall
mov
mov
jle
dec
push
jg
adc
add
cmp
les
inc
mulb
stos
inc
push
dec
pop
add
push
cmp
lret
mov
or
push
pop
into
sbb
inc
push
dec
push
mov
and
subl
jmp
jecxz
imul
or
cmp
xchg
cmc
sbb
push
add
fs
adc
rorl
sub
test
pusha
cmpsl
cmpsl
xchg
cmpsb
or
fdivr
add
scas
dec
bound
or
ja
sub
arpl
push
sub
or
mov
fcomps
cli
xchg
and
ds
in
inc
mov
and
divl
ljmp
dec
ja
adc
popa
mov
dec
mov
lds
jns
xor
xor
fstps
lods
pushf
xchg
int3
add
sub
scas
or
les
ficoms
adc
mov
jmp
scas
repz
cmpsl
cmpl
jns
push
xorl
add
aas
jge
mov
xor
dec
mov
outsb
lret
jnp
jg
lahf
pop
pop
int3
nop
lea
icebp
aad
aad
andl
sarl
jns
or
mov
adc
push
orb
cmp
imul
inc
mov
xchg
cmpsl
movsl
inc
dec
mov
mov
lods
or
adc
into
test
insl
and
stos
push
dec
loope
sub
cltd
cwtl
hlt
pop
cmp
xchg
in
pushf
dec
xchg
test
xlat
repz
lock
imul
sbb
cmp
das
testb
imul
jg
lds
fnstsw
jae
aad
mov
lret
stos
mov
shll
aam
jmp
xchg
push
shrl
jae
adc
inc
neg
lret
jo
insl
out
xor
mov
mov
inc
add
mov
fidivl
movsl
lods
fmul
outsl
or
bound
jno
and
jecxz
push
add
pushl
jae
leave
push
sbb
push
std
jle
call
cmp
xchg
inc
addb
out
xchg
scas
lock
xchg
sub
and
js
lret
add
lahf
jno
xstore-rng
cmpsl
add
mov
add
cmpl
or
adc
pop
add
or
dec
jg
mov
and
imul
nop
into
sbb
inc
iret
mov
std
nop
adc
inc
push
push
sbb
push
jb
and
adc
mov
in
into
add
ret
mov
dec
hlt
mov
cld
push
pushf
xchg
stos
aaa
push
mov
and
mov
dec
and
mov
and
lret
fstpl
hlt
mov
inc
mov
ret
pop
jae
cmp
push
leave
lret
outsb
pop
ss
stos
addr16
sbb
lret
cwtl
or
mov
and
inc
orl
mov
push
mov
pop
push
push
adc
subl
shl
lock
imul
pop
jg
lret
bound
mov
jge
scas
mov
cld
outsb
movsb
lock
movsl
popa
hlt
push
outsb
andl
mov
or
adc
aas
outsl
into
das
dec
stos
sub
outsl
mov
and
jno
adcl
cmp
stos
std
popa
repnz
and
pop
sub
cmp
lret
mov
adc
mov
sahf
in
xchg
clc
aas
and
scas
add
xchg
fistpll
sub
cli
mov
and
xchg
mov
xor
add
out
adc
das
sbb
pop
ret
mov
xchg
or
mov
push
xor
mov
shl
cvtdq2ps
dec
insb
mov
jns
xchg
push
mov
push
adc
pop
loopne
or
sub
add
hlt
or
add
cld
mov
pop
jnp
push
popf
cmp
shr
dec
sbb
mov
pop
out
aaa
jo
mov
int3
jmp
jne
dec
mov
out
or
lret
sbb
pop
pop
and
dec
cmp
in
add
sbb
std
xlat
push
mov
pushl
mov
and
int3
jns
ljmp
or
mov
loope
dec
movsl
or
push
ret
shrb
scas
pop
pusha
jl
add
xchg
xchg
movsl
sahf
push
jl
jp
cmp
mov
adc
shlb
add
cmpsb
out
jle
outsl
mov
pop
ds
test
jne
fsubs
stos
imul
dec
cli
std
inc
ret
dec
inc
xchg
sub
mov
sar
jl
adc
or
mov
or
shr
mov
clc
sub
lcall
sub
mov
pop
pop
popf
int
sbb
mov
sti
mov
xchg
out
pop
sub
int3
add
ljmp
out
sub
ljmp
into
or
js
fistps
xchg
mov
pop
mov
mov
fcoml
cltd
add
testb
or
xor
cmp
pop
mull
lret
fcompl
rcr
jb
dec
pop
lds
out
insl
adc
mov
arpl
fnstcw
sub
pushf
sub
dec
and
lods
xchg
or
add
jno
or
and
cld
push
pushf
ss
sbb
into
bound
push
int3
xlat
loopne
and
sub
xchg
jge
test
xchg
xchg
fldl
jne
xor
mov
jb
mov
scas
dec
fisttps
in
lret
ss
ljmp
pop
pop
mov
loope
push
inc
movsl
mov
jno
aaa
dec
xchg
lcall
push
shll
pop
mov
dec
inc
mov
cld
xchg
add
aaa
lret
inc
ficoms
adc
jbe
push
lock
iret
mov
mov
shll
or
sub
dec
out
imul
mov
cmp
fstpt
fisttpll
or
mov
stos
lret
movsb
pop
push
fsubrl
push
xorl
mov
testb
xlat
dec
ljmp
mov
cmc
sub
sub
lea
pop
shr
sbb
js
push
lret
ss
xchg
mov
jb
test
mov
add
rcl
adc
outsl
mov
xor
inc
xchg
adc
or
xchg
fidivrs
insb
scas
lret
ret
dec
nop
jno
scas
in
push
mov
popa
cmp
int
push
or
mov
inc
rcll
push
lahf
jg
fldl
cs
loope
fwait
mov
jle
mov
or
dec
das
insl
mov
xorb
sahf
mov
dec
loope
and
lods
les
mov
ljmp
dec
sub
or
shlb
push
test
sbb
popf
xchg
xchg
rorl
daa
pop
mov
pop
aad
lods
imul
add
adc
xor
mov
adc
cmpsl
daa
jecxz
sarl
xchg
mov
cs
daa
mov
sbb
dec
sbb
push
fiadds
insb
jle
rcll
jne
stc
push
pushf
jbe
mov
inc
mov
jmp
or
rclb
jecxz
push
lea
xchg
test
aam
aas
hlt
test
fs
dec
mov
mov
shll
stos
sbb
cs
jb
inc
xor
nop
pop
add
imul
or
jge
dec
hlt
mov
inc
stos
test
jnp
imul
dec
cmp
mov
das
gs
out
mov
dec
mov
call
cmc
pop
and
add
cmp
ret
pop
push
sub
push
xor
insl
pop
jp
jo
mov
mov
inc
push
or
push
es
or
push
in
stos
lret
adc
xchg
in
xchg
or
sbb
leave
xchg
jbe
inc
inc
lret
stos
in
mov
xor
cmc
rcrb
fisubrs
push
lods
mov
nop
jns
scas
lds
iret
jnp
jl
xchg
xor
mov
or
sbb
mov
and
sub
outsl
fadd
addr16
inc
call
pusha
imulb
sbbb
lock
stos
subb
push
lcall
xchg
xor
fstpt
pop
lret
in
mov
incb
mov
mov
test
iret
pop
push
es
cs
and
adc
cmp
sbb
mov
adc
out
pop
andb
loopne
sub
push
add
mov
int3
cli
xor
stos
cmp
mov
jle
xchg
mov
sti
sbb
in
push
inc
aam
pop
sarl
sub
pop
sub
mov
imul
lds
les
in
pop
sarl
int3
jb
mov
push
and
mov
adc
pop
clc
adcl
mov
les
mov
pop
in
movsb
push
push
jge
xor
bound
in
sbb
sub
xor
xor
es
lret
sti
xchg
outsb
inc
enter
lea
aas
ss
testb
gs
push
xchg
mull
lahf
lods
push
and
inc
or
or
push
fidivrl
adc
mov
jmp
xor
add
mov
in
inc
jns
inc
neg
xor
movsl
out
and
mov
ss
xchg
dec
pop
push
lock
adc
je
popf
or
xor
stc
and
or
push
cmp
pop
lahf
cmp
add
cmp
adc
mov
je
add
pop
pop
nop
in
pushf
fisubl
mov
mov
push
test
add
call
adc
das
sub
fsts
and
cmp
jo
jge
mov
lcall
cmp
sub
mov
xor
mov
push
aad
and
add
popa
sub
movsb
adc
cmp
push
cmpsb
mov
nop
movsb
mov
push
lea
push
shlb
inc
shlb
pop
cltd
aam
loope
mov
sarb
jo
fmuls
mov
xchg
popa
rclb
cmp
fdivs
dec
sarb
cmpl
jmp
imul
gs
das
cmp
push
fisttpl
xchg
add
cmp
std
sti
movd
js
stos
cltd
or
movsb
fdivs
jmp
xchg
inc
out
adc
das
jp
and
pop
sbb
mov
xchg
aas
imul
rorl
push
cmp
jg
filds
push
out
add
pop
and
stos
lds
aas
inc
mov
cwtl
insl
in
jmp
inc
push
add
int
cmpsl
push
icebp
lods
xchg
dec
mov
adc
dec
mov
dec
es
lcall
ret
jecxz
das
out
imul
push
in
cmp
loop
and
outsb
dec
adc
loopne
jne
jl
outsl
or
sub
dec
test
fstps
pop
dec
pop
mov
inc
into
shll
mov
mov
or
pop
pop
jg
scas
mov
cwtl
sti
mov
test
dec
fs
in
add
dec
int
adc
pop
and
sarb
pop
cli
mov
xchg
out
or
jmp
push
inc
lods
or
sub
push
cmp
test
ja
stc
mov
pop
mov
aaa
pop
adc
loope
iret
imul
or
imulb
rcrb
dec
xor
insb
adc
inc
repz
test
xor
loop
xor
pop
mov
pop
jo
cmp
dec
testl
je
std
sbb
cmpsl
mov
mov
mov
or
cmpsl
and
mov
push
sar
jge
and
dec
adc
insb
loop
xchg
or
idivl
test
jae
adc
cmp
fdivl
add
gs
inc
push
or
mov
aad
cmp
insl
cs
mov
repnz
inc
mov
cmp
jno
push
lcall
stc
jg
in
lods
pop
adc
xlat
pop
in
jo
cmp
jg
mov
cld
clc
je
out
mov
sarl
jo
pushf
out
push
mov
lods
aaa
adc
lods
iret
ret
mov
push
mov
mov
sbb
shl
out
scas
int
leave
mov
fcomps
dec
xchg
scas
out
ljmp
lods
cmp
mov
ret
mov
inc
cmp
inc
lahf
ret
mov
ret
jecxz
cmpsb
jge
mov
adc
rclb
dec
bound
inc
ljmp
pop
push
or
sbb
xchg
xorb
mov
pop
mov
or
ljmp
sbb
inc
or
mov
movsb
fcmovnb
imul
and
leave
insl
xor
adc
mov
push
cltd
mov
sbb
js
rolb
jge
ret
cld
inc
scas
ret
lea
lock
popf
xchg
inc
sbb
stc
xor
movsb
insb
sbb
push
in
jecxz
cmp
int
flds
mov
pusha
scas
aam
ss
lfs
mov
mov
fcomi
jp
dec
insl
loope
adc
sbb
or
xchg
lock
aaa
in
pushf
shlb
lds
aaa
xchg
sub
adc
sbb
lea
adc
jmp
lods
pushf
cmp
or
popf
jmp
mov
ljmp
xor
and
sub
sub
inc
xor
call
clc
scas
or
adc
mov
es
lret
les
inc
mov
imul
pop
adc
push
mov
and
sbb
std
jp
movsl
ss
jb
fcmovb
cli
lods
in
or
pushf
dec
jae
adc
lret
sarl
ficomps
add
roll
es
sub
test
sysenter
out
mov
xor
mov
aas
xchg
iret
dec
add
push
xchg
push
or
inc
icebp
sbb
div
inc
insb
popa
cwtl
pop
and
pop
pop
out
scas
add
push
cs
sub
dec
mov
mov
cmp
jo
dec
sub
fwait
stos
adc
inc
iret
push
mov
fcmove
and
stc
sbb
and
aas
sbb
mov
adc
cmp
jg
test
call
pop
inc
mov
je
loope
imul
in
mov
scas
dec
rcrb
xchg
mov
mov
xchg
mov
xchg
cli
in
shrb
xor
repnz
mov
out
jg
mov
cli
and
and
or
jmp
mov
xchg
insl
mov
ret
ret
shr
aad
loop
dec
pop
mov
out
xchg
push
mov
popf
sti
cld
xchg
sub
lods
mov
insl
es
xchg
xlat
cmp
sahf
in
cs
fidivs
mov
xlat
pushf
xorl
pop
mov
lahf
lret
mulb
mov
lea
incb
or
dec
mov
loope
clc
inc
add
cwtl
mov
aaa
mov
mov
fsubr
jge
imul
js
test
pop
push
pop
nop
scas
nop
aaa
data16
or
adc
add
xchg
imul
mov
mov
sub
sub
dec
fidivs
subl
incb
adc
mov
add
pusha
in
mov
cli
repz
fwait
aam
repnz
andl
push
adc
test
idivb
lock
adc
movsb
nop
lds
cmp
push
aam
sub
sbb
mov
mov
mov
mov
jne
pop
add
ret
inc
out
and
sub
sub
inc
test
repnz
roll
addb
and
iret
jmp
xchg
adc
mov
movsb
mov
pusha
call
call
xor
adc
pop
jb
mov
push
xchg
lea
mov
aaa
inc
clc
cs
pop
mov
divb
adc
mov
mov
loop
pop
mov
insl
dec
jg
cwtl
dec
sbb
mov
pusha
mov
add
movsl
or
pop
push
sub
aaa
mov
fcmovbe
adc
out
test
mov
dec
cltd
add
pop
mov
outsb
mov
movsb
mov
cld
dec
rcrb
stos
in
sub
enter
lods
mov
mov
hlt
jge
xlat
dec
jb
rorl
pushl
jge
adc
testl
xor
data16
testl
mov
pop
or
mov
arpl
dec
inc
mov
mov
aaa
ret
sbb
or
add
sbb
and
cli
imul
les
mov
loope
out
sbb
in
nop
lcallw
arpl
jno
mov
lahf
jl
jno
xchg
enter
sarl
xchg
pushf
mov
or
popa
sahf
xor
mov
loope
cs
std
stos
int3
aam
int
orl
cwtl
sbb
pop
adc
dec
xchg
mov
lcall
andb
push
pop
pop
and
or
dec
dec
std
jg
fmuls
push
xor
jb
inc
lods
cmp
xchg
js
mov
pop
dec
adc
mov
and
shrl
test
shl
into
pop
adc
mov
xorb
pop
or
leave
or
out
add
xchg
into
inc
jns
and
filds
pop
jne
aas
dec
add
mov
sub
es
and
mov
add
xchg
xor
inc
fadds
mov
sub
aaa
cltd
and
sbb
imul
stos
cmpsb
jmp
stc
or
or
xor
and
test
decb
push
or
test
mov
fistpl
push
outsb
add
test
out
sarb
push
fisubl
sub
stos
out
and
gs
into
jp
dec
mov
mov
leave
sar
div
xchg
inc
ja
jae
push
movaps
or
or
out
mov
rcrb
cmc
pop
adc
cld
movl
out
ja
xchg
stc
aaa
mov
xor
sub
stos
xchg
adc
inc
call
ljmp
sbb
pop
xor
jecxz
xchg
or
pop
es
inc
inc
jle
hlt
lods
push
jno
mov
ret
xchg
pop
mov
bound
repz
pushf
fisttpl
jecxz
dec
add
mov
sub
sahf
push
frstor
add
adc
ficomps
stos
rolb
mov
fsts
mov
insb
sbb
outsb
mov
jp
pop
dec
and
sbb
mov
or
xor
cmpsl
jl
and
xor
lea
mov
push
push
xchg
xchg
mov
pop
cmp
adc
add
mov
push
hlt
rcrl
ficomps
jecxz
jno
out
or
mov
arpl
mov
into
ja
lahf
mov
or
jp
sub
fcoms
sbb
ds
add
jae
jnp
sub
gs
push
jne
cmp
int
int
fmuls
cmp
pop
test
cmpsl
repnz
cmpsl
lea
xor
lret
in
xor
mov
subb
icebp
stc
push
rep
aaa
arpl
pop
xchg
mov
add
in
std
pushf
gs
inc
inc
push
hlt
movsb
xor
fisubrl
jns
sub
andl
enter
and
sahf
and
adc
adcb
sub
insb
cmp
ret
dec
mov
movsb
rclb
sbb
xor
mov
adc
sub
or
into
mov
or
push
pop
pusha
cmp
mov
scas
xchg
xchg
lret
jne
or
sti
sub
lahf
sbb
push
je
cmp
mov
push
ds
dec
gs
inc
mov
and
xchg
lods
aam
and
cmpsl
xor
cld
jge
insb
add
les
loope
in
cwtl
push
inc
and
outsl
push
std
insb
inc
lds
inc
imul
mov
xchg
push
inc
push
xchg
push
jne
mov
and
mov
pop
out
jmp
fldcw
clc
push
jmp
xor
xchg
adc
sub
mov
jb
jle
popa
mov
push
mov
mov
aam
dec
adc
push
js
out
fcomps
jmp
xchg
dec
out
popf
cwtl
cmovbe
xor
in
lods
in
mov
jp
fsub
mov
xchg
mulb
jns
test
mov
jmp
add
sbb
ret
movsl
sub
mov
add
out
les
cmpsl
out
inc
cmp
mov
pop
cmp
jbe
lcall
out
scas
jb
jl
lods
std
popa
adc
fwait
mov
add
xchg
cmc
bound
pusha
pusha
xchg
insl
js
aad
and
push
push
out
mov
inc
add
mov
lret
mov
sti
imul
call
pop
fcmovnb
ficomps
rcrb
jns
loopne
call
sub
insl
int
insb
jp
jle
in
loop
jae
and
sarb
fcom
bound
xor
lea
pop
jle
pushf
jge
xor
xlat
mov
inc
jle
sahf
int
or
adc
cmp
out
lods
cmp
mov
adc
sti
xchg
xchg
lock
das
cmp
ret
lea
daa
or
pusha
add
int3
aad
jae
adc
lcall
or
sbb
fnstenv
mov
push
push
mov
adc
inc
cltd
jns
mov
fidivrl
stc
xchg
std
lahf
rep
shll
or
cmpsb
xchg
movq
sub
or
scas
push
call
jge
jl
icebp
scas
cli
shrb
jecxz
addr16
inc
icebp
mov
xor
sbb
adc
mov
fucomi
or
pop
sbb
sahf
pop
xchg
xchg
inc
adc
std
in
push
int
xchg
xor
fisubl
roll
ficoms
rol
mov
ss
lahf
push
dec
xchg
clc
push
mov
pop
mov
imul
push
loop
jp
xor
xchg
push
mov
test
call
test
loope
orb
add
mov
jecxz
push
mov
mov
in
jae
jecxz
mov
rolb
insl
push
lds
pop
mov
add
push
mov
mov
daa
pop
jp
xchg
fnop
pop
adc
mov
inc
dec
loope
mov
push
sbb
mov
popf
mov
out
lods
inc
push
add
inc
in
inc
ds
aam
hlt
fistps
clc
lret
test
insb
outsl
mov
test
jb
inc
insb
jbe
xlat
insb
jmp
in
sbb
dec
or
in
scas
pop
lret
popa
push
jb
jge
daa
repz
dec
loopne
mov
mov
xor
adc
incb
inc
sub
sub
and
jb
ret
arpl
in
lock
pop
mov
lock
cmp
cmp
jmp
and
cmpsl
adc
lock
pushf
jne
into
mov
fidivrl
inc
jg
scas
and
shrb
inc
mov
sub
lret
mov
arpl
jl
or
into
mov
clc
repnz
push
pusha
push
in
sub
lds
and
loope
arpl
loopne
cmc
cmpsl
gs
add
outsb
add
icebp
jnp
sbb
ss
mov
subps
lcall
lret
xor
aaa
push
adc
jae
les
mov
adc
fnsave
fs
sbbw
push
ret
test
sbb
mov
stos
fwait
lods
xchg
test
out
fisttps
push
adc
add
fisubrs
xchg
dec
jecxz
das
mov
inc
addr16
cmp
and
dec
orb
xor
mov
shrb
cwtl
push
mov
and
inc
cmpsl
mov
stos
rolb
rorl
xor
dec
movsl
fcmovnu
into
sub
pop
mov
lahf
stos
hlt
iret
adc
dec
aaa
insb
aam
addr16
adc
jnp
and
jmp
aaa
dec
ljmp
cwtl
fstl
sbb
gs
rorl
xchg
xchg
adc
stos
ss
dec
shll
mov
into
sbb
jp
loope
add
add
add
jo
repz
pop
inc
enter
scas
mov
sbb
fwait
mov
or
insb
inc
adc
popa
jae
adc
add
mov
scas
inc
jo
lock
pushf
sub
push
xchg
movsb
pop
dec
inc
jg
inc
sahf
mov
std
sub
test
rcll
cmpsl
lods
pop
jnp
lods
fnstenv
int
jmp
iret
mov
sbb
cmp
inc
bound
lahf
mov
jno
std
push
in
push
and
xor
gs
sbb
mov
fmul
jmp
enter
scas
ret
mov
xchg
pop
mov
lea
push
mov
cmp
in
jb
cwtl
ror
sub
test
int3
xor
fisubs
test
inc
inc
cpuid
cwtl
pop
aam
es
pop
xchg
cmpsl
vpmulhuw
es
jmp
inc
dec
xor
idivl
xor
mov
xchg
neg
in
inc
scas
scas
aad
xchg
cltd
sub
dec
loope
jle
jge
mov
push
mov
mov
ds
xor
jbe
cli
push
pop
xorb
lea
and
addb
or
lock
fildl
pusha
cltd
inc
cmpsl
scas
aad
xchg
pop
dec
out
xchg
push
fsubr
inc
pop
xchg
or
rol
cwtl
and
or
mov
dec
stos
cwtl
cmc
ret
cli
adc
leave
int
mov
add
loope
sub
lods
or
push
add
add
js
loope
out
aaa
bound
pop
and
pop
mov
sahf
shrl
subb
loope
mov
idiv
arpl
inc
insb
nop
dec
test
decl
sub
sti
mov
mov
out
enter
pop
test
ret
cmp
cs
jle
jg
dec
add
mov
ret
fcoml
jge
aad
xor
lret
cmp
pop
xchg
pusha
int3
xlat
xchg
shrl
lahf
pop
dec
ds
inc
arpl
xchg
jecxz
dec
push
nop
cmp
mov
dec
daa
cld
xor
mov
sub
dec
xlat
out
adc
fdivr
out
cmp
pop
xchg
xor
mov
adc
arpl
pop
outsb
mov
std
repnz
mov
loopne
xor
jno
push
in
mov
notb
lcall
mov
out
adc
pop
push
dec
in
fnstcw
test
into
movsl
pop
cmp
push
add
sti
sbb
sbb
fbld
jp
sbb
rcl
insl
adc
push
bound
fcoms
cmp
sbb
aaa
mov
imul
sub
jno
das
sbb
mov
ret
or
shlb
in
repnz
movsl
adc
out
push
inc
leave
fcoms
pop
dec
and
push
sub
fs
push
incl
sub
cwtl
push
sub
jno
xchg
shlb
clc
add
push
stos
jno
sbb
pop
adc
pop
or
mov
and
insb
cmp
mov
mov
idivl
xchg
outsb
adc
add
fs
js
mov
mov
xor
add
test
dec
inc
sbb
insb
mov
mov
cmp
mov
enter
ds
push
jge
jl
dec
daa
clc
pop
mov
sub
push
cmp
add
addb
clc
mov
and
iret
xchg
push
scas
adc
push
adc
or
mov
inc
cmpl
sbb
int3
imul
lcall
js
sbb
in
js
ret
pushf
cmp
push
inc
roll
mov
js
into
adc
adc
pop
cmp
lds
addl
mov
cmp
faddp
xchg
mov
xlat
add
jp
lds
add
bound
or
pop
lods
divb
mov
pop
ret
das
cmc
adc
sbb
mov
cmpsb
stos
roll
cli
push
shrl
fcoml
mov
loopne
cwtl
sub
or
mov
adc
sbb
scas
jae
xchg
xor
or
sahf
cmp
jg
cmpsl
jae
daa
aaa
and
jge
jecxz
mov
dec
fdivr
popa
add
call
jp
outsl
sbb
fisubl
push
cli
rcrl
in
push
shrb
mov
mov
fsubr
lock
imul
xchg
bound
ret
or
cmp
aaa
cmpl
int
or
and
icebp
in
xchg
adc
mov
and
shrb
and
test
mov
cltd
xchg
fdivrs
xor
lods
rcr
addr16
movsb
bound
cwtl
dec
daa
add
mov
mov
into
cmpsb
mov
sbb
push
mov
in
add
lods
push
ja
fs
das
bound
in
sti
pop
jge
mov
sbb
xchg
dec
push
mov
hlt
add
lret
scas
cmp
int3
sub
sub
or
xor
rcll
test
ss
push
es
scas
sahf
mov
outsb
and
mov
push
mov
xchg
shlb
pop
mov
pushf
aad
cmp
push
push
hlt
sbb
pop
xor
loop
stos
pop
loope
jmp
jecxz
mov
das
outsb
jno
popf
pop
sbb
jno
outsl
mov
pushf
data16
xchg
add
sub
sti
gs
adcb
inc
out
sub
ss
shlb
lahf
mov
data16
dec
ss
cwtl
and
xor
xchg
cli
mov
in
and
push
inc
jne
pushf
push
int3
adc
jp
mov
push
jns
mov
cs
adc
dec
rcrb
lahf
xchg
stos
cld
adc
mull
sbb
mov
hlt
hlt
sbb
sbb
insb
arpl
or
push
xchg
movsl
rolb
test
loope
add
cmp
repnz
rcrb
mov
inc
mov
rcll
adc
mov
dec
push
ds
sbb
lods
aas
push
mov
filds
adc
push
scas
pusha
push
dec
sbb
push
cmp
stos
call
xor
icebp
mov
xor
jg
fistl
sub
orb
adc
or
adc
mov
push
fnsave
adc
pop
jmp
jno
rolb
xchg
cmp
aaa
fwait
mov
ficoml
test
sub
sbbb
cld
push
xchg
pop
loop
dec
cld
pushf
cmp
rcrl
insb
or
adc
push
rcl
or
adc
fdivrl
cmp
clc
push
stos
cmp
ret
insl
pop
mov
add
mov
mov
lock
sub
das
pop
scas
push
mov
mov
shrb
dec
loope
aas
jnp
loop
pop
inc
xchg
mov
test
mov
bound
dec
mov
scas
call
cmc
push
pop
leave
inc
lock
pop
iret
enter
sar
push
jmp
neg
cmp
jne
lock
or
mov
and
push
jl
daa
adc
adc
les
jo
imul
data16
je
xor
mov
push
mov
cmp
fdivrs
mov
js
decl
dec
pop
loope
sbb
sahf
add
ss
or
popa
inc
icebp
jle
clc
adc
jnp
ss
ror
jo
loope
mov
daa
add
dec
inc
push
push
arpl
repnz
jle
push
nop
add
sub
jg
jmp
xchg
push
mov
pop
cmp
data16
xchg
mov
out
adc
stos
call
push
xor
xchg
jecxz
mov
xchg
mov
inc
cltd
or
les
sbb
dec
dec
add
sbb
mov
das
mov
add
lret
xchg
pop
sarl
sbb
cmp
pushf
dec
push
int
scas
jbe
sahf
jbe
inc
push
mov
mov
das
mov
xor
insb
mov
insl
add
xchg
subl
mov
push
pop
sub
ja
add
lods
dec
sbbb
mov
jl
xlat
or
xchg
decb
and
push
mov
xlat
or
test
das
xchg
mov
xchg
pop
jae
cmpsb
mov
lods
test
bound
push
test
cmp
inc
or
ret
xchg
fimull
ss
mov
test
mov
sbb
imul
pop
int3
sub
ds
mov
inc
popa
popf
adc
push
orl
jns
and
push
leave
pop
fmull
jmp
cmp
pop
xor
mov
icebp
lods
mov
das
jb
pmaddwd
int
xor
adc
mov
ja
fistpl
jecxz
push
lahf
insb
mov
sub
add
push
loop
push
call
inc
jbe
cmpsl
mov
push
inc
cmp
mov
mov
xorl
xchg
xlat
shrb
xchg
int3
insb
xchg
cld
and
jecxz
stos
inc
and
jb
stos
mov
enter
jmp
adc
push
mov
iret
fldcw
jno
cmp
push
sbb
les
mov
sbbb
pop
dec
pop
ja
inc
mov
dec
leave
push
das
mov
leave
aaa
sub
or
adc
out
mov
lods
xchg
mov
cld
dec
fnstenv
mov
push
bnd
cmp
popf
cmpsb
pop
cwtl
add
cli
mov
or
out
test
cmc
adc
sahf
dec
js
shlb
mov
aas
enter
rcl
stc
sbb
enter
loopw
fnsave
jb
sub
addl
push
pop
pop
divb
jno
pop
cmpsb
cmp
fiadds
add
fstl
mov
xor
cwtl
sbb
push
js
pop
ret
sbb
ss
lret
dec
jl
adc
clc
sbb
aad
pop
rolb
sbb
or
mov
ss
sbb
sti
and
movsl
jbe
movsb
add
add
adc
push
shr
mov
fs
inc
cmova
mov
out
scas
pushf
mov
mov
loopne
aaa
test
pop
jle
mov
test
mov
xor
cmp
adc
outsb
or
gs
hlt
add
push
sub
xor
sti
mov
fisubl
test
adc
enter
icebp
loope
push
mov
pop
jae
and
addr16
ljmpw
mov
push
sub
and
push
xlat
lods
loopne
mov
scas
push
arpl
lcall
sbb
loope
or
pushl
xlat
movsl
sub
sahf
out
stos
push
rcrl
stos
dec
push
xor
xchg
insb
sbb
pop
xor
jbe,pt
sub
cmp
fwait
adc
push
call
xor
xchg
sub
mov
jg
pop
sub
and
sub
js
sub
inc
in
jo
std
repnz
push
or
loop
sahf
or
dec
aam
fisubrs
cmp
mov
dec
push
or
and
outsl
lods
and
jne
loopne
push
into
scas
pop
adc
ret
out
mov
mov
add
sub
clc
push
push
xlat
push
pop
ja
repz
insb
inc
push
sub
movsb
dec
xor
mov
popa
inc
sbb
push
and
mov
mov
mov
out
dec
out
inc
gs
mov
lock
rcl
repnz
xchg
and
cmp
add
fisubl
jnp
mov
mov
and
push
jno
ret
divb
adc
xchg
push
sub
ja
fsubrp
xchg
cld
inc
xor
mov
push
mov
fs
int
ret
fdivrl
jge
cwtl
out
ds
lea
fiaddl
sub
mov
xlat
or
push
jo
ljmp
popa
cmp
push
add
aas
movsb
daa
outsl
xchg
jge
adc
mov
push
push
cmpl
push
and
push
push
pop
repz
fsubrs
fisubl
aad
mov
adc
jmp
jge
xchg
or
outsb
call
lds
xchg
or
push
ljmp
scas
adcl
ss
dec
pop
dec
stos
das
fistl
lret
or
fcoml
jae
int
dec
cmp
sbb
testl
lock
cld
dec
add
cwtl
xchg
cwtl
and
mov
jg
sbb
fcmovnu
push
add
pop
cmp
add
sbb
aad
out
mov
call
and
sub
adc
push
arpl
movsb
push
inc
in
and
gs
push
loope
xor
stos
popf
jbe
add
mov
aam
scas
sbb
inc
into
movsl
js
imul
aas
mov
test
subl
push
and
bound
dec
scas
dec
or
sub
pop
mov
pop
fwait
ret
xor
dec
loopne
mov
out
sub
mov
mov
mov
cmp
jge
jo
test
adc
jge
lods
fbld
inc
mov
cmp
and
push
cmpsl
pop
data16
out
mov
cmp
cmpsb
sbb
scas
lods
out
push
add
xchg
pop
insl
or
add
mov
jg
sbb
dec
mov
sub
aad
jb
pop
int3
push
dec
xor
movsl
decb
xor
mov
mov
mov
data16
jnp
cli
cltd
int3
mov
outsb
loopne
pop
cmp
mov
inc
xchg
shlb
mov
shll
cli
pop
mov
push
jmp
xchg
pop
lcall
pop
fdivrl
jl
dec
test
std
dec
sbb
jle
cmp
out
inc
push
popf
inc
mov
iret
push
pop
xchg
idiv
pop
jg
jmp
dec
lods
jmp
fs
adc
or
in
loope
xchg
xchg
sbb
lahf
adc
inc
das
jle
loopne
sti
cmp
add
fdivr
xchg
dec
roll
jbe
jge
adc
or
or
sub
pop
call
mov
cmp
mov
data16
xchg
mov
jnp
pusha
loopne
leave
xor
fs
repnz
cltd
fwait
scas
pop
lret
xchg
and
adc
mov
in
xor
iret
and
icebp
in
sub
adc
icebp
cwtl
call
dec
cmpb
adc
pop
xor
pop
sbb
in
stos
rclb
ret
es
jo
xchg
mov
dec
or
cmp
sti
pop
jecxz
jp
cmp
xorl
test
mov
jl
enter
movsb
shll
cmp
jge
mov
pop
gs
sub
push
push
pop
testb
and
xchg
push
or
lret
mov
sahf
dec
mov
pop
push
das
or
pop
jae
das
in
ljmp
shl
add
repnz
push
jbe
out
sub
xchg
mov
mov
jnp
lock
loopne
adc
data16
mov
xor
pop
cwtl
jae
clc
mov
jp
sub
sub
aaa
cmp
into
test
fdivs
outsl
add
orl
pusha
loop
push
adc
push
mov
dec
leave
lret
gs
inc
ljmp
jg
cmp
cmp
pop
lea
and
sbb
mov
aas
fistps
inc
mov
sar
xchg
fbstp
adc
pop
sub
adc
mov
aaa
mov
sub
out
inc
sar
js
out
scas
pmaxub
pop
mov
pushf
mov
movsb
test
rolb
in
or
icebp
mov
ret
inc
test
loop
mov
call
fistl
cs
xchg
pushf
notl
std
fnstsw
lds
and
pop
and
hlt
cwtl
loop
jmp
test
mov
mov
push
lret
test
lods
nop
jae
and
cwtl
jmp
int
fisttps
or
int
jge
fnstsw
aas
into
arpl
scas
mov
outsl
sub
fs
cmc
jbe
push
ds
pop
scas
cmp
inc
fsubl
cmpsb
les
sar
gs
mov
xlat
xchg
idivb
push
mov
repnz
in
push
cmp
js
pop
cld
add
mov
push
jg
jae
jge
stc
add
bound
loope
pop
das
push
jo
ja
jl
pop
mov
pop
xor
lret
cmp
fs
cltd
mov
cwtl
sbb
dec
out
mov
nop
popa
int
jge
add
fwait
or
mov
push
inc
lret
idivl
addr16
pop
cmp
imul
scas
lds
xchg
test
xor
jmp
dec
in
sub
jae
pop
scas
push
test
aad
pushf
jno
jge
mov
sub
movsl
sbb
repnz
mov
mov
pop
sbb
int3
inc
aas
xchg
movb
dec
std
scas
leave
stos
xchg
xor
movsb
orb
sub
ret
mov
daa
nop
jecxz
clc
jns
stc
lods
lea
jp
cmp
jne
jge
sti
dec
scas
xchg
xchg
xor
sbb
in
outsb
mov
lea
mov
push
mov
and
pop
mov
sti
lea
xchg
mov
adc
jle
test
call
sub
stos
mov
lea
sbb
inc
dec
cmp
mov
xor
lcall
inc
sub
iret
jo
cwtl
push
cwtl
lret
bound
pop
dec
fcompl
cld
push
mov
pushf
jae
pop
shll
divb
mov
inc
push
xchg
or
pop
cltd
enter
rorb
pop
lahf
rorb
sub
int3
mov
inc
add
cmp
xchg
rorl
xchg
mov
adcl
or
int
cltd
sbb
out
in
xchg
add
push
repnz
loope
mov
mov
adc
push
jecxz
fimull
add
xor
ja
and
je
in
stos
out
outsb
ret
test
call
arpl
push
addr16
imul
dec
xlat
mov
in
ret
sbb
xchg
push
mov
scas
mov
lods
or
fidivl
xchg
adc
insl
jne
stc
dec
xchg
mov
loope
jge
je
data16
stos
pusha
inc
adc
cmpb
inc
icebp
mov
jns
dec
xchg
call
lret
sub
aad
xchg
mulb
sbb
movsl
pop
or
cltd
add
sub
popf
insb
push
mov
dec
push
xchg
dec
and
clc
jno
imul
fdivrl
and
sub
mov
push
add
stos
bound
cld
movsl
or
out
push
ds
mov
lahf
fnsave
rclb
lods
xchg
call
enter
mov
pop
adc
scas
ljmp
lods
clc
and
and
cwtl
hlt
mov
mov
mov
icebp
mov
mov
sub
lea
insl
je
gs
addr16
mov
subb
test
mov
sub
inc
dec
add
cmp
daa
jb
jp
lea
stos
mov
in
out
test
and
fs
dec
movsl
pusha
cld
inc
mov
ja
enter
xchg
and
loop
imul
repz
mov
dec
test
mov
adc
inc
scas
xchg
adc
push
addr16
insb
cltd
pushf
rcll
add
pusha
movsb
sub
sbb
lods
pop
mov
xchg
mov
mov
loop
sub
pop
add
mov
cmp
icebp
mov
out
add
ds
cltd
xor
ret
ss
mov
adc
movsl
testl
mov
loop
inc
jge
daa
cmp
subl
cmp
jae
xlat
jno
imul
filds
sbb
or
dec
push
push
outsb
pop
or
cwtl
or
xchg
ss
mov
fs
mov
cmpsb
into
sub
scas
lret
outsl
jg
ja
push
dec
xchg
xchg
in
inc
dec
pop
imul
rsqrtps
sub
ljmp
xor
xor
test
push
arpl
pop
xor
sti
or
xor
outsb
stos
into
shll
test
xchg
dec
outsl
or
sbb
movsb
xchg
push
in
xchg
mov
add
mov
movsl
scas
cmp
cmpsl
mov
std
in
push
pop
nop
pop
in
push
and
cmp
std
loopne
aam
movsb
lods
mov
mov
and
test
imul
stos
jecxz
lea
dec
xlat
fst
enter
sbb
movsb
adc
push
dec
test
imul
inc
adc
cmp
repz
clc
add
fadds
mov
cmp
inc
push
test
xchg
icebp
rcrl
add
pusha
pop
test
jo
push
sub
push
stos
icebp
push
in
pop
push
cli
add
xor
add
mov
add
or
leave
les
lock
sub
cli
adc
mov
mov
jg
dec
fmuls
stos
xor
sub
add
test
xchg
pop
rclb
addr16
inc
stc
and
mov
cmpl
fistps
mov
xor
clc
and
sti
add
loopne
pop
mov
mov
fidivl
inc
or
push
mov
popf
leave
fidivl
sub
adc
xchg
dec
rcll
jp
push
int3
jp
ds
rclb
sti
out
into
daa
scas
sbb
xchg
mov
jle
dec
loopne
add
push
mov
cmp
out
adc
adc
leave
jo
push
ret
stos
mov
cmp
shll
in
ret
inc
out
frstor
ret
imul
out
inc
lods
nop
or
pusha
scas
mov
xor
sub
pushf
rorb
add
mov
push
and
fisubs
cmc
mov
sub
int
pop
xchg
inc
xchg
rol
nop
sub
xor
jmp
cmpw
inc
test
sub
jnp
xlat
mov
lods
xchg
sbb
or
lret
iret
test
sbb
dec
xchg
mov
pusha
mov
pop
mov
mov
jecxz
mov
mov
mov
or
test
pushf
jl
and
cli
popf
nop
and
jne
cltd
ret
lret
ss
loopne
sbb
ds
xor
lea
mov
sub
movsl
and
jae
fldt
push
cmpsl
mov
or
mov
and
lret
dec
cmp
xchg
or
ret
mov
scas
out
shl
hlt
mov
mov
push
scas
in
aas
mov
push
fistpll
jnp
lcall
sti
lods
imul
bsr
stc
or
sbb
jae
mov
dec
or
mov
flds
push
xchg
sbb
pusha
mov
aaa
test
pop
mov
push
sti
push
sub
or
stos
mov
scas
xor
nop
fwait
in
roll
fistpl
ds
cmp
push
push
mov
or
out
ret
iret
sahf
cmpsb
cwtl
ret
negl
mov
shlb
mov
adc
imulb
mov
aas
xor
xchg
lcall
xor
cmp
fidivrs
les
cmpb
sub
stos
test
gs
pop
jmp
test
ret
xchg
xchg
and
adc
dec
sahf
inc
mov
les
mov
out
jo
pushf
xchg
and
add
sar
bound
mov
mov
jle
or
ret
push
push
or
xor
inc
and
int3
js
lds
xchg
push
dec
jbe
ret
sub
mov
stos
enter
jnp
mov
aad
insl
test
ja
mov
jp
pusha
leave
clc
ljmp
mov
adcl
loope
mov
flds
shlb
mov
stos
aas
dec
lods
ss
call
fiaddl
jle
sub
inc
adc
and
cltd
or
ss
loope
adc
mov
inc
cmp
sbb
jb
ds
cwtl
out
sbb
push
scas
setb
pop
jns
jo
xchg
out
push
xchg
mov
mov
push
cmp
sbb
jle
or
dec
call
or
mov
pop
or
mov
add
pushf
mov
xor
lcall
cwtl
out
les
xor
pop
or
rcl
xor
cmp
dec
xchg
push
enter
and
fs
mov
or
dec
sbb
hlt
fs
mov
push
adc
jge
pop
inc
push
sub
gs
out
cwtl
xor
jns
aaa
enter
mov
mov
popf
sbb
xlat
call
jns
int
mov
xor
arpl
adc
jo
mov
cmp
adc
jno
mov
gs
lahf
mul
fwait
inc
push
add
dec
add
push
test
in
pop
ljmp
jbe
mov
push
outsl
jno
xor
stos
cltd
scas
jmp
pop
xlat
roll
adc
filds
xchg
inc
add
repz
dec
fimull
lcall
jnp
icebp
push
xchg
xor
adc
fnstcw
aad
mov
jne
enter
push
mov
xor
mov
add
insl
push
ds
push
subl
into
inc
popa
pop
loope
scas
or
repz
push
in
push
jbe
scas
mov
lods
popa
iret
loope
out
cwtl
lret
inc
push
or
xchg
jbe
xchg
sti
xchg
scas
outsb
popf
addr16
lcall
cli
movsl
iret
pop
xchg
lods
sub
sti
out
or
sbb
lcallw
arpl
out
add
repz
fiadds
sub
mov
jo
fisttpll
add
and
in
add
fistl
mov
xchg
and
stos
in
pop
add
or
pop
test
xor
push
dec
mov
jg
cmp
or
mov
rclb
popa
jbe
jo
mov
movsl
fimuls
int
iret
in
mov
sbb
icebp
jmp
mov
cmp
testl
dec
add
pop
jl
negl
inc
fwait
dec
sub
dec
inc
lods
fdivp
or
mov
cld
shl
mov
inc
stos
setbe
cmp
test
or
cltd
add
mov
mov
loop
jle
ss
cmp
push
mov
test
movsl
xor
mov
lcall
jmp
sub
cmpsb
adc
roll
xchg
cltd
shl
insb
bound
lods
and
cmp
faddl
test
hlt
pop
mov
cmpsb
out
repz
xor
movl
adc
test
xchg
pop
ret
call
pop
mov
sub
je
aas
pop
add
jg
and
movsl
sbb
int
jb
cmpsb
push
fcomi
stos
outsb
dec
rol
inc
jne
or
into
aam
or
jp
adcl
xorb
mov
push
adc
insb
xorl
jmp
ja
cmpsl
dec
dec
loop
jne
dec
clc
inc
clc
clc
add
repnz
iret
jl
dec
sahf
and
sub
shll
xor
lds
test
ret
push
subb
andl
inc
jno
fs
loope
adc
and
mov
std
mov
jae
cmp
xor
cli
popa
or
sub
pop
nop
stc
add
xchg
mov
add
inc
cmc
lea
push
rorb
ljmp
cmp
pushl
adc
sub
lods
cli
adc
std
enter
sbb
xor
shll
mov
out
cmp
cld
test
out
das
stos
or
jg
dec
mov
ficomps
lahf
dec
sub
and
hlt
mov
out
mov
and
or
adc
mov
test
in
stos
push
cmp
add
push
or
in
xor
fldt
jge
sahf
xchg
scas
and
add
sbb
in
jg
cmc
enter
adc
inc
subl
sub
jbe
mov
add
je
sub
fidivl
rolb
leave
pushf
test
push
int
pop
add
or
enter
mov
ja
outsl
adc
xchg
stos
shl
sahf
data16
cmpsb
mov
xor
std
fidivl
sbb
icebp
adc
leave
dec
add
mov
mov
mov
int
adc
les
ret
stos
xchg
push
sbb
insb
xchg
xchg
adc
add
jae
pop
cmp
mov
push
xlat
cmpsl
loop
lds
add
scas
dec
jl
xor
sbb
fiaddl
adcl
das
mov
in
lea
loope
ret
mov
push
scas
dec
neg
and
dec
jb
push
fcompl
pop
es
mov
rcl
sahf
sub
mov
out
xchg
iret
pop
hlt
fwait
cmpl
pop
daa
iret
or
xchg
sbb
filds
test
xchg
cmp
int
add
mov
ja
inc
xor
repnz
into
mov
jns
iret
mov
outsb
mov
cwtl
cmp
push
in
cmpsl
out
rcl
xchg
cld
lods
fists
shr
bound
xor
mov
sub
push
sti
adcl
inc
lods
adc
jb
das
adc
push
or
add
ror
gs
sbb
inc
sbb
std
pop
or
cltd
outsb
xchg
xor
inc
mov
adc
sbb
xor
out
push
divb
xchg
push
jnp
mov
push
pop
xor
stos
push
dec
jge
das
movsl
add
inc
jns
xchg
mov
mov
sub
cmp
test
enter
inc
outsb
pop
xor
inc
ss
inc
pop
inc
jo
push
xchg
in
shl
fisubs
cmpb
and
mov
loope
movsl
and
sub
loope
ss
sbb
movsb
push
mov
nop
cmpsb
xchg
push
xchg
cmpsb
lcall
adc
mov
and
fsub
repz
pop
cmc
in
sub
repnz
bound
cwtl
xchg
inc
xchg
das
push
sub
jecxz
jo
mov
push
sub
push
decl
insl
push
stc
or
ja
push
loop
out
ffreep
add
test
push
movsb
xchg
add
aaa
adc
mov
subb
mov
dec
mov
mov
mov
adc
repnz
sub
cmpsb
sbb
mov
imul
or
pop
lahf
lret
lods
sub
dec
mov
test
sub
push
pop
xor
jp
mov
cmp
jno
jg
jno
fs
jp
xchg
outsb
xlat
lock
cs
push
gs
call
mov
mov
mov
adc
lds
aad
xor
add
pop
jg
fwait
aaa
push
cmpsl
mov
adc
lcall
mov
or
subl
icebp
ljmp
pop
mov
daa
dec
push
cmp
add
ret
add
fildll
dec
adc
add
add
xor
icebp
push
imul
std
push
stos
push
fucom
mov
lret
xchg
dec
ja
inc
xor
movsb
adc
jnp
shlb
test
lcall
sbb
add
call
pusha
aam
inc
movsb
imul
dec
in
andl
ds
cwtl
test
pop
lret
jmp
jp
icebp
jno
fstps
sbb
enter
mov
std
cmp
adc
fdivs
rcll
lcall
enter
inc
sub
out
sbb
xchg
sti
jne
lret
test
pop
xor
jns
sbb
in
je
mov
xchg
mov
leave
mov
jecxz
add
mov
out
jns
jbe
adc
or
ret
sbb
xchg
xor
jecxz
inc
ret
sub
adc
lea
add
cmpl
loop
sbb
pop
sbb
out
xor
cmp
sti
enter
adc
pusha
jne
ja
les
aam
cmpl
jno
imul
imul
lea
inc
or
mov
mov
aaa
push
xor
or
cmp
cwtl
mov
dec
sub
dec
mov
loopne
and
cmpb
adc
mov
repz
dec
or
repnz
ss
push
pusha
gs
xor
mov
shl
out
jno
aam
or
or
or
das
sbb
xor
cs
out
adc
cmp
scas
mov
in
push
jge
scas
outsb
notb
jne
pop
and
dec
addl
pop
out
xor
sbb
jbe
push
jmp
adc
sub
inc
in
sbb
mov
jnp
and
movsl
pop
dec
popa
pop
or
mov
fs
or
cwtl
cmp
xchg
cmp
pop
sbb
sbb
rcl
and
lea
insb
push
aam
mov
jno
sub
mov
sbb
and
sub
mov
test
cmpsl
mov
pop
data16
push
outsl
mov
mov
and
fildl
pop
sub
mov
mov
fdiv
add
mov
cmp
jae
push
push
xor
ret
jge
xchg
add
cmp
cmp
scas
mov
lds
adc
push
cmp
das
push
jmp
xchg
xor
std
jb
sub
mov
loop
ja
push
fldt
mov
inc
sbb
sbb
stos
push
lock
fwait
mov
xchg
incb
jne
mov
sti
and
xor
and
decb
outsb
jns
bound
push
sbb
mov
in
pop
mov
pop
ss
dec
mov
fsubrs
xchg
sbb
jno
xchg
lret
xchg
lcall
shl
adc
jb
xchg
movsl
loop
xchg
sbb
loopne
ret
mov
push
out
xchg
jg
adc
sub
lea
shll
xchg
or
jl
cmp
add
sub
sbb
inc
pop
sub
mov
sbb
adc
push
out
mov
push
sti
idiv
sti
loop
pop
or
fistpll
mov
pop
bound
pop
or
mov
clc
cs
not
imul
pop
sbb
or
adc
mov
push
pop
xor
mov
push
xchg
stc
cmp
data16
loop
fists
pop
hlt
shlb
dec
cs
or
ljmp
pushf
push
iret
mov
div
pop
in
mov
movsl
mov
icebp
popf
jno
out
and
pop
xchg
daa
cli
xchg
add
cmp
push
jnp
out
mov
lods
cli
test
xor
in
cmp
lcall
arpl
mov
inc
push
outsb
push
mov
outsb
mov
sbb
add
rcr
xchg
or
into
jae
imul
push
ret
xchg
insb
push
incb
loop
cmp
xor
mov
jmp
movsb
cmc
dec
repnz
mov
pop
push
cltd
xorb
xchg
mov
add
jae
les
in
js
dec
jb
leave
lds
jg
cld
rclb
fmuls
daa
cltd
cmpsl
repz
mov
movsl
out
scas
push
imul
shrb
and
push
fnsave
movsb
jae
cmpsb
or
push
ss
fnstsw
idivb
scas
bound
lahf
dec
add
subl
mov
push
push
int3
xor
test
lahf
cmp
lods
cmp
shl
xchg
insb
lods
cld
sub
sub
adc
enter
dec
add
add
insb
mov
aad
insl
cmp
aas
pop
lds
pop
sahf
mov
push
pop
outsb
fsubs
movsl
mov
mov
and
jnp
sbb
rol
sbb
ret
fistpl
cmp
lret
call
clc
mov
jno
shrd
gs
inc
push
push
stc
int
mov
sbb
ret
mov
out
ds
pop
loop
sbb
pop
lret
jp
cmp
mov
cmc
arpl
pop
rorl
xchg
jno
mov
push
jg
mov
pop
pop
push
test
bound
inc
cmpsl
pop
call
das
sbb
leave
mov
adc
inc
push
jl
push
adc
cs
mov
mov
push
or
xor
mov
ljmp
add
mov
aas
mov
jae
mov
ucomiss
sub
mov
je
mov
jb
mov
dec
dec
insb
or
ret
sbb
sbb
cwtl
popa
test
add
sarl
pop
repz
mov
sub
in
or
jg
aad
sub
andb
jecxz
stos
lret
jbe
xor
xor
add
mov
adc
xor
pushf
std
fwait
cwtl
and
es
xor
out
emms
stos
pop
cmp
shrl
sbb
add
pop
cld
sub
fstpl
mov
adc
aas
dec
out
dec
mov
jecxz
sbb
mov
lcall
das
subl
out
add
cmp
xchg
es
sbb
movsb
jns
popf
mov
nop
adc
bound
idivb
lahf
push
stos
add
cld
dec
or
dec
sahf
mov
cs
lahf
out
pushf
pop
xchg
xchg
sbbb
rol
pop
hlt
cmp
fbld
stos
sahf
cmc
fldenv
aad
in
out
pushf
inc
loop,pn
and
pop
sub
dec
mov
sbb
iret
mov
inc
test
xor
cmpsb
fcmovnb
cwtl
and
xchg
ds
or
insb
movsl
imul
imul
adc
mov
cmp
pop
incl
mov
lret
js
jecxz
addb
pop
pop
xor
les
hlt
je
ret
and
icebp
push
int3
xor
xor
or
subl
out
and
mov
std
stos
scas
and
roll
push
out
lea
lret
mov
jmp
out
dec
call
and
dec
cmc
aad
cs
outsb
pop
pop
inc
fidivl
nop
adc
sub
mov
adc
pusha
pop
pop
cmp
insb
sub
lcall
dec
arpl
mov
adc
and
mul
jecxz
adc
cmp
cwtl
call
mov
popf
fcomi
fcoms
pop
mov
or
cmpsb
fdivl
add
sub
xor
ss
lods
lahf
cli
fdiv
leave
sub
dec
mov
cmp
jecxz
cmp
jge
push
inc
or
pop
aad
mov
jl
insl
hlt
and
mov
xchg
xor
cmpl
jne
sahf
push
fsubs
and
fmuls
push
push
pushw
iret
dec
std
mov
or
jns
xor
ds
jbe
mov
adc
fcmovbe
enter
mov
lods
xchg
aam
lcall
mov
in
or
dec
inc
faddl
add
insl
jmp
and
gs
mov
test
jmp
mov
orb
or
in
xchg
imul
lock
scas
add
fldenv
shrl
imull
subb
popa
into
in
pop
incb
mov
mov
cmp
fdiv
js
mov
and
sbb
sub
lcall
mov
or
adc
sbb
out
pusha
sbb
shll
mov
fwait
pop
in
jl
leavew
div
xchg
repz
xchg
cmp
cmp
repnz
outsb
push
rcrb
jg
mov
cmp
add
inc
inc
jp
stc
xor
fdiv
fs
mov
dec
jp
mov
imul
movb
test
lock
push
jae
mov
xor
adc
cmpsl
pop
inc
dec
xchg
mov
ljmp
cmp
dec
dec
cmpsb
inc
inc
jne
cmc
add
dec
adc
cmpsb
stos
mov
pop
icebp
loope
ret
mov
gs
inc
mov
add
in
ljmp
jne
stos
sti
jge
lret
push
sbb
push
mov
jne
and
and
mov
mov
mov
std
scas
add
sbb
das
or
fnstenv
ss
jbe
xchg
mov
cltd
ret
icebp
sbb
and
xchg
rol
adc
or
or
ret
xchg
inc
jge
mov
dec
movsl
sub
mov
jns
push
mov
int
in
iret
dec
lahf
dec
or
cmp
in
xchg
jb
push
inc
mov
inc
mov
pop
in
push
jne
mov
push
push
jne
ljmp
fistpl
adc
inc
sub
pop
iret
les
push
std
scas
aam
mov
adc
push
mov
andl
pop
mov
stos
add
loop
or
or
dec
daa
out
mov
dec
addr16
divb
inc
xorl
add
sbb
jnp
push
mov
testb
lods
add
loop
push
ret
cmc
mov
clc
xchg
pop
add
sub
jg
repz
daa
mov
cmp
repnz
mov
push
xor
sbb
cmp
roll
lea
mov
pop
sbb
fs
push
mov
cmp
sbb
xchg
rcll
lea
pop
cmp
and
rcrl
movsb
mov
sub
lods
mov
in
nop
mov
lock
jl
xor
mov
push
clc
sub
lea
adc
dec
sbb
in
add
pop
inc
stos
and
adc
pusha
or
icebp
mov
cmpsb
sbb
dec
pusha
cli
inc
gs
cmc
push
out
scas
jp
in
cld
jg
sub
mov
dec
rolb
stos
sbb
xorb
imul
in
dec
pop
into
stos
mov
or
fcmovnb
push
push
xor
insb
and
sub
in
sub
xorl
aaa
mov
outsb
enter
push
cmove
rcrb
je
in
sbb
mov
add
shlb
adc
imul
inc
arpl
push
iret
aad
push
sub
pop
fisubrs
or
in
and
imul
data16
test
jl
lcall
loop
pusha
jge
cmp
mov
mov
mov
and
loop
movl
lret
fidivrs
add
sub
adc
push
inc
sbb
rcrl
cwtl
push
dec
push
push
aas
or
test
test
rcr
inc
xchg
pop
jmp
lret
xor
or
sub
lret
sbb
jle
cld
xchg
sahf
pop
out
out
cmpsb
xor
mov
sahf
lahf
push
pop
pusha
pop
jo
add
stos
in
sbb
leave
aas
jno
dec
fcomp
cmp
push
xchg
inc
ret
inc
xor
push
pop
call
jo
cmc
cmp
jae
or
xlat
mov
push
add
and
jne
inc
sub
add
fcompl
es
mov
ja
pop
outsl
sahf
cltd
gs
repz
pop
push
xchg
inc
sub
push
fwait
add
ret
mov
pop
cmc
or
or
sbb
aas
adc
rorb
movsb
test
mov
sub
mov
cmp
icebp
cmp
rcr
inc
test
call
insl
jno
mov
fistps
pop
mov
fcmovne
test
pop
loop
stos
sub
push
test
ficoms
jbe
es
and
pusha
sahf
fwait
dec
and
sub
stos
ficompl
jp
jnp
in
xor
mov
sahf
pop
inc
imul
into
bound
mov
add
pop
gs
lret
in
sub
push
icebp
pop
adc
or
cmp
out
lret
test
orl
sub
pusha
or
sti
pop
push
jmp
stos
mov
inc
jmp
mov
dec
push
jb
nop
xchg
mov
jmp
ret
push
mov
push
mov
sahf
pop
mov
cld
popa
push
rcrb
lahf
and
lret
push
lea
fcomip
mov
pop
pop
cmpsl
daa
xlat
xchg
leave
inc
push
stos
outsl
iret
aas
jp
and
mov
je
push
xor
shl
rcl
je
or
addr16
pop
adc
mov
mulb
aad
out
push
loope
movsl
leave
push
jno
jecxz
clc
cmpsb
sahf
repnz
stc
movsb
daa
xlat
fnstsw
cmpsl
rol
fldcw
cmpl
mov
aas
sbb
mov
aad
daa
lds
dec
or
lcall
cmp
mov
inc
fs
adc
jge
fisubs
push
incb
shrb
sarb
rcr
adc
je
push
fidivl
cld
je
out
stos
pop
cmp
ret
xor
ficomps
mov
cmp
fwait
mov
insl
xchg
jns
les
push
shl
stc
in
iret
pusha
adc
stos
mov
push
mov
scas
push
popl
sbb
stc
mov
pop
push
sti
bound
ret
fisttpll
daa
mov
push
sbb
loope
clc
test
add
dec
dec
jp
mov
cmp
add
in
inc
fnstcw
xor
addr16
sti
fistpl
mov
fisubrl
sub
add
add
aas
adc
ja
lea
add
mov
das
stos
aad
imul
xor
es
das
mov
fisttpl
loop
dec
insl
mov
cmp
cmp
adc
sar
mov
enter
shrl
inc
loop
xchg
sar
pop
loop
test
mov
ror
ret
dec
lods
xor
enter
adc
js
inc
clc
neg
scas
and
fisubrl
or
pop
push
dec
arpl
pop
mov
sub
cmp
pop
jl
jnp
cld
sbb
jg
lcall
pop
ljmp
push
dec
lret
push
call
or
fincstp
dec
mov
fisttpl
aad
lds
js
xchg
data16
sub
adc
roll
adc
mov
mov
ret
jle
ret
or
jge
xchg
mov
scas
adcl
sbb
pusha
fsubl
and
adc
and
es
ret
test
sub
dec
jle
xor
lret
sahf
aaa
push
pop
cmp
jle
and
push
add
js
jmp
mov
fidivs
idivl
lods
in
sub
pop
sbb
popa
mov
out
fwait
rcrl
inc
jp
dec
insl
pop
popa
loope
pop
es
and
shrb
dec
xchg
les
jns
jns
xchg
sbb
repnz
cmp
pusha
inc
sub
adc
test
arpl
inc
shlb
fcmovbe
add
or
mov
lcall
mov
pop
push
sti
dec
lahf
fnstcw
adc
fnstenv
pop
cli
out
adc
and
add
cmc
sub
pop
sbb
jae
mov
loope
and
pop
dec
aad
cltd
pop
push
mov
sub
mov
stc
adc
arpl
out
fdivrp
sub
xchg
movsl
arpl
sub
jg
gs
popf
cmp
mov
fcoml
adcb
andl
mov
jno
sbb
shll
pop
xorl
jge
lods
rorl
cmp
int3
rcll
lds
pop
inc
aas
sub
adc
test
push
ret
lods
sbb
xchg
jns
imul
jl
cs
pop
xchg
test
shll
xor
mov
sub
pushf
push
pop
xchg
popf
andb
clc
jp
test
push
lcall
nop
pop
xchg
xchg
xchg
push
push
sti
test
adc
mov
dec
pop
xor
enter
arpl
popf
stos
mov
jbe
fdivs
in
test
sbb
xchg
testb
inc
inc
icebp
add
xorl
dec
es
lret
fcomps
jge
sub
sub
enter
ficoml
cmpb
lret
xor
mov
incb
repnz
repz
loopne
enter
dec
lock
popa
inc
sarb
fs
cs
mov
lods
in
sbb
xorb
adc
adc
sub
insb
xchg
int
lds
insb
stc
clc
popf
lret
mov
pop
in
pop
and
mov
adc
ds
xchg
or
mov
sbb
pusha
lcall
and
add
test
jl
mov
fdivrl
outsl
push
xchg
idivb
les
push
aad
mov
not
ljmp
lods
ret
mov
or
dec
movd
in
xorl
mov
sarl
popf
add
sbb
add
out
loopne
js
push
hlt
clc
movsb
shlb
jb
sub
add
int
in
lahf
jmp
push
fimull
jmp
jne
das
cmpsl
dec
cmp
aam
push
cmp
repz
inc
inc
push
xchg
adc
jne
inc
outsl
push
jns
push
arpl
hlt
xchg
cmpsl
xor
ljmp
mov
and
and
mov
mov
jae
imul
sbb
push
adc
mov
sbb
add
lds
fisubrl
pop
jnp
jbe
sarl
xor
int
push
xor
xchg
aas
in
sbb
mov
pop
mov
inc
xor
mov
pusha
mov
cmp
ret
fdivrl
inc
addr16
filds
or
sub
sarl
ja
movsl
rcll
clc
rol
jmp
jmp
nop
mov
fists
mov
sbbl
xor
mov
xchg
jge
or
or
jmp
ds
ljmp
fnstcw
in
xlat
testb
aaa
rol
test
stos
jbe
add
insw
push
push
outsb
or
and
dec
xchg
cmc
and
in
mov
push
cmp
bnd
jle
adc
inc
mov
xchg
rol
test
cwtl
js
xchg
fisubrl
ds
idivb
pop
or
fs
ds
add
lcall
mov
and
iret
popf
inc
clc
xchg
inc
xchg
push
movsb
inc
and
incl
mov
sub
jo
xor
mov
addr16
jmp
or
xchg
jnp
out
sbb
sti
mov
test
mov
int3
dec
inc
jns
ja
fs
icebp
xorl
inc
mov
lock
xchg
addl
adc
mov
xchg
in
test
les
xorl
test
xchg
or
sahf
andl
fistl
mov
dec
xor
xchg
sub
leave
movsl
sbb
add
mov
inc
pop
adc
cmc
jne
stos
out
jl
pop
test
cwtl
in
hlt
rorb
mov
pop
or
scas
pop
mov
int
daa
repnz
cmp
into
dec
mov
loopne
adc
adc
hlt
call
incl
pusha
cmc
xor
xchg
iret
sub
sar
add
mov
adc
test
ds
push
mov
pop
call
mov
imul
fcoms
mov
in
xchg
push
in
rolb
add
push
mov
mov
xchg
shrl
add
stos
jle
int3
sub
popf
xchg
jmp
dec
cmpl
mov
and
adc
xor
pop
iret
xchg
sub
std
incb
and
fldt
jns
testl
lret
es
decb
cs
dec
repnz
mov
jl
std
jl
adc
inc
das
or
loopne
and
leave
or
in
lock
int
inc
bound
in
xchg
cmp
add
or
mov
sub
jmp
fbld
sbb
std
lock
sub
cmpsl
cli
iret
sub
push
mov
jnp
sarl
mov
in
lock
or
lods
mull
inc
das
dec
or
push
jp
or
cmp
push
cmc
pushf
jbe
sub
in
popf
loopne
dec
arpl
dec
mov
jecxz
cmp
inc
fidivrs
int3
sbb
repz
in
repnz
icebp
xor
mov
mov
sbb
xor
ja
loopne
inc
pushf
lock
mov
ljmp
aam
rolb
dec
aam
push
loop
or
ja
pop
clc
xchg
repz
lcall
adc
pop
add
adc
jnp
or
dec
fstps
adc
and
and
inc
jne
dec
fcoml
lds
in
cmpsb
jbe
fsubr
roll
mov
xchg
fwait
pop
lahf
dec
cmp
sub
inc
cmp
adc
lcall
nop
mov
and
mov
xchg
lahf
mov
xor
jno
inc
cltd
cs
stc
fidivrs
popf
scas
xor
pop
jb
xor
icebp
xchg
push
aas
or
cmovnp
lds
xchg
cmp
in
dec
mov
jg
add
lods
out
mov
scas
stos
stos
or
sbb
nop
sbb
sbb
out
xor
mov
sub
jae
or
divl
cli
xor
xor
nop
jno
mov
test
test
dec
les
inc
fldenv
sub
out
in
jp
dec
mov
sub
cmp
xchg
inc
repnz
mov
rcl
mov
mov
push
cmp
cmpsl
dec
leave
and
jbe
jecxz
loop
mov
push
xor
pop
out
scas
lods
pop
ss
xchg
lods
jecxz
test
pop
fucomip
sub
and
cltd
pop
pop
out
pusha
fimuls
addb
in
adc
dec
std
inc
add
cli
outsl
pop
pop
xchg
push
shrl
xor
cmc
sub
flds
or
inc
xor
add
shl
insl
sbb
popf
cmp
daa
iret
mov
push
cli
inc
or
movsl
ret
out
pop
cmp
jmp
xor
js
clc
jo
mov
xchg
push
icebp
jecxz
sub
mov
sub
mov
mov
lret
add
jp
or
scas
xchg
lea
mov
hlt
int
outsl
and
aam
jae
or
jp
lea
xchg
outsb
sahf
jno
mov
cmp
mov
sub
adc
addr16
push
jno
pusha
mov
inc
stos
mov
loopne
loop
sbb
cltd
mov
ds
rolb
xchg
xor
pop
cmc
daa
mov
lock
ljmp
fiaddl
xchg
ljmp
jbe
imul
mov
xchg
cld
xor
jge
imul
loope
xchg
or
xchg
lcall
scas
cmp
dec
cli
es
pop
and
add
push
in
sti
movsb
sub
jns
cmp
test
lret
push
pop
inc
sti
adc
jae
test
sti
or
outsb
sbb
sahf
push
sahf
dec
ficompl
and
push
lods
dec
and
sub
mov
cmp
xchg
mov
lcall
ret
mov
in
xchg
nop
push
or
pop
mov
sbb
sbb
inc
mov
lods
jae
cwtl
cli
push
and
popaw
fs
lods
pop
mov
pop
push
add
mov
push
movsb
push
fistpl
push
into
inc
ret
mov
xor
popa
xchg
cmp
mov
xor
lahf
adc
dec
movsb
jne
jno
cmp
imul
add
pop
mov
mov
fsubrs
mov
cmpsl
out
cld
push
fucom
sub
sub
mov
push
int3
xchg
inc
lcall
push
or
stc
and
dec
sarb
sbb
xchg
pop
pusha
bound
movsl
push
xchg
inc
adc
pop
ja
sbb
ret
mov
shll
sbb
pop
test
data16
mov
inc
cli
dec
test
ffree
push
orb
js
mov
fmull
sbb
shl
leave
mov
mov
lea
and
sbb
stos
lock
inc
clc
pop
insb
mov
mov
rorb
movl
xchg
pop
push
adc
enter
data16
or
xchg
and
test
jmp
jb
add
mov
mov
pop
out
mov
jb
test
rol
jb
jae
jecxz
out
dec
push
scas
fldt
cmp
decl
out
jb
sub
or
mov
js
mov
insb
inc
jns
and
out
stc
dec
jl
adc
mov
or
adc
and
mov
and
xchg
mov
ja
push
shll
adc
mov
mov
mov
jno
xchg
xlat
mov
push
test
jne
into
jge
and
es
int3
iret
stos
es
cmc
add
adc
dec
fs
ret
add
std
dec
adc
cmp
nop
dec
mov
jle
lock
iret
ss
in
cwtl
xchg
int
stos
movl
inc
fidivl
insl
cmp
xorl
gs
pop
in
add
jp
loopne
mov
js
data16
testl
jg
sub
addr16
lahf
mov
lods
sahf
jae
jle
or
fimull
incl
arpl
aad
iret
or
dec
and
sbb
vmovups
jno
pop
dec
fildl
hlt
int
pop
ljmp
push
pop
cmpsl
lret
cli
sub
push
out
mov
sub
in
push
inc
subl
ss
jo
aas
xchg
in
data16
lock
lret
stc
sub
aam
push
sti
stos
in
popf
sbb
rorb
lds
push
cmp
inc
addl
out
das
loopne
cltd
mov
dec
cmp
cmp
gs
das
jp
addr16
test
dec
call
int
andb
xchg
and
sbb
loopne
inc
or
pop
cmpsl
into
cmp
or
aam
scas
cltd
dec
dec
in
push
or
cmp
sbb
pop
icebp
jmp
pusha
push
test
cli
testb
in
xor
jo
add
or
and
pop
push
xchg
std
lahf
adc
push
notb
scas
popl
loop
outsl
aaa
xor
inc
aas
add
sbb
dec
lret
jmp
push
jb
cmp
enter
cld
in
ljmp
roll
xor
sbb
sbb
sahf
xchg
idivb
sbb
into
arpl
push
push
inc
mov
pop
sbb
fwait
push
xchg
dec
mov
pop
fwait
cmp
bound
in
push
cmp
and
int3
jecxz
insb
jbe
mov
dec
inc
roll
fdivs
imul
lock
mov
mov
jmp
mov
push
and
popf
imul
sbb
movsl
sub
sub
push
flds
out
fldenv
test
mov
dec
sbb
and
mov
cwtl
push
pop
mov
and
inc
lcall
dec
mov
push
leave
pop
mull
ljmp
jns,pt
rclb
sbb
pop
fdivrs
or
mov
popf
hlt
fstl
mov
mov
pop
outsb
data16
std
push
pop
sub
mov
leave
push
xor
popf
xchg
jo
mov
jae
stos
movsb
loopne
mov
mov
adc
add
xchg
cmp
enter
ficomps
inc
mov
leave
popf
mull
ss
mov
fs
sbb
jecxz
jae
jns
je
nop
xchg
inc
jmp
adcb
dec
add
lret
adc
pop
xchg
shll
lods
lods
xor
sub
out
dec
movsb
int3
inc
mov
sarl
or
xor
xchg
fimull
dec
inc
mov
addr16
stos
jae
mov
push
loop
add
add
nop
push
repz
ret
lret
mov
push
adc
aam
cmpb
sub
orb
mov
cmpsb
bound
mov
dec
scas
mov
adc
adc
ffreep
mulb
shlb
lcall
fmul
cmpsl
test
pop
std
lods
jne
push
vpunpcklbw
xchg
and
mov
leave
push
push
pop
mov
jg
add
hlt
inc
push
dec
dec
cld
outsl
jns
and
sbb
repz
xchg
scas
scas
sbb
insl
popa
adc
and
aad
push
movsb
sbbl
inc
cmp
sub
scas
fdivrl
or
adc
adc
xor
mov
out
xchg
in
and
adc
jle
xor
dec
mov
xchg
arpl
shrb
dec
lods
jns
xchg
pop
je
xor
add
mov
xor
xchg
and
pop
or
pop
mov
bound
cltd
mov
popa
push
lock
scas
mov
inc
dec
mov
das
pushf
faddl
and
xchg
mov
adc
std
decl
jb
cmp
cmpb
or
mov
std
in
mulb
andl
ja
xchg
lea
push
jb
push
inc
jl
in
dec
movsb
push
jns
add
jnp
int3
pusha
xor
mov
cmc
das
outsl
test
shll
jnp
test
cld
pop
lods
rcrl
sbb
das
mov
in
mov
mov
pop
sbb
int3
sahf
push
aam
dec
jl
ja
sahf
out
pop
jg
xchg
mov
mov
dec
aaa
inc
cli
aaa
jns
sub
inc
ficoml
push
lods
stc
cmpsl
test
loop
jae
ljmp
fnstcw
ret
jmp
test
and
push
pop
lret
fs
and
xchg
dec
int
test
pushf
sbb
je
or
dec
jl
ret
sbb
or
jne
xchg
jae
cmpsb
add
sub
xor
xorl
jecxz
jmp
movsb
repnz
adc
jmp
lock
dec
aam
dec
inc
xchg
iret
fdivrl
mov
jb
cwtl
or
into
fisubl
sbb
add
push
add
call
leave
idivl
adc
jb
mov
mov
stc
add
adc
pop
ss
inc
xchg
xor
pop
cmpsb
pushf
push
div
and
sbbl
mov
sbb
ja,pt
cmp
pop
jbe
push
add
popf
sbbl
mov
stos
int
xchg
dec
test
scas
jg
pop
or
enter
pop
ret
loope
out
mov
addr16
hlt
and
pop
push
mov
add
testl
int3
jnp
xlat
data16
in
adc
pop
add
lcall
pop
cmp
or
sti
imul
jb
stos
jge
mov
inc
filds
lcall
inc
dec
cmp
lods
pop
dec
xlat
inc
xchg
sbb
pop
pop
mov
dec
outsb
icebp
pop
xor
repnz
mov
fsubs
test
pop
or
xchg
pop
pop
xchg
out
stc
sahf
xor
movsl
mov
or
data16
bound
xor
or
test
insb
in
aad
std
adc
lods
decb
xchg
mov
xchg
call
jecxz
mov
addr16
jg
test
ja
xchg
inc
inc
shll
and
cmp
int
ljmp
jae
testl
dec
push
jne
inc
subl
flds
and
fs
mov
xlat
pop
cmp
or
fcom
pop
pusha
negl
xlat
xchg
ljmp
sub
popa
mov
inc
incb
mov
imulb
mov
inc
adc
sbb
mov
mov
mov
jle
out
test
jl
sub
lods
or
insl
out
cmpsl
in
pop
imul
push
dec
aas
sbb
test
pop
lods
mov
xchg
psubd
pop
icebp
mull
add
mov
push
mov
stos
test
les
push
scas
inc
popf
xchg
push
in
std
jge
aaa
enter
lods
inc
cli
fdivr
aas
mov
bound
pop
sub
test
icebp
addb
sub
aaa
in
push
push
testl
add
movsb
cltd
dec
mov
mov
inc
add
inc
xchg
push
jns
cmp
xor
xchg
mov
bnd
mov
les
mulb
and
call
sarb
xor
lret
or
adc
out
repnz
addr16
add
jnp
cmpsl
test
and
ds
mov
sub
dec
adc
push
ja
leave
mov
xchg
xlat
bound
nop
sub
adc
jmp
cli
fists
jmp
movb
or
dec
fists
nop
lcall
push
mov
jp
mov
fs
xchg
fsubs
xchg
mov
leave
push
jb
cmc
pop
jecxz
pop
fcomps
repz
filds
leave
xchg
nop
sbb
insl
or
mov
push
cmp
imul
xor
sub
rorl
pop
jmp
hlt
mov
jle
mov
add
pop
ret
and
xchg
xchg
sub
sub
repnz
jge
std
or
fdivl
push
test
popf
addb
mov
xchg
adc
cs
jae
pop
andb
mov
mov
add
out
sbb
sub
lea
ficoms
pop
add
push
pop
xchg
lahf
push
xor
add
repnz
and
mov
inc
stc
pop
or
or
dec
inc
bound
sbb
and
and
jae
aam
sub
xchg
mov
mov
add
cmp
loope
outsl
jecxz
push
cmp
loop
mov
xchg
dec
inc
xchg
mov
dec
jle
jecxz
test
or
dec
pop
imul
popf
pop
jmp
negb
enter
fsubrp
cwtl
mov
leave
ret
mov
add
inc
mov
and
jle
fcmovne
loop
xchg
ss
cmpb
repnz
js
sbb
jmp
mov
out
cmp
dec
ja
xor
cmp
adc
arpl
out
leave
mov
popf
pop
and
das
ret
aad
rcll
inc
mov
loopne
test
shrb
sti
cmpsl
loope
jecxz
xor
jle
pop
push
test
pop
mov
mov
jecxz
mov
xchg
add
dec
push
and
int
int
xchg
cmp
mov
insb
mov
cld
js
xchg
subl
scas
xor
xchg
push
or
popf
sub
lock
in
xchg
inc
jmp
movsb
xchg
cmp
ret
enter
repnz
mov
loop
or
push
push
cmc
imul
pop
push
inc
gs
in
xlat
mov
mov
jbe
lahf
mov
fistpl
mov
fdivrs
cmpsb
mov
jne
lea
test
mov
icebp
test
into
and
cmp
or
sub
mov
adc
dec
repnz
out
cmpsl
add
push
lret
roll
ret
mov
sti
jae
scas
or
mov
dec
rcl
xor
ljmp
lahf
sbb
popf
les
je
xor
push
sti
push
cmp
cli
mov
loope
dec
mov
mov
ljmp
leave
dec
mov
and
mov
mov
fldl
sub
repnz
daa
xchg
xchg
and
pop
aas
pop
out
xchg
push
movsl
lcall
les
sarl
bound
lret
mov
loope
dec
lahf
or
cltd
lods
add
dec
lcall
cmp
ret
jl
push
dec
add
mov
dec
iret
cld
sbb
inc
cmp
pop
sahf
mov
loope
mov
sti
stos
bound
stc
cli
pop
sub
pop
or
aas
fstpt
movsb
fdivl
add
test
pop
cltd
scas
sbb
in
pusha
pop
popa
mov
add
lcall
shrl
xlat
jecxz
out
pop
lcall
mov
pop
pop
scas
les
fs
mov
test
mov
loope
pop
cmc
daa
aaa
mov
dec
pop
cmp
xor
repnz
sbb
outsb
cmp
lahf
xlat
pop
inc
lea
cmp
mov
sub
sub
in
icebp
daa
add
dec
push
xchg
push
xor
pushf
test
js
fcmovu
cmp
int3
and
ret
fstpt
push
repnz
mov
sbb
xchg
outsb
push
mov
inc
cmp
pop
mov
leave
add
push
jp
and
pop
mov
aam
out
adcb
lret
cmp
xchg
cld
dec
xlat
cmp
jo
ljmp
pop
xor
popfw
and
fwait
sub
divb
es
jae
ss
jg
lds
sbb
add
fidivrs
and
cwtl
jo
scas
xlat
aas
int3
push
and
cmp
fwait
icebp
aam
lods
test
repnz
andl
inc
pop
mov
inc
sbb
imul
lret
lods
jnp
cmpsl
sti
aad
adc
jg
stos
xchg
push
jne
scas
mov
adcl
sti
add
xlat
fisttps
je
mov
sarb
cld
out
jle
sub
cmpsl
mov
and
and
sbb
in
into
mov
sbb
mov
fcomps
dec
mov
popf
pop
js
mov
push
in
xor
mov
xchg
cmpsl
popf
push
cmp
mov
outsb
mov
and
mov
popf
xor
call
lods
jbe
push
xchg
cmp
fadds
idivl
jae
mov
call
out
in
pop
jbe
lahf
mov
xorl
in
xor
cs
lods
adc
xchg
inc
in
jp
push
movsl
cld
inc
dec
insb
rolb
pop
repz
inc
in
jle
mov
icebp
hlt
stos
das
stc
das
pop
std
imul
cmp
jns
push
mov
sbb
into
pushf
xchg
mov
sbb
dec
add
inc
das
sub
incb
stc
loope
sbb
je
imul
movsl
sub
jmp
xchg
aam
adc
cmp
sub
mov
xchg
mov
cmp
mov
repz
lods
in
cmpsl
dec
jns
jl
mov
fsts
push
xlat
nop
jl
xchg
push
subl
jne
mov
in
jns
pop
xlat
ficompl
mov
mov
add
icebp
mov
cmp
pop
fucomi
or
stc
popf
mov
es
lret
inc
pop
repnz
xor
jne
fimuls
cmp
imul
adcl
jl
out
outsb
or
testl
mov
call
and
fldl
lret
cmp
pop
inc
movsl
jne
dec
xchg
mov
sbb
sbb
stc
or
cwtl
cs
cmp
push
xchg
sub
lret
mov
sub
cmp
lock
add
inc
inc
add
fwait
aaa
sbb
ds
jle
into
jnp
push
or
pop
adc
mov
add
jl
jecxz
mov
mov
roll
sbb
or
mov
or
cmp
aas
or
sbb
sbb
pop
imul
push
arpl
call
adc
ficompl
ficompl
cmp
divb
cwtl
mov
test
sub
addb
sbb
mov
cmpsb
insl
push
cmp
sbb
iret
jge,pt
pop
mov
popa
jecxz
xchg
imul
cmp
adc
ror
int3
out
cmpsl
xor
pop
mov
movsl
inc
dec
or
jecxz
es
cmp
adc
xchg
testl
aad
sub
mov
ja
xchg
cmp
fldz
sbb
imul
shr
mov
repz
pop
push
aam
mov
data16
sub
and
jno
hlt
movsl
mov
mov
popa
xchg
movsb
push
jno
shr
and
loop
lcall
dec
jne
sub
push
push
gs
loop
in
cmp
cmpsb
jbe
shll
rcrb
mov
std
or
lea
cmp
sub
cmpsl
pop
push
xlat
pop
jns
cmpsl
mov
outsl
inc
xchg
xchg
shl
std
imul
icebp
daa
mov
imul
data16
inc
adc
jbe
clc
or
xor
aad
inc
out
test
dec
cmp
dec
out
incb
loopne
out
jb
ss
xor
or
mov
or
subl
jbe
dec
fdivs
sub
cli
jl
dec
and
pop
cvtdq2ps
int3
fdivrp
add
inc
jno
ret
ljmp
aaa
or
xchg
mov
imul
xor
sahf
lcall
xchg
mov
movsb
mov
adc
mov
xor
ljmp
out
insb
jmp
and
jae
leave
pop
push
adc
jae
pop
test
test
mov
inc
ss
sub
cmp
and
iret
inc
ja
mov
xchg
in
sbb
lods
es
pop
jb
push
lods
mov
mov
cmp
out
xlat
clc
push
and
sub
js
outsb
aaa
inc
fdivs
jecxz
pop
fbstp
pand
aam
cmpsb
pop
mov
scas
xor
push
dec
fisttpll
pminub
ret
insl
hlt
popf
sub
into
mov
into
pusha
test
push
fidivrl
loope
mov
in
adc
rclb
and
js
sahf
orb
mov
fdivrl
or
aam
jle
ret
jmp
movsl
js
cmp
cmp
lcall
xor
lret
jp
sbb
dec
xor
inc
gs
int3
or
ljmp
jo
movsl
daa
sarb
enter
xchg
bound
lea
and
cmpsb
pushl
adc
pop
out
jnp
das
rorl
dec
lret
lret
jo
stos
outsb
fsub
rcrl
or
cli
rcrl
jo
in
js
mov
ds
cmp
xchg
aaa
sbb
pop
rolb
jge
sbb
loope
leave
mov
mov
jle
repnz
dec
push
repz
sub
fidivl
inc
subl
jp
dec
sub
dec
jae
push
add
cmpsb
jns
shll
scas
in
mov
jmp
insb
push
outsl
cmp
dec
mov
sub
jae
mov
lock
sub
mov
adc
xor
pop
sbb
ljmp
les
dec
pop
loopne
rorb
push
out
xor
clc
dec
inc
or
sahf
fwait
shr
repnz
gs
push
test
aam
push
das
xchg
dec
jp
incl
and
jl
mov
xchg
psrlw
xor
imul
or
lahf
setbe
mul
cmp
pop
xchg
sub
dec
popa
mov
sahf
sbb
orb
adc
shll
stos
mov
push
and
ss
frstor
ss
shll
push
cmp
dec
jns
lret
lret
xchg
sar
push
mov
sbb
daa
hlt
fildll
pop
cmc
pop
icebp
and
in
adc
rcrl
dec
dec
add
mov
mov
mov
imul
xlat
sub
imul
in
adc
test
stos
aas
dec
cltd
cmp
jne
xor
and
std
outsb
dec
js
jno
push
and
or
sub
pop
imul
sbb
subb
out
fldenv
pop
aas
xor
scas
hlt
pop
mov
test
mov
inc
stos
fbld
xor
int3
outsl
add
test
mov
mov
notl
mov
xchg
sahf
inc
mov
xchg
in
push
push
adc
test
mov
jp
xor
mov
jl
mov
xchg
sahf
jnp
in
loopne
push
dec
sti
mov
dec
mov
jo
scas
dec
dec
cmp
in
sub
cmp
jmp
mov
and
test
sbb
cmp
sbb
pusha
fisubs
test
sub
xchg
mov
sub
mov
cwtl
push
or
inc
fwait
jge
sub
adc
mov
lods
lret
call
dec
shrl
cltd
in
adc
fcmovne
jge
jbe
mov
mov
test
in
dec
inc
out
fs
push
dec
push
jl
push
into
shr
push
call
add
call
std
mov
push
aas
std
xchg
mov
cmp
xor
and
enter
jb
fldt
sahf
repz
jecxz
jno
adc
and
insb
out
or
dec
mov
pop
aas
sar
loop,pn
xor
mov
mov
loopne
mov
test
sub
push
gs
mov
ljmp
outsl
cld
cs
imul
push
daa
mov
das
jo
inc
jne
dec
inc
lods
jmp
xchg
jp
xchg
jno
pop
addr16
mov
xlat
add
orl
pop
loopne
ret
mov
pop
pop
jl
mov
bound
idivl
dec
arpl
loope
aam
daa
in
mov
push
fcmove
push
dec
and
pop
lock
fdiv
pavgw
lods
flds
and
dec
jmp
and
mov
push
gs
and
in
lret
aam
cmp
xor
lds
inc
rcll
sub
jb
sub
out
ret
jb
mov
lods
test
mov
cli
inc
xchg
and
cltd
mov
jg
out
jne
dec
sbb
enterw
sbb
aad
fdivs
sub
mov
subb
cmp
adc
mov
pop
ficoml
stc
sub
rolb
fimuls
cmp
in
adc
sarb
jg
jge
inc
fldcw
jge
leave
xchg
mov
xor
and
das
jbe
bound
aaa
or
xor
stos
lret
aad
std
outsb
adc
lcall
arpl
into
roll
cvtps2pi
jmp
or
mov
pop
das
cmpsb
and
fnstcw
out
incl
enter
pop
mov
in
cmp
sub
xchg
cmp
inc
mov
inc
mov
sub
scas
arpl
pop
shrl
xor
sbbl
lret
jb
inc
xor
aam
mov
push
adc
cmp
xor
push
out
stos
or
repz
or
packsswb
jb
or
repz
sub
push
mov
inc
in
in
lock
jg
pop
and
inc
fdivl
andl
ds
add
test
movsl
xor
int
test
mov
cmp
xchg
jp
lahf
mov
mov
inc
loop
in
in
xor
push
cmpl
dec
adc
stos
out
pusha
dec
aad
inc
push
mov
adc
push
and
sbb
fcompl
sbb
stos
scas
xchg
push
out
aam
cmc
shrl
add
push
ret
outsl
push
sahf
jl
mov
stos
movsb
adc
push
and
stos
jecxz
sub
xor
xor
test
int3
sarb
adc
sahf
lea
inc
fistpll
fnstenv
sub
popa
mov
push
data16
in
loop
test
gs
test
adc
jns
jecxz
nop
jnp
mov
and
cmpsl
jp
mov
lea
or
xor
popa
inc
sub
sbb
fildl
adc
push
or
push
pop
dec
ret
mov
test
test
into
cwtl
mov
fisubrs
outsb
stos
push
jbe
xchg
dec
insl
ret
push
movsb
dec
adc
repnz
mov
outsb
xchg
cmp
sub
aad
stc
mov
cmp
jnp
loope
outsb
and
pop
inc
mov
cmp
scas
insl
mov
in
cmp
xchg
mov
fsubrs
or
fucompp
pop
push
add
imul
insl
insb
imul
mov
mov
rcll
adc
xchg
cmp
pop
lahf
sub
mov
outsb
pop
or
leave
enter
dec
rcrb
std
fistl
outsl
dec
lds
lods
pop
lret
fiadds
int3
mov
les
pop
lcall
repz
dec
xlat
lds
xchg
mov
loope
or
das
jge
mov
pusha
pop
push
pop
aaa
cmp
jns
push
mov
sub
cmp
mov
pop
cli
sbb
sub
test
pop
mov
add
lret
or
xchg
sbbl
movsl
mov
stos
dec
jb
pop
sub
roll
jne
shl
pop
movsb
outsb
and
inc
pop
push
sub
popa
cs
fucompp
mov
jge
and
das
ss
stc
push
out
and
and
lret
sbb
mov
push
data16
les
imul
push
and
cld
xchg
adc
push
lea
cmc
andl
and
mov
inc
pop
pop
repz
sarl
xor
add
mov
adc
lods
sub
mov
mov
pop
and
jnp
das
mov
pop
subb
sbb
pop
mov
add
cmpb
lods
jecxz
jmp
imul
lods
cmp
dec
lds
add
stos
dec
jne
ljmp
sub
pop
das
cmc
adc
jnp
rorb
mov
outsb
ja
fsts
testb
andb
and
cmc
test
orb
scas
jmp
lcall
push
lock
push
out
aas
lret
cmp
dec
adc
pushf
js
jnp
fistpl
cmp
jmp
jp
push
fists
mov
xor
push
sub
or
cmp
pop
je
std
push
or
sbb
pop
iret
xor
mov
jns
test
push
popf
mov
cld
adc
pushf
add
mov
mov
xor
fwait
add
mov
add
xchg
aam
imul
mov
mov
pop
mov
pop
daa
aad
gs
ret
dec
push
jmp
pop
xchg
je
fisubrs
rolb
out
cmp
pusha
add
or
mov
stos
push
inc
mov
loopne
sbb
and
stc
dec
orl
fisttpll
and
test
mov
lods
or
aam
mov
insb
sbb
icebp
cmp
xor
clc
popf
dec
and
or
mov
add
jb
mov
enter
dec
sbb
pop
imul
mov
in
push
fcmovbe
pop
cmpsb
lock
and
pushf
push
mov
jmp
je
or
add
enter
mov
jl
xor
cmp
in
repnz
mov
in
stc
adc
pop
push
jp
inc
xlat
and
sahf
sub
sub
incb
out
cmpsl
jmp
push
stos
adc
cmc
inc
movsb
pop
popa
call
jl
arpl
mov
dec
lods
mov
cmc
rsm
aad
sub
add
jp
jg
adc
dec
cmp
scas
aad
mov
sub
adc
jecxz
lcall
loope
dec
ja
ret
mov
xor
in
iret
dec
arpl
jae
sbb
jb
in
jnp
scas
in
xlat
add
rcl
xchg
mov
outsb
dec
jno
sbb
inc
inc
imul
mov
shlb
mov
ret
dec
pop
inc
dec
pop
mov
fisttpl
scas
pop
fmull
jb
repnz
loopne
push
lret
scas
in
jb
pop
xor
push
or
xchg
mov
fstps
mov
and
xchg
mov
roll
push
pop
add
jecxz
in
out
inc
cmp
push
xor
int
out
cmpsb
scas
scas
jmp
pop
testb
or
push
testb
jge
or
mov
and
inc
inc
sbb
mov
cmp
adc
pop
adc
les
not
js
jg
jp
mov
loop
xorb
mov
dec
inc
push
aas
xchg
in
mov
mov
sub
jg
jl
cmp
lock
jne
scas
adc
push
pop
dec
fnstcw
or
lret
sti
sbb
inc
or
mov
xor
int3
push
pop
lret
iret
sbb
jecxz
or
xor
mov
xor
sub
sbb
push
add
dec
mov
mov
cmp
js
fistl
cld
pop
pop
fiaddl
and
push
push
dec
or
sub
je
lock
adc
push
mov
xor
outsb
ljmp
jecxz
aas
mov
mov
sarl
mov
pop
jns
cmp
loop
jb
sbb
in
push
aam
je
movsb
popa
jg
inc
daa
lds
loop
les
or
out
push
iret
push
xchg
cmp
cmp
int3
call
inc
and
mov
daa
sbb
out
cmp
mov
in
cmpsl
std
push
mov
jno
push
fcmovu
fldenv
lock
adc
pop
cltd
xor
fnsave
lret
pop
aaa
dec
ss
and
sbb
add
add
ficoms
cmp
mov
out
xor
test
mov
mov
xchg
pop
inc
rcrb
scas
std
daa
loop
sbb
adc
les
jo
cmc
inc
scas
and
adc
add
rol
arpl
es
je
sub
cmp
nop
loope
add
repnz
add
insl
in
mov
cmpsl
aad
pop
dec
imul
ret
jbe
les
sbb
inc
pop
rclb
or
dec
cmp
and
push
lds
pushf
in
inc
lahf
sarl
sub
fyl2x
rorb
and
inc
add
fs
mov
fcmovne
pop
fdivs
insl
mov
scas
pop
addb
es
movsb
addr16
dec
repz
scas
xor
rep
xor
int
in
insb
push
sbb
push
lock
out
inc
adc
rolb
test
push
lods
xchg
mov
mov
dec
adc
xor
pop
lcall
jecxz
inc
popf
out
mov
push
sbb
mov
xchg
aas
adcl
adc
fstps
dec
cltd
test
cmp
jmp
mov
test
dec
imull
out
inc
sub
sbb
out
push
add
add
hlt
pop
inc
lahf
ja
xor
push
pop
add
rol
push
enter
mov
enter
sbb
xlat
mov
push
in
sub
dec
pop
adc
or
dec
dec
lods
stos
aas
rclb
mov
add
fldenv
clc
pop
sub
andl
in
pusha
push
or
andl
iret
es
push
aad
movsl
lea
fidivrs
add
xor
iret
push
xchg
stos
aaa
cmp
add
cmpsl
movsd
shl
dec
pop
inc
lds
pop
int3
lea
fisubrs
addl
or
xchg
mov
movsl
popf
sti
sub
and
mov
repz
inc
shll
icebp
adc
jp
pop
movsb
xor
sub
movsl
jmp
icebp
xchg
adc
shr
cli
icebp
and
daa
mov
add
std
inc
pop
cmpsl
icebp
push
js
pop
das
mov
in
jno
es
dec
mov
fcoms
xchg
jmp
popf
mov
pop
inc
arpl
ds
mov
int
repnz
mov
inc
pop
ja
mov
data16
adc
and
lcall
stos
pop
into
sar
cmp
adc
mov
dec
pop
xchg
adc
cmpsl
and
in
movsl
cmpsl
out
fisubs
icebp
dec
cmp
scas
bound
int
mov
lret
aad
mov
mov
mov
pop
pop
mov
stos
fdivrp
mov
aaa
mov
mov
mov
pop
lods
jp
int
les
out
or
and
mov
push
and
je
sbb
imull
xchg
stos
aas
lret
xchg
mov
cli
sub
outsb
outsb
test
and
xchg
adc
bswap
xchg
push
add
imul
outsl
adc
pushf
push
insb
push
leave
pop
jno
mov
xchg
sbb
cmpsl
sbb
ds
xlat
cmpl
es
scas
xor
lret
sub
jge
cmp
inc
sbb
inc
movsl
adcb
adc
mov
sub
mov
lea
xor
push
mov
in
pop
clc
mov
mov
jg
mov
cmp
cld
jae
jo
push
in
popf
jnp
shll
idivl
scas
lock
fnstcw
pop
ret
and
movsl
mov
jmp
scas
xor
add
das
sar
cmp
xchg
pop
and
sub
inc
push
lods
jnp
xor
mov
dec
jb
or
orb
test
das
add
cs
add
adc
push
adc
jmp
jle
dec
nop
fimull
and
add
sbb
pop
fucomp
push
jne
lods
sub
repz
push
into
mov
push
pop
dec
sub
ret
movsl
fdiv
aaa
or
lods
popa
mov
scas
movsb
mov
mov
test
pop
xchg
push
insb
sub
dec
js
push
lcall
or
ds
add
jo
mov
cmp
nop
pusha
mov
int3
sbb
js
adc
out
int
mov
sti
jmp
sbb
cmpsb
pop
sub
lock
add
stos
nop
inc
ret
stos
and
lret
ffree
outsl
adc
stos
xor
ljmp
call
cmp
sti
fisttpll
inc
adc
fs
xor
sarl
in
push
js
or
dec
sub
push
in
push
xor
sti
pop
pop
shr
mov
sbb
rcrb
mov
lods
xchg
mov
mov
sahf
lods
divb
jbe
sbb
adc
insl
es
jo
push
js
inc
mov
fistpl
push
pop
lret
inc
mov
push
and
ds
pop
fs
lret
lods
ds
pop
hlt
imul
pop
xchg
pop
insl
dec
push
pop
xchg
push
mov
inc
xchg
mov
xor
xchg
loope
mov
pop
fildl
aaa
mov
mov
icebp
bound
sbb
sub
push
push
mov
movsl
popa
mov
add
stos
scas
lret
in
loopne
popa
repnz
in
sbb
pop
pop
stos
insl
mov
outsb
mov
jo
jbe
subb
mov
sbb
jmp
jmp
mov
inc
sbb
inc
popa
negb
adc
and
pop
jns
or
jmp
xchg
ds
and
ljmp
stos
push
xchg
mov
dec
adc
gs
jecxz
pop
sub
sbbl
lds
les
add
fcmove
add
ret
lahf
out
cmp
dec
notl
dec
sub
js
sbb
xchg
shrl
cld
pop
test
repnz
or
cmp
movsl
ret
push
mov
neg
fistpll
dec
cmpl
dec
sbb
push
cmc
and
jg
inc
divb
outsl
lahf
or
cmp
xchg
jns
rclb
addr16
xor
xchg
or
jmp
out
cmpsl
cmp
movsb
mov
rolb
fidivl
or
stc
flds
nop
lock
in
clc
adc
add
sar
mov
add
ljmp
sahf
lcall
push
fnstsw
inc
adc
fldt
jge
sbb
fcoml
jae
pop
lods
jae
and
xchg
add
aaa
fiaddl
cs
push
mov
sbb
sbb
in
mov
inc
lcall
fwait
push
push
dec
test
or
pop
push
ret
mov
add
push
bound
ficompl
or
and
int
lock
mov
xor
stos
pop
push
sub
andb
imul
outsl
loop
jae
imul
dec
loopne
ljmp
mov
mov
sub
jno
cltd
je
jno
sbb
push
cld
pmaxsw
hlt
daa
xlat
push
mov
push
jmp
je
sub
imul
mov
inc
push
xchg
sub
inc
fs
jecxz
pop
ljmp
sub
dec
movsl
adc
pop
inc
in
movsb
dec
jmp
jg
rcrl
add
arpl
sbb
pop
in
hlt
jle
outsl
repz
push
mov
cmp
lret
lahf
stc
or
out
rorb
or
js
enter
or
xor
sahf
hlt
xchg
mov
push
adc
out
dec
sbb
out
push
mov
inc
dec
pop
pop
pop
or
inc
popf
mov
out
jae
push
mov
or
scas
jae
daa
mov
scas
in
adc
bound
mov
loopne
or
mov
push
cmp
pop
mov
pop
xor
xchg
and
cltd
imulb
imul
stos
rorl
je
pop
cld
jbe
push
aam
add
icebp
push
decb
js
or
cmp
inc
and
ljmp
incl
or
cmpl
push
jae
neg
xchg
and
sub
and
cs
aaa
push
inc
push
test
cmp
sahf
adc
std
or
add
rol
dec
ficoms
pop
aaa
cmp
je
mov
out
inc
fdivrp
movl
push
out
gs
pop
inc
mov
mov
addb
pop
adc
sbb
rcrl
leave
mov
inc
and
aas
push
dec
bound
add
inc
enter
pop
leave
lods
pop
mov
mov
and
mov
arpl
sbb
mov
lret
mov
nop
pop
loopne
mov
add
or
jno
or
les
pusha
sub
setg
int3
xor
xor
cmp
push
lahf
inc
pop
or
cmpsb
subl
cltd
jg
dec
cmovns
shll
add
es
dec
jp
ficoml
sub
push
cmpsb
clc
insb
inc
adc
inc
pop
push
mov
in
lea
int
aad
outsl
je
stos
cwtl
pop
jle
jmp
loopne
iret
rep
dec
mov
mov
out
pop
or
or
shlb
stos
dec
or
fldl
je
jo
or
outsl
cli
cwtl
jge
out
mov
in
sbb
pop
leave
sbb
pop
inc
imul
iret
pop
or
outsl
pop
xchg
loop
hlt
sub
scas
mov
adc
jb
imul
in
lcall
movsb
adc
fsubs
mov
in
lcall
rorb
or
cmp
xchg
mov
cmpsl
js
adc
push
outsl
lret
mov
xchg
inc
insl
ljmp
pop
fmuls
xor
loop
sbb
mov
and
xchg
lcall
sub
and
jno
insl
xchg
mov
xlat
sbb
mov
sub
fldt
push
jb
in
and
into
add
mov
je
cmc
mov
scas
inc
in
jmp
repnz
subl
mov
dec
push
cmc
sub
mov
push
cmp
or
int
into
sbb
repnz
pushf
in
xchg
sbb
fnstsw
jb
and
incb
and
rcrb
mov
mov
iret
and
das
dec
sub
cmp
lret
jmp
add
es
sub
gs
add
and
rcll
addb
push
add
aam
mov
jno
cmp
out
pushf
cmp
addr16
xchg
cmp
mov
mov
jae
add
fdivs
clc
sub
sahf
and
push
sahf
arpl
jmp
push
cltd
nop
cmp
dec
lret
and
push
mov
mov
sub
in
mov
pop
fisubs
xor
mov
dec
andb
cs
adc
js
mov
xchg
ds
add
lods
add
mov
ret
sbb
inc
inc
aad
popa
xchg
ljmp
pushf
mov
mov
jecxz
mov
fcomps
cmp
sbb
sar
mov
sbb
idiv
or
xor
mov
test
inc
xchg
lods
cs
int3
insl
sbb
xor
mov
jno
push
mov
daa
or
cltd
pop
mov
jge
cmp
mov
sub
nop
call
out
adc
cmp
aaa
xor
sbb
jp
popa
pop
sub
adc
jecxz
xor
sbb
cs
out
adc
sub
aaa
push
cs
adc
jmp
out
dec
mov
imul
sub
mov
js
mov
mov
stos
movsl
inc
adc
mov
leave
cmc
movsb
inc
mov
mov
add
jle
inc
lahf
cmpsb
lcall
pushf
arpl
or
cmp
mulb
cmp
jg
inc
add
or
test
sbb
inc
addl
lock
lcall
sub
jmp
outsl
mov
in
inc
mov
arpl
pop
mov
in
mov
inc
mov
dec
push
fisubrl
mov
adc
outsl
sbb
xchg
xchg
ja
repz
xchg
cwtl
pop
sti
nop
js
add
lahf
int
push
inc
mov
push
testl
dec
and
gs
ret
mov
clc
fs
cltd
or
imull
jb
add
add
pop
rcll
in
ret
pop
mov
xor
cmpl
cmp
or
inc
out
mov
aas
lahf
sub
lahf
sbb
aaa
cltd
cmpsl
jecxz
inc
sarb
xchg
jge
xlat
fs
adc
mov
and
xor
aad
xchg
push
mov
rorl
ja
je,pt
sub
push
mov
cwtl
movsb
pop
jmp
mov
mov
inc
sbb
sahf
inc
fst
fsubs
cmpsl
ret
insb
pusha
mov
jne
jb
out
and
ret
out
jmp
mov
lret
push
add
mov
movsb
inc
xchg
mov
xchg
sbbb
movsb
push
ss
enter
out
add
fs
shrb
push
mov
jecxz
imull
adcb
xchg
jo
ljmp
arpl
xor
lret
xchg
mov
mov
mov
test
pusha
pop
out
fwait
jge
cld
jp
mov
jp
dec
fwait
mov
aas
aam
popa
pushf
in
push
nop
rorb
sbb
fwait
mov
cmc
mov
test
mov
lahf
or
loop
jmp
mov
rcll
out
andl
fadds
push
xor
lret
xor
adc
dec
xor
and
hlt
push
push
enter
or
out
xchg
lods
pusha
out
ljmp
jle
cmp
clc
mov
xchg
lahf
mov
cmpsl
nop
shlb
cmp
pop
add
dec
fisubs
out
and
unpckhps
enter
lcall
mov
mov
insb
pcmpeqd
loope
cmpsb
cs
pop
jecxz
fistpl
addr16
push
inc
pop
or
in
call
jb
inc
lcall
loope
dec
iret
mov
les
sub
mov
mov
push
or
lea
iret
jo
and
lret
or
loopne
fwait
out
jg
nop
repz
jl
insl
push
jge
cltd
pop
in
es
pop
jmp
aaa
std
fstl
inc
shlb
push
loop
lds
mov
fldt
push
or
es
in
test
sub
xchg
pop
or
pop
fwait
mov
jne
xor
xor
sub
cmp
adc
lcall
arpl
sub
pushf
xchg
and
movsb
dec
ror
hlt
sbb
sub
repnz
fdivs
out
inc
lods
cld
cmp
iret
push
mov
pop
ja
mov
mov
mov
leave
or
loope
sub
rcrl
popf
imull
fabs
das
or
mov
dec
mov
sbb
ret
sub
mov
add
unpckhps
pop
xchg
sbb
sbb
jmp
sub
inc
xor
cmp
test
in
fstpt
adc
pop
leave
and
xchg
popf
scas
out
movsl
mov
cmp
xor
mov
pop
test
scas
adcb
add
sbb
pushf
addr16
in
ficoms
addr16
dec
push
push
adc
hlt
roll
cmp
movsl
enter
fs
or
pop
cmp
or
adc
jno
in
outsl
fs
lcall
fidivrl
xor
jg
pop
out
dec
ret
mov
js
lahf
insl
push
rcl
ja,pn
jmp
bound
push
rcrb
clc
xor
sbb
adc
push
xor
outsl
mov
inc
fstl
cwtl
fiaddl
adc
cs
jb
or
push
xor
xchg
push
or
adc
xor
xor
incl
xchg
fistpl
rcll
lock
jg
add
jo
arpl
pusha
jmp
push
clc
sub
addr16
data16
inc
and
xchg
imul
and
pop
cmp
sti
gs
sub
sub
dec
shrb
push
shll
imul
nop
xchg
or
dec
shr
add
out
sub
imul
dec
popf
sub
hlt
movsl
loopne
aaa
cli
push
pop
pop
mov
rclb
leave
out
test
mov
or
lds
mov
sub
fisubrl
in
js
into
pop
test
repnz
jle
or
and
or
jb
xor
push
into
add
sbb
movsb
or
xor
jne
jbe
cmpsb
ret
pop
xor
sbb
rclb
jae
aas
dec
push
xchg
incb
jnp
add
subl
fwait
daa
ror
insb
or
fstpt
mov
sub
in
notb
xchg
pop
cmc
dec
fsubs
push
mov
and
in
movsl
xchg
loope
or
jb
outsl
push
mov
sar
cld
shll
popa
push
insl
mov
or
or
jmp
int
xchg
arpl
xchg
xchg
push
mov
int3
test
into
enter
shll
inc
sbb
sub
lcall
aaa
ljmp
pop
sub
repz
ja
pop
sub
movsb
stc
je
push
inc
ljmp
sbb
jg
je
in
pop
push
add
fisttps
clc
sbb
mov
dec
ret
cmp
or
hlt
dec
sub
test
sub
clc
mov
aam
fdivr
and
xor
test
movb
cmp
nop
mov
xchg
lcall
or
fiadds
pop
cmpsl
mov
fsubrl
sbb
inc
pop
iret
inc
push
outsb
inc
inc
shll
cmpsb
jle
sbb
cmp
loope
daa
jg
add
jge
inc
xor
fdivp
loop
pop
mov
je
inc
out
int3
out
pop
push
loop
sub
xchg
push
jecxz
dec
mov
xchg
sub
jo
sar
cmp
call
or
pop
fstps
imul
push
dec
push
xchg
imul
enter
std
xorl
sbb
and
jne
or
xchg
fdivrs
xor
sub
rorl
aam
push
in
mov
fdivrp
mov
push
out
xchg
aas
mov
pop
or
test
in
inc
pop
cmp
mov
mov
imul
jg
sbbl
sti
in
mov
out
jl
fisubrl
aas
bound
repz
or
adc
xchg
cmpsb
xchg
mov
outsl
adc
and
push
sbb
xchg
test
xchg
pop
movl
xor
or
imul
pop
pop
and
mov
and
inc
roll
jb
ds
jecxz
or
mov
mov
ss
incb
enter
dec
or
mov
dec
xchg
push
and
mov
pop
or
and
or
ret
sbb
test
mov
filds
inc
je
add
adc
int3
test
push
mov
pop
cwtl
push
cmc
es
inc
xlat
mov
rclb
inc
push
or
mov
mov
xchg
rclb
stos
inc
inc
lret
dec
mov
ret
xchg
orb
imul
jb
adc
imul
mov
pop
xchg
or
in
mov
loopne
mov
call
orb
and
push
add
and
push
inc
mov
or
mov
and
adc
out
mov
lods
mov
xchg
xor
repnz
adc
idivb
iret
ljmp
out
fcomps
sbb
adc
xlat
lret
jecxz
shll
inc
xchg
dec
mov
inc
sub
cmp
add
or
shll
push
repz
aas
aad
cmp
mov
xor
push
jb
popl
std
sbb
hlt
test
loop
lea
cld
adc
addr16
stc
in
mov
decb
dec
data16
fld
push
ficomps
or
cli
cmp
jp
push
testl
mov
mov
in
loopne
jnp
adc
adc
repz
lds
icebp
aas
cmpsb
inc
push
inc
and
push
or
loope
lret
mov
repnz
xorb
xor
dec
movsb
in
mov
cmp
mov
arpl
mov
jbe
fldenv
pop
jg
mov
test
hlt
int3
sub
sbb
fs
mov
sub
sub
add
roll
xor
popa
sub
scas
or
iret
mov
fcmove
stos
out
xchg
inc
mov
out
xorb
ss
pop
push
jle
add
jle
xor
mov
in
pop
dec
jp
cmp
lret
xchg
or
push
mov
adc
out
gs
mov
xchg
out
pop
or
push
sahf
rclb
mov
add
mov
fisubrl
movsb
aas
rorb
cmp
pop
aas
jge
push
or
jb
movsl
xchg
sahf
push
lods
lea
xchg
in
or
sub
stos
sahf
into
cwtl
mov
jg
fcom
fimull
negb
sub
mov
xchg
xor
mov
and
arpl
cmpsb
cwtl
mov
bound
or
jnp
ret
fwait
aas
negb
addl
mov
scas
push
ret
jnp
cmp
jno
leave
mov
pop
ret
sub
into
mov
repz
mov
test
sbb
lods
in
pop
and
not
xchg
inc
xor
mov
and
rcrl
mov
xor
outsl
xor
ljmp
mov
les
mov
adc
cmp
add
fstps
into
insl
frstor
sbb
fisubl
cmp
mov
xor
jl
cmpsl
out
inc
sbb
and
sub
adc
popf
push
aas
dec
nop
lds
xchg
in
and
push
mov
sbb
sbb
rcr
call
xchg
push
mov
sbb
icebp
xor
ja
dec
adc
inc
repz
and
add
xorb
mov
daa
push
loopne
dec
mov
dec
loope
inc
mov
out
fwait
into
xchg
ror
int3
ficomps
stos
daa
sub
dec
push
movsl
imul
incl
add
jb
mov
mov
push
sub
mov
sub
pop
pslld
jns
xor
lea
pusha
lods
in
sub
push
out
arpl
movsl
or
outsl
dec
jl
iret
dec
test
out
ljmp
idivb
and
or
mov
popa
push
stos
loop
iret
push
cmp
js
push
out
cltd
push
xchg
movsl
push
adc
insb
adc
shll
mov
in
clc
dec
sbb
out
sbb
dec
pop
mov
sbbb
and
jmp
mov
xor
mov
xchg
std
je
jo
cs
jmp
add
call
mov
cmc
out
hlt
mov
push
icebp
mov
xchg
push
mov
mov
jbe
adcb
lea
mov
pop
mov
push
test
mov
lods
xor
pop
movsb
add
repz
mov
and
daa
in
pop
adc
sbb
sbb
popa
scas
mov
add
into
cmp
rcrl
xor
repz
dec
mov
jp
push
notb
add
push
jle
das
xchg
mov
jne
bsr
mov
cltd
mov
push
cmp
jbe
scas
cmc
pop
adc
scas
pop
mov
and
sub
sbbb
test
or
cmpb
push
mov
lret
in
or
ja
stos
sti
rorl
lret
lcall
bound
fwait
lods
jle
mov
cld
mov
jp
dec
aas
jg
and
rcr
ret
cmp
fbstp
pop
mov
lock
insl
lock
scas
lds
xchg
mov
rolb
and
xchg
adc
xor
xor
push
dec
and
cs
adc
jl
xchg
dec
xor
outsb
push
rcrb
xor
push
test
push
jle
cmp
in
ljmp
jns
xor
jae
inc
movsl
decb
sbb
lods
dec
aaa
call
ds
shlb
aam
les
xchg
bound
xor
fnstcw
jg
sub
out
dec
scas
adc
xchg
mov
insb
scas
dec
cmpxchg
xor
addl
adc
mov
or
fadd
ss
pop
jle
dec
xor
ljmp
lret
mov
les
stos
add
jnp
hlt
test
jo
pop
jb
inc
test
aam
mov
or
es
incl
dec
mov
aad
icebp
pop
into
fldt
insb
movsb
aad
add
inc
xchg
rclb
push
sbb
bound
mov
inc
jle
enter
sti
inc
aad
xor
xchg
dec
add
and
sti
xor
subb
insb
test
mov
jb
xor
xchg
jb
add
cmp
lcall
pop
mov
mov
popf
or
mov
lcall
dec
cmpps
cli
mov
sub
arpl
mov
repz
aad
fdivl
arpl
sar
or
bound
pop
xcrypt-ecb
cmpsl
or
pushf
or
inc
jl
aad
sbb
mov
popf
lcall
push
fbld
lock
push
test
mov
rcll
addl
push
mov
mov
fidivrs
mov
ficoml
dec
fidivrs
sub
addr16
out
pusha
adc
mov
addr16
sub
push
mov
fwait
shl
lods
inc
push
mov
xchg
cmpb
dec
inc
jl
movsl
sarl
jg
cmc
bound
or
arpl
cld
out
insl
and
add
push
pop
pop
fstpl
in
cmpsl
test
arpl
dec
xchg
enter
lret
popa
xor
enter
dec
js
rolb
inc
jp
push
bound
push
gs
xchg
pop
mov
cmc
fildl
dec
sub
data16
pop
mov
adc
dec
push
icebp
mov
bound
adc
loope
jne
ds
dec
adc
nop
jp
orb
jb
xchg
not
pop
add
and
xchg
sub
pop
ds
fidivs
push
repnz
jbe
das
jg
int
es
shl
scas
mov
popa
mov
push
sub
add
rcll
and
movsb
mov
jno
pop
cmpsb
jae
fcmovbe
jmp
adc
sbb
inc
xchg
jno
inc
dec
xchg
xor
decl
mov
popa
inc
lea
daa
xchg
rolb
cmp
fists
icebp
jle
pop
pusha
mov
fsts
inc
or
push
jmp
stos
mov
call
cmp
mov
stc
idiv
xchg
das
mov
test
inc
bound
pusha
aad
jp
pop
sub
mov
lret
ret
mov
imul
or
scas
add
mov
aam
xchg
sbb
xchg
popa
xchg
rorl
cmp
repz
push
iret
outsl
lods
daa
mov
lcall
pop
pop
push
fmulp
push
push
scas
aam
movsl
xor
iret
inc
addr16
mov
mov
pop
xlat
sbb
push
out
test
xorb
loope
push
js
mov
clc
push
cmp
enter
or
sub
adc
loop
sti
shlb
fimuls
fwait
sbb
daa
es
jne
aad
pop
aas
in
arpl
fnstenv
imul
pop
jmp
in
out
adc
dec
leave
popf
icebp
mov
cmp
fistps
jno
imul
int3
pop
es
pop
xor
stos
lret
pop
xchg
cmp
int
pop
test
arpl
cwtl
xorl
sub
xor
xlat
out
shlb
xchg
movsl
aas
push
ret
outsl
sti
dec
les
or
das
sub
fcoml
outsb
cwtl
lods
pop
mov
roll
shll
std
adc
pop
pop
and
out
int
cmc
adc
ret
sub
icebp
inc
cmp
daa
dec
mov
rcrl
xor
mov
mov
sbb
pop
add
testl
or
push
push
ja
dec
cmp
icebp
pusha
or
inc
test
mov
jae
sub
mov
shl
popf
outsl
shl
or
push
mov
or
dec
aad
jle
pop
pop
addb
cmpsb
mov
ret
int
test
mov
fisubl
in
push
sbb
and
adc
add
out
pusha
push
ffreep
loopne
fcmovne
stos
mov
aam
pusha
xchg
push
test
in
call
push
sbb
jmp
sbb
pop
sbb
dec
in
imul
xlat
aam
test
and
sar
dec
jmp
xor
fidivs
movsl
nop
add
enter
xchg
in
jnp
mov
test
repz
lcall
mov
negl
pop
and
push
maskmovq
mull
mov
inc
inc
lcall
jp
enter
dec
pop
pop
jle
xor
outsb
pop
mov
mov
shl
dec
adc
push
out
mov
insl
sbb
jg
in
fadds
pop
or
jne
incl
loop
inc
mov
cmp
int3
je
mov
fldcw
daa
sbb
jp
cld
pop
sbb
arpl
aaa
stos
enter
xor
xchg
bound
inc
mov
jle
movsb
inc
sub
push
cltd
data16
movsb
fstp
mov
in
stos
mov
jnp
cmp
jp
loopne,pt
push
ffreep
sub
mov
nop
mov
mov
sbb
scas
ret
fidivrl
fdivl
adc
sub
mov
sti
pop
sbb
add
pushf
jnp
mov
fiadds
pop
add
sbb
test
adc
negb
imul
gs
popa
repnz
shlb
cs
or
adc
pusha
and
push
and
mov
adc
jb
call
mov
jle
xchg
or
jp
loop
mov
xor
mov
mov
in
push
sub
cmp
loop
jne
xlat
xchg
stos
fdivp
lock
dec
sbb
sub
aaa
rcrb
and
lahf
jge
shl
xchg
stos
cli
lret
int
dec
call
push
xor
fnstcw
add
sti
lcall
push
pop
sbb
imul
sbb
test
addl
leave
dec
int3
dec
add
sbb
out
test
cmp
sarb
mov
sub
sub
jno
push
repz
jmp
icebp
add
bound
sbb
cltd
out
fbstp
stc
push
fwait
in
push
nop
repz
jp
mov
leave
sub
sbb
push
sub
clc
push
pop
and
incl
lret
repnz
testb
cli
mov
cmp
mov
addr16
sti
testl
pop
cmp
push
push
les
pop
mov
jb
sbb
xor
or
inc
mov
jmp
call
mov
pop
pop
gs
jae
out
lret
and
sbb
popa
repz
push
je
es
add
popf
cmp
leave
lcall
dec
jge
add
mov
jp
rorb
js
movsl
clc
insb
cmpsl
popf
push
mov
push
fmull
inc
or
inc
test
sub
rorl
xor
sbb
mov
xor
mulb
inc
sbb
lahf
ret
jp
frstor
mov
stos
lahf
dec
fdivl
shl
or
xchg
jmp
fs
faddl
ret
hlt
popa
inc
xchg
cmp
aam
aad
push
pop
cld
jecxz
into
mov
cli
inc
rorb
daa
dec
jmp
dec
push
inc
and
popa
pop
lret
pushf
jp
insb
sahf
xor
and
mov
xchg
scas
imul
add
data16
push
xchg
testl
punpckhwd
cmpsb
jl
jmp
test
out
jg
notl
cmc
sbb
insb
push
pop
xor
stos
lods
ja
mov
out
and
sbbb
mov
loop
stc
pop
cmc
cwtl
dec
in
inc
and
ss
hlt
mov
push
jp
outsl
cmp
les
addr16
jns
movsl
add
jp
and
addb
dec
inc
mov
sub
repz
add
cmovno
sbb
sbbl
pop
lock
pop
out
dec
and
jae
adc
out
dec
push
ss
cld
clc
xor
adc
xor
sbb
adc
xchg
dec
mov
in
mov
sub
das
jnp
jmp
mov
mov
test
pushl
lahf
mov
sarl
rcll
cltd
stos
mov
add
std
int
jp
in
inc
mov
and
push
loop
cmc
mov
xor
scas
ljmp
popa
add
das
push
sbb
push
inc
fstl
lret
jns
xchg
dec
cmpsb
sar
push
push
fcomi
daa
jb
jl
push
clc
fidivrs
mov
sti
lahf
push
xchg
imul
clc
neg
jno
fwait
mov
pop
in
mov
push
pop
inc
out
xchg
dec
inc
test
mov
ror
inc
or
out
lcall
jns
jg,pn
lret
mov
cmp
cmpb
outsl
mov
adc
lcall
mov
scas
pop
pop
adc
cmp
insb
inc
mov
sub
in
sbb
test
mov
dec
fsubrl
jmp
xor
pop
mov
push
jmp
mov
leave
fbstp
cmpsl
subl
scas
imul
js
jo
fistpll
jmp
push
filds
mov
loop
inc
xchg
sbb
call
jmp
jbe
lock
inc
push
ds
dec
js
mov
pop
lods
int
bound
dec
jmp
loop
and
out
inc
insb
outsb
pop
ss
es
push
test
repz
and
shlb
test
add
fdiv
sub
pushf
ja
outsb
ds
pop
sbb
gs
inc
mov
movsb
xor
and
xor
sub
movsb
ret
sub
test
rorb
xchg
sbb
aas
outsb
xchg
dec
xor
in
insb
fadds
adcl
mov
das
fidivs
cs
or
frstor
mov
xchg
xor
fs
call
mov
add
test
pop
jbe
data16
jo
cwtl
and
leave
pop
dec
js
mov
mov
lret
dec
lcall
mov
ret
sbb
or
stc
mov
decb
and
sub
xchg
lods
jo
xor
lcall
loope
xlat
cs
iret
fildl
push
aad
sbb
add
cmp
ljmp
mov
push
inc
repnz
pop
repz
bound
jmp
loop
aas
std
inc
inc
push
js
cs
adc
sub
leave
add
in
cmpsl
add
pushf
pop
inc
mov
jle
out
ljmp
pushf
js
push
ret
push
gs
insb
roll
xchg
mov
mov
aad
int
xor
jae
cli
das
jecxz
adc
fstl
mov
loop
mov
mov
dec
fcoml
adc
mov
fs
cs
dec
add
stc
xor
adc
ror
adc
sub
and
stc
fsubl
add
adc
repz
aam
lods
sbb
out
mov
cmpsb
stos
in
mov
mov
xlat
out
daa
add
push
pusha
xchg
and
jle
inc
adc
push
cmp
dec
es
or
mov
int3
shrl
cmp
aam
cmp
mov
jecxz
in
xchg
ljmp
mov
dec
and
pop
or
gs
popf
jnp
mov
imul
lea
push
inc
loope
adcb
pop
dec
cmp
inc
lret
mov
inc
mov
xor
pop
jns
pushf
mov
xchg
dec
or
pop
repnz
in
inc
mov
mov
inc
dec
xchg
add
fs
jnp
and
cmp
pop
sti
mov
sbb
lods
aad
sub
ds
sub
iret
pop
rcll
xor
arpl
pop
inc
inc
jns
popa
or
insl
sti
jbe
or
jl
movsb
pop
movsb
pop
xor
lea
pop
hlt
pop
scas
fnstenv
push
jne
daa
movsb
and
inc
out
mov
ss
outsl
and
dec
push
iret
sti
jbe
dec
jge
nop
mov
jbe
sub
jl
jbe
lods
je
mov
lds
in
leave
mov
popa
fisttps
inc
fistpll
push
lock
arpl
es
subb
rorb
repnz
lret
sbb
jp
int
add
mov
mov
cmp
mov
enter
repnz
mov
nop
and
add
push
dec
popa
jb
add
cmp
loop
pop
ret
xchg
dec
push
insb
xchg
mov
sbb
adc
or
jnp
add
push
sarb
adc
int3
xor
lahf
inc
dec
arpl
rcrl
loopne
jnp
into
push
in
sbb
imul
sub
pop
jecxz
jae
dec
sub
inc
xor
fs
jle
inc
xor
sub
fnsave
das
rcrb
jl
cmp
rcrb
mov
call
insb
cmp
stc
cmpsb
dec
jns
out
mov
andb
cmp
adc
xor
and
sub
adc
push
in
mov
js
into
out
mov
dec
rcrb
mov
mov
add
int3
mov
gs
outsb
fstpt
fpatan
sbbb
imul
nop
mov
andl
loop
xchg
xchg
mov
add
mov
dec
inc
lds
and
fpatan
or
adc
in
dec
aam
lods
test
and
in
inc
sbb
or
mov
pextrw
or
lret
pop
dec
test
mov
pop
aaa
cmp
and
pop
or
push
leave
ss
lret
popa
das
loopne
mov
push
roll
cmp
inc
call
test
xor
jp
or
mov
push
stos
mov
aaa
pushf
jp
mov
das
sbb
mov
push
add
xor
ds
rcl
xchg
push
jecxz
or
jae
jno
repz
bound
mov
push
or
inc
push
xor
mov
jecxz
add
jae
cltd
fldcw
pop
dec
out
fisttpll
lea
inc
mov
call
dec
in
mov
ja
cmpsl
push
movb
push
pop
xor
mov
shll
mov
mov
int
inc
ljmp
lods
sub
adc
xorb
push
or
push
sti
xchg
clc
das
push
inc
arpl
push
xchg
les
or
je
ljmp
mov
xchg
cmpsb
in
or
pop
sub
mov
add
xchg
lret
cli
cwtl
loopne
mov
xor
pop
jg
mov
aad
inc
ret
out
add
pop
out
iret
xchg
test
jnp
in
ja
push
xor
int3
inc
mov
add
test
mov
int
xchg
mov
mov
test
jge
insb
and
orb
and
adc
dec
or
or
lahf
int
adc
cmp
xchg
mov
dec
sti
xchg
jle
push
in
in
cwtl
dec
scas
pop
int3
push
cmp
xor
imul
sbb
out
xchg
movsb
dec
std
lcall
push
adc
cmp
pop
loop
out
mov
icebp
fdivs
mov
mov
mov
mov
or
sub
addr16
mov
inc
loop
mov
loop
sbb
cltd
insl
test
mov
into
aas
cmp
dec
and
leave
enter
pop
sarb
xor
in
cmp
add
or
push
rclb
sbb
jecxz
icebp
or
das
je
adc
jno
or
ficomps
iret
pop
sbb
mov
push
test
xor
les
push
dec
mov
cmp
and
cmpsl
sub
push
xor
sub
lea
xchg
xor
push
jb
jp
fistps
loop
pushf
aam
mov
pmulhuw
and
test
sar
jmp
arpl
sbb
mov
jo
push
mov
jne
cmpb
xchg
xor
sbb
jg
sub
nop
pop
fldcw
jmp
sub
sub
dec
cmp
insl
int3
fnsave
ret
mov
fwait
xchg
sub
fwait
dec
fcoml
xlat
xchg
or
in
daa
jbe
out
cmp
aad
inc
inc
shrb
fsub
out
sub
pop
rcll
shlb
insb
fistpll
mov
push
jne
xchg
sbb
cwtl
cmpb
inc
fistps
js
stc
dec
jo
mov
aam
and
pop
dec
cwtl
xor
mov
mov
jmp
das
ret
test
daa
movsb
sbb
incb
rclb
pop
ljmp
jb
ret
push
and
mov
sbb
pushf
mov
inc
xchg
push
popa
lea
sub
pusha
add
test
xchg
sahf
hlt
mov
fwait
pop
mov
mov
in
jb
aaa
das
pop
mov
or
sahf
inc
pop
mov
fiadds
xchg
sub
pop
jbe
ja
inc
inc
fisubrl
mov
lea
pop
insb
xor
ror
or
cmpsb
test
and
sbb
cmp
enter
adc
mov
hlt
adcb
adc
sub
imul
shl
nop
or
adc
push
adc
jno
int3
pop
or
add
add
add
stos
cmp
push
push
pushf
mov
and
rcr
cmpxchg
and
imul
mov
inc
ret
jae
inc
cmp
arpl
adc
xor
into
mov
push
push
pop
dec
add
cmp
std
xor
je
push
fisubrl
int3
xor
sbb
movsb
leave
add
outsb
mov
xchg
subl
xchg
out
pop
mov
cmp
adc
lcall
mov
sub
shrb
dec
fldenv
aaa
inc
les
cltd
sub
movsb
and
nop
add
clc
aad
pop
sub
adc
jnp
and
out
inc
lret
bound
jecxz
scas
cmp
jae
fisubrs
mov
lods
mov
cmp
mov
scas
cwtl
xlat
mov
push
cwtl
mov
dec
loopne
and
int3
push
ljmp
cmp
jb
xchg
cmpsl
or
sbb
fisubrs
jmp
ror
xchg
xchg
xor
mov
dec
or
mov
das
shr
push
jb
mov
lret
sbb
imul
int
xor
es
pop
stc
mov
into
gs
mov
mov
repz
bound
push
lret
cmc
fs
das
stos
lret
push
add
lods
addl
enter
add
mov
jmp
les
stc
aam
loope
or
mulb
xchg
in
and
hlt
cltd
rorb
sarb
inc
sbb
adc
fistpl
push
js
outsl
pop
loop
mov
push
xchg
adc
dec
dec
pop
lods
push
inc
xchg
or
in
mov
cmp
xchg
mov
sub
or
or
aam
repz
inc
shlb
cltd
add
xor
stc
xor
lods
xor
jmp
test
test
test
xchg
mov
daa
pop
lea
mov
adc
push
fwait
pop
fiaddl
mov
mov
cs
dec
jge
inc
in
mov
test
push
push
cmpsb
jnp
and
jb
outsl
lret
int
cmp
cmpb
push
aaa
pop
mov
test
mov
ds
iret
dec
cld
or
mov
cwtl
rcrl
pop
arpl
sti
xchg
sbb
and
sub
mov
cmp
and
xchg
sub
arpl
sub
negb
push
in
les
stos
pop
clc
mov
mov
int3
imul
xchg
rcrl
ja
add
repnz
outsb
pop
in
xor
or
dec
jae
jecxz
int3
inc
je
pop
test
fcmovb
cltd
jmp
inc
or
pop
mov
jb
mov
mov
xchg
cmp
cwtl
inc
push
dec
psubq
mov
xchg
sbb
mov
jge
xor
stos
in
aas
cld
xchg
ret
into
cmp
daa
cmpsb
in
xor
rorb
leave
pop
arpl
mov
mov
pop
jg
aad
insl
push
xor
push
pop
fucom
xchg
int
js
fiaddl
or
shrl
repz
mov
jle
mov
xlat
lcall
inc
test
sahf
sti
mov
jns
ret
adc
ret
test
aam
je
mov
mov
daa
int
jp
jl
ljmp
dec
fldt
fs
outsl
dec
adc
pusha
jae
lds
push
adc
cmp
or
pushf
and
bound
push
sub
lret
outsl
xor
je
arpl
inc
lods
negb
fldl
and
leave
mov
subb
enter
jle
fdivs
xchg
mov
inc
xlat
dec
add
cmpsl
popf
in
out
push
or
lcall
fdiv
lods
and
imul
pop
jns
out
xchg
stos
pop
jp
ds
push
loopne
mov
test
dec
adc
mov
sbb
fdivrp
sub
arpl
out
push
fstl
sbb
iret
fsubrl
sub
sahf
shll
pusha
aaa
daa
and
cli
jns
inc
lods
clc
jge
repz
and
push
outsb
aaa
sub
lock
call
and
pop
xchg
out
rcrl
int
popa
cwtl
mov
cmp
loope
int
das
mov
or
and
mov
pop
scas
fistpll
lret
and
ja
movsb
inc
xor
push
push
fldl
xchg
or
pop
les
xor
mov
testb
stos
es
inc
enter
or
lods
mov
push
push
pop
repnz
push
fisubl
add
mov
dec
loopne
mov
mov
xor
dec
cli
movsl
fnstcw
into
popf
shrl
inc
or
test
xchg
lahf
mov
jnp
sub
xchg
dec
lahf
bound
or
incl
pushf
js
xchg
stos
dec
cmp
xchg
into
inc
inc
fiadds
push
mov
rcl
jns
dec
mov
add
inc
test
mov
les
imul
xchg
xor
adc
push
add
je
shl
jmp
sub
xchg
mov
push
negb
test
ret
and
pop
shll
ret
outsl
mov
repnz
jg
and
movsl
cld
sub
sar
test
push
scas
sbbb
subb
int3
mov
ss
clc
xchg
mov
sahf
aas
inc
sub
pusha
lret
aam
add
lahf
std
and
mov
mov
ja
mov
les
xor
jae
and
fwait
loop
pop
iret
andb
test
out
movsl
xor
movaps
jecxz
iret
fldcw
stos
dec
cs
cli
mov
lods
mov
mov
std
clc
in
test
popf
scas
cmp
lock
xchg
addb
cmpsl
cld
or
subl
and
xchg
out
mov
push
clc
push
and
or
shlb
xlat
xorl
scas
pop
jnp
add
jge
mov
mov
loope
or
xor
push
dec
xchg
outsl
sahf
mov
xchg
add
xchg
call
cli
mov
cs
jbe
mov
sub
insb
xor
out
cmp
das
push
or
mov
push
mov
fwait
testb
jae
inc
fidivs
jne
mov
mov
shll
gs
pusha
into
cltd
cmp
or
ret
or
leave
jge
es
sub
cmpsb
xor
mull
jmp
lds
aaa
lret
or
scas
sub
push
sub
rcll
sub
jb
movsb
mov
pop
mov
cmp
sub
clc
inc
pushf
push
outsl
popa
stos
pop
int3
movsb
cmp
sub
hlt
push
cmpsl
iret
push
cmp
xchg
les
cltd
cmp
jns
jmp
fildl
movsb
aad
aam
int
inc
inc
imul
daa
xor
sub
push
popa
jno
sub
ud0
xchg
xchg
insl
orb
jp
test
inc
push
add
into
sahf
addr16
scas
andb
ret
sub
cmp
cmp
mov
xchg
and
cmp
sub
or
lods
xor
outsl
dec
push
inc
cmp
ja
in
loop
stos
nop
data16
xor
sub
mov
fs
ret
dec
cmpb
cmp
int
push
stos
pushl
or
mov
outsl
xchg
insl
cltd
or
jecxz
mov
into
dec
add
sbb
outsl
sbb
movsl
push
movhps
cwtl
fsubr
test
inc
xchg
mov
jecxz
imul
scas
add
push
in
std
nop
sbb
push
test
xchg
int3
aam
test
mov
nop
pop
mov
jne
or
lods
add
fdivp
nop
js
adcl
mov
imul
aas
ret
mov
jne
int3
adc
sbb
icebp
pop
dec
stos
sub
lahf
pop
fcoms
dec
movsb
add
cmp
xor
or
cs
mov
cli
mov
inc
mov
clc
xchg
adc
data16
cli
add
cmpsb
adc
pusha
in
or
sub
or
aas
add
cwtl
cmp
mov
jl
sahf
mov
psrlw
movb
aaa
aam
adc
ds
notb
ret
cmp
mov
hlt
enter
pop
mov
cmp
daa
das
stc
pop
in
sbb
jmp
fcmovnbe
cmp
pop
movsb
inc
xchg
cmp
or
pusha
cmc
xchg
and
insl
dec
inc
into
in
xor
xchg
mov
xor
xchg
lret
cmp
je
inc
jb
scas
imul
xorl
add
pop
imul
push
add
and
sub
push
shll
mov
sub
scas
sub
inc
xchg
inc
les
fmull
xchg
gs
cmp
lock
test
mov
icebp
inc
fisubrs
and
push
subb
rorl
pop
in
sbb
cmp
stc
pop
pop
adc
movsl
jb
and
leave
jb
ljmp
cmpl
je
stos
inc
aaa
inc
xor
orb
fnstenv
gs
sahf
shrl
mov
ss
sub
and
lcall
call
pop
dec
mov
mov
pop
dec
ss
inc
test
enter
dec
sti
outsb
pop
jnp
or
mov
cmp
das
clc
cmp
out
daa
cmc
inc
mov
iret
jg
in
pop
fwait
push
idivb
hlt
pop
pusha
pop
pop
pushf
dec
dec
cmp
lds
inc
rcll
scas
movsb
cmp
pcmpgtd
outsb
lret
shll
jnp
jns
icebp
std
push
fistpll
fisubs
imul
xlat
sub
pusha
push
push
lret
pop
lea
shlb
insb
cmp
mov
jmp
dec
in
mov
adc
sub
les
stc
call
lret
cmp
xchg
mov
flds
mov
xor
lcall
jns
adc
daa
inc
jge
scas
push
mov
leave
dec
lcall
jne
adc
mov
mov
nop
clc
jmp
jnp
lock
data16
nop
cmp
jmp
pop
mov
dec
cmp
pushf
push
dec
fisttpll
push
popl
cmpb
dec
cmc
xchg
mov
in
popl
lods
insl
xor
mov
fidivrs
popa
dec
cbtw
jg
inc
leave
enter
insl
insl
push
inc
jg
scas
shl
sbb
cmp
rclb
arpl
mov
adc
iretw
sbb
push
sti
sub
dec
gs
sbb
int
mov
insl
into
in
mov
fcoml
or
pop
xorb
xor
xorb
pop
mov
xlat
jle
repnz
lods
ficompl
in
sbb
insl
fwait
movsl
sub
jg
dec
fcompp
imul
enter
cmc
mov
inc
lea
arpl
lock
xchg
pop
push
inc
scas
push
pop
pop
jp,pt
pop
jne
cmp
and
sti
scas
scas
xchg
sbb
bound
mov
mov
cmc
pop
inc
mov
sbb
in
pop
jns
arpl
mov
outsl
push
inc
pop
push
inc
fisubrl
out
inc
fmuls
mov
sti
enter
jecxz
loopne
je
lods
addl
leave
mov
mov
out
lds
mov
sub
jl
lret
cmp
int
or
pop
test
fdivs
and
xor
xchg
adc
xor
or
sbb
and
or
sub
mov
fistl
pop
das
nop
jmp
push
xchg
add
cmpsb
inc
lds
or
sahf
add
fld
and
std
mov
xor
lahf
lahf
cmp
mov
lea
xor
movsl
cmp
push
sub
jne
sbbb
rep
popa
mov
das
adc
cmp
lds
jne
cmc
lods
mov
push
jne
insb
outsl
stos
les
mov
mov
je
hlt
or
mov
test
xlat
inc
out
mov
mov
cwtl
movsb
aas
dec
push
lods
mov
out
mov
adc
push
dec
fistpl
sbb
sub
notl
pop
in
les
jne
push
es
jmp
sub
and
add
repz
add
addl
loop
add
inc
pop
das
dec
rcrb
enter
scas
adc
mov
mov
lds
push
inc
leave
sbb
es
xor
addb
stos
or
jl
sti
lea
pop
fisttps
mov
or
cmp
push
out
ss
sbb
fmulp
xchg
int
fimuls
popf
and
mov
popa
lods
mov
push
xor
inc
mov
sahf
mov
and
jp
xchg
fucomip
leave
call
fcmovbe
jle
mov
push
fsubs
sbb
mov
pop
or
fnstcw
inc
or
push
shll
jl
in
sbb
cmp
jns
jge
pop
aam
pusha
jp
inc
ror
sub
adc
lods
stc
popa
imul
outsb
movsl
pusha
cwtl
add
fisttpll
jp
bound
or
ss
jmp
mov
pusha
jecxz
pop
jmp
xor
in
leave
out
pop
cmp
addr16
das
and
mov
or
mov
mov
lods
leave
mov
movsl
pop
jae
jae
lods
mov
pop
mov
xchg
ret
fwait
ret
pop
or
pop
pop
xchg
jmp
movsb
fwait
xorb
mov
or
xchg
cmp
js
mov
xchg
outsb
mov
int
push
es
stos
push
or
out
inc
mov
cli
int
in
aam
mov
fnsave
sahf
pop
xor
fidivrs
cmp
xchg
cmc
sub
inc
test
add
ret
arpl
negb
pop
xchg
stc
xorl
pop
and
ficoms
sbb
xchg
mov
ss
icebp
dec
ds
sub
faddl
jmp
stc
sub
std
add
sbb
popf
icebp
xchg
ret
pushl
jecxz
sbb
insl
xchg
fs
jg
movsl
push
stos
or
mov
xlat
aaa
push
mov
int3
int
test
mov
inc
clc
out
icebp
call
mov
bound
es
les
outsb
sbb
jecxz
scas
lret
stos
xchg
shrb
sub
add
loopne
pop
inc
repz
push
mov
aam
pop
sub
loopne
sbb
shlb
test
test
aaa
xor
cld
nop
popf
xor
and
sbb
fwait
cltd
lods
xor
shlb
sub
xor
pop
push
out
pop
std
pop
imul
pop
jno
cltd
lods
adc
testl
jnp
pop
cli
push
mov
test
push
rcr
pop
mov
dec
mov
add
in
icebp
jno
lret
ficoms
rcrl
xchg
adc
imul
inc
adc
mov
in
insb
movsl
std
cmpsl
insb
out
ret
lahf
out
and
or
adc
xor
dec
lret
and
data16
mov
jecxz
fsts
call
and
or
push
adcb
aas
jmp
xchg
push
mov
loopne
sub
repnz
das
sub
push
je
bound
xchg
stos
and
mov
xchg
in
mov
mov
jmp
xchg
or
xchg
lret
cmp
add
mov
test
pop
push
out
push
js
and
lods
push
jbe
aam
mov
mov
push
into
fs
add
inc
sbb
rcrb
out
add
push
fucom
or
nop
adc
shlb
clc
mov
mov
inc
pop
xor
js
xor
enter
in
mov
insl
fucom
ljmp
adc
in
into
xlat
aam
test
mov
stc
cld
xor
mov
outsb
addr16
jmp
mov
push
or
fstpt
adc
sub
loope
xchg
repnz
mov
push
inc
dec
insb
pusha
adc
jo
jmp
push
xlat
mov
push
popa
ret
sbb
push
in
cmp
jge
sub
adc
sub
pop
imul
add
jp
mov
mov
decb
mov
cmp
out
jg
scas
xchg
mov
sub
out
ljmp
popa
push
mov
xchg
cli
test
sbb
xor
cmp
ret
pop
movsl
jnp
pop
dec
dec
mov
dec
out
cwtl
xchg
and
les
jb
leave
js
and
testb
mov
testl
jno
dec
push
clc
imull
push
js
sub
into
pop
cmp
dec
idiv
xchg
and
loopne
jle
add
je
loop
lcall
test
sbb
enter
pusha
loope
cltd
sub
jns
fcoms
ret
xchg
xor
inc
or
lret
lea
and
jecxz
out
dec
clc
cld
cmc
pop
xchg
mov
cmc
sub
jmp
push
bound
std
pop
in
ss
or
pusha
mov
das
add
cmp
sbb
add
stc
fstl
and
cmp
push
cmp
xlat
les
cmp
xchg
lcall
js
addr16
mov
repz
push
hlt
push
cmp
jmp
or
jno
scas
outsl
adc
and
clc
mov
mull
adc
bound
ret
cmp
lret
cmp
arpl
fwait
aam
lsl
int
mov
sbb
jns
add
add
les
cld
hlt
jp
cs
push
icebp
or
ret
scas
std
test
mov
add
pop
jbe
cld
dec
fildll
pop
outsb
popf
aam
mov
add
pushf
jns
dec
mov
out
lods
and
adc
hlt
mov
movsl
out
in
push
pushf
mov
jne
mov
sbb
push
test
mov
outsl
andl
mov
sub
or
jle
cmp
sti
adc
xchg
push
fstl
stc
test
pop
pop
mov
mov
inc
mov
or
sub
lret
mov
mov
stos
lods
xchg
push
mov
arpl
jb
movsb
daa
iret
cmc
scas
mulb
xor
add
leave
rcr
cmp
mov
roll
mov
es
into
je
iret
mov
inc
push
int
cmp
lret
inc
inc
sub
fwait
dec
jl
or
nop
sub
push
fldenv
push
sti
sbb
ret
test
mov
fldt
pop
pop
loopne
xchg
popf
enter
lods
fsts
add
or
rcll
cmp
cmpsl
rol
ret
add
pop
es
aam
or
mov
aaa
pop
aam
and
imul
mov
in
sub
jb
ret
fildl
les
shl
cmp
rcll
push
push
xlat
cmpsl
lods
inc
mov
adc
mov
inc
orl
mov
ret
add
jnp
bnd
jecxz
push
adc
inc
xor
jne
jl
push
ss
xor
or
fdivrl
pop
jecxz
das
xor
dec
into
jne
lcall
loopne
scas
imul
sbb
cmp
jnp
inc
bound
pop
jmp
mov
cmc
das
int
lods
inc
js
in
gs
mov
es
addl
adc
sbb
por
lds
int
cmp
cmp
pop
mov
or
jb
sub
mov
rcll
lahf
in
enter
xchg
es
test
leave
cmp
push
test
push
cmp
jl
inc
cmp
adc
lods
and
mov
pop
dec
jle
mov
lret
repz
mov
sub
clc
inc
xchg
push
je
daa
es
xchg
dec
sbb
dec
je
nop
dec
adcb
push
and
or
dec
dec
sbb
cwtl
xchg
xor
push
repnz
adcl
out
movsl
insl
ljmp
inc
rolb
shlb
fcompl
fs
in
scas
jb
dec
fcoms
adc
xor
cmc
mov
insl
push
lods
js
push
push
aas
outsb
jl
addr16
push
fcoml
addr16
mov
notl
or
int
jae
outsl
push
mov
xlat
bound
push
fisubs
int
cmp
cvtps2pi
add
pushf
push
push
stc
xor
lds
repz
das
aaa
std
jmp
dec
sub
pop
insl
inc
lcall
cli
scas
cmp
fwait
lcall
sbb
mov
fcomip
rcrl
pop
add
lahf
into
loope
mov
mov
push
adc
pushl
mov
or
das
xorl
ret
adc
cmpsb
cmp
sti
push
inc
push
movsb
fsubrp
adc
insl
addr16
insb
daa
push
push
jge
fcmovu
std
ror
call
jnp
or
pop
mov
dec
mov
or
out
mov
int3
out
mov
mov
mov
ja
push
and
pop
mov
pop
pop
adc
and
in
xor
xchg
out
roll
ja
aaa
out
xor
cld
hlt
call
inc
in
inc
jg
push
xlat
xlat
mov
push
mov
popa
or
or
and
mov
outsl
pop
xchg
pop
mov
add
jns
lcall
cwtl
nop
sbb
imul
insb
add
push
loopne
das
jo
data16
pop
push
imul
es
dec
leave
inc
cli
and
mov
scas
add
or
mov
les
inc
adcl
pop
adc
in
dec
cmc
or
sbb
aam
jp
xor
int3
js
stc
sub
fs
xor
pop
adc
inc
jle
hlt
adc
jno
push
shrb
clc
lret
jae
mov
dec
cld
xor
xchg
push
push
add
sahf
cmpb
test
add
push
aaa
std
mov
mov
ret
dec
ret
insl
fidivs
pop
jecxz
push
adc
test
pop
adc
jb
xlat
jbe
mov
sarl
fadd
fnstenv
aad
imul
or
int3
negl
xchg
insl
int
cmpsb
sbb
lock
inc
pop
pop
xor
shl
xchg
aaa
in
push
mov
mov
mov
sbb
push
hlt
xchg
loope
mov
xor
pop
out
out
ljmp
jmp
imul
push
lds
repz
mov
je
cmc
sub
mov
ret
cmc
pop
leave
fdivs
push
mov
mov
jg
adc
cwtl
outsb
pop
jmp
jecxz
jecxz
dec
addr16
cmp
lds
ljmp
pop
cmp
stos
jl
sahf
ljmp
sub
jb
lea
fiadds
mov
xor
jmp
aaa
cltd
adc
je
loopne
cmp
mov
cmp
push
je
mov
fcoms
mov
cmp
jne
nop
test
or
sub
fadds
pushf
outsb
jno
sarl
fcmovu
sub
ficompl
or
jmp
or
push
aad
adc
push
call
in
lret
jo
cmp
sub
dec
pop
or
pop
test
rorl
lods
mov
ds
daa
sub
sbbb
jecxz
and
scas
add
sub
fsqrt
fnstcw
mov
inc
sub
sbbl
mov
js
add
xchg
adc
rcrb
jb
mov
outsl
bound
mov
mov
popl
push
stc
and
push
pusha
jmp
cmp
rclb
jnp
fbld
jge
jmp
nop
ret
mov
das
jb
gs
cwtl
pop
dec
adc
push
mov
sbb
mov
in
xchg
call
cltd
aaa
or
xchg
cltd
cmp
ds
pop
imull
jp
or
lret
push
test
and
dec
cmp
mov
mov
ret
xchg
dec
sub
cmp
jg
push
cmpsl
bound
subb
xchg
es
adc
inc
scas
pop
std
fistps
mov
mov
mov
adc
add
push
bound
mov
sbb
out
test
lcall
fwait
jg,pt
testl
push
xchg
mov
ja
pop
sti
iret
fcomps
inc
in
out
or
and
nop
pop
and
mov
xor
sbb
add
xchg
stos
jle
adc
and
insb
cwtl
push
sti
xchg
pop
mov
and
pusha
xor
jl
cld
fmull
mov
loop,pt
xor
addr16
fisubrl
push
mov
je
cli
mov
ljmp
mov
dec
dec
dec
inc
lahf
push
imul
sahf
mov
xlat
in
aaa
jge
xor
cmp
jle
lahf
aam
cmp
ljmp
push
add
aaa
push
imul
jo
and
icebp
popf
jmp
or
cmp
pop
adc
mov
outsb
dec
xchg
sti
and
jecxz
sbb
aaa
ds
mov
shll
adc
out
sahf
jne
sub
push
ja
loop
pop
les
inc
mov
sahf
mov
sti
or
adc
es
aaa
hlt
loopne
lods
aas
int
inc
push
xchg
call
pop
scas
jnp
mov
push
jmp
std
pop
mov
xchg
insl
outsb
popa
out
jne
inc
insb
addr16
jmp
mov
bound
incb
mov
sbb
cli
mov
stc
push
dec
xchg
stos
enter
mov
dec
or
jno
cltd
add
cmpl
mov
out
out
jl
or
inc
dec
dec
dec
leave
pop
fsubrs
or
sbb
mull
sbb
sub
add
or
bnd
fs
sahf
repz
shlb
out
lods
sbb
jge
in
jmp
das
cmp
push
xor
jno
cmp
or
xchg
xor
xlat
vcomiss
test
push
iret
les
jp
sbb
inc
sbb
and
push
jmp
out
popa
xor
sahf
sub
test
into
dec
dec
lds
push
test
addr16
add
add
cld
xchg
xor
sub
pop
rorl
outsl
sti
inc
cmp
fcmove
dec
xor
popl
mov
mov
rcrl
jae
sbb
cmpb
cltd
adc
push
mov
inc
xor
subb
xorl
cmc
es
fbld
pop
sbb
mov
shl
mov
popa
cli
int
jge
in
adc
inc
int
insb
insb
and
test
pop
sbb
and
push
and
cmpsb
cmc
iret
int3
adc
mov
sbb
add
mov
insb
pushf
mov
aam
in
rcll
in
sbb
inc
jbe
ja
ja
sbb
test
cmp
mov
cmpsb
adc
and
movsb
lds
xor
testb
pop
push
inc
or
insl
cmpsl
jmp
mov
dec
cmc
dec
pop
jbe
add
dec
test
push
push
hlt
inc
ret
mov
xchg
adc
gs
test
push
dec
ficoms
iret
xor
inc
or
jmp
movsb
inc
pop
aas
inc
push
push
test
fiaddl
lcall
in
bnd
mov
cltd
or
cmc
cmp
movsb
inc
and
out
mov
lret
push
push
mov
scas
fsubr
dec
mov
mov
mov
jnp
push
aaa
dec
stos
fwait
in
addr16
ret
lret
xchg
push
push
xor
push
pop
test
sahf
bound
movsb
popa
mov
cmp
sub
inc
or
add
push
jno
lcall
imulb
rcll
or
push
movsb
mov
cmc
sbb
sub
cs
xor
cmc
negl
daa
pusha
jmp
dec
add
mov
pusha
mov
pop
jle
push
cli
andl
shlb
pop
inc
or
test
dec
inc
pop
iret
pop
imul
cmpb
data16
xchg
imul
dec
add
mov
add
pop
or
in
rclb
stos
sahf
mov
ret
pop
dec
scas
sti
jmp
lret
xchg
jne
inc
sbb
adc
iret
or
push
xchg
insl
xchg
mov
mov
inc
xor
subb
fcompl
dec
inc
divb
cmp
jecxz
lret
lods
in
fwait
jbe
int3
adc
stc
mov
stos
add
dec
lods
push
push
popl
int3
sahf
xchg
int
xor
scas
inc
mov
mov
mov
std
inc
shlb
inc
inc
unpcklps
dec
cltd
inc
mov
fmuls
rcrl
js
mov
pop
push
adc
push
insb
mov
cs
lods
add
mov
mov
pop
rolb
jle
std
outsb
rclb
xor
dec
xlat
sub
arpl
adc
dec
jmp
adc
mov
in
in
add
push
jae
loopne
push
adc
loopne
jge
xchg
cs
cmp
inc
cs
ds
fldt
pop
pop
sbb
rcrl
add
dec
fmull
mov
cs
movsl
iret
push
dec
cmpb
ret
mov
sti
loope
into
lret
push
ret
into
test
mov
insl
push
jmp
nop
cld
sbb
ja
enter
or
in
popa
and
loop
fldt
mov
aad
lret
mov
xchg
lods
out
fdivrs
cmpl
push
stc
dec
mov
and
push
es
outsl
mov
sub
inc
jl
xor
xor
mov
mov
mov
mov
fdecstp
fidivrs
cmp
sti
cmp
inc
inc
fisubrs
mov
test
cmp
jo
mov
jmp
and
mov
or
pop
gs
add
aad
fwait
sub
push
dec
push
mov
sahf
jg
push
js,pt
sbbl
fistps
dec
pop
adc
lds
mov
push
test
daa
out
mov
xchg
and
loope
add
adc
dec
pop
testl
faddl
xor
mov
nop
ret
popf
sbb
mov
push
and
cltd
mov
mov
xor
loopne
bound
adcb
nop
int
adc
mov
jno,pn
push
sarl
inc
jnp
faddl
out
or
repnz
cmpsl
scas
pop
repnz
lea
jp
lods
cmpsl
fmull
mov
and
ret
in
in
xchg
fiadds
mov
out
jl
lret
xchg
push
in
pop
call
fcompl
mov
les
mov
add
rorl
arpl
sub
inc
xor
imul
imul
xchg
jge
mov
sahf
cmc
rcrb
clc
adc
cmc
mov
jl
negb
sahf
popa
lds
shrb
arpl
cmp
in
outsb
mov
fs
in
mov
int3
sti
inc
movsb
sbb
adc
pop
mov
into
sahf
jne
dec
hlt
lds
xor
dec
inc
ret
fistpl
jl
test
push
xchg
mov
shrb
cmp
inc
mov
shr
mov
stos
or
xchg
or
jbe,pt
roll
les
daa
cmpsb
loopne
rolb
idivb
adc
sub
test
xlat
out
rcrb
and
aam
jbe
pop
xchg
pmaxsw
cmpsb
push
push
ret
scas
xchg
arpl
inc
cmpsb
shrl
cwtl
mov
inc
adc
mov
in
leave
nop
push
test
or
push
aas
mov
push
sbb
mov
xchg
adc
lods
popa
pushf
sbb
ds
out
popf
xchg
imul
ljmp
sbb
sbb
xchg
push
lods
xchg
adc
pop
and
adc
lahf
js
sub
xor
cmc
cmp
inc
cli
hlt
sahf
iret
pop
push
pop
cwtl
idivl
pop
xchg
xor
dec
lret
testb
add
sbb
daa
subb
pop
xor
mov
sbb
test
in
inc
in
xor
sub
fnstsw
out
std
sub
push
sub
pop
xchg
inc
cmp
jle
test
mov
repz
andb
or
push
repz
scas
push
mov
push
add
jmp
sbb
int
or
xchg
push
lods
or
inc
and
shll
jno
mov
shl
xorb
or
in
jo
es
dec
daa
ja
rorl
xor
jnp
and
fld
fstpl
mov
data16
dec
dec
sub
xchg
adc
dec
inc
add
test
daa
push
mov
notrack
inc
adc
or
sbb
in
insb
orb
leave
mov
gs
or
cmp
mov
leave
inc
movsb
xor
in
je
sbb
cmc
push
repz
shl
dec
jns
js
cmpsl
loopne
lahf
pusha
xor
mov
inc
mov
pop
xchg
pop
shrb
sub
xor
mov
jp
fsubs
test
call
pop
mov
test
sub
orb
sbb
je
adc
sbb
sbb
inc
xor
xchg
or
mov
adc
mov
sub
int3
push
loopne
leave
lds
aam
or
pop
mov
push
mov
mov
scas
lcall
dec
outsl
mov
dec
in
icebp
sar
mov
mov
mov
push
pop
int
jae
stos
fsts
scas
mov
pushf
jmp
fmuls
lea
sbb
mov
lock
mov
fst
push
jo
mov
ds
push
dec
cmp
inc
scas
scas
xchg
repnz
add
pushl
rcll
mov
daa
sub
push
pop
jge
lahf
dec
lock
mov
sub
xlat
mov
jge
mov
mull
test
test
cmp
mov
and
xor
push
dec
mov
push
lods
mov
lcall
sub
es
outsl
mul
fiadds
or
mov
dec
pcmpgtb
add
lods
push
inc
lretw
mov
inc
and
scas
mov
stc
sbb
lcall
jb
ret
les
jnp
jno
shr
mov
addr16
mov
cltd
add
cld
push
les
insl
mov
xor
sbb
mov
jae
lcall
fisttpl
cmp
sbb
aaa
lret
test
int3
xor
pop
faddl
leave
add
repz
sbb
cld
xor
aam
into
sti
mov
das
clc
dec
adc
iret
mov
xchg
push
daa
mov
dec
je
out
xor
sub
sub
lds
sub
jl
rorb
lds
push
mov
test
sbb
dec
sbb
sub
xchg
adc
jns
sbb
daa
mov
or
ret
push
mov
push
jl
cld
aam
mov
sbb
loopne
xor
and
mov
mov
push
cmp
mov
dec
sbb
cmp
mov
mov
int
repnz
enter
dec
pop
dec
xor
mov
push
jnp
pop
sahf
aas
push
in
popf
mov
lret
outsl
pop
mov
jo
arpl
jo
andl
iret
pop
adc
icebp
lret
lahf
std
ret
addr16
mov
and
bound
push
pop
mov
cld
cmp
fisubrs
hlt
sahf
xchg
sbb
sbb
add
pop
mov
addb
sbbb
jle
test
lock
cmp
push
jmp
into
dec
add
dec
lods
mov
shl
mov
gs
sbb
pop
aad
repz
push
popf
jecxz
pop
mov
mov
lds
mov
pop
das
sbb
or
inc
and
mov
test
dec
out
or
xchg
cltd
lret
jecxz
pop
push
mov
loop
jg
push
xchg
mov
sahf
fisubrl
in
mov
and
xor
outsl
dec
data16
loope
clc
loope
movsl
lea
and
xor
jns
and
jg
in
ds
sub
fwait
mov
mov
jp
inc
xchg
wbinvd
outsb
and
into
jg
mov
jp
pushl
stos
dec
mov
rcrl
or
pop
jl
adc
jbe
fisttpll
icebp
stos
adc
cmpsb
cld
inc
push
adc
mov
repz
pop
retw
jb
sub
mov
xor
jnp
xor
stos
into
orb
pop
xchg
pop
rcrl
stos
fldenv
insb
testl
repz
aam
mov
notb
cwtl
imul
lret
mov
test
inc
lret
loop
adc
loop
push
loope
aad
adc
jne
test
jle
cld
mov
jno
push
cmp
pop
lock
out
rolb
mov
jns
ljmp
xchg
loopne
stos
cmc
xlat
std
mov
out
jp
xor
into
pop
push
icebp
push
sub
jge
roll
data16
push
dec
mov
inc
push
mov
je
out
add
xor
scas
sbb
xlat
aam
adc
jns
iret
pop
sub
push
and
mov
mov
pop
inc
xchg
and
mov
jp
fldl
in
xor
xchg
dec
or
mov
mov
in
push
and
jle
ss
bound
mov
cmp
sub
add
les
dec
into
gs
and
mov
cmp
mov
inc
nop
das
je
and
xchg
fistpl
imul
dec
imul
mov
xor
dec
inc
mov
icebp
add
add
push
mov
enter
jmp
jnp
push
cmp
sbb
arpl
pop
ljmp
xor
pop
icebp
ret
fldcw
inc
mov
lea
xchg
push
jnp
jb
fisttps
fmulp
dec
negl
ror
sbb
out
mov
push
lock
inc
aas
xchg
mov
inc
adc
jmp
in
and
push
jnp
clc
jnp
shl
xchg
pop
out
gs
call
not
pop
test
dec
xchg
popf
popf
subl
nop
js
adc
inc
push
dec
push
inc
fs
cmpsb
xor
int
pop
push
or
pop
cmc
data16
test
fwait
mov
mov
inc
out
aaa
sub
ds
push
sub
dec
out
pop
mov
scas
pushf
arpl
out
data16
or
pop
or
in
jle
push
add
add
push
adc
sbb
adc
js
adc
out
fstl
mov
xlat
dec
push
mov
hlt
mov
mov
loope
push
add
scas
inc
sub
xchg
and
and
lcall
jl
leave
push
inc
std
pop
lret
in
adc
in
mov
aad
inc
sub
popw
rorb
mov
xchg
or
shl
shll
fnsave
xor
add
xchg
fwait
not
mov
arpl
pop
out
jmp
inc
xor
mov
std
dec
cmpsl
mov
jb
js
adc
fs
lret
sub
cmpsb
xchg
jo
es
push
cmp
pop
repnz
popf
mov
lahf
stc
sub
int
push
mov
out
jns
push
adc
sub
or
mov
sbb
jl
lahf
stos
sbbl
or
lcall
inc
movsb
adc
inc
xchg
mov
jo
or
mov
je
xchg
jns
cmp
inc
pop
ljmp
pop
push
jno
xor
rclb
pushfw
inc
ss
xchg
xchg
fldenv
jp
mov
stc
and
sar
dec
pop
adc
jae
add
out
lods
das
add
mov
mov
nop
ja
cmp
xor
inc
mov
loope
or
sti
inc
outsl
lods
call
js
jo
cmp
add
cmpsb
jnp
cmc
popf
or
mov
mov
call
insb
dec
fs
dec
mov
shr
push
jge
jge
nop/reserved
nop
rorl
and
popa
dec
addr16
inc
ja
stc
aad
and
pop
add
and
fwait
idivb
pusha
sub
repz
mov
cmp
nop
and
addb
dec
sbb
mov
jge
call
sbb
fisubl
ljmp
ds
dec
lea
lahf
sti
and
push
cmp
jae
into
and
ds
dec
data16
fiadds
fildl
or
mov
lret
add
xchg
icebp
jecxz
cs
dec
inc
rorb
jl
or
dec
push
mov
add
lds
loop
loope
lcall
movsl
mov
in
and
xchg
stos
sbb
sub
outsl
addr16
repz
and
jns
pop
ja
push
xor
pop
pop
iret
or
mov
popa
mov
pop
cmpsb
stos
sbb
pusha
push
cwtl
jle
out
or
outsl
push
ret
in
out
adc
lahf
sub
dec
inc
cmp
and
popa
dec
inc
movl
iret
xchg
shlb
andb
cmp
cmp
xorb
dec
mov
dec
subb
neg
cld
adc
cmp
jge
inc
mov
mov
jecxz
scas
sbb
push
add
add
pop
mov
xor
movsb
cmp
xchg
aas
sbbl
xlat
cmc
pop
sbb
call
mov
push
or
pop
push
fs
in
scas
dec
mov
xor
aad
popa
cwtl
xor
hlt
pusha
or
xor
shrl
arpl
int3
fstpt
mov
adc
dec
mov
mov
ret
ds
push
mov
insb
and
sub
faddl
out
fimull
sbb
call
xchg
pop
repz
add
test
dec
enter
bound
stos
fwait
inc
movsl
push
in
push
nop
fsubs
cmc
push
xorl
leave
sbb
out
cmpsl
add
add
add
xchg
inc
mov
mov
popa
and
push
repnz
ret
int3
add
cmpsb
jae
cmc
xchg
call
xchg
jne
pop
lds
inc
dec
and
jecxz
movsb
dec
or
lcall
xchg
repnz
push
push
outsl
xchg
jns
lods
cmpsb
mov
add
inc
adc
popf
xchg
shl
jl
and
pextrw
cwtl
adc
cs
and
lock
aaa
pusha
sbb
sbb
push
out
sbb
push
rolb
mov
cwtl
mov
mov
or
cwtl
xor
push
cmp
jns
sub
add
cmp
push
arpl
ficoml
call
jb
or
mov
pop
lea
shlb
stc
cmpl
pop
xor
out
adc
lock
mov
sub
les
frstor
cli
push
xchg
testb
es
iret
push
jecxz
jg
out
and
int
pushw
divb
test
outsb
cmovns
rcrl
repz
ja
pop
add
pop
dec
mov
push
lea
sbb
mov
adc
rsm
dec
mov
shlb
addr16
repz
lret
pop
mov
pop
inc
dec
lea
pop
ficompl
out
adc
mov
push
cmp
inc
faddl
stc
enter
fsubl
push
inc
fldt
pushl
jle
out
mov
ljmp
mov
jmp
mov
mov
fistps
ret
xor
push
int3
imul
xchg
ret
pop
mov
daa
sub
out
pop
and
mov
adc
fildll
or
lret
pusha
add
mov
repz
cltd
push
out
aam
subl
lahf
out
cmpsl
xchg
subl
loopne
pop
pusha
mov
mov
add
or
leave
addr16
je
les
or
fdivrs
lret
push
loope
mov
adc
pop
fwait
add
cmp
adcb
or
int
adc
or
shlb
lea
cs
jecxz
inc
jbe
mov
ja
pop
jge
ficompl
mul
mov
jmp
inc
push
out
mov
mov
dec
xchg
or
insb
pushf
out
mov
push
xchg
push
sub
add
fbld
fldl
cmp
rcr
out
pop
push
scas
sbb
adc
xor
bound
data16
call
aad
cmp
jae
sub
xor
insb
fidivs
mov
xor
cmp
cmp
outsl
divl
fsubr
jmp
rcrl
adc
adc
mov
fcomp
xor
push
push
sti
mov
sbb
shl
testb
mov
xor
xchg
mov
pop
mov
push
popa
aas
mov
jbe
aas
mov
cmpsl
sub
roll
jne
arpl
lea
sbb
jb
sub
iret
lret
jg
jno
ss
xor
jp
mov
mov
test
popf
mov
int3
bound
jnp
push
and
jmp
repnz
testb
mov
and
xchg
and
dec
pop
inc
or
or
and
faddp
dec
and
subl
das
push
lods
add
scas
ss
lock
xchg
ret
push
push
test
push
insb
in
jbe
lds
movsl
and
inc
cmp
movsb
outsl
sbb
add
mov
push
jmp
fwait
ret
or
adc
push
mov
xchg
icebp
push
xchg
dec
loopne
mov
mov
pop
stos
lahf
cmovge
fisubs
mov
mov
in
xchg
subb
sbb
jbe
mov
sahf
mov
orb
and
add
jmp
fisubs
adc
mov
aad
aad
aam
add
enter
dec
sbb
lret
out
pop
aad
jae
jmp
cmpsl
mov
fidivl
push
aas
and
dec
cwtl
sbb
jmp
jo
sub
ret
jmp
cmpb
mov
outsl
pop
repnz
daa
push
xchg
aad
arpl
outsb
sahf
jmp
sbbl
adc
pop
xchg
push
repnz
mov
and
mov
push
xchg
mov
jnp
or
and
mov
jecxz
cmp
sbb
roll
rol
stc
data16
and
push
fcoml
mov
bound
sbb
in
lahf
mov
and
lret
or
sub
and
ret
xchg
push
outsb
pop
das
dec
das
xor
sub
jno
cli
into
xchg
ja
flds
xchg
negl
sub
sbb
or
dec
adc
mov
shl
hlt
push
into
loop
pushf
cmp
and
jb
shlb
xchg
inc
cs
xchg
push
outsb
push
out
xchg
lret
lahf
loope
addr16
cmp
aaa
popf
sub
mov
mov
fisubrs
mov
pop
xchg
pop
or
pushf
loope
dec
jg
xchg
lret
jns
and
lods
adc
or
cmpsl
lods
push
shll
xchg
icebp
mov
inc
outsl
pop
ds
add
mov
mov
stc
insl
and
or
sub
cmp
lahf
mov
out
mov
mov
xchg
lahf
adc
jg
jb
mov
jcxz
and
fs
add
in
je
cmp
jl
push
in
push
leave
cmpsl
movsb
je
push
mov
repz
push
pop
inc
fs
or
push
pop
xchg
lods
jg
shlb
inc
mov
sahf
push
in
jne
jbe
push
jg
pop
in
leave
test
sbb
mov
fwait
mov
cmpl
mov
adc
fdivs
subl
out
sub
pop
mov
cmpsl
imul
ror
push
bound
fwait
loope
in
xchg
mov
mov
out
push
mov
sub
mov
jg
movsl
push
or
add
adc
mov
cmpsb
in
adc
in
push
pop
icebp
lods
movsb
inc
sub
cltd
out
sti
dec
mov
xchg
mov
rorb
out
out
and
lcall
ljmp
add
test
xchg
or
jo
movsb
mov
mov
je
adc
int3
fcomps
push
fwait
jecxz
sub
fdiv
insb
in
popf
sub
pop
in
fldl
inc
in
mov
mov
addb
jg
clc
into
mov
daa
sub
add
adc
mov
popf
push
outsl
jns
rcrb
jne
pop
stos
push
das
pop
out
lret
test
sarb
pop
push
pop
xor
and
and
sbb
mov
lock
mov
inc
xor
pusha
cmp
mov
mov
adc
rcl
loop
push
push
sbbb
fstpt
mov
cwtl
mov
dec
adc
imul
shll
daa
dec
outsl
pop
fcomi
popf
jle
mov
nop
mov
imul
jp
pop
les
dec
ss
push
stos
movd
jne
test
pop
jb
jecxz
or
add
lcall
dec
lret
sbb
or
in
xor
inc
or
pop
frstor
xchg
inc
mov
xor
sub
imul
in
push
push
xchg
int
xchg
pop
sub
popa
jmp
aaa
mov
dec
jl
test
ljmp
sub
cmp
ficoms
cmp
cmp
enter
je
test
insl
inc
add
loope
add
sbb
cli
mov
push
sar
pop
inc
cld
sbb
out
push
cltd
in
xchg
pop
jnp
mov
inc
add
adc
xor
call
push
out
cs
bound
test
mov
xchg
aas
pop
test
push
mov
int
add
jle
mov
icebp
inc
shll
push
cli
es
rorl
test
cmp
mov
and
sub
es
mov
push
or
int
test
mov
in
jnp
add
out
dec
ret
int
inc
mov
mov
jbe
in
fsubrl
xor
mov
dec
xchg
ljmp
sbb
scas
negw
insb
dec
mov
sbb
or
add
ja
test
cli
out
mov
sub
insl
shr
xor
cli
jb
mov
cmc
into
aaa
pop
inc
xchg
test
adc
dec
cwtl
daa
add
jne
cwtl
dec
shlb
hlt
push
call
pop
out
mov
pop
sub
test
rol
cmpl
mov
mov
inc
cmp
sbb
ret
in
jno
mov
lret
mov
gs
fidivs
in
push
adc
add
or
mov
pop
push
sub
dec
push
lods
mov
pop
and
cmp
adc
movsl
mov
inc
adc
jge
xor
cmc
jno
jbe
sbb
adc
add
loop
xor
xchg
sbb
pop
jb
xchg
xor
xor
adc
std
fiaddl
add
push
mov
cmc
ja
push
push
pop
jg
enter
pop
sbb
mov
lahf
and
test
lcall
imul
ss
out
in
test
lea
dec
adc
adc
inc
mov
movsb
shlb
or
out
sbb
or
daa
fdivs
bound
fs
xlat
lods
out
push
in
push
fs
aas
xchg
std
add
lods
mov
pop
mov
dec
sbb
cmp
dec
movsl
dec
outsl
sbb
clc
jns
in
xor
adc
cmp
mov
lcall
push
lock
cld
xor
gs
out
xor
sub
jg
int3
jns
mov
jb
filds
jns
inc
cld
jle
movb
in
sahf
mov
or
mov
subb
shr
xor
mov
pusha
fstps
xor
jmp
in
daa
cmp
push
rorb
pop
sahf
test
mov
ljmp
pop
test
aam
push
xchg
mov
int3
push
or
enter
bound
mov
popa
nop
cmc
ds
xorb
and
cmp
lods
jns
leave
push
test
shll
mov
jecxz
stos
cmpsb
fcmove
test
pop
jmp
call
adc
cmp
popf
outsb
add
add
sbb
lret
push
pop
ret
popf
cli
iret
mov
pop
out
lret
xchg
push
pop
sub
test
push
repnz
add
jecxz
xor
push
push
out
dec
in
xcrypt-cfb
cmpsl
loopew
inc
stos
xor
lea
pusha
adc
lock
cmc
or
in
nop
push
fdiv
aam
daa
out
xchg
mov
cli
sti
add
fbstp
pop
mov
sbb
hlt
in
sbb
out
in
loope
pop
pop
push
xchg
out
mov
jl
scas
sub
add
mov
cmp
or
lods
add
nop
mov
call
and
test
dec
and
xor
arpl
sub
push
jne
negl
out
xchg
loope
jp
adc
jg
les
mov
mov
mov
push
mov
pop
push
xchg
rorb
loopne
ljmp
or
cmp
add
std
in
jnp
and
mov
jbe
mov
in
subl
mov
arpl
out
jecxz
fcmovb
mov
cmpl
dec
pop
movl
adc
push
mov
pop
lock
xor
mov
mov
shll
mov
testb
pop
jge
add
addr16
fwait
sub
xor
cltd
push
pop
inc
adc
setno
or
dec
push
mov
mov
mov
loope
das
push
psrlq
int3
mov
mov
outsl
sub
push
dec
andl
sub
aaa
hlt
jns
xor
iret
dec
je
imul
xor
sub
sub
cmp
cmc
hlt
mov
sbb
pusha
div
lret
pop
cmp
cmp
sub
mov
mov
sti
push
mov
mov
fsubs
sahf
jbe
int
xor
sarl
cmpsl
push
jns
lcall
xchg
add
sub
inc
pusha
or
mov
adc
insb
inc
mov
inc
pop
xor
sbb
push
or
xchg
imul
rorl
ds
xchg
inc
xorl
inc
stos
adc
push
mov
dec
shrl
lahf
xchg
jne
mov
xor
xchg
test
xchg
or
sub
fadd
es
lret
jmp
insb
mov
nop
pop
push
clc
test
jo
jle
push
add
jmp
mov
call
int3
dec
fldcw
adc
jae
pop
or
out
xchg
andl
lea
and
movsl
test
jmp
repz
testl
dec
and
push
nop
sbb
and
loope
out
rcll
mov
adc
ja
mov
mov
leave
xor
lcall
arpl
push
fsubrs
fmul
mov
mov
jge
je
push
push
mov
and
cmp
hlt
xchg
jg
sahf
je
loop
test
das
loop
psllw
test
inc
ss
jp
and
dec
dec
push
add
inc
mov
rcll
mov
std
imul
push
mov
fadd
and
cmp
mov
mov
mov
mov
xchg
imul
daa
xor
jne
add
mov
mov
ret
jp
adc
pop
mov
scas
ret
outsb
sbb
int
inc
adc
push
push
cmc
dec
sub
out
js
pop
cmpb
jns
mov
jno
ss
mov
xor
ds
int
mov
dec
daa
data16
push
leave
test
adc
imul
pop
xchg
mov
stos
lcall
cs
inc
xor
bound
cltd
xchg
cmp
xor
idivb
sbb
addb
sti
or
loop
xchg
mov
and
rcrb
movsb
jae
push
stos
mov
add
mov
dec
arpl
movsb
test
pop
xor
lods
outsb
add
iret
lea
rcr
je
mov
decl
pop
xorl
xchg
jmp
fwait
cwtl
popf
add
cmp
jne
mov
dec
inc
mov
pop
mov
outsl
lahf
sub
mov
movsl
arpl
xadd
hlt
aad
or
stos
shl
xchg
jg
repnz
xor
imul
out
in
repnz
add
iret
push
xor
loop
scas
and
and
dec
hlt
mov
pop
jl,pn
neg
cmp
dec
mov
scas
mov
ss
jl
stos
icebp
xchg
jne
or
into
push
mov
xor
inc
jae
pop
fildl
sbb
add
jp
dec
dec
idivl
pushf
jnp
fwait
push
push
mov
add
arpl
pop
add
sbb
dec
rcll
fnsave
mov
std
jmp
xor
mov
jge
mov
es
jmp
int3
popf
add
or
sub
imul
std
ja
in
sahf
cmp
or
xchg
xchg
mov
add
shl
cmp
xchg
iret
jp
lds
lret
jnp
sub
adc
fcomps
dec
nop
mov
sbb
mov
inc
jno
lea
fsubrs
pop
xchg
loope
jecxz
lcall
jmp
fdivs
or
xchg
push
xor
cmc
testl
addr16
add
mov
add
add
or
jno
push
jno
or
jl
add
stos
and
gs
xorb
jno
dec
je
dec
ja
mov
ret
mov
aas
mov
pop
mov
push
cmp
int3
shrl
in
mov
mov
dec
or
lret
cmp
daa
mov
clc
mov
cs
gs
cld
dec
in
pop
pop
arpl
movsb
insb
faddp
cmpsb
cltd
jo
pop
les
ja
bound
ja
mov
jne
imul
gs
cli
or
sarb
lds
outsl
jl
inc
jb
sbb
mov
iret
sbb
add
push
and
lock
mov
aam
clc
cmp
test
push
xchg
rcl
pop
pop
mov
not
mov
mov
je
je
shl
pop
enter
popf
mov
dec
sarl
jmp
arpl
clc
inc
or
jnp
mov
aad
mov
or
fsubrs
dec
cmp
or
mov
lea
loop
jecxz
adc
xchg
in
mov
out
cwtl
xchg
fwait
mov
ds
xchg
fisubrs
or
insl
sbb
aam
sbb
fidivs
dec
xchg
data16
adc
jns
out
loop
test
pinsrw
stc
push
out
lahf
sbb
cmp
and
inc
adc
loopne
sbb
les
dec
mov
sarb
pusha
fidivl
scas
or
sbbl
xchg
pop
fdivp
or
movsl
aad
and
mov
jle
push
movhps
loopne,pt
inc
mov
out
arpl
mov
push
push
insb
xchg
pop
sub
adc
xchg
mov
stos
mov
cmp
loop
cmpsb
daa
outsl
cwtl
pop
out
xor
hlt
sub
mov
adc
dec
dec
adcl
ljmp
leave
sub
js
or
mov
and
cli
xchg
and
rcll
dec
inc
shl
mov
sbb
pop
outsb
pop
xchg
ljmp
adc
xchg
clc
mov
dec
int3
inc
inc
pop
adc
dec
add
insl
repnz
popf
dec
pop
and
jmp
leave
mov
or
or
lahf
mov
jno
outsl
or
clc
adc
pop
inc
aam
adc
das
lock
jg
movsb
pop
mov
xchg
aas
ds
and
iret
mov
shlb
xchg
push
lea
in
adc
cmc
test
test
inc
mov
jmp
aas
in
push
xchg
cmp
addl
add
pop
ret
jb
in
stos
lock
inc
les
out
ret
hlt
jle
jnp
push
add
dec
lea
mov
xlat
add
add
inc
loopne
xchg
jne
notb
aam
xorb
xor
lahf
adc
add
je
in
les
mov
int
cmc
push
pminub
fcmove
das
test
dec
inc
icebp
arpl
add
inc
jnp
jle
mov
jnp
add
xor
ja
call
add
xchg
cli
cld
mov
sbb
mov
mov
addr16
and
fs
mov
movl
mov
or
push
mov
sti
rorb
cmp
sub
dec
mov
inc
in
push
setle
gs
xchg
mov
pushl
popa
adc
lahf
and
and
inc
mov
push
pop
fidivrl
jl
fcoms
xchg
in
test
inc
xchg
ret
jne
adc
sub
daa
sarl
and
mov
mov
icebp
mov
pop
ss
hlt
cmp
cwtl
into
lock
mov
leave
xor
sbbl
popa
je
fisubl
ss
stos
stc
aaa
pop
addr16
iret
fisubs
lods
sub
arpl
ret
int3
in
adc
lock
jo
jbe
dec
mov
push
bound
mov
lea
xchg
iret
cmpsb
cli
mov
ds
jge
jne
insl
sarb
mov
ret
pop
or
or
mov
ja
push
movsl
sbb
ret
push
add
jo
xor
jecxz
jbe
mov
mov
iret
jmp
inc
or
jle
push
fdivs
nop
cmpsl
push
stc
push
fisubrl
out
subl
fwait
pop
mov
jle
enter
fildll
rcl
std
psrlw
or
adc
iret
leave
lret
andb
cmp
push
test
xor
pop
aaa
xlat
sahf
ljmp
xchg
and
lods
lret
nop
cmpsl
into
and
mov
and
mov
cmpsl
pop
xchg
popf
imul
mov
mov
mov
xor
ja
mov
inc
arpl
jno
pavgw
in
cmpsl
sbb
inc
jae
mov
inc
xor
mov
inc
test
clc
aas
cwtl
xor
cmp
sbb
pop
divl
stos
sbb
cmpsl
cli
lcall
mov
adc
jmp
ret
popf
in
pop
or
and
movsl
mov
cmpsb
ds
mov
or
pusha
aad
sbb
push
pop
fnclex
inc
inc
pop
int
movsl
and
aaa
add
mov
push
cmc
arpl
lret
orl
inc
and
nop
mov
repnz
or
std
add
loop
lahf
add
mov
fidivrl
test
jg
imul
cmp
cmpsl
test
jae
rep
xor
inc
mov
pop
nop
push
and
inc
lret
fmuls
xchg
rorb
push
mov
rclb
stos
xlat
mov
jb
sub
adc
mov
jne
push
lret
inc
adc
stos
stos
inc
mov
mov
in
inc
mov
movsl
cmp
fadds
xor
dec
cli
mov
mov
stos
ljmp
inc
push
add
push
mov
mov
divb
jg
jg
lret
dec
out
jo
sub
adcl
and
xchg
push
arpl
popa
inc
mov
push
ljmp
loopne
divl
sarb
jp
mov
cs
xlat
sub
ds
aas
adc
jmp
jne
leave
or
std
push
hlt
sub
or
iret
dec
mov
lcall
xor
inc
and
imul
or
out
enter
sbb
adc
cmp
shrb
popa
jnp
rcll
xor
sbb
jle
xchg
movsb
fldt
mov
or
clc
in
mov
sbb
adc
jae
mov
inc
jmp
sbb
mov
sbb
mov
shl
mov
mov
inc
jb,pn
inc
lret
std
or
insl
push
pop
xchg
roll
xor
adc
stos
xlat
xchg
in
cmp
dec
jo
add
bound
mov
pop
xchg
dec
pushf
mov
popf
fistl
inc
popa
sbb
loopne
sbb
push
sbb
mov
xchg
int
fbstp
les
xchg
shll
scas
in
push
sarb
ds
sbb
shlb
mov
sub
sbb
jnp
pop
and
xchg
cmp
jno
cmp
popa
xchg
xorb
in
pushf
and
test
arpl
xlat
xchg
and
or
push
adc
fsts
inc
jne
add
idivb
ret
dec
cli
stc
xchg
mov
jbe
pop
sbb
inc
aaa
cmp
mov
mov
mov
dec
jo
jp
mov
iret
sarb
in
inc
lods
inc
mov
jg
xchg
jns
scas
pop
jmp
adcl
mov
nop
les
add
stos
xlat
mov
jge
xor
jmp
pop
sbb
ret
decb
ret
das
dec
mov
sbb
cmp
test
les
lods
push
jns
cld
lret
arpl
aaa
mov
cltd
jmp
mov
out
push
les
xor
sti
mov
add
fwait
inc
ss
addr16
outsb
bound
push
push
es
sbb
mov
xchg
clc
repz
push
sub
js
xchg
imul
push
sbb
daa
cmc
mov
call
inc
faddl
inc
stos
out
cmc
jl
cmpsb
mov
andb
lret
sbb
iret
ds
push
imul
cmp
sti
jbe
clc
cli
daa
popf
push
das
fisubl
jnp
push
je
stos
adc
xchg
aas
push
fadd
push
dec
jae
in
test
cs
mov
test
mov
fstl
lahf
pop
dec
test
xor
imul
mov
adc
ret
mov
mov
pop
mov
pop
fcmove
aad
stos
rorb
push
sub
dec
rcl
mov
push
test
nop
mov
stc
sbb
ror
imul
push
ja
sahf
jnp
pop
leave
inc
dec
fidivs
cmpb
cltd
xor
and
jb
gs
and
sbb
xor
jno
mov
mov
aam
bound
mov
js
cmp
sbb
xorps
mov
xchg
cld
cmpsb
hlt
pop
xchg
adc
dec
dec
iret
inc
iret
push
call
imul
push
dec
mov
jg
sti
jge
test
push
rorb
jne
das
lret
lret
mov
icebp
push
lock
xchg
jbe
adc
mov
scas
or
pusha
mov
inc
pop
out
movsb
mov
jecxz
lock
lcall
inc
jecxz
shlb
call
push
test
cmpb
xor
icebp
pusha
lahf
loop
ja
push
push
or
lds
xchg
mov
mov
cmp
sbb
pop
xchg
xchg
push
xlat
push
mov
push
pop
and
ljmp
jmp
inc
aas
call
or
rclb
push
bound
fcompl
mov
and
mov
addr16
out
data16
mov
stc
mov
inc
fimuls
xor
out
pop
xchg
cmp
and
les
pushf
mov
inc
movl
sbb
jno
rcrl
fadds
out
sti
je
jne
push
mov
sbb
subl
pop
xorb
jo
cmp
rcr
dec
icebp
xor
je
cmp
stos
inc
fsts
mov
loope
loop
push
out
fmuls
pop
cmp
push
pop
or
cmp
cmp
repnz
hlt
fucomp
outsl
subb
mov
outsb
xor
inc
xchg
adc
pop
loope
mov
adc
jno
pop
imul
mov
lods
mov
mov
inc
lahf
dec
orb
adc
mov
popf
les
xor
mov
push
jae
dec
aam
rorb
js
jns
xor
int
jbe
std
testb
pop
sub
adc
mov
in
mov
push
das
bound
xor
sarl
sbb
dec
pushf
sub
mov
and
sahf
add
xchg
xchg
rcrb
movsl
jo
movsb
imull
sbbb
add
aam
pop
call
jg
sbbl
mov
pop
sub
sbb
mov
pop
and
xchg
pop
jnp
jle
xchg
lahf
sbb
repz
push
push
xchg
aad
and
lret
jmp
inc
cwtl
out
mov
or
orb
mov
sbb
mov
hlt
sub
xchg
mov
test
fsubl
stc
mov
xchg
push
jnp
jne
loopne
add
inc
jl
arpl
mov
mov
fnstcw
pop
gs
das
mov
dec
xchg
cwtl
dec
xchg
inc
pop
imul
push
fidivs
inc
jae
push
jbe
xor
lret
mov
stc
mov
inc
dec
leave
arpl
test
enter
andb
sub
scas
xor
iret
fimull
dec
shrl
ret
xchg
xor
dec
mov
xor
jge
dec
ss
pop
lahf
fadd
mov
or
sub
and
in
inc
jb
sbb
xlat
out
shr
stos
xchg
imul
jp
sub
cmp
in
jno
mov
out
scas
arpl
lahf
sbb
mov
loop
js
lods
fstl
jne
into
mov
sti
addb
sub
xor
mov
enter
repnz
int3
mov
in
mov
xor
inc
rolb
das
pop
inc
rorb
sahf
push
fs
fmull
cmpsb
jae
in
push
mov
sbb
lret
bound
decl
adc
xchg
dec
mov
lret
movsb
xchg
loope
in
test
leave
in
mull
stos
cmpsl
int
dec
mov
mov
mov
and
out
jl
je
mov
ret
push
jp
pushf
sub
js
out
std
push
or
sbb
das
mov
out
jno
sub
inc
loopne
inc
cmp
outsl
jge
sti
ret
jp
push
fdivrs
dec
adc
jmp
mov
in
inc
push
jl
fmul
jg
inc
push
cmp
aad
xor
mov
jbe
jg,pn
rorl
and
add
getsec
sub
mov
mov
pop
outsb
dec
enter
fnstenv
adc
add
out
or
mov
cwtl
mov
jg
mov
call
lret
mov
adc
lods
adc
pop
pop
ret
xlat
insb
dec
nop
mov
ds
stos
jmp
xchg
sti
jle
aam
add
dec
arpl
sbb
mov
push
lods
push
pop
out
inc
xor
sbb
sub
mov
loope
dec
and
mov
xchg
fildll
lret
adc
xchg
cmpsl
dec
fcomps
hlt
test
aad
loopne
dec
flds
ret
scas
enter
scas
cmpsb
inc
outsl
test
dec
mov
les
out
leave
lcall
or
iret
xchg
fprem
jl
adc
dec
fists
sub
cmp
or
add
loope
ss
adc
sbb
sbb
fistpl
sub
icebp
ret
in
xchg
and
cmp
fstpt
push
and
loopne
daa
int
aas
negb
pop
mov
adc
add
mov
roll
inc
jmp
cmp
mov
fnstcw
pop
mov
mov
push
lret
xor
jb
jmp
or
pop
fs
fst
xchg
in
add
mov
stos
push
lods
popf
inc
and
cwtl
sub
jge
inc
movsb
out
je
pop
mov
inc
loop
addr16
sub
rcrb
dec
roll
dec
mull
and
add
stc
xlat
push
imul
stc
sti
das
dec
daa
inc
pop
xchg
xor
outsb
data16
lea
jecxz
dec
jp
push
add
or
jl
shlb
clc
pop
push
mov
mov
scas
inc
int3
int
cmp
movsl
mov
mov
cwtl
repz
test
in
mov
xchg
addr16
xchg
pop
sub
cmp
stos
iret
dec
icebp
cs
push
pcmpgtb
mov
and
out
test
adc
jae
cmp
sub
into
jle
xchg
xor
data16
in
mov
xchg
lds
daa
sbb
add
cmp
data16
jno
pop
inc
xor
push
sub
pop
ss
inc
or
repz
js
xchg
fsubp
adc
addb
jnp
pop
pop
aas
and
push
stos
mov
and
std
add
dec
adc
jae
dec
pop
sub
push
sahf
lods
xlat
out
jle
rorl
fldcw
xor
out
popl
aas
inc
lret
add
ficoml
inc
or
gs
psubsw
testb
push
and
int3
mov
pop
mov
xor
xorb
lcall
clc
pop
test
mov
fcoml
fisubs
pop
sbb
xchg
cvtdq2ps
add
mov
lock
je
shl
cmp
mul
cmc
mov
aad
jl
repnz
dec
xchg
call
lods
dec
mov
xchg
enter
mov
dec
push
dec
ja
inc
cs
add
stos
sbb
dec
fs
jg
clc
inc
adc
lods
stc
xchg
call
mov
rcr
mov
test
shlb
sub
dec
call
out
jp
cmp
inc
push
cltd
cld
xchg
stc
loope
scas
repnz
mov
test
loopne
sbb
mov
ds
lahf
ljmp
pop
cmpsl
dec
push
or
inc
cmp
sub
xchg
cld
and
jbe
pop
lods
dec
push
inc
cmp
dec
clc
cli
push
jne
sti
adc
push
mov
push
xchg
or
js
std
lea
jge
repnz
mov
in
mov
aam
flds
or
in
cltd
xor
mov
in
sbb
jg
pop
aam
dec
xor
add
inc
mov
sbb
fsubrs
outsb
or
or
scas
pop
push
xor
icebp
jmp
and
fmuls
notl
mov
xchg
jbe
xchg
jp
addr16
dec
dec
repz
xchg
ja
add
xchg
pop
leave
add
push
jnp
js
adc
push
push
push
outsb
pop
sbb
mov
and
pop
in
imul
and
es
loop
xchg
outsl
lock
jmp
clc
cltd
adc
adc
and
adc
xchg
and
or
aaa
sbb
or
out
shl
and
inc
mov
mov
xlat
mov
cmpl
in
loop
cwtl
pop
testb
jns
push
pop
into
addb
lods
sub
dec
sbb
fildll
or
sti
in
testb
es
icebp
sbb
iret
jmp
mov
decl
fwait
clc
push
roll
test
xchg
lock
xchg
popa
jg
xchg
mov
mov
inc
adcb
sub
adc
int
stos
dec
scas
imul
cmp
or
gs
xchg
hlt
mov
and
insl
cltd
loope
inc
and
jle
dec
mov
pcmpeqw
adc
inc
xchg
lret
or
cmp
mov
cmp
movsb
push
test
jmp
mov
jb
or
scas
aam
and
push
jp
mov
testl
js
mov
mov
xchg
in
cmp
sarl
fadds
sar
and
mov
in
push
mov
or
loope
sbb
mov
push
jmp
sub
and
mov
dec
inc
jl
pusha
and
aam
popl
das
lea
addr16
pop
rclb
cmp
mov
and
repz
pop
xor
shl
cwtl
out
pusha
sub
xor
das
sbb
int
jo
push
xchg
or
scas
mulb
pop
repnz
aas
or
jb
add
vhaddpd
adc
jne
xor
iret
shll
repz
les
rorl
mov
and
sbb
je
hlt
mov
inc
repnz
push
test
cmp
lock
sub
push
enter
fwait
sahf
dec
shl
test
add
pushf
repz
fs
fnstcw
loope
cmp
sbbl
das
adc
xchg
mov
push
rcr
or
lock
cs
xor
js
sub
jb
orl
pop
mov
je
cwtl
adc
sahf
popa
xor
xor
push
fsubl
cmp
jmp
mov
cmpsb
arpl
test
add
shl
mov
push
into
rcrl
sbb
clc
cwtl
addb
push
std
cltd
or
xor
into
inc
stos
or
test
dec
or
sbb
jae
jno
ficoml
fmull
dec
rcrb
mov
movb
push
in
int
or
aaa
push
mov
mov
das
xor
cld
push
movsb
ja
loope
cld
divl
cli
negb
cmpsl
adc
inc
and
or
dec
cld
andnps
iret
xor
sbb
pop
fucomp
int3
xchg
xor
adc
sub
xchg
hlt
push
dec
xchg
lods
cmpsb
xor
or
stos
scas
and
js
adc
popa
adc
xor
xor
ror
cwtl
xchg
push
arpl
pop
repnz
xchg
xor
stc
inc
sbb
movsl
loope
ss
int3
pop
stc
inc
adc
push
iret
push
das
std
leave
test
setae
ja
out
cmp
mov
test
loopne
xor
rcr
test
js
in
rcrl
cmpsb
dec
shll
jnp
sbb
pop
iret
cmp
sbbb
repz
iret
test
jmp
rcrl
jecxz
outsb
pusha
lds
sahf
mov
fdivs
pushf
daa
mov
mov
iret
div
leave
sub
inc
clc
inc
cmpl
cmp
out
xor
inc
je
fs
inc
repnz
pusha
enter
xor
mov
scas
pop
xor
clc
push
mov
or
lret
enter
xchg
je
mov
ljmp
push
outsl
scas
push
std
call
lods
orl
aas
mov
pop
add
cmpb
dec
shlb
xor
int3
iret
jbe
dec
pop
adc
ret
pop
xchg
cltd
mov
jl
mov
sub
dec
mov
or
adcl
push
sti
mov
stos
shlb
push
out
dec
outsl
mov
inc
iret
out
leave
sub
daa
aas
lcall
sbb
in
daa
loope
cmp
xor
cmovl
sbb
xor
xlat
adc
gs
int
inc
push
insl
daa
jl
out
in
sub
cmp
xchg
inc
scas
call
icebp
xor
stos
sub
pop
dec
mov
sahf
in
pushl
insb
mov
or
xor
pop
inc
pop
mov
adc
outsl
mov
filds
jbe
out
jle
lahf
sbb
mov
insl
es
mov
mov
cmp
xor
cli
xlat
mov
in
movl
pop
add
jnp
pop
push
mov
pop
iret
jo,pt
xchg
inc
cmpl
xchg
test
faddl
lods
insb
insb
jnp
nop
jp
add
jne
mov
jmp
mov
xchg
bound
jae
insb
jl
roll
pop
cmp
inc
pop
dec
mov
pop
adc
out
pop
rolb
ret
and
andl
divb
aaa
cmp
inc
and
push
inc
xor
in
and
daa
xor
jae
clc
sub
mov
sub
adc
test
pop
stos
pop
pop
sub
mov
adc
into
mov
in
sahf
pop
das
scas
jmp
bnd
sbb
cltd
sbbl
xchg
in
pop
jo
hlt
jae
jbe
test
xorb
push
mov
inc
scas
call
mov
mov
jnp
pop
jbe
push
mov
repz
inc
icebp
sbb
mov
mov
fwait
push
ja
addr16
cwtl
cmpsl
insl
fdivrs
sahf
repnz
mov
adc
shr
clc
pop
or
mov
ss
lahf
das
in
dec
sub
loop
out
mov
das
add
dec
js
cmp
inc
cmp
jne
in
das
pop
or
sub
ret
mov
jge
xchg
or
outsb
cmpsl
adc
push
js
sub
fldl
jns
mov
adc
and
inc
fmuls
push
xchg
dec
mov
rcrb
mov
adc
sub
jnp
imul
inc
and
popa
lods
fwait
cmp
clc
cmpsl
lret
inc
sti
stc
xor
push
mov
cmp
xor
nop
jae
faddp
push
fdivrs
shlb
inc
dec
enter
and
lret
enter
inc
stc
mov
pushf
decl
mov
jecxz
mov
cwtl
adc
mov
sub
mov
inc
inc
int3
out
mov
ja
stos
xor
nop
or
movsb
bound
mov
sub
ja
roll
push
das
cmp
add
dec
out
push
push
cmp
xchg
fs
xor
mov
scas
and
loope
jo
jg
sbb
inc
add
imul
xchg
cld
push
mov
gs
xor
inc
enter
push
and
pop
add
sbbl
xor
test
outsl
mov
cmp
cld
mov
mov
popa
inc
in
icebp
lods
arpl
inc
and
sar
ljmp
aas
mov
xor
loope
dec
aad
sbb
in
shll
or
or
push
and
stos
lret
arpl
dec
dec
xchg
mov
sub
xchg
jb
shlb
cmpsl
scas
es
lods
rolb
add
int
push
mov
loop
mov
jge
jecxz
jmp
pop
mov
mov
js
mov
mov
push
in
fadds
pusha
fdivs
in
and
les
js
mov
clc
mov
subb
fstps
and
popf
pop
hlt
fucomp
push
stos
loope
movsb
out
cmc
sbb
std
xchg
insl
nop
pop
and
pop
mov
jae
adc
ds
push
or
loop
jbe
pop
adc
insl
add
aaa
adc
mov
repnz
add
test
xor
lahf
out
mov
iret
push
sub
divl
pop
shl
pop
jle
xor
mov
mov
inc
into
push
fists
adc
jno
xchg
aaa
movsl
mov
popf
aas
pop
int
fadd
lcall
push
or
cs
adc
pop
loop
imulb
mov
pusha
or
int3
push
mov
xchg
push
sbb
aaa
mov
jle
xchg
push
and
dec
cmp
jmp
cmpsb
cmp
out
out
inc
mov
push
leave
inc
in
cs
xchg
daa
inc
pop
fcomps
xchg
gs
test
mov
in
pop
sbb
xor
cwtl
imul
jns
aaa
cmp
inc
into
dec
cmp
xor
sbb
pop
stc
cmp
lods
and
push
xchg
xor
jnp
dec
push
cwtl
aas
leave
adc
ds
xchg
fiadds
ljmp
scas
ffreep
jno
push
fxch
xor
or
push
add
or
push
subl
fidivrs
push
in
sbb
mov
roll
mov
sbbl
test
ret
in
in
adc
mov
add
mov
pop
push
sub
popf
sub
into
jb
xchg
or
pop
mov
mov
xchg
add
add
mov
jl
xchg
adc
mov
popf
cmp
rsm
push
es
sbb
out
xchg
int3
add
or
or
and
push
jne
adc
jne
cmp
iret
mov
or
jbe
loop
inc
ds
fcmovu
push
insb
in
loope
in
aas
add
mov
mov
push
lock
loop
test
mulb
xor
dec
in
xchg
mov
mov
dec
mov
cmpb
xchg
clts
sahf
dec
fstl
jl
mov
daa
das
jne
push
jbe
cmp
daa
adc
leave
jmp
lahf
dec
dec
int
mov
jp
lahf
int
pop
pop
scas
imul
ja
andb
sarb
sub
add
jl
jno
out
lods
sbb
xor
mov
xchg
or
lea
call
shlb
mov
jmp
pop
lods
loope
pop
fcmovu
filds
inc
pop
xchg
loop
sahf
pop
and
pop
lock
aas
sahf
sbb
repnz
or
jge
fs
push
push
outsb
lea
shlb
lea
out
cli
mov
shl
ret
or
inc
pop
lcall
repz
pop
mov
push
push
movsb
xchg
xchg
ljmp
jnp
sbb
or
jns
inc
ret
arpl
pop
test
push
les
jb
xor
mov
jmp
pop
lcall
out
rolb
outsb
inc
xor
cli
xor
mov
cs
jo
inc
dec
dec
mov
xchg
ret
bound
jo
cmc
scas
sahf
push
inc
aad
xchg
sbb
ret
loopne
fisubrs
int
mov
dec
jecxz
xlat
push
cmppd
mov
lcall
int3
xchg
addb
xchg
or
shll
push
xor
dec
jle
cmpsl
jmp
push
mov
enter
imul
jb
mov
in
or
lods
jecxz
inc
loop
mov
mov
sub
and
push
inc
jmp
pop
test
dec
sbb
xchg
stos
hlt
add
dec
or
mov
lods
es
mov
mov
sbb
subb
inc
clc
in
mov
insb
jo
mov
push
mov
xor
scas
sbb
adcl
testb
lods
cmpsl
lock
mov
push
sbb
repnz
mov
xor
xchg
jns
xchg
jbe
dec
test
sbb
test
cmp
xor
xchg
jmp
gs
adc
dec
in
gs
sub
dec
mov
andb
test
repz
mov
lds
jl
scas
adc
sub
dec
cmp
rcrl
add
or
mov
shl
xor
pop
cmp
adc
scas
dec
ja
cmpb
xchg
and
mov
pusha
clc
dec
mov
inc
pop
lret
ret
inc
nop
mov
adc
or
int3
mov
insb
repnz
jge
pop
cli
repz
aam
add
scas
iret
out
ret
js,pn
mov
push
shrb
popa
aaa
mov
xor
out
jp
call
nop
call
add
sahf
cmp
jge
outsb
lods
popf
fisttpl
popf
jns
mov
xlat
cwtl
jg
pop
mov
mov
mov
arpl
or
xchg
loop
sbb
sub
jge
sarb
aam
sbb
out
lods
cltd
inc
and
int3
lcall
retw
pop
mov
or
shll
sbb
jbe
leave
movsb
mov
lea
aaa
xchg
cmp
out
repnz
outsl
rcrb
mov
xlat
push
orb
dec
icebp
stos
icebp
sbb
divb
push
ss
loope
add
push
sub
inc
cmp
push
out
lcall
movsl
mov
jmp
or
xor
push
push
mov
inc
xchg
pop
push
mov
xor
jl
gs
xchg
icebp
or
mov
xchg
out
into
cmc
xor
pop
cmpsl
inc
cmp
mov
inc
or
mov
orb
stc
sbb
xchg
and
mov
das
pop
rolb
fcmovne
sub
pop
lret
mov
movl
add
inc
jno
push
inc
push
popf
xor
sbb
clc
jge
sbbb
mov
fstpl
addps
mov
dec
call
imul
lods
popa
out
loope
adc
pop
and
scas
cmp
adc
fnstsw
fxch
push
and
mov
add
ds
lret
test
jo
daa
jb
loopne
test
adc
lods
les
mov
mov
mov
pop
mov
mov
call
mov
into
sub
dec
dec
add
test
popa
sti
sub
inc
sub
sbb
cmp
cmpb
cltd
mov
pop
adc
pop
cwtl
pop
popa
mov
aad
lea
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
rolb
add
push
add
add
add
add
add
repz
add
add
addb
add
or
add
add
add
add
adc
or
add
add
add
sub
add
push
add
orb
add
add
mov
add
add
add
adcb
add
lock
adcb
add
add
adcb
add
push
add
add
add
add
add
add
add
sbbb
add
or
add
xor
add
pop
add
cmpb
add
addb
adcb
add
test
add
add
add
or
add
add
add
or
test
add
or
add
add
add
add
or
add
add
push
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
add
or
ljmp
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
test
or
adc
add
or
add
rorl
mov
add
or
add
ret
or
test
add
or
add
add
add
les
add
add
add
add
add
add
add
add
add
lds
add
add
or
add
add
add
or
insb
add
add
add
add
add
push
add
add
add
add
add
mov
push
add
or
add
in
add
add
add
add
add
add
add
or
cmp
add
add
add
dec
add
mov
add
sbb
pop
add
add
add
add
add
add
add
or
xor
adc
or
or
or
or
or
add
add
add
add
add
add
add
add
je
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
or
push
jne
add
or
test
or
mov
or
mov
mov
add
pop
add
add
sbb
add
sbb
add
sbb
add
mov
add
add
cmp
add
mov
push
add
dec
add
add
gs
je
dec
popa
imul
inc
jb
popa
je
push
jb
je
arpl
outsl
arpl
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
outsb
imul
je
dec
outsb
je
jb
popa
arpl
add
inc
jo
popa
insb
insb
push
popa
arpl
add
popa
inc
jo
popa
insb
insb
push
popa
arpl
addr16
popa
jae
je
jb
jne
push
inc
jo
popa
insb
insb
push
popa
arpl
addr16
outsb
je
jne
je
add
inc
jo
outsb
imul
push
popa
arpl
add
popa
inc
jo
outsl
outsl
outsb
push
gs
imul
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
js
push
gs
insb
dec
outsl
outsl
data16
popa
insb
dec
outsl
outsl
outsb
add
dec
outsb
imul
add
popa
jb
jne
add
sbb
add
insb
add
dec
xchg
add
add
add
mov
add
and
add
add
add
push
add
cmp
add
fiadds
add
and
add
jns
add
add
xor
add
push
cld
add
xor
add
aam
add
xor
add
mov
add
mov
add
sub
add
xor
add
add
add
add
add
cmp
add
pop
push
add
push
add
add
add
lods
jbe
add
or
loopne
or
add
add
pusha
jbe
add
add
add
lcall
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
clc
jg
sar
push
pop
xor
inc
inc
outsl
insl
jo
arpl
add
push
push
mov
mov
jecxz
push
pop
and
push
mov
xor
xchg
mov
xchg
fisubrs
scas
lcall
pop
test
adc
cmp
cs
xorl
arpl
mov
mov
call
cwtl
adc
jmp
adc
mov
dec
xor
test
cmp
jns
xchg
fwait
and
sub
adc
arpl
sub
insl
cmc
mov
repnz
cmp
inc
xor
andl
in
pop
ljmp
lods
loop
push
std
loop
cmp
pushf
sbb
outsl
call
iret
xchg
pop
adc
popa
xchg
pop
cmpsb
fidivs
dec
add
jmp
repz
xchg
inc
les
push
rcr
mov
push
and
or
xchg
or
pusha
cwtl
addr16
in
outsb
mov
pop
push
and
dec
dec
mov
add
push
outsb
dec
nop
mov
sbb
addr16
xchg
js
insb
pop
ja
out
fs
mov
adc
push
imul
push
scas
mov
jge
push
outsl
cmp
mov
dec
sub
jmp
jge
scas
push
mov
in
xor
jb
adc
loope
call
lahf
bound
sbb
jg
inc
adc
outsl
in
je
jnp
nop
mov
push
push
outsl
or
insb
sbb
enter
fcomi
sub
fs
sbb
sbb
clc
pop
mov
push
stc
push
or
imul
add
jmp
mov
dec
cmpsl
aam
lret
jae
hlt
ljmp
and
sbb
mov
cs
inc
jmp
push
jo
sbb
je
cmpsl
and
mov
mov
in
xor
push
ds
in
fsubr
push
aas
inc
ss
mov
xor
sbb
out
jecxz
outsl
mov
jo
lods
inc
mov
dec
push
jmp
mov
jns
mov
xlat
in
cmp
xor
ds
mov
adc
test
hlt
sub
arpl
mov
or
addr16
mov
or
mov
mov
jnp
mov
sbb
mov
and
push
mov
repz
inc
mov
push
shll
add
adc
cmp
jp
mov
imul
enter
shr
ret
in
xor
test
jno
test
and
dec
lcall
push
popa
or
push
and
jo
loope
push
pop
call
jno
add
add
inc
imul
cmpsb
inc
movsb
or
push
jle
add
jmp
push
and
push
push
aas
mov
or
nop
popa
ljmp
je
out
jns
mov
and
jmp
mov
add
dec
je
mov
sub
in
pop
pop
cmc
jmp
xor
imul
sahf
dec
js
or
sbb
add
mov
arpl
or
cmp
cld
pop
mov
aad
lret
movl
repz
icebp
jbe
aad
jne
or
std
push
adc
sub
in
mov
nop
stos
pop
mov
repz
stos
bound
fidivrs
jmp
add
adc
fsubrl
mov
jb
mov
arpl
mov
adc
push
mulb
mov
out
call
fs
mov
daa
aam
push
sbb
je
sub
outsb
mov
jns
mov
mov
push
subl
sbb
popa
outsl
xor
cld
and
movsl
inc
adc
notb
popa
nop
bound
arpl
jno
mov
loopne
ret
push
adc
js
outsl
loop
cwtl
lahf
jg
and
ds
test
add
dec
out
push
aaa
stc
or
xchg
adc
sbb
or
jo
es
mov
adc
test
cmp
add
xchg
orb
xor
sbbb
jmp
in
rcl
lahf
lea
jp
adc
cmpsb
jno
xor
pushf
mov
mov
insl
xor
ja
das
insb
jo
in
loopne
and
daa
mov
pop
push
gs
mov
push
imul
jb
stos
imul
pop
xchg
nop
sub
je
inc
stos
popa
inc
lods
push
mov
or
add
outsl
imul
in
adc
push
and
repz
sub
push
test
jge
ss
sarl
sbb
inc
cmp
popa
jl
jo
and
jae
push
jl
or
outsw
ljmp
xor
inc
cmpl
movsl
dec
push
enter
cmp
xchg
and
insb
loope
sub
movsb
in
push
aad
insl
jmp
pushf
jcxz
fs
nop
cmovg
push
jl
xor
fstl
jg
int
sub
fs
sub
mov
pop
xchg
jp
flds
or
les
pop
popa
dec
jp
fs
cltd
lahf
jle
jl
mov
mov
jmp
dec
jmp
or
stc
jle
inc
scas
cmc
add
jmp
mov
fnstsw
in
outsl
mov
and
sub
outsl
in
repz
cmpsb
push
pop
inc
daa
data16
cmc
lret
lods
in
or
insl
and
leave
ljmp
mov
xor
cmp
in
in
clc
push
xor
jg
gs
fs
xor
mov
mul
insl
or
jo
lret
jl
mov
push
push
mov
inc
and
imul
loopne
arpl
jecxz
jl
mov
je
inc
dec
lock
mov
repz
pop
mov
es
arpl
cmp
sub
mov
data16
sbbb
arpl
leave
sub
jmp
in
push
outsb
mov
ret
adc
xor
movsb
push
push
repz
and
mov
cmp
push
adc
jle
cmp
pop
daa
loopne
add
adc
lcall
arpl
adcb
xchg
mov
add
test
nop
push
push
fcomp
sub
fcoms
jo
fs
in
jmp
loope
lcall
mov
insb
pop
sahf
sub
popa
addr16
icebp
mov
xlat
sub
and
bound
adc
arpl
xchg
movl
les
mov
ss
pop
inc
test
push
imul
fdivs
outsl
xlat
es
jo
inc
bound
sbb
out
in
sbb
or
test
push
and
sbb
outsl
mov
xor
outsl
sub
sahf
test
mov
add
mov
push
out
jle
popaw
insb
and
fsubp
es
push
pop
fimull
push
lret
xor
ja
sbb
enter
mov
push
mov
mov
repnz
out
jl
mov
cmp
ja
push
lcall
dec
and
sub
add
cwtl
mov
xchg
lds
jecxz
and
jbe
les
xchg
mov
jns
xchg
stos
push
test
push
ret
pop
push
sub
jo
jne
ret
and
dec
cld
cli
insb
daa
bound
jb
xor
push
icebp
dec
jns
mov
push
fcmovnu
add
push
sub
test
push
rol
ds
arpl
sub
outsb
xchg
xor
push
jmp
dec
cmpsl
xor
std
mov
mov
je
adc
dec
aad
mov
jne
out
lahf
data16
shl
lcall
cltd
mov
mov
cmp
repz
mov
cld
dec
sub
xchg
repz
push
and
outsb
xor
popa
lret
sti
cmp
sub
pop
ljmp
inc
arpl
mov
push
xor
sbb
insb
push
jo
lahf
inc
sbb
mov
pop
and
jnp
inc
call
je
mov
or
fisubrl
and
mov
mov
jo
and
imulb
inc
out
or
cmp
cmp
push
pop
cs
cs
add
mov
fs
jle
in
jmp
mov
xchg
insl
xchg
cmpsl
lret
ljmp
xor
jae
call
cs
or
outsb
shlb
arpl
cwtl
pop
xor
stos
push
sub
cmp
clc
or
cvtps2pi
sub
xor
fisttpl
cld
or
in
pushf
aaa
pmullw
xchg
or
jb
jl
sub
mov
int
or
push
arpl
pop
lock
je
in
sbb
js
cmpsl
inc
mov
pop
cmp
or
fwait
jle
ljmp
mov
nop
cmp
jge
xchg
xor
sub
insl
lods
sbb
test
add
xor
and
and
add
adc
femms
jl
add
jb,pn
mov
fmuls
xor
add
roll
or
inc
movlps
or
cmp
add
fwait
xlat
add
or
out
xor
pop
daa
jae
push
loop
dec
add
inc
mov
fmull
aaa
repnz
adc
faddl
adc
push
subb
mov
addps
and
mov
in
sbb
je
mov
pop
and
xor
push
sub
and
push
add
xchg
arpl
adc
xchg
adc
mov
movsb
or
or
ss
adc
shlb
cltd
fcoms
leave
repz
icebp
imul
ret
mov
orl
inc
xor
pop
hlt
sub
sbb
adc
imul
add
jmp
inc
inc
jmp
inc
dec
pushf
shl
push
mov
or
xchg
push
test
pusha
adc
mov
pusha
pusha
pusha
adc
bound
shlb
das
pusha
pusha
pusha
jb
adc
mov
sub
stos
adc
pusha
pusha
mov
mov
adc
jae
mov
mov
dec
pusha
pusha
pusha
pop
pusha
sbb
loopne
adc
cwtl
pop
pop
bound
and
jmp
shll
jmp
dec
nop
xchg
les
mov
shlb
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
or
pushf
push
add
mov
orb
push
jbe
add
add
adc
or
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
lock
sbb
xlat
les
xor
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
jmp
lcall
std
repnz
sar
lock
in
mov
jmp
mov
test
xor
imul
stos
or
push
jmp
and
sub
dec
xchg
stos
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
pusha
pushfw
push
call
sub
scas
dec
jmp
imul
xchg
add
add
jmp
cltd
pop
aas
jmp
push
clc
xchg
pop
xorl
lea
jmp
das
cmp
sbb
inc
push
xor
sub
lea
mov
lea
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jo
outsb
setl
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
shll
addl
jle
sub
mov
jmp
sbb
xlat
les
xor
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
sub
pushfw
push
call
mov
mov
test
xchg
xchg
pop
add
sub
sub
inc
sub
sub
pop
xorl
xchg
add
add
add
inc
add
push
sub
xchg
xchg
add
pop
sub
add
jmp
or
mov
mov
repz
je
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
scas
dec
fsub
mov
add
incl
add
mov
add
add
xorl
ret
add
xchg
push
add
xchg
add
add
sub
mov
pop
add
add
sub
add
push
xor
mov
mov
lea
sub
pop
xchg
sub
sub
lea
xchg
xchg
push
xchg
jmp
div
fs
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cmpsb
out
cmp
xor
cmc
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
hlt
mov
xor
mov
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
xchg
sahf
jmp
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
call
jne
add
xor
jmp
mov
scas
dec
fcompl
mov
add
add
xchg
pop
xchg
sub
sub
xchg
push
mov
mov
pop
jmp
or
and
jmp
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shr
in
mov
adc
mov
mull
xchg
shr
sub
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
jecxz
xlat
les
cs
pop
gs
cld
pushfw
push
call
push
hlt
push
jmp
fidivrs
add
add
xchg
pop
xor
push
jmp
scas
mov
lds
rcrb
adc
leave
pop
xorl
push
mov
mov
pop
lea
push
lea
add
mov
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
sahf
jg
xor
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
jne
jmp
popa
xchg
popf
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
ret
jmp
pop
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
jmp
xlat
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
xor
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
add
add
and
xchg
stos
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
jmp
popa
xchg
cmp
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
pop
mov
pop
add
and
jmp
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
out
sub
div
fs
xchg
ror
into
out
cld
test
or
in
call
cmp
jle
sub
mov
sbb
xlat
les
jne,pn
pushfw
push
call
cmp
or
jo
add
push
jmp
fidivrs
add
add
pop
pop
xorl
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
nop
mov
jmp
fidivrl
fidivrl
xchg
sub
inc
add
add
jmp
xchg
test
xor
in
lea
pop
xorl
lea
xchg
jmp
push
add
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fwait
cmp
call
ret
in
pop
sub
dec
add
add
add
xor
xor
pop
xorl
add
sub
xor
sub
add
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
jmp
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
sub
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
sbb
sub
adcb
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
xlat
jmp
jmp
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
lods
jmp
xor
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
push
mov
cmpb
jne
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
loope
pop
aas
or
push
clc
shll
aaa
movsb
or
mov
jmp
sbb
inc
out
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
mov
pushfw
push
call
sub
jmp
sub
sub
sub
sub
lea
add
add
jmp
add
jle
sub
mov
add
and
sub
pop
pop
xorl
lea
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
and
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
mov
jmp
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
jmp
test
or
add
addl
jle
jmp
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fistps
fidivrs
js
mov
and
inc
push
mov
jmp
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
jmp
and
fstps
fwait
cmp
sub
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
xor
es
mov
cmpb
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
add
jmp
shr
cmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
rorl
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
jmp
xchg
div
fs
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
jmp
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
rorb
call
lahf
in
mov
add
add
lea
lea
dec
inc
pop
xorl
lea
lea
add
add
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jg
xchg
stos
fwait
cmp
sub
add
xchg
inc
dec
add
sub
lea
lea
push
jmp
lods
jne
jnp
icebp
push
inc
lea
pop
push
mov
mov
lea
lea
jmp
popa
xchg
popf
adc
xchg
pop
sub
pop
xorl
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
dec
jmp
sbb
int
xchg
ror
into
out
cld
test
or
add
sub
addl
jle
sub
mov
sbb
xlat
les
jmp
gs
dec
loope
hlt
sbb
fidivrs
pushf
push
call
js
mov
and
inc
push
nop
push
xor
jmp
test
cmpsw
push
sub
lea
pop
jmp
in
mov
mov
add
pop
xorl
sub
sub
inc
dec
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
outsl
jl
pop
mov
es
jmp
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
jmp
adc
loopne
pop
aas
or
sub
pop
clc
shr
divl
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
ret
jmp
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
jmp
sub
mov
sbb
xlat
jmp
lods
loop
jmp
xor
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
push
pushfw
push
call
fdivs
push
xchg
test
xor
push
mov
xchg
xchg
xor
add
xor
xchg
dec
inc
add
sub
xchg
inc
dec
sub
add
pop
xorl
push
xchg
pop
sub
add
jmp
lods
jne
sub
xchg
xchg
sub
sub
xor
add
add
add
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jecxz
cltd
pop
add
add
lea
lea
push
xchg
xchg
xor
add
xchg
add
pop
sub
sub
lea
lea
lea
add
add
sub
add
sub
jmp
jp
mov
inc
pop
xor
xorl
xchg
sub
add
push
xchg
jmp
div
fs
xchg
rorb
test
or
add
add
add
clc
decl
inc
push
call
add
add
add
popfw
jmp
jmp
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
jmp
nop
mov
daa
mov
test
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
and
jmp
movb
fstps
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
cmp
jmp
inc
sub
cmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
dec
sub
daa
aam
jb
jmp
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
pushfw
push
call
xchg
ror
into
out
cld
test
sar
call
incl
pop
add
add
repnz
add
add
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cmp
dec
loope
ret
add
add
add
push
add
pop
push
xchg
pop
jmp
lea
nop
mov
pop
xorl
inc
sub
add
add
sub
sub
xor
push
add
pop
add
add
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
dec
xchg
stos
fwait
cmp
jbe
xor
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
jmp
inc
sub
mov
scas
dec
fsub
mov
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
jmp
aam
jb
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
rolb
daa
mull
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
xor
sub
cmp
dec
loope
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
jmp
lret
test
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
icebp
dec
mov
test
xor
imul
stos
or
push
and
jmp
jmp
dec
xchg
stos
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
shrb
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
cmp
pushfw
push
call
ss
movsb
or
add
add
inc
sub
push
sub
pop
push
lea
add
xchg
pop
add
add
pop
xorl
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
and
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
sub
or
add
addl
jle
out
fildll
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
test
clc
jmp
sbb
cli
stos
or
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
out
aam
jb
inc
jns
jmp
pop
insb
xor
pop
mov
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
int
xchg
shr
das
leave
into
out
cld
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
push
call
pusha
sbb
mov
js
mov
pop
sub
sub
xor
add
add
sub
add
add
add
lea
pop
xorl
xor
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
lock
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
jmp
mov
cmpb
jnp
icebp
jmp
push
inc
jmp
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
loop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
frstor
push
call
out
aam
jb
inc
inc
add
lea
jmp
xchg
add
add
xor
sub
sub
pop
xorl
dec
add
xchg
xchg
add
add
push
mov
sub
xchg
mov
jmp
leave
into
out
cld
test
or
rclb
rolb
roll
roll
roll
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
les
cs
lea
jmp
push
hlt
sbb
ljmp
mov
and
lea
lea
xor
jmp
mov
scas
sub
pop
xorl
xchg
xchg
push
lea
lea
add
add
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
xchg
lea
sub
sub
lea
pop
xorl
xchg
sub
sub
xchg
sub
sub
push
lea
lea
lea
lea
mov
pop
push
xchg
mov
xchg
add
lea
xchg
pop
push
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cwtl
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
rol
jmp
sbb
inc
out
aam
jb
inc
jns
lock
cmp
xchg
pop
add
and
pushf
movsl
jp
sub
mov
inc
pop
xor
shr
hlt
mov
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
pushfw
push
call
add
jle
and
add
add
push
lea
sub
mov
xchg
pop
lea
jmp
dec
loope
hlt
pop
xorl
sub
sub
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ljmp
push
mov
mov
xor
pop
push
xchg
lea
pop
add
add
xchg
xor
dec
add
add
add
pop
xorl
push
xchg
pop
xchg
push
xchg
sub
xchg
add
pop
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
adc
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
mov
pushfw
push
call
or
push
and
jmp
movsb
or
xchg
add
sub
sub
sub
xchg
add
lea
add
add
sub
sub
add
sub
push
lea
pop
lea
pop
xorl
jmp
mov
inc
pop
xor
shlb
decl
xchg
add
add
add
add
sub
sub
sub
sub
add
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
cmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
jmp
push
nop
mov
inc
lcall
cmc
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
add
jmp
mov
pop
lods
jne
jnp
xor
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
jmp
clc
shll
aaa
movsb
jmp
or
push
das
jmp
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
loope
jo
outsb
setl
inc
pop
xor
shlb
jmp
sbb
int
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
sub
test
cmp
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
and
inc
push
nop
mov
mov
jmp
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
xlat
lds
dec
sub
cs
out
aam
jb
inc
jns
repz
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
fdivrp
int3
adc
div
fs
xor
leave
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
call
pushfw
push
call
xchg
arpl
shll
add
xor
jmp
mov
xchg
sub
sub
jmp
scas
mov
shll
adc
rolb
mov
mov
sub
xchg
pop
add
add
push
mov
mov
mov
pop
push
sub
xchg
pop
sub
sub
xchg
xchg
xchg
lea
lea
xchg
add
sub
add
add
add
add
pop
xorl
sub
sub
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
fsubs
aam
jmp
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
es
sbb
xor
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
jmp
mov
and
jmp
inc
push
nop
mov
jmp
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
stos
or
push
and
fstps
push
pop
data16
adc
dec
outsl
jl
pop
mov
das
push
mov
pop
lods
jne
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
xor
pop
jmp
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
fnstenv
and
cs
jmp
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
jmp
fildll
push
xlat
jmp
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
in
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
or
cli
add
add
sub
cmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
mov
scas
dec
fsub
mov
inc
je
adc
jmp
loopne
pop
aas
or
push
clc
shll
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
in
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
jne
jmp
mov
int3
adc
div
fs
xor
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
xor
cs
cmp
dec
loope
repz
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
ret
jmp
sar
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
ja
dec
add
push
dec
dec
outsl
jl
pop
mov
es
popa
jmp
lods
jne
jnp
das
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
and
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
mov
pushfw
push
call
in
and
xchg
lea
sub
sub
sub
sub
sub
add
xchg
add
sub
lea
xchg
push
add
lea
xchg
xchg
pop
jmp
out
and
push
mov
add
jmp
mov
sbb
mov
pop
pop
xorl
sub
add
xchg
push
lea
jmp
hlt
sbb
add
add
lea
pop
xor
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
lea
nop
mov
xchg
push
lea
lea
add
pop
xchg
sub
sub
sub
add
inc
dec
push
mov
lea
xchg
pop
xchg
xchg
xchg
jmp
cmp
jbe
in
add
push
xchg
xchg
dec
inc
lea
pop
xorl
lea
sub
inc
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
or
add
push
inc
sub
add
xor
push
lea
jmp
popa
xchg
lea
lea
add
dec
pop
xorl
xor
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
adc
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
jmp
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
pusha
pushfw
push
call
addl
jle
sub
mov
xchg
lea
pop
xorl
lea
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
bnd
inc
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
and
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
in
icebp
push
inc
sub
jmp
scas
dec
fsubr
stc
jmp
in
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
jne
jmp
xor
shlb
int3
adc
xor
adcb
test
or
add
addl
jle
sub
mov
sbb
fdivl
xlat
les
xor
cmc
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
fistpl
shll
std
repnz
sar
repnz
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
jmp
outsl
jl
pop
mov
jmp
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
inc
je
adc
loopne
sub
push
negb
shll
aaa
movsb
or
push
das
cmp
sbb
sub
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
and
pop
add
and
pushf
movsl
jp
mov
inc
jmp
pop
xor
shlb
int3
adc
div
subl
pushfw
push
call
adcb
lea
sub
sub
pop
xorl
push
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cmc
mov
sbb
in
add
sub
sub
xor
push
xchg
pop
sub
add
push
add
xor
xchg
lea
add
pop
lea
xor
pop
xorl
sub
sub
dec
inc
xchg
add
add
inc
dec
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
shr
sub
pop
lods
jne
jnp
icebp
push
jmp
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
out
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
movl
jmp
jge
inc
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
rcll
adcb
sub
test
or
add
jmp
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
inc
or
add
fs
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
jmp
fstps
fwait
cmp
hlt
adc
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
loopne
icebp
push
inc
sub
scas
dec
fsub
movl
jmp
popa
jmp
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
xlat
ret
inc
jns
pop
insb
xor
xchg
pop
add
and
add
shr
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
shll
xlat
les
xor
cmp
dec
loope
hlt
sbb
pusha
sbb
sub
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
cs
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
movw
jmp
pop
mov
sub
mov
cmpb
jmp
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
jmp
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pushfw
push
call
pop
add
and
add
add
mov
mov
pop
lea
push
lea
pop
lea
pop
xorl
xchg
inc
dec
add
add
xchg
lea
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
addl
jle
sub
mov
cmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
lea
nop
mov
sub
scas
mov
shll
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
or
pushf
push
call
and
fsts
adc
and
insl
add
ljmp
add
add
mov
add
add
rcrl
jmp
sub
jmp
es
mov
mov
add
add
add
add
decl
incl
mov
add
add
popfw
jmp
jmp
pop
jmp
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
iret
or
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pusha
pushfw
push
call
in
and
add
add
mov
mov
pop
sub
sub
xchg
add
sub
xor
add
sub
pop
xorl
add
xchg
jmp
out
cld
test
testb
pop
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
les
cs
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
sar
repnz
in
mov
mov
test
sub
xor
imul
stos
or
push
and
fstps
sub
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
pushfw
push
call
repz
scas
dec
fsub
mov
leave
mov
mov
mov
pop
push
add
pop
add
add
push
xchg
pop
add
add
lea
lea
pop
xorl
sub
add
push
mov
add
jmp
xchg
pop
push
lea
mov
sub
sub
sub
sub
pop
lea
add
lea
push
mov
mov
sub
xchg
mov
pop
lea
lea
lea
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cmp
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
shll
nop
mov
lret
test
cmpsw
push
std
repnz
sar
ret
mov
test
xor
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
mov
pushfw
push
call
pop
lods
jne
jnp
icebp
xchg
xchg
xchg
xchg
inc
sub
pop
xorl
push
xchg
add
lea
xchg
mov
pop
add
sub
xchg
sub
sub
push
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jge
ss
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
xlat
dec
adc
div
fs
int
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
push
jmp
jmp
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
loop
cmpsw
push
std
jmp
repnz
sar
lahf
in
mov
mov
push
jmp
xchg
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
xorl
jmp
add
jne
jnp
sub
sub
scas
dec
fsub
mov
inc
je
adc
loopne
jecxz
pop
aas
or
push
clc
shll
jmp
aaa
movsb
or
adc
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
loope
and
pushf
movsl
jp
and
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
pushfw
push
call
out
cmp
fildll
add
add
add
add
add
mov
add
add
push
xchg
jmp
xchg
jmp
pusha
sbb
mov
icebp
add
add
xchg
lea
pop
jmp
inc
push
nop
mov
rolb
jmp
add
add
add
add
decl
mov
mov
add
add
add
pop
popfw
jmp
jmp
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
xlat
dec
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
adc
jmp
mov
cmpb
jnp
icebp
push
inc
sub
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
sbb
push
call
ret
push
lea
add
xchg
lea
add
pop
add
sub
add
xchg
dec
inc
lea
add
sub
pop
xorl
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
jmp
lea
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
fldpi
das
sahf
jg
xchg
stos
fwait
cmp
jmp
jbe
in
xor
adc
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
jmp
sub
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
mov
pushf
push
call
push
das
cmp
sbb
icebp
add
add
sub
add
xchg
add
add
pop
xorl
lea
jmp
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
