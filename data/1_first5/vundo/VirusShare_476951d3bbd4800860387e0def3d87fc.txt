add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
movsl
mov
shlb
pop
push
jo
or
push
add
add
add
push
add
mov
inc
add
ret
add
mov
add
add
adc
add
add
add
add
add
add
add
add
add
add
js
data16
dec
add
add
add
add
add
add
add
add
sub
pop
add
add
add
add
add
add
add
add
add
add
mov
movsl
add
add
mov
or
cmp
jne
mov
and
adc
add
mov
movsb
add
add
add
add
add
mov
mov
js
in
mov
ds
adc
add
mov
dec
add
outsl
add
add
sbb
lock
add
jbe
adc
add
mov
push
add
add
add
add
add
add
add
add
add
mov
sbb
fiaddl
xor
push
add
leave
add
add
add
add
xchg
dec
add
add
arpl
xchg
dec
add
dec
add
add
add
add
add
add
mov
aaa
add
add
add
dec
add
add
add
add
add
add
add
dec
add
adc
aaa
add
add
add
add
add
add
add
jmp
mov
mov
in
mov
xor
xchg
test
dec
add
add
add
add
add
mov
fadds
gs
add
add
add
mov
add
add
add
add
add
add
add
verr
add
adc
add
mov
arpl
adc
add
add
add
add
add
add
add
rolb
lcall
add
add
add
add
add
add
mov
pop
add
add
add
mov
add
add
add
add
mov
sub
popf
add
add
js
xchg
add
add
hlt
add
add
add
add
xchg
add
add
adc
pushf
add
add
dec
add
mov
dec
add
add
add
add
add
add
dec
add
add
add
dec
add
xchg
add
stc
add
add
add
add
add
add
roll
dec
add
js
inc
add
add
add
movsb
add
xchg
add
add
add
add
add
js
or
add
add
add
add
mov
js
adc
das
add
push
add
add
addl
and
add
das
add
add
add
add
add
add
add
add
add
add
add
mov
cwtl
add
or
add
add
add
add
add
add
fildl
sub
xchg
add
add
add
push
add
insb
add
ltr
add
add
add
add
dec
add
sub
popa
gs
cmc
xor
gs
sub
xor
enter
mov
jp
xchg
add
push
loop
cmpsb
adc
pop
cld
aad
push
xchg
mov
jo
pop
or
inc
xchg
loopne
stos
sub
int3
push
popf
out
popf
in
add
dec
mov
repnz
out
sarl
push
cltd
enter
mov
movsb
xchg
rcll
mov
push
dec
sub
je
cmpsl
xchg
js
daa
jns
loope
and
cmp
clc
mov
dec
cmp
gs
adc
js
and
xchg
dec
ja
add
mov
pop
ds
flds
mov
iret
adc
pop
cwtl
dec
sbb
inc
stos
testb
insb
adc
mov
cmc
xchg
and
or
jle
cld
xchg
idivl
popa
fsubs
push
push
in
dec
aaa
lods
dec
and
push
cld
adc
ljmp
xchg
fwait
sub
sub
movsl
inc
or
imul
pop
push
or
inc
out
push
xlat
icebp
test
enter
pop
push
or
and
mulb
aam
sbb
loop
out
rcr
jne
push
pop
xchg
adc
ds
cmc
repnz
fnstcw
jbe
add
out
lret
mov
jne
pop
cld
pop
lds
ror
xchg
and
iret
leave
aad
stos
ja
push
xchg
insb
pop
loope
popf
push
mov
lret
push
jns
jecxz
movsb
inc
andl
jns
inc
stos
inc
push
push
daa
out
ds
add
fsubs
fildl
dec
mov
ret
sti
notl
adc
xor
out
fiadds
out
mov
cld
cmp
jge
sbbb
addb
lock
dec
mov
nop
scas
dec
mov
inc
add
scas
dec
cmp
push
inc
mov
sub
mov
or
inc
pusha
movsl
sub
mov
inc
int3
movsb
pop
mov
push
add
lock
dec
pop
mov
nop
jmp
cmc
pop
dec
jp
push
push
in
std
ror
inc
outsl
not
fdivrp
cmp
dec
sbb
pop
testl
pop
imul
shlb
fidivrs
cmc
test
add
jne
push
fisttps
and
cmp
mov
adc
aas
inc
cwtl
adc
push
shlb
push
lahf
repnz
fdivrp
das
loope
xorl
xor
xor
testb
dec
movsb
jp
cmp
shrb
add
dec
rolb
js
mov
push
cmp
js
addr16
sbbl
add
insb
pop
pop
mov
add
in
lcall
jae
pop
sarl
daa
aaa
pop
popa
jns
pop
sub
lods
and
iret
std
stos
movsl
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
movsl
int
std
jp
push
cmp
sub
dec
jl
insl
call
sub
pop
int
cld
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
dec
std
in
jae
add
xor
dec
lock
or
jle
fs
in
inc
stos
lods
pop
int
mov
mov
roll
sahf
jmp
push
dec
inc
jb
cmp
adc
mov
inc
cmpsb
icebp
mov
inc
or
xchg
xor
mov
mov
and
loopne
loopne
repnz
movsl
int3
int
and
pop
or
dec
fadd
pop
pop
sbb
outsl
mov
inc
push
dec
fnstsw
pop
popf
cmp
aad
mov
adc
sub
bound
stos
scas
test
mov
test
mov
push
cmp
sub
repnz
mov
push
int
ja
push
jmp
add
mov
out
loopne
imul
sub
sbbb
std
push
jo
sbb
xor
dec
sarb
insl
repz
mov
mov
jnp
imul
call
inc
xor
scas
or
push
mov
mov
or
cmp
mov
or
insl
xor
stos
sbb
das
sahf
sbb
pop
fdivl
or
fimull
jge
insl
ljmp
sub
dec
std
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
int
pop
mov
cmp
fidivrs
mov
imul
popf
mov
adc
pushf
popf
add
adcb
dec
lret
or
cli
rcll
jno
mov
pop
ss
rcrl
pop
mov
mov
sbb
mov
ret
mov
mov
mov
cmpsl
cld
push
inc
adc
popa
xchg
scas
pop
int
cmpsl
push
xor
add
sbb
xchg
popa
les
sbb
out
mul
lret
leave
or
and
daa
jmp
push
popa
ja
push
arpl
mov
mov
sub
push
adc
scas
lcall
xor
in
stos
and
pop
sub
push
cwtl
xor
cmpsb
mov
cli
mov
adc
mov
cmpsb
in
testl
lods
clc
mov
or
loop
fs
pop
arpl
and
scas
or
push
adc
and
stos
and
bound
cmp
popa
jnp
dec
leave
mov
addr16
ret
stc
dec
cmp
arpl
testl
inc
not
and
pop
outsb
out
ret
rcll
std
subl
or
mov
inc
mov
faddp
cli
ja
ficomps
ret
push
xor
aaa
inc
push
or
push
and
mov
insb
jp
popa
push
push
pop
lcall
lea
xchg
dec
jle
addr16
loope
js
jne
sbb
adc
sub
lods
xchg
add
dec
icebp
cmp
out
cmpsb
sbb
in
mov
pop
mov
adc
dec
cmp
les
lret
mov
iret
pop
out
or
addr16
adc
xchg
jno
out
stos
in
jp
push
subb
mov
inc
or
adc
cmpsb
jbe
and
and
xor
notb
adc
ficomps
sbb
in
scas
into
decl
sbb
sub
scas
pusha
mov
xor
cmp
repz
mov
mov
mov
mov
in
shll
mov
int
call
and
fidivl
or
xor
into
lods
add
push
movsb
mov
sub
and
in
rcr
sbb
pop
mov
xor
insb
mov
xor
icebp
xchg
lret
out
in
xchg
insl
ds
fdivrs
cltd
mov
or
in
push
mov
jge
lock
jmp
js
enter
and
add
mov
push
jmp
xchg
sub
or
pop
jne
and
push
imul
sahf
sarb
scas
loop
in
mov
mov
ret
mov
mov
inc
insb
in
push
outsl
hlt
adc
push
sub
xlat
ja
mov
in
sub
adcl
dec
pop
jne
into
mov
mov
imul
movl
ljmp
inc
or
test
mov
sarl
adc
mov
add
arpl
xchg
int3
pop
fdivl
data16
add
push
jo
pop
out
leave
mov
insl
lret
pop
insb
enter
jb
push
movsb
inc
xor
add
push
add
mov
fmuls
sbb
ror
dec
sub
fidivrs
cli
aam
pop
je
pop
or
loop
inc
mov
cmc
repnz
xlat
popl
sbb
mov
stos
pusha
pop
mov
pop
ds
mov
fisubl
cmp
lods
cmpsb
jns
pushf
push
sbb
shrl
in
add
pop
adc
shr
jo
fcmovne
push
and
pop
mov
pop
dec
paddw
xor
cmc
sahf
cmp
mov
dec
push
or
cli
call
jecxz
or
cmp
jmp
movsb
out
imul
and
popf
cli
jb
mov
test
mov
inc
or
out
or
xor
scas
js
push
lock
in
pop
mov
fstl
inc
mov
in
and
xchg
ljmp
sbb
rclb
jnp
sub
add
lods
pop
or
mov
scas
aas
xor
xchg
test
mov
fwait
je
cwtl
movsb
pop
cltd
fwait
scas
std
roll
add
sbb
xchg
pop
cmp
fxtract
sar
xor
insl
sbb
das
cmp
push
in
jmp
aas
ljmp
add
sarb
adc
out
cli
inc
popa
and
daa
pop
xchg
mul
loop
sbb
cmpsb
mov
xor
fildll
imul
mov
cmpsb
inc
mov
push
dec
roll
adc
mov
bound
out
xor
dec
cltd
sbb
xchg
and
popl
sbb
or
in
cmp
pop
ss
or
mov
mov
outsb
iret
decb
mov
dec
pop
pop
pop
decl
sbb
or
cld
push
cmc
and
or
dec
pop
jae
in
mov
call
imul
xor
xchg
ja
in
sarb
push
bound
or
fsubrs
stos
mov
mov
outsl
scas
xchg
ds
jl
xor
cmp
dec
cmp
enter
jo
fmulp
pop
fistpll
xchg
test
testl
inc
pop
ljmp
push
movsb
and
jge
fidivrs
inc
out
jae
or
sbb
cmp
sbbb
dec
outsl
mov
jne
inc
in
loopne
pop
xor
xor
cmp
jo
cmp
loope
fcomps
cmpsl
xor
xchg
orb
adc
jmp
adc
push
sti
insb
jns
mov
add
jnp
fcoms
aaa
add
xchg
xlat
mov
xchg
cltd
mov
mov
leave
test
stos
add
dec
jbe
repz
xchg
xchg
sbb
arpl
aad
imul
ds
sub
sub
sub
lret
inc
into
stc
outsl
sbb
daa
cwtl
adc
mov
mov
mov
add
jo
xchg
mov
mov
pop
nop
stc
outsl
stc
jae
in
pushf
adc
inc
lret
outsb
add
and
das
pop
jb
stc
movsl
adc
adc
stc
fnstcw
iret
xor
mov
add
out
jb
popl
stos
pusha
mov
test
pop
jbe
fimuls
push
sbb
mov
adc
fnstcw
nop
mov
int3
or
or
rcrb
test
cmp
adc
test
int
pop
stos
stc
and
push
and
jno
aaa
in
fs
lcall
insb
out
arpl
push
or
mov
jp
push
mov
push
pop
ljmp
cmpsl
shrb
dec
xchg
jo
mov
in
ds
jns
ja
inc
mov
dec
mov
fs
sub
or
ljmp
dec
mov
stos
dec
dec
into
and
addl
sbb
cmpsb
xchg
push
cld
int
call
test
mov
sub
aam
xor
sub
movsb
dec
sbb
xchg
jg
rcl
shrb
or
inc
cmpsb
inc
in
jnp
not
xchg
sahf
jno
std
cli
jbe
rol
in
add
ljmp
sarb
std
je
ss
mov
cmpsb
cmp
xchg
inc
outsb
dec
fidivl
jb
and
or
push
popl
es
mov
dec
out
pop
icebp
and
mov
insb
test
test
stos
shlb
push
sbb
int3
push
mov
jbe
ljmp
jnp
sbb
mov
loop
loopne
cmp
ss
jmp
addr16
icebp
cmp
ja
std
xchg
jnp
adc
mov
sbb
popf
into
push
popf
push
xchg
add
cmc
cmp
mov
js
sub
in
out
mov
inc
testl
add
int3
add
stc
fiadds
push
cmp
mov
insl
fwait
cmpb
pop
sub
cmc
sub
in
sub
popa
cli
loopne
or
icebp
jno
cmpsb
mov
ficompl
popa
sbb
sysenter
cmp
arpl
adc
jg
jno
testb
fstl
nop
dec
popf
cmpsb
ret
bound
std
int3
fbstp
ss
add
inc
xchg
cmp
jecxz
fildll
into
iret
dec
out
mov
sbb
mov
hlt
inc
stc
dec
xor
xor
mov
xchg
ds
dec
data16
xchg
sbb
mov
pop
xchg
pop
sti
pop
pusha
aad
repz
mov
lahf
dec
mov
add
and
lret
and
sub
mov
fwait
in
repz
sub
xchg
leave
sub
jp
jmp
add
sbb
push
xor
clc
xlat
je
adc
mov
divb
ret
insl
repz
adc
jbe
enter
lret
dec
xchg
sbbl
enter
fstpl
in
jle
xor
sti
loope
cmp
push
sbb
fwait
pop
test
mov
mov
dec
cwtl
mov
mov
fcmovnu
adc
add
aad
aad
jne
cmp
arpl
inc
cwtl
xchg
push
or
jp
push
cmp
pop
outsb
push
mov
inc
push
jecxz
mov
ljmp
jnp
imul
je,pn
rcll
push
add
scas
mov
adc
push
xor
sahf
cmp
inc
push
xchg
adc
or
arpl
add
dec
add
dec
xor
rol
pop
jge
xchg
mov
and
push
xor
insl
mov
pop
in
mov
add
testl
stos
bnd
lahf
inc
movsl
push
lcall
sub
lcall
leave
mov
cmpb
es
lock
and
xor
xor
inc
shrl
popf
test
jbe
dec
pushf
mov
ja
mov
xor
cmp
sbb
icebp
add
hlt
hlt
in
imul
inc
ret
mov
iret
mov
scas
mov
shll
inc
inc
mov
dec
dec
sub
outsl
js
dec
add
mov
lcall
aad
test
in
xchg
mov
je
mov
dec
pop
lret
inc
test
inc
int
fists
roll
xchg
imul
rcr
mov
or
cmp
scas
js
les
cwtl
test
and
mov
sub
fisubs
es
rolb
test
cmpl
sbb
sub
mov
xchg
adc
dec
in
and
in
jmp
rcrb
in
cmp
pop
test
fnsave
or
push
sub
mov
inc
pop
xchg
pop
xchg
nop
xlat
inc
or
test
cmp
stos
fisttpl
sbb
or
sub
ds
xlat
arpl
cli
jne
xchg
cmc
jo
ljmp
sub
daa
cmp
lods
lret
xor
sti
in
cmp
mov
lcall
mov
repz
push
pminub
and
fldl
ljmp
xor
inc
fbstp
hlt
add
dec
or
cmp
push
and
mov
xchg
and
filds
or
addr16
not
fcoml
dec
push
jmp
je
jne
nop
or
imul
fnsave
test
mov
lds
rorb
lea
mov
movsb
add
push
das
adc
mov
icebp
jecxz
pop
movsb
cmpl
arpl
into
out
negl
lahf
or
push
clc
push
and
adc
fisttps
pop
jne
lods
jmp
and
dec
xor
adc
sub
pop
xchg
mov
repz
loopne
jl
xchg
add
orl
sub
add
sbb
sbb
pop
enter
sbb
mov
jp
inc
out
jmp
inc
or
mov
lods
std
cmp
or
jnp
pop
jo
lcall
inc
push
pusha
pop
ret
lods
sarl
adc
je
addr16
push
lods
xchg
mov
scas
mov
mov
push
pop
adc
dec
mov
and
imul
or
sub
mov
cli
inc
mov
jecxz
mov
mov
xor
rcrl
adc
jns
sub
mov
nop
xchg
sbb
push
sarb
lahf
push
sarl
and
jge
addr16
sub
xor
adc
cmpsb
shll
push
xchg
sti
sub
rorb
push
jp
sbb
inc
imull
outsl
lock
and
mov
je
fimull
fisttps
mov
sbb
out
sarb
jle
mov
cltd
lret
sbb
movsl
mov
xchg
sbb
icebp
cs
lret
inc
popf
push
ffree
push
out
inc
addr16
arpl
mov
xchg
add
pop
or
push
cmp
cmp
mov
test
xlat
add
inc
jne
mov
mov
sti
sbb
jae
jne
push
xchg
fcompl
jecxz
jmp
inc
xlat
inc
stc
aam
and
loop
or
dec
pop
in
testb
lds
jno
cmpsl
cmp
lods
ret
xor
mov
cmp
nop
pop
mov
lret
test
repnz
mov
lret
push
scas
dec
xchg
ret
in
insl
in
mov
js
test
mov
arpl
xchg
addl
sub
imul
sbb
cmp
imul
dec
lahf
xchg
jo
mov
cmp
dec
sub
int3
fadds
mov
add
sbb
repz
sub
xchg
std
xchg
add
int3
adcb
in
mov
adc
mov
adc
mov
shlb
adc
ss
ljmp
push
push
cli
insb
shl
fidivs
arpl
cmpsl
or
pushf
xor
mov
or
cmp
sbb
or
pop
jg
ret
mov
enter
mov
add
pop
fwait
cli
inc
add
lret
mov
dec
jbe
sbb
inc
rcr
inc
addr16
inc
gs
js
cmp
xchg
mov
or
pushf
out
mov
push
es
hlt
ss
outsl
sub
adc
jecxz
in
pop
cltd
cmpsl
leave
and
dec
xor
mov
and
adc
loop
out
lods
mov
repnz
idivb
pop
sarl
les
mov
adc
je
jp
cmc
lock
outsl
xchg
or
fs
push
or
bound
xor
mov
int3
fwait
sbb
fmul
clc
add
jb
lds
stos
sub
dec
cmp
mov
scas
pop
mov
fs
pop
lcall
aad
adc
int3
dec
neg
or
sahf
inc
sti
popf
es
fsubr
sbb
cmp
add
fs
rolb
cmp
push
add
and
mov
mov
movsb
xor
jbe
xchg
fnsave
pop
pop
paddw
pop
popa
lods
addb
pop
cltd
sbb
pop
arpl
outsb
sbb
aas
daa
dec
sbb
jne
cmp
lea
mov
mov
dec
sbb
mov
dec
mov
orl
mov
push
pop
xor
es
fldt
xor
fwait
push
inc
fwait
stos
sbb
dec
jbe
es
jl
fdivrs
and
add
fsts
lret
test
daa
nop
ret
rol
int
mov
scas
push
mov
and
orb
pusha
mov
push
mov
pop
pop
mov
fcoms
iret
pusha
cmp
and
ss
sbb
jno
js
jle
sub
lock
in
in
shrb
cltd
add
inc
mov
mov
pushf
mov
dec
mov
or
std
push
mov
ret
adc
repnz
nop
stos
movzbl
sbbl
xor
inc
xor
adc
lods
add
sub
shl
movsl
stc
in
cmpsl
int3
jp
aad
adc
add
dec
std
mov
cs
xchg
pop
cld
iret
out
mov
xchg
cmp
vzeroall
mov
and
leave
imul
jecxz
cltd
lahf
pusha
pusha
jbe
mov
outsl
cmp
mov
icebp
movsl
pop
push
jg
mov
popa
ds
repnz
ja
push
call
sahf
xor
and
jl
jecxz
cltd
ss
mov
aaa
and
cli
stc
jno
repz
insb
xor
popf
mov
xor
aaa
nop
ss
stos
and
pushf
rorb
jp
mov
mov
notl
leave
pop
repnz
iret
lods
aam
jns
pop
inc
out
pop
rclb
pop
push
cwtl
push
xchg
ret
and
std
cwtl
mov
hlt
jnp
dec
jnp
sti
ret
pop
and
xchg
cmp
xor
sbbl
ret
imul
loope
pop
and
cli
mov
aad
loopne
imul
aam
stos
int3
mov
lods
or
jmp
mov
jp
ret
cmp
daa
out
or
or
inc
mov
fwait
popf
xchg
add
repz
fwait
cmp
push
jb
adc
or
xchg
fxch
inc
sub
push
fists
and
lock
data16
insb
mov
or
out
dec
idivl
rorb
ja
inc
pop
in
es
in
aam
imul
pop
lret
dec
add
dec
shll
movsb
sub
sbb
dec
fiadds
cmpl
add
dec
stos
repnz
cmp
inc
dec
lahf
sub
mov
jae
subl
data16
cmc
scas
pop
mov
adc
mov
jo
out
arpl
std
ret
xchg
and
ss
cmc
pop
pop
cmp
mov
in
lods
dec
or
or
or
shlb
adc
push
pusha
rclb
push
shll
add
xchg
add
or
jae
mov
out
jecxz
pusha
cmpb
cmp
mov
jmp
lods
adc
mov
mov
xlat
ss
dec
mov
jne
testl
pop
pop
cmp
daa
add
idivl
push
dec
jmp
push
mov
pop
dec
inc
xchg
jmp
mov
cmpsl
sub
mov
xor
dec
mov
inc
and
dec
lret
fistpl
lea
mov
mov
or
and
cmp
mov
mov
das
shll
repz
std
popf
addr16
and
pop
negb
popf
das
cmp
sar
xlat
into
cmc
adc
mov
outsl
inc
fdivrl
dec
xor
lds
mov
sub
aaa
or
sar
fcomps
decb
mov
sbb
into
lock
stos
and
mov
jns
into
xor
cmp
dec
push
scas
inc
int3
and
dec
dec
mov
add
or
testl
pop
sub
dec
mov
test
add
sub
aaa
insb
pop
push
jnp
push
pop
pop
divb
jns
pop
aad
jge
cmp
push
insl
cwtl
clc
icebp
cmp
push
inc
xorb
cmp
popa
out
in
mov
lcall
int3
sbb
in
lret
xchg
insl
out
cmpsb
out
sbb
cltd
sbb
mov
push
push
pop
aad
push
js
pop
mov
jb
add
jmp
and
mov
adc
fidivrl
and
pop
or
or
fildll
add
dec
cmp
mov
imul
outsl
pop
movsb
lcall
or
xor
and
jns
cs
movsl
repz
dec
push
je
cmp
adc
fbld
je
adc
scas
mov
push
unpckhps
shrb
mov
mov
push
pop
pop
mov
mov
push
fcoms
cmp
roll
add
sarl
jno
jo
jp
shlb
mov
mov
cwtl
jae
fadds
pop
add
jo
jp
test
jnp
add
and
aad
bound
jge
mov
jmp
repz
jbe
test
fisttpll
xor
ret
mov
stos
dec
in
push
ret
and
cmp
loop
push
fadds
jnp
cmp
add
mov
cmpsl
jp
scas
sbb
ss
incb
push
push
xchg
cmp
lea
xchg
xchg
cltd
or
loop
inc
cs
stos
pop
outsb
xchg
iret
mov
icebp
pusha
add
aaa
call
icebp
js,pn
insl
cmp
push
sbb
rorl
stc
xor
or
arpl
daa
sub
push
fcoml
xor
insl
mov
or
lea
mov
fimull
jge
insl
ljmp
sub
dec
std
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
dec
std
jp
push
sbb
sub
dec
lret
insl
jmp
lcall
fcompl
dec
cld
jp
push
sbb
sub
dec
pusha
xlat
cli
insl
popf
push
test
inc
rclb
sub
sbb
add
pop
inc
test
mov
dec
call
imul
lds
mov
js
dec
stc
pop
or
cmp
imul
popa
sbb
push
stc
pop
insl
add
mov
and
and
addr16
scas
fstps
dec
sub
or
pop
jae
sarb
jle
mov
out
pop
xchg
sbb
inc
insl
inc
lods
mov
adc
imul
scas
je
in
test
pop
push
sbb
dec
cmp
jmp
inc
push
push
cmp
push
sbb
imul
cmpsl
or
aam
ja
enter
pop
push
enter
lea
xor
pop
jb
sub
sub
pop
or
pop
add
aaa
jne
jbe
add
test
inc
loope
sbb
int3
mov
mov
std
or
imul
iret
cmp
push
pop
pop
iret
test
mov
add
push
clc
pop
enter
inc
jmp
frstor
jno
add
js
push
stc
or
int
int3
dec
loopne
fidivrs
mov
mov
lret
les
cld
cmp
or
push
and
outsb
rorb
sub
inc
divl
mov
xchg
add
cmc
imul
ljmp
dec
stc
pop
or
cmp
imul
cltd
cmp
push
stc
pop
or
cmp
imul
aas
jno
mov
cmpsb
mov
dec
cs
push
jae
mov
dec
orl
ret
xchg
mov
xchg
adc
xor
cld
or
mov
add
int
ffree
pop
stos
repnz
cmpsl
fisttpl
sbb
push
xchg
mov
and
xorl
mov
in
mov
lods
sbb
dec
scas
jmp
or
les
mov
pushf
mov
xchg
adc
pop
ficompl
pop
xchg
xlat
stos
lahf
adc
pusha
and
pop
sarl
jnp
and
lret
cltd
aad
mov
jle
cmp
inc
jae
test
nop
sub
mov
stos
mov
sbb
out
mov
insl
pop
and
cli
sbb
je
cmpsb
call
vsubps
addr16
lahf
ja
push
push
cwtl
outsl
out
aas
xchg
xorb
cld
mov
jnp
xor
cmpsl
loopne
xchg
or
in
scas
cmc
jne
scas
sbb
rclb
retw
dec
bound
push
iret
repz
push
add
xchg
push
cmp
fistps
das
dec
mov
or
stos
push
pop
lret
mov
push
jo
repnz
and
cmpl
mov
lcall
stos
inc
cmp
sub
mov
hlt
cmp
push
push
shr
cmp
imul
bound
adc
or
popa
andb
cltd
sbb
inc
xchg
enter
shl
sbb
les
rorl
test
adc
cmp
mov
das
in
hlt
jp
imul
inc
dec
pop
sbb
bound
add
movsb
mov
nop
add
clc
in
cmp
xor
nop
cmp
lcall
lods
cli
mov
pop
mov
sbb
fwait
jae
repz
jecxz
call
insl
dec
inc
loopne
xchg
stos
jns
daa
arpl
lcall
push
fisubrl
sub
scas
pop
xor
out
and
xor
les
int3
inc
ds
imul
stos
stos
cli
ss
stos
out
dec
sti
loop
mov
adc
jl
data16
out
fs
lods
lds
adc
or
dec
mov
mov
aaa
jp
or
push
fistps
shlb
mov
mov
jmp
mov
mov
std
std
inc
sub
dec
inc
jbe
dec
inc
or
cmpsl
test
or
insl
mov
push
cli
in
mov
xchg
addr16
ret
adc
or
jae
push
xlat
repnz
xchg
in
in
push
sbbl
mov
popa
subb
mov
xlat
fsub
jle
outsb
mov
test
lods
xchg
jmp
lret
pop
lret
jp
in
xchg
pop
cmp
daa
xchg
inc
mov
or
inc
daa
cmp
or
add
insb
idiv
jp
mov
jge
iret
cmp
or
fldl
mov
dec
push
cmc
in
jo
fiaddl
mov
jno
xlat
ret
sti
jo
pop
cltd
sbb
aas
push
loope
ljmp
and
shrb
sub
arpl
aad
cmc
xchg
ffreep
mov
mov
mov
dec
jne
rcrl
mov
loop
enter
push
mov
popf
adc
lret
cmc
stos
jnp
cwtl
jno
pop
sbb
shl
push
or
jae
mov
mov
and
add
inc
mov
dec
sbb
jo
dec
inc
mov
push
sahf
pop
hlt
push
int
mov
insl
outsb
push
cmpsl
lahf
jnp
stc
mov
adc
mov
fmul
jecxz
xor
and
gs
push
sbb
mov
inc
and
int
mov
inc
inc
xor
jge
cmpsb
rclb
or
cmpsb
fdivl
aam
insl
daa
mov
pop
insl
dec
mov
jecxz
pop
das
mov
inc
dec
mov
out
fwait
xor
adc
sub
xor
push
mov
scas
fcomps
sbb
mov
xchg
shll
mov
dec
loop
pop
mov
cvtps2pd
decl
popa
cmpsb
push
lret
dec
cmp
mov
arpl
mulb
arpl
xchg
std
std
lcall
push
lds
pop
sbb
popa
int
loope
jle
fildl
aam
rcrl
push
pop
xor
mov
pusha
cmp
es
jo
ja
add
and
shlb
lods
inc
pop
push
xchg
push
ljmp
mull
dec
out
cmp
lahf
mov
jns
test
mov
lret
mov
push
mov
cmp
loop
scas
pop
push
inc
push
mov
out
stc
cmc
enter
clc
mov
mov
popf
mov
scas
mov
ret
add
fs
add
pop
scas
add
xchg
lock
pop
lea
icebp
mov
js
jl
push
push
cmp
sbb
ljmp
iret
dec
xchg
adc
push
push
sahf
fcmovbe
daa
mov
and
add
mov
aaa
mov
dec
clc
mov
inc
int
pusha
push
mov
fadds
cmp
and
outsl
rorb
fs
and
lahf
sbb
rcll
cmpsl
lret
shl
in
adc
mov
imul
sbbl
xchg
push
sbb
fistpl
aas
and
cmp
xor
stos
sbb
icebp
sub
xor
cmp
pushf
or
dec
jmp
mov
divb
movsl
xchg
repnz
or
pop
out
sbb
test
push
adc
jge
cmp
in
cwtl
hlt
adcb
xchg
cmp
cmp
xchg
mov
adc
xchg
inc
push
sub
jecxz
jo
in
rorl
ret
pushf
mov
pop
popf
mov
movsl
dec
add
push
and
add
test
jnp
loopne
mov
out
lret
add
data16
sub
and
mov
test
phsubsw
jp
dec
or
push
cltd
pop
and
sub
jg
jnp
xlat
mov
adc
pop
mov
push
inc
add
aaa
pop
adc
arpl
or
xchg
mov
xlat
jb
sbb
jb
hlt
stos
jae
lea
jmp
add
enter
inc
and
and
repnz
dec
sbb
cmpsb
inc
fs
push
icebp
fwait
dec
lcall
pop
idivb
xlat
gs
push
jecxz
ret
or
cmp
stc
adc
cld
add
jae
mov
or
cmpb
test
xchg
fildl
xchg
je
stos
mov
and
subl
inc
mov
arpl
test
cmpsl
rcr
test
mov
push
scas
shrl
mov
cmp
pop
jle
pusha
push
addr16
cmp
iret
leave
and
je
mov
nop
cmp
sbb
push
test
mov
add
into
xchg
xor
fidivrs
dec
and
outsl
imul
push
mov
icebp
mov
idivb
sbb
int3
nop
jne
add
rcl
inc
xchg
rcll
stc
add
stc
mov
jnp
sbb
mov
and
sub
ljmp
sahf
and
arpl
xor
into
arpl
or
andb
mov
sub
add
inc
mov
lret
inc
pop
cmp
lods
insb
in
jl
adc
insl
mov
pshufw
mov
mov
dec
push
das
and
mov
and
mov
das
nop
adc
sti
repnz
stc
popf
jge
adc
stos
dec
add
addb
ds
in
addb
or
neg
fsubrl
pop
lea
jno
xchg
xor
fidivrl
decb
xor
icebp
add
jle
imul
mov
jno
pushf
adc
int
popa
sub
lret
sub
les
jge
add
cmp
sub
mov
out
in
iret
movsl
fldcw
jne
movsb
inc
mov
cmc
push
inc
push
push
repz
out
pop
pop
xchg
jae
nop
enter
aam
cmpsl
aad
push
sub
sti
fxch
mov
jge
call
mov
in
test
sub
int
lahf
out
rcl
inc
lahf
pop
or
dec
mov
pop
cmc
xor
sub
adc
mov
or
mov
adc
outsl
imull
and
jne
mov
add
je
mov
les
mov
addr16
dec
xlat
cmc
testb
push
stos
add
pop
mov
pop
lret
fdivrl
lahf
pop
int3
xchg
inc
jge
inc
xchg
mov
push
dec
add
add
lea
add
test
push
scas
ss
insb
cmpsl
leave
mov
fcompl
mov
mov
in
xchg
sub
loop
or
das
mov
out
xor
and
push
inc
fwait
das
mov
dec
inc
or
mov
ss
mov
inc
lahf
mov
lret
xor
pop
cmp
push
out
js
or
rorl
fstpt
xchg
es
imul
sbb
push
cmp
imul
pop
mov
sbb
jge
stos
rcll
pop
stc
cmpb
sub
int3
ficomps
testl
or
add
js
pusha
pop
and
push
cltd
jge
in
out
es
push
lock
mov
pop
cltd
outsb
add
lds
and
cmp
push
out
and
sbb
cmc
loop
dec
mov
and
mov
cmp
adc
sub
insl
push
push
xor
insb
iret
xor
push
aaa
mov
xchg
xor
sub
mov
sbb
mov
movsl
cmp
popf
jmp
es
dec
leave
ja
mov
nop
leave
in
inc
and
mov
cmp
int
xchg
enter
add
pop
cmpsl
fadd
pop
jne
mov
movsb
adc
adc
fsubs
adc
push
pop
imul
jbe
jb
clc
cli
sub
out
sub
imull
inc
jbe
mov
pop
sar
sbbl
bswap
lock
adc
int3
and
push
jg
cmp
popa
mov
rolb
jge
fwait
jecxz,pn
sub
icebp
cli
in
test
pop
mov
and
sahf
pop
mov
and
push
mov
cmp
fdivl
add
adc
mov
adc
jl
sbb
inc
imul
push
jns
or
mov
mov
stos
cmp
clc
shl
mov
jg
jg
rcll
jno
out
xor
flds
mov
ja
push
xchg
into
push
mov
sbb
movsl
jmp
jb
mov
js
inc
lret
ror
cmp
mov
mov
jp
jecxz
sarb
in
popf
xor
xor
ljmp
jbe
xor
or
fs
or
cmp
addl
adc
xor
and
and
movsl
aad
movsb
andb
in
mov
mov
cmpsb
loope
mov
out
sbb
sti
inc
mov
jo
push
jge
sbb
xchg
inc
popw
pop
pushf
xor
arpl
mov
pusha
dec
inc
lea
xor
cld
pop
dec
and
dec
add
lods
and
jge
push
mov
add
dec
pusha
cli
push
rdmsr
sbb
std
enter
das
int
cmp
xchg
or
cs
sbb
cli
stos
fbstp
cwtl
xchg
pop
pop
jle
cmp
mov
xchg
pop
xchg
test
stos
mov
xor
enter
sbb
cmp
imul
xchg
rorb
push
imul
fidivrs
mov
jbe
ret
pop
add
das
jne
ja
or
push
xor
push
in
std
imul
xchg
add
or
sahf
mov
dec
aaa
imul
jno
sbbl
push
dec
arpl
sbb
and
xor
fs
cmc
dec
imul
xor
pop
out
xchg
xor
inc
dec
jns
add
jmp
enter
xchg
rolb
add
nop
scas
sbb
xor
mov
nop
cmc
jne
popa
cmp
mov
lock
rcl
add
mov
xchg
clc
ret
leave
popf
jnp
jae
push
push
aaa
jnp
inc
push
popf
mov
mov
cs
jl
push
xor
out
mov
imul
and
and
pusha
add
sbb
jo
dec
les
xor
sbb
in
push
mov
cltd
push
sbb
push
pop
in
mov
adc
or
pop
loop
test
mov
rorb
jb
fbstp
and
mov
je
pop
adc
xor
mov
dec
add
test
xor
icebp
mov
xchg
mov
mov
mov
adc
inc
out
fisubrl
inc
in
stc
loopne
pop
cmc
cmp
sub
mov
mov
movsb
fs
mov
and
and
mov
mov
int3
or
pop
cld
add
xor
xor
cltd
dec
dec
add
inc
aad
sbb
movsb
arpl
scas
mov
sbb
dec
inc
pop
mov
insb
mov
xor
mov
dec
idivb
sbb
sub
jns
inc
xchg
cmp
repz
sub
mov
pop
imul
js
and
xchg
jns
rcrb
cli
or
sub
sbbl
cmpsl
lret
sbb
shl
rol
pop
fmulp
testl
cwtl
and
es
sub
push
outsl
xchg
jnp
adc
mov
cmp
int3
xchg
ds
mov
and
pushf
fcoml
push
jge
arpl
dec
nopl
lods
or
or
popf
cmp
cmp
sar
movsb
test
sbb
xor
push
movsb
ret
in
vmptrst
dec
int3
sahf
out
xor
xchg
push
xchg
into
fisubl
jmp
mov
xor
icebp
lods
cmp
mov
daa
imul
mov
lcall
cli
insl
xchg
adc
adc
out
dec
push
pop
mov
inc
enter
cmpsb
bndldx
cld
mov
fidivl
xchg
inc
mull
aaa
and
add
lcall
test
mov
es
negb
test
das
sub
or
mov
or
fstpt
push
pop
adc
add
outsl
push
lods
inc
push
aam
pop
cmp
cmp
sbb
inc
xor
in
pushaw
fisttpl
insb
es
fcompl
loop
iret
add
popf
dec
xchg
imul
cmpsb
and
js
mov
sbb
hlt
adc
imul
lahf
je
aaa
xor
jbe
cmp
inc
jb
icebp
iret
rcr
push
rclb
outsb
into
sbb
jmp
rcr
movsb
test
mov
mov
or
int3
or
or
adc
movsb
jle
xlat
sbb
je
xchg
mov
movsb
dec
icebp
fst
ret
dec
cmp
arpl
aam
or
loope
inc
sbb
daa
jl
pushf
sub
shlb
push
jmp
in
outsb
test
xor
imul
fdivs
clc
mov
dec
pop
bnd
pop
push
sub
mov
push
rolb
mov
add
movsl
dec
add
pop
out
dec
dec
cmp
ljmp
fnstenv
adc
scas
dec
add
inc
push
mov
push
mov
jp
cmc
inc
pop
popa
inc
add
cmc
ja
cmp
sbb
and
inc
lahf
dec
shll
pop
fs
out
jp
push
stc
fisttps
adc
cld
inc
mov
int3
nop
sbb
out
int
mov
mov
das
rorb
pop
sbb
cli
aaa
testb
ret
nop
add
sub
js
outsl
xor
sbb
jp
insl
loop
pushf
cmpsl
int3
jl
sub
push
jo
pusha
outsl
aam
in
or
aaa
rol
jp
test
movsl
jmp
add
fsubrs
je
xchg
inc
push
divl
xchg
dec
dec
call
mov
out
dec
mov
mov
mov
pop
enter
inc
popl
lods
jcxz
and
xor
mov
push
or
push
nop
scas
ljmp
push
fstps
inc
aam
push
pop
into
sbb
lods
imul
jno
xchg
and
and
mov
movl
push
fists
mov
gs
push
int3
cmp
lds
pop
jne
jmp
loope
aad
mov
xchg
xchg
xchg
cmp
mov
ds
dec
bound
lock
adcb
sub
test
ds
inc
push
scas
inc
scas
testl
jg
sbb
es
pop
cli
jb
rclb
popf
std
dec
sub
cmp
sbb
fdivs
cmpsl
cmp
out
mov
inc
pop
mov
into
inc
stos
jne
int3
mov
data16
inc
and
add
or
sbb
out
cmpsb
test
xor
fcmovu
movsl
mov
inc
lahf
aaa
pop
pop
fisubrs
into
outsb
cld
icebp
xchg
aas
movsl
push
pop
ret
mov
pop
test
in
js
clc
sbb
adc
pop
mov
or
mov
inc
mov
mov
subb
out
cmc
jae
mov
xchg
xchg
lret
xchg
sti
push
dec
push
inc
rorb
adc
sbb
or
dec
push
cmp
mov
and
inc
pop
sbb
ret
loop
adc
lret
int
aam
and
or
test
mov
dec
in
cmp
lods
sbb
xlat
or
ret
add
stos
imul
lods
xor
movsb
loope
cltd
and
jae
das
imul
rcr
mov
shrb
cwtl
dec
jle
mov
lock
mov
popa
push
scas
and
push
sbbb
or
daa
mov
push
cli
inc
push
insl
jne
out
xor
cmp
jb
mov
xchg
and
sti
dec
xchg
mov
cmp
pop
shll
aad
mov
sbb
fdivl
sbb
out
xchg
gs
xchg
jl
ja
inc
cmp
std
sub
inc
jecxz
les
jbe
cmc
cmp
leave
test
jmp
mov
adc
cmp
nop
inc
lds
adc
loopne
inc
mov
push
sub
mul
push
out
inc
push
rorb
mov
cwtl
mov
mov
fbld
and
outsl
add
and
inc
or
fwait
pop
pop
in
in
push
mov
jne
fadds
cli
fs
ljmp
sarb
fdiv
fcmovnu
shlb
mov
or
or
mov
cmp
ret
inc
icebp
rorl
in
ljmp
repnz
inc
push
mov
add
iret
sub
jnp
pop
lret
outsb
test
lods
xor
shrb
sbb
aaa
dec
stos
xlat
stos
dec
sbb
adc
ds
adc
pop
mov
nop
mov
loope
mov
pop
lea
pop
push
rcl
movsb
pop
repz
pop
iret
push
dec
inc
pop
and
addr16
imul
or
xchg
sbb
aam
imul
sar
mov
xchg
call
test
xor
jns
nop
ret
clc
xchg
jnp
mov
cmpsb
sbb
stos
push
jg
lahf
lret
jp
and
orl
xor
jmp
mov
pop
je
pop
push
add
or
nop
mov
pushf
sub
jbe
cli
inc
jbe
fildl
xchg
and
adc
outsb
call
pop
repz
sbb
sub
shrb
mov
testl
mov
or
mov
lea
int3
movsl
scas
add
xchg
add
mov
outsb
xchg
mov
jnp
jno
lahf
stos
or
jp
jg
mov
xor
sub
int
rorl
clc
lea
cmpsl
dec
test
sub
sbb
hlt
xchg
xchg
or
sbb
pop
push
pop
sbb
xor
mov
call
mov
jg
int3
lds
ja
xchg
loop
adc
in
into
std
or
or
push
jg
push
pop
dec
sbb
iret
push
xchg
mov
mov
mov
pop
fldt
add
jae
movsl
or
movsl
push
lret
xchg
in
add
enter
mov
test
adc
or
jo
xchg
sbb
mov
inc
push
xchg
je
add
jle
mov
xchg
jns
test
pop
je
in
mov
in
jl
lret
lahf
sub
out
movsb
lds
sahf
shlb
int
push
xchg
jl
leave
xchg
ds
ret
cmp
out
or
js
dec
stc
pop
or
cmp
imul
cltd
cmp
push
stc
pop
or
cmp
imul
test
sbb
fprem
jmp
sub
mov
dec
call
xchg
fcomps
or
js
dec
jns
or
cmp
ds
roll
xchg
aaa
xchg
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
loopne
fstl
and
shlb
rclb
add
jo
pusha
adcb
mov
nop
jo
pusha
lock
mov
xor
push
xor
and
adc
add
mov
pusha
adcb
mov
nop
fadds
cmp
faddp
cmp
lsl
jo
psubsw
push
les
nop
add
imul
shr
jp
xor
mov
add
inc
clc
fldt
push
int3
sub
movups
cld
jo,pn
int
movsl
nop
out
cwtl
push
xchg
popa
inc
pop
mov
sub
xchg
push
dec
jnp
xchg
cmp
sahf
stos
xor
inc
adc
insl
and
inc
mov
nop
mov
fcom
adc
push
mov
lds
xchg
and
pop
jne
dec
inc
inc
test
and
test
cmp
rclb
ret
lahf
addl
nop
pop
std
push
popa
or
push
adc
addr16
test
movaps
and
shlb
mov
push
adc
add
ljmp
adc
add
push
mov
into
icebp
add
inc
stc
xor
dec
lock
outsl
mov
ret
xchg
inc
test
test
jno
pusha
hlt
xor
push
rcl
lds
cmc
adc
inc
lock
xor
mov
xchg
adc
push
int3
cmp
xor
pop
jmp
in
add
shlb
shlb
rclb
add
jo
pusha
adcb
mov
nop
jo
pusha
lock
add
xor
and
shlb
rclb
add
jo
pusha
adcb
mov
or
mov
cld
vfrczsd
scas
addl
into
jp
add
je
push
icebp
mov
jnp
xchg
out
scas
xchg
int
test
push
movl
pop
fimull
pop
adc
mov
sbb
jb
push
mov
sbb
adc
adc
pop
mov
inc
rcrl
roll
mov
dec
inc
call
repz
std
mov
aad
es
adc
mov
sbb
cmpsl
push
lods
mov
psubsw
adcb
xor
insb
rcrb
lock
es
imul
xor
faddl
icebp
ss
jle
xor
mov
or
mov
enter
scas
sub
loopne
mov
or
scas
dec
mov
jge
mov
or
fistpl
or
mov
js
movsl
mov
mov
lret
and
imul
cmpsl
sbb
nop
out
rolb
addr16
xchg
mov
jne
setl
mov
in
mov
dec
lods
fidivs
xchg
sbb
clc
mov
dec
adc
pop
aam
pop
push
xlat
movsb
je
add
jnp
adc
jle
inc
or
pop
inc
sub
sub
cmp
stc
push
mov
xor
ljmp
mov
inc
xchg
std
vpmacssww
sub
pop
sbb
push
pop
mov
or
push
or
sub
add
loopne
sbb
dec
push
cld
mov
cmp
scas
mov
xlat
cwtl
mov
cld
adc
mov
xchg
sbb
je
jbe
lock
adc
daa
loop
adc
out
cmp
xor
aam
sub
sahf
xchg
ret
cmc
mov
ret
stos
outsl
fistps
je
cmp
call
pop
mov
es
nop
push
lods
jl
clc
cmp
jb
outsl
add
leave
aam
popf
and
sahf
jecxz
xchg
test
mov
xchg
jecxz
int
add
or
mov
cmp
lods
jecxz
repnz
loopne
xchg
and
in
js
imul
mov
jbe
fnstsw
mov
xchg
add
mov
test
in
push
inc
add
mov
dec
xchg
inc
dec
mov
sub
js
sub
push
and
in
lods
fs
sti
xchg
repz
inc
or
js
notl
push
out
adc
adc
dec
orb
pop
push
mov
or
fdivrs
outsb
arpl
lds
sbb
shrl
dec
inc
clc
mov
out
sarb
jno
dec
jno
addr16
scas
imul
js
cmc
sub
jns
subb
lods
mov
call
mov
cmp
mov
repz
dec
xor
out
push
push
sbb
ja
mov
dec
sbbb
fst
stos
enter
mov
inc
std
frstor
cltd
nop
xor
iret
jae
out
mov
jnp
adc
pushf
pop
movsl
sbb
out
fs
cmpsl
pop
subb
dec
loopne
fcoml
bound
jp
cmpsl
fs
in
lods
iret
push
push
mov
adc
out
dec
je
xchg
shrb
push
fsubs
loop
bound
xchg
push
add
ss
fisttpll
icebp
pushf
pop
mov
push
enter
repz
mov
dec
push
dec
sub
mov
xchg
mulb
ljmp
addr16
and
adc
sub
imul
cmp
fildll
loopne
xchg
dec
jae
pop
lahf
xchg
jb,pt
add
sbb
dec
mov
test
aad
addr16
rolb
push
cmp
lret
out
cmp
leave
mov
sbb
repz
decb
or
jo
mulb
or
popl
int3
pop
mov
je
movsb
mov
pop
push
test
mov
or
mov
dec
clc
jb
pop
cmpsl
lds
repz
jo
mov
fdivrs
dec
mov
jae
sub
test
insb
mov
cs
iret
leave
jecxz
push
lods
loopne
xor
sarb
and
out
lret
loope
cli
xchg
pop
cmpsb
imul
clc
daa
bound
inc
pop
mov
fdivl
fstps
fcom
push
incl
cmp
fstps
pop
arpl
jl
imul
fsubp
rcl
into
and
fisttps
dec
aad
xchg
mov
jno
inc
fs
sbb
addr16
jl
cmc
lahf
data16
into
dec
outsl
dec
jnp
movsl
ss
cmp
or
fwait
in
dec
mov
mov
or
pop
xchg
inc
xchg
sub
test
mov
ret
stos
enter
jge
mov
cli
adc
stos
out
ds
mov
cmc
cmp
jp
dec
cmp
push
mov
mov
sub
ja
push
add
pusha
dec
test
jnp
iret
push
push
les
leave
adc
mov
xlat
sti
cmp
cmp
or
cltd
dec
xchg
shrb
int3
or
divb
int3
sub
xchg
push
cmp
adcb
rclb
mov
cmc
pusha
out
dec
xchg
add
push
xor
cmpsb
pop
fists
jecxz
jnp
repz
cld
xchg
jnp
pop
inc
jecxz
jmp
sbb
test
fmuls
es
add
mov
add
push
sub
push
jb
test
xchg
jae
sub
test
sbb
xor
in
icebp
and
out
repz
and
ja
dec
cmp
push
dec
inc
xchg
push
lcall
jecxz
imul
pop
in
adc
pop
je
mov
daa
mov
sahf
enter
enter
sbb
cltd
xlat
dec
jns
arpl
push
jmp
ret
call
push
out
aam
jns
inc
jg
adc
outsb
jmp
jle
mov
pop
fistpll
in
enter
adc
or
sub
jge
sub
shr
shrb
adc
mov
dec
lahf
imul
xchg
bound
popf
orb
popf
xchg
int3
mov
pop
movsb
ficoms
jecxz
inc
gs
xlat
mov
stc
and
xor
ja
jle
rcrl
ljmp
addr16
cmp
ss
ss
dec
dec
out
add
cmpsl
jno
daa
imul
mov
or
adc
pop
push
push
mov
lcall
cld
es
cmp
add
lret
push
out
loopne
jnp
jmp
add
pop
out
ficompl
xlat
pop
pop
jb
insl
adcl
inc
fidivrs
sbb
insb
jae
mov
xchg
push
mov
jge
pop
cwtl
lcall
xchg
fists
call
sbbl
xlat
adc
cmpsb
pop
insb
and
mov
xor
jbe
jbe
push
lock
adc
cmp
subb
jp
push
fcomp
int
adc
add
popa
sets
mov
out
mov
cmp
fcos
imul
jno
shl
cmp
jmp
adc
jl
xorb
icebp
cld
lret
aad
lret
add
and
or
mov
and
pop
or
jge
xor
pop
divb
test
lock
pop
outsb
negb
test
jecxz
push
hlt
bound
inc
adc
jge
ficoml
ficoml
push
out
out
lret
shll
jle
inc
fsubr
dec
adc
daa
repz
add
sahf
lret
dec
adc
and
or
sub
mov
sbb
jge
xor
push
dec
jg
mov
std
std
pop
mov
call
dec
rorb
cmpsb
xor
adc
hlt
lret
cmp
stos
cld
mov
fildll
add
mov
or
cmc
inc
loopne
adc
mov
dec
fiaddl
and
aaa
xchg
cmp
shll
mov
pop
xlat
test
add
mov
xor
lds
nop
inc
out
icebp
push
pop
pop
test
shlb
adc
inc
dec
mov
sub
mov
adc
mov
jle
or
insb
imul
fld
jge
push
pop
add
or
push
pushf
test
sbb
mov
outsb
dec
cmp
pop
push
rcll
cmp
mov
mov
cmove
movsl
dec
push
or
test
xchg
mov
sbb
jo
mov
xchg
pop
and
out
mov
inc
adc
fbld
cmp
outsb
call
mov
mov
cmp
sub
icebp
test
adcb
fwait
cmp
stos
adc
sbb
insl
jle
fmuls
push
dec
xor
addl
jne
mull
aaa
jno
int
gs
lock
sub
les
mov
xchg
inc
ret
insb
pop
sti
mov
add
pop
mov
and
imul
and
das
rorb
xor
es
jno
test
lret
loope
daa
in
push
lods
add
fwait
push
push
js
loope
jno
add
add
cmp
repz
dec
push
aad
xor
xchg
fsub
cltd
unpckhps
iret
fldenv
push
js
mov
sarl
dec
or
fmul
jecxz
mov
jle
xor
dec
mov
push
je
jge
outsb
sub
mov
sub
ror
mov
mov
jp
jae
xlat
mov
lahf
push
out
mov
aaa
mov
jp
and
add
pop
shlb
add
xlat
push
cmp
mov
xchg
outsb
stos
fidivl
dec
sub
push
leave
add
add
jo
mov
int3
cmc
cld
fdivl
dec
movsb
mov
imul
lods
fistps
outsl
sbb
add
call
repnz
das
sub
inc
or
cli
loop
popa
pop
aam
xchg
inc
xor
mov
xchg
jmp
and
push
in
adc
dec
sbb
sub
sbb
scas
in
mov
pop
jmp
adc
push
cwtl
pop
outsb
push
mov
add
cmp
dec
enter
scas
mov
jno
xor
adc
adcb
mov
fwait
sbb
pop
add
cwtl
jmp
int3
cli
mov
notb
sbb
aaa
mov
jle
ds
sub
mov
jp
inc
mov
test
add
add
loopne
shll
sbb
pusha
jae
cmp
lahf
popf
pop
sub
and
cli
insb
adc
and
lahf
jae
fcoms
jb
daa
cmpsb
js
mov
cmp
test
mov
and
out
mov
push
inc
sbb
bound
adc
add
xchg
int3
lret
sti
sub
cmp
bound
add
push
ja
enter
test
arpl
push
add
xor
pusha
enter
push
lret
rol
fldcw
in
lahf
xchg
repnz
xor
int3
and
jne
xor
xchg
jns
add
xor
push
push
inc
mov
cwtl
lcall
js
xor
cmp
repz
mov
ret
scas
pusha
out
pop
cli
mov
mov
cs
pop
lock
test
andl
cmpsl
and
add
js
sarl
cmpsl
stos
push
mov
add
jb
or
jne,pt
and
enter
fsubrs
push
and
adc
mov
pop
cmp
scas
mov
inc
shrb
popa
leave
mov
push
pop
loop
aaa
or
dec
xchg
mov
mull
and
test
je
in
mov
lods
pop
leave
mov
arpl
sbb
push
pusha
mov
int
cmpl
push
enter
sub
sti
mov
repz
sub
cmp
rorb
aaa
pop
dec
lret
pusha
xor
xchg
cltd
mov
sbb
push
xor
out
jo
sub
fidivrl
mov
xchg
aam
jl
stos
push
push
arpl
orb
xchg
sarl
rolb
cwtl
mov
inc
xchg
out
push
xor
and
push
insb
mov
push
push
mov
popa
int
pslld
loopne
mov
push
cmp
out
js
sub
sub
mov
lods
lcall
push
into
jne
pop
std
les
in
xchg
fistps
inc
cmpsl
movsl
filds
xlat
sarl
xor
stos
mov
fwait
mov
xchg
andb
mov
inc
inc
cmpsl
jnp
arpl
rcrb
mulb
outsl
aaa
in
adc
or
push
dec
sub
add
mov
dec
sbb
pop
xchg
and
add
icebp
mov
mov
hlt
sarb
dec
ret
jle
mov
test
aas
lret
mov
cmp
add
cmp
cmp
jo
sahf
xchg
ja
push
or
jne
ljmp
dec
sbbb
les
xchg
xlat
xlat
iret
push
inc
sti
hlt
fbstp
pop
jns
dec
adc
mov
push
insb
rcrb
cltd
imul
xor
test
inc
jecxz
pop
pop
aad
cmpsb
mov
jg
aam
mov
jecxz
add
inc
mov
xor
ret
xchg
cmp
sub
pop
cld
or
adc
sbb
loope
ss
jbe
xchg
inc
xorb
test
cli
inc
dec
sahf
mov
jbe
or
enter
adc
fwait
dec
dec
sbb
and
shrb
push
and
insl
lods
fimull
notb
nop
in
test
sbb
int3
push
scas
popa
das
inc
test
add
fidivrs
cmc
aas
cmp
inc
cmpsb
jge
add
aaa
mov
inc
xor
pop
jle
adc
ror
ficoml
cmp
leave
in
movsb
mov
popa
loopne
sbb
in
xchg
shlb
cmp
btr
roll
ret
adc
shll
div
movntps
movhps
movsb
jno
jb
popf
jno
jns
js
iret
jmp
or
in
xchg
je
dec
insl
xorl
xchg
or
xchg
iret
dec
jmp
sti
mov
mov
jp
ret
cmp
push
aas
dec
lret
mov
jecxz
and
cwtl
cmpsb
xchg
xor
xchg
std
imul
mov
clc
nop
fistpll
ficomps
add
ret
imul
and
dec
xor
dec
dec
fsts
das
iret
out
ret
insl
in
push
outsb
cmc
mov
andl
xor
scas
insb
sbb
jle
ret
jle
and
xor
mov
cmp
pop
push
sbb
mov
pop
jns
movsb
es
add
fnstenv
lods
loope
mov
jb
dec
sbb
push
fildl
mov
sub
sahf
sbb
adc
jle
xchg
jo
lea
repnz
nop
test
sarl
rclb
xchg
dec
dec
add
and
add
sbb
add
pushf
sub
and
aaa
inc
dec
sbb
hlt
pop
scas
clc
dec
flds
xchg
test
dec
xchg
dec
rorl
xchg
sti
pop
jle
xlat
dec
leave
insb
aam
mov
or
cmp
test
pop
dec
push
jo
pop
lret
in
or
in
bound
or
xor
popa
sti
popf
sub
fbld
ss
pushaw
imul
xor
aas
clc
idivl
sub
mov
cmp
negb
mov
cmp
cmp
xor
cmpsb
mov
mov
or
mov
hlt
pop
das
cltd
jne
es
cld
lods
fcoml
aam
sub
jnp
dec
cmp
int3
pop
sub
mov
fs
mov
fistpll
dec
lds
push
cmp
jl
dec
into
aam
fistpl
ljmp
dec
and
dec
pushf
sub
loopne
js
xlat
sub
je
pusha
fidivrs
jg
sub
pop
jge
inc
dec
mov
dec
stos
dec
in
mov
cmp
and
xchg
sub
adc
in
xchg
lahf
add
repnz
cmpl
popf
push
inc
xchg
dec
mov
clc
mov
or
adc
add
inc
test
pop
mov
or
pusha
sub
inc
or
jge
arpl
pushf
or
lods
adc
pop
mov
insb
mov
outsb
aas
inc
std
push
push
and
fstpl
clc
and
cmp
jnp
and
mov
enter
mov
jecxz
jg
xlat
jl
pop
stos
mov
shll
pop
mov
and
aas
fiaddl
dec
outsb
adc
sbb
pop
pop
sub
jo
jnp
mov
mov
push
stc
sti
dec
out
sub
fildl
push
sbb
fmull
out
movsb
xor
stc
pop
js
push
call
or
push
sub
cs
xlat
jbe
loope
call
test
ret
push
push
lods
sbb
inc
xchg
dec
nop
lods
or
sub
mov
pop
jne
pop
sub
loopne
xchg
lods
loopne
iret
loope
gs
jecxz
nop
add
mov
out
roll
cmp
dec
add
test
cmp
movl
fwait
and
cmp
xor
mov
out
into
adc
data16
mov
sub
adcb
jno
jmp
push
jb
movsl
mov
mov
mov
mov
dec
scas
pop
iret
add
jnp
aaa
test
inc
int3
pop
test
out
xchg
jl
outsl
pushf
cli
lcall
sarl
rclb
ja
sarl
xor
dec
rorl
sti
xor
adc
mov
mov
xor
xchg
lcall
loop
imul
add
mov
leave
lahf
mov
bound
dec
sbb
or
inc
sub
mov
ret
xor
loope
push
out
mov
sbb
sub
and
mov
mov
lock
jg
rorl
subb
dec
inc
inc
insb
lret
in
or
dec
xor
out
lods
popf
pop
loopne
cmp
push
cmp
rorb
dec
jno
sub
data16
in
scas
sub
xchg
inc
cmpb
rorl
jmp
mov
enter
andl
xchg
sbb
xor
in
push
nop
push
and
jmp
jmp
nop
clc
mov
int
jne
cltd
daa
mov
cwtl
movsl
mov
test
ja
pop
out
and
mov
or
pop
ja
xor
push
mov
push
mov
arpl
or
mov
ljmp
aas
pop
mov
mov
adc
jbe
pshufw
mov
fsubrl
or
mov
iret
ret
mov
push
xor
test
gs
repnz
mov
inc
push
push
adc
adc
cmp
sub
mov
cmc
shl
mov
xorb
sarb
cli
hlt
mov
movsl
add
push
test
and
inc
adc
out
outsl
test
fcmovbe
and
lcall
dec
lock
mov
lret
je
lock
arpl
daa
sti
fmul
les
sub
cmp
sbb
or
stos
xchg
mov
out
pop
jg
push
cld
frstor
mov
dec
aad
roll
xchg
mov
fisubl
popa
sub
add
adc
xchg
cmp
push
adc
sbb
or
add
pop
pop
mov
inc
in
add
or
xor
addr16
add
dec
pushf
in
mov
sub
sarb
dec
mov
test
addr16
fwait
xchg
dec
inc
dec
std
pop
cli
mov
ficomps
xchg
das
and
sub
pop
pop
pop
cltd
mov
sbb
mov
repnz
adc
addr16
addr16
sbb
mov
rcrb
addr16
daa
das
sub
mov
push
jge
push
adc
ds
add
push
aaa
jg
mov
xchg
pop
jae
ds
cmp
fildl
mov
lret
enter
js
movsl
inc
xchg
xchg
lods
pop
mov
and
enter
hlt
daa
xor
es
into
aam
lcall
arpl
inc
and
inc
push
stos
or
or
cld
and
mov
sub
jle
dec
xor
ret
fcoml
sub
bound
cwtl
inc
mov
adc
mov
ds
jmp
out
out
popa
lea
subl
sbb
addr16
mov
rorb
and
sub
das
je
aas
popf
je
bound
repnz
iret
xchg
add
mov
cmc
es
xor
out
outsb
push
adc
xor
mov
push
push
and
sbb
pop
sti
xchg
inc
xchg
sbb
pusha
lock
add
xor
and
shlb
rclb
add
jo
pusha
adcb
mov
nop
jo
pusha
lock
add
xor
and
shlb
rclb
add
jo
pusha
adcb
mov
adc
andb
loopne
shlb
inc
and
or
rclb
add
jo
pusha
adcb
mov
nop
jo
popa
lock
add
mov
and
das
and
lock
and
pop
clc
jle
outsb
sbbb
std
push
inc
loop
mov
out
add
xor
bound
push
mov
pop
xchg
dec
loop
bnd
push
sub
xor
data16
into
bound
push
mov
pop
mov
ds
ficompl
lds
and
cmp
dec
in
aas
lret
cmp
into
cmp
mov
icebp
sbb
lret
fdivrp
cltd
push
mov
pop
inc
mov
dec
xorb
adc
push
jmp
int
std
ficomps
iret
fidivrs
and
das
imul
lods
imul
and
int
push
fucomi
push
popf
mov
xchg
jb
mov
pop
aas
out
sub
rcrb
int
sti
add
dec
xor
in
and
add
scas
inc
jecxz
xchg
fisttpl
xor
shl
ret
mov
adc
enter
iret
lahf
stos
fiadds
mov
int
pop
cmp
jns
and
stc
mov
add
std
ficoml
into
mov
mov
bound
outsb
sbbb
bnd
push
cmp
sub
sbb
or
jp
push
inc
sahf
dec
enter
mov
xchg
outsl
sarb
push
xchg
xor
push
rcll
xlat
daa
sbb
jmp
aas
mov
out
nop
sbb
jno
push
and
addr16
add
xor
push
loopne
sbbb
sub
cs
push
and
xor
add
adc
bound
push
mov
pop
xchg
dec
loop
bnd
push
and
xor
add
adc
bound
push
mov
lods
cli
lahf
int
out
rolb
cld
mov
cmpsl
jno
sbbb
out
imul
mov
push
out
lret
pop
dec
cmp
push
dec
jb
mov
outsb
and
xchg
in
negb
and
pop
inc
call
fisubrs
jg
ret
dec
sbb
or
mov
push
dec
stc
cmp
lods
out
mov
pop
popa
imul
lds
sub
adc
inc
jg
xor
mov
add
inc
xchg
fimuls
xor
jp
movb
pop
rcr
adc
mov
mov
sarb
lods
icebp
cltd
or
push
notb
lea
mov
shlb
mov
add
out
sbbl
dec
jmp
jno
shll
pop
test
sbb
in
rclb
or
push
js
lcall
rcl
lret
push
divl
pop
outsl
dec
pusha
mov
lea
push
aas
inc
push
test
pop
cmpb
mov
mov
pop
mov
repz
mov
pop
std
imul
stc
jl
sub
cmp
cltd
ds
roll
mov
sbb
addr16
sub
xor
add
push
arpl
mov
cmp
inc
movsl
add
jb
lock
leave
stos
push
adc
pop
rol
jne
stos
add
mov
and
idivl
cmc
inc
sbbb
pop
sar
sub
int
inc
out
add
enter
test
pushl
pop
adc
mov
adc
mull
addr16
sarb
jae
adc
push
leave
rcll
mov
lods
and
negl
les
clc
popa
push
and
pusha
ss
dec
rol
xorb
inc
mov
inc
movntq
les
jge
pop
popf
xor
mov
hlt
addr16
cs
pop
sbb
inc
mov
out
lret
push
pop
xchg
push
push
lahf
cmp
mov
dec
add
in
lret
jno
dec
movsb
mov
sahf
xchg
fisubrl
test
loope
hlt
lods
add
mov
dec
insl
add
in
mov
pushf
fidivs
insb
xor
sbb
pop
push
ret
adc
enter
xor
mov
mov
inc
add
nop
decl
push
lret
add
pop
cmp
pop
push
push
and
jmp
loopne
adc
filds
sahf
sub
cmpsb
adc
mov
add
sub
lock
movsb
test
es
jge
xchg
ja
xchg
pop
push
adc
andb
dec
subb
push
fs
xchg
inc
adc
flds
in
mov
push
mov
ja
int
mov
pop
rcl
loope
cmp
xor
rorl
inc
cmp
mov
mov
int3
push
dec
push
mov
test
ljmp
mov
mov
addr16
dec
cmp
insl
push
daa
sbb
scas
lods
mov
sbbl
bnd
cmc
rol
dec
xor
push
jmp
popa
fwait
xchg
adc
fisubs
imul
lods
inc
jmp
test
frstor
xor
xchg
pushf
es
sbb
mov
js
movsb
stc
cmp
sub
mov
ret
jecxz
mov
sub
out
inc
sbb
push
add
std
aam
into
nop
push
xchg
rolb
addr16
xchg
fcmovbe
cmpl
sub
std
enter
cmpsb
cmpsb
push
icebp
inc
inc
mov
xor
inc
movsl
inc
mov
or
orl
std
or
gs
mov
js
int
movsl
mov
xchg
pop
test
stos
mov
data16
pushf
shll
lret
out
xor
hlt
test
repz
outsb
pop
hlt
inc
mov
xor
cmp
push
jmp
jl
add
mov
xchg
cmp
mov
out
and
mov
jle
rorb
xor
xor
cmp
outsb
imul
mov
sub
daa
aas
cmp
sub
imul
cmp
cmp
xor
inc
mov
aas
pop
dec
sbb
xchg
inc
sbb
ja
and
mov
data16
and
aad
mov
aam
mov
jno
push
ljmp
mov
movsb
in
mov
mov
push
add
test
lret
mov
mov
dec
mov
or
jge
jae
add
or
sbb
mov
pushf
rcrb
mov
enter
imul
mov
cmpsb
cmp
jmp
mov
jl
mov
scas
mov
dec
jmp
jge
push
scas
test
dec
fs
aad
sbb
sub
loopne
adc
mov
stos
or
xor
push
or
and
mov
cmp
jbe
xlat
rolb
jg
outsb
mov
loope
test
inc
lods
mov
ljmp
xor
mov
push
inc
cmpsb
jnp
jecxz
dec
or
jne
je
inc
les
scas
mov
outsb
jp
inc
int
inc
fbld
loopne
push
mov
scas
jno
fs
rorb
sbb
cmp
pop
xchg
jle
bound
or
stos
or
mov
mov
test
mov
bound
sub
shlb
mov
mov
fninit
xchg
push
scas
cmpsb
mov
inc
mov
and
jo
fnstsw
out
and
cmp
mov
sbb
lcall
test
je
inc
or
iret
dec
push
in
in
lods
mov
rcll
test
xlat
mov
jecxz
jmp
scas
adc
lock
dec
mov
pop
rorb
pushf
fsubrl
icebp
cli
push
lret
inc
push
pop
cmp
push
arpl
stos
jle
jmp
sbbb
push
jnp
cmp
mov
sahf
jle
sbb
push
xchg
and
repz
add
cmpsl
addr16
lods
jns
test
jb
cmp
es
orb
ljmp
pop
inc
cmp
js
pop
pop
push
insl
sub
cwtl
iret
sbb
cmp
lret
or
andl
enter
imul
fs
gs
xchg
rorb
jge
je
adc
leave
decl
jge
mov
push
mov
fsubs
push
fidivrl
xor
adc
sbb
ret
aad
testl
inc
enter
jns
shrb
jle
adc
xchg
or
shl
xchg
in
out
mov
ss
les
lcall
pop
jne
jae
push
mov
nop
push
sahf
test
xchg
mov
bound
lods
test
xchg
pop
lea
cmp
or
adc
jmp
adc
cmpsl
push
mov
mov
pusha
bound
aas
mov
push
mov
push
mov
xor
dec
cld
xor
jmp
jl
daa
adcb
imul
jbe
lods
lea
push
xchg
xor
mov
stos
cmp
xchg
mov
ret
dec
in
insb
or
xchg
test
jo
inc
dec
cmp
fbstp
pushf
js
aam
fnstcw
xor
xchg
or
xchg
mov
or
or
xor
fcoms
loopne
cmp
fldcw
xor
adc
leave
lahf
aaa
cwtl
mov
rcll
hlt
pop
fs
push
mov
lcall
shl
pop
jne
pop
pavgb
inc
dec
xor
push
repnz
repz
das
cmpsl
pop
movsb
pop
add
aad
jno
int3
jns
in
lods
ffree
sbb
jl
mulb
rcll
aam
and
aam
sbb
sub
pushf
leave
jae
rorl
adc
icebp
scas
lcall
in
mov
adc
addr16
xchg
push
nop
push
xor
push
pop
mov
cwtl
ss
xor
mov
aam
insl
or
jnp
int
imulb
mulb
adc
cmp
inc
out
cmp
cmp
arpl
movl
das
pop
insb
aas
push
int3
push
and
in
cmpsl
and
push
jnp
sbb
mov
adc
xor
sbb
adc
ja
or
std
pop
jbe
mov
jl
push
sahf
mov
pop
iret
and
add
lahf
inc
scas
mov
cmp
inc
jge
lods
mov
fimull
inc
or
arpl
les
push
scas
dec
or
xchg
out
shlb
mov
nop
cmp
iret
adc
lahf
scas
test
dec
scas
out
xchg
out
imulw
data16
and
and
fwait
sub
cmp
fcmovnu
push
add
xor
inc
or
push
fadds
ficompl
jns
sub
cwtl
test
push
mov
enter
dec
cmp
nop
imul
mov
or
push
nop
mov
fisttpll
pop
lods
add
mov
pop
dec
int3
out
adc
frstor
fstpl
jl
xchg
out
push
mov
mov
add
xor
sub
push
jbe
add
inc
ficompl
xchg
inc
pop
xchg
test
mov
jne
cltd
sub
and
mov
je
stc
pop
and
popa
jmp
push
in
add
fdivrp
mov
mov
rolb
lret
in
mov
lods
push
in
xor
mov
and
mov
mov
mov
mov
xchg
sbb
push
pop
xor
xor
adc
or
std
push
int3
sub
sbb
adc
shr
inc
lods
outsb
setno
add
pop
repz
shrl
pop
pop
sti
sub
adc
cmp
jns
cld
clc
or
sbb
aaa
pop
mov
out
sbb
pop
mov
subb
xchg
push
hlt
mov
push
ljmp
decb
adc
sbb
inc
ficompl
jnp
mov
fs
and
jne
jp
push
fsts
iret
fidivrs
mov
mov
sbb
push
movsl
xorl
xchg
or
fisubrl
test
cmpsb
into
jb
adc
and
cmp
cwtl
testl
clc
push
sub
nop
repz
stc
ss
out
xchg
sbb
fstps
movsb
iret
jg
lret
sbb
imul
jl
int
aaa
out
inc
push
fildll
nop
xchg
call
jecxz
add
int
int3
cmp
push
or
test
loopne
xor
lods
cmp
movsl
scas
adc
je
add
add
sub
or
jae
js
jl
rol
and
test
ds
cmp
xlat
inc
enter
and
dec
outsb
sub
mov
loopne
data16
stos
outsb
pop
testl
fcoml
mov
xor
jb
arpl
mov
pusha
addl
add
xchg
push
lods
xor
xor
xchg
jne
add
call
adcb
je
loop
xchg
aaa
dec
pop
js
imul
insl
rolb
cld
mov
imul
movsl
ret
leave
loopne
pop
subb
pushf
jg
sub
mov
arpl
fwait
mov
insb
sbb
push
mov
ss
enter
dec
xorb
xchg
ret
flds
adc
jle
jl
ret
xlat
ja
insb
xor
js
insl
cwtl
pop
xchg
xchg
add
stos
rcrb
das
gs
mov
xor
add
addr16
mov
das
lods
bnd
xor
out
mov
mov
adc
jl
cmpl
mov
dec
dec
les
mov
gs
and
mov
ret
jl
mov
mov
aam
push
and
inc
test
shrl
cmp
fimuls
mov
leave
std
lock
out
lcall
or
aaa
sub
aam
fstpt
insl
int3
mov
xchg
xchg
lds
and
inc
lods
mov
scas
in
jne
xchg
pop
ljmp
mov
add
mov
data16
sbb
enter
xchg
adc
imul
ds
shlb
xor
cmp
lret
stos
xchg
sub
jbe
icebp
inc
push
mov
mov
cmp
xchg
enter
xlat
push
dec
outsl
fsubs
mov
push
xchg
and
rcr
dec
imul
and
lret
mov
push
std
mov
xor
pop
stos
in
xor
push
dec
xchg
movsl
push
mov
lcall
xor
mov
sbb
xchg
jnp
outsb
aam
cld
cmp
xchg
ss
mov
or
in
xchg
cmp
scas
pop
xchg
sub
jg
test
sbb
fs
incl
dec
test
js
push
jmp
adc
xchg
xchg
adc
xor
insb
addr16
xor
lret
xor
mov
out
cmp
icebp
mov
cli
sbbb
adc
xchg
mov
subl
push
ret
xor
out
sub
pop
out
lock
int
mov
test
pop
aas
cwtl
out
add
ja
or
or
cmp
sahf
mov
mov
cmpb
jle
xlat
test
adc
aaa
cli
test
lods
pop
mov
mov
imull
push
lea
add
stos
xor
jne
jmp
xchg
fnsave
inc
fbld
popa
outsl
into
ret
cmp
popf
sbb
sub
push
popf
pop
in
inc
push
lret
dec
pop
or
adc
pop
mov
mov
mov
and
adc
fwait
cwtl
cmp
jne
aad
fcmovne
adcb
fldl
add
icebp
test
xorl
mov
dec
pop
jnp
cmp
out
in
shrl
repz
sub
sub
lods
mov
jle
pop
inc
insb
mov
movsl
mov
das
movsb
mov
mov
dec
mov
cmp
mov
push
pop
nop
add
mov
add
ret
je
dec
outsl
jo
cmp
inc
or
imul
add
mov
int
in
inc
lret
mov
push
jb
aas
jmp
sti
loope
jmp
loop
movsb
mov
xchg
cld
ljmp
inc
sbb
jp
loope
pop
imul
jne
cmc
push
int
repz
loop
or
adc
out
out
pop
cltd
push
or
shlb
jp
mov
add
fistps
dec
or
mov
notb
pop
scas
repz
pop
fwait
lret
sbbl
jb
push
ss
inc
test
jg
lret
movsl
xchg
push
mov
fwait
sub
mov
mov
test
adc
cmp
in
mov
jbe
add
dec
ja
pop
add
mov
push
pusha
imul
xorl
popa
xor
jns
dec
stc
fs
out
shll
test
pop
push
or
cmp
cwtl
xchg
in
arpl
rorb
cld
and
fld
test
and
jo
movsb
sub
bnd
xor
ja
xor
mov
ljmp
fcmovnb
fnsave
arpl
push
in
lret
std
clc
ficompl
loopne
cwtl
jne
cwtl
adc
lods
pop
mov
xchg
lods
out
adc
call
gs
lods
in
adc
jecxz
loopne
icebp
outsb
rcll
addl
sbb
mov
not
das
push
pop
scas
inc
or
xchg
in
in
jb
outsw
jnp
push
addr16
fsubrp
test
loopne
sbbb
cmp
mov
and
int3
mov
jl
insb
loope
cmpsl
mov
loop
popf
aaa
cmp
push
cmp
dec
xor
iret
and
addr16
popf
mov
cmp
jg
xor
scas
mov
jbe
repz
push
pop
scas
sub
adc
lahf
rorl
icebp
dec
iret
sub
ds
insl
out
mov
mov
mov
or
adc
fsubs
repnz
cmpsb
sbb
pop
setl
movsb
clc
outsl
les
xor
iret
int3
xchg
test
dec
sub
fmuls
push
jno
and
add
sub
dec
lock
stos
clc
ds
aaa
and
adc
pop
or
or
popa
sub
sbb
sub
jnp
lods
je
mov
sahf
dec
push
push
popa
sbb
push
arpl
into
std
outsl
inc
es
lods
je
sahf
push
mov
cmp
sub
mov
cmp
enter
mov
cld
ret
inc
push
mov
adcl
inc
xor
sub
lods
xor
adc
movsl
push
push
jbe
sbb
test
push
adc
or
cmp
xchg
andl
sbbl
jl
pop
pop
out
jg
cltd
push
xchg
negl
push
mov
gs
xchg
fcomps
stos
or
mov
mov
and
adc
lods
dec
xor
ret
push
and
mov
adc
sub
repnz
inc
loope
aas
adc
inc
fidivrl
jl
outsl
cmpsl
jle
add
pcmpeqw
jl
in
adc
stos
dec
push
data16
and
sub
push
push
mov
cmpsb
orb
pop
sub
testb
xchg
xchg
mov
out
or
stos
pop
adc
rcr
vxorpd
mulb
sub
and
mov
dec
insb
push
dec
aad
jg
outsb
and
pushf
xor
xlat
dec
subb
cmp
push
stos
mov
mov
fadds
mov
inc
lods
stos
xlat
scas
or
or
nop
xor
insb
or
sbb
pop
aas
cli
imul
mov
dec
into
stos
cmp
pop
adc
into
daa
in
jbe
fmulp
adc
mov
testl
mov
xchg
push
xor
add
add
mov
xor
mov
hlt
mov
xchg
mov
fmull
fucomi
cmp
pop
lea
icebp
add
and
cmp
pcmpgtb
sub
sbb
hlt
xchg
pop
and
gs
int
pop
push
xchg
cs
jg
in
fsts
push
xor
addr16
pop
icebp
pop
cld
dec
ja
jbe
and
mov
mov
sbb
jne
sbb
lahf
sbb
xchg
out
fsubs
adc
or
test
jg
mov
ljmp
pusha
adc
or
push
sbb
fdivrl
je
outsl
insb
cmp
cmp
xor
adc
jl
cwtl
cmp
and
rcrl
int
cmpsb
fs
addb
gs
cmp
sub
in
jns
imul
cmp
orb
mov
and
pop
or
bound
dec
xor
xchg
cmp
in
out
enter
sbb
mov
arpl
out
leave
daa
push
mov
in
jb
gs
dec
mov
js
mov
popf
aas
mov
add
fisttpl
insb
mov
aam
mov
sbb
inc
or
jb
lods
mov
inc
inc
jns
das
fnstsw
mov
mov
add
psrlq
in
xor
aas
mov
pop
cmp
pop
sbb
iret
icebp
int3
iret
cs
or
loopne
lds
push
pop
pop
cwtl
adc
ret
lods
cmp
roll
mov
xchg
test
mov
mov
or
repnz
mov
push
push
das
ljmp
enter
loopne
into
mov
sbb
jmp
inc
arpl
fildl
outsl
ja
xor
hlt
mov
outsb
pop
pop
sub
jae
sub
add
addr16
stos
daa
and
mov
lds
xchg
subl
call
add
lahf
pop
gs
jne
ds
mov
mov
mov
je
sahf
mov
adc
jnp
call
jg
pop
aad
mov
inc
fadds
and
adc
in
sub
imul
lret
popa
inc
ja
fwait
and
xlat
push
aaa
cltd
mov
adc
movmskps
imul
sbb
sub
ret
dec
mulb
xchg
adc
sbb
cmp
push
lret
dec
add
dec
cmpsb
scas
xchg
iret
adc
es
imul
leave
add
int
cs
popa
xchg
dec
mov
iret
aam
mov
mov
leave
mov
sub
add
mov
push
fiaddl
push
mov
push
in
add
mov
jnp
push
adc
out
jbe
mov
lcall
adc
xchg
icebp
loope
ret
jecxz
pop
pop
shl
into
rcrl
mov
mov
mov
jbe
aaa
jnp
jge
lock
mov
iret
dec
push
or
xor
dec
sti
ds
ljmp
mov
push
mov
pop
shlb
pop
test
jmp
sub
insb
stos
aaa
leave
add
clc
xlat
adc
jo
xchg
rorb
mov
scas
outsl
imul
icebp
inc
mov
dec
std
mov
and
popf
imul
outsb
jb
xchg
dec
loop
bnd
push
and
xor
add
adc
bound
push
mov
pop
xchg
dec
loop
bnd
push
and
xor
add
adc
bound
push
mov
pop
xchg
dec
loop
bnd
push
and
xor
push
ficoms
into
bound
arpl
mov
xchg
dec
loop
repnz
inc
sahf
push
icebp
fldl
int
test
adc
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
aam
les
mov
pop
cld
test
sub
sbb
or
jl
insb
xor
and
aam
les
cld
test
mov
movsb
mov
cmp
sub
sbb
or
adc
dec
aam
les
cld
test
mov
movsb
int3
push
cmp
outsb
add
sub
ja
dec
aas
mov
hlt
lea
push
das
inc
pushf
fildll
jle
arpl
jl
xlat
arpl
cmp
cmp
rcrb
xchg
cld
test
aam
call
or
movsl
bound
sub
mov
hlt
push
insb
jle
sti
cltd
ljmp
pop
adc
fldenv
aam
jecxz
aaa
mov
pop
jnp
in
mov
xor
fwait
in
inc
jl
xchg
int3
push
scas
dec
xchg
inc
cld
jno
sbb
imul
mov
in
push
ret
dec
pusha
stc
jecxz
or
insb
lret
pop
and
call
mov
int3
mov
aam
mov
sub
push
sbb
jl
aas
repz
es
pop
mov
in
xchg
cld
test
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
and
mov
cmpsl
in
mov
mov
test
lcall
pop
jns
js
aas
inc
or
push
add
stc
movsl
mov
nop
iret
mov
es
push
or
imul
or
mov
in
out
sub
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
and
aam
les
cld
test
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
and
aam
movsl
les
fwait
dec
inc
mov
mov
js
xor
push
push
xchg
cmp
subb
lock
fdivl
stc
movq
add
jge
sub
cwtl
test
sub
inc
sub
jno
sbb
sbb
mov
or
fidivrl
jl
adc
int3
lods
dec
loop
mov
pop
xor
or
out
jge
stos
mov
add
cmpsb
add
data16
repnz
in
sti
arpl
bound
jp
jb
bound
push
mov
adc
push
pop
ljmp
mov
sahf
xor
adc
jnp
das
push
iret
addr16
cmc
sub
rclb
and
jge
push
xchg
loope
int3
dec
imul
ret
ficomps
cmp
popf
jo
jle
outsl
or
lret
adc
push
popa
inc
cmp
das
cmp
cmpxchg
dec
fisttpl
adc
or
inc
sbb
mov
dec
loop
imul
aad
cwtl
mov
pop
xchg
cmp
push
adc
daa
jle
inc
mov
imul
cmpsb
fs
faddl
es
inc
inc
lock
stos
jb
cmpsb
pop
push
scas
mov
inc
daa
sbb
daa
pop
inc
sub
and
xor
imul
pop
cmp
fstps
add
sub
cmp
sahf
movsb
scas
clc
cmp
cmp
push
mov
loopne
cmp
aad
ja
push
fisttps
les
jl
sbb
popf
mov
add
xchg
add
mov
adc
pop
cmp
roll
or
mov
fsubr
in
lock
pop
push
inc
mov
test
mov
sbb
sub
jmp
jle
xor
notb
mov
repz
fsubs
arpl
add
enter
xor
dec
push
push
pop
sbbl
cmp
inc
xchg
aas
jbe
inc
lcall
sub
jg
mov
popf
mov
cmp
mov
pop
std
mov
ljmp
sbbl
mov
push
addr16
test
mov
dec
jo
nop
add
push
cmp
sti
cmp
dec
add
pop
aam
sub
ret
loopne
jb
mov
orb
lods
jle
cli
test
mov
sub
push
push
addr16
data16
mov
pop
xorb
faddl
aas
cmp
jne
aaa
jmp
in
adc
cld
aas
insl
jne
or
xchg
dec
mov
mov
jno
or
imul
test
fs
push
pop
fisubs
rep
mov
cmp
rcll
xchg
clc
mov
or
loopne
andb
pushf
cmp
in
int
in
cmp
je
and
test
mov
push
scas
pusha
pop
jb
and
or
sbb
pop
fsts
lock
xchg
mov
out
push
dec
ljmp
mov
jo
lods
pop
sbb
jae
fisttpll
ret
xlat
in
aam
jbe
ret
dec
mov
sbb
xor
and
push
test
aaa
push
loop
cli
int
cli
shl
cld
cmp
mov
xor
xor
andl
jmp
js
aas
ds
sti
pop
out
ficomps
lea
outsl
dec
xchg
push
pop
test
fs
mov
sub
inc
push
fbld
std
mov
sbb
mov
insb
addr16
loope
jl
iret
or
sbb
pop
lret
jmp
and
sahf
rclb
subb
add
pop
orb
out
xchg
dec
scas
cmp
dec
ds
lods
test
dec
test
lea
xor
adc
aas
cmp
adc
aad
or
push
addr16
cs
call
das
mov
inc
jbe
push
fmul
jmp
sbb
pop
mov
lds
dec
insb
jp
xor
sub
push
imul
fsubp
inc
push
or
mov
rep
cmp
mov
bound
rcrb
mov
lahf
pop
xchg
push
jge
in
cltd
pop
push
das
ficomps
leave
loopne
or
out
xchg
add
or
fsubrs
xchg
fbstp
insb
adc
adc
adc
stc
icebp
dec
jno
xchg
aad
sub
fnop
addr16
add
lret
daa
xchg
fildl
push
mov
add
fcoml
sub
enter
jp
xchg
dec
xchg
fwait
inc
js
in
fadd
mov
fwait
mov
out
imul
out
inc
push
fs
xchg
aaa
push
rcrl
icebp
mov
adc
push
inc
outsl
aaa
and
jae
insb
xchg
mov
bound
bound
jae
push
aad
ja
mov
or
and
sub
mov
pop
sub
lods
or
pop
fdivrl
mov
js
loopne
sbb
push
mov
test
push
mov
mov
sub
add
iret
inc
and
adc
inc
rorb
jg
mov
shlb
orl
imul
cli
jns
pop
in
pop
and
mov
fwait
pop
push
dec
cmp
jnp
mov
loopne
fwait
mov
jecxz
add
lcall
cmp
enter
lock
loop
fucom
dec
rorb
in
inc
stc
out
mov
sbb
cmp
and
mov
scas
inc
mov
and
and
or
rorl
hlt
and
sbb
mov
iret
or
negl
add
adc
mov
dec
pop
cmpsb
test
imul
lahf
inc
sbb
lcall
sbb
xchg
mov
cmpb
aam
lret
fadd
mov
cwtl
aad
mov
jg
outsb
adc
fcomps
loop
jmp
sbb
cmpb
mov
jnp
aas
sbb
sahf
shlb
dec
sub
cmp
xchg
adc
or
push
andb
inc
cltd
and
xchg
ja
scas
mov
repnz
iret
std
xchg
inc
insl
inc
fcompl
hlt
out
lods
icebp
xchg
or
in
daa
mov
lods
imulb
lds
test
xor
or
jae
lods
outsl
mov
cmp
repz
ja
lock
adc
xchg
or
popf
clc
push
loope
popf
ds
shlb
call
jge
repz
pop
out
out
stos
push
loop
mov
add
push
movsb
int3
mov
and
ljmp
mov
in
roll
pushf
mov
lahf
mov
jno
mov
scas
sbb
mov
and
filds
inc
xor
mov
imul
jb
pop
jmp
idivl
fwait
cmpsb
leave
push
add
andl
int3
and
push
mov
orb
nop
jecxz
xchg
insb
les
push
imul
adc
fists
in
cmp
in
ftst
incb
sarl
movsb
outsl
loope
fimull
add
lods
dec
add
popf
sbb
jp
dec
fcmovnu
mov
sub
stos
xor
mov
xchg
sub
xchg
dec
aas
mov
adcb
cmp
bound
in
in
cmp
lret
sub
mov
jle
arpl
out
push
stc
pop
jne
pop
stos
dec
aas
or
sbb
fiaddl
push
dec
pop
push
mov
fwait
pop
call
aaa
lcall
push
hlt
ss
jne
enter
movsl
jns
mov
enter
lods
push
or
mov
sbb
movsl
mov
inc
and
es
lret
or
mov
aam
xor
inc
pop
push
mov
dec
inc
call
jne
xor
mov
dec
gs
xchg
mov
pop
push
mov
cmp
divb
sub
add
xchg
sub
loope
mov
fcomip
mov
rclb
loope
stos
std
fcmovbe
dec
mov
loope
jge
scas
test
icebp
jge
neg
and
jae
and
cmpsl
loopne
sbb
mov
sub
cmp
mov
mov
sub
les
mov
xchg
lahf
push
jmp
cmp
or
mov
adc
ja
ret
xchg
dec
pop
mov
add
rol
jns
sub
in
in
shll
pop
add
dec
pop
cmpsl
stc
push
div
in
push
lret
cmp
cmp
insl
mov
dec
xorl
sbbb
xor
sarl
ljmp
mov
cltd
pop
sbb
pusha
cmp
push
loope
ss
sub
sbb
jae
sbb
je
lahf
fwait
das
das
jg
cwtl
adc
adc
adc
nop
jle
push
inc
adc
stos
clc
cmpsl
cmp
push
and
bound
jg
dec
lock
sbb
rorb
lea
mov
cmp
push
sbb
sub
loopne
add
add
jmp
xchg
jge
sub
xchg
pop
mov
mov
jecxz
or
out
add
ja
xor
hlt
shlb
sarl
cmp
mov
jle
fisubl
fistpl
jp
cmp
or
pop
inc
and
repnz
imulb
outsl
cmp
cmp
pop
in
inc
cltd
push
pop
cmpsb
outsb
lea
cmp
mov
xor
loopne
fistps
and
add
or
test
cmpb
sti
push
dec
and
dec
fwait
addb
sbb
xchg
rclb
iret
cmp
stos
in
sbb
jg
pop
popf
adc
sub
jp
nop
ret
imul
add
leave
lock
mov
cmpsb
or
aam
pusha
mov
adc
ss
mov
cmc
mov
aaa
mov
sti
repz
movsl
mov
push
mov
lahf
mov
mov
or
and
or
adc
and
cmp
cld
mov
mov
pop
out
js
cmp
int3
in
inc
sub
ficompl
insl
sub
ja
and
or
gs
ja
outsl
test
xor
cli
ret
cmp
test
das
shll
push
stos
and
mov
mov
pop
add
lret
pop
xlat
fmuls
test
popa
sub
add
cmc
jne
stos
loop
push
xchg
lea
lods
sbb
out
sahf
in
xlat
jl
int
ljmp
imull
or
rcrb
dec
mov
sbb
sub
xor
jg,pn
jb
jl
cli
mov
inc
cmc
or
nop
xor
dec
dec
mov
and
xlat
xchg
mov
ret
mov
out
in
xchg
sub
fcoml
mov
xchg
or
mov
fisttpll
pop
shrl
imul
xchg
pop
ficompl
rorb
es
xchg
dec
test
jnp
jl
pop
or
pop
mov
xchg
mov
hlt
sbb
mov
or
ds
inc
insl
xchg
inc
je
push
movsb
mov
jno
push
xchg
and
push
cli
jns
mov
xchg
and
in
sub
push
jg
mov
mov
xchg
jno
shr
dec
pushf
inc
test
bound
xor
ds
or
data16
mov
idivl
push
insl
insl
mov
lea
popf
pusha
sahf
imul
aam
mov
orl
aad
sahf
lock
out
lds
ret
cltd
mov
sub
jae
leave
test
jmp
xor
out
inc
pushf
xchg
mov
cmp
sti
inc
xchg
stos
mov
clc
sti
cld
xchg
and
jno
ret
daa
fdivr
xor
lret
xchg
lcall
sarb
mov
lcall
aas
outsb
cmp
adc
jno
adc
push
and
sahf
pop
mov
xor
adc
scas
xchg
cmp
data16
aaa
fcom
sub
cltd
push
std
loop
cmpsl
or
mov
stos
negl
lock
push
and
aam
cmpsb
xchg
cmp
inc
add
ficomps
idivb
lods
push
push
decb
push
push
lods
sub
cli
in
sahf
sbb
mov
gs
pavgw
jl
inc
or
sub
pop
outsl
cmp
js
cmc
scas
mov
push
outsl
pop
mov
outsb
dec
push
roll
dec
xchg
lods
xchg
mov
mov
les
and
in
push
bound
pop
or
mov
bound
cmp
fisubrs
stos
mov
push
fwait
aad
pop
int
test
mov
pop
idivl
mov
push
jl
fisubl
repnz
out
mov
cmp
inc
in
push
imull
jo
shrb
fwait
xchg
movsl
js
scas
pop
fldenv
and
fcmovnb
scas
and
push
jle
dec
inc
fidivl
push
stos
adc
ret
xchg
pop
rcr
mov
movsb
in
add
stos
mov
push
sub
and
sbb
and
or
xchg
inc
daa
cltd
jno
insl
xor
or
sbb
test
add
stos
mov
ljmp
push
sub
out
cmp
cmp
cmp
mov
jo
add
sub
outsb
xor
or
aaa
jecxz
out
or
aam
jmp
call
jb
xor
jl
pop
jb
aas
push
cwtl
pushf
ret
cmp
or
popf
add
stos
fistl
push
pop
ret
cli
loop
add
cmpsl
lret
xchg
sarb
ljmp
dec
pop
or
mov
mov
sbb
test
pop
xor
adc
cwtl
pop
mov
sub
out
outsb
xchg
add
cmp
out
xchg
repnz
and
cmp
xchg
jo
je
lcall
addr16
jb
jge
jns
pop
sbb
push
fisubrs
or
sbb
mov
adc
rolb
mov
mov
xor
jbe
cmp
or
lahf
inc
inc
gs
xchg
dec
dec
nop
mov
add
js,pn
xlat
add
scas
pmulhw
enter
mov
push
addl
add
add
dec
repnz
imul
push
push
lock
jae
call
fldl
sub
movsb
pop
aam
adc
sub
jae
sub
add
out
and
int3
ss
pop
in
jbe
xchg
sbb
andb
sub
cld
xlat
sub
sbb
dec
out
push
or
and
adc
xchg
lea
xor
out
sub
inc
sub
dec
inc
out
adc
and
jne
insb
imul
xchg
in
pop
stos
inc
das
bound
pop
mov
xor
mov
jae
cltd
lcall
or
and
inc
stos
pop
cmp
inc
and
lea
clc
mov
jl
rolb
repz
inc
imul
mov
lcall
shl
fxch
cmpsl
scas
inc
mov
adc
push
xchg
out
lea
sbb
popf
std
cwtl
push
not
movsb
adc
jp
stos
rcr
ds
mov
xchg
push
push
dec
dec
inc
cmp
pop
nopl
pushf
ss
lret
dec
jmp
cs
add
add
push
pop
cmpb
ja
jae
mov
cmp
xchg
jns
stc
mov
cmp
dec
sahf
cmc
mov
outsl
std
add
or
sub
adc
inc
or
push
add
push
cmp
push
enter
sbb
add
fistpl
adcl
xchg
mov
loope
adc
adc
or
jle
push
jae
mov
test
push
pushf
aam
cmp
lcall
pusha
adc
and
test
and
mov
jge
jae
cmp
cmp
pop
lret
xchg
repnz
ror
sarb
pop
popf
lret
mov
push
add
xchg
cli
sbb
fisubs
in
das
mov
push
incl
sbb
xor
clc
jg
fdivrl
push
xchg
push
add
xchg
movsb
lahf
or
outsb
aaa
shrb
daa
fwait
rclb
mov
sub
dec
mov
ret
mov
decl
nop
jl
test
inc
fadd
movsb
scas
mov
mov
aaa
jnp
lds
pop
mov
pop
stc
adc
cmpsb
loopne
sarl
push
inc
sahf
sbb
and
cmp
fsts
aam
ljmp
push
cmp
outsb
xchg
insb
mov
clc
inc
das
push
ja
inc
or
jae
rorb
push
scas
xor
push
inc
lock
mov
xchg
imulb
xchg
sahf
sbb
stos
or
icebp
push
jl
xchg
sub
dec
lea
movsl
shl
sub
xor
mov
sbb
lock
and
mov
fdivs
xor
fdivp
out
jae
add
push
push
cmpsb
jne
add
jb
fcmovne
add
cwtl
jns
aas
loopne
lds
xor
xchg
lret
out
inc
ds
subl
andl
loop
mov
enter
pop
jnp
repnz
push
jbe
dec
ss
mov
xchg
arpl
jle
fs
adc
jno
scas
jmp
out
mov
and
xor
ss
fs
xchg
xchg
xchg
mov
lock
inc
mov
gs
sub
insl
mov
dec
sbb
neg
jp
bound
into
sbb
arpl
cmp
loopne
push
sbb
lret
xor
test
cld
pushf
xchg
gs
mov
mov
lods
movsl
lock
and
cld
dec
sub
daa
dec
sbb
idivb
xchg
push
pop
icebp
fsubs
cmp
inc
dec
iret
fadds
sbb
inc
inc
adc
or
adc
or
jbe
incb
inc
pop
and
cwtl
shll
lods
and
test
xchg
mov
mov
imulb
notl
mov
sub
push
daa
not
leave
loopne
addb
inc
rcrb
xor
mov
movsb
jns
pop
imul
iret
push
sub
inc
sahf
jge
adc
lahf
or
leave
repz
stos
add
xchg
cmp
pop
test
jae
out
xor
xchg
rcr
dec
cmp
lret
stos
je
pop
push
sti
mov
adc
push
and
mov
lret
gs
sarb
push
pop
cmpb
inc
add
loope
push
xchg
fxtract
sbb
adc
ljmp
push
inc
xlat
dec
mov
loopne
sub
inc
adc
popf
pop
push
pop
add
pop
pop
jne
mov
mov
in
rcl
xor
sbb
in
les
in
mov
bound
dec
inc
fisubl
stos
jle
xchg
pop
push
push
shrl
mov
popf
inc
xor
and
and
cld
inc
sbb
pushl
pop
sbb
mov
fimuls
std
pop
or
sbb
dec
add
pusha
std
cmp
cmp
jle
rcrl
mov
and
adcl
scas
mov
ret
pop
lock
cld
cmp
mov
popf
cmpsl
rorb
lahf
je
adc
push
fcomps
dec
cmpl
imul
rolb
adc
mov
mov
jmp
insl
std
test
xor
in
mov
es
mov
jg
addb
cli
mov
dec
in
xlat
push
scas
sahf
pop
iret
pop
cmpb
pop
je
lahf
xchg
jno
add
stos
inc
mov
pop
cli
mov
inc
stos
push
pop
xchg
fldt
mov
sbb
test
lods
pop
and
fs
xor
push
sbb
ficompl
insl
sbb
cmp
addb
popf
andl
jge,pt
and
aaa
push
sub
mov
in
data16
scas
repz
jmp
int3
xchg
fbld
jbe
fwait
in
pop
sub
aam
and
ret
movaps
in
or
xchg
addr16
mov
ss
mov
mov
mov
rcll
fdiv
xchg
ljmp
push
pop
cs
movsb
popf
push
dec
xchg
test
cmp
adc
xchg
xchg
repnz
cmp
mov
sbb
scas
idiv
filds
sub
jne
shlb
cmp
lcall
cmp
push
popa
cmp
mov
std
popa
cmp
jbe
sti
fdiv
arpl
mov
lret
inc
iret
loope
aaa
xor
mov
stc
mov
in
mov
mov
lods
jnp
xlat
sub
loop
inc
xorb
popa
mov
test
push
or
or
cmpb
push
pushf
lret
fstpl
add
or
cmp
mov
scas
mov
fcmove
mov
jb
bnd
mov
mov
ret
xor
cmp
rolb
loop
xor
inc
ret
js
mov
fucomi
push
lea
add
dec
or
jg
fimull
out
push
int3
repz
sbb
adc
mov
loop
jp
inc
and
pop
call
shr
pop
in
sub
sarl
sahf
pusha
jno
pop
sarl
jo
mov
cs
ret
push
jno
xor
test
jbe
sub
shll
andb
push
cld
mov
pop
mov
adc
mov
fsubrl
cld
test
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
and
aam
les
cld
test
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
and
aam
les
cld
test
mov
movsb
int3
push
cmp
sub
sbb
or
jl
insb
xor
mov
in
xchg
cld
test
xor
and
stos
cmp
xchg
sbb
jnp
hlt
mov
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
loop
bnd
push
lods
outsl
ret
and
pop
bound
jb
inc
mov
and
xor
add
adc
loop
bnd
push
mov
dec
xchg
cmp
jb
ss
push
sahf
and
adc
loop
bnd
push
mov
dec
xchg
pop
bound
jl
dec
test
mov
stos
mov
xchg
or
pop
mov
aad
aad
and
push
sbb
dec
cs
fs
xchg
mov
repz
fs
mov
xlat
mov
daa
movsl
add
sbb
jns
or
pop
frndint
and
popf
bound
cmp
adc
adc
sbb
mov
inc
cli
mov
iret
dec
je
fdivr
pop
push
add
xchg
test
ljmp
pop
xchg
pop
jb
mov
scas
mov
pop
ds
mov
push
pop
and
jge
sbb
xor
pop
popa
push
pushl
scas
add
jp
mov
push
rcrb
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
cmpsl
dec
mov
into
sub
or
sub
sub
fidivs
and
ds
inc
lcall
loope
adcb
mov
in
fidivrs
sbbb
jo
lret
jo
add
pop
int3
inc
mov
jo
adc
stos
imul
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
loop
bnd
push
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
loop
push
push
jns
neg
js
sub
out
add
inc
or
jnp
fists
cs
popf
cmp
sbb
dec
jp
fistl
pop
out
xchg
xchg
sbb
xor
out
js
pushf
test
lret
cltd
lods
mov
inc
into
and
cmp
movsb
add
unpckhps
jo
stos
lock
adc
nop
mov
shrb
ret
mov
test
jp
pop
sbb
push
outsl
xchg
mov
subl
insl
sbb
scas
xor
scas
test
dec
add
dec
cld
xchg
cmpsl
aam
movsl
pushf
daa
cmpsb
xchg
sarb
lret
out
daa
pop
imul
inc
out
ss
sub
outsb
repnz
ja
fdivrs
cltd
repz
cmc
pop
es
out
iret
inc
sar
mov
fimull
sub
cmpsl
les
int3
fs
mov
roll
jp
sbb
or
jmp
jecxz
xchg
mov
sbb
cmpsb
sti
clc
jp
sub
cwtl
divps
mov
mov
or
hlt
push
sahf
pop
pop
xchg
jle
jae
mov
mov
pop
fidivrl
loop
movsl
xchg
sub
stc
std
fwait
mov
push
mov
dec
xor
ret
and
imul
cmpl
mov
jo
test
icebp
ret
fcompl
imul
int
pop
xchg
mov
xor
imul
sahf
das
es
xor
pop
mov
adc
mov
and
sbb
outsb
xchg
nop
ds
shrb
pushf
lret
cs
pop
jmp
and
dec
pusha
mov
push
inc
jmp
push
mov
xor
push
push
inc
into
mov
cmc
sub
jno
push
dec
and
mov
sti
dec
pusha
push
xlat
cmp
mov
cltd
mov
and
popf
mov
or
add
push
pop
in
sar
call
lea
pop
rcl
and
xor
iret
xchg
icebp
test
arpl
loop
add
clc
shll
lea
lea
test
jne
outsl
jae
rorl
mov
xor
xor
sub
pusha
test
and
mov
sti
inc
in
sub
outsl
pop
pop
cmp
scas
pushf
adc
push
ss
jae
imul
pop
scas
pop
data16
outsb
mov
test
mov
pushf
adc
xor
ret
rcrb
scas
adc
inc
test
andb
add
inc
movsl
in
and
add
stos
inc
add
cltd
popa
add
popf
data16
inc
push
addr16
sarl
sahf
testb
test
jmp
mov
add
lea
ret
adc
and
xchg
adc
inc
push
dec
gs
add
les
inc
push
push
mov
cld
pop
rcl
sbb
jmp
adc
mov
xor
mov
and
testl
dec
mov
inc
mov
aam
mov
idivl
sbb
push
fisubrl
int3
pop
out
ljmp
ja
loop
mov
mov
sbb
in
dec
adc
outsl
add
mov
xor
add
loop
jo
in
je
cmpb
loop
mov
shll
xor
push
fidivs
mov
fwait
push
stos
cmp
jp
sub
or
or
jmp
xor
jae
ds
mov
cmp
cmc
sbb
flds
cmp
xor
dec
int
and
and
jo
test
stc
cld
sbb
ret
sarl
xchg
pop
mov
loopne
cmp
xchg
cmp
mov
xchg
scas
es
sti
pop
push
push
jp
xchg
das
les
mov
sub
mov
jae
sub
ss
testl
jb
adc
push
and
sti
mov
test
hlt
pushf
into
rcrl
jnp
jnp
aad
loop
scas
inc
test
rcll
xor
cmp
or
lds
add
adc
jle
iret
jno
cmp
leave
and
and
sub
inc
xchg
daa
push
fst
adc
inc
jno
int3
jp
xchg
mov
cld
test
aas
jecxz
ret
mov
bound
clc
lahf
sti
loop
imul
aaa
dec
jbe
test
pop
cmpsb
inc
data16
jb
fldcw
xor
mov
jns
mov
dec
in
test
popa
pushf
mov
cmpsb
xchg
fistpl
sub
dec
sub
mov
dec
les
in
sahf
mov
leave
add
mov
popf
andb
push
jb
ret
lock
push
rorb
test
cltd
jmp
cmp
or
cmpsl
fildll
iret
and
mov
xlat
mov
lcall
test
lea
sbb
les
inc
rcll
push
stos
cli
loope
xor
cmp
push
jo
lret
cmp
mov
pop
dec
jl
push
imul
mov
aam
jecxz
nop
dec
fdivs
xchg
xchg
in
mov
leave
pusha
test
fcom
xor
add
addr16
cmp
sti
into
out
dec
enter
adc
ficoml
sbb
sub
jle,pt
adc
lea
pop
dec
in
sub
cwtl
push
pop
jp
test
push
ss
int3
out
sbb
test
inc
jnp
mov
sbb
xchg
incl
cltd
mov
mov
mov
add
data16
insb
pop
addl
in
ljmp
xorb
cmova
pusha
inc
sbb
mov
sarb
cmp
pop
flds
ret
cld
imul
mov
neg
gs
je
jne
fcom
cmpsl
sub
outsb
mov
aaa
repnz
fildll
dec
cmp
inc
orl
xchg
mov
pop
imul
xlat
add
out
cmp
dec
cmp
test
xlat
pop
xor
mov
jae
je
jg
test
sub
mov
aaa
inc
sub
xor
add
xchg
loopne
jae
fwait
or
mov
shrb
pop
pop
dec
repnz
sbb
cmpsb
and
xor
or
push
les
sub
out
ret
lret
daa
fists
mov
fs
cmp
in
push
mov
xor
jae
mov
ret
xchg
jno
ja
imul
imul
sahf
incb
adc
xor
and
xchg
pop
cmpl
int3
cwtl
stc
loop
cwtl
fdivs
fucomip
lds
lahf
mov
lcall
push
nop
ljmp
shll
xchg
out
dec
jle
xchg
and
dec
sahf
adc
pushf
pop
and
repz
xchg
jb
push
and
jbe
into
jle
cwtl
shrb
test
cltd
ja
inc
fcom
fdivrl
or
dec
ja
dec
stos
fst
inc
jne
sub
pop
jl
js
sub
and
pop
push
fucomip
pop
mov
aad
out
lahf
icebp
sub
sub
std
fistpll
lcall
fnstsw
add
aaa
push
icebp
adc
loopne
adc
lock
adc
push
fldl
loop
sbb
fxch
inc
lret
outsb
or
subb
addl
jnp
ret
data16
or
cmp
xor
add
cmp
lcall
mov
int3
mov
sti
mov
cmpsb
or
mov
fwait
stc
lret
sub
sbb
jo
repz
shll
daa
sbb
mov
std
or
push
mov
stos
aam
sub
mov
cld
mov
je
pop
inc
mov
adc
mov
cli
dec
sti
xor
mov
cmc
leave
push
jle
lret
jae
call
lods
pop
cmp
std
test
sub
xchg
enter
popf
in
xor
outsb
xor
aad
daa
mov
sub
xchg
and
and
push
cmp
scas
jo
pusha
ljmp
jnp
movsb
js
movsl
sub
and
or
mov
nop
push
add
and
aad
lock
or
mov
ss
xchg
flds
cmp
xor
dec
mov
adc
xchg
nop
test
stos
je
adc
stc
mov
scas
and
add
lret
pop
mov
and
pop
jnp
sbb
sbb
out
into
lret
mov
sub
mov
cmp
test
mov
in
push
mov
sub
outsb
and
xor
inc
jl
sahf
nop
adc
negb
test
shll
xor
sbb
scas
inc
xchg
pop
xchg
testl
popf
pop
push
xlat
test
push
cmp
xor
imul
imul
cmp
pushf
dec
in
test
daa
adc
sbb
outsb
adc
or
bound
dec
sub
test
xor
xor
sahf
test
mov
addb
dec
imul
faddl
mov
jo
xchg
dec
idivb
xor
in
sarb
or
cmc
sbb
xlat
push
mov
cmp
mov
stos
repnz
or
sbb
push
mov
arpl
xorb
mov
jo
fidivl
incb
mov
mull
mov
mov
dec
xchg
dec
nop
mov
xchg
jle
mov
mov
div
dec
cwtl
add
movsl
jmp
sbb
mov
sbb
mov
pop
notl
push
lahf
mov
rol
adc
cmpsl
mov
mov
insl
xchg
xor
aam
inc
ja
shll
or
rcrb
mov
repnz
hlt
sub
push
xchg
jmp
fidivs
sub
inc
jmp
nop
shrd
cmp
mov
and
mov
popa
xchg
inc
pop
mov
sub
int
cs
lds
sbb
cmp
pushf
xchg
sbb
outsl
adc
pop
fisubl
roll
or
repz
loope
rorl
lods
mov
mov
subl
jge
xchg
push
loop
loope
pop
adc
mov
add
pop
icebp
xor
dec
fisttps
ret
cld
mov
lods
pop
divb
push
xor
repnz
or
pop
das
clc
lret
jg
xchg
das
outsb
cmc
mov
cmpsb
mov
and
scas
loopne
inc
mov
push
jns
add
inc
cmp
aaa
add
mov
sub
dec
cltd
pop
push
fldcw
repnz
fwait
pop
dec
rol
dec
mov
ja
inc
into
adc
cmpsl
lret
xchg
ficomps
and
lcall
and
and
into
daa
lcall
psubb
loope
idivl
test
add
push
jmp
popf
movb
jne
call
pop
sub
fiaddl
mov
pop
sub
mov
push
data16
dec
movsb
mov
data16
sbb
ret
jo
pop
loopne
es
adc
lods
sbb
std
mov
sahf
xchg
mov
jle
pop
mov
xchg
mov
testl
ret
stc
pop
mov
imul
loopne
dec
call
pop
in
les
lahf
xor
cmp
fdivs
add
arpl
cs
inc
fildl
es
pop
sub
dec
mov
cmpsb
xchg
fsts
mov
aaa
stos
shll
mov
roll
ret
mov
and
in
insb
mov
xchg
inc
sarl
outsl
pusha
fs
dec
pushf
or
jo
mov
fdivrp
and
xor
out
cwtl
sub
add
adc
mov
jg
adc
jmp
add
xor
ja
cmp
fdivrl
inc
fistpl
fwait
mov
xor
pop
dec
jmp
push
mov
fstps
inc
scas
nop
sub
push
mov
dec
jne
test
push
dec
pop
mov
mov
add
cmp
arpl
call
mov
xchg
mov
push
nop
pop
jno
out
movsb
js
cmpsb
inc
or
cmp
movsb
jae
insb
jnp
sub
mov
mov
clc
nop
mov
jnp
pop
and
dec
leave
cmp
and
out
test
sbb
mov
inc
insl
sbbb
lock
pop
sbb
mov
adcl
jle
push
cmpsl
out
lods
daa
inc
mov
aaa
pop
or
inc
cmpsl
pushf
aas
je
arpl
push
sub
imul
pusha
push
adc
adc
or
dec
pop
in
sbb
arpl
push
je
mov
mov
add
js
arpl
jmp
cmp
rcll
inc
cmp
xchg
xchg
aas
jmp
in
pushf
lahf
mov
popa
leave
sbb
sub
loop
movaps
xchg
xor
mov
les
scas
jp
pushl
xor
in
rorl
add
mov
or
je
ret
inc
test
and
arpl
aam
movsb
mov
pop
insb
daa
inc
mov
mov
adc
inc
int3
decl
mov
test
rolb
mov
sub
lds
adc
push
sbb
jp
clc
xchg
inc
cmc
jp
into
out
aad
js
pop
pop
out
js
int3
push
xchg
scas
cmpsb
add
mov
paddw
jle
dec
repz
adc
fstps
xchg
stc
cld
stc
jns
cmp
fmulp
lds
movsb
ss
pop
dec
ret
hlt
movsl
stos
push
or
pop
rorl
xchg
push
mov
es
adc
mov
jnp
iret
adc
or
aad
sub
test
mov
push
cs
in
pusha
xchg
cmpsb
add
inc
jne
inc
pop
cmp
and
and
js
repz
sbbb
mov
data16
push
stc
popf
add
ja
dec
ja
je
jae
out
or
jae
fwait
add
jmp
or
out
idivl
verw
xchg
out
stos
pop
aaa
xor
jne
jecxz
dec
sub
push
stos
jae
shr
out
lret
rcrb
push
mov
hlt
push
lods
pop
mov
fcmovne
or
pop
std
into
cli
jbe
jge
pushf
or
ret
repz
call
stos
pop
jle
adc
les
xchg
mov
in
xchg
inc
or
push
fists
imul
jl
push
sbb
stc
add
pop
jmp
test
xlat
out
stos
dec
mov
ljmp
xchg
andl
lds
mov
js
mov
push
jg
push
cs
arpl
aad
xor
lea
pop
mov
imul
or
cmp
inc
jbe
fadds
sbb
mov
bswap
inc
xorb
stos
mov
ret
imul
mov
cmp
cmp
inc
ret
xchg
movsl
xor
notl
pop
les
stc
data16
cmp
push
and
pop
sbb
outsb
daa
pop
js
or
outsl
xor
rolb
das
jl
test
add
inc
and
cmp
cmp
fldt
add
ret
xchg
scas
and
dec
int3
testl
dec
xor
in
enter
mov
sub
pop
push
adc
je
inc
push
or
imul
es
insb
mov
sbbb
fcmove
jle
pop
mov
pop
lock
fdiv
inc
pushf
inc
mov
jb
or
je
mov
daa
into
icebp
clc
xor
pop
add
fcmovnb
mov
clc
mov
xchg
cmp
lret
test
lcall
jae
inc
scas
test
jge
je
scas
call
stos
or
sub
mov
mov
clc
mov
jno
inc
test
jecxz
lods
ret
push
arpl
enter
fimull
repnz
mov
cmp
jle
bound
arpl
ja
sub
mov
cmp
lahf
jo
in
or
jne
cmpsb
andb
add
ret
jle
cld
scas
cs
mov
ret
or
inc
sbb
int
les
shlb
aas
jge
inc
cmp
pop
testl
fsubr
pop
call
dec
outsl
xchg
cmpsb
enter
dec
fidivrs
sub
daa
push
pop
xchg
test
mov
icebp
xchg
inc
nop
mov
mov
add
push
add
addb
lret
lcall
push
mov
mov
pop
fidivl
in
xchg
push
popa
test
xor
pop
adc
mov
dec
sarb
es
mov
ret
daa
mov
or
inc
xchg
push
xor
push
cmpsl
lret
mov
addr16
cli
push
add
cmp
lret
or
inc
pop
aas
push
xchg
jae
xor
cmp
xorb
adc
jecxz
mov
add
push
mov
ja
mov
dec
xchg
outsb
mov
mov
add
add
cmpsb
cmp
push
mov
adc
leave
add
mov
aad
call
xchg
and
fisubs
jno
add
lods
cld
es
jno
das
lahf
les
stos
xchg
cltd
inc
shrl
mov
ss
test
int
inc
lahf
inc
mov
xor
fdivrp
mov
jo
ds
inc
jne
test
pop
popl
sahf
sahf
push
mov
stos
out
popa
cmp
mov
cmp
stc
std
cmp
dec
push
xchg
sub
dec
xchg
push
cld
daa
or
aaa
scas
xor
cmpsl
jmp
pop
xor
movsl
les
fwait
ds
pop
jge
pop
test
test
subb
lea
mov
xchg
push
shl
aad
pop
test
bound
aad
mov
fs
lahf
jns
push
mov
mov
outsb
sbbb
aam
fsubrl
push
lahf
add
mov
lods
daa
adc
stc
push
repz
mov
dec
sub
adc
test
jns
push
sbb
fstpl
outsl
ljmp
xchg
shl
mov
mov
flds
test
shll
adc
dec
inc
xchg
mov
lea
fisubrl
inc
push
in
lea
jb
mov
out
and
push
fists
popa
repnz
loope
shl
in
pop
out
and
and
outsl
push
andb
es
ret
cmp
pop
mov
shlb
cmp
pop
je
sub
repz
dec
jne
cmpsb
mov
jmp
mov
or
xor
jl
test
insl
dec
jecxz
movsl
pop
inc
and
cmp
add
sub
nop
fstl
push
lock
mov
ficomps
pop
lcall
push
sbb
jbe
je
or
jae
scas
push
inc
cmc
push
xor
bound
int3
pop
xor
pushf
gs
and
mov
sahf
lods
orl
xchg
pop
popa
lret
getsec
gs
fmuls
clc
movsb
inc
sbb
int3
mov
cmpb
and
cmp
lea
movsl
cmp
in
insl
xchg
mov
xchg
gs
int3
jecxz
jb
pop
adc
jl
lahf
mov
mov
out
aaa
push
scas
repnz
sbb
hlt
loop
dec
push
das
data16
cs
les
jmp
pop
dec
imul
xor
lds
ret
fwait
jmp
imul
jno
push
push
inc
stc
adc
jb
sub
cld
iret
inc
add
cmp
xchg
jno
lods
lock
jmp
movsl
dec
addr16
sti
push
fwait
cmp
out
cmpsl
cmpsb
ret
scas
lahf
fcompl
mov
pusha
mov
sub
mov
enter
xchg
mov
lods
es
xlat
jns
or
jecxz
outsb
inc
andb
je
ja
cli
fsts
mov
pop
and
imul
daa
imul
stos
xlat
int
out
pushl
sbb
mov
iret
cmpsb
insl
lcall
jbe
jecxz
aam
push
jnp
push
sbb
dec
das
pop
mov
arpl
in
sbb
jge
movsb
int
pop
aas
adc
mov
xor
xor
inc
cli
out
mov
jnp
ljmp
stos
mov
push
push
sub
cmp
int
loope
sbb
addr16
das
xchg
sti
insb
les
fnstcw
mov
mov
sbb
adc
mov
sbb
and
aam
lock
rclb
add
out
andl
dec
adc
out
fcoms
or
out
jmp
mov
adc
scas
dec
cmpsl
int3
scas
xchg
ficompl
hlt
sbb
add
test
or
pusha
lods
lcall
aad
repz
mov
hlt
pop
pop
test
push
test
repnz
push
or
pop
and
and
leave
stos
sub
dec
cmc
push
inc
jo
inc
jmp
imulb
arpl
repnz
cmc
testl
inc
dec
ror
mov
repnz
jg
sbbb
dec
aad
arpl
mov
fucomip
popa
js
mov
jbe
int
clc
out
cmp
bound
and
test
mov
mov
push
mov
pop
das
xchg
jae
aaa
cltd
or
out
jge
cmc
fsubs
outsb
mov
int3
mov
ss
xchg
imulb
jp
cwtl
sub
push
sub
adc
std
clc
flds
cmp
and
cs
sub
jg
jmp
inc
sub
cmpsl
pop
jae
leave
pop
in
or
jle
dec
testl
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
loop
bnd
push
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
loop
bnd
push
mov
dec
xchg
pop
bound
push
sahf
and
xor
add
adc
loop
bnd
push
mov
dec
xchg
sahf
bound
push
jmp
std
xor
and
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
adc
jmp
sti
loope
sub
pop
mov
xchg
popl
jnp
push
mul
sub
cmp
jmp
sti
push
mov
jne
gs
test
pop
mov
stos
jnp
and
in
or
sbb
sub
mov
mov
fisttpll
aad
stos
jge
pop
mov
jl
push
xor
test
mov
mov
movsb
cmp
std
nop
fst
les
sub
enter
lahf
cltd
add
sahf
inc
adc
push
lock
adc
sub
mov
stc
add
arpl
xchg
shll
movsl
loopne
dec
jp
lea
test
clc
cmp
cmc
jmp
cld
adc
adc
sti
stos
lahf
inc
stos
mov
ss
into
test
sub
lds
inc
sbb
lds
mov
xchg
inc
xchg
push
push
mov
js
mov
xor
and
sahf
fisubrl
stos
les
xchg
insl
mov
enter
nop
arpl
push
faddl
sti
xor
mov
jne
jl
mov
rep
imul
jns
pusha
mov
xchg
es
cmp
gs
xchg
or
sub
into
rcrl
dec
mov
push
jp
fs
pop
cwtl
push
xchg
cmp
inc
leave
jne
ss
sub
cs
in
aad
scas
sbb
mov
dec
xchg
sbb
stos
gs
mov
movsl
jnp
or
sbb
sub
cmp
jmp
sti
push
mov
jne
gs
mov
movsl
jnp
or
sbb
sub
cmp
xchg
push
adc
pop
imul
and
or
mov
ret
jecxz
cmpsl
and
jp
stos
test
inc
and
add
lret
xchg
mov
inc
cmp
sub
cmp
jecxz
aad
push
test
add
cmp
in
js
mov
je
jne
cld
test
lret
or
fdivl
inc
cmp
pop
sbb
cmp
cs
fmuls
cs
jle
xor
xchg
sub
dec
inc
das
adc
pusha
ret
popf
addb
loopne
ret
insb
xchg
or
movb
push
mov
mov
pop
dec
mov
outsl
push
out
or
mov
out
jg
shll
in
mov
lretw
add
hlt
cli
sbb
lahf
out
xchg
adc
mul
xor
push
cld
gs
outsl
enter
adc
xor
mov
insb
lods
and
lret
out
es
push
sub
jp
xchg
imul
jne
outsl
jb
es
shl
inc
pop
cmp
push
vmovaps
lock
sub
leave
daa
sahf
inc
cmp
in
lods
mov
xchg
mov
mov
mov
mov
jbe
repz
mov
inc
imul
pop
or
cli
fldenv
push
adc
add
sbb
or
xchg
fisubrl
test
pop
mov
outsb
mov
mov
add
inc
mov
scas
push
fistl
push
mov
loope
adc
mov
push
pop
sub
shlb
lcall
out
cmp
dec
loope
mov
aad
cmpl
dec
inc
mov
les
mov
ja
mov
pop
pusha
pop
sahf
fs
jo
fadds
jo
xor
jge
into
sbb
mov
cpuid
sub
sbb
in
sub
addr16
mov
dec
mov
add
rcl
xchg
mov
jle
mov
adc
lds
sub
inc
sbb
rolb
ds
pop
adc
fs
fmull
jle
fldenv
sub
cltd
or
push
push
inc
or
lea
loop
pop
addr16
inc
jl
lock
test
lcall
mull
fdivrs
shl
mov
cltd
insb
mov
pop
sub
or
jbe
jbe
cmc
ret
dec
push
and
in
and
test
js
in
xchg
inc
cwtl
sub
int3
sbbl
daa
jge
add
cmp
mov
int
out
mov
sub
jl
push
and
lods
push
aas
jge
arpl
sub
xorl
lock
sti
aas
push
int3
mov
cwtl
xor
outsl
hlt
rcll
jo
add
adc
fildll
adc
rcll
testb
scas
and
push
cmp
imul
cltd
cmpsl
add
int
lock
popf
in
aam
pop
mov
dec
es
sbb
cs
into
or
jae
repnz
pop
shlb
push
mov
or
out
icebp
dec
inc
mov
dec
xorl
fimull
stc
mov
push
mov
mov
mov
les
sub
es
xchg
cmp
test
sbb
mov
dec
jo
mov
data16
xchg
lcall
xorl
in
mov
or
enter
loopew
push
fmull
mov
cmp
push
mov
cli
rcrl
mov
stc
jmp
lock
cmp
jp
dec
enter
mov
ret
fwait
pop
addl
into
out
outsb
or
and
dec
mov
cmp
popf
out
mov
dec
int3
fninit
addb
icebp
cmpsb
sub
adc
stos
test
mov
mov
sti
push
push
cmp
mov
cmc
push
xchg
push
dec
andb
mov
daa
xchg
popa
ret
inc
mov
cmp
adc
aas
sub
dec
ja
add
cmp
ficompl
push
sub
inc
sarb
jecxz
fwait
cmc
and
push
sbb
cwtl
mov
and
jb
mov
sbb
ss
push
nop
sub
gs
mov
push
je
loope
push
sub
jae
xor
repz
cmp
test
mov
lret
ret
loopne
cs
pop
dec
cltd
xchg
lahf
pusha
xor
cwtl
push
test
pop
cmpsl
adc
test
and
push
aaa
fimull
repz
xchg
rolb
jae
sahf
xchg
mov
fdivrs
push
sbb
mov
out
or
mov
and
ficoml
xor
or
lods
pop
jge
mov
sub
sub
xlat
jnp
push
xchg
ret
push
test
mov
es
mov
mov
pop
jl
inc
xchg
xor
lret
repz
jmp
int
and
mov
lods
jle
inc
mov
jmp
ret
adc
pop
shr
js
popa
in
pop
cmp
mov
mov
addl
jmp
xor
sub
and
movsl
or
pop
les
insb
pop
scas
das
jmp
subb
push
icebp
xchg
mov
jl
mov
aaa
icebp
enter
scas
push
aas
loope
popf
sbb
test
scas
pop
int
je
pusha
mov
data16
shlb
jecxz
cmpb
mov
or
xchg
out
push
jo
arpl
cwtl
mov
ja
adc
jb
mov
loopne
pop
in
add
pop
mov
push
push
inc
fs
mov
add
push
mov
sti
pop
jno
dec
pushf
mov
jae
dec
stos
xchg
push
cltd
fdivr
fistl
sti
or
aam
dec
outsl
or
movsl
inc
das
push
push
pop
jge
sbb
sbb
aam
rcr
and
in
imul
outsl
pop
test
cmp
xor
jb
test
hlt
push
rcr
cmp
inc
callw
mov
je
stos
cltd
rolb
xchg
cli
fs
cmp
mov
jge
push
xchg
dec
push
xchg
aas
aad
sbb
sti
mov
xchg
subb
and
dec
jb
lahf
jge
xchg
sub
dec
inc
inc
jg
test
stos
out
xchg
pop
mov
xor
loope
in
clc
jle
sarl
add
pop
in
pop
cmp
sbb
cmpsl
test
inc
andb
pop
mov
imul
cmp
xor
mov
pop
arpl
adc
outsl
push
pop
into
fs
mov
xor
add
loopne
icebp
sub
adc
popf
push
jle
aad
xlat
lret
call
icebp
je
dec
mov
into
fldenv
rcll
mov
inc
add
out
push
adc
lods
xchg
outsl
or
xchg
xchg
sbb
lahf
int
push
dec
loop
out
push
int
or
and
cmp
inc
sahf
loop
inc
leave
inc
sarb
xchg
cmpsb
addl
mov
dec
mov
test
aad
shl
xor
fwait
int3
mov
push
aam
mov
jl
sub
push
sahf
ja
inc
cltd
notb
clc
or
das
int3
pusha
sbbl
rolb
jmp
inc
xor
dec
pop
ret
sbb
jle
jbe
jl
or
das
sbb
xor
fildl
push
push
jecxz
js
out
roll
pop
aam
adc
sbb
mov
cmpsl
xor
out
imul
mov
scas
addl
dec
pop
out
adc
dec
mov
inc
push
in
mov
sub
pop
roll
push
out
jns
mov
iret
lods
xorb
mov
inc
insb
les
jnp
lods
das
aam
xor
ss
add
cli
je
fmul
cmp
cmpsb
mov
or
mov
loop
pop
sbb
out
or
inc
xorb
andl
xor
sarl
loop
das
sbb
sbbb
mov
adc
mov
mov
outsl
pop
cmp
mov
xorl
or
xchg
pusha
fwait
mov
fs
jo
mov
je
mov
test
mov
sub
dec
bts
and
leave
repnz
and
jecxz
pushf
or
mov
inc
les
movsl
add
fmulp
stc
int
imul
xchg
fidivrs
jmp
lds
cltd
ss
push
cmpb
push
cmp
jae
mov
xor
fstps
sbb
mov
pusha
sub
sti
rolb
jg
outsb
mov
adc
aas
push
sub
inc
or
icebp
push
and
stos
push
push
push
dec
dec
push
fidivrs
or
mov
dec
mov
mov
add
xchg
pop
lret
testl
add
inc
cmp
xor
and
add
lret
daa
lods
in
ret
int3
scas
and
and
cltd
jb
popf
popf
stos
int3
aas
cli
fildl
mov
adc
stos
push
push
cmp
out
xchg
push
cld
push
and
sub
add
jmp
add
in
ror
cmp
inc
roll
adc
test
into
stos
push
cwtl
lcall
das
inc
pop
popf
mov
fstpl
lds
rcl
jle
push
adc
xchg
rcrb
mov
dec
mov
mov
pop
fisubrl
fistpl
or
rorl
lcall
lahf
ror
add
and
mov
pusha
xor
dec
popa
dec
out
loopne
cmp
push
jnp
sbb
sub
xchg
stos
mov
add
jne
push
sub
push
inc
sub
insb
jg
popf
lret
mov
iret
mov
xchg
xor
sub
xor
cmp
fsubrs
mov
clc
shl
ljmp
push
imul
ret
daa
pop
jmp
popa
push
lahf
or
cmc
imul
add
pop
cltd
shlb
faddl
xor
outsl
mov
jl
std
enter
and
xor
inc
sbb
cmpsl
les
mov
xor
pop
inc
cmp
scas
adc
fdivrs
xor
sti
sbb
popf
pusha
sub
or
adc
test
lods
mov
dec
sub
xchg
bound
sub
movsl
pop
cld
mov
or
iret
sbb
fdivrs
add
cmpsl
out
sti
mov
and
movsl
shll
mov
or
ds
aad
daa
inc
imul
ret
daa
sbbb
enter
jo
dec
sub
xor
cli
movsb
imul
xor
sysret
mov
sub
lret
adc
sbb
sbb
adc
cmp
out
fs
xchg
test
scas
pop
mov
imul
sub
jns
inc
mov
aaa
mov
or
ss
or
shlb
repnz
int
fs
repz
xlat
stc
xor
or
ljmp
mov
mov
and
mov
push
sarl
std
cmpsl
push
in
adc
aam
shll
mov
ja
orl
or
ss
lret
inc
out
cltd
out
inc
dec
lahf
mov
stc
cli
insl
fsubrl
sbb
adc
mov
mov
inc
dec
addr16
and
out
adc
add
jno
jge
xor
sbb
cmp
sbb
and
jmp
aad
in
fstpl
adc
mov
nop
and
push
pop
and
movsb
fcmovu
repz
cmpsl
fldl
cmpsl
inc
call
imul
or
adc
mov
mov
stc
or
jge
loope
jmp
test
cmpsl
call
jnp
cs
lods
adc
adc
ret
stos
shrl
sar
ret
lock
pop
test
adc
hlt
jmpw
pusha
xor
aaa
mov
lock
mov
loope
add
out
sti
xchg
xor
out
jnp
movsl
add
or
push
mov
stos
cmp
out
inc
jbe
and
and
push
add
lds
adc
hlt
sbb
xchg
aas
mov
mov
jp
adc
es
pop
rolb
gs
sub
or
cmp
add
mov
mov
lock
jle
lods
lods
cmp
test
cmpsb
jmp
enter
loope
push
imul
adc
xor
mov
jg
enter
xlat
mov
cmpsb
and
nop
jmp
aas
mov
push
insb
ret
and
xor
cmpsb
pop
imul
cltd
xchg
mov
test
dec
out
dec
adc
mov
sub
xchg
mov
cmp
jb
cmp
pushf
iret
add
ja
xor
mov
sbb
mull
hlt
ret
imul
int
xlat
sbb
icebp
mov
inc
jle
mov
pop
inc
loop
leave
mov
repz
icebp
setnp
je
fwait
xor
cs
loopne
ret
xchg
movsl
loop
jl
sahf
cmp
jb
mov
hlt
subb
cli
out
lods
loopne
in
pop
xchg
jecxz
sbb
push
shl
mov
pop
xchg
daa
call
in
lahf
cmpsl
xchg
jns
push
hlt
lahf
add
inc
pusha
stc
out
daa
cld
push
xchg
sbbb
outsb
pop
adc
mov
mov
nop
jo
cmp
lock
or
mov
pop
ds
push
into
hlt
dec
int3
inc
sub
ficoml
inc
repz
inc
daa
stos
loope
jno,pn
stos
fs
push
add
push
inc
stos
inc
pop
add
adc
xchg
in
push
fisubs
hlt
mov
shll
in
xchg
cld
xor
add
pop
pushf
or
pop
mov
sbb
push
fcompl
cwtl
lret
or
outsl
mov
xchg
and
jg
out
fidivl
outsl
fwait
pop
push
idivb
int3
dec
sub
ficomps
or
xor
sar
xor
xchg
xchg
inc
push
xchg
cwtl
and
sub
xor
loopne
sbb
xor
pop
lea
lds
push
or
and
inc
lods
int3
mov
imul
sbb
fmull
fstpt
jmp
hlt
pop
enter
inc
scas
inc
std
adc
sub
idivb
jne
cmp
adc
push
sbb
in
push
cltd
sub
xor
mov
or
pop
xchg
and
out
icebp
cmpb
mov
ret
fs
insb
inc
push
popf
dec
mov
push
cli
int
insl
rcll
xchg
pop
insl
hlt
mov
je
out
shll
ja
jne
pop
or
adc
iret
jle
lret
adc
lods
mov
fnsave
call
jns
mov
out
jno
jge
and
movsl
popf
mov
dec
je
sub
orb
shrl
popl
mov
xor
sub
sahf
das
or
and
test
mov
xchg
popf
push
cmc
out
xor
xor
mov
adc
je
jo
push
aaa
outsl
std
sbb
es
dec
shlb
jb
push
out
xchg
movsl
sbb
lcall
fistpll
test
dec
or
sbb
fbld
sub
out
js
add
xor
aas
test
sbb
sub
clc
and
xor
nop
and
dec
add
jns
movsb
lahf
jnp
idiv
jp
jmp
xchg
js
test
or
push
adc
push
cltd
xchg
xor
punpcklbw
cltd
faddp
mov
mov
cld
sub
lock
es
pop
jne
jg
mov
jbe
add
or
in
mov
pop
xchg
loopne
leave
xor
negl
inc
in
or
in
xchg
xlat
cwtl
popf
mov
rol
or
jns
lret
or
sbb
or
test
jp
dec
xorb
bound
movsl
pop
sub
xchg
movsl
fdivl
inc
aas
loopne
pop
push
sub
adc
push
repnz
sub
jmp
dec
add
imul
inc
idivb
add
jno
dec
repz
xlat
inc
je
lret
aad
inc
scas
insl
dec
sbb
gs
xor
mov
sbb
mov
out
ret
mov
lods
push
xchg
outsb
sbb
xor
mov
xchg
sub
lock
testl
inc
xor
sbb
das
xorb
or
sar
or
jne
ds
fs
cld
sub
mov
lret
pop
jae
inc
js
cmp
dec
aaa
push
andl
mov
pop
cmp
fiaddl
movsl
add
pop
cmpsb
xor
jne
call
inc
mov
inc
xchg
push
jp
push
sbb
or
push
mov
sti
mov
push
or
sti
inc
cmc
jge
js
imul
mov
xchg
push
mov
ljmp
cmc
sbb
jl
inc
inc
gs
xor
mov
sub
push
pop
cmp
pop
loope
pop
push
xor
xor
test
push
jl
or
insl
mov
stc
fadd
shl
dec
movsl
adc
ret
and
testb
imul
sub
fs
lahf
dec
add
push
ljmp
aam
pushf
mov
ret
dec
loop
jecxz
xor
pop
clc
scas
movsl
dec
push
mov
push
pop
xchg
call
cwtl
sub
and
sbb
add
push
movsl
fs
dec
push
mov
cwtl
xor
outsb
sbb
ficoml
out
jp
jb
push
xchg
inc
jmp
cld
push
and
and
repz
inc
insb
mov
add
mov
sub
jg
xchg
xor
ret
inc
push
inc
mov
ljmp
out
mov
lods
ficoml
mov
mov
cmp
mov
jl
jb,pn
movsl
adc
psubsw
lods
xor
mov
jecxz
and
xorl
pop
push
push
je
xlat
arpl
bnd
sbb
fidivs
xor
dec
add
cmpsl
adc
stos
pusha
ficoml
push
movsb
movsl
pop
mov
das
cltd
and
movsl
xchg
out
call
jge
mov
xor
fldln2
repnz
sbb
clc
pop
and
mov
rclb
mov
or
mov
mov
fndisi(8087
and
mov
jo
movb
cmc
dec
addr16
mov
int3
xchg
nop
out
and
fcompl
bound
mov
dec
fwait
jecxz
cmp
xchg
mov
bound
out
or
int
test
pop
xchg
call
arpl
aaa
movsl
add
iret
adc
sub
mov
mov
dec
push
cs
add
cltd
pop
pop
mov
cmpsb
fidivrs
aam
adc
xor
mov
sub
subl
shr
sarb
mov
fmulp
inc
sbb
orb
lret
jnp
sti
sub
out
mov
xor
mov
loopne
and
movsl
das
sbb
std
push
mov
lds
sub
mov
out
popf
sub
lret
leave
add
dec
jmp
jg
stos
and
in
push
mov
cld
pop
sbb
lahf
mov
lock
pop
popa
pop
iret
setno
les
or
xchg
sbb
movsl
stc
out
mov
push
mov
out
fs
push
loope
shll
cmp
dec
arpl
mov
pusha
adc
ljmp
loope
jmp
es
mov
les
fwait
out
add
test
xchg
pop
es
ljmp
lcall
mov
ss
out
xchg
cwtl
mov
ffreep
cli
lret
sbb
shll
adc
sbb
pop
stos
cmp
jbe
sbb
data16
xchg
or
nop
xchg
cld
adc
push
fwait
pusha
out
aam
sbb
dec
roll
inc
sub
ret
dec
push
loop
cli
repz
xchg
imul
push
notb
sti
movsl
pop
fiaddl
mov
mov
mov
add
lods
movsl
push
rol
stc
lods
shr
repz
jnp
cmpsb
mov
mov
push
or
ja
jecxz
cmp
add
cmp
jno
jno
out
movsl
pusha
xor
xlat
divl
jg
xchg
ror
fwait
shrl
cmc
out
mov
imul
jg
sarb
stc
pop
repz
adc
dec
sahf
dec
rorl
cmp
dec
sbb
mov
mov
stos
lahf
outsl
adc
incb
mov
and
push
stc
lods
and
stc
rorl
das
lea
xorl
aaa
frstor
dec
lds
in
or
inc
push
into
data16
dec
cwtl
mov
dec
test
cmpsb
jne
negb
pop
xor
sub
js
mov
pop
ja
icebp
xchg
incl
mov
mov
sbb
adc
fstpt
out
and
fwait
jne
gs
mov
movsl
jnp
or
sbb
sub
cmp
jmp
sti
push
mov
jne
gs
mov
movsl
jnp
or
sbb
sub
cmp
repz
lock
gs
mov
movsl
jb
pinsrw
and
fists
mov
cmc
sub
jnp
mov
icebp
pop
imul
or
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
call
inc
xchg
push
jmp
pushf
pop
mov
mov
repnz
mov
push
xchg
lods
arpl
push
in
cmc
and
add
addr16
xor
shll
adc
jg
xor
dec
cmc
cmp
or
mov
sub
xor
es
in
xchg
add
es
outsb
jmp
repnz
cld
push
cmp
mov
mov
jl
ljmp
sbb
mov
or
out
cld
push
in
mov
xchg
sub
ret
in
les
imul
movsl
sbb
test
sbb
jecxz
repz
test
clc
or
cmp
rolb
and
and
ja
xchg
xor
or
ljmp
jl
andl
dec
mov
push
daa
sbb
jbe
orl
gs
cmp
push
mov
and
and
fldcw
or
inc
fisttpll
adc
push
add
mov
test
push
in
mov
lds
insl
or
jecxz
jmp
fimull
lret
imul
arpl
add
es
mov
adcb
mov
inc
mov
je
or
sbb
movsl
or
cmp
and
sbb
cmpsb
jns
push
rcll
mov
in
out
arpl
push
mov
add
adc
ret
adc
mov
adcl
arpl
push
in
cmc
xor
add
adc
ret
adc
mov
adcl
arpl
sub
test
lock
dec
mov
outsl
fdivs
mov
mov
mov
push
pop
adc
inc
fwait
or
std
xchg
jp
outsl
jge
dec
clc
inc
cmp
push
add
xor
test
popf
ds
pop
in
jl
fcoms
and
push
std
jno
mov
mov
daa
jp
xchg
sahf
cli
lds
sub
scas
fsubs
inc
mov
fs
adc
test
fbstp
popf
inc
xchg
in
mov
jp
adc
sub
or
push
movsl
rep
out
aas
test
fsubs
cli
cmc
adc
gs
pop
cmp
xchg
lcall
xor
push
push
stc
cltd
adc
in
arpl
mov
in
pop
popaw
cmp
fistps
and
push
inc
add
jl
or
cwtl
sbb
push
jns
and
add
iret
fidivrl
loope
xor
enter
and
andb
jb
ficoml
enter
sti
and
int3
ret
jp
xchg
in
dec
loop
rclb
push
fcoms
lock
aad
pop
data16
xchg
insb
push
mov
sub
ret
mov
jne
sar
jo
imul
les
jno
dec
mov
out
dec
mov
add
imulb
sub
fdivl
mov
inc
or
test
sbb
outsl
stos
push
sub
lahf
nop
and
mov
in
insb
and
movsl
jle
add
hlt
mov
xor
mov
push
rcrl
test
loope
push
push
adc
cmp
in
pusha
shrl
or
out
push
cmpsb
call
dec
inc
mov
pop
push
add
push
mov
jle
dec
cmp
sbb
stos
jg
imul
cmp
out
loopne
das
clc
imul
jns
jmp
fnstcw
push
cmp
push
pushl
outsb
jmp
hlt
testl
jge
add
dec
fs
mov
ds
and
popa
dec
test
and
les
xchg
add
adc
fsts
adc
fildll
xlat
insb
negl
mov
lea
cmp
mov
mov
stc
es
aas
mov
ss
fsubl
xchg
adc
pop
adc
pusha
movsl
dec
dec
imul
insl
mov
arpl
test
xchg
pop
pop
xlat
frstor
push
fldl
inc
jae
leave
jno
mov
fldenv
sti
push
shlb
mov
js
lret
nop
imul
imul
pop
rclb
popa
mov
daa
pop
fmull
test
enter
lret
mov
adc
repz
leave
sbb
xchg
out
mov
in
jecxz
mov
mov
hlt
lret
shrb
pop
es
mov
ds
sahf
add
xchg
and
or
inc
mov
sbb
add
in
cmp
adc
inc
lcall
mov
inc
cmp
arpl
sub
xor
push
adc
xor
jmp
lock
andl
sub
inc
pop
push
addr16
adc
out
cmp
xchg
data16
and
inc
inc
insb
orb
inc
roll
pusha
xchg
jmp
leave
scas
cwtl
out
sub
mov
gs
mov
in
fxch
stc
fwait
dec
sbb
mov
pop
push
inc
jp
cmc
stos
push
push
stc
in
sub
inc
push
mov
cmp
push
xchg
popa
lea
pop
adc
sti
int
pop
rcrb
lcall
mov
xor
inc
sbbl
jno
xchg
jl
cltd
mov
or
mov
or
loop
test
adc
mov
sahf
sbb
bound
es
pop
pop
jno
inc
call
adc
adc
sbb
dec
add
jge
stos
pop
cmp
mov
mov
lds
pop
xchg
jg
mov
and
mov
adc
push
outsl
xor
cmp
cmp
xchg
xchg
mov
jg
pushf
or
xchg
mov
lahf
movsb
movsl
add
mov
dec
addl
cmp
adc
mov
adcb
int3
aas
out
arpl
cs
jmp
sahf
popa
push
ret
or
add
cmp
fisttpll
int3
sahf
stos
adc
and
shlb
inc
loope
int
push
nop
mov
adc
js
mov
jae
adcl
leave
cmp
jl
inc
pop
jl
sbb
mov
push
outsl
mov
mov
test
pop
iretw
push
mov
pop
mov
imul
in
adc
arpl
xchg
int3
push
arpl
xchg
roll
xor
jns
dec
cli
cmp
aam
mov
out
jns
movsl
mov
or
sub
popa
bound
fcomi
into
sti
mov
mov
fimull
mov
into
test
jle
push
push
xchg
lcall
cmpsl
dec
popa
sbb
or
std
fcmovbe
enter
aad
pop
jge
sbb
in
push
and
jle
filds
ljmp
in
aad
scas
lock
pop
mov
movsb
or
lcall
loop
adc
adc
push
je
pop
jge
mov
out
sahf
jne
inc
push
xchg
mov
cmp
stos
cld
gs
outsl
in
out
adcb
inc
sub
je
adc
fisubl
mov
popf
loopne
mov
jmp
xor
gs
cmpsb
ret
cmpsl
inc
hlt
bound
adc
mov
mov
xor
pop
icebp
outsb
shlb
ds
sbb
adc
xchg
adc
cmpsl
aaa
and
daa
scas
test
cs
adc
mov
sbb
les
shl
add
ljmp
mov
leave
xor
xor
or
adc
shrb
inc
xchg
pop
push
in
cld
cmp
xlat
mov
inc
ss
ret
inc
loope
mov
in
fs
push
in
sbb
fs
push
or
lea
sbb
ss
sar
jmp
dec
je
sub
xlat
aad
jmp
add
dec
pop
aad
adc
nop
ret
push
int3
sarb
adc
jecxz
push
add
and
scas
push
mov
cmp
sub
mov
sub
lea
cmp
dec
ljmp
andl
adc
jno
rol
lea
mov
pop
cmp
in
mov
sub
pop
xor
pop
inc
push
dec
mov
sarl
cmp
adc
push
cmpsb
lahf
mov
popf
fidivrs
adc
scas
sub
sahf
mov
faddp
mov
xchg
lods
pop
outsb
cli
jge
inc
mov
add
inc
shlb
mov
dec
sub
push
icebp
pop
jle
stos
push
ds
xchg
sub
mul
ss
and
mov
repz
push
fcompl
xchg
sbb
cmp
in
mov
pop
movsl
inc
add
dec
fs
xchg
xchg
and
inc
jge
jo
sti
jb
les
test
loopne
arpl
in
mov
dec
das
roll
imul
xor
mov
sbb
andb
out
push
add
lahf
stos
mov
iret
jne
jge
notb
mov
cmovno
or
cmc
pusha
push
mov
das
je
repz
mov
push
push
sub
dec
or
xorb
hlt
jge
outsl
outsb
daa
pop
mulb
adc
test
les
sbb
jne
filds
repnz
ret
out
xor
xchg
dec
in
cmp
push
insl
nop
or
xor
lret
pusha
hlt
cmpsb
movsl
dec
sub
push
in
jg
cmovae
or
dec
pop
pop
jo
sub
popa
je
mov
rorl
test
cmp
fcomps
jg
adc
pop
inc
sbb
je
push
sahf
mov
push
imul
or
mov
adc
loope
incb
mov
jae
cmp
icebp
loop
push
pop
sub
xchg
test
cltd
out
and
mov
sbb
push
psrlw
and
pop
pop
aas
or
xchg
cmp
jmp
decb
test
in
imul
xchg
lcall
and
aam
pop
in
push
jns
mov
sub
mov
lcall
pop
mov
mov
jb
lods
lea
jmp
sub
or
jmp
pop
mov
scas
outsl
mov
and
icebp
rolb
push
jo
push
mov
sub
insb
ljmp
ret
mov
sahf
mov
ss
shrl
mov
addr16
push
jbe
jno
add
lcall
imul
jge
dec
aas
mov
or
jns
ja
testb
dec
mov
stc
jmp
loop
cmc
cmp
popa
push
cld
fs
mov
mov
xchg
int3
inc
dec
mov
add
ss
imul
scas
cmp
movsl
not
push
adc
dec
fcomps
pop
adc
or
addr16
stos
pop
outsl
jmp
addr16
ret
int
dec
mov
sti
xchg
dec
fdivl
adc
ret
loope
xchg
mov
add
bound
imul
xchg
nop
test
jne
push
sbb
cmp
shr
and
fwait
pop
sub
cmp
cmpsl
scas
mull
mov
jno
daa
jl
cld
outsl
mul
test
lods
addr16
data16
xchg
add
aas
pop
cltd
lret
mov
enter
testl
inc
mov
cmp
dec
fcmovb
lea
adc
sub
js
scas
data16
push
cmp
cmp
inc
mov
ljmp
mov
inc
aam
push
mov
xor
sbb
push
adc
inc
cltd
dec
inc
or
iret
imul
jb
lret
dec
or
mov
leave
and
push
shrb
in
ret
test
xchg
xor
push
or
jmp
in
push
sbb
rclb
cli
popa
mov
sub
pop
inc
mov
pop
pop
and
cmp
mov
stos
pop
mov
adc
popa
jmp
and
lock
cmpl
jno
imul
dec
shrl
pushf
jl
mov
loope
push
push
subl
or
sbb
mov
jb
bound
aas
sbb
xor
jne
cli
add
mov
inc
sbb
adc
pop
mov
cs
outsl
cli
popf
cmp
pop
sbbl
sbb
fisubl
int3
popa
jg
xchg
fstl
xor
mov
add
mov
test
loopne
xlat
add
int3
movb
push
or
xor
xor
sarl
aaa
mov
jle
sub
mov
xchg
shrl
repnz
shl
fucomi
les
test
loopne
lea
ds
ror
cli
dec
test
jp
mov
xor
rolb
and
test
or
inc
into
sbb
mov
roll
shll
stc
push
xchg
ja
mov
add
in
sbb
arpl
xchg
inc
mov
data16
mov
insb
imul
xchg
addr16
and
jne
pop
cwtl
iret
cmp
mov
jae
push
pop
mov
mov
sti
or
fdivrs
mov
dec
lods
scas
lret
ljmp
je
test
es
cmp
lret
mov
pop
mov
insb
and
push
sub
mov
mov
fwait
jb
je
mov
fidivl
push
ds
mov
outsb
pop
mov
mov
inc
rclb
mov
sub
enter
add
in
out
jle
xor
pop
inc
outsb
push
push
push
leave
or
fcmovnbe
imul
add
cmpb
aas
aad
add
fwait
inc
xchg
pop
mov
gs
cld
xor
leave
or
loope
push
out
jb
addr16
and
test
ds
push
lcall
push
pop
push
stc
mov
pusha
cli
xor
push
jg
pop
rclb
jns
in
lret
push
lahf
loope
mov
sahf
jl
stc
dec
xchg
jae
mov
inc
loopne
dec
xchg
cmp
test
outsb
sub
scas
adc
jg
iret
mov
push
cmp
in
lods
add
ret
sahf
mov
or
mov
int3
popa
outsb
jle
int3
xchg
out
dec
cltd
mov
call
lds
sub
dec
sbb
pop
jle
aaa
xchg
outsl
sub
sub
and
pushf
loope
stc
arpl
push
cmpsl
pop
addl
mov
into
lret
lods
cltd
or
adc
jmp
jns
mov
addr16
clc
scas
mov
in
sbb
and
or
xchg
je
aad
aaa
jp
loop
in
lods
mov
cmp
insl
or
inc
je
mov
jae
mov
leave
pop
xchg
rorl
mov
mov
outsl
push
in
dec
nop
jo
dec
test
lahf
fwait
leave
dec
lcall
sbb
xor
adc
mov
out
cmp
pop
inc
push
dec
insl
xchg
decb
shll
popa
fmul
leave
add
cmpsb
test
pop
shrl
dec
dec
jnp
in
test
mov
fptan
mov
je
les
das
cmpsb
lret
pop
xchg
pop
aam
cmp
shrb
and
cmp
inc
mov
dec
lds
lods
pop
pushf
adc
lret
inc
or
pop
pop
sub
js
mov
xchg
aaa
mov
je
mov
push
test
jne
pop
sti
inc
adc
cmpsl
mov
and
dec
pusha
shlb
mov
or
dec
lret
cmc
jae
aaa
push
clc
sub
ja
push
xchg
jl
pop
rcrl
ret
pop
xchg
or
fsubr
and
sbb
flds
add
sbb
aam
addr16
pop
sbb
aam
mov
xchg
in
outsb
push
repnz
fsubl
cmp
mov
lahf
mov
js
and
xchg
jne
cmpl
mov
or
and
sub
mov
cs
dec
push
nop
adc
cmp
and
pop
mov
nop
sbb
push
sub
jns
jecxz,pn
ja
lods
mov
movsl
sahf
fs
popf
sbb
inc
mov
dec
xlat
in
push
pop
cmp
dec
js
mov
cmp
or
push
imul
inc
jnp
insl
jmp
xor
jae
xchg
push
fs
jmp
cmc
stos
xchg
cld
cmp
or
mov
mov
jg
orb
pop
loope
mov
aam
fimuls
jno
scas
int3
mov
adc
cmp
and
pop
ret
scas
ret
push
dec
idivl
shll
mov
test
jmp
movsl
imul
test
lods
pop
popa
pop
rcrl
lcall
repnz
outsl
pop
ret
xor
mov
sbb
lds
iret
xor
cmovnp
movsl
sub
cmp
cs
mov
sub
sub
out
xchg
push
mov
pop
lcall
dec
mov
jg
adc
add
pusha
jne
mov
loope
fstpl
and
mov
movsb
push
rcl
add
xor
arpl
lret
adc
dec
rcll
cmpsb
scas
cmpsl
jo
out
add
out
cld
outsb
sbb
jg
sbb
mov
pop
shll
push
pop
ret
stc
sbb
hlt
add
icebp
lcall
lods
and
add
bound
jge
cwtl
mov
dec
fdivrl
ja
mov
pop
shl
pusha
sbb
ljmp
or
mov
cltd
dec
not
adc
dec
hlt
rcl
pop
clc
jecxz
arpl
xchg
jl
mov
sub
xchg
ret
pusha
jbe
push
dec
push
dec
ss
or
dec
mov
cli
mov
jbe
pop
cwtl
cmpsb
lcall
sahf
outsb
push
aam
shll
lds
mov
sub
pop
mov
push
mov
push
fwait
call
adc
xchg
aam
rolb
arpl
daa
add
aad
in
mov
enter
into
and
int3
xor
cs
push
stos
mov
push
mov
mov
and
mov
add
xlat
fcmovnbe
out
mov
push
shll
into
inc
adc
call
add
adc
subb
scas
mov
inc
insl
add
adc
cmp
jnp
ljmp
ss
out
mov
xlat
aad
jg
mov
scas
aad
xchg
adc
mov
inc
out
leave
cmp
xor
outsl
xlat
subb
mov
adc
cmpsl
cld
xor
arpl
pop
cwtl
lret
test
stc
push
leave
adc
cmp
adc
scas
movsb
cmp
aaa
fdiv
dec
lea
rcrb
je
dec
popa
rclb
stc
adc
cmc
int3
jo
lcall
into
scas
int
fs
sub
ss
add
sub
dec
outsb
pop
inc
fisubl
cmp
jmp
cmpsl
pop
nop
subb
push
sbb
xchg
popf
dec
cmp
outsl
lahf
pop
xlat
gs
xlat
push
mov
fxch
int3
sbb
repz
jle
and
je
bound
into
sbb
xor
xor
cs
lret
push
into
stos
loopne
test
push
cs
cltd
pop
test
jge
movsb
cmp
mov
mov
adc
stos
mov
pop
int
push
in
mov
push
mov
xchg
mov
push
push
xchg
sub
fwait
call
cmp
int3
pop
mov
mov
psubusw
mov
mov
inc
cltd
mov
or
insl
mov
pop
cmp
jo
in
xchg
loope
add
pop
cmpsl
mov
mov
addr16
pop
jnp
adcl
sbb
popa
dec
mov
addr16
sbb
add
xor
dec
sbb
nop
xchg
sahf
shrl
add
sub
inc
xchg
sbb
push
and
sti
lret
sbb
sbb
data16
mov
ret
adc
mov
cmp
pop
jns
xchg
loopne
and
or
inc
and
mov
jne
fimuls
adc
jmp
xor
ret
cmpsb
cmp
je
aas
scas
inc
repnz
mov
mov
cli
cmpsl
xchg
imul
imul
iret
and
jns
jl
test
cmpsl
outsl
inc
ja
mov
fucomp
test
jmp
adc
ljmp
scas
repz
lret
in
pusha
hlt
jl
insb
stc
mov
ror
jae
or
out
mov
push
popf
add
dec
in
push
pop
mov
or
movsb
fldenv
ficompl
push
out
inc
jle
scas
jp
ret
mov
xor
rorl
adc
insl
xchg
mov
repnz
mov
sbb
dec
inc
mov
cmp
out
dec
push
shll
inc
xorl
mov
ret
inc
add
xor
loope
or
out
das
lret
xor
shrb
loop
xchg
mov
gs
out
sti
cwtl
push
nop
fdiv
jne
in
push
icebp
mov
movsb
lcall
iret
cmp
cmc
and
aaa
nop
adc
pop
push
fidivrl
fwait
loopne
out
mov
lods
xchg
sub
pop
cwtl
outsb
add
dec
repnz
cmp
sarb
pushf
into
or
fistpl
jmp
mov
cld
aas
pop
jne
fsts
and
rorl
cltd
mov
jp
jb
mov
mov
inc
movsb
xchg
adc
js
sbb
mov
stc
push
sbb
mov
push
and
push
jne
sbb
add
daa
in
jg
sbb
out
mov
or
lret
cs
add
lds
fldl
dec
mov
push
mov
and
lret
mov
push
scas
push
inc
mov
shr
xchg
pop
adcl
xchg
fnsave
add
push
lret
push
sub
dec
sub
test
mov
loopne
jne
or
clc
mov
mov
pop
fwait
and
dec
xor
sub
pcmpeqd
xor
inc
xlat
or
pop
movsb
pop
mov
pushl
hlt
cmp
jo
xor
jecxz
push
imul
fwait
imul
push
mov
dec
mov
push
sub
push
dec
jl
jg
or
inc
xchg
push
pop
fisubrl
and
pop
inc
mov
xorl
inc
xchg
int
nop
ja
std
in
scas
pop
or
cltd
sub
ret
and
and
call
fisubrs
mov
or
outsl
dec
gs
sbb
mov
cwtl
inc
leave
push
imul
mov
jp
sbb
mov
out
xor
jge
out
push
pop
push
lock
and
fidivl
inc
sti
cltd
out
xchg
and
popa
sbb
pop
stos
adc
xor
and
or
jno
ljmp
inc
mov
and
xor
add
adc
ret
adc
mov
adcl
arpl
push
in
cmc
xor
add
adc
ret
adc
mov
adcl
arpl
push
in
icebp
xor
add
adc
jecxz
repz
adc
mov
gs
mov
inc
mov
xor
add
and
ret
adc
int3
mov
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
