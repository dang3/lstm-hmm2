dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
fsubl
lahf
push
stos
mov
js
jo
or
add
add
add
sub
pop
add
add
add
add
add
add
mov
add
add
add
add
add
add
pushf
add
add
das
add
and
add
add
sbb
add
pusha
add
add
sub
cs
movb
add
add
add
add
xor
and
add
add
add
add
add
add
roll
popa
add
xor
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
push
add
add
roll
in
adc
add
add
add
add
add
add
add
add
add
add
stos
add
add
roll
ret
add
add
add
loop
inc
add
add
roll
ret
add
add
add
add
add
add
aaa
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
jne
lahf
add
add
add
add
aaa
add
dec
add
add
add
inc
add
add
add
movb
add
push
add
inc
add
add
add
je
or
pop
add
add
pop
add
add
add
fldl
movb
add
jmp
push
add
add
xor
add
bound
cmc
add
add
pop
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
addl
add
add
dec
add
add
add
add
add
add
add
add
pusha
add
in
jg
add
leave
add
stos
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
enter
cli
add
movb
add
dec
add
add
add
add
jne
or
cli
add
add
add
add
add
mov
daa
add
add
loop
addl
add
add
add
push
add
addl
add
add
add
add
inc
add
add
movb
add
dec
add
add
add
add
add
add
aaa
add
add
icebp
add
movb
add
mov
add
add
add
push
add
xor
jae
add
add
sub
push
add
add
add
pop
add
add
inc
add
pushf
add
popa
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
adc
jo
mov
add
fstl
rolb
jmp
push
jmp
ds
inc
in
cli
mov
ss
xor
fldln2
ljmp
pop
andb
mov
mov
cmpsb
clc
push
mov
and
pop
and
dec
imul
test
jne
aaa
fnstsw
lods
repnz
push
cmc
mov
mov
in
je
fdiv
bound
mov
hlt
adc
add
mov
call
push
and
jp
mov
lea
sbb
mov
fs
ja
insb
xor
xchg
jns
sub
sti
loopne
dec
xlat
scas
out
jae
cmc
pusha
xor
out
fcmovbe
into
sahf
xor
inc
mov
mov
sbb
shll
and
loop
int
dec
out
mov
popa
movsb
outsb
in
add
inc
mov
add
out
push
mov
pop
xchg
notl
or
inc
cmp
shll
push
inc
arpl
lret
xlat
aam
scas
push
je
aad
mov
xor
stc
fs
gs
gs
push
pop
add
xchg
lock
ret
ds
inc
nop
aaa
mov
lds
cmpb
cmp
mov
outsl
cmc
loopne
iret
mov
mov
aas
jg
pop
imulb
pop
push
sbb
or
or
or
push
lret
jmp
or
stos
cmp
fdivl
push
nop
xor
scas
out
scas
cs
movsb
push
ret
jae
imul
js
sbb
adc
enter
jbe
and
dec
cmp
xchg
test
mov
xor
mov
mov
stos
adc
pop
inc
xchg
aas
dec
sbb
mov
adc
xor
and
add
pop
enter
adc
mov
dec
xor
mov
add
inc
or
inc
shl
jnp
pop
imul
jb
pop
mov
pushf
xor
out
addr16
je
sbb
lea
add
or
sahf
and
pop
js
sahf
dec
mov
inc
dec
pop
xor
orl
mov
push
jmp
push
fists
dec
pop
aam
mov
cmp
test
mov
repnz
jae
sbb
mov
sub
call
add
jno
mov
dec
iret
sbb
adc
pop
or
cmp
mov
testl
xlat
out
mov
mov
ret
mov
cmp
ja
out
xchg
add
adc
inc
testl
mov
aad
add
add
push
out
std
xlat
jmp
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
mov
vpmuludq
mov
and
inc
inc
push
popa
je
je
test
mov
in
xchg
adc
adc
and
inc
push
jno
popa
je
test
mov
in
hlt
adc
aaa
push
inc
inc
pop
xor
sub
push
add
add
enter
div
rcrl
loope
or
shl
nop
xchg
call
pop
int
and
fwait
ljmp
into
loopne
rcl
into
pop
jnp
xchg
jle
adc
jmp
fldt
jns
cltd
and
mov
mov
jp
xchg
aaa
adc
adc
out
mov
and
push
or
loop
vpaddq
in
loope
add
jmp
loop
mov
push
adc
inc
jle
loop
mov
cmp
cmp
mov
hlt
jns
je
popa
xor
pop
sub
sahf
xchg
imul
and
xor
daa
jge
add
adc
lret
and
fs
mov
test
mov
in
hlt
adc
adc
and
xor
inc
inc
push
jno
popa
xor
test
in
fucom
out
cmc
xchg
andl
je
or
and
push
adc
clc
xlat
mov
movsl
xchg
icebp
mov
fiaddl
insb
dec
inc
inc
data16
xor
and
jle
out
scas
rol
or
icebp
in
hlt
adc
adc
and
xor
inc
inc
push
jno
popa
je
test
mov
in
hlt
adc
adc
and
xor
inc
inc
push
jno
popa
je
test
mov
fmuls
add
push
fwait
mov
inc
xchg
shlb
ja
mov
iret
rolb
aam
adc
gs
add
pop
inc
sub
mov
sbb
xor
sub
add
aas
enter
or
lret
aaa
and
push
scas
and
std
lock
test
lahf
incb
fisttps
je
dec
jecxz
jo
push
or
cmp
aad
xchg
inc
sbb
pushf
sbb
jns
lcall
shll
cmp
push
std
imul
cmpsl
xchg
pusha
jl
mov
xor
fnstcw
mov
adc
loopne
dec
aas
jg
cmp
je
lcall
popf
xor
mov
and
lds
xor
divb
jl
pushf
call
cmp
insb
movsb
add
jne
insl
in
mov
and
shr
push
movsl
repz
mov
pusha
fsubl
mov
mov
sub
fwait
jns
mov
xor
rolb
sub
sbb
jns
dec
xchg
insl
icebp
add
jne
nop
mov
mov
mov
jae
out
xor
repz
rcll
lock
inc
mov
mov
xchg
xchg
rolb
fwait
sbb
cmp
sbb
add
sub
popf
ja
mov
lea
in
imul
fnstenv
mov
lods
push
bound
arpl
or
add
and
push
enter
filds
fbstp
push
inc
notl
sub
sbb
ret
mov
xchg
imul
lcall
iret
inc
sbb
or
push
push
imul
jl
sbb
add
stc
mov
dec
sbb
mov
cmp
or
jno
and
pop
sti
pop
pusha
daa
xchg
sub
pop
lds
neg
test
cmp
and
stc
mov
mov
sbb
and
inc
bound
adc
sub
or
out
nop
cmpsl
add
xchg
lcall
test
loop
sbb
mov
push
adc
fwait
pop
xchg
and
mov
add
rolb
inc
shrb
mov
aad
lret
outsl
ds
xchg
out
push
mov
mov
jmp
mov
pop
mov
mov
xchg
shll
in
nop
iret
comiss
dec
jge
inc
sar
sbb
fucomip
ja
dec
fs
movsb
add
adc
cmp
repnz
push
repnz
enter
mov
mov
adc
adc
and
dec
fsubl
insl
shll
mov
in
stc
mov
fucomp
pop
dec
enter
es
mov
stos
sahf
jns
sub
scas
add
scas
dec
xor
popf
repz
lock
imul
jp
scas
cmp
cmc
xchg
cltd
gs
je
faddl
mov
dec
data16
inc
mov
pop
push
jbe
cs
fdivrl
jle
mov
xchg
dec
out
add
loope
and
es
fldt
cmc
popf
push
packuswb
pop
add
sub
lret
imull
lahf
jle
push
dec
jae
xchg
mov
xchg
adc
cwtl
in
aaa
imul
pusha
sarl
scas
popa
test
fistl
sub
pop
iret
addr16
jmp
sub
inc
mov
mov
rolb
aad
pop
mov
adc
cmp
in
jle
adc
sbb
mov
rcll
xchg
out
sub
fildl
push
pop
enter
test
repz
arpl
jecxz
inc
cwtl
stos
cmpl
movsl
pop
xorl
sahf
pop
outsb
fdivs
loope
popa
js
sub
in
jb
cmp
add
pop
out
jnp
jge
jnp
ss
jp
add
lcall
ja
lods
add
mov
int3
clc
lret
aad
dec
les
sub
pop
ss
out
mov
call
ss
xor
mov
mov
std
pop
xchg
xchg
mov
mov
dec
ficomps
push
sub
jno
cltd
int
push
xor
int
jmp
rolb
cmp
dec
jl
inc
sub
loop
pop
pop
xor
cmp
loop
pop
aam
mov
and
std
or
sbb
or
xorb
out
mov
cltd
negl
bound
push
mov
xchg
lahf
enter
movzwl
in
sub
cmp
cli
test
mov
paddw
mov
sub
inc
pop
lret
insl
aaa
scas
pop
mov
jle
lods
repz
lret
les
cmp
add
das
jmp
cmp
or
cmpl
in
hlt
das
loopne
push
mov
lods
clc
shlb
push
inc
push
imul
ja
sbb
mov
sub
sub
jle
hlt
loopne
add
and
js
les
adc
sub
je
lret
movsl
ret
sbb
fwait
and
test
inc
iret
mov
fimull
sbbl
xor
pop
add
and
scas
xchg
xor
popa
repz
cmpsb
aam
sbb
inc
lods
jb
stos
or
xchg
jle
loop
shr
test
or
clc
lods
cmpb
jns
test
or
push
mov
adc
sbb
and
mov
push
int
fnstcw
jae
mov
mov
movsl
iret
fdivs
inc
push
cmp
nop
sbb
inc
sub
scas
jecxz
pop
jnp
ss
inc
fwait
adc
divl
arpl
rcl
sarl
shlb
cmp
xor
dec
dec
imull
enter
sbb
jg
movb
sarb
mov
pushf
cmpsl
push
lret
insl
out
push
xchg
dec
jg
xchg
fwait
xchg
addb
clc
mov
outsb
outsl
out
pusha
mov
lret
loop
pop
pop
sahf
cmp
test
mov
dec
mov
sub
dec
push
das
inc
shll
and
and
aam
dec
cmc
dec
mov
lret
xor
mov
pop
xchg
sub
sbb
and
pop
push
shrb
push
lods
sbb
or
aam
in
dec
ja
stos
jmp
jp
mov
jle
popf
mov
sub
push
or
repz
clc
push
ljmp
or
push
push
imul
add
call
out
dec
int3
xlat
dec
movsl
inc
aas
ret
adc
xchg
pusha
call
test
pop
gs
sub
push
lret
xchg
std
imul
add
xorl
or
rcr
mov
fidivrl
jb
mov
xchg
sbb
movsb
mov
addr16
int3
xchg
xchg
dec
test
xor
out
testl
xor
shl
ds
cmpsl
in
mov
jno
mov
outsl
out
or
xor
inc
daa
inc
sub
test
adc
and
jb
mov
adc
jp
push
popa
mov
xorb
cmpsl
mov
ret
bnd
int
mov
jno
rcll
inc
cmp
dec
cmpb
push
dec
push
inc
movsb
adc
lds
dec
mov
into
hlt
jns
loop
lcall
xlat
jno
mov
sbb
add
mov
addr16
pop
pop
pop
inc
xor
aam
pusha
shlb
mov
arpl
dec
into
dec
andb
xorb
xchg
sti
cmpb
lods
lock
pushl
sbb
push
sbb
sbb
out
mov
adc
out
xchg
test
and
test
outsl
xchg
sub
cli
jns
pop
filds
shl
or
es
adc
std
lock
fcomip
sbb
lret
push
jp
push
addl
push
hlt
xorb
xlat
aaa
idivb
xor
stos
mov
ret
sbb
lret
inc
push
test
cmp
stc
sbb
mov
adc
sbb
cltd
xchg
movsl
push
lret
inc
adc
mov
pusha
push
vdivsd
mov
jb
mov
jb
ja
out
inc
jbe
jmp
pusha
pop
nop
fldcw
sub
xorl
bound
adc
adc
mov
xchg
test
sarl
sub
filds
xor
int
add
lods
hlt
mov
ds
aad
or
lahf
rcrl
xor
movsl
inc
xor
pop
cmpsl
bound
jle
pop
add
pushf
or
lods
shlb
mov
loopne
xchg
mov
out
imul
fmuls
jnp
test
hlt
or
inc
cwtl
adc
pop
andl
xor
les
jnp
cmp
push
lret
mov
push
std
repnz
dec
notb
add
or
rcrl
clc
dec
imul
js
xchg
je
imul
sbb
xchg
jb
ficompl
mov
cmc
shrb
push
mov
jg
gs
push
ret
xor
mov
fbstp
movsl
jecxz
dec
rcrb
push
into
sub
sub
mov
ljmp
push
xchg
test
xor
test
push
inc
jne
fisttpl
lods
add
or
mov
shll
sub
inc
pop
sub
sbb
fsubrs
and
shlb
jb
xchg
mov
add
jns
mov
cmp
sub
jmp
outsb
cmpsl
cmp
leave
pop
jle
in
xor
cltd
andb
sbb
rol
mov
pop
or
jns
or
xlat
add
mov
mov
mov
cmpb
daa
adc
test
je
inc
xor
xchg
rcrb
rolb
lods
inc
out
stos
arpl
dec
mov
mov
enter
fmulp
nop
cmp
push
fldl
mov
mov
popa
push
repz
inc
jp
mov
lret
outsb
and
in
add
mov
adc
testl
xor
sbb
jp
pop
cmp
mov
mov
mov
js
dec
xor
xchg
pop
cmc
cmp
jl
data16
daa
mov
flds
pop
mov
gs
sub
sub
addr16
fs
sbb
mov
jbe
xchg
inc
pop
and
adc
mov
inc
insl
in
xor
aam
mov
mov
mov
repz
into
xor
addr16
test
sbb
xchg
js
sti
pop
mov
enter
push
loop
xchg
mov
je,pn
mov
cmc
rcrb
clc
cmp
mov
xor
sub
and
mov
mov
pop
adc
xor
add
icebp
iret
fwait
xchg
xor
push
loope
inc
inc
shrl
ja
ja
cmp
in
adc
or
ret
mov
mov
js
clc
add
in
mov
push
adc
sbb
jbe
mov
jns
sub
and
leave
jge
mov
mov
shr
jge
xchg
pop
bound
leave
int3
fbstp
mov
in
sbb
test
icebp
lea
mov
inc
jp
out
lea
xchg
out
or
mov
leave
push
sub
mov
jecxz
push
adc
sbb
inc
pop
andb
xchg
xor
cmp
rcrb
dec
pushf
adcl
aaa
bound
das
dec
cs
mov
js
sub
jbe
and
aas
movsb
sbb
adc
jp,pt
in
push
adc
and
mov
mov
incb
push
sbb
into
mov
lret
cltd
adc
mov
mov
subb
lcall
mov
mov
out
cltd
scas
ret
mov
pop
pop
lret
inc
in
mov
scas
pop
fcompl
pop
icebp
js
mov
mov
mov
adc
and
icebp
mov
pusha
fimuls
mov
cs
sbb
mov
clc
pop
pop
pop
fnstcw
xor
in
push
inc
int3
lea
iret
and
and
es
addl
arpl
ss
or
add
testl
inc
xchg
and
mov
iret
ja
jp
test
or
xor
hlt
jecxz
mov
push
ret
xchg
sub
imul
adc
mov
notb
adc
mov
aad
push
xchg
sbb
in
movsb
and
cmp
jg
lds
dec
repz
push
lods
push
mov
jb
lret
les
push
mov
enter
adc
clc
inc
shrd
aas
pop
lods
popf
stos
daa
mov
or
push
mov
cmp
push
push
movsb
and
fwait
xor
out
sbb
sti
jecxz
shll
xchg
rcl
test
movsl
iret
mov
ja
cmpsb
push
sub
scas
sbb
nop
imul
nop
sbb
push
popf
cmpsb
popf
lret
sbb
pop
insl
out
imul
popf
and
dec
add
clc
mov
stos
and
testb
imul
cwtl
push
dec
cmp
subl
shlb
mov
add
lds
xor
lock
enter
gs
cmpsl
push
xchg
xchg
cmpsb
add
xchg
mov
mov
fldcw
sbb
fidivl
adc
sbb
sbb
or
test
fildll
xchg
fcmovne
cmpsb
jle
sahf
cmpsb
fmull
std
and
push
inc
cli
xchg
int3
pop
inc
add
outsb
xchg
dec
div
sbbl
sub
pop
and
add
cmc
cmp
addr16
xor
ret
test
das
aaa
js
inc
mov
and
jmp
lahf
bound
lods
pop
cmpsb
or
sbb
inc
jl
lods
aaa
and
pop
and
push
clc
into
jbe
test
xlat
insb
in
mov
in
xchg
je
inc
inc
adc
pop
pop
mov
lret
xorl
add
jle
xor
mov
cmpb
and
sbb
inc
sbb
push
add
dec
jns
sub
pop
xor
movsb
or
movsb
mov
mov
aad
cltd
dec
xor
or
xchg
add
or
lret
rolb
cmp
out
mov
shl
jbe
mov
xor
out
andb
out
mov
pop
aam
int
xchg
stos
dec
negl
inc
outsl
imul
insl
sub
pop
xor
imul
test
rorb
fmull
mov
xor
inc
cmp
inc
and
jns
dec
pop
mov
xor
popa
loop
add
cmpsb
add
dec
ret
pop
push
pop
push
mov
add
and
or
fs
mov
or
movsl
xor
jp
and
repnz
imul
inc
dec
out
xchg
xchg
add
sub
cld
outsl
and
mov
insb
xchg
icebp
aaa
dec
dec
lret
outsl
arpl
fdivrp
imul
sarl
pop
icebp
sbb
jnp
sbb
es
sub
fwait
nop
mov
es
lds
push
mov
fisubl
mov
daa
into
mov
sbb
or
sub
in
lret
cltd
das
cmc
iret
jl
inc
mov
and
stos
gs
das
enter
push
pop
mov
fbstp
push
iret
leave
outsl
fs
aad
add
subb
add
and
enter
xchg
popw
jnp
pop
mov
hlt
rorl
mov
sub
iret
shlb
and
pusha
outsl
insl
daa
addr16
jmp
lret
aam
repnz
mov
pop
mov
mov
mov
aad
shll
sbb
ss
mov
pop
inc
movsb
ret
or
mov
imul
int3
fstpl
addr16
cmp
mov
xchg
lcall
dec
sahf
dec
jecxz
cmp
xor
clc
push
xor
push
js
sbb
jl
out
cmp
jp
mov
jl
ffree
and
ss
pop
add
push
cmp
lock
fwait
pop
shlb
add
mov
ds
mov
push
out
std
fwait
out
or
std
sub
mov
cmp
sub
jae
sahf
jne
push
and
icebp
push
in
fsubs
movsl
mov
lds
lcall
aam
sub
mov
scas
stc
or
push
adc
pusha
lahf
fs
push
sub
popa
jge
jg
je
jns
loope
pop
sub
addr16
stc
in
loop
jge
lret
xchg
sbb
ret
or
inc
hlt
xor
insb
test
dec
cmpsb
dec
pop
shrl
movsl
stc
mov
movsl
push
movsb
call
clc
pop
mov
cmp
ss
and
pop
xchg
fwait
xor
pop
filds
daa
test
push
inc
jb
popf
lret
cmp
fnstenv
sbb
fildll
sbb
push
add
add
fwait
sub
mov
cmpsb
add
jnp
shll
jbe
dec
pop
int3
lods
adc
test
mov
lret
mov
and
ss
lods
fldt
jle
mov
xchg
je
or
pop
jno
iret
cwtl
movsb
mov
scas
xchg
test
sbb
shlb
call
xchg
cmp
lcall
lret
push
mov
jae
fdivr
cmp
je
dec
dec
fwait
in
cmp
pop
test
push
add
stos
jmp
test
add
lcall
pop
adc
push
sbb
add
push
dec
cmp
test
and
sbb
push
cli
sub
aas
mov
jb
sbb
xor
idiv
out
inc
divb
cltd
pushf
sub
aas
cmp
cli
sti
jmp
cmp
adc
out
xchg
push
sahf
xlat
shrb
test
clc
jl
call
add
cmp
mov
outsl
and
and
imul
pop
out
sub
into
ljmp
je
or
jb
jnp
rorl
movsl
mov
or
add
adc
aas
fadds
xor
jmp
inc
add
cli
stc
mov
cmp
mov
scas
cltd
push
pop
jmp
push
in
pop
cmpsb
cs
jp
test
cmp
sarl
addb
cwtl
push
test
mov
aaa
adc
mov
xchg
ds
iret
xchg
iret
lds
xchg
mov
aad
jo
hlt
jecxz
jle
xchg
rorl
add
imul
sub
add
jnp
enter
out
lods
ds
mov
cwtl
and
and
fldenv
sbbb
push
ljmp
hlt
insl
ds
cmp
test
inc
cmpsl
sbb
aaa
rclb
adc
cmp
popf
jno,pt
xchg
movsb
pop
mov
je
xchg
or
out
push
fdivl
adc
scas
lret
cmp
xchg
inc
mov
lcall
orb
filds
repz
repz
mov
js
call
popf
mov
mov
jmp
repnz
mov
xchg
fisttpll
inc
sbb
mov
jbe
xor
imul
loope
cmpsb
and
mov
push
add
sahf
mov
loopne,pn
dec
xchg
cmpsl
and
jb
std
inc
fidivrl
push
xchg
in
mov
dec
push
mov
lock
xorb
inc
fldcw
bound
leave
mov
sti
fisubl
in
pop
rcrb
lods
sar
xchg
lods
dec
fisubs
rolb
aaa
mov
pop
sub
mov
lret
xchg
out
fistpl
xchg
push
sbbb
xchg
xchg
in
lea
lea
iret
push
repz
out
sahf
pop
sbb
icebp
mov
shll
insb
lea
xorb
pop
punpckhbw
aaa
inc
jae
xor
and
add
mov
adc
out
repnz
push
call
ljmp
or
inc
pop
fnstcw
das
inc
sbb
push
pusha
sub
mov
loopne
frstor
push
mov
sbb
mov
lock
dec
pop
test
movsb
mov
ret
push
push
jne
or
test
stos
loope
shll
movsb
ja
out
popf
adc
mov
jmp
add
jp
adc
xor
mov
xor
jno
ret
pop
stos
jae
aad
dec
and
cli
pop
add
push
das
cmp
push
stos
addb
mov
int3
in
and
mov
mov
sbb
xchg
push
bound
pop
jns
push
mov
sahf
cmc
movsl
movsb
inc
or
xchg
out
pop
setno
jecxz
adc
clc
sbb
cmpsb
sbb
orb
fsts
jns
mov
mov
adc
add
mov
jns
adc
ficompl
mov
xchg
sbbb
xchg
outsl
jnp
cli
dec
sti
int3
jnp
aad
and
out
sbb
and
mov
insb
out
mov
fstps
rcrb
stos
lea
xlat
movsb
push
or
push
in
test
and
ljmp
jne
movsb
lret
les
insb
adcl
sub
fcmovnbe
sub
xor
cmp
push
test
fdivrl
xor
cmc
dec
push
dec
pop
cli
in
inc
fisttps
fisttpll
mov
cwtl
repnz
dec
cmp
pop
pop
add
xor
mov
inc
adc
iret
mov
out
ljmp
or
aam
push
es
imul
cmpsl
jmp
ds
inc
inc
dec
add
xor
sbb
popa
sub
popa
cmp
mov
out
je
loopne
cld
pop
cmpsb
test
repnz
ja
xchg
sub
ss
popf
sbb
push
pop
movsl
jecxz
icebp
cwtl
js
test
inc
pavgb
add
xor
adc
jbe
scas
xor
lods
call
stos
fwait
xor
lods
and
mov
adc
out
jbe
push
xchg
mov
mov
adc
jmp
mov
xor
adc
pop
divb
sub
mov
or
sub
push
shrb
xor
pop
loopne
mov
or
jmp
ljmp
fadd
cmp
adc
ret
out
sub
dec
bnd
mov
test
call
push
shl
dec
orb
adc
out
mov
fidivrs
jecxz
inc
popl
ljmp
lret
dec
dec
xchg
dec
shrl
out
adc
ja
arpl
clc
sbb
test
popf
js
test
cmp
mov
push
fiadds
adc
push
cld
adc
fdivrs
xchg
les
aam
in
hlt
adc
adc
and
xor
inc
inc
push
jno
popa
je
test
mov
in
hlt
adc
adc
and
xor
inc
inc
push
jno
popa
je
test
mov
in
hlt
adc
adc
and
xor
inc
inc
push
jno
pusha
je
test
mov
in
xor
add
mov
es
leave
stos
mov
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pusha
jle
outsb
inc
pop
push
dec
xchg
push
inc
jb
sbb
out
rcr
into
mov
sahf
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
lock
lock
rcr
into
mov
sahf
nop
mov
imul
sub
sbb
adc
stc
rcl
lahf
scas
test
mov
sti
mov
jle
sbb
mov
rcrl
mov
test
mov
pop
adc
cmp
mov
xor
test
test
gs
lock
and
lahf
imul
imul
clc
fistpl
mov
popa
nop
popa
andl
fistpll
xor
push
adc
int
sti
cmc
and
xor
mov
or
scas
xor
std
xchg
int
mov
fistpll
sub
dec
loope
pop
loopne
ss
shll
std
pop
jbe
jmp
lahf
sbb
sti
nop
xchg
pop
pop
scas
cmp
cmc
xor
pop
add
mov
inc
jecxz
orb
outsb
inc
pop
push
dec
aaa
and
add
or
stc
call
into
mov
sahf
nop
enter
mov
push
push
push
outsl
dec
jnp
jle
xchg
pushf
xchg
rcl
xlat
repnz
jmp
aas
adc
pop
and
dec
pop
xor
add
push
mov
mov
shl
hlt
loopne
cs
sub
cmp
push
push
adc
loopne
lock
rcr
into
mov
sahf
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
into
mov
sahf
nop
mov
pop
jnp
lods
and
and
mov
stos
test
mov
scas
iret
je
push
mov
or
xchg
loope
mov
icebp
mov
mov
mov
mov
adc
mov
repnz
adc
sahf
ret
leave
push
mov
scas
lock
pop
adc
mov
je
dec
push
adc
hlt
cmp
test
inc
bound
aas
test
pop
sub
jge
aaa
cmpsb
push
jo
xor
aaa
jo
adc
loop,pt
sbb
push
jo
cmp
mov
icebp
jo
jl
sti
cmp
popa
fnstenv
inc
stos
les
ss
lcall
lods
out
insl
imul
cmpsl
dec
inc
mov
fs
in
es
pop
adc
xor
push
xchg
fcoms
movsb
repnz
jae
jl
mov
mov
int3
call
xchg
and
shr
call
adc
cmp
adc
daa
add
ljmp
xchg
std
cwtl
icebp
test
outsl
mov
mov
movb
test
or
stos
push
mov
outsb
jmp
arpl
and
test
das
and
out
rorb
and
pop
rcll
mov
and
shll
clc
fdivrs
sbb
shlb
daa
loop
les
imul
nop
adc
push
inc
ret
push
add
or
cmp
mov
enter
test
outsb
std
mov
aas
push
mov
mov
inc
test
aam
dec
or
mov
je
aad
les
fbld
xor
pop
push
sbb
dec
add
dec
es
test
xor
pop
add
or
push
push
push
je
push
mov
pushf
push
int
ret
ljmp
xor
push
out
jp
pop
data16
gs
insb
mov
pop
movsb
insl
adc
mov
push
pop
cwtl
stc
daa
incl
dec
ror
ret
stc
sarb
inc
call
imul
in
adc
orl
pop
inc
lret
push
addl
fcmovnb
test
xor
mov
mov
pop
mov
dec
lods
sti
jle
shrl
pop
mov
or
adc
lock
mov
ja
mov
and
out
add
ret
mov
inc
adc
imul
test
imul
int3
test
xchg
notb
clc
jmp
dec
iret
jg
das
pop
push
mov
lods
aam
xchg
fiadds
ficompl
mov
imul
or
sub
clc
mov
imul
test
addr16
fldcw
add
adc
and
lret
aad
inc
cmpsl
dec
and
pop
movsb
mov
lock
add
ljmp
movsl
add
iret
out
fadds
sahf
inc
mov
outsl
sub
adc
jg
in
ljmp
ljmp
xchg
lods
divl
mov
jmp
sub
ljmp
gs
dec
xor
incb
stos
in
and
inc
push
cmp
fcomi
push
sahf
insb
int3
sysexit
jmp
lock
push
in
dec
nop
push
inc
add
lock
int3
test
push
iret
dec
ret
cmp
inc
xchg
add
fs
push
jecxz
sbb
xor
pop
xchg
test
xchg
or
dec
cmp
clc
and
dec
mov
clc
add
sbb
and
scas
mov
lods
icebp
ljmp
jne
aas
jge
add
mov
insb
cmp
jp
add
pop
mov
call
push
mov
or
push
jno
negb
cmp
and
idivb
mov
iret
jmp
test
xchg
mov
mov
push
insl
pop
in
shr
stos
lock
mov
mov
mov
xor
push
movsl
out
fistpl
stos
insb
and
mov
push
xchg
rorl
stos
mov
pushf
pop
ret
test
sbb
je
pop
adcb
ret
jo
comisd
movsb
out
nop
jl
mov
jb
inc
mov
mov
pop
cmp
sbb
fdivl
mov
cli
mov
int3
mov
sti
dec
adcl
mov
outsb
and
add
pushf
rorl
mov
jb
dec
xchg
enter
push
xorb
cmp
loope
sbb
pop
adc
push
jb
inc
jl
jge
insb
jo
jge
adc
fmuls
jp
adc
mov
add
enter
adc
out
shll
lods
push
and
sub
sti
push
mov
and
or
cmp
test
sbb
cli
sbb
bound
push
lods
scas
daa
or
push
mov
inc
jb
jno
jns
push
jbe
insb
adc
inc
mov
jnp
pop
cmp
mov
pop
dec
fsubrl
adc
sbb
or
lods
jno
mov
rol
cli
ljmp
push
jge
mov
inc
adc
sub
in
lret
fnstcw
jae
xlat
cmp
loop
dec
xlat
out
repnz
mov
pop
push
sub
mov
xor
sub
cwtl
sbb
or
scas
xchg
call
push
pop
or
add
jmp
push
jne
fmuls
fnstenv
hlt
sub
addr16
sarl
ss
sti
pop
or
jns
dec
pop
jmp
add
inc
push
mov
pop
dec
pop
int
mov
xor
mov
andnps
mov
xchg
jno
inc
scas
cmpsb
inc
loopne
arpl
xor
mov
aaa
cwtl
popf
mov
pop
popa
mov
jge
out
mov
mov
fs
inc
int
aam
shrl
cmpl
xor
add
je
mov
aaa
jge
out
mov
push
mov
add
xor
sub
je
lcall
pop
mov
loope
add
stos
add
and
scas
scas
add
repnz
jge
add
sub
mov
pop
aas
xor
ret
or
cmp
shlb
inc
subl
int3
dec
add
les
dec
xchg
xchg
ret
sbb
rorb
mov
fnsave
shrl
lods
jecxz
adc
jle
loopne
mull
xor
inc
stc
sbb
call
and
fsubrl
inc
inc
jb
push
mov
xchg
mov
push
insb
lods
movsl
mov
mov
insb
inc
testl
in
add
shll
popa
sahf
dec
insb
push
jle
sbb
push
loope
cwtl
mov
out
test
mov
or
lahf
push
lret
cmp
mov
push
lcall
push
and
mov
daa
mov
jb
hlt
dec
jo
xor
fdivr
push
je
sahf
jnp
movsb
outsl
dec
sbb
xor
push
nop
rcl
aas
lahf
push
pop
ror
xchg
stos
mov
xchg
repz
adc
iret
cwtl
pop
and
js
cmpsb
mov
cmp
std
sub
or
notb
arpl
out
cli
imul
sbb
out
inc
mov
mov
call
inc
inc
dec
dec
ret
imul
lods
jmp
es
dec
xchg
filds
push
mov
outsb
shrb
mov
cmp
add
scas
stos
cmp
lods
mov
dec
gs
fnsave
lea
jae
arpl
xchg
enter
mov
cmc
jns
adc
fisubrs
xor
xchg
dec
sarb
sbb
dec
inc
clc
mov
movsb
outsl
adc
mov
lods
add
nop
xchg
or
mov
cmp
lcall
ficoms
cltd
lods
pop
loopne
sarb
and
adc
sbb
mov
cmp
jle
dec
sbb
arpl
leave
xchg
test
cmpsb
outsb
jecxz
aaa
test
push
int3
pop
jae
push
add
xchg
xor
jnp
adc
inc
xchg
xor
lret
mov
pop
push
add
lods
mov
mov
xchg
rol
jbe
loope
jmp
mov
jge
sub
xor
add
testb
fwait
lahf
mov
mov
out
cmp
rolb
xchg
jo
xor
ror
adc
fisubrl
jl
out
mov
in
cmc
and
clc
pop
xchg
jle
lcall
ss
mov
mov
push
inc
daa
call
icebp
sub
loop
ret
sub
lock
jle
in
aas
cmc
mov
loop
into
ljmp
dec
push
jne
jl
rclb
or
rolb
pop
sbbl
jmp
in
int
fstpt
adc
xchg
sbb
test
sub
fwait
lea
fisttpll
movsl
loopne
adc
cmc
shr
mov
mov
xlat
dec
test
aam
nop
jb
jb
leave
sbb
sub
push
roll
or
inc
pop
test
add
or
pop
div
test
xchg
jno
daa
mov
shlb
adc
sub
push
add
imull
cmp
cmp
das
mov
push
mov
jne
sbb
pop
push
xchg
lret
xchg
push
jne
in
inc
xchg
ret
scas
aas
ds
leave
jle
call
push
jge
adcl
xchg
or
int3
mov
dec
sbb
and
push
rorb
mov
or
nop
leave
mulb
inc
enter
jno
sbb
imul
or
add
push
mov
cmp
movl
shlb
pop
lcall
out
aas
pusha
es
jb
outsb
push
rclb
pop
mov
mov
mov
imul
adc
call
mov
fxch
xchg
lock
std
inc
xlat
out
fadd
rorb
jo
lock
mov
mov
ss
aas
iret
lods
jno
mov
pop
add
movb
insb
xor
and
ljmp
push
je
jecxz
loopne
hlt
gs
jns
sub
lds
mov
dec
in
call
mov
mov
xchg
lods
lock
and
sub
pop
repz
push
mov
or
xchg
mov
mov
jge
jecxz
sub
out
mov
push
add
lcall
mov
adc
push
dec
cmc
cmpsl
aas
mov
cmc
xor
callw
mov
push
sbb
mov
mov
sbb
dec
fstl
xorl
ss
stos
jnp
sub
cwtl
cmc
or
sub
shlb
cmp
adc
inc
jb
xor
bound
lods
fst
mov
jae
push
jg
push
pop
not
leave
mov
cmp
jl
add
sub
dec
inc
fwait
movsb
sub
mov
ret
xchg
dec
les
inc
pop
in
sbb
push
adc
hlt
mov
or
push
xchg
jbe
sub
out
sbb
dec
add
jo
adc
add
outsb
adc
arpl
jnp
sahf
jg
push
push
loop
inc
dec
mov
rcrb
lock
fistps
test
shlb
cs
push
and
cmp
movsl
fidivs
mov
jae
outsl
decl
dec
jns
in
test
inc
testb
rcrl
leave
add
stos
lcall
jb
ret
fcoml
ret
rcl
jns
call
imul
gs
sbbl
xchg
emms
orb
insl
cmp
std
loopne
mov
or
or
pop
xchg
stos
xchg
cld
ja
dec
lods
inc
ds
jno
mov
cmpsb
fs
decb
daa
jp
in
sub
pop
out
lods
rclb
xor
imul
leave
aaa
ja
inc
mov
insb
out
loope
sbb
add
jmp
gs
pop
mov
dec
dec
popa
or
int
mov
jmp
push
icebp
lret
test
shlb
mov
pop
repz
loopne
scas
push
nop
mov
movsb
sbb
xor
scas
ret
pop
xchg
jae
cmp
sbb
pop
mov
int
inc
rol
xchg
dec
fucomip
lods
dec
pop
xchg
xchg
data16
or
sahf
sti
movsl
orb
push
add
es
xchg
sbbl
dec
pop
mov
sbb
mov
mov
inc
mov
or
mov
daa
movsl
or
stc
pop
dec
out
stc
pusha
xor
lret
jne
fnstsw
xchg
or
outsl
rorb
jno
mov
stc
pushl
jge
stc
or
test
shl
fidivrl
jge
es
out
cmp
add
push
and
and
xorb
insb
push
popa
mov
xor
js
insb
es
aas
xchg
mov
inc
pop
std
push
rorl
lock
jne
mov
repz
clc
in
mov
sti
ss
loope
imul
lods
and
cld
sub
imul
add
add
add
mov
mov
inc
jb
mov
imull
sub
lret
fildl
sti
daa
pop
leave
push
rorl
cmp
les
pushf
cmp
bound
sbb
mov
jnp
gs
adc
cltd
lret
jo
xor
and
clc
mov
jae
sbb
dec
ljmp
jb
movsb
pop
pushf
shll
aad
mov
add
xchg
pop
sub
loope
daa
and
push
sbb
push
inc
dec
sub
and
and
repnz
mov
pop
push
sbb
push
and
loope
lret
adc
jo
repz
lods
in
repz
sub
idivl
pop
lret
pop
push
repz
mov
fiadds
sbb
add
mov
push
dec
jp
pop
lock
xchg
das
adc
mov
es
or
xchg
push
ret
and
cmp
cmpsb
pop
cld
scas
push
test
movsl
test
insb
mov
push
mov
cld
fmuls
sbb
mov
cmc
sub
pop
in
sub
push
std
popf
addr16
mov
sbb
es
lds
xor
mov
pop
jl
cmpb
std
and
movsb
mov
jle
mov
daa
lock
push
stos
xchg
add
xor
fildll
shl
inc
pusha
xor
push
jecxz
pop
adc
test
mov
outsb
dec
push
scas
ja
idivl
sub
mov
in
test
fldl
sub
loopne
xchg
mov
dec
sub
and
mov
xor
divb
sub
jae
adc
push
push
or
or
mov
pusha
pop
les
or
mov
les
addr16
mov
dec
dec
lret
stos
loopne
insl
inc
mov
nop
or
add
cmpsl
cwtl
push
ljmp
rcll
and
add
mov
popf
push
sub
pushl
or
add
in
pop
outsl
xor
test
xchg
enter
in
pop
inc
test
and
cmp
and
hlt
je
and
sbbb
mov
jbe
add
jecxz
pop
or
fildll
movsb
pop
cmp
lret
mov
rcrb
inc
imul
ds
push
mov
xor
xchg
mov
mov
movsl
adcl
adc
pop
ret
jecxz
loopne
int
cmp
xchg
dec
inc
pop
fbld
andb
mov
inc
cltd
add
push
or
clc
mov
xor
gs
lea
hlt
in
jbe
add
add
rolb
ret
mov
repnz
in
jp
fisubrs
push
ss
clc
pop
dec
dec
mov
cli
test
outsl
lock
mov
adc
imull
insb
shll
jns
mov
adc
add
fstp
cmpsb
mov
xchg
and
mov
push
mov
jbe
ret
out
pop
lcall
imul
push
mov
mov
test
out
lcall
and
je
rorl
cmpsl
mull
jno
fcoms
ds
xchg
mov
dec
mov
insl
cmpsb
fnsave
xor
orb
push
mov
cwtl
loopne
loop
fucomip
pop
xchg
jg
xor
ljmp
mov
mov
push
jnp
sub
sbb
push
pop
fiadds
mov
xlat
or
adc
jo
dec
xlat
rorb
jae
dec
sarl
sub
out
fwait
pop
out
and
or
repz
cli
or
cmp
inc
stc
in
push
push
out
test
adc
imul
xchg
push
fwait
sarl
addr16
in
inc
test
inc
dec
lds
fmull
loop
push
shrl
and
jle
lock
fcmovbe
popf
xor
pop
test
sbb
daa
mov
pmuludq
inc
sub
push
mov
pavgw
mov
pop
fs
mov
scas
xchg
sarl
or
mov
dec
pop
inc
out
bound
mov
fsubs
inc
push
add
xchg
imul
mov
arpl
pop
lcall
mov
add
pusha
lret
into
add
sbb
add
inc
xor
setnp
aas
sub
je
bound
xchg
fmuls
jecxz
push
or
fcomps
or
rcl
imul
stos
jo
jle
xor
or
add
out
jmp
jb
les
push
adc
sarl
out
mov
add
ficoms
cld
test
xchg
sbb
pop
repz
fldcw
pushf
stos
push
int3
gs
and
mov
mov
or
scas
stos
cmpsl
nop
movsd
dec
fsubl
sbb
push
test
pop
and
sub
ljmp
call
icebp
pop
dec
lods
shr
xchg
push
add
sbb
add
pusha
or
sbbb
in
sbb
je
ljmp
pop
or
push
popf
inc
js
mov
ss
addr16
negl
leave
fdivrs
sub
icebp
mov
push
jne
or
pop
testb
lcall
pushf
bound
imul
andl
xlat
insb
push
mov
arpl
xor
icebp
loopne
int
xor
clc
ds
dec
sbb
decb
rcrb
or
xor
clc
insl
jge
sub
jp
jge
into
xor
ja
dec
adc
loop
push
popf
mov
and
mov
popa
xor
in
inc
sarl
sub
ss
inc
in
sbb
jge
dec
into
jge
xchg
xchg
in
xlat
xor
mov
adc
popa
sub
mov
loopne
test
out
in
inc
cmp
or
outsb
lea
mov
imul
push
lods
lcall
cmp
cmp
dec
inc
jae
cmp
sbb
mov
xchg
inc
pop
test
add
in
sub
jae
int3
fildl
xchg
xchg
in
mov
mov
enter
mulb
pop
scas
sub
cmp
pusha
loop
xchg
movsl
loopne
xor
adc
mov
test
aas
insl
fnop
mov
jne
loop
pop
pop
and
jo
addr16
mov
lods
lret
jne
dec
lret
push
mov
lock
or
data16
fldt
fisttps
add
jbe
jb
and
sub
push
xchg
jge
cltd
sar
faddl
dec
xor
orb
fneni(8087
mov
jle
and
cmp
in
pop
push
fistpl
inc
rcll
rcr
shll
push
aam
jns
rclb
pop
push
lcall
ss
ret
jl
call
inc
mov
add
loop
stos
sub
add
sbb
mov
addb
lods
and
mov
pop
xor
jno
inc
cmp
dec
xor
js
adc
fdivs
and
jg
add
sub
ds
lcall
push
pop
jmp
adc
pop
mov
test
and
cmp
lods
push
icebp
mov
xlat
scas
fsubs
or
sub
clc
stc
lahf
sbb
sub
mov
lods
mov
sub
and
jge
push
movsb
push
sahf
test
outsb
stos
insl
inc
mov
out
stc
aaa
xchg
add
in
bound
xor
arpl
push
or
pop
repz
fsubr
push
pop
pop
ret
mov
outsb
xor
je
mov
fsubs
pop
and
ds
or
and
ljmp
cmp
fsts
cmovnp
mov
cmp
sbb
hlt
das
push
cmp
jae
add
push
rclb
loopne
push
sbb
push
cmpsb
pop
ficompl
xchg
pop
nop
push
daa
mov
data16
dec
mov
xchg
stos
out
cmpsl
xchg
out
mov
jbe
jno
aam
mov
xchg
pop
test
xchg
lahf
dec
dec
fs
and
mov
ds
push
testb
push
xchg
jmp
jbe
out
dec
popf
xor
xlat
mov
push
or
into
js
cli
in
sbb
into
repnz
sub
repz
push
call
in
repz
std
ret
add
ja
push
push
cmp
orl
push
sub
fxch
ret
fisttps
mov
jecxz
pop
sub
xorl
out
daa
test
lock
pusha
stos
dec
sarb
in
push
fcoms
jo
fwait
and
push
pop
or
jns
jle
mov
jecxz
decb
mov
sub
test
sbb
loope
dec
fwait
and
jae
and
shl
push
outsl
ss
push
inc
jns
aam
out
jmp
jne
outsl
and
xlat
push
scas
fsubl
popa
or
xor
insl
sub
popa
scas
add
mov
sbb
mov
mov
pop
int
imull
loopne
loopne
xorb
push
mov
jne
push
mov
sub
loopne
enter
shl
lock
repnz
test
repz
stos
lret
adc
xchg
out
inc
test
subb
add
adcb
sbb
xchg
aad
jmp
jl
dec
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
into
mov
sahf
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
into
mov
sahf
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
rcr
into
mov
sahf
xchg
mov
jb
inc
pop
push
dec
and
xor
pop
add
inc
push
sarb
jg
outsl
jno
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
or
lret
cmp
aad
les
fwait
lea
ja
pop
mov
cmp
sbb
sbb
lret
cmp
mov
lea
jnp
imul
in
or
sbb
sarl
mov
lea
xchg
pop
movsl
push
push
mov
jmp
xchg
pop
mov
pop
out
xchg
loopne
lock
out
or
pusha
idivl
mov
addr16
inc
add
xchg
and
pop
xor
add
adc
jl
xchg
mov
adc
dec
mov
out
idivl
insl
cmp
cmc
cmp
sti
pop
lret
mov
jnp
rcll
test
stos
fwait
movsb
xor
in
cmp
sbb
add
inc
insb
fstpt
out
jnp
push
xor
inc
inc
fbstp
repnz
sbb
fstl
mov
pushf
pop
xchg
mov
push
outsl
push
pop
clc
dec
icebp
js
dec
in
hlt
xchg
or
sbb
rorl
mov
lea
arpl
xor
sub
or
jg
mov
lret
and
adc
or
cmp
int3
add
xor
inc
mov
test
xchg
outsl
sti
jge
pop
fimuls
fdivs
mov
jge
call
aas
clc
sbb
addr16
jle
stos
jns
inc
stos
cmp
dec
pop
mov
lea
jnp
dec
mov
cmp
or
sbb
lret
cmp
mov
lea
jnp
dec
mov
cmp
or
sbb
ljmp
sbb
push
and
ljmp
mov
fs
mov
xor
push
inc
cmp
sub
sbb
inc
xor
jp
mov
jecxz
or
sbb
jl
rclb
mov
rol
xor
rcr
mov
and
xor
jle
add
icebp
xor
push
fwait
cmp
or
pop
dec
ss
xchg
iret
jne
add
je
inc
iret
dec
and
int
icebp
rcl
jo
mov
and
stos
nop
movsl
loop
mov
jge
jno
fstl
ja
pop
test
mov
pop
mov
adc
ja
adc
ret
ds
les
xor
xor
jl
sbb
arpl
mov
jmp
cmp
pop
sbb
or
adc
push
stos
add
repz
out
push
repnz
mov
xchg
test
mov
xchg
dec
hlt
dec
std
and
jno
adc
xorl
or
mov
cli
push
adc
clc
imul
fdivrs
in
mov
jp
pop
mov
xchg
or
dec
fwait
xor
mov
and
mov
push
leave
push
ret
mov
jb
inc
sub
out
addr16
test
es
cmc
loope
pop
mov
push
xchg
cwtl
movsb
lea
jns
mov
adc
fs
sub
cmc
in
lds
push
mov
sub
pop
push
movsb
outsl
or
cmp
dec
lods
adc
and
movsb
imul
movsl
mov
ss
jecxz
pusha
ror
aas
xlat
and
inc
push
out
or
pop
adc
clc
xchg
mov
push
cmp
push
bound
mov
xchg
iret
ljmp
je
add
pop
fisubrl
or
adc
pusha
inc
fstl
xchg
xchg
xor
rcl
rcl
or
in
jnp
adc
sbb
mov
pop
leave
mov
add
inc
das
jb
mov
xchg
push
mov
addr16
pop
add
pushf
xor
lcall
jnp
je
xchg
pop
sbb
int3
push
repz
popa
icebp
adc
imul
add
adc
sub
push
idivb
in
dec
cltd
pop
sub
jp
insb
or
dec
push
in
mov
fsub
je
push
int3
cmp
loop
or
push
sub
or
push
and
cmpsb
cmp
aad
in
cmp
cmp
bound
cmp
in
insb
push
mov
jo
rcl
mov
and
call
pop
jge
bndldx
clc
dec
fmuls
movsl
pop
out
popf
test
inc
pop
inc
xchg
dec
lret
dec
or
lret
push
mov
adc
in
popf
repz
cmp
inc
or
sti
cld
sbb
imul
das
jg
mov
fwait
push
filds
ds
adc
and
pop
rclb
xchg
push
xor
mov
repz
stc
and
dec
test
sub
cmp
dec
andb
loopne
mov
mov
mov
adc
in
test
cs
test
mov
repz
subl
add
xor
mov
mov
aad
mov
arpl
mov
sbb
cmp
jmp
mul
bnd
sub
repnz
jg
mov
pop
cli
std
xchg
js
jo
sub
mov
mov
jge
push
ja
jge
mov
andl
or
cli
in
mov
and
jg
stc
cmc
repnz
push
or
mov
cmp
fucomi
sbb
ret
inc
pop
sbb
push
adc
push
mov
jbe
test
call
mov
out
xchg
add
jbe
pusha
js
push
dec
xor
adc
dec
jnp
xrelease
sbb
repz
and
adc
jb
mov
es
jnp
mov
mov
and
add
clc
dec
jecxz
sbb
dec
sti
mov
les
xor
xor
jecxz
movsl
stc
sahf
pusha
insl
jge
repz
xchg
mulb
or
lea
jecxz
mov
cmc
dec
xor
xchg
aas
jb
fcoms
mov
cmovae
nop
jns
jmp
repnz
cmp
pop
mov
dec
rorb
xor
dec
jns
hlt
bsf
lret
pop
test
sub
xor
xchg
in
pop
mov
jecxz
xchg
cmp
je
lcall
iret
and
scas
adc
ds
xlat
pushf
xor
add
nop
dec
outsl
mov
out
movsb
mov
aaa
or
lcall
xor
fnstcw
roll
pop
mov
das
inc
mov
loopne
adc
je
jb
xchg
and
push
bound
cmc
jge
in
ljmp
lahf
cmp
sahf
insb
decl
inc
mov
mov
inc
stos
push
in
mov
mov
inc
stos
sbb
xor
pop
pushf
test
leave
fwait
and
dec
sbbl
lods
inc
stos
inc
shrl
push
es
test
jne
rolb
mov
hlt
stos
add
sbb
pushf
outsl
sbb
divb
out
jmp
pop
imul
mov
lods
lahf
push
out
pop
add
insl
push
and
sub
addr16
fnstcw
jno
add
rcll
push
enter
jb
adc
cmp
ss
fldl
dec
shrl
pop
in
mov
jnp
adc
xchg
mov
pop
push
push
scas
jns
ja
jnp
xor
out
mov
ljmp
int
inc
sub
xchg
push
cmp
into
in
std
adc
je
ret
sar
and
xchg
mov
xor
push
pop
out
xor
enter
gs
clc
notb
mov
rorb
inc
xchg
ljmp
loope
push
pop
dec
aaa
lods
or
inc
sbbl
jp
push
mov
lds
pop
in
pop
dec
dec
fldl
stc
sub
mov
enter
mov
cmp
add
lods
sarb
data16
int3
nopl
pop
xchg
aas
sbb
aas
loope
xchg
push
out
sub
inc
std
scas
ja
pusha
push
mov
decl
xor
add
mov
push
or
ja
mov
inc
popa
lea
fcmovnu
xor
fwait
sahf
dec
cmpsl
in
or
push
sub
xor
scas
mov
int
sbb
out
sub
cmp
push
xor
jb
jecxz
dec
aam
and
mov
daa
das
fcoms
dec
xchg
inc
jle
and
cmp
dec
pop
push
adc
mov
cmpb
pop
jns
xchg
adc
add
shlb
lcall
cld
xchg
dec
add
mov
iret
das
lds
sub
jne
xchg
stos
das
cmp
push
mov
lods
mov
mov
xor
ret
std
xor
and
sbb
outsl
sbb
fiadds
inc
jl
stos
scas
inc
cli
mov
adc
sub
adc
push
mov
adc
les
movsb
xchg
xchg
aas
rcl
or
mov
inc
bound
ja
aam
push
inc
xor
popa
sub
mov
mov
std
cmp
sub
popf
dec
xor
cs
or
lods
mov
pop
jne
ds
mov
out
sarb
cmp
enter
cmovs
int
aam
in
dec
pushf
cmp
outsl
inc
inc
jecxz
xchg
call
idiv
xchg
fisttpll
push
sub
push
cmpsl
test
out
sbb
loopne
add
push
cltd
push
call
xorl
testl
and
sahf
int3
fidivrl
ret
pop
jo
push
pushf
imul
out
lret
cmp
cltd
test
pop
cmp
adc
popf
inc
push
arpl
mov
push
mov
xchg
xor
dec
js
cmp
dec
das
push
ss
sarl
jp
clc
cmpsl
out
lea
arpl
fs
test
sbb
or
inc
or
sbb
jno
out
fisttpl
test
push
xchg
and
mov
into
add
pop
jb
jl
in
sbb
arpl
mov
in
insb
std
pop
lret
pop
test
xchg
or
adc
inc
stc
mov
push
adc
out
out
addr16
daa
cmp
lahf
push
xchg
jno
mov
sti
jp
mov
mov
icebp
rcrb
mov
cltd
or
mov
sbb
ja
xchg
push
cmp
inc
add
push
js
adc
test
lret
mov
sub
xchg
mov
dec
aad
cmp
ljmp
inc
lods
fisubl
pop
les
ret
pop
mov
shlb
cmp
std
inc
xor
jmp
loopne
add
sub
out
adc
pusha
into
outsl
jg
push
or
into
or
rcrb
lahf
fs
fcmovnbe
je
mov
sub
fmul
aaa
pusha
lods
lock
insl
jge
repz
cmc
es
and
sub
jae
jg
cmp
add
lahf
lret
add
mov
cmc
mov
mov
adc
push
ret
aam
xor
int
lock
fcmovu
outsb
mov
sub
call
xchg
cmp
and
mov
mov
sbb
xchg
mov
dec
std
loop
cltd
test
test
jne
pop
das
or
or
fcomi
add
cmp
lahf
loope
or
test
jmp
je
andb
pushf
add
push
cmpsl
gs
aaa
jle
sbb
inc
int
pop
ficomps
ljmp
test
sbb
lret
sti
insl
mov
insb
rorl
jp
mov
stc
sub
or
xlat
mov
outsl
dec
and
pop
adcl
out
adc
fsubl
lock
pusha
test
fldenv
mov
inc
pop
mov
adc
subl
push
ja
adc
and
out
push
xor
or
out
repz
popf
adcl
aam
bound
mov
lods
xchg
cmpsb
data16
push
jae
les
jns
adc
adc
div
dec
push
jg
push
dec
pop
inc
iret
idiv
cmp
test
lds
repz
aas
ffreep
mov
mov
cmp
adc
outsl
cwtl
pop
pop
adc
xor
daa
mov
sub
mov
aad
xor
or
sbb
into
mov
int
xchg
and
test
sbb
xchg
xor
js
jle
fadd
es
jl
sahf
sub
sbb
stos
negl
loopne
jle
dec
arpl
dec
das
lcall
cmpl
add
shlb
pop
jg
mov
aaa
mov
adc
dec
loope
addl
adc
lods
andl
inc
loopne
fwait
repnz
pop
fstp
into
sub
arpl
dec
iret
and
sub
adc
mov
int3
mov
ja,pt
into
add
repnz
fsubrl
adc
insb
sbb
dec
scas
into
scas
cmc
mov
movsb
test
out
jg
cltd
inc
fs
test
pop
push
fsts
stc
lds
inc
jl
jg
jbe
jno
dec
psubw
jne
roll
mov
ljmp
mov
jno
pop
dec
pop
push
dec
aas
clc
or
sti
lock
xchg
dec
andb
aas
dec
das
idivl
cmpsb
xchg
in
add
jne
xchg
mov
stos
pop
mov
movsl
mov
add
stos
dec
call
xor
adc
movsl
mov
xor
call
cmc
lret
je
lret
int3
sub
lock
inc
rol
leave
cmc
mov
dec
mov
pop
push
fwait
std
or
cs
cwtl
enter
sub
xchg
mov
sbb
inc
jns
fs
je
xor
nop
or
mov
sti
sbb
or
movsb
cmp
push
and
pop
inc
rol
push
in
xchg
jns
jo
shlb
pop
xchg
mov
pop
ret
jns
mov
fsubs
xchg
movsb
push
out
sbb
and
test
inc
lret
mov
out
xor
out
lods
cmp
mov
jbe
repnz
lea
mov
mov
test
std
jne
cmp
adc
outsb
outsb
xchg
mov
and
ljmp
iret
std
out
stos
out
out
jb
call
movsb
dec
jmp
incl
lret
or
fwait
jne
scas
ret
je
es
out
pop
das
cs
xor
and
loope
cmpsb
daa
mov
ret
popl
and
fiaddl
adc
add
jl
xchg
dec
andb
or
popf
divl
hlt
or
or
cwtl
jne
mov
lret
int
fs
incl
out
cmc
and
rcr
cli
add
fdivrs
fcomip
pop
rol
pop
icebp
adc
into
xchg
xchg
jo
mov
xchg
xchg
jae
lods
stos
add
inc
push
cltd
pop
sbb
dec
shrb
mov
sub
jle
std
or
pop
push
xorl
xor
mov
cwtl
jne
dec
pop
movsb
std
mov
pop
subl
jmp
mov
lret
cli
movsl
notl
pmulhw
pop
je
outsl
js
and
imul
xor
xchg
sbb
call
xor
fldenv
lcall
cwtl
xchg
in
std
hlt
pop
pop
sahf
xor
roll
jne
cmpsb
inc
aam
sub
outsb
add
cmc
arpl
push
test
scas
mov
dec
dec
jg
mov
mov
push
icebp
inc
cs
jb
adc
add
jbe
push
mov
xor
inc
stos
mov
stos
lea
adc
ret
jl
aas
out
sub
push
jmp
fadds
pop
cs
cmc
cltd
arpl
mov
loopne
push
inc
and
notl
cmp
xor
andb
xor
push
lcall
mov
inc
mov
shl
repnz
mov
frstor
in
sub
shll
loope
sub
jb
cmp
jmp
imul
lea
cmp
jae
outsl
rcrb
mov
mov
cmp
mov
dec
pop
dec
lahf
jno
movsl
sahf
adc
inc
mov
pop
cld
les
popa
cmp
sub
pop
rorl
sub
or
out
test
cmp
adc
outsl
je
mov
test
and
bswap
push
imul
ds
imul
jmp
mov
xchg
and
add
subb
sub
jge
mov
pusha
xchg
testl
sahf
pop
test
cli
sbb
pop
push
sbb
and
pop
mov
sbb
mov
xor
pop
lods
pop
add
pop
cmpsb
in
js
push
cmovne
cli
push
sbbl
and
cmp
xor
test
mov
bound
xchg
addr16
imul
fsubrs
cs
adc
insb
jl
dec
inc
mov
cmc
iret
mov
mov
add
inc
and
fwait
inc
lds
pop
out
test
cwtl
pop
cmp
loope
stos
stc
push
fwait
ljmp
outsb
lods
leave
mov
rolb
das
hlt
lret
jcxz
negb
shll
lcall
xor
mov
scas
sti
sti
fisttpl
dec
mov
iret
outsl
faddp
cmc
fdivrl
stc
cmp
jnp
imul
je
es
push
push
loop
bound
mov
shlb
mov
push
seto
int3
cmp
aas
dec
jns
jbe
stos
push
mov
adc
push
loopne
dec
mov
cmc
jbe
sub
ret
arpl
fnstsw
push
lret
cmp
mov
add
adc
sarb
in
ret
push
je
jl
sbbb
adc
fnstsw
es
cs
les
js
sbb
mov
add
adc
adc
ljmp
sarl
jbe
mov
pop
sbb
outsb
sar
ss
into
dec
jno
mov
mov
pop
sti
adcl
dec
orl
mov
xchg
mov
lret
popf
jg
push
test
and
lret
mov
pop
jle
repz
or
inc
es
cmp
xor
jg
sbbl
jbe
mov
shl
dec
mov
test
add
adc
call
iret
fbld
jno
hlt
pop
rorb
push
inc
mov
fcom
popa
adc
aas
ss
stos
popa
in
sub
mov
cwtl
clc
push
rcrb
aas
or
jecxz
aam
jg
sti
sub
enter
pop
and
pop
jb
arpl
mov
adc
cwtl
out
sub
xchg
divl
adc
mov
lret
icebp
pop
popf
jle
fildll
sahf
daa
insl
push
aaa
int
out
mov
cli
lds
fcompp
adc
mov
daa
aad
inc
xchg
pop
mov
dec
data16
jnp
mov
jae
xor
in
dec
sub
addr16
xchg
xchg
aas
or
fldcw
mov
cmp
inc
outsl
sub
mov
or
push
jmp
push
icebp
add
dec
xor
jne
jecxz
mov
ficomps
mov
dec
jle
rcrb
pop
and
sub
mov
inc
int3
jmp
add
xchg
sub
or
insb
fbld
add
and
es
mov
mov
mov
ficompl
jmp
mov
lret
in
xor
adc
mov
jo
into
out
and
mov
das
add
and
inc
adc
lods
rcrl
insl
outsl
mov
mov
test
push
xor
test
cmpsb
clc
jl
sub
out
mov
push
push
and
sbb
icebp
push
mov
inc
in
mov
pop
out
sbb
or
sti
jae
add
leave
push
or
jg
movl
iret
jl
and
dec
add
addr16
jno
adc
and
jge
mov
add
pop
outsl
pop
ds
add
std
push
pop
and
and
and
cmp
add
movsb
jbe
cmp
dec
pop
dec
jae
push
ja
jae
bound
and
adc
inc
adc
std
loopne
sbb
nop
sbb
mov
push
call
lahf
jb
jge
fnstsw
loope
shlb
inc
and
sub
test
psubusb
pop
jno
dec
jg
jmp
idivl
dec
xor
aas
mov
leave
notb
std
ffree
and
bound
cmp
pusha
pop
cmpb
inc
or
enter
add
repz
sbb
aad
dec
fisubl
aaa
mov
dec
repnz
add
ret
push
inc
push
push
mov
or
cli
ret
imul
rcll
mov
imul
iret
sub
scas
out
xor
inc
xor
jne
cmpsb
pop
in
mov
or
cmpsb
push
data16
cmp
scas
ss
dec
xchg
add
and
xchg
jmp
dec
loope
jnp
cmp
jbe
xchg
out
rep
jns
mov
repz
psubusb
mov
pushf
jg,pn
cmpsl
push
neg
pop
es
gs
icebp
add
pop
add
fld
jp
push
sub
jmp
or
enter
add
push
cmp
clc
dec
sub
jae
aad
notl
sub
mov
sbb
std
inc
inc
insb
mov
andb
xchg
mov
pop
jns
and
inc
pop
stc
movsb
xchg
mov
arpl
xor
jo
cltd
lods
rcll
lcall
addl
lcall
xorl
sbb
cld
int3
clc
test
scas
mov
popf
or
dec
fwait
ljmp
mov
add
gs
ljmp
adc
or
xor
mov
call
jnp
mov
jne
into
inc
jnp
pop
mov
pusha
scas
fistps
ret
jns
sahf
aas
incl
xchg
pop
mov
cmp
loopne
cld
sub
movsl
addr16
test
jle
xchg
cmp
in
cmp
subps
dec
cs
imul
jne
push
fucom
xor
mov
divl
je
cld
aaa
in
nop
push
xchg
pop
dec
jae
cmp
fcoml
pop
test
je
sbb
rclb
das
and
jb
mov
sbb
outsl
mov
lea
in
mov
ljmp
cmp
mov
lahf
iret
jbe
sti
sbb
dec
repnz
movsb
cmp
cmpsb
cmp
sbb
xor
test
repnz
daa
cmpsb
popf
sub
and
cmpsl
and
mov
pcmpeqb
xor
xchg
pop
pop
and
dec
mov
mov
push
jle
jle
adc
mov
popa
jo
xchg
mov
rcr
das
into
mov
xchg
mov
adc
sbb
sbb
in
add
dec
fs
or
repnz
stos
cltd
push
jne
mov
push
mov
pushf
jno
inc
ret
push
cmp
dec
ljmp
stos
aas
add
subl
movsb
xchg
cli
push
and
aad
xor
jle
or
sbb
sub
int
fcmovnu
mov
pushf
or
adc
jne
adc
stos
andl
sub
add
inc
jns
pop
inc
aas
xchg
add
xchg
cmp
call
or
into
inc
and
push
rcl
jg
jb
and
pop
jae
mov
ds
cwtl
repnz
outsb
mov
sbb
repz
and
push
push
dec
push
pusha
adc
mov
push
mov
sbb
push
lahf
and
out
push
mov
int
fisubrs
mov
dec
cmc
mov
aaa
out
fisubs
subl
add
xchg
cmp
jmp
inc
shr
lret
aad
dec
or
int
jp
insl
std
jmp
add
fisubrs
jg
pusha
scas
stos
es
jns
das
adc
pop
ljmp
fwait
stos
or
mov
pop
xchg
or
jge
xchg
jo
out
pop
rcll
xor
cs
cld
fisubrs
xor
movsl
test
dec
fistl
pop
movsb
sub
scas
push
test
pop
cmp
and
jecxz
xchg
mov
inc
fistpll
sti
sahf
and
fisttpl
pop
mov
lea
jnp
dec
mov
cmp
or
sbb
lret
cmp
mov
lea
jnp
dec
mov
cmp
or
sbb
lret
cmp
mov
lea
jnp
dec
mov
cmp
or
sbb
lret
cmp
mov
lea
roll
dec
mov
les
hlt
add
int3
int3
int3
int3
int3
dec
pop
push
or
jnp
imul
push
sbb
psrlq
xchg
mov
xchg
sahf
xchg
mov
push
dec
push
jnp
imul
or
add
xchg
shl
je
mov
mov
mov
pop
lea
loope
sbb
outsb
xor
xchg
fisttpl
cltd
stc
enter
leave
iret
popw
push
or
dec
push
pop
adc
repnz
mov
jle
jg
dec
add
inc
jmp
mov
xchg
xchg
push
mov
aam
and
aaa
dec
add
mov
sbb
imul
xor
adc
in
sbb
inc
repnz
jle
xchg
fidivrl
out
pop
adc
pop
outsl
and
push
dec
jg
imul
cmp
pop
out
sub
mov
xlat
testb
xchg
push
sub
xlat
sahf
clc
jns
mov
icebp
sahf
jnp
push
mulb
mov
xchg
dec
dec
sub
jns
dec
sub
into
push
push
out
xlat
push
imul
xor
sbb
cmp
fistpl
xlat
into
cmpsl
fisubs
mov
arpl
pop
inc
pop
xor
or
xchg
mov
iret
add
sbb
and
and
pop
sbb
sbb
rcr
mov
mov
xchg
out
jg
xor
push
pop
es
cs
inc
or
sub
sti
cmpsb
jmp
fwait
mov
mov
push
dec
ss
imul
or
sub
sti
cmpsb
jmp
fwait
mov
mov
lds
jns
rorl
js
test
sbb
loop
xrelease
daa
cmpsb
aas
ficoml
jb
mov
mov
cwtl
cmp
inc
fidivrs
push
fnstsw
daa
xchg
mov
dec
push
stc
dec
ret
push
mov
lret
insb
cwtl
adc
add
add
mov
nop
and
adc
pop
mov
sub
or
js
clc
dec
xor
push
push
popa
dec
or
jp
inc
insb
cmp
shrb
or
cs
sub
ljmp
or
mov
aam
insb
cmc
out
jo
xchg
sbb
repnz
scas
dec
push
mov
fidivrs
aam
insw
inc
jl
push
lock
dec
jo
test
shrl
fadd
ljmp
jnp
mov
shl
movsb
pop
pop
cwtl
cmc
ret
jmp
sub
mov
or
jno
add
mov
lods
test
jmp
fdivl
mov
test
inc
mov
mov
in
jecxz
popa
lret
test
inc
xchg
mov
cwtl
imul
pop
cmpsb
loopne
mov
jbe
popf
jo
scas
sub
in
pop
mov
xchg
pop
xorb
xchg
enter
in
dec
imul
sti
data16
push
mov
xchg
neg
jae
inc
xor
sub
or
icebp
lahf
xor
insl
jo
cld
in
fsub
and
xor
rcrb
inc
push
jge
push
dec
mov
dec
sub
sbb
sub
cmp
cmc
cwtl
leave
push
xchg
dec
stos
or
mov
mov
sbb
push
mov
stos
loopne
push
movsb
lock
lea
fwait
neg
pop
pusha
jge
ljmp
dec
xor
jge
int3
popl
mov
movd
lds
popf
push
pop
std
add
loope
subl
jae
outsl
cld
lea
pop
inc
xor
das
outsl
cbtw
ja
andnps
push
cwtl
lcall
out
imul
std
mov
idivl
mov
pop
mov
call
insb
aam
ljmp
stc
push
push
loope
dec
mov
hlt
fadds
jne
push
pop
jae
andl
lahf
lahf
cmp
adc
test
push
and
dec
xchg
in
inc
out
sbb
ror
cs
push
call
out
add
loope
roll
and
sbb
xlat
aad
movsb
xor
jae
pushf
sbb
jecxz
jbe
clc
push
std
and
jbe
scas
xchg
aad
pop
add
mov
popf
mov
icebp
push
mov
xorb
xor
or
cmp
adc
push
stc
add
jg
pop
xchg
stos
xor
mov
push
push
add
xchg
imul
push
xlat
adc
jmp
and
nop
or
and
sub
hlt
cmpl
data16
out
fmuls
gs
jbe
mov
mov
lcall
xchg
pusha
sbb
jl
jge
repz
bound
ret
ficoms
sti
rorl
cmpsb
jle
stc
test
std
mov
cmp
mov
push
add
fcmovnbe
test
stos
xchg
dec
pop
in
lock
fucomp
xchg
pop
sub
imul
mov
sub
push
js
ret
nopl
fistpl
inc
in
mov
mov
jle
cli
xchg
mov
mulb
ret
xchg
cmp
pop
sbb
fincstp
roll
idivb
mov
mov
mov
cmp
xchg
outsl
dec
out
fsubr
fidivrs
mov
and
mov
cmp
sti
insl
mov
xchg
and
popf
lods
stos
inc
sub
bound
or
and
lret
decb
fmull
jnp
in
adc
pop
pop
xchg
xor
int
loope
or
mov
daa
movsb
fadds
es
in
push
cmp
pushf
and
mov
push
popf
mov
sbb
xchg
add
popa
push
dec
addr16
xchg
mov
lods
jno
push
mov
push
or
out
xchg
or
mov
nop
add
pop
clc
sub
fldl
test
push
fists
jle
jp
push
pop
mov
or
test
sarb
and
jno
arpl
xchg
lods
push
aas
leave
ss
jne
scas
or
mov
test
fstpt
mov
out
push
jle
cmpsl
inc
cmp
or
sbb
sub
mov
cld
xor
dec
dec
fsubs
xor
rolb
andl
ret
and
and
jbe
adc
fiadds
xor
inc
pop
sahf
xchg
in
fs
dec
movsl
lock
dec
mov
inc
fcoml
jmp
cld
insb
rcll
icebp
add
sub
shlb
sbb
fs
popa
addr16
push
leave
ret
aas
sbb
dec
mov
ret
dec
aas
sbb
cld
pushf
out
xchg
inc
xchg
push
sbb
mov
mov
jbe
mov
data16
int
cld
idivb
mov
sbb
or
movsb
jp
sub
or
sbb
scas
dec
lret
xchg
lcall
std
adc
pop
or
jnp
mov
xchg
xchg
jne
stos
and
stos
mov
adc
es
xchg
adc
movsb
imul
pop
in
mov
popf
jge
inc
sbb
shl
push
mov
movsb
pop
jle
pushf
aas
pop
mov
aaa
shll
movsb
mov
or
outsl
mov
pop
dec
sub
lds
inc
mov
push
add
test
push
inc
test
or
les
xchg
loopne
add
movb
push
add
mov
mov
sbb
inc
add
mov
shlb
push
add
fistl
pushf
imul
push
pop
jg
jb
push
jmp
fwait
lret
push
inc
dec
xor
mov
jne
push
shl
mov
adc
jno
shll
aaa
enter
xchg
cmp
pusha
jb
jne
dec
push
pushf
cmc
scas
iret
test
aad
xor
push
ljmp
inc
mov
mov
fyl2x
adc
sbb
enter
roll
sub
mov
adcb
xor
clc
aam
dec
rcl
cmpsb
aaa
mov
lods
popf
ds
arpl
aam
fcmovnb
and
or
daa
movsb
adc
pop
stos
jbe
enter
xor
idivb
sub
scas
push
inc
xor
push
add
aam
dec
scas
mov
push
sahf
jnp
rorb
sbb
popa
rcrl
cs
outsl
lahf
sbb
icebp
and
push
loope
stc
sub
repz
fcomps
pusha
fsubs
sarb
test
mov
sub
sbb
ret
jnp
add
cmp
das
lcall
subb
fwait
inc
lods
cmp
inc
scas
cmpl
ret
xor
outsl
int
pop
in
add
add
cltd
push
cmc
or
sbb
rcrb
and
int
or
lret
dec
ja
pop
addb
or
and
inc
imul
mov
fcomps
ja
outsl
pop
dec
movsl
repz
push
fldz
stos
daa
cmp
cs
lcall
imul
mov
jp
pop
mov
shll
pop
push
inc
sub
sbb
clc
sbb
add
pop
ja
fimuls
hlt
es
mov
mov
inc
inc
lcall
dec
cmc
out
pop
movl
leave
shl
pop
mov
push
cli
ret
stc
pop
sub
mov
xchg
and
xor
adc
jns
scas
xchg
in
sahf
inc
cwtl
test
jge
invlpg
cmpsl
mov
stos
lock
jle
leave
xlat
pop
das
jmp
dec
nop
or
push
dec
mov
scas
or
test
sbb
adcb
push
lret
mov
in
notl
enter
sub
je
inc
into
lret
xor
lods
pop
pop
rcll
push
dec
dec
int3
mov
cwtl
cli
cltd
mov
lock
mov
nop
fidivs
mov
and
outsl
popa
pop
ficomps
pushf
test
inc
jne
jl
cmp
mov
fildl
leave
sbb
and
pushfw
ljmp
cmp
add
or
pop
adc
xor
pop
loopne
add
fsubr
jo
inc
cmpsb
and
in
dec
cmp
add
leave
cld
xchg
outsl
dec
mov
dec
jae
jbe
cmp
dec
jno
iret
orb
call
jns
sub
insl
lret
fldenv
cli
dec
popl
push
mov
dec
pop
fs
mov
jle
push
pop
pop
lahf
gs
xor
in
mov
jmp
cmp
stos
inc
xchg
sbbb
mov
lods
daa
adc
xor
aaa
push
std
outsb
and
or
mov
aas
jmp
add
out
inc
sbb
cmp
ss
addr16
sbb
pop
and
imul
mov
and
jp
out
adc
stos
stos
daa
shlb
jecxz
fdivl
lahf
dec
cmp
outsb
das
aas
in
dec
xchg
fdivl
repnz
push
jecxz
mov
dec
enter
adc
jo
xchg
mov
jbe
hlt
clc
mov
pop
ss
xchg
jmp
mov
pushf
mov
inc
std
or
ss
insb
jl
adc
push
jnp
cwtl
stc
roll
pop
mov
mov
cmc
xchg
ds
mov
jmp
push
sub
mov
inc
mov
xor
loopne
jno
adc
testb
pop
mov
cli
nop
pop
es
cmp
jmp
dec
nop
inc
inc
push
fmul
sbb
iret
pop
imulb
rolb
dec
push
push
jne
cmp
out
mov
stc
mov
push
mov
outsl
test
aad
int3
pop
sbb
leave
das
jo
add
hlt
cmp
pusha
in
in
or
adc
mov
inc
mov
add
jge
je
mov
pop
pop
jg
es
dec
stos
pop
jl
call
outsl
cmpl
call
mov
imul
sub
mov
sub
push
push
aam
and
lods
push
xchg
mov
repz
jbe
aad
dec
pop
jae
imul
lcall
dec
repnz
lods
test
es
xchg
dec
xchg
push
aad
in
stos
sbb
cmp
int3
and
mov
xor
lods
leave
in
mov
push
ds
lods
push
jmp
sbb
or
push
push
and
cmp
xchg
pop
aam
dec
mov
dec
cmpsl
or
out
pop
addr16
test
movsb
cs
mov
iret
and
pop
jle
dec
or
aad
push
insl
xor
sub
and
push
pop
pop
jecxz
pop
xchg
xor
mov
dec
mov
les
cmpsb
jo
loopne
andl
out
mov
mov
add
fidivrl
cmp
jo
adc
and
add
dec
movsl
jecxz
push
jl
in
xchg
fistps
adc
out
push
aad
mov
mov
mov
stos
mov
in
aas
rcrl
outsl
nop
push
xchg
cmp
sub
ss
cmp
inc
loope
les
aaa
dec
filds
mov
sahf
cmpsb
jg
aaa
xchg
enter
in
push
pop
loope
andb
cwtl
fwait
push
push
mov
in
fcomi
sbb
sbb
dec
iret
imul
mov
fldt
aaa
cmp
ds
xor
rcl
push
jge
stc
jae
js
mov
imul
rcll
push
push
mov
xlat
call
push
stos
clc
push
sub
sbbl
or
adc
cmp
faddl
push
xor
stos
cld
test
xor
stos
pusha
test
xchg
xchg
xchg
aaa
adc
lock
leave
mov
ds
ror
mov
sti
std
dec
ljmp
mov
rclb
mov
cwtl
out
jle
clc
dec
or
loop
inc
and
mov
xlat
add
mov
xor
sbb
stos
out
cmpsb
enter
nop
aam
jecxz
sahf
jnp
hlt
inc
lcall
pop
ficoml
pop
cmp
pop
in
mov
test
sub
arpl
pop
cmp
add
cmp
cmc
lret
dec
push
in
les
dec
mov
adc
das
jmp
mov
adc
shll
call
xor
and
push
inc
sbb
stos
movsl
sbbl
shrl
in
adc
repnz
adc
ret
mov
outsl
outsl
mov
mov
in
daa
jecxz
jno
pop
push
cmp
les
rcrl
mov
lods
push
xchg
loop
or
dec
dec
and
add
and
push
pop
ds
sbb
out
adc
xor
jo,pt
insl
mov
jecxz
jo
or
adc
dec
ret
xor
mov
add
sbb
xchg
fwait
inc
sbb
stc
push
xchg
mov
jge
adc
out
lret
lock
movsb
ljmp
push
jns
dec
lahf
add
mov
push
test
add
cs
ds
and
je
sub
test
or
movsl
and
jno
in
insb
addl
xor
pop
lock
inc
jb
pop
mov
sbb
enter
pushf
adc
push
dec
lea
or
es
lret
in
sbb
dec
mov
push
jge
dec
std
pop
add
movsb
xchg
int
mov
mov
sub
xor
lock
xor
push
adc
ljmp
push
lea
dec
push
pop
xchg
inc
mov
sbb
sbb
xlat
adc
or
icebp
mov
fstps
stos
dec
adc
jle
imul
std
xchg
arpl
dec
pop
bound
ficoml
jp
mov
dec
adc
push
adc
jbe,pt
lret
aad
and
push
xor
loopne
xor
call
xorl
pop
nop
jb
or
xchg
lcall
add
mov
ret
int
popa
fs
gs
jp
sbb
outsb
andl
repnz
jl
and
lret
inc
or
sbb
fdivs
icebp
dec
outsl
push
pop
xlat
add
jp
pop
pop
daa
push
add
insb
adc
pushl
stos
pushf
cmp
jbe
xchg
std
enter
hlt
out
sbbb
pop
jb
sub
test
adc
push
out
aad
orl
push
inc
cmpsb
enter
lret
clc
mov
imul
and
shr
out
hlt
imul
mov
lcall
test
push
push
les
dec
fdivrl
lea
xchg
loopne
cltd
std
scas
addr16
adc
stos
mov
scas
aaa
dec
mov
sbb
out
sbb
sbb
nop
pop
add
sub
inc
push
adc
or
andb
adc
rorl
dec
adc
aad
nop
popf
data16
sbbl
lods
jae
inc
call
nop
push
leave
std
push
stc
lds
adc
jmp
das
xor
inc
stc
push
mov
jg
add
add
pop
mov
mov
jae
mov
xlat
push
daa
mov
inc
cmp
pop
stos
and
jnp
sarb
mov
aas
mov
int3
insl
int3
mov
push
andl
mov
fimull
andl
mov
stos
sahf
stc
fs
std
dec
pushf
add
das
in
out
mov
inc
cltd
cs
testl
jecxz
movb
push
cmpsb
imul
xchg
fcmovne
or
fldt
adc
repz
mov
push
inc
in
movsb
push
lea
daa
mov
test
sub
cli
push
scas
pop
fdivrp
inc
add
mov
lret
mov
imul
dec
sub
mov
add
or
add
inc
mov
repz
cmpsl
jns
push
in
mov
cmp
pop
mov
sbbl
std
call
push
xchg
cmp
pop
jmp
pusha
mov
aam
jecxz
pop
int3
fwait
insb
fsubrl
clc
iret
jae
mov
mov
leave
mov
push
or
inc
ljmp
repnz
cwtl
ss
pop
jbe
sub
cmc
xor
cs
mov
jno
js
shlb
cwtl
dec
out
xchg
sbb
sub
movsb
int
pop
and
daa
or
test
xor
in
push
popa
xor
sahf
mov
mov
jp
arpl
mov
pop
dec
jg
dec
mov
addb
scas
adc
lcall
pop
popa
insl
sub
ror
or
jne
push
movsl
clc
sbb
xor
lods
push
xor
cmp
lret
xlat
jne
xor
mov
mov
fcmovnbe
ret
cmp
ror
test
pop
cmpsl
pop
cmp
ficoml
fisttps
mov
popa
add
imul
xchg
jge
imul
iret
sub
jb
jbe
insb
bound
jno
dec
scas
cmp
jb
outsb
fbstp
je
push
inc
mov
jp
pop
bound
repnz
cmpsl
add
mov
add
aam
xlat
sub
in
jge
xlat
shr
jno
sub
sub
or
test
movsl
xor
mov
into
mul
mov
aaa
mov
imul
imul
data16
xchg
cmp
mov
dec
xchg
jbe
cmp
dec
pushf
movsb
mov
lock
pop
lods
and
jnp
loopne
scas
xor
lock
cli
inc
lds
std
jg
xchg
popf
inc
mov
xlat
int3
push
add
jmp
data16
insb
rcrl
jno
inc
sbb
adcl
xlat
testb
nop
push
and
emms
flds
push
xor
fistpll
jl
sbb
mov
cmp
xchg
mov
push
iret
das
and
clc
insb
test
mov
mov
dec
jns
sbb
push
and
jge
jo
jnp
or
inc
pop
mov
cmc
stos
test
dec
mov
cmpb
xchg
out
mov
mov
xchg
or
mov
inc
movl
jle
push
pop
and
les
test
arpl
outsl
lcall
leave
dec
into
mov
jne
and
cli
add
xor
cltd
add
std
in
je
int3
repnz
pop
add
mov
clc
cmpsb
test
testb
dec
fstpt
mov
jns
daa
xchg
sti
jmp
or
sbb
xchg
notb
iret
in
jge
push
sarb
mov
pop
out
jp
cmp
lock
push
call
mov
stc
pop
call
sub
out
gs
or
lcall
jae
push
leave
sbb
adc
inc
outsl
stc
pop
cmpsl
cmc
in
cmp
cwtl
repnz
mov
call
insl
test
ja
inc
out
test
jge
rcll
enter
lods
push
outsb
fucompp
out
sti
add
cmp
sbb
scas
divl
and
mov
sarl
adc
cli
mov
jp
pop
push
mov
jnp
inc
xchg
mov
movsl
mov
or
adc
stos
loop
cmpsb
mov
xchg
int3
xchg
pop
sti
push
js
ficomps
cmp
lock
adc
sbb
data16
push
imul
mov
push
fdivl
outsl
adc
sub
in
icebp
push
fnsave
xchg
test
jb
sbb
iret
sti
sbb
push
pop
out
imul
scas
push
mov
rcrl
loope
mov
std
loope
insb
mov
ficompl
xchg
pop
inc
ret
cmp
bound
les
cltd
sub
jl
movsl
idivb
hlt
out
push
xchg
lea
and
jae
sarb
sbb
scas
inc
out
fwait
push
pop
xor
movsl
push
sbb
cmp
pop
mov
lock
adc
lods
movsb
es
or
test
es
adc
inc
loope
iret
scas
adc
add
ljmp
fmull
xor
push
and
lahf
or
into
das
repz
mov
aaa
out
mov
outsb
scas
in
add
mov
mov
adc
stos
push
push
in
mov
add
cmpsb
xor
push
iret
and
xchg
mov
ja
or
jns
aad
rol
or
mov
shlb
std
stc
scas
mov
push
sbb
sub
cld
aad
push
add
loopne
xor
nop
mov
insl
iret
xchg
add
lret
nop
xchg
and
dec
sbb
sahf
jo
fwait
sub
mov
das
xchg
jne
jg
or
sbb
enter
sar
pop
jne
sub
rclb
ds
js
sbb
loop
in
dec
andb
orb
xchg
adc
clc
sti
out
push
clc
leave
xchg
fdivp
push
lds
push
mov
into
add
repz
mov
stos
sub
sub
mov
icebp
cwtl
fdivl
jns
cmpsb
mov
or
fwait
pop
xchg
ds
es
ss
dec
ss
pop
jno
int
mov
out
fisubrl
jo
fidivrs
std
int
das
sbbb
push
pop
dec
stos
jle
add
sub
cmp
add
js
pop
fwait
in
repnz
movsl
repnz
pop
inc
std
adc
or
les
lds
repz
out
dec
aaa
rclb
push
adc
xchg
mov
xchg
jne
sbb
jg
inc
in
test
addr16
cmp
xchg
push
adc
fwait
nop
leave
mov
hlt
mov
mov
pop
rcll
incb
outsl
mov
loopne
aas
dec
dec
adc
sub
loope
push
pop
cmpsb
jne
cmpsl
sbb
lods
mov
ss
pop
pop
imul
js
gs
jge
ret
repz
cld
pop
pop
sbb
shlb
xchg
in
mov
fwait
pop
lahf
push
test
insl
lret
cld
sbb
aaa
xchg
jmp
test
or
pop
dec
stos
dec
lcall
inc
xchg
test
pop
lods
pop
mov
js
ret
repz
xor
xchg
xor
shlb
xor
cmp
xor
sbb
pop
dec
leave
imul
mov
fldcw
aas
sbbb
push
push
les
jns
dec
push
imul
sub
jbe
repz
lret
add
dec
mov
cli
loop
aad
lock
inc
leave
repnz
cld
xor
inc
dec
mull
mov
iret
dec
fdivrl
imul
or
sub
sti
cmpsb
jmp
fwait
mov
mov
push
dec
ss
imul
or
sub
sti
cmpsb
jmp
fwait
mov
mov
push
inc
arpl
outsl
push
sbb
jbe
sub
sti
cmpsb
loop
lahf
ret
mov
dec
and
sub
inc
or
mov
jns
sbb
cmpsb
pushf
mov
ret
sbb
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ror
fsub
call
idiv
aad
mov
pop
pusha
push
adc
and
xor
ror
fsub
call
nop
cwtl
mov
dec
push
pop
pusha
push
adc
and
xor
ror
fsub
call
nop
cwtl
mov
dec
jae
adc
adc
dec
arpl
dec
mov
mov
loopne
cltd
clc
dec
and
xor
mov
fwait
or
mov
das
push
pop
mov
jge
mov
mov
cmp
cmpsl
sahf
jge
sbb
or
shll
popa
imul
cmpb
push
out
in
push
inc
aad
xor
sub
sbb
xor
and
imull
stc
ret
mov
frstor
push
or
out
and
mov
or
adc
cwtl
inc
mov
adc
xchg
sti
jl
pop
nop
sbb
sub
cld
dec
sub
clc
stos
mov
push
add
mov
or
or
out
xor
loopne
lock
orb
mov
pusha
push
adc
and
xor
int3
mov
cmpsb
call
push
iret
out
xor
xor
xor
or
dec
push
jge
push
inc
jbe
lods
movsb
mov
in
fcmovnbe
in
cmc
fdivl
add
and
data16
dec
jle
push
cmpsl
mov
nop
cmpsb
lcall
mov
dec
push
pop
pusha
push
adc
and
xor
ror
fsub
call
nop
cwtl
mov
dec
push
pop
pusha
push
adc
and
xor
ror
mov
add
xchg
jmp
xchg
add
icebp
cs
out
mov
pop
inc
fcompl
dec
sbb
mov
sti
out
int3
xchg
outsb
aas
orl
loope
mov
jo
aad
mov
cwtl
es
mov
call
lds
lcall
mov
jmp
xorl
stos
in
mov
inc
fsubr
fpatan
or
add
dec
lret
mov
insl
and
jo
mov
xchg
dec
jle
jp
rol
rcl
fidivs
push
in
sbb
xor
je
mov
or
sub
rcll
xchg
inc
adc
mov
jp
xor
out
hlt
out
and
rclb
push
hlt
in
xchg
sti
fldcw
pushl
cmp
push
push
sub
leave
mov
cmp
mov
imul
outsb
xor
loop
mov
mov
es
and
enter
fs
push
iret
xor
cmp
adc
jecxz
sti
notl
adc
repz
fwait
shrb
cmp
iret
scas
add
dec
xor
pop
xchg
mov
adc
and
xchg
cmp
fimuls
pop
adc
cmp
movsb
push
lds
mov
inc
test
xor
sub
shrb
clc
pop
mov
push
mov
xlat
xor
test
je
loope
jae
adc
jo
ror
cmpb
sub
int3
pop
mov
or
pop
fs
rcrl
enter
xor
jmp
mov
lods
decl
cmpsb
fwait
iret
adc
inc
icebp
mov
pop
ret
xorb
popa
test
ds
xor
cmp
mov
sub
movsl
sbbl
test
leave
fcom
sbb
rolb
push
add
repz
mov
sub
stos
and
cmpb
leave
jo
flds
loop
std
test
les
out
or
add
add
xor
push
adc
clc
lds
inc
ljmp
test
inc
adc
popa
leave
xchg
or
cmp
sub
adc
repz
insb
jmp
and
cmp
rolb
or
cmp
shll
loope
popa
out
push
das
popf
out
adc
cld
push
or
mov
jb
leave
mov
std
xor
mov
xor
xchg
sbb
push
dec
lret
enter
push
adc
mov
cmp
inc
lret
jge
mov
jbe
sub
inc
lahf
xor
fs
add
les
push
test
push
lock
fwait
xlat
xchg
ret
xor
ds
mov
jge
cld
in
add
add
xchg
cmp
sbb
inc
mov
pop
ss
divl
dec
stc
imul
out
jnp
shr
out
xchg
mov
decl
jge
pop
gs
test
lock
push
dec
add
sbb
loop
hlt
dec
ja
js
mov
cmp
jp
cld
push
xor
jl
stos
fs
daa
and
sbb
jno
icebp
adc
ret
bound
adc
test
movsb
jae
mov
xchg
addr16
mov
mov
xor
jl
add
es
in
mov
mov
mov
mov
or
pop
outsl
pop
push
xorb
scas
add
sbb
push
adc
mov
mov
xor
and
out
adc
mov
sub
outsb
jle
int
int3
iret
test
add
cltd
xor
sbb
sbb
outsl
adc
les
pop
es
pop
testb
jne
outsb
mov
push
jae
jle
mov
pop
leave
add
lea
movsb
push
std
std
scas
sub
rcrb
test
fisubl
cmp
das
enter
decb
arpl
xchg
jmp
jecxz
inc
jns
cmp
mov
fnstcw
js
ja
jno
sub
into
xor
adc
fwait
shll
adc
inc
sbb
inc
in
repz
jle
mov
jno
xchg
or
push
test
aam
jmp
test
mov
pop
out
iret
xor
aad
lahf
add
fisubrl
mov
jno
aaa
cmc
pop
mov
roll
mov
cwtl
xchg
xor
mov
out
mov
xchg
or
outsb
mov
not
loope
jmp
xchg
popa
es
xor
fsts
lea
arpl
popa
pop
test
fistl
popa
add
loopne
xor
mov
test
mov
sub
sbb
call
ss
lahf
inc
push
inc
pop
dec
and
mov
data16
test
popf
jns
rolb
shrl
sub
in
ss
shrl
jb
sbb
push
data16
dec
iret
and
push
xchg
repz
mov
mov
rcrl
movsl
or
ss
pop
test
loope
fsubrs
or
leave
das
bnd
push
pop
ds
gs
mov
fisubs
jp
sbb
jnp
adc
cmp
xchg
adcl
cli
adc
aad
pop
cmp
and
add
dec
pop
mov
push
insb
mov
push
jo
adc
in
mov
and
sbb
dec
hlt
aam
and
movl
cmp
aad
push
sbb
mov
mov
sbb
cmpsb
lods
lcall
pop
mov
mov
popf
fcmovu
clc
outsl
sub
cld
jle
inc
in
push
std
sub
orb
dec
imul
andl
or
flds
jmp
jb
cmp
daa
pcmpeqd
aaa
mov
cmp
sub
sahf
xlat
in
inc
add
pop
inc
bound
mov
popa
leave
cmpsb
aad
out
mov
dec
sbb
lods
nop
negl
cld
loope
inc
in
push
jmp
or
mov
insb
repnz
or
mov
fld
insb
scas
imul
testb
lock
jle
push
pop
xor
mov
shlb
xlat
imul
sbb
int3
xchg
xor
icebp
add
dec
push
lret
jmp
or
and
jbe
rorb
mov
das
test
shrb
xor
adc
test
lret
js
int
out
enter
sbb
inc
lock
pop
in
mov
pushf
shrl
mov
mov
add
or
pop
daa
test
int3
jo
mov
dec
mov
sub
adc
pop
pop
shll
loope
pop
xchg
leave
stc
enter
or
and
or
cwtl
lret
fs
or
push
dec
mov
adc
mov
cmc
sub
mov
add
loope
inc
xchg
into
stc
in
push
call
xchg
dec
mov
dec
cli
lret
movsl
xlat
jmp
inc
dec
sub
sub
fistpll
fsts
cmp
sbb
out
mov
repnz
ds
cs
pusha
repnz
outsl
sub
push
adc
sub
lds
xor
mov
inc
xchg
sbb
jo
loopne
push
dec
test
loop
stos
inc
and
fwait
lret
sbb
cmpsl
out
push
mov
xchg
aam
mov
sbbb
mov
call
jno
and
jge
push
imul
mov
bound
xchg
aad
mov
subl
nop
in
mov
adc
std
insl
mov
xchg
xchg
pop
xor
sub
or
loope
sbb
jge
daa
adc
fs
cli
lods
xor
xchg
std
loop
xchg
mov
pop
dec
dec
in
xor
fnstcw
add
jb
xchg
xchg
xchg
mov
in
xchg
in
lods
xor
outsl
mov
mov
push
aad
imull
mov
or
movsl
pop
pusha
cs
jb
sahf
sbb
fwait
jno
lods
xlat
in
test
dec
cwtl
sbb
sbb
lock
arpl
movsl
je
dec
test
out
adc
into
cmp
mov
nop
pushf
push
push
insl
xchg
mov
les
jp
ret
lea
mov
push
daa
popa
mov
mov
push
pop
xor
inc
popa
sub
add
arpl
idivl
lods
jb
xchg
sub
or
sub
adc
divb
loopne
test
jbe
lock
adc
stos
scas
xchg
test
mov
mov
cld
and
movsb
jmp
add
cmpsl
cmpsb
mov
cmp
gs
add
out
lods
fsubl
inc
lret
mov
rorl
mov
adc
pop
in
out
or
pop
in
add
inc
xchg
xchg
jg
fcmove
icebp
pop
mov
mov
adcl
jae
leave
mov
inc
and
adc
int3
testl
xchg
mov
inc
rcl
lcall
jl
clc
jp
sbb
pop
flds
mov
mov
sti
cmp
into
aaa
jmp
xlat
mov
xchg
mov
movsb
in
aaa
mov
xor
sbb
fsts
cmp
sahf
mov
cmpsb
push
adcl
inc
jl
mov
lret
xor
or
popf
push
cmp
cs
jle
push
cmp
cmpsl
daa
cmpsl
xor
mov
scas
stos
and
cmp
xor
xchg
rcl
aaa
shrb
or
cld
fcompl
lods
mov
rcr
mov
mov
mov
lret
add
cmp
mov
cmp
lcall
lea
fdivrp
sbb
add
mov
xchg
jge
mov
push
fisttpll
cs
push
pop
xchg
stos
in
lahf
cmp
fcomps
adc
ds
outsb
inc
les
lret
mov
and
mov
cmpsb
xor
ds
and
aas
repz
gs
stos
xchg
pop
xchg
pusha
inc
jp
popa
je
movsb
adc
cmpsb
roll
movsb
outsl
sbb
push
inc
xchg
popa
xor
inc
ret
rcr
rcr
jbe
test
pop
cs
inc
sbb
roll
cmp
int3
outsl
pop
xor
test
int3
cmp
test
xor
sbb
fs
repnz
gs
stc
aam
loop
cmp
cmp
mov
gs
adc
rolb
push
test
xchg
idivb
xchg
xor
jg
fists
cmp
scas
shlb
mov
inc
xchg
rolb
data16
in
add
add
lcall
ja
ja
clc
jo
cltd
add
repz
outsl
fnsave
xchg
aas
pop
imul
stos
lret
lahf
repz
cmp
fmuls
mov
xchg
mov
icebp
fwait
dec
stos
pop
and
push
aas
pop
lahf
das
test
in
jbe
mov
in
es
xchg
imul
cmp
outsb
in
xchg
out
xor
rcrl
sbb
xchg
jno
ljmp
jo
adc
pop
movsl
leave
mov
or
cmp
imul
loopne
inc
pop
int3
lock
movb
mov
inc
xor
jecxz
lods
sbb
jo
imul
lds
sub
push
lock
adc
xor
xchg
mov
gs
adc
leave
or
mov
sub
mov
dec
pop
push
mov
pop
popa
mov
movsl
jp
mov
iret
cmpsb
ret
jb
cwtl
movsl
lret
or
xor
in
insl
push
push
push
out
pop
dec
shrl
out
cmp
jmp
test
push
jmp
cmp
cmp
xchg
pop
or
xor
dec
js
push
aaa
shl
xlat
xchg
loop
fcompl
cld
inc
push
in
jge
mov
add
sub
sub
inc
lock
int3
adc
cmp
inc
mov
push
xchg
and
int3
cmp
mov
xor
ss
inc
mov
xor
jo
adc
mov
inc
inc
pop
mov
cmpsl
push
sub
or
dec
ds
int3
push
or
sbb
fisttps
inc
sbb
and
xchg
les
sub
dec
fdiv
mov
xor
das
dec
shl
roll
inc
les
call
pop
adc
repnz
cmpsl
loope
cmc
pusha
stc
call
call
rcrb
and
pop
test
fildll
leave
jge
xorb
insb
stc
ljmp
adc
mov
or
cmp
loop
out
filds
je
inc
aaa
jb
ds
std
in
add
push
arpl
sub
fs
cmp
lahf
or
cs
xlat
pushf
mov
xchg
movsb
aam
push
iret
xor
inc
pop
jo
cmp
pusha
sub
pop
rcr
into
mov
mov
xor
dec
scas
sbb
sbb
aad
ret
iret
sbbl
jl
jge
sub
push
xchg
repz
iret
pop
mov
push
jp
ja
loope
rcrb
jge
push
repnz
fdiv
and
push
testb
add
test
sub
dec
push
out
dec
fnsave
sti
ljmp
sub
push
xor
mov
dec
test
inc
jge
out
or
push
jmp
int
insb
mov
jbe
mov
test
testb
mov
push
cmc
call
sub
dec
mov
es
xor
cmc
inc
ret
and
pop
ret
or
mov
xchg
vphaddbq
cmpsl
push
in
addr16
push
cmc
dec
push
pusha
dec
add
out
leave
jo
lods
inc
mov
and
dec
jno
inc
int3
inc
and
inc
pop
nop
fiadds
imul
add
or
idivl
das
or
cld
stc
add
mov
add
mov
nop
cmpsb
ja
pushf
mov
sub
int3
cmc
out
push
sub
stc
std
mov
cmpsl
mov
pop
cld
dec
lcall
inc
jb
ljmp
xor
mov
jecxz
mov
adc
mov
aad
sub
jb
sbb
pop
cmc
imul
out
adc
daa
andl
mov
push
subb
inc
je
dec
lret
inc
cmp
inc
xchg
add
aad
lcall
lret
push
pcmpgtd
out
jge
sub
adc
jne
out
inc
mov
stos
gs
lods
sbb
inc
call
sbb
or
dec
out
mov
adcb
jl
dec
imul
in
adc
std
push
adc
sub
movnti
sub
repnz
idiv
icebp
jns
mov
mov
jge
int
push
and
xchg
adc
pop
mov
pop
xchg
cmpsl
push
mov
jno
mov
sbb
cld
sbb
or
cmp
cwtl
xor
movsb
push
xor
jl
xlat
in
mov
ret
dec
push
cltd
adc
inc
fmull
sbb
flds
cmpsb
mov
in
push
cmp
push
jo
cwtl
movsl
mov
mov
xchg
fisubrl
jg
jg
dec
cli
addb
shrb
nop
in
pop
dec
clc
jae
jno
fsub
sbb
int
inc
and
hlt
mov
inc
mov
cmp
stos
mov
movsl
inc
fs
cmp
xchg
lret
jb
ficompl
inc
push
cmc
movsb
into
into
pop
push
es
mov
in
push
sahf
fwait
push
or
mov
cmp
inc
loope
cmp
push
mov
inc
xor
loopne
or
test
push
jne
push
sub
enter
mov
pop
test
sub
inc
scas
cmp
lahf
cmc
push
fdivrl
sub
decb
aad
mov
mov
scas
out
cld
and
lret
mov
loop
mov
ret
fmul
mov
push
popa
xchg
lea
and
push
mov
and
mov
push
xchg
cltd
cbtw
gs
cmp
frstor
xchg
xor
push
movsb
adc
push
es
mov
leave
fisubrl
cld
pop
mov
es
mov
push
mov
rcrb
shrl
jae
fwait
inc
push
loope
fstps
lcall
cmpsb
inc
mov
add
or
jge
mov
pushf
lahf
loope
xchg
stos
push
fmull
push
leave
fisubs
mov
divb
out
mov
and
add
shll
and
in
scas
or
mov
movsl
inc
mov
outsb
aas
xor
insb
cmpsl
sbb
test
push
and
ret
mov
add
stos
lret
test
dec
sub
negl
scas
adc
dec
fmuls
orb
xor
pusha
loope
insl
fcompl
mulb
sbb
sub
into
push
xlat
jp
std
rdtsc
push
mov
das
std
adc
mov
popf
adc
jb
inc
mov
xchg
mov
push
cmp
xor
stos
in
adc
arpl
fnstcw
push
xchg
or
jnp
sbb
lods
mov
jnp
pop
in
pop
adc
fs
test
test
test
data16
dec
dec
cmp
rorb
sti
addr16
rorl
cmc
xchg
icebp
push
pop
xchg
loope
bound
test
rorb
mov
roll
lret
aaa
loopne
push
icebp
dec
mov
lods
int3
fisubrl
mov
push
push
fmuls
test
movsl
jns
jae
cmp
arpl
clc
add
pop
std
movsb
stos
fldcw
scas
test
ficompl
xchg
pop
xchg
sub
mov
mov
outsl
adc
insb
mov
xor
cmp
int3
or
adc
fistpl
sbb
aam
mov
pop
dec
mov
mov
mov
fnstsw
in
sub
or
ret
dec
adcb
push
xchg
mov
lea
dec
sbb
jnp
jp
stc
xor
es
jae
and
sub
cmp
jmp
cld
sbb
cli
mov
js
mov
mov
ud0
pop
ljmp
mov
xchg
mov
pusha
xor
sub
mov
js
scas
inc
test
mov
mov
xchg
stc
sub
jnp
xor
jp
fadd
pop
fs
cmc
xor
adc
pop
in
push
fadds
bound
jecxz
mov
dec
dec
inc
or
xor
and
scas
pop
aam
pop
pop
dec
xchg
xchg
out
iret
das
rol
add
ljmp
add
frstor
or
stos
pop
dec
dec
movsb
shr
dec
sbb
and
add
mov
aas
mov
mov
sub
inc
fldenv
cmp
pop
ret
xchg
lcall
jbe
jle
and
popl
popa
xchg
pusha
jg
dec
les
push
mov
loopne
lock
hlt
cmp
rorb
jmp
ss
mov
ja
mov
jnp
pop
repz
lret
mov
mov
adcb
adc
push
test
add
aas
icebp
stmxcsr
jecxz
imul
and
pop
stos
push
adc
push
mov
popa
pop
cld
enter
dec
mov
aaa
cmpb
int3
xchg
push
adcl
xor
movsb
mov
adc
xor
in
in
cmp
ljmp
std
iret
sub
jg
inc
mov
pop
xor
sbb
pop
pop
mov
fst
cmp
adc
fwait
jle
pushf
sbb
inc
aaa
out
add
mull
clc
sarl
jle
gs
inc
push
outsl
cltd
pushf
sub
mov
jnp
mov
jecxz
lods
dec
imul
shrb
pop
jb
xchg
mov
adc
sub
push
out
sbb
sbb
mov
int3
adc
aaa
add
mov
and
pushf
jae
cpuid
pinsrw
cmpsb
shll
and
cmpsl
dec
outsb
jb
sbbb
in
adc
jno
mov
stos
pop
daa
icebp
push
in
add
jge
subl
push
and
sbb
and
aad
aas
xchg
and
xchg
mov
dec
jge
dec
sti
das
int
nop
push
or
pop
pop
aaa
lds
dec
sub
lcall
test
mov
adc
bnd
test
adc
mov
lret
or
cmp
out
dec
loop
scas
or
xchg
out
movsl
aaa
ljmp
sbb
cmpsl
mov
out
lods
ds
dec
and
es
imul
xchg
dec
in
xchg
loopne
sbb
push
fs
pop
or
xor
push
and
xchg
aaa
and
jnp
hlt
out
out
adc
pop
arpl
in
test
sbb
xchg
mov
jmp
mov
mov
inc
pop
leave
push
je
fcomps
rorb
cmpsl
dec
jns
outsl
fwait
movb
sbb
aad
decb
dec
pusha
pop
out
roll
cltd
inc
lret
cmc
arpl
dec
test
outsb
mov
cmpsl
lret
and
xlat
outsl
xchg
cmc
lret
dec
or
inc
sbb
xchg
into
mov
in
and
push
mov
mov
aas
ret
rol
add
or
jb
scas
xchg
push
addr16
xchg
jbe
testl
rorl
dec
ficompl
mull
aad
notb
data16
mov
jne
icebp
adc
dec
sbb
arpl
nop
ljmp
lock
pop
loope
add
lahf
cmpsb
cmp
sub
jb
sub
jle
mov
push
popf
xor
insb
imul
jl
mov
stos
xor
cmpsb
xor
in
popf
pop
push
push
arpl
shl
in
jbe
push
inc
mov
ja
imul
addr16
mov
sbb
add
mov
loope
insb
out
sbb
mov
popf
sub
jo
and
pop
jle
repnz
adc
sub
push
push
ffree
pusha
sub
xchg
cmp
sub
dec
xchg
decb
dec
adc
iret
lret
add
sar
ss
mov
sbb
fbld
push
mov
lea
pushl
daa
xchg
xchg
xor
in
pushf
daa
out
fisubs
stc
dec
pop
xchg
inc
push
je
movsl
and
in
mov
iret
xor
cwtl
lret
pop
push
cld
aad
and
leave
mov
out
lods
lds
pop
mov
mov
flds
add
xchg
divl
rcl
hlt
mov
out
mov
enter
sub
mov
pop
out
mov
test
popf
jns
repz
pop
stos
push
testl
jp
cmpsb
cltd
adc
xchg
lahf
sub
mov
arpl
pop
and
inc
call
aas
add
les
cwtl
push
je
mov
call
bound
ja
sbbl
nop
cwtl
mov
dec
push
pop
pusha
push
adc
and
xor
ror
fsub
call
nop
cwtl
mov
dec
push
pop
pusha
push
adc
and
xor
ror
fsub
call
xchg
cwtl
mov
dec
push
pop
pusha
push
adc
and
xor
ror
fsub
call
nop
cwtl
and
scas
repnz
emms
sbbb
int3
int3
int3
int3
int3
cwtl
push
mov
test
adc
adc
and
aam
les
hlt
sub
pop
xchg
dec
add
push
inc
mov
adc
add
xor
and
aam
movsb
cmp
sub
cwtl
xchg
dec
test
push
inc
mov
adc
add
xor
and
jl
les
in
shll
jmp
movb
push
in
sbb
roll
repz
adc
jns
int3
mov
jmp
movaps
in
push
fwait
daa
xchg
enter
adc
cmp
cmc
xlat
imul
or
push
mov
cltd
mov
enter
cmp
xor
sbb
xchg
xor
sub
sarb
fldl
jge
mov
decb
jnp
dec
pop
sub
push
fwait
adcl
pop
xchg
mov
test
sub
ja
jnp
and
jne
call
in
in
add
movsl
push
push
mov
test
fcoms
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
inc
rcrl
mov
je
mov
mov
pushf
push
mov
sbb
in
inc
fnsave
fcomps
addb
jge
pop
mov
xchg
sub
adc
sbb
pop
xlat
sbb
add
call
les
hlt
sub
pop
xchg
dec
test
push
inc
mov
adc
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
or
fsubrs
cmpsb
mov
shll
pop
push
aam
add
aad
dec
or
fiadds
test
or
imul
pop
xor
mov
xchg
dec
push
mov
out
into
leave
xchg
icebp
ja
mov
loope
push
adc
bound
sub
xor
scas
leave
xor
sbb
ret
sbb
inc
mov
mov
xchg
movaps
imul
and
mov
add
add
add
inc
fildll
xchg
ja
outsl
and
inc
pop
pop
inc
push
sbb
push
add
loop
test
out
std
cmp
mov
pop
mov
push
out
adc
dec
mov
sub
sub
sub
lods
or
cmc
dec
insl
repnz
mov
stos
ja
cmp
pop
xor
or
cwtl
mov
add
mov
out
mov
in
js
mov
roll
dec
adc
mov
mov
adc
jbe
lods
mov
js
pusha
mov
lcall
jl
mov
or
mov
loopne
repnz
dec
out
test
lcall
push
add
push
push
mov
and
and
mov
rcrb
inc
dec
dec
or
dec
sahf
mov
out
jne
ret
xor
cltd
xchg
mov
xchg
dec
sbb
mov
jo
orl
stos
lret
inc
inc
fists
or
inc
pop
pop
in
or
pop
dec
xchg
sub
repnz
pop
out
add
outsb
jne
test
daa
xor
jb
or
lea
or
pop
dec
fwait
xor
test
xchg
mov
push
insb
lcall
icebp
cmpsl
xchg
in
sbb
adc
xchg
sbb
sti
sti
nop
mov
sub
aam
dec
or
mov
lods
push
xlat
sub
cmp
mov
xchg
enter
dec
pop
orl
daa
sub
test
out
inc
jp
push
jle
mov
xor
mov
rolb
mov
ret
push
cmp
mov
test
dec
popf
test
mov
inc
adc
pop
das
pop
push
sbbl
adc
sbbl
fsubs
out
imul
cmc
mov
add
and
push
add
jns
inc
ret
es
add
scas
jo
adc
mov
pop
xor
xorb
jecxz
inc
sbb
mov
mov
xchg
mov
dec
mov
mov
lea
rol
js
fistl
sub
and
add
roll
int3
pusha
call
xchg
xchg
inc
or
cmp
mov
adc
ja
lcall
pop
fwait
icebp
sbb
stos
aad
add
or
push
jge
inc
mov
leave
mov
jne
and
lds
xor
mov
js
fstl
xchg
mov
jle
and
icebp
fsubrl
push
xor
push
leave
lock
fneni(8087
mov
in
xchg
jl
mov
pop
fistps
push
xchg
andl
pusha
and
add
gs
jle
repnz
lret
in
push
sub
lods
test
jns
xchg
mov
data16
in
out
nop
inc
in
imul
imul
add
push
cmp
pop
movsl
mov
sarb
or
pop
rep
push
or
and
outsb
xor
dec
daa
into
into
daa
out
xchg
bnd
dec
push
pop
inc
enter
daa
lcall
add
into
jg
push
cmp
ret
data16
xor
ret
push
cmpsl
arpl
mov
shll
lahf
mov
lea
loope
loope
xchg
push
out
rcll
sbb
fsubs
push
mov
mov
test
testl
or
jbe
jb
mov
xchg
and
into
sbbl
insb
stos
and
and
mov
mov
iret
iret
inc
jno
pop
fstpt
aaa
rorl
mov
in
pop
mov
lret
pop
mov
jbe
pop
jae
pusha
cmp
push
mov
push
mov
add
xchg
repz
jg
xor
sahf
das
xchg
push
inc
add
jbe
sbb
lds
pushf
mov
aas
push
push
inc
dec
scas
adc
push
aad
cld
lock
mov
das
daa
and
xchg
mov
imul
sbb
out
and
push
mov
daa
lcall
jnp,pt
xchg
mov
inc
xchg
sub
adc
mov
xchg
cmp
push
pop
ret
pop
push
push
aas
push
rcr
sbb
gs
jmp
or
call
data16
out
rcrl
dec
fwait
aam
ds
insl
pop
out
inc
shll
mov
xchg
or
in
or
negl
xchg
out
adc
fwait
dec
shll
insb
js
or
imul
lret
or
lds
pusha
xor
addr16
arpl
sbb
in
mov
pop
les
mov
mulb
int3
in
adc
fs
imul
xchg
rep
push
mov
sbb
sub
iret
lcall
enter
jecxz
pop
and
ljmp
dec
ret
ret
popa
repz
sub
repnz
mov
fwait
add
fistpl
add
mov
lods
sti
xchg
cmpsb
mov
repnz
sub
mov
push
jp
pop
repz
rcl
xchg
sub
mov
lea
sahf
dec
and
test
movsl
inc
xlat
inc
sbb
and
das
test
in
std
sbb
xor
mov
lea
mov
mov
sti
pop
push
and
push
jbe,pt
push
pop
sub
mov
in
add
call
sbb
pop
pop
adc
fmulp
dec
mov
xchg
cmp
lds
mov
jmp
pop
mov
fnstcw
mov
addb
adc
stc
xlat
or
dec
mov
insl
roll
or
xor
sub
sbb
mov
loopne
add
push
xchg
je
cmc
mov
sti
xchg
aaa
jno
sbb
sbb
xor
xchg
adc
cli
xchg
push
jo
scas
jno
and
jno
aad
popa
sub
ljmp
leave
jnp
lret
xlat
mov
jg
sub
js
into
jae
loopne
sbb
bound
imul
jne
pop
mov
lods
mov
pop
cmpsl
call
ds
sub
inc
push
jns
mov
in
mov
push
sub
pop
in
pop
pop
mov
sub
jns
dec
dec
mov
push
ss
iret
sub
dec
into
mov
cmp
xchg
or
xor
or
jecxz
addl
jle
icebp
add
mov
mov
cmp
mov
xchg
jmp
imul
decl
outsl
insl
stos
jno
cmp
push
test
sub
sarb
sahf
lahf
mov
popf
mov
rol
xor
pop
ja
pop
push
adc
xor
jne
daa
dec
fildll
xor
arpl
xchg
lea
or
xchg
sub
addl
aad
cmp
push
outsb
mov
pop
sbb
jmp
and
jmp
ds
adc
cmpl
out
addr16
and
mov
mov
psrad
and
rcll
scas
lahf
iret
jmp
adc
enter
xchg
cld
jns
mov
sub
and
sahf
sub
mov
jae
fiaddl
loope
ret
dec
js
mov
push
fnstcw
loop
jns
jmp
ds
xchg
inc
xchg
popa
out
rolb
aam
cmpsb
and
in
jl
cmc
data16
xor
shrl
mov
mov
aaa
adc
movsl
inc
sbb
pop
add
mov
test
or
stos
xchg
aaa
xor
pop
loope
and
call
daa
dec
stos
ds
aaa
jno
ja
jle
add
inc
repz
loope
mov
lea
sti
rolb
xor
pop
push
jl
mov
cmp
int3
cmpsb
mov
inc
in
bsr
clc
dec
cmpsl
mov
bnd
addr16
mov
pusha
inc
cmp
bound
ret
dec
adc
add
mov
movsb
sbb
xor
iret
out
sarb
jae
add
jmp
test
idivb
loope
movsb
ret
clc
or
fnstsw
ret
mov
xchg
loope
aad
push
mov
pop
ror
jecxz
push
outsl
add
sbb
jnp
scas
mov
adc
and
jb
aam
cmp
lods
inc
movsb
sbb
test
bound
xor
or
xchg
and
int
scas
data16
jl
adcb
add
insl
fs
aam
jecxz
arpl
adc
adc
cwtl
incl
int
jb
jae
mov
scas
pusha
aad
mov
insl
fcoml
adc
movl
xor
mov
into
sub
data16
or
mov
int3
mov
pushf
xor
pop
pop
add
popa
scas
lret
jmp
in
aas
xchg
loop
ljmp
scas
lods
popa
jl
mov
stos
or
mov
aaa
daa
stc
addl
bound
mov
in
jmp
aad
push
out
pop
pop
xchg
xchg
jmp
jne
cmpsl
aad
jl
fcmove
sub
loopne
inc
mov
pop
imul
pop
push
push
mov
or
cmp
cmc
mov
xlat
stos
xchg
xor
cmp
int
mov
cmpsb
cmpl
sbbl
or
lock
sub
dec
inc
xchg
jne
sbb
push
sub
or
btc
popf
xchg
call
pop
das
xchg
sbb
xchg
pop
dec
and
aam
push
push
mov
jo
cwtl
or
adc
add
pushl
inc
ret
ficoms
ljmp
adc
mov
in
sbb
test
daa
sbb
cmpsl
cmp
lods
fdivl
into
mov
pop
imul
mov
cmp
inc
sub
sbb
mov
mov
xor
movsb
push
adc
inc
push
mov
pop
cli
mov
jbe
out
adc
adc
fcompl
daa
hlt
push
cmpsb
push
xchg
mov
popa
hlt
and
lds
sbbb
mov
out
cmp
cmp
and
mov
mov
mov
es
push
mov
decb
loopne
and
in
stc
imul
and
mov
inc
aaa
pop
dec
or
cli
xor
jns
ret
add
xor
in
bound
mov
js
test
jnp
icebp
sbbl
xor
sarb
add
cmp
je
fiadds
pop
pop
jno
jge
inc
clc
inc
popl
sub
dec
mov
js
rorb
sub
push
std
dec
push
inc
insb
mov
or
inc
fwait
js
lds
cmpsb
aas
or
pop
iret
shll
iret
mov
pop
enter
jne,pt
out
leave
mov
aam
push
pop
xor
lahf
jno
cld
jg
rorb
out
sbb
fldcw
stos
and
push
push
cmp
hlt
pop
into
adc
decb
lret
mov
cli
out
ret
fnstsw
test
cs
xchg
pop
je
mov
dec
icebp
mov
jp
dec
fisttpll
cmp
cmpsb
mov
int
jo
in
mov
mov
and
pop
jge
pusha
jb
inc
repz
or
insb
pop
mov
mov
fwait
insl
pushf
push
pop
dec
xchg
lods
inc
fstpt
test
sub
xor
aad
out
mov
adc
jbe
jmp
fmull
mov
mov
add
aas
pushf
insb
jne
pop
jno
inc
jmp
sbb
cmp
sbb
int3
out
orb
lds
and
add
stos
pop
cmp
mov
cmc
adc
cwtl
ljmp
filds
pop
ljmp
push
clc
out
jge
adc
adc
mov
insb
push
mov
jo
in
lods
jle
adc
loop
push
sub
inc
adc
imul
sbb
cmp
or
and
pushf
xor
and
addr16
add
adc
out
xor
pop
fs
mov
fsubl
add
pop
inc
add
sarb
sub
pop
sti
pop
bound
dec
and
push
int3
jg
in
leave
in
aad
fldl
mov
mov
xchg
loope
mov
pop
mov
inc
imul
ds
rcll
mov
sub
loopne
loope
adc
xchg
lds
shll
imul
hlt
pop
lods
into
pop
jl
lock
cmp
insb
push
pop
push
sub
outsl
in
es
scas
ja
iret
bound
test
sub
mov
lock
add
mov
popa
sti
das
pop
xchg
clc
and
insb
jmp
js
xor
pop
mov
frstor
add
add
dec
cmp
inc
xor
test
enter
sbb
scas
xchg
pop
mov
fwait
stos
test
lods
push
hlt
cmp
not
xchg
mov
fldt
push
pop
cmp
lahf
dec
aas
push
bswap
mov
fadd
sbb
jb
sbb
mov
push
lcall
cmp
call
lea
sbb
or
jmp
std
xchg
sbb
fildll
sub
push
mov
nop
cltd
sbb
addr16
mov
xchg
int3
xor
test
loope
mov
pop
dec
iret
and
pop
xchg
shll
les
ja
mov
or
sub
in
or
out
fcoml
inc
gs
std
dec
or
mov
fnstsw
push
dec
fsubl
mov
enter
cmpsl
sbb
pop
inc
incb
sar
iret
inc
mov
xor
roll
int
or
or
orl
push
aam
add
pop
out
xchg
insl
stc
xchg
lods
mov
shll
xchg
add
push
sbb
and
cmpsb
pop
rcr
in
addb
jmp
int3
mov
out
ror
xchg
ljmp
xor
sahf
mov
mov
mov
jmp
les
sbb
add
or
addl
stc
jb
stos
jb
icebp
mov
mov
xchg
adc
mov
lcall
mov
lret
mov
push
adc
jge
and
pop
fnsetpm(287
jbe
xor
sub
sbb
scas
dec
mov
lods
cmc
jnp
scas
mov
test
call
mov
loop
and
aas
adc
adc
mov
loope
fwait
data16
mov
xchg
pusha
sub
jecxz
cmp
shlb
pusha
in
xorl
mov
xor
mov
mov
test
add
rcr
imulb
and
pop
xor
inc
fsubrl
sahf
fstl
mov
dec
mov
cs
icebp
inc
xor
decb
call
cs
sub
add
aam
aad
push
sbb
or
testl
push
push
jae
in
pusha
pop
mov
stos
clc
lcall
repnz
push
shl
loopne
mov
dec
xchg
cmp
adc
mov
addr16
mov
lahf
cmp
pop
adc
out
rorb
jl
mov
cwtl
and
test
loopne
popa
cmp
cwtl
imulb
push
pop
sub
lds
test
mov
insl
call
dec
or
aaa
xor
xor
cmp
push
add
mov
mov
pushf
icebp
lods
mov
test
ljmp
in
sbb
add
xchg
push
test
inc
cmp
test
ja
mov
xchg
out
and
test
cmp
sub
andl
sti
loopne
cmp
and
out
cmc
and
lret
xchg
in
cmc
daa
shll
outsl
pop
loopne
and
sbb
mov
ret
fdivs
in
lods
adc
pop
arpl
mov
aas
outsl
loope
lcall
clc
jmp
mov
nop
pop
cmpl
fwait
imul
push
call
xor
test
popf
lahf
push
jo
push
divb
mov
rcrl
inc
bound
cli
shll
xor
fnstsw
add
test
fsubrl
clc
int
xchg
mov
ljmp
lods
cmc
insl
js
ret
sti
mov
dec
test
bound
divb
sti
cltd
icebp
inc
popf
add
shrb
mov
xchg
cld
push
mov
jge
cmp
mull
lock
adcl
out
mov
xlat
sbb
mov
aam
fs
mov
in
lea
sbb
dec
loopne
inc
adc
sbb
dec
mov
or
fcomps
inc
cmp
aam
call
or
adc
xchg
repz
inc
into
test
bound
jle
cs
fisubl
ret
xor
cmp
into
jp
pusha
xor
jl
jbe
and
aad
and
push
pop
cmpl
pop
cmp
xor
jo
fisttps
mov
std
dec
dec
jnp
fwait
push
sti
fmuls
push
dec
dec
pop
mov
gs
dec
jb
pop
lahf
xchg
sbb
iret
xchg
or
movsb
cld
sbb
icebp
mov
repnz
enter
lods
aas
call
and
cmp
mov
aas
repnz
cmp
inc
or
iret
cs
jecxz
push
leave
jae
loopne
dec
adc
sbb
xchg
push
and
mov
out
push
mov
mov
movl
or
pop
ljmp
xor
mov
mov
repz
inc
sbb
nop
pop
cld
mov
cmpsb
pop
sub
lahf
ja
inc
icebp
and
mov
and
xorb
push
add
outsb
sti
fiaddl
lds
jge
loopne
test
mov
jae
lds
shrb
push
pop
pop
pop
cmp
adc
mov
push
jecxz
inc
push
inc
pop
fcoml
or
add
add
inc
mov
fs
shlb
insl
jge
shrb
cmpsl
dec
cmp
sahf
je
sub
lahf
ret
or
rcrb
rcrb
mov
jp
pop
outsl
lret
xchg
outsb
cmpsb
sbb
mov
test
scas
test
outsb
stos
adc
xchg
pop
sub
inc
stos
pop
loope
sbb
dec
mov
rclb
stos
sbb
fwait
mov
rcl
xchg
and
push
lock
jg
jl
jmp
pop
pop
outsb
out
flds
test
or
xchg
lea
lods
or
lods
pushl
shl
push
xchg
fsts
mov
outsb
int3
mov
inc
sub
jl
and
mov
and
jno
js
xchg
push
mov
push
gs
adc
imul
adc
loop
adc
dec
test
or
and
lea
or
cltd
inc
dec
push
outsb
xor
jmp
loope
and
jae
adcl
jge
mov
jo
lea
je
and
pop
sub
jge
jnp
fmuls
inc
cmpsl
movsb
sbb
push
call
xchg
in
push
call
stos
test
mov
mov
je
ljmp
mov
cld
lret
and
or
fnstenv
in
cmp
inc
scas
orb
pop
inc
push
cmp
pop
inc
pop
mov
xlat
cmp
sub
xor
andb
pop
out
test
sbb
xor
jg
xchg
icebp
fisttpl
mov
or
sbb
cltd
shrl
fiaddl
mov
mov
inc
sti
jecxz
insb
push
xor
lock
dec
or
mov
adc
mov
retw
fs
and
js
es
xchg
fmuls
xor
xchg
cmp
divb
ja
in
cld
cmpsb
ret
xlat
xchg
out
xchg
push
mov
adc
dec
pop
mov
sbb
ds
sbb
pop
out
push
pop
dec
sub
daa
movb
xor
cli
push
mov
lret
sarb
pushf
cmc
enter
in
mov
daa
or
icebp
inc
cs
imulb
cli
in
dec
sahf
aas
loope,pn
push
scas
xchg
lds
rorb
fs
cmpsl
cwtl
cltd
outsb
sub
mov
jno
mov
stos
gs
mov
adc
pop
sub
mov
scas
lods
jno
mov
mov
xor
pop
adc
repnz
xchg
push
add
test
add
out
sub
sub
or
xchg
xchg
mov
lds
xor
icebp
shl
popf
out
mov
js
outsb
push
in
stos
arpl
push
or
cmp
jne
jg
and
ljmp
mov
popf
pop
scas
bound
xor
xor
push
mov
jno
push
sbb
cmp
andl
dec
xor
push
mov
subl
sub
decb
jnp
xchg
mov
dec
dec
jno
jg
insb
cli
push
dec
out
lret
jmp
mov
push
js
cmp
or
ret
icebp
out
out
pop
fadds
fdivl
dec
jecxz
jmp
mov
xchg
fucom
mov
push
adc
sub
int
xchg
and
js
pop
jae
mov
dec
push
mov
leave
lahf
loopne
stc
push
in
gs
mov
loopne
pop
aas
adc
push
stos
pop
test
imul
push
lahf
jge
jns
dec
aas
in
jmp
adc
sub
rorb
cmp
sahf
ds
arpl
xor
lea
mov
push
push
das
jns
jb
pop
and
fcomi
xchg
mov
aas
jp
and
aad
stos
fstps
inc
xchg
nop
loopne
lahf
outsb
pop
mov
xchg
ljmp
and
mov
inc
or
jg
mov
pop
lods
push
clc
lcall
add
insl
test
cmp
jge
bound
xchg
mov
repnz
outsb
hlt
mov
or
push
jno
test
iret
daa
pop
mov
insl
pop
cmp
jle
dec
bnd
fwait
loope
std
fsubr
mov
loop
fucomi
das
fists
fistpll
xchg
in
fistpll
cmc
daa
pop
sbb
movsl
pop
bound
cmp
sub
sub
jb
bound
and
mov
and
daa
cmp
cmp
out
and
mov
sub
push
ja
nop
outsl
pop
das
or
mov
leave
clc
mov
mov
fcomip
fwait
or
lcall
je
fcoms
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
inc
mov
adc
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
les
hlt
test
pop
adc
test
xor
and
push
or
cmp
sub
pop
xchg
dec
test
push
inc
mov
adc
add
xor
and
aam
outsb
xchg
hlt
sub
or
pop
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
fisttpl
call
inc
cwtl
push
xchg
hlt
test
js
push
cmpsb
cmp
fs
push
call
test
adc
jo
hlt
dec
les
aam
les
or
out
fs
xor
or
sbb
sub
adc
jp
insb
loopne
test
and
scas
bound
sbb
idivl
daa
push
in
pop
dec
or
cmp
sub
xor
xor
js
insl
clc
mov
or
xor
sarl
std
mov
push
cmp
es
popa
lea
push
addr16
sbb
mov
push
jns
popa
insl
pop
push
movsb
lock
adc
add
mov
cld
addr16
dec
inc
out
test
pop
or
cld
loope
cmp
mov
pop
cmp
daa
popa
lds
adc
popa
xor
add
cmpsl
lret
hlt
js
sub
movsl
rolb
fyl2xp1
inc
push
jle
jae
cmpsl
inc
push
popf
clc
imul
mov
sub
cmp
xchg
clc
shr
dec
jl
lock
into
push
test
les
push
cwtl
add
sub
mov
mov
push
inc
out
int3
jge
popa
pop
mov
mov
push
data16
dec
in
xor
popa
icebp
pop
in
pop
dec
jp
push
js
adc
push
cmc
imul
cltd
add
daa
lret
push
mov
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
mov
imull
push
xor
cmp
rcrb
push
shll
test
int3
push
add
pop
mov
clc
inc
or
mov
int
movsl
or
out
inc
cmp
cmp
pop
push
mov
inc
fcompl
cmc
aam
scas
pop
sub
outsb
sub
pusha
cld
dec
push
inc
push
movsb
mov
out
mov
fcmovnb
ss
mov
pusha
xchg
pop
popf
cmp
push
std
push
mov
push
or
ds
push
sub
mov
dec
push
sbb
dec
shld
add
dec
andl
mov
popf
js
jg
jge
or
popf
fdivrs
repnz
dec
in
sbb
int3
dec
mov
ret
mov
push
aaa
mov
clc
mov
mov
and
fcmovb
mov
sub
adc
negb
icebp
jle
movsl
enter
mov
mov
outsl
mov
mov
or
or
int
xchg
and
in
clc
xchg
loop
add
xchg
xor
rcr
mov
loopne
in
daa
xchg
sbb
mov
jge
pop
xchg
outsb
aam
ja
movsl
movl
cs
push
xor
cwtl
mov
sbb
je
or
clc
jp
inc
sahf
jl
aam
xchg
jmp
pop
pushf
roll
fimull
sub
or
sub
out
je
call
scas
bound
and
scas
xchg
test
iret
imul
cs
mov
mov
or
mov
or
and
push
xchg
imul
push
mov
pusha
inc
fdivs
cmc
mov
inc
mov
lahf
add
sbb
mov
cli
out
mov
jge
sbb
pushf
daa
xorl
jle
imul
inc
loope
test
ret
lret
fwait
movsl
push
sbb
inc
push
dec
mov
out
push
in
hlt
xchg
lds
stc
lcall
fwait
cmp
xchg
imul
inc
inc
push
enter
mov
xor
inc
aam
jg
andnps
cmp
cmp
pop
mov
jb
mov
loope
and
scas
int
cwtl
call
lcall
call
cmp
pop
lahf
imul
adc
sub
test
push
jns
jbe
leave
xchg
stc
push
inc
inc
push
insb
push
dec
fdivrl
dec
insb
mov
dec
test
into
jne
cmp
add
popf
fcmovnbe
inc
mov
push
in
sbb
rorb
ret
pushf
push
int3
movsb
imul
out
lea
sbb
shll
or
popa
jp
divl
sub
push
mov
or
and
jns
data16
idivb
jbe
cmpsb
mov
fwait
or
push
dec
xchg
inc
push
js
inc
int
sub
xchg
arpl
push
dec
or
xor
daa
aam
xor
cmpsl
mov
xor
aam
shll
adc
dec
sub
jo
out
pop
adc
push
jne
push
negl
cmp
insb
sub
aas
daa
mov
movsl
movsb
lahf
dec
mov
jge
mov
mov
cltd
push
call
mov
lds
lds
mov
jne
fnstcw
outsl
and
or
shrl
mov
xchg
outsb
jnp
insl
pop
repnz
out
addr16
sbb
out
sbb
sub
call
rcrl
fdivrs
and
mov
adc
repz
cmpsl
fwait
push
ja
shlb
xchg
jbe
xor
dec
into
push
inc
cmpsb
imul
and
addb
push
movsb
inc
mov
popf
pop
int3
add
push
push
pop
sub
add
inc
jbe
pop
xchg
aam
enter
adc
cmpsb
pop
inc
xchg
sub
add
xchg
gs
mov
cmp
in
addr16
mov
mov
mov
sub
out
add
bound
loopne
ret
les
jo
mov
das
add
scas
cmp
mov
push
inc
call
add
into
scas
das
repnz
add
inc
push
mov
mov
pop
aam
popa
push
inc
adc
int3
pop
in
mov
mov
lock
mov
in
add
adc
dec
sbb
pop
and
into
movb
jg
sarl
inc
addb
nop
repz
mov
outsl
je
outsl
xor
out
add
cmp
dec
sbb
sub
push
mov
fwait
fwait
and
lods
ret
xchg
int3
pop
pop
es
add
data16
cmp
out
lahf
cmp
pusha
je
pop
loopne
sbb
into
sub
jbe
lea
mov
mov
cmp
inc
xchg
pusha
push
imul
cmpsl
es
popf
mov
jp
xchg
or
mov
push
cmp
scas
inc
xchg
cmp
xchg
hlt
or
ds
add
cwtl
xchg
ss
jne
shll
cld
negl
mov
push
mov
out
test
subl
orb
mov
aad
push
filds
sbb
ret
test
lock
mov
sbb
mov
sahf
ds
mov
dec
gs
test
mov
add
repnz
push
data16
inc
push
or
test
sbb
sbb
daa
pop
sbb
rorl
mov
jmp
lea
sbb
call
push
movsl
mov
jmp
icebp
xor
xchg
aam
outsl
pop
dec
out
push
pop
mov
push
into
xchg
mov
lret
leave
call
xchg
xchg
jecxz
inc
cmp
ret
mov
in
sub
mulb
mov
pop
jmp
aaa
sti
mov
push
sbb
sbb
inc
gs
xchg
fnstsw
mov
push
mov
pop
setg
cmc
outsb
mov
fidivrl
push
mov
or
mov
add
pop
pop
lods
mov
push
test
pop
push
jbe
sub
sti
pop
je
add
pusha
hlt
pushf
xchg
dec
jns
outsb
add
pop
adc
ss
std
lock
push
int3
mov
lret
xor
popa
in
sbb
inc
loope
dec
stc
xor
sub
div
jbe
mov
arpl
inc
mov
outsl
xlat
test
mov
rcll
add
pusha
mov
daa
rclb
lcall
fisubrl
aaa
lods
psubsb
cmp
popf
ret
inc
outsl
sub
fistpl
imulb
ljmp
stos
stc
mov
mov
repnz
jecxz
fidivl
sub
repnz
hlt
cltd
or
cmc
mov
insb
inc
sub
push
add
clc
sub
sub
jmp
and
mov
pop
pop
movsb
adc
enter
jl
arpl
mov
pop
adcb
in
outsl
mov
or
sbb
and
divl
ret
pop
push
test
mov
cld
mov
inc
mov
sbb
mov
inc
and
stos
push
ret
sbb
es
xor
push
in
xor
stos
jbe
inc
ja
out
cmpsb
fsubrs
imul
fimuls
inc
jge
es
mov
outsb
push
adc
push
sub
int3
lret
stos
mov
add
cmp
mov
jne
gs
xchg
pop
popa
pop
rolb
call
in
jbe
in
int3
xor
call
insb
popa
jle
xlat
push
inc
pop
pop
add
jb
in
loope
adc
xchg
xor
decl
lea
push
xor
jecxz
pop
leave
cld
xor
call
adc
mov
inc
dec
xchg
or
negb
cmp
sahf
sub
lods
int3
mov
notl
mov
cli
sub
fimuls
out
leave
sbb
movl
adc
daa
in
push
mov
jae
stc
stc
push
mov
int3
add
in
jno
adc
movsl
fisubrl
jb
hlt
dec
aad
jmp
out
push
shlb
movsb
jo
mov
cmp
scas
lret
les
and
adc
jle
ja
xlat
loope
pop
sub
movsb
inc
and
push
ja
call
cmp
push
sub
out
jns
push
in
adc
xchg
pop
pop
std
pop
xchg
and
adc
mov
sarb
dec
or
dec
sub
xchg
insb
xchg
es
adcl
loope
jae
mov
add
shlb
sub
lret
xchg
int
out
xcrypt-ctr
cmpsl
pop
cld
sarb
or
mov
xchg
fs
aam
nop
lahf
or
xchg
mov
sub
rcl
dec
out
test
mulb
add
popa
jnp
mov
in
insb
imul
push
mov
movsl
sbb
add
repz
mov
mov
and
mov
mov
pop
pusha
xchg
sub
mov
loope
pop
sbb
dec
test
es
pop
fidivrs
lea
lock
lock
mov
pop
cmp
mov
mov
lahf
mov
adc
and
outsb
movsb
sub
sti
cmp
shlb
aaa
push
outsb
inc
mov
leave
scas
cmp
mov
fistl
les
mov
int
dec
mov
cmp
xor
mov
je
or
enter
lods
sbb
daa
push
adc
cmp
inc
pop
adcl
scas
cmp
out
cwtl
jo
mov
mov
addr16
inc
push
jne
jno
add
inc
lret
ds
lret
mov
push
inc
lea
ret
mov
dec
adc
sub
xchg
pop
ror
fistpll
jnp
clc
sub
dec
sbb
test
jecxz
subl
loop
push
sub
xchg
sub
and
sbbb
xor
mov
stc
mov
fs
sub
push
mov
enter
jns
fdiv
fwait
lods
stos
or
int
and
mov
xor
ret
imul
in
popl
or
sub
jns
pop
repz
mov
fwait
insl
push
in
addr16
test
les
cltd
fstpl
aam
in
std
dec
mov
call
mov
lds
iret
jl
repz
movsl
loop
push
jecxz
and
jle
jo
mov
push
sbb
sbb
fs
psllw
xor
inc
jae
pop
outsl
sbb
inc
mov
idivb
fcomps
rorl
sub
sub
mov
jne
sub
xchg
stc
mov
rorb
mov
add
sub
mov
imul
icebp
addr16
in
or
shrl
inc
lds
sbb
in
cmp
mov
inc
dec
push
lea
cmp
inc
mov
fldl
xchg
adc
repnz
test
in
arpl
inc
lahf
icebp
cmpl
jp
mov
clc
jnp
inc
inc
dec
jle
xor
pinsrw
arpl
aam
jns
pop
sub
rorl
pop
lea
sbb
lret
pop
xchg
mov
push
inc
invd
fcmovnbe
mov
inc
cltd
add
push
xchg
lods
js
ss
or
adc
enter
or
jne
addb
push
dec
mov
mov
cmp
outsl
fld
mov
aam
movsb
xchg
loop
xor
adcb
cmpsl
in
aaa
imul
dec
fcmovnbe
mov
aaa
lods
fstpt
shl
out
mov
xor
movsb
ljmp
sti
inc
mov
lret
daa
sti
add
inc
sahf
arpl
adc
lahf
sub
leave
and
addr16
cmp
loope
movsb
cmpsb
lret
dec
xchg
js
push
pop
ljmp
movsb
add
jno
insb
dec
dec
sarl
mov
fsubs
xor
sbb
popf
mov
mov
mov
into
jbe
stos
or
stc
xor
aaa
and
hlt
jle
mov
dec
fimull
pop
das
mov
aad
lret
jmp
call
fimuls
and
enter
adcb
pop
mov
pushf
imul
mov
cltd
mov
pop
aas
jbe
movsl
sbbl
mov
pop
adc
sub
jle,pt
mov
jmp
mov
mov
jbe
push
mov
sub
std
or
jmp
aam
cmp
sub
mov
jmp
int
mov
inc
shlb
sub
fadd
and
cli
bound
neg
add
sub
inc
add
jno
jo
push
pushf
roll
inc
sbb
or
dec
lcall
ds
pusha
or
xchg
and
push
addl
cmpsb
sub
cmpl
mull
mov
enter
and
mov
push
shrb
roll
out
outsb
push
sub
add
fucomip
cmpb
lods
push
xor
adc
aam
loope
cmpsb
shll
ret
adcb
add
fld1
jbe
push
mov
aam
sub
js
xor
xor
pop
jp
mov
test
sti
inc
lcall
rcl
jge
stos
lcall
idivb
clc
push
mov
out
lret
jle
dec
sbb
mov
mov
cs
outsb
cltd
flds
sbb
inc
addr16
adc
jbe
loop
push
adc
in
xchg
lahf
pusha
xchg
pop
mov
dec
dec
jno
mov
imull
adc
push
or
stc
cwtl
xor
mov
mov
jmp
inc
push
mov
jns
push
mov
lds
push
push
je
cmp
or
jae
or
cmp
fisttps
pop
jmp
xor
in
or
pop
fs
js,pt
lcall
add
insb
aad
movsl
fistpll
add
ljmp
pop
ljmp
dec
lahf
mov
jmp
mov
or
jmp
stos
xchg
jns
xor
dec
pop
xchg
repz
dec
xor
push
pop
ficoml
repnz
xchg
cmpsl
jmp
addr16
inc
xor
lods
lds
cmp
cmpsl
adc
lods
mov
mov
enter
dec
mov
mov
push
lock
ds
lock
add
sbb
xor
les
loopne
and
fcompl
dec
pop
clc
adc
call
lods
pop
sub
add
cmpsl
sbb
jnp
out
aas
adc
dec
repnz
je
cmp
xchg
jae
lods
adc
je
stc
mov
jle
adc
fdivrs
cmp
lds
mov
enter
dec
hlt
adc
jns
push
adc
test
push
and
scas
sub
or
cmc
and
mov
stos
pop
mov
jg
lret
test
in
iret
ret
sbb
ds
stos
aaa
outsb
jb
leave
hlt
pop
push
movl
adc
clc
adc
mov
inc
and
sbb
cmp
push
call
sbb
cwtl
cmp
out
das
sbb
bound
jbe
lea
ficompl
imul
adc
imul
push
bound
pop
lret
shll
push
cwtl
pop
fdiv
add
mov
or
jne
clc
adc
sbb
imul
cmp
fiadds
sahf
leave
cmp
pop
xor
pop
data16
shrl
scas
stos
push
ds
mov
or
mov
loope
js
xchg
insl
lods
addb
aas
mov
out
cmp
push
push
outsl
xchg
xor
mov
out
pushf
js
je
push
leave
lcall
scas
mov
sarl
mov
outsl
dec
repnz
sub
adc
cld
cs
in
dec
inc
popf
add
movsl
sub
fbstp
jnp
and
rol
or
insb
arpl
aas
movsl
stc
bound
sub
adc
and
mov
shll
ljmp
dec
sub
xchg
leave
imul
adc
sti
sub
pop
cmp
cltd
add
movsb
test
bound
enter
xor
jno
repz
test
out
arpl
inc
ljmp
lods
imul
call
inc
xchg
cmpsl
add
mov
mov
mov
insb
and
inc
cmpsl
xchg
loope
iret
and
cmp
mov
dec
andl
xchg
jl
cwtl
in
mov
adc
ja
cld
mov
das
jmp
mov
clc
shlb
outsb
clc
loop
or
cmp
add
loopne
in
pop
mov
dec
push
insb
clc
and
sti
mov
push
lahf
mov
mov
shrb
popa
cmp
jno,pt
scas
out
cmpsb
mov
sahf
or
iret
or
jmp
in
mov
push
cs
sub
dec
jp
mov
sub
test
bound
cmp
dec
xchg
push
pop
sahf
fcmovbe
jge
jbe
aaa
inc
bound
push
xchg
dec
call
add
jecxz
xor
push
xchg
mov
xchg
cmc
add
arpl
mov
push
add
xchg
xor
imull
jbe
sbb
push
dec
in
sbb
fldenv
push
jbe
jo
xor
and
jb
inc
stc
add
xor
jle
popf
loop
sbb
in
pop
pushf
rorb
dec
addl
lea
stc
fcoml
sbb
fwait
inc
fnstcw
flds
scas
popf
sti
ret
movsb
jnp
cmp
push
xchg
cmp
out
idivb
arpl
mov
or
and
inc
shl
sub
jne
jg
outsb
add
icebp
jp
ret
pop
mov
xor
shlb
loope
mov
clc
push
loope
popa
jb
adc
sbb
xchg
sub
xchg
pop
jle
mov
iret
dec
repz
dec
jne
test
adc
iret
push
mov
cmp
push
xor
popf
lock
lock
test
repnz
jns
in
pop
cmc
outsw
test
pop
xlat
jbe
hlt
insl
xor
stos
and
xchg
push
xor
add
mov
xor
push
push
lret
add
inc
loope
call
mov
xchg
xchg
sbb
push
mov
jno
imul
js
adc
shl
mov
dec
rclb
in
ret
cmp
popa
stc
and
fidivrs
xor
in
inc
js
jae
mov
out
fwait
lods
sub
ds
fimull
outsb
add
sti
loope
test
out
fdivr
daa
mov
notb
fidivs
iret
mov
cmp
xchg
sbb
and
mov
insb
incl
cld
sahf
pusha
js
sti
out
add
imul
sub
push
movsl
jg
xchg
out
in
pop
xchg
inc
jbe
out
push
push
gs
inc
and
je
or
leave
cmp
mov
and
push
out
out
add
mov
test
jne
in
scas
or
jle
mov
dec
adc
add
mov
jge
and
outsl
cmp
out
and
call
cs
cwtl
aaa
or
shl
mov
adc
mov
and
movb
sti
mov
mov
add
call
lea
js
arpl
stc
add
icebp
fildl
jmp
xor
dec
add
dec
dec
inc
fdivs
add
int3
push
inc
outsb
sub
xor
jae
cmp
call
int3
jne
pop
subl
mov
gs
xchg
add
fcoms
dec
push
out
mov
push
inc
jo
daa
rclb
shlb
add
jae
dec
stc
xchg
adc
repz
insl
mov
push
jnp
mov
lods
fistl
ljmp
pusha
loope
fstpl
sbb
scas
sti
sub
hlt
cmpsb
es
repz
cld
cs
sbb
pop
mov
outsb
mov
sub
dec
inc
dec
scas
test
nop
das
mov
and
sbb
sub
mov
add
xor
xchg
add
stos
pop
mov
addr16
fs
popf
xorb
arpl
addr16
mov
dec
xor
stos
mov
mov
mov
mov
dec
addl
and
mov
xchg
or
mov
add
aaa
cmp
pop
in
pop
sbb
mov
pop
add
fcoml
in
xorb
loope
into
enter
shlb
aaa
mov
xchg
popa
mov
cmpsb
xchg
mov
dec
lea
sub
rolb
dec
push
cmp
faddl
movsl
xchg
mov
shl
mov
shlb
mov
lret
xchg
add
lcall
inc
push
mov
sbb
cs
int
adc
rcrl
and
pop
aad
adc
push
test
cmp
push
lea
mov
xchg
sarl
in
pop
mov
lea
in
and
mov
mov
in
push
std
fimuls
outsb
les
enter
leave
xor
pop
pop
repnz
adc
sbb
add
mov
ret
cmp
xchg
rcl
sub
lahf
sahf
incb
ja
dec
in
fs
inc
jno
rcrl
test
and
xchg
jp
pop
stos
mov
stos
pop
cltd
jnp
les
xchg
scas
push
loopne
repnz
mov
popa
loop
dec
add
or
mov
addr16
jns
push
bndldx
mov
loop
sti
into
mov
outsl
aad
test
scas
mov
fiaddl
xchg
mov
mov
into
cmpsb
push
fwait
push
mov
mov
or
mov
mov
push
pop
pop
fisubl
push
aaa
lods
jmp
out
sti
aaa
call
mov
hlt
stos
stos
xchg
lock
mov
mov
mov
dec
fcmovnbe
cmp
dec
in
cmp
enter
pop
pop
loopne
and
xor
stos
push
mov
push
clc
sbb
or
fcomps
xor
and
sub
lret
in
inc
outsb
gs
fdivrs
sbb
mov
xor
outsb
cmp
jg
mov
cwtl
cmp
push
sub
nop
push
popa
push
vcvtps2pd
add
adcb
dec
cmp
dec
pop
and
xor
xrelease
decb
mov
pusha
movsb
and
jae
add
std
pop
sar
call
ds
mov
sub
mov
pop
sub
out
inc
sbb
push
mov
mov
push
iret
stos
adc
mov
std
adc
and
jns
aad
dec
hlt
mov
ret
pop
lds
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
sub
sub
inc
or
mov
sub
in
aam
les
mov
movsb
cmp
mov
xor
and
xchg
sub
or
mov
cmp
pop
imul
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsb
mov
fistl
ljmp
jnp
dec
push
pop
add
bound
std
or
push
jecxz
sti
mov
sbb
stos
loop
loop
ret
cmp
jnp
add
sub
pop
jo
inc
sbb
mov
sbb
ljmp
pop
adc
sub
push
ret
lods
cmc
and
xor
clc
js
inc
push
rclb
lock
out
lods
cmp
mov
sti
xchg
inc
add
fldl
in
scas
add
stos
mov
mov
int
imul
sub
test
mov
movsl
in
aam
mov
clc
inc
inc
pop
scas
cld
orl
mov
stos
loop
loop
mov
push
jle
sub
pop
std
movsb
lahf
cmpsb
pop
cmp
push
mov
push
dec
xor
sbb
push
and
xchg
lret
stos
fisubrs
int
cli
pop
stos
fsubs
bound
outsb
xlat
outsb
pop
sti
xor
jle
es
bound
dec
std
pop
in
scas
dec
cmp
fdivs
mov
stos
loop
repnz
and
cltd
and
sub
jp
push
pop
jg
cltd
mov
mov
xchg
cwtl
scas
cli
mov
dec
cmp
sbb
cmp
pop
push
jo
sub
jae
mov
adc
ret
mov
push
push
cmp
addr16
adc
pop
jb
and
enter
lcall
ret
imul
xor
pop
adc
bound
jb
inc
sbb
mov
fistl
mov
fwait
shrb
jnp
dec
add
sub
jb
inc
sbb
mov
test
inc
inc
adcb
dec
cltd
scas
into
inc
daa
sub
rcrl
int3
pop
dec
insb
add
arpl
dec
gs
sub
add
or
sarb
outsl
cld
sbb
mul
ljmp
pop
mov
lahf
fwait
xchg
mov
movsb
jne
jno
dec
cwtl
cmp
jb
mov
int3
xor
mov
cmp
aas
xchg
jle
cs
sub
fwait
pop
ljmp
adc
mov
cld
imul
jbe
test
data16
push
cmp
shlb
mov
and
xor
scas
ret
roll
sub
mov
xor
sbb
inc
std
xor
inc
test
aaa
mov
cmp
jecxz
or
loopne
xor
out
nop
movb
ret
outsb
jne
mov
bnd
cmp
mov
adc
fcoms
jnp
into
movsl
leave
sti
cmp
xor
pop
pop
fs
data16
dec
imul
mov
push
xchg
xchg
jb
call
in
ret
aam
ret
lret
lods
daa
and
adc
test
movsb
cmpsl
push
imull
and
mov
out
cmp
pop
xor
sbb
ret
jle
pop
xchg
pop
jne
jnp
mov
bswap
or
pusha
fimuls
jecxz
push
push
sub
mov
or
rcr
loopne
stc
mov
loopne
xor
pop
ret
sahf
cld
push
sub
dec
sahf
xchg
xor
mov
and
imul
adc
inc
push
pop
or
mov
xlat
sbb
add
push
fstl
sub
shll
loop
lods
mov
enter
jge
xchg
sbb
repz
cmpsl
movsl
lahf
and
in
lret
test
sbb
jae
pop
jecxz
aam
cltd
stc
mov
lret
adc
cld
sub
pop
mov
push
pop
out
insb
stc
shll
adc
mov
jmp
out
aas
dec
fidivs
dec
mov
scas
xchg
dec
fwait
push
icebp
xchg
in
pop
outsl
adc
gs
inc
in
sbb
filds
test
xchg
mov
xor
rcl
decb
out
jmp
das
xchg
mov
lods
adc
pop
pushf
mov
pop
in
xchg
je
mov
push
ja
dec
ret
pushf
mov
jnp
lahf
dec
rcll
shlb
test
or
lods
jmp
sub
test
xor
outsb
push
test
sub
fsincos
loop
cmp
and
and
pop
ljmp
loope
or
inc
fisttpl
or
movsl
nop
and
enter
xor
nop
fldenv
sarl
add
fistps
jmp
xchg
jb
cmp
int
and
xor
repz
movsl
pusha
mov
sbb
dec
or
push
add
and
and
clc
stc
push
sbb
cmp
mov
leave
nop
add
in
lods
in
js
stc
push
dec
ret
or
popa
xchg
mov
inc
add
out
aas
jmp
pop
iret
aad
push
nopl
push
sub
stc
sbbb
pop
mov
out
ret
scas
and
scas
les
cmp
push
mov
jnp
leave
dec
stc
push
pop
fbld
ret
sbb
call
outsb
aam
mov
gs
lret
cld
push
xchg
push
out
or
nop
add
sub
ljmp
test
call
cmp
pop
push
mov
inc
mov
mov
sbb
ret
jmp
adc
iret
adc
popa
out
or
adc
bound
push
sahf
jge
sub
and
nop
repz
push
pop
fdivl
xchg
and
add
pop
xchg
adc
pop
pusha
and
insb
pop
movsb
adcb
pop
stc
imul
and
jae
jbe
mov
lods
ja
jo
push
adc
push
call
icebp
push
xor
out
inc
jno
jno
xor
enter
fs
fidivs
ja
popa
lock
jno
pop
addr16
and
push
imul
rclb
ja
ds
loop
imul
adc
bound
jge
mov
shlb
lret
into
out
dec
jo
out
xchg
mov
sub
inc
fucomi
dec
nop
jle
test
ficoms
inc
push
fsts
into
scas
push
xlat
call
xorb
add
sbb
jle
shrl
or
dec
ret
hlt
xor
dec
arpl
js
lea
shl
jp
shr
repz
mov
in
test
or
or
mov
push
rcrl
dec
inc
es
test
in
push
ds
fisttpl
cmpsb
inc
and
pusha
and
insb
dec
mov
mov
cwtl
clc
inc
loope
shlb
fcmovbe
movsl
xor
mov
sub
ss
push
cmpsb
outsl
les
jbe
outsl
mov
repz
mov
scas
je
inc
ret
test
arpl
mov
loope
mov
out
int3
addl
sub
and
xor
push
and
push
fcom
xchg
lods
cli
rcrl
xchg
mov
frstor
jae
mov
pop
enter
movsb
sbb
xchg
adc
xchg
mov
loop
loop
pop
mov
pop
push
inc
push
cmp
mov
mov
andl
mov
jns
and
mov
cmp
mov
mov
and
pop
adc
popa
sahf
ja
mov
dec
ja
sub
jle
idivl
fchs
jp
xor
pop
subl
push
push
and
repz
lcall
pop
dec
aaa
lret
call
ret
cli
cld
aad
mov
jg
repnz
cli
jno
out
mov
ljmp
inc
inc
mov
pop
inc
mov
jg,pn
test
sub
movsb
sbb
enter
shlb
pop
movsl
int
andl
and
pop
and
aad
pop
mov
cmp
dec
adc
mov
cmp
pop
cmp
fcmovnu
inc
lea
cli
and
lahf
sbb
push
test
push
sbb
inc
psubsb
enter
shl
pushf
sahf
push
cmpsl
enter
mov
push
mov
xor
adc
lds
dec
imul
aaa
test
xor
xor
shrb
rcrl
lock
dec
mov
xorb
rcr
rorl
xchg
iret
push
sahf
ljmp
scas
adc
iret
dec
inc
inc
add
lea
xchg
dec
mov
xor
cmp
mov
dec
jb
insb
mov
cmp
xor
sbb
or
cmp
pop
adc
leave
pop
mov
mov
cmpsl
movsb
gs
mov
xchg
call
mov
sub
rolb
lahf
xchg
pop
insl
sbb
lods
lock
sbb
cmpsl
cmp
and
clc
xchg
imul
and
mov
jecxz
das
cltd
fs
inc
cmc
cwtl
adc
mov
fwait
lret
rclb
incb
dec
icebp
je
addr16
cmp
mov
lahf
jge
outsb
icebp
xchg
xchg
push
in
xor
jb
inc
xor
in
jo
jle
sbb
push
js
add
cmpsb
or
push
xchg
jo
sub
mov
jb
lret
out
out
add
in
sub
and
push
xor
cmpsb
xchg
jno
nop
out
push
test
push
mov
lods
push
xchg
push
inc
call
pop
loope
ret
xchg
nop
pop
mov
or
lret
cltd
dec
aad
jmp
mov
mov
mov
and
jge
leave
cwtl
int
mov
mov
icebp
xor
int
loopne
rorl
imul
movsb
dec
mov
fbld
ret
xchg
into
mov
push
jl
icebp
xor
movsl
leave
roll
cmp
lcall
mov
std
movsb
out
sub
xchg
ds
rcrl
xchg
inc
add
cmp
jmp
xchg
push
ret
shrl
pop
int
out
and
add
ret
mov
pushf
push
dec
pusha
cli
pop
inc
enter
cmp
fnstsw
pop
mov
repnz
pop
imul
scas
pop
dec
test
shll
xchg
xchg
xchg
aam
sub
xchg
div
popa
call
in
jnp
or
add
outsl
jl
sub
fucom
out
adc
std
decb
call
xorb
aam
test
pop
fiaddl
jmp
mov
jl
sbb
lret
cmpsl
mov
dec
mov
jb
out
leave
pop
lret
hlt
push
sub
cs
mov
repz
nop
lea
and
aad
ss
pop
aas
les
in
mov
rcr
xor
mov
mov
inc
cmpsb
jb
gs
ja
aad
call
fstpl
scas
sbb
clc
push
xor
push
push
jmp
adc
pop
stc
and
stc
sbb
and
sbb
dec
rolb
scas
bound
mov
xchg
mov
fwait
pop
adc
pop
xorl
push
mov
mov
andb
mov
in
and
ret
mov
dec
inc
jge
int3
cmp
push
popa
inc
push
cmpsb
push
lock
unpcklps
stc
cltd
jnp
into
and
xorb
jecxz
inc
sbb
lock
sbb
cmp
div
ja
les
fstps
repnz
sbb
andb
push
cmp
xchg
push
or
push
or
cmp
lock
mov
ret
xchg
push
sbb
adc
cmp
mov
pop
push
rcll
les
jmp
shl
mov
int
sarb
push
jle
pop
xlat
pop
sub
and
or
add
idivl
mov
add
ljmp
scas
test
push
rorb
add
mov
push
lods
lret
nop
mov
push
xchg
dec
lret
imul
mov
jmp
push
pop
jnp
adc
add
and
jne
enter
jnp
loop
push
fmull
push
shrb
int3
mov
pop
mov
lahf
mov
les
lods
movsb
cmpsl
test
pop
scas
push
push
jo
lock
mov
hlt
aas
mov
and
cmp
cmp
cmpsl
sub
repnz
lods
cmovnp
ja
xor
sbb
fildll
xor
inc
mov
mov
sub
sti
mov
and
dec
outsl
pop
dec
dec
jl
mov
push
xor
insb
sbbl
ficompl
cmpsl
outsb
inc
test
or
setp
and
mov
and
push
inc
inc
adc
inc
mov
xor
sbb
mov
xchg
inc
jo
mov
es
repz
test
cwtl
cmp
lds
or
loope
in
jmp
enter
cli
or
cmp
in
mov
xor
aam
sti
jns
out
sub
inc
nop
mov
inc
mov
sti
int
gs
fwait
mov
ja
pop
cltd
lods
sub
or
or
jb
mov
mov
inc
adc
inc
popa
cmp
call
leave
pushf
inc
add
push
sub
in
adc
mov
jl
xchg
push
call
pusha
add
cmpsl
mov
clc
aam
push
int3
xor
mov
js
in
insl
movsb
movsl
cmp
shll
loop
filds
sbb
lret
and
or
mov
mov
adc
dec
mov
xor
xchg
fiadds
dec
mov
stos
repz
mov
add
push
push
xchg
clc
ret
jns
stos
daa
or
inc
cwtl
std
mov
sub
inc
sub
mov
dec
sahf
push
rcrl
pop
mov
inc
fstl
mov
clc
cs
xchg
xchg
ds
adc
lret
orl
jp
lret
cmp
jne
push
and
out
sbb
cmp
icebp
xchg
xlat
aad
outsb
jge
and
enter
pop
adcl
imul
or
and
cmp
xchg
lock
inc
push
add
jge
es
cli
jo
cld
scas
jno
lahf
mov
or
add
xchg
xchg
lods
pop
adc
fs
mov
and
mov
out
cmc
adc
mov
sbb
cwtl
mov
fldt
sahf
movsl
pop
adc
xchg
sub
xor
test
and
lret
dec
shll
sbb
aaa
pop
cltd
outsb
mov
out
lret
mov
fcomps
mov
stc
filds
or
cmpl
jb
out
mov
mov
imul
scas
repz
sahf
sbb
xlat
out
enter
mov
jns
insl
add
les
int
stos
add
pushf
mov
cmp
rcl
fdivs
aam
pop
es
push
ret
or
sub
call
sbb
loope
inc
pop
int3
rcll
push
ds
lock
out
push
lods
movnti
scas
clc
sbb
icebp
subb
mov
addr16
adc
or
pop
stos
fnsave
adc
nop
adc
push
pop
lcall
xchg
pop
ds
cmp
push
mov
jo
and
cltd
fbld
jbe
filds
out
mov
lcall
mov
jo
int3
cs
or
sub
test
sbbl
push
daa
orb
insl
out
rclb
xchg
inc
xchg
and
cltd
mov
sub
and
and
lods
pop
imul
mov
aaa
mov
pop
je
mov
jb
popf
or
push
pop
in
mov
jbe
bound
shll
rolb
mov
subb
adc
in
popa
movsb
in
insb
das
dec
jb
stos
xchg
xchg
into
cmp
jae
or
mov
test
sub
and
and
adc
movsb
cmc
test
mov
in
adc
mov
cltd
ljmp
fs
cmp
movsb
gs
lret
pop
jae
inc
adc
out
imul
dec
pop
mov
int3
sbb
rcrb
push
jo
ret
mov
pop
pop
add
pop
shll
dec
cli
test
and
push
sub
jbe
sbb
mov
nop
ljmp
das
jb
out
mov
out
jge
incb
push
and
testb
js
and
xchg
or
sub
cmc
mov
aas
out
and
test
data16
and
or
sub
shlb
push
cmc
sbb
stc
and
mov
xor
jo
adc
hlt
add
repnz
pop
jno
xor
and
out
or
out
ret
lds
xchg
adc
push
dec
jnp
fnstenv
shll
sbb
sbb
sar
cmpb
fwait
and
sub
stos
pop
popa
in
out
pop
movsl
movsl
iret
xlat
jle
or
jecxz
repnz
lods
ffreep
call
aad
es
clc
jp
add
add
popf
lods
xchg
movsl
sbbl
pusha
inc
inc
jnp
test
push
cmpsl
push
jmp
adc
jg
out
sub
test
in
sub
loop
push
cmp
xlat
sub
pusha
in
jb
shlb
imul
cmpsl
and
xor
sbb
and
aaa
int3
dec
push
mov
loop
daa
insl
sbb
xchg
test
inc
lods
loop
lret
movsb
loopne
loop
xchg
xlat
mov
fdivl
jge
sub
fisttpl
fwait
icebp
dec
jle
stos
inc
pop
test
adc
cmpsl
imul
mov
cmp
insl
sbb
outsb
int
lds
mov
add
cmp
ret
add
int
xorl
or
jns
fcmovu
mov
nop
insl
shrl
rol
mov
dec
pop
rolb
mov
jnp
mov
jp
mov
leave
icebp
imul
mov
pop
decb
jo
sar
jo
in
push
push
mov
inc
dec
mov
addl
pusha
jns
xchg
in
jg
mov
aam
aam
subl
pop
and
rcll
decl
js
and
mov
xlat
in
xor
mov
inc
hlt
dec
xor
mov
fcoml
mov
adc
jo
mov
mov
jmp
int
push
mov
cmp
daa
in
div
movsb
sbb
inc
sahf
roll
mov
mov
sub
lret
je
mov
xor
push
mov
xchg
loopne
jg
jo
fstpl
fdivs
sar
push
dec
adc
mov
lahf
sbb
les
pusha
fbstp
fidivl
arpl
in
aaa
inc
sahf
sahf
in
imul
fimuls
movsb
in
jb
add
mov
xchg
dec
lcall
hlt
sub
scas
xor
pop
test
push
pop
cwtl
call
clc
test
mov
push
jno
mov
xlat
inc
in
pop
les
and
mov
cmp
push
div
mov
xchg
test
mov
mov
sbb
mov
xchg
jg
mov
sbb
in
ficoml
jmp
pop
pop
loop
dec
cs
lds
and
cltd
jb
inc
dec
notb
addr16
pop
pusha
lea
push
int3
rol
ds
test
adc
mov
xor
xchg
rcll
ds
cli
cmp
cli
xlat
push
pop
mov
push
insl
addr16
insl
or
add
xchg
leave
push
add
push
je
sub
sahf
mul
xchg
push
mov
fdivrl
xor
pusha
imul
add
data16
push
lcall
cwtl
lds
and
mov
xor
mov
insl
add
ret
sub
negb
mov
fs
pop
push
and
ret
sbb
cmpsl
movsb
jae
std
addb
or
nop
inc
jp
xchg
out
scas
shrb
in
cs
movsb
ficoml
add
mov
jp
out
sarb
out
push
faddl
pop
or
mov
into
outsl
ret
movsl
add
dec
jp
pop
in
xchg
in
mov
mov
cltd
or
testl
enter
or
jge
ljmp
repz
dec
pop
cwtl
sub
gs
jp
roll
lock
push
or
mov
dec
push
adc
dec
shrl
outsb
add
lret
xchg
jnp
mov
lret
movsb
mov
push
push
outsb
hlt
hlt
xchg
aaa
jmp
sbb
mov
lret
sti
in
sbb
test
outsl
lret
add
iret
add
jne
or
xchg
lods
imul
lds
push
shlb
inc
aam
mov
inc
cmc
sub
add
sti
xor
jmp
icebp
jo
jg
int3
push
scas
std
stc
addr16
test
je
test
inc
add
jbe
adc
push
sub
push
or
mov
or
fldt
mov
hlt
cmc
inc
std
fs
xor
movsl
sbb
jle
imul
mov
push
data16
into
dec
cmp
or
jae
sub
jnp
add
pusha
lock
mov
stc
out
shl
rorl
sub
rorl
push
push
fcoms
push
cwtl
cmc
xor
push
cmpsb
inc
dec
sbb
in
fs
xor
or
scas
lcall
nop
xor
or
mov
inc
mov
push
pop
fnstenv
dec
dec
xorb
adc
add
jl
mov
out
push
sti
je
cwtl
or
xor
xchg
inc
xchg
cmp
push
jge
adc
or
jbe
test
or
ss
movsb
idivl
insl
pop
leave
dec
rclb
fdiv
enter
xchg
divb
int3
setl
arpl
mov
stc
jbe
imul
lahf
les
xor
cmpl
add
das
mov
pop
aaa
adc
push
in
mov
add
arpl
cmp
mov
stos
hlt
aam
gs
or
dec
lret
pusha
and
fnstcw
mov
sbb
loopne
loop
sar
mov
xor
das
ret
popfw
dec
mov
sbb
int3
adc
mov
jmp
pop
addb
sbb
pop
mov
icebp
stos
push
cmp
xor
jmp
push
jmp
adc
repz
mov
dec
push
dec
cmpl
push
ljmp
repz
sub
mov
sub
mov
inc
rcll
mov
push
mov
add
jae
subl
mov
fldcw
xchg
push
imul
in
sbb
inc
jbe
out
dec
nop
inc
loopne
cs
push
outsl
lods
xorl
rcrb
adc
daa
insb
or
out
sbb
gs
xor
mov
mov
std
or
mov
insb
sbb
imul
clc
xor
cmp
in
mov
ret
cmp
push
cmp
leave
cwtl
jp
negb
iret
cli
cmpsb
shl
mov
cmp
mov
jg
adc
arpl
fbstp
sub
iret
mov
stc
pop
xor
push
dec
dec
out
mov
repz
int
xchg
add
jo
and
pop
aam
inc
xor
mov
outsl
scas
cmp
add
hlt
mov
aas
bound
das
ret
in
dec
loopne
and
push
xchg
ds
movsb
and
dec
hlt
sub
pop
sbb
jns
dec
fcoms
sub
xchg
stc
sub
stos
in
push
xchg
dec
rcr
rcrl
pop
cmpsb
jno
inc
push
inc
std
inc
xchg
outsl
push
andnps
lea
cmp
dec
test
xchg
mov
jmp
jne
in
push
mov
push
test
repz
call
mov
mov
or
mov
adcl
lea
mov
jns
adcl
arpl
mov
cltd
jmp
mov
aaa
pop
sahf
jae
pop
and
dec
fistps
lds
movsl
mov
mov
xchg
pop
in
xor
pop
sub
lahf
inc
xchg
jbe
mov
leave
cmp
mov
pop
mov
push
xchg
push
in
ficoms
mov
xor
ret
adc
pop
sbb
hlt
or
dec
fldt
ja
push
and
jno
pop
dec
or
ret
cld
imul
ret
nop
push
jbe
cld
push
inc
xchg
repz
dec
sbb
mov
xchg
stos
loop
repnz
fwait
shrb
jnp
dec
add
sub
jb
inc
sbb
mov
fistl
mov
fwait
shrb
jnp
dec
add
sub
jb
inc
sbb
mov
fistl
mov
lcall
add
sub
jb
inc
sub
cmpsb
xlat
mov
xchg
xchg
stos
loop
repnz
sbb
imul
cwtl
loope
pop
gs
ljmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
