push
mov
dec
sub
mov
add
jmp
sub
data16
ret
jns
sbb
add
add
mov
sub
les
ret
punpckhbw
jno
sti
mov
mov
and
add
xor
push
cs
addr16
mov
cmp
inc
or
shlb
push
mov
push
push
push
neg
push
or
sub
sub
pushl
xchg
movl
cld
inc
xchg
inc
sub
mov
mov
mov
pop
mov
ret
mov
out
fcomi
dec
insb
inc
push
inc
push
fisttps
hlt
call
jmp
outsl
filds
mov
add
mov
enter
xchg
mov
sub
fsubrs
add
dec
popa
inc
mov
imul
adc
fisttps
outsb
inc
mov
shr
test
std
outsl
out
add
dec
sbb
jmp
mov
mov
pop
mov
add
inc
arpl
mov
idivl
sbb
dec
inc
add
ret
mov
ret
sti
mov
inc
ja
jne
cmp
call
dec
inc
inc
dec
mov
pop
mov
xor
jmp
jp
idiv
pop
jae
data16
push
push
imul
mov
inc
push
clc
negb
adc
cmp
popa
push
xor
push
or
aaa
dec
add
jns
mov
xor
clc
mov
outsb
or
adc
mov
in
mov
jmp
mov
xor
add
inc
jns
inc
clc
in
cmp
outsb
dec
ja
push
add
fbstp
xor
and
push
pop
popa
fidivs
test
mov
cmp
dec
adc
jmp
div
mov
mov
mov
data16
imul
jne
into
pop
xor
bound
inc
ficoms
mov
pop
outsl
das
xchg
fistl
inc
or
dec
mov
dec
mov
insl
jecxz
lret
ljmp
imul
dec
outsb
dec
aaa
fiadds
mov
jae
loop
jns
mov
sbb
dec
add
add
clc
jmp
mov
mov
mov
call
mov
out
insl
mov
xor
mov
sti
pop
xchg
leave
dec
repz
cmp
push
addr16
repz
add
jecxz
dec
sbb
js
mov
xor
pop
bound
ret
aam
nop
pop
mov
inc
mov
insl
pop
or
fcmovnbe
push
les
inc
pop
out
outsb
rorl
ds
xchg
jmp
imul
out
aaa
repz
mov
mov
xor
xor
incl
aas
mov
mov
dec
pop
fbstp
lret
fistpll
dec
mov
xchg
lds
xor
jg
mov
push
popa
jmp
pop
add
mov
jg
pop
divl
inc
add
jl
dec
ret
ret
inc
cmp
mov
shrb
push
adc
idiv
inc
mov
ret
lock
lods
leave
call
icebp
cmpsb
ret
outsl
ljmp
das
xor
or
and
sbb
das
lock
in
ljmp
or
jo
push
jl
leave
std
jg
sub
push
mov
pushl
xor
popa
mov
enter
push
push
push
jns
inc
and
push
call
sbb
pop
rcll
xor
push
mov
shlb
add
outsl
dec
popf
ret
fs
inc
es
mov
add
or
out
ljmp
sete
jmp
or
jb
mov
xor
idiv
in
inc
inc
inc
test
adc
fs
push
inc
mov
cli
inc
push
shr
clc
cmp
gs
inc
jno
loopne
and
pop
mov
xor
negb
ret
ja
cwtl
and
iret
out
hlt
inc
ret
nop
rorb
ret
add
cmp
outsb
or
or
push
movsl
push
popa
ret
dec
push
xchg
ljmp
or
cmp
decb
ret
rclb
mull
hlt
adc
adc
inc
call
in
push
adc
lds
jb
and
decl
pop
jnp
dec
inc
jl
cmp
add
je
imul
cmp
movsl
pushl
je
sbb
sub
xchg
push
inc
add
outsl
sub
pop
in
push
adc
popf
insl
sub
jmp
fimuls
xor
fnstsw
mov
loopne
adc
aam
mov
and
repz
xor
ret
dec
or
pop
loope
ret
adc
je
mov
and
shrl
jo
add
cmp
inc
rol
sub
xor
xchg
pop
adc
into
pop
ud0
dec
hlt
fnsave
mov
sti
fildll
sbb
jnp
fiadds
push
adc
outsl
cmp
fists
pop
clc
xchg
ret
ret
inc
bound
or
and
adc
sar
mov
in
cwtl
add
jo
fsts
ret
cmp
mov
mov
aad
dec
ret
push
js
jae
aam
data16
inc
lahf
pushf
ret
xchg
cs
call
pop
sbb
ret
loopne
mov
jge
outsl
decl
das
mov
and
mov
fcomi
ljmp
mov
negb
in
sub
xchg
or
and
in
cs
movhlps
pushl
inc
ret
or
je
jo
arpl
ret
mov
jnp
dec
scas
ljmp
mov
add
mov
xchg
fcoml
out
pop
sbb
sub
out
mov
mov
ret
insb
and
movsb
add
mov
sbb
fildll
pop
dec
push
pop
gs
adc
cmp
and
ficoml
out
jo
adc
sbb
das
call
add
cmp
or
adc
sbb
in
lcall
or
shl
and
adc
test
xchg
xchg
mov
or
and
pop
fadd
xchg
pusha
or
ret
mov
or
ficomps
jge
mov
aad
andb
mov
add
fs
js
loop
or
jmp
sbb
or
or
xorl
mov
mov
js
ss
mov
or
sub
inc
sahf
mov
xchg
dec
adc
pop
pop
xor
jo
cmpsb
dec
mov
sub
mov
adc
lcall
jl
sbb
inc
pop
rcrb
fldcw
adc
push
ret
cmp
jle
dec
fldt
icebp
outsl
shlb
inc
jmp
loopne
mov
fidivl
je
push
lcall
in
sbb
repnz
insl
imul
je
jg
ss
std
mov
lcall
inc
test
sub
add
xchg
adc
lcall
jne
ret
jl
mov
notb
xchg
inc
adc
mov
jg
sub
push
sbb
call
pop
loop
sbb
insb
pop
xchg
jno
pop
cs
cmpsb
mov
xchg
jl
dec
cmp
pop
dec
add
mov
mov
mov
push
mov
cmc
add
stc
scas
add
sub
inc
mov
add
xchg
mov
push
push
rorb
mov
leave
inc
mov
jmp
cmp
fmuls
jb
add
fildll
jno
inc
mov
add
cli
mov
jmp
xchg
cld
add
loop
ljmp
and
sbb
imul
ret
inc
sub
int3
mov
fisttpll
mov
out
push
xor
aas
clc
call
lahf
ret
mov
mov
enter
jp
add
je
and
ret
clc
xchg
pop
pusha
ret
dec
cmp
lock
lcall
ret
adc
jle
mov
pop
add
cmp
mov
inc
cld
sbb
stos
out
loope
jg
roll
mov
and
shlb
pop
inc
mov
push
adc
fidivrl
mov
and
decl
xlat
pop
inc
adc
xchg
ret
pop
pop
jg
bnd
dec
mov
cmp
pushf
push
sbb
jno
pop
clc
jg
xor
or
testl
mov
out
in
call
cmpsl
insl
lahf
daa
leave
dec
or
sub
pause
or
call
fwait
outsb
or
push
ret
icebp
cltd
stc
dec
hlt
addl
ret
mov
daa
xor
sbb
jle
jecxz
push
and
shll
jmp
fs
mov
or
je
jnp
adc
mov
popa
lret
dec
inc
cmp
jl
adc
push
jle
loope
decl
data16
cmpl
enter
stc
ss
fsubs
mov
pop
cli
fistpll
jae
ret
mov
adc
lahf
push
das
push
cmp
or
es
xchg
call
stos
ret
dec
ret
sbb
adc
incb
inc
bound
dec
sub
jb
dec
icebp
sti
ret
out
clc
push
test
outsl
in
and
dec
xchg
sbb
xchg
or
or
pop
pop
call
mov
adc
inc
nop
sub
mov
loopne
outsl
cmp
aas
insb
jle
icebp
xor
cmp
adc
fdivrs
and
decl
xor
push
addr16
and
add
mov
imulb
xchg
repnz
inc
and
ret
inc
fstpt
leave
das
xor
sub
jb
dec
inc
loope
lcall
or
hlt
adc
shr
xor
subl
mov
repz
add
mov
mov
cmp
sub
or
sbb
push
dec
xor
sarl
mov
jg
jl
sub
mov
sarb
and
in
loop
cld
out
popa
lods
hlt
idiv
outsb
sub
insl
es
icebp
test
or
cmp
cmp
or
mov
add
mov
scas
pop
mov
or
dec
sbb
or
mov
enter
xor
imul
sbb
das
mov
adc
les
xchg
fisttpll
jae
clc
add
decl
dec
jg
repnz
inc
sub
imul
mov
scas
mov
cmpsl
fsubrs
mov
and
xchg
pop
pop
push
pop
in
leave
sub
cmpsb
xor
xor
cmp
push
and
idivb
sbb
add
pop
mov
in
jmp
icebp
stc
or
push
enter
clc
fistps
cli
inc
in
adc
and
clc
xchg
xlat
shlb
inc
push
add
dec
jge
or
outsl
icebp
dec
jmp
xor
pop
mov
push
jns
inc
push
jg
pop
cli
and
movsb
fdivs
les
xchg
sbb
and
in
call
push
in
dec
push
xchg
scas
inc
stc
lret
cmp
sub
mov
je
test
or
roll
int
clc
jg
hlt
mov
adc
repnz
sti
jb
inc
sub
std
lods
mov
and
orl
sub
jne
push
outsl
pop
mov
sub
fsubl
enter
lcall
sub
push
sahf
inc
add
pop
xchg
orl
xchg
and
xchg
addr16
jmp
adc
xchg
or
sbb
call
jae
or
das
outsb
xlat
ljmp
pop
mov
imul
sub
or
fisttpll
mov
aas
mov
and
ret
dec
mov
outsl
mov
add
bound
das
xchg
test
adc
jns
outsb
xor
xor
jl
add
movsl
ret
sbbb
inc
dec
mov
in
movsl
adc
mov
fists
sbb
xchg
ret
ja
ret
xchg
mov
loope
push
aas
sbb
outsl
push
loopne
jge
arpl
jle
cmp
test
mov
insl
jecxz
std
xor
mov
or
sti
out
push
mov
mov
dec
sti
ljmp
sub
mov
jne
and
ljmp
fisttps
shll
and
out
sahf
lea
inc
hlt
adc
outsl
cld
outsb
call
add
lock
inc
imul
lcall
mov
sbb
clc
out
and
push
cmp
push
fcom
push
clc
popf
mov
mov
sbb
sub
hlt
jmp
shr
arpl
fs
sbb
push
in
lock
jo
cwtl
add
and
cmp
fs
sbb
xchg
jbe
sub
lret
ret
cmp
std
add
jmp
or
mov
jmp
idiv
pop
ss
popf
into
xchg
cmp
mov
jo
pop
incl
xchg
mov
mov
pop
call
push
faddp
pusha
dec
adc
arpl
lds
mov
adc
repnz
push
adc
shrd
push
jmp
dec
push
lret
xchg
inc
adc
and
xchg
pop
sahf
xor
jns
lcall
std
pop
jecxz
inc
jecxz
sub
aas
pop
sbb
sbbl
dec
pop
sar
push
fcmovne
rcll
xor
outsb
dec
and
cltd
mov
lods
ret
mov
add
fisttpl
ja
nop
pop
push
fucomi
sbb
or
inc
test
pop
out
xor
outsl
push
aas
insl
cwtl
mov
adc
and
xor
add
test
fnstsw
sub
outsl
call
subl
jg
testb
sub
das
lcall
jae
out
xchg
add
lret
cmp
repnz
dec
sbb
les
and
add
xor
mov
or
cmp
mov
sub
leave
in
or
fs
repz
scas
push
push
subl
fimuls
jbe
sbb
in
mov
cli
xchg
clc
imulb
or
sub
adc
add
adc
or
xchg
test
inc
rorl
rolb
sub
sbb
dec
sbb
insl
sarb
emms
enter
std
jnp
ret
sbb
jge
mov
mov
mov
call
or
mov
xchg
adc
mov
sti
mov
sbb
xchg
sbb
fdivr
cmp
mov
or
scas
inc
movsl
jns
ret
or
enter
sbb
adc
jbe
loop
pop
clc
or
call
dec
push
pop
sbb
decl
mov
and
mov
or
mov
icebp
dec
adc
adc
fwait
xor
push
repnz
inc
test
or
lcall
or
and
lods
lret
fistpll
stos
js
cwtl
aam
add
mov
sub
mov
and
xchg
pop
cmp
pop
adc
decl
mov
lods
add
lret
das
outsb
pop
mov
add
dec
in
call
lret
adc
cmp
iret
outsb
ret
mov
push
fbstp
mov
aaa
cli
test
mov
jmp
cld
adc
in
xor
lea
dec
sub
mov
icebp
mov
test
mov
movsb
sub
or
clc
ja
or
xor
addr16
stos
mov
decl
gs
loope
aaa
out
mov
sbb
loop
push
adc
sbb
pop
and
adc
xchg
decb
loopne
adc
rcll
add
push
incb
pop
mov
pop
out
repnz
imul
or
dec
mov
jbe
lret
adc
popf
push
lods
aam
add
es
pusha
push
rol
mov
pop
xchg
mov
dec
jbe
mov
lret
shll
loopne
or
imul
lahf
pop
mov
aaa
or
cwtl
xorl
mov
xchg
aad
mov
mov
lock
cmpsb
jbe
mov
negb
psubb
cmp
push
out
inc
sub
mov
sbb
fists
jns
cld
push
pushf
sub
mov
das
dec
or
iret
cmpb
in
ficoms
add
test
outsl
push
push
fs
mov
add
in
cli
aaa
jno
fmuls
aam
push
inc
outsb
pop
pop
adcb
mov
pop
incb
add
xchg
or
or
mov
mov
in
mov
test
sub
dec
leave
jbe
xchg
push
fisubl
push
xchg
in
shl
mov
in
stos
in
mov
sbb
push
inc
adc
jmp
add
lcall
fistpl
in
pop
rolb
pop
mov
jge
or
jo
mov
sti
outsb
push
leave
inc
loop
xchg
mov
cs
test
stc
mov
jp
ret
or
adc
hlt
lods
pop
adc
stc
mov
push
mov
cli
push
orl
jle
sbb
jno
loopne
insb
gs
test
or
or
jo
pop
rcll
pusha
mov
fildl
mov
roll
adcl
outsl
mov
lret
les
or
mov
in
call
rorb
test
sub
sub
outsl
aas
cmp
xchg
adc
inc
sti
pop
fmuls
mov
xchg
dec
shlb
sub
mov
xchg
rcr
lcall
fmull
add
xchg
test
mov
ja
aaa
das
mov
fucom
and
push
adc
mov
push
and
add
and
mov
cmp
mov
scas
sub
or
clc
fwait
or
jns
dec
jae
push
xor
mov
lcall
cld
shrl
ret
dec
jo
add
mov
lret
xchg
or
adc
add
aas
test
dec
jecxz
das
lret
push
in
fistpll
outsl
test
leave
and
imul
jo
bound
jl
add
sub
ljmp
fadd
imul
and
mov
cltd
and
cmp
inc
jae
dec
fcos
sbb
or
and
push
jl
push
mov
adc
fisubrl
xchg
es
movl
insb
push
jmp
rclb
and
sub
mov
mov
sub
sbb
sbb
cld
mov
inc
add
orl
outsl
pop
push
inc
and
aaa
push
call
mov
ret
int
aaa
cmpsb
out
or
cli
pop
outsb
adc
bound
lds
and
or
jle
cmp
or
and
leave
neg
clc
mov
in
sbb
inc
dec
test
sbb
icebp
fsub
add
loop
mov
mov
jns
or
outsl
std
fst
mov
out
mov
push
xchg
hlt
outsl
or
lea
dec
mov
or
sub
sarb
mov
fwait
pop
leave
fists
xchg
or
adc
fisubrl
or
mov
push
fwait
test
add
scas
add
push
decl
insl
clc
and
add
cld
jo
insl
push
call
out
mov
fisubrl
fiaddl
push
pop
or
movsb
sti
or
and
pop
imul
jmp
sub
pusha
cs
xchg
cmp
sbb
call
rcll
les
mov
xchg
call
out
xchg
push
xchg
or
sbb
ljmp
push
jg
popa
cwtl
sbb
mov
pushf
pop
and
mov
aad
fists
mov
dec
fiaddl
push
fldcw
insl
cmp
sahf
cmp
lret
cltd
stos
mov
sbb
test
dec
and
lea
rorb
fldt
add
pop
add
or
lcall
das
xor
std
loop
mov
outsl
xor
aas
add
mov
xor
xchg
cmp
pushf
pop
stc
pop
call
xchg
imul
jbe
adc
pusha
scas
daa
and
xchg
in
js
mov
mov
or
xchg
cmp
push
sahf
ficompl
leave
addb
imul
pop
pusha
rorl
ret
sti
cld
push
cmp
ret
jmp
fcoml
dec
outsb
xor
mov
cmp
inc
stos
jl
mov
clc
test
ds
push
pop
xchg
xchg
cmpsb
mov
sbb
mov
pop
stos
enter
jg
pop
out
ret
mov
js
sub
pop
xorb
test
mov
pop
mov
or
cmc
js
mov
sub
and
dec
daa
lea
mov
aas
divb
mov
dec
inc
dec
dec
jne
add
aas
mov
mov
and
imul
cmp
es
and
push
mov
cmp
xor
add
inc
loope
movsb
je
pop
cmp
push
push
pop
adc
jg
mov
clc
mov
and
test
jo
add
push
call
pushl
push
and
pop
jmp
repnz
xchg
dec
call
notb
push
and
stos
std
std
ljmp
pop
lahf
cld
outsb
inc
mov
enter
std
cmpsb
add
push
pop
push
decl
cmp
inc
jnp
sub
cwtl
test
or
mov
enter
pushf
ret
sar
dec
adc
dec
sbb
xchg
or
mov
or
jge
adcb
nop
cld
sarl
push
pop
xor
push
shrb
cmpsl
cs
push
lods
sub
bound
nop
jp
ja
ljmp
mov
addr16
jne
aaa
mov
decl
push
outsb
cmpsb
push
scas
pop
movsb
pop
jne
lea
outsb
test
or
outsl
insl
and
ljmp
ja
mov
lea
idivb
in
lds
add
or
ljmp
jle
js
add
inc
int
or
or
xchg
incb
inc
mov
popa
xor
ret
push
clc
fdivrl
outsb
sbb
sbb
sbb
cltd
loopne
or
dec
jl
outsl
xrelease
sar
rorb
or
lahf
jmp
test
adc
mov
sti
fisttpl
push
push
mov
mov
or
lods
scas
push
jecxz
xchg
out
push
sbb
mov
rcl
and
int
sub
cmpsl
dec
pop
jge
add
sbb
inc
sub
lock
adc
mov
sbb
inc
add
mov
mov
in
mov
add
jo
in
inc
mov
or
cmp
mov
outsl
rorb
rcll
leave
xor
nop
mov
ret
bound
dec
lock
je
dec
movsl
pusha
dec
in
sbb
mov
int
mov
push
stos
jmp
pushf
push
movsb
or
std
sbb
les
and
ret
push
adc
jne
push
mov
jo
clc
pushl
lea
adc
fdivl
push
fs
icebp
xlat
adc
pop
inc
mov
xchg
mov
je
dec
jle
sub
gs
xor
xlat
hlt
add
mov
xchg
xor
xchg
push
pop
pop
push
in
call
outsl
jg
mov
in
sub
sbb
and
int
inc
cmp
aaa
decl
xor
pop
les
js
ficoml
jbe
flds
idivb
fldcw
add
in
mov
or
fwait
jecxz
sub
xchg
test
ret
mov
or
xorl
jge
mov
or
pushf
pop
fisubs
dec
cltd
sbb
arpl
jg
push
cltd
inc
xchg
and
xor
comiss
std
enter
adc
stc
call
add
push
pop
and
movsl
jle
hlt
call
mov
popf
in
fbstp
es
inc
add
aad
call
or
ss
jmp
push
xchg
add
cs
cmc
pop
pop
loopne
sub
mov
lock
mov
cld
mov
xchg
xor
mov
pop
add
inc
add
fisubrl
scas
jae
sub
mov
movsl
mov
inc
dec
leave
cmpsl
mov
clc
mov
and
xor
xor
sbb
lret
out
outsl
in
in
inc
mov
jp
lea
enter
fistpll
arpl
cmp
mov
or
cli
out
ja
fwait
stos
jmp
fmuls
imul
shlb
shrb
mov
cmp
inc
sbb
pop
mov
dec
data16
icebp
aaa
jo
push
and
xor
in
and
cmp
test
loope
ret
add
cmp
jl
hlt
push
jns
pop
mov
adc
or
bound
cmpsb
cltd
push
sub
or
and
lock
out
ret
mov
xor
sub
mov
into
jo
pop
cli
emms
sub
xchg
in
lret
mov
cmp
or
mov
jmp
dec
cld
stos
lahf
rorl
cmc
mov
notl
push
mov
in
mov
add
add
cmpsb
lahf
lods
mov
das
push
loopne
aam
push
out
dec
adc
in
imul
aam
pushf
pop
test
je
in
xor
js
or
fsubr
mov
cmp
pop
adc
cmpb
jmp
push
fwait
add
mov
cmp
inc
loope
dec
fs
mov
mov
insb
mov
inc
in
jmp
adc
out
ljmp
pop
dec
popa
push
scas
adc
inc
bound
adc
mov
das
cld
jne
lods
adc
insl
lcall
sub
lea
insb
adc
sbb
dec
fstl
repnz
ja
fdivr
push
sbb
pop
test
test
add
adc
cmp
cli
bound
xchg
aaa
jg
jae
lcall
hlt
sbb
bound
int3
pop
inc
std
push
fisttpl
sbb
pop
nop
xor
mov
sbb
sub
dec
mov
outsl
loop
jb
mov
movsl
outsl
scas
inc
mov
jbe
sbb
jb
jmp
adc
mov
das
insl
fnstsw
std
mov
daa
ds
pop
pop
dec
leave
mov
fcmovnbe
addl
jge
xchg
push
sti
push
dec
es
pusha
cmp
icebp
enter
pop
pop
pusha
jl
adc
cli
or
leave
mov
test
pop
test
sub
nop
ljmp
call
pop
inc
in
pop
jbe
hlt
mov
pop
push
adcl
cs
aaa
movsl
cmp
push
jp
jle
pop
test
lea
shll
xor
xchg
into
mov
repz
push
pop
and
add
or
popf
mov
push
dec
shl
and
mov
aas
or
les
mov
sub
lock
sbb
test
sub
cli
outsb
adc
mov
inc
mov
xor
rcll
pop
pop
lock
mov
cmp
mov
mov
jge
push
cmp
and
xor
cmp
iret
in
or
xor
push
adc
cld
mov
hlt
test
xchg
call
jg
pop
das
push
pop
lret
fmuls
and
push
or
jg
jmp
cmp
bound
jb
dec
in
xor
cmp
inc
sbb
ds
inc
out
mov
imul
outsl
std
aaa
clc
sbb
inc
adc
sti
sbb
xchg
je
pop
and
repz
push
and
cltd
test
mov
sbb
jnp
rorl
add
push
decl
pop
and
mov
add
fisubrl
cmc
jle
xchg
das
idivl
and
neg
jbe
push
sbb
ret
insb
aaa
mov
sbb
or
decl
int3
or
lret
aam
or
js
lcall
mov
lods
or
sub
cmp
cmp
gs
mov
hlt
cmp
jns
inc
ljmp
fnstcw
clc
pop
mov
out
sbb
out
or
insl
sub
dec
xor
adc
les
xor
adc
or
test
mov
xchg
filds
and
jg
ds
ds
imul
inc
aaa
movsl
fists
or
lock
xlat
sub
sbb
add
incb
std
sub
mov
dec
sbb
addr16
add
xchg
loop
pop
int
addr16
inc
arpl
jp
jg
lahf
xor
pop
scas
inc
mov
test
jl
test
outsl
jge
sbb
pusha
jmp
outsl
call
lock
xor
test
cmp
push
sbb
out
sti
xor
xchg
sub
push
jmp
and
sbb
and
jmp
dec
repz
xchg
in
out
xchg
mov
in
test
cmpsl
jle
fucom
mov
test
fs
or
cs
mov
sub
adc
adc
loop
mov
adc
inc
je
xlat
cs
das
rolb
cld
push
inc
jne
icebp
ds
adc
add
daa
mov
cmp
xor
adc
push
pop
xor
mov
or
cmc
sub
pop
in
adc
xor
pop
xchg
adc
or
dec
xchg
xlat
push
push
clc
ss
loop
pop
clc
test
or
in
lds
jo
test
lods
jg
insb
repz
lds
shlb
lcall
push
adc
cmp
cli
outsl
xor
mov
mulb
or
sbb
ret
xchg
pop
fstl
les
sub
loop
stos
and
insb
xor
ret
dec
inc
adc
stos
xchg
push
add
sub
outsl
mov
repz
outsl
xchg
cmc
cmp
mov
push
push
fists
hlt
outsl
mov
insb
jg
cmp
ljmp
cld
mov
cmpb
inc
cmp
dec
call
dec
push
mov
and
movsl
fstpl
cmpb
mov
add
dec
aaa
mov
xchg
add
outsl
test
add
and
les
data16
in
movsl
and
mov
es
lods
pop
mov
es
mov
xchg
dec
mov
fsubl
inc
inc
sbb
and
inc
addl
fildl
mov
sbbl
rolb
mov
cmp
sub
outsb
cmpsl
icebp
xor
adc
jmp
pusha
sub
cmp
mov
hlt
mov
fisttps
pop
or
in
test
cltd
or
xor
sub
es
adc
icebp
test
pop
xor
hlt
pop
sbb
test
and
mov
or
lret
hlt
sbb
xor
adc
jle
adc
call
sub
std
dec
dec
nop
mov
and
pushf
mov
and
pop
push
sub
loope
mov
jne
and
sbb
xor
inc
and
mov
sbb
dec
adc
or
loop
in
lcall
das
dec
adc
adc
mov
sbbl
and
mov
mov
pusha
call
hlt
std
mov
mov
jl
pop
mov
ret
fwait
bswap
inc
or
jl
xchg
mov
mov
mov
aam
xchg
lahf
push
add
std
dec
push
jl
push
add
jns
jbe
sbb
inc
ss
fsubp
inc
ret
sbb
in
pop
mov
inc
push
cs
mov
test
cltd
clc
cmp
fists
js
pop
pop
loopne
push
arpl
push
je
inc
lea
pop
and
popa
pop
lods
dec
test
mov
mov
outsb
cltd
cmp
push
ja
inc
cmp
outsl
outsl
icebp
das
adc
mov
mov
cmpl
insb
insb
cld
mov
test
test
inc
dec
xchg
jmp
jmp
sbb
jne
es
and
dec
add
mov
mov
xchg
push
pop
bound
dec
stc
arpl
fwait
std
fisttpll
test
jae
popa
dec
pop
and
test
lods
or
mov
jbe
cwtl
hlt
jmp
cltd
sub
ljmp
imul
pushl
adc
mov
int
dec
out
pop
add
sbb
jge
rcrb
arpl
pushl
mov
dec
fwait
cmp
dec
icebp
in
push
cmp
data16
cltd
mov
xchg
inc
arpl
and
shll
lods
inc
add
inc
mov
sbb
push
lock
dec
imul
out
popf
int
push
jg
test
jg
aaa
jb
pop
push
imul
push
pusha
mov
jb
call
adc
out
push
mov
dec
jle
in
stos
rclb
cmp
adc
and
jbe
mov
cmp
icebp
test
mov
shlb
rolb
inc
divl
test
dec
push
jb
inc
icebp
mov
test
xchg
add
cltd
pop
and
cli
lods
ret
dec
add
mov
sub
das
mov
sbb
push
orb
popa
lret
pop
insb
xchg
fst
mov
mov
clc
cmp
outsl
in
sbb
push
cmp
shlb
lahf
ds
call
out
cli
out
mov
add
push
aad
sbb
mov
je
inc
cmp
sbb
daa
push
shll
idivl
cmp
push
mov
incl
shlb
jl
je
rcll
mov
sahf
xor
scas
push
xor
xor
ret
mov
cmp
in
mov
lea
je
rclb
outsb
clc
push
mov
push
cmp
push
fstpt
lret
ret
adc
sbb
mov
fucompp
push
aaa
in
add
push
enter
clc
push
mov
inc
cmp
or
dec
dec
lods
sbb
xor
push
push
inc
cwtl
jle
mov
inc
int3
jl
or
popa
add
outsl
test
pop
cld
inc
cmp
mov
mov
enter
push
mov
jae
dec
mov
push
mov
ret
pop
add
dec
jo
adc
fnsave
pushf
mov
cmp
rcr
clc
lea
push
sbb
inc
mov
cli
dec
clc
jmp
sbb
and
mov
ffreep
lea
daa
or
xlat
adcb
movsb
dec
loope
mov
ljmp
cmp
jo
xor
lcall
mov
fsubs
psubsb
jbe
lods
and
push
enter
inc
inc
pop
bound
push
xor
xchg
loope
jb
jns
jle
decb
and
rcll
mov
inc
and
or
dec
not
sbb
mov
push
pop
mov
lcall
fldt
cwtl
push
sbb
cmpsb
cmp
sub
mov
pop
rolb
inc
mov
daa
into
cwtl
xor
adc
add
outsb
cmp
hlt
sarb
cmp
push
imul
lahf
mov
sbb
pop
push
mov
rcrb
mov
sbb
push
in
mov
and
mov
dec
mov
bound
push
popw
das
cwtl
decb
push
fwait
cmc
shlb
mov
aad
pop
fldl
fcom
subb
xchg
imul
push
jp
xlat
sarb
cmp
imul
mov
pusha
jecxz
inc
xchg
and
and
addl
sbb
xchg
sub
incl
or
popa
rcrl
push
jns
hlt
or
adc
sbb
lods
jp
cmp
stc
clc
in
dec
addl
dec
dec
pop
xor
and
or
mov
fisttpll
ret
ret
cmc
popa
das
xchg
test
addl
call
xchg
pushl
jo
pop
or
call
pop
push
jbe
sbb
jp
les
mov
adc
xor
in
mov
icebp
loopne
mov
lods
out
ret
or
add
dec
ficomps
outsl
sub
pop
cli
pop
icebp
inc
inc
dec
scas
mov
push
or
mov
notl
cmpsb
sbb
pop
xor
mov
shrb
dec
sbb
call
call
jg
xchg
jmp
gs
mov
mov
xchg
jns
les
je
or
clc
ret
stos
mov
cmp
iret
mov
or
xchg
mov
and
or
sahf
push
int
ja
outsl
pop
add
add
hlt
daa
sbb
add
xchg
cmp
popf
movsb
sbb
dec
loop
mov
adc
mov
jmp
cmpsl
sub
jns
ret
ss
push
js
mov
sub
adc
mov
cltd
push
or
adc
inc
movsl
or
ret
sbb
mov
imul
filds
or
mov
xor
outsb
mov
mov
decl
adc
jmp
clc
sahf
pusha
inc
loop
mov
mov
rcrb
stos
in
push
icebp
dec
test
jo
das
aad
ret
leave
push
mov
push
loopne
rorl
push
out
out
add
orl
inc
pinsrw
in
pop
pop
sar
sbb
mov
cmp
jb
adc
push
dec
mov
hlt
cmc
fcmovnu
fstpl
jne
in
mov
insl
pop
xor
sar
xchg
mov
inc
mov
mov
fidivrl
mov
dec
mov
shll
sub
or
push
outsb
incl
or
push
insl
ret
push
mov
loop
jns
and
add
in
push
jmp
dec
xchg
or
cld
or
mov
xchg
adcl
adc
adc
ret
popa
mov
cli
push
push
jmp
fcomps
or
in
push
mov
push
out
mov
dec
lret
xchg
jl
ds
cmp
call
lcall
xchg
add
and
out
or
xor
les
daa
jae
das
and
subl
rolb
jl
cmp
adc
sbb
adc
push
inc
cmpsb
insl
out
jp
pop
mov
sbb
xor
aas
sbb
and
je
mov
or
sub
or
jmp
addr16
es
dec
insl
ljmp
cltd
popa
inc
movsb
out
aam
adc
insl
cmp
ja
in
mov
rclb
cmp
popa
ljmp
sub
and
or
call
jecxz
in
pop
push
dec
in
xchg
and
ret
xor
ret
imul
xor
cli
lock
xchg
nop
cmpsb
loopne
sti
sbb
xor
mov
dec
sbb
fisttps
and
cs
cmpl
mov
icebp
scas
add
dec
ficoml
jle
ret
mov
mov
sub
lea
mov
sbb
push
lea
lcall
mov
out
test
mov
orl
pop
add
rcrl
sub
pop
xchg
popa
push
mov
jo
pop
insb
adcl
pop
outsl
pop
mov
stos
aas
scas
test
add
clc
xchg
and
cmp
jge
mov
add
push
addr16
insl
shlb
movsl
fbstp
pop
int
inc
sub
out
nop
bound
cmp
dec
lea
aaa
inc
inc
jmp
add
xor
test
lea
decb
jg
popa
cmpsb
dec
rorb
or
push
dec
cmp
cmp
and
xchg
enter
add
adc
sub
mov
roll
sbb
clc
dec
mov
imul
pop
sub
or
pop
les
ss
adcl
lcall
incl
xchg
jae
pusha
push
cmp
xor
adc
push
xor
mov
rorb
fiadds
fimuls
dec
push
mov
cmp
xor
jmp
jg
sbb
imul
or
or
mov
aam
push
dec
fsubs
jmp
ljmp
add
xchg
mov
movsl
pop
push
out
jge
in
push
pop
orl
js
cmp
push
cmp
xchg
sbb
insb
clc
inc
xchg
cmp
mov
int3
jo
aaa
pop
fistps
int
push
in
cmp
lock
jmp
adc
nop
bound
fwait
xor
jo
jge
in
mov
sahf
shl
popa
in
js
ljmp
stc
jb
adcb
js
adc
pop
mov
pop
adc
push
leave
and
mov
movsb
xchg
stos
mov
jp
pop
xor
pusha
fstl
sub
cli
add
xchg
adc
insl
pop
aaa
sbb
cli
jae
inc
int3
movsl
call
xchg
insb
mov
or
or
pop
int3
jo
mov
mov
and
mov
and
sub
pop
xchg
dec
inc
jg
in
idivl
movsl
push
jle
push
pop
decl
sbb
test
test
mov
xchg
xlat
xlat
cmpsl
mov
and
dec
pop
pop
dec
or
rcrb
in
les
es
sbb
mov
pop
xor
aaa
lcall
push
lds
aaa
push
js
imul
cmp
rclb
hlt
test
pop
das
sub
jae
push
mov
cld
xor
sbb
fwait
mov
add
xor
mov
mov
sarb
data16
cld
inc
mov
inc
add
mov
adc
mov
mov
pop
shlb
sbb
in
mov
mov
sbb
iret
mov
cmp
push
mov
cli
mov
lea
xor
notl
mov
bnd
shrd
push
lds
test
add
andl
xor
add
inc
mov
inc
std
pop
js
nop
mov
mov
scas
gs
xor
out
sbb
test
arpl
mov
lds
pushf
cld
test
popa
jl
push
aaa
insl
add
mov
cmpsb
out
fistps
jo
push
arpl
push
lock
xor
loopne
les
xor
das
sub
sbb
out
dec
sbb
xchg
bound
fbstp
jg
mov
lret
inc
rclb
jle
push
push
je
sbb
mov
mull
ret
data16
aaa
stos
jl
mov
xor
lahf
adc
je
jmp
sbb
mull
or
cs
and
loope
adc
xchg
pop
xchg
lds
ljmp
and
jg
outsl
cmc
mov
jp
xor
shll
push
out
mov
decl
lcall
inc
stos
sbb
xchg
ja
mov
inc
add
btc
outsb
mov
in
arpl
lock
aas
inc
mov
loope
cld
or
lcall
push
adc
pop
cli
mov
dec
xchg
xor
dec
cmp
pop
shrl
rcrb
lret
js
incb
lea
pop
dec
aaa
sbb
out
out
lret
and
idivb
add
add
inc
fwait
push
rcrl
add
dec
jo
jmp
call
clc
sbb
rclb
dec
pop
or
pop
xchg
xchg
mov
fdivrp
dec
cmp
xchg
bound
push
clc
dec
fwait
cltd
adc
cmp
pop
add
dec
cld
adc
xor
dec
xor
or
mov
outsl
pop
dec
ret
cmp
sub
cmp
fwait
xor
out
fcmovnu
mov
or
repz
inc
and
cltd
cmp
sar
sub
cli
sub
dec
xchg
mov
lods
push
push
iret
sbb
outsl
mov
pmuludq
je
aas
mov
jg
rcrl
fdivl
pop
inc
jbe
shrl
mov
popf
xor
hlt
addr16
leave
xor
sbb
xchg
test
pop
or
mov
outsl
aas
mov
jle
or
inc
and
incl
jne
push
scas
add
pop
dec
sub
pop
hlt
sub
test
or
outsl
jp
push
es
sub
xor
ficomps
and
cmp
loopne
mov
lods
out
cli
test
pusha
lods
sub
lods
out
and
sbb
sbb
push
add
mov
add
icebp
push
xor
or
loope
xchg
sub
cli
xchg
or
dec
pushf
mov
nop
das
insb
std
aaa
dec
mov
push
mov
cld
mov
in
xchg
fs
xchg
pop
in
jecxz
sar
mov
js
repz
mov
inc
xor
dec
push
pop
push
fsubr
ds
mov
jnp
mov
fcoml
inc
or
cwtl
sbb
sbb
mov
mov
or
push
xchg
xor
mov
jmp
loope
dec
add
lock
and
push
lods
clc
sbbl
add
pushl
xchg
cs
dec
shll
mov
nop
or
sbb
jno
insl
setbe
xor
ficompl
fcomp
lock
jle
psllw
test
sbb
inc
adc
jno
lock
insl
clc
daa
in
rorb
lock
out
push
sbbl
ja
cmpsb
adc
movsl
sub
mov
cli
pop
call
sbb
or
push
mov
outsl
mov
mov
repz
add
sbb
or
cmpsb
and
movl
cli
jbe
xchg
sub
clc
fs
pop
push
push
fwait
adc
jbe
stc
or
fwait
jmp
jge
ret
push
jg
loop
and
mov
jmp
jnp
cld
mov
inc
es
js
lds
daa
push
sub
in
lret
jnp
ret
cmpsl
call
cmp
adc
add
pop
mov
add
add
dec
nop
into
inc
cld
jno
xor
adc
xor
in
mov
inc
loop
and
push
push
sbb
loop
jge
les
fcmove
outsl
cwtl
cs
outsl
sub
cmp
ficoms
outsl
cld
ret
testb
dec
push
mov
inc
sub
sbb
fistpll
or
ss
jne
movsl
push
popf
mov
xor
outsb
outsl
xor
out
inc
dec
std
rolb
and
aam
movb
jns
das
lds
jo
jle
add
pushl
insl
scas
inc
add
sahf
jecxz
cmp
or
fnstsw
pop
adc
sti
lock
sbb
or
push
pop
jl
adc
jmp
mov
push
jae
xor
dec
call
fidivl
inc
push
mov
sbb
mov
data16
lock
adc
mov
pop
addr16
cmpb
inc
or
inc
jb
inc
ret
cld
lods
inc
aaa
data16
sbb
pop
push
mov
mov
in
push
dec
sti
adc
pop
and
test
push
mov
test
inc
test
lret
ror
pop
cld
cld
cmp
in
std
sbb
sub
sub
push
mov
xor
daa
xchg
cmpb
add
lods
push
mov
sub
test
cmp
cmp
jecxz
aaa
dec
dec
hlt
stos
lds
dec
or
mov
inc
mov
repnz
std
add
push
and
jmp
mov
sbb
insl
and
xor
repnz
leave
mov
cld
scas
or
add
das
xor
push
inc
fs
addr16
inc
sub
fisubrl
sbb
out
mov
rol
aaa
rolb
mov
inc
into
insl
mov
xchg
stos
sbb
ss
lahf
dec
popa
cli
test
ficoml
mov
dec
mov
icebp
mov
or
pop
xor
mov
sub
int
lea
adc
into
and
push
jo
gs
fstpt
pop
testb
scas
ficompl
sbb
xchg
clc
xchg
lods
sti
push
movsb
std
std
aad
in
out
cmp
pop
lods
loop
add
jge
rol
or
mov
mov
pop
jb
gs
aad
push
scas
xor
pop
xor
faddp
dec
fcmovu
fisubl
lahf
dec
out
test
cli
aas
ja
fistl
dec
fstl
xchg
into
andb
lods
mov
mov
mov
adc
js
add
std
mov
iret
out
fs
lock
sbb
clc
lea
dec
cmp
enter
mov
nop
jmp
test
imul
mov
mov
rep
mov
jecxz
addb
jle
icebp
call
mov
or
mov
cmp
push
mov
bound
cvtdq2ps
out
and
mov
or
sti
test
andl
mov
jo
in
mov
je
stos
outsl
and
jecxz
xlat
in
jle
out
xchg
ror
sbb
dec
or
inc
jge
mov
cmc
xchg
or
xchg
inc
cs
mov
out
sahf
jp
mov
mov
sbb
mov
adc
add
outsl
inc
subb
shll
or
dec
test
inc
imul
pushf
add
jne
sub
sti
pop
outsb
ds
cmp
fsts
incb
cmpsb
sbb
jmp
inc
xor
je
jg
push
pop
cmp
fs
test
addr16
scas
lret
arpl
jae
dec
xor
stos
ds
cmpl
mov
inc
mov
ret
and
aas
or
nop
ds
sbb
stos
cmp
adc
in
adc
mov
jns
jo
fs
push
stc
clc
inc
into
add
enter
jg
fists
inc
mov
lods
lahf
sbb
ret
test
jno
clc
cmp
mov
stc
push
ret
mov
pop
and
jecxz
ret
push
pop
xlat
pop
xchg
cmpsb
add
and
push
test
pop
fld
mov
and
ss
sbb
mov
outsl
xor
xchg
daa
mov
outsl
enter
pop
pusha
imul
xchg
and
out
or
or
or
ja
xor
jnp
push
rcr
shlb
adc
adc
test
clc
movsl
push
or
scas
mov
in
mov
cmpb
jecxz
pop
ljmp
cmp
push
fdivrs
add
movsb
stos
lds
mov
or
arpl
incl
push
sub
dec
mov
in
mov
or
loopne
pop
pop
add
jge
out
pusha
dec
jle
pop
mov
les
rorl
fbld
or
and
dec
jb
incb
inc
add
shrl
push
fnstsw
and
add
adc
movsb
xor
cli
fistl
inc
stc
in
inc
pop
movsb
les
pop
test
fiaddl
test
jmp
call
ss
push
sti
jns
stc
movsb
dec
repz
outsl
mov
dec
push
add
dec
aaa
sbb
sub
xor
sbb
shrl
outsl
js
xor
sub
cmp
add
adc
roll
xchg
jle
cmpl
xor
dec
xor
sti
mov
sub
iret
shlb
xorl
adc
sbb
jge
mov
sbb
mov
lock
xchg
das
dec
cmp
clc
imull
xchg
sub
jle
mov
js
mov
pop
push
rcr
outsb
mov
aam
sub
push
dec
ljmp
call
out
out
inc
jmp
dec
push
add
hlt
push
hlt
jp
xor
out
enter
mov
shl
mov
cwtl
add
iret
mov
adc
hlt
push
stos
sbb
mov
fisttps
daa
pop
in
cwtl
adc
clc
fcmove
cmc
inc
add
sub
lock
stos
lods
test
mov
push
outsl
les
outsl
mov
gs
lock
mov
xchg
shll
pushf
outsl
ret
daa
jmp
sub
inc
inc
lret
mov
inc
adc
pop
add
pop
jg
xchg
fisttps
fcompl
push
clc
push
scas
add
jmp
loopne
lea
adc
pusha
or
loopne
xor
xchg
outsl
dec
fucomip
pop
inc
adc
movsb
sub
push
sarb
push
jg
push
jg
pop
clc
and
cmp
in
cmp
in
adc
adc
pop
pop
xchg
fcmovu
mov
cwtl
sahf
dec
movsl
les
fs
lcall
aam
mov
xchg
jo
int
aaa
fstpl
lret
ret
es
cmp
dec
pop
popa
sti
sub
jle,pn
sti
ds
out
push
or
xlat
push
popa
adc
inc
int3
sub
cmpsl
int
in
cli
pushl
cmpsl
inc
sbb
jmp
ret
pop
je
mov
mov
push
int
cli
sub
push
clc
pop
or
lock
lret
pop
or
jne
data16
cwtl
int3
lock
test
cmc
sbb
push
xchg
mov
fcmovbe
aaa
adc
push
icebp
xor
jb
andl
pop
fsubp
cmp
dec
cmp
fldcw
mov
addb
shlb
filds
push
js
push
xchg
stos
imul
xor
jecxz
mov
shl
xor
pop
leave
cmpl
mov
repz
mov
jne
and
xor
out
push
or
push
sub
scas
push
ret
ss
cmp
inc
xchg
outsl
clc
inc
dec
gs
cmp
movsb
cmp
ret
shlb
add
sbb
pusha
xchg
or
cmpsb
mov
daa
test
dec
into
in
mov
out
fstps
cmp
std
stos
lods
test
cmpsb
stos
inc
je
fsubrs
pop
mov
popf
dec
adc
inc
lods
mov
push
testl
mov
sbb
loopne
xor
jno
or
mov
adc
ss
xor
lock
lcall
scas
jnp
xor
out
pushf
mov
dec
add
inc
jbe
mov
in
ret
adc
add
aam
jle
ret
ja
insl
lods
and
jl
xchg
adc
lcall
outsl
addr16
aam
add
mov
or
jmp
sub
js
mov
fdivs
out
jecxz
mov
pop
lahf
xor
test
loopne
or
add
inc
inc
mov
lahf
and
pusha
mov
jnp
mov
mov
test
cld
arpl
mov
es
or
sub
sbb
push
pop
jle
push
sahf
mov
lahf
cwtl
jp
sub
ret
push
jl
subl
add
add
mov
hlt
or
and
jg
push
push
out
xchg
add
xchg
sub
repnz
mov
xchg
xlat
nop
stos
pop
adc
bt
mov
repz
adc
stos
std
push
and
bound
pop
divb
pop
in
les
xchg
rcrl
loopne
ljmp
cli
adc
sub
push
add
sub
pop
xor
mov
xchg
adc
mov
cmc
pop
ret
xchg
js
sbb
gs
push
inc
pusha
notb
cmp
mov
push
in
out
movsl
inc
cmp
insb
dec
xor
fwait
pop
xor
fdivrl
dec
bound
mov
dec
std
or
popf
mov
xor
and
dec
sub
clc
insl
pop
fsubrs
scas
rorl
popa
jae,pt
sbb
or
idivb
adc
fwait
ret
mov
clc
xor
out
xchg
inc
loopne
and
out
fimuls
icebp
mov
dec
in
push
or
ds
daa
mov
aam
frstor
out
loopne
das
push
xchg
adc
dec
clc
lods
add
adc
push
and
inc
sub
or
sub
int3
outsb
call
pop
jle
mov
mov
iret
or
frstor
ds
xchg
cmp
or
in
jae
clc
inc
out
fsubrl
je
jb
mov
icebp
dec
in
jle
add
jg
jg
and
lcall
pushf
movsl
je
ds
push
lods
add
mov
dec
push
xchg
sti
scas
sbb
imul
sub
iret
cmc
sub
fcoml
or
fstp
pop
xchg
mov
call
lods
decl
xcrypt-ofb
cmpsl
test
push
inc
adc
mov
add
adc
bound
xchg
mov
sub
xor
ja
xchg
in
and
push
insl
dec
lcall
shlb
cmc
out
pop
jne
jne
pop
cmp
inc
cmpsb
jp
mov
in
sbb
xchg
ss
shlb
bound
test
adc
jb
cmp
in
or
insl
outsl
stos
enter
xor
repz
icebp
cmp
shrb
mov
sub
push
push
jl
jns
xlat
insb
sub
cmp
jecxz
dec
and
aaa
xchg
or
mov
clc
add
pop
and
lds
push
jle
das
xchg
or
das
xchg
ss
loopne
adc
push
out
jae
test
and
insb
pop
jg
push
loopne
jecxz
shlb
add
mov
dec
sub
cwtl
in
jecxz
mov
xor
aas
mov
std
xlat
movsl
pusha
and
out
pop
add
in
fsubp
pop
les
or
xor
rorb
call
sbb
scas
into
mov
fistl
incl
xchg
xchg
clc
xchg
cmpsl
lret
sbb
cmp
and
lock
fstpt
push
push
loopne
jno
mov
mov
sub
daa
jp
jg
filds
and
pop
and
scas
ss
xor
out
out
fbstp
add
xchg
xor
leave
adc
cmp
sub
and
or
push
sbb
adcb
std
pop
and
push
pop
pop
push
push
arpl
mov
aad
nop
fs
jbe
cmpl
incl
out
or
in
or
loopne
xor
inc
cmp
add
or
imul
sub
gs
or
mov
jg
aaa
loopne
test
cmp
mov
rorl
pop
jbe
pop
push
cmp
xchg
mov
xchg
xor
push
insb
das
sub
xchg
or
shrl
daa
pop
push
or
push
leave
mov
sub
mov
pop
mov
leave
int
out
xor
xchg
push
xlat
sbb
cmp
aaa
hlt
ret
frstor
mov
cmp
adcb
mov
jecxz
jp
out
mov
or
movsb
fisttpll
xor
pop
push
ds
mov
sub
lock
add
add
inc
mov
idiv
fistpl
mov
arpl
outsl
inc
pop
push
dec
push
aam
imulb
stos
rcrb
cs
cmp
loop
dec
loope
subb
sub
inc
mov
cmpsb
enter
inc
mov
fs
test
adc
sub
sbb
aas
push
testl
mov
in
negb
mov
jl
daa
sub
sbb
jb
dec
inc
jbe
xorl
je
insb
shrb
push
mov
xor
inc
jecxz
push
lahf
xor
pop
jmp
xchg
jne
ret
addr16
je
loopne
in
imul
ljmp
idivb
dec
aas
jo
xchg
push
stos
stos
or
push
xor
sbb
push
fsubrs
call
lock
out
insl
sub
shll
jmp
stc
scas
mov
jmp
ud1
push
imul
in
sar
pop
fildll
cmpsl
sub
push
xor
test
icebp
lcall
jnp
push
adc
test
shrb
push
nop
mov
stos
stc
mov
sti
outsl
lahf
jo
bound
add
aaa
unpcklps
lods
push
mov
inc
pop
adc
mov
lods
icebp
sub
jae
subl
shl
lods
adc
mov
mov
add
push
aas
push
push
inc
cltd
cmp
not
fs
or
test
pop
xchg
sbb
mov
movsl
call
push
imul
adc
cmp
dec
mov
ret
and
pop
jmp
std
push
dec
imul
push
push
stos
sub
lahf
jp
mov
pop
test
mov
xor
mov
xchg
lods
xchg
in
mov
mov
out
pop
testl
cmp
sti
scas
or
cmp
pop
push
clc
push
enter
lea
cmpsl
daa
pop
xchg
vcvtss2si
mov
pop
int3
adc
jb
add
xchg
mov
stos
imul
push
cli
xchg
jg
loop
movsl
ret
sbb
es
cld
xchg
cmp
shl
push
and
mov
shlb
xor
dec
cs
in
outsl
into
inc
push
and
in
imul
cli
or
inc
negl
sbb
and
push
sahf
dec
je
jno
sbb
inc
inc
aad
filds
enter
fisubl
cli
mov
adc
and
outsb
jg
mov
lea
popa
outsl
mov
push
push
sti
or
xchg
mov
shl
adc
orl
adc
cmp
call
sub
pop
stos
xchg
or
jle
push
jnp
or
and
bound
jmp
pop
xor
mov
cli
add
adc
add
cmpsl
push
adc
mov
shl
pushf
insl
mov
lahf
lock
mov
push
dec
gs
pop
mov
rclb
arpl
and
dec
cmp
or
clc
mov
jno
push
mov
push
cmp
fists
xor
stos
int3
push
iret
jmp
xorl
notb
cmc
inc
inc
or
outsl
mov
sbb
lahf
add
sarl
gs
lock
push
or
xchg
and
add
repz
in
cmpsb
int3
add
xchg
insl
insl
mov
xchg
pusha
arpl
mov
mov
push
es
or
mov
das
pop
pop
xor
scas
adc
in
inc
in
out
mov
cwtl
out
adc
outsb
jo
arpl
incb
or
popf
and
or
mov
sbb
aam
or
cld
repz
mov
cmp
cli
pusha
or
outsl
push
dec
jge
jne
pop
sbb
add
in
jnp
push
jo
les
clc
pop
leave
sbb
or
jbe
gs
push
iret
andl
or
dec
repz
jb
call
push
cmp
cmpsb
aad
jnp
dec
jmp
pusha
push
add
xchg
xor
loopne
pushf
cld
ffreep
jmp
xor
adc
test
scas
cmpl
cs
xchg
adc
jle
fdivs
out
daa
lea
js
push
cmp
push
add
lcall
cs
inc
data16
mov
imull
aam
dec
pop
movups
pop
pusha
sbb
pop
mov
cld
dec
mov
adc
or
add
mov
or
adc
cmc
bound
movsb
lods
lcall
cs
pusha
cmp
daa
or
imul
es
xchg
pop
jge
movsb
fsubrl
push
fisubs
filds
outsl
adc
xchg
push
or
sarb
aad
cmp
adc
jno
push
dec
xchg
scas
loope
scas
out
mov
xchg
add
sbb
cmp
hlt
or
in
cmpsb
or
cmp
pop
out
xchg
or
ljmp
filds
popa
cmp
mov
cmp
mov
jmp
add
gs
cltd
xor
fldt
pop
sbbl
outsl
andl
out
jge
mov
and
fsubrl
push
mov
cld
and
xlat
add
sbb
pop
bound
xchg
inc
xchg
mov
mull
or
ljmp
cmpsl
out
push
test
cli
cwtl
loope
mov
pop
mov
inc
mov
jns
inc
hlt
clc
bound
sbb
clc
and
dec
mov
mov
pop
and
jne
outsb
and
mov
jp
aaa
add
jg
jmp
push
or
in
fisubrl
loop
sarl
cmp
jecxz
jp
xchg
loope
xchg
mov
test
outsl
jne
out
sub
sub
pop
add
dec
mov
push
adc
enter
into
outsl
mov
outsl
fdivrl
mov
out
dec
in
movsb
and
xchg
xor
inc
lea
jbe
subb
lock
in
jp
inc
jne
call
enter
or
mov
adc
insb
outsl
test
sub
stc
adc
push
xchg
mov
data16
jmp
mov
adc
rep
adc
add
add
fisttpl
not
mov
xor
addr16
or
decb
and
hlt
sbb
jmp
jmp
cmp
imul
fildl
pop
inc
jns
push
mov
xor
pop
adc
push
insl
add
xchg
jb
jns
stc
lods
dec
cld
notb
push
jb
movsl
push
ss
adc
std
scas
sahf
pop
stos
mov
lods
loop
cmc
sub
cltd
fsubs
dec
inc
adc
jo
inc
inc
or
inc
dec
out
jbe
mov
aad
xchg
or
je
sub
hlt
into
mov
or
adc
add
cmc
mov
sbb
movsb
lds
dec
add
jmp
roll
int3
cmc
or
out
mov
pusha
insl
push
sub
jle
mov
push
mov
lcall
lods
pop
das
mov
fwait
push
and
test
push
pushf
xor
sbb
xchg
add
std
xchg
popa
cmp
cmpb
cld
xchg
stos
lea
jne
js
sub
jecxz
xchg
mov
and
call
lahf
cmp
and
icebp
in
push
inc
lret
pop
sbb
push
or
sbb
cmp
fucom
mov
fs
add
inc
test
mov
jne
pop
pop
mov
sbb
aas
xchg
sti
daa
jae
hlt
sub
outsl
paddw
cmp
hlt
mov
add
loop
fsts
out
and
je
das
fsubl
mov
inc
lods
push
pop
cmp
dec
mov
and
in
lahf
test
or
call
imul
pop
ret
add
mov
aas
fadds
xchg
fildll
push
rorb
mov
and
pop
mov
repz
jp
sbb
and
xor
sbb
add
pop
jo
les
push
jmp
mov
leave
xlat
int
push
je
int3
test
push
add
jl
insb
xor
cmp
lcall
cli
sbb
rorb
push
jne
xor
push
jp
push
in
sbb
push
sbb
mov
push
aaa
popa
loop
in
ljmp
mov
fdivrp
ret
dec
es
push
dec
push
imul
aaa
jp
das
add
xor
and
adc
dec
hlt
mov
xlat
jle
pushf
outsl
pusha
push
test
push
mov
sbb
call
or
xchg
xchg
out
mov
adc
mov
fcoms
sbb
insl
push
xor
xor
xchg
nop
inc
pusha
sbb
inc
sub
ss
pop
or
jecxz
or
mov
add
mov
inc
push
pop
clc
cmp
pop
xchg
jns
xchg
dec
pop
not
into
lds
mov
add
or
rorl
cmp
fdivr
bound
fs
lods
cmp
push
sub
fwait
jp
loope
mov
add
lea
push
ss
or
push
dec
xchg
pop
pushf
push
jne
xor
and
and
notl
pop
dec
dec
imul
mov
jb
out
or
dec
scas
push
mov
dec
pop
call
push
loopne
lods
push
dec
je
push
in
pop
or
mov
fistpl
pop
andl
cmp
fcmovb
add
and
outsb
std
inc
push
daa
ss
xor
push
sbb
and
sub
mov
hlt
xor
negl
stc
gs
inc
stc
lods
mov
jge
push
mov
dec
cmp
mov
daa
lret
adc
xorb
scas
bound
xchg
jae
or
fsubr
ret
lcall
push
cli
loopne
xchg
pop
or
call
cmp
fistl
fwait
jb
test
pop
insl
dec
lds
addl
jl
xor
in
sbb
or
or
add
inc
call
mov
jp
fucom
xchg
or
pop
xor
lods
dec
push
mov
cmp
push
lsl
je
mov
ror
xchg
sbb
insl
add
add
inc
inc
xchg
cld
xchg
mov
nop
out
inc
jo
mov
add
mov
mov
sbb
push
fists
and
jmp
fildl
jbe
idivb
xchg
das
enter
aam
repnz
xor
ret
insl
fsubrs
shr
not
add
xor
adc
ja
or
jp
mov
push
inc
cld
in
mov
or
push
mov
out
mov
sbb
lahf
xchg
mov
pop
ljmp
pop
and
lea
test
in
ret
mov
clc
mov
mov
xchg
sbb
clc
aas
out
shrb
sbb
lret
mov
dec
cmp
mov
mov
das
xor
clc
ret
pop
pusha
pop
cmp
enter
pop
fucomip
mov
arpl
lods
insb
jl
addr16
cld
cmp
xchg
mov
rcll
test
fs
jmp
add
push
or
call
inc
fs
gs
pop
push
mov
shll
lods
push
or
xor
je
or
inc
mov
add
jns
jp
cmpsb
and
mov
sub
cmp
sarb
push
sbb
cltd
sub
adc
mov
and
push
mov
adc
daa
jl
lea
pop
outsb
xor
pop
std
insb
pop
mov
popa
out
stos
adc
mov
and
imul
ss
mov
inc
js
rorb
and
sti
inc
sbb
call
pop
repz
std
mov
or
gs
jmp
mov
ja
sti
push
jmp
test
mov
and
ret
test
xchg
xchg
push
and
negb
inc
jno
jle
ja
imul
int
stos
in
push
mov
addr16
push
outsl
xor
test
ds
mov
icebp
fstpl
cmpsb
out
pop
mov
repnz
out
cmc
push
xchg
stos
jp
ljmp
imul
aam
push
pop
xor
cltd
repz
adc
in
sbb
int
shlb
shrl
lock
inc
fwait
loop
adc
push
les
pop
inc
repz
das
or
mov
inc
or
xor
fcmovbe
push
lods
xor
repz
outsl
jmp
pop
int
mov
and
in
decl
push
jmp
orb
jp
mov
or
cmp
cld
stos
testb
aad
cmpsb
mov
and
sub
shl
shlb
cmp
xchg
lock
stos
icebp
pop
les
fidivl
xor
mov
push
andl
das
cmp
rorb
ss
jmp
adc
push
jae
mov
sbb
daa
cwtl
andl
mov
outsb
sbb
popf
mov
ret
add
mov
cli
aad
std
getsec
fs
stc
movq
pop
jno
cld
aaa
pushf
mov
pop
mov
imul
push
mov
fmulp
sub
jne
jbe
pop
adc
divb
and
sti
cli
xorb
xor
jno
jo
xor
fwait
lret
js
dec
sbb
mov
mov
dec
mov
cwtl
ret
xchg
and
stos
insb
repnz
andl
pop
adc
and
dec
shl
jnp
ja
lea
pop
add
rclb
cld
aaa
cld
sbbl
and
sbb
mov
fimull
out
sbbb
dec
inc
into
push
pop
xchg
out
or
dec
sub
dec
aas
inc
shlb
xor
es
sbbb
subb
and
pusha
xlat
test
and
inc
mov
shl
sti
lock
pushl
or
mov
xchg
lods
outsl
xchg
fdivrs
hlt
outsb
xchg
and
and
xchg
jne
cmpsb
inc
add
aad
inc
and
enter
bound
imul
dec
in
pusha
das
cld
call
sub
arpl
cli
mov
inc
xor
cmpsb
or
adc
jbe
test
xchg
xchg
xchg
and
lods
fidivrs
mov
inc
in
enter
ja
scas
ret
das
xor
jno
clc
fadds
dec
test
or
sahf
sub
out
or
iret
iret
dec
mov
enter
push
lcall
outsl
into
jg
add
ljmp
fstps
adc
push
fs
nop
sbb
push
imul
das
das
pop
out
push
push
inc
adc
pusha
cmp
xor
decl
cld
outsl
shr
addl
loopne
push
inc
hlt
mov
mov
adc
jo
leave
push
cmpsl
xor
or
jl
mov
lahf
in
xor
jmp
push
fidivl
sub
add
into
xor
fistpl
sahf
sti
or
nop
and
mov
les
cmpsl
loope
lds
add
add
pop
insb
cli
and
sub
out
mov
xchg
dec
call
insb
add
cmp
sub
sub
insl
xchg
mov
cmp
mov
fstpt
movsb
popf
adc
or
push
mov
jns
dec
cs
fstpl
or
iret
pop
pop
cmp
mov
jb
in
xchg
and
sbb
out
mov
adc
in
pusha
rcll
jne
pushl
gs
adc
add
cld
movlps
jg
sbb
subb
xchg
inc
sahf
fcoms
fdivrl
jmp
jns
push
repz
add
movsb
jb
ss
push
outsb
mov
pop
xchg
or
mov
inc
or
mov
fnstcw
push
pop
out
imul
test
inc
push
or
or
adc
aam
mov
cli
and
test
mov
sbb
sub
aas
adc
mov
mov
cmp
clc
fistps
aaa
xor
rcll
aam
adc
adc
sbb
xor
cmp
xorl
lahf
mov
es
fadd
dec
movsl
adc
or
sbb
loop
jle
pop
pop
and
jne
fdivl
rolb
jp
lock
cmc
inc
enter
jl
xchg
ficoml
jmp
shr
jmp
adc
dec
cld
adc
pop
lods
add
lret
imul
jle
fwait
xchg
cmp
mov
mov
div
aaa
pop
inc
movsl
mov
dec
jbe
test
sub
stc
js
or
outsb
test
pop
xor
int3
pushf
pop
loop
lods
test
cmp
div
cmp
inc
inc
inc
jmp
dec
fistpl
push
adc
dec
ja
sbb
jo
gs
jnp
nop
mov
dec
add
call
jbe
push
outsl
adc
cs
xchg
pushl
lock
push
add
outsl
in
sti
pop
jge
ja
imul
mov
mov
pusha
mov
inc
jp
fisttps
xchg
or
popa
mov
xchg
push
mov
or
push
lds
fnstcw
mov
dec
je
lock
cwtl
pusha
jae
inc
cmc
loopne
std
lea
and
jl
and
aaa
scas
cmp
adc
xchg
push
das
pushl
or
pushf
mov
clc
push
jns
cmp
cmpsl
dec
pop
sub
pusha
pop
mov
mov
mov
sar
cmp
lods
mov
sub
mov
mov
mov
xor
cmpsb
add
jle
lahf
shll
or
sahf
outsb
pusha
xorb
xchg
mov
adcl
inc
insb
subl
jo
inc
sub
ret
mov
add
fmuls
xor
adc
adc
mov
jbe
and
ret
aas
andb
insb
sbb
dec
mov
pop
dec
adc
pop
addr16
lea
jnp
mov
cmp
mov
sbb
imul
mov
test
mov
fisttps
xchg
pop
sbb
out
testl
xchg
jns
and
push
cmpsl
pop
iret
inc
add
repz
cmp
arpl
adc
or
imul
push
rorb
xchg
or
clc
jg
popa
rorb
cmp
mov
lcall
sbb
add
sar
movsl
clc
icebp
cltd
filds
in
pop
sbb
ja
xor
nop
inc
shlb
cmp
clc
aad
inc
test
int3
adc
mov
rcrb
stc
fisubrl
insl
push
adc
add
decb
or
push
and
out
or
in
out
shrl
scas
pop
movsl
in
leave
sbb
jmp
mov
mov
popf
out
and
add
jno
add
sbb
es
insb
push
xor
pop
orb
inc
sub
lock
arpl
inc
imul
dec
inc
dec
repnz
jno
xchg
adc
out
jle
adc
mov
or
repz
leave
incb
jle
pop
xchg
orl
inc
lock
cld
jbe
vcmpps
push
out
int3
in
pop
filds
mov
xchg
pop
xchg
movsb
loop
xchg
mov
lahf
popa
mov
lock
ja
and
shrl
push
or
jo
notb
lahf
cmc
out
sub
in
lea
jno
add
cld
ficoms
addr16
or
ss
loopne
sarl
dec
lods
bound
add
cmp
ret
fistpl
mov
jne
enter
lds
inc
nop
ljmp
jl
clc
inc
cmp
aaa
mov
fnstcw
dec
add
scas
dec
les
push
jmp
sub
add
pop
in
nop
loopne
out
xor
aad
cld
loopne
fs
outsl
es
sbb
fistpll
push
mov
push
cmp
dec
cmpsb
arpl
add
dec
rol
lret
mov
into
add
das
sub
sub
shll
push
add
outsb
mov
jb
into
cmp
xor
aam
hlt
xchg
xor
jns
rorb
insb
imul
bound
xchg
lock
or
icebp
push
push
or
daa
jp
outsb
add
cld
pop
mov
cmp
cli
lcall
lock
mov
push
or
stc
inc
xor
dec
daa
cmpsb
pop
push
push
inc
or
rcrl
push
scas
cmpsb
push
andb
std
iret
or
xor
jo
push
mov
out
sbb
adc
jecxz
movl
pop
movsb
loopne
mov
enter
inc
cmp
jne
scas
jp
dec
int
xchg
sahf
jns
sub
mov
ja
cmp
rolb
rclb
neg
fsubs
movsl
inc
sbb
pop
mov
scas
push
xchg
and
std
fdivrp
rorb
or
mov
inc
dec
mov
mov
popf
aad
lret
push
sti
jb
ret
push
int3
in
mov
push
cmp
mov
rol
data16
mov
pop
dec
cs
int3
fldl
in
cmpsb
sbb
dec
adc
imul
pop
sbb
or
outsl
daa
inc
jnp
cli
push
js
lahf
cli
popa
add
sub
adc
in
movsb
push
mov
mov
rorb
jmp
andl
push
cmc
or
push
pop
cs
jmp
ret
shlb
subb
ficoml
std
leave
xchg
lods
cltd
sbb
mov
jbe
imul
xor
pop
leave
ja
jae
sub
sub
xchg
inc
sbb
pop
bndldx
sti
jns
push
pop
cmpsl
dec
ss
outsl
xchg
xchg
shrl
leave
cli
cmp
or
cld
test
adc
ljmp
out
into
js
out
pop
nop
sbb
xchg
clc
fistpl
cs
sbb
sbb
mov
cmp
sarl
insb
inc
add
push
int3
dec
into
lcall
sbb
add
and
lods
cwtl
or
aad
pushf
xchg
shrb
popf
lret
popf
pop
lret
dec
mov
into
pop
adc
add
sahf
lret
aam
cld
clc
rorb
xchg
ss
mov
in
iret
les
bound
jb
mov
mov
mov
insl
ror
test
dec
jge
out
pushf
mov
adc
orl
push
push
xor
cld
xor
mov
ret
or
dec
int
jmp
xor
ret
dec
inc
jnp
pop
push
add
push
ret
js
ljmp
je
pop
dec
pop
insl
push
daa
int
test
movsb
push
cltd
mov
sbb
clc
xchg
test
clc
out
ljmp
adc
aam
adc
add
fsubl
jo
inc
and
xchg
xchg
mov
or
imul
add
and
mov
fldt
lret
xor
pushf
and
mov
loop
insb
fmuls
test
sbb
mov
mov
cmpsl
mov
pop
xor
sti
pop
mul
jnp
mov
mov
xchg
dec
cmpsb
or
adc
hlt
fidivs
ss
or
xchg
js
cwtl
scas
loope
mov
cli
sbb
pop
mov
inc
inc
rep
ljmp
sub
cwtl
hlt
push
sub
enter
push
mov
jge,pn
xchg
adc
xlat
leave
push
hlt
out
rolb
outsl
or
or
mov
mov
jge
sbb
xor
clc
jnp
cmp
in
jbe
xor
adc
nop
test
test
cmp
push
roll
or
push
lcall
js
pop
leave
test
fnstenv
xchg
and
in
xchg
fldt
fs
cmp
cmpsb
arpl
dec
imul
inc
and
ror
ret
xor
clc
insb
xor
ja
mov
lahf
repz
mov
movsb
popl
lret
cmp
push
push
push
pop
stos
or
sub
fsin
mov
jns
cmp
pop
dec
or
push
leave
outsb
or
inc
lods
xor
ss
mov
push
jae
jmp
mov
inc
pop
lcall
fdivrl
cltd
loop
js
pop
add
in
call
adc
jb
sub
sub
inc
or
das
sbb
sbb
xor
dec
mov
ss
jl
push
cmp
and
jo
xorb
aas
hlt
and
out
xor
test
adc
jl
ret
mov
subl
fildl
xor
adc
cmp
xor
testb
mov
lcall
add
scas
test
insl
ret
cltd
and
or
sbb
pop
jbe
ja
add
adc
lret
jns
cmc
xor
outsl
xor
and
mov
cltd
lret
ja
sub
lods
sbb
jmp
mov
inc
xor
stc
jne
cmp
or
or
out
or
ss
pop
pop
or
nopl
inc
xor
push
push
xchg
mov
and
jge
jle
lds
jae
decb
icebp
xchg
orl
mov
pop
lds
inc
jl
loop
js
sbb
dec
rol
sub
inc
mov
mov
arpl
mov
xchg
sbb
out
push
mov
inc
inc
test
lods
sbb
adc
popf
jae
pusha
push
ja
loopne
fldt
gs
push
je
inc
ret
mov
cmc
jg
shl
add
pop
cld
lcallw
hlt
lods
jp
ret
mov
mov
jae
xchg
fistps
or
cmpsb
pop
cwtl
int
mov
xchg
add
pop
call
mov
jne
cs
jmp
inc
xor
rcr
jg
xchg
mov
lea
or
sbb
idiv
mov
sbb
je
mov
movsb
sub
int3
pop
mov
sub
push
jmp
lret
movl
xorb
mov
jns
push
ljmp
jae
lcall
movsb
xor
pop
insl
test
adc
pop
aaa
mov
rclb
in
add
jo
lea
lea
or
jle
je
loopne
std
sbb
scas
and
iret
mov
loope
roll
and
sbb
sbb
xor
sbb
mov
call
mov
or
and
add
push
or
jge
xchg
leave
je
mov
adc
jl
inc
stos
push
xchg
and
outsb
push
cmp
cmpsl
outsb
stos
cs
insl
ss
divb
add
ficompl
test
enter
stos
xor
xchg
sub
xchg
adc
repz
and
and
push
xchg
mov
orb
imul
mov
xor
lock
pop
faddl
aaa
fsubl
call
mov
or
mov
lret
or
popl
jg
and
loopne
add
add
arpl
pop
mov
shr
mov
lcall
test
and
leave
test
pushl
mov
stos
jo
dec
ficompl
loope
popa
enter
sbb
mov
in
jbe
xchg
outsl
insl
or
and
jnp
mov
inc
int3
jle
mov
jmp
cmp
mov
sahf
mov
or
add
push
mov
mov
dec
dec
sti
gs
cmpsb
xchg
inc
bound
jl
dec
lcall
imul
sbb
mov
loopne
inc
xor
push
iretw
push
outsl
shr
mov
jle
fcomi
xchg
push
xor
add
stos
rolb
jnp
sub
push
mov
or
pop
jmp
shrb
mov
pushf
nop
mov
pop
lds
adc
dec
test
inc
mov
jne
and
pop
ss
jg
in
scas
adc
loope
inc
sbb
loope
xor
xchg
lods
adc
movsl
rcrb
stc
push
adc
pop
les
and
cmp
push
sub
dec
jp
cltd
jno
data16
add
mov
enter
sbb
push
add
sbb
out
enter
sarb
xorl
mov
mov
jbe
icebp
jne
and
mov
dec
jnp
sbb
int3
inc
mov
lea
jp
xor
pop
cmovae
xchg
insl
push
adc
jo
cld
xor
into
lret
mov
or
gs
rcll
jp
movsl
xchg
sahf
inc
cmp
mov
xchg
in
xchg
pop
into
push
movb
adc
clc
inc
add
inc
push
pop
mov
aam
shlb
test
dec
mov
sarb
pop
xchg
fld
out
and
jo
scas
adc
add
scas
or
mov
cmpsb
mov
jnp
nop
pop
sbb
stos
xlat
nop
test
push
adc
and
cmc
push
test
or
mov
loop
insl
pop
mov
stos
pushf
mov
sbb
adc
xchg
pop
adcb
fsqrt
xor
ss
push
jbe
test
or
stos
pop
insb
rolb
ja
sub
stc
lods
sbb
ret
add
pusha
sti
ficoms
push
mov
sbb
or
outsb
jp
loopne
sahf
dec
xchg
jle
dec
sbb
test
icebp
in
sahf
popa
aaa
les
imul
fistpl
cmp
jb
cltd
inc
dec
aad
sti
pop
xchg
mov
cmp
lods
dec
shl
sbbb
xor
andb
stos
fcomi
js
es
inc
xchg
push
insb
aas
and
sub
mov
pop
mov
mov
sbb
adc
insl
in
jae
jl
mov
push
jge
repnz
inc
mov
loope
lds
xchg
std
pop
push
push
cmp
pop
cmpsb
or
sbb
push
fs
pop
adc
lods
jne
pop
pop
mov
adc
pushl
mov
or
gs
ss
insb
test
xor
ss
push
je
mov
popl
cmp
push
movsb
verr
test
roll
mov
push
fstp
ret
sub
mov
sub
adc
mov
je
inc
jl
push
ret
in
mov
fdiv
xchg
jns
sbb
or
cltd
lret
adc
xor
rclb
sbb
test
push
adcl
pop
js
movsl
mov
mov
jne
mov
sub
xor
leave
xchg
pop
lret
scas
shll
insb
push
mov
in
std
movsb
push
cmp
jae
sbb
popf
mov
mov
sub
jno
insb
lock
pop
dec
dec
sbb
rorl
outsb
adcb
dec
hlt
xor
das
sub
or
ret
lcall
and
cmp
mov
jle
call
lea
jl
sbb
jge
pop
push
and
lahf
in
rolb
aam
dec
ret
xchg
movsl
pop
cmp
movsb
xchg
scas
jbe
out
test
cmp
popa
clc
dec
pop
rcr
sahf
cs
test
jecxz
push
int3
insl
jmp
mov
sarb
cmp
xor
call
divl
mov
mov
sub
jbe
movsb
aaa
xorb
aas
and
dec
or
or
jmp
mov
in
loopne
dec
rorb
in
pop
xor
jo
imul
scas
inc
call
ja
out
test
ja
push
test
inc
lods
lock
dec
xor
cmp
loopne
pop
or
nop
stos
icebp
or
adc
lcall
push
rolb
stos
js
cld
and
icebp
xor
rcll
ret
lea
jmp
xor
push
adc
pop
mov
xchg
nop
popf
xor
gs
jp
sbb
push
push
aam
shll
ret
and
pushf
xchg
jo
push
in
scas
add
pop
shlb
mov
xor
inc
clc
mov
cltd
fisubrs
and
int3
call
add
pop
push
xchg
xchg
adc
rol
pop
inc
pusha
mov
fidivrs
popf
adc
js
jmp
daa
dec
lods
push
push
aaa
scas
mov
or
insl
icebp
test
inc
xor
pusha
std
inc
sub
dec
int
pop
add
shl
insb
pop
xor
add
pop
or
shl
xchg
jl
cli
push
push
mov
sbb
dec
mov
test
jp
addb
int3
dec
mov
in
aaa
or
dec
movsb
adc
jp
xchg
xor
adc
lret
mov
xchg
xor
jnp
adc
adc
or
bound
clc
scas
pop
sbb
roll
das
cmp
cmc
push
sub
cwtl
cs
xchg
pop
shr
adc
adc
lret
stc
cmpsl
jo
push
insl
and
cmp
idivb
stos
or
adc
movsl
cmpb
out
dec
pop
dec
lcall
in
imul
jmp
mov
sbb
stos
in
push
cmp
pop
add
pop
sub
xchg
jnp
ret
cmp
push
xor
test
push
outsl
fsubs
pushf
pop
cld
lock
pop
scas
or
incl
insb
mov
ljmp
daa
imul
in
rol
xchg
or
dec
inc
mov
jle
das
dec
aam
jge
push
aas
dec
lods
aas
push
jne
rolb
movsl
sti
push
jp
popf
cmp
and
cld
mov
shrb
lret
decl
push
test
aas
adc
cmp
jmp
in
or
cmp
cmp
pop
sbb
pop
shlb
incl
cmp
adc
imul
jo
inc
push
divl
adc
sbb
cmpsb
les
pop
xor
dec
cli
push
jl
pusha
mov
add
mov
clc
adc
lds
or
mov
je
xor
jg
sarl
sbb
push
dec
add
or
dec
ret
mov
and
mov
dec
inc
fcoml
negl
aam
jmp
icebp
loopne
and
outsb
stos
adcl
in
jecxz
pop
mov
insb
adc
mov
clc
adc
mov
adc
adcb
jge
push
add
std
xchg
ja
lock
and
and
stc
fbld
loopne
iret
outsb
addl
in
or
leave
mov
push
mov
cmp
adc
pop
js
and
lcall
popa
jns
push
pop
and
rolb
sub
or
mov
ficoms
pushf
jae
je
in
andl
enter
stos
pop
xchg
insb
sti
ret
mov
lods
pop
jp
shlb
adc
sbb
mov
push
imul
jle
in
mov
dec
dec
sub
add
inc
pop
cmpsb
cmp
lea
mov
aam
adc
mov
mov
daa
ja
adc
lods
mov
incl
imul
test
xor
and
jle
je
xor
jne
jbe
xchg
es
mov
or
push
add
rcrb
sub
prefetcht1
xor
aaa
lea
imul
sub
xchg
sahf
mov
pop
push
and
popa
sub
dec
jns
sub
test
movsb
lea
mov
sbb
mov
lods
mov
rorb
insb
cmp
pop
dec
test
ds
out
insb
outsl
cmpsl
pop
loop
insl
lea
xlat
nop
push
inc
cmp
dec
arpl
cmpb
mov
test
jo
inc
cld
or
mov
les
addr16
insl
cld
es
cmp
pusha
sbb
fsubrl
shlb
push
loope
in
ret
inc
dec
test
pop
sbb
pop
jbe
xor
pop
push
scas
or
sub
outsl
lods
lahf
mov
mov
jmp
call
mov
xchg
cmp
inc
cmp
lods
scas
cmp
imul
cmpsl
std
rcrl
sar
and
and
or
call
mov
lea
arpl
and
or
ds
push
testb
and
jne
jno
add
inc
sub
test
xchg
ss
and
cmp
aam
mov
mov
pop
push
push
sarb
jbe
mov
loopne
int
push
cmpsb
in
dec
fidivs
jge
adc
sahf
test
je
mov
xchg
add
popa
loopne
cltd
insl
into
jno
mov
inc
scas
jg
aaa
sbbl
push
in
sbbl
les
or
aad
sbb
roll
push
mov
add
cltd
popf
add
sub
jecxz
fimuls
arpl
or
mov
into
cmp
dec
cmp
dec
cmovne
or
and
mov
dec
sub
jp
out
cmpl
rcl
es
mov
test
inc
mov
test
dec
mov
push
dec
pop
ss
jno
cmp
sub
sti
push
daa
les
divb
bound
and
imul
shrb
cld
lret
add
adc
sti
int
enter
sbb
dec
inc
dec
fwait
push
ss
cmpsb
and
call
sbb
adc
rorb
in
mov
and
popa
xor
addl
ljmp
pop
lods
outsb
mov
fidivl
pushf
add
inc
outsb
lds
adc
dec
sub
push
or
mov
sarb
adc
and
shrl
lock
lods
mov
mov
mov
adc
push
in
sbb
lock
or
insb
aas
loope
mov
or
ds
adcb
fidivs
lods
es
das
je,pn
inc
adc
es
sub
rcl
nop
or
gs
adc
scas
outsl
sbb
imul
leave
movsl
cmpsb
push
xlat
in
bound
mov
cmpb
or
push
fs
fimull
mov
test
mov
cmp
pushf
mov
mov
adc
fwait
dec
adc
cmp
add
jb
mov
and
adc
dec
test
loope
cmp
lock
pop
and
mov
lahf
pop
je
lds
jp
or
lods
xchg
mov
test
pop
addl
insl
or
movsl
test
je
xchg
inc
pop
in
js
mov
es
and
adc
mov
push
lock
xchg
es
inc
imull
mulb
inc
cmpsb
pop
jbe
lods
cmpsl
mov
sti
ret
add
leave
pop
test
xor
int
shl
xor
sbb
xor
cmp
or
lock
fmull
lods
jbe
cmpb
pop
insl
inc
pop
xchg
jmp
mov
mov
pop
sahf
pop
mov
ret
push
cwtl
je
lcall
mov
fisttpl
cld
jae
inc
adc
jl
pushf
inc
rolb
shrl
stc
into
mov
xchg
ret
cs
cs
pop
out
fdivr
or
std
cmp
sbb
fiaddl
add
mov
pop
cmp
jge
inc
in
loopne
shlb
ret
inc
and
mov
aas
ret
or
jecxz
mov
addl
xor
movsl
cmpsl
pop
addl
push
sub
mov
push
test
sub
dec
testb
subb
or
call
inc
jl
bnd
in
dec
jmp
lret
cmp
clc
cmc
mov
xchg
mov
shrb
popf
movsb
lock
sub
sbb
test
xlat
scas
je
int3
push
adc
stc
cwtl
shlb
adc
ret
push
dec
test
dec
add
or
jbe
movsb
sub
andb
mov
std
mov
cld
inc
aaa
mov
test
sub
sub
pop
stc
in
sbbl
mov
pop
pop
cmpl
xchg
test
or
test
or
mov
cmc
fisubrl
repnz
adc
fists
xor
test
mov
andb
loopw
dec
shlb
or
fcmovbe
push
fs
insb
adc
xor
mov
jmp
pop
push
orb
rcrl
pop
loopne
ds
gs
xchg
mov
insl
loope
mov
inc
sbb
sbbl
fdiv
xor
adc
pop
push
xor
sbb
push
pop
mov
sbb
in
sub
mov
mov
inc
or
push
aas
loopne
pop
int3
lahf
inc
int3
add
loopne
jno
and
in
or
push
lcall
cmp
mov
cmp
out
add
cwtl
ds
xor
loop
jns
ds
int
fsubrl
adc
pop
in
sub
or
bound
cmp
adc
mov
xor
out
cmp
shlb
or
test
mov
adc
fwait
imull
into
in
add
lahf
push
push
mov
mov
int3
loop
std
fadd
or
push
jbe
jae
insb
mov
cmp
jno
xor
outsb
popa
in
xor
mov
fiaddl
inc
icebp
and
scas
pop
cmp
in
mov
push
mov
rol
rcll
and
jbe
push
sbb
add
jmp
xor
pop
adc
movsb
jb
into
or
lahf
loopne
xor
pushf
xor
adc
leave
shrb
andl
mov
pop
sub
push
mov
daa
mov
mov
call
cmp
cli
cmp
mov
push
negb
pop
aaa
xchg
in
mov
add
sti
ret
add
in
les
mov
jge
cmp
clc
adc
out
in
in
outsl
jno
insl
fadds
dec
add
adc
sub
add
std
movsb
clc
and
lret
push
mov
xor
lock
jno
dec
push
sub
addl
jmp
cmovl
pop
cmpl
jg
outsb
xchg
add
add
xchg
cmp
lahf
or
jne
jmp
fs
jp
xchg
mov
scas
fidivrl
cmpsl
pop
or
mov
pop
add
or
outsb
lahf
xchg
and
fimuls
popa
pop
shl
cld
jmp
std
xor
hlt
cmc
xor
fsubl
ds
xor
hlt
pusha
xchg
orb
rcl
xchg
xor
xor
push
stc
dec
rcll
sti
inc
cmp
jne
loope
mov
or
daa
and
lcall
jl
sbb
xor
and
xchg
or
adc
push
mulb
insl
sub
lahf
rorb
or
sub
sbbb
or
je
cmp
sar
js
adc
orb
je
push
repnz
add
jno
test
cwtl
mov
daa
cltd
cmp
xchg
enter
pushf
outsb
addr16
les
ret
mov
test
pop
mov
sbb
in
mov
push
cmp
mov
movsl
arpl
nop
lds
int3
lahf
std
sar
cmp
cmp
inc
add
lock
lds
mov
jb
jge
cmp
mov
jbe
and
push
add
movsl
out
push
jecxz
popa
cwtl
ds
fnsave
mov
fldl
arpl
add
mov
cmp
lahf
cmp
test
xrelease
fwait
iret
cmc
lret
shlb
mov
jns
adc
xchg
nop
jae
adc
cltd
push
adc
adc
subl
push
xchg
sar
and
mov
nop
xchg
shlb
cmp
mov
jb
pop
js
mov
in
mov
mov
or
or
rcrb
xlat
xor
sbb
sub
cmp
mov
popf
push
jns
xchg
js
aas
push
pop
or
insb
cmpsl
mov
dec
xor
popa
inc
jmp
or
inc
mov
popa
aam
leave
ret
cmpsb
cltd
pushf
dec
andb
pop
insb
fpatan
inc
adc
pop
xchg
fildl
adc
leave
call
cmp
mov
jg
cmp
aas
dec
int3
xor
pop
pop
mov
call
clc
mov
xchg
xor
push
sub
je
add
cli
dec
xor
daa
leave
and
jmp
fstl
and
jl
pusha
nop
arpl
mov
cmc
arpl
mov
scas
jle
xchg
sbb
add
xchg
mov
insl
cli
stos
into
insl
jmp
or
xor
divb
mov
xchg
mov
in
imul
aas
icebp
push
jns
stc
addr16
aad
jno
and
sbb
jae
inc
jp
shl
movsl
mov
push
xor
test
and
xor
test
pop
jecxz
xchg
dec
jb
jge
nop
and
cmp
mov
push
repnz
aaa
ffreep
sub
inc
push
fs
repnz
adc
lahf
or
enter
pop
cmc
xchg
nopl
inc
loopne
jmp
mov
jb
and
pop
mov
outsl
mov
fcoms
mov
add
adc
jg
and
orl
insb
mov
jo
cmp
dec
aas
jle
jnp
jns
call
pop
pop
sti
clc
jp
push
mov
add
fcmovnbe
enter
out
pop
add
aam
test
flds
or
fnsetpm(287
xor
inc
icebp
jle
add
xchg
pop
adc
mov
lods
imul
pop
pushl
pop
popf
add
test
sbb
je
add
cmp
dec
cmp
adc
outsb
dec
inc
and
repz
repnz
dec
fadds
js
dec
and
test
imul
ljmp
cwtl
adc
adc
cmp
jge
sub
addr16
and
rcrl
xor
stos
iret
dec
fcompl
imul
pop
lds
jp
pop
add
pop
xchg
push
dec
int
dec
push
fwait
or
sub
jne
lcall
ret
rol
ja
sbb
sub
adc
sbb
push
jns
shlb
push
pop
notb
dec
cmp
out
cmovo
popa
ret
aam
and
shll
xor
enter
inc
aas
push
hlt
fdivrl
stc
xlat
push
and
sbb
push
loopne
xor
xchg
mov
into
and
popa
movb
add
hlt
or
loope
data16
adc
jne
je
mov
lret
gs
xchg
xor
xchg
sub
shr
insb
dec
pusha
or
pop
jge
out
xor
push
cmp
lock
rcrl
pushf
cwtl
mov
or
add
jle
lds
stc
sub
ret
bswap
je
hlt
roll
and
add
sbb
add
lret
mov
mov
xchg
cmp
je
mov
pop
pop
jb
pop
cmc
jecxz
das
xchg
aas
push
jl
aaa
outsb
jl
jb
inc
lcall
cmp
dec
mov
cmp
sub
xchg
dec
mov
add
stos
stos
dec
add
inc
arpl
and
data16
push
rclb
dec
cs
ljmp
xor
cmp
fldenv
push
xchg
cmp
mov
or
dec
xchg
adc
mov
xchg
pop
pop
into
out
dec
clc
push
fwait
cwtl
les
pop
cwtl
sbb
sbbb
fidivs
nop
xor
dec
mov
es
bound
daa
fldt
cmpsl
adc
test
sbb
jns
or
xchg
jno
scas
mov
clc
mov
dec
xchg
or
fisubrl
mov
outsl
popf
sub
lock
and
push
push
push
jge
gs
inc
sub
xor
jecxz
mov
pop
xchg
aam
inc
jo
fcomps
push
popf
clc
lcall
mov
push
cld
add
in
popa
fldt
push
cld
mov
mov
ret
sub
or
popa
repnz
xchg
sub
test
jmp
inc
repnz
xor
adc
sub
fisttpl
fisttps
out
clc
xor
dec
mov
loope
mov
inc
icebp
sub
call
xor
sarl
pusha
loop
push
xchg
mov
xchg
stc
es
cmpsb
movsl
ret
push
insl
aaa
inc
push
inc
jb
repz
das
push
xchg
xchg
lds
pop
out
fdivrp
mov
adc
lea
xor
cmp
xor
imul
adc
test
and
fstps
xchg
or
int
data16
addb
lock
push
mov
je
xor
popf
pusha
gs
pop
test
mov
push
pop
iret
mov
js
jno
inc
mov
adc
jo
aam
pop
lahf
pushf
clc
sub
pop
outsb
and
loop
pushf
push
vdivss
mov
sarl
outsb
push
xlat
mov
in
mov
imul
mov
incb
and
cli
push
xlat
pop
inc
mov
or
sbb
pop
dec
mov
xlat
inc
ss
mov
pop
mov
mov
jb
sub
mov
xorl
pop
std
je
cmp
cltd
sub
mov
add
adc
inc
ror
dec
mov
push
mov
push
cld
and
adc
push
insb
mov
xchg
aam
aam
subl
adc
or
inc
jnp
mov
in
ret
insb
xor
arpl
mov
fstl
in
aam
sar
xchg
pop
andb
and
push
sbb
mov
dec
cmp
das
dec
pop
std
aad
push
clc
lods
xor
cmp
pop
and
shll
pop
mov
stos
test
jo
popa
mov
subb
lods
lcall
cmp
pop
cmpsl
or
mov
clc
sbb
dec
in
insb
xor
inc
dec
xor
jle
push
cmp
cmp
add
and
inc
pusha
fadd
mov
mov
mov
add
xor
pop
mov
insl
xchg
xchg
fs
es
fs
pop
stos
push
jg
shl
dec
push
insb
and
repnz
inc
arpl
cmpsb
dec
scas
pop
pop
imul
mov
sbb
lahf
add
xor
clc
in
push
lock
in
dec
mov
jno
xor
push
or
xchg
cmp
adc
jb
outsb
mov
and
mov
jl
mov
sbb
in
sbb
stos
setae
or
jp
inc
mov
insl
pop
or
cmc
mov
xchg
and
dec
imul
pop
pushf
adc
xchg
sbb
xchg
repz
lret
add
and
cld
mov
inc
scas
scas
das
inc
aas
fidivrs
inc
and
and
xor
cmp
or
and
or
xlat
and
sbbb
pop
adc
sarl
or
nop
pusha
js
mov
enter
mov
mov
jl
pop
ror
inc
mov
cmp
pop
mov
push
cmp
aaa
ret
push
mov
decb
and
sbb
mov
cmp
adc
bound
lds
sbb
jle
adcl
fisubl
fnstenv
out
mov
inc
pop
sbb
js
push
bound
fbstp
jl
jne
or
fs
out
sbb
dec
ja
aad
jl
push
fdivrl
insl
pushf
jbe
push
pop
xor
pop
add
push
adc
dec
sbb
mov
inc
add
loopne
data16
outsl
dec
movsb
jg
sbbb
jb
mov
fidivs
push
mov
or
inc
add
mov
adc
cmp
jecxz
sahf
mov
adc
inc
or
insb
arpl
xchg
clc
bound
lret
psrlw
jno
push
sarb
xchg
jmp
inc
or
inc
add
pop
cli
aas
mov
sbb
loop
add
inc
out
inc
dec
fwait
pop
loope
or
xchg
jge
inc
xchg
xchg
xsha256
cmpsb
xchg
xor
ss
int3
repz
mov
popa
nop
and
shll
jmp
and
or
adc
xchg
lcall
repnz
dec
xchg
push
add
mov
in
cwtl
and
xchg
lret
sbb
cli
outsb
enter
mov
shll
jl
sahf
pop
es
pop
mov
das
dec
dec
push
xchg
cmp
bound
in
mov
inc
adc
pop
xor
xor
pop
call
pop
ror
xchg
xchg
and
pusha
cltd
popf
arpl
cmp
cmc
lods
into
inc
push
sub
sub
mov
add
outsb
pop
je
xorl
hlt
cmp
and
sahf
lods
or
mov
fisttpl
loope
fldenv
mov
mov
loopne
idiv
insb
test
pop
pop
sub
movsl
das
push
or
push
subl
leave
adc
and
std
adc
xchg
lods
dec
lcall
cmp
cmp
jae
fadd
and
pop
mov
fimull
add
aaa
jbe
mov
in
std
aam
pop
or
out
lock
les
pop
sbb
xor
push
xchg
scas
ja
add
or
shll
sti
repnz
call
ud0
xchg
loop
fwait
test
les
push
loopne
orl
loop
insl
pushf
icebp
adc
arpl
gs
fcomps
imul
stos
adc
mov
sti
iret
cli
and
movsl
xor
je
jl
add
and
cwtl
ljmp
xor
push
xlat
pop
sbb
loope
mov
cltd
in
add
hlt
and
cmp
ret
mov
mov
popa
dec
loop
fists
call
das
cmp
popf
or
sbb
add
sbb
xchg
jg
push
mov
cwtl
out
je
in
imul
adcl
cmp
movsb
loopne
jg
mov
cmpsb
mov
mov
test
sbb
push
jecxz
add
cs
fsub
mov
stc
mov
mov
rolb
mov
js
push
pusha
in
sbb
and
mov
or
add
add
frstor
jne
mov
icebp
je
sbb
or
es
cmp
mov
mov
addr16
insb
adc
fisttpll
bts
adc
push
mov
movsb
sub
jb
mov
cmovbe
add
pushf
sbb
dec
lods
subl
sar
hlt
jmp
inc
push
sbb
push
loopne
cld
mov
movzwl
loopne
mov
rcll
or
xor
and
movsl
stos
and
rcll
xchg
xchg
dec
add
inc
mov
imul
mov
cmc
enter
iret
fwait
lea
or
xlat
mov
mov
adc
pop
adc
lret
or
pusha
dec
fwait
or
into
mov
iret
add
jle
add
loopne
mov
cmp
mov
dec
mov
xor
add
je
xchg
fs
inc
jne
nopl
xor
add
in
mov
int3
jns
or
out
sub
and
xor
dec
mov
scas
dec
outsl
outsb
iret
inc
ret
push
dec
imulb
cli
xor
arpl
ret
ss
mov
adcl
lock
push
or
mov
xor
es
inc
data16
adc
inc
daa
xor
outsl
cmpsb
neg
cmc
por
pushf
fdivl
in
adc
or
insl
mov
push
dec
xor
jmp
test
imul
pop
mov
push
sbb
sub
mov
jg
jae
cmp
xor
pop
jo
or
das
sbb
or
in
ja
stos
sbb
mov
fsubrs
clc
xlat
xchg
sub
push
or
or
jb
subl
pop
mov
arpl
in
call
and
jle
xor
push
and
std
pop
ss
jge
jmp
stos
or
mov
inc
subb
xchg
xchg
sub
out
xchg
cmp
testl
xchg
inc
adc
mov
jle
sbb
movsl
js
or
int3
adcb
push
jecxz
cmp
loop
out
mov
dec
ret
or
jecxz
or
inc
mov
pop
push
and
sub
out
filds
push
xor
jbe
cmc
test
xor
xchg
add
stc
push
inc
push
pop
cmp
lock
imul
lea
pop
pop
pop
ret
cld
fnop
cmp
das
outsl
sub
fisttpl
and
je
xchg
fildll
or
sbb
push
sub
and
add
shll
out
shll
lret
daa
rclb
xorl
std
xor
pop
repz
push
xchg
loop
pop
ret
not
out
cld
cmp
inc
add
push
cmp
jbe
repnz
push
js
popf
and
add
and
scas
hlt
mov
dec
lea
xchg
sbb
out
shrb
jnp
mov
push
sbb
xor
pop
repz
dec
pusha
mov
test
mov
pop
push
ficoml
mov
stos
cmp
std
and
shlb
loope
xor
stc
mov
imul
enter
adc
sub
andl
push
in
lahf
iret
adc
hlt
adc
or
pop
sub
jns
jne
sub
dec
adc
mov
packssdw
xchg
les
fwait
dec
sbb
mov
daa
mov
cs
rol
jns
and
mov
aas
bts
xor
jae
lds
pop
shrb
pop
cmp
insb
push
pop
sub
or
test
jp
loope
adc
or
mov
and
jg
pop
add
or
jle
scas
aas
pop
fcom
pop
push
ljmp
inc
scas
sub
and
pop
inc
mov
jmp
push
push
jl
sbb
or
gs
ret
and
pop
pop
jns
push
insl
adc
jo
adc
sbb
jne
push
and
cmp
test
sti
xor
mov
stos
scas
dec
repnz
out
xchg
lahf
ret
adc
push
xchg
loopne
mov
dec
pop
add
mov
adc
sub
mov
pop
mov
mov
and
push
ret
aas
push
movsl
popf
push
add
sub
mov
cmp
leave
inc
mov
jne
and
xor
dec
inc
cs
inc
push
push
daa
lods
xchg
adc
bound
outsl
pop
push
arpl
dec
jo
insb
mov
jle
lock
sbb
or
adc
outsb
iret
push
pop
push
addr16
scas
cltd
add
mov
sub
mov
cld
pop
mov
inc
push
in
or
push
push
fimull
lock
shlb
or
inc
adc
xchg
clc
push
loopne
aam
mov
mov
std
mov
dec
rorl
jnp
cmp
enter
cli
icebp
notl
das
mov
enter
mov
or
out
sbb
rcrb
xor
test
orl
gs
sub
imul
bound
iret
lahf
ret
inc
inc
mov
dec
clc
adc
cmp
inc
ja
mov
addb
mov
dec
sahf
pop
mov
popl
jo
rol
repnz
pop
pop
jne
xor
adc
adc
mov
test
lods
jle
push
adc
xor
or
and
je,pn
dec
xchg
adc
lock
ja
leave
add
outsl
dec
push
bound
divb
cwtl
mov
adc
jge
sub
mov
repnz
sti
lock
xor
ljmp
adc
xchg
dec
or
sbb
stos
fwait
mov
and
imul
out
mov
test
jno
test
cld
lods
sbb
enter
ret
mov
sbb
iret
jp
fimuls
js
pop
rorb
push
iret
lahf
lock
and
jecxz
or
js
push
pop
sahf
fbld
jle
test
xor
cs
popw
push
aad
xor
sub
testb
rol
pop
data16
movsb
fs
jno
aaa
rorl
xchg
pop
mov
add
inc
push
push
push
hlt
mov
in
add
pop
inc
mov
sub
cmp
pop
adc
mov
or
scas
mov
push
xlat
cld
mov
mov
stos
or
loop
and
ds
lock
cmp
addb
subl
mov
add
dec
adc
outsb
js
xchg
dec
and
rcrl
mov
mov
imul
cltd
and
ret
add
lret
inc
cmp
mov
ds
add
clc
mov
cmp
push
or
addr16
cld
mov
push
push
cmp
fdivs
es
cli
pop
das
add
mov
ret
adc
fbstp
fs
jnp
inc
add
jo
pop
push
stos
sbb
mov
pop
adc
addr16
add
xor
cmpsl
outsb
loopne
cmpsb
jecxz
in
xchg
arpl
outsl
into
inc
sub
es
or
sbb
adc
add
sub
dec
pop
daa
mov
push
add
leave
jmp
inc
je
cmp
mov
inc
cmc
push
fstl
xor
jge
inc
and
and
repnz
pop
mov
xor
adc
mov
mov
call
fmuls
mov
sbb
outsb
mov
adc
push
ja
or
fisubrl
and
push
jbe
inc
mov
cmp
jno
out
push
fs
pushw
stc
shr
jle
sahf
lods
call
pop
dec
aaa
jno
push
stc
add
stc
push
cmp
les
js
test
cmp
or
addr16
cmp
adc
leave
mov
cmovbe
add
sub
pop
add
cs
add
push
xor
in
adc
inc
xchg
call
popa
push
fisttpl
push
fidivl
mov
rol
dec
sub
mov
adc
mov
and
int
in
les
add
loopne
cmp
mov
std
cmc
dec
mov
cmc
or
fimull
xor
xchg
cmp
pop
mov
les
xor
popf
dec
add
mov
lret
hlt
cld
mov
loopne
cmp
inc
adc
jae
and
test
rorb
popf
daa
mov
outsl
or
or
andb
cmpsl
jmp
aad
push
xchg
rclb
pusha
jnp
push
push
dec
aam
cmp
inc
insl
mov
into
jo
mov
jge
push
dec
movsl
xchg
xchg
pop
mov
and
inc
lock
mov
arpl
add
sarb
jb
jp
es
lahf
jge
mov
mov
push
push
sbb
push
pop
bound
dec
test
mov
push
lock
notb
pop
icebp
jae
lea
addr16
sahf
inc
pop
stos
cli
xlat
sub
jl
dec
sub
shlb
aas
and
adc
mov
repz
mov
dec
decb
lahf
sbb
iret
mov
adc
lcall
subb
hlt
aam
lods
inc
inc
dec
adc
lret
push
xchg
dec
int
push
mov
jne
insb
dec
mov
sbb
mov
cmp
xorb
jno
jo
popa
push
and
test
pop
sub
popa
xor
xor
mov
es
std
add
ret
xchg
and
adc
sbb
pop
nop
test
mov
xchg
sbb
std
adc
push
jns
adc
pop
ficomps
pop
cmpsl
xchg
jo
sub
icebp
adc
fildl
pushf
rcrb
rorl
insl
pushf
sbb
pop
xor
jmp
outsl
pop
inc
inc
jmp
inc
subb
mov
loopne
int
sub
and
icebp
or
fwait
sahf
test
pop
push
mov
pushf
dec
ljmp
mov
pop
adc
dec
inc
and
or
testb
push
mov
sbb
jae
lods
add
add
ja
xchg
cmp
ljmp
call
dec
push
pop
out
add
xchg
xor
stos
push
dec
sub
pop
dec
int3
cmpsl
rcr
shlb
negl
xchg
and
addr16
xor
loope
jnp
push
add
out
cmp
in
fistpll
leave
lcall
or
xchg
fcom
sbb
push
scas
dec
repnz
adcl
cmp
add
dec
push
or
dec
lgs
and
adc
dec
or
sub
pusha
pop
fstl
sub
mov
bound
aam
xor
xchg
push
pop
mov
mov
mov
int3
inc
jecxz
daa
je
mov
and
stc
cld
or
lret
sub
test
outsl
cld
outsb
pop
clc
ljmp
cltd
enter
lds
ljmp
adc
xor
jne
std
add
xor
imul
dec
test
sbb
sub
hlt
lock
adc
mov
out
add
pusha
adc
std
and
sti
in
mov
repz
lods
fs
mov
push
push
jmp
test
mov
rcll
sbb
lcall
sbb
scas
adc
das
mov
outsl
fwait
aad
cmc
xchg
dec
imul
push
inc
out
mov
add
adc
jnp
jmp
pop
imul
test
xchg
call
adc
insl
loope
cmp
pop
fldl
shll
xor
xor
xor
mov
add
or
stos
xchg
mov
inc
cwtl
orb
or
imul
lahf
hlt
pop
mov
fcoms
adc
or
mov
mov
mov
mov
lret
xor
push
jno
mov
jne
or
sti
test
shll
sub
push
pop
call
aam
sarb
rorl
mov
mov
xor
push
das
call
xor
push
nop
sbb
and
pop
mov
loopne
mov
push
cmp
and
inc
pop
jg
movsb
testb
push
jae
xchg
mov
cmp
jb
cli
loopne
pop
inc
pop
sbb
clc
daa
lock
dec
mov
cltd
sbb
push
mov
xor
sub
inc
pop
call
dec
lcall
call
inc
mov
jnp
pop
sub
adc
iret
movsl
mov
dec
and
sbb
cmp
push
jecxz
jns
mov
push
push
in
xor
push
pop
adc
adc
push
fstpl
inc
dec
sarl
mov
test
and
fucomi
lret
sbb
jae
inc
out
je
enter
mov
inc
inc
sub
stc
ds
dec
outsl
mov
inc
cmp
ljmp
mov
lret
jecxz
pop
jno
sub
dec
pop
pop
or
es
or
mov
int3
cmp
in
daa
out
xchg
jmp
mov
lahf
pop
shlb
sbb
xchg
aaa
dec
rcr
mov
aam
ja
sbb
sbb
cmc
lds
popa
xorb
jle
testl
out
push
sub
loopne
xor
pop
je
idivl
adc
lods
loopne
lods
sbb
dec
ja
shll
jnp
xor
adc
lret
jno
shll
call
dec
xor
std
in
ljmp
in
loop
sub
mov
mov
dec
cwtl
scas
mov
inc
mov
cltd
cmp
std
mov
clc
xor
mov
out
adc
aad
cltd
iret
lcall
loop
rorb
sarl
icebp
xor
or
arpl
movsl
pop
shlb
mov
sub
mov
rorb
jge
daa
xor
movsl
push
movhps
mov
test
mov
adc
lea
stos
aam
sbb
shlb
fiadds
ss
jno
pop
cmp
xchg
and
out
aam
stos
jo
xchg
in
popf
lret
push
add
in
xchg
movsb
iret
aaa
fcmovu
mov
cli
jmp
movsl
cmc
addb
inc
pusha
pop
pop
fisttpl
mov
dec
insb
mov
fdivl
xchg
or
adc
addl
pop
test
xchg
push
and
mov
mov
xchg
lods
movsb
orl
rcll
add
test
mov
mov
out
and
pop
outsl
rolb
out
pop
pop
loopne
or
add
out
and
aad
xor
mov
cwtl
shlb
pusha
shrl
add
adc
stc
enter
out
movsb
leave
pop
insl
push
mov
sub
jmp
sub
mov
pop
jae
and
add
adc
lods
outsl
push
mov
mov
cmp
sbb
xor
sarb
fldcw
inc
lock
mov
cmp
stos
daa
dec
adc
mov
in
orl
popa
jecxz
sbb
scas
mov
adcl
sub
int
ret
push
data16
aas
mov
cs
push
inc
push
lds
or
test
and
inc
clc
jbe
scas
icebp
mov
and
adc
dec
xchg
loope
and
and
pushf
ljmp
push
sub
sbb
hlt
cli
aad
in
xchg
std
xor
cmpsl
lret
dec
mov
and
ss
stos
add
mov
frstor
xor
jg
cld
in
jle
fsts
dec
cmpb
dec
ret
sbb
aas
jmp
ret
mov
testb
mov
sub
aaa
lea
imul
push
std
lea
dec
jo
std
and
mov
insl
inc
arpl
dec
cltd
jg
ret
xorb
ja
arpl
ret
and
push
lock
pop
cmc
lock
loopne
aas
mov
sbb
jg
outsb
int3
mov
mov
push
test
pop
test
rolb
cmpsb
pop
fwait
mov
adc
ljmp
cmp
das
or
add
outsl
or
push
cli
sub
cmp
sbb
jns
push
inc
ret
sub
je
push
aas
cmp
jo
test
mov
cmp
loop
mov
or
call
lea
and
call
jno
adcl
mov
push
shrb
and
fstpl
jg
movsb
push
testl
sbb
fsubr
adc
repz
mov
ret
into
jmp
loope
int3
mov
bound
insb
lret
sbb
inc
inc
jae
stos
push
mov
imul
adc
mov
sbb
mov
aad
pop
mov
fadd
aad
inc
mov
adc
not
divl
jmp
std
mov
jne
popa
js
pop
bts
or
sub
pusha
xchg
mov
push
xchg
pop
test
mov
sub
adc
inc
inc
sub
adcb
scas
popf
rcrl
xchg
addb
dec
stos
popa
xor
jp
aad
cmp
mov
nop
je
mov
loop
std
insl
loope
xor
in
fwait
mov
adc
lock
movsl
sarl
rorl
xchg
cwtl
aad
sti
cmc
mov
ret
adcb
push
adc
pop
mov
andb
xchg
insb
imul
in
cmp
mov
adc
sub
dec
dec
dec
push
popa
mov
pop
push
sarl
cmp
aam
out
adc
cmpsb
mov
and
jp
daa
pushl
fidivrs
fistpl
xchg
mov
jbe
cmp
mov
mov
inc
in
dec
lcall
and
decb
jb
jl
popa
push
dec
insl
stc
fs
fisttpl
addl
sub
sub
cmp
mov
in
ljmp
dec
inc
js
sub
cmc
xor
xorl
xchg
cmp
push
mov
hlt
rcrb
mov
sbb
xor
add
and
pop
mull
int3
add
pushf
xchg
stc
mov
test
aam
adc
je
clc
aaa
sub
stos
hlt
movsl
mov
jno
sbb
xchg
into
loopne
sbb
sbbb
xchg
push
arpl
xchg
loop
inc
sub
xchg
test
inc
hlt
adc
in
adc
dec
clc
xchg
dec
jge
cmp
jp
add
out
lret
mov
sub
cmp
jle
sbb
sub
pop
fisttpl
or
fcomps
mov
iret
cmp
jbe
mov
pushf
inc
inc
mov
jnp
sbb
stos
mov
test
imul
pop
stos
ss
int
and
test
out
pop
gs
inc
dec
call
pop
xchg
inc
clc
bnd
fidivl
sub
xchg
and
xchg
add
or
rcll
data16
dec
stos
inc
sbb
shlb
pusha
push
inc
pop
ss
or
sub
negl
jge
fistps
jecxz
fbstp
jne
lcall
popa
jne
and
or
jo
cmp
cld
cmp
and
sbbb
stc
movsl
daa
xlat
cmp
jae
aas
ret
mov
jecxz
sub
das
xchg
clc
lcall
mov
jbe
addl
data16
dec
cmp
add
push
shlb
inc
cmc
or
sub
out
push
xor
jne
cmp
lods
jmp
inc
cmpsb
fcmovnb
xor
negl
pop
leave
sub
dec
pusha
je
sahf
outsb
mov
or
add
mov
adc
inc
push
add
dec
add
inc
imul
cmp
mov
add
mov
in
mov
dec
dec
inc
add
push
mov
enter
jns
fildll
mov
lock
and
outsb
inc
ja
push
dec
inc
dec
test
xchg
jg
cwtl
mov
pop
inc
adc
jns
aaa
sub
push
mov
fsts
bound
mov
and
jne
jbe
xchg
add
dec
pop
inc
mov
pop
add
out
fbstp
push
jb
add
inc
and
add
ss
jmp
dec
push
inc
dec
push
inc
mov
xor
ret
sbb
sub
mov
inc
add
mov
mov
mov
dec
icebp
mov
stc
mulb
fs
push
xor
ret
push
hlt
idiv
inc
add
dec
add
mov
inc
dec
jmp
inc
add
pop
add
add
and
add
orb
pop
push
orl
dec
or
dec
and
lea
lret
enter
cmpsb
mov
movsl
inc
daa
enter
mov
cmpsb
enter
jmp
mov
xor
or
mov
test
add
faddl
ss
dec
mov
lcall
add
addl
lods
push
lahf
xchg
add
inc
mov
cmp
fisttpll
cld
add
adc
push
inc
imul
xchg
data16
data16
xchg
data16
mov
pop
movsb
sbb
andb
movsb
sbb
push
movsb
sbb
loopne
xor
xchg
lock
mov
test
or
aaa
or
out
ja
and
mov
roll
inc
mov
mov
add
dec
xor
mov
mov
and
popf
sbb
xchg
orl
adcb
addl
sub
and
cltd
or
sti
xorl
mov
nop
xor
nop
mov
lcall
mov
adc
shlb
mov
mov
rorb
rcrb
or
andl
fldl
imul
mov
test
fwait
cmp
adc
fwait
xor
and
and
out
xchg
orl
and
and
movsb
mov
mov
subb
pusha
std
test
mov
jmp
mov
loop
lea
sti
inc
mov
rorb
dec
addr16
aas
sbb
movsl
orl
and
and
mov
sbb
cmpsb
notb
leave
add
in
push
aas
adc
lret
shrb
mov
xor
sbb
hlt
or
mov
int
or
or
or
testb
iret
mov
and
jecxz
push
jno
int3
pusha
loopne
jbe
dec
pop
fsubrs
ficompl
andb
adc
or
and
pop
inc
push
and
pop
and
lret
add
add
rolb
adc
fwait
or
jecxz
mov
and
push
daa
mov
inc
cmp
iret
in
or
add
in
js
adc
orl
pop
in
mov
iret
int
inc
add
je
repz
and
and
add
scas
adc
daa
lock
inc
add
dec
inc
sub
sub
jnp
or
sub
jmp
add
out
mov
mov
mov
inc
xchg
mov
push
sbb
inc
jnp
mov
lret
sbb
pop
and
andb
pop
scas
in
and
add
push
pop
inc
jb
addr16
dec
ljmp
jecxz
xchg
or
mov
cltd
xlat
lcall
lahf
scas
or
data16
mov
cwtl
xchg
and
sbb
and
and
push
xchg
imul
adc
nop
pushf
adcb
ss
bndldx
test
xchg
jmp
xchg
mov
sbb
cmpsb
and
ja
inc
jg
and
fcoml
cmp
inc
xchg
cs
lcall
or
incl
or
les
sub
les
and
mov
daa
inc
sbb
test
cmp
fildll
outsl
lcall
mov
sub
fxch
and
mov
xorl
xor
mov
sahf
aas
dec
xor
mov
cmp
enter
cmp
jb
popa
add
push
inc
jns
dec
mov
add
ret
cmp
enter
test
pop
js
mov
pop
add
cwtl
and
enter
enter
sub
dec
mov
sub
xor
insl
fcmovnu
inc
testl
daa
push
add
stc
ss
inc
or
sbb
popf
mov
jl
xor
or
jo
mov
add
enter
out
jmp
add
and
adcb
fwait
cmp
fbld
pop
cmp
mov
insb
pop
cmp
fwait
mov
inc
fisttpl
or
fisubrl
testl
and
xlat
pop
fildl
or
sub
fwait
cltd
movsb
inc
aas
scas
inc
sti
xchg
xchg
jle
fstps
in
or
push
push
xor
leave
cmp
lahf
dec
or
lret
dec
clc
stc
cli
jae
mov
cmpsb
mov
add
cwtl
mov
pushf
arpl
sbbl
sti
and
or
fsubs
pop
jl
pop
ja
jmp
in
push
daa
loopne
aas
lret
lods
lods
or
enter
mov
iret
or
add
into
or
lret
cmpb
and
lcall
pop
inc
cwtl
enter
sbb
test
fists
xchg
inc
jo
inc
pop
outsb
add
mov
jnp
mov
or
movsb
pop
or
lahf
sti
ja
mov
and
mov
into
movsl
out
fwait
and
outsl
mov
nop
add
or
and
insb
leave
cmp
adc
inc
add
dec
adc
addr16
mov
mov
push
sbb
cmpsb
fcmovbe
or
movb
loop
xchg
insl
fistpll
pop
mov
mov
adcb
fs
xchg
fmull
xchg
or
mov
lret
inc
repnz
or
inc
repnz
dec
int
pop
nop
pop
ja
pop
ss
jg
jae
sahf
inc
daa
dec
getsec
cwtl
popf
pushf
cmp
sti
adc
enter
dec
out
leave
fldl
nop
adc
adcb
dec
rol
adc
lret
cmp
cmpsb
push
nop
jo
rcrb
jo
frstor
cld
and
icebp
js
std
mov
mov
or
xchg
ret
mov
or
out
int
nop
add
ja
add
les
lret
nop
mov
add
adc
cmp
add
aaa
cld
repnz
int3
pop
nop
sbb
or
dec
jp
pop
rorb
push
or
push
and
add
aaa
lcall
cmp
subb
jnp
inc
mov
add
dec
adc
gs
std
add
fbld
push
scas
push
movsl
mov
outsl
mov
imul
inc
xchg
incb
push
push
mov
mov
or
and
mov
insl
or
les
xor
pushl
lods
or
cmp
dec
xor
mov
lret
leave
sbb
mov
leave
in
adc
jno
std
rcrl
mov
scas
inc
sti
inc
sbb
sub
adc
loopne
inc
xlat
lock
das
lret
mov
add
and
fildl
lock
inc
adc
sub
in
lahf
lods
inc
or
inc
mov
inc
cltd
sti
add
inc
inc
in
adc
clc
or
xor
sbb
out
lds
iret
sbb
and
divb
data16
stos
mov
enter
outsl
fwait
loop
cltd
enter
das
lock
or
mov
mov
loope
or
mov
fldt
pusha
adc
jmp
cmp
cmc
enterw
cmp
pop
dec
dec
jno
xchg
push
push
shr
mov
adc
out
enter
test
sub
enter
in
not
inc
iret
shll
outsl
or
inc
jbe
cld
push
or
mov
movsl
mov
dec
int
and
and
xor
or
fwait
sub
inc
mov
enter
sub
add
mov
jno
sbb
mov
mov
pop
jae
xor
xor
add
fwait
cltd
sub
cld
out
mov
add
movb
out
xor
gs
push
xchg
inc
dec
or
ss
or
or
adc
push
cs
xor
jecxz
and
sbb
popa
jae
push
nop
outsl
add
cmp
arpl
daa
aas
inc
cli
and
fs
mov
shl
or
lcall
test
dec
iret
and
div
icebp
inc
int
jg
aas
stos
jno
cmpb
mov
aas
jo
add
add
fs
adc
enter
arpl
add
js
and
fsubl
ds
add
xor
clc
add
fiadds
inc
nop
pop
jo
and
xor
in
and
int
add
jnp
inc
inc
push
cmp
mov
clc
addb
xor
das
and
lds
inc
push
dec
inc
popa
cmp
or
fdivs
adc
and
add
enter
jnp
test
and
ret
inc
inc
outsl
addr16
add
and
nop
jno
xchg
fcomp
add
add
or
push
and
scas
or
add
es
test
hlt
lret
fs
inc
dec
aaa
into
into
dec
sahf
and
lret
mov
and
add
lret
inc
mov
mov
movb
ret
rorl
lret
inc
pop
inc
popf
adc
nop
add
cmp
cmp
outsl
ficompl
in
xchg
daa
and
mov
nop
leave
sbb
in
add
inc
frstor
sbb
add
fstps
or
or
add
push
push
add
and
or
jbe
dec
pop
and
int3
and
and
nop
rolb
enter
add
pop
mov
jecxz
inc
inc
ss
xlat
stos
arpl
mov
or
clc
add
clc
or
inc
lock
lcall
jg
xchg
and
iret
pop
mov
push
dec
inc
dec
xor
cs
dec
dec
add
movsb
or
push
xorb
adc
add
add
je
pop
adc
or
sub
add
add
addb
pop
or
mov
add
add
ret
pop
or
daa
inc
add
jle
rolb
jl
add
insb
andl
pop
mov
addl
sbbl
add
cld
jl
sbb
ss
ja
and
add
scas
imul
xchg
fistl
add
pop
orl
test
ud0
add
add
in
enter
xor
rolb
jns
in
jae
add
add
add
lret
movsl
dec
jae
push
and
daa
pop
outsl
pushl
and
adc
xor
xor
add
add
ds
xlat
pop
ljmp
leave
sbb
push
pop
lret
insl
jmp
add
push
cmp
or
cmp
jmp
fildl
pusha
pop
add
or
add
adc
aaa
jno
in
outsl
frstor
jg
and
cmp
inc
push
call
std
rolb
mov
push
cmp
adc
add
pop
outsl
mov
fildl
inc
add
inc
dec
imul
inc
dec
outsl
dec
dec
dec
std
in
cmc
add
dec
sbb
inc
dec
push
dec
push
add
outsb
mov
aaa
dec
push
pop
add
pop
pop
pop
xorps
pop
push
idivb
mov
add
pop
add
xchg
bound
popa
pop
popa
add
add
sti
negb
push
arpl
adc
push
fldl
insb
push
outsl
insl
jo
outsb
lahf
jne
mov
jns
jp
jnp
mov
jnp
test
scas
jmp
mov
cmpsb
stos
jmp
fdivrl
or
lea
or
in
jb
mov
push
je
push
jae
jecxz
jp
pop
outsb
add
jb
jp
fbstp
dec
dec
mov
lret
fstp
pop
les
int
or
adc
pop
jb
outsb
or
in
adc
pmuludq
add
mov
icebp
add
pop
or
jnp
mov
mov
xchg
mov
loopne
mov
mov
add
mov
xchg
jnp
lea
andl
or
jp
insl
xchg
nop
lcall
sub
test
test
shlb
sbb
adc
fstpt
mov
and
rclb
fdivrp
mov
ret
enter
stos
xor
rcrb
fisttps
adc
out
add
xlat
call
fldcw
in
and
jmp
in
repnz
or
testb
pushl
das
dec
loope
push
out
testb
repz
pop
jle
in
add
jl
negl
stc
add
in
ret
lret
orb
test
clc
in
loope
cltd
sahf
outsl
scas
addl
mov
jg
pop
das
nop
pushf
out
nop
popf
scas
mov
mov
mov
lcall
das
scas
mov
mov
btr
adc
mov
lds
arpl
ret
ret
negb
mov
add
mov
lret
in
fsub
sub
in
mov
xor
mov
ror
mov
iret
add
add
fucomi
mov
aad
rcr
add
in
xchg
xchg
test
out
xchg
rep
jmp
lret
add
inc
test
test
int3
fidivrl
faddp
ror
sub
jecxz
fwait
mov
roll
add
jmp
pop
add
lock
outsb
mov
pop
out
pop
jmp
imul
fldl
ret
imulb
pop
fldl
sub
leave
in
stos
loop
jbe
fdivrp
enter
into
ljmp
push
jmp
fdivr
in
clc
add
in
lock
inc
jae
repnz
outsb
out
in
fcomi
add
repnz
add
clc
adc
call
fildl
dec
jmp
jecxz
ljmp
loope
fnsave
jae
negb
jecxz
ljmp
cwtl
lods
xor
mov
push
repnz
cmp
cmp
cmp
xor
add
nop
incl
insb
orb
es
das
imul
aas
add
pop
imul
or
fsubrs
and
add
xchg
pop
or
add
sub
sub
or
pushl
push
jno
adc
cmpsl
or
stos
lods
scas
lods
add
push
sbb
pop
sbb
inc
leave
or
or
add
add
shrb
lods
stos
jbe
or
outsb
jg
pop
add
lret
or
or
into
mov
mov
or
insl
jnp
pop
adc
add
jnp
sti
lds
insb
rcrl
pop
dec
adc
daa
jecxz
out
call
pop
fsubr
loop
or
lods
or
insb
lds
insl
out
add
pop
sub
out
out
imul
sub
bnd
lcall
dec
lods
mov
add
popa
push
std
ret
daa
call
sbb
add
mov
daa
out
das
push
out
add
fucomip
pop
negb
add
lock
xlat
fmull
lock
xor
das
sbb
inc
sbb
push
bnd
arpl
sbb
mov
loope
in
jmp
daa
clc
sub
or
jmp
mov
xchg
push
addr16
mov
aaa
inc
cmp
stc
das
clc
or
sub
loope
sub
mov
mov
mov
nop
or
xor
xor
sub
or
pop
neg
push
and
das
orl
pop
mov
daa
into
das
jmp
inc
div
cld
cld
cmp
xor
jb
or
pop
dec
or
add
cltd
inc
fdivr
fucomi
fwait
pushf
cld
add
das
xchg
push
das
lods
pop
xor
mov
popf
out
mov
cld
lahf
popf
inc
xchg
jnp
js
or
sbb
in
dec
fmuls
in
repnz
cmp
popf
cld
mov
lcall
jmp
stc
das
or
pop
dec
arpl
rorb
rorl
aad
flds
mov
std
aaa
std
mov
mov
xor
daa
aad
sbb
jns
dec
aad
fldcw
repnz
inc
cli
mov
loopne
int3
pushf
inc
aaa
dec
js
repnz
sbb
or
sub
cli
mov
icebp
das
mov
hlt
aaa
fsubl
xlat
aas
cmp
scas
gs
sbb
sub
inc
cmc
scas
pop
cli
stc
ret
pushf
repz
fldt
aam
das
bound
std
in
pop
fisubrl
fildl
mov
fdivl
adc
nop
mov
sbb
mov
fidivrl
fsubl
jg
lahf
cmc
mov
add
fimull
or
fistpll
push
mov
xor
cmc
add
mov
mov
das
push
sbb
decl
or
inc
fldt
add
inc
fidivl
fisubrl
jb
pop
fcomp
inc
mov
add
movsb
or
dec
fisubrs
imull
mov
cmp
or
sbb
pop
push
popa
mov
out
test
add
movsl
or
lret
in
ss
and
adc
add
daa
movsb
or
mov
jge
mov
sbb
popa
pop
outsl
orb
or
test
sub
sbb
mov
cld
mov
lret
xchg
insl
push
and
fadd
jbe
mov
sbb
mov
insl
inc
xor
sub
sbb
add
or
cwtl
mov
or
pusha
sbb
jnp
fistl
push
or
ljmp
push
addb
idivl
pop
adc
add
call
adc
out
or
push
pop
push
cmc
test
lahf
fs
push
push
push
movmskps
push
aaa
in
fs
add
pinsrw
dec
inc
jne
mov
les
add
push
inc
jbe
insl
adcl
push
add
pop
push
inc
add
xorl
inc
inc
loopne
add
mov
or
das
out
add
mov
addr16
fs
popl
sbb
inc
push
sbbb
leave
mulb
sti
jae
pop
inc
xchg
leave
lcall
add
lret
movsb
cmp
inc
xchg
xor
xchg
xchg
add
icebp
inc
outsl
fildl
rcr
addr16
lock
cmp
ret
add
pop
xor
inc
or
inc
push
and
inc
pop
jb
scas
stc
xchg
and
and
daa
add
pop
ja
js
ja
or
add
xchg
or
push
cltd
and
imul
in
add
xchg
cmp
or
inc
pop
insb
mov
cmpsl
xchg
push
push
imul
testb
add
add
add
add
dec
add
add
add
iret
fnsave
inc
and
add
add
lcall
sbb
pop
inc
out
test
icebp
add
add
xchg
insb
add
or
sub
mov
xor
fisttpl
inc
cvtps2pi
cmpsl
sbb
dec
xchg
sbb
lret
inc
mov
out
xor
xor
outsb
mov
rcll
sbb
negl
add
pop
insl
cmpsb
jmp
or
xor
shrb
ja
jae
jnp
sub
push
dec
popa
or
imul
push
mov
xor
cmp
adc
out
add
std
mov
cltd
imul
mov
inc
outsl
insb
add
nop
adc
and
xor
imul
jl
inc
xor
add
outsb
adc
sub
xor
push
cltd
adc
dec
and
out
xor
cmp
fsubs
dec
aas
xor
xlat
jge
iret
jg
xor
cmp
xor
inc
and
and
daa
cmp
in
and
in
xor
xor
dec
ret
inc
sti
adc
push
in
jo
scas
push
out
push
mov
lret
cmc
cmp
xor
popl
dec
fildl
xor
imul
pop
out
mov
push
scas
stos
fwait
mov
gs
adc
push
xor
push
insb
and
push
fcoms
xchg
ja
jns
sub
xor
aas
add
inc
arpl
jns
sub
and
dec
aad
cltd
xor
adc
insl
sbb
lret
inc
dec
inc
rcrb
sub
outsb
cmpsl
iret
lock
inc
daa
mov
add
xor
out
inc
aaa
popa
ret
inc
xlat
je
orb
mov
sbb
div
aaa
test
dec
xorb
aas
pop
inc
inc
inc
xor
and
popf
add
xor
test
mov
adc
or
xor
dec
cwtl
subb
das
or
or
das
add
sub
insb
pop
popf
cmp
fldenv
arpl
xor
jl
and
in
dec
mov
and
pop
pop
xor
aaa
popf
jo
mov
inc
daa
push
ss
adc
xchg
test
aas
cmp
popf
in
mov
nop
xchg
add
dec
cmp
xchg
push
cmp
loope
or
inc
mov
or
adc
jne
lods
push
push
jo
and
xor
cmp
xchg
xor
mov
lea
adc
add
ds
mov
sbb
jge
ret
xchg
and
xchg
push
sub
sub
inc
lds
dec
dec
jnp
fnstsw
inc
fs
or
fldcw
mov
aas
push
insb
dec
cmp
jns
and
xchg
test
mov
dec
dec
inc
push
cltd
jae
dec
gs
pop
or
popa
mov
add
repz
mov
xor
das
or
fs
or
mov
aaa
xor
jb
out
mov
inc
jnp
push
aaa
xchg
sub
or
xor
or
push
imul
aaa
ret
jnp
imul
sub
inc
inc
lret
out
popf
adc
mov
ret
jl
xchg
cmc
cmp
or
das
cmp
popf
je
imul
xchg
cmpl
xchg
pop
xlat
dec
mov
sub
sbb
pop
jnp
int
mov
in
xchg
xor
mov
int
push
inc
jecxz
xorl
mov
movsl
das
rcll
fsubrs
and
arpl
mov
fnstenv
test
cmp
and
js
push
and
and
jecxz
out
dec
cmp
push
xor
fwait
xor
inc
es
inc
pop
dec
mov
movsb
imul
mov
rcll
roll
sbb
pop
inc
ret
dec
cltd
sub
xchg
push
in
dec
add
lods
lea
ret
xor
inc
jne
outsl
inc
mov
inc
daa
sub
cwtl
test
adc
movsl
adc
sbb
cmp
and
stos
mov
push
push
jb
add
stos
icebp
inc
cwtl
movsb
test
cmp
out
xor
sbb
outsl
lods
pop
fildll
sbbl
pop
adc
xorl
lahf
xor
xor
bound
sbb
sbb
xchg
adc
mov
xchg
or
add
and
add
add
nop
sub
push
enter
or
pop
rcrb
push
add
sbb
or
scas
sbb
and
in
mov
mov
mov
dec
ja
dec
adc
cmp
pop
mov
sbb
inc
test
sbb
outsl
imul
inc
scas
push
bndstx
dec
dec
pop
add
stos
push
rcrb
xchg
adc
xor
push
insl
mov
je
mov
push
adc
mov
jnp
add
xor
call
or
adc
stc
mov
pop
inc
add
add
jns
xchg
inc
inc
add
add
in
inc
push
dec
add
dec
add
add
push
add
add
push
add
push
add
push
add
pop
add
add
imul
cmp
or
sub
or
ret
insb
in
mov
adc
inc
imul
or
sbb
mov
rolb
dec
outsb
je
jb
outsl
arpl
fs
imul
popa
jb
inc
js
push
inc
gs
imul
insl
jne
or
insl
xor
mov
imul
ss
imul
mov
popa
insb
add
or
insb
gs
fistpl
fcoms
inc
dec
outsb
jae
cmovg
fucomi
jne
jo
inc
push
adc
jb
popa
je
gs
popa
jb
insl
sti
bound
aas
gs
jno
jb
xchg
imul
inc
lcall
scas
cmp
jns
push
push
jb
aas
dec
gs
jo
cltd
mov
je
ds
insb
rol
jp
nop
mov
jne
push
or
jae
fadds
dec
outsl
fs
dec
push
imul
push
orb
adc
inc
fnstenv
mov
je
jns
fwait
xor
jnp
pop
clc
push
je
dec
ss
or
pop
jne
mov
or
popa
sahf
jo
fsubl
jne
inc
dec
cmp
sbb
imul
xchg
push
fdivs
mov
mov
mov
push
sub
jae
dec
jae
xchg
jg
rcl
sub
mov
popa
fs
xchg
in
push
outsb
insb
xchg
inc
test
outsl
pop
inc
mov
push
jns
adcl
testl
popaw
mov
inc
adc
sbb
push
pop
ret
insl
addr16
push
ss
arpl
iret
mov
cmovg
adc
lods
rorb
inc
mov
lods
insl
in
and
jge
fisttpl
outsb
xor
push
bound
addr16
sbb
mov
adc
js
clc
xchg
sti
push
test
jbe
roll
inc
jne
or
fcompl
sub
add
mov
ret
mov
gs
fisttps
lods
lock
inc
insb
enter
outsb
jbe
mov
loope
dec
cmp
pop
inc
and
dec
mov
mov
push
gs
jbe
scas
mov
cwtl
insl
sbb
adc
sub
out
inc
js
sub
pop
insl
or
xchg
or
push
or
int3
sahf
bound
dec
xchg
mov
mov
repnz
inc
add
jne
lcall
bound
jmp
add
adc
or
jns
cmpsl
loopne
xchg
mov
je
ja
sarb
fcom
dec
insl
mov
sub
jo
popa
mov
fildl
aas
jp
sub
popa
push
adc
mov
sub
push
xchg
jmp
or
inc
dec
add
push
popa
imul
gs
adc
ss
je
popa
xchg
insb
lahf
gs
inc
test
inc
addr16
sbb
sbb
xor
outsb
dec
popf
js
scas
mov
add
cmp
inc
or
sbb
test
adc
add
inc
insl
mov
mov
sub
xchg
ficoms
sbb
dec
sub
push
outsl
imul
outsb
inc
dec
sub
insb
push
sub
fndisi(8087
dec
nop
adc
jmp
sub
jb
xchg
out
shll
and
push
or
int
fisttpl
and
jae
push
cmp
fs
inc
push
out
push
lods
sbb
inc
hlt
cli
ss
scas
and
cmp
and
inc
popa
je
hlt
and
gs
sbb
shll
pop
adc
xor
arpl
mov
push
js
js
push
ret
xchg
pop
js
jg
mov
jb
sub
xor
sub
es
jo
inc
adc
push
mov
inc
push
sahf
movl
push
mov
outsl
jo
outsb
mov
or
sbb
popa
and
sbb
bound
jae
dec
sbb
mov
rolb
mov
popa
int3
es
test
and
mov
gs
pusha
js
sbb
jo
xchg
rorb
push
psubd
outsl
jns
fsubl
mov
pop
dec
pop
ret
dec
inc
dec
sbb
pop
add
mov
and
data16
aam
mov
push
jnp
add
ret
inc
sbb
scas
or
sub
xchg
data16
decb
cmp
or
arpl
scas
inc
inc
sahf
pop
pop
sbb
jp
xor
pusha
sub
fsub
inc
add
mov
dec
pusha
and
dec
inc
xchg
mov
mov
jmp
lahf
dec
enter
je
mov
sbb
ljmpw
shrb
loop
insb
jl
popa
xor
lcall
inc
sbb
pop
sub
xor
pop
dec
pushf
lea
jae
inc
cwtl
inc
or
add
dec
out
and
sbb
cmp
xor
push
in
in
imul
sbb
push
dec
push
leave
js
iret
or
and
mov
lret
call
shlb
pop
dec
fcoms
test
add
mov
in
loope
out
jae
enter
dec
clc
push
mov
lret
insl
push
add
enter
test
inc
ret
std
push
cwtl
push
add
jb
cld
or
inc
pop
cmp
push
iret
xchg
sub
int3
push
movsb
leave
push
aaa
and
push
mov
and
and
xchg
xchg
xchg
and
enter
dec
jae
pop
sub
or
jge
gs
dec
or
or
sub
lock
mov
push
addr16
cmp
gs
rclb
insb
outsb
dec
mov
xor
pop
add
gs
push
fstl
sbbl
addr16
insb
dec
pop
or
jnp
sbb
adc
or
idivl
jo
lret
mov
cmp
js
cmp
lcall
arpl
jo
fsubrs
xchg
enter
mov
pop
and
data16
sbb
ljmp
aas
mov
push
popa
dec
fsubr
jb
int3
adc
mov
addr16
inc
testb
or
and
dec
fldt
mov
mov
data16
add
cmc
push
add
sub
test
pop
inc
data16
inc
pop
lret
cs
pop
push
jb
imul
pop
jbe
insl
mov
insl
pop
inc
sbb
aam
push
loope
shlb
or
and
popf
add
outsb
adc
xlat
test
add
test
lods
mov
cmpsb
jno
shrl
or
in
dec
mov
lods
push
mov
mov
or
jmp
add
mov
test
je
push
fnstenv
insb
test
pop
adcl
xor
and
xchg
in
pop
and
ficoms
mov
and
or
push
add
fs
pushf
test
mov
and
push
cmp
sbb
sub
mov
push
addr16
dec
jb
sbb
in
mov
xor
xor
andb
adc
lods
fistpl
xchg
jb
add
jb
pop
mov
dec
or
ret
fucomp
je
push
jmp
adc
pop
jae
cmp
out
mov
imul
push
ss
inc
xchg
aaa
mov
push
out
inc
mov
or
dec
sub
inc
add
push
push
fidivl
fiadds
mov
dec
ffreep
bound
gs
dec
or
or
inc
mov
inc
lahf
mov
dec
push
add
xor
je
shlb
push
sbb
outsb
jae
test
jb
mov
pusha
or
sbb
xchg
outsb
ret
inc
outsl
add
insb
or
scas
arpl
das
xor
addl
mov
rcl
mov
cmc
bound
mov
aaa
imul
dec
inc
or
add
es
out
push
rolb
xor
push
insl
dec
andb
pop
aaa
test
inc
aas
cmp
jae
dec
or
sbb
les
out
xchg
lds
outsl
repnz
mov
mov
fimull
mov
jecxz
or
and
nop
xor
stos
inc
sub
and
ss
fs
orl
inc
mov
pop
insb
push
in
shlb
xor
xchg
cmp
popa
and
xchg
nop
xchg
test
cld
ret
or
and
shlb
xor
inc
dec
ret
lock
flds
dec
xchg
scas
cmp
xor
gs
movsb
ret
xor
insl
fndisi(8087
jecxz
dec
insl
sub
rcll
xchg
xor
xchg
and
and
add
xchg
adc
sbb
pop
ds
xor
jae
lcall
xor
mov
cmp
push
inc
aaa
sub
mov
xor
ret
xor
in
arpl
call
pop
jae
mov
cmp
adc
pop
mov
push
imul
data16
mov
jno
lret
or
ret
adc
adc
mov
movsl
fldenv
dec
sahf
loope
xor
jge
mov
fiadds
notl
pusha
push
sub
shrl
sbb
jno
mov
popa
cmp
mov
sub
fsubrs
cmp
xchg
je
inc
ja
cltd
mov
lret
fistpl
bound
sbb
pop
and
cs
bound
movl
adc
imul
mov
inc
inc
je
in
inc
dec
dec
mov
sbb
hlt
mov
inc
loop
fs
jbe
dec
int
dec
inc
addb
daa
or
lods
dec
pop
cmp
mov
fistpll
inc
push
dec
inc
xor
dec
push
pop
andb
fnstcw
mov
cmp
xor
repnz
scas
and
inc
xor
add
aaa
or
xchg
add
mov
rorb
jg
ss
and
dec
mov
andb
arpl
adc
dec
cwtl
in
mov
jbe
inc
dec
fildl
pshufw
xor
gs
movb
call
and
mov
mov
dec
pop
push
pop
inc
jae
leave
mov
xchg
push
inc
mov
scas
mov
cmpsl
rorl
pop
lods
fwait
xor
push
lret
dec
pop
adc
pusha
sub
or
inc
push
push
aaa
and
outsl
test
lods
bound
adc
int
dec
push
xor
aad
and
notl
push
adc
add
lret
pop
fcoml
ret
inc
and
ret
test
outsl
imul
inc
shrb
je
cmp
or
add
orb
outsl
cltd
int
inc
loop
scas
cmpl
test
xchg
mov
lds
pop
es
ret
popa
and
repnz
imul
xor
jne
call
push
pushf
movsl
adc
addr16
or
sub
sub
addr16
lcall
ds
and
pop
pop
sub
lcall
arpl
int
and
es
mov
imul
add
add
movsb
test
xchg
dec
xorl
push
xchg
inc
jge
mov
inc
ficomps
inc
sbb
or
jle
adc
push
sbb
and
sub
nop
sbb
xchg
jb
jge
inc
mov
sbb
jae
push
sbb
jo
pop
mov
adcb
add
sbb
sub
push
or
inc
mov
jbe
xchg
inc
out
nop
add
adc
in
xor
sub
push
out
idivl
sbb
dec
lds
jnp
adcl
outsl
pop
adc
adc
ficomps
pop
cltd
and
mov
inc
into
daa
xchg
leave
push
jb
gs
dec
fadds
cmpsb
dec
and
fidivs
pusha
fsts
adc
insb
mov
inc
stos
sbb
dec
fisttpll
das
xchg
ja
insb
data16
sub
sahf
loopne
aam
fs
andb
lds
sbb
fs
mov
repz
adc
int3
call
dec
add
add
popf
add
or
fnstcw
jae
rcrl
aaa
dec
inc
shlb
rorl
mov
push
sub
cltd
pop
mov
les
pop
rolb
arpl
or
leave
dec
shll
pop
cmpl
fisubrs
insl
aaa
jns
gs
sub
inc
inc
add
and
lock
jl
mov
mov
mov
je
push
ret
sbb
push
scas
add
ljmp
jnp
pop
xchg
lahf
push
jo
sub
push
mov
subl
mov
push
sarb
add
pop
mov
add
jae
iret
dec
sub
sub
xchg
adc
ss
pop
adc
dec
fidivrs
mov
push
mov
adc
push
pop
imul
xchg
and
fs
fldenv
fmull
pop
lahf
imul
push
or
loop
cmp
idivb
andl
cmpsb
sysexit
mov
dec
sbb
xchg
cmp
mov
int3
mov
pop
ret
jns
cmpsb
aad
xor
stos
ret
scas
pusha
mov
insb
addr16
mov
arpl
icebp
lock
pusha
inc
inc
sbb
jb
pop
pop
or
and
inc
mov
gs
or
jecxz
cwtl
ret
add
repnz
js
pop
add
mov
shll
mov
dec
mov
mov
mov
sub
mov
pop
jno
sbb
lods
pop
movsb
xchg
xchg
hlt
in
or
mov
and
ret
dec
ljmp
inc
popa
inc
fabs
jmp
lock
jae
dec
je
mov
adcl
mov
pop
out
mov
jbe
stc
fs
nop
lahf
dec
jb
add
inc
shlb
mov
sbb
adc
push
rorl
xor
dec
das
js
cmc
fmull
repz
je
and
inc
push
stc
jg
popa
or
xchg
bound
andl
sbb
push
sbb
icebp
inc
inc
cwtl
rcll
aaa
inc
movsl
pop
popa
jae
pop
fucomi
mov
popf
stc
je
mov
and
lods
mov
test
mov
mov
cmp
push
les
jp
push
mov
adc
jno
ret
adc
mov
push
adc
cmp
in
mov
xchg
icebp
or
dec
sbb
xor
xor
xor
rcrb
movsb
pushf
orl
sub
mov
sbb
push
lahf
or
out
xor
dec
add
inc
xor
scas
push
pop
mov
or
adc
or
dec
sub
fs
mov
sub
xor
sbb
rorb
adc
dec
daa
and
jge
inc
orb
push
loopne
push
int
and
lahf
in
aad
subb
andl
sub
xor
xchg
and
jmp
xor
call
sub
push
mov
add
adc
mov
mov
add
arpl
loope
gs
enter
int
xor
ret
sub
movsb
dec
scas
and
cltd
mov
and
push
gs
cmp
inc
inc
dec
push
xor
xor
cs
dec
and
mov
sbb
jo
mov
cmp
inc
bound
inc
push
adc
loope
lea
cmpsb
jae
adc
push
xchg
inc
xchg
xor
sub
das
cltd
bound
push
xchg
ja
and
pop
test
and
xchg
je
addr16
sub
inc
addr16
pop
xor
adc
cmp
push
shll
dec
mov
mov
add
cmpsl
pusha
mov
push
arpl
cmpsl
and
dec
xchg
xor
ret
cld
or
and
inc
int3
inc
adc
sbb
aaa
jo
lcall
in
lds
xor
cmp
xor
adc
adc
fsubrs
pop
and
xlat
push
imul
or
outsb
sti
or
pusha
mov
inc
js
outsl
dec
pop
cmp
subb
push
jne
and
outsl
sbb
push
inc
dec
adc
mov
or
xchg
int
in
cmp
adc
pop
lods
das
add
xor
add
push
sarb
mov
push
xor
push
dec
std
std
aas
frstor
push
rcll
add
stos
ss
dec
outsl
bound
fnsave
addb
push
pushf
push
push
lahf
jb
fistl
add
call
popl
loopne
smsw
add
add
les
and
jae
pop
ja
add
add
or
mov
xor
pop
jecxz
xchg
movsl
adc
pop
mov
jp
nop
lods
mov
stos
pusha
add
jg
nop
add
or
adc
add
add
add
cmp
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
