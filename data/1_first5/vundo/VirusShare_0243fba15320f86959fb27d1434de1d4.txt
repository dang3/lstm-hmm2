push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jl
cltd
adc
add
jg
or
and
mov
sahf
hlt
loope
rcr
ror
and
adc
add
jno
popa
jle
pop
inc
cmp
mov
scas
mov
mov
into
jmp
mov
push
popa
sub
inc
mov
mul
loopne
shll
mov
jo
add
jnp
imul
mov
mov
lea
push
movsb
gs
and
mov
jbe,pt
sub
mov
push
sahf
popf
jp
lds
outsb
into
push
je
jo
push
cs
ss
mov
adcl
insl
jns
icebp
mov
jg
push
pop
insb
push
and
sahf
mov
shrl
pop
jo
sahf
jle
sub
movsb
pop
repnz
andl
imul
fidivs
sarl
loop
adc
inc
icebp
push
outsb
data16
cld
loope
orl
movsb
test
hlt
cltd
lret
aam
mov
les
loope
xchg
enter
adc
insl
push
jno
and
push
inc
mov
lahf
xchg
xchg
out
not
les
pop
push
jnp
imul
adc
inc
xor
sub
shl
scas
rcrl
in
movsl
mov
mov
push
insl
lret
jle
and
lret
hlt
sti
in
mov
mov
adc
popa
jp
dec
xor
popa
outsb
push
pop
inc
dec
mov
mov
mov
loope
rcr
ror
and
adc
add
jno
popa
outsb
push
pop
inc
dec
mov
mov
mov
loope
rcr
ror
ds
mov
cmc
add
jge
inc
inc
xlat
in
loopne
ss
mov
inc
imul
mov
ljmp
test
pxor
push
fcompp
or
sti
je
mov
sub
push
dec
call
ss
je
dec
std
out
mov
int3
insl
jmp
sub
lock
adc
mov
mov
jns
popf
aaa
cltd
iret
sub
jl
dec
jecxz
outsl
rcrb
jle
test
mov
pop
sbb
sub
outsl
mov
repnz
cs
xor
push
xchg
pop
mov
or
xlat
loop
mov
adc
das
test
andb
mov
sbb
cld
daa
push
jns
iret
stos
fnsave
xchg
mov
dec
fdiv
dec
leave
cmpl
inc
lcall
pop
cmc
xchg
cmp
lods
or
in
jbe
mov
dec
lods
cmc
jbe
ljmp
mov
inc
mov
push
mov
or
inc
or
daa
lahf
xchg
lret
hlt
adc
or
adc
sar
cmpl
mov
test
sbb
push
jae
mov
inc
outsl
jp
adc
lcall
jle
pop
inc
or
push
jne
adc
xchg
test
movsb
jle
jge
jl
add
cwtl
mov
mov
fsub
mov
rcrl
mov
pop
xor
adc
mov
stc
pop
rcll
mov
cmp
mov
mov
mov
mov
xor
loopne
lock
test
xor
sbb
xchg
ss
hlt
rcrl
sahf
repnz
mov
jno
xor
pop
mov
adc
mov
repz
pop
or
fcmovu
jns
jns
push
dec
pop
mov
test
jecxz,pt
fimuls
loope
mov
aaa
pop
lock
mov
ret
in
out
cmp
jecxz
lods
enter
lock
jle
jb
mov
lret
inc
lods
test
rcrb
cmp
std
sarl
fs
cmp
inc
mov
in
mull
imul
not
fists
stos
data16
movsb
pop
cmp
mov
sbb
aam
and
pop
hlt
icebp
cltd
lods
in
add
inc
and
and
jmp
fcmovu
in
jp
or
dec
cli
lds
fdivl
xchg
out
js
cli
pop
iret
hlt
mov
ds
arpl
fwait
std
fcmove
sub
je
pop
cmp
cltd
mov
xchg
inc
je
xor
stc
inc
xchg
sbb
clc
test
das
adc
call
xchg
push
sub
inc
xchg
lret
lock
cltd
mov
das
jno
mov
js
mov
into
out
dec
push
xchg
mov
ss
rcrb
roll
out
xchg
outsl
movsb
out
jecxz
sbb
jp
movsl
push
mov
sbb
fwait
stos
subl
push
sbb
ss
data16
mov
mov
cli
mov
pop
mov
pushf
popa
and
insl
out
loopne
movsb
scas
subl
ss
or
loopne
js
inc
popf
sbb
stos
xchg
cmc
out
mov
and
stc
dec
jns
add
lods
test
mov
cmp
cmp
push
jge
dec
in
fldenv
lods
cmpsl
or
fdivrs
int3
or
push
imul
ljmp
pop
pop
cmp
xchg
cmp
and
in
mov
lock
fldenvs
jae
xchg
push
sbb
leave
sbb
cld
mov
aas
sbb
sbb
in
enter
pop
lea
jbe
in
pop
xchg
aad
bound
cwtl
adc
fsubl
mov
mov
cli
push
push
or
inc
pop
push
xchg
sbb
sbb
mov
adc
dec
fimuls
lds
out
lahf
std
mov
jnp
hlt
xor
jmp
mov
inc
aad
sub
lock
pop
mov
stos
sahf
stc
test
dec
je
btcl
inc
xlat
std
dec
cmp
sub
jl
fisubl
and
loop
cmp
push
daa
mov
ljmp
pusha
mov
or
rcr
ret
push
cli
fwait
leave
add
mov
leave
mov
mov
lret
push
adc
jecxz
xlat
in
dec
wbinvd
inc
lcall
cvtpi2ps
pop
sub
cmp
inc
fldcw
ret
sub
cltd
lcall
push
mov
daa
xchg
das
xor
popa
sub
xor
fbstp
xor
push
mov
jb
and
cld
jbe
pop
mov
fnstcw
aam
cltd
mov
push
mov
into
cmp
leave
mov
ficoms
shlb
inc
adc
cmp
sbb
popf
jl
jae
loopne
mov
and
jge
loop
pop
ret
cmp
inc
cmp
pusha
lcall
inc
loopne
cld
out
jge
mov
push
stc
pop
inc
bswap
lcall
inc
imul
shlb
mov
movsl
pop
and
cmp
xchg
adc
add
call
sub
sarb
movsl
scas
mov
mov
cli
jae
nop
lahf
sti
add
adc
sub
dec
adc
fsubr
mov
mov
push
scas
xchg
xchg
sub
push
jbe
cmpsb
mov
push
out
xor
mov
push
hlt
movsl
cmp
jae
aas
arpl
aad
jecxz
add
and
xor
pop
mov
test
sbb
dec
shll
jecxz
mov
xor
sub
adc
inc
clc
cmp
stos
jmp
mov
push
xor
xchg
in
add
lds
aam
into
jle
lret
ja
jae
fstps
fcom
ja
jo
push
pop
push
adc
pop
scas
mov
jecxz
bound
sub
daa
callw
mov
sti
xchg
clc
xor
xor
insb
add
jnp
nop
mov
js
insl
lock
mov
cwtl
std
inc
xor
loopne
or
adc
sahf
dec
sbb
mov
dec
gs
dec
and
subb
andl
sub
adcb
add
leave
cli
dec
xor
mov
sti
xchg
cmp
iret
dec
pop
mov
pusha
cmp
mov
xchg
scas
mov
sub
inc
or
gs
mov
test
xchg
daa
adc
jl
adc
sub
cld
fstl
fs
fwait
mov
pusha
adc
and
movsb
sbb
mov
adc
xchg
movsl
xchg
jecxz
sbb
test
xor
or
xchg
out
cmp
adcb
or
xchg
cmpsl
jbe
les
ja
in
repz
jnp,pt
and
pop
fsubrs
pop
cli
xchg
daa
in
mov
sbb
xor
js
cmp
xor
insl
mov
cwtl
mov
xchg
iret
out
adc
xchg
mov
push
mov
sub
xchg
pop
push
adc
jae
mov
push
xchg
cmp
pusha
add
inc
out
js
lret
int3
jp
cltd
ljmp
jmp
xor
xorl
ret
je
leave
xor
lods
xchg
in
mov
mov
or
sbb
sti
popa
fwait
dec
imul
pop
ret
cmp
pop
sbb
inc
andl
mov
fnstsw
cmp
fistpl
jl
push
icebp
jb
push
inc
pop
jns
xor
test
add
vpminub
mov
mov
cld
into
in
inc
aas
mov
cmc
xchg
push
add
dec
push
fstpt
std
jecxz
xor
push
out
jmp
dec
mov
in
sub
push
or
jg
xchg
flds
fadds
stos
xchg
ljmp
mov
adc
add
pop
lea
xchg
adc
repz
xchg
nop
or
in
mov
jmp
outsb
aas
jo
adc
call
or
fwait
inc
xchg
jle
push
mov
pop
push
jp
jno
mov
fisubl
mov
scas
int3
out
dec
ret
xlat
mov
mov
rcrb
push
and
popa
pusha
out
movsb
or
je
lds
mov
es
xor
dec
and
mov
aad
mov
out
add
mov
fcomps
sub
mov
adc
sub
jmp
cmp
in
push
out
and
lods
or
cld
movsl
cmp
add
lds
mov
pop
jecxz
xchg
sub
iret
dec
mov
pushf
test
and
lods
adc
outsl
cmc
ss
icebp
xor
xor
add
mov
push
shll
pop
mov
data16
pop
stos
in
sub
xorl
mov
int
lds
popa
pushf
int
jbe
pop
movl
mov
outsb
cmp
in
push
sub
mov
adc
or
lods
or
jo
mov
mov
ret
int
mov
inc
les
insl
loope
cli
scas
pushw
jle
cs
insl
ja
adc
incl
jle
stos
jl
aam
jle
mov
push
out
stos
mov
pop
inc
add
xor
ret
or
cs
mov
lock
push
jne
mov
mov
cmp
leave
mov
sbb
sarb
pop
jecxz
cltd
xor
outsl
sbb
jle
test
hlt
sub
jmp
movb
xlat
dec
call
inc
push
push
xchg
xchg
enter
sbb
or
and
out
aaa
mov
adc
rcll
pop
int
shl
push
xchg
lret
cmp
pop
cmp
flds
call
add
imul
jno
push
push
rclb
sub
push
incb
mov
jo
fisubl
mov
out
dec
dec
test
cs
mov
fisttpl
inc
insb
or
pop
mov
imul
adc
in
nop
cmp
push
jns
or
sub
std
cmc
or
pop
mov
bound
dec
lods
add
or
enter
jle
mov
imul
out
mov
xchg
adc
push
mov
xchg
popf
push
das
inc
and
or
ret
dec
dec
push
pop
push
and
cmpsl
loope
loop
lret
push
pop
sub
xchg
stc
rcrl
adc
pop
xchg
gs
xor
jg
sub
mov
push
mov
inc
pop
jp
sub
imul
loopne
loope
loop
fcmove
adc
fcomps
imul
adc
xor
imul
mov
mov
push
pusha
pop
xchg
mov
mov
adc
push
xor
repz
cmp
aam
popa
jmp
shll
mov
mov
repz
cli
and
cld
leave
add
lcall
jo
cmp
iret
or
and
out
or
stos
lods
stos
xchg
adcb
jge
xchg
cmc
call
test
call
xchg
pop
dec
data16
cmpsl
jnp
xorl
fmuls
sub
sub
scas
imul
xor
jae
mov
ds
rorl
test
jl,pt
ret
cli
test
out
cmc
dec
and
and
or
adc
seta
loop
lahf
xchg
stos
pop
cmp
sub
xchg
xchg
stc
push
and
jb
mov
mov
push
mov
mov
sbb
sbb
sub
aam
push
scas
outsb
sbbb
pop
addr16
icebp
clc
pushf
cltd
and
mov
pop
test
xchg
pop
xor
mov
ss
daa
jp
cmp
sub
lcall
push
xchg
pop
jp
mov
mov
push
sbb
hlt
lds
cwtl
push
cs
sub
and
inc
sbb
or
and
jmp
gs
ljmp
les
sbb
cld
aas
pop
lret
inc
mov
and
add
inc
loop
in
xchg
or
pop
and
mov
hlt
push
xor
outsb
add
jl
outsb
jmp
fadd
in
or
adc
cltd
mov
mov
test
fldl2t
sti
jg
shr
jecxz
imul
add
stos
in
shll
loopne
clc
out
push
adc
bound
das
inc
lds
push
xchg
leave
add
inc
mov
mov
jbe
jb
xchg
xchg
mov
jmp
lea
rcrb
pop
sub
lds
imul
dec
lret
addb
mov
inc
iret
iret
in
fwait
ret
lret
mov
inc
jb
mov
cld
loop
sub
popf
adc
gs
loopne
cmc
mov
loop
movsb
mov
pop
inc
inc
sbb
mov
jo
dec
sub
pusha
xor
xor
lds
jns
lret
insl
jmp
insb
fnstcw
out
xchg
mov
inc
lahf
and
fnstsw
les
cmp
je
int3
add
mov
mov
xchg
loopne
mov
and
push
test
or
push
popa
jecxz
in
pusha
js
inc
iret
call
out
test
pop
cltd
xchg
adc
mov
jecxz
leave
scas
in
ljmp
cmp
mov
cmp
and
pop
lock
repnz
hlt
inc
inc
inc
xor
add
pop
dec
into
sbb
xchg
cs
out
mov
in
mov
inc
ret
ja
not
sbb
inc
nop
dec
push
xchg
std
lds
xor
xor
sbb
subl
inc
jle
jo
push
adc
lret
dec
adc
movsb
xlat
push
fdivrl
mov
push
inc
hlt
push
hlt
aam
subl
mov
lods
aas
fldl
loope
jmp
aas
scas
xlat
repz
cs
arpl
popf
mov
shll
cmp
cs
or
insl
xchg
and
jnp
mov
add
xchg
push
mov
and
jo
push
jmp
pop
mov
xor
sbb
call
jnp
iret
iret
mov
xchg
sub
cli
fisubrl
mov
jle
pop
and
lds
mov
push
and
jl
in
jmp
scas
fisubrl
pop
xchg
xchg
les
ss
in
mov
ds
cmpsb
in
mov
cmp
cmc
add
add
push
lds
xor
jae
jne
cmp
add
inc
out
adc
xlat
addl
xchg
ljmp
xchg
filds
push
or
and
lret
xchg
inc
sub
xchg
push
cwtl
je
addr16
push
aad
cwtl
dec
jmp
les
adc
scas
push
sub
ret
stos
jmp
imul
xlat
scas
cmpsb
sub
xor
mov
xor
sbb
sub
stos
cmp
stos
jne
in
repz
js
in
inc
fs
jp
pop
cld
ds
iret
jbe
imul
into
add
add
test
cmpsb
jnp
enter
cmp
or
ds
push
push
sbb
repz
jb
sahf
xchg
or
pop
in
jnp
cmp
in
xchg
lock
or
cmc
pushf
repz
cmpsl
jb
outsb
and
test
jnp
inc
rclb
ret
mov
mov
adc
jle
gs
es
xor
int
mov
and
loopne
push
inc
sub
cli
mov
cs
dec
int
add
inc
loopne
into
and
sbb
and
lret
adc
pushf
lea
mov
jns
in
shlb
cli
adc
sub
rcll
les
mov
movsb
mov
lret
test
dec
addr16
or
iret
popa
xchg
ret
das
popa
imul
sbb
out
aad
negl
fistpll
lahf
or
pop
in
inc
addr16
xchg
int3
or
dec
rcl
movsb
push
fcomi
mov
pushf
xor
fsubrl
push
adc
mov
pop
push
cmpsb
roll
jge
ds
cmp
cmpsl
je
ficoms
stc
call
stos
outsl
push
sbb
sahf
jle
dec
scas
push
mov
jecxz
push
mov
jge
repz
mov
cs
dec
fldl
push
jecxz
adc
rorb
lret
push
aas
push
out
push
cmp
sub
dec
mov
mov
pushw
xchg
vpsrad
xchg
inc
dec
addl
pop
test
dec
mov
and
sarb
subl
push
dec
or
cmp
mov
sti
xor
int
and
mov
into
pop
sarb
and
and
jnp
cmpsl
out
rcll
and
pusha
ret
lock
jno
jno
xchg
xor
adc
ja
sub
and
dec
add
in
testb
outsl
cmp
les
leave
xchg
movsb
pop
push
imul
hlt
mov
cmp
fildl
pop
testb
or
repz
adc
mov
ja
mov
out
and
fbld
hlt
mov
mov
inc
and
ret
popf
bound
popf
jl
ss
leave
push
jmp
push
jle
pushf
lock
push
xchg
hlt
and
inc
cmp
cld
popf
bound
and
push
icebp
cmpsb
add
jmp
daa
insb
bound
push
xor
and
and
movsb
push
out
mov
inc
ds
push
lods
mov
mov
cmp
shr
or
fwait
sbb
aam
sbb
adc
push
sbb
insb
push
stos
repnz
jbe
repnz
push
imull
xor
pop
mov
jg
cmp
repnz
or
jecxz
ljmp
loopne
mov
jne
ja
out
test
bound
lret
push
test
inc
jmp
sub
push
and
jns
mov
dec
cmpsl
stos
mov
shll
test
jecxz
pop
lock
cmc
cmc
call
sub
aaa
jns
ljmp
push
dec
movsb
stos
pop
iret
xchg
pop
test
xchg
jl
or
and
jle
lock
jge
and
sti
daa
scas
cs
ljmp
add
test
pop
sbb
mov
mov
gs
pushf
mov
lahf
inc
testb
or
data16
inc
and
insb
dec
fisubl
movsl
insl
inc
mov
fisubrs
popa
shll
roll
pop
or
cs
sub
aam
xlat
dec
sub
sti
sbb
push
dec
mov
out
mov
stc
lahf
pop
aam
je
scas
loope
int3
jne
push
into
addb
outsl
inc
add
dec
mov
cld
mov
addr16
in
js
push
jns
push
out
push
lcall
enter
dec
mul
popa
mov
aaa
rcr
bound
cmp
fwait
imul
sbb
out
mov
push
stos
fadds
cmp
insl
leave
jmp
or
inc
int
or
mov
pop
pop
mov
out
and
std
popf
adc
out
pop
push
push
xlat
cmp
outsb
out
jmp
int
mov
sub
mov
and
pushf
or
add
mov
out
or
sahf
arpl
test
je
or
jnp
rclb
call
cmpsl
pop
mov
insl
sub
leave
xchg
das
add
push
dec
jnp
sbb
mov
hlt
daa
pop
xchg
push
dec
mov
push
or
add
addb
test
push
fmul
fdivrs
lret
jns
mov
icebp
mov
pop
inc
xor
jge
xor
ja
scas
mov
jae
into
push
pop
cmp
push
xchg
mov
fwait
aad
inc
mov
push
xor
popa
inc
sub
mov
mov
movsl
je
adc
sarl
mov
jo
mov
enter
ds
cmp
idivw
xchg
in
push
sbb
jne
mov
xchg
jmp
out
mov
in
in
nop
pusha
pop
push
dec
inc
mov
mov
mov
es
inc
lock
lcall
add
mov
cmp
movsb
clc
xchg
pop
hlt
addb
add
cmpsl
aam
mov
dec
mov
pushf
add
dec
mov
xchg
jp
int
mov
push
nop
and
cmc
pushf
inc
push
dec
dec
shr
dec
xchg
dec
add
movsb
test
jp
dec
sbb
or
mov
test
mov
out
mov
mov
push
lcall
iret
lcall
or
ffreep
adc
lret
mov
mov
sub
mov
lret
xor
pushf
mov
popf
shll
xchg
pop
xor
pop
pop
mov
push
adc
sub
pusha
jl
pushf
call
outsl
dec
or
in
in
push
pop
jl
enter
xchg
cmp
lcall
push
sbb
outsb
push
pop
inc
dec
mov
mov
mov
loope
rcr
ror
and
adc
add
jno
popa
outsb
push
pop
inc
dec
mov
mov
mov
loope
rcr
ror
and
add
add
jo
outsb
push
pop
inc
dec
mov
mov
mov
clc
out
aad
icebp
lret
or
push
jno
jno
push
pop
rorl
sahf
cmp
mov
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
in
fs
mov
jbe
pusha
jge
xor
xchg
aad
les
test
test
je
fs
xor
and
adc
add
hlt
in
mov
les
xchg
in
test
je
fs
xor
and
adc
add
hlt
in
mov
mov
xorl
adc
mov
outsb
aaa
js
push
out
fcomi
xchg
idivb
adc
cmp
or
add
rcrb
popf
sbb
push
dec
test
fstpl
pushf
push
jl
icebp
sbb
and
xchg
lahf
mov
mov
subb
loope
pusha
shll
andb
test
xor
or
gs
in
and
imul
cmp
mov
fwait
loop
rclb
fadd
sub
adc
add
pushf
jb
mov
int3
int
test
mov
ficoms
in
in
out
hlt
or
dec
inc
rcr
lea
or
inc
cmp
adc
add
hlt
in
aam
les
xchg
in
test
cmp
ja
inc
sub
popa
or
mov
lcall
daa
jno
gs
push
push
inc
sbb
jl
cmpsb
call
mov
dec
les
dec
dec
aaa
dec
fs
jne
and
adc
add
hlt
in
aam
les
xchg
in
test
je
fs
xor
and
adc
add
hlt
in
aam
les
xchg
in
test
je
popa
xor
inc
mov
jmp
dec
add
sub
dec
dec
adc
movsb
cltd
lret
fsubrs
add
test
leave
mov
or
arpl
mov
test
xchg
jl
mov
mov
les
dec
cmp
faddl
mov
add
push
push
xor
sub
pop
or
adc
or
xchg
pop
jl
gs
jnp
xor
inc
jns
into
mov
shr
rcrl
mov
xor
sarb
or
push
lahf
sbb
ficompl
cmc
outsl
test
leave
jmp
je
in
imul
sbb
cmc
cmp
add
popf
outsl
sbb
bound
aas
pop
fisubrl
add
mov
fistpl
sub
cmpsl
xor
add
jp,pt
mov
adc
mov
jno
cmp
sbb
lahf
lret
call
rcl
ffree
push
das
or
ds
out
fidivl
inc
xor
push
imulb
ja
cmp
aam
test
push
rclb
xor
jmp
inc
push
mov
enter
lods
xchg
sbb
inc
jne
lock
xchg
bound
jns
inc
mov
popa
jecxz
push
sbb
or
stc
scas
pop
inc
lds
iret
fldt
fidivl
rolb
xchg
sti
in
outsb
ror
xlat
icebp
insb
fdivrl
mov
loopne
mov
xchg
sub
nop
popf
sub
sbb
fcom
cmp
push
cmp
cmc
jge
adc
testb
mov
xchg
push
push
and
es
stos
push
scas
adc
xchg
mov
add
adc
sbb
imul
into
mov
bound
arpl
enter
test
or
add
mov
pop
ret
sub
inc
imul
loopne
outsb
push
loopne
adc
adc
sbb
ds
cli
mov
xor
in
rcll
jp
loopne
sti
pop
xchg
cwtl
daa
inc
insb
dec
push
fcoml
shr
int3
gs
cmp
insb
mov
scas
imull
xchg
je
dec
add
adc
pop
inc
jg
mov
sbb
adc
cmpsl
fsincos
mov
insl
push
test
mov
mov
and
inc
faddp
dec
add
sbb
je
pusha
inc
cmp
cmp
ret
in
pop
jg
dec
lahf
dec
roll
test
test
adc
mov
repnz
push
inc
insl
adc
loope
or
inc
and
jne
pop
insb
push
popa
outsb
and
inc
xchg
or
inc
sub
rcl
stos
std
push
xor
insb
pop
out
push
xor
cltd
ret
shll
sar
outsl
scas
or
push
mulb
cwtl
into
cmp
mov
jae
jmp
addr16
mov
sbb
or
popa
imul
add
dec
jbe
inc
cltd
ljmp
jp
jnp
notl
aaa
mov
ret
jecxz
add
cmpsb
sbb
imul
mov
lds
sub
xor
stos
scas
ret
dec
sbb
mov
sbb
fsubrs
aad
ret
std
divl
sbb
dec
negl
jmp
mov
stc
xchg
nopl
mov
icebp
shll
sub
leave
out
mov
sub
push
inc
dec
nop
cmp
xchg
dec
imul
bound
lea
lea
sub
jmp
aad
aad
push
jmp
pop
stc
mov
int
jge,pt
push
pop
js
addr16
jns
out
xor
lret
xlat
jnp
cmc
shrl
jnp
test
lods
sbb
test
les
fstl
or
pop
jg
scas
inc
fiaddl
jmp
push
inc
xchg
movsl
push
jae
cmp
push
movb
fwait
dec
push
dec
fistpl
ljmp
jno
pop
dec
cs
cmc
jg
icebp
and
jl
ss
mov
clc
cmpsl
pop
shl
je
rcll
mov
cmpsb
ljmp
cmp
fstpl
push
fcmove
push
mov
jb
pop
dec
mov
test
cmp
jl
fcomi
sbb
mov
cmp
add
cli
cwtl
in
movsb
popf
pop
sahf
leave
or
cmp
adc
or
outsl
or
add
add
ret
lcall
loop
inc
pop
xchg
icebp
fldcw
xor
loope
pop
ret
jmp
fsubr
mov
pop
lcall
xchg
mov
push
inc
mov
lds
inc
xchg
pop
mov
lea
gs
push
dec
lret
push
mov
ret
mov
mov
lea
sub
push
ss
xchg
ret
jecxz
xchg
aad
mov
sti
sbb
mov
mov
push
or
stos
repz
push
sbb
lret
lds
adc
fcmovnbe
sub
out
adcb
pop
sub
mov
dec
push
cltd
xor
test
mov
call
xchg
lret
sub
xorl
test
pop
je
sub
in
lcall
cmp
xchg
aad
bound
cmp
pop
xchg
push
dec
inc
mov
pop
leave
addl
cmc
ljmp
jmp
int
cwtl
sub
mov
push
mov
cltd
sti
loopne
mov
push
sub
sbb
clc
add
push
shrb
jne
je
mov
xor
lret
mov
cs
cmp
cmpb
lcall
repnz
xchg
in
ret
jns
add
and
push
pop
adc
aas
mov
pop
stos
out
push
jbe
mov
movsb
sub
decb
adc
sub
lea
sub
subb
ret
rclb
cwtl
inc
mov
mov
inc
push
movsb
cmp
pop
cmpsb
cwtl
xchg
sbb
xor
pusha
fcmovnbe
push
cmp
cwtl
call
add
xchg
mov
sbb
outsb
fsubl
jecxz
cltd
adc
dec
out
shlb
jecxz
pop
pop
xchg
xor
or
lcall
push
sub
insl
outsb
cmpsl
frstor
repnz
push
fmuls
cwtl
out
xlat
adc
leave
je
mov
fwait
fwait
cltd
dec
in
inc
cmp
jle
outsb
jns
push
sbb
sub
inc
push
ret
mov
cmp
cmp
mov
inc
add
inc
sarb
mov
add
mov
cwtl
add
pop
hlt
das
add
jbe
rcrb
loop
add
mov
js,pn
rorl
cltd
mov
adc
in
popf
xchg
and
cmp
jecxz
cmpsb
pop
iret
rclb
xchg
mov
sti
adc
dec
fsubl
jno
scas
jnp
xchg
add
jae
jge
fimull
bnd
xchg
and
push
sahf
mov
imul
sbb
xchg
xor
dec
sahf
mov
pop
adc
lods
daa
das
jnp
jo
jo
dec
and
dec
enter
push
mov
in
pop
sub
aam
adc
pop
adc
rcr
xor
cli
in
das
int
or
and
jge
push
lds
cld
push
push
add
mov
mov
xor
cmp
cmpsb
repz
push
fimuls
mov
adc
push
dec
inc
push
jmp
mov
jp
nop
daa
sub
push
repz
mov
dec
xor
push
push
mov
addr16
xchg
push
dec
repnz
jne
ds
cltd
mov
and
mov
mov
cmp
in
or
or
pop
dec
incl
addl
mov
mov
jae
and
insl
add
pop
inc
lret
cmp
fcoms
push
inc
pop
mov
add
xor
test
xchg
dec
jns
push
lods
sub
stos
mov
xchg
sbb
jno
js
cmp
mov
test
push
xchg
lret
and
mov
mov
mov
dec
or
xchg
lret
cltd
pop
adc
in
sbb
cltd
mov
inc
jbe
add
imul
sub
jnp
sbb
mov
add
outsb
mov
sahf
mov
ficompl
xor
jecxz
cmc
pop
pop
lret
mov
aad
push
mov
and
enter
mov
mov
mov
pop
pop
push
jae
stos
pop
adc
xchg
push
test
push
es
es
cli
xlat
jb
jo
mov
negb
pusha
inc
mov
and
test
shrl
push
push
cbtw
call
je
stos
mov
loopne
sbb
mov
cmp
iret
dec
lret
scas
adc
jno
cs
fsubrp
cmp
mov
cmp
iret
gs
cmp
push
int
mov
adc
cmp
pop
and
adc
fcmovnbe
dec
in
test
das
les
mov
cmpsb
iret
jae
sbb
push
lea
pop
in
mov
scas
cmp
lods
and
outsb
pop
in
pop
pusha
jg
jo
mov
bound
mov
fcomps
lea
mov
jle
sbb
sbb
jo
push
add
sub
jae
hlt
arpl
xchg
mov
jne
rcrl
dec
in
sub
in
aas
pop
mov
lret
sbb
shll
call
int3
xchg
or
lret
hlt
pop
cmovns
inc
dec
push
lds
into
and
lods
mov
push
jle
repnz
cli
cwtl
pop
or
xor
lret
sbb
fsubrs
imulb
sub
imul
jne
pslld
or
sbb
xchg
lods
add
sti
in
push
jp
jmp
fdivrp
sbb
dec
sbb
out
pusha
adc
stos
mov
and
lret
pop
mov
cmp
lock
dec
js
sbb
enter
loope
loopne
clc
inc
andb
rcll
jbe
pop
mov
imul
lcall
push
insb
data16
leave
loope
in
lahf
pop
pop
or
aad
out
les
stos
pop
repz
icebp
jmp
xlat
std
stc
push
cmp
xchg
inc
ljmp
mov
mov
sbbl
jmp
xchg
xchg
mov
push
mov
push
fnstsw
cmp
jg
inc
mov
or
mov
push
mov
ret
adcb
sbb
jnp
fsubrp
sbb
mov
sub
mov
adc
imul
push
cmp
pushf
jbe
pushf
repz
cmc
inc
xchg
repnz
mov
repz
push
in
das
cmp
cli
mov
mov
outsl
daa
rep
ds
add
and
cmpsl
jp
js
dec
mov
add
out
sub
cmp
test
adc
lods
jl
push
scas
sub
mov
cmpsl
repz
out
jge
push
stc
pusha
push
mov
nop
bswap
sti
in
xor
mov
push
sbb
rcrl
cmp
mov
sub
mov
mov
jnp
push
in
test
cmpsb
jge
mov
add
inc
sbb
iret
adc
and
xor
jb
test
xchg
stos
popa
sub
dec
inc
add
mov
leave
inc
xchg
popa
dec
dec
stc
jo
andb
xor
jbe
inc
div
sahf
add
pushf
push
add
shl
inc
xchg
sbb
xorb
in
or
sarb
pop
xchg
clc
dec
mov
mov
dec
lret
rclb
xchg
int
sti
push
incb
jne
hlt
pushf
test
in
sar
out
in
mov
loopne
jge
sbb
jb
mov
push
sub
repnz
mov
sub
sbb
dec
pop
dec
cmpsl
or
daa
fucomi
or
sbb
pop
mov
and
cmp
pushf
mov
popa
loop
push
mov
sbb
inc
aad
pop
stos
clc
scas
pop
mov
movzbl
fprem1
push
adc
es
test
imul
rsm
iret
sub
gs
xor
cmpsl
arpl
sub
enter
and
mov
add
add
and
aam
mulb
mov
cmc
lcall
cmp
mov
sub
incb
pop
mov
xchg
sub
hlt
loop
sbbb
sti
in
add
sbb
inc
push
push
or
cmp
add
in
inc
jnp
xchg
dec
xchg
clc
fdivrl
repz
jo
sub
pop
add
inc
or
jg
jecxz
inc
pop
aad
cltd
sbb
dec
jae
enter
aas
cmp
fists
sbb
mov
push
add
pop
lret
sbb
pop
jge
fisubl
icebp
pop
jmp
loop
sarl
insb
xchg
rcll
mov
repnz
push
adc
lock
mov
jnp
fwait
mov
rclb
mov
push
div
inc
mov
sub
inc
loopne
sbb
cmpsl
mov
testl
in
pop
xor
pop
jnp
out
and
xor
into
into
xchg
scas
test
add
lods
xchg
mov
pop
inc
push
inc
mov
ds
mov
nop
push
xchg
dec
cmpsl
loopne
push
pop
inc
je
lods
repnz
or
push
sti
arpl
sbb
int3
decb
or
xlat
pushf
xchg
jbe
and
or
mov
into
adc
iret
sahf
add
dec
out
lock
stos
or
mov
ret
clc
scas
jns
ljmp
xchg
cmp
dec
lret
cmp
mov
nop
jmp
xor
mov
pandn
dec
sahf
xchg
xchg
aas
in
cmp
pusha
pop
jg
test
pop
daa
mov
movsb
in
cltd
rcrb
into
es
out
adc
push
out
ljmp
and
aaa
add
jp
mov
add
cltd
aad
ja
jp
into
sbb
fldt
push
js
pop
idivb
lret
add
inc
and
sti
cmp
sub
lcall
imul
adc
mov
xchg
jb
jecxz
and
hlt
jb
leave
dec
inc
push
out
lahf
sbb
or
mov
and
xlat
mov
stos
jae
repnz
mov
iret
cs
xor
sbb
insl
and
mov
mov
ja
addr16
inc
pop
cmpsb
ja
and
push
jns
mov
mov
cmp
aad
push
outsb
in
mov
pop
imul
add
jle
jge
popf
negl
je
nop
repz
mov
dec
and
sbbl
lds
jo
mov
roll
or
scas
arpl
sbbl
out
idivl
test
lods
test
dec
xchg
pop
dec
popf
dec
pop
lock
fisubs
ljmp
mov
scas
in
mov
jo
or
mov
daa
and
dec
sub
and
rcrl
mov
hlt
or
inc
addr16
out
mov
jg
andb
or
mov
fs
pop
lods
rcl
scas
jb
loope
push
and
mov
add
xchg
xchg
lret
fdivrl
mov
pop
mov
jecxz
and
stos
std
lcall
cmp
and
stos
dec
cmp
jns
mov
js
push
mov
aas
subb
sub
jp
aas
pop
cli
jae
inc
dec
mov
mov
pusha
cmp
in
into
mov
sub
popa
pop
pushf
data16
sbb
adc
test
xor
idivb
xorl
push
pop
arpl
push
in
push
aad
mov
push
ret
jmp
aad
repz
sahf
mov
xchg
and
outsb
pandn
sbb
jmp
xchg
xchg
add
lods
push
mov
pop
add
int3
pop
scas
dec
cld
jl
xor
cmp
repnz
sbb
fsts
pop
adc
sbb
scas
imul
pushf
xor
dec
flds
outsl
test
and
mov
fsubrl
pop
push
stc
mov
sub
daa
sub
shl
loop
enter
add
inc
scas
push
jp
sbb
inc
shlb
js
cmp
push
jbe
nop
mov
pop
push
push
cltd
push
push
out
pop
push
cmp
inc
mov
pop
stc
stos
imul
fidivrs
and
nop
out
mov
pop
adc
sub
xchg
jle
insl
out
push
stos
dec
mov
push
imul
lret
aas
dec
out
mov
dec
pop
int
std
xor
lods
xlat
pop
js
push
push
mov
fdiv
inc
andl
gs
cmp
sub
sti
push
loope
inc
insl
clc
inc
dec
dec
test
rolb
xor
inc
sbb
inc
fnstcw
mov
cmp
sbb
sub
sub
cmpb
cmp
mov
or
stos
cs
inc
add
jbe
fcom
pushf
fidivl
sub
adc
stc
xor
jnp
mov
push
clc
dec
das
dec
mov
mov
shrb
shrl
out
pop
sbb
push
mov
inc
pop
loope
inc
mov
mov
call
call
stos
cmp
mov
iret
test
adc
shrl
orb
ret
xchg
outsb
sbbl
cmp
push
xor
pop
mov
adcb
mov
popa
imul
xchg
out
pop
in
lret
in
xchg
inc
pop
pop
testb
aam
sub
rcll
fisubl
aaa
stc
mov
push
xor
cmpsb
pop
dec
xor
out
cld
pop
pop
cwtl
push
jne
rcrb
jmp
test
fsubrs
push
jno
xchg
bound
enter
jl
jbe
sbb
mov
movsl
ljmp
imul
pop
jge
dec
shl
and
sbb
xor
sbb
jmp
lea
mov
mov
lds
cmp
add
mov
inc
jle
xchg
rolb
aad
mov
pop
fs
add
pop
xor
ss
ret
jnp
lahf
mov
stos
rcrb
iret
cli
jecxz
cmp
cmp
dec
fcoml
cmp
jmp
xchg
sbb
cld
mov
je
decb
jno
mov
aad
mov
orl
mov
push
call
ret
xchg
rcl
inc
mov
mov
sub
sub
sub
fisttpl
mov
pop
add
iret
iret
push
dec
enter
movsl
out
scas
fpatan
stos
pop
sti
adc
xchg
test
cmp
into
fidivs
xor
nop
push
stos
jae
sub
push
lods
ljmp
aad
out
dec
xchg
lea
jb
dec
cmp
mov
aam
icebp
mov
cmc
mov
jae
and
fnsave
jbe
jmp
sbb
stos
int3
lds
repz
dec
push
and
addr16
jecxz
xchg
mov
clc
sarl
sub
xor
out
hlt
roll
xor
aad
push
call
in
xor
lods
jl
mov
pop
or
sub
mov
push
lcall
adc
sub
push
lret
je
inc
aas
xchg
inc
mov
call
dec
and
cmpsl
int3
lea
dec
popa
es
mov
xor
inc
popa
xchg
xor
xor
push
in
push
shrl
mov
dec
push
outsl
cmp
sahf
rolb
dec
sti
jns
movsl
ljmp
fistpll
sub
imul
lds
jp
mov
pushf
adc
and
gs
loopne
aam
cmp
int3
sbbl
mov
mov
adc
mov
push
add
mov
lcall
cmpsb
xor
dec
adc
adc
push
arpl
xchg
mov
add
into
sub
imul
pop
adc
fidivrs
and
dec
mov
xchg
pop
mov
adcb
daa
xor
jp
inc
popa
faddl
mov
lods
adc
mov
es
das
mov
jl
push
adc
cmp
xor
inc
xor
lds
lods
xor
push
nop
ret
or
arpl
xchg
jnp
je
adc
loope
push
cmp
hlt
xchg
fdivs
into
or
mul
shrb
call
decb
hlt
ja
es
cmc
inc
xor
fadd
jno
daa
mov
or
mov
jle
jle
fs
jg
loop
mov
nop
pop
mov
jns
popf
push
pop
adc
cmp
cmp
or
aad
and
xchg
lock
insl
pop
push
mov
xor
or
in
pop
addl
xchg
mov
movsl
divb
adc
cmpsb
notb
sysret
mov
pop
cld
push
adc
xchg
out
and
push
adc
out
push
shll
jnp
cs
ja
popf
in
or
and
and
jnp
xchg
stc
cmp
sub
nop
adcl
scas
daa
sub
jbe
pop
popl
clc
test
roll
add
mov
les
push
push
jbe
jne
dec
popa
sbb
ja
pusha
jge
xor
sbb
push
repz
add
fnstcw
inc
pop
xor
sub
pop
push
cli
scas
add
ss
in
lock
lds
aam
cmpsl
das
test
jle
daa
mov
or
testb
jg
push
xchg
imul
clc
push
xchg
das
or
xchg
daa
sbb
sbb
xor
and
adc
add
hlt
in
aam
les
xchg
in
test
je
fs
xor
and
adc
add
hlt
in
aam
les
xchg
in
test
je
fs
xor
and
adc
add
hlt
in
aam
les
xchg
in
test
jne
gs
xor
and
adc
add
hlt
in
jle
lret
sub
imul
add
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
adc
and
pop
or
mov
xchg
out
cmpl
pop
push
adc
aas
jae
arpl
push
cmovae
mov
mov
mov
rorl
and
push
add
jae
arpl
push
sbb
in
mov
mov
xchg
mov
ret
rdpmc
outsl
push
adc
out
aaa
mov
mov
add
pop
notb
xchg
and
lret
hlt
push
cmp
cmp
arpl
pop
cld
clc
mov
pushf
out
pop
dec
ss
adc
and
clc
push
repnz
cmc
push
in
outsl
jno
cs
std
jae
pop
xchg
xor
repz
int3
jg
mov
jb
jae
mov
xchg
cmp
data16
scas
nop
filds
lds
outsl
jae
pushf
shrd
div
adc
adc
shlb
lahf
mov
fistl
adc
jbe
mov
and
add
and
mov
ret
mov
adc
das
jae
arpl
push
push
inc
out
mull
cmpsl
repz
lahf
rcll
lock
inc
pop
sbb
and
fucomip
lret
mov
lcall
outsl
imul
push
inc
dec
jae
dec
inc
std
imul
iret
lcall
mov
cmpsb
lods
push
arpl
cmp
ja
pop
das
arpl
push
cmovae
mov
mov
mov
rorl
and
dec
add
jae
arpl
push
cmovae
mov
mov
mov
rorl
ss
loope
rclb
mov
test
lret
adc
out
pop
and
or
clc
fdivl
mov
andl
jle
xor
add
shrl
sbb
leave
int3
mov
dec
daa
fidivrs
les
ljmp
pop
mov
xor
out
or
push
std
mov
push
clc
mov
inc
outsb
sub
into
pop
loopne
mov
fnstsw
decl
fiaddl
imul
test
orb
imul
cmp
into
push
je
fldl
int3
popl
outsl
cli
scas
repz
lret
incl
fcomi
in
dec
add
and
andl
lcall
ljmp
mov
hlt
xchg
push
sti
lock
addr16
push
dec
pop
jno
push
daa
rcll
es
into
movsb
or
sub
jns
push
stos
inc
scas
mov
mov
add
add
in
dec
mov
jg
push
add
shlb
mov
adc
adc
jnp
leave
popa
jbe
and
pop
shll
lahf
inc
pop
out
mov
scas
xor
adc
mov
shrl
push
bound
or
add
ja
and
xor
xor
cld
inc
mov
sbb
adc
fs
lods
out
mov
push
loop
rolb
dec
push
outsl
mov
js
fisubs
push
scas
add
jns
cli
sub
faddl
inc
xchg
scas
insl
imul
adc
cmp
inc
mov
mov
mov
xor
adc
mov
cmp
pushf
loope
xchg
mov
pop
pop
sahf
inc
xchg
sbb
add
sbb
lock
cwtl
push
out
addl
push
sbb
dec
xchg
in
ljmp
mov
pop
push
shrb
jb
in
sub
push
adc
jmp
mov
adc
mov
cmp
fadds
mov
out
xor
dec
mov
dec
aaa
clc
adc
mov
dec
mov
mov
xchg
or
ds
push
dec
adc
jns
mov
cmp
insl
lods
xor
aam
lods
xchg
sub
pop
sbb
inc
popa
and
sbb
sbbb
dec
inc
mov
sbb
fwait
lcall
pop
push
hlt
sub
out
inc
cs
jmp
xchg
sbb
adc
add
push
lock
out
mov
push
jp
arpl
pushf
popa
aaa
icebp
adc
out
xchg
xchg
pop
repz
mov
mov
clc
stos
out
jmp
cwtl
jp
xor
inc
or
addr16
pop
adc
sbb
orl
mov
cmp
out
aas
fstl
jno
xorl
inc
cmpsb
mov
xchg
jns
mov
xchg
jmp
insl
xchg
add
or
shll
xchg
inc
hlt
cwtl
out
inc
test
dec
xchg
pop
sti
sub
fildl
mov
loop
lds
pop
loope
repz
xchg
ret
das
pushl
enter
mov
mov
xor
int
pop
or
and
aas
or
fwait
inc
subb
orl
xchg
mov
fildl
dec
xor
dec
roll
outsl
xor
add
enter
stos
hlt
cltd
adc
push
frstor
jmp
sbb
das
mov
in
xor
adc
pop
fs
xlat
hlt
jge
adc
test
xchg
jb
pop
insl
add
add
sti
imul
fidivl
push
fs
xchg
inc
fcompl
adc
iret
imul
sti
jecxz
scas
add
xchg
pop
in
cmp
jge
scas
mov
mov
ficoml
adc
aam
adc
xor
or
dec
jbe
fidivl
sub
and
inc
rorb
mov
in
lea
cltd
cmp
mov
inc
or
xor
mov
enter
insb
mov
adc
sti
cld
insb
push
sahf
in
or
pop
xlat
jmp
add
add
sbb
test
sbbl
scas
scas
inc
and
iret
lret
ret
adc
sub
test
mov
adc
dec
mov
cld
adc
dec
fs
pop
and
mov
out
popf
pop
inc
xchg
mov
xchg
add
scas
das
sub
xchg
xchg
insb
test
loop
sbbl
inc
pop
xchg
inc
frstor
call
std
adc
jbe
clc
adc
cmp
mov
add
mov
jmp
lea
imul
daa
dec
ficompl
dec
imul
les
jne
out
pop
outsb
stc
xchg
addr16
loopne
sub
loopne
jo
add
mov
sahf
mov
mov
cld
insb
add
sbb
mov
dec
mov
mov
popf
ja
push
divb
xchg
jmp
out
and
mov
jge
xchg
inc
cmpsl
dec
pop
add
int
in
jnp
popa
arpl
pop
inc
popa
xor
xchg
ret
pop
mov
dec
dec
jmp
inc
push
mov
add
rdmsr
out
testl
les
jmp
mov
std
mov
adc
stos
push
pop
aad
imul
pop
push
and
mov
adc
stos
loope
dec
push
les
inc
cltd
inc
test
ret
jmp
adcb
xor
test
mov
inc
jp
jg
out
icebp
sub
addb
loopne
mov
test
mov
icebp
sbb
or
nop
pop
lahf
fistps
insb
out
lcall
add
jl
xchg
sbb
jmp
scas
cld
in
xchg
or
repnz
xor
xchg
cmp
cmp
jl
jle
inc
into
outsl
inc
add
add
cmc
push
fisttpl
push
hlt
and
mov
xchg
and
xchg
mov
dec
push
xchg
scas
clc
out
jecxz
xchg
or
repz
cltd
xchg
lock
out
and
adc
push
popa
ljmp
dec
cmpsb
mov
mov
scas
push
out
pop
add
popa
ja
in
lods
push
sub
and
xchg
sbb
jp
and
sub
cltd
and
and
insb
jmp
mull
cmp
movsb
push
lods
sbb
adc
push
vpmaxsw
stos
sub
push
fwait
addr16
dec
popa
xor
dec
scas
add
sub
fists
scas
inc
lahf
mov
jo
mov
jge
aam
iret
push
in
rcrl
sub
adc
mov
or
push
add
sbb
sbb
std
fwait
pop
add
lahf
sbb
mov
or
fwait
gs
pop
adc
adc
or
movsl
rol
pop
dec
pop
loop
cmpsb
push
pop
scas
mov
mov
aas
and
leave
add
mov
loop
and
aaa
pop
fildl
pop
ds
aas
cmp
rolb
in
lds
mov
fisubl
mov
icebp
js
sub
and
fmull
ss
ljmp
outsb
test
outsb
scas
xchg
icebp
xchg
and
push
mov
push
or
adc
lcall
jns
jne
jmp
xchg
jp
jecxz
je
cmpsb
sub
scas
inc
ja
in
mov
shlb
pop
jle
mov
pop
push
cmpsl
push
sar
lmsw
and
dec
int
aam
push
or
rorl
loopne
add
fdivs
xor
mov
sbb
dec
mov
loope
sbb
ud1
dec
mov
sbb
inc
mov
popa
pushl
fmull
pop
cmp
into
pop
mov
push
mov
pop
mov
loop
rcr
cs
sbb
xchg
mov
cmpb
jg
test
mul
sub
insl
mov
xlat
pop
add
push
xchg
enter
adc
insb
sub
js
lcall
je
mov
dec
negl
lds
pusha
clc
jle
push
xchg
ja
pop
xor
icebp
and
cwtl
sub
mov
cmpsb
int
mov
cmp
dec
jae
pop
inc
insb
push
mov
mov
xor
fcompl
rol
int3
add
icebp
add
je
jl
push
lea
dec
xor
inc
lods
push
into
xchg
rcrl
pop
add
lea
xor
adc
scas
fdivrl
lret
outsb
psrad
sub
jl
ret
cmp
in
xchg
add
ds
sbb
sub
test
mov
mov
sub
and
rclb
xchg
xchg
mov
jle
push
inc
sbb
movsl
cmp
add
mov
cmp
dec
xchg
add
push
fdivrp
push
sbb
mov
sbb
sub
jg
pop
jno
rolb
cmp
jmp
or
mov
test
cmp
push
mov
pushf
sbb
test
push
xchg
into
in
dec
je
mov
push
lret
mov
lret
out
out
adc
jb
arpl
shrb
into
add
inc
jbe
dec
jae
fdivl
jb
sahf
dec
jg
xor
jmp
xor
jne
imul
jp
cli
jg
int3
aad
fdivrs
add
add
mov
sarl
xchg
mov
push
jg
mov
mov
mov
push
testl
addr16
scas
xchg
stc
cwtl
xchg
es
test
mov
repnz
fcoms
mov
adc
arpl
mov
add
dec
pop
jbe
adc
and
mov
sbb
loop
inc
in
cs
scas
or
outsb
fistps
cmovp
cmp
mov
movl
aad
testb
push
mov
lret
fcmovnb
daa
cmpsb
dec
adc
mov
repnz
push
and
bswap
mov
ljmp
nop
rcll
bound
pop
negb
sub
xchg
and
push
dec
adc
add
lock
out
lahf
orl
or
aas
aam
hlt
cmp
pop
xor
rcrb
scas
push
loope
jmp
xchg
jl
lret
jge
sbb
outsl
in
xchg
dec
mov
cs
lahf
pop
sbbb
adc
dec
out
bound
jne
and
jno
aas
fbstp
mov
outsb
ret
cwtl
dec
nop
dec
mov
ret
mov
inc
xchg
push
mov
out
pop
mov
sub
in
pop
mov
scas
xor
addr16
xor
mov
ret
stos
lret
dec
test
pop
jg
sub
add
add
fs
pop
mov
negl
je
xchg
inc
sahf
pop
mov
jbe
call
int3
imul
and
xchg
cmpl
inc
stc
pop
xchg
loop
dec
sbb
and
adc
aaa
pop
rolb
inc
dec
or
mov
mov
add
adc
test
mov
pop
mov
jge
or
or
call
rcr
fcoms
add
shlb
lea
cwtl
out
loop
sub
jnp
ds
cltd
xor
andb
popf
xchg
and
sbb
cmp
decl
hlt
lret
cld
mov
lods
fdivp
and
cli
stos
scas
cmpsl
cmp
dec
dec
cltd
cmpb
neg
and
cmp
mov
int
jae
mov
sub
cmp
aaa
roll
cs
dec
mov
sbb
mov
xchg
mov
mov
sub
sbb
push
mov
xchg
outsl
inc
mov
xchg
lods
dec
fisttpll
clc
sub
mov
inc
push
outsl
call
mov
pop
jbe
mov
cmp
ljmp
add
test
mov
xchg
adc
jp
popf
test
push
data16
xor
fdiv
stos
dec
scas
inc
pop
pop
adc
enter
push
sbbb
dec
lret
sub
adc
mov
enter
stos
sarl
lret
xlat
xchg
pushf
lret
jge
lods
mov
or
mov
push
aas
and
int3
aaa
mov
fs
fs
ss
dec
push
orl
into
mov
sbb
push
dec
jno
test
insl
shlb
loopne
cmp
cld
je
int3
cs
movsb
cwtl
lret
and
mov
shlb
into
nop
lcall
xchg
out
pop
xor
push
add
or
adc
adc
jmp
mov
add
xchg
mov
lds
fisttps
js
stc
rorb
dec
jne
mov
mov
push
rolb
pop
add
mov
lds
sahf
sarl
pusha
rclb
aas
enter
mov
xchg
scas
mov
and
adc
in
mov
fsub
fmulp
sbb
xor
out
pop
sbb
icebp
or
mov
das
test
icebp
fists
in
je
nop
pop
xchg
loop
mov
sub
call
imul
fmuls
aas
xchg
imull
jl
icebp
pushf
pop
jnp
mov
loop
punpcklwd
push
imul
xchg
je
popf
sub
mov
cld
and
pop
dec
pushf
negl
pmullw
int
dec
xor
jge
leave
xchg
loop
and
sahf
mov
lods
push
cmp
mov
leave
sahf
adc
inc
lock
xor
out
les
fs
and
adc
lock
cmp
shl
mov
mov
ret
sub
call
pop
orl
loope
jne
xchg
mov
stc
push
push
mov
cmpl
cmp
push
or
fdivrl
cs
movsl
push
or
das
jge
xlat
xlat
cld
mov
mov
dec
dec
sarb
and
adc
mov
cmp
enter
ss
call
lcall
icebp
push
div
mov
sub
add
mov
cmp
xor
daa
or
cmp
add
int
mov
add
stos
xor
or
push
imul
out
cld
outsl
dec
lcall
scas
test
or
xor
push
and
repz
clts
call
lock
jmp
jo
ljmp
mov
push
outsl
jp
test
push
mov
or
out
push
inc
sub
gs
mov
jns
sub
ja
sbb
add
inc
fcmovnb
add
pop
cmp
andb
int3
mov
fstps
insb
or
and
repnz
lds
aaa
das
aam
adc
cmpsb
dec
inc
jecxz
std
sub
mov
es
or
adc
inc
leave
cmp
das
cmpsb
popa
adc
int
fistps
loopne
dec
and
pop
jmp
imul
popf
shl
iret
xchg
packssdw
out
or
fcomi
pop
adc
jp
shrl
xchg
daa
xchg
sbb
push
xchg
out
jl
insl
inc
cmp
adc
hlt
hlt
jne
mov
je
xorb
adc
push
leave
adc
inc
lock
ret
cmpl
push
and
pop
pop
push
jns
jne
jmp
fistps
cwtl
push
xor
or
stos
cli
adc
sahf
inc
dec
pop
test
sbb
lods
out
andl
adc
fwait
push
stc
cmp
lcall
ljmp
sbb
mov
lret
sbb
and
fsubrs
sar
mov
lret
jae
andl
cmpb
imul
adc
lret
mov
xchg
pop
pop
mov
xor
pop
lods
ja
jecxz
mov
jmp
xor
or
outsb
mov
cmp
xchg
mov
push
ret
and
stos
out
jle
inc
sahf
test
xchg
or
pop
dec
push
mov
dec
jl
lahf
fisubrl
mov
rcrl
cmp
ret
stos
arpl
cmp
sub
test
sub
inc
push
jns
sub
mov
xor
les
dec
cmp
dec
aad
mov
std
jns
jmp
sub
imull
mov
pop
in
pop
pop
mov
out
mov
sbb
inc
adc
jne
mov
jae
xchg
fsubrl
stos
pop
cmpb
mov
mov
mov
loop
mov
cmp
push
sarl
test
sti
cmp
mov
sub
sub
loop
add
call
fdivp
pop
scas
adc
inc
outsl
jge
loop
dec
lods
mov
mov
scas
cld
sub
mov
jae
into
cmp
popf
jb
cmc
jg
dec
stos
or
adc
int3
ja
inc
enter
clc
aaa
mov
movsl
dec
pushf
push
dec
xor
repz
outsb
fnstcw
pushf
inc
imul
in
loopw
rcrl
mov
data16
rcll
repnz
stc
test
and
mov
div
and
or
mov
nop
stos
and
shr
ret
cmpsb
cmp
stos
pop
xchg
out
inc
int
in
cmpsl
xchg
fnstcw
nop
cli
es
sub
pop
out
bound
cmpl
push
or
adc
shll
jl
jno
mov
pop
mov
and
ret
jmp
into
jmp
out
stos
sbb
aas
out
or
jge
xchg
fldenv
push
rcrb
sbb
pop
mov
inc
repnz
push
insb
into
ret
or
inc
jge
movsl
jno
ja
in
inc
ss
stos
inc
les
dec
jge
add
dec
enter
push
rcr
pop
jb
lds
and
push
mov
mov
addr16
add
out
repz
lods
fidivrl
inc
inc
mov
jnp
xor
ficompl
mov
mov
outsl
pusha
push
adc
sub
hlt
sub
lahf
ret
cmp
xchg
adc
adcl
sahf
mov
push
addr16
mov
push
mov
loope
inc
int
inc
or
push
jo
sbb
cmp
pop
repz
mov
jg
outsb
das
pusha
or
movsb
sub
mov
cwtl
jns
dec
xchg
insb
mov
mov
fwait
movsl
ljmp
xor
sub
lds
add
mov
cltd
jle
xchg
pop
ret
adcl
addr16
inc
push
leave
and
adc
imul
sub
loope
test
xchg
popf
leave
popa
xchg
xchg
mov
sbb
or
xor
ja
jge
shlb
fdivl
mov
pop
sub
add
or
mov
hlt
dec
lea
cmpsl
adc
inc
and
dec
insb
jmp
dec
inc
sbb
stc
js
outsb
xchg
ret
femms
in
mov
mov
pop
push
lcall
inc
inc
aad
xor
loopne
mov
stc
xlat
push
inc
add
mov
xchg
push
stc
in
out
daa
nop
dec
jae
lret
pop
lods
push
icebp
jmp
mov
or
jmp
sti
sub
daa
addr16
imul
xor
adc
xchg
ja
imul
xchg
cmp
in
jae
dec
lods
pop
mov
adc
dec
xor
clc
jg
fdivs
jmp
cmpsb
adc
cltd
jl
or
aaa
sarl
sub
dec
mov
test
jmp
ja
sahf
sbb
stc
push
and
roll
fisubrs
mov
ficompl
lock
imul
mov
and
push
and
cwtl
mov
in
or
fsubl
sahf
fwait
sbb
inc
or
lods
pop
dec
or
clc
popf
mov
int3
not
mov
sbb
cmpsl
cli
int
inc
je
cmpsb
mov
push
pop
stos
mov
mov
push
xchg
jnp
shl
mov
jg
and
sbb
popf
mulps
test
mov
mov
add
adc
inc
sbb
jo
cmp
fisubs
aam
mov
test
nop
jne
sub
mov
lea
xchg
jle
rcrb
xor
mov
or
adc
out
sarl
js
ret
xchg
scas
jb
out
cmp
data16
mov
lret
lods
les
cmp
mov
clc
xor
js
xchg
xor
push
mov
xor
int
lock
fwait
xchg
iret
add
call
jo
std
push
xchg
xor
cwtl
test
in
addr16
inc
push
push
outsb
test
push
insl
imul
mov
pop
loop
ss
clc
daa
push
js
and
insl
hlt
and
ds
outsl
outsb
push
arpl
xchg
sti
js
out
das
popa
in
cli
sbb
fs
mov
and
jg
xchg
dec
jl
lcall
mov
xchg
lretw
mov
out
lock
lock
repnz
cltd
orl
lcall
mov
mov
pop
imul
push
fidivrl
sti
mov
iret
mov
sub
cmpsb
and
fisttps
ret
shll
cmp
push
loope
std
and
cld
xorb
inc
inc
add
scas
lret
mulb
dec
xlat
mov
inc
jmp
inc
mov
scas
cmp
popa
in
data16
test
add
sarl
mov
iret
dec
adcb
lret
xchg
adc
aas
jae
arpl
push
cmovae
mov
mov
mov
rorl
and
dec
add
jae
arpl
push
cmovae
mov
mov
mov
rorl
and
dec
add
jae
arpl
push
cmovae
mov
mov
mov
sarl
and
dec
pop
aas
jae
jecxz
rorl
or
iret
hlt
enter
pusha
sub
cmp
ljmp
cmpsl
flds
and
jp
dec
and
sub
jo
pusha
sbb
lret
shrb
loopne
adc
jp
dec
and
inc
inc
cmp
pusha
sbb
lret
shrb
loopne
adc
pop
inc
cmp
push
jle
insl
xor
in
loope
mov
leave
fcmovu
mov
adc
mov
daa
and
outsl
lret
sub
mov
pop
pop
shrb
or
into
pop
fistpll
pop
sub
or
dec
outsl
ljmp
test
mov
mull
adc
cmp
pusha
mov
jae
cmpsl
lea
loopne
fs
lea
add
inc
les
sahf
add
push
das
and
xor
imul
mov
pop
add
cmp
outsl
js
mov
pop
lcall
lock
inc
sub
mov
dec
mov
adc
or
push
ljmp
shrb
loopne
adc
jp
dec
and
sub
jo
pusha
jae
out
jecxz
test
fidivl
int3
fs
pusha
adc
inc
das
gs
imul
push
out
hlt
lahf
shrl
mov
mov
movsl
bound
add
and
cmpsl
inc
and
jne
scas
xorb
test
mov
adc
jp
dec
and
sub
jo
pusha
sbb
lret
shrb
loopne
adc
jp
dec
and
sub
jo
pusha
sbb
daa
fistps
add
ror
mov
cmpsb
cmp
jbe
jl
addr16
test
int3
hlt
scas
jl
loopne
andl
arpl
inc
idivb
outsb
jnp
js
fcmovb
lahf
mov
lods
xor
mov
mov
popa
aam
xchg
push
cltd
sub
mov
mov
pop
inc
testl
rorb
mov
jp
push
sub
movsb
stc
aaa
pop
dec
mov
mov
in
jo
dec
mov
or
ret
test
jns
dec
dec
mov
jp
sub
xor
jecxz
mov
and
insb
ljmpw
imul
xchg
aas
and
into
rol
in
push
into
mov
mov
jbe
mov
and
pop
sub
and
cmp
or
loopne
jl
repnz
xor
mov
mov
xchg
and
ds
fcmovnu
push
xchg
dec
jge
xor
ss
shlb
or
lods
fwait
sub
out
sub
xchg
mov
pushf
pop
stos
add
std
imul
loopne
inc
push
pop
adc
push
cmp
xchg
sbb
sub
cmpsb
xchg
add
pop
cmp
fisttpll
fwait
and
dec
add
mov
rorb
fwait
leave
fnstcw
je
jg
mov
imul
push
clc
jge
fstl
hlt
sub
jmp
jp
ret
xchg
xlat
out
adc
rcrb
pop
adc
push
pop
add
sub
sub
inc
aad
shll
out
fwait
test
or
xchg
pop
add
lret
loope
push
pop
sbb
test
hlt
scas
test
sti
shr
sub
add
lret
push
aaa
mov
mov
jbe
jne
adc
test
sub
or
fwait
cmp
jecxz
icebp
stc
xchg
mov
outsb
pop
pop
pop
push
cmp
inc
les
ss
sbb
shlb
fs
cmp
push
scas
and
xchg
dec
std
xchg
pop
loop
xchg
lds
mov
and
ret
dec
in
ja
push
or
xchg
aas
iret
inc
stos
sub
xor
in
popf
xor
xor
fsin
mov
cmp
in
xor
clc
mov
sub
pop
xchg
xchg
pop
sahf
xchg
mov
fs
adc
cltd
repnz
aas
xchg
cmpsb
pop
es
lods
imul
push
imul
loop
mov
dec
ret
iret
sub
stc
xchg
jno
jg
and
roll
es
push
pop
fs
loop
pop
dec
cmp
dec
movsl
xlat
loop
mov
lods
adc
ret
add
fstl
popa
push
lret
mov
jae
sub
pop
sub
or
fs
sub
pop
hlt
pop
rcll
mov
push
fiaddl
popa
testl
mov
cli
inc
testb
jge
lds
stc
jno
xchg
sub
inc
xchg
clc
mov
cmp
and
xchg
iret
mov
mov
pop
daa
fisttps
dec
jns
scas
fwait
stc
and
cli
fidivs
in
inc
aas
jecxz
jp
mov
and
cs
pop
sub
test
popf
xchg
adc
sub
in
and
mov
cwtl
lret
jo
dec
imul
std
xor
loop
mov
or
add
pop
sbb
loope
stos
loope
mov
xor
pushf
outsl
mov
iret
jmp
xor
dec
add
inc
pop
or
add
shrl
xchg
sbb
andl
inc
scas
iret
push
push
mov
fdivl
dec
xchg
push
jge
push
add
pop
fwait
adc
aaa
push
lea
add
sbb
jg
repnz
shll
test
cmp
jae
cmp
icebp
mov
push
aas
jg
repnz
sub
mov
fmull
sub
test
lcall
pop
dec
jl
dec
xchg
sbb
xor
xchg
sub
fiadds
aaa
inc
scas
cmpsl
in
sti
pop
lahf
movsl
ret
clc
mov
das
mov
shll
das
push
imul
dec
mov
aam
mov
cmp
jg
in
bswap
dec
cmpsb
cwtl
cmp
enter
jge
jnp
jae
shll
les
notl
cmpsb
cmp
pop
pushf
xlat
xchg
pop
scas
out
nop
xchg
xor
popf
push
jo
aad
stos
jp
shlb
xchg
push
and
mov
jecxz
scas
push
clc
mov
xchg
xchg
sbb
dec
mov
inc
push
in
hlt
xchg
je
adc
push
adc
pop
cs
pop
lds
inc
sbb
loop
sub
jb
jbe
je
mov
cmp
cmp
pop
dec
cmpsb
mov
cli
in
in
lret
mov
testb
mov
out
mov
fwait
jp
sar
imul
arpl
xor
lahf
dec
dec
cmp
popa
shll
sbb
or
xor
loopne
jne
int3
das
daa
and
insb
and
push
nop
jmp
mov
xor
out
and
cmp
mov
xchg
arpl
jg
gs
and
es
arpl
xchg
sbb
mov
cmp
lock
scas
scas
add
xchg
stos
cmc
cmp
sub
lods
push
lds
mov
loope
dec
jno
pop
sbb
pop
add
sbb
ja
lret
jno
jae
push
add
mov
dec
jae
mov
pop
cmp
xor
imul
push
fisttps
loope
mov
pushf
orb
in
out
sbb
mov
xchg
popa
mov
sbb
outsl
leave
jecxz
pop
hlt
inc
test
mov
lcall
xor
xchg
test
mov
neg
fwait
jp
jle
mov
and
rcl
out
ret
out
pushw
adc
in
xchg
cli
loopne
push
inc
dec
add
xchg
xchg
bound
repnz
sub
outsb
mov
cwtl
inc
cmp
outsb
adc
xor
sbb
mov
xor
and
das
imul
lret
test
daa
fadds
int3
mov
push
adc
cltd
mov
mov
mov
mov
or
ret
mov
mov
call
sub
jmp
fnsave
xor
jge
icebp
ljmp
fsubl
cmp
mov
mov
xchg
mov
into
ds
jae
fs
out
cltd
enter
rorl
in
inc
data16
test
and
add
mov
lods
adc
dec
repnz
sub
sahf
pop
ret
test
imul
bound
jg
mov
adc
jmp
lret
aaa
cwtl
lret
jmp
adc
lea
mov
and
cmpl
and
and
inc
mov
adc
sub
xlat
adc
cmpsb
in
shlb
mov
xor
out
lret
mov
and
jno
jnp
les
xchg
aas
gs
add
movsb
popf
iret
add
sbb
mov
pop
pop
fs
insl
in
add
cwtl
adc
pop
push
addr16
scas
mov
test
push
jbe
push
lea
int3
gs
outsl
aad
sbb
or
mov
jle
dec
pusha
or
shrb
adc
repz
push
inc
mov
push
pop
dec
loop
push
cmp
es
jp
adc
inc
mov
fs
jbe
repz
cltd
pop
sbb
sti
xor
ljmp
ficompl
jnp
mov
pop
pop
jns
movsb
sarl
sbb
fimuls
adc
jae
pop
mov
mov
in
mov
out
dec
out
ja
jge
js
cli
cmp
test
jle
ss
test
sub
jmp
sbb
adc
mov
hlt
push
adc
xorb
xor
sar
push
push
sub
outsb
loopne
stos
and
xchg
movsb
out
fimull
mov
stc
arpl
fxch
test
nop
fnstenv
stos
add
lret
dec
mov
jne
hlt
inc
aam
aad
cmpsl
xlat
sub
fs
pop
inc
cwtl
insb
add
mov
push
or
mov
dec
add
call
or
lahf
add
jge
addb
gs
jns
fcoms
mov
sar
lock
xor
call
jle
popf
xor
lahf
lahf
lret
popa
fstp
mov
dec
scas
add
push
push
orb
ror
gs
push
sbb
pop
or
pusha
mov
sbb
loop
repz
mov
mov
std
mov
and
xor
mov
inc
or
mov
ljmp
adc
ret
ret
jp
jge
sbb
and
sub
lds
das
mov
insl
popf
and
mov
cmpl
xchg
hlt
fnstcw
and
fcmovbe
sub
mov
or
xorb
inc
mov
dec
cmc
movsb
sar
dec
shlb
lods
lahf
cmp
or
cltd
insb
mov
add
push
cmp
mov
push
and
xchg
mov
hlt
push
mov
iret
clc
sub
insl
nop
jno
es
cs
cld
xor
push
add
lock
mov
pop
cmpsl
outsb
int
adc
and
pop
int
insb
sub
or
jmp
jp
lods
and
dec
int
inc
jno
push
test
push
jo
mov
nop
dec
xlat
mov
ja
adc
pop
call
in
test
cmc
cmp
test
xchg
pop
jge
mov
sbbl
cmp
sub
aas
outsb
shll
out
mov
jns
mulb
pop
pop
jb
adc
adc
rcl
jecxz
cmp
xor
mov
inc
mov
xor
add
aam
mov
popa
ficoms
mov
push
pop
mov
mov
add
mov
or
mov
cmpsb
int
cmpb
mov
lock
imul
and
movsl
pop
sub
xchg
out
test
out
or
out
rolb
sbb
fstpt
das
lret
add
daa
jnp
out
pop
mov
scas
push
mov
push
sub
in
mov
push
add
nop
jle
arpl
stos
movb
cmpsl
or
adc
fistps
roll
dec
sbb
and
or
push
mov
leave
and
pop
ljmp
ds
lret
inc
cltd
idivl
pop
rorb
xor
idivb
mov
into
jmp
cli
cmp
cmpsb
cltd
push
lods
inc
imul
lret
int3
adc
mov
int3
mov
jno
test
inc
pop
mov
adc
jp
pop
out
mov
mov
sub
add
int
dec
sarl
sub
and
push
or
popf
add
into
jb
les
sbb
lock
mov
jp
mov
xor
jbe
lcall
inc
lret
pusha
aaa
dec
cmp
das
and
lcall
adc
stos
push
inc
out
cltd
movsb
movsb
pushf
daa
lods
push
pushf
push
pop
jo
adc
mov
dec
movsl
or
iret
mov
or
sbb
adc
cli
rcl
jp
mov
lcall
push
cltd
pushf
loopne
inc
inc
pop
xor
mov
jl
mov
int
fwait
out
dec
ja
sbb
lock
rcrb
mov
dec
imul
mov
leave
rep
cmp
imul
stos
ds
mov
xor
jb
and
xor
inc
or
ficomps
fnstenv
xchg
sbb
jb
jl
xor
mov
out
adc
lods
mov
jge
xor
mov
in
lahf
and
push
aas
or
dec
test
mov
sbb
ret
inc
jb
lea
shll
adc
stc
loope
sub
movsb
mov
or
and
mov
fcmovnu
lret
push
adc
or
lret
call
and
dec
mov
sti
aas
sub
dec
adc
outsb
insb
shll
movsl
cld
adc
add
ret
call
nop
push
push
mov
pop
aad
inc
mov
fistps
fisubrl
xchg
in
loopne
push
jo
mov
and
jae
mov
shrb
test
xchg
sahf
and
mov
jae
mov
and
push
mov
sbb
mov
ficoml
and
ret
fsub
cwtl
mov
test
mov
cltd
mulb
cmpsb
adc
fimuls
hlt
cmp
adc
xor
js
fdivs
or
scas
inc
popa
xchg
mov
cmp
sbb
test
lret
mov
notl
or
jno
sub
dec
enter
movsb
xchg
jecxz
jg
loop
sti
mov
imul
shlb
nop
pushf
mov
repnz
pop
cltd
es
jnp
les
push
mov
add
movsb
imul
xor
pop
push
bound
andl
arpl
or
push
setbe
out
mov
test
cmpsl
jecxz
xorb
or
das
neg
pop
out
das
xchg
fnstsw
xchg
les
stc
ds
imul
pop
pop
call
dec
mov
add
and
leave
xor
int3
scas
and
push
icebp
data16
adc
add
or
mov
adc
mov
jb
xor
inc
sbb
inc
xchg
inc
into
mov
cmp
daa
xlat
inc
or
cmp
decb
test
xor
test
out
xor
and
int
rcrb
jno
mov
int
jmp
adc
xor
adc
jo
sbb
pop
shl
cs
inc
in
mov
mov
pop
out
dec
sub
push
inc
inc
mov
enter
pop
insb
xchg
xor
sti
scas
jl
jbe
icebp
pushf
pop
or
xchg
ss
jbe
lret
nop
or
cmc
sub
cltd
dec
les
xchg
iret
mov
inc
ret
dec
mull
les
mov
pop
js
test
adc
fistps
stc
xchg
jecxz
pusha
std
andw
adc
lods
idivl
test
addr16
cmp
dec
push
mov
push
aaa
xchg
mov
ret
inc
cltd
mov
pop
popf
in
inc
testl
ja
loop
jg
pop
in
and
sub
add
mov
clc
adcl
sti
push
cmc
pop
cmp
sub
inc
lods
int
add
xchg
xchg
xor
inc
inc
sub
cmc
push
insl
xchg
xchg
int3
outsl
fistps
mov
fwait
std
cmp
push
sbb
add
sar
or
ret
call
sub
iret
into
jo
fstps
insl
mov
xor
push
call
adc
inc
ror
out
repz
movsl
shrb
mov
out
inc
in
inc
ror
mov
adc
adc
mov
loope
inc
mov
aam
mov
int3
lahf
push
bound
pusha
or
fwait
adc
ja
jg
and
adc
push
outsb
push
dec
icebp
jge
inc
daa
dec
mov
xchg
mov
sub
and
or
rolb
mov
ds
or
pop
mov
clc
scas
mov
inc
arpl
sbb
adc
mov
or
and
mov
cmc
push
pop
mov
mov
and
cmp
das
jp
les
and
out
xor
int
out
or
push
cmp
outsb
push
or
cmp
in
ret
in
or
or
in
cmpsb
cmp
clc
push
clc
pop
pop
inc
sarb
movsb
cmc
or
loope
shll
add
sbb
push
push
pop
xchg
cmpsb
loope
js
lret
sbb
outsl
mov
xor
addr16
pop
in
jne
push
pcmpgtw
lock
xor
xchg
addr16
add
in
out
jo
ja
shr
xchg
add
xchg
push
and
add
insl
repnz
mov
xor
mov
aad
mov
push
mov
and
das
pop
mov
xchg
xchg
push
std
ja
imul
jecxz
fimull
int
jns
outsl
adc
insb
cmpsb
sbb
push
stos
xchg
dec
add
inc
data16
fldcw
dec
mov
mov
and
mov
mov
mov
nop
cltd
inc
mov
test
imul
sub
je
cmpsl
cld
testb
andb
lret
rorl
xacquire
sub
push
mov
lahf
int3
jne
adc
mov
cli
repz
mov
sub
mov
imul
inc
ret
iret
lcall
mov
loopne
sbbl
shl
push
mov
gs
test
popf
and
inc
mov
mov
jbe
ret
insl
jge
shrl
jg
fisubl
pop
movsl
cs
test
xchg
ss
xor
faddl
aad
push
sub
out
cs
mov
addr16
mov
movsl
pop
push
lds
push
cwtl
aas
or
pop
sub
insb
pop
insb
mov
xchg
out
dec
jecxz
pop
idivl
xchg
test
mov
ljmp
je
fcmovbe
test
mov
psubw
enter
out
aas
mov
adc
mov
int
inc
push
movsl
sub
pop
popw
dec
mov
sbb
popf
inc
mov
imul
mov
shll
repz
loop
rorl
out
icebp
adc
imul
int3
sti
icebp
bound
add
lret
pop
and
int
mov
sbb
sub
dec
pusha
cli
mov
inc
popa
iret
xchg
neg
leave
sub
test
fists
lea
stos
xchg
dec
out
pop
loop
jns
stc
inc
fimull
xchg
xor
jo
xor
loop
cltd
or
pop
lret
and
xchg
mov
mov
jecxz
enter
fistps
lea
outsb
mov
and
daa
in
sub
mov
mov
cs
pop
ljmp
stc
pop
cmp
push
ret
fwait
sub
jb
xor
adc
out
pop
fcoms
dec
mov
mov
push
sub
insb
enter
jb
push
das
rorb
push
cmp
int3
sbb
bound
mov
adc
ljmp
in
mov
push
ret
xchg
pop
lods
bound
pop
mov
sub
aad
push
insb
ret
orl
push
sbb
cmp
js
sbb
mov
or
call
in
sbb
mov
rorb
dec
inc
jp
jb
or
imul
repz
out
push
mov
or
mov
lods
mov
or
les
jle
js
cmp
or
pop
inc
cmpsl
fiaddl
cmpl
cmp
sahf
imul
add
inc
imul
mov
dec
xor
insb
stos
xchg
mov
fsubr
xor
push
pop
mov
pop
sub
push
mov
jno
je
mov
dec
mov
push
sbb
adc
pop
sub
mov
dec
pop
xor
pop
mov
xchg
icebp
pushf
adcl
add
cmp
sbb
pop
movsl
mov
stos
stc
fcoms
outsb
cld
jp
cmp
inc
mov
imul
fs
dec
xor
or
insb
adc
sub
push
add
push
std
add
xor
mov
mov
inc
or
roll
sahf
stos
cmp
mov
xchg
xchg
lret
mov
or
repnz
mov
or
hlt
push
pop
loope
sar
dec
mov
cld
dec
test
mov
sbb
js,pn
fistpll
mov
mov
in
add
sbb
insb
das
ljmp
inc
adc
dec
ffree
push
imul
adc
out
inc
push
js
mov
iret
pop
mulb
in
mov
mov
out
test
jecxz
add
or
pop
ret
das
lea
jecxz
loop
adc
aaa
cmp
jle
mov
sbbb
cmp
stos
aam
call
dec
aad
fwait
sahf
fidivrl
adc
stos
adc
inc
xchg
jbe
dec
sub
in
pop
inc
fmul
push
adc
pushf
sub
gs
jmp
shrl
mov
clc
sub
bound
test
cmpsb
mov
add
mov
es
lcall
arpl
mov
les
add
inc
jge
xor
xchg
ljmp
xchg
adc
int
ljmp
jo
ds
add
std
pop
push
mov
push
push
mov
or
shrb
loopne
adc
jp
dec
and
sub
jo
pusha
sbb
lret
shrb
loopne
adc
jp
dec
and
sub
jo
pusha
sbb
lret
shrb
loopne
adc
jp
dec
and
sub
jno
pusha
sbb
lret
shrb
pusha
lcall
and
mov
cwtl
in
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
in
or
push
sbb
and
xor
sub
lcall
ljmp
push
sbb
dec
cmp
push
cwtl
lret
lcall
mov
add
xor
push
and
sub
jns
mov
iret
clc
movsb
out
lods
imul
xor
push
arpl
add
loopne
add
movsl
mov
mov
mov
inc
mov
cli
mov
xor
mov
sbb
stos
gs
lahf
mov
in
lea
gs
rorl
dec
xor
sbb
out
push
ljmp
add
ljmp
xchg
in
or
fcmovne
lret
pop
adc
mov
andb
test
mov
mov
mov
ljmp
inc
inc
cli
cmpsb
adc
jnp
xchg
loope
pusha
jecxz
lds
out
fwait
into
sahf
jae
push
mov
mov
sbb
pop
jb
cmp
jae
adcb
mov
sbb
cli
stos
mov
jg
or
cmp
sub
fs
push
sub
cltd
repnz
out
pop
call
cli
iret
xchg
bound
or
dec
or
jae
outsl
js
push
jg
mov
into
xchg
jmp
rcll
outsl
sbb
pop
dec
or
jp
push
lcall
lcall
ljmp
push
sbb
dec
cmp
push
lcall
lcall
ljmp
stos
cmp
addr16
mov
mov
xchg
mov
pop
mov
mov
movsl
adcl
clc
mov
ficomps
arpl
or
adc
data16
lcall
and
jmp
test
push
adc
dec
jge
iret
test
bound
mov
pop
inc
test
lea
test
hlt
stos
push
cltd
push
subb
ja
fwait
dec
aam
inc
mov
stos
cmc
cmp
mov
iret
stos
ljmp
adc
mov
add
cltd
nop
pushf
in
lock
sub
daa
int3
daa
mov
lcall
sub
fimuls
sbb
dec
push
pop
sbb
lahf
lret
mov
mov
xchg
or
lock
push
outsb
push
mov
push
int
pushl
cmp
xor
jecxz
lods
shl
out
push
mov
mov
gs
test
cmpsb
xor
xchg
pop
add
fimull
jmp
sub
add
jne
outsb
xchg
dec
scas
sbb
sbb
test
test
xor
cmp
adcb
or
ret
scas
inc
push
out
xor
lcall
jnp
loope
aam
imul
lock
push
scas
mov
clc
jp
sti
sti
cmp
jle
push
jns
mov
std
icebp
je
and
mov
out
push
fisubrl
mov
clc
int3
pop
jmp
jmp
sbb
aad
push
cs
push
inc
mov
out
lret
cmp
bound
and
iret
inc
or
jo
add
lret
clc
push
pop
push
adc
pushf
ja
mov
leave
mov
fidivs
js
and
xchg
decb
jb
sbb
fnsave
adc
sbb
push
cli
jg
das
sbb
sti
dec
stc
cmp
push
outsl
into
and
cmpsb
cs
xor
sbb
dec
call
lock
rdtsc
dec
push
mov
ret
push
addl
jle
jb
mov
add
add
mov
adc
pop
jge
sbb
pushf
lahf
adc
das
ret
dec
nop
sub
fsubrp
fwait
push
mov
out
leave
sub
std
js
mov
jmp
repz
pop
pop
inc
xor
push
dec
push
pop
data16
je
ljmp
fldt
xchg
xorl
adc
inc
test
push
mov
jg
push
popa
cld
fsubs
leave
cmpsb
xchg
sbb
jo
lahf
ljmp
mov
push
shll
in
imull
mov
rcr
inc
sbb
into
jl
sub
cmc
das
dec
dec
add
and
fistpll
cmp
testl
dec
pminub
test
pop
ret
mov
xor
popf
int3
mov
mov
movsb
xchg
gs
mov
push
jmp
jne
push
shll
jl
lcall
sbb
xor
mov
jg
and
cmpsl
lods
and
sub
adc
in
loope
rcll
sti
call
sub
inc
mov
out
inc
lea
das
bound
scas
pop
out
iret
pop
out
flds
mov
mov
pop
in
add
mov
inc
cmp
dec
add
lahf
xlat
mov
dec
rcrb
cmp
adc
jl
mov
or
jne
jl
push
mov
insl
test
outsb
mov
test
xchg
mov
dec
cli
dec
test
cmp
jge
mov
push
in
pusha
cld
adc
enter
sbb
jg
filds
aaa
subb
pop
or
sub
sbb
mov
pop
push
mov
addr16
hlt
js
and
popf
or
lret
sbb
cltd
pop
fldl
cmc
fadd
addl
dec
pop
xor
xchg
inc
test
or
jp
popa
test
jne
ja
add
or
push
mov
xorb
aad
hlt
xor
stc
frstor
xlat
push
adcl
stos
inc
fs
pop
add
push
inc
fadds
rcl
lret
adc
dec
lret
dec
xor
popa
shlb
fldt
std
adc
mov
mov
sbb
icebp
mov
inc
and
mov
rcl
adc
outsl
add
cmp
in
test
call
ss
cmp
push
pop
pusha
jle
push
jb
pushf
inc
loopne
imul
cld
loop
mov
sub
push
sar
in
xchg
loop
xchg
and
arpl
lods
jae
add
mov
int3
in
fadd
loopne
mov
push
iret
dec
jae
std
rcll
mov
mov
out
push
faddl
loopne
lods
imul
lds
hlt
jmp
fiadds
out
rolb
shll
cmp
push
mov
mov
add
sbb
sub
xchg
or
push
push
lea
fucomip
or
sub
xchg
mov
out
ljmp
es
out
mov
jg
inc
push
add
nop
mov
mov
sub
sarb
stos
mov
cs
leave
mov
mov
fs
imul
dec
pushf
fwait
dec
mov
inc
push
fnstenv
sub
dec
mov
and
hlt
push
sahf
push
int
jmp
push
pop
rdtsc
cmpsb
jb
inc
cmpsl
lds
gs
mov
jle
cmc
shll
fcomps
push
out
rcrb
outsb
pop
or
sub
inc
fwait
je
mov
fsub
mov
pusha
xor
xchg
jne
pusha
mov
rcrb
or
and
cmc
mov
sahf
push
push
aad
or
xchg
adc
cmp
je
inc
push
fildll
cmp
sbb
xchg
sbb
cmp
add
and
adc
in
lods
add
cmpsb
xor
test
xchg
add
push
xor
aaa
add
jmp
mov
xor
mov
or
not
cwtl
cmp
outsl
xchg
daa
adc
xor
idivl
xchg
lcall
xchg
jne
add
lcall
das
popa
push
cmc
mov
je
cmc
sbb
frstor
add
call
inc
mov
mov
mov
je
test
cld
cmp
in
test
xchg
jmp
dec
and
jb
or
data16
lods
std
sahf
ret
aas
or
movb
mov
jne
int
dec
in
fists
stos
mov
sahf
std
or
fidivl
fisubs
insl
push
stos
stos
fdivrs
mov
and
sbb
xchg
xor
add
push
mov
sbb
popa
das
jno
xor
je
out
mov
fwait
inc
add
push
add
dec
sbb
ret
daa
cmc
xlat
mov
dec
or
jae
je
repz
hlt
inc
in
int3
adc
in
sbb
mov
mov
jmp
lods
cmpsb
cmp
fisubl
cmp
push
das
mov
sbb
lods
jle
add
mov
pop
outsl
jae
out
pop
push
fisttpl
dec
addl
xchg
fldenv
pop
mov
mov
xor
dec
jne
mov
jp
mov
repnz
or
adc
int
fadd
push
mov
mov
js
cld
cwtl
loopne
fstpl
clc
stc
xchg
test
fidivrl
and
xchg
cwtl
xchg
in
test
fistpll
xor
mov
push
ret
mov
cmp
movaps
dec
or
mov
addl
push
dec
dec
add
cmp
add
inc
xchg
pop
repz
fstpt
and
gs
sbb
and
cwtl
jo
xor
sub
dec
dec
pop
adc
in
xor
dec
gs
cmpsl
sub
insl
in
cmp
cmp
rcrl
inc
pusha
aam
fcmovnbe
dec
sub
mov
stc
sbb
sub
add
xchg
int3
sub
repz
pop
pop
mov
fbld
mov
jbe
insl
pop
out
xor
cmp
jmp
cmp
jecxz
adc
mov
loope
jl
mov
aas
fcomps
xor
jno
shll
fwait
push
hlt
push
xchg
sbb
sbb
mov
je
fcoml
push
add
lock
adc
lock
fwait
push
out
aas
xor
outsb
test
fcmove
cwtl
jo
cmc
cli
mov
or
pop
xchg
test
mov
mov
out
push
push
mov
aaa
fwait
outsb
inc
outsb
mov
lock
fcomp
insl
andl
push
stos
out
test
dec
je
push
mov
call
fucomip
add
push
xchg
aaa
out
mov
imull
pop
and
push
adc
ret
sbb
and
push
cld
mov
adc
fs
aam
nopl
cmp
or
daa
fstpl
dec
movsl
int
add
insl
out
cmc
jp
or
movb
insb
popa
pop
xchg
mov
xchg
push
xchg
negb
or
cmp
js
pop
sub
mov
or
jp
es
xor
xchg
popf
pop
pop
jne
std
push
out
xor
jge
sti
popf
xchg
stc
mov
jmp
sub
lods
leave
and
adc
add
iret
lcall
orl
mov
sub
push
pusha
fildll
adc
sbb
les
jg
xchg
mov
fs
pop
sbb
or
xor
mov
shlb
inc
cmp
xchg
push
push
popf
lret
xor
cs
push
lcall
stos
ds
push
std
xor
leave
mov
push
xchg
sarb
jp
in
fbstp
rcrl
aam
pop
mov
xor
fucomp
scas
gs
jne
movsb
mov
mov
cmpb
mov
push
push
lock
mov
repz
pop
aas
icebp
cmpsl
gs
lods
mov
and
xor
iret
xchg
imul
adc
nop
xchg
jle
dec
lret
cmpl
outsb
mov
test
pop
ds
call
or
xor
sub
adc
jmp
sub
rolb
and
insb
outsb
call
mov
adc
sbb
stos
adc
movsl
xchg
ficomps
stc
ret
lods
popa
cli
loope
lret
scas
cmpb
addr16
pop
icebp
pop
ss
inc
push
fists
incb
pop
cltd
testb
sbb
xchg
cmc
ds
jp
adc
es
mov
mov
sbb
mov
cltd
es
ss
sub
cwtl
lods
ret
mov
cld
or
jns
cmp
cmp
cwtl
adc
dec
aas
popl
pop
lret
ss
cwtl
js
mov
cmp
scas
cld
mov
sbb
push
enter
sbb
dec
std
call
mov
fsubrs
fidivrl
imul
xchg
aas
out
and
lds
and
loop
int
add
dec
mov
sahf
or
js
loopne
fiaddl
push
movsb
fs
sahf
addr16
outsl
gs
xor
jo
daa
jno
or
push
sbb
mov
jg
cld
inc
mov
dec
xchg
mov
stos
mov
sub
inc
daa
mov
mov
mov
mov
and
out
mov
fs
pop
ss
mov
and
lcall
out
xchg
adc
push
js
inc
xchg
dec
imul
jae
adc
adc
dec
mov
push
mov
mov
mov
imul
jmp
pop
jle
test
fadd
ror
daa
sub
lret
mov
movsl
flds
mov
cmpl
shrb
out
cmc
and
shlb
test
add
push
jge
jmp
cmp
andl
xor
cld
addr16
xchg
pop
nop
cmp
icebp
xchg
xor
jg
pop
dec
push
adc
and
or
cwtl
out
movsl
cmp
inc
mov
pop
out
sub
dec
mov
call
fstl
cld
cs
pop
fwait
notb
test
pop
mov
ljmp
add
mov
cmp
orb
cwtl
cmp
inc
add
stos
mull
ffreep
jbe
data16
es
add
xchg
jbe
push
push
push
xor
adc
fisubs
stos
int
icebp
in
mov
lods
outsb
fimuls
push
out
mov
push
dec
jl
adc
mov
inc
je
xor
and
cmpsl
repz
jp
push
hlt
out
push
or
rorl
lret
mov
filds
lahf
add
sbb
add
subb
xor
sar
es
mov
decl
addr16
stos
scas
xchg
mov
rorb
scas
add
repnz
pop
adcl
stos
pushfw
gs
and
test
sbb
adc
sub
in
lahf
sti
cli
fistpl
mov
outsl
dec
out
lahf
xchg
dec
jb
inc
pop
test
jae
arpl
int
push
pop
decl
push
dec
ja
mov
jne
mov
das
adc
fnstenv
adc
iret
mov
xchg
hlt
mov
cmp
push
cli
fs
int3
enter
and
mov
mov
out
mov
hlt
sbb
sub
jl
inc
pop
lret
test
in
lcall
sub
sbb
mov
jg
or
mov
je
push
int
testl
inc
mov
mov
mov
dec
push
jmp
cs
sbb
out
lds
jecxz
mov
not
mov
xchg
sbb
icebp
fwait
or
xor
repnz
adc
pop
sti
and
jns
jne
repz
or
call
mov
mov
fcoml
pop
mov
sbb
mov
push
adc
enter
fidivrs
lock
sbb
lcall
or
fwait
icebp
sti
jnp
add
and
orl
hlt
lret
xor
dec
adc
aad
fwait
cmp
jne
repnz
xor
movl
scas
test
lds
outsb
xchg
or
mov
sub
gs
mov
xchg
hlt
mov
in
outsl
lea
mov
fld
fldl
sbb
inc
or
push
addr16
ret
jno
add
xor
inc
sbb
scas
jnp
orb
stc
sub
pmulhw
das
es
aad
in
mov
stc
dec
cmp
dec
popf
mov
scas
clc
int
aad
aad
mov
in
cmp
or
shll
jne
jo
fldl
test
int3
adc
mov
and
sbbl
icebp
cmp
js
xchg
adc
ret
jo
es
mov
push
fisttpl
lahf
jnp
sub
fs
sahf
and
popf
adc
dec
xchg
int
mov
pop
xchg
inc
dec
jp
jns
lods
hlt
ficompl
push
xor
xor
fiadds
leave
and
rolb
xchg
leave
shlb
ret
jne
push
mov
add
lret
inc
icebp
cmc
and
stos
sub
aad
sar
shll
jno
xchg
in
and
out
loopne
xor
mov
vunpckhps
push
pop
loop
add
in
repnz
stos
lret
lds
push
jnp
jg
xchg
cmp
cld
mov
cwtl
cli
rcr
push
pop
xor
sub
mov
cmpsb
cwtl
cmp
lods
mov
stc
ds
adc
int3
ffreep
push
mov
push
fiaddl
push
js
xchg
mov
xchg
pop
mov
add
dec
in
jecxz
mov
pop
and
mov
decb
jnp
jmp
jne
rcll
lds
scas
dec
sbb
sub
mov
outsl
lea
call
mov
arpl
jno
sbb
je
cmpsb
xchg
inc
movsl
shr
pop
or
xor
cmpsl
jo
pop
and
int3
mov
xchg
nop
sbb
roll
addr16
cmpsl
sub
mov
xor
in
push
or
ljmp
lock
xor
cmp
stos
pushf
pop
sarb
xlat
das
sarb
icebp
mov
leave
shl
xchg
popa
add
arpl
ljmp
pop
push
xchg
add
sub
add
cld
je
mov
sbb
movsb
cmpsb
movsl
mov
aad
sbb
cmpsb
jge
ret
aas
rorl
inc
jmp
xchg
pop
cmpsb
or
mov
cmp
cmp
cmp
out
dec
ds
jo
sbb
pop
push
sbb
adc
dec
and
imulb
divl
pop
cltd
add
xor
pop
aas
aam
aam
popf
clc
add
push
xchg
fbstp
daa
aam
shrb
addl
push
cmp
cmp
ret
mov
add
fbld
cmp
fildl
mov
stos
stos
dec
xchg
push
mov
pop
push
push
mov
nop
sbb
xchg
xor
pop
aad
or
mov
nop
test
cmp
jno
cmp
loope
fld
mov
test
pop
iret
sbb
jnp
xor
inc
and
pop
push
repnz
stc
shlb
scas
fmuls
and
mov
arpl
lods
jbe
adc
std
pop
dec
lahf
test
andb
stos
icebp
mov
xlat
lea
ljmp
inc
xlat
mov
sub
mov
imull
push
pop
stos
mov
cmpsl
xchg
fisttpl
or
jae
stos
fwait
out
or
in
movsb
pusha
adc
dec
mov
dec
or
fstp
and
testb
xlat
mov
xor
dec
mull
cltd
dec
xchg
xchg
or
insl
cmp
repnz
cmpsb
lret
inc
xchg
sub
mov
jg
sarl
pushf
test
insb
add
xor
sti
movsl
fstpt
pop
sbb
jb
int3
cli
bound
movsb
jo
jge
add
icebp
cmp
xchg
cmp
jp
xor
mov
lahf
add
jne
les
nop
mov
enter
push
and
cmc
cltd
jae
add
and
sub
mov
sub
insl
inc
out
push
daa
leave
or
out
cmp
addr16
push
push
and
xadd
es
stos
ret
jge
xchg
lock
and
std
and
inc
inc
loope
mov
sub
or
and
loopne
jno
cmp
or
nop
mov
sbb
adc
pop
out
mov
jecxz
int
push
inc
test
push
les
push
mov
or
pop
jo
pop
adc
imul
and
xor
ds
je
add
ret
leave
mov
lahf
lock
cld
in
xchg
in
pushf
push
cmc
and
repz
loop
popa
arpl
fldenv
lcall
xchg
push
cmp
cli
fisttps
leave
dec
sti
fsubr
push
sub
mov
jmp
add
nop
and
inc
stos
xor
pop
mov
dec
popa
mov
dec
lret
mov
pop
push
movsb
or
mov
in
jmp
add
dec
nop
fildl
push
pop
orl
insb
into
enter
cmp
enter
imul
pop
cmp
ret
add
popf
filds
dec
mov
loopne
ret
mov
push
sbb
cmpsb
in
cli
out
call
and
lcall
out
and
push
jmp
pusha
push
filds
lock
mov
rorl
andb
sti
pusha
cli
cmp
fstpt
mov
out
movsb
mov
lds
fisttpl
cmp
add
sbb
cmp
std
inc
mul
adc
jmp
xchg
stos
and
in
cmpsb
data16
das
rclb
or
mov
data16
repnz
lcall
stos
sub
test
mov
cmp
mov
mov
jecxz
shll
das
test
or
or
xlat
xor
mov
dec
sub
cmp
pop
jle
out
sub
cmp
iret
loop
xlat
shl
cltd
int3
push
leave
dec
push
mov
imul
out
in
not
or
mov
adc
fsts
push
daa
fistl
sub
out
mov
mov
jmp
lea
out
sub
add
fdivl
inc
ljmp
pop
lret
fs
mov
and
or
rcrl
enter
mov
mov
sahf
ljmp
mov
ffree
cmc
jb
mov
add
mov
cmp
inc
add
shll
shlb
clc
dec
or
int
lods
out
add
das
mov
mov
or
inc
iret
js
xor
push
cmc
adc
mov
dec
aad
lcall
jae
adc
cmp
pop
or
jp
push
lcall
lcall
ljmp
push
sbb
dec
cmp
push
lcall
lcall
ljmp
push
mov
dec
cmp
push
lcall
lcall
ljmp
dec
sub
pop
sbb
jp
push
lcall
in
push
add
movsb
mov
xchg
xchg
push
fwait
xchg
mov
fpatan
and
aaa
adc
bound
push
inc
push
push
movsb
cmpsl
mov
test
hlt
test
daa
xor
add
sbb
fs
inc
ja
inc
push
push
mov
sbb
in
mov
cmp
data16
gs
adc
xor
fcomi
test
loop
mov
hlt
push
add
lods
iret
enter
cld
insb
mov
gs
movsb
dec
je
repz
repnz
jl
cmp
mov
clc
ljmp
int3
stos
sbb
dec
out
ja
shlb
or
dec
aaa
adc
jae
lret
daa
cmp
cltd
jmp
inc
xchg
push
nop
movsl
cmpsl
movsb
mov
xorl
cmp
aad
scas
mov
jmp
fwait
jb
cli
iret
mov
cmp
jp
push
mov
and
and
repnz
add
or
inc
fimull
dec
ret
repnz
testb
jns
inc
jge
xor
cmp
test
xchg
xchg
repz
test
daa
sub
sbb
or
cltd
pop
pop
push
gs
loope
loopne
xchg
inc
xchg
lcall
pop
inc
ja
jo
and
sbb
xor
ds
loope
icebp
jmp
in
mov
xchg
addr16
push
inc
add
push
daa
sub
ja
and
and
aam
push
call
stos
hlt
test
daa
xor
add
adc
fs
inc
inc
push
push
movsb
cmpsl
mov
test
hlt
test
daa
xor
add
adc
fs
inc
inc
push
push
movsb
cmpsl
fwait
loope
cli
out
mov
or
adc
into
xchg
cmp
sbb
in
pop
sbb
call
cmp
test
cltd
cs
sahf
xor
push
mov
add
inc
sbb
test
mov
shrl
add
jp
push
std
push
not
pusha
mov
hlt
xchg
int3
or
push
fists
jge
int
lock
adc
daa
sbb
dec
xor
cld
sub
push
ljmp
imul
xchg
dec
jne
jne
sub
repnz
add
movb
sbb
nop
jle
fiadds
xor
cmp
adc
cmpsl
push
push
pop
movsb
cmp
outsb
nop
sub
jnp
mov
mov
mov
add
xchg
repz
fwait
in
pop
xchg
or
add
nop
pop
ss
xchg
jecxz
mov
int
add
jecxz
mov
adc
xor
mov
jge
mov
adc
pop
lcall
dec
pop
out
clc
test
test
xchg
xor
jae
mov
sbb
adc
mov
jmp
aad
jl
pop
add
push
in
add
sub
pop
ret
fiadds
cs
ss
repz
pop
sbb
in
lahf
lods
mov
lret
rorb
adc
cmp
inc
mov
push
jnp
add
jp
mov
fs
mov
repz
mov
fimull
and
jns
cmp
mov
and
dec
jecxz
push
js
xor
mov
stc
not
out
xor
pushl
mov
mov
lret
or
test
pop
rolb
stc
mov
mov
shll
pop
daa
shl
movsb
cs
cmpsb
inc
lea
pop
pop
mov
cmp
add
or
dec
dec
mov
sti
push
adc
fisubs
lcall
scas
cmp
outsl
cmp
daa
icebp
ds
pop
mov
fs
sti
add
xor
orb
xlat
mov
shll
andl
mov
pop
loopne
movsl
pop
dec
js
aaa
add
clc
sti
ror
mov
jnp
divl
repnz
cmpb
rcrl
cmc
std
dec
lods
or
stc
jns
or
jne
rcrb
dec
loopne
or
lcall
sbbb
fs
mov
push
stos
lea
test
jns
sbb
lahf
and
fistps
xchg
rcrl
and
pop
xchg
cmp
sbb
test
jmp
mov
dec
jno
sbb
sub
push
cltd
cwtl
or
aaa
test
lock
mov
jne
jnp
outsb
xchg
jae
pop
cmp
inc
mov
push
int3
sti
shr
sbb
int3
push
bound
jno
insb
mov
jge
out
dec
int3
sub
js
test
xchg
adc
enter
sbb
xor
out
in
enter
sbb
ret
and
push
test
adc
addl
or
mov
test
std
adc
jl
mov
dec
pop
dec
imul
fstp
push
mov
or
push
inc
mov
ss
mov
mov
ret
xlat
fbstp
outsb
rclb
in
mov
mov
mov
cmp
pop
hlt
roll
inc
push
dec
fsubl
inc
mov
dec
xchg
mov
mov
dec
jp
xor
js
xchg
pop
inc
add
xor
enter
stos
loopne
outsb
ljmp
inc
mov
fsubrs
jb
sub
mov
dec
mov
jns
roll
mov
pop
jne
in
pop
filds
mov
push
push
jne
xchg
push
push
mov
shrb
loop
std
jmp
mov
daa
dec
mov
mov
popa
xchg
xor
pop
mov
in
sub
cld
ret
mov
dec
iret
sub
jb
and
cmpsl
or
xchg
scas
push
leave
xlat
repz
pop
insb
sbb
or
outsb
lret
je
push
incl
and
pop
clc
jns
mov
xchg
loopne
pop
pop
enter
shl
cmp
gs
jg
jo
jno
nop
inc
xor
out
iret
arpl
imul
xchg
xchg
mov
inc
mov
or
jle
test
inc
test
jns
loopne
jno
add
xor
cli
and
je
pop
fisubl
sub
push
sti
int
xchg
jge
mov
stos
mov
adc
lsl
mov
jle
enter
insb
sbb
faddl
jmp
loopne
cmp
jns
push
dec
inc
and
movsl
cmp
mov
outsl
mov
mov
inc
pop
outsb
jmp
add
std
dec
mov
add
xchg
adc
pop
mov
jmp
pusha
cmc
incb
xor
lret
sub
jns
les
push
xchg
mov
arpl
xlat
add
mov
decb
sbb
lock
lea
fnop
aam
mov
loopne
lods
pushf
jp
inc
mov
and
cmc
cltd
sbb
das
inc
hlt
mul
pop
xorb
stos
mov
xchg
aam
lcall
and
jg
adc
mov
insb
xor
adc
out
jno
jmp
adcl
adcb
hlt
ret
xor
adc
adc
jecxz
mov
adc
into
add
fwait
sbb
xlat
inc
xchg
xchg
out
xor
test
out
aad
in
inc
std
mov
mov
outsb
or
and
ret
in
cltd
movsl
mov
jl
loope
push
and
mulb
sbb
adcb
sub
jne
and
xor
in
jmp
pop
inc
js
into
jbe
scas
iret
push
push
jp
adc
std
stos
or
daa
and
jbe
jb
sub
shlb
mov
movhps
push
imul
rorl
fcomip
add
add
rcrb
cmpsl
jnp
xchg
mov
insl
in
daa
and
neg
cmp
jp
jmp
jmp
xchg
rcrl
xor
int
test
push
push
test
scas
mov
repz
xchg
pushf
sbb
jno
mov
int
push
in
rol
or
dec
cltd
cs
inc
je
ljmp
ret
bound
sbb
faddl
push
mov
pop
xlat
inc
push
nopl
fnstenv
mov
ss
outsb
adc
cmc
sbb
mov
xor
pushf
repnz
popf
push
dec
adc
mov
gs
xor
arpl
xor
roll
push
adc
loope
ds
adc
stos
scas
jl
and
shrl
push
dec
adc
js
lds
adc
inc
das
push
or
jge
mov
dec
pop
xchg
inc
test
push
inc
scas
cmp
sbb
pop
push
and
pusha
out
mov
sbb
adc
cmpsl
cli
out
jp
lret
pop
scas
leave
loop
ja
insl
int3
andl
push
xchg
push
cmp
xlat
jge
and
lods
pusha
rclb
out
int
cwtl
push
pop
insl
cmpsl
mov
pop
mov
or
rcr
movsb
add
fists
or
inc
aas
xchg
push
jl
or
int3
ud1
cmp
aam
and
sbb
fistps
mov
aam
inc
pause
sub
fildll
xchg
pop
outsb
in
aas
mov
push
sbb
inc
cmp
dec
mov
inc
lret
cmpsl
sub
add
pop
loope
xor
repnz
jns
cmp
push
pop
rcll
and
jb
xor
test
das
insb
adcb
jg
mov
jae
rcll
imul
xchg
jns
lea
lret
mov
mov
pushf
pop
out
pop
mov
pusha
jge
push
lea
sahf
stos
mov
mov
dec
in
repnz
fadds
mov
push
xchg
sbb
sbb
jb
inc
dec
mov
loope
andl
inc
subl
movsl
cmpsl
jecxz
mov
xchg
cmp
daa
fcomps
and
imul
lahf
xchg
outsb
addr16
outsl
add
std
in
jno
pushl
or
outsl
out
frstor
and
pop
cmp
es
out
in
lea
idivl
jae
xchg
pop
loop
push
mov
popa
in
bnd
fmul
in
insl
adc
repz
test
and
mov
lods
push
dec
cmc
xor
cs
push
outsb
shll
mov
jns
mov
sbb
mov
and
fwait
and
shrl
mov
iret
cs
imul
pop
lcall
add
mov
adc
ret
cmp
imul
sbb
or
sti
in
imul
in
and
iret
jae
idivb
rclb
dec
mov
aaa
push
jg
fst
cmp
sti
push
pop
mov
inc
hlt
mov
lcall
popa
aas
insl
push
xchg
pop
int3
sbb
mov
idiv
leave
cmc
pop
xchg
push
mov
pop
xchg
jecxz
push
mov
aam
fnstenv
pop
push
in
loop
outsb
sti
pop
cs
jae
dec
fmulp
mov
icebp
sub
in
add
outsb
dec
and
mov
leave
pop
mov
mov
clc
cwtl
cmpl
and
push
std
mov
xchg
sub
cmpsb
test
arpl
xorl
xchg
les
pop
xor
fwait
lods
frstor
dec
xlat
rolb
jbe
push
sbb
es
jb
mov
cli
dec
addr16
lods
xchg
pop
dec
pushf
aaa
push
test
mov
jge
xchg
stos
jl
imul
and
pop
cs
mov
dec
out
cld
andl
in
out
movsl
std
sbb
es
jmp
ja
xor
jnp
into
lods
or
fiaddl
xchg
jp
jo
es
xor
fistpll
aaa
and
movsb
sbb
mov
movsl
ds
icebp
into
push
mov
aas
in
cmp
inc
faddl
lcall
aad
imul
mov
mov
movsb
and
mov
jne
lret
mov
mov
xor
es
les
iret
call
xchg
repz
cmp
lret
mulb
adc
rcl
push
fisubs
mov
rcl
mov
aas
xchg
bound
and
clc
lret
fisttpl
add
int
jmp
cs
xor
push
sbb
add
fdivrl
mov
test
push
mov
enter
dec
sahf
lods
lods
js
dec
roll
fwait
mov
out
fldt
dec
mov
es
clc
popf
and
push
adc
xchg
pusha
lahf
stc
xlat
jns
lahf
add
cmp
jbe
arpl
cmp
sbb
paddq
xor
adc
fidivrl
fcmovne
inc
mov
mov
aas
or
in
cmp
pop
push
test
ror
xchg
addr16
adc
popa
add
jb
jo
int
mov
shlb
mov
pop
insb
rcll
and
jmp
and
outsl
push
pop
stc
mov
pushf
fdivl
int
adc
dec
inc
aaa
add
jne
sahf
mov
or
sahf
and
jmp
push
sub
call
mov
jnp
stc
xor
arpl
ljmp
mov
insb
sahf
lds
cltd
or
cmp
add
adc
inc
nop
enter
fcos
sti
xor
or
addr16
inc
fcomps
xor
jb
jno
push
pop
or
repz
pop
jae
bound
xchg
add
push
adc
xchg
rorl
loopne
lret
xchg
xor
dec
in
rcr
mov
lret
lods
push
or
cmp
test
ficoml
cli
data16
loopne
das
dec
fs
fucomip
out
mov
cmp
sub
in
push
lret
call
lock
insb
sahf
jne
sar
ret
cmp
fstpl
ds
mov
mov
pop
xor
in
sarb
es
push
pop
mov
mov
les
xchg
enter
jns
sub
dec
loopne
cltd
pushl
insb
int3
mov
xor
stos
push
loopne
orl
jl
push
pop
xor
rolb
inc
std
xchg
es
fimull
sub
inc
mov
xchg
arpl
push
fidivrs
shrb
int3
mov
movsb
out
and
sub
dec
cmpsl
inc
loope
cwtl
add
adc
aas
leave
pop
ss
scas
aam
into
mov
lea
jo
fwait
adcl
and
out
popa
pusha
mov
test
out
dec
xor
sbb
add
aam
loop
outsl
add
sbb
aam
sub
daa
fucomip
pop
out
add
adc
mov
sbb
lds
in
lret
mov
sub
mov
cmc
test
movsl
cmp
cs
pop
push
test
xchg
lods
and
sbbl
bound
push
mov
or
sbb
jo
insl
aaa
mov
mov
int
ljmpw
mov
mov
sbb
aas
in
rcll
mov
dec
jg
out
je
cmp
mov
adc
add
mov
rorb
lahf
mov
push
call
push
mov
jmp
push
lret
lds
jb
scas
int
cmpsl
cmpsb
aas
push
sar
dec
adc
outsb
popf
add
stos
fldenv
mov
sub
nop
xchg
pop
sti
std
inc
dec
fnstsw
pop
sahf
sub
push
outsb
mov
push
mov
push
inc
inc
mov
mov
aad
adc
mov
aad
cs
inc
out
icebp
or
xchg
lock
jp
cwtl
fiaddl
dec
pop
push
jb
push
inc
cmp
jp
dec
or
sti
aaa
adc
xchg
mov
mov
cmp
fwait
push
pusha
or
mov
fcmovnu
dec
push
test
mov
ds
jmp
and
and
fcmove
adc
jbe
dec
cs
cwtl
dec
and
pusha
sahf
xlat
sbb
pop
adc
in
aas
inc
fldenv
xchg
jb
and
and
add
pop
and
fisttpl
mov
js
push
cli
jns
and
sub
outsb
inc
fcomi
orl
hlt
cmp
sub
mov
repz
mov
pop
push
test
pop
mov
push
jnp
jb
ret
movsb
sar
and
test
and
xchg
mov
xchg
sub
mov
les
pop
cmp
daa
sbb
sub
sahf
and
aas
pop
adc
add
stos
add
js
in
push
sbb
or
loopne
jmp
js
jecxz
roll
jnp
push
sub
pop
push
stos
loopne
xor
mov
jecxz
insb
dec
push
fsubl
inc
clc
pop
adc
mov
rclb
int
bound
aad
push
mov
jg
xchg
int3
repz
pop
and
mov
scas
cmpsb
insb
mov
mov
iret
lds
scas
xchg
xor
in
adc
push
push
or
outsl
out
pop
iret
aad
inc
aad
ret
adc
mov
cmp
pop
jp
test
fs
jb
fdivp
scas
jns
jg
xchg
faddl
ljmp
pop
adc
and
xor
mov
dec
dec
mov
outsl
jb
repnz
or
dec
and
push
xchg
shrl
add
mov
std
xchg
mov
pop
test
daa
in
mov
xchg
pop
icebp
sbb
cmp
rcrl
lahf
lahf
daa
cmp
fdivs
repz
sbb
testb
jl
cmp
je
out
fnsave
enter
inc
lret
enter
jle
mov
call
test
ds
mov
iret
stos
xchg
pop
jecxz
clc
xchg
sbb
mov
cld
adc
dec
push
pop
cmc
cmp
dec
and
fsubr
hlt
repnz
aaa
rol
lret
fiadds
mov
cmp
cli
outsb
cmp
dec
ss
jne
sub
test
lahf
adc
sbb
imul
or
iret
stc
mov
jo
sub
movsl
sbb
and
addr16
test
daa
fucomip
dec
dec
mov
pop
sub
xchg
ja
pop
subb
mov
jg
clc
daa
mov
pop
jns
shrl
dec
cli
lea
cmp
cs
dec
addl
or
aad
push
push
pop
jno
xor
orl
adc
push
fwait
sub
sahf
aad
inc
dec
es
insb
popa
mov
sbb
sbb
xchg
adc
mov
sbb
loopne
in
pop
dec
mov
or
jae
cmp
push
cltd
mov
ret
xchg
shl
fistl
sub
pop
data16
subl
push
or
adc
dec
cld
fisttpl
jae
outsb
hlt
xor
mov
in
xchg
dec
dec
push
lods
rcrb
or
jecxz
adc
xor
mov
fwait
mov
lret
cmp
and
test
sahf
jno
sub
sbb
lret
pushf
adc
pop
lods
in
add
push
cli
xchg
lcall
adc
push
test
lcall
xor
sub
aas
cmpsl
jge
sub
repnz
adc
and
fxtract
mov
ds
mov
in
movsl
int
push
movsl
mov
xor
mov
mov
fdivl
mov
jmp
cvtps2pd
pop
and
popl
mov
loopne
lods
jo
or
imul
push
addl
and
subl
cmpsb
ja
jbe
je
xlat
sti
adc
dec
es
or
icebp
pusha
push
ror
sti
mov
pop
mov
cltd
xchg
add
ret
mov
rolb
mov
mov
addl
mov
cmp
xor
insl
and
xchg
call
movb
test
xtest
iret
div
clc
add
cmp
mov
in
mov
xor
sbbb
jnp
cmc
mov
xchg
insl
dec
xlat
and
adc
stc
iret
mov
fcompl
mov
test
adc
jne
jne
inc
testb
outsl
andps
push
cli
stos
aaa
lods
cmp
xchg
mov
pop
sarl
in
dec
push
dec
call
insb
sub
jecxz
push
dec
sbb
dec
daa
jnp
push
add
mov
int
and
and
fisubs
xchg
outsl
aaa
sbb
aad
mov
push
movsl
adc
push
rcr
dec
inc
lret
pop
stc
cs
lahf
cmp
pop
pop
xchg
loop
dec
das
ds
leave
add
dec
push
jb
xchg
pop
cmovae
push
iret
cmp
aaa
sub
iret
enter
inc
pop
inc
pop
mov
push
outsl
dec
jmp
icebp
int
mov
out
jp
dec
or
mov
jge
or
gs
xor
xor
push
lret
add
and
cmp
data16
repz
daa
into
ds
in
or
add
push
dec
daa
cld
or
aad
xchg
push
jecxz
or
in
stc
movsl
pop
ret
fwait
or
inc
jno
mov
mov
or
pop
fwait
jne
es
mov
adcb
cltd
cmc
dec
test
rol
mov
and
out
lds
xchg
mov
jb
bound
sub
fs
orl
jecxz
sub
mov
mov
sub
lcall
push
xor
cmpsb
cli
jecxz,pt
xchg
sahf
daa
outsl
cli
inc
repnz
sub
dec
ret
imul
inc
xchg
gs
test
movsl
cltd
dec
inc
test
cmp
lea
mov
mov
push
insb
inc
nop
sub
shrb
cmpb
mov
cmpsl
fs
adc
mov
or
or
pop
pop
inc
out
pushl
lret
in
sbb
jle
int3
push
mov
push
push
adc
push
call
add
stos
scas
pop
mov
cmp
jbe
and
lahf
aaa
pop
insl
enter
mov
pop
stos
pop
push
cmp
jb
mull
and
inc
push
scas
ljmp
outsl
int3
lcall
inc
xor
fiaddl
loopne
jmp
push
lret
in
pushf
pop
sti
mov
mov
mov
and
pusha
push
pop
or
sub
shlb
add
out
ds
ret
sub
inc
adc
mov
add
pop
in
cmp
jns
sbb
xchg
syscall
cwtl
sbbb
push
into
int
sbb
andl
fsubrs
movsb
fs
xlat
lahf
cmp
xor
xor
push
lcall
dec
inc
xor
sbb
repz
fnsave
jb
rorl
cmp
push
mov
lahf
dec
jbe
adc
sbb
dec
inc
mov
imul
mov
xorb
out
test
daa
xor
add
adc
fs
inc
inc
push
push
movsb
cmpsl
mov
test
hlt
test
daa
xor
add
adc
fs
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
pushf
and
xor
add
adc
arpl
inc
dec
push
mov
inc
mov
test
xlat
out
hlt
testl
popf
scas
pop
adc
adc
cld
btc
stos
das
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
sub
cmp
mov
cwtl
sbb
imul
mov
sub
aam
push
sub
mov
test
clc
mov
orb
flds
or
jne
or
jns
push
mov
pushf
daa
clc
out
int
cltd
pop
in
xor
rcl
je
mov
nop
push
clc
cmp
lods
dec
cmpsb
icebp
andl
lds
test
dec
jmp
cmp
lods
lods
enter
test
leave
push
jne
or
push
jb
pushf
pusha
push
into
xchg
repz
leave
xor
cmp
dec
call
repz
xor
xchg
arpl
sub
fiaddl
jl
inc
sbb
jbe
mov
pusha
mov
fstpt
pushf
outsl
je
sub
dec
pop
inc
enter
cmp
add
nop
push
sub
test
f2xm1
out
and
sbb
leave
jl
or
xor
dec
jmp
clc
cmp
sub
mov
imul
clc
pop
fstpl
lock
stc
cmp
aaa
mov
into
dec
fstpl
fdivl
js
imul
dec
in
stc
daa
lods
imul
js
sbb
or
js
pop
xchg
xor
pop
test
pop
mov
jmp
js
mov
cwtl
sbb
imul
mov
sub
pop
fldcw
js
mov
cwtl
sbb
imul
mov
mov
dec
xchg
loopne
xchg
cmpl
or
rorl
and
out
jne
mov
pop
push
sti
cld
adc
xchg
sub
aam
popf
inc
repnz
sbb
mov
lcall
outsb
adc
jle
sti
int
inc
sbb
mov
sbb
vunpcklps
cmpsb
aas
jmp
dec
sbb
lock
ret
add
jae
addb
mov
mov
cmp
adcl
pop
push
icebp
shll
shl
cmpsb
arpl
dec
aas
gs
mov
aas
in
dec
push
rcl
dec
rcrl
pop
pop
mov
int3
pop
adc
pop
dec
sub
jnp
cmp
push
and
in
mov
repz
mov
lret
jo
xor
popa
jl
mov
mov
mov
mov
sbbb
test
dec
daa
enter
xor
and
or
imul
mov
inc
xchg
sub
pop
mov
mov
rcrb
movsb
pop
cld
jp
data16
pushf
xor
sub
cli
pop
test
orl
popf
sub
push
stos
mov
scas
outsb
xchg
mov
notl
fs
push
shlb
cmp
push
jp
jg
test
jg
inc
fnstcw
int
xchg
sub
and
mov
sbb
xchg
xchg
and
add
jno
or
cmpsl
push
insb
xorl
jae
lret
es
push
push
jp
jns
fimull
jbe
sbb
daa
push
push
sbb
xor
movsb
ja
pushf
push
jge
inc
xor
mov
xor
adc
adc
in
jmp
mov
inc
stc
iret
jmp
mov
popa
dec
jle
fmull
pop
fldl
jne
insb
adc
outsl
push
xchg
scas
xchg
hlt
sarl
sub
cld
push
cmp
lds
cmove
sub
js
jge
push
and
enter
into
sub
test
sub
mov
xor
int
out
sbb
push
and
loop
dec
xchg
cmp
or
and
add
ljmp
je
add
loopne
add
popa
test
aaa
jbe
sbb
adc
iret
arpl
fs
stos
xor
cmp
xchg
stos
lods
push
pop
nop
sti
xchg
adc
xor
mov
mov
inc
mov
pop
outsb
fwait
mov
js
push
stos
movsb
test
or
fistpl
pop
xchg
adc
stc
sub
movsl
jmp
adc
and
jmp
cmp
add
add
jmp
mov
jle
insb
mov
cmp
cmp
add
mov
pop
cmp
movsl
in
pop
aas
int
adc
mov
pop
lods
scas
mov
dec
hlt
imul
jp
inc
jmp
test
cmp
mov
mov
lcall
xor
dec
jge
sub
divb
xchg
ret
int
cs
lods
adc
add
pop
imul
push
ljmp
fisubl
shlb
in
push
outsl
int
mov
push
pop
xor
jg
mov
sub
cmp
ss
xchg
mov
jecxz
jg
in
jecxz
pop
add
cmp
divb
dec
cli
mov
insb
jb
xorl
repz
xchg
mov
adc
pop
ret
pop
scas
call
fisubrs
adc
aam
xor
xchg
or
cli
ret
js
xor
ret
pusha
into
in
jle
jns
lods
or
jle
mov
xor
xchg
cwtl
jb
cmc
pop
mov
stc
call
sahf
lea
sbb
mov
adc
jns
adc
mov
jmp
inc
pop
push
aam
arpl
mov
cmp
push
icebp
aad
insl
inc
pusha
or
call
pop
xchg
fdivl
push
mov
into
mov
push
inc
pop
nop
test
xchg
push
inc
sub
arpl
xchg
das
push
xor
test
jl
cli
incb
test
lods
imul
or
test
loopne
outsb
push
pop
xlat
ret
ficoms
push
cltd
fldcw
popa
mov
int
push
mov
ja
mov
rorl
mov
jbe
jne
jl
sub
xchg
inc
subl
pop
mov
pop
clc
imul
mov
test
dec
mov
fs
inc
out
jmp
popa
rolb
jmp
inc
push
stc
mov
mov
adcl
inc
cld
xchg
xchg
cmc
xor
mov
in
cmp
aam
inc
and
sub
xor
adcl
aam
dec
cld
shll
aaa
xor
add
push
xorb
pushf
in
xchg
xchg
add
int
out
mov
push
inc
add
jne
cmp
arpl
and
push
mov
sbb
jecxz
add
pop
cli
repnz
cmp
lock
push
sub
hlt
dec
icebp
adc
int
jge
adcl
add
jmp
push
xor
arpl
ds
fists
or
scas
mov
aaa
xchg
mov
aas
and
hlt
cmc
aad
sbb
pop
nop
les
pop
adc
jns
mov
push
add
mov
outsl
jmp
fsubp
sub
adc
movsb
int3
out
xor
out
mov
mov
mov
fcomps
daa
and
out
fsub
js
pop
rep
push
dec
push
mov
jl
test
gs
inc
lret
push
push
mov
jp
jbe
jo
inc
int
nop
and
mov
mov
and
jmp
jno
xchg
jae
sti
arpl
orb
pop
movl
mov
xor
popf
sbb
sbb
mov
xor
dec
or
movsl
jmp
jle
insl
jge
dec
inc
aad
popf
cmp
adc
ficoms
inc
push
mov
into
ds
dec
sbb
repz
mov
xchg
sahf
xchg
mov
rcrb
add
flds
iret
std
sbb
pop
pop
cwtl
dec
and
or
les
jne
lds
fidivrs
xor
lods
xor
or
sbb
mov
mov
mov
andb
xorb
idivb
movsl
jle
icebp
fldenv
imul
rorl
bound
xor
es
scas
pop
and
iret
adcb
inc
xchg
mov
inc
pop
hlt
bound
fsubp
cwtl
add
shrl
push
push
xchg
je
mov
stc
cmp
and
loopne
lods
mov
jl
outsb
cli
iret
cli
jne
add
fcoms
ret
xor
pop
jne
add
inc
fisttps
js
test
mov
and
jns
inc
cmp
cltd
mov
cltd
movsl
mov
popf
sbb
dec
pop
xor
xchg
cmp
inc
aam
mov
es
divl
jmp
sbb
push
mov
mov
jmp
cld
sub
fbld
sub
or
outsb
fidivrl
int
sub
loop
or
push
insl
add
test
mov
aaa
jae
cmpsb
out
push
cmp
leave
stos
dec
or
dec
inc
test
sbb
hlt
in
dec
mov
add
mov
dec
cmp
out
in
push
loope
test
mov
notl
or
mov
mov
clc
mov
jp
popa
fists
out
and
in
xor
dec
cwtl
mov
loop
push
cld
xor
loop
cmpsb
insb
cmp
fstpt
mov
or
and
in
rorl
loop
lcall
xchg
pop
inc
dec
call
xchg
mov
mov
sbbb
add
int
out
in
scas
push
fbstp
adc
cmp
jle,pn
div
sub
addl
nop
pop
test
mov
xor
cmp
sbb
sti
add
and
lods
or
call
lret
jbe
and
lds
push
sbb
aad
xchg
lret
xor
dec
xchg
inc
shr
and
std
cmp
loopne
cmpsl
cmpsl
mov
cmpsb
cs
test
cld
clc
jle
out
mov
pop
sbb
enter
sub
pop
adc
and
cli
push
dec
adc
inc
adc
ja
pop
data16
repnz
stc
xlat
in
lahf
popf
lock
xor
sub
jb
or
cmc
sbb
lods
mov
sbb
stos
dec
pop
push
lock
js
cld
sbb
cmp
jnp
xchg
add
push
push
pusha
add
fidivrl
xchg
push
mov
cmpsb
bound
pusha
pop
sarl
add
cmp
mov
jmp
or
dec
test
in
int3
stc
popa
leave
sbb
pop
aaa
int
inc
push
inc
cli
shrb
aam
dec
out
ljmp
ljmp
stos
imul
test
data16
pop
fdivrl
fwait
mov
pushf
nop
sbb
addb
test
mov
hlt
out
mov
add
and
sub
sbb
hlt
cmp
nop
push
mov
mov
aad
lahf
cmp
mov
dec
mov
xchg
xchg
xlat
inc
repz
dec
xor
or
dec
inc
adc
icebp
adc
push
cmpsl
push
mov
and
pusha
scas
nop
call
adc
leave
int
fwait
push
sub
lret
cltd
pop
pop
fiadds
sar
mov
sub
jecxz
out
mov
aaa
rcll
push
sbb
pusha
lods
pop
fstpl
fcomps
insl
repz
inc
pusha
fcmovb
daa
stos
sub
ret
or
hlt
lock
nop
push
mov
lea
mov
jne
daa
mov
xchg
pop
iret
cmpl
pop
repz
fstps
jns
cmp
decb
in
jae
test
fidivl
gs
call
pop
ret
lret
or
mov
out
ret
sub
xchg
pushf
mov
or
jae
or
push
inc
addb
repz
cmp
in
add
mov
mov
push
cmp
call
push
mov
push
cwtl
mov
push
adc
mov
mov
rdtsc
push
out
jl
icebp
or
bound
fs
cmpsb
outsl
sbb
fucom
pop
sub
in
dec
jg
les
and
pop
pop
cmp
jl
fs
mov
je
xchg
or
test
inc
or
repz
sarl
xchg
push
test
dec
jecxz
out
and
pop
lret
scas
clc
jl
daa
cmpsl
cs
ja
cmp
insb
dec
sbb
js
sub
pop
loop
jae
lods
js
fwait
xchg
mov
test
mov
ja
xchg
push
arpl
pop
scas
cmp
mov
fcmovnbe
lret
push
pop
shrl
mov
mov
std
mov
jl
ret
push
cmp
or
shll
adcl
in
push
std
loope
jmp
xchg
lret
sub
adc
jb
sbb
scas
add
pop
je
call
push
bound
sbb
adc
jp
ret
lds
mov
cmpsl
dec
adcl
pushf
add
or
cltd
lea
xor
xchg
xchg
test
inc
lods
aad
inc
cmp
in
ds
in
out
xor
out
icebp
icebp
pop
xchg
cmp
pop
sbb
jge
loope
push
repz
movsb
insb
and
mov
cmp
loop
std
imul
sti
test
lock
add
jle
icebp
xorl
lea
xlat
xchg
push
xlat
and
sahf
add
pop
lsl
mov
gs
ret
fcoml
shll
adc
pop
mov
or
and
dec
jnp
jbe,pt
in
jnp
mov
movsl
jo
aam
shrb
pop
dec
fwait
ss
pop
mov
cmc
loopne
jle
loope
scas
or
sub
insl
add
push
inc
mov
cmpsb
gs
loop
js
xchg
push
inc
adc
inc
push
cs
test
lahf
xlat
ret
fdivr
push
and
idivl
jne
imul
mov
cmp
movsl
inc
xchg
mov
pop
dec
inc
mov
push
in
cmpsl
xor
fldl
outsl
stos
dec
sahf
add
shrl
pop
insl
sbb
jae
inc
out
or
xlat
inc
sub
push
push
sub
push
dec
or
stc
pop
and
cwtl
in
push
loop
ljmp
push
add
repnz
push
lods
lods
xor
sti
arpl
inc
xchg
xchg
sahf
push
stos
xchg
mov
xchg
in
lock
sbb
lahf
mov
push
fcmovb
push
mov
jns
push
add
dec
add
shl
in
fcompl
mov
lret
adc
sub
fsts
fmull
test
das
repnz
inc
xor
mov
xchg
and
sub
insl
dec
outsb
les
or
mov
push
sbb
jns
sbb
nop
mov
dec
mov
dec
dec
add
int3
pop
or
cmp
out
mov
xchg
jmp
jns
lea
out
repz
sub
test
jle
in
bound
arpl
das
repnz
push
xchg
repz
mov
pop
mov
xchg
adc
arpl
iret
inc
in
xchg
mov
fildll
scas
mov
les
fwait
xchg
push
sub
test
sti
inc
cmpsl
fldcw
subl
sub
or
sarb
sahf
iret
sar
sarl
repz
jnp
dec
dec
cmp
mov
repnz
jno
add
in
sbb
addr16
jno
out
inc
outsl
mov
and
fwait
arpl
dec
in
je
adc
xor
fadds
inc
test
movsl
scas
or
setp
xchg
inc
pop
or
in
psubsb
stos
or
jge
dec
in
lea
mov
mov
das
ss
jmp
mov
pop
inc
mov
nop
or
mov
cmp
les
in
stos
pop
repnz
mov
cmp
adc
outsb
or
xchg
fistpll
das
pusha
jge
dec
cmp
in
lea
std
lods
cmp
sub
xor
sub
push
dec
das
pop
jb
mov
and
fs
cmp
icebp
pop
jb
xchg
xchg
xchg
insl
outsb
je
fwait
insb
mov
imul
rcrb
jmp
dec
xor
sub
test
adc
test
jmp
xchg
in
fnsave
xor
adc
and
movsb
inc
out
mov
ss
ret
xor
push
cwtl
ret
addr16
or
insb
cmp
test
je
scas
dec
mov
mov
outsl
cmp
push
shl
mov
mov
mov
sahf
cld
rorl
insb
arpl
mov
xchg
jae
cmp
lahf
inc
xor
sub
push
outsl
shrb
ret
add
stos
jmp
sbb
gs
shrb
nop
mov
inc
push
push
mov
xor
insb
stos
ljmp
xor
mov
imul
shlb
mov
frstor
pop
insb
jnp
mov
aaa
shr
pop
sti
and
adc
test
jg
inc
dec
fs
cld
and
push
lods
dec
addr16
shlb
ret
invd
nop
lahf
xor
or
pop
mov
popl
shl
mov
insb
xchg
mov
call
ds
fmuls
jg
inc
sbb
fcomps
or
mov
popa
or
xchg
or
and
in
int
push
sub
loop
jo
push
xchg
sbb
cmp
cmpsb
gs
inc
dec
pop
cmpsl
jae
mov
or
sbbb
rclb
into
xor
sub
inc
inc
adc
inc
push
xchg
cmc
xlat
push
xlat
mov
nop
js
add
movsb
cmp
int3
and
lods
stos
xchg
faddl
cmp
inc
add
and
popl
leave
mulb
out
cmpsb
inc
icebp
out
divl
xchg
cmpsb
mov
mov
mov
and
mov
pop
inc
dec
ds
xor
push
icebp
sahf
mov
mov
dec
cld
ja
std
xor
xor
cmp
sbb
sbb
movsb
or
cli
add
popf
jns
sub
pop
push
aas
push
inc
mov
loope
push
das
iret
in
stos
out
jae
xchg
xchg
cmp
ret
std
xchg
inc
je
pop
negl
call
das
mov
xor
or
lcall
pop
xchg
sahf
add
cmc
xor
push
push
jecxz
pop
add
loop
mov
mov
sbb
xchg
push
push
call
in
mov
cld
cmpsb
xchg
shlb
outsl
mov
jmp
test
mov
pop
or
cmp
pop
loop
cltd
shrl
push
cmpsl
jle
call
nop
push
iret
out
repnz
cmp
cs
nop
rcl
aas
movsl
mov
cmp
leave
or
pusha
xor
jo
gs
sub
xchg
movsb
test
adc
cwtl
mov
sbb
and
mov
mov
adc
or
aaa
dec
mov
lret
pop
jne
cmp
loope,pn
push
xor
sub
or
out
sahf
jmp
push
lods
pop
sti
adc
fisubrl
pop
ja
mov
push
inc
sbb
insb
addr16
add
ss
or
xor
add
repnz
outsb
stc
sbb
repnz
push
push
arpl
in
mov
imul
pop
jo
add
test
pushf
jmp
negb
mov
divb
scas
ja
mov
inc
and
mov
sti
insl
mov
mov
mov
or
test
scas
addr16
lret
lea
jbe
scas
cmpsl
aas
psrlq
jmp
fnstcw
aam
mov
push
icebp
push
and
sub
pop
pop
xchg
insb
inc
popf
mov
jl
out
mov
sti
stos
mov
and
lods
insb
in
push
pushf
pop
movzbl
fdivp
xor
imul
and
xchg
cmc
sbb
ret
mov
bound
mov
outsb
sti
mov
mov
jge
jge
cmp
mov
test
jb
loopne
js
sub
call
inc
test
add
and
push
in
jae
mov
imul
ja
repnz
out
mov
aas
push
mov
inc
lods
shll
clc
jns
mov
rorl
adc
testb
mov
dec
hlt
popf
adc
jnp
sub
loopne
aad
clc
xchg
scas
mov
xchg
cmp
push
or
or
mov
sub
rorl
jb
rorb
mov
rclb
inc
test
dec
xchg
cltd
jo
xchg
pushf
push
nop
cmp
mov
add
pop
mov
sarb
jmp
lods
fnstsw
out
and
rcr
cmp
sub
inc
or
outsw
rcrl
fwait
cmp
jecxz
movsb
insl
addr16
push
push
cmp
mov
xor
leave
arpl
jmp
inc
pop
fs
and
inc
in
sbb
mov
mov
mov
pushf
stos
scas
inc
jmp
bound
insb
enter
mov
in
bound
data16
idivl
mov
lds
mov
push
mov
or
cmp
xchg
ret
push
insb
lods
cmp
pop
lahf
and
mov
add
push
cmp
mov
dec
mov
nop
out
push
js
push
loopne
in
add
jae
mov
pop
test
and
popf
lods
lret
aam
mulb
push
aaa
mov
lret
subb
das
les
dec
add
loope
and
stos
and
jns
cmp
fbstp
inc
fnsave
enter
popf
jbe
xor
mov
mov
cmpb
xor
aas
test
rorb
fwait
and
mov
jno
fwait
pop
imul
daa
jl
in
cmpsb
pop
out
iret
mov
lds
lock
icebp
aad
aaa
mov
cmpsb
xchg
and
scas
inc
nop
movsb
push
mov
mov
lock
je
mov
pop
lea
popa
push
dec
repnz
jmp
shll
mov
lock
repnz
rcrb
pop
mov
jne
adc
aad
add
cmc
dec
fimull
rclb
push
cltd
imul
inc
xchg
iret
fnstsw
inc
test
jmp
and
out
call
cwtl
and
gs
cmpl
ror
in
xor
lock
dec
mov
mov
or
cmp
scas
in
scas
and
rolb
jae
push
int3
mov
xchg
testl
movsl
loope
out
popa
xchg
add
aam
data16
mov
cmp
dec
jmp
js
mov
cwtl
sbb
imul
mov
sub
pop
fldcw
js
mov
cwtl
sbb
imul
mov
push
mov
jns
jmp
js
push
sub
jns
imul
mov
sub
pop
fld1
leave
js
ja
xor
inc
sbb
sub
cmp
sub
cmp
or
sbb
data16
enter
xchg
push
cwtl
inc
call
pop
fadds
sub
cmp
or
sbb
push
xchg
pop
xchg
push
cwtl
inc
call
push
fadds
sub
cmp
or
sbb
push
xchg
pop
xchg
xor
dec
xchg
pop
popa
idivl
mov
sub
inc
ret
dec
mov
outsl
inc
add
ret
call
lds
mov
cmp
cld
pop
inc
xchg
scas
pop
lahf
xchg
cwtl
add
inc
in
lret
leave
inc
es
shrb
nop
stos
cmp
xor
mov
cwtl
ja
repnz
lods
call
cmp
cltd
push
sbb
js
lods
test
add
pop
nop
fmul
call
dec
sbb
and
shll
pop
add
mov
test
xchg
cli
fldt
call
add
dec
mov
ds
ret
mov
shll
add
addr16
fldl
and
loopne
add
out
xlat
sbb
push
xchg
pop
xchg
push
cwtl
inc
call
pop
fsubrs
cwtl
push
out
mov
xor
jmp
aas
hlt
add
adc
dec
in
xlat
jge
call
dec
loopne
xchg
adc
lea
mov
mov
sbb
dec
xchg
pop
xchg
push
cwtl
inc
call
pop
fadds
sub
cmp
or
sbb
push
xchg
pop
xchg
push
cwtl
inc
call
pop
fadds
sub
popf
scas
mov
cmp
mov
xchg
sbb
and
mov
xchg
es
test
sbb
daa
cli
jns
andl
ja
cli
stc
lods
movsl
clc
dec
xor
in
in
sub
sub
aam
out
in
mov
shlb
xor
inc
arpl
mov
dec
gs
and
js
mov
add
jo
sarb
xchg
sbb
mov
sbb
or
inc
jmp
sub
lcall
pop
addr16
mov
dec
ljmp
pop
adc
cmpsb
out
js
shrl
push
dec
arpl
outsb
xchg
aaa
nop
cs
mov
ret
xor
mov
insb
pop
jo
imul
js
jl
dec
dec
mov
dec
sbb
icebp
scas
jno
mov
pop
aam
sbb
dec
leave
scas
push
stos
into
cmp
sub
sub
lret
in
lret
add
and
cmp
repz
iret
jp
out
loopne
divl
sub
std
fwait
push
and
or
cwtl
mov
js
jg
rcll
loope
stos
jecxz
stc
sbbb
mov
add
cli
pop
fdivrs
andl
in
sub
fcoms
lret
jle
loop
jns
jns
sub
movsb
mov
xorb
push
jmp
add
mov
rol
adc
add
int3
sbb
and
xlat
daa
shl
jbe
push
inc
popf
cltd
idivl
data16
enter
xchg
or
leave
les
js
sarl
inc
cmpsb
fdivs
dec
je
lods
lret
lret
stc
add
push
es
fcoml
mov
loope
add
xchg
adc
shll
adc
sahf
in
jns
daa
rcll
addr16
sub
inc
adc
or
outsb
push
xchg
lods
sub
sub
and
pop
add
pop
sub
adc
loope
mov
jge
lods
mov
in
movsl
lret
mov
sub
mov
into
lret
es
mov
add
sub
out
cwtl
xchg
call
jne
or
lock
sbb
pop
cs
mov
or
test
xlat
std
adc
es
loopne
imul
add
addb
push
push
push
lahf
ds
or
push
or
adc
aam
in
call
xchg
lock
imul
xor
aas
jne
cltd
cmp
repnz
mull
cmpsb
jge
dec
mov
or
repnz
push
or
xchg
in
xor
mov
test
int
mov
negl
out
mov
mov
push
push
mov
xchg
push
cmc
std
in
movsb
outsl
jl
pop
movaps
ja
inc
mov
call
sbb
shrb
cli
pop
test
sarb
cmpsl
pop
cmpsl
cld
data16
pop
pusha
lcall
sbb
and
push
mov
inc
jp
lea
loope
inc
inc
sbb
insb
insl
shlb
inc
or
enter
icebp
rolb
dec
or
movsl
pushf
push
lcall
lahf
movsb
jge
pop
cli
jb
js
dec
xchg
loop
pusha
jp
fnsave
cmp
mov
out
outsb
mov
xorl
cs
adc
rcl
pop
ss
call
rorb
cmpsl
mov
repnz
lea
pop
lahf
inc
fsub
pop
lcall
movsb
cld
and
or
mov
popa
stos
jecxz
scas
xor
das
in
mov
out
lods
or
daa
and
jl
outsl
divb
jmp
notl
jnp
sub
or
xchg
test
jns
mov
xorb
push
lcall
sbb
je
adc
fwait
pop
xchg
in
dec
jmp
std
mov
cli
popa
and
std
sub
push
mov
push
pop
mov
jno
bound
adc
imul
orl
enter
insl
dec
cmp
sahf
ror
add
push
test
mov
mov
in
inc
and
adc
enter
jb
push
add
xchg
lret
mov
mov
xchg
dec
pop
test
dec
lds
test
addl
cmp
jae
push
mov
dec
and
or
pop
mov
sub
stc
imul
add
ret
add
and
aam
mov
add
xor
dec
and
push
mov
dec
dec
cld
mov
pop
outsl
or
insb
inc
popfw
mov
js
imul
inc
mov
xor
enter
push
mov
add
aas
aaa
cmpsl
fistps
cmpsb
cld
inc
mov
out
popf
loop
call
pushf
pop
push
test
out
notl
enter
sbb
aad
and
pop
fs
fnsave
pop
movsl
mov
xchg
test
dec
bound
psubusw
mov
jp
sbb
aam
cwtl
leave
stc
daa
mov
or
mov
push
cli
out
pop
arpl
in
in
fwait
xchg
dec
mov
in
jmp
jbe
jmp
mov
lret
push
arpl
mov
mov
xor
push
xor
sbb
xlat
push
or
and
scas
xchg
or
stos
lock
cmc
adc
xchg
xor
out
and
outsl
ja
imul
dec
pusha
pop
dec
fwait
aaa
mov
test
cmpl
xchg
mov
push
jle
sub
xchg
test
pusha
sub
mov
dec
outsb
scas
movsb
inc
mov
mov
lret
loope
mov
ds
cmpl
cli
xor
ljmp
enter
ficomps
mov
cwtl
mov
movl
mov
repnz
and
jmp
mov
push
xchg
cmp
pop
mov
jmp
nop
cmp
subb
mov
or
cld
mov
sbbl
stc
in
lods
cmc
dec
mov
xchg
cwtl
mov
adc
sahf
mov
in
sti
xor
jmp
pushf
pop
xchg
fnstsw
adc
or
dec
push
inc
pop
inc
cs
ja
adc
pop
pop
testl
rclb
lea
in
ret
xchg
or
out
or
cld
jno
push
ficompl
leave
xor
sbb
lret
xchg
lds
sub
imul
imul
icebp
cmp
jno
lret
ret
mov
test
push
js
sahf
adc
mov
and
push
int
cmp
xchg
test
jmp
cmp
xchg
jnp
push
xor
cmp
fstpt
aam
or
mov
stc
mov
and
mov
out
cmp
mov
shlb
mov
add
stc
xor
xchg
adc
mov
lahf
push
lret
dec
cli
sub
mov
test
pop
fnstenv
push
jne
scas
lret
mov
cmpsl
inc
into
mov
test
and
aaa
xchg
in
cmc
andl
orl
daa
fcmovnu
int3
jo
fsubp
in
lods
outsl
rclb
push
sub
rolb
jo
gs
sbb
enter
int
mov
jecxz
pop
sub
test
and
sbb
mov
xchg
mov
pop
push
dec
add
testb
jle
std
cmc
pop
fiaddl
fldt
leave
xchg
push
les
xchg
out
pop
cmp
inc
jns
leave
push
pop
aad
mov
lds
xchg
sub
inc
pop
mov
push
jns
mov
aas
insl
faddl
pop
and
aas
xchg
lods
jecxz
into
mov
insl
ficomps
sub
push
stos
bnd
mov
fimull
xchg
push
cmpb
ja
gs
lret
pop
cmp
ret
lahf
jne
jg
fnsave
sub
push
or
push
int3
adc
jmp
scas
dec
and
mov
cwtl
fs
imul
or
sbb
andl
lret
mov
dec
outsb
movsb
cmpsl
adc
daa
push
jb
jmp
push
pop
repz
xlat
iret
mov
mov
pop
push
dec
xchg
push
add
dec
ja
push
test
mov
sahf
or
adcl
and
mov
dec
lret
push
xchg
repnz
xorl
shll
loopne
push
push
loope
or
sbb
int
cmp
rorl
in
push
and
aam
push
cmp
mov
cmc
jl
pop
addr16
bound
mov
and
inc
jb
inc
mov
sbb
push
pop
mov
mov
xor
rcrl
mov
sbb
in
lcall
dec
ret
mov
cmp
lock
das
cmp
int
fdivp
divl
jns
jle
add
sub
lock
iret
addl
lods
lods
subb
mov
test
sbbb
jp
xor
fdivr
popf
jnp
add
imul
ljmp
das
push
push
loop
mov
push
ljmp
int
mov
xor
add
pop
xchg
xor
mov
inc
jle
test
cs
mov
mov
popa
dec
cmp
mov
shl
mov
in
sbb
iret
lea
shll
cltd
gs
dec
cmpsb
call
mov
in
dec
and
jbe
adc
sub
sub
xor
cltd
add
pop
in
or
or
jno
mov
imul
push
inc
mov
lds
push
stc
imul
mov
add
jp
mov
pop
pusha
fprem
fstps
cmpsb
sar
xor
sti
and
idivb
pusha
fists
gs
mov
pushf
jmp
xlat
mov
cwtl
loope
lret
and
ljmp
and
data16
mov
inc
sahf
fistl
pop
cmp
push
and
mov
push
repnz
fs
stc
rclb
movsl
xor
inc
adc
cltd
stos
fisubrl
in
mov
dec
push
dec
mov
ss
fmul
cmp
lahf
push
sahf
sub
lock
mov
dec
cmp
hlt
mov
xor
popa
fwait
xor
mov
incl
gs
aad
out
pop
subb
es
orb
inc
xlat
aad
ja
and
rorl
sbb
push
stc
inc
fwait
arpl
adc
xorb
lahf
and
cmp
subb
in
dec
jmp
ja
jl
pushf
lcall
mov
test
lea
xor
dec
and
pop
jnp
daa
cmp
es
lds
dec
mov
outsl
int3
jnp
xchg
out
mov
test
jne
add
sbb
xor
nop
ret
mov
pop
dec
or
ss
insl
sbb
ljmp
popf
sub
inc
push
daa
add
aaa
pop
popa
sbb
mov
xchg
popf
inc
rorl
inc
xorb
and
rcll
mov
push
and
and
dec
in
vprotd
dec
inc
xor
sub
sub
pop
sub
ds
insb
sahf
adc
adc
jl
xor
int
aad
pop
jge
test
push
cmp
fmuls
mov
mov
cmp
test
jmp
cs
outsl
inc
adc
adc
addl
enter
and
fsubr
jmp
add
mov
test
cmp
xor
mov
cmpsb
cmpsl
jnp
jns
in
adc
leave
pop
sti
pop
fildll
in
aam
pop
es
add
ja
xchg
lcall
pop
push
addr16
cwtl
and
adcl
mov
inc
popf
fistpl
dec
push
ret
cmp
add
add
dec
jmp
cmp
or
adc
pop
jl
aam
clc
movsb
stos
lcall
mov
dec
loop
int3
fidivl
testb
lods
int3
cmp
call
mov
jno
addr16
fsubrl
jo
movq
inc
imul
pop
inc
push
xchg
imul
dec
lret
sub
mov
repnz
mov
mull
sub
mov
je
out
iret
enter
push
xor
lret
push
and
insb
pusha
inc
add
sahf
fsubs
cmp
pushf
jecxz
mov
adc
mov
loope
jp
lods
sub
loope
repnz
je
sub
out
lods
mov
faddl
mov
leave
std
pusha
inc
lcall
adc
pop
pop
sahf
dec
int
dec
jb
xchg
movsl
ds
aaa
cmp
arpl
repz
addr16
mov
jge
jmp
push
je
and
pop
lds
loop
sub
mov
cmp
and
test
dec
push
mov
in
pop
leave
or
push
dec
fadd
cmp
push
sti
mov
test
lea
std
mov
sahf
mov
mov
mov
aam
sbb
inc
dec
sub
dec
and
jae
sbb
mov
fstpl
jmp
adc
lods
cmpsb
jo
mov
push
out
adc
dec
roll
cmp
mov
cmpsl
sahf
outsb
sti
dec
cwtl
gs
mov
add
and
cmc
inc
out
inc
dec
insl
jl
jno
mov
adc
sbb
mov
addr16
mov
adc
add
push
mov
cld
ret
icebp
pop
mov
aad
fimuls
ror
mov
nop
test
outsb
fdivrl
sub
and
mov
pop
aad
rcll
fs
dec
sub
lahf
enter
jecxz
pop
adc
xchg
sbb
lcall
and
jno
nop
pop
cmp
fistpll
xchg
jbe
nop
imul
mov
ja
out
sub
jecxz
dec
jns
cmpsb
movsl
push
adc
notl
mov
jns
fucomi
mov
das
jbe
mov
pop
pop
and
jg
mov
pop
fiaddl
add
mov
or
iret
or
dec
mov
xchg
add
out
dec
les
lret
leave
lcall
js
add
aas
js
and
cltd
jecxz
adc
f2xm1
clts
xchg
sbb
pop
into
pusha
push
push
jl
dec
jge
rcrb
sahf
jae
nop
out
enter
xor
lret
xor
pop
popf
mov
push
pop
or
jl
mov
mov
ret
xor
sbb
and
das
mov
sahf
jb
or
push
sbb
adc
inc
jle
add
push
fisubs
lea
xor
sbb
add
cltd
lea
jne
js
insl
dec
or
pusha
adc
call
cmpsl
sti
push
and
pop
mov
ss
in
mov
ret
push
jl
ljmp
jb
mov
aaa
out
adc
xchg
test
jae
mov
sub
rclb
jl
inc
cmpsb
int3
adc
cmp
loopne
mov
push
xor
fldenv
jge
inc
pop
xchg
xor
lret
loope
push
insl
mov
and
in
stc
in
mov
pop
xchg
dec
imul
push
mov
test
mov
lods
ds
mov
out
push
mov
iret
je
decb
stc
mov
adc
jns
mov
ds
jp
call
sub
push
lret
out
sarb
outsb
dec
test
lods
jmp
mov
sub
pop
mov
daa
push
loopne
xor
stc
push
xchg
cmpsl
in
xchg
shll
inc
stc
pop
fwait
mov
imul
lea
cmpb
dec
jecxz
int3
pop
mov
xchg
pop
faddl
shlb
nop
sti
outsl
dec
std
in
dec
cli
push
out
mov
mov
scas
mov
mov
adc
es
push
clc
pushl
pushf
xchg
push
hlt
sub
dec
sbb
aad
repz
bound
arpl
inc
adc
das
mov
ss
arpl
daa
fstp
enter
mov
scas
pop
jb
test
lea
jno
dec
mov
and
push
lcall
test
inc
movsl
add
data16
scas
jns
push
lret
shrb
push
mov
jns
xor
mov
rcrb
xchg
lret
fnstcw
popf
mov
or
lds
sbb
mov
inc
push
push
mov
in
arpl
mov
and
ret
jp
jmp
testb
icebp
lret
in
flds
int
loop
xor
lds
call
movl
jl
xor
out
stos
xor
mov
cmp
imul
sub
stos
js
pop
and
mov
bound
sub
mov
je
xchg
xchg
pop
dec
test
sub
pop
and
stc
pop
mov
gs
mov
xor
icebp
mov
push
sbb
repnz
mov
inc
pop
xchg
in
cmp
pop
into
mov
mov
es
call
aad
outsb
repnz
pop
xchg
lahf
add
and
jae
mov
mov
loope
cmpsb
loopne
dec
cli
sub
pushaw
mov
or
sahf
or
sbbb
les
add
sbb
out
out
dec
xor
and
or
bound
mov
js
inc
dec
fld
mov
pushf
cmpsl
popa
mov
pushf
das
repz
sahf
je
cmp
jbe
bound
adc
push
sub
outsl
add
sar
xor
in
leave
jo
mov
and
repz
into
mov
xchg
cld
inc
cmp
in
stc
movsl
inc
jmp
mov
and
inc
sub
dec
inc
sub
orl
or
jbe
jno
ret
dec
in
jmp
and
or
dec
outsb
jmp
ss
pop
mov
stos
pop
fadd
mov
js
mov
cmp
dec
xor
popa
movl
mov
sahf
adc
pusha
or
clc
test
lds
ja
dec
jo
nop
divb
inc
dec
mov
or
mov
int
imul
pusha
popa
jge
xor
inc
xchg
mov
leave
sbb
cli
push
sbb
xchg
pop
iret
adc
fsubrs
add
imul
and
ds
sbb
or
stc
daa
push
scas
xchg
hlt
and
mov
jmp
dec
mov
in
ss
std
mov
jge
sub
pop
jl
add
sbb
int
adc
ror
dec
sbb
jge
jle
cmp
inc
loop
inc
pushf
pop
jp
mov
dec
add
pushf
add
loop
fs
xchg
mov
mov
insb
subl
ljmp
repz
lret
jno
test
popa
adc
inc
out
inc
rolb
fsubrp
xchg
jb
inc
xchg
test
xchg
lods
pop
les
push
lock
sbb
jne
push
xor
cmp
and
sbb
in
in
jecxz
cwtl
insb
bound
daa
push
sub
jno
mov
jnp
xor
ret
fwait
or
pop
mov
js
add
jo
ror
add
cmp
lea
popa
mov
pop
pop
pop
fstl
pop
jae
push
and
cmp
fstpt
test
mov
xchg
and
xlat
sti
fcomp
or
lock
sbb
daa
fst
cmp
test
adc
inc
cmp
jecxz
sbb
add
inc
sub
or
cmc
mov
or
fwait
and
outsb
sbb
repnz
ret
lahf
add
cmp
aam
sub
xor
out
dec
xor
jmp
lds
popa
adc
mov
test
dec
sbb
in
loop
iret
repnz
mov
dec
ja
out
out
test
dec
xchg
cmpsl
mov
ljmp
adc
mov
sub
cmpsb
orb
ja
popf
sbb
outsb
lds
scas
mov
je
inc
push
mov
mov
dec
aam
push
jg
dec
fmull
lcall
mov
adc
xchg
into
aad
xchg
data16
mov
dec
scas
pop
lret
mov
in
or
int
sbb
in
cs
and
jl
inc
cli
mov
and
iret
mov
sti
add
in
mov
lret
adc
enter
imul
pop
cwtl
mov
loop
ja
loope
xchg
test
repz
jbe
dec
imul
fidivrs
sub
into
test
sbb
shll
out
in
into
movsl
lret
lret
and
push
mov
jae
cmp
sub
scas
xor
push
aam
rcll
lret
pop
in
inc
pop
lea
push
xchg
imul
in
clc
sbb
cwtl
scas
pop
scas
xor
xor
and
lahf
dec
or
jg
or
arpl
mov
mov
aaa
sub
jnp
iret
xchg
and
adc
mov
cmp
or
cmp
pop
or
push
daa
fldl
add
cmpb
push
jo
or
and
imul
hlt
jns,pn
add
xor
jle
dec
ja
pop
or
push
xchg
pop
xchg
push
cwtl
inc
call
pop
fadds
sub
cmp
or
sbb
push
xchg
pop
xchg
push
cwtl
inc
call
pop
fadds
sub
cmp
push
sbb
push
xchg
pop
xchg
push
cwtl
inc
call
pop
fadds
sub
cmp
or
sbb
push
xchg
pop
xchg
push
cwtl
xor
call
in
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
xor
sub
xchg
mov
add
cmp
or
add
add
add
jno
add
add
add
add
add
add
add
xor
and
add
add
leave
add
filds
adc
and
leave
add
xor
mov
add
inc
add
add
add
ret
add
add
hlt
add
add
and
stos
add
add
add
add
add
inc
add
adc
push
add
push
sub
test
add
add
inc
add
loopne
and
jl
pop
add
add
add
mov
add
ja
mov
addl
nop
add
ja
adc
or
and
add
add
test
add
mov
inc
add
add
add
add
add
add
add
mov
add
xor
inc
add
add
adc
xor
push
add
inc
add
add
test
add
or
add
pop
add
add
and
leave
add
or
jo
push
add
add
ljmp
add
add
add
test
add
add
add
add
add
add
add
mov
dec
add
add
add
add
sub
adc
add
add
repz
add
add
add
add
add
add
add
add
add
add
imul
outsb
add
lret
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
stos
add
add
add
add
push
add
roll
incl
jl
outsb
add
add
add
add
push
add
add
and
pop
add
add
add
add
mov
add
jbe
adc
leave
add
add
add
jl
dec
add
jae
pop
add
add
add
stos
add
add
add
add
add
push
add
add
add
add
mov
and
scas
add
add
add
add
inc
add
add
add
mov
jbe
cmp
cmpsl
add
cmpsl
add
add
incl
mov
stos
add
inc
add
flds
sub
add
outsb
add
add
pop
add
roll
mov
aaa
add
addb
add
add
add
add
add
add
add
add
add
add
push
add
add
add
test
xor
push
add
add
add
push
add
add
add
add
pop
add
dec
add
add
add
add
jo
flds
sbb
add
push
dec
add
test
add
add
add
insl
add
add
add
add
add
add
add
add
add
incl
xor
addl
pop
add
add
adc
icebp
add
pusha
add
loopne
cmp
add
ja
push
add
add
push
add
in
or
xor
ja
and
nop
add
add
add
push
add
add
inc
add
cmp
sub
mov
aad
cmpsl
add
add
sub
add
pop
add
add
add
add
add
push
add
add
stos
mov
sbb
stos
insl
pop
popa
cmp
cmp
or
push
cmp
ljmp
cmp
push
pop
shll
pop
adc
call
das
fisubrl
jge
sbbb
shr
mov
or
mov
inc
jae
xor
xorl
inc
rorl
mov
sbb
lcall
test
jnp
or
aam
lcall
ss
fcomi
lods
and
adc
add
jl
insb
fcoml
xchg
xchg
dec
dec
cld
cmp
push
pop
mov
sub
mov
adc
fld
adc
cmp
add
notb
cli
rorl
mov
gs
mov
xor
mov
jne
push
movsl
jne
jl
gs
nop
xor
rcll
imul
ffreep
scas
jns
pop
mov
mov
cltd
xchg
inc
test
add
movsl
push
mov
mov
test
xor
push
and
js
rol
stos
push
cmp
push
stos
icebp
lcall
jmp
xchg
pop
imulb
mov
mov
inc
mov
or
jno
mov
jl
or
dec
xor
popa
das
jne
or
xchg
sbb
xor
stos
sahf
pop
adc
push
nop
pop
out
pushf
jns
sbb
and
negb
aaa
mov
sub
xchg
jb
test
mov
aaa
bound
jo
out
shll
out
jb
or
xor
pop
mov
out
dec
sahf
pop
and
xchg
stos
mov
xor
xlat
int3
cmpsl
out
cmc
ret
dec
pop
lcall
mov
shlb
leave
out
cmp
inc
cmpsb
das
pop
nop
adc
int3
outsb
inc
cltd
ret
pop
arpl
xchg
and
inc
push
mov
loop
les
hlt
xor
xor
adc
fsubs
ds
icebp
mov
pop
push
sbb
les
cltd
xchg
rolw
lock
fwait
mov
scas
pusha
sub
xchg
mov
loope
in
pop
bound
arpl
test
call
and
lock
mov
dec
jne
jp
jl
test
ret
rcrb
ss
xor
cs
test
add
mov
cmp
mov
in
mov
cmp
mov
pusha
out
aam
pop
int
sti
loopne
cld
popa
clc
xchg
mul
enter
lods
ljmp
shrb
testl
add
mov
inc
xchg
fcmovb
xchg
int3
push
and
pop
mov
out
sti
inc
aaa
cmp
mov
jae
ljmp
and
mov
xor
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
