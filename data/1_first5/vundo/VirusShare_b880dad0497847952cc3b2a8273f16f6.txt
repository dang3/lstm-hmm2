add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
pop
dec
daa
jge
insl
inc
movsl
and
sub
cmpsl
jmp
xlat
add
mov
pop
dec
dec
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
xchg
xlat
out
imull
mov
out
jne
add
adc
jecxz
mov
iret
test
cwtl
lods
shlb
ret
pop
cmp
inc
aad
int3
mov
pop
movsb
cmp
cmp
andb
jecxz
repz
pop
jmp
cmpsl
je
cmp
ljmp
xor
lods
dec
adc
std
mov
out
or
rcll
dec
and
mov
inc
jo
fstl
adc
cmp
call
ret
ds
dec
ja
xchg
dec
pusha
cmp
idivl
pop
subb
in
xor
adc
cmpsl
add
xlat
popf
pop
out
sti
sub
mov
leave
out
xchg
mov
jge
mov
cmpsl
add
dec
mov
insl
out
hlt
stos
pop
dec
inc
pop
daa
fs
insl
mov
cmp
or
hlt
popl
imull
sbb
sub
cmp
ja
xchg
rorb
mov
xchg
rorl
and
push
push
add
sbb
and
loopne
lds
mov
fidivl
dec
inc
sbb
cs
or
xchg
xchg
int
std
mov
popf
xlat
out
imull
daa
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
xlat
out
imull
in
imull
xchg
cmp
out
mov
les
mov
daa
call
push
mov
mov
sub
pusha
mov
lret
adc
sub
aam
test
pop
aaa
jl
xchg
or
into
notb
lods
mov
mov
add
pop
mov
fs
pop
movsb
mov
pop
aad
lcall
mov
out
push
fcomi
aaa
xchg
aaa
inc
pop
out
or
out
push
pop
push
hlt
jne
fnstsw
stos
repnz
inc
cld
push
cmp
xor
out
mov
adc
cltd
loopne
fisttpll
add
xchg
add
mov
xor
sub
es
repz
fistl
pop
xor
mov
cmp
pop
out
popf
jns
stc
add
and
push
jno
repnz
loope
mov
js
jmp
mov
lea
sbb
jmp
imul
mov
daa
pop
xchg
mov
int3
push
pop
hlt
sub
flds
stc
shl
cmp
popa
adc
sarb
aaa
add
leave
out
mov
cld
adc
mov
jl
jmp
out
adc
sbb
add
insb
in
daa
sbb
push
sbb
or
sub
xor
ret
xchg
push
int
hlt
outsl
xchg
inc
rolb
imul
or
sbb
mov
mov
lea
dec
mov
pop
adc
push
outsl
and
shr
shll
push
mov
lock
mov
fisttpl
cmp
xor
or
add
aas
push
mov
scas
jecxz
push
outsl
mov
push
jno
xor
imul
mov
addl
push
ja
adc
inc
jl
lods
or
cli
mov
adc
jo
pop
test
fwait
mov
cmp
imul
pop
repnz
mov
icebp
mov
fcos
xchg
sbb
scas
jl
dec
mov
xorl
mov
sbb
stos
add
adc
push
sub
push
jae
mov
daa
outsl
inc
mov
in
mov
pusha
ss
gs
xchg
popf
xchg
je
cmpb
rorb
cltd
push
shll
bound
mov
jno
ret
mov
aad
inc
adc
test
jp
sub
pop
xchg
or
sbb
jae
mov
aad
jns
dec
jl
and
pop
adc
mov
xchg
in
xor
enter
aas
js
cmp
outsl
sub
jp
jg
es
inc
inc
out
sbb
sub
xor
push
mov
inc
push
pop
ret
mov
lret
or
push
loope
stos
stc
push
rorb
jae
mov
subb
jecxz
xchg
push
jnp
dec
and
xchg
mov
push
adc
pop
mov
mov
push
scas
sbb
inc
aam
sbb
cmpsl
test
pop
cltd
and
fidivrl
sarl
push
sub
and
xchg
nop
jmp
icebp
sbb
jns
leave
icebp
jp
inc
ret
loope
loopnew
dec
les
inc
outsb
loopne
xchg
push
or
mov
lds
les
sti
mov
sbb
js
push
xor
idivb
xchg
jge
sbb
loope
and
test
dec
jnp
mov
xchg
popa
or
push
aam
aaa
mov
pop
call
loopne
push
mov
push
mov
sbb
icebp
xor
mov
notl
arpl
test
imul
xchg
mov
lods
mov
jns
js
push
add
aaa
push
inc
mov
loop
ja
sbb
push
xchg
scas
ret
mov
pop
scas
cmp
outsl
xor
xor
add
jno
cmpsl
adc
sarl
cmp
sub
mov
push
cmp
outsl
jmp
jo
mov
cltd
mov
sarl
lret
jno
stc
daa
ss
jle
lock
int
mov
ficoms
mov
call
hlt
lea
cwtl
pop
into
mov
jb
in
xchg
outsb
inc
stc
adc
and
jne
fstps
in
insl
xchg
inc
push
scas
adc
repz
loop
movsl
pusha
mov
push
out
es
decb
sub
jae
and
cltd
adc
mov
sbb
fistl
mov
sahf
shrb
mulb
test
sbb
xchg
xlat
rcll
ret
mov
lods
repnz
dec
adc
adc
popa
sbb
xchg
popl
inc
lahf
insb
jecxz
adc
xor
mov
imul
stos
xchg
jb
adc
icebp
sub
out
aam
and
cltd
mov
lea
mov
ret
je
cmpsl
and
xchg
fistpl
in
mov
test
push
mov
sub
jmp
out
cmp
xor
mov
add
data16
ret
mov
roll
cltd
mov
push
cs
inc
filds
push
sub
ds
and
mov
int3
xchg
xchg
cmpsb
xor
and
je
jmp
mov
jb
add
rolb
cwtl
adc
sub
out
icebp
xchg
addl
jo
push
jge
ret
and
sahf
or
pop
or
jo
push
push
idivb
sbb
mov
and
aaa
pop
lock
mov
rcr
pusha
mov
das
fdivp
xchg
sbb
pop
shll
subb
sti
cwtl
lods
shrl
fnstsw
cs
pop
xchg
imul
lock
sarl
stos
lret
lock
mov
push
popa
add
lcall
mov
push
mov
sbb
data16
and
mov
jbe
clc
mov
jg
jae
cltd
ret
call
and
ficomps
nop
add
shrb
jb
mov
mov
pusha
jns,pn
xor
scas
adc
xchg
mov
jg
xchg
pop
push
lods
stc
inc
test
fisttps
lret
add
adc
in
ret
fstl
adc
int
int3
cmc
fcoml
outsl
push
lods
cltd
ret
adc
fldl
dec
sbb
cmp
icebp
divb
icebp
mov
sub
xchg
jns
mov
or
aad
jns
and
popf
jno
imull
popf
stc
or
push
mov
cltd
hlt
inc
mov
lahf
je
push
or
sbb
outsl
cmc
fwait
lahf
sub
add
jo
lds
or
mov
adc
dec
dec
fcmovu
dec
faddl
cld
and
out
inc
sti
daa
mov
lret
mov
inc
push
pusha
sub
fists
mov
test
mov
out
popa
sahf
push
pop
add
xor
lahf
inc
sti
cmpsl
mov
and
jae
je
mov
adc
sub
sbbl
xlat
pop
iret
in
adc
jl
fstpl
mov
mul
sti
jp
ds
subl
mov
push
in
stos
adc
and
mov
decl
and
in
pop
cltd
aaa
and
insl
push
test
sti
lret
in
inc
hlt
int3
addb
loop
je
lretw
stc
push
mov
ret
dec
push
sub
repz
adc
cmp
or
repnz
jne
sti
aad
movl
add
daa
push
enter
mov
pop
sub
repz
xchg
add
mov
cmp
arpl
popa
sbb
movsb
notb
inc
fwait
dec
addr16
push
cmp
dec
or
push
adc
sub
stos
out
and
inc
and
cmp
adc
mov
xor
xor
sti
out
shl
dec
push
inc
stc
mov
aam
mov
imul
inc
jae
adc
mov
adc
and
pop
lods
mov
sahf
ret
gs
in
cmpsb
inc
movsl
gs
adc
ss
loopne
xchg
in
out
cmpsb
iret
push
adc
inc
bound
xor
push
lret
add
jmp
pop
scas
out
push
mov
mov
jbe
sub
pop
aas
add
mov
and
imul
pop
jl
dec
xlat
test
loopne
bound
rorl
or
cmp
stc
popl
enter
sbb
nop
shll
pushf
loope
sbb
pop
pop
ds
rorb
shlb
loopne
sbb
cltd
and
mov
js
jb
aad
or
sub
mov
sbb
xchg
aam
jge
dec
in
test
fistpl
mov
xchg
cmp
rcrl
pop
pusha
outsb
fdivrl
loop
es
mov
mov
dec
icebp
jbe,pt
xchg
outsb
popa
pop
out
arpl
cmp
fisubs
jmp
xchg
cld
pop
cwtl
jns
sbb
adc
pop
adc
xor
ds
push
sbbl
dec
loopne
inc
bound
mov
ss
push
in
inc
shlb
sbb
dec
and
xor
xorb
sti
mov
mov
js
rol
jb
jno
xor
stos
or
test
scas
adc
repnz
push
dec
mov
cmc
push
push
cmpsb
inc
ljmp
dec
in
cs
aam
mov
lock
enter
pop
aaa
out
xchg
pop
lret
ret
sarl
imul
jmp
int3
mov
popf
jns
shll
xor
fwait
int
ret
mov
dec
dec
sar
mov
pop
adc
lods
push
popf
cmp
fistps
insl
jnp
pop
xor
loop
xor
insl
mov
cmp
or
daa
jge
iret
lcall
push
lret
push
fsubl
inc
xlat
inc
inc
ds
dec
pushaw
mov
cmp
push
repnz
pop
sahf
stos
inc
mov
or
xor
inc
andl
cmpsb
jmp
mov
sar
push
hlt
push
lock
mul
or
sub
clc
shlb
or
or
into
dec
pop
in
xchg
je
jmp
ja
dec
fstpl
daa
cmp
mov
add
push
arpl
pop
jl
mov
jno
mov
cmp
arpl
dec
add
mov
jno
push
sub
lods
jb
fstl
cmp
sbb
xchg
jp
je
mov
cmp
or
in
jp
adc
int3
sbbb
dec
xchg
jmp
xlat
jne
or
cmp
dec
popf
jmp
mov
cmpsl
insl
rorl
dec
loop
inc
cmpsl
aaa
inc
jecxz
sti
loop
inc
adc
or
mov
shr
movsl
mov
test
xor
jne
fbstp
push
popa
pop
jecxz
pop
ljmp
xchg
mov
pushf
pop
loop
aas
outsb
pop
scas
rclb
jmp
imul
jne
jbe
xlat
rorl
in
lret
push
fcmove
xor
lods
orl
lcall
pushf
mov
adc
and
shrb
andb
xchg
mov
out
es
push
mov
mov
les
mov
ljmp
add
add
jp
popf
mov
mov
push
xor
mov
shlb
or
pushw
cli
jns
push
or
cs
fdivp
test
fwait
sahf
fwait
lret
or
and
dec
push
aaa
sub
pop
test
ja
lods
lds
testb
push
lret
cli
add
add
lahf
xlat
cs
mov
or
jb
shll
decl
pop
and
daa
es
pop
jecxz
push
insl
pushl
popa
and
dec
sbb
jbe
inc
inc
pop
sbb
sbb
xor
jnp
add
cmp
test
sub
pop
in
mov
xor
fsubrp
enter
ds
lds
mulb
in
cmpsb
ja
and
mov
push
xchg
mov
push
mov
clc
push
sbb
ror
sub
sbb
push
adc
sti
inc
mov
pop
inc
pop
popf
and
push
outsl
mov
xchg
ret
dec
ds
andl
push
mov
fwait
das
mov
dec
iret
add
lahf
into
sub
in
gs
rorl
inc
dec
mov
repnz
xchg
or
jno
dec
fcmovu
xor
adc
cmp
mov
sbb
ja
xchg
xchg
jmp
ret
sti
mov
hlt
cmp
push
cmpsl
mov
fbstp
iret
jl
mov
mov
cmp
sub
in
scas
mov
subb
test
out
push
pushf
push
cld
inc
cmpsl
mov
sub
hlt
xor
mov
dec
popf
ljmp
out
inc
sbb
aas
push
imul
stos
cmpsb
lea
or
xchg
xor
outsl
orl
inc
pop
sbb
adc
adc
pushf
push
in
cmp
push
or
out
sub
jae
add
jo
inc
stos
scas
jp
sarb
mov
out
sbb
fsubr
cmpsl
jmp
sahf
push
fistps
dec
mov
bound
xchg
mov
rol
cmp
mov
lcall
aad
xor
pop
xor
cmp
and
movsl
pop
es
in
pop
add
or
mov
dec
jne
push
pop
bound
ret
sbb
cld
stc
adc
les
add
div
and
mov
lret
daa
aas
pop
xor
mov
xchg
mov
call
mov
and
mov
xchg
sbbb
xor
aaa
pop
fstps
mov
pop
mov
cmp
pop
lret
and
dec
in
jbe
add
movsl
sbb
add
repnz
cs
and
ljmp
add
leave
mov
popa
xor
aas
popf
and
pushf
xor
loopne
mov
jmp
cli
or
movsl
enter
sbbb
ljmp
and
dec
and
and
push
out
push
pusha
mov
rclb
xchg
add
jl
inc
aad
mov
cmp
or
and
jmp
dec
sbb
or
and
lahf
pushf
mov
ljmp
das
push
inc
stos
movsb
ret
ret
clc
insb
lea
scas
inc
pushf
cmpsb
popf
and
aad
icebp
call
mov
pop
xchg
lods
or
cmpb
inc
std
adc
stos
mov
fldenv
test
ret
outsl
test
stc
sysexit
or
dec
xchg
addr16
sbb
dec
ss
pop
fucomp
jno
aad
addb
mov
add
pop
sbb
repnz
pop
mov
movl
scas
cmpsb
push
testl
enter
jno
xchg
sub
inc
imul
stos
adc
into
in
cmp
push
jno
sub
imul
mov
out
xchg
or
pop
sub
mov
xor
sbb
lds
outsl
test
ljmp
and
sbb
adc
mov
outsb
lahf
mov
lods
and
inc
push
jae
add
hlt
jg
mov
shlb
xor
cwtl
cmpsl
xlat
test
insl
fwait
lea
or
inc
jo
mov
pop
adc
cwtl
ret
and
xor
rolb
test
sub
cmpl
into
movsb
or
pop
push
into
in
mov
dec
lock
cmp
dec
sub
daa
stos
pop
mov
push
stos
push
jae
bswap
adc
mov
push
stos
mov
cmp
inc
sbb
mov
les
cmp
inc
out
std
aam
sbb
pop
push
dec
lods
ljmp
mov
pop
xor
cld
push
hlt
sti
jl
adc
push
xor
dec
loope
repnz
add
cli
xlat
sbb
hlt
push
dec
icebp
sbb
and
fisubs
xor
movsl
adc
add
cmp
mov
leave
xor
sub
arpl
sub
pushf
push
gs
fwait
pop
mov
inc
leave
out
repz
sbb
cli
mov
mov
add
pusha
mov
data16
push
insb
movsl
stc
aas
cmp
clc
add
sti
add
sbb
icebp
sub
push
sub
xchg
adc
jb
pop
xchg
shlb
xor
mov
mov
jle
lds
mov
cmp
mov
mov
mov
and
inc
xchg
xor
fildll
dec
add
xor
mov
outsb
dec
add
sar
sub
shll
out
pop
add
sbb
loope
xor
out
cmp
dec
push
xchg
test
jae
add
das
pop
jl
fldcw
push
pop
mov
sahf
stc
push
sbb
outsb
in
shll
pop
loope
movsb
dec
cs
andb
cmpps
xor
jns
test
cmp
rol
inc
mov
xchg
hlt
xchg
xchg
sti
sti
fcompl
fs
stos
movsl
in
mov
push
mov
out
sbb
stos
pop
leave
sar
mov
shll
pop
nop
int
leave
sti
push
outsb
or
dec
out
add
shr
bound
lahf
jae
sbb
sbb
sub
mov
fdiv
mov
lock
mov
mov
int
dec
push
fwait
fwait
repz
aad
lret
aas
jb
pushf
inc
add
or
cmpb
outsb
add
fs
loop
mov
ret
lock
adc
mull
nop
pop
loope
sbb
cmp
js
ss
stc
inc
andb
into
cld
daa
cmp
xor
jge
mov
push
adc
ds
stos
clc
out
aas
xchg
out
mov
cld
inc
lea
sbb
inc
das
je
push
lcall
repz
sarl
sub
xchg
pop
cmp
movsb
adcb
sar
cltd
pop
sub
mov
test
in
int3
call
fs
subl
arpl
shll
jl
jbe
sti
nop
incl
or
dec
sahf
pop
add
sub
inc
mov
jns
push
int3
das
mov
repz
xor
pop
mov
cmp
rcrb
pop
stos
sub
std
dec
push
or
repnz
xchg
addb
sub
mov
mov
stos
aad
mov
mov
jbe
dec
sub
pop
fidivs
sbb
and
xor
nop
adc
push
dec
rorl
sub
dec
cmp
rorl
repnz
fcoms
sub
push
pop
inc
stc
les
lea
cwtl
push
ds
adc
push
cmp
cmp
and
xor
addr16
inc
cmpsb
and
out
sub
sub
mov
jge
loopne
or
loopne
lret
cmp
aas
out
sbb
sti
xorb
test
pushf
aam
shlb
cmp
adc
lret
stos
push
divl
pop
jbe
pop
popa
cli
mov
mov
push
les
inc
fcoml
test
leave
iret
xlat
cld
ss
jb
and
cs
sub
ret
in
adc
int3
inc
push
pop
jno
or
dec
loopne
push
cmove
out
push
dec
rolb
jp
iret
hlt
dec
mov
xor
lcall
jle
mov
sbb
scas
in
incb
xchg
out
or
les
fcom
fs
leave
ror
lock
cmp
cmp
cmp
or
aad
push
lds
outsl
add
sub
lods
push
pop
jb
dec
int
cmp
mov
fimull
leave
jns
xor
pop
popa
inc
sqrtps
testb
adc
add
pop
cld
mov
jno
ja
sub
stos
xchg
dec
stc
push
and
xlat
mov
mov
rorl
es
pop
rorl
loopne
icebp
push
jnp
int
test
pushf
or
pop
push
sbb
in
lahf
fwait
aaa
mov
sahf
xchg
scas
shrb
mov
gs
inc
add
std
jle
add
je
mov
insb
fnstcw
out
fistpll
push
lahf
xchg
adc
sub
mov
ret
push
mov
insb
fldt
ror
mov
gs
mov
jne
cli
icebp
push
sahf
inc
sub
xorl
xlat
neg
cli
movsl
mov
cmp
xchg
enter
cld
jge
div
push
push
mov
fnstenv
add
fnstsw
sub
daa
or
fidivs
add
imul
push
fidivrl
jbe
or
sub
and
mov
das
adc
orl
adc
adc
je
mov
dec
cmc
xchg
lds
lahf
int
xchg
dec
or
negl
scas
sub
sbb
and
into
jecxz
mov
dec
add
jg
add
add
push
jl,pn
nop
mov
aad
pop
adc
lret
sub
xor
jnp
lods
inc
jp
pop
dec
rcrl
ds
fcompl
xchg
adc
clc
pop
xor
sar
stc
xchg
push
mov
add
pop
push
imul
into
jno
push
cmpsb
add
mov
bound
mov
xchg
cmc
cmp
aaa
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
xlat
out
imull
daa
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
xlat
out
imull
inc
jge
insl
xlat
sbb
mov
xchg
xchg
int
std
mov
popf
out
pop
test
jge
pop
insl
inc
sbb
imul
xchg
push
lcall
or
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
adc
mov
xchg
pop
jmp
test
mov
movsl
sbb
imul
pop
adc
mov
stc
jne
flds
or
jns
or
pop
or
sbb
sub
jmp
fstpl
aad
stos
push
test
test
push
enter
sbb
jle
cmp
std
pushf
aam
xchg
cli
cmp
cltd
data16
inc
push
lock
lock
adc
lods
dec
or
test
or
icebp
stc
stos
jle
cmc
xchg
shrl
mov
leave
sub
aad
cmp
adc
adc
cltd
stos
call
fs
repnz
negb
sub
lds
inc
dec
mov
or
data16
call
xchg
pop
xchg
aad
outsb
mov
push
fldcw
mov
aam
aas
in
jb
fisubl
pushf
inc
je
mov
or
enter
nop
jl
mov
fsubrl
and
stc
jne
jl
mov
popf
cmp
imul
xor
pusha
mov
test
stc
cmp
jmp
pop
aad
mov
sbb
fs
cmp
ss
push
loopne
mov
in
aad
scas
adc
loopne
ljmp
inc
stc
jne
fsts
or
jns
dec
in
adc
mov
stc
jne
fsts
or
jns
dec
in
adc
cmp
cmp
mov
loop
sub
call
jge
and
pop
jb
mov
cmp
push
je
mov
jle
sub
pusha
repnz
mov
pop
cmpsl
xchg
rorb
fcomp
out
stos
dec
inc
insb
xchg
ret
and
push
jp
fs
cmp
jecxz
in
shll
insl
inc
mov
insl
mov
or
xchg
push
ret
dec
pop
mov
sbb
add
jmp
out
rorb
addb
pop
lahf
ret
neg
shrl
jge
jge
aas
and
add
add
push
rcrl
mov
testl
je
call
mov
testb
cmc
jge
push
scas
mov
fisttps
aas
dec
fcomi
aad
lds
clc
sbb
xor
or
ud1
cmpsl
sub
clc
roll
repz
enter
pop
mov
ret
mov
and
add
pushaw
pushf
fnstenv
pop
insl
jle
add
or
xlat
test
mov
xchg
gs
jg
sbb
sbb
pop
orl
inc
adc
mov
mov
mov
rclb
cmpsl
xor
sti
jg
mov
outsl
iret
call
pop
pop
jmp
add
fldl
lock
inc
mov
and
cmp
inc
mov
jo
xlat
xor
pop
mov
xchg
ret
or
cltd
std
int3
and
adc
and
iret
test
adc
das
sub
inc
incl
ja
jl
add
sbbl
mov
repz
inc
sbb
xchg
inc
subb
mov
adc
aam
xor
cli
neg
out
lcall
loope
adc
lock
sbbb
out
in
cli
mov
lcall
jp
lods
xchg
lock
and
xor
inc
add
or
outsb
fimuls
scas
test
fstpt
sub
cli
fisubrl
jecxz
inc
call
sub
pop
dec
dec
and
jae
divb
push
add
inc
es
mov
mov
subb
adc
das
push
bound
clc
push
popa
sub
hlt
jo
adc
inc
adc
mov
je
loopne
outsb
and
aaa
repz
jmp
fbld
nop
jecxz
push
lock
in
push
inc
sbb
mov
lahf
fnstenv
int3
repz
bound
mov
jmp
sahf
out
dec
out
fisttpll
aaa
decb
les
adcl
cmp
add
cltd
pop
mov
outsl
movl
lret
add
pop
frstpm(287
repz
mov
or
outsl
insl
nop
xchg
jg
mov
cld
fsubl
add
imul
scas
pusha
scas
dec
xchg
adc
iret
dec
cmpsb
jmp
ja
inc
push
inc
imulb
imul
inc
mov
sub
fwait
push
sbb
dec
mov
push
mov
int3
and
sti
jb
dec
push
popf
paddusb
xchg
sbb
mov
loop
stos
mov
icebp
xor
lock
xchg
dec
pushf
test
jmp
adc
bound
xchg
dec
or
ljmp
pushl
push
inc
lahf
cmpsb
xchg
ret
lods
insb
or
pop
test
es
out
xchg
cmp
lock
js
inc
lock
xor
pop
rcrb
lret
add
adc
pop
mov
mov
or
xorb
lret
cmc
push
and
push
nop
lea
lock
iret
out
mov
sbb
inc
mov
jb
imul
push
fdivl
mov
stos
xor
push
add
inc
into
inc
jno
jl
sahf
mov
pop
lock
test
sti
xchg
xchg
dec
js
leave
sbb
rorl
jno
in
out
xchg
jb
into
loopne
bnd
insb
scas
push
das
leave
push
mov
pop
dec
sti
sub
shrb
insb
sbb
int3
dec
fmuls
xor
imul
jno
insb
shlb
mov
mov
xchg
ja
int
dec
inc
mov
xchg
int3
add
xor
cmp
in
lods
sub
inc
cmpsb
and
cmpsb
imul
fwait
jns
xchg
pop
xchg
in
stos
scas
jnp
nop
mov
pop
enter
sar
mov
add
push
and
and
mov
sti
add
push
xchg
add
mov
pop
or
pop
testb
cs
or
pxor
xor
add
andb
int
cwtl
pushf
adc
cmc
mov
mov
sahf
or
jo
repnz
xchg
fstpt
adc
aam
data16
mov
call
mov
enter
pop
rol
out
mov
jns
push
xchg
in
push
mov
sub
jne
scas
or
cmp
mov
xchg
inc
call
cmc
ljmp
xchg
addl
adc
cmp
out
or
in
dec
lret
outsl
inc
std
ret
fisttpl
pop
scas
jg
adc
xchg
xchg
xchg
xchg
xor
dec
push
and
push
cmp
sbb
add
cmc
add
ror
and
call
in
push
lea
sub
ss
add
adc
jle
inc
iret
or
rcr
sbb
mov
jno
mov
sub
sbb
jl
ret
ret
xor
gs
nop
mov
aam
lock
jmp
out
xchg
add
fcoms
pop
sub
outsb
inc
mov
test
push
cmp
icebp
push
jl
sti
rorl
movsl
mov
pop
adc
push
inc
dec
xchg
xchg
lahf
jo
aaa
int
mov
mov
pop
adc
arpl
cs
repz
xchg
fidivl
and
adc
sbb
mov
or
fisttps
or
mov
hlt
xchg
fdivrl
frstor
insl
sub
jg
iret
sti
imul
xchg
call
xchg
jns
sbb
es
mov
sbb
pop
adc
loopne
dec
movsl
pop
dec
mov
lock
lds
or
jo
roll
addr16
popa
vpavgb
inc
test
int
cs
daa
push
dec
adc
bound
ret
push
push
fdivrl
pop
and
scas
or
or
xchg
inc
enter
adc
repnz
adc
mov
lea
pop
pusha
sbb
xor
fcmovb
and
movsl
pop
dec
ret
and
mov
xor
outsl
push
jno
inc
in
jg
xchg
add
pusha
sbb
inc
dec
pop
cs
icebp
and
mov
push
cmp
lock
arpl
aas
int3
inc
icebp
ja
pop
xor
dec
or
outsl
fcom
jne
repnz
push
pop
mov
aad
out
and
outsl
bound
int3
mov
sbb
adc
pop
testl
xor
jne
push
pop
mov
lds
adc
int
std
pop
frstor
xchg
mov
clc
lock
ja
jl
aas
xor
jmp
je
sahf
fstpt
das
sub
arpl
push
jne
pop
jge
adc
cmp
adc
jp
cltd
movsl
stos
or
out
inc
pop
es
add
cmp
lods
dec
pop
rolb
inc
call
rorb
aad
filds
mov
sti
dec
cmpsb
fcmovbe
subl
jno
mov
push
fistps
in
inc
test
jne
add
sub
push
jle
mov
xchg
mov
test
lods
sub
pop
scas
repz
scas
into
adc
xor
icebp
xor
jae
lret
inc
sbb
cmpsl
jns,pt
movsb
xor
testl
push
push
or
int
outsb
lods
inc
mov
pop
lret
add
xchg
aaa
mov
insb
fmuls
xor
std
cwtl
call
clc
divb
xchg
jecxz
pop
inc
mov
or
dec
inc
mov
aad
loope
or
push
test
movsl
movb
sti
mov
cli
fs
jge
out
shlb
lret
sahf
ss
stos
sbb
arpl
jno
xchg
scas
cltd
xor
ja
or
in
outsl
lock
scas
neg
mov
pop
jns
mov
sub
rcrl
ja
ret
sbb
jnp
sbb
jb
jno
das
ja
adc
pop
or
test
mov
pop
stos
jne
cmp
sbb
mov
fdivrp
std
mov
enter
punpckhdq
iret
inc
cli
imull
lds
js
das
mov
jmp
xlat
addr16
rorb
out
fistpl
and
mov
not
into
cmp
addr16
push
pop
dec
lods
rcrl
mov
inc
bound
cs
adc
lret
inc
mov
add
gs
fdivr
or
cwtl
cmpsb
xchg
into
cmpsb
sbb
mov
mov
out
inc
dec
fwait
jge
xchg
addr16
das
jmp
add
mov
fiaddl
shrb
jg
lods
xchg
jnp
in
out
mov
addr16
out
iret
mov
pop
xlat
imul
out
mov
add
jg
inc
xchg
orl
inc
xchg
iret
rclb
imul
push
cltd
xor
enter
add
imul
imul
pop
sbbl
popf
mov
sub
lods
rcll
xchg
push
ret
xchg
lret
mov
mov
daa
hlt
mov
cld
out
xchg
outsb
mov
out
or
pop
sarl
aad
shlb
int3
lock
inc
lds
cmp
sub
xchg
mov
insb
int
inc
mov
xorb
mov
lods
inc
mov
adcb
jnp
pusha
mov
std
mov
adc
dec
add
push
lcall
into
or
cmp
movsb
repnz
xchg
push
lock
push
movsb
push
sub
ljmp
add
mov
stos
stos
mov
jbe
out
dec
jnp
jo
or
test
and
mov
mov
mov
rcrb
in
cli
lods
dec
in
push
push
cmpl
mov
dec
xchg
in
pop
decl
add
mov
mov
lods
aas
and
xor
popf
push
outsb
roll
sarl
in
hlt
sub
lods
pop
pop
xor
pusha
dec
aad
pushf
adc
daa
mov
imul
pop
sahf
mov
dec
xchg
filds
sbb
push
sub
mov
dec
pop
adc
pop
jo
sarl
sbb
adc
mov
lds
sub
shll
pop
cli
lahf
lret
sbb
sbbb
cmp
push
les
xchg
and
pop
push
push
ret
movsl
and
lret
popf
int3
insl
mov
ret
outsb
push
je
mov
ds
inc
push
pop
jl
mov
leave
inc
sub
and
add
jns
pop
bound
mov
imul
mov
xchg
lcall
sbb
bound
sbb
repz
out
cltd
movsb
cmc
mov
ret
pop
cwtl
inc
push
push
stos
and
xor
inc
sahf
bnd
fbld
mov
add
pop
sbb
adc
sub
add
lahf
jle
cmp
iret
leave
das
les
cmpsb
pop
mov
sub
jg
sarl
pop
bnd
stc
cmc
sub
data16
fnstenv
test
rcl
ss
orb
dec
std
lods
or
cltd
insl
cmc
mov
fsubl
jae
pop
and
sbb
xlat
testl
cmp
dec
add
push
iret
push
sbb
sub
cmp
int
mov
test
shrb
mov
sub
xchg
or
ss
jecxz
test
mov
shlb
dec
out
pmulhw
pop
shufps
mov
inc
mov
jmp
idiv
cwtl
stos
sub
stc
fimull
nop
xor
jo
xor
or
int
iret
std
outsb
add
push
dec
das
jns
inc
lock
mov
adc
out
sbb
dec
cmp
fimull
mov
rcr
push
adc
incl
insb
imul
pushf
lods
xchg
scas
sarl
cmp
shlb
dec
lods
jns
inc
sbbb
jnp
push
idivb
sti
pop
inc
and
loopne
sbb
adc
sbb
fisttpll
je
fildll
mov
and
mov
out
push
add
jmp
and
or
pop
ja
mov
leave
test
xor
dec
mov
dec
add
mov
incl
jns
test
cmpsl
inc
inc
aam
jns
in
roll
rclb
daa
mov
pop
jle
xchg
sub
sub
aas
call
cmpsb
js
daa
scas
fwait
push
and
push
fisttpll
sbb
inc
dec
adc
andb
and
xchg
fwait
rcrb
aaa
jg
pop
cli
push
das
mov
in
pop
cltd
adc
test
cmp
jl
and
mov
mov
adc
dec
test
arpl
mull
sbb
cmp
fbld
scas
mov
into
sub
adc
mov
sub
and
xchg
sbb
xor
mov
aam
push
mov
lods
cltd
lret
xchg
cmp
fisttpll
rol
pop
add
xor
fdivl
cmp
test
icebp
and
xchg
es
cmc
mov
sbb
and
mov
stos
iret
incl
test
xchg
xchg
dec
outsb
int3
add
jae
jl
and
data16
movl
fwait
aas
pop
mov
xchg
xor
pop
mov
pop
cmp
mov
sbb
aam
push
inc
and
jmp
push
lods
push
repnz
adc
sbbl
nop
sbb
out
in
xchg
in
mov
dec
add
push
fldenv
movsl
les
ja
adc
nop
jnp
aad
adc
jl
lret
jg
loop
cltd
das
int
ja
mov
pop
inc
jle
jne
sbb
sub
dec
aad
data16
repz
int
jmp
inc
jmp
repz
jnp
leave
sub
loope
cwtl
xor
lods
imul
adc
mov
xlat
push
call
imul
mov
dec
adc
icebp
jbe
and
jbe
inc
sbb
fs
mov
push
iret
or
mov
lret
arpl
cmp
lock
pop
jg
push
test
shrl
enter
shrl
add
outsb
add
jg
cmp
and
insl
sar
das
fstps
sub
push
arpl
sbb
jnp
adc
iret
and
daa
push
sbb
cmp
enter
gs
and
and
leave
lret
test
pop
or
pop
sbb
fsubrl
push
inc
js
sub
jnp
sub
or
lahf
adc
mov
sub
orb
sbbl
das
rcr
mov
mov
fnsave
pop
xchg
mov
test
lea
jl
xchg
decb
repnz
lds
jecxz
js
jb
xchg
bound
sbb
pop
xlat
ret
dec
hlt
sub
cli
shlb
pop
shrb
shlb
mov
fwait
mov
mov
xchg
jl
dec
and
dec
inc
out
orb
xchg
cs
jo
dec
shlb
stc
xlat
xor
dec
shll
push
scas
mov
cmpb
pop
imul
ror
psadbw
adc
xor
adc
mov
js
and
jecxz
jno
pop
testl
sahf
mov
cmp
xlat
cmpl
xchg
aad
push
mov
insb
data16
stos
xchg
add
and
pop
outsl
enter
jle
add
adcb
jecxz
adc
out
mov
inc
jge
cs
pop
lods
add
mov
and
mov
and
enter
sbb
push
jge
pop
xchg
cmp
cmp
jnp
jecxz
icebp
pop
push
mov
mov
push
stos
cmp
add
repnz
pop
nop
vpaddusb
mov
std
and
mov
rolb
shrb
mov
mov
and
cltd
cmp
aad
test
out
test
cmp
cmc
xlat
mov
pushl
jle
push
dec
cmc
xor
sbb
or
sti
aas
add
sub
repnz
xor
fcmove
adc
inc
ret
stc
mov
iret
int
cwtl
xchg
xchg
mov
jae
adc
out
sub
mov
push
mov
jle
jno
mov
pop
outsl
mov
outsb
ljmp
rcrb
lods
stc
jo
imul
or
loop
clc
mov
or
sbb
jle
in
scas
mov
imul
imul
xchg
add
hlt
push
or
ror
ret
arpl
std
add
adc
negb
adc
push
inc
push
mov
in
ss
mov
pop
dec
fs
stos
sbb
iret
pop
fcoml
push
icebp
arpl
mov
inc
call
and
sub
pop
or
push
orb
lods
xchg
adc
or
repnz
xor
out
mov
loope
sbb
dec
fdivrl
jo
pop
leave
xchg
push
jge
xchg
enter
and
dec
inc
imul
insl
mov
xlat
push
cmpsb
lods
add
addb
jne
incb
addb
addl
adc
adc
dec
xchg
std
je
mov
cld
adc
add
stc
push
or
les
cmp
xchg
jne
pushf
cwtl
cmp
popw
mov
in
in
mov
pop
inc
rorl
and
imull
enter
xchg
popa
jo
addl
orl
and
jle
jnp
out
inc
jmp
sub
add
fs
scas
movsb
fsubrl
mov
xchg
push
xor
inc
int
into
insl
test
sbb
adc
in
stos
arpl
outsb
dec
jge
lods
clc
divl
mov
dec
div
mov
cmpsb
loope
setno
jp
pop
addr16
lcall
test
pop
notb
push
and
fldcw
es
add
add
dec
sbbb
iret
pop
into
mov
xchg
cmc
xchg
daa
mov
pop
popa
xchg
push
xlat
out
and
mull
aam
sub
sti
lret
out
aaa
repnz
in
dec
fcompl
push
push
mov
and
ja
xchg
xchg
in
dec
lods
xchg
mov
push
rcrl
stos
fcomi
std
pop
mov
lock
xchg
in
sbb
mov
test
xor
xchg
dec
daa
pop
cmc
loop
repz
aaa
push
dec
xlat
push
daa
xor
push
or
mov
sub
add
jb
scas
mov
incb
iret
aam
mov
lret
lret
xchg
popf
xor
push
dec
xor
pop
sub
mov
aam
xchg
cmc
dec
add
inc
and
mov
push
outsb
shrl
fstpt
std
inc
adc
or
and
mov
cmp
mov
call
dec
adc
test
sbb
and
lahf
dec
xchg
imul
push
mov
jnp
loope
and
je
dec
mov
sarl
xchg
movsl
xchg
ds
sahf
popf
mov
imul
inc
jmp
test
int3
mov
scas
mov
jbe
in
aas
ficoml
in
in
xchg
fisubrl
in
scas
cmp
sub
les
jmp
cld
movsb
and
xchg
sarw
movsl
or
sbb
push
ret
shlb
pop
repz
fwait
xchg
andl
orl
xchg
and
pop
jl
xor
jmp
out
out
xchg
iret
mov
test
hlt
add
sub
pop
lret
mov
pusha
test
daa
mov
cmp
imul
jecxz
lods
sub
fldl
sub
js
pop
ja
sbb
xchg
das
es
jno
cltd
mov
aas
fs
iret
cmp
mov
mov
cmp
jno
imul
pop
dec
xor
pop
jo
fists
cli
mov
xchg
insl
sub
stos
lock
pop
test
mov
xor
lret
pop
pop
xchg
lahf
xchg
aam
pop
repz
push
mov
xchg
notl
repz
adc
ja
rorl
pop
push
and
mov
adc
inc
or
addr16
push
mov
add
test
add
ljmp
dec
mov
cmp
aas
mov
jg
ljmp
ja
in
push
lahf
scas
test
nop
ret
repz
mov
dec
mov
inc
dec
jo
adc
sub
xchg
mov
fsubs
mov
xchg
mov
push
jmp
fsts
or
jns
dec
in
adc
mov
stc
jne
fsts
or
jns
dec
in
adc
or
jns
leave
fsts
or
jns
dec
out
adc
mov
stc
cmc
leave
in
push
jp
pop
or
xchg
mov
cmpsb
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
xchg
cmpsb
jne
or
push
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
xchg
es
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
xchg
push
in
adc
xor
add
jbe
xchg
push
ret
inc
add
adc
sub
inc
test
into
mov
nop
mov
dec
das
ds
sub
ljmp
push
xchg
mov
push
std
ficompl
add
pop
loope
ja
mov
mulb
cltd
jne
add
xchg
adc
add
cmpsb
lds
ror
jnp
std
push
movsl
cwtl
mov
mov
jo
dec
mov
sbb
aad
sub
cmc
fidivrl
mov
es
cmpsl
xchg
ret
std
or
mov
pop
sbb
mov
fnsave
xchg
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
add
cmp
add
adc
imul
sarl
dec
cltd
pop
loopne
cld
das
loope
loope
inc
daa
fdivl
mov
xor
jp
jo
pop
loopne
sarl
adc
loop
shlb
stos
adc
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
sbb
push
filds
jmp
push
jg
aaa
and
dec
pop
and
dec
ljmp
adc
pop
or
mov
cmp
sbb
jge
das
xacquire
xchg
stos
lret
sbb
aam
daa
sbb
into
and
fsubs
outsb
lds
lahf
ret
mov
sbb
xor
cltd
push
sahf
inc
pushf
in
xchg
pop
xchg
scas
sbb
push
call
mov
iret
xor
aam
cmpsl
das
and
mov
mov
rcrl
or
and
js
pop
cmp
pop
jl
lret
stos
cmp
out
test
loopne
into
push
inc
add
lret
nop
lret
mov
pop
ja
loope
adc
mov
mov
push
icebp
push
movsl
jge
data16
rolb
mov
roll
dec
mov
sub
xor
adc
pop
iret
lcall
mov
iret
lret
pop
loopne
pop
hlt
or
mov
push
pop
arpl
addr16
jp
mov
js
and
cmp
insb
pop
pop
add
fisubs
lods
sbb
push
push
mov
lahf
pop
push
test
pop
mov
clc
imul
clc
inc
push
mov
fsubrl
mov
out
and
unpcklps
push
loope
jnp
add
and
push
fldcw
mov
aaa
aad
pop
test
or
imul
and
pop
flds
mov
push
dec
cmpsb
cmp
mov
jnp
push
lods
mov
cli
movsl
test
push
cmp
jnp
xor
fwait
roll
iret
mov
aam
fcomip
push
or
aaa
mov
xor
xchg
roll
or
loop
xchg
in
xor
icebp
sub
xchg
sarb
movsl
iret
pop
js
mov
insl
xor
or
ds
mov
pop
fwait
lret
jmp
push
cmc
cmpsb
and
mov
rorb
fadds
push
movsl
sahf
test
loope
stos
adc
lret
dec
ret
in
popf
setl
jecxz
divl
dec
and
cmp
dec
rorb
negb
pushl
push
jo
cmp
mov
cmp
cmp
inc
sarb
das
pop
gs
iret
in
jecxz
push
jp
xchg
pushf
xor
scas
sbbl
and
imul
and
fwait
mov
jae
add
dec
inc
mov
std
cld
std
cmpl
sbb
out
das
pop
pop
loope
pop
xchg
adc
add
xchg
sti
icebp
fdivrs
pop
adcl
fstl
adc
xchg
xorb
clc
cmovg
jle
dec
inc
mov
mov
mov
stos
out
leave
ffreep
or
stc
mov
inc
jp
fdiv
or
rolb
xchg
or
loopne
hlt
adc
imul
test
stc
xchg
dec
js
xchg
aad
in
fidivrs
cmpsb
lock
mov
inc
dec
pop
jne
in
aad
insl
inc
add
gs
jb
imul
out
mov
test
xor
sbb
mov
sahf
aam
push
ds
js
aad
outsl
mov
mov
cmp
icebp
cmp
jl
ror
add
test
fwait
mov
imul
out
dec
xor
adc
fs
in
iret
or
stc
or
push
rcrl
shll
loop
xchg
adc
pop
stc
inc
and
cli
xor
adc
inc
and
push
repnz
stc
stos
stos
pop
inc
orl
aam
xchg
jle
mov
jecxz
sub
mov
mov
fisubrs
sbb
add
cltd
sbb
je
adc
inc
xchg
fsubs
jmp
add
cwtl
ljmp
cltd
repz
test
rcl
pusha
daa
cmc
mov
scas
and
daa
sahf
push
mov
adc
push
cmpsl
xor
insb
pop
int3
mov
add
adc
mov
jo
leave
mov
test
mov
ror
mov
dec
cmp
aam
dec
sub
movsl
add
push
and
movsl
push
jp
pop
enter
fstpl
pop
das
mov
sub
outsb
sbb
xchg
jmp
outsb
lods
rcll
mov
arpl
movsl
pusha
in
popf
mov
xor
xchg
out
jnp
dec
dec
and
pop
dec
cmp
inc
jo
rcr
mov
jbe
pop
sub
or
popl
jne
frstor
inc
test
dec
adc
sar
clc
lock
dec
adc
lock
jecxz
push
dec
addr16
cmp
xchg
test
ret
sub
ret
cs
push
sbb
jle
repz
cmp
sub
cvtdq2ps
test
loop
mov
mov
adcl
ja
jle
xlat
fiaddl
notb
jbe
fbld
dec
mov
notb
bound
hlt
mov
add
repnz
inc
and
iret
dec
ret
pop
jg
mov
jl
rclb
fcos
lods
or
jmp
or
es
push
mov
sahf
push
insl
bound
stos
xlat
push
sbb
and
lds
scas
into
jns
mov
sbb
es
sarb
sbb
push
pop
push
jp
sbb
adc
popl
jno
fidivrl
movsl
jne
enter
push
cmpsb
mov
inc
popl
std
pop
and
pop
jb
inc
sbb
pop
out
jmp
cs
push
sub
adc
add
popf
or
leave
enter
add
dec
aad
xorb
out
lods
out
imul
cmpsl
inc
divb
ss
jbe
das
test
push
inc
clc
push
add
push
dec
in
or
and
jb
jmp
out
fiaddl
cmp
push
outsb
push
inc
or
fadd
push
fiadds
nop
mov
ret
in
cmpsl
jno
jmp
hlt
shll
cld
jg
xchg
sub
jae
fnstenv
mov
xchg
push
or
push
addb
sbb
push
lods
lret
push
add
sub
int3
test
fiadds
adc
jge
sahf
sub
push
add
dec
push
iret
test
mov
sti
roll
push
cmpl
clc
stos
xchg
leave
aam
push
ret
jl
jle
stc
mov
ja
cld
fstpl
or
imul
cmp
popa
shrb
hlt
add
adc
leave
push
in
mov
mov
in
pop
in
push
mov
xchg
jb
pushf
jnp
test
test
into
push
add
xchg
push
cmp
fmuls
ds
xorb
sbb
mov
in
scas
lock
inc
jge
mov
fimull
xchg
and
adc
and
sti
idiv
dec
aaa
lea
jae
or
adc
imul
sub
dec
mov
push
inc
mov
repz
and
dec
mov
dec
icebp
testl
sahf
mov
xchg
mov
repnz
dec
mov
push
mov
adc
outsl
in
lahf
jecxz
ds
mov
xor
xor
jns
and
push
lcall
push
inc
jmp
mov
ja
mov
mov
data16
sti
push
out
sub
ljmp
or
dec
jo
inc
pop
add
adc
cmpsl
dec
scas
dec
ljmp
fwait
jge
mov
pop
shlb
sbb
aas
fldenv
sbb
shlb
lret
sbb
dec
or
xor
push
dec
mov
mov
push
jne
idivb
adc
xor
lret
dec
push
mov
mov
inc
addr16
test
sbb
les
jnp
mov
test
call
adc
pop
push
sub
cmp
sub
adc
pop
sarb
sub
lret
mov
dec
jmp
testb
cwtl
fneni(8087
call
popa
daa
and
mov
mov
ret
mov
nop
push
test
popa
fsubrl
mov
sti
rol
xlat
xchg
mov
xlat
popl
jns
push
and
idivl
inc
add
inc
aad
mov
sbb
in
std
cwtl
mov
xchg
fcoms
call
test
in
mov
push
mov
cmpsl
loope
jns
cmp
xor
sub
pop
push
outsl
addr16
jp
test
lret
mov
lret
dec
xchg
out
out
mov
dec
std
xchg
sub
cmp
xor
mov
je
pop
xlat
and
fs
data16
fwait
test
xchg
ja
neg
pop
sub
xchg
dec
testl
sbbb
mov
ret
jo
xor
xor
mov
pop
lret
hlt
xchg
and
in
aam
loope
xchg
in
xchg
lret
dec
jne
loopne
sahf
shl
sti
movsb
xor
adcb
iret
jg
pop
jne
maskmovq
lahf
inc
sub
aam
fnsave
ret
mov
mov
leave
jo
das
dec
xor
adc
test
test
add
es
push
call
aam
cwtl
cwtl
ret
jo
je
mov
into
and
pop
movsb
cmp
fisubs
test
mov
rcl
dec
push
mov
pusha
mov
xchg
cwtl
and
push
sbb
ljmp
popf
push
mov
rcl
inc
pop
sub
roll
test
fldt
xchg
loope
pop
cmp
adc
mov
pop
out
cmc
xchg
and
aas
jno
ds
fbld
push
jb
mov
ljmp
clc
jbe
ss
xor
push
adc
pushf
pop
jns
dec
inc
and
or
shlb
imul
xchg
add
jb
cld
ret
movsb
cmp
add
xlat
test
dec
pop
jmp
int
daa
loopne
lcall
imul
cld
adc
bound
sbb
sub
xchg
imul
push
aas
in
adc
rolb
sub
lcall
cwtl
and
movsb
rolb
push
inc
and
popa
dec
repnz
das
fnstenv
jne
aad
movsl
xor
inc
out
aam
add
pop
xchg
andl
ret
rol
inc
pop
mov
mov
sbb
lock
in
dec
fldt
xchg
add
ds
cmp
dec
push
hlt
and
xchg
mov
negb
push
dec
jecxz
loopne
sub
pop
jmp
mull
into
mov
rcll
jg
mov
add
es
test
cs
psadbw
cltd
sbb
add
movsl
xlat
stos
add
lock
fnsave
pop
out
addl
cmp
cmp
iret
div
loop
std
idivl
or
sbb
jle
shr
inc
mov
dec
jne
mov
mov
icebp
es
lahf
mov
roll
jb
adc
pop
mov
jp
in
mov
push
adc
or
add
mov
xchg
push
lods
js
into
mov
lcall
jnp
data16
leave
push
or
aaa
xor
jbe
sub
shlb
movzwl
mov
loope
loop
sbb
testb
fwait
movsb
std
or
fcmovnbe
fwait
push
out
int3
sbb
cmp
push
shll
sub
add
call
movsb
inc
daa
sub
sti
fsubp
iret
or
jne
idivl
dec
or
outsb
add
jne
cwtl
andb
ret
sub
clc
and
movsl
push
into
div
cwtl
das
lds
arpl
pushf
lret
adc
cwtl
dec
dec
pop
inc
aam
cmpsb
pop
fisttpl
loopne
pop
mov
pop
push
data16
mov
jle
mov
mov
fistpl
fadds
ficoms
jbe
enter
aad
pop
adcb
ret
inc
inc
xor
insb
cmp
dec
inc
lret
mov
add
int
mov
sub
xlat
hlt
cld
dec
xchg
mov
sbb
test
mov
push
mov
add
push
fisubs
pop
popf
leave
push
pushf
jae
mov
jo
popa
push
addl
in
add
adc
dec
mov
ss
xchg
cli
xor
xchg
shll
push
loopne
jbe
pop
sti
cld
test
lahf
lret
inc
jp
mov
xchg
xor
cmp
pop
xchg
pop
and
pop
sbb
je
adc
dec
fadds
aas
cmpsl
lea
mov
push
stc
push
or
push
stos
cli
xor
mov
dec
mov
xchg
cmpb
and
aam
shrl
pop
lcall
push
fldenv
xor
cwtl
jbe
pop
insl
xor
sbb
data16
pusha
int
inc
sbb
push
fxch
cmpsw
icebp
stos
sub
repz
mov
xor
xchg
sub
cmp
cmp
roll
cmc
loop
mov
fnstsw
sete
pop
imul
mov
mov
jecxz
popa
jp
jecxz
test
xchg
aaa
cltd
push
mov
ficompl
push
and
js
lea
jae
sub
lret
gs
mov
out
xchg
leave
sbb
fisubs
outsb
sbb
push
jl
pop
adc
mov
jp
sub
xor
rorb
outsb
xorl
fs
inc
shlb
hlt
adc
jg
pop
adc
xchg
icebp
xchg
dec
pop
mov
xlat
adc
ret
mov
fwait
repnz
fwait
int
dec
nop
xchg
sarl
lret
mov
into
push
dec
or
xor
xor
xor
or
test
sbb
pusha
adc
push
and
rcrb
fwait
inc
iret
cmc
inc
nop
test
jo
push
into
loop
or
ja
insl
negl
or
lahf
fists
iret
nop
or
negl
pushf
ljmp
push
pushf
fists
jge
sub
frstor
push
adc
lods
jns
xor
mov
pop
mov
cmp
xchg
sbb
rcl
data16
sub
cmp
push
mov
cld
gs
mov
sahf
pop
fiaddl
sbb
imul
arpl
sahf
inc
xor
adc
cltd
into
cld
nop
or
ljmp
aas
xchg
sbb
sti
sbb
add
or
dec
shlb
jecxz
cwtl
mov
test
cltd
sub
mov
sar
in
test
jle
push
fwait
inc
jmp
dec
outsl
test
gs
inc
leave
jle
push
jl
mov
jmp
xor
add
sub
cmc
int3
jb
lea
aam
in
mov
push
cmp
out
inc
push
into
cltd
ficompl
sbb
xor
loop
jns
sbb
mov
repz
mov
xchg
push
cmpl
std
ss
adc
adc
nop
mov
sbb
scas
cltd
jg,pt
addr16
je
pop
mov
adc
adc
repz
sbb
lahf
mov
roll
cld
js
push
lock
nop
mov
test
mov
xor
cmp
inc
inc
cmp
pusha
js
ds
lretw
jg
imulb
cmpsl
push
sub
in
jb
data16
push
sbb
pop
negl
in
pop
int3
jecxz
mov
inc
mov
stos
and
pop
leave
nop
lea
jmp
jne
push
or
adc
in
xor
mov
xchg
es
add
aas
ret
sub
pop
lcall
ds
out
pop
es
fsubrs
cmp
jmp
and
bound
out
add
out
sbb
cmp
mov
add
mov
repz
stos
cmp
cmpsb
cmp
inc
dec
out
pop
loop
xchg
aad
out
mov
add
or
nop
dec
push
inc
gs
pop
icebp
push
sti
mov
and
xlat
cli
mov
mov
popa
into
mov
fistl
out
out
mov
popa
js
cmp
adc
cmp
sub
xor
mov
lahf
jno
jle
fistpll
sub
xor
and
sbb
loope
out
pop
enter
out
stc
cltd
repz
adc
and
outsl
pop
or
je
fs
add
jbe
and
jo
jnp
cmp
xor
ficoml
jmp
and
lret
filds
mov
repz
xchg
sbb
adcl
js
sub
add
in
mov
jl
add
add
lcall
push
dec
iret
jns
xchg
cmpb
push
outsb
fs
push
xor
xchg
xor
and
mov
ds
pusha
push
xor
dec
cli
pop
pop
aam
repz
fldl
or
xorb
sub
dec
inc
xchg
popa
and
mov
outsl
inc
push
les
es
pop
xchg
add
test
cli
adc
mov
jb
sub
stc
imul
push
mov
outsb
or
andl
pop
dec
es
or
mov
lret
inc
icebp
cmpsl
cs
out
aad
dec
mov
jge
ja
loop
or
ret
cmp
cltd
xor
outsl
js
push
sub
cmp
notb
dec
inc
fsubs
push
js
xchg
pop
xchg
dec
test
stc
xor
arpl
pushf
inc
inc
sbb
je
int3
jns
movb
mov
scas
nop
test
ret
in
pop
push
push
cmp
imull
dec
push
cmp
pushf
stos
dec
inc
sbbl
xchg
std
icebp
add
jb
mov
leave
in
ret
into
lods
outsb
incl
dec
cld
push
xor
dec
enter
pop
xor
sbb
adc
iret
dec
mov
fmuls
arpl
pop
es
repz
xor
mov
int
and
repnz
push
adc
ljmp
sub
lret
jno
sub
leave
cmp
cs
clc
aad
ja
es
adc
xchg
shl
fisubrs
cmp
sbb
pop
nop
roll
stos
les
movsb
jb
jae
mov
pop
bound
hlt
mov
cs
in
aaa
jae
cld
in
ret
cmp
sub
jae
scas
clc
out
sbb
xchg
or
pop
je
aam
and
jno
mov
pop
cmp
pusha
inc
pushf
push
mov
jo
arpl
push
imul
enter
std
ljmp
jnp
inc
push
scas
and
jle
inc
cmp
pop
jmp
push
jne
cmp
loopne
and
flds
xor
cmp
sbbl
push
xchg
mov
cli
subl
outsb
push
dec
jno
xchg
icebp
cmc
mov
nop
dec
push
sbb
imulb
xor
inc
addr16
cld
xchg
push
rcrl
aam
push
fidivs
pop
and
or
sahf
adc
add
cmp
rcrl
das
scas
pop
lcall
pop
imul
iret
cli
leave
fidivl
inc
stos
imul
sbb
lds
inc
mov
cli
mov
lret
cmp
mov
sub
repnz
imul
cltd
arpl
fidivs
inc
das
ret
repz
mov
aaa
inc
pop
cmp
stc
adc
push
outsb
movsl
test
je
jae
mov
leave
inc
aaa
scas
and
add
or
push
daa
repz
mov
call
imull
mov
movsw
cli
outsl
mov
jns
push
add
loope
add
push
loopne
push
dec
jecxz
stos
lret
adc
js
jnp
sub
dec
mov
mov
std
xchg
inc
dec
stos
push
test
lea
inc
andb
jp
lds
das
mov
cmp
sub
add
rcrl
bound
sbbb
cmp
les
adc
jge
push
cmp
sub
adc
cmpsl
dec
aas
xlat
adc
jecxz
repz
insb
pop
mov
adc
jp
xor
rolb
rcrb
outsb
mov
data16
jnp
xor
jge
bound
xlat
fnstcw
push
mov
push
xchg
adc
ds
pop
jl
lahf
sbb
pusha
dec
daa
pop
fs
mov
and
jp
leave
jae
jns
push
lods
popf
mov
je
xchg
into
mov
xchg
popa
lock
sbb
ret
push
mov
call
pop
aas
lret
rcrb
mov
mov
jnp
sub
xlat
add
and
pop
cli
dec
stc
push
lods
mov
mov
mov
loop
sub
movsb
jbe
incl
lock
dec
pop
pop
pop
imul
add
xchg
imulb
jo
int
aad
jns
in
sbb
das
rolb
pop
stos
push
shrd
cmp
pop
and
insb
xor
add
movsb
sbb
jno
push
mov
push
fisttpll
and
daa
cmp
jl
lret
enter
cmp
mov
mov
mov
inc
int3
in
mov
call
aad
xchg
orb
lock
jbe
cwtl
inc
add
xorl
shrl
sub
cltd
fs
nop
loopne
sbb
xchg
stc
loopne
daa
loop
push
add
sub
pop
mov
insl
hlt
fcom
xor
fnsave
js
fdivrs
bound
sub
pop
cmpsl
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
adcb
cmpsb
jne
add
out
test
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
add
xor
stc
aad
dec
es
inc
repnz
sbb
mov
cmp
sub
sbb
or
xor
sbb
xchg
xacquire
cld
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
data16
mov
cmpsb
mov
nop
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
in
test
mov
dec
dec
bound
je
or
pop
int
jge
sahf
negl
fnstcw
push
addr16
xchg
mov
loop
pop
outsl
lea
jl
jmp
imul
push
dec
mov
sub
and
inc
cmp
and
jbe
or
je
in
std
scas
cmp
xchg
ljmp
xchg
mov
je
jns
or
pop
jno
push
insl
repz
inc
add
sbb
insb
sub
xchg
jne
ror
jmp
dec
flds
cmc
and
shl
xor
mov
fsub
xor
mov
lods
dec
xchg
jge
movsb
sti
push
or
lods
jbe
dec
mov
mov
data16
cmp
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
pop
sbb
or
sbb
xchg
mov
fdivrp
xlat
mov
mov
dec
push
jns
or
adc
and
xor
xlat
aad
iret
cmpsb
jmp
lcall
fs
outsb
dec
imul
pop
dec
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
inc
stos
icebp
or
test
jecxz
sub
jo
fimull
cmp
add
das
ret
data16
in
jae
and
iret
push
dec
aaa
jecxz
sub
pushf
fwait
cli
mov
or
out
pusha
repz
push
mov
sub
aad
jnp
jle
cs
add
scas
loop
mov
pop
add
jl
clc
lods
dec
or
out
cltd
js
inc
jne
xchg
aas
pop
loop
mov
frstor
clc
jo
inc
xor
xchg
pushf
scas
push
or
aad
in
pop
push
sub
test
dec
sub
enter
dec
xor
adc
aaa
sbb
addr16
jb
test
das
xor
lret
mov
inc
pop
or
ja
icebp
jo
stos
in
sti
add
movsb
mov
inc
push
scas
jae
ss
icebp
fs
push
out
es
incb
sarl
pop
shl
adcl
push
dec
imul
add
sbb
or
cli
fildll
out
fnstcw
xorl
mov
jecxz
pop
outsb
arpl
lcall
cmp
bound
push
add
inc
mov
push
mov
xchg
mov
fsubs
fld
dec
fldenv
xor
es
cmp
inc
fsts
test
les
shll
xchg
inc
jno
mov
mov
stc
xorl
shll
mov
stos
add
int
inc
xor
push
pop
addb
aam
imul
fs
mov
shll
testb
pushf
jge
popa
arpl
jae
mov
rcl
inc
call
sti
out
ret
test
aam
rorb
outsb
cmc
in
pop
fistpll
movb
adc
popf
push
idivl
push
mov
push
xchg
test
cwtl
or
cmpl
xor
cmpsb
loop
fcos
dec
stos
pushf
push
rorl
das
inc
push
lahf
roll
mov
cld
stos
rclb
pop
adc
outsl
test
xor
in
pop
push
sbb
mov
repz
test
ss
mov
or
sbb
dec
push
or
movsl
dec
lcall
imul
stc
xchg
mov
xchg
jne
lcall
xor
out
repz
lahf
add
push
loopne
pop
xchg
ds
or
fstl
jo
data16
inc
fmulp
call
ficoms
cmp
out
jbe
xchg
ret
adc
sahf
cltd
test
xor
ljmp
mov
aad
pop
mov
cmp
es
xchg
divb
loop
insb
cwtl
mov
dec
lds
add
dec
scas
pop
shlb
pop
mov
push
in
add
mov
pop
cmc
insb
inc
inc
call
imul
das
xchg
add
jle
adc
test
push
mov
data16
and
sub
fistps
dec
xor
nop
inc
and
fsubrl
push
add
xor
pop
ss
notb
mov
push
je
cmpsl
adc
dec
sahf
mov
insb
repz
in
gs
or
jbe
ss
mov
add
outsb
pop
add
cmpsb
jb
cmp
xchg
cli
rcl
cltd
xchg
xchg
pushf
jnp
stos
add
outsb
lcall
sub
push
adc
mov
cmp
add
push
out
inc
cmp
filds
and
insb
scas
push
jl
cmc
repz
dec
lret
sbb
es
dec
xor
pop
ja
jnp
mov
mov
out
dec
iret
xor
fnclex
movsl
std
add
dec
in
gs
push
push
dec
xchg
out
lcall
enter
add
or
mov
test
pop
shlb
sbb
cld
stos
pop
push
xor
dec
add
and
repz
mov
mov
xchg
sbb
clc
fnsave
cmp
lret
lcall
dec
push
mov
jp
jge
xor
push
xchg
lret
mov
ds
push
int3
dec
add
cltd
mov
and
imul
or
sti
adc
aas
dec
test
es
lret
xor
push
sbb
subb
out
xor
jae
adc
pushf
outsl
aas
push
fst
stc
add
cmp
dec
xchg
push
imul
faddl
loopne
nop
stos
push
and
inc
mov
es
xlat
xchg
pop
xor
and
push
mov
xchg
xor
xchg
lcall
push
out
or
popa
pop
scas
mov
jno
inc
outsb
fmuls
sub
sbb
sub
jnp
fwait
dec
lea
mov
or
out
mov
lods
popf
sbb
add
sub
in
mov
les
dec
imul
fidivs
ljmp
aad
stc
mov
xor
mov
sti
lods
loope
jl
inc
clc
repnz
fs
repz
jb
push
in
pop
jl
mov
fwait
cmpsb
add
les
mov
cld
cli
test
stos
inc
pop
fdiv
jbe
int
rsqrtps
dec
add
aam
push
xchg
cbtw
pop
sbb
sbb
gs
dec
sub
sbb
int
jecxz
imul
xor
call
sub
inc
add
imul
imull
sbb
int
sar
arpl
loop
push
sti
xchg
jbe
shrl
add
mov
mov
inc
icebp
adc
mov
repz
push
ljmp
pop
jmp
stos
push
aad
pminub
jns
ret
inc
fisttpl
lods
jne
shrb
test
mov
movsl
xchg
mov
loop
je
jg
pop
dec
jmp
loop
jl
movsl
rep
jmp
stos
push
lcall
mov
mov
mov
std
into
testl
repnz
sbb
mov
add
mov
pushf
fwait
dec
out
rep
dec
sub
jbe
mov
xor
mov
pop
fdivs
test
jl
test
jp
repnz
lahf
dec
jecxz
fdivs
stos
in
lods
xchg
adc
dec
pop
xor
lret
fisttpll
push
push
orl
push
iret
dec
adc
sbb
clc
push
pop
mov
mov
and
inc
sub
shlb
pop
js
and
iret
jmp
xchg
data16
pop
stc
in
scas
enter
xor
into
fs
pop
jne
jb
inc
dec
out
insb
pop
dec
call
les
sub
add
sbb
shlb
mov
and
add
mov
jmp
shl
dec
adc
lock
mov
sub
mov
loope
imul
push
mov
jo
dec
mov
test
add
push
inc
movsl
data16
in
pop
mov
mov
cmp
pushf
sub
sbb
fnstsw
jle
aas
cmp
lret
repz
jns
das
pusha
pop
movups
mov
sar
movsb
fisttpl
insl
mov
xchg
ljmp
jne
out
test
or
sub
mov
jae
nop
test
test
lret
in
xchg
mov
add
loopne
jg
mov
lods
inc
iret
icebp
pop
add
dec
pop
inc
sbb
loopne
fldl
sbb
stc
adc
push
mov
mov
icebp
cmp
lock
flds
xor
dec
and
mov
jmp
ds
hlt
mov
stc
or
shl
add
arpl
lahf
mov
pop
dec
shll
lock
lret
pop
test
push
adc
daa
sub
stos
jns
std
sub
dec
enter
cwtl
jnp
mov
je
shlb
inc
notb
test
sub
test
add
stos
scas
int3
xor
mov
outsb
dec
cmp
lods
lock
sbb
pop
jbe
or
test
jge
out
sub
xor
or
jl
enter
je
lret
pop
in
sbb
repnz
imul
out
sub
xchg
inc
clc
cs
xchg
loope
popf
mov
mov
scas
cmp
mull
ss
lret
lods
or
or
adc
and
sahf
pop
mov
add
bound
aaa
mov
mov
ds
pop
push
in
push
pop
sbb
aam
mov
pop
aas
jae
sbb
sbb
movsl
jge
out
sub
into
mov
test
jecxz
xor
orb
test
cltd
fisubs
mov
sbb
push
roll
out
scas
mov
push
xchg
popa
lea
fnsave
dec
in
jno
bound
mov
js
xchg
pop
xor
fs
cmp
out
je
sub
aaa
jmp
out
xor
or
shlb
pop
lret
xchg
movsl
cmc
lock
sub
xchg
loop
pop
sar
mov
aas
stos
ljmp
mov
sub
mov
push
pop
or
rclb
push
xlat
xchg
roll
insl
mov
leave
push
pop
cmp
inc
cli
ret
cwtl
dec
jae
jge
lea
sub
xchg
sti
jp
and
cmp
pop
mov
dec
shlb
int3
shr
rcl
and
call
sub
jne
adc
inc
inc
pop
in
and
xor
push
loope
xchg
dec
push
cmc
and
repnz
jbe
lds
xchg
imul
lods
mov
gs
fstl
lock
pop
shlb
jae
push
sbb
and
ja
add
aas
and
loope
fwait
popl
js
enter
mov
push
iret
ret
pop
test
add
mov
sbb
and
out
cmp
pop
mov
push
clc
lods
dec
mov
jle
mov
gs
inc
sub
push
push
mov
pop
dec
fnsetpm(287
inc
rclb
mov
cmp
and
arpl
sub
mov
scas
adc
dec
xchg
pop
das
aas
int
sti
mov
push
jle
adc
ret
mov
pop
mov
cltd
inc
jae
mov
pop
mov
lods
out
insb
shrl
or
pop
add
sub
popf
mov
or
and
and
movq
xor
arpl
xchg
push
call
jge
inc
mov
jecxz
ljmp
mov
jno
mov
cmp
sbb
push
sbb
jbe
mov
out
test
adc
popf
mov
fimull
insb
repz
push
pop
rcll
mov
and
in
mov
cmp
sub
inc
lret
mov
repz
sbb
add
sub
jae
es
jge
jl
cmp
push
out
setp
dec
add
dec
fisubrl
sub
jns
cltd
xor
ljmp
pop
adc
divb
sahf
outsl
pop
dec
adc
repnz
stos
arpl
pop
lahf
lret
mov
int
push
sbb
mov
lret
lcall
test
arpl
mov
out
dec
inc
mov
in
ret
push
in
in
jp
inc
mov
push
jne
and
mov
in
or
sub
jnp
dec
stos
xchg
or
mov
js
and
pop
xor
outsl
and
in
cs
dec
lds
fistl
inc
or
jmp
and
sbb
in
mov
sub
cmp
mov
cmc
clc
jns
cmpsl
popf
sbb
mov
sti
jle
ds
mov
fisttpl
jp
sub
inc
loope
inc
repz
add
leave
nop
fsts
out
ss
jg
mov
jne
leave
and
lock
or
shlb
xchg
addr16
neg
add
icebp
dec
ret
lods
sbb
mov
call
loopne
mov
sahf
xchg
dec
fisubs
add
mov
int
inc
in
mov
addr16
push
js
psrld
jmp
sbb
insb
and
loopne
ja
jge
cmpsb
push
and
add
mov
out
lods
push
lds
or
push
testl
ret
movsl
ret
ljmp
leave
in
je
cmp
adcl
inc
pop
sarl
xor
jg
out
add
jle
push
or
in
enter
jp
jmp
jne
push
mov
and
into
leave
ret
adc
sbb
push
xchg
rcrb
loope
sbb
clc
pop
mov
add
orb
push
xchg
xchg
cmp
test
mov
pop
mov
jecxz
sbb
enter
mov
mov
test
cmpb
jns
mov
je
adc
push
or
ljmp
adc
and
or
ficompl
xor
xchg
xor
pop
push
dec
lods
cs
dec
fildll
scas
inc
stos
jg
orb
popf
dec
imul
test
addr16
rolb
psubsb
insb
push
sbbb
pop
xchg
sbb
mov
xor
push
or
bound
xor
mov
mul
pop
jae
cmp
dec
or
enter
push
jb
sti
js
stc
jae
je
pop
jnp
push
add
ret
test
jo
push
faddl
jl
pop
jno
mov
dec
outsl
int
mov
mov
inc
cmp
mov
faddl
mov
js
sbb
fs
sub
sahf
inc
loop
pop
shlb
fadds
jbe
test
js
jecxz
enter
push
cmc
jb
xor
insb
jo
imul
scas
push
push
sarb
jg
sub
rcr
add
or
jge
cmp
out
lahf
pop
aaa
ficomps
testl
xchg
sub
or
sub
mov
std
addr16
xor
hlt
push
push
pop
bound
cmp
or
rcll
int3
mov
or
mov
sti
jg
adc
jae
in
icebp
mov
push
dec
mov
add
pop
test
push
je
lock
mov
mov
push
pop
lods
xchg
jns
pop
xchg
cmp
add
ret
repnz
fnstenv
jno
bound
dec
subl
jb
dec
jle
dec
insb
sti
xchg
add
insb
stos
pop
or
lea
fwait
push
aam
out
pushf
scas
push
jb
jb
icebp
adc
push
xor
fimull
or
and
jmp
add
mov
aam
jp
gs
mov
push
stc
push
cmpsl
fwait
push
scas
xchg
ja
mov
jbe
movsl
sbb
fdivs
sub
adc
out
mov
lea
jmp
call
mov
adc
sbb
and
mov
mov
or
xorl
out
outsl
xchg
and
push
sbb
cltd
adc
repz
push
push
scas
jmp
adc
aas
les
je
push
dec
inc
mov
pop
xor
aas
xor
mov
into
mov
daa
shrb
inc
mov
loope
out
cmp
rclb
jo
dec
imul
ds
and
and
inc
leave
arpl
mov
je
imul
jmp
add
cmp
mov
outsb
loope
xchg
pop
cmp
mov
lds
dec
mov
das
inc
fnstenv
aaa
sub
scas
mov
daa
inc
mov
testl
sub
mov
xlat
and
jbe
ret
int
jg
dec
lcall
jbe
inc
rcrb
xchg
mov
xchg
in
add
xor
rorl
into
push
xchg
cs
stos
popa
or
dec
pop
popw
mov
jns
insl
adc
je
int
mov
jbe
sub
sbb
dec
loope
mov
insl
clc
add
push
sbb
subl
in
nop
sub
inc
jae
out
mov
inc
jno
jl
adc
lret
pop
xlat
in
mov
cmp
sub
mov
andb
std
aad
mov
xchg
jo
daa
sbb
pusha
lods
aaa
pop
sbb
ret
jge
arpl
dec
cld
outsl
push
popa
inc
orl
mov
inc
rcl
fwait
adc
cli
aam
mov
sarb
cwtl
mov
xor
sbb
xlat
cld
mov
and
mov
pop
lods
and
push
push
push
imul
pop
push
sbb
pusha
add
ja
mov
xchg
rolb
sbb
inc
mov
test
add
mov
and
popf
sti
dec
and
xchg
hlt
add
adc
lret
out
pop
nop
test
dec
daa
clc
pop
aad
pop
out
and
in
mov
and
pop
push
stos
out
or
in
popf
pop
gs
cmp
in
or
sub
aad
outsb
les
insl
mov
jne
or
push
adc
mov
imul
push
push
xlat
xchg
pop
mov
push
sbb
notl
sbb
adc
std
add
imul
insb
or
mov
jne
pop
popf
xlat
jne
ja
mov
pop
jne
or
sub
and
and
sub
pop
stos
adc
jnp
addl
jne
xor
cmp
scas
or
nop
adc
sub
mov
jnp
push
and
imull
xchg
jnp
jl
sbb
loopne
loop
mov
adc
fldcw
loope
lods
mov
cmp
inc
mov
mov
loopne
and
mov
lea
add
xchg
dec
test
stos
arpl
push
in
adc
movsb
push
rolb
mov
sub
pop
sub
popf
and
add
and
in
enter
outsb
add
jae
adc
cmpb
lods
fsubrs
test
sbb
popa
sbb
and
out
rcr
aaa
mov
jo
insb
xor
and
jne
mov
icebp
fstl
aam
jle
or
sbb
inc
cmpl
lret
imul
push
push
lock
adcb
inc
rcrl
pop
fiadds
lds
in
addl
hlt
sub
mov
mov
dec
jg
xorl
int3
inc
loopne,pt
mov
notl
xchg
jno
and
xor
sbb
decb
cltd
insb
sti
jge
mov
imul
inc
mov
sub
xor
loope
stos
bound
in
scas
sbb
jg
pusha
in
stc
adc
mov
sub
add
out
je
xor
gs
pop
mov
lcall
icebp
sahf
dec
ja
shl
sbb
fcompl
push
cmp
push
loopne
and
push
inc
mov
roll
inc
loope
pop
cmpsb
ss
addb
add
sbb
imul
mov
pop
push
fisttpl
addr16
dec
insb
jno
aaa
js
jecxz
ficoml
mov
xlat
cld
insl
lcall
dec
jecxz
clc
sti
push
in
jg
rolb
scas
adc
pop
cmp
cmp
test
or
push
push
jae
pop
not
idivb
mov
mov
mov
mov
mov
or
push
jnp
dec
xor
in
sub
sbb
scas
lahf
mov
mov
add
sahf
rorl
and
sti
andb
dec
inc
sbbl
xor
mov
cmp
ret
inc
call
idiv
in
icebp
or
shll
adc
add
push
push
lods
cmp
ficoml
fcmovnb
fsubrl
dec
xor
addr16
inc
push
lcall
in
mov
shlb
data16
lret
dec
int3
andb
lods
dec
add
mov
mov
sub
mov
sub
aad
inc
sub
adc
sbb
cmc
sbb
pop
mov
shrl
iret
xchg
out
pop
jl
mov
cmpsl
clc
mov
scas
pushf
enter
dec
call
xchg
mov
adc
mov
sbb
test
push
sub
scas
xchg
dec
loop
bswap
mov
enter
push
mov
xchg
fsubl
dec
mov
into
pop
sbb
jmp
sub
ds
mov
push
xchg
pop
out
push
dec
fwait
es
outsb
mov
rorl
add
mov
pop
pop
lret
sbbl
mov
xchg
or
xchg
rcrb
gs
jle
fstl
in
pop
mov
test
test
es
int3
jp
or
mov
lods
fsubr
inc
push
fyl2x
mov
mov
lods
xchg
pop
enter
inc
rcl
lret
lret
test
test
jl
xchg
mov
jp
sahf
test
loope
xorb
lcall
sbb
push
cli
das
repz
jns
call
and
sub
mov
aas
div
mov
int3
aas
mov
mov
add
inc
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
out
xchg
mov
cmpsb
mov
cld
in
neg
out
push
cmp
sub
sbb
or
jl
insb
jbe
dec
xchg
mov
cmpsb
sti
cmpsb
je
adc
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
into
mov
je
and
mov
dec
les
hlt
jle
push
test
xchg
cs
mov
inc
ficoms
je
add
adc
and
xor
pop
aam
les
push
out
inc
movsb
ds
pop
ficoms
insl
mov
mov
out
push
xchg
sbb
push
lds
insl
repnz
mov
inc
mov
incl
mov
jne
fs
mov
pop
jns
and
and
mov
push
mov
nop
hlt
xor
js
outsl
stc
xor
mov
fistl
adc
push
loope
lock
dec
adc
pop
sti
jno
xchg
xchg
xchg
lods
pop
ds
adc
push
sub
and
aam
jl
lret
mov
add
or
push
imul
mov
popf
jl
mov
fwait
add
je
xor
jecxz
cmc
hlt
pop
in
sahf
sbb
movsb
ds
repnz
es
add
or
scas
mov
sahf
icebp
adc
ljmp
movsb
or
je
outsb
mov
adc
cmp
pop
int3
outsb
std
jle
push
pushf
push
subl
shrb
gs
jp
dec
cmp
lods
cmp
jmp
dec
fnstcw
adc
jno
ja
es
sti
pop
cmp
cmp
stc
idivb
inc
enter
add
fwait
add
push
mov
aam
in
hlt
push
test
xchg
movsb
ds
inc
ficoms
je
add
adc
and
xor
les
outsb
in
hlt
push
test
xchg
movsb
ds
inc
mov
addr16
cmp
dec
fs
outsl
xor
inc
push
add
das
pop
popa
les
jg
lea
lock
notl
fprem1
sbb
xchg
imul
cmp
inc
lret
mov
add
into
in
outsb
cmp
dec
dec
les
xor
dec
add
rcll
insl
js
and
daa
mov
ret
int
and
mov
mov
fisttpll
sub
imul
aaa
pop
mov
test
and
xchg
lahf
ret
fsts
roll
mov
dec
imul
pop
mov
repz
out
sub
and
xorl
or
fs
std
and
shll
gs
fstp
adc
mov
xor
pop
enter
js
or
xchg
push
iret
cmp
adc
bound
into
sub
add
inc
adc
xor
sbb
outsb
mov
jg
imul
stos
addr16
sbb
push
cli
inc
sbb
sbb
dec
cltd
sub
je
aam
adc
and
rcll
jb
or
testb
test
mov
imul
or
adcb
pop
xor
jge
stos
and
sub
xchg
stos
sbb
paddd
test
loop
jbe
sti
cmp
sub
lret
push
lahf
jl
std
and
mov
mov
xchg
jno
dec
dec
pop
mov
dec
fildl
pop
jae
orl
movb
dec
aas
test
jnp
cmp
data16
je
pop
xchg
xchg
jg
mov
fiadds
ret
add
mov
ljmp
or
ss
fidivrl
gs
mov
pop
aaa
nop
xchg
int
fcomip
jns
clc
xchg
mov
adc
stos
mov
sbb
mov
in
in
les
ret
push
loopne
les
int
sub
or
lds
xchg
jecxz
cmp
mov
jp
pop
call
fdivr
adc
sub
or
mov
loope
sbbl
inc
and
repz
decl
in
mov
sbb
loop
jmp
jbe
cmpsl
add
and
jns,pn
aad
ds
push
dec
outsl
pop
sti
sub
out
loopne
mov
and
sbb
insl
dec
stc
cmp
loopne
out
sbb
daa
sub
daa
lret
repz
dec
shl
mov
jl
jo
int3
fbstp
rcr
xor
ja
sbb
fistpl
xor
loope
mov
je
int3
hlt
jne
addr16
orl
sub
push
stc
pop
iret
and
xchg
mov
cs
push
in
in
dec
jecxz
mov
ret
popa
pop
cmpsl
subb
and
cltd
jo
rorl
push
mov
subb
icebp
cmp
js
or
sbb
mov
bound
mov
aam
hlt
push
int
out
mov
xchg
dec
sbb
les
sub
cli
test
stos
add
rcll
or
imul
lds
jo
mov
fistpl
dec
lea
fisubrs
shrb
push
loopne
repz
inc
dec
mov
shrb
out
mov
imulb
inc
daa
imul
pop
pop
pushf
mov
sbb
out
movsb
xchg
nop
out
lock
lcall
into
loopne
dec
cmp
sbb
es
cmpsl
add
inc
adc
and
cmpsb
or
rcll
add
mov
leave
lret
cltd
dec
test
mov
hlt
sbb
js
sbb
xor
pop
inc
movsl
add
mull
test
out
ret
pop
xchg
fwait
rorl
xor
fs
jbe
sub
mov
out
xor
adc
mov
sbb
out
or
lock
loope
pop
les
in
leave
xor
andl
fwait
pop
dec
mov
adc
pop
jne
movsb
adcb
cmp
das
addr16
or
and
adc
aas
and
sbb
cmp
push
in
rcr
repz
jl
and
mov
pop
adc
xchg
and
adc
cmp
jbe
mov
push
outsb
or
lret
mov
xlat
loopne
out
mov
inc
jae,pn
pop
mov
xchg
mov
xchg
dec
sbb
add
inc
fsubs
rcll
pop
mov
or
mov
out
push
sub
mov
adc
rcrb
adc
ss
cld
cmp
jae
stos
mov
out
std
test
icebp
cmp
push
stc
mov
and
jae
xor
jmp
ret
xchg
adc
add
std
xor
dec
dec
inc
jl
sub
test
jecxz
jb
je
xchg
mov
xchg
out
insb
lds
jmp
dec
andb
sbbl
lret
fistpll
out
sahf
push
sbb
cli
pop
in
adc
fwait
cltd
mov
in
movsb
cmp
and
sbb
jecxz
inc
dec
mov
jg
push
enter
hlt
stc
mov
cld
mov
mov
test
dec
popa
sbb
shll
iret
pop
pop
scas
adc
movsb
push
imul
bound
jo,pn
aaa
iret
aas
das
or
mov
xor
addr16
xor
xchg
fldcw
jo
stos
rclb
mov
movsb
mov
pop
scas
mov
push
cs
add
cli
call
or
fistpl
push
xor
add
adc
dec
outsl
jae
int3
mov
cmpl
in
dec
movsb
adc
popf
push
pop
add
add
adc
push
jmp
lds
fstpt
mov
xchg
xor
js
add
push
call
push
inc
mov
jmp
dec
popa
and
or
jns
sarb
cmp
xor
fistps
xchg
test
xchg
testb
add
in
movaps
aaa
loopne
xchg
inc
xor
aaa
hlt
shll
aam
xor
test
or
cmp
jp
and
pushf
xchg
jb
jmp
jp
jae
cmp
outsl
stc
mov
ficompl
addr16
int3
cmp
les
push
das
pop
dec
mov
xor
and
jl
cwtl
push
cmp
clc
xchg
cmp
pop
outsb
mov
cmpsb
pop
aaa
inc
lds
or
lock
loope
and
mov
add
cli
fcmovb
or
lds
ds
add
jno
jl
test
add
inc
outsb
loopne
outsb
push
mov
mov
add
and
in
jbe
ja
dec
popa
in
movsb
addr16
xor
int
push
subl
inc
push
push
jbe
sbb
stos
and
cli
pop
and
mov
ror
mov
and
adc
xor
in
and
mov
test
ret
testl
and
mov
lea
sub
sub
cmp
in
lcall
in
pop
dec
push
adc
pop
insl
and
jl
or
stc
fisttpll
mov
roll
add
xor
imul
mov
movsl
bound
jo
imul
mov
sbb
adc
movsb
lds
mov
xchg
out
xchg
ret
fists
sub
mov
divb
xchg
and
lods
mov
inc
or
scas
cmp
xchg
pop
jb
adc
and
pusha
fwait
sub
mov
pop
jl
sbb
dec
xchg
fstpl
icebp
mov
jp
addr16
pusha
pop
cld
push
adcl
cmpsb
jp
mov
sub
les
xlat
out
pop
js
cmc
add
jno
adc
dec
test
test
in
ja
in
inc
ret
or
lret
into
lods
scas
cli
dec
pop
fcomp
and
ds
arpl
or
cmc
fsubr
mov
aam
mov
ficomps
lahf
mov
cmp
or
in
xor
cltd
cmp
aam
adc
pop
xchg
popa
sub
mov
pop
mov
push
jne
fxch
and
std
and
pop
and
xchg
mov
add
inc
lods
shrb
pop
cmc
fucom
sbb
out
xor
shll
inc
add
scas
sbb
pop
cwtl
xchg
in
jge
lret
ficomps
jecxz
int
ficoms
stc
mov
jb
ljmp
test
aaa
pop
in
dec
jnp
subl
push
or
mov
cmp
mov
xor
test
mov
xchg
sub
dec
mov
mov
xchg
enter
cli
stc
in
adc
je
dec
xor
xor
fabs
into
js
int3
push
and
push
cwtl
push
subl
xlat
jecxz
cmpsb
mov
pop
cmp
pop
mov
inc
jne
sti
mov
or
sbb
xor
push
mov
stos
inc
cwtl
gs
pminsw
insl
mov
xor
add
test
stc
outsb
lcall
cld
add
ffree
je
imul
outsb
inc
shlb
jb
xchg
adc
xor
sbb
popf
jp
fsubs
fucomip
jmp
adc
aas
push
sub
ret
out
lods
movd
insb
jl
into
jp,pt
test
iret
addr16
cmp
insb
fists
cs
loope
inc
jp
mov
out
aam
inc
jo
push
mov
push
ret
mov
lret
push
and
loopne
push
pop
out
dec
cmc
adc
fwait
jl
inc
mov
pop
loope
subb
or
dec
jns
aam
adc
mov
mov
mov
aas
sti
jnp
push
ja
xchg
inc
cmp
insb
or
cli
fwait
mov
mov
xlat
rcll
mov
cmp
in
mov
mov
subl
mov
out
xor
imulb
push
stc
aam
and
adc
mov
out
inc
push
cltd
jbe
test
test
jno
adc
gs
imul
faddp
jae
insb
jmp
out
sub
loope
ret
cmpsb
push
pop
xchg
lds
xor
sbb
xchg
gs
repnz
lcall
mov
bound
push
push
test
cmpsl
pop
mov
lcall
scas
in
je
inc
sbb
addr16
lret
test
sti
movsl
cmpsl
dec
loope
xchg
movsb
movsb
lods
pop
imul
or
inc
sub
ror
xlat
fdivrs
fimuls
out
adc
icebp
xchg
in
popa
iret
and
outsl
repz
lods
inc
mov
js
sbb
ss
sub
mov
in
mov
xor
adc
gs
sahf
xor
aam
adc
mov
push
xchg
in
enter
subl
jo
adc
int3
xor
popf
int3
ds
imul
out
pop
mov
lahf
pop
sbb
sub
stos
iret
movb
loop
mov
push
xchg
xchg
pop
bound
pop
int3
mov
mov
test
xor
pop
aas
out
cmp
pop
les
add
iret
adc
jmp
mov
xchg
fcomi
add
push
mov
loopne
ret
push
popf
add
addr16
movsl
mov
loop
xchg
data16
add
cmp
pop
cmp
es
mov
adc
or
shl
cmpsb
pushf
cmp
sti
movsb
adc
cmp
pop
jp
das
aaa
aad
leave
sub
cmp
daa
enter
xchg
xchg
xchg
sub
pop
enter
stos
das
mov
fadd
dec
addr16
add
ja
mov
notl
fists
jne
or
push
mov
lahf
cmpsb
cmc
popa
and
mov
cwtl
cmp
cmp
dec
pop
xlat
mov
mov
sub
lock
push
adc
stos
leave
negb
xchg
add
stc
and
leave
cmpsb
cli
lcall
xor
mov
dec
mov
pushf
popf
cmp
lcall
add
mov
mov
xor
rcll
decl
or
xor
fimull
cli
add
sbb
cmc
cmp
cmpsb
dec
mov
xor
and
or
xlat
xchg
xchg
cs
lret
push
jne
or
sbb
mov
pop
shlb
fcompl
pushf
stos
clc
testl
cmpsl
std
js
enter
imul
mov
mov
push
dec
imul
fistpl
sub
fstl
dec
es
gs
cmp
jg
push
jecxz
jae
and
jo
push
push
or
adc
loope
repnz
rcr
inc
cmpsl
hlt
mov
mov
xchg
and
ficompl
pop
mov
jl
loope
mov
jno
xchg
mov
adc
dec
test
cli
jecxz
faddp
mov
pop
icebp
or
test
in
ret
mov
xchg
out
or
adc
into
fnsave
jo
fcmovne
nop
add
mov
sbbb
or
cmp
sbb
shll
or
sub
jp
fiadds
xor
ljmp
xchg
or
mov
stos
jbe
push
and
mov
sbb
pop
adc
mov
push
adc
je
xchg
fwait
push
cmp
pop
rolb
jecxz
or
mov
jae
data16
or
xor
sub
pop
iret
daa
adc
fdiv
pusha
xchg
sub
psubb
pop
sbb
xchg
push
push
and
dec
popa
add
pusha
jb
dec
sbb
xor
pop
fwait
mov
add
pop
mov
add
mov
sub
aaa
fcoml
inc
adc
jmp
jge
pop
sbb
outsl
es
push
shlb
ljmp
push
xor
and
mov
pop
xor
test
sub
xor
xor
pop
hlt
xor
jmp
into
imul
subl
add
js
sub
lret
iret
negl
mov
xlat
push
or
ret
fcmovbe
aad
out
xor
and
and
fwait
sbb
lods
pop
mov
xchg
push
jnp,pt
or
dec
insb
in
faddp
lret
shll
mov
xchg
ss
outsl
sti
sub
cld
stos
or
dec
mov
leave
ja
jl
xlat
outsb
push
or
das
mov
pop
stc
pop
ljmp
push
movl
jne
add
mov
inc
mov
add
nop
bound
nop
xchg
xchg
or
push
mulb
push
out
bound
clc
out
addb
mov
setge
bound
pop
pop
jp
repz
mul
test
xchg
mov
clc
mov
cmpsl
mov
adc
dec
add
pop
in
jb
push
out
cli
cmp
xchg
lcall
in
xchg
jns
xor
aas
jnp
sub
push
aad
fs
insb
mov
fucomip
fldl
push
lcall
pop
je
dec
sar
inc
inc
clc
or
cmp
icebp
jb
into
pop
rcll
or
jge
inc
mov
mov
lcall
mov
sti
mov
lock
repnz
pop
out
rclb
outsb
popf
ds
adc
clc
repnz
test
xor
fisubrs
popf
mov
xchg
test
xchg
aad
cmpsb
push
mov
insl
or
mov
mov
sub
push
sub
mov
inc
rorb
add
std
dec
test
nop
sbb
hlt
popa
push
in
sbbb
rcrb
fcmovbe
shl
mov
movsl
in
pop
mov
jecxz
add
cmpsb
xchg
dec
push
mov
std
shl
inc
daa
ljmp
out
pushf
xchg
je
dec
or
xabort
mov
xor
push
les
pop
xchg
sub
dec
std
push
cmp
outsb
in
stc
nop
lods
das
cmpsb
adcl
xchg
outsb
adc
push
add
imul
pop
shlb
and
jno
dec
jle
jmp
and
mov
dec
inc
lds
bound
lea
and
repz
pop
dec
adc
jno
xchg
pop
rclb
in
dec
cmp
psubd
or
cmpl
and
dec
lahf
xchg
add
dec
mov
dec
mov
std
mov
inc
cmpsl
fwait
pop
in
ljmp
out
and
sub
shll
and
mov
lret
je
andb
add
mov
pop
icebp
jno
xchg
movsb
mov
fnstsw
ffreep
mov
fdivrs
cs
adc
pop
in
xchg
mov
cmp
enter
cmpsl
cmpsl
sub
fwait
pusha
lcall
pop
imul
dec
cmp
xchg
ret
dec
and
rorl
add
shlb
xchg
aaa
out
push
adc
mov
fists
std
shrl
cmp
push
testl
jmp
mov
mov
push
adc
movsb
cmp
cld
loope
mov
inc
imul
sbb
cmp
mov
mov
mov
push
imul
sbb
icebp
repnz
out
jle
or
orl
stc
jbe
push
sub
xlat
inc
fdivr
sarl
and
leave
fisttpl
scas
add
shrl
sbb
ja
les
xor
jne
fs
out
cltd
mov
bnd
add
inc
ss
or
push
ss
repz
mov
adc
adc
out
adc
mov
pop
pop
into
push
dec
and
fnstsw
jmp
into
add
add
mov
jns
addr16
icebp
mov
mov
xchg
imul
in
fistpll
inc
fmul
xlat
push
shrl
stos
xchg
inc
arpl
and
mov
js
out
mov
and
in
mov
jno
dec
dec
cmpsb
fsubrl
jnp
jb
sbb
cwtl
int
mov
adc
pop
scas
cmp
adc
jnp
call
fwait
sbb
pop
push
popf
xchg
pop
mov
mov
inc
inc
lcall
cwtl
movl
pushf
mov
and
mov
xchg
addr16
in
repz
aas
stos
mov
cmp
das
insl
mov
pop
push
out
mov
jne
jecxz
int3
adcb
push
test
xor
dec
repnz
jg
dec
int3
pop
xchg
sbb
xchg
out
xchg
adc
ss
lods
push
mov
int3
mov
xor
lahf
fstp
arpl
or
mov
fldl
lock
aaa
out
or
mov
mov
lret
jp
mov
jmp
sub
dec
adc
js
jecxz
pop
leave
dec
insl
inc
int
aad
cmp
out
jnp
jno
push
rolb
aas
pop
in
jb
mov
in
mov
shll
push
xchg
sub
in
inc
pop
sbb
mov
pop
ja
das
popa
sub
fstps
shlb
lret
fwait
inc
outsb
mov
sub
dec
dec
insb
cmp
and
jmp
cmp
and
add
jle
push
ret
mov
lods
loopne
pop
xor
js
daa
jmp
sbb
adc
xor
in
mov
mov
xchg
ret
lods
dec
sahf
mov
test
mov
std
jmp
xchg
jb
mov
mov
push
mov
shll
sub
hlt
adc
push
clc
cmp
popl
sbb
and
xchg
fsubrl
dec
int
ficoms
inc
pushf
dec
dec
mov
jle
mov
xorl
and
ljmp
in
xchg
incl
in
and
movsl
call
subl
call
addl
stc
mov
add
inc
cmc
mov
dec
je
bound
pop
dec
jg
mov
mov
xchg
and
add
test
pop
push
pop
faddl
stc
mov
cmp
outsb
lret
aad
std
testb
out
adc
sbb
inc
hlt
lea
icebp
add
cmp
pop
dec
add
xlat
out
mov
ja
pushf
sub
mov
sub
shr
mov
push
int3
mov
out
mov
or
adc
adc
imul
popa
add
les
sbb
sar
mov
roll
lret
in
fstpt
arpl
mov
or
stc
fcomps
jo
in
imul
and
mov
addb
jns
xchg
mov
shl
ss
push
lock
fdivs
push
or
mov
and
dec
pop
xor
mov
ds
fcomps
test
nopl
cmp
sbb
sbb
int3
mov
pop
addr16
adc
shrb
mov
int
rorb
add
jne
pushf
jp
lret
add
xor
inc
outsb
jecxz
push
pop
mov
fwait
out
sub
sub
movsb
int3
sub
outsb
pop
mov
xchg
xor
fnstenv
sbb
subb
lods
inc
sub
sub
pop
pop
mov
stos
pop
push
clc
mov
imul
xor
mov
jno
shrl
je
add
adc
and
xor
les
outsb
in
hlt
push
test
xchg
movsb
ds
inc
ficoms
je
add
adc
and
xor
les
outsb
in
hlt
push
test
xchg
movsb
ds
inc
ficoms
je
add
adc
and
xor
les
outsb
in
cmc
push
test
xchg
das
movsl
ds
inc
ficoms
je
add
adc
and
xor
les
cmpl
imul
dec
rclb
push
clc
enter
gs
inc
int3
push
cwtl
ret
js
dec
repnz
subl
cmp
call
jb
add
xor
ret
pop
orl
addb
mov
jp
clc
bound
fiaddl
xchg
adc
mov
sbb
jg
push
cmpb
call
and
fsts
ret
mov
mov
dec
cmp
arpl
jmp
add
inc
fidivl
and
jg
insl
sti
stos
or
jmp
adc
push
sti
cwtl
subb
cmp
lds
cmp
enter
sub
inc
fcomps
rol
jae
rclb
jecxz
sbb
loopne
dec
mov
fwait
addr16
ljmp
cwtl
stos
cmp
pop
sarl
cmp
sbb
mov
fincstp
loop
out
fidivrl
fcmove
hlt
fs
mov
inc
imulb
xchg
mov
call
jb
add
xor
ret
mov
addb
mov
mov
cmp
inc
fdivl
gs
std
stos
cs
cmp
testb
iret
dec
jns
lods
adc
addr16
jbe
and
dec
hlt
nop
or
xchg
aas
leave
js
je
imul
mov
and
sarb
dec
repnz
subb
cmp
call
jb
add
xor
loop
repnz
subb
cmp
call
and
jno
xor
js
push
adc
jp
daa
cwtl
sbb
pushf
xchg
mov
fs
inc
or
clc
xor
fistps
pop
loope
test
daa
xchg
fsubrs
ss
test
in
mov
rorl
sarl
add
lret
mov
addr16
mov
xor
leave
iret
xlat
movsl
mov
addl
repnz
cli
xchg
mov
les
invd
pop
dec
subb
nop
mov
lock
lock
rorl
jno
shlb
popf
mov
movswl
dec
pop
push
out
cmpsl
repz
fmuls
pop
adc
xchg
leave
push
mov
push
mov
repz
test
mov
sub
pop
hlt
movsl
jne
push
pop
jmp
daa
fcoms
dec
mov
sbb
mov
cmp
repnz
loope
sub
cmp
movsb
aaa
fidivs
std
xlat
mov
cwtl
sub
xlat
or
les
lds
fsts
aad
pop
xchg
notb
adc
mov
sbb
mov
sbb
fs
mov
cmpsl
xor
xor
jp
shrd
lcall
mov
pop
mov
std
cmp
push
inc
adc
int
test
sub
jmp
neg
outsb
ss
sbb
lea
inc
lea
movsb
add
inc
out
test
test
jmp
aaa
ds
sbb
jns
cli
xchg
call
cld
pop
packuswb
or
pop
pushl
enter
mov
or
inc
jl
and
inc
xchg
mov
cmp
addr16
in
ljmp
clc
out
fxch
or
repz
in
cmp
inc
ret
aaa
cmpsl
lea
imul
jge
call
pop
out
lods
pop
loope
outsb
jae
pop
int3
pop
insl
fbld
jge
cmp
lods
jp
cwtl
mov
aaa
enter
sub
arpl
scas
rcrb
popa
imul
popf
mov
fistl
lea
or
fsubl
dec
fcomps
hlt
or
mov
adcb
xor
call
fcoms
sbb
sbb
jbe
es
fsubp
call
cmpl
mov
push
nop
cmp
and
xlat
pop
ljmp
mov
pop
rcr
fldenv
scas
sbb
stos
shlb
push
les
pop
jno
pop
sub
std
scas
dec
imul
cwtl
push
fbstp
inc
dec
jecxz
mov
int3
mov
mov
jge
sub
xchg
sbb
int3
jg
gs
push
pop
and
outsl
inc
repnz
popa
xor
inc
stos
jge
jno
mov
loope
flds
iret
pop
jge
xchg
mov
movsb
pop
stos
in
leave
adc
ret
xchg
js
sahf
stos
xchg
js
add
xchg
leave
pop
call
mov
out
hlt
mov
xchg
inc
sti
shlb
lea
and
cmp
mov
cmp
out
lds
add
fistl
dec
sar
and
push
adc
push
cli
sbb
das
lock
aaa
push
into
xchg
ror
sub
add
or
jno
or
push
js
lods
sbb
data16
fucomp
fisttpl
push
add
mov
movlhps
repz
adc
cltd
frstor
add
icebp
sub
xchg
inc
xchg
mov
mov
and
cs
inc
stc
lret
add
mov
cs
xlat
xchg
jge
popa
dec
prefetch
ss
in
movsb
pusha
jp
sbb
dec
jecxz
ret
dec
outsl
js
ret
aam
pop
sub
sbb
cmpsl
movsb
pop
jg
pushf
aas
es
push
sub
add
inc
xorb
fcmovne
push
mov
fsubrs
and
inc
fwait
pop
mov
or
cmp
jg
data16
mov
cmpl
rol
adc
mov
xchg
stos
inc
decl
loop
jmp
inc
inc
popa
inc
inc
fs
mov
sbb
sarb
xor
sub
and
mov
rcrb
mov
mov
lret
mov
mov
movsb
mov
fidivs
and
add
fnstenv
xor
pop
je
movsb
cmp
and
call
xor
or
and
sbb
jmp
mull
les
sarb
mov
test
outsb
scas
movsl
mov
sub
xor
test
stos
inc
into
es
out
push
mov
jmp
mov
es
push
outsb
fistpll
mov
mov
mov
pop
jne
jno
lret
jp
jae
leave
les
push
mov
jmp
icebp
popa
adc
lret
push
popa
pop
dec
and
arpl
addr16
fwait
mov
idivb
cmp
inc
push
jmp
sbb
dec
cli
mov
das
popa
sub
dec
pop
cmpsl
stc
xchg
fwait
in
lea
jecxz
jns
mov
and
roll
jg
push
or
jnp
cmpsl
je
push
and
cmp
imul
scas
les
cmp
mov
out
mov
iret
bndstx
test
mov
mov
or
repz
pop
imul
jb
gs
mov
inc
sbbl
ror
mov
rclb
ja
hlt
add
jae
inc
push
iret
sub
lahf
adc
aaa
shll
mov
inc
push
scas
jecxz
test
lahf
popa
lret
ret
mov
sti
push
sbb
insl
mov
push
dec
icebp
pushf
cmpsl
or
mov
aam
dec
jbe
fists
popa
out
sar
push
sbb
dec
mov
jns
fldcw
mov
jmp
cltd
inc
int3
push
mov
xor
scas
mov
mov
cmp
xchg
rol
es
pop
mov
mov
dec
inc
fidivrs
cmp
and
cltd
sub
lds
movsl
jp
cld
xchg
loopne
aas
pop
inc
repnz
dec
or
mulb
push
pop
and
mov
fildl
loope
add
push
cltd
adc
loopne
je
fistl
mov
insb
popl
in
imul
lret
sarl
pop
gs
fsubs
inc
insb
jg
xor
faddl
add
mov
inc
or
loopne
mov
pop
push
cmpsb
arpl
and
or
imul
jle
push
lahf
mov
leave
pop
lds
ret
aaa
jne
jecxz
cmpb
dec
xlat
sbb
push
inc
push
outsl
jno
inc
or
adc
push
test
xor
in
sbb
scas
push
push
adc
mov
cmp
or
shll
jmp
push
movsl
xor
mov
shlb
xchg
dec
adc
xlat
mov
and
xor
and
push
lret
insb
into
sbbb
std
sbb
iret
push
idiv
jp
add
movsb
mov
test
mov
cli
sbb
lahf
js
nop
xor
ret
adc
shlb
movsl
jne
jmp
hlt
jle
add
jecxz
imul
iret
mov
ljmp
cmpsl
inc
sub
in
punpckhbw
cmp
cmp
outsl
addr16
js
and
jne
stc
dec
cmp
sub
sbb
cli
scas
add
sahf
pop
jbe
sbb
out
mov
xchg
cmp
sbb
test
jbe
cmp
in
out
jg
pop
jo
push
aas
inc
inc
adc
push
jg
push
pop
sbb
xchg
lods
repnz
ficoms
fwait
jle
frstor
and
xchg
hlt
sub
shrb
xchg
mov
repnz
push
icebp
aas
sahf
inc
arpl
mov
mov
mov
rcll
cmp
dec
cmc
mov
or
rolb
mov
jnp
test
jno
mov
rcrl
call
scas
je
int3
xor
add
sbb
push
mov
inc
int
movsl
jnp
movsl
ss
flds
inc
mov
ret
cwtl
xor
mov
mov
dec
dec
pop
sbb
les
nop
daa
jno
fcoml
adc
lods
ds
dec
cmpsb
sbb
xor
mov
add
push
andl
fsubp
fwait
popf
xchg
test
or
adc
jmp
cmpsb
sarb
xchg
adc
xchg
xor
movsl
mov
inc
jo
and
push
fs
jb
or
add
jbe
fbstp
add
jp
lret
cmp
or
cld
jb
xchg
dec
hlt
mov
scas
cmp
orl
imul
sub
or
cmp
insb
push
in
sbb
xor
enter
fwait
stos
cmp
and
loopne
pop
adc
loope
xchg
mov
mov
lahf
test
xchg
xchg
jnp
xchg
dec
icebp
sub
mov
pop
push
cld
incb
roll
cli
in
jbe
push
mov
mov
lcall
loope
or
scas
pop
or
dec
inc
pop
push
lret
sub
test
in
xor
xchg
iret
xor
jecxz
ret
stos
mov
aaa
cmc
xor
ret
nop
stc
xor
cli
call
mul
aas
dec
pusha
cltd
push
pop
mul
jnp
enter
xorb
pop
mov
mov
stos
jge
mov
cmpsl
sbb
mov
shll
arpl
fwait
ret
push
out
jge
mov
xor
out
inc
out
testl
sbb
push
cmp
idivb
sub
fidivrl
sub
add
in
xchg
pop
pop
out
jo
lea
mov
inc
outsl
ret
adc
addr16
fidivrs
je
jb
mov
sub
jmp
jns
bound
dec
mov
dec
xlat
or
popf
pop
and
fisttpll
pop
sub
test
rorl
mov
stc
lahf
mov
adc
imul
fnstcw
sar
sub
aad
mov
icebp
pop
push
mov
xor
into
cwtl
gs
inc
or
xlat
inc
or
dec
add
adc
pop
gs
inc
sti
das
mov
pop
fcomps
cmpsl
push
xor
sti
sbb
es
ss
out
push
add
xchg
pushf
fnstcw
in
push
xchg
add
rol
and
mov
xchg
ja
std
ds
cmp
dec
pop
inc
sub
addl
xchg
cmpsl
fcompl
or
cltd
je
mov
inc
sub
mov
jg
je
sbb
out
pushf
lods
mov
pop
or
pop
add
sbb
and
add
cld
mov
jle
mov
stos
les
push
divl
pop
test
lock
call
mov
rolb
mov
into
cmp
ljmp
pop
stc
xor
cmp
dec
mov
push
jmp
cwtl
in
mov
push
gs
cli
xchg
mov
iret
fisttpl
cmpsb
mov
inc
mov
clc
push
pop
fstpt
adc
or
xchg
xchg
dec
mov
push
mov
jae
mov
lock
jp
call
sbb
xchg
pop
and
les
shlb
push
jb
jns
bound
lds
lret
int
bound
dec
mov
push
push
andb
movsb
ficomps
test
lahf
int
cwtl
movl
pop
es
inc
sbb
xchg
xchg
lock
aas
imul
sub
fdecstp
pop
adc
sbb
aaa
mov
ja
rcrb
jns
sbb
jno
sahf
into
in
cmp
addr16
icebp
fisttps
outsb
jne
mov
orb
iret
sarb
div
std
xchg
fwait
jmp
lahf
jne
inc
dec
jbe
das
push
or
cmp
ret
ljmp
cmpsl
jo
add
pushf
xor
daa
sbbl
fs
push
and
imull
cltd
mov
mov
sbb
sub
jmp
test
idivl
add
dec
dec
cmp
addr16
popa
xchg
mov
lahf
mov
cmp
fiadds
mov
dec
out
push
out
lcall
push
inc
cmp
call
sub
addr16
and
jge
andb
xchg
adc
scas
dec
pop
xorl
insb
je
notb
jmp
push
and
push
mov
shrb
gs
ss
icebp
push
jge
popa
bound
push
mov
lods
jg
fistpll
roll
sbb
cmpb
loop
mov
pop
das
in
inc
mov
popa
mov
sub
jle
pop
mov
xor
pop
inc
inc
mov
faddp
adc
popf
movsl
cltd
jb
jge
inc
nop
pop
pop
shll
dec
es
push
mov
mov
mov
loope
sbb
or
pop
sub
mov
loope
mov
bound
sbb
xor
dec
pusha
enter
test
or
stc
aad
sbb
or
mov
push
xchg
scas
adc
in
or
outsl
mov
jmp
clc
sbb
les
add
cmp
repnz
icebp
pop
jno
mov
in
mov
bound
insl
int3
inc
gs
nop
iret
mov
xor
roll
loop
add
pop
hlt
leave
fldenv
sbb
data16
fisubl
mov
jle
nop
lea
or
sub
add
pop
xlat
jecxz
pop
lods
dec
mul
lahf
push
rcrb
push
popa
stos
mov
xor
pop
lods
sahf
insl
movl
andl
pop
movsl
or
iret
cmp
ret
call
movsl
mov
stos
mov
push
cmpsb
movsl
call
or
shr
pushf
shll
xchg
mov
inc
cmp
into
jo
or
mov
mov
mov
add
dec
popl
mov
cld
push
stc
jb
or
push
sti
cmc
insl
xor
dec
adc
sbbb
push
adc
fs
mov
popf
mov
mov
pop
sbb
add
stc
idivl
cmpsb
jmp
bound
loope
in
jge
pop
mov
xor
mov
loop
mov
mov
mov
stos
das
jmp
sbb
int
jecxz
push
mov
dec
repnz
fwait
lods
int3
loope
xchg
outsb
jns
xor
in
push
jmp
push
loopne
movsb
dec
sbb
jns
xorb
je
jg
xchg
popf
lods
push
lret
jg
repz
adc
fwait
lret
mov
iret
dec
mov
imul
jbe
andb
in
dec
pop
xlat
cs
lods
mov
pop
adc
mov
mov
je
cmp
mov
pushf
into
pusha
faddl
sub
mov
push
jge
scas
push
jmp
dec
sub
jnp
xchg
ds
pop
add
xchg
enter
popa
mov
mov
sub
mov
je
add
roll
cld
xchg
xchg
or
adc
rcl
and
xlat
das
pop
fwait
push
sbb
mov
insl
sbb
pusha
xor
add
xor
lea
mov
fdiv
adc
or
enter
addr16
lret
mov
cmp
adc
repnz
cltd
inc
dec
mov
or
xor
add
mov
xchg
pop
loope
adc
inc
jecxz
test
ret
mov
lock
sti
insb
xchg
inc
stos
dec
jp
negl
inc
daa
xorl
dec
mov
lret
out
sbb
sub
test
adc
loop
adc
fdivl
or
movsb
and
sbb
hlt
jg
sub
cmp
shll
adc
cli
mov
mov
inc
or
cmp
imul
xor
std
out
sahf
add
mov
pop
cwtl
orb
xor
outsb
adc
and
aas
loopne
jo
fimull
adc
cmc
cmp
fdivrs
mov
inc
fsubs
arpl
pop
jp
mov
pop
fwait
push
inc
adc
mov
inc
sub
lret
inc
xchg
stc
ljmp
xor
jnp
loop
mov
jo
hlt
push
add
jae
mov
xchg
lock
mov
jmp
testl
sub
xchg
add
dec
push
movb
mov
add
xchg
lahf
push
out
push
xor
iret
mov
out
cmp
loope
sub
jne
cmp
gs
ljmp
in
and
outsb
adc
mov
cmp
rcrb
or
and
cltd
sub
xor
jecxz
mov
jmp
pop
jo
dec
arpl
sbb
mov
fadds
inc
fwait
ret
mov
insb
rcr
or
std
les
inc
shlb
push
outsb
cmpsb
out
lcall
stos
addr16
incl
fsubs
clc
or
mov
xor
dec
out
mov
jg
xchg
imul
mov
dec
repz
mov
fsubl
cli
jnp
std
lret
adc
sub
or
mov
out
xor
jg
sub
clc
enter
aas
shr
lahf
push
sbb
cltd
sbb
daa
xchg
jmp
mov
cmpsb
int3
sub
dec
imulb
pop
mov
loop
pop
in
xchg
std
out
cs
in
push
sub
shll
pop
jp
xchg
add
mov
lock
cs
lods
push
fstp
shr
xor
pushf
xor
cmp
fstl
leave
imul
and
mov
xchg
cmp
sub
xchg
xor
repz
xor
test
clc
arpl
xchg
pop
repnz
jno
fcoml
repz
xchg
pop
add
jl
subb
addr16
pop
jo
lock
mov
pop
sbb
rolb
dec
lods
inc
ss
fwait
lret
cmp
jae
and
insl
enter
insl
insl
mov
pop
mov
adc
push
jg
and
scas
daa
and
push
mov
ficoms
or
dec
jae
scas
sbb
xchg
dec
jnp
inc
and
fdivl
and
fsts
mov
mov
inc
aam
into
rcll
cmc
adc
shl
aam
sbb
shll
push
sbb
and
xor
imul
mov
and
mov
in
out
jmp
or
js
aas
mov
sbb
repz
fdivr
xchg
push
mov
aas
inc
mov
sbb
pop
mov
decl
cld
inc
xor
andl
xchg
jbe
pop
and
into
movsb
inc
pop
mov
in
mov
jg
out
ret
aaa
call
lock
lret
arpl
lret
pop
out
mov
popa
les
sbb
adc
push
push
scas
shl
jg
jns
mov
ja
loopne
push
cmp
push
push
push
dec
mov
inc
dec
xchg
outsl
subl
mov
mov
inc
cmp
test
das
arpl
popf
ret
jecxz
out
dec
lods
rol
xchg
repnz
sbbb
rcll
lret
div
sub
dec
lea
dec
mov
enter
xor
pop
iret
repz
xor
pop
pop
mov
pop
je
sbb
or
mov
insl
xor
cmc
mov
shlb
shr
sbb
das
push
daa
mov
out
xor
aam
popf
fisttps
push
addr16
out
push
mov
out
sub
sub
mov
adc
in
scas
std
nop
stos
jae
mov
adc
jle
mov
mov
je
inc
jnp
lods
ficompl
jle
xchg
sahf
jns
mov
sub
adc
and
and
fdivl
enter
mov
std
jno
dec
xchg
pop
out
xchg
js
xchg
xchg
shrb
or
sub
xchg
sbb
vmwrite
xchg
out
xchg
out
es
in
adcb
jl
jg
mov
fisttpll
xlat
out
mov
xchg
leave
xchg
test
lcall
sub
hlt
ds
ljmp
cmpsb
pusha
cmp
jmp
push
imul
in
mov
lds
mov
out
xor
repz
dec
pop
mov
out
jge
movsl
testl
scas
int
out
lcall
gs
xchg
lods
push
cmpsl
pop
rcr
rclb
outsb
or
pusha
test
mov
pushf
xor
mov
je
xor
lahf
dec
inc
and
dec
lods
sub
out
mov
popa
xor
jle
fcompl
inc
jne
jecxz
nop
test
in
cld
int3
xor
cmp
pusha
iret
fs
outsb
jl
pop
fwait
dec
popa
mov
pop
mov
data16
mov
iret
cmc
push
adc
sbb
rcl
std
fsubs
or
into
cmp
jge
les
jg
stos
add
fmull
sub
mov
ret
js
dec
repnz
subb
cmp
call
jb
add
xor
loop
repnz
subb
cmp
call
jb
add
xor
loop
repnz
subb
cmp
call
jb
add
xor
dec
dec
repnz
cmc
mov
dec
out
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
into
ja
ljmp
lret
mov
sahf
jle
outsl
jp
maskmovq
idivl
sub
cmp
lret
ljmp
mov
dec
dec
pop
push
bound
pop
and
sbb
sub
cmp
jo
mov
mov
and
or
or
pop
push
jl
pop
pop
pop
sahf
mov
fwait
mov
test
arpl
rorl
in
rorb
jp
push
jno
leave
cwtl
sbb
sahf
add
jo
xchg
push
sub
mov
cmpsb
adcb
inc
mov
mov
outsl
or
data16
arpl
pop
xchg
loope
dec
mov
subb
loopne
and
jo
lcall
cli
sahf
sahf
jo
mov
iret
sbb
outsl
xchg
nop
jnp
pop
or
inc
pop
sbb
daa
add
das
add
sti
imul
lahf
imul
mov
pusha
movq
mov
xor
dec
sub
lds
cmp
push
mov
jle
outsl
adc
aas
push
in
inc
iret
cli
lcall
lret
lcall
cmpsl
push
adc
aas
xor
lods
lret
mov
das
cli
imull
push
sub
iret
push
sbb
popa
jne
pop
push
pushf
mov
fsubr
enter
mov
push
das
sbb
add
inc
push
dec
dec
outsb
dec
lods
mov
scas
xchg
fcmovb
lcall
dec
pop
jg
outsl
jp
or
sbb
sub
cmp
lret
ljmp
mov
dec
dec
pop
jg
outsl
jp
or
sbb
sub
cmp
lret
push
xchg
mov
shr
out
sbb
mov
xchg
jb
mov
jecxz
ret
fdivrs
ljmp
out
or
cmc
push
jo
outsb
repnz
cmc
adc
cwtl
xchg
mov
xlat
repz
mov
jmp
mov
dec
xchg
jge
les
cmpsl
faddl
mov
or
loope
subb
test
xor
push
cli
call
cmp
in
adc
sub
add
add
mov
mov
les
sahf
mov
adc
cwtl
dec
enter
out
mov
or
arpl
xchg
push
outsb
ret
sub
or
push
enter
lret
addr16
ja
and
out
stos
inc
iret
add
nop
add
mov
imul
lahf
js
sub
jnp
mov
les
mov
jae
jae
xchg
daa
sub
dec
mov
test
fldt
pusha
sub
mov
cmp
aaa
mulb
cmp
in
jns
push
in
fmul
push
mov
or
test
out
xchg
lds
mov
rorb
jb
lock
sbb
pusha
xchg
stc
gs
push
fdivrs
divb
fwait
or
dec
pop
xor
out
pop
xchg
rol
or
inc
aaa
xchg
mov
int3
nop
stos
in
movsl
pop
movsb
les
outsl
sbb
mov
or
js
xor
mov
or
lock
lcall
out
push
push
sahf
nop
sbb
jecxz
dec
bound
adc
mov
insb
push
push
add
add
add
adc
inc
cmp
sbb
push
out
stc
mov
decb
adc
mov
out
pop
add
add
popf
mov
fucomi
push
cmp
inc
pop
xchg
jbe
pop
dec
outsb
ss
hlt
or
andl
flds
rcr
mov
jbe
out
xchg
or
dec
xchg
jno
jne
mov
call
push
fs
cmp
bound
inc
jbe
jmp
lret
mov
stos
lcall
fprem
pop
cmpsb
dec
jl
cmp
lods
jnp
xor
mov
js
roll
dec
pop
daa
les
mov
iret
clc
out
sub
push
mov
inc
popf
jo
and
imul
cmpsb
jge
fsubrl
xlat
mov
jle
xor
mov
cmp
cmp
insb
mov
mul
pop
inc
xchg
mov
imul
pop
jb
add
stos
and
iret
push
adc
pop
dec
mov
loop
ljmp
sbb
sbb
jp
in
aaa
cmp
ret
ljmp
jp
jecxz
dec
ret
push
mov
aad
std
hlt
ja
mov
enter
mov
mov
xlat
lea
out
sbb
popf
push
xchg
inc
mov
adc
sub
mov
cmp
mov
mov
cli
adc
cwtl
outsb
mov
xlat
fldl2e
test
push
std
sbb
cli
push
mov
std
sub
jp
xlat
aam
add
push
mov
rolb
scas
xorb
and
or
and
pop
pop
adc
push
rcr
xor
daa
in
rcll
dec
pop
outsb
rcrl
or
sub
or
cltd
scas
and
lds
test
xchg
outsl
sub
cmpsl
push
or
cmp
jecxz
stos
lret
dec
push
inc
rcl
xchg
hlt
je
or
xchg
jg
lea
mov
in
aam
push
mov
add
daa
dec
add
add
cli
cmp
mov
pusha
and
mov
sbbl
sbbb
dec
cmp
ljmp
inc
subl
mov
pop
cmp
insl
sub
dec
inc
pop
mov
aaa
scas
aam
adc
adc
aas
clc
popf
mov
push
test
pop
fidivrl
cmc
sbb
xchg
dec
std
call
dec
lret
push
call
xor
xchg
into
cmp
pop
leave
gs
inc
out
adc
mov
lea
rolb
lods
mov
mov
jge
jnp
mov
or
mov
cmp
roll
sbb
aam
cmc
add
rclb
insb
les
xlat
shll
sbbl
ja
mov
push
mov
sbbl
into
add
mov
sub
sarb
addr16
push
add
pop
mov
pop
or
mov
mov
push
mov
xchg
pop
adcl
cmp
lods
stos
dec
imul
mov
ljmp
test
movl
lods
pop
insl
xchg
mov
add
int3
xchg
movsl
inc
xchg
add
jo
jnp
cli
gs
push
shrl
xor
inc
add
push
mov
inc
sahf
mov
stc
pushf
jmp
pop
push
xor
xor
push
out
xor
fisubs
orb
test
call
pop
andl
sbb
mov
mov
xor
sbb
jmp
fdivp
cli
push
addr16
xchg
or
sub
xchg
in
xorl
mov
cli
xchg
push
divb
mov
push
add
cmp
icebp
stos
push
and
js
cmp
cmp
xchg
dec
mov
iret
mov
xor
sahf
or
ret
sbb
push
in
add
sti
outsl
push
xor
xchg
inc
lcall
ret
sbb
into
inc
imul
inc
xor
or
pop
call
or
xchg
clc
notl
jne
jg
jecxz
cs
aas
call
popa
and
int
nop
repnz
mov
or
incl
fsubl
and
xchg
cmp
adc
enter
cmpsl
jge
adc
rol
dec
add
xchg
jecxz
insb
or
pushf
out
jb
jne
rcl
cs
inc
jp
jne
imul
std
adc
packssdw
lds
imul
lea
cltd
lods
roll
test
sub
notl
fwait
inc
in
mov
fcom
lods
mov
addr16
fadd
push
inc
mov
sbb
es
lcall
outsl
mov
dec
daa
xchg
nop
mov
adc
test
cmc
popf
jle
inc
mov
loop
in
dec
addr16
es
movsb
sahf
aas
add
sub
mov
mov
mov
dec
repnz
insb
rol
sbb
movsl
mov
lret
repnz
sbb
xor
cmp
mov
ss
cld
sub
mov
lds
and
jp
mov
lcall
scas
cmpsb
movsb
push
test
inc
fnstcw
jno
push
clc
les
xchg
test
loope
mull
and
and
pop
push
sub
inc
ds
pop
cltd
pushf
lahf
pop
lods
scas
xchg
in
jge
aaa
in
mov
les
adc
fmull
ret
ret
rolb
push
sbb
dec
movsb
fdivrl
and
xor
test
inc
jecxz
fisttpll
mov
ds
sbb
mov
mov
mov
mov
xchg
pop
push
cltd
xchg
pop
xchg
xor
cmp
test
mov
hlt
add
inc
sbb
movsl
cmpsl
inc
mov
bound
in
hlt
insb
mov
shll
out
adc
in
mov
call
or
fs
stos
add
adc
cld
ret
push
inc
jge
dec
fnstcw
mov
data16
bound
mov
stc
mov
pop
inc
cld
xchg
lods
or
cwtl
jo
xlat
repz
mov
push
dec
dec
inc
mov
test
jnp
lds
out
adc
dec
mov
into
cmp
insl
add
jmp
outsl
push
adc
cmp
xchg
sub
dec
fstl
shrl
leave
lock
cld
jecxz
dec
and
in
jle
sbb
shll
dec
nop
xor
adc
imul
adc
mov
bound
sub
mov
jp
in
mov
jne
cmp
stc
xchg
pusha
inc
sbb
lret
sub
popf
fnstcw
pushf
add
push
jge
dec
aaa
fildl
sub
dec
aas
inc
and
pop
adc
mov
lods
mov
scas
iret
sub
push
movl
cmovne
popf
cwtl
cld
mov
xchg
hlt
loop
lods
fsqrt
push
push
pop
rcll
insb
imul
pop
out
data16
pop
push
mov
shl
push
sbb
aad
dec
xor
add
pop
xchg
aad
cwtl
cmpsl
jl
pusha
cmp
imulb
stos
and
faddl
mov
leave
adc
daa
insb
pop
add
lods
xchg
sub
push
rcrb
inc
call
mov
fisubs
test
xchg
ljmp
push
test
push
cmp
in
inc
mov
jae
mov
mov
mov
xchg
xchg
sub
clc
inc
dec
gs
fildll
cmp
out
fs
mov
adc
jp
ret
cmp
mov
mov
mov
pop
in
mov
jo
bound
icebp
lret
inc
inc
add
mov
int3
cmp
xchg
mov
mov
mov
js
daa
ds
jmp
in
insb
into
add
push
sub
or
pop
mov
js
jb
dec
pop
adc
lods
add
repnz
sbb
call
mov
testl
pop
loop
or
mov
mulb
xor
xchg
fcomi
les
rcll
jae
out
mov
or
aas
sbb
popa
outsl
inc
orl
adc
mov
testl
fidivs
repz
test
pushf
cmc
lea
mov
push
dec
xlat
insb
pop
sarb
mov
pop
dec
push
pop
mov
in
adc
xor
cmpsl
and
sbb
add
add
sub
pop
fstl
jne
and
xlat
mov
and
jecxz
adc
jg
pop
push
rorl
pop
mov
jns
sub
dec
fadd
scas
rcll
out
ljmp
dec
or
xor
and
dec
cli
sbb
int3
jno
lods
je
sub
sub
dec
lcall
jne
add
sbb
mov
sub
pusha
hlt
add
bound
xchg
jae
and
pop
push
mov
xchg
xlat
cwtl
or
cmpsb
mov
sahf
xchg
mov
fdivrp
in
jne
mov
adc
dec
roll
in
mov
sbb
fdivs
popf
add
fstpl
add
hlt
push
repnz
jl
cmp
inc
xchg
mov
clc
adc
cmpsl
pop
in
in
xchg
adc
fsubp
jo
lods
pop
jecxz
mov
or
mov
inc
aad
dec
jbe
mov
sbb
sahf
dec
scas
jmp
mov
mov
imul
pushf
aad
jmp
mov
sbb
repnz
outsl
js
stos
ss
pusha
xorl
addr16
arpl
loop
js
mov
push
fsts
cmc
mov
adc
inc
outsb
xchg
test
ljmp
pop
and
xchg
or
or
mov
movsl
and
inc
or
pop
rolb
daa
lock
test
pop
popa
jnp
fsubl
shrb
fists
lret
mov
or
clc
sub
jmp
jbe
in
pop
lret
jp
adc
add
xchg
xor
ds
push
sub
push
outsl
pop
and
jnp
movsb
scas
xor
lock
inc
scas
push
test
and
sub
xchg
cmp
cmp
test
jecxz
push
insl
je
nop
shr
aaa
push
sbb
inc
xor
imul
adc
jmp
pushf
cld
cmp
test
and
inc
inc
movsl
dec
std
push
mov
rcrb
mov
outsb
in
pop
xor
and
test
pushf
adc
or
lds
cmpsl
xchg
sub
mov
mov
mov
int3
cmp
add
fs
cli
fnstsw
sub
pop
dec
mov
std
add
aas
dec
in
add
mov
xchg
jbe
imul
icebp
cmp
stos
les
adcb
push
lret
data16
cmp
or
ficompl
sub
cmp
mov
inc
jle
adc
cmp
jmp
cs
sti
scas
repnz
jecxz
clc
shll
mov
pushf
clc
mov
jne
mull
and
cmp
cli
pop
inc
jg
out
test
xor
fidivrs
es
push
xchg
mov
enter
adc
and
jnp
lahf
leave
inc
enter
jl
and
fdivl
add
addr16
sbb
adc
aam
repnz
sbb
xor
cmp
pop
sbb
push
imul
lret
and
dec
ret
movsb
push
cmp
cwtl
loopne
inc
rclb
std
fmuls
stc
rolb
mov
adc
inc
push
adc
cmpsb
test
rolb
lret
fnstsw
pop
cmp
iret
aam
mov
jne
push
push
pop
dec
sub
repnz
int3
xchg
or
insb
push
int3
jo
or
push
ds
inc
adc
pop
loopne
sub
imul
xor
out
xchg
push
add
aad
lds
shrb
inc
jo
mov
cmpsl
in
mov
andl
pop
xchg
rcrb
arpl
jl
out
pop
inc
xor
int
and
lods
insb
rcr
mov
inc
sub
inc
fmull
ja
jae
or
cmp
or
sbb
lods
sahf
push
dec
not
test
lods
insl
inc
aas
mov
fs
repnz
hlt
xchg
iret
jge
xchg
pop
dec
call
or
dec
cli
xchg
or
push
int3
push
shlb
gs
test
or
ret
mov
arpl
adc
sbb
lock
xchg
in
push
icebp
xor
mov
out
push
call
stc
xchg
xor
pop
pop
push
outsl
sub
mov
mov
push
inc
imul
fs
xchg
arpl
sub
mov
enter
ja
repnz
push
xchg
packuswb
inc
lret
push
ss
push
adc
mov
dec
adc
mov
and
adc
out
push
leave
jbe
jns
jp
push
mov
lods
sub
jae
xor
lcall
pavgw
lret
dec
cltd
in
add
call
mov
addb
mov
pop
inc
in
inc
cmpsl
xchg
jns
les
sbb
clc
jle
and
push
pop
aam
inc
or
shrl
push
insl
xchg
xchg
inc
clc
addb
jmp
mov
test
movsl
in
mov
dec
out
mov
inc
test
aas
cmc
scas
imul
ja
xchg
lds
aas
push
jg
pop
cwtl
mov
jle
push
popf
int
xorb
pop
add
mov
out
push
adc
mov
lock
bound
insb
les
cmpsl
out
pushf
pop
dec
and
fucom
icebp
mov
orb
or
add
mov
mov
xor
sti
mov
sbbb
pusha
roll
xor
fwait
outsl
add
xlat
xor
cltd
inc
rolb
cli
xor
testl
fsubrl
inc
push
fcoml
sbb
cmp
xchg
mov
adc
pop
test
lret
lods
ljmp
xchg
cmpl
inc
sbb
and
xor
pandn
insl
push
fs
xchg
repnz
in
push
fildll
enter
repz
lds
dec
mov
or
fdivrl
and
int
pusha
mov
xor
lcall
stc
shrb
inc
push
cwtl
adc
push
xor
cmp
ret
les
mov
mov
ficoms
push
adc
fnstenv
sub
sbb
or
mov
inc
mov
push
fmuls
in
setl
mov
mov
lret
xor
test
inc
scas
adc
dec
dec
out
mov
inc
repnz
and
inc
or
mov
mov
ss
lcall
imul
sahf
xor
aaa
ret
pop
push
dec
cmp
cs
jns
ds
xor
jg
les
negl
add
bound
pushf
addl
ficompl
jmp
pop
filds
and
in
dec
mov
test
lret
jp
hlt
jl
mov
fldenv
insb
sub
dec
sbb
and
repnz
mov
push
pushl
xchg
outsb
xor
mov
sub
jne
pop
out
movsl
out
pop
loop
sbb
jmp
fxtract
imulb
mov
movsb
fmul
mov
mov
mov
fdivs
mov
xor
sbb
jle
push
push
inc
inc
jne
ljmp
sbb
pop
in
sbb
ret
sub
xchg
pusha
enter
pop
loopne
sbb
rclb
mov
out
cmc
cld
push
sub
movsb
sbb
or
in
cld
and
jg
mov
lock
test
sub
pop
pop
in
cmpsl
stos
push
cmp
mov
cli
xchg
das
pop
xchg
rorl
rcll
add
cmc
daa
ds
push
out
cmp
and
xchg
lcall
add
scas
inc
repnz
mov
pop
insb
sub
jp
push
ja
iret
gs
dec
xor
adc
lods
cli
jbe
jmp
push
les
arpl
sub
or
add
and
add
lcall
je
js
mov
mov
in
int
dec
nop
fwait
rcrl
add
jae
sub
rclb
in
push
scas
jbe
hlt
pop
adc
push
lods
adc
push
sti
lods
outsb
sbb
add
xchg
repnz
daa
inc
push
add
jno
sbb
or
inc
notb
pop
sub
negl
leave
lcall
in
sahf
xor
cwtl
loopne
addr16
stos
jae
mov
pop
xchg
mov
ret
nop
cltd
mov
cld
bound
add
clc
push
sbb
pop
or
lcall
stc
mov
push
xor
mov
pop
mov
xchg
xor
sbb
cmp
push
or
cmc
push
mov
and
cld
push
jnp
fwait
rclb
inc
fisttpl
and
mov
pushf
loop
sub
mov
and
stos
out
je
dec
in
push
push
ljmp
hlt
mov
mov
sahf
lahf
icebp
stos
xor
lret
sbb
outsl
jb
cltd
mov
cmc
jle
and
pop
mov
dec
jg
lds
push
orl
dec
testb
and
push
mov
push
add
mov
ficompl
lret
inc
gs
shrl
sbb
test
jl
nop
in
push
pushf
sbb
mov
push
enter
out
push
add
adc
push
imul
fs
xchg
xor
fld1
stos
mov
mov
in
add
stos
scas
mov
jle
pop
fwait
mov
or
push
dec
cmp
nop
out
fwait
mov
xor
xchg
sub
fdivrl
mov
into
push
mov
jge
or
daa
or
std
cmp
adc
shll
or
fldcw
imul
mov
addr16
push
imul
je
xor
adc
and
out
in
mov
bound
mov
out
mov
sarb
lea
xchg
ss
mov
pop
sbb
mov
movsl
jno
into
pop
mov
lcall
cmp
daa
pop
test
mov
cltd
add
out
mov
inc
aam
xor
lds
sub
pop
fistpl
fucomip
aas
add
push
xchg
stos
into
bound
fstpt
fs
sub
xchg
push
pop
outsb
jle
das
popa
gs
mov
ret
mov
sbb
pop
inc
xor
dec
aas
mov
mov
repnz
xor
sub
insb
jle
mov
mov
ret
or
cld
gs
and
movb
jno
ljmp
or
mov
dec
cmp
jo
add
add
pusha
mov
pushf
jecxz
jbe
js
rclb
mov
mov
sbb
fcoms
shlb
sbb
push
dec
or
pop
push
dec
pop
jno
mov
xchg
xchg
orb
add
ja
stc
out
mov
cmpsb
dec
dec
mov
sbb
xchg
and
setae
sbb
mov
rcrl
lcall
stos
pop
mov
lods
xchg
sbb
lods
mov
aad
and
mov
lret
xor
stc
jecxz
xchg
es
adc
mov
shlb
jbe
repz
lahf
mov
mov
jg
outsl
jp
or
sbb
sub
cmp
lret
ljmp
mov
dec
dec
pop
jg
outsl
jp
or
sbb
sub
cmp
into
int3
aam
repnz
sahf
mov
mov
jbe
imul
push
sbb
and
faddp
jecxz,pn
ja
mov
mov
mov
lock
outsl
or
rclb
jmp
mov
shr
mov
scas
xchg
je
and
inc
and
and
xor
inc
adc
roll
roll
and
inc
ret
push
jno
pusha
xor
inc
adc
rcrl
leave
adc
push
jge
jne
pop
addr16
and
shrl
mov
sbb
xchg
lret
fcomps
in
sbb
decb
mov
sub
xchg
stos
xchg
pop
ss
cmp
or
sbb
jno
mov
mov
ss
mov
mov
push
mov
pop
fsts
popa
fidivs
inc
scas
mov
and
sti
mov
in
aam
xchg
mov
shll
dec
mov
xchg
hlt
xor
rcll
je
adc
pop
push
enter
mov
rcl
xchg
cmp
add
jb
and
imul
cmp
or
sbb
popa
fidivs
xor
scas
mov
jno
mov
inc
out
jno
mov
shl
mov
fcoms
or
push
imul
pop
push
ret
mov
and
xchg
out
lods
in
adc
push
sbb
jae
je
lea
mov
loop
hlt
mov
add
add
add
adc
fsubs
subl
xor
jno
inc
add
and
push
add
mov
mov
shl
mov
rcll
inc
add
and
push
add
mov
fxch
scas
jmp
push
push
mov
xadd
cmpsl
adc
inc
dec
dec
es
bound
enter
inc
push
inc
jecxz
mov
adc
out
call
in
lds
add
aaa
arpl
test
scas
mov
mov
stos
arpl
xchg
mov
je
push
mov
jne
sbb
loop
and
mov
inc
pop
push
testb
repz
pop
sar
sub
rdpmc
or
fldenv
mov
sub
pushf
ja
cmp
sar
cmp
loop
xor
mov
cmp
pop
in
and
ss
in
popa
mov
mov
mov
cmp
lret
sub
scas
leave
shrb
addr16
dec
aaa
ja
in
adc
mov
sub
cmp
jae
jns
into
in
adc
or
sahf
sub
fs
dec
sub
repz
mov
scas
stc
push
push
sub
bound
jg
jo
aam
ficoml
lcall
mov
aad
pop
xor
push
mov
mov
rolb
hlt
aam
and
lret
adc
outsb
and
testb
outsb
inc
mov
ss
lahf
out
out
sbb
leave
cmc
xchg
loope
outsl
jb
xor
mov
jge
ret
xor
or
fldenv
push
lods
in
pop
leave
lea
fcomi
dec
cmp
xchg
inc
enter
xor
imul
out
rcr
mov
mov
cmpsl
icebp
dec
mov
jo
push
inc
in
pop
xor
mov
pop
xchg
shrb
and
mov
out
sbb
push
scas
xor
or
sub
fdivs
aaa
lods
insb
inc
xor
mov
xor
jnp
cs
cmp
or
inc
push
mov
cmp
pop
adc
cmp
jmp
movsl
shl
xchg
insl
fsubrs
sahf
sbb
adc
fldenv
mov
enter
inc
xchg
lahf
add
sbb
call
pop
fcmovnbe
fs
push
ljmp
cmp
aaa
jo
add
xlat
bound
mov
dec
fsubrs
loop
aas
jno
mov
xor
push
lcall
pop
mov
lock
leave
scas
cmpl
jo
adc
into
xchg
pusha
fadd
adc
arpl
sub
leave
aad
and
ljmp
scas
cli
dec
push
sub
ret
sti
sbb
out
aad
arpl
xorb
inc
xor
inc
pop
jp
mov
mov
xor
xor
cmp
hlt
scas
in
stos
int3
test
mov
fwait
jge
rorb
xor
jecxz
push
stos
xor
mov
out
and
and
adc
sub
jnp
sub
test
ja
dec
xchg
inc
mov
in
sub
out
push
ret
mov
sbb
into
insb
mov
dec
nop
sub
mov
popa
fisubs
mov
idiv
loope
and
shll
out
sub
out
and
and
outsl
pop
insb
cmp
fildl
xchg
mov
xchg
pop
jnp
sti
lods
fstpl
data16
test
inc
push
das
es
jo
stos
dec
mov
pop
mov
and
mov
insb
nop
cwtl
sahf
push
mov
xor
in
push
inc
adc
push
inc
lods
push
call
wrmsr
xor
lahf
loope
pop
add
sbb
xor
or
jns
pop
test
mov
test
mov
mov
xor
xor
addr16
inc
inc
movsb
sti
xchg
dec
pop
or
sub
dec
das
aaa
arpl
loope
std
or
std
inc
pop
adc
xchg
in
rcl
int
scas
out
inc
sahf
cltd
push
mov
xor
push
mov
stos
mov
cld
aam
inc
xor
push
popa
mov
in
xchg
mov
mov
push
pop
dec
cmc
loope
xchg
loope,pn
fneni(8087
test
pop
pop
pop
shrl
dec
inc
das
mov
neg
insl
cmp
xor
xchg
mov
cmp
or
popf
dec
xchg
adc
fldt
cs
sbb
imull
pop
mov
and
xlat
idiv
dec
and
inc
addb
xchg
imul
adc
pop
jecxz
cmp
popf
xor
loopne
sub
jmp
gs
out
or
or
pop
lea
push
jns
or
pusha
mov
and
mov
inc
xchg
cmp
mov
lods
lock
push
mov
xor
and
ljmp
mov
mov
jge
inc
push
push
shll
aas
inc
dec
adc
lret
sti
rcll
insl
dec
sub
and
sbb
test
push
ja
xchg
sub
fwait
cmp
sub
mov
loope,pt
push
repz
lea
xor
mov
sbb
jno
mov
loope
push
or
xor
out
add
rorl
mov
mov
mov
add
insb
divb
sub
adc
fs
xor
mov
mov
out
xor
xchg
sbb
mov
clc
je
mov
stos
dec
add
push
push
mov
add
dec
in
mov
pop
inc
lods
les
pop
mov
adc
xchg
stos
jnp
sbb
rcrl
xor
push
je
sbb
ds
sbb
test
add
gs
daa
outsl
lods
sbb
inc
lret
int3
cmp
jp
shlb
shll
xchg
jb
loop
leave
xlat
stos
loope
call
mov
or
and
aam
dec
mov
adc
pop
or
test
test
jb
push
xchg
xchg
or
cld
aaa
xlat
and
jge
idivb
clc
lcall
push
ljmp
cmpsb
dec
sbb
gs
es
adc
adc
incb
inc
cmc
jl
lret
inc
mov
push
test
subl
fildl
arpl
push
xor
cmp
or
adc
mov
or
inc
mov
xor
arpl
out
imul
push
gs
sti
inc
into
addr16
out
xchg
inc
jecxz
fwait
xchg
jg
mov
in
fstps
dec
cltd
aad
aas
add
or
sbb
sbb
subb
xorl
fidivrl
inc
jae
mov
mov
pop
ds
cltd
sbb
fcomip
jns
loope
mov
mov
mov
inc
cld
or
stos
shlb
iret
sub
sbb
dec
fcompl
shr
dec
mov
lret
enter
xchg
or
outsl
sub
mov
mov
es
out
pushf
sub
lcall
mov
push
test
jge
mov
xorb
arpl
clc
or
dec
adc
jp
aad
fnstenv
add
out
cmp
lods
push
inc
lahf
ret
orl
push
mov
push
fidivl
jo
cmp
mov
std
or
ljmp
out
int
fnsetpm(287
or
jb
addr16
adc
adcl
and
out
pop
fucomip
cltd
and
adc
mov
lcall
mov
int
push
outsl
aad
push
mov
aaa
loop
fs
inc
sub
jns
and
push
aam
cmpsb
pop
addr16
dec
jmp
into
xchg
push
add
mov
loop
repz
xor
cmp
rcr
mov
mov
subb
out
mov
pop
mov
inc
push
or
psubd
imul
xor
pusha
arpl
mov
pop
cmc
mov
mov
mulb
mov
outsb
mov
mov
mov
fidivl
addl
jmp
sub
dec
sbb
add
pop
xlat
in
sub
sbb
das
sbb
sbbb
xchg
icebp
push
into
loop
jmp
mov
sahf
out
xor
loope
andl
push
mov
cwtl
mov
in
dec
mov
lahf
and
xor
cmpl
inc
mov
xor
adc
xchg
jo
fcmove
scas
push
into
ds
ret
cwtl
cmp
xlat
mov
decb
jae
sahf
fists
stc
mov
in
mov
faddp
pushl
testl
inc
subl
es
sbb
push
cld
sti
adc
push
or
mov
mov
repz
push
jge
jge
lcall
inc
mov
jno
jle
mov
sub
cmp
out
outsb
in
xchg
ds
data16
cmp
sub
fs
rcll
mov
pushf
jle
ljmp
ret
pop
cmp
push
in
out
pushf
xchg
ljmp
popl
xor
cmc
and
pop
iret
jo
mov
xlat
outsb
int
or
ret
mov
aaa
in
out
sub
faddl
fldl
mov
or
mov
or
out
cmp
jecxz
cmpb
cwtl
xchg
inc
in
and
cmp
sbb
bound
pop
stos
inc
sahf
pop
outsl
stc
add
and
add
icebp
test
push
clc
gs
and
pushf
lods
pop
sti
adc
mov
ffreep
jae
ljmp
cld
cvttps2pi
out
mov
or
inc
mov
pop
xchg
inc
jbe
pop
loopne
or
imul
add
and
mull
jg
cmp
add
mov
cmpb
inc
cmp
mov
and
lcall
call
in
ljmp
xor
cld
mov
push
pop
cltd
imulb
push
sbb
fs
icebp
sub
test
xchg
shlb
test
test
dec
lods
fisttps
lea
adc
cmp
inc
call
mov
cld
dec
mov
mov
neg
dec
cmp
mov
cmp
ljmp
pusha
jb
jnp
cmp
repz
xor
jp
or
cmc
mov
mov
push
pop
std
cmpsl
jecxz
cmpsb
sarb
fadds
or
addr16
pusha
add
adc
iret
roll
lock
mov
jne
inc
and
add
jmp
inc
sbb
sub
dec
mov
pushl
push
into
fwait
mov
popf
cmp
pop
cmp
push
imul
pusha
xor
push
xor
mov
cwtl
mov
inc
pop
adc
push
fwait
std
xor
lahf
and
fnstsw
jl
fisttps
sub
dec
es
push
test
popa
adc
pop
pushf
lret
loope
push
test
fscale
pusha
cmp
mov
lock
leave
leave
jmp
push
int3
mov
jns
fwait
dec
outsl
mov
mov
jae
sub
fldt
aas
mov
cmp
add
cmp
or
cmc
movsb
aad
push
loop
mov
inc
xchg
fildl
inc
aam
ret
inc
xlat
lods
pop
imul
pop
popa
push
cltd
adc
jmp
test
cmpsl
mov
test
hlt
repnz
in
fnstsw
mov
jge
pop
jbe
pop
lods
lret
jnp
or
fcoms
inc
test
ljmp
adcb
adc
mov
dec
jmp
jmp
ljmp
mov
fstpt
movsl
lret
sub
pusha
cmp
sub
cmpsl
inc
mov
pop
push
sti
das
xabort
mov
ljmp
cmp
push
nop
inc
hlt
dec
ret
cmpsl
mov
mov
push
push
pop
xor
adc
mov
pushf
aad
cltd
fwait
mov
stc
push
mov
mov
push
jno
jle
lea
jns
movsl
inc
xlat
aaa
jp
insl
pop
stos
outsb
lods
aam
mov
sbb
sbb
lahf
push
imul
cmpsl
addb
dec
xor
xchg
pop
test
and
stos
sbb
aas
aam
push
inc
fcoms
aas
out
int
push
stos
push
arpl
lahf
adc
aad
xor
fldenv
pop
xchg
sub
xchg
pop
sbb
arpl
mov
pop
lock
insl
xchg
leave
cmp
jl
dec
fldt
adc
mov
movsl
call
dec
std
cmpsb
fwait
enter
xor
mov
outsl
sbb
pop
mov
in
dec
dec
imul
and
enter
xchg
xor
push
mov
dec
mov
sar
lcall
jmp
jge
aaa
fcomp
clc
mov
jbe
adc
inc
push
pushl
inc
push
rcll
dec
mov
adc
into
out
bound
xchg
xchg
xor
inc
stos
shll
pop
sub
and
mov
inc
fnstenv
stos
mov
pop
pop
cwtl
aaa
or
xchg
cmp
mov
xchg
dec
xchg
dec
scas
jbe
dec
sbb
push
inc
out
bound
hlt
push
test
popa
pop
mov
addr16
lods
mov
je
int3
push
iret
jbe
pusha
cld
andb
daa
xchg
scas
jmp
adc
fisubrs
jmp
inc
mov
inc
cmpsl
push
es
cmc
out
sbb
das
dec
jmp
jecxz
out
mov
cli
xchg
jp
sub
mov
out
in
mov
and
imul
dec
mov
adc
hlt
mov
rol
push
jl
mov
je
push
mov
into
sub
test
sarl
fbstp
jnp
enter
mov
cmp
cs
jns
xchg
jae
sub
lcall
jge
test
mov
lcall
pop
imul
vmwrite
mov
in
xchg
dec
fdivrp
insb
icebp
sub
xor
sbbl
pop
test
data16
cmc
or
jle
xor
mov
sbb
jge
pop
cmp
cwtl
in
dec
in
mov
sbb
cmpsl
xchg
mov
lods
leave
loop
and
xor
and
mov
adc
xor
enter
shr
sbbl
adc
ja
mov
loopne
andl
xchg
inc
popf
sub
push
scas
outsb
scas
int3
jns
jg
lock
dec
dec
mov
ret
jne
test
fldl
stc
mov
mov
dec
and
dec
add
xchg
xchg
test
push
mov
mov
jp
insb
dec
jbe
ljmp
lock
in
out
fimuls
insl
jnp
pop
xor
mov
gs
sbb
and
ss
lcall
int
sbb
repnz
stos
xor
sub
aad
jae
test
std
pop
xor
stos
ret
push
add
insb
bound
out
mov
leave
jae
mov
je
ret
mov
insl
push
sbb
fbld
mov
fdivl
shlb
fmuls
cmp
in
scas
loop
xchg
jns
and
dec
and
sub
fs
mov
xchg
ds
sbb
lret
push
mov
js
addr16
js
test
in
or
dec
lods
and
jb
addr16
jp
or
xor
jno
fcoml
fwait
cld
or
ja
maxps
out
push
cwtl
mov
push
call
inc
lret
jbe
mov
lods
pop
inc
test
out
mov
inc
in
sub
or
ds
or
cmpb
lods
movsb
test
leave
mov
loope
xchg
out
test
mov
pop
iret
or
loope
fcmovne
sbb
icebp
push
rcl
inc
push
xor
pop
jno
xchg
sub
loope
mov
jno
sbb
test
mov
cmp
mov
and
dec
je
pop
sub
enter
data16
mov
mov
add
mov
inc
inc
inc
out
stos
add
inc
mov
push
pop
pushf
mov
daa
and
pop
xor
cmp
or
mov
xchg
mov
rcll
pop
mov
mov
push
mul
and
dec
or
mov
and
push
cmc
mov
arpl
rorb
or
clc
addr16
test
lds
pop
xchg
mov
in
adc
sti
inc
lahf
jge
mov
fnstenv
jbe
cmp
ffree
shrb
adc
add
fdivl
es
adc
test
les
push
mov
out
clc
data16
ljmp
push
je
jmp
ret
pop
loope
inc
mov
stos
sub
cwtl
jg
test
fsubrs
sahf
je,pt
movsb
lea
adc
push
jbe
lock
je
out
stos
push
xor
mov
and
inc
fimuls
push
mov
outsb
aam
xchg
lods
insb
cmp
shrl
xlat
cld
sbb
dec
fbld
pop
or
shlb
outsb
add
ja
fisubrs
cmp
mov
jno
out
cmc
adc
sub
hlt
outsb
stc
and
mov
cmp
sbb
cpuid
sbb
lret
pop
test
pop
dec
cmp
int
or
xor
and
sbb
inc
mov
ljmp
push
mov
cld
dec
inc
lds
add
bound
je
push
scas
pop
cmp
cmpsl
jecxz
jecxz
xchg
loopne
cmpsl
inc
je
ss
insb
sti
out
add
inc
ds
mov
inc
sbb
sbb
push
fisttpll
push
scas
mov
mov
clc
dec
xlat
xor
dec
test
xchg
push
push
cmpsb
pop
push
stos
pop
cmpsl
test
add
pop
push
mov
mov
push
mov
rorl
cmp
cmpsb
int
outsl
cld
sahf
dec
in
mov
lock
lahf
andb
mov
repz
dec
aad
ret
dec
out
ja
aaa
iret
pop
pushf
xor
out
push
outsb
and
mov
add
inc
sub
sub
and
adc
xlat
mov
data16
or
mov
fwait
dec
ret
nop
mov
jge
divps
push
nop
dec
aam
pushf
test
mov
test
inc
fcomps
dec
add
jge
add
xor
sub
test
xor
adc
dec
hlt
xchg
in
adc
or
fistl
xchg
dec
add
mov
repz
ret
add
xchg
inc
inc
xchg
shl
fistps
movsl
push
aam
pusha
negb
xor
enter
mov
dec
aaa
or
jae
and
ret
loop
or
push
insb
jp
out
sub
xchg
icebp
ror
movsb
iret
mov
int3
inc
repz
fdivs
or
sub
dec
mov
rorl
mov
lcall
mov
mov
push
or
cmpsb
ja
aas
imul
xchg
pop
icebp
arpl
mov
rol
in
mov
pop
or
push
jp
lods
add
mov
pop
adc
mov
repnz
add
jl
mov
subb
adc
cld
sub
push
addr16
call
or
sbb
cmp
dec
xor
orl
push
pop
aad
aam
in
mov
adc
mov
pop
pop
loop
mov
mov
or
push
jecxz
bound
mov
inc
cmp
cmpsb
addr16
xchg
hlt
inc
xor
insb
push
xchg
adc
mov
add
mov
adc
in
ss
shl
fadd
shl
pop
sbb
xchg
and
faddl
out
outsb
mov
loope
xchg
popa
mov
sub
enter
adc
xchg
inc
dec
mov
mov
dec
and
push
fstps
addr16
insb
mov
addr16
mov
xor
lcall
xchg
mov
dec
rcll
cmpsl
stc
sub
jo
dec
lea
mov
scas
daa
stc
stos
inc
xchg
andl
test
xchg
jo
fcom
inc
xor
cld
das
sar
jmp
cmp
cwtl
fidivrl
add
daa
jns
mov
jns
sub
push
xchg
lods
test
fs
or
sub
lods
aas
and
ret
push
or
add
add
add
xor
outsb
jge
fnstenv
gs
aam
mov
sti
and
int3
shrl
shrb
imul
add
inc
cmp
int
and
push
movsl
push
lock
push
ficomps
scas
sub
mov
cmpsb
xchg
pop
push
pop
xchg
inc
iret
dec
sbb
push
test
sub
lods
xorl
cmp
je
outsl
movsl
mov
dec
push
inc
cltd
jbe
int
pop
and
jno
and
cltd
cmp
lahf
or
or
int
cmp
add
xor
test
cmp
pop
pop
jnp
notb
adc
mov
sub
pop
xor
subl
enter
fildll
aaa
test
inc
sbbl
jne
adc
roll
and
inc
add
and
push
add
mov
mov
shl
mov
rcll
inc
add
and
push
add
mov
mov
shl
mov
rcll
inc
add
and
push
add
test
xchg
icebp
cmpsl
roll
push
addl
mov
test
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fbstp
enter
jmp
in
mov
add
add
add
add
test
testb
add
rolb
loopne
push
add
add
add
ljmp
add
add
add
add
add
add
and
cmp
xchg
add
add
add
ljmp
add
xor
dec
add
add
add
add
add
push
add
add
out
add
add
in
add
ljmp
add
jb
les
ja
inc
add
ljmp
add
incb
les
incb
mov
add
add
add
add
add
pop
add
add
test
test
ljmp
add
and
les
xor
add
add
add
add
add
insb
push
les
and
sub
adc
ljmp
add
ljmp
add
add
add
out
add
dec
add
add
add
insb
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
filds
ljmp
add
insl
add
cmp
add
add
dec
add
add
add
add
add
aam
inc
add
add
add
add
add
add
iret
add
out
add
add
add
dec
add
adc
add
add
add
add
add
add
das
add
add
add
add
add
add
add
rolb
dec
add
add
add
add
add
xor
sbb
add
sbb
add
in
dec
add
add
add
add
addb
add
add
push
add
add
add
add
ja
jae
ljmp
add
jae
ljmp
add
add
add
add
bound
cmp
ja
and
add
add
add
xor
xor
fadds
jne
je
dec
add
add
add
add
add
add
jl
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
add
dec
add
add
add
add
add
add
add
and
into
add
add
add
cltd
add
dec
add
add
add
add
add
add
into
add
cmp
push
add
insl
add
and
das
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
and
lret
add
add
add
add
add
add
add
add
add
jnp
ljmp
add
add
mov
ljmp
add
add
dec
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
ljmp
add
add
add
adc
stc
add
out
add
add
add
add
add
add
add
in
add
lahf
add
add
add
add
add
mov
scas
jmp
inc
push
push
mov
fldl
fcomip
in
pusha
and
jmp
imul
scas
fxch
test
xor
cmp
fwait
out
xchg
and
lock
mov
or
and
fdivl
aam
mov
xchg
in
push
shrb
inc
fiadds
jp
dec
cmp
xor
test
push
jno
xor
les
stc
insl
or
jo
mov
vcvtpd2psy
shrb
adc
cmp
xor
call
mov
adc
mov
leave
test
popf
je
lcall
and
adc
imul
aas
mov
pop
aas
adc
add
int3
inc
push
mov
out
aam
pop
popa
push
enter
sub
xchg
lret
jl
dec
mov
xor
les
xor
dec
daa
cltd
pop
pop
inc
orl
call
add
push
stc
jle
bound
into
popf
xchg
movsl
loop
imul
lods
pushf
div
std
push
pop
sarl
les
sbb
mov
and
stos
mov
jb
testb
push
mov
lret
lahf
icebp
mov
fiadds
push
lods
insb
mov
mov
shlb
scas
std
std
cmp
add
inc
mov
and
imul
imul
inc
ret
adc
fs
dec
and
pop
test
pop
popf
mov
nop
pop
push
lds
jnp
sbb
in
dec
aas
adc
ficompl
jo
pop
enter
mov
gs
leave
pop
mov
mov
xchg
dec
and
scas
pop
out
les
loop
pop
or
ficompl
orb
xor
cmp
daa
insb
xchg
fistps
leave
sub
ret
mov
jl
mov
cmp
cltd
rolb
jno
xor
pop
dec
outsl
adc
loope
fdivrs
adc
xchg
inc
add
mov
jecxz
out
cltd
mov
ss
insb
bound
inc
jne
imul
adc
ja
leave
pusha
movsb
loop
add
push
paddusw
jg
inc
ljmp
iretw
filds
cmp
mov
jl
movsl
or
neg
xor
mov
arpl
inc
cmpsb
fdivl
into
mov
js
stos
pop
dec
pop
mov
sub
outsl
push
cltd
xchg
mov
cli
ljmp
imul
pop
mov
fwait
xchg
rcrb
lret
ds
cmp
sbb
icebp
mov
bound
sub
das
sbb
repz
xchg
mov
mov
pop
fdivrs
sbb
rcr
cmpsb
cmc
imul
pop
and
mull
arpl
filds
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
