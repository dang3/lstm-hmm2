jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
pop
jbe
sub
inc
pop
mov
es
or
add
add
pop
add
add
xor
jae
dec
add
add
sub
and
push
add
add
add
add
sbb
mov
dec
add
add
xor
jns
insl
add
mov
add
add
mov
add
in
add
add
add
add
or
xor
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
and
dec
add
mov
add
add
dec
add
dec
add
add
xchg
add
mov
add
dec
add
add
add
add
sbb
dec
add
add
add
add
add
and
dec
add
repnz
add
add
add
dec
add
dec
add
add
pop
add
xchg
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
repnz
add
dec
add
add
add
add
add
add
add
jge
add
add
add
add
add
add
add
mov
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
das
add
add
add
add
add
add
add
add
add
add
push
and
pop
add
add
add
dec
add
add
cmp
insb
add
add
mov
add
mov
jns
xlat
add
add
add
enter
cltd
add
add
add
add
add
sbb
das
add
add
adc
add
add
arpl
push
add
add
pop
add
add
add
add
add
sub
add
add
faddl
sub
faddl
jb
pushf
add
add
add
add
add
dec
add
add
cltd
add
xor
or
insb
add
out
add
add
add
add
add
add
add
add
bound
xor
jno
aaa
add
add
js
mov
add
add
add
add
add
inc
add
xor
mov
outsb
add
add
add
add
add
add
xchg
leave
add
jne
and
leave
add
add
add
sbb
dec
add
add
add
fwait
add
mov
mov
add
add
add
leave
add
jle
cmp
pop
add
dec
add
arpl
sbb
mov
add
add
add
add
add
add
add
add
add
add
faddl
xor
cmp
mov
add
add
add
add
add
add
add
add
add
xchg
leave
add
add
add
add
add
add
add
and
das
add
add
add
dec
add
or
and
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
sbb
add
add
add
add
das
add
add
jae
add
sbb
or
or
add
pop
add
add
add
mov
add
add
or
mov
add
jge
in
inc
add
add
ret
add
sub
jmp
arpl
add
add
add
add
add
mov
jmp
aas
add
add
add
add
mov
push
sub
sub
adc
push
loopne
js
lret
push
mov
xchg
jne
sbb
daa
push
add
bound
lock
xchg
add
add
xchg
mov
lods
shl
scas
ss
or
mov
out
sbb
dec
and
mov
cltd
inc
add
pop
xor
xor
test
mov
es
ss
xchg
nop
loop
mov
cmp
push
pop
push
push
mov
sub
shr
stos
pop
loop
mov
push
push
cmp
fisttpll
dec
inc
test
xlat
dec
test
fmuls
pop
dec
and
cmpsb
adcl
push
jecxz
mov
push
xchg
mov
mov
and
out
mov
daa
aas
sub
aas
loopne
adc
inc
mov
xor
arpl
adc
out
es
sub
addr16
mov
and
dec
outsl
mov
push
jg
adc
imul
fnstenv
pop
movsl
test
aaa
adc
lds
pushl
movsb
add
or
fstl
and
inc
mov
mov
and
aaa
sbb
inc
adc
lods
stos
pushf
je
or
cmp
and
or
push
jg
push
mov
push
mov
roll
popa
aas
fs
xchg
jo
mov
push
aad
and
das
fs
ss
je
xor
imul
dec
in
push
inc
dec
mov
divb
pop
clc
adc
fstpl
into
out
shlb
popf
mov
insl
and
jp
sub
pop
ficoms
xchg
jno
jb
int
cwtl
mov
and
loopne
push
mov
das
or
cmp
cld
inc
jns
pop
or
dec
xchg
mov
cltd
and
inc
pop
rcl
call
cmp
and
js
mov
xchg
inc
je
inc
sub
and
or
xor
cmp
sbb
xchg
ja
jl
in
sbb
out
jl
jno
mov
dec
jne
sub
imul
in
fldenv
lock
sar
xchg
loop
movsl
and
jg,pt
fstpl
in
mov
aas
xor
sbb
or
mov
xor
add
and
out
adc
mov
test
jmp
mov
pop
aad
jl
xchg
add
fcoml
lahf
gs
fisubrs
shll
gs
add
mov
insl
xchg
loop
lock
push
call
push
mov
cmpsl
lret
mov
and
shrb
arpl
pop
test
jo
cltd
xor
ret
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
aam
cmp
or
sbb
dec
lods
adc
pop
stos
dec
mov
fwait
insb
cltd
sbb
fldt
fsubrl
int3
cmp
or
sbb
lods
pop
pop
test
insb
fwait
sbb
or
cmp
sub
fdivl
int3
cmp
adc
add
lods
inc
pop
dec
dec
sbbl
popf
inc
fldt
mov
mov
frstor
dec
xor
cmp
imul
orb
lods
out
loopne
test
rcr
sub
mov
and
outsb
repz
xor
aam
pop
aam
mov
cwtl
cmp
fnstenv
sub
xchg
push
mov
xor
int3
cmp
or
sub
lods
movsb
dec
sti
mov
test
pop
add
inc
es
adc
fisubrl
dec
test
xor
cmp
dec
andl
shll
and
imul
inc
jno
mov
sahf
loope
push
xor
lret
subl
sub
sbb
add
lods
inc
pop
mov
mov
sbb
or
cmp
sub
test
mov
nop
or
adc
xor
inc
adc
or
push
lret
pop
mov
push
cmp
sbb
dec
mov
shlb
fiaddl
or
push
cltd
jg
insb
cmpsl
xor
lahf
push
outsb
fldl
mov
dec
lods
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fsubrl
int3
cmp
or
sbb
lods
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fsubrl
leave
mov
out
push
scas
repz
inc
inc
and
add
aas
xchg
or
or
inc
xchg
clc
call
flds
gs
shlb
je
pop
mov
repz
jae
jbe
sub
cmpl
sbbb
xor
or
cmp
cmpsb
mov
loopne
mov
jmp
add
jo
jl
jno
xchg
movsl
ss
pop
xor
enter
in
movsb
sbb
mov
lock
add
aaa
shrl
inc
inc
cli
push
xor
test
ret
test
xor
fisubrs
movsb
fwait
jbe
xchg
dec
int
or
cmpb
aas
pop
mov
scas
cmpsb
andl
inc
lock
mov
xchg
movsl
icebp
push
call
sub
jae
jle
dec
stc
scas
mov
lds
inc
shlb
imul
add
dec
shll
or
dec
aaa
adc
adc
mov
pop
stc
int
xchg
xor
push
mov
jmp
ja
jecxz
out
call
sub
mov
add
dec
sub
rorl
pop
loopne
and
fbld
cmp
arpl
cmp
lock
cli
into
subb
sbbl
fs
pop
dec
jnp
jne
inc
scas
ret
mov
push
bound
add
imul
or
push
sub
and
sbb
and
insl
mov
mov
cwtl
dec
cmc
cmp
shll
shl
fistl
pusha
in
mov
ds
dec
pop
inc
enter
call
aaa
xchg
aaa
cmc
cltd
shrl
mulb
ficoms
adc
adc
xor
add
stc
sbb
inc
hlt
mov
imul
cmp
ss
inc
cmp
mov
mov
insl
xor
pushf
adc
popa
push
jno
pusha
push
aaa
aad
subb
arpl
stos
push
nop
jno
mov
add
je
xchg
jl
fsubrs
mov
sbb
int3
mov
xor
jle
pop
lahf
mov
out
xchg
sbb
mov
mov
inc
in
call
mov
sbb
sub
int3
arpl
xlat
xor
repnz
aas
fcoms
arpl
rorb
xchg
push
scas
and
js
lahf
lods
pop
in
inc
sub
imul
mov
pop
push
dec
int3
shll
push
mov
jnp
loop
cmp
out
rorb
aas
fsubr
cmc
sbb
insb
repnz
mov
insb
pop
loop
cwtl
xchg
push
repz
pushl
movsb
sub
int3
inc
jmp
in
add
outsl
pop
xor
lret
outsl
lcall
shrl
das
pop
or
jle
lods
sbbl
mov
jmp
sbb
mov
fs
adc
jp
xor
dec
fwait
and
lods
and
loop
jmp
cmp
mov
pop
ljmp
fidivrl
nop
adc
roll
sarl
sarl
std
testl
or
sbb
jns
xlat
fsubs
mov
lahf
jns
sahf
test
mov
ds
loop
test
dec
xchg
adc
aam
fldt
mov
push
mov
sbb
dec
ljmp
dec
dec
sub
xchg
pop
lcall
xor
dec
or
fsin
or
mulps
xor
out
jns
aaa
mov
sbb
inc
adc
shlb
les
mov
adc
lea
xor
mov
jne
out
push
sbb
xchg
xor
adc
repnz
push
insb
mov
cwtl
aaa
in
cmpsb
jge
sub
xchg
pop
sub
pusha
int
lock
or
addl
xor
mov
frstor
scas
hlt
mov
pop
mov
sub
aam
mov
and
or
xchg
popf
and
mov
xchg
mov
test
xchg
js
rcr
icebp
leave
loope
mov
mov
xor
mov
shlb
rolb
push
out
adc
dec
pop
js
fldenv
rcl
inc
sahf
inc
mov
xchg
dec
andl
push
mov
rep
call
push
push
mov
rolb
pop
aas
add
mov
mov
loop
dec
mov
xchg
inc
mov
xchg
xchg
cs
fmul
add
fcomip
andb
mov
xchg
stos
add
icebp
fdivrs
addr16
rorl
call
mov
jmp
dec
cltd
cmpb
outsb
xor
aad
popf
sub
sbb
sti
repz
sbb
sub
jnp
pop
sbb
jg
jo
nop
clc
or
ret
pop
inc
loop
inc
xor
mov
leave
jge
push
mov
or
sbb
dec
and
sahf
in
into
xchg
and
jns
loope
or
in
push
dec
rcrb
jmp
xchg
in
fnstcw
stc
push
and
popf
or
lahf
data16
enter
sbb
loopne
das
out
inc
je
sbb
ror
scas
mov
shr
out
inc
add
lret
mov
sar
push
jae
jmp
xor
adc
mov
adc
jmp
jp
test
sbb
lahf
xor
loope
push
cmp
cmpsb
leave
mov
xchg
push
push
sar
rcll
cmp
sbb
movsl
xchg
mov
clc
int3
dec
movsb
cmp
inc
mov
dec
push
incb
mov
aam
rcrb
js
mov
or
mov
jbe
adc
cmp
mov
xor
mov
sub
test
dec
movmskps
push
mov
es
and
push
roll
jbe
js
add
xchg
and
or
adc
dec
xchg
push
fcomp
pop
cmc
or
pop
jl
loopnew
mov
jne
xchg
sarb
fldenv
imul
pushf
fcmovu
sub
inc
lods
mov
cmp
test
inc
ret
pop
test
adc
xor
sbb
push
xor
jae
xor
sbb
mov
ret
sbb
jg
outsb
sbb
xchg
test
jo
mov
mov
in
clc
and
mov
lock
mov
jmp
test
sahf
xchg
out
jecxz
dec
adc
in
adc
stc
dec
scas
inc
cmp
inc
or
mov
inc
add
leave
cmp
and
sbb
je
lret
ljmp
lods
dec
jp
outsb
fmuls
sub
cmp
inc
in
sub
testb
fs
call
pop
and
popl
mov
xlat
popa
les
data16
outsl
dec
lods
dec
sub
in
push
jo
mov
lcall
push
ficompl
dec
push
adc
push
push
mov
pop
ja
mov
dec
shrb
or
and
xor
or
je
nop
outsl
and
fs
fwait
add
jo
and
add
fsubrs
nop
dec
xor
jbe
mov
int
cmc
test
cmp
inc
add
push
dec
xor
cmp
movsb
jg
test
sub
jno
mov
out
cs
jne
lret
pop
pop
in
jae
lret
repz
push
test
insl
jnp
call
mov
data16
lahf
jmp
adc
cmp
mov
stos
cwtl
arpl
mov
pop
jb
shlb
cpuid
xor
fs
and
lds
push
int
sub
mov
xor
popf
fists
out
hlt
or
xchg
fcomps
pop
insl
icebp
xchg
out
data16
cmp
pusha
out
mov
das
mov
lret
sbb
pop
xor
mov
and
test
fcom
xor
popf
mov
cmp
lock
sti
sbb
inc
popa
arpl
push
or
daa
sarl
or
std
or
inc
lcall
cmp
les
aam
cmp
stc
insl
out
xor
sbb
aaa
dec
js
mov
jmp
xchg
js
push
inc
mov
lret
adc
das
push
xchg
sbb
je
bound
sbb
fs
or
xor
xor
test
push
mov
xor
mov
hlt
movd
push
and
inc
fsubs
inc
paddusw
outsl
shll
jns
mov
sub
divl
andb
cmpsl
ja
jne
mov
lret
inc
aaa
mov
int3
mov
out
sub
data16
mov
loop
cmp
es
adc
mov
and
aas
sub
and
enter
jmp
push
push
dec
add
mov
cmpsl
int
out
xlat
and
insb
popa
and
adc
jmp
and
je
das
sbb
mov
jb
jecxz
cmp
and
rcr
fs
pop
dec
repz
cmp
mov
rolb
sbb
cwtl
popa
jle
push
cs
loope
dec
mov
mov
sbb
in
fcomps
scas
xlat
mov
jnp
subl
xchg
scas
sbb
xor
mov
mov
std
loope
fists
outsl
subl
outsl
cmp
pop
pop
mov
dec
je
test
movsl
or
test
mov
add
das
test
and
fisubrs
sbb
adc
aad
pop
icebp
cmpsl
fmull
xlat
std
and
fsubs
dec
sahf
pop
xchg
xchg
lds
mov
xor
jge
daa
sub
pop
cmpl
movsl
sarb
mov
sti
aad
pusha
mov
pop
testl
gs
aaa
in
push
inc
push
dec
dec
scas
xor
out
xchg
add
or
jp
sub
arpl
cmc
pop
leave
xchg
xchg
pop
sbb
loope
bound
jnp
or
jmp
mov
jae
lods
popf
cmp
fs
dec
ss
arpl
test
mov
pop
jbe
pop
or
mov
jg
cmp
js
inc
sub
ja
xchg
jmp
repz
sbb
adc
repnz
test
aam
mov
cld
data16
leave
push
jg
hlt
inc
ss
and
mov
fldl2t
popa
lea
pop
outsb
addr16
pop
xor
lods
mov
js
inc
and
adcb
dec
and
in
xchg
or
push
mov
fs
inc
loope
xchg
adc
dec
inc
pushf
adc
pushf
pop
out
in
sub
clc
push
fwait
rcll
call
mov
pop
pusha
and
push
pop
push
jnp
sbb
jecxz
jns
inc
jnp
jnp
or
stos
sbb
fsubs
imul
inc
inc
insl
and
mov
and
in
sahf
cwtl
dec
icebp
lock
dec
lret
and
jl
sbbb
fwait
cmpsb
repz
in
xchg
gs
rorb
std
mov
mov
xor
sbb
stos
divl
or
cmpl
xchg
xor
cmpsl
aaa
pop
push
push
xrelease
sbb
scas
mov
sbb
adc
push
shr
jle
push
das
xlat
fwait
xchg
xor
xchg
xor
cmpsb
jle
ret
sub
andl
jmp
loope
mov
lock
sbb
outsb
push
scas
imul
sub
ds
add
sbb
xchg
cmp
push
jp
cmp
add
mov
test
outsb
cmp
repz
cmpsl
adc
mov
aad
adc
mov
jl
mov
xor
sub
mov
lcall
fwait
test
push
mov
or
clc
pop
pusha
stos
rcll
jl
mov
or
mov
in
mov
imul
pusha
adc
sbb
cmc
mov
popa
push
sub
xchg
adc
shlb
loop
inc
pusha
cmp
mov
ret
outsl
jge
jno
mov
adcl
cmp
enter
loopne
sub
and
dec
sub
cmpsl
call
arpl
sbb
cld
test
adc
int
aas
pop
ret
and
mov
into
mov
inc
adc
shrb
test
mov
mov
fldenv
xchg
mov
push
or
jae
insl
pop
aas
aaa
in
movb
inc
push
sbb
aam
mov
jb
fidivs
mov
daa
loop
test
jbe
and
pop
cmc
xchg
addr16
push
lahf
sub
or
push
xchg
jnp
cwtl
out
in
shll
ror
adc
jns
out
sti
pop
cmpsl
mov
aad
mov
or
mov
in
ja
andl
lret
mov
es
xlat
add
xchg
jb
and
push
outsl
cmpsl
or
ret
jbe
mov
scas
daa
sub
sbb
out
ds
push
rorl
test
pop
add
mov
cmp
add
shl
fdivl
inc
mov
mov
arpl
lcall
cmpb
push
bnd
ja
mov
aad
mov
int3
and
dec
xor
push
xor
lahf
dec
pushf
adc
push
je
rorb
dec
jl
and
mov
mov
aaa
outsb
inc
jecxz
mov
stos
fcmovb
sbb
js
jne
dec
and
pop
or
pop
cltd
loope
push
jle
mov
xor
mov
sti
jl
fmuls
in
std
int3
fisttpll
mov
movsl
faddp
mov
int
add
and
xor
pop
imul
ficompl
pop
cltd
sarb
sub
xor
daa
into
dec
mov
insl
pop
sahf
mov
stos
or
nop
movsb
mov
mov
int
mov
push
ja
push
aaa
lock
rclb
dec
add
inc
sarb
outsl
inc
mov
jge
ret
mov
cmpsl
dec
push
push
loopne
int3
je
leave
clc
dec
test
repz
sbb
push
out
orb
popf
cmp
icebp
test
lea
pop
inc
int3
mov
mov
lret
insl
mov
push
ret
mov
shl
cmp
and
aam
push
lcall
in
loope
iret
frstor
jp
sub
aaa
pop
leave
xor
push
push
cmp
mov
and
xor
subl
shll
outsl
popa
mov
sub
in
or
cli
sub
ja
xchg
cmc
mov
adc
aaa
sbb
je
call
mov
inc
in
xor
les
ds
cmp
ljmp
push
rolb
test
lods
cmc
xchg
jmp
jne
loopne
add
shrl
mov
ss
xor
jnp
add
fs
notb
pop
add
or
inc
pop
test
sbb
lods
and
out
cltd
cld
pop
test
sub
ljmp
pop
test
and
dec
icebp
test
pop
loop
adc
adc
incl
cmc
gs
xchg
dec
dec
sahf
roll
enter
inc
jae
inc
pop
test
mov
sub
or
mull
shr
js
fmull
ljmp
fidivrl
fimull
dec
cmc
pop
inc
arpl
mov
sbb
mov
mov
cs
mov
repnz
push
jl
push
lods
sbb
pop
pop
je
lds
push
rep
sub
cltd
pop
jge
jge
std
gs
or
sbb
std
lret
out
test
mov
cld
loop
sub
push
int
lret
test
stos
cs
adc
test
pusha
int
and
test
fst
shrb
mov
fwait
add
std
pop
dec
rorl
jae
ficompl
lods
jne
mov
out
out
pop
in
fldcw
push
icebp
xor
int
mov
jae
push
sub
cmc
xchg
lret
jecxz
jmp
imul
lock
aad
aad
mov
aaa
pop
rorl
stos
mov
pop
adc
push
les
idivl
insl
sub
xchg
inc
std
or
push
nop
gs
aam
push
sbb
push
xor
fldl
cs
xlat
loop
cs
call
pusha
clc
and
clc
and
jmp
imull
bound
aaa
jmp
bound
ds
cld
push
mov
pop
lret
push
push
addr16
lret
imul
in
lcall
mov
outsl
sub
sbb
addl
push
loop
mov
push
addl
mov
cli
adc
or
repz
push
and
loopne
xchg
das
xchg
sub
dec
adc
adc
jecxz
adc
in
mov
and
dec
mov
mov
cmp
clc
hlt
cld
push
clc
lret
sti
scas
inc
insb
and
inc
cmpsl
sti
pop
jnp
aas
xor
pop
xchg
jl
dec
pop
les
inc
test
out
mov
mov
pusha
rcrb
ja
xlat
mov
sbbb
inc
imul
iret
syscall
call
jmp
insl
dec
pop
outsl
hlt
sqrtps
test
jno
sahf
dec
mov
dec
push
pop
xchg
push
jp
push
clc
mov
rcrl
xor
fisttpl
sti
sbb
insb
fbld
cmp
loope
mov
into
sub
out
mov
mov
mov
mov
sub
mov
rolb
pop
add
add
xlat
add
and
cmp
cmp
and
push
int
lcall
movsl
stc
xchg
je
mov
daa
inc
int
aam
jnp
insb
ds
jb
adc
push
call
mov
shlb
push
ljmp
movsb
mov
pop
fidivs
and
pop
add
jo
nop
imul
jg
xor
adc
xor
jl
adc
or
sub
hlt
in
adc
or
pop
pop
lret
repz
mov
pop
cltd
out
in
adc
shrl
fcmove
or
push
mov
les
mov
imul
or
ret
pop
out
stos
jle
jmp
scas
mov
roll
push
ss
jbe
fdivrs
sub
out
dec
insb
push
test
outsb
rcrb
outsb
js
jb
ljmp
rol
jge
popa
or
rcll
scas
pop
jl
int3
loop
xchg
ret
ljmp
icebp
mov
nop
mov
jne
jg
popa
mov
shlb
into
scas
repz
stos
mov
repnz
test
mov
jg
or
movsb
inc
xorb
cmp
cwtl
in
fsubl
or
aas
cmpb
sbbl
les
mov
push
mov
stos
jg
repz
dec
andb
mov
scas
or
add
fwait
fwait
xchg
data16
ja
jbe
sti
pop
sbbl
test
push
imul
sub
inc
and
shrl
aam
ret
test
insl
arpl
jp
mov
outsb
je
mov
push
xchg
add
sbb
and
in
sbb
lea
or
adc
inc
int
loope
loope
mov
cli
push
loopne
fsts
outsl
inc
lcall
jno
fdivr
pushf
mov
hlt
mov
fisubl
jge
cmp
or
test
sub
test
mov
push
mov
add
sbb
test
scas
cmpsl
ret
push
mov
daa
lret
subb
mov
add
xor
aam
push
pop
pop
mov
xchg
push
dec
mov
mov
in
pop
xorb
sbb
cld
popf
pusha
into
outsb
dec
jp
mov
in
add
cs
arpl
xor
out
mov
inc
jmp
imul
fcom
or
out
push
push
insl
dec
mov
mov
dec
sub
enter
out
jmp
sub
ds
in
xchg
ss
stos
imul
sbb
jno
fnstenv
mov
and
adc
inc
push
out
enter
or
bound
sti
sub
arpl
add
lea
sbb
pushf
pop
push
xor
push
shrb
push
xorl
lret
push
push
loopne
xor
add
in
or
loope
jne
sub
mov
adc
jecxz
aam
xchg
test
aad
imul
mov
inc
add
scas
stc
rolb
testl
ss
jo
xchg
lret
add
cmp
inc
addr16
mov
or
cli
cmp
loop
pusha
cmpsl
in
ror
and
mov
aad
sti
fidivrl
repnz
jne
or
add
clc
js
ljmp
sub
or
xor
loope
adc
das
push
adc
imul
and
mov
ljmp
cmp
lret
movsl
pop
movsl
xor
cmp
inc
mov
shrl
xchg
adc
sub
jge
mov
mov
mov
push
jb
pop
das
mov
stos
adc
fsubl
dec
add
js
aad
jle
xchg
bnd
jbe
pop
xchg
mov
jns
mov
in
sbb
lods
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fsubrl
int3
cmp
or
sbb
lods
pop
pop
stos
dec
mov
sbb
or
cmp
sub
fsubrl
int3
cmp
or
sbb
lods
pop
pop
stos
dec
mov
sbb
or
cmp
sub
cmp
or
sbb
lods
pop
pop
stos
dec
adc
mov
arpl
inc
pop
push
lock
insl
jb
push
les
nop
pusha
xlat
jo
inc
cmc
push
test
xchg
xor
loopne
lock
mov
xor
push
in
cmc
push
test
xor
jb
lock
adc
mov
mov
nop
and
je
adc
loopne
sahf
gs
test
xchg
inc
cmp
pushf
mov
lret
repnz
fcompl
mov
test
lcall
fld
fst
jns
pop
and
sub
inc
shlb
xchg
repz
popf
mov
fidivrl
push
repz
mov
es
jnp
shl
int
fldl
mov
inc
and
cmpsb
shlb
insl
mov
xor
and
xchg
iret
pop
call
rcrb
loopne
mov
test
nop
les
frstor
xchg
aad
adc
out
jns
lods
dec
pop
rorl
xor
pusha
nop
sbb
and
iret
bound
mov
xchg
push
add
jne
add
pop
xor
mov
push
cmc
sbb
add
lock
jp
dec
jmp
mov
xchg
xor
cmp
dec
aam
rolb
xor
xor
pusha
iret
pop
andl
cld
mov
mov
cwtl
and
lock
popa
fistpll
mov
mov
nop
adc
and
pusha
aad
in
cmc
push
test
xchg
xor
loopne
lock
mov
xor
jo
inc
cmc
push
test
xchg
xor
loopne
daa
clc
arpl
cld
aad
adc
cmp
in
out
inc
in
mov
aas
popf
rorl
or
call
insb
adc
mov
or
jl
les
filds
sub
insl
into
mov
cmp
jno
cs
sbb
xchg
stos
mov
pop
mov
repnz
or
aaa
out
outsb
loopne
inc
fisubrl
mov
dec
sub
xchg
test
jmp
stos
push
in
stos
mov
mov
es
cs
testb
jo
jne
aam
sahf
insl
push
popa
stos
pop
jp
stos
orl
cmp
lahf
repz
sti
pop
xchg
cltd
jnp
out
jo
fidivrl
sub
int3
mov
jbe
cmp
ret
cld
and
mov
popa
inc
mov
mov
jbe
add
dec
aam
aaa
jno
call
cmp
mov
jnp
mov
cmp
movsb
cmp
lods
aaa
cli
fmuls
gs
pop
movsl
dec
iret
out
jo
push
pop
and
scas
test
gs
jg
lods
pop
in
imul
and
idivl
fsubs
inc
pop
mov
and
xor
mov
cmpsb
mov
test
bound
mov
aas
and
and
jae
lods
and
ret
sbb
add
lcall
testb
clc
or
push
push
jg
repnz
dec
rcl
das
insb
sub
idiv
imul
and
sub
add
test
jns
popa
mov
enter
mov
xor
mov
xor
in
sub
add
push
dec
int3
add
out
adc
mull
cmp
xchg
inc
arpl
inc
fldt
push
cmpsl
cmpsl
shll
fidivrs
mov
into
jmp
jle
xchg
add
dec
jg
shlb
loope
in
dec
decb
push
lret
pop
sahf
outsl
push
sub
xor
xor
jo
fs
popa
loopne
rcll
insb
mov
and
mov
jp
add
mov
pop
in
jmp
std
sub
cld
sub
jb
jne
mulb
add
sub
roll
addb
sub
push
mov
cmp
xor
or
push
call
and
mov
push
cmpsb
mov
clc
mov
inc
rcrb
fdivrs
rcrb
bound
mov
fcomps
bound
fsubs
sahf
out
test
nopl
sub
push
mov
in
add
and
fcmovnbe
addr16
inc
sbb
rorb
shrl
call
ss
push
or
out
shll
lods
mov
outsl
ficoms
dec
push
ror
push
out
nop
inc
pop
mov
fmulp
jns
and
cld
imul
mov
mov
pop
fadds
mov
mov
inc
push
jge
insb
cwtl
cmp
dec
jmp
jb
cmp
aam
scas
pusha
fldcw
jb
push
xchg
pop
jmp
cld
out
clc
mov
mov
add
aam
push
jne
jmp
dec
movsb
and
aas
test
rcr
add
jl
arpl
xchg
das
dec
sbb
mov
sbb
int3
popf
inc
dec
push
das
das
jle
testb
ss
or
jl
das
dec
in
in
rorb
jecxz
adcb
xchg
mov
int3
adc
imul
sub
push
mov
lret
adc
sub
stos
mov
adcb
dec
pop
adc
outsl
fs
je
fwait
mov
jge
movl
rcrl
xchg
jl
sbb
into
out
add
sub
adc
lods
ss
sub
adc
and
sub
dec
les
xchg
stos
fwait
out
mov
imul
dec
mov
sub
push
sarl
idivb
das
jl
jno
jmp
test
jb
jmp
push
and
adc
test
shrl
ja
adc
inc
xchg
repz
push
push
pop
out
int
push
in
rolb
lods
or
out
jne
xor
sbb
stos
cmp
mov
movsl
mov
subb
mov
jge
stc
pusha
jnp
insb
mov
imul
rcrl
mov
dec
rolb
rcr
cs
jg
in
push
mov
fsts
cmp
adc
or
and
lcall
and
or
popa
test
jae
test
jb
lcall
pop
push
adc
xor
cli
scas
add
cmpsb
pop
pop
mov
jne
lds
mov
jecxz
cmp
xor
hlt
jl
mov
subl
ret
movl
test
mov
or
sbb
inc
fsubl
pop
sub
push
or
fimull
aam
sbb
push
sti
push
xor
lahf
pushf
scas
push
mov
push
dec
sub
xchg
sbb
jg
test
push
leave
lock
xor
mov
jne
repz
pop
mov
cmp
mov
in
arpl
stos
mov
imul
mov
push
mov
test
inc
mov
mov
fisttpll
jge
pop
mov
sgdtl
gs
adc
pop
jo
pop
sbb
aad
out
or
cli
pop
add
sti
adcb
xor
or
stos
andb
popl
jl
adc
sub
popf
lahf
sbb
rcr
dec
or
xchg
and
or
mov
xlat
call
out
das
inc
cwtl
add
pop
xchg
cmp
cli
in
test
outsb
mov
mov
outsl
xor
mov
mov
sbb
fwait
std
ret
mov
add
push
mov
je
adc
pop
insl
mov
fcmove
iret
hlt
dec
fidivrs
rcll
cmp
or
cli
add
aas
outsl
mov
xor
mov
sub
sbb
xlat
mov
das
pop
cltd
test
dec
aaa
outsl
and
jae
mov
mov
aaa
repz
pop
pop
fucomip
les
xor
or
push
sbb
jae
mov
lods
sub
cmp
xchg
loopne
sti
outsb
je
mov
jae
ret
stos
imul
movsl
or
lods
inc
sbb
cltd
loopne
pop
repz
rcl
bound
fwait
mov
std
scas
test
sub
rcr
aaa
jno
incb
add
adc
adc
pop
pop
cld
inc
or
mov
pop
pop
cmpsb
test
xchg
int3
pop
and
andb
jl
mov
push
std
adc
or
push
cmp
or
sbb
sarl
popa
push
clc
js
add
js
test
repnz
and
jbe
mov
push
pop
pusha
aam
mov
cmp
jmp
in
test
cmp
outsl
pop
add
aaa
mov
je
adc
shl
adcl
cmp
push
push
or
mov
mov
rep
xlat
xchg
test
mov
add
out
jns
outsl
jecxz
add
push
aam
or
stc
lcall
mov
ss
enter
pop
sub
jg
cs
adc
sbb
in
mov
sub
stos
jo
sbbl
jmp
add
pop
mov
adc
jecxz
test
add
lea
mov
fmulp
mov
push
and
in
in
mov
jp
push
mov
push
call
cmpsb
mov
or
pop
movsl
mov
adc
daa
cmp
or
xchg
pop
mov
ret
das
movsl
iret
pop
inc
and
jl
mull
out
jbe
xor
pop
and
cmp
ret
xor
fdivr
jecxz
mov
mov
mov
out
mov
or
push
addr16
fadds
cmp
xchg
inc
jl
push
add
pop
inc
scas
fucomi
pop
adc
xlat
jb
sbb
pop
xor
mov
xchg
xchg
push
cmpl
pushf
mov
add
mov
shl
fcmovne
pop
adc
adc
or
dec
mov
jge
sub
loopnew
xor
enter
es
xor
dec
fadds
pusha
rcll
mov
push
and
lcall
add
pop
loopne
and
or
call
sbb
push
sbb
movsl
or
add
out
inc
bound
mov
aaa
ficomps
clc
push
cmp
mov
mov
in
cmp
add
lret
movsl
ret
insl
pop
jge
mul
sub
mov
push
fimull
stos
mov
mul
ds
adcl
add
pop
cmpb
push
jno
je
cmp
xlat
fidivrs
mov
xor
push
push
das
out
jmp
inc
pop
push
jae
lret
xchg
xor
es
xchg
out
inc
inc
aas
fdivrs
xchg
in
loopne
lock
imul
subl
pushf
inc
sub
ror
mov
sub
pusha
lds
jb
int
mov
rcrl
pop
in
mov
jnp
int
ss
sbb
lods
dec
and
lret
movsl
xchg
mov
dec
xchg
sbb
sbb
dec
scas
push
sub
sub
dec
add
sahf
dec
lea
rcrl
scas
repnz
mov
nop
xchg
push
adcl
adc
pop
test
dec
pop
sub
adc
dec
dec
jmp
repz
mov
repnz
jecxz
adc
fwait
inc
pop
test
cmpsb
in
sahf
and
icebp
imul
enter
inc
es
adc
sbb
in
sub
dec
and
mov
xchg
push
lods
sbb
or
add
in
dec
push
push
pop
sub
cpuid
lock
mov
inc
sbb
pop
loop
data16
lock
in
into
out
lods
pop
hlt
pusha
jnp
mov
push
js
inc
xchg
mov
imul
sahf
and
jae
inc
lret
dec
in
outsl
movsl
lods
jne
jp
pop
shlb
clc
sub
hlt
mov
cmc
fsub
mov
sub
rorl
movsb
mov
jle
and
mov
cmp
push
jo
jg
inc
dec
leave
sbbb
or
fisttps
pop
sahf
ja
mov
xchg
jg
shll
add
daa
orb
jmp
popa
loopne
dec
add
cmp
repnz
cli
mov
xor
xchg
shrb
jmp
les
imul
adc
pop
mov
out
push
test
outsb
pop
outsb
mov
add
pop
sbb
and
popa
push
jbe
push
inc
inc
inc
sbb
push
pop
cmp
lret
cmpsl
pop
stc
out
lock
cld
inc
bound
ret
es
ja
jmp
js
sbb
arpl
or
adc
mov
insl
gs
enter
dec
mov
xor
hlt
pop
ljmp
into
sti
xchg
dec
xor
test
add
imul
push
jge
scas
mov
or
dec
into
scas
mov
mov
jbe
dec
outsb
imul
mov
jnp
es
sbb
dec
jo
frstor
push
sbb
mov
cli
sbb
jmp
mov
in
adc
cld
popf
loope
cmc
pop
sub
mov
int
outsb
sar
push
lea
cmc
adc
pop
cmpsb
aaa
or
cltd
mov
in
ret
jge,pn
movsl
stos
or
jb
negl
lods
repz
jnp
lock
lds
inc
inc
xchg
add
in
push
icebp
scas
aaa
test
adc
pop
mov
nop
sti
sbb
sarl
or
aam
out
rorl
add
jns
xor
icebp
sub
enter
int3
out
insb
mov
lfs
xchg
sahf
fsubrl
dec
add
add
mov
outsl
loope
in
xchg
dec
in
aas
push
leave
cmp
lcall
or
mov
es
je
push
inc
aad
mov
jns
lret
xchg
adc
scas
mov
inc
fisubl
sbbb
std
repz
loop
xor
inc
xor
xchg
sahf
inc
mov
stos
or
lret
sbb
push
cwtl
es
push
aaa
sub
aad
pop
mov
cmp
push
les
jmp
negb
xor
sub
lods
imul
enter
dec
pop
cwtl
aaa
ljmp
sub
jp
or
sub
cmp
in
sti
or
xchg
rolb
mov
adc
insb
xchg
pop
push
inc
outsb
xor
sub
xchg
icebp
fwait
cmpsl
jecxz
es
push
inc
and
xorb
add
mov
lods
pop
mov
xchg
in
xchg
pop
jecxz
jno
bound
xchg
add
fsubs
test
or
xor
fldenv
push
arpl
xchg
fmuls
jns
stc
mov
ret
xchg
xchg
xchg
pop
sub
push
add
ret
push
push
or
outsl
pop
ljmp
or
mov
mov
std
pop
mov
cltd
aam
pop
je
pop
cmc
arpl
int
xchg
xorl
ret
test
loopne
std
es
inc
out
lahf
pushf
xor
adc
cld
pop
mov
jl
add
shll
shlb
popa
insb
push
lock
mov
mov
in
pop
add
dec
mov
fldt
hlt
pop
or
subb
xor
inc
push
push
and
xlat
adc
xor
adc
add
pop
int
pop
or
pop
test
cmc
imull
jg
sub
out
and
sbb
xor
xor
mov
in
inc
push
push
into
add
mov
adc
ret
push
or
movsl
xchg
pop
mov
inc
je
int3
xchg
mov
sahf
and
xor
mov
push
xchg
fadds
and
scas
xchg
mov
add
push
xchg
or
out
scas
mov
arpl
into
daa
add
jl
repz
add
sub
xchg
mov
cs
push
outsb
lea
and
adc
pop
xchg
dec
adc
lcall
mov
out
xchg
in
clc
leave
cmp
push
xchg
dec
int
repz
lahf
sahf
push
hlt
repnz
gs
pop
xchg
jmp
push
pop
rclb
pop
xor
add
or
out
hlt
cmp
and
mov
and
cli
popf
jo
mov
sub
subl
mov
dec
and
push
or
pop
icebp
jmp
mov
pusha
and
mov
xchg
xchg
add
insb
jo
xchg
push
out
rclb
sub
test
pop
sub
andl
in
das
add
xrelease
sub
mov
mov
or
daa
sbb
jb
xchg
lahf
cmpsl
movb
repz
bound
pop
nop
cli
or
movsb
or
dec
js
inc
push
push
pop
jge
daa
push
les
lods
cmp
cmpb
lds
jmp
inc
sbb
adc
pop
addb
sbb
jmp
ficoms
ss
pop
subb
sub
fisttps
fsubrl
xor
or
cs
jo
xchg
mov
mov
arpl
dec
out
sub
dec
cwtl
xchg
cmc
xchg
push
pop
fsin
pop
add
xchg
push
fidivrl
enter
pop
lahf
or
mov
ja
adc
sub
dec
push
mov
jmp
push
and
rcrb
inc
mov
out
loop
add
lea
xor
movl
ret
ret
jne
jo
push
outsb
lds
andl
ds
cld
dec
mov
mov
data16
fildl
push
loop
or
call
push
ror
es
shrl
jae
out
std
cmc
jo
jbe
subb
mov
mov
cmpsl
xchg
loope
lret
out
sub
inc
inc
cmp
cli
lahf
repz
push
insb
fs
push
cmp
out
jl
mov
pop
jne
cmp
mov
in
sub
mov
je
sub
arpl
aaa
mov
sub
ret
test
jmp
xor
jmp
pop
fsubrs
outsl
shlb
inc
sti
inc
xor
mov
jle
stos
or
mov
out
cltd
xor
pusha
cmpb
pop
push
mov
sbb
repz
mov
ret
daa
lods
cli
adc
fisubl
fmul
or
rolb
fldl
scas
imul
sahf
add
imul
and
stos
mov
cltd
mov
xlat
pop
mov
call
inc
xor
mov
pushf
push
fstpl
rcr
dec
out
loop
cmc
mov
pop
or
getsec
add
mov
xchg
fbld
out
jge
movb
data16
addr16
repz
add
icebp
leave
pusha
shrl
outsl
pop
mov
mov
test
fiaddl
pop
lret
sti
pop
lock
lret
ljmp
push
imul
xor
mov
or
mov
arpl
jo
mov
mov
push
outsb
cmp
jb
xor
test
stc
sbb
push
bound
lds
jmp
andb
mov
test
push
mov
mov
jmp
or
jl
test
mov
enter
daa
lret
xchg
xor
xor
xchg
jmp
shl
mov
imul
and
arpl
inc
xchg
xchg
cmpsb
jle
clc
popa
jecxz
lds
aad
add
iret
xacquire
clc
sub
testb
sbb
mov
lods
cmp
or
push
mov
and
lods
iret
dec
lea
call
lahf
jmp
push
xchg
fldl
sub
sub
lods
xchg
mov
pop
push
ret
jne
inc
int3
outsl
call
dec
scas
push
cld
adc
imul
mov
outsl
xchg
cs
ficoml
and
add
test
popf
addr16
lock
pop
adc
cmp
ret
andl
sarb
cmp
cmp
fninit
shll
insl
movsl
push
pop
popa
xlat
sub
loop
cmpsb
adc
inc
or
mov
fwait
gs
mov
xor
adc
stos
xchg
or
lds
cmpsl
jle
or
loopne
imul
cmp
jns
rcrl
lds
sub
jb
cmp
dec
sbb
test
fbld
test
ja
cmp
push
out
sbbb
dec
std
sbb
mov
jge
jns
pop
arpl
jae
les
pop
pop
fstps
outsl
inc
gs
outsl
iret
mov
leave
push
jnp
inc
and
xchg
idivb
dec
mov
dec
movsl
into
jge
or
cld
mov
pop
addl
pusha
mov
imul
outsb
sub
icebp
bound
jmp
rorb
jle
ljmp
mov
dec
out
dec
xlat
je
mov
jecxz
cwtl
cwtl
adc
inc
pusha
pop
xchg
stc
popa
jmp
xor
add
xor
add
int
icebp
je
sub
or
cmovg
and
xor
popa
mov
jmp
jno
add
loopne
push
add
sub
push
enter
jle
ss
arpl
adc
push
pop
arpl
jp
mov
dec
jb
ljmp
push
or
lds
stos
adc
inc
pop
xor
repnz
sbb
cmp
test
and
adc
sub
gs
shll
imul
cld
pop
cmpsl
or
sub
mov
call
lock
dec
lods
into
sti
aam
push
or
fstpt
inc
enter
cli
pop
push
roll
add
push
sub
cmp
loope
aad
iret
mov
add
dec
xor
lods
sti
push
rorb
sbb
into
hlt
push
lret
jmp
xor
aad
inc
jecxz
lea
jg
out
or
mov
pop
add
mov
cmp
adc
in
lcall
lret
test
adc
stc
enter
loopne
repnz
pop
mov
ret
cltd
mov
stos
addb
adc
xorb
mov
outsl
movsl
xchg
cs
pusha
loope
out
ficoml
shll
xchg
outsl
out
dec
bound
mov
inc
mov
mov
pop
or
outsb
dec
jnp
loop
jge
push
cli
push
fcmovbe
test
mov
clc
dec
addr16
gs
and
pop
add
jae
add
mov
mov
mov
push
dec
dec
sub
add
aaa
in
cld
push
jnp
pushf
ret
push
stos
pop
pop
pop
pop
and
or
out
pushf
ss
sub
add
pop
lods
jne
add
xorb
in
cmc
push
test
xchg
xor
loopne
lock
mov
xor
jo
inc
cmc
push
test
xchg
xor
loopne
mov
add
xorb
in
hlt
push
test
xchg
xor
push
lock
mov
mov
cmp
cmc
daa
repnz
iret
pop
decl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
add
xor
push
push
jp
adcb
movsl
rcl
inc
loopne
lock
adc
xor
pusha
jne
adcb
movsl
add
rol
loopne
lock
adc
xor
pusha
jne
cmpb
movsl
rclb
in
adc
pop
je
xchg
loope
pop
lea
loopne
and
hlt
daa
dec
inc
fwait
test
fidivrl
jae
and
pop
mov
sub
mov
jge
push
dec
sbb
daa
ret
lret
fsubs
mov
jne
pop
nop
aam
add
add
adc
addr16
inc
inc
in
jo
or
dec
aas
mov
lds
cmc
lock
shlb
push
jecxz
xor
shlb
lds
cmp
sub
jecxz
mov
enter
test
loopne
test
cwtl
movsb
nop
rcrb
loope
in
adc
xor
pusha
jne
adcb
movsl
rcl
lock
fs
inc
cmp
inc
add
jb
xor
icebp
mov
mov
mov
divl
pop
inc
xor
adc
gs
shl
aam
lret
mov
mov
pop
adc
pop
pop
inc
or
push
inc
pusha
jne
adcb
movsl
rcl
lock
adc
xor
pusha
jne
adcb
movsl
rcl
lock
adc
pop
bound
sti
pop
xchg
out
ret
sbb
cmp
test
mov
cmpsb
addr16
push
mov
jb
out
xchg
adc
call
adc
movsb
mov
adc
lret
cld
push
mov
add
imul
mov
or
shrb
pop
mov
mov
sub
pop
pop
in
jecxz
arpl
imul
mov
push
jae
movsb
or
dec
mov
lock
mov
imul
xor
nop
or
pop
test
xor
and
arpl
arpl
shrl
das
adc
jmp
jno
adc
mov
push
jmp
mov
jae
inc
dec
lods
clts
cmpsb
add
sub
xchg
mov
daa
into
add
and
testb
daa
and
scas
dec
sbb
xlat
push
pop
daa
mov
dec
test
pop
stc
mov
fdivl
jp
fcoms
push
xchg
add
in
xchg
out
test
jo
in
add
inc
jecxz
inc
aas
leave
outsb
jmp
push
leave
inc
mov
aaa
push
push
loop
xchg
mov
inc
jle
cmc
sub
aaa
or
inc
decl
into
pop
iret
or
xor
test
push
das
xchg
sub
mov
out
jle
iret
push
cmp
inc
fcomp
mov
outsl
mov
push
ds
add
mov
push
pop
or
faddp
mov
pop
jecxz
fstpt
out
scas
xor
inc
stc
jns
in
stos
cmp
mov
iret
adc
xor
or
mov
push
mov
insl
cwtl
lahf
jl
test
pop
xchg
out
sahf
movsb
inc
ret
xchg
arpl
hlt
shrl
pop
cmpb
and
and
or
inc
ja
dec
adc
stos
insl
roll
jle
call
xchg
fwait
fwait
les
fsubrs
cmpsb
jmp
add
jg
jge
pop
xchg
push
mov
pop
arpl
or
or
adc
imul
repnz
cmpl
xor
clc
aaa
iret
pop
dec
fistl
aam
add
add
cwtl
or
or
pop
mov
push
pop
mov
xchg
push
icebp
xchg
and
sti
pop
std
and
lea
inc
jo
mov
pop
and
adc
push
cs
jge
mov
incb
or
sbb
or
sarl
popf
dec
xchg
mov
sbb
push
push
imul
or
add
das
mov
icebp
or
movsb
outsb
faddl
fbstp
push
dec
mov
adc
cmp
test
psubw
stos
xchg
jb
lods
outsl
mov
lret
cmp
pop
inc
sbb
jge
mov
xchg
cwtl
scas
xchg
stc
inc
mov
fmul
mov
repnz
pop
inc
adcb
mov
mov
loop
or
flds
sbb
sub
rcrb
mov
stc
jl
sub
cltd
pop
lahf
or
mov
sahf
andl
inc
mov
orl
mov
lret
or
popa
je
push
in
push
fmulp
scas
cmp
xor
sbb
pop
aas
sbb
push
mov
pop
pop
movq
mov
ret
sahf
and
pop
and
out
add
xchg
pop
adc
or
lea
inc
loope
out
inc
mov
and
out
mov
push
push
push
pop
cmp
push
aas
xchg
fists
cli
mov
jle
and
imul
in
mov
out
dec
sbb
test
insb
mov
clc
cmp
dec
fmulp
jmp
push
jbe
mov
push
jb
mov
enter
cmp
into
les
jnp
test
movsb
push
nop
outsb
addr16
or
mov
repz
aam
rcrl
push
mov
jg
in
mov
pop
mov
mov
sub
insb
and
pop
adc
mov
add
out
out
in
test
adc
inc
lcall
mov
stos
mov
out
arpl
lds
in
inc
aam
jmp
repz
jmp
dec
sti
in
inc
lret
and
shll
ds
adc
movsb
sti
andb
ret
push
ss
pop
sahf
jmp
jo
les
dec
pop
fsubrl
fimull
cmc
int
push
ror
stc
stos
out
popf
pop
or
cmp
mov
mov
aas
inc
jnp
test
cmp
fildll
jne
scas
mov
aaa
nop
aam
or
icebp
or
fidivl
scas
aad
xor
dec
pop
shl
je
in
mov
int3
lahf
add
jp
dec
aaa
lods
add
xchg
inc
push
shlb
fwait
cmp
inc
scas
fsubrs
dec
mov
jns
xor
xchg
js
js
lods
mov
cmp
fidivrl
push
nop
mov
push
movsl
shrb
xor
inc
dec
sub
hlt
push
loopne
fbld
or
adc
sti
faddp
jecxz
push
into
aas
add
inc
pop
xor
xor
movsl
sar
mov
in
mov
xchg
lods
repnz
push
imul
mov
inc
imul
and
mov
fninit
push
nop
add
or
inc
or
add
hlt
cmp
xchg
xchg
sub
pop
rolb
sbb
insb
fwait
jl
mov
loopne
outsl
in
flds
pop
pusha
dec
outsb
mov
cmpsl
add
insb
loop
nop
mov
mov
fwait
sbb
outsl
loope
dec
xorb
fidivrs
stos
push
out
hlt
fsubrs
lret
lret
nop
xchg
loop
mov
push
ljmp
xor
add
mov
sub
xchg
iret
ret
loop
jecxz
adc
adc
lret
adc
adc
movsl
out
dec
loopne
sub
popf
dec
loope
jle
sub
xorl
pop
dec
xchg
pop
sub
mov
or
int3
cltd
shlb
ror
push
fcomps
jne
jmp
and
or
sbb
pop
dec
cltd
inc
fidivrl
mov
mov
push
pop
inc
add
in
lcallw
out
sbb
and
orl
inc
pop
fucomp
inc
cmpsl
add
lock
mov
cmp
pop
hlt
test
in
adc
out
into
arpl
aad
pusha
es
cmp
or
je
stos
pop
pmuludq
add
push
and
sbb
rolb
loope
dec
xchg
imul
sub
mov
xchg
sti
repnz
insb
inc
fsubs
dec
fsubrl
push
insl
pop
mov
push
test
pop
jb
lea
int3
or
ljmp
cs
mov
in
ficoml
mov
xchg
mov
jns
es
movb
aas
mov
repz
dec
inc
cmp
jp
pop
roll
repnz
pushf
sbb
lahf
scas
imul
test
sti
cmc
xchg
nop
sbb
bound
pop
es
pushf
icebp
ja
scas
popl
inc
scas
aam
mov
sti
addr16
sahf
enter
test
aad
insb
xor
dec
jns
out
shlb
push
in
je
mov
cmp
jecxz
sub
sub
cmpsl
aad
add
mov
dec
cld
in
mov
outsl
movsl
cmpsl
aas
arpl
movsl
ljmp
fdivrl
pop
pop
adc
dec
fwait
ret
adc
xor
add
decl
fmull
push
mov
sub
inc
fadds
add
jo
jno
out
arpl
mov
lret
sub
or
ret
mov
xchg
sub
les
jg
sub
das
xchg
imul
push
mov
sub
jmp
outsb
adc
and
popf
pop
cwtl
add
adc
lock
sub
adc
shrb
xor
fs
jns
mov
or
adc
int
jle
lea
imulb
aaa
adc
clc
pop
lock
cmp
icebp
sub
in
scas
dec
dec
xchg
loope
add
or
scas
sub
sub
jmp
mov
xchg
dec
jnp
lret
hlt
push
lds
ds
pushf
cmp
shlb
outsb
and
sbb
push
mov
or
inc
mov
mov
mov
xor
dec
sbb
aaa
lret
adc
or
mov
jnp
xchg
pop
in
stc
es
repnz
fnstcw
mov
lret
pusha
mov
hlt
pop
mov
jo
push
andb
sub
pop
int3
arpl
adc
xchg
arpl
jae
xchg
aas
xchg
add
in
and
xchg
mov
push
insb
sub
mov
and
lea
sahf
aaa
push
je
shrl
sarl
sets
dec
push
lahf
mov
lret
mov
sub
sbb
pop
enter
cltd
xor
push
shr
cmp
out
sub
shll
mov
lock
stos
xor
jecxz
dec
sarl
push
aaa
cmp
jge
ja
mov
push
fldz
daa
add
xor
pop
ja
repnz
and
movsb
outsb
aas
jl
pop
pop
das
aad
rolb
in
add
and
cmpl
lret
in
in
pop
adc
push
xchg
xchg
ret
imul
dec
and
pop
xchg
xor
hlt
mov
or
sarb
jne
test
inc
jbe
es
scas
xchg
mov
add
sub
jo
lds
movsl
xchg
clc
jns
sub
sbb
inc
adc
gs
sub
cmp
out
adc
push
dec
jae
sahf
imul
jno
adc
subb
jp
xchg
pop
imul
cmp
mov
push
out
jecxz
gs
xchg
or
mov
inc
hlt
fcompl
sbb
fs
rcll
sub
pop
cli
gs
ja
jl
fldl
dec
or
pop
inc
imul
pop
sub
nop
aad
cltd
push
xor
test
mov
adc
loope
jo
lret
arpl
dec
mov
inc
xor
lods
loope
dec
fs
scas
sti
popf
fidivrl
xchg
push
xorl
shrl
mov
xchg
xchg
jmp
je
mov
push
sbb
stc
into
xchg
in
ret
or
test
mov
arpl
xor
test
fdivl
and
xchg
xchg
arpl
dec
fildll
shrl
and
lahf
movsb
xor
mov
mov
dec
pop
dec
fisubrs
shl
xchg
push
adc
stc
adc
pop
cld
notl
sub
das
mov
nop
mov
pop
sub
jg
lahf
ds
lahf
push
ds
sub
xchg
push
dec
cld
xchg
es
mov
popf
inc
hlt
sub
iret
push
jmp
daa
or
into
mov
insb
idivb
inc
dec
sub
fildll
push
adc
push
dec
add
mov
ret
jns
imul
xor
fs
xchg
das
mov
popf
push
icebp
mov
add
movsl
adc
aam
and
push
mov
imul
out
xor
push
daa
test
mov
jo
cmp
je
cmp
repz
lret
push
ja
and
hlt
xchg
or
dec
add
fbstp
jp
sarl
xchg
mov
inc
push
dec
sbb
cwtl
xor
cmp
mov
push
addb
loopne
mov
jp
mov
or
insb
dec
push
inc
data16
sub
xor
mov
scas
stos
filds
xor
xchg
cltd
push
jbe
stos
iret
sub
and
sti
popl
pop
popa
adc
int3
cmp
jmp
das
aas
idivl
xor
push
loope
xchg
mov
loopne
in
mov
test
leave
xchg
dec
aaa
bound
out
nop
loopne
pop
mov
ret
push
daa
lcall
in
mov
add
nop
sub
int
push
inc
std
in
push
dec
aaa
lret
inc
sub
mul
cli
lcall
daa
clc
mov
cld
ss
pop
mov
addb
mov
mov
jb
mov
aad
movsb
pop
jmp
cmp
mov
jle
mov
mov
mov
xchg
xchg
and
cmp
imul
pusha
jl
pushf
cld
or
jecxz,pt
push
xchg
sar
push
std
sub
in
jg
inc
stc
hlt
imul
mov
mov
sub
and
xor
test
mov
leave
lret
jne
jl
dec
sar
xchg
jle
push
xor
sub
rcrb
rorl
xor
and
sbb
shll
mov
nop
xchg
xchg
loopne
fcomps
ds
aam
sti
shll
jge
cltd
push
and
sbb
jb
daa
and
in
js
mov
inc
mov
ds
fwait
div
icebp
jmp
popa
xchg
mull
adc
scas
por
ljmp
imulb
push
inc
stos
lret
pop
sub
shrb
mov
or
stc
and
mov
int
push
jl
xor
dec
pop
inc
or
mov
mov
dec
inc
mov
mov
mov
rcr
and
cld
js
rcrb
lcall
xchg
jno
adc
jg
jno
jne
out
fisttpll
out
cld
cmp
je
sbb
lahf
data16
sub
xor
test
pop
xchg
out
inc
je
push
cltd
mov
mov
xchg
cmp
push
loop
xchg
cwtl
mov
jno
mov
jecxz
mov
shll
jecxz
cli
jns
dec
loope
pop
in
mov
mov
movsb
jg
ljmp
push
sbbl
mov
xor
sub
sbb
lahf
xor
push
incb
mov
cmpb
push
push
scas
rorb
mov
out
arpl
dec
ror
aam
sti
pop
cld
arpl
sub
mov
scas
adc
dec
rorl
and
sti
out
and
or
mov
fs
ret
sbb
inc
mov
mov
push
pop
outsl
and
divl
dec
pop
ss
add
mull
ja
mov
pop
cmpsb
fidivl
dec
scas
xchg
and
jo
sbb
daa
fwait
scas
push
mov
inc
cmp
fists
push
jle
lret
sbb
mov
mov
fs
xchg
inc
test
es
push
popf
sbb
adc
xchg
fdiv
fisttpl
scas
loopne
jns
mov
popa
push
mov
lods
inc
inc
scas
jge
insl
mov
test
fdivrl
push
inc
dec
insl
sbb
sub
dec
loope
sbb
iret
inc
adc
add
pop
cs
dec
dec
movsb
ret
loope
nop
mov
loop
jg,pt
lret
aaa
pop
cmc
xlat
or
addr16
xchg
mov
add
push
or
ja
cmp
stos
push
xchg
out
int
mov
jns
mov
test
jg
mov
add
inc
mov
jnp
sub
and
jb
sbb
pop
sub
or
cmp
xlat
jns
sbb
add
mov
mov
xor
push
insl
notb
movsb
sub
int
and
add
sahf
insl
push
pop
push
mov
lahf
adc
add
dec
jge
shll
dec
xor
pop
fcmovnbe
daa
ja
iret
stos
xchg
bound
arpl
gs
divb
jmp
out
jg
xchg
insb
xchg
scas
jmp
xchg
mov
xor
lret
ds
xchg
mov
xorl
lds
and
test
adc
daa
and
bound
add
rep
jae
xchg
int
movsb
push
push
dec
xlat
sub
scas
jmp
inc
sbb
sahf
bnd
cs
push
mov
add
out
repnz
mov
xor
mov
xchg
int
leave
jle
idivl
das
mov
orb
pop
xor
mov
jae
pop
add
popf
cltd
push
xchg
xchg
and
test
sbb
lret
xchg
xchg
and
je
cltd
mov
pushf
mov
mov
mov
lods
in
mov
mov
mov
mov
mov
repz
clc
inc
jns
inc
ret
and
xchg
movsl
mov
and
or
cmp
sbb
jo
in
aaa
movsb
ret
xor
dec
jmp
inc
cs
aaa
iret
out
xchg
adcb
jae
sarl
scas
fiaddl
inc
cmpsl
adc
jno
outsb
jmp
push
fs
rcrb
dec
insb
cmp
or
stos
arpl
pusha
ss
fcompl
mov
cwtl
mov
add
mov
pushf
inc
cmpsl
and
and
in
sbb
leave
out
cmc
cmpsb
inc
push
ret
dec
pop
xorl
out
data16
pushf
xor
mov
cmc
hlt
push
jo
mov
pop
or
int
gs
cld
aaa
out
jne
aam
mov
out
movsl
dec
cmp
inc
jnp
rorl
decb
mov
adc
std
mov
xchg
sbb
enter
pushf
inc
inc
mov
cs
sbb
and
mov
ret
and
subb
push
mov
fisubs
loope
aaa
jno
mov
jmp
stos
inc
lea
and
cmp
and
test
out
test
fldenv
jle
je
aas
jl
mov
out
cmp
lods
push
push
jle
jne
cld
out
inc
shll
mov
push
xor
fmull
xor
mov
test
add
addr16
int
ja
fwait
hlt
mov
clc
icebp
out
xor
popf
xchg
scas
sbb
cwtl
xor
icebp
jo
push
mov
xor
push
lea
aam
fs
sbb
cmp
lds
sbb
out
sub
aam
arpl
pop
inc
mov
pop
xor
fwait
xor
xor
mov
lods
je
ja
cmpsb
fs
pop
xor
lret
fists
das
cmc
add
xchg
pushf
ret
repz
xchg
adc
xor
inc
cmpsb
sub
cwtl
jg
lcall
stos
lock
in
push
in
and
mov
ud2
insl
pop
cmc
jo
cs
pop
or
or
xor
mov
ret
or
pop
ljmp
or
adc
and
dec
jno
adc
pop
je
push
idiv
pop
xorb
in
adc
lret
fisttpl
pusha
xchg
in
lods
lret
scas
push
or
out
jns
scas
inc
je
pop
push
dec
and
and
mov
xor
jge
dec
filds
pop
adc
fdivrl
inc
outsl
sbb
test
gs
push
cmpsl
sub
xchg
sbb
movsl
cmc
fs
lret
popf
mov
scas
sbbb
sbb
add
adc
in
fists
fiadds
arpl
pop
jae
jb
add
pusha
lods
mov
jo
loopne
call
push
push
jp
mov
mov
mov
and
dec
js
xchg
and
jne
cld
sbb
fisttps
xchg
fdivrl
test
or
mov
cli
shl
pop
adc
lods
pop
gs
into
inc
insl
sub
dec
insl
inc
push
popa
adc
pushf
insl
pop
lcall
ret
or
les
das
and
cli
or
shll
lret
sub
jmp
sbb
sub
push
jg
xchg
into
movsb
xchg
jmp
fisttpl
xlat
idivb
pop
sub
data16
rcrb
xchg
push
mov
and
sahf
adc
dec
jp
add
cmp
and
daa
mov
movsl
in
mov
mov
popf
add
in
or
cmp
popa
fwait
inc
push
stos
cltd
push
xchg
cmp
gs
aaa
jge
xchg
int3
shlb
push
jb
push
adc
adc
ficomps
inc
jbe
jae
and
daa
xchg
dec
ret
jno
pop
fisubs
fwait
jbe
push
adc
insb
pop
and
adc
sbb
mov
push
sub
repz
aam
std
xlat
sbb
mov
pushf
fnstenv
sbb
pop
inc
fistps
repz
hlt
adc
jle
and
and
jecxz
fs
add
push
in
jae
pusha
cmc
inc
test
lret
mov
std
cmp
jecxz
out
insb
dec
aam
and
test
es
rolb
mov
imul
enter
push
imul
and
xor
icebp
fcomip
insb
sahf
push
lods
pushf
xor
push
das
push
inc
in
xchg
shlb
stc
out
mov
notl
mov
jb
jmp
cmp
mov
bswap
sub
sbb
ja
cmpsl
pushl
push
xor
fs
sbb
mov
fs
push
jmp
pop
mov
lock
xor
and
jge
mov
add
rcl
or
cmc
xor
loop
inc
fidivl
add
outsb
loop
ja
xor
cmp
xchg
bound
aas
push
pop
stos
lds
pop
cmp
or
sub
daa
in
nop
push
or
sub
call
and
les
add
inc
push
push
inc
pusha
jne
adcb
movsl
rcl
lock
adc
xor
pusha
jne
adcb
movsl
rcl
lock
adc
xor
pusha
jne
adcb
movsl
rcl
lock
adc
xor
pusha
jne
adcb
shlb
or
mov
xor
xchg
xlat
loope
roll
xor
jne
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
xor
mov
sub
icebp
mov
and
cmp
jo
xor
bound
lods
sarb
xchg
rcll
ret
ret
in
enter
and
popa
std
lret
inc
repnz
popf
fisttpll
scas
loope
je
leave
and
rclb
cltd
adc
jne
popa
add
add
mov
mov
inc
jmp
jne
adc
mov
add
les
xchg
sub
rol
jp
xchg
lock
stos
mov
into
ficoms
test
scas
dec
xor
loope
rcll
js
stos
inc
icebp
inc
ficoms
adc
fiaddl
scas
sub
xchg
or
jp
xchg
cmp
mov
bound
stc
and
and
mov
cmc
xchg
xchg
loope
icebp
movsl
shrl
add
popa
or
cmp
addl
test
cmp
push
adc
and
push
cmp
stos
les
jmp
test
mov
push
dec
gs
xor
add
pop
push
mov
repz
hlt
int
xchg
icebp
movsl
shll
add
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
xor
fstps
xchg
xchg
xchg
addb
das
cmc
lds
adc
push
mov
rolb
cmp
and
mov
orl
pop
mov
adc
popa
mov
nop
mov
mov
mov
push
jns
hlt
popa
pushf
jo
aas
dec
jmp
mov
jo
ss
sbb
out
lcall
push
push
divl
lret
lcall
cli
push
add
lret
shrl
mov
ss
xchg
scas
mov
inc
xchg
sbb
stos
push
adc
sbb
sbb
xchg
fisttpll
out
sbb
push
add
fcompl
xor
inc
cmp
std
jbe
icebp
mov
orb
shll
jl
addr16
repnz
mov
mov
cltd
mov
sub
sti
dec
inc
push
stos
mov
dec
iret
adc
rcrb
cmp
mov
lea
xor
cmp
cld
aaa
shrl
sub
add
xchg
ret
mov
jg
clc
mov
fwait
jo
pop
xchg
push
std
cltd
push
lahf
push
aam
push
aam
and
leave
and
cmpsb
sahf
jge
gs
adc
ds
out
sbb
rclb
iret
jl
xor
repnz
jmp
mov
mov
test
xor
cmp
and
add
mov
lock
movnti
and
pop
xor
push
and
rdpmc
movsb
pop
push
mov
repz
sbb
cmp
hlt
add
in
sbbb
mov
pusha
and
ja
in
dec
dec
push
je
mov
pop
shl
pop
sub
pop
repnz
mov
jmp
adc
sbb
stos
push
sbb
push
and
aaa
add
cmpsb
ret
xor
or
dec
stc
lea
je
insl
push
cmp
jg
imul
sub
iret
cmpsl
mov
int
sub
out
pop
mov
pusha
cmpsl
aad
push
xorl
cmp
add
movsl
cwtl
mov
aad
daa
lea
xchg
inc
xlat
stos
dec
xor
sbb
pop
push
fsubrl
insb
ret
mov
push
sub
jmp
mov
cmp
mov
iret
sti
enter
xor
push
dec
and
xchg
add
jecxz
scas
mov
xchg
mov
push
push
and
das
addl
sbb
pop
pop
xchg
sbb
in
mov
leave
mull
xor
imul
test
or
add
roll
icebp
int3
cmp
lret
orl
pop
nop
jp
xchg
js
adc
inc
jg
jno
inc
mov
hlt
dec
dec
xchg
mov
jp
inc
xor
mov
aaa
cmc
sbb
in
decb
mov
cmp
daa
mov
mov
sbb
mov
jae
push
lds
or
cs
inc
push
call
mov
sbb
jne
scas
inc
add
cmp
mov
jae
xchg
fwait
adc
insb
mov
xchg
lods
sbb
push
js
outsl
or
pop
cmp
out
call
inc
jl
cwtl
cmc
js
mov
adc
inc
add
inc
mov
enter
in
sbb
mov
pusha
je
and
xchg
and
adc
int
xchg
leave
pop
mov
cmp
mov
fs
xchg
jmp
cld
sbb
repnz
outsl
cltd
xchg
xor
push
jno
cmp
test
shl
popa
fidivl
push
fildll
dec
inc
cmp
jp
ret
cli
push
mov
and
sub
push
mov
push
in
jbe
mov
or
jle
aas
sub
outsb
in
and
outsb
stos
inc
into
mov
push
add
movsl
add
in
rcll
mov
push
mov
push
aaa
xor
xlat
jle
xchg
pusha
pop
fists
lods
stos
add
std
mov
loope
jge
inc
jns
xchg
outsl
out
cs
sbb
mov
mov
ss
jne
pop
enter
mov
sub
push
adc
aam
push
pop
ret
pop
xchg
sbb
data16
mov
pop
mov
push
in
push
push
fs
pop
pushf
dec
int
jle
into
cmovns
dec
data16
out
or
movsl
or
int3
lcall
inc
fistl
adc
test
in
inc
push
xchg
rcll
inc
aad
outsl
jp
andl
inc
call
pop
aas
mov
lods
fwait
les
pop
push
cli
loop
test
jne
lret
and
mov
xchg
pop
cmp
xchg
ljmp
ficoms
xchg
sub
add
sbb
nop
aas
cli
les
cmpsl
aad
testb
loope
mov
lods
cmpsb
add
dec
enter
lahf
hlt
or
xchg
lret
and
mov
mov
pop
int
pop
mov
cmp
mov
add
add
fadd
mov
jne
push
mov
xchg
pop
mov
fcoms
rorb
mov
sub
les
ficoms
jle
jmp
inc
jbe
xor
or
xchg
jno
mov
into
je
mov
popf
mov
cli
cli
mov
clc
stos
sub
add
xchg
aam
mov
out
int
jle
pop
stos
sub
mov
jge
stos
push
xor
lods
mov
movsl
movsb
or
dec
shr
popf
xchg
enter
iret
cmp
xchg
test
or
je
imul
xor
in
pushf
rcll
jge
das
imul
mov
mov
xor
or
loope
stos
cmpb
jle
xor
mov
cmp
dec
sub
sub
loope
sbb
xchg
test
mov
jl
jg
lods
cli
sbb
sub
xor
mov
push
ljmp
dec
in
int3
mov
sub
jg
cmp
es
xchg
or
inc
sbb
mov
gs
mov
xor
inc
xchg
stos
xor
xchg
in
addr16
fnstcw
sbb
pop
xor
scas
push
adcl
jp
cli
jnp
fidivl
lds
push
pop
rcrl
in
gs
inc
mov
repz
xchg
ja
negl
jg
xchg
enter
sbbl
dec
scas
enter
aam
push
cmpsb
inc
jnp
ret
push
ds
scas
mov
lods
stc
xor
or
fcoms
pusha
xchg
movsl
cli
push
push
cmp
insb
vrcpss
test
xor
cmpsb
and
xlat
inc
pusha
pusha
sbb
inc
out
aaa
push
jecxz
or
xor
adcb
jp
mov
jne
xchg
jg
jno
sbb
inc
jnp
lods
decl
and
imul
xchg
hlt
fidivs
inc
mov
sbb
jns
mov
aaa
aas
enter
and
or
out
pop
lahf
mov
pop
scas
les
out
xchg
xchg
push
ljmp
daa
push
or
ja
jno
mov
xor
and
aad
xchg
dec
mov
lcall
movsb
add
shrl
daa
xor
pop
push
jbe
xchg
out
ret
popf
cld
xchg
pop
mov
lcall
iret
jg
xor
xchg
mov
repz
cmp
bound
sub
popa
jo
adcb
pushf
adc
adc
ja
loope
or
in
shrb
or
adc
xor
out
mov
xchg
loope
adc
mov
adc
and
mov
clc
repnz
repnz
push
xchg
push
ret
orb
adc
mov
data16
aas
mov
outsl
shll
out
nop
mov
ds
shlb
or
mov
imul
popl
push
insb
in
dec
loopne
int
mov
mov
inc
nop
xchg
jno
cmpsb
cmp
in
inc
daa
aaa
xchg
or
dec
jmp
enter
cmp
sub
arpl
inc
out
mov
jb
stos
in
icebp
sbb
ja
or
push
mov
mull
jg
cwtl
pop
mov
push
sub
add
lea
pushf
imul
ljmp
mov
cmp
jl
loope
loopne
scas
popa
out
cmc
sub
incl
add
leave
fldlg2
rol
mov
popf
and
ffreep
pop
xlat
repz
xor
and
ja
or
cmp
adc
or
js
idivb
xchg
test
pusha
or
stos
testb
xchg
movsb
dec
lret
pusha
jae
sarb
loopne
jae
sti
filds
mov
pusha
pop
je
dec
in
pop
sub
test
or
mov
sarb
lods
fcompl
je
mov
ds
lods
xorb
cmpsb
and
add
inc
mov
and
jae
jp
movsl
push
push
jge
jmp
call
push
in
call
scas
add
repnz
inc
pop
jmp
movl
add
outsl
inc
test
mov
mul
push
outsl
fs
jb
icebp
das
xor
add
adc
ja
ljmp
js
dec
popa
repnz
sbb
mov
out
push
pop
sbb
fs
js
shrl
push
xchg
and
add
xchg
lds
leave
call
addr16
js
es
sbb
jmp
and
mov
cmp
fcom
cmpsb
int
and
mov
mov
out
sbb
or
mov
insl
pop
cld
ja
xchg
cmp
mov
loopne
sbb
jmp
or
sub
push
jo
ljmp
lds
adc
call
es
cmp
dec
mov
jns
cmpsb
icebp
and
sbbl
adc
jo
xor
mov
insl
aas
fidivl
add
in
imulb
fnstsw
sub
fmull
sub
inc
movsb
xchg
cmpsb
into
dec
leave
xchg
movsl
dec
mov
jmp
in
mov
sub
aas
jmp
lret
ret
push
mov
jne
daa
cmpxchg
fstps
mov
sbb
jb
mov
int3
movb
outsl
das
and
mov
mov
xor
inc
aas
repnz
daa
or
sub
dec
push
sbb
lock
icebp
andb
inc
jo
lahf
jge
xor
dec
movhps
mov
push
cmc
in
mov
je
cltd
sub
xor
inc
sarl
push
xlat
in
push
cmp
mov
pusha
out
xor
push
into
xlat
loope
mov
jle
sti
inc
pop
jns
stc
lods
or
inc
ds
or
xor
iret
sbb
push
sub
mov
out
roll
daa
cmp
pop
xor
inc
jb
mov
or
xor
sbb
mov
popf
or
mov
push
outsb
out
cmc
lret
push
sub
push
cmc
pusha
out
jle
xchg
inc
adc
inc
cmp
iret
rorb
xchg
ljmp
push
mov
mov
jnp
sub
in
xchg
popl
sbbb
pop
in
inc
mov
dec
xchg
mov
mov
jns
in
and
push
outsb
xor
or
lcall
xor
fisubrs
repz
aam
int
daa
sbb
je
movsb
iret
bound
in
sub
adc
ss
inc
push
adc
dec
push
pop
lret
sub
lock
inc
fnstenv
inc
rcll
loope
lcall
mov
mov
sbb
iret
jmp
imul
mov
cmp
dec
xlat
nop
sbb
jge
pop
test
lods
jle
inc
xor
andl
push
push
insl
mov
mov
mov
mov
mov
mov
loop
jb
or
push
add
or
and
and
cmp
or
outsb
pushf
and
idivl
xchg
mov
sub
cwtl
push
xor
push
jl
mov
cmpsb
lods
and
mov
add
xchg
sti
movlps
mull
dec
insb
outsl
ret
cmpsb
sbb
cmpsl
xchg
dec
lods
pushf
mov
mov
in
mov
dec
mov
push
loopne
test
addr16
or
sub
mov
repz
xchg
out
shrl
mov
cli
nop
xchg
or
ret
push
xor
or
cld
movsl
xchg
jmp
mov
cli
or
jecxz
mov
lods
jg
adc
lods
push
imul
fisubl
pop
sub
out
mov
inc
pushf
rclb
mov
hlt
clc
lods
frstor
bound
sti
loop
imul
or
lret
cld
add
or
stos
push
mov
xchg
ss
or
push
push
pop
insb
mov
cmp
icebp
lret
pop
divb
incl
fcom
test
jl
adc
int3
fstps
add
fistps
loopne
inc
xor
inc
sbb
xor
or
add
mov
sbb
ret
dec
mov
and
fwait
hlt
insb
sbb
stos
mov
pushf
call
sti
cmp
mov
pop
nop
jb
ljmp
pop
outsl
sub
insl
cmpsl
sub
pop
sbb
movsl
movl
mov
dec
cmp
shr
fcomps
jp
cmp
dec
jne
cmp
scas
fstpl
adc
mov
inc
jb
test
mov
movsl
pop
push
in
pop
sarl
jp
mov
inc
movsb
jmp
dec
jp
aad
or
insl
inc
sahf
stos
inc
dec
jle
rcll
ja
pop
test
mov
or
insb
lcall
and
push
aas
jne
push
adc
inc
cli
inc
mov
ds
fldenv
insl
sub
faddl
add
inc
mov
xchg
lods
shl
dec
xchg
fwait
jae
cwtl
insb
mov
mov
out
fstl
inc
out
dec
pusha
fisubl
lahf
add
xor
mov
xchg
add
fs
mov
test
jle
ja
nop
pop
fwait
int3
imul
clc
push
lods
jb
out
lret
xchg
out
xchg
jno
scas
mov
mov
fcmovnbe
mov
push
fwait
out
and
mov
dec
mov
cs
adc
lret
and
or
sti
stc
loop
nop
cli
mov
cmp
xor
mov
mov
sbb
test
mulb
dec
mov
jbe
jae
rcll
mov
lret
incb
mov
cmp
dec
test
daa
or
cmpsl
pop
in
cmp
adc
pop
mov
call
out
cli
cmp
cltd
sahf
adcl
fwait
push
bound
push
rorl
sbb
inc
pop
rcll
fidivrs
gs
popf
mov
or
ret
cmp
cmp
add
inc
push
dec
daa
xchg
popa
dec
das
xchg
pusha
daa
lods
outsl
push
andl
pop
add
in
inc
xlat
cmp
and
mov
outsl
xor
inc
and
sbb
xchg
cli
jns
js
je
cmpl
lcall
pop
shrl
arpl
data16
or
popa
mov
outsb
sti
cmp
push
clc
into
mov
lcall
mov
shll
push
iret
adc
aaa
pop
xor
mov
leave
xchg
mov
mov
loop
pop
nop
mov
popf
push
repz
in
mov
mov
and
mov
rol
mov
push
stos
sbb
pop
jo
out
cmp
pop
aas
call
xor
cmp
sahf
xor
and
mov
repz
lds
fstp
mov
arpl
xorps
jno
int
or
loopne
call
mov
xchg
mov
add
arpl
or
sbb
mov
adc
xor
sub
mov
jle
jae
sub
mov
les
mov
or
mov
scas
cld
dec
sbb
sub
sarl
push
and
pop
aad
cmp
xor
out
das
push
roll
cmpsl
mov
ret
inc
fsubrp
pop
mov
outsl
pusha
cmpsb
mov
cwtl
cmp
dec
xchg
idivb
jle
adc
aam
jbe
scas
stos
sbb
sub
xchg
push
rcrl
popa
cmp
jns
fisttps
jle
push
cs
mov
movntps
inc
pushf
and
in
mov
xlat
inc
loope
movsb
mov
paddusb
insl
cwtl
xor
sub
inc
jg
xchg
leave
pop
dec
lods
xor
imul
shll
mov
sbb
data16
add
test
insl
or
and
iret
insl
shlb
pop
addr16
js
adc
les
loope
push
fs
add
es
scas
xchg
enter
sbb
pop
push
mov
cmpsb
int
rcrb
xchg
sbb
icebp
mov
jl
gs
jns
push
jo
inc
cmpsb
push
push
std
add
loope
xlat
fiaddl
sbb
or
fdivs
sbb
arpl
jl
fwait
mov
cmpsb
mov
pop
repnz
adc
testl
or
xchg
mov
jge
iret
inc
jp
jnp
adc
xchg
in
sbb
jge
mov
clc
lea
xor
dec
enter
mov
cmp
add
mov
mov
adc
push
mov
jmp
js
outsb
fxch
cmp
idivb
test
sub
rorb
popa
cmpsb
movb
inc
in
xor
movsl
dec
stc
cmpsl
xor
ja
imulb
and
pop
inc
adcb
mov
lahf
inc
add
push
xchg
loopne
sub
pop
fisubs
mov
pop
mov
dec
pop
inc
call
es
aas
in
or
imul
push
inc
cmp
sbb
mov
xchg
mov
push
adc
push
movsb
popl
xchg
roll
xchg
and
add
lods
fildl
pushf
and
sub
xchg
xor
mov
mov
mov
mov
cltd
xor
sbb
push
movsbl
sub
add
icebp
inc
mov
sub
and
rorl
roll
out
mov
inc
cmp
jo
sub
jmp
hlt
aad
je
jg
leave
jb
subb
fwait
push
xchg
adc
loope
jnp
jle
mov
call
stos
cltd
mov
inc
pusha
dec
fdivrp
jne
sub
stos
aas
dec
loope
loope
jp
divl
lods
add
adc
popa
test
jne
repnz
leave
inc
sbb
and
mov
or
cs
clc
lods
mov
loop
scas
push
pop
mov
sbb
je
imul
test
dec
add
jecxz
push
sub
mov
fstpl
addr16
dec
sbb
das
jb
or
clc
arpl
mov
popa
dec
lcall
mov
fs
pop
cmp
fsubr
cmp
hlt
out
mov
hlt
ss
cmp
fcmovb
enter
add
out
xchg
cmpsb
mov
repz
jle
stos
hlt
loopne
ljmp
std
xchg
int3
mov
pop
ss
jp
pop
loop
call
inc
or
cmpsb
push
mov
ds
push
sub
ret
sahf
scas
js
push
fbstp
hlt
mov
jne
aam
cmpl
es
jl
add
pop
movsl
rcrl
pop
sub
int3
daa
fildl
add
pop
test
fs
fwait
pop
dec
xor
sub
jb
out
insl
inc
push
insl
mov
or
scas
out
and
repnz
test
jp
mov
xlat
pushf
cltd
hlt
xchg
mov
pop
pop
rorb
icebp
pop
outsl
xchg
mov
add
push
xchg
test
daa
mov
stos
rcll
ss
xor
and
lods
int3
inc
incl
pushf
fnclex
lods
jmp
sahf
jb
sub
xor
adc
clc
data16
mov
sbb
and
sub
cmp
add
shlb
jmp
arpl
lret
fistps
cs
pusha
add
add
jle
xchg
inc
jns
es
mov
cmpsl
lcall
xchg
xchg
mov
out
fwait
inc
out
sub
xor
jmp
cmpl
and
jecxz
fwait
ljmp
je
inc
mov
inc
cmp
sbb
sbbl
xchg
decb
in
out
mov
mov
aam
enter
mov
mov
mov
cld
or
ret
pop
jbe
icebp
shlb
test
pushf
jns
xchg
es
xchg
in
and
mov
out
leave
scas
aad
xchg
stos
frstor
push
mov
jae
sarl
add
sbb
mov
aaa
orb
and
sub
and
les
xchg
cltd
xchg
lea
test
cmp
xor
outsl
sbb
insl
test
lcall
sub
nop
cwtl
pop
push
push
pop
mov
sbb
xor
dec
mov
xor
icebp
movsl
shll
add
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
aaa
push
lds
cmc
xchg
xchg
xchg
icebp
and
and
data16
popf
mov
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ja
fs
push
pusha
inc
jo
add
xor
sub
mov
loopne
lock
movsb
xchg
xchg
mov
mov
inc
fs
cmp
jo
add
adc
add
hlt
shl
mov
lock
in
nop
xchg
mov
xchg
push
pusha
pushf
jo
add
and
nop
rol
mov
int3
rol
sbb
and
adc
into
and
xor
mov
movsb
in
pop
xorb
inc
aam
sar
adc
add
nop
das
push
pop
cmp
dec
nop
clc
lret
xchg
sbb
mov
nop
and
ficomps
aaa
repz
out
shld
pop
sub
or
mov
test
lret
add
jmp
add
cmc
cmp
das
push
cmp
nop
movsb
jo
aad
mov
subb
lahf
fnstcw
mov
aam
addr16
xor
insb
enter
sbb
inc
push
fidivrs
fwait
jmp
xor
pop
xchg
xor
cmp
xchg
inc
xor
pusha
inc
jo
add
and
shlb
subb
sbb
and
pop
inc
dec
fs
inc
add
hlt
mov
leave
mov
mov
xlat
std
shl
aad
sub
cmp
sub
push
loope
push
push
xchg
movsl
mov
aam
mov
push
std
vpmulhuw
add
add
xor
adc
add
hlt
shl
aam
lock
movsb
nop
xchg
mov
fs
push
pusha
inc
jo
add
adc
add
hlt
shl
aam
lock
movsb
nop
xchg
mov
ret
je
mov
push
mov
insl
sar
sbb
inc
or
stos
loope
and
mov
adcl
sahf
or
sub
adc
sbb
lea
iret
popf
shlb
notrack
sub
pop
cmpsl
mov
popa
mov
xchg
mov
jge
inc
test
push
stc
out
xchg
push
cmp
jno
mov
sub
dec
lret
cli
adcb
lods
dec
das
pop
imul
imul
test
and
xchg
mov
mov
add
lds
sysexit
aaa
adc
les
xor
mov
stos
mov
into
mov
js
ret
and
popf
les
dec
push
popa
mov
pop
mov
sub
dec
pop
jno
xorb
cmpsb
push
jnp
adc
dec
sbb
pop
jo
push
sti
dec
adc
xchg
dec
mov
scas
roll
sub
shll
les
fisttpl
fwait
jae
inc
xor
in
add
sti
push
sbb
fadd
mov
fwait
sub
iret
lds
jle
nop
rcrb
bound
shlb
push
jle
in
insb
into
aas
leave
or
stos
mov
xchg
out
mov
fists
imul
test
or
cmp
push
test
ds
sub
test
mov
gs
addl
add
and
sbb
push
outsl
sbb
loop
sub
inc
dec
daa
inc
loopne
mov
rol
push
loope
out
xchg
xchg
jns
orl
rolb
insb
xchg
lahf
decb
jecxz
sti
insb
movsbl
test
mov
stos
out
xor
inc
xor
jp
inc
jns,pn
push
xlat
enter
sub
pop
in
add
dec
call
xchg
xchg
mov
mov
popf
xor
pusha
test
fisttpll
repz
or
add
jl
sbb
push
fldenv
push
push
lahf
test
pop
push
sub
int
enter
pop
mov
scas
adc
sbb
les
addl
imul
or
pop
xchg
add
xor
sub
lret
std
repnz
cmp
out
outsb
push
out
gs
mov
test
shrl
dec
adc
dec
repz
cmp
adc
lcall
orb
mov
mov
xchg
leave
hlt
sbb
mov
rcll
mov
jge
imul
lods
xchg
sbb
or
xor
jl
fwait
repnz
imul
sub
and
into
dec
push
js
dec
dec
or
sbb
stos
and
scas
or
dec
jb
or
vminsd
data16
mov
and
xor
arpl
fndisi(8087
pop
adc
popf
xchg
test
pop
mov
or
enter
cmpsl
jle
xchg
sbb
xlat
loop
dec
stos
lods
xchg
gs
ja
popa
sub
sbb
mov
jmp
jle
push
lea
stos
movsl
pop
je
push
es
push
lock
xchg
cmp
pop
pop
stc
mov
repz
pop
dec
adc
outsl
fsubrs
sub
fldenv
mov
mov
jb
push
and
divb
dec
push
std
js
add
aad
add
test
dec
cmc
jge
stc
lret
shl
sahf
nop
in
pop
push
xchg
dec
mov
push
pop
test
sub
cmp
cmp
lahf
jmp
fs
bound
lret
pusha
and
roll
add
mov
jo
addb
push
sbb
out
push
mov
push
adc
test
dec
inc
push
rcrl
jmp
pushf
xchg
aad
mov
sub
fdiv
mov
jne
ficoml
leave
jle
or
into
mov
testb
ror
xor
sub
fidivs
add
lods
jge
imul
cltd
add
cltd
jb
xchg
fs
push
xchg
jge
pop
cli
js
gs
lods
sub
repnz
xor
mov
lods
std
xchg
mov
imul
imul
mov
icebp
cmpsb
sbb
ret
xor
add
dec
fwait
add
push
imul
ss
insl
jp
negl
roll
lahf
mov
mov
cmpsb
xchg
inc
mov
rcrl
jns
sbb
mov
es
imul
and
out
cmp
mov
xor
mov
lret
xor
enter
sub
ror
das
idivb
xchg
lock
fptan
mov
jbe
xchg
jge
push
popa
inc
mov
jg
sar
ret
lods
fstl
sub
dec
insb
push
jl
shl
push
daa
ret
mov
in
ret
scas
xor
clc
lods
jb
adc
mov
js
and
xor
push
jge
out
arpl
push
dec
sub
push
jp
lcall
jae
lret
rcrl
ficoml
cwtl
push
nop
jecxz
push
insl
dec
mov
adc
scas
dec
xor
stos
ds
out
sub
roll
sbb
inc
mov
mov
pop
ljmp
sub
rcrb
js
ljmp
fsubl
mov
aam
push
hlt
cmp
je
dec
in
shrl
pushfw
inc
push
mov
push
scas
jl
fdivr
sbb
push
lea
mov
das
jns
fsubs
repnz
call
dec
sbb
fnstenv
cmp
xorb
add
push
and
xor
push
xchg
cli
sbb
mov
mov
mov
bnd
sahf
ret
loopne
mov
mov
adc
lock
xor
rcl
dec
adc
ds
mov
pop
inc
js
loopne
cmc
popf
jp
scas
mov
mov
cmpsl
dec
xchg
pop
aam
ljmp
fwait
scas
push
jl
pop
popf
mov
xchg
push
jno
and
push
xor
add
lea
les
or
push
sarb
pop
jbe
movsl
mov
cwtl
lcall
jecxz
push
adc
test
bound
mov
adc
xor
xchg
push
sub
pushf
repz
cmp
enter
cltd
and
fs
push
addr16
leave
sub
lock
adcl
enter
inc
gs
mov
sbb
mov
dec
inc
push
insb
mov
pusha
xor
enter
das
insb
cli
call
mov
stos
sub
fdivs
fldt
daa
adc
fcomps
lods
clc
sbb
push
jnp
outsb
out
push
jle
sbb
aaa
ret
test
fucomi
xchg
cld
shll
mov
sbb
push
xor
cmp
icebp
dec
lahf
out
sbb
mov
mov
hlt
mov
or
cli
lret
mov
dec
add
fs
or
call
jmp
sub
xchg
jno
and
or
hlt
mov
adc
xlat
xchg
jle
cli
mov
loop
loope
sarb
jl
push
sbb
fs
lcall
icebp
mov
insl
pop
imul
push
cmp
dec
add
mov
jle
es
out
mov
negb
mov
loop
mov
push
idivb
xor
pusha
dec
xor
xor
test
inc
jecxz
push
and
les
mov
and
sahf
jbe,pn
inc
int
iret
xor
inc
movsb
dec
cs
push
jg
popf
adc
and
sub
ja
repz
inc
lds
sbb
push
icebp
mov
inc
pop
pop
lods
out
mov
repnz
xchg
movsb
cmp
cs
enter
mov
cld
rcr
adc
jb
jb
adc
pop
sar
scas
sub
xor
insl
movsb
inc
add
sbb
popf
jl
adc
outsl
popa
ret
cmp
jnp
or
movsl
xor
and
or
sub
mov
xchg
xor
in
jecxz
cmp
jnp
outsl
xchg
stos
pop
inc
mov
push
mov
leave
cs
fisubl
mov
stc
jbe
dec
push
add
xchg
sarb
addr16
push
rol
sbb
mov
xor
lcall
outsb
xor
js
andb
jo
in
out
push
das
ljmp
sub
pop
lock
push
addl
mov
jne
test
loope
scas
xchg
ret
lahf
push
iret
pushf
dec
add
cli
mov
jb
jmp
test
out
adc
aaa
or
loopne
cmovnp
out
cltd
mov
mov
mov
data16
and
sub
mov
movsl
xor
imul
lahf
cmp
inc
in
cmp
rcrb
xchg
lret
shlb
mov
lahf
xchg
xchg
push
ss
jae
xchg
jo
pop
dec
je
push
pop
adc
es
mov
fwait
lret
push
xlat
dec
jge
sub
cli
mov
xor
out
pop
jle
ficompl
pop
daa
pop
and
mov
add
and
xchg
lds
pop
fldl
imul
pop
lds
sub
add
js
push
ja
mov
int
test
loopne
ss
insl
mov
dec
cmpsl
pop
xor
xchg
shll
mov
jne
dec
orb
sbb
clc
js
pop
loop
xchg
ljmp
mov
testb
inc
ljmp
xchg
arpl
pop
jge
rcrb
nopl
addr16
or
push
and
inc
pop
imul
or
xchg
addr16
dec
les
cli
lret
mov
inc
out
repz
xor
insl
push
mov
cwtl
inc
cwtl
rorl
or
gs
stos
jle
faddl
rorb
fwait
std
sti
cmp
cmp
pop
sub
ret
fldenv
bound
dec
cmp
adc
test
xchg
inc
test
mov
xchg
xor
mov
mov
ret
xchg
out
jg
adcb
mov
sti
aaa
movl
fcmovne
cld
mov
popf
inc
sbb
xchg
fdivl
mov
or
addr16
dec
mov
pop
cmpsl
clc
dec
in
mov
add
mov
jmp
adc
pop
cmp
cmc
imul
mov
int
cmpsl
mov
adc
scas
mov
xor
into
cs
inc
cli
test
lods
xchg
ss
gs
push
xchg
out
mov
outsb
imul
add
shll
movsl
iret
sahf
dec
add
mov
cmpsl
int3
and
cltd
mov
mov
mov
xchg
scas
in
add
fcomi
je
pop
jg
xchg
mov
jecxz
loopne
or
imul
in
es
movsl
xor
jnp
cli
out
movsl
push
mov
add
mov
pop
outsb
fwait
mov
cld
and
and
aad
sub
xor
push
sub
movsl
sub
ret
sbb
or
lret
daa
lods
popa
add
fsubp
or
jmp
call
or
lods
xorl
sub
sub
in
add
mov
stc
adc
mov
xor
mov
or
les
jecxz
mov
xchg
sbb
test
mov
jns
lahf
cmpsb
int3
jne
js
sti
ret
sahf
cmp
adc
into
aaa
outsb
inc
fwait
mov
push
lahf
iret
lret
aaa
int3
call
sbb
add
push
jg
xlat
mov
dec
xchg
repnz
fildll
mov
stos
jns
and
popa
pushf
loopne
or
aas
and
outsl
incb
daa
ja
sbb
insb
es
xor
mov
std
ffree
and
ds
add
cmp
and
sub
shll
sbb
outsl
fisubs
in
inc
pop
jg
call
imul
bnd
outsb
inc
in
cmpsl
movsb
dec
add
test
enter
nop
sbb
dec
dec
mov
call
ret
es
test
add
shlb
cmp
insb
es
xchg
inc
aaa
pop
jg
pop
jl
cli
dec
pusha
inc
aad
nop
es
loop
xchg
sbb
stos
add
mov
or
ss
pushf
ja
dec
xchg
fs
mov
mov
or
adc
add
fists
hlt
out
scas
push
jecxz
jmp
arpl
inc
andb
cltd
push
fwait
cmp
mov
push
scas
jne
pop
or
push
gs
cmp
mov
sti
and
mov
out
in
daa
mov
in
lcall
jnp
dec
add
xor
pop
test
dec
jg
cmp
pop
and
incb
sub
rcll
test
sub
dec
adcb
or
sub
fs
loop
sbb
insb
cmp
or
jle
movsb
dec
sbb
sub
cwtl
icebp
daa
js
pushf
jl
jb
cmp
insl
or
mov
insl
sub
ja
es
lret
dec
in
jb
pop
mov
cmpsl
cmpsb
sbb
mov
sub
jecxz
mov
lcall
lock
xchg
sub
sub
jmp
hlt
xchg
repz
inc
mov
dec
lret
jnp
xor
daa
mov
fists
inc
push
xor
mov
jecxz
push
push
dec
pop
in
cmc
enter
test
scas
sub
add
and
movsb
stos
push
movsl
cmpl
mov
into
out
punpckhbw
rcll
mov
jge
int
int
insb
xchg
and
js
and
inc
in
inc
mov
jae
pop
jb
out
mov
fnstenv
add
xlat
mov
cmp
xchg
insb
outsl
add
xor
pop
ret
fdivrs
fldcw
mov
loope
rorb
xor
es
subl
pop
les
pop
loop
add
shll
xchg
imul
loopne
shrb
std
pop
incb
fdivp
pusha
adc
sti
not
fimuls
cmp
xor
jno
jge
sub
jmp
push
cmp
mov
lds
jae
xchg
adc
cmpsl
xchg
outsl
pop
outsl
cld
push
push
ja
and
inc
jmp
imul
mov
jae
push
lret
into
rolb
sbbb
incb
pop
pop
jle
nop
lahf
xor
cmp
adc
xchg
dec
sub
cwtl
shl
pushf
mov
sub
pop
dec
mov
das
pop
mov
sbb
stos
aaa
and
sub
arpl
cli
or
mov
pop
insb
or
clc
or
ja
outsb
mov
mulb
js
js
push
pop
inc
push
jae
fiaddl
dec
sbb
cmp
mov
stc
dec
les
cmpsl
movsb
pop
lds
add
sub
mov
test
clc
mov
les
xor
mov
mov
add
inc
cmpsb
pop
xchg
lret
pop
imul
mov
add
hlt
out
xor
int3
mov
das
ret
sub
lods
mov
or
inc
xchg
ficompl
je
loop
test
sbb
cmp
shlb
test
sarb
pop
popf
mov
loopne
and
pop
xor
mov
mov
in
pusha
das
aas
shr
out
push
inc
rorl
icebp
cmp
pop
les
push
mov
inc
rol
inc
mov
mov
xor
xchg
adc
inc
ljmp
arpl
pushf
push
lods
push
mov
lcall
mov
negb
sbb
mov
pop
mov
and
jbe
xchg
test
or
xchg
ret
push
fucomi
or
cmp
shrb
adc
orb
mov
jmp
pop
and
psubsb
sub
mov
dec
ret
push
cli
pop
sti
add
xor
dec
and
add
enter
xor
daa
xchg
dec
nop
popa
add
xchg
adc
rcrl
call
dec
in
sbb
test
lret
lret
adc
pop
sti
xchg
adcb
jb
loop
push
iret
sub
rol
push
int3
xchg
cmpsb
imul
out
mov
mov
mov
dec
ljmp
xchg
fsubrs
outsl
mov
rorb
mov
stos
mov
test
shll
xchg
mov
ror
dec
das
pop
lcall
scas
mov
int3
mov
adc
cmp
cmp
sub
add
inc
jns
add
ret
sbb
aad
ja
aaa
and
adc
divl
in
outsl
fcoms
jmp
cmp
test
mov
div
jle
dec
xor
in
mov
cmp
fs
inc
int
or
cwtl
in
xchg
mov
shlb
gs
adc
inc
xlat
push
imul
les
orb
std
lds
insb
sub
stos
aas
mov
mov
push
out
mov
es
mov
repnz
push
pop
insb
pop
jns,pt
mov
cmp
mov
sub
pushf
sahf
push
js
mov
out
push
popf
stc
mov
stc
mov
fcoms
outsb
adc
pop
push
cmp
aam
subb
test
add
xchg
xor
dec
or
js
cmp
push
imul
ds
inc
lods
stos
pop
adc
xchg
jl
push
mov
cs
test
aaa
inc
lret
inc
xor
call
repnz
enter
push
mov
jge
push
mov
mov
add
mov
push
mov
xchg
negl
dec
stc
add
jge
add
adc
aad
fildll
dec
adc
cmp
bound
ss
xchg
mov
mov
fistpll
clc
adcb
sub
push
adc
repnz
shll
adc
dec
pop
out
pop
ds
loope
and
cwtl
mov
mov
int3
adc
out
or
pop
aam
ficompl
mull
or
mov
cmpsb
dec
adc
test
and
stos
lret
in
pop
insl
ficompl
mov
push
mov
scas
insl
sti
xchg
cmpsb
xchg
mov
sub
lahf
mov
ljmp
push
or
adc
and
adc
sarb
sub
xor
cmp
add
mov
out
fisubrl
orl
jmp
inc
add
rcrl
inc
rcrb
push
aas
cltd
stos
sbb
test
add
adc
mov
shlb
cmc
adc
cmc
out
dec
lahf
sti
nop
inc
mov
sub
sarb
pusha
lea
ret
insb
add
adc
xchg
mov
mov
mov
faddl
inc
stos
sbb
push
enter
js
pop
lahf
jae
in
outsl
cmp
mov
fimuls
in
cli
jnp
mov
int3
rcll
xor
mov
addr16
out
icebp
incl
mov
push
mov
popf
movsl
jno
in
xor
cmpsl
push
sub
es
dec
cmpsb
loop
daa
push
aas
pop
outsb
mov
out
adc
das
mov
add
mov
inc
inc
push
dec
dec
mov
call
xchg
push
loopne
mov
test
shlb
rolb
lcall
dec
int3
in
imul
mov
cmp
dec
arpl
inc
inc
pop
mov
lret
and
enter
ja
mov
pushf
mov
mov
xchg
test
inc
inc
pop
adc
pop
leave
pop
jmp
out
mov
pop
fistpl
call
jmp
daa
sub
aam
imul
mov
popf
mov
pop
or
cmpsb
mov
inc
sbb
mov
mov
imul
adc
pop
loopne
sub
mov
cmc
imul
popa
dec
adc
sbbb
sbb
xor
sub
xchg
push
adc
adc
cmp
call
mov
cltd
shll
test
imul
pop
mov
pop
out
lods
xor
shrl
movsb
sahf
insl
jo
inc
xor
dec
daa
xor
lods
andb
ret
lahf
out
int3
mov
movsb
out
fsubr
mov
aaa
outsl
fisttpl
jae,pt
fwait
shl
int
movsb
clc
pop
mov
adc
sbb
push
in
cltd
ljmp
in
scas
mov
adc
pop
adc
pop
mov
aaa
hlt
fwait
out
inc
fwait
shrb
xchg
shll
subb
mov
or
das
and
mov
jnp
movsl
push
sbb
jno
sbb
mov
xchg
mov
inc
xor
jle
xchg
xchg
ss
add
mov
add
mov
jmp
aam
mov
push
adc
jo
add
adc
add
hlt
shl
aam
lock
movsb
nop
xchg
mov
fs
push
pusha
inc
jo
add
adc
add
hlt
shl
aam
lock
movsb
nop
xchg
mov
push
push
xor
inc
jo
add
adc
les
hlt
shl
and
lock
mov
xchg
mov
cmp
pusha
fs
add
adc
test
hlt
rcrb
jle
les
imul
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
popf
inc
lea
test
push
sub
mov
out
xchg
pop
xchg
mov
inc
lea
std
daa
in
pop
fldl
int
cmp
add
insl
xchg
pop
xchg
mov
pop
lea
std
ds
paddusw
int
add
jno
insl
mov
cwtl
das
ljmp
mov
sub
cmp
sub
fdivrp
cs
pop
js
sbb
pop
mov
mov
mov
lock
into
lds
sbbb
sub
lock
pop
or
push
push
loope
stos
es
dec
cmc
std
sbb
xchg
cmp
dec
jge
pop
cmp
inc
ja
mov
int3
cltd
adc
xor
pushl
popf
ret
push
cmp
jecxz
repnz
hlt
cmp
xchg
and
jo
std
out
pop
and
fwait
js
sub
loope
ds
pop
jg
xchg
cmp
sbb
out
notl
sub
or
sbb
sbb
or
ja
xchg
mov
push
lea
std
cmp
int
cmp
fimuls
xchg
pop
sahf
or
add
lret
push
xchg
dec
lods
adc
push
out
movsl
jae
arpl
adc
adc
sub
addr16
popf
inc
fiaddl
dec
ret
jnp
inc
int
js
inc
xchg
dec
mov
rclb
aam
out
xchg
push
in
push
fnstenv
jmp
daa
in
pop
fldl
int
cmp
or
xchg
pop
xchg
mov
inc
lea
std
daa
in
pop
fldl
int
cmp
or
xchg
pop
xchg
mov
das
pop
sbb
mov
rolb
sbb
leave
inc
mov
imul
add
inc
push
xor
mov
mov
adc
dec
sub
popf
cmp
pop
rclb
pushl
inc
adc
incb
xchg
dec
and
mov
shll
and
das
pop
pop
aaa
lds
jl
loopne
push
movsb
sbb
rcll
pop
in
cmp
push
stos
mov
int
cmpsl
cmp
jb
inc
cs
or
mov
into
dec
stc
stc
cmp
jno
in
loope
ficoml
aaa
jnp
or
cmp
paddsw
adc
and
outsl
mov
lahf
out
adc
xchg
sub
fwait
aam
je
loopne
mov
xchg
add
sbb
push
push
sbb
test
int
subl
test
jae
mov
jbe
push
jno
xchg
pop
sbb
fildl
mov
arpl
in
sub
push
ljmp
mov
sbb
cltd
mov
or
push
daa
sub
mov
xor
add
adc
mov
arpl
icebp
mov
inc
xor
mov
fisubrs
test
xchg
sti
xor
xorb
cld
jae
dec
movsl
adc
lock
mov
mov
push
add
adc
push
cmc
jp
inc
push
xor
addr16
movsl
sbb
fstps
jb
bound
and
daa
lret
pushf
gs
pop
cmp
test
fildl
pop
loopne
dec
jbe
add
lret
xchg
add
pop
imul
in
dec
xchg
pop
mov
cwtl
repz
mov
sub
out
jmp
rcll
push
popf
xor
mov
cmpsb
xlat
fiaddl
movsb
dec
icebp
out
imul
inc
lret
mov
clc
inc
sbb
scas
scas
fidivs
lods
pop
leave
xlat
filds
into
sub
lds
popf
and
rclb
xchg
idivb
lock
cmpsb
lcall
xchg
sbb
pusha
pop
mov
sub
pop
test
nop
scas
cmp
div
push
mov
mov
xchg
sub
cmp
pop
adc
aaa
push
sbb
mulb
jecxz
push
pop
ds
adc
mulb
xor
test
into
or
mov
mov
push
imul
mov
outsl
and
cmp
loop
lds
xchg
jns
shlb
in
repnz
add
outsb
aaa
cmp
sub
push
pop
cmp
repnz
cs
jle
fisubrl
mov
push
and
sub
hlt
and
lods
and
fcomi
jns
dec
or
add
or
cmp
aam
or
gs
pushf
or
push
je
movsl
adc
lret
test
mov
xor
imul
mov
mov
mov
dec
push
sub
lret
pop
inc
out
mov
inc
aam
add
cltd
push
xchg
notb
scas
jbe
push
xor
sbb
sti
and
jl
or
dec
inc
pop
fbld
pop
mov
aaa
cmpsl
ljmp
js
cmc
test
mov
call
jl
jge
push
cs
xchg
cmp
ja
data16
movsb
adc
jle
fbld
clc
add
cmp
mov
dec
sahf
push
inc
icebp
ret
jns
scas
push
es
sub
cmp
data16
addb
inc
xor
or
jecxz
xchg
mov
pop
in
bound
dec
mov
sti
adcl
mov
mov
xchg
xchg
mov
xlat
push
fcompl
arpl
push
aaa
dec
jae
xchg
fists
mov
inc
jg
and
enter
out
mov
add
inc
xor
shlb
mov
or
dec
jnp
adc
imul
mov
es
pop
adc
les
cltd
stos
sbb
jg
sar
jge
fisttps
dec
nop
cltd
std
add
add
decb
jns
daa
outsl
push
outsb
push
mov
dec
jb
cmp
xchg
cmp
pop
fstpl
inc
daa
jg
test
ret
notb
inc
mov
or
pop
inc
add
repnz
ret
or
pop
jle
mov
pop
push
xlat
jb
outsl
cmp
or
mov
sbb
pop
dec
lods
and
out
fldenv
ja
imull
hlt
popa
push
insl
fildl
data16
inc
mov
movsb
xchg
mov
xor
inc
mov
iret
cmpsl
mov
mov
push
mov
idiv
pop
cmp
movsl
dec
xor
jns
jno
pop
jb
out
adc
mov
push
add
jb
insl
sbb
xor
popa
and
jp
cmp
nop
orb
dec
aaa
pop
jbe
xchg
les
aam
dec
dec
mov
add
dec
jno
xchg
jmp
sub
hlt
xor
ret
adc
shll
mov
add
fnstsw
push
jmp
in
bound
lods
pop
xchg
cmp
jb
and
popf
loope
and
icebp
pop
mov
out
xor
cmc
mov
pushf
dec
movsl
test
sahf
insb
jle
sub
imul
push
shrb
in
mov
inc
test
lods
inc
int3
scas
or
pop
push
pop
cmpsb
js
xchg
clc
pop
mov
mov
lock
jge
xchg
push
xchg
jnp
mov
mov
xchg
movsb
or
push
mov
test
mov
dec
js
insl
pop
jns
mov
inc
inc
test
sbb
sub
jg
cmpsb
pop
and
fiadds
das
fsincos
push
xchg
stos
push
jmp
jbe
shrl
lods
push
int
loopne
scas
iret
and
cltd
push
daa
vcvtsd2si
push
enter
hlt
shrb
lret
jb
jp
test
xchg
push
icebp
jecxz
pop
add
repz
rclb
dec
pusha
inc
popf
in
mov
mov
cltd
adc
mov
cmp
mov
xor
stos
ds
imull
push
pop
leave
in
in
ffree
inc
ss
ret
in
cmpsb
mov
mov
jmp
insl
push
enter
xchg
inc
and
xor
inc
insl
mov
int3
mov
lds
mov
xor
pop
out
mov
xchg
mov
div
imul
andl
popf
cs
or
mov
mov
hlt
jl
cmp
mov
inc
movsl
fs
sbb
push
inc
cmc
sbb
stos
mov
in
les
loop
bound
xchg
shrb
adc
dec
sbb
mov
lcall
pop
dec
push
subl
out
stc
pusha
out
lea
imul
jle
and
xor
lock
cmp
inc
clc
mov
dec
xor
mov
or
mov
iret
or
cs
pushl
dec
andl
jb
pop
inc
inc
xchg
xor
shrb
mov
jmp
push
inc
adc
dec
das
pminub
xor
test
ret
adc
fldcw
cmpsl
shl
xchg
mov
dec
fcmovnb
in
dec
push
jo
pop
jg
push
insb
and
mov
repz
xchg
cld
push
and
mov
ret
sub
pop
inc
xor
dec
cmp
xor
fiaddl
jne
out
xor
inc
cmpb
sub
sub
push
lcall
clc
sbb
mov
nop
add
mov
cmp
daa
push
in
jo
mov
out
cmp
in
mov
out
out
add
xor
popa
fs
xor
shrl
and
and
adc
notb
pop
adc
and
iret
loopne
lret
pop
jnp
xor
fcmove
mov
pushf
add
aaa
xchg
mov
xchg
adc
push
adc
mov
xor
jl
jmp
cmpsl
gs
scas
mov
push
loope
lock
cmp
add
mov
pop
gs
bound
cmp
mov
xor
cmpsl
cs
frstor
and
mov
fldl
sub
rcl
inc
adc
pop
scas
rorl
out
inc
in
jmp
dec
and
mov
dec
aad
mov
push
mov
mov
sbb
lret
cld
je
pop
adc
inc
inc
std
xchg
in
and
cli
lret
mov
mov
arpl
jnp
mov
es
add
ss
loopne
movsl
xchg
andb
inc
popa
adc
mov
xchg
ljmp
int
xchg
lods
mov
mov
or
cmpsl
sbb
adc
pop
jb
in
mov
out
dec
xchg
sub
lahf
jne
inc
pop
jp
mov
cwtl
mov
lcall
icebp
imul
xor
xor
dec
inc
jns
lds
sahf
pop
les
adc
andb
insl
mov
rcrl
add
addr16
or
sub
xor
add
dec
pop
repz
or
mov
insl
lret
dec
inc
test
mov
sbb
adc
inc
test
icebp
jecxz
add
mov
push
leave
inc
jp
int
icebp
adc
popa
hlt
mov
inc
popf
xchg
xchg
xlat
cmp
lret
lahf
popf
out
jmp
shlb
int
lds
add
rorl
iret
test
aam
add
push
ljmp
jp
pop
jno
jmp
add
and
call
mov
das
mov
iret
pop
notb
cmpsl
sarb
fistpl
icebp
movsl
jns
std
sbb
and
insb
add
clc
rclb
loope
loop
dec
ljmp
xchg
cmp
fstl
rolb
push
std
stos
inc
daa
lret
shl
adc
inc
cmp
arpl
testl
pop
daa
das
test
fldcw
fwait
xchg
fcmovbe
les
xor
out
out
test
sbb
xchg
xor
ret
ja
cmp
outsl
gs
sti
popa
push
roll
jle
xlat
ja
lods
in
std
jne
jp
fwait
cltd
xchg
inc
aas
cmp
mov
jle
mov
jmp
cmpsl
rorl
in
inc
cwtl
or
test
xor
cltd
scas
out
mov
xor
movsb
mov
in
mov
sbb
dec
loop
imul
dec
sub
mov
push
je
sbb
mov
lret
fucom
std
popf
dec
mov
test
cmp
mov
sub
dec
insl
pop
mov
pop
xor
inc
sub
shlb
out
adc
icebp
into
test
pop
add
iret
jecxz
inc
cltd
pop
insb
lods
test
out
stc
por
ljmp
inc
mov
outsb
ret
xchg
popa
pop
add
je
mov
cmpsl
xchg
clc
adc
les
lds
jp
popa
inc
mov
ss
andb
sub
enter
lods
and
push
adc
leave
jp
stc
push
push
add
fiadds
xchg
loop
repz
push
and
dec
std
movsl
cmpsl
jle
mov
scas
xchg
hlt
xchg
int3
and
or
jnp
sub
ficoms
cwtl
dec
fnstenv
xor
dec
mov
ja
lret
mov
outsl
cmc
in
shll
and
xchg
rolb
mov
or
pop
fcomp
scas
jecxz
icebp
daa
shlb
mov
js
dec
insl
sbb
push
rol
sbb
sub
nop
xor
mov
jo
sub
inc
mov
fs
jns
loop
or
dec
mov
cmpl
mov
fwait
int
lret
movsb
sbb
fxam
push
mov
pop
mov
push
call
int
sub
mov
mov
insl
mov
and
mov
int
out
mov
sbb
rolb
pop
in
lods
pop
lds
mov
cli
add
jecxz
decl
aas
mov
enter
jmp
cmp
ds
stc
loop
dec
iret
in
add
sbb
pop
adc
stos
jb
lret
push
adc
cmc
pop
mov
arpl
cmpb
addr16
subb
jbe
xchg
incb
adc
xor
cmp
ret
test
insb
ss
dec
push
jb
decl
test
cli
leave
push
pusha
dec
xor
ss
and
adc
cmc
push
outsb
scas
ds
xchg
dec
inc
add
test
fcmovnu
cmpsl
enter
xorl
push
pop
cmp
aas
xlat
imul
and
arpl
jnp
sti
xor
pusha
and
push
sbb
imul
ret
xor
lret
insb
mov
mov
rcll
cmp
sarl
sbb
jge
adc
pop
cmpsl
mov
mov
movsl
lret
stc
negb
in
stc
sub
add
mov
jo
cld
xchg
xor
jbe
inc
sbb
or
cmpsl
ja
pop
push
and
push
and
ret
mov
and
mov
outsl
out
jnp
stos
jmp
mov
push
fmuls
insb
repz
and
je
mov
xchg
pop
dec
mov
int
sti
cmp
outsb
outsb
pop
ds
mov
push
in
xor
adc
test
pop
push
push
inc
sub
dec
xor
out
imul
or
adc
xchg
pop
push
xchg
sub
call
loope
xlat
dec
faddl
sub
out
hlt
adc
call
enter
clc
cmpsb
inc
js
fidivrl
mulb
adc
cltd
jb
sti
nop
pop
mov
xor
sbb
enter
dec
test
cwtl
cltd
pop
dec
push
xchg
data16
imul
xor
sbb
sbb
insl
rclb
xchg
and
outsl
inc
in
push
mov
mov
cld
jg
imul
add
jne
stc
xor
iret
jnp
bound
and
mov
mov
popa
es
and
and
push
insb
xchg
or
test
aas
add
aam
push
adc
pop
scas
mov
sub
mov
dec
dec
push
mov
movsb
xor
and
bound
rcll
or
stc
mov
jns
sub
call
loopne
dec
stos
add
jns
jns
push
pop
pushaw
es
mov
jbe
mov
pop
jmp
cmpsb
push
pop
mov
xchg
ss
imul
add
ret
aad
xchg
add
jle
negl
int
pop
pushf
inc
and
xor
daa
loope
scas
cmp
xchg
xor
rol
mov
and
lcall
push
int3
lret
ss
sub
pop
push
cmp
jecxz
lock
sarl
mov
aad
jae
mov
stos
jl
into
imul
stos
fstpl
repnz
fists
mov
dec
pop
or
mov
insb
mov
sub
mov
lret
mov
xor
or
mov
ror
insb
gs
pop
testb
push
pop
jecxz
sub
and
fcmovne
sbb
mov
xchg
pop
jecxz
loop
cmp
enter
rcll
push
outsb
pop
mov
pop
adc
aad
pop
rclb
pusha
sub
and
ror
jecxz
test
mov
jecxz
in
mov
push
xor
adc
lods
inc
push
test
dec
je
lods
pop
aam
sbb
ds
divb
das
jne
xchg
add
jo
push
leave
sub
jmp
adc
mov
sbb
mov
mov
cmp
xor
pop
testb
xor
cmc
dec
lahf
jnp
mov
imul
dec
sbb
movsl
movsb
push
sbb
jg
jne
mov
jb
addr16
adc
adc
add
call
fcompl
cmp
filds
push
fnsave
bound
orl
mov
dec
push
aad
dec
sbb
inc
movsl
ret
pushf
cmpsb
dec
jge
gs
aad
and
xor
sub
loopne
jg
jl
repnz
pop
mov
or
mov
pop
aas
imul
daa
stc
jle,pn
movswl
xchg
ljmp
xlat
inc
jl
mov
nop
inc
pop
pop
xchg
pop
aaa
add
test
mov
or
sbb
scas
xlat
cmp
pop
adc
mov
sbb
xchg
out
mov
inc
iret
ss
repz
loop
jmp
mov
cmpb
sub
or
fstl
push
repnz
or
mov
int3
push
jno
shl
xchg
ds
test
dec
push
iret
and
std
movsl
mov
xor
insb
loop
sbb
leave
push
add
rcll
frstor
pop
mov
in
push
mov
or
mov
cmp
jo
push
push
out
cmc
xchg
jecxz
nop
fldenv
push
mov
push
inc
mov
xchg
arpl
fdivrs
arpl
call
sbb
lods
mov
repnz
mov
ljmp
xor
cmp
addr16
xor
mov
dec
cmpsb
cld
ret
lahf
sub
or
cmpsl
sbb
insl
cs
mov
daa
push
push
xor
cmp
dec
adc
xorb
ja
imul
or
push
push
stos
pop
xor
xchg
mov
mov
in
daa
sahf
or
xchg
inc
jbe
movsl
sbb
lods
xchg
jnp
xor
rclb
loop
in
fsubr
push
shll
ret
imul
mov
mov
nop
mov
pop
movsb
lret
rcr
push
sbb
paddb
xchg
mov
jae
xchg
xchg
leave
push
cmpsb
or
sbb
sbb
mov
popf
int3
ret
aam
call
push
loope
jge
push
rolb
mov
pop
mov
out
out
pop
push
xor
test
movsb
les
mov
lods
repnz
mov
lods
cli
mov
jb
cmp
adc
inc
mov
push
sub
add
lcall
sbb
lods
int
lock
mov
lcall
cltd
jns
pop
xchg
popa
nop
and
inc
icebp
out
cmc
fcmovnb
pop
mov
cmp
and
sub
es
test
mov
xor
iret
aas
cs
ret
or
pusha
lods
lds
pop
bound
int
in
lock
mov
loop
inc
lock
inc
jle
xchg
cmp
dec
cmp
and
sbb
jge
push
das
imul
lcall
sub
setne
into
jne
int3
or
mov
std
lret
imul
cli
mov
jp
pusha
ja
rcrb
clc
enter
sahf
fdivr
pop
sub
xor
push
popf
mov
jmp
inc
cwtl
out
xor
dec
ret
icebp
addr16
bound
dec
lds
add
inc
dec
stos
test
xor
lahf
cmpsb
push
int
sub
add
test
mov
cmc
cmpsl
or
ds
xchg
fnstcw
push
xchg
stos
loope
sbb
scas
subb
mov
outsb
pusha
xchg
popa
inc
push
cmp
push
cmp
les
lcall
and
xor
dec
push
mov
fmuls
mov
mov
push
cld
xor
mov
sbb
das
pop
jg
mov
mull
mov
into
push
add
repz
jne
sti
mov
inc
sub
cs
add
sbb
stc
push
or
inc
rorb
mov
pop
mov
dec
sbb
sub
jne
sub
in
int3
jmp
push
sub
adc
xchg
cmp
mov
into
push
adc
pop
mov
sti
add
inc
cmc
sbb
daa
inc
mov
push
dec
mov
jmp
xor
mov
mov
mov
adc
inc
pop
jge
xor
mov
push
mov
pop
pop
xchg
pop
xchg
lret
std
fwait
or
aas
stc
dec
jb
add
stos
test
jns
sub
sti
inc
xor
inc
cmp
mov
jl
pop
lret
shl
cmc
mov
cltd
shl
mov
lret
je,pt
sbb
ret
add
cwtl
sbb
dec
jnp
mov
scas
bound
adc
inc
mov
sbb
cltd
test
ja
or
fwait
push
dec
xchg
adc
inc
sarl
push
shrb
fdivrs
test
xor
out
inc
mov
test
std
enter
cmc
lods
fsub
sbb
xchg
or
mov
mov
lcall
push
daa
sbb
xchg
imul
enter
and
test
inc
out
push
cmp
sahf
adc
and
add
punpckhbw
or
sub
in
xchg
inc
or
in
fwait
pop
int
enter
lods
xor
in
pop
fldl
int
cmp
or
xchg
pop
xchg
mov
inc
lea
std
daa
in
pop
fldl
int
cmp
or
xchg
pop
xchg
mov
inc
mov
std
daa
in
pop
faddl
int
cmp
or
xchg
pop
mov
inc
mov
inc
mov
std
daa
insl
xchg
pop
xchg
or
sbb
shl
xchg
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
sub
cmp
or
sbb
xor
hlt
sarb
stos
jl
pop
mov
imul
sub
cmp
leave
cmp
or
sbb
imul
int
inc
mov
jns
jnp
sbb
sub
cmp
sarb
rorb
sbb
imul
mov
clc
adc
insl
test
push
bound
imul
imul
jmp
inc
fwait
inc
mov
loopne
test
inc
push
lods
inc
pop
mov
cmpsl
push
cmp
xchg
out
inc
lret
rcl
mov
ret
ficoml
mov
lcall
je
icebp
xchg
jb
scas
sub
jl
xchg
cmp
jge
lcall
fnsave
cmp
test
mov
pushf
lret
fldcw
aam
dec
es
push
and
dec
mov
inc
cmpsb
fwait
xchg
adc
or
or
jp
mov
dec
adc
jae
add
jmp
jae
fiadds
lret
sub
leave
or
sbb
imul
mov
mov
pusha
jmp
sti
add
xor
cmp
push
stos
outsb
mov
pop
mov
clc
lds
fsubr
es
sbb
insb
xchg
sbb
mov
jle
sub
fstpl
into
cmp
fidivrs
jns
sbb
leave
pop
fldenv
sbb
test
mov
jns
or
sbb
sub
cmp
leave
cmp
or
sbb
imul
mov
mov
jns
or
sbb
sub
cmp
leave
sahf
lret
aas
sti
mov
test
dec
jl
and
mov
dec
push
mov
push
add
ret
outsb
or
sahf
jp
ror
jp
inc
sub
adc
fiaddl
dec
popa
adc
mov
sbb
lret
jo
out
and
jg
mov
cmp
dec
cmp
mov
loopne
xchg
call
mov
fsubrp
push
mov
jge
mov
test
mov
mov
dec
mov
dec
call
aam
ds
out
cmp
sahf
inc
jmp
divb
popa
ret
adc
adc
mov
arpl
jne
sub
outsl
push
insl
loop
xchg
add
stos
hlt
and
out
lock
js
xor
add
push
mov
cmp
add
ss
aas
stc
je
aaa
jg
or
sbb
aaa
inc
leave
popa
jae
adc
jnp
sar
in
popf
paddd
mov
rorb
mov
push
in
or
mov
jno
je
pextrw
jo
loop
lods
adc
lods
stos
repnz
repz
jae
inc
sub
int
imul
lret
mov
shll
xchg
jno
scas
nop
test
mov
xlat
and
dec
out
mov
push
mov
inc
inc
mov
je
dec
mov
jmp
cmp
popf
jns
xchg
test
cmp
adc
push
pop
jne
aam
cmp
push
cmp
xor
jbe
cli
aam
int
add
xor
push
jecxz
push
xor
hlt
bound
add
test
stos
addr16
and
cli
movsl
cmpsl
hlt
mov
push
and
fdivs
dec
sti
fdivr
idivl
pop
inc
cmpsb
movsb
add
cmp
test
dec
rcrb
divl
fmulp
mov
int
lea
jbe
mov
pop
mov
push
sub
js
fidivs
xchg
repnz
inc
loope
jge
addl
xlat
int3
lock
repnz
xor
outsb
repz
sbb
je
sub
shrb
push
out
mov
ss
and
lods
mov
test
or
mov
orl
adc
cmpsb
fnstsw
lods
das
xchg
xchg
les
and
and
popf
push
jg
in
and
mov
dec
or
xchg
test
pop
or
pushf
cmpb
mov
cmp
push
jne
je
dec
out
daa
int3
repz
inc
mov
iret
sti
dec
or
lock
push
push
pop
xchg
cmp
or
dec
test
fdiv
push
sbb
lea
sub
out
pop
jnp
or
cmp
sti
outsb
outsb
rorl
in
sbb
and
mov
xor
dec
aaa
xor
mov
sub
or
sub
or
inc
mov
push
mov
push
ljmp
mov
movsl
repz
dec
mov
loope
add
fwait
fs
mov
xor
in
bound
xchg
insl
ljmp
push
lss
mov
and
call
orl
mov
xor
or
pop
or
fs
mov
jg
cmp
sarb
andb
cs
pop
movsb
cmp
insb
cs
incb
enter
out
bound
rorb
push
jl
stos
shr
fldl
adcl
pushf
dec
mov
cmpsl
out
lods
xor
leave
shrb
xor
out
mov
aas
dec
jmp
fistl
cwtl
stc
ret
mov
inc
sti
scas
xchg
clc
jns
jbe
pop
xor
dec
loop
lahf
test
ja
sbb
out
mov
jne
sti
rolb
rclb
mov
cltd
adc
mov
call
lahf
jmp
sbb
in
bound
mov
or
loope
pushf
xor
lret
sti
cs
stos
in
rorb
add
xor
jle
jno
inc
sar
dec
js
fwait
sbb
cmp
dec
jle
pop
test
rcr
mov
mov
dec
rolb
pop
lcall
adc
adc
inc
mov
bound
jns
add
xor
data16
mov
loopne
push
mov
movsb
mov
dec
jmp
xchg
stos
fidivrs
mov
insw
lea
orl
add
sbb
mov
fimull
add
xchg
sub
imul
out
dec
nop
mov
mov
jge
jno
push
notl
lret
push
gs
imul
cwtl
and
sub
fwait
outsl
in
jle
shrb
in
push
fcomps
or
roll
sub
ror
movsb
mov
push
push
repz
lea
fs
dec
adc
xchg
int
jge
pusha
push
out
sub
push
call
pop
mov
jns
ljmp
scas
nop
rorb
sub
cli
push
jmp
xchg
xchg
icebp
lds
test
test
js
xchg
fmul
stc
iret
movsb
or
cli
test
into
mov
push
push
sbb
mov
inc
dec
lds
cltd
cmc
jns
nop
mov
outsb
ds
in
mov
aas
sub
mov
sbb
ja
cwtl
mov
in
subb
push
push
add
stos
jnp
push
int3
or
in
cmpb
out
outsl
jbe
scas
into
pop
rol
push
xchg
outsb
je
test
jp
aas
ror
push
test
cs
mov
cltd
cwtl
inc
jo
ret
rcll
jle
mov
shlb
arpl
dec
in
out
das
pop
ljmp
and
ds
cmpsb
test
jle
iret
lcall
sarl
into
cltd
clc
lds
ss
mov
std
push
cmp
jae
test
outsb
push
pop
mov
pop
xchg
xchg
and
stos
dec
mov
orl
int
cmpl
or
cmp
jp
sbb
mov
test
test
xor
xchg
imul
and
mov
adc
jp
out
loope
add
aas
xchg
mov
mov
sbb
rorb
dec
call
stos
test
imul
xor
daa
sub
adc
pusha
sbb
inc
imul
shll
dec
pusha
mov
adc
inc
std
cwtl
xchg
lcall
mov
scas
lock
sub
ret
imul
jle
inc
sbbb
sbb
insl
jbe
fbstp
aaa
mov
jecxz
sbb
xchg
adc
inc
gs
jo
xor
mov
ds
mov
dec
xchg
data16
push
je
scas
jmp
jns
add
sub
push
aas
cmp
and
jne
into
mov
ljmp
pavgb
stos
jmp
stc
test
leave
cld
mov
test
loopne
negb
fnstcw
or
rorb
and
jae
out
xor
inc
and
and
cmc
movups
xchg
xchg
int
mov
push
in
sbb
jo
lock
jb
sahf
jae
in
pusha
jns
popf
popf
mov
sub
aam
in
leave
sbb
mov
pop
mov
cld
jne
pop
or
push
out
imul
mov
imul
cltd
cwtl
or
scas
les
mov
cmpsl
movl
sub
add
decl
repnz
fsts
fadd
int3
mov
pop
inc
lahf
xchg
sub
mov
lret
imul
testb
pop
cmp
lods
aaa
lret
xor
pop
in
add
imulb
jl
push
jo
test
inc
hlt
mov
sub
adc
mov
lret
mov
jbe
pop
sub
push
cmp
cld
mov
cwtl
sbb
push
lds
sub
dec
xchg
dec
mov
pop
out
jbe
ja
or
cmpsl
sbb
xchg
lsl
xlat
pop
jecxz
jb
out
push
lods
cs
scas
mov
push
ljmp
sub
negl
dec
jae
je
xchg
pushf
xchg
push
sahf
iret
mov
or
aas
jb
std
xchg
cmp
pop
xchg
inc
ljmp
xor
cmp
sti
outsb
pop
aas
mov
outsl
or
ss
fists
out
loopne
sbb
imul
add
push
fwait
les
pop
jmp
aam
adc
subl
ret
sbb
cld
pop
pop
inc
stos
adc
js
inc
in
inc
jb
int
ds
mov
sbb
xchg
mov
inc
cmp
fcoml
dec
mov
add
dec
xlat
jne
fwait
xor
fwait
in
push
jno
stc
in
icebp
inc
outsb
addr16
jno
pushf
xchg
cmp
dec
into
adc
mov
js
fcomps
dec
or
jb
test
mov
xor
jg
sbb
sarl
loopne
pop
mov
pop
mov
ds
out
loopne
test
pop
inc
pop
fwait
cld
cwtl
mov
jne
popa
xchg
cmp
jbe
jmp
pop
outsl
jl
stos
push
rcrl
loopne
mov
inc
popf
adc
mov
xlat
shrb
mov
xchg
mov
xchg
sub
push
add
jmp
jne
sbb
sahf
pushf
pop
leave
add
sub
cld
jb
cmpsl
scas
repnz
insb
loop
sbb
popa
or
popf
jne
fadds
pop
inc
push
nop
rcrb
xor
stos
test
fiadds
cli
pop
xor
out
test
stos
insb
jecxz
enter
out
or
pusha
scas
pop
cmpsl
dec
fsub
xchg
fsubrl
scas
aam
in
pop
fisttpll
outsl
pop
inc
shl
dec
mov
test
push
sub
mov
leave
mov
ja
inc
pop
pop
mov
and
pop
scas
sbb
leave
cli
xor
in
rorl
inc
data16
pop
popf
or
getsec
dec
std
gs
in
inc
cmpsl
cmp
cmp
add
sbb
cwtl
push
in
dec
inc
test
rcll
jmp
xchg
ds
icebp
movsb
pop
sbb
fst
mov
mov
iret
cmpsb
fstps
mov
das
jl
cmp
fnstenv
ja
jno
xchg
fadds
cmc
sub
xchg
arpl
shrb
adc
inc
int3
js
pop
push
mov
mov
cmp
into
adc
or
adc
cmpsl
out
jno,pn
fdivs
pop
adc
jecxz
mov
nop
pop
xchg
lret
jg
jl
jecxz
dec
push
cmp
push
sub
leave
addr16
mov
xchg
inc
cs
inc
aad
inc
roll
test
pop
inc
ret
push
in
dec
test
and
adc
xchg
aad
push
inc
mov
rorl
jae
imul
dec
pop
adc
out
jbe
inc
pop
or
add
orb
sti
push
pop
jg
insl
stc
outsb
enter
fldt
inc
lret
lahf
ds
push
movsl
dec
mov
idivl
xor
adc
loope
cmpsb
xchg
pop
call
iret
sbb
aam
shlb
in
out
push
mov
dec
push
scas
ja
pop
mov
adc
das
and
mov
mov
test
mov
pop
add
in
shl
sahf
fstps
mov
mov
or
mov
subb
imul
sbbb
stos
fs
push
mov
mov
into
mov
mov
cwtl
ror
push
pop
leave
sarl
lcall
adc
jge
out
das
cmp
sbb
mov
dec
adc
mov
je
outsl
cmp
ljmp
adc
mov
sbb
in
hlt
jnp
icebp
xor
or
int3
pop
xchg
mov
add
mov
fadds
xchg
lock
add
jae
sbb
or
xor
outsb
jmp
outsl
pop
mov
shrl
out
pusha
pop
add
mov
nop
xchg
mov
sbb
ss
or
push
lret
push
std
pusha
and
pop
adcb
movsl
mov
insl
int3
mov
mov
imul
pop
pop
or
test
sarl
fiaddl
sbb
jp
test
bound
cli
adc
xor
ret
aas
shll
xchg
dec
mov
xchg
mov
test
or
jne
aas
or
iret
cli
jl
xchg
and
jns
jae
aad
mov
pop
or
inc
mov
ljmp
stos
add
leave
or
loope
aad
enter
pop
ss
ja
fldln2
stos
les
mov
sbb
and
sbb
lea
mov
adc
jl
sub
popf
psraw
lcall
jne
mov
mov
and
dec
rorb
ja
mov
pop
xor
mov
leave
js
imul
push
sub
push
mov
jno
stos
arpl
or
mov
mov
loop
inc
cmc
xor
insb
jae
aad
lock
lods
and
fs
add
and
imul
mov
adc
inc
sbb
xchg
push
das
loop
popa
and
pushf
lock
lahf
lods
pushf
cs
dec
fldl
jae
jl
mov
fldt
stc
aaa
xchg
paddw
adc
cmp
add
adc
lret
xchg
xchg
fsubp
xlat
out
jne
cmp
xor
push
sub
fwait
aad
fwait
into
mov
sub
xchg
sub
mov
lods
mov
cmc
fldt
xlat
push
clc
or
push
jno
pop
inc
arpl
push
pop
ss
xchg
out
jo
iret
subb
pop
popa
shlb
mov
cmp
push
aas
int3
push
fwait
sbb
shl
pop
add
mov
sbb
adc
add
xchg
sub
jnp
subb
popa
out
outsb
hlt
pop
pop
fisubs
push
sbb
cmc
jmp
test
pushf
add
mov
cli
lods
jnp
pop
xor
push
cmpsl
imul
pop
outsb
rcrl
loope
or
sbb
punpcklwd
andl
mov
test
stc
inc
jmp
pop
roll
lcall
imul
mov
push
pop
fidivs
stos
lods
add
aam
push
iret
fdivp
push
pop
sbb
mov
bound
cli
cmpsl
sbbl
lds
fidivs
bound
push
ja
mov
jns
insb
gs
inc
adc
push
repnz
scas
mov
in
push
lock
imul
gs
push
ljmp
ss
jp
iret
push
push
mov
push
shrb
enter
int3
mov
jnp
sbb
dec
pop
fistl
or
invlpg
ja
aam
enter
dec
leave
shrl
xor
adc
xor
mov
es
aaa
popa
lods
cvttps2pi
test
xchg
push
lock
sub
lods
aaa
add
adc
psubd
sub
sub
cwtl
adc
cmp
mov
push
pushf
mov
into
pop
fs
test
scas
in
fs
aaa
stos
sbb
sbb
dec
mov
sbb
cmp
cmpsl
adc
imul
pushf
ljmp
mov
das
add
inc
push
xchg
call
cmpsl
sub
cmp
idivb
fstl
sbb
pop
incl
xchg
je
push
cmpsb
outsl
add
cmpsl
cmpb
mov
jne
mov
or
xchg
incl
or
xor
add
stos
and
xor
pop
fildll
pushf
js
lods
cmp
push
pop
mov
or
fstl
jbe
jl
lock
cmpsl
flds
fwait
outsl
lahf
popa
data16
xorl
ret
fmull
add
sbb
repz
in
imul
mov
pop
aaa
shll
fsubrs
adc
push
xchg
mov
mulb
push
das
jp
ljmp
cmp
xchg
ljmp
cmp
cmpsl
cmp
or
push
enter
dec
ljmp
pop
icebp
sub
jge
sti
pop
jp
pop
mov
cmp
xor
mov
xchg
or
scas
push
lods
in
dec
les
push
gs
test
mov
fdivr
xchg
in
mov
jo
xorl
add
aaa
loope
mov
repz
into
fcompl
or
scas
dec
push
call
mov
flds
movl
add
sub
or
fistps
fcompl
and
in
sbb
and
mov
roll
pop
mov
jns
dec
lods
jno
mov
fisubs
push
inc
add
cwtl
push
popa
push
pop
into
xor
dec
call
mov
sub
and
mov
lock
repz
sahf
andb
inc
xor
das
bound
sbb
push
loopne
das
sbb
or
or
jno
nop
mov
jmp
cmp
ret
fisubl
insb
xchg
jle
sbb
sub
pop
xchg
dec
call
repz
movsb
add
addl
shrl
add
cmpsl
adc
es
push
movsb
adc
fnstsw
add
dec
or
fisttpl
sbb
xor
ja,pn
adc
loop
jge
adc
push
insb
inc
popf
subl
icebp
push
xlat
mov
mov
cmp
sbb
lods
xor
pop
movsl
sbb
mov
sbbb
out
push
mov
in
in
pop
std
pop
mov
orl
pop
push
call
pop
fsubl
fstpt
xor
mov
mov
mov
add
iret
movsl
mov
jno
mov
ror
xor
cmp
nop
pop
sbb
mov
out
push
aad
add
dec
aad
test
ret
es
pop
sub
gs
push
jno
mov
lea
das
je
sbb
and
fdiv
inc
int3
pop
jns
cmpsb
sub
inc
dec
fwait
ret
or
and
out
jp
push
push
mov
aas
adcb
push
sub
jmp
inc
xor
mov
faddp
push
mov
lahf
cs
pop
cmpsb
xchg
cmp
lock
mov
mov
sbb
jo
scas
pop
jmp
fs
sbb
popa
mov
js
pop
test
test
mov
inc
in
push
mov
dec
je
sub
test
loope
test
jae
insl
clc
out
xchg
jns
pop
mov
mov
ja
es
push
inc
test
imull
stc
sub
pop
sub
nop
lcall
cmp
enter
into
sub
pop
jmp
mov
push
aad
jbe
cmp
jge
push
fcmovnb
ret
dec
cmp
sbb
js
pop
jp
out
fs
loope
jno
adc
out
jge
mov
mov
sbb
jo
popfw
std
shlb
jnp
and
add
das
mov
push
xor
rorl
push
jl
and
xchg
rcll
xor
bound
repz
mov
pop
sub
out
inc
and
mov
adc
hlt
sbb
addr16
aas
pop
ss
lock
mov
insl
pop
jg
sub
mov
xchg
sub
and
dec
adc
and
pop
mov
cld
push
sub
jecxz
and
lcall
rol
xor
xor
push
jae
pop
adc
rolb
push
repz
add
mov
test
das
shrb
repz
nop
cmp
ret
cmp
xchg
xchg
mov
scas
push
sti
mov
cmp
lret
into
inc
or
jge
addb
lahf
jae
inc
pushl
popa
sub
rcrl
mov
ds
cmp
adc
sti
or
jbe
sub
das
xchg
jge
mov
xchg
mov
mov
ret
lock
jno
in
mov
lret
push
sahf
adc
inc
movsl
add
lahf
push
adc
cmp
dec
std
imul
inc
lcall
jbe
mov
fidivl
push
daa
jns
fwait
cwtl
pop
aad
mov
mov
gs
fcomps
cmp
push
mov
jbe
xlat
mov
mov
dec
push
and
pop
aad
sbb
ss
inc
jo
inc
test
xchg
cmp
jnp
jl
enter
pop
lods
push
push
lahf
jmp
lods
cmp
mov
cmp
decb
jge
cmp
push
dec
jnp
dec
stos
ja
or
jbe
repnz
adc
femms
cmp
or
lahf
add
out
xchg
mov
push
xor
push
push
call
les
cmp
adc
leave
jb
push
fs
or
popf
orl
test
ja
sub
les
sub
scas
jo
lock
mov
jo
out
inc
sahf
int3
imul
inc
loope
test
out
fsubl
sbb
push
dec
movsb
adc
inc
jb
jno
and
out
sbb
mov
dec
xor
jp
mov
iret
loopne
push
adc
insl
mov
shl
int
add
fildl
pop
loop
adc
and
add
stos
and
jmp
push
les
cmp
sbb
imul
mov
mov
jns
or
sbb
sub
cmp
leave
cmp
or
sbb
imul
mov
mov
jns
or
sbb
sub
cmp
leave
cmp
or
sbb
imul
mov
mov
jge
or
sbb
sub
cmp
or
sbb
imul
jns
dec
mov
push
pushf
xorl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
adc
nop
push
orl
sub
and
add
push
test
push
mov
mov
sbb
or
cmp
sub
mov
enter
call
pusha
mov
push
enter
scas
testb
inc
test
fcmovbe
repnz
movsb
add
and
push
iret
and
and
hlt
push
in
decl
cmp
sub
jmp
lret
fcomip
push
arpl
inc
test
insb
std
scas
cltd
or
arpl
loope
dec
in
imul
lods
aas
pop
iret
xor
push
sbb
stc
js
call
sbb
fwait
cwtl
xor
xor
adc
addl
dec
test
xchg
xchg
cmp
sarb
adc
dec
int
fwait
shr
pop
add
scas
push
cmp
data16
xchg
jg
ret
mov
jl
pusha
cmp
adc
lock
jne
add
int
dec
dec
pop
xchg
int
xchg
mov
rol
and
jo
call
and
imul
js
add
sbb
dec
loopne
rclb
mov
adc
cmp
dec
xchg
mov
mov
iret
cmp
push
in
jbe
jge
sub
mov
mov
arpl
aaa
out
int3
and
sub
shl
jecxz
in
jno
imul
popf
inc
test
jmp
in
pusha
int
jmp
inc
or
sub
pop
mov
sub
fdivs
enter
call
pusha
mov
mov
mov
sbb
or
cmp
sub
fdivs
enter
call
pusha
mov
mov
not
in
aaa
outsb
push
xchg
imul
or
push
push
xlat
push
dec
nop
jge
lock
cmpsb
mov
mov
jg
icebp
cmp
adc
js
lea
sbbl
or
cltd
cwtl
mov
lret
xchg
shl
jnp
sbb
repz
sub
and
push
aaa
lea
imul
fwait
addl
insl
push
push
lds
sahf
inc
dec
mov
sub
inc
dec
xchg
cwtl
dec
push
scas
and
xor
out
loope
push
cmc
aas
mov
ss
iret
mov
lahf
mov
test
or
stos
dec
pop
test
push
jno
lret
jae
loop
xchg
xchg
add
add
clc
sahf
int3
scas
pop
sbb
ret
ja
xchg
rcl
popa
pushf
or
enter
pop
adcb
arpl
gs
sarb
xchg
mov
dec
cmp
dec
pop
adc
shll
je
mov
xor
inc
adc
pop
adc
inc
pop
and
or
cmp
ja
lock
js
lods
inc
pop
movsl
xchg
lds
es
xchg
pop
enter
fsubl
mov
cwtl
xor
outsb
dec
or
test
aad
and
loop
jmp
shlb
rcrl
push
mov
lahf
cmpsl
jg
out
push
cwtl
or
xor
je
add
xchg
cmpsl
lock
xor
aad
cmp
mov
cltd
aaa
cmc
or
lea
mov
fisubl
fisubl
cmc
fdivs
cmp
adc
inc
inc
jno
push
in
enter
mov
and
daa
js
sub
std
jns
push
adc
xor
enter
push
xchg
pop
cwtl
sub
pushf
pop
inc
fwait
or
fsubrl
out
aaa
dec
mov
xchg
ror
sahf
cmp
mov
fmuls
je
fnstsw
jnp
xchg
stos
adc
aam
inc
mov
dec
inc
outsl
adc
mov
adc
add
xchg
mov
dec
and
jnp
jno
loopne
and
or
mov
xor
ds
cmp
sbb
and
pop
xchg
dec
xchg
out
xchg
sbb
fwait
xor
jl
shll
nop
dec
mov
jp
and
sti
scas
inc
mov
mov
cmp
pop
aas
shl
push
pusha
mov
orb
fdivrl
adc
push
dec
pop
cli
stos
cmpsb
push
movsl
mov
pop
xchg
test
test
cmpsb
cmp
aas
sarl
and
shlb
cmpsl
add
push
shrb
mov
add
pmulhuw
mov
movsb
fldcw
jl
sbb
mov
jecxz
aam
test
inc
xchg
imul
sub
add
inc
mov
dec
lods
push
push
stos
push
pop
sbb
cld
and
pop
les
sub
leave
fwait
sub
popa
aad
fsubrl
xor
pusha
xchg
cwtl
pop
jno
int
repz
cmp
leave
and
xchg
addb
insb
fnstcw
in
inc
neg
fcomip
dec
pop
mov
les
dec
lods
enter
ficompl
loopne
iret
or
aas
ljmp
mov
cmp
je
mov
cld
jne
testb
jl
adc
lret
mov
lahf
imul
or
or
mov
fs
sbb
movsb
enter
fidivrs
sub
movsl
ljmp
movsb
jbe
mov
jmp
or
adc
xchg
lea
std
inc
push
int3
int
xor
int3
jmp
inc
xchg
fstpl
mov
repnz
repnz
and
mov
inc
out
cmc
in
lock
fidivs
and
sahf
negb
xor
jg
clc
or
jecxz
xchg
xchg
sbb
aad
pop
xchg
repnz
jge
std
add
cwtl
in
jg
jne
adc
push
add
xchg
or
pop
mov
ficoml
and
dec
aad
ret
add
cmp
fiaddl
dec
jp
mov
xchg
aam
loope
scas
mov
xor
push
je
pop
jb
call
cmpsb
mov
mov
xor
cmpsb
daa
gs
cld
insl
ror
gs
xor
pop
sub
dec
jno
add
dec
inc
xchg
mov
and
or
add
cld
cmpsl
aad
movsb
xchg
mov
pop
mov
mov
xchg
lock
mov
out
mov
nop
xor
into
fscale
int
cmp
jnp
add
mov
push
mov
xor
jmp
lods
mov
cmp
pop
fbstp
cld
sbb
push
andb
leave
dec
dec
cmp
xor
out
add
popf
lahf
sbb
enter
jne
stos
push
pop
inc
stos
ljmp
data16
out
fisttps
adc
gs
xchg
inc
mov
sarb
sbb
mov
jecxz
xchg
jp
mov
dec
and
jo
pushf
add
notl
and
jne
hlt
and
sbb
push
dec
das
insl
lret
scas
jno
popa
in
test
in
push
addb
add
add
mov
or
pop
mov
shll
push
jmp
mov
rcl
iret
and
jnp,pt
jmp
sarl
shl
dec
aas
jbe
lods
sub
adc
scas
inc
inc
stos
std
cwtl
aaa
cmc
xchg
cmp
cltd
jle
int
pop
mov
cmp
mov
xchg
ds
mov
outsb
xchg
jge
arpl
xor
mov
or
idiv
mov
cmp
ljmp
add
mov
pop
xchg
insb
shrb
bound
enter
mov
or
lock
lea
mov
jecxz
sbb
es
sbb
adc
rcll
cld
mov
fldl
push
fbstp
insb
fidivrl
scas
insb
sub
and
mov
cli
loopne
fimull
push
pop
test
shrl
nop
fwait
mov
sahf
add
mov
roll
fs
rclb
cmp
push
jb
insl
nop
dec
and
into
shr
rolb
out
xor
sti
das
push
push
out
arpl
jo
dec
repnz
ja
test
sub
push
lahf
mov
into
pusha
lock
pop
negb
mov
lret
out
pop
js
push
shl
mov
imul
mov
mov
ds
xor
fildll
push
xchg
test
cmp
shlb
rcr
mov
xchg
loope
xchg
pusha
scas
jecxz
sbb
movl
dec
pop
fwait
xchg
mov
add
dec
lods
gs
jge
push
sub
movsb
mov
scas
dec
and
fidivs
shrb
mov
push
aas
adc
stc
add
inc
mov
loop
push
cmpsl
sbb
dec
lahf
mov
not
nop
jae
test
nop
push
cmp
ds
push
adc
add
lock
pop
call
jecxz
cmpsb
jbe
roll
testb
insb
mov
mov
mov
mov
adc
lea
scas
mov
push
leave
test
dec
call
xor
movsb
lret
push
inc
lods
jmp
cmp
imul
ljmp
and
push
push
pop
cwtl
pop
aad
cmpb
outsl
iret
sar
fdivs
cwtl
es
lahf
sbb
inc
mov
or
cmc
mov
pop
cmp
xchg
sbb
sub
pop
jle
loop
aaa
int
pop
lods
loop
cmpsb
adc
cmp
lret
inc
push
add
lret
pop
fimull
fistps
std
mov
ljmp
lds
scas
push
fisttpl
dec
sbb
cmp
pop
mov
lods
inc
inc
or
jns
dec
pop
inc
mov
es
fldt
js
push
sbb
mov
arpl
inc
mov
push
mov
xchg
dec
and
call
mov
inc
aas
pop
xor
jbe
add
cld
sbb
repnz
push
xchg
lods
or
jne
push
int
pop
mov
outsb
test
mov
cmp
and
fiadds
out
inc
fstp
cmp
cld
cmp
mov
ja
mov
jecxz
or
mov
fs
dec
outsb
out
xchg
and
lods
mov
mov
stc
sarb
xchg
add
jbe
and
dec
pop
mov
push
call
add
jge
fdivs
push
pushf
xlat
mul
sbb
push
stc
int3
ret
mov
and
sub
and
aad
cmpsb
insb
test
and
mov
sbb
mov
hlt
loop
pop
and
cld
paddw
adc
shll
add
mov
daa
inc
loopne
sub
push
rcr
lahf
jne
repnz
mov
push
out
ds
adc
jae
xchg
lock
and
dec
xchg
popf
cld
imul
push
insl
push
push
dec
fidivrl
lahf
add
les
dec
andl
mov
mov
jge
xlat
and
nop
lds
ss
pop
adc
adcl
sbbl
scas
pusha
sub
imul
push
and
mov
daa
xchg
cmp
das
push
pop
pop
mov
mov
mov
jl
pusha
dec
js
add
push
sahf
push
pop
jo
mov
lea
jecxz
rorb
and
enter
sti
bound
mov
xlat
pusha
mov
or
cmc
sbb
push
imul
loop
cmp
jmp
mov
mov
xchg
adcb
icebp
cli
mov
repz
ficompl
mov
scas
dec
add
hlt
aad
lds
push
into
add
xchg
push
daa
jl
mov
fstps
lea
test
paddd
out
sbb
xorb
jno
push
mov
cmp
cli
jp
pop
jmp
fwait
pop
mov
addr16
sub
xchg
pop
pop
push
jmp
cwtl
xchg
adc
add
push
jno
into
call
gs
in
xchg
in
mov
push
xchg
push
jno
add
in
sub
lock
pop
adc
loopne
jo
cmp
cmpsl
insb
mov
lds
std
jo
cmp
inc
test
cmpsb
testl
pop
cmp
into
cwtl
sbb
andb
in
test
xchg
jge
enter
shll
xchg
xchg
mov
or
inc
adc
fbstp
sbb
js
data16
xorb
icebp
ds
fwait
inc
ja
jp
outsb
shl
clc
adc
or
ret
cmp
push
cmp
loop
cwtl
in
scas
push
aaa
ss
push
mov
movsl
lcall
fnstenv
and
sub
out
add
xchg
push
or
daa
add
inc
xor
idivb
jl,pt
test
outsb
fwait
gs
imul
push
cwtl
mov
dec
or
or
xchg
lds
cmp
or
mov
sub
xchg
lahf
add
lock
dec
lods
push
test
sahf
int
js
loope
nop
xchg
push
xchg
cwtl
pop
scas
xor
and
xor
jno
stc
dec
out
fmuls
lock
fsts
add
xchg
pop
and
mov
lret
adc
lods
push
xorb
xor
jmp
fs
out
std
xor
aaa
mov
into
inc
push
stos
cltd
mov
sub
lods
push
hlt
xor
aad
sub
or
fisttpll
outsb
or
inc
and
add
push
rcrl
sub
ss
jae
std
push
sbb
and
sbb
add
out
stc
mov
push
xor
sbb
push
into
cmp
adc
repnz
or
mov
int3
stos
inc
push
hlt
jbe
cmp
lret
loop
xchg
stc
mov
mov
pop
push
jg
inc
jb
and
push
out
add
dec
test
scas
in
jp
cmpl
int
shll
pop
and
jnp
push
out
std
dec
xchg
jae
pop
daa
push
sbb
adc
sbbl
mov
outsb
jo
pop
sub
pop
shll
stc
cmpl
cmp
fs
arpl
stc
jmp
pop
lods
add
add
mov
frstor
or
add
sub
popf
aad
mov
cmp
or
in
add
out
inc
or
out
imul
fmull
push
mov
dec
int3
loopne
pop
call
aad
out
stos
inc
cmc
shrl
mov
jns
call
sbb
pop
cmovp
cli
mov
pop
cmp
aaa
sti
jge
dec
cld
je
or
push
push
xchg
es
sahf
add
mov
int
test
aam
movsl
xor
mov
xchg
stc
jne
repz
inc
ret
dec
loope
jb
or
add
fs
and
xchg
fadds
lahf
or
in
jnp
push
repz
mov
cld
jl
mov
addl
les
clc
test
fs
xor
filds
fisubrl
in
inc
cmc
adc
dec
fwait
lock
ret
fs
aaa
jmp
loop
push
data16
fnstenv
mov
outsl
xor
xor
or
pop
dec
inc
xchg
adc
lods
shrl
xchg
jnp
daa
movsl
jns
xchg
movsb
sar
ds
push
int3
xchg
mov
xor
pop
sub
or
movsb
pop
scas
or
xchg
lahf
or
shll
xchg
or
push
mov
sbb
jae
mov
jo
iret
nop
or
in
iret
mov
mov
or
int
inc
fcmovnu
jb
notb
sbb
aaa
idiv
lcall
ja
sahf
xor
into
adc
add
iret
mov
push
cmc
fs
mov
inc
push
push
pop
jecxz
in
setge
jb
jl
ja
into
mov
mov
imul
repz
or
push
dec
lahf
out
ret
jne
jg
cmp
insb
call
jns
divl
dec
lock
and
ljmp
shrl
mov
shlb
dec
sub
mov
int3
adc
cmc
nop
loop
push
add
adc
pop
mov
xor
cmpb
out
sub
pop
orb
inc
adc
mov
sbb
mov
rolb
lcall
dec
into
adc
cmp
stos
jmp
inc
insb
sub
lret
jne
mov
mov
rcrl
xor
ret
out
in
add
jg
inc
pop
mov
inc
es
repnz
jbe
xor
outsl
stc
rcrb
jne
mov
arpl
not
or
jmp
adc
ret
cmp
dec
xchg
add
xor
mov
jno
sbb
dec
clc
adc
mov
adc
sbbl
xchg
push
mov
xor
out
stos
jecxz
cmpsb
shll
add
mov
roll
or
cld
pushf
xor
mov
out
inc
push
cmp
int
and
push
and
inc
pop
inc
out
jns
imulb
push
adc
pop
mov
inc
sbb
sbb
and
scas
sub
outsl
gs
test
pop
pop
gs
test
add
aaa
leave
cmp
sub
jp
jmp
scas
inc
clc
cld
mov
sub
push
pop
add
or
fsubrl
pop
cmpsb
inc
push
xorb
nop
fdivrs
dec
movsb
xchg
vpaddb
nop
sbb
push
push
cld
jo
sbb
jge
dec
outsb
jp
loop
int
mov
adc
in
inc
addl
iret
sbb
and
test
push
dec
ja
cld
sbb
inc
xchg
ret
push
mov
mov
sbb
sbbl
stc
xchg
or
je
xor
aad
xor
cmp
add
jne
ret
scas
push
ss
sbb
and
hlt
adc
dec
fistpll
mov
pushf
dec
push
push
xchg
push
dec
and
sbb
add
loope
sbbl
xor
sarl
xchg
loope
rorl
ljmp
ret
xchg
push
je
scas
mov
xchg
ror
ret
dec
mov
adc
das
jno
add
std
enter
lret
jl
imul
ss
into
dec
rolb
aad
sbb
popf
cmpsb
test
movsl
or
mov
push
clc
xor
insb
imull
pop
sub
pop
enter
scas
insl
mov
aaa
mov
add
repz
jne
push
data16
xchg
push
adc
push
mov
aam
dec
lods
xchg
inc
inc
xlat
fadds
mov
pop
pusha
shll
jle
dec
pop
and
loop
lcall
mov
lcall
pushf
push
jl
aaa
movl
imull
sbb
pop
xchg
mov
xchg
sbb
sub
popl
hlt
xchg
imul
or
or
mov
sbb
xchg
adc
and
test
jl
adc
inc
pop
push
sbb
js
jge
push
sbb
dec
xor
outsb
js
inc
in
push
cmc
xchg
inc
jae
jb
sbb
mov
jge
lock
fnstcw
aad
lcall
shl
push
sbb
lahf
push
adc
fimull
jge
or
mov
sbb
push
sub
fwait
icebp
idivl
pop
lods
xor
xor
sub
outsl
mull
and
or
xchg
xchg
iret
sahf
cmp
decl
jo
bound
and
enter
cmp
push
push
lds
mov
sub
pop
push
cmp
pop
jne
mov
pop
dec
sar
mov
dec
ja
jbe
sub
inc
jnp
jo
push
pop
jae
or
mov
in
cmpsb
stos
iret
icebp
or
and
cmpsl
push
cmp
lret
pop
decb
fimuls
or
cltd
push
adc
sahf
leave
mov
in
sarb
adc
dec
div
mov
imul
js
in
and
cltd
mov
pmulhuw
cmpsl
outsl
ja
xor
cmp
inc
les
popf
frstor
je
pop
push
outsl
push
dec
rcrb
test
inc
stos
push
pushf
jge
mov
and
imull
fcmovnb
clc
pushf
ja
mov
pusha
enter
mov
and
into
aad
jge
mov
cmp
adc
ret
sbb
and
cltd
into
cmp
popa
js
fcompl
mov
test
and
and
sahf
xor
jl
inc
clc
cmpsb
shlb
aas
jae
adc
arpl
test
add
test
push
push
lret
fwait
inc
lea
push
sti
jmp
and
inc
push
mov
movsl
fstl
adc
dec
lock
sbb
adc
mov
rcrl
inc
sbb
mov
adc
aad
jle
cmpsl
out
cmp
test
ficoml
out
das
in
push
pop
mov
fwait
dec
popl
es
shll
jo
outsb
xchg
mov
jge
dec
sbb
mov
pop
sbb
arpl
test
push
lds
add
pop
imul
mov
das
stc
and
mov
enter
jae
in
sub
stos
xor
mov
sahf
dec
mov
dec
not
ds
dec
subl
jge
cltd
and
and
ss
shlb
push
cmp
fidivrl
push
cmp
in
fwait
or
dec
mov
cs
scas
stc
cmp
sub
aas
pop
clc
loopne
dec
xchg
lea
sub
xchg
mov
and
push
nop
mov
testb
fstpt
jl
bound
inc
cmp
fmuls
xchg
fisttps
cltd
jl
jb
push
pusha
push
jmp
aas
lret
sbb
add
cld
sbbb
sbb
xor
std
or
fisttpl
daa
jmp
test
imul
outsb
fsubs
xchg
push
orb
shll
imul
pusha
pusha
add
das
out
test
out
cltd
mov
and
cld
adc
mov
or
fidivrs
loopne
into
ss
jg
shrl
dec
mov
pop
inc
xor
xchg
mov
daa
pop
sti
fdivrl
lock
jle,pn
fwait
imul
dec
xchg
sbb
jp
pop
xchg
jno
ss
adc
mov
dec
add
negb
jne
add
shlb
hlt
fwait
pop
dec
push
out
cmpsb
xchg
pop
add
int3
cmp
sub
dec
push
push
cmp
stc
xchg
jp
sub
popf
in
push
dec
mov
jns
and
mov
mov
xchg
jb
adc
scas
fidivl
dec
mov
cmp
pop
cmc
nop
xor
jns
jb
dec
push
jb
add
test
dec
dec
mov
lock
popa
jmp
mov
mov
jmp
cmpsl
push
mov
inc
xchg
jbe
cmc
pop
shll
jne
aas
pop
sub
mov
pop
movsl
jb
ljmp
adc
push
mov
cmc
jmp
in
xchg
je
sbb
or
cmp
sub
fdivs
enter
call
pusha
mov
mov
mov
sbb
or
cmp
sub
fdivs
enter
call
pusha
mov
mov
scas
push
lock
cmp
sub
fdivl
enter
in
or
pop
cwtl
movsb
inc
push
fs
lock
rcrb
sbb
cmp
add
iret
aaa
mov
call
sbb
push
cmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
