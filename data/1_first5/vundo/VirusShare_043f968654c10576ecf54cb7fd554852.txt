add
mov
shl
shr
mov
jmp
cmpb
cld
je
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
xor
xchg
jmp
jmp
jmp
jmp
jmp
addr16
dec
or
sub
mov
and
mov
sub
push
pop
mov
push
pop
andl
xchg
push
xchg
jmp
push
nop
nop
pop
push
mov
push
mov
push
addr16
and
mov
push
cld
jmp
push
and
or
shl
ror
mov
add
inc
xor
mov
and
dec
test
jne
pop
dec
ror
and
and
rol
mov
mov
call
jmp
in
shlb
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
or
dec
shr
sub
mov
sub
xor
or
pop
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
shr
jmp
jmp
jmp
jmp
jmp
je
push
mov
and
and
add
rol
inc
push
xor
rol
and
push
rol
mov
xor
xor
xor
pop
add
xor
mov
xor
dec
test
jne
pop
lea
mov
call
jmp
and
and
mov
ror
add
xor
mov
or
mov
jmp
jmp
push
mov
push
nop
jmp
je
push
xchg
xor
xchg
jmp
jmp
jmp
push
mov
mov
mov
push
addr16
jmp
jmp
jmp
jmp
jmp
push
addr16
mov
mov
sub
mov
or
mov
mov
and
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
add
cld
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
call
cld
mov
push
pop
mov
addr16
mov
mov
shl
or
sub
mov
call
jmp
push
xchg
pushl
nop
jmp
jmp
push
mov
jmp
and
cld
mov
cld
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
nop
nop
nop
nop
nop
push
xchg
mov
addr16
jmp
jne
jmp
jmp
jmp
jmp
push
mov
call
addr16
mov
nop
jmp
andl
mov
push
push
pop
add
xchg
shr
add
add
or
mov
shl
shl
or
mov
mov
push
xchg
push
nop
jmp
jmp
jmp
jmp
jmp
nop
jmp
sub
sub
and
pop
or
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
shr
xor
sub
mov
push
cld
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
inc
test
jmp
nop
sub
mov
push
mov
push
cld
push
mov
jmp
call
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
nop
jmp
xor
mov
jmp
mov
xchg
jmp
add
xchg
cmpl
mov
je
jmp
sub
xchg
mov
cld
jmp
jmp
jmp
push
xchg
inc
mov
add
sub
shl
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
sar
or
ror
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
mov
xchg
mov
mov
jmp
inc
xchg
call
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
cli
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
add
or
sub
inc
mov
dec
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cs
incl
addr16
mov
xchg
mov
push
pop
ror
dec
sub
add
mov
mov
add
xor
or
push
sub
or
rol
push
sub
pop
xor
dec
test
jne
pop
lea
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
push
add
call
mov
jmp
mov
push
pop
mov
cld
sub
xor
sub
mov
add
mov
dec
xor
and
push
inc
xor
push
and
sub
rol
or
pop
dec
shl
dec
test
jne
pop
lea
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
psubq
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movl
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
push
mov
push
nop
push
sub
pop
push
xchg
call
xchg
jmp
jmp
jmp
jmp
in
sbb
rcrb
sbb
add
push
push
pop
push
mov
push
xchg
push
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
add
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
mov
mov
jmp
mov
mov
jmp
jmp
add
add
rol
ror
ror
rol
ror
shl
and
add
dec
xor
shl
shr
dec
test
jne
pop
sub
or
add
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
push
add
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
cmpl
mov
jne
jmp
jne
or
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rorb
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
das
inc
xchg
jmp
jne
or
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rclb
push
cld
or
sub
add
dec
xor
mov
call
addr16
jmp
pushl
mov
pushl
push
pop
call
nop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
push
popl
sub
mov
and
add
pushl
add
pop
or
shr
mov
ror
sub
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
add
pop
add
jmp
add
xchg
push
mov
call
nop
pushl
add
add
shl
pop
or
ror
and
mov
mov
rol
ror
mov
add
push
pop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
jmp
out
movl
xchg
add
ror
mov
shl
xor
sub
xor
mov
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
and
xchg
mov
addr16
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
testb
dec
pop
cmp
addr16
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movsl
add
add
test
add
add
pop
sub
ror
or
xor
pop
add
sub
add
and
pop
add
or
or
sub
pop
call
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
in
xor
xor
and
push
xor
inc
sub
and
and
push
shl
and
dec
pop
or
xor
dec
test
jne
pop
pop
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rclb
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
es
push
mov
mov
cld
add
xchg
add
mov
add
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
shl
ror
and
or
mov
jmp
shr
mov
call
xchg
or
xor
sub
shl
or
pop
sub
sub
and
pop
jmp
mov
jmp
jmp
jmp
test
into
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
add
movl
cld
push
addr16
pushl
xchg
call
xchg
and
mov
dec
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
cld
and
xor
ror
sub
pop
mov
ror
add
add
xor
mov
or
and
or
or
pop
add
sub
sub
dec
shl
mov
xor
xchg
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
popl
add
or
or
mov
inc
add
shl
or
ror
mov
sub
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jbe
add
push
pop
jmp
and
and
ror
and
add
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
push
add
jmp
mov
xchg
andl
mov
add
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jne
xchg
and
add
add
mov
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
add
decl
test
add
add
shlb
test
scas
rclb
stos
xchg
inc
add
and
rol
or
mov
call
mov
jmp
pop
in
mov
call
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
nop
incl
xchg
dec
xor
or
or
dec
mov
jmp
add
xor
pop
pushl
xchg
push
mov
pushl
mov
push
mov
call
xchg
add
and
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
sub
or
xor
ror
mov
sub
push
pop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
add
add
add
and
dec
dec
mov
mov
addr16
dec
or
mov
add
push
pop
mov
addr16
dec
sub
rol
and
add
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
mov
incl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
std
jmp
mov
pop
or
xor
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
leave
dec
mov
jmp
and
mov
mov
cmp
mov
je
incl
xchg
or
add
mov
cmp
mov
jl
xor
xchg
jmp
or
mov
and
mov
cmp
xchg
jmp
aam
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
lods
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
xor
or
and
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
mov
add
and
addr16
add
mov
jmp
incl
push
pop
add
xchg
cmp
cld
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
incl
fisttpll
sbb
add
xor
shl
mov
ror
and
pop
jmp
ror
xor
shl
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
push
xchg
call
xchg
add
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
icebp
loopne
shr
mov
jmp
jmp
sub
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
add
xchg
mov
or
mov
pop
and
mov
xor
pop
sub
shr
and
or
pop
jmp
shlb
popl
movb
mov
movl
push
pop
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
add
xchg
pushl
shl
or
mov
add
xor
pop
inc
xchg
inc
nop
jmp
jo
jno
leave
dec
add
mov
mov
mov
pushl
or
shl
xor
sub
pop
jmp
mov
cld
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
inc
add
pop
cmpl
xchg
jne
shl
shl
shl
shr
sub
pop
shl
mov
mov
mov
xchg
add
push
pop
jmp
add
addr16
mov
mov
dec
rol
shr
mov
dec
mov
add
nop
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loop
xchg
add
xchg
xor
mov
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
pop
push
popl
xor
shr
sub
sub
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loope
dec
movb
cld
incl
nop
jmp
dec
inc
add
ror
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
cmpsl
fisttpl
mov
ljmp
and
ror
mov
mov
addr16
sub
addr16
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
mov
jge
inc
and
mov
xor
push
pop
inc
xchg
xor
ror
shl
sub
mov
and
push
pop
inc
xchg
inc
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
or
lcall
inc
mov
mov
mov
sub
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
cmp
je
shr
inc
mov
xor
xor
add
sub
mov
sub
push
pop
mov
mov
incl
xchg
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ficomps
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
or
mov
add
xchg
add
xchg
nop
nop
nop
nop
nop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
mov
nop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jne
push
mov
pushl
xchg
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
cmp
mov
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
nop
nop
nop
or
mov
sub
addr16
mov
or
mov
mov
mov
incl
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
cld
xor
sub
xor
mov
and
xor
xor
mov
shr
mov
mov
nop
call
xchg
mov
xchg
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xchg
jmp
out
stos
stc
jne
nop
nop
nop
nop
nop
jmp
jmp
data16
dec
mov
sub
ror
ror
mov
mov
xor
add
mov
mov
pushl
xor
mov
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
xchg
call
cld
push
addr16
call
xchg
jmp
jne
incl
jmp
dec
xchg
dec
xchg
rol
sub
xor
xor
dec
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loopne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rcll
addb
add
shl
rol
mov
nop
nop
nop
nop
nop
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
loop
mov
add
adc
or
or
inc
mov
add
cld
sub
cld
jmp
dec
and
mov
jmp
icebp
out
stos
incl
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
repz
add
shr
mov
call
mov
jmp
rclb
cld
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
jmp
int3
adc
add
xchg
jb
inc
xchg
cmp
xchg
jb
inc
cld
cmp
xchg
jae
jmp
mov
mov
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
rol
xor
xor
rol
mov
and
cld
cmp
mov
jne
jmp
inc
mov
inc
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
nop
nop
nop
nop
add
mov
or
xor
mov
mov
rol
add
and
or
mov
mov
sub
push
pop
mov
mov
incl
mov
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
and
mov
add
xchg
add
xchg
add
xchg
pushl
dec
xor
sub
and
pop
inc
nop
inc
addr16
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
add
mov
cmpl
push
pop
jne
call
addr16
mov
xchg
mov
xchg
mov
cld
xor
or
xor
sub
rol
mov
jmp
inc
es
test
jmp
push
shr
add
mov
mov
and
dec
test
jne
pop
xor
rol
and
dec
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
push
xchg
jmp
js
sbb
xchg
xor
xchg
inc
xchg
jmp
nop
nop
nop
nop
nop
xor
and
sub
xor
mov
jmp
sub
add
sub
rol
mov
call
xchg
push
xchg
nop
nop
nop
nop
nop
mov
addr16
call
push
pop
mov
xchg
jmp
xor
push
rol
mov
mov
mov
incl
cld
incl
xchg
mov
mov
xor
xchg
cmpl
mov
jmp
and
mov
and
ror
mov
mov
dec
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
dec
inc
mov
mov
add
xchg
jmp
jmp
xchg
lock
decl
inc
and
sub
sub
or
inc
pop
sub
xchg
and
shl
dec
sub
xor
pop
and
sub
ror
mov
sub
mov
mov
or
shl
rol
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
shl
mov
add
xchg
nop
nop
nop
nop
nop
push
cld
call
xchg
cmp
addr16
nop
nop
nop
nop
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
sbb
cmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jne
and
mov
mov
mov
rol
xor
mov
add
mov
add
addr16
jmp
nop
nop
nop
nop
nop
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
and
pop
add
xchg
add
xchg
push
mov
pushl
xchg
call
mov
nop
nop
nop
nop
nop
mov
mov
add
nop
add
mov
and
add
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
rolb
nop
nop
nop
nop
nop
nop
jne
call
xchg
mov
push
pop
inc
rol
add
mov
sub
add
mov
add
add
add
add
and
sub
pop
rol
xor
pop
sub
and
pop
mov
xchg
nop
nop
nop
nop
nop
cmp
cld
jne
pushl
inc
and
rol
rol
add
pop
add
xchg
mov
nop
mov
rol
inc
and
mov
add
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
enter
sbb
or
lret
xchg
sub
out
push
cmp
add
cmp
mov
mov
lods
iret
pusha
movsl
out
lds
cmp
or
xchg
dec
xor
test
rol
cmp
pop
adc
mov
fcomps
loope
jns
xlat
and
aad
inc
jmp
xchg
mov
sbb
test
fistps
enter
stos
lea
cltd
push
lret
push
mov
dec
inc
int3
pushl
push
cmp
dec
sub
xor
inc
inc
cmp
mov
jg
mov
pop
sub
sub
in
ds
push
mov
jle
out
movsl
mov
mov
rcr
shrb
out
dec
lea
cmpsl
jb
or
lret
shld
gs
popa
mov
ljmp
fwait
scas
and
inc
mov
pop
lret
pop
test
cmp
jb
jnp
mov
and
loop
data16
js
outsl
in
mov
xor
push
fists
and
push
pop
adc
jg
push
adc
insl
lahf
mov
dec
jo
adc
test
out
dec
pushf
lret
lret
fsubrs
xchg
push
stos
movsl
addl
inc
push
mov
jne
nop
test
add
adc
aad
lock
mov
push
xchg
mov
xchg
out
push
mov
js
inc
scas
repz
mov
xor
push
xor
add
mov
rorl
dec
adc
adc
add
cmp
adc
rclb
cmc
or
push
outsl
jno,pn
iret
insb
dec
out
js
das
pusha
push
cmp
mov
mov
mov
outsl
outsl
mov
jbe
inc
leave
ss
aas
cmpsl
nop
stos
xor
stc
test
sbb
inc
insl
lock
mov
cmc
fstpt
dec
gs
divb
xchg
imul
pop
mov
dec
mov
jg,pn
sti
fnsave
sbb
push
cli
and
ss
push
mov
int3
imul
jae
sbb
xchg
imul
mov
jbe
ljmpw
movups
movsb
pop
test
dec
sbb
dec
int
mov
out
sbb
jmp
out
inc
movsb
out
movsb
loop
pop
lret
inc
adc
xor
cltd
mov
divl
stos
insb
cmc
or
cmpsl
sbb
ljmp
in
push
adcl
jb
xchg
pop
inc
cmpsl
sub
cmp
clc
fsubs
add
pand
hlt
jle
sub
in
data16
dec
mov
pushf
sub
add
push
inc
data16
mov
add
std
cmp
add
xlat
out
fcompl
sub
mov
mov
sbb
pop
sti
push
mov
push
mov
push
mov
popf
sbb
popa
inc
ret
dec
push
pop
push
inc
sarl
je
pop
movntq
push
inc
xchg
push
pop
and
or
sti
lahf
loopne
leave
call
pop
shlb
int3
ret
imul
jns
sub
shlb
pop
in
mov
insb
lahf
lods
xor
std
pop
test
out
fsubs
dec
flds
aaa
xchg
rcrb
je
cmpb
jl
scas
inc
jbe
jmp
shlb
lahf
mov
mov
inc
jns
sub
lea
into
add
stc
sub
mov
lret
mov
das
in
push
add
and
add
push
ret
nop
je
inc
sub
add
movsl
gs
jp
xchg
xchg
lods
loope
insl
push
movsl
mov
push
fiaddl
rcrl
movsb
or
cmc
roll
jno
mov
add
shlb
jmp
adc
mov
inc
xchg
or
sarb
jp
addl
std
dec
test
test
sti
push
xor
popf
or
xchg
into
or
adc
push
popl
out
jmp
loop
shrl
pop
int
jge
mov
or
enter
mov
lds
cli
stos
mov
mov
add
mov
je
cmovno
aaa
sti
iret
dec
icebp
ja
pop
pop
sbb
imul
xor
daa
loope
and
pop
jp
flds
fldt
push
mov
inc
cmp
mov
xchg
sub
push
mov
inc
stos
mov
and
mov
adc
jo
push
jle
cmp
cmp
xchg
mov
or
add
inc
cmp
pop
cmp
movsl
loope
and
sahf
inc
fnstsw
xor
xchg
fwait
push
cwtl
cmp
or
dec
push
add
jb
pop
cmpsl
cmp
stos
daa
cwtl
in
gs
adc
orl
push
lods
out
in
mov
cmp
lahf
pop
jl
xchg
dec
pop
stos
and
sub
xlat
ret
or
fucomp
and
hlt
inc
insb
and
out
test
rclb
daa
or
rcrl
aam
sub
fisttpl
dec
jmp
je
popf
repz
and
push
mov
fwait
pop
pop
jno
adc
icebp
inc
xor
insl
xor
call
imul
cwtl
aam
push
lods
mov
negb
ja
lret
scas
pushw
push
outsl
lea
call
outsb
enter
in
fiaddl
nop
mov
jb
push
or
mov
aam
inc
sub
popf
loop
jg
push
mov
add
inc
push
mov
or
dec
and
mov
pop
shl
rolb
sarb
mov
ds
jle
and
in
test
cli
sahf
add
loopne
add
divl
or
mov
jne
shl
mov
pop
mov
fwait
inc
pop
pop
push
jo
mov
push
adc
xor
imul
push
or
xchg
mov
and
in
in
or
cmp
cwtl
sbb
mov
dec
jno
pop
xchg
push
xor
mov
or
mov
mov
push
mov
push
xchg
add
inc
jns
pop
dec
repz
jg
in
stc
jbe
mov
fstpl
fnop
add
repnz
cmp
vcmppd
sub
sbb
loop
xor
sub
fsts
ljmp
sti
leave
jno
in
popa
xor
jmp
inc
push
mov
adc
xor
jle
xchg
pop
and
pop
sbb
pop
lret
mov
iret
pop
shl
rorl
pop
scas
inc
inc
aam
orl
mov
sub
adc
pop
add
xchg
loop
testb
pop
divl
hlt
outsb
adc
pop
sbb
pop
scas
cmp
add
scas
jge
mov
adc
pop
cmp
test
adc
cmp
add
js
jp
fwait
and
fstps
aas
mov
ss
mov
loope
cmp
pop
nop
cmp
cmp
sub
cmp
and
test
jmp
adc
fisubrs
ss
popf
dec
stos
pushf
cwtl
aas
imul
testl
or
daa
push
jp
rcrl
lods
mov
popf
insl
xchg
adc
jmp
push
xor
movsb
jb
mov
lcall
icebp
jle
add
shll
rcrl
shll
das
outsb
arpl
mov
mov
loopne
adc
jno
lret
jl
jno
repnz
inc
cmp
or
mov
push
mov
sbb
sahf
hlt
cmp
or
es
loopne
jnp,pt
mov
subb
out
sbb
ret
pop
loopew
sbb
lret
mov
fadd
inc
and
xor
shrb
xchg
in
add
cltd
mov
icebp
scas
push
idivb
xor
repnz
imul
dec
stos
mov
jmp
fists
insl
sbb
stc
xor
loop
loop
jl
jno
mov
icebp
int
mov
sbbb
repnz
sbb
aad
adc
mov
jns
stos
mov
mov
shlb
dec
dec
and
cltd
stos
mov
xchg
add
mov
or
pop
test
sub
sbbb
cmp
ljmp
and
mov
jne
bound
add
pop
xchg
inc
mov
mov
dec
mov
fdivl
xor
sub
mov
xchg
xchg
jmp
push
jl
gs
call
xchg
ret
or
hlt
loopne
and
sub
xchg
cmpsl
or
mov
test
mov
push
mov
mov
test
aad
movsb
ret
fistpl
jae
js
lods
add
pop
xor
pop
mov
cli
movups
imul
sub
and
fwait
push
sbb
test
fucomi
incb
pop
test
xchg
cwtl
push
subb
xchg
xor
xchg
xor
ds
cmp
jmp
loop
mov
xor
outsl
mov
inc
push
popa
jbe
enter
fdivr
imul
outsb
out
xchg
iret
xor
scas
enter
mov
cmp
xor
cld
bound
rorl
sub
stos
mov
dec
pop
sbb
sbb
scas
mov
pop
insl
dec
push
cmc
adc
mov
mov
das
mov
inc
pop
xchg
mov
push
inc
icebp
lcall
inc
iret
push
push
add
sub
push
insl
idivl
and
or
mov
push
cmp
arpl
test
or
shll
add
iret
add
push
mov
mov
pop
imul
icebp
mov
mov
push
ja
push
fidivrl
scas
pushf
fs
dec
mov
mov
dec
add
add
ret
leave
jmp
and
out
sbb
lods
xor
mov
fld
jl
jecxz
test
loope
addr16
and
out
addr16
adc
into
divb
jl
dec
addr16
fdiv
push
loopne
loope
and
mov
and
insb
pop
dec
cli
push
jmp
lret
gs
rol
stc
xorb
inc
dec
jo
cmp
xchg
and
jno
xor
call
push
and
xor
in
sub
pop
imul
jae
and
cmpsb
scas
lods
ss
es
popf
in
pop
push
into
push
cmpsl
sti
sbb
or
iret
cmp
jge
je
imul
js
push
cmc
in
inc
lahf
mov
arpl
jmp
mov
push
jo
nop
jecxz
inc
dec
pop
mov
push
ffree
adc
mov
sub
and
push
mov
inc
push
jae
jbe
hlt
jmp
add
cmp
gs
test
pushf
and
mov
in
aas
loope
fwait
push
bound
sub
mov
push
imul
imul
dec
ret
in
jle
pop
into
aam
mov
cmp
cli
imul
mov
std
cmpsb
pop
sub
mov
pop
add
fldl
jb
jbe
cmp
xchg
cmpsl
pop
dec
popf
nop
into
data16
xchg
xchg
nop
int
cwtl
push
adc
mov
faddl
loopne
repnz
pop
js
cmp
call
dec
lods
rolb
cs
cmpsb
and
mov
clc
inc
xchg
icebp
add
mov
roll
sub
jp
xchg
sub
test
sbb
sahf
sarl
and
jge
pop
sbb
outsl
pop
stos
adc
sub
xchg
push
leave
or
mov
fcomip
cmc
out
mov
je
js
clc
jmp
je
sbbl
cmp
data16
inc
mov
jle
jbe
lods
jle
mov
jl
jo
adc
push
dec
into
ljmp
mov
mov
fsts
mulb
aam
mov
push
jne
cmp
and
push
hlt
pop
mov
sub
mov
ja
sahf
dec
inc
mov
repz
or
in
pop
mov
arpl
aad
xor
pushf
inc
mov
jp
sahf
adc
or
xlat
cs
mov
stos
das
mov
movsl
fmull
jmp
cmp
stos
gs
roll
rorb
and
push
dec
xor
cmc
push
das
fwait
jno
sbb
arpl
sar
in
sub
adc
lahf
out
and
xor
pusha
rcrl
fcomps
pushl
add
mov
cmp
cltd
push
rcrb
jp
imul
out
mov
shr
pop
mov
push
outsl
sub
or
jbe
xchg
xchg
inc
nop
cmpsb
jecxz
js
and
out
push
call
iret
xor
out
sbb
fldcw
negb
sbb
push
push
lods
pop
pop
aaa
mov
shl
lods
mov
stc
sub
dec
dec
sti
inc
data16
push
sub
xor
in
add
sbbl
je
repz
push
jbe
dec
jbe
cmpsl
mov
pusha
ret
leave
jnp
pop
mov
call
shrl
add
or
inc
xor
inc
mov
es
inc
mov
rcll
ret
mov
and
arpl
nop
lods
mov
fwait
xor
mov
es
not
jle
repz
lahf
jmp
add
sub
hlt
jl
pop
lods
inc
das
in
mov
scas
jns
lcall
sbb
movsl
test
add
cmp
inc
adc
mov
lahf
enter
hlt
roll
add
aad
mov
out
mov
pushf
out
cwtl
pushf
dec
testl
in
and
bound
sub
push
sbb
mov
ds
call
imul
jmp
je
xchg
sub
fiadds
cmpb
shll
in
or
dec
xchg
mov
push
fsts
ja
adc
repnz
repnz
xor
sbb
push
inc
push
fisttps
iret
lds
scas
and
jno
cmp
fisubs
or
sub
gs
fldenv
mov
add
sbb
lcall
add
jb
jb
mov
and
mov
jg
in
popf
cmp
jmp
or
push
jne
mov
cli
mov
lret
push
sbb
adc
xor
push
repnz
cmp
inc
adc
mov
loop
mov
jge
popf
repnz
popl
into
shlb
sahf
sub
push
lahf
dec
stos
imul
inc
and
cmc
stos
fnstsw
jb
mov
pop
add
dec
mov
pushl
inc
and
adc
xor
arpl
leave
xchg
lods
mov
testl
mov
out
xor
fstpt
dec
xor
pop
in
sahf
mov
mov
xor
sbb
mov
rcrl
mov
dec
inc
lret
mov
std
out
inc
mov
stos
movsl
mov
clc
fldenv
roll
lret
dec
mov
arpl
add
mov
sub
fcmovu
inc
dec
stc
aas
xor
mov
pop
xchg
mov
xchg
xchg
cmp
cmpsb
adc
sub
scas
sbb
fcompl
in
xchg
inc
xor
bound
sub
mov
push
pushf
mov
push
ret
jle
das
adc
jnp
cmp
lahf
pop
gs
sbb
or
sbb
cmp
pop
sub
xor
aad
outsl
or
enter
xchg
jl
or
mov
iret
and
mov
xchg
lea
call
loopne
dec
repz
lcall
scas
mov
push
mov
mov
dec
dec
je
insb
and
out
sub
mov
jp
jno
ss
popf
jmp
sbb
sbb
dec
mov
or
mov
sti
mov
add
out
std
adc
push
subl
mov
icebp
xor
scas
inc
add
data16
cld
daa
dec
fimuls
jecxz
dec
mov
mov
sar
ffreep
cmp
outsb
xchg
in
out
fisubl
adcb
lea
sub
lds
in
adc
push
xor
mov
cmp
aad
stc
xor
dec
ss
xor
les
aad
xchg
jo
cmp
pushf
add
mov
push
lea
sbb
mov
lret
push
jge
mov
xor
movsb
loopne
mov
pushf
push
outsl
leave
fisubl
lahf
cltd
outsl
aad
xchg
addr16
pop
or
cmp
sbb
push
mov
leave
inc
mov
movsb
dec
outsl
or
xchg
test
add
push
xchg
sub
notb
sarb
and
xchg
fcom
jbe
mov
push
ret
jge
cwtl
xchg
sub
outsl
push
ss
pop
mov
test
pop
je
imul
xor
pop
fcmovu
andl
mov
test
jnp
dec
ss
and
cmp
leave
iret
jp
insb
popa
xor
pop
push
call
es
std
push
pop
nop
out
imul
dec
xor
cmp
popf
out
cli
lcall
out
imul
xor
pushf
add
pop
lea
mov
xchg
fnstenv
outsb
insl
cmpsb
push
les
jns
xor
pop
jne
repz
loopne
rcll
mov
push
icebp
int
loope
cwtl
movsl
int
addr16
mov
and
mov
int
leave
rolb
imul
jle
cmpsb
and
dec
pop
jb
daa
xchg
or
ja
jg
testl
and
popf
insl
lock
lret
jg
ret
aas
cmp
mov
add
out
cmpsl
idivl
cli
mov
adc
test
test
mov
adc
sub
rcl
push
pop
int3
scas
mov
inc
repnz
push
jecxz
pop
push
shr
mov
test
movsb
sub
dec
call
gs
mov
mov
andb
jno
mov
push
inc
pop
sbb
xchg
mov
mov
or
mov
sarb
ljmp
repnz
cmp
inc
xchg
dec
jo,pt
inc
xchg
mov
insl
jmp
jge
dec
or
loop
insb
xchg
sub
sbb
xor
test
aaa
sbb
mov
xor
rolb
mov
or
and
push
aad
imul
ds
xchg
addr16
add
xor
iret
fiadds
jb
add
push
sti
inc
inc
jb
lcall
lea
add
std
adc
jne
cmpsb
scas
sub
out
lock
push
xchg
test
shl
cmp
and
cmpsb
test
push
in
cmp
lods
sub
pop
sarl
xor
inc
packssdw
inc
cwtl
sbb
or
add
aas
cwtl
or
pop
pop
xchg
sbb
mov
push
fidivrl
outsb
or
xchg
inc
xchg
arpl
lock
pop
stos
lahf
push
dec
mov
dec
test
xor
movsl
adc
mov
hlt
and
pop
or
and
repnz
or
sbb
cmp
jbe
loop
jno
jg
xchg
sbb
loop
rcll
repnz
ljmp
das
testl
cmc
xorl
xchg
dec
jmp
jle
inc
inc
in
mov
fwait
dec
pop
inc
pop
stos
xorb
or
icebp
jmp
das
jecxz
or
jb
in
or
mov
jns
mov
repz
cmc
insb
outsl
or
cli
mov
adc
dec
mov
in
sub
scas
les
imul
insl
push
cld
sbb
jo
inc
sub
xor
cmp
lods
aas
xchg
push
outsl
sub
sub
and
sub
mov
sbb
xchg
mov
or
xor
xor
inc
mov
arpl
xor
ljmp
mov
insl
jmp
mov
and
outsb
stc
pop
jae
dec
bnd
in
ljmpw
movsl
sub
lret
mov
mov
or
push
pop
xchg
xchg
jnp
jne
add
jbe
sbb
or
repnz
jg
push
mov
mov
jae
adc
lcall
orl
cmp
adcl
push
out
mov
dec
cmp
and
mov
add
adc
pop
loopne
arpl
sbb
cs
imul
mov
cmp
call
sbb
push
and
add
je
adc
lods
xor
shr
pop
imul
mov
ret
leave
sbb
and
lods
sub
pop
adc
sbb
pop
jl
into
push
xlat
push
lods
loope
ss
and
sbb
jl
mov
push
testl
lods
repnz
std
fbstp
test
je
inc
jp
fisttpl
insl
repnz
pop
les
pop
mov
jbe
pushf
lret
jmp
jge
inc
cmp
cltd
insl
ror
pop
xchg
arpl
xchg
and
arpl
shll
mov
inc
inc
mov
pop
jge
mov
mov
xchg
push
rcrb
test
stos
pop
pusha
andl
in
aaa
rolb
out
pusha
rcll
or
les
mov
sbb
ds
or
push
int3
and
out
mov
adc
aad
imull
push
lock
rorl
aas
into
add
mov
adc
sarl
clc
mov
fwait
inc
test
push
fists
mov
mov
lock
nop
rolb
xlat
fists
jo
mov
pop
mov
or
cmpsb
scas
test
sbb
and
jmp
popf
pusha
je
jmp
aas
sub
movhps
mov
cmpsb
mov
or
inc
fmul
addr16
push
cld
outsl
pop
adc
rcrl
cld
lea
mov
jge
pop
adc
mov
xchg
in
or
std
inc
mov
cmp
and
jne
pop
xchg
sbb
lea
add
leave
jle
dec
mov
cmp
or
insl
outsb
sub
movsb
sbb
dec
mov
cmp
pop
jecxz
sahf
popa
inc
mov
inc
dec
mov
push
ja
xchg
mov
popf
xchg
fcoms
jl
test
jecxz
jno
arpl
jno
xchg
jb
pusha
inc
in
mov
push
sbb
je
shll
mov
fdivs
fwait
mov
push
xor
repnz
xor
test
inc
outsl
leave
dec
lds
sarl
popa
mov
xor
cld
push
xor
fs
jecxz
xchg
imul
loopne
enter
fsubrs
add
fwait
int
lods
jmp
fcmovbe
xchg
mov
es
fwait
and
pop
push
inc
arpl
mov
adc
fsubl
es
nop
and
dec
mulb
fldcw
in
idiv
push
xlat
sub
push
push
out
shll
mov
push
jmp
fdivrl
inc
pop
dec
addb
sub
cld
leave
insl
enter
dec
adc
mov
out
es
bound
loope
arpl
mov
jno
and
and
adc
shrb
shrb
das
sub
mov
jge
aaa
adc
pop
and
push
mov
in
mov
js
test
ljmp
daa
test
xor
inc
pop
imul
add
inc
fs
negb
adc
jnp
push
rcl
dec
scas
stc
notl
imul
divb
dec
sub
push
int
lcall
daa
add
sarb
insl
dec
jo
sarl
and
fs
gs
jae
lret
jb
mov
mov
mov
notl
ljmp
rclb
jnp
cltd
test
cmp
sbb
push
das
mov
rcr
cmp
and
cmp
mov
hlt
adc
and
cld
xchg
je
jae
jle
imul
sarb
or
je
int3
loop
call
sub
xchg
jo
inc
jnp
xor
mov
mov
subb
pop
jp
enter
xor
add
dec
negl
push
ret
or
fwait
inc
rcl
xor
lret
mov
add
cmp
push
jae
pusha
jge
push
scas
mov
and
and
ret
sub
jnp
sub
andl
jmp
mov
push
arpl
dec
ds
stos
push
rcr
and
inc
push
in
sti
mov
adc
sub
or
inc
fdivs
or
test
xor
jmp
push
ret
mov
xchg
test
mov
xchg
add
insl
shlb
adc
pop
xchg
pop
or
add
mov
lret
sarb
fisttpll
test
fdivs
movsl
outsl
adc
or
sub
jg
dec
or
inc
mov
mov
addr16
test
push
jg
jb
pop
xchg
aam
outsb
fisubl
imul
hlt
cmpsl
stos
out
add
test
push
pushf
sub
inc
clc
sub
or
test
xor
and
jle
xchg
data16
jge
cmc
ja
jl
das
cmp
aam
lds
sbb
pop
out
dec
scas
ljmp
addr16
and
sub
adc
fisttps
mov
inc
or
pop
cmc
pop
cwtl
mov
sarl
dec
inc
inc
xchg
mov
push
es
shrl
cltd
aas
shrb
xor
xor
lods
rcll
fisubrs
inc
clc
sbb
dec
out
pop
int
mov
xchg
int3
test
pop
sahf
imul
cs
stos
xor
outsb
jne
push
fidivrl
mov
and
dec
pop
cmp
sbb
fs
push
aad
mov
cltd
jo
jno
mov
sbb
dec
sbb
in
sub
sbbl
add
sub
mov
mov
pop
cld
loop
pop
scas
add
push
jb
lods
pop
or
jo
gs
push
out
shrb
inc
inc
fidivs
inc
lock
cmp
js
sub
rclb
scas
stc
jno
ja
xor
mov
jnp
in
push
xor
stos
icebp
pop
sbb
test
divb
pop
bnd
xor
enter
sub
shll
mov
push
pop
and
test
xchg
dec
adc
aam
rcr
sahf
in
mov
scas
pushf
xchg
mov
and
cs
ficoms
scas
mov
xchg
jmp
fstpt
data16
outsl
mov
ret
std
cmpb
and
add
mov
insb
mov
int3
jbe
mov
push
lds
mov
mov
xor
xchg
jnp
ss
jp
loope
fisubrl
out
test
jne
in
pop
fxch
pop
movsl
ret
add
dec
jo
sub
xchg
xor
mov
ds
pushf
mov
lahf
push
pop
aaa
xchg
aaa
call
shlb
inc
jbe
insb
inc
mov
in
lods
pop
negb
lahf
mov
addr16
and
inc
xchg
pop
call
pop
in
test
inc
into
aas
dec
out
and
or
sub
or
fmull
fwait
add
push
mov
popf
or
dec
or
dec
xor
adc
pop
sub
call
ret
test
in
imul
je
cmpsb
femms
inc
inc
inc
out
clc
sub
mov
add
addl
out
shll
jl
movsl
xor
fadds
push
jg
movsb
or
in
jne
out
ret
dec
daa
or
xlat
jle
ja
lea
jb
mov
jns
pop
mov
xor
mov
push
mov
cmovns
jns
adc
sub
mov
add
addr16
mov
int3
sbb
xorl
push
mulb
leave
in
iret
mov
imul
popf
sbb
pop
fs
enter
enter
in
jnp
adc
pop
shr
mov
jle
pop
aas
jmp
pop
cmc
fsubs
jno
mov
jns
cld
xor
sti
mov
pop
pop
xchg
jbe
or
cmp
jp
and
jecxz
imul
push
stc
mov
rolb
mov
cld
cmp
xor
push
lret
inc
es
adc
movl
xchg
adc
or
mov
movsb
outsl
cmc
stos
gs
adc
out
mov
pusha
mov
push
imul
ja
shlb
mov
decb
push
fimull
cmp
mov
cwtl
adc
pop
ja
idiv
jo
xor
movsb
mov
je
dec
into
stos
inc
fwait
je
mov
push
dec
into
mov
inc
movsl
inc
jnp
lea
pop
cwtl
push
in
cmp
rorl
pop
stos
popl
sub
stos
or
jb
es
jno
addb
aad
inc
pop
clc
ja
lods
cmpsb
dec
lcall
sub
xchg
push
ds
loop
cli
arpl
lods
mov
and
movsb
add
mov
bswap
fmulp
mov
and
or
sbb
ret
sub
sti
cmp
bound
sub
mov
pushf
push
push
adc
mov
fmuls
push
push
jbe
dec
mov
jno
dec
add
test
pusha
pop
shr
or
sub
in
mov
test
push
pop
xor
in
cmp
cld
popf
mov
fwait
sbb
sub
sbb
xor
ret
stos
push
std
fwait
push
dec
ds
xchg
push
repz
int3
add
stos
mov
std
xor
aaa
jle
push
call
outsl
add
push
add
sub
sub
sub
or
aad
sbb
sbb
or
outsb
not
cmpb
aas
sti
mov
dec
pop
sub
cltd
fidivl
dec
ljmp
je
addr16
das
je
sahf
mov
bound
aam
pop
xchg
mov
imul
mov
ljmp
add
cmp
dec
add
or
xchg
xor
mov
outsl
in
push
das
pop
in
jbe
dec
in
lret
mov
mov
inc
lock
in
mov
xchg
aaa
int3
jb
inc
test
xchg
out
push
outsb
push
shrb
shlb
push
test
lock
pusha
leave
popf
mov
cmp
and
dec
je
pop
das
sub
dec
adc
lahf
xchg
popf
mov
sbb
bound
mov
pushl
xchg
inc
sbb
sarb
lods
ljmp
jmp
aam
loope
jg
sbb
fcmovnbe
addl
cmpsl
and
mov
push
aad
mov
clc
lods
and
mov
jle
jno
mov
inc
cwtl
and
subl
arpl
mov
mov
ret
dec
cmp
pop
ret
or
or
test
sub
hlt
outsb
mov
pop
sub
ret
sahf
ljmpw
loopne
push
and
cwtl
jl
jae
out
pop
xchg
xor
jmp
aam
inc
outsb
jae
mov
shll
mov
imul
mov
lods
call
setnp
jecxz
imulb
fdivrl
mov
add
jmp
adc
mov
sbb
fwait
dec
push
jno
gs
mov
inc
inc
jbe
int3
or
mov
mov
lods
in
fbld
stc
xchg
mov
lcall
pop
jnp
or
cmc
pop
daa
cmc
and
mov
dec
iret
mov
jp
mov
add
mov
jbe
sub
xchg
jbe
jne
cwtl
leave
dec
sub
popf
test
push
repnz
nop
retw
push
dec
test
addr16
rorb
subl
ss
lcall
es
inc
xor
push
lds
imul
ds
cli
int3
insb
out
inc
test
add
xchg
daa
mov
cmp
xchg
iret
movsb
mov
cwtl
xchg
int3
push
adc
js
movsb
adc
sbb
mov
sbb
cmpsb
aas
push
pop
scas
arpl
sub
push
loop
fisubrl
lock
enter
fsubl
cmp
aas
jp
jnp
outsb
add
negb
xchg
fsts
fistl
stc
pop
por
lret
pop
std
mov
cmp
icebp
sti
mov
fstp
stos
mov
or
addr16
xor
cmp
push
sbbb
push
mov
xchg
xor
int3
jecxz
mov
ljmp
mov
fists
mov
es
into
dec
lods
xor
mov
rclb
or
adc
das
fldcw
xor
mov
xor
sbb
dec
mov
jnp
jbe
jg
int
pop
mov
dec
outsl
or
ljmp
cmp
lahf
add
mov
pop
dec
push
push
lods
cs
fnstenv
sbb
mov
inc
pop
loopne
xchg
and
and
or
out
cmp
xor
inc
mov
push
xchg
bound
idiv
notl
outsb
xchg
mov
jmp
fadd
insb
outsl
mov
jl
stos
es
jae
push
xor
test
movsl
lret
pop
gs
and
ret
pop
insb
mov
dec
sbb
sub
xor
stos
fidivrs
popf
push
pop
inc
xchg
adc
sub
sub
push
imul
pushf
dec
or
std
les
fwait
adc
adc
sub
out
iret
clc
fstpl
sbb
add
sub
add
mov
push
xlat
fcompl
outsb
out
xchg
ss
sub
scas
jnp
outsl
clc
pop
sub
add
scas
dec
cwtl
dec
enter
add
aam
jge
es
lods
fnstsw
add
mov
sub
out
movsl
xor
sbb
mov
add
xchg
adc
push
cwtl
inc
adc
lret
jnp
sahf
out
lahf
arpl
adc
loop
dec
sub
stos
sub
jb
fs
imul
xchg
movb
sbb
fdivs
xchg
decl
xchg
shl
xor
stos
push
cmp
pop
add
jnp
jns
push
mov
mov
lret
dec
sub
and
adc
or
dec
subl
je
xor
data16
or
dec
and
pop
push
shrl
bound
loope
dec
add
pop
in
das
ds
pop
xor
rcrl
jns
xor
add
outsl
jnp
push
push
fimuls
mov
jg
dec
addl
sbb
mov
cld
lds
push
shrl
clc
fdivs
xchg
mov
testl
cmp
and
push
jns
inc
in
mov
dec
mov
xchg
lds
mov
xchg
sbb
mov
cmp
sub
and
fstp
push
mov
or
xor
push
sub
mov
sahf
mov
mov
jecxz
jg
inc
and
mov
or
mov
or
mov
inc
sahf
xchg
in
mov
inc
sub
add
sub
push
adc
lcall
mov
or
mov
pop
imul
cmp
cmp
pop
loope
mov
gs
jae
jmp
sbb
js
pop
mov
or
adc
insl
mov
sub
cmpsl
sub
mov
sahf
add
in
data16
pushf
out
ret
cmp
ljmp
mov
mov
or
sbb
hlt
in
xchg
ficoms
lcall
fwait
push
data16
xchg
sub
addr16
stos
or
lock
scas
aad
lock
icebp
dec
clc
sub
popf
or
adc
inc
imul
sub
add
das
add
inc
jle
dec
xor
sbb
pop
addr16
or
dec
out
das
cmovs
adc
xor
sbb
fisubrs
lods
push
ficoms
pop
inc
pop
scas
aas
fs
mov
ss
xchg
adc
sub
mov
mov
adc
mov
mov
xchg
ds
or
xchg
mov
test
mov
hlt
dec
cmp
imul
das
lret
pop
mov
xor
loop
and
cli
cmp
or
pop
clc
dec
push
outsb
dec
inc
dec
sub
je
imul
lahf
jne
jns
outsl
jne
push
xchg
das
leave
pop
and
push
jge
jno
pop
test
cmpsb
sub
sub
popa
pop
call
inc
imul
loop
movsl
lret
inc
cmpsb
test
mov
loop
fiaddl
popa
cmp
jns
and
cmp
nop
pushf
ljmp
adc
movsl
clc
mov
fsubrl
sahf
adc
or
rcrl
add
outsl
test
add
fsub
stos
sub
dec
jl
cs
dec
xor
xchg
adc
aas
mov
filds
jge
mov
inc
int
arpl
xchg
mov
add
xchg
inc
jae
lds
lahf
push
cmp
dec
add
sub
mov
shrb
xlat
out
xchg
push
and
pop
push
mov
push
std
cmp
mov
imul
sbb
jp
cmpsb
pop
sbbb
add
and
mov
jmp
cltd
into
popf
mov
sarb
lret
dec
movsl
push
jne
or
push
mov
adc
outsl
cltd
xchg
int3
push
inc
repnz
std
mov
popf
addr16
pop
mov
mov
jns
or
es
xlat
mov
loopne
push
ret
xlat
aam
cmp
sub
mov
inc
movsb
jl
ds
xchg
shlb
lock
aas
and
test
add
xor
ja
lock
insl
dec
in
inc
mov
jne
jmp
icebp
pushf
loop
push
pop
pop
push
in
sbbb
int
push
xchg
adc
add
xor
andb
xchg
mov
ret
inc
roll
adc
out
test
push
jne
and
fistl
cli
fs
sbb
sub
push
push
push
mov
fwait
push
inc
in
jl
movq
stc
jb
add
xor
popa
mov
hlt
adc
jns
js
jecxz
sub
jl
mov
clc
mov
pop
cmp
addr16
test
shr
push
mov
data16
dec
jmp
add
cmp
insb
pop
xorl
push
lock
mov
or
cmp
dec
push
push
shll
loopne
lock
lods
xor
mov
adc
add
jg
in
cmp
cmp
std
in
addr16
aas
inc
les
insb
popa
xlat
adc
xor
addl
lock
xchg
fs
dec
dec
push
aaa
pushf
lock
pop
push
sub
mov
popf
daa
mov
or
aaa
pop
jno
push
in
pop
sarb
adc
mov
addl
mov
fucomp
mov
sub
sbb
inc
mov
push
xor
mov
push
inc
jne
add
in
inc
mov
inc
ds
inc
jbe
and
inc
mov
je
xor
in
jmp
inc
jb
cmc
pop
and
jo
and
mov
xor
popf
cmp
jne
cmp
lods
aaa
dec
loope
xchg
icebp
pop
or
fldenv
aaa
dec
add
andb
imul
test
cmc
cld
insl
stc
mov
xor
pop
ja
jg
mov
fcoml
mov
neg
scas
dec
outsl
push
adc
sub
mov
fists
mov
rorl
stos
sub
aas
test
std
jl
xchg
xor
aam
jo
lods
bound
push
sbb
and
sub
jbe
fidivrl
in
jo
cmp
into
cmpsb
lahf
loope
jb
mov
inc
and
and
mov
mov
mov
xor
mov
and
add
cmp
push
outsl
in
cld
bound
idivl
and
aam
push
nop
int
cwtl
dec
mov
cmpsl
pop
sbb
jns
lahf
mov
cli
cmp
in
and
stos
fstpl
mov
mov
enter
out
cmp
insl
movsl
cmp
jo
push
sbb
xor
pop
pop
and
cmp
out
cmp
mov
je
outsb
scas
dec
and
in
aad
xchg
xchg
ljmp
mov
je
cmp
mov
sbb
jno
mov
sti
icebp
jno
rcl
inc
addb
gs
rcrb
jmp
jmp
dec
icebp
or
or
lret
cli
jnp
dec
xchg
mov
clc
cmpl
and
dec
out
testl
int
jl
inc
push
and
xchg
fwait
dec
mov
sbb
xchg
sbb
mov
daa
push
sub
mov
pop
fstpl
push
ret
lods
xor
pop
cmp
sbb
das
mov
test
shrb
outsl
pop
lock
cmp
inc
imul
js
mov
mov
cmp
repz
mov
clc
mov
fsub
jp
or
int3
jns
shlb
and
adc
out
pop
outsl
dec
out
dec
mov
clc
subb
sub
dec
mov
jge
js,pn
aas
add
cwtl
mov
shl
xchg
inc
in
pop
or
dec
push
mov
pop
lock
rcrb
sti
pop
mov
jmp
pop
pop
cmpb
cmp
loopne
push
cmp
scas
push
fistpl
cwtl
test
dec
popf
push
push
das
jo
out
dec
or
pop
mov
setnp
cltd
xchg
jb
inc
inc
pop
outsl
inc
adc
xchg
test
nop
push
dec
xlat
xchg
fmuls
or
js
stos
lret
out
jbe
mov
jb
in
rcr
sbb
ret
notl
insb
cmpsl
mov
mov
popa
cltd
push
push
fdivs
pop
popf
mov
repnz
xchg
les
in
pop
shlb
sahf
sub
outsb
inc
xlat
or
jbe
inc
mov
pop
sbb
push
dec
je
fdivs
cmp
xchg
leave
ret
jno
adc
mov
and
loop
fwait
inc
push
pop
lods
fildl
adc
js,pn
lock
mov
sub
pop
data16
iret
xor
pop
or
lahf
jno
push
enter
cmp
push
add
mov
mov
push
sbb
xlat
push
push
int3
adc
or
aaa
cmpsb
sbb
mov
rcr
ljmp
pop
test
xchg
xchg
in
pop
shlb
loope
jo
adc
jecxz
xchg
das
fidivrs
loop
pop
fldt
mov
popf
sub
enter
int
mov
adcl
xor
dec
cmpsb
nop
sarl
push
rclb
adc
jmp
adc
cwtl
adcl
xor
in
or
push
in
sar
inc
and
dec
leave
rorb
jmp
sti
mov
pop
inc
sbb
ret
mulb
orl
stos
shlb
push
fidivs
fstl
out
sti
test
sub
sub
fiaddl
push
daa
imul
sti
jp
loope
test
xor
cmp
add
dec
not
cmp
ss
and
or
outsb
sbb
pushf
dec
sbb
shrl
fists
jge
insb
pop
aad
cmp
jb
ja
pop
mov
repz
add
flds
pop
mov
adc
xchg
outsl
xchg
cmp
in
insb
xchg
pop
adc
pop
mov
dec
jmp
in
dec
sbb
imul
and
andb
sar
cmp
cwtl
xor
testb
cmp
push
test
push
out
xor
loope
and
test
xchg
jg
sub
icebp
andb
dec
pusha
addl
lret
sub
adc
cmpl
mov
and
jns
push
cli
out
incl
inc
cwtl
pop
jns
sti
pop
popa
pop
data16
jle
bnd
adc
mov
xor
fisubrs
inc
gs
shll
repnz
bound
adc
inc
and
mov
push
fsubl
jo
and
mov
mov
inc
dec
sbb
push
lret
shrl
fwait
mov
jle
mov
push
dec
xchg
sarb
leave
ds
cmpsb
fdivrs
call
cmpsb
dec
push
jle
jnp
sbb
inc
cmp
andb
lods
push
mov
addr16
test
pop
jo
mov
cwtl
pop
faddl
sub
or
jmp
xchg
mov
jne
movsb
lds
xchg
addb
jecxz
icebp
mov
sar
lock
inc
pushf
or
leave
push
adc
inc
sub
cmp
lahf
test
and
pop
dec
aaa
push
rcrb
inc
frstor
mov
dec
xor
aaa
movl
orl
sub
out
mov
sbb
or
jge
ljmp
fstpl
into
adc
loopne
lret
sti
mov
xor
push
sarb
js
ret
mov
test
div
cmp
dec
mov
mov
mov
repnz
mov
out
and
sti
test
push
adc
movsl
out
mov
push
jbe
cmpsl
xchg
incl
pop
lret
mov
clc
mov
loop
lea
xor
test
adc
adc
adc
ss
sbb
push
pop
cld
test
pop
movsl
loopne
xchg
push
hlt
repz
xor
jecxz
push
and
ud2
notl
or
and
mov
leave
nop
leave
rorb
sub
arpl
pop
lret
int
and
pushf
jle
mov
mov
jo
rorb
in
in
mov
sub
mov
xor
sub
cs
movsb
dec
or
dec
or
mov
push
sub
loope
mov
xlat
test
mov
jne
in
adc
cmc
sbb
stos
call
sti
mov
clc
push
jno
mov
inc
sbb
jp
cli
adcl
test
pop
xor
push
loope
popf
clc
mov
int3
movb
fiaddl
jbe
sub
ljmp
and
add
out
lods
pop
int3
out
dec
add
push
cmp
jg
xor
push
jg
pop
lods
push
mov
out
sub
pop
out
movsb
push
or
in
mov
into
or
outsl
pop
repnz
mov
xchg
je
lea
mov
xchg
xchg
stc
mov
cmp
add
and
lahf
jg
fstps
mov
sbb
jg
scas
je
es
pop
sbb
rorb
xor
adc
addr16
cmpsb
cmc
and
mov
or
xchg
inc
dec
mov
sbb
dec
iret
and
mov
test
cmp
int
in
mov
aam
iret
dec
mov
clc
adc
loop
mov
mov
sbb
dec
insl
dec
negb
std
pop
inc
mov
stc
mov
push
in
mov
clc
out
ljmp
jl
out
jbe
xchg
fistps
pop
push
in
cmp
or
aad
neg
fwait
or
mov
imul
xchg
xor
or
xchg
test
sbb
pop
jmp
in
sbbl
jp
cmp
shll
mov
adc
js
or
sub
cmpsb
sub
in
push
rcr
mov
and
mov
inc
faddl
loope
cld
pop
jp
mov
fwait
cmp
xchg
xor
icebp
fidivrs
divl
mov
movsb
or
cmp
mov
sub
lods
addr16
pop
movsl
loopne
test
xchg
repz
aam
push
gs
out
pop
push
add
js
or
mov
in
fwait
dec
pop
lsl
xor
jmp
movsb
cwtl
pop
fwait
outsl
lret
mov
push
mov
xor
sahf
loopne
push
or
ds
pop
dec
aam
repnz
mov
xlat
aas
jge
or
lods
sub
hlt
stos
push
mov
xchg
pop
neg
fsubrs
sti
iret
shrb
aaa
hlt
xchg
xor
mov
cmp
push
xchg
adc
hlt
cmp
test
aad
imul
sbb
or
divl
test
imul
adc
jl
push
xor
xor
mov
jecxz
or
jae
add
dec
sub
loope
dec
pop
das
pop
pop
lcall
pop
jb
mov
jbe
and
add
adc
push
iret
jbe
nop
jecxz
test
inc
movsb
dec
mov
mov
jns
push
jne
push
mov
aas
mov
mov
sub
mov
inc
aas
shlb
mov
or
aas
xlat
jo
subl
stc
rcll
inc
mov
std
jbe
xchg
or
cmc
lods
pusha
push
imul
js
mov
es
test
enter
sbb
hlt
fistps
sub
lea
scas
add
aam
cs
inc
incb
call
adc
mov
mov
call
aaa
aas
mov
int
icebp
push
ficoml
sub
lock
sbb
sbb
outsl
add
dec
and
leave
stos
nop
data16
orb
pop
and
mov
sub
sbb
xchg
fimull
arpl
std
in
test
into
jne
and
push
add
call
dec
sub
enter
dec
shll
pushf
in
xchg
fidivs
or
push
jae
cmpsl
push
push
cmc
je
repz
loop
add
mov
adc
gs
cmpsb
cmp
daa
mov
jne,pn
inc
cmp
add
sub
aaa
sbb
mov
add
leave
stos
pop
jmp
lahf
pop
add
cwtl
xchg
test
arpl
or
fwait
leave
lds
jae
xor
lock
xor
mov
mov
sbb
clc
test
aaa
in
inc
out
mov
vorps
and
faddl
adc
sub
sahf
rorl
xchg
stc
and
sbb
into
fisubrl
or
cwtl
fisttpl
aad
sub
test
dec
xorb
andb
clc
es
jl
call
rorl
add
jp
xor
ret
repnz
fcompp
mov
jb
ret
push
xchg
inc
xchg
and
cs
adc
decl
into
jecxz
fistps
test
mov
cmp
popf
cmpsb
inc
ss
xchg
xor
movsl
push
sahf
dec
shrl
icebp
test
popa
lret
jb
test
cmp
add
push
jmp
jl,pn
cmpsb
outsb
push
lret
fwait
xor
cmp
sarl
cli
test
stc
ss
pop
pop
push
jecxz
daa
xor
push
adcb
pop
and
xchg
in
sub
jg
mov
pop
cmp
repnz
jae
mov
adc
adc
lret
ficoms
lods
lahf
insb
loop
testl
lock
stos
or
fidivrs
dec
jbe
inc
sbb
addl
add
mov
repnz
cmp
xor
mov
test
dec
cmp
pop
movsb
lock
pop
xor
pop
aaa
cli
xchg
and
lret
inc
adc
dec
jle
mov
mov
fstps
hlt
add
lcall
add
inc
rol
std
cmp
adc
mov
loopne
push
or
mov
fs
inc
xchg
scas
xchg
push
pop
cmp
lahf
jle
nop
sbb
jae
push
inc
fwait
rol
mov
in
xor
mov
loope
lock
xlat
and
dec
cmp
jnp
sbb
dec
daa
movsl
jp
dec
incb
sbb
add
dec
cmp
iret
mov
sbb
in
mov
dec
cmp
outsl
push
jae
mov
fs
jo
aaa
push
bound
rorl
dec
ss
aad
ret
ljmp
std
mov
notb
jge
add
into
fsubl
cwtl
or
sbb
ja
mov
cmp
dec
lods
sbb
sub
repnz
add
stc
xchg
pop
pushf
push
inc
lret
in
dec
and
lcall
dec
les
aam
into
imul
pop
into
cwtl
jg
cmp
mov
mov
adc
sub
lret
mov
inc
test
xor
arpl
and
in
popa
mov
cmp
lret
jae
insl
loope
or
cmpsl
out
and
repnz
and
adc
jnp
or
add
scas
enter
push
dec
add
add
iret
popf
mov
hlt
xchg
sub
cmc
out
dec
xchg
mov
inc
cwtl
xchg
and
fxch
shl
pusha
les
iret
lcall
add
imul
mov
test
or
mov
add
lds
sbb
pop
cltd
lcall
add
dec
cmp
or
mov
rcrb
mov
pushf
clc
fisttpl
rclb
std
inc
mov
mov
movsl
stc
jne
xchg
mov
xor
mov
lret
cwtl
arpl
pop
cmc
negl
mov
ja
xor
adc
xchg
mov
jp
les
adc
daa
xchg
testl
rcl
push
repz
ss
outsb
push
ja
repnz
into
loop
push
add
mov
repz
push
push
xor
pop
shll
xchg
or
push
je
sub
or
mov
lret
xor
stos
push
bound
sub
dec
xor
jbe
mov
ret
je
and
dec
lock
sbb
xor
bound
jb
mov
push
mov
mov
stos
insl
dec
mov
mov
dec
scas
sub
push
call
cld
pminsw
push
jo
shlb
dec
mov
lahf
push
push
pop
rcr
xlat
imul
push
jecxz
rcll
ret
xchg
mov
out
pop
cld
out
std
dec
roll
push
adc
or
cmp
and
shrl
cmp
xor
ljmp
outsl
jg
or
sbbl
lods
jbe
xor
sbb
cltd
enter
and
or
add
stc
stos
mov
push
dec
in
mov
or
mov
lea
in
bound
mov
outsl
cmpsb
test
jbe
or
push
xchg
mov
mov
add
cmp
sbb
jno
xlat
fcmove
cmpsb
popf
sbb
cli
into
mov
js
jnp
rorl
ss
xchg
adc
fsubrs
hlt
push
sbb
pop
sub
stc
out
aas
mov
push
xor
ljmp
mov
mov
mov
jnp
data16
push
cmp
jne
loope
pusha
aas
jo
cmp
and
jne
or
daa
sbb
and
mov
dec
mov
mov
sbb
sbb
pop
ss
enter
add
lcall
mov
cltd
hlt
add
cs
and
dec
xchg
test
xchg
fcmovne
test
rol
pop
sbbl
push
ljmp
xor
in
loope
xchg
xchg
orl
cs
imul
xchg
inc
pop
popf
xor
push
xchg
ljmp
outsb
mov
fidivl
pop
jp
arpl
mov
shll
inc
jno
cmp
sbb
jae
inc
pop
stos
loopne
mov
mov
rol
dec
pushf
mov
dec
mov
sub
mov
ja
adc
je
pop
or
stos
push
in
jbe
pop
aaa
mov
in
xchg
pop
ret
add
insb
sti
push
or
xchg
mov
int3
repnz
repz
aam
adc
pop
mov
stc
jae
das
push
xchg
or
dec
sub
imul
gs
adc
inc
test
out
push
rol
push
imul
mov
jg
push
xchg
cmp
mov
movsb
push
mov
sub
mov
push
je
add
imul
or
mov
mov
pop
sbb
xor
ss
or
loop
mov
fsts
mov
xor
es
addr16
aad
inc
dec
pop
sbb
pop
filds
js
xchg
jne
scas
mov
adc
jbe
mov
mov
or
out
pusha
imul
push
add
dec
jb
popf
sub
loop
mov
dec
sbb
push
clc
ret
rep
subl
mov
xchg
add
add
icebp
xchg
imul
lcall
fstl
jo
ret
sub
mov
pop
lcall
out
pusha
adc
jns
lock
jns
xor
adc
test
mov
mov
aas
push
rcll
xchg
or
sbb
callw
xor
pop
or
mov
imul
insl
push
sub
mov
fwait
popf
push
fistpll
shrl
mov
jecxz
loop
inc
lret
jno
mov
adc
xchg
fwait
outsl
pushf
les
mov
test
push
scas
jle
xchg
xor
or
cmp
cli
add
sbb
mov
sub
adc
call
ret
jmp
aam
sbb
cltd
jb
out
idivl
jne
je
nop
das
popf
insb
aam
sbb
lods
jne
push
outsb
xor
jge
and
xlat
les
jo
inc
mov
cmpsb
push
test
sub
mov
dec
lods
aas
jb
je
clc
pop
lret
inc
icebp
push
mov
push
aam
jns
cmpsb
in
jle
xor
mov
jle
je
mov
or
sub
push
cmp
mov
ja
sbb
cmpsl
in
mov
add
into
int
push
push
sbb
jnp
sbb
push
daa
dec
sbb
add
fadd
call
cmpsl
jae
mov
or
icebp
cmp
lahf
test
jns
into
lcall
cmp
int
xor
jne
jo
sbb
cmp
fsubrl
pop
cmp
mov
mov
rol
dec
sbb
mov
cmp
loopne
into
sub
movsb
cltd
cmc
dec
cmpsb
sub
lahf
xchg
iret
cmpsl
jno
push
out
fs
repz
pop
test
dec
ret
and
repz
rorb
in
mov
pop
jle
into
xchg
data16
pop
leave
imul
cmc
sub
mov
jbe
lcall
xor
out
mov
and
pop
jns
insl
jmp
inc
push
es
lds
push
fnstsw
mov
mov
pop
jno
add
add
enter
nop
inc
and
in
inc
movsl
ss
add
inc
mov
imul
jbe
push
jae
cmp
or
mov
xchg
or
cmp
cmp
xchg
lods
and
scas
pusha
dec
sub
xchg
mov
inc
sti
das
pop
jne
shlb
pop
jnp
add
pushf
outsb
arpl
sarb
stos
neg
cmp
lret
xchg
and
lea
incb
mov
jmp
arpl
sub
fstpl
or
not
push
inc
and
or
or
and
pop
gs
stc
lock
jno
fs
je
iret
jb
out
sqrtps
lret
fwait
adc
or
cwtl
lcall
xor
or
cmp
pushf
jge
lods
sbb
mov
xchg
stc
lahf
mov
adc
orl
adc
xor
mov
popf
jbe
mov
lock
pop
adc
mov
cmpsb
push
or
and
sbb
lds
mov
test
in
xor
cmp
jno
adc
outsl
mov
or
scas
mov
lahf
adc
xchg
sbb
cld
int3
or
fldt
cld
mov
sti
test
sarb
add
fmulp
ret
pop
std
sbb
test
and
cld
push
lock
push
lcall
xor
mov
push
shll
pop
hlt
sbb
sbb
test
sbb
in
andl
push
cmpsb
jbe
push
bound
mov
inc
sub
clc
lahf
jl
jae
mov
xchg
stc
mov
das
xor
jmp
push
xor
ret
mov
add
loopne
imul
dec
pushf
sbb
cmp
sti
nop
sub
pop
jle
in
pop
loop
inc
negl
or
sbbb
test
adcb
xor
cmp
or
jbe
movsb
mov
jb
sub
fcoms
dec
icebp
notl
lret
inc
pop
dec
bound
sub
popa
fisttps
aaa
sahf
sub
out
clc
fcmovu
pop
ficoms
sti
lahf
incb
ds
mov
and
xchg
outsb
sti
das
ret
jmp
cmpsl
cmp
ja
call
popl
push
out
popl
push
pushf
adc
xchg
ljmp
repz
rclb
hlt
add
jns
sbb
iret
mov
es
xor
pop
lahf
xorb
fisttpll
js
sbb
or
mov
cmp
adc
fwait
xchg
ja
pop
mov
pop
fs
xchg
repz
daa
xchg
jb
test
fwait
push
sbb
mov
gs
dec
cs
mov
cmp
test
pop
pop
orb
mov
jge
push
or
sub
jns
push
fiaddl
fs
lahf
cli
jg
ljmp
repz
xchg
addr16
es
in
sub
out
jns
jecxz
sti
push
xorl
leave
mov
cmp
dec
addr16
jb
popf
mov
adc
aas
or
xor
adc
mov
dec
and
xchg
ss
xchg
das
rolb
jne
adc
std
inc
rclb
fldl
cmc
add
sub
mov
mov
sbb
pop
inc
dec
gs
push
iret
subl
ret
push
xor
in
int3
xor
jmp
ja
enter
rcrl
and
and
add
pusha
cmpsl
dec
push
popa
int3
jge
mov
jo
mov
add
addr16
mov
enter
testb
xchg
stos
js
cmp
cmp
jp
push
daa
mov
xchg
fcompl
cmpsl
sub
jno
outsb
adcl
push
faddl
jns
movsb
xor
out
mov
cmp
jo
cwtl
cmp
int3
push
mov
mov
sub
push
pop
ja
inc
adc
inc
dec
mov
fsub
movsb
cmp
dec
sbb
lret
push
dec
lahf
sti
frstpm(287
fucomi
and
inc
insb
repz
and
xchg
insb
push
xor
ret
movsb
fildl
and
push
cli
mov
sbb
push
xor
jg
add
mov
orl
rorl
or
mov
adc
cmp
ret
xchg
xor
aam
mov
out
lret
arpl
pop
and
test
sti
jmp
mov
psrld
sub
xchg
dec
rcll
es
push
pushf
scas
push
nop
pop
jns
arpl
xor
lcall
sub
inc
jns
push
mov
dec
fldt
push
and
out
pop
cmp
jbe
xchg
and
sub
inc
fs
rorl
bound
cmpl
cmpsl
bts
das
mov
xchg
or
int
int
mov
dec
push
sahf
scas
ss
gs
add
insb
adc
popf
mov
fstl
fsts
push
sub
mov
icebp
je
push
ljmp
add
in
adc
add
xor
rcr
imull
enter
outsb
pop
stc
addb
repnz
push
push
mov
sbb
sub
out
cmpsl
xchg
inc
and
roll
mov
ror
sub
push
hlt
mov
jns
push
push
stc
and
jae
dec
sbb
shlb
sbb
inc
test
cmp
popa
aam
push
cwtl
clc
loope
sub
pusha
add
sub
lods
dec
lods
test
and
loope
xchg
jo
fcmovnb
pop
stc
pop
jl
arpl
add
push
jnp
dec
cmpsb
adc
mov
lret
and
lds
lock
insl
xchg
xchg
pop
sbbl
data16
js
lea
mov
jae
dec
popa
lret
xor
pop
cmp
mov
xor
inc
and
test
inc
loope
xor
and
in
stos
inc
out
jge
mov
pop
jne
mov
or
push
test
pop
cmp
lret
mov
fwait
xchg
sbb
add
mov
jb
ja
outsb
sub
fwait
mov
add
add
mov
ljmp
lods
or
pop
je
xchg
imul
test
and
out
jno
cltd
sub
mov
jae
sub
xchg
adc
bound
mov
inc
popf
insb
rcl
aad
pop
aas
and
jg
xchg
nop
ja
lahf
gs
pop
cmp
adc
push
push
or
dec
enter
vpunpckhqdq
lcall
pop
cmpsl
arpl
push
jne
mov
and
aam
adc
and
adcb
push
mov
icebp
jl
push
fimuls
outsb
xchg
ficomps
mov
and
mov
or
daa
push
jnp
pop
inc
jo
iret
fdivs
hlt
test
mov
xchg
push
sub
bound
and
pop
aaa
shl
jl
fiadds
jmp
shrb
pop
leave
xor
lcall
push
or
es
mov
test
mov
or
push
in
jns
int3
sbb
push
cmpsl
andb
xchg
je
lahf
bound
cmc
mov
mov
sbb
jae
in
lahf
mov
cmc
insl
push
lods
adc
add
out
inc
xor
jecxz
inc
leave
push
add
lahf
xlat
sbb
arpl
jns
je
xor
cmpsb
xor
movsl
cmp
enter
jge
pop
aad
lock
mov
push
pop
imulb
cmp
sub
push
dec
fnsave
nop
out
push
pop
add
mulb
test
adc
sub
cmc
mov
push
mov
cmp
jnp
mov
mov
icebp
mov
inc
mov
repnz
adc
clc
das
in
mov
mov
or
sub
jmp
cwtl
xor
loopne
add
ja
rcrb
cli
mov
xchg
adc
sti
cmpl
pop
sub
cmpsb
inc
mov
lods
loop
jb
imul
fisttpl
push
popf
insl
mov
or
ret
cld
int
pop
in
inc
xchg
add
inc
insl
xchg
or
inc
mov
mov
mov
cmc
leave
lret
stc
push
mov
int
mov
nop
mov
pop
push
mov
je
dec
rcrl
mov
push
and
mov
mov
test
cmp
mov
call
repz
out
fdivrl
fidivs
and
push
fcomp
push
cltd
and
mov
inc
pusha
push
mov
pop
data16
xchg
insb
sub
mov
jno
movsb
pop
lret
mov
or
push
cmp
sub
in
cltd
inc
aaa
pop
rcl
inc
popf
or
dec
xor
cld
cltd
sarb
sub
push
adcl
push
and
mov
xor
xor
fimuls
fs
sub
push
lock
xor
cmpsb
int3
daa
insb
roll
fnstenv
mov
les
and
adc
pop
js
sbb
imul
into
mov
mov
daa
data16
sub
push
int3
in
sbb
pop
add
mov
push
shrl
push
jmp
ficoml
mov
in
jb
lahf
test
pop
dec
add
out
cmp
push
int3
ja
xchg
mov
insl
iret
andl
clc
insl
mov
scas
jge
xor
mov
inc
and
pop
cmc
push
ja
sbbb
pop
add
jae
lds
mov
clc
mov
pop
sarb
add
loop
mov
ss
pushf
leave
fbstp
sub
test
add
fnstsw
hlt
shlb
hlt
test
loope
notb
cmp
mov
sti
lcall
add
adc
and
mov
sahf
sar
pop
test
outsl
sbb
sub
xor
xor
lds
fwait
dec
test
incb
lea
pop
push
and
xchg
fnstsw
stos
hlt
cwtl
and
mov
push
stc
repz
out
outsb
inc
and
rcrb
into
mov
pushf
fdivrs
cmp
clc
adc
pop
jge
xor
xchg
testb
xor
outsb
ficomps
fcmovne
sub
sarb
inc
lods
or
bound
mov
icebp
or
push
mov
inc
cmp
adc
mov
sahf
repnz
and
xchg
dec
sbb
jp
pop
add
sbbb
ljmp
enter
mov
and
inc
addr16
call
repz
mov
aas
mov
pop
pusha
cmc
fsincos
pop
jle
shrb
aam
adc
mov
mov
sub
sbb
mov
jle
dec
fcompl
sbb
mov
sbb
push
sbb
rcr
pop
es
xor
repnz
test
xor
sbb
mov
cmp
hlt
dec
cs
shll
cli
dec
mov
loopne
add
fbld
test
mov
out
pop
and
push
mov
push
je
lret
jl
adc
lcall
xchg
jmp
mov
popf
mov
mov
daa
xor
and
ss
xchg
ja
xchg
pusha
pop
or
js
and
push
xor
mov
jp
scas
mov
rorb
out
movsb
jecxz
addr16
int
and
je
test
sbb
mov
leave
add
xchg
scas
and
loope
dec
ret
sbb
adc
jmp
std
or
shr
jb
out
test
sub
cwtl
mov
adc
mov
jg
push
cli
push
mov
in
rorb
ja
xor
lds
dec
loopew
fbld
sti
fnstenv
lahf
pop
movsl
jnp
and
jl
mov
das
pop
cwtl
push
ds
mov
cwtl
push
sbb
mov
push
mov
les
mov
fwait
xchg
and
xchg
aad
in
hlt
cmc
pop
xchg
lahf
in
aaa
mov
subl
mov
push
sbbb
add
jb
inc
out
lahf
bound
das
ja
or
rcll
mov
lret
repnz
jnp
les
test
data16
fimull
inc
mov
push
push
je
addr16
aas
xchg
inc
in
xor
jg
or
jmp
jno
cli
xor
stc
push
loop
movsb
mov
adc
dec
outsl
mov
bound
pop
dec
repz
int
adc
aaa
test
inc
int3
imul
xchg
roll
or
rcll
add
xor
iret
mov
lcall
pop
pop
rcr
lock
add
data16
loop
shlb
push
cli
enter
icebp
in
xchg
dec
insl
fsubp
loope
andl
lock
rcrb
test
out
push
pop
cmpl
lods
movsb
dec
dec
mov
inc
or
sub
cmp
sub
andb
push
xchg
pop
sub
jp
adc
iret
nop
pop
sub
add
sbb
jns
sbb
cltd
cmpsb
dec
sub
cld
jno
pop
add
sub
sbb
cwtl
xchg
pop
xchg
inc
sbb
xchg
jno
dec
or
es
int
out
cmp
repnz
aam
xchg
test
or
mov
cmp
xchg
pop
and
mov
daa
mov
icebp
xchg
fildll
inc
dec
cltd
out
xchg
ret
iret
inc
in
aas
icebp
push
cld
dec
sub
lahf
add
xor
gs
daa
xlat
negl
js
movsl
xor
push
daa
jp
das
outsl
aas
clc
add
dec
fsub
jmp
in
or
mov
mov
cmp
cmp
push
push
jmp
pusha
xchg
in
add
ljmp
pop
fbld
xor
xchg
jb
xchg
mov
adc
mov
popf
mov
add
out
shlb
sbb
je
sbb
xor
outsb
dec
xor
mov
sbb
jnp
test
jbe
iret
enter
mov
sub
push
fdivrs
test
cmp
push
mov
sub
adc
add
cs
mov
sub
mov
jb
lods
loopne
arpl
fisttpl
filds
ja
add
sti
mov
pop
sbbl
xchg
mov
sbb
pop
jae
in
gs
add
shl
jg
push
mov
pop
push
cmp
int
stos
dec
sbb
daa
mov
and
ret
jne
je
inc
testb
adc
sub
mov
les
in
push
in
mov
cli
dec
dec
sub
add
lock
pushf
mov
xor
xchg
sub
mov
int
cmp
push
xor
push
jbe
ret
mov
fldl
lcall
sbb
push
out
mov
aaa
fwait
out
lods
mov
shll
mov
fsubrs
and
adc
mov
dec
cmp
jle
sbb
jno
dec
mov
lods
lods
sub
or
xchg
les
loop
in
xchg
fdivrl
dec
cmp
lods
push
rclb
inc
pop
imul
cld
xchg
sub
mov
push
fdivr
enter
and
mov
rorl
sbb
xlat
movsl
jl
aaa
shrb
push
out
cmpl
cmc
xchg
mov
mov
cmp
inc
sbb
hlt
jae
or
pop
pop
pop
out
dec
fidivrl
mov
dec
insb
addb
cmp
push
sub
lods
sub
fninit
mov
imul
lahf
sahf
mov
mov
or
maskmovq
testl
sub
or
addr16
jne
push
mov
test
popf
mov
shlb
mov
cmp
test
out
daa
insl
mov
mov
pushf
add
int
or
push
out
loope
fs
and
mov
mov
mov
pusha
adc
fsubrs
out
rcll
shll
fwait
cmc
xor
rorb
js
das
arpl
mov
sbbl
add
inc
adc
xor
add
lods
sarl
je
repz
jnp
pop
loopne
mov
sub
stc
sub
imul
add
vmwrite
and
cvttps2pi
cmp
and
gs
sbb
xlat
aam
push
push
int3
jmp
dec
imul
jge
xchg
out
mov
and
cli
sti
or
jle
mov
rorb
pushf
testb
jb
jnp
cwtl
push
scas
xbegin
rol
mulb
or
rcrl
out
cmpb
enter
xchg
out
and
test
mov
push
outsl
add
sti
adc
or
push
jnp
int3
inc
adc
mov
inc
adc
sbb
push
sub
cwtl
jnp
pop
cmp
fistpll
lods
adc
push
pushf
sbb
mov
cmp
push
enter
dec
js
and
jp
inc
dec
ss
mov
pop
lds
lret
inc
add
push
lods
aaa
mov
push
or
jp
xor
pop
and
aaa
add
scas
fs
and
lods
ja
and
sti
or
adc
jno
imul
push
test
mov
shlb
cmp
mov
lcall
xor
mov
adc
jg
cltd
pop
cmc
jmp
mov
lret
cmp
push
xor
cmp
movsb
jns
mov
pusha
push
or
sti
pop
xchg
and
and
and
aad
into
and
loopne
push
and
mov
mov
push
daa
or
fwait
dec
sbb
rcrb
mov
lea
lahf
dec
mov
les
in
lahf
cmp
cmp
jnp
addr16
dec
sub
dec
sbb
xsha1
cmpsb
dec
pop
adc
mov
cmp
cmpsl
stos
rcll
and
test
shll
xor
mov
jbe
jno
inc
add
das
cld
jbe
in
cld
pop
out
mov
stos
testl
push
pop
pop
add
out
xchg
loopne
xor
sahf
stos
fistl
icebp
out
shll
pusha
lock
cmp
out
or
scas
push
mov
cli
lahf
sarl
mov
push
in
into
and
push
bound
or
inc
in
cs
mov
and
xor
scas
xchg
push
mov
jecxz
int
add
pop
xchg
jge
cmpsl
push
add
mov
mov
xor
push
or
insb
insb
mov
xchg
lret
dec
push
push
out
xchg
insb
adc
repz
rorb
fmuls
sub
push
pop
sti
push
mov
subb
xlat
hlt
pop
out
cs
gs
scas
imul
mov
mov
sub
xor
lods
adc
or
jmp
mov
mov
jmp
cmpsl
cltd
push
not
adcl
xchg
push
cld
sbb
sub
xor
jge
cwtl
int3
popf
aas
inc
cmp
jb
xor
out
xrelease
lods
movsb
repnz
das
mov
lret
mov
insl
inc
dec
popa
add
sti
xor
sub
daa
lcall
mov
xchg
pop
cmp
ret
lret
pop
idiv
xor
push
fucom
and
or
cmp
mov
cmpsb
jnp
icebp
jmp
cmpsl
push
sarl
mov
jne
mov
dec
leave
in
rorb
push
in
decb
mov
bound
ret
ljmp
mov
out
cmp
ss
fwait
leave
mov
sub
mov
adc
scas
push
cmp
dec
neg
jmp
jg
out
shl
iret
pop
cld
cmpsl
imul
xchg
adc
andb
int
mov
fs
scas
notb
dec
std
mov
xor
insl
in
mov
outsl
jns
inc
jns
xchg
push
std
or
shl
les
lret
adc
fwait
roll
or
xchg
out
das
ljmp
andl
push
out
pushf
dec
push
fiaddl
push
pop
mov
imulb
cwtl
xchg
and
insl
lock
fadds
std
nop
cmp
sbb
mov
test
out
push
pop
push
push
xchg
mov
clc
xchg
nop
test
nop
andl
sbb
fadds
xchg
icebp
push
and
pop
jne
and
ljmp
call
les
mov
push
and
pop
sbb
icebp
stc
mov
cwtl
lcall
inc
cli
mov
inc
cmpsb
push
nop
fstl
rorl
mov
mov
add
sbb
rep
jg
lea
lods
mov
fwait
imul
adc
mov
lds
and
jg,pn
popa
sub
or
jbe
std
lea
roll
sub
push
xchg
pushf
lcall
bound
cli
movsb
in
xchg
dec
or
lods
add
call
stc
or
jge
or
nop
push
out
inc
ds
push
jle
inc
scas
sub
pop
push
fisttpll
pop
iret
dec
movsb
out
filds
je
jl
pop
mov
cmc
in
loop
int
fimuls
jg
lods
push
pop
ss
lcall
call
cmp
icebp
and
cmc
imul
loope
pop
add
js
jae
outsb
rcrl
or
add
add
fiadds
decb
push
and
jmp
inc
jp
test
cs
xor
mov
mov
push
iret
mov
sahf
pusha
les
lret
setb
andb
fwait
mov
xor
lea
add
mov
or
clc
imul
dec
ds
sbb
dec
ret
xor
das
adc
dec
adc
or
inc
jae
ljmp
std
les
pop
into
lods
mov
ss
xchg
sahf
mov
inc
in
frstor
inc
mov
mov
fwait
mov
push
push
lret
test
and
popa
mov
ret
shll
mov
jno
pop
inc
sbb
scas
push
mov
outsl
enter
jecxz
in
inc
nop
xor
fcomi
ret
jns
cwtl
lcall
ds
mov
dec
push
cli
jo
pop
out
inc
fs
mov
fwait
pusha
nop
aam
lea
inc
mov
fadds
pushf
inc
aad
xchg
jp
adc
push
push
adc
scas
mov
add
push
cwtl
jb
mov
mov
inc
test
lea
flds
iret
mov
lcall
adc
loopne,pt
je
cmp
xor
es
arpl
jbe
lods
cmpsl
dec
mov
jle
lock
cmp
jg
sbb
movsl
and
jnp
cmp
ja
jns
mov
ja,pt
jecxz
mov
test
push
call
mov
addr16
sbb
xor
xchg
xchg
dec
sbb
loopne
pop
sbb
call
pop
and
mov
leave
add
xor
xchg
sub
loop
xor
ret
rcrl
or
orl
test
lock
icebp
mov
jo
stos
xor
daa
lods
or
inc
aam
jp
popa
xchg
fs
mov
jl
xchg
cmpsb
sarb
mov
pop
or
call
les
ds
pop
sahf
mov
les
mov
cmpl
cmc
sub
mov
test
or
outsb
lock
dec
pushf
sub
js
jmp
jno
popa
test
movsl
lds
movsb
test
add
je
insl
in
xor
ret
cmp
jg
xor
and
daa
sahf
outsl
outsl
fisttpl
mov
aad
dec
xchg
in
je
mov
icebp
jecxz
pop
adc
lret
cmp
test
xor
mov
sahf
addr16
cmp
repz
pop
pop
add
ja
dec
shlb
lcall
sbb
xor
and
pop
int3
pop
iret
adc
cmp
lods
push
xchg
push
cmpsb
push
xchg
loopne
movsl
shl
fnstenv
lcall
mov
push
ja
psraw
lods
ja
jbe
out
jbe
test
jae
rorb
push
jb
lods
mov
les
sub
popf
out
cmp
push
xchg
adc
cmp
cmp
ja
ret
add
jbe
sbb
xchg
aam
push
sub
pop
mov
cmc
testl
rorl
xlat
mov
xchg
push
lahf
shr
jbe
mov
sbb
xchg
test
pushf
inc
cmpsb
aaa
cwtl
cmpsl
out
shll
adc
imul
adc
push
js
addr16
mov
jg
cmp
mov
in
enter
fisttpl
jmp
mov
movsb
push
adc
cmp
lock
sbb
scas
test
mov
arpl
or
das
sub
lock
loopne
inc
or
test
andb
test
cmp
sbb
inc
out
out
xor
movsl
iret
lahf
mov
dec
and
jle
mov
jecxz
mov
hlt
dec
mov
jb
jne
dec
fcoml
xchg
aad
sub
mov
push
push
add
add
in
fwait
addr16
in
add
push
dec
in
add
dec
cmp
in
mov
int
mov
xor
jo
inc
ljmp
add
mov
add
int3
mov
jmp
xchg
pop
pusha
inc
xor
jnp
lock
jbe
jecxz
mov
scas
and
and
push
movsl
pop
add
rcrl
xchg
adcb
repnz
jl
mov
insl
jo
push
in
mov
cwtl
xchg
cltd
mov
sbb
lahf
iret
int3
notl
jae
adc
dec
fs
lods
xchg
sbb
sbb
mov
out
mov
outsl
test
mov
xor
aam
je
adc
sbb
mov
imul
and
loopne
adc
mov
sti
cmp
std
pop
cld
repz
sbb
pop
add
xchg
push
mov
mov
jp,pn
mov
mov
push
adc
outsl
fcomps
outsl
push
stos
sbb
pop
mov
jmp
add
out
shr
xchg
fldcw
lahf
mov
inc
loopne
fidivs
mov
and
mov
mov
fnstenv
lcall
sbb
xor
cmc
mov
mov
andb
jnp
out
add
inc
mov
mov
mov
xor
pop
mov
rcll
enter
fmul
std
xchg
int
stos
fs
fstl
add
jp
scas
pop
and
or
pop
mov
dec
fcompl
fists
in
lds
ljmp
inc
imul
into
aam
mov
cs
inc
jbe
dec
push
insl
lds
enter
ret
push
adc
xchg
push
push
inc
fisttps
xor
dec
inc
push
ds
aaa
ror
xor
imul
jg
pop
lcall
ss
push
mov
adc
adc
mov
fstpt
inc
pop
and
jecxz
cmp
outsb
mov
xlat
xchg
jle
jbe
shlb
cmp
jns
xchg
fcmovnbe
xor
cmp
mov
sub
int
int3
mov
bound
cmp
mov
popa
sbb
pusha
loopne
cmp
mov
xor
dec
insb
pop
or
xor
leave
sub
arpl
dec
or
dec
je
cmp
mov
popf
mov
sbb
pop
cmp
mov
push
dec
out
xor
push
and
jns
and
iret
cmpb
fidivl
xor
fs
imul
inc
loope
push
jle
mov
mov
mov
sbb
enter
adc
or
add
and
adc
add
mov
jne
fistpll
mov
push
adc
mov
sbb
sbb
ffree
xor
daa
jmp
jo
dec
jno
push
mov
and
outsl
jnp
jnp
pop
mov
mov
imul
pusha
repnz
cwtl
mov
mov
adc
push
and
mov
sbb
xor
jmp
sahf
sub
xor
cmp
ds
test
xor
xor
aaa
fsubs
orl
mov
push
or
adc
jnp
xchg
aad
mov
xchg
dec
insb
icebp
repnz
cltd
mov
lret
mov
dec
lahf
mov
pop
repnz
aaa
loopne
cmp
arpl
jae
stc
xchg
jp
xlat
cmc
pop
inc
das
xchg
fwait
sub
mov
cwtl
mov
pop
outsb
cmp
cld
and
or
cmp
negl
aad
out
xchg
shrb
push
cmp
cmp
fldenv
int3
int3
decb
mov
lret
or
popf
xchg
in
sub
add
sub
dec
mov
jmp
and
pop
lods
inc
xchg
adc
lds
imul
outsl
insb
jecxz
nop
sub
inc
ljmp
mov
ficomps
pop
daa
ret
ret
sbbl
xor
stos
jecxz
fidivrs
sub
rolb
rcrl
out
mov
nop
repz
jbe
inc
xor
xor
in
cwtl
iret
pop
dec
add
add
fisubl
mov
fmul
push
daa
mov
or
sti
in
xchg
bound
aad
jg
cmpsl
cmp
insl
cmp
mov
inc
test
into
xchg
scas
mov
inc
push
in
mov
addr16
push
aam
lret
fsts
les
jp
int3
or
pushf
dec
ljmp
xchg
mov
stos
cltd
int
mov
popa
pop
sub
xchg
fs
test
sbb
imul
mov
je
pop
add
stos
sbb
xchg
fisttpl
pushf
dec
dec
xchg
adc
push
clc
scas
fbld
mov
notb
dec
pop
es
out
dec
dec
push
dec
sbb
enter
add
cld
or
xchg
rcll
mov
push
lret
mov
mov
xchg
mov
sub
sbb
cmp
in
dec
mov
push
pop
cmp
xor
mov
and
xor
dec
sub
fcoml
aam
lcall
or
notb
inc
push
mov
loop
mov
shl
or
mov
pop
aas
gs
mov
or
add
xchg
scas
jns
lret
lock
loopne
push
call
inc
popa
movb
fcmovne
push
and
push
adcl
pop
xor
mov
push
stc
mov
mov
xor
or
add
pop
lahf
frstor
adc
push
ret
or
loope
out
enter
ds
xor
pop
clc
sub
pop
or
jb
push
clc
xchg
jmp
mov
test
leave
mov
repz
mov
jecxz
jne
ja
mov
mov
imul
mov
scas
out
mov
adc
dec
or
scas
push
adc
into
sbb
mov
ret
adc
outsb
mov
clc
mov
sbb
mov
not
icebp
adc
flds
push
jb
stos
in
mov
insb
test
lret
inc
mov
and
xor
rolb
fnstsw
and
aad
repz
push
or
add
xchg
dec
les
lahf
fldcw
inc
sub
lret
cmc
cmc
je
imul
mov
popa
call
cltd
aam
sub
mov
xor
mov
pop
cmc
rcrl
mov
mov
cmpsl
scas
or
xchg
dec
mov
sbb
mov
adc
push
bound
sbb
or
xor
pop
shlb
or
xchg
in
jnp
jp
sub
and
repz
and
loop
repz
mov
lea
xchg
imul
bound
cmp
lods
fsts
push
or
lods
mov
jg
mov
mov
mov
push
aam
aad
in
and
out
out
negl
call
pop
cld
ds
sub
push
lcall
cltd
mov
shlb
test
cs
out
fsubrp
aam
mov
int
pop
adcl
push
sbb
and
shl
jns
mov
mov
push
jns
push
loope
or
mov
push
mov
push
mov
data16
clc
cld
ljmp
es
push
outsb
lret
cmp
cmpsl
push
adc
dec
jns
adc
cs
js
hlt
pop
negb
fs
xor
jecxz
mov
xor
pop
dec
xor
dec
or
mov
ret
mov
adc
xchg
out
testb
jbe
push
pusha
movsb
fs
aam
adc
pop
jecxz
gs
daa
arpl
ds
fnstcw
mov
enter
cmc
mov
xchg
sarl
cmp
das
mov
inc
or
or
movsl
sbb
xchg
out
adc
int3
ss
add
in
lcall
jbe
xchg
add
arpl
jmp
sub
out
mov
xchg
scas
xor
clc
pop
hlt
xchg
cwtl
mov
xchg
adc
cltd
adc
sub
aas
clc
or
dec
call
inc
ret
and
xor
test
sbb
aad
dec
xchg
mov
mov
jb
les
dec
jo
ds
mov
sbb
in
pop
nop
cld
push
inc
jg
repnz
pop
cmp
dec
pop
and
adc
or
xchg
adc
jl
aad
jbe
bound
push
imul
push
add
mov
add
jne
or
mov
fsubl
jecxz
cmp
adc
shll
lock
test
mov
int3
pop
cs
imul
push
jbe
inc
inc
xlat
fwait
add
jb
addl
idivl
sub
mov
fwait
fs
lret
dec
scas
xchg
imul
sbb
out
int3
popf
testb
add
add
xchg
sub
xchg
rcl
shrl
daa
pop
mov
in
push
lahf
add
cmp
leave
clc
xor
push
mov
nop
cmp
pop
or
out
and
ror
popf
loope
push
lcall
in
out
std
scas
xor
flds
mov
rorb
mov
jecxz
pop
push
adc
xchg
ret
push
das
add
dec
test
in
cmpsb
mov
sbb
lods
mov
popf
fwait
inc
cli
pop
sub
cmc
into
lock
mov
xchg
test
inc
mov
xor
adc
out
test
adc
and
fsubrl
nop
and
lret
jp
hlt
mov
sub
shlb
lods
push
push
xchg
adc
jmp
loop
andb
push
pop
movl
sarb
mov
stos
arpl
sti
sti
xlat
fsubl
adc
sub
dec
andb
adc
test
ficoms
adc
in
sub
shrl
addl
dec
repnz
and
inc
mov
push
push
fldl
aaa
pushf
mov
xor
hlt
ror
mov
aaa
sbb
adc
jnp
ds
mov
inc
xchg
lahf
lock
in
dec
push
push
mov
xor
cmp
cmp
lahf
fwait
mov
sub
fwait
pushf
shrl
jl
dec
jmp
fcmovu
push
movsl
jge
xchg
and
jl
test
imul
leave
jae
lret
push
xor
loope
add
js
pop
lret
popa
repnz
mov
push
push
repnz
pop
adc
push
rcr
or
rcrb
aad
jecxz
cs
stos
call
add
jmp
fstp
in
dec
ret
movsl
dec
inc
icebp
xchg
gs
adc
dec
test
adcl
push
jle
fwait
cmpb
inc
or
cli
loope
loopne
add
lret
in
jle
aaa
and
into
xor
mov
mov
add
stos
pop
sbb
inc
loope
test
inc
repz
ljmp
aaa
push
and
sub
out
inc
cmp
sub
out
imul
sub
jmp
pop
call
mov
ret
fcoml
leave
cli
jl
jnp
out
arpl
cmp
lahf
xlat
movsl
cmpsl
pop
mov
mov
ljmp
push
xchg
test
xor
nop
cmp
pop
sub
fs
into
cmpl
outsb
xchg
jno
jnp
sahf
out
xchg
push
sbb
sbb
adc
cmpsl
and
xchg
push
push
adc
fidivrs
push
jge
mov
pop
rorb
inc
or
hlt
setno
mov
inc
and
mov
or
cmc
orl
and
loop
std
adc
adc
dec
data16
cli
inc
sbb
nop
fidivrl
jb
xchg
lods
clc
mov
stos
xor
add
add
mov
ja
sub
add
fiadds
sbb
inc
mov
pop
dec
cli
sub
mov
fs
lods
pushf
int3
mov
cmp
aaa
sbb
push
push
pop
nop
inc
mov
and
mov
cmpsb
push
push
sub
jbe
and
fldt
mov
push
push
xorl
scas
fisubrl
jmp
ds
jo
pop
xchg
push
xlat
push
pop
add
imul
xlat
stos
addr16
jo
cltd
jge
and
pop
push
push
xor
fs
mov
cmp
sbb
dec
fs
bsr
cmp
pop
jmp
ret
pop
insb
roll
in
out
fwait
cmp
sbb
test
psubsb
inc
xchg
mov
scas
and
cmp
nop
mov
nop
jle
es
aaa
mov
adc
sbb
cmpsb
shll
lock
sti
mov
lea
enter
or
loop
jmp
sbb
xchg
jmp
xor
or
test
lret
loop
xor
add
pop
rclb
xor
pop
call
ds
xorl
data16
push
add
mov
xlat
xchg
inc
xchg
mov
inc
jmp
in
imul
js
adc
cwtl
mov
mov
xchg
jae
mov
lret
rcrb
leave
sub
ret
jg
xchg
mulb
in
in
sub
lods
outsb
dec
mov
add
out
out
data16
stos
pop
repz
outsl
jae
lret
cmp
xor
mov
out
mov
add
fmuls
idivl
push
sub
repnz
pop
into
mov
dec
mov
ret
enter
sarb
pop
ret
into
lock
pushf
mov
ss
out
cmp
inc
sbb
pusha
sahf
jl
cmp
push
testl
xchg
aam
pop
sbb
push
push
mov
call
out
stc
lods
dec
pop
xlat
xchg
ja
or
cmp
jmp
test
pop
cmp
adc
sub
cli
inc
adc
push
addr16
outsl
rcl
flds
out
scas
sub
cmp
mov
cmp
fcoms
arpl
outsl
mov
stos
push
repz
push
loop
lahf
mov
cli
insb
sbb
inc
lret
popa
lcall
mov
add
fistl
out
adc
pusha
mov
push
jb
mov
push
pop
lods
xchg
shrl
jg
scas
gs
je
push
jle
fwait
lods
lret
cs
cmp
push
push
neg
fsubs
fidivs
fnsave
dec
ret
adc
sahf
adc
imul
scas
xchg
jns
mov
lahf
cmovo
in
divb
aam
insb
loope
add
mov
xchg
cmp
js
pop
repz
sbb
pushf
call
movsb
lcall
mov
clc
std
sbb
jne
enter
mov
pusha
cli
mov
fnstsw
mov
movsl
inc
push
mov
mov
sbb
mov
jmp
jae
mov
dec
pop
sti
lahf
rcrl
mov
sti
repnz
or
push
cmp
push
push
cmp
sbb
cs
aas
add
frstor
mov
mov
mov
jae
cli
int3
fisttpl
rcr
xchg
adc
test
es
dec
jb
faddl
movsb
cld
cli
or
fidivs
or
scas
imulb
sar
inc
in
or
add
xchg
shrl
fwait
test
in
mov
jge
scas
pop
fistl
jnp
stos
andb
addr16
pop
popf
sbb
add
dec
repnz
or
shll
fs
add
pushf
and
imul
ljmp
mov
insl
push
shll
mov
in
mov
aaa
cmpsb
and
cmpsl
fsubs
ljmp
fcom
mov
mov
es
adcb
and
test
icebp
push
mov
or
jo
shl
xchg
adc
or
mov
adcb
gs
add
sahf
jmp
or
jne
ss
sbb
outsl
daa
mov
xor
dec
inc
and
dec
sbb
sbb
andb
cld
lret
lock
cmp
lds
add
idivl
outsl
js
int3
jge
or
sub
jo
or
aas
fs
mov
mov
or
sub
jb
movsb
pusha
mov
jbe
and
stos
mov
popf
stc
mov
jp
xchg
or
xchg
test
imul
clc
pop
fidivrl
xor
in
sbb
lods
or
repz
jg
repnz
mov
les
outsl
and
push
test
jne
mov
add
ss
adc
add
call
icebp
andl
fsts
cltd
mov
xchg
xchg
jp
dec
test
xchg
stc
xchg
adc
adc
xor
jae
scas
mov
push
jb
int
ljmp
pop
xorb
int3
cmpsb
fsts
add
stc
imul
inc
gs
sub
and
and
xchg
ja
aam
inc
mov
xchg
and
cld
jmp
call
mov
adc
nop
or
add
jle
jb
xchg
cwtl
mov
jecxz
mov
or
xchg
sub
stc
or
adc
fmull
xchg
cmp
rclb
fcoml
cmp
and
sbb
call
shll
xchg
aam
xor
sbb
nop
jge
and
sbb
lea
mov
pop
enter
das
mov
insl
mov
addr16
popa
insb
ds
negb
cmc
and
mov
inc
hlt
ss
aaa
sbb
push
inc
in
cwtl
mov
adc
sbb
scas
out
xchg
xchg
mov
imul
incb
adc
adc
pop
xor
sbb
scas
jb
fsubl
xchg
inc
mov
mov
pop
movsb
lret
pop
and
lods
or
xlat
mov
cltd
pushf
mov
and
sbb
adc
aas
mov
lods
dec
out
dec
pop
inc
sub
xchg
addb
dec
sub
fbstp
data16
cmp
movb
add
mov
xchg
sbb
jno
inc
mov
sub
mov
cmp
jg
subb
or
mov
ja
jae
jae
pop
dec
sub
add
and
divl
jne
mov
sbb
sbb
into
ret
movsl
sub
shlb
pop
test
rorl
aad
mov
and
imul
test
leave
sub
test
xchg
mov
or
xor
lret
mov
in
mov
pop
push
xlat
mov
dec
jge
lock
mov
jle
dec
lods
inc
andl
pushf
jge
mov
pop
jns
dec
stc
jmp
popf
iret
roll
bound
sub
dec
call
js
mov
push
mov
pop
aas
insl
loope
jle
ficoml
out
int
sub
movsl
sub
pop
leave
jae
sbb
testl
psubusw
jns
sbb
add
pop
mov
pushf
insl
int
cmp
mov
shrl
push
cli
push
sti
lret
and
and
outsb
insb
mov
dec
xlat
movsb
scas
pusha
adc
cwtl
or
jbe
sbb
popa
imulb
add
clc
cwtl
repz
into
sub
jns
fadd
loopne
hlt
out
pop
mov
js
jmp
cli
stc
std
pop
sub
add
adc
mov
imul
fcomps
pop
sub
dec
pop
icebp
add
mov
outsl
jmp
sbb
pop
dec
outsl
fwait
push
out
xrelease
sub
lret
sub
push
pop
or
call
xchg
cli
mov
pop
mov
lods
jb
loop
out
lret
imull
lock
xchg
add
mov
movsb
dec
adc
pop
clc
sbb
and
mov
xchg
push
les
add
daa
outsl
mov
jp
mov
in
in
sub
lods
mov
fmull
fstpl
stos
push
adc
cltd
adc
mov
outsl
cli
daa
and
stc
jno
cmp
sub
nop
mov
jl
mov
in
imul
or
sub
xchg
or
stos
and
js
lock
imul
ffree
pop
or
ds
imul
out
shl
ljmp
xlat
xor
cltd
popa
xchg
and
mov
push
xchg
sbb
cmp
scas
inc
scas
inc
cwtl
push
jg
pop
xchg
mov
mov
cltd
pop
shrl
pop
std
mov
xchg
lahf
adc
jg
sub
leave
inc
pop
pop
inc
scas
imul
pop
or
xchg
ss
sahf
shlb
add
inc
dec
sbb
inc
mov
pop
outsl
insb
mov
sbb
mov
pop
xor
sbb
xchg
push
bound
lret
dec
hlt
test
push
dec
std
fcom
mov
jp
jbe
pop
clc
in
xor
cli
push
pop
mov
call
and
push
arpl
mov
mov
int3
out
sub
in
xor
pop
push
or
ds
cmc
jmp
cmp
add
fmulp
jnp
pop
imul
pushf
shrl
add
and
aas
mov
pop
xorb
lods
push
rcr
push
and
jbe
cltd
xchg
es
cmp
fstcw
out
out
mov
mov
mov
xchg
loopne
pop
movsl
pop
aam
or
jo
cltd
movsb
xchg
loope
in
adc
shrl
negl
or
shrl
mov
fldt
aaa
sbb
popa
dec
aad
sub
icebp
out
and
sub
loope
mov
lcall
push
imul
cmp
ljmp
cmp
jns
mov
inc
add
movsl
outsl
test
mov
sub
add
xlat
push
lea
ss
popa
jb
in
in
pop
pop
les
push
inc
aam
movsb
je
push
lea
mov
arpl
sub
lahf
int3
dec
test
and
push
jg
into
out
negb
adc
ja
jbe
jecxz
fidivrl
jecxz
lock
dec
aam
xchg
and
inc
mov
ss
push
mov
push
dec
sub
and
stos
push
push
lahf
insl
scas
xchg
push
stos
ret
adcl
xchg
xor
ret
fnsave
xlat
pop
add
dec
pop
popf
mov
insb
scas
lahf
in
lcall
aaa
daa
fcomip
mov
sti
cmpsb
das
aad
sti
dec
mov
cmp
jmp
adc
jg
mov
addr16
aam
pop
add
pop
stc
push
mov
jle
jo
mov
into
mov
ja
or
dec
jno
movsl
fldln2
jns
push
test
les
xor
outsb
adc
pop
dec
insb
loop
xor
in
adc
shr
cmp
movsb
xchg
icebp
gs
pop
enter
inc
sub
cltd
out
into
int
or
adc
mov
repnz
mov
std
addr16
ret
fs
iret
mov
adc
or
sub
mov
in
les
pop
or
cmp
je
jp
sbbb
insb
push
sub
int3
dec
mov
inc
stc
jb
cmp
inc
loopne
jl
xchg
mov
repnz
les
cmovge
in
xor
jo
out
lods
mov
subl
imul
cmp
add
sub
cmp
or
jnp
push
jne
and
xchg
mov
fcomps
or
jb
lods
in
lods
pusha
xchg
inc
inc
cmp
jmp
mov
xchg
aad
or
scas
mov
sbb
jge
inc
cmp
nop
dec
rcr
cmp
rcll
add
pop
pop
hlt
dec
icebp
add
push
cmpsb
or
stos
push
jbe
adc
xlat
and
daa
adc
xor
mov
adc
data16
out
ret
and
xor
and
clc
icebp
lcall
loope
cmp
sbb
ret
jns
dec
ret
mov
dec
or
cmp
push
add
jne
jns
mov
xor
pop
pushf
or
aas
jno
push
jmp
xchg
out
xchg
lea
sbb
jl
cmc
jnp
dec
pop
fdivrs
add
jbe
mov
shlb
pop
xor
mov
cmpsb
daa
inc
loopne
popf
dec
mov
rcl
iret
mov
xlat
mov
sub
add
scas
add
sbb
lea
mov
lret
mov
lea
rolb
push
mov
and
rcrb
adc
mov
and
out
sbb
je
add
push
dec
push
cmp
inc
mov
lods
mov
mov
lods
popf
push
pop
mov
add
cmc
lret
xchg
jae
mov
rclb
das
cmp
lret
adc
xorl
cmp
lea
call
push
fsts
sbb
mov
pop
jbe
adc
shll
mov
or
jl
push
faddl
xchg
xchg
sbb
mov
mov
fs
cmp
dec
andl
dec
inc
rolb
pop
pop
mov
mov
out
add
lea
rcll
pop
and
inc
leave
pop
mov
imul
lock
mov
icebp
push
pop
cltd
repz
pop
negl
lds
pop
hlt
clc
pushf
les
loopne
int
shll
hlt
cltd
andb
mov
popa
movsl
leave
or
mov
neg
inc
shl
jno
mov
mov
xor
mov
into
sbb
inc
bound
adcb
adc
daa
jns
jle
negl
rcll
dec
lret
cli
sub
shl
shl
jl
mov
insl
mov
out
sub
push
addr16
cmpsl
cmp
mov
cwtl
in
and
sbb
cmc
repnz
add
jne
sub
out
pop
adc
inc
sub
inc
imul
add
lock
push
les
int3
sti
sub
cld
sahf
jns
lock
test
mov
rep
in
xlat
testl
mov
popw
dec
xchg
addr16
dec
dec
dec
xchg
or
dec
rclb
mov
adc
popf
jbe
out
faddl
cli
pusha
movsl
stos
nop
or
sbb
sti
stc
push
mov
std
xlat
mov
mov
push
xchg
mov
hlt
repnz
adc
mov
adc
insl
xor
jae
or
mov
shlb
pop
outsb
inc
daa
test
cmpsl
xchg
call
inc
shrl
mov
inc
lret
xor
add
roll
shrb
cmp
or
pushf
xor
and
jae
adc
jge
xor
inc
xor
call
imul
inc
cld
test
sahf
aaa
xor
lea
in
dec
stos
xor
xchg
adc
pusha
fldt
pop
outsl
test
rorb
pop
loopne
pop
fdivp
ljmp
and
repz
rcll
mov
fnstsw
or
nop
add
xchg
and
sub
push
aaa
jge
cld
or
in
in
addr16
jbe
mov
push
xchg
lock
xor
mov
aam
mov
stc
addr16
ret
clc
sub
shll
fcmovb
imul
ret
pop
mov
lock
bound
inc
outsb
push
mov
inc
or
stc
mov
mov
movsb
ljmp
mov
sub
subb
fiaddl
in
and
mov
out
jecxz
push
cmp
sub
sbb
mov
xchg
ret
add
das
notb
and
jno
rcll
or
sti
xchg
imul
dec
pop
inc
jns
fwait
in
adc
je
arpl
hlt
inc
aas
jne
cmp
add
pop
jle
mov
sarb
shll
call
outsl
or
ljmp
or
push
out
aas
adc
fcoms
call
cmpsb
outsl
lods
push
in
xchg
aas
mov
cmp
daa
lods
neg
sub
scas
aad
or
mov
sub
mov
or
and
sub
pop
jbe
xchg
adc
data16
ljmp
lret
pop
es
jmp
xchg
sub
mov
scas
pushf
shl
cld
mov
clc
push
cmpsb
enter
addb
dec
daa
and
fcomp
pop
jp
jle
fmuls
cli
push
test
scas
adc
pop
pop
xchg
mov
mov
xchg
push
out
call
pop
sahf
lahf
and
out
outsl
jne
js
pop
cmc
mov
or
or
adc
adc
mov
sarb
cltd
call
fisttpl
dec
mov
fisttps
ret
sbb
rorl
fcmovnu
xchg
mov
jge
loop
jo
in
sub
into
cmpsb
das
or
lret
dec
pushf
mov
iret
ret
out
lcall
arpl
pop
xchg
ja
pop
inc
mov
jae
sbb
jo
hlt
jg
inc
ret
pop
pop
and
sbb
insb
inc
int3
xor
fildl
insl
lret
sub
rclb
aas
sbb
out
fistps
mov
in
dec
scas
add
aas
mov
mov
popa
mov
xor
dec
cwtl
pop
adcb
jecxz
cmpsl
push
sbb
push
test
test
cwtl
pop
imul
nop
sbb
icebp
inc
dec
mov
cmpsb
add
adc
mov
enter
pusha
and
dec
dec
jns
push
rolb
and
jo
lock
insb
jp
les
sbb
ret
inc
inc
sbb
fnstenv
mov
mov
mov
test
repnz
jae
push
ret
stos
sub
dec
test
or
inc
xor
xchg
push
fwait
adcb
int3
and
bound
adc
cmp
fwait
sbb
int
rclb
pusha
repz
dec
lcall
push
jp
add
adc
add
push
pop
mov
xchg
cmp
rol
sub
mov
sahf
or
sub
mov
mov
in
lcall
lret
inc
push
out
jg
and
cmc
movsb
dec
test
adc
push
push
shlb
adc
idiv
and
cmpsb
cli
sub
cmp
jecxz
shl
test
cli
loop
das
mov
push
bound
icebp
movsl
daa
mov
fidivrs
imul
dec
add
sub
sbb
aad
sub
xchg
out
push
lret
or
dec
jecxz
pushl
and
fucom
mov
shll
aaa
call
ret
pop
push
jl
sub
pop
out
pop
sahf
pop
popa
in
repz
ret
inc
inc
dec
aam
pushw
sub
scas
dec
mov
sub
stc
push
dec
xchg
int
push
cmc
in
js
inc
ljmp
outsb
pop
xchg
out
xchg
in
xor
iret
lds
inc
xor
or
xor
xchg
push
mov
sbb
xor
adc
xlat
xchg
add
add
pop
stc
bound
repnz
inc
call
push
icebp
aaa
pop
lock
pop
insb
adc
adc
lods
mov
mov
xchg
repnz
shl
mov
sub
aad
fmulp
xchg
call
fisttps
movsl
mov
ljmp
xchg
les
mov
sbb
and
imul
pop
ljmp
jne
fsubs
movsb
mov
les
push
mov
inc
add
push
rcrl
sbb
ljmp
repnz
lock
xor
or
mov
cli
sub
imul
sub
cmp
sbb
jo
ffree
sbb
xchg
repnz
in
stc
sbb
int
in
test
lea
mov
dec
aad
pusha
jnp
mov
push
mov
dec
imul
xchg
lea
lahf
inc
fcoml
add
add
jns
iret
add
inc
popa
stc
or
fwait
mov
mov
cmp
jo
mov
sub
shrb
stc
dec
int
xor
outsb
cmpsb
and
ret
jmp
enter
clc
sti
xor
pop
repz
ljmp
addr16
mov
pop
adc
sub
leave
addr16
jle
ss
pop
mov
test
cmp
add
popf
push
inc
lods
cmpl
sarb
aam
cld
flds
cmp
sbb
test
or
xchg
lods
loop
aas
sub
rcll
or
mov
sub
arpl
cld
nop
push
divl
pop
mov
or
adcb
int3
add
mov
mov
int
adc
scas
xor
insb
push
jmp
jns
enter
bswap
pushf
or
outsl
std
fcmovnbe
mov
out
sbb
push
push
mov
mov
jg
or
movb
mov
and
addl
push
inc
mov
cmp
mov
sbb
out
jae
addb
imul
ret
cld
mov
add
scas
sub
xorb
push
cwtl
inc
jge
cmpl
in
ret
mov
inc
cmp
test
cmp
mov
call
lret
data16
out
jmp
inc
sub
pop
pop
push
cmp
and
mov
or
jmp
mov
popf
adc
mov
push
and
xchg
sbb
xchg
cltd
loop
jle
arpl
flds
sbb
jno
daa
test
cmp
mov
jmp
stos
dec
xchg
or
sub
inc
sub
mov
mov
adc
repnz
mov
pop
int
int
mov
dec
add
push
ja
xchg
nop
jbe
repnz
mov
aad
push
icebp
jmp
inc
jle
cmp
inc
dec
incb
data16
cld
mov
stc
addr16
xor
das
pop
pop
test
stos
add
jge
insb
into
add
outsl
jp
cs
sbb
jle
adc
sti
stc
enter
cmp
pusha
sbb
inc
pushl
test
cltd
stc
hlt
ds
mov
dec
std
fs
cmp
xor
cmpsl
ss
push
add
add
dec
icebp
dec
xchg
xchg
outsb
mov
popa
xchg
ja,pt
js
xchg
addl
aaa
mov
shl
cmpsl
pop
je
sbb
in
test
out
cs
sbb
lock
bound
nop
ljmp
dec
xchg
shr
jbe
and
jle
pop
cmp
insl
mov
cmp
popf
jno
jg
lcall
fsubrp
lret
jbe
cmp
dec
stos
mov
mov
and
mov
and
out
loope
xchg
into
push
in
out
iret
clc
mov
xlat
pop
and
pop
and
mov
xor
adc
fmuls
mov
ds
jbe
inc
and
mov
mov
addr16
jle
cmp
ljmp
pop
lret
xchg
testl
pop
mov
dec
jno
pop
cld
es
ret
cld
push
pop
mov
in
xorb
dec
stos
sub
lea
sbb
fbstp
loope
cmp
leave
mov
ss
mov
aas
xor
int
mov
pop
and
xor
sti
xlat
and
add
dec
lods
lds
mov
and
jg
neg
xor
inc
mov
out
sbb
mov
mov
sub
lea
test
dec
mov
push
sti
cld
and
and
or
in
inc
int
popl
movsb
mov
loop
mov
xor
mov
sbb
stos
pop
push
popf
das
jp
or
and
jnp
insb
jno
mulb
or
test
pop
cwtl
mov
sti
enter
fsubrl
lods
fwait
mov
cli
iret
jns
lods
rcll
pop
out
mov
push
add
stos
or
nop
cmp
xor
in
jmp
popf
mov
cld
pop
ja
xchg
ds
pop
popf
mov
or
xchg
xchg
lretw
gs
lods
test
pop
dec
ds
sbb
scas
adc
xor
cmp
das
mov
sbb
xchg
push
in
out
add
movsb
pop
stc
fiadds
enter
decb
inc
jae
jo
fwait
loop
inc
addr16
inc
adc
push
fsubl
sahf
inc
xor
and
jns
pop
loopne
popa
jns
mov
mov
push
fisubrs
lret
int3
lea
aas
mov
sbb
sub
push
jnp
mov
push
lock
fcomip
push
xchg
xchg
rol
push
jb
push
pop
xchg
xlat
cmp
mov
jae
adcl
and
or
daa
imul
movsl
or
sbb
jmp
test
fldcw
xor
inc
mov
les
aam
pop
mov
mov
cwtl
out
out
mov
addr16
clc
popa
ficomps
cld
mov
mov
jmp
stos
insl
pop
xor
icebp
push
call
loopne
push
cld
mov
aas
sbb
in
call
push
adc
cmpsb
scas
mov
adc
aad
out
outsb
add
scas
shlb
adc
mov
loop
mov
or
xchg
call
mov
adc
arpl
orb
or
xchg
or
xchg
jae
loope
les
in
cmp
test
push
push
lahf
mov
popa
jnp
jp
mov
cs
js
sar
pop
sahf
into
fisubrs
sahf
and
mov
xchg
dec
jg
stc
pop
pop
enter
repnz
xlat
data16
jl
out
popa
add
xchg
ss
sub
push
insb
mov
inc
ja
jnp
adc
pop
ja
lcall
push
push
sti
lcall
pop
jb
je
cld
cli
lock
dec
dec
ds
add
sub
cmp
pop
scas
mov
xchg
shll
and
add
fildl
sub
ss
addr16
xor
xor
insb
mov
fdivs
add
int
imul
popf
pop
cmp
sbb
sub
lods
or
and
xchg
pop
in
dec
pusha
lds
mov
aam
or
pop
mov
xchg
jle
out
mov
arpl
xchg
into
xchg
inc
xchg
test
dec
dec
gs
loope
or
out
cmp
xor
or
sbb
shrl
stos
adc
xor
jmp
jne
mov
popf
adcb
cmp
mov
pop
mov
cwtl
icebp
cmp
push
xor
pop
jns
cmp
mov
insb
jle
dec
into
daa
mov
sub
mov
inc
or
nop
scas
or
addr16
sbb
jl
mov
xchg
mov
cmp
xor
mov
pop
out
fsubrs
jns
inc
jge
mov
or
scas
cmpsl
test
pop
in
mov
mov
dec
ret
in
lret
inc
lea
popf
fstpt
add
jne
cwtl
push
mov
add
call
inc
cmc
xor
movzbl
push
daa
jmp
add
or
mov
repnz
or
subl
in
jno
jbe
into
mov
cmp
repz
pop
insl
gs
or
int
adc
movsl
ret
ss
cli
aad
lret
sub
pop
jne
lods
ror
dec
je
adc
jb,pt
mov
rolb
subl
iret
arpl
mov
jg
mov
push
jo
popa
divb
push
in
popf
fsubs
pop
or
int
xor
add
dec
sbb
daa
int
sub
in
mov
movsl
mov
jnp
int
and
mov
ja
add
jge
mov
xchg
push
add
shrb
cmp
push
mov
jge
mov
mov
aam
sahf
and
xadd
inc
dec
dec
daa
test
pushf
jns
int3
popa
movsl
jne
sbbb
sub
mov
mov
and
imul
lcall
in
scas
xchg
test
je
enter
shll
mov
and
mov
rclb
xchg
stos
ret
out
jge
dec
sbb
popf
cld
push
dec
cmp
dec
pop
sub
pop
mov
add
cmpsb
sbb
mov
inc
roll
aad
es
jmp
test
rcl
adc
popf
push
dec
outsb
ret
push
setns
jo
pop
cmc
cld
popa
cmp
mov
inc
dec
push
js
dec
out
cmp
cmp
out
xchg
inc
jae
nop
dec
andl
cmp
pop
movsb
mov
test
xlat
add
mov
in
pop
les
adc
push
ljmp
jb
insb
xor
hlt
fdivrl
pop
or
pushf
fistl
aam
pop
stos
xchg
push
popa
jle
lea
lsl
stc
dec
sbb
or
pop
popf
fstpt
inc
push
and
imul
outsb
fdivrl
sub
clc
cmpsl
inc
cli
and
jg
fdivrp
loope
rcl
sub
jl
aam
lret
jp
cmp
clc
pop
push
sub
arpl
or
es
cli
and
sbb
and
lahf
loop
jl
test
xchg
loopne
sbb
in
sub
push
cmp
stc
movsb
ja
jle
xchg
loopne
sub
sbb
jnp
push
xor
cltd
data16
add
mov
push
cwtl
cld
shlb
enter
adc
jg
pop
mov
rcrb
or
repz
pop
push
jmp
js
add
addb
nop
fnstcw
xor
pop
repnz
jp
arpl
pop
das
cmp
mov
mov
inc
xchg
sahf
jge
add
leave
mov
fsubr
push
or
icebp
fldt
and
addr16
jbe
ret
jns
sbb
insl
leave
cmp
pop
loope
mov
test
push
dec
cwtl
push
xchg
in
popa
cwtl
cmpsl
add
jg
jl
jg
inc
mov
jno
jmp
call
pushl
push
dec
mov
xchg
ljmp
bound
push
jo
xchg
mov
jmp
sbb
lock
sbb
mov
jno
rorb
pop
lock
adc
dec
mov
xor
sar
jp
stc
es
xlat
cmp
cltd
popa
aam
mov
or
cmp
movsl
pop
add
daa
scas
cmp
call
and
cmp
lods
and
pop
test
jbe
movsl
add
fdivrp
int
pop
nop
lcall
sub
subl
cmp
ja
pop
pusha
xor
xchg
ffreep
sub
pushf
insl
add
repnz
in
cmp
popa
pop
cmp
popf
cmp
and
pusha
xlat
or
inc
test
mov
addr16
mov
push
sarb
loop
add
inc
mov
cltd
pop
adc
cmp
push
fbstp
cmp
mov
mov
pop
pop
xchg
gs
addr16
cmpsl
ja
dec
arpl
leave
mov
fisttpll
pop
fsubrl
dec
dec
mov
mov
cmc
mov
mov
in
fdivl
mov
mov
xchg
hlt
stos
sub
stc
sahf
mov
lret
ljmp
sbbl
enter
add
stc
adc
inc
pop
xor
call
xlat
sbb
push
lcall
and
aaa
push
lods
call
sbb
dec
in
add
sarb
loop
xor
out
cli
mov
mov
fcmovb
mov
loopne
fldl
divb
into
sub
dec
lcall
test
dec
add
xor
loop
add
add
lcall
dec
dec
imul
loop
mov
sbb
inc
add
pusha
jp
xchg
adc
daa
mov
jg
mov
negb
mov
push
add
ljmp
mov
jmp
sbb
push
bound
sbb
in
movsl
push
in
sub
sub
cmpsl
pop
inc
test
jecxz
jns
fdiv
fnstcw
mov
xchg
sub
inc
mov
push
iret
jns
xchg
dec
fsubs
adc
push
cltd
mov
cli
pop
repz
add
sbb
pop
ds
xchg
mov
add
push
outsl
sub
jbe
les
fsubr
scas
sub
aaa
and
test
popa
cmp
idiv
jno
lcall
pop
mov
ds
call
sbb
mov
push
xlat
and
ss
dec
and
mov
das
push
in
scas
or
into
sub
pop
cmp
mov
andb
mov
es
xor
inc
jmp
jne
repnz
dec
out
hlt
out
rorl
loopne
shll
push
jg
popf
sarl
sbbl
arpl
xchg
shll
mov
lret
fsubrl
and
or
inc
mov
icebp
pop
xchg
pop
aaa
sahf
mov
xchg
scas
leave
dec
in
shrd
lds
push
mov
push
lahf
fdivrs
mov
icebp
ds
fiaddl
inc
outsb
jns
jge
rclb
je
ss
push
lds
or
orb
jnp
sub
mov
aam
xorps
jecxz
hlt
aam
lock
pop
push
shll
stos
ja
lcall
push
push
inc
xor
lods
outsb
dec
mov
loopne
mov
ljmp
arpl
mov
xchg
cmp
call
pop
daa
scas
xchg
mov
push
test
pop
pop
xchg
mov
ror
mov
out
pop
test
out
nop
das
int3
repnz
mov
dec
clc
cmp
in
jno
nop
pusha
jg
mov
fdivl
xchg
subb
insb
cmpsl
mov
aaa
mov
sahf
jbe
fimuls
adc
mov
mov
in
push
push
mov
out
lcall
scas
mov
cwtl
push
lcall
jmp
mov
fcmovnb
inc
das
bound
push
clc
inc
aas
adc
ret
dec
ss
jmp
sub
loope
push
adc
rorl
fsincos
movsb
sbb
mov
arpl
in
imul
mov
lcall
mov
mov
inc
jp
or
stos
into
adc
hlt
mov
fscale
inc
mov
lahf
imul
push
aad
mov
lcall
frndint
pop
and
push
xlat
jnp
insb
or
addr16
pushf
xor
cmp
in
push
pop
mov
dec
insl
popa
push
push
jecxz
adc
xchg
push
sbb
jge
xor
lret
lcall
adc
add
add
pusha
dec
push
gs
xchg
push
pop
subl
mov
adc
ret
lock
xchg
out
lcall
pop
daa
outsl
mov
add
loop
pusha
cmp
push
dec
cmpsl
lods
sub
jns
jne
mov
pop
sub
ja
mov
pop
test
iret
fisubs
shl
xchg
jae
ja
repz
aam
scas
cmc
aam
jp
cs
adcl
sbb
ja
stc
data16
rolb
mov
aaa
mov
mov
les
jnp
pop
cmp
leave
lods
or
lcall
cmc
outsb
ret
sub
and
fsincos
push
mov
jle
pop
jnp
js
sti
push
dec
or
in
daa
sub
sbb
adc
scas
mov
xchg
sub
sub
mov
sbb
js
sub
div
add
jae
sub
inc
scas
mov
fiaddl
daa
and
mov
dec
push
or
pop
add
or
inc
and
mov
jne
push
dec
inc
xchg
sbb
and
sub
enter
pop
loopne
lods
mov
icebp
icebp
push
fs
or
cltd
loop
leave
inc
mov
inc
mov
sbb
das
cmp
cmp
ficoms
int3
into
addr16
je
loopne
xchg
push
mov
arpl
flds
pop
inc
dec
popf
inc
and
dec
test
xchg
jp
cli
data16
popa
sub
mov
lcall
in
sahf
je
jg
cmp
push
sub
and
xor
adc
shlb
pop
je
lahf
sbb
frstor
fs
repnz
test
inc
sbb
mov
incl
cs
push
adc
scas
aam
push
js
ljmp
jle
es
insl
enter
cmp
pusha
cmp
js
jmp
popa
popf
xor
jae
or
sahf
fsubl
and
mov
hlt
jb
lods
add
and
xchg
loopne
xor
iret
insl
or
popf
inc
mov
or
inc
add
repnz
push
repz
push
aam
push
mov
lret
push
into
imul
inc
push
in
jb
std
fcmovb
xchg
jnp
jo
mov
xor
mov
lds
xor
fistps
xchg
and
outsb
inc
movsb
lret
lcall
push
jns
mov
sbb
fsubs
and
pop
pop
xchg
xor
aam
enter
cmpsl
lahf
add
lods
mov
repnz
out
lods
mov
mov
out
add
jg
test
sub
in
add
pop
mov
popf
stc
sbb
scas
pop
xor
add
enter
fwait
xchg
sbb
stc
pusha
out
scas
mov
dec
inc
xor
or
stos
dec
push
mov
jmp
dec
pop
inc
jne
xor
jno
js
test
sub
mov
xor
addr16
sbb
aam
stos
cs
shlb
xchg
adc
dec
mov
sbb
out
pinsrw
scas
adc
adc
cli
jne
data16
dec
sub
out
movsl
add
mov
repz
ret
push
mov
addr16
mov
in
add
sub
cld
push
icebp
mov
and
nop
ds
mov
sub
loopne
mov
fmuls
sbb
insl
insl
aaa
push
add
xchg
jge
cmp
aaa
mov
jns
mov
in
and
fbstp
cltd
or
mov
fldcw
adc
adc
or
inc
jb
mull
fucomip
sbb
dec
sbb
adc
inc
shrl
lods
xchg
ljmp
xchg
xchg
add
mov
cmp
jo
dec
xchg
ret
test
cltd
shlb
loope
mov
xchg
ja
push
mov
pushf
int
insl
push
lods
push
loope
jl
sbb
push
inc
xor
aaa
cmp
adc
sub
cmp
xchg
xchg
jbe
pop
movsb
scas
movups
push
out
hlt
dec
loopne
dec
movl
dec
push
inc
jl
cmpsb
rcrl
dec
dec
jp
fisubrs
mov
fwait
or
xchg
dec
push
inc
dec
insb
mov
mov
fdivrs
and
cmp
scas
cld
cs
cmp
sbbb
movsl
cmpsb
lret
sbb
decb
psllw
dec
cmp
daa
sub
and
jae
adc
jle
in
and
xchg
sub
mov
loopne
ljmp
mov
mov
mov
mov
mov
inc
cmp
ljmp
imul
dec
out
xor
sub
pop
pop
add
pop
or
fucomp
cmpsb
pushf
cmpsb
rep
mov
popw
das
and
pop
pop
in
dec
mov
test
or
imul
jecxz
imul
faddp
pushf
xor
inc
in
lret
mov
mov
lcall
sahf
stos
jns
dec
rcrl
add
mov
cmc
loope
movsl
mov
mov
push
shr
mov
lcall
sub
fwait
rcll
fistps
out
mov
inc
adc
xchg
rorl
pop
mov
or
push
add
addr16
xchg
adc
fcmovu
sbb
je
cmp
mov
notl
push
arpl
aaa
mov
xchg
ljmp
fs
xor
clc
lcall
adc
aam
shrl
sbb
xor
ret
push
add
sbb
mov
adc
adc
pop
adc
pop
xchg
add
mov
mov
sbb
mov
fs
jb
mov
ret
mov
jle
jne
outsb
sub
push
mov
mov
push
es
mov
test
test
jnp
dec
fcompl
rcrb
mov
loope
mov
push
xor
aam
mov
aaa
es
push
imul
jp
addr16
cld
in
icebp
out
in
push
adc
push
sub
inc
or
and
insl
sub
xor
mov
js
or
out
cmc
ret
roll
inc
clc
push
sbbb
in
add
out
push
inc
test
push
movb
cld
lret
repnz
pop
push
repnz
int
jo
les
mov
cmc
mov
fisubs
or
in
mov
je
xor
xlat
mov
js
stos
fisttps
pop
fwait
imul
stos
cld
in
fldt
or
xlat
or
popa
adcb
xchg
dec
jg
scas
push
and
push
faddl
mov
in
mov
inc
repz
add
mov
pop
xchg
sahf
xor
mov
mov
outsb
pop
insl
sub
and
sbb
pop
mov
push
sub
aad
es
js
inc
adc
aad
iret
cmc
lock
mov
js
push
cmp
jle
scas
rolb
je
shlb
mov
pop
loopne
ds
xor
jmp
into
adc
lahf
mov
jb
xchg
mov
dec
popf
pop
fs
test
aam
mov
pop
insl
dec
lret
xor
push
sub
fcomp
jp
jmp
or
mov
mov
mov
outsl
xor
mov
sub
stc
cltd
sub
aas
mov
mov
and
leave
outsb
les
ds
xchg
mov
in
shl
pop
jmp
and
test
aad
cmp
cli
xor
test
or
mov
mov
pop
sbb
add
mov
push
xchg
push
out
inc
dec
xor
pop
test
imul
mov
jb
ret
fdivrl
in
in
jmp
testb
cmp
and
sti
sub
repz
sbb
add
aam
jo
mov
add
xchg
mov
je
mov
inc
pop
dec
cmp
ljmp
dec
mov
mov
push
xchg
pop
pop
int3
lret
in
test
shll
xchg
pop
iret
lcall
fcmovnbe
ljmp
jmp
or
sub
mov
mov
ret
push
or
ja
lahf
std
into
mov
cmove
adc
bound
lahf
addb
push
jo
mov
sub
mulb
cltd
cld
xchg
shl
jns
add
push
sbb
test
sub
mov
dec
xchg
xchg
mov
in
mov
in
das
pop
test
dec
test
dec
inc
icebp
and
nop
test
jge
xchg
cmp
and
inc
or
fidivrs
mov
xor
mov
es
cmp
or
test
dec
ljmp
mov
adc
fadds
fidivl
mov
or
sub
pop
xor
nop
std
cmp
and
fs
add
mov
and
clc
xchg
ds
xchg
iret
jecxz
jne
xor
sbb
in
movsl
notb
fs
add
mov
fsubl
inc
jns
jne
popf
leave
lock
inc
das
dec
jb
mov
mov
fimull
jl
jne
mov
xchg
jmp
inc
ljmp
or
lcall
inc
ret
fdivrl
call
cwtl
xorl
cmp
and
push
push
pop
lea
cltd
sbb
push
adc
imul
popf
mov
sbb
fisubs
ficomps
mov
lds
mov
or
stc
mov
loopne
inc
scas
clc
mov
mov
pop
xor
sbb
out
or
jbe
mov
pop
jne
and
mov
xor
jmp
jnp
jne
fsubs
loope
and
ret
insb
leave
cli
aam
loop
loop
and
in
ret
jne
jae
lock
push
or
aaa
cmp
push
sub
dec
add
rorl
leave
bound
ror
mov
imul
xlat
mov
outsl
hlt
faddl
lcall
sub
cmp
fbld
into
xchg
shll
xlat
push
adc
sbb
ss
sti
sub
data16
das
mov
iret
inc
adc
cmp
inc
add
inc
jp
ficoml
mov
jae
outsb
fmull
nop
mov
pop
or
je,pn
and
gs
mov
inc
add
or
cltd
jb
jl
fildll
sub
dec
pop
jg
cmpsb
and
mov
and
pop
jo
adc
sbb
out
mov
imul
push
enter
add
iret
and
sti
lds
popa
sub
or
push
lods
pop
jmp
dec
out
test
in
xor
mov
rcrb
or
cmp
jbe
jne
sar
lods
aam
xchg
xor
in
jge
out
mov
adc
jmp
inc
sti
and
cmp
and
adc
inc
insb
leave
enter
push
push
out
xchg
aam
add
sbb
adc
loopne
and
xor
daa
aaa
mov
loop
pop
jp
aas
inc
leave
cmovg
cmc
mov
out
stos
fsubrl
call
push
mov
inc
jl
int3
dec
ret
pop
push
pushf
ja
jbe
mov
fnstsw
out
sub
mov
jmp
insl
aad
mov
jg
int3
sub
inc
xchg
lahf
and
jp
es
mov
cmpsb
or
sub
pop
sar
insl
cmp
jns
fs
pop
scas
adc
bound
cltd
xor
dec
dec
notb
fidivl
adc
cmp
push
inc
lret
fld
gs
add
cmc
filds
dec
lahf
std
shrl
dec
out
mov
sub
mov
je
adc
pop
push
cld
jae
xchg
mov
xor
lcall
add
jl
xchg
push
ret
mov
add
add
sarb
xlat
hlt
das
lret
ds
ret
in
mov
inc
mov
or
shrb
es
pop
sti
dec
mov
lock
fadds
imul
xchg
sub
inc
sti
xchg
int
lret
clc
xchg
scas
loope
inc
sbb
jecxz
xlat
lea
testl
fstps
fdivrp
pop
cmpsb
loopne
andl
add
add
dec
iret
and
ss
jp
loopne
pop
mov
xchg
in
push
dec
push
mov
mov
mov
lret
pop
ret
daa
nop
in
das
push
and
rcll
jmp
repz
mov
test
xchg
jle
jo
movsl
adc
roll
out
ja
bnd
cs
xor
pop
enter
call
test
mov
inc
dec
push
pop
xchg
out
cli
mov
daa
mov
jmp
or
and
leave
or
pop
inc
cs
inc
bound
push
mov
jmp
fcomps
imul
mov
xchg
pop
leave
lahf
cld
sub
push
or
xor
je
ficoms
pop
repz
lea
or
mov
aaa
mov
call
test
jge
pushf
cmpsb
loop
jmp
jl
xchg
stos
fisttps
adc
sub
pop
pusha
shlb
jle
out
rorl
fistpll
jae
hlt
out
repnz
gs
int3
aad
cmpsl
in
fcmove
sbb
dec
sub
jb
imul
fdivrl
ficoms
dec
jns
mov
or
mov
jle
dec
mov
pop
pop
sbb
test
scas
adc
mov
aam
xchg
cmp
arpl
pop
lock
pop
push
movsb
lock
cmp
and
ret
pop
push
push
xor
adc
pusha
scas
insl
fsubl
imulb
mov
std
inc
pop
mov
jle
dec
mov
sub
adc
sub
or
xlat
pop
inc
pop
xchg
push
jp
jg
enter
mov
loope
xchg
gs
and
xor
cli
mov
outsb
pop
push
ja
movsb
push
mov
xchg
dec
mov
add
out
jae
jge
sub
clc
insl
scas
int
cwtl
lret
mov
xor
xor
and
sahf
into
mov
xor
subb
mov
push
insb
inc
adc
jmp
jnp
mov
jecxz
or
sbb
int
dec
testb
and
or
popf
fisttps
and
ljmp
test
cmpsl
iret
call
fildl
adc
mov
ficoml
jno
inc
sbb
push
rorl
sub
mov
in
outsb
aam
pop
ljmp
or
int
fisttpll
test
imul
pop
outsb
xor
cltd
icebp
aaa
add
ja
pop
dec
cs
or
inc
out
test
das
inc
mov
test
sbb
adc
lcall
nop
imul
lret
icebp
xchg
lcall
or
insb
addb
das
pop
aaa
xchg
fidivl
rclb
call
jmp
cmp
jb
outsl
gs
aas
dec
jnp
shll
sahf
mov
adc
push
sbb
mov
sbb
inc
inc
push
loopne
dec
negb
mov
insb
push
out
pop
add
arpl
cmp
ror
sbb
test
pushf
dec
jge
mov
push
fwait
and
dec
or
daa
enter
in
mov
test
xchg
cmc
cmpsl
and
mov
jae
sbb
push
xlat
fs
mov
push
loope
adc
mov
push
into
cmpsb
xor
and
les
cwtl
call
shlb
popf
push
fisttpll
xchg
xchg
dec
xchg
stc
aam
pop
lea
mov
push
rcl
loop
xchg
call
cmp
std
fisubl
in
clc
cmp
icebp
fildll
and
imul
ljmp
test
int
jae
push
mov
int
stc
jg
xchg
roll
dec
je
add
adc
mov
dec
mov
jg
or
xchg
cmp
add
mov
aad
pop
dec
push
mov
cli
rep
fisubs
and
mov
out
pushf
sbb
int
inc
mov
cltd
js
add
mov
mov
notb
int
lock
test
movsl
jle
out
or
fxch
dec
out
mov
sub
adc
push
cmp
cmp
shlb
and
fs
inc
fildl
jl
pop
jno
add
cmp
inc
push
or
frstor
jge
pop
dec
addb
xchg
lret
pop
and
mov
dec
iretw
xchg
and
addb
dec
fs
cltd
mov
xor
sbb
sti
mov
jle
pop
fldcw
pop
scas
push
stc
sub
ja
jno
dec
cmp
and
leave
or
cli
sbb
and
jbe
inc
xchg
repnz
in
es
or
pop
in
dec
pop
not
pop
jb
inc
outsb
gs
ss
xor
aam
mov
jle
mov
add
and
mul
or
sub
jge
sub
in
inc
and
mov
and
pop
outsl
cld
add
nop
test
leave
pop
mov
xor
sub
mov
rol
mov
data16
loop
iret
mov
sub
cmpsl
mov
imul
ret
add
cmp
xchg
sub
mov
repnz
pop
popa
int3
cwtl
xchg
push
rolb
ficomps
pop
shl
adc
jl
cmp
lcall
ret
mov
fidivs
lret
fisubl
loop
in
cs
or
hlt
cmp
sbb
sub
dec
fidivl
inc
cmp
jge
out
in
fcoms
rolb
sbb
into
fisubs
mov
scas
mov
jp
or
mov
push
sbb
mov
iret
dec
divl
mov
fdiv
adc
rolb
lret
push
sbb
test
cmp
pop
mov
push
addb
push
rclb
es
in
mov
stc
mov
sub
lret
out
in
cmc
or
lods
jmp
dec
push
mov
enter
or
cltd
mov
mov
imul
inc
pop
and
push
mov
xor
les
push
into
sbb
add
push
jp
mov
enter
xor
fs
inc
inc
jno
inc
je
leave
scas
orb
xchg
pop
aam
jle
stos
outsl
push
add
dec
add
in
sahf
stc
sbb
cmp
outsl
movsb
fisttpll
push
mov
sub
xor
sub
xchg
out
insl
and
push
xchg
xchg
mov
test
mov
stos
push
pusha
pop
sahf
or
ss
hlt
std
sub
fdivs
ret
adc
sbb
fsubs
inc
sbb
sub
xchg
inc
push
enter
add
mov
std
adc
mov
addr16
mov
cmpb
mov
das
jmp
xor
nop
inc
dec
ss
adc
xchg
mov
xchg
std
pop
popf
test
daa
mov
data16
mov
cmc
push
jl
hlt
cmp
add
jae
cs
or
mov
dec
cmp
or
mov
adc
loope
pop
bound
dec
pop
xchg
xlat
nop
push
lods
in
mov
frstor
jmp
pop
mov
icebp
iret
prefetcht1
lret
add
xchg
rcrl
push
pop
mov
movsb
sti
addb
dec
push
testb
adc
stc
in
movsl
popa
int3
rcrb
adc
adc
xor
lock
mov
adc
add
sti
xor
mov
cltd
dec
stos
push
mov
mov
mov
nop
adc
sbb
int3
in
call
call
jo
lods
sbb
xor
sub
fmull
pushl
xor
test
add
out
stc
dec
push
stos
insl
cmp
push
aaa
xchg
aas
vmaxps
les
xor
xor
rcrl
rolb
sbb
adc
mov
fdivr
dec
iret
sbb
or
and
dec
push
lods
mov
hlt
xchg
mov
jmp
pop
mov
mov
cmp
and
in
fwait
mov
sbb
imul
lock
call
add
pushl
mov
jns
inc
xchg
inc
lods
xchg
iret
dec
jno
fbld
mov
out
insl
pop
loop
xchg
xchg
mov
xor
pop
or
xchg
cwtl
cli
xor
jns
fwait
sub
push
jae
dec
fs
xor
inc
pushf
sbb
int3
test
test
add
xchg
stc
jl
push
mov
adc
jg
adc
jb
cltd
rorb
call
in
roll
sti
push
mov
dec
not
jne
mov
push
dec
mov
aaa
lea
sbb
movsb
cltd
fs
xor
push
mov
popf
pop
cmp
or
xchg
sub
outsb
and
cmp
sbb
push
mov
or
and
imul
xor
insb
dec
enter
and
fisttpll
sar
push
ret
ljmp
arpl
push
mov
push
dec
adc
jge
dec
movsl
stos
and
sub
or
repz
or
sub
fisubl
add
addr16
mov
or
mov
adc
cmpsl
fcmovne
mov
mov
pop
sub
or
pop
mov
xchg
adc
movsb
push
rclb
or
pushf
cwtl
jbe
push
xchg
imul
cmp
dec
add
xchg
pop
es
scas
inc
fstps
push
add
mov
dec
nop
and
sti
mov
or
mov
fwait
inc
iret
popf
mov
mov
push
mov
daa
push
fdivs
lea
aaa
cmpsl
ljmp
aas
imulb
pushf
sbb
jmp
xor
test
jmp
jno
aam
aas
scas
pop
xlat
lods
stc
gs
mov
mov
push
das
mov
lahf
js
dec
jl
vpsraw
call
inc
inc
inc
int
xor
lock
xor
dec
dec
lea
sub
mov
das
dec
loop
jmp
pop
add
mov
cwtl
xchg
sub
ret
push
xchg
xchg
mov
push
pop
scas
push
cmp
repz
sbb
cli
shlb
out
dec
jecxz
sbb
jns
sar
fadds
pop
add
sub
mov
dec
cmp
stos
and
jb
pop
js
test
cltd
mov
cmp
xchg
test
push
pop
inc
fs
xor
inc
pop
clc
popf
mov
pop
and
pop
stos
mov
jp
pop
xchg
pop
sbb
lea
mov
test
int
imul
push
imul
push
lods
lret
mov
out
lods
sbb
and
movl
sub
mov
roll
cmp
idivb
clc
fisubl
lds
out
dec
imul
sbb
push
scas
adc
mov
enter
loopne
pop
roll
rcrb
xor
aam
cmp
jecxz
mov
cmp
aam
xor
ljmp
dec
ljmp
jle
push
jl
jb
cwtl
mov
dec
ss
pop
sarl
pop
rsm
adc
mov
adc
orb
xor
dec
push
pop
add
popa
and
jno,pn
inc
pop
xor
lea
sbb
popa
icebp
push
fstps
jno
js
and
sbb
pop
je
or
fisubrs
pusha
rdmsr
ljmp
stos
pop
pop
roll
and
mov
sbb
leave
jl
sahf
pop
or
bound
test
imul
push
test
xor
stos
aaa
ja
clc
pop
fists
out
push
out
add
pop
push
adc
jb
push
xor
sub
add
sbb
jns
stos
lret
jp
pop
jg
in
xchg
push
pop
cmp
xchg
leave
dec
sarb
xchg
cmp
lcall
jo
adc
push
cmp
pop
xorl
mov
ss
mov
lds
insb
insl
test
dec
jbe
sub
out
add
shrl
or
inc
mov
xor
cmpsb
sub
push
cmc
push
ja
inc
jp
fisttps
mov
push
sub
push
or
xchg
repz
push
mov
jbe
push
adc
add
or
cmp
mov
jae
fscale
inc
aad
jecxz
or
jp
or
adc
mov
les
scas
or
cmp
daa
sarb
iret
mov
int
mov
lret
push
ja
adc
pop
clc
jge
ljmp
or
adc
jns
xchg
stos
push
sbb
mov
dec
jbe
and
and
sbb
rcrl
inc
push
test
xor
imul
das
data16
push
mov
lcall
inc
dec
mov
or
mov
les
jno
dec
sub
mov
jp
cmp
adc
stos
repnz
cmpsl
push
lret
sub
nop
gs
sub
inc
std
or
mov
inc
nop
lcall
xchg
xor
cmp
adc
and
sbb
in
sbb
sbb
hlt
ficoms
repnz
lods
push
xor
scas
stc
popf
add
push
sub
hlt
cmp
sbb
and
jbe
sbb
pop
mov
fidivs
add
cmp
dec
std
test
mov
jne
lods
mov
sub
mov
and
pop
arpl
add
sarl
xchg
in
jge
push
add
jmp
xlat
cmp
lods
or
mov
lret
inc
loope
dec
xor
fwait
loope
pop
dec
and
xor
add
inc
mov
icebp
mov
sarl
sub
insb
daa
ss
cmp
push
scas
adc
out
xchg
bound
inc
std
es
dec
mov
pop
push
xor
and
cmp
les
mov
mov
repz
xor
and
dec
ret
iret
jg
movsb
mov
nop
add
sub
lock
jle
adc
faddl
insb
push
adc
xchg
gs
mov
call
sti
or
data16
pop
or
ret
xchg
in
xor
xchg
or
lds
fisubrs
lret
js
pop
inc
push
fs
fdivl
lock
insl
adc
jle
mov
push
loop
add
lds
jg
imul
das
repz
out
filds
cmp
cld
aas
leave
and
xchg
lds
dec
inc
push
add
and
gs
fidivrl
or
push
mov
xchg
mov
hlt
pop
rol
pop
insb
hlt
mov
add
test
inc
daa
in
cltd
push
mov
xchg
outsl
xchg
add
push
xchg
jne
int
xor
fbld
cmc
out
push
dec
sub
or
and
xorl
int
mov
lret
sbb
xor
add
imulb
sbb
mov
ret
fwait
dec
sbbb
shrb
test
popa
sub
in
fcom
pop
push
sbb
repz
jne
sbb
xchg
push
loope
je
pushf
imul
movsb
cmp
sub
loopne
xchg
loop
cwtl
jmp
pop
fs
mov
enter
loopne
or
or
xchg
jmp
shrl
lods
ljmp
or
outsb
cmp
les
sarb
pop
jns
loopne
sub
roll
orb
sub
pop
imul
lret
cmpsb
bound
les
mov
movsb
and
xor
rcrb
push
dec
call
pop
into
inc
inc
xchg
jmp
and
mov
mov
in
or
adc
mov
mov
mov
xchg
cvtdq2ps
pop
ret
push
test
cmc
push
cmp
lods
mov
xorb
mov
cmpsl
or
push
jns
xchg
inc
push
dec
incl
xor
dec
js
xchg
sub
or
add
into
sbb
jg
fwait
insl
outsb
sti
cmp
mov
test
enter
dec
xchg
inc
adc
jp
cltd
rcr
out
cmp
sbb
xlat
or
push
ret
xlat
mov
out
jle
insb
bound
add
jb
push
mov
out
push
int
push
mov
and
rcrl
add
mov
insl
jp
push
js
insb
push
les
inc
ljmp
mov
mov
lock
inc
inc
jno
testl
lcall
dec
jge
push
ficompl
adc
xchg
negl
cmpsl
jg,pt
add
xchg
test
fs
pop
and
test
call
push
mov
mov
jae
jecxz
xchg
lods
incb
xor
dec
jbe
int3
jl
lcall
mov
cmpsl
fsubrl
repnz
jle
jne
aas
imul
repz
cmp
std
popa
cli
mov
pop
jne
jp
mov
pop
ret
mov
adc
pop
lret
test
sbb
mov
incb
add
cmp
xor
mov
sub
xchg
push
daa
popf
cs
shlb
mov
add
pop
popa
push
cli
aaa
call
lea
dec
lret
mov
sahf
lock
jg
outsl
scas
shlb
imul
fimuls
repnz
jp
mov
cmp
and
repnz
inc
jp
test
pop
jne
pop
xchg
adc
std
repnz
jp
mov
push
mov
sbb
fimull
add
sub
bound
jb
subl
xchg
xchg
imul
dec
lret
inc
adc
xor
adc
imul
scas
mov
jecxz
xlat
ds
lahf
xor
pop
enter
fiaddl
add
push
mov
dec
mov
js
lret
inc
movsb
aaa
jno
push
movl
icebp
sbb
or
es
or
fimuls
dec
mov
and
addr16
ljmp
xorl
in
mov
out
pop
outsl
fsubrp
or
scas
test
push
push
fcoms
inc
push
rcr
mov
jb
or
imul
add
pop
sbb
arpl
jle
bound
push
mov
fsubrp
cld
lret
mov
xlat
test
jge
dec
aas
sbb
je
addr16
jo
lods
and
das
popf
ficomps
jo
mov
mov
push
sub
adc
jno
or
rcrb
jne
and
add
mov
jnp
outsb
and
push
lods
stc
movsb
test
mov
push
repnz
notl
fldl2t
push
je
add
jb
mov
pop
pop
push
not
cwtl
lea
dec
repnz
pop
and
add
xor
mov
stc
dec
add
xor
mov
sbb
loop
mov
pop
add
sub
mov
inc
xchg
les
rsqrtps
sahf
adc
jae
leave
int
das
push
push
inc
push
mov
pop
inc
mov
mov
mov
rolb
fdivs
jl
and
mov
in
cltd
mov
push
adc
push
std
nop
cmc
nop
aas
addr16
inc
sbb
negl
mov
dec
cmp
jb
pop
and
jge
stos
std
push
fidivs
sar
lret
ss
js
xchg
xchg
sub
cmp
fstp
cmp
xchg
xchg
and
loopnew
popa
test
sub
dec
in
fs
add
jb
sbb
sti
test
insl
outsb
in
fwait
pop
mov
jecxz
nop
scas
or
nop
inc
mov
imul
lea
roll
xor
fwait
arpl
aam
rorl
xor
negb
jp
dec
loopne
fbld
xrelease
mov
jae
adc
test
rcrb
sub
or
mov
imul
jl
and
pusha
pusha
test
adc
and
pop
mov
repnz
sar
pop
pop
or
xor
mov
mov
sahf
xchg
repnz
add
out
mov
scas
ret
lods
stc
xchg
movsb
push
leave
inc
cmp
pop
movsb
or
in
mov
mov
inc
push
ss
test
je
fldcw
and
aaa
cld
xchg
pop
test
movsb
cmp
inc
int
mov
rcr
dec
out
cmp
sbb
aaa
popf
roll
ror
inc
mov
sbb
pop
or
xchg
sbb
pop
and
jg
fmuls
push
pop
in
cltd
push
add
mov
xchg
xor
and
in
sahf
mov
mov
icebp
push
add
mov
dec
daa
addr16
jg
cmpsl
jbe
decb
pop
subb
inc
mov
cli
ljmp
dec
cli
push
or
push
push
and
pop
dec
jae
mov
clc
fcmovb
sbb
mov
mov
popa
mov
imul
pop
pop
jnp
out
enter
scas
mov
cmp
aas
cli
ret
rolb
adc
and
test
mov
int3
adc
aas
and
mov
cmp
pop
add
out
shrb
jmp
pop
sbb
xchg
js
shll
repnz
movl
mov
test
inc
sbb
push
pop
cmp
fsubp
cmpsb
sbb
test
and
outsb
lret
pushf
cli
sbb
add
and
pusha
lea
arpl
dec
lahf
repz
fistpll
ljmp
mov
xchg
mov
jae
gs
test
lcall
fxch
fiaddl
jg
cltd
xor
out
adc
cwtl
or
ficomps
faddl
push
sub
int
xchg
das
mov
stc
icebp
stos
lahf
jge
jbe
orb
push
gs
popa
outsl
pop
bound
rol
jle
movsl
mov
leave
aaa
mov
lds
outsl
mov
sbb
out
push
test
aaa
mov
inc
pop
roll
cld
subb
or
sub
xor
hlt
test
mov
adc
xchg
fidivl
inc
xor
cld
push
shrl
sahf
add
divl
and
ljmp
and
or
xor
arpl
sub
in
lods
dec
fchs
push
and
mov
int3
cmp
cmp
fsubrl
cmp
outsl
jb
aas
imul
adc
ljmp
test
push
adc
mov
or
cmp
mov
fcoml
repz
xor
pop
pop
mov
rorl
xchg
mov
jnp
sbb
xor
lret
pop
jl
jecxz
mov
pop
push
dec
adc
mov
dec
dec
add
sub
imul
nop
add
dec
mov
pop
test
pop
icebp
scas
add
cmp
push
mov
in
or
and
jecxz
addr16
mov
ss
aad
into
dec
rclb
outsb
cmc
mov
push
sbb
scas
out
int3
cmpl
jae
cli
add
cmc
stos
stos
fmuls
xchg
pop
out
nop
repnz
mov
pop
shll
mov
fists
or
mov
daa
and
pop
leave
sub
icebp
aaa
std
sub
mulb
aad
or
jmp
adc
out
lods
test
push
push
inc
push
inc
cltd
subl
push
das
mov
xor
xchg
dec
push
inc
pop
adc
in
sub
jno
into
test
outsb
popf
cmc
clc
push
push
arpl
xor
iret
jbe
stos
sub
popf
cmp
add
push
mov
pop
inc
pop
inc
and
xor
sarb
mov
adc
and
sbb
pushf
shrl
arpl
dec
inc
push
and
xchg
rol
fisubrl
outsb
push
je
sbb
push
stos
sbb
out
jb
andb
inc
popa
mov
shlb
ret
stc
mov
jnp
xchg
adc
aaa
outsb
fs
sub
leave
xchg
fidivs
xor
add
hlt
pop
or
test
jne
pop
xor
xchg
xchg
sub
cmpsl
arpl
gs
push
jae
pop
subl
jbe
jbe
xchg
dec
mov
add
or
cmpsl
pop
xchg
fsubl
enter
add
push
std
pop
dec
fadds
ret
gs
cmc
inc
dec
outsl
stos
cmp
jg
out
nop
adc
mov
cmp
rol
and
lods
cmc
inc
test
jl
adc
mov
push
movsl
lds
inc
test
pop
inc
sub
lahf
out
mov
xor
push
leave
bound
adc
sub
cmp
mov
cmp
cmp
dec
cmpsl
lock
jl
push
mov
filds
jae
movsl
mov
push
push
imul
fdecstp
lods
daa
dec
jp
incl
xchg
mov
sti
pop
jl
jg
lahf
fwait
je
mov
xchg
inc
adcl
repz
call
stc
testl
and
xor
add
int
insb
and
shrb
xchg
shr
rcr
les
xlat
mov
dec
add
lret
jno
inc
lods
and
mov
std
sub
mov
std
push
loopne
dec
xor
pushl
jmp
mov
xor
das
in
sub
dec
dec
sub
shrl
and
xchg
xchg
mov
sub
jge
fidivl
sub
out
fs
fcmovne
shll
les
xchg
mov
hlt
mov
pushf
push
or
fdivrl
jmp
imul
adc
ret
push
xchg
lods
inc
mov
lret
push
xor
mov
nop
push
push
sbb
enter
add
cs
stc
jne
xchg
bnd
sub
push
dec
inc
jns
push
mov
outsl
jge
clc
pop
ficomps
push
xor
mov
mov
mov
cmc
shlb
inc
filds
push
in
sbb
call
xor
outsb
adc
stc
mov
cmp
inc
cmp
jg
stos
and
xcrypt-ctr
cmpsl
sahf
or
ret
cmc
adc
jo
es
jae
cmp
and
mov
aas
xor
mov
or
jbe
cli
icebp
sbb
mov
mov
mov
cs
sbb
jge
test
sbb
inc
cmp
fwait
test
dec
mov
js
mov
jne
push
mov
mov
sbb
fldcw
lcall
arpl
push
xchg
fldenv
test
fidivl
push
es
je
cmpsb
popf
dec
fdivrs
push
insb
aam
mov
or
mov
nop
rcr
lret
std
inc
cmp
mov
ret
outsb
lds
fs
ret
cli
test
jl
fsubs
mov
mov
or
pop
mov
mov
mov
sub
ss
stc
insl
push
adc
mov
lds
movsb
imul
lretw
fwait
cld
nop
mov
lret
pop
pop
xor
xorl
es
pusha
add
xchg
inc
loope
test
or
jb
adc
cmp
xchg
test
stos
ss
mov
xchg
adc
jecxz
daa
fucomip
push
xchg
pop
fstps
inc
inc
inc
in
sub
subb
lds
push
push
add
das
test
repnz
add
xchg
mov
add
roll
cs
xchg
mov
add
icebp
fcomi
std
inc
mov
mov
or
sbb
xor
jp
sub
aaa
push
ja,pt
faddl
lea
mov
fs
or
jae
stos
mov
addl
mov
ret
mov
ds
imul
imul
xor
out
addb
je
mov
notl
sub
repnz
jg
xacquire
inc
jge
std
xor
cltd
push
push
add
sbb
dec
adc
enter
es
sbb
sbb
inc
xor
js
mov
cld
fidivs
xchg
leave
clc
clc
movsl
mulb
cwtl
or
jecxz
fwait
jb
call
scas
mov
xchg
movsl
adc
sti
cmc
push
mov
push
sbb
sub
xchg
pop
or
mov
mov
in
outsb
mov
orl
bound
mov
mov
pop
sbbl
dec
sub
roll
out
leave
mov
pop
arpl
scas
scas
adc
call
mov
cs
xchg
shlb
mov
nop
test
mov
iret
adc
mov
jnp
mov
pop
push
fnstcw
iret
push
dec
add
inc
int3
mov
mov
pop
jb
lret
adc
sub
jno
mov
inc
xor
jb
adc
jp
shl
cmpsb
arpl
mov
fs
dec
mov
push
aaa
adc
and
testl
and
daa
pop
push
popa
xorb
roll
gs
jns
sahf
jge
gs
insb
push
out
inc
lods
push
pop
cmp
xchg
add
ficompl
fistpl
or
pop
push
add
sbb
mov
jmp
outsl
stos
jo
push
and
icebp
out
jne
sbb
jb
into
mov
cmpsl
outsl
sbb
lock
lret
clc
hlt
jbe
or
dec
push
outsb
xor
loop
or
jecxz
aas
repnz
mov
dec
fucom
mov
mov
or
lds
sbb
in
or
inc
push
cmp
jge
inc
test
imul
dec
mov
mov
xchg
roll
lcall
jmp
mov
mov
add
dec
and
pop
aam
push
addb
movsl
fsubrs
mov
jle
nop
jle
lar
imul
cwtl
dec
pop
in
lock
push
pop
insb
mov
add
xchg
push
xchg
jnp
maskmovq
iret
arpl
cmpl
jmp
cmpsb
fildll
adc
xor
inc
stos
dec
inc
adc
xor
xor
in
and
pop
lcall
dec
jnp
inc
aad
ds
sbb
addr16
loope
insb
add
nop
fmull
mov
mov
fs
ds
ds
mov
add
arpl
mov
repz
das
push
jns
add
cmpsb
mov
push
aam
xchg
pusha
out
sub
ror
add
add
push
push
sbb
insb
sbb
call
adc
arpl
lock
jecxz
sarb
lods
and
inc
xchg
aad
mov
test
les
mov
fstpt
sbb
or
stos
ja
cmp
imulb
xlat
xor
in
filds
push
pop
sbb
lock
jnp
sub
mov
xchg
enter
dec
aad
xorb
leave
adc
and
das
outsl
pop
pushf
es
mov
add
int3
xor
lahf
dec
push
outsb
dec
jno
mov
push
shll
push
jbe
inc
xor
mov
lahf
test
xchg
es
mov
cltd
jne
push
lret
xchg
stos
sbb
cmp
ja
rcrl
dec
outsl
xchg
repz
mov
aam
lods
dec
clc
sub
test
std
jmp
xor
push
mov
jno
cmp
shrb
out
xor
scas
and
xor
sub
pusha
or
hlt
push
pop
fdivr
push
cmp
mov
pusha
ja
mov
xchg
pop
mov
push
fisubrl
jp
bound
jecxz
scas
pop
aas
and
imul
xor
xor
lcall
rcrl
add
xor
or
insl
mov
cwtl
nop
in
jmp
xchg
xchg
repz
subb
leave
push
jmp
jmp
inc
xchg
mov
and
rorl
mov
inc
xchg
out
ja
pop
js
and
and
rorl
ret
push
rclb
lds
daa
push
stos
pop
repnz
imull
lret
stos
movsl
dec
inc
inc
fbld
insb
jno
test
mov
cmp
and
xchg
jmp
adcl
data16
xchg
or
xor
mov
scas
pop
iret
das
roll
cs
inc
gs
mov
std
mov
shl
mov
test
mov
dec
outsb
sub
cmp
ss
pop
jmp
cltd
lcall
addr16
xor
shlb
mov
adcb
pushf
mov
xchg
movl
inc
cmc
rcrb
stc
add
cmp
inc
sbb
sub
xchg
jno
icebp
jo
lcall
push
rolb
mov
imul
adc
cltd
je
test
mov
mov
push
sbb
push
pushf
mov
arpl
cmp
xchg
cmp
xchg
mov
shrb
cmc
jno
push
xchg
inc
lods
nop
sbb
or
push
cmp
enter
bound
loope
jecxz
sbb
inc
mov
in
andb
jae
sbb
das
cmpsl
notl
rolb
arpl
movsb
lods
pop
adcb
mov
sahf
cmp
out
dec
in
mov
cs
mov
push
cs
pop
mov
fnstsw
popf
cmp
imul
or
adc
aaa
out
dec
pop
mov
cli
adc
mov
jo
jns
daa
fnsave
stc
inc
mov
and
test
je
sbb
stos
imul
and
ret
out
cmp
push
int3
fisttpll
std
cmpsl
andl
dec
jae
movsb
push
sub
inc
aas
xor
add
push
sahf
lods
sub
adc
ds
push
mov
inc
loope
in
jp
subl
ljmp
mov
push
mov
mov
pop
or
pushf
imul
or
ret
int
das
adc
xor
mov
or
jle
iret
popa
test
or
std
pop
push
mov
cmc
cmp
mov
mov
andl
mov
or
shlb
mov
mov
dec
imull
movsl
and
sbb
mov
pop
jecxz
push
sub
dec
sub
xchg
mov
dec
cmc
and
mov
inc
sub
or
sti
dec
ret
push
xor
push
add
jecxz
mov
imul
and
loope
idiv
cld
mov
jg
mov
dec
sbb
push
fdivr
or
mov
insl
and
ja
mov
xchg
int
adc
dec
jl
outsb
jmp
jmp
jg
and
inc
inc
xchg
pop
movsl
inc
lahf
fadds
push
pmullw
mov
jl
shl
rol
mov
mov
or
ja
adc
sbb
sbb
je
and
cmp
or
subb
je
add
pop
je
ret
lahf
cmp
push
scas
push
aad
mov
cmpl
fucomi
push
xor
scas
ret
lods
ror
pushf
test
cmpsl
aas
cmp
out
fdivs
and
es
jns
mov
jg
xlat
das
sbbl
or
jecxz
icebp
mov
cmp
sahf
inc
dec
mov
pop
mov
iret
pop
mov
jmp
adcb
adc
mov
push
cmp
jmp
mov
pusha
sbb
sub
arpl
mov
icebp
xchg
movsl
and
push
xchg
cwtl
mov
repnz
jo
inc
lahf
or
mov
and
jle
in
cmpsb
push
das
test
rorb
jle
out
mov
jge
pusha
faddl
lods
aad
es
xchg
mov
jp
scas
cld
jl
leave
ret
pop
fstps
aam
jg
addr16
push
lahf
data16
mov
pop
mov
lods
leave
mov
lahf
adc
gs
loope
ja
repz
xchg
push
sti
rcl
mov
sbb
not
or
adc
fcomi
and
dec
ja
outsb
iret
bound
pop
test
pop
fcmovbe
pop
rorl
lcall
sub
sub
lds
add
mov
add
mov
dec
push
jge
add
mov
lds
test
sbb
pushf
shrl
jmp
test
jb
push
int
stos
add
mov
mov
inc
cmpsb
rorl
movsl
xlat
out
out
dec
xchg
daa
into
jno
push
dec
or
push
or
push
dec
ds
fisubl
xor
sbb
pushl
popa
jne
fsubrp
sub
cli
jno
in
xchg
mov
movsl
lock
iret
popa
push
xlat
mov
mov
lret
pop
dec
aam
adc
das
lea
shrl
pop
jle
insl
or
push
ret
enter
cmpsb
pop
push
out
mov
arpl
push
popa
and
mov
out
test
jns
cli
pusha
ljmp
jge
push
nop
cs
push
pop
in
movsb
aam
xlat
frstpm(287
add
cmpsb
scas
movsb
mov
cli
fidivrl
pop
ja
jae
sub
sub
hlt
dec
call
in
and
cmp
or
ss
lods
leave
into
pop
dec
cltd
stos
lahf
out
mov
stc
ds
jl
adc
mov
pusha
icebp
adc
filds
and
popf
lds
sub
jno
add
and
adcl
cmp
sbb
cmc
pop
aaa
imul
cmpl
pop
mov
push
leave
fwait
sub
mov
dec
movsl
mov
in
xchg
movsb
xchg
mov
sbb
stc
cwtl
pop
and
test
test
sub
rcl
faddl
or
sbb
repnz
xchg
jmp
pop
gs
out
adc
jg
sub
mov
das
stc
lcall
cmc
xchg
and
jmp
mov
inc
sub
mov
sbb
jmp
lock
inc
adc
xchg
add
pop
psadbw
push
mov
vdivss
jge
out
lahf
cmp
jl
xchg
jnp
jo
xchg
out
xchg
in
cmpb
lret
push
jae
xor
mov
sbbb
sbb
rcl
fwait
inc
out
loope
mov
adc
movsb
xchg
mov
mov
in
pop
jl
pop
les
mov
jae
adc
pop
or
cmp
xchg
cmp
or
fiadds
adc
call
push
cmp
sbb
jge
jns
inc
cld
popf
xlat
and
xchg
dec
out
mov
pop
mov
mov
jne
and
test
scas
cwtl
xlat
xchg
sbb
add
subb
mov
jo
pop
or
aad
aad
jecxz
xchg
outsb
inc
xchg
sbb
jnp
inc
cmc
dec
push
mov
mov
mov
frstor
mov
mov
cmp
jp
enter
pop
out
pop
push
stos
test
mov
ja
adc
jge
shll
or
jne
push
int3
or
adc
pusha
mov
rcll
mov
jne
lcall
xor
and
fs
es
mov
xor
push
in
pop
sbb
pop
mov
call
pop
and
push
jo
inc
lods
mov
ret
insl
mov
xchg
and
scas
je
shll
jl
lods
sahf
mov
call
movsb
adc
jmp
push
repnz
adc
pusha
imul
inc
xchg
movsl
push
ja
stos
and
shll
and
pop
test
dec
jmp
mov
adc
shll
mov
jecxz
add
push
movsl
jae
add
lret
sub
std
adc
xlat
insb
imull
lret
dec
push
jne
xor
in
xchg
cmp
and
cli
adcb
sbb
push
or
imul
add
fwait
movsb
loope
fdivl
int3
inc
xor
sub
pushf
shll
jne
mov
mov
xor
xor
jg
test
inc
push
test
dec
push
arpl
fcomps
mov
push
test
in
cs
adc
pop
aam
pop
mov
jno
pop
mov
push
out
push
fwait
scas
and
aad
ds
xor
cmpsl
sarl
fmulp
lds
xor
push
mov
je
mov
comiss
lret
jg
rorl
pop
ljmp
dec
or
cmpsl
hlt
xor
into
insl
push
lods
mov
dec
fs
imul
shll
ljmp
leave
xchg
call
push
mov
shlb
ja
inc
jne
int
adc
sub
xchg
mov
adc
inc
jns
pusha
cmp
xchg
mov
push
jge
imulb
aas
jo
pop
ds
mov
aas
nop
leave
mov
mov
lea
daa
arpl
xchg
inc
dec
push
jge
sbb
cmp
ljmp
test
push
imul
add
loop
and
shrb
xchg
sbb
aas
pop
mov
add
or
mov
mov
sub
testb
inc
inc
insl
insb
shrl
bound
pop
push
icebp
ret
push
js
push
inc
fwait
fwait
jns
push
cld
aas
test
xchg
cmp
cli
mul
xchg
inc
add
mov
loopne
mov
jge
jl
mov
les
outsl
test
ficoms
mov
cld
iret
or
pushf
inc
push
gs
pop
sbb
rolb
je
mov
jle
add
inc
lock
mov
add
cli
sub
pop
sbb
es
insb
mov
leave
das
stc
mov
add
mov
dec
aaa
inc
sbbl
loopne
mov
push
mov
xchg
movsb
fdivrl
pop
fldt
dec
hlt
jle
pop
data16
cltd
call
jle
dec
sbb
xchg
sub
or
pop
or
out
cmp
test
movd
mov
cmp
cmp
xor
mov
sub
jns
mov
jae
ljmp
mov
cmp
movsb
add
jbe
es
pop
sub
iret
stos
es
fiaddl
lods
jne
push
movsb
mov
push
test
in
into
xor
int
cltd
sti
sti
out
push
ret
add
cs
pop
ret
inc
fnsave
push
inc
xchg
mov
cmp
push
mov
rcrl
mov
fucomip
jl
sbb
ficompl
stos
xor
or
outsb
jno
mov
mov
repz
je
mov
or
aas
xchg
inc
push
mov
add
addr16
push
dec
xchg
mov
push
sub
out
mov
fcoms
dec
mov
in
gs
jmp
cmpsl
loopne
repz
sarb
jmp
ficomps
dec
sub
inc
stc
test
pop
or
mov
inc
sbb
nop
out
sbb
mov
mov
push
cmpsl
sarb
bound
je
push
sub
dec
pushl
scas
xor
insb
pop
insb
add
push
inc
sbb
out
test
sbb
xchg
push
or
bound
ret
dec
or
adc
or
imulb
push
or
jnp
jmp
movsb
inc
notb
loopne
sbb
imul
data16
std
jbe
daa
in
sbb
dec
sub
jl
sub
rorl
fwait
adc
xor
sbbl
outsb
mov
in
cmpsl
je
sub
cmc
ljmp
jp
fsubrs
add
mov
cmpsl
nop
jp
and
imul
pop
int3
mov
arpl
std
mov
inc
stos
xchg
es
stos
fistl
outsl
fadds
push
in
cld
cmp
mov
leave
lcall
mov
sahf
scas
arpl
gs
lahf
add
mov
mov
jmp
sbb
movsl
popa
sbb
mov
adc
sbb
add
mov
js
and
dec
or
push
dec
popf
jp
daa
sub
cmp
fildll
pop
aaa
mov
xchg
cmpl
loope
gs
or
xchg
or
adc
mov
jo
jo
push
loop
and
push
in
les
clc
cmc
jmp
or
dec
jno
cmc
das
je
xor
leave
sub
push
stc
jecxz
push
mov
call
lret
popf
cli
ret
or
ljmp
inc
jge
add
sub
xor
dec
cwtl
fwait
push
popa
cmp
inc
mov
loope
inc
dec
push
inc
ret
loop
dec
and
pause
pop
ret
aad
jecxz
or
aaa
cmp
lcall
je
mov
jl
cmp
data16
push
push
repz
test
push
andb
sbb
imul
nop
dec
jnp
in
pop
xchg
outsl
xchg
stos
jle
fisttps
cmp
cmp
pop
pop
leave
add
dec
dec
mov
shll
dec
jne
add
cld
cli
add
lods
push
jp
xchg
cmp
inc
inc
mov
adc
dec
xor
test
jmp
hlt
rorb
adc
ds
repz
repz
hlt
cmpsb
add
pop
or
xor
add
rcrl
or
xorl
lods
scas
out
jmp
aas
stos
sti
add
popf
dec
push
jecxz
orl
push
sbb
or
inc
shll
jb
cltd
push
mov
cld
loopne
xchg
and
push
xadd
int3
mov
push
xorb
xlat
and
shrl
or
and
dec
cli
add
sub
stos
cwtl
ljmp
xor
xor
into
out
inc
icebp
out
test
or
mov
in
pop
xchg
xchg
ljmp
cmpsb
cmp
loop
jns
mov
add
push
adc
iret
jle
popf
je
dec
push
mov
test
divb
aam
cwtl
enter
out
int
test
sub
mov
leave
ret
mov
xor
pop
lods
cmp
pop
out
outsb
xchg
out
outsb
bound
int3
call
push
pop
jb
xchg
mov
mov
xchg
shll
orl
push
sub
ficompl
mov
addr16
lret
push
ficompl
sub
mov
sti
lret
mov
mull
jl
mov
std
test
xor
jb
adc
mov
aas
stos
mov
mov
inc
jle
dec
jecxz
cs
mov
popa
addr16
arpl
xor
xchg
jmp
idivb
sub
ret
mov
lret
push
jp
rolb
add
push
jne
add
and
mov
jmp
dec
xorl
cld
sbb
xchg
fcoms
cld
inc
inc
enter
scas
pop
and
test
mov
shll
loop
or
aaa
loope
fcoml
ljmp
sti
adc
and
cmpsl
cmc
xchg
push
scas
shr
aam
xchg
addr16
daa
mov
add
fstps
movsb
ret
sbb
mov
fcoml
pop
test
mov
mov
movsl
lahf
lahf
out
insb
jecxz
rorl
je
mov
push
cmc
mov
xchg
fsubrs
jmp
sbb
test
cmpsl
jns
mov
mov
in
fsubr
sbb
jae
adc
jne
in
xchg
lea
shlb
xor
int
or
mov
cld
jb
inc
or
sub
lahf
fcoml
lea
and
dec
in
xchg
push
add
shl
lcall
nop
cs
movsl
mov
dec
loope
jno
mov
ss
ja
iret
pop
push
out
aam
adc
cmp
aas
push
sahf
aas
mov
mov
inc
push
insb
je
mov
xchg
ljmp
js
out
sub
adc
icebp
sub
inc
jge
add
xchg
mov
sti
dec
repnz
dec
mov
sbb
in
fisubrs
jb
inc
andb
mov
nop
test
test
rclb
testb
cwtl
mov
inc
es
lret
pop
sbb
add
mov
and
js
push
cmp
pop
sub
nop
mov
loope
bound
xor
pop
lea
pusha
lcall
mov
dec
in
mulb
cmp
inc
shlb
mov
sub
dec
cld
pusha
lods
loopne
and
add
mov
xor
addr16
push
stc
iret
mov
pop
lods
je
ret
in
push
xchg
stos
cmp
pop
adc
testb
cli
mov
pop
call
cli
dec
clc
mov
sbb
pop
cmp
xchg
orb
jecxz
ja
push
rclb
daa
pop
pushf
test
lods
test
or
push
in
xorb
mov
sbb
out
mov
test
and
lods
stos
jbe
insb
and
adc
dec
add
insl
movsb
xlat
pop
fstpl
test
sbb
mov
mov
cli
and
add
stos
fwait
xor
cmp
xchg
mov
lcall
ret
dec
push
test
or
cmp
xchg
sub
or
into
shrb
pop
pop
jo
daa
stos
rorl
lods
pop
in
mov
jg
pop
inc
sbb
jl
pop
inc
lahf
jecxz
outsw
pop
sub
call
add
pop
inc
add
cltd
lret
mov
andl
jnp
xchg
xor
add
out
jmp
cmp
mov
push
sub
arpl
aas
pop
adc
jmp
mov
adcb
mov
les
mov
pop
pop
adc
popf
pusha
ja
daa
cmp
pop
popa
add
xchg
fsubl
pop
scas
roll
pop
mov
add
jg
jnp
mov
testl
mov
xchg
adc
int
mov
je
aam
lret
mov
int
push
adcl
cmc
mov
fiadds
repnz
sub
add
incl
sti
push
dec
pop
pop
cmp
flds
outsb
push
jl
sub
push
mov
and
shll
adc
stos
int3
xor
or
outsb
push
push
sbb
insb
divl
pop
loope
and
jbe
aaa
aam
or
mov
mov
hlt
dec
test
insl
sbb
loope
lcall
orb
push
movsl
pop
aaa
addr16
icebp
data16
cmp
data16
mov
fnsave
pop
out
out
mov
in
rorl
ss
inc
mov
bnd
mov
sbb
and
pop
jne
lcall
mov
xlat
mov
sbb
mov
xchg
inc
ja
adc
cmp
sub
in
pop
ret
xor
dec
hlt
outsl
mov
cltd
cltd
jmp
mov
dec
mov
add
cmp
fwait
scas
out
inc
in
pop
jnp
xor
je
sub
xchg
inc
mov
icebp
mov
jg
jae
mov
sarl
into
push
dec
out
imulb
push
clc
imul
lcall
divb
or
outsl
pushf
cli
stos
xchg
icebp
or
jne
sub
fistl
stos
shll
mov
xchg
fwait
and
xchg
shrl
test
fidivrl
mov
or
pop
add
lock
test
add
push
jecxz
inc
out
cmp
jl
jo
sub
icebp
icebp
add
add
sbb
push
popf
add
and
lock
fs
pop
xchg
pop
and
mov
ss
pusha
dec
lds
add
nop
xor
cmpsb
test
shrl
pop
mov
push
cmp
lahf
daa
xlat
or
push
sub
iret
adc
movsb
outsb
clts
in
pop
ficomps
xchg
and
ja
outsl
subl
scas
xchg
jmp
scas
pusha
fimull
movsl
mov
sbb
push
incl
in
ret
sub
mov
imul
mov
cmpsl
mov
jae
dec
call
add
lock
push
jno
frstor
test
pop
nop
popa
or
mov
pop
xor
test
fdivr
fadds
cli
bound
pop
cs
stos
es
xor
lret
mov
inc
lds
push
mov
das
push
aad
scas
idivl
std
xchg
sub
and
jle
out
lods
xor
add
test
mov
popa
mov
lahf
lcall
lods
repz
sbb
lret
int3
inc
and
je
inc
push
add
std
repz
push
jno
lods
mov
sub
repnz
cli
dec
iret
mov
les
fwait
nop
push
sub
xchg
or
stos
setle
aas
sbb
ss
fwait
mov
mov
popf
mov
cmp
mov
push
push
fadd
cmp
pop
stos
outsl
outsl
push
jb
outsb
xchg
in
and
fldl
jns
adc
hlt
or
outsb
dec
mov
mov
pop
fcoms
lret
stos
xor
loopne
add
lret
mov
popf
jbe
mov
push
test
jg
cli
add
fldcw
push
inc
repnz
repz
ds
mov
fdivrl
cmp
aaa
and
jb
repz
lret
ret
out
rcl
inc
xor
xchg
sub
pop
nop
adc
rcll
jno
rclb
jle
push
ds
sbb
or
out
aam
fdivrs
pop
inc
roll
push
push
mov
dec
pop
and
lcall
cmp
repz
mov
jns
or
push
jns
enter
mov
xchg
jl
lret
add
xchg
push
fdivs
add
aad
sbb
sub
pop
fisubrl
fildll
pop
cmp
jecxz
je
push
clc
lods
scas
dec
cmpsl
loope
adc
nop
cs
inc
insl
pop
fwait
lahf
xchg
fsubrs
add
mov
adc
stc
je
cli
std
rorb
sbb
scas
add
out
inc
in
out
push
pop
mov
cltd
jnp
rolb
mov
xchg
xchg
xor
add
lcall
test
movl
das
pop
test
jmp
or
out
adc
fwait
pusha
and
iret
xor
xor
xor
iret
jg
mov
xchg
push
ja
stc
adcb
mov
shlb
fdivp
cs
inc
mov
mov
cltd
or
xchg
jl
or
xlat
mov
push
lds
dec
mov
cli
fiaddl
dec
test
sbb
or
ss
icebp
dec
popf
shll
inc
pop
imul
add
test
mov
mov
aaa
sub
scas
test
movsl
test
or
push
mov
iret
mov
mov
adc
push
loop
xor
in
mov
adc
flds
leave
fcompl
aad
fistpll
mov
mov
and
loopne
ja
add
lahf
add
xchg
mov
mov
imul
pop
adc
xor
dec
push
aaa
sti
ljmp
daa
inc
xor
mov
xor
ret
cmp
sahf
test
sbb
xchg
sub
mov
dec
xchg
test
jns
fwait
aad
aaa
jne
ret
push
inc
int3
stos
into
mov
and
mov
mov
clc
pop
sbb
mov
pop
pop
cmp
jmp
aaa
push
jl
test
icebp
aad
and
adc
into
movsb
loope
adc
bound
int
cs
push
inc
mov
sub
add
xor
jb
andl
scas
sbb
lea
rcll
leave
rol
push
and
xchg
adc
add
push
loope
sbb
push
idivl
pop
mov
rolb
dec
inc
cs
sbb
incb
dec
pushf
cltd
jl
xor
xchg
jge
add
cwtl
sbb
test
jbe
jecxz
cwtl
push
lcall
mov
popa
aam
call
int3
jbe
hlt
in
ret
mov
std
adc
or
fidivl
jecxz
push
out
test
arpl
cli
and
mov
sub
out
jmp
pop
sub
pop
mov
mov
pop
loope
push
mov
jbe
jb
cmp
dec
stos
inc
mov
push
movsb
dec
mov
mov
imul
mov
je
dec
in
test
push
shrl
test
xor
in
push
cmpsb
scas
popa
cltd
int3
mov
mov
int3
mov
or
nop
dec
clc
or
aas
insb
add
arpl
mov
daa
movsl
xchg
push
mov
pop
aam
sub
hlt
xchg
pusha
mov
push
sbb
sahf
push
push
mov
cwtl
and
push
xchg
jge
sbb
loopne
je
test
cmp
mov
xchg
mov
lds
dec
leave
jno
ds
push
sub
sbb
movsb
add
mov
std
push
dec
rorl
ja
mov
pushf
jmp
out
iret
je
lret
push
setp
sbb
and
lea
divb
adc
lahf
dec
jge
fbld
or
orb
iret
daa
rorb
bound
jecxz
inc
enter
xor
icebp
mov
sub
add
je
stos
bound
shlb
outsb
mov
jg
add
ret
push
adc
push
inc
xor
arpl
mull
in
scas
inc
or
pusha
or
negb
cmp
sbbb
enter
xor
ss
fdivrs
sub
pop
dec
fcompl
mov
stos
rcl
or
es
out
clc
and
ret
dec
adc
ja
xchg
inc
and
cmp
jp
sbb
cmp
stos
add
stos
out
cmpsb
jo
imul
push
leave
gs
adcl
ljmp
xchg
lahf
push
notl
sti
popl
jnp
imul
test
fiaddl
jle
and
scas
cmp
js
std
mov
jl
mov
out
das
inc
testb
out
shl
shrb
pop
mov
mov
xor
jnp
test
dec
fidivrs
xor
jmp
adc
jecxz
adc
js
cmp
jge
jle
dec
cmpsl
ss
pop
or
insl
fsub
inc
add
das
push
lahf
out
outsl
mov
test
fisttps
stos
jnp
stc
mov
roll
arpl
add
imulb
cs
cmpsb
mov
dec
lods
pop
cmc
pop
jge
xchg
or
sahf
nop
movsl
pop
mov
jp
pop
je
outsb
outsl
int3
and
sub
push
icebp
enter
negb
push
in
add
xorl
and
dec
sub
inc
mov
cmp
or
lods
faddl
stos
sbb
add
jne
das
lahf
sbbb
push
repz
out
jnp
mov
fsubl
pushf
sahf
test
mov
fcomps
dec
lock
mov
fwait
mov
jl
mov
fstpt
xchg
push
mov
ds
or
call
cmp
jno
add
aad
lods
push
mov
mov
mov
jg
jae
xchg
aas
arpl
pop
cmpsb
mov
mov
test
xchg
and
dec
loop
mov
test
add
arpl
int3
push
icebp
lcall
inc
or
insb
fildl
ljmp
mov
or
cmpsb
lret
mov
push
sarl
dec
push
mov
addr16
jge
inc
loop
loop
cs
mov
sbb
aam
jge
cli
je
popa
stos
push
jg
push
pop
clc
xor
loope
inc
pop
rol
sbb
xor
mov
hlt
add
add
jno
test
loope
push
js
lret
das
add
test
pop
std
shll
dec
pop
shl
ss
xor
rclb
sub
int
mov
std
xor
xor
addb
cmp
movsl
fisubrs
and
enter
mov
or
push
out
sub
xor
pop
lcall
mov
fs
stos
aas
push
jle
push
mov
aas
les
cmpb
scas
or
jo
and
adc
xchg
outsb
jmp
fwait
and
push
cltd
jb
insl
sbb
and
jo
cmp
jb
xor
gs
sbb
xchg
or
outsb
ss
fs
xlat
lds
sub
sti
pusha
fdivr
xchg
mov
push
xchg
bound
mov
inc
fucom
fsubs
loop
jno
loope
and
cmp
mov
mov
gs
sbb
movsb
sbb
subl
xor
cmpsl
fsubrs
orl
inc
xchg
mov
out
out
mov
out
inc
mov
jae
hlt
mov
test
jno
fwait
pop
rcl
dec
popf
aaa
mov
push
inc
or
inc
scas
dec
adc
dec
iret
mov
add
pop
add
clc
into
sub
inc
jmp
push
in
mov
add
and
nop
inc
ja
sbbb
xor
pop
mov
xchg
ja
push
idivb
and
adc
mov
inc
inc
fiaddl
cwtl
cmp
mov
jno
and
sbb
int3
stos
lods
or
or
push
inc
pushf
adc
jle
xor
mov
out
stc
hlt
mov
lahf
sub
fwait
push
xchg
lods
mov
adc
in
mov
cmpsl
sbbl
dec
cmpsl
mov
xchg
jge
sub
sbb
sub
push
lret
cmp
and
aam
xor
inc
dec
inc
lods
enter
movsl
pop
xchg
jno
inc
pop
arpl
or
cltd
mulb
adcb
push
gs
nop
clc
inc
xor
in
xor
push
mov
push
xchg
sub
cwtl
fsubrl
jnp
test
or
fidivrs
scas
mov
lds
stc
clc
lds
and
push
push
imul
mul
cmp
mov
jg
cs
xchg
push
jno
psrlw
mov
mov
scas
in
and
into
or
repz
mov
cwtl
ror
out
push
in
adc
inc
and
pop
adc
lret
mov
cmp
mov
jmp
add
jge
iret
mov
addr16
testb
sub
dec
je
test
lods
cmp
ret
scas
test
xchg
sub
cmpsl
push
cmp
cld
mov
jno
inc
sbb
sarl
cltd
or
sub
xor
cmp
addl
addb
movsl
xor
arpl
jo
xchg
or
sahf
push
push
sub
inc
iret
jmp
mov
pop
pop
out
mov
xor
adc
sbb
mov
movsl
cmp
or
adc
pop
jge
dec
add
push
mov
and
cmc
aaa
push
jecxz
test
xor
sub
mov
imul
shr
stos
jge
and
fidivs
aam
sub
sbb
adc
outsl
lcall
mov
daa
bound
lahf
inc
mov
mov
mul
and
cmp
out
fs
addr16
xchg
cld
icebp
out
xlat
lds
jge
pop
dec
cmpsb
aam
jg
jb
adc
enter
add
xor
not
fdivrl
hlt
out
je
xlat
outsb
or
pmaxsw
movsl
jae
and
sarb
pop
mov
mov
fcmovnbe
pop
std
push
lahf
adc
data16
je
test
adc
sbb
xchg
push
push
gs
mov
sub
or
loop
xchg
outsl
mov
fucom
stc
cmpsl
jo
cmpsb
dec
or
fbld
add
pushf
pop
dec
loop
or
sub
jns
lcall
push
push
push
xchg
jb
out
cmp
dec
test
fistpl
ja
stc
mov
push
sahf
fwait
loopne
rcrl
adc
pop
movl
push
inc
mov
lcall
xlat
push
push
movzbl
sbb
xorb
fwait
xchg
out
push
rorb
mov
stc
fwait
mov
cmp
lret
jecxz
fwait
push
fdivs
lret
frndint
pop
stc
mov
cmp
shll
push
ss
fistpll
jp
xor
dec
pop
pusha
jl
cmp
jmp
int
jp
fstps
sbb
jmp
adc
push
xchg
cmp
xchg
cmpsb
xchg
xorb
mov
iret
dec
sbb
nop
shrl
sbb
mov
xor
mov
pop
aaa
sahf
pushf
stos
pop
xchg
pop
lret
or
inc
push
pusha
cmpsb
cs
std
xlat
enter
mov
shr
adc
mov
dec
pop
mov
arpl
mov
into
pop
adc
test
or
enter
sub
ljmp
je
xor
fwait
popf
pop
ss
cmpsb
pushf
add
push
out
push
arpl
lret
xor
sahf
cmc
xchg
bnd
in
cmp
sarb
mov
pop
not
push
sbb
addl
fisubrs
movsl
ds
mov
fwait
test
jbe
jp
push
sbb
lds
movsb
adc
cmp
cmp
aad
daa
inc
insb
cld
push
bound
pushf
stos
aad
movsb
shll
aam
mov
lahf
xchg
cmp
mov
xor
sub
int
imul
jmp
cld
insl
dec
jbe
cmpsl
cmp
sbb
push
int
loop
hlt
xchg
js
mov
cs
out
mov
push
jb
pop
mov
ret
in
jle
cmp
mov
mov
jb
fadd
pop
jae
pop
mov
enter
stos
mov
dec
push
popa
inc
movsl
insb
pop
or
xor
or
push
ret
popa
popf
dec
in
rcll
add
mov
and
sbb
lahf
cmp
pushf
push
mov
jb
in
cmp
add
ficompl
sbb
xor
in
aas
mov
dec
pop
roll
stos
mov
push
mov
jnp
aad
dec
or
push
cmp
jp
jne
ficoms
xor
xchg
mov
or
mov
push
push
fs
xchg
push
xchg
popf
loopne
test
or
cld
xchg
mov
jl
xor
loope
cld
adc
enter
mov
jp
or
daa
lds
xchg
sub
mov
inc
fadds
outsl
mov
gs
cwtl
cmp
cmpsl
jmp
xchg
push
imul
inc
loopne
enter
xchg
push
add
cmp
ljmp
push
push
xchg
ljmp
ja
sahf
xor
jno
jne
cmpsb
xchg
push
int
jo
and
clc
mov
jmp
sbb
shrl
into
cwtl
popa
in
sbbl
or
inc
ret
sti
push
test
xchg
out
mov
jns
imul
fcmovnb
es
sub
jne
orl
stc
mov
inc
push
adc
pop
cmp
pop
sbb
inc
and
xor
push
bound
sub
outsb
cmp
mov
outsb
pop
pop
cmp
pop
lock
std
leave
movsl
mov
xchg
test
dec
cmp
xchg
dec
outsb
cmp
sbb
sub
push
adc
test
aam
bound
ret
fldcw
and
push
adc
ret
insl
aam
xchg
shlb
fldln2
mov
inc
mov
pushf
adc
cmc
xor
and
mov
add
inc
outsb
cld
inc
popa
leave
jbe
jbe
cmp
sbb
test
sub
loope
xchg
xchg
clc
jmp
call
dec
movzbl
mov
pop
addr16
add
mov
sti
push
or
xor
xlat
popa
xor
shrb
cwtl
mov
test
jne
jge
pop
push
pop
sbb
push
nop
lcall
mov
lahf
les
sub
sub
in
leave
repnz
inc
leave
sub
mov
push
add
mov
in
cwtl
fisttpl
mov
or
ffree
mov
test
mov
popf
or
arpl
inc
xchg
dec
adc
aas
sub
jae,pt
cmp
adc
aam
fimull
pop
loopne
orb
push
dec
sti
dec
sahf
sbb
mov
stos
mov
leave
stos
xor
dec
push
and
aaa
ljmp
or
mov
rcrl
ss
shlb
mov
cld
mov
xchg
lret
ljmp
mov
mov
add
cmpsl
push
mov
in
cmp
add
cltd
sbb
aad
push
jp
jp
sbb
lock
stos
imul
cmp
hlt
sbb
movsl
jl
repnz
test
cld
repnz
in
lcall
xchg
mov
out
sub
pop
fwait
jo
fsts
aam
faddp
aad
push
les
clc
dec
inc
jmp
jecxz
push
inc
mov
imul
adc
leave
add
xor
inc
sbb
mov
dec
jge
movsb
inc
or
xchg
in
gs
and
outsl
mov
pop
es
repnz
ficomps
push
divb
jle
jl
mov
mov
mov
xchg
lods
fstl
adc
adc
outsb
lods
dec
xor
enter
fnstcw
ret
cmp
sub
mov
add
int3
and
mov
jo
scas
pop
cs
in
bnd
jmp
or
mov
lods
fnsave
dec
data16
les
sbb
enter
call
fdivrp
stc
jp
pop
dec
and
js
nop
add
xchg
lods
and
sub
xchg
lret
bound
xchg
inc
gs
cs
sbb
pop
cwtl
mov
push
xor
jl
imul
mov
fisttps
sub
scas
mov
sbb
push
sub
cmp
aam
mov
lds
scas
pop
cmp
fcoml
lret
rorb
jnp
insb
mov
test
insl
flds
add
mov
int3
add
xchg
iret
insb
cmp
ja
in
imul
addr16
sbb
add
mov
push
adc
sbbl
cmpsl
push
cli
in
inc
lret
movsb
fwait
mov
faddl
and
int
sbb
push
test
mov
push
dec
cmp
stos
xchg
addr16
or
gs
and
mov
movsl
int3
pushf
mov
popf
cmp
fs
pop
xchg
aad
in
stos
and
push
rcl
sbb
xor
imul
xchg
xchg
mov
xchg
mov
fs
shlb
clc
outsl
and
ds
iret
or
jecxz
push
ret
fnsave
adc
rcrb
cmpsb
sbb
jne
into
push
ret
negl
sahf
lods
and
notb
inc
xchg
sub
xor
lds
loopne
test
cmp
lea
mov
loope
push
and
lret
and
mov
add
pop
push
mov
mov
inc
cmp
pusha
mov
cmpsl
sub
fld1
pop
stos
xor
push
icebp
lea
dec
mov
shrl
adc
push
imulb
lret
push
adc
jg
fisttpll
cmc
jae
and
sbb
repnz
lods
es
or
mov
push
jle
test
aas
outsb
out
push
mov
mov
cs
mov
sti
xchg
loop
dec
mov
cmpsl
dec
mov
dec
sub
orb
mov
pushl
mov
test
insb
jne
addw
jg
icebp
fldl2t
mov
pushf
repnz
xor
jne
cmp
cmp
in
add
mov
xor
adcb
cltd
dec
dec
add
popf
sbb
data16
movsb
scas
xor
mov
sbb
lahf
mov
mov
jno
dec
popf
sub
iret
cmp
cmp
jbe
sub
int3
outsl
imul
mov
stc
mov
adc
in
imul
shrl
iret
push
mov
jae
xchg
push
push
mov
mov
data16
xor
mov
add
mov
in
and
add
arpl
int
xor
jnp
sarl
jnp
into
ja
inc
repz
mov
xchg
lahf
sbb
sbb
inc
adc
dec
lcall
sub
or
in
mov
cs
stos
scas
push
mov
das
movsl
addr16
cltd
lods
cmpsl
fsubl
sbb
test
xchg
je
jnp
and
in
fcomp
pop
out
stos
pop
jnp
int
into
call
adc
adc
sbb
adc
syscall
shrb
arpl
cli
push
test
add
push
les
std
jbe
mov
cmpsb
sub
mov
es
lock
xor
ljmp
push
dec
imul
adc
add
mull
shll
adc
xor
jp
or
fwait
or
mov
pop
fiadds
add
clc
imull
sbb
aam
in
pop
mov
jle
push
sub
pop
lea
outsl
jbe
mov
mov
adc
cwtl
stos
inc
jge
ljmp
cmp
and
push
mov
push
test
lods
cmc
outsl
pop
jecxz
fwait
leave
loopne
insl
aaa
pop
sub
mov
jge
xor
into
les
pop
inc
fidivl
es
movsl
hlt
test
in
in
lcall
pop
and
lea
mov
clc
xchg
mov
mov
mulb
lds
rorl
cmpsb
xchg
fisubrl
and
cmpsl
sarb
out
jp
in
mov
pusha
stc
jno
push
inc
int
sbb
xlat
add
mov
into
add
hlt
roll
and
or
xor
and
mov
mov
ds
dec
leave
add
mov
mov
dec
shrb
and
mov
int3
and
lock
je
ss
sub
dec
dec
movb
inc
fdivl
test
sbbl
std
mov
fs
in
push
aas
icebp
out
mov
scas
xchg
jle
shlb
push
loopne
mov
cmovne
adc
sahf
sub
push
xchg
ja
mov
stos
mov
paddb
add
cmp
sbb
add
cld
mov
jno
bound
jae
rcrl
outsb
sub
jmp
push
rorl
cwtl
fs
ret
xchg
mov
or
addb
cltd
add
icebp
and
pop
jae
pop
pop
ja
int3
pop
mov
orl
outsb
out
adcl
pusha
mov
adc
add
mov
dec
cmp
and
mov
add
int3
adc
mov
sbb
test
iret
aas
repnz
jo
jns
or
ss
add
pop
sti
dec
repz
loopne
fisttpll
inc
dec
dec
mov
decb
loope,pn
mov
or
pop
sahf
dec
enter
push
push
ficoms
aas
dec
orl
mov
sbb
push
mov
jmp
sub
push
clc
ja
int3
xor
xor
lock
jo
jnp
fwait
lcall
add
push
imul
pop
sub
mov
push
lea
sbb
cmp
ljmp
pop
cltd
and
testb
addr16
stos
or
je
rol
nop
bound
test
lea
xchg
xchg
push
hlt
outsb
adc
aad
xor
inc
movsl
xchg
add
inc
add
rol
dec
cld
mov
frstor
xchg
dec
xor
or
jo
xor
aam
adc
pop
cmp
jmp
jge
sbb
xlat
frstor
fisubrl
push
pop
call
je
xchg
sbb
push
daa
subb
cmpsb
and
insb
pop
in
insb
mov
loopne
jmp
js
ss
int
add
or
jb
in
push
test
push
jg
mov
daa
or
shlb
lock
xor
mov
push
jno
push
js
mov
jns
jb
mov
data16
insb
push
mov
lret
xor
cwtl
sbb
testl
stc
out
ja
cmp
outsl
mov
ljmp
or
and
xchg
push
loopne
clc
adc
xor
test
xor
xchg
or
push
pop
rcl
pop
lock
mov
add
shlb
xchg
inc
and
jnp
popf
push
cmpsb
pop
data16
fsubrp
jno
aas
es
jno
mov
aad
add
sbb
ret
pop
enter
rorb
and
test
xchg
add
xor
mov
adcl
inc
and
fcmovnb
pop
cmp
cmc
shlb
push
call
xchg
xor
test
dec
lcall
arpl
inc
jae
mov
sarl
dec
xchg
push
enter
ljmp
push
pop
int3
xor
scas
lods
stos
lock
adc
test
mov
stos
sub
xchg
cwtl
in
adc
fwait
push
test
mov
pop
movsb
jmp
fsts
es
pop
enter
xor
out
jge
loope
stos
rol
cmpsb
jae
enter
mov
inc
mov
test
xchg
jae
xor
mov
mov
es
jno
sbb
mov
xlat
or
push
dec
adc
fldt
arpl
sbb
push
je
insl
xchg
lods
dec
ror
and
enter
scas
cmpsb
adc
xor
or
pop
sub
add
hlt
mov
dec
ljmp
and
int3
adc
dec
mov
into
xor
mov
incb
dec
mov
or
gs
sbb
nop
pop
pop
mov
inc
fs
addr16
cmpsl
ss
adc
mov
dec
sbb
cli
hlt
or
fwait
jge
and
negl
lea
movsl
mov
push
mov
imul
je
push
ret
dec
popa
je
cmp
daa
cmp
xchg
stos
mov
std
push
mov
jle
mov
jmp
jp
nop
lods
imul
cmp
adc
loope
pusha
xor
rorl
xchg
lea
lret
mov
outsl
fcmovu
movsl
adc
dec
cwtl
in
aad
aad
pop
clc
movb
sti
push
jbe
dec
xor
mov
and
fwait
icebp
add
push
push
fs
xchg
movsb
and
xor
cmc
fstl
das
out
daa
add
in
arpl
int3
fimuls
test
lahf
repz
sbb
div
push
mov
and
out
loope
fidivrs
movsl
cmp
mov
dec
fldl
aas
xor
fs
xor
pushf
sbb
mov
lret
fnsave
fwait
push
inc
push
dec
int3
lods
mov
mov
mov
inc
lods
jecxz
mov
jle
xchg
aaa
and
cmpsl
add
push
cmp
push
popf
mov
mov
sarb
cmpsb
jno
fisubrs
mov
xchg
mov
int
push
stos
jp
es
push
jnp
sbb
sbb
sbb
outsl
dec
cmpsl
xchg
xchg
test
outsl
xchg
jo
jnp
and
jo
call
jecxz
jb
pop
push
mov
imul
daa
data16
aas
cmpsb
test
les
lcall
icebp
mov
pop
rcr
mov
adc
cwtl
dec
aam
mov
lret
xchg
add
jne
adc
xor
and
pop
ud2
cmp
fsubrs
push
out
pop
add
jecxz
stos
aam
lock
adcb
addb
mov
lods
sti
add
icebp
mov
mov
push
cmp
loop
pop
sub
mov
imul
fdivl
sbb
fisubs
adc
jne
jg
aaa
lea
in
and
sub
addr16
xlat
jl
ret
cwtl
mov
xchg
pop
sub
cmp
pusha
call
shlb
jae
rolb
outsl
push
aaa
mov
movsb
sub
aam
mov
aad
push
and
fsubrl
jl
lock
dec
ret
and
lahf
in
or
popa
out
ss
lret
push
sub
push
arpl
repz
cwtl
test
xchg
sub
sbb
cmpl
sbbl
xor
push
ds
jle
adc
mov
inc
out
dec
xchg
lods
sub
pop
sub
xor
add
mov
add
and
adc
push
pop
cmp
xor
enter
jno
lcall
mov
test
push
lcall
in
push
dec
inc
mov
cmc
shll
mov
sbb
add
jmp
or
push
ret
insl
andb
daa
pop
push
jle
movsl
aaa
ds
imull
xlat
jo
mov
inc
repnz
jp
xor
dec
sbb
mov
cmc
xor
fsts
stos
repz
xchg
out
loop
es
jg
jge
cmp
cltd
jne
push
mov
stos
lock
xlat
add
aaa
dec
in
mov
mov
test
dec
sbb
rcr
test
sub
push
sbb
sbbl
push
fwait
or
iret
mov
ds
mov
leave
jb
lds
xchg
mov
sub
pop
loope
dec
fdivrp
ret
inc
dec
mov
out
sbb
push
icebp
sbb
push
add
insb
push
mov
jns
sbb
jo
repnz
pushf
jno
mov
sub
enter
xor
fiaddl
xchg
cmp
dec
dec
stos
push
xchg
sahf
je
jl
aaa
out
bound
es
arpl
nop
add
dec
iret
fs
outsl
jl
clc
sarl
dec
and
icebp
lret
mov
inc
mov
andl
fidivrl
negl
outsl
mov
ds
inc
inc
dec
fdivr
mov
sub
xor
lods
stos
mov
jp
shr
pop
fsubs
ret
lret
test
mov
add
test
lret
scas
lds
call
mov
mov
xor
gs
pop
adc
push
fnstsw
addr16
push
decb
out
lret
ret
sub
mov
insb
cmp
push
and
cmp
push
pop
loopne
pop
push
scas
fisubs
es
and
pop
movsl
sar
or
sub
icebp
nop
push
push
lea
jg
mov
jno
outsb
sub
dec
mov
push
dec
xor
int
push
mov
pop
in
shrb
jnp
push
daa
lds
pushf
addr16
fistpll
sahf
sbb
out
gs
xor
push
pushf
outsb
dec
pushf
movsb
xchg
dec
mov
dec
adc
jge
adc
fwait
lock
std
xchg
cmpsl
fwait
push
repz
push
shrb
jb
outsl
or
xor
jns
popf
in
daa
int
movsl
decl
push
aam
mov
xor
cmp
popa
inc
movsb
pusha
aad
push
popf
or
lcall
in
xlat
add
inc
and
push
mov
je
add
cmp
popa
sbb
scas
inc
sub
xchg
jae
dec
jecxz
cmp
shll
mov
fldt
add
push
xchg
push
mul
push
dec
dec
cli
stc
pop
mov
add
imulb
push
ss
xchg
movsb
cltd
jmp
notb
or
in
es
add
mov
imull
mov
jns
lock
pushf
mov
jmp
in
pop
inc
fidivrl
daa
jne
pop
inc
push
in
inc
ret
stos
fimull
mov
dec
and
dec
xor
inc
cmp
sbb
jae
aas
mov
jle
cmp
mov
push
pop
adc
pusha
xchg
ljmp
push
stc
std
adc
mov
mov
pushw
lods
call
push
dec
je
add
mov
push
xor
insb
add
lock
push
fnstcw
inc
sbb
inc
cmpsl
jns
or
adc
jge
pop
popa
nop
mov
sbb
call
sub
and
sbb
sub
test
dec
insl
scas
das
aas
arpl
inc
scas
jno
incl
sub
test
dec
cmpsb
mov
outsb
jnp
jae
pop
subb
les
sbb
test
add
cmp
mov
xlat
out
inc
cmp
jo
cli
xor
jae
jo
push
jns
aam
cmp
fisubl
mov
and
push
sub
jg
adc
mov
sub
ss
inc
jmp
mov
adc
sbb
mov
insb
inc
inc
ja
lods
inc
aam
or
push
test
inc
andl
xorb
push
loopne
add
mov
arpl
jbe
incb
push
jmp
pusha
lods
andb
and
iret
jno
cli
bound
fs
shr
enter
push
xorl
into
jecxz
dec
es
enter
into
dec
pushf
pop
outsb
inc
cmp
xor
push
pop
sbb
cmpsl
dec
int3
inc
push
inc
cld
popa
jb
mov
inc
ljmp
addl
nop
leave
push
jbe
inc
cmp
add
psubsw
gs
push
in
ja
sub
push
shrl
and
xchg
clc
leave
lock
fstps
jno
xor
stos
out
js
or
out
jle,pn
mov
or
jmp
inc
roll
cmc
cmpsb
jo
sbb
push
sahf
push
dec
fwait
andl
mov
sbb
sbb
and
jb
mov
rorb
add
xchg
shll
pushf
cmp
movsl
js
cltd
ret
jp
mov
cmpsl
cwtl
xchg
outsb
mov
mov
stc
arpl
out
mov
adc
xor
imul
repz
stc
cmp
jns
cli
ror
fsubs
lea
sbb
imul
add
push
jp
pop
add
mov
mov
movl
mov
dec
int3
mov
push
mov
xchg
addr16
xchg
out
or
xchg
out
mov
adc
leave
inc
and
leave
mov
jl
add
and
out
lcall
cld
add
mov
addl
sbb
incl
stos
cmp
int3
jbe
cmpsb
movsb
insb
inc
movb
adc
jecxz
les
mov
repz
iret
pop
xchg
hlt
cmpsb
aaa
add
push
cwtl
add
int3
jmp
fisttpl
and
xor
flds
cmp
cmova
mov
xchg
rcrl
inc
mov
out
pop
in
rorl
scas
popf
jno
test
jl
loopne
and
js
mov
out
dec
test
mov
push
fisubrs
lret
repnz
jns
divl
xchg
enter
out
test
xor
mov
jnp
cmpl
jp
xchg
sar
aaa
arpl
int
push
mov
fldcw
sub
cmp
adc
ja
ljmp
push
adc
mov
addr16
out
inc
cmp
sub
jge
pop
xor
dec
ja
popf
imull
sti
pop
cmp
dec
shll
mov
lcall
hlt
scas
call
jecxz
sbb
jb
loop
lret
shl
gs
ljmp
push
fwait
push
sbb
mov
jb
int
lahf
inc
lea
shlb
cwtl
and
mov
orl
adc
scas
test
dec
push
inc
adc
mov
xchg
adc
mov
fiadds
addr16
jmp
lock
addl
fwait
dec
mov
stc
mov
enter
lock
aad
std
xchg
das
imul
in
mov
mov
aad
and
aas
xchg
in
sub
fcmovne
push
movsb
mov
fwait
jb
xchg
mov
mov
xorl
pop
popf
dec
mull
add
dec
fsubrp
sub
dec
test
sub
jne
gs
xchg
orl
adc
fstp
icebp
pop
std
das
or
push
fists
push
decl
pusha
shr
in
fadd
pop
rcrb
cli
out
testl
mov
jl
push
mov
xor
adc
lret
or
lds
push
loopne
cmpsl
loopew
mov
push
pop
incb
mov
push
push
addl
mov
xchg
push
lods
cmp
jecxz
hlt
popf
lcall
dec
push
sbb
into
mov
jne
jno
clc
sbb
mov
pusha
lock
add
out
test
cs
aam
xor
hlt
dec
dec
lock
and
outsl
push
daa
xlat
outsl
ffreep
les
sti
setno
push
pop
notl
pop
push
xchg
out
pop
push
sbb
sbb
mov
out
sbb
push
jns
dec
xchg
or
cmp
repz
cli
xor
in
mov
pop
pop
sahf
cmp
jo
movl
fdivl
mov
sub
xchg
push
push
mov
dec
adc
jge
push
pop
xor
adc
jl
les
pop
cmp
mov
push
push
dec
mov
fcoml
aas
les
in
cwtl
add
iret
shrb
fs
sbb
xchg
push
cmp
inc
sub
lahf
add
pop
sub
in
inc
outsb
outsl
jbe
pushf
xchg
testl
ds
jo
mov
adc
fwait
test
in
in
fists
xchg
mov
shrl
enter
adc
jno
rcr
push
inc
pop
mov
nop
and
push
jnp
jp
sbb
xor
in
in
in
xor
push
mov
leave
inc
mov
aam
imul
jns
sbb
sub
mov
popf
psubb
popf
adc
hlt
jmp
shlb
clc
inc
sub
outsb
push
ror
dec
cmpsl
cmp
cmp
loope
push
mov
pop
mov
cmp
mov
pusha
jno
mov
mov
les
and
adc
dec
adc
into
mov
push
cmpsl
mov
imul
sub
xchg
das
shlb
pop
shl
and
loopne
jo
pusha
pushf
cmp
inc
loop
xchg
test
pop
push
ret
jns
sahf
add
pop
adc
xchg
fistpl
pop
subb
lcall
mov
aad
aad
mov
lock
mov
lret
xor
cmc
xor
ficomps
pop
idivl
jno
shrb
cmc
cmp
dec
dec
idivl
mov
pushf
push
fwait
mov
fists
cmp
sub
fidivrl
mov
push
add
imul
stos
in
popf
inc
jl
sub
lret
loopne
rol
jl
test
stos
cmp
stc
pop
xlat
mov
jecxz,pn
es
xor
dec
in
inc
rcrb
push
mov
scas
jne
mov
fisttpll
repnz
push
mov
mov
add
jmp
lds
loope
inc
fcmovnu
dec
mov
rclb
mov
sub
roll
adc
ret
inc
dec
std
icebp
lods
mov
ss
stos
jecxz
stos
aaa
inc
push
mov
pop
imul
fdivrl
scas
fwait
mov
out
mov
adc
std
add
repz
sub
pop
adc
lahf
jg
jp
jg
jnp
pop
jmp
lds
cmc
stc
xor
push
sbb
insb
sbb
imull
xchg
xchg
jb
sbb
pop
jb
mov
out
and
dec
adc
jae
jge
push
loope
jne
addl
jnp
or
mov
int3
pushf
int3
mov
addr16
loope
jp
cmpsl
sahf
jge
sbb
in
test
bound
hlt
push
in
xor
mov
jp
cmp
clc
std
mov
mov
sub
pop
aam
insl
out
fwait
cld
xor
mov
or
mov
xor
inc
jmp
push
int3
negb
add
or
imul
lods
mov
sahf
imull
ficoml
cwtl
cmp
and
imul
add
push
and
mov
inc
add
or
fcomip
xchg
icebp
push
repnz
mov
pop
mov
dec
sahf
test
add
outsb
lcall
mov
mov
push
fdivrs
in
or
lds
call
cli
add
mov
jge
xor
int
jmp
sbb
push
cmp
call
dec
incb
aaa
cmp
test
rcr
loope
cli
add
sbbb
inc
pop
cmp
push
sub
in
xchg
flds
adc
ja
movsl
fldcw
inc
ret
adc
xor
inc
and
testb
imul
nop
fidivl
lds
adc
pop
xchg
and
and
push
mov
mov
ljmp
pop
inc
insb
push
inc
out
hlt
jg
sub
fildl
sbb
push
pop
xchg
fisubrs
pop
xor
addr16
in
adc
ja
insl
sbb
repnz
and
in
test
loop,pt
sbb
jno
xor
xchg
mov
hlt
popf
adc
cltd
mov
mov
imul
jae
xor
sbb
mov
xchg
sub
call
sub
push
pop
ss
lods
pop
xchg
std
pushf
rol
addb
dec
mov
jnp
pop
xchg
adc
mov
add
xchg
dec
mov
test
sub
inc
pushf
ss
or
mov
mov
cmp
fcoml
inc
fxch
les
enter
fimull
insb
mov
mov
mov
pop
jecxz,pt
mov
mov
adc
mov
xor
and
inc
in
and
popf
ret
adc
jge
xchg
jg
andl
inc
popf
jge
jecxz
mov
clc
pop
push
inc
ret
inc
dec
and
hlt
sub
stos
jge
call
out
dec
outsb
scas
fwait
mov
sub
hlt
imul
cmp
dec
adc
pop
mov
test
add
ljmp
mov
in
fbld
add
cmc
or
inc
stc
cmp
jbe
add
mov
push
addr16
in
and
push
fcmove
call
xchg
arpl
mov
pusha
sub
daa
addb
push
call
mov
out
sub
jg
lods
cmp
js
in
inc
pop
mov
pop
dec
xchg
push
push
mov
xchg
pop
cmp
sti
sub
and
pop
aaa
iret
jne
pop
or
into
push
add
add
arpl
sti
int
jns
lret
notrack
fdivrl
cli
rol
inc
push
pop
or
clc
pop
fisubrl
jnp
mov
cmp
mov
jbe
cmpsl
jecxz
arpl
test
xchg
adc
jb
scas
das
xor
clc
hlt
sbb
mov
push
aam
pop
sbb
popf
into
call
sub
jo
sbb
movb
out
cld
repnz
adc
jo
mov
adc
push
xor
mov
push
sub
sbb
lods
fcoms
test
push
jge
mov
inc
lret
adc
mov
inc
add
ret
mov
or
mov
rorb
pop
or
mov
rcr
xchg
clc
js
sub
push
insl
clc
mov
aam
shl
sbb
std
mov
popa
cmp
movntps
pop
mov
imul
jne
jns
scas
mov
xor
cmpsl
and
adc
insl
incl
pusha
es
fstpl
mov
sti
divb
out
imul
dec
ret
repnz
rcrl
mov
add
scas
aaa
mov
daa
popl
xlat
popf
adc
push
into
testb
ret
sub
call
pop
mov
aaa
icebp
jge
add
push
and
shlb
fisttps
mov
inc
jnp
int
and
stos
dec
xchg
ret
adc
or
loopne
cmp
ret
mov
cmp
bound
rclb
xchg
xchg
or
ja
ljmp
imul
ret
inc
andl
out
xchg
enter
out
ljmp
lock
dec
imull
xchg
xlat
movntq
int3
icebp
es
call
cs
inc
xchg
add
pop
mov
or
inc
add
lods
mov
cs
fadd
cwtl
adc
xchg
icebp
add
inc
mov
fldenv
es
sarb
dec
jne
aad
bound
xchg
int3
fsubrl
cmpb
negb
sahf
test
int
arpl
inc
fs
scas
loop
orb
pop
xor
xlat
jmp
pop
fxch
cs
rorl
sar
pop
xchg
stc
xor
outsl
xor
insl
sub
pop
or
or
hlt
scas
mov
lcall
imul
or
push
or
add
inc
pop
repz
sbb
loop
mov
mov
gs
and
xor
aas
jnp
fcmove
jge
push
loop
es
push
enter
jl
test
xor
into
mov
jo
fwait
xchg
xchg
ret
pop
in
pop
xor
pop
out
rcrb
xorl
adc
push
hlt
and
int3
rol
mov
cmpsl
xlat
pop
movl
ret
push
pop
enter
jmp
dec
inc
inc
in
lcall
push
in
add
outsb
je
aaa
mov
rclb
adc
adc
mov
push
sbb
popf
out
ret
mov
mov
scas
mov
insl
test
fdivrp
jg
icebp
jb
mov
pusha
pop
out
out
add
mov
add
cmpsb
fdivs
cmp
clc
outsl
test
loopne
cltd
or
mov
arpl
and
popf
fisttpl
pop
adc
ds
xor
aad
bound
mov
mov
sub
sahf
mov
inc
lea
gs
ljmp
mov
ja
arpl
hlt
dec
dec
or
popa
mov
push
pop
gs
cmpsb
sub
dec
sub
push
pop
dec
xor
jo
xchg
movsl
sahf
movsb
jg
cli
dec
call
sub
xchg
xchg
stos
adc
cltd
in
aad
fs
cmp
mov
mov
sub
jne
sti
push
push
jecxz
sub
jmp
test
and
stos
outsl
inc
aad
xor
ja
in
lcall
push
aad
ja
xchg
cmp
push
scas
dec
push
push
sbb
imul
aas
xchg
jge
nop
inc
pop
mov
jno
call
std
xor
jns
add
aam
popa
or
sbb
xor
and
jmp
cwtl
addl
pop
fadds
push
lods
aaa
sahf
mov
add
fildl
ror
lds
icebp
lret
out
sahf
pop
rcrb
xor
mov
sbb
dec
mov
sbb
fldcw
cmp
and
dec
xor
sub
jecxz
ja
cmc
xchg
in
in
stc
jle
jge
out
mov
cli
sub
insb
lcall
mov
outsb
push
sbb
movsb
cmc
test
mov
adc
das
das
bswap
adc
clc
rcl
fcomp
fs
mov
pushf
mov
scas
mov
sbb
push
mov
loopne
enter
add
andps
push
cmpb
xor
cmc
xor
leave
mov
fimull
dec
jns
push
inc
sub
sub
jl
push
ja
or
int
jae
jae
sub
ret
xor
clc
lret
xchg
mov
pop
test
pop
xchg
push
bnd
cmp
xchg
pop
fbld
ret
xchg
xor
xor
imul
dec
jp
pop
cltd
cmp
mov
rol
sbb
inc
fldcw
popa
inc
stos
inc
sbb
mov
or
mov
subb
loope
mov
inc
inc
pop
mov
push
mov
cld
push
imul
mov
sub
into
dec
pusha
jp
adc
sahf
iret
adc
lret
push
jecxz
push
andb
adc
repz
add
adc
cwtl
inc
lds
repz
sti
std
inc
ss
mov
addb
jg
xchg
lods
ja
mov
mov
mov
xchg
or
imul
or
push
xchg
inc
pushf
mov
sub
ret
mov
sub
pop
xchg
aad
or
or
or
pop
adcb
pop
mov
push
cmp
push
cmpl
adc
inc
les
subl
mov
insb
push
xor
xchg
lret
cmc
push
cmp
push
jne
add
insl
vmovd
jno
push
push
aas
imul
sbb
mov
dec
repnz
lret
xchg
mov
aaa
xor
ljmp
dec
ret
sbb
jge
inc
cmp
scas
loop
or
loopne
shr
outsl
mov
gs
add
mov
mov
mov
mov
icebp
xchg
sub
sbb
enter
xlat
push
cmp
sbb
scas
aaa
popa
sub
popf
and
mov
sub
pushf
xchg
dec
mov
scas
outsl
inc
mov
shll
and
push
add
dec
push
jnp
mov
jns
mov
jo
push
add
outsb
sti
adc
mov
mov
bound
popf
mov
pop
repnz
or
rcrb
jp
push
jnp
out
jb
jns
scas
insb
ficomps
xor
xchg
xchg
xlat
xor
pusha
sbb
ljmp
movlps
mov
cmp
mov
pop
mov
sbb
add
mov
or
mov
mov
xlat
pop
jns
adc
jbe
aam
iret
insb
mov
arpl
lret
dec
rorb
andl
stc
mov
push
dec
cmpsl
adc
sub
les
roll
aas
push
pop
adc
out
cmc
icebp
notb
clc
pushf
fs
js
adc
jo
push
out
sbb
arpl
lods
mov
xchg
jmp
mov
call
nop
cmp
inc
fsubrp
sbb
pop
stos
inc
loopne
pop
adc
lret
jg
ficompl
sub
ret
adc
lock
scas
mov
test
pushf
mov
push
ljmp
push
or
add
aad
mov
mov
inc
or
inc
mov
fstl
pop
daa
mov
sub
sbb
jns
aam
cli
cltd
jo
sbb
loop
push
inc
mov
enter
and
sbb
inc
cmpsl
jecxz
xchg
xchg
cmp
pusha
push
fdivrs
cmp
movl
pop
cmp
push
sbb
jle
mov
stos
arpl
cmpsb
test
adc
lret
mov
push
xchg
mov
xchg
pop
xchg
icebp
ja
ret
fldt
xor
push
js
inc
ja
mulb
mov
scas
push
xchg
adc
cwtl
out
pop
cmp
fnsave
or
loop
push
je
add
insb
pop
and
dec
dec
movsl
xsha256
cmpsb
shl
sti
mov
pop
xor
ljmp
push
movb
lods
mov
mov
xchg
mov
sub
cmpsl
inc
mov
mov
arpl
icebp
aam
in
in
push
or
sub
mov
xchg
add
xchg
in
cwtl
mov
mov
and
inc
js
sbb
mov
sbb
cmpl
ffree
int
in
push
pushl
arpl
lcall
pop
jnp
sub
push
clc
push
cs
inc
movsl
popa
cmp
push
loop
lcall
clc
and
jo
adc
xchg
movsb
clc
mov
push
and
fwait
add
sbb
ffree
fildll
shr
ds
mov
ret
incl
xchg
jmp
ds
mov
pop
movsb
sub
mov
stos
mov
outsl
mov
sbb
test
xlat
iret
and
and
icebp
and
bound
ret
daa
std
lock
out
sbb
ret
data16
mov
je
mov
mov
pop
rorl
imul
fists
scas
lods
rorb
pop
test
in
inc
loop
xchg
es
mov
xor
lea
jb
pop
in
dec
jb
stc
out
jle
mov
sub
jl
jne,pt
sub
insb
clc
stc
sarl
push
ss
jb
cmp
mov
xorl
shll
bound
jns
adc
fisttps
pushf
mov
xchg
xchg
sub
adc
outsl
aad
jmp
aad
call
cmp
pushf
pop
fcomps
mov
dec
lock
insb
xchg
fldl
into
daa
pop
inc
call
or
ret
pop
negl
mov
push
fistps
negl
inc
xor
mov
xor
cmpsb
js
pop
in
imul
pop
stos
dec
das
rcll
nop
pushf
xchg
pushf
sub
jg
rcrl
or
mov
sti
jno
aas
dec
lret
outsl
cltd
out
jne
xor
jl
outsl
cltd
jmp
fsubrl
scas
jl
cwtl
cmp
test
shrl
mov
ret
shl
jb
test
jne
scas
loop
inc
mov
ja
js
sub
loopne
sbb
adc
lds
and
jb
dec
aam
ljmp
mov
jne
je
mov
out
std
adc
loop
arpl
xor
add
mov
jo
aad
mov
cmp
or
shll
xchg
push
add
xchg
fnstsw
test
push
cmc
cltd
sbb
xor
xchg
add
cmp
in
mov
push
stos
push
jg
rol
inc
pop
mov
jnp
mov
imull
xchg
mov
mov
aaa
movsl
xchg
es
scas
mov
fcoms
xchg
cli
hlt
adc
mov
push
enter
add
add
enter
ja
cwtl
push
jmp
shl
sub
idivb
addr16
or
outsb
lcall
mov
mov
scas
jne
repnz
inc
scas
testl
push
dec
outsl
jl
fsubl
sub
movsb
mov
jecxz
negb
inc
in
test
adc
mov
cmp
stc
fidivrs
ss
add
es
lods
push
jmp
roll
push
mov
lahf
inc
daa
popa
repnz
nop
push
hlt
mov
sarl
dec
push
insb
mov
sti
call
movsl
inc
mov
ljmp
mov
cmpsb
insb
es
and
lret
xchg
int3
addl
pop
pushfw
xor
mov
sbb
jp
inc
push
decb
and
pop
out
mov
gs
loope
arpl
leave
and
movsb
cmp
es
xchg
cld
cmp
pop
dec
fdivrs
outsl
dec
adc
jbe
lds
mov
push
pop
outsl
repz
cmp
inc
sbb
and
nop
mov
lock
data16
xchg
dec
xor
outsb
adc
js
cmp
pop
push
push
iret
test
pop
cmpsb
and
xor
rcll
cli
movsl
inc
jno
xor
adc
sarl
cmp
sbb
adc
test
aad
cmp
jp
sbb
pop
pop
mov
fbld
xchg
pop
cmp
mov
rcll
arpl
std
jo
sahf
lret
shr
loop
pop
push
ds
js
mov
out
leave
xchg
stc
mov
mov
lods
out
mov
adc
mov
jae
mov
or
mov
adc
into
call
sbb
pop
xor
mov
loope
jl
mov
cld
sbb
push
xor
es
sub
pop
push
das
cltd
mov
scas
out
xchg
adc
fstpt
stos
or
pop
lea
inc
ret
addr16
mov
je
xor
in
leave
sti
xor
int
pop
int
and
in
movsl
arpl
jb
pop
mov
push
jle
sbb
dec
int
mov
jno
inc
jo
jmp
outsb
push
outsl
icebp
pop
fwait
gs
cmpsl
incl
es
mov
arpl
mov
js
pop
lods
cmpsl
imul
sub
and
mov
movsb
insl
div
repnz
inc
cwtl
sbb
pop
movl
stos
imul
jmp
mov
mov
add
and
sub
inc
inc
insl
sahf
mov
sbb
mov
sub
daa
mov
mov
ss
out
std
push
mov
dec
mov
out
mov
add
insb
mov
pop
fcoms
xor
movsb
ja
sbb
or
cpuid
inc
gs
mov
decb
mov
movsb
add
test
xor
push
icebp
stos
loop
sbb
pop
and
sub
xchg
mov
jg
psubb
mov
lods
ret
pop
sub
int3
mov
cli
stc
adc
dec
xor
mov
test
leave
pop
and
xchg
push
in
push
sub
push
adc
xchg
popf
xchg
int
dec
push
or
inc
add
mov
push
cs
lea
mov
xchg
enter
xchg
mov
sub
ds
pop
aaa
mov
push
push
or
or
sbb
mov
jmp
xchg
sub
mov
sub
inc
cltd
xor
cmp
sbb
jno
test
fs
xor
aad
lods
movsb
jmp
fstps
sahf
nop
pop
cmp
fs
fcmovnbe
inc
js
or
mov
out
data16
clc
test
mov
sbb
jg
mov
adc
dec
arpl
cld
in
pop
sbb
int
inc
mov
rorl
mov
ss
jbe
push
cmpsb
or
imul
push
cmp
cmc
fcompl
jo
ljmp
adcb
push
push
sub
outsl
cmc
cmpsb
les
loopne
push
mov
cltd
out
fs
ljmp
test
in
mov
cli
mov
jne
xchg
pop
sbb
iret
or
inc
mov
or
jp
gs
into
or
ret
mov
cld
and
xlat
out
ret
mov
test
jno
inc
dec
mov
mov
loopne
iret
adc
pusha
push
aas
mov
aas
leave
cmp
cwtl
cmp
fistps
dec
sgdtl
jle
cld
in
xor
mull
dec
inc
sbb
inc
jb
xorb
mov
jecxz
fsts
fildll
sbb
push
outsb
push
mov
pop
dec
aad
aam
xor
dec
cwtl
cmp
loop
mov
mov
xchg
out
sahf
cmp
mov
cmp
cmp
fcompl
mov
loope
pushl
mov
inc
sub
out
pop
into
shll
xor
push
clc
inc
dec
adc
in
fistpll
stc
fldcw
es
lret
ss
ret
aad
jge
cmpsb
jo
cmp
or
pop
ret
and
push
enter
popa
and
push
popa
nop
scas
lods
mov
xorl
dec
jmp
not
dec
dec
dec
scas
stc
mov
add
xchg
fsubr
cmpsl
xchg
testl
mov
xchg
ror
adc
jae
rcll
dec
mov
cmc
ret
jne
sahf
test
xchg
cmp
fistpll
add
shrl
sbb
jge
dec
cwtl
jno
and
jp
cmp
aaa
mov
inc
cli
cmc
inc
hlt
dec
outsb
ja
push
iret
out
out
sbb
dec
mov
dec
sbb
aad
push
xor
pop
lods
fwait
cmp
or
pop
retw
flds
pop
ret
movsl
iret
xchg
out
mov
bound
fstpl
daa
xchg
dec
push
mov
mov
mov
cld
movsb
out
idiv
in
sbb
es
rcr
push
enter
mov
mov
repnz
mov
das
sbb
shll
sub
add
shr
jp
shlb
insl
pop
pop
aaa
out
mov
int
and
rorb
frstor
iret
pusha
cmpsl
push
rol
imul
sub
inc
xchg
dec
je
bound
aam
dec
cltd
outsl
bnd
icebp
push
pop
in
test
mov
lcall
ret
mov
in
stos
add
dec
dec
test
fists
repz
and
andl
nop
xor
adc
push
popf
pop
inc
sub
cs
xchg
repnz
aas
cmp
mov
add
repnz
sub
push
jp
inc
pusha
lret
push
ret
inc
cli
jae
enter
pop
mov
mov
idiv
push
lahf
dec
roll
or
int
daa
xchg
mov
outsb
mov
data16
fucomi
fidivs
cltd
fcomps
rorl
outsb
dec
loop
cmpsl
pop
and
mov
lock
ret
and
xlat
stos
shr
xor
es
cmp
xchg
sbb
push
or
rcrb
es
xchg
notb
xchg
pop
aas
inc
cmp
scas
pop
pop
movsl
cmp
push
pop
inc
out
int3
jns
lds
jo
push
pushf
mov
or
and
fstps
add
jbe
int3
scas
lock
addr16
xor
das
adc
add
je
jb
cmpsb
adc
lock
stos
ljmp
xchg
sub
sub
shlb
lret
repz
cld
fistps
cmp
dec
push
sub
jecxz
in
aam
fdivs
sub
out
mov
jmp
or
es
mul
cmp
lods
fidivrs
out
ret
enter
pop
sahf
jnp
pop
add
ret
mov
imul
fdivrl
xchg
dec
dec
out
mov
add
ds
outsb
cwtd
fs
pop
jle
jge
loopne
jo
adc
lea
push
clc
adc
enter
aam
in
xchg
stos
movsl
test
out
mov
adc
je
jbe
adc
mov
aaa
std
rorb
ss
out
outsb
jg
dec
js
jl
ss
pop
insb
mov
jb
pop
pxor
insl
cld
stos
mov
lret
mov
sbb
jno
lcall
or
rcrb
out
jno
ljmp
sbb
pop
imul
ret
push
dec
adc
ret
bswap
into
fdivl
jae
xchg
repnz
pushf
les
xchg
xor
aas
sub
xchg
cmp
push
daa
dec
and
xchg
int
decb
jno
enter
cmpsb
outsl
out
cli
mov
das
dec
ljmp
jl
mov
fs
adc
mov
jle
push
in
push
out
fistps
fsubrl
ds
mov
insl
dec
scas
sub
in
push
pop
cli
sbb
xchg
jle
xchg
fimuls
rep
imul
in
enter
fisubl
jmp
cmp
pop
push
stos
mov
adc
mov
fcompl
or
leave
inc
jmp
mov
pop
adc
push
xchg
jle
in
cld
in
fdivs
es
hlt
xlat
loopne
xor
jg
xchg
stos
and
dec
mov
adc
into
scas
dec
imul
aas
pushf
lahf
dec
cli
std
dec
test
xchg
push
adc
loopne
mov
mov
or
shl
mov
push
push
dec
sub
cld
mov
clc
lea
mov
xchg
cmpsb
lods
fmulp
cmp
xor
rcrb
into
loopne
fidivrl
insb
jecxz
mov
stos
loope
xchg
xchg
mov
lea
xchg
in
ss
pop
dec
xchg
cwtl
in
addr16
adc
in
stc
lret
mov
inc
popa
fbld
cmp
push
pop
jecxz
mov
jae
out
ficoml
mov
aas
adc
insb
sti
fcompl
fildl
leave
pop
movsl
shll
adc
negb
and
cli
xor
cltd
arpl
sbb
addr16
outsl
ja
std
in
push
cmpsb
dec
cmp
push
add
cs
push
jnp
jecxz
pop
enter
mov
or
and
mov
cmc
sub
and
adc
ds
iret
fwait
enter
xor
mov
and
aaa
push
dec
sub
cli
pop
mov
cli
or
add
push
shrl
mov
mov
adc
loope
ja
fcompl
iret
shlb
cmc
in
hlt
mov
pop
mov
push
inc
popf
adc
add
rcrb
or
out
out
nop
in
ss
lods
mov
out
cmpsl
add
addb
stos
sti
mov
mov
in
shrl
cmp
push
repnz
mov
xor
dec
push
jno
mov
addb
push
loopne
test
imul
mov
and
sub
mov
xor
sbb
mov
mov
int3
push
adc
nop
inc
outsl
jge
cltd
sub
cmpsl
mov
xchg
daa
insl
test
sub
mov
pop
sub
cmc
dec
or
add
nop
insl
aas
pushf
push
push
inc
sub
out
das
aaa
jb
push
test
jmp
cmc
mov
ret
mov
cltd
cld
xchg
or
cwtl
stos
mov
js
add
mov
cld
xchg
lret
mov
pop
mov
ret
sub
cmp
bound
and
add
add
popf
xor
cmpsb
in
push
add
lods
cmp
sub
fildl
add
pop
mov
cmp
xor
ret
or
insl
popf
pusha
out
bound
xor
add
incl
jp
pop
leave
push
inc
lahf
dec
pop
mov
nop
add
jnp,pn
mov
pusha
pop
ljmp
outsl
cmp
push
popf
adc
test
ret
jbe
xlat
xor
dec
cmp
add
cld
dec
and
add
sub
xor
inc
dec
mul
icebp
cs
add
insb
xor
cmp
inc
jns
dec
inc
push
xor
mov
fcmovb
mov
push
pushf
and
sbb
movsl
imul
sub
jb
mov
popa
bound
jle
movsb
out
ret
lods
mov
loope
sbb
sti
pop
nop
mov
loope
lahf
mov
or
nop
and
aas
arpl
sahf
fwait
mov
mov
data16
cmc
xor
sub
ror
xor
cmp
test
rdtsc
sbb
jle
lds
rorl
mov
ss
call
mov
push
es
adc
push
jmp
lods
or
xor
push
mov
jmp
mov
in
or
xchg
sub
ja
lret
sub
sbb
mov
shl
int
and
lds
ficoml
dec
loope
and
ret
cld
sti
push
es
sub
cmpsl
rclb
push
mov
inc
inc
stc
leave
cmp
es
mov
sahf
es
scas
lea
mov
cld
mov
xor
add
cltd
ds
cmp
call
daa
bswap
adc
call
cwtl
pop
inc
push
pusha
mov
jnp
out
xchg
fcomps
add
imul
or
fucom
jb
or
icebp
adc
cmp
fildl
cmp
js
mov
cmc
les
xlat
adc
sub
int3
add
pushf
xchg
lock
push
mov
fdivrs
out
jnp
push
shr
inc
inc
pop
jbe
pop
sbb
fnstsw
cmp
jg
cs
cwtl
xor
imul
jle
cmc
cwtl
fcompl
cli
stos
sub
sub
xchg
cmc
mov
pusha
fsubl
test
push
aas
rorl
ret
mov
repz
lret
and
push
hlt
or
adc
jbe
les
xor
or
dec
push
ds
mov
int3
mov
xlat
out
mov
push
imul
mov
cmc
clc
das
mov
and
push
lret
xchg
shll
or
jmp
mov
jg
arpl
fsts
dec
pop
test
mov
aaa
sbb
mov
dec
lods
in
movsl
je
push
mov
push
xor
jne
ds
movsb
iret
push
fucomip
fistpl
lcall
cmp
outsl
addr16
sahf
idivb
or
or
dec
push
dec
popf
mov
loope
cmp
mov
add
pop
sahf
outsb
inc
icebp
dec
jge
or
pop
push
mov
sahf
rcll
ljmp
fs
cmpsl
and
xchg
jecxz
sub
addr16
inc
fstpl
movsb
inc
xchg
or
stos
stos
outsb
jmp
cmpsb
sub
cmc
scas
xchg
mov
ja
sbb
mov
enter
dec
je
jmp
jno
cmp
sbb
jmp
pop
ljmp
insb
push
inc
andb
repnz
xor
mov
and
and
les
mov
xor
inc
insb
in
dec
sub
in
push
daa
jno
imul
jb
jnp
mov
pushf
out
mov
daa
nop
mov
out
dec
fistpl
out
call
dec
mov
gs
mov
mov
jle
adc
xlat
xor
faddl
adc
sub
loopne
stos
stc
pop
mov
adc
cmp
push
and
movsl
push
mov
nop
sti
sahf
jo
add
pop
adc
test
aaa
or
fwait
inc
in
pop
cmp
or
lods
mov
movsb
xchg
xchg
rcrb
push
mov
mov
pop
or
add
add
push
test
in
cltd
mov
pop
inc
aaa
ret
imul
cvtps2pd
outsl
add
add
fmulp
xor
fimull
dec
sbb
ja
lea
rolb
pop
mov
lahf
ud2
mov
mov
outsl
mov
cmp
sub
and
fsubl
rcr
lea
jle
cs
repz
int3
sbb
scas
push
or
rcrl
flds
xchg
mov
sarb
mov
ret
insl
cmpsl
push
fnsave
push
dec
lea
mov
fisttps
mov
xchg
sub
stos
pop
xchg
fcomip
mov
popa
popf
ret
and
flds
lret
cld
repz
fcmovne
mov
cwtl
daa
shll
js
loopne
pop
cmp
insb
lret
rcl
call
adc
and
dec
adcl
fiaddl
adc
sub
push
popa
xor
lcall
jg
push
mov
jbe
mov
je
insl
sbb
mov
xor
addl
or
push
ror
push
lock
pop
divb
xchg
push
and
push
dec
pop
ss
dec
push
cmpsl
mov
cmp
cmpsb
xor
pop
hlt
scas
inc
dec
repz
push
dec
rorb
test
je
cmp
call
int
mov
aaa
xchg
jle
cmp
hlt
mov
mov
call
test
and
mov
jp
xor
jo
repnz
clc
or
dec
mov
cmp
insl
mov
xor
xchg
andl
movl
and
sub
sarb
int3
pop
xchg
cmp
jg
xchg
pop
fisttps
clc
repz
add
push
jo
call
in
pop
mov
jae
push
sahf
fptan
add
js
push
imul
sbbl
int3
push
hlt
gs
sub
push
xchg
hlt
dec
sbb
in
or
xchg
jmp
xlat
inc
lods
stos
mov
cs
inc
push
add
movsl
and
data16
xor
and
outsl
add
jns
iret
nop
sub
lcall
clc
hlt
stc
lea
add
sbb
fimuls
xchg
mov
lea
out
inc
xorl
sub
int3
cli
std
fiaddl
cwtl
pusha
xchg
clc
jecxz
pop
into
sub
decb
lds
push
ja
sbb
call
mov
stc
inc
fcoml
cli
fcompl
addr16
in
adc
js
jnp
push
daa
ret
adc
or
jo
lcall
loop
dec
sahf
cltd
iret
jge
in
call
mov
fwait
or
push
xor
and
sub
jmp
mov
adc
test
sub
jl
cmp
fildll
out
scas
lods
call
push
movsl
lock
cmpsb
mov
jp
js
cmp
mov
fadd
outsb
pop
jecxz
xchg
adc
mov
add
and
mov
cmc
mov
mov
mull
push
or
pop
push
push
lock
rcr
dec
inc
push
xlat
push
and
movsl
sbb
add
push
and
or
call
or
push
inc
outsb
push
mov
dec
xorl
iret
sbb
cltd
adc
test
fildl
add
xor
mov
xchg
nop
add
fwait
sub
outsl
icebp
lret
push
cmp
int
loop
mov
add
xchg
outsl
les
mov
cli
fisttpll
push
dec
or
add
imul
ljmp
pop
pop
shlb
aad
push
sbb
mov
add
mov
sbb
pusha
xchg
sbb
popa
pusha
les
mull
sbb
add
or
push
les
mov
mov
inc
xor
inc
pop
dec
fwait
lret
push
push
stc
cli
and
ds
mov
inc
aas
cmp
pusha
int
cmp
in
push
mov
mov
std
mov
bnd
sub
fadds
fs
push
inc
js
adc
mov
push
pop
fcmovb
loope
fstl
mov
ds
xor
push
mov
mov
into
adc
scas
push
xchg
fadd
stos
sub
out
xchg
or
push
add
pop
clc
add
fwait
movsl
lock
in
test
ret
push
pop
mov
push
and
xchg
sub
and
add
sbb
cmpsb
add
xchg
mov
push
mov
jge
or
nop
movsl
or
and
fidivs
mov
ljmp
aam
fildll
test
arpl
inc
lds
lods
jae
mov
mov
and
lret
fs
jmp
and
push
popa
stos
sbb
icebp
movsl
mov
sbb
shrl
cmpsl
int
clc
jmp
cmpl
leave
jns
shll
push
push
inc
pusha
scas
inc
sbb
and
adc
mov
les
add
pop
fldenv
popa
cmc
push
jbe
mov
ja
je
rclb
cmp
xchg
mov
cmp
in
je
icebp
pop
push
cld
cld
mov
sub
inc
addr16
lods
popa
or
icebp
sbb
inc
push
push
or
add
inc
das
push
mov
and
cmpsl
sbb
push
mov
dec
cmp
inc
push
mov
aas
jns
cmp
ja
call
sti
sbb
pop
sub
mov
xor
vpunpckldq
xor
pop
push
xchg
and
pushf
and
mov
pop
outsb
cmp
test
push
ficoms
shlb
adc
bound
pop
aaa
mov
ja
xor
js
cmpsl
out
popf
mov
mov
and
in
jno
mov
imulb
jb
inc
push
jnp
icebp
in
popa
mov
sahf
dec
adc
pop
dec
rcll
pop
icebp
insb
push
std
push
xor
outsl
mov
mov
and
pop
jae
jmp
mov
mov
test
add
fstps
cmp
addr16
pop
pop
xchg
cmp
xchg
int
aam
mov
or
int3
mov
mov
in
frstor
cmc
bound
dec
cmp
mov
dec
into
enter
jbe
arpl
mov
ret
jbe
add
jecxz
test
pop
mov
jmp
repnz
das
in
sub
mov
xchg
in
mov
out
mov
ret
movsb
mov
mov
ljmp
dec
add
cmp
gs
sbb
sar
xor
in
test
out
fdivl
scas
or
mov
rcl
and
lock
movsl
sbb
dec
or
scas
mov
jo
inc
add
jae
jle
arpl
fldt
add
cltd
push
loop
fldl
jno
mov
xchg
cmp
stos
shl
ficomps
sti
sub
adc
hlt
and
call
mov
out
sub
leave
das
in
inc
dec
push
xor
idiv
mov
xchg
push
mov
inc
stos
mov
jnp
xchg
add
push
dec
push
das
pop
clc
nop
mov
outsb
jb
sub
fdivrs
sarl
test
daa
inc
pop
mov
mov
ret
mov
aam
int3
xchg
inc
jg
pop
xor
int
jecxz
sub
xor
add
aam
and
pop
filds
jo
lret
insb
mov
add
add
popf
lds
aaa
adc
mov
hlt
pop
pushl
sahf
pusha
fcoml
test
push
push
push
cld
aas
std
scas
and
sub
xchg
rclb
mov
leave
jo
stc
sbbb
addr16
leave
int
dec
movsl
outsb
add
inc
or
pop
adc
dec
pop
jbe
mov
pop
bound
add
mov
jg
cmpsl
addr16
xchg
int3
fwait
adc
mov
mov
mov
pop
movsb
ja
cmp
push
mov
int3
aaa
sbb
cmpb
xchg
xchg
stos
or
add
add
ret
mov
mov
decl
test
subl
cld
add
dec
fisttps
hlt
test
inc
xor
push
xor
sbb
mov
push
inc
packuswb
dec
js
imul
mov
dec
pop
fsubl
leave
and
mov
lahf
inc
pop
sbb
imul
jp
sbb
adc
xchg
shlb
cmp
push
xor
sub
rcrb
adc
fdivs
xchg
pop
jl
jmp
in
xchg
fidivl
sub
test
aam
cmp
lret
lret
movsl
xor
dec
jo
bswap
loop
add
or
ret
fwait
lcall
ljmp
out
addps
xlat
cmc
dec
xlat
adc
pop
imul
and
std
shr
jge
jge
fisubs
idivb
data16
lret
mov
and
inc
xlat
jnp
sub
loop
or
adc
lcall
pop
subl
dec
in
pop
imul
push
push
lea
jne
cmp
into
fnsave
xlat
xchg
sub
xchg
xchg
pop
packssdw
rolb
xchg
or
movsl
push
js
xchg
loop
pop
shll
mov
jecxz
js
jno
popa
jge
outsl
mov
mov
loop
lea
xlat
inc
or
xor
push
out
mov
in
and
sbb
jp
dec
std
sub
sub
xor
mov
or
xchg
scas
stos
dec
and
adc
xlat
push
stos
bound
dec
test
scas
testl
sbb
inc
dec
inc
test
mov
mov
sahf
jbe
xchg
in
xchg
andb
loopne
adc
out
stos
adc
fmul
push
andb
out
mov
mov
cmp
arpl
add
insb
inc
and
cmp
mov
mov
pushf
or
jno
xchg
data16
pop
std
ficomps
orl
dec
mov
sbb
mov
hlt
call
dec
sub
pop
push
repnz
add
aaa
test
loopne
sub
push
jecxz
mov
jmp
cs
xlat
test
aaa
ljmp
cmp
dec
add
dec
daa
xchg
dec
les
dec
sub
dec
cmpsl
sti
sar
in
andb
or
push
sbb
cld
pop
outsb
int3
mov
mov
mov
xor
mov
adc
sub
in
fs
movb
add
pushf
ret
ds
sbb
mov
xor
enter
add
cmpsl
jmp
xchg
lahf
dec
shrb
lock
popf
idivb
imul
pop
xor
fs
ss
aaa
int3
jnp
js
cmpsb
push
hlt
rorb
fidivrs
cmp
gs
ja
scas
or
jae
popa
shll
leave
cltd
cmp
cwtl
jb
sub
lcall
fwait
subl
xchg
je
bnd
or
and
pop
pop
jmp
aas
sub
rcll
adc
inc
pop
dec
dec
fadd
mov
jnp
xchg
mov
or
cmp
pop
dec
push
xor
addr16
sbb
adc
pop
jnp
jecxz
fildl
clc
cli
out
adcb
push
sbb
mov
adc
pushf
addr16
imull
addr16
vpshuflw
jne
in
fisttps
insb
xorb
mov
imul
inc
sti
lahf
push
scas
andb
or
test
jmp
jl
jnp
in
and
sub
scas
xor
bound
cmp
xchg
aas
xor
push
push
cmp
ret
lods
lods
or
sbb
sub
jns
mov
je
insb
xor
std
stc
xchg
and
in
inc
mov
aaa
or
arpl
pop
in
fwait
aam
sbb
lods
int3
inc
test
dec
lret
cltd
call
lods
push
jg
cltd
shrb
lcall
ret
imul
pop
sti
data16
inc
scas
xor
pop
movsl
mov
scas
enter
cbtw
es
cwtl
mov
mov
iret
pop
enterw
xchg
xor
lahf
adc
lods
movsl
data16
les
mov
jle
aad
mov
push
and
loop
enter
jno
ror
jnp
int
push
pop
ja
jp
mov
test
lahf
mov
aad
ds
into
std
mov
sahf
inc
ljmp
xchg
dec
lret
scas
pop
sbb
sbbb
mov
inc
dec
xchg
pushf
inc
mov
in
adc
mov
lds
mov
fisubrs
mov
dec
sbb
enter
shll
movsb
mov
inc
cmpsl
out
in
sar
xor
cmpsl
pop
test
pop
fcmovnu
in
ret
mov
jp
mov
xchg
test
hlt
mov
add
daa
scas
cltd
imul
or
inc
jg
jmp
daa
pop
addr16
aam
adc
mov
pop
insl
xchg
pop
ret
shrl
push
cli
push
lea
mov
and
notl
ret
sbb
aas
inc
das
clc
jmp
sub
into
nop
sub
mov
mov
mov
and
push
stos
cld
push
xorb
jl
push
sub
mov
sarb
fdivl
outsl
jl
fmulp
adc
mov
roll
jne
in
test
or
push
es
lahf
stos
and
rcrl
sbb
mov
dec
sbb
cltd
mov
fbld
fs
adc
add
cltd
sbb
rorl
loopne
in
aas
mov
ret
and
or
sbb
mov
push
push
ljmp
sub
roll
adc
mov
mov
loopne
jnp
pop
pop
or
mov
xchg
fcoms
cmp
pop
jnp
lds
hlt
lret
lds
addr16
adc
pop
test
lret
mov
ret
inc
fildl
xchg
sti
push
mov
xchg
out
cld
popf
loopne
inc
jnp
fdivl
aaa
sub
push
mov
rorb
cwtl
addr16
int
loope
in
push
sub
mov
adc
mov
push
adc
inc
jecxz
pop
jno
jl
pop
ss
test
xchg
std
int
adc
inc
push
lods
jo
dec
jbe
out
in
mov
pop
add
xcrypt-ofb
cmpsl
push
sub
ss
movsl
cmp
lock
jne
adc
jmp
jle
arpl
daa
sbb
rorl
pop
and
sbb
dec
sub
stc
pop
add
dec
stc
xchg
add
clc
mov
adc
and
pusha
jp
inc
stc
dec
dec
xchg
insl
mov
sub
lods
scas
stc
mov
repz
dec
fidivrl
sbb
mov
adc
ffree
test
dec
mov
js
pop
adc
jnp
add
aam
mov
mov
mov
js
sub
pop
mov
inc
repz
cmc
not
mov
mov
scas
xchg
gs
cmp
mov
int
adc
jmp
std
pop
sbb
pusha
fs
xchg
push
xchg
cmpsb
cmpsl
sbb
jnp
or
jle
mov
or
mov
cmp
push
inc
push
ds
push
push
pop
lods
aad
outsb
mov
mov
dec
xchg
dec
mov
or
ljmp
mov
in
sti
sub
ds
add
popl
adc
popa
sbb
fsubrp
inc
sbb
rorl
jns
fnsave
jnp
sti
cwtl
xchg
mov
adc
sub
fbld
jle
ficoms
cmp
out
mov
mov
cld
fisttps
jb
inc
loopne
jns
pop
sub
mov
inc
lock
cmpsl
lods
adc
icebp
cli
mov
jl
cmp
push
nop
int
cmpsb
lret
stc
loopne
dec
mov
fs
adcb
call
pop
push
pushf
mov
xor
shrl
insl
xor
xchg
lret
cmpsl
andb
mov
mov
cs
mov
lret
fstpt
and
dec
push
xor
std
jne
in
loop
int3
outsb
pop
fs
subb
pop
cmp
push
push
dec
jecxz
aas
imul
das
roll
js
lods
out
test
cmp
into
mov
dec
and
pop
jns
negl
pop
adc
sub
cmc
ret
or
adc
push
inc
add
es
imul
push
dec
test
dec
inc
pushf
or
mov
and
iret
mov
jbe
push
xor
xor
and
cmp
xlat
mov
daa
sbb
add
adc
cmpsb
cmpsl
ret
mov
aad
add
jae
test
mov
out
das
inc
stc
js
movsl
push
imul
push
test
sbb
push
inc
dec
xorb
sahf
ss
aam
dec
pop
xchg
mov
out
sbb
fcoms
arpl
repz
jbe
pop
lea
or
push
lds
jmp
jnp
mov
xor
xor
add
addr16
cmp
pop
mov
push
insl
cmpsl
pop
test
cmc
mov
aaa
dec
mov
push
mov
out
lahf
out
xor
shlb
push
and
push
loop
enter
cltd
ret
sbb
mov
sti
mov
and
dec
jp
xor
dec
out
rcll
shrl
sahf
mov
pop
lahf
sub
sar
lock
mov
mov
mov
sub
add
xor
sbb
fimull
mov
stc
push
push
inc
xchg
jns
xchg
dec
jmp
arpl
fwait
cmp
mov
cmpsl
lds
in
add
pusha
add
pop
rorl
and
push
outsb
call
test
jae
xchg
aad
pop
jno
mov
xchg
aad
sbb
cmpsl
pop
pushf
jno
imulb
add
mov
adc
pop
dec
sbb
jge
loop
mov
and
lods
push
xor
inc
fisttps
loopne
ja
xlat
mov
mov
jb
or
popf
aaa
aad
out
aam
mov
inc
sarl
popf
mov
testb
mov
push
fmul
xchg
data16
mov
aad
cmc
lds
scas
aad
repz
bound
lods
loop
cmp
js
out
mov
ss
add
inc
subl
fsubs
pop
mov
jl
scas
sbb
out
std
loopne
jmp
jb
jge
push
orl
xchg
mov
adc
repz
mov
rcll
stos
hlt
fs
sub
push
dec
es
inc
cmc
cli
fcomps
xor
adc
test
mov
lods
inc
insl
fs
push
jno
test
popa
mov
data16
cmp
xchg
and
hlt
jae
sbb
pop
call
adc
int
stc
fsubrs
ret
and
mov
out
push
lds
or
aaa
popf
push
mov
testb
xor
icebp
scas
or
fs
mov
dec
testb
jl
sahf
int3
adc
out
lds
push
mov
movsl
dec
mov
and
xor
ja
ja
stos
rcrl
hlt
test
push
pop
movsl
fsts
adc
jmp
mov
ret
gs
ret
cmp
sub
out
jp
mov
repnz
nop
xchg
repz
in
outsb
addl
adc
jb
addr16
repnz
add
xorl
fs
inc
or
cmpsl
cmpsb
ret
mov
js
hlt
and
xlat
xchg
xor
mov
das
cmpsb
jo
fdivl
je
jg
loope
jg
xor
pop
cltd
ja
and
sbb
mov
xor
add
or
mov
jge
pop
xchg
add
inc
xchg
sbb
mov
enter
jl
aas
fmulp
aas
dec
xchg
or
xchg
lods
xchg
leave
outsl
push
xor
add
es
imul
int3
lahf
pop
mov
shll
aas
ljmp
jecxz
sbb
shlb
xchg
or
cmp
pop
sub
add
fdivrl
lods
sbb
or
jno,pn
add
cmp
hlt
xor
notl
inc
outsl
push
movsl
into
out
int
pusha
inc
je
adc
idivl
pop
push
or
push
xchg
mov
lret
cmp
loope
stos
adc
pop
pop
push
pop
setns
sub
dec
dec
sbb
fcompl
and
inc
insb
call
ret
push
push
fisubs
xor
add
cmp
ret
xchg
cltd
xchg
pop
cmpsb
pop
pusha
mov
fwait
js
lods
cmp
sbb
jge
sti
dec
jmp
int3
jnp
jp
add
ja
aam
sub
cmovb
dec
in
jmp
sbb
dec
shrl
in
jne
lret
mov
sbb
fmulp
xorl
sahf
xor
dec
add
jo
pop
mov
arpl
adc
and
adc
notb
jmp
repz
outsb
push
dec
int
fildl
gs
daa
jg
mov
dec
insl
shrw
cmp
jecxz
adc
sub
ret
pop
stos
sbb
aam
and
stos
sbbb
cmpsl
bound
popf
pop
pop
lret
outsl
sub
mov
lret
mov
loop
out
cmpsl
cld
mov
jecxz
mov
ja
add
ja
xor
jle
outsb
popf
add
xchg
into
xchg
outsb
xchg
aas
out
loope
adcb
xlat
out
lds
mov
sbb
jns
inc
bound
push
or
lock
in
cmpb
cs
sbb
push
add
sbb
gs
adc
mov
divb
sub
loopne
ds
xlat
insl
mov
ds
mov
imul
xchg
pop
sbbl
rcll
xchg
inc
or
faddl
sbb
ret
add
xchg
fucomip
test
pusha
adc
add
jmp
sbb
mov
lock
fistpl
mov
jo
jle
imul
cs
lret
divb
pop
xor
mov
pop
movsl
ror
sub
out
mov
into
xchg
lea
aas
arpl
push
mov
jns
out
out
add
cmp
in
xor
call
shll
dec
cmp
loop
sbb
bound
push
es
sbb
dec
sbbl
call
jne
sbb
inc
repz
outsb
filds
outsl
outsl
push
ds
pop
jmp
mov
push
std
dec
and
cmpb
test
pop
xchg
mov
lcall
lds
popf
push
pushf
popf
data16
enter
or
mov
fnstenv
xchg
cmp
dec
jmp
xchg
leave
jmp
pop
cld
xchg
test
xor
lock
xor
or
lods
push
jae
dec
sete
loop
icebp
jle
jg
xchg
xchg
pop
sbb
icebp
mov
jecxz,pn
push
fldl
pop
outsl
pop
mov
dec
out
xor
ret
push
orb
fstpt
and
cmp
icebp
cmp
sarb
adc
data16
loope
out
ljmp
cwtl
data16
mov
xchg
loopne
or
or
inc
jns
or
fdivl
mov
mov
fsubrl
clc
rcll
fnstcw
je
gs
ret
jge
jne
mov
push
fwait
cli
lock
call
sbb
call
cmp
sub
add
xchg
adc
adc
sbb
stos
pop
and
and
into
and
push
adc
ss
mov
adc
ficoml
or
mov
jmp
loope
xor
push
jne
or
sub
mov
adc
mov
jmp
xchg
jnp
imul
adc
and
add
adc
cmc
fldenv
mov
xor
loope
jg
xlat
push
xchg
subl
int3
jl
mull
popa
and
pop
or
hlt
mov
xchg
imul
or
dec
fs
dec
jge
add
fisubrs
jmp
rcr
add
insb
adc
stc
nop
dec
repnz
hlt
pop
aam
jp
loopne
inc
pop
dec
fstps
adc
mov
add
rep
push
testb
sar
mov
adc
pop
jecxz
dec
insb
mov
mov
rcrb
mov
sbb
add
cmp
or
aaa
mov
add
ds
lock
push
sahf
out
mov
pop
shll
xor
in
add
xor
add
fimuls
jp
mov
iret
pusha
sbbl
mov
mov
xor
jl
cwtl
mov
push
daa
xor
sbb
pop
add
mov
sbb
add
push
cld
lcall
adc
popa
aam
mov
cmc
aam
push
lds
dec
pushf
lea
jno
hlt
add
pop
mov
dec
add
test
enter
shlb
pop
pop
enter
fcomps
stos
iret
ja
sub
cmp
mov
aam
cmp
jp
arpl
rcrl
movsb
sub
cld
or
adc
data16
xor
jge
xor
mov
inc
js
inc
pop
mov
push
mov
xchg
fldl
scas
mov
rcrb
inc
mov
mov
sub
jmp
sarl
cld
icebp
aas
lret
push
fwait
dec
aaa
add
mov
jo
sbb
loopne
jecxz
fdiv
or
stc
xor
gs
nop
in
mov
lods
inc
push
jg
fldl
imul
jmp
lods
test
mov
jmp
ljmp
dec
pushf
mov
insb
cwtl
pop
lods
lcall
jle
shll
lds
sbb
mov
push
cmp
into
call
xor
mov
adc
jb
aaa
and
sbb
jno
sub
icebp
push
push
daa
mov
out
sbb
scas
loop
fsubl
inc
xchg
aam
mov
adc
mov
repz
lea
aas
cli
mov
jne
mulb
jecxz
enter
ljmp
jae
cmp
inc
sub
stc
xchg
or
fimuls
js
xchg
mov
xor
test
push
fcmovne
je
test
pop
jb
jle
cwtl
out
xchg
pop
mov
sub
cltd
add
sbb
pop
popa
mov
jp
int3
leave
xor
mov
jmp
or
push
test
shlb
aam
xor
sbb
xchg
aas
xchg
jl
push
xchg
cmpsb
imul
jnp
dec
sub
nop
imul
popl
mov
mov
jle
fprem
push
fldl
mov
mov
add
dec
fisubrs
mov
sub
dec
jbe
jge
cmp
andl
add
add
and
xor
orb
jle
cmp
je
ret
aad
push
jmp
pusha
mov
sti
insb
jno
sarl
scas
stos
addr16
sbb
lret
clc
add
in
mov
dec
popa
test
pusha
scas
js
sbb
test
out
push
cld
sahf
ret
iret
jae
and
stos
mov
xchg
jge
pop
cld
pop
movsl
test
std
push
dec
pusha
adc
fcompl
pusha
cmc
rclb
loopne
add
xor
mov
mov
lcall
out
mov
fisubl
pushl
movsl
out
fprem
lock
sbb
push
aas
xchg
adc
addr16
lock
lret
mov
das
popf
mov
mov
outsb
ja
xor
mov
pop
pop
jmp
popf
js
in
enter
das
dec
lock
sbb
mov
xchg
shlb
or
jns
xchg
out
adc
push
adc
and
fmul
outsb
insb
jns
pop
cld
jmp
dec
and
pop
imul
fs
adc
mov
mov
mov
in
sbb
jg
clc
loope
push
mov
fwait
leave
jae
inc
ret
cmpsl
jle
repnz
xchg
into
lock
test
shrb
test
dec
inc
pop
adc
xchg
sbb
mov
lods
mov
lcall
push
dec
sbb
into
scas
fwait
mov
shr
dec
xchg
mov
pop
fnsave
cvtps2pi
cs
je
out
lock
mov
push
test
cmp
pop
adc
stc
pop
cmpsb
push
sub
cmp
pop
loope
cmp
sub
call
xchg
inc
iret
hlt
rclb
sar
pop
add
jne
inc
fimull
call
repz
mov
adc
jo
xchg
rcrl
cmp
sbb
cli
push
mov
pop
fisttpl
data16
and
inc
outsl
iret
addl
movsb
mov
rep
lock
push
inc
jge
pop
fistl
pusha
and
mov
adc
push
dec
loope
imull
outsb
jge
pop
movsb
pop
dec
clc
mov
or
add
dec
add
and
jo
push
daa
add
jmp
and
xor
in
inc
cmp
test
loope
ss
aad
mov
jp
outsl
push
inc
bound
mov
ljmp
shrl
ficompl
xchg
mov
cmp
push
pop
subl
movsl
push
cmp
mov
xchg
popf
out
ret
cltd
popa
imul
pop
or
xlat
add
inc
aam
adc
push
sbb
pushf
test
dec
in
push
xchg
mov
shlb
cmp
fidivrl
mov
popa
push
pop
pop
mov
jl
jo
stos
testb
cwtl
stos
ficompl
push
push
mov
inc
dec
and
mov
aaa
and
pop
mov
dec
fistpll
xchg
add
cmpsl
or
pushf
cltd
out
jae
mov
pop
xchg
mov
pop
mov
xlat
push
pop
test
jbe
sub
or
sub
dec
adc
dec
pop
sub
xor
jne
div
popf
rcll
add
pop
xchg
sbb
pop
add
aad
cmp
ss
popa
std
movl
push
ljmp
lods
repnz
in
out
ss
adc
movsb
arpl
inc
mov
out
push
sbb
pop
pop
push
push
mov
frstor
fldenv
xor
jb
add
xchg
mov
add
sub
test
mov
mov
leave
ja
ffreep
mov
jae
sub
pop
mov
cmp
inc
add
or
mov
inc
push
lcall
ret
mov
loope,pt
rolb
mov
fsts
test
push
aad
cmp
movsb
mov
bound
mov
sub
data16
push
add
lods
add
jl
daa
xor
stc
pop
lds
fcompl
lds
add
jmp
ret
cmp
inc
popf
adc
into
push
mov
shrb
jbe
cmp
dec
sahf
fdivl
icebp
mov
cli
jbe
dec
fxch
push
hlt
loopne
pop
movsb
lea
push
in
test
cli
pop
outsb
cwtl
lock
sarb
aam
xchg
push
jne
shrl
or
movsb
push
push
xlat
jge
mov
and
fcmovnu
mov
jae
aaa
out
rcll
dec
rol
hlt
sub
call
fbld
jecxz
fbstp
adc
mov
add
dec
pop
xchg
mov
test
mov
jg
sbb
mov
xor
mov
into
jmp
mov
in
fsts
cld
repz
inc
ret
mov
loop
jne
test
and
dec
jae
mov
inc
xchg
stos
outsl
cmpsb
daa
repz
xor
mov
mov
xlat
inc
icebp
mov
lret
mov
in
jb
mov
push
jg
std
add
gs
or
aad
movsb
dec
aas
out
fsubrs
test
lods
gs
cltd
push
inc
arpl
repnz
ja
inc
mov
mov
adc
add
push
push
std
aam
or
push
mov
mov
and
add
add
cli
mov
dec
aad
xchg
loopne
into
aaa
sub
mov
frstor
pop
ljmp
js
inc
mov
out
pop
push
jns
add
xor
cmp
xor
in
xor
fwait
in
ja
lds
add
or
es
xchg
cmpsb
outsb
and
mov
mov
jb
es
jnp
repz
sub
sub
jbe
pushl
fs
sbb
daa
sbb
xor
push
fdivl
call
sbb
lcall
jb
push
imul
imul
inc
inc
mov
or
lods
push
pop
xor
adcl
sahf
je
imull
idiv
out
or
jmp
lock
ret
cmp
ja
and
cli
pop
shrb
pop
in
jne
xorb
inc
dec
and
fbstp
add
lods
ljmp
test
scas
jg
xchg
js
and
aad
sbb
push
std
xor
mov
lods
push
mov
sarl
fs
pop
mov
mov
addr16
sub
push
mov
push
cmpsl
popa
sub
je
stos
jno
lds
rorb
sbb
cmpsl
repz
lods
push
fwait
mov
iret
fisubrl
jno
jnp
adc
pop
push
pop
adc
mov
pop
mov
loopne
shl
mov
xchg
push
inc
outsl
loope
das
pause
fs
sub
sub
and
imul
or
xorl
and
adc
lcall
lea
outsl
cmp
test
or
movsb
pop
and
inc
mov
lea
push
in
fs
ja
movsl
jb
inc
mov
jnp
ljmp
jmp
leave
dec
jae
sbb
out
mov
mov
sbbl
pop
pop
popf
ficompl
add
in
hlt
cmp
rorl
mov
push
and
cmp
push
icebp
or
outsl
testb
dec
loop
mov
enter
dec
mov
pop
shl
ljmp
out
or
bound
pop
stos
std
mov
data16
jne
xor
dec
mov
es
sbbl
dec
int3
or
test
out
push
pop
outsl
in
fstpt
add
add
pop
in
lea
imul
mov
out
xchg
bound
insb
push
jns
or
cwtl
sub
dec
pop
mov
cwtl
pop
out
mulb
jae
ljmp
adc
push
data16
popa
sub
les
fwait
mov
cmpsb
jnp
cmp
inc
aad
dec
mov
andl
or
das
inc
xchg
push
sahf
xchg
es
jge
xor
ja
arpl
cmp
mov
mov
sbb
cmp
scas
mov
mov
jl
pop
movsl
pop
loop
out
pop
in
push
mov
pshufw
sub
or
or
mov
xchg
iret
ds
pop
in
sub
ffreep
push
loopne
mov
push
sub
sbb
lahf
lcall
loopne
mov
xchg
shlb
cmp
out
and
push
aas
ret
xchg
push
adcl
cmpsb
repz
sbb
xor
pop
test
mov
hlt
xor
popa
push
scas
lret
ljmp
std
xor
repz
stos
out
xor
mov
adc
outsl
add
jae
iret
xor
jp
outsl
sbb
nop
xchg
jbe
clc
mov
cmp
lock
mov
divb
add
fs
or
xchg
sub
dec
pop
and
xor
mov
imul
cmpsl
test
dec
adcl
mov
jmp
push
cmp
push
rcrb
pop
inc
cmc
sub
stc
or
arpl
lcall
sbb
lret
cmp
or
push
dec
pusha
dec
push
loope
sti
jmp
bound
adc
add
sub
pop
and
int
or
sbb
fsts
dec
inc
dec
sub
std
loop
scas
add
cmp
int
xchg
push
jno
int
call
add
jb
jb
cmpsl
nop
xor
cltd
pop
jecxz
xor
das
call
inc
dec
adc
pop
ret
movsl
mov
push
lahf
aam
mov
div
or
mov
outsl
mov
addr16
insb
pop
pop
push
pop
mov
sbb
sub
call
inc
xchg
cli
jns
jne
sbb
cld
fcompl
xor
push
repz
cmp
mov
orb
shl
dec
xchg
dec
or
adc
insl
cmp
shll
cmp
pop
enter
push
fs
inc
andl
adc
mov
aad
ficomps
and
pop
adc
shl
lret
jl
pop
jp
outsb
ja
in
dec
dec
fsubr
jmp
sar
test
mov
sub
xor
loope
xacquire
inc
dec
mov
inc
adcb
inc
aam
imul
and
fistl
iret
jne
mov
sub
cmp
jge
outsb
sub
sub
inc
clc
xchg
leave
in
movsl
stos
int3
mov
sbb
lods
mov
in
out
sub
mov
push
mov
int
push
dec
into
mov
ljmp
in
sarl
jp
push
jbe
cmpsl
push
sub
mov
sub
decl
xor
mov
jge
mov
cwtl
inc
daa
cmpsl
mov
ss
fsts
push
and
add
les
pop
test
or
pop
fcoms
xchg
mov
mov
mov
xchg
inc
jno
or
mov
into
and
adc
and
shr
xchg
pop
dec
addr16
gs
pop
js
js
sbb
and
negb
pushf
or
maxps
pusha
cmc
mov
arpl
pop
idivb
mov
cli
mov
ds
jecxz
stc
xor
mov
inc
xchg
ds
xchg
jge
push
rcl
sbb
xor
inc
rol
lahf
js
inc
xchg
mov
pushf
push
inc
call
ljmp
test
mov
fwait
scas
loope
jp
inc
out
pusha
mov
clc
push
fs
add
push
int
cmp
and
fcoml
push
cmp
roll
decb
and
stc
fimuls
xchg
cltd
out
jb
insl
mov
push
jmp
or
xlat
test
or
push
in
test
xor
popf
test
aad
mov
jno
aad
or
or
pop
xor
cmc
mov
sbb
rcl
into
leave
dec
or
mov
pop
and
push
and
out
pop
push
movsb
or
inc
add
pop
xchg
push
loopne
cwtl
jnp
xchg
inc
inc
mov
inc
pop
mov
add
stos
aad
in
mov
adc
pop
imul
sub
iret
out
or
mov
sahf
cmp
inc
cmpl
xor
adc
sti
lret
jo
cmpl
jbe
aaa
out
in
sub
xor
lret
sahf
dec
cmp
bound
xchg
iret
dec
pop
push
add
xor
mov
sub
cmp
pop
jne
fmull
cmp
cmp
rcll
cli
call
insb
ds
aad
mov
sbb
mov
inc
std
push
mov
add
stos
mov
sub
shrl
ret
imulb
cmp
xchg
mov
inc
test
test
and
out
jo
test
jge
adc
dec
loop
ret
or
dec
repz
es
pop
pop
mov
xlat
inc
xor
out
fwait
jno
mov
sbb
in
fcoms
fstpt
add
int3
mov
dec
mov
sub
mov
fistpll
mov
fidivs
clc
fisttpl
sub
dec
mov
cmp
dec
hlt
test
or
jl
pop
mov
mov
xor
push
adc
jmp
lret
mov
cmp
xchg
mov
xchg
pop
push
add
lcall
mov
fistps
xchg
sbb
out
test
loop
push
jb
repnz
fwait
test
popa
adc
les
mov
inc
divl
cli
push
je
xor
addr16
std
divl
pusha
scas
ljmp
mov
pop
in
mov
shrb
dec
subb
inc
je
add
lds
clc
xor
seto
leave
pop
sub
jo
or
aaa
cmp
paddd
adcl
loope
into
aad
pusha
jne
or
mov
ds
jbe
dec
and
sub
mov
cmc
sbb
jns
arpl
cmp
in
sub
lea
adc
or
mov
ja
mull
dec
aad
daa
or
mov
mov
insl
mov
scas
mov
pop
lods
call
mov
test
mov
movb
ljmp
daa
inc
push
or
dec
add
cmc
movl
inc
movsb
push
mov
sbb
push
inc
push
in
dec
mov
dec
insb
push
cmp
xor
mov
push
stc
inc
mov
xchg
stos
pop
dec
cmpsb
rorl
jge
dec
stos
and
or
inc
outsb
push
insl
or
mov
dec
iret
mov
addr16
pop
dec
into
cltd
int
inc
shrb
push
sti
ljmp
jl
fincstp
xchg
pmullw
or
add
pop
xchg
imulb
shll
shll
fnstcw
xchg
cmc
xchg
lods
push
push
xor
in
lds
cmp
or
cmc
push
jb
mov
xor
inc
pop
mov
push
dec
int
sti
daa
out
pop
or
cmp
lahf
imul
fidivrs
adc
in
fidivl
rorb
sarb
int3
je
cmpsl
movsb
cltd
out
pushf
jmp
pop
fldenv
fisubrl
or
pop
cltd
les
js
inc
xlat
cmpsb
pushf
dec
loopne,pt
iret
xchg
mov
push
sbb
or
xor
std
or
insl
lock
imul
pop
mov
pop
xchg
fdivrl
inc
push
addr16
aas
loope
orb
incl
sub
ret
push
mov
stos
xor
clc
jbe
int3
sub
ja
lods
imul
jp
mov
flds
xchg
mov
lods
ret
ds
fidivs
or
js
andl
cmp
or
push
pop
stos
addr16
push
in
mov
lods
mov
jno
mov
or
fists
arpl
mov
and
mov
lock
mov
mov
into
xchg
push
push
dec
pop
aas
cmc
jle
mov
aam
jmp
cmpl
mov
xchg
xchg
lret
hlt
iret
imul
out
sbb
stc
addb
dec
add
pop
add
pop
cmc
mov
cld
repz
push
pop
adc
into
jne
mov
push
add
sbb
sbb
shrl
popf
ss
fstp
sub
jno
adc
cmc
iret
pop
rclb
sarb
mov
add
or
xchg
jno
iret
mov
xor
lods
and
xor
imul
jg
cwtl
mov
xchg
cld
call
es
cmpsl
test
aad
loope
mov
xor
lock
xchg
mov
mov
ret
mov
into
ljmp
sti
push
test
test
sbb
inc
mov
pushf
icebp
fcoms
inc
es
xchg
shlb
scas
adc
xchg
xor
xchg
mov
jp
push
push
stos
pop
jecxz
aas
mov
pop
jecxz
test
subl
lds
sar
outsb
sub
mov
mov
mov
scas
fistl
xchg
jbe
lds
loopne
dec
dec
pop
xchg
or
push
fldt
xchg
bound
outsb
cmp
andl
out
in
imul
jecxz
call
cli
pusha
add
sbb
push
or
mov
pop
shlb
mov
test
repz
movb
popf
push
jle
mov
cmpsl
and
jae
xor
mov
or
mov
std
mov
iret
add
inc
sti
add
cmc
xorl
loop
adc
xor
cmp
shll
fmull
out
jae
cmp
and
mov
or
orl
xor
jmp
push
add
pop
pop
sub
fstpt
les
add
leave
es
and
and
xchg
mov
filds
and
mov
out
je
cld
das
ja
pop
div
cwtl
shll
aaa
inc
cwtl
pop
nop
add
test
call
adc
dec
add
cmp
push
push
ljmp
jne
xchg
in
pop
in
dec
pop
mov
roll
movsl
adc
cmp
add
or
lret
pop
jnp
inc
xor
ret
ud1
stos
cmp
adc
lods
inc
cmpsl
pop
jge
stos
lds
in
repnz
add
sub
lahf
jnp
push
out
dec
xlat
sbbb
aam
call
mov
xor
or
or
subb
adc
pop
lahf
sbb
mov
sbb
dec
push
add
lcall
pusha
or
lods
or
add
imul
xchg
cmp
jns
cmp
push
jns
push
aad
cld
loope
mov
nop
or
jo
or
add
mov
gs
jb
pop
jle
dec
pop
fwait
mov
sub
jmp
mov
movsl
or
in
adcb
clc
sub
jo
adc
xchg
and
lahf
aas
scas
int3
inc
cmc
push
xor
cwtl
mov
pusha
ljmp
push
fcmovnu
mov
fwait
pop
gs
nop
in
lods
fstl
sahf
jns
mov
mov
rep
int
jmp
cmc
push
jle
or
sbb
mov
dec
js
mov
or
mov
arpl
jle
aad
sti
inc
or
lcall
pop
add
in
test
cli
outsb
mov
mov
add
loop
test
cmp
clc
iret
call
push
jge
pmaxub
xchg
stos
sub
lret
mov
int
cmp
es
pop
dec
xchg
xchg
inc
or
bound
outsl
popf
sbb
mov
xor
push
cmc
mov
call
dec
mull
stos
dec
and
out
inc
jge
stos
outsl
hlt
or
fs
inc
add
dec
sbb
add
cs
in
int
mov
xchg
sti
inc
push
pusha
fs
mov
jno
xor
movsl
fdiv
aad
xchg
sbb
ja
push
addr16
mov
xchg
inc
sbb
rcrb
pop
add
imul
fwait
es
push
jmp
sbb
dec
mov
adc
push
mov
inc
mov
sbb
pop
mov
scas
popf
fldl
adc
adc
inc
out
out
cmpsl
sbbb
cs
sub
mov
cmp
ljmp
stc
xor
mov
add
es
mov
mov
outsb
lods
ss
jb
leave
movsb
pushf
sahf
or
lock
rcll
aam
mov
jle
insl
cmp
xor
xor
test
add
jns
jge
pop
and
add
fcmovnb
fidivs
stc
lea
in
fstpl
pop
push
inc
nop
gs
fadds
sbb
les
cltd
push
inc
push
jle
mov
rclb
aad
cli
or
pop
xor
mov
pop
out
xchg
jne
gs
aas
neg
and
adc
icebp
mov
add
cld
or
lds
sub
jecxz
fld
fdivl
inc
into
or
sub
aad
sarb
sbb
in
mov
pop
scas
test
sub
or
jbe
lret
push
loop,pn
ret
or
xchg
clts
test
push
sub
loopne
inc
repz
jnp
mov
mov
sbb
mov
xchg
test
out
or
pusha
or
into
das
ret
popa
imul
lahf
movsb
push
mov
sub
push
mov
mov
imul
sub
push
jmp
push
insb
add
in
and
aad
mov
push
jns
mov
aad
mov
cli
lcall
scas
push
ljmp
mov
xchg
inc
or
fiaddl
je
cmp
out
pop
ds
push
mov
cmp
lcall
cwtl
cwtl
movsb
ffreep
pop
push
lahf
or
sbb
mov
les
ljmp
aas
fiadds
xchg
jl
lea
pop
cli
mov
push
and
push
loopne
test
push
mov
test
or
xchg
push
inc
sub
bound
dec
imulb
inc
lds
jl
xchg
mov
loop
loopne
mov
jae
je
gs
dec
repnz
jmp
cmpsb
arpl
shl
imul
add
pop
rclb
sbb
inc
shll
outsb
in
adc
mov
das
pop
mov
xor
inc
mov
aaa
ljmp
int
jge
out
and
sbb
mov
fbld
inc
int3
dec
push
outsb
ja
in
sbb
arpl
pop
xorl
fldt
loopne
or
push
rorb
incb
sub
dec
adc
pop
test
pop
xor
shlb
xchg
sbb
push
in
xchg
adc
mov
sbb
scas
jae
jo
and
mov
and
fxch
push
test
pop
inc
and
out
add
adc
dec
stc
jge
mov
mov
je
enter
lea
sahf
in
and
jne
movsl
jmp
std
xor
mov
cwtl
ljmp
add
test
pop
adc
pop
pop
mov
cmp
fistpl
sbb
dec
int
inc
int
inc
js
movsb
push
xor
xchg
or
ds
dec
mov
ds
and
fs
jecxz
mov
subl
and
fcomip
into
and
mov
sub
subl
call
dec
inc
shr
inc
adc
sbb
dec
sbb
pop
or
lcall
jae
inc
hlt
add
xor
faddl
xlat
jb
ja
or
out
jae
mov
fwait
jecxz
sub
jecxz
xor
dec
xchg
out
mov
xor
or
addl
pop
movsb
loopne
data16
push
lea
int
aam
pop
icebp
into
lret
dec
movsl
shr
cmp
cmc
mov
shlb
or
cmpsl
adc
mov
jne
std
sub
icebp
dec
fstl
je
addr16
call
jge
stos
int3
clc
cmpsl
push
cmp
insb
mov
fnstsw
mov
fsts
imul
and
insl
sub
std
pop
adc
sbb
cmp
das
fistpll
js
dec
jecxz
push
mov
cmc
aaa
fs
mov
lret
inc
cmp
jg
pushf
sub
xor
xchg
lret
or
imul
int
cmp
ftst
mov
jb
xor
xlat
shlb
push
fcmovu
loopne
lds
pop
mov
repz
or
push
mov
sbb
stos
je
out
jo
sub
lret
mov
popf
repz
insl
mov
dec
push
dec
in
and
adc
outsb
imul
jo
ljmp
movsl
push
lods
daa
or
mov
xor
push
outsl
test
xchg
push
addr16
cltd
out
xchg
out
and
pop
xchg
cmp
lret
cmpps
mov
mov
sbb
ret
aam
ret
stos
into
push
jns
jge
cmp
es
cmpsl
dec
xor
add
aas
mov
mov
mov
mov
push
dec
mov
inc
push
sbb
mov
or
push
add
loope
sub
je
jl
jno
mov
pop
test
in
test
aaa
dec
pop
cmp
or
xor
inc
icebp
or
iret
mov
icebp
mov
adc
ret
sbb
add
cmc
inc
inc
cmp
mov
shl
adc
icebp
or
mov
mov
dec
cmpsl
jmp
xchg
cmovp
mov
loopne
fists
xchg
add
add
or
pop
lahf
xchg
fcmovb
pushf
xchg
add
mov
sub
jo
mov
rcrb
mov
xor
rorb
jmp
and
ljmp
shll
cmpsb
pushf
xchg
popf
cmc
jl
xor
pop
mov
pop
aam
push
sbbb
repnz
iret
pop
rcl
sbb
pop
sub
add
cld
inc
rcrl
jg
pusha
stc
insl
xchg
cld
hlt
int
ret
sti
xchg
xchg
pop
adc
cli
lcall
mov
insb
inc
xor
jne
aam
mov
shl
movsb
sbb
ficoml
xchg
mov
hlt
add
movsb
cmpsl
jns
scas
xchg
push
mov
pusha
xor
rclb
adc
cld
push
cmp
add
dec
jl
cmpsl
dec
add
daa
popf
xor
mov
inc
xor
stc
mov
sahf
xor
pop
push
dec
jg
addr16
out
loopw
cltd
cmc
jle
pusha
lods
shlb
fnstenv
pop
inc
adc
aam
stos
mov
imul
push
and
and
iret
ljmp
mov
pop
into
jne
dec
mov
push
xchg
push
mov
movsl
ret
stos
mov
jo
icebp
xor
sub
stc
push
sbb
or
add
aam
repnz
bound
sarl
sub
jne
outsb
pop
je
pop
sbb
push
decb
dec
icebp
or
inc
inc
jno,pn
test
sbbl
jg
pop
sub
pop
repz
mov
and
daa
test
cmp
cmp
cli
xchg
daa
jl
aaa
xchg
jns
dec
pop
nop
xchg
loopne
andb
int3
movsb
sbb
cmp
pusha
inc
leave
popa
loopne
push
in
or
es
jmp
or
ror
push
imul
mov
sub
out
ss
mov
test
push
int
movsl
test
rcrb
sbbb
loope
js
out
fidivl
rclb
and
xchg
sbb
in
mov
hlt
in
mov
leave
add
cmpsl
inc
push
fisttps
cltd
sbb
xor
pop
push
dec
mov
inc
jp
sbb
ljmp
mov
in
push
ret
mov
stc
adc
enter
cmpsb
pusha
insb
or
jp
inc
lcall
mov
pop
lahf
pop
sbb
inc
xor
test
aad
orl
loope
jecxz
pop
mov
gs
out
fsubs
mov
fs
mov
push
pop
js
lcall
mov
pushf
mov
mov
pop
pusha
gs
fwait
mov
pop
inc
fadds
iret
xor
loope
mov
jmp
in
out
ljmp
and
inc
fldenv
fisubrl
inc
xchg
mov
mov
push
dec
pushf
add
jle
into
add
clc
dec
push
add
push
and
or
and
popa
pop
and
lea
pop
lcall
insb
movsl
sub
pop
imul
mov
push
enter
or
mov
sub
adc
pop
fdivrl
aam
push
inc
nop
xchg
into
iret
clc
cmc
incl
into
jecxz
lods
add
divl
mov
sbb
or
and
xchg
dec
push
call
xor
dec
push
push
and
daa
or
sub
out
jns
jns
or
sub
mov
dec
ja
stc
addr16
mov
test
movsl
pop
push
je
hlt
pop
outsb
add
scas
dec
mov
outsl
imul
orb
fwait
jnp
push
cmp
pop
nop
cmpsl
cmp
notl
inc
push
xlat
sti
enter
shll
mov
cmp
mov
mov
fldenv
lret
test
mov
shrl
dec
data16
pop
or
cmpsl
mov
xchg
insb
bnd
xchg
xchg
rcrl
ds
outsb
insl
jl
cwtl
rcrl
push
inc
sbbl
inc
and
mov
mov
mov
mov
and
dec
std
cmp
ljmp
and
icebp
fdivrs
mov
ss
inc
enter
lret
jecxz
mov
mov
scas
xchg
xlat
and
mov
sarb
jge
jp
sub
dec
mov
xchg
mov
mov
xchg
sub
shll
lahf
sbb
pop
scas
nop
jo
push
lret
fisttpll
push
mov
mov
or
pop
ret
sbb
or
xchg
xchg
sbb
adc
and
loope
adc
ss
adc
cmpsl
cmp
dec
das
imul
ss
mov
test
xchg
fwait
cmc
xchg
or
shrb
mov
ljmp
mov
mov
iret
jne
jecxz
cwtl
mov
mov
dec
xor
sub
push
cmpsb
mov
push
lret
lahf
fnsave
insl
and
mov
push
movsb
andl
sbb
mov
loop
mov
cmp
xor
in
xchg
lret
mov
jbe
dec
push
add
push
pop
adc
sahf
loopne
mov
hlt
outsl
pop
pop
push
test
movsl
aad
cmp
or
mov
fwait
sbb
pusha
int
repnz
adc
mov
mov
out
orl
ja
aam
push
movups
pop
dec
movsb
mov
into
hlt
out
jns
pop
inc
push
pop
hlt
popa
insl
sarb
out
enter
fwait
add
xchg
jo
mov
test
sub
js
xadd
hlt
out
cmp
xor
popa
pop
sub
mov
data16
dec
jnp
cmp
jbe
mov
daa
pop
subl
dec
push
shll
imul
insl
notb
pop
imul
cmp
push
cmpl
dec
out
inc
imul
call
cli
icebp
imul
leave
daa
jno
lds
gs
inc
jae
mov
in
add
xor
dec
adc
loopne
movsl
mov
inc
mov
xchg
jmp
mov
aam
bound
jp
mov
cmp
lret
jecxz
adc
mov
pop
cli
insl
rcrl
and
fldl
imul
notl
xor
aam
mov
jae
cltd
xor
outsb
call
je
xchg
sbb
lods
inc
pushf
mov
adc
cltd
dec
mov
or
test
stos
push
nop
in
mov
int
movsb
mov
sbb
push
add
mov
jo
xor
fldt
jl
test
repz
pop
mov
lret
ficoml
int3
xchg
jmp
push
pop
mov
mov
pop
mov
inc
and
out
inc
push
sbb
xchg
sub
out
ja
pop
sahf
xchg
inc
rcll
xor
fldcw
push
adc
ja
test
ja
inc
xchg
ret
jmp
enter
rol
mov
insb
lcall
sub
mov
popf
mov
sahf
adc
aam
out
add
loop
xchg
dec
aas
mov
xchg
dec
pop
cmc
mov
repnz
xor
ficomps
xchg
or
cmp
pop
dec
mov
pushl
mov
dec
lock
outsb
add
mov
imul
jne
in
das
int3
push
jmp
jle
add
arpl
mov
inc
rclb
inc
mov
dec
add
lea
movsb
push
mov
jo
clc
cmp
mov
sarl
pop
dec
jle
imull
ud0
scas
insb
push
or
adc
mov
sub
jns
xor
push
pop
ljmp
xchg
and
xchg
xlat
shl
lock
loopne
pop
adc
mov
dec
les
lock
push
aad
and
faddl
cmp
pop
xor
fnstcw
dec
rolb
into
mov
clc
enter
adc
xchg
cmpsl
sub
sub
cmp
pop
pop
insb
cmpsl
shrb
ret
out
jb
sub
aas
hlt
or
ss
pop
dec
mov
shrl
and
sub
nop
cmp
cmpsl
pop
sub
fwait
lahf
cmpsb
and
pop
sbb
cmp
mov
mov
jle
cmpsl
xchg
adc
sub
out
add
sub
adc
mov
out
xchg
std
iret
inc
and
jns
adc
ljmp
mov
jnp
js
jb
loop
inc
pop
or
test
or
repnz
data16
ret
push
movsb
ret
lods
int3
fs
pusha
adc
fisubrl
push
adc
jnp
xchg
ror
pop
into
or
jne
lcall
add
pmullw
negb
xchg
rcr
adc
iret
or
mov
inc
and
or
bnd
insl
and
insl
iret
outsl
push
sub
in
les
orl
clc
xchg
cmpsb
lock
bound
test
scas
pop
push
cmpsb
and
subb
in
rcrl
mov
rorb
cmpsb
inc
xchg
insb
sub
xchg
inc
cmp
mov
adc
insl
ret
and
in
adc
mov
movsl
repnz
jp
fcompl
jmp
test
pop
xchg
xchg
out
aas
jno
fldl
dec
insl
mov
shrb
pop
lods
cmc
out
push
inc
addr16
cli
stos
mov
push
out
adc
or
mov
sbb
out
cmp
inc
or
pop
push
or
inc
outsb
pop
xchg
mov
mov
xlat
cmpsb
cmc
out
push
xchg
xor
or
xchg
inc
jle
and
jge
ljmp
movsl
and
sub
das
mov
out
xchg
aaa
aas
pop
aas
and
dec
into
add
xchg
and
xor
pop
aad
leave
lret
mov
movsb
dec
ja
jbe
add
out
mov
push
or
sub
jl
ficoml
out
mov
jne
mov
mov
pop
dec
pushf
mov
push
pmaxsw
jns
mov
jo
lcall
pusha
loopne
inc
mov
or
adc
inc
orb
out
je
cmc
sub
and
ss
int3
pop
mov
hlt
jne
cld
and
leave
jnp
sub
mov
int
das
jno
dec
xor
add
not
stos
aas
inc
std
gs
sub
mov
fisttps
jge
stos
lahf
in
cmpsb
insl
mov
iret
call
data16
pop
cmp
sub
pop
std
cwtl
je
pop
addr16
push
aaa
xchg
adc
pop
or
push
cmp
jns,pn
inc
push
test
jmp
lahf
aad
testl
push
in
pushf
add
xchg
sbb
mov
and
icebp
sbb
xchg
mov
or
or
aas
lock
enter
jb
arpl
sub
xor
adc
mov
mov
imul
les
push
idiv
jb
lret
xor
jp
mov
cmp
jo
or
sbb
mov
pop
lds
aam
sbb
daa
iret
dec
mov
push
push
lods
pop
sbb
jg
mov
sub
pop
push
or
int3
mov
adc
imul
pop
sbb
mov
ss
push
jle
in
add
out
or
push
mov
pop
xchg
sub
data16
mov
push
movsb
jmp
andl
sti
and
cltd
cwtl
jp
xor
mov
sub
cld
sub
lahf
sub
and
adc
add
dec
test
outsl
in
or
lahf
out
inc
imul
adc
mov
xchg
mov
push
loopne
dec
pop
fdivs
test
fsubrl
test
mov
inc
cli
and
int3
pushf
mov
xor
inc
jbe
or
jo
lcall
sbb
mov
data16
push
in
add
cmp
cmp
jl
sub
push
out
jo
mov
mov
jnp
fwait
xchg
shll
sbb
add
mov
mov
movsb
add
sub
bound
aas
push
inc
inc
gs
addr16
icebp
jecxz
sub
cltd
jns
movsb
fwait
push
xor
ljmp
shlb
scas
out
sbb
aad
gs
out
fisubrs
jae
push
jno
fs
or
in
sub
fisttpl
ja
cmpsl
pop
imul
std
jns
out
jns
cltd
dec
xchg
sarb
xchg
pop
push
stos
xchg
add
cmpsb
ja
outsb
icebp
lds
push
stc
arpl
push
lds
stc
in
outsl
add
mov
mov
jmp
mov
push
int
lods
mov
inc
mov
pop
scas
fcomp
in
ja
test
pop
adc
popf
int
adcl
mov
sahf
loop
dec
sub
fiadds
add
imul
fcomps
jno
jecxz
lcall
ljmp
push
lods
and
nop
sarl
outsb
cmpsl
pop
imul
push
cmc
repnz
pop
rcr
pop
cmpl
mov
mov
fcmovne
enter
ss
insb
ficomps
cli
push
or
sbbb
add
xchg
int3
push
xchg
push
ret
fmuls
negl
mov
pop
adc
les
fisttpl
roll
repnz
idivl
mov
jg
in
imul
ror
test
xor
dec
lock
clc
dec
jb
adc
jl
mov
push
dec
pop
sbb
es
fldz
dec
pop
push
jp
dec
scas
mov
ficoms
jo
dec
into
aaa
mov
stc
mov
shlb
push
jbe
fldenv
pop
inc
rcrl
and
xlat
jns
adc
aad
push
outsb
setns
jl
push
repnz
jp
clc
dec
and
xor
inc
imull
cs
add
push
add
push
adc
lret
inc
jae
pop
mov
jge
add
jo
lahf
notb
mov
pop
xchg
xchg
mov
loope
adcl
cs
jnp
idivb
loope
xor
fmuls
nop
push
lret
hlt
lds
add
out
cld
js
mov
xchg
xchg
add
inc
push
sbb
jo
popa
adc
loop
out
ljmp
xor
push
gs
mov
add
mov
mov
lahf
sbb
push
cltd
xchg
shrd
xor
pusha
clc
out
cltd
sbbl
or
mov
add
lcall
std
xchg
xchg
and
nop
mov
call
clc
lahf
mov
aam
out
jne
adc
push
push
les
pop
lret
stos
inc
rolb
sbb
stc
imul
aaa
pop
sarl
xchg
push
in
fdivrp
sub
add
lods
in
add
xlat
jnp
test
les
jnp
sbb
sub
mov
push
std
sbb
mov
or
shrl
dec
push
push
test
out
inc
push
cmp
push
mov
add
xlat
notl
dec
les
gs
pop
testb
pop
cltd
pop
jl
mov
movsb
xchg
mov
jl
or
mov
repnz
sub
mov
into
sbb
loop
xor
mov
inc
adc
or
adcl
cmp
js
jp
push
cmp
cmpsb
out
lret
fiaddl
and
lds
and
mov
or
mov
test
mov
pop
push
mov
jb
insb
or
scas
test
push
cmp
add
pop
jae
js
xorb
cs
stc
bound
je
scas
add
fidivs
push
xchg
outsb
push
sub
gs
cmpsb
jb
pop
mov
xchg
in
ljmp
inc
adc
fwait
dec
imul
dec
js
rcrb
popa
xchg
sub
mov
mov
insb
imul
movl
sti
or
pushf
dec
int3
out
in
iret
mov
push
and
and
sahf
repz
cmp
xchg
jne
inc
xchg
stos
out
addr16
add
icebp
adc
pusha
sbb
mov
movsb
sarl
std
mov
add
xor
and
add
in
insl
jb
cmp
stos
inc
dec
pushf
mov
ds
push
xor
xchg
pusha
or
sbb
lcall
push
add
inc
xchg
dec
mov
scas
and
jp
push
jno
jp
pop
dec
adc
xor
xor
cmp
rorb
mov
sub
cmpsb
fdivs
nop
jae
mov
mov
mov
xchg
sub
popf
in
clc
jg
or
fistpll
mov
call
addr16
fs
test
xchg
iret
push
or
jecxz
mov
shrl
adc
fiaddl
add
jge
movsb
push
mov
cmp
lock
mov
xchg
xchg
int
or
mov
mov
and
sbb
test
mov
int
mov
iret
sub
push
cltd
xchg
mov
lods
xchg
in
xchg
xor
nop
or
mov
scas
jo,pn
sbbl
jmp
mov
shrb
pop
mov
jmp
pmulhuw
loope
sbb
ret
adc
ret
xchg
out
dec
test
out
inc
movsl
jb
loop
dec
aam
mov
mov
lods
push
mov
sbb
in
lret
inc
int
inc
mov
scas
adcb
test
xor
stos
sub
sub
mov
loopne
iret
jno
dec
sbb
divb
mov
and
xlat
pop
sti
mov
pop
jb
xor
or
andl
lea
push
sbb
push
add
pop
and
or
repz
imul
push
daa
pop
jb
push
movsl
cmp
fidivrl
mov
outsb
pop
pushf
mov
or
push
ret
and
dec
div
outsb
das
sbb
mov
into
cmp
nop
aaa
stos
or
pop
test
or
dec
or
jle
out
xor
adc
mov
stc
xor
inc
sti
out
dec
test
xchg
fbstp
mov
cmp
test
inc
sub
pusha
ret
popa
sbb
rclb
inc
jb
dec
mov
jmp
out
adc
pop
bnd
cmc
mov
into
call
add
sbb
cmpsb
in
push
loopne
pop
jmp
pop
cmp
sarl
jmp
push
ja
fimuls
mov
add
jmp
pop
cs
pop
loope
push
jns
rcl
aaa
xchg
lret
push
aaa
nop
and
xchg
xor
aam
lods
mov
mov
fldt
inc
arpl
or
fisubs
loopne
pop
push
fmull
push
sub
sbb
mov
ljmp
in
stc
rorb
xchg
xchg
mov
or
and
loope
mov
pop
loopne
in
mov
mov
push
jne
ficoms
add
add
push
into
dec
cli
mov
rorb
insl
aam
pop
dec
ljmp
mov
inc
xchg
xor
cmp
js
popf
pop
add
mov
test
add
push
hlt
push
inc
xchg
addb
pop
pop
pop
rorb
imul
push
cmp
stc
jmp
sub
enter
leave
sbb
cmpb
dec
dec
jle
call
aad
push
shlb
inc
enter
jmp
aad
mov
in
pop
inc
jb
push
lds
testl
daa
jge
xchg
pop
sarb
xor
or
dec
add
jae
mov
lret
push
aaa
fists
pop
leave
lods
dec
stc
cld
shr
pop
or
shl
sarb
and
insl
mov
scas
xor
jg
xor
jge
outsl
pop
cmp
loop
mov
stc
call
scas
pop
ds
cmc
scas
sub
cs
stos
je
jbe
fsubs
out
outsb
push
adc
clc
movsl
jno
cmc
fdivrp
arpl
push
sbb
lock
xor
stos
adc
ljmp
shlb
inc
imul
div
adc
pop
jl
pop
xchg
or
sub
call
cmc
rolb
jae
cwtl
popf
or
lret
inc
xor
mov
es
movsb
rorl
lret
adc
negl
pushf
jmp
push
cmp
xlat
lret
scas
jmp
xor
clc
fchs
test
mov
call
fisubrs
cmp
shl
cmp
jo
pop
test
and
or
dec
or
test
add
sbb
dec
dec
pop
xor
mov
repnz
mov
jnp
notl
enter
es
add
push
mov
rcrb
repnz
sbb
fbld
fdivs
fbstp
sub
jg
lea
repz
cmp
sbb
jne
push
pop
pushf
jp
loop
fs
mov
pop
cwtl
inc
stc
ss
pop
rcrl
std
int
arpl
lcall
scas
das
push
mov
mov
pop
into
movsl
xor
fdivrs
xchg
movsb
sub
jmp
stc
mov
push
mov
jmp
ds
mov
das
jo
pushf
hlt
or
test
insb
pushf
hlt
adc
mov
mov
mov
into
or
adc
icebp
jne
jge
push
imulb
jmp
loop
cli
cltd
push
out
int3
scas
hlt
mov
mov
dec
adc
mov
scas
cwtl
or
adc
sbb
fcmovne
cmp
dec
pop
loopne
mov
cmc
push
jae
and
pop
int
push
push
std
inc
cmp
adc
or
mov
xor
or
cmp
ljmp
shlb
clc
fmull
cmp
cld
sbb
and
jp
loope
in
movsl
insb
xchg
popf
aad
xor
arpl
mov
adc
jmp
lcall
mov
addr16
add
test
cmp
xchg
jp
data16
push
push
ljmp
jmp
leave
jl
andb
fwait
cmp
test
fidivs
ret
xor
cmp
aaa
pop
adc
push
scas
push
add
add
jecxz
cli
cmpsb
stc
pop
stos
cmc
add
rorb
add
pop
icebp
pop
sub
push
int3
insb
imul
or
stos
test
jle
pop
push
pusha
test
xchg
call
mov
jge
mov
adc
jecxz
lret
xor
scas
push
fcoml
inc
iret
xor
out
pop
inc
jo
jg
mov
in
gs
hlt
out
sub
cmpsl
fnstenv
inc
popf
pop
jp
psubq
in
mov
mov
push
xor
jne
mov
mov
add
cmovl
lret
lret
cmp
xchg
stos
mov
push
jo
out
iret
int3
jg
mov
dec
push
pop
jno
push
jmp
mov
push
mov
out
sbb
push
cmp
std
data16
cld
jmp
fld
xchg
cmpsl
es
pop
js
ss
mov
cmc
inc
jne
pop
mov
imul
jbe
mov
test
stos
jle
jle
bound
hlt
or
mov
jb
stos
add
lahf
cmp
dec
cld
mov
sarl
mov
fnstsw
add
insb
mov
aad
mov
rcrl
cmpsb
jecxz
lret
inc
fdivl
or
nop
scas
pop
jb
inc
addr16
loopne
mov
loope
xchg
push
dec
rclb
inc
jp
mov
sti
and
roll
mov
mov
dec
sahf
xchg
in
jl
mov
inc
dec
push
lret
adc
clc
jno
leave
mov
pop
cmp
sbb
mov
jle
lret
in
pop
sub
pop
mov
jbe
jmp
test
push
push
cmp
push
xchg
adc
mov
sbb
jnp
or
ret
jmp
sub
mov
dec
icebp
push
mov
xlat
ret
xor
ret
data16
add
mov
outsl
add
dec
arpl
jle
push
sahf
rorl
decl
test
mov
xchg
push
sub
cmp
lods
lods
out
adc
test
jmp
dec
xchg
rcll
cld
pushl
mov
cwtl
dec
push
sbb
xor
cmp
sahf
pushf
ds
mov
jecxz
movsb
imul
mov
inc
fisttps
out
mov
dec
sbb
mov
mov
fsubl
add
sbb
aas
fstpl
mov
std
and
xchg
stc
cli
xchg
xchg
incb
lods
negb
push
cmp
addb
popf
pop
dec
jp
push
xchg
jo
or
push
test
fisttpll
imulb
pop
or
scas
fwait
test
mov
in
dec
mov
into
loope
lcall
fldt
add
bound
pop
inc
mov
sub
jge
sbb
jmp
cmc
mov
sahf
xor
push
xor
mov
xor
lcall
stos
stos
icebp
jge
sbb
jnp
mov
or
mov
mov
mov
stc
and
xchg
mov
daa
mov
sbb
push
adcb
lock
jg
inc
xchg
je
out
jle
jne
fcomps
cmpsb
pop
mov
push
imul
out
roll
pushf
cld
jnp
stos
imulb
cmp
arpl
pushf
test
pop
int3
mov
out
cmp
jge
or
pop
inc
ljmp
outsb
or
data16
inc
xor
imul
or
daa
xor
sbb
imul
popa
adc
in
jg
mov
adc
adc
push
adc
cmp
push
out
test
or
lock
pop
stos
lds
fs
cs
ret
dec
jmp
or
sub
and
ljmp
xchg
lahf
inc
call
shl
pop
shlb
xchg
adc
cld
subl
dec
xor
gs
int3
xlat
sbb
jne
inc
jae
loopne
inc
push
ret
sti
in
xchg
adc
scas
es
dec
mov
stc
rcrl
fscale
leave
mov
cmp
je
adc
jg
cmc
add
lcall
sub
adc
add
mov
jge
mov
fidivl
jg
jp
inc
ret
cmp
pop
lcall
inc
jle
mov
inc
dec
xor
jo
cmpsb
and
ficoml
into
sbb
xor
xchg
or
ja
jns
outsb
dec
or
pop
icebp
jp
in
outsb
inc
gs
pop
aam
push
xchg
sti
mov
add
mov
push
add
test
insb
shlb
lock
js
dec
fidivrs
cmp
jb
push
adc
out
push
mov
or
xchg
adc
inc
int3
mov
ljmp
lds
and
subb
push
lods
and
mov
push
int
sbb
aad
aaa
sub
jmp
fcmovnbe
in
pushf
cmc
ja
sbb
sbb
clc
out
push
scas
cmp
imul
add
mov
aaa
push
sbb
imul
cmp
int3
pop
xchg
insl
xor
stos
push
in
addb
outsb
mov
divl
or
outsl
xchg
cmp
int
jmp
addb
movsb
add
xor
pop
ret
adc
jbe
adc
and
fbstp
inc
xlat
stos
js
in
inc
sub
mov
mov
ret
insb
xchg
shl
fs
pop
push
scas
and
cmp
pop
add
mov
sub
rcrw
and
fldenv
ret
cli
stos
mov
in
or
sbb
fmuls
push
insl
outsb
push
mov
push
repz
push
add
in
outsb
repz
lret
add
cs
insl
sub
nop
push
lods
jp
fnstcw
push
ficoms
add
jge
jns
ljmp
scas
dec
ds
inc
jg
cmp
out
sbbb
mov
shrl
inc
fwait
dec
pushf
test
into
outsl
enter
loope
push
sbb
sbb
imul
outsl
addb
pop
loop
in
pop
mov
subl
stc
std
push
sti
and
xor
test
mov
push
insb
adc
mov
and
popl
cmc
adc
subl
lods
imul
lret
mov
inc
pop
ja
xchg
pop
jmp
outsl
mov
xor
mov
insl
or
fistpll
dec
lret
mov
daa
pushf
adc
rorb
add
sbb
xchg
push
xlat
mov
dec
cmpsl
xchg
lock
call
stos
js
cli
icebp
sub
outsl
and
mov
jmp
movsl
imul
jp
sbb
fadds
js
cmp
fs
rep
into
nop
nop
pop
es
pop
loope
push
sbb
dec
es
xchg
dec
testl
dec
and
push
cld
iret
mov
dec
dec
lahf
pop
int3
add
xchg
pop
cmp
mov
jnp
pop
aam
mov
xchg
inc
jle
outsl
outsb
xchg
mov
js
fnstcw
mov
sub
push
xchg
fbld
mov
xor
sub
sub
aam
mov
faddl
xchg
pop
dec
negl
sub
inc
mov
lds
mov
lcall
and
imul
mov
ja
lcall
push
and
je
mov
nop
sbb
sub
push
pushl
jle
mov
xchg
pop
in
and
adc
jno
stc
sub
adc
mov
outsb
je
mov
loopne
stos
into
adc
jae
shll
dec
xor
insb
or
pop
test
lock
inc
and
loop
mov
cmpsb
sub
pminsw
jno
mov
sub
cmp
hlt
into
insl
cmc
xchg
push
add
aam
divb
in
dec
sub
and
mov
mov
icebp
xchg
stc
call
data16
test
push
dec
aas
es
mov
or
cwtl
xor
int
adc
pop
pop
xor
sbb
insb
add
mov
xchg
sub
push
mov
cltd
iret
in
mov
xor
xchg
sbb
pop
movsb
dec
movsl
js
test
dec
xchg
arpl
xor
xor
out
sub
inc
and
enter
fdivrs
add
rcrl
inc
inc
mov
repnz
jecxz
push
leave
mov
push
inc
dec
xchg
leave
sub
xchg
pop
mov
jae
add
sub
push
cmp
sti
cli
pop
jg
adc
mov
mov
inc
repz
lahf
adc
or
pop
dec
in
jbe
sub
fbstp
pop
scas
push
xchg
or
test
test
xchg
aaa
add
imul
addr16
fwait
and
jb
flds
pusha
shlb
jecxz
std
add
mov
or
push
mov
ret
mov
jbe
popa
fisttps
xchg
jmp
repnz
sub
cmp
pop
in
adc
add
xor
icebp
mov
loope
add
stos
jmp
cmp
xchg
and
rorl
inc
push
lea
xor
push
sbb
test
xor
lcall
add
movsb
ret
mov
push
mov
push
addr16
mov
or
jo
scas
jb
xchg
cmpb
and
or
repz
cvtpi2ps
xor
xchg
sbb
hlt
dec
sarb
nop
pop
js
out
add
mov
mov
jns
loopne
jmp
mov
ss
nop
ret
xchg
mov
cmp
jnp
bound
sub
mov
mov
fidivs
stos
xchg
lahf
int3
jno
push
imul
repz
rorb
lds
cmp
mov
ss
mov
jmp
movsb
mov
mov
dec
xlat
mov
cltd
fnstenv
sub
pop
lret
jmp
mov
cmp
add
out
mov
mov
push
insb
or
pop
push
ljmp
mov
cmc
daa
mov
lock
ljmp
jbe
sbb
repz
and
aaa
lds
testl
outsl
repnz
lea
dec
xchg
push
dec
xor
imul
push
dec
and
fmul
fwait
aad
int
fcompl
or
les
jnp
inc
mov
popf
fbld
arpl
adc
dec
ljmp
jae
cmpb
sub
push
gs
out
sub
inc
sahf
lods
and
lds
xchg
icebp
push
jno
cmp
out
or
adcb
push
test
cwtl
add
icebp
jmp
jl
aaa
scas
iret
iret
or
lahf
mov
add
call
mov
jmp
mov
pop
inc
dec
mov
shll
bound
mov
mov
test
imul
sbb
inc
lret
mov
push
pushf
frstor
pop
rorl
push
mov
sub
mov
mov
roll
sub
mov
ja
inc
mov
das
and
inc
jmp
int
jbe
push
xor
mov
push
xchg
or
jne
pop
stos
insl
out
lret
daa
ret
jge
push
aam
aad
or
pop
lret
lcall
jle
mov
int3
dec
pop
sub
sbb
push
and
dec
xor
jae
mov
or
dec
mov
sbb
cmc
push
daa
enter
clc
jb
rep
push
mov
imul
ljmp
cltd
int3
movsb
pop
ss
fmull
push
fsubs
and
mov
push
pusha
stc
add
imul
mov
dec
in
inc
or
or
sti
sar
bound
xchg
dec
sbb
or
mov
outsb
adc
push
imul
inc
fxtract
adc
testb
int3
or
xor
xor
add
cmp
into
or
and
sbb
push
dec
jo
cs
mov
dec
mov
cmp
mov
xchg
sub
xchg
cmp
cmc
add
mov
sbb
jne
cmp
or
jmp
loop
jns
cmp
adc
outsb
xchg
enter
mov
lock
fmuls
mov
push
aaa
out
mov
nop
cltd
insb
adc
clc
push
push
iret
js
xlat
fcmovb
mov
mov
dec
daa
clc
test
ds
imul
loopne
sub
pop
mov
int
outsb
aaa
les
out
mov
mov
adc
sbb
bound
sbb
adc
pop
dec
pop
decl
cmp
dec
mov
mov
cwtl
out
jns
fisubrl
outsb
adc
fstp
jns
stc
sub
repnz
in
fstps
xchg
pop
inc
sub
xchg
mov
popf
cli
pop
add
dec
into
mov
addr16
imul
push
rcrb
pop
adc
int
adc
test
jle
push
inc
inc
lea
add
mov
loop
es
mov
or
cli
aaa
push
xchg
sahf
fmuls
mov
faddp
inc
mov
ret
pusha
daa
loop
pop
popf
call
ficomps
jbe
stos
dec
arpl
fisubrl
sub
or
push
cld
sbb
lahf
add
dec
insb
mov
pop
idivb
add
xchg
aad
jecxz
sub
jl
bound
imul
mov
loope
ljmp
jle
cmp
xor
pop
loopne
popf
dec
shr
insb
aam
cmp
and
test
data16
aaa
daa
add
lods
ljmp
lods
fwait
lea
dec
push
sub
daa
pop
icebp
sahf
ficomps
mov
lcall
adc
cmpsb
add
sub
repnz
mov
inc
lret
outsb
mov
pusha
pop
and
mov
hlt
mov
arpl
les
out
xchg
xor
mov
fmull
lcall
or
fisubrl
mov
test
xchg
xchg
imul
adc
test
mov
or
pop
push
scas
aas
inc
xor
xor
scas
hlt
pusha
dec
sbbl
add
divb
es
out
fidivrs
mov
jbe
ret
imul
lahf
adc
mov
gs
or
mov
lret
pop
push
inc
sub
mov
sub
out
or
cwtl
jge
and
cmp
push
sti
push
sbb
mov
call
js
and
pop
les
in
add
jg
test
xchg
cld
insl
sub
aas
dec
sti
jl
gs
xor
jmp
pop
push
mov
shlw
cli
jp
xchg
mov
pop
hlt
ds
fisubrs
inc
ja
sbb
add
test
xchg
jne
sahf
sub
xchg
cmp
imul
in
es
aam
fldt
int3
mov
and
push
in
sub
pop
fwait
mov
add
les
fdivr
pop
cmpsb
sub
in
pop
fistps
push
dec
jo
out
add
push
or
inc
pop
loopne
mov
fcmovb
jb
int
shrl
incb
fsubr
out
iret
jbe
fistps
arpl
pop
sbb
int3
sub
or
xor
or
sahf
fnstenv
movsl
mov
jae
jge
xor
imul
mov
pop
adc
cmp
ret
ljmp
dec
add
pop
xchg
out
add
sub
pop
mov
jae
hlt
lret
test
cmp
jg
or
int3
ds
fdiv
insb
jp
cmp
jle
inc
test
sub
sub
loop
lret
xchg
xchg
repnz
js
aaa
fninit
or
jecxz
aam
inc
iret
xchg
addr16
subb
xlat
hlt
mov
es
into
pop
jae
sbb
sbb
xor
cld
push
cmp
frstor
mov
ljmp
jns
sbb
lret
jno
cmp
repz
cld
insb
xor
je
adc
inc
test
inc
adc
xchg
pop
outsb
jp
xor
inc
adc
leave
cmc
in
scas
jbe
jo
in
outsl
sti
cmpsl
divb
push
sub
dec
movsl
sarb
fildll
jmp
push
jle
jb
out
pop
mov
ret
sbb
fbstp
jmp
cwtl
fisttpll
cmp
add
xchg
pop
mov
or
ret
mov
icebp
xor
push
push
idivl
es
inc
inc
push
mov
addl
lret
cltd
stos
push
sub
lock
divb
inc
stc
xchg
enter
and
rorl
lret
adc
test
sahf
add
sahf
rcr
inc
push
inc
lods
sbb
outsb
push
push
or
cmc
mov
xor
pop
push
lock
xchg
lock
push
and
loopne
inc
inc
out
or
cmc
sub
add
ljmp
into
jbe
xchg
aas
jns
sar
insb
fisubrs
cld
mov
and
dec
jae
jnp
dec
mov
jmp
push
mov
mov
jmp
jnp
push
pop
stos
clc
jge
lock
shlb
stos
mov
scas
jg
jnp
imul
jecxz
xor
xchg
sbb
xchg
fs
jnp
fnstenv
fisubl
dec
xchg
pop
sbb
out
enter
fcmovnbe
cmpsl
imul
sub
mov
jnp
mov
out
add
lcall
mov
pop
bound
jecxz
mov
mov
ret
sbb
pop
lret
fldl2t
sbb
cmpsl
repz
test
dec
push
xchg
xchg
xchg
adc
enter
ret
clc
and
xchg
ja
movsb
dec
sub
aam
data16
cmc
xchg
dec
jno
xchg
dec
jno
flds
xchg
cmpsl
roll
dec
inc
pusha
jnp
xor
xor
sub
and
cmp
pushf
mov
cmpb
pop
dec
adc
xor
sbb
xor
out
cmpb
push
or
fmull
push
inc
lcall
cmpsl
imulb
inc
xor
sbb
push
leave
test
push
sbb
dec
aas
or
push
sbbl
lods
mov
out
ljmp
sbb
jo
loope
leave
inc
adc
xchg
xchg
nop
lahf
cmp
jle
sub
inc
aas
xchg
adc
fisttpll
jns
dec
push
add
mov
xor
jne
fs
notl
push
mov
xchg
ret
sbb
leavew
sbb
test
xchg
xchg
aaa
xor
jbe
cmp
adc
sub
mov
push
xor
repz
cs
pop
aam
aas
pop
sarb
mov
push
dec
addb
pop
outsl
xor
sahf
imulb
out
ret
movsl
ret
jecxz
ret
mov
pushf
sahf
pop
inc
lds
add
pop
test
aad
xor
cmc
out
into
and
insb
mov
repz
pop
cmpsl
sub
in
outsb
sbb
arpl
pop
es
or
outsl
lcall
jnp
mov
ficoms
mov
sti
insb
cltd
notb
xor
mov
xor
dec
loope
mov
lea
repz
mov
push
out
sti
sub
mov
rcll
repnz
push
sarl
pop
ficoml
jecxz
into
mov
mov
outsb
inc
cltd
shll
xchg
adc
movl
push
imul
das
loop
ljmp
insb
stos
cmp
cld
addr16
fwait
bound
ret
scas
js
sub
lds
out
iret
test
inc
cwtl
popl
cmp
inc
mov
adcl
mov
xchg
out
fdivrs
pop
lret
shlb
arpl
adc
popa
js
mov
fsts
outsb
daa
dec
mov
int
inc
incl
push
pushf
nop
xchg
push
sbb
or
dec
lcall
mov
js
shlb
dec
scas
sbb
adc
cwtl
xlat
filds
lods
out
adc
push
xchg
inc
addr16
jnp
pushf
jle
inc
push
mov
xor
pop
mov
fstps
dec
pop
adc
ret
cltd
mov
cmp
fcmovnu
mov
inc
xor
push
jno
adc
add
es
shlb
sub
call
repz
scas
inc
jb
ret
cs
ret
adc
push
loope
cmpsb
frstor
sbb
sarl
pusha
or
push
out
sbb
pop
lahf
fidivl
sub
pushf
std
and
inc
imul
and
pop
mov
mov
dec
or
jae
cwtl
mov
add
dec
aaa
push
and
aam
outsl
int3
xchg
test
ja
fmuls
inc
xorb
mov
pop
cltd
arpl
mov
lds
mov
jmp
push
pop
inc
sbb
fidivl
pop
jne
test
inc
push
xchg
iret
jmp
arpl
cltd
jle
les
add
cltd
jle
and
and
scas
cld
clc
xorl
pop
test
mov
out
mov
pop
pop
push
push
push
xchg
mov
movsb
mov
imul
pop
and
ret
jl
lret
inc
imulb
dec
outsb
lds
outsl
ret
pusha
into
jp
xor
out
mov
mov
mov
ja
pop
leave
imul
push
rol
aad
std
sbb
les
cmp
popa
mov
in
push
dec
xchg
sti
push
sar
mov
pop
aam
movsb
leave
dec
lret
mov
out
aam
push
xor
push
sub
clc
scas
jl
rol
mov
addl
mov
and
aad
movups
dec
dec
xchg
cmp
clc
shrb
fcom
ret
dec
cmpsb
hlt
test
mov
jnp
cs
push
adc
iret
iret
je
ljmp
enter
jnp
sbb
call
cli
sbb
rolb
repz
jp
and
div
mov
loop
in
mov
pop
fisubrl
jo
in
out
iret
jge
je
cmp
cmp
popf
and
xchg
sub
xor
xchg
leave
jge
mov
jno
mov
je
das
xor
in
shlb
mov
les
or
mov
dec
push
xchg
push
dec
bound
add
enter
or
mov
cltd
add
jbe
insb
out
dec
arpl
insb
je
xchg
pop
lret
cmp
or
dec
rolb
and
push
outsb
sbb
xchg
popa
loopne
out
lret
push
adc
addl
dec
jl
lea
lret
jo
ds
inc
xor
or
mov
mov
adc
sbb
or
aas
aad
inc
jae
push
sahf
mov
pop
mov
enter
scas
fwait
pop
mov
jecxz
inc
scas
dec
into
insb
inc
xchg
push
movsl
out
cwtl
jmp
aas
outsl
ljmp
or
mov
mov
mov
sub
mov
aad
int
jmp
nop
shrl
push
mov
pop
add
lahf
xor
mov
jae
xchg
push
leave
sub
sbb
fcom
aad
push
push
xor
popa
adc
fs
sbb
popf
mov
sbb
aad
mov
lods
add
or
cld
ss
ljmp
jle
cwtl
jno
push
xchg
sub
lcall
xchg
out
clc
cmpsb
mov
in
dec
js
mov
xlat
lcall
mov
xor
fiadds
bound
in
lcall
fisubs
incl
loope
sub
push
fnstenv
mov
fwait
dec
xchg
enter
es
shrl
nop
int
lret
sub
loopne
xchg
movsb
imul
cmp
lea
cmp
insl
add
dec
imul
sahf
mov
lret
pop
jp
xchg
fsubp
cmp
adc
mov
jae
cmpsl
sbb
fimull
test
xchg
push
fsts
mov
xstore-rng
cmpsl
xchg
ja
shl
push
add
shll
dec
je
cltd
adc
nop
add
pop
cmp
test
mov
std
in
xchg
dec
ljmp
fldcw
test
add
leavew
add
mov
jl
push
sbb
dec
test
xor
shlb
push
push
test
push
ficompl
dec
clc
jnp
mov
mov
xor
sbb
mull
push
dec
sub
lcall
sbb
add
mov
mov
movsb
mov
adc
jl
lods
xchg
cld
pop
cmp
ret
dec
lcall
cld
testb
sbb
jecxz
mov
call
mov
test
mov
mov
pop
enter
pop
xchg
cmpsl
js
mov
into
mov
dec
xchg
pop
pop
jl
mov
cmpl
cmpsl
cmp
xlat
repnz
mov
dec
push
cmp
rol
jmp
adc
inc
inc
sub
lock
mov
pop
push
xor
jmp
sub
pop
lcall
ds
fcomi
dec
xchg
inc
push
dec
in
pop
call
push
push
lea
addr16
addb
inc
xchg
addr16
mov
mov
es
sub
xorl
popf
in
adc
cltd
xchg
out
hlt
sti
and
sub
movsb
mov
mov
push
mov
adcl
lcall
mov
mov
test
fstpt
push
inc
xchg
mov
lock
in
hlt
add
xor
sub
xchg
or
dec
mov
enter
pusha
jge
xorl
push
sbb
pop
cmpsb
adc
nop
mov
jno
sbb
cwtl
ja
pop
jne
orl
xchg
or
lock
fisubs
aam
add
jecxz
jp
mov
pusha
stos
aam
or
and
push
pop
jnp
neg
mov
dec
testl
in
push
pop
lods
push
fcoml
call
fnstenv
add
test
movsb
jo
lret
ja
inc
mov
insb
add
sahf
imul
cmp
leave
das
mov
xor
or
mov
mov
out
sub
push
pop
mov
inc
jns
pop
mov
out
movsb
mov
imul
adc
pushf
aaa
lret
add
xor
mov
sbb
cmp
adc
xchg
icebp
push
xchg
lcall
add
cmp
xlat
or
aam
and
dec
fcoms
test
dec
cli
call
add
in
pop
adc
in
orl
jge
mov
xchg
iret
and
ljmp
andl
lea
inc
inc
fstps
jae
adc
cmp
mov
flds
dec
sub
jge
stos
stos
cmp
push
pushf
je
xor
push
out
inc
dec
aad
mov
outsb
mov
adc
cmc
fimull
mov
sbb
iret
cmpl
push
pushf
adc
addr16
out
sbb
fsubrl
mov
pop
cmp
fs
hlt
mov
in
push
mov
cltd
and
sbb
xchg
sahf
mov
or
lcall
push
push
mov
scas
jmp
ljmp
push
jecxz
out
les
mov
test
sub
mov
sahf
je
and
ds
adc
fwait
in
lret
cmp
push
loopne
ja
jbe
pop
movsb
mov
or
fcompl
sbbb
push
stc
mov
and
popa
in
xchg
adc
dec
rcll
aaa
xchg
dec
cmp
test
std
jno
xor
sti
sbb
dec
and
mov
add
pop
test
mov
inc
icebp
icebp
inc
insb
cltd
mov
or
addb
adc
out
ss
and
push
lea
adc
nop
push
sbb
push
cmp
xor
mov
xchg
ret
xchg
cmp
mov
or
ret
pop
lcall
mov
arpl
mov
scas
gs
push
loope
xor
mov
lret
pop
test
shrb
mov
fiaddl
lds
pop
mov
shll
xchg
inc
nop
imul
clc
gs
fnstsw
jae
xchg
add
stos
xchg
bound
or
out
pushf
daa
mov
imul
aaa
xchg
adc
sub
xchg
mov
mov
mov
cmp
jl
test
xchg
cmpb
cmpsb
and
ja
cmc
scas
popa
paddq
and
xor
push
adc
ret
pop
adc
dec
push
cltd
movsl
dec
ficoml
sub
mov
movsb
jns
jnp
sub
into
sbb
call
int3
mov
ljmp
test
xor
dec
jp
and
int3
cmp
dec
mov
aad
xchg
or
dec
xchg
mov
dec
mov
clc
cmp
movsb
jne
mov
pop
fcomps
adcb
pop
lret
sbb
mov
push
mov
shlb
dec
pop
jp
fidivl
jl
leave
and
cwtl
or
xor
cmpsb
push
push
xchg
or
or
aas
cmp
repz
fs
outsb
fcompl
mov
mov
xchg
pop
push
and
lods
sub
add
mov
mov
insl
mov
jle
ficomps
pop
mov
movsl
movsb
out
mov
movsl
test
jmp
ds
xchg
add
adc
aad
adc
leave
inc
inc
or
mov
sbb
pusha
jle
jae
push
test
xor
int
add
jg
nop
fsubl
push
aaa
cmp
loopne
addl
xchg
idivb
cmpsb
jmp
popf
jo
inc
ror
clflush
sub
cmp
arpl
cltd
inc
rclb
push
gs
jmp
or
and
xor
out
mov
test
xorl
push
mov
fcoml
push
movsl
sbb
icebp
lds
and
or
inc
cld
ss
je
mov
add
or
xor
mov
sbb
insb
aam
xor
mov
por
adc
xor
testb
inc
aaa
xchg
push
xlat
cmp
mov
push
sub
inc
inc
repz
insl
jo
inc
sub
mov
inc
adc
and
std
xor
jle
js
stos
dec
ret
jecxz
push
dec
ret
out
xchg
adc
cwtl
xchg
pop
adc
or
lds
inc
xchg
mov
xchg
sti
pop
stos
out
push
mov
cmp
push
jp
xchg
dec
int
sbb
pop
into
pop
add
mov
pop
std
add
leave
imul
loop
sbb
arpl
cmp
dec
out
mov
xor
mov
out
ds
lahf
jmp
mov
add
fstps
or
push
lahf
pop
ror
push
fs
divl
push
arpl
dec
mov
sbb
iret
cs
cmp
xor
fisttps
xor
insl
jge
adc
inc
out
sbb
nop
popa
mov
in
cmp
jmp
mov
je
xorb
repz
mov
adc
mov
push
sbb
or
or
dec
cmp
cmp
mov
jae
sbb
mov
addl
lock
loopne
inc
in
lcall
inc
pextrw
mov
pop
and
cmp
iret
pavgb
xchg
push
addr16
lcall
inc
in
gs
push
ljmp
or
sar
add
push
test
cmpsb
mov
jmp
jp
cmp
or
es
xchg
orl
or
jmp
dec
inc
adc
mov
dec
mov
and
jb
or
and
je
stos
test
pushf
xchg
insl
mov
outsl
pushf
cmp
je
xchg
push
icebp
jns
add
xchg
mov
sub
xchg
fisttps
lods
cmp
es
popa
dec
outsb
xchg
mov
stc
dec
push
pop
xchg
xchg
aas
xor
mov
sbbl
or
push
cld
inc
lahf
lret
pop
out
adc
xor
bound
push
lret
mov
addr16
popa
xchg
fstl
mov
aad
cmp
ss
pop
pop
dec
nop
icebp
repz
iret
stc
inc
ja
sub
inc
jmp
mov
cmp
stos
xor
dec
fsubrs
pop
mov
arpl
push
mov
xchg
aam
jb
arpl
in
clc
inc
leave
cmp
mov
shrl
inc
or
cmp
mov
das
dec
fnstenv
mov
clc
xchg
mov
or
mov
xlat
icebp
or
jbe
sub
adc
jp
xchg
pop
lret
int
lea
jae
imul
fwait
jne
mov
sub
or
movsb
addb
or
nop
pop
mov
cmpsl
stc
push
cli
inc
faddp
cmpb
mov
fyl2xp1
lcall
inc
jbe
test
mov
out
divb
cmp
fsubr
mov
in
jp
mov
pop
out
loop
jmp
fs
jge
sub
pop
pop
jno
insl
fwait
sbb
push
mov
pop
cmp
dec
xchg
mov
push
lret
aam
xchg
pop
sub
xlat
mov
imul
fstpl
add
clc
push
lods
dec
sub
dec
lret
dec
popf
add
jmp
mov
shlb
adc
and
xor
xlat
stos
js
bound
dec
das
jnp
cs
nop
jnp
mov
xchg
sbb
repnz
incb
push
or
and
cmpsl
lret
xchg
mov
pop
inc
mov
rorb
orb
inc
sar
pop
pushf
sub
andb
dec
lcall
test
jmp
bound
add
jne
mov
imul
dec
daa
testl
sbb
xchg
adc
cmp
push
xchg
lods
inc
shlb
mov
cmp
ret
lock
enter
addr16
cli
movsl
cli
stos
mov
pop
mov
out
cmp
jge
jno
mov
test
test
loop
jge
enter
mov
ljmp
xorb
inc
add
sbb
mov
xor
mov
jae
stos
rol
shrb
or
in
mov
cwtl
jmp
adc
push
repz
imul
scas
dec
mov
iret
and
mov
stc
insb
sub
ljmp
push
cmc
mov
pop
inc
inc
lock
mov
mov
pusha
icebp
ljmp
cld
out
xor
std
imul
faddp
pop
xor
je
cmp
pusha
and
cli
sbb
fistpl
cmp
aaa
mov
test
xchg
push
xor
cld
mov
sbbl
test
test
sbb
test
rcrb
ret
loopne
je
fmul
sub
pop
in
and
in
inc
popf
dec
or
inc
loop
lcall
jo
push
jg
xchg
or
mov
stos
into
clc
jno
push
js
sbbl
sub
xchg
push
jecxz
fists
lock
shll
push
cltd
loop
fcoml
sub
loop
outsb
cwtl
jae
add
sbb
cmp
adc
jne
mov
jl
rcrl
xchg
movnti
fdiv
adc
xchg
sbb
cmp
add
inc
lret
je
aaa
and
aaa
jnp
jl
sbb
xor
call
jg
sub
aaa
adc
mov
cltd
or
add
push
xchg
sub
mov
scas
out
sub
ja
sub
mov
add
imul
mov
aam
jne
fidivrl
pusha
test
fs
and
shl
pop
inc
test
jl
cmp
pop
loopne
mov
scas
fistl
jno
popf
pop
inc
repz
jnp
cmpsb
mov
cli
or
jecxz
mov
pop
gs
repnz
xchg
rclb
loopne
xor
xchg
cld
popf
test
cmp
or
iret
rdpmc
hlt
test
xor
ret
push
cmp
or
or
cmp
jno
jmp
or
inc
ss
fisubs
mov
or
stc
jl
mov
jg
mov
pushf
imul
mov
dec
popf
cmpsl
and
jle
lds
sub
xor
xor
out
pop
mov
jp
sbbl
hlt
and
push
or
orl
insb
insl
mov
fimuls
xchg
movsl
and
in
mov
sbb
cmpsb
gs
add
jge
push
rcl
js
es
fnsave
in
loopne
add
ss
jb
or
shr
add
sbb
push
inc
stc
mov
aas
mov
imul
jb
sub
mov
jl
stc
fcomip
cmpl
jo
jp
movsl
add
ljmp
fldcw
mov
jp
mov
mov
fnstcw
sub
adcb
cld
jae
popf
call
test
mov
or
pop
lods
adc
jmp
popa
and
xchg
cs
push
lea
decl
lcall
jp
push
push
jg
mov
sub
data16
jne
icebp
into
sub
xor
xchg
sub
xchg
dec
pop
mov
mov
inc
pusha
sti
negb
movsb
je
js
sahf
cwtl
shll
ds
popa
xchg
leave
pop
add
imul
cmc
outsb
adcb
das
pop
loopne
or
lods
mov
cmpsl
das
add
aad
pop
mov
mov
sbb
cli
pop
fildll
fprem
stc
mov
js
outsb
push
fldl
cmpsb
test
adc
mov
out
js
aad
push
push
hlt
out
push
mov
or
jle
bound
or
add
nop
dec
pop
mov
cmpl
mov
add
int
cmpsb
jb
mov
insb
pop
mov
sbb
data16
pop
ds
sbb
jmp
scas
out
ss
jb
dec
aad
or
hlt
jle
sub
mov
or
jmp
mov
and
lods
xchg
dec
pusha
cmp
inc
lcall
cwtl
aas
pop
cli
xchg
lret
mov
cmc
jge
mov
push
add
outsb
cwtl
mov
or
pop
cmc
loope
movb
movb
and
lods
jecxz
movsb
add
mov
sahf
xor
call
jmp
movsb
adc
bound
daa
xchg
test
mov
testb
mov
ljmp
xorl
or
adc
in
jno
mov
les
neg
xor
jo
push
add
fimuls
xlat
jo
inc
adc
jne
mov
cltd
dec
scas
ret
repnz
rclb
or
push
test
lea
das
data16
or
pop
sub
data16
mov
mov
aas
mov
cwtl
enter
mov
sbb
mov
leave
xor
addb
jl
jno
test
add
xchg
add
daa
lea
or
je
dec
lods
xchg
ret
mov
mull
cmp
lods
add
and
stc
insb
das
push
popa
test
mov
nop
xchg
fbstp
lea
aaa
cli
sub
lock
test
push
pmullw
fldcw
ja
popf
inc
int3
in
in
push
jmp
mov
xor
pop
test
cmp
inc
xchg
stos
inc
jae
je
fildl
in
cs
mov
cmp
inc
sbb
sbb
add
divl
popf
adc
jns
or
jmp
hlt
adc
inc
stc
pop
jg
outsl
push
faddl
lods
cld
std
in
mov
sahf
roll
push
js
aam
push
add
cs
jb
insb
movb
xor
add
pushf
or
les
shlb
jne
inc
cmp
leave
ja
cwtl
mov
ja
xchg
leave
sbb
ret
test
sbb
and
push
dec
jnp
notl
dec
sti
rcrl
adc
pop
inc
call
or
jp
pop
pop
test
cmp
repnz
cmc
roll
inc
cmc
repz
fbstp
mov
push
and
cmp
pusha
lahf
xchg
mov
iret
mov
rcl
arpl
and
mov
adc
mov
push
or
pop
sub
and
enter
sahf
cld
fwait
add
cli
mov
inc
leave
int
in
loopne
stos
push
push
cmp
sub
pushl
bound
icebp
dec
mov
repz
ja
mov
out
sbb
fsts
jle
dec
sub
inc
add
dec
in
mov
cmp
popf
xor
mov
dec
mov
xor
shll
sub
lret
cmp
xrelease
in
and
add
adc
mov
iret
and
cli
lods
movsl
mov
test
cmp
shlb
add
jns
mov
adc
jmp
js
stos
int
dec
mov
and
mov
pop
aas
lahf
mov
shrl
in
shrl
loop
lea
roll
xchg
cltd
lret
dec
push
pop
stc
push
pop
fisubl
xor
pop
lods
fsubs
leave
pop
test
mov
mov
push
loope
movsl
sub
fisubrs
enter
push
add
xrelease
fnstcw
pusha
test
mov
inc
into
es
jnp
das
les
test
mov
out
jle
aad
shlb
iret
mov
add
mov
dec
jecxz
sub
js
jne
imul
xor
adc
clc
imulb
cmpsb
jo
xchg
jno
addl
sub
push
ret
mov
and
push
shlb
add
gs
inc
in
mov
dec
pop
daa
dec
lcall
pop
dec
xchg
popa
adc
int3
adc
add
js
adc
lock
mov
popf
rolb
add
pop
inc
inc
adcl
xor
mov
jp
sub
in
pushf
push
mov
xor
mov
push
addr16
repz
das
inc
adc
cld
or
push
out
add
inc
addr16
loopne
push
rdmsr
inc
sbb
sub
pusha
es
xchg
test
cmpsb
ljmp
addr16
xor
cmc
mov
cmc
mov
xor
sbb
loopne
add
xor
mov
push
push
icebp
add
ret
fwait
in
mov
mov
add
add
mov
std
mov
pop
xlat
or
cmp
mov
sahf
es
fdivp
not
shll
cli
cmc
mov
aad
jno
cmp
iret
movsb
pop
xor
sbb
dec
xor
adc
das
xchg
jecxz
testb
outsb
or
imul
pop
sbb
popa
rep
ret
dec
cmp
out
mov
mov
arpl
jl
mov
sub
xchg
pop
and
imul
jo
aaa
adc
mov
ss
idivl
scas
pop
adc
inc
jmp
stos
add
or
in
adc
push
sub
dec
movsl
mov
ret
lcall
jns
mov
fcompl
rorl
mov
repz
sbb
loope
lcall
lcall
jg
lea
add
iret
push
arpl
jmp
jge
jno
iret
cmp
pop
lods
lods
sub
sub
aaa
test
inc
adc
loopne
pushf
mov
push
xchg
sbb
cmp
fwait
pop
pop
fwait
lahf
bound
add
xorl
jg
aam
stc
dec
mov
cli
daa
stos
test
pop
sbb
stos
mov
fists
sub
add
inc
adc
shrb
xlat
fwait
es
int3
mov
data16
repnz
xor
xchg
loope
pop
mov
adcl
sbb
addr16
ljmp
pop
fcomip
pop
and
adc
cmp
jbe
in
pushf
xchg
jge
or
lock
iret
sub
sarl
in
and
test
sbb
adc
orl
mov
dec
std
dec
pop
xor
incb
jbe
inc
push
fdiv
les
fmull
push
push
xor
popa
bound
or
xchg
dec
lock
mov
dec
repnz
jl
testb
daa
and
rcll
fldt
mov
dec
arpl
ja
add
outsl
pop
lds
sub
addr16
mov
or
sub
pusha
movsb
mov
out
dec
lcall
inc
mov
sbb
adc
jmp
pusha
dec
or
fwait
lds
sti
sub
lahf
sahf
mov
leave
cmpsl
jg
cmp
pop
dec
stos
mov
mov
jl
dec
push
in
xchg
push
stos
imul
hlt
out
push
sbb
cmp
mov
dec
stos
cmp
leave
adc
das
sub
cmp
pushf
adc
jno
insl
roll
push
movb
sub
pminub
jl
adc
std
mov
test
repz
mov
mov
mov
in
stos
xchg
in
xchg
sub
jno
xor
mov
add
ficoml
lcall
or
xchg
out
movsb
shr
ficoml
jecxz
std
and
rorb
lods
or
cmp
ds
sub
insb
push
mov
pop
push
addl
inc
push
pop
adc
and
ds
sub
sbb
ret
lds
push
std
shlb
cld
mov
mov
jmp
in
clc
jns
lods
cs
pop
inc
cmpsb
stos
popa
fildll
mov
dec
arpl
push
int
out
scas
dec
dec
ficoms
sar
fimull
loop
mov
push
cmpsl
orl
sub
jecxz
rorb
jp
ret
int
loop
sub
and
aad
dec
sti
popf
stos
das
inc
inc
shl
sar
ret
mov
mov
ficoml
mov
dec
stos
and
inc
cmp
adc
lock
outsl
jp
aas
mov
jecxz
push
loope
adc
mov
cltd
dec
stos
xchg
jmp
clc
in
imul
push
inc
stos
lock
mov
fidivrs
mov
int
pop
stc
in
adc
test
test
cli
mov
adc
mov
jb
ficoms
outsb
int3
hlt
xchg
push
bound
ficomps
loope
sbb
cmp
mov
cld
mov
fwait
stc
bound
faddl
ss
lea
dec
adc
jge
adc
cmp
push
ds
jo
movsl
jns
popa
subl
lcall
dec
arpl
pop
sbb
adc
push
jno
gs
push
data16
aaa
and
inc
pop
dec
mov
jmp
push
or
dec
jbe
jmp
enter
xchg
cli
addl
fldt
pop
clc
xor
leave
adc
nop
mov
xor
push
jecxz
hlt
lret
cmp
int
xchg
jne
jno
fsubl
loope
inc
mov
loop
adc
pop
xor
mov
mov
arpl
fcoml
mov
inc
mov
cwtl
sub
xchg
stc
dec
in
inc
dec
xchg
inc
sub
out
push
into
ds
xchg
jno
or
out
push
bound
shr
xchg
and
daa
cmc
jbe
sarl
frstpm(287
test
xor
out
cli
ja
pop
insl
add
or
mov
lret
int
cmp
push
pushl
jecxz
pop
imul
scas
popa
sbb
pop
dec
push
adc
repz
ret
jg
or
mov
inc
mov
imul
jb
jmp
call
clc
scas
xchg
cmpb
pop
xor
insl
pop
inc
push
adc
in
insl
dec
int
adc
push
aad
xor
lea
out
push
dec
push
jl
je
sti
stc
test
push
enter
nop
jmp
shll
cli
mov
and
inc
dec
mov
mov
push
imul
sti
pop
xor
and
lods
xchg
adc
clc
lods
sub
cltd
pop
cmp
cltd
jnp
roll
and
out
mov
aas
test
mov
inc
and
mov
mov
aam
mov
lock
es
mov
cmp
pop
cmp
shl
cwtl
iret
xchg
cmpb
push
aam
arpl
pop
outsl
call
mov
scas
fadds
pop
repz
daa
stos
sub
in
sbb
adc
mov
call
inc
jge
push
nop
mov
loop
repz
pop
inc
in
push
sub
pop
fnsave
sbb
jmp
dec
jmp
adc
pop
jl
test
cmp
test
jl
lds
fbld
call
dec
inc
cwtl
jg
movsb
fdiv
cmp
loop
xchg
iret
mov
mov
nop
aad
dec
aad
jae
je
sbb
stos
jge
sub
and
hlt
sbb
cmpsl
adc
sub
inc
cmp
add
mov
xor
cmp
nop
rolb
sub
je
repnz
sub
pop
jg
stc
scas
and
pop
inc
or
sub
pop
movl
mov
mov
aad
xchg
jb
xchg
pop
in
adcl
push
mov
clc
lods
je
pop
jb
pop
mov
mov
imul
insl
popa
fidivl
mov
xor
xchg
fsts
xor
ss
ret
sub
adc
mov
or
ret
stos
aaa
testl
int
push
daa
pop
or
mov
clc
cmp
or
js
pop
cmp
testl
add
call
movsl
pop
mov
mov
popf
push
mov
popa
jmp
in
arpl
cmp
mov
mov
pop
lcall
add
mov
movsl
gs
push
sbb
mov
push
xchg
mov
fbld
inc
pop
in
loopne
push
xor
insl
cltd
jg
and
and
cli
adc
pop
in
or
mov
cli
out
sub
adc
aam
shll
subl
sti
int
mov
out
ret
push
ret
or
mov
shll
mov
mov
add
repz
sbb
pop
xchg
mov
inc
cmp
mov
mov
xchg
and
sbb
and
hlt
loopne
ss
cwtl
cmp
imul
mov
clc
cmpsl
movsl
hlt
lock
das
jecxz
loope
mov
cmp
stos
js
cli
aam
shrl
mov
push
xchg
pop
cmp
or
push
lock
jne
mov
cmpsb
pop
fnstsw
pop
fldl
jo
data16
fistpl
fwait
mov
fnstenv
loop
je
xor
cltd
xchg
jns
fcomip
inc
mov
mov
rorb
push
clc
fadds
ss
pop
inc
stos
int3
daa
mov
jmp
sub
cmpsl
fcomp
jbe
push
xchg
jecxz
in
xor
cmc
add
fwait
jns
add
js
dec
sbb
sub
push
ljmp
int
ja
sub
adc
jnp
les
js
outsl
mov
icebp
in
les
jb
mov
mov
pavgw
sbb
xlat
mov
xor
push
out
scas
sub
imul
push
pop
pop
cmpsl
std
adcl
jl
icebp
pop
and
rcrb
fdivl
xchg
jne
or
stos
pop
push
adc
stos
imul
lret
cld
dec
lds
xchg
ficoml
mov
xchg
sbb
sbb
xor
test
ret
inc
and
xchg
cmp
and
leave
loope
bswap
or
jnp
cmp
xchg
in
push
xchg
hlt
aas
dec
inc
jb
enter
pop
jecxz
pop
std
pop
in
adc
insb
push
subb
je
ret
mov
fldcw
mov
push
dec
push
jo
cmp
mov
inc
jmp
mov
add
mov
add
lahf
mov
add
mov
push
fs
jl
out
push
mov
and
fldl
rcrb
xchg
add
sbb
and
int
and
sub
out
jns
repz
jno
aaa
pushf
xchg
pop
test
scas
in
add
imul
aaa
add
in
sti
fldl
sub
shlb
cmp
xlat
push
movsb
adc
push
mov
push
call
sub
inc
andb
fwait
sbb
shrb
daa
into
adc
mov
push
in
push
sub
ficompl
xchg
jle
jbe
push
xor
imul
add
pop
out
nop
lods
xorb
sub
movsb
push
cld
pop
jo
cmp
mov
add
dec
pop
aaa
int3
and
mov
mov
mov
insl
xor
and
dec
pop
cmp
jmp
dec
add
inc
sub
push
pop
dec
push
adc
pop
test
mov
push
ret
jae
xlat
cs
cmp
xor
add
dec
jp
jno
sub
lret
push
dec
pushf
add
push
mov
mov
add
pusha
xchg
loopne
pop
dec
cmp
cmc
jl
scas
insb
add
push
and
pushf
adcl
daa
pusha
xor
stos
mov
mov
jle
pusha
xchg
inc
sbb
fdivrs
outsl
pop
jbe
gs
xchg
and
jle
popf
fnsave
dec
popf
push
aad
loope
xchg
sub
movl
out
test
icebp
mov
jmp
mull
mov
or
xchg
stos
jecxz
js
jb
xchg
mov
mov
cli
or
or
fadds
xor
ds
lea
subb
or
push
in
loope
popa
xor
sub
cmc
and
cld
xor
addr16
jo
push
jle
cmp
sbb
cmp
push
fwait
mov
daa
push
addb
mov
call
daa
jne
sub
inc
pop
mov
cld
stc
rorl
movsl
push
mov
repnz
adc
adc
in
add
and
ret
xor
pop
mov
dec
xchg
mov
outsl
out
cmp
dec
cld
mov
push
in
xchg
xor
gs
movsb
xor
pop
mov
xlat
icebp
fdivr
js
push
loopne
mov
push
aam
lds
xchg
pop
xor
stos
inc
mov
or
inc
xchg
lahf
lret
and
rcr
aad
mov
lret
mov
cmp
sbb
aaa
pop
cmc
push
cmc
out
repnz
mov
cld
fsubrs
ja
and
shl
pusha
int3
cmpsl
shlb
rcrl
jno
push
and
inc
rclb
mov
int
or
arpl
aad
push
adc
pop
loope
clc
or
pop
cmpb
loopne
sub
imulb
jae
popa
pop
clc
shrl
fs
jno
ret
xchg
jg
xchg
push
popf
jecxz
imul
nop
inc
mov
cmp
je
xor
mov
ud1
sub
mov
int
negb
les
jns
xor
popf
sub
xor
lods
jmp
push
or
cmpsb
sbbb
in
or
push
test
pusha
dec
test
lds
adc
inc
lahf
jmp
aad
mov
into
lods
imul
cmp
or
xor
cmp
addl
jnp
daa
dec
rcll
js,pt
mov
cmp
xor
xchg
stc
pop
xchg
mov
mov
and
js
cmp
shl
sahf
adc
imul
ficomps
cmp
xor
xor
mov
jae
cs
outsb
clc
pusha
cmp
mov
jae
sar
add
cmp
ds
mov
add
cmp
mov
rolb
add
or
lods
mov
bound
jp
ljmp
cmp
sbb
int
sub
inc
and
fwait
mov
sbb
imul
push
out
and
push
jle
and
push
cltd
mov
xchg
stos
test
jg
aad
imul
jmp
insb
lahf
repnz
push
sbbb
mov
mov
mov
das
and
mov
adc
push
pop
push
xchg
xor
je
in
jno
push
subl
pop
ds
mov
jno
or
adc
mov
adc
addr16
xlat
std
scas
xlat
inc
sbb
ja
jae
fsubr
xchg
adc
inc
cwtl
je
rclb
pop
mov
shlb
and
lret
or
or
cmpl
scas
jnp
pop
xor
sbb
pop
or
add
popa
cmp
into
jl
pop
out
adc
mov
lret
addr16
stos
outsb
xlat
iret
repz
out
fbstp
rolb
jle
shrb
fs
cmpl
lret
xor
rol
je
or
push
mov
xchg
fs
cmp
into
mov
icebp
xchg
cmc
andl
jp
xchg
movsl
cltd
fcoml
jl
push
mov
jbe
js
jle,pt
dec
mov
std
imul
cmp
js
out
iret
dec
clc
jp
les
xchg
movsl
pop
test
push
outsb
xchg
pop
jmp
icebp
xor
push
dec
fdivrs
sub
and
lea
inc
mov
mov
inc
adc
dec
sahf
data16
mov
xchg
inc
les
std
cmp
sbb
fwait
sub
dec
pop
out
icebp
lock
cmp
roll
int
lret
and
cmpsb
loopne
add
jmp
ret
pop
pop
sub
xor
cmc
jne
and
cmpsl
sub
mov
inc
scas
ja
ja
shrl
mov
pop
xor
mov
push
adc
ljmp
aam
fstpl
outsl
imul
cvtps2pd
mov
and
mov
xor
clc
adc
insl
scas
add
dec
mov
fs
dec
call
sub
lret
push
xor
mov
cmp
fs
mov
addl
and
push
adcb
adc
add
pop
cmpb
gs
inc
cs
fcoms
roll
xchg
inc
sahf
outsl
loopne
call
jno
push
ds
in
cmpsl
addl
lcallw
sbb
ja
fimull
aas
add
cmp
pop
inc
pop
xor
sti
lods
and
xor
dec
andb
cltd
xor
outsl
mov
inc
push
dec
lods
cmp
mov
into
add
cwtl
jge
jb
pop
xchg
mov
fs
sbb
mov
push
pop
xor
ror
cli
inc
pop
test
jns
pop
arpl
or
ljmp
jno
mov
xorl
cmp
adc
inc
dec
sbb
hlt
cmp
dec
rclb
cld
dec
push
pop
sbb
xor
stos
rorb
or
sub
hlt
sub
jmp
shr
mov
or
and
stc
movsl
mov
or
mov
jle
inc
ficoms
fcmovbe
ja
cld
add
dec
fstps
xchg
lock
mov
out
xchg
mov
cmp
incb
add
scas
popa
push
adc
cmpsb
pop
jecxz
movsb
sub
rcr
mov
in
shr
pusha
xchg
test
das
add
fdivrl
push
int3
leave
fisubrs
dec
add
dec
jg
pop
xor
jne
or
loope
xchg
in
push
setns
leave
adc
lret
mov
cwtl
fwait
xchg
xor
mov
outsl
clc
adc
stos
add
xor
rorl
mov
add
dec
lret
outsb
aad
popf
mov
test
mov
cmp
fbld
fsubl
cmpsb
or
xor
cmp
aam
sbb
pop
and
inc
push
mov
mov
jecxz
mov
lea
xchg
add
mov
lock
xchg
add
adc
in
mov
lods
sti
push
das
imul
adc
jb
inc
sbb
xor
dec
outsb
cmpsl
push
or
sbb
sbb
mov
dec
call
icebp
mov
fisubrl
mov
cmp
inc
jnp
jae
sub
jno
je
pop
dec
pop
imul
lock
add
and
sbb
addr16
aad
or
inc
cmp
lcall
dec
aad
mov
in
lods
test
and
push
inc
test
test
imul
imul
xor
js
addl
cmc
stc
std
add
dec
movsb
inc
mov
xor
aaa
xchg
xchg
inc
bound
pop
leave
or
jnp
cmpsb
sub
xlat
cmp
mov
adc
fstl
xchg
jmp
inc
push
xor
pop
outsb
push
insb
or
outsb
cmp
mov
cmp
xchg
mov
push
roll
fstcw
adc
loop
bound
push
add
push
mov
stos
mov
jge
lea
push
lds
or
jbe
bound
and
popf
sbb
in
sbb
dec
out
push
pop
sub
int
loope
sbb
shrb
pop
ret
mov
repnz
mov
xorb
sbb
fisubrs
adc
scas
js
or
xchg
insb
test
mov
inc
repz
fidivrs
cli
lods
or
das
inc
pop
mov
cmpsl
pop
cmp
push
mov
repnz
push
lcall
cmp
ljmp
out
ret
xor
fwait
test
inc
nop
jns
sbb
fdivrs
jle
xchg
loope
sbb
cmpsb
insl
das
add
ljmp
bound
inc
or
cmp
hlt
xchg
add
mov
and
jecxz,pt
xor
orb
fstl
outsb
cmp
jne
mov
sub
add
adc
bound
sahf
fucomi
dec
adc
js
stos
std
mov
or
loope
or
out
mov
pop
popa
pop
and
or
in
sbb
repnz
addl
movsl
cmp
dec
test
data16
dec
inc
jb
push
and
xchg
cmp
je
icebp
dec
loopne
lods
pop
test
dec
int3
and
mov
push
scas
sub
js
pop
add
pop
mov
cmc
ds
mov
pop
cltd
push
lahf
mov
iret
dec
push
add
pushf
push
packuswb
dec
pop
xchg
add
lea
mov
pop
push
dec
loop
xchg
adc
sbb
dec
push
mov
repnz
mov
repz
cs
adc
ret
adc
mov
fs
test
jo
and
jno
mov
xor
mov
out
int
aaa
jge
cmp
arpl
cmp
out
ret
repz
fxtract
cmc
jnp
shll
popf
or
mov
test
imul
sbb
mov
cld
mov
movsl
pop
xchg
mov
loop
and
in
shrb
nop
bound
dec
imul
and
lahf
out
lds
jmp
data16
mov
ljmp
test
fistl
jae
jle
es
jl
std
xchg
icebp
ficoml
lret
push
and
gs
orb
mov
std
push
nop
xor
adc
jg
push
adc
pop
lahf
xchg
sub
in
cmc
ljmp
movsl
adc
mov
imul
and
mov
xchg
xor
repz
cmp
xor
cltd
inc
and
js
mov
lcall
push
lock
stos
aam
fdivr
jo
pusha
in
mov
sbb
fucomip
fisubs
mov
out
rcll
cmp
sbb
cwtl
insb
repz
ja
sub
mov
jmp
jmp
or
push
mov
mov
xorl
cmp
lahf
sub
adc
ss
scas
dec
mov
vpshlb
xor
xor
movsl
pop
adc
cmp
jmp
dec
lods
jb
lahf
add
repz
sub
loope
inc
gs
cwtl
mov
out
rcl
sbb
stos
mov
pop
mov
gs
mov
push
fsubr
not
sahf
dec
cmp
std
inc
out
inc
cmp
jmp
adc
mov
fst
cmp
sbb
bound
xchg
pop
sub
gs
xchg
cmp
cmp
mov
adc
int
mov
or
add
cmp
fwait
das
inc
icebp
inc
out
imul
repz
jmp
inc
sub
jecxz
or
sub
mov
mov
mov
in
push
push
outsl
cmpsl
push
inc
mov
stc
int
call
dec
pusha
jno
push
lock
fbstp
out
in
fwait
hlt
jne
sbb
stos
mov
test
fistpll
xchg
adc
clc
lahf
mov
int3
hlt
adc
mov
aam
xor
cli
repnz
enter
shl
jge
test
rcrb
in
jne
push
test
loope
jl
jbe
xchg
out
or
inc
int
cs
cmp
xchg
std
mov
mov
jno
lret
sub
push
pop
mov
push
adc
push
sub
mov
shl
test
dec
xor
mov
ror
dec
movsl
jg
mov
inc
push
mov
test
int
loop
or
xchg
xlat
ss
jns
xchg
sahf
into
or
fs
xor
icebp
lahf
nop
and
lods
shl
and
push
mov
test
adc
inc
js
cmp
push
sub
xchg
jecxz
jge
jmp
dec
aas
jecxz
add
sahf
fmuls
sbb
mov
fistps
stc
loope
xor
enter
out
mov
fisttpll
popf
cmp
insl
loopne
sbb
and
xchg
xor
push
fcmovnu
xchg
mov
sub
idivb
add
and
cmp
jle
mov
aas
test
incl
inc
sub
push
fnsave
in
je
xor
or
push
sbb
mov
xor
test
or
and
dec
repz
push
push
out
push
outsb
divb
adc
outsl
mov
stos
push
out
push
iret
mov
sbb
std
push
pop
xchg
mov
jb
loopne
int3
jl
ss
loop
andb
fmulp
inc
nop
jno
std
sbb
cmc
and
je
adc
xchg
clc
inc
orl
jns
fisubl
adc
in
mov
data16
shrb
ljmp
movsl
fwait
cmp
ja
lret
popa
push
pushf
loope
inc
mov
or
cltd
mov
ds
adc
cmp
mov
push
adc
xorb
jnp,pt
and
add
and
mov
cmpsl
jns
insl
sbb
inc
lods
mov
loope
pop
outsl
sbb
mov
das
in
adc
and
jl
xchg
dec
daa
out
je
loope
dec
pop
push
or
pop
aaa
out
push
test
ss
mov
push
call
iret
ficoms
jl
push
or
aam
leave
ja
scas
fs
and
sbb
and
mov
xor
push
sbb
xchg
push
and
popa
movl
fstp
xchg
cltd
out
daa
push
ds
push
subl
push
sub
mov
cwtl
mov
sbb
push
xchg
pop
cltd
xor
xchg
outsl
imul
clc
mov
outsb
outsb
jo
loop
btc
aad
aaa
xchg
icebp
insb
and
add
jno
sbb
sub
pop
mov
fs
decb
mov
xor
popf
data16
decb
xor
push
dec
pusha
cmc
fildl
lcall
cld
aam
mov
or
mov
sbb
popa
rol
add
dec
or
fildl
arpl
cltd
popa
sub
inc
mov
daa
jge
repnz
rep
outsb
rcll
lret
icebp
insb
iret
imul
sub
out
xor
sbb
inc
into
jne
sbb
xchg
mov
and
mov
cwtl
cmp
daa
addl
pop
fdivrs
sub
jecxz
and
fsubrs
in
test
or
fbstp
shll
fdiv
dec
popf
xor
cs
lock
add
out
imul
xor
gs
jp
or
fildll
mov
imul
cli
add
cmc
or
inc
xchg
cmove
insl
pushf
bound
insl
push
lea
adc
movsl
add
add
push
insb
xor
gs
ja
cmp
mov
push
bound
mov
sub
add
pusha
rorl
orl
fidivrl
jg
bound
cmp
inc
jg
sbb
aad
rcrl
mov
jbe
lret
xorl
and
outsb
mov
mov
outsb
subb
push
xor
sbb
push
aad
sti
pop
cmp
insb
push
fwait
cmpsl
adc
cmp
ljmp
jle
and
inc
lret
imul
xlat
xor
out
stc
ja
dec
cmp
sub
xchg
imul
sub
mov
fidivrl
rclb
stc
in
lahf
mov
dec
and
jbe
pop
mov
mov
sbb
cmpsb
sub
xchg
inc
sub
jae
push
in
push
neg
sbb
jb
subl
hlt
in
xor
loopne
scas
mov
test
mov
xor
sbb
mov
aad
jno
sbb
adc
jp
std
aas
add
sbb
add
push
xchg
nop
icebp
push
push
push
cs
fisttps
es
lods
sar
jecxz
movsl
arpl
std
ss
and
mov
mov
mov
xor
xor
loope
iret
push
enter
mov
data16
out
movsb
ret
les
mov
xchg
lods
sbb
xlat
dec
xchg
sbb
ficompl
jo
mov
add
icebp
mov
mov
arpl
jo
jb
mov
jb
pop
cmp
add
and
rol
xchg
ret
clc
in
dec
pop
xor
jo
push
scas
adc
lock
incb
xchg
mov
ja
dec
data16
jmp
ret
pop
dec
jg
adc
mov
jae
popf
lcall
cwtl
scas
lahf
roll
rcll
adc
stc
pop
sti
mov
sub
scas
andl
cmp
fbstp
xchg
add
andb
jbe
sbb
loop
push
test
xor
repnz
pop
fcomps
or
mov
pop
call
cmp
repnz
daa
mov
ret
lock
sub
sahf
inc
push
inc
pushf
sub
jp
shl
cmp
pop
div
add
les
cmp
inc
or
sbb
cmp
push
fs
push
and
scas
loope
sbb
push
pop
xor
out
movl
jp
adc
hlt
cli
js
jb
cmp
add
mov
mov
push
ljmp
jb
sub
jmp
cmpsl
jne
int3
mov
loop
fdivl
aad
imul
lds
lcall
mov
sbb
jecxz
fnstsw
shlb
insl
lds
lcall
and
dec
stos
popf
adc
mov
xor
or
subb
push
sub
sbbb
jnp
xor
adc
xor
or
jmp
dec
cmp
stc
mov
mov
out
and
neg
pop
rolb
int
fstl
cltd
data16
or
out
mov
sti
mov
out
jmp
sbb
inc
lds
call
xor
cmpsb
push
sbb
fidivrl
fisttps
cmpb
ret
addr16
push
stc
fldl
dec
in
dec
add
aam
inc
lods
sbb
in
pop
in
fiadds
cwtl
cmp
cmp
pusha
jp
fnop
fwait
inc
scas
adc
jo
pop
bound
inc
mul
movsl
lds
std
mov
cld
roll
mov
jb
xchg
cld
popa
inc
adc
xchg
cltd
hlt
push
mov
fwait
add
int
push
pushf
push
or
icebp
and
repnz
and
imul
ficoml
lock
cs
inc
mov
jecxz
push
jae
loopne
test
jl
and
xchg
and
fcmovnbe
jns
xchg
xchg
jmp
popa
add
xchg
fstp
or
hlt
imul
xorb
inc
jg
push
jbe
adc
pop
out
into
daa
or
jmp
andb
clc
mov
sbb
mov
cmpsl
shlb
mov
fldl
sbb
add
enter
pushf
jmp
loopne
enter
mov
jp
jns
outsb
sahf
js
dec
loop
adc
in
cmp
and
repnz
imul
mov
add
cmp
pop
cmp
mov
popa
dec
pop
mov
pop
repz
imull
cmp
aaa
pop
ret
hlt
jmp
call
inc
add
mov
lret
jno
out
mov
sub
mov
fistpll
popf
push
cmc
scas
shlb
jb
ljmp
int
jp
xchg
in
jne
push
xchg
outsl
or
sub
les
pop
movsl
int3
jle
inc
stc
mov
jno
imul
daa
cltd
adc
xchg
or
sbb
or
push
jnp
adc
push
and
cmp
data16
iret
pop
lods
dec
mov
add
es
adc
push
xchg
aam
jle
push
lahf
xchg
mov
mov
nop
xor
xchg
adc
shlb
mov
shrb
mov
loopne
or
enter
pop
in
mov
popf
sti
mov
xor
das
sti
iret
test
jle
stc
cld
mov
mov
aam
les
sub
ret
movsb
ds
stos
arpl
sub
inc
pop
cld
cld
test
adc
sub
inc
push
pop
mov
test
mov
in
aad
and
xor
repnz
and
idivl
sbb
jbe
lods
sbb
xor
mov
dec
xchg
jp
and
cs
subb
and
clc
jp
jmp
push
jo
stc
fistl
negl
pushf
sub
ss
div
or
dec
fistps
or
fs
insb
mov
mov
mov
inc
fisttpl
inc
jbe
pop
lret
adc
and
scas
jo
jae
in
in
iret
push
addb
fucom
cmp
or
mov
fcoml
mov
testb
jecxz
jo
dec
push
push
sub
jb
sbb
fsubs
loopne
xor
mov
pop
jns
cmp
fiadds
fdivrp
xchg
xchg
shrb
inc
inc
in
loope
xchg
out
xor
add
out
out
pshufw
mov
stos
sti
fildll
mov
imul
sub
insb
add
xor
or
jbe,pt
fidivl
rorl
cmp
leave
mov
ret
int
jl
lods
data16
sbb
mov
cmp
or
or
push
in
andl
lret
jno
in
in
pop
sbb
negb
cltd
mov
jmp
out
push
jo
aas
insl
inc
ficoms
ret
add
call
insb
or
mov
cmc
stos
rolb
xchg
mov
dec
push
fistl
popa
sub
sub
sub
push
add
cmp
xchg
inc
pop
in
sahf
mov
add
xor
pop
cmp
movsb
or
add
sub
cmp
add
adc
jbe
ficoml
mov
cmp
push
cmovl
int3
pop
and
xchg
popf
jp
mov
arpl
repz
xchg
pop
mov
mov
cs
cmpsb
inc
xchg
enter
in
mov
adc
push
hlt
addb
jmp
into
sbb
xor
lock
and
dec
jg
test
adc
dec
lret
or
push
sbb
cs
jnp
mov
cld
bound
mov
test
jl
add
fwait
addr16
jl
xlat
cmp
jle
sbb
cltd
add
faddl
lods
jns
rclb
and
add
test
mov
sbb
mov
sbb
and
mov
outsb
pop
cs
pop
cmp
sub
push
sbb
les
sub
rorl
fs
inc
jp
rclb
jmp
dec
cmpsb
mov
sbb
leave
jg
hlt
cmc
mov
sub
dec
sbb
out
fcompl
pop
xor
pop
test
add
xchg
pop
bound
lcall
inc
orb
push
xor
out
cmp
mov
jmp
call
xchg
iret
rorl
xlat
jae
push
inc
cmp
xchg
jmp
jge
jp
mov
inc
xchg
jo
cmp
orb
mov
scas
insb
call
gs
lock
push
aad
jecxz
or
pop
lds
cmp
sahf
je
lock
xlat
sub
inc
xchg
mov
and
dec
mov
cli
out
lahf
mov
cs
repz
pop
loope
call
ja
aam
or
rcl
popa
cmc
inc
cltd
lcall
bound
pushf
mov
out
pop
cli
fwait
test
xchg
fsubp
and
in
jge
push
xor
in
xor
or
cltd
ja
push
dec
and
out
pop
xor
or
enter
cmp
xchg
adc
adc
sbb
mov
icebp
es
xchg
xor
daa
mov
imul
jp
push
pushf
jge
icebp
call
xor
push
xor
into
pop
jge
loope
sbb
lods
mov
sub
test
div
or
out
movsl
and
cmp
popf
xchg
add
es
loope
out
in
mov
pop
jb
int3
dec
cmp
jns
sahf
xor
xchg
cmp
cld
and
push
popa
enter
add
leave
dec
push
and
lea
jge
aam
aam
jnp
ret
data16
pusha
cmp
jmp
fwait
cmp
das
inc
in
repnz
stos
aad
add
push
loopne
std
push
cwtl
add
addr16
push
sub
pop
sub
stos
in
ja
mov
xchg
insb
cwtl
adc
xlat
xchg
imul
dec
rclb
fmuls
xlat
sbb
mov
xor
xor
aaa
dec
insl
inc
fbld
or
xchg
repnz
or
loop
add
inc
movsb
cmp
push
push
outsl
hlt
bound
fists
aas
inc
and
inc
and
out
or
ss
jle
test
lret
xchg
scas
push
jecxz
mov
loopne
add
arpl
scas
cli
sbb
and
loop
fnstenv
xor
lahf
or
push
imul
icebp
test
xor
in
call
rorb
gs
mov
fiadds
pushf
push
dec
or
xchg
jl
inc
test
xchg
adc
inc
pop
mov
or
jo
jo
add
xor
pop
push
push
dec
inc
icebp
inc
jnp
dec
mov
push
push
stc
xchg
dec
fisubs
out
mov
and
sub
fisttpll
test
and
loope
repz
in
lods
in
mov
sbb
ret
aad
out
aad
dec
mov
and
shll
mov
pop
xor
inc
jns
sti
mov
fbstp
mov
and
pop
mov
fstpt
adc
adc
pop
icebp
xor
and
in
cmpsb
mov
out
out
cmp
add
sarl
xor
inc
popa
mov
or
cmp
sbb
loope
fdivl
stos
sti
test
push
jp
leave
je
push
xor
jnp,pn
repnz
gs
inc
xchg
js
jl
hlt
inc
sbb
testl
popa
movsb
cmp
in
sub
mov
clc
cmp
sbb
aas
add
push
call
lea
jge
in
jnp
lods
scas
mov
gs
addr16
add
mov
das
stos
int
adc
and
jg
iret
sub
arpl
or
clc
and
xor
in
mov
jg
cmp
repz
push
lahf
mov
sub
bound
in
sub
adc
test
lret
fidivrs
pop
xor
pop
push
xchg
cwtl
add
ror
leave
in
hlt
out
cmpsb
inc
outsb
xchg
ja
mov
mov
xchg
stc
mov
push
jae
clc
xlat
xor
mov
mov
jecxz
sbbb
cmp
pop
push
cmp
cltd
jp
or
xor
test
outsl
sbb
sub
sub
test
xchg
shll
scas
fmuls
pushf
jp
mov
sbb
mov
jg
and
mov
divl
ret
pop
nop
add
pop
sub
jle
nop
leave
scas
mov
sub
repnz
mov
mov
out
jbe
and
cmpb
test
cltd
jns
fwait
lods
xlat
or
pop
dec
xchg
sarb
xchg
sbb
push
sbb
inc
push
enter
adc
adcb
ret
mov
iret
pusha
xchg
in
and
xor
cs
dec
subb
pop
adc
pop
cmp
cmp
add
or
jle
clc
lret
movsl
sti
adc
pop
pop
jle
ds
sub
test
xchg
push
or
jecxz
out
into
mov
jo
lret
xor
jns
mov
subb
pop
cli
fsubl
test
icebp
pop
xor
je
xor
das
xchg
sti
int3
sbb
rcrl
dec
lds
lea
lods
popa
imul
add
push
pop
push
mov
xor
pop
mov
ret
jbe
dec
pop
fcoms
iret
lret
mov
cld
jle
cmp
int3
mov
cmp
rcpps
repz
adc
jl
aad
add
les
sub
fidivs
divb
enter
jmp
cs
jle
ljmp
inc
test
mov
jo
or
sub
test
push
mov
mov
ret
sub
fninit
mov
dec
push
add
cmp
add
loop
sbb
sub
movsb
fdivr
xor
test
lods
push
daa
mov
xchg
call
nop
js
and
repz
pop
iret
jg
fs
outsl
jne
dec
jns
loopne
mov
sub
push
ja
push
repnz
fidivrs
rorl
mov
daa
mov
or
cwtl
fwait
je
mov
pop
sub
call
pusha
jno
ret
mov
lahf
jns
repnz
cmp
icebp
cmp
ror
int
adc
test
fstpl
xchg
stc
lret
faddl
sbb
jae
jmp
icebp
fidivrs
mov
mov
and
int3
stos
pop
imul
in
mov
in
and
fisttps
aaa
cmp
sbb
icebp
js
mov
mov
jo
mov
xorl
test
pop
out
je
mov
or
push
shll
push
or
dec
flds
xorb
leave
pop
pop
aam
or
shll
in
rolb
dec
mov
adc
cwtl
pop
loop
test
pop
cwtl
je
mov
xchg
mov
cmp
inc
pusha
cmp
ficoms
pop
jmp
dec
das
sub
jnp
inc
xchg
pop
jg
scas
jnp
adc
inc
cs
jbe
js
fsubr
fisubrs
jb
push
cmp
jp
std
add
pop
dec
adc
cmp
dec
cmpsl
pusha
mov
aaa
lea
lock
sbb
and
es
in
jmp
in
xchg
iret
xor
cmp
push
mov
lods
jns
push
and
dec
das
push
push
jo
cmp
shll
jecxz
mov
cmp
pop
ja
pushf
jecxz
shll
enter
in
int
mov
daa
imul
movsb
std
es
push
adc
push
mov
movsb
or
or
jl
push
sbb
pop
sub
inc
icebp
xorb
mov
shll
imul
outsl
daa
mov
mov
ret
in
outsb
cmpsb
pop
or
lcall
std
ss
jp
or
mov
push
data16
insl
add
xor
cmp
and
jge
sahf
aas
mov
lret
ja
loopne
in
adc
leave
sub
or
sbb
sub
into
add
push
icebp
imull
cmp
lcall
mov
mov
cmpsb
or
shlb
or
push
pop
push
xchg
xlat
push
push
mov
xchg
mov
jmp
in
pop
and
data16
xchg
scas
lock
je
dec
int
es
sbb
scas
popf
arpl
pop
add
or
adc
mov
sbb
enter
aam
cmpsb
xchg
push
mov
mov
fidivrs
ja
gs
pop
push
jbe
scas
cmp
lds
js
add
fidivrl
mov
jo
rcr
stos
pop
cmp
mov
aaa
adc
rorb
loop
hlt
sbbl
mov
pusha
sub
lea
sarl
and
repnz
ljmp
cmp
aad
pop
leave
shlb
imul
xchg
je
lahf
enter
pop
xchg
ror
test
dec
push
pop
push
test
xor
mov
popa
mov
mov
mov
repz
cld
call
in
sti
jp
inc
icebp
mov
jmp
xor
jecxz
aaa
test
sub
fsubrl
cmp
cmpsl
mov
rolb
adc
pop
movsl
sbb
sub
mov
jno
mov
xor
dec
addb
in
cmovns
mov
loope
push
pop
mov
js
clc
sbb
cltd
xor
dec
add
imul
test
mov
dec
dec
int
jb
xchg
xchg
xchg
mov
js
jne
ror
cwtl
in
data16
mov
jge
sbb
addr16
sti
lret
mov
lds
fisttps
adc
sbb
sub
call
add
adc
sub
data16
and
xchg
sbb
sbb
mov
jmp
lods
jb
cmc
cmp
dec
repz
or
repnz
idivb
mov
int
stos
xor
int
adc
scas
cmpl
dec
ja
addr16
cmpsb
rolb
cltd
call
in
and
test
addr16
sahf
imul
and
jecxz
rcl
hlt
ljmp
push
xor
aas
lret
aas
cltd
jbe
xor
nop
mov
pop
cmp
or
lret
add
and
jne
xchg
pop
pop
jle
mov
add
lea
jl
mov
into
pop
xchg
jp
aam
jne
aam
xchg
or
adc
lock
sub
aam
push
mov
mov
ss
aad
jno
xor
fisubrs
mov
jg
ja
cli
cmc
mov
sbb
pop
lds
mov
jne
cmp
push
xchg
lock
fsubrl
jmp
imul
cmpsl
inc
jno
fldl
and
inc
mov
notl
cmc
loopne
xor
leave
out
stos
fwait
insb
pop
xor
daa
cmp
push
scas
test
xlat
inc
add
xchg
outsl
dec
mov
pop
out
sbb
push
lods
lret
das
add
jo
stos
aaa
push
xchg
sub
rclb
outsl
jp
jecxz
jns
aas
insb
outsl
movsl
cmp
rcr
into
adc
cmp
xchg
sbb
cmpb
out
xchg
mov
lret
pop
call
cld
mov
jmp
mov
clc
mov
inc
or
sahf
mov
adc
iret
outsb
add
ljmp
scas
les
push
int3
mov
add
rcll
inc
or
lds
mov
repnz
mov
ljmp
push
fwait
xor
mov
mov
adc
lods
leave
out
inc
xor
das
cmpb
je
in
sub
mov
dec
loope
das
and
fnstsw
pusha
sbb
js
stc
hlt
sahf
out
xlat
cmp
icebp
sbb
push
pop
push
test
movsb
test
add
adc
pop
pop
cmp
xor
fiaddl
adc
push
push
vmovaps
arpl
push
sub
out
outsl
push
mov
int
xor
daa
sbbl
add
adc
in
jmp
sub
cltd
fdivrl
cmp
mov
adc
mov
shrb
popf
pop
xchg
mov
jnp
xlat
fadds
xor
mov
aaa
sub
inc
or
js
mov
jecxz
mov
push
mov
jl
inc
xchg
test
jo
jb
sbb
insl
cmpsl
add
in
loope
inc
mul
xchg
add
fldt
rorb
xchg
test
dec
adc
jp
out
jbe
jmp
dec
add
sahf
cmp
sahf
push
jg
mov
rorb
loopne
mov
sub
push
or
arpl
push
jge
pop
pop
repz
adc
stos
mov
adc
movsl
std
add
leave
stc
xchg
ret
sbb
push
push
lcall
rcll
js
add
lcall
add
bound
dec
pop
mov
add
pop
andb
pop
jns,pn
decb
test
push
rorl
fsubrs
sti
push
loope
mov
sarl
mov
inc
test
out
stos
jns
and
cwtl
aaa
rolb
xor
negb
call
pop
jecxz
adc
xorl
xchg
test
notb
jbe
out
xchg
sbb
andl
iret
aam
sbb
jp
push
xchg
pop
sti
xor
jg
jg
add
jmp
or
call
and
jb
fcompl
movsb
add
stos
cs
add
call
enter
or
mov
adc
adc
aam
push
cli
shll
int3
sub
in
add
jne
xor
push
fldcw
in
sub
xchg
stos
mov
fs
ror
or
fisubs
jnp
push
add
xchg
sarl
push
mov
rcrl
cli
sub
inc
xor
dec
jno
mov
add
aaa
test
test
xor
xor
fldenv
fildll
insb
add
or
jmp
insl
mov
push
sbb
fnstcw
xor
sbb
inc
roll
and
lret
pop
repz
adc
mov
shll
loopne
jae
loopne
adcb
or
popa
push
push
or
pop
dec
lock
outsl
data16
dec
fadd
shr
movsl
adc
arpl
daa
jae
fisttpl
sahf
aas
in
imul
xchg
mov
mov
sbb
cmp
fcomps
pop
loopne
inc
xchg
mov
or
add
cmp
sbb
sub
xor
imull
cmp
and
xchg
mov
jg
cmp
pushf
mov
fsubs
jecxz
stos
adc
scas
and
leave
rorb
imulb
inc
dec
dec
cmp
outsb
push
sbb
xchg
jge
bnd
push
pop
icebp
pop
stos
sbb
fdivs
mov
mov
cmpb
add
fs
mov
jne
out
mov
stc
sbb
les
ret
test
popf
mov
sub
mov
inc
mov
call
outsl
push
orb
icebp
mov
adc
xchg
out
jl
mov
cmpl
and
ds
rcr
repz
scas
repnz
scas
or
sub
push
mov
add
mov
jae
das
loope
addr16
mov
aaa
repz
fists
sahf
mov
inc
xor
xchg
testl
nop
in
movsl
hlt
and
in
inc
divl
push
aad
push
mov
or
lock
jle
gs
ret
mov
fisttpll
cwtl
push
jge
dec
and
jg,pn
push
pop
push
fsubrl
sbbb
add
jno
subb
popf
mov
lock
xchg
inc
adc
sbb
or
or
sbb
jl
dec
jmp
sahf
add
fs
mov
stos
aad
xor
cmc
out
les
outsl
lods
fldenv
dec
das
lds
popa
mov
push
enter
ljmp
insb
sub
cld
ss
aad
lds
adc
in
sti
or
mov
jo
fyl2x
iret
jle
inc
jae
ret
ljmp
lret
xchg
imul
shrb
mov
mov
mov
out
mov
cli
popf
pop
cmp
das
in
push
into
dec
push
push
cmp
push
fadd
subl
cmp
stos
mov
in
cmp
cmp
jo
pop
pop
cmp
push
xlat
cltd
pop
aad
popa
mov
pop
inc
out
lcall
or
icebp
sub
addl
jecxz
fwait
insl
imul
pop
sbb
xchg
ja
and
adc
addr16
jmp
insl
lcall
scas
in
bound
cli
push
cmc
push
loopne
orb
jno
push
out
xchg
fstps
jno
lods
outsl
mov
cs
inc
outsl
sub
dec
ficoms
ficoms
or
out
sub
cmc
fwait
cmp
push
mov
aas
into
sub
add
lcall
add
lds
into
push
cmp
test
lcall
bound
rcll
vpsadbw
lock
mov
movsl
pop
inc
adc
aaa
inc
daa
imul
and
xchg
jge
mov
loopne
mov
mov
jb
lret
sbb
jle
shlb
jmp
test
mov
jbe
aad
sbb
mov
leave
pop
add
jb
jne
mov
mov
rcll
xor
sub
jb
or
cmpsl
mulps
inc
aad
stc
cmp
repnz
sar
in
sbbb
cld
sub
mov
xchg
popl
push
leave
pop
adc
sbb
inc
shrb
push
pop
xorb
adc
mov
pop
push
sbb
mov
jbe
dec
punpckldq
pop
add
dec
push
je
imul
aaa
fwait
out
pop
mov
fsubp
js
int3
inc
xor
mov
cmp
mov
rcrb
mov
mov
stos
or
pop
in
jmp
lcall
adc
imul
mov
mov
lret
loopne
ds
mov
or
sbb
mov
mov
scas
mov
gs
xchg
adc
outsb
adc
jmp
rcrl
sbb
cmp
sbb
and
mov
les
popf
push
or
or
jbe
or
aad
stos
xchg
mov
dec
mov
mov
test
subb
inc
in
ret
jno
test
lret
sti
cmp
push
ds
sub
dec
into
sub
mov
insl
sarb
fsubl
jno
leave
xlat
pop
scas
jge
push
dec
icebp
call
mov
lods
scas
fstpt
pop
gs
popa
xchg
lods
mov
xor
xor
jnp
gs
jmp
shrb
and
mov
out
nop
mov
mov
shl
push
jg
lret
cmpsb
xchg
ret
or
sbbb
cwtl
movsb
mov
pop
sti
sbb
dec
ds
and
push
dec
leave
imul
loope
fisttpll
pusha
shrb
xchg
clc
je
inc
adc
loop
stos
clc
movsl
addb
jnp
ror
cmp
sub
fcoms
ja
and
add
pop
out
shl
popf
shrl
push
mov
sub
sub
call
adc
aaa
ret
push
call
jmp
and
mov
add
decl
movsl
push
shrb
sbb
add
test
xchg
test
mul
sbb
mov
loop
adc
cmp
xchg
sti
or
shll
inc
xchg
xor
dec
xorl
gs
icebp
add
and
test
nop
push
in
push
inc
lcall
sbb
arpl
das
pop
aaa
xor
repz
or
inc
iret
arpl
jmp
xor
stos
pop
out
das
xorl
and
jle
mov
in
movsb
or
inc
mov
jno
cltd
lock
test
decl
fisttpl
int
dec
inc
psubq
int3
or
jmp
or
movsb
or
cmp
sub
loop
mov
pop
dec
mov
loope
bound
jl
imul
shrb
aaa
movb
dec
xchg
aad
icebp
je
sbb
sahf
mov
pop
mov
push
mov
fmull
pop
movl
das
pop
fwait
jbe
fsubrp
or
lods
in
xchg
or
xor
cmp
xchg
hlt
push
and
pop
in
jge
fnstenv
out
outsb
dec
out
ljmp
push
dec
stos
inc
pop
pop
mov
mov
pop
stc
push
sub
mov
push
nop
mov
mov
fldt
xlat
and
cmpsb
inc
cmc
and
repnz
and
ret
into
lret
pop
xchg
pop
out
add
mov
xchg
push
aaa
ds
push
popf
dec
ja
popf
xor
mov
idiv
test
leave
mov
out
out
outsb
cwtl
mov
mov
jbe
mov
push
cs
int3
and
mov
in
ficoml
mov
loope
add
push
inc
popf
dec
orb
and
mov
push
xchg
lret
adc
or
push
fcmove
cli
lods
into
imul
out
xchg
xor
sub
push
popa
data16
and
pop
rorb
inc
stc
hlt
cmp
mov
lcall
mov
ss
ret
stos
ja
sub
jle
pop
add
scas
cmp
sahf
loopne
ja
jp
test
stos
lods
sbb
decb
out
mov
mov
push
mov
jbe
sbb
sti
lcall
ror
mov
sub
cmpsb
and
icebp
and
dec
cmp
and
repnz
movsb
sbb
add
into
and
cmpsl
push
pushf
pop
lods
mov
pop
icebp
xor
add
dec
jp
pushf
or
es
test
fucomp
jl
insb
loopne
daa
mov
xchg
adcl
pop
into
lock
into
cmp
pop
daa
mov
cmp
out
mov
aam
jb
sub
test
fs
lahf
out
stos
xchg
clc
out
aas
xor
ror
loopne
ljmp
sbb
jle
arpl
push
int
or
call
psubb
mov
push
roll
jae
xchg
mov
sarb
lcall
ds
insb
mov
inc
cmp
dec
movsb
popf
rclb
mov
clc
xchg
subb
cmpsb
mov
data16
rorl
sbb
cmp
cmp
rcrb
out
xchg
in
sbb
aam
outsb
mulps
shll
jno
test
aaa
leave
imul
fists
pop
out
mov
xor
mov
add
imul
add
bound
imul
lock
xlat
mov
xchg
pusha
dec
mov
daa
ja
gs
cltd
mov
icebp
out
fstpt
mov
or
xor
push
fidivl
int
movsl
or
movsb
fsubr
mov
stos
push
xchg
mov
out
jl
repnz
je
int
mov
cld
pop
imul
imul
jg
cld
and
cmp
insl
dec
push
test
jle,pn
cwtl
mov
gs
xchg
sbb
ljmp
outsb
xchg
jle
ss
mov
or
mov
cmp
mov
fcoms
adc
mov
jns
sub
or
mov
enter
arpl
or
dec
dec
repnz
mov
clc
mov
in
mov
adc
push
inc
fbld
es
xor
push
lea
js
push
jae
cmp
fwait
jne
mov
shrl
fldt
addr16
or
sarl
jno
mov
inc
adc
sarb
sub
xor
or
xor
mov
jecxz
stos
imul
dec
or
mov
out
sub
mul
fcoms
mov
insb
in
dec
mov
insl
out
lock
inc
sub
or
out
lods
mov
xchg
adc
add
data16
lret
shrb
and
and
scas
lods
mov
pushf
jns
and
sbb
fstpt
ss
adc
xchg
and
or
mulb
enter
fisubl
and
push
sbb
and
cmc
scas
ds
dec
or
sub
icebp
mov
jge
xchg
pusha
bswap
jp
aam
addl
rcll
fildll
xchg
mov
xchg
cmpsb
cmp
js
add
pop
std
pop
sbb
rorb
ret
lcall
js
inc
fistl
pop
adc
sub
mov
pop
add
xor
faddl
cmp
or
nop
daa
jae
xor
mov
push
add
mov
xchg
icebp
in
xlat
ljmp
aam
pop
mov
jns
decl
sahf
inc
in
ja
jne
push
xchg
sbb
mov
sub
loop
test
mov
es
sub
adc
outsb
jnp
xchg
std
mov
xchg
out
jle
sarl
imul
movsl
inc
jno
cmp
sbb
adc
dec
xorl
subb
mov
addb
mov
int3
out
fildl
icebp
insb
pop
cwtl
subb
pop
das
dec
dec
dec
add
sub
jo
fidivl
adc
sbb
orb
sbb
push
std
inc
adc
cmpsb
xor
jb
aam
sub
sbb
stos
or
pop
js
pop
lods
insb
aam
repnz
pop
jae
add
mov
daa
test
scas
fcoms
popa
lahf
inc
sub
push
imul
add
xchg
rolb
xchg
cwtl
jle
out
jle
pop
cmp
stos
es
sub
mov
dec
cld
pop
inc
pextrw
adc
mov
aad
or
jle
test
fs
outsb
push
sub
das
lcall
in
jl
adc
xchg
xchg
call
lea
mov
add
daa
bound
xchg
and
adc
push
mov
jle
adc
loope
sbb
inc
lret
adc
jp
xorb
enter
mov
out
xor
das
ficoml
adc
sub
cmp
xor
mov
push
pop
and
or
push
negl
pop
popa
mov
lret
iret
jle
push
push
push
int3
mov
rcrb
sbb
adcb
sub
sbb
and
dec
leave
xchg
add
ja
adc
ja
pop
mov
adc
mov
or
pushf
push
test
fs
sbb
inc
mov
rol
dec
jle
xor
jb
dec
xor
and
sub
repz
int
jno
or
fdivl
in
popa
out
inc
cmpb
jl
outsb
adc
inc
cmpsl
sub
sub
cltd
int3
mov
shl
and
popf
test
sbb
enter
lret
pushf
push
pushf
add
jo
xchg
mov
push
stos
push
bswap
xchg
in
push
fimuls
in
cmc
or
repz
jge
movsb
pop
imul
je
in
jb
js
and
lea
sbb
les
xor
cmp
inc
sbb
aad
lods
add
pop
jg
sbb
xchg
data16
lret
sarb
mov
nop
rolb
insb
rcrb
and
les
xchg
fistl
jo
fisubrl
popf
sahf
jnp
jno
loope
pop
out
int
sub
or
or
xor
aad
lcall
call
jno
push
aaa
pop
mov
jecxz
sub
test
inc
fdivl
inc
xor
in
ret
xor
loopne
mov
adcl
mov
dec
movsb
inc
andl
xchg
add
xchg
sub
fists
int3
jbe
cmp
fimull
add
les
out
jg
sti
aad
add
xchg
mov
es
clc
loop
mov
adc
dec
std
in
pop
leave
add
mov
mov
fs
adc
gs
stc
cwtl
jge
adc
push
in
out
mov
inc
in
xlat
sub
leave
jle
rcl
dec
ss
jmp
mov
adc
dec
and
or
pop
xchg
pop
cwtl
retw
mov
fadd
sahf
loop
cmc
bound
xchg
fisttpl
add
roll
xor
in
cmp
rol
jns
mov
jmp
imul
arpl
mov
jnp
push
sub
sbb
sub
scas
xchg
xor
jb
pop
pop
sub
adc
push
imul
repz
dec
mov
push
ss
add
repz
int
out
and
or
lods
sub
test
leave
in
add
out
outsb
scas
sub
jbe
das
mov
mov
mov
adc
sub
mov
bound
and
sub
jge
dec
std
push
fwait
add
xchg
cmp
pop
loop
cli
lea
or
cld
pop
jg
pop
mov
add
jo
mov
push
repz
mov
cli
fwait
aad
lock
add
gs
push
xor
push
ss
mov
stos
inc
push
mov
flds
repz
lods
push
pushf
sbb
lret
or
mov
sar
outsl
aaa
cmp
jge
jne
mov
scas
mov
or
mov
mov
add
mov
sahf
or
inc
mov
push
mov
jbe
das
dec
pop
push
js
cmpsl
mov
out
fucomi
adc
repz
daa
jl
or
ja
pushf
push
test
mov
jl
push
sbb
xor
cs
cltd
mov
or
and
xchg
push
lcall
sbb
lods
xchg
cmc
std
dec
dec
test
int3
clc
fcoml
out
xlat
jae
out
xchg
test
push
je
sub
aaa
push
xchg
sub
movsl
mov
sub
xchg
cmp
imul
out
mov
xchg
out
in
ss
nop
cld
aas
dec
mov
dec
mov
mov
fdivs
jp,pn
pop
jecxz
fs
push
cmp
add
fidivs
push
jne
add
mov
aad
fstps
xor
test
cmp
adc
push
das
in
call
mov
xor
cmc
idivl
loop
fldl
setg
mov
outsl
test
addb
mov
xchg
sub
in
test
lea
je
mov
aad
xchg
cmpsb
inc
testb
push
dec
out
inc
mov
and
cld
fisttps
jg
scas
inc
sub
xlat
into
pushf
add
iret
mov
sub
popf
mov
std
lret
xor
add
mov
pop
and
pop
inc
xlat
daa
cli
mov
data16
push
add
mov
pop
and
into
dec
bound
sub
fcoml
mov
cmp
sub
xor
sub
add
fs
mov
push
push
rcrl
mov
push
pop
aas
mov
dec
iret
pop
and
xlat
lods
dec
into
lock
jmp
bound
pop
insl
repz
sub
cmp
mov
jmp
in
or
leave
mov
inc
sub
adc
dec
stos
daa
clc
bound
ja
inc
xchg
or
pusha
push
push
cmp
sahf
rcll
lret
addr16
sbb
fldt
rorb
sub
push
cmp
dec
out
lea
repz
jle
jbe
test
fmull
jmp
imul
mov
nop
mov
cwtl
pop
jns
or
int
jmp
pop
mov
das
punpckhdq
sub
inc
adc
in
sub
pusha
lcall
pop
in
pop
ja
pop
mov
data16
xchg
fbld
or
dec
sub
xchg
dec
lds
mov
sti
fsubs
inc
enter
daa
xchg
outsl
pop
push
jg
out
sub
aas
insl
or
aas
rolb
jbe
rclb
xchg
roll
pushf
dec
scas
adc
xchg
jno
jmp
dec
jmp
lahf
movsl
les
dec
insb
or
lods
xor
mov
cmp
adc
sti
push
mov
mov
ss
add
std
lds
or
ljmp
sbb
fisubl
cmp
add
lahf
out
test
or
aaa
and
adc
int
loopne
mov
dec
add
mov
cmc
lcall
xchg
push
jae
fiadds
test
inc
idivl
popa
clc
dec
inc
sbb
cmp
cmp
xchg
xor
push
test
lods
cmp
inc
mov
pop
jo
and
or
add
xchg
lahf
rcl
test
push
cmp
fsub
mov
cwtl
loope
gs
or
clc
iret
xor
or
xchg
ja
psadbw
sti
sub
mov
pop
mov
jg
xor
sbb
xchg
mov
shll
lock
out
xchg
shld
sub
imul
scas
and
out
repz
inc
shl
and
mov
push
rcrl
dec
inc
mov
push
xchg
mov
sbb
jp
arpl
mov
insl
xor
mov
jno
mov
sahf
sub
out
repz
mov
iret
ljmp
jp
cmp
mov
push
iret
leave
push
data16
dec
sub
jnp
stos
mov
aad
add
enter
int
jb
mov
adc
dec
popl
jl
outsb
int3
mov
movsb
mov
hlt
gs
jp
inc
shrb
push
outsb
push
jmp
cmp
ret
jg
cmp
lahf
xchg
inc
or
jmp
sbb
aas
xchg
sbb
ret
and
fs
arpl
mull
cli
sub
cmp
cmp
mov
pop
or
dec
dec
sub
aad
pushl
std
sub
in
xadd
hlt
into
in
push
loope
mov
bound
dec
inc
mov
daa
loopne
push
test
mov
cmpl
xlat
inc
push
push
stos
mov
in
insl
test
hlt
jecxz
std
gs
add
xchg
add
lcall
or
mov
mov
pop
icebp
jbe
lds
fists
stc
push
fdivp
pop
push
mov
sub
mov
rolb
inc
pop
jecxz
jl
sub
and
scas
std
xchg
inc
pop
lret
and
xor
jp
and
sbb
nop
subb
ljmp
cmp
and
push
sbb
sbb
mov
fs
fmul
mov
inc
jae
jecxz
pop
outsb
mov
sti
ror
jmp
arpl
inc
pop
mov
dec
and
insb
adcb
fisubrs
cmp
sub
addr16
stos
xor
cmpsl
mov
movsl
or
out
mov
in
mov
dec
mov
adc
dec
mov
mov
stos
or
mov
push
inc
aas
lahf
sbb
icebp
pop
lea
lods
pop
sbb
inc
les
cmpsb
movsb
sub
mov
xchg
hlt
hlt
cli
mov
loop
xchg
or
lock
lods
fiaddl
mov
arpl
mov
mov
orl
aad
push
xchg
jle
icebp
sbb
out
push
jae
and
add
lea
cmpsl
dec
push
fs
mov
xlat
cli
lcall
inc
sbb
push
sbbl
stc
lret
fisubrl
cmpsl
lods
les
fstps
sahf
in
pop
insl
xchg
add
repz
divl
cmp
lahf
adc
sahf
mov
loope
movsb
nop
pop
mov
cmpsl
push
mov
fs
sub
push
and
inc
cmc
enter
in
out
popfw
inc
or
out
shll
popa
dec
out
xchg
lods
sti
loopne
or
lea
ret
leave
or
clc
nop
stos
fidivs
inc
push
repnz
xchg
or
sarb
stos
push
mov
xchg
lcall
sub
inc
iret
pop
in
mov
pop
jbe
jnp
loope
push
pusha
adc
loop
mov
shl
jg
and
and
push
stc
add
sbb
lahf
scas
mov
test
ret
dec
nop
in
gs
xchg
adc
scas
sbb
jb
arpl
mov
mov
xor
lahf
dec
xor
fistpl
popa
mov
pop
out
pop
repnz
xchg
test
loop
testl
pop
push
ret
xchg
inc
pop
clc
je
jl
jmp
push
fdivl
loop
ret
ret
cmp
push
pop
test
and
and
shl
je
adcl
int3
sub
sub
imul
sbb
ss
xchg
pop
push
jp
mov
push
and
sbb
leave
mov
inc
insb
hlt
outsl
sbb
lods
out
mov
mov
lock
rolb
int
les
mov
sub
sub
fsts
icebp
mov
inc
push
mov
mov
and
jmp
daa
sub
pop
or
dec
inc
mov
popa
dec
subl
sbb
nop
mov
sub
stc
imul
pop
or
les
iret
mov
push
orl
addr16
in
call
stos
or
mov
inc
inc
in
and
jnp
out
scas
and
jmp
pop
xchg
mov
popa
fs
outsl
xlat
rclb
and
add
ret
mov
sar
or
inc
inc
pushf
sub
fs
pop
jnp
dec
dec
adc
scas
test
push
and
pop
pop
xorl
aad
ret
outsb
lea
in
sbb
mov
insb
lcall
loopne
cwtl
repnz
into
gs
jbe
push
and
rclb
push
cld
mov
jbe
jmp
lock
fstpt
pop
mov
add
pop
dec
daa
call
repnz
sbb
cwtl
xlat
stc
xor
dec
adc
mov
fidivrs
cld
xchg
sbb
cltd
cmp
int
mov
push
mov
rol
lods
xor
cmp
les
out
inc
jb
int
mov
btc
mov
test
add
push
add
fcomps
out
xchg
xchg
aad
inc
xchg
out
daa
stc
mov
sbb
pop
add
or
pop
add
sub
dec
idivl
push
push
inc
cs
sub
push
xchg
ds
dec
xor
mov
cltd
inc
jb
sub
jg
or
add
mulb
mov
xchg
pop
test
mov
or
jne
jg
jmp
mov
insb
fsubrl
or
and
aaa
ja
mov
or
mov
lock
lret
clc
lret
add
push
sbb
jbe
xchg
pop
xlat
mov
mov
dec
inc
loope
cmp
inc
arpl
mov
pop
pop
cs
mov
ljmp
mov
push
cmpsb
and
pop
mov
pusha
test
mov
jmp
sar
pop
in
push
sub
sub
or
dec
or
popf
int3
mov
xorb
hlt
insb
inc
call
into
cwtl
inc
in
xor
aad
xchg
dec
sbb
adc
imull
scas
les
and
aaa
rolb
inc
jne
ja
mov
pop
imul
mov
dec
push
ljmp
mov
xchg
cmp
xchg
jp
imul
lret
fs
in
leave
push
aad
call
popa
mov
dec
mov
cmp
add
sub
cltd
mov
dec
adc
cmc
pop
jmp
lea
outsb
out
fidivrl
xor
jecxz
jmp
pop
jl
pop
dec
jmp
int
push
sub
push
std
mov
rorb
jne
adc
cmp
ljmp
inc
dec
gs
pop
push
pop
cmp
mov
jl
movsb
or
add
aas
jle
in
cmp
lock
lahf
daa
or
xchg
jmp
sar
mov
iret
dec
fcompl
shll
xor
inc
js
test
pop
shll
fisttps
mov
dec
aam
xlat
nop
stc
mov
mov
pop
fdivrl
aad
cmpsl
and
outsl
cmp
icebp
pop
adc
and
call
pop
bound
push
xlat
sub
mov
lock
cmp
scas
xor
scas
push
pop
pop
push
xor
push
jb
test
fldl
mov
neg
push
add
stos
arpl
mov
dec
into
rcrb
push
das
lret
jnp
mov
cltd
add
jns
cld
push
push
mov
lock
pop
rorb
filds
push
and
aad
stc
mov
sarl
cmpsb
orb
ja
lret
adc
or
jle
idivl
fsubp
jl
jne
sbb
popa
mov
sub
test
cmc
xchg
adc
insl
jo
pusha
mov
stos
xorb
xor
nop
jbe
adc
xor
pop
adc
and
adc
addl
stos
adc
pop
dec
test
into
sbb
cli
push
sub
movsb
dec
pop
mov
mov
ljmp
fisubrl
jmp
pop
lea
stos
shlb
and
mov
test
jno
cmp
mov
aaa
and
mov
es
mov
inc
jecxz
idivb
cs
mov
dec
cs
xor
sar
outsb
test
cmpl
pushf
add
in
xchg
fsub
inc
mov
bound
sarl
mov
sub
dec
xchg
jp
sahf
xor
cmpsl
add
shlb
or
in
movsl
outsl
inc
cmp
popf
insb
std
aas
adc
gs
xor
mov
dec
dec
test
mov
lods
js
jmp
addr16
xlat
out
mov
mov
popa
loop
into
dec
mov
pop
aad
inc
rorl
dec
xchg
stc
push
cmpsl
lds
xchg
roll
jge
fst
cwtl
or
rcll
xor
testb
mov
imul
int
nop
mov
jp
inc
fs
sub
fldenv
loope
pop
mov
and
and
pop
push
xchg
insb
jno
jae
bound
inc
add
mov
testl
loope
sti
mov
xor
insl
pop
ljmp
cli
pushf
jnp
or
inc
cltd
pop
mov
je
inc
out
fdivrs
movsb
sbb
inc
daa
mov
push
pop
sbbb
mov
aad
add
test
and
inc
sbbb
test
and
jg
pop
jl
sbb
ja
mov
addr16
add
mov
xchg
push
xchg
fildll
jge
mov
test
fwait
jmp
sbb
packssdw
push
shrl
jecxz
dec
inc
popf
dec
iret
adc
addb
or
insb
mov
mov
ror
aad
push
je
mov
jmp
push
ja
lahf
pop
xor
or
mov
add
sbb
jl
dec
fadds
rol
imull
xchg
movnti
int
adc
and
cmp
push
push
cmp
mov
sahf
mov
rorl
aaa
or
insl
dec
pop
lds
and
jl,pt
js
dec
movsb
divb
add
mov
fcomps
imul
ljmp
sub
xchg
das
nop
fdivl
push
outsb
gs
stos
mov
sti
rclb
xor
sti
stos
iret
aad
inc
addr16
jnp
jp
out
jo
adc
shr
xor
aas
and
or
test
inc
adc
mov
repz
stos
jmp
out
ret
lds
test
dec
pop
add
stc
mov
mov
movsl
push
dec
inc
pusha
pop
push
into
in
mov
jg
leave
push
shlb
mov
xchg
add
fwait
sub
add
xchg
fisttpll
scas
adc
add
sub
inc
mov
inc
mov
cmp
hlt
inc
mov
cwtl
mov
sub
outsb
add
and
sub
mov
cmp
pop
pop
aaa
cs
int
call
test
sti
mov
data16
fwait
ja
push
int3
inc
add
adc
push
fisubrl
outsb
adc
mov
in
popa
data16
fsubrl
sarb
or
movsl
jge
lea
dec
xchg
rclb
test
insl
test
loopne
sbb
repnz
sbb
outsb
cmp
in
cmp
dec
push
aam
dec
daa
jp
loope
data16
mov
test
movsb
lret
adc
mov
test
xchg
xchg
and
jle
rorb
adc
jne
int3
cmp
inc
ret
mov
daa
pop
fildll
push
movsb
dec
arpl
out
and
and
push
mov
or
mov
pop
xor
jecxz
mov
test
jle
shrb
movsb
aas
add
les
cmp
jp
cwtl
sub
push
dec
mov
mov
sub
ficoml
repnz
test
add
xchg
pop
repz
jno
xor
mov
push
enter
shlb
adc
hlt
clc
aam
cmpsl
inc
dec
pop
xchg
hlt
ljmp
and
jbe
out
sub
lds
lahf
inc
jno
sbbl
test
adc
inc
sub
inc
aam
andb
mov
dec
fucomp
push
pop
nop
loop
xor
int
mov
in
movsl
dec
xlat
lods
out
adc
push
fdivl
cmpsb
mov
rcrb
mov
call
repnz
mov
pop
mov
mov
jge
ret
lahf
inc
les
inc
mov
cs
sub
out
xchg
rolb
loopne
adc
fistpll
mov
mov
xchg
xchg
jnp
cwtl
xchg
ljmp
or
mov
adc
push
push
mov
xchg
sub
bound
dec
cmc
outsb
icebp
cwtl
cmp
dec
stos
mov
mov
ja
mov
fwait
insl
ja
jge
cmp
or
clc
xor
push
cmpsb
mov
repnz
je
jae
push
mov
and
subl
xlat
xlat
scas
outsl
aaa
lods
sub
icebp
jle
pop
cmpxchg
mov
out
and
fwait
out
das
cmp
or
fnsetpm(287
mov
xor
fldcw
cmp
push
dec
popa
or
inc
mov
inc
xchg
inc
mov
out
inc
jle
insl
pop
clc
add
loope
xorl
or
mov
pop
jg
cmp
adc
cltd
int
mov
mov
dec
sub
and
mov
outsb
aam
xor
lds
cs
lret
push
fcmovne
add
jnp
xor
mov
sbbl
stos
movsl
adc
movsb
js
loope
pop
and
int
add
outsl
arpl
mov
scas
into
jmp
lods
xchg
ljmp
sub
xor
dec
arpl
cli
test
or
add
mov
mov
xor
test
push
fidivs
sub
rcll
repnz
sahf
int
mov
jg
repnz
stc
stc
xor
dec
ret
jp
call
lods
dec
insl
dec
das
fs
pop
xor
mov
ud0
ffreep
and
jle
mov
cmc
loope
fwait
iret
lds
push
mov
dec
sub
inc
lret
or
shr
mov
test
jl
push
jbe
out
or
icebp
and
mov
or
dec
aaa
push
imull
mov
aaa
in
jbe
xchg
mov
sbb
mov
lods
pusha
gs
orb
das
sub
sbb
add
lea
insl
cmpsl
pop
scas
popf
and
sub
mov
enter
lret
fcoml
not
cmp
bound
push
inc
dec
sbb
cmp
push
test
pusha
cmc
mov
aad
xlat
sbb
into
jns
mov
das
int
outsb
cld
xchg
pop
incl
repnz
push
call
dec
repz
aad
fstpl
aam
mov
or
call
movsl
hlt
or
lds
cli
inc
ja
sbbl
add
dec
jae
clc
or
mov
es
xchg
cmp
data16
nop
fisubrl
enter
test
cmpsb
jecxz
mov
xlat
icebp
idiv
lret
cmp
sti
inc
popf
popa
es
enter
out
gs
testl
je
loop
and
pop
jne
fisttpl
pop
push
sbb
fldl
in
pop
pushf
sub
mov
xchg
pop
mov
out
addb
adc
int
ds
pop
mov
dec
inc
and
sbb
mov
gs
pushf
pop
arpl
jno
jb
or
jge
jno
mov
aas
mov
and
xor
push
pop
and
out
or
cld
push
jb
cmp
fsubl
add
stos
in
mov
add
cmp
add
cmp
adc
push
sub
mov
std
inc
sbb
andl
mov
test
fadd
enter
jbe
push
stos
ss
xchg
iret
sub
mov
mov
out
and
push
mov
cli
jmp
pushf
xchg
sti
in
adc
leave
movsb
inc
in
add
push
outsl
mov
add
stos
xor
and
ret
xlat
add
pop
mov
and
and
or
fs
fsubs
aaa
mov
mov
mov
clc
loopne
sub
aas
mov
dec
add
mov
sti
stos
sbb
jnp
inc
cmpsl
xor
pop
rclb
cld
pop
push
jmp
jae
add
dec
call
mov
cs
outsl
popf
test
cmpsl
push
dec
mov
push
adcl
orl
into
ret
pop
lds
adc
cmp
xchg
cmp
inc
mov
nop
inc
clc
mov
pop
xchg
or
cmp
test
mov
int
arpl
test
sahf
mov
fstps
fsubl
rcr
sub
xchg
scas
cmp
mov
addr16
dec
jbe
xchg
mov
repz
test
mov
dec
push
mov
out
repz
mov
push
test
leave
add
sub
cmp
cmpl
xchg
pushf
xchg
cltd
mov
imul
in
imul
in
cmp
das
and
leave
mov
mov
mov
add
leave
loop
insl
cmp
and
sub
mov
pop
push
mov
stc
push
xchg
icebp
sbb
bound
xchg
in
rol
shrb
push
dec
out
dec
cli
mov
pop
outsl
js
fldenv
adcb
cmp
adc
not
cmp
jne
lret
das
mov
mov
mov
stos
cmpsl
stc
sbb
aad
shll
in
sub
xor
aam
mov
jbe
xchg
stos
outsl
gs
cmp
adc
mov
sbb
rclw
pop
dec
xchg
or
rclb
dec
inc
ret
sbb
loope
inc
scas
arpl
mov
aas
jo
mov
pop
inc
or
pop
or
push
stos
xor
dec
cwtl
lcall
ss
out
cltd
mov
shll
jne
adc
xchg
movb
div
cmc
xor
stos
cmpsb
sub
cltd
sbb
jno
mov
inc
mov
sahf
lret
mov
out
orl
ret
and
push
js
xor
push
test
xor
inc
push
fsts
dec
fucom
push
out
into
lds
sbb
loope
jecxz
pop
adc
mov
jg,pn
push
push
mov
mov
andl
aaa
push
fcomi
or
sub
and
and
jns
sbb
jo
sub
xor
dec
imul
mov
les
fadd
and
jle
js
push
cmpsb
insl
pop
loop
int
jge
and
cli
sub
mov
dec
das
fisttpl
mov
push
out
cmp
scas
cmc
int3
in
loop
fldl
sbb
xchg
pop
ret
add
insb
movsl
rcl
xchg
mov
out
stos
mov
push
in
stc
jns
sbb
inc
cld
or
pop
shrb
adc
movsl
nop
loope
and
push
jle
mov
dec
aad
movsl
pop
ret
arpl
pop
ret
and
sub
add
or
inc
mov
daa
add
scas
out
es
out
das
cmpsb
pop
stc
fnstenv
sub
ret
mov
rorb
mov
ljmp
push
lea
popa
into
bound
aas
sbb
repz
sarl
stos
xchg
mov
pop
repz
imulb
mov
sbb
mov
fisubl
mov
jns
iret
mov
test
jge
lcall
js
jbe
int
and
pop
inc
mov
dec
xor
aam
lods
jne
push
lcall
sbb
add
icebp
test
push
mov
pop
or
mov
loopne
fsts
js
sbb
rorl
add
hlt
and
xchg
mov
and
outsb
sbb
scas
nop
or
popf
push
sub
sub
fbstp
sahf
lahf
pop
addr16
int3
enter
push
aaa
shr
mov
xchg
xorb
xor
hlt
repz
pop
jge
xlat
jle
jbe
stc
bound
mov
inc
inc
dec
mov
in
divl
insb
add
outsl
lret
in
sub
lret
ds
ja
add
test
inc
inc
adc
or
mov
inc
insl
adc
inc
cltd
cmp
or
lcall
jnp
pop
xor
fidivl
mov
push
pop
imul
xchg
jno
outsl
mov
sbb
daa
xor
mov
iret
test
xor
cli
jecxz
push
pop
inc
js
mov
add
and
inc
push
sbb
or
push
add
cmpsb
pop
sub
sbb
inc
mov
nop
sub
add
cmp
hlt
scas
data16
xchg
imul
fcomps
and
mov
nop
jecxz
mov
aam
lea
pop
sub
popf
imul
test
call
pop
xchg
mov
test
lock
aas
mov
loope
add
in
mov
inc
aaa
lock
dec
mov
jne
mov
iret
dec
xchg
pop
loopne
sbb
aaa
test
icebp
xor
pop
mov
ljmp
adc
sarb
cmp
and
dec
insb
out
sub
stos
jo
out
sbb
and
aas
pop
jmp
shlb
dec
aad
sti
mov
xchg
jg
orl
jle
push
xchg
clc
jecxz
loopne
mov
add
cmc
mov
aaa
jl
add
sbb
mov
cmc
xchg
mov
pop
test
out
sbb
cmpsb
cmp
cs
xchg
lret
in
and
cmp
cld
adc
ljmp
push
jmp
arpl
jne
test
iret
out
rolb
or
mov
stos
mov
stos
sub
lcall
jl
sbb
push
lcall
push
call
lret
and
pop
cmpsb
sbb
jns
dec
mov
push
cwtd
out
mov
push
jbe
inc
xchg
mov
loopne
pop
jno
xchg
pop
push
icebp
shlb
fistl
xor
dec
insl
lret
cld
xchg
xchg
lock
sub
in
cltd
and
fs
mov
jecxz
int
je
scas
pop
por
in
lods
adc
fmul
xchg
fisubl
cmpl
out
or
sarl
loope
dec
stos
or
jb
das
adc
xchg
mov
fnstenv
enter
leave
xor
pushf
adc
pop
and
fwait
add
cld
cli
cli
cltd
movsb
orl
mov
push
jne
out
xchg
lret
xchg
fs
jae
xor
mov
cmpsl
push
subb
cmp
aam
pop
adc
test
inc
rcr
push
add
xchg
lea
pop
cmp
aas
std
cwtl
jmp
movsl
push
adcb
out
ret
int3
test
in
shlb
fisubrl
std
pop
fdivl
in
dec
dec
pop
sub
pushf
push
mov
push
add
lcall
jge
loopne
inc
xor
maxps
pop
data16
or
ret
addr16
dec
sub
in
cmpsb
cmc
adc
xchg
sbbl
loop
daa
push
mov
pop
into
push
sti
movsb
aaa
packuswb
bound
fmull
sbb
lods
xorl
inc
push
cmp
xchg
or
pop
data16
loopne
push
rcll
nop
push
ret
inc
rolb
loope
mov
cli
fdivr
or
rcr
xchg
ds
jbe
xor
loopne
into
int3
sbbb
jnp
dec
lret
pop
lock
fwait
inc
out
xor
das
movsb
cmc
add
insb
pop
mov
sbb
mov
mov
mov
popa
in
ss
mov
outsb
jmp
push
fcmove
inc
mov
push
push
push
imul
aam
mov
sbb
out
pusha
cmpsb
jecxz
inc
mov
mov
mov
dec
adc
or
lahf
pop
enter
loop
mov
or
mov
rol
daa
mov
and
inc
and
or
scas
cmc
fsubrs
dec
sar
cwtl
mov
aam
jno
add
xor
push
pop
push
cmp
push
scas
inc
scas
pop
or
dec
stos
cmp
push
mov
sarb
cmp
out
or
mov
sbb
or
inc
jp
popf
lret
addl
xchg
stc
lret
sub
daa
bound
and
out
sbb
notl
ret
jno
out
int
sarl
popl
xor
or
clc
btr
sarb
imul
mov
mov
adc
or
inc
ss
add
into
sbb
ficompl
cmpb
xchg
mov
push
ljmp
into
call
mov
jne
mov
dec
insb
std
fsubs
call
loope
push
sbb
fidivrs
shl
loopne
dec
dec
movsb
repz
xor
int
xchg
lahf
out
stos
add
int
in
dec
add
adcl
and
outsb
jmp
dec
and
xor
pslld
sub
loop
adc
mov
push
in
fwait
call
mov
lahf
inc
mov
sub
ljmp
addl
cs
sbbb
pusha
stos
sub
loope
ss
outsl
mov
jno
jge
js
xchg
ja
int3
cmpsb
and
in
cmp
push
aad
mov
pxor
dec
lcall
sbb
lahf
or
jne
push
mov
push
insl
dec
jns
lea
cwtl
cld
mov
push
movaps
fadd
int
and
mov
incb
xor
lret
jp
push
lods
jl
mov
jo
shr
xor
xor
lds
divl
push
sub
jb
lret
push
xchg
in
data16
loopne
mov
lahf
dec
sub
arpl
dec
sub
pop
and
test
jb
xchg
xchg
jge
jne
scas
stos
push
cwtl
loop
xchg
or
rclb
jge
sbb
cmp
into
inc
xchg
repz
jle
arpl
mov
xor
jnp
pop
jg
xor
sbb
jecxz
inc
pushf
mov
push
jnp
cld
stos
mov
push
lcall
insb
jmp
fcoms
out
cld
mov
out
nop
int
notb
push
mov
test
rcrl
and
into
dec
lret
dec
iret
stos
dec
fsqrt
and
cmpsl
adc
jns
das
add
addr16
sbb
cltd
jmp
mov
push
imul
pop
xchg
sub
sbb
and
ret
add
dec
sbb
sarl
xchg
icebp
push
mov
adc
das
jb
ret
dec
sahf
iret
bts
ljmp
in
cwtl
mov
mov
flds
shrl
dec
pop
mov
pop
cmp
inc
mov
and
xor
xor
sub
call
lds
inc
gs
movsb
cld
aam
in
in
pop
mov
nop
xchg
aaa
cmp
imul
jg
xchg
out
push
xor
out
inc
sbb
add
ds
test
sub
mov
movb
fisttpl
lods
jb
fs
push
stc
mov
jle
xchg
push
loop
outsl
sbb
jl
sub
pop
pop
cmc
notb
mov
xchg
pop
dec
lret
ficoml
lods
cmp
in
push
out
out
mov
ds
inc
loope
push
pop
repz
lret
fdiv
or
in
xchg
push
inc
pop
cmpsl
xchg
mov
pop
mov
add
jo
lods
out
sbb
in
cmp
movl
push
das
pop
add
mov
imul
cmp
xor
insb
mov
inc
xchg
jo
xchg
rol
mov
popa
gs
movsb
aam
pop
adc
add
pop
iret
jecxz
enter
mov
ljmp
mov
fucomi
nop
xor
fnstsw
insb
mov
add
xchg
dec
and
xchg
dec
push
mov
aam
mov
imull
cmpsb
inc
arpl
jl
in
orl
add
inc
jle
aam
popf
sub
mov
or
shll
leave
sarb
sub
out
cli
inc
sub
pop
aam
daa
push
xchg
ret
push
test
mov
mov
add
dec
dec
aas
cmp
loopne
xchg
add
xchg
push
ljmp
cld
jnp
dec
aad
test
xlat
mov
arpl
int3
shr
mov
xor
mov
dec
cmpsb
cmp
mov
push
adc
movsb
jmp
xor
jg
test
adc
mov
mov
sbb
push
fldcw
adc
movsb
or
add
repz
aas
or
frstor
sub
enter
mov
call
aaa
arpl
dec
lods
xchg
repz
pop
sarb
popa
or
xor
xor
mov
push
stc
je
adc
ret
mov
add
inc
jp
lret
dec
dec
or
stc
push
mov
sbb
loop
and
dec
js
xchg
outsl
pop
inc
mov
mov
mov
inc
jb
lds
movsl
test
jp
arpl
sbb
out
leave
or
sub
push
pop
lods
mov
jp
or
xchg
xor
aam
mov
stos
pop
out
ljmp
sub
or
cmpsl
sbb
popf
and
mov
fsubl
pop
mov
cmp
ja
or
lret
adc
xchg
lahf
imul
dec
int
xchg
fisubs
xchg
lds
cmp
loop
std
xchg
sbb
jge
xlat
aaa
jnp
pavgb
shll
pop
xchg
test
and
es
mov
repnz
add
or
test
or
or
lea
int
xchg
add
jb
jle
cld
mov
inc
movsb
jno
and
lds
shll
jmp
fists
sarl
sub
xchg
mov
jo
rorb
push
and
rcrl
cwtl
fistl
sbb
pop
out
xchg
aad
sbb
negl
xor
jecxz
mov
pop
repnz
sub
out
imul
add
test
stc
in
mov
lds
lock
push
jp
push
dec
je
xor
in
ret
mov
int3
stos
adc
cmp
gs
dec
inc
xor
xor
das
pop
daa
insb
in
pop
dec
jle
mov
pushf
test
repnz
pop
adc
xchg
xor
push
jo
fdivp
push
pop
mov
sbb
mov
into
jnp
pop
ret
mov
shrl
push
data16
pusha
sbb
mov
bound
test
adc
imul
xchg
aad
pusha
daa
bound
je
arpl
pop
outsb
cmp
and
mov
test
scas
mov
std
aas
int3
test
jmp
pushl
jno
cmpsl
xor
jne
sti
and
push
xchg
xor
inc
sbb
int
leave
inc
jg
pop
inc
pop
dec
pushl
xchg
fnsave
dec
arpl
mov
dec
push
outsl
enter
ja
mov
push
or
xor
call
orl
outsl
mov
rcrl
int
fs
test
ja
push
outsb
enter
out
out
stos
sbb
cld
fwait
sbb
fistpll
mov
push
ret
jecxz
or
mov
stos
icebp
and
inc
in
push
repnz
inc
movsl
inc
cmp
cmp
mov
cli
cmp
xchg
lods
arpl
add
sbb
xchg
ljmp
mov
imul
mov
xor
cld
pop
jmp
push
dec
enter
mov
sbb
dec
sbb
add
inc
adc
ficoml
cmpsb
mov
jle
inc
adc
xchg
ficomps
add
imul
xorb
mov
repz
mov
lcall
leave
and
or
lods
div
inc
subb
xor
hlt
mov
xor
mov
sbb
mov
jns
cmp
inc
push
add
add
adc
mov
push
out
jg
sarb
mov
fldcw
mov
or
lret
stos
ret
sub
mov
push
leave
xchg
jo
mov
jne
jae
and
push
fnsave
stc
lcall
and
repnz
cltd
pop
mov
jge
bound
pop
lods
dec
sbb
pusha
mov
stc
add
push
adc
loop
gs
xlat
adc
aad
mov
xchg
and
mov
rorb
inc
notb
inc
adc
xlat
adc
mov
jp
int
gs
pop
outsb
push
lock
and
decl
clc
mov
xchg
dec
lea
inc
daa
neg
jnp
in
ja
sbb
mov
shll
jge
add
push
pop
mov
sbb
lcall
add
pop
std
dec
aaa
fprem1
inc
mov
popf
gs
insl
and
arpl
testb
repnz
popa
in
and
jnp
push
cmc
sarl
pop
mov
sub
mov
mov
fstl
test
xor
jle
jecxz
movsb
enter
lock
or
lock
push
int3
cmp
jae
xchg
sti
mov
jbe
jl
add
or
in
add
add
mov
mov
mov
addl
jae
out
popw
test
xchg
scas
xchg
push
fisubrs
shll
insl
mov
mov
jnp
and
jb
and
int3
mov
sub
push
sti
je
xor
mov
lahf
inc
dec
sbb
out
xlat
add
adc
or
bound
xchg
mov
jo
imul
inc
outsl
dec
fwait
cmp
mov
cmp
add
ret
popf
imul
sti
xor
pop
fstps
std
scas
push
xor
movsl
sub
sarb
xor
pop
jp
shrl
pop
pop
dec
aas
inc
mov
adc
push
int
pop
fimull
push
fiadds
pop
rep
xor
xor
and
pop
jecxz
xchg
clc
add
mov
add
pop
jo
sub
mov
xchg
cmpsb
nop
cmp
mov
cltd
mov
xchg
mov
cmpsl
sub
jg
cld
add
xor
mov
inc
std
aaa
mov
ja
mov
mov
cmp
fstps
xchg
fiaddl
bound
lock
mov
xor
dec
sbb
mov
decl
or
and
push
pop
xchg
xchg
cmp
sub
scas
ret
jns
sbb
aad
dec
mov
push
je
xor
and
daa
outsl
rorl
xor
movsb
pop
or
mov
sahf
js
addr16
mov
icebp
mov
mov
lods
add
and
imul
cmp
and
add
clc
rcll
mov
push
sub
inc
insl
push
cmp
sbb
cmpsb
aam
adc
outsb
cmpsl
cmp
cmpb
xor
mov
addr16
movsb
aaa
pop
in
test
ja
push
push
cmp
cmp
add
cwtl
pushw
jle
jb
subl
cmp
pop
cmpsl
cmp
popf
mov
jb
insl
push
insl
repnz
or
cli
in
push
test
xchg
test
stos
aas
sbb
ror
stos
sbb
lret
push
push
hlt
mov
fwait
push
or
sbb
mov
repz
scas
in
iret
jl
sbb
ja
fisttpl
aam
test
xchg
pop
mov
cmp
pop
jnp
or
mov
inc
add
gs
daa
dec
fcomip
iret
xchg
cltd
stc
arpl
insl
push
inc
scas
mov
inc
jl
mov
inc
in
lea
dec
and
push
jge
out
cmp
cld
mov
stos
and
push
sbb
jae
outsl
loopne
xor
sbb
mov
test
inc
test
int
movsb
lret
std
pop
movsl
add
adc
mov
outsl
jno
stc
js
imul
and
add
js
stos
lods
push
call
scas
popf
cmp
test
cmp
sbb
aas
ja
adc
push
dec
and
sub
stos
das
pop
adc
inc
loope
iret
sbb
pop
sbb
rolb
mov
test
stc
mov
adc
sbb
fmulp
repz
ficompl
push
fstpt
xor
sub
cmpsb
push
inc
jnp
je
jb
pusha
fcmovbe
push
pop
push
ds
adc
mov
mov
andb
scas
dec
jmp
dec
inc
sub
mov
jg
or
push
add
out
or
adc
pushw
lock
roll
sub
ds
mov
add
ss
les
push
cmp
sbb
out
sub
xchg
mov
push
sarl
out
push
inc
clc
lea
ljmp
dec
std
lahf
fwait
pop
int3
xor
push
std
mov
cmp
jge
sub
fs
enter
and
in
pop
sbb
test
inc
push
push
and
cltd
cmp
clc
push
hlt
sub
and
xor
aad
xor
icebp
mov
xchg
adc
leave
stos
idivb
mov
push
mov
clc
or
sub
inc
push
xor
cli
shl
in
xor
xchg
cmp
lret
xor
call
cmpsb
xor
sbb
in
js
lds
into
nop
xor
inc
inc
xlat
inc
mov
dec
scas
out
ret
mov
push
lock
call
cs
adc
imul
insl
inc
ja
inc
out
lahf
gs
andl
outsb
cltd
test
aaa
and
sbb
xchg
mov
iret
loopne
iret
outsl
push
out
or
clc
xor
pop
sbb
lret
fistpl
out
pushf
fisubrs
lock
pop
jb
push
dec
scas
orl
jecxz
pushf
add
lds
scas
xchg
mov
xchg
outsl
mov
push
push
and
scas
out
out
pop
stos
mov
mov
or
jmp
cmp
cmc
jmp
mov
jae
pop
icebp
testb
iret
stos
jae
or
imul
inc
or
in
pusha
inc
sbb
f2xm1
fs
mov
mov
jbe
fs
imul
mov
mov
dec
lcall
ret
push
fsubl
push
inc
push
imul
testb
adc
arpl
dec
pop
inc
sub
scas
iret
mov
sbb
andl
lods
and
sub
sbb
mov
sti
sahf
out
and
dec
push
je
pop
pop
cmp
and
aaa
mov
push
leave
push
mov
lret
sbb
popa
pop
push
out
pusha
push
xchg
addr16
outsb
inc
cmpsl
mov
iret
and
mov
mov
jp
mov
mov
pop
es
out
mov
mov
sbb
lcall
mov
jo
jbe
push
sub
cs
push
or
clc
jp
jmp
mov
cmp
xchg
add
rorb
faddl
push
jg
popf
repz
cltd
or
lods
shll
and
or
sbb
xor
sahf
sub
xor
mov
and
lea
outsl
xchg
cltd
mov
or
sbb
pushf
rorb
or
pop
mov
mov
es
push
and
sub
divb
adc
fs
mov
xchg
add
push
ss
xchg
add
or
rcrl
das
lods
rcl
jne
mov
imul
in
dec
xchg
stc
push
adc
xchg
cmp
adc
jle
sub
push
jecxz
ficompl
icebp
jecxz
cmpsb
sti
in
jbe
inc
jg
mov
mov
imull
aam
xchg
xor
cmpsb
mov
inc
dec
popa
lret
jle
dec
mov
stos
popa
cmp
mov
inc
jb
shlb
and
xchg
inc
rclb
das
inc
je
repz
lds
xchg
adcb
sahf
ret
loop
sbb
sbbb
lahf
push
insb
mov
xchg
fisubl
push
sub
repnz
test
mov
ss
and
je
shll
rclb
xchg
and
cmp
pop
mov
imul
push
cli
sti
cwtl
mov
cli
jb
in
mov
mov
jge
std
out
cmpl
xchg
out
sbb
rcl
ja
xchg
sarb
fldt
push
in
fwait
mov
jo
mov
inc
pop
fs
lret
sbb
mov
cmp
push
aam
rolb
add
icebp
push
pop
hlt
pop
add
push
xor
outsb
inc
inc
sub
addr16
clc
jg
cmp
jnp
and
popa
leave
mov
dec
fnstcw
sub
pop
in
xchg
mov
popf
xchg
add
jle
cwtl
aas
fadds
pop
xchg
xor
lcall
inc
ja
xlat
lcall
jne
dec
data16
hlt
out
mov
sub
aas
add
mov
jl
xor
xchg
gs
adc
jecxz
psubb
lea
fnstsw
sub
push
test
mov
mov
or
jmp
into
in
aad
cs
inc
cld
aad
shl
ret
sbb
jo
jo
adc
decb
inc
imul
stos
mov
add
pop
adc
ss
pusha
popf
sbb
sbb
cmp
aaa
jno
adc
ljmp
hlt
int3
insl
and
jb
xor
sub
ss
stos
sbb
arpl
or
sbb
adc
or
and
sbb
adc
adc
ss
mov
jl
shlb
cmpl
nop
imul
jl
inc
cmpl
xor
push
jmp
sbb
inc
aas
imul
fs
ss
xor
cltd
ret
in
sti
jo
mov
mov
add
mov
ds
out
pop
jl
xchg
pop
leave
and
shrb
dec
int
pop
jae
adc
adc
adc
or
xchg
imul
js
into
fistl
inc
bnd
aaa
popf
jg
push
sbb
sub
xchg
dec
xor
jae
aas
inc
sub
pop
sti
je
jle
and
repz
add
or
jbe
loopne
add
fstpt
in
in
popf
js
or
jp
addb
fcmovnu
dec
push
jle
dec
lea
and
mov
xchg
and
shrb
xor
cmp
mov
mov
leave
roll
sub
aas
cmp
loopne
addr16
repz
dec
rcll
test
aam
xchg
mov
fwait
mov
dec
cs
out
sti
insb
cmpsb
icebp
inc
inc
add
arpl
ret
pushf
pop
jbe
fs
dec
aaa
xorl
push
push
lret
ja
or
cmp
not
mov
nop
xchg
xchg
and
lods
out
push
dec
sbb
xchg
call
scas
std
mov
sub
loope
arpl
dec
jg
popa
xor
loope
jo
sahf
xor
mov
adc
and
dec
ljmp
popf
pop
xchg
div
call
pop
subl
cmp
pop
mov
mov
scas
adc
inc
out
mov
ds
loop
sub
mov
aas
xor
cmp
inc
push
lcall
stos
je
cltd
shll
sbb
js
dec
mov
jbe
testl
stos
pop
mov
mov
or
iret
daa
test
ret
ss
sysret
xchg
push
xchg
xchg
out
sub
mov
lods
adc
and
arpl
scas
xlat
ficoml
into
sar
or
dec
sbb
lret
pop
test
sti
xlat
cmpsb
jmp
xchg
and
inc
test
int
xor
push
mov
mov
popa
inc
out
loop
mov
jne
shrb
push
jne
push
test
pop
jo
mov
loop
insb
ljmp
sarb
sti
xor
pop
push
imul
push
lret
dec
push
arpl
sub
movsb
repz
faddl
lahf
test
test
ljmp
dec
jb
xchg
mov
jge
mov
int
arpl
outsl
cli
int3
dec
push
adc
imul
dec
fldenv
shll
jle
int
push
ja
cmpsl
lret
movsl
cmc
push
mov
push
xor
inc
shl
xor
repz
mov
xlat
dec
xor
mov
adc
das
movsb
fcoml
cmpb
and
adc
push
mov
xor
repnz
out
jno
mov
std
nop
and
cmp
sbb
adc
bnd
rorl
sbb
or
in
loop
and
or
out
push
ds
lahf
call
outsb
ret
shlb
add
aad
mov
xor
loop
mov
sbb
insl
adc
and
inc
test
popa
push
mov
mov
lods
enter
jnp
fwait
mov
ror
inc
scas
add
roll
sub
arpl
and
mov
in
sarb
mov
cmp
daa
iret
lock
in
ljmp
dec
scas
pop
jge
into
pop
dec
push
or
push
cmp
push
push
int3
fstpl
popa
lods
jne
ret
rolb
subb
sub
popa
xor
fstpt
std
gs
or
or
aas
aad
divb
insb
mov
out
leave
aaa
add
dec
aas
shrl
pop
js
lret
dec
jns
sti
in
jle
cmpsb
mov
rcrb
imul
cmp
adc
jbe
lahf
and
xchg
aas
xchg
xor
lods
xchg
imul
and
aam
jle
xchg
mov
inc
or
pop
clc
orb
and
xchg
inc
inc
in
cs
inc
inc
sti
adc
xlat
jecxz
mov
push
rcrl
jmp
lcall
inc
in
mov
and
add
inc
inc
int
cmp
cmp
andl
mov
in
in
lahf
mov
jns
mov
movsb
mov
popf
out
sub
xchg
jmp
pop
jo
pop
int3
bound
cmpsl
orl
lods
rclb
cmp
push
pop
fsubl
xor
loope
arpl
xchg
dec
and
lds
pop
push
jne
lods
xor
imul
add
jns
ret
cltd
pop
mov
adc
jne
cmp
icebp
sbb
aas
sbb
rcrl
shl
sub
mov
lcall
sar
sarl
jno
inc
xchg
and
sbb
push
push
mov
pop
mov
pop
jl
insl
mov
xor
jo
jmp
adc
xchg
and
movsb
push
ljmp
and
pop
icebp
push
out
loopne
insl
sub
fxch
sahf
push
cmc
insl
add
pushf
icebp
ja
pop
mulb
mov
push
lret
cmp
mov
pushf
loopne
loopne
xor
jp
push
adc
imull
pop
ret
cltd
mov
mov
cmp
mov
or
jo
push
cld
xchg
imul
add
loope
push
dec
pop
call
sub
xchg
int3
or
test
sub
js
outsb
sbb
mov
pop
sbb
popa
imul
dec
or
sbb
fldenv
xlat
les
imull
movsl
cs
imul
sti
icebp
dec
fnstsw
lret
test
cmpsl
outsb
and
xchg
sarl
mov
mov
pop
pop
repz
insb
add
mov
push
fnstcw
lods
xor
hlt
out
rol
out
sbb
inc
cld
mov
rcll
leave
sbb
push
mov
jle
sarl
pop
dec
mov
lods
lds
pop
pop
fdivl
pop
pop
popa
adc
stc
test
ljmp
fiadds
mov
push
mov
leave
mov
js
or
sub
pusha
xor
cmc
pop
push
je
out
call
pop
mov
cmp
sbb
cmp
dec
pop
stc
xchg
push
fidivl
and
push
and
adc
xchg
and
cmpsb
push
sbb
push
jp
imul
ljmp
sbb
fwait
mov
xlat
jbe
gs
jb
adc
sub
cmpsb
fistpl
dec
movsl
mov
pop
push
je
into
sub
insb
add
lds
jmp
pop
jmp
sub
xchg
inc
pop
rcl
and
jg
test
cmpsl
cli
add
mov
es
outsl
sub
xchg
std
in
xchg
jg
jne
xchg
push
mov
dec
xchg
push
or
xlat
push
adc
addr16
aad
mov
aaa
rorl
cld
lahf
pop
aaa
ret
mov
add
jne
xlat
or
cmc
and
jecxz
hlt
arpl
sbbl
sub
cmpsb
leave
lahf
inc
or
sub
pop
nop
pop
out
aad
pushf
aam
sbb
pop
and
xchg
mov
jb
cltd
xor
imul
into
mov
xlat
mov
jge
js
aam
mov
clc
cwtl
xor
jg
cs
cltd
popl
and
aad
rol
cmp
stc
lret
cmpsl
mov
test
in
sti
mov
mov
out
mov
or
mov
pop
ret
stos
sbb
lahf
mov
sbb
shll
push
jg
push
sbb
addl
or
mov
repnz
sbb
pop
cmpsb
lret
js
test
addl
insb
pop
pop
cvtpi2ps
out
jle
bound
and
pop
movsb
pop
mov
hlt
mov
cmp
inc
cs
sbb
cltd
mov
push
daa
pop
cld
lcall
add
rcr
lret
dec
int3
add
lds
jns
pop
adc
faddl
xchg
subb
insb
mov
lods
push
push
jmp
mov
jecxz
jbe
jno
mov
cld
or
movsb
dec
addr16
ret
push
jo
adc
imul
mov
adcl
sarl
lods
xchg
cltd
clc
int3
int
push
pop
ss
lcall
mov
sbb
jae
xor
fisubrl
jne
hlt
add
in
push
add
leave
stc
scas
lret
or
xor
pcmpgtw
shl
or
xor
xor
cmpsb
call
and
repnz
filds
pushf
inc
insl
push
outsl
jmp
mov
es
adc
test
mull
ja
push
and
shll
mov
and
in
int3
outsb
mov
adc
sub
mov
cmp
jnp
sub
inc
stos
push
incb
inc
repnz
inc
pusha
push
fs
mov
xor
xchg
repnz
mov
jmp
push
mov
mov
cwtl
mov
outsb
lret
fistps
icebp
pushf
or
test
lret
in
pop
pop
xchg
mov
jno
test
pushf
dec
xchg
cmc
mov
mov
gs
out
repz
xchg
jg
int
sbb
jle
pop
dec
ljmp
push
test
test
loope
adc
and
testb
popf
call
lock
push
mov
xchg
mov
das
xchg
mov
or
dec
push
dec
push
jmp
enterw
mov
lds
addr16
inc
icebp
xchg
enter
xor
pop
pop
aaa
dec
test
out
dec
insl
ficoms
xor
outsl
xor
jg
and
jne
outsb
adc
ffreep
push
cltd
xor
push
pop
cmpsl
add
es
imul
test
loopne
jge
loop
push
int
mov
add
mov
cmp
sarb
inc
cltd
xor
cmp
cmpsl
lods
cmp
xchg
dec
psubq
xsetbv
sbb
mov
pop
dec
xchg
fdivrs
jp
jb
adc
daa
xchg
pop
ficomps
iret
add
adc
test
imul
xchg
push
int3
cmp
out
sbb
xlat
imul
dec
bound
mov
dec
cld
rol
or
push
xchg
or
fs
pop
out
sarb
push
arpl
fwait
mov
jnp
adc
in
pushf
jne
fwait
cmp
insl
mov
loop
scas
outsl
pop
lret
mov
mov
sbbb
mov
stc
pusha
xchg
aad
ss
jb
call
mov
mov
and
fistpll
cmpsl
test
jae
xchg
push
nop
pop
push
adc
xor
mov
ds
lods
arpl
jl
pop
imul
scas
add
icebp
aaa
and
mov
push
jae
dec
ret
divl
iret
dec
test
ja
mov
out
call
rorl
data16
mov
test
subb
pop
or
daa
jp
jge
hlt
ja
addl
xor
jmp
sub
sub
enter
outsb
inc
push
adc
cmp
mov
stc
aas
mov
hlt
jo
dec
jno
cwtl
int3
fcomps
add
mov
jl
jo
jb
jns
sub
lods
test
and
xchg
jno
push
lock
or
aam
sbb
daa
inc
dec
hlt
dec
es
and
inc
xchg
es
popa
rorb
scas
movsb
inc
add
loopne
into
cld
cmpsb
jp
cmp
test
pop
or
nop
dec
push
pop
push
test
fadds
jo
add
sahf
sub
adc
push
adc
call
xor
sub
jno
xchg
and
pop
scas
xor
inc
and
sub
aas
lcall
pop
lds
or
lods
sbb
xor
movsb
in
inc
out
mov
inc
popf
xchg
in
lock
jo
cmp
retw
sub
fs
jmp
pop
fimull
add
jmp
es
pop
mov
add
fsubs
movsb
ja
mov
pop
xor
push
ss
and
push
rolb
mov
jg
sub
add
inc
pop
jecxz
not
add
xchg
push
lret
jg
push
repnz
jmp
lods
enter
dec
sub
or
inc
adc
push
jnp
stos
mov
out
pop
popa
xchg
sbb
jo
pop
add
fcomps
push
push
dec
or
loop
mov
mov
sub
cltd
xchg
in
and
pop
mov
fs
ja
mov
aaa
sbb
loop
les
cwtl
bound
mov
mov
or
adc
scas
loopne
in
outsb
mov
imul
cwtl
shr
insb
dec
push
stc
jnp
iret
pop
test
out
add
js
scas
xchg
cmp
jns
mov
xor
jns
mov
es
popa
sarl
das
lcall
push
popf
stc
test
mov
xor
jo
jae
xchg
or
mov
addr16
sub
sbb
inc
push
mov
fdivs
shr
dec
mov
sbb
std
push
and
mov
add
out
stc
pop
dec
fcmovnbe
mov
das
arpl
aad
or
arpl
sbb
fistpl
lock
pop
shlb
mov
pop
ficoms
pop
nop
cmp
mov
popf
cli
xor
mov
jbe
xor
lods
pop
fidivs
mov
and
inc
lods
scas
adc
mov
push
jg
dec
je
jb
push
mov
dec
or
xlat
add
sbb
cltd
mov
dec
aas
cmp
inc
jl
rorb
jb
add
or
stc
mov
iret
cltd
cmc
aad
push
xchg
pop
fst
dec
push
call
cmpb
dec
mov
mov
fs
xchg
inc
test
out
cmp
movsb
stos
dec
pop
cli
pop
inc
add
mov
mov
dec
leave
out
scas
in
lods
pop
sbb
ds
push
das
imul
repnz
clc
mov
subl
cmp
pop
fmull
in
pop
addr16
shr
add
mov
mov
mov
notl
rolb
mov
mov
jns
addr16
sbb
stc
and
jecxz
xchg
jmp
or
mov
imulb
and
mov
into
in
xor
outsl
in
loopne
into
mov
jno
stos
push
sbb
jno
or
bound
xchg
push
mov
subb
cwtl
lret
das
daa
mov
lods
jae
add
pop
xchg
sub
in
add
add
dec
in
lret
mov
dec
mull
call
cld
mov
push
or
sbb
popf
jle
inc
stc
das
mov
adc
idivb
sub
or
mov
adc
aam
rcll
push
jecxz
outsl
iret
aas
mov
jg
fstpl
push
adc
mov
push
xchg
jns
mov
jnp
jae
sbb
loopne
sbb
jne
ret
test
and
jne
loop
out
sbb
sbbb
adc
repz
push
fisubrl
ficoml
addb
inc
loop
or
into
cmp
add
adc
sub
jo
cmp
lret
ret
jb
aaa
and
mulb
andb
repnz
dec
xor
mov
fwait
shrb
lret
sti
mov
cmp
jl
out
dec
js
dec
and
mov
arpl
sub
les
aaa
mov
insb
outsl
mov
mov
lea
mov
mov
stos
jmp
es
insl
rorb
pop
sub
les
lahf
jo
push
test
mov
daa
inc
dec
lods
lods
setge
fdivp
sub
jmp
lds
enter
xchg
loopne
pop
adc
jns
scas
aam
mov
cmpb
lods
cmp
sub
es
mov
or
jg
mov
sub
dec
outsb
ds
sbb
and
sub
jle
stos
sbb
jno
jne
lcall
mov
int
jmp
add
outsb
and
cli
push
scas
xchg
mov
lahf
adc
push
mov
aas
mov
jge
std
pop
cmp
cmp
and
inc
mov
scas
push
push
mov
cmp
cmp
mov
shlb
cmpsl
les
or
rcrb
push
arpl
addr16
push
outsl
cwtl
push
jl
xchg
jmp
movsb
neg
dec
mov
jecxz
aad
push
xor
clc
test
pop
lods
xlat
mov
push
rcrl
in
lahf
lcall
cld
daa
divb
cltd
adc
add
sub
jmp
mov
mov
mov
adc
adc
fcmovbe
cwtl
jne
mov
rorb
mov
push
subl
cwtl
sub
and
mov
scas
outsb
aad
cmp
pop
pushf
or
cmp
in
je
pusha
cmpsl
push
std
mov
cwtl
test
aad
inc
fsubs
lods
test
or
mov
push
int3
xchg
sahf
scas
bound
mov
fimuls
lcall
adc
addb
mov
dec
push
aas
sub
jecxz
leave
mov
popl
pop
mov
pop
out
mov
mov
out
jp
repz
pushf
xor
stos
mov
stos
notb
and
xchg
mov
loope
pop
inc
insb
test
sub
mov
pop
out
mov
repnz
cmpb
pop
lcall
push
jmp
ficompl
sbb
xchg
pop
cmp
ds
mov
xor
xchg
push
dec
and
dec
adc
xorl
cmp
mov
enter
sbb
mov
inc
das
and
mov
out
xor
rol
mov
and
test
lock
std
hlt
ret
outsb
jnp
xor
push
or
sti
inc
adc
and
and
push
stos
addr16
sbb
aad
sti
popa
add
out
iret
shr
popl
cld
in
pop
jmp
idivb
gs
push
loopne
mov
bound
gs
sbb
mov
mov
xor
fcmovne
loope
xor
fimull
jns
xchg
fidivl
jne
inc
sub
cmp
mov
dec
jnp
test
push
and
add
std
sahf
jb
dec
xchg
stos
std
pop
xor
jns
pop
pop
sub
jae
popa
decl
or
adc
push
push
inc
movsb
sub
pop
cmc
pusha
xor
push
dec
xchg
add
jb
xor
cmc
inc
out
push
popa
je
outsb
repnz
sbb
repz
ljmp
leave
inc
cmp
jmp
aad
inc
mov
inc
push
cli
in
jnp
mov
sub
pop
mov
mov
or
clc
gs
inc
fisubl
fsub
jb
jge
mov
add
cmp
imul
pop
mov
jmp
test
and
pop
nop
inc
les
movsb
xchg
jg
cmpsb
ret
gs
iret
sub
pushf
sbb
sub
jno
imul
mov
cmp
in
fidivrs
mov
fsubl
inc
mov
dec
fistps
movsl
and
insb
and
adc
inc
xchg
test
push
jmp
fldcw
jecxz
and
add
xchg
dec
cmpsb
cmc
or
sub
aas
fidivrs
scas
inc
inc
int
jns
jno
push
cli
and
jle
repz
int3
shll
jo
mov
loopne
cmp
shll
jns
cmp
ljmp
sbb
mov
je
es
mov
sti
jmp
adc
dec
jae
inc
lds
mov
push
xor
add
mov
and
mov
pop
ja
mov
repnz
add
cltd
gs
or
ret
pop
pop
sahf
das
xchg
mov
add
pop
fbstp
inc
or
lcall
lea
fsubr
out
scas
mov
xlat
jns
inc
dec
incl
sub
adc
cs
sub
pop
push
aam
xor
out
loope
ds
aad
cmp
add
jae
mov
mov
addr16
xor
cld
adc
or
or
imul
adc
movsb
sbb
fnstenv
and
push
xchg
push
ret
adc
and
jbe
scas
pop
call
loope
sbb
sub
dec
mov
push
jbe
pushf
mov
in
xor
loope
jo
out
cmp
jecxz
xor
dec
push
adc
loopne
loope
add
push
cltd
mov
popf
jo
mov
repnz
je
icebp
xchg
sbb
loopne
in
dec
scas
in
xor
dec
sbb
je
lods
adc
jg
push
and
std
or
jecxz
lock
mov
jnp
orl
mov
xlat
push
lahf
cmc
cmp
jmp
pushf
add
int3
stc
and
jo
cltd
fimuls
insb
push
push
aam
xchg
fsubrl
dec
std
push
pop
xchg
or
stc
lods
mov
mov
or
flds
sub
cltd
cmpl
push
test
dec
stos
inc
sub
cmpsb
fidivl
rcl
in
push
inc
pop
insb
loope,pn
mov
fistl
repz
push
movsl
xchg
dec
fwait
adc
inc
leave
push
dec
mov
loope
in
push
scas
out
bound
xor
lret
push
xor
cmp
push
in
nop
push
lea
jb
fcoms
hlt
repnz
stos
push
inc
jmp
test
bound
adc
popf
xchg
mov
sub
xor
push
pop
push
or
add
int
pop
lock
enter
fsub
cmp
in
xlat
sub
bound
test
mov
fsubl
imul
pop
pop
push
pop
iret
fidivrs
leave
aam
lret
movsl
movsl
pop
mov
cli
orb
jmp
jb
std
push
xchg
mov
andb
mov
mov
cmp
jge
out
jl
dec
inc
push
dec
fstp
mov
iret
aad
ret
mov
mov
mov
or
sbb
or
sbb
or
movsb
lds
aad
mov
adc
dec
jp
sti
icebp
jecxz
and
fs
push
inc
insb
pop
mov
repz
fcompl
push
stc
fcomp
outsl
into
fsubrl
add
ja
sahf
push
std
add
gs
shll
repz
cmpsl
and
push
lcall
int
scas
arpl
call
sub
fstps
pop
push
xchg
scas
mov
in
ss
push
sbb
add
scas
jns
push
mov
ds
xor
inc
testb
mov
mov
aaa
inc
imul
mov
cld
fs
subb
mov
fsubs
mov
int
push
push
inc
mov
xchg
xchg
add
dec
add
cwtl
aas
nop
ret
inc
xor
testl
and
mov
fimull
mov
pop
lea
xlat
xchg
movsl
and
fadds
pop
or
and
bound
jae
sub
js
adc
xchg
in
xchg
add
lahf
push
sahf
dec
push
push
pusha
sbb
dec
cmp
cli
cltd
inc
mov
cltd
jecxz
sub
insl
jg
xor
sub
test
loope
dec
dec
ljmp
loopne
pop
mov
scas
in
dec
lret
leave
xchg
push
or
mov
aas
mov
adc
fidivl
mov
popa
repnz
xchg
ljmp
out
dec
xlat
and
sbb
adc
pushf
jge
dec
in
or
jge
bound
jmp
xchg
pop
gs
cmpsb
lahf
push
aas
pop
mov
cmp
push
mov
sub
leave
add
test
popl
mov
aas
sub
xchg
rcrb
cmp
pop
push
cmp
mov
mov
dec
xchg
dec
into
mov
inc
sbb
loopne
mov
and
or
cli
push
add
xchg
mov
xchg
dec
inc
iret
cmpsb
inc
xor
or
xor
ret
sbb
mov
cmpsb
cmp
pop
cli
das
in
push
test
loope
push
into
out
enter
mull
inc
push
lcall
cmp
test
adc
mov
add
xlat
adc
fidivs
daa
sub
dec
adc
in
jg
mov
mov
adc
popa
movsb
mov
shrb
jae
stos
leave
and
aam
call
xor
push
jne
scas
test
push
adc
mov
xorl
fadds
mov
fmull
inc
daa
pop
adc
xchg
in
sub
sub
testb
add
and
jge
pop
adc
mov
nop
repz
xchg
out
or
clc
or
lods
pushf
adc
jmp
xorb
sbb
aad
sub
fsubl
push
pop
aam
rolb
mov
xor
dec
stos
add
shrl
mov
jbe
icebp
mov
rorl
jno
pop
test
dec
push
out
data16
xchg
imul
test
xor
movsl
mov
movsl
jecxz
add
xchg
adc
mov
mov
jbe
or
stc
pop
js
xor
mov
and
stos
out
dec
fisubrl
mov
mov
insb
mov
or
call
iret
aad
jl
insl
repz
xchg
pop
loopne
xchg
and
mov
cmp
xchg
gs
movsl
xchg
leave
js
scas
add
dec
push
mov
jns
add
int3
add
push
dec
mov
dec
decb
inc
pop
cltd
push
out
pop
shll
xor
mov
lods
call
fs
mov
jno
cmpsb
push
inc
adc
fnstcw
dec
loopne
fmulp
inc
xor
adc
xchg
pop
rolb
imul
fs
out
sub
testb
pop
sub
sbb
or
add
adc
jmp
mov
in
xor
push
lods
rorl
jb
xchg
in
imul
or
aam
xchg
nop
ljmp
xchg
outsl
adc
pop
push
sbb
scas
movsb
pop
pop
dec
jecxz
dec
and
mov
enter
push
cmp
inc
test
jns
fwait
icebp
movsl
std
cmp
ss
dec
outsb
fs
pop
sarl
adc
fwait
cmc
dec
loopne
int
cmpsb
movsb
and
aad
and
bound
cs
xchg
mov
push
bound
adc
add
push
inc
js
xor
repz
jl
lahf
fcompl
sbb
push
sub
inc
out
lcall
pop
mov
mov
loop
mov
mov
es
clc
les
stos
cmp
mov
sbb
sub
sub
push
hlt
lock
fdivs
movsl
flds
out
push
in
jmp
fs
loopne
push
test
mov
mov
push
pop
pop
shl
adc
aaa
pop
test
or
mov
push
lcall
bnd
mov
es
mov
mov
in
leave
xchg
repz
in
ds
popa
mov
inc
cmc
jge
add
mov
sbb
cmp
jmp
jb
pop
jp
push
sbb
push
mov
lret
out
incl
sbb
leave
jge
nop
sbb
push
aam
mov
mov
adc
sub
cld
loopne
test
jnp
fcmovnbe
fimuls
mov
stos
push
enter
push
idivb
repz
mov
jnp
data16
fs
add
jne
adc
adc
pop
jb
fsubr
jnp
fistpll
dec
insl
lret
sub
dec
daa
and
fs
sbb
insl
sbb
pop
push
mov
stos
ljmp
xchg
test
mov
mov
aaa
sbb
fwait
jbe
push
insl
inc
into
push
fldt
ds
cmp
mov
push
push
or
sbb
xorl
cmp
sahf
dec
mov
mov
add
sub
fcoml
movsl
push
xchg
std
mov
orl
xor
es
push
jns
int
xchg
in
mov
pop
popa
jae
mov
mov
push
xchg
addb
push
jns
or
fisubs
loopne
dec
in
pop
shll
int3
aad
ljmp
sahf
stos
jg
and
cmc
sub
sub
or
add
or
lcall
data16
sbb
mov
pop
jge
cltd
aam
call
outsl
xor
sub
aas
pushf
add
xlat
pop
pop
mov
push
cs
add
add
jmp
dec
mov
fsubr
enter
clts
xchg
test
cmp
mov
xchg
add
mov
pop
out
call
pop
mov
iret
leave
push
aam
push
js
jle
cmp
sub
aad
push
sub
mov
into
xor
cwtl
daa
repnz
mov
mov
iret
cmpsl
popf
imul
pop
mov
je
je
mov
mov
jno
stos
insl
mov
jge
add
sbb
imul
cmpsb
mov
add
scas
pop
pop
aas
test
lds
and
cmp
enter
hlt
out
shll
xchg
jbe
out
roll
and
inc
or
push
out
jmp
sarl
int
movsb
filds
jb
cli
push
jno
aad
sbb
popf
mov
add
adc
hlt
sahf
rcll
fwait
mov
test
push
pushf
jecxz
mov
stos
xor
sahf
stc
stos
sub
fs
mov
je
cs
mov
mov
out
jmp
xchg
popf
mov
mov
push
jae
int
outsb
inc
das
lahf
imul
in
int
pop
pop
mov
repz
stc
mov
pop
popf
push
je
stc
test
mov
sbb
in
inc
ljmp
cmp
pop
sbb
pop
popf
in
ret
inc
mov
imul
cs
or
pop
in
pop
insl
fldenv
add
or
xor
mov
push
testb
jl
shll
fs
mov
mov
iret
mov
sub
repz
out
push
pushf
sbbl
inc
loopne
mov
sub
mov
call
sahf
inc
sub
out
mov
out
outsl
outsb
into
xchg
fidivl
adc
popf
loop
repz
fildl
xchg
pop
popa
testb
fs
cmp
sahf
fxtract
adcb
leave
pushl
jne
cmpsl
insl
ljmp
and
xchg
xor
test
flds
imul
sub
jecxz
repnz
ret
adcl
inc
movsl
js
mov
cmp
test
mov
test
mov
fcompl
cli
out
lret
sbb
push
fisttpll
hlt
sbb
xor
sub
inc
pop
sarl
and
icebp
hlt
cmp
or
inc
mov
jnp
cs
movsl
mov
push
testl
gs
mov
mov
inc
mov
cmpsl
push
xor
or
test
scas
jb
out
inc
popf
xchg
icebp
jecxz
push
movsl
jbe
scas
jnp
into
mov
adc
adc
test
push
inc
push
sub
insb
call
loop
mov
stc
pop
js
push
in
out
ds
mov
jns
inc
icebp
lcall
cmp
pop
dec
cmp
std
xor
inc
dec
cld
push
sbb
lds
inc
xchg
mov
daa
scas
sbb
or
push
jp
int
mov
std
cld
xchg
xchg
pop
stc
lods
icebp
scas
cwtl
xchg
andb
push
xlat
inc
in
sti
imul
icebp
pop
shr
jp
ja
cli
loopne
ds
scas
mov
inc
addb
out
mov
stc
jge
repnz
lret
mov
or
xchg
mov
ss
push
mov
popf
adc
fsubl
jnp
addr16
into
mov
push
pop
mov
dec
xor
add
pop
jge
sti
outsb
mov
test
mov
mov
repz
xor
insl
je
xchg
fcmovnu
outsl
nop
roll
lahf
lea
adc
hlt
into
cwtl
push
cli
in
filds
xchg
divl
cwtl
cmpsb
outsb
jmp
sbb
subb
pop
add
jp
add
pop
push
sub
imul
call
cld
pushf
repz
pop
hlt
out
jle
jne
les
cmp
inc
cmpsl
add
out
cli
cli
fldcw
mov
scas
and
adc
adc
int3
dec
sub
mov
or
pop
je
icebp
in
and
fisttpll
cmp
or
fiaddl
in
mov
jle
mov
push
daa
cltd
lods
inc
mov
pop
inc
xchg
stc
pop
push
xor
cmp
addl
sub
in
out
pop
sbb
push
popf
orl
je
push
push
out
hlt
lret
adc
inc
pop
mov
mov
imul
call
aam
pop
fidivrl
mov
out
test
rolb
int3
inc
in
in
mov
iret
jnp
xchg
and
sub
push
jge
into
test
and
cmpsl
subb
bound
inc
imul
std
sahf
mov
hlt
jns
xchg
pop
dec
movsl
xchg
lret
push
ja
es
mov
jae
mov
jbe
inc
stos
dec
dec
iret
adc
sbb
adc
out
lea
or
inc
cmp
ret
shl
push
sub
sbb
lret
aam
mov
push
xchg
loop
outsb
loop
inc
push
leave
into
es
out
test
xchg
rcrl
pop
adc
sbb
cmpsb
fimull
cmp
int
jp
out
mov
add
push
stc
adc
loop
rolb
in
lahf
push
xchg
lcall
sbb
decb
test
mov
popf
pop
xchg
mov
lret
mov
mov
nop
aad
mov
std
and
lods
shlb
andl
aas
sbb
mov
pop
push
fstpl
iret
or
cmpsb
aaa
and
test
loopne
and
cmpsl
outsb
dec
mov
add
xchg
vmwrite
out
pop
repnz
sbb
inc
xor
out
pop
dec
inc
sub
scas
mov
cmp
fs
sub
les
dec
fldt
sub
or
jns
mov
jmp
rcrl
dec
mov
fsts
rclb
ret
push
mov
mov
and
add
rorl
mov
and
repz
aad
lea
mov
pusha
mov
fisubrs
in
inc
and
inc
fwait
mov
jno
test
xchg
in
ror
mov
sub
pop
lds
add
test
dec
sub
inc
dec
jg
inc
inc
mov
add
scas
jp
lcall
add
add
push
pop
lret
cli
jp
jno
std
jecxz
xor
cmp
imul
and
ret
push
pop
push
cs
cmpsl
stos
xor
cltd
enter
rorb
xlat
or
jge
pushf
std
faddl
in
push
mov
loope
ljmp
mov
jo
loop
jmp
sbb
movsb
fsubrs
fwait
imul
sbb
mov
jmp
add
scas
sahf
add
lahf
movsb
je
leave
pop
outsb
mov
fcomp
jbe
xchg
push
aam
ljmp
cwtl
cmp
xchg
adc
xchg
rorl
neg
fildll
sbb
dec
lcall
movsl
jno
clc
daa
or
lock
jl
dec
or
or
fwait
add
fsubl
xchg
mov
and
daa
aam
jo
testb
mov
sub
adc
adc
out
push
cmp
cmp
cwtl
dec
cmp
pop
xor
jns
fstpl
imull
les
loopne
fmull
cli
sti
sahf
fstl
pop
sbb
sub
iret
gs
dec
js
int3
movsb
pop
and
rclb
xor
jae
mov
fcompl
or
out
add
xchg
mov
push
pop
nop
mov
sbbb
loope
jne
lahf
add
lret
lods
sub
fmuls
shr
xchg
sbb
sarl
push
shrb
pop
pop
jl
push
cmp
push
adc
mov
aas
in
iret
scas
mov
mov
inc
movq
stc
movsl
sti
pop
aaa
cmpsb
out
ret
cli
scas
mov
mov
push
in
jl
xor
mov
xor
jae
out
push
cld
or
loop
jmp
push
mov
and
pop
xor
xlat
test
adc
jecxz
adc
dec
ret
insb
scas
cli
xchg
xor
shl
and
fwait
jno
xchg
test
mov
xchg
xchg
mov
cmp
es
mov
and
sarl
mov
push
daa
sbb
cmc
iret
push
xchg
lock
jle
lret
imul
jb
add
clc
repz
out
add
ds
out
inc
push
cmc
loopne
mov
mov
fstpt
enter
sti
add
or
add
shl
insb
sbbb
sbb
cs
outsb
cltd
jge
fistpll
xor
mov
pop
cmpl
lock
sbb
jmp
idiv
pushf
lcall
test
push
xchg
orl
out
popa
ja
xlat
jne
inc
movsl
aaa
xchg
js
sti
aam
fadd
xor
and
fimull
scas
ja
cmp
test
inc
mov
push
mov
or
or
inc
divb
loop
sub
cmc
sti
adc
mov
mov
mov
add
rolb
or
stc
ficoms
test
xorb
insl
into
mov
dec
bswap
addb
pop
dec
pop
mov
dec
test
inc
adc
xor
adc
xor
lds
rep
scas
es
add
decl
pop
mov
ret
fwait
or
lret
and
aaa
movsb
mov
das
add
aad
push
fdivrs
les
rolb
js
sti
sbb
jmp
int3
cmp
and
dec
or
incl
fidivs
nop
adc
in
hlt
push
sbb
cmp
sti
in
pop
mov
stos
test
adc
jecxz
sbb
inc
xor
fst
loop
stc
jge
out
scas
mov
pop
sbb
icebp
add
pop
cmpsl
daa
ja
enter
test
mov
and
mov
jae
inc
insb
push
push
rcrl
pusha
mov
mov
dec
or
cli
push
or
dec
xchg
mov
in
dec
fcomip
fdivrp
aaa
jecxz
pop
jns
mov
inc
xorl
out
out
loop
mov
insl
in
xchg
jne
add
jle
or
or
add
sbb
pop
sub
stc
std
sub
test
inc
outsb
insb
mov
outsb
ja
pop
mov
gs
lods
pop
dec
inc
andl
adc
sarb
push
mov
lock
jmp
jmp
push
xchg
test
dec
pop
pop
add
jae
push
repz
add
add
sub
ds
mov
outsb
mov
imul
mov
rclb
add
in
inc
xchg
xor
es
xlat
pushf
cli
pop
int3
dec
pop
mov
or
jecxz
ficoml
push
fmuls
sbb
jo
and
cs
fs
dec
rclb
cmp
xchg
in
push
and
aam
loope
aam
out
scas
pop
cmc
or
das
fnstcw
mov
dec
xchg
addr16
pop
push
push
cmpsb
cmp
inc
jb
cmp
flds
aad
cs
iret
gs
cmpsl
mov
jno
cmc
maxps
xor
repz
call
pop
cmpsl
mov
sub
popf
decb
jecxz
inc
push
imul
dec
xchg
repnz
and
lret
icebp
je
or
icebp
add
adc
lcall
push
pop
inc
cmp
das
mov
mov
lea
test
sub
xor
or
mov
sub
push
outsb
mov
call
out
xlat
sarl
cmp
pop
mov
and
pusha
sahf
xchg
or
lods
cmp
adc
xor
movsl
lret
andl
arpl
in
adcl
inc
inc
push
pushl
outsb
pop
adc
cmpsl
pop
jae
sub
cmp
inc
pop
push
shlb
jo
addl
dec
xchg
data16
hlt
lds
mov
leave
jecxz
jmp
cltd
sub
dec
pop
add
outsl
cmp
xchg
push
stos
jb
mov
add
sub
lock
sbb
mov
dec
jl
popa
cmp
and
mov
push
mov
pop
mov
fst
les
and
es
push
pop
and
mov
mov
out
int3
xchg
xlat
xchg
loopne
in
jnp
sub
es
dec
jnp
dec
sti
adc
or
sar
jle
and
aaa
xchg
jg
in
xchg
jecxz
pusha
lods
mov
add
repnz
jno
and
inc
pusha
push
sarl
fsub
pop
mov
fidivs
in
inc
call
inc
xchg
jo
mov
out
sbb
cmpsb
addr16
xor
out
sbb
aas
lahf
loope
imul
xchg
and
movsb
mov
push
popa
scas
add
dec
out
aad
les
lahf
xor
jnp
rcll
ljmp
pop
in
xchg
sub
push
bound
mov
add
mov
scas
shl
mov
adc
xor
lods
jbe
cmp
jl
movsl
jmp
inc
xchg
add
test
je
movsb
cld
or
popa
fbld
in
mov
sti
data16
call
xchg
xor
nop
xchg
mov
pmaddwd
sbb
xchg
inc
jg
xchg
sbb
add
mov
adc
in
icebp
pop
push
add
fs
pusha
xchg
pop
clc
add
aaa
jecxz
lods
mov
xor
aam
mov
shrl
add
mov
pop
sbb
xor
xor
notb
dec
scas
in
mov
loope
adc
pop
scas
push
mov
jge
lods
push
sbb
lcall
outsb
mov
xor
push
popf
fmul
hlt
loope
decl
mov
sub
rcl
in
in
xchg
pop
pop
push
and
mov
movsl
xor
adc
push
push
enter
push
sub
cld
mov
pop
dec
push
lds
int
daa
cwtl
and
adc
clc
or
pusha
leave
xchg
inc
fisttpll
pop
dec
adc
mov
sub
cmpsl
lcall
add
push
bound
hlt
jne
mov
cltd
inc
sbb
xchg
inc
adcb
cmp
mov
dec
or
inc
mulb
stc
push
cld
addr16
test
aas
mov
aad
dec
fs
bound
scas
dec
sarl
mov
dec
in
cmpsb
and
test
ds
int3
in
ja
sahf
aaa
nop
xor
sbb
adc
rcrl
or
sbbb
mov
mov
pop
ret
notb
jmp
shl
cmc
daa
pushf
call
mov
dec
mov
pop
aaa
shlb
in
sbb
int
lods
inc
xor
idiv
loopne
xor
dec
rorl
loope
xchg
add
out
fwait
gs
iret
pushf
aam
mov
scas
test
rorl
fisttps
xor
data16
cmp
adcb
adc
scas
mov
sub
dec
imulb
ss
call
fisubs
clc
ret
fstpt
pop
fiaddl
ds
aam
inc
dec
xchg
pop
flds
bound
into
arpl
gs
inc
mov
insb
aas
sub
fldl
leave
fbstp
cmpsb
xor
movsb
xchg
xchg
lds
dec
xor
iret
scas
addl
jl
xchg
xchg
aaa
lods
xor
cmp
add
lahf
pop
cmp
pop
imulb
xchg
jecxz
lcall
pusha
adc
sarb
sti
mov
mov
mov
mov
dec
js
fwait
ljmp
rorl
nop
fcmovnu
push
push
lea
fisubrl
mov
or
ret
mov
bswap
into
add
push
dec
or
jecxz
fcomps
rcrl
ret
addr16
adc
loope
imulb
cmp
das
xor
add
sahf
into
call
add
and
lahf
fwait
shlb
imul
jp
push
cwtl
mov
pop
ja
xchg
push
cmp
mov
push
in
add
cs
lret
cmp
nopl
stos
pusha
push
movsb
cltd
xchg
iret
xchg
pop
mov
sbb
xchg
adc
inc
call
jmp
mov
sbb
jo
mov
pop
scas
inc
and
lret
movsb
in
mov
es
mov
andb
jno
pushf
iret
pop
js
jb
je
push
fisttps
sub
mov
pop
jne
mov
enter
cli
add
mov
and
int3
pop
xor
sahf
pop
fidivrs
xchg
sahf
loopne
mov
adc
add
pop
push
rolb
jecxz
mov
sti
push
int
mov
mov
repnz
cmp
in
mov
cli
or
orl
jo
and
addr16
enter
mov
fcmovbe
xor
adc
ret
jge
loop
popa
or
iret
ds
test
push
jb
int3
daa
sahf
xchg
jb
shl
into
dec
fsubr
inc
lahf
and
inc
xchg
outsb
ret
cltd
mov
fistps
mov
aad
pop
inc
movsb
or
fwait
cmp
cmp
in
js
cmpsl
pusha
mov
mov
push
ja
das
push
and
xchg
insb
pop
sub
pop
add
test
loop
cmpsl
mov
pop
jno
sbb
sahf
mov
inc
loopne
cmp
shlb
out
push
out
out
aas
pop
aad
or
xchg
sub
jo
loop
je
mov
jbe
mov
imul
dec
stos
mov
arpl
push
fisttpl
xor
push
aaa
das
cmc
sub
popf
mov
push
pop
out
repnz
xchg
xchg
addr16
test
pop
add
cmp
lods
jecxz
mov
ficomps
cld
sbb
push
cmp
jl
es
aam
out
test
stos
fwait
insl
test
adcl
cmp
stc
adc
lods
cli
or
and
xchg
inc
dec
shl
incl
ljmp
mov
inc
or
cmp
and
xchg
stc
or
adc
fcoms
mov
in
xchg
test
outsb
pop
push
fcmovnu
daa
subb
cmp
out
mov
or
dec
sub
and
or
cmp
dec
push
popf
push
dec
roll
stc
or
mov
test
std
sarb
clc
popa
rolb
jp
mov
pop
lods
push
test
data16
lret
xchg
mov
fcmovbe
cmpb
movsl
nop
add
pop
inc
sbb
xchg
std
popa
test
cmp
adc
dec
mov
dec
in
addr16
mov
pop
inc
adc
imul
pop
mov
aam
fsubrs
mov
daa
shll
rorb
mov
movsl
mov
adc
fbld
inc
bound
movsb
lret
les
movsb
jp
sbb
rcr
push
or
lret
rcl
rorl
gs
sub
mov
pusha
xor
rep
ret
pop
cwtl
js
jb
pop
daa
leave
sar
mov
jl
ja
insl
mov
pop
clc
or
ljmp
ret
inc
sub
xchg
sub
push
pop
mov
xchg
out
sahf
sbb
dec
ffree
es
dec
inc
xor
push
or
jne
nop
cmp
cltd
sub
cld
enter
dec
aaa
jb
jge
outsb
or
and
shll
xchg
jl
testb
cmp
mov
cmp
adc
jge
mov
sti
or
pusha
int3
lds
imul
push
xor
pop
out
or
iret
lcall
mov
mov
lcall
mov
test
jnp
not
aaa
cmp
bound
aad
lea
mov
cmc
popf
add
jmp
arpl
ljmp
push
aaa
daa
adc
push
test
jae
fs
cltd
inc
pop
push
pop
pmulhw
mov
mov
cmpl
push
sbb
fstpl
xor
cmp
push
sar
pop
xor
xor
and
xor
jmp
xchg
push
lods
jg
push
push
ss
fmull
and
bsf
sbb
loope
mov
pop
fwait
jp
outsl
aad
ss
jno
cmpsb
mov
pop
shrl
int
rorb
adc
add
test
scas
mov
fcoms
lcall
inc
or
mov
movsl
repnz
sbb
jns
dec
jl
out
add
dec
jmp
sbb
enter
cmp
pushf
push
inc
adc
test
call
pop
out
pop
pop
test
push
stos
lock
movsl
shl
out
in
pop
mov
cmpsl
pop
imul
icebp
jbe
jne
out
test
cmp
push
movsb
dec
cld
cmc
addb
std
pop
push
mov
push
pop
mov
sbb
mov
jbe
loop
in
fs
dec
xchg
jns
js
js
xchg
dec
xchg
push
test
fwait
pop
cmp
dec
fistpl
popa
cmp
mov
xor
push
jge
lret
aas
xlat
pop
push
mov
jmp
imul
sbb
mov
mov
jns
loop
sbb
or
adc
les
data16
jne
adc
test
sbb
pop
and
loop
icebp
sub
jmp
scas
call
push
mov
cld
movsb
fiadds
push
pop
sub
aas
ss
mov
xchg
push
das
inc
mov
jge
and
frstor
jle
mov
jb
push
jp
imul
sarb
sbb
les
imul
stc
sub
inc
scas
outsb
lret
push
mov
mov
fwait
test
add
adcb
push
lds
mov
cmpsl
dec
xchg
out
pusha
mov
inc
pop
mov
sbb
idivb
mov
push
outsl
cmp
jge
cltd
rcrb
mov
or
int3
mov
das
out
movsb
shrl
xor
pop
push
jle
loope
xor
loopne
dec
sahf
push
and
js
jbe
dec
dec
adc
popf
jmp
pop
push
popa
ss
pusha
ja
sub
sub
jp
pushf
add
cld
test
dec
inc
sbbl
push
mov
mov
cmp
ret
jbe
xchg
in
pop
add
push
mov
aas
sti
jns
lds
icebp
lods
mov
jb
push
dec
xchg
dec
jecxz
sbb
repz
push
adc
pop
out
pop
jae
and
xor
insb
mov
jne
movsb
insb
int
ljmp
mov
std
not
rorl
stc
scas
mov
xor
dec
cmp
push
and
cmp
cmc
aaa
adc
fidivrl
hlt
ffreep
fimull
loope
mov
mov
lods
bound
and
loop
mov
cmpsb
in
scas
hlt
notb
inc
pusha
lea
sub
imul
enter
test
and
lea
daa
cmp
pop
mov
cmp
ficoml
lahf
int3
pop
pop
inc
sbb
pop
mov
cs
imul
aaa
sbb
test
xchg
cld
mov
scas
xor
aaa
stos
jb
pop
bound
mov
aam
mov
into
popf
push
fildl
scas
jp
mov
mov
add
mov
pop
and
pop
jae
fwait
lcall
mov
xlat
pop
push
daa
cmpsl
pop
scas
jmp
add
mov
adc
out
sub
ljmp
jo
clc
aam
leave
cmp
in
lret
idiv
out
in
sub
dec
adc
push
sbb
pop
decl
jmp
jle
std
pop
dec
iret
add
adc
xor
adc
mov
xchg
inc
aas
or
ja
rcll
ud2
mov
scas
pop
imul
xchg
inc
mov
je
sbb
and
fbstp
pushf
jecxz
adcl
in
stos
repz
mov
mov
pop
push
mov
movsb
js
or
inc
jecxz
outsb
ror
and
jg
imul
pop
add
shlb
pop
mov
dec
sbb
test
inc
adc
sbb
sarb
add
in
or
and
jp
scas
and
data16
adcl
ficompl
sarl
popf
mov
cmp
shlb
adc
dec
ret
push
dec
lahf
fldt
push
cmp
push
adc
push
push
test
popa
popf
jo
dec
or
inc
inc
and
das
les
mov
jle
adc
push
cmp
scas
pop
sub
jge
bound
gs
add
jmp
pop
shl
mov
andb
jae
out
add
mov
add
test
fcmovnu
add
push
and
rorl
or
and
cmp
test
sub
inc
cmp
cltd
xchg
or
jnp
sti
in
stos
ficomps
nop
out
cmp
inc
sub
sahf
jns
daa
in
cmp
mov
jg
inc
adc
popa
sub
and
add
mov
mov
push
aaa
inc
lcall
dec
testb
mov
arpl
mov
xchg
repnz
rorb
sub
repz
mov
ja
and
cmc
pop
add
aaa
fidivrl
js
mov
pop
pop
adc
test
sub
sub
or
cmp
leave
aad
mov
or
add
fs
andb
fistpl
mov
jb
dec
lcall
add
movsb
push
cmp
mov
dec
push
cmpsb
pop
sbbb
push
pop
int
xorl
in
enter
pop
mov
stc
xchg
js
or
rcrb
sti
mov
cmp
loope
lods
mov
shrb
out
stos
or
mov
or
xor
mov
cmp
sbb
xor
test
xchg
add
or
push
out
scas
sbb
xor
mov
subl
aam
push
arpl
xor
arpl
push
push
or
dec
ja
scas
loope
movsb
adc
push
and
push
das
fst
int3
push
lret
sub
mov
xchg
push
inc
fdiv
loop
mov
mov
jno
test
and
jns
sbb
push
clc
jecxz
sub
cli
mov
test
ss
xchg
xor
mov
xlat
dec
repz
jmp
sub
in
sub
inc
cmp
mov
pop
xor
mov
test
jg
lds
inc
in
push
mov
mov
and
jp
mov
push
dec
cwtl
push
jle
lods
or
pop
addr16
pop
push
daa
cmpsb
jle
jmp
or
aaa
and
rcrb
lds
jge
mov
pusha
popf
movsl
in
fs
test
idiv
imul
jb
repnz
scas
fs
dec
in
cmp
scas
sub
mov
xor
mov
or
inc
fsubs
imull
enter
pcmpgtb
jl
ds
sahf
and
xchg
outsb
mov
js
cli
std
outsl
xlat
and
add
orl
mov
mov
lahf
or
fdivl
enter
lret
xor
aaa
movsl
pop
rol
and
lret
int3
mov
dec
xor
cli
gs
jge
js
in
sub
xorb
pop
out
cmc
mov
ret
mov
cmc
xchg
mov
test
mov
inc
mov
jnp
jecxz
dec
sti
pop
out
jae
test
repnz
mov
out
addr16
cld
scas
mov
lods
popf
addr16
add
dec
stos
sbb
jecxz
call
mov
sbb
dec
aaa
xchg
sub
xchg
add
das
cmp
in
push
cmp
xor
scas
pop
mov
and
xor
mov
xchg
mov
and
js
xchg
ret
push
mov
sub
cwtl
pusha
lret
inc
push
dec
cmp
mov
add
movsb
cmp
mov
mov
push
dec
jp
divb
fwait
nop
aad
adc
sbb
sub
fs
add
lds
imul
aaa
mov
ret
lds
add
inc
adc
stc
lret
iret
sti
xchg
jg
mov
sbb
or
inc
adc
push
xchg
mov
lods
icebp
lods
lock
pusha
fsubl
out
nop
mov
xchg
jns
fcompl
xchg
add
ljmp
call
or
mov
ret
push
adc
fwait
in
mov
jg
out
cmp
fldenv
rep
jno
adc
andl
jb
adc
sbb
clc
sti
inc
scas
sub
adc
and
cmp
push
adc
mov
mov
dec
pop
adc
out
sub
push
rorl
fcmovnbe
mov
adc
mov
mul
test
lea
mov
ljmp
and
lcall
ret
pop
cmp
out
std
sarl
pop
lret
data16
xchg
dec
mov
mov
mov
adc
mov
lcall
jae
stc
mov
inc
insb
cmpsb
ret
jmp
dec
loop
cld
cs
sti
xchg
dec
test
scas
xor
xchg
test
ret
push
xlat
push
and
imulb
addb
mov
pop
mov
sbb
jmp
jge
dec
je
clc
lds
push
faddl
adc
push
enter
ret
sbb
imul
fs
in
adc
or
xor
das
pop
orb
or
adc
jl
mov
push
shlb
xor
fisubs
push
adc
loopne
cmp
push
repz
lds
ljmp
out
std
dec
sti
adc
dec
sti
push
popa
push
xchg
notl
dec
inc
cli
xchg
hlt
jae
add
in
std
and
int3
sbb
pop
outsb
imul
shl
inc
sbbb
lret
dec
mov
mov
mov
mov
adcb
std
jbe
idivb
sub
jg
inc
mov
out
loope
cmp
push
add
cmp
loope
fs
enter
xor
arpl
pop
not
loopne
ret
mov
push
addl
je
les
mov
or
out
sub
std
or
push
out
clc
pop
push
add
gs
cmp
shrb
lahf
mov
sti
or
outsb
push
and
rcl
or
cmc
sub
jmp
aam
stos
aad
push
imul
pop
xor
bound
jns
jnp
dec
add
mov
imull
jp
or
or
cltd
pop
enter
inc
nop
or
in
stc
lds
xchg
mov
inc
mov
mov
stc
insl
pop
or
sub
mov
jns
sbb
lret
les
lock
mov
lcall
push
out
cwtl
les
aaa
mov
in
mov
sbb
ffreep
pop
ds
jae
ret
inc
mov
jmp
inc
sbb
or
push
cmp
jno
jl
push
bound
lret
fstl
or
and
pop
jg
mov
lock
out
inc
mov
lods
mov
sbb
cmp
lcall
aam
cmp
xor
inc
xchg
adc
cwtl
mov
ss
mov
adc
loop
lods
outsl
daa
pop
jnp
mov
xor
fs
pop
mov
test
cmp
pusha
or
dec
dec
jae
aam
cmp
lahf
cmp
adc
pop
sub
or
sbb
xor
dec
add
sbb
out
and
push
test
sbb
sub
hlt
in
push
sti
pop
dec
add
pushf
fsubrs
stos
movsb
pop
shrb
sbb
xchg
mov
jae
xor
mov
add
dec
roll
aas
std
xchg
aam
repz
test
hlt
pop
int
jnp
fsubrl
jne
dec
lret
dec
ds
in
lods
popf
sub
pop
lahf
mov
or
mov
int3
pop
sbb
into
pusha
in
bound
xor
ja
outsl
pop
mov
jbe
cs
inc
fnstenv
adc
popf
xlat
iret
xor
or
push
mov
adc
pop
loope
sbb
mov
imul
pop
xor
push
mov
cs
mov
fs
sub
movsl
mov
push
je
dec
mov
jne
out
ret
call
dec
lcall
xor
dec
cld
adc
and
push
mov
cmp
mov
aaa
arpl
popf
dec
lock
adc
cli
jno
push
mov
push
pop
mov
ss
push
pop
mov
mov
pop
cmc
in
rorb
add
jge
cmp
mov
mov
or
inc
mov
outsl
xchg
sbb
add
mov
xlat
pop
mov
daa
aaa
pop
mov
loopne
aam
lahf
fdivrl
jbe
dec
jne
adc
shl
push
mov
bound
insl
ss
hlt
loope
lds
mov
outsb
mov
jl
jo
imul
insl
sbb
or
loope
mov
push
sub
mov
stc
mov
test
pop
mov
cmpsl
cmp
iret
lock
xor
xor
ljmp
iret
popf
cltd
aam
push
xchg
int3
mov
cmpsb
xor
test
out
std
inc
sbb
test
xchg
lods
dec
popf
lds
cli
fisubl
ss
adc
lds
xchg
stos
test
dec
cmpl
je
lock
testl
add
in
xchg
inc
mov
mov
cmp
jae
rorl
sarb
outsl
stos
cmp
pop
mov
and
pop
nop
sub
loop
mov
xchg
arpl
mov
cwtl
or
xchg
sbb
pop
loope
mov
inc
movsb
inc
mov
loope
cmpsl
mov
sub
out
pop
cmc
push
or
fcmovbe
mov
adc
jne
jae
sbb
xchg
fcoml
xor
dec
shrl
int
xchg
xor
push
popa
popa
lods
jmp
inc
loope
ret
jle
mov
mulb
stos
push
gs
addr16
popa
into
rcll
jno
inc
rcrb
or
roll
ud2
dec
inc
pop
add
sti
mov
inc
push
and
xchg
vaddps
sbb
push
cmpsb
cmp
aaa
insl
push
add
xor
movsl
sti
loopne
and
and
jle
js
ret
pusha
jmp
xchg
arpl
ret
mov
mov
dec
cmp
sub
adc
decl
lock
repnz
push
pop
xchg
imul
fisttpl
dec
aaa
jl
test
imul
les
iret
and
push
fcoms
lret
mov
adc
ja
test
repz
lods
out
fimuls
mov
lcall
xchg
xor
scas
or
jne
cmp
lret
ss
out
outsb
and
leave
cmpsb
or
xor
out
push
imul
ss
adc
jg
xor
cld
pop
std
mov
or
rcrb
movsl
test
dec
xlat
jnp
mov
fwait
mov
enter
cld
jno
push
sbb
add
movsl
or
hlt
xor
and
fidivs
dec
sahf
ja
dec
incb
addr16
mov
daa
inc
mov
enter
js
jne
outsb
in
add
repz
dec
sbb
fiadds
push
dec
sbb
lds
insl
cmc
inc
imul
sub
rcrl
jp
mov
hlt
cmpsl
mov
jge
aam
or
movsl
ret
xchg
test
or
gs
cld
je
sub
flds
insl
jns
pushf
inc
adc
push
sbb
jne
mov
sub
mov
cli
push
fstpt
dec
loopne
mov
sbb
mov
xor
jb
pop
mov
cltd
gs
jnp
je
and
xchg
xchg
popa
mov
movups
push
call
stos
xor
sbb
mov
cmpsl
inc
mov
aas
int
sahf
cmp
dec
sub
jbe
cmp
jns
or
int3
jecxz
jge
mov
nop
sub
sub
mov
mov
test
in
inc
mov
iret
lock
mov
lcall
test
out
or
mov
sbb
xor
repz
in
mov
subl
loopne
or
pop
aas
jmp
scas
mov
and
pop
rcl
cltd
imul
jne
movsl
mov
xor
shr
dec
addr16
outsb
xor
gs
arpl
sub
aas
add
std
xor
lods
add
and
test
out
lds
lcall
pop
pop
xchg
mov
pop
int
ds
xor
xchg
mov
dec
add
popa
cld
xchg
mov
dec
movsb
cltd
mov
mov
scas
lock
les
add
mov
sti
adc
loop
rolb
pusha
cmp
lret
pushf
popf
cmp
in
gs
movsb
jg
mov
cmp
int3
sahf
mov
xor
push
inc
jns
and
fidivs
jle
mov
shrb
icebp
or
add
in
sub
je
sbb
punpckhwd
jmp
sub
sbb
sbb
cmp
inc
mov
rorl
inc
xlat
movsb
inc
mov
fisubrl
or
jns
jo
xor
ret
lret
pop
out
data16
jno
sahf
adc
aas
pop
mov
add
rcr
jg
mov
push
cmp
mov
xchg
out
pop
push
cmp
dec
out
mov
out
ljmp
stos
mov
or
shll
or
pop
cltd
je
sub
fiadds
fsts
mov
scas
lret
inc
push
cmp
inc
xchg
dec
in
movb
sub
and
or
mov
inc
cltd
pop
push
das
xor
out
dec
loopne
mov
or
in
js
push
and
mov
iret
dec
xchg
mov
mov
adc
inc
cmp
push
or
inc
jg
sub
or
dec
test
cmc
xor
jne
dec
jns
adc
xchg
cmp
xchg
je
push
mov
scas
inc
sub
ljmp
test
push
insb
fdivrl
xchg
inc
les
sub
xchg
jle
bound
icebp
jb
push
ss
mov
out
xorl
call
and
jp
cs
je
in
repnz
mov
sbb
stos
inc
insl
push
cmpsb
and
test
cld
push
jbe
ja
fists
xor
pop
jnp
idivb
int
out
dec
pushf
icebp
and
stc
jae
stos
and
sti
out
enter
shll
push
xor
jbe
scas
pop
arpl
xchg
push
mov
xlat
jl
jl
pop
or
ds
cmp
enter
and
insb
fists
fstpl
cld
mov
push
gs
rcll
jnp
sub
mov
out
into
xbegin
pop
add
aad
cwtl
inc
lds
in
dec
ljmp
mov
cmp
inc
fcompl
sbb
pop
push
xor
push
cmp
shll
and
aad
add
daa
fstpt
mov
ds
lods
adc
into
shlb
ds
lods
movsb
xchg
sbb
in
in
in
hlt
sar
cmpsb
lods
or
mov
xor
loopne
mov
insl
push
push
outsb
addr16
mov
adc
xorb
ja
mov
dec
rcrb
sti
add
pop
cs
sub
bound
xor
xchg
mov
pop
cmp
arpl
int
pop
and
sbb
inc
lock
or
mov
in
or
fwait
lcall
sti
sbb
les
inc
addr16
and
or
into
xor
mov
mov
insb
dec
bound
mov
cs
pop
xor
and
mov
cmp
es
into
jb
jb
cmp
clc
in
mov
and
jp
jb
addr16
jns
fldt
cmpsb
mov
rep
xor
ret
cwtl
sub
hlt
mov
notl
or
into
pop
push
sub
fisubs
push
jo
mov
mov
or
or
call
xor
cmc
hlt
jo
in
xchg
mov
out
aam
and
fldenv
pop
test
add
add
push
sbb
ja
call
aam
mov
in
faddl
adc
adc
jl
int
out
mov
mov
sbb
aad
outsb
push
jmp
icebp
fs
mov
push
push
add
push
jno
scas
pop
lret
in
inc
mov
jmp
cmp
pop
pop
push
sbb
insl
pop
mov
insl
inc
movsb
or
mov
pop
sbb
push
test
imul
popf
fisttps
and
in
popa
mov
jne
mov
daa
push
push
inc
std
xchg
popl
xchg
popf
mov
aam
test
cmp
push
test
sub
aad
cmp
adc
addl
mov
notb
and
mov
jnp
xchg
cmp
mov
sub
jge
and
or
insl
push
push
xor
fcoml
dec
packsswb
jae
aaa
mov
sub
je
and
cs
cld
sbbb
and
in
pop
jecxz
xor
ret
pusha
mov
adc
sub
mov
rcrl
pop
dec
xchg
test
rcll
scas
mov
and
inc
adc
push
jns
fcmovnbe
mov
hlt
rcl
add
addr16
cltd
mov
jp
mov
pop
push
fs
pop
and
ficompl
add
and
shl
arpl
adc
decb
jnp
mov
jnp
loopne
sbb
shll
xor
add
stos
jo
pusha
nop
xor
inc
inc
outsl
out
fistl
das
sub
jb
test
add
cmp
and
pop
push
xchg
sbb
mov
adc
dec
jge
push
test
mov
cmp
fidivrl
mov
mov
ret
xchg
clc
sbb
inc
faddl
arpl
das
mov
outsb
pop
loope
out
sbb
pop
jno
cmp
sbb
in
mov
mov
int3
in
popf
popa
mov
jnp
mov
jae
cmp
lds
lahf
mov
inc
cmp
inc
pop
jl
hlt
je
adcb
jne
push
or
aas
je
push
loop
mov
cmp
push
int3
loop
testb
dec
push
jnp
cltd
test
cmp
jp
out
xor
jns
dec
insb
out
push
sti
insb
xor
popa
ror
sub
ja
mov
out
push
mov
xchg
cmp
loopne
and
bound
lock
pushf
cmp
xor
fldcw
jbe
sub
mov
cmpsl
jge
mov
xchg
ficoml
cltd
lahf
movsl
leave
scas
mov
std
mov
mov
sub
das
decl
adc
pop
xlat
adc
sbb
repz
movsl
jo
push
jno
ss
mov
nop
or
add
jg
addr16
rolb
lcall
xlat
movsl
sbb
or
cmp
cmp
jae
inc
jae
std
sub
or
movsbl
pop
dec
mov
sbb
push
or
jp
cli
ss
dec
dec
aam
pop
xor
or
bound
xchg
push
sti
adc
add
movsb
dec
jb
movl
mov
test
cli
pop
popf
mov
faddl
adc
push
fisttpll
jno
sti
stos
fildl
inc
enter
aad
lcall
adc
lods
and
insb
push
and
inc
jge
dec
push
dec
repz
cmpsb
test
inc
mov
sbbb
dec
add
pop
jl
dec
mov
dec
adc
repz
roll
imul
lahf
aam
out
ja
fwait
lret
hlt
cli
cmp
aam
in
test
addr16
out
arpl
fucomi
add
lds
rclb
insl
jp
adc
jo
pop
jle
push
test
cmc
jb
shrl
pop
aam
repz
adc
cs
cmp
push
das
repz
fwait
imul
bound
mov
das
mov
sub
pop
sbb
xchg
ja
fsubrl
mov
mov
xorb
or
mov
jno
cs
orb
loop
dec
nop
or
or
xchg
repz
lahf
xor
cld
mov
and
shl
xchg
inc
cmp
fwait
repnz
mov
hlt
cmpb
sbb
jmp
call
xchg
mov
jl
enter
je
pop
sub
adc
fwait
testb
mov
push
dec
enter
shrl
jg
mov
push
adc
sbb
roll
js
push
mov
repnz
push
mov
push
sbb
xor
mov
mov
xor
cwtl
dec
push
aam
inc
mov
or
jb
mov
mov
mov
jo
data16
jle
lods
insb
push
clc
xor
stos
mov
xchg
xor
push
bound
lds
cmc
push
subb
mov
daa
inc
stos
push
in
xchg
scas
lret
or
mov
jmp
clc
xchg
repnz
stc
add
jno
aam
mov
adc
test
jg
ljmp
push
dec
mov
leave
dec
in
sbb
xor
out
mov
or
push
sbb
or
jmp
add
jge
ljmp
or
fstpt
in
lret
cmc
test
mov
popl
or
not
jo
xchg
fwait
repnz
mov
sbb
adc
call
cltd
push
fdivs
mov
xchg
mov
outsl
add
pop
mov
sahf
call
inc
dec
nop
test
push
lret
jnp
xor
inc
xchg
enter
pop
xlat
shrl
aad
out
xlat
aaa
cmp
push
or
jle
pop
loope
into
push
add
test
fdiv
fwait
sub
xor
sahf
test
lods
sub
sub
sub
cmp
out
inc
dec
je
jle
mov
pop
mov
nop
fsubs
fsubl
mov
cltd
cmpsb
cmp
cwtl
xor
inc
lcall
xchg
adc
andl
jns
xor
ja
popf
outsb
outsb
aaa
and
imul
std
idiv
jne
mov
dec
into
pop
out
ret
sbb
loop
sub
sub
jg
jns
dec
adc
and
adc
push
and
push
incl
jnp
out
mov
mov
popa
mov
fdivrl
repnz
lods
adcb
cmp
mov
in
mov
mov
ss
dec
or
sar
jp
adc
push
xor
loope
ret
mov
pop
sbb
xchg
out
pusha
mov
jbe
iret
push
cltd
mov
cmp
fsubp
pushl
or
mov
and
outsl
lods
lods
jae
adc
mov
aaa
cmpb
xor
jne
push
xchg
in
lret
mov
and
push
push
push
adc
mov
dec
jl
ds
or
xacquire
mov
jns
jnp
fdecstp
mov
or
out
lock
add
hlt
cs
aad
push
or
vucomisd
out
xor
fidivrs
jge
mov
push
jmp
jp
dec
mov
jns
scas
fldl
frstor
and
cmpsb
jns
mov
aas
sub
lret
push
dec
test
xchg
xchg
push
pop
cmpsl
dec
push
fsubl
jnp
movb
jecxz
stos
and
and
repnz
loop
sbb
jnp
lret
push
out
sti
fwait
test
cli
popf
xchg
fsts
pop
and
sbb
push
cmp
lds
cmp
push
push
jne
out
sbb
cmc
mov
imull
clc
out
sub
test
adc
xor
xor
xor
mov
adc
xchg
push
cmp
dec
mov
clc
add
push
mov
add
or
and
test
inc
pop
into
cld
data16
mov
cmc
adc
cld
dec
stos
push
push
and
sbb
lcall
mov
xor
push
push
push
sub
sub
add
inc
js
cwtl
ja
outsb
hlt
das
bound
pop
addr16
push
or
movl
enter
cwtl
cmp
mov
nop
xchg
inc
or
cmpsb
mov
mov
adc
loopne
and
adc
das
push
mov
cmpsb
pop
call
fwait
mov
mov
shld
or
icebp
jo
cmp
xchg
in
shlb
idivl
cmpsl
mov
js
jle
cmpsl
nop
bnd
pop
jbe
pop
push
adcb
in
pop
sbb
lock
nop
into
lcall
je
lods
sub
pop
xor
adcl
into
xchg
fs
outsb
sarb
in
push
sbb
push
nop
addl
das
xchg
jns
jp
ss
dec
pop
stos
and
push
fwait
mov
inc
in
pop
in
or
push
in
subb
xchg
mov
out
pop
js
mov
pushf
cwtl
icebp
add
sahf
test
push
jnp
cltd
push
subb
cmp
pop
mov
arpl
jmp
lret
sbb
add
cmpb
and
add
daa
repnz
inc
lret
shlb
dec
dec
mov
xchg
jae
inc
idiv
sbb
add
mov
sbb
push
ja
lcall
icebp
aad
mov
aad
xchg
lods
inc
cli
xchg
mov
sar
sbb
insb
sarb
ja
add
xchg
loop
bound
cmpsb
fisubrs
xchg
xchg
adc
cmpsl
jne
mov
cmp
mov
dec
cmp
int
xchg
mov
lods
xchg
nop
fwait
testl
popa
lahf
xor
cli
cmp
jo
mov
push
mov
out
mov
cmp
ret
fbld
and
and
or
fldt
fsubl
clc
jbe
mov
movb
xlat
insl
sarl
sbb
fnstsw
mov
cmp
jp
shll
push
pop
test
iret
jno
leave
out
stc
lret
jnp
mov
xor
je
xchg
lgs
loopne
int
xor
xor
mov
das
test
cmp
daa
lret
nop
and
sti
and
xchg
adc
mov
xchg
dec
jmp
push
mov
aas
sub
leave
aad
ja
ds
mov
loopne
push
ja
fs
push
jg
cmp
adc
inc
pop
outsl
or
sarb
mov
leave
or
loope
dec
movsb
and
adc
scas
xlat
out
add
leave
out
cmp
pop
sti
int3
repnz
shrb
sub
push
in
cmpsl
mov
jae,pt
mov
add
cmpsl
movsl
jl
in
filds
idivl
pop
lock
sub
push
popa
ror
mov
dec
xchg
xor
fnstenv
fildl
pop
jo
dec
mov
les
sub
or
dec
addb
pop
xor
mov
xchg
cs
pop
push
push
test
test
insb
sbb
fistpll
jge
jne
stos
pop
sbb
lcall
ja
pushl
pop
test
push
scas
mov
dec
pop
enter
push
xchg
and
jmp
jg
into
movsl
ja
mov
popf
sub
movsl
adc
sbb
es
fisubrs
push
xchg
fcoms
sbb
fsts
cmpsb
push
imul
xor
test
out
cmp
xchg
add
es
jle
dec
inc
testl
xor
call
les
jp
dec
inc
jno
sahf
sbb
adcl
cld
push
mov
pop
jmp
mov
int3
mov
xchg
push
or
pop
inc
mov
inc
xchg
jns
fstl
xlat
mov
ds
cmpl
not
jl
and
mov
xor
dec
adc
repz
out
aad
xchg
mov
mov
mov
mov
mov
lds
pop
loopne
cmpsb
mov
mov
xor
inc
fiaddl
adc
mov
or
sbb
xor
cmpsb
ret
push
adc
xor
stc
pusha
fmuls
mov
aas
adc
add
ficompl
xlat
xchg
mov
out
shlb
daa
mov
sbb
cmp
ja
mov
lret
mov
loopne
mov
test
sub
out
sti
inc
pop
mov
fdivrl
push
aam
ss
pop
in
inc
leave
jne
sub
aaa
test
lret
mov
insl
int3
mov
jg
jl
jbe
rolb
scas
xor
in
or
or
push
push
data16
iret
fistl
add
aaa
and
sub
cmp
pop
js
shll
push
subl
mov
fwait
cli
in
enter
and
aaa
pop
dec
lret
test
cmp
mov
outsl
sbb
sbb
jnp
mov
imulb
xchg
in
sbb
mov
inc
outsl
adcl
or
xlat
mov
adc
cmp
test
adc
xchg
sub
out
push
ficoms
mov
lahf
push
roll
popf
leave
inc
jecxz
sarb
mov
shl
add
xorl
lahf
aaa
sub
dec
xchg
mov
das
loop
mov
push
dec
aad
mov
lret
aaa
ret
or
or
mov
adc
cli
mov
push
adc
lods
cmp
xor
js
out
in
add
pop
ret
sub
lcall
mov
mov
dec
jo
jno
pop
cmpsb
mov
scas
push
mov
rorb
jmp
int
and
pusha
hlt
repnz
jp
push
test
or
ret
stc
adc
inc
mov
dec
dec
inc
pop
daa
and
fs
sub
jae
bound
mov
xor
icebp
xor
xor
inc
xchg
and
pop
out
in
pop
call
imul
mov
in
xor
jnp
addr16
add
sub
adc
fstpt
pushf
sub
mov
lret
pop
xchg
shl
dec
add
add
scas
mov
rep
jmp
mov
xor
push
je
orb
mov
pop
fdivrl
or
mov
pop
lods
sarl
imul
inc
push
push
dec
lock
cmpsb
jb
lahf
inc
leave
inc
and
push
push
cmp
sbb
mov
sbb
fwait
loopne
bound
xor
jp
dec
xchg
ds
in
insb
sar
cs
loopne
add
inc
test
add
fwait
or
negl
push
test
add
std
pop
loope
out
mov
daa
cld
rolb
mov
cs
bound
adc
shll
cmpsl
mov
enter
and
iret
fldl
and
pop
sbb
cmp
aad
out
inc
arpl
mov
dec
lcall
addr16
cmpsl
into
jo
adc
lock
xor
jp
or
or
jb
mov
ja
cltd
pop
mov
xchg
push
cmc
xchg
pop
fs
add
in
xor
jnp
push
adc
push
xchg
mov
in
test
bound
jb
and
cmpsb
xchg
pop
rclb
mov
adc
or
xchg
sub
cld
movsb
pop
mov
add
jl
test
js
adc
das
mov
rep
sarb
mov
or
mov
pop
ja
lods
and
sbb
cmp
jns
pusha
test
xchg
mov
loop
adc
cld
out
ljmp
mov
mov
cwtl
mov
sub
lods
mov
cmp
mov
mov
arpl
lret
cmp
push
jnp
adc
fistpll
add
jbe
lea
test
out
inc
inc
lret
bound
cmp
les
or
data16
adc
out
fcomip
leave
xor
test
cmp
movsl
mov
push
mov
in
xchg
xlat
loopne
sbb
cmp
mov
pop
jmp
cld
outsb
gs
fcomip
out
xchg
sbb
int
cmp
cs
test
outsl
stos
mov
and
andl
or
mov
and
or
sbb
inc
out
mov
dec
mov
loop
xchg
or
loope
ss
mov
enter
xchg
jno
pop
jecxz
pop
sub
inc
dec
cmp
ret
lret
mov
push
shlb
ljmp
cld
shll
sub
cmp
add
or
add
xchg
mov
pop
or
push
pusha
out
xor
std
mov
lret
scas
out
adc
push
addr16
cs
push
mov
dec
jno
out
cli
jne
hlt
cltd
sahf
out
or
pop
pop
xor
mov
pop
mov
in
bound
int3
push
push
lods
mov
repnz
cmc
popa
or
les
imul
icebp
rcrl
xor
iret
inc
push
pop
repnz
ret
inc
pop
sub
sbb
pop
movsb
out
push
jmp
in
cmp
das
ds
dec
roll
sbb
int3
lock
test
push
pop
and
sbb
adc
ss
xor
ret
cmp
rcl
jo
sub
and
pop
pop
pop
shrb
test
adcl
jo
push
push
inc
mov
and
sub
mov
inc
sbb
fs
inc
mov
iret
mov
mov
inc
mov
dec
lock
pop
xor
pop
pop
mov
dec
loopne
mov
mov
fidivs
xchg
sbb
jecxz
ret
outsb
enter
leave
mov
movsb
stos
jecxz
lret
popf
loop
mov
mov
leave
xchg
mov
aas
outsb
xchg
xor
scas
jle
or
add
stos
hlt
mov
lods
mov
xchg
fnstcw
cmc
gs
push
loop
insl
xor
jmp
or
jnp
adc
in
jmp
xor
push
in
mov
pop
fistpl
mov
fidivl
push
pop
and
sti
stos
mov
rorb
lods
cmc
cld
xor
int3
in
jmp
xchg
xchg
cltd
shll
out
scas
adc
push
and
mov
int
cmp
jns
mov
pop
jl
loopne
dec
leave
in
decb
sahf
lret
xchg
cld
or
mov
and
push
aas
es
mov
jno
popa
mov
pop
dec
add
fs
dec
mov
and
cs
mov
mov
movsl
push
sbb
fiaddl
xor
mov
hlt
and
call
mov
cmp
fs
sub
test
sahf
sub
mov
cld
insl
add
mov
or
in
test
xlat
inc
mov
jbe
dec
les
lret
mov
arpl
leave
stos
mov
mov
sub
push
jge
filds
and
mov
stos
lods
fsubs
imul
xor
and
ljmp
lret
data16
fwait
push
mov
push
cltd
mov
gs
dec
or
add
mov
je
jae
adc
lret
enter
aad
adc
jl
enter
mov
loopne
pop
mov
mov
push
inc
and
push
or
into
pop
adc
cmpl
out
arpl
cwtl
fs
movsl
ja
inc
inc
xchg
and
xor
lock
iret
cmp
dec
push
lods
cmpsl
and
hlt
daa
sub
xchg
inc
pop
daa
mov
xchg
adc
fcomps
in
sti
jg
cltd
adc
in
loopne
cld
lods
loopne
xchg
mov
jns
ds
ss
mov
inc
pop
xor
ds
iret
mov
insb
dec
insb
dec
add
in
push
push
inc
call
sub
out
cmp
lods
push
movsl
jecxz
fnstsw
pop
aas
fucomp
push
mov
pop
add
imul
mov
test
cltd
imul
mov
loope
add
jg
bound
sti
andl
sbb
or
lret
and
xchg
sbb
fxch
and
and
sbb
or
out
and
and
hlt
in
cmp
adc
pop
inc
pop
int3
data16
stc
sbb
pop
fsub
pop
add
mov
xor
sbb
test
pop
fisttpll
inc
lea
sub
sbb
dec
movl
and
scas
push
sbb
repnz
mov
adc
pushf
inc
jg
xchg
ja
mov
push
xchg
bnd
decb
jge
pop
sub
lock
cmp
icebp
fmuls
sbb
cwtl
push
and
dec
lret
int
cs
subl
out
push
pop
cmp
push
dec
sub
mov
pop
int
and
push
jae
pop
lock
xchg
mov
scas
add
sbb
jp
pop
aad
sbb
mov
xchg
jne
sub
mov
push
mov
adc
mov
dec
lret
xchg
cltd
mov
or
fiadds
and
adc
sbb
in
jmp
xchg
xchg
or
imul
arpl
mov
cmp
push
imul
pop
jno
enter
dec
ss
xlat
pop
in
sub
loope
test
cwtl
jnp
in
gs
gs
mov
cmp
sbb
jne
cltd
rolb
retw
xor
or
adc
pop
pop
lret
jge
pushf
sub
fsubs
and
sub
dec
xchg
fnsave
or
loopne
inc
loope
loopne
xchg
repz
pop
adc
or
ret
cmpsb
xchg
mov
adc
popa
addr16
cmc
call
lods
push
out
adc
lahf
and
stc
jmp
add
jmp
mov
sti
ret
lock
imul
repz
pop
cld
jae
pop
fmuls
mov
cmp
es
mov
aad
xor
cmpsb
mov
mov
pop
xchg
jg
xchg
sub
cmp
mov
aas
mov
test
fildll
push
stos
in
inc
rol
xor
loope
xchg
idiv
je
je
cwtl
jecxz
pop
inc
push
mov
pop
push
rorb
sub
int3
inc
add
mov
in
inc
jle
mov
stc
xlat
insb
mov
rcl
xor
jge
mov
xor
es
mov
fistps
cwtl
nop
ficompl
lret
nop
adc
aas
or
fcoms
rcl
insl
pop
add
aas
mov
orb
insb
push
outsb
scas
cmp
cmpl
sbb
dec
or
push
lea
fidivs
mov
and
adc
sar
mov
pushf
movnti
stos
mov
fdivrl
cltd
jle
lea
push
push
sub
aas
loop
ret
clc
icebp
sub
dec
pop
icebp
ret
and
lock
lret
add
loop
scas
adc
out
jge
lods
pop
xchg
cwtl
std
add
mov
out
shrb
cmp
inc
sub
push
or
enter
sarl
or
push
dec
jno
or
dec
pusha
stos
sahf
aam
xchg
test
jbe
inc
ljmp
dec
xchg
jno
push
jl
push
or
push
pop
pusha
xor
cmp
hlt
and
and
mov
inc
jl
clc
pop
xor
xchg
hlt
xchg
mov
mov
arpl
xchg
inc
daa
cmc
pop
adc
aam
dec
sub
in
outsl
push
scas
loope
pushw
cmp
int
xchg
int
jle
lret
pop
out
adc
mov
cmp
lret
lret
add
lea
xchg
cmpsb
cmc
and
or
mov
inc
xor
adc
les
sbb
pop
inc
cld
and
sub
test
in
out
cmpb
icebp
and
dec
bound
aaa
or
mov
add
arpl
hlt
cmp
popa
addr16
daa
filds
ficoms
lds
or
dec
insb
dec
popa
fucomp
mov
add
pop
stos
insl
loope
sbb
arpl
push
inc
push
push
xchg
inc
aad
cmp
pop
or
fdivl
popf
enter
and
mov
and
decl
or
push
pop
call
xchg
psraw
cmp
adc
sub
test
sub
fs
sbb
repnz
add
psadbw
mov
repnz
test
mov
lcall
ja
shrb
mov
insl
and
inc
adc
push
outsb
push
ret
fdivrl
xchg
mov
idivl
mov
sbb
cwtl
in
scas
clc
cmp
stos
dec
xlat
inc
arpl
jge
sbb
je
test
outsl
lcall
rorb
mov
adc
ret
push
and
sbb
rolb
bound
inc
xchg
mov
mov
sbb
dec
mov
and
mov
es
lahf
and
aam
mov
mov
leave
jae
iret
pop
adc
aad
and
test
and
shll
call
mov
xor
jo
pop
lods
and
sub
sub
pop
mov
jno
lahf
jns
cmc
mov
popf
repnz
dec
xor
or
stc
sub
sub
dec
cmp
sbb
push
cld
xchg
out
mov
pop
insb
mov
fistps
pushf
jecxz
loopne
xor
xchg
mov
jmp
roll
mov
dec
and
pushaw
fdivrs
jae
pop
es
pusha
scas
loopne
shl
enter
dec
sarb
out
mov
shll
adc
subb
cmc
frstor
mov
cs
jno
aas
adc
mov
pop
ss
insl
xor
aaa
popf
xor
jne
xor
inc
outsl
jae
js
popa
xor
xorl
xor
jns
add
rol
push
xor
cmp
cmp
lcall
xor
imull
pop
xor
icebp
and
mov
push
xchg
pop
imul
lock
stc
sbb
pushf
lret
and
jg
mov
jb
movl
push
or
sbb
clc
lds
lea
repnz
dec
or
mov
in
clc
cld
inc
std
je
jb
clc
adc
sub
push
mov
sbb
icebp
in
aas
pop
loopne
aaa
xchg
add
mov
add
rorl
jno
pop
xor
and
lea
fldl
icebp
mov
dec
push
dec
leave
vcomisd
test
stos
xor
les
clc
adc
aas
ret
jge
das
imul
push
or
xchg
cmp
adc
sub
leave
insl
jle
mov
iret
cmp
inc
rorl
sbb
stos
dec
pop
dec
add
push
ret
insl
or
dec
data16
popf
lea
cmp
xor
and
out
mov
in
cltd
inc
out
adc
add
clc
pop
xchg
pop
mov
mov
gs
rorb
sbb
adc
ss
test
pinsrw
pop
and
xchg
add
sbb
push
jecxz
cmp
in
and
orb
mov
sarb
jl
pop
sbb
lahf
xor
xchg
ja
ds
pop
jne
cli
cmpsb
jg
lret
inc
movsl
in
dec
arpl
jb
dec
aad
pop
jp
nop
dec
fisubrl
into
out
lcall
push
cld
sbb
cmp
aaa
xor
mov
sub
adc
push
std
testl
mov
push
jo
decl
inc
jb
sbb
dec
bound
fidivrs
mov
sbb
aam
cmp
les
inc
not
jmp
mov
and
xchg
outsl
push
cs
xor
imul
outsl
fisttpll
xor
jg
dec
and
out
push
std
mov
mov
jae
je
call
repnz
pop
lods
cmp
repz
stos
rcl
js
sub
loope
adc
adc
insb
pushl
mov
icebp
loope
mov
or
cli
clc
dec
icebp
dec
jg
neg
xor
mov
xor
je
dec
dec
imul
movl
push
jo
xor
lds
push
mov
icebp
stc
xchg
ljmp
mov
push
push
inc
add
insb
sbb
imul
loop
pop
mov
in
push
pop
dec
gs
jns
jb
pop
mov
hlt
dec
push
leave
push
dec
sbbl
outsb
push
sub
mov
push
in
cmp
cmp
pop
test
pop
lret
or
xchg
leave
xor
inc
into
and
adc
jns
insl
and
enter
cmp
add
test
call
mov
adc
pop
xchg
out
dec
icebp
sub
test
jbe
insb
fwait
lcall
xchg
jmp
mov
add
mov
out
sub
mov
push
jg
and
jbe
bnd
xor
repnz
inc
gs
das
mov
gs
je
or
lods
fsubrs
ds
gs
stos
jecxz
movsb
sub
mov
cmp
sahf
xor
and
sahf
ret
jmp
and
lret
sbbb
clc
aaa
aad
or
aaa
push
xchg
jp
xor
stos
and
test
sahf
ret
push
jmp
data16
int
das
jp
addb
fistl
push
int3
cmpsl
nop
pusha
mov
mov
and
inc
and
outsl
mov
ret
sub
mov
mov
es
ds
loop
cmp
cwtl
lret
xchg
jns
add
cltd
int
test
add
jnp
dec
je
scas
gs
iret
pop
jbe
dec
xchg
bound
negl
stos
add
or
aad
pop
test
push
or
ud0
lock
jno
or
cmp
arpl
dec
and
mov
mov
and
mov
icebp
and
into
mov
loop
inc
in
fsincos
pop
int3
inc
or
mov
xor
mov
and
test
xor
mov
and
cwtl
mov
gs
js
ror
mov
mov
inc
jno
push
sbb
or
lock
cmp
mov
or
shl
lret
sub
pop
push
iret
rolb
out
adc
mov
test
popa
jl
repz
mov
adc
mov
lcall
or
sub
xor
cwtl
vpinsrw
push
cld
icebp
inc
pop
aam
bsf
cmpsl
jg
add
shll
and
jbe
pop
dec
test
adc
xchg
mov
xchg
mov
dec
mov
in
mov
dec
pushf
daa
mov
jbe
adc
xchg
in
cmp
cmpsb
push
xchg
xchg
fisttpll
push
adc
adc
push
shll
fmul
jb
mulb
inc
push
mov
mov
imul
cmpl
rclb
dec
ret
pop
jno
in
call
test
je
cwtl
and
js
pusha
scas
pushf
out
mov
lret
bound
xchg
pop
jg
outsb
jne
adc
fs
xchg
inc
pop
cmp
xor
scas
gs
sub
add
inc
add
sub
testl
das
cmp
pop
pop
mov
dec
xchg
std
mov
sbb
add
icebp
test
dec
les
xchg
cmc
iret
je
repnz
dec
into
test
aas
pusha
inc
test
mov
in
jo
or
mov
inc
pop
mov
xor
adc
mov
adc
xchg
dec
dec
icebp
cmp
xor
xor
sbb
ljmp
mulb
cmc
aas
and
pop
dec
sub
inc
dec
lret
les
dec
mov
ficoml
and
mov
mov
popa
dec
inc
mov
in
mov
je
imul
ret
dec
push
mov
pop
xor
sbb
xchg
cs
fwait
daa
loop
mov
lock
push
mov
bound
lcall
gs
cld
inc
pop
push
push
push
jns
ja
int
xchg
push
pop
test
sti
jno
push
test
into
mov
es
cwtl
jo
outsl
fwait
fwait
cwtl
dec
mov
es
xor
xor
xchg
sub
cmpsl
jne
stos
jle
daa
imul
push
ret
pop
jae
xor
inc
add
fstpt
jge
adc
imul
xor
mov
pop
sub
movsb
test
adc
rcrb
cmp
pusha
mov
mov
mov
or
enter
cltd
rorb
xchg
int3
and
cmp
jne
testb
cli
adc
aad
in
clc
cli
sbb
rcll
idivl
xor
nop
and
mov
stos
aaa
fldt
cmp
jno
sub
hlt
rorb
mov
leave
clc
test
jo
shl
cmp
mov
mov
test
stc
scas
dec
sub
mov
cmp
pop
scas
mov
shlb
fs
mov
dec
dec
fisttpl
movsl
lahf
add
sbbb
add
jae
sub
aas
jmp
lods
testb
sub
mov
aad
fmul
pusha
xchg
loope
shll
dec
fistpll
aaa
cmpsl
and
fwait
adc
loope
jnp
dec
movl
xor
push
sahf
push
sarb
arpl
pop
add
xor
sarb
jg
sub
adc
mov
cmp
test
clc
pop
mov
addr16
pop
ja
insl
js
mov
bound
jge
in
repz
test
out
sub
jecxz
hlt
pop
mov
adc
dec
sbb
pusha
fistps
push
xchg
xor
sar
push
fnstsw
fsubrp
cwtl
adcb
jns
cmpsb
aas
inc
xorl
cmp
pop
dec
ljmp
fdivrs
mov
cmp
fld
adcb
mov
dec
into
cltd
xor
sti
xor
sub
dec
into
or
sbbb
sub
xchg
gs
jns
aaa
fwait
lock
je
adc
mov
cmp
mov
adc
stos
imul
mov
test
xchg
cld
push
mov
push
xor
cld
addb
sbb
hlt
adcl
sti
pop
rol
cmp
mov
mov
mov
cs
xor
xchg
sub
fdivr
cltd
xchg
lahf
lcall
ret
cmp
push
mov
pop
jp
mov
pop
or
mov
mov
in
dec
dec
iret
movsb
sti
js
rcrb
bound
int3
rorb
add
fpatan
cmc
push
into
dec
out
repnz
inc
and
mov
add
arpl
or
fstps
jmp
push
lods
push
out
push
xor
bound
mov
mulb
cmp
rcll
jp
fs
dec
cmp
xor
andl
pop
inc
jmp
jmp
out
aad
std
inc
pop
adcl
sbb
cmp
cmp
push
jmp
ja
clc
into
sub
rorb
rorl
mov
aad
repnz
jl
sub
lea
sub
push
sti
fwait
int3
fisttps
mov
cmp
cmp
mov
or
mov
xchg
aaa
stc
daa
inc
out
cltd
stc
mov
test
icebp
add
sbb
and
or
dec
jb
and
arpl
mov
sbb
pop
push
pop
mov
add
jl
out
push
sbb
and
sbb
lea
jle
jg
mov
gs
iret
inc
xchg
sarl
inc
popa
sub
rorb
lretw
sub
xchg
out
je
xchg
jb
mov
cmp
dec
pop
lds
lock
icebp
out
sahf
jle
outsl
inc
punpcklbw
clc
stos
clc
pop
inc
sub
sbb
mov
jb
pop
cmp
pop
sarl
lret
jbe
mov
cwtl
sub
outsl
loope
pop
cld
dec
cmpsl
add
xchg
pop
adc
in
mov
fisubrs
das
fsubrl
lods
out
sub
stos
xchg
push
cmpsb
xchg
adc
inc
pop
test
sub
aas
shrl
cmp
movsl
daa
add
ret
loop
or
leave
mov
xor
arpl
add
adc
dec
sbb
sar
out
pusha
cwtl
bound
pop
push
into
push
mov
iret
aas
push
dec
fidivrl
fnstcw
sbb
mov
sub
fdivrl
mov
sbb
cli
mov
repnz
mov
pushf
cmp
mov
sti
sti
mov
push
push
jg
or
and
mov
jbe
mov
aas
lods
popa
jge
push
test
bound
loop
pop
sub
dec
test
ds
imul
cmpsl
mov
inc
dec
icebp
jae
push
test
and
sbb
mov
aad
fsubrs
xchg
sub
lods
rcll
lds
inc
mov
shrb
mov
mov
mov
cmp
das
mov
movsl
mov
fildl
mov
mov
push
or
mov
mov
or
js
dec
hlt
lds
add
and
fsub
push
es
sub
pop
fistps
or
lahf
xlat
xchg
movsl
mov
leave
imul
mov
inc
pop
inc
adc
adc
and
pushf
add
mov
sbb
in
cmp
es
pushf
pop
sbb
fisubl
cmp
pop
push
or
xchg
and
ljmp
jae
xchg
pop
cmp
pop
sub
lea
js
xor
aam
je
mov
lods
rcr
fcmovnu
insl
mov
fldl
shl
cmp
cmpb
adc
jne
or
dec
push
push
stos
mov
cmp
cmc
lcall
jecxz
mov
inc
cmpsl
in
mov
push
xchg
jle
scas
sub
cmc
mov
xor
pushw
lret
or
imul
fists
xlat
leave
inc
out
inc
adc
cmpsb
fstpt
pop
leave
mov
jnp
jne
andb
add
ja
int
ljmp
push
xchg
inc
insb
mov
pop
xor
sub
sbb
pop
jge
mov
push
cmp
dec
rorb
or
rcl
inc
push
int
xor
pop
xor
stos
aas
loop
lods
lahf
idiv
pop
fdivrp
pop
pop
push
shll
and
dec
xchg
mov
xchg
addb
arpl
cmpsb
dec
mov
std
stc
sbb
outsl
push
xor
lret
cmp
mov
add
jle
cwtl
in
in
jg
in
lahf
xchg
inc
cmp
fistpl
sahf
cmp
adcb
ljmp
mov
ljmp
pop
out
push
les
xchg
add
push
push
pop
jmp
test
lcall
xchg
mov
and
pop
es
adc
sbb
dec
sub
inc
insb
xchg
dec
mov
add
icebp
mov
xchg
cmp
pop
daa
mov
push
jbe
dec
ficomps
adc
addl
lds
clc
push
adc
in
inc
mov
jno
dec
leave
in
js
xchg
sub
push
sub
jle
outsb
mov
mov
xchg
dec
in
push
push
xor
mov
rcl
xor
dec
sahf
jns
sbb
ret
mov
adc
sbb
mov
sti
aam
ret
mov
ja
dec
xlat
cld
jge
out
xchg
jnp
adc
inc
mov
jg
rcrb
scas
shlb
gs
in
data16
lret
add
movsl
dec
pop
aaa
out
add
fwait
shl
fldl
pop
sbb
push
das
mov
test
fistl
mov
fwait
adcb
das
into
push
dec
iret
mov
mov
cwtl
cmp
jnp
push
xchg
mov
cmp
sbb
pop
add
popa
mov
rcl
push
add
xor
xor
adc
mov
pop
pusha
xchg
push
pushf
xchg
repz
lret
jbe
adc
out
push
pop
sbbl
ja
mov
jns
sbb
icebp
mov
pop
jo
sbb
cmpsb
fistl
sub
sub
fcomps
cmc
repnz
aaa
push
int
dec
xchg
movsl
mov
cmp
mov
inc
in
loope
cmp
dec
xor
or
xchg
clc
cmp
mov
ret
pop
das
or
and
rcrb
jo
rorb
fcomps
fisttpl
cmp
xchg
mov
xchg
adcb
inc
cmp
aad
or
push
add
or
pop
inc
ret
cwtl
insb
rcll
adc
ja
mov
push
or
cld
icebp
into
jno
sub
fcmovne
or
fwait
push
bound
inc
xchg
jo
iret
ret
pop
lahf
mov
andb
cmpb
pushf
pop
leave
orl
sti
jl
sbb
mov
and
xor
js
enter
sahf
add
ret
fdivl
adc
mov
arpl
enter
xlat
mov
jl
push
movaps
addl
cli
test
jl
and
inc
in
adc
cli
cmp
mov
jno
adc
clc
arpl
sbb
imull
dec
xchg
pop
mov
inc
fnstcw
int
mov
popf
xchg
mov
aad
adc
sarb
movsl
fldl
or
or
bound
int
xchg
fistl
pusha
adc
adc
mov
sarb
mov
enter
xchg
cmp
mov
and
sub
int
or
jge
mov
mov
mov
mov
push
jo
jp
xchg
and
mov
push
jge
sbb
test
sub
inc
movsl
push
movsb
and
mov
sbb
adc
and
cltd
jno
scas
fwait
cwtl
addb
pop
adc
popf
mov
mov
lods
push
cmpsl
push
cmp
mov
adc
push
dec
leave
fisubrl
rcrl
pop
xor
std
lods
pop
stc
aas
mov
mov
imul
sbb
test
jo
mov
pop
inc
or
jb
jp
stos
fiadds
inc
jmp
mov
fwait
lods
aas
cs
xor
push
into
nop
aad
push
pop
adcl
mov
mov
lcall
mov
dec
mov
test
inc
rcl
sarl
add
fisubrs
cli
pop
fsubs
push
xchg
mov
mov
jmp
jae
and
ss
mov
lahf
mov
in
cs
dec
std
lcall
sub
outsl
lods
cmp
incl
lcall
mov
jb
movsl
jp
sbb
mov
mov
lds
mov
out
lret
mov
sub
popf
outsb
gs
jne
cmp
lods
xorb
jecxz
sub
cmp
aas
mov
insb
adc
out
test
xor
sub
pop
adcb
ss
imulb
inc
lds
movsl
stos
sbb
clc
sbb
push
mov
jg
loopne
lock
cs
test
nop
inc
outsb
push
add
add
xor
leave
pop
dec
mov
pop
mov
in
out
ds
int3
push
les
not
in
add
pop
xchg
icebp
scas
adc
int
or
jg
cmpsl
data16
and
ja
cld
ret
sub
mov
lock
cmpsb
pop
int
repnz
cwtl
mov
cmpsl
and
pop
add
mov
loope
les
xor
xor
and
jp
jmp
or
enter
ret
hlt
mov
adc
sti
stos
pop
inc
pop
push
xor
test
idivl
repz
inc
jl
lahf
fadd
cli
dec
adc
push
std
lock
cli
jl
sbb
ret
cmpb
sub
push
mov
ds
mov
in
test
cmp
xor
out
data16
dec
or
or
outsb
sti
xchg
flds
push
mov
pop
repnz
cltd
pushf
std
push
cmp
getsec
fsubs
pusha
cli
je
inc
imul
aaa
jae
add
or
inc
test
mov
loopne
mov
sbb
add
push
sub
hlt
dec
fdivl
dec
out
sub
and
nop
faddl
mov
mov
lods
lods
adc
lahf
addl
sbb
daa
sarl
mov
lret
pop
push
loope
pop
xor
popf
inc
aam
lock
jns
cltd
cmp
out
outsl
insb
in
in
jge
ret
into
adc
mov
or
lock
inc
jecxz
shrl
jge
js
mov
cmp
or
and
xlat
xor
in
enter
out
cmpsb
repnz
sahf
shrl
addr16
mov
mov
fimull
js
mov
lahf
icebp
mov
sahf
inc
xchg
sbb
int
outsl
jl
inc
add
fbld
xor
repnz
mov
add
cmc
gs
mov
xor
push
test
xchg
jp
sub
or
add
xchg
aad
xor
rcl
push
ret
xchg
out
inc
movsl
push
lods
mov
mov
insl
test
jmp
push
imul
mov
gs
dec
mov
or
mov
dec
sahf
mov
fwait
add
mov
clc
mov
cld
mov
in
loope
inc
movsl
or
dec
add
mov
jne
shll
xchg
mov
sub
jbe
pop
mov
test
stos
pop
pusha
orb
out
pop
sub
into
cmpb
in
subb
into
dec
xchg
shr
pop
jne
fdivl
lret
int3
lea
stc
jl
test
mov
cmpsb
mov
mov
mov
rorl
enter
push
cmp
lret
movsl
dec
scas
cmp
dec
adc
in
add
and
insb
subb
and
std
es
ss
xchg
inc
fisttps
lock
push
in
rolb
js
add
hlt
imul
testl
xchg
cmp
or
pop
jns
add
push
xor
or
pop
xor
ror
nop
inc
xchg
sti
loopne
arpl
and
in
xor
jno
push
fldl
inc
fnstenv
iret
ds
pop
dec
icebp
and
inc
in
inc
fwait
insl
add
insb
adc
xchg
xchg
scas
push
xchg
pop
stos
lret
xchg
sbb
cmp
loop
fwait
bound
adc
push
arpl
dec
fsubs
idivb
and
insl
repnz
inc
lock
jnp
aaa
loop
int
or
push
inc
cld
std
push
fmuls
add
mov
aam
movsl
aam
stos
pop
je
popa
add
or
sub
cmp
jmp
sbb
clc
mov
jo
adc
jne
enter
cli
fwait
dec
ds
mov
sbb
push
ss
mov
cltd
cmp
fwait
insl
loopne
testl
mov
xor
fwait
or
pop
xchg
inc
es
sbb
out
rclb
and
popa
inc
cmp
fwait
jp
in
sahf
outsl
lods
jge
inc
cmpsl
pop
inc
test
xchg
mulb
popf
jmp
ret
cmp
jo
mov
addr16
cmp
fstl
sti
sbb
stos
pop
in
cmpsl
outsb
sti
fxch
sbb
lods
jns
xchg
ds
sarl
cwtl
call
arpl
pusha
arpl
fisttpll
jle
ret
xchg
add
out
push
mov
lods
invd
sub
popa
inc
aaa
push
xlat
sti
jno
aas
cmp
ja
or
mov
in
and
mov
sub
out
jl
adc
outsb
fldenv
or
sub
gs
les
sbb
jbe
xor
push
mov
pop
add
pop
dec
pop
mov
mov
test
cmp
sub
dec
sub
jne
cmc
cltd
inc
cmpsl
pushf
stos
xor
daa
sub
das
mov
pusha
push
ja
cmp
sbb
inc
mov
mov
les
mov
inc
pushf
mov
icebp
ja
lods
stos
jecxz
fistl
jmp
sbb
fcompl
adc
fs
inc
xor
jle
stos
dec
cmp
loope
xchg
xor
pop
leave
fsubrs
add
adc
sti
jp
shlb
out
jg
call
ds
xchg
mov
xchg
fnstcw
add
dec
mov
mov
sub
gs
imul
pop
mov
ss
and
inc
adc
icebp
fs
mov
cs
or
in
stos
mov
xor
jmp
pop
in
xchg
jo
leave
mov
mov
fisubrl
and
pusha
js
or
out
mov
outsb
sub
lret
xchg
jp
lahf
sbb
test
adc
sub
ljmp
pop
push
jmp
outsl
fwait
loope
push
push
mov
mov
xchg
cmpsl
cmc
sub
push
mov
stos
loope
xor
aad
ss
lret
mov
or
sub
add
lock
mov
fstp
ljmp
fs
xchg
ss
pop
imul
dec
cld
in
repnz
dec
xchg
int3
repz
dec
shrb
leave
mov
cmp
xor
adc
jmp
xchg
xor
in
nop
and
push
cmp
pop
and
jp
jb
clc
fdivrl
inc
aad
dec
daa
pop
fimull
cmpsb
insb
sbb
orl
mov
inc
ljmp
cmp
cmp
loop
aas
push
or
in
push
loop
jg
fucom
jmp
cli
xchg
dec
or
movsl
bound
repnz
stos
jge
dec
aad
and
jb
xchg
or
xorl
cmc
dec
bnd
adc
jne
stos
push
roll
stos
mov
scas
mov
xor
jno
mov
pop
lret
mov
fidivrs
pop
fst
mov
sbb
loopne
jmp
mov
jae
or
stos
xlat
bound
or
pop
fdivs
pop
and
in
aas
mov
shrb
aad
scas
push
push
stos
cmp
cmp
mov
sbb
imul
sub
nop
aas
adc
jns
cmp
insl
imul
sub
lds
push
fcomip
jmp
fs
hlt
xchg
fcoml
lret
dec
test
mov
aad
mov
test
sbb
scas
jne
outsl
xor
mov
aad
mov
insb
fwait
lret
jecxz
mov
mov
call
sub
sub
inc
add
leave
sarl
repnz
mov
lds
lahf
ret
mov
xor
inc
das
adc
bound
pop
test
ror
jb
push
mov
cltd
fistps
push
ja
scas
sti
mov
mov
icebp
lods
xchg
sahf
movsl
xor
movsl
or
pop
push
pop
push
adc
jbe
enter
clc
sbb
cltd
popf
mov
jp
mov
mov
add
icebp
lods
dec
in
or
sar
in
mov
dec
mov
cmpsb
es
xchg
xor
stos
mov
xor
movsl
push
jge
dec
cs
jecxz
repnz
clc
dec
or
inc
mov
jno
pushf
incl
mov
sbb
into
nop
sbb
movsl
nop
xchg
shll
inc
aas
adc
ljmp
ljmp
aas
cmpsb
xor
push
xchg
add
loope
jmp
lds
lret
out
dec
push
jl
int3
mov
fldt
lods
insl
cmc
pop
insl
and
outsl
cmp
mov
or
xchg
push
add
or
pushf
aam
lods
pop
sub
ficoml
jl
decl
sbb
sahf
scas
adc
mov
adc
xchg
lods
movsl
mov
cmp
lret
lea
pop
aas
arpl
mov
sbb
dec
bound
jl
call
add
xchg
mov
or
popa
xchg
add
add
popa
pop
cmc
rcl
int3
jns
outsl
bnd
and
and
mov
sti
outsb
push
jns
ljmp
in
sbb
push
pop
push
inc
mov
pop
jmp
fisubrl
ss
ljmp
hlt
add
mov
fwait
or
mov
ficomps
jmp
xlat
fldcw
pmuludq
pop
jbe
mov
mov
mov
pop
push
outsl
lods
aam
sub
shlb
repnz
cmp
add
fbstp
mov
pusha
push
xchg
pop
push
mov
pop
dec
int3
dec
popa
and
cmpb
xor
daa
test
mov
loop
mov
lret
cmc
jo
pop
push
push
popf
push
rcrl
jl
mov
adc
pop
std
mov
imul
sbb
dec
mov
pop
jns
or
fdivl
stos
cmp
dec
rol
or
adc
xchg
pop
mov
iret
xchg
sub
mov
lock
negb
out
pop
add
xchg
test
mov
push
out
pop
rcr
stos
jo
movsb
mov
test
fldt
lea
mov
pop
cmp
stos
sub
cmp
pop
shlb
add
and
xchg
xor
dec
movlps
cmp
and
insl
add
lock
push
rorb
inc
notb
pop
and
sub
pop
cs
jns
add
xchg
out
test
xchg
jle
mov
std
stos
mov
pop
push
jnp
jmp
addr16
shrl
and
fmuls
fidivs
jge
or
addr16
jns
stos
sahf
outsl
and
mov
pop
out
aam
mov
sbb
js
sbb
sbb
xchg
inc
cmp
cld
pop
push
inc
cmp
test
shll
inc
movsb
in
and
mov
stc
in
and
or
gs
ror
mov
push
xor
or
into
pop
ja
fstpl
mov
sub
adc
dec
and
mov
imul
pop
mov
cmp
aam
dec
inc
mov
fistps
lods
cmc
pop
push
hlt
popa
push
inc
mov
and
in
xor
and
xchg
pop
sbbb
sbb
stos
push
fildll
dec
imul
cmp
adc
out
in
jge
xor
xor
stc
mov
and
pop
jne
sub
inc
xchg
cwtl
stc
pop
mov
cltd
clc
rol
stos
sbb
cmpsb
push
xor
aaa
out
fisubs
icebp
out
movsl
sti
mov
popa
and
or
outsb
popf
popf
and
jmp
sub
ss
jae
inc
and
sbb
dec
and
fs
lock
and
lret
stos
fadds
adc
xor
loope
cmpsb
cmc
sub
xchg
sbb
adc
cltd
pushl
pushf
into
push
mov
jns
xor
xchg
pop
sbb
adc
mov
or
lea
dec
mov
jp
std
sbb
mov
and
outsb
inc
jbe
pop
dec
push
nop
mov
xlat
jp
mov
rcrb
fs
cltd
adc
mov
test
popf
pop
push
dec
dec
loop
repnz
lods
loopne
xchg
xchg
pop
mov
mov
mov
aaa
jp
outsl
pop
enter
test
dec
mov
in
pop
add
or
cli
movsb
lcall
ja
cmp
jns
out
push
jmp
jmp
iret
insl
pop
mov
xor
dec
lods
push
mov
idivl
pushf
jle
int
mov
inc
cmp
add
ds
jno
movsb
add
xchg
or
cmc
mov
bound
mov
sbb
pop
int
push
popl
push
flds
jecxz
and
xchg
xchg
int
cli
int3
xor
sbb
repz
inc
pop
add
fimuls
xchg
sahf
insb
xor
aaa
in
cmc
popl
mov
test
cmp
xlat
xor
out
ss
out
shrb
cli
add
push
xchg
inc
lods
jecxz
xchg
jbe
fwait
in
or
mull
loop
mov
mov
adc
xchg
add
fisttpl
inc
inc
adc
shr
aam
jbe
sbb
jmp
lods
shl
sbb
mov
dec
push
mov
icebp
ret
push
sahf
sti
imul
xchg
int
dec
xor
test
push
xchg
popf
xor
or
test
and
mov
or
add
test
outsb
mov
push
cmpsl
push
and
cmp
scas
dec
loopne
mov
ds
lret
inc
pop
outsb
mov
mov
jno
jecxz
in
int
mov
cmpsb
sub
push
cmpsl
or
insl
icebp
xchg
cmp
int3
hlt
and
push
enter
adc
push
repz
repnz
cld
adc
pop
loopne
js
enter
pop
rorb
xor
popa
rorb
push
xor
xchg
xchg
hlt
arpl
sbb
sub
inc
popa
cmpsb
sbb
pusha
movsb
movsb
repnz
push
adc
repz
mov
rorl
mov
dec
mov
dec
mov
imul
mov
outsl
out
ds
js
int
aad
popa
xchg
sub
pusha
cmc
lret
lcall
in
fwait
and
mov
stc
test
stc
imulb
adc
dec
push
xor
out
or
push
test
fcompl
xchg
aam
jo
add
daa
sub
mov
jecxz
pop
pushl
inc
in
sahf
xor
jnp
mov
inc
mov
jbe
or
mov
cmp
les
stc
jge
mov
jl
cmp
mov
int3
lods
pop
rolb
dec
jmp
lock
jp
and
into
cmp
js
or
fucom
adc
push
insl
cmp
or
dec
push
push
add
xchg
mov
adc
mov
and
push
rcrb
test
or
inc
xlat
pop
call
xlat
fs
mov
mov
inc
leave
pop
repz
push
out
adc
icebp
push
mov
dec
push
test
loopne
es
test
cld
mov
mov
sbb
jge
cmp
mov
ret
shl
fwait
stos
dec
into
fcmovnu
and
pop
xor
push
mov
mov
dec
js
jge
inc
rcrb
fs
pop
lea
jbe
ret
sub
das
aas
test
lret
cmp
fnsave
xchg
cltd
popf
iret
sbb
pop
add
daa
push
dec
dec
subl
cmp
sbb
mov
inc
sarb
adcb
adc
pop
push
add
and
sbb
dec
add
and
cmp
popf
pop
push
into
cwtl
xchg
stos
sub
clc
push
sub
rcl
das
xor
jmp
into
testl
push
sti
lods
push
mov
mov
or
sbb
push
aas
repz
test
test
xlat
imul
mov
or
adc
lret
nop
ret
cmpsl
cmp
leave
cltd
cs
scas
and
dec
push
xchg
mov
cmpsb
lret
mov
clc
fs
lods
mov
dec
popf
adc
dec
leave
or
in
inc
out
pop
ret
push
inc
bound
pushf
xchg
push
sbb
es
jo
dec
sub
daa
jp
adc
fnstcw
lahf
sahf
ret
or
scas
fiaddl
movsl
xor
add
lds
jmp
mov
or
loop
xchg
sub
in
sub
lock
mov
rcll
adcb
call
or
jmp
push
iret
sub
out
loope
cmp
sti
pop
fcoms
repz
mov
add
popa
sahf
imul
outsl
orl
and
inc
clc
ret
or
lret
jge
xor
imulb
add
sbbb
mov
outsl
dec
in
jb
inc
xchg
mov
in
push
push
jo
nop
add
das
gs
pop
xchg
cmpl
cltd
sub
sbb
lock
stos
call
xchg
sti
xchg
jmp
or
cmpl
shrb
mov
scas
mov
pop
push
lods
pop
mov
pop
cmpsb
or
shll
dec
lret
sbb
jbe
lds
mov
in
icebp
ljmp
xchg
jmp
xor
mov
pusha
push
mov
ljmp
int
add
aaa
push
aaa
stos
inc
ss
adc
xor
dec
loope
mov
mov
cmp
insw
loope
dec
mov
popf
xchg
jmp
jecxz
lahf
cmp
adc
sub
es
jns
call
je
mov
pop
mov
and
push
xchg
out
mov
pop
int
cmp
dec
cwtl
push
sub
push
popa
lock
vpmovm2b
adc
pop
push
sbb
clc
mov
mov
pop
push
cmpsl
dec
xor
dec
push
out
jne
mov
lock
dec
insb
shrl
jb
les
inc
xchg
fcmovnbe
insb
test
cmp
inc
pop
lods
js
imul
dec
dec
xlat
mov
scas
je
and
testb
push
out
xor
add
push
pusha
mov
ret
jl
xorl
jo
cltd
lret
pop
mov
jmp
je
push
sbbl
idivb
aad
pop
popa
in
fnstsw
pop
jmp
jns
rorb
jmp
adc
testb
adc
push
and
jae,pt
mov
mov
clc
xor
stos
fldenv
dec
xchg
rcrb
sbb
pop
xlat
adc
adc
dec
rolb
imul
div
lock
add
dec
insl
sub
mov
jbe
push
pop
inc
xchg
jb
jl
lea
sti
repnz
movsb
flds
jmp
xor
cld
nop
or
stos
xchg
gs
aad
push
mov
cltd
push
ret
mov
shll
dec
int
jge,pt
xchg
inc
push
hlt
xchg
xchg
imul
test
dec
imul
adc
hlt
cmpsl
and
enter
int3
mov
cmp
loope
mov
mov
sbbb
sahf
cmp
ds
and
in
adc
xchg
dec
ret
mov
sbb
sub
push
jo
xchg
out
jp
shl
stos
cs
xor
in
or
adcl
scas
inc
jbe
add
les
sub
in
pop
idiv
icebp
dec
adc
hlt
adc
out
inc
arpl
add
movsb
pop
mov
lock
pop
xor
icebp
mov
data16
sahf
adc
inc
cmp
push
dec
adc
mov
imul
pushf
adc
and
sbb
and
mov
push
insl
mov
or
fsubs
pop
sti
out
out
and
div
cli
ja
pusha
test
inc
ret
ljmp
sbb
nop
add
into
inc
sbb
jns
and
dec
fsin
das
push
in
inc
push
fs
inc
out
pop
lret
pop
dec
stos
sbb
mov
push
in
pop
xchg
das
out
pop
and
mov
inc
xchg
loope
sbb
in
sbb
int
cmp
pop
xor
mov
inc
fst
ret
and
popf
pop
sti
test
lods
sbbb
pop
xor
mov
iret
js
lret
mov
xor
call
and
faddl
pop
popa
jo
xlat
je
rcrl
loopne
mov
cmp
jg
jg
test
mov
pop
add
mul
rorl
data16
sub
push
repz
clc
mov
add
pop
sbb
in
push
test
inc
sub
pop
cmp
mov
sbb
lock
jmp
lcall
xor
out
int
cmp
or
popa
loop
popf
movsb
push
out
inc
in
mov
mov
pushf
mov
mov
das
pop
out
or
push
add
push
out
out
xchg
fwait
mov
push
aad
mov
jge
shl
mov
rcrl
jo
sbb
aas
cwtl
leave
adc
push
aam
mov
imul
repz
mov
mov
mov
adc
faddl
cs
add
mov
mull
fst
notb
call
cmp
dec
ljmp
aad
sub
xor
pop
or
mov
ret
inc
add
sahf
fldt
pop
mov
aam
outsl
mov
dec
jne
inc
mov
roll
adc
inc
or
inc
mov
or
mov
cld
in
pop
cmp
in
adc
sub
xchg
and
loop
scas
mov
fcoms
dec
xchg
inc
inc
test
sbb
pop
mov
push
mov
dec
xchg
testb
dec
pop
pop
in
fistpl
xchg
pop
call
pop
cli
cmp
jne
inc
add
cs
scas
in
popa
arpl
add
jb
dec
jp
jb
mov
or
push
rorl
jns
aas
js
push
movsb
pusha
dec
cltd
ret
out
push
aas
mov
orl
dec
mov
jp
mov
imul
lahf
rcll
pop
cltd
jg
sub
lret
mov
loopne
or
push
outsb
sub
add
pop
jno
daa
out
shlb
data16
inc
adc
xor
aam
rcrl
push
repnz
mov
dec
gs
xlat
lds
outsb
jo
jle
and
cli
cmp
cmpsl
mov
and
ds
mov
notl
add
adc
mov
ret
pop
jne
sti
inc
xchg
push
inc
js
roll
jne
sbb
test
movsb
es
mov
push
dec
filds
dec
and
outsb
pop
dec
popf
ja
mov
xorl
mov
fcom
cs
roll
imul
push
addr16
ror
add
jns
popa
andl
xor
mov
imul
insl
jmp
cmpsb
adc
rorl
pushf
jge
mov
add
mov
and
call
ret
pop
xchg
sub
mov
sub
sub
movsl
or
fildl
pop
push
cmpb
lea
push
addr16
stos
xchg
jl
pop
cmc
repnz
or
cltd
scas
push
xchg
daa
das
jb
gs
xchg
add
push
mov
std
cli
adc
ss
dec
paddq
rcl
xchg
cmpsl
mov
aam
ret
sahf
inc
ds
faddl
jge
xchg
inc
xor
mov
xor
jecxz
int
movsl
add
je
adc
out
cld
adc
scas
inc
sub
jmp
daa
xor
mov
inc
pop
idivb
cwtl
push
mov
dec
mov
or
and
add
icebp
and
cmp
mov
cmpsl
cmp
pushf
rorl
sub
and
mov
xor
dec
cmp
out
jge
sub
xchg
in
xchg
mov
cmp
test
cmp
pop
bound
sub
and
mov
inc
sti
stc
out
addb
insl
sbb
stc
jno
cmpsb
fs
jmp
out
lret
andl
pop
lea
xorl
add
xor
popf
mov
xchg
push
mov
icebp
cmp
jbe
nop
pop
dec
xor
dec
or
mov
add
cmp
inc
in
jb
popf
sub
test
out
test
push
cmp
sbb
and
mov
adc
mov
leave
sbb
add
icebp
mov
or
cmp
fidivrl
sub
lods
aad
push
mov
rorb
mov
mov
jne
mov
in
sbbl
push
sub
mov
ss
adc
xchg
nop
jno
ljmp
and
pushf
js
adc
bound
sbb
in
gs
dec
loopne
or
cltd
cltd
insb
out
mov
jg
push
and
imul
into
jge
xchg
scas
repz
fistpll
push
aam
inc
push
pop
add
enter
insb
and
push
test
test
push
add
ljmp
xchg
pop
mov
movsl
rorb
xchg
je
and
cltd
lock
mov
cwtl
cli
insl
ss
negl
xchg
shl
inc
mov
push
imull
pop
cltd
cmp
jg
pop
lcall
inc
inc
dec
mov
or
dec
scas
jne
push
ja
mov
sbb
xchg
and
dec
sub
add
xlat
stos
mov
inc
insl
jge
xchg
sahf
pop
and
or
lret
dec
cs
sub
cmp
pop
sub
dec
data16
pop
xor
xor
lcall
jbe
cld
iret
inc
add
sbb
outsb
or
insl
cmp
push
imul
push
ds
push
pop
js
sar
loopne
lret
lret
push
xor
pop
cmp
clc
sub
dec
sbb
mov
pop
ret
nop
jp
mov
pop
add
sub
nop
and
xchg
cmc
ds
xchg
dec
xchg
fs
imull
sbb
stos
cli
push
add
lahf
imul
insl
xlat
repz
and
movsl
jp
lods
data16
pop
fisubl
enter
sbb
fimull
pushf
cs
mov
fwait
push
lcall
push
push
jns
push
cwtl
mov
rorl
mov
stc
idiv
pop
repz
and
add
je
push
imul
stos
dec
jge
and
mov
mov
pop
xchg
cmp
mov
lods
repz
dec
fistps
push
les
fsts
adc
mov
mov
loop
dec
clc
dec
ret
pop
mov
pop
and
fs
pop
adc
dec
imul
cwtl
adc
cmp
ja
push
xchg
out
pop
and
or
lods
xchg
test
and
outsl
mov
loopne
inc
ret
call
negb
sahf
dec
int3
orl
push
push
sub
dec
icebp
dec
push
inc
loope
leave
push
mov
sahf
pop
mov
xchg
jo,pn
cld
xlat
mov
popa
mov
and
jmp
pop
dec
xor
inc
dec
mov
clc
fldt
dec
aaa
push
fwait
loope
sub
jne
xor
and
or
nop
xlat
jo,pn
adc
lods
scas
xor
adc
mov
gs
shll
inc
mov
les
fcompl
out
cmc
lahf
and
add
sbb
insb
mov
mov
sti
push
lock
rol
ja
js
lock
and
test
adc
xor
fcmovnbe
mov
cmp
adc
cmpsb
mulb
and
das
imul
stc
movntps
xor
or
ljmp
mov
aad
xchg
push
enter
cwtl
loopne
dec
jecxz
or
adc
das
add
cmp
jne
sti
leave
sti
rcrl
cmpsl
sub
inc
xchg
cwtl
pop
jl
xor
jmp
lcall
out
xor
xchg
xchg
pop
pop
fwait
jecxz
cmp
dec
pusha
xor
sbb
cld
aam
pop
lret
aad
and
insl
xchg
fnstenv
sub
cli
cltd
jbe
aam
adc
adc
int
xchg
outsl
add
lcall
push
mov
jns
fwait
clc
add
arpl
inc
xchg
loop
dec
aas
scas
or
xchg
jg
lock
inc
push
movb
sbb
ss
mov
add
aas
jns
dec
rcrl
stos
mov
cld
push
ret
push
and
insl
mov
mov
test
add
adc
lahf
xchg
bound
xor
add
rol
mov
pop
jp
stos
pop
je
or
hlt
arpl
jecxz
mov
mov
sbb
add
je
lods
jecxz
pop
subl
addl
adc
lahf
iret
mov
into
add
fs
test
cwtl
dec
mov
adc
mov
inc
cmp
jne
mov
push
xor
xchg
push
or
lods
mov
xchg
jle
cmp
mov
cmp
ljmp
dec
repz
pop
out
clc
cs
sub
rolb
mov
sbb
xor
mov
jae
clc
fisttpl
lahf
js
imul
inc
mov
push
je
lret
out
xorb
push
mov
sbb
ror
fsubl
xchg
out
lds
xor
push
mov
push
sub
dec
mov
push
lcall
stc
and
mov
xchg
sub
cmpsb
hlt
and
push
dec
lahf
sti
xorb
outsb
loop
in
repnz
lock
or
iret
jg
jle
add
sbb
push
les
xchg
pop
ret
sbbb
sub
mov
dec
jae
sbb
cltd
cwtl
sbb
or
repz
enter
in
movsl
pop
out
fwait
pop
into
mov
pop
std
push
pop
jg
mov
cmp
mov
xchg
xchg
ss
push
stos
popf
add
mov
fwait
pop
mov
dec
sub
cwtl
divps
or
mov
adc
cld
lahf
lret
shlb
cs
mov
aad
sbb
mov
shrl
clc
test
faddl
or
mov
sti
shll
mov
cs
mov
jle
clc
mov
hlt
movsl
cmc
fldl
sahf
cld
test
in
jg
mov
pusha
out
mov
xor
sub
xchg
mov
xchg
push
mov
pop
dec
pop
adcb
xlat
lret
in
inc
add
imul
mov
adc
orb
sbb
adc
fisubs
bound
lahf
push
sbb
cmp
cwtl
test
pavgb
sub
xchg
call
push
cmp
or
testl
inc
imul
mov
push
pop
push
sub
xor
cld
pop
xor
int3
cmpsl
sbb
add
pop
lods
inc
iret
inc
cli
movsb
xor
mov
cld
mov
std
pop
mov
mov
sbb
cli
dec
in
push
mov
jmp
int3
nop
lds
adc
fstpt
adc
movups
mov
xchg
mov
xchg
xchg
jg
cmc
or
push
xor
push
rol
inc
out
popa
add
sub
test
out
dec
fbstp
and
pop
jg
bound
dec
ljmp
into
dec
inc
or
repnz
mov
jmp
test
inc
mov
sub
gs
jno
mov
adc
sbb
cld
add
iret
test
in
dec
pop
mov
push
mov
xor
sub
sarl
jo
cmc
dec
lret
mov
mov
xor
mov
jbe
div
inc
jl
mov
mov
int3
mov
jmp
mov
das
or
add
mov
or
cmp
movsl
xchg
fsubp
or
daa
add
xchg
pop
inc
xlat
mov
or
dec
loopne
sbb
bound
in
testl
sub
jg
insl
xchg
aaa
dec
cs
jo
pop
movsb
mov
dec
xchg
mov
sub
push
jmp
cmp
xchg
sub
add
fucomp
xchg
push
cmpsb
in
test
out
data16
jp
sbb
dec
dec
std
into
dec
cli
outsl
out
push
jge
xchg
aad
lret
and
cmp
nop
mov
orb
or
cmp
adc
in
pop
add
xor
cwtl
xchg
inc
outsb
rcrl
jp
int
pop
pop
and
cltd
mov
jmp
sub
in
aas
adc
into
ljmp
shr
or
scas
loopne
xchg
inc
xlat
notl
sbb
loope
mov
mov
out
imul
lds
xor
and
mov
test
push
jmp
decl
mov
cli
test
ljmp
jmp
push
faddp
sahf
mov
push
jbe
xchg
or
into
dec
pop
loope
jne
mov
and
inc
mov
cmp
ror
sbb
sub
cmp
mov
inc
mov
test
cli
push
lea
xchg
ljmp
rcll
mov
cmp
adc
mov
push
icebp
or
cmp
sub
cmp
in
or
pushf
lcall
test
dec
dec
popa
cs
inc
add
mov
jle
shl
loop
push
addr16
mov
push
in
jb
sub
xchg
mov
rcrb
hlt
xor
jp
pop
sub
push
fisubrs
rolb
push
fistl
fdivrs
icebp
aaa
dec
push
xchg
sub
xchg
shl
mov
pop
aam
mov
in
fwait
imul
arpl
in
push
or
ja
mull
sub
insl
mov
shrb
adc
and
insb
pop
mov
ljmp
cmp
stos
cli
fnsave
or
fcomps
mov
cwtl
testl
or
data16
cs
lret
fisttpll
sub
imul
stc
xchg
add
cld
fadds
xchg
shrl
mov
out
add
int
clc
in
fadds
cltd
gs
testb
test
pushl
mov
lods
push
xchg
xchg
mov
mov
adc
test
xor
dec
push
je
test
cmp
add
fwait
jmp
mov
test
sar
cltd
jp
push
out
js
cmp
movsl
adc
shr
pop
xchg
scas
mov
mov
jge
jg
out
lods
js
mov
pop
mov
cmpsl
sbb
xor
push
cmp
jg
add
enter
pop
into
mov
jne
into
inc
cmpsl
jmp
lcall
je
nop
add
adc
mov
push
sbb
xchg
incb
insb
das
mov
mov
frstor
loope
jbe
cmpsb
out
out
dec
mov
mov
mov
cmpsb
and
mov
xor
ja
repnz
pop
jle
rorl
sub
add
testl
mov
jle
mov
das
sahf
out
cmc
roll
sbb
andl
testl
sbb
or
and
enter
sbb
pop
lret
sbb
push
adc
push
inc
popf
jns
jno
mov
test
repnz
loop
inc
push
cmp
std
pop
testl
cmp
cmc
mov
insl
fsubrl
fwait
aas
fldcw
or
jmp
jmp
mov
movsl
pop
scas
test
out
pop
sbb
xchg
or
dec
hlt
mov
call
inc
adc
jl
int
iret
push
sar
outsl
mov
iret
leave
sub
rclb
jp
je
push
inc
mov
pusha
fwait
push
sbb
cli
test
xchg
inc
adc
das
jp
xchg
sbb
mov
ljmp
sbb
test
jp
cmp
pop
ss
xor
jnp
xor
mov
and
das
and
pop
sbb
aas
inc
call
sub
bound
add
cmp
cltd
and
in
jmp
xchg
or
xchg
lret
fdivl
adc
add
pop
add
dec
sub
in
repz
movsl
jl
shrl
mov
mov
lods
aad
roll
cmp
sbb
mov
pop
mov
rolb
adc
and
cmp
pop
xlat
aas
jno
inc
inc
inc
jl
push
mov
dec
out
cli
pop
mov
dec
mov
std
nop
push
sbb
testl
ja
jb
fdivs
add
sti
mov
test
fidivs
mov
in
jno
sbb
mov
cmp
or
mov
xor
cmp
jg
lahf
iret
push
xor
icebp
mov
add
cmpsl
lock
sub
aam
stc
adc
mov
cwtl
dec
shrd
adc
popa
cli
jecxz
and
push
add
shlb
xchg
in
mov
cwtl
dec
xchg
daa
push
aad
mov
fistpll
testb
hlt
jnp
mov
cwtl
ret
pop
addr16
std
mov
jle
xchg
sti
cmp
xor
and
int
jmp
jnp
lods
sbb
dec
pop
outsl
and
mov
and
sub
adc
rcrb
bound
test
int
push
sub
inc
or
loope
dec
enter
pushf
mov
dec
popf
repnz
ret
addb
sarb
xchg
xchg
icebp
fstp
fwait
jecxz
movsb
dec
inc
add
lea
sbb
adc
cmp
push
jecxz
add
addr16
mov
xor
mov
mov
mov
jnp
sbb
push
orb
shll
fists
xchg
push
flds
pop
push
stos
cmpsl
in
push
dec
lret
push
sti
out
popa
subb
fsubrp
lret
jo
mov
ja
push
sub
adc
fwait
pop
xor
adc
popf
sar
fistpl
mov
adc
outsb
push
mov
cmp
rclb
lret
adc
and
std
outsb
jae
add
xor
push
gs
aas
in
cmpsl
sbb
jbe
mov
dec
mov
sbb
xchg
pop
jg
mov
mov
mov
dec
mov
popa
jns
mov
push
int3
dec
adc
push
shr
mov
jnp
jnp
mov
inc
adc
or
sbb
shl
sarb
jge
cmpsb
xor
push
lea
sarl
scas
fsubp
fidivs
xor
lock
pushf
jae
and
ja
ljmp
test
jne
dec
mov
test
sub
aas
cmp
xor
mov
stos
int3
cmp
fldl2t
shll
jle
mov
cmp
rol
add
mov
movsb
dec
jl
sahf
and
pushf
out
scas
xor
loope
cwtl
loopne
leave
out
jnp
add
mulb
xlat
insb
and
xchg
icebp
cmp
push
ret
and
int
xchg
cmpsl
ss
outsl
gs
movl
shrb
mov
sbb
scas
cmp
adc
sbb
adc
jns
adc
inc
sbb
lahf
lock
xchg
imul
xchg
cmc
adc
sbb
and
cmp
aas
sbb
dec
shll
dec
jl
xchg
testl
mov
and
shrl
push
stc
adc
inc
ja
xchg
push
pop
mov
out
stos
outsb
sbb
xchg
pop
and
popa
cltd
les
mov
dec
add
inc
fsubl
pop
push
push
add
rcrl
and
inc
inc
dec
pop
aam
aad
aam
std
cli
mov
ja
outsl
daa
xchg
cld
ss
in
xor
stc
cmp
imul
mov
cmpsl
inc
gs
js
push
ja
je
mov
loopne
mov
out
dec
fs
ja
adc
dec
daa
fsubrl
mov
and
jno
add
pop
sbb
lods
repz
sub
pop
add
lret
daa
lea
pusha
decl
mov
popa
inc
sarl
sbb
in
or
jb
cmp
inc
cli
and
add
push
daa
or
test
lods
int3
pop
xor
jl
orb
adc
iret
adc
in
outsl
push
ljmp
mov
dec
aas
jg
sub
mov
fstps
dec
pop
pop
mov
out
add
push
scas
shrb
add
xor
sub
das
les
jnp
repnz
add
stos
shr
jb
ja
jae
fsubl
and
push
sub
inc
mov
xor
popa
mov
mov
leave
jmp
xor
push
push
xchg
iret
sti
or
or
pop
dec
sbb
std
lret
mov
inc
lahf
adc
stos
lods
ds
mov
cmp
mulb
adc
mov
mov
movsl
adc
addr16
adc
dec
aam
inc
pop
cmp
or
dec
sub
sbb
push
xchg
dec
inc
push
mov
mov
std
dec
hlt
push
fsubl
xlat
xchg
pop
or
mov
insb
pop
pop
mov
scas
aaa
inc
dec
cld
stc
andb
xchg
mov
cmp
insl
or
or
movsb
into
inc
xchg
mov
dec
fisttpll
or
bound
lds
lock
dec
inc
iret
stos
call
mov
mov
shr
jecxz
push
mov
xor
mov
mov
cld
push
xor
push
mov
test
lds
mov
adc
loop
xchg
sti
mov
out
sbb
adc
add
loopne
aad
cmp
xor
outsb
clc
push
pop
adc
fidivl
adc
sbb
mov
lahf
in
ficompl
les
dec
hlt
push
jmp
adc
mov
cld
popa
fisubrl
hlt
dec
sbb
ja
sahf
das
into
mov
push
dec
and
into
cwtl
cmc
fdivr
les
jbe
loop
rorl
push
jge
lahf
and
pop
cmp
imul
fcmove
gs
cli
cs
jns
or
fldcw
mov
jp
adc
xchg
xchg
outsb
cmp
lods
stos
xorl
cmp
mov
mov
cmp
push
mov
dec
jns
dec
cltd
pop
push
in
add
lods
shr
stos
xchg
pop
scas
imull
and
pop
lret
lods
or
pop
xor
sahf
outsl
mov
fwait
mov
loop
jecxz
xor
dec
js
loopne
dec
aaa
in
bnd
mov
out
push
xchg
mov
mov
sbb
ds
dec
jge
mov
aad
mov
enter
xchg
inc
sub
scas
adc
sbb
push
jle
sbb
mov
scas
loopne
cli
pop
shll
scas
pop
cwtl
dec
jmp
cli
mov
pop
push
adc
out
pop
insb
lock
inc
lret
push
jp
lea
adc
int
xchg
lea
aam
pop
jl
xchg
mov
adc
dec
and
inc
inc
data16
pushf
jno
repnz
push
test
mov
sub
push
inc
je
dec
mov
push
lds
xor
xchg
call
dec
stc
inc
mov
call
push
out
xchg
mov
nop
pop
nop
inc
or
out
int
test
add
ja
ja
lcall
popa
in
add
fs
shlb
nop
lret
lea
out
jno
lock
mov
cld
cli
mulb
jnp
adc
cmp
sub
pushf
pop
sub
int3
xchg
pushf
imul
inc
mov
push
in
mov
loope
add
push
stos
cmp
sub
xchg
out
divl
sbb
cmpsb
mov
jle
pop
cmpsb
scas
js
popa
sti
fcoms
fs
sub
xchg
fldcw
jmp
jp
ret
dec
in
sbb
mov
sub
inc
inc
cmp
mov
mov
push
idivb
cmpsl
pop
push
xlat
add
xlat
test
das
or
cmp
pop
jae
sbb
outsb
roll
and
imul
insb
adcl
cs
dec
or
mov
jb
int3
jg
adc
mov
and
push
sub
aad
jg
repz
ja
aad
push
and
xor
das
imul
jbe
inc
cmp
and
out
pop
test
mov
jno
bound
jecxz
xlat
ret
ss
ljmp
xor
push
test
pop
xor
jl
shrb
and
sti
je
mov
subl
sub
xchg
adc
push
inc
popa
data16
mov
rcrl
push
sbb
add
xchg
repz
adc
fs
flds
iret
jns
or
fimuls
inc
mov
mov
mov
sbb
mov
pop
jmp
ss
mov
test
xor
dec
test
mov
add
mov
cmpsb
push
dec
outsl
shl
jnp
mov
mov
repnz
pop
movsb
mov
mov
mov
aaa
enter
repz
idivl
fcmovbe
div
loope
je
out
into
mov
jae
inc
daa
fisubl
lret
jae
mov
and
nop
out
push
add
scas
mov
popf
aaa
sarb
xor
into
cmp
mov
xlat
in
int3
add
cmpsl
and
scas
cmp
sti
pusha
aaa
loop
mov
cli
out
xchg
inc
cltd
insl
and
pop
and
or
or
bnd
xchg
out
out
in
jecxz
jp
popfw
aas
lods
fisubrs
repnz
mov
or
outsl
jb
fmuls
ficoml
xlat
mov
loop
jp
scas
js
lret
fildll
cs
ljmp
dec
pop
test
mov
add
lea
cmp
stc
cs
push
sahf
xor
sub
mov
pop
cmp
cld
push
pop
sub
mov
nop
adc
sbb
ret
mov
adc
push
loope
rorb
cmc
insl
cltd
sub
shll
add
mov
inc
mov
pop
dec
push
std
outsb
lret
iret
sbb
and
jb
cs
xchg
lds
mov
adc
xchg
int3
adc
sub
sbb
ret
add
out
adc
adc
lea
cmpl
dec
pop
in
lds
mov
aas
or
lods
mov
dec
xchg
cmc
je
fcmovnb
cmpsl
xchg
xchg
push
test
inc
push
and
jp
repz
sbb
cmpsl
lea
leave
inc
push
insb
and
inc
pop
mov
and
adc
imul
and
add
sub
test
movsl
lea
stos
add
mov
fldenv
sahf
jp
aam
cli
add
into
fcomps
gs
test
jle
push
in
mov
std
push
add
cld
adc
je
jns
es
xor
mov
mov
adc
pop
lea
imul
ficoms
call
test
cs
mov
mov
aas
int
push
fldt
mov
adc
or
rcrb
mov
and
in
aad
lahf
mov
and
sbb
jecxz
daa
add
and
arpl
mov
cmp
xor
std
js
cmpsl
cs
aad
fnsave
repz
data16
adc
pushf
cmp
mov
fistps
push
leave
or
pusha
inc
and
data16
jl
mov
xchg
mov
aam
adc
fnstcw
mov
sub
aaa
iret
test
testl
clc
fisubl
aad
out
sub
cmp
xor
jp
push
cmp
push
inc
test
dec
movsb
xor
push
xchg
pusha
sub
lret
daa
data16
data16
aas
xchg
pop
add
loope
mulb
jp
imul
inc
mov
mov
in
movsl
aaa
movsb
jno
cltd
jecxz
popa
cmp
xchg
std
adc
cmc
ja
mov
enter
movsb
jne
mov
or
cmp
xor
push
js
dec
mov
insb
nop
push
dec
add
das
imul
test
xor
movsl
jns
shrb
and
xor
mov
jmp
dec
int3
sahf
mov
daa
sub
pop
and
adc
dec
push
dec
iret
int3
andb
std
lret
or
mov
jle
jae
dec
add
mov
loop
mov
mov
je
je
enter
repz
dec
jl
or
in
dec
jns
insb
jg
js
movsb
jecxz
and
cmp
inc
fisubs
mov
rorl
dec
xlat
fistpll
or
dec
fnstsw
jmp
jge
mov
out
es
pusha
adc
pop
mov
jmp
or
lock
inc
sub
lret
out
insb
add
push
shl
mov
dec
iret
and
fs
jmp
ret
xor
mov
mul
leave
mov
dec
mov
sbb
and
out
pop
jns
jns
dec
aad
repz
fcmovne
jno
out
rcl
mov
sbbb
mov
fbstp
pop
jl
shlb
les
je
pop
sarl
sbb
mov
cmp
pop
push
sbb
mov
and
mov
adc
rcl
cmp
push
sub
push
mov
stos
fwait
sarl
dec
les
push
icebp
inc
pop
xor
fsubp
test
inc
fcomps
movsb
jmp
fidivs
jg
cmp
adc
sbb
ret
xchg
mov
ds
subb
adc
cmp
movsb
pop
or
mov
jbe
pop
nop
repnz
ss
or
fnstcw
testb
mov
dec
push
hlt
pop
push
and
pop
out
sbb
seto
roll
stos
push
imul
into
sbb
test
and
jecxz
int3
arpl
or
adc
cli
idivl
xor
dec
push
js
in
in
xor
dec
xor
mov
sbb
inc
loope
test
jne
mov
aas
outsl
sub
pop
dec
inc
dec
sbb
lret
pop
call
adc
js
or
mov
pushf
in
rcl
xor
outsl
jae
paddusw
or
jp
mov
lds
outsb
int3
xchg
push
mov
js
aad
shll
mov
xlat
jp
pop
sbb
lret
decb
xchg
sbb
repnz
test
jmp
out
jbe
std
fimull
xor
es
stos
pushf
mov
pop
xor
xchg
mov
in
outsl
lds
mov
loope
jge
xchg
fsts
scas
cmpsl
loop
sub
outsl
xchg
in
sbb
xchg
mov
add
ss
shlb
jle
std
ss
sub
daa
popa
add
jp,pn
mov
cwtl
jns
push
arpl
push
mov
jbe
fucom
push
pop
and
or
sbb
in
gs
neg
ret
loope
popf
push
pushf
and
and
and
mov
movsb
or
js
mov
scas
cmp
pop
sbb
incl
adc
inc
loopne
pop
jecxz
mov
out
inc
out
push
or
cs
std
or
xor
mov
xchg
adc
lret
dec
mov
pop
test
inc
out
scas
repnz
sbb
xor
push
aam
movsb
scas
pusha
mov
testl
in
push
fwait
rorb
cmpb
lea
lock
mov
outsl
mov
mov
inc
mov
into
cmp
lds
pop
mov
adc
mov
mov
in
imull
scas
cs
ret
sbb
icebp
jo
lods
shll
mov
sub
xlat
mov
daa
mov
out
sbb
pop
imul
dec
push
mov
stos
fwait
into
pop
jp
jecxz
gs
mov
dec
xor
xor
sbb
pop
xchg
xchg
pushf
xor
jl,pn
neg
repnz
mov
mov
test
fs
ja
sbb
cwtl
add
dec
and
jecxz
add
shll
clc
bound
ljmp
pop
and
popa
xor
dec
lods
xlat
sub
pop
mov
cmp
icebp
pop
adc
lods
mov
jbe
jns
add
inc
mov
mov
out
push
inc
adc
jle
xor
clc
jno
adc
aas
mov
cmp
jns
call
jns
mov
sub
lea
mov
pop
ficoms
mov
mulb
call
cmp
inc
mov
int
adc
ffree
xchg
pop
jl
loop
mov
repz
cmp
pop
stos
push
js
imul
mov
arpl
dec
jae
test
fiaddl
xchg
xchg
push
js
dec
pop
sbb
lret
lds
clc
mov
in
xchg
push
iret
cmpsb
xor
jno
and
cs
mov
dec
int
xor
or
cmpsb
call
jo
mov
scas
inc
scas
push
add
ret
ss
xchg
scas
mov
mov
add
xor
imul
adc
imul
roll
xor
push
sub
cmpsl
js
lds
nop
add
or
jno
jecxz
mov
cmp
sub
and
lcall
pusha
dec
std
popa
aas
mulw
inc
mov
aad
jnp
lret
fwait
mov
cmpsl
aam
dec
jecxz
fnsave
pop
pop
xchg
in
jmp
sbb
outsl
inc
jp
aaa
xor
push
and
jge
mov
jge
push
add
xchg
gs
in
xchg
fs
iret
ds
cmp
bound
in
dec
fwait
cmp
cmpb
xor
ljmp
jns
pop
ret
and
xor
jg
xchg
inc
in
push
pop
repnz
outsl
sub
rcll
inc
test
push
dec
fidivs
vmwrite
sbb
daa
add
out
aas
test
ljmp
jle
pop
xlat
lods
pop
int
dec
push
adc
cld
and
cltd
mov
xor
jae
out
adc
fwait
sbb
mov
negl
cmp
xor
fcomi
shr
xchg
testl
ret
pushf
or
and
cmp
addr16
inc
test
ljmp
nop
mov
int3
gs
or
ret
scas
jae
test
xchg
mov
dec
mov
mov
pusha
ljmp
enter
jmpw
push
test
icebp
inc
or
or
push
in
mov
rcll
pop
push
pop
iret
and
adc
pop
mov
lcall
mov
and
mov
inc
mov
shlb
ret
fsts
push
cmpsl
push
cwtl
in
aad
das
push
or
aaa
lods
jb
ret
inc
mov
and
or
mov
mov
orb
adc
sarl
cmp
jl
or
sbb
lcall
repz
dec
les
inc
xor
dec
dec
in
xchg
dec
cmp
jp
cmpsb
sub
or
adc
inc
cmp
arpl
xor
jmp
insb
icebp
adc
dec
mov
gs
pop
into
xor
inc
cmpsb
icebp
jecxz
div
dec
out
outsl
adc
xchg
cmpsl
push
inc
pop
rcll
xchg
int3
ret
push
or
jo
and
test
xchg
test
push
push
jne
mov
ret
jg
pop
fidivrl
inc
cmp
icebp
outsb
lcall
xchg
loop
lea
test
pusha
xchg
lret
loopne
popa
xlat
movsl
jp
dec
je
out
jmp
xchg
jge
aaa
aas
rcll
sub
cltd
add
ds
mov
lods
add
popf
lret
call
cmpsl
mov
stos
sbb
sbb
xor
mov
out
adc
pop
std
cltd
fists
sbb
ds
cmpsl
xchg
lock
ljmp
es
xor
adc
js
jg
fistps
loop
adc
outsb
mov
xchg
mov
sqrtps
data16
cmpsl
insl
fidivs
enter
into
jmp
ret
cmp
test
stos
sahf
push
das
xor
jle
sub
cltd
lea
out
dec
and
dec
mov
pop
dec
mov
faddl
in
out
mov
adc
adc
out
and
sahf
dec
adc
adc
push
jl
and
push
aas
stos
jno
mov
jne
mov
xor
jge
leave
or
roll
pop
inc
push
mov
add
mov
test
mov
data16
xchg
lds
mov
xchg
sub
dec
fadd
movsl
je
inc
jp
mov
ljmp
cltd
sbb
aaa
mov
sub
push
mov
fsincos
mov
push
adc
xor
cli
push
shll
sub
sti
gs
clc
setnp
mov
rorl
cmp
cld
scas
imul
or
or
push
jnp
pop
mov
cmc
or
outsb
xchg
jns
out
fs
xchg
mov
enter
js
jge
pop
add
dec
sub
inc
dec
xor
pop
lods
xchg
jl,pn
stos
add
out
mov
sbb
adc
or
cmp
xor
push
pop
divb
and
lods
shll
insb
xor
jo
and
movsl
sbb
aam
fs
mov
pop
enter
mov
sbb
ret
cmc
mov
or
sub
cli
repnz
cmpsb
out
repz
add
mov
lahf
or
cmp
lock
jns
xchg
add
dec
in
adcb
and
dec
pop
cli
mov
fs
cwtl
jnp
mov
dec
or
mov
in
push
out
fcomp
fiaddl
popa
in
int3
test
lods
test
sahf
xor
inc
and
rcrl
push
or
mov
adc
icebp
scas
push
mov
pop
fs
pop
or
jp
mov
lret
jle
frstor
jmp
ret
push
push
push
jp
rolb
pop
adc
outsl
fisubs
addl
aam
and
dec
int
pop
pop
jno
stc
mov
jns
ret
stc
xor
mov
sarl
fnstcw
std
push
in
jge
sub
js
outsl
hlt
ret
rclb
mov
sub
loopne
stos
or
or
mov
popf
lcall
shlb
jbe
movsl
popf
sub
out
xor
mov
push
inc
sub
xchg
pop
lret
jle
and
sbb
cmpsb
lret
jg
ljmp
sbb
cltd
xor
in
insb
jg
fs
pop
data16
test
ss
call
gs
mov
shrb
pop
dec
inc
mov
xor
xchg
mov
insb
popf
clc
icebp
scas
shr
sarl
push
fwait
jl
push
incl
jb,pn
ljmp
movsb
pop
test
inc
mov
dec
ja
xchg
and
loopne
pop
and
mov
inc
mov
in
jno
stos
pop
test
adc
inc
addb
adc
mov
test
cmpsl
in
mov
sti
inc
mov
loop
add
flds
adc
push
pusha
dec
aad
hlt
sbb
adc
push
insl
adc
inc
jne
out
pop
std
jmp
jl
popf
and
push
mov
mov
jmp
test
xchg
sub
xchg
xchg
add
adc
mov
outsl
ljmp
add
or
es
push
add
push
jmp
es
jmp
std
enter
xor
pop
ds
popf
aam
jb
stos
mov
cmp
insl
inc
push
and
push
push
out
jb
lea
lahf
mov
and
ljmp
push
or
push
sti
add
ret
push
sub
pop
jae
repnz
mov
or
movsl
jl
cmp
xchg
fs
push
or
aaa
xchg
rorl
cmp
pop
sub
push
mov
lcall
aam
mov
test
jo
cltd
lahf
outsl
mov
fnstcw
add
mov
sub
ret
into
bound
sbb
jl
add
mov
test
ja
and
xchg
or
or
sub
pop
enter
jle
shrb
ja
jne
popa
or
scas
les
push
stos
cltd
inc
adc
addr16
add
enter
xchg
cmp
mov
or
cmovo
push
mov
push
imulb
in
adc
divb
lock
fsubrl
repnz
cmc
movsl
outsb
in
push
les
ljmp
pop
mov
mov
dec
or
mov
jb
push
idiv
in
jl,pn
and
aaa
shlb
mov
jo
imul
addr16
daa
fs
jmp
aaa
adc
test
andb
lret
pop
mov
mov
test
je
ds
add
pushf
pop
dec
testl
mov
jp
cmp
cmpl
mov
in
cmpsb
test
push
add
adc
mov
int3
bound
push
ljmp
loop
sbb
cltd
inc
or
out
outsb
dec
jnp
lahf
imul
pushf
out
add
andb
jge
dec
mov
dec
xor
and
int
mov
sbb
or
add
jbe
or
mov
sub
loop
adc
sub
jecxz
lret
push
call
inc
outsl
stc
pop
shll
imul
push
rolb
fs
repz
cwtl
fwait
inc
scas
nop
pop
dec
pop
jo
aas
inc
and
icebp
cltd
test
mov
movsb
push
in
addr16
pop
aas
mov
sbb
add
jbe
jp
pop
cmc
outsl
cmp
imul
dec
fmull
mov
and
call
loop
push
sub
fiaddl
movsb
jmp
xlat
dec
aas
push
out
ljmp
test
inc
push
jecxz
dec
push
jbe
daa
push
xchg
pop
mov
fdivl
insb
jecxz
sub
jl
push
ds
movsl
xchg
sub
rclb
int3
dec
mov
pop
push
addb
add
sub
insl
popa
out
ret
inc
ret
fidivrl
mov
sub
repz
iret
ret
xor
fadds
pmaddwd
or
ret
cmc
stc
jnp
fucomip
or
inc
sahf
es
xchg
outsl
negl
jne
jp
jo
arpl
or
adc
les
inc
xor
popa
mov
add
sbb
ret
pop
jl
add
add
addb
xor
imul
fldt
mov
mov
push
add
or
lret
push
mov
pop
sahf
sub
ja
sahf
call
jnp
data16
pop
and
add
jge
lea
or
jne
mov
insb
jmp
xlat
pop
cmp
pavgb
adcl
and
pop
imul
fcompl
jl
xor
sbb
jl
fwait
cltd
enter
int
xlat
test
xchg
out
out
enter
ja
jne
push
lods
mov
dec
jle
adc
or
fstps
xchg
mov
shll
daa
idiv
rorl
dec
fnstsw
fstpl
mov
adc
sub
or
push
call
stc
mov
orb
leave
scas
enter
lea
jl
dec
mov
xlat
adcl
xchg
ljmp
mov
popa
popa
jl
or
pop
call
sub
lcall
test
lock
cmpsl
jbe
xchg
divb
add
jmp
xlat
enter
shrl
adc
cmpsb
les
xorb
mov
cmc
mov
out
dec
mov
adc
out
and
sub
dec
arpl
xor
jo
aam
mov
rcll
xchg
sarl
adc
mov
jns
fnstenv
out
pusha
sbb
mov
scas
movsl
sbb
out
fimull
mov
hlt
or
lds
and
movsl
add
aas
cmp
xchg
or
add
cmp
xchg
fmul
jns
inc
push
sub
es
arpl
lcall
repz
dec
enter
movsl
mov
dec
pop
out
mov
pop
ror
repz
rol
cmp
lret
inc
lcall
dec
cmp
push
mov
mov
pop
push
orb
repnz
mov
lock
ss
rep
or
jmp
mov
fildl
enter
mov
adc
xor
movsb
lahf
pusha
xor
inc
add
into
loop
xor
imul
push
rorb
js
mov
cli
clc
ljmp
stos
push
jecxz
mov
add
inc
and
sub
or
cmp
repz
cmc
icebp
aaa
or
insl
xchg
add
lret
adc
jnp
xchg
lock
jae
sub
addr16
stc
mov
or
push
push
mov
shll
clc
dec
sahf
fisttpl
sti
aas
inc
arpl
jbe
mov
popf
scas
hlt
js
mov
xchg
clc
sbb
push
mov
insb
cmpsl
add
rolb
jmp
divl
mov
adc
lock
push
ret
hlt
out
push
jge
int3
mov
inc
jmp
lods
dec
rcl
push
sbb
jg
dec
mov
sahf
xchg
xor
inc
aam
arpl
mov
and
inc
sub
mov
xchg
push
fldl
inc
sbb
aaa
sub
mov
push
movsl
sbb
das
xor
das
mov
mov
iret
jo
xor
cs
push
sahf
nop
xchg
pusha
xchg
in
adc
movsb
xor
ja
add
sarl
push
xor
inc
pop
sub
fdivs
gs
sbb
jl
dec
xor
jge
ret
pop
pop
aas
daa
adc
outsb
sbb
jns
fwait
jg
addr16
jge
mov
add
or
mov
add
psubw
outsl
in
jg
imul
add
js
into
jne
out
dec
mov
or
xchg
in
xchg
leave
xchg
pop
ja
mov
pop
lcall
rcrl
lcall
imul
or
sub
hlt
xchg
cmp
stc
jle
jb
inc
and
shlb
ja
add
aaa
std
cmp
pop
push
ss
dec
stc
sbb
pop
push
aad
add
sbb
ret
xor
xchg
mov
roll
clc
scas
enter
dec
imul
mov
sbb
sahf
fpatan
add
mov
cmp
inc
inc
stos
xchg
mov
rclb
inc
scas
out
in
inc
dec
rolb
dec
jmp
adcb
jbe
lock
dec
fwait
ja
dec
insb
ret
out
lret
je
stos
mov
cwtl
adc
stc
aaa
insl
mulb
les
pop
cmp
inc
out
push
lods
jbe
lds
inc
push
sbb
push
mov
jne
jb
fdivrs
dec
xlat
scas
sbb
orl
inc
sbb
pusha
pop
sbb
inc
or
dec
fisttpl
fcmove
xor
bound
lahf
bound
inc
iret
movsb
out
sbb
push
sbb
sbb
mov
pop
dec
jge
xchg
pop
ret
call
clc
xrelease
mov
mov
lods
fsubrs
pop
jb
vcvtsd2ss
and
sbb
mov
add
nop
xchg
mov
dec
push
int
scas
xchg
mov
leave
dec
outsb
inc
lahf
lahf
inc
orb
into
inc
mov
cmp
cmp
ret
pop
aaa
ljmp
insb
inc
xchg
xor
jne
dec
xor
fs
ret
mov
add
adc
stc
jae
ljmp
mov
es
jbe
scas
aad
sub
push
xor
mov
lret
mov
faddl
pop
sub
and
stos
jmp
bound
push
sbb
xlat
sti
sub
cmpsb
inc
clc
fcompl
out
dec
rcrl
jg
or
push
divb
aas
je
std
leave
ds
cld
test
jge
maskmovq
idivl
mov
std
or
movsb
lods
inc
jecxz
fs
bound
cmp
daa
scas
lret
fisttps
pop
das
push
or
jg
cltd
cmp
aam
das
enter
insl
xor
push
push
cmp
or
jmp
mov
add
mov
mov
pop
xchg
inc
and
push
sbbl
dec
adc
adc
mov
dec
das
mov
sbb
xlat
arpl
sbb
stos
lret
mov
sub
in
push
sbbl
fsub
addb
fcmovnu
inc
push
cmp
mov
in
pop
inc
in
xor
jmp
popw
jmp
pop
loope
clc
fwait
add
pop
cld
inc
mov
jb
cli
lods
mov
lea
xchg
add
mov
rcrb
jnp
outsl
pop
ficoms
xlat
sub
push
fldt
cmc
mov
xor
fidivrl
pop
push
jb
pop
bound
jl
gs
es
mov
mov
mov
cmpb
js,pn
jl
addb
mov
mov
shl
and
jnp
rclb
adcl
cltd
add
dec
out
sub
jmp
mov
loopne
mov
or
ss
out
into
rorl
xor
stos
mov
jmp
lret
cmp
push
push
or
sub
mov
sahf
mov
mov
inc
pop
int3
push
jl
lea
mov
sub
js
fnstsw
pop
insl
leave
test
aas
cmp
and
add
jp
shl
adc
mov
movsl
mov
sbb
in
jg
mov
hlt
sbb
pop
adc
xchg
nop
jmp
or
inc
push
lret
xchg
push
cs
push
jnp
cltd
jns
jecxz
jne
in
inc
scas
jecxz
jecxz
jp
stos
sub
mov
sbb
xor
dec
daa
sub
mov
iret
cmp
sysret
push
pop
or
test
jnp
mov
outsl
repz
cmpsl
or
into
xor
les
push
icebp
stc
je
out
sahf
cmc
cmp
jae
jno
and
lods
pop
arpl
xchg
jg
push
xchg
je
je
ljmp
push
and
sbb
hlt
fsubs
add
cs
pop
ja
xor
add
mov
fildll
push
or
pop
nop
mov
shll
sbb
mov
jno
jle
add
push
pusha
xor
addr16
sbb
push
and
jns
mov
push
mov
add
arpl
outsb
xor
sub
lods
cli
push
mov
mov
inc
xchg
gs
lret
mov
pop
mov
adc
xchg
add
fmull
mov
inc
cmp
jo
stc
sbb
add
pop
jbe
mov
xchg
mov
mov
mov
jp
fs
xor
xor
and
movsl
fmull
out
gs
nop
mov
stc
andl
loop
inc
test
test
lcall
shll
inc
fwait
mov
mov
jmp
ja
divl
call
jecxz
xor
and
stos
or
incl
mov
cmp
stc
clc
mov
gs
scas
movsl
inc
jl
and
sbb
sbb
sbb
push
in
js
cmc
dec
xor
mov
out
xchg
dec
xor
jge
mov
dec
popa
and
cmp
ss
ret
wrmsr
enter
or
jne
loope
and
int
fucomp
enter
cmpsl
sbb
push
xlat
lock
inc
fistps
fadd
sub
mov
xor
orb
les
jl
int
cmp
lods
xchg
imul
sub
fcmovnu
sub
dec
sbb
add
push
mov
orb
pop
mov
ss
sar
in
jle
add
mov
sub
inc
imul
mov
outsl
or
cmp
mov
arpl
cmpb
jl
inc
push
jl
aas
mov
inc
sub
ss
nop
in
sarl
outsl
xlat
xchg
popa
push
jp
cwtl
js
or
scas
adc
inc
pop
pop
cmc
nop
and
repz
cmp
or
jb
add
dec
jno
adc
mov
inc
xor
mull
lcall
dec
xor
jb
sub
cmp
lcall
inc
xchg
add
sub
inc
push
fnstenv
push
add
fnstsw
mov
popaw
das
push
sbb
xchg
mov
call
mov
jae
push
push
adc
out
outsb
jmp
out
or
and
jb
jae
lcall
cmp
mov
push
xchg
fwait
orl
cmpsl
inc
push
pop
in
ljmp
sbb
add
lock
mov
dec
call
fists
and
inc
jo
jecxz
xchg
push
imul
adc
jnp
rol
aas
adc
cmp
ret
or
pop
imul
xor
jno
inc
mov
lret
rcl
or
pop
cmpsl
jmp
and
lock
cmp
dec
mov
fistl
fxch
psubsw
mov
cmp
fiadds
xor
push
shlb
mov
cmp
ds
shll
dec
mov
jg
xchg
cmp
add
imul
and
out
in
test
mov
dec
dec
mov
mov
cmpsb
mov
dec
cwtl
popl
mov
or
movsl
xor
mov
rclb
arpl
inc
adc
aaa
leave
push
push
in
es
mov
or
imull
out
mov
mov
mov
out
test
clc
shl
ljmp
xlat
sub
inc
pop
dec
push
xchg
ss
mov
orl
jnp
adc
or
sarb
movsb
outsb
jno
cmp
xor
inc
xchg
sarl
mov
fists
outsb
scas
aam
cmp
stos
jno
push
aas
movsb
adc
orl
xor
dec
sub
lock
loopne
imull
mov
xchg
adc
and
adc
add
cmpsl
lcall
push
sbb
and
jp
enter
xorb
adc
andb
cmp
ds
cmp
dec
jae
fwait
jle
scas
jle
bound
jns
cs
je
mov
mov
add
mov
rorb
mov
xor
ret
xor
bound
stos
adc
cmc
inc
adc
enter
push
jecxz
xor
ja
fwait
mov
dec
cmpb
lahf
or
adc
out
les
add
pop
xor
loope
cltd
int3
dec
cmp
add
add
inc
ret
cmp
jmp
aas
adc
sbb
insb
insl
adc
mov
in
lods
add
cltd
gs
das
fdivrs
in
jo
inc
stos
pop
inc
fs
and
pop
cwtl
add
mov
fstpl
lahf
mov
and
jl
xchg
fdiv
cltd
add
insl
out
or
sbb
call
cmc
jb
jnp
icebp
or
push
cmpsb
jmp
jo
inc
fadd
pusha
ds
out
xchg
arpl
xor
push
add
pusha
aas
inc
rorl
std
xchg
ret
enter
into
adc
and
fwait
rcl
std
int
lret
out
sahf
xchg
mov
jl
test
arpl
jp
in
ficoms
repz
pop
pushf
jb
daa
sarl
jb
xlat
sbb
mov
cmc
enter
xor
in
xlat
and
pop
xchg
dec
cmp
add
push
xchg
xchg
xor
iret
or
add
and
je
ds
scas
dec
sbb
pusha
jo
daa
out
inc
sub
ds
mov
bound
mov
lods
mov
dec
into
cmpb
gs
inc
lods
xlat
push
out
sbb
loop
leave
aaa
push
leave
jp
or
shrl
or
xchg
out
xchg
mov
arpl
cmp
pop
push
inc
sub
rol
push
addr16
hlt
mov
in
cmpsl
add
dec
xchg
subb
dec
mov
jl
ds
adc
pop
pop
sbb
cmp
shrl
and
mov
pop
dec
addb
push
mov
xchg
sbb
stos
cmpsb
loopne
pusha
cmc
xor
cmpsl
sbb
subb
sub
je
cmp
inc
lret
mov
xor
jle
push
mov
mov
stos
adc
test
mov
stos
jb
loopne
std
mov
adc
test
out
push
push
cmp
push
outsl
push
dec
mov
dec
push
xchg
arpl
cld
inc
add
pop
mov
fisttpl
xor
push
cmc
sub
push
mov
insb
mov
gs
fldcw
cmp
repnz
jmp
push
add
pop
xor
cmc
xor
int3
inc
addr16
out
cmp
cmp
movsl
mov
cmp
test
jno
xor
sbb
notl
mov
mov
sarl
mov
xor
jae
aaa
xchg
mov
xchg
ss
ja
bnd
movsl
int3
add
push
cli
out
enter
outsl
mov
sbb
orl
cltd
outsb
mov
xor
mov
hlt
pslld
xor
sbb
loope
adc
test
xor
sub
push
divb
jb
pop
into
jnp
in
sub
ja
in
scas
or
jno
cmp
inc
sti
jbe
pop
inc
sbb
pop
dec
pop
lahf
mov
add
shll
ja
dec
insl
xor
xchg
jmp
mov
sarb
mov
xchg
and
push
lea
es
or
sub
xchg
xchg
in
and
jbe
sub
aaa
lds
cld
jmp
dec
mov
jp
cmp
push
out
sub
adc
or
pusha
into
cmpsl
into
dec
rcrl
icebp
fs
mov
popa
xlat
xchg
jnp
js
ljmp
shl
xor
incl
push
add
incb
das
cmc
test
jg
iret
mov
xchg
popa
aam
xor
pushf
data16
mov
mull
or
rcpps
rclb
test
pop
adc
aas
ja
repz
mov
cmp
movsb
xor
fisubl
ds
sbb
lcall
inc
outsb
mov
mov
xor
orb
std
mov
out
cltd
inc
divb
xor
mov
lods
mov
sbb
ret
push
pop
aaa
jae
jge
and
lods
js
xchg
add
pop
in
outsb
repnz
mov
and
or
shll
xchg
adc
mov
clc
pop
or
loope
pop
dec
cmpsb
inc
scas
push
dec
push
mov
pusha
mov
and
ficoml
and
in
rorb
push
jle
mov
in
sub
and
adc
shl
imul
inc
pop
aaa
daa
inc
cmp
aaa
dec
fstps
cmp
add
cmpsb
add
inc
cmpsb
mov
mov
fwait
jge
imul
push
jnp
loopne
xchg
in
in
inc
xchg
in
dec
inc
jns
adc
js
ret
or
push
or
cmc
cwtl
aam
pop
inc
pop
inc
xor
cmp
inc
nop
xlat
and
test
dec
xchg
faddl
sbbb
mov
scas
arpl
inc
dec
pop
fdivs
jbe
int
and
mov
push
mov
fildll
dec
pushf
or
stc
push
mov
dec
out
mov
cs
fstpt
sub
repz
cmpsb
sbb
cld
jecxz
scas
leave
sub
lods
outsl
cmp
sub
lods
lds
cmp
push
inc
add
cltd
in
xor
mov
popa
jecxz
test
push
call
lds
int3
mov
mov
ljmp
jecxz
test
cltd
mov
adc
push
adc
push
mov
jb
mov
and
icebp
rcll
pop
rorl
sub
icebp
test
xor
cmpsl
xchg
xchg
pop
xor
adc
sub
aas
jecxz
or
or
enter
das
xor
push
hlt
lahf
dec
psrlq
into
and
lahf
xchg
push
nop
mov
sub
xchg
add
pushf
test
sub
cmpsb
popf
addr16
pop
xlat
add
inc
sub
sahf
or
push
mov
xor
sti
mov
inc
faddp
dec
decl
mov
push
stos
daa
add
ljmp
push
nop
inc
das
and
js
dec
sbb
xchg
idivb
pop
cmp
out
scas
int3
scas
sbb
cmpsl
repnz
rclb
and
mov
sbb
sub
mull
es
push
dec
mov
fwait
dec
gs
xchg
ja
dec
outsl
xor
xchg
in
das
adc
adc
movq
ret
add
shrb
dec
xchg
int3
push
inc
cli
jne
imul
xor
dec
insl
movb
sbb
sbb
popa
shll
fimull
add
out
mov
ljmp
add
insl
cmpsl
mov
mov
or
xor
pusha
push
cld
pop
cmp
aad
cltd
mov
inc
and
mov
pop
sbb
stos
xchg
pop
jne
adc
mov
add
leave
ret
push
mov
jmp
adc
jecxz
addb
aas
mov
xor
leave
fistps
cmpsb
clc
out
lock
int3
sbb
mov
mov
sarl
test
cmp
aam
mov
mov
shll
popa
or
es
add
pop
jle
adc
jecxz
popf
push
sbb
mov
fnstsw
iret
scas
fsubrs
pop
cli
cmp
test
aas
dec
pushf
iret
dec
dec
daa
dec
push
lret
and
add
cs
jo
xchg
mov
add
sub
in
pop
mov
and
in
xchg
int
jmp
xchg
cwtl
xor
jg
jbe
in
adc
mov
mov
fistl
dec
ljmp
fwait
cmpsl
in
sbb
mov
fcomps
sub
test
add
ficoml
jle
add
int
divps
and
bound
repnz
fstpl
xor
sbb
mov
sar
das
in
ljmp
or
outsb
sub
jg
das
add
sbb
rorl
in
push
xor
cmc
or
sarb
movsb
ss
aaa
into
icebp
lods
mov
je
daa
pusha
xchg
shlb
in
loopne
push
and
ss
push
cltd
mov
scas
mov
sbb
jbe
out
push
dec
inc
stos
bound
lea
shll
cmp
jmp
jmp
and
mov
std
push
test
jmp
push
sbb
fsubl
mov
sbb
and
pop
inc
fdivr
pop
pop
mov
adc
push
ficompl
sbb
mov
loopne
jo
rep
outsb
or
add
andl
mov
pop
mov
daa
sbb
jne
and
xchg
or
lods
push
fistl
cltd
out
cs
aam
xchg
sbb
in
popf
mov
aam
lcall
mov
sub
push
xchg
leave
pushf
in
iret
mov
push
xor
mov
sahf
push
std
dec
gs
clc
sub
push
add
cmovae
push
fucomip
out
and
aam
or
sub
outsb
or
pop
imul
inc
sub
or
fs
xchg
dec
subb
pop
inc
fcmovbe
ror
mov
popa
repz
pop
adc
js
mov
inc
add
and
or
fistpl
push
add
mov
jo
imul
cmp
cmp
dec
push
cli
loopne
push
inc
xorb
mov
xor
pop
xchg
fcomps
in
xor
jnp
cmp
scas
xchg
fstpl
dec
or
test
adc
add
pop
or
xchg
mov
pop
cli
jns
sbb
sti
int
ret
add
psubd
push
insl
scas
jne
xchg
pop
add
out
pop
mov
ss
mov
add
sub
stc
sub
sbb
jmp
push
mov
idivl
shr
inc
adc
inc
sti
adc
fstpl
gs
sarl
xor
sti
fdivrl
in
enter
sbbl
sbb
icebp
inc
mov
push
negb
mov
in
xchg
in
es
jnp,pn
sti
and
inc
aaa
xorl
xchg
bound
insb
out
loopne
jge
aam
aaa
mov
outsl
push
test
adc
adc
rdtsc
movsb
mov
ds
lahf
imul
mov
push
add
les
test
movsb
out
out
cli
cmp
xchg
sbb
fbstp
mov
sbb
add
sbb
mov
and
push
inc
std
enter
pop
sbb
sahf
cs
xor
sbb
shlb
test
and
mov
pushf
idivl
in
lret
cmp
movsl
jge
cmpsl
mov
aas
outsl
add
or
cmpsb
jnp
mov
xor
cmpsl
pop
sub
int
pop
pop
dec
popa
push
adc
test
jne
lret
sar
mov
xlat
pop
insl
dec
sub
lock
mov
or
repnz
scas
imul
mov
adc
or
xchg
ljmp
sbbl
add
mov
cmp
enter
jb
add
adc
scas
cld
sbb
inc
rorl
mov
in
pushf
inc
pshufw
jne
cmp
xlat
sbb
xor
test
or
or
vunpcklps
rolb
add
adc
imul
mov
pushf
mov
sub
pop
repnz
inc
xchg
lcall
ficomps
shlb
inc
add
rol
mov
lret
mov
cmp
rolb
sbb
test
mov
xor
xchg
sahf
inc
mov
lcall
xorb
push
add
and
ljmp
cmp
fwait
jne
popf
mov
stos
dec
mov
cmc
pushf
mov
sub
inc
fiaddl
fwait
jmp
cmp
xchg
pushf
rorl
fs
fucomp
lods
and
pop
jmp
mov
lahf
pushf
imul
inc
scas
push
cmp
cs
adc
cmp
fisubl
adc
push
movsl
or
xchg
idiv
mov
adc
dec
test
les
aam
pop
lods
xchg
out
int3
pop
decb
pop
repnz
xor
and
inc
pop
mov
mov
loop
and
and
mov
ret
lock
or
mov
jo
cmpsl
and
popa
leave
sub
inc
test
stc
sahf
imul
lcall
mov
cmp
popa
sub
xchg
in
or
cwtl
jno
out
dec
cmp
in
mov
mov
dec
stos
mov
filds
es
lods
call
cmpb
std
scas
daa
sbb
mov
jb
sub
bound
or
mov
fld
cmpsl
outsl
mov
call
sub
lahf
add
aas
icebp
inc
push
cmp
fwait
xchg
xchg
fldl2e
cwtl
clc
jae
lahf
outsb
inc
pushf
and
jp
mov
ficomps
and
pop
imul
popa
sbb
in
sbb
int
sbb
pop
add
test
inc
scas
xchg
push
ds
jmp
adc
in
cld
ds
push
stos
rcll
dec
scas
lods
lret
lahf
push
mov
imul
sbb
nop
pop
loope
cmpsl
aad
iret
push
dec
mov
push
adc
fldcw
outsl
xor
arpl
mov
pop
out
aas
dec
pusha
lret
daa
push
aaa
fists
ds
fadds
and
mov
out
mov
xchg
xor
jnp
sub
pop
or
lods
mov
cmpsb
push
packuswb
lock
and
push
les
xor
xor
xchg
jmp
sub
rorb
cmp
pop
aaa
mov
ja
or
outsb
pushl
fimull
xor
sti
test
ss
pushf
cld
mov
aam
out
inc
daa
nop
mov
push
notb
outsl
pop
add
in
fbld
xor
pusha
shl
lret
cmp
cwtl
xchg
test
les
js
js
insl
sarb
leave
mov
cmpsl
xchg
ficoml
xor
ja
push
sub
repz
pop
rcrb
std
or
sub
out
fimull
and
and
cmp
add
jb
fldt
xlat
mov
mov
iret
mov
aad
inc
gs
push
push
call
mov
push
mov
jb
add
enter
repz
push
jbe
push
popf
mov
lea
setle
pop
or
cltd
aad
scas
add
xchg
jno
shl
outsb
lret
int3
mov
in
sub
dec
out
nop
clc
lahf
fcmove
sub
add
clc
fldt
js
stos
popa
aam
mov
mov
lds
das
sub
dec
out
jns
pushf
sti
sub
stos
out
or
push
or
dec
pop
cmp
sub
inc
inc
pop
fucomip
xor
inc
jp
aam
mov
pop
in
frstor
ss
negl
enter
imul
arpl
lret
or
loopne
in
mov
rcrb
xor
jecxz
andb
sarl
dec
xchg
fs
gs
mov
filds
pop
pop
in
xchg
cld
int
push
or
in
sbb
push
leave
addr16
bound
aaa
mov
cmp
sbb
sar
jmp
add
aaa
and
dec
mov
pop
cmp
ds
cmpsl
sbb
fnstcw
cmp
fisubs
fwait
add
idivb
sahf
jo
cmp
sub
dec
ds
int
and
lahf
addr16
ret
lods
shr
mov
xchg
scas
inc
dec
dec
pop
jg
mov
dec
cmp
fstpl
ds
stc
mov
xor
aas
jl
inc
lods
stos
mov
inc
and
call
ret
in
loopne
bound
insb
dec
insl
test
xlat
repnz
and
fisubl
add
xchg
xchg
add
add
icebp
pop
movsb
sahf
testl
subb
in
jle
or
leave
sub
aad
pop
imul
sbb
push
jle
test
icebp
push
xchg
jae
testl
stc
int
and
call
push
xchg
pusha
pop
cld
jo
incl
mov
xlat
inc
mov
pop
or
xchg
je
orb
fcmovb
movsl
xchg
out
adc
dec
dec
lock
fwait
mov
arpl
dec
xchg
and
lahf
dec
loop
xchg
dec
cltd
dec
xor
pop
xchg
dec
mov
fucomi
nop
jb
xor
jbe
loop
fcoml
ss
mov
decl
aaa
jg
cmc
and
jl
shlb
outsl
in
fistpl
pop
mov
mov
adc
push
mov
push
sbb
dec
lcall
pop
hlt
int3
sbb
int
push
inc
and
jne
cltd
call
fisttpll
sbb
cltd
pop
push
mov
rcrb
test
xchg
jns
std
or
mov
pop
jbe
push
sbb
in
inc
mov
je
xchg
cwtl
or
lods
stos
stos
hlt
ret
jnp
les
bound
lea
imul
mov
daa
das
sub
flds
sbb
repz
shrl
fstpl
cs
push
pop
shr
rorb
jl
loope
fs
sbb
fnstsw
out
or
sbb
mov
adc
popf
jmp
ret
out
pop
hlt
or
cld
cmp
ss
mov
xorb
sub
mov
cmp
adc
sbb
sbb
pop
repz
out
cmp
cmp
pop
arpl
jmp
fldt
out
jg
pop
fiadds
xchg
loopne
mov
pusha
xor
push
movsb
xchg
and
and
lret
mov
or
inc
jb
dec
cmp
mov
lahf
cltd
add
jecxz
add
lahf
daa
mov
fisubrl
push
lcall
push
push
xchg
mov
push
scas
in
sub
xchg
cmp
sub
push
stos
jg
imul
jne
cmp
imul
in
mov
push
add
stc
jle
mov
lret
les
xor
dec
and
out
inc
jp
aam
add
aas
out
mov
movsl
xchg
idivl
cmpsb
loop
cmp
stc
repz
je
cmpb
mov
and
sub
arpl
jns
insl
inc
sub
sarb
jno
xor
inc
insl
inc
pop
mov
mov
push
fbld
sbb
fsts
icebp
fnstenv
cmp
stos
cltd
jle
sbb
sbb
stos
or
dec
ffree
sub
pop
iret
push
inc
pusha
inc
gs
repz
jge
xor
mov
inc
jns
mov
aaa
in
out
popf
dec
adc
daa
push
push
mov
outsl
gs
inc
jl
nop
mov
bnd
subl
lret
push
pop
xchg
push
repz
fdivrs
mov
test
xchg
or
jecxz
ss
sub
les
xchg
xchg
stos
mov
decl
mov
mov
fnsave
dec
add
and
lods
pop
xchg
sub
sti
cmpsb
and
jg
insb
data16
shlb
sub
int3
addr16
fistps
sub
gs
adc
adc
aam
fwait
add
sub
lret
cmp
lahf
xchg
mov
outsl
popf
mov
jle
in
mov
sbb
aaa
and
xchg
aad
out
repz
pop
adc
test
repz
out
pop
push
data16
xorl
in
pop
int3
jbe
fcmovnbe
pop
xchg
pop
and
lds
rol
popa
enter
xchg
pop
or
inc
adc
fwait
sarb
cmpsb
test
add
xchg
jbe
inc
loopne
or
jmp
rclb
dec
cmpsb
lret
icebp
inc
fidivs
lret
cli
jae
xchg
and
push
fmuls
push
cmpsl
dec
jbe
and
pop
sbb
mov
mov
andb
sahf
je
mov
sti
aad
js
pop
sub
dec
jmp
movb
test
or
xchg
ljmp
add
jno
out
lcall
mov
mov
and
sbb
cmpsb
int
pusha
xor
sbb
out
les
jle
cld
insl
data16
sbb
mov
scas
jge
lds
jp
rorl
jle
xchg
inc
dec
les
inc
shl
dec
xor
fbld
in
aad
jnp
out
xor
hlt
fimull
out
mov
into
movsb
xchg
test
push
push
cmp
xor
mov
rcrl
scas
dec
rcr
das
cld
push
push
hlt
jae
mov
rcrb
add
mov
inc
mov
xchg
xchg
mov
int
sub
push
pop
jle
scas
jp
aaa
push
lcall
mov
aad
mov
js
sub
nop
xor
inc
adc
stos
or
aad
faddl
clc
cmp
sarb
das
je
daa
push
dec
fisubrs
cmp
cmc
js
mov
inc
sahf
aaa
in
and
dec
pushf
xchg
call
xor
dec
mov
xchg
scas
or
or
and
sub
xor
into
adc
sbb
decb
mov
pop
xor
xor
enter
mov
fwait
jno
dec
pop
mov
popa
sbb
inc
mov
cmp
and
mov
or
sub
sub
icebp
mov
rcrl
dec
addb
call
inc
nop
ja
or
push
xor
popf
cmp
addr16
sub
repnz
push
out
fsubl
subl
or
int3
add
xchg
in
jo
dec
mov
pop
dec
jp
dec
fwait
add
push
jbe
repnz
push
fwait
add
sbb
insb
jge
scas
inc
out
adc
cmp
lret
lret
sub
xor
adc
jle
and
push
sti
pop
pop
cs
add
xor
ja
lcall
add
cmp
push
jb
lods
pop
aam
inc
cltd
rolb
roll
add
repnz
fdivrl
lock
leave
sub
repz
es
in
scas
mov
push
mov
rcrl
jmp
xchg
xchg
stos
sbb
cmpb
loope
ss
pop
push
sahf
fdivl
repnz
dec
loop
xor
cwtl
jp
jno
js
ss
jle
push
lds
mull
lret
mov
cltd
jp
outsl
pop
hlt
or
mov
lea
popf
rcrl
dec
sub
ficoml
cli
xchg
dec
in
ss
mov
das
sub
cmpl
mov
add
hlt
dec
push
jl
gs
rcrl
dec
outsb
scas
int3
xchg
pop
and
fwait
shll
fwait
jecxz
or
std
icebp
out
clc
hlt
lret
pop
mov
dec
jl
inc
push
dec
clc
and
push
bound
mov
rol
leave
sub
jmp
pushl
inc
mov
fsubl
mov
lea
mov
sub
jb
lret
fimuls
lds
adc
mov
jns
cmp
cltd
movsb
popa
in
in
fs
sarb
jge
in
popa
push
out
or
gs
das
outsb
push
jns
lcall
and
and
pop
add
loop
lock
cmp
mov
sahf
fs
aas
iret
stos
filds
nop
ret
jno
pop
loope
fildll
lahf
adc
cmc
pop
lret
je
stc
lds
loop
mov
inc
xor
aam
mov
jecxz
sarl
test
cmp
stos
out
pop
mov
lcall
lret
xchg
push
adc
sub
inc
ljmp
xchg
in
enter
das
sub
stc
mov
dec
out
outsb
mov
loopne
cmpsb
or
pop
in
fcmovb
inc
fdivl
jecxz
out
clc
push
bound
ss
mov
sub
aaa
push
stos
cmpsl
cld
imulb
jb
es
stos
in
or
mov
dec
xor
loop
and
ffree
inc
rcl
dec
ss
aaa
cmp
pop
dec
xchg
orb
cmp
cmp
jp
fsubp
nop
cmp
in
sahf
gs
inc
inc
jle
sti
mov
fmuls
aam
cmp
mov
lods
int3
iret
orl
fists
cwtl
pop
sbb
out
and
dec
push
pop
or
adcl
test
or
jmp
pop
bswap
pop
jmp
dec
mov
shll
enter
push
pop
es
pusha
xchg
cmpxchg
mov
lret
mov
jae
or
frstor
mov
mov
mov
divl
dec
xlat
adc
fsubl
push
cmp
jmp
mov
and
jne
mov
jmp
test
xchg
iret
test
orb
aam
scas
jnp
and
shlb
inc
shrl
mov
sub
into
xor
imul
clc
xor
jb
sbb
movmskps
xor
divb
jge
and
test
pop
stc
pop
in
dec
cs
adc
pushf
dec
inc
ffree
fdivrl
mov
pop
jbe
addb
js
xchg
xchg
cmp
aaa
or
push
or
lock
and
sahf
or
pop
push
xor
mov
push
fs
xor
scas
fcompl
into
dec
js
xor
fimull
adc
xor
push
ror
lods
dec
sbb
enter
std
js
xchg
mov
repz
mov
aad
xor
adcl
lcall
mov
out
cmp
mov
and
sub
cmp
inc
xchg
lea
out
or
scas
jae
das
dec
xlat
xchg
dec
pop
dec
xorb
mov
ja
sbb
mov
jne
cmpsb
test
push
inc
fidivrl
and
into
inc
into
jmp
pop
addw
inc
adc
dec
mov
mov
movsl
pop
pop
fdivrl
sub
jno
movsb
incb
hlt
inc
and
dec
cli
cmpsb
or
xchg
lock
les
push
lahf
xorl
cmp
mov
inc
sbb
mov
xchg
stc
out
iret
fcmove
mov
js
ja
mov
xor
push
adc
and
arpl
fnstsw
sbb
pop
test
pop
pop
lahf
imul
cli
adc
pop
stos
je
pop
pop
imul
divl
lods
popw
dec
imulb
les
cmpsl
dec
outsl
add
pop
dec
xor
lods
push
aas
mov
test
int3
push
mov
cmp
dec
pop
scas
ret
dec
in
push
or
mov
lds
aaa
out
jbe
ret
idivl
mov
mov
fwait
xchg
repnz
xor
jno
shl
adc
jae
lcall
jae
cmp
xor
fistl
je
mov
das
mov
mov
jmp
lahf
mov
mov
dec
push
das
mov
mov
jmp
mov
and
outsb
push
jl
add
and
mov
jg
push
data16
inc
add
lods
dec
add
push
sarl
mov
sbb
mov
dec
inc
mov
mov
lods
rclb
xor
lret
adc
push
enter
hlt
test
xor
daa
in
je
push
cmc
jle
inc
jb
lcall
adc
xchg
jo
sub
lea
push
dec
cltd
sbb
or
cli
insl
pop
lcall
out
stc
and
push
cltd
aas
lret
lahf
jno
out
aaa
dec
lret
out
sar
call
mov
mov
mov
sbb
push
xchg
push
add
js
popa
lock
xor
into
mov
mov
inc
sub
lcall
cld
dec
and
xor
xchg
shl
cltd
inc
xor
lock
fidivl
jae
xor
or
sbb
mov
push
int3
jmp
sub
fs
adc
test
in
or
leave
sti
setns
or
adc
jne
xchg
mov
xchg
movsb
xchg
xchg
add
push
in
mov
jge
sub
pop
les
inc
push
mov
adc
push
mov
loopne
jmp
aaa
aam
in
movl
in
js
nop
mov
mov
inc
test
cmc
pop
jmp
inc
inc
sub
nop
pop
push
jnp
mov
mov
rcrb
pushf
mov
aas
stos
sbb
fxch
mov
push
addl
repnz
inc
ror
xchg
into
mov
scas
xor
addl
inc
insl
jb
adcb
sub
repnz
sub
loop
cmpsl
insl
jp
pop
xchg
xchg
in
fcomps
push
cmc
gs
cld
ljmp
jl
dec
scas
test
push
sub
jbe
mov
cmp
cmc
loopne
inc
arpl
adc
mov
push
popa
push
or
adc
pop
into
imul
fwait
cmp
mov
inc
add
inc
lcall
lds
loopne
out
test
xchg
test
mov
inc
je
jbe
test
mov
fcoms
mov
imul
dec
cmp
jb
dec
shll
or
sbb
jnp
push
out
push
cmp
jno
xor
out
rorb
add
subb
pop
dec
push
jns
pusha
mov
mov
scas
aaa
in
mov
loope
push
jmp
divl
popf
hlt
gs
mov
divb
sahf
je
adc
std
andb
test
mov
jecxz
push
and
rcr
pop
adcl
out
jmp
push
jae
mov
inc
mov
adcl
and
js
pop
lods
mov
fwait
adc
lods
mov
pop
and
sub
dec
cltd
xorb
inc
mov
hlt
lock
inc
cltd
shrl
mov
sub
daa
ljmp
sub
sbb
inc
ret
cmpsb
add
mov
ljmp
mov
out
xchg
xor
int
add
rclb
lock
lods
aad
cltd
cmp
jne
pop
lret
sub
sbb
les
rcl
xchg
mov
mov
in
cmp
mov
xchg
stos
add
js
jbe
sbb
push
inc
cmp
ret
push
movsl
sub
int
popa
mov
scas
push
sub
popa
mov
push
shlb
pusha
cmpb
cli
mov
inc
outsb
dec
jecxz
addr16
sbb
outsl
sar
pop
repz
add
dec
lret
cs
lret
xor
nop
sub
out
push
nop
jg
sbb
jno
sub
mov
pop
cmp
fldt
and
inc
ficomps
pop
shl
loope
and
movsb
insb
xchg
rorl
test
dec
stos
inc
xchg
inc
sti
fisttpll
inc
xchg
or
jecxz
push
inc
lret
mov
xchg
lock
pop
dec
inc
and
lcall
not
push
stos
add
adc
inc
out
xor
push
lea
lds
std
imul
push
mov
pop
mov
movsl
and
add
adc
stos
inc
jmp
jne
ret
add
inc
xchg
cmp
out
out
inc
sub
cwtl
sahf
mov
jge
lods
xor
dec
aas
add
cmp
outsb
mov
push
mov
movsl
xor
jno
jge
sbb
cmpsb
sbb
inc
mov
in
dec
push
sub
sbb
ret
push
fwait
push
mov
stos
and
fisttpll
daa
cwtl
jl
mov
jge,pn
ljmp
aas
cwtl
mov
inc
aad
xor
loop
out
mov
arpl
rcrl
inc
inc
pop
repz
out
pop
mov
and
mov
dec
mov
and
mov
int3
sbb
sub
add
daa
sbb
adc
cwtl
inc
cmpsl
dec
ja
jae
ds
pusha
fistpll
xchg
and
xor
inc
mov
xchg
pop
adc
fdivl
outsb
push
inc
push
gs
xchg
mov
in
mov
mov
inc
mov
in
inc
lock
pop
lahf
adc
js
stos
out
loopne
in
lahf
xor
lock
jae
leave
cli
pop
outsb
inc
inc
xchg
pop
sub
ljmp
pop
movsb
stc
or
xlat
push
in
mov
add
and
call
in
and
mov
cld
jle
mov
inc
mov
arpl
in
loope
jnp
into
in
push
sbb
xchg
mov
insb
out
fwait
mov
outsl
push
repnz
imul
mov
outsl
ljmp
or
sub
pop
rcl
or
repnz
cltd
push
push
ret
jp
xor
leave
rcll
pop
xchg
inc
imul
cmp
jbe
dec
sbb
sub
ds
adc
loope
pop
dec
add
inc
xchg
and
xchg
add
or
mov
hlt
mov
in
fldenv
add
sub
lret
cmpsb
inc
out
push
push
cs
cmp
fwait
mov
mov
adc
push
pop
ja,pn
fdivs
subl
daa
fiaddl
aas
mov
das
mov
jp
fidivrl
xchg
dec
dec
dec
mov
aad
add
xor
inc
dec
pop
in
xlat
lcall
pushf
popl
int3
xor
rcll
fbstp
adc
and
divl
add
scas
cltd
int3
xlat
xchg
lock
icebp
in
movsl
rcll
or
sub
daa
cmc
fs
mov
test
adc
sub
push
jno
inc
add
fisttpl
sahf
fisttpl
nop
stc
mov
xchg
dec
xchg
add
pop
jle
jnp
add
jg
xchg
popf
push
jge
test
cld
xchg
jmp
scas
push
in
jp
inc
lret
ja
mov
pop
lea
mov
cmp
adc
fcomps
mov
inc
jne
sub
push
pushw
aam
add
inc
jns
sete
fisubrl
pop
and
xchg
repz
add
lock
idivb
inc
cmpsb
addl
popf
stc
xchg
imull
adc
mov
lods
mov
lret
mov
mov
in
insl
push
push
pop
dec
xchg
cwtl
into
icebp
out
jae
mov
aas
call
pop
mov
insl
fmull
adc
jp
add
sti
mov
xchg
cmpb
inc
pop
cltd
xchg
ret
inc
rclb
roll
insl
push
cwtl
je
dec
push
fdivrl
aad
ret
in
addl
pop
ljmp
add
shl
bound
in
xchg
and
cwtl
loopne
pop
mov
and
mov
and
rol
dec
sub
pushf
jge
adc
fwait
inc
daa
jge
js
dec
fistps
sahf
adc
mov
int3
mov
fstl
pop
gs
pop
push
xchg
ja
xchg
push
jne
pop
in
jg
shlb
fs
cmpsb
nop
daa
mov
add
ret
and
cmp
es
decb
add
in
out
rorl
xlat
sahf
dec
cli
sub
push
push
sahf
and
xchg
push
push
cmp
fwait
push
fildll
cli
lcall
aas
cwtl
sub
ret
mov
inc
std
push
call
pop
sub
xor
push
xchg
cld
mov
pop
mov
loop
pop
sub
fldl
mov
stos
clc
jns
jl
xchg
popf
rcll
push
cs
pop
out
mov
stc
cmp
fadds
pop
sub
push
xchg
mov
and
mov
xor
orl
inc
add
mov
test
and
mov
push
pop
push
sub
mov
xchg
push
xchg
lret
or
xchg
inc
jg
jl
and
stos
jae
call
pop
or
push
shrl
clc
out
fs
stos
cltd
mov
sub
test
cltd
movsb
dec
ja
das
pop
jecxz
out
jno
iret
arpl
push
push
inc
push
xor
aas
ja
adc
gs
mov
lret
dec
dec
cmpsb
fisubs
out
jl
pop
int
fs
in
sub
inc
ret
mov
push
insl
lahf
mov
sub
xchg
aaa
and
pop
jnp
in
pop
and
jmp
sub
movl
ret
int
dec
dec
mov
push
frstor
xor
in
mov
push
aam
fldl
adc
adc
imul
jbe
cltd
sub
mov
nop
sahf
addb
and
pusha
and
sub
xor
or
repnz
pop
mov
cmp
add
inc
cmc
jecxz
insl
icebp
movsb
and
outsb
fimuls
ljmp
inc
xor
pop
test
jno
mov
add
push
popf
and
cmpsb
movsb
in
adc
out
fwait
pop
clc
push
dec
push
je
sbb
xchg
sub
and
lock
cltd
sbb
sahf
push
mov
dec
add
push
sti
test
bound
hlt
xor
cli
jo
inc
jae
data16
xor
andb
leave
inc
sbbl
setne
dec
orb
xor
or
repz
out
aad
cmp
inc
xchg
insl
test
dec
fcmovne
sub
adc
movsb
jbe
cmp
insb
loopne
cli
inc
xchg
ja
xchg
or
sbb
jecxz
jo
scas
mov
jno
movsl
sbbb
scas
dec
imul
jle
mulb
or
movsl
xor
movsl
cltd
fdivrs
movsb
mov
jo
stos
in
adc
cltd
add
adc
or
popf
cli
push
imul
addr16
dec
adc
repz
cmp
into
pusha
cmp
or
mov
mov
jecxz
cli
jg
lods
mov
dec
fcomps
rclb
sub
lret
roll
pop
inc
and
cltd
je
in
push
jbe
jno
test
mov
sbb
outsl
xchg
inc
adc
dec
or
and
aas
cltd
jmp
jg
push
xchg
cmpsl
popf
jnp
clc
test
jp
loopne
cmp
and
nop
xchg
scas
xor
adc
test
mov
xor
adc
mov
cmp
sub
dec
mov
dec
inc
pop
mov
out
imul
cmp
ja
fidivrs
mov
out
sub
jnp
bound
sbb
lea
sbb
jns
lret
adc
or
stos
pop
scas
jle
inc
cli
hlt
or
mov
dec
lret
mov
adc
sar
xor
pop
xor
lcall
inc
add
mov
and
pop
mov
xor
lsl
jg
jb
sbb
insl
iret
jge
adc
and
insb
cmpsb
iret
or
je
outsb
sub
cmp
enter
loopne
add
xor
xchg
lock
stos
ror
data16
sub
add
jmp
and
jmp
and
je
dec
imul
repz
out
sbb
aaa
xlat
stc
sbb
add
jmp
jno
rcl
inc
lods
dec
test
jo
dec
cmp
sti
dec
movsl
sti
pop
int3
movsl
repz
mov
or
test
rol
sbb
mov
inc
ss
xor
push
subl
adc
jl
cmpsl
cltd
mov
push
inc
out
aad
pushf
cltd
mov
xchg
ljmp
mov
mov
dec
lret
add
les
das
outsl
rolb
pop
inc
ficoms
xor
lahf
xchg
xchg
or
jmp
into
pop
das
fs
add
jne
push
adc
inc
mov
lret
in
js
fcoml
movsl
pop
std
inc
ds
adc
cmove
nop
ds
in
fwait
in
cltd
lcall
cmpsl
jne
arpl
jno
lahf
mov
in
push
mov
mov
mov
fidivs
sbb
push
shlb
enter
out
lcall
ja
gs
adc
push
inc
xor
cmp
sub
lods
dec
mov
aam
cmpsb
xor
lods
mov
jle
jl
lods
and
pop
xor
outsb
arpl
mov
jmp
dec
adc
inc
jne
sub
xor
jno
xlat
jnp
scas
add
sti
ds
dec
add
outsb
xor
mov
cmp
mov
rclb
lret
decb
xor
shlb
out
adc
jne
and
cmp
test
ja
nop
into
daa
and
mov
lret
shrb
push
mov
jo
inc
pushf
and
notb
bound
cvtpi2ps
mov
mov
push
mov
cmpb
jle
mul
dec
enter
les
adc
jecxz
xchg
dec
loope
testl
shl
sarl
imul
and
push
push
js
xor
and
icebp
std
or
or
shr
inc
xchg
xchg
sub
mov
insb
out
inc
mov
mov
jp
push
lcall
outsl
xlat
xchg
sub
fdivl
add
lcall
scas
dec
push
dec
push
out
lcall
push
pop
jecxz
ret
stos
add
push
cmp
clc
mov
push
and
pop
mov
push
or
ljmp
cmpsb
inc
cmp
dec
jbe
cmp
outsb
sbb
lds
aas
insb
xchg
fstps
jl
sti
popf
je
add
arpl
jbe
es
cmp
fwait
dec
add
mov
sub
or
push
cltd
adc
cmc
mov
or
cmp
les
sti
push
pop
and
loop
cmp
dec
hlt
das
hlt
mov
std
and
push
movsl
or
pop
std
rorl
pushf
outsl
or
xor
mov
sbb
push
sub
xchg
lahf
out
sub
in
mov
inc
mov
push
test
mov
inc
cmpsl
push
int
inc
insb
push
nop
pushl
pop
mov
int3
sbb
out
daa
pop
imul
cli
dec
mov
iret
incb
enter
insb
loope
leave
je
pop
mov
jge,pt
js
lods
adc
push
and
insb
adc
xchg
mov
cltd
jb
push
pop
divb
test
and
xchg
xchg
aaa
fs
shl
sub
jecxz
repnz
hlt
nop
xchg
pop
scas
fmul
cld
xor
divb
mov
out
pop
out
ss
sbb
mov
xchg
add
adc
and
xchg
scas
ljmp
rcl
mov
je
lea
jg
xchg
ror
out
push
test
xchg
sub
out
jns
aas
insl
aaa
and
push
mov
cld
leave
dec
movsl
mov
outsb
fistpl
and
popa
aam
insb
stc
fldl
xor
mov
in
mov
cmp
sub
mov
pop
lret
pop
cmp
rorb
xchg
mov
mov
pop
sti
push
pusha
cmpsb
int3
mov
addr16
xchg
js
inc
and
cmp
push
adc
adc
loopne
push
xor
mov
adc
mov
out
mov
lock
fimuls
cmp
enter
xchg
lret
test
lods
imul
push
lcall
pop
and
dec
insl
push
mov
ret
scas
mov
mov
sbb
in
mov
pop
lods
lock
adc
lods
push
mov
push
pop
or
lret
or
dec
int3
jmp
mov
icebp
jp
lods
jmp
popf
fimull
fs
jns
adc
push
out
xor
nop
lods
cli
mov
mov
scas
gs
xor
xchg
ret
xor
movsl
dec
loop
fsubrl
push
dec
jg
addl
popf
lods
cmpsb
mov
mov
les
movsl
mov
scas
int
mov
sbb
pop
icebp
xor
in
outsl
sbb
lock
in
in
sarb
sub
jmp
jl
add
dec
cltd
cmp
fsubl
jbe
or
jmp
ret
or
pshufw
mov
shr
push
inc
jle
popa
mov
push
cmpsl
jns
inc
push
cs
in
xorb
push
push
sub
clc
stos
adc
in
loopne
and
in
sbbl
andb
jle
xlat
pop
push
cmpsl
jge
mov
movsb
mov
jecxz
jmp
xor
inc
push
sub
stc
sti
fcomps
jmp
call
stc
shll
pop
fucomi
mov
data16
xor
fisttps
jmp
jns
xchg
add
sbb
push
fs
stos
test
ret
jae
out
add
cld
pop
fldl
je
add
test
test
ss
jmp
dec
mov
test
adc
in
daa
bound
fdivrl
add
jge
adc
add
scas
scas
test
pop
xlat
roll
pop
lahf
lret
cmpsb
and
scas
dec
movsl
mov
push
mov
int3
repnz
into
dec
mov
in
test
std
test
sub
and
mov
xchg
jl
cmpsb
addr16
add
push
sbb
sbb
adc
int3
sbb
jno
mov
clc
or
flds
cmp
mov
mov
out
std
bound
inc
xchg
rcll
cwtl
je
ljmp
lea
subb
xchg
rorb
ja
add
cmp
sbb
fs
scas
and
pop
pop
push
xchg
movaps
mov
mov
incl
ljmp
fistpl
mov
repnz
add
pushf
stos
mulb
mov
mov
push
pop
sub
cmp
push
out
pop
xchg
mov
cmp
pop
mov
call
test
pop
ljmp
lret
cmp
adc
stos
cmp
mov
scas
rcrl
sbb
stc
or
xchg
mov
nop
or
cmc
jge
lods
jo
cld
sub
faddl
cli
outsl
andb
shlb
popf
dec
sub
aaa
inc
pop
pop
cmc
sbb
cmc
and
mov
push
sti
popf
sti
ss
ret
popa
mov
pop
and
imul
mov
jae
push
dec
fistl
and
fldcw
pop
xlat
push
jbe
sahf
mov
into
shll
mov
ss
cmp
std
loope
dec
cmpsb
cmp
dec
mov
jmp
push
stos
push
or
mov
lret
addr16
enter
xchg
in
ja
adc
jge
or
push
push
pushfw
xor
mov
fwait
subb
lods
mov
insb
mov
lods
cli
jns
adc
test
adc
mov
movsb
lret
mov
call
mov
clc
fdivrl
xchg
inc
lea
xor
xchg
inc
inc
ja
and
aaa
fwait
pop
cmp
jne
add
mov
push
pop
cmp
mov
ljmp
mov
nop
arpl
cmp
mov
jno
xlat
dec
xor
jae
lahf
popf
mov
notl
loop
push
jge
aam
mov
sbb
jl
jae
sbb
lahf
ficoms
sbb
inc
pop
add
out
fidivrs
ror
leave
jbe
adc
sub
mov
or
scas
pop
sub
fidivl
mov
mov
outsl
data16
sahf
in
sbb
sbb
imulb
adc
mov
mov
je
inc
or
lea
leave
pop
push
inc
cmp
pop
lods
push
jne
hlt
ja
popa
in
imul
mov
fwait
xchg
dec
push
sti
jmp
mov
aad
aam
nop
dec
push
xchg
pop
dec
jle
jns
inc
jle
cmp
enter
pusha
xchg
push
fiadds
subl
aad
test
hlt
icebp
mov
dec
popa
dec
push
xorw
dec
dec
push
in
test
ljmp
rorb
sbb
lods
mov
add
cli
push
test
or
cmpsl
pop
imul
pop
add
popa
push
pop
xchg
xcrypt-cfb
cmpsl
and
ljmp
cs
xchg
and
in
mov
adc
repz
push
cmc
aas
scas
xchg
pop
and
inc
sub
out
pop
mov
push
gs
popf
push
jp
push
dec
inc
or
or
mov
daa
mov
stc
sub
lret
and
lahf
ficomps
in
aas
ret
inc
aad
mov
out
ds
cmpsb
mov
stos
push
lds
pop
cld
ljmp
sub
and
outsb
outsb
jne
jbe
push
pop
push
nop
jecxz
push
pop
cmp
mov
xor
clc
and
sbb
pushf
dec
mov
imul
lret
xor
lcall
scas
shr
aas
and
aam
adc
push
fstpt
fsubrl
inc
sbb
lret
mov
pushf
aas
negl
or
push
push
in
rcl
mov
mov
lods
dec
jb
fnstsw
out
push
cmpsl
push
push
jae
das
cmp
aam
pushf
std
cli
out
lds
jo
enter
push
cmc
in
icebp
xor
xchg
push
and
sbb
jb
jge
push
mov
aad
test
jnp
fs
cwtl
mov
adcl
scas
and
mov
or
cwtl
repnz
xchg
jp
loopne
mov
in
or
std
ja
fwait
js
into
popf
into
and
jnp
setns
mov
xchg
jne
push
push
ja
cmp
ja
lcall
test
sub
adc
fmull
mov
mov
repnz
jb
outsb
test
out
or
xor
imul
adc
inc
push
outsl
add
dec
add
cwtl
inc
xchg
dec
or
push
dec
mov
loop
sbb
loop
and
sub
xchg
scas
pop
pop
cs
lea
popl
pop
mov
jno
cmp
adc
int3
mov
xchg
into
xchg
stc
push
cmc
cmp
lea
mov
lret
in
loope
jbe
jmp
cltd
in
into
aas
lret
xchg
adc
ja
int
les
sbb
jmp
popa
outsb
notl
insb
cmp
lea
dec
inc
sbb
inc
hlt
frstor
cmpsl
cmc
xor
repz
in
subl
aas
adc
or
and
filds
push
xchg
lds
lods
nop
es
fstps
pop
bound
outsb
mov
test
popf
lret
and
outsl
sbbl
or
outsl
leave
pushf
and
ret
add
mov
jmp
mov
adc
pop
sbb
dec
cmp
fxam
fildl
or
and
or
sub
xorl
jo
push
pop
sub
daa
je
push
aas
push
jmp
jno
pop
out
mov
test
jmp
adc
popa
mov
pop
xchg
rolb
fsubr
add
test
pushf
rcr
es
sub
cld
inc
pop
lods
sbb
out
adc
sbb
cmp
xorb
add
outsb
xchg
xlat
pop
cli
sub
lock
or
xlat
inc
pop
hlt
dec
cwtl
lret
sbb
sbb
sar
and
ffreep
adc
bound
xorl
sbb
lock
mov
cmp
addb
sub
rclb
xor
aas
push
and
inc
pop
mov
cltd
sti
cmpsb
cli
lret
movsb
fisubl
in
push
sbbl
fwait
push
test
lcall
mov
and
sbb
movsb
jge
imul
xchg
or
or
movsl
in
xor
push
ss
dec
inc
rorl
mov
inc
add
popa
out
mov
imul
jne
adc
inc
mov
and
jns
pusha
inc
sbb
inc
cld
adc
dec
mov
xchg
ficoml
pop
std
adc
push
push
add
stos
pop
jecxz
call
cmp
pop
repnz
idiv
clc
mov
das
sbbl
mov
and
xchg
lock
movsb
add
jo
fs
xchg
pop
sbb
xor
push
push
lods
jo
xchg
aam
cmp
pop
inc
lods
addr16
push
cmp
je
jp
addr16
jmp
xor
mov
lods
loope
xor
jo
mov
mov
fstl
xor
in
gs
jecxz
mov
xor
fstpl
fisubrl
pop
out
xchg
inc
scas
cltd
icebp
hlt
aas
push
loop
inc
or
cmp
or
push
test
mov
inc
jg
inc
popa
in
and
fimuls
mov
aas
sarl
dec
pop
adc
daa
clc
inc
push
inc
popa
sti
ss
jmp
dec
pop
iret
int
test
jnp
test
sbb
sbb
pop
jg
sbb
in
sub
mov
mov
cmpb
loopne
add
rol
inc
inc
fs
shrl
nop
daa
xchg
dec
imul
xor
rcrb
mov
mov
leave
out
jge
inc
push
push
xor
fs
sahf
cmp
mov
and
lods
push
xlat
daa
das
out
out
xor
fwait
jl
inc
fs
and
mov
fwait
or
adc
cmp
sbb
adc
add
fidivl
mov
mov
inc
fs
inc
iret
loop
lahf
sbb
cmp
aaa
lcall
in
cmp
mov
enter
pushf
in
sbb
mov
test
sbb
call
lret
jne
test
or
decl
rcl
mov
rorl
popf
test
mov
mov
inc
cmp
mov
push
arpl
loopne
cli
lret
and
loop
out
push
ret
push
jmp
js
lret
sub
jae
dec
popa
push
fwait
aam
jno
mov
dec
pop
mov
xchg
jg
pop
pop
cmp
mov
stos
shl
sbb
frstpm(287
sbb
cmc
test
mov
pop
lock
push
add
adcl
mov
cwtl
jno
repz
jg
and
push
xor
pop
popa
ret
adc
test
dec
popa
mov
jg
dec
lahf
bound
inc
mov
xlat
mov
push
dec
sub
xor
mov
sub
in
mov
out
ljmp
lods
or
data16
cmp
xchg
mov
and
adc
lea
jne
dec
lods
inc
test
mov
inc
xor
add
add
push
push
inc
stos
pop
add
cmp
sbbl
pop
and
jp
aas
int3
lds
pop
sub
xchg
enter
fidivrs
pop
push
mov
in
mov
mov
or
mov
push
mov
mov
or
ficoms
imul
xchg
mov
dec
cmpsl
adc
sbb
pusha
mov
push
cmpsl
pop
pop
push
rcrl
inc
addr16
sbb
inc
jecxz
xor
mov
call
aad
pop
mov
aas
daa
sub
lcall
sbb
pop
add
xor
cmp
js
cmc
adc
jbe
push
cmp
and
mov
pop
push
out
stc
es
mov
push
jp
jle
mov
ss
mov
mov
xchg
sub
pop
stos
jae
sbb
mov
jne
mov
mov
lods
jecxz
xorb
and
add
cltd
pop
pop
push
rclb
fs
es
sub
mov
adc
addr16
mov
push
inc
pop
test
dec
scas
and
leave
dec
dec
push
out
outsb
mov
test
pop
dec
int3
inc
pop
dec
xchg
insb
inc
ljmp
les
pushf
push
out
or
adc
outsl
cmp
inc
fdiv
sahf
pop
aad
and
es
push
scas
push
aas
adc
dec
mov
jmp
push
jno
movsl
lahf
or
mov
shlb
pushl
lock
in
std
cmpsl
int
dec
into
adc
add
pop
sub
add
decl
test
test
jle
jp
push
sub
imul
adc
sti
xchg
pop
jnp
pop
inc
cmp
sbb
sub
into
jecxz
sahf
mov
loopne
xchg
out
cmp
sti
add
pushf
cld
mov
gs
mov
sub
rcr
jns
imul
pop
cmp
aaa
mov
int
jns
jbe
pusha
add
lods
popf
out
pop
adc
nop
insb
xor
aas
xchg
xor
inc
repz
jne
movsl
fstpt
movsl
cltd
pop
imul
popf
aas
fwait
push
movsl
mov
sti
std
cltd
adc
call
adc
push
xchg
push
lds
aas
mov
sar
xlat
in
cmpsl
sub
dec
addb
pop
lea
dec
dec
mov
incb
cld
mov
pop
outsl
pop
stos
push
js
mov
jo
adc
push
jb
mov
mov
aas
mov
lds
call
inc
push
dec
add
ljmp
sub
lods
in
outsb
les
mov
push
popf
imull
pusha
clc
sub
pop
loop
sahf
fs
adc
pop
out
jnp
es
insb
jge
mov
mov
loope
fdivl
or
and
sbb
sub
mov
iret
push
xor
mov
test
mov
xchg
mov
add
push
jge
cmp
pop
jae
mov
addl
mov
lcall
cmpsl
jg
mov
shlb
push
lcall
aaa
push
aaa
cwtl
aad
pop
insl
xor
xchg
outsl
inc
aaa
data16
lock
lock
daa
dec
test
pushf
fcomps
jo
mov
sub
in
push
subl
decb
sahf
test
sub
loopne
sbb
movb
cmp
push
pop
mov
mov
pop
sub
push
mov
pop
add
imulb
pop
popa
out
sbb
cs
lock
push
call
pop
jle
cwtl
sub
out
addr16
xor
add
and
pop
xor
push
cwtl
cmpb
pop
das
sub
push
subb
ljmp
lods
lds
fistl
dec
lods
inc
add
lret
pop
jle
mov
push
push
fs
and
pop
mov
pop
push
test
pushf
stos
cmpsl
or
andb
cmp
movsb
xlat
popf
scas
decb
insb
ret
xchg
xchg
sti
dec
int
inc
test
loop
adcl
or
or
test
out
push
add
and
mov
insl
push
jecxz
xchg
xchg
dec
pop
ds
cmp
aas
loopne
les
fwait
or
jge
add
xor
rcll
cs
pop
push
lea
add
adc
mov
cmp
cwtl
movsb
push
dec
push
call
pop
rcll
in
xchg
mov
fucomp
pop
movsb
das
loop
ret
add
and
adc
xor
test
jae
mov
xchg
stos
add
in
push
aad
not
fnstcw
rclb
inc
mov
dec
movsl
cmp
push
cld
pop
mov
fbld
js
sub
ljmp
add
or
int3
ds
pop
scas
outsl
leave
pop
mov
cmp
les
xor
mov
fmulp
stos
mov
push
mov
or
jmp
in
inc
mov
fisttpll
rclb
inc
add
fisubl
cmpsb
fcomps
or
fstp
xor
push
lcall
sbb
and
mov
cmpl
fimull
fsub
jge
adc
mov
pop
es
fsincos
jl
daa
loop
push
sbb
lods
imul
jbe
cmp
cli
arpl
sbb
xchg
loope
mov
xor
push
sarl
xchg
sub
fldenv
out
mov
test
jnp
push
lea
rcll
notb
sbb
dec
jnp
roll
dec
jl
mov
xchg
mov
test
or
jmp
hlt
xchg
int
cmp
jge
loopne
aam
xor
insl
add
pop
mov
scas
dec
jb
out
sub
popa
mov
fs
ficoml
mov
inc
mov
and
repnz
adc
out
xor
sarb
mov
xchg
sbb
arpl
int
pop
ret
add
pop
mov
pop
sub
int3
pop
xchg
jbe
fs
push
movl
cmc
into
sub
out
or
push
xor
jmp
push
dec
mov
push
addb
gs
add
cmp
fucomip
leave
xor
pop
aas
in
or
loopne
cmp
pop
mov
sbb
lret
and
push
out
sbbl
sbb
leave
dec
sbb
push
mov
stc
mov
sub
inc
iret
sub
inc
sub
js
adc
xchg
jecxz
pop
bound
mov
jb
jne
out
pushf
inc
adc
add
js
movswl
inc
push
cmp
inc
xor
test
and
jb
daa
call
cmp
xor
sub
push
imul
insl
in
jno
adc
sahf
out
xchg
rolb
jne
sbb
les
and
lret
dec
sbb
gs
cmp
loop
xchg
cltd
dec
push
jmp
dec
fwait
cld
int
adcl
xchg
test
jge
iret
movsb
out
push
adc
jg
cmpsb
pushf
and
fmuls
adc
subb
push
xchg
cmpsl
dec
loopne
xor
mov
iret
mov
inc
clc
pop
loope
mov
out
push
mov
mov
sarb
lods
mov
sub
loope
xchg
mov
mov
ljmp
cltd
pushf
jecxz
mov
stos
pop
pop
dec
sahf
mov
pop
loopne
flds
ljmp
lods
test
leave
inc
sbb
fisubs
and
jmp
in
loopne
negl
push
cmp
fwait
int3
adc
cmp
sub
in
fdivrs
aad
call
push
nop
cmp
mov
jnp
push
push
jl
fs
cmp
fs
and
cli
stc
movsb
add
andb
mov
fs
out
shll
push
fwait
rcl
stos
mov
inc
xor
or
pushf
jp
jns
bound
sub
repz
dec
push
xchg
subl
jne
add
inc
push
arpl
outsb
push
and
sub
jg
std
inc
mov
lods
loope
jns
or
add
xor
decb
ja
xchg
inc
jmp
in
adc
pop
rclb
xchg
jecxz
mov
nop
jge
shll
repz
sbb
test
pop
pop
xchg
xchg
or
pop
in
popa
pop
jbe
cmp
fwait
dec
pop
push
sub
ja
and
psubb
out
dec
mov
mov
cwtl
xchg
xchg
mov
out
ja
inc
mov
jl
mov
test
jb
jmp
iret
in
andb
sbb
or
icebp
pop
scas
test
jmp
mov
cmp
pop
test
mov
mov
sahf
popf
lret
jg
lods
sub
cmc
fisttpl
sbb
movsl
jbe
mov
pop
imul
pop
jns,pn
cmp
mov
icebp
aad
test
mov
outsl
stos
ret
jbe
js
lods
or
insl
mov
sub
imul
int
test
inc
arpl
popa
or
xor
mov
mov
push
mov
cmp
movsb
in
sbbb
int3
or
cmp
cltd
fsub
push
cmpsb
lods
inc
stos
or
jb
dec
sub
jp
mov
pop
aad
ljmp
sahf
xor
ret
inc
insb
inc
xlat
nop
sub
lcall
pop
xchg
push
iret
movsb
mov
ss
aam
stos
lret
push
mov
outsl
jp
cmpsl
or
shll
push
imul
jnp
push
lea
xchg
lods
fwait
nop
std
and
cmp
sbb
js
xor
fs
iret
es
cmp
pop
xchg
lcall
mov
xorl
decl
out
rclb
in
iret
es
icebp
push
jbe
and
push
and
lods
pusha
sub
cld
pusha
pop
sub
repnz
sbb
sbb
cltd
clc
adc
ja
fxch
outsl
jb
movsb
std
add
adc
cmp
insl
stc
cmpsb
add
cmp
inc
mov
xor
aas
iret
pop
in
jns
jns
sbb
mov
cld
pop
or
popf
mov
js
mov
push
addl
mov
les
and
push
stc
cmp
cs
in
addl
mov
mov
inc
mov
push
push
cs
xchg
sub
sbb
jle
out
popf
xchg
in
insb
loope
lcall
dec
push
push
jg
daa
push
push
call
push
jno
mov
jne
ret
mov
adc
sbb
sbb
popf
pop
loopne
fcoms
or
into
mov
xchg
dec
dec
mov
std
mov
or
push
push
ljmp
cwtl
movsl
stos
aas
js
fnsave
jle
cli
jnp
xor
xlat
jl
add
js
dec
loope
aam
or
mov
shl
lcall
lods
adc
pop
je
xchg
dec
les
into
call
mov
cmp
shl
mov
stc
int3
xchg
pop
nop
inc
add
jmp
cmp
outsl
ret
xor
outsb
and
fbld
mov
mov
ja
ret
mov
sbb
sbb
mov
dec
pusha
mov
jae
scas
lods
pop
push
push
hlt
adc
xor
loop
xchg
dec
mov
je
xlat
repz
jns
xor
dec
jle
aad
lret
sbb
xlat
lret
push
or
ds
scas
filds
nop
jns
roll
inc
mov
or
aaa
inc
adc
add
popa
movsb
push
mov
ss
icebp
mov
inc
and
test
dec
adc
mov
mov
inc
add
lods
push
push
sbb
fldt
jecxz
je
sbb
sub
aas
jns
rolb
jns
push
fistpll
xchg
cs
pusha
xor
adcl
flds
xchg
mul
lods
popa
xchg
sarl
lret
pop
frstor
or
test
out
ljmp
cmp
cmpsb
fnstsw
and
sub
clc
lock
repnz
mov
cltd
mov
fsubl
das
xchg
enter
ret
push
mov
inc
cmp
mov
adc
imul
inc
ja
dec
adc
ret
jne
fwait
adc
fwait
or
add
mov
mov
outsl
or
aam
mov
pop
and
in
cwtl
out
sbb
mov
lret
sti
je
sub
or
cltd
sbbl
mov
fs
xchg
sbb
push
adc
add
and
je
jnp
sbb
inc
xor
ss
jmp
cmp
pusha
fcompl
mov
sbb
dec
cli
lods
add
cmp
xchg
rcr
push
adc
insl
cltd
in
jae
pop
into
push
sbb
pop
idivl
xchg
xorb
push
ljmp
rsqrtps
movsl
mov
add
outsb
jns
pop
stc
mov
mov
int3
cs
imul
cmp
push
sub
inc
xor
fnop
mov
pop
jno
mov
sub
int
stc
adc
mov
jge
imul
dec
push
mov
pushf
fucomi
sub
inc
in
das
dec
stos
or
sbb
pop
sub
adcb
leave
icebp
jmp
fstl
inc
adc
cmc
imul
lods
and
or
lods
xchg
outsb
pop
aas
loop
repz
les
ret
movsb
fcmovne
xchg
out
jmp
add
sub
nop
xor
fisubrs
fnstcw
or
push
stos
sti
or
sub
jnp
call
xor
insb
jbe
jle
inc
aas
shll
jae
lret
mov
stc
ds
stc
xchg
cmp
fcompl
stos
movsb
out
xor
sub
lret
mov
adc
or
jbe
out
and
movsl
stos
lcall
dec
adc
movsl
jl
sbb
mov
data16
mov
push
push
imul
cmpsl
push
mov
lahf
dec
and
push
adc
inc
ljmp
lods
lea
stc
jle
sub
sbb
arpl
roll
or
dec
jmp
mov
dec
int
mov
flds
push
shll
push
sub
xor
jnp
lret
jo
pop
ljmp
hlt
mov
into
jo
mov
movsb
aaa
mov
movsb
xchg
jecxz
adc
aad
imul
mov
inc
dec
and
push
jne
loopne
mov
pushl
sub
lds
out
add
add
dec
mov
loopne
xchg
sbb
ret
pusha
stc
fsubrl
cld
xor
cmp
add
ret
into
mov
bound
xchg
mov
pop
mov
xor
out
inc
push
jmp
jne
pop
jl
sub
cmp
jo
jle
mov
out
push
rorb
test
xchg
lods
imull
jo
xchg
psubb
xchg
cmpsb
shr
sub
in
jg
out
pushf
and
lahf
sub
jnp
cmp
scas
in
sbb
stos
pop
adc
fwait
inc
pop
inc
cmpsb
cmpsb
addr16
mov
stos
mov
mov
xor
xor
cwtl
imul
aas
add
xchg
daa
sub
push
cld
xchg
and
sbb
inc
push
arpl
jnp
out
dec
jmp
daa
jge
mov
sbb
adc
sub
inc
sahf
cltd
bound
in
pop
cld
ja
fstpt
out
add
xor
repz
cwtl
lcall
out
or
call
xchg
rcrl
mov
cmp
ds
sub
sbb
mov
pop
inc
sahf
out
addr16
jmp
test
push
cmp
cmp
test
movsl
outsl
in
pushf
pop
pop
jge
ficoml
jmp
fisubl
sarl
pop
mov
xchg
bound
repz
test
jle
and
mov
rcl
repz
xor
cmp
arpl
jns
mov
jnp
pop
sub
fbld
hlt
or
scas
das
lret
mov
popf
js
shlb
pop
pop
jle
pop
mov
mov
push
outsl
jecxz
inc
bound
cmpsl
ds
mov
cmpsb
imul
dec
jns
inc
mov
mov
out
cmpb
mov
fistpll
out
pop
insl
xor
mov
subl
mov
lret
inc
and
loop
jno
xchg
js
xchg
add
mov
popa
inc
lods
cmp
sub
dec
ja
inc
mov
loopne
xchg
sahf
cmpl
in
out
imul
pop
dec
pop
cmp
fs
call
test
pop
sarl
pop
xorb
loop
sbb
dec
cmp
aam
aam
mov
rolb
es
mov
ds
jle
adc
cmpb
adc
pushf
dec
jl
insl
pop
stos
into
aaa
js
and
inc
scas
sbb
imul
addb
orb
mov
repnz
lea
aaa
jno
add
jp
add
lods
or
push
lret
inc
rcr
pushf
pop
sti
es
jecxz
inc
cmpsb
or
imul
push
fidivl
lahf
ficompl
jnp
sbb
jo
pusha
mov
xchg
xor
mov
mov
and
pop
push
stos
mov
pop
push
pop
sti
mov
arpl
std
es
push
popa
push
imul
pop
push
adc
rorb
in
jmp
ss
aam
inc
pop
fldcw
nop
pop
jae
sbb
fnstcw
and
aad
sahf
test
cltd
xchg
push
ficompl
and
xor
cmpsb
adc
ret
enter
sub
insb
dec
pop
movsl
pop
daa
imul
rcll
xchg
and
mov
leave
fneni(8087
mov
dec
push
xchg
add
fstpl
int3
mov
and
mov
nop
in
xor
popa
lret
push
ljmp
neg
cld
xor
dec
mov
test
jl
aam
mov
adc
in
jnp
jbe
adc
dec
mov
sub
push
cmp
sbb
movsb
dec
sbb
hlt
arpl
inc
mov
fs
jmp
and
enter
dec
test
test
jl
movsl
jbe
push
mov
lret
int
pop
lcall
mov
mov
clc
dec
stc
xor
lret
add
inc
pop
pop
out
cld
xchg
add
in
int
lret
out
mov
xor
fadd
adc
mov
fcom
jg
test
addl
orl
add
lcall
add
mov
pushf
lret
std
cmp
test
mov
jge
mov
xchg
dec
add
in
imul
inc
popa
push
loope
dec
fildll
stc
mov
xor
movsl
mov
jmp
xchg
push
rorl
aas
in
pop
mov
fsts
pushf
pop
lods
test
xor
mov
cmp
dec
cmpsb
sub
bound
xor
rclb
fdivp
mov
test
ret
inc
leave
lods
push
pop
sbb
call
in
into
cwtl
dec
adc
push
fstp
int3
push
mov
stos
mov
or
xorb
js
mov
push
adc
call
in
fs
mov
and
test
jae
and
scas
xchg
ljmp
icebp
adc
pop
je
push
cmc
and
incl
aad
xchg
dec
insl
out
and
xchg
and
adcb
dec
xchg
dec
mov
divb
mov
xor
clc
jnp
or
push
sbb
test
xchg
xor
xchg
mov
popa
imul
sahf
mov
lock
or
jp
fs
popf
or
inc
cmp
rcrb
xor
shrl
xchg
js
loop
pop
mov
push
xchg
ror
pop
dec
xchg
in
sbb
aaa
scas
insb
mov
push
inc
jno
inc
xchg
sub
ficoml
es
loopne
inc
adc
stos
fsubrp
push
fiadds
jl
push
mov
mov
leave
cmp
xchg
mov
push
outsl
bound
roll
cli
stos
mov
mov
jne
push
sub
sbb
js
jmp
sbb
sub
out
mov
test
lret
in
sti
sub
inc
add
adc
les
or
xchg
dec
and
push
jecxz
lea
in
enter
in
les
xlat
sub
or
pushw
mov
enter
divl
mov
std
mov
mov
push
sbb
and
add
out
pusha
sbb
sbb
test
inc
xchg
pop
fldl
mov
mov
or
sahf
push
fucomp
mov
dec
lret
jmp
sub
in
pop
int
fdivl
jmp
and
and
sub
mov
js
dec
out
cld
xchg
nop
dec
mov
pusha
cld
insb
mov
pop
lods
xchg
les
imul
add
sbb
in
and
lahf
sbb
adcb
sbb
into
sub
pusha
pushf
lcall
lods
jg
lea
xor
sbb
mov
push
repnz
stc
inc
mov
jne
pusha
lahf
stc
inc
pop
inc
sbb
cld
sbb
mov
pop
mov
sar
fldt
fsubs
popf
mov
ljmp
adc
cwtl
ret
push
sahf
dec
adc
adc
ja
lds
add
test
jg
mov
rorl
jns
fists
lock
sub
xlat
out
pop
jnp
xor
lods
testl
std
out
arpl
imul
mov
mov
fs
mov
inc
gs
loope
das
ljmp
xor
das
push
and
jae
repz
sbb
mov
test
ret
push
pop
inc
shlb
int3
je
xor
fsubl
dec
scas
lret
in
lods
xor
adc
xor
adc
stc
sbb
ds
sbb
push
lds
lcall
in
mov
int
shll
addl
pop
inc
ret
inc
iret
pop
ljmp
xor
aaa
test
test
cmovno
and
les
dec
sbb
test
mov
add
mov
xor
cmp
sub
xor
pop
adc
push
clc
xchg
mov
call
jae
loop
sbb
inc
adc
vmovapd
and
loope
int3
pop
das
rcr
shll
jo
loop
pop
adc
sub
mov
sbb
and
fisubrs
icebp
test
adc
test
aas
lods
sub
and
and
lods
mov
adc
mov
in
rcl
imul
imul
xor
enter
inc
in
enter
ret
mov
xorb
cmp
push
movsl
sbb
push
test
adc
mov
lds
pop
inc
or
daa
ds
and
fcompl
push
mov
aad
ret
pushf
mov
out
out
mov
cmp
xchg
daa
mov
xlat
lret
pop
or
mov
je
inc
mov
out
cwtl
mov
jno,pt
and
pop
push
les
xor
out
push
nop
ja
rcrb
js
xchg
test
mov
push
sti
push
xorl
repz
pop
adc
shrl
mov
mov
mov
loop
shll
and
rcrb
outsb
dec
adc
loop
sub
mov
lods
les
popa
xchg
and
out
push
xor
sbb
mov
movsl
ds
cli
mov
jle
arpl
and
fstpl
out
xchg
mov
jmp
lret
ffree
push
cmpsb
test
pop
daa
iret
clc
add
xchg
pusha
adc
fiadds
and
testb
pop
inc
popa
pop
fcoml
in
outsb
xor
loopne
jp
sbb
and
xchg
dec
leave
pop
xchg
in
sbb
mov
mov
pop
push
adc
lahf
addr16
mov
sarl
adc
xchg
ret
add
insb
inc
add
sbb
loop
scas
cmp
jmp
or
out
jle
fimuls
icebp
sub
add
sbb
gs
in
push
imul
pop
jb
sub
lock
lcall
jbe
mov
decb
or
lods
mov
lahf
mov
jp
cltd
bound
outsb
test
test
int
fimull
dec
fiadds
xor
repz
jge
test
mov
xor
push
pop
jp
lret
repnz
cmp
inc
dec
stos
xchg
sbb
sti
ss
rcr
scas
repz
xor
push
pop
push
cmpsl
cld
pop
fimuls
mov
aas
mov
adc
pop
xchg
aam
jae
pop
sti
pop
clc
adc
xchg
dec
xchg
push
cmp
ja
mov
popa
pop
stos
add
inc
ret
or
lods
mov
imull
mov
fldt
jp
in
adc
loopne
jp
push
jmp
movsb
lcall
xchg
enter
sub
fiadds
mov
and
mov
mov
popf
jmp
jns
mov
xchg
dec
movl
push
mov
sub
aaa
nop
test
xchg
popa
sahf
jmp
cmp
cmp
and
inc
cmc
or
stos
int3
pop
cltd
testl
fadds
daa
push
mov
mov
insb
mov
dec
lahf
loopne
faddl
std
int
push
xor
bound
push
icebp
scas
icebp
les
ret
mov
mov
adc
adc
push
loop
fwait
leave
xor
aaa
jb
dec
sahf
inc
cmp
push
sub
call
mov
add
mov
mov
mov
lcall
cmp
daa
or
xorb
push
or
dec
test
push
add
je
data16
test
fldl
xor
mov
jnp
pusha
adc
dec
sbb
sbb
add
out
mov
int
daa
push
in
jne
cmp
mov
jecxz
sbb
mov
or
insl
adc
das
mov
xchg
xor
shl
dec
cmp
mov
aaa
fs
pop
in
frstor
in
xor
fildl
mov
add
sub
mov
mov
dec
inc
cltd
inc
adc
cmp
mov
lods
pop
scas
push
add
stos
add
jb
push
jl
lcall
fsubrs
lcall
fistpll
sbbl
insb
lahf
dec
test
xchg
xor
mov
movsb
xchg
pop
xchg
scas
mov
cmp
or
mov
or
mov
loopne
adc
into
pop
and
mov
sbb
loop,pn
ljmp
icebp
and
xor
mov
fmuls
inc
push
test
cld
dec
lock
pop
mov
adc
insb
orb
mov
iret
mov
xor
rorb
lods
xor
jmp
sub
js
pushf
jbe
aad
fucomp
adc
xchg
pop
mov
mov
stos
xchg
pop
enter
shlb
js
jo
push
inc
adc
sarb
out
cltd
pushf
push
cmp
inc
cld
mov
cld
dec
hlt
jl
xchg
std
lods
or
sub
cwtl
xor
push
inc
repnz
lods
ror
and
cmp
adc
inc
adc
mov
fldlg2
scas
dec
dec
or
inc
push
cld
int
enter
stc
ja
mov
dec
dec
adc
aam
sbb
repz
ja
sbb
aaa
push
in
push
imul
mov
adcb
sbb
sahf
pop
pop
cmpl
mov
neg
sbb
adc
pop
sahf
cwtl
cld
and
shl
cmp
push
mov
add
and
add
adc
jb
xlat
fisttpl
lret
inc
mov
ficoms
pop
cmp
fwait
push
or
mov
sbb
mov
mov
adc
jecxz
xchg
mul
mov
or
push
ret
imul
push
cltd
inc
push
popa
adc
sub
push
sub
outsb
cmpsb
psubd
repnz
xchg
dec
rorb
stc
pop
leave
xor
sahf
lret
daa
sti
clc
mov
leave
test
jle
cmp
jmp
add
pop
inc
in
sbb
jmp
push
or
push
leave
mov
push
jnp
test
jp
mov
mov
adc
pop
mov
rcl
mov
sub
xchg
insb
nop
sbb
popw
pop
pop
mov
sbb
jecxz
add
mov
test
sbb
inc
xlat
and
lock
insl
mov
mov
test
inc
insb
stos
pop
arpl
ja
xchg
ss
nop
fldcw
mov
cmpsb
fdivrs
stc
dec
lret
or
sbb
and
pushf
cmp
push
and
arpl
cmp
or
rolb
jae
repnz
sub
iret
sbb
outsl
pop
cmp
out
pop
mov
sbb
pop
shll
mov
dec
shlb
gs
dec
add
mov
out
mov
and
lea
sub
mov
testb
aaa
call
fs
mov
mov
aam
ret
xor
inc
add
pop
cmp
xchg
vunpcklps
and
xchg
xor
repz
and
push
mov
movsl
mov
jge
mov
lods
fwait
push
icebp
and
cmp
jne
jp
sbb
sub
lods
xor
enter
ret
data16
shlb
inc
cmp
rorl
shrb
jns
mov
xchg
xor
mov
cmpb
cmp
sahf
adc
fisttpll
mov
jecxz
pop
das
popf
mov
xor
daa
out
jno
jmp
movl
fnstcw
aam
mov
mov
pop
mov
jmp
fdivs
mov
test
mov
insl
ret
pushl
hlt
sbb
xor
push
sbb
pop
ja
sbb
adc
sarl
xchg
xchg
in
shlb
in
push
stos
inc
out
sahf
sbbl
sub
pop
je
adc
lahf
stc
push
loopne
decb
jb
add
les
nop
mov
sbb
mov
mov
adc
jl
mov
inc
dec
aas
push
dec
add
mov
jecxz
inc
cmp
mov
push
and
push
sub
setl
or
xchg
pusha
insl
jge
or
sub
jmp
orl
mov
lock
dec
int
push
sub
jle
push
mov
jmp
add
cmpl
mov
stc
test
popa
cmp
je
cmp
jmp
pop
sub
pop
test
cs
xor
idiv
ret
adc
cmp
movl
or
mov
nop
mov
cmp
or
orl
and
pop
sub
xor
test
scas
jmp
hlt
pop
xor
je
adc
fbld
jns
lahf
jae
pop
das
in
in
inc
cmpl
leave
cmp
repnz
add
pop
mov
cmpsl
movsl
push
cwtl
das
pusha
inc
mov
adc
mov
mov
xor
fstpt
daa
loop
shll
les
les
je
icebp
inc
test
add
inc
jle
sub
andb
movsl
pop
idivl
or
mov
test
mov
aas
jno
and
mov
and
gs
adcl
lods
push
and
lods
sti
daa
mov
mov
cmp
or
cs
pop
xor
jae
add
loop
out
adc
loope
xlat
fwait
mov
xchg
sub
fisttpl
adc
adc
addb
aas
imul
in
sbbb
bound
pop
out
cwtl
mov
repz
addr16
sar
aad
jecxz
sbb
std
xor
mov
inc
and
mov
mov
push
fistpll
xchg
cmp
mov
sarb
xchg
push
bound
cmpsl
aaa
sahf
mov
jnp
out
jl
repz
lds
push
iret
out
jle
pop
fldpi
shlb
mov
addr16
pop
sarl
jecxz
cmp
or
mov
inc
or
stos
outsb
ror
push
sub
loopne
sti
pop
jbe
jecxz
add
sub
mov
outsb
mov
in
insb
mov
js
outsl
mov
roll
pop
movsl
pop
cld
loopne
mov
fdivp
dec
xor
shrb
lret
pop
aam
or
cmc
outsl
std
xchg
scas
dec
adc
adc
aaa
xchg
cmp
push
mov
mov
pop
mov
fwait
cmc
std
daa
dec
pop
idiv
add
lea
movsb
sbb
xor
test
in
adcb
jmp
push
push
jns
into
fisttps
cmp
iret
sbb
js
outsb
push
adc
aas
ret
jae
popa
and
ret
cwtl
cmp
jno
test
int3
jne
lea
or
rorl
mov
std
aam
push
ss
pop
negl
jge
nop
es
lods
mov
cmc
xor
imul
mov
mov
fimull
adc
and
push
fsubrl
mov
out
add
test
pop
test
lock
lcall
pop
cmp
scas
insl
or
and
das
sbb
mov
adc
adc
dec
xchg
jle
sarl
adc
pop
dec
sti
shlb
andb
cmp
fidivrl
push
and
push
mov
sbb
out
repnz
test
mov
int3
test
inc
ds
mov
push
jbe
aas
xchg
jg
cmpb
popa
rcrl
adc
dec
scas
out
or
daa
mov
mov
pop
adc
mov
stos
int3
cmp
add
or
mov
ret
sbb
jp
and
pop
sub
rclb
bound
or
sarb
jle
xor
sub
or
xor
ss
testb
cmp
movsl
mov
push
mov
jae
es
mov
imul
rorl
jbe
data16
sub
adc
js
call
int3
cwtl
mov
icebp
xchg
call
movsl
shll
dec
in
insl
test
mov
pop
jae
xor
and
xchg
clc
lcall
mov
sbb
loopne
jb
jns
nopl
inc
inc
hlt
daa
mov
movsl
and
and
cltd
insb
test
pop
mov
jle
push
test
cmpsb
add
mov
jmp
adc
lcall
pop
in
popa
mov
stc
jb
in
popf
test
sahf
mov
xor
lods
into
pop
lock
inc
sar
push
mov
mov
xor
imul
movswl
sbb
clc
dec
hlt
sti
sbb
push
movsb
jge
mov
lahf
mov
dec
call
fcom
xchg
sbb
rcr
xchg
fmuls
inc
test
dec
inc
gs
mov
sub
cli
xor
mov
push
push
push
ja
orb
mov
xor
cltd
inc
push
ljmp
sbb
shlb
mov
in
jo
xor
int3
hlt
into
scas
add
out
add
sbb
addl
fistps
sub
adc
stc
adcb
jbe
push
inc
gs
lock
xorl
xchg
fidivs
incb
negl
pop
mov
mov
xchg
dec
jbe
mov
dec
jnp
pop
scas
and
mov
xchg
dec
dec
cmp
mov
call
xorl
sub
cmp
jp
loop
movsl
mov
cli
in
fcomi
push
sub
shr
popf
cmc
insb
clc
jae
lret
mov
xchg
lsl
sub
fnstenv
hlt
loopne
or
outsb
outsl
pop
mov
pop
pusha
in
mov
adc
imul
push
and
shll
jl
stos
and
outsb
push
push
iret
leave
sbb
mov
icebp
adc
mov
sub
inc
lods
in
mov
pop
jge
inc
and
imul
fsubp
add
push
jnp
popf
add
or
pop
mov
sub
push
and
push
ret
bound
sub
and
ficompl
ja
mov
sbb
nop
mov
in
mov
loop
pop
xchg
jnp
sub
insb
call
inc
push
pop
fstpl
or
and
cmpsb
push
pop
add
sbb
mov
call
ja
in
sbb
inc
jecxz
or
mov
repz
xor
inc
push
dec
mov
add
inc
xor
jbe
cli
mov
sbb
mov
and
xor
or
mov
jbe
scas
loop
call
mov
or
rol
mov
scas
fists
pop
and
xor
pop
pop
push
mov
aaa
int3
xchg
adc
sub
std
sbb
adc
test
sub
xor
mov
lret
pusha
sti
aas
cld
sahf
aas
inc
pop
push
xlat
int
xor
sub
into
push
test
outsl
stos
adc
stc
cmp
or
inc
push
mov
mov
lock
and
sti
lahf
jnp
xor
pop
das
lcall
xchg
sbbb
nop
xchg
jno
ss
xor
out
adc
push
add
out
xchg
int3
sub
stos
daa
xor
test
cmp
cld
push
mov
mov
inc
adcl
push
xchg
cmp
mov
shrl
add
mov
pop
mov
in
clc
dec
fabs
pop
fdivrp
cmp
mov
jb
add
push
popf
rol
in
popl
cmpsl
scas
and
fwait
into
sahf
mov
jno
inc
iret
std
icebp
jg
cltd
inc
and
adc
mov
fwait
add
cmp
and
xchg
pop
xor
xor
int3
xchg
add
pop
test
pop
rcll
inc
and
xchg
jge
outsl
add
mov
push
pop
and
mov
shlb
sub
xchg
pop
push
popf
cmpb
popa
and
sahf
es
addr16
mov
adc
push
push
sbb
dec
lods
enter
cmpsl
mov
mov
pop
outsl
das
xor
dec
pop
cmp
inc
pop
mov
je
add
sub
in
lret
test
dec
jp
push
test
stos
push
mov
test
stos
push
and
aaa
mov
pop
call
xor
mov
add
nop
lret
repz
repz
jle
ret
aad
sbb
in
add
mov
inc
fwait
pop
xchg
cltd
fmuls
cld
mov
mov
cli
imul
nop
adc
xchg
mov
push
push
cli
sub
mov
cld
xchg
pop
test
in
out
add
es
sub
or
imul
bound
xor
add
inc
cmp
fildl
loopne
and
and
push
je
pushf
mov
fsts
push
out
mov
sbb
xchg
repnz
and
dec
insl
add
dec
mov
iret
lahf
push
push
sub
mov
push
jge
mov
testb
dec
sub
fsub
rol
clc
or
sub
mov
mov
aad
mov
fnstenv
push
or
insb
daa
nop
sub
mov
les
popf
cmpb
stos
pop
aas
jle
insb
addr16
xchg
fistpll
adc
jle
push
out
pop
sub
cmpb
lahf
cmpsb
sysexit
xlat
ret
pop
push
pop
pop
mov
sub
imul
and
dec
xchg
pushf
popf
pop
imul
xchg
adc
adc
dec
outsl
lock
mov
xor
add
incb
jmp
cmp
adc
cli
mov
loopne
fs
das
iret
nop
ljmp
call
and
popa
fldl
stos
xchg
sti
into
dec
jo,pn
nop
mov
cmp
loopne
bound
testb
hlt
jb
sahf
hlt
lcall
mov
xor
ljmp
dec
in
fwait
lret
sub
sbb
pop
test
mov
mov
dec
inc
xor
fldenv
movsl
jle
inc
adc
pop
iret
sub
or
rclb
jmp
aad
bound
int3
or
sub
and
inc
in
scas
icebp
iret
fstps
mov
push
mov
movsb
xor
sarl
lds
popa
or
push
adc
les
add
mov
jg
fdiv
test
dec
sub
mov
shl
add
test
and
jae
mov
push
mov
sti
pop
xor
xlat
negl
cmp
dec
xchg
outsb
and
in
pop
push
fmull
stos
shl
sbb
divl
ljmp
stos
xor
cltd
fmuls
mov
xchg
sub
jo
in
pop
pop
insb
adc
fstps
push
in
data16
cmp
repz
xchg
jbe
jo
loopew
pop
fs
add
adc
insb
cmp
mov
sub
popa
scas
xor
cld
push
xchg
inc
rol
mov
or
mov
int3
add
inc
dec
xchg
das
cmp
lcall
jne
dec
cmpsb
fs
adcl
movsl
pop
cmp
sbb
int
aam
push
iret
xor
stos
sbb
dec
dec
and
add
or
jg
popf
mov
xor
ret
pop
pop
cld
mov
or
cmp
pop
sbb
lods
inc
jmp
lock
dec
insl
dec
add
enter
add
adc
ret
xchg
sahf
push
and
and
lret
sub
mov
mov
js
adcb
imul
jns
xor
xchg
icebp
frstor
leave
adc
enter
inc
jns
mov
mov
push
jecxz,pn
and
xchg
ffreep
inc
dec
bound
sbb
shll
sbb
xor
and
mov
es
pop
sub
jne,pn
fdivrs
jmp
push
arpl
add
aad
in
cmp
jle
int
push
xchg
inc
in
outsl
and
or
out
sbbb
fadds
xchg
outsl
xor
cmp
sbb
cltd
push
mov
vpunpckhqdq
mov
inc
cmpsl
movsb
outsl
xchg
xchg
scas
inc
loop
mov
pop
cmpsb
xor
scas
xor
int
mov
mov
icebp
fldl
cs
clc
inc
lret
outsl
jns
lods
cmc
les
fnsave
cmp
mov
bound
inc
inc
out
add
adc
push
jno
lahf
cmp
repz
repnz
push
or
xor
call
pop
hlt
xchg
into
mov
or
inc
mov
push
mov
sbb
shrb
xor
int
fs
roll
cmp
es
fsub
xor
lret
scas
dec
ret
inc
cmp
pop
fs
mov
mov
pop
xor
mov
int
pushf
push
xor
and
cwtl
lods
es
cmp
cltd
mov
push
add
cmpsl
jb,pn
or
movsl
jge
push
das
scas
push
push
cmp
mov
jmp
push
stc
inc
mov
loope
pop
fimull
inc
mov
enter
jge
cmp
loop
pop
push
lcall
sahf
not
push
mov
aam
lahf
jne
es
movsb
dec
std
pop
xchg
popa
and
js
or
push
inc
ret
mov
sbb
dec
stos
fstp
mov
mov
ss
push
ds
divl
movsl
mov
push
push
dec
pop
aam
fbld
mov
div
mov
push
jge
mov
mov
test
inc
inc
sbb
ja
data16
out
in
iret
jle
subl
mov
add
mov
cmp
or
mov
cmpl
fyl2x
insl
lret
fistpll
lds
rcrl
push
fstpt
rcrb
adc
or
movsb
lea
sbb
jns
sbb
fcoml
ss
xchg
jle
xlat
sbb
jle
mov
cwtl
add
mov
jmp
ret
les
imul
jns
in
pushf
lcall
ret
test
mov
lret
cmpl
xor
ror
ds
sbb
call
loop
mov
fistpl
shrl
fldcw
aad
sahf
shll
push
adc
xchg
mov
mov
rolb
inc
jl
popf
dec
scas
pop
lret
data16
xchg
add
xor
popf
mov
cmp
mov
movsb
xlat
adc
sbb
cmp
gs
mov
mov
popf
sub
clc
int3
repnz
dec
in
lcall
add
loope
mov
scas
mov
mov
mov
cmpsb
aaa
fistpll
and
cmpsb
add
mov
xchg
xchg
mov
ret
jge
adc
or
mov
cld
cmp
aas
inc
push
movsb
jbe
outsb
cmp
xchg
and
fdivl
push
sbb
ret
mov
pop
sub
jecxz
push
aas
popa
push
mov
xor
sbb
movsl
sbb
in
mov
cmpsb
jno
or
cltd
lcall
loope
lock
and
mov
fstp
adc
mov
jmp
push
mov
sub
inc
insl
mov
pushf
fs
jmp
mov
mov
and
pop
add
loopne
fstl
leave
mov
inc
xor
xchg
jmp
jo
aas
adc
or
and
jecxz
dec
sub
call
push
xchg
adc
cmp
into
or
add
jge
shll
push
dec
hlt
jecxz
sarl
fyl2xp1
dec
aad
push
mov
xchg
fnstcw
xor
mov
lret
xchg
mov
or
or
inc
sarb
popf
rcrl
push
mov
mov
rcrb
adc
pusha
insl
fsubrs
das
add
pop
jecxz
mov
cwtl
aad
test
into
jae
shll
sbb
les
dec
js
cld
inc
lods
pop
stc
mov
push
sti
pop
xor
outsb
aaa
cmp
or
pusha
mov
mov
mov
rcl
push
mov
or
rdpmc
fdivl
jno
jo
xor
in
ret
jae
mov
cmc
enter
cmpsb
add
jl
cmp
fbld
cmpl
loopne
insl
scas
cmp
aaa
ljmp
sub
inc
inc
lcall
push
push
mov
push
add
sbb
fnstsw
pop
add
ret
hlt
pop
push
dec
das
sahf
fdivrl
pop
inc
xlat
addr16
xchg
loope
fisttpl
in
ss
cmp
or
stc
jmp
ds
repz
pop
pop
psraw
adc
push
cwtl
in
mov
sti
jp
repz
inc
cmp
push
cmp
mov
lods
mov
fcoms
xchg
leave
js
popa
push
sub
call
fiaddl
pushf
int
dec
and
push
addb
lds
cmpsl
push
adc
test
test
sbb
call
and
mov
out
mov
insl
aaa
jecxz
je
sarb
test
clc
dec
inc
push
js
pop
cmc
cs
and
les
ret
sarb
push
mov
add
repz
xlat
stos
push
mov
push
push
xchg
adc
mov
add
fsubs
push
dec
dec
shll
xchg
std
cli
sbb
and
in
mov
or
pop
loopne
xchg
cmp
popf
jno
xchg
leave
fildl
push
xchg
fmuls
int
xchg
push
pop
xchg
test
ljmp
push
scas
mov
stos
pop
loope
jg
mov
xlat
xchg
loop
lea
xchg
pop
xchg
fdiv
aaa
addr16
and
cli
add
push
iret
and
mov
sub
sarl
jecxz
gs
xchg
xchg
mov
and
shlb
pop
xchg
mov
aam
lds
vmwrite
imul
lock
inc
push
stos
jmp
les
cltd
or
jl
jl
inc
mov
sbb
cld
sbb
aad
inc
test
sahf
test
pop
push
mov
pop
stos
mov
jmp
fwait
in
fisubrl
jl
xor
dec
mul
pop
out
cmpsb
cmp
xor
out
and
adc
aas
pusha
call
leave
stos
pop
mov
mov
sub
std
sub
stos
scas
cmp
loopne
mov
stc
or
cmp
pop
sbb
push
inc
dec
or
cmp
or
rcrl
cltd
inc
xchg
divb
subl
or
outsl
cli
cmp
push
dec
and
hlt
push
enter
add
in
jns
in
add
mov
pop
and
ret
insb
jp
gs
ds
cwtl
bnd
inc
push
iret
shlb
stos
out
daa
loope
out
js
cmp
fmulp
inc
sub
jle
mov
or
jnp
dec
je
sarl
hlt
rcll
movsb
shr
lahf
mov
imul
jae
pop
xor
add
sbb
mov
jmp
dec
cmp
xor
sub
rcrb
jecxz
jnp
into
push
push
inc
mull
fisttpl
popa
mov
inc
repnz
mov
fisttpl
fsubrs
int
out
fs
jp
add
add
fs
or
hlt
in
icebp
pop
sub
aad
cld
mov
gs
push
ret
mov
into
mov
test
add
test
stos
dec
jne
icebp
pop
push
inc
jno
movsl
mov
cwtl
movsb
jb
jne
add
mov
sahf
insb
add
fs
out
nop
cmp
les
inc
or
and
push
cmpsb
cmp
xchg
or
gs
push
add
mov
ss
loope
divb
movsb
push
arpl
sub
jo
pop
sub
nop
loope
inc
std
lret
test
outsl
je
gs
ret
mov
mov
pop
inc
dec
mov
or
inc
sarl
add
adc
cmp
lea
iret
add
xchg
and
fs
repnz
sub
xor
sub
and
cmp
push
int3
jg
stos
iret
enter
fimuls
aaa
xchg
lds
fsubs
rcll
test
inc
mov
ljmp
cltd
mov
adc
adc
jmp
sub
cmp
movsl
mov
scas
cld
orb
sub
or
jecxz
inc
mov
mov
and
and
push
add
loope
movsl
aaa
mov
dec
ret
call
push
inc
pop
add
and
xor
loop
scas
daa
repnz
xor
inc
ret
int3
mov
or
fldcw
xor
mov
mov
les
mov
mov
lret
sub
std
stos
push
mov
mov
push
xchg
scas
es
inc
dec
mov
xchg
popf
jnp
inc
dec
xchg
nop
jmp
out
icebp
xchg
or
outsl
xchg
in
push
mov
loope
sub
mov
stos
xchg
push
pop
loop
sbb
jmp
sti
jno
pop
shrl
ja
in
or
jbe
adcl
fbld
mov
test
cli
push
add
imul
add
mov
jo
sub
xchg
xor
insb
pop
call
cmp
adc
jo
aad
sbb
mov
lcall
les
or
adc
cld
clc
jg
sub
aad
inc
and
shrl
add
or
int
xor
xor
rolb
adc
pop
add
aad
lock
test
or
cmp
sbb
and
sub
cltd
lds
jmp
push
cmp
mov
inc
jne
std
popf
lods
mov
mov
lret
mov
inc
jno
inc
xchg
fbld
test
mov
lret
fimull
xor
cmp
lods
adc
cwtl
fldl2e
popa
lahf
imul
movsb
mov
movsb
lahf
movsl
imul
mov
js
xchg
or
adc
dec
std
cmp
ret
mov
ds
mov
jb
fstpt
cmpsb
mov
shlb
inc
sbb
ret
shll
or
and
daa
popf
pop
mov
fchs
imul
xor
cmp
in
xor
xor
outsl
and
push
clc
test
adc
jb
jmp
cmp
and
int3
inc
add
mov
rcll
sub
pop
sub
mov
and
adc
das
sbb
cmc
or
mov
lods
ss
cli
sub
xor
push
inc
and
push
nop
fcmovnbe
pop
jge
adc
ljmp
rcrl
and
fisttpll
mov
cmpsl
jne
fdivr
jno
or
sub
mov
push
adc
rcll
in
push
mov
cmpb
out
jb
mov
jmp
push
bnd
mov
and
fcoms
and
aas
mov
fldcw
popa
idivb
sub
dec
or
shrb
cmp
out
push
jmp
mov
pop
cmp
aam
cli
push
gs
scas
sbb
scas
rclb
xchg
ret
aam
mov
lea
cmc
inc
insl
jl
or
hlt
and
mov
mov
loope
adc
cmpsl
nop
cmpsl
adcb
sti
mov
fiaddl
jo
arpl
or
xchg
data16
xor
mov
stos
test
repz
arpl
jo
mov
mov
mov
sub
mov
ss
gs
movsl
mov
dec
pop
ret
add
xorb
fsubr
mov
test
imul
out
xor
and
push
mov
test
das
pop
pop
add
adc
mov
in
dec
dec
sbb
add
popa
shlb
test
push
jns
iret
sbb
push
inc
jmp
dec
addl
push
ss
pop
aas
adcb
mov
xor
lods
jp
xchg
or
out
jb
pop
jle
ds
data16
and
in
push
adc
test
dec
int3
insb
int3
lods
push
adc
xor
mov
lods
mov
push
mov
mov
imul
jne
stos
jns
add
test
inc
mov
push
mov
sub
mov
push
mov
push
push
pop
ret
cmp
popa
dec
add
cmp
pop
jnp
fwait
cmpsl
cmp
xchg
mov
sahf
sbb
adc
rcrb
push
xchg
xor
rcr
and
mov
jno
mov
les
inc
fisttpll
pop
sbb
or
mov
loope
fistps
pop
xchg
divb
push
hlt
xchg
pop
hlt
dec
push
xchg
push
insl
rcrb
fidivl
rdpmc
lock
ja
add
repz
mov
imulb
or
outsl
cmp
lods
push
adc
adc
stos
into
xor
and
rcrb
test
rcll
jl
je
int3
adc
in
lahf
les
cmpsb
into
cs
aas
mov
ds
dec
pop
sbb
loop
call
and
fsincos
test
daa
pop
sub
and
mov
repz
ja
and
aas
insl
push
das
lods
shl
add
dec
sub
pop
add
adc
sbb
mov
pop
mov
or
add
ss
mov
cli
dec
pushf
push
inc
imul
add
sbb
lcall
hlt
dec
push
pop
dec
dec
pushf
rolb
add
shrb
in
mov
out
mov
fsqrt
clc
out
jmp
ror
movsl
inc
ja
jne
xor
mov
add
aad
mov
mov
test
mov
add
pop
push
mov
int3
mov
jbe
cmpsl
dec
insl
pusha
cli
or
out
out
mov
or
leave
pushf
loopne
xor
in
loopne
sbb
pushf
les
jno
dec
loopne
push
dec
xchg
inc
call
mov
jnp
and
fimuls
push
push
shlb
push
lods
sbb
xchg
and
mov
mov
pop
insb
cmpl
gs
pop
pop
jecxz
aad
lds
lretw
xor
es
xor
shll
scas
pop
rcrb
push
mov
pop
xlat
xchg
lcall
bnd
aas
or
scas
push
ljmp
adc
mov
loop
or
orb
inc
xchg
jns
sub
dec
hlt
int
add
dec
inc
icebp
mov
mov
fidivs
ret
sbb
mov
pop
lret
sbb
das
dec
sbbb
mov
cwtl
jmp
pop
cmpl
aaa
jo
negl
pop
dec
ret
imul
inc
xor
pushf
dec
sub
int3
xchg
scas
lods
sub
lea
xor
scas
jbe
sbb
loope
das
dec
out
dec
roll
push
ljmp
data16
test
jle
les
testl
popf
aam
not
into
adc
movsb
push
je
pop
jnp
dec
dec
test
xchg
in
sahf
ss
push
inc
inc
xor
enter
mov
sub
and
jecxz
mov
pop
shlb
outsl
jge
pusha
mov
adc
xchg
inc
imul
sub
loopne
add
ja
testl
cmp
in
repz
and
jo
push
pcmpeqd
xchg
mov
movsl
nop
cmp
sub
fdivl
int3
lcall
jb
xchg
sbb
fcom
inc
lea
outsb
jle
mov
adc
fsts
cmpsl
int
aaa
das
inc
cmp
pop
sbb
xor
std
fisttpl
and
sub
push
push
int3
test
jge
inc
ror
dec
or
sub
cmpsb
shll
mov
stos
ret
dec
sbb
cmp
ljmp
repz
fiadds
ljmp
mov
inc
fs
repz
mov
xchg
or
pop
loop
pop
test
lock
xlat
in
test
fdivrs
sub
mov
jbe
fcoml
lret
dec
add
scas
pop
ds
popf
inc
test
std
cmc
push
push
lcall
imul
insl
inc
shll
sub
pop
mov
test
dec
testb
fistps
arpl
stc
shll
rcrb
lret
cli
pop
fmull
sbb
cwtl
dec
sub
pop
pop
rcll
pop
stc
cmpsl
adc
shlb
and
test
or
aad
cmp
iret
or
push
dec
pushf
pop
mov
mov
div
and
inc
ja
mov
rclb
mov
push
pusha
dec
lock
jle
jb
sbb
pop
loopne
repz
shrl
push
outsb
mov
imul
fidivrs
adc
dec
push
sub
fbld
adc
iret
ljmp
mov
cmp
fistpll
mov
push
sbb
sbb
xchg
jl
decb
sub
xchg
sub
push
rcll
data16
rolb
mov
sbb
mov
int3
data16
lock
mov
jnp
ss
in
mov
mov
call
fidivrl
jne
cmpsb
dec
jle
push
pop
pop
mov
push
lds
pop
lds
les
mov
data16
xchg
push
jne
cmp
push
test
loope
push
fsts
adc
dec
movsb
test
shrb
test
sub
lods
dec
lds
rcr
ret
sub
test
push
cltd
cmp
jmp
data16
add
repnz
xchg
mov
inc
mov
mov
outsb
and
iret
add
mov
bound
shlb
lret
and
mov
std
or
daa
and
mov
jae
jmp
pop
add
jl
and
aad
jmp
popf
mov
mov
xor
gs
imul
sarb
push
jae
ja
jno
and
cmp
lock
ret
mov
movsl
push
popa
addr16
dec
adc
cltd
not
in
mov
mov
movsl
in
mov
loop
in
mov
xchg
inc
xchg
cmp
cmp
xchg
push
insb
mov
mov
pop
jnp
sbb
mov
xchg
mov
pop
testb
sbb
fdivrs
xchg
push
dec
dec
lods
cmp
sbb
call
inc
daa
sbb
int
in
in
lods
pop
xor
push
xor
pop
mov
decl
loopne
sahf
std
sbb
scas
aam
xor
out
or
push
test
cmp
xchg
or
in
inc
and
push
cs
sub
adc
jnp
aam
dec
dec
xlat
aad
cmc
push
sub
cld
adc
cmpsb
and
cltd
adc
dec
stc
adc
add
je
lods
add
sbb
lea
push
xor
movsl
icebp
nop
dec
repz
sbbb
mov
adc
mov
xchg
out
dec
add
pop
loop
pop
mov
nop
fcomp
imul
subl
push
iret
in
nop
jns
arpl
lea
dec
cli
movb
inc
inc
sbb
pusha
jnp
rol
push
and
cmpsb
add
mov
push
jl
mov
hlt
inc
das
or
push
xor
adc
mov
ret
test
movsl
xchg
notb
pop
xchg
mov
add
cmpsl
bound
or
cld
lcall
test
rorb
mov
mov
int3
insl
in
clc
testb
aam
or
pop
push
rclb
int3
in
xadd
sbb
xchg
jmp
imul
sbb
daa
ret
mov
dec
movsb
fdiv
push
push
pusha
xchg
adc
imul
int
mov
fdivs
pop
or
sbb
xchg
pop
lret
sbb
sbb
or
add
lea
jle
jle
mov
push
sub
or
push
push
jle
xor
rcrl
shlb
sub
sub
in
outsb
xchg
sub
xchg
xchg
ljmp
inc
repnz
inc
pop
or
dec
gs
push
dec
xor
jo
loopne
push
push
aas
jno
pop
mov
fs
loopne
aas
pusha
mov
jecxz
dec
add
aaa
loop
lret
repz
lcall
ljmp
push
cmp
sub
hlt
fcoms
adc
xor
push
addr16
add
fisubrl
jns
fcmovu
test
imul
xor
popa
repnz
adc
enter
mov
hlt
sbb
inc
lahf
add
pop
pop
inc
and
xchg
adc
sbb
adc
mov
mov
divb
xor
mov
ds
ss
cltd
dec
or
sbb
jb
pop
addr16
add
repz
test
inc
and
pop
in
inc
scas
mov
lods
pusha
popf
cltd
rcrl
mov
jl
or
icebp
mov
pop
hlt
jge
shl
rdtsc
mov
mov
ja
mov
rolb
inc
roll
sahf
out
xor
lea
clc
repnz
dec
mov
fists
and
jne
lds
sti
or
data16
out
cmp
pop
jns
dec
out
jnp
sbb
lock
ret
adc
arpl
stos
fldt
push
or
outsl
mov
hlt
gs
mov
ret
jl
jno
mov
sub
lock
fadds
les
cltd
int3
dec
outsl
stos
xchg
popw
jmp
jge
sub
and
push
in
dec
stc
inc
sub
ds
push
add
movsl
test
mov
and
cld
xor
rorl
cmp
push
leave
aas
mov
cmp
movsb
pop
jp
fwait
jecxz
inc
mov
test
cld
xchg
mov
add
sub
daa
jmp
jb
xchg
je
lds
pop
pop
or
movsb
outsb
jg
shrb
shlb
mov
mov
adcl
ja
cmp
sub
mov
xchg
cmp
inc
inc
mov
mov
or
hlt
sbb
addr16
repz
fcoms
dec
jo
and
add
fstp
cmovl
mov
and
je
inc
loope
scas
sahf
push
pop
rcrl
cwtl
outsl
pop
pop
aad
cwtl
cmp
pop
loopne
xorl
dec
icebp
xchg
cmp
pusha
arpl
cmp
cmp
clc
jne
test
mov
je
push
and
call
pop
addr16
imul
push
test
xchg
mov
fldlg2
and
jns
jo
icebp
shr
enter
enter
xchg
sub
jns
push
sarl
test
movsb
js
add
ffree
imul
pop
push
dec
popf
add
lods
jmp
add
or
xor
xlat
roll
faddl
inc
xchg
xor
aas
sub
shlb
repz
ret
sbb
push
or
ljmp
jg
sbb
stc
pop
stos
xchg
stos
and
push
sbb
mov
ret
sahf
cli
mov
stos
mov
mov
jmp
addr16
cmovg
int3
mov
or
jle
xchg
je
aaa
pop
xlat
jl
xchg
pop
or
idivl
inc
ds
fs
mov
js
je
cmp
cmp
fisubl
mov
push
dec
jnp
aas
sbb
inc
pop
push
dec
and
rorb
ficoms
adc
ja
call
icebp
adc
mov
sarl
sub
dec
jl
pop
popf
stc
xchg
insl
push
adc
stos
push
jo
mov
xor
adc
faddl
and
sub
or
fcoml
and
xor
ret
sbb
adc
clc
scas
adc
stc
or
stos
outsb
pop
stc
shll
movl
jae
stos
inc
xor
cmp
data16
arpl
out
pushl
test
and
xor
loopne
or
frstor
add
lcall
or
ret
mov
mov
jecxz
lods
insb
leave
mov
sti
xchg
push
inc
mov
lahf
cmp
cli
or
loopne
dec
jle
outsl
mov
or
jge
mov
xchg
mov
sbb
xor
dec
fstpt
popf
leave
fwait
mov
pop
shll
xor
mov
into
sahf
mov
mov
or
test
mov
cld
adc
inc
mov
mov
cld
mov
rcrl
jne
mov
mov
inc
mov
pusha
jp
pushf
mov
shl
repz
lds
xchg
xchg
repz
mov
lahf
inc
data16
lods
jge
add
push
pop
shr
in
mov
cmc
pop
jns
les
dec
xchg
push
add
mov
xchg
or
jbe
orb
cwtl
stos
xchg
insl
sarb
out
mov
fisttpl
lds
adc
cmp
mov
xor
push
adc
sbb
outsb
xlat
loopne
dec
imul
push
xor
xorb
push
adc
push
ljmp
push
je
je
dec
push
frstor
mov
cs
xchg
shrb
fadd
and
aaa
adcl
add
or
subb
int
xchg
insl
mov
scas
mov
mov
push
xor
leave
fnsave
adc
and
out
mov
loope
mov
jle
mov
rcll
imulb
cltd
and
lret
leave
insl
jle
jno
mov
inc
mov
pop
xchg
lock
or
aaa
cmpsl
push
pop
jmp
jecxz
jb
push
mov
pop
int
arpl
addb
dec
scas
mov
sti
jg
int
and
pop
dec
jbe
inc
addr16
js
outsb
int3
push
mov
jno
xchg
pop
xchg
lods
int
xor
pop
fcmovne
loopne
dec
ss
pop
adc
adc
insb
adc
sub
icebp
in
sub
mov
imulb
xchg
lds
imul
mov
inc
movsb
xor
int
adc
fs
jg
dec
pop
jle
and
add
jne
aaa
or
aaa
pusha
adc
xor
aaa
xchg
lods
lock
mov
dec
lea
push
or
fcomps
in
icebp
push
sub
cmpsl
ss
dec
push
mov
push
cmp
push
jns
pop
mov
sub
das
test
scas
xor
mov
jb
push
movsb
test
push
fs
sbb
inc
popa
jmp
cmc
cmp
mov
pop
outsb
loopne
rclb
repnz
imul
ret
fsubr
pop
hlt
xchg
shll
xchg
pop
pushf
adc
ss
push
fbstp
cmc
jo
add
test
sub
fst
inc
or
xor
add
or
inc
push
scas
pop
mov
mov
and
push
inc
je
cwtl
or
add
dec
push
mov
out
sub
sbb
push
pop
sbb
inc
imul
mov
and
out
push
hlt
dec
std
shrb
adc
cmpsl
insb
test
setb
mov
pop
enter
xor
jg
cmp
mov
imul
xchg
outsl
mov
pop
adc
sub
cmp
or
fdivl
loop
inc
jge
es
sub
stc
faddp
lret
outsl
mov
jg
and
mov
scas
lea
scas
jns
dec
mov
sahf
and
cmp
pop
popf
cmp
push
jmp
or
xor
icebp
movsb
lahf
jge
mov
lahf
inc
addl
scas
mul
inc
push
inc
xlat
sub
mov
imull
sbb
into
lcall
push
mov
std
lds
sub
decl
aam
push
adc
or
dec
movsl
imul
mov
add
into
hlt
insl
pop
repnz
fstl
insb
xor
jnp
std
mov
fidivrs
mov
jmp
ffreep
sub
arpl
sub
mov
xlat
aas
imull
sub
repz
outsb
jbe
or
pushf
jno
popa
pop
jbe
pop
in
mov
mov
pop
fdivrs
xorb
scas
xor
fdivrs
mov
aas
addr16
cmp
xchg
cmp
sub
mov
filds
mov
sarl
push
imul
xor
into
adc
cmpsl
add
inc
mov
inc
cmp
xchg
dec
aas
mov
jb
loope
mov
div
mov
inc
inc
fadds
jno
dec
sbb
lock
out
sbb
cmp
ret
ja
ret
scas
cmp
push
test
into
lcall
ja
jae
imul
hlt
pusha
shrb
cmp
inc
jne
xchg
dec
mov
adc
sbb
sbb
jb
adc
int3
in
adc
pop
sarb
mov
push
pop
test
add
mov
out
xor
aaa
nop
add
mov
pop
imul
and
addr16
aas
xor
mov
xchg
sbb
out
push
mov
xor
pop
fsubrl
lock
addr16
lods
stos
loope
filds
fwait
sub
jecxz
in
imul
dec
mov
lock
sub
ds
loopne
test
mov
jl
cs
sub
fistpl
mov
xchg
icebp
and
stos
and
dec
xor
jb
mov
stc
insl
push
and
pop
xchg
sti
inc
jl
lahf
xchg
int
inc
cmp
adc
xchg
inc
or
imul
repz
lods
xor
jmp
loope
jge
out
cld
pop
pop
repz
dec
testb
cmpsb
jecxz
dec
fs
dec
imul
mov
jle
adc
in
leave
cmp
repz
stos
or
jo
frstor
push
xor
inc
mov
pushf
fstp
mov
mov
mov
rorb
push
scas
popa
xor
mov
rcrb
dec
sub
adc
aaa
mov
sbb
test
or
dec
fisubs
pop
inc
xor
push
sub
pop
cmp
or
mov
mov
frstor
or
adc
dec
inc
inc
sbb
repz
inc
mov
mov
pop
dec
sti
and
lahf
sti
jge
pop
xlat
xor
lods
outsl
sbb
pushf
and
lea
fdivr
cwtl
cmp
repz
ljmp
stos
ja
lahf
insl
and
mov
sbb
idiv
push
or
dec
filds
xchg
cmpb
mov
pop
in
push
push
fcmovbe
jecxz
arpl
or
cs
shll
adc
and
icebp
call
movsl
cmp
mov
xor
sub
sbb
sub
shll
cmp
ljmp
insb
fimull
inc
test
in
sbb
lock
xor
and
fsubrl
push
jne
or
mov
insl
push
outsb
pop
sbb
negl
mov
es
or
pushf
mov
mov
std
inc
xchg
aas
inc
inc
xor
inc
test
aad
out
ret
add
jp
in
ret
and
jae
icebp
and
lret
std
fnstcw
mov
and
shrb
adc
inc
addl
outsb
out
fidivs
push
dec
push
cmp
and
pop
rorl
and
fnstenv
mov
mov
arpl
and
push
mov
lds
fsubrl
lret
inc
sub
je
inc
mov
mov
and
pop
scas
sub
pop
shlb
pushf
jns
int
in
inc
ljmp
decl
test
movsb
sub
rcrl
rcll
repz
push
mov
iret
icebp
mov
out
loopne
fidivl
clc
cli
imul
sub
dec
fdivrs
in
mov
add
inc
jbe
sub
subl
or
loop
inc
loope
cli
ja
mul
popl
mov
xor
shll
mov
jecxz
dec
cmp
insb
pop
es
data16
repz
pop
cmp
add
sbb
dec
push
add
scas
cmp
mov
add
in
cmp
xor
pusha
cwtl
mov
fldl
sub
leave
jbe
movsl
jno
lds
pushf
mov
das
cwtl
push
fnstsw
inc
bound
cld
stos
mov
lods
imul
and
jne
loopne
or
test
lret
sbb
out
test
hlt
popa
mov
xor
mov
in
push
inc
je
pop
nop
out
mov
popa
and
push
or
rcr
cmpl
dec
xor
je
jl
cli
xchg
push
inc
jp
cwtl
jge
sbb
adc
popf
xchg
and
push
lds
sub
jo
aad
clc
cwtl
or
je
cmp
in
mov
xor
or
clc
iret
mov
mov
leave
cs
nop
bound
fwait
lea
gs
sahf
jbe
ret
shrd
sbbb
cwtl
out
cmc
mov
outsl
adc
fidivs
inc
data16
in
sub
shl
and
jl
fidivrs
addr16
stc
adc
sahf
push
push
fdiv
sbb
cmpsl
xor
popl
shlb
idivl
stc
addr16
inc
and
imul
lock
sbb
lcall
es
scas
sub
leave
inc
xor
sub
push
jns
dec
cmp
shll
sbb
addb
ss
into
aam
mov
mov
dec
cmp
lret
in
pusha
scas
lods
dec
js
in
ja
push
fsubs
call
stc
xchg
sub
lahf
push
jp
subl
scas
or
cwtl
into
or
cwtl
fucomp
xchg
and
jns
pop
xchg
scas
mov
add
jmp
cld
stc
js
pushf
add
adc
cmp
fs
push
or
out
inc
imul
dec
test
xchg
mov
push
xchg
stc
mov
je
push
rcr
mov
ret
mov
ss
push
fisubrl
mov
clts
xchg
pop
scas
in
or
push
sub
mov
stos
adc
outsb
mov
adc
ret
out
mov
inc
jno
jnp
jle
push
inc
das
cmc
mov
adc
divb
mov
xchg
or
cs
pop
jb
dec
adc
les
jno
fnstcw
loopne
lock
mov
mov
sub
pop
inc
sbb
testb
divb
and
adc
mov
fstp
test
xor
fwait
dec
loope
xchg
cmp
call
es
pop
push
outsb
sbb
or
in
sbb
jns
ja
push
cmp
out
fwait
cmp
movsb
mov
int3
sbb
pop
imul
mov
fstps
ds
xor
shlb
push
mov
push
shlb
xchg
push
in
inc
push
inc
addr16
push
cwtl
test
adc
lea
ss
jns
in
cmp
mov
push
int3
inc
shlb
cltd
sub
icebp
movsb
dec
mov
add
inc
dec
rcrl
jno
dec
aas
pop
jge
ret
cmc
cli
and
fcomps
movsl
lods
lahf
jnp
xchg
pop
test
cmp
sub
popf
xchg
roll
adc
arpl
aad
sbb
push
lcall
cwtl
loop
xlat
inc
mov
jg
xchg
adc
sbb
add
hlt
lahf
and
mov
out
adc
or
add
aas
mov
mov
mov
cwtl
and
or
std
fwait
lds
popa
xchg
lock
mov
xor
mov
lcall
dec
add
xchg
inc
cmp
iret
lods
call
mov
mov
push
rcrl
and
pop
add
mov
mov
sbb
bound
inc
enter
mov
dec
push
aad
lods
mov
xchg
js
aas
inc
adc
add
jo
iret
scas
fcmovb
scas
std
rol
ljmp
adc
mov
xor
dec
in
pusha
rcll
mov
cmc
xchg
pop
repz
add
push
sahf
cmp
add
scas
inc
loopew
outsb
std
xchg
add
hlt
das
out
mov
sub
push
lods
leave
les
jecxz
leave
jmp
inc
stos
inc
mov
and
in
fstp
adc
inc
popf
fst
orb
jb
lods
or
shlb
push
jbe
cmp
and
movsl
imul
xor
push
or
jle
sub
mov
jge
push
lods
iret
loopne
pusha
xchg
xor
push
xchg
xor
adcb
jae
mov
fcmovnbe
sbb
daa
pop
lock
gs
or
shl
movsb
xchg
jno
mov
mov
fadds
repz
in
and
test
xor
push
je
xchg
adc
sub
sahf
sbb
call
mov
sub
or
hlt
inc
loop
scas
into
mov
mov
insl
push
mov
pop
bound
loope
fdiv
cmp
xor
es
sub
mov
mov
lods
pop
dec
or
sti
add
dec
push
orl
jo
ss
clc
jae
rorb
in
or
push
sub
dec
hlt
lock
dec
mov
inc
shl
movb
sub
test
xchg
lahf
stc
icebp
dec
adc
mov
fcmovne
and
xlat
addl
leave
imul
push
enter
cwtl
jg
loope
pop
xor
adc
aam
gs
loope
or
dec
bound
call
mov
mov
test
js
pop
movsb
and
and
je
xor
lea
sub
push
ja
mov
fs
jl
icebp
sbb
pop
cmp
sub
cmp
fldln2
ss
adc
pop
cld
lcall
pushf
xor
mov
push
insb
adc
in
cmpsb
lret
idivb
pop
push
cmp
inc
rolb
fdivl
aad
push
mov
jp
push
push
jo
mov
xor
cmp
mov
mov
sbb
ljmp
cmp
enter
sbbl
jl
sub
mov
lahf
push
push
lret
das
push
push
stos
roll
pop
ljmp
imul
mov
mov
cld
jb
add
xor
jo
and
and
cmp
mov
adc
or
inc
into
ds
repnz
dec
cltd
push
xchg
call
mov
pop
popa
mov
dec
fwait
jo
enter
sub
inc
mov
loop
pop
adc
fldl
xor
jge
out
std
fisubs
push
int
sahf
push
sub
push
shrb
jns
sub
adc
lock
jge
test
pop
dec
dec
rol
dec
mov
popf
cmp
mov
fistpl
leave
pop
mov
decl
call
lcall
ss
jnp
ret
icebp
movsb
les
cmp
daa
mov
out
and
lods
aam
push
cmp
in
mov
out
out
das
les
xor
jno
mov
pushf
and
sub
and
cld
xchg
lret
add
rcll
and
push
loop
out
mov
cs
add
pusha
push
add
mov
sub
jg
inc
in
dec
pop
lret
shl
inc
shl
into
sub
test
pop
outsl
cmp
jmp
jg
popa
lods
inc
jle
repnz
sbb
pushf
test
test
ret
cmp
xor
fisubrl
and
push
stos
ds
xchg
insb
into
and
sub
mov
sar
cwtl
out
or
daa
jmp
pusha
psraw
lcall
sub
xchg
das
xchg
adc
es
jbe
dec
jno
mov
repnz
sbb
or
out
sub
sti
sbb
or
mov
pop
dec
inc
inc
rolb
loopne
sbb
adc
in
xchg
mov
sbb
lds
clc
rolb
fs
es
daa
and
into
subl
mov
sbb
clc
test
scas
ljmp
xchg
jbe
sub
call
and
inc
mov
push
sub
ja
inc
push
jo
fwait
mov
push
jg
push
rcrl
jno
mov
mov
mov
test
popa
add
leave
fimull
icebp
and
xor
jnp
movsl
xchg
in
pop
sahf
pushf
push
xlat
jns
cwtl
out
stc
push
xchg
enter
shr
push
pop
jl
xor
adc
pop
pop
mov
adc
adcb
aas
jmp
in
imul
ret
jg
xchg
ss
aam
mov
clc
and
adc
and
pusha
push
xchg
add
xor
xchg
inc
adc
push
xchg
outsl
loopne
dec
mov
add
dec
fs
imul
mov
lods
jno
or
xlat
insl
sub
loope
mov
sahf
cmp
mov
jmp
in
loope
adc
push
mov
cmp
cmc
and
stos
push
shll
lret
je
mov
mov
dec
fdivl
jne
xor
mov
push
add
sub
ror
ret
xchg
push
scas
cmp
cmc
and
pop
movsb
inc
test
ss
fldt
pop
inc
jne
cmp
aad
pop
or
stos
and
and
adc
lret
cmp
out
mov
cmc
sbb
jmp
scas
out
pop
insb
nop
in
in
lea
xchg
or
rolb
lahf
notb
inc
ja
call
mov
or
sub
daa
enter
sbb
mov
out
xor
daa
inc
decl
mov
lods
cltd
dec
js
subb
ret
jb
jl
insl
push
sbb
add
jo
hlt
and
mov
les
cmp
scas
inc
fsubr
insl
negl
sub
jl
test
sbb
cmp
into
imul
pushf
fnsave
in
pop
adc
cltd
pop
jge
mov
shlb
aas
pop
cs
fimuls
dec
push
data16
rorb
pusha
sub
jno
pop
shrl
sub
pop
mov
call
hlt
fbstp
fcomi
mov
test
pushf
cmpsb
cmc
out
push
push
nop
mov
insb
pop
xchg
js
sub
jl
mov
testl
out
shll
xor
dec
rorl
gs
mov
cltd
pop
popa
pusha
mov
or
mov
mov
stos
fs
hlt
icebp
das
arpl
inc
cmpsl
test
int3
loopne
fsubrs
add
mov
aam
push
mov
add
jecxz
scas
data16
pushf
pop
mov
pop
rcll
lods
gs
aam
mov
cwtl
test
dec
lea
loopne
push
jecxz
sarb
dec
lahf
pop
sarb
into
cwtl
push
or
and
cmc
jb
test
shrb
sbb
mov
inc
mov
pop
inc
stos
mov
mov
add
mov
stos
testb
insb
aaa
enter
mov
push
in
or
add
sti
mov
stc
subl
mov
inc
jne
push
fistl
and
cmpsl
loopne
rclb
cmp
mov
xor
push
shll
cwtl
adc
aam
push
mov
rol
popf
sbb
pop
mov
push
jbe
leave
mov
jns
je
lods
jnp
clc
shlb
mov
dec
cs
cld
pminub
inc
cmp
xchg
add
shl
mov
aad
arpl
inc
jmp
mov
xchg
mov
ret
pop
aas
mov
stos
mov
les
push
jae
int
gs
xchg
fisttps
es
jo
xor
pop
dec
cmovo
mov
pop
adc
pop
ret
sbb
shll
les
stos
sub
mov
divb
and
jne
xchg
gs
cltd
dec
push
ds
mov
iret
popf
fdivs
push
jnp
stc
xchg
out
lret
cmp
lret
mov
xchg
ss
pop
jle
scas
movsl
mov
push
call
mov
push
xchg
cmp
lret
mov
pop
xchg
pop
clc
call
pop
mov
daa
and
enter
mov
mov
or
push
mov
clc
in
scas
insl
aad
sub
arpl
pushl
add
sahf
lret
mov
mov
adcb
push
push
mov
and
cwtl
inc
bound
pop
push
cmc
mov
pop
jno
sub
push
adc
cmp
mov
mov
and
lods
adc
push
adc
mov
xchg
daa
push
hlt
repz
out
add
adc
daa
je
ret
aad
iret
lds
mov
dec
sti
notl
mov
hlt
sub
cli
inc
jg
push
cmp
inc
mov
xor
call
dec
lock
out
scas
and
daa
rorb
push
jno
pop
mov
cmp
sti
push
mov
mov
dec
cmpl
addr16
clc
lcall
fwait
add
inc
mov
jb
cmp
xchg
cmp
adc
ficompl
outsl
leave
stc
dec
xchg
jp
mov
mov
into
lret
shrb
bound
cli
pop
lret
fisttps
fcompl
jne
hlt
cmp
cmpb
outsb
cld
dec
fstps
lea
imul
nop
mov
mov
sub
ret
xor
mov
sbb
add
dec
adcl
rcl
gs
insl
pop
pusha
rorb
xlat
push
and
dec
sub
mov
push
mov
push
ret
adc
lcall
jecxz
imul
mov
cmp
jne
dec
cmp
jg
shlb
dec
pop
mov
ret
mov
or
je
jb
cmp
jp
xchg
enter
push
lcall
mov
pop
push
aad
movsl
pusha
sbb
mov
sbb
leave
adcb
mov
fdivs
es
int
inc
shll
adc
jbe
bound
loopne
icebp
xchg
hlt
pop
cmp
or
inc
jecxz
push
dec
sbb
popa
loopne
xchg
fs
jne
rorl
inc
xchg
ja
repnz
cmp
in
lods
push
xor
movsl
imul
pop
ljmp
ror
cmp
stos
das
in
cltd
int
insl
sbb
sub
cmp
arpl
mov
mov
jmp
lods
push
fists
or
pop
in
in
fwait
adcl
xlat
mov
loope
test
sub
push
sbb
lcall
loopne
orl
lods
pushw
push
insl
in
in
xor
mov
out
aas
ja
call
jb
repnz
sbb
imulb
sbb
ret
sbb
cmpl
fnstsw
xor
push
or
push
aam
imul
lock
xor
in
imull
jne
add
inc
call
out
mov
sub
rcr
xchg
add
or
push
or
mov
xor
loopne
movsl
sub
negl
dec
adc
mov
in
bound
push
pop
push
gs
xor
pop
nop
pop
inc
loopne
not
push
or
adc
pop
pop
fimuls
mov
test
mov
or
test
cmp
popa
daa
adc
fistpll
jmp
push
add
orl
out
mov
imul
gs
mull
mov
xchg
std
fistpl
add
mov
or
loop
scas
mov
push
and
dec
repnz
xchg
and
cltd
in
fs
add
cmc
daa
aas
test
insl
roll
push
jae
call
into
and
pop
xchg
and
xor
push
dec
sub
inc
add
ljmp
sub
mov
dec
neg
fnstsw
into
or
xorl
adc
push
and
inc
xchg
pop
jg
in
fsubrl
sub
je
ljmp
push
faddl
mov
out
add
testb
cmp
in
push
jecxz
sub
sbb
sbb
mov
lahf
gs
dec
hlt
sub
xchg
push
mov
bound
and
pop
sahf
and
shl
and
mov
aam
fnstenv
roll
inc
shll
pop
lcall
xor
push
inc
sub
sub
movsl
inc
sbbb
push
ss
cmp
lds
pushl
lea
stos
std
lods
add
push
xor
cmp
xchg
lret
mov
arpl
sbb
and
ret
xchg
out
add
xor
and
push
push
add
push
mov
and
cmp
or
dec
enter
test
and
mov
sub
push
xchg
or
or
cs
push
shrb
aad
inc
xorl
repz
xchg
xor
add
sub
dec
and
sub
sub
push
mov
shlb
pop
ss
sahf
insb
ret
sub
insl
call
and
fcomps
jo
fs
lock
js
mov
mov
and
aas
mov
imul
das
jb
es
dec
push
push
js
fdivrs
aad
inc
xchg
mov
call
mov
mov
jns
clc
js
jge
imul
mov
adc
imull
dec
pushf
cmp
bound
xchg
or
sbb
orl
lods
jmp
popa
or
dec
adcb
out
mov
xor
ds
lods
aad
and
aas
jl
iret
fisttpl
fidivrl
dec
js
fbld
xchg
lods
xchg
fs
fsub
push
jl
inc
mov
and
mov
mov
adc
movsb
mov
scas
xchg
out
lea
aam
repnz
jno
jecxz
std
jbe
sarl
add
lock
stc
add
mov
ds
sub
lret
popa
daa
nop
inc
sbb
lret
cwtl
sahf
push
insl
sub
adc
cld
std
std
in
jle
fistpll
push
add
andb
ja
mov
xor
fdiv
mov
outsl
cmp
loopne
push
push
or
lret
or
imul
dec
jecxz
mov
rcll
push
mov
lcall
aad
sbb
jo
xlat
and
popf
push
jmp
mov
pop
mov
pusha
int
insb
stos
mov
call
cltd
lcall
jg
fdivrs
aad
push
ret
fiaddl
xchg
xchg
gs
pop
sbb
xchg
into
jne
repnz
imul
add
outsb
shlb
lock
imul
push
cmp
hlt
xor
pushf
mov
mov
dec
aam
pop
lretw
out
pop
imulb
or
mov
sbb
jp
lods
jae
push
test
lret
sbb
mov
shrl
lahf
cmp
inc
xchg
daa
jg
jmp
cs
xor
cwtl
lcall
mov
pushf
loopne
lcall
aam
iret
pop
int3
xchg
je
pop
jle
dec
movsb
sbb
scas
int3
insb
rorb
mov
loopne
sub
adc
in
mov
adc
popf
and
add
sub
test
inc
rolb
mov
lods
add
or
mov
and
cmpl
jnp
test
out
mov
xlat
nop
insl
cltd
iret
lret
xor
je
mov
out
xchg
js
sbbl
and
inc
sbb
mov
int3
cmp
adc
pop
mov
sti
pop
outsb
pop
loopne
and
vhsubps
mov
sub
jne
and
bound
stos
aad
cmc
or
imul
pop
sbb
loope
repz
push
add
xor
adc
out
cltd
fistl
mov
inc
dec
scas
in
arpl
shlb
push
fnstcw
jl
sub
adc
xchg
xlat
push
cmpsb
call
xchg
mov
adc
xor
sub
popf
and
imul
cmp
inc
adc
mov
mov
mov
imul
xchg
cmp
scas
and
int
sbbl
mov
pop
push
in
dec
push
sbbb
xlat
test
in
cmp
and
mov
shrl
sub
call
rcll
clc
add
mov
mov
int
stos
dec
xchg
test
shll
adc
pop
mov
mov
cmpsl
xchg
je
imul
shll
pop
mov
out
insb
shrl
xor
cmpsb
cmpsl
frstor
push
ds
pop
push
mov
insl
jns
fdivrl
pop
out
and
test
test
roll
int
adc
lret
add
add
stc
imul
fneni(8087
xchg
rcr
dec
pop
adc
ja
sub
lods
xor
xchg
test
lods
inc
sub
outsl
clc
push
cmp
sti
outsb
loopne
sub
or
jae
or
aam
mov
aad
int3
pop
or
in
fists
xlat
data16
sti
and
imul
pop
or
in
jp
adc
xlat
lahf
jbe
scas
pop
bound
notl
call
pop
and
dec
or
icebp
add
cvtdq2ps
xor
and
xchg
sar
decb
lcall
insl
shr
mov
mov
aad
or
dec
clc
in
cwtl
loop
mov
pop
jnp
nop
orb
aaa
dec
rclb
inc
imul
cmpsl
iret
in
rorb
mov
and
push
fcmovnu
jae
cli
bound
ds
sub
dec
ficoml
xor
jne
mov
pop
call
mov
call
adc
shl
pop
sti
mov
loopne
movsb
mov
fildl
icebp
lcall
ret
adcb
and
add
out
mov
sarb
add
or
lcall
push
cmpsb
shll
rcl
mov
arpl
mov
or
dec
push
aaa
cmp
jp
adc
mov
xor
xchg
add
dec
sbb
mov
cmp
xor
and
loope
sbb
jne
push
sti
bound
jae
adc
sbb
mov
add
inc
imul
xor
or
loop
xor
jecxz
movsl
pusha
jnp
xchg
orl
dec
shlb
mov
mov
push
call
jbe
ja
loopne
mov
jbe
je
adc
aaa
fbld
aaa
sub
pop
lods
push
scas
les
in
dec
pop
mov
and
shlb
mov
xchg
dec
cmpsb
sub
ljmp
and
das
cmp
xor
sub
ror
repnz
jp
daa
dec
in
jo
mov
push
mov
mov
mov
mov
fistpll
out
jle
xlat
push
sbb
mulb
fs
inc
xchg
cmc
loopne
sbb
imul
cmpl
pushf
sahf
sub
mov
movb
out
sub
or
jns
mov
into
jl
arpl
stos
movsb
xchg
mov
sbb
addl
repnz
mov
int
in
icebp
cmc
inc
stos
xchg
jae
or
pop
and
push
aaa
add
jl
insb
pop
out
cmp
mov
mov
jno
cmp
add
push
push
adc
pop
pop
sbb
fcmovb
push
mov
arpl
stc
nop
testb
or
addr16
stos
adc
cmp
sarb
or
mov
pop
les
or
inc
es
add
sbb
mov
cmp
fwait
mov
sahf
xor
jo
mov
mov
cmp
ret
lahf
jecxz
idiv
cmpsl
sub
loop
pop
ja
dec
gs
scas
inc
aas
in
push
pop
jae
inc
decl
xlat
mov
sbb
ljmp
lds
jl
and
jo
fcoms
out
xchg
call
scas
push
movsl
inc
ss
js
aas
cwtl
addb
mov
icebp
fdivrs
jnp
inc
sbb
pop
sbb
test
cld
mov
imul
pop
mov
or
inc
mov
jbe
xchg
ljmp
pop
mov
push
repz
and
cmp
xchg
dec
jb
cmpl
xor
out
mov
in
loope
jg
pop
inc
push
fldt
mov
sar
ret
out
loope
pop
gs
movsl
push
je
xlat
inc
fldenv
adc
ljmp
cmpsl
std
mov
test
sub
lds
repnz
or
shrb
inc
aad
adcl
cmp
inc
xor
out
dec
push
mov
push
mov
rcrl
lret
fnstsw
inc
cmc
xor
mov
or
rorl
outsb
std
jbe
pop
inc
scas
daa
xlat
jp
mov
push
mov
add
fsubrs
adcb
insb
and
lret
cmp
insb
lods
xor
loopne
jge
mov
comiss
in
clc
jnp
jmp
jmp
cltd
or
mov
sub
movsl
mov
int
daa
cltd
sbb
repz
and
sbb
jl
inc
mov
xor
jnp
push
sbb
lahf
jbe
and
fimuls
movsl
push
cmp
scas
mov
mov
subb
sbb
push
ds
ror
adcl
pop
bound
clc
test
xorb
test
dec
inc
ret
out
jle
shlb
xlat
lds
data16
dec
fildll
sbb
scas
mov
mov
xchg
sbb
mov
je
push
fldenv
xor
fisubs
cs
sbb
lahf
idiv
adcb
lar
mov
movsb
fld
mov
js
and
loopne
dec
inc
jnp
fistl
mov
loop,pn
movsb
and
leave
push
mov
fxch
std
and
or
dec
sub
out
add
bound
je
jbe
mov
push
inc
inc
lds
in
adc
xor
mov
mov
pusha
aas
in
cmc
pop
test
inc
cwtl
push
aas
in
jmp
rcll
aam
adc
inc
shr
leave
cmp
movsb
lds
push
adc
dec
insb
repnz
push
dec
add
inc
ficompl
mov
shl
dec
xchg
scas
imul
enter
sub
icebp
mov
daa
sub
inc
imul
xchg
sbb
fwait
stos
test
loopne
or
sti
add
loopne
arpl
in
fcmovne
cmp
push
and
pop
jp
mov
xchg
cmp
inc
movsl
push
cld
gs
jo
and
cmp
and
jb
cli
add
lods
jb
test
into
int3
xchg
fwait
adcb
daa
mov
cli
in
pop
xchg
insl
pushf
je
dec
mov
inc
test
xchg
pop
popf
inc
mov
pop
and
sbb
sub
jne
lret
push
jns
pop
cmp
push
and
xchg
fsts
insb
hlt
mov
xchg
add
mov
push
cmpsb
push
push
and
loope
inc
or
adc
lods
outsb
pop
ljmp
pop
or
into
aad
ljmp
push
das
ja
int
aad
jnp
enter
rcrb
sbb
jmp
fdivrl
sti
icebp
add
test
shrl
jl
ss
sti
cmpsl
fadd
jnp
ds
and
cmp
lea
or
push
dec
insl
adc
adc
or
cltd
pop
leave
bound
adc
xchg
fsubrl
push
enter
push
dec
add
je
inc
nop
cltd
rol
add
jbe
lcall
sbbl
sar
mov
jb
mov
negb
mov
mov
sub
aam
test
mov
test
aas
pushf
test
stos
mov
and
mov
mov
sbb
iretw
aad
fisttpll
pop
sbb
xor
data16
imul
stos
jo
cmp
daa
fldenv
jnp
jno
xchg
push
cmp
lret
fdivrl
fcmovnb
sbb
push
mov
cmc
sub
sti
stos
int
pop
pop
in
push
hlt
stos
mov
outsl
gs
aad
push
jg
xchg
xchg
and
xchg
dec
xchg
push
jns
lods
mov
lcall
inc
aas
test
insb
stos
sahf
mov
fbstp
pop
mov
or
xor
repz
movsl
jo
mov
orl
movsb
testb
adc
jle
add
in
sbb
daa
daa
jecxz
jmp
push
push
cmp
sub
dec
mov
sar
out
fldcw
subb
addr16
sub
repz
imul
repnz
jmp
sub
inc
mov
flds
sub
dec
push
cmp
mov
nopl
xor
cs
xor
out
fst
and
pop
pop
push
outsb
and
add
sbb
xor
loop
xor
cld
shrl
fldenv
clc
pop
pop
addb
sarl
cmc
lahf
test
add
les
and
decb
mov
cs
cmp
lea
mov
xchg
popf
mov
movsl
mov
imul
add
clc
shrl
pushf
or
xor
push
pop
stc
and
lahf
xchg
insb
inc
out
xchg
test
lods
mov
rol
insl
repz
movsl
sbb
cmp
mov
lret
mov
repz
mov
faddl
movsl
hlt
stos
test
fisttpl
leave
push
push
sahf
pusha
sub
leave
pop
imul
inc
repnz
sahf
xchg
sub
hlt
pusha
scas
mov
or
push
cmp
jo
aaa
jecxz
dec
ret
inc
xchg
sub
test
or
insl
ds
sbbb
popa
and
jb
jle
mov
xlat
movsb
subb
cmp
aas
mov
arpl
fs
repnz
inc
in
xchg
stos
movsl
mov
add
scas
daa
cli
cmp
mov
mov
inc
pop
jl
mov
in
push
push
mov
adc
ror
push
pop
cmp
xchg
mov
mov
ret
lock
xchg
inc
jne
push
mov
pop
imul
cmpsb
hlt
sub
sub
inc
sbb
stos
inc
lods
mov
sahf
or
movsl
cmp
jae
add
test
fstpt
cwtl
push
pushf
fidivrl
inc
out
inc
std
or
outsb
lea
sbb
xlat
popf
xchg
cmp
jge
sbb
stos
xchg
mov
inc
fcoms
jo
sub
push
adc
sbb
sbb
stc
xchg
sbb
pop
jp
push
int
dec
sbb
mov
xlat
push
sub
aad
mov
pop
popa
cmp
icebp
and
shll
jae
les
je
sbb
test
std
jmp
or
xchg
ret
aas
mov
in
adc
cmp
sar
ljmp
xlat
adc
clc
lret
dec
jnp
xchg
leave
and
dec
rolb
cmp
pop
clc
pop
cmp
das
je
call
outsl
mov
xchg
cmp
rclb
push
jae
and
sub
xchg
loope
xchg
xor
dec
fwait
ds
sbb
imul
adc
sub
cltd
ja
mov
ret
xchg
mov
or
aam
iret
cmpsl
insl
decb
pop
bound
sub
insl
add
push
sub
test
mov
sub
movsl
mov
mov
mov
cltd
or
lea
sub
aad
fldenvs
dec
les
lret
pop
dec
lcall
inc
mov
push
gs
sbb
xchg
pop
ljmp
popf
sbb
int
shl
lds
jp
and
aam
lret
pop
sbb
cltd
xchg
cld
int
ret
adc
clc
dec
cltd
push
mov
pop
out
sahf
sbbb
mov
jmp
sahf
pop
jnp
cmp
pop
ljmp
lods
cs
hlt
ljmp
bound
add
mov
xor
cmpsb
add
cmc
repnz
idivl
stos
inc
cmp
dec
add
sbb
and
pop
xchg
jp
cmp
xor
pop
shll
and
sbbl
mov
mov
in
and
imull
call
out
hlt
negb
fcoml
add
jo
mov
cmp
xor
in
fcompl
insl
dec
pushf
mov
push
xor
cmp
add
mov
xor
sbb
jmp
enter
cmp
daa
mov
cmp
cmpsl
mov
adc
aad
cld
leave
test
ljmp
dec
cmp
roll
ror
or
pop
ds
daa
ret
xorb
cmp
inc
fcmovnu
xchg
adc
pop
inc
jnp
adc
jl
dec
fisubrs
imul
mov
sar
pusha
sbb
dec
sbb
loop
push
in
ds
aas
lods
xchg
loop
mov
or
push
pop
lods
cmp
scas
das
test
fcom
orl
sbb
or
jb
test
xor
pop
sub
addr16
mov
push
adc
jo
adc
out
sub
push
pop
imul
mov
hlt
cmp
fsubl
data16
cltd
arpl
mov
inc
mov
imul
in
scas
pop
movsb
jo
sub
push
sub
test
in
lods
cmp
ficoml
movsl
testb
sarb
mov
mov
xchg
pop
jg
add
xchg
fistpll
fstps
jle
xchg
sbb
xchg
cmp
mov
adc
lock
mov
jmp
leave
jae
jns
dec
adc
into
lods
jae
fbld
mov
loop
sub
test
cmpsl
andl
iret
jl,pt
das
and
jg
rcrb
jmp
xor
xor
jmp
iret
sahf
sub
shl
mov
pop
dec
lret
add
dec
inc
stos
xchg
sub
and
lret
push
ficomps
jp
fs
push
adc
push
pop
popf
jns
lds
cmp
dec
roll
outsl
cmp
mov
lods
aas
shlb
out
add
arpl
ret
mov
scas
pop
fimuls
sub
addr16
jno
cmp
cmp
push
icebp
testb
mov
imulb
ljmp
nop
and
xor
sahf
and
test
es
cmpsb
jb
mov
lahf
or
std
xor
fsubrs
mov
add
adc
stos
lods
xchg
push
xchg
jns
aaa
ja
and
lahf
mov
inc
ljmp
mov
outsb
dec
sahf
repnz
jae
mov
mov
and
wbinvd
mov
xchg
loop
jp
loope
bound
and
xor
jmp
pop
xorb
push
jae
sub
jp
mov
roll
xor
dec
adc
rolb
aaa
mov
sbb
pop
jg
mov
in
cwtl
sahf
dec
and
inc
popa
mov
push
fcomip
mov
lods
mov
jae
mov
mov
sbb
xchg
or
bound
lahf
pop
imul
pop
arpl
cmpsl
orb
pop
inc
imul
xchg
ror
js
ja
or
cmpsb
pop
cmp
mov
shll
adc
les
mov
int3
push
movsl
or
div
jns
sbb
fcoms
cli
mov
cmpsl
ds
in
mov
pop
pop
pop
js
add
gs
adc
mov
fs
xor
pop
fcomp
sub
lods
jle
xor
je
movsl
bound
mov
fists
gs
int3
adc
ret
enter
test
rolb
cmp
dec
stc
adc
adc
lock
cmpsb
out
daa
mov
jl
test
ret
and
ret
sub
lods
mov
or
jle
idiv
rcrl
xchg
outsl
ds
ds
int
mov
mov
loop
filds
push
aaa
cld
mov
xchg
cli
or
xlat
jb
push
mov
gs
mov
sbb
inc
dec
rcll
jp
icebp
fbstp
or
mov
sbb
sbb
scas
cmc
mov
xchg
dec
push
scas
int3
stc
mov
push
leave
aas
dec
xor
mov
mov
shrb
and
mov
shll
into
loopne
pop
pop
push
test
dec
pop
or
mov
test
lahf
dec
in
mov
sbb
fldt
cmp
and
and
cmp
xchg
dec
inc
popa
sbb
idiv
bound
aas
repz
lds
adc
out
int
push
cli
lahf
repnz
mov
jo
dec
fldcw
inc
pop
fdiv
test
sub
cmp
pop
dec
push
movsl
push
xor
mov
pusha
jp
xor
or
cmp
sub
dec
mov
out
mov
xor
xchg
mov
inc
pop
rclb
aam
dec
nop
ds
push
movsl
sub
cld
jns
add
cmpsl
je
inc
out
je
xchg
repz
ss
lcall
shlb
out
jle
outsb
push
adc
mov
out
and
popf
mov
movsb
mov
mov
jge,pt
js
push
mov
dec
add
jmp
xchg
jle
push
lahf
int3
pop
dec
gs
imul
test
dec
and
int
xor
repnz
sub
dec
mov
pop
push
test
push
into
fs
lds
ret
xor
and
or
loop
jnp
mov
cmpsl
or
xor
add
lods
jmp
xchg
and
dec
mov
clc
sub
pop
ds
mov
add
cmp
ret
test
jno
cmp
mov
pusha
insl
sub
movsl
jl
mov
rol
cwtl
adc
mov
mov
imul
mov
mov
mov
test
fstps
cli
lret
push
ds
adc
cmc
cmp
movsb
aam
cwtl
cmp
dec
cmpsl
jp
and
mov
push
adc
hlt
xchg
stos
mov
mov
fwait
add
xchg
scas
cs
in
xchg
push
lods
out
dec
jg
stos
loop
sbb
hlt
scas
xor
jns
lods
enter
jno
inc
clc
dec
enterw
sub
cld
xchg
cmc
mov
dec
inc
movsl
jmp
or
loop
nop
add
inc
jle
popl
push
out
pop
sub
jb
bound
jmp
cmpsl
sarb
aad
iret
int3
pop
jecxz
sub
push
out
fisubrs
cmpb
mov
xor
xchg
pusha
mov
aas
fldt
mov
pop
inc
xlat
jb
jb
lods
dec
fsubrs
jecxz
enter
sub
stos
jno
lock
add
shrl
cltd
adc
mov
testl
fildll
jmp
je
inc
in
mov
dec
cltd
bswap
mov
mov
cld
inc
fisttpll
jns
mov
dec
xor
shlb
enter
mov
cmp
out
adc
ret
sub
scas
scas
and
aaa
mov
test
hlt
sbb
out
xor
and
mov
push
out
inc
jle
cmp
mov
stos
mov
lock
mov
push
sub
push
repz
mov
inc
lock
aas
mov
pop
xor
jmp
add
ds
hlt
jns
das
cmpsl
sbb
loope
sti
mov
jge
jnp,pn
xchg
lahf
orb
add
pop
stos
xchg
dec
jp
xchg
arpl
fcoms
cli
insb
cwtl
iret
rcl
lcall
out
lcall
adc
jge
shlb
lods
inc
cmc
dec
push
addb
xchg
jmp
adc
scas
sti
or
test
dec
iret
js
mov
sahf
outsl
sub
sbb
shrl
cwtl
stc
and
xchg
sub
pushf
xchg
aaa
or
lcall
mov
push
push
inc
js
cmp
in
rcrb
or
dec
addr16
inc
mov
dec
ja
cmp
lods
or
pushf
inc
cli
rol
mov
xchg
loop
loopne
ret
mov
xchg
imul
or
clc
dec
dec
into
cmc
xlat
or
mov
add
lret
ret
pusha
aam
shrl
xor
test
xor
inc
sub
popa
jae
mov
dec
ja
xchg
pop
adc
iretw
sbbl
dec
or
dec
pop
movsl
xchg
inc
jmp
pop
pop
sub
inc
pop
lret
pop
pop
repnz
subb
adc
lds
xor
jbe
push
mov
enter
dec
xchg
rorl
cltd
mov
cmp
test
pop
or
mov
dec
jno
jne
xchg
test
push
inc
inc
ljmp
xchg
out
mov
icebp
xchg
push
test
pop
push
jg
sbb
popf
jg
push
jg
mov
lret
rol
jg
xor
sub
add
jg
inc
mov
add
pop
inc
ss
jmp
add
enter
stos
lret
mov
loope
add
mov
sbb
aaa
pusha
sarb
lahf
pop
mov
test
idivb
call
sbb
lea
and
xchg
add
imul
jmp
je
nop
insl
jne
addb
imul
xchg
dec
xor
arpl
rcr
sbb
sbb
pusha
gs
sub
push
iret
addb
dec
test
outsl
test
mov
icebp
jne
cmc
push
in
sub
mov
jae
icebp
push
xor
dec
jecxz
adc
pop
mov
jno
jb
scas
stc
push
pushf
dec
xchg
js
cltd
jno
push
daa
movsb
sbb
fadds
outsl
cmp
dec
mov
push
cmp
xchg
sbb
mov
xor
xchg
movsb
icebp
mulb
cs
jo
lret
adc
leave
add
adc
mov
arpl
popa
mov
pushf
mov
add
scas
pop
fisubs
daa
outsl
sub
call
xchg
cwtl
std
xlat
mov
add
cmp
jnp
inc
jb
jmp
frstor
xchg
shrl
lcall
dec
pop
mov
divb
clc
iret
cmp
test
jge
inc
clc
cmp
loope
test
xor
adc
or
lret
push
aad
test
scas
mov
mov
or
js
rol
imul
xchg
aaa
xchg
jecxz
mov
sbb
outsb
inc
test
jl
rcll
inc
inc
inc
jbe
dec
xor
add
adc
movsb
mov
sbb
xchg
fildll
push
sbb
adc
or
add
scas
cmp
int
inc
std
loopne
mov
clc
les
push
out
arpl
imul
fs
rcrl
and
movsl
jno
dec
and
mov
and
fstps
cli
and
lds
popa
sbbl
fildll
mov
push
repnz
hlt
push
xchg
inc
stos
push
xchg
cltd
jl
je
mov
adc
mov
arpl
mov
in
leave
sbb
int
mov
mov
push
dec
jbe
js
sbb
movsb
daa
push
push
dec
sub
in
repz
fucomi
adc
or
sub
es
xchg
fcmovu
idiv
cmpl
sti
cwtl
test
aad
adc
sahf
push
or
mov
popa
in
js
push
adc
mov
lods
loop
cltd
mov
nop
add
mul
fimull
jnp
cmp
jns
dec
push
cmc
in
repz
stos
jo,pt
mov
aaa
roll
add
andl
or
push
lahf
jae
cmp
push
push
sbb
lahf
cmp
xorl
jg
jp
je
and
mov
lea
imul
cmc
mov
jbe
out
jg
mov
orl
fnstcw
add
cmp
clc
push
dec
jae
push
and
in
push
xchg
mov
stos
cli
adc
cmpl
xor
int
mov
mull
sub
xchg
lret
mov
andl
fldt
insl
test
fcoms
cmp
pop
jl
add
cmp
cmp
loop
xor
push
mov
int
mov
ret
sbb
add
popf
pop
or
cltd
ja
mov
daa
lahf
js
sbb
ret
popf
in
push
push
pop
inc
decl
aaa
inc
ret
repnz
daa
jmp
sahf
push
and
xchg
and
fwait
mov
mov
adc
xchg
je
das
lds
adcb
mov
pop
stc
xchg
lea
push
jmp
dec
nop
push
push
mov
filds
inc
cltd
addr16
sbb
push
loop
push
ljmp
lods
lcall
jl
icebp
lds
outsl
int3
outsb
in
xchg
cli
push
into
mov
rol
in
push
mov
xchg
xchg
jae
pop
aam
fildll
mov
push
push
out
shrl
test
sbb
mov
mov
mov
sub
movsl
jns
and
shrb
lret
push
mov
mov
loopne
mov
dec
pop
pop
and
js
mov
fs
mov
clc
sub
mov
ja
mov
test
daa
add
notb
mov
push
aam
leave
repz
jo
mov
cmp
and
adc
jle
fwait
in
imul
cltd
mov
mulb
enter
aam
pop
fsubrs
push
jmp
push
xor
call
std
push
jl
jl
in
ds
xor
dec
and
xor
cmp
add
in
je
push
scas
xchg
aaa
add
fs
loope
mov
cmp
xchg
outsb
mov
imul
sub
cmc
fdivr
rcrl
pop
movsl
jne
or
pop
clc
not
sbb
sub
pop
push
lods
montmul
cmpsb
xchg
or
pop
negl
cld
lods
sbb
mov
xor
dec
sub
idiv
addb
cmp
push
inc
adc
push
sarb
and
enter
jge
ja
outsl
stos
lret
aad
mov
in
fbstp
ja
mov
js
jl
adc
mov
sbb
mov
pop
call
gs
push
fwait
sub
dec
and
icebp
insb
mov
add
jge
sahf
idiv
push
imul
xchg
sbb
loope
ja
std
xor
out
fcoml
sub
leave
dec
outsb
dec
push
pop
mov
pushf
aaa
push
sub
imul
xchg
fwait
int3
sub
hlt
gs
mov
and
je
lods
inc
adc
jbe
adc
mov
test
pop
and
inc
in
arpl
inc
cmp
in
jmp
fisttps
xor
mov
loop
mov
mov
jmp
xor
add
fisubl
js
pop
out
andb
mov
arpl
cmp
mov
adc
inc
out
dec
cltd
loope
loope
arpl
push
aam
dec
imul
jnp
mov
adc
sub
push
and
add
pop
inc
addr16
dec
add
fistps
leave
loopne
jecxz
in
push
cltd
fcmovne
or
inc
push
fistpl
sub
arpl
scas
enter
lret
jno
fcomps
xchg
adc
cmp
imul
mov
pop
adc
cmp
insl
or
push
pusha
nop
push
imul
aas
or
test
jno
add
adc
dec
or
loop
mov
or
in
jle
cltd
lahf
repnz
inc
add
adc
insb
dec
arpl
stos
and
add
xchg
adc
inc
or
flds
fs
sbb
in
mov
gs
add
mov
cltd
adcl
and
das
fcomps
and
inc
gs
xor
and
or
outsl
dec
data16
sub
shrb
mov
or
test
ljmp
xor
pop
mov
dec
jb
pop
pop
stos
jo
out
pop
jl
push
push
aam
mov
cmp
pusha
adc
mov
jmp
subb
das
sahf
inc
mov
popl
and
in
stos
sbbl
inc
mov
daa
lods
and
xchg
push
and
add
pusha
stos
pop
or
stos
sbb
jbe
jge
jne
mov
pushf
hlt
test
lods
dec
arpl
pop
fs
into
insl
sub
test
add
rcr
ja
push
ret
jp
ljmp
xchg
loopne
aas
int3
adc
xor
cmp
das
inc
mov
outsb
out
or
sub
lret
cmp
xor
cltd
ljmp
lea
mov
aad
pop
fbld
push
lds
xor
lcall
xor
pop
cmp
inc
dec
or
lds
cmp
testl
mov
test
push
inc
outsb
fsubrp
jbe
cmp
paddw
sub
mov
push
cmp
pushf
imul
mov
push
fidivs
push
popa
in
fwait
dec
or
add
pop
dec
out
stc
pop
xchg
xchg
add
pop
out
jecxz
shll
pop
jecxz
mov
es
in
add
outsb
sbb
add
icebp
pop
sub
xchg
sub
jno
data16
and
dec
xor
jno
sub
loope
xchg
mov
cmpb
xchg
pop
int
push
popa
mov
les
jb
jg
ja
sbb
std
clc
fwait
jmp
jecxz
sub
popa
sbb
das
inc
mov
aad
cmp
daa
jmp
fcmovnb
movsl
in
jecxz,pt
rcrb
adc
loopne
and
loop
lret
jmp
lret
cmpsb
int3
sbb
push
arpl
mov
sbb
xor
adc
push
mov
xor
pop
push
mov
int
in
sub
mov
jbe
add
or
divl
xchg
nop
add
mov
clc
popf
lods
dec
adc
cli
std
test
std
inc
and
sub
sbb
sbb
push
dec
data16
in
pop
inc
xchg
lret
jmp
daa
lcall
ljmp
sti
inc
out
repz
and
aam
jecxz
mov
insl
ret
xchg
pop
in
in
xchg
incl
scas
lcall
mov
or
xchg
aas
shrb
stos
loopne
lods
shl
jp
cmp
mov
icebp
pop
data16
popf
cmp
leave
push
lret
sahf
sahf
icebp
addr16
adc
imul
nop
fbld
push
mov
pushf
sbb
add
xchg
dec
cmpsl
in
fdivrs
jmp
cmp
ljmp
sub
or
xchg
pop
fwait
jo
mov
ja
cli
push
inc
in
pop
call
iret
data16
out
or
mov
adc
mov
add
out
ja
pusha
ffree
shll
sub
mov
cmp
xor
pop
inc
andl
mov
push
mov
mov
arpl
mov
int
mov
rcr
xchg
and
pop
lret
andl
add
test
fists
push
js
ds
mov
jl,pt
cmp
sub
xchg
mov
je
ja
xor
cmc
sub
sbb
jg
add
mov
jb
adc
scas
movsb
ret
aas
stos
iret
push
jne
or
ljmp
add
dec
aad
ja
xor
or
test
jmp
cli
add
mov
sub
push
pop
aas
loopne
push
push
push
lods
add
mov
xchg
test
xor
orl
ror
push
sub
dec
stos
fwait
xchg
cmp
daa
aad
push
sub
cmpsb
xchg
cmpsl
stos
mov
pop
inc
xor
cmp
mov
sahf
gs
xchg
bound
inc
sub
std
testl
gs
inc
adc
inc
dec
mov
push
add
insl
mov
fidivrs
and
xchg
xchg
lds
cmc
pop
inc
inc
jg
cmp
enter
dec
cmp
mov
cmp
xchg
sbb
push
pop
xor
shlb
add
xor
aam
jp
mov
aaa
cmpsl
xchg
rcrl
fisttps
and
xor
sub
mov
sbb
push
andl
mov
and
sub
xlat
add
test
sbb
fwait
mov
sbb
movsl
stos
mov
pop
repnz
bound
adc
jbe
or
shrb
insb
xor
jle
jmp
inc
popf
adc
cmp
imul
mov
xacquire
push
push
stos
sub
mov
mov
mov
out
call
dec
xor
das
pop
xchg
int
sub
mov
xchg
xlat
dec
cltd
sbb
lea
add
stos
xor
std
shll
outsb
sub
bound
in
scas
push
xorl
mov
dec
gs
pop
nop
mov
adc
ljmp
shl
lods
out
cmp
mov
push
cmpsl
lret
in
or
dec
lret
jmp
daa
shrl
cs
lods
test
cmpsl
std
xchg
mov
mov
add
pop
pushf
iret
sahf
jp
into
pop
jb
lahf
pop
es
mov
sbb
divb
dec
dec
mov
xchg
divl
andb
push
xlat
dec
or
sub
adc
add
fldl
push
push
xorl
add
xor
leave
ss
mov
push
addl
in
not
mov
test
or
cltd
push
rcrl
nop
imul
movsl
xor
or
push
fdivs
xchg
shlb
int3
popf
mov
testb
push
in
add
mov
add
cs
popf
call
outsb
fistl
popa
ficompl
mov
sbb
ficompl
icebp
aad
rol
jb
das
push
sub
or
add
push
popf
add
inc
or
dec
ljmp
cmp
pop
fsts
stos
mov
pop
lods
xchg
loop
sub
fcos
out
lret
cwtl
xchg
test
push
shl
outsb
cli
mov
cwtl
shrl
aaa
adc
addb
lods
pushf
ret
icebp
cmp
xor
jp
and
popf
movsb
and
psubw
nop
ljmp
cmp
sbb
test
inc
insl
scas
call
sub
or
sbb
cmpsb
jns
ja
cltd
popf
cmp
cmp
sbb
add
mov
lcall
mov
les
outsb
outsl
in
and
add
inc
popa
adc
inc
cli
popa
mull
jae
xor
repz
outsb
loopne
fwait
insl
push
ja
push
insb
out
dec
inc
sbb
pusha
dec
in
fstpl
insl
mov
xor
les
sti
jae
imul
mov
mov
cmp
lock
icebp
pop
dec
xor
fistpl
int
mov
test
xchg
popf
shlb
mov
xchg
subl
test
jle
dec
iret
cmpsl
stos
push
pop
rcrb
mov
sbbb
xchg
xchg
add
inc
jbe
mul
scas
jo
cmp
mov
fisubrs
inc
cli
push
daa
gs
ret
add
adc
push
xchg
int3
lahf
je
jp
popf
mov
test
je
jle
mov
fiaddl
clc
ss
jecxz
mov
inc
xor
inc
mov
and
push
test
jg
sar
inc
sub
dec
cmp
cmpsb
aaa
fs
xchg
dec
adc
pop
xor
out
sub
faddl
jg
lret
cwtl
pop
adc
pop
dec
and
jns
inc
or
lcall
sahf
roll
dec
cld
cli
rorl
outsl
jecxz
adc
cmc
xchg
fnstsw
test
ret
lcall
decl
mov
sbb
pop
inc
dec
lret
sbb
gs
lods
outsl
sets
jl
push
cmpl
push
out
test
fists
dec
pop
fnstcw
gs
dec
pop
dec
in
jmp
fcmovnu
pop
push
imul
sahf
pop
sub
jnp
mulb
mov
ret
jle
mov
insl
adc
cld
cmp
out
fs
ret
loopne
and
addr16
bound
out
or
pushf
test
test
fucom
cmp
xor
mov
repz
icebp
push
rorl
gs
addb
inc
mov
xor
shlb
mov
int3
push
add
mov
sahf
and
call
test
add
fidivrl
lods
push
sbb
sbb
push
pop
pop
sbb
bound
test
adc
ss
dec
aam
xchg
decb
std
cli
adc
mov
sub
enter
inc
sbb
inc
or
fldcw
mov
arpl
ret
and
and
mov
imul
jae
movsb
nop
cmpsb
xor
cmp
jae
and
xlat
inc
lock
enter
mov
and
mov
je
or
call
push
cmp
cmp
imul
test
inc
add
push
aam
fsts
jecxz
lock
xlat
or
pushf
adc
jp
outsl
adc
mov
je
mov
xor
mov
inc
icebp
dec
xor
mov
mov
cmpl
out
cs
dec
inc
cmp
xor
inc
movsl
sti
sti
push
cmc
inc
and
sti
je
mov
testl
and
call
mov
ljmp
pop
add
push
push
adcb
in
fisubs
popa
and
mov
dec
inc
sahf
xor
adc
lds
adc
loope
loope
addr16
mov
adc
test
ss
sti
adc
aaa
ret
dec
sbb
mov
in
imul
or
mov
iret
xor
cmp
dec
xor
jno
shll
xlat
in
add
inc
xor
and
xchg
leave
pusha
fdivrl
jp
into
mov
adc
fbld
movsb
pop
jnp
daa
cmp
jp
pop
mov
cmp
jmp
mov
call
gs
loopne
fidivl
jne
push
sahf
std
clc
cmpsb
pop
xor
in
popa
mov
pop
or
mov
mov
jb
inc
lock
scas
out
idivb
out
mov
inc
or
xor
or
mov
dec
ljmp
inc
sbb
mov
pop
nop
mov
out
stc
lcall
jmp
xchg
dec
push
shlb
cmc
pop
jge
sub
rcrb
les
rolb
and
and
mov
sbb
pop
pop
fisubs
jbe
push
sub
sub
mov
int
xchg
scas
inc
lret
lods
les
cmp
popa
je
mov
inc
in
adcb
ja
es
sbb
add
adcl
dec
imul
stos
add
push
push
and
push
cli
out
push
jbe
jbe
sub
arpl
push
mov
and
mov
movsb
in
test
xchg
dec
jl
adc
imulb
rol
incl
dec
mov
pop
cs
push
push
adcl
jnp
mov
jnp
nop
and
out
ret
test
ds
pop
daa
sub
mov
mov
push
push
push
mov
stos
add
cmpsl
dec
jbe
xchg
ljmp
cmp
pop
cmp
jbe
lret
pop
js
pop
lcall
dec
test
aad
fs
push
js
sbb
cmpsb
repz
ljmp
mov
jg
adc
daa
mov
and
pop
into
cmp
ret
fsubrl
pushl
mov
xchg
or
repz
mov
ret
iret
mov
dec
mov
lock
pop
out
out
xchg
fadd
sbb
cmp
repz
xchg
mov
aad
mov
das
ja
lret
pop
sub
adcb
loop
lea
ds
clc
repnz
in
into
test
sub
mov
cmc
es
jg
push
xor
dec
sub
sub
fucomi
test
arpl
jae
dec
mov
push
lcall
mov
xchg
mov
pop
out
js
xchg
push
test
pop
fincstp
cvtps2pi
dec
adc
sbb
call
test
xor
push
jns
jae,pt
ret
repz
out
sub
jecxz
cmpsb
adcb
rcl
inc
and
mov
insl
in
mov
aaa
sub
pop
movsl
and
insl
mov
xchg
xchg
or
fsubrs
or
outsb
xchg
or
mov
bswap
push
sbb
mov
and
insl
arpl
or
xchg
mov
mov
cmpsb
mov
fstp
mov
mov
sub
stc
xor
insl
aam
das
mov
xor
mov
mov
pop
in
iret
xchg
insl
sbb
mov
leave
mov
repz
lea
sub
xchg
push
pushf
and
push
xchg
sub
mov
mov
insb
xchg
push
jbe
xchg
addr16
add
in
inc
pop
out
shlb
or
cli
repnz
fidivrs
pop
sub
shl
outsl
sarb
in
cmpl
lods
in
add
mov
or
dec
mov
and
mov
mov
push
push
fidivrl
mov
xchg
inc
in
mov
lods
push
xor
cmp
push
cmp
call
lcall
es
stos
push
nop
add
jg
sub
adc
icebp
fwait
out
lret
repz
jecxz
mov
push
push
pop
roll
jno
out
inc
not
es
jo
adc
cs
clc
lods
fwait
cmp
or
add
dec
icebp
pop
fs
cld
cwtl
shll
lret
jae
sbb
pop
mov
sbb
mov
xchg
rcrb
out
fs
clc
xor
sar
gs
in
mov
into
imul
mov
sbb
xor
mov
dec
push
inc
inc
jns
sti
inc
nop
mov
cmc
fistl
lahf
or
bound
cmp
lods
fdivrl
fnstsw
add
push
push
fsubrl
dec
icebp
inc
or
jns
das
mov
into
clc
inc
mov
mov
call
arpl
incl
ss
xor
fcomps
dec
xchg
sub
inc
mov
mov
push
popf
mov
mov
insb
stc
and
mov
xor
sbb
dec
cld
movsb
movsb
lret
lea
stos
xchg
mov
xchg
cmpsl
repz
mov
cmp
push
dec
sbb
test
sti
rclb
inc
mov
subb
hlt
inc
in
adcl
sbb
cmp
and
jecxz
pusha
or
ja
mov
jge
stc
sub
outsb
xor
sub
test
mov
xchg
and
out
jae
outsb
dec
push
cmp
test
jne
or
pop
pushf
lret
or
imul
insl
sahf
pop
lods
pusha
out
test
int
add
inc
jmp
cmc
outsl
mov
inc
test
inc
xchg
and
cmp
shrb
xchg
add
cmp
outsb
cmpsb
jno
pop
scas
xchg
lods
xor
rcl
fcomps
insl
add
push
loopne
por
jae
sarb
in
add
add
xchg
or
cs
sub
andl
aaa
inc
nop
xor
inc
jmp
lods
nop
add
xlat
mov
and
lret
jle
repnz
std
fistps
std
psubw
mov
cmp
xor
outsb
xor
das
ror
sbb
inc
imull
fidivrl
daa
pop
ret
jae
mov
loope
jp
inc
jge
sub
sbb
les
call
add
aam
in
int
lock
lea
or
jl
pop
es
mov
cmpw
out
sahf
jb
mov
sbb
cmp
jg
xchg
std
xchg
les
xchg
push
iret
int
leave
xor
rcll
ret
sbb
mov
lret
cs
and
jecxz
lret
xchg
pop
sbb
out
fadds
add
icebp
les
stos
in
dec
movsl
lret
stc
mov
or
xchg
xchg
adc
fbstp
dec
xchg
mov
adc
xchg
mov
in
jae
xor
dec
lret
inc
dec
push
icebp
push
roll
out
or
testl
pop
ficoms
pop
mov
pop
into
jp
push
enter
and
rcrl
je
fmuls
ja
sub
xchg
lcall
mov
xor
mov
xchg
dec
imul
and
cmpsb
inc
mov
inc
xchg
or
lock
ljmp
testb
mov
xor
mov
inc
jmp
ljmp
inc
and
pusha
mov
xchg
das
mov
aam
dec
fs
out
mov
xchg
dec
gs
pop
fadds
xor
jp
cwtl
rclb
lcall
xor
fidivrs
cmp
cmp
and
sti
push
inc
cmp
or
inc
cmpsl
sbb
fistpll
cmp
push
ret
mov
divb
or
inc
in
mov
jne
aam
jmp
das
mov
pop
mov
arpl
mov
mov
lcall
push
rcl
cltd
inc
jp
mov
push
inc
cmp
movsb
mov
shrb
test
movsb
mov
lret
js
jne
jbe
into
and
loop
mov
insl
mov
sbb
adc
and
lret
jle
pop
insb
pop
mov
bound
rorb
mov
ja
sub
cwtl
or
pop
jo
cmpsb
mov
sbb
xor
jmp
sub
out
je
jbe
in
bound
mov
mov
mull
rcl
and
mov
jmp
pop
repz
sub
andl
aaa
repnz
add
mov
jp
and
mov
out
imul
mov
movsb
mov
mov
mov
pop
in
repz
addr16
xor
sti
insl
mov
scas
or
inc
popf
inc
test
call
imul
flds
adcb
sub
mov
sub
in
popa
push
add
inc
inc
push
mov
jl
out
int3
stos
shlb
stc
lea
push
or
sahf
cmp
bound
mov
ja
test
add
and
addl
cs
adc
negb
mov
xchg
xlat
das
mov
in
mov
lock
mov
xor
icebp
add
shrl
insb
and
jo
lods
jp
jns
test
sub
out
jl
sbbb
and
sbb
mov
lds
xor
repz
outsl
jno
pop
cmp
aam
addb
dec
jg
call
in
push
jecxz
push
test
jne
xchg
sbb
sbb
scas
sbb
inc
or
xchg
ret
mov
dec
mov
mov
mov
jae
lcall
outsb
les
fsqrt
daa
mov
rclb
xchg
and
and
jno
popa
sub
in
add
iret
inc
jns
not
imul
int
cwtl
and
test
and
int3
jbe
and
adcb
out
mov
stos
xlat
xchg
inc
mov
xchg
add
cli
push
int3
ja
jmp
gs
and
or
stc
mov
shrl
test
sub
xlat
and
fisubl
cmp
cltd
ret
dec
loope
adc
pop
lret
addr16
or
adc
mov
mov
mov
shr
ret
loop
imul
cmp
add
es
xchg
jmp
xchg
das
sub
cmp
sbb
mov
in
mov
ss
add
mov
and
push
cld
xlat
cltd
stc
adc
mov
pop
cmpsb
or
cmpsb
cltd
xor
iret
hlt
js
frstor
jb
jbe
xchg
movsb
leave
jbe
pop
sub
test
xchg
xor
jo
mov
cli
sarl
mov
mov
mov
xlat
push
push
std
nop
push
mov
pop
lds
jno
movsl
pop
stos
mov
sub
aas
inc
or
mov
fwait
arpl
loopne
ss
xor
sbb
daa
pop
mov
xchg
add
xchg
clc
dec
fstpt
bound
pop
mov
add
and
repz
subl
add
lds
pop
adc
fcompl
or
dec
lock
sahf
mov
jne
add
mov
and
jmp
push
cmp
xchg
vpacksswb
dec
and
aaa
sbb
jg
ja
mov
inc
fldcw
jnp
or
out
add
sbb
jl
imul
daa
inc
lock
movsb
add
add
addr16
mov
and
mov
mov
es
fs
pop
sbb
mov
adc
repnz
push
adc
cmpsl
adc
and
cmp
ss
add
ja
mov
mov
insl
mov
sahf
xor
fs
add
fimuls
std
push
jnp
dec
add
mov
in
fimull
mov
jp
into
mov
rorl
xor
xor
and
inc
mov
mov
cmp
jp
sub
jl
xchg
sbb
shlb
stos
repnz
jle
pop
repnz
in
cltd
fsts
test
lahf
inc
or
inc
fs
flds
mov
hlt
test
mov
pushf
cmp
xchg
lret
scas
pop
lahf
lds
scas
gs
addr16
mov
and
dec
inc
loopne
sbb
fcomps
mov
mov
lds
cmc
test
dec
jmp
sub
cmp
fld
shrl
lds
adc
lods
insl
push
stos
rorl
push
sub
add
jnp
nop
jp
or
lods
sub
cmp
nop
imul
inc
lret
stc
jg
push
out
mov
mov
inc
movsb
js
sub
jnp
cmp
dec
cmpsl
shl
in
xchg
or
xchg
fsubs
lret
stos
mov
dec
les
or
jp
pop
sbb
dec
js
xor
mov
cmpsl
rorl
mov
dec
inc
out
sbbb
lret
pop
in
jmp
add
xchg
movsb
jg
inc
jle
mov
pop
jbe
pusha
icebp
jno
jns
mov
inc
or
mov
test
mov
out
test
mov
inc
sbb
loopne
xor
sbb
xor
cmp
pop
pop
in
pop
or
imul
sub
aam
inc
adc
sub
cmpl
mov
add
enter
aas
and
add
inc
jbe
jmp
or
call
hlt
repnz
loopne
mov
fidivrs
cmp
add
daa
add
mov
pop
rorb
or
sbb
mov
scas
and
push
xor
sub
and
jns
jle
sub
movsb
xchg
insb
popf
pop
jo
in
push
cli
repz
outsl
adc
insl
xor
mov
and
mov
xor
jbe
popf
leave
decb
and
add
adc
cmpsl
cli
psubb
test
mov
xor
aas
mov
das
pop
notl
mov
sub
movsb
sub
xchg
mov
je
jp
pushf
push
ljmp
les
lds
int3
sbbb
arpl
in
loopne
fwait
adc
mov
ljmp
das
decl
testl
pop
pushf
push
out
push
std
popf
adc
push
shrl
cmpsl
fldl
mov
fisttpll
xor
xchg
and
push
jb
daa
add
sbb
pop
leave
int
out
fld
mov
xor
cmp
stc
pop
stc
jnp
inc
jnp
cmpsl
dec
dec
sbb
mov
in
mov
mov
inc
outsl
jmp
roll
push
lods
pop
mov
pop
fs
push
adc
sub
push
jae
in
xchg
mov
frstor
sub
mov
push
push
sbb
add
adc
out
imul
insl
std
dec
rcl
fcmovbe
xchg
jbe
mov
mov
dec
loope
jae
push
mov
inc
insl
lods
pushf
fistl
out
aaa
mov
mov
or
add
cmpsl
xchg
jno
ret
iret
add
in
test
xchg
iret
xchg
lcall
cld
xor
aas
icebp
pop
and
mov
ja
add
adc
inc
xchg
ss
mov
stos
popf
mov
repz
push
daa
sbb
mov
mov
inc
adc
ds
jb
mov
lea
mov
or
or
sub
cmp
nop
cmp
pop
clc
sarb
mov
inc
shr
shlb
xor
mov
adc
lock
out
push
add
jge
icebp
cmp
in
jnp
mov
aaa
in
dec
dec
cmp
test
xchg
pop
ret
rcrl
inc
loop
pop
jmp
xchg
xchg
ffreep
in
mov
loope
sbb
loop
xchg
mov
jecxz
dec
push
mov
or
add
adc
pop
cmp
inc
pop
std
pop
lds
clc
jbe
int
insl
sub
adc
push
jae
in
insb
xlat
dec
mov
xor
rcll
sbb
aam
call
xchg
mov
cmpsl
cmpsl
or
and
pop
mov
cmp
xchg
mov
ja
andps
mov
sub
in
outsb
and
jmp
imull
mull
inc
jle
cmp
pop
or
imul
inc
fadd
or
lahf
rcr
cmpsl
shl
fildl
adc
movsl
in
test
aam
icebp
popf
imul
fistl
sub
dec
hlt
jmp
pop
adc
pusha
pop
xor
and
sti
mov
scas
loop
loope
dec
adc
daa
ljmp
add
das
fs
mov
into
mov
or
pop
adc
and
test
add
dec
cli
fiaddl
fnstenvs
std
fsubrs
dec
mov
hlt
leave
sub
jno,pt
add
inc
xor
cwtl
js
mov
outsl
cmp
sbb
cmp
cmp
pop
xor
out
inc
jno
addr16
shrb
leave
mov
push
dec
pop
add
sti
mov
and
lock
pop
imul
sub
mov
int3
idiv
push
test
insl
push
cltd
cmpsb
andl
test
int
aam
mov
rcrb
cwtl
arpl
nop
cmp
or
cmpb
movsl
fadds
inc
pop
jp
mov
in
jb
inc
lcall
jmp
push
fcompl
push
ljmp
cmc
push
adc
mov
sbb
sub
xor
adc
cmp
and
vunpcklpd
repnz
cli
insb
cmp
nop
push
fimull
mov
adcb
mov
mov
dec
adc
ret
sub
lea
xor
adc
push
jns
mov
push
movsb
pop
mov
jmp
cmc
push
call
out
push
jbe
popf
mov
push
inc
inc
jle
nop
mov
cmp
mov
jmp
add
scas
add
xor
in
subb
mov
xor
stos
jne
jle
ror
shlb
jmp
rolb
xchg
sub
jle
mov
aas
nop
in
sub
sbb
aad
ds
call
inc
test
sub
test
jle
dec
push
sbb
lds
push
dec
mov
dec
xchg
shl
add
nop
jno
or
sub
in
cs
jb
movsl
push
push
cltd
inc
xchg
jbe
cltd
shr
ficompl
sahf
lock
rorb
and
or
inc
dec
xchg
cmc
xchg
cmp
add
add
mov
jl
in
sbb
dec
int3
ljmp
jnp
mov
adc
mov
xchg
outsb
rcrl
and
imul
sbb
pop
hlt
std
ljmp
jae
sahf
adc
adc
mov
mov
int
push
in
lcall
mov
adc
mov
mov
and
in
mov
lcall
sub
fs
stos
cld
fidivrl
addr16
out
stc
rcl
adc
adc
mov
xchg
dec
jge
pushf
aam
pop
icebp
xor
shrl
fcmovne
out
push
add
leave
neg
lods
add
test
sub
in
call
sub
dec
jne
popf
pop
xor
and
mov
pop
sbb
scas
xchg
mov
out
in
cld
push
test
out
mov
or
cmp
cmp
into
sbb
inc
add
lahf
mov
xor
sbb
mov
stc
and
add
dec
pop
sub
fsts
mov
ret
lods
inc
jne
scas
cmpsl
fldl
mov
pop
mov
out
rorl
xchg
mov
sub
test
imul
mov
leave
repz
cmc
sub
cmp
stos
leave
popf
or
push
arpl
lahf
je
std
roll
mov
testl
out
out
jb
dec
push
subb
or
popf
enter
sub
arpl
les
push
daa
dec
sti
ret
adc
dec
xchg
mov
je
lods
ljmp
popf
sub
push
push
in
ds
push
cmc
push
add
std
add
lds
aad
std
mov
ret
cmp
mov
push
ret
inc
ds
andl
rcrl
fcos
jmp
pop
push
dec
mov
add
cmp
test
call
std
rcrl
andl
pop
lret
push
sbbl
push
xor
or
push
push
aas
mov
repz
xor
inc
lds
cmp
mov
mov
lcall
pop
mov
lret
jecxz
stos
iret
mov
pop
dec
sti
bound
adc
jnp
dec
lea
lea
xchg
mov
fisubl
push
aam
mov
inc
outsb
jl
mov
mov
mov
cmp
sbb
xchg
out
xchg
stc
imul
loope
and
jb
jmp
scas
add
inc
jbe
mov
lret
and
jo
mov
dec
ja
inc
loope
cmp
adc
scas
xchg
inc
cwtl
seta
movsl
lea
and
inc
and
jmp
js
xchg
imul
add
fwait
jl
inc
mov
roll
cmp
loop
sar
enter
pop
dec
sahf
push
shlb
std
pop
aad
data16
jne
jecxz
or
ret
pop
sahf
lcall
add
jg
mov
pusha
and
insl
notb
roll
lods
repnz
into
pop
pop
ret
out
adcb
ret
int3
sub
push
sbb
cmp
das
cli
fistpll
lea
clc
or
fsub
aaa
enter
dec
sub
sahf
mov
mov
dec
pop
add
clc
lahf
mov
fcmovbe
xchg
inc
xchg
pop
rorb
pop
sub
push
fisttpll
inc
dec
adc
pop
wbinvd
bound
adc
sbbl
mov
hlt
fistps
add
fwait
push
xchg
lods
insb
xchg
ljmp
sub
push
pop
sbb
scas
xchg
mov
pop
add
push
push
aaa
jo
mov
and
ds
lock
rclb
leave
cli
mov
loop
mov
cmp
dec
sbbl
adc
and
int3
icebp
mov
test
sub
movaps
jl
ljmp
loop
cmp
dec
rclw
stos
pop
shll
xchg
inc
sub
sbb
lcall
lock
inc
fs
aas
xchg
and
sub
pop
xchg
sbbl
movsl
mov
push
int
sar
mov
ljmp
pop
push
test
dec
sbb
and
lds
pop
in
xchg
and
inc
in
nop
sarb
subb
cmp
rcl
xor
out
mov
mov
fucomi
icebp
or
add
subl
jp
cmp
clc
testl
mov
xchg
js
cmpsb
ljmp
cmp
or
test
fisubrs
in
sbb
cs
ret
sub
sub
scas
push
jnp
lea
sub
xchg
pmulhw
dec
push
xchg
test
pop
lahf
push
stos
and
cld
cmp
jns
cli
jecxz
or
out
mov
add
xchg
out
fdivrl
addr16
int3
pop
or
enter
cli
and
inc
inc
xor
adc
or
enter
pop
push
dec
push
prefetch
pop
add
jmp
insl
sbb
clc
in
insb
movsl
lock
daa
shll
xor
cli
dec
mov
xor
ret
out
jmp
rcll
es
ds
fsts
cmp
outsb
push
mov
int3
in
ds
je
hlt
test
mov
pop
adc
in
adc
int3
andb
int
xor
outsl
js
movlps
pop
je
call
mov
clc
sbb
mov
sbb
cmp
ss
cli
mov
inc
int
mov
lret
push
test
push
jae
rolb
sbbl
and
jo
not
loop
mov
cli
aam
add
mov
inc
ss
les
out
out
mov
int3
les
rorl
xor
and
sbb
cld
sar
nop
test
xchg
cmp
fstpl
adc
daa
push
push
mov
inc
test
fisubrl
je
push
fimull
jae
jmp
jp
int3
rorb
orb
in
gs
dec
int
repz
hlt
ja
mov
sbb
je
mov
stc
aaa
xor
movsb
cmp
push
in
mov
les
dec
mov
inc
pop
mov
xchg
je
sbb
out
jecxz
push
out
arpl
in
mov
mov
pusha
cwtl
dec
stos
divl
push
out
divl
pop
nop
cmp
or
shrb
mov
les
jo
mov
icebp
sbb
fistpll
out
aad
repnz
js
es
cmp
into
jecxz
inc
sub
packuswb
push
adc
push
insl
push
push
xor
repz
les
dec
sbb
or
sub
pop
mov
adc
out
jmp
repnz
cltd
fmull
aas
xchg
sub
shrb
rcrl
xchg
xchg
mov
insb
jns
jo
mov
lcall
cs
push
push
movsl
jae
hlt
ljmp
cmc
mov
addl
inc
push
imul
push
outsl
fldt
dec
cmpl
clc
jns
dec
sahf
outsl
and
lock
js
xchg
fwait
sahf
sbb
testl
jae
jmp
mov
push
jnp
hlt
mov
jecxz
insb
and
xchg
add
pmulhw
or
adc
loopne
leave
stos
lahf
popl
movsb
nop
sub
inc
adc
xlat
iret
mov
jae
xlat
into
dec
push
and
inc
push
out
fstpl
jb
or
mov
adc
pop
loope
mov
inc
inc
xchg
inc
xchg
push
ds
or
and
jmp
jns
movsl
je
inc
in
jl
pushf
insb
stc
mov
and
push
push
adc
movsb
add
inc
push
lret
aaa
or
fcmove
jae
call
pcmpeqd
repz
scas
xor
lahf
add
xor
mov
push
ret
ja
scas
jmp
or
roll
scas
insl
jnp
jo
jp
lock
add
gs
jp
and
xchg
mov
mov
shlb
xchg
lods
fs
test
inc
sub
push
pushf
loop
pop
call
out
ret
cmp
and
push
mov
movsb
aas
jbe
or
add
mov
sbb
lcall
add
test
jo
faddl
cld
fistps
dec
inc
out
xor
pop
pause
repnz
bound
mov
cmp
gs
inc
nop
push
scas
out
das
roll
pushf
jg
pop
inc
xchg
lds
sub
inc
mov
mov
movl
jmp
xor
rcl
xor
movsb
cmp
or
adc
push
ss
lret
rcrl
xchg
scas
loopne
push
aam
rcrb
xor
insb
pop
les
lahf
jge
mov
xor
pop
and
aas
ret
mov
push
dec
push
xchg
cmp
mov
push
cmc
outsb
sahf
jge
int3
cli
shrb
andl
cmpsl
cmp
or
test
imul
pop
fmuls
pop
xchg
and
mov
pop
sub
pmaddwd
sbb
jle
outsl
add
push
cmp
lea
inc
jbe
cmp
dec
jp
cltd
mov
jmp
bound
mov
cmp
mov
push
cli
dec
jae
fninit
daa
scas
stos
sbb
dec
xor
fwait
add
mov
mov
imul
xor
inc
xor
mov
rorb
iret
and
imul
push
cmp
jl
mov
test
adc
pop
sbb
push
jne
pop
cld
dec
jo
inc
shlb
sarb
test
movsb
out
sub
stos
mov
fs
pop
repnz
inc
push
inc
add
cmp
inc
aam
cmpl
xchg
xor
xchg
fstp
imul
repnz
xor
cmpl
push
imul
mov
arpl
fidivrl
adc
insl
imul
xchg
aad
jns
jae
std
push
dec
lock
or
stc
cmp
xor
jl
lds
popa
adc
ret
inc
xchg
fcoml
aam
pusha
add
lds
mov
sub
or
pop
or
pop
rorl
icebp
clc
or
and
adc
pushf
push
pop
inc
fisubl
sub
data16
or
incl
mov
and
mov
cs
cmpl
pop
mov
xor
mov
jp
movl
inc
dec
mov
test
fildll
cmpsl
mov
std
adc
adc
add
stc
fisubs
pop
sub
sub
xchg
pop
jp
sub
jo
sarb
sbb
iret
jo
mov
cmp
popa
xor
xor
pop
adc
out
das
push
mov
call
out
insl
fwait
dec
sbb
mov
sbbl
inc
cmp
pushf
xchg
dec
sbb
add
sahf
adc
mov
add
xor
dec
mov
popf
inc
imul
add
pop
aad
jmp
cmpsb
inc
bound
jmp
dec
insb
clc
ljmp
sub
inc
icebp
push
popf
mov
ja
and
adc
push
mov
into
out
ret
dec
lods
xchg
jb
fdivrs
pop
add
leave
fs
mov
es
daa
scas
cmp
repnz
cld
enter
mov
ret
cmp
jnp
mov
fisttpll
mov
lods
and
ss
sub
add
lods
cltd
mov
mov
lock
push
push
inc
or
jg
nop
stos
sahf
in
cmp
jnp
ss
mov
movsb
lods
out
xchg
mov
shll
cmp
or
nop
aad
push
je
enter
jbe
sahf
jbe
xchg
leave
sti
sbb
andb
xchg
or
and
cmpsl
push
or
or
lret
cmc
xlat
divl
andb
mov
xchg
out
arpl
mov
or
lds
jg
pop
rclb
jmp
adc
xchg
shl
stc
frstor
sbb
lods
lods
testb
scas
jge
imul
and
insb
ljmp
push
lds
das
enter
or
xor
push
test
pop
add
dec
xchg
into
xchg
mov
addr16
sub
hlt
mov
adc
psubsb
mov
and
rorb
popfw
cmpsl
inc
adc
mov
sbb
lahf
ja
push
out
cltd
mov
mov
jns
repz
mov
mov
rcl
pusha
push
cmc
mov
scas
jns
sub
and
outsb
mov
into
pop
add
in
add
pushf
dec
ret
adc
push
testl
rcrb
stos
into
stos
and
cmp
xchg
arpl
popa
loop
ds
mov
jne
or
enter
mov
jns
lret
mov
jnp
cmp
addr16
mov
fdivrl
jnp
jmp
fidivrs
loop
outsl
sub
sub
cmpsl
jle
mov
lret
mov
dec
or
imul
push
and
loopne
out
sub
loopne
push
das
sbb
jne
jo
stc
fidivs
adc
mov
pop
mov
rcrb
add
dec
out
dec
ljmp
subb
outsb
pop
pop
or
data16
or
stos
jmp
stc
movsb
xor
nop
cmp
jecxz
mov
jecxz
mov
int
movsl
test
mov
icebp
mov
jb
xorb
cld
stc
push
rcrb
jecxz
pop
and
adc
mov
xchg
xchg
cwtl
dec
or
sbb
int
jecxz
jb
lret
outsl
ret
kmovw
cmp
repnz
das
push
sbb
pop
dec
js
xor
inc
push
adc
push
jae
xchg
test
cmpsb
or
out
push
jp
inc
jl
and
sub
adc
push
nop
and
pushf
push
out
movl
lock
lret
pop
cmp
stc
shrb
mov
cmc
push
cmc
mov
add
add
cmp
mov
sahf
inc
xorl
test
sahf
adc
inc
subb
sub
mov
push
cmpsb
std
push
enter
push
ret
cmp
and
push
nop
mov
mov
push
out
or
flds
xor
scas
mov
sti
mov
scas
aad
hlt
xor
jo
mov
mov
jno
pop
push
mov
adc
xor
lahf
int
aam
je
or
lret
push
mov
leave
mov
and
pop
pop
dec
cmp
imul
std
mov
int3
aam
lods
test
add
sbb
scas
and
daa
mov
test
mov
insl
je
fadds
sbb
mov
loopne
mov
mov
popf
jbe
in
and
nop
adc
xchg
jecxz
and
adc
xor
jmp
cwtl
dec
negl
jnp
dec
bound
mov
pop
imul
mov
pop
add
negb
std
rorb
mov
imulb
test
mov
mov
imul
insl
add
lret
cli
adc
repnz
xchg
mov
mov
sbb
xchg
mov
lahf
inc
sbb
dec
pop
xor
mov
cmp
sbb
dec
addr16
xor
aaa
mov
jbe,pn
mov
xchg
rcl
icebp
push
in
cmp
mov
jbe
mov
lock
lods
cmp
orl
mov
dec
mov
fwait
xchg
call
std
mov
movsl
cmp
add
sbb
pushf
jl
inc
cmp
std
imul
inc
loopne
push
sbb
ljmp
xor
or
mov
dec
je
sub
rcrl
xchg
mov
and
add
jae
push
adc
out
and
sbb
cmp
dec
je
stos
jle
fcoml
jmp
je
or
enter
dec
xor
mov
and
nop
push
jae
adc
xor
push
mov
sbb
jns
sbbb
pop
clc
imul
fmull
lahf
repz
jp
mov
in
and
mov
fstpt
mov
enter
mov
xlat
lret
push
call
jb
mov
std
adc
orl
mov
pop
dec
cmpsb
adc
add
mov
jmp
idivb
and
push
sub
int
dec
inc
lret
inc
jmp
mov
rorb
pop
push
add
imul
arpl
shl
negb
cmp
xchg
mov
mov
aaa
popf
jns
pop
ljmp
or
insb
adc
inc
sti
inc
loope
dec
sbb
test
xlat
stos
mov
cmpsl
leave
sub
ljmp
xor
movsb
or
jns
clc
dec
pushf
addr16
mov
je
sti
adc
mov
add
mov
dec
fsubrl
jns
cmp
fmuls
push
mov
add
sub
push
jne
stos
inc
cmp
mov
and
xchg
iret
dec
cmp
aas
movsb
jnp
mov
je
sbb
sbb
mov
mov
ficomps
daa
out
jle
or
shr
dec
rcl
int3
or
xchg
and
dec
pop
cmp
fnstcw
int3
pop
pop
cld
popa
push
rorl
or
add
sub
adc
outsb
sub
mov
incb
xlat
and
cmpsl
inc
adc
out
mov
out
and
outsl
and
je
sub
mov
mov
fwait
inc
sti
xchg
lcall
mov
push
xor
mov
in
dec
les
pop
inc
xor
push
out
xorb
mov
daa
inc
fs
rorb
jmpw
das
loope
cmc
xchg
cmp
push
popf
shrb
xor
jb
pushw
adc
test
add
outsb
jno
pop
mov
push
lcall
xchg
daa
add
inc
and
cmpb
enter
pop
mov
stos
pop
ljmp
push
test
out
test
aad
nop
or
rorb
and
stos
ss
fsub
mov
repnz
in
dec
mov
and
mov
ret
enter
into
iret
hlt
adc
push
and
push
or
rcr
xlat
push
insb
out
sub
mov
push
inc
hlt
lock
mov
dec
sti
cmpsb
xor
mov
lods
daa
push
sbb
pusha
sub
std
dec
repz
add
imul
sub
ret
ror
pop
aaa
xchg
xchg
movsb
jmp
cmp
call
pop
dec
mov
loop
test
sti
shll
in
sub
jg
lods
or
push
sub
out
add
add
dec
loopne
loope
mov
xchg
shlb
pop
cmp
mov
adc
ljmp
fsubrl
repz
in
jle
mov
lcall
rclb
aam
and
subl
and
ret
add
nop
jb
xor
lods
leave
ret
dec
push
pop
mov
dec
mov
call
cmp
push
loop
mov
js
or
push
mov
sbb
iret
into
fwait
dec
sub
data16
mov
cs
arpl
mov
xlat
jb
adc
loop
mov
aaa
push
repz
jo
xor
ss
shl
mov
and
in
addl
xor
sbb
mov
outsl
dec
add
sub
mov
enter
shrb
pop
stos
jp
jle
test
rol
insl
loope
mov
lock
mov
sti
or
push
mov
lds
fiaddl
aas
repz
repnz
mov
sbb
movsl
lods
es
and
iret
lret
adc
ret
test
movsb
stos
cwtl
mov
push
out
mov
push
push
or
andl
jmp
pop
sbb
lret
mov
outsb
jns
adc
stos
xchg
mov
mov
divb
out
cmc
or
mov
xor
push
jbe
pushf
data16
insl
jecxz
call
xchg
aaa
mov
mov
notl
sub
and
dec
inc
rep
inc
pop
fists
and
test
sbb
cmpsl
jnp
pop
mov
je
adc
inc
sbb
pop
clc
lahf
fstps
aam
pushf
sub
jbe
inc
inc
mov
test
xchg
sub
ljmp
mov
fisubrs
mov
adc
and
cmp
fdivrs
lock
add
push
and
inc
ljmp
jno
cmpsl
pop
ljmp
mov
sbb
add
aaa
and
loop
mov
std
adc
dec
cs
rolb
outsb
scas
and
xchg
mov
mov
jno
mov
cltd
sbb
ret
mov
lds
rcrb
and
jno
and
pop
cltd
aas
clc
pushf
sub
cmpsb
and
jnp
ret
fisubs
test
or
mov
push
jge
sti
movsl
xorl
lods
xor
and
mov
mov
loop
mov
cmp
mov
mov
loopne
and
xor
mov
mov
pop
mov
adc
inc
jnp
mov
cmp
pop
rcrl
sarl
push
divl
frstor
and
aas
push
or
add
mov
push
pop
xor
rcrl
cmp
sub
sbb
in
gs
mov
or
xor
jb
imul
xchg
sub
ljmp
mov
and
pop
push
sarl
insb
aaa
cmpsl
fstp
lods
push
sbb
gs
push
adc
call
sahf
and
scas
push
daa
xor
hlt
sbb
xlat
xrelease
sahf
fisttpl
sahf
and
mov
push
and
inc
jns
sub
push
pop
aad
subb
add
aad
and
mov
repz
loope
call
clc
jl
aad
pop
and
and
test
mov
mov
clc
xlat
mov
mov
nop
mov
decb
insb
test
jo
movsl
jno
rorb
outsl
lds
jo
insl
fisttps
xchg
jns
int3
mov
cmpsl
icebp
fs
cmp
fs
cmp
loope
or
mov
pop
cld
movsl
lret
psllq
gs
xchg
mov
cmc
gs
rcll
stos
sahf
xchg
sbb
lret
inc
aaa
stos
mov
mov
push
mov
lret
sbb
fsts
push
push
leave
popa
xor
dec
mov
push
cmp
mov
mov
iret
stos
mov
cld
inc
jnp
push
mov
pushf
push
push
add
in
inc
cmc
iret
adc
lods
dec
pop
jle
stos
xchg
leave
mov
cmp
adcb
mov
push
jb
incl
call
sub
cmpl
jbe
lock
mov
pop
mov
test
jne
xchg
int3
mov
cmpsb
inc
adc
int
jmp
dec
mov
test
mov
loopne
sub
lock
cmpsb
push
mov
mov
push
add
test
pop
daa
lea
jg
cmp
inc
dec
fldt
loope
jge
mov
jl
cmpsb
nop
int3
cmp
ja
dec
jne
inc
cmpsb
mov
loope
jo
dec
mov
popl
xchg
insb
pusha
push
fwait
adc
in
mov
jp
mov
cmp
sbb
faddl
insl
das
dec
xchg
or
ss
sub
add
int
sahf
out
inc
adc
pop
push
xlat
dec
push
xchg
push
adc
lock
lahf
clc
push
daa
or
inc
je
js
xchg
stos
jb
sahf
test
jecxz
sub
repz
mov
mov
xchg
addb
cmp
insb
ss
sbb
lahf
scas
push
scas
js
sbb
mov
js
rolb
jnp
cmp
sub
push
pushl
scas
jns
mov
cltd
movsb
and
push
mov
leave
pushf
or
adc
cmp
ficompl
int
jge
dec
xor
pop
xchg
popa
xchg
and
fcomps
and
sbb
movb
andl
mov
aam
in
imul
cli
add
out
lcall
enter
repz
mov
movsl
push
jmp
push
aaa
or
in
xor
inc
push
ds
std
sbb
hlt
movsl
popa
xchg
mov
lahf
xor
outsb
inc
pslld
imul
insb
fsts
inc
pushf
aas
insb
das
mov
rcrl
jl
cmp
push
mov
and
fwait
aas
jmp
pop
push
fwait
jecxz
imul
push
test
jae
lret
rolb
or
addr16
dec
jns
int3
sbb
daa
lahf
movsl
enter
movsb
mov
push
outsl
pop
rcrb
cmp
fs
inc
xor
mov
xchg
lret
push
mov
jmp
test
in
sbb
sub
xcrypt-ofb
cmpsl
outsb
mov
cmpsl
mov
daa
add
xchg
jns
xchg
mov
mov
bound
pop
jb
mov
mov
aad
jae
jg
outsb
pop
xor
push
push
movsl
mov
rclb
clc
xor
lea
sbb
push
mull
sub
mov
mov
fwait
enter
dec
sti
push
dec
xchg
inc
lret
sbb
ss
fsub
push
mov
jle
lcall
cmp
and
add
xchg
ljmp
divl
lock
ss
xor
pop
lea
jp
xor
test
hlt
sbb
cmp
arpl
rorb
mov
clc
jne
cs
icebp
lods
rcr
inc
loop
aad
sub
mov
enter
addr16
inc
jne
inc
mov
aad
cmp
mov
cmp
loop
xor
std
and
int
stos
popl
mov
jnp
popf
add
jl
cmp
rcrb
insl
popw
and
and
adc
xor
dec
out
fstps
imul
int3
pop
aad
lret
mov
dec
fidivl
aam
or
mov
sti
ss
lock
lcall
sub
mov
jecxz
stos
in
jns
rcrb
data16
sub
xorl
sbb
lcall
in
loop
lods
jge
fsubrs
cmp
aas
setae
cmp
mov
shll
adc
shlb
jbe
pop
push
mov
xchg
adc
xchg
fs
dec
dec
mov
repz
dec
push
and
xchg
stos
repnz
xchg
add
dec
pop
stos
dec
mov
jp
addr16
leave
loopne
das
xorl
inc
inc
out
bound
fsubr
stos
outsl
hlt
daa
mov
jae
call
loope
mov
lret
push
sbb
and
int
xchg
cmpb
test
dec
outsb
fdivrs
dec
dec
jno
out
sub
lahf
cmp
xchg
jno
das
ja
stos
sub
jns
xchg
test
sub
jb
mov
pop
mov
push
outsl
movsb
adc
jae
test
mov
notl
mov
insb
jae
add
outsl
pop
insl
cmp
sub
aad
daa
push
mov
sbbb
lcall
pop
xor
sti
mov
xor
cwtl
xchg
push
int3
out
out
sub
xchg
lcall
nop
inc
popf
cmpsl
lods
inc
pop
shr
jae
inc
adc
js
xorb
into
xchg
inc
mov
ss
push
cmpsb
sbb
mov
and
decl
sub
adc
test
dec
xor
cmp
mov
cmp
insb
iret
stos
pop
pop
or
aam
rclb
ds
in
jo
je
jbe
aam
inc
adcl
mov
dec
test
jb
pop
movsb
jg
shl
push
dec
sbb
push
mov
iret
das
stos
push
lods
ljmp
popf
stc
leave
sbb
mov
mov
imul
jbe
sub
xorl
fidivl
adc
push
lret
adc
hlt
xchg
xchg
sub
or
jmp
adc
enter
cltd
mov
mov
imul
dec
mov
jle
mov
xchg
jge
mov
cmp
dec
and
dec
mov
das
stos
lods
inc
mov
cmpsb
lahf
paddusb
mov
xor
nop
fidivs
flds
inc
pop
jbe
fnsave
aam
jne
js
inc
testb
les
movsb
mov
dec
or
addl
mov
pop
push
xor
ds
js
jp
add
pop
popa
iret
aaa
sbb
popfw
clc
lea
lds
sub
adc
mov
aaa
mov
int3
shrl
cmpb
aaa
sti
fisubl
inc
adc
dec
mov
push
sbb
loopne
movsb
add
fcomip
ljmp
mov
xor
sub
inc
cmpsb
and
push
adc
or
push
nop
mov
std
push
sbb
das
cmp
test
imul
sbb
movl
dec
fisttpll
sub
sarb
inc
incl
hlt
jae
xor
xchg
shrb
imul
adcb
mov
sti
jae
das
les
push
fsts
lahf
jns
xchg
ret
sti
push
adcl
ss
jne
lea
cltd
rorb
lahf
repnz
jo
xchg
cltd
sbb
add
xchg
subb
xor
nop
push
push
fwait
push
dec
mov
int3
xchg
cmp
fwait
outsl
fwait
inc
xor
jge
mov
sti
sarb
mov
popa
hlt
xchg
inc
imul
fisttpl
or
js
pop
stos
mov
sub
test
sub
pop
sarl
add
ljmp
xchg
adc
mov
mov
popf
sbb
addb
bound
adc
push
sub
sub
inc
insl
inc
add
call
pop
ss
mov
decl
js
mov
and
sub
and
je
xor
xor
pop
jge
lock
dec
cltd
testb
fwait
enter
outsb
mov
mov
test
xchg
mov
out
pop
and
mov
ret
cmp
mov
jecxz
ja
mov
mov
cmp
or
jmp
int3
or
test
or
lods
adc
adc
mov
rol
out
mov
add
add
aam
cmc
add
mov
js
cmp
sub
push
mov
mov
push
jl
test
xchg
mov
fildl
std
push
xchg
mov
loopne
jo
out
movsb
dec
in
loopne
imul
adc
testb
cmp
bound
popa
or
fs
adc
in
pop
mov
iret
or
sbb
jmp
mov
adc
xor
jo
stos
decl
jo
je
xchg
and
xorl
cmpsl
in
or
sbb
jle
mov
xrelease
repz
out
insb
dec
jle
in
cwtl
xlat
ret
push
lea
arpl
pop
sarb
add
pop
jmp
lock
lret
pop
pop
cmp
dec
add
sbbb
neg
cmp
mov
add
scas
fildl
fisubrl
dec
mov
test
mov
ffree
stos
stc
into
out
xchg
out
adcb
gs
inc
in
push
cmp
lods
in
push
xchg
scas
xor
outsb
jl
push
iret
gs
xchg
int3
arpl
sbb
push
fisttpll
dec
adc
loopne
push
imul
push
aad
and
cmp
jne
xchg
inc
jmp
cltd
test
jle
adc
xlat
out
sahf
cwtl
mov
fpatan
xor
adc
hlt
mov
jae
in
xor
mov
in
inc
inc
mov
cs
mov
jbe
xor
fwait
add
pop
pop
jne
mov
xor
mov
jmp
shr
repnz
aam
fcmovnu
test
popa
pop
xor
push
pop
add
sbb
cld
fistps
gs
mov
mov
lret
xchg
mov
repnz
loop
dec
and
not
leave
jp
sahf
add
icebp
jnp
out
aas
movsb
xchg
cs
jno
pop
pop
aad
mov
jae
pop
and
dec
mov
sbb
dec
js
sti
xchg
pop
repz
add
in
movsb
xor
movb
cmp
or
leave
sahf
sub
in
inc
fdivrs
popa
inc
aam
pop
push
jne
push
sub
add
lds
mov
add
jp
mov
mov
sbb
pop
cmpsl
push
xchg
shrb
lret
scas
and
lock
mov
pop
fdivr
fs
or
leave
cmc
loope
jle
cmp
mov
cmp
push
loopne
stc
inc
sub
push
jp
inc
outsl
fimull
cmpsl
mov
aad
fldl
int3
push
pop
and
popa
pusha
addr16
mov
test
sarb
xor
jae
repnz
test
mov
cs
inc
cmp
xor
mov
divb
and
mov
nop
outsb
test
lods
mov
sub
sbb
adc
jp
cmp
ja
mulb
jg
dec
sbb
test
sub
or
push
shll
jns
aad
push
test
bound
movsl
stc
pop
push
cmpl
mov
jo
cmp
imull
rclb
aad
inc
xchg
int
sub
pop
mov
mov
mov
or
push
icebp
lcall
sarb
cmp
inc
cmp
cmpsb
inc
push
xorl
and
inc
lods
repnz
rep
loopne
and
ja
xor
sbb
fwait
sub
out
sub
jb
pusha
mov
mov
add
push
out
repz
mov
stos
xchg
mov
cmp
mov
fnstsw
cmpsl
cld
sub
sbb
scas
mov
sub
xchg
les
mov
fcmovbe
mov
lret
push
outsl
pop
mov
xor
ss
outsb
inc
call
push
pop
or
fldenv
adc
popf
in
add
aaa
jp
pop
fwait
leave
mov
xchg
mov
cmp
push
xlat
int3
push
nop
xchg
dec
popa
lea
repnz
mov
iret
mov
call
sub
fsubrs
fcoms
mov
and
adc
and
outsb
pop
jp
cwtl
push
pop
xchg
push
sub
sbb
iret
xor
loopne
push
aad
mov
jnp
pop
push
in
xchg
push
mov
aaa
adc
fdivrs
xor
pop
stc
pop
daa
jl
mov
outsl
push
or
add
loop
adc
into
and
push
xor
test
add
xor
imul
pop
out
ss
push
aad
xchg
mov
fiadds
xchg
insb
xchg
das
mov
stos
mov
pop
mov
dec
push
push
les
dec
adc
sbb
add
sbb
mov
and
add
sub
xchg
repnz
add
xchg
or
stc
loop
idivb
sbb
pop
lds
xlat
icebp
mov
std
adc
xor
push
stos
arpl
cmpsb
or
mov
call
into
jnp
ficoms
xor
js
mov
add
insl
fwait
test
xchg
push
cmp
dec
jb
or
rcrl
inc
xor
lea
cmp
add
insl
mov
mov
out
mov
arpl
or
add
cmc
fstpt
push
mov
ljmp
xchg
dec
mov
xchg
jae
push
rcrl
fcomps
ret
ret
jp
xor
push
mov
leave
sbb
jno
movsbl
and
sub
pushf
jns
fcoml
les
fiaddl
ret
mov
and
fists
data16
mov
xchg
jle
lods
rcrb
test
jmp
dec
jecxz
push
inc
pop
jmp
pavgb
ret
mov
lahf
aaa
pop
jb
out
aas
sub
jne
dec
xchg
shr
ret
inc
inc
sub
lods
inc
aam
out
test
mov
dec
mov
lds
and
or
dec
cli
mov
stos
test
jo
iret
rclb
jb
jge
adcl
fimuls
ss
int
lret
sub
shlb
negl
push
fdivrs
jo
pop
fmul
imul
addr16
mov
std
and
inc
popa
dec
nop
jb
sbb
ret
pushf
sti
lahf
loop
je
mov
mov
inc
jo
fs
sti
testb
and
dec
pusha
mov
and
int3
mov
dec
inc
loope
sar
pushf
inc
outsb
ja
sub
inc
adc
test
xor
dec
fdivs
je
mov
ja
andb
and
rcrb
cmp
xor
pop
pusha
roll
sub
or
aam
dec
insl
mov
mov
rcrl
cmp
mov
jge
sbb
nop
adc
push
mov
lret
insb
sbb
mov
ja
xor
lret
pop
xchg
dec
stos
jg
lret
icebp
stos
or
add
jg
mov
pop
cmc
rcrl
sub
pop
add
aas
or
shrl
mov
jl
mov
das
add
mov
or
or
mov
es
leave
inc
cmp
cld
inc
sbb
lcall
push
xchg
inc
dec
ret
fiaddl
fadd
insl
pushf
sub
mov
repz
and
in
xor
inc
pop
sarb
fisttpl
out
and
push
cmp
rorb
mov
pushl
in
ds
mov
xor
sbb
push
outsl
mov
testl
mov
adc
loope
push
and
popf
lahf
sbb
bound
popf
fs
shlb
in
rolb
cmp
sbb
fbld
scas
cmp
mov
xor
jg
adc
pop
loop
mov
inc
js
popa
dec
jo
inc
js
mov
ss
mov
enter
xchg
cmp
cmpsb
inc
cltd
in
dec
jg
mov
dec
push
pop
mov
mov
and
sub
in
stos
out
jne
lods
jns
stos
adc
mov
push
xor
add
and
pop
daa
xchg
aas
aad
pop
inc
out
mov
in
rorl
sbb
roll
mov
aas
and
fnstsw
ss
mov
mov
sbb
mov
out
adc
stc
stos
pop
adc
hlt
mov
vandps
pop
in
add
fldenv
adc
pop
sbb
stc
pop
fnstenv
adc
arpl
idivl
popf
jne
dec
rcll
mov
dec
or
out
fidivrs
sahf
hlt
or
lcall
and
add
jno
or
xor
fnstcw
out
dec
xchg
mov
dec
push
add
inc
inc
lods
cld
mov
hlt
add
and
push
enter
jnp
ljmp
adc
mov
cwtl
and
or
jmp
sbb
pop
mov
mov
xchg
insl
test
pop
xor
sbb
push
test
mov
daa
mov
pop
fidivrl
dec
fistpll
mov
es
lods
mov
popf
push
jecxz
lahf
test
ljmp
and
out
cmp
add
orb
mov
loope
dec
pop
mov
xlat
shrb
int
jnp
loope
insb
mov
mov
mov
pop
idiv
int
xchg
mov
jnp
and
lret
cmp
mov
mov
push
into
pop
adc
mov
fs
imul
int3
pop
dec
mov
push
jae
arpl
cmp
push
repnz
dec
lcall
mov
cmp
pop
testl
add
repnz
sub
rol
aaa
sarb
push
cmp
les
aad
lds
pop
mov
xchg
jbe
je
insl
andb
cmp
mov
sbbb
mov
push
mov
mov
mov
sub
dec
push
and
sbb
and
push
inc
into
ja
scas
in
fisttps
mov
sti
addr16
int3
mov
and
inc
xor
out
hlt
std
inc
cmp
lcall
and
loope
cld
call
xor
pop
inc
pop
inc
sbb
inc
mov
or
ds
lahf
cli
in
lods
inc
fwait
lcall
fcoms
std
add
call
dec
imul
jbe
mov
icebp
jnp
dec
xor
ds
mov
add
test
paddusw
or
jo
testl
cmp
xor
orb
jl
std
packsswb
ss
push
es
lea
or
dec
inc
mov
imul
out
aaa
fs
test
xchg
cltd
cmp
cwtl
add
push
xchg
mov
adc
xor
insl
pop
sub
sti
push
popf
in
test
pop
dec
roll
in
divl
and
test
jo
pop
lret
dec
mov
mov
sahf
dec
inc
andl
dec
mov
cmc
setb
aam
mov
push
sub
or
jp
xor
sub
mov
nop
out
jo
or
loopne
xor
add
out
lea
sbb
aaa
testl
stos
insl
ret
push
in
xchg
push
sub
adc
push
mov
lcall
add
jg
rorb
lods
mov
icebp
add
mov
jge
ljmp
adc
or
outsl
jecxz
cmp
add
js
fsub
cmpsb
inc
stc
mov
subl
xor
ds
mov
adc
ret
ret
out
mov
aas
mov
xchg
mov
pop
dec
cltd
push
pop
xchg
pop
mov
arpl
xor
bound
mov
cmc
cli
gs
mov
push
scas
mov
xcrypt-ofb
cmpsl
insl
lea
jbe
sub
arpl
shrb
and
dec
push
stos
inc
dec
and
out
pushf
movsb
xchg
mov
sub
mov
adc
or
lcall
inc
mov
jns
dec
xor
mov
fcoml
popa
xchg
nop
or
push
arpl
addr16
mov
ljmp
mov
pop
aas
jo
cltd
add
and
jo
loopne
and
jmp
mov
cli
dec
and
ret
push
sbb
inc
aaa
push
cmp
jg
mov
sub
or
ret
push
cmp
mov
loop
inc
out
xchg
mov
in
dec
pop
xlat
lret
or
jbe
jne
or
add
push
add
jg
adc
pop
sub
sub
jmp
mov
push
xor
aaa
ds
daa
lods
in
jl
push
rcrb
daa
dec
addr16
lret
pushf
sub
scas
add
int3
mov
jno
lcall
popf
pop
shlb
je
insb
setae
adcb
mov
pop
xor
xor
xchg
cmpsl
scas
pushf
cmpl
lea
pop
xlat
cmp
sbb
pop
mov
out
repnz
aaa
adc
stos
mov
daa
aas
inc
dec
jle
lcall
js
scas
and
sub
loope
xor
stos
mov
std
outsl
xchg
aam
mov
mov
inc
fstpt
push
cltd
lods
xchg
and
fwait
jl
cmp
sub
sub
leave
or
pop
adc
sub
imulb
cmp
sub
inc
or
pause
or
dec
xchg
sub
push
pop
mov
xchg
xor
scas
lret
cmpsb
out
adc
repz
arpl
dec
pop
cmc
jecxz
cmp
pop
and
pop
adc
sti
cmp
jmp
jb
mov
cmp
ffreep
or
in
ret
jl
cmc
leave
push
push
es
dec
bound
in
and
test
sub
inc
aam
push
xor
cmp
cmp
add
and
cwtl
out
sub
mov
cld
mov
inc
pop
sbb
add
mov
sbb
push
ss
sbb
and
xchg
cli
daa
mov
push
arpl
jg
and
decl
sbb
popf
push
xor
mov
fcompl
and
pusha
add
xor
mov
in
inc
xchg
hlt
pop
push
icebp
pop
xor
mov
mov
ja
sub
scas
aas
mov
leave
mov
push
xchg
lock
mov
xor
jns
pop
cli
int3
fbstp
inc
mov
into
ljmp
inc
fisttpll
xor
mov
fldl
aad
pop
cld
outsb
jl
inc
js
lret
pop
dec
inc
push
mov
gs
xor
mov
jle
push
mov
cwtl
mov
add
cmp
sbb
sub
inc
inc
cmc
fisubs
sub
lahf
fst
inc
push
cmpl
jl
push
hlt
inc
xchg
push
ret
cmp
push
cmpsb
jl
adc
fmull
add
sarl
test
inc
ret
in
adc
pop
insb
jge
iret
inc
add
lods
dec
xor
xchg
and
inc
and
sub
mov
popf
movsb
push
ficompl
rcll
ret
repnz
xor
jnp
mov
xchg
mov
or
pop
test
pushl
cmp
movsl
inc
mov
and
mov
mov
xchg
mov
lret
jmp
fwait
in
decb
push
jne
inc
mov
movsb
enter
rcll
popa
mov
std
dec
dec
mov
push
sarl
mov
cmp
ret
imul
repz
jle
mov
pop
pop
testb
fistpl
adc
lods
lock
insb
enter
lock
pusha
mov
push
sarl
std
cmp
stos
fwait
scas
stc
xchg
adc
movb
fs
in
inc
rep
cld
lds
outsb
ret
and
add
fstp
es
xor
xchg
es
push
push
hlt
into
cmp
flds
mov
add
lret
shlb
ss
push
mov
lret
cli
mov
loopne
push
mov
rorl
int
rcrl
add
cmpsb
sub
xor
mov
in
addb
sbb
imul
lds
add
pop
test
mov
es
mov
scas
pop
xor
sub
imul
pop
rclb
int3
push
bound
inc
adc
ret
sbb
popa
cmp
mov
jecxz
jle
insb
addr16
idiv
ds
mov
xchg
sub
mov
mov
push
insb
cmpsb
js
lods
mov
insl
mov
ret
cmp
xchg
mov
xor
dec
rcrb
mov
cmp
ja
xor
mov
loopne
sub
push
xchg
je
xor
and
dec
inc
mov
adc
es
std
cmp
cltd
push
cwtl
cmpsb
mov
adc
dec
cli
mov
mov
int
jg
lret
popa
dec
fisubrs
ss
pop
loope
xchg
jno
jle
outsb
inc
insl
adc
sub
xor
insl
lret
inc
mov
shll
outsb
xor
popf
out
jg
mov
js
ds
int3
repz
xchg
and
push
stos
movups
cmp
jmp
jl
lret
dec
cwtl
int3
adc
insb
in
shr
xchg
rorb
push
pushf
push
sub
cmpl
fdivl
movsb
pop
mov
push
or
or
cld
xor
push
mov
jns
ret
stc
cmp
orl
adc
fstpt
roll
adc
inc
imull
mov
int
cmp
je
xor
jge
int
cli
xchg
jecxz
adc
push
sub
or
add
testb
sbb
push
mov
test
xchg
repnz
push
and
enter
inc
dec
inc
push
aas
jnp
mov
sahf
mov
pop
jmp
frstor
sub
into
sbb
icebp
in
push
data16
addr16
push
xor
push
popa
mov
push
movsb
adc
mov
mov
insb
adc
stos
pop
push
lea
mov
clc
enter
outsb
cmp
movsb
push
inc
mov
and
push
push
jl
push
lcall
hlt
fbld
sti
and
sarb
and
cmp
jp
lock
adc
popf
movsl
sub
inc
or
mov
mov
cmp
pop
mov
dec
inc
and
pop
sub
les
outsb
sbb
hlt
sbbb
icebp
test
dec
lock
xchg
xor
lret
pop
pop
inc
loop
ret
sub
jmp
push
ret
cmpsl
mov
mov
jb
push
adc
pop
std
pop
das
in
test
addr16
jo
mov
nop
push
out
xor
adcb
pop
int
pop
arpl
outsb
push
and
or
aad
cmc
pop
xchg
fisttps
sub
mov
repz
imul
fnstsw
mov
xor
scas
les
rol
rorl
aam
addr16
xor
and
in
cmpsl
out
add
add
xor
jp
rclb
mov
test
mov
mov
out
insb
mov
std
lock
mov
push
data16
cmp
cli
pop
cmp
movsl
test
xor
rol
jbe
dec
out
gs
lcall
bound
sub
cltd
mov
pop
stos
in
addr16
dec
inc
mov
push
call
push
add
and
or
jb
inc
in
cmpsl
sahf
mov
lret
add
ja
jle
jo
loop
ret
cmp
lods
dec
out
xor
outsb
adc
scas
bound
lret
lret
test
xchg
push
popa
xchg
cmp
loopne
nop
lcall
hlt
hlt
mov
daa
inc
cwtl
sbb
push
mov
mov
cwtl
shl
pushf
and
jnp
adc
mov
fs
into
xchg
dec
jecxz
xor
inc
fildll
pop
xor
movsl
jo
fstpl
leave
mov
cltd
pop
add
cmp
fld
pop
adc
scas
mov
xchg
xor
mov
xor
popf
pop
jno
sbbb
imulb
fdivrs
lret
sbb
lcall
cli
test
mov
pop
sub
mov
sbb
xchg
add
sar
sub
xor
js
mov
in
inc
cmp
jb
ss
pop
and
sub
sbb
dec
mov
loopne
jp
jo
pop
inc
mov
inc
dec
mov
cmp
mov
pop
das
lret
in
mov
xchg
xchg
cmp
add
pop
scas
or
xchg
in
push
ljmp
mov
jo
loope
repnz
dec
or
xchg
popa
and
mov
andl
cmpsb
sbb
addb
push
sbb
pop
cmp
adc
jnp
jl
mov
aas
mov
shll
repz
xor
pop
or
std
xchg
pop
add
push
pop
jnp
and
mov
aad
stos
xchg
and
stc
dec
inc
icebp
movsb
loop
push
jmp
pop
add
hlt
cmpsb
inc
mov
lcall
dec
jg
int
movsb
ffreep
pop
or
iret
mov
jge
xchg
call
xchg
add
cmp
cmc
test
out
mov
divb
ds
bsf
push
pop
cmp
scas
stc
rclb
jg
scas
mov
xchg
sbb
je
jns
jle
ljmp
faddl
inc
ss
sub
ficoml
cmp
xchg
adc
xchg
xor
js
push
adc
test
xor
mov
insl
das
lock
dec
imul
cmp
pop
in
xlat
int3
or
dec
gs
std
push
mov
fdivrl
pusha
mov
xor
add
sub
cli
jmp
inc
incb
testl
sarl
inc
aad
cmc
or
mov
lea
jmp
push
sbb
dec
negb
add
divl
stos
fwait
std
or
popf
push
mov
dec
outsl
insb
push
icebp
rep
mov
sub
mov
movsb
inc
repnz
mov
shll
mov
mov
mov
aaa
in
or
pop
inc
and
or
mov
jnp
mov
dec
push
stos
cmpsb
dec
lds
pop
jne
fcompl
dec
sub
dec
jecxz
push
jns
push
xor
xor
imul
test
jnp
sbbl
and
xor
into
outsl
sbb
sahf
leave
and
add
mov
pusha
hlt
dec
sub
mov
sbb
movsl
mov
xor
lahf
pop
mov
pop
popf
jp
xchg
jp
cli
in
bound
test
push
int
cmpsl
idiv
addl
clc
cmp
popf
stos
dec
std
xchg
fwait
movb
scas
test
xor
mov
inc
push
push
and
iret
lods
dec
pop
in
xchg
addr16
add
xchg
pushf
pop
aaa
or
push
jo
popf
std
pop
sub
aad
in
mov
mov
mov
std
cli
mov
aas
movsb
dec
or
inc
aaa
push
adc
jbe
clc
das
in
int3
ret
insb
lcall
mov
aam
jae
les
jecxz
dec
push
dec
lods
popa
adc
xor
cmc
cmovno
lcall
adc
xchg
inc
push
push
or
sbb
sti
inc
add
sti
or
xchg
sub
xchg
push
push
enter
fchs
addr16
ret
xchg
sbb
pop
push
xchg
sub
sub
push
cmp
cmp
add
xor
sbb
pop
addr16
arpl
dec
fidivrl
xor
dec
mov
aam
pop
jecxz
and
cmp
sub
and
jmp
adc
movsl
aam
mov
xchg
mov
aaa
mov
xlat
bound
mov
in
mov
mov
cmp
leave
add
mov
cld
mov
mov
or
je
rcrl
push
in
sbb
pushw
mov
cmc
and
insl
rcl
pushf
test
cmp
or
xor
jg
testl
inc
inc
inc
push
push
xorb
out
mov
lock
inc
mov
dec
lea
sub
outsl
xchg
add
jae
addr16
pop
lret
addb
jge
loopne
push
lock
push
cld
out
mov
push
repz
jmp
pop
inc
cmp
cmpsb
daa
mov
in
cmc
jmp
ret
out
mov
xchg
add
dec
icebp
mov
in
add
in
jg
dec
out
xchg
test
rcr
sub
xor
add
xchg
jo
or
jbe
sbb
lods
lahf
arpl
bound
in
iret
mov
out
imul
rcrb
sbb
mov
negb
test
xchg
mov
jg
je
inc
push
movsb
lret
fincstp
sbb
push
mov
xlat
insl
ror
out
sub
test
loopne
push
push
aas
push
xchg
push
pop
dec
pop
xchg
inc
mov
push
fxch
pushf
push
and
push
ficomps
fisttps
rolb
popf
call
fisttpll
jge
dec
andl
jecxz
aad
sbb
mov
xor
sub
xor
iret
cmp
xor
dec
and
in
inc
out
cmpsb
mov
clc
insl
mov
jg
or
sub
or
lods
inc
sbbl
sub
testl
repnz
cwtl
add
mov
enter
test
mov
push
sub
xchg
sarb
xlat
cwtl
lret
mov
and
aad
in
cmpsb
hlt
push
jno
xlat
mov
cli
pop
cmp
sbb
lret
clc
mov
push
sub
push
push
shl
cmp
sbb
lret
subl
enter
jbe
ror
add
inc
fdivrp
sbb
ja
pop
cmpsl
xchg
push
outsl
scas
dec
mov
jl
ficoms
ja
lret
cmpl
mov
add
testl
jge
mov
mov
inc
decl
bound
ljmp
es
add
pop
sti
sahf
jg
xchg
movsb
lret
cmp
add
je
jp
push
push
mov
sbb
adc
lahf
push
repz
adc
inc
inc
cmp
fsub
fstl
sbb
mov
jp
arpl
add
out
mov
xchg
fucomi
pop
pop
cmp
or
mov
shlb
xor
ds
lret
or
stc
cmp
cs
jne
jnp
in
mov
push
pop
mov
mov
mov
jno
jg
outsb
mov
lret
jae
ret
sub
pop
repz
sub
and
dec
std
or
sarb
sbb
pop
adc
jmp
cmpsb
or
or
imul
pop
leave
sbb
and
jae
push
adc
pop
std
repz
or
add
lock
push
push
aas
dec
loop
fstp
push
pop
movsl
repnz
sub
popf
dec
pop
pop
cmp
mov
push
push
mov
iret
ds
xor
cmp
mov
shlb
mov
mov
jecxz
out
mov
fwait
aad
incb
aaa
stos
sbb
add
inc
cmp
sub
rcll
sbb
adc
or
mov
xchg
sbb
dec
pop
insb
ja
dec
adc
popf
inc
insl
push
inc
cwtl
xor
fwait
mov
mov
jmp
cmp
repz
jge
fsubrs
lret
xchg
mov
mov
rcrl
fisubrs
or
and
not
into
arpl
out
and
pushf
enter
into
dec
jl
lock
rorl
fsubrl
fisubl
cmpsb
in
pop
je
mov
outsb
aad
lock
enter
push
cmpb
out
lahf
cmp
pop
mov
nop
adc
jp
enter
cmp
dec
cltd
popl
jecxz
or
pop
sbb
mov
jns
imul
in
lea
or
fmuls
mov
or
fdivl
push
imul
out
mov
dec
pop
scas
or
sub
jp
dec
dec
push
scas
rcrb
xchg
fucomip
call
inc
mov
mov
cs
pop
pop
pop
inc
loope
mov
xor
inc
xlat
xor
jae
cmp
cwtl
mov
or
pop
cmc
fsubrs
loop
mov
pop
mov
lods
shrb
shrb
push
pop
inc
movl
xchg
push
pop
std
adc
mov
mov
outsl
gs
ljmp
mov
jne
mov
lahf
sarl
push
lret
cld
cmp
dec
rcll
cmp
cwtl
dec
scas
cs
jg
lods
cmp
push
add
mov
mov
ss
bound
popf
cmpsl
out
mov
dec
mov
cli
xlat
in
aaa
test
mov
mov
sub
pop
pop
jbe
sbbl
lret
std
xchg
or
lods
je
mov
cli
shl
dec
mov
movsl
fwait
push
test
and
scas
sti
cli
jge
movsb
repnz
push
aas
cmp
jo
cli
ja
lahf
bound
sbb
das
mov
adc
loopne
repz
xor
inc
popf
xchg
sbbb
xor
push
fistps
and
imul
mov
adc
add
push
jmp
sub
mov
in
in
loope
pop
pop
push
enter
adc
cmp
stc
dec
jne
mov
cmp
push
mov
pusha
pop
es
dec
push
or
inc
mov
mov
mov
xchg
and
and
sbb
mov
lods
xor
add
lods
movsb
out
sti
mov
faddl
sbb
lds
and
leave
es
jae
mov
or
cmp
sub
adc
out
sbb
int3
ret
je
data16
outsl
icebp
dec
push
adc
test
jmp
mov
sbb
gs
mov
arpl
loopne
fdivs
adc
sahf
jns
or
outsl
add
call
dec
sub
add
fiadds
adc
push
or
sub
lods
call
jmp
sbb
cmp
in
lock
mov
and
das
sbb
ss
std
jb
in
adc
xchg
enter
in
or
xor
dec
xlat
mov
push
arpl
lds
add
or
jp
lahf
insl
pop
mov
mov
pop
cmc
in
and
sbb
out
dec
push
dec
dec
mov
enter
push
pop
mov
pop
and
dec
into
dec
sbb
xchg
rcl
cmp
pop
add
movb
push
mov
fsubs
sub
adc
fs
xchg
push
mov
mov
mov
push
sbb
jmp
movsb
mov
cli
and
icebp
add
out
push
ja
gs
insb
es
jge
dec
pushf
or
xchg
fisttpll
adc
iret
sub
lret
call
xor
sbb
out
sub
jno
fildll
xchg
mov
xchg
inc
leave
cltd
xor
cmp
int
xchg
push
pop
cmc
jo
test
jae
push
stc
stos
repz
sbb
sbb
cli
rcrb
xlat
addr16
out
int3
addb
out
add
add
push
lahf
mov
mov
lods
xor
decl
dec
cmpl
push
mov
adc
sbb
adc
stc
mov
mov
outsl
and
cmp
inc
adc
mov
xchg
dec
shl
repnz
jmp
arpl
xchg
cmp
jae
out
pop
loopne
sub
mov
fisubrl
mov
out
or
out
movsl
push
incb
stos
xlat
pop
jg
sahf
jmp
lock
sbb
jbe
test
in
lcall
jmp
or
lahf
jb
pop
dec
xor
cltd
jge
repz
insl
jp
les
sbb
icebp
cmc
nop
inc
fdivrl
mov
cltd
add
cmc
cmp
cmp
xor
and
pusha
and
das
nop
lea
sahf
pushf
addr16
pop
or
pusha
mov
pop
mov
mov
adc
insl
mov
pushf
mov
lcall
stos
push
popa
lods
pop
fldcw
mov
xor
adc
xor
scas
shll
test
adc
jb
adc
hlt
dec
inc
into
imul
js
insl
jecxz
rolb
fcmovnb
sahf
fsubr
push
aas
jge
dec
sub
mov
and
adc
adcb
out
pop
inc
pop
cmp
scas
addb
cmp
xor
iret
pop
pop
push
xchg
cs
push
push
das
push
test
hlt
push
sbb
es
push
add
cmp
cmp
add
mov
or
shlb
or
push
int
int3
dec
ds
nop
fdivrs
dec
dec
les
dec
mov
out
and
negl
sti
lfs
ds
in
icebp
call
je
lcall
fistpll
ljmp
int3
jmp
es
mov
mov
sub
addr16
nop
stos
leave
xor
movsl
mov
mov
mov
sub
jns
mov
add
jns
cltd
cmpsl
arpl
daa
hlt
cmpsb
or
mov
insb
cltd
out
sub
cmpsb
ret
inc
out
jbe
inc
repnz
call
movsl
inc
roll
dec
xor
mov
les
enter
jecxz
adc
out
inc
xchg
xchg
fisttpl
xchg
mov
mov
mov
xchg
cmpsb
jmp
pop
loopne
add
xchg
jge
lret
cs
out
mov
mov
xor
xor
cmc
push
lcall
lea
lods
xchg
and
cltd
cmp
dec
pop
aaa
sbb
push
jmp
adc
xor
pop
or
sbb
daa
jmp
mov
and
xchg
ja
push
add
adcb
pop
add
mov
nop
or
mov
cltd
out
push
mov
in
les
loop
fisubs
enter
adc
mov
divb
and
orb
in
in
daa
xchg
cmp
adc
imul
jmp
push
jnp
subl
out
sbb
mov
inc
pop
out
add
and
mov
aad
cmp
scas
int
stos
and
cli
adc
xchg
lret
or
lds
mov
popa
dec
and
dec
scas
test
jg
mov
sti
mov
inc
mov
mov
lods
lds
xchg
mov
jne
and
sub
shll
adc
dec
dec
cmpsl
loopne
pop
sar
xchg
inc
addb
ror
jo
mov
add
std
mov
mov
test
xor
mov
cmp
bound
push
push
data16
lock
mov
sahf
xchg
jae
pusha
ja
ds
push
mov
imul
popf
push
jno
pop
lods
nop
out
mov
push
ja
pop
sbb
lods
leave
sub
lcall
cwtl
mov
add
add
and
sub
mov
icebp
rcrb
aaa
pop
push
sbb
cmpb
dec
sub
rolb
xchg
jecxz
or
inc
mov
out
cmp
inc
pop
in
movsl
and
movsl
mov
mov
adc
rcll
nop
shlb
dec
fstpl
sub
out
push
fdivs
or
leave
in
xor
jne
mov
mov
jge
and
mov
cmp
push
stos
ret
mov
adc
add
jl
add
pop
outsl
rcl
mov
shlb
dec
cwtl
and
sub
popa
arpl
cmp
mov
loope
stos
lret
and
frstor
xchg
ret
sbb
dec
adc
or
scas
dec
pop
gs
push
push
dec
cmp
lods
mov
xor
ret
fisttpll
loope,pn
or
sti
push
sbb
cmpsb
das
gs
in
loopne
daa
inc
cmp
dec
cld
lahf
dec
sbb
mov
popa
lock
xor
mov
mov
mov
push
mov
das
movsb
cmp
lods
gs
aas
sub
int3
xchg
cmp
stos
jecxz
cwtl
fsubrs
int
scas
mov
jno
adc
enter
inc
mov
mov
out
inc
je
xchg
push
je
popa
sub
imul
jmp
push
mov
popf
mov
inc
mov
sub
inc
out
sub
inc
in
andl
pop
xor
and
sub
or
clc
or
bound
shll
fmulp
outsl
ss
sti
and
call
js
and
jo
cmp
xor
test
sub
mov
in
xchg
mov
sub
mov
cwtl
mov
dec
push
xor
lds
add
sti
sbb
pop
xor
lea
ljmp
jns
xchg
int3
das
iret
fucompp
lods
inc
xchg
ljmp
adc
loope
lret
jne
nop
adc
mov
leave
mov
and
mov
or
sbb
rcrl
cltd
mov
mov
dec
jmp
pop
insb
rolb
xorps
and
aas
adc
jno
inc
cltd
icebp
pop
push
xchg
rolb
lods
cwtl
ret
sub
fimuls
sub
aaa
dec
aaa
jmp
iret
test
pop
jp,pn
push
testl
mov
adc
xchg
push
pop
ret
mov
cmpsl
mov
movsb
lcall
sbb
push
sub
repnz
pop
adc
mov
test
pop
mov
in
in
pop
xchg
lea
iret
mov
je
push
jno
xchg
jo
jns
ret
inc
pop
dec
out
dec
jns
mov
push
daa
cwtl
dec
fadds
push
add
fiadds
leave
mov
sub
xor
or
fcmovnu
aaa
stos
or
clc
pop
or
mov
push
fbstp
or
xchg
push
mov
dec
jno
ljmp
adc
flds
iret
std
sbb
mov
adc
sub
int
xchg
mov
leave
sbb
pshufw
pop
mov
jmp
push
and
push
inc
xor
iret
mov
mov
add
jge
inc
xchg
mov
inc
pop
cmpsb
cld
push
test
je
test
dec
xchg
xchg
outsl
sti
dec
insl
mov
mov
mov
adc
mov
cmpsb
and
insb
rol
int
mov
out
and
mov
les
xor
cmp
inc
add
roll
inc
bound
rcrl
ss
jne
sub
lea
stc
mov
add
mov
int
pop
imulb
push
and
les
idivl
and
mov
sbb
out
nop
lea
out
scas
and
dec
loope
pop
lds
ss
cli
into
and
jp
into
mov
jmp
mov
lahf
daa
inc
movsl
mov
pop
sbb
mov
xlat
mov
cs
pop
or
dec
outsl
fdivl
sub
movsb
xchg
sub
mov
cwtl
xchg
out
jae
push
cwtl
aaa
mov
or
dec
mov
push
jnp
and
out
in
dec
popa
std
pop
mov
add
jecxz
and
scas
test
std
mov
leave
cli
jecxz
bound
cwtl
lret
push
xchg
iret
sahf
js
or
int3
test
ja
lds
dec
popa
or
out
movsb
pop
and
push
mov
xchg
into
cmp
xchg
mov
lcall
jp
sbb
insb
mov
ss
xlat
pusha
xor
idivb
repz
fiaddl
jmp
sub
pusha
xorb
js
aam
dec
fmull
jge
fwait
mov
cmp
pop
movsb
and
imul
push
js
cmp
mul
jae
pop
inc
dec
ret
adc
filds
jp
mov
push
xchg
stc
fisttpll
push
or
mov
lock
fidivrs
adc
mov
lods
mov
or
cs
mov
and
test
aad
ljmp
pop
xor
push
sbb
or
push
pop
or
clc
cmp
mov
aaa
inc
push
subb
mov
xchg
mov
out
popf
js
imul
adc
mov
mov
xor
dec
cmpsl
repnz
mov
stc
es
push
leave
pinsrw
sub
rclb
cmp
and
add
scas
rorl
mov
fldenv
daa
push
add
clc
cmpb
cmp
push
xchg
cmpb
push
xchg
es
push
icebp
imul
ret
mov
sahf
pusha
inc
jg
mov
lods
mov
fisttpll
fcmovnbe
mov
cmc
mov
addb
aas
xchg
cmp
inc
in
jo
cld
js
mov
sbb
mov
je
push
adc
xor
inc
subl
dec
pop
repnz
push
add
jmp
negl
jmp
mov
pushf
mov
pop
mov
test
aas
data16
cmp
ss
cmp
jl
jg
movsb
mov
lods
adc
cmp
stos
jo
in
xor
mov
adc
pusha
int
adc
aas
lea
sbb
xchg
add
idivl
or
lock
jge
jnp
scas
daa
shl
mov
sarl
shl
sbb
dec
adc
push
popf
scas
mov
mov
js
jecxz
cmp
imul
adc
cmp
adc
pop
cmp
sbb
xchg
daa
and
dec
nop
inc
push
repnz
pop
sbb
inc
or
outsb
cmpsb
xchg
in
add
lods
std
add
push
dec
mov
jmp
mov
mul
push
addr16
cmp
dec
sbb
adc
jbe
push
xor
xor
sahf
hlt
aaa
and
rclb
orl
clc
dec
push
cmc
outsl
dec
and
add
lea
incb
adc
mov
int
fs
ds
arpl
sahf
push
add
and
adc
es
ret
fincstp
imul
cld
add
pop
add
sub
jl
dec
dec
ljmp
push
ror
sbb
cmpsb
sub
rorb
div
punpckhqdq
mov
imul
jns
test
cmp
sub
stos
mov
aad
pop
pop
daa
xchg
sub
push
inc
ljmp
inc
stc
mov
pop
pusha
and
mov
jne
dec
std
or
xor
push
or
push
add
add
test
lds
jne
divb
cmpsb
int3
loop
dec
stos
aas
xchg
push
xor
lcall
xchg
mov
xor
in
cld
mov
in
pop
psraw
push
fsub
pop
aad
cmp
mov
pop
mov
xor
jmp
pop
dec
push
daa
and
xchg
jge
sbb
pusha
cmpsl
aam
rolb
or
add
mov
mov
addr16
mov
insb
inc
jnp
mov
nop
inc
nop
and
insb
dec
sbb
fdivrs
mov
repnz
sub
stc
iret
sub
mov
sahf
mov
mov
xchg
add
out
mov
mov
inc
cmp
rcrb
pop
push
lods
jecxz
test
ficoms
or
mov
dec
imul
fisttpll
movsb
sub
lret
jo
movb
inc
xchg
js
xchg
popa
aad
push
xchg
mov
stos
pop
lret
inc
aam
out
movb
pop
dec
adc
movsl
jae
arpl
push
and
adc
xchg
repz
push
mov
cmp
add
insb
mov
pusha
aam
mov
inc
dec
adc
pop
mov
cli
cmp
ja
lods
sbb
xchg
mov
push
mov
mov
das
outsb
outsl
ja
int
mov
xor
mov
les
cltd
cmp
ss
cmpsb
lods
xchg
push
mov
adc
scas
dec
pop
sbb
inc
dec
xor
xchg
mov
imul
mov
movsb
sub
pop
mov
nop
out
ja
inc
sbb
sub
inc
jb
jl
jl
ljmp
and
push
shl
sti
pop
cmp
and
enter
mov
and
add
cwtl
mov
push
insb
out
or
scas
rcl
cmp
mov
inc
movsl
pop
ret
pop
jb
lock
push
sarl
mov
outsl
push
dec
dec
out
add
push
adc
xlat
jmp
faddp
ds
sub
xchg
xor
in
sub
fildll
fcoml
cs
insl
or
loop,pt
ret
pop
outsb
mov
je
shrb
ds
lcall
mov
insl
mov
js
nop
arpl
mov
and
jns
xchg
xchg
cltd
mov
gs
cs
das
xor
lcall
popl
and
ror
pop
sti
or
mov
in
dec
cltd
jp,pn
mov
into
push
fldcw
inc
mov
inc
sbb
hlt
cmpl
jno
inc
push
cmp
mov
cmpsb
push
push
inc
sarl
es
adc
fnsave
dec
push
inc
fwait
vphsubdq
sub
outsl
subb
into
and
push
test
xchg
xchg
bound
sbb
inc
cmpsb
mov
scas
loopne
adcl
mov
daa
dec
push
stos
sarb
ds
pop
faddp
lods
and
std
adc
jnp
fcmovb
mov
cli
shlb
xchg
add
dec
mov
js
shrb
pop
gs
fs
sbb
movsb
sbb
iret
aas
popa
xchg
mov
add
mov
aaa
outsl
adc
and
mov
jne
aas
std
mov
or
add
dec
xchg
pop
lock
pop
pop
aad
pop
fsubrl
fsub
movsb
stc
lret
in
sub
pop
xor
jmp
fwait
xor
test
add
rorb
or
push
push
je
dec
sub
ret
sub
pop
inc
jno
lock
xchg
aad
and
les
ja,pt
xchg
push
in
out
lret
mov
mov
inc
pop
dec
repz
cli
mov
dec
clc
stos
push
test
mov
xchg
fistpll
stos
shll
idivb
pop
sahf
icebp
mov
ret
pop
pop
scas
pmulhuw
rcrl
loopne
fwait
sub
xchg
or
rcll
mov
je
push
cmp
sub
add
push
xchg
add
cli
fs
call
fisubrs
sbb
adc
aas
cmp
mov
add
pushf
mov
insl
pop
mov
inc
xchg
jle
mov
xchg
out
je
mov
or
fwait
data16
push
clc
adc
mov
out
adcl
loop
es
sub
lahf
andl
inc
cmp
mov
inc
add
xchg
rcrb
mov
loope
fisubrl
into
xor
out
std
lahf
sub
out
jp
sbb
or
cltd
cmc
push
lea
mov
std
dec
cmpsl
xchg
rclb
lock
cmc
mov
repz
scas
inc
xchg
sbb
aas
push
jb
adc
mov
aam
mov
and
dec
cmc
stos
mov
adc
mov
faddl
data16
inc
xchg
daa
pop
es
imull
adc
jnp
jle
push
mov
bound
push
pop
cmp
sub
and
add
pop
movsb
sub
jo
mov
leave
mov
mov
and
and
in
adc
or
inc
push
movsl
jno
fsubrl
cmpsl
loope
cmp
jbe
repz
sbb
push
addr16
cli
and
stc
inc
dec
jno
pop
or
sbb
pop
testl
push
xor
rclb
dec
inc
mov
repnz
sub
incb
xchg
gs
aam
fisubl
mov
push
pop
push
push
cmp
or
mov
in
imul
inc
ds
mov
fdivrl
fcomip
lock
adcl
xchg
in
push
popa
lahf
push
or
cltd
lock
shl
movsl
xchg
cmp
inc
popa
outsb
jle
sbb
cmp
pop
and
lods
mov
xchg
popf
js
enter
jge
repnz
mov
out
loopne
mov
sub
cmpsb
mov
shrl
test
movsb
es
mov
enter
out
inc
aam
enter
popa
and
sub
dec
cmpsb
xchg
rolb
adcl
in
out
enter
lret
daa
das
mov
jb
clc
xchg
hlt
lcall
std
call
or
in
icebp
adc
dec
mov
pop
pop
add
mov
rorl
jle
or
inc
aad
mov
pop
sub
xor
mov
aam
xor
pop
jp
cwtl
adc
and
mov
or
sbb
add
or
adc
pop
aam
or
daa
fs
lods
sbb
rcl
inc
sub
mov
add
mov
pop
add
mov
sub
pop
mov
or
sahf
pop
test
insb
jae
push
sbb
sarb
adc
lock
sub
fdivl
adc
push
inc
push
adc
ds
incb
add
inc
mov
jne
mov
jle
cmpsb
pop
xchg
jns
dec
testb
pop
rolb
outsl
jbe
mov
aaa
arpl
sbb
cwtl
mull
push
jns
je,pn
sub
int3
push
fwait
inc
je
xor
movsl
daa
push
sbb
aas
cmpsl
mov
pushf
inc
xchg
call
ja
sub
push
or
cmpsl
stos
decl
stc
mov
ret
cltd
xor
or
xor
lret
pop
cmp
adc
leave
cwtl
or
xchg
mov
mov
sarb
xchg
cmp
jnp
sub
pop
pop
sbbl
mov
sub
popf
addr16
mov
cmpsl
adc
cmp
sub
dec
mov
and
adc
jno
daa
adc
cld
cmpsl
enter
xlat
mov
enter
aas
xchg
stos
and
je
sbb
mulb
repz
adc
jmp
gs
sbb
mov
inc
push
and
fists
in
test
rorb
repz
bound
stos
cmp
jae
inc
dec
cmp
pop
xchg
cmp
dec
icebp
xor
and
loop
rorb
movaps
cli
lret
dec
cmp
mov
inc
popa
jl
outsb
lcall
in
into
or
pusha
push
push
xor
xor
jno
xor
test
lea
shl
jg
push
jbe
outsl
cli
repz
jnp
repnz
adc
add
mov
movsb
and
gs
or
adc
ja
sbb
aaa
lret
out
aam
mov
add
addr16
dec
and
xchg
ss
mov
icebp
leave
mov
and
outsl
orl
dec
arpl
lret
push
in
adcl
xchg
mov
jno
lds
adc
or
gs
inc
ljmp
jns
push
scas
dec
dec
mov
lock
das
push
mov
xor
mov
pop
lds
mov
pop
add
cmp
sub
imul
fstps
cmp
pushf
fisttpll
mov
imul
jp
mov
jne
je
cmp
pop
sti
and
cmp
push
clc
push
xorb
inc
adc
idivl
xor
mov
jbe
mov
idivb
clc
das
ds
and
cmp
adc
repz
in
cld
test
xlat
scas
jnp
int3
xor
test
arpl
in
push
cld
push
sbb
int
cmp
fs
jo
mov
add
lods
mov
insb
pop
fs
jmp
pop
and
daa
daa
jb
enter
mov
xor
clc
sub
cwtl
push
mov
jge
xchg
lahf
cs
int
aad
loope
in
das
lahf
sbb
jnp
ss
push
push
bound
shrl
sbb
xchg
mov
aaa
mov
lahf
cmp
or
sti
cmpsb
roll
cli
mov
lea
mov
dec
xchg
xor
adc
test
dec
scas
mov
mov
adc
movsb
pop
das
dec
sub
lcall
popf
bound
mov
add
inc
jo
addb
push
icebp
adc
das
push
or
cmp
aad
and
pop
push
int
add
loopne
testl
jl,pn
push
test
xor
neg
mov
loop
std
fisttps
lcall
push
mov
xchg
fsub
mov
pop
lods
xchg
inc
dec
das
imul
inc
jecxz,pt
jne
dec
push
inc
xlat
sub
imul
or
cmp
add
add
jmp
pop
jae
mov
mov
push
dec
mov
sub
push
mov
fiadds
and
jle
inc
adc
enter
rcrb
or
or
inc
fucomi
jne
fildll
dec
leave
call
into
imul
inc
mov
add
loope
movsl
mov
pop
inc
jp
xchg
sub
and
xchg
mov
push
call
inc
dec
addl
push
pop
inc
cmpb
ds
mov
jno
das
ss
push
push
xor
inc
rolb
movsl
push
jbe
repz
mov
les
int
adc
add
xor
outsl
sbb
lods
mov
popa
inc
into
or
xchg
cmpsl
test
adc
mov
jno
push
loop
push
movl
mov
mov
imul
mov
inc
outsb
push
pop
mov
mov
jecxz
incb
pop
xchg
out
xchg
add
add
mov
adc
mov
mov
sub
out
mov
cwtl
jbe
cmp
mov
add
das
insl
mov
pop
scas
adc
sahf
sbb
jbe
push
cmp
or
sub
jnp
in
inc
or
lock
pusha
or
cwtl
daa
cwtl
mov
pop
test
jnp
jmp
test
addr16
fisttpl
cmc
data16
call
stos
loop
rorb
loopne
xor
data16
ja
in
std
sbb
lods
adc
push
cs
ja
pop
xchg
cmp
dec
sub
push
mov
cmp
jo
stos
outsb
mov
icebp
inc
add
ja
sub
fildl
sub
mov
out
xlat
dec
loop
flds
int
xlat
jae
or
nop
aaa
icebp
outsb
and
xchg
cmpsb
sub
repnz
adc
or
cltd
repnz
out
arpl
test
dec
js
pop
pusha
sub
imul
scas
jb
xchg
xchg
mov
xor
enter
es
fistps
daa
adc
and
mov
and
lahf
push
call
fbstp
adc
mov
xchg
fsubs
outsb
in
mov
shlb
test
or
out
fcmove
push
imull
sbb
jnp
xchg
lahf
jb
pop
cmp
cmpsb
dec
adc
dec
out
dec
fstpt
or
insl
sbb
pop
iret
ldmxcsr
lea
add
cli
outsl
pop
or
mov
mov
scas
xlat
add
push
rcr
cmp
xorl
cmpsb
insb
dec
fldenv
sub
mov
fimuls
test
fidivl
push
in
xchg
jmp
cmp
test
pop
xchg
sub
add
lret
movsb
repz
and
out
mov
mov
mov
iret
push
adc
jb
add
jmp
leave
into
insb
in
or
jne
fidivrs
bound
mov
aaa
cld
cli
sub
mov
push
adc
xor
les
dec
loope
loopne
jne
cltd
sub
hlt
ret
icebp
or
mov
pop
lock
jmp
mov
fisubrs
stc
xor
inc
mov
jae
inc
pop
inc
mov
repz
test
mov
xchg
jp
and
aas
out
fwait
and
popa
popf
inc
int
mov
nop
mov
jecxz
cltd
sub
pop
ds
xor
xlat
andb
sub
dec
sub
je
pusha
inc
add
fildll
outsl
adc
cmp
xlat
imul
push
pop
add
mov
sti
rcrb
incb
pushf
push
ret
mov
xor
jae
or
clc
testb
inc
xor
insb
mov
out
xchg
aas
jmp
cwtl
inc
sbb
cmp
mov
andl
sti
cmp
or
data16
pop
fnstcw
daa
rcrl
adc
arpl
xlat
data16
inc
out
insb
fmuls
pop
xchg
bnd
je
popf
mov
inc
lret
cli
hlt
popa
das
xor
adc
inc
jne
or
sbb
lods
xorl
mov
cli
out
mul
jp
pop
imul
cmpsb
rorl
adc
loope
inc
mov
xchg
dec
cmpsb
daa
adc
push
jmp
xchg
pop
insl
cmp
ljmp
inc
ss
fistps
jnp
add
jecxz
cmp
pop
inc
roll
xchg
aam
jmp
mov
mov
int3
loopne
pop
int
and
dec
xchg
mov
mov
rolb
loop
out
iret
dec
bound
cwtl
popa
pushf
stos
andl
sub
cwtl
je
aas
ror
mov
jecxz
in
ficoms
pop
les
sub
inc
rcrl
ds
icebp
dec
xchg
pop
fistpll
data16
cmp
fstpt
jmp
push
add
dec
sbb
pop
lock
jp
sti
inc
push
gs
xchg
dec
in
shll
stos
fcompl
mov
push
push
int3
xor
stos
pop
cmp
mov
push
sbb
inc
adc
pop
sbb
test
xor
sub
mov
adc
push
in
inc
xchg
sbb
fbstp
inc
xchg
dec
je
mov
into
pop
sbb
and
push
sub
pop
mov
ljmp
mov
mov
sbb
mov
fstpl
sbb
push
test
push
clc
inc
sub
jmp
and
dec
mov
fmull
lds
mov
adc
cmpsb
aam
addr16
mov
push
gs
jo
push
inc
sahf
xor
push
adc
mov
push
mov
xchg
and
movsl
and
ljmp
lret
adc
add
mov
jo
cmpsb
and
mov
shll
out
iret
gs
cli
dec
out
pop
sub
fbld
mov
nop
mov
pop
stos
push
mov
dec
sub
add
mov
cld
ljmp
mov
test
lods
movsl
movsl
push
jle
stos
jge
add
jecxz
mov
cmp
outsl
and
cmp
mov
pop
pop
ljmp
and
lret
mov
add
xchg
int
sahf
mov
or
outsb
arpl
test
rcrb
jns
insb
fldt
lcall
xor
aad
cltd
sbb
fisttps
jl
jns
cmpsb
aam
nop
cld
test
jge
pop
or
add
cmp
mov
pop
dec
stos
sub
xchg
cmp
push
cwtl
push
jl
cld
mov
jg
push
lcall
dec
cmp
pop
jne
or
test
lcall
in
lea
inc
xchg
movsl
out
jne
enter
mov
shrb
adc
mov
mov
push
xchg
ljmpw
lea
pop
loopne
cmp
shlb
mov
xchg
std
inc
push
lods
ja
push
inc
call
or
or
in
std
mov
mov
sub
cmp
adc
mov
arpl
cmp
hlt
cwtl
negl
pop
push
sub
mov
mov
pop
mov
popa
pop
mov
inc
bound
and
fdivrl
popa
lods
sbbb
js
jnp
mov
stos
cltd
sub
in
int
adc
xchg
inc
lods
int
int3
or
cs
mov
shlb
cli
repnz
mov
sub
fwait
mov
lret
outsl
les
cmp
test
add
mov
mov
cmpsb
mov
iret
out
pop
xor
xchg
movsl
out
call
xlat
stos
sbb
mov
loopne
adcl
mov
lea
adc
dec
and
call
out
outsl
popa
pop
and
call
cmp
outsb
jbe
test
sahf
jo
sub
push
push
push
fnstsw
aam
adcb
lods
vpmacswd
loop
mov
dec
dec
jb
xchg
jne
mov
shrb
push
stc
call
sarb
mov
mov
mov
pop
mov
daa
push
push
jmp
cmp
xchg
mov
pop
jno
xor
pusha
pop
push
pop
mov
mov
mov
hlt
or
and
mov
inc
in
repnz
int
jae
adc
jmp
xchg
sub
sub
test
jge
mov
aad
jbe
mov
xchg
dec
stc
int3
jne
push
sar
mov
insb
ljmp
xchg
cmp
or
insb
push
cmp
outsb
notb
pop
sub
mov
rcrb
loopne
adc
cmpsl
out
jle
sub
lret
mov
jne
add
xchg
lret
pop
imul
filds
mov
stc
xor
movsb
popf
pop
xor
je
mov
in
scas
fwait
dec
adc
movsb
dec
dec
dec
sub
xchg
iret
xlat
inc
stos
adc
xchg
or
mov
insb
call
in
xorb
rol
mov
ds
mov
pushf
imul
insb
and
icebp
xchg
mov
jbe
int
sbb
xor
push
lods
fsubp
pop
fndisi(8087
hlt
mov
in
in
stc
mov
cli
pop
sub
xor
into
jmp
mov
ds
addb
or
sarb
xchg
call
insl
jb
nop
xchg
pop
cmp
pushf
pop
aaa
dec
inc
es
and
xor
cmp
ja
inc
ja
mov
shlb
test
loop
rcll
loop
clc
or
pusha
adc
sbb
movsl
add
push
mov
or
in
aaa
imul
cld
inc
add
sub
jo
and
pop
popa
pop
cwtl
sub
push
adc
jae
in
or
cmpsb
testl
and
iret
das
repz
xor
dec
push
and
push
cmp
and
dec
pop
jae
add
mov
xor
insb
movsl
adc
std
jo
pop
jne
mov
and
xchg
adc
mov
and
stos
test
or
mov
and
and
cmp
aas
push
lret
sub
pusha
fdivs
mov
xchg
sbb
sub
std
es
or
mov
sbb
out
jp
inc
stc
mov
adc
dec
push
xor
fildll
mov
adc
mov
repz
jne
test
out
enter
addr16
fmuls
xor
imul
sbb
stc
adc
xchg
movsl
dec
imul
clc
fidivl
movsl
pop
les
pop
fcompl
fs
ljmp
repz
sbb
aam
push
in
mov
test
pop
pop
sub
aas
outsb
add
push
sbb
xor
push
adc
repz
cmp
popf
sub
filds
sub
in
mov
mov
rcrb
add
insl
pop
add
sbb
int3
sbb
aam
push
scas
push
sbb
sbbb
mov
int
scas
lea
out
jnp
out
aaa
mov
idiv
mov
jo
inc
jmp
roll
subl
mov
cmp
out
pushf
jl
lret
add
imul
mov
das
movsb
pop
or
inc
pushf
push
out
adc
fisttpll
mov
push
test
std
xchg
pop
ret
sbb
enter
pop
movsl
dec
shlb
adc
mov
dec
lds
test
je
jae
popa
lret
shlb
lds
fdivs
negl
push
mov
lds
stc
and
push
dec
push
movsb
mov
rcrb
sub
push
or
xchg
or
mov
sti
repnz
shll
xchg
adc
sub
ja
push
adc
pusha
bound
dec
rcll
pop
push
xor
jl
xor
pop
pop
div
pop
mov
dec
mov
sbb
lahf
xchg
lods
gs
inc
ds
push
outsl
daa
imulb
push
outsl
sub
insl
cmp
sub
daa
push
fcomp
out
sti
push
aad
addr16
test
sub
jp
lret
lock
lret
or
dec
xchg
xchg
cs
jg
call
das
push
pop
mul
cwtl
stos
push
jp
clc
test
cli
dec
pop
add
jns
sbb
sub
into
push
jg
sub
test
cmp
fdivrp
out
icebp
idiv
mov
dec
sub
mov
push
popa
test
sbb
cmp
mov
and
lret
inc
std
add
cmp
popf
and
jbe
or
xor
jp
dec
sub
mov
mov
pop
xlat
nop
popf
jnp
adc
enter
ds
xchg
adc
out
loop
xorl
push
into
bound
sbb
dec
dec
pop
xchg
cmpsl
xorl
mov
push
rorl
gs
fisubl
pcmpeqd
mov
in
sbb
pusha
dec
pop
push
sub
xor
mov
loope
xchg
test
push
clc
add
or
aad
xchg
xor
jns
and
cmp
fcmove
push
clc
push
push
lods
addr16
stos
mov
xchg
divl
mov
sub
bound
aad
mov
outsb
mov
mov
int3
cmp
jmp
cmp
rolb
ret
es
push
sbb
jmp
outsl
inc
xor
push
xchg
mov
outsb
mov
mov
jb
xchg
pop
sub
outsb
std
cmp
pop
int3
imul
cmp
imul
xor
in
mov
not
and
or
aam
imul
mov
daa
pop
adc
sbb
cmpsl
ds
dec
test
gs
mov
testb
fmul
jmp
ss
cmp
movsl
shll
dec
jp
and
mov
push
adcb
push
outsl
push
insl
sarl
out
adcb
add
adc
inc
aaa
mov
pop
les
or
clc
out
insb
jne
fildll
lcall
xchg
jb
mov
jl
push
inc
stos
mov
sbb
sarl
mov
ficoml
push
adc
pushf
jg
pop
or
cwtl
pop
jl
pop
cmp
pop
push
mov
out
inc
out
inc
hlt
aas
xchg
inc
int3
js
fs
mov
xorl
or
in
mov
xchg
mov
loop
jl
pushf
pop
dec
lea
dec
mov
mov
cwtl
ficompl
or
lods
sub
xchg
pop
lahf
cmp
int3
cwtl
loope
shlb
fistpl
cmc
ret
ret
subl
dec
add
mov
jnp
popa
mov
lods
aam
sbb
fwait
push
mov
in
test
mov
cld
cmp
imul
stos
pop
je
mov
push
aaa
out
sub
mov
inc
icebp
out
mov
sbb
adc
js
pop
pop
or
out
and
jns
mov
jl
mov
into
sub
sub
je
pop
fiadds
inc
pop
cmp
je
enter
add
js
ja
jbe
xor
dec
adc
sbb
dec
int
sbb
daa
ljmp
push
pop
lds
gs
adc
gs
test
sbb
fmull
fdivrp
inc
sub
addl
xchg
add
add
jle
push
sub
add
mov
lods
mov
addb
in
pusha
insb
dec
dec
subl
push
push
inc
in
sub
daa
test
dec
pop
push
pop
jle
add
jne,pt
or
daa
cmp
add
dec
mov
dec
stc
adc
call
cld
lea
fdivrp
insb
ja
sarb
imul
sub
addl
popa
les
pop
inc
bound
enter
enter
addr16
xor
add
pop
ret
adc
sbb
out
add
icebp
dec
or
xchg
hlt
adc
sarb
movl
iret
mov
push
cmp
rcrb
push
sub
into
push
add
mov
add
cli
mov
or
xor
mov
xor
hlt
jge
xchg
mov
in
jae
or
dec
ret
xchg
iret
pop
xor
aas
inc
js
push
sbb
rorb
nop
mov
jle
cld
gs
lock
push
dec
jno
jl
aaa
xor
outsb
mov
and
stos
fs
rclb
aam
stc
sub
add
jno
dec
pop
lods
cltd
dec
push
jno
xor
lock
jae
mov
pop
jecxz
mov
lahf
gs
lds
cmpsl
cmpsl
rol
adc
adc
test
aaa
or
or
or
inc
neg
ret
cs
movb
push
insl
popl
and
and
jo
or
popf
dec
or
in
pop
rorl
jbe
mulb
sbb
test
jnp
mov
xor
jb
testb
aam
dec
stos
cmpsb
or
in
test
mov
ss
xchg
mov
pushf
dec
insl
sbb
or
xchg
mov
ss
sbb
push
in
add
lret
test
mov
loope
mov
shll
add
setl
aaa
inc
aaa
adcb
sbb
out
scas
insb
jmp
ret
or
shlb
push
and
mov
xchg
or
adc
in
call
test
cltd
shlb
inc
xchg
jbe
ljmp
iret
push
test
adc
cmc
mov
das
push
ja
daa
out
sbb
lods
pop
lret
push
xchg
jns
push
jl
imul
lods
jle
fiadds
popa
les
mov
shll
mov
xchg
sti
enter
stos
dec
leave
xchg
mull
xor
stos
clc
jg
dec
aad
inc
stos
sbb
xchg
inc
dec
leave
out
std
jbe
push
and
add
or
mov
pop
pop
add
in
mov
pop
aam
fwait
push
mov
adc
in
push
mov
bound
pop
scas
es
fcmovnbe
jno
out
jns
cmp
or
add
dec
test
push
sarl
in
scas
ficoml
xor
enter
cwtl
mov
psrlw
cmpb
mov
rorb
cmp
jg
popf
pop
mov
outsb
jmp
lock
std
jmp
loop
sbb
xchg
lahf
aaa
mov
pop
into
jmp
jbe
mov
push
fsubr
lcall
jno
in
adc
xchg
xchg
sti
imul
mov
mov
outsb
outsl
jno
popf
cld
dec
sub
mov
int
sub
clc
jl
adc
ja
int3
cmpsb
repnz
test
jns
cmp
jmp
xor
mov
test
rorb
sub
ss
outsb
adc
cmovbe
pop
mov
xor
mov
inc
stos
push
clc
das
push
pop
adc
int
fxch
daa
xor
stos
cmc
mov
pop
add
sbb
lcall
in
cmp
lahf
add
idivb
jno
push
icebp
and
mov
or
dec
jno
cmpsl
mov
cwtl
fnstenv
stc
push
push
jnp
mov
movsb
imull
add
cmp
cmp
inc
sub
jns
push
aam
or
push
lahf
test
or
das
rorb
in
lock
aaa
je
imul
clc
jno
mov
jg
adcb
xchg
gs
sub
pusha
mov
mov
jmp
pop
int3
leave
sbb
mov
int
rorb
or
lret
int3
adc
mov
inc
mov
cwtl
repz
mov
jnp
jno
xlat
ds
dec
dec
scas
and
fwait
dec
jbe
xchg
fcmovu
push
out
dec
add
ror
inc
dec
adc
jnp
sbb
jns
inc
aaa
or
lcall
push
int
or
dec
sahf
xchg
push
in
test
in
lds
movsl
push
jle
jns
mov
xor
pop
pop
and
push
pop
xchg
mov
and
xor
test
xor
jge
icebp
popf
xchg
jmp
adc
push
loop
mov
xor
imul
movsl
arpl
out
mov
inc
push
enter
adc
mov
dec
mov
imul
xor
out
push
jg
outsb
outsb
adc
push
adc
jmp
or
in
loope
and
cmp
lret
stc
out
adc
xchg
fcom
fidivs
or
lods
xchg
dec
ret
jne
adc
sbb
inc
scas
pop
pop
ss
out
movsb
lods
xor
dec
adc
fldenv
mov
cmp
ljmp
sub
repz
mov
into
jbe
push
fcoms
sub
lret
adc
or
dec
stc
push
mov
pop
or
popf
popf
jnp
mov
faddl
cmpsb
lods
aad
xor
jecxz
lock
not
add
aad
cltd
mull
cmpsl
xchg
or
movsl
mov
insl
adc
lds
and
into
scas
lods
add
add
loopne
popa
stc
scas
mov
sahf
stos
adc
es
test
out
mov
mov
movsb
cld
in
movsb
fnstenv
adc
add
inc
aam
push
data16
jo
lret
cmp
insb
outsb
push
pop
loope
jg
fneni(8087
cwtl
jg
test
setns
xchg
out
inc
and
out
fstl
fadds
imul
lock
xor
xorl
mov
mov
les
dec
stos
cmp
repz
sub
or
inc
iret
movsl
mov
mov
lcall
vmptrst
lcall
add
imul
popf
and
dec
sub
stos
xlat
mov
fisttpl
xor
pop
in
lds
inc
icebp
jae
sub
sub
jge
or
ss
dec
lods
mov
jp
sub
ret
idivl
pop
or
mov
inc
mov
ret
xchg
cmpsl
sub
in
xchg
stos
jns
add
arpl
mov
mov
fldcw
lods
pop
test
add
add
stc
in
repz
sahf
jmp
mov
aad
xlat
testl
mov
inc
xor
jmp
cli
mov
ja
sbb
mov
jg
add
xchg
aam
push
ret
insb
adc
and
and
xor
push
popa
sub
daa
adcl
out
pop
cld
enter
in
cltd
outsl
lds
mov
cmc
sbb
mov
lods
sbb
sub
and
xor
adcb
test
inc
xchg
sbb
pop
dec
mov
mov
or
lock
pop
ja
insb
sub
hlt
leave
mov
xchg
or
xor
xorb
or
mov
cmpsl
mov
ror
pop
cmovnp
not
cli
or
stos
in
rcl
arpl
inc
imul
pop
push
cmp
or
je
cs
bound
pop
jl
and
xchg
pop
ret
popf
das
mov
xchg
and
jecxz
aad
xchg
fcmovnb
jmp
inc
or
scas
lds
lods
repnz
addb
sub
outsl
lret
cmpsl
inc
mov
push
pop
out
mov
dec
pop
popf
push
jecxz
jg
cltd
cmpb
mov
jl
insb
imul
insb
fldl
mov
arpl
mov
rclb
enter
or
xchg
movsb
jmp
pop
popa
ss
mov
xchg
scas
adc
cmpb
push
mov
imul
and
testb
insb
inc
sub
mov
out
fmuls
xchg
int
mov
or
sub
or
xchg
adc
and
psrlw
push
add
out
mov
mov
jnp
fwait
popa
lods
hlt
xchg
sbb
xor
daa
adc
mov
imull
call
inc
xor
push
test
sbb
inc
inc
pusha
sbb
orb
xchg
mov
push
ljmp
lret
lret
inc
lret
cmpl
jp
or
into
arpl
sub
rclb
jl
and
std
in
push
cltd
fidivrs
shlb
mov
lea
fldt
and
ret
ret
add
sbb
cmp
bound
aam
cmp
adc
adc
or
dec
cmp
fiadds
inc
push
mov
insl
or
add
mov
movsb
pop
xlat
pop
jnp
loopne
fiaddl
es
xchg
mov
sub
sbb
push
lods
leave
loop
mov
aas
push
cld
inc
mov
decl
or
andb
out
mov
adc
xor
pop
dec
mov
mov
or
jle
mov
stc
cld
loop
int3
out
lret
ds
addb
pop
adc
sub
lcall
rcl
loop
sub
and
mov
mov
in
adc
and
data16
and
mov
push
mov
pop
aad
fisttps
lds
jecxz
ljmp
movsl
int3
sbb
lahf
jle
xor
xchg
cld
out
pop
es
sbbl
or
inc
cwtl
mov
cs
mov
jl
or
xor
sub
fs
loope
push
cmp
out
dec
cmp
jle
jae
lahf
push
lahf
xchg
popa
xchg
loopne
das
xor
cwtl
ss
push
push
add
scas
out
dec
push
cwtl
and
add
js
mov
into
mov
cmp
sbbl
xor
add
out
sbbb
push
std
mov
mov
rclb
call
jmp
jno
and
xor
jmp
pop
hlt
jne
shr
int
mov
or
cmp
nop
sub
sbb
mov
mov
cmpb
daa
orb
inc
mov
fwait
jnp
stc
push
mul
dec
call
loopne
adc
xor
ds
sub
cmp
xor
dec
vcvtss2si
test
rcr
idivb
mov
mov
imul
lret
xor
mov
push
shrl
cwtl
sbb
mov
ss
fistpll
sbb
xor
mov
dec
repz
pop
das
jno
or
movsb
scas
lods
sub
push
or
mov
outsb
rcrb
jg
dec
mov
into
or
movsl
imul
repz
ljmp
clc
sub
imul
scas
adc
mov
cmpsb
stos
and
or
jns
jae
pushf
rcll
leave
dec
mov
jns
fwait
mov
sub
push
lock
nop
inc
rcl
cmc
jae
mov
mov
dec
das
pop
cmp
dec
filds
loop
jmp
je
sub
movsl
jnp
insl
xor
xlat
or
or
movsl
xchg
imul
jg
pop
cmpsl
ljmp
ret
hlt
rorb
adc
push
push
arpl
sahf
jmp
out
push
jno
dec
and
mov
jle
adc
pusha
mov
mov
xor
push
dec
icebp
add
pop
pop
int
mov
fiaddl
test
mov
pop
nop
lcall
jo
rcrl
test
xchg
push
fsubrl
and
out
loopne
lock
notl
jbe
rorl
jnp
ljmp
in
mov
sub
cmc
mov
sbb
xchg
push
lds
mov
adc
pusha
push
mov
adc
testl
into
mov
lods
rcll
cmp
push
mov
rcrl
gs
xlat
cmp
lahf
in
int3
in
clc
aas
js
cmc
mov
lods
loop
arpl
addr16
outsl
sbb
rolb
les
xor
cmpsl
fdivs
icebp
mov
adc
pop
inc
xor
or
sub
jl
jp
and
imul
inc
aad
imul
aam
mov
xor
push
aaa
cmpb
mov
xor
fistpl
pop
fisttpll
repnz
sbb
leave
cli
fwait
je
out
and
imul
int
hlt
andl
push
xor
xchg
inc
fmull
push
mov
jbe
pop
ljmp
mov
gs
aas
cmpsl
mov
pop
out
adcl
loope
mov
or
and
test
icebp
mov
add
push
add
xor
sbb
imul
mov
jb
stc
iret
rorl
xor
dec
mov
aaa
adc
dec
jecxz
jno
inc
cli
loop
pop
cwtl
xchg
sub
xor
mov
sub
push
cli
cmp
fadds
inc
mov
adc
popf
mov
test
dec
imul
imul
popf
cwtl
adc
xchg
mov
je
or
sub
mov
jnp
or
xor
loope
sbb
bound
lods
ffreep
loope
cmpsl
pop
push
js
sub
mov
jnp
dec
inc
out
mov
mov
pop
jne
push
mov
leave
push
mov
call
out
push
mov
pop
adc
push
cmpsl
pop
loope
pop
cmp
sub
xor
ffree
pop
pop
inc
lahf
mov
jbe
sub
cmc
mov
das
xchg
sbb
or
addb
xor
inc
aas
adc
adc
and
aad
pop
xchg
ljmp
xor
adc
aaa
add
xchg
test
into
mov
mov
lret
mov
jp
cltd
push
cmp
icebp
incb
adc
std
xchg
inc
pop
inc
mov
loopne
stos
push
jae
mov
popf
stc
nop
nop
jbe
outsb
sbbl
nop
sbb
imul
xor
xchg
mov
dec
mov
insb
sbb
pop
fs
jbe
xor
ret
fwait
push
int3
mov
mov
setg
aas
push
and
adc
nop
ret
xchg
and
jmp
out
mov
iret
hlt
div
or
aad
ret
repnz
negl
test
jge
push
in
dec
loopne
push
out
jae
frstor
icebp
lods
xchg
xchg
clc
jg
pop
pusha
pop
popf
mov
cmpsl
xchg
push
cmpsl
mov
mov
sub
sahf
movsl
xchg
mov
jae
xchg
pusha
fidivrs
mov
jle
fwait
sub
jnp
je
adc
clc
sub
lret
xchg
mov
and
inc
dec
fisttpll
adc
fld
dec
add
push
jp
jns
adcl
sub
insl
div
imul
out
dec
mov
push
lods
push
std
jecxz
pop
and
sbb
movsl
pop
ss
mov
ja
fcmovb
mulb
cld
mov
mov
stos
sahf
clc
mov
sub
sub
ss
xchg
repz
push
pop
mov
dec
mov
jae
pop
fdivl
pop
arpl
mov
lret
sbb
push
sub
repnz
iret
leave
outsb
cwtl
repz
sbb
sub
ret
jmp
mov
jbe
aad
add
xchg
or
movl
lret
push
mov
cmp
sbb
rol
mov
ret
fs
stos
in
outsl
iret
push
dec
popf
das
mov
jns
stos
pop
dec
add
scas
insl
jl
push
imul
add
hlt
call
sub
in
xor
inc
mov
xor
mov
das
pop
outsb
imul
loope
enter
and
int3
push
xor
mov
out
iret
cmc
nop
sub
ja
cmp
popa
xchg
or
add
mov
pop
inc
ret
nop
movsl
dec
xor
jbe
mov
fidivrs
xchg
ja
repz
sub
dec
dec
add
or
push
aad
push
in
test
sub
lods
sahf
or
dec
call
inc
mov
and
sub
pop
add
orl
ret
orl
imul
call
push
and
pop
inc
jge
and
push
pop
or
rcrl
out
inc
ja
imul
cmp
movsl
andl
xchg
lret
nop
or
lea
push
aas
mov
int3
fimull
sub
in
cmp
mov
push
mov
xchg
push
pop
inc
cli
and
leave
or
xchg
xchg
jge
dec
mov
pop
call
pop
xlat
popf
in
jmp
push
subl
lret
lods
dec
test
in
adc
and
push
add
rorb
sub
dec
push
mov
lods
adc
in
sub
sti
gs
gs
fsub
cltd
jbe
stc
or
jecxz
movsb
aam
cwtl
divl
or
adc
arpl
pop
out
lea
btrl
dec
cltd
push
cwtl
jb
gs
jne
addr16
dec
sbb
xor
or
adc
scas
out
adc
push
mov
jge
in
dec
push
jecxz
sbb
sub
add
test
outsl
push
insl
push
mov
cltd
xchg
mov
mov
push
mov
arpl
mov
xor
sub
aad
cltd
imull
sarb
std
sub
pop
ss
jmp
nop
ror
xchg
inc
rorb
push
icebp
aaa
cmpb
out
cld
sbb
loopne
aaa
fidivs
cmp
mov
sbb
jno
in
dec
push
cmc
inc
les
pop
sarl
xchg
notb
add
mov
cltd
pop
push
in
sub
sub
sbb
xchg
mov
cmp
cmpsb
sbb
aad
push
xor
rcrl
movsl
stos
lea
sub
rorb
mov
je
rorl
addr16
int
push
dec
pop
pop
xchg
test
sub
mov
jg
jno
fistpl
mov
pop
leave
addb
fmuls
jmp
idivl
out
clc
scas
push
pusha
or
dec
sbbl
sbb
iret
arpl
adc
fsub
pusha
mov
cli
hlt
and
mov
je,pn
mov
jge
jnp
stos
mov
adc
pop
pop
push
inc
mov
and
xchg
xchg
mov
lret
js
jo
xchg
sub
mov
aad
ja
inc
dec
jge
or
stc
sub
nop
mov
inc
faddp
xchg
popa
cmp
mov
ret
add
or
push
adc
movsb
dec
loopne
mov
jb
add
or
jbe,pn
inc
or
clc
shrl
push
loope,pn
jg
mov
inc
insb
aad
sub
dec
sub
inc
add
xor
cmp
je
movsl
add
stos
or
xchg
xor
cmp
mov
xor
pop
or
jle
ja
inc
pop
js
fildll
lret
insl
ja
scas
js
or
pop
fistpl
test
in
pop
cld
jecxz
ljmp
movsl
lret
imul
sti
jl
mov
mov
xchg
les
fadds
sbb
push
repz
push
xchg
xchg
push
decl
out
loope
in
sub
pop
fldcw
ljmp
lock
std
push
add
repnz
mov
dec
xchg
es
jecxz
inc
cmp
jo
xlat
jge
xor
mov
sub
subb
and
rcrl
popf
and
pop
sub
xlat
bound
mov
call
shl
test
dec
ret
sarl
call
sti
mov
stos
sti
bound
call
clc
cwtl
lds
pop
shll
jo
push
aas
pop
insl
or
int
es
and
inc
mov
and
jmp
rep
stos
loope
sub
int
sbb
inc
addr16
xchg
int
aam
push
xchg
ret
pop
push
out
cmp
mov
fistpl
rolb
test
xor
data16
pop
push
dec
cmp
scas
fs
enter
or
decl
pusha
stos
repnz
stos
mov
stc
pop
lret
and
outsb
xchg
jne
aad
imul
repz
mov
cs
lret
rcl
cmc
cld
sub
daa
sub
mov
div
xor
dec
xchg
into
sbb
sub
xchg
idivl
jns
jecxz
js
mov
and
arpl
jnp
or
add
cltd
int
push
jecxz
cmp
push
mov
mov
popf
adc
add
xor
repnz
fcom
jo
or
aad
sar
mov
xor
add
notb
shlb
les
inc
dec
loope
mov
loop
pop
and
leave
shlb
mov
in
xchg
or
jl
sbb
imul
mov
cmp
xchg
lods
filds
and
adc
in
in
inc
cltd
add
imul
and
dec
stc
jne
mov
jge
pop
lods
data16
or
ret
ret
mov
jae
or
mov
xchg
mov
add
mov
dec
cmp
adc
imul
xchg
or
aad
or
xchg
jo
incl
jmp
jb
enter
and
pop
inc
jnp
cmp
aaa
inc
jnp
fcmovne
xchg
add
mov
jb
pusha
stc
pop
or
push
lret
iret
or
add
cmp
push
jle
popf
mov
roll
sbb
cmpsl
add
jmp
sti
push
nop
jle
loop
jge
jbe
imul
ret
xlat
pop
or
add
sub
inc
loopne
dec
cmp
aaa
mov
xchg
cmp
pop
cmpsb
mov
sbb
adc
xchg
sbbl
jae
or
into
push
push
mov
jae
sbb
inc
lods
push
mov
cwtl
pushf
insb
mov
mov
sbb
xchg
gs
dec
mov
std
push
sub
es
or
xor
add
xchg
fldenv
cwtl
test
sub
lods
or
xchg
mov
jmp
in
add
adc
scas
mov
fdivrp
aam
shl
cld
cmove
test
pop
xor
addr16
stos
arpl
mov
icebp
lret
out
xchg
lret
cmp
loopne
jg
idivl
xchg
xlat
lods
xor
inc
mov
inc
insl
mov
jae
or
mov
sub
jo
lock
sahf
or
or
cmp
inc
sub
cmp
mov
std
sbb
stos
sub
fiadds
jne
xchg
jb
mov
push
inc
mulb
shr
es
into
std
dec
in
push
dec
cmpb
decl
push
aam
out
sub
pusha
ds
fld
add
fisubs
adc
mov
cmp
iret
and
repz
addl
adc
jge
lret
lods
cwtl
jp
int
dec
shlb
or
cmp
push
push
data16
sub
inc
subb
das
ljmp
in
sub
sub
cltd
incl
into
dec
aas
pop
or
add
test
leave
loope
cmp
mov
pop
or
scas
imul
adc
jo
fucomp
or
ret
and
sbb
leave
push
jnp
and
sbb
lret
in
cmp
jbe
test
sbb
sub
enter
mov
or
pop
ss
scas
stos
in
cli
cmp
clc
sbb
push
push
xor
sub
loop
testl
scas
insl
mov
mov
movsb
std
testl
ret
repnz
xchg
cmp
jne
pop
mov
cs
in
pop
inc
test
pop
mov
fldl
shrl
add
or
dec
jle
daa
push
push
fdiv
push
cwtl
adc
push
fcomps
adc
out
mov
jo
test
call
mov
stc
fwait
push
mov
adc
bswap
jbe
scas
sub
outsb
and
push
aaa
pop
mov
icebp
fs
outsb
lods
sub
mov
lahf
xchg
sub
iret
int3
pop
outsl
add
jl
pusha
xor
sbb
xchg
mov
arpl
dec
xchg
sub
rorb
pop
stos
cmp
cmpl
call
stos
or
shl
cmp
ds
add
mov
mov
or
test
jmp
and
cmp
cltd
stos
sbb
cmc
sbb
push
xchg
shr
popa
add
jmp
dec
stos
clc
jecxz
pop
pusha
mov
or
xchg
insb
mov
hlt
mov
push
dec
lods
dec
out
test
cmpsb
lret
xorl
fisubrs
imul
dec
mov
adc
dec
jp
out
pop
roll
pop
popa
or
cmpsl
sub
imull
lea
xchg
in
dec
sbb
iret
gs
mov
jmp
fnstcw
pop
xchg
pusha
scas
push
mov
rolb
add
stc
mov
xchg
sub
loop
mov
in
mov
mov
dec
aaa
cli
stos
sub
sub
lods
dec
push
xchg
xchg
out
xchg
sarl
mov
sti
loop
cmpsl
notb
xor
loope
inc
push
cmp
mov
jb
mov
pop
pop
lea
mov
movsl
cmp
jmp
xchg
das
or
xchg
mov
std
insl
push
mov
mov
push
shr
movsb
add
fwait
or
out
pavgw
rclb
test
lods
in
add
ss
jno
sub
ds
std
pop
sub
dec
cmpsb
xor
pop
jl
aam
lret
xor
aad
add
movsb
mov
pusha
jnp
push
repz
lret
bound
in
xchg
jmp
loopne
std
int
pop
aam
pop
mov
xchg
sbb
add
jge
inc
lods
mov
jbe
in
imul
pop
xchg
push
pop
xor
push
mov
pop
jl
inc
insb
mov
out
or
iret
sub
push
hlt
je
mov
cmp
ljmp
imul
fwait
sbb
sbb
mov
xadd
cs
dec
fwait
mov
xchg
fistpl
or
test
mov
pop
or
mov
pop
dec
inc
adc
data16
or
jae
stc
int3
push
mov
loope
xchg
movsl
mov
nop
sahf
xchg
dec
ficoms
and
jo
mov
imul
lcall
repz
sbb
rcrl
das
mov
scas
mov
jno
cs
adc
pop
arpl
shl
data16
out
inc
push
jmp
sub
enter
xchg
sbb
dec
adc
and
imul
ret
cmpsl
idiv
loope
jge
repnz
cmp
js
and
cmc
xchg
lds
mov
pop
adc
jbe
add
cmp
sub
mov
lcall
xchg
jp
dec
mov
mov
jo
fsts
jge
repz
mov
xor
mov
int3
mov
sahf
mov
pusha
mov
xor
imul
out
movsb
imul
mov
rcr
mov
pushf
jae
ljmp
lods
jno
lods
mov
sbbl
push
jno
out
jle
sbb
test
sbb
in
lahf
jne
pusha
mov
shll
cmp
sub
push
aam
xchg
xor
dec
sbb
and
jmp
sbb
enter
popf
jge
xor
pop
pop
bound
cmpl
or
aad
jge
pop
xor
pop
imul
movsl
rcll
cmp
cld
mov
sub
jae
sti
jp
cli
push
and
and
inc
and
and
icebp
cld
mov
xor
decb
xchg
sbb
xor
mov
push
mov
inc
or
dec
insb
mov
adc
cmpb
adc
push
mov
hlt
push
insb
xchg
fwait
cmpsl
gs
in
inc
lds
pop
mov
and
cwtl
enter
xchg
or
dec
add
rorl
rcl
inc
lahf
sbb
cld
shlb
mull
xchg
mov
inc
cli
scas
push
imul
dec
dec
cmp
add
or
sub
dec
mov
and
xor
movsl
nop
fistpl
arpl
push
jb
int3
call
clc
adc
insb
fwait
pop
scas
push
dec
sbb
mov
cmovnp
rcll
stos
jne
mov
dec
push
cmpb
ficoms
outsl
mov
push
subl
pop
aad
mov
mov
cli
sub
pop
or
mov
push
inc
xor
insb
fwait
sti
pop
push
les
rcrl
xor
or
js
jnp
jmp
ret
cltd
jecxz
push
in
add
mov
mov
ficoml
sub
lcall
je
cwtl
test
rolb
cltd
or
xlat
lds
sub
add
fcomps
sahf
enter
sarb
pop
lods
or
jg
fwait
jge
call
cmp
push
xlat
pop
mov
push
test
xor
mov
rcrb
loope
xlat
push
mov
scas
mov
roll
dec
je
insl
dec
scas
mov
pop
cmp
addr16
and
jmp
mov
jb
push
or
adc
sub
and
jge
in
into
lcall
cmp
jae
xchg
and
push
xor
sti
popf
fwait
pusha
outsb
notl
cmp
and
mov
mov
or
sub
push
cld
lret
sub
and
mov
jmp
fimuls
add
sub
addr16
lret
pop
lods
imul
insb
lds
jl
inc
or
push
cmp
daa
inc
incl
divb
jns
or
adc
xchg
ss
pop
add
sbb
mov
test
sahf
arpl
into
cmp
dec
xchg
ja
dec
mov
and
insl
push
loope
dec
jbe
xchg
icebp
scas
pop
mov
add
inc
movsb
pop
and
jmp
dec
incl
sbb
movsl
add
push
frstpm(287
push
imul
rcrb
push
pusha
add
lods
mul
outsb
test
dec
add
mov
in
popl
jg
mov
int
mov
enter
lcall
icebp
or
pop
imul
adc
xchg
and
les
pop
nop
dec
adc
in
or
cmp
push
jle
mov
push
pop
add
sbb
cwtl
lahf
sbb
pop
out
lock
mov
in
push
push
sbb
mov
mov
call
out
pop
sbb
lods
mov
push
cmp
adc
sub
inc
pop
cmpsl
lret
aam
pushf
pop
mov
jge
xchg
lret
jp
mov
jle
mov
jecxz
add
fdivr
and
shr
mov
lcall
inc
pop
lock
pop
stos
mov
insb
call
mov
je
mov
mov
xchg
repnz
frndint
int
mov
fstpl
mov
sbb
adc
mov
xor
in
pop
jge
es
mov
or
or
mov
in
cmp
test
jae
sub
scas
pop
sbb
jl
mov
or
inc
movb
cmc
xchg
ds
sbb
inc
or
mov
das
inc
pop
clc
add
repnz
int3
shrb
sub
arpl
or
xchg
loop
mov
sub
cmpsl
xor
pop
mov
data16
and
push
test
mov
mov
repz
aad
jno
test
aaa
in
or
loope
jmp
lods
into
cmp
out
fcmovb
movsb
pop
mov
cmpsl
std
jae
data16
test
mov
stc
jl
dec
or
cs
into
addr16
fs
fwait
hlt
pop
repz
lock
pop
les
pop
sbb
fnstcw
sti
push
push
inc
mov
jbe
fildl
aad
lea
imul
mov
cmp
add
js
pop
lods
jmp
mov
push
cmp
lcall
in
or
jne
mov
pop
sti
sbb
shll
jbe
bnd
test
cmp
repz
rcll
popa
fadds
push
pop
insl
xchg
stos
cmp
add
jbe
mov
dec
insl
pop
repnz
push
sbb
cmp
fildll
mov
push
cld
mov
stc
negb
adc
pop
scas
fistpll
enter
add
inc
xor
jge
sbb
cs
inc
and
cmp
xor
sti
jle
fstpt
or
icebp
push
outsl
xchg
mov
iret
sti
cmp
mov
sbb
push
xchg
std
test
outsb
push
jecxz
xchg
dec
call
sahf
fldenv
xlat
sbb
inc
loop
pop
in
jne
popa
mov
das
das
jecxz
ret
pop
std
dec
xlat
xchg
or
cli
and
mov
fisubrl
fcmovbe
out
pop
js
sub
pop
repz
push
pop
cmc
pop
xchg
and
loopne
jp
jno
xchg
push
cli
dec
jns
mov
add
sub
das
add
data16
jne
jge
mov
xor
cmpsl
in
out
rol
mov
mov
dec
dec
mov
jbe
add
fs
pop
xchg
push
inc
pop
mov
adc
sbb
mov
mov
or
dec
push
adc
insl
outsl
adc
outsb
sti
outsb
in
jns
xchg
xchg
mov
adc
in
adc
mov
inc
sub
addr16
aaa
adc
mov
fcmovnu
sar
testl
mov
rorl
fs
push
hlt
and
mov
mov
add
pusha
xor
pop
jl
cvtps2pd
xchg
dec
iret
lret
sub
jne
rolb
flds
cmp
mov
lods
rcrb
divb
out
jecxz
imul
gs
cmpsb
cld
ret
and
sub
fldenv
and
popa
cmc
lds
or
in
mov
call
pop
insb
sub
jne
or
fcomps
iret
cs
xor
jmp
nop
nop
lcall
jbe
inc
fisubrl
stos
mov
cmp
push
lods
lret
lock
popf
icebp
inc
insl
jge
adc
or
sbb
lahf
lret
rorb
push
inc
cmp
daa
xchg
sub
mov
cwtl
inc
jecxz
mov
iret
enter
jle
in
aas
lock
lods
movsl
popa
aaa
pop
or
add
jge
cmp
jmp
aas
mov
adc
xor
mov
dec
jp
pop
dec
push
lea
leave
mov
std
xchg
mov
cwtl
loop
jnp
sti
iret
insb
add
lret
and
sbb
rorl
mov
lahf
repnz
and
jo
or
mov
rorl
loopne
test
add
cli
iret
test
out
mov
out
in
add
sbb
pop
inc
sbb
inc
sbb
sub
mov
lock
subl
out
addb
dec
mov
rcrl
jp
imul
xor
sbb
pop
push
dec
jns
pop
mov
shrb
out
pop
iret
mov
jbe
push
lods
cs
sbb
pop
movsl
cmp
jle
jecxz
and
cmpb
jp
sub
and
mov
aaa
and
imul
adc
shlb
aas
inc
fstl
mov
leave
insl
or
es
pop
cmp
add
jp
and
or
add
enter
and
sbb
addr16
stc
xor
ljmp
xchg
in
in
sbb
push
cmp
inc
and
mov
cmp
sarb
rcrb
test
push
adc
adc
in
xor
daa
pusha
pushf
push
dec
jmp
push
and
imul
sbb
lods
stc
adc
jne
and
in
imul
jge
das
fcomip
std
jns
cmp
pop
js
cmp
insb
cmpsb
push
not
popf
pop
loope
inc
sbb
sub
push
mov
es
loope
leave
adc
loop
sbb
or
frstpm(287
divb
hlt
inc
ljmp
int
clc
push
call
jp
iret
dec
pop
xor
aas
add
jb
testl
and
ss
lahf
addl
lods
inc
lods
jecxz
jp
stos
mov
lock
and
call
pusha
imull
xor
fidivrl
dec
inc
dec
mov
test
jns
ss
fstps
js
negl
cli
cwtl
xor
sahf
loopne
and
adc
rolb
xchg
cli
flds
or
mov
movsb
mov
xchg
and
lods
xor
adc
call
mov
push
sub
das
jmp
sbbb
xor
out
pop
mov
clc
inc
sub
cmpsb
ret
mov
insb
dec
sbb
leave
mov
dec
int3
rcrb
cli
or
mov
iret
int3
add
mov
dec
jmp
in
xlat
nop
push
int3
jnp
out
fisttpll
push
adc
cmp
shrl
repz
daa
aaa
jg
push
inc
inc
mov
mov
xor
xchg
push
jne
loop
stc
and
ret
cmpsb
inc
out
pop
sub
or
repnz
and
loopne
pop
mov
aam
lea
add
shrb
and
lcall
push
iret
mov
push
xor
in
lcall
xor
add
roll
aaa
cmp
shrl
jle
lcall
sub
outsl
mov
adc
and
xchg
xor
testb
pushf
xor
fiaddl
xor
out
sti
es
clc
cltd
jae
add
pop
loope
pop
lds
or
pop
lahf
push
cld
rclb
clc
int3
mov
and
aaa
push
add
push
adc
pop
inc
fadds
cmp
mov
xchg
sbb
test
fld
jb
stos
movl
hlt
loope
jl
je
jb
push
mov
shl
xchg
jge
ds
sbb
sar
jnp
sbb
pop
shlb
sbb
inc
inc
notb
sbb
mov
inc
aad
repz
mov
outsl
adc
loope
int3
pop
loopne
test
sub
lret
in
xor
dec
sub
int
cmpsb
push
cmp
dec
cmp
outsb
testb
mov
dec
lcall
popf
fidivs
js
scas
and
outsl
loopne
out
mov
add
fldenv
add
cwtl
clc
sub
and
mov
adc
cs
xor
sbb
scas
lds
scas
mov
xchg
jno
loop
cld
test
adc
fwait
mov
ja
inc
pop
and
mov
insl
loopne
inc
loope
lds
or
xchg
lock
inc
negl
cmp
insb
push
scas
pop
ja
xchg
shl
testl
imul
mov
xchg
mov
add
in
jb
les
jmp
test
xchg
adc
push
sbbl
sti
icebp
xchg
mov
lcall
cmpsl
out
icebp
pop
fdivrl
fdivs
test
shll
das
gs
out
adc
jns
xchg
xchg
pop
std
push
sbb
ret
inc
dec
and
adc
daa
mov
subl
xor
mov
mov
call
je
int3
cli
adc
nop
pushl
pop
jp
aas
popa
addl
sub
cmpsb
push
scas
cmp
adc
cltd
in
push
mov
je
clc
subb
out
adcl
or
and
mov
mov
jns
cmp
je
out
repz
cmp
sub
dec
fwait
xorl
test
adc
in
mov
inc
xlat
cmp
xor
jbe
cmpb
jmp
popa
scas
subl
push
aas
mov
aaa
or
inc
sub
sbb
inc
adc
rcrl
in
sbb
push
lock
and
add
pushf
or
mov
popf
rorb
imul
stos
add
retw
adc
das
test
sbb
sti
dec
mov
stos
insb
cmpsl
add
sub
imul
push
jns
lods
je
xor
xor
sahf
xchg
xchg
xor
and
das
mov
and
addb
call
fwait
xchg
ja
dec
outsb
dec
roll
jp
dec
pusha
es
mov
dec
mov
xor
xchg
fcmovnbe
scas
data16
xchg
mov
xchg
pushf
cltd
leave
add
lods
gs
aad
mov
int
xchg
sub
insb
scas
sti
xchg
fwait
adc
sarb
ss
lods
dec
xchg
jb
adc
and
imul
int3
dec
jl
adc
outsl
cmp
outsb
mov
mov
in
test
jnp
xor
shl
xchg
cli
jb
ds
addl
repnz
lods
jle
xlat
sub
add
and
or
sub
adc
xchg
sbb
xchg
mov
sbb
pushfw
bound
imul
aaa
lret
push
mov
mov
push
or
jae
rcrl
xor
mov
sub
pusha
sbbb
insl
pop
add
sbb
fists
fsts
jb
xor
mov
int
int3
xor
fldenv
sub
fucomp
xchg
jp
scas
cltd
pop
inc
in
sbb
jns
xlat
ljmp
insl
mov
cmp
in
push
out
icebp
test
das
dec
jge
arpl
repnz
aas
test
mov
or
jb
jbe
shlb
xchg
push
mov
int
cli
cmp
cmp
xchg
popa
hlt
pop
xor
xchg
cld
fwait
hlt
stos
cli
out
mov
push
ror
pushf
lret
in
je
mov
adc
lods
mov
int3
test
das
hlt
aam
add
mov
jne
mov
jnp
subl
rorl
movsl
and
sub
sbb
jne
or
jb
or
pop
scas
sbb
scas
stos
cmp
bound
lock
repnz
popl
lods
in
inc
or
mov
mov
arpl
or
xorl
adc
cmp
jbe
leave
testb
leave
xor
push
jge
test
xchg
pop
xchg
scas
cwtl
adc
imul
scas
sub
stc
jo
rol
or
mull
outsl
dec
xchg
xor
xchg
aad
loopne
inc
movsl
xor
pop
jp
fistps
ss
jae
mov
addr16
lea
bound
jno
add
adc
repnz
push
daa
sbb
dec
aad
mov
lds
inc
mov
sbb
add
sub
or
or
ds
jecxz
daa
inc
dec
mov
arpl
movsb
mov
cmp
sub
mov
sub
add
adc
stc
jle
cmp
pusha
mov
ss
popf
ljmp
lcall
pop
push
sbb
push
fs
leave
loopne
cmp
jl
sub
sub
imul
push
fwait
int3
sbb
or
into
movsb
leave
xor
hlt
ja
test
icebp
xor
scas
mov
nop
inc
or
aam
jle
inc
movb
mov
mov
push
mov
fs
mul
xorb
cwtl
repnz
out
pop
out
stos
pusha
and
jecxz
and
mov
testb
mov
mov
mov
out
mov
call
sub
inc
outsb
data16
jmp
mov
popf
incb
mov
xchg
outsl
xchg
orl
cwtl
lods
add
mov
popa
out
xor
mov
enter
cmp
out
loopne
fildll
mov
repz
aad
inc
cmp
push
sbb
rcl
adc
ret
mov
cmp
stc
scas
cli
and
jno
add
fbld
stc
lods
repz
clc
mull
loop
lods
test
cld
jno
mov
inc
lret
mov
loopne
sub
test
xor
shll
in
mov
ds
sub
nop
iret
cmpsb
add
sbbl
nop
push
into
sbb
ljmp
lods
std
pop
ja
jp
sbb
push
cmp
sbb
push
daa
enter
repnz
shll
pop
jne
mov
mov
jo
decl
clc
add
sbb
mov
push
js
jmp
xchg
or
jg
aad
sub
or
js
les
out
shrl
mov
out
loop
push
aad
jge
popa
aas
andb
lret
push
outsb
xchg
xchg
dec
cmp
jb
ljmp
bound
and
or
lcall
icebp
aam
cmpsb
into
sti
aaa
in
mov
adc
dec
pop
fldt
mov
lret
mov
outsb
xchg
js
es
push
pop
xchg
addr16
rcll
fists
lods
out
ret
mov
inc
ds
inc
inc
adc
fucom
mov
loopne
dec
sti
mov
std
dec
inc
rcll
leave
pop
stc
push
push
xchg
lods
sub
gs
lahf
jmp
or
cltd
mov
push
xor
and
pushf
adc
dec
inc
or
sub
mov
sbb
std
inc
into
scas
mov
nop
int
lea
rcrb
shlb
ljmp
inc
sub
out
sbb
pusha
aaa
loop
sbb
sbb
mov
inc
push
pop
push
cmp
lock
mov
push
mov
pusha
jbe
test
je
xchg
and
inc
mov
inc
sbbl
mov
push
out
mov
pushf
jb
mov
pop
jl
lods
test
and
add
jns
and
inc
cli
jne
bound
jns
and
lods
stos
sbb
xchg
mov
pop
xor
cmpsl
mov
sti
jo
and
pop
inc
mov
xor
fdivrs
cwtl
into
xchg
sbb
mov
nop
imul
inc
in
fisttpl
inc
mov
ss
mov
sbb
mov
push
outsb
scas
repnz
jle
decb
out
sti
sub
jae
cltd
fwait
repnz
ja
rolb
xchg
mov
cmc
mov
cs
sbb
dec
and
pop
jne
xchg
push
fidivs
out
fsubp
gs
or
data16
mov
ds
add
insb
imulb
ja
rcl
stc
mov
lret
inc
sbb
addb
xchg
not
out
lahf
inc
jecxz
pop
aam
pop
pop
push
lods
jbe
jp
xchg
pop
dec
xor
mov
sub
mov
and
movsl
out
push
or
adc
mov
pop
ljmp
cld
xchg
loopne
es
popa
ss
popf
add
add
jge
enter
dec
and
inc
cmp
ret
aas
stc
enter
mov
sbb
xor
ret
dec
push
lds
jno
movsl
jno
dec
cmp
rorb
xor
fcomip
mov
mov
jb
ljmp
and
das
or
xlat
out
fstpl
dec
pop
ds
or
lods
jno
and
cmpsb
jo,pn
inc
xor
pop
adc
xchg
rcrb
mov
xchg
mov
pop
aas
mov
dec
add
call
sbb
aam
inc
dec
push
or
rorl
jmp
scas
sub
insl
daa
rolb
adc
cmp
sub
push
lret
dec
rclb
jo
jb
jbe
jnp
fiadds
and
pop
inc
mov
inc
fistpll
mov
and
adc
mov
pop
xor
dec
lahf
shll
sub
mov
mov
and
adc
mov
mov
sbb
stos
jno
jge
out
mov
daa
inc
dec
and
movsl
sbb
sbb
pop
adc
popa
or
mov
add
mov
adc
in
or
push
sbb
loope
loopne
ds
push
push
scas
lcall
mov
sbb
ss
adc
in
xchg
stos
xor
ret
fisttps
jbe
sub
outsb
mov
push
jno
inc
test
jno
cmp
adc
dec
lahf
sub
div
ds
xor
scas
cmpsb
int3
aam
add
fs
xor
addr16
mov
jae
rclb
cwtl
outsb
add
pop
xor
into
lret
xchg
in
in
bound
rclb
loope
dec
mov
cltd
outsb
mov
sub
jmp
sub
cwtl
jp
cmp
jae
cwtl
sbb
out
out
ficoms
enter
cwtl
mov
adc
push
or
push
xchg
push
dec
mov
push
loopne
insb
xchg
ds
int
adc
xchg
lcall
pop
call
mov
jns
pop
mov
imul
or
jecxz
fsqrt
mov
insl
push
je
lea
into
dec
jmp
int3
out
mov
sub
aaa
sti
in
icebp
loop
enter
dec
enter
insb
loopne
lcall
pop
loope
xchg
pusha
lcall
int
mov
push
cwtl
enter
in
fstpl
sub
jnp
jb
adc
push
loopne
aam
cmp
movsl
ja
jecxz
mov
add
fcomp
mov
dec
stos
repz
push
popf
lods
push
dec
and
mov
jae
icebp
jle
repz
ret
iret
adc
rclb
fistps
fsubr
notl
dec
jnp
mov
fisubrl
stos
and
cmp
fimuls
sub
sbb
movsb
lock
adc
push
mov
mov
icebp
sub
xchg
push
dec
leave
add
aas
aaa
push
les
je
insl
cmp
fldl
add
add
sar
outsb
xor
sub
dec
push
in
ljmp
mov
scas
iret
int3
jbe
es
xchg
fcmovbe
inc
adc
push
push
fnstenv
aam
xchg
jmp
fsts
test
ret
aaa
sbb
xchg
xor
ss
pop
and
enter
mov
out
dec
outsb
jecxz
out
in
dec
mov
rcr
lcall
leave
sub
arpl
push
pop
mov
stc
lcall
cmp
scas
out
cmp
js
push
mov
jno
scas
pop
cs
jecxz
lds
add
mov
mov
xchg
aad
and
mov
daa
imul
cmc
adc
loop
lock
insl
movsb
or
out
lret
mov
jle
orl
xchg
xchg
pop
pusha
xchg
pushf
sub
shrb
icebp
mov
mov
adc
in
into
leave
mov
cltd
ret
push
or
mov
or
pop
mov
out
push
cmp
cmp
add
leave
ror
adc
outsb
or
xor
cmpsl
add
mov
adc
rcll
ret
sub
xor
jg
sarb
test
dec
cmpsl
mov
jle
cltd
sub
mov
cmp
adc
enter
frstor
add
test
scas
cld
xor
mov
or
repz
push
mov
jmp
lcall
pop
or
ljmp
inc
jno
dec
add
jmp
lcall
lret
jg
xchg
shl
ss
fsubs
mov
imul
sub
sub
inc
movsl
mov
mov
iret
pop
xor
sub
pushf
icebp
pop
test
xchg
push
cmp
loopne
pop
faddp
xchg
rcll
add
jle,pt
sub
jo
push
cmp
sub
out
scas
mov
or
jle
imul
pop
or
cltd
int3
mov
and
cmpsb
and
sbb
test
push
notl
sbb
xchg
std
fnstcw
movsl
jle
mov
stos
lahf
xor
push
or
xor
mov
mov
mov
pop
sbb
add
inc
jo
or
aas
fisubrl
lea
repz
lea
int3
cmpsl
rorl
mov
inc
push
xlat
adc
push
ljmp
or
lds
xor
out
sub
inc
push
push
dec
sub
pop
xor
sub
cs
dec
jl
sbb
or
in
dec
xlat
push
jmp
fwait
ss
and
dec
pusha
xor
cmp
test
movsb
ror
in
testl
leave
mov
or
popf
xor
shl
mov
sti
sub
outsl
xor
inc
cli
lcall
aaa
dec
adcb
dec
xor
pop
fildll
push
lahf
imul
cmc
fwait
sbb
test
stc
imul
sub
es
stos
sahf
neg
ljmp
leave
or
popa
inc
jl
loop
jecxz
repnz
int3
pop
scas
inc
nop
les
lock
daa
and
dec
ljmp
xlat
xor
loopne
movsb
fcmovb
xor
je
jge
inc
jl
decl
cmp
fwait
adc
cli
pop
mov
dec
mov
jmp
push
lgs
js
sbb
je
sbb
dec
fs
add
nop
clc
fstps
mov
icebp
cmp
and
icebp
std
jbe
shl
mov
daa
and
outsb
push
out
or
pusha
jle
push
xchg
adc
and
jle
dec
and
dec
loope
pop
fs
mov
stc
xor
outsl
fcoms
dec
aaa
enter
je
scas
jp
sbb
mov
xor
aam
mov
dec
cmp
clc
aam
imul
sub
rcrb
es
lods
adc
sbb
fincstp
cltd
sahf
or
pop
shrl
add
push
push
mov
cmp
fdecstp
mov
xchg
push
xchg
push
int
xchg
scas
imul
mov
or
jmp
daa
lahf
not
fisubrl
jg
mov
and
ret
adc
mov
cmc
jbe
dec
jge
cmp
clc
ret
jae
xchg
jns
mov
inc
sbbl
lock
movsb
gs
imul
and
mov
pop
adc
out
ds
push
xchg
lret
imul
ljmp
movsl
mov
js
mov
inc
mov
repnz
fsubl
out
jbe
pop
test
mov
pop
cmpps
push
scas
repnz
gs
push
lret
pusha
xor
push
lret
bound
xchg
dec
cmpsb
test
jnp
fcoml
aad
iret
jb
repz
push
push
into
mov
lods
je
xchg
fdivrs
int
mov
xchg
xorb
bound
pop
jns
mov
ret
push
lret
fdivrs
adc
lret
roll
xchg
cli
mov
je
pop
daa
pop
push
hlt
sbb
fwait
cmpl
dec
or
pop
stc
lcall
out
fdivr
jl
adc
inc
js
lea
inc
add
lods
sub
popa
push
out
add
mov
or
mov
xchg
loopne
inc
and
inc
std
add
push
sbb
icebp
inc
or
leave
outsb
ret
movsl
loop
decl
in
pop
movsb
sti
mov
or
or
popa
mov
add
out
pop
cmpsl
xor
jno
xchg
xor
inc
pop
pop
mov
cmp
dec
fcmovbe
inc
xorb
cltd
in
mov
mov
mov
decl
mov
jecxz
mov
xor
push
dec
stos
inc
xchg
popf
push
inc
mov
sub
fiaddl
dec
push
dec
stc
stos
dec
mov
jnp
repnz
mov
lret
inc
mov
repz
and
add
aaa
sbb
mov
test
pusha
mov
in
dec
jne
adc
in
bound
int
xchg
jae
push
sahf
mov
dec
cmp
fcoms
xor
mov
pop
rclb
cmp
cwtl
sti
dec
pop
jge
fcoms
pop
lods
add
int3
xchg
addr16
test
mov
pop
xorb
mov
mov
into
ds
mov
out
in
shlb
push
sub
and
push
mov
push
and
insb
lods
loope
data16
fnstsw
xor
addl
sub
ret
out
decb
cltd
popf
int
or
pop
iret
lods
in
movsb
jg
int3
out
lea
dec
clc
int3
xchg
push
mov
jo
sbb
cs
int
or
daa
loopne
in
es
pop
test
cmp
mov
xchg
adc
dec
rol
jns
mov
cltd
imul
sub
iret
push
adc
cwtl
stos
fimull
pop
int
sahf
jp
inc
mov
add
stc
dec
pop
push
int3
enter
cwtl
adc
sti
popa
test
and
int
jecxz
popf
stc
adc
fmull
stos
mulb
cmp
out
and
jo
bound
cli
insl
stos
fidivrs
jecxz
add
shll
or
inc
pop
stos
lret
leave
aaa
loope
cmp
scas
rcrl
pop
xor
push
or
sub
and
fwait
mov
les
mov
imul
into
mov
leave
fwait
and
dec
jg
sbb
fidivs
test
pop
pop
cwtl
out
daa
cmp
lcall
inc
repz
mov
mov
test
loopne
lret
pop
jo
pop
pop
repnz
sbb
mov
nop
lret
shlb
jbe
push
lds
xor
xor
testb
nop
xor
add
rolb
push
xchg
pop
ss
lret
cmp
sbb
in
xorl
mov
subl
shr
loope
mov
sub
jl
test
inc
mov
mov
add
push
test
ja
inc
xchg
movsl
test
jle
fsubl
or
and
adc
pop
jg
jb
cmp
outsl
mov
jge
sub
pop
lret
aas
push
mov
andl
je
adc
inc
out
cmp
push
push
mov
mov
mov
add
add
and
sub
jns
pop
xchg
roll
fmul
jbe
pop
cmp
pop
dec
js
aas
adc
cmp
and
push
cmp
pop
jae
or
mov
mov
lcall
xchg
add
dec
out
pop
es
cmc
xchg
push
pusha
jmp
mov
int
imul
mov
popf
popa
inc
scas
add
and
cmpsb
and
outsl
jb
in
xor
stc
pop
repz
cs
or
pop
fmulp
inc
cld
icebp
scas
cmp
aam
les
in
enter
test
lods
xor
mov
xor
out
in
xor
jmp
lock
into
cwtl
in
lret
pop
arpl
mov
in
mov
popf
mov
cmp
andb
xchg
sbb
cmpsb
loope
sub
out
repz
stos
test
and
xor
sti
add
adc
and
pop
insl
maskmovq
idivl
js
insl
push
into
cmp
and
pop
mov
xchg
adc
lret
jle
cld
lods
ficomps
in
repnz
push
jns
jno
xchg
mov
xor
jl
outsl
stos
pop
sub
loope
mov
les
das
jns
pop
pop
mov
imul
fnstenv
lods
mov
fmull
hlt
push
mov
loope
bound
out
out
adcl
xchg
mov
sbb
into
shlb
fwait
push
jmp
leave
inc
inc
push
loopne
rorb
push
fs
sub
jl
and
sbb
xor
mov
inc
jbe
movsl
outsb
jb
sub
insb
push
add
test
popf
mov
mov
insb
mov
dec
cmp
loopne
gs
xor
movsl
add
sub
cmp
pushf
bound
ret
push
repz
rorb
cltd
and
pop
mov
add
xor
insl
aaa
repz
lods
pop
cmp
inc
in
into
mov
mov
sub
push
dec
enter
pop
movsb
pushf
pop
ficompl
test
and
dec
mov
jne
push
pop
xor
and
in
gs
sbb
jne
lret
pop
inc
jmp
pop
jl
ss
jnp
xchg
and
adc
cltd
adc
adc
stc
les
mov
call
inc
out
or
push
es
out
push
outsl
xor
and
sbb
jmp
and
gs
gs
aad
or
addb
push
fbld
sub
repnz
inc
jo
cwtl
or
sbb
mov
jnp
xchg
ss
stc
je
pushf
mov
cli
mov
fdivrl
decl
dec
inc
loopne
sarl
mov
and
shlb
pushf
outsb
movsb
mov
out
push
pusha
cwtl
or
jmp
or
data16
jne
into
sahf
mov
rol
jns
adc
or
xor
mov
push
add
hlt
dec
out
rcrl
adc
cmp
mov
rclb
sbb
aas
lods
movsb
arpl
lret
inc
lods
sbb
or
add
in
push
cmp
dec
ret
push
lret
aam
cltd
jmp
mov
pop
stos
xchg
out
inc
mov
lea
dec
cmp
add
cli
mov
cmp
test
sbb
aad
les
rorl
pop
sbb
test
adc
aaa
out
jmp
xchg
adc
fs
jmp
cwtl
lahf
xchg
add
imul
clc
adc
inc
outsl
adc
jg
sbb
sub
cmp
int
in
push
andl
fs
jns
aaa
mov
push
inc
in
insl
pushf
and
adc
push
sarl
ja
jmp
push
fs
cmp
mov
lcall
jns
mov
jns
ret
pop
adcl
xchg
dec
cwtl
pop
dec
in
and
sub
push
sub
sbb
ja
dec
lahf
push
je
arpl
insl
jp
test
pop
dec
scas
and
or
test
sbb
loope
xchg
push
lock
rcll
popa
sbb
addr16
xchg
cwtl
addb
add
movsb
sub
mov
and
mov
mov
sub
sbb
gs
addb
sbb
rolb
enter
loope
add
aam
cmc
xchg
mov
cltd
in
fldenv
cmp
xchg
into
int
cmp
sbb
pop
or
les
rclb
test
fwait
mov
sub
xlat
jno
mov
mov
orb
test
pop
jge
sti
repz
out
call
jo
mov
sbb
xchg
loope
je
iret
mov
out
hlt
push
aas
mov
fs
gs
xchg
pop
inc
jb
jnp
gs
pop
push
add
pop
repz
mov
mov
jb
sti
cs
sbb
adc
sbb
or
aaa
cmp
popa
push
jb
jns
adc
mov
fdivp
sub
dec
stc
rolb
or
fldenv
xchg
in
aad
inc
fcmovnb
clc
icebp
and
shlb
inc
jmp
fisubl
in
sti
fcompl
xor
push
call
call
sbb
and
mov
int3
iret
shrl
addb
or
xchg
fcompl
xlat
push
mov
fcmovne
sahf
jge
adc
in
mov
push
rep
pop
xor
or
adc
outsb
cltd
jg
repnz
lods
in
mov
ret
fwait
ret
inc
inc
mov
aas
pop
lods
sbb
ds
mov
add
cmp
shr
mov
int3
xchg
sbbl
mov
sahf
cld
loope
int3
movsl
mov
push
decl
pop
and
inc
imulb
dec
add
push
fidivs
movl
test
xchg
leave
jmp
and
inc
inc
inc
pop
jl
data16
sbb
dec
add
pop
pop
xchg
call
jecxz
inc
xchg
aaa
into
pop
enter
mov
mov
xor
repz
fldl
sti
rolb
std
ljmp
mov
jecxz
icebp
sbb
loope
cmp
pusha
xchg
xchg
jecxz
jo
popa
mov
adc
fnstsw
sub
and
mov
in
sub
sbb
aaa
fisttps
adc
mov
xchg
aad
pop
sarb
jg
push
mov
ret
cmp
inc
sub
dec
shll
adc
push
call
cwtl
jecxz
imul
mov
push
jg
jne
or
adc
faddl
push
fwait
pop
pop
jns
imul
xchg
cmc
inc
lods
pusha
cwtl
push
ja
inc
fists
mov
lods
push
cmp
mov
sbb
jb
jae
insb
sarl
and
mov
sub
cltd
lea
xor
or
mov
xchg
sbb
push
xchg
sarb
in
or
mov
negl
jbe
sub
sub
popa
mov
cmc
daa
and
mov
test
inc
dec
bound
cmp
fsubp
push
adc
or
int
sub
inc
hlt
jg
js
push
rcr
add
add
sbb
rorb
aas
pop
and
push
add
xchg
pop
leave
mov
cwtl
jns
cwtl
mov
subl
add
push
fistps
jp
xor
push
xchg
or
push
xchg
lds
outsl
rcrl
inc
jo
or
into
std
and
jns
sub
sub
stc
pop
or
movsb
pop
mov
push
dec
add
pop
aaa
add
shl
mov
js
sbb
push
ss
hlt
push
or
mov
inc
jbe
jnp
cmp
imul
add
shll
mov
sbb
adc
mov
and
popl
dec
inc
adc
int
stos
lods
ss
test
gs
pop
inc
and
sub
push
mov
dec
and
mov
jmp
je
jmp
test
scas
rclb
negl
mov
insb
mov
xchg
xor
xor
lcall
lea
sub
add
xor
xor
bound
mov
xor
outsl
pop
aas
lret
iret
jge
push
mov
in
movsl
in
movsb
push
fsubl
inc
and
jl
out
xor
int3
loope
mov
stos
out
lret
push
pop
nop
andb
daa
xor
jno
dec
aaa
push
outsl
pop
inc
jge
jge
xor
sub
push
arpl
jge
sub
push
dec
cmp
imul
jp
xor
insl
daa
push
js
push
pop
inc
dec
addr16
ja
dec
dec
push
push
and
addr16
das
das
pop
insl
pop
inc
pop
popa
xor
jnp
adc
dec
or
push
outsb
sub
insb
aas
and
es
dec
pop
bound
xor
pop
cmp
or
cs
push
dec
pop
cmp
dec
pop
cmp
inc
es
je
dec
insl
je
pop
sub
sub
pop
aaa
aaa
outsl
dec
dec
jp
inc
push
addr16
push
pop
cmp
pop
dec
xor
insl
xor
ja
sub
pop
bound
dec
push
add
xor
xor
das
sub
sub
and
push
sub
es
cmp
inc
push
jge
pop
inc
dec
dec
es
and
aaa
sub
bound
xor
pop
push
popa
inc
dec
inc
push
push
xor
jnp
cmpb
outsb
sub
sub
xor
jb
jne
daa
xor
pop
addb
dec
gs
and
cmp
jnp
jo
pop
ss
push
pop
cmp
jns
and
xor
add
loopne
stc
repnz
pop
cs
cmp
gs
dec
push
push
inc
dec
je
jnp
dec
and
push
pop
push
and
das
jp
inc
aaa
xor
xor
xor
aaa
inc
xor
aaa
inc
cmp
xor
aaa
inc
xor
xor
inc
cmp
inc
xor
cmp
inc
inc
xor
inc
inc
cmp
xor
xor
inc
inc
inc
inc
inc
inc
