add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
fiaddl
mov
es
dec
mov
or
mov
xchg
sbb
cs
push
into
push
es
push
sahf
inc
mov
data16
outsb
xor
push
idivb
out
vmread
or
fs
dec
scas
pop
outsb
mov
pushf
xchg
pop
lea
pop
rcrb
dec
mov
dec
push
jp
dec
mov
mov
outsl
insl
aad
mov
cmp
test
shr
push
fisttpll
adc
inc
scas
push
pop
mov
stos
ds
xchg
push
sbb
push
xchg
jg
in
sbb
ja
dec
jle
xchg
pop
jns
out
pop
nop
sub
xor
ljmp
cli
lods
out
jae
push
mov
mov
cmp
xorl
stc
xor
push
adc
lods
xchg
sahf
jge
sbb
je
sbb
push
mov
jns
stos
ds
int
xchg
into
dec
scas
imul
dec
push
shl
inc
push
push
out
mov
out
inc
sahf
pop
mov
jg
pop
sahf
out
jl
push
into
and
loopne
lcall
xchg
inc
xorb
sub
je
or
loop
xchg
fcmovne
or
xchg
dec
addl
push
mov
and
and
sub
sbb
and
repz
pop
mov
mov
xchg
pop
jg
xor
push
xchg
subb
inc
mov
data16
xchg
pop
xchg
jle
outsb
push
push
idivb
out
push
fiadds
into
ss
es
push
sahf
inc
mov
data16
xchg
pop
xchg
jle
outsb
push
push
idivb
out
push
faddp
cwtl
outsl
orl
stc
rorl
js
test
xor
xchg
xlat
jl
mov
in
call
out
xor
sub
icebp
jne
out
rclb
mov
sbb
fisubs
cmp
xchg
sbb
jmp
cmp
fsubrp
loop
sub
inc
test
test
mov
es
pop
jmp
fwait
and
mov
and
mov
ficoms
inc
xchg
push
xchg
mov
ficoml
arpl
xchg
incl
pusha
js
lods
insb
mov
fucomi
add
out
scas
mov
lods
ljmp
mov
dec
mov
mov
ret
shl
sbb
jecxz
push
lcall
test
sbb
pop
in
push
push
push
or
fldcw
sarb
outsb
adc
rcr
sbb
cmp
sbb
notb
aaa
lahf
xor
in
push
add
xchg
icebp
ljmp
xchg
xor
mov
mov
nop
sbb
lret
daa
inc
iret
divb
mov
add
ret
fwait
out
ljmp
mov
adc
and
push
hlt
jecxz
inc
and
mov
cmpsb
push
loopne
clc
inc
pusha
dec
lds
push
dec
sub
call
mov
xor
test
sbb
mov
inc
adcl
mov
sbb
mov
jnp
mov
in
cwtl
fs
ret
jne
xchg
push
out
mov
mov
or
mov
out
jne
int3
add
rcrb
nop
cmc
je
roll
into
test
aaa
fisttpl
xchg
mov
fs
or
dec
inc
fldt
sbb
pop
sarb
test
test
push
add
inc
jo
pop
aam
inc
sbbb
popa
shlb
or
add
test
cmc
decl
push
push
dec
adc
imul
bound
loopne
inc
pop
pop
aad
sub
loop
mov
ds
cmp
add
push
jno
and
mov
mov
gs
cli
ds
inc
das
int3
and
mov
mov
sahf
decb
cltd
andb
and
out
xor
mov
cli
xchg
iret
mov
adc
in
mov
aam
ds
fwait
mov
ljmp
fists
and
xor
add
and
int
push
rcr
or
daa
in
sbb
jb
enter
aam
xchg
nop
jno
xor
xchg
lds
jge,pt
or
and
xor
push
out
dec
leave
add
gs
test
mov
push
jecxz
xor
push
push
repz
inc
push
cmpsb
int
pop
dec
jle
les
or
xchg
sub
or
fcmovne
sti
sub
xlat
push
push
mov
test
jo
stos
lcall
push
and
xchg
xor
xchg
mov
movsb
and
add
push
pop
aaa
lret
xchg
je
popf
xchg
into
add
ret
lea
xchg
test
hlt
fimull
cwtl
inc
pop
nop
cld
jbe
shll
out
mov
les
sahf
cld
pop
push
fwait
mov
pop
psrlq
jbe
mov
pop
insl
jp
scas
xchg
bswap
mov
pushf
ret
sarl
pop
add
push
lods
and
fsub
cmp
jae
dec
push
mov
adc
test
mov
test
cmp
arpl
dec
cwtl
fisubrl
fisttps
enter
dec
mov
pop
es
mov
jo
cmc
or
and
cmc
xor
adc
and
icebp
cmp
ss
daa
jmp
inc
mov
mov
loope
jo
mov
rclb
rclb
aaa
sarl
lds
loope
mov
push
add
xchg
int3
punpckhwd
push
fcomps
or
sbb
divl
daa
mov
adc
lahf
push
sbb
inc
data16
sub
fidivrs
mov
rcrb
sbb
push
ret
ds
mov
shl
ja
mov
rcll
leave
and
adc
nop
sub
popa
insl
or
loop
sbb
iret
lods
sti
mov
jl
imul
stos
in
aam
cmc
sub
test
enter
test
xor
mov
jbe
rolb
in
out
push
adc
mov
lret
fnsave
lods
icebp
inc
dec
scas
pop
insb
mov
lea
andl
aam
fst
lods
mov
stc
stos
rorl
dec
sbb
fildl
jp
mov
shll
mov
cmp
setle
mov
xor
add
fwait
movsl
mov
lahf
fsubl
lea
nop
jl
pop
imul
lret
lock
sbb
jp
or
mov
xchg
repz
inc
or
add
cmp
or
push
xchg
jae
pop
adc
xor
mov
ret
test
scas
push
aas
mov
iret
aas
lods
fisttpll
clc
xchg
int3
mov
mov
push
loopne
push
cmp
or
xchg
addr16
xor
add
scas
inc
popf
leave
insl
sub
or
stos
pop
dec
fsubl
lds
push
push
les
sbb
movsl
or
push
test
inc
add
pop
xorl
cmc
fldt
repnz
loope
and
ror
cmc
xor
jge
das
div
mov
push
xchg
dec
mov
scas
sarb
and
int3
and
push
jp
xlat
das
jb
cmp
pop
mov
jmp
and
call
xor
pop
in
in
add
dec
sub
cmc
out
les
sbbl
imul
repnz
push
shr
mov
notb
dec
mov
in
cs
sbb
or
in
jae
lea
jnp
negb
fnstenv
or
mov
cwtl
jnp
and
add
cmc
jns
xor
nop
cmp
cmp
jge
fstpt
bnd
loop
mov
sub
mov
std
andl
out
jmp
loop
dec
stos
mov
xor
push
push
sbb
les
cmp
xor
cmc
cmp
mov
jb
sub
roll
mov
addr16
lock
xchg
mov
aam
xor
dec
test
stos
into
pop
adc
loope
int
movsl
shl
fiaddl
in
cmp
ret
icebp
cld
fwait
test
out
jge
jae
jae
jae
scas
iret
sbb
mov
push
out
ret
xor
and
stc
loope
inc
mov
in
aad
jmp
arpl
cmp
js
cmp
push
rclb
hlt
cltd
iret
jb
mov
lcall
arpl
or
icebp
mov
push
in
xchg
rcrl
jo
push
gs
xlat
popf
into
aad
ret
cmp
insl
cmpb
add
icebp
std
outsb
fsubl
mov
xchg
call
add
sbb
iret
jno
js
mov
add
sub
cmc
add
ljmp
jmp
jns
cmp
ja
enter
pop
cmp
lock
fstps
push
mov
inc
push
pushf
jmp
dec
sub
in
sahf
movsl
push
xor
sub
jecxz
shr
in
xor
lods
or
or
dec
or
or
inc
cmp
fwait
dec
loop
cltd
cmp
cmp
call
sub
cltd
sub
inc
pop
sbb
loop
icebp
fbstp
pop
mov
nop
pop
add
out
das
fistl
in
repz
xor
xchg
imul
rolb
jl
fiaddl
sbb
fisttps
gs
lds
xchg
jns
mov
popa
test
xlat
cmp
mov
or
add
push
inc
test
add
ss
xchg
dec
cmp
addb
pusha
mov
adc
into
stc
add
inc
addb
aas
xor
and
pop
inc
add
data16
subl
in
or
push
inc
cmc
inc
xor
push
lods
mov
mov
mov
loopne
cmpsb
cmpsl
mov
cmp
stos
jg
or
dec
sub
xor
sti
popa
pop
pusha
nop
fdivl
mov
stos
adc
sub
das
daa
push
dec
in
fwait
test
dec
std
fstpt
data16
call
insb
lea
sbb
adc
sub
std
xor
or
pop
repz
pop
clc
out
es
sbb
mov
aas
jne
mov
inc
xchg
jmp
pushf
fnstenv
xchg
or
xchg
pushf
mov
jnp
lods
mov
mov
shrl
cs
push
mov
int3
imul
dec
mov
jmp
fnstsw
lea
and
and
es
out
mov
sub
mov
bsr
cmp
cwtl
push
pop
dec
push
or
or
mov
sbb
jg
popf
xor
ljmp
push
lods
add
test
push
pop
rcrl
movsb
jecxz
pop
xchg
adc
or
cwtl
xchg
or
std
jb
inc
mov
ljmp
push
adcb
outsl
in
pop
xchg
dec
pusha
sub
and
xchg
ret
mov
lret
pusha
adc
rorb
negl
xchg
sbb
ficomps
or
xchg
jge
push
pop
sbb
push
out
xchg
jae
dec
ds
pop
ljmp
cld
jp
sbb
or
repnz
push
orl
psubusb
in
mov
pop
push
pusha
mov
cltd
movsl
into
fcmovnb
cmp
cwtl
pop
in
les
push
leave
lods
insb
adc
xchg
mov
insl
add
inc
out
lcall
xor
je
fsts
sbbl
movsb
adc
lcall
ret
das
cmp
adc
xchg
mov
ds
inc
jae
sbb
pushw
lcall
adc
jns
fdivr
mov
mov
adcb
ss
mov
sahf
in
gs
lahf
in
ljmp
popf
es
adc
pop
mov
mov
mov
xor
xor
lds
adc
add
push
cli
lods
and
popf
fwait
jle
setno
ficoml
int
push
pop
pusha
pop
cmpsl
call
pop
push
or
adc
mov
inc
inc
fwait
out
stos
sub
cmpsl
jmp
popa
pop
daa
data16
aaa
lock
push
push
pop
pop
dec
adc
jmp
xchg
ss
test
push
mov
js
push
push
sti
xor
jns
stos
sahf
push
subb
add
mov
jmp
test
dec
hlt
lret
push
inc
gs
jnp
roll
dec
dec
mov
inc
xor
outsl
cmpsb
lcall
sub
aas
mov
jp
and
pop
xchg
jnp
mov
and
lahf
push
aaa
adc
xlat
cmp
gs
mull
inc
out
push
mov
fists
mov
xchg
mov
std
or
rolb
mov
xchg
lcall
jno
dec
and
jecxz
in
ja
sarb
lods
push
and
sahf
add
add
cmc
xchg
inc
jg
push
xor
mov
sub
mov
shll
loop
jno
in
xor
add
lods
inc
outsl
daa
leave
sub
shl
mov
mov
sub
stc
sub
sub
jo
inc
lret
add
sbbb
std
je
aad
mov
cmp
mov
jns
inc
jno
shlb
cmp
mov
repnz
add
int
or
mov
dec
mov
ljmp
mov
cmp
push
cmpsb
xlat
out
lds
das
ficomps
jecxz
cld
mov
out
inc
movsb
dec
sub
add
aas
sbb
loopne
call
pop
stos
adc
out
nop
test
sti
int
cmp
cmpsb
mov
orl
xchg
sbb
cvtps2pd
cmp
jo
gs
push
xor
and
push
icebp
mov
mov
js
imul
in
add
cmp
out
mov
test
es
fisubrs
loop
inc
adc
pop
sti
jnp
sbb
fists
sbb
inc
fcos
les
stos
jge
xchg
and
data16
inc
cmp
popf
jl
add
fnstenv
or
dec
les
inc
nop
lahf
pop
mov
mov
jmp
jb
idivb
dec
loopne
insb
jae
fdivrl
pushf
xchg
mov
mull
pop
xor
add
jns
cmp
std
jg
ds
mov
fs
mov
inc
fstl
jp
sub
rorl
aas
into
or
inc
cmpsb
test
pop
or
pop
out
jb
jmp
fs
mov
rol
push
jmp
sub
mov
in
inc
mov
and
fstpl
jecxz
das
sbb
jne
lds
jnp
adc
fcompl
or
sub
roll
dec
test
jno
repz
add
test
sahf
cmpsb
mov
insl
fisttpl
imul
xchg
sbb
mov
jl
mov
int
sti
fwait
push
dec
or
jecxz
cmp
ljmp
push
dec
mov
iret
xor
pushf
push
cmpsb
or
insl
sahf
push
jg
mov
pop
mov
xchg
add
adc
je
xchg
or
rcl
loop
insl
iret
adc
outsl
sbb
ret
vaddsd
ljmp
pop
pushf
insl
outsb
fcomps
jg
sbb
popf
outsb
pop
jl
push
pop
repz
dec
ficoml
mov
sbb
loope
fwait
mov
xor
clc
pop
into
pop
lcall
loopne
add
push
jno
mov
xor
fidivs
dec
sbb
rorl
xchg
pusha
mov
sbb
hlt
mov
in
in
leave
test
push
js
iret
frstor
push
ret
sub
pop
dec
pusha
mov
or
lds
mov
in
mov
out
pop
adc
mov
out
cmpsb
xor
jae
sub
les
mov
hlt
mov
in
les
add
push
lea
jns
sub
inc
out
pop
sbb
mov
adc
mov
mov
jns
pop
int3
jg
std
repnz
in
mov
ljmp
or
or
and
mov
ljmp
push
xor
mov
addb
jmp
fnstenv
lahf
jmp
pop
sahf
jle
leave
imul
jle
jp
lret
aaa
insl
inc
mov
mov
cs
push
xchg
je
add
mov
and
jo
add
or
lret
les
inc
or
dec
sbb
lods
cltd
fcompl
sub
xchg
es
ds
mov
popa
lcall
xchg
push
gs
mov
or
test
outsb
sbb
aas
loope
jnp
mov
clc
outsl
push
imul
xor
mov
outsl
or
dec
lock
test
testb
and
xor
push
loopne
lahf
mul
shll
or
movsl
jae
shll
sub
jmp
stos
cmp
pop
pop
int3
sbb
jg
dec
mov
mov
jl
mov
jno
ss
aam
test
jo
jmp
test
lahf
and
push
adc
dec
sbbl
popf
sbbb
divl
fsubp
addr16
xchg
adc
mov
add
insb
jecxz
into
ja
push
and
cwtl
inc
dec
and
pop
add
shll
xor
cmpb
insl
popf
vmovhps
dec
mov
cwtd
cli
mov
out
jne
test
and
sbb
lds
xor
testb
xchg
dec
dec
pop
insl
lret
or
sahf
inc
mov
mov
pop
cmp
lret
mov
sbb
ficompl
xor
loop
ror
pop
mov
ret
leave
stos
hlt
inc
into
or
hlt
and
pop
out
les
cli
movsb
xor
add
cli
sbb
ficoml
jle
push
cmc
ret
cmp
jns
test
adc
xor
mov
xlat
add
in
xlat
mov
adc
fistpll
dec
jns
in
sbbl
jmp
xorl
insl
and
xchg
and
sbb
inc
dec
jb
or
add
mov
data16
jo
scas
shrl
dec
std
cmpsb
aad
sub
lods
aaa
cmp
push
pop
nop
adc
outsb
js
icebp
push
cmp
jae
inc
jbe
out
mov
cs
aad
int
outsb
mov
add
ficoms
dec
mov
xchg
dec
dec
shl
pop
inc
inc
test
popf
icebp
jb
pop
dec
or
nop
in
dec
mov
mov
sub
les
mov
cmpsb
ret
call
cmp
xor
adc
push
xchg
push
or
sbb
and
pop
xchg
sbb
shll
and
push
mov
push
dec
imul
rorb
jecxz
sbb
mov
daa
cmp
xchg
sti
cmpl
mov
mov
jb
sar
sub
jge
sub
dec
sahf
push
mov
inc
outsl
adc
xchg
sbb
and
dec
pop
andb
xchg
daa
loopne
sbb
inc
jo
data16
inc
cmp
js
push
push
mov
into
mov
loopne
pop
out
pop
es
fucomip
int3
pop
and
lret
mov
int
clc
jge
adcb
pusha
cmp
rolb
lods
xor
fisttps
push
xchg
xor
add
adc
mov
sbb
insb
sbb
xchg
push
loope
insb
call
add
sub
cmp
push
sbb
testb
push
or
in
fmul
and
xor
fildl
jmp
push
mov
sub
mov
iret
mov
add
movsb
ret
add
pop
mov
and
push
inc
icebp
insl
js
dec
dec
jp
xchg
or
pop
pop
cwtl
rclb
mov
cmp
add
mov
add
mov
outsl
push
mov
lods
das
lret
cmpsl
lods
dec
bound
rclb
stc
mov
adcl
ret
adc
pop
sub
cmp
call
sbb
cmc
cli
sub
inc
mov
das
enter
mov
js
rclb
jns
fwait
sarb
pusha
pop
popa
hlt
xchg
call
mov
pop
push
arpl
repz
arpl
in
pop
pop
push
fwait
push
clc
adc
inc
stos
xor
iret
pop
sbb
mulb
fcomi
pop
fdivrs
mov
ds
xchg
cmpsl
mov
jbe
and
push
movsb
shlb
out
adc
imul
adc
iret
jne
clc
mov
mov
xor
mov
sar
bound
ds
sti
insl
inc
mov
popf
stos
xor
popa
inc
addr16
push
push
in
fcmovne
mov
imul
data16
sub
cmp
xor
adc
xor
push
call
push
movb
loope
int3
xchg
mov
mov
or
inc
add
in
imul
outsb
jmp
mov
push
cmp
lea
xor
out
sti
aaa
call
inc
outsl
scas
push
jp
and
fstl
cmp
adc
nopl
hlt
cmp
pop
xchg
jecxz
and
cmpl
jnp
repnz
js
pop
dec
push
movb
pusha
loopne
sbb
rcll
bound
lahf
mov
mov
adcb
push
jg
push
stos
pop
fmul
xchg
lods
fs
stos
xchg
lahf
add
sub
clc
call
lods
pop
jmp
add
jns
test
push
call
adc
pop
lea
inc
shrb
jbe
mov
mov
cmp
dec
movsl
xchg
mov
sub
pop
xchg
cmp
jno
jle
ret
pop
int
call
jns
nop
dec
fadds
mov
lea
shll
dec
cmp
xor
sti
andb
cmp
push
inc
and
mov
loope
xchg
jmp
mov
mov
sub
sub
outsl
stos
sahf
jl
push
mov
cli
adc
bound
jae
push
lods
cmp
mov
ret
lock
sub
xchg
sarb
into
or
xchg
xchg
gs
mov
xchg
andl
rcrl
sti
repnz
sbb
fildl
aam
sbb
idivl
test
push
xchg
pop
jae
xchg
adc
cmc
xchg
imul
into
aas
xlat
or
xor
es
out
cmp
je
addr16
jne
mov
rorl
std
add
push
outsl
mov
out
or
mov
mov
cmp
sub
cmpsl
or
mov
aas
or
mov
push
adc
stc
xchg
cmp
jg
fstp
mov
add
xor
jge
mov
nop
into
dec
sti
es
push
sahf
inc
mov
data16
xchg
pop
xchg
jle
outsb
push
push
idivb
out
push
fiadds
into
ss
es
push
sahf
inc
mov
data16
xchg
pop
xchg
jle
outsb
push
push
idivb
out
push
fiaddl
shlb
es
data16
xchg
pop
xchg
jle
addr16
sbb
push
divb
xlat
lret
xor
add
es
push
sahf
inc
mov
ds
imul
dec
jbe
inc
sbb
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
js
popf
cltd
adc
enter
xchg
stc
in
movsl
adc
dec
in
aad
lds
mov
mov
push
jmp
movsl
sbb
sub
pop
aad
lds
mov
mov
jns
mov
cmp
dec
in
aad
mov
push
je
add
fdivr
jae
ss
ljmp
lcall
sub
xchg
hlt
mov
sub
fstps
jae
sbb
push
outsb
sub
pop
je
push
rorl
gs
xor
jle
test
and
jge
cmc
or
push
jnp
or
lcall
mov
lcall
cmc
mul
test
jp
js
out
rcrb
mov
fsubs
push
lds
mov
cmc
or
xchg
push
sbb
dec
test
mov
mov
and
mov
xchg
jo
or
xchg
pop
test
jo
in
nop
imul
cltd
adc
leave
and
push
jmp
aaa
sbb
fwait
cmp
imul
clc
sbb
and
aam
in
lds
dec
pushf
cmp
sbbb
into
ficompl
add
cmp
in
lock
jmp
iret
mov
enter
int3
inc
shll
fsts
inc
stc
mov
movsl
sbb
dec
in
aad
lds
mov
mov
push
jmp
movsl
sbb
dec
in
aad
lds
mov
mov
pop
jle
cmp
jbe
aad
or
shrl
in
xor
loopne
xor
outsl
dec
rol
sar
jno
push
mov
inc
and
pop
push
push
xchg
mov
adc
mov
and
jle
dec
movsl
dec
gs
xchg
inc
fistpl
push
inc
add
pop
cli
and
mov
stos
les
fucomp
inc
lods
ljmp
test
rcll
mov
movsl
mov
mov
xor
cmc
pushl
arpl
pop
gs
lock
sub
xchg
clc
lcall
lods
push
dec
xor
jb
lods
mov
arpl
pusha
bnd
clc
mov
andl
iret
dec
xchg
ret
ss
dec
dec
fidivrs
xchg
sbb
gs
notb
mov
add
mov
cltd
or
sub
lahf
stos
test
cmpl
movsl
outsb
add
mov
dec
sub
ljmp
pop
or
sarl
jecxz
cs
mov
movb
stos
or
push
adc
jg
xchg
sbb
push
xor
js
into
push
push
jmp
into
xchg
pop
jp
outsl
adc
int
adc
ds
cltd
mov
sbb
aad
adcl
fildll
gs
stc
popa
jno
arpl
lods
daa
fs
in
data16
xor
jnp
ret
inc
js
aaa
mov
pop
inc
mov
ds
mov
shrl
nop
data16
test
fwait
pop
insb
xor
jle
inc
mov
push
adc
out
add
roll
pop
enter
cmp
pop
test
in
fmuls
test
mov
push
xor
push
aas
pop
jnp
xchg
jns
roll
mov
leave
imul
xchg
xor
sti
js
inc
cmp
movsl
scas
jg
into
pmaxub
lods
add
lods
jb
sti
mov
and
shr
fwait
xor
adc
add
mov
push
mov
inc
or
xchg
mov
ja
inc
imul
push
outsb
push
cld
fucomp
cltd
es
cmpsb
out
xchg
adc
popa
inc
sub
rolb
mov
outsb
lods
repnz
dec
mov
insb
dec
jmp
jecxz
cmp
jb
xchg
test
xchg
inc
pusha
in
push
ja
popf
lock
mov
jle
es
sti
pop
xor
mov
cltd
je
and
popa
fidivrs
outsb
lar
pop
test
cmp
jb
mov
or
adc
push
sub
icebp
jge
inc
imulb
fdivs
leave
cltd
push
rol
iret
lcall
mov
mov
or
or
cld
pop
cmp
cmpsl
or
dec
cli
or
out
jmp
inc
add
repnz
mov
inc
push
cld
cwtl
gs
mov
test
mov
test
mov
pusha
xor
or
shll
add
cmpsb
xchg
fildl
jmp
stos
adc
ljmp
std
and
sub
jo
mov
in
mov
adc
sub
xchg
imul
jb
aaa
pusha
mov
cmp
rcl
push
sub
in
lock
lret
jae
mov
push
in
orl
mov
jns
pusha
out
cli
mov
cmp
cmpl
leave
mov
adc
dec
movsl
imul
clc
cli
mov
jle
inc
push
or
cmc
mov
jle
ja
shrl
cmp
mov
sub
inc
mov
cmp
jb
pop
inc
les
scas
sub
jo
sahf
scas
push
and
inc
inc
ffreep
icebp
fs
call
out
insb
int
mov
dec
ret
rorl
pop
xchg
xchg
inc
add
shlb
mov
fadds
jne
pusha
hlt
aas
jns
das
rol
jecxz
and
dec
int3
push
mov
andl
inc
ss
je
lods
sahf
jne
cld
jbe
arpl
js
fisttpl
into
mov
xchg
mov
lahf
out
fadd
notl
or
scas
lahf
inc
xchg
pushl
mov
lea
clc
pop
jnp
xor
xchg
xor
mov
push
pop
mov
sbb
mov
imul
xor
arpl
mov
hlt
jmp
dec
outsl
je
add
push
fwait
andb
jecxz
sahf
decl
mov
imul
inc
movlps
xchg
xchg
aam
jae
ds
mov
dec
mov
inc
mov
jbe
fildl
pop
push
push
cmc
or
push
shrb
and
push
jmp
sbb
out
mov
dec
lahf
mov
sbb
repz
mov
into
pop
lds
xor
jnp
xchg
mov
xorb
push
movsl
movsl
jl
push
bound
out
or
test
fstpl
fwait
pusha
pop
mov
arpl
stc
ret
lods
or
dec
jge
pushf
jecxz
push
arpl
adc
data16
jg
out
fs
mov
inc
ja
ljmp
rcl
cmovge
sub
cs
push
mov
dec
sbb
inc
jbe
gs
sbb
sti
lcall
fdivl
jmp
push
dec
in
push
lahf
loop
adc
adc
sbb
lds
jl
rorb
or
into
lea
add
pop
rolb
imul
mov
adc
xchg
mov
xchg
fisubl
xchg
inc
lret
imul
mov
stc
outsb
dec
scas
fidivs
and
fnstcw
jmp
xor
leave
mov
sbb
fdivrl
pushf
lods
pop
call
and
aaa
mov
inc
stos
inc
and
out
pushf
xlat
sub
incb
mov
xchg
and
sub
and
xor
dec
std
inc
push
leave
inc
adc
push
loop
loop
add
fidivrl
jnp
sti
sub
sub
insb
mov
adcb
sub
loope
push
mov
cmc
mov
int3
mov
or
jo
mov
imul
jg
pop
addb
sarl
xor
jne
cmpsb
ljmp
inc
hlt
mov
jne
in
lea
xchg
jmp
aaa
jbe
lock
mov
push
xor
mov
push
daa
and
cmp
aaa
ja
or
push
fisubl
xor
inc
or
cmpsb
nop
out
xchg
and
mov
sub
mov
outsl
lock
out
gs
in
push
xchg
xchg
inc
mov
aam
fwait
scas
aad
inc
add
adc
or
xor
movsl
aaa
mov
ljmp
sbb
enter
mov
jno
add
ficompl
inc
pusha
mov
mov
pop
ss
adc
fldcw
lock
outsl
popf
and
sbb
jb
pushf
shll
inc
sbb
jo
repz
aam
mov
sub
jbe
cmp
nop
ret
sti
adc
insl
inc
or
pop
into
lds
sbb
push
das
imul
movsl
push
sub
sub
loopne
lods
inc
addr16
lret
pop
lods
filds
daa
cmp
and
cli
rorl
ret
lret
in
in
ret
mov
inc
fidivs
repz
mov
add
mov
add
cmp
push
test
inc
pop
inc
inc
imul
scas
mov
mov
fidivs
cld
shll
sub
xor
adc
mov
or
pop
adc
sub
mov
test
std
mov
ja
pop
popa
pop
test
rcrl
xchg
out
lods
pop
mov
mov
mov
fidivs
pop
adc
cld
push
mov
lret
lcall
das
mov
inc
dec
mov
push
or
movsb
sahf
shlb
or
dec
aam
pop
in
mov
test
inc
xor
pusha
dec
lods
sbb
std
mov
mov
out
xchg
fmul
and
add
lods
in
fdivrl
or
xor
push
lock
hlt
mov
out
pop
sub
push
add
xchg
dec
or
scas
jmp
and
add
inc
adc
movsl
inc
jbe
inc
sti
sti
jne
fisubrs
adc
std
jns
iret
xchg
xor
add
sbb
scas
push
sbb
mov
scas
mov
xchg
or
sub
sub
fnstenv
lock
jns
fistps
jp
cli
stos
nop
and
loopne
fidivrl
mov
push
in
cmp
ret
rorb
add
repnz
add
and
add
or
mov
xlat
xor
mov
fists
pushf
das
mov
and
repz
xlat
mov
xchg
mov
mov
inc
and
iret
ret
add
out
add
add
sarb
or
cmp
mov
add
cld
cmp
jns
push
les
test
push
sub
or
pop
adc
push
dec
jno
and
xchg
fistpl
insl
pop
cmc
mov
jge
pop
pop
sbb
cmp
jns
scas
xor
dec
lea
mov
fstpl
mov
xor
mov
push
cltd
jge
sub
std
std
sbb
push
fwait
ror
jns
das
pushf
lea
mov
fdiv
cmc
adc
cvtpi2ps
sarl
shll
into
push
jle
jl
cmp
lock
add
add
push
sahf
insl
mov
pop
pop
aam
lock
mov
lods
or
cmp
pop
rorl
iret
mov
sub
lret
pushf
mov
mov
incl
jl
mov
enter
push
clc
jmp
and
icebp
sub
inc
mov
pop
ret
adc
mov
sub
sti
movsb
loope
xchg
mov
js
mov
xchg
sbb
or
xchg
das
mov
jmp
cmp
fldt
sub
jb
cmp
ret
scas
das
cmp
mov
and
xchg
cld
hlt
push
ds
scas
xchg
lret
lahf
and
push
lcall
pop
or
add
mov
mov
or
push
pop
and
popa
sbb
dec
stc
sub
sub
decb
jbe
pop
sub
and
repz
popf
lock
movsl
movl
repnz
addl
sbb
repz
sub
push
xchg
js
cmpsl
sti
mov
mov
lret
mov
pushl
cmp
flds
cs
divl
in
es
cmc
jge
jmp
icebp
push
rcl
inc
jo
inc
xor
adcb
mov
nop
jl
dec
insl
push
xchg
mov
das
jmp
leave
es
pop
aam
sub
mov
popf
test
mov
aas
popa
adc
int
xchg
pusha
enter
push
pusha
rorl
jmp
int3
outsb
xchg
out
daa
sti
mov
aaa
inc
add
sub
pop
xchg
jmp
sbb
inc
cmp
and
pop
jg
inc
xchg
push
inc
rcrb
lods
rol
push
mov
push
lret
imul
les
mov
cli
sbb
stos
dec
push
repnz
nop
fcomps
sbb
rcl
sub
mov
loope
outsb
dec
cmp
push
sbbb
js
push
lret
cmp
test
inc
test
sbb
sbb
pop
xor
outsl
notl
into
mov
movsb
test
mov
fistps
cmp
sbb
mov
jp
enter
sub
ror
mov
popf
cmpsl
fistl
in
mov
pop
clc
push
aad
pop
push
xchg
jns
data16
mov
call
mov
push
add
inc
fs
sub
pop
jae
sbb
or
xchg
cmc
out
adc
ret
inc
pop
jg
cltd
xchg
lea
sbb
jmp
jb
pop
push
outsb
shll
cltd
imul
mov
pop
push
icebp
fwait
sbb
xchg
cwtl
jne
xchg
popa
sbb
jmp
sahf
push
sbb
repnz
adc
call
dec
push
and
jg
mov
push
dec
lret
sub
sub
xchg
cmp
jne
jno
and
cmpsl
xchg
adc
paddsw
or
xor
and
jmp
ja
test
loopne
aad
mov
sar
pop
aaa
sbb
push
mov
sbb
out
nop
jmp
fcmovb
call
xor
filds
cli
jns
mov
inc
subb
mov
xor
fsubs
xor
add
cltd
clc
mov
cmp
fldcw
ret
mov
add
jnp
movsl
repnz
mov
jae
cld
adc
lds
test
cmp
jae
push
movsb
jae
cwtl
inc
adc
outsb
push
cmp
in
pop
mov
push
jns
insb
or
in
mov
and
jnp
xchg
icebp
sbb
out
mov
pop
aaa
nop
pop
cs
stos
lds
xchg
out
rclb
adc
mov
cmp
xor
mov
loopne
adcb
push
mov
inc
cli
mov
and
xor
fistps
push
jle
mulb
arpl
jbe
jnp
mov
das
sub
les
popf
push
mov
sbb
xchg
add
outsl
mov
pusha
xchg
outsb
aad
pop
xor
bound
add
adcb
pop
add
and
mov
or
fstl
pop
sahf
mov
loope
ret
or
xchg
mov
stos
cli
xor
cli
jns
and
testl
xor
fimull
scas
aas
jecxz
aaa
jmp
and
inc
pop
jle
insl
lds
hlt
ss
rcrl
mov
cld
decb
add
pop
jne
xchg
das
jmp
out
mov
in
pop
iret
cmp
xchg
push
in
pop
mov
mov
mov
pop
jo
in
pcmpeqd
push
xor
mov
fstl
jns
pop
jbe
cmc
xor
mov
into
stos
loope
fldl
xor
iret
roll
or
das
cmp
jl
cld
xor
call
jo
movsb
cli
adc
mov
and
lcall
xor
test
shl
push
inc
jmp
mov
mov
sbb
push
push
push
test
adc
loop
insb
sahf
test
cmpsb
dec
sbb
pop
xchg
mov
mov
cmp
push
jmp
mov
cmp
sub
test
out
push
out
aaa
outsb
mov
lods
or
adc
cmpsl
xchg
push
and
sub
mov
popa
mov
ret
aam
je
adc
lock
push
cmp
sub
cli
shlb
test
dec
xchg
sub
rclb
pop
pop
xchg
add
fdivrs
test
outsl
add
addr16
mov
dec
sub
mov
add
roll
mov
fisubrs
or
lock
sub
pusha
in
dec
pusha
jg
jg
sahf
mov
mov
pushf
push
push
pop
es
xchg
es
push
inc
div
sahf
mov
or
mov
push
jnp
rcrb
das
aaa
mov
cmp
jecxz
mov
mov
add
and
mov
jecxz
aaa
loope
lret
sti
mov
xchg
loope
dec
addb
cmc
cmp
cwtl
lea
lods
fldenv
das
xchg
daa
or
inc
stos
sub
scas
or
jno
jae
out
movsl
int
jge
mov
lea
imul
and
xlat
imul
hlt
pop
mov
adc
fidivrl
dec
dec
add
lock
xor
inc
adc
out
sti
movsl
jb
xor
add
xlat
cmp
xchg
jecxz
jb
add
idivb
ja
add
pop
sub
push
pop
int3
mov
pusha
aad
dec
fnclex
movsb
sub
test
in
ret
mov
loop
and
aam
xchg
stos
push
lea
hlt
loope
dec
sbbb
loopne
xchg
ret
xchg
sub
cmp
sbb
mov
in
xchg
aaa
and
xor
sbb
push
cmp
xor
push
ss
es
push
inc
sbb
inc
adc
out
cli
mov
inc
inc
mov
fstps
sub
cmp
add
cmp
push
push
movsb
or
dec
mov
lods
inc
lret
sub
pop
xchg
test
mov
xchg
mov
push
sti
jbe
decb
imul
push
cmp
lcall
daa
js
or
inc
jp
repnz
sbb
inc
dec
xor
and
xor
ljmp
jl
cmpsb
inc
cli
jl
jae
sub
scas
inc
test
sbb
js
lock
stos
lods
xchg
test
dec
mov
cmp
jnp
sbb
push
shll
adc
xchg
cmp
cmpsl
xor
fnstenv
loop
adc
ljmp
mov
loopne
xor
jae
mov
loop
lea
fs
adc
sti
jg
push
sub
sub
dec
sub
das
jg
bswap
inc
aas
out
xchg
add
dec
lods
mov
lret
cmpl
xor
lahf
adc
push
ret
movsl
and
sub
in
sub
mov
pop
add
lea
add
jl
test
or
mov
jge
in
or
cmp
mov
inc
in
or
inc
push
inc
es
push
add
lods
aad
mov
fwait
xchg
inc
shr
adc
cmp
arpl
lret
mov
cld
andl
and
xor
dec
add
fwait
jge
xchg
das
lea
or
mov
movsb
cmp
movsb
sub
es
sub
adc
mov
into
stos
inc
dec
je
fadd
push
xor
xchg
cltd
cltd
xor
jle
leave
xor
sar
ret
mov
loop
jmp
sbb
pop
add
push
xor
add
lea
imul
jg
dec
add
std
js
dec
mov
jl
sbb
inc
nop
jge
outsb
inc
cmp
pop
call
fadd
ds
into
dec
add
shll
pop
repnz
outsb
js
push
lret
adc
push
mov
push
push
add
dec
mov
fsubrs
xchg
add
divb
out
sbb
clc
jno
inc
and
icebp
mov
stos
push
ja
sbb
mov
imul
sahf
leave
sbb
repnz
stos
add
fsubl
pop
adc
jg
rcrb
imull
pop
pop
pop
int3
rolb
pusha
aam
in
popa
or
arpl
nop
imul
cmp
add
test
pop
mov
mov
stc
inc
sub
dec
jae
repnz
out
add
cmp
nop
add
nop
shrl
add
and
push
aam
ljmp
movsb
push
jecxz
fsub
cmp
lahf
pop
and
pop
adc
mov
xchg
ja
xchg
popf
clc
dec
sub
in
mov
ret
in
out
mov
sub
popa
mov
jge
mov
jns
dec
push
aaa
push
out
movsl
popf
outsb
repnz
push
or
mov
xor
push
sub
push
ror
xchg
jle
outsb
das
push
iret
imul
or
cltd
dec
cmp
loop
loopne
pushf
fnstenv
test
dec
pop
cmp
pushf
lret
repz
mov
xor
int
fistpl
jle
jnp
mov
mov
cmp
nop
or
ja
outsb
cmp
outsl
cmp
sub
sahf
in
es
ljmp
jnp
xchg
loop
call
lock
sub
inc
sarb
test
dec
or
inc
fsub
hlt
cmpsb
xlat
mov
std
lods
out
pushf
dec
mov
mov
scas
test
lahf
aam
out
pop
adc
push
jmp
add
xor
ds
js
add
jge
jg
push
ds
add
mov
fsubp
sub
testl
dec
pop
sbb
stos
out
xor
je
loopne
cmp
sbb
mov
in
test
loopne
adc
sbb
cmc
or
test
pop
and
testl
fld
push
int3
jno
push
gs
push
mov
movsl
push
int3
mov
jo
mov
fbstp
xor
push
sbb
jl
and
lahf
popf
dec
in
repz
cmp
popf
iret
push
push
les
jg
fsubr
aam
jnp
xchg
xor
jno
jle
mov
pop
aas
test
add
je
mov
mov
call
cvtdq2ps
mov
jecxz
mov
xor
mov
xchg
jp
jnp
por
pop
popfw
int
add
pop
ljmp
mov
shlb
inc
jne
cmovle
shll
popa
addr16
lds
adc
pop
in
jl
pop
enter
fcmove
cwtl
dec
jne
xor
lahf
out
lods
mov
rol
das
mov
lcall
jns
sub
lahf
out
into
add
pop
mov
push
mov
push
std
fsubrs
mov
xchg
pop
push
jecxz
pop
outsl
fnstcw
mov
lahf
lea
iret
ret
pop
lods
in
sub
outsb
hlt
fnsave
jp
sub
ror
stc
call
mov
neg
push
xchg
or
inc
scas
cltd
in
sbb
push
jmp
movsl
sbb
dec
in
aad
lds
mov
mov
push
jmp
movsl
sbb
dec
in
aad
lds
mov
cltd
add
leave
popa
fsts
inc
stc
mov
movsl
sbb
cld
pop
shrl
jns
mov
cltd
popf
test
jne
push
jmp
pop
mov
sub
cmpsb
sub
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
jae
arpl
inc
add
dec
dec
inc
pop
add
repz
in
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
repz
cwtl
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
int
mov
in
inc
loop
rolb
pop
aaa
push
scas
dec
cmc
sbb
cmpsl
adc
loopne
out
push
mov
shrl
jnp
sbb
dec
jnp
and
lret
cwtl
fsubl
pop
lret
dec
repnz
ret
mov
lods
xchg
inc
jg
data16
mov
movsb
hlt
das
push
fs
or
mov
adc
xchg
add
adc
orb
pop
bound
push
std
push
or
or
sar
push
push
int3
ror
popa
sub
hlt
rep
insl
mov
lahf
push
test
xor
fsubrl
mov
loop
das
jne
add
out
xchg
test
fwait
sub
ss
clc
frstor
rcr
mov
pushf
or
repnz
mov
push
lods
xchg
adcl
pop
arpl
inc
or
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
mov
adc
push
bound
jge
lea
nop
lods
jmp
adc
out
xor
sub
sbb
push
jo
sub
cmp
test
test
int3
fsubp
mov
pop
add
pop
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
jbe
mov
loop
pop
mov
ret
inc
scas
sub
jbe
repz
pushf
popa
stc
add
dec
mov
enter
sarb
dec
repnz
test
ljmp
insl
pop
xchg
rcll
sahf
jae
inc
dec
and
sub
aam
cmpl
mov
adc
or
xchg
int
les
sub
mov
orl
jo
cmpsl
lods
mov
mov
mov
popf
lret
popf
jo
out
js
pop
shr
mov
test
lods
out
inc
iret
bound
lea
push
js
mov
dec
adc
push
jp
loop
enter
inc
pop
lock
sahf
loopne
ss
nop
lods
fisttps
test
pop
stc
mov
out
or
call
mov
jecxz
lock
cmp
int3
iret
sbb
lods
hlt
mov
xorl
cwtl
jnp
mov
out
push
mov
ret
cmp
arpl
rclb
adc
mov
ja
cmp
std
aam
decb
cmp
inc
popf
cmp
inc
lcall
pop
imul
pushf
aaa
je
pop
sub
and
shrl
cmpsb
in
push
mov
pop
gs
jmp
or
mov
lret
bound
or
std
xchg
or
push
xor
and
xchg
mov
mov
or
mov
out
mov
lret
lea
cmp
loope
jl
jg
sarl
sbb
pop
fwait
jno
lret
stc
xor
jno
jle
mov
sbb
sub
lahf
cltd
jmp
push
lods
add
frstor
stc
cmpl
push
cmp
ss
setg
inc
xor
jge
jle
js
sub
inc
js
push
in
mov
cmpsl
pop
int
push
or
push
push
sub
test
inc
cmc
push
sbb
or
fs
or
cwtl
test
mov
xchg
sbb
or
push
push
mov
jno
push
lret
or
addr16
jmp
int
arpl
push
stos
jge,pn
jg
pop
loope
push
int
pusha
fstps
enter
mov
mov
pop
or
ror
fs
repz
add
pop
ret
inc
ds
cmp
mov
pushl
xor
add
pop
fs
inc
sti
add
fisttps
addr16
sbb
adc
aas
aaa
push
orb
adc
push
push
xchg
mov
pop
dec
adc
sub
test
mov
sub
sub
popl
cli
popa
mov
js
pop
stc
xor
nop
or
fmuls
xor
clc
add
jmp
mov
mov
or
adc
jecxz
or
cmc
mov
out
and
and
pop
movsb
pop
mov
shl
testl
sbb
jp
mov
and
cmpsb
fsubl
jns
fwait
mov
shlb
fwait
cmp
xor
insl
ja
gs
pop
xchg
lods
cmp
imul
popf
pusha
pop
add
mov
jnp
sbb
clc
push
stos
mov
test
ljmp
mov
filds
mov
xlat
mov
add
mov
mov
mov
loope
inc
xchg
add
std
outsb
aas
and
fisubrs
daa
xor
aam
add
ja
repz
cmpsb
sbb
enter
test
jg
add
push
and
fldl
inc
and
sbb
test
mov
fmuls
and
pop
ss
adc
out
data16
pop
movsl
sub
subb
movsb
flds
enter
or
cwtl
or
or
xor
sub
xchg
mov
add
dec
mov
jne
in
dec
adc
out
outsl
xchg
test
sub
cs
mov
jg
mov
test
rep
or
in
mov
and
dec
xor
sbb
aaa
shl
mov
sub
sbb
aas
test
mov
mov
xchg
std
dec
pop
stos
add
dec
add
in
in
cmp
dec
push
lea
bound
cmp
add
or
ficompl
cmp
sub
jle
mov
mov
mov
fnop
mov
cld
push
jl
mov
sbb
push
in
sub
test
push
push
mov
test
jbe
pop
popa
ret
call
adc
jg
rcrl
scas
cli
mov
in
lcall
xchg
sub
and
nop
or
mov
sahf
and
jp
xor
xor
mov
push
je
jp
test
jb
out
out
mov
out
scas
adc
xchg
or
xchg
sub
in
or
push
repz
jl
fiadds
int
xchg
jg
les
jo
jle
mov
lods
ror
shrb
addr16
frstor
jnp
aam
mov
les
mov
sarb
in
fisubrl
leave
inc
call
mov
cmp
fsubl
mov
push
jb
test
mov
mov
cmpsl
cmpsl
vfrczss
pop
add
add
xchg
mov
cmp
push
rorl
call
or
inc
push
outsb
push
cmpsl
push
shll
push
iret
sbb
xchg
add
mov
mov
sarb
cld
sbb
add
mov
add
pop
adc
ljmp
push
pop
hlt
daa
sahf
and
jge
xchg
addr16
loopne
jp
loope
in
push
movsb
popa
dec
inc
pop
je
jl
repnz
cmp
lods
mov
rcl
hlt
inc
in
dec
aad
xchg
scas
int3
push
fildll
ret
mov
add
sti
shrl
pop
add
sub
mov
mov
adcb
push
dec
mov
dec
or
ficompl
sub
push
mov
mov
push
shll
in
outsl
or
push
repnz
rcl
mov
sbb
adc
xchg
add
mov
mov
jbe
adc
cltd
mov
aas
jp
xorl
cmp
pop
add
sbb
mov
mov
rcll
loop
push
cld
test
rorl
popa
movsb
or
jno
loop
cld
jbe
mov
or
out
xchg
push
lea
or
loopne
arpl
inc
test
or
popf
popa
pop
sub
ret
mov
xor
cs
cmp
xor
adc
mov
cmpsl
sub
and
pushf
lock
test
jb
test
xchg
dec
add
scas
lret
imul
frstor
mov
cmp
dec
push
xor
mov
xchg
sub
mov
sub
adc
repz
stc
lea
sub
ror
xchg
sub
sub
xchg
push
pop
cmp
xor
in
cmp
out
nop
add
push
and
mov
sbb
lods
outsb
jecxz
lea
cmpsb
xor
xor
repz
insb
mov
loop
rolb
sub
pop
pop
push
fs
mov
xchg
cmp
pop
sbb
jbe
mov
and
enter
jnp
les
lods
movsb
pextrw
ja
mov
push
xchg
call
dec
mov
sub
dec
bswap
sahf
inc
dec
ret
stos
xorl
mov
add
mov
aaa
clc
mov
xor
cld
lods
les
mov
shll
inc
xlat
xchg
pop
lds
xor
pop
sarb
loopne
pop
hlt
xchg
js
faddl
jle
add
insb
cmp
mov
xor
in
sub
lea
push
inc
fwait
cmp
ffreep
in
and
shll
mov
sbb
cltd
iret
xchg
loopne
not
fadds
cmpsl
bound
mov
push
jne
or
add
and
jb
add
and
int3
loope
scas
int3
xor
pop
into
jo
cmp
les
je
dec
dec
mov
sub
clc
rcl
and
mov
inc
mov
int
and
mov
loopne
lods
aad
shll
ja
dec
popf
and
gs
dec
sbb
popa
cmp
fldl
ret
push
dec
loope
pop
lret
cltd
test
mov
jmp
lds
test
je
cs
cmp
or
mov
out
popf
pop
in
movsl
xchg
ljmp
sti
pushf
add
andb
cmp
pop
icebp
sarl
xchg
mov
adc
out
enter
push
mov
adc
lret
xor
cmpb
ss
dec
push
mov
push
sbb
in
fwait
mov
jb
or
and
mov
imul
jae
fisubrl
dec
pushl
cs
out
arpl
jge
xchg
cmpsl
sti
push
xor
ret
mov
and
fwait
pop
mov
test
test
sahf
push
lds
imul
push
insb
subb
inc
out
dec
jecxz
cmp
cli
lret
cli
push
xchg
mov
push
mov
sbb
es
add
imul
mov
xchg
mov
lds
pop
aaa
sbb
cmp
xor
test
pusha
pusha
fldenv
dec
cmp
add
dec
inc
dec
repz
pusha
rcrb
pop
call
mov
pop
in
lret
inc
push
int
mov
mov
arpl
jno
inc
stc
repnz
sbb
adc
mov
shll
push
arpl
or
nop
push
shlb
ja
cs
daa
adc
xchg
scas
outsb
popf
mov
dec
or
or
xor
pusha
dec
push
sbb
dec
pop
fidivl
pop
dec
ljmp
bound
cltd
das
and
cmp
sub
push
adc
int
bound
mov
call
aas
push
jae
stos
cmpl
rcrl
add
out
sub
enter
stos
loopne
dec
push
xchg
in
xor
sub
popf
inc
cmp
insb
or
sub
dec
loope
adc
xchg
xchg
ret
pop
cmp
mov
add
xchg
adc
scas
inc
int3
mov
cld
xorl
sub
cmpsl
int
rcrb
push
shrb
test
push
icebp
pop
ljmp
sbb
and
push
sti
sub
xor
popf
scas
outsb
and
mov
shlb
loop
jge
pop
jp
or
outsl
hlt
fadds
pop
jecxz
fisttps
imul
shlb
push
loope
mov
adc
mov
shrb
cmp
sbb
pop
and
lcall
pop
into
mov
test
sub
dec
cli
jns
mov
push
and
cmp
sarl
sub
fcoms
test
lcall
push
mov
aaa
or
add
push
or
inc
aas
inc
lock
out
jno
inc
or
fs
dec
jno
cmpsb
scas
scas
lock
in
shlb
sbb
xor
lods
subl
lahf
mov
add
loope
loopne
add
pop
xor
xchg
jno
mov
mov
mov
xchg
adc
repnz
clc
jb
jp
sub
sbb
stos
movb
sahf
xor
sub
js
js
push
sbbl
dec
inc
outsb
add
jle
cmpsl
jle
pop
in
loopne
and
pusha
out
pop
sbb
pusha
orl
addr16
mov
icebp
in
call
data16
push
and
mov
push
dec
inc
ja
je
jecxz
imul
jl
sbb
mov
sub
jp
fs
pop
incl
loopne
mov
mov
add
dec
mov
pop
jne
sbb
mov
jle
ret
ret
lcall
mov
pop
pop
xchg
clc
sbbb
cmp
stc
cmp
imul
dec
adc
aas
fcomi
repz
pop
jp
ljmp
add
test
test
xor
pusha
ficompl
jae
call
mov
xor
ljmp
addr16
daa
xor
push
inc
sub
dec
mov
inc
pop
shl
test
add
int3
jp
rclb
scas
inc
in
inc
lcall
cwtl
out
das
dec
xor
inc
mov
je
hlt
push
pop
pop
pop
xor
pop
lahf
fmuls
pop
cld
push
dec
data16
cwtl
scas
out
addl
mov
jl
daa
mov
mov
loope
pop
addr16
cli
lods
or
cmovns
and
pop
aad
pop
and
mov
cmp
addr16
or
in
xchg
adc
sub
loope
pop
mov
stos
loope
out
nop
or
xor
mov
pusha
lock
sti
mov
movsb
jno
mov
or
insb
mov
push
movsb
jne
adc
out
repnz
popa
jmp
cmp
das
fldcw
mov
sahf
aaa
iret
and
mov
xchg
xlat
xchg
loop
cmpsl
sub
into
sub
aad
dec
fcom
pop
mov
das
xchg
xchg
cmp
add
jmp
jo
out
push
add
pop
sbb
mov
pop
push
movsb
inc
into
add
das
cmp
in
es
lret
arpl
orl
pushf
arpl
into
xchg
lret
cmp
es
leave
jmp
cmp
das
gs
and
enter
pop
sbb
cld
pop
cmp
loopne
es
rolb
sarb
push
xor
dec
sbb
add
popf
push
mov
testl
test
pushf
shlb
push
sub
adc
lods
xor
into
addr16
out
adc
pop
cmpsb
push
scas
lds
add
mov
jmp
and
xorl
inc
in
or
mov
out
idivb
rcrl
addr16
and
loope
dec
or
push
xor
stos
imul
loope
repz
add
les
mov
pop
jne
inc
jle
cmp
aas
pop
pusha
negb
insl
andl
mov
or
cmp
pusha
cld
rclb
jnp
jae
testb
mov
test
xor
jb
aam
jnp
adc
repz
jmp
and
sbb
xor
std
mov
mov
or
add
jmp
mov
insl
lret
mov
insb
cwtl
cmpsl
es
push
push
xor
cmp
sbb
popf
mov
push
xchg
int
stos
cmpsl
clc
jno
data16
aam
mov
and
cmp
xchg
lods
mov
aam
and
cmp
push
xchg
add
adc
out
idivb
popf
xchg
jp
lods
clc
out
mov
rorl
ret
add
sbb
adc
stos
mov
cmp
mov
std
push
shrl
ds
in
fstps
movsb
mov
iret
out
test
pusha
in
sbb
stos
mov
in
mov
push
sub
sbb
scas
mov
add
mov
mov
lds
sbb
jne
sub
ja
inc
subl
mov
call
sub
mov
xor
cmp
movsl
fadds
adcb
insb
aad
mov
std
and
push
sbb
xor
add
mov
pop
nop
push
adc
inc
insl
pop
pop
mov
int
lahf
movsl
lcall
lods
sbb
nop
aad
jmp
dec
daa
sub
xchg
inc
ljmp
repnz
jo
jnp
fisubrs
push
ret
dec
mov
xchg
leave
loopne
jb
jp
test
testb
rol
fisubs
cmp
dec
imul
pop
jae
enter
test
and
mov
sbbl
jo
add
cmp
in
in
cmp
je
add
mov
rclb
sbb
adc
sbb
fisubrl
incb
pop
jnp
cmp
and
mov
aas
pop
xorl
and
xlat
shrb
popa
lret
pusha
cs
sarb
dec
jne
stos
mov
shll
mov
push
sbb
pop
pop
popa
cltd
popa
out
mov
sti
push
lea
pop
inc
loopne
movl
add
insl
cmp
int3
in
sub
mov
outsl
movsb
push
out
fwait
out
arpl
jno
jae
sbb
test
es
sbb
xor
or
mov
ds
scas
je
push
adc
call
dec
or
jne
and
sti
jnp
mov
jl
mov
call
jg
or
sub
fstpt
sbb
stc
jne,pt
aad
lods
add
pop
out
lods
lods
adc
dec
adc
jg
imul
xchg
adc
jo
jo
imul
rsqrtps
mov
sbbl
or
and
ficomps
mov
ficoms
pop
fdivrl
inc
and
fwait
icebp
mov
jecxz
dec
adc
mov
mov
sbb
cmc
mov
cmc
jbe
pop
stc
jnp
sti
dec
xor
outsb
into
cmp
xlat
lods
in
pop
add
dec
mov
push
jbe
enter
fmuls
xchg
pop
iret
test
dec
lds
lock
lret
ret
arpl
sub
jge
arpl
xchg
ret
or
aam
notb
jmp
fistl
into
gs
and
ficoml
fmull
call
bound
cmpl
adc
jo
sbb
pop
fldt
xor
sbb
push
stc
push
rorl
push
loop
ret
test
adc
push
loopne
and
xor
popa
std
sbb
sti
pop
add
adc
mov
jns
ret
xchg
int3
or
out
jo
scas
push
sub
sub
js
sbb
xor
outsb
rcrb
cmc
sahf
and
clc
je
sti
or
inc
stc
cltd
loope
and
lods
push
repnz
leave
mov
jne
sbb
push
fwait
mov
adc
mov
test
sub
cltd
jge
lahf
stos
repz
or
or
popa
mov
imul
mov
or
jge
clc
repnz
cmp
imul
gs
dec
push
sub
sub
cmp
rcrb
popf
lea
rcrb
out
add
aam
shl
jo
andl
jg
stos
mov
and
xor
ret
mov
sbb
cmp
les
test
iret
mov
stos
or
std
pop
outsb
pop
push
and
or
mov
xchg
cmp
jg
sub
pop
or
push
imul
dec
and
sbb
mov
cmp
in
sub
push
sbb
ds
das
shrl
bound
cmp
push
cmp
js
test
push
dec
mov
sub
addr16
pop
or
cltd
ljmp
add
insb
jns
xchg
sti
int3
jg
push
and
insb
test
jbe
jbe
and
arpl
imul
je
xor
popa
push
xchg
ret
inc
push
inc
mov
lods
clc
sub
xor
ss
das
jb
xchg
inc
insl
leave
int
xor
sbb
pushf
pusha
out
xchg
or
and
out
int
orl
cld
cltd
add
fs
jns
mov
cmpsl
lret
das
and
sub
add
cmpsb
rcrl
pop
in
jb
adc
dec
lods
push
gs
add
int3
mov
dec
outsl
jns
inc
enter
fsubrs
mov
dec
mov
lahf
jae
lret
xor
test
xlat
or
mov
arpl
inc
subb
jmp
orb
not
scas
jo
dec
dec
in
push
pop
fs
orl
out
cmp
loope
lods
fnsave
pop
and
jb
lcall
xor
mov
xor
hlt
fimull
or
pop
rolb
add
testl
and
icebp
jo
or
cmpsl
in
mov
mov
cmpb
int
xchg
xor
jmp
add
xlat
sbb
ja
loope
loope,pn
xor
inc
mulb
pop
test
int
adc
aaa
stc
das
adc
js
adcl
js
out
adc
xchg
jnp
fimull
mov
cmp
divl
and
into
call
adc
dec
xchg
fistps
cmp
fisubl
push
jl
or
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
repz
in
sar
ret
mov
mov
arpl
inc
or
sbb
sub
cmp
int3
or
dec
inc
sar
mov
cmp
push
insb
inc
jl
shlb
pop
inc
pop
inc
add
or
mov
lds
xchg
iret
test
jne
gs
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
push
xor
inc
add
xchg
movsl
ljmp
mov
iret
add
add
push
imul
nop
jb
inc
mov
fistps
sarl
ret
bound
repz
aad
dec
aas
push
loop
movsl
mov
mov
push
aas
inc
or
pusha
sub
outsl
fildll
pop
mov
lds
inc
or
test
jne
inc
das
xchg
pop
inc
aas
pop
pop
fisubrl
add
jg
jo
lods
movsl
adc
push
movsl
es
loopne
shl
mov
xchg
jmp
xor
scas
pop
fimull
in
and
xor
popf
iret
outsl
pop
mov
mov
mov
scas
lahf
push
lods
negb
mov
cmp
inc
adc
adc
cmpsl
in
aad
lds
xchg
filds
das
adc
add
push
sub
jp
andl
cmpsb
lret
xor
cmc
mov
outsl
add
push
or
pop
push
cmp
xchg
or
jmp
int3
inc
rolb
jle
dec
adc
jp
adc
dec
cmc
mov
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
test
cmp
push
mov
fists
aam
mov
call
daa
lcall
sti
mov
movsb
or
push
adc
dec
and
xchg
lahf
and
pop
pushf
fcmovu
lcall
xchg
out
outsb
mov
pop
lret
push
lahf
sbb
addr16
shl
sbb
sti
inc
cmp
mov
ss
nop
or
outsb
clc
popa
pop
lret
daa
cld
movsb
mov
imul
pop
jbe
hlt
inc
mov
cmp
xchg
inc
jns
cmp
movsb
cmc
imul
call
cs
call
jne
int3
popa
jbe
sub
lods
dec
mov
std
lds
pop
imul
fst
adc
push
faddp
and
aas
pushl
fisubl
rol
mov
cmp
xchg
hlt
jae
mov
mov
lcall
pop
in
stc
and
in
pusha
dec
imul
push
mov
lods
inc
fimull
mov
sbb
pop
shll
jne
xor
ljmp
insl
sbb
xor
add
insl
rcrl
jbe
fwait
jl
dec
adc
xchg
mov
mov
add
dec
pop
cmpsb
cmpsb
xor
js
lret
push
int3
adcb
push
sub
cli
icebp
lret
cmp
stos
cmp
jo
mov
lahf
adc
and
mov
data16
sub
jbe
out
data16
push
jp
jge
adc
int3
cwtl
gs
mov
inc
out
test
inc
push
mov
lret
rorl
and
out
mov
hlt
loop
stc
test
mov
mov
pop
mov
sbb
into
or
xlat
lcall
sbb
insb
lock
push
movsb
mov
nop
imul
adc
les
push
loopne
mov
sbb
pop
xor
nop
cmp
push
cmp
mov
fwait
dec
inc
push
xor
nop
out
insb
lock
mov
cmp
push
ds
inc
dec
cmpsl
jnp
scas
cld
xor
xor
push
jne
sar
fdiv
cmp
cwtl
mov
push
aas
scas
ret
jl
push
imul
test
cmp
lods
sbb
enter
in
in
call
mov
mov
cmp
cmp
sbb
add
out
aas
cmp
push
jl
test
and
leave
fcmovnu
cmpsl
mov
aad
sbb
shr
or
stos
inc
stos
jne
pop
lret
inc
ja
ret
xlat
xor
lcall
push
mov
loop
adc
pusha
sbb
mov
mov
fsubrs
data16
stc
addr16
push
mov
dec
filds
imul
popa
fisubrl
rcl
lods
xchg
fwait
cmp
xor
mov
push
and
mulb
xor
mov
loopne
adc
mov
add
in
bound
xchg
mov
popf
leave
push
xor
and
cld
cmp
cwtl
pushf
xchg
ja
pop
sub
shrl
push
out
fs
shlb
scas
cltd
loope
mov
add
sbbl
outsb
push
ret
and
leave
std
inc
out
mov
scas
xor
arpl
adc
cli
xchg
sbb
clc
xchg
sub
mov
mov
push
mov
dec
ja
dec
mov
add
nop
lcall
xchg
movsl
sub
stc
outsl
mov
aam
into
sarb
inc
in
dec
xor
pushf
daa
xchg
cli
fildl
push
fists
lahf
mov
mov
pop
lods
adc
add
xor
imul
jnp
push
stos
outsb
pop
pop
das
jo
cwtl
fisttps
bnd
adc
rorl
add
mov
push
cmp
push
js
pushf
pop
pop
inc
idivl
es
cmp
out
push
sbb
add
mov
sbb
cmp
test
cmp
subb
fimuls
ja
test
rep
out
adc
ja
mov
inc
pop
das
daa
js
sahf
inc
sahf
adc
mov
std
ljmp
sbb
mov
fstpl
into
aam
and
sti
cmp
repz
jecxz
jecxz
mov
and
mulb
ror
adc
add
mov
or
mov
into
push
int
xchg
in
mov
xchg
xchg
aam
xor
push
pushf
fistl
mov
mov
adc
lods
in
adc
cmp
and
call
aam
shlb
pusha
out
dec
mov
mov
lahf
add
sub
icebp
rcrb
sub
fmuls
dec
jb
mov
fnstcw
pop
std
mov
std
in
inc
hlt
call
jg
jge
pop
xchg
das
dec
test
sarb
imul
movsb
lret
adc
out
and
lock
sbb
add
jge
orl
push
xor
dec
mov
cmpsb
in
les
stos
jecxz
dec
push
pop
fadds
jae
jb
jns
lods
dec
and
sbb
sub
mov
aaa
add
in
xor
imul
dec
sbb
add
loopne
xchg
bound
mov
sbb
loop
ret
push
xor
dec
aas
rolb
mov
push
into
data16
jg
popf
insl
lret
orl
outsb
rcrb
jmp
mov
mov
pop
push
fisttps
jns
gs
and
and
push
js
xchg
add
pop
and
lahf
stos
imul
dec
xor
push
pop
int
jmp
or
out
xor
cli
push
mov
lahf
in
sbb
setnp
inc
xor
cli
sbbl
lds
or
xor
icebp
pop
mov
mov
bound
mov
out
sbb
xlat
xorb
pop
sub
xor
mov
cmp
aaa
mov
loope
adc
dec
or
mov
mov
dec
dec
loop
inc
mov
fwait
pop
and
lds
push
pusha
inc
mov
outsl
in
icebp
mov
cmp
push
sbb
or
cmp
inc
sahf
mov
cmp
jp
mov
inc
jb
scas
and
cmp
and
adc
mov
mov
stos
mov
pop
mov
popa
mov
jno
or
mov
ss
or
fisttps
fdivl
bound
call
jnp
push
inc
or
mov
jo
stos
mull
lcall
adcb
fwait
and
and
jmp
js
sub
fucom
test
fwait
loopne
out
ret
sbb
xchg
loope
sub
add
ja
rol
repnz
popf
xchg
cwtl
adc
sahf
mov
fsubr
insb
sub
adc
test
mov
xor
mov
or
sub
repz
jnp
mov
sbb
push
sarb
xor
xchg
inc
popf
pop
inc
mov
loopne
arpl
insl
rorl
in
iret
and
shll
iret
adc
adc
fsubrs
fstl
lahf
push
jb
rorl
and
std
dec
adc
inc
and
jmp
mov
push
mov
ljmp
mov
push
iret
out
in
lea
pop
fbld
loopne
xchg
sbb
loope
clc
cmp
filds
pop
xor
in
push
add
pop
test
jne
scas
push
pusha
fs
ret
pop
sti
dec
adc
xlat
jbe
pop
ret
add
in
mov
and
add
cmp
in
imul
or
addr16
loopne
cmp
ds
lret
add
mov
cmpsl
out
outsb
hlt
mov
and
xchg
lock
xchg
addr16
fcmovnu
movsb
lods
mov
cmp
mov
adc
call
xor
push
adc
and
or
shll
push
xchg
stc
inc
test
mov
adcl
insl
mov
sub
adc
inc
mov
mov
xchg
scas
fsts
adc
les
or
jbe
stos
lea
cwtl
rcrl
and
cmpsl
push
and
arpl
in
sub
imul
xor
repz
dec
rorl
sub
pushf
dec
mov
out
adc
mov
jo
or
dec
cwtd
inc
loopne
jbe
cmp
pushf
jecxz
in
test
push
lret
stc
insl
mov
out
lcall
adc
inc
sbbb
xchg
cmp
cmpsl
jb
sub
dec
sbb
sub
mov
mov
scas
ret
jle
hlt
add
and
in
add
jne
mov
jmp
ret
lret
add
dec
les
pop
cmp
nop
into
mov
add
sub
divl
push
sub
mov
inc
test
setge
dec
testb
into
cmpsl
jns
cmp
fwait
stc
mov
jne
roll
push
jl
add
test
and
ja
addr16
test
mov
outsl
es
lret
mov
ljmp
sbb
aam
inc
outsb
xchg
and
aaa
xchg
add
add
hlt
cld
pop
push
xor
mov
lret
loope
ret
fildll
lods
jno
mov
push
mov
cli
sub
pop
pop
sbbb
xor
add
inc
cmp
mov
gs
test
in
psrlq
cli
inc
jne
sub
outsb
lahf
pop
sub
daa
sub
lret
mov
je
mov
movsl
jecxz
pop
addb
jl
shlb
xchg
jo
add
cmp
imul
frstor
cmp
cmpsl
or
test
xchg
jl
jge
fisubrl
xchg
rcrb
xor
sub
inc
hlt
data16
fdivrp
mov
xor
and
insb
mov
pop
dec
sbb
sub
lods
fiadds
imul
mov
call
and
jge
fcmovnu
cmp
cmp
sub
pop
adc
mov
loope
xlat
mov
ja
jno
push
cld
test
inc
xor
dec
push
jnp
aam
xchg
xor
fmull
cmp
cltd
mov
add
inc
mov
xchg
std
mov
push
jle
mov
ja
push
and
mov
call
xchg
and
dec
repnz
lods
mov
bound
hlt
les
cmp
aaa
dec
xchg
out
adc
les
sbb
lcall
inc
imul
sub
add
jne
xchg
pop
loopne
mov
mov
sub
stos
push
movsl
sub
lret
xchg
sbb
mov
mov
xchg
dec
and
ljmp
mov
popf
dec
mov
fcoms
jbe
js
std
mov
sub
adc
pop
lock
in
sti
cli
daa
into
xchg
imul
bound
jns
mov
ret
jge
loop
lcall
cmp
mov
jbe
sbb
jb
fnstcw
xlat
out
xchg
xor
cltd
cmp
stos
jge
out
arpl
pop
sbb
stc
out
cmp
mov
sbb
imul
push
cwtl
inc
lret
dec
fadds
mov
mov
lods
adc
iret
hlt
out
sub
push
xchg
push
aas
push
orb
lret
and
xlat
jecxz
mov
pop
out
imul
mov
andb
movsl
jb
cmp
cs
mov
js
mov
ljmp
fwait
pop
scas
in
addr16
xor
sbbb
add
insl
mov
ret
les
mov
dec
out
push
stos
mov
ja
popf
mov
scas
mov
lea
jg
jle
adc
add
dec
jl
push
mov
lret
int3
std
cmp
loop
inc
xor
xchg
jnp
lods
fstpl
divb
mov
xor
xchg
add
push
add
je
lea
popa
sbb
fsubrp
xor
xor
stos
adc
pop
loop
push
push
sub
sub
sbb
dec
rorl
repz
sbbb
aad
testb
inc
mov
bound
push
sub
sti
and
fcomps
imul
pop
cmp
aaa
add
push
clc
push
jl
imul
push
sbb
fs
inc
push
mov
xchg
mov
cmp
sbb
push
pop
enter
nop
push
cld
pusha
cmc
call
leave
add
jecxz
mov
mov
adc
push
xor
ficoml
enter
aas
cmp
or
inc
popl
ficompl
xchg
jle
jbe
int
aad
stos
insl
mov
lods
js
sub
enter
aas
lret
fstl
sub
inc
stc
dec
sub
test
test
cmp
mov
pop
sarl
pop
bswap
adc
iret
cli
cltd
mov
ljmp
icebp
xor
mov
mov
and
pop
cld
pushl
shrb
sbb
xor
stos
push
aam
out
aas
xchg
sarb
jmp
jb
push
mov
lods
inc
xor
or
push
jecxz
js
pop
fidivrs
in
bound
cmp
dec
popf
scas
les
in
sbb
and
popa
adc
pop
aad
fsts
mov
cltd
inc
sbb
xchg
xchg
addr16
dec
adc
rorb
rcrb
lea
test
aas
test
xchg
mov
leave
pop
int
test
or
je
pop
dec
shll
mov
shlb
repz
mov
in
xchg
adcb
cmp
add
hlt
imul
push
push
fldcw
icebp
mov
outsb
out
inc
test
mov
xor
cmp
push
das
loope
sub
xor
in
push
push
ret
mov
ljmp
ljmp
adc
jno
test
xchg
mov
imul
or
push
cmp
aas
fsubr
fstpt
fs
adc
mov
loop
addr16
sub
loope
out
filds
sarb
les
push
adc
or
mov
xchg
sub
push
popa
fld
filds
xchg
add
adc
dec
xor
ficompl
sbb
push
in
push
nop
fcompl
cld
jmp
adc
dec
xchg
pop
repz
sub
sbb
mov
push
push
ljmp
inc
out
in
sub
dec
lahf
jne
out
shr
jg
xlat
out
mov
movsb
lods
jmp
out
mov
or
outsb
in
sub
cmp
mov
mov
loope
add
inc
mov
add
rol
scas
push
xor
sub
es
sbb
stc
inc
xchg
xchg
sub
sub
repz
sahf
insl
sbb
or
or
and
jno
test
mov
cmp
repz
jae
adcb
jns
loope
and
inc
insl
push
pop
fcomp
lods
outsb
push
dec
inc
and
dec
add
fcomip
adcb
pop
in
inc
mov
adc
add
or
out
outsl
mov
inc
and
push
stos
loopne
cmpsl
xor
sbb
lret
xchg
pop
pop
fs
test
cmpsb
push
fdivrl
push
mov
mov
daa
adc
xor
mov
sbb
hlt
jns
jg
sar
add
jge
out
mov
xchg
js
mov
insb
sub
xor
adc
scas
mov
out
mov
pushf
loopne
ror
inc
jecxz
adc
je
lcall
pop
popf
jae
sbb
mov
push
or
addr16
mov
and
rol
popf
sbb
loop
mov
xor
popf
jne
enter
push
cmp
ds
or
int
sbb
push
dec
pop
rcrl
sbb
mov
insb
les
cmp
adc
scas
fsubrs
inc
jbe
push
mov
subl
mov
addr16
fcmove
xchg
imul
hlt
mov
inc
mov
into
lods
and
les
iret
add
lahf
bound
add
mov
loop
and
cs
idivl
mov
sub
mov
jg
cmp
inc
arpl
add
adc
mov
hlt
testb
ret
fs
repnz
imul
mov
fnop
pop
lods
push
adc
adc
push
pop
les
nop
aaa
int
cwtl
fwait
and
pop
in
adc
jmp
push
pop
adc
subb
xor
xlat
xchg
cmc
or
out
out
and
aas
mov
push
and
fs
cmp
rorl
clc
adc
mov
leave
xchg
in
dec
test
dec
cli
incb
cmp
test
xchg
xor
aad
add
test
insl
pop
xor
inc
dec
jnp
push
hlt
adc
mov
cmp
js,pn
cmp
or
lret
aad
gs
mov
mov
ficoms
sub
test
call
and
add
cmp
jecxz
or
pop
inc
mov
mov
xlat
inc
jb
mov
cmp
jle
sbb
jp
jge
mov
mov
les
jno
and
outsl
ds
pop
in
popa
jl
jg
in
inc
jae
bound
xor
aas
lret
dec
inc
mov
jp
arpl
decl
stc
fwait
xor
es
popa
cmp
add
out
add
fsubrl
xchg
and
and
fidivrs
test
inc
mov
scas
rcrb
pop
fldenv
xchg
push
inc
arpl
in
xchg
out
jno
icebp
cmp
lahf
push
xor
jl
xchg
push
dec
imul
ss
daa
and
lahf
loopne
or
cli
orb
mov
pushf
jle
jl
mov
inc
jge
push
test
lods
sub
mov
jl
and
or
rcrl
push
xlat
std
push
sub
sub
fcomip
mov
push
fadd
inc
mov
or
jecxz
mov
pop
scas
fcmovne
xchg
insb
jbe
dec
in
outsl
aad
andl
xchg
in
and
ja
lret
int
sti
enter
and
mov
leave
push
add
jb
xlat
and
insb
loope
call
dec
std
inc
or
dec
popa
xchg
inc
ja
call
movsb
loopne
dec
and
push
enter
outsl
lock
sbbl
loop
jge
add
stc
mov
add
inc
xor
negl
fadds
fwait
lds
leave
and
sub
fsubs
cli
jle
cltd
mov
mov
loopne
sub
subl
push
aam
mov
notb
movsl
jmp
adc
cmpsb
jge
push
adc
fisubs
push
push
lahf
into
int3
mov
sbb
inc
mov
cmp
test
aaa
adc
gs
dec
xchg
dec
lahf
push
mov
sub
or
mov
add
mov
mov
cmp
and
inc
pop
sbb
mov
and
sbb
pop
gs
inc
bound
mov
mov
inc
mov
push
jno
push
cld
xorl
and
xchg
ss
inc
xor
frstor
jl
xorb
lods
in
mov
loopne
dec
ret
push
mov
jo
sarb
int
aas
push
mov
dec
aam
lds
xor
sub
add
or
pop
cmp
cmp
or
adc
shrl
sarl
bound
sub
mov
loope
push
cltd
inc
clc
xchg
xlat
xchg
push
nop
inc
push
pop
pusha
mov
and
sub
cmp
pop
adc
xchg
push
mov
push
addl
leave
imul
inc
int
popf
ror
inc
clc
js
loope
mov
pushf
xor
push
sbb
in
clc
jbe
cld
xor
ret
and
add
mov
push
jecxz
sbb
push
lret
fsts
adc
mov
ljmp
add
fnstcw
pop
xchg
popf
std
js
mov
xor
ja,pn
push
pop
lea
pusha
in
dec
inc
ss
adc
and
xchg
mov
mov
push
mov
orb
rolb
jecxz
xchg
popf
dec
xorps
add
xchg
fimuls
jb
fstpt
int
or
inc
mov
inc
mov
mov
int3
xchg
pop
mov
lret
dec
not
test
and
les
ljmp
lcall
dec
mov
pop
test
or
bts
and
xor
sbbl
cwtl
andb
shlb
push
adc
and
movsb
fwait
daa
mov
xchg
xor
and
je
ficompl
cmpb
mov
fisubrl
lahf
mov
jne
push
adc
jge
fwait
sbb
dec
out
out
jno
and
fcomp
dec
test
aam
or
lock
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
les
xchg
fiadds
das
push
pop
inc
sysexit
jg
outsl
xchg
pop
test
mov
vcmpeq_osps
insl
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
in
sbb
test
fcoml
imul
inc
xchg
xchg
insl
data16
dec
inc
pop
push
sub
ds
push
sbb
in
out
test
lods
cmpsb
mov
loop
data16
dec
inc
push
push
sub
or
or
sbb
cmc
je
not
outsb
aam
lcall
jne
pop
adc
sub
push
pop
push
jb
push
test
xchg
cwtl
int3
mov
cmp
mov
dec
ljmp
push
and
cmp
dec
insl
insl
add
mov
pusha
push
cmpsl
mov
aam
inc
push
es
mov
cmc
or
jecxz
adc
add
aas
fcompl
mov
and
jmp
repz
rcr
sub
shlb
sbb
in
es
out
clc
outsb
push
cmpsb
mov
imul
jae
stos
shll
cmp
xchg
sbb
mov
xchg
cmp
push
andb
xor
lods
push
aam
cmp
repz
or
add
sbb
mov
and
push
loope
xor
xchg
data16
push
xor
outsl
leave
or
sbb
and
inc
mov
pop
test
jne
fs
push
inc
push
xor
and
push
push
sbb
xorb
fcmovu
shr
rep
and
xor
xor
aas
sub
pop
inc
jle
jno
andl
repz
test
sbb
dec
and
jp
addr16
mov
mov
in
mov
xchg
insb
data16
dec
inc
pop
push
sub
cmp
or
sbb
in
out
test
lods
cmpsb
mov
xchg
insb
data16
dec
inc
pop
push
sub
cmp
or
sbb
in
out
and
scas
cli
sarb
movsl
scas
jo
ljmp
mov
jbe
je
adc
fcomps
in
bound
das
outsl
popf
xor
and
stos
and
lahf
dec
and
insb
sbb
pop
mov
dec
mov
adc
dec
xor
dec
push
js
int3
rol
inc
fstps
cltd
pop
xor
fstpt
bound
out
pop
clc
das
ret
test
fimuls
push
add
add
and
and
int
xorb
pop
xor
out
fldcw
pop
push
cmc
adc
cmp
push
ret
pop
mov
mov
ror
gs
push
add
popa
push
dec
cmpsl
lret
imul
fwait
lret
push
sub
pop
testb
int
add
push
rcr
pushf
loopne
inc
ja
call
faddl
rolb
cmpsl
pop
jl
ficoml
jl
lcall
jns
mov
adc
arpl
fbld
out
fmulp
cwtl
dec
aaa
push
scas
gs
cmp
test
pop
in
call
sub
imul
aad
sti
std
push
clc
fs
pop
icebp
pop
fistpll
mov
push
movsb
dec
stc
mov
pop
daa
sub
or
push
call
out
sahf
jle
jb
and
adc
inc
sub
push
ret
jp
bound
aam
jp
mov
mov
xor
enter
xchg
call
jecxz
push
es
inc
mov
nop
outsl
adc
sahf
lods
pusha
push
mov
arpl
add
scas
outsl
test
hlt
or
dec
and
rcll
rorl
hlt
sti
test
push
daa
in
adc
rorb
movsl
pop
rolb
lcall
cmpsl
repnz
ret
xchg
lahf
divl
or
pop
bound
mov
or
xchg
sbbl
fdiv
mov
or
lds
rcr
lods
mov
inc
pop
jge
add
sbb
push
test
sub
or
into
pop
icebp
xchg
sub
inc
xlat
pop
dec
push
jo
mov
stos
fildll
sbb
lahf
fnstsw
test
jge
inc
dec
fbld
xchg
push
xchg
dec
and
aaa
cs
push
arpl
mov
dec
in
mov
or
inc
adc
fwait
imul
fs
movsb
add
clc
out
dec
add
sbbl
xchg
inc
dec
push
push
movsb
add
sub
dec
bound
or
push
jae
popl
fstps
in
mov
call
mov
ret
pop
fwait
int
or
sub
jne
gs
xchg
in
mov
adc
push
test
ret
outsb
jg
inc
jp
adc
mov
sub
adc
sub
sbb
out
push
jge
repz
push
pop
nop
pop
cld
push
mov
scas
fistpll
shlb
pop
bound
push
out
jmp
inc
push
movsb
sbb
movsl
scas
mov
mov
inc
scas
pop
add
fimuls
orb
arpl
push
neg
add
add
popf
push
fldcw
mov
push
xchg
jb
dec
sub
aaa
ja
xchg
mov
movl
mov
nop
das
sarl
xchg
mov
fistl
cwtl
into
add
inc
rclb
jo
mov
mov
inc
cmp
pushf
sti
mov
shlb
xchg
sub
jg
dec
dec
cmovg
cli
sbb
dec
mov
popa
mov
negl
and
in
roll
mov
pop
push
add
arpl
cmp
ficompl
jae
loopne
mov
scas
cmc
sub
jae
mov
dec
dec
sti
aam
orb
out
inc
push
cmpsb
cmpsl
sub
mov
jge
push
adcb
xor
xchg
sbb
sbb
pop
dec
xor
sub
mov
jnp
loop
mov
inc
out
leave
cmc
add
imul
dec
jle
mov
popf
decl
pfmul
mov
out
pop
adc
mov
outsl
mov
js
les
jo
lret
mov
push
inc
int
mov
pop
not
pop
js
js
mov
inc
loope
loope
or
bound
jecxz
push
test
mov
mov
int3
adc
cmpsb
push
xor
aas
push
adc
movsb
add
or
mov
loope
dec
test
sub
dec
lea
or
popw
xchg
pushf
test
cmp
dec
scas
ja
int3
ret
ret
inc
and
jo
jle
jne
stos
xchg
push
xchg
dec
stos
clc
mov
jmp
adc
popf
es
andb
sub
jbe
sti
or
mul
aaa
mov
sbb
fcmove
push
mov
push
das
sarl
lods
mov
imul
xchg
lret
ja
or
aad
and
lock
adc
outsl
adc
xchg
adc
cmp
pusha
push
adc
pushf
rclb
ja
stos
movsl
jns
cltd
fwait
jecxz
push
mov
fwait
jns
pop
mov
addr16
sti
cmp
jge
push
adc
and
into
push
add
aad
cmp
mov
mov
pop
shl
inc
loop
push
mov
stos
mov
mov
negb
lock
mov
arpl
xor
pop
ficomps
jl
test
jmp
lock
sbb
xchg
stos
mov
test
pushf
dec
out
pop
icebp
adc
negb
lods
push
push
sahf
loope
adc
cmp
and
in
into
push
mov
jge
cmp
cmp
push
repnz
add
js
inc
xchg
push
jg
ret
xchg
cwtl
sahf
lret
xor
sbbl
push
lea
fucomi
rcll
adc
cmp
aas
addr16
outsl
nop
pop
mov
into
push
arpl
or
fs
aas
mov
xchg
pusha
mov
mov
insl
mov
mov
movsl
rcl
jle
and
outsb
mov
mov
rcrb
lods
addr16
fs
nop
add
sub
pop
movb
jbe
mov
mov
mov
mov
mov
mov
pop
das
popa
push
xor
push
dec
add
mov
mov
mov
jae
jl
mov
cmp
sahf
sarb
fdivrl
jecxz
scas
mov
mov
mov
cs
push
cmpsl
loope
int3
fldl
jge
les
inc
fstpl
repnz
adc
rcr
fwait
sarb
jae
popf
adc
adc
push
sbbl
mov
dec
ret
in
cltd
in
fsts
dec
gs
arpl
mov
sub
loopne
in
lds
sub
cmpsl
mov
sbb
xor
push
scas
inc
insl
cld
popa
pop
js
sbb
mov
xchg
aam
or
mov
sbb
push
dec
xor
xor
test
pop
cmp
shlb
stc
ret
jb
or
shlb
or
rcr
test
xor
adc
and
mov
test
arpl
call
add
mov
movsl
xchg
add
cltd
push
push
mov
ljmp
adc
into
xchg
xor
jae
sbb
je
pop
in
jg
jne
call
or
sbb
inc
ja
pop
adc
test
mov
jp
lods
jbe
mov
movsb
sarl
mov
jp
fdivrl
in
push
adc
sbb
pop
rclb
and
pop
xchg
movsl
inc
cmpsl
mov
ret
xchg
arpl
mov
pop
cmp
inc
cmp
lea
xor
lock
pop
rcll
mov
adc
jmp
xor
notl
xor
nop
pop
or
adc
bound
movsl
xor
jae
pop
arpl
ss
das
mov
jnp
shll
test
inc
ljmp
xchg
push
push
sbb
repz
fstps
pushf
xchg
mov
fnstenv
xor
cmp
into
rol
addr16
orl
vmread
frstor
inc
push
mov
int
jnp
xchg
inc
inc
lods
shlb
lock
lods
push
bound
jo
test
pop
inc
and
lcall
adc
ja
inc
mov
cmp
push
dec
mov
pop
jp
sbb
das
out
fwait
pop
sub
mov
pusha
or
lret
mov
inc
xchg
mov
cmc
std
sub
cmc
xor
cld
push
mov
lock
and
pop
xchg
dec
sbb
lahf
cld
or
and
push
test
pop
imulb
xorl
cltd
add
popf
mov
movsl
data16
jne
aad
test
in
sahf
mov
mov
or
aaa
imul
xchg
adc
adc
sub
mov
sbb
inc
push
stc
pop
daa
aam
cmp
shlb
jo
out
icebp
mov
sti
lods
xchg
scas
popf
lcall
test
aam
push
and
inc
bnd
and
sbb
cltd
ror
fistpll
shlb
push
or
sbb
sbb
mov
es
sub
out
sub
push
xor
add
hlt
mov
mov
sub
cmc
mov
or
rep
lret
sbb
divl
cltd
cmovae
dec
sub
sub
into
xor
cld
jbe
jne
das
imulb
movsb
jle
pushf
inc
pop
and
jl
jecxz
ficoml
lods
pop
int
mov
mov
jns
jl
fcompl
sbb
mov
cmp
ret
mov
mov
das
hlt
pop
add
andb
mov
mov
lcall
xor
sahf
and
sub
enterw
sbb
adc
add
ficoms
mov
mov
xor
outsb
mov
xor
icebp
repz
out
adc
sbb
cmc
pop
sarb
pop
mov
shlb
in
xchg
outsl
test
mov
mov
pop
cmp
mov
sahf
add
xchg
xchg
inc
cmp
jp
icebp
mov
dec
push
pusha
add
pop
ret
jle
adc
les
orl
in
push
rclb
xlat
pushf
mov
cmc
inc
insl
jbe
mov
pop
dec
add
cmpsl
push
mov
mov
insl
out
cmpsb
ret
cmpsb
pop
add
inc
das
adc
mov
out
icebp
mov
les
xchg
cmpsb
mov
adc
fisubrs
ja
in
inc
jnp
or
mov
inc
decl
mov
sti
movsl
push
inc
out
vxorps
sub
std
jp
test
test
inc
out
aad
mov
hlt
cmp
add
pop
or
xlat
jbe
out
and
jecxz
scas
mov
lcall
mov
jg
pop
xchg
push
or
lods
rdpmc
ljmp
das
mov
nop
xchg
inc
xchg
sbb
xor
mov
mov
and
gs
insb
andl
push
sub
jns
xchg
je
jb
mov
or
pop
test
cmp
mov
test
xor
aaa
xchg
pop
dec
fs
stos
pop
fistpll
cmpsb
subb
int
jne
popa
mov
jmp
or
jmp
sbb
sbb
cmp
xchg
pusha
push
push
lret
add
pop
dec
sub
fldenv
loopne
daa
jl
push
or
repz
outsb
sti
mov
adc
jae
inc
xchg
lock
mov
shlb
ret
movb
push
adcl
inc
jae
cmc
std
xchg
clc
mov
stos
dec
pop
lea
sti
aas
push
add
lods
stc
popf
cmc
popa
rorl
and
sbbb
int
call
ffreep
pusha
arpl
mov
mov
mov
inc
inc
icebp
daa
and
mov
mov
xor
xor
idivb
popf
sub
adc
mov
es
add
repz
gs
imul
mov
mov
inc
mov
jo
sahf
dec
sub
andb
mov
pop
add
lock
imul
xor
std
mov
jno
and
xchg
sub
dec
xor
jnp
add
and
or
cwtl
mov
fstpt
and
das
roll
sbb
push
movl
cwtl
add
cltd
lcall
xchg
mov
outsl
sub
jo
inc
and
xchg
scas
and
push
cltd
add
clc
add
jecxz
mov
loop
ds
ss
das
shl
inc
fsts
stos
faddl
mov
or
daa
call
pushf
cltd
scas
aam
fnop
insb
jb
mov
nop
je
nop
je
lock
pop
push
cmp
pusha
scas
mov
cmp
leave
mov
lods
dec
out
xchg
jp
jp
xor
daa
mov
arpl
stos
sbb
sub
enter
shll
rcll
icebp
pop
jno
jecxz
jb
dec
loop
rcr
xchg
lea
pop
out
or
loopne
xor
lods
mov
cld
sbb
fisubrs
inc
or
push
jmp
shll
frstor
adc
pop
fdivrs
clc
ror
cwtl
loope
inc
mov
push
stos
add
jns
push
cmpsl
insb
jge
sahf
cld
xor
mov
xchg
jmp
xchg
dec
add
cmp
mov
sbb
fcmovnb
out
mov
lods
inc
sbb
mov
in
dec
lea
pop
xchg
xchg
lds
xchg
adc
mov
stc
popf
fildl
insl
sub
sbb
pop
jp
and
push
pop
or
divb
sbb
dec
mov
adc
aas
mov
jbe
mov
or
ja
sbb
pop
mov
lahf
popa
adc
mov
insl
pushf
xchg
sub
es
jnp
and
fsubl
and
mov
pop
pop
test
pop
je
scas
lret
shr
cmpsb
jae
shr
popf
aas
xchg
jmp
incb
push
arpl
xlat
ja
pop
out
js
addr16
cmp
lea
pop
aas
int3
xchg
dec
sbb
xchg
xor
sub
add
xor
sub
loope
mov
xchg
lret
inc
mov
jmp
outsb
mov
jo
add
loopne
test
push
dec
add
mov
pushf
lcall
or
in
adc
scas
mov
push
mov
mov
pop
pushf
mov
pop
xchg
out
ljmp
dec
push
mov
and
in
lcall
or
stos
fnstcw
daa
rorl
sbb
in
pop
or
and
cmpsb
jo
pop
mov
mov
bound
jge
jmp
fdivrs
or
jne
mov
or
pop
adc
mov
add
fs
push
mov
push
mov
test
dec
jge
test
push
stos
sbb
mov
mov
xchg
sbb
je
clc
cmp
pop
sbb
inc
repnz
xor
xor
adc
test
aad
add
add
xor
stos
xchg
in
adc
mov
daa
add
ret
int
lds
stc
loope
aad
mov
out
outsb
dec
or
sbb
data16
addr16
dec
daa
jns
sarl
sbb
lahf
mov
ret
fidivl
stos
out
cmpsl
dec
push
pop
and
outsb
jge
jbe
std
in
pop
xor
xchg
push
loopne
jnp
dec
xchg
jno
cmpl
xchg
xor
and
mov
dec
test
and
sahf
loop
ds
pop
inc
adc
sub
xchg
cmpsb
loopne
dec
lcall
test
in
inc
jmp
xlat
pop
inc
ljmp
mov
iret
or
icebp
dec
mov
jae
fistpll
sub
jno
aad
sbb
pop
sub
in
cld
stos
sub
test
popa
div
das
imul
adc
sbb
mov
cmp
mov
mov
inc
outsb
jle
ret
mov
lods
pop
cwtl
or
cmp
cli
imul
push
into
lret
iret
jno
rcrl
and
mov
insl
lods
fists
scas
mov
adcb
mov
xor
mov
aam
push
aam
test
cmpsl
adc
bound
add
pop
in
pop
push
or
mov
inc
call
mov
xchg
push
sub
fcoml
sub
add
cmp
or
xor
mulb
mov
jp
lcall
sub
and
jno
popf
xor
push
fwait
ljmp
stc
cld
sub
cmc
ss
mov
test
js
loope
pop
xchg
sbb
test
gs
stos
sbb
cmp
xchg
daa
mov
mov
sbb
sbb
je
sub
scas
popf
mov
aaa
xchg
xlat
mov
xor
jnp
xchg
std
outsl
dec
xor
mov
ds
cmp
jb
or
add
xchg
pop
call
cld
pop
xchg
fldt
mov
push
inc
inc
adc
sbb
in
cld
push
movsb
mov
mov
add
enter
cltd
xchg
mov
mov
adc
scas
mov
mov
dec
test
sti
push
or
divb
sti
ror
lcall
notb
jg
fsubrp
into
jbe
sbb
je
mov
dec
cmc
jp
fs
int
cmpsb
sub
lcall
int
cli
inc
scas
and
inc
or
mov
in
cld
sti
fistpl
fdivs
cmp
or
and
push
push
fisubs
jae
dec
inc
cmp
pusha
loop
cmp
les
shrb
out
add
adc
fistpl
mov
adc
rorb
sub
jmp
dec
aaa
push
aas
lods
sub
into
mov
sub
out
lods
inc
jae
push
negb
cld
fcomp
jp
and
pop
fwait
add
repz
mov
xor
ret
xchg
out
js
xlat
lret
mov
mov
inc
pop
cs
pop
cmp
pop
ret
lods
cltd
adc
cmp
idiv
cltd
mov
aam
adc
or
into
push
call
pop
aas
in
test
stos
jg
mov
cmp
mov
icebp
jmp
addr16
je
inc
push
aad
cs
cli
in
fwait
jo,pt
adc
rolb
scas
adc
inc
add
adc
pop
add
inc
or
js
xchg
inc
cs
fsubrs
fs
loop
mov
jge
rolb
inc
nop
flds
mov
xchg
jg
cli
sahf
testl
shll
dec
or
mov
ss
jp
jecxz
pop
push
jno
push
std
mov
cwtl
inc
addr16
mov
dec
arpl
cmp
outsl
cli
jbe
fcoms
adc
mov
sahf
xor
pop
add
loope
inc
icebp
sub
hlt
sub
in
push
orb
data16
or
cmp
or
pop
cltd
sbb
pop
and
sub
adc
dec
notl
cmpsb
outsb
adc
cmp
inc
out
jns
pop
pop
jae
pop
arpl
xor
xrelease
jecxz
jg,pn
stos
jcxz
inc
xchg
les
push
iret
fsts
adc
adc
faddl
or
xor
sub
ret
dec
ret
sbb
mov
pop
es
sbb
in
xor
stos
xchg
rorb
and
push
xchg
cld
or
and
xchg
popf
jmp
hlt
je
push
fstpl
ja
jno
stos
stc
push
push
sbb
ret
mov
pop
fsub
jne
add
xchg
pop
dec
jmp
xchg
push
fdivrl
dec
fbld
movsl
lea
jecxz
lcall
insl
decb
popf
xor
dec
test
icebp
enter
mov
fcoml
jle
sub
rclb
push
test
mov
test
mov
push
adc
das
and
pop
rolb
dec
jnp
jmp
or
imul
xor
cmp
sahf
mov
out
xor
adc
dec
dec
mov
add
popf
sub
add
mov
push
mov
adcb
add
jnp
shll
or
push
jne
mov
add
addr16
test
loopne
or
mov
and
cmp
movsb
cwtl
repz
jbe
push
test
insl
or
xchg
int3
cs
mov
inc
mov
xchg
into
push
fists
fldcw
test
data16
jp
and
insl
cld
xchg
cmpsb
cmpl
push
or
adc
sbb
int
popa
push
cmpsb
leave
mov
in
cs
push
mov
xor
lahf
adc
mov
lods
jnp
daa
mov
icebp
mov
fwait
dec
fidivl
mov
cmpsb
xchg
cltd
dec
imul
shll
ret
and
or
mov
icebp
or
in
push
cmp
lea
mov
mov
mov
inc
inc
jbe
mov
and
addb
arpl
lret
adc
pop
dec
sbb
mov
test
push
pop
xchg
enter
mov
xchg
aaa
or
stc
and
cld
xor
xchg
xor
insl
sahf
mov
pop
out
test
mov
jecxz
popf
out
xor
in
push
push
fcompl
lea
jns
push
push
pop
xchg
lahf
mov
jbe
sub
and
adc
test
lods
cmpsb
mov
xchg
insb
data16
dec
inc
pop
push
sub
cmp
or
sbb
in
out
test
lods
cmpsb
mov
xchg
insb
data16
dec
inc
pop
push
sub
cmp
or
sbb
in
out
mov
lods
cmpsb
mov
xchg
insb
mov
pop
push
sub
cmp
push
in
out
test
scas
cmpsb
mov
xchg
xchg
cltd
sbb
inc
pop
and
mov
repz
jecxz
push
jp
dec
mov
mov
rclb
loop
pop
sti
add
xor
and
jb
bound
jp
dec
mov
mov
or
sbb
lret
and
mov
bound
jp
dec
mov
mov
or
sbb
ljmp
inc
stos
push
aad
lcall
adc
fidivl
mov
add
imul
pop
call
stc
sahf
cmp
push
out
movsl
daa
aad
cmp
cli
out
pop
data16
xor
push
mov
xor
xchg
jb
dec
fsubrs
movsb
mov
add
inc
scas
jb
inc
movl
xlat
jp
and
das
ret
cwtl
sbb
in
jg
xor
mov
push
push
cli
mov
xchg
out
shrb
pop
cmp
cwtl
pop
ret
lods
dec
dec
int
es
add
fidivl
pushf
xchg
pop
test
mov
enter
sbb
xor
push
aaa
adc
jb
ja
xchg
jp
dec
mov
mov
or
sbb
ljmp
and
jb
or
xchg
push
ret
and
dec
stos
outsb
mov
mov
imul
stos
adc
sub
negl
out
xlat
mov
jb
dec
xchg
popa
fiaddl
cmp
inc
out
out
or
and
cld
cmp
or
sbb
ljmp
and
jb
bound
jp
dec
mov
mov
or
sbb
ljmp
and
jb
bound
pop
ljmp
lahf
mov
enter
je
push
inc
add
pop
adc
js
push
insl
sbb
xchg
loope
pop
push
test
adc
dec
jns
xlat
dec
leave
lea
xor
aas
clc
addr16
sbb
push
lret
ror
jecxz
pusha
out
cld
cs
movsb
pop
xchg
xchg
mov
xorb
dec
mov
adc
cmpsl
fildll
xchg
mov
jne
fucomp
imul
pushf
mull
mov
sbb
pop
push
dec
push
mov
and
pop
mov
pop
stos
jb
mov
or
shlb
lods
xchg
lahf
loopne
push
push
mov
dec
cmp
and
pop
push
inc
ret
out
js
repnz
add
lret
andb
sub
sbb
mov
xor
and
xor
pop
mov
rolb
sarb
lret
dec
adc
xor
cld
sbb
dec
in
mov
mov
icebp
bound
std
icebp
cmp
arpl
xor
inc
lahf
rorb
dec
bound
shl
dec
frstor
cmpsl
lahf
sbb
test
sub
jg
and
sbb
inc
adc
aam
outsb
dec
pop
je
shrb
andl
add
hlt
sub
dec
insl
lods
sbb
int
fdivl
test
shll
movsl
scas
arpl
sarb
fists
mov
mov
jecxz
cmp
jg
push
divl
ret
jo
xor
ja
inc
ss
addr16
outsl
push
mov
sbbb
push
dec
mov
mov
adc
add
mov
cli
sbb
enter
rorl
dec
arpl
jp
pop
lea
in
jmp
xor
aam
arpl
push
mov
filds
cmp
pop
vmwrite
adc
movsb
sub
xlat
inc
mov
mov
add
add
notb
repnz
adc
adc
out
jo
dec
or
dec
dec
bound
adc
jecxz
sub
pop
fwait
jbe
popf
out
stos
iret
add
insl
outsb
out
outsb
mov
mov
repz
mov
xchg
movsb
pop
xchg
xor
and
and
xor
mov
insl
cmp
pop
outsl
add
dec
enter
cmpsl
jae
xchg
or
jp
or
mov
fs
in
dec
insb
push
ret
xchg
and
xchg
xchg
ja
mov
jge
call
sarb
xor
lcall
pop
in
ljmp
in
lahf
ret
pushf
xor
les
icebp
lret
clc
sahf
decl
pusha
popf
mov
out
cmp
push
and
rcrl
push
dec
scas
das
or
mov
mov
mov
sub
inc
test
sbb
mov
sub
jg
jne
insl
lcall
add
xlat
xor
sub
jl
sbbl
jo
mov
std
jae
ljmp
mov
xchg
mov
lahf
or
push
xor
in
mov
clc
pop
loop
xchg
mov
fistl
jp
mov
dec
stos
mov
add
and
out
imul
lods
mov
add
adc
enter
mov
repnz
push
iret
ss
cs
push
xor
cli
or
repz
test
fwait
xchg
cmc
or
add
out
bound
mov
mov
jae
xor
scas
repz
je
xor
arpl
fsubs
and
clc
mov
stos
repnz
cmp
outsl
ljmp
lcall
aam
and
out
mov
inc
jne
push
jo
sub
xor
movsl
push
pop
xorl
popf
sti
xor
std
in
cmp
out
push
mov
inc
fists
cmp
test
xor
fwait
cwtl
jp
je
xor
pop
or
sub
aam
in
mov
jmp
jns
or
pop
daa
std
xchg
jg
mov
std
dec
fistl
sub
inc
jo
add
jne
jl
dec
sarb
outsl
mov
push
pop
test
je
les
pushf
push
gs
cmp
imul
rcll
imul
cmpsb
leave
nop
pop
icebp
lahf
les
xor
push
mov
xchg
ds
push
jns
movsb
ja
loope
cld
rclw
arpl
into
xor
xor
push
adc
inc
les
insb
fistpll
xchg
or
insl
add
dec
and
idiv
xor
mov
ss
les
mov
lds
inc
fwait
test
sti
fistl
xor
ja
xor
inc
push
jmp
fwait
jns
or
sbb
jmp
push
xchg
jne
jge
push
pop
push
int3
std
mov
pop
lret
inc
adc
jecxz
sub
data16
movsb
aad
mov
cli
push
mov
pop
rcr
inc
mov
and
or
lock
sbb
mov
test
cs
xor
fstps
imul
hlt
popf
mov
xchg
stos
xchg
push
cmp
shl
or
mov
test
mov
fidivrs
lret
nop
ljmp
dec
je
cmp
jb
inc
repz
int
int
es
repz
dec
adcl
lds
lret
jno
add
jge
test
pop
sbb
add
sbb
pop
jg
ss
aam
add
pop
jb
cmp
inc
push
mov
aas
sbb
adc
cmp
bound
aas
lahf
ja
or
lea
sub
or
cs
pop
mov
lret
or
fwait
ljmp
scas
xchg
cli
dec
lea
xlat
rorb
xchg
push
loopne
sub
cmc
xor
pop
xor
dec
out
pop
hlt
popa
or
cmp
add
xor
notl
pop
sbb
fadds
subl
idiv
stos
inc
pop
inc
inc
mov
jmp
xchg
ljmp
fidivrs
xchg
movsb
xlat
dec
push
sub
out
imul
pop
push
hlt
jle
push
jmp
fwait
out
dec
rorb
repnz
xor
mov
add
out
rcl
xchg
out
in
or
ljmp
mov
inc
adc
inc
mov
fists
imul
add
ja
mov
cmpsb
pop
pop
mov
adc
inc
loopne
mov
lods
aas
dec
cwtl
and
push
jge
ja
scas
mov
sub
mov
je
clc
std
mov
cs
les
inc
gs
pop
sub
mov
je
push
pop
mov
xor
shr
lods
jne
add
cwtl
xchg
aad
push
cmp
sbb
cmp
in
rcrb
xor
pop
loopne
bound
pop
outsl
add
pop
in
and
mov
out
or
in
pop
das
fisubl
dec
jb
mov
mov
cmp
pop
pop
and
arpl
ret
mov
arpl
ret
inc
push
cmp
add
push
sbb
gs
xchg
xchg
dec
rorb
dec
cli
call
and
stos
mov
jne
shlb
ds
int3
je
sahf
mov
pop
mov
ret
rcl
inc
lock
push
mov
mov
mov
jmp
lcall
aas
jecxz
cmp
int3
and
jge
enter
sub
or
sbb
mov
dec
push
bound
or
pop
fsub
push
int3
inc
pop
imul
cmp
pop
aad
mov
sub
pop
cmp
jo
pcmpgtw
and
inc
mov
cmc
stc
arpl
mov
imul
ljmp
insb
imul
popa
addr16
aas
int
cmp
or
rorb
fmul
sub
gs
daa
pop
jo
lds
out
mov
fistl
push
and
or
aam
pusha
xlat
xor
mov
mov
dec
xchg
cld
vpaddb
in
and
mov
xchg
lods
cmp
daa
iret
insb
and
loop
pop
dec
sub
xchg
mov
rolb
ja
test
and
sbb
push
inc
int
and
jnp
push
insl
ja
push
aaa
movsb
mov
adc
xchg
jns
pop
push
aas
jae
ret
or
sub
dec
test
mov
adc
xor
sbb
insl
xorb
loopne
jmp
out
push
mov
jnp
xchg
test
sbb
repz
fnstenv
or
mov
mov
loope
pop
xchg
lock
cmp
cmp
sub
addr16
push
cltd
mov
xor
mov
cld
mov
jge
mov
pop
rclb
push
cltd
adc
and
jb
sbbl
fists
mov
dec
mov
mov
jo
lods
out
ret
xor
jl
std
les
pushf
push
jo
sahf
fs
je
sahf
and
insl
loopne
testl
in
lods
xor
mov
cmp
shrb
clc
shrb
imul
cs
push
inc
add
mov
ret
cmp
scas
scas
adc
sti
xchg
ror
fwait
push
and
push
mov
push
and
div
dec
sub
fwait
hlt
shl
dec
mov
mov
scas
pop
pop
daa
mov
pop
pop
lcall
jae
in
cmp
es
cmp
push
lret
pop
fisttpll
jmp
pusha
cmp
inc
or
inc
adc
sbb
aas
in
pop
or
aaa
pop
aam
mov
or
fsubrl
bound
arpl
cmp
lods
movsb
adc
and
dec
push
out
sbb
xchg
inc
fdivp
jne
stos
jno
inc
and
and
out
fdivrl
pop
dec
pop
mov
xor
push
pop
nop
dec
xor
gs
cmpb
sbb
lods
or
shrl
mov
pusha
les
mov
ljmp
pop
imul
add
xor
mov
xor
imul
enter
inc
push
cltd
nop
out
out
shlb
and
and
lods
cmp
sub
or
outsl
mov
sbb
mov
or
cld
ss
or
js
jmp
sbb
dec
cmpsb
in
cmc
push
out
icebp
dec
xchg
insb
or
in
xor
jge
xchg
lods
imull
inc
ss
shlb
arpl
fsubp
push
push
fnsave
arpl
ja
lahf
call
add
aam
mov
mov
push
xor
test
adc
mov
xor
outsl
leave
fwait
cltd
out
in
int3
and
adc
push
outsl
shr
and
loope
xor
js
dec
inc
aam
jl
pop
lret
outsb
push
and
popf
pushf
mov
adc
add
and
xor
mov
mov
test
imul
call
aas
inc
mov
outsb
mov
fcmovnb
cmp
shlb
iret
sub
je
mov
and
or
xor
scas
call
mov
xchg
mov
std
lods
pop
sarl
das
jecxz
jns
int3
ss
sbb
mov
sub
mov
aad
jge
pop
int3
inc
jbe
ja
pop
inc
enter
stc
daa
stc
aaa
pop
pop
rcrl
adc
test
lock
adc
mov
sub
lcall
aad
push
hlt
aaa
xor
xchg
mov
stos
aas
inc
mov
push
push
mov
loop
lret
jecxz
add
stc
pop
ja
lret
sbb
cli
out
xchg
lock
xor
adc
adc
adc
frstor
xchg
lods
scas
hlt
sub
aas
rclb
mov
jae
mov
xchg
scas
ja
mov
icebp
jnp
cs
add
sub
and
sub
jns
mov
jo
negb
aad
mov
inc
mov
clc
inc
mov
inc
or
add
rcrb
sub
and
mov
xchg
mov
dec
cmp
mov
xchg
mov
mov
stos
stos
add
add
adc
cs
inc
popl
sub
jl
or
out
add
dec
ja
cltd
jl
aaa
mov
sbb
data16
mov
add
mov
ja
dec
mov
scas
dec
mov
les
sub
aaa
int3
push
lock
lret
add
ret
dec
cmpl
pop
xchg
mov
push
ja
divl
imul
aad
aad
cmpl
push
outsb
mov
mov
pop
rcr
sub
or
cmp
pop
jg
into
add
int
xchg
idivl
jmp
push
jns
sub
pop
lea
adc
notb
dec
push
ret
xor
stos
add
in
add
orl
arpl
mov
stos
pop
icebp
sbb
lods
les
outsl
sbb
orl
jmp
mov
adc
pop
jp
push
pop
lret
lods
adc
iret
inc
sub
ds
jnp
jno
fst
push
daa
fidivs
mov
pusha
stos
gs
ret
or
subb
cltd
adcl
inc
xchg
cmpsb
xchg
xlat
fs
fstps
and
lret
lods
lea
pmaxsw
xchg
sub
enter
int
imul
xchg
fdiv
or
sbb
xchg
xor
daa
or
sbb
and
push
ds
daa
loope
sub
inc
aad
mov
cmc
dec
mov
inc
fwait
pop
xchg
int3
insl
sbb
push
inc
push
out
or
dec
mov
jno
mul
cwtl
nop
dec
add
jle
adc
adc
mov
pushf
xlat
je
xchg
lret
sub
cmp
aas
xor
dec
inc
mov
push
fs
jg
inc
dec
add
imul
movsl
stos
pop
sub
and
mov
inc
imul
call
int
push
outsl
mov
pop
outsl
sub
xchg
aaa
test
sbb
outsl
outsl
cmp
js
lods
cmp
lahf
aas
cmp
cmp
frstor
aad
inc
push
jmp
mov
loop
and
jns
inc
push
and
test
inc
jmp
enter
lods
int
push
dec
add
je
and
stc
les
pop
mov
icebp
pop
mov
push
mov
or
add
lahf
cli
sarl
inc
lds
stos
sub
pop
inc
jae
pop
popf
ljmp
cmpsl
mov
cmc
aam
fcomps
inc
xchg
cli
mov
mov
mov
int3
popa
repz
loop
pop
sarl
lea
icebp
add
sbb
stc
stos
stos
js
rep
cmpsl
scas
mov
jnp
cli
jmp
push
sub
inc
ja
cmpsb
das
aam
repz
xchg
pop
inc
loope
dec
out
outsl
cmpsb
testb
iret
jmp
jl
std
subb
iret
mov
xor
and
mov
cltd
push
xor
int
jp
xchg
mov
aad
test
mov
jne
enter
fabs
sbb
cmp
and
mov
mov
cmp
pop
and
sub
add
int3
loop
fs
or
jns
mov
pusha
sub
dec
nop
fdivs
mov
adc
cli
aas
add
pop
sbb
add
jns
sarb
cltd
in
inc
sub
xchg
or
inc
dec
jg
lock
lods
inc
jl
stos
jb
sbb
sub
in
lret
aas
sti
pop
push
pop
xchg
mov
into
add
inc
gs
gs
jne
psubb
cmp
and
sbbb
mov
sub
imul
insb
jmp
inc
mov
xchg
xor
push
sahf
ficompl
invd
xchg
andl
push
fstpl
adc
cmpb
sbb
daa
imul
into
sbb
or
sub
repz
je
xchg
das
out
jge
cltd
shrl
ret
out
mov
cmpsb
out
sub
sbb
lret
fnstsw
jg
in
mov
adc
jns
inc
or
xor
xchg
jns
in
push
mov
shlb
mov
mov
xchg
ss
adc
xor
outsl
inc
jne
gs
jle
scas
xorb
pop
orb
adc
out
call
mov
sbb
dec
pop
stos
pop
mov
jp
shlb
or
cmpsl
rolb
aaa
popf
test
mov
lret
adc
push
mov
mov
rol
jno
in
outsl
inc
mov
sahf
cmpsl
jbe
fisttpl
push
push
cmp
int3
jp
mov
stos
mov
or
pop
bound
js
jle
mov
mov
inc
mov
cs
jne
sub
dec
push
sub
cld
dec
lds
icebp
mov
dec
adc
mov
cli
cltd
mov
cmp
js
xchg
mov
mov
mov
into
icebp
imul
sbb
pop
inc
pushf
iret
xchg
sti
mov
push
dec
aas
les
cmp
emms
mov
xchg
cmp
out
arpl
sbb
imul
mov
cli
sbb
push
add
pop
mov
ss
popf
faddl
xchg
xchg
pop
movsl
aaa
pop
pop
mov
adc
in
outsl
lahf
stos
xor
xor
call
das
pop
mov
popa
les
mov
mov
std
push
inc
mov
sbb
fldenv
inc
ret
loop
sbbb
clc
sub
mov
jecxz
dec
ror
fisttpll
sbb
pushf
and
jo
pop
testl
movsb
sub
stos
and
sub
test
mov
add
add
aad
negl
push
push
test
jbe
inc
pop
test
adc
iret
mov
sti
js
rclb
dec
imul
jbe
jne
sub
adc
outsb
inc
rorb
push
jmp
mov
add
dec
and
mov
jo
sub
lret
sbb
dec
sbb
dec
sbb
sub
lret
pop
pop
push
sub
or
leave
test
ret
dec
mov
dec
mov
cmpsb
andb
ss
scas
adc
lcall
push
cmp
ret
pusha
sbb
adc
jae
fnstsw
ljmp
xchg
xor
pop
xor
jne
pusha
rorb
fisttps
or
inc
push
push
pop
and
sarl
pop
sbb
xchg
sbb
mov
in
jb
sbb
cld
push
sub
call
mov
inc
mov
gs
or
xor
or
or
loop
mov
pop
dec
pop
cmpsl
cli
lods
pop
jmp
push
popa
rorl
les
pop
jbe
out
stos
fdivrp
push
jle
add
jp
loop
and
push
movsl
mov
test
rcl
lahf
push
cmp
dec
sub
lcall
pop
mov
jmp
adc
xlat
pop
test
xor
add
mov
sub
push
nop
lock
leave
aaa
cmp
lahf
add
pop
inc
daa
pop
jns
pop
aad
jp
insb
dec
push
dec
mov
cmp
mov
loop
cmp
int
adc
mov
cmp
fmuls
inc
mov
cmp
jnp
push
dec
xchg
movb
imull
cmpsl
add
fsts
popf
scas
cmpsb
imulb
mov
ds
xchg
iret
test
jmp
scas
fdivl
and
cmp
clc
sub
loope
mov
sub
add
divb
jmp
fnstenv
fcomps
sbb
push
xlat
outsb
mov
dec
jmp
outsb
jmpw
mov
adc
in
addb
xchg
pop
out
lea
fwait
cmpsb
dec
inc
sbb
pop
lret
mov
in
xor
and
cs
lahf
hlt
cmp
dec
dec
or
and
sub
aaa
cmp
in
inc
sti
es
mov
sub
inc
fdiv
pop
or
pop
xchg
inc
jbe
fstl
stc
into
dec
ret
mov
addl
js
loop
in
inc
push
or
inc
aas
adc
adc
jnp
aas
lea
add
mov
pop
jno
adc
dec
inc
daa
and
iret
stc
inc
in
mov
loopne
aam
stc
arpl
adcb
int3
nop
mov
imul
sbb
inc
mov
adc
pop
aas
jb
test
inc
push
int
xchg
test
loope
add
out
insb
jno
sub
popf
xchg
fnsave
mov
fbstp
pop
mov
and
imul
idivb
mov
faddl
test
scas
xor
xor
pop
in
scas
push
xor
insl
xlat
outsl
inc
call
add
xchg
adc
int3
cld
dec
loope
pop
repz
inc
incl
sub
cmp
or
sbb
ljmp
and
jb
bound
jp
dec
mov
mov
or
sbb
ljmp
and
jb
bound
cli
or
pop
mov
or
lcall
xor
and
jb
bound
jp
dec
mov
mov
or
sbb
ljmp
push
fcmovu
lret
ljmp
mov
add
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
and
aas
incl
jo
or
pop
mov
outsl
push
pop
loopne
lock
scas
adc
and
push
fbld
jo
subb
jle
cmpxchg
shrb
mov
pop
adc
inc
push
shll
pop
sub
ja
push
adc
sbb
lock
jecxz
lahf
dec
out
sti
xchg
mov
mov
sbb
inc
cmc
xorb
call
push
nop
pop
inc
or
rol
outsl
scas
push
inc
xor
push
repz
pop
mov
mov
ljmp
adc
jge
outsl
or
dec
outsl
shrl
xchg
pop
jae
arpl
arpl
add
push
and
iret
ds
das
cld
fwait
pop
icebp
loopne
stos
outsl
das
pop
pop
dec
jge
loopne
out
mov
inc
addr16
push
jne
repz
jl
pop
pop
dec
jo
shrb
cmpsl
pop
inc
jge
xchg
xor
sahf
inc
jno
add
cli
nop
or
sub
repnz
pop
pop
hlt
dec
icebp
in
stc
adc
inc
xchg
push
fbld
jo
xorb
aaa
shlb
loopne
cltd
outsl
fstl
jmp
negl
sub
push
stos
cs
and
in
in
enter
mov
sub
in
and
inc
xchg
or
jo
clc
jge
pop
shll
mov
push
mov
decb
push
lods
inc
out
push
fbld
jo
subb
pop
mov
outsl
rcrb
dec
lock
and
push
fbld
jo
subb
pop
mov
outsl
rcrb
dec
lock
xchg
dec
ja
mov
andb
pop
push
push
rcrl
in
movsb
pop
and
adc
pop
shrl
or
ja
sti
dec
bound
jl
cmp
add
or
cmpsl
idiv
outsl
out
bsf
push
inc
push
xlat
in
and
lea
sbb
out
repz
adc
pop
pop
jbe
inc
imul
inc
cmp
jne
sarb
rcr
sub
sti
adc
sub
or
cs
sahf
sub
inc
scas
jl
gs
mov
push
push
gs
es
xor
scas
or
ret
mov
push
jge
xchg
lcall
test
lahf
scas
add
out
loope
mov
ror
mov
outsb
cmpb
arpl
into
xchg
inc
mov
scas
and
inc
inc
ss
in
jl
push
out
ret
jbe
idiv
xorb
or
sub
fldt
or
int
and
lahf
sahf
xlat
sub
inc
mov
xchg
pop
imul
popa
popf
sub
xchg
mov
fadds
lret
mov
testl
and
stos
bound
add
loopne
test
addb
loope
sbb
das
mov
stos
jmp
push
loope
sub
jmp
mov
fisttpl
lret
fisubrl
xchg
or
sbb
jle
test
pusha
sbb
or
sbb
loope
jae
xlat
sub
ds
adc
sti
mov
xchg
mov
pop
cmpsb
pop
push
movsb
cmp
insl
arpl
cli
icebp
mov
mov
pop
lahf
jl
imul
pop
sar
cltd
or
lret
mov
mov
pop
pop
enter
ja
mov
jne
lea
adc
lret
adc
push
mov
lods
icebp
or
inc
dec
int3
test
pop
fdivrl
jo
js
or
in
lcall
push
outsb
pop
inc
pop
push
int
mov
jle
addr16
fbstp
lahf
fs
sub
stos
xor
cmpsb
xchg
cmp
repnz
stc
ret
pop
or
inc
fwait
outsl
andl
ja
xchg
scas
popa
movsb
add
pop
ljmp
inc
xchg
dec
bound
insl
pop
enter
xchg
mov
lea
add
sub
ds
cmp
push
adc
sbb
pop
pushf
cmp
maskmovq
imull
jns
fcom
int
div
push
subb
mov
inc
adc
push
and
xchg
push
shr
dec
add
ret
adc
cmp
insl
jecxz
and
repz
lcall
lods
cs
cmpsl
sti
and
push
lods
aam
pushf
jnp
adc
imul
pop
rcll
jmp
lret
fs
or
in
int
inc
call
rcl
adc
xchg
dec
loop
cmp
or
pop
cli
jle
pop
inc
mov
in
xchg
popa
rcrb
xor
je
xchg
test
mov
scas
sbb
nop
lock
sti
xchg
clc
and
push
dec
sti
lcall
cwtl
push
sub
cmpsl
addl
pop
cli
cmp
test
sub
jnp
mov
mov
cmp
out
fimull
enter
ljmp
mov
sti
out
or
mov
sub
ds
pop
int3
rorb
decw
adc
jae
dec
jns
and
dec
sarb
mov
sub
xchg
mov
lret
clc
pop
cmc
roll
jnp
mov
add
sti
outsb
pushf
in
xor
popf
push
sahf
in
iret
inc
add
push
mov
mov
cmc
gs
pop
popf
sub
ficoms
dec
mov
ret
jb
movsb
xchg
inc
push
inc
loop
into
divl
mov
cmp
add
sbb
mov
repnz
mov
xor
inc
mov
inc
mov
ljmp
inc
cmpb
mov
lods
outsl
inc
ret
or
imul
add
lods
loope
sub
iret
lahf
movsl
sub
push
xorl
ss
ljmp
jmp
clc
pop
lret
pop
into
jae
mov
sbb
cmp
stos
dec
add
test
xchg
insb
aas
stos
add
mov
loope
mov
mov
push
es
ss
cmp
sub
push
mov
jne
mov
xor
test
out
aas
test
jbe
pop
cmp
mov
and
sbb
bound
adcl
sub
mov
stc
shr
jb
xchg
pop
push
mov
fldl
pop
xchg
pop
lret
and
cmpsl
fwait
ret
mov
outsb
adc
out
test
jmp
jle
jns
cmpsb
xchg
push
push
cmc
addr16
sbb
fsubr
dec
mov
jae
rol
ljmp
fnstcw
lock
push
ret
ss
ret
pop
xchg
aaa
mov
inc
or
jg
add
imul
popf
pop
daa
push
mov
jno
dec
xor
in
and
xlat
jp
push
fcomp
cltd
loop
push
dec
xorb
imul
dec
cwtl
mov
sbb
mov
sahf
scas
rcl
jl
aad
dec
or
push
stos
shrb
das
or
repnz
inc
dec
imul
scas
and
in
mov
jmp
hlt
cmp
ds
sbb
lret
js
aad
xchg
fldenv
rcll
rcrl
pop
fwait
das
dec
mov
aad
sbb
sbb
mov
shl
pop
push
jae
stos
dec
jne
mov
lret
iret
sub
xchg
xchg
mov
stos
insl
xchg
xchg
iret
mov
inc
push
pop
add
adc
movsl
cmpsl
xchg
mov
mov
push
pop
jl
mov
jb
or
es
pusha
lock
lahf
sti
lods
outsl
dec
sub
push
xlat
cmp
dec
cli
mov
in
in
sub
cwtl
jmp
inc
stos
jmp
rclb
xor
pushf
stos
and
pusha
inc
mov
push
and
leave
nop
out
adc
dec
xchg
mov
mov
insb
jo
push
jbe
repz
scas
iret
les
push
mov
enter
ljmp
jge
aaa
jb
push
mov
out
loope
push
pop
mov
popf
loope
push
mov
xchg
xlat
shll
addr16
dec
not
cmp
test
mov
notb
mov
add
mov
jne
out
dec
push
mov
les
mov
ljmp
int3
ficoms
and
in
pop
xor
add
std
imul
mov
adc
std
mov
data16
fwait
in
mov
add
hlt
xor
fwait
xor
inc
cli
mov
leave
lods
xchg
hlt
cld
pop
sbb
out
jmp
jnp
enter
push
cltd
xchg
adc
mov
cli
mov
mov
mov
stc
imul
mov
xchg
sahf
les
stos
shrb
rolb
lret
mov
stc
mov
test
loope
inc
sbb
sub
pop
es
cmpsb
push
lock
repnz
and
adc
xchg
call
stos
emms
cwtl
xor
movl
mov
in
push
add
outsl
adc
push
cmp
mov
xchg
or
aam
mov
jo
dec
out
mov
sbb
insl
mov
pop
test
inc
call
icebp
fildl
xor
sti
xchg
inc
in
mov
jge
outsl
add
subb
sti
push
xor
push
xchg
jle
lcall
sahf
lods
mov
jg
movsl
and
lea
add
push
in
out
and
addr16
adc
shll
xor
xor
inc
cld
pusha
inc
loope
inc
cmpsl
xchg
in
push
push
aas
push
xchg
iret
and
sahf
jecxz
cmp
mov
adc
je
push
mov
and
adc
lods
cmp
xchg
insl
mov
arpl
fstpt
inc
nop
sti
jne
push
ret
jo
push
add
cmp
jp
xchg
or
mov
das
sbb
jb
idivb
dec
push
push
cwtl
mov
and
xor
and
push
stos
cmp
add
in
ret
fwait
test
dec
xchg
clc
adcb
cltd
lds
scas
inc
inc
xor
xlat
aam
hlt
orl
cwtl
mov
pop
add
ficoms
mov
dec
leave
es
faddl
mov
rorb
pop
ja
xchg
into
pop
repz
sub
cwtl
sub
fldl
push
sub
out
fwait
lret
cmpb
and
xchg
jne
aam
incl
push
lahf
adc
imulb
jbe
push
add
dec
icebp
cltd
mov
scas
jns
fs
fdivr
push
adcb
mov
xchg
dec
sub
into
inc
nop
jg
mov
push
adc
enter
int
mov
xchg
imul
dec
jle
inc
out
bound
mov
pop
mov
pop
loope
scas
mov
in
cmp
icebp
in
stc
cli
imulb
jo
cli
je
fimull
dec
cmp
xchg
cmp
push
mov
adc
outsl
rcrl
outsb
sbb
pop
push
mov
add
push
and
sbb
mov
mov
mov
out
aam
pushf
push
aaa
jno
fidivrs
mov
and
loope
sub
and
call
cmp
es
adc
bound
mov
fcmovbe
xchg
jae
sbb
lahf
xchg
push
dec
sbb
outsl
inc
inc
test
out
psllw
mov
aam
mov
dec
pusha
dec
fisttpll
mov
std
lret
push
sbb
xchg
lret
mov
mov
cmpsb
daa
mov
dec
aam
inc
dec
sub
jns
pop
cmc
xor
fildll
aad
cmp
ja
jne
sbb
mov
lcall
mov
test
test
adc
inc
clc
mov
mov
mov
sub
rolb
das
shl
pop
cmpb
dec
fsubp
test
pop
fisubs
dec
ret
and
mov
xchg
loop
adc
push
pop
sarl
cmpsl
rcll
loopne
test
pop
std
adc
popa
xchg
cmp
dec
or
mov
in
sbb
xlat
cmp
mov
sbb
jp
lret
cmc
adc
and
lcall
xor
mov
repnz
xlat
ss
pop
xor
rol
nop
adc
mov
jl
ret
js
test
mov
xchg
pmulhw
nop
mov
call
lahf
lods
cs
negl
ud1
jb
sub
out
addr16
outsl
jns
mov
add
aad
xlat
arpl
stos
xchg
dec
pop
ljmp
cmpsl
in
pop
and
pop
out
adc
pop
pop
push
pop
pushl
frstor
pop
test
lock
xchg
or
mov
sub
dec
repnz
dec
fdivs
fcomps
imul
jecxz
inc
pop
data16
aad
pop
mov
call
inc
cmpsl
test
jl
aas
cli
dec
and
mov
lea
aad
xchg
std
pop
push
mov
movsb
js
mov
pop
pop
hlt
in
xorb
nop
mov
iret
mov
shrl
lods
add
test
jg
cltd
and
mov
stos
sbb
shlb
jno
jg
loop
aas
jecxz
mov
pop
test
push
mov
and
add
in
aam
cli
dec
jno
inc
in
xchg
test
insl
mov
mov
idivb
xor
daa
aam
pop
lock
cmp
loop
pop
ljmp
jne
imul
push
mov
mov
out
xor
cmpsl
hlt
cmp
jge
push
add
mov
cli
jecxz
imul
jo
mov
jae
addr16
add
pushf
inc
fwait
daa
testb
fwait
xchg
push
pop
xchg
out
call
mov
or
arpl
add
mov
inc
mov
int
lret
shll
out
adcl
loop
push
cltd
clc
and
jns
adc
mov
cmpsl
cmp
insl
cmp
jae
sarb
fcoml
test
fld
stos
idivl
and
jge
jmp
stos
cltd
add
or
jmp
mov
data16
stos
int
adc
pop
out
cld
hlt
rcll
and
inc
jg
mov
fwait
push
sbbl
mov
xchg
fs
xchg
push
int3
shll
pop
loopne
dec
int3
inc
jmp
ret
inc
repnz
jecxz
mov
add
pop
xchg
mov
in
jb
cmp
dec
cld
sub
xchg
ret
mov
jp
enter
flds
and
lahf
sub
ss
movsb
xor
mov
outsl
sahf
or
mov
add
add
adc
jle
loopne
cmp
es
frstor
jno
imul
cmp
aam
or
cli
adc
inc
push
mov
iret
js
rolb
popa
or
sbb
mov
cmp
les
jne
jle
push
fcomps
adc
cmpsl
enter
xchg
pop
mov
pxor
mov
jle
pop
gs
lret
dec
divl
inc
sahf
js
push
push
inc
lret
repz
xchg
xchg
push
pop
test
mov
jmp
dec
js
jae
cmp
fdivrl
pop
pop
and
inc
and
inc
fidivrs
cmp
lahf
pop
xchg
and
mov
orl
lret
mov
mov
fstps
fiaddl
push
leave
sbb
dec
dec
in
inc
pop
cmp
das
enter
fisttps
ljmp
lcall
dec
xchg
xchg
vucomiss
stos
out
cmp
xor
aad
cmp
push
xchg
nop
repnz
sub
insb
sub
fists
dec
inc
mov
jnp
pop
outsl
pop
cs
clc
lea
cmc
xchg
push
test
sti
xor
fs
iret
imul
loopne
sbb
xor
movsb
push
dec
push
popf
jl
add
adc
add
mov
int3
pop
loope
cltd
stos
rorl
adc
or
jp
cwtl
lods
inc
imull
pop
xor
out
mov
dec
jecxz
and
jge
out
and
outsl
and
rcrl
xchg
mov
iret
add
push
leave
sbb
inc
adc
testl
or
and
xor
inc
xor
push
xchg
fstpl
shll
imul
push
pushf
lcall
popa
andb
insb
fildl
aas
mov
push
and
xor
mov
aam
lods
insl
loopne
out
iret
adc
jmp
push
jae
and
adc
jecxz
add
mov
sbb
lock
xchg
cmp
outsl
mov
push
pop
sbbl
sbb
or
xchg
xchg
in
dec
inc
push
les
test
mov
pop
call
shlb
push
sbb
into
jp
mov
xor
jbe
sub
cli
push
lods
xchg
shrb
jb
stos
push
mov
in
fs
inc
mov
xchg
subl
int3
inc
mov
pop
es
ror
scas
mov
xchg
xor
pop
aam
flds
dec
sub
loop
popa
cmp
ficompl
xlat
sti
out
lock
outsl
xchg
dec
jns
and
add
fidivl
mov
adc
shll
cltd
xchg
sub
jmp
mov
push
lahf
pop
pop
or
add
add
adc
mov
adc
and
mov
cmpsb
pop
inc
leave
rolb
mov
mov
push
out
hlt
fsubrl
jmp
sbb
ljmp
mov
repz
fldpi
rolb
jge
iret
mov
inc
rolb
out
xorb
mov
popf
int3
into
jnp
push
cmpsb
sub
add
mov
push
ss
scas
nop
cld
hlt
shll
lret
insb
xor
mov
mov
mov
push
insb
pop
out
stc
push
mov
jg
and
fwait
push
or
movsl
scas
or
cmpsl
xorl
jne
ljmp
cwtl
ljmp
dec
mov
pusha
push
add
mov
ds
mov
or
pushf
push
jb
dec
jecxz
sbb
and
add
fstps
popa
sahf
jae
addb
fwait
es
iret
mov
push
les
loope
mov
or
in
xchg
mov
pop
ret
popa
and
clc
mov
inc
ret
mov
mov
shl
fadds
pslld
inc
pop
mov
add
lods
into
rcll
push
dec
insb
shrl
aam
jnp
dec
or
movsb
sub
xor
mov
jb
stos
loopne
xorl
faddl
dec
adc
leave
or
dec
cld
stos
lahf
sahf
pushf
cwtd
lods
cli
in
push
jns
push
xor
xor
dec
inc
ljmp
sbb
push
inc
jl
sub
aaa
add
adc
sbb
push
outsb
mov
sbb
testl
lods
aas
sub
sbb
les
or
cmp
sbb
sbb
pop
xchg
lret
add
push
sub
push
xor
test
and
lret
xchg
lret
pop
movsb
adc
mov
outsl
jo
xor
jo
cmp
mov
fisttpll
adc
sarb
jmp
mov
rcrb
sbb
in
int
sbb
add
sahf
aad
jo
out
sbb
das
xchg
lahf
int3
lret
in
bound
in
call
ja
jl
fstpl
and
fwait
enter
mov
jmp
push
lods
fisubl
pop
and
aam
cmpsl
shll
or
jo
cmpl
loop
std
je
in
jge
dec
pop
dec
repz
fimuls
je
mov
movsl
aaa
sub
dec
sbb
lcall
adc
shrl
cmp
mov
mov
xor
mov
mov
sbb
jge
rcrl
inc
inc
xor
mov
mov
fwait
sbb
stc
loope
sbb
dec
jbe
adc
fsubr
sub
mov
pop
aad
outsl
push
mov
dec
push
and
sub
mov
mov
sbb
test
scas
inc
push
outsb
push
sbb
lea
imul
jae
mov
es
nop
out
mov
roll
sar
clc
stos
loop
xchg
sbb
jbe
ror
icebp
sub
and
in
int
ret
cld
sbb
into
push
dec
xchg
rorl
add
cmp
lret
mov
or
jnp
fcomps
imul
mov
and
int
sbbl
repnz
ja
leave
jmp
lret
adc
pop
ds
clc
shlb
jmp
loope
mov
or
sbb
push
cmp
pop
xchg
pop
das
in
xor
test
mov
or
ret
mov
aas
pop
cmp
jb
fsubrl
rorl
cmp
ljmp
inc
in
insb
imul
lahf
jge
mov
mov
roll
pop
mov
int
dec
pop
cmp
dec
out
shll
xchg
into
rorl
mov
mov
jb
jecxz
loop
sti
cmp
inc
fcoms
sbb
jecxz
mov
sbb
and
fmulp
loope
dec
xchg
pop
loope
pop
jp
xchg
leave
and
int3
sbb
cmp
fildll
xor
jns
cli
cmp
int3
js
sub
loop
push
pop
movsb
mov
or
mov
dec
add
int3
adc
xor
jge
xchg
cltd
push
or
push
and
cs
cmovb
or
dec
arpl
dec
andl
aas
mov
pop
mov
aaa
jle
xchg
ret
pop
shl
aam
leave
filds
mov
scas
movsl
imul
push
dec
adc
mov
xchg
fisubl
or
fidivl
xor
and
fstpt
out
cmc
xchg
ffree
lods
add
push
nop
daa
push
and
cmp
loopne
aaa
in
dec
or
pop
jge
and
jo
adc
mov
and
arpl
xchg
xor
scas
mov
xchg
pop
bound
pop
dec
stc
call
daa
idiv
push
mov
aam
negb
xor
lcall
pop
addr16
mov
xlat
bound
or
xor
cmp
mov
lods
fdivl
sarl
pop
cmp
sbb
inc
mov
pop
pop
jp
inc
cmp
out
pop
loopne
ret
xchg
mov
mov
pop
cmpsl
sub
xchg
and
sub
outsl
outsb
shl
push
stc
push
or
addr16
shrb
arpl
orb
jb
adc
dec
add
sub
or
jle
jbe
filds
jle
fsubs
xor
inc
out
push
fbld
jo
subb
pop
mov
outsl
rcrb
dec
lock
and
push
fbld
jo
subb
pop
mov
outsl
rcrb
dec
lock
mov
out
rcr
pusha
pshufw
das
nop
out
mov
jg
pop
loopne
lock
add
adc
and
push
fbld
jo
adc
mov
cmpxchg8b
dec
out
mov
arpl
jae
inc
ds
hlt
fwait
jle
or
sbb
mov
sahf
repnz
xlat
mov
cmp
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
jp
push
pop
ds
dec
cmp
outsb
sbb
mov
sahf
ror
mov
mov
into
icebp
xchg
cld
jle
push
add
outsb
xor
jmp
repnz
loopne
cld
popf
mov
ret
cmp
arpl
add
push
shl
or
sti
sbb
or
xor
and
out
push
imul
pop
or
test
sbb
xor
dec
mov
into
repz
test
push
or
mov
mov
mov
jb
mov
xchg
sahf
add
scas
cmp
pop
cs
lea
jl
xor
loope
jge
sub
cmpsb
jecxz
inc
outsb
or
out
jmp
cmp
mov
negb
fldcw
add
cltd
fstpt
sub
mov
push
out
cmp
arpl
pop
ds
dec
and
outsb
add
mov
sahf
jmp
fidivrl
stos
out
cltd
xchg
jp
pop
add
jo
or
outsl
sbb
mov
rol
mov
xchg
mov
in
mov
push
or
pop
xor
sub
cmp
ja
and
xchg
repz
cmpsb
fcmovnbe
test
lods
mov
in
out
arpl
jae
daa
push
push
movups
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
pusha
mov
test
fimuls
mov
sbb
popf
sbb
shrl
push
sbb
adcb
mov
add
mov
mov
mov
stos
test
add
loopne
nopl
fdiv
out
mov
jecxz
inc
jns
scas
inc
lret
adc
dec
push
jecxz
jae
sub
scas
cs
xchg
push
or
xchg
pop
je
enter
jl
lods
sub
xlat
xchg
inc
and
dec
iret
push
stos
push
or
cld
jb
ret
xor
inc
mov
or
out
out
adc
pop
lret
testl
pop
daa
and
gs
and
dec
push
shl
mov
enter
addr16
mov
cmpsb
sub
fs
sub
cmpsb
repz
inc
dec
popa
pop
inc
and
cmc
cs
inc
or
in
xchg
push
bound
adc
jbe,pn
repz
mov
lcall
pusha
jno
add
or
add
mov
lods
lock
nop
pop
loopne
sbb
sub
nopl
mov
lahf
pop
pop
push
push
in
mov
mov
popf
ljmp
loop
mov
xchg
mov
adc
xor
arpl
push
outsl
inc
dec
and
sbb
jae
int
test
ja
cmc
mov
es
xor
push
movsb
insl
testb
inc
xchg
xchg
mov
cmp
mov
cmpsb
movsb
xchg
in
insl
popa
sbb
lret
inc
enter
inc
orl
mov
test
adc
adcb
and
mov
sbb
dec
out
jg
imul
mov
adc
mov
dec
dec
insb
lea
mov
xchg
mov
adc
mov
data16
jb
push
pop
cmc
loope
in
add
fbstp
out
pop
lret
rorb
inc
ds
ss
sub
add
jecxz
xor
test
inc
fidivs
leave
add
pop
loope
mov
xchg
in
push
loop
test
jmp
mov
dec
pcmpgtb
xor
xchg
adc
mov
stc
sub
mov
mov
xchg
aaa
aas
mov
shll
lcall
push
adc
ljmp
cltd
repnz
push
adc
jge
in
inc
imul
shll
out
mov
jecxz
inc
add
cmp
out
pop
dec
sub
rcl
imul
add
fs
loope
push
pop
pop
mov
out
fcompl
push
movsb
pop
xchg
jo
adc
adc
in
sbb
lods
push
lods
cltd
dec
jle
fsubl
push
sub
jge
lret
inc
dec
fists
jg
in
mov
lock
lods
xor
or
mov
xchg
dec
jecxz
sub
and
adc
cmp
call
fcoml
push
cltd
nop
pushf
cmpb
jo
repnz
xchg
jle
push
vpunpcklwd
addb
scas
jno
scas
test
jmp
and
ljmp
and
icebp
xor
loopne
push
scas
cmpl
fistpl
scas
dec
push
jmp
cmp
dec
inc
test
xchg
mov
xlat
pop
lret
dec
cmpl
out
jne
dec
pop
jne
fs
xchg
leave
out
push
mov
pop
inc
pushl
daa
mov
xchg
add
mov
adc
add
push
divl
and
stc
shl
mov
into
fisubrl
and
shll
jg
scas
je
ret
inc
push
inc
xor
iret
sar
pusha
repnz
enter
lret
fs
cmp
js
outsb
test
in
les
subl
sub
mov
pop
fildl
sub
xorb
sbb
in
gs
je
repnz
iret
sub
mov
pop
inc
in
fcmovnu
stos
jecxz
in
pop
xchg
ljmp
jne
ja
popf
mov
lods
mov
mov
jnp
out
mov
jne
push
outsl
bound
adc
lds
push
add
lods
push
and
je
push
adcb
push
dec
pop
outsb
cmp
imul
inc
cld
stc
fstps
push
inc
xor
sti
xlat
cli
test
ds
jno
gs
jns
dec
enter
add
js
mov
cmp
lds
mov
dec
bsf
lds
jp
jnp
popf
xor
sbb
pop
or
hlt
cmc
pop
bound
xchg
cld
sub
jae
out
adc
ficomps
pop
mov
or
cmp
inc
push
shr
fcmovnu
mov
scas
push
loopnew
sub
mov
lcall
test
ret
jmp
push
xchg
int3
loope
inc
call
adc
xchg
mov
cmp
mov
inc
push
insl
xor
and
mov
jmp
popa
dec
in
fstp
mov
stc
inc
fnstcw
dec
push
and
hlt
repnz
pusha
and
sti
int
in
mov
bound
or
mov
sarl
je
into
cwtl
xor
dec
push
push
enter
push
jl
mov
add
mov
add
std
jns
adcb
xor
mov
pop
mov
and
pop
mov
gs
clc
push
push
inc
out
or
in
jno
jne
sub
test
out
repz
inc
insl
mov
pushf
mov
mov
pushf
xor
rcrb
fwait
cltd
mov
sub
or
dec
les
int3
cwtl
push
aad
es
or
xchg
push
stos
clc
push
lock
enter
xor
sub
sub
sub
mov
sbb
push
jmp
mov
cmp
sbb
into
test
cmp
in
sbb
inc
mov
lahf
mov
pop
or
push
lret
fucomp
incb
test
add
push
cmp
repnz
push
add
in
mov
addb
mov
push
xor
add
jbe
add
inc
popf
or
jge
and
xchg
lds
outsb
xorb
xor
iret
repnz
ret
sar
pop
jo
pop
pop
jo
cld
lahf
sbb
mov
orl
or
inc
push
into
neg
lret
jl
sahf
push
cld
pop
jge
outsl
repnz
mov
sub
ds
sub
in
loopne
sbb
adc
cmp
rcrb
into
sbb
lods
sbb
or
jge
repz
push
fldl
addr16
xchg
push
sarb
je
adc
pop
jbe
mov
xor
test
insw
stos
xchg
stos
jle
into
mov
push
fsubrp
in
data16
inc
push
imulb
lea
cs
push
xchg
push
lcall
push
imul
orl
lret
cmpsl
xor
pop
int
mov
or
jmp
push
popf
mov
xchg
sbb
mov
push
jle
andb
cmp
iret
push
mov
xor
dec
mov
jmp
xchg
inc
xchg
mov
pop
cld
mov
inc
outsb
jmp
js
mov
lahf
test
mov
movsl
insb
rclb
add
xor
xchg
out
adc
sahf
loop
out
int
adc
hlt
fucomip
jmp
adc
mov
lods
mov
iret
xor
cltd
cmc
add
insb
ljmp
cmp
add
pop
lret
bound
inc
rclb
mov
xchg
jl
xor
lods
lea
xchg
rcrl
pushf
xchg
jbe
xor
rcr
push
jge
scas
stc
jno
sbb
int
cld
in
dec
push
pop
stc
jnp
dec
ret
push
mov
les
rcll
pop
add
cmp
insl
lds
jno
cmp
int3
jecxz
jb
imul
ss
mov
leave
adc
adc
cmp
movsl
pop
fcmovnu
js
push
adc
rcll
inc
cltd
mov
insb
mov
mov
and
lods
and
aam
test
sub
loope
add
ds
adc
xchg
test
lea
xchg
call
cmp
testl
scas
rorb
push
or
push
lret
jnp
inc
jb
cmpsb
xor
cmp
and
mov
jmp
xchg
js
sub
es
xor
mov
pop
enter
test
push
xor
into
cmp
es
add
insl
bound
ret
scas
inc
mov
lcall
outsl
insb
push
icebp
xchg
mov
stc
mov
xor
push
jbe
mov
mov
test
lret
and
in
jae
cld
lods
and
xchg
test
sub
subl
sub
mull
cltd
inc
or
call
cmp
outsb
shl
mov
mov
push
mov
lea
and
jecxz
sub
movsl
jg
and
adc
sahf
popf
stc
mov
mov
sti
rorb
lock
xchg
push
or
jo
cltd
cmp
inc
sbb
cltd
loopne
imul
decb
xor
jmp
les
loope
mov
lds
jno
addr16
add
push
int
mov
jns
cwtl
ret
jmp
xor
and
mov
push
and
sarl
or
cmp
push
sbb
ds
ss
int3
dec
pop
cmp
ss
mov
mov
test
sbb
ret
push
and
mov
push
add
rcll
dec
mov
leave
cmpsl
pop
out
xchg
push
ret
outsl
jecxz
pop
mov
push
mov
jns
mov
cmp
lea
arpl
sbb
xor
in
in
in
out
xor
xchg
pop
sbb
sahf
or
fwait
add
test
lods
pop
mov
cltd
sbb
cmpsl
pop
rol
cmp
test
ja
inc
xchg
lret
jmp
hlt
mov
cmpsb
push
mov
cmp
mov
popf
or
jg
pusha
mov
pop
cmp
sbb
loopne
push
and
pop
mov
push
les
fsubrs
push
jnp
aas
cmc
jmp
cld
and
sub
dec
jnp
mov
mov
and
into
sub
lock
mov
ss
sbb
cmpl
movsb
pop
aam
cmc
stos
pop
push
dec
ljmp
and
push
jp
jae
out
insl
xchg
mov
adc
cmp
push
lret
cltd
into
ret
mov
cltd
sbb
xchg
test
pop
adc
lock
push
xchg
xor
sub
adc
jns
in
lret
fwait
outsl
pop
jg
shrl
insb
jmp
xor
mov
mov
mov
jg
dec
jo
pop
stc
sub
xor
insb
pusha
dec
jmp
nop
fdivrl
pop
gs
mov
aas
ljmp
mov
aad
push
and
push
or
cmpb
scas
lahf
mov
push
or
xor
repnz
sbb
insl
mov
icebp
jns
ja
fdivr
test
mov
mov
aam
xchg
sbb
loopne
jb
or
rolb
cmp
mov
daa
imulb
icebp
push
adc
dec
mov
xchg
pop
shlb
pop
das
xor
pop
xor
mov
pushf
xor
imul
rorl
enter
jbe
mov
test
test
mov
cmpsb
lret
fbld
pop
pop
mov
cmp
lock
fcom
jmp
mov
out
push
fnsave
sbb
push
xchg
pop
jmp
cs
in
cmp
jl
mov
fidivl
ljmp
and
pop
xor
pop
testl
adc
jge
shll
ja
push
cmp
inc
xor
lds
in
cvtpi2ps
nop
lods
jo
fistpll
xor
loop
in
lcall
lock
xor
cld
loopne
xchg
mov
xor
push
or
jne
mov
sub
pop
addr16
inc
aad
popa
pop
adc
xchg
mov
int
jmp
imul
lahf
enter
or
clc
mov
xchg
lods
imull
test
sub
add
jl
rol
push
cmp
mov
push
xchg
out
jns
mov
mov
js
into
fiaddl
mov
out
jmp
mov
xchg
mov
xor
jbe
sti
mov
xchg
jp
sub
mov
pop
xchg
das
gs
sbb
push
jne
pop
mov
insb
xor
jbe
mov
pop
xor
jp
loop
mov
in
out
icebp
mov
cmp
cmpsl
push
sbb
inc
mov
push
test
cmovae
mov
xchg
mov
sub
movsb
mov
and
jg
pop
lret
call
addr16
mov
mov
call
popa
inc
pop
xor
sti
outsl
jl
xor
aam
lea
mov
shll
rclb
sbb
mov
testb
pop
loope
add
or
testl
fld
push
mov
dec
cmp
stc
mov
adc
std
inc
push
pop
je
sbb
or
fsubl
and
add
sub
lock
add
jae
jo
mov
in
ss
sub
jecxz
out
mov
daa
mov
incb
xor
push
adc
cmp
jne
push
into
out
lahf
mov
pop
out
or
nop
mov
xchg
cmp
mov
cld
jmp
add
jge
dec
cli
mov
ljmp
dec
arpl
mov
jnp
xor
sub
mov
aaa
or
fadds
jp
sarl
sub
inc
mov
call
jo
int
in
aam
ja
add
ss
lret
jb
add
mov
xchg
int3
bound
mov
dec
test
cmp
push
inc
cmp
add
pop
out
jns
subl
xchg
outsl
lret
add
aad
movsb
mov
rorl
std
xorb
push
test
shl
lods
pop
mov
mov
jb
rorb
sub
popf
push
aas
andl
push
enter
mov
jge
mov
and
cmp
in
rcl
mov
popa
mov
imul
add
add
pop
add
xor
push
adc
outsl
cmp
adc
push
jle
jae
push
pop
dec
imul
xchg
cmc
jg
and
add
into
rorl
iret
mov
shll
mov
add
add
pushf
add
dec
filds
pop
rep
ja
push
dec
fisttpl
sarl
inc
adc
stc
fs
push
cmpsb
test
xor
and
scas
push
mov
addr16
movsb
adc
int3
pop
pop
jo
or
subl
aad
sbb
xchg
or
xchg
ss
insb
jl
add
and
add
imul
inc
cmp
pop
loope
lcall
dec
stos
pusha
lcall
inc
xchg
sbb
and
mov
cltd
ret
sbb
sbb
addl
xor
jecxz
push
aad
mov
js
outsl
mov
mov
sub
adc
cli
rorb
dec
or
in
adc
mov
pop
aad
and
fdivs
push
jnp
cwtl
and
stos
mov
xor
push
and
cltd
mov
pop
orl
inc
mov
ret
aam
mov
das
psubd
cld
pop
out
push
fcomps
mov
push
movsb
lahf
loope
jle
and
sahf
lods
enter
or
push
sub
push
inc
fstp
cmpsb
fsubr
sub
js
out
pop
xchg
xor
inc
and
mov
or
mov
lret
cmp
test
adc
push
or
in
mov
mov
fbld
rolb
jb
jne
xchg
es
rorb
mov
stc
addr16
test
aam
jge
xor
stos
jnp
fisubs
andb
out
mov
cmp
fidivrl
lahf
ljmp
stos
out
in
inc
sarb
sub
arpl
imul
pop
je
adc
ljmp
mov
cmc
cmp
pushf
pop
push
cmpsl
dec
add
loope
mov
pmulhw
test
or
in
xlat
add
rolb
iret
push
shlb
or
fldt
or
sub
mov
imul
cmp
testl
in
sbb
or
insl
push
sub
dec
cmpsb
pop
mov
aas
pop
sbb
fidivrl
or
push
adc
arpl
call
or
iret
dec
insb
cmp
arpl
mov
xchg
push
cmp
adc
jno
mov
cbtw
pop
dec
ds
arpl
mov
sbb
out
adc
mov
xchg
test
add
je
mov
dec
cmpsl
outsl
and
out
sub
xchg
aam
pop
lods
or
xchg
mov
mov
stc
jae
fdiv
inc
inc
je
cwtl
pop
cmpsl
sub
or
inc
insb
cli
pop
out
inc
inc
ss
incl
xlat
pop
mov
lods
jmp
aad
in
pop
or
hlt
pop
lock
icebp
pop
push
ret
xchg
mov
fwait
mov
pop
fninit
add
repnz
push
call
xor
xchg
push
roll
pop
in
je
sar
pop
pop
jmp
or
gs
andl
push
jge
mov
pop
push
sbb
ret
stos
mov
push
add
gs
sbb
fldl
xlat
jge
or
cs
idiv
mov
dec
and
or
sub
cmc
jle
or
lahf
aam
inc
jg
add
add
sbb
sub
cmp
xorl
cmc
pop
es
jo
test
out
sbbl
repz
add
and
imul
dec
call
ret
lods
pop
mov
pop
inc
cld
xor
mov
jge
in
fisubrl
lds
filds
fwait
mov
mov
xchg
push
scas
add
adc
mov
test
mov
imul
lea
lods
sti
fwait
popa
mov
jp
sbb
pop
rcll
lret
das
ja
mov
mov
adc
mov
movb
clc
pusha
pop
mov
lret
and
xor
mov
sbb
mov
mov
pop
ljmp
test
xor
cmp
cmp
scas
js
mov
xchg
sbb
pop
pop
idiv
test
testl
mov
out
pop
addb
int
cmp
fdivrs
cmpsl
rorb
add
icebp
push
inc
push
fnstenv
mov
lahf
fidivrs
sbb
inc
test
loopne
je
aad
cmp
mov
jne
xlat
pop
call
push
or
loope
cmpsl
arpl
stos
fisubl
test
pop
addr16
adc
imul
dec
sti
cli
lock
cmp
cwtl
adc
mov
xor
outsb
inc
outsb
push
inc
call
aas
jbe
scas
mov
pop
mov
hlt
loopne
pop
xor
scas
scas
and
cwtl
xor
xchg
inc
movsl
mov
daa
dec
imul
adc
push
ljmp
shrl
shlb
lock
xor
cs
out
insb
and
jbe
stc
jne,pt
ret
into
dec
sub
or
cmpsb
mov
adc
push
pop
in
dec
into
inc
out
push
push
sub
imul
stc
je
dec
adc
sbb
ss
rcr
lahf
sbb
cmp
sub
jno
roll
ljmp
imul
dec
mov
bnd
push
cwtl
mov
sbb
test
fs
mov
and
out
or
aaa
mov
mov
inc
in
adc
sbb
movsb
lea
lret
lret
sub
push
fdivrl
mov
lds
ljmp
push
mov
sahf
ret
int
loopne
or
mov
and
adc
mov
sbb
xchg
in
and
es
or
sbb
fincstp
shll
adc
lds
inc
xchg
xchg
add
push
dec
add
adc
out
xorb
xchg
jnp
test
fidivs
or
xor
cmpl
fisubs
dec
pop
scas
jp
jp
jp
adc
pusha
arpl
jecxz
imul
cmp
test
sub
push
jae
ret
adc
pop
push
jge
add
sbb
add
out
mov
jnp
inc
and
movsb
and
dec
lock
xor
out
sub
and
stc
inc
xchg
hlt
into
mov
sbb
loopne
das
push
inc
push
icebp
pop
notb
lods
xchg
cmpl
decl
ja
loope
imul
xchg
dec
aaa
add
iret
insb
push
cld
xchg
jne
dec
xor
jb
aad
lcall
into
push
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
xchg
xchg
packuswb
ja
inc
ds
dec
and
outsb
add
mov
sahf
pop
add
mov
int3
adc
add
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
jmp
sbbl
add
add
add
add
add
add
xor
pop
add
add
xor
aas
add
add
pop
add
add
push
add
jmp
jle
adc
inc
add
add
add
add
aas
add
add
add
add
add
add
push
add
add
add
add
add
adc
xor
pusha
add
push
icebp
add
dec
add
add
add
mov
add
dec
add
cmp
roll
and
ss
add
push
add
add
add
adc
pop
add
add
add
add
add
roll
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
push
add
add
add
add
add
add
pusha
add
add
filds
sub
pop
add
add
add
add
inc
add
add
add
roll
lret
add
test
pop
add
add
add
add
add
inc
add
add
add
add
pop
add
add
test
pop
add
add
add
add
add
insb
add
add
mov
or
push
add
adc
verr
mov
xchg
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
str
add
xor
out
add
add
add
add
add
and
adc
add
pop
add
add
add
add
add
add
add
lret
add
add
pop
add
add
add
add
add
add
add
icebp
add
add
add
test
pop
add
add
add
jmp
add
pop
add
add
add
add
push
add
cmp
les
in
js
sti
add
add
add
je
add
add
pop
add
inc
add
xor
pop
add
aam
roll
add
lahf
add
pop
add
outsb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
test
jle
ljmp
add
xor
push
add
mov
pop
add
jle
or
dec
add
add
daa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
dec
add
add
or
inc
add
add
add
add
lldt
add
add
add
add
add
ja
pop
add
add
add
add
add
and
xor
add
or
add
sub
stos
add
add
add
pop
add
add
dec
add
add
add
mov
add
data16
add
and
jmp
add
add
add
push
add
add
add
add
add
mov
add
sti
add
inc
add
add
add
push
add
adc
push
add
add
addb
sub
pop
add
pop
add
add
add
filds
in
push
add
add
add
add
add
push
add
add
add
and
jbe
mov
add
push
add
add
add
adc
and
pop
add
add
loop
push
mov
das
shlb
fistps
sarl
xor
xor
leave
push
adc
cltd
xchg
mov
loopne
lods
int3
inc
sbb
adc
xor
sub
mov
pop
lret
test
xor
xor
pop
mov
inc
dec
dec
data16
rol
mov
incl
fdiv
cmp
dec
in
push
pusha
mov
mov
push
cmp
pushf
add
mov
les
fistps
push
dec
insl
sbb
push
xchg
test
fdivrs
icebp
lods
add
ljmp
push
adc
cli
fld
aaa
dec
pop
mov
cmp
mov
sub
jle
addr16
ret
sbb
adcb
and
aas
lods
mov
andb
adc
das
mov
cmp
lds
aad
lcall
pop
insb
lock
int
jl
or
pop
dec
xor
cmp
pop
xor
jne
sbbl
add
xchg
movsb
and
dec
addl
push
sahf
arpl
sub
fimull
push
aad
push
fiaddl
mov
hlt
ds
mov
xor
movl
push
std
mov
gs
pcmpeqd
inc
jo
add
pop
ljmp
mov
scas
jb
ret
jl
sub
fnstsw
adc
sbb
fmuls
imul
xor
in
dec
mov
cmpsb
insb
adc
xchg
adc
sub
dec
sbb
divl
and
leave
xchg
cmp
pop
jg
repz
es
xor
loop
cmp
mov
pop
inc
ss
pop
stc
imul
cmpsb
dec
mov
xchg
fwait
imul
setbe
shl
outsb
or
test
xlat
in
cmc
push
or
call
sub
insl
jle
mov
jge
and
sbb
and
incb
xor
pop
es
jl
mov
jns
mov
pusha
mov
scas
test
jecxz
shrl
int
or
loope
mov
aas
push
xchg
add
fisttps
or
dec
in
cmp
es
sbb
or
imul
arpl
lret
cli
incl
jmp
out
movsl
bound
sbb
mov
add
out
sbb
mov
lock
mov
movsb
mov
mov
mov
mov
dec
fldpi
jb
xor
test
mov
fisttps
pushl
and
lret
xchg
pushf
aad
or
out
dec
rcrl
sbb
mov
iret
dec
pop
std
repz
ret
or
xor
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
