mov
outsb
incl
inc
add
lcall
add
sub
xchg
lret
in
inc
out
les
mov
jb
pop
push
jo
adc
sbb
jmp
sbb
dec
inc
xchg
jmp
jl
add
add
jmp
outsl
lcall
add
mov
dec
inc
add
add
push
mov
pop
addr16
outsl
ja
aaa
add
add
inc
add
mov
mov
sbb
mov
xor
insl
mov
sub
repz
mov
outsl
mov
dec
mov
inc
dec
and
imul
outsl
or
call
imul
push
es
pop
fucomp
in
jmp
push
jb
out
pop
mov
mov
outsl
mov
sub
inc
add
xor
jge
mov
and
loop
mov
fsubr
bound
dec
jge
push
and
mov
addr16
inc
cmpsb
mov
in
js
add
adc
insl
cmp
add
add
clc
fs
bound
sti
out
adc
xchg
inc
cmpsl
cmp
add
jbe
adc
call
sarb
push
call
mov
jo
pop
adc
call
jne
call
dec
roll
inc
lret
decl
and
and
mov
or
adc
mov
sbb
test
mov
push
or
outsl
and
sub
push
xor
xchg
sub
incl
mull
and
adc
pop
mov
push
adc
aad
faddl
cmp
inc
jmp
adc
popa
mov
rorb
xlat
xlat
pop
call
sbb
pop
add
jl
call
add
mov
adc
push
fldl
lods
das
or
movsl
aam
out
call
outsl
mov
jge
or
adc
inc
push
mov
lock
mov
movsl
pop
data16
imul
pop
or
dec
and
or
aas
sbb
mov
adc
or
adc
enter
call
dec
mov
test
or
mov
xor
push
icebp
call
and
cmp
push
xlat
sub
push
jmp
jmp
cli
and
inc
adc
sarl
mov
mov
jp
push
call
outsb
jmp
inc
inc
jmp
inc
inc
dec
ret
or
add
call
sbb
xchg
cmp
call
mov
xor
adc
add
adc
cld
lea
stos
lcall
xor
cs
idiv
jmp
xor
adc
je
push
nop
lcall
or
adc
or
gs
call
call
imul
jo
sub
xor
movsl
add
jle
lock
dec
and
adc
push
mov
testb
dec
adc
sbb
fwait
and
imul
call
dec
or
mov
je
pop
je
cwtl
add
add
adc
decl
inc
or
cmc
sbb
pop
xchg
cmp
xchg
or
jnp
mov
in
cmp
daa
leave
in
or
cld
shrb
aam
adc
jmp
jb
clc
call
imul
cmp
mov
out
adc
cld
adc
adc
jne
call
data16
and
inc
cmp
popa
add
icebp
adc
inc
lock
push
add
icebp
lcall
cmp
stc
insl
xor
dec
adc
xor
enter
idivb
hlt
out
sbb
pop
fimuls
mov
fldenv
incl
jge
sub
loope
xor
and
or
je
pop
maxps
lret
in
call
cmp
jle
cltd
fiadds
mov
cwtl
lea
and
xchg
or
and
pop
jg
sbb
xor
or
hlt
ret
mov
decl
xor
les
cs
test
adc
sub
inc
xor
adc
inc
jl
rorl
adc
mov
xchg
call
xlat
ret
clc
cmc
pop
or
inc
jl
cld
ljmp
je
adc
or
xchg
push
and
and
and
add
cld
fcmovnu
call
adc
testb
xor
add
push
cld
or
ja
in
outsl
xchg
push
or
push
inc
notb
xchg
mov
or
mov
mov
js
call
inc
sub
mov
adc
js
dec
mov
xor
sbb
adc
xlat
lods
cmp
negb
adc
jp
adc
dec
je
push
mov
cmpsb
adc
adc
push
and
sbb
mov
fistps
call
add
adc
or
loopne
mov
and
adc
cltd
outsl
cld
call
mov
lret
add
je
adc
test
or
in
inc
jg
cmc
push
clc
inc
and
aaa
lcall
push
daa
and
ljmp
adc
xor
push
mov
popf
push
in
insb
and
jmp
jle
xor
dec
je
cmp
daa
xchg
mov
loope
inc
add
pop
adc
sbb
cwtl
jae
bnd
pop
push
xchg
adc
mov
lds
mov
push
xchg
imul
mov
add
adc
andl
dec
call
pop
loopne
inc
and
push
dec
jb
aaa
outsb
jg
push
or
mov
je
mov
push
lods
jp
lcall
or
lcall
add
lds
ljmp
mov
mov
xchg
and
sbb
xchg
mov
sub
dec
adc
sbb
and
xchg
mov
xlat
sub
das
pop
mov
push
adc
ja
movsl
cmpsl
daa
xchg
test
or
mov
inc
or
call
lcall
fisubrs
fwait
adc
xor
push
add
mov
jg
incl
mov
cmp
or
adc
pop
mov
lret
je
xor
mov
pushf
fs
xchg
pop
and
incl
repnz
test
loop
negb
aad
sar
push
jnp
adc
mov
scas
pop
clc
mov
add
push
mov
push
dec
bound
rcll
adc
ljmp
jo
xor
pushf
inc
adc
insb
inc
cmp
mov
cmp
xchg
movsl
lcall
or
ss
out
mov
pop
call
sbb
sar
pop
xor
cli
xchg
iret
pushl
int3
and
mov
or
aaa
mov
xor
push
loop
push
or
cli
or
int3
dec
push
pop
icebp
jl
dec
cmpsl
movb
lret
add
mov
adc
ret
adc
cmpsl
in
xor
push
mov
iret
adc
cmp
flds
sbb
sub
sub
push
lods
fcmovu
mov
jmp
mov
cld
hlt
xchg
call
and
cld
lea
mov
inc
shl
adc
push
adc
cli
mov
or
scas
xor
out
ds
add
fdivs
outsl
std
mov
je
int
arpl
inc
daa
nop
and
mov
mov
incl
push
cltd
pop
data16
clc
fstl
je
push
mov
add
loopne
and
test
or
jecxz
jbe
or
mov
jge
mov
xor
cmp
test
call
test
dec
call
mov
and
je
cli
mov
pop
jp
cs
xor
jg
jmp
mov
jmp
mov
inc
xchg
call
inc
mov
shlb
inc
cs
fsubr
cltd
ja
mov
js
jle
push
out
add
das
jo
dec
test
cli
shlb
adc
je
and
test
hlt
cwtl
and
pop
inc
jno
out
lock
cmp
ret
push
or
sbb
les
jo
push
icebp
or
arpl
inc
pop
and
lcall
sub
loopne
cli
jg
push
pushf
out
mov
rorb
arpl
cmp
jo
in
mov
mov
enter
jo
push
pop
sub
shl
cmp
test
fdivl
sbb
cmp
sbb
lret
jmp
dec
inc
and
cltd
xor
ss
or
pop
inc
call
add
inc
dec
mov
inc
mov
inc
stc
data16
call
das
jge
or
cltd
mov
leave
aam
dec
call
lock
icebp
inc
sub
test
cmpsl
imul
nop
mov
pushl
repnz
inc
xchg
movsb
cmc
data16
or
je
inc
mov
mov
xor
jg
in
test
adc
push
inc
orb
or
adc
decl
sbb
and
push
jb
adc
and
push
and
incl
stc
pop
fwait
and
push
xchg
sub
jo
adc
fsubrp
ljmp
and
push
or
sbb
xor
dec
cmp
or
in
adc
fsubl
push
les
lock
pop
outsb
leave
popa
cmp
test
add
sub
mov
adc
adc
jg
out
push
and
clc
call
mov
cmpsb
sbb
jne
jl
pop
jmp
mov
adc
movb
lods
mov
cmp
cwtl
pusha
push
je
sub
lcall
pushl
jle
out
push
test
in
dec
je
outsb
xchg
stos
mov
push
cmpsl
mulb
mov
and
and
aaa
clc
insl
push
push
lds
hlt
lcall
inc
push
xchg
mov
loope
cmp
test
xor
test
in
test
out
adc
jno
jg
pop
push
jmp
push
decl
mov
jg
cld
push
inc
push
lcall
push
and
and
add
popa
pushf
push
dec
push
and
popa
jmp
jmp
inc
loope
add
in
xor
adc
jge
mov
clc
fstpt
pop
clc
and
ret
and
rcll
inc
sub
cmc
das
jl
dec
push
cmpl
ds
xchg
mov
xor
outsl
jne
inc
mov
ds
aaa
ljmp
das
mov
popf
scas
loop
les
hlt
sub
adc
stc
fisubl
shl
scas
sub
xor
dec
jg
fstpl
inc
or
add
sbb
jmp
adc
or
lock
je
cmpsl
adc
aam
jg
dec
jns
test
incl
jne
shlb
insb
inc
mov
push
mov
jno
in
mov
mov
leave
loop
sbbl
dec
clc
das
adc
lcall
vcomisd
rcll
test
push
dec
and
adc
call
mov
jmp
adc
inc
sub
add
ror
das
adc
pop
xchg
fcompp
aas
shrl
icebp
movsl
jmp
xchg
adc
ja
aas
mov
and
cmp
adc
mov
cmpb
jmp
push
je
add
or
sub
in
xor
xchg
adc
rcr
inc
movsl
adc
cld
das
push
mov
pop
icebp
test
aam
mov
fisubrs
and
gs
lcall
decl
xchg
inc
stc
push
mov
mov
pusha
into
cmpsb
cmp
jge
or
in
lcall
enter
jne
mov
push
test
inc
jecxz
cmp
ret
out
icebp
test
mov
pop
sub
mov
adc
or
jg
shlb
cmp
mov
enter
lahf
mov
mov
pop
fidivl
pushl
adc
add
cli
mov
aaa
lds
and
adc
pop
xor
xchg
fsubp
pop
lcall
push
mov
ljmp
dec
push
in
shl
bound
ret
js
mov
sub
stos
cmp
pop
lea
and
je
push
fcmovnu
clc
pop
leave
and
sbb
inc
jle
rcrb
inc
jnp
loopne
jp
bnd
js
testl
fbstp
xor
ds
jae
dec
xchg
pop
and
sbb
or
call
xchg
in
add
mov
ret
call
call
jp
push
push
adc
mov
push
mov
jl
inc
cld
rcrl
pop
in
leave
dec
mov
test
pop
stos
adc
je
xchg
sub
mov
les
loope
xchg
add
mov
or
mov
mov
fisttpl
and
mov
stos
pop
and
and
xlat
or
lods
lods
lock
fld
push
ljmp
imul
and
mov
add
inc
sub
ficompl
and
dec
pusha
divb
clc
incl
call
negl
sbb
xchg
and
inc
test
mov
pop
je
lea
push
imul
xchg
cmpsb
and
adc
add
cli
call
daa
jne
mov
mov
icebp
adc
ret
or
orb
and
jecxz
lea
dec
iret
inc
xor
jmp
pop
pop
and
jp
les
mov
shrb
mov
sbb
pop
jae
lds
call
adc
and
push
icebp
and
je
jge
lret
in
pushl
add
push
or
adc
test
cmp
ljmp
pusha
aam
inc
in
sbb
notl
inc
adc
dec
ja
fistps
das
cld
loopne
mov
test
pusha
pop
xor
enter
decl
pop
push
movsb
mov
dec
cmpsb
dec
mov
jo
push
pop
loope
add
test
cs
push
inc
inc
pop
icebp
push
adc
or
sbb
and
cmpsb
jbe
sub
mov
sarl
jge
ja
fidivrl
or
dec
xchg
pop
insl
push
or
dec
sub
iret
std
or
aaa
sbb
outsl
cld
fistpl
sahf
add
sbb
push
loopne
sub
adc
call
movsb
insb
divb
movsl
adc
mov
scas
lods
sub
hlt
outsl
xchg
rclb
pop
addb
pop
dec
pop
scas
data16
outsl
mov
mov
inc
xchg
and
dec
xor
std
call
push
adc
mov
pop
je
or
jmp
jle
pushl
inc
pop
call
pop
and
fildl
or
jnp
inc
pop
or
adc
or
inc
je
or
iret
fsubs
add
pop
std
rclb
enter
jns
negl
jae
or
and
mov
aad
shll
push
push
cmpb
or
cld
and
fists
push
loop
mov
adc
loopne
ljmp
pop
add
mov
add
cld
xchg
mov
and
les
icebp
aaa
xlat
sar
test
movsb
das
pop
cli
and
insb
push
push
add
lds
mov
push
in
push
xor
jmp
inc
push
sbb
mov
movsb
push
das
fisubrs
decl
cs
rorb
es
adc
push
fwait
and
adc
loop
decl
inc
mov
adc
dec
mov
or
adc
shl
lcall
cmp
push
jp
add
cwtl
jmp
or
cld
aas
adc
ljmp
pop
testl
adc
add
fildll
icebp
add
je
jne
jle
das
call
xorl
or
and
cmpsl
rorl
jb
test
push
xor
lea
clc
inc
rorb
outsl
lock
incb
xor
lods
insl
push
int
cmp
jo
sbb
jg
or
xchg
adc
add
sahf
wrmsr
mov
xor
add
lock
mov
ljmp
and
mov
xor
jb
je
mov
imul
jp
jbe
sbb
stos
sub
pop
and
xchg
aaa
push
mov
call
xchg
mov
pop
sbb
dec
jns
jne
sub
call
in
dec
mov
gs
call
stc
sti
int
xchg
push
mov
inc
iret
fldenv
repz
incl
add
out
add
xchg
movsl
and
mov
lcall
ljmp
jmp
gs
xor
mov
dec
adc
push
jns
jne
xchg
inc
scas
shlb
lods
mov
ljmp
jno
pop
imul
sbb
mov
sti
dec
or
xchg
shll
call
test
test
outsl
dec
push
dec
sub
ret
jo
test
dec
xor
aam
aaa
pop
out
jle
je
xchg
and
push
mov
sbbb
aas
xchg
sub
subb
nop
test
xchg
xchg
lods
popf
adc
in
inc
clc
outsl
cmc
fistpll
or
lods
adc
push
ret
push
adc
and
decl
std
fildll
or
cmp
outsl
or
shlb
std
pop
das
std
lcall
out
dec
cld
cmp
es
call
sub
stos
push
xchg
dec
cmp
movsb
or
pushf
add
adc
rcl
xor
arpl
or
push
push
adc
iret
fsubs
xlat
push
aad
ret
shl
enter
or
out
test
sbb
and
push
ds
and
clc
pop
or
dec
lea
cmpb
adc
jle
cld
lock
pop
cmp
xlat
pushf
inc
sub
ljmp
loop
add
and
mov
lcall
lea
aad
jbe
subb
cli
idivl
in
jmp
xchg
jb
cs
cmpsb
decl
std
in
ret
icebp
add
jnp
jmp
adc
mov
jae
adc
mov
or
mov
je
inc
mov
mov
mov
xor
int
push
aam
pop
cmp
lcall
add
adc
addr16
call
popa
outsl
xchg
add
jo
loop
mov
sarb
call
or
and
pop
inc
loop
sub
or
pop
pop
stos
mov
movsl
je
xor
sub
sub
mov
jecxz
inc
sbb
inc
pop
pop
or
adc
and
mov
imul
cmpsb
je
adc
mov
pop
cmp
mov
dec
dec
cmpsb
hlt
adc
pop
das
mov
idiv
je
or
pop
xor
or
pop
pusha
mov
hlt
shrl
int3
sub
movsb
or
mov
mov
pop
fmuls
cmp
jg
in
lods
ljmp
shlb
cmp
sahf
mov
add
lahf
cmp
add
mov
outsl
icebp
adc
mov
adc
addb
decb
jnp
add
fs
imul
mov
rol
aam
fsubr
pop
adc
fcmovu
popa
and
cmp
jl
sarb
or
cwtl
sub
fnstcw
gs
adc
fsub
adc
dec
sub
das
mov
and
call
test
or
jle
repz
sbb
push
loope
jecxz
adc
add
leave
insl
cmp
cmp
mov
cmp
cli
pop
std
push
and
and
cld
std
notb
test
adc
xchg
in
inc
push
stos
scas
je
jne
into
jnp
call
sub
mov
call
shlb
or
iret
lret
jnp
out
push
fbld
or
ret
pop
mov
mov
imul
out
sbb
in
sub
xchg
sbb
jo
push
out
popf
mov
decl
insb
icebp
cwtl
push
or
xor
lds
dec
mov
out
jae
lock
scas
mov
adc
mov
add
int3
out
mov
mov
mov
ror
push
mov
cli
pop
dec
sub
xchg
je
adc
lahf
shlb
sar
outsl
sbb
xorb
mov
push
dec
and
les
mov
adc
mov
push
ficomps
nop
sbb
sub
aaa
mov
nop
daa
rorb
xlat
xor
pop
mov
add
sbb
mov
pop
shll
mov
enter
inc
inc
mov
loop
adc
mov
cld
movsl
lods
decl
and
jmp
je
je
call
test
mov
daa
adc
pop
sbb
xor
imul
jg
sub
jmp
iret
mov
movsb
je
adc
icebp
in
lea
sub
xchg
and
fmuls
aas
push
xlat
cmp
movsl
decl
fistl
cli
inc
decb
pop
jb
shrb
xchg
in
dec
cmp
sub
imul
lds
repnz
xor
cwtl
adc
movsb
jge
je
mov
in
leave
pushl
adc
das
cltd
and
inc
insl
scas
insl
and
repnz
lret
outsl
mov
xorw
mov
dec
lock
int3
clc
jg
push
or
stc
outsl
push
adc
mov
mov
aaa
call
mov
call
aaa
or
test
fmul
enter
pushl
jle
mov
jmp
sub
lods
or
sub
jo
mov
outsl
cmc
add
mov
push
adc
cld
fistpll
and
push
or
dec
or
cmovs
push
sbb
pushf
pop
daa
add
popw
into
adc
mov
or
cmp
xor
jne
aad
and
mov
movb
fcoml
cmp
mov
pop
js
xchg
test
ss
jns
ret
sbb
stos
aam
pop
or
rol
hlt
je
push
inc
outsl
ljmp
ret
xor
roll
mov
adc
in
mov
pop
call
xchg
fwait
push
call
leave
add
jne
pop
stos
icebp
or
pop
cmp
daa
movsb
sbb
xchg
js
jo
jo
or
xchg
fsubrs
xlat
loope
xor
std
or
mov
clc
cld
outsl
lea
mov
cs
sbb
and
data16
pop
fdiv
mov
pop
sbb
notb
test
adc
inc
out
fs
pop
push
pop
mov
jmp
adc
push
xor
call
jg
call
mov
cmp
lds
das
leave
inc
fsin
adc
or
sti
nop
in
mov
jmp
mov
lahf
mov
cmpl
or
cmpsl
adcl
outsb
and
inc
xchg
and
push
jbe
inc
arpl
pmulhw
inc
leave
pusha
sub
test
fsubr
fdivr
decl
or
inc
inc
adc
mov
je
call
movsl
in
cltd
ds
outsl
and
and
mov
or
pop
movb
icebp
lea
sub
mov
mov
pop
cli
jmp
pop
lock
pop
lods
rclb
jle
jmp
push
push
sbb
flds
push
push
adc
inc
inc
sub
in
or
dec
ret
and
imul
icebp
push
popf
cmp
ds
popf
inc
cmp
enter
lock
mov
xchg
add
stos
push
sbb
or
in
sub
dec
jmp
ds
sarb
add
adc
pop
dec
adc
jg
mov
dec
je
sbb
pop
jle
push
push
jmp
cmp
dec
pop
sub
imul
mov
and
ss
fwait
adc
fisttps
adc
xchg
or
adc
xchg
cmpsl
jno
adc
xor
and
arpl
and
pop
lock
pop
pop
inc
decl
std
aaa
lahf
lret
push
sbb
or
jno
lret
rclb
mov
xchg
je
push
int3
scas
imul
dec
lahf
cs
stos
sub
mov
mov
cli
push
mov
call
adc
adc
enter
mov
cmp
xor
das
pop
bound
movsl
xor
xor
mov
movsl
xor
std
add
int
sub
je
adc
jmp
mov
sub
sbb
dec
cmp
icebp
cmp
mov
mov
jmp
invd
int
movsb
ret
aam
xor
xor
push
push
int3
je
out
cmp
mov
and
push
fs
pop
add
adcl
je
or
push
add
lea
xlat
jmp
adc
inc
push
das
repnz
xor
out
mov
jbe
inc
imulb
cmpsb
sbb
jmp
outsl
idivl
mov
ret
pop
mov
jl
mov
dec
pusha
repz
mov
aaa
fiadds
jno
xor
xchg
inc
sbb
enter
pushl
out
sub
adc
loopne
and
xchg
or
sti
cltd
push
sbb
push
pop
movsl
popa
inc
outsb
fdivp
adc
add
jbe
add
adc
pop
xchg
pushf
je
add
popf
mov
loop
ret
push
je
inc
xchg
mov
mov
xchg
xor
repz
imul
and
cmc
call
in
or
fbld
aas
add
movsb
mov
clc
decl
loopne
jl
mov
dec
cmp
sbb
pushf
mov
aaa
push
sbb
jns
adc
std
pop
loop
mov
sbb
ret
fmul
cwtl
jbe
add
sbb
pop
test
adc
xor
insb
hlt
sbb
jmp
fsubrl
mov
nop
lds
mov
push
jle
jge
dec
ret
es
and
ficompl
push
sbb
enter
push
loopne
mov
jbe
rcrl
lock
add
mov
jnp
pop
push
adc
cmp
loopne
adc
or
int3
mov
cmc
stos
mov
outsl
aam
sti
push
ljmp
jno
push
fs
dec
or
xchg
adc
sub
xchg
hlt
push
mov
lods
xchg
fnclex
mov
inc
daa
push
jo
call
out
jecxz
je
adc
jecxz
call
nop
push
push
and
pushf
pop
and
call
fists
jo
jno,pn
dec
inc
jne
in
das
rcll
cmpsb
insb
dec
mov
roll
jl
shrb
sub
es
mov
cmp
pop
sub
adc
sti
movsl
jae
ljmp
mov
pop
pop
mov
add
cmp
data16
arpl
or
xchg
cmpb
jl
lcall
call
inc
jne
adcl
adc
push
je
mov
mov
xor
xor
sbb
outsl
add
mov
icebp
push
xor
repz
xchg
mov
call
inc
mov
xchg
xchg
mov
push
and
aas
or
inc
cld
sbb
sbb
push
enter
adc
sub
clc
pushl
cmp
orb
imulb
call
push
jle
je
adc
loope
loope
adc
inc
movsl
ss
repz
int3
add
std
jo
push
mov
sub
push
lahf
out
sbb
ret
mov
adc
jle
pop
testb
leave
and
test
sub
call
addr16
push
cmp
aad
decl
sbb
adc
clc
jno
inc
push
lret
mov
mov
push
and
adc
push
xor
adc
das
mov
fucomip
and
mov
rcrb
xchg
hlt
and
lahf
lock
jecxz
push
inc
jno
hlt
pop
loopne
xor
mov
jbe
mov
outsl
std
sbb
pop
push
sbb
ljmp
in
dec
or
fucomp
das
jno
mov
and
scas
or
hlt
mov
mov
mov
lock
and
sub
jmp
inc
pop
xor
inc
sbb
adc
adc
int3
or
nopl
jne
test
mov
cmp
push
fs
pusha
push
and
mov
lret
fisubl
push
sbb
movsl
inc
nop
lock
inc
adc
je
decl
push
add
pop
imul
mov
fisubrs
or
and
je
and
int
repz
ljmp
das
push
jle
xor
cs
test
lds
jo
cmp
test
jbe
pop
xor
les
mov
and
push
push
pop
popa
leave
mov
call
ud2
enter
nop
dec
add
mov
vmaxss
cmp
add
push
ja
xchg
outsl
cld
call
cmpsb
and
mov
sub
mov
cs
adc
add
push
decl
jg
sub
jb
ret
and
repz
dec
or
add
add
mov
jnp
addb
cld
cld
aaa
jbe
inc
add
sbb
loop
mov
and
push
mov
or
push
fcoms
add
fmuls
xor
rsqrtps
jg
push
and
inc
test
adc
je
mov
push
mov
jmp
push
inc
add
imul
pop
sub
mov
adc
adc
adc
lds
mov
sti
pop
push
fadds
mov
or
or
std
movsl
dec
mov
push
ds
xchg
cli
sbb
mov
mov
das
cmc
adc
es
mov
call
mov
mov
jb
divl
sub
das
mov
and
call
fs
lcall
adc
out
stos
jl
flds
arpl
or
adc
call
xchg
jae
out
pop
mov
jmp
cli
mov
sub
cmp
pop
icebp
add
lcall
pop
bound
nop
stc
push
daa
test
push
adc
mov
jne
mov
add
jbe
xchg
cld
outsl
cld
xchg
jge
adcb
push
scas
inc
ss
push
push
mov
or
and
or
sub
cltd
adc
or
ja
inc
ljmp
shrb
jno
gs
in
mov
cmp
arpl
rcl
cmp
inc
push
stos
insl
lock
pop
mov
add
lea
insb
or
ljmp
jle
jb
xor
divb
dec
mov
notb
pop
push
inc
imul
rorb
test
and
outsl
test
add
push
mov
loop
sub
inc
lock
jecxz
ss
cli
cltd
push
test
incl
adc
cltd
adc
call
mov
mov
xor
ljmp
adc
inc
fwait
adc
mov
mov
cmp
pop
std
mov
das
and
mov
pop
fidivrl
aaa
das
and
pushl
sub
mov
dec
adc
sub
push
orb
push
jle
push
or
and
add
out
push
loopne
or
jle
lcall
xor
xor
add
call
mov
lods
pop
js
xor
adc
xlat
loop
test
test
jmp
mov
js
vmovaps
lock
hlt
lds
mov
jmp
andb
mov
jnp
adc
add
mov
cltd
and
ljmp
movsl
and
out
mov
xchg
jge
mov
sahf
and
and
jecxz
ljmp
rorb
test
fwait
mov
adc
mov
dec
cmp
cmp
xchg
xchg
nop
mov
ret
inc
adc
pop
outsl
mov
bound
jae
pop
mov
pop
push
pop
and
mov
pushf
adc
mov
pop
cmp
push
mov
sub
repnz
clc
mov
mov
lcall
dec
dec
dec
adc
sbb
inc
data16
ret
or
icebp
popf
mov
inc
adc
push
je
je
cmp
sub
sbb
cmc
and
filds
lret
cmp
jp
cmp
mov
shl
mov
sub
outsb
push
jb
sar
jg
and
and
test
je
dec
dec
pop
xor
adc
sub
decb
cmp
movsl
push
jnp
lret
xor
cs
test
sub
call
and
xchg
sub
add
jno
or
ljmp
nop
add
mov
jmp
repz
sub
call
nop
incl
std
outsl
insl
pusha
adcb
icebp
into
push
mov
mov
mov
pop
ljmp
mov
clc
pop
movsl
in
test
icebp
dec
sub
loope
add
andb
hlt
add
xchg
pop
mov
fadd
js
mov
jg
das
je
push
insb
mov
sub
jg
sub
sub
sbb
mov
daa
sub
mov
shr
sbb
sub
push
pushl
iret
mov
adc
je
and
inc
pushl
out
push
pop
repz
pop
or
test
scas
das
ret
ljmp
in
xlat
mov
xor
add
std
das
sub
and
mov
add
mov
pop
lods
lcall
sahf
in
rorb
jp
mov
jl
sbb
adcl
fs
sbb
cli
add
iret
mov
arpl
adc
xchg
inc
fistpl
std
lea
subb
imulb
mov
ret
cmp
and
xchg
in
pop
test
out
mov
jmp
sub
ret
mov
scas
xchg
into
dec
sbb
inc
lahf
les
inc
adc
or
inc
repnz
adc
nop
call
cmp
dec
mov
mov
and
es
jecxz
sbb
out
test
lea
adc
jge
or
and
jmp
mov
fwait
movb
sub
stc
jne
adc
fdivr
test
and
icebp
or
ljmp
ret
repz
clc
mov
pop
pop
lahf
pop
inc
cmp
or
xchg
js
out
or
outsl
mov
out
mov
push
aam
clc
ljmp
aam
je
mov
xchg
dec
je
lds
xchg
icebp
push
mov
pop
pop
xchg
cmpsb
pop
mov
lcall
xchg
das
mov
xchg
xor
enter
or
sbb
or
gs
add
call
sbb
jo
lock
mov
enter
mov
xor
cs
aad
ljmp
cmp
daa
daa
test
and
xchg
xor
dec
incl
xchg
push
das
adc
je
incb
in
adc
incl
adc
mov
in
push
mov
test
int
and
xchg
cli
movsl
sbb
sbb
dec
test
adc
xchg
pop
cli
and
aas
xor
sbb
inc
outsl
jno
dec
add
push
aam
sahf
mov
rcrl
shll
mov
sbb
loopne
enter
call
sti
inc
sbb
adc
call
test
push
out
pop
or
fs
pushl
mov
and
lods
mov
mov
xor
or
push
and
jmp
stos
int
sub
test
push
push
lret
cmc
jp
add
jmp
and
je
jg
decl
call
fsts
mov
and
je
xor
cmpsb
add
push
loopne
sub
aad
in
xor
mov
movsl
ljmp
iret
or
adc
sub
aas
adc
xchg
cmpsb
jbe
rcll
pop
jmp
orl
push
mov
mov
and
adc
loopne
add
inc
call
or
mov
xchg
pop
mov
mov
dec
push
icebp
mov
cmc
mov
je
xor
daa
and
mov
call
cli
add
push
cld
cld
test
or
push
pusha
sbbl
xchg
mov
jp
lods
filds
jbe
mov
sub
frstor
and
and
fcomps
mov
test
add
js
outsl
cs
call
mov
jg
jmp
sbbb
sub
das
mov
in
add
lea
loope
adc
cmp
jge
pop
adc
sub
mov
jbe
ficompl
fildll
loopne
js
pop
adc
adc
add
sub
lock
xchg
int
daa
xor
out
sub
mov
decl
xchg
pop
push
bound
into
pop
pop
adc
dec
xor
and
call
decl
xor
iret
add
sbb
xchg
cli
jbe
dec
push
lahf
fsubs
movsl
shlb
jae
push
outsl
jno
mov
add
pusha
jecxz
xchg
das
sub
cmp
cmp
in
ss
call
jbe
or
sub
les
mulb
or
lea
movsl
das
std
adc
sub
pop
add
movups
adc
lods
lock
jl
dec
popa
and
imulb
add
cmpsl
mov
cmp
int3
and
xor
lahf
xor
xchg
mov
or
rorl
mov
pop
cmpsb
xor
cmp
sub
inc
decl
inc
adc
aas
push
xchg
jae
pcmpeqb
in
js
test
inc
notl
pop
adc
or
in
adc
jg
aaa
clc
arpl
pop
data16
jmp
clc
and
mov
add
imul
cmp
ljmp
xchg
push
ret
or
pop
hlt
sub
cmpsb
rorl
mov
mov
and
add
mov
cmp
ret
and
pop
ss
sbb
adc
sti
xor
jl
test
call
sarb
sub
adc
out
inc
mov
mov
jg
xchg
sti
sub
and
test
add
ds
mov
lods
fisttps
jbe
cld
jg
inc
jb
mov
je
test
dec
inc
loopne
in
adcl
inc
jmp
rclb
aad
pop
je
test
std
ljmp
repz
test
or
or
ja
xor
cmp
xchg
test
ss
orl
mov
or
and
cmp
stc
hlt
mov
adc
mov
repz
dec
xor
std
pushl
mov
or
and
aas
xchg
insb
add
mov
aaa
sbb
push
mov
push
mov
shrl
mov
or
push
je
pop
sub
jmp
stc
aam
mov
push
in
out
jae
add
jp
lret
sbb
ljmp
dec
insl
hlt
push
jge
leave
adc
push
add
das
je
rolb
xchg
fbstp
jmp
in
call
call
push
gs
or
mov
nop
or
sbb
jmp
cwtl
jb
ret
sbb
cmc
inc
mov
idivb
into
pop
fstps
sbb
xor
pusha
mov
dec
pushl
clc
adc
pop
jae
cmp
adc
lahf
clc
in
loop
idiv
dec
pushl
pop
fdivr
pop
fcmovnb
int3
or
stos
call
cmp
cmpsb
hlt
das
fucom
lea
lea
sub
jbe
inc
cld
lcall
cld
xchg
sbb
push
int3
jns
daa
inc
bound
popf
pop
cld
adc
call
mov
rcll
movsb
mov
incl
pop
adc
dec
mov
adc
popaw
jg
call
inc
dec
pop
pop
adc
sub
je
dec
pop
dec
daa
inc
add
xchg
mov
mov
add
mov
adc
daa
inc
jmp
call
or
add
inc
xchg
xor
jg
add
sbb
pop
sbb
and
jle
cwtl
jp
xchg
pop
inc
sub
test
mov
decl
incl
add
dec
adc
lods
je
ja
mov
push
into
in
dec
push
pop
dec
rol
and
add
int
pop
lret
or
ljmp
cmpps
call
fisubrs
adc
stc
adc
sbb
mov
sub
lea
adc
mov
jl
adc
mov
jp
push
mov
cs
or
cmp
dec
fmul
das
cld
sbb
bound
cmp
call
sub
test
lea
add
pop
test
imul
dec
push
loope
sahf
enter
dec
movsl
adc
je
test
add
aaa
adc
pop
or
lods
push
cli
mov
pop
stc
mov
mov
sahf
and
sbbb
cld
hlt
mov
pusha
mov
dec
insb
aad
mov
adc
or
call
push
push
sbb
negb
inc
inc
and
lea
ljmp
imul
mov
xor
or
mov
push
testl
dec
mov
mov
loopne
ds
push
push
sti
and
imul
cmpsl
retw
push
jg
push
gs
orl
adc
adc
cs
in
push
lods
sbb
cmp
outsl
inc
add
dec
and
pop
xchg
mov
lea
rcrb
rcrb
sub
jns
loop
jo
push
sub
mov
call
sti
test
jle
mov
jmp
nop
sub
or
or
mov
test
mov
movsb
test
add
xchg
call
add
test
mov
dec
mov
mov
test
incl
arpl
push
inc
adc
das
call
sar
clc
in
mov
pusha
icebp
inc
outsl
xor
aas
adc
call
pop
je
icebp
inc
pusha
outsl
jecxz
lock
and
lock
sbb
adc
rcll
fdivrs
fdivr
inc
jg
adc
and
cmp
les
ss
xchg
adc
sahf
mov
jb
adc
out
loop
ljmp
call
inc
xchg
inc
icebp
or
add
inc
sub
mov
add
pop
pop
ret
cmp
inc
mov
and
mov
out
and
lret
movsl
outsl
fbstp
enter
cmp
jbe
mov
loopne
inc
jae
inc
adc
lcall
call
insb
and
pop
push
repnz
sbb
mov
ret
ficoml
sbb
lds
jns
push
adc
xchg
je
jo
cld
adc
mov
lock
decl
xor
pop
ljmp
loope
dec
pop
clc
aaa
mov
xchg
je
scas
lods
ljmp
mov
or
sahf
cmpsb
push
roll
inc
mov
addr16
stos
push
incl
or
cli
push
sbb
je
adc
sub
push
adc
ja
push
lock
inc
xor
jge
jle
push
mov
outsl
icebp
jno
jb
enter
fs
xchg
fcmovnb
and
sub
sbb
enter
adc
push
pop
dec
jne
pop
outsl
pushl
push
call
andl
ss
insb
xor
lock
or
dec
rclb
ror
cmpsb
jno
sub
mov
or
pop
aaa
orl
lret
mov
add
or
add
outsl
lods
adc
push
cmpsl
pop
sbb
jb
inc
jecxz
notb
cwtl
testl
in
mov
int
and
ljmp
repz
cmp
push
inc
loop
adc
adc
adc
pop
das
lock
or
adc
push
mov
fadds
xchg
dec
jmp
dec
lods
dec
adc
pusha
dec
jg
mov
jno
sbb
and
mov
fmul
call
pop
mov
push
xorb
jnp
shrb
inc
push
push
and
shlb
jo
inc
mov
and
int3
cmp
sbb
sbb
xlat
mov
push
or
fwait
adc
mov
aam
clc
fbstp
out
pop
and
and
adcl
test
jl
std
mov
movsb
es
xchg
or
add
xchg
or
cmp
lds
fldt
lea
js
cli
call
dec
fdivr
aaa
rclb
mov
mov
fnstenv
cmpsl
dec
or
decl
jge
insb
adc
xor
or
je
test
add
je
lock
hlt
jp
xlat
vmovsd
mov
lcall
add
pop
jmp
mov
movsl
jmp
jg
leave
jb
inc
arpl
call
sub
cmp
or
aaa
jge
je
div
outsb
jg
loope
inc
test
push
inc
jl
push
jl
scas
in
fldt
inc
sbb
aaa
mov
or
movsl
or
cld
imul
rol
movsl
inc
ss
mov
add
das
aad
cmp
and
xor
cmpsb
and
inc
lret
pminub
fs
add
push
pop
push
xchg
push
cli
fs
mov
nop
jg
mov
cli
ret
sbb
inc
shl
ja
negb
test
dec
pop
aas
fldl
jmp
dec
mov
push
jle
mov
test
jg
sub
mov
clc
pop
mov
fisttpll
ljmp
das
jmp
call
push
adcb
jg
shlb
add
pushf
add
xor
hlt
ljmp
dec
or
add
xor
pop
push
xor
gs
ds
clc
mov
mov
outsl
faddl
push
insl
pop
add
push
xchg
icebp
jg
ds
xchg
mov
adc
or
int
xor
mov
hlt
inc
shr
int3
popf
jge
fstl
pmulhuw
cmp
rcrl
lds
push
iret
dec
xchg
add
and
sbb
and
mov
sub
outsb
movsb
xchg
adc
sbb
lcall
jnp
cmp
je
mov
mov
sahf
jp
mov
clc
or
jae
push
and
insl
sub
pop
mov
ss
mov
push
sti
lods
dec
mov
repnz
aam
xchg
mov
cmpsl
rorl
push
dec
adc
or
incb
jno
push
mov
sub
pop
add
jmp
hlt
call
or
add
call
pop
xchg
out
or
adc
scas
dec
in
into
je
lods
mov
fucomip
fcomp
or
out
leave
dec
testb
lea
rorb
ljmp
fs
and
fnstsw
movsb
cmp
cli
and
mov
ret
fnstsw
nop
inc
or
movsb
das
pop
clc
inc
iret
je
rol
dec
add
dec
cmp
or
mov
mov
in
or
sub
ljmp
iret
mov
popa
sarl
ss
mov
mov
add
icebp
aad
dec
pop
push
mov
loopne
push
jp
dec
decl
jg
add
mov
lahf
push
and
adc
dec
fcmovnu
sub
inc
cmp
aad
cld
add
out
movsb
jp
mov
inc
sbb
add
fiadds
sbb
das
fs
or
mov
call
sbb
dec
xlat
les
sbb
cmc
adc
addl
and
push
addr16
mov
sarl
cmp
in
push
rcl
inc
lret
call
mov
leave
and
inc
or
sar
pop
and
or
pop
sarl
sub
arpl
inc
jecxz
cmp
inc
jp
inc
ss
cmpsb
lods
lds
or
or
add
testb
decb
dec
stos
ss
sub
push
mov
push
test
cmc
fistpll
ja
mov
lea
int3
inc
jb
insb
roll
mov
ss
mov
ljmp
jbe
jo
xchg
inc
frstor
je
push
push
clc
fcomip
ret
imul
insl
adcl
xchg
adc
cli
mov
jo
cmp
loope
sti
jle
push
mov
adc
or
add
fnsave
adc
jp
mov
pop
pop
scas
pop
adc
add
sub
adc
lahf
push
push
fldt
pop
clc
pop
pusha
dec
and
push
stos
call
sbb
test
mov
push
dec
mov
je
cli
mov
ret
push
jle
adc
aad
inc
add
pop
mov
lods
aaa
add
imul
cmp
pop
add
aad
xchg
stos
loop
xchg
int3
das
sub
inc
jle
ret
sbb
add
inc
jmp
dec
mov
sub
mov
sub
inc
or
sahf
sbb
cmp
incl
dec
icebp
mov
cld
daa
stos
jmp
adc
sbb
incl
xlat
pop
enter
insb
insb
or
adc
xor
jg
das
popa
jns
insl
or
popf
or
mov
mov
jno
nop
inc
jg
sbb
call
adcl
sbb
or
push
jne
fistpll
mov
xor
and
pop
call
cwtl
push
pop
rclb
mov
adc
les
sbb
insb
and
sti
lcall
test
and
push
fdivrp
in
pop
daa
fs
cmc
mov
dec
jge
decl
das
mov
fnstenv
adc
inc
mov
rclb
adc
int
push
mov
mov
js
inc
push
xor
outsl
lds
movb
dec
dec
mov
call
push
repz
call
xor
call
clc
push
sbb
xchg
xor
in
in
decl
std
cmp
xlat
and
or
lds
mov
xchg
loope
nop
and
into
testl
or
cmpl
or
arpl
lea
jo
shll
jecxz
pop
inc
dec
mov
sbb
jge
ss
bound
arpl
divb
hlt
mov
cmp
mov
test
lods
fists
cmp
xchg
sub
pop
outsb
jns
ja
js
push
adc
test
or
or
cmp
or
test
or
sub
fidivl
aaa
loop
je
adc
jne
pop
cmpl
test
fsubl
gs
ljmp
sahf
call
movsb
mov
inc
adc
dec
xchg
xchg
ficoms
mov
or
movb
stc
mov
je
inc
mov
push
inc
dec
call
in
scas
add
in
dec
mov
mov
idiv
sbb
int
or
inc
repz
push
sub
cli
pushl
out
pop
je
lea
adc
pop
shlb
stos
mov
or
sti
or
xchg
mov
adc
std
push
add
bound
or
jg
adc
cmpsb
sub
fs
insb
lods
adc
jecxz
cmp
adc
adc
xchg
sub
addr16
adcb
leave
and
addr16
jo
push
dec
bound
cmp
jmp
or
ja,pn
xchg
adc
or
push
sti
mov
daa
inc
pop
aas
adc
push
push
push
cmp
or
icebp
or
notl
sti
push
pop
ffreep
das
cli
xchg
dec
cmovnp
push
sub
loopne
cmp
push
je
cmc
outsb
xchg
stos
icebp
je
jle
pop
inc
or
jl
fisttps
push
dec
popa
inc
xchg
dec
pushf
sbb
ljmp
and
sub
or
add
sub
mov
cmp
hlt
cs
call
clc
jmp
icebp
inc
fisttpll
dec
jno
adc
adc
xchg
dec
mov
jmp
jns
iret
dec
int3
bound
arpl
mov
push
xchg
in
lock
jbe
jle
mov
adc
cmp
xchg
lods
sar
jg
stos
mov
sub
pop
popf
daa
cwtl
adc
add
adc
testb
pop
jge
cltd
xchg
pop
insb
mov
sbb
xchg
cld
inc
push
push
pushf
jmp
pop
push
scas
sbb
push
ret
mov
ret
pop
dec
aas
or
cmp
mov
push
xor
hlt
pushf
pop
lret
addb
call
fwait
push
lock
lret
adc
adc
and
out
ljmp
fcmovu
adc
enter
mov
mov
movlps
sti
mov
jns
out
pop
or
dec
and
ss
aaa
fdivr
pushl
mov
outsb
je
call
adc
out
or
stos
lods
inc
and
fdivr
push
hlt
ret
testb
sbb
cli
push
xchg
clc
ljmp
jbe
lcall
pop
jo
sub
dec
cs
pusha
dec
shrl
out
cmp
ror
mov
nop
outsl
hlt
fldt
dec
paddusb
mov
insb
xorb
lcall
je
in
cld
cmp
mov
aaa
cld
call
outsl
mov
or
inc
mov
in
ret
clc
fldt
faddl
sub
out
aaa
mov
incl
fildll
cld
dec
bound
and
leave
cli
push
add
das
jge
mov
sbb
aas
arpl
pop
insl
fnstsw
movsl
dec
lods
data16
in
mov
icebp
outsl
icebp
stc
xor
push
out
sub
roll
rclb
lods
cli
insb
nop
xor
mov
push
test
in
les
inc
jno
adc
daa
dec
inc
jp
jae
incl
xor
or
in
ss
call
call
nop
fcom
imul
jbe
mov
push
xchg
test
clc
scas
pop
push
mov
pop
pusha
push
lret
icebp
incl
mov
dec
sub
cmp
or
or
lea
outsb
arpl
and
stc
jecxz
incl
mov
test
sub
lds
mov
mov
stos
or
in
rclb
push
je
outsl
aad
nop
mov
fildl
sbb
jo
mov
or
aad
test
jmp
adc
and
cli
inc
pop
lcall
ror
fsubs
or
std
adc
adc
std
xchg
mov
inc
dec
ss
sti
andl
cli
in
cmp
dec
cld
or
ds
xlat
xchg
outsl
xchg
mov
jge
and
mov
call
pusha
push
dec
sub
dec
je
mov
hlt
sub
fldl
mov
int3
mov
mov
adc
fdivr
divps
or
xchg
nop
or
cmp
hlt
pop
loopne
mov
cli
and
sub
inc
sahf
sbbl
add
clc
and
lahf
jmp
add
rcr
jg
sti
sbb
incl
fadd
pushf
or
test
push
ret
and
jmp
and
in
rol
jl
adc
adc
or
fistpll
test
and
sarb
int
or
mov
inc
call
out
fisttpll
leave
add
cli
sbb
lahf
inc
nopl
shrl
pop
pop
cmp
orl
mov
fcmovnu
pop
jg
xchg
in
mov
push
aaa
movsb
jl
mov
xchg
fwait
pop
jp
subl
xor
div
jle
push
xchg
jmp
mov
mov
mov
daa
jl
cmp
push
sbb
mov
fcmovnu
shrl
pop
iret
sub
pop
je
dec
xchg
push
push
xchg
loopne
push
adc
xchg
jl
hlt
loop
arpl
inc
shrl
add
jnp
cmp
jns
pop
xchg
fsubl
push
push
ret
lahf
jge
repnz
dec
cmpb
push
das
dec
cmp
cmpl
repz
dec
sbb
aaa
clc
lcall
jno
fstps
adc
adc
lods
or
gs
cli
mov
mov
imul
jg
cmpl
xchg
sbb
cmp
inc
push
stos
outsl
mov
pop
mov
shll
imul
les
push
push
insl
xchg
cwtl
mov
adc
fmuls
jg
pop
dec
mov
dec
cmpsl
pop
or
in
lcall
or
or
adc
mov
push
or
movl
or
dec
dec
pop
addr16
pop
clc
adc
test
and
xlat
add
adc
out
lods
push
mov
decl
idiv
xchg
ljmp
imul
call
fsubp
or
int3
or
xchg
and
or
fcmovnu
call
jl
cmp
or
pop
in
fwait
std
push
and
es
mov
push
bound
incl
mov
add
mov
rcrb
decl
inc
xor
rorl
int
jae
iret
call
sbb
or
and
pop
add
and
or
push
cli
jnp
call
push
and
add
ds
pop
out
loop
lret
add
jge
cmpsl
imul
je
int3
cmp
das
jo
lea
sub
push
rcl
outsl
mov
repnz
in
out
or
pop
cmc
les
xchg
stos
push
jns
lcall
mov
and
sub
and
inc
outsl
fwait
mov
dec
xchg
sbb
dec
or
test
mov
outsl
repnz
imul
push
xchg
push
je
jmp
inc
mov
push
cmp
test
frstor
push
jp
mov
scas
and
mov
or
cld
lea
cld
loope
push
test
xorl
cmp
add
cmp
sub
ret
icebp
stc
sub
dec
cld
call
rcll
pop
push
jge
add
push
loopne
es
push
je
sarb
imul
sub
jnp
adc
mov
dec
insb
jg
clc
decl
sarl
add
inc
push
scas
and
lret
dec
loopne
lcall
or
fmulp
cmp
lea
ficompl
sbb
push
rclb
sahf
xchg
inc
add
shrb
add
mov
aam
call
cli
sub
movsb
ljmp
and
pop
loop
aaa
movsl
pop
adc
mov
test
shlb
aas
push
add
jg
mov
popf
mov
call
jle
jmp
mov
xor
loop
cmp
shl
cmp
rcl
cmp
jl
wbinvd
xor
add
js
daa
cmp
ret
mov
rolb
cmp
xlat
jnp
dec
push
or
cld
imulb
aas
jbe
fsubrl
jns
adc
or
mov
fisttpl
dec
jbe
inc
test
lcall
pop
xor
push
call
add
push
mov
fisubrl
int
mov
push
and
insl
shl
sbb
mov
fmulp
aam
aaa
mov
xor
pop
adc
adc
rol
mov
mov
std
xor
das
xchg
clc
add
lods
xchg
push
mov
adc
mov
mov
sbb
adc
fcomps
outsl
gs
les
or
pop
sub
leave
dec
mov
arpl
xchg
xor
or
lods
arpl
push
mull
ss
jl
xorl
xchg
shrb
jecxz
and
call
or
rcrb
call
clc
loope
jg
hlt
jmp
inc
scas
arpl
xor
mov
xchg
cmpsb
jg
mov
addr16
sub
outsl
add
adc
mov
sbb
lods
ss
jo
fadds
add
jecxz
inc
adc
lret
clc
or
outsl
std
add
push
adc
andb
xchg
adc
push
adc
mov
fcompl
or
hlt
or
inc
add
xchg
adc
data16
jb
mov
cwtl
jo
test
push
sbb
cli
in
je
push
pop
sbb
das
cmc
pop
clc
dec
orb
xor
xchg
xor
push
mov
xchg
lock
xor
xchg
movsl
std
push
inc
in
or
sub
lock
pop
mov
insb
push
lods
outsl
add
call
repz
mov
loop
imul
loope
das
lods
adc
das
or
je
push
out
fwait
pop
clc
sub
call
sub
jecxz
mov
ret
add
inc
cs
xor
push
das
sbb
cmc
xchg
popa
mov
push
or
mov
pop
addr16
call
ljmp
mov
aam
jbe,pt
dec
adc
test
loope
xor
hlt
imulb
pop
xor
andl
es
sti
adc
flds
mov
sub
or
cli
mov
shlb
and
loop
ljmp
je
gs
xchg
pop
mov
sar
xchg
test
je
movb
pusha
sub
mov
cs
and
lock
add
fildll
ds
lds
bound
xorb
pop
call
movb
mov
les
pushl
xchg
aaa
in
and
test
ror
push
inc
dec
call
jmp
dec
and
call
jmp
mov
inc
stc
cs
pop
xlat
je
jl
hlt
mov
xor
sbbl
pusha
test
pop
decb
loop
clc
push
aas
or
push
movsb
test
outsb
mov
mov
aaa
aaa
pop
ds
push
jecxz
inc
fcoml
jl
push
outsl
cld
mov
test
xchg
inc
or
loop
xor
outsl
jmp
sbb
pop
pop
adc
sahf
xchg
push
shlb
insb
divb
adc
in
das
mov
fstp
push
test
mov
or
aad
int3
cld
mov
jg
mov
lahf
imul
cmc
jmp
mov
mov
leave
loop
out
sbb
adc
cmp
cld
push
adc
js
add
in
dec
dec
push
pop
cli
mov
mov
and
cmpsl
xor
mov
sarl
dec
xchg
add
fstpt
mov
pop
shr
in
adc
je
mov
js
add
es
cmp
cmc
lods
call
movsl
inc
or
subl
sub
rcl
or
les
push
dec
adc
or
and
dec
xor
adc
std
push
jle
mov
mov
adc
push
mov
jmp
pushf
add
or
hlt
or
inc
cmp
sub
or
test
test
sbb
lahf
jne
or
mov
hlt
call
or
outsl
je
mov
push
cmpsb
test
dec
cmpl
dec
cli
das
je
jo
adc
fldcw
mov
mov
insl
test
lods
mov
mov
fucomi
add
rcl
mov
out
ret
cmpsb
mov
adc
loope
fimull
mov
sub
mov
jge
jge
jp
cmp
mov
negl
mov
or
push
les
test
push
sub
add
into
mov
adc
outsb
push
xchg
pop
nop
mov
pop
push
popf
repz
xchg
jmp
sub
daa
inc
es
lahf
les
inc
fbld
dec
push
les
and
les
jecxz
push
lea
fsubl
inc
adc
dec
cld
sub
push
or
push
xchg
and
div
mov
dec
cltd
insb
enter
jo
xchg
mov
call
inc
mov
enter
or
pop
call
cmp
addr16
dec
sbb
cmp
loop
cli
call
add
mov
mov
inc
cmpb
push
mov
outsb
call
cmp
fnstsw
mov
or
daa
push
gs
push
mov
scas
out
add
inc
hlt
mov
mov
adc
adc
cmp
clc
mov
push
jp
imul
push
test
pop
sbb
rcll
fdivrp
or
or
scas
mov
push
adc
imul
push
test
xchg
mov
decl
mull
cmpsb
push
clc
je
adc
lock
jne
pop
stc
adc
les
and
lahf
mov
call
decl
pop
cmpsb
pop
adc
je
add
je
loopne
filds
pop
mov
mov
sub
cltd
mov
pop
sub
and
popa
and
push
adc
outsl
jge
jg
movsb
push
xlat
push
lea
loope
loope
dec
mov
std
sbb
mov
mov
jge
xchg
inc
sbb
and
dec
mov
add
dec
push
xor
jg
inc
cmpsb
jl
and
mov
icebp
ficompl
adc
stos
ret
mov
std
mov
cmp
cltd
mov
and
push
test
jg
jle
or
andl
je
push
int
adc
dec
or
fldenv
mov
pop
call
pusha
inc
loop
lret
mov
push
mov
pop
mov
call
mov
push
orb
sub
addb
mov
hlt
pop
mov
lds
mov
std
add
adc
pop
and
imul
bswap
cs
pop
cli
rol
je
mov
xor
push
loop
mov
xchg
sbb
and
test
sub
loopne
cmpsl
in
sbb
add
xchg
mov
loopne
or
das
or
fiaddl
adc
mov
leave
add
add
pop
pop
cmpsb
lcall
fldt
stos
pop
push
test
adc
xor
test
adc
or
arpl
lea
ret
data16
mov
adc
fucomi
mov
mov
cli
int
pop
jg
or
push
leave
sub
clc
push
mov
subb
mov
and
cmp
int
pop
outsl
shrl
call
lods
insl
mov
or
push
nop
mov
dec
icebp
inc
push
lret
rorb
lcall
jmp
pop
repnz
adc
adc
push
jg
clc
mov
jp
xchg
jo
adc
jmp
or
mov
push
stos
fists
hlt
dec
xor
or
jae
jmp
mov
jns
loope
pop
jl
ficoms
mov
cli
dec
jg
mov
imul
cmpsb
add
adc
adc
xor
mov
movsb
or
test
xchg
int3
inc
repnz
mov
cmpsb
xor
aam
mov
out
lcall
push
pop
icebp
cld
pop
data16
jmp
aaa
fadd
sbb
imul
lea
cmpsl
mov
pop
fs
cwtl
pop
andb
lods
pop
loopne
mov
stos
xchg
mov
dec
in
ficoml
data16
out
in
fisubrs
fwait
icebp
add
mov
sbb
lods
fs
xlat
pop
push
jnp
xchg
or
sub
or
ds
mov
out
aad
xor
pop
fidivrs
rcl
cmovle
xchg
or
mov
and
push
and
pop
pop
faddl
jmp
out
rcrb
addb
or
lea
lods
ud2
jmp
adc
inc
adc
adc
cmp
adc
sarb
cld
or
loope
pop
cs
lcall
sbb
and
xchg
outsb
js
icebp
adc
loopne,pt
or
call
or
mov
mov
push
orb
inc
imul
add
or
xor
das
lock
fistpl
cmp
pusha
jo
pop
pop
or
xor
and
dec
ljmp
rcrb
xor
andl
adc
icebp
lcall
mov
xchg
sub
ljmp
repnz
pop
inc
cmp
jecxz
fnstsw
outsl
mov
je
push
out
or
sar
mov
std
add
aad
mov
push
je
mov
call
decb
iret
pop
test
js
xchg
popa
inc
ljmp
clc
jg
int
jae
adc
das
jl
cmp
jmp
cli
pushf
and
pop
in
ljmp
ljmp
stos
add
call
lret
jp
stos
lret
rorl
lods
sub
adc
sbbl
adc
mov
jg
or
stos
push
stc
es
sar
call
push
sbb
in
and
inc
cmp
mov
jb
int3
adc
mov
int3
jp
jne
push
push
insb
pop
sbb
sbbl
notb
cmp
or
sub
xor
adc
adc
nop
cmp
std
mov
jecxz
jae
sub
nop
push
xor
loop
jg
lds
add
insb
inc
dec
dec
sub
mov
pusha
mov
xor
jno
inc
fstl
test
mov
daa
test
lods
in
pop
mov
fidivl
or
movsl
out
jb
mov
adc
pop
popf
test
sbb
pop
ljmp
mov
scas
add
jae
std
mov
sbb
test
leave
clc
jne
das
rcrb
xchg
lods
and
aaa
cli
outsl
incl
adc
pop
sbb
mov
sub
je
shrl
or
inc
and
pop
inc
test
loopne
lods
add
in
inc
xorl
lcall
adc
xchg
call
out
push
shll
shrb
add
das
je
adc
rorl
inc
mov
mov
jmp
push
cmpl
call
xchg
aaa
rcrl
and
call
or
sub
in
add
inc
dec
cli
outsl
ljmp
jne
repz
call
out
xchg
pop
cmp
fcomip
mov
ja
sub
mov
inc
mov
mov
pop
or
ja
adc
jecxz
loop
enter
mov
adc
xchg
cmp
pop
insb
or
push
adc
mov
mov
xchg
call
jne
push
sub
jp
popa
inc
and
add
aam
ljmp
mov
sbb
sbb
mov
ss
and
mov
cwtl
push
jl
int3
lods
in
das
adc
lahf
es
aam
add
adc
loop
test
jne
enter
and
loopne
mov
mov
outsb
and
xor
or
dec
push
add
or
push
or
stc
push
or
dec
std
das
lock
push
or
mov
push
mov
imulb
stc
or
and
mov
xor
popf
adc
sub
lods
andb
insl
mov
sub
xchg
cmpsb
push
mov
je
mov
xor
cs
sbb
push
je
add
test
jo
out
pop
xor
popf
or
and
das
cld
test
cld
rclb
cmp
test
xlat
mov
test
push
adc
inc
in
cmp
mov
sub
call
push
mov
jns
pop
jg
xchg
ss
sbb
das
rcll
mov
shrb
les
sbb
dec
out
mov
lods
ret
adc
or
and
inc
cmp
or
sbb
pop
out
cld
movsl
mov
je
and
mov
and
popa
xchg
push
ret
inc
inc
xor
add
mov
add
and
add
fistpll
test
push
inc
ret
dec
dec
jle
cmp
jg
inc
push
or
dec
ds
clc
adc
xor
fwait
push
pushl
loopne
and
call
dec
leave
adc
and
shrb
push
fisttpl
nop
cmpsb
jg
pop
aad
adc
inc
sbb
xchg
clc
jne
leave
pop
bound
sbb
call
or
das
int
je
stos
mov
test
add
call
jb
pop
sub
and
lock
fucomip
or
mov
push
dec
push
mov
sbb
lods
popf
call
inc
add
hlt
out
idivb
or
push
rep
push
mov
cmp
ficomps
xchg
sbb
adc
in
repnz
xchg
ss
lcall
adc
xchg
rcrl
inc
push
nop
pop
call
sub
addb
mov
dec
sbb
add
in
adc
adc
in
lret
jmp
jb
fisubrs
stc
jp
std
mov
cmp
adc
ja
fisubrl
pop
pop
std
adc
outsb
inc
dec
inc
js
dec
leave
mov
jg
dec
add
cmp
jle
popa
fcmovnu
loopne
jmp
jmp
clc
into
test
cmc
push
cmp
lods
shll
sbb
fstpl
inc
movsl
or
and
mov
or
xor
test
mov
pop
fdivs
pop
mov
pop
mov
jae
into
and
mov
push
cmc
sbb
inc
js
dec
outsb
ret
sbb
mov
add
xchg
pop
lods
aad
pop
pop
jb
int3
enter
xchg
push
cmp
pusha
sbb
or
in
xor
lret
stc
test
std
adc
push
push
mov
movsb
jnp
lock
fildll
shlb
pop
jae
sub
call
fwait
clc
testb
jnp
sbb
pop
call
icebp
sub
xchg
mov
addr16
aad
mov
jg
pusha
cmp
arpl
incl
dec
ret
in
inc
sub
jno
ret
push
popf
push
orl
pop
test
ss
mov
xchg
pop
and
cmpsl
data16
push
xchg
mov
xchg
mov
or
inc
fsubs
pop
lahf
xchg
pop
and
dec
aaa
pop
mov
cmp
fisttpll
pop
sub
push
push
cld
xor
push
shrb
les
or
sub
sbb
xor
inc
fwait
xor
pusha
mov
rorl
es
inc
sti
jg
jp
mov
push
lcall
mov
cld
insl
xchg
imul
jmp
mov
mov
ffreep
cli
push
mov
imul
hlt
add
push
inc
fprem
icebp
inc
push
leave
outsl
or
pop
cmpl
pushl
inc
or
gs
lea
adc
mov
jg
lods
inc
scas
sub
stos
in
or
pop
stos
shr
mov
and
iret
mov
xor
stos
outsb
cli
pop
insb
shrb
pushw
icebp
pop
sub
adc
mov
in
clc
lea
arpl
inc
jmp
adc
lods
add
jbe
xchg
or
and
adc
fiaddl
mov
push
je
adc
dec
cltd
fbld
mov
dec
mov
inc
fildl
mov
xor
xor
mov
test
insb
xchg
fs
mov
and
sub
cmp
dec
cmp
call
or
and
test
lods
cli
aas
pop
push
mov
xchg
movsl
cld
iret
insb
or
xchg
pop
pop
push
or
je
xchg
fcoms
mov
daa
pop
push
repnz
push
clc
das
sub
cmpsb
sbbl
or
pop
fdivl
imul
out
sbb
mov
das
lock
hlt
cmp
xor
dec
and
dec
idivl
inc
lret
mov
jl
cmp
inc
movsb
pop
inc
xor
dec
movb
adcl
sub
or
fcoml
int3
out
mov
dec
sbb
dec
and
call
dec
outsb
mov
inc
dec
or
sub
clc
insl
adc
aas
dec
arpl
pusha
xchg
inc
xor
jge
jge
xlat
roll
push
clc
mov
outsl
pushl
dec
push
cs
or
outsb
sbb
das
cmp
mov
pop
ljmp
pop
mov
and
clc
inc
dec
adc
or
les
sub
add
push
sub
cld
adc
lock
aaa
pop
ss
subb
ret
mov
or
push
ljmp
add
outsl
aad
into
je
cmp
xchg
and
pop
insl
popa
sub
arpl
pop
push
lahf
loope
jbe
andb
jg
jb
clc
test
ss
adc
add
xor
jne
mov
xlat
sahf
decl
sbb
sarl
arpl
mov
and
addr16
icebp
test
insb
mov
mov
jmp
sub
inc
jb
add
mov
mov
aaa
and
cld
push
add
push
rorb
dec
pop
xlat
cli
je
jmp
insl
idivb
les
jns
add
enter
mov
inc
outsl
mov
in
fisubrs
addl
push
movsb
loope
hlt
int3
add
or
fists
mov
mov
fstpt
push
or
ja
out
and
lret
add
and
pop
ja
movsl
or
imul
sbb
dec
sarb
jge
xor
cltd
jmp
lods
mov
cmpsb
xor
sbb
pushf
arpl
rcl
fisttps
js
and
jmp
pop
stos
pop
jns
stos
shr
cmp
pop
mov
idiv
xchg
mov
mov
sbb
jp
ret
cmpsb
mov
jp
pop
jmp
and
pop
xchg
inc
and
and
or
mov
mov
lods
cmc
adc
push
movsb
in
lret
mov
dec
add
push
or
pop
das
adc
pop
call
loopne
fcomi
dec
loopne
out
sbb
mov
jne
aaa
mov
cmpsl
enter
data16
out
sbb
icebp
jnp
or
lret
mov
sub
push
jne
loopne
mov
lock
out
std
sub
lock
mov
lcall
movsl
negl
and
pop
icebp
dec
xor
call
jb
in
imulb
jecxz
sbb
xor
ja
js
or
and
dec
sar
jmp
je
xlat
xlat
aam
les
jns
int3
or
add
fnstcw
test
sbb
les
lds
mov
sbb
je
pop
cmp
jg
inc
pop
pop
mov
ret
sub
sbb
mov
pop
add
js
sub
fildl
aaa
add
dec
push
mov
fdivl
sbb
lret
call
sbb
sbb
loop
test
pop
cltd
fnstcw
fcmovbe
sarb
jg
mov
add
xchg
sbb
push
pop
mov
dec
dec
or
sbb
xchg
enter
dec
ret
jl
mov
pop
mov
fsubp
mov
dec
cld
fists
jle
xor
insb
xchg
decl
push
xchg
inc
jg
outsl
add
mov
dec
into
loope
sti
ret
stc
or
mov
xchg
or
shll
loopne
popa
xchg
daa
dec
and
push
outsl
je
repz
push
cmp
lcall
pushf
or
shlb
daa
ret
fisttps
cwtl
out
ucomiss
mov
loope
add
or
inc
cli
sbb
xor
pop
jle
jmp
fs
enter
stc
adc
dec
push
ficomps
cmp
or
pop
pop
outsl
lea
mov
fildll
stos
mov
push
mov
outsl
push
add
arpl
fistpll
je
and
out
ja
cli
test
jne
idivb
dec
inc
fcmovnu
outsl
sbb
add
aaa
hlt
es
jbe
shlb
mov
adc
pop
out
mov
mov
cmp
xchg
sub
xchg
xchg
call
dec
or
cli
movsl
pop
call
ret
push
jbe
adc
subl
sbb
cmp
jg
pusha
leave
setns
push
mov
sbb
sbb
mov
or
ja
jbe
and
movsl
push
call
cmpsl
test
aaa
clc
push
lods
mov
and
sub
outsb
or
sbb
aam
mov
je
cmp
cmp
movsl
adc
mov
adc
adc
sub
call
xchg
js
cmp
push
sbb
mov
insl
test
sti
jne
cmp
gs
and
jmp
xor
hlt
and
fistps
aas
mov
jecxz
dec
mov
pop
mov
sub
inc
sti
outsl
insl
pop
in
or
mov
lods
jl
mov
hlt
test
sub
test
mov
dec
sub
shlb
or
mov
add
pop
loop
and
jb
lret
push
std
pop
fadds
in
jnp
xchg
std
mov
repz
movsb
cmpsl
push
or
sbb
pop
js
out
xchg
adc
jb
jle
jmp
mov
ret
insb
mulb
cmp
orl
xchg
mov
xchg
repz
leave
push
pop
and
ds
xor
xchg
pop
in
xchg
jns
mov
push
sub
and
test
and
mov
xor
jmp
call
or
and
enter
mov
movsl
testl
sub
mov
mov
inc
mov
cmpsb
lock
adc
call
shrl
push
sub
cmp
mov
add
jmp
inc
dec
mov
sub
push
ret
jno
dec
arpl
aaa
ss
lret
out
in
dec
add
inc
push
dec
sbb
mov
add
out
dec
jae
add
into
xor
inc
add
adc
outsl
fidivrs
inc
inc
add
call
push
mov
inc
std
jns
xor
mov
inc
out
add
rorl
jbe
jbe
jmp
or
sbb
outsb
mov
mov
add
dec
inc
test
in
out
mov
std
xchg
add
test
movsl
or
outsl
shlb
roll
mov
mov
or
dec
out
dec
inc
outsl
push
push
mov
pop
push
jg
ja
add
lock
inc
add
push
dec
rol
pop
inc
add
cld
pop
testl
push
jns
jae
ret
add
mov
mov
xor
push
pop
mov
jl
mov
imul
push
dec
je
mov
lret
adc
inc
outsb
call
outsl
push
push
loope
dec
dec
jo
movsb
add
out
arpl
add
addr16
add
int
adc
inc
dec
jmp
xchg
addr16
dec
inc
push
inc
iret
xor
jo
inc
xor
xchg
test
dec
adc
add
xchg
fdivrp
cs
mov
or
cmp
or
fwait
leave
xor
repz
js
movsl
sub
cmp
icebp
pop
xchg
xor
mov
cli
sbbl
jg
clc
or
cld
pop
call
sarl
jp
or
rcrl
pop
gs
mov
xor
adcl
movsl
dec
js
jle
lods
jo
mov
cld
pop
adc
adc
adc
xor
cltd
push
pop
pop
push
rorb
je
or
or
add
rcl
xchg
sbb
lods
divb
shll
lock
mov
lods
sub
inc
lods
lcall
rolb
jg
mov
aaa
aas
clc
mov
cmp
stos
and
stc
lret
add
mov
imul
xorl
pop
mov
out
mov
mov
pushl
clc
push
aaa
pop
clc
lock
and
and
je
pop
lea
call
sti
jle
push
adc
xchg
jle
out
mov
jbe
or
and
lcall
mov
nop
and
icebp
mov
sbb
in
in
lahf
adc
movsl
lods
loop
je
shrb
jg
push
je
mov
adc
or
sbb
daa
roll
cli
push
and
and
mov
or
jns
push
imulb
out
inc
pop
or
pop
je
bound
inc
jge
sub
fnstsw
incl
movsb
sub
outsb
test
cmp
dec
ret
sti
or
push
bt
into
test
xchg
xorb
shrl
inc
jbe
pop
mov
arpl
dec
outsl
ffreep
outsl
xchg
popf
inc
xor
mov
jno
push
sbb
stos
mov
cli
push
xor
pusha
adc
out
or
lods
mov
inc
mov
ljmp
pop
xchg
stc
mov
adc
or
dec
push
adc
lods
adc
pop
fisttpll
jl
adc
mov
ljmp
lock
sti
call
pop
push
push
lock
xchg
adc
stos
jmp
or
mov
add
mov
mov
mov
jne
push
mov
and
adc
mov
sbb
dec
ljmp
lret
dec
outsb
pop
shl
ljmp
lahf
test
enter
xchg
pop
ljmp
mov
jo
or
add
mov
pusha
or
nop
in
mov
std
push
vaddsubps
inc
jno
cmp
push
clc
or
push
or
sahf
pop
movsl
push
mov
or
clc
jb
fimuls
xor
loop
subl
popa
inc
mov
fs
mov
jg
outsl
andl
xchg
arpl
push
pop
clc
lods
jp
or
inc
inc
or
inc
addr16
pop
fadd
sbb
ja
outsb
adc
insl
pop
cmpsl
sbb
push
jmp
push
adc
rcrl
xchg
mov
mov
adc
in
cld
neg
adc
mov
hlt
jo
shld
aaa
icebp
ja
dec
daa
aad
aam
xchg
and
sub
or
divb
sub
mov
cld
stos
xor
xor
js
and
cmp
xor
dec
add
insb
pop
and
mov
sub
dec
aaa
int
popf
adc
mov
fwait
pop
sub
insl
push
aaa
call
jns
outsl
push
ficompl
mov
int3
add
and
pop
hlt
inc
je
or
push
std
push
icebp
fbld
mov
add
pop
flds
mov
call
call
push
popf
cmpsl
push
test
pop
add
xor
jbe
cwtl
cli
sbb
shll
and
popa
ljmp
push
mov
adc
imul
adc
fimuls
push
inc
jge
xor
push
les
sbb
enter
hlt
push
dec
or
xchg
mov
incl
bound
jmp
stos
jo
fnstsw
mov
or
decl
scas
push
jae
decl
fcoms
push
jp
insl
dec
insl
outsl
fldl
jle
add
xchg
mov
outsb
or
or
out
test
pop
lret
sbb
xchg
das
hlt
fstpl
test
jo
imul
or
popa
sti
outsl
clc
and
adc
pop
add
mov
sbb
and
das
fcompl
push
testb
bound
popa
dec
xor
push
je,pn
lcall
fidivrs
mov
xor
aam
sub
outsl
aad
dec
in
imul
stc
je
and
cli
or
jmp
inc
lock
jno,pn
adc
cmp
ret
xlat
xchg
outsl
hlt
test
ds
adc
lods
arpl
jae
adc
jle
je
mov
mov
add
jb
cmp
jl
ja
fcmovnb
movhps
and
rcr
add
outsb
ljmp
rorl
xchg
and
pop
adc
mov
mov
xchg
or
or
cmc
lock
jmp
mov
lods
push
lahf
xchg
ret
jnp
pop
mov
and
rcrl
pop
or
pop
sub
mov
adc
dec
adc
push
outsl
cmp
mov
push
insl
fldl
repnz
and
sub
lods
bound
sti
inc
mov
jns
inc
mov
cmpsb
jmp
insl
xchg
pop
jge
and
inc
sub
and
cmp
mov
out
xchg
int3
cmp
test
or
xchg
test
sarl
adc
lcall
push
xchg
scas
enter
xchg
outsb
jae
push
push
sub
pop
test
dec
and
pop
add
cld
repnz
pop
jl
lock
pop
rcrb
in
or
mov
pop
add
adc
cmp
cld
lcall
jnp
call
shlb
or
jae
sub
fistps
shr
popa
call
fdivrl
inc
add
call
xchg
iret
adc
pop
adc
fsubp
rcll
or
call
fmuls
or
bound
xorl
fists
push
test
pop
sbb
in
or
iret
call
movsb
ljmp
adc
mov
scas
in
je
je
test
or
and
sbb
int3
push
sbb
enter
mov
push
and
push
test
leave
movsb
arpl
mov
cmp
cli
mov
stc
cmp
andb
mov
decl
mov
test
sbb
loop
push
call
sar
adc
movsb
mov
shl
push
pop
fwait
inc
call
addr16
push
xchg
add
lea
daa
and
imul
cld
cmpl
or
insb
cld
lods
xchg
loopne
out
into
arpl
adc
push
push
xor
negb
stos
test
ret
dec
ret
jge
mov
add
call
inc
rolb
scas
cwtl
icebp
outsl
bound
in
clc
jo
push
lock
rorb
mov
and
push
inc
inc
out
jno
in
dec
mov
xor
mov
stos
sbb
addr16
repnz
push
jle
or
and
call
imul
je
clc
sbb
inc
and
je
sahf
std
and
je
fdivrl
or
lds
pop
push
mov
das
sahf
adc
cvtps2pd
clc
mov
fstpt
test
sbb
cmpsl
push
or
push
dec
sarl
or
aad
lock
mov
xchg
or
inc
adc
sbb
cmp
xor
xor
fbld
fsubs
je
and
outsb
cs
jge
xor
mov
or
sub
xchg
jle
cld
sbb
dec
adc
sbb
ljmp
into
fildll
add
lahf
xorl
push
mov
dec
into
mov
cmp
xchg
jle
push
xchg
or
xchg
mov
inc
pop
loope
or
call
test
in
outsl
push
orb
dec
sbb
pop
or
pop
arpl
lcall
mov
jl,pn
iret
sahf
hlt
push
mov
test
pop
orl
pop
mov
xchg
test
lret
or
dec
sbb
jg
xchg
loop
lds
mov
iret
je
xor
mov
mov
mov
popa
sbb
mov
mov
mov
fcoml
fimuls
rorb
add
bound
fidivl
push
mov
xchg
fiaddl
shlb
cmp
push
add
or
ja
dec
mull
dec
jns
cmp
sarb
xchg
callw
int3
das
sbb
js
mov
lahf
pop
ja
out
add
adc
clc
fistpl
or
push
cmp
push
adcl
push
dec
insb
sbb
adc
mov
sbb
mov
mov
ja
adc
js
cwtl
shr
in
mov
add
lahf
ret
out
sub
mov
or
dec
call
lods
or
inc
hlt
and
xchg
mov
outsb
mov
add
or
mov
cmp
cwtl
jne
xchg
out
insl
fimuls
xchg
ret
int3
add
mov
jecxz
mov
imul
call
and
cwtl
das
xchg
out
xor
add
mov
idivb
cmp
dec
icebp
or
dec
pop
jl
pop
dec
xorl
fcomip
call
outsl
fildll
ret
dec
or
mov
sbb
cld
sbb
xor
js
test
shl
lock
or
mov
inc
insb
insl
adc
out
loop
js
adc
mov
std
outsl
jg
imulb
mov
mov
jbe
push
repz
cmp
mov
jo
sbbb
test
inc
inc
mov
gs
mov
addl
movsl
dec
push
adc
adc
jo
xchg
lea
mov
cmp
out
fidivrl
mov
jne
test
mov
fmul
test
dec
into
hlt
arpl
mov
xchg
pop
xor
or
hlt
mov
fiaddl
repz
or
or
or
or
into
sub
pusha
or
loope
jb
shlb
fildll
movsl
fistps
xor
das
ficoms
pop
aaa
outsb
rorb
sahf
aas
ds
je
std
outsl
je
hlt
mov
repz
add
je
push
push
mov
hlt
add
les
mov
mov
mov
pop
cs
xlat
add
pop
sbb
sbb
push
jns
adc
enter
testb
and
sahf
pop
sbb
pushf
imul
sub
pop
jge
mov
sub
js
adc
scas
xchg
add
jg
mov
rol
outsl
je
xlat
mov
mov
fcoml
adc
je
or
bound
cmp
xor
cmp
lock
pop
in
xchg
sub
or
cmp
dec
lea
outsl
and
pop
pop
mov
push
xor
decl
push
call
mov
out
das
mov
sbb
lcall
clc
pop
push
adc
cs
movsl
pop
movl
test
dec
pop
mov
jne
mov
sub
mov
dec
insb
mov
stos
xchg
lock
or
mov
mov
add
das
faddl
and
je
cmp
mov
mov
ljmp
jbe
mov
fildll
fdiv
and
pop
jle
mov
adc
sbb
push
mov
stc
fisttpll
adc
push
jbe
aaa
ja
in
inc
imul
scas
jp
adc
xchg
fidivrl
adc
std
pop
stc
inc
and
ljmp
xchg
jb
dec
mov
enter
sub
add
rcrl
out
push
mov
sbb
cltd
mov
mov
jge
lds
rcll
mov
jno
cmpsl
mov
in
cmp
and
mov
rcll
add
lods
mov
xchg
add
push
mov
mov
jmp
fistps
cmc
xlat
mov
int3
add
mov
js
and
push
jnp
cmp
pop
sbb
inc
call
ja
gs
mov
inc
sti
inc
lock
les
inc
adcl
outsl
ds
out
outsb
jo
add
lahf
arpl
int
decb
mov
test
jbe
lret
movsl
outsl
lock
xor
pop
push
xchg
adc
leave
lods
sub
sbb
jge
dec
loop
hlt
mov
pusha
and
push
fs
lret
push
push
push
or
fdivrl
push
andl
inc
inc
dec
jo
sub
ret
sub
adc
je
sub
inc
pop
pop
dec
push
adc
push
aad
test
mov
dec
dec
popa
lea
fs
sbb
lods
dec
sub
xchg
jge
xchg
sbb
rcrb
aaa
je
jo
ss
sub
fildl
mov
jb
mov
cmp
mov
incl
in
rclb
and
mov
imul
das
mov
or
or
mov
pop
adc
pusha
mov
outsl
cld
push
xchg
sub
sahf
inc
inc
mov
imul
mov
je
xor
mov
or
or
adc
dec
insb
inc
insl
dec
fs
lods
and
ljmp
lods
mov
aaa
pop
outsb
adcb
xchg
mov
add
adc
shll
js
jbe
das
cmp
mov
dec
lds
outsb
ficoms
or
mov
fildl
or
cmp
mov
int3
pop
sub
adcb
mov
mov
lds
or
outsb
das
jne
fidivl
fidivrs
or
ret
push
cmp
fnsetpm(287
mov
out
shlb
and
lock
push
adc
sbb
decb
fadds
sub
add
orl
stc
pop
imul
lahf
test
call
pop
mov
add
sbb
add
call
pushf
inc
push
call
divb
or
mov
jnp
dec
out
jne
add
push
or
xor
out
inc
cmovle
mov
add
mov
push
inc
sub
add
and
mov
icebp
and
ret
int
pop
add
daa
mov
inc
jb
add
jl
pop
movsl
outsb
jg
fimuls
and
jmp
mov
test
imulb
mov
mov
outsl
arpl
pop
loopne
loope
adc
inc
fldt
jmp
fs
jle
sar
push
sti
sub
xchg
adc
imul
sbb
or
je
rcrl
shrb
lds
and
xor
sub
sub
or
loopne
sarb
or
adc
and
stos
shll
repnz
ss
fsubrp
call
jmp
and
cmpsb
mov
mov
cmovp
call
push
jp
push
in
pushl
cmpl
adc
sbb
add
dec
call
xchg
outsl
xor
fcompl
jmp
or
enter
std
mov
fldt
adc
xor
mov
mov
xchg
cmp
outsl
incl
pushf
dec
mov
shlb
push
sub
les
fistpll
mov
rcrb
push
xchg
in
pop
or
je
adc
push
insb
outsb
jmp
jbe
adc
mov
es
or
dec
adc
arpl
subb
or
cmp
jecxz
dec
pop
clc
mov
ficoms
xchg
mov
fidivrs
push
loope
sahf
rcrl
ret
mov
adc
das
or
and
fldcw
jno
pop
lcall
adc
xchg
aas
enter
sbb
orb
push
sub
outsb
sbb
push
mov
je
mov
or
push
inc
icebp
dec
push
and
push
add
mov
shrd
sbb
push
xor
push
aad
xlat
xor
fsubl
pop
mov
pop
fsts
pop
sub
inc
or
pop
loop
cld
les
adcb
inc
adc
adcl
or
push
sbb
int
leave
int3
movsb
fbld
mov
mov
xchg
ljmp
call
and
add
nop
out
in
fbstp
mov
jne
add
leave
loopne
pop
or
das
shlb
jl
cmp
andl
mov
mov
and
jp
popf
jg
in
push
cmp
je
icebp
lds
jle
push
add
aad
insb
xor
xor
push
pop
ret
stos
test
xchg
dec
adc
sti
jmp
leave
sub
adc
jge
cli
or
loope
cmp
orb
jg
lea
popf
fcomp
adc
movsb
test
mov
and
jge
ljmp
adc
push
shrb
xlat
sbb
js
fdivrl
push
jmp
push
inc
jg
outsl
mov
rclb
ja
mov
adc
clc
adc
cmp
icebp
lea
andb
and
stos
mov
and
outsl
mov
push
adc
mov
jmp
push
aaa
jne
push
inc
push
push
push
lock
add
cmpsl
cmpsl
hlt
fistpl
fistpll
fcoms
push
adc
call
sub
std
push
mov
jno
jno
pop
aad
pop
or
sbb
inc
push
shll
in
sti
fnstsw
inc
inc
test
jp
iret
sbbb
je
push
mov
aam
imul
sbb
pop
sub
fisubrs
inc
je
mov
add
push
xor
rcrl
push
outsl
pop
ljmp
loopne
push
jne
andb
jg
push
pop
movsl
fimull
cmpsb
data16
lods
jg
jo
dec
jo
push
sbb
inc
outsl
jl
cmp
mov
and
adc
mov
jge
outsl
adc
jmp
pop
add
nop
mov
dec
inc
mov
jbe
cmpsl
xchg
dec
aas
xor
rorb
pop
ss
lea
mov
mov
pop
mov
lea
sarl
jne
cmpsl
adc
clc
push
repnz
add
pop
adc
pushf
xchg
loope
jmp
push
jne
adc
leave
xor
inc
mov
test
or
jmp
aaa
ss
mov
dec
stc
cmp
incl
fists
push
shll
mov
fistps
aas
or
and
cs
cmp
push
inc
fcmovne
call
push
fbstp
mov
shlb
pop
sub
mov
insl
mov
adc
std
lds
xchg
ss
and
insb
adc
mov
movsl
xor
mov
out
icebp
outsl
or
cmc
scas
xor
sub
call
lds
sub
and
lock
enter
add
mov
mov
or
std
adc
cwtl
lods
and
and
jo
push
mov
int
cmp
test
pop
std
jg
adc
xchg
fs
rclb
mov
push
and
push
je
rorb
fisubrl
push
adc
cmp
push
adc
add
xor
call
sbb
fwait
push
sub
push
fistpll
int3
jg
sbb
mov
inc
jle
mov
les
imul
shll
push
adc
push
iret
cmp
sbb
aam
imul
push
outsl
or
fnstsw
add
js
jmp
ret
test
fs
jecxz
and
je
das
or
sub
sub
fwait
sub
adc
out
repnz
test
and
push
and
dec
in
insl
imul
cmp
push
lock
adc
out
call
pop
loopne
cli
or
call
leave
ficomps
sub
loope
ss
in
sbb
pop
imul
inc
stc
add
inc
out
loop
adc
and
cmpsl
or
push
pusha
push
push
jmp
inc
pusha
jns
pop
pop
outsl
mov
sub
rol
dec
xor
xorb
sub
push
js
push
dec
jmp
out
movsb
adcb
adc
stos
sub
add
iret
sub
push
pushf
and
adc
shrb
lock
dec
jmp
xchg
xor
jl
mov
pop
mov
jle
das
jb
or
and
fdivrl
inc
std
in
decl
call
or
add
je
faddl
inc
push
fmuls
and
add
sarl
les
adc
jb
xchg
arpl
adc
sub
fisttpl
adc
test
popf
scas
push
mov
adc
and
aaa
aaa
test
or
cmp
xor
loope
inc
adc
add
fimuls
or
xchg
cmpsb
fucomi
and
call
jae
in
leave
daa
jmp
mov
push
and
jne
jae
clc
pop
or
aas
sbb
in
sahf
jb
add
push
pop
mov
pop
aam
int
pop
mov
into
sbb
inc
add
push
pop
sbb
push
sbb
push
or
cli
das
inc
xchg
dec
popa
xchg
out
ficoms
sbb
xor
lcall
in
and
jb
mov
aam
addl
loopne
mov
movb
pop
pushf
and
mov
pop
imull
cmp
popf
call
popf
adc
dec
pop
fidivs
sahf
add
dec
mov
pop
cli
outsl
xor
fldenv
lods
inc
sub
sub
mov
fcmovnbe
add
in
call
adc
je
xchg
cmp
loope
gs
push
std
push
pop
div
out
call
adc
cs
loop
lds
sbb
mov
fisttpll
outsl
test
inc
push
int3
stc
push
ret
aas
ret
std
ja
clc
das
out
mov
stc
inc
aas
or
cmpsb
xlat
mov
in
and
outsl
mov
and
dec
jg
fstl
fcoml
fwait
push
aam
sub
repz
dec
sbb
and
and
dec
xchg
dec
pop
mov
add
pop
mov
mov
fisubrl
test
lods
sub
sar
outsb
sub
je
popf
into
dec
sbb
pop
mov
outsb
testb
xor
xorl
in
rolb
aaa
call
sub
xchg
jnp
call
pop
or
and
pop
jp
dec
jg
sbb
lock
mov
add
dec
jne
loopne
add
lahf
mov
ja
and
mov
or
xchg
sub
fsubr
testb
or
sub
call
clc
mov
adc
sub
call
sbb
or
mov
pop
fcom
divl
clc
pop
rcll
or
lock
ja
jge
mov
pop
sub
in
adc
mov
add
sahf
dec
sub
mov
adc
sbb
jl
pop
call
in
lock
test
fwait
call
insb
cmp
jg
sbb
je
xor
fstl
cld
jb
scas
or
push
maxps
xor
fs
call
pop
push
outsb
lret
or
lods
adc
pop
ljmp
in
out
dec
std
jns
jo
icebp
jg
leave
sti
or
data16
xchg
jbe
mov
xchg
pushf
adc
inc
repz
insb
or
xorb
add
imul
mov
mov
iret
test
pushl
ret
jl
mov
xor
jnp
in
mov
loope
bound
ljmp
adc
add
ljmp
lods
inc
scas
or
lods
fsubr
loop
push
dec
das
imul
sub
imul
push
js
iret
notl
mov
popa
jbe
pop
xchg
jne
pop
inc
fildl
ds
rcrb
adc
xor
dec
dec
hlt
fisttpll
imul
jae
inc
jb
xor
shr
aam
push
test
mov
stc
push
jns
jp
call
lods
rcll
add
jecxz
int3
mov
inc
lahf
shll
pop
repnz
mov
sub
call
rcr
fcompl
adc
test
shlb
push
or
lods
jo
sbb
mov
or
xchg
fadds
cld
in
pop
add
in
loop
xorl
sbb
and
and
mov
pop
iret
hlt
sub
jge
or
jge
loopne
mov
in
lea
jns
clc
mov
call
test
mov
enter
mov
test
pushf
dec
add
pop
or
inc
cmp
ja
mov
decl
imul
testl
inc
pop
and
leave
addr16
mov
je
mov
fldt
jge
push
in
push
imul
xchg
cltd
mov
and
sub
xchg
and
mov
adc
adc
fwait
je
stc
push
sub
add
lea
imull
loop
aaa
jle
stos
outsb
sbb
inc
lods
push
cwtl
adc
fldenv
rcll
dec
bound
and
adc
imul
xchg
call
xor
ret
or
inc
xor
clc
mov
push
mov
sub
push
mov
sbb
cld
je
and
push
ljmp
add
and
clc
test
lock
scas
shlb
stc
xorb
or
add
jmp
call
out
sub
and
scas
pop
call
add
nop
lcall
movsl
lcall
adc
push
xchg
inc
mov
test
xchg
cltd
sbbl
ret
push
shrl
arpl
xchg
xchg
pop
inc
adc
addr16
repz
aad
movsl
mov
xchg
shl
call
push
jg
cmp
cmp
jbe
lcall
aas
lods
lret
int3
add
jl
testl
xor
xchg
cli
mov
out
adc
sub
pop
push
jbe
out
adc
and
inc
icebp
push
or
inc
insl
loope
add
in
adc
cmp
gs
mov
mov
dec
fistps
mov
lock
xchg
sub
test
loope
inc
pop
mov
sbb
adc
sub
pushf
aaa
adc
loopne
sub
fcomp
xchg
cmpsb
sub
sub
ret
test
inc
or
mov
scas
jne
aaa
mov
loope
jae
cmp
loopne
dec
in
sbb
cli
ret
cmp
popf
and
push
out
std
push
xchg
clc
out
mov
adc
aaa
inc
cltd
push
jne
xor
adc
dec
xchg
gs
xchg
sbb
add
jns
call
adc
or
orb
das
xor
call
je
dec
push
fsubrl
and
mov
outsl
mov
lods
lahf
lds
sti
inc
fists
mov
loop
enter
cmp
je
pushf
in
das
hlt
push
out
js
jo
or
mov
lret
xchg
dec
adc
mov
inc
and
and
insb
or
cmp
mov
add
jl
fs
xchg
sbb
out
rcl
mov
icebp
inc
sub
cmp
adc
testb
sub
mov
je
sub
add
cmp
ret
adc
sbb
bound
cld
gs
outsl
pop
cmpsl
push
adc
ljmp
sub
sub
pop
les
sub
stos
cmpsl
push
jb
rcrl
adc
in
or
lahf
adc
pusha
adc
cmp
xchg
jb
ljmp
divb
cld
inc
je
inc
sub
mov
sbb
or
jp
or
cltd
lahf
pop
enter
mov
adc
data16
aaa
lock
ja
pop
stos
iret
adc
test
popa
es
mov
inc
outsb
jmp
jb
lods
std
ret
jb
daa
jg
pop
push
lods
pop
and
test
sub
into
push
mov
shll
insb
push
dec
nop
push
or
fnstenv
adcl
nop
aam
fldt
fs
cmp
jne
std
mov
jl
adc
xchg
mov
mov
sbb
sbb
push
jle
dec
fistl
xor
mov
outsb
pop
xor
mov
push
mov
cmp
cmp
pop
stos
frstor
rolb
in
inc
mov
xor
fs
cwtl
or
aam
insb
add
mov
jge
sub
and
movsl
loop
mov
std
jg
movsl
sub
fsts
adc
jo
ja
adc
inc
pushl
push
cmp
enter
adc
or
data16
or
push
push
aam
push
in
sbbb
jno
push
cld
pop
das
hlt
push
mov
mov
cmpb
mov
mov
lods
inc
nop
out
xchg
push
les
mov
clc
je
ret
and
sti
mov
mov
adc
mov
std
lret
add
and
add
int
pop
or
mov
push
xchg
in
push
sub
dec
cltd
and
test
push
or
pop
data16
add
adc
ljmp
in
add
ficomps
shll
movsl
xchg
mov
sbb
push
mov
push
jns
sbb
loop
stc
xor
xchg
inc
cmp
cs
out
mov
shll
jo
add
loope
adc
mov
inc
adc
xor
fistpll
sbb
in
mov
sub
cmpb
dec
push
lahf
mov
mov
imul
out
jge
pop
add
xchg
inc
test
subl
notl
adc
cld
out
mov
xor
clc
add
iret
ss
jno
lods
pop
loopne
push
add
mov
xor
enter
ja
mov
icebp
cmp
ja
dec
shlb
lods
sbb
test
gs
fnstsw
hlt
mov
cmp
in
leave
dec
add
mov
and
fsubp
outsl
cmp
add
and
test
testl
pop
push
call
push
mov
jle
insl
imul
push
and
and
and
mov
cmp
outsl
into
hlt
push
stos
jl
rcrb
sbb
nop
movsb
inc
test
scas
movsb
inc
adc
inc
outsl
fisubs
ljmp
dec
cld
xchg
in
jae
mov
outsb
jns
xchg
inc
push
rorb
pop
and
orl
adc
inc
enter
push
dec
loope
subb
scas
insl
testl
or
cmp
xor
test
jmp
inc
and
jle
addr16
add
sbb
incl
pop
test
outsb
or
jno
inc
push
lds
call
adc
xchg
sub
js
les
xor
cli
ret
push
mov
shr
mov
je
sbbl
test
dec
icebp
and
or
das
jl
mov
outsb
and
fisubrs
je
lea
pop
jo
inc
pusha
loope
outsl
in
push
mov
das
rcll
pop
push
into
adc
adc
jbe
jle
adc
daa
or
notb
cmc
push
jnp
ss
nop
shl
ficoml
dec
mov
outsb
aas
in
jp
lock
xchg
das
bound
out
and
push
xor
inc
daa
and
jg
jg
xlat
and
and
pop
adc
push
fmull
test
rorb
jecxz
adc
lock
imulb
das
push
adc
cmp
test
pop
clc
in
adc
adc
add
pop
xchg
test
sub
negl
push
sbb
adc
hlt
addr16
fsubs
test
mov
clc
je
rolb
inc
xchg
lock
insl
mov
sub
jne
cmpsb
je
aaa
push
mov
push
nop
sub
inc
test
sbb
jne
pop
sub
in
add
scas
or
rcrl
jecxz
shrb
and
pop
add
pop
sub
mov
adc
js
add
loopne
push
sti
jno
dec
movsl
in
movsl
jge
popa
pusha
adc
lods
sub
or
mov
mov
lods
jne
call
pushl
je
lret
xor
sub
pop
out
ss
xchg
or
push
and
sub
mov
repnz
add
outsl
or
je
jno
loopne
aam
outsl
ljmpw
jns
mov
mov
mov
stos
adc
loopne
fdivrs
cmp
xchg
add
pop
cmpsb
fildll
pusha
jle
cltd
mov
or
push
jbe
dec
inc
arpl
xor
dec
cmp
push
xlat
push
push
dec
or
or
lds
pop
clc
std
movsl
push
rep
dec
aas
or
mov
mov
leave
mov
sbbl
insl
or
xor
mov
jae
fmul
adc
jg
stc
adc
rorl
or
in
push
jmp
jno
test
jg
adc
mov
mov
inc
xor
pop
jp
in
call
ret
test
pushl
loope
xor
repz
xchg
sub
mov
pop
mov
mov
sub
lea
adc
mov
js
xchg
sar
dec
or
iret
cmp
movl
inc
xchg
mov
out
xchg
repz
and
fidivl
and
cmc
clc
or
ret
dec
fsubs
or
test
mov
and
pushf
push
je
fidivs
dec
in
movsl
call
xor
mov
hlt
adc
jl
mov
sub
lea
int
pop
sbb
sub
and
pop
jmp
push
xchg
sbb
fs
fcomip
add
adc
and
cmp
sbb
xor
pop
jecxz
add
out
jno
cmp
dec
insb
mov
das
or
shlb
pop
loop
popf
test
or
xchg
mov
insl
push
leave
dec
or
sub
leave
or
mov
outsb
shll
adc
loopne
loope
pop
fcomip
or
imul
mov
push
push
xlat
cmpsl
jbe
jo
push
mov
mov
pop
sbb
fsub
lods
cmp
stos
rolb
mov
mov
add
daa
add
xorl
adc
xchg
cld
push
test
cs
test
mov
add
call
push
test
adc
fisubrl
popa
fiadds
call
adc
sub
mov
int
and
or
dec
xchg
je
and
push
aaa
rorl
sub
mov
movsl
aaa
fsubr
in
mov
fcoms
cmc
pusha
adc
mov
orb
xor
mov
jno
popa
inc
or
arpl
je
inc
enter
aam
mov
inc
sub
outsl
push
or
sub
cmpsb
push
hlt
or
cli
call
xchg
adc
mov
jge
add
jne
mov
fidivl
adc
pop
sbb
rorb
adc
adc
in
add
sarl
mov
xor
mov
outsb
insb
sbb
rcrb
push
lret
fucomp
adcb
jne
out
xor
add
or
dec
and
les
inc
jecxz
in
das
pop
jp
sbb
nop
bnd
jbe
loope
push
loope
and
push
test
sbb
and
idivb
or
push
or
push
sbb
ret
mov
jo
sarb
and
and
adc
jmp
xchg
inc
mov
das
stc
pop
dec
sbb
incb
and
scas
pop
es
outsl
lock
xlat
mov
inc
jecxz
mov
das
sti
sub
aaa
jge
sub
sub
mov
sub
lcall
cmp
or
push
icebp
stos
xchg
aad
mov
adc
inc
or
jmp
mov
imul
aaa
js
adc
and
pop
imul
lahf
xchg
mov
movl
or
into
adc
pop
mov
outsb
xchg
enter
pop
dec
xlat
xor
xchg
adc
sysenter
mov
jmp
adcl
pop
int3
or
xor
shlb
cs
mov
sbb
out
adc
xlat
sub
repnz
mov
mov
in
mov
std
movsl
paddw
cmc
imul
imul
pop
sub
or
pop
mov
cli
sbb
mov
insb
data16
cmpsb
xor
movsl
inc
bound
mov
insb
mov
mov
dec
mov
sub
dec
push
je
dec
aas
add
cmc
int
xchg
jae
pop
jbe
fldt
sub
sar
leave
pop
mov
jnp
push
jnp
adc
jb
xchg
lods
loopne
insb
cmp
fiaddl
insl
adc
xchg
rorb
out
mov
test
jmp
mov
and
ret
mov
mov
insb
popa
je
pop
add
or
mov
pop
mov
je
fildll
xor
adc
stos
jb
insl
push
xor
jmp
adc
subl
pushf
into
dec
and
fcompl
arpl
push
cmp
movb
ja
mov
mov
icebp
mov
pop
cwtl
imul
cmp
fadds
in
data16
sub
lret
int
pushf
fcmovnbe
outsl
sbb
nop
inc
popa
adc
jne
lods
sub
xchg
sbbb
cmp
mov
enter
xchg
sbb
test
push
mov
or
or
ss
sbb
xchg
mov
pusha
pop
inc
pusha
shrl
adc
pop
push
setp
jbe
pop
pusha
adc
mov
mov
jl
pop
fnclex
stos
xlat
lock
mov
mov
dec
push
lods
inc
imul
sbb
add
inc
xorl
test
fsub
or
inc
mov
or
in
repz
xor
out
mov
xchg
push
dec
sub
sub
ficoms
xor
push
xor
lock
push
fldcw
shrl
or
sub
adc
xlat
and
or
pop
mov
out
fs
fstl
lods
insl
xlat
outsb
sti
mov
xchg
push
call
insl
jno
adc
sbb
inc
xorl
in
test
dec
mov
jmp
push
in
sbb
out
mov
int
pop
push
les
add
call
lcall
push
je
icebp
xchg
or
ficomps
pop
sbbb
lahf
xchg
je
xchg
cli
filds
adc
adc
add
lret
and
xchg
les
mov
popf
pop
lcall
or
adc
and
xor
mov
adc
add
adc
pop
in
fucomi
push
hlt
scas
lcall
adc
fs
jmp
gs
mov
dec
lahf
loope
lea
adcb
stos
adc
mov
mov
dec
mov
out
pop
lret
mov
out
ljmp
cmp
xchg
into
adc
repnz
lahf
sub
nop
mov
mov
aaa
test
loopne
push
adc
adc
xor
adc
dec
je
mov
cwtl
add
xor
dec
sbb
mov
sbb
decb
or
adc
bound
test
jp
adc
rcrl
jl
or
lods
dec
in
mov
push
jnp
pushf
xchg
jge
pop
orl
movsl
cli
sarl
pusha
jmp
movsb
fdivrl
out
int3
aaa
mov
pop
in
loop
scas
or
js
add
mov
jbe
pop
adc
dec
adc
rorl
cmp
aaa
mov
mov
cmc
punpckhwd
mov
or
fldenv
test
lea
sbb
or
rcrb
sbb
into
jae
and
mov
jmp
or
push
popa
outsl
rcrb
dec
jecxz
xchg
loopne
arpl
filds
add
sahf
xchg
mov
dec
sub
aaa
push
repz
scas
fdivr
lret
fisubrl
mov
nop
js
push
or
push
or
mov
std
outsl
cmp
imul
outsl
out
lods
mov
sahf
jo
fdivrp
pop
sbb
pop
ret
or
pop
inc
lds
ret
or
sbb
adc
mov
mov
push
or
push
mov
enter
pop
xor
inc
adc
sbb
push
fcmovbe
je
xor
or
loopne
and
loope
pop
cmpsb
jmp
js
add
adc
lds
sbb
pushf
test
jo
ucomiss
cld
adc
fidivrs
outsl
mov
mov
roll
les
push
int
mov
icebp
shrw
jg
mov
push
mov
popf
pop
add
notb
ss
xor
lahf
testl
mov
pop
iret
cwtl
stc
out
jle
dec
sub
cltd
test
and
into
sbb
outsl
out
dec
mov
jle
cmp
js
lret
pushf
fbstp
xor
mov
adc
movsl
stos
xor
and
pop
cmpsb
cmp
cwtl
jno
rcll
add
push
xchg
nop
pop
add
pop
or
inc
es
in
xchg
rclb
inc
pop
and
inc
mov
aam
jecxz
push
add
divl
xchg
mov
xchg
pop
fisubrs
cmp
xchg
pop
rclb
es
in
loopne
idivl
shll
sarl
popf
mov
and
scas
outsb
aad
mov
xor
push
pop
pop
fwait
jp
adc
scas
sbb
mov
rol
sbb
ret
loopne
mov
sbb
xchg
imul
call
call
push
or
xor
ljmp
in
and
lret
jmp
push
lods
mov
ret
adc
je
and
jg
mov
jne
leave
ret
mov
adc
insl
je
sub
sub
mov
lret
push
xor
mov
or
cmp
add
pavgb
sub
or
aam
and
mov
js
fs
lods
enter
rorb
sbb
pop
cmp
adc
call
cmc
mov
push
mov
jle
adc
stos
xchg
mov
addr16
xor
das
mov
sbb
add
dec
pop
scas
adc
mov
push
clc
ret
xorl
xchg
cmp
push
test
shl
sbb
and
movsl
inc
mov
lods
loop
fiadds
mov
cmp
and
clc
push
rcrl
xor
cmpb
pop
icebp
ljmp
mov
sbb
inc
lret
out
xor
mov
dec
jl
sahf
in
jbe
in
out
adc
and
or
xor
je
pop
add
aad
pop
inc
out
jno
inc
or
stos
testb
inc
gs
push
add
call
mov
cmp
pcmpgtb
pop
xchg
stos
call
adc
outsb
stos
jmp
decb
and
fs
fcomps
adcl
out
adc
pop
mov
pusha
xor
sub
lea
or
xchg
call
xor
pop
rcrl
sbb
cmpsl
jecxz
bound
fcompl
sbb
sbb
sub
adc
xor
lcall
xorb
and
popa
or
fistl
xchg
and
mov
xorb
in
or
ljmp
movsb
xchg
jecxz
mov
push
jmp
mov
pop
adc
cli
and
scas
adc
je
iret
jmp
add
das
jo
gs
rclb
inc
sbb
decb
pop
mov
test
lds
andl
mov
scas
clc
dec
add
mov
pop
xchg
push
lret
mov
mov
aas
pop
fs
mov
cli
pop
mov
add
and
std
fwait
adc
ja
xchg
jg
sahf
cmp
or
inc
out
shll
out
xchg
fidivl
cltd
sbb
orl
pop
clc
add
add
push
add
test
sbb
enter
jmp
shrb
push
jns
or
mov
imul
fldt
sub
inc
adc
out
inc
add
mov
addl
test
out
inc
adc
add
icebp
mov
adc
or
adc
mov
push
cmpsb
arpl
or
call
push
or
xor
std
test
mov
xor
aaa
add
pop
in
daa
aas
xor
fidivrl
adc
push
popa
push
sbb
ljmp
ds
enter
pop
sbb
cmp
dec
mov
lods
inc
push
mov
rorb
frstor
popf
jnp
mov
mov
and
lret
lods
roll
or
mov
mov
sbb
lea
insl
cmc
jno
push
insb
insb
and
jbe
add
xchg
add
movsl
xchg
fistl
hlt
adc
jb
xor
dec
insl
rol
add
ficoml
mov
xchg
fstpl
inc
cmp
cmc
add
stos
jle
mov
mov
pop
fs
xchg
push
and
shlb
ljmp
fadd
or
adcl
xchg
cltd
adc
push
es
in
sub
out
xor
rcll
testb
add
pop
jb
imul
xorb
xchg
ljmp
adc
rcr
loope
dec
pushaw
rorl
sahf
std
mov
das
icebp
aad
jns
cmp
or
push
sub
add
sbb
ficomps
test
adc
jmp
sbb
pop
nop
lahf
dec
push
mov
sub
andb
mov
pop
lcall
lds
jbe
icebp
inc
jbe
dec
mov
or
sub
jo
jecxz
or
mov
aam
test
inc
out
xchg
jbe
jno
pusha
stos
shr
stc
cmp
inc
in
jmp
lods
inc
sahf
and
jo
frstor
out
fwait
xor
and
adc
ljmp
mov
ret
push
lea
xor
xchg
pop
add
adc
sbb
inc
inc
in
testb
adc
or
aam
sub
or
aad
pop
fdivrs
lds
ret
mov
xchg
sub
xchg
fildl
cltd
fisttpl
add
lahf
mov
add
jg
push
mov
cltd
and
push
imul
mov
push
ja
jnp
scas
popf
fwait
sbbl
rclb
push
call
loopne
mov
outsb
es
sub
pop
dec
aas
sub
adc
adc
inc
das
ror
loope
and
xor
dec
cmc
push
outsb
in
push
xchg
push
mov
adc
imul
arpl
je
orb
adc
loop
pop
push
std
mov
sbbl
cmc
mov
stos
mov
add
jbe
fildl
in
dec
mul
adc
adc
jg
ret
arpl
fs
mov
movsl
aaa
mov
mov
ror
pusha
je
imul
add
fcmovne
push
add
xchg
mov
lock
push
cltd
pop
push
cli
cltd
push
movsb
loopne
xor
jle
and
gs
cmp
xchg
dec
call
adc
je
add
rcrb
and
sub
adc
lea
ss
jo
sti
jg
ljmp
pop
and
push
repz
and
or
mov
sysenter
pusha
js
leave
aaa
xor
popa
cld
fstpl
and
and
cltd
sbb
inc
xor
push
inc
adc
or
lea
imul
es
add
cmp
mov
lock
mov
pushf
jmp
add
fbld
and
iret
dec
pop
mov
mov
lock
push
lcall
and
push
loopne
movsw
movsl
call
imul
bound
push
push
push
push
adc
sbb
xchg
mov
push
mov
mov
int
leave
fsubs
dec
or
adc
jp
dec
sub
mov
imul
cltd
and
mov
mov
or
lcall
les
mov
adc
mov
pop
std
movsl
push
scas
mov
dec
ficompl
mov
jge
add
adc
inc
ljmp
dec
je
aas
or
cmp
adc
or
xchg
add
popa
ja
mov
mov
std
pop
bound
ss
into
in
in
je
insb
pop
stc
data16
fwait
sarl
jae
push
adc
cmpb
ret
adc
cmpsb
and
mov
shlb
pop
pop
sarb
insl
out
xor
ret
cltd
push
xchg
mov
in
push
mov
mov
xchg
mov
mov
push
gs
andb
mov
xor
push
sbb
je
out
in
adc
int
divb
jnp
dec
shll
jle
add
mov
adc
inc
sub
push
loopne
sub
popf
lods
stc
jae
fidivrs
je
stc
pop
xor
mov
mov
sti
add
sbb
ss
insl
shll
xchg
add
test
pop
pop
lds
pop
pusha
lret
fcmovnu
add
movsb
ds
pop
and
xchg
mov
mov
push
and
outsl
test
lds
sbb
in
cmp
xchg
adc
pop
loopne
jnp
stc
daa
mov
sbb
mov
incb
movsb
sbb
inc
popa
loope
cmp
std
ja
jle
jge
or
mov
aam
shrb
pop
pop
cli
clc
xorl
insl
adc
jmp
insl
js
push
push
ljmp
fidivs
mov
lea
out
shll
xor
ss
cmpl
aaa
fwait
or
dec
pop
pop
or
push
fldt
adc
dec
mov
test
pop
out
jp
jl
popf
jae
and
push
adc
mov
sbb
adc
imul
sbb
lahf
mov
les
mov
mov
movsl
dec
arpl
inc
aam
pop
or
nop
inc
mov
add
je
inc
sbb
mov
sbb
sbb
sub
clc
sub
test
sbbl
movsl
pop
clc
cwtl
mov
fcmovb
cs
call
adc
or
and
push
dec
rcrb
das
xor
jge
out
mov
popa
push
nop
sub
xchg
xchg
daa
sbb
out
adc
out
or
add
pushf
cmp
sub
incl
pop
xchg
jmp
jge
ss
mov
shlb
xchg
test
mov
sbb
daa
push
je
push
stos
sub
or
pop
hlt
sti
sub
shr
sbb
fldl
addr16
insl
lods
mov
mov
loopne
mov
loopne
mov
icebp
or
or
mov
sub
or
rorl
mov
xchg
pop
pop
sarl
bound
dec
add
mov
mov
test
ja
hlt
sahf
add
rolb
ret
or
int
insl
mov
inc
out
inc
or
sub
mov
adc
loop
jge
fnstsw
dec
jmp
or
or
ja
in
adc
jle
inc
scas
and
pop
sbb
cmp
sub
push
jle
pop
push
add
push
adc
pop
in
mov
push
orl
pop
add
cmp
lds
or
cmp
or
mov
pop
xchg
dec
xchg
clc
xchg
push
lahf
pop
mov
xlat
cmp
stos
jae
jg
or
pusha
sub
fildll
dec
sub
dec
jne
int
adc
dec
xchg
sti
stos
mov
scas
stos
subl
or
test
in
int3
scas
mov
aam
adc
and
in
cli
or
and
inc
and
cmp
add
fmul
fcompl
mov
enter
and
jmp
sbb
call
jg
xchg
fisubrl
adc
xchg
adc
cwtl
fistpl
jbe
and
pusha
hlt
test
cli
jbe
xchg
pop
jmp
movsl
jae
fadd
lods
xor
rclb
test
push
jmp
fcomps
ds
outsb
stc
xor
cmp
add
jne
cmpsl
orl
mov
mov
or
hlt
dec
jo
push
into
adc
xchg
shll
add
addr16
pop
mov
stos
push
adc
clc
mov
insl
mov
ret
jl
scas
mov
je
push
mov
ds
mov
add
je
adc
cmp
fildll
add
idivb
fisubl
jg
add
cmp
pop
push
stc
or
clc
sti
outsl
fdivrp
orb
jae
adc
sub
stos
adc
jo
mov
and
adc
mov
subl
lods
adc
xchg
or
ret
call
cs
cmp
or
push
mov
je
push
je
arpl
mov
push
mov
fcmovbe
sti
shrb
mov
and
push
lea
ficomps
xor
mov
mov
orb
ss
out
and
jle
testb
cmpl
fwait
mov
push
call
repnz
push
jl
insb
mov
mov
jp
in
outsb
inc
adc
hlt
inc
mov
pop
dec
adc
lock
jecxz
adc
outsb
mov
dec
ret
loopne
mov
je
imul
xor
dec
ljmp
test
and
ja
cmpsb
mov
or
lods
fs
das
les
mov
and
or
test
in
rorb
or
js
mov
inc
push
mov
xor
cmc
lock
sub
ret
adc
or
push
fisttpll
mov
jnp
cmp
stos
pop
and
jmp
mov
dec
mov
mov
imul
or
dec
adc
imull
cmp
and
jge
add
and
fstpl
push
je
fcmovnb
sbb
add
jge
clc
enter
imul
or
je
mov
in
lret
adc
adc
jbe
aam
scas
jmp
sbb
lods
xchg
fidivs
and
negl
xchg
adc
rorl
pushf
cmp
fistl
nop
dec
sbb
cmp
jno
inc
outsl
ja
cmp
ljmp
in
inc
imul
fst
popf
outsb
inc
loopne
shlb
lods
sub
mov
jl
jnp
les
std
mov
scas
js
outsb
sarb
test
std
mov
insb
outsl
xchg
stos
xchg
pop
inc
jg,pn
call
push
data16
cld
scas
mov
mov
jg
mov
lock
lret
sub
or
into
cmp
lock
xchg
add
lock
fstp
add
pop
cmp
stos
dec
rorl
mov
aaa
popa
pop
aaa
sbb
xchg
adc
js
jl
stos
loopne
pop
pop
test
inc
or
addl
jae
fidivl
adc
loop,pt
push
gs
popa
test
xor
add
inc
mov
jbe
dec
mov
pusha
nop
scas
ret
iret
fimull
outsb
xchg
and
pop
clc
das
adc
vmread
testl
arpl
adc
fdivl
das
fistps
jl
mov
add
cltd
sbb
mov
int
std
xor
pop
mov
mov
inc
and
mov
mov
insl
and
shll
insl
mov
inc
out
imul
fsub
push
call
test
push
sarl
in
jo
lods
add
cmpsb
outsb
cld
adc
sahf
cmp
mov
idiv
mov
int
push
and
or
dec
hlt
mov
in
insl
mov
mov
shll
je
in
aas
mov
cmc
pop
mov
cmp
and
adc
push
dec
pop
fstpt
insb
dec
or
call
pop
or
jo
sahf
incb
jle
adc
jmp
outsb
stos
push
loopne
adc
mov
pop
sub
mov
xchg
push
cmp
in
cwtl
ljmp
ss
loope
adc
fwait
add
fstl
stos
push
lods
xor
cmp
add
int
loopew
mov
or
or
adc
adc
or
lret
jbe
jg
add
adc
test
cmpsb
sbb
or
sbb
and
faddp
push
mov
pusha
sbbl
cmpsb
xchg
mov
cld
je
mov
dec
mov
je
or
out
lods
dec
mov
stos
cmp
test
insb
sbb
lds
mov
pop
xor
cmp
add
ret
push
ss
cmp
call
sbb
sarl
push
inc
insl
outsb
fsubr
push
mov
sub
or
mov
int3
pop
dec
call
fsts
cmp
das
std
inc
je
cltd
movsl
lret
aaa
icebp
sarl
cmp
inc
mov
lock
in
jns
rorl
push
jne
popf
inc
or
and
insl
mov
rclb
push
and
test
cmpsb
cmp
push
mov
pushf
divl
mov
nop
sub
dec
cmpsl
sbb
je
icebp
mov
adc
or
or
add
cmp
xchg
cwtl
mov
xchg
subb
jmp
adc
nop
ret
int3
je
ret
or
sbb
jp
es
cmp
shr
fstl
dec
and
push
jae
in
in
das
jne
mov
push
adc
adc
mov
insb
in
cmp
mov
mov
lret
dec
je
sbb
cwtl
adc
das
inc
sahf
cmp
insl
mov
frstor
or
test
lahf
mov
outsl
cmp
dec
out
cwtl
inc
sub
call
mov
sbb
scas
movsl
js
bound
push
push
inc
mov
jmp
sub
lret
push
push
xchg
sub
negb
adc
mov
lods
jo
xor
cmp
add
inc
add
fcoms
xchg
pop
outsb
pusha
sti
pusha
and
dec
or
and
or
test
fstl
pop
dec
sub
inc
xchg
int3
sbb
inc
sbb
sbb
data16
bound
add
inc
ficoml
mov
frstor
add
lods
push
loopne
or
and
add
xor
insb
insb
push
fists
xchg
call
call
iret
or
pop
into
sbb
rorl
dec
aam
mov
je
imul
daa
pop
jb
outsb
je
ffree
mov
xorb
sbbl
or
mov
add
mov
push
lock
push
aaa
jecxz
roll
call
mov
dec
ja
inc
lret
dec
push
mov
jo
sub
mov
adc
xchg
mov
and
pop
lods
mov
sub
push
push
jnp
movsl
inc
and
leave
mov
xor
mov
cmpsb
dec
mov
aam
insl
pop
sbb
mov
ja
in
push
adc
std
repnz
rcll
adc
adc
dec
pop
cltd
test
jl
xor
mov
jo
aaa
cmp
shrl
xor
subb
inc
mov
je
ljmp
and
cmpsb
subb
mov
pop
mov
out
add
sub
mov
jmp
adc
mov
dec
rol
adc
mov
push
aam
jg
lcall
pushf
dec
jnp
ljmp
rorl
mov
mov
je
movsl
or
adc
xlat
test
mov
jbe
xchg
jmp
lret
sarb
fisubs
add
push
cmp
test
dec
mov
adc
adc
shrl
jp
enter
mov
lods
adc
or
mov
mov
adc
int
mov
pop
sbb
cltd
test
adc
sar
idivb
sub
adc
and
ds
fdivrl
mov
push
xchg
or
lock
mov
sbb
xorl
sbb
out
call
insl
xor
adc
sbb
and
pop
sub
cli
mov
rclb
pop
insl
jbe
fwait
hlt
push
cmp
lds
out
mov
mov
pop
lahf
adc
add
dec
loop
mov
popa
addl
je
and
call
dec
outsb
cmpsb
push
jae
into
aad
or
adc
mov
mov
sub
mov
rcr
jg
sub
xchg
lock
adc
sub
push
inc
fisubs
inc
adc
lock
mov
jb
xlat
fldl
pop
lahf
mov
xchg
std
xchg
mov
push
mov
outsb
mov
rolb
ficoms
call
aad
mov
outsl
xchg
out
fidivrl
mov
cmpsl
ret
jbe
dec
cmp
adc
pop
adc
adc
notb
mov
push
push
rorl
sub
mov
mov
mov
xor
js
mov
inc
inc
mov
push
dec
in
pop
mov
lds
mov
inc
movups
stos
push
sbb
push
mov
mov
mov
jne
clc
pop
test
cmp
inc
inc
mov
xchg
jo
xchg
and
das
insb
inc
scas
daa
fstl
outsb
push
push
mov
mov
test
mov
rcrl
mov
es
adc
lock
in
cmpsb
xchg
add
stos
cmp
sbb
adc
dec
insl
pop
pop
lods
or
push
dec
mov
je
stos
stos
and
addb
adc
mov
cmp
es
outsl
insb
mov
mov
adc
inc
jne
dec
mov
push
jo
call
inc
mov
fcoml
xchg
jo
dec
sahf
sub
test
cmpb
or
mov
mull
fldcw
call
dec
cmp
stos
xlat
dec
add
fwait
ss
call
push
in
adc
ss
inc
and
clc
dec
ret
loope
adc
xor
ror
mov
jb
pushf
add
jo
push
jbe
add
and
mov
or
adc
mov
std
jbe
shll
sub
jg
pop
or
lea
sti
and
push
mov
jne
popa
jne
push
mov
cwtl
sub
add
loopne
jecxz
fcom
jbe
adc
mov
enter
or
test
pusha
pop
and
call
pop
pop
pop
jp
das
or
in
push
inc
sbb
sub
adc
jecxz
out
jmp
add
jl
out
ret
adc
ljmp
orb
jle
test
bnd
rorl
mov
adc
cli
scas
add
mov
pusha
mov
call
add
sbb
mov
jmp
and
jmp
cs
mov
push
pop
add
mov
pop
inc
aad
mov
stc
lea
sub
mov
addr16
mov
xor
pop
das
and
dec
call
push
adc
imul
push
aaa
insl
mov
pop
call
sub
cmp
call
mov
enter
loope
out
into
es
fldcw
es
mov
aam
add
jnp
inc
stos
fsubrs
outsb
pop
ret
push
pop
fdiv
push
pop
add
jle
insb
adc
mov
test
jl
stos
xchg
inc
in
adc
fcmovb
jb
cmpb
aam
fidivl
js
lods
mov
pop
xorb
loopne
mov
mov
lods
pop
jbe
xor
outsl
dec
popf
ficoms
adc
jo
push
in
fiadds
xor
xor
jae
les
shl
fldt
cmp
dec
stos
inc
ljmp
clc
insb
push
mov
sbb
adc
sub
cwtl
xchg
dec
sti
out
push
adc
or
imul
add
arpl
pop
test
les
rep
inc
mov
cmp
jb
mov
adc
lret
mov
inc
dec
or
jbe
leave
mov
or
and
fdivs
add
mov
mov
popf
mov
mov
bound
test
add
push
fs
or
scas
subb
int3
or
xor
mov
push
test
rclb
add
test
or
or
sahf
adc
jne
push
mov
inc
jno
xchg
sahf
sub
fldl
mov
sbb
pushf
shlb
call
insb
lea
xor
lahf
repnz
je,pn
fdivl
or
xchg
inc
dec
sbb
lea
dec
inc
jmp
sub
adc
mov
xor
xor
or
push
push
xor
push
adc
and
roll
or
mov
push
fdiv
and
adc
mov
xchg
mov
mov
subl
mov
outsl
adc
sbb
adc
and
ss
testb
pushf
jmp
inc
outsl
andb
pop
sahf
mov
inc
loope
jmp
and
fs
call
mov
daa
lahf
je
jg
mov
mov
xor
or
xor
or
xor
inc
or
dec
xor
push
dec
push
movsb
pop
dec
push
shrb
mov
sti
fcoms
adc
dec
jmp
outsl
push
stc
jnp
xor
mov
inc
jns,pn
pop
and
addl
jle
sbb
push
scas
mov
or
sbb
jbe
js
outsl
stos
push
or
ret
pop
mov
sti
pop
call
call
fistl
pop
fucomi
js
inc
and
mov
rorl
aam
inc
scas
sbb
data16
mov
xchg
adc
jmp
stos
adc
test
jne
sbb
pop
iret
push
mov
ljmp
mov
out
xchg
jmp
jl
sub
mov
mov
or
mov
jle
adc
or
add
aaa
sub
hlt
lret
dec
pop
stos
mov
add
outsb
dec
jnp
out
loopne
mov
inc
mulb
hlt
filds
cltd
lea
xor
and
xchg
das
add
ja
push
into
scas
jns
das
inc
adc
or
dec
insl
sbb
ljmp
cmp
mov
mov
adc
out
mov
sbb
xchg
pop
dec
and
fwait
push
mov
pushf
lds
das
mov
jo
mov
mov
mov
ficoml
imul
sbb
cmpl
xor
or
mov
int
loopne
mov
outsl
push
lods
sub
cmp
outsb
dec
sahf
sarl
pushf
into
push
adc
adc
call
pusha
jg
push
sbb
cmp
js
sub
adc
pop
insb
out
jle
and
call
jns
std
clc
mov
lods
or
notl
movntq
xchg
push
out
dec
jge
arpl
fstl
mov
je
push
cmp
les
push
inc
mov
inc
shll
sub
mov
cmp
mov
or
adc
andl
dec
and
pop
push
hlt
aas
push
xchg
adc
or
je
pushf
jb
pop
pop
std
add
outsl
sub
outsb
fcmovu
out
imul
lds
sbb
or
mov
mov
nop
fldenv
sbb
sub
xchg
and
pop
pop
cmp
sub
cmp
rorl
aaa
mov
adc
cmp
xchg
mov
and
repz
pop
mulb
insb
mov
inc
imul
xor
xor
pop
test
cmpsb
push
push
jp
sub
stos
mov
and
xlat
sbb
loopne
cmp
xor
icebp
mov
ss
imul
or
xchg
and
js
stos
mov
inc
adc
xor
push
stc
add
sub
in
pop
adc
stos
fmull
xchg
pushf
scas
ljmp
stos
adc
les
add
xchg
mov
mov
shlb
es
sub
or
push
outsl
mov
loope
int3
mov
add
add
add
sbb
pop
mov
mov
cmp
frstor
fcoms
ljmp
or
arpl
mov
xchg
ficompl
outsb
negl
pop
jae
mov
cmp
xchg
psadbw
push
js
jnp
int
mov
push
jg
aam
mov
aaa
ficoml
aam
insl
mov
fisubrl
dec
icebp
inc
mov
pop
fmull
loop
mov
call
jno
sub
add
hlt
mov
lds
push
sbb
ficompl
mov
mov
pop
les
pop
mov
es
dec
shr
test
mov
push
or
pop
jl
inc
bound
or
jl
mov
xor
push
jne
jmp
mov
jno
dec
jle
fbstp
mov
push
hlt
cmp
loope
sub
mov
fnstsw
lock
xchg
loope
pop
bound
repz
xchg
pop
fs
jbe
cmpsb
mov
and
push
movsb
aas
ret
or
call
add
pop
jo
cs
pop
add
js
test
jl
cmp
fs
testb
inc
dec
push
inc
cmp
jmp
idivl
orl
xor
loopne
jne
bound
aam
aad
insb
insl
adc
mov
mov
mov
cs
out
mov
or
dec
sar
jne
pop
mov
adc
xchg
filds
mov
sbb
filds
pop
shl
shl
or
push
outsl
pop
call
mov
sub
lea
incb
jne
in
sbb
ret
clc
sub
rcr
mov
loop
push
bound
inc
push
ds
push
inc
adc
mov
or
cmpsb
mov
add
pusha
pop
cwtl
mov
sub
aaa
imul
or
push
dec
call
xorb
or
pop
fldt
rcr
pushf
faddl
sub
roll
fs
jo
xchg
fistl
and
inc
push
mov
stos
pop
push
ficoms
rorl
shrb
mov
insl
or
jbe
cmp
mov
test
push
shlb
push
clc
in
push
add
js
dec
xchg
insb
shrb
test
mov
dec
lods
out
mov
or
rolb
out
dec
je
sbb
mov
and
loop
adc
lcall
sub
lds
or
inc
into
mov
aaa
ret
push
mov
je
adc
xlat
lret
adc
dec
cmc
frstor
push
inc
and
and
pop
ja
jo
xchg
test
iret
dec
mov
pop
pop
int
mov
mov
lret
push
dec
subl
or
rorl
push
std
das
jle
push
push
scas
or
cmp
inc
and
aam
cld
je
in
dec
inc
pop
sti
pop
lock
int
test
jno,pt
jne
jo
cmp
mov
push
sarb
lea
mov
lods
adc
cmp
push
les
fildl
into
shlb
and
jno
pop
lret
adc
mov
sar
push
add
push
imul
out
imulb
sub
sub
adc
and
cmp
mov
ret
cmp
adc
sbb
mov
push
sbb
fcoms
out
or
cwtl
sub
jbe
mov
dec
sbb
rcrl
cmp
add
imul
cmp
inc
cwtl
ret
mov
mov
cltd
sub
jnp
or
hlt
mov
adc
mov
das
mov
mov
gs
je
and
mov
pop
mov
shll
ret
lock
mov
push
adc
and
sbb
loopne
push
leave
push
je
and
fidivs
in
jmp
aad
decb
jl
inc
ljmp
push
push
pop
movsl
jne
rolb
mov
loope
inc
pop
popa
test
cmp
and
push
cli
in
sbb
test
imul
dec
cli
es
push
push
push
call
mov
out
cmp
sub
mov
or
dec
sti
and
push
outsl
cmp
and
ja
sti
outsl
add
lock
iret
jbe
sub
jnp
sub
mov
adc
adc
test
icebp
icebp
and
loopne
dec
jnp
mov
js
stos
jle
insb
cmp
sahf
pop
call
mov
cmp
mov
cmpsl
pushf
mov
and
cmpsb
fimuls
jg
repz
inc
ret
push
rol
xchg
jge
fwait
mov
scas
ret
sub
adc
fcoml
fdivs
lahf
enter
int
add
xlat
inc
mov
mov
or
pop
pop
fistl
push
loopne
mov
adc
push
fnsave
inc
aad
in
ja
dec
mov
outsb
xor
ja
adc
fbstp
lock
test
movsl
outsb
xor
cld
xchg
jmp
stos
jbe
mov
inc
in
inc
pop
push
test
mov
sbb
insl
mov
pop
mov
jne
push
pop
pop
fidivrs
shlb
in
dec
mov
push
push
mov
cmp
pop
test
push
call
lahf
add
mov
lahf
and
pop
sbb
fstpl
jle
jne
fbstp
xchg
call
adc
and
dec
inc
push
mov
ret
cs
push
ds
cmp
adc
call
dec
adc
repz
xlat
ror
jbe
lcall
iret
inc
test
jecxz
and
dec
test
arpl
jg
pop
and
in
loop
dec
add
or
hlt
clc
mov
test
xchg
icebp
lods
lret
js
or
mov
sub
mov
lods
ja
sbb
fwait
jmp
xchg
sub
or
hlt
mov
popa
jns
sub
adc
lods
js
fwait
pop
pop
call
cmp
push
pop
mov
loopne
mov
xchg
inc
adc
outsb
mov
adc
xchg
or
cwtl
lods
mov
mov
fwait
push
xchg
popf
adc
sub
fmuls
and
dec
es
inc
je
lret
rorb
fmuls
cmp
in
fcmovnu
ljmp
mov
add
cwtl
stc
fcom
lcall
fwait
cmp
add
xor
pop
cmc
or
sub
xor
xchg
dec
mov
jne
xor
sub
repz
cli
inc
lahf
ds
adc
es
sub
out
je
xchg
icebp
call
outsl
pusha
inc
imul
xor
mov
push
jle
push
les
lock
push
sub
js
sbb
insl
mov
negb
test
sarb
or
inc
xor
fdivr
ret
je
mov
int3
test
imul
shrb
jmp
mov
shl
pop
sbb
out
sbb
mov
in
inc
xchg
fildl
cs
and
je
xchg
insl
pop
loope
push
dec
cld
enter
outsl
fisttps
fs
inc
push
add
cmpsl
shll
fnsave
sub
jp
jne
mov
js
popf
pop
lods
xor
and
adc
mov
shr
sub
jae
mov
mov
aad
inc
lds
xchg
push
je
lret
sub
fnstcw
insl
arpl
stc
sahf
outsb
sti
aas
fstpt
pop
loop
sub
pop
adc
push
ss
in
xor
jb
ficoms
sbb
push
outsl
xchg
push
das
pop
or
inc
test
push
data16
xor
in
xor
jge
push
push
cmpsb
rclb
adc
xchg
mov
test
inc
test
jmp
popf
adc
inc
int
js
or
out
loope
orb
sbb
xor
cmp
sbb
or
adc
mov
or
and
cmp
aam
adc
fst
push
outsb
addr16
sahf
adc
adc
adc
ja
adc
jl
and
pusha
sti
hlt
mov
in
andb
sub
imul
in
fldcw
pop
sub
cwtl
rolb
push
mov
sbb
lods
mov
std
mov
in
xor
imul
mov
mov
push
adc
ret
fistl
mov
je
mov
enter
or
adc
pop
push
jne
shrb
cmp
push
sbb
mov
js
subl
es
mov
cmpsl
sub
rcr
push
push
add
test
dec
cmp
lahf
jg
mov
mov
fistl
call
daa
and
repz
clc
push
mov
or
cmpsb
xlat
jl
lods
insl
push
test
pop
lock
add
je
loopne
das
mov
push
xor
jp
rcrb
popa
jbe
jb
test
dec
call
insb
insb
mov
dec
stos
mov
aas
out
push
cmp
test
nop/reserved
sub
movsb
pop
outsb
push
jg
jmp
xor
pop
inc
cli
scas
adc
fldl
mov
adc
scas
dec
push
add
xor
out
pop
xchg
mov
or
xlat
sbb
adc
out
hlt
int
cmpsl
lods
jge
pop
shll
aad
pop
push
push
add
or
dec
mov
push
aad
sbb
pop
lods
in
stos
or
add
in
dec
sub
dec
out
mov
shlb
rcll
and
shrb
icebp
shlb
mov
mov
repnz
pop
mov
or
dec
leave
or
das
shrl
call
adc
adc
mov
xchg
or
test
mov
int3
jge
leave
mov
test
shrl
xchg
pop
int3
pop
fcmovnbe
fcoms
lret
sbb
push
mov
je
push
les
rcrl
adc
and
push
fucomi
daa
sub
or
jne
test
push
fldt
adc
fsubrp
push
cmc
pop
int
shrl
sub
into
fdivs
gs
sahf
sbb
aad
stos
dec
mov
dec
sbb
push
sbb
and
stc
push
adc
call
adc
sub
inc
mov
outsl
adc
cmpsb
and
xor
inc
pop
add
outsl
hlt
mov
push
jge
and
sbb
mov
jp
cmp
jne
inc
mov
stc
lea
and
fidivs
xchg
and
mov
cmp
icebp
call
int
inc
push
or
fistl
or
pop
lock
dec
es
mov
xchg
inc
int3
cltd
cmp
dec
cmpsl
push
sbb
les
xor
ljmp
pusha
call
int3
mov
and
int3
xor
xor
cmp
std
or
xor
mov
call
add
mov
repnz
arpl
test
out
inc
jmp
mov
or
mov
push
test
divb
fidivrl
mov
jae
xchg
je
pop
xorb
xchg
and
mov
fwait
adc
incl
adc
push
into
nop
out
loopne
fcmovnu
sbb
das
adc
dec
jne
mov
add
cli
fstpl
adc
dec
mov
sbb
leave
jmp
aaa
sub
in
inc
andl
stos
or
popa
repnz
add
jbe
aaa
call
sbb
outsl
mov
or
ficoms
sbbb
adc
lods
mov
mov
aas
jg
add
aam
das
adc
cld
adc
push
mov
outsb
or
insb
and
cmpsb
inc
xor
jb
sub
rcrb
popf
pop
jmp
or
push
inc
enter
push
mov
rolb
mov
push
enter
push
lds
mov
mov
cmp
cmp
sub
fnstsw
inc
sub
inc
or
jbe
xchg
test
mov
insl
jne
mov
insl
scas
clc
push
dec
les
or
sub
pop
roll
gs
jb
pop
xor
ja
das
aam
cmp
les
fists
cmp
int3
arpl
cmc
mov
sbb
mov
mov
je
mov
mov
arpl
pop
lea
es
push
mov
and
lea
mov
push
stc
mov
push
jbe
fdivrs
push
movsb
mov
pop
inc
repnz
mov
stos
stc
push
inc
xor
daa
pop
mov
fistps
mov
out
int3
dec
jg
aad
mov
test
outsl
outsl
xor
adc
cmpsl
addb
andl
pop
addl
adc
sub
jbe
or
je
lret
cmp
or
movsl
xor
add
lds
xor
cs
xchg
test
inc
pop
jae
insl
cmpsb
or
cmc
shlb
mov
add
or
jne
sbb
nop
jle
or
jo
xchg
scas
fadds
insl
push
fisttps
pop
testl
dec
or
inc
insb
and
je
dec
push
out
mov
ret
test
cmp
fcomps
aas
movsl
stos
rcr
push
call
sbb
insl
jecxz
mov
sub
test
cmp
imul
sbb
adc
cmp
adc
and
mov
xchg
pushw
jp
jb
jge
add
dec
loope
sub
ret
xlat
in
aaa
pusha
inc
test
insl
sbb
popl
adc
and
mov
fimuls
lds
je
std
mov
and
lret
rol
or
test
pop
stos
xchg
and
inc
mov
mov
jmp
daa
pop
insl
dec
outsl
into
add
bound
sub
xor
jnp
cmpsb
push
sbb
push
push
dec
aad
in
daa
dec
pop
and
push
int3
in
mov
lea
andl
pop
push
les
dec
faddl
add
xorb
and
pop
mov
lds
lods
mov
or
call
ficoms
loop
add
pop
mov
outsl
ret
adc
ja
cli
mov
add
and
cmpsb
aam
mov
mov
jbe
je
mov
jmp
clc
movsl
aad
pop
cmp
ss
dec
and
push
fbld
or
shll
cs
adc
push
fcmovnu
xor
scas
push
inc
repz
or
jb
test
sub
outsb
mov
add
or
test
jmp
cltd
ret
and
sahf
pop
test
shr
and
pxor
and
xorb
paddsw
cmp
inc
shl
sahf
ljmp
dec
jg
and
data16
je
mov
mov
cli
sbb
lods
jbe
inc
into
adc
sub
xor
lea
mov
mov
adc
je
js
in
xor
sub
loope
fists
bound
cwtl
mov
popa
cltd
in
cs
adc
rcrl
xor
pop
mov
add
aaa
or
xchg
adc
rolb
mov
mov
je
mov
inc
jne
cmp
dec
lods
mov
push
ds
cltd
push
lods
out
cmp
insl
outsl
mov
nop
xor
dec
inc
test
mov
divb
jl
ret
loopne
stc
push
lods
lret
nop
je
sub
and
mov
mov
aaa
pop
adcl
les
jecxz
mov
mov
cmpsl
fcoms
adc
faddl
imul
xlat
in
iret
out
mov
jmp
xor
cmp
clc
xchg
shrl
push
add
sbb
cmp
push
lds
test
mov
mov
test
and
orb
jl
cmpsb
sarb
bound
test
test
lret
sti
or
adc
sbb
sahf
pusha
cmp
movaps
pushf
out
in
imul
test
sub
inc
dec
shl
xchg
jne
fimull
fldl
lds
inc
inc
xorl
cmp
stos
leave
fs
mov
lods
adc
mov
mov
pushf
pop
leave
and
pop
dec
mov
xchg
aad
pop
movsl
aaa
and
lret
je
mov
hlt
rolb
mov
je
int
aad
aaa
addr16
push
cmc
add
test
jmp
adc
jae
push
test
loopne
and
outsl
or
mov
cmp
imul
or
adc
or
mov
mov
mov
mov
imul
mov
mov
dec
movsl
inc
jne
mov
dec
push
and
sbb
push
and
in
and
addl
setne
int
xchg
jno
push
dec
dec
inc
fwait
outsl
add
shll
push
loop
pop
and
in
push
mov
mov
sbb
add
sti
mov
and
sahf
or
xor
faddl
and
mov
jge
mov
in
mov
mov
inc
cld
mov
and
stos
inc
cmp
sahf
sbb
out
inc
xor
call
jnp
out
pop
pop
jmp
lret
mov
sub
fstl
add
pusha
xchg
call
push
dec
mov
adc
or
pop
push
fisubs
test
jbe
hlt
fwait
and
xor
rcll
pop
add
push
pop
call
push
arpl
dec
mov
mov
frstor
push
rcrl
mov
adc
adc
mov
cltd
scas
push
sbb
xchg
add
xchg
lcall
in
data16
inc
mov
jbe
cmp
lret
add
loopne
pop
ljmp
std
adc
loop
mov
outsl
ret
xor
cmpsb
fcomp
sub
add
adc
or
scas
imul
mov
mov
imul
bound
xchg
lret
cmpsb
add
aaa
push
adc
je
cmp
push
call
pop
test
push
and
scas
fidivl
fdivp
es
inc
or
and
stos
imul
sahf
stc
adc
ret
insl
mov
iret
sbb
pop
sbb
sub
adc
outsb
sub
or
inc
lods
xor
loopne
sbb
int3
xor
rolb
aas
sub
aad
sbb
inc
fwait
test
jmp
mov
mov
jge
test
mov
lock
sub
fnsave
ret
pop
xchg
rolb
or
mov
std
mov
testb
aad
clc
cmp
or
push
stos
mov
or
cmpsl
adc
add
ljmp
push
jne
pop
lods
mov
mov
push
daa
stos
daa
imul
int
mov
lods
push
in
jl
push
scas
lods
cmc
fstpl
push
or
pushf
push
lods
jne
out
sar
xlat
das
inc
jg
push
dec
and
rorl
inc
int3
xchg
inc
mov
adc
testl
pushf
aaa
gs
mov
cmp
ret
xor
je
and
insl
add
or
insb
andl
sbb
das
insb
insl
imul
scas
xor
mov
scas
xchg
test
orl
shll
popa
adc
xchg
in
outsb
test
jne
popf
sub
loope
add
clc
sbb
add
adc
adc
mov
mov
call
repz
repnz
call
cmp
les
rorl
pusha
sbb
outsb
cmpsb
ljmp
sti
je
rorl
aad
sbb
adc
in
jp,pn
push
xor
sbb
jnp
jl
push
sbb
and
rcr
xchg
fbstp
push
mov
cmp
push
push
imul
aad
mov
pusha
into
pop
cmp
xchg
and
aad
pop
dec
mov
push
bound
adc
pop
hlt
jmp
mov
dec
push
mov
cmp
sbb
scas
repnz
cmc
movl
sarb
adc
loopne
fbld
adc
cmc
or
push
push
mov
mov
imul
xor
jle
sub
jmp
aam
insb
adc
test
xchg
fiaddl
cli
sbb
or
mov
inc
in
sbb
and
scas
and
and
scas
out
jmp
adc
add
adc
pop
outsl
lret
fdivl
cmp
inc
pop
sub
inc
xchg
sub
movsl
orb
repnz
mov
dec
dec
into
sbbb
and
push
pop
xchg
fdivs
push
inc
xorb
cmp
adc
add
add
inc
outsl
bound
jmp
and
xor
and
dec
lea
aaa
ret
push
lea
andb
pop
add
rcr
or
cmpsb
mov
sub
mov
inc
mov
or
outsl
and
pusha
call
sbb
dec
mov
mov
or
or
xor
adc
sar
daa
sub
dec
fiaddl
fstp
push
sbb
adc
pop
cwtl
adc
mov
cmp
pop
stos
adc
popa
jmp
jb
or
mov
into
repz
movsl
push
fidivl
mov
je
inc
adc
scas
mov
mov
scas
addl
lea
sub
mov
jmp
cmp
in
js
push
jecxz
xor
jle
fwait
jne
cmp
push
rorb
push
outsl
adc
les
push
loope
cmp
lds
je
or
sub
dec
repnz
add
fists
or
xlat
push
push
frstor
test
mov
fiadds
inc
xor
mov
mov
mov
add
popa
push
lret
cwtl
mov
sarb
fistpl
xchg
fsubrs
icebp
int
cmp
push
roll
mov
xor
xor
ret
cmp
mov
sbbb
outsl
xchg
addr16
pop
mov
inc
push
rolb
aaa
mov
sbb
mov
fwait
sub
inc
xor
aaa
mov
loop
das
add
imul
pop
mov
mov
sbb
push
and
add
outsb
push
lods
je
and
addr16
mov
xor
pop
ljmp
sbbb
scas
ss
mov
mov
hlt
add
test
mov
sbb
push
test
xlat
insl
xor
dec
xchg
mov
jno
int3
imul
mov
adc
push
lods
add
adc
mov
pop
push
loope
push
loope
hlt
mov
insl
aas
push
mov
inc
dec
popf
cmpsb
mov
clc
rclb
cli
push
inc
mov
orb
lcall
mov
hlt
data16
adcl
push
scas
lcall
and
push
test
jp
jle
mov
or
test
fisttpll
idivl
test
inc
sub
or
mov
pop
rolb
aam
xor
bound
orb
sbb
jnp
cmp
add
sbb
insl
sti
lods
or
or
lock
mov
dec
and
iret
lea
rep
inc
dec
ffree
je
imul
and
mov
jg
inc
sub
pop
mov
mov
aas
mov
ret
sub
inc
jne
xor
repnz
mov
jo
inc
sub
into
lock
iret
mov
xor
mov
pusha
mov
adc
out
pop
lret
mov
mov
fstpt
or
int3
cwtl
dec
cmp
insl
pop
in
cs
fnstenv
or
hlt
or
mov
adc
aaa
jae
fsubrs
cld
outsl
xchg
ds
or
sbb
jae
rorb
cltd
mov
mov
or
mov
shlb
dec
jbe
stos
pop
sbb
ds
scas
test
push
mov
mov
test
mov
test
xor
or
pop
push
jg
out
es
aad
dec
or
xchg
adc
ds
loopne
and
mov
fiaddl
inc
pop
ret
adc
push
pop
add
push
jne
sub
mov
rclb
lock
inc
inc
imul
fldcw
in
data16
testb
xor
inc
sbbl
dec
icebp
add
or
adcl
movsl
sarb
sbb
aaa
sub
push
add
aam
mov
or
das
mov
sbb
mov
mov
stos
jo
mov
stos
rcr
cld
out
test
sub
inc
mov
push
inc
mov
nop
cld
sahf
xor
pop
sub
mov
adc
sarb
lahf
or
icebp
ret
cmp
mov
xor
mov
inc
ds
mov
ja
mov
lods
mov
push
add
lea
sub
leave
aaa
adc
jge
push
or
sub
ret
data16
xor
ret
addr16
sbb
jo
das
mov
adcl
aas
cmc
lods
std
xchg
sbb
ficompl
and
sbb
loopne
pop
or
or
div
push
lret
adc
add
mov
mov
fdivrl
pop
dec
xchg
rcl
inc
jl
jne
imulb
dec
je
mov
pushf
clc
or
ljmp
xchg
bound
mov
icebp
sub
xor
test
shlb
outsb
push
cmp
test
movsl
outsb
lret
ret
mov
inc
and
jp
sub
scas
add
push
push
cmp
and
xchg
movsl
aad
inc
mov
iret
stos
ljmp
outsl
das
insl
or
sub
or
xchg
sbb
pop
out
cmc
jo
outsl
xchg
loopne
pop
test
jno
aad
push
jmp
mov
ret
shlb
sbb
xchg
inc
aad
xor
inc
lds
outsb
stos
sub
mov
xor
mov
pop
pop
cmp
or
mov
sub
and
repz
loope
fwait
sbb
mov
fstpl
cmp
mov
cmp
xor
pop
jbe
call
mov
pop
adc
sub
in
ds
xor
dec
pop
or
add
cld
jmp
jg
es
inc
fisubs
sbb
adc
je
add
pop
fwait
adc
cli
ret
fsubrl
jmp
mov
push
pop
push
adc
xchg
orb
iret
nop
stos
cltd
fiaddl
rcll
orb
mov
arpl
jne
cs
fists
insl
pop
icebp
and
je
lret
jle
fists
clc
sahf
dec
movsl
test
imul
mov
fdivrs
call
fdivl
loopne
xchg
adc
fwait
cmp
dec
insb
or
imul
mov
pop
icebp
mov
push
sbb
lock
or
aas
rorb
call
or
mov
imul
inc
xor
mov
xor
cmp
jne
adc
and
xchg
or
dec
dec
iret
push
mov
jl
jmp
pop
loop
push
mov
outsb
adc
push
sub
inc
mov
jecxz
leave
jecxz
pop
cld
lea
dec
test
mov
sti
cmp
jle
call
je
mov
mov
and
repnz
test
das
mov
mov
xor
insl
repz
mov
sub
cmp
cs
aam
mov
sbb
xchg
adc
or
dec
push
add
add
ss
or
pusha
mov
and
outsl
xchg
idivb
and
jmp
dec
mov
loope
insb
lds
cwtl
xlat
cmp
pop
jo
adc
push
and
mov
xor
dec
rcl
fsubs
or
lock
pop
adc
in
mov
cmc
jecxz
sub
jp
and
jo
cs
mov
fildll
pop
inc
adc
xlat
adc
adc
or
mov
mov
xchg
mov
push
mulb
cli
insl
mov
or
mov
and
cmpsb
dec
icebp
in
ret
adc
ja
mov
int3
mov
add
cmp
aad
je
cs
aaa
mov
pop
ds
popa
and
jmp
push
mov
cmp
or
xchg
and
or
mov
or
fdivrp
aam
sbb
jp
jbe
adc
dec
and
test
pop
addb
das
or
insl
mov
sbb
outsl
hlt
lret
and
and
adc
mov
inc
pop
stos
sarl
push
in
in
das
mov
jbe
jbe
std
pop
ds
in
adc
pop
mov
push
lret
lods
inc
outsl
orl
cld
mov
sarb
or
add
push
shlb
push
loope
xor
inc
sub
shlb
lock
int3
nop
sbb
test
push
sbb
aaa
loope
push
daa
mov
ss
or
filds
mov
or
outsb
movsl
mov
or
insl
jg
rclb
dec
sbb
adc
adc
je
enter
jne,pn
and
stos
popa
subl
popa
push
cmpsl
aas
sbb
fisttpll
fidivs
xor
outsl
mov
cmp
inc
and
dec
push
mov
cmc
sbb
dec
ss
add
pop
jo
cmp
and
sbb
test
cmc
inc
jbe
pop
pop
inc
jns
cld
cli
adc
in
jnp
inc
and
outsb
insl
inc
out
jge
cmpb
and
cs
shll
or
jp
inc
pop
aaa
fsubrs
insb
or
in
lgs
lret
inc
adc
inc
fdivs
in
cltd
cmp
xchg
sub
push
cmp
xchg
stos
mov
mov
dec
loop
mov
add
cmpsl
adc
stos
push
cmp
scas
aaa
cmp
sbb
lcall
ret
sbb
in
sbb
lods
fstps
mov
push
and
mov
push
xchg
sub
mov
lock
adc
jbe
loopne
fisubrl
clc
or
xor
push
adc
mov
push
push
enter
or
mov
xor
adc
mov
pop
clc
adc
xchg
fidivrl
mov
mov
mov
pop
mov
adc
add
sub
dec
or
sarl
push
xchg
mov
leave
xor
and
fdivr
or
pop
decl
js
mov
shlb
adc
dec
lahf
call
adc
mulb
das
aas
cwtl
test
fstpl
jnp
pop
adc
les
ds
xor
in
movsl
pop
or
sub
xchg
aam
clc
mov
jne
ss
hlt
bound
cmp
repnz
xorb
inc
xchg
mov
inc
jne
sub
mov
bound
lock
push
mov
aam
pop
xor
sbb
les
add
push
cs
xor
dec
inc
divl
test
mov
jo
int
sbb
mov
dec
sub
mov
out
in
jmp
test
jle
clc
cmp
dec
push
in
das
xchg
adc
aaa
mov
lods
adc
pop
int3
test
addr16
and
adc
or
test
call
sbb
outsl
rorb
repz
mov
or
wbinvd
mov
pop
lock
add
pop
int
mov
cli
cmpsb
fidivs
push
mov
inc
test
xchg
jp
lahf
test
jmp
jae
jae
mov
sub
push
mov
inc
pop
mov
fsts
adc
fldt
xchg
push
loope
fnstcw
xor
icebp
xchg
arpl
cmp
dec
sub
jmp
rclb
pop
jle
sbb
mov
cltd
adc
daa
cmc
add
dec
aam
subb
lcall
movsl
ljmp
xlat
mov
mov
xchg
nop
sub
sub
test
inc
add
mov
pop
outsl
sub
int
inc
mov
jnp
jnp
xchg
fiadds
xchg
dec
add
adc
xchg
sub
mov
or
les
or
pop
push
sub
mov
push
jnp
andb
clc
mov
mov
add
cmpl
sub
mov
jp
and
dec
into
imulb
aaa
jp
adc
xlat
push
or
dec
outsl
lods
add
addr16
dec
insl
jae
outsl
imul
xorb
test
aas
mov
adc
sbb
pop
ss
xor
sbb
push
jmp
outsb
add
ret
ds
fwait
or
std
das
push
dec
and
mov
outsl
push
adc
out
xor
cmc
mov
in
push
jnp
je
lock
aam
sub
pop
out
jo
fxam
sub
fucomi
aaa
or
push
jne
fndisi(8087
fidivs
cmc
in
and
sub
loope
aaa
xor
dec
or
add
inc
clc
testl
mov
inc
sub
xchg
sti
mov
push
jecxz
push
ljmp
pop
imul
lds
pusha
jp
or
push
insb
push
and
stc
scas
inc
mov
lea
outsl
sbb
das
and
ret
addl
rorb
imul
ds
jb
cmp
aaa
mov
shll
sti
in
fidivl
pop
lret
dec
inc
add
sbb
mov
into
rcrl
mov
fstpt
dec
call
call
cmpl
xchg
ss
inc
and
outsl
clc
shll
inc
rolb
ja
inc
xor
mov
xbegin
push
fcomip
mov
adc
pcmpeqb
ljmp
nop
push
inc
jnp
lods
in
movsl
fcoml
push
cmp
pusha
stc
jg
rcr
popa
adc
and
pop
je
sub
dec
and
xlat
mov
and
aas
call
cli
lahf
adc
pop
dec
jns
sbb
call
scas
inc
loopne
insl
dec
mov
lods
fistl
movsb
or
dec
arpl
js
jne
sbb
mov
stos
push
pop
mov
or
mov
add
xor
inc
hlt
mov
imul
xchg
das
xor
movsl
xchg
mov
xchg
aaa
test
xchg
adc
adc
loope
out
xor
lods
arpl
imul
xlat
fadd
pop
adc
cli
mov
adc
movl
or
push
adc
gs
hlt
hlt
xor
pop
xor
lock
mov
clc
adc
je
xor
inc
mov
xchg
mov
push
pop
mov
jmp
in
pop
xchg
shl
jmp
push
movsb
icebp
jmp
loopne
fnsave
sbb
mov
call
je
iret
inc
inc
repnz
lods
adc
das
cmpsl
cs
icebp
mov
inc
pop
or
decb
mov
sti
shl
mov
push
mov
jo
call
sbb
cmpl
xchg
mov
push
hlt
stos
or
add
inc
rclb
lea
push
mov
sahf
pop
jl
sbb
test
push
push
outsl
and
add
pop
add
imul
jns
cli
lods
push
movsl
push
movsl
mov
mov
dec
out
call
lods
ficoms
jmp
aaa
je
sahf
push
jno
mov
sahf
sar
push
push
test
insb
stos
or
add
fs
je
mov
and
pop
dec
inc
loopne
mov
paddw
push
inc
pop
mov
pop
mov
mov
mov
std
sbb
and
jo
imul
mov
sysenter
or
sub
inc
fistpll
or
adc
pop
popa
adc
outsb
jmp
pop
loop
ret
sbb
je
mov
scas
sbb
mov
or
subb
inc
mov
cld
cmp
xchg
jecxz
out
das
cltd
xor
das
pop
pusha
sti
adc
jnp
loop
cmp
mov
xchg
dec
aam
or
xor
in
sbb
loopne
adc
sbbb
out
pop
and
pop
es
jmp
fwait
aaa
or
pop
xor
xor
lods
or
cmc
push
imul
adc
aam
inc
mov
xchg
push
sub
inc
pop
sbb
andl
sti
insl
mov
adc
fmull
or
xchg
outsb
test
and
dec
sbb
stos
call
jg
or
or
cmp
test
dec
cmpsl
sub
or
cmpsl
add
inc
in
fisttpl
movsl
bound
mov
outsl
hlt
scas
adc
loop
pusha
subb
lds
inc
sub
je
fstl
out
inc
out
inc
xchg
and
popa
imul
mov
adc
or
ret
pop
leave
add
jmpw
popf
jno
jge
fucomp
push
sub
loopne
in
pop
call
cmpsl
jecxz,pn
lock
xor
in
aam
fisttpll
fldt
inc
les
or
pop
sub
mov
rorb
sub
pop
mov
dec
addl
data16
iret
jl
jg
mov
sahf
mov
pop
add
sarl
or
sub
mov
push
insb
mov
xor
lahf
pop
mov
jg
lods
inc
lahf
iret
cld
mov
add
xchg
fsubr
jbe
mov
rcl
mov
fildl
adc
xchg
ret
stos
add
repnz
xchg
or
out
mov
in
sbb
nop
add
loop
push
cmp
cmp
jmp
fidivs
call
nop
jae
fs
pop
mov
inc
popa
add
shrd
mov
int3
dec
jmp
arpl
mov
ljmp
adc
xor
mov
mov
xchg
adcl
stos
adcb
lea
push
and
das
xchg
add
mov
inc
mov
mov
inc
sub
cmp
push
push
fsubrl
xchg
enter
mov
lea
decl
mov
mov
lret
lcall
push
and
inc
mov
mov
out
xor
test
mov
call
jbe
das
insb
dec
fistpl
lds
enter
mov
add
icebp
cmp
sbb
inc
fidivrl
xchg
rcll
xlat
lea
pop
dec
leave
push
mov
dec
call
movb
and
or
inc
iret
add
push
mov
and
pop
ret
in
dec
lds
add
pop
leave
jb
movsl
repz
add
ja
aaa
push
loope
arpl
xlat
adc
fidivrs
push
sbb
cli
in
mov
adc
es
daa
mov
sub
mov
out
pop
mov
pop
fcmovu
mov
rolb
mov
xchg
test
fcmovnu
popf
inc
fists
mov
test
sub
mov
ljmp
ljmp
cmpsb
and
jle
sbb
addr16
mov
push
xor
insb
push
push
push
test
pop
lods
xor
cs
outsl
sub
push
jp
arpl
imul
xchg
pushl
pop
push
inc
pop
pop
adc
pusha
sbb
mov
rcr
adc
repnz
mov
test
test
push
inc
mov
adc
into
mov
out
fcompl
sbb
sub
stos
pop
xlat
inc
adc
insb
or
imul
sub
xor
mov
push
xchg
adc
fnstsw
xor
loope
repnz
shrb
into
fldenv
fs
push
mov
dec
mov
in
jne
push
cmp
add
xor
lods
rorl
push
push
push
jmp
int
fimuls
xlat
enter
add
insb
loop
add
sub
or
into
jbe
jmp
lods
pop
push
jmp
sbbl
jne
insl
push
and
mov
and
les
rclb
out
jl
mov
out
insl
test
cmp
pop
jae
jae
test
fdivl
or
sbb
jo
sti
fisubrl
cmpsl
pop
ret
mov
adc
in
hlt
jno
add
and
and
xlat
inc
push
mov
pop
jmp
shlb
sub
xchg
jno
mov
mov
dec
inc
popf
rcrb
mov
ljmp
xchg
int3
imul
int3
pop
jnp
es
daa
xor
adc
mov
das
push
movsl
dec
int
add
pop
test
or
fimuls
mov
sbb
adc
and
cmc
or
into
push
xchg
xor
mov
test
lret
lea
mov
cmp
ljmp
sub
jb
push
enter
sbb
cli
aaa
push
push
sbb
adc
adc
les
mov
cmc
test
push
dec
mov
lock
shrl
shlb
cmpl
pop
pop
std
dec
add
sbb
mov
in
mov
xchg
pop
and
orb
sbb
xchg
cltd
push
icebp
mov
mov
aaa
rolb
inc
xchg
jbe
pop
inc
cwtl
xor
pop
mov
in
insb
sbb
mov
add
sub
icebp
ret
fistpl
daa
jno
stos
push
adc
lret
mov
stos
jnp
cmp
pop
adc
or
push
fimuls
lods
loopne
adc
mov
lea
or
sbb
les
sbb
dec
in
subb
add
fimull
mov
mov
adc
leave
rorb
sbb
jbe
shlb
mov
mov
leave
jl
movsl
dec
lods
mov
cmp
pusha
and
lock
lods
icebp
jle
std
inc
xchg
xor
aas
push
sub
adc
pusha
mov
loope
out
and
cwtl
cmp
jo
add
sbb
push
fstp
incl
xor
fcmovnu
add
or
ret
mov
dec
xor
adc
ret
adc
push
xchg
mov
outsl
cmpb
and
mov
test
pushf
sub
pop
pop
mov
jg
subb
dec
jo
ja
sti
jns
mov
insb
push
jnp
and
adc
pop
pushf
jbe
dec
or
pand
insl
fisttpl
inc
fsubs
test
aaa
rcll
mov
jo
pushf
popa
in
mov
dec
push
add
pop
int
push
push
test
ret
xchg
popa
ds
and
sub
xchg
xchg
cmp
and
or
lret
lret
mov
lods
fcomi
bndstx
adc
dec
ja
dec
dec
inc
adc
mov
and
mov
mov
in
sub
ljmp
adc
inc
repnz
ss
into
jno
repz
or
mov
sub
add
clc
out
scas
sbb
in
je
xor
mov
jmp
add
cmpsl
jmp
and
mov
and
pop
and
icebp
das
push
xchg
stos
stos
cmp
es
adc
or
cwtl
dec
scas
ss
stos
jbe
adc
je
jmp
in
mov
fwait
or
aam
push
mov
data16
addr16
xchg
les
lods
aas
add
in
or
or
pop
negl
or
fbstp
dec
pop
dec
adc
mov
push
sbb
mov
mov
and
or
push
xor
ror
andb
push
add
lock
xor
lods
pop
push
hlt
ret
cs
add
mov
pop
in
and
movsl
jecxz
jnp
mov
mov
inc
gs
lret
push
loop
jge
sbb
ds
clc
xchg
push
int3
dec
test
call
lahf
je
jne
jle
adc
shll
pop
cmp
test
xor
adc
dec
add
hlt
out
cmp
push
mov
mov
stc
sbb
cld
arpl
lods
dec
stos
arpl
adc
mov
push
or
adc
cwtl
xchg
pop
sbb
jne
test
xchg
aaa
dec
shlb
add
jne
or
sub
movups
movl
add
mov
jbe
sbb
stos
sub
sub
xor
push
push
and
shr
addb
dec
mov
and
push
mov
jmp
adc
gs
pop
cmc
call
je
orb
mov
ljmp
mov
outsl
aad
mov
aad
jbe,pt
inc
push
out
adc
mov
dec
aam
sahf
cmp
pop
clc
add
inc
adc
jge
call
mov
add
pop
in
push
cmp
lods
jo
inc
adc
pop
cmp
outsl
xor
pop
or
test
sub
push
push
je
adc
sub
pop
mov
lods
out
imul
jmp
fists
and
pop
mov
aaa
outsl
in
enter
mov
arpl
lods
out
test
insb
inc
test
mul
imul
arpl
and
into
sbbl
sarb
inc
or
sti
insb
inc
mov
xor
sub
push
shlb
test
cmc
cli
and
mov
adc
les
pop
sub
je
push
insb
pop
mov
call
insl
add
inc
adc
cmp
mov
dec
xor
outsb
ds
cli
mov
jecxz
adc
pop
mov
insl
rolb
orb
mov
idivb
jae
in
pusha
ficompl
or
lea
pop
adc
mov
mov
dec
clc
sti
inc
or
bound
mov
adcb
out
sbb
outsl
dec
nop
sbb
adc
mov
fsubrs
pop
inc
sub
mov
xchg
mov
cmp
iret
mov
flds
aad
out
mov
add
jne
je
mov
push
je
in
mov
dec
not
dec
imull
and
inc
fwait
and
mov
sbb
fadd
mov
dec
stc
jne
aad
add
test
mov
xchg
dec
outsl
mull
and
pop
stos
roll
or
push
sbb
jle
jns
inc
das
mov
add
testl
call
or
out
insl
adc
adc
adc
adc
sti
daa
rcrl
mov
jle
jo
call
add
sub
mov
out
push
sub
cltd
in
cmpsb
addb
mov
pop
mov
loope
cmp
pop
xchg
xchg
js
lods
hlt
sbb
hlt
cltd
inc
xor
fsubrl
lcall
fidivrs
iret
or
xchg
sbb
movsb
inc
adcl
cmp
and
lret
pusha
push
jmp
lea
mov
inc
mov
sbb
add
or
gs
inc
jl
adc
jmp
or
fidivrs
fsubrl
cwtl
pop
lea
les
or
andl
mov
ljmp
push
mov
xor
jnp
mov
jne
ret
call
fisttpll
sub
loop
push
bound
filds
adc
xchg
xor
push
sub
sbb
aam
push
mov
add
push
inc
pop
sbb
push
adc
sbb
ror
std
cmp
mov
mov
sub
push
fcompl
add
cmp
imul
dec
repnz
lods
mov
pop
jecxz
adc
ds
add
jns
outsb
mov
in
in
repz
mov
sarb
or
fildll
lcall
sbb
sbb
fistpll
js
fdivr
mov
sahf
shll
and
xor
shlb
icebp
jecxz
loop
push
jo
sub
dec
dec
and
fisubrs
int
jno
adc
aad
cld
mov
mov
inc
or
outsb
xchg
sbb
adc
repz
jecxz
test
adc
sub
repnz
lcall
pop
movd
sbb
and
cld
and
sub
mov
rclb
push
sahf
lahf
mov
repz
imul
in
mov
push
pop
mov
sub
je
fiadds
shlb
insb
daa
sarb
push
push
xor
or
inc
cld
fists
mov
imul
adc
jmp
insl
push
mov
sub
es
push
fwait
jecxz
and
adc
popf
add
js
call
sub
cmp
xchg
outsl
test
jmp
cmpb
xor
xor
xchg
ret
mov
mov
and
mov
ja
cmp
or
imul
aam
mov
orb
outsb
jmp
or
push
push
call
out
pushf
xchg
je
sbb
xchg
in
jl
cli
pop
loope
or
inc
pop
xor
push
xor
xchg
fcmovnbe
push
lcall
xchg
call
mov
jbe
adc
adc
sub
pop
sti
mov
add
and
jl
jl
pop
ljmp
je
jae
pop
shll
std
mov
std
xchg
push
dec
xchg
push
mov
xchg
adc
std
mov
adcl
je
in
jle
or
icebp
mov
pop
xor
outsb
adc
adc
and
fildll
jle
stos
nop
jne
rclb
push
hlt
pop
push
jo
sbb
inc
mov
mov
pop
sub
cmp
and
jno
rcrl
call
sti
js
pushw
dec
cmp
adcb
inc
push
push
lcall
jae
sub
mov
cmc
dec
ret
push
inc
aam
sbb
and
sub
scas
mov
push
push
subb
scas
inc
mov
idivb
js
or
cs
out
adc
aam
xchg
or
mov
add
fcomi
add
lret
jae
rcr
stos
aad
in
adc
fcmovbe
pop
fstpt
add
dec
je
call
and
test
adc
xor
lods
arpl
mov
cmp
sub
outsl
adc
mov
and
sbb
nop
sub
jg
js
dec
sub
ja
scas
xorb
in
ss
jno
xor
add
mov
hlt
pop
call
mov
jmp
ja
jp
and
pop
pop
test
sbb
out
adc
lods
push
pop
ror
push
test
das
insb
addr16
push
repz
pusha
add
out
in
add
mov
fbld
cmc
ds
or
mov
mov
mov
and
daa
jp
rclb
insb
cld
push
jo
lods
mov
adc
test
adc
add
jo
pushl
aas
ljmp
outsl
movsl
notl
inc
in
ss
pop
push
lcall
call
pop
xchg
mov
mov
imul
adc
negl
jmp
sbb
lret
mov
addr16
add
mov
sub
pop
vmread
adc
mov
shrb
cmp
ljmp
pop
inc
sbb
popf
hlt
outsb
push
test
jmp
rcrl
sub
divb
fsubl
mov
and
mov
shlb
outsl
shrl
outsb
pop
out
ret
cld
cmpsl
push
das
rcl
sbb
sbbl
inc
pushl
fcoms
sbb
inc
scas
and
mov
insl
mov
sub
bound
pop
mov
jbe
lret
call
scas
jnp
and
lock
push
in
lea
incb
dec
push
lahf
jle
inc
pop
lock
jg
divb
mov
dec
pop
add
xor
inc
fisubrs
add
add
or
sub
ss
mov
mov
xor
adc
insb
subb
mov
in
dec
dec
mov
add
pushf
je
push
sub
add
jmp
stos
dec
xor
push
cli
cmpsb
fistl
dec
cmp
and
adc
sub
sahf
shl
lock
or
or
mov
adc
call
xchg
and
je
pop
in
mov
movsl
outsl
cmp
jne
and
or
arpl
hlt
dec
out
sub
int
push
xor
sbbb
cs
outsb
in
or
add
decl
sbb
insl
jae
out
pop
xchg
or
xor
mov
movsb
jno
sbb
xor
fisubs
loopne
and
adc
fisttpl
fcos
ds
lea
mov
pop
mov
push
xchg
sub
or
push
xlat
aaa
stos
push
adc
push
pushl
sbb
das
lret
push
and
js
out
or
push
inc
sbbb
daa
shlb
jmp
push
push
cmp
mov
insl
jp
adc
adc
and
xor
imul
test
aas
sub
in
pop
pop
sbb
sbb
arpl
mov
loope
cmp
outsl
rclb
mov
in
cs
fs
push
call
fs
nop
and
sub
xor
cli
lods
mov
mov
add
fsubrs
mov
pop
cmp
adc
mov
sbb
jmp
sub
xor
push
outsb
pusha
xor
pusha
ret
out
mov
fs
lods
loope
fidivl
call
and
mov
mov
pop
or
mov
inc
jmp
andl
outsb
mov
fs
insl
testl
gs
lock
lock
pop
jg
stos
sarb
mov
adc
and
add
inc
jge
ret
mov
adc
push
xchg
adc
cmp
movsb
adc
out
insl
mov
inc
pop
jnp
mov
lret
cld
jp
mov
cs
cmp
stos
mov
repz
mov
inc
fisttpll
or
sbb
ljmp
outsl
inc
mov
and
lock
bound
push
rcr
pop
in
jne
inc
mov
sbb
cmp
jg
lea
mov
mov
cmp
mov
je
xchg
cli
movsl
incl
imul
or
call
mov
mov
and
or
scas
mov
and
int3
outsb
lret
scas
mov
push
stc
jb
shrl
or
push
test
ret
mov
inc
or
jmp
add
adc
or
inc
mov
rorl
jmp
or
adc
mov
or
idiv
notl
mov
in
jge
push
mov
lods
jb
pop
add
mov
and
aas
xor
stc
add
test
roll
fsubl
cmp
push
xchg
mov
pop
dec
dec
vmovq
in
dec
pop
and
leave
add
fs
das
sub
fidivrl
adc
int
mov
or
in
add
dec
push
or
out
sub
ljmp
lret
and
or
dec
test
adc
repnz
icebp
stos
xchg
movsb
inc
imul
or
lods
and
fdivrl
ficompl
push
je
mov
pop
aaa
mov
cwtl
and
mov
mov
ret
sbb
inc
push
xchg
adc
ljmp
mov
je
cmp
ljmp
mov
repz
popf
push
adc
mov
pushl
rcll
jb
add
adc
data16
xor
adc
xor
leave
pusha
imul
and
cld
sub
outsl
dec
data16
call
sbb
xchg
mov
insl
mov
les
popa
add
mov
xor
cmp
push
jmp
jae
sub
fcoms
xchg
inc
mov
mov
adc
lock
and
adc
scas
sbb
mov
pop
mov
or
adcl
mov
scas
add
pop
ja
scas
add
fisubrs
and
inc
push
xor
pop
mov
mov
add
push
cmp
mov
loopne
mov
rolb
pop
mov
inc
mov
push
aas
filds
add
add
pop
frstor
cmp
fcmovnbe
xor
adc
outsl
adc
je
pusha
adc
fcmovnb
mov
cmp
push
mov
mov
xor
es
lods
push
stos
lret
in
imulb
push
mov
cmp
lcall
out
jae
jle
repnz
fwait
sbb
and
and
es
test
cs
push
fisubs
push
push
mov
inc
pushf
sub
push
add
push
adc
mov
add
addr16
insl
fisttps
aad
out
or
call
popa
loop
sbb
add
sub
add
and
inc
xchg
loop
ljmp
mov
or
mov
or
inc
cmp
xor
loop
je
mov
mov
jae
frstor
adc
push
outsl
fsubrl
mov
movsl
xor
dec
pop
in
sbb
ss
fistpll
das
test
ja
lahf
mov
or
mov
outsb
call
jg
fbld
push
add
out
insl
ret
inc
fcmovnu
sub
sbb
mov
pop
jp
insb
cmp
sub
xor
outsl
inc
mov
inc
pop
sbb
and
fcompl
sbbl
out
or
or
mov
mov
sbb
mov
shlb
adc
jl
mov
movsb
pushf
rcrb
xchg
lock
cltd
test
stc
fisubrs
fs
xchg
mov
outsl
mov
adc
adc
mov
insb
leave
mov
sbb
add
mov
cmpsl
and
dec
or
in
neg
lods
or
inc
xlat
je
adc
stos
mov
cld
sbb
out
je
test
call
inc
adc
cmpsb
mov
test
clc
call
out
push
repnz
sbb
decl
and
popf
or
push
cmpsl
push
imul
into
mov
push
shrl
xchg
xor
pop
ficoml
or
test
push
aam
pop
pop
push
jg
kmovb
fildll
jnp
and
nop
and
call
adc
das
rcr
add
mov
cli
loop
mov
inc
xor
mov
bound
pop
push
hlt
mov
ret
or
xchg
xor
mov
testl
push
lock
ret
or
mov
shll
mov
mov
mov
add
adc
sbb
pop
push
cmp
inc
sub
into
pop
mov
mov
adc
int
push
loop
and
sub
out
test
pop
or
jmp
mov
inc
hlt
rolb
stos
adcb
fiadds
xchg
cmp
jl
cltd
mov
or
push
mov
mov
add
mov
jmp
xor
pop
popf
xor
sbbl
mov
xor
push
push
push
xchg
jecxz
jmp
int3
aas
popf
orl
les
int3
loope
scas
mov
adc
push
lods
subl
mov
imul
imul
sub
pop
and
xchg
mov
mov
adc
cs
adc
or
sbb
jno
push
or
jge
xchg
lret
addr16
pop
test
das
inc
cmp
mov
mov
stos
mov
mov
inc
ss
fiadds
jmp
inc
adc
leave
push
inc
test
xor
call
push
xchg
inc
imul
push
mov
push
popf
dec
call
pop
inc
pop
inc
sub
xchg
lcall
subb
das
loope
mov
es
adc
xor
je
jl
pusha
jae
pop
adc
in
or
aam
jl
push
out
jl,pn
and
push
adc
mov
push
dec
adc
push
xor
add
fs
stos
dec
sub
pop
rcr
ds
push
adc
ret
inc
and
sbb
test
sahf
es
jge
jne
fimull
xor
dec
mov
mov
stos
push
mov
mov
xchg
mov
insl
pop
je
mov
nop
mov
mov
stc
add
lds
mov
in
mov
mov
jmp
cmp
and
repz
gs
dec
inc
stos
sbb
xchg
push
loope
mov
inc
addb
xchg
cltd
sbb
test
outsb
insl
insl
aaa
or
lea
mov
or
jmp
sti
cmovnp
or
pop
or
pop
pushf
push
aas
cld
and
push
ret
scas
pop
imul
cs
push
or
pop
sub
shlb
mov
mov
xchg
testb
call
and
aad
jg
or
cs
xchg
icebp
mov
dec
in
call
sbb
outsb
fisttps
test
push
outsb
in
or
sub
jge
pusha
test
mov
and
jmp
and
aas
js
or
pop
ljmp
imul
dec
cld
fildll
xchg
jne
pop
imul
sub
ds
aam
mov
dec
out
adc
lret
out
mov
adcl
insl
mov
jae
xor
subl
mov
je
cld
dec
je
mov
jmp
fnstcw
les
dec
das
pop
xor
int3
repz
fistpll
adc
rorl
mov
sub
sub
push
fcomps
inc
push
xchg
or
mov
or
mov
mov
add
adc
adc
cmp
and
jecxz
xchg
lcall
xchg
test
inc
mov
adc
xchg
pop
orb
cmc
movsb
sub
testb
and
inc
add
jne
ljmp
and
stos
mov
push
push
adc
or
push
in
mov
arpl
push
fmuls
mov
icebp
adc
dec
inc
roll
inc
cltd
shll
sub
jne
xchg
out
pop
and
fildl
mov
lea
pextrw
add
and
data16
sbb
sbb
popf
dec
push
xor
stos
imul
pop
call
sbb
data16
mov
pop
jnp
pop
rol
stos
jmp
push
nop
adc
outsb
cli
push
jp
pop
je
ja
cwtl
lds
lds
fisubrl
loop
pop
push
or
jb
sub
scas
dec
cmp
stos
or
int
inc
in
push
mov
shll
xor
and
mov
and
mov
arpl
fisubl
or
pop
adc
bound
cmpsb
outsl
cld
inc
or
cltd
adc
repnz
and
fst
outsb
sbb
and
inc
clc
cwtl
or
inc
jno
push
ljmp
or
cmp
xchg
jle
or
in
inc
push
decb
ss
cs
sbb
sarl
pop
cmpb
lock
ss
jmp
filds
fistps
call
adc
add
pusha
and
mov
lret
push
xlat
jne
mov
xor
jne
inc
or
pop
shll
sbb
add
rolb
add
pop
add
std
notb
jnp
and
jne
add
jmp
pop
mov
jmp
dec
add
dec
pop
outsb
ljmp
mov
iret
mov
push
js
pop
fidivl
dec
and
sbb
sbb
stos
cli
mov
addr16
jns
add
inc
dec
std
out
xchg
xchg
mov
push
xlat
dec
cmp
enter
pop
push
push
outsl
add
add
testl
push
jl
imul
dec
add
inc
mov
mov
sti
sub
gs
out
outsl
bound
outsl
out
scas
cmpl
sbb
mov
mov
mov
and
rcll
stos
jl
add
int3
and
lret
je
add
inc
jbe
add
pop
lock
imul
add
cld
scas
outsl
outsl
pop
arpl
mov
imul
fbstp
inc
mov
jno
inc
jae
or
jb
fcomip
lods
mov
sbb
mov
icebp
and
inc
mov
push
in
mov
dec
dec
xor
mov
fdivr
in
mov
pop
mov
dec
in
fwait
push
dec
pop
mov
lea
add
mov
inc
or
add
mov
fstp
or
rol
js
call
jge
loopne
stos
repnz
inc
pop
mov
fists
jb
scas
push
dec
mov
dec
jo
insl
inc
add
dec
dec
jg
jnp
outsl
xor
dec
pop
jno
loopne
arpl
add
incl
mov
add
cmp
arpl
jmp
arpl
shrl
inc
mov
push
inc
dec
inc
lahf
repz
xchg
call
cmp
inc
add
dec
mov
mov
jg
mov
ret
push
dec
inc
ret
dec
push
in
inc
sti
inc
mov
cs
aaa
push
gs
ja
sbb
and
repnz
add
mov
mov
nop
pop
gs
roll
push
imul
pop
inc
cmp
lret
ja
push
mov
mov
imul
in
jb
dec
push
jg
xlat
movsb
fildll
dec
jns
xchg
sub
sbb
mov
incl
jb
mov
sub
scas
xor
push
jno
mov
add
inc
push
inc
ja
push
xor
push
dec
sbb
cmpl
fidivrl
inc
push
fwait
mov
dec
adc
xor
xor
ret
add
jmp
incl
add
dec
mov
dec
arpl
mov
mov
mov
mov
icebp
adc
inc
push
mov
sub
push
sbb
mov
in
cmp
sbb
popa
push
add
sti
push
add
lret
mov
mov
inc
push
add
loop
xor
insb
inc
fildl
fsubl
push
lret
and
xor
aas
mov
adc
icebp
lret
es
cli
inc
jnp
std
cmpsl
mov
shll
imul
push
pushf
jp
jne
popa
jbe
mov
clc
jbe
dec
push
add
sbbl
xchg
push
push
pop
add
push
ret
mov
repz
push
mov
imul
loope
xlat
or
push
jle
adc
jge
jo
xor
cmp
xor
push
mov
into
pop
lret
out
xor
cs
sub
jae
outsl
lock
sub
lret
hlt
std
push
insb
jno
jmp
add
dec
popa
dec
and
add
sub
and
loope
jge
jns
push
stos
scas
outsb
in
popa
push
pop
popa
sbb
mov
push
shlb
dec
cmpb
gs
jmp
popa
push
data16
mov
pushf
xor
lock
inc
gs
dec
cmpl
dec
in
fstpl
inc
sbb
leave
ret
xchg
add
out
rcr
repnz
mov
rcrl
mov
clc
add
inc
out
mov
loope
outsl
pop
mov
sbb
xor
fnstsw
push
jmp
cld
push
inc
mov
add
sub
sub
mov
xor
pop
int3
cmp
outsl
push
xor
jmp
daa
incl
add
cmp
in
pop
loopne
jne
pop
cmp
fdivrs
cs
fsubr
push
dec
pop
test
lret
cld
jecxz
mov
sub
jns
ss
lock
outsl
je
xchg
push
dec
pop
shr
jbe
imul
mov
adc
ret
and
fs
mov
and
push
push
sbb
lret
je
jmp
jmp
dec
pushl
xor
inc
bound
insl
sarl
mov
fcmovnu
sub
mov
pop
dec
dec
push
push
xor
das
sub
addr16
daa
jne
inc
xor
ja
or
es
inc
ret
cmpsb
arpl
or
mov
inc
dec
insl
push
adc
jne
xor
insl
add
scas
decl
inc
jmp
in
popa
xor
cwtl
mov
pop
lods
cmp
inc
dec
sbb
int
arpl
xor
cs
idivl
mov
sbb
add
stc
es
aaa
lock
pop
jns
insl
popa
bound
andl
mov
dec
jge
push
push
je
jmp
dec
fistpll
mov
cmp
shlb
mov
movb
inc
mov
out
outsl
jne
fidivs
test
inc
mov
mov
clc
xor
sub
inc
fwait
addl
lea
ss
or
or
jns
out
add
pop
cmp
insb
push
hlt
sbb
imull
pop
push
push
ret
inc
shrb
jb
fcomp
aaa
int3
pop
xlat
mov
inc
cmp
add
jp
mov
xor
outsb
out
fistpl
ret
cmp
lock
gs
outsl
int
xchg
inc
xor
xor
inc
sbb
pop
int
ret
pop
inc
xor
jge
and
mov
add
incl
push
aam
push
pop
jg
rcll
ffreep
aam
out
in
ficomps
pop
jle
out
add
mov
fisubrs
mov
imul
sti
adc
push
xlat
sbb
add
push
jbe
mov
xchg
rorl
mov
dec
sbb
xor
cld
jg
push
inc
lahf
jge
sbb
inc
add
mov
and
push
jg
stc
xor
lock
sub
imul
or
bnd
repnz
inc
xor
lds
popf
lods
cmp
bound
sub
outsl
inc
int
mov
stc
daa
nop
mov
add
mov
jg
test
gs
les
xor
das
pop
dec
sbb
mov
lea
cmp
jb
jge
sbb
jns
adc
xchg
jmp
mov
jl
xchg
lret
mov
pop
stos
dec
mov
fs
bnd
add
pop
jnp
cmp
test
and
dec
es
das
mov
cli
sbb
mov
jp
and
fsub
lret
in
mov
jge
and
sbbb
xlat
popf
test
fisttpl
mov
adc
fcmovnu
cmp
mulb
pop
or
mov
pop
adc
xchg
or
dec
inc
add
push
loop
in
fnstsw
push
and
cltd
scas
jle
xchg
bound
insl
incl
imul
movsb
test
je
jl
shrb
repnz
stos
dec
stos
fs
mov
neg
pop
mov
loopne
mov
inc
jp
jbe
mov
std
enter
lods
insl
jp
cmpsb
push
xchg
test
ret
imulb
xor
dec
adc
mov
stc
lcall
push
cmc
cs
push
or
ds
movsl
pop
jns
pop
lcall
push
subb
movsb
ds
pop
fistps
add
adc
mov
and
jbe
outsl
add
xchg
iret
adc
jl
in
pop
mov
call
cli
movsb
inc
hlt
arpl
push
cmp
pushf
adc
mov
addr16
dec
rcrl
lret
aam
jge
add
ds
push
mov
in
push
loop
cld
add
jle
sti
fcomip
xchg
fldenv
es
adc
add
jle
adc
ffree
push
mov
pop
adc
fistps
mov
es
jae
pusha
les
aaa
outsl
sbb
std
jmp
xlat
repz
shrb
sub
sub
pop
mov
sti
testb
das
rclb
aad
insl
cltd
stos
fistps
add
adc
jecxz
push
xchg
repnz
jbe
outsl
add
dec
rcll
roll
in
pop
mov
aas
mov
mov
add
and
imul
and
stos
popl
xor
push
jo
faddp
mov
cwtl
out
mov
addr16
ret
adc
pusha
sub
jno
aad
pop
ds
pusha
dec
loopne
push
mov
loope
fs
jg
fstl
sahf
insl
cs
push
outsb
xchg
rcrl
fisubl
xchg
dec
movsb
push
outsb
mov
adc
shll
mov
dec
pop
dec
cmp
and
lcall
fdivrl
adc
xlat
lock
test
fisubs
outsl
add
adc
push
sti
jp
repnz
pop
or
push
dec
pop
nop
lret
scas
sbb
push
sub
nop
add
imul
stc
ret
jmp
cmpsl
jl
or
mov
or
or
mov
dec
clc
notb
insl
sub
jb
xchg
dec
mov
mov
mov
lcall
neg
mov
daa
pop
movsb
lea
and
inc
lcall
jo
ja
sbb
loop
idivl
sbb
mov
xchg
popa
enter
sahf
aaa
sbb
in
fldt
clc
sbb
cld
sbb
sbbl
loope
jns
in
mov
aas
movsb
xchg
outsl
ficomps
nop
and
and
mov
jo
out
cltd
push
mov
add
dec
aas
push
notb
xchg
test
cmp
loopne
mov
int
inc
div
xlat
mov
movaps
sbb
stos
pusha
das
out
cli
repnz
test
push
sub
push
sub
or
mov
dec
mov
out
dec
mov
in
mov
insb
dec
notl
or
or
sti
repnz
push
push
mov
jnp
pop
js
std
fistpll
rolb
push
cltd
adc
in
add
scas
bound
out
mov
sub
xchg
ja
clc
dec
dec
cltd
insl
cmp
jle
lock
call
outsb
in
inc
and
lds
sbb
cmc
cmp
cmp
push
jmp
pop
arpl
loope
cmp
pop
stos
add
clc
cli
fisttps
jl
scas
xchg
ficoml
inc
jb
push
xor
add
clc
icebp
or
cmpsl
lcall
xlat
pop
gs
in
push
or
add
in
mov
decl
xor
mov
movsl
add
and
repz
roll
mov
into
cmp
cmp
jle
imul
das
add
lahf
adc
pop
push
roll
in
paddb
shl
mov
cld
xchg
pop
loopne
jp
add
sbb
test
call
pop
mov
negb
lods
push
jbe
lret
mov
xor
aaa
lods
filds
outsl
add
push
mov
sub
aas
cld
lea
pop
fists
in
repz
jle
cltd
xchg
sbb
and
outsb
std
mov
arpl
dec
add
and
addr16
jmp
cwtl
and
inc
cmp
push
std
jo
add
pop
cmp
ret
pop
jmp
sbb
pop
jmp
stos
pop
movsl
jns
aaa
jl
mov
scas
jnp
push
pop
push
mov
mov
ret
sbb
and
ja
add
scas
shr
pop
inc
cmovns
add
jns
in
loopne
nop
dec
jnp
outsl
mov
dec
out
leavew
call
cltd
shlb
mov
and
adc
stc
repnz
cwtl
mov
mov
lret
out
gs
rolb
sbb
pop
sbb
es
mov
stc
jbe
pop
add
mov
rcrb
bound
daa
pop
jl
int3
popf
fldl
pushf
jnp
sbb
fwait
xchg
mov
jmp
stc
sar
repnz
iret
popf
dec
xchg
pop
jg
add
and
inc
std
fcom
sahf
pop
jo
outsb
movsb
mov
out
or
jbe
mov
pusha
aaa
cld
dec
sub
leave
xchg
rcll
stc
stc
bnd
xlat
push
out
sub
shl
out
push
jb
rorb
sbb
outsb
loopne
rcpps
cmp
cltd
insb
imul
loop
scas
pop
xchg
xor
fldl
lods
loopne
mov
pop
sbb
imul
jl
fmul
pop
mov
push
xchg
mov
nop
stos
outsb
push
jle
subb
scas
inc
fwait
jns
fs
nop
pushl
jl
fadd
in
push
cmp
cmp
shll
jecxz
repnz
mov
das
fcomps
fcoms
in
inc
clc
ja
leave
fwait
inc
inc
inc
dec
fstl
mov
or
cmp
fcoms
das
dec
cli
cmp
lds
clc
cld
andl
jl
or
lret
mov
fsubrs
mov
push
cmp
sub
fdivrs
aad
xchg
outsb
loop
sbb
push
mov
out
pop
icebp
outsb
cmp
cmp
rcr
sbb
fisubrs
jecxz
and
jl
add
adc
lock
call
lahf
addr16
rcrl
daa
mov
pop
hlt
sbb
lret
loop
mov
sub
sub
sub
jne
scas
pushl
stc
stos
dec
lods
inc
push
mov
mov
in
sbb
enter
bnd
and
lret
pop
dec
sbb
movsb
das
jg
iret
adc
sbb
jnp
out
push
loop
xor
cmp
ret
sarb
out
mov
mov
push
cli
push
hlt
pop
test
lods
or
jno
mov
insb
dec
mov
loope
and
jg
or
enter
jg
popf
push
mov
push
es
aaa
jg
push
shl
js
push
xchg
shlb
or
inc
mov
adc
bnd
ljmp
push
in
hlt
add
fists
in
ror
adc
shrb
mov
cmpl
xchg
add
loop
mov
push
scas
xchg
jbe
es
xchg
clc
outsb
sti
rorl
into
call
loop
mov
xchg
ss
and
insb
fstpt
jmp
push
mov
cli
or
xchg
mov
add
bound
fidivs
pop
loop
and
ficoml
leave
repnz
ret
sub
mov
in
sbb
into
dec
test
ror
push
stc
clc
or
test
in
cli
ja
das
pop
and
insl
addr16
xchg
cwtl
adc
and
cwtl
in
sbb
sub
jecxz
imul
sbb
pop
cltd
lods
pop
and
and
repz
int
int
xchg
and
adc
loope
pop
call
jnp
pop
sub
in
inc
nop
add
dec
add
inc
stc
enter
imul
or
hlt
adc
repz
lahf
es
mov
lods
jecxz
bound
xchg
lock
insb
pop
lcall
fsubrs
pop
pop
lcall
in
adc
lds
push
mov
fstl
push
dec
ret
add
mov
lods
test
aad
sub
add
into
ret
jbe
jno
adc
jmp
lret
dec
mov
test
ljmp
push
lcall
sub
in
rolb
ret
int
fists
fwait
push
mov
mov
mov
das
and
rcr
adc
subl
pop
lcall
add
mov
mov
shlb
int3
insl
sub
cmp
aaa
popf
in
andb
jmp
lods
pop
sbb
aaa
push
movsb
in
adc
pop
stos
dec
stc
enter
mov
imul
pop
inc
mov
mov
mov
add
xor
adc
cmp
adc
xchg
aaa
cltd
in
ret
sub
adc
xor
inc
loope
ret
call
lahf
jmp
xorl
imul
sbb
imul
and
vaesdec
cltd
push
jbe
cltd
and
outsl
cs
pop
jecxz
pop
sbb
lock
mov
adc
dec
xchg
pop
push
jne
sub
jge
scas
fisubrs
insb
add
jecxz
sbb
outsl
outsb
sti
in
insb
xchg
xchg
cmp
das
jg
xchg
stos
in
outsb
xchg
and
adc
dec
mov
cmp
rorl
dec
mov
sahf
int
mov
lea
adc
je
add
jle
pop
lret
jb
lret
push
xlat
mov
jne
jbe
pusha
pop
cmp
outsl
or
mov
push
pop
fwait
cmp
jmp
mov
inc
movsb
cltd
movsb
jae
sbb
fldt
add
or
imul
jmp
sub
outsl
out
jmp
adc
jle
outsl
out
arpl
jge
and
cmp
out
mov
movsl
inc
popf
mov
mov
fnsave
inc
xchg
sub
clc
movsl
stc
bound
xchg
lret
int
sbb
mov
scas
sbb
and
in
jle
or
insb
in
ret
popf
push
rol
popa
jbe
and
fwait
cmpsb
pop
xlat
sahf
dec
into
push
sti
ret
lret
cmp
data16
testl
sbb
outsb
xchg
pop
icebp
aaa
lock
and
das
imul
iret
mov
lret
xor
outsb
inc
addr16
gs
faddp
mov
pop
jp
inc
or
les
pop
stc
inc
mov
out
mov
lahf
xchg
lods
fmull
jle
inc
jp
mov
data16
jg
push
xchg
jg
fcoml
mov
jle
fisttpl
aad
and
lds
mov
imul
push
mov
outsb
out
aam
std
xchg
ror
xchg
inc
jg
mov
dec
sahf
inc
movsl
push
lds
out
mov
push
adc
loop
pop
loop
push
loop
cs
sarl
push
mulb
dec
xor
mov
pop
push
in
jmp
and
divb
xchg
push
int3
cld
push
xchg
cs
adc
push
jp
int
in
push
xchg
jnp
dec
sub
pop
jmp
stos
ljmp
aam
orb
sub
testl
sahf
lea
xchg
sbb
sbb
test
xchg
aas
push
sub
sahf
insl
sbb
dec
xchg
push
push
and
adc
pop
adc
call
sbb
stc
leave
mov
lods
xor
test
push
mov
lock
out
jnp
add
cld
clts
iret
pop
fisttpl
xor
test
push
repz
icebp
xor
mov
dec
mov
in
xor
jg
mov
jno
mov
xchg
cwtl
add
dec
xchg
mov
incb
jne
sbb
out
loopne
sbb
push
out
inc
pop
mov
push
inc
int3
jns
mov
in
imul
pusha
lea
mov
inc
ja
sbb
in
fistpl
bound
xor
fwait
popf
aad
mov
out
aas
out
dec
cli
aad
mov
sub
mov
cld
test
xor
ret
or
fldl
popf
push
mul
arpl
aaa
pop
jg,pn
jp
push
loop
jecxz
pop
jp
push
push
rol
sahf
stos
sahf
incb
sbb
jge
and
sti
cmpsl
pop
out
sti
cmpsl
xchg
ja
sbb
scas
sahf
add
shll
pop
sbb
dec
sbb
cmp
into
add
sbb
lea
push
push
pop
xor
popa
pop
jge
jle
jge
int
push
jle
adc
loope
mov
in
lcall
les
lock
mov
out
outsb
movsl
sbb
inc
es
adc
fadd
das
out
popf
push
aas
js
mov
mov
mov
test
fnstsw
jge
pop
lods
pop
leave
jnp
sub
rcr
jnp
jge
js
jne
fildl
mov
mov
sbb
fdivs
sub
cli
sub
das
das
and
jle
scas
lods
xor
pop
int3
sub
pop
xchg
xor
lahf
jl
adc
mov
cs
xor
rcll
aaa
and
mov
leave
fbld
fcompl
lahf
add
push
pop
mov
xchg
stc
dec
js
sub
icebp
jl
xchg
mov
in
xchg
ss
inc
aam
pop
mov
pop
mov
iret
pop
clc
and
movsl
pop
ss
mov
inc
and
sbb
cmp
push
pop
ret
sbb
push
jmp
mov
xlat
stc
add
stos
inc
xor
mov
ljmp
outsl
cmp
xchg
jmp
push
subl
shlb
lock
xchg
subl
mov
aam
js
push
addb
mov
mov
add
or
sbb
insb
fcomps
lea
or
loop
mov
test
or
xchg
nop
adc
lock
jno
cltd
lock
and
xchg
lods
jge
andl
mov
pop
mov
xchg
sahf
loope
sub
insl
jmp
ror
lret
sti
outsl
bound
mov
mov
rorb
xchg
sbb
rdmsr
push
and
sbb
jbe
sbb
dec
lock
mov
xor
push
sbb
sbb
dec
sbb
inc
jecxz
outsl
mov
mov
xchg
inc
jg
lea
xchg
lock
cli
outsl
add
loope
adc
or
xchg
xchg
outsb
rcrl
sti
test
mov
adc
and
aam
pop
xchg
arpl
mov
mov
fs
cmp
rcrb
popa
test
popa
push
push
in
jns
push
lcall
sub
dec
stos
mov
insb
mov
xchg
fucomp
imul
jge
aaa
jp
jb
or
push
pop
ss
lods
jb
dec
inc
in
fwait
xchg
jne
inc
xchg
and
mov
insl
scas
fadds
xchg
popf
add
movsb
call
xchg
divb
xorl
xorl
fsubs
int
mov
movb
dec
shrl
ljmp
inc
inc
pop
fistl
dec
adc
gs
ss
jbe
adc
jns
jecxz
fnstsw
lret
xor
pop
cmp
sbbl
int
mov
pop
fcompl
fisttpll
fnstsw
sbb
push
mov
mov
or
sbb
fcomps
adc
fcoml
push
jg
aas
sbb
mov
mov
or
into
fstpt
sti
add
push
xor
xchg
mov
js
mov
xchg
sub
cwtl
ret
cmp
aaa
loopne
outsl
adc
add
xor
fisttpl
xchg
and
push
aad
stos
add
std
out
mov
xchg
pop
aad
sub
lret
roll
in
mov
mov
fdivs
lret
dec
jmp
pop
xor
cmp
push
call
sbb
shlb
inc
sti
xor
repnz
mov
lret
cltd
adc
mov
cltd
popf
dec
inc
mov
test
cmp
out
add
jle
push
fs
repnz
cmp
lds
inc
lods
jns
testl
mov
testb
lahf
shl
adc
mov
sub
push
add
sbb
lret
mov
jle
push
mov
in
xchg
ja
push
leave
call
inc
ret
mov
insl
or
and
push
add
cltd
add
cmp
jecxz
cmp
int3
adc
and
in
fwait
jecxz
jg
add
mov
inc
add
lret
sbb
jbe
cmp
or
fsubp
test
seta
fistps
arpl
jns
pushf
sbb
sub
in
dec
mov
add
fisttps
jne
in
dec
in
inc
cmpsb
jg
bound
stos
mov
jnp
push
testb
sub
pop
aad
jbe
ficomps
fistpll
out
jle
mov
cltd
push
cltd
insl
jg
fcoms
or
inc
mov
xchg
test
and
lods
inc
add
jg
jns
pop
in
ja
aam
lock
scas
pop
lret
push
mov
pop
testl
push
fisubs
gs
lcall
std
mul
outsl
adc
sbb
clc
mov
ret
jg
ret
xor
sbb
stos
xchg
jmp
in
and
add
in
sbb
push
in
insl
popa
adc
lods
js
push
sub
movsb
ss
fisttpl
pop
in
mov
pop
icebp
push
call
outsb
jmp
mov
das
rorb
hlt
fsubr
loope
ret
fistpll
bswap
and
lock
movsl
mov
mov
lock
rcrl
int
mov
xchg
negb
sub
cmpsl
cmp
sbb
push
ret
aad
cmp
das
fistpll
pop
add
enter
xor
clc
pop
hlt
notb
sbb
push
aaa
mov
xchg
das
outsl
aad
js
dec
stos
enter
and
das
shrb
pop
ds
out
xchg
or
mov
in
loop
jno
dec
cmpsl
sbbl
lods
mov
mov
add
or
push
rcrl
enter
inc
push
xchg
pushf
mov
push
rcr
adc
mov
out
lret
xchg
inc
xchg
ljmp
test
inc
idiv
or
mov
clc
call
and
pop
inc
push
cltd
jo
stos
data16
pop
stos
aaa
aam
cmpsb
movsb
pop
rorl
das
repz
addr16
cwtl
addl
push
jp
sbb
cmc
stos
rorb
mov
mov
fst
insl
and
jge
or
repz
frstor
ja
fldl
pop
mov
adc
int
mov
in
pop
jbe
imul
cmp
popa
in
fwait
stos
aad
fcoms
fisttps
lock
add
aas
psubw
mov
sbb
clc
out
cld
dec
xchg
in
jle
jp
je
dec
mov
push
aaa
hlt
in
repnz
outsl
push
xor
ljmp
out
xor
outsl
sarl
inc
fstpt
aas
mov
fwait
outsb
fidivrl
pop
jp
insl
sub
adc
sub
ljmp
ja
push
setge
popa
add
push
dec
inc
dec
xor
cs
dec
dec
mov
mov
sbb
addl
push
add
fs
adc
nop
push
add
add
lret
add
out
add
add
ja
loopne
add
or
je
jmp
sub
add
jne
add
add
outsb
or
jmp
imul
addb
cmp
mov
out
or
sbb
jmp
dec
jp
add
pop
xlat
std
add
or
outsl
popa
dec
insb
adc
mov
push
push
adc
inc
pop
jge
popf
pop
sbb
outsl
push
gs
das
aas
dec
add
jnp
rcll
push
outsb
pop
inc
roll
pop
mov
dec
lds
push
daa
jmp
pop
mov
imul
lahf
push
mov
insl
or
sub
jl
outsb
jnp
adc
jne
jns
fs
cmp
jb
push
push
outsl
pop
fistpl
bound
jae
jbe
popa
subl
add
insl
add
fucom
mov
pop
gs
xor
jne
xchg
jne
outsl
mov
add
mov
inc
out
imul
insl
pop
add
push
adc
addr16
fsts
mov
mov
push
out
sbb
inc
xor
out
jnp
xchg
jb
outsb
inc
lds
idivb
dec
mov
jne
xlat
dec
ret
xor
nop
jmp
aaa
push
mov
pop
arpl
daa
push
dec
and
data16
cmp
neg
add
lock
add
add
cmp
jnp
test
xchg
add
adc
push
ret
popa
mov
push
ret
jae
mov
sbb
imul
sbb
imul
pop
call
fnstsw
jecxz,pt
leave
daa
inc
insl
sub
and
sbb
sbb
inc
xchg
ret
push
imul
jbe
jns
cmp
adc
mov
jo
push
ficoml
sbb
inc
jle
scas
jmp
test
inc
sub
push
fs
sbb
addr16
push
into
xchg
xor
sbb
das
push
outsb
out
adc
jmp
scas
lahf
popa
push
push
imul
add
xor
popa
int
push
js
dec
jno
mov
inc
cmp
push
in
testl
out
aas
inc
add
adc
or
jbe
outsl
add
js
mov
and
lea
fbld
add
sbb
or
divl
add
lods
inc
jne
pop
bnd
add
cmp
or
pushf
imul
cmpl
add
cmp
dec
cmp
mov
inc
mov
test
xor
fwait
sub
jae
fldt
sub
xchg
push
push
fnstcw
add
loopne,pn
daa
addl
ja
adc
aam
inc
adc
arpl
pop
pop
sub
or
test
bound
fidivrs
mov
mov
xlat
ret
fs
outsb
cmp
testb
add
jmp
mov
imulb
fldcw
add
lock
add
scas
popa
pop
pop
fiaddl
adc
lock
xor
xlat
in
and
or
jle
or
mov
jne
mov
aaa
pop
adc
pop
push
mov
cmp
pop
sbb
add
add
xor
popf
push
popl
or
xor
cmpb
addl
rcl
daa
push
push
popl
add
adc
scas
pop
imul
sub
jae
pop
imul
sbb
ja
shrl
jmp
add
push
inc
add
add
and
jae
pop
pop
addl
xchg
ja
add
out
aas
lea
mov
push
jbe
xchg
mov
sub
mov
or
mov
jl
mov
sub
pop
or
repz
aaa
jg
mov
add
add
out
xor
pop
sbb
mov
push
sbb
and
sub
in
fstpl
ss
add
insb
jg
lcall
ret
test
or
cmp
jne
pop
test
dec
jnp
daa
pop
out
jl
pop
outsl
outsb
in
sub
out
pop
mov
loop
test
aaa
cmp
add
cmpb
add
mov
sub
jecxz
ja
loopne
jmp
addl
les
outsl
out
das
mov
adc
pop
dec
xor
sbb
je
jp
mov
ret
mov
push
scas
imul
cmp
inc
pop
and
jno
adc
xchg
jg
adc
jp
scas
js
pop
stos
das
sub
pop
cmp
addr16
jbe
aas
mov
pop
pop
or
pop
mov
mov
xor
push
stos
rcll
out
mov
aas
pusha
ss
and
xor
xlat
rorb
lods
xchg
xchg
sbb
mov
jne
mov
jnp
lock
xchg
push
jae
mov
jns
pop
adc
mov
mov
ds
je
add
aaa
push
inc
jbe
int
movsl
sub
mov
jge
pop
jl
shrl
das
mov
imul
inc
inc
sub
ja
ja
or
mov
sub
mov
addr16
xchg
jns
daa
out
sbb
call
addr16
aaa
in
and
jmp
mov
xchg
xor
add
sub
lcall
jg
pusha
outsb
loopne
adc
jecxz
push
cmpsb
scas
sub
repz
outsl
adc
xchg
je
pop
cmp
fldl
sub
xor
outsl
mov
jne
jb
lea
mov
jecxz
imull
mov
add
cmpb
popl
xor
lock
jno
mov
xchg
push
call
mov
sbb
jbe
xchg
fcmovb
xchg
ret
cwtl
cli
sbb
aaa
jmp
stc
mov
leave
stc
inc
and
imul
inc
arpl
xchg
cmc
clc
leave
lcall
cwtl
sbb
inc
ds
jecxz
inc
pop
jns
jo
hlt
push
mov
adc
add
inc
bound
and
inc
movsl
imul
push
daa
rcrl
insb
xor
add
pop
jo
mov
sbb
and
jnp
dec
lea
add
adcb
or
cmp
sarl
adc
out
or
jns
cmp
jb
mov
jae
inc
adc
dec
data16
gs
aaa
mov
dec
jmp
pop
mov
mov
or
adc
jbe
testl
ret
and
arpl
inc
sub
mov
popf
xor
out
lahf
sub
jmp
inc
in
push
or
xor
notl
test
nop
and
inc
jns
mov
dec
adc
or
es
jb
sti
mov
sbb
outsl
mov
sbb
inc
aaa
mov
out
fnstenv
loope
pop
and
shll
add
pop
inc
cwtl
icebp
bound
movsl
popa
mov
in
mov
mov
dec
stos
ret
adc
insb
jne
inc
jno
pop
out
ret
pushf
sbb
or
inc
ja
or
sub
adc
imul
lods
je
xor
add
jmp
mov
ficomps
popf
fstl
mov
mov
inc
pop
cmp
and
adc
jnp
pop
imul
and
jecxz
lods
inc
ljmp
dec
cwtl
lock
xor
stc
jno
add
int
xchg
push
sbb
loop
popa
adc
mov
aad
xchg
push
sbb
push
and
xchg
mov
and
leave
sbb
jnp
jno
insl
sub
sbb
sub
or
and
or
mov
popf
xchg
adc
imul
addr16
pop
adc
gs
sbb
es
fwait
jae
add
lock
ja
sbb
fldlg2
insl
movsl
sub
cmp
ret
test
inc
imul
sbb
cmp
sbb
mov
or
mov
test
movsb
dec
js
sbb
add
mov
inc
or
sbb
and
int3
cwtl
rcll
push
aas
gs
bound
out
sub
jecxz
sti
pop
or
outsl
mov
xor
add
outsl
wrmsr
jmp
push
test
pop
pop
aaa
jnp
jae
push
popa
inc
mov
inc
mov
add
push
idivl
addr16
sbb
in
sub
mov
inc
cmp
dec
js
jne
add
jp
cmpsl
int
bound
mov
pop
fisttps
xor
mov
es
jne
test
mov
outsl
mov
sub
cmp
pxor
push
repz
or
fwait
movsb
cmp
mov
ret
dec
pop
jge
dec
sub
jne
xlat
inc
call
xchg
push
fnstenv
sbb
test
jp
outsl
inc
push
inc
clc
or
jmp
jmp
dec
dec
push
aaa
dec
dec
std
sbb
aad
mov
fwait
lock
xchg
insl
testl
stc
and
aaa
adcl
or
jo
push
addr16
shll
inc
adc
jge
cmp
gs
mov
push
popf
aaa
push
jnp
xchg
mov
mov
push
push
mov
outsl
imul
fwait
nop
and
sbb
popf
inc
add
jne
sbb
jmp
out
fbstp
mov
push
mov
sbb
pop
nop
movsb
adc
outsw
idivb
lret
stos
fnstcw
int
and
negl
xchg
frstor
loope
mov
jns
sarl
lock
sbb
cmpsb
mov
fstl
ret
xchg
adc
xchg
in
js
pop
mov
in
pop
aaa
cmp
jbe
incl
dec
add
pop
mov
mov
sub
cmpsl
add
or
jg
adc
push
gs
je
dec
popa
outsb
fs
gs
jnp
inc
push
adc
fs
js
gs
imul
inc
imul
popa
jo
insb
insb
outsl
arpl
dec
popa
jae
inc
ss
out
jb
outsl
sbb
fs
imul
dec
push
push
aaa
divl
fs
jae
cmovae
insl
push
and
imul
push
arpl
dec
or
sbb
mov
insb
dec
jb
outsb
and
insb
inc
imul
dec
outsl
fs
cmpsb
pop
mov
sti
shrl
jne
dec
outsb
outsw
inc
iret
adc
inc
push
in
lds
gs
gs
mov
lds
lods
mov
push
sqrtps
popf
adc
jnp
sbb
push
and
imull
xor
popa
je
adc
adc
jns
rcrb
int
fidivl
mov
push
das
add
and
adc
mov
mov
sub
gs
arpl
imulb
insl
or
imul
std
lods
mov
sub
dec
bound
arpl
gs
mov
jb
jae
cmp
outsl
lock
fiadds
dec
outsl
jbe
test
push
xor
adc
inc
mov
fdivl
inc
push
pop
dec
jb
sub
pop
punpckhwd
or
jne
push
jae
jne
cmp
rcll
js
mov
adc
push
outsl
jns
xor
push
lods
insb
mov
jge
imul
cld
out
inc
out
mov
mov
js
or
cmpsl
or
popaw
jb
cmp
iret
push
inc
insl
lcall
data16
out
push
pop
arpl
negb
sbb
insl
sbb
mov
out
or
imul
or
jmp
cmpsb
das
insl
sbb
mov
or
push
pand
clc
je
data16
jo
arpl
fs
insb
mov
or
jo
ret
adc
jp
data16
xchg
sahf
hlt
adc
pop
sub
ret
sbb
insb
adc
fldl
outsl
sti
out
imul
jge
jae
push
dec
adc
sahf
scas
pop
sub
inc
lock
lea
dec
or
fnstcw
addr16
outsl
js
and
inc
fistl
mov
inc
push
je
mov
jge
push
insb
addr16
xor
inc
cmc
xor
mov
outsl
ja
jae
es
adcb
insb
lods
imul
dec
movsl
jo
pusha
ja
adc
cmp
inc
imul
mov
ss
jb
mov
addr16
in
in
dec
lods
test
and
fs
popf
push
arpl
outsb
icebp
inc
jne
jae
jnp
into
fiaddl
es
into
outsb
addr16
loopne
pop
aaa
loope
cli
test
xor
pop
test
sbb
jae
inc
arpl
mov
or
or
sub
jae
arpl
mov
mov
and
loope
xor
jecxz
push
mov
insl
push
fisubs
dec
addr16
sbb
or
and
or
and
shl
and
push
jo
es
add
dec
fs
mov
sub
inc
mov
mov
dec
insb
push
dec
ss
push
je
imul
in
imul
mov
mov
or
in
lret
fiadds
scas
cwtl
out
jnp
es
xor
push
pushf
cmc
mov
and
pinsrw
mov
mov
mov
lds
rorb
scas
testl
outsb
add
pop
cmp
xor
jns
and
fldl
or
jo
insl
addr16
pop
lahf
lret
inc
sti
jne
xchg
cmpsb
push
xlat
addb
hlt
movhps
gs
sidtl
add
cmp
mov
mov
scas
and
inc
or
cli
add
mov
cmp
adc
mov
mov
sub
pop
push
outsb
pop
pop
xchg
add
mov
mov
jbe
mov
std
fbld
dec
inc
mov
and
dec
adc
test
je,pn
xlat
addl
xchg
mov
les
and
jb
popf
xchg
mov
push
add
jae
xor
sbb
ficoml
sbb
dec
mov
add
dec
mov
xchg
data16
sub
fsubs
add
add
inc
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
