jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
add
pop
ljmp
dec
or
pop
add
add
add
or
add
push
add
dec
add
add
pop
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
test
add
add
add
add
add
add
add
nop
add
arpl
imul
add
add
xor
adc
or
dec
add
and
or
dec
add
and
xor
aaa
add
add
add
add
add
add
add
add
add
add
or
or
jo
cmp
xor
pop
or
add
add
add
xor
sbb
xor
cmp
cltd
add
add
add
jg
and
xor
aaa
add
add
xor
or
pop
add
pusha
add
add
outsb
add
add
mov
or
das
add
add
add
add
jmp
add
add
add
add
add
add
adc
push
add
add
popf
add
add
add
add
add
inc
add
add
add
add
jno
add
xor
repz
add
add
sbb
loop
xor
dec
add
add
add
movsb
add
dec
add
add
imul
add
inc
add
add
add
sbb
pusha
add
adc
inc
add
add
add
add
fildl
das
add
add
add
add
add
add
add
add
or
add
imul
add
add
sbb
add
add
add
add
add
pop
add
add
and
xchg
add
mov
xor
aad
adc
lldt
add
add
add
jo
mov
add
add
add
xor
mov
pop
or
dec
add
add
pusha
add
add
add
add
sbb
xor
xor
and
add
jecxz
popa
add
add
pop
add
add
add
insl
add
aaa
add
dec
add
mov
add
add
xor
inc
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
xor
mov
test
add
add
add
add
inc
add
cwtl
add
add
add
add
nop
add
or
add
add
or
add
dec
add
and
je
dec
add
imul
add
pop
add
add
add
imul
add
cmp
inc
add
add
aas
add
outsb
add
faddl
add
pop
or
cmpsl
add
pop
add
insl
add
add
imul
add
movsb
add
add
dec
add
add
and
outsb
add
add
add
add
add
dec
add
testb
nop
add
add
add
add
das
add
add
imul
add
add
inc
add
add
add
add
push
add
add
add
add
add
dec
add
pop
or
add
xor
add
nop
add
cmp
add
add
pop
or
add
add
sldt
imul
cmp
fiadds
add
add
cld
add
ja
sbb
and
sub
outsl
add
add
add
add
add
pusha
add
insl
add
add
add
pop
add
movb
add
jmp
out
adc
jmp
pop
inc
xor
dec
lret
and
or
outsb
inc
out
neg
mov
shl
sub
or
add
cmc
rcrl
scas
in
imul
cltd
mov
test
hlt
orl
insl
ss
repnz
fsub
mov
jge
ja
inc
rorl
mov
scas
xorl
in
and
mov
adc
mov
push
cmp
movsl
aas
lods
jns
fsubrl
cld
push
test
pop
rcl
xchg
daa
xchg
ss
in
testl
cmp
imul
or
pop
lret
xchg
repz
jnp
xchg
add
inc
aaa
or
sahf
cmpl
fistpll
shrl
test
push
pop
adc
mov
repnz
gs
mov
test
mov
inc
mov
outsb
jb
push
pop
or
js
loopne
push
or
or
xorb
call
ret
fldenv
cli
mov
jne
inc
pop
cmpsl
cmp
dec
data16
push
xchg
push
mov
pop
lahf
mov
pop
outsl
je
mov
sub
fbstp
push
push
push
xchg
ret
loopne
cmp
mov
scas
cmp
into
adc
sub
pop
movsl
out
mov
enter
cli
jmp
cmpsl
jb
test
xor
repz
lret
cmp
aaa
add
or
xchg
jns
or
push
ja
rcl
jg
jo
ret
nop
adc
iret
add
lods
mov
xor
mov
mov
mov
mov
pop
out
testl
outsb
push
xchg
and
popa
dec
xchg
or
pushf
mov
mov
bound
sub
jae
cmpsl
les
fmull
nop
decl
sbb
push
in
ret
ret
push
aaa
jae
orb
stos
cmpsl
jg
fdivp
aaa
and
and
and
adc
bndldx
repnz
fistpl
test
sbb
xchg
adc
mov
imulb
cmp
ja
iret
dec
sti
cmpsl
out
jbe
dec
shrb
cli
call
loope
loopw
mov
in
shrb
cmpsl
xchg
xchg
fstps
test
aam
mov
xchg
mov
jmp
dec
test
ss
movsb
sahf
test
push
ret
mov
and
jns
jno
xor
js
decl
add
dec
adc
jbe
push
out
enter
mov
adc
pop
inc
dec
les
inc
fadds
add
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
inc
call
fbstp
mov
mov
and
lahf
dec
repz
out
xchg
sbb
cmpsl
movzwl
fbstp
pop
mov
inc
outsl
lret
jg
cs
imull
aas
xchg
xcrypt-ctr
cmpsl
pop
mov
pop
or
outsl
mov
fisttps
xchg
aas
lahf
sub
daa
sahf
cmp
pop
aad
fadds
add
push
les
adc
shl
push
aas
sbb
pop
sbb
add
fisttpll
pop
daa
xorl
enter
sub
mov
or
out
leave
xorps
dec
adc
mov
sub
cmp
adc
push
jg
pop
lea
aas
and
cmpsl
and
xor
xchg
test
cwtl
xor
pop
mov
mov
daa
jg
lret
sbb
adc
pop
pop
cmpsl
adc
repnz
cwtl
inc
add
aaa
bound
adc
dec
cmp
sub
sbb
test
xchg
hlt
adc
adc
and
push
lea
jo
stos
addr16
scas
jnp
sbb
ja
movsl
sbb
mov
test
ja
pop
pop
daa
cmp
test
outsl
out
addr16
xor
mov
inc
lea
rolb
push
outsl
test
xlat
sub
cmp
enterw
cs
pop
ficompl
push
lret
mov
mov
andb
push
notl
data16
inc
xchg
push
scas
add
daa
lahf
aaa
outsl
jg
dec
out
imull
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
inc
call
fbstp
pop
mov
aaa
outsl
jg
dec
out
imull
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
inc
pop
inc
or
mov
aam
rorb
dec
inc
cld
cwtl
out
loope
ds
inc
imul
mov
jg
iret
xchg
jecxz
ret
sarb
int
sub
in
lods
hlt
jmp
push
fadds
ja
add
xor
xchg
adc
pushf
cmp
cld
jg
cwtl
cld
aad
bound
gs
or
into
mov
in
jge
push
jg
das
jae
in
fidivl
pop
or
push
aad
jg
jg
xchg
insb
dec
jmp
int
sti
push
aaa
pop
push
push
push
aam
xchg
test
cwtl
loope
scas
sti
jns
jb
cltd
mov
xor
daa
jmp
mov
idivl
jecxz
es
fidivrl
mov
cmc
add
xchg
insb
dec
pop
pop
pushf
aas
imul
add
dec
push
or
mov
inc
mov
std
out
fisttps
xchg
xor
shr
dec
mov
ss
imul
dec
jge
fs
mov
inc
loope
sub
pushf
mov
stc
push
pop
aad
mov
mov
cmc
mov
or
lods
nop
xor
cwtl
lods
aam
mov
leave
loope
mov
sbb
test
aad
adcl
mov
jo
icebp
inc
lea
inc
popa
in
jp
inc
jp
repnz
dec
js
add
fmull
fs
xchg
into
filds
cmp
fs
cld
jns
cmpsl
dec
jg
enter
mov
repz
mov
arpl
stos
aaa
aam
xchg
cmpl
cmp
adc
shrl
sbb
sbb
mov
push
mov
xchg
xchg
mov
mov
loope
in
sbb
push
push
pop
shll
adc
sbb
add
les
cmovs
aas
fcomip
call
loopne
sbb
inc
test
frstor
int
int
adc
push
mov
xor
cmp
imul
popf
call
sbb
dec
ret
out
dec
scas
ror
out
test
aaa
add
addr16
jge
fsubrs
sbbl
aas
rorl
rcrb
mov
mov
aaa
lcall
cmp
loope
pop
fs
push
cs
shrb
popa
add
cmp
fildl
in
pushf
adc
sbb
jnp
ja
push
popf
aaa
dec
cmc
test
pop
adc
fisttpll
jecxz
movsl
leave
out
sti
jne
mov
and
adc
lcall
sbb
pusha
dec
loop
aam
xchg
es
mov
mov
loop
sub
movsl
cld
into
js
mov
mov
out
hlt
xlat
stos
mov
sbb
mov
into
ret
addr16
neg
rcrb
rcrb
add
dec
mov
ljmp
mov
lahf
leave
out
mov
movsl
loop
add
incb
cli
ja
xchg
scas
adc
dec
mov
sbb
pop
mov
dec
leave
mov
mov
daa
mov
hlt
xchg
sub
rclb
sub
es
cmp
fimull
sbb
out
pushf
inc
sbb
loopne
je
cmp
test
mov
in
xchg
mov
push
pop
jmp
pop
xor
outsl
jne
std
movsl
and
je
idivl
into
ret
jbe
add
ljmp
inc
inc
fsubs
dec
mov
ficompl
and
sbb
daa
dec
xor
daa
sbb
lret
lods
xchg
sbbl
pop
jl
outsl
rorl
fstpt
pop
push
xchg
jp
adc
jbe
divl
mov
iret
in
repz
pop
int3
inc
fcoml
movsb
add
sti
jno
push
js
xchg
outsb
inc
outsb
pop
inc
xchg
push
xlat
mov
jle
ret
rcr
add
loop
out
cli
das
sahf
fwait
mov
leave
dec
mov
enter
cs
jg
ss
pushw
icebp
into
xor
sbbl
insl
add
in
jge
sub
mov
jo
or
in
jae
aad
in
out
fs
loopne
test
mov
in
cltd
dec
cld
cmp
xchg
insl
fmull
xchg
leave
or
jns
dec
dec
mov
pop
nop
sub
test
ret
cwtl
xorl
stos
scas
push
push
mov
cmc
loop
jne
pop
fimull
fwait
sub
fcoms
lcall
fmuls
std
iret
test
inc
inc
inc
int3
clc
and
add
gs
imulb
dec
mov
inc
stc
push
negb
xchg
mov
push
int
js
insb
and
insl
loop
mov
xchg
bound
out
jbe
pushf
outsb
mov
pushf
test
cmpsb
call
arpl
inc
cltd
cmc
in
pop
push
cmc
pop
xlat
pop
into
in
test
cld
rcrl
lahf
or
fcompl
add
push
mov
lret
mull
sbb
test
xchg
push
test
mov
addr16
popa
pop
mov
and
inc
jl
fsts
setne
sub
jb
dec
mov
mov
push
rcrl
sub
pop
xchg
out
sbbl
xchg
and
out
dec
and
out
mov
enter
mov
and
sbb
lds
or
ficoms
out
inc
out
sub
mov
xor
lods
ljmp
jno
mov
in
out
cmp
adc
loope
push
cmp
dec
push
push
repnz
scas
nop
xlat
int3
xchg
cmp
or
mov
inc
sub
leave
or
outsb
push
mov
sub
loope
cmp
push
test
adc
ror
sbb
pushf
stos
add
andb
adc
cmp
add
dec
call
dec
cmp
stos
lret
or
hlt
shrb
repz
cmp
ss
add
mov
adc
clc
mov
stc
dec
lock
jl
outsb
xor
sbb
xlat
add
lods
inc
int3
movsb
orl
lret
sarb
call
mov
inc
add
xor
sbb
pop
dec
or
in
xchg
daa
jno
pop
inc
cmp
sub
cmpsb
and
aad
dec
test
imul
adc
fisubrs
loopne
add
lds
mov
sbb
adc
lret
push
stos
ds
nop
mov
xchg
sub
xor
cli
sub
or
test
push
decl
mov
dec
jmp
xchg
lcall
push
aad
pusha
sahf
pop
and
sarl
jae
cwtl
negl
or
xchg
cmp
xor
pop
jnp
mov
lahf
xor
rolb
cli
sub
dec
test
mov
and
push
lret
and
lret
clc
add
jmp
cli
jge
inc
mov
cmp
xor
repz
andb
sbb
fwait
inc
and
int
mov
cmpsb
stc
popf
pop
or
mov
out
jns
dec
outsb
nop
adc
xchg
aaa
repz
push
stos
test
aam
addl
ficoms
pop
inc
xorl
mov
je
and
fcompl
mov
xchg
notl
rorb
sbb
dec
popf
outsl
andb
mov
push
subb
pop
mov
sbb
aaa
sub
std
data16
fsts
addb
repnz
shlb
cltd
in
pop
nop
js
jge
cmc
cld
loopne
pushf
scas
cld
jmp
out
xchg
arpl
xchg
fiadds
or
adc
leave
dec
push
sub
lret
or
out
insb
adc
mov
sub
fiadds
mov
inc
mov
xchg
out
sbb
nop
icebp
into
jnp
cmp
or
pop
pop
std
lock
add
xlat
cmpsb
xchg
int3
stos
mov
insb
xor
jae
out
bnd
pushf
outsb
in
in
enter
fisubs
sub
mov
mov
dec
jl
inc
adc
push
sbbb
push
stos
cmp
and
xor
dec
cmp
mov
dec
xchg
shrb
cmp
fcomps
and
push
and
je
loop
dec
mov
xchg
xchg
outsl
lods
cmp
sti
fwait
movsb
out
adc
ss
mov
and
mov
push
lcall
adc
jp
pop
add
mov
pop
out
xchg
jb
andl
sbbl
add
pop
mov
or
mov
mov
loop
lea
imulb
ja
mov
or
lods
jnp
ss
ret
popf
aaa
xchg
imul
movsl
mov
add
xchg
xchg
jle
xchg
out
mov
inc
hlt
xor
adc
movb
push
or
fidivrl
mov
or
jg
icebp
cmpl
js
inc
aam
leave
sbb
sub
lock
sub
dec
inc
push
and
jmp
xor
int3
xor
jl
xchg
and
or
mov
and
mov
call
mov
fstl
pop
hlt
mov
fcoml
inc
adc
dec
xchg
sbb
xor
and
mulb
push
sbb
imul
xlat
xchg
stos
sub
push
fsubp
addl
ficompl
sbb
movsl
adc
test
nop
sbb
pushf
pop
fisubrs
adc
lods
fcompl
movsl
jmp
ja
mov
jg
scas
xor
pop
imul
mov
inc
pop
or
mov
and
loope
xor
or
and
popa
arpl
loop
sub
shlb
mov
jp
pushf
adc
dec
mov
fs
and
mov
push
data16
test
mov
cld
and
push
stos
cs
jmp
pop
addr16
out
sub
jae
and
cwtl
rcll
movsl
xchg
popf
pop
aas
int
out
idivb
hlt
outsl
out
leave
hlt
push
loopne
pusha
popf
fcompl
cmpsl
stos
inc
sahf
pop
dec
test
jle
fwait
arpl
xlat
bound
sub
xor
push
faddl
or
xchg
gs
subl
push
sub
mov
lods
cmp
mov
vpcmpeqd
inc
push
daa
inc
sub
xchg
add
addr16
sahf
ja
or
sub
rol
into
xchg
sub
scas
fs
je
and
shl
push
andb
cmp
stos
out
es
and
into
dec
sbb
dec
in
loop
sbb
xchg
cmc
arpl
movsb
call
jle
test
add
outsb
insb
cmp
mov
out
not
sub
mov
push
sbbb
popf
add
lret
and
jno
xchg
imul
inc
and
in
jl
mov
mov
stos
or
ret
addr16
mov
jbe
sbb
xchg
and
push
int
loope
stos
cmpsl
push
subb
sub
add
jmp
sub
sbb
pop
bnd
jmp
fs
sbb
imul
js
scas
neg
loop
sub
aaa
into
scas
fcompl
aaa
jg
add
add
lock
fcompl
in
dec
lret
add
inc
mov
in
mov
repz
inc
push
out
in
pop
loop
pop
movsb
add
push
js
and
out
call
push
cltd
dec
fstp
and
and
leave
adc
mov
mov
mov
push
loopne
ss
and
push
bound
xor
jnp
push
mov
aad
dec
lret
xchg
add
pusha
cmc
mov
pusha
shrl
outsb
mov
lds
enter
and
pop
xor
adc
scas
jg
pop
pop
test
aas
adcl
fs
aad
test
lret
lret
sbb
cli
mov
push
test
push
stos
sub
les
fidivrl
hlt
out
das
ss
andb
inc
popf
pop
mov
sub
or
nop
or
vpunpckhdq
insl
aas
aaa
mov
sub
and
into
mov
push
test
sub
pop
cltd
lds
fiadds
xor
jg
dec
cmp
shll
in
ret
loop
icebp
aas
mov
cltd
pop
shlb
lea
sub
popf
xor
call
stos
add
dec
cli
sahf
jle
nop
pushl
ljmp
cmp
std
xchg
and
inc
jp
add
xchg
notl
xchg
out
cmp
or
ja
in
test
insl
dec
add
into
outsl
lcall
mov
lods
outsl
xchg
xchg
adc
pop
movsb
scas
insb
adc
cmp
mov
int
and
icebp
frstor
dec
ficoml
xor
mov
fisubs
notb
loopne
out
cs
lret
movsl
aad
mov
add
push
xchg
sbb
push
iret
out
shr
mov
mov
dec
into
fbld
aad
sbb
xchg
ds
mov
lods
fimull
jl
ss
jae
dec
outsl
xor
pushf
xchg
xchg
inc
addr16
jmp
xor
pop
inc
les
cwtl
cmp
mov
sbb
lds
mov
mov
jnp
adc
pop
dec
shr
into
sarl
in
jecxz
in
movsl
rorl
rcr
pop
pop
les
xor
dec
mov
cld
adc
fisubrl
fsubrs
jne
test
sub
test
out
cmp
addb
mov
out
lods
cmpsl
xchg
jg
dec
jmp
ret
orb
lods
mull
mov
jecxz
and
aas
fs
mov
fsubr
pusha
test
push
int
test
push
push
test
inc
mov
popa
jmp
mov
mov
push
mov
cli
add
scas
xlat
sbb
mov
cmpl
cmp
fnstenv
mov
push
push
iret
xorl
lods
imul
les
in
sarl
inc
push
cmp
and
xchg
aad
test
out
loope
sub
lock
or
inc
adc
outsb
mov
sbb
xor
stos
or
in
fwait
inc
push
ss
popf
or
call
dec
aad
ret
ljmp
jecxz
pop
xchg
shlb
or
cld
loop
push
sub
push
aam
stos
adc
cs
push
icebp
test
pop
fcom
lret
das
or
xor
scas
add
cmpsb
dec
lock
imul
movsl
sbb
std
popa
test
xchg
mov
mov
inc
pushf
stc
mov
mov
outsb
lods
mov
insl
out
mov
cmpsb
xchg
and
jne
js
loopne
dec
into
sbb
jle
iret
mov
pop
sahf
lcall
addr16
jbe
xchg
shlb
popf
adc
dec
add
xchg
xchg
cwtl
lret
movsl
fisttpll
or
nop
xchg
lods
loopne
mov
xlat
mov
ja
pop
dec
mov
or
ljmp
test
pop
add
punpckhdq
sub
shrl
jo
jb
iret
push
nop
in
or
mov
push
cld
pop
jmp
call
xchg
dec
scas
leave
xor
movsb
sti
inc
fstpt
movsl
adc
push
bound
insb
jne
fwait
lahf
jmp
jg
push
das
mov
loope
pushf
dec
inc
and
xlat
push
aas
xchg
push
je
movsl
pop
sbb
mov
enter
cmc
mov
fisubs
js
jbe
cmp
mov
cmp
nop
popa
dec
pop
cmp
adc
push
jbe
lcall
and
pop
jg
rcr
fisttpll
add
stos
push
jnp
in
mov
pop
dec
je
cmp
incb
test
int3
pop
xor
xor
push
inc
fs
nop
faddp
aas
cld
imul
je
std
add
add
or
and
cmp
add
jge
pop
adc
pop
mov
dec
outsl
adc
enter
inc
lcall
shl
cmpsb
mov
push
xchg
bound
and
decb
mov
xchg
ret
out
cmp
xchg
or
int3
cmp
clc
xor
test
fsubrl
movsb
inc
mov
cmpsb
repz
pop
cmpsb
cmp
insb
cltd
push
dec
ret
std
icebp
push
out
fsubl
cmp
cli
cmc
sti
jnp
adc
inc
push
mov
pop
lcall
add
call
xor
fcom
fsubr
or
push
jle
ds
push
mov
and
mov
out
dec
out
ja
ror
lock
adc
dec
mov
sub
cmp
push
add
orb
push
add
dec
pop
jo
icebp
es
lods
jne
js
lret
cmp
repnz
jp
cmp
pop
cltd
cmp
lds
sub
jne
jp
jle
movsb
mov
and
in
out
jb
jle
mov
loop
ss
or
xorb
cmp
fistpll
adc
cwtl
xchg
scas
negb
pop
jnp
mov
movsb
dec
fdivp
add
arpl
inc
adc
loope
testb
dec
test
lock
cmp
ds
xchg
repnz
dec
out
mov
adc
enter
and
mov
mov
movsl
xchg
scas
shl
movsb
jmp
je
daa
insl
scas
push
dec
stos
std
xor
imul
xchg
rolb
and
outsl
xchg
jb
jecxz
xchg
ret
pusha
fs
lods
in
mov
xchg
inc
sbb
xor
test
xchg
or
pop
movsl
adc
std
pop
xor
hlt
outsb
xchg
test
int3
subl
jp
pop
clc
arpl
adc
dec
cli
fisttpll
shrl
loope
loope
jnp
sub
sbb
fisubl
imul
rcrl
dec
xchg
mov
stos
add
push
dec
stos
fdivr
cmp
pop
xchg
out
dec
xchg
cmp
adc
dec
in
sub
leave
pop
sbb
jb
jecxz
jmp
jns
or
xchg
fisubs
xchg
insb
mov
and
jns
mov
stc
cld
ja
xchg
pop
in
clc
enter
enter
pop
cmp
xchg
test
fcomps
das
xchg
rolb
mov
test
cld
and
shlb
je
fs
lahf
pop
popf
push
adcb
push
mov
ficoms
mov
push
xor
adc
xchg
cli
adc
popf
mov
rcll
push
in
mov
push
lock
mov
sub
nop
pop
sbb
mov
jmp
add
mov
repnz
ss
pop
fwait
lret
dec
rorb
pop
sbb
adc
lea
popf
pusha
adc
jo
je
mov
jne
cld
jae
sbb
popa
or
sbb
dec
xor
faddl
lods
adc
jp
loopne
and
mov
jae
xlat
mov
xor
scas
xchg
icebp
ret
jl
xchg
pop
sub
mov
inc
jmp
mov
mov
les
push
mov
ret
mov
cmc
sbb
in
mov
js
int
into
push
adc
div
inc
mov
int3
ret
mov
insb
mov
push
sbb
and
add
xchg
push
ja
xchg
cmp
inc
mov
cwtl
ret
cmp
ret
and
roll
cmp
adc
jno
jecxz
jg
daa
xor
into
subb
mov
add
rorw
out
push
inc
loope
loop
addr16
xor
out
or
xlat
xor
jae
dec
xor
push
out
push
mov
in
pop
jns
andl
testb
in
repz
lcall
cmp
mov
fildll
out
sarb
andb
pop
dec
cmpsl
cmpsb
jno
bound
jbe
or
push
xchg
sub
out
push
dec
cmp
mov
ret
in
jb
dec
xchg
sub
icebp
push
push
icebp
or
fldl
pop
in
cwtl
ds
sub
mov
xor
push
push
jbe
fcmovbe
inc
sbb
xor
sub
loope
sti
das
xor
xchg
sbb
jmp
add
xchg
ds
jns
inc
mov
adc
cmp
pop
mov
lock
popa
jnp
pop
lods
incb
pushf
xchg
je
outsl
add
jg
dec
push
imul
mov
iret
lods
lods
jge
call
inc
fwait
test
cmp
mov
xchg
push
jmp
adc
mov
adc
test
and
cmp
xchg
jae
shlb
js
sbb
mov
mov
pop
jns
cltd
pop
inc
jl
xor
mov
push
add
jno
out
mov
pop
shrl
inc
inc
push
out
daa
mov
xchg
lcall
push
sahf
cltd
sbb
sbb
test
call
inc
sarl
cmp
enter
and
inc
loopne
adc
test
push
inc
mov
outsb
xchg
mov
sbb
cld
inc
dec
dec
sbb
cmc
mov
lods
sbb
adc
fs
cmp
in
mov
jno
xchg
adc
or
lret
rcl
testb
scas
inc
or
cmp
sub
jb
pop
mov
sti
pop
push
mov
ja
pop
mov
aaa
outsl
jg
dec
out
imull
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
inc
call
fbstp
pop
mov
aaa
outsl
jg
dec
out
imull
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
inc
iret
push
scas
fbstp
pop
mov
aaa
outsl
jg
mov
xchg
xchg
bt
mov
inc
mov
ja
pop
scas
pop
daa
pop
imull
cmpb
pop
sbbb
call
aam
in
hlt
testl
stc
push
pop
fs
add
adc
and
xor
aam
in
hlt
testl
push
push
fs
add
adc
aaa
aam
in
hlt
testl
ja
adc
adc
add
addr16
addr16
pop
inc
mov
mov
in
popf
xchg
mov
aas
mov
les
outsb
cmp
cmp
mov
repz
sub
sbb
xchg
sbb
pop
cmp
lcall
dec
jb
gs
mov
xor
lret
outsb
jl
je
inc
inc
push
je
icebp
mov
stos
xor
les
ret
repz
std
scas
mov
mov
fldcw
push
pop
adc
fcoml
aaa
xchg
pop
push
sub
or
jnp
mov
pop
idivb
mov
mov
pushl
push
xchg
pop
fisttpl
xlat
clc
sahf
sub
ficomps
ljmp
sub
adc
adc
mov
push
inc
inc
jecxz
ss
xlat
in
hlt
testl
push
push
fs
add
adc
and
xor
mov
cmpsb
mov
loope
sti
jecxz
ret
xor
xor
xor
pop
xorb
inc
push
inc
push
mov
mov
xchg
loope
loope
icebp
cltd
and
and
repz
dec
inc
pop
arpl
adcb
movsb
cmpsl
mov
inc
inc
push
push
fs
add
adc
and
xor
aam
in
hlt
testl
push
push
fs
add
adc
and
xor
mov
jns
mov
push
jb
pop
inc
push
or
jmp
and
movsb
test
flds
add
daa
xor
loope
loope
fninit
mov
ret
dec
xchg
stos
ret
pop
push
sbb
fiaddl
cld
or
push
ja
xchg
adc
add
outsl
out
jecxz
or
popf
cmp
xor
test
adc
shl
or
ljmp
in
cmp
aaa
xchg
sti
femms
mov
lahf
pop
enter
xor
push
add
sub
adc
pushf
add
test
jns
push
sbb
mov
sub
and
adc
jb
cs
jo
pop
lock
adc
adc
sub
add
fs
and
fs
stos
faddl
stc
lods
xor
mov
stos
scas
mov
test
mov
adc
pop
mov
scas
mov
mov
sbb
add
nop
and
mov
mov
adc
nop
arpl
fcmovb
rcr
xor
notl
jne
pop
mov
xchg
minps
cmp
sub
sub
sbb
jge
jae
add
mov
int3
xor
mov
jp
movl
adc
shll
cmp
bound
add
cmp
adc
cwtl
adcl
sahf
repz
and
sbb
mov
mov
push
cwtl
adc
pusha
lods
fsubs
xor
fdivr
xor
movsb
ja
mov
jns
cmp
rcr
xor
loope
sub
sbb
jbe
push
fs
loope
imul
pusha
adc
dec
fsubs
mov
or
repnz
xor
cmp
adc
sbb
lretw
lods
push
pop
aad
call
testb
lahf
inc
push
rol
pop
es
jae
std
add
mov
into
sarl
rorb
push
push
adc
xchg
rorl
push
outsl
dec
jg
mov
in
dec
cmpl
nop
cld
xchg
or
pop
imul
jecxz
js
dec
xor
mov
bound
hlt
arpl
mov
testb
repz
jnp
scas
js
push
int3
jne
repz
insb
dec
shr
pop
dec
out
stc
repz
and
hlt
inc
aas
scas
sbb
pop
lods
hlt
sbbl
cmp
inc
fldenv
subl
adc
cwtl
in
pop
xor
add
mov
pop
lods
cltd
adc
cmp
dec
ljmp
fimuls
mov
cmp
fwait
cmpsl
mov
xchg
sub
mov
test
aam
push
icebp
or
not
fidivl
repnz
mov
jle
sbb
fmuls
dec
mov
mov
testl
gs
xchg
rol
xor
lret
jns
or
ret
ficoml
mov
xchg
inc
inc
or
pop
repnz
push
mov
hlt
in
scas
fsubl
push
mov
adc
out
pop
scas
jge
int
adc
inc
fldcw
dec
mov
hlt
xor
test
xor
or
jmp
cmpsl
inc
imull
das
mov
inc
mov
leave
xor
cmpsb
scas
into
mov
mov
mov
xchg
push
add
in
sbb
sbb
fs
rcll
rolb
inc
mov
addl
inc
cmpsb
jno
outsb
pop
jbe
mov
cmp
sub
dec
cmp
popf
xor
dec
mov
or
inc
dec
popa
fcoml
sarb
les
jbe
iret
cli
int3
mov
jp
and
adc
lods
mov
imul
inc
stos
adc
mov
inc
jns
jnp
xor
rcl
and
xor
sahf
cmp
repnz
shrb
ret
or
repnz
sarb
push
adc
dec
loop
outsl
xchg
dec
jl
es
lcall
sbb
les
add
andb
mov
sub
dec
xlat
test
adc
adc
inc
xor
xchg
pop
mov
fimuls
mov
imul
dec
push
js
rol
cwtl
pop
add
arpl
repz
jecxz
inc
dec
cmp
lds
add
add
xor
sub
adc
aas
dec
pop
jl
aas
lods
mov
jl
stos
mov
mov
popa
push
daa
pop
jge
jno
mov
js
or
xlat
mov
pop
xor
lea
sub
cli
out
ss
mov
mov
fs
stos
or
ret
stos
clc
pop
fistps
dec
sub
daa
bound
dec
jns
push
cmpsb
xor
adc
outsb
inc
mov
stos
loope
jle
xchg
lods
lcall
mov
xchg
out
in
in
flds
out
rcll
inc
lock
iret
push
or
xlat
jne
dec
pop
add
and
cmp
pushf
fcmovbe
or
not
push
bound
nop
rclb
adc
movsl
and
pop
push
popf
test
or
sbb
push
aas
adc
pusha
pushw
xchg
inc
xchg
mov
and
fisubrs
and
cmp
and
loopne
mov
and
mov
in
in
je
rolb
dec
fcomps
dec
dec
or
sub
cwtl
pop
aaa
mov
jp
nop
jae
in
in
sub
or
xchg
mov
xchg
inc
fbld
mov
gs
scas
icebp
jbe
fisttpll
cmp
enter
adc
dec
fimuls
jmp
pop
mov
xor
pop
ffreep
xchg
add
sub
scas
push
aam
and
adcl
push
jecxz
xchg
cli
mov
mov
xor
adc
pusha
jbe
xor
and
les
ljmp
in
and
testb
xor
mov
jle
in
push
int3
es
or
mov
imulb
jge
add
jmp
sarl
pop
rorb
inc
les
stos
cmp
test
mov
cltd
mov
pop
sub
in
ja
cmpsb
xchg
imul
pop
out
notb
pop
inc
or
add
std
iret
jecxz
cmpsl
imul
jno
shrb
xchg
push
les
fiaddl
enter
sbb
pop
mov
hlt
xor
or
scas
fstpt
sbb
lahf
repnz
inc
add
fldl
cmp
jns
push
add
cmp
rcrb
out
push
inc
inc
mov
sbb
pop
mov
sbb
jbe
into
xchg
adc
imulb
je
movsl
jne
imulb
clc
lret
xchg
jno
jns
adc
imul
lret
iret
jns
inc
ss
lret
mov
ja
add
add
xchg
mov
xchg
mov
imul
jnp
sti
cmp
adc
ds
mov
mulb
lods
fucomip
arpl
notb
insb
or
adc
popa
das
add
int
into
mov
out
push
inc
pop
scas
loopne
adc
movsb
or
dec
sub
cmp
xchg
mov
jo
jl
out
leave
aaa
sti
es
repnz
rcrl
rcl
adc
xor
push
aad
sub
and
sub
adc
ret
out
mov
inc
or
mov
cmp
and
push
lahf
lret
cmp
dec
movsl
push
hlt
lods
push
inc
lods
cmpsl
fistl
pop
xor
push
mov
out
das
pop
andl
push
or
adc
out
mov
mov
mov
mov
loope
dec
or
pop
flds
cld
mov
mov
bound
xchg
subb
jmp
jae
lahf
cltd
or
xlat
adc
repz
jmp
in
xchg
push
mov
xchg
sbb
inc
mov
dec
aad
inc
sub
cld
mov
movb
push
je
lods
ds
lods
adc
mov
pop
aad
ficoms
jmp
das
pushf
in
loope
and
pushf
sbb
adc
mov
leave
insl
pop
in
add
sub
mov
ret
adc
pop
pop
sub
in
int
xchg
and
adc
ljmp
mov
pop
mov
pop
pop
mov
and
gs
fisubrl
push
add
push
cmp
and
fwait
sahf
push
adc
sbb
xchg
lods
adc
jp
rcrb
adc
hlt
push
iret
inc
push
jg
cmp
insl
push
and
aas
jl
jle
and
pop
ds
lds
lock
sub
testb
jbe
aam
ret
jmp
xorb
sub
add
les
pop
test
add
push
cli
pop
arpl
orl
or
sbb
pop
add
sbb
mov
shr
sbb
mov
test
sbb
gs
xchg
mov
mov
je
cmc
jmp
xchg
xchg
jge
cmp
shll
bound
cmpsb
das
sub
dec
sbb
arpl
fsubs
mov
fstl
mov
outsl
leave
out
sahf
push
faddl
movsb
add
pusha
and
adcb
cmp
push
xchg
idiv
jmp
dec
popf
mov
push
sbb
add
jno
sub
push
adc
adc
shlb
sahf
cmpl
stos
out
mov
shrl
bound
cmpsl
mov
pop
add
stos
dec
push
aas
sub
dec
mov
test
and
ja
xor
outsl
cmp
in
dec
inc
inc
out
mov
lahf
jnp
movsb
xchg
sub
ret
add
loope
loope
mov
outsl
out
sbb
aad
fstl
add
insl
cmp
imul
cmpsb
les
int
sub
addl
jno
jne
adc
xchg
bound
mov
repz
or
lods
das
mov
pop
das
pop
and
mov
inc
subl
lds
mov
jo
mov
sbb
mov
shrl
pop
jno
std
std
push
jae
xchg
movsb
xchg
fcmovne
fistl
sahf
push
xchg
jne
pop
mov
dec
cmc
dec
pop
mov
in
jmp
aaa
jns
inc
cmp
and
inc
lret
adc
push
push
mov
push
loopne
xor
push
shll
mov
pop
mov
push
popa
cmp
mov
movsb
mov
loop
imul
xchg
clc
inc
push
imul
cmpsb
lods
push
fcoml
mov
xchg
lods
push
adc
scas
repnz
outsl
sbb
cs
mov
ja
xor
sbb
in
mov
pop
cmc
xlat
xchg
iret
int3
rcll
subl
loope
enterw
xchg
cmpsl
mov
fs
loopne
sar
mov
insb
adc
push
in
jge
sbb
mov
mov
movsb
mov
iret
pusha
cmp
aam
cmc
clc
push
ds
movsl
mov
cmp
mov
mov
aaa
xchg
jae
xchg
inc
inc
xor
push
and
das
hlt
push
callw
imull
icebp
or
pop
test
clc
xchg
push
ret
jmp
dec
push
js
xchg
lret
adc
mov
sbb
jns
cltd
movsb
mov
push
out
add
ja
cli
rorl
add
int
sbb
mov
add
test
push
fimull
push
sbb
xchg
lret
jmp
jnp
xor
data16
cltd
mov
mov
mov
pop
lea
fwait
push
ds
xlat
in
hlt
jb
mov
adc
adc
and
sbb
jecxz
mov
movsb
jecxz
out
push
inc
xor
nop
ds
pop
pop
mov
dec
ret
mov
adc
aaa
mov
mov
clc
jg
adc
and
sub
aad
mov
fidivrs
mov
nop
das
enter
addb
sbb
mov
sub
lods
push
or
push
jmp
int
or
pop
scas
cltd
dec
lcall
popa
ljmp
mov
out
mov
push
out
lods
and
add
or
mov
add
jmp
mov
fs
sub
ljmp
insl
loop
cmp
stc
mov
loop
mov
stos
push
mov
pop
mov
jp
and
fsubrl
shll
stos
sti
push
mov
daa
pop
out
mov
push
test
mov
jne
cmp
or
in
lods
mov
aad
insb
out
out
lea
test
repz
cli
jb
jle
cltd
cs
stc
les
push
and
imul
cmc
aam
cmp
mov
decb
and
mov
jg,pt
and
aaa
jns
add
inc
sbb
lret
cmp
or
dec
and
mov
lods
lea
inc
into
outsl
mov
and
pop
stos
insb
fwait
cld
adc
dec
dec
mov
cld
gs
add
xlat
ljmp
mov
dec
js
push
and
in
push
push
mov
jbe
mov
add
inc
pop
jae
dec
rorb
xchg
dec
inc
lods
jno,pt
enter
mov
out
and
aam
lds
mov
mov
enter
or
jl
xor
pop
les
jmp
iret
dec
inc
pusha
popf
push
in
notb
push
xorb
cmpsl
sahf
jge
jmp
cmp
mov
sub
inc
pusha
push
es
cmp
xor
jmp
inc
outsl
mov
outsl
mov
push
push
shl
or
arpl
mov
push
leave
inc
pop
mov
dec
inc
and
dec
das
xor
aad
cwtl
dec
push
mov
fsubs
sub
cmc
mov
js
sub
xchg
pop
pop
adc
lahf
push
add
aas
arpl
imul
pop
jo
popa
xor
fcoml
inc
inc
jp
iret
xor
xlat
lcall
mov
xchg
ds
data16
or
pop
mov
test
add
icebp
inc
in
xor
loop
cmpsl
aaa
add
in
sbb
sbb
dec
jmp
negl
or
inc
enter
or
sti
mov
rorb
xchg
out
adc
jle
in
aaa
or
jp
dec
jg
or
xor
or
and
push
arpl
leave
rclb
xchg
rcl
jne
addl
sub
inc
dec
or
or
mov
shr
or
xchg
out
aaa
mov
ljmp
outsb
push
push
stos
call
xchg
mov
push
cmpsl
cmp
jl
jnp
inc
adc
aas
test
outsl
pushf
jp
or
jge
out
push
mul
xchg
sub
pop
push
popf
test
jbe
sub
adc
sbbl
nop
test
out
push
sahf
mov
pop
xchg
lret
cltd
dec
push
dec
loopne
cltd
add
mov
xor
scas
mov
add
add
and
mov
aad
shlb
loop
out
mov
testb
push
xchg
rcrb
dec
subl
js
xchg
mov
faddl
dec
lahf
xchg
notl
and
mov
loop
jns
cmp
out
clc
mov
jbe
mov
push
mov
stos
cmp
push
dec
xchg
int3
rol
add
incb
push
shl
stos
lret
add
inc
add
lret
inc
sub
fdivl
xor
cmpsl
sub
ret
mov
jle
pop
fwait
mov
stos
pop
bound
and
mov
bound
nop
jmp
inc
cld
add
xor
fildll
dec
push
push
loopne
mov
jo
jl
jo
movsl
outsl
add
int3
sbb
imul
idivb
arpl
mov
ds
xor
mov
out
mov
mov
jno
inc
int3
ds
sub
lods
ja
lret
add
inc
xchg
xlat
test
stos
jbe
hlt
sbbb
or
mov
pop
imul
mov
mov
pop
mov
add
jne
daa
lret
xor
rorb
stc
nop
adc
aam
in
sbb
inc
movl
pop
dec
inc
shr
idivl
bound
add
inc
pusha
xor
iret
jmp
or
mov
lods
cs
inc
sti
or
test
xchg
or
sub
ret
mov
xor
stc
ftst
mov
dec
outsb
lds
pop
outsb
outsb
fmuls
or
setno
ja
push
data16
int
je
test
pop
pop
inc
or
mov
out
xchg
arpl
nop
jne
loopne
pop
jnp
add
mov
in
cltd
jge
jecxz
sarb
mov
add
mov
pop
imull
and
scas
mov
lock
test
pop
in
les
dec
leave
rorb
repz
and
xor
mov
or
lahf
push
repz
std
outsb
std
mov
mov
hlt
sbb
bnd
mov
and
aam
mov
cmp
gs
cltd
aas
sub
call
mov
sbb
jne
fst
mov
outsb
dec
push
pop
fistps
out
fs
cwtl
jmp
clc
gs
ja
jb
mov
leave
sub
sbb
mov
movntq
aam
sbb
loop
ret
mov
inc
loop
sbb
cmp
cmc
in
push
mov
fsubs
and
iret
pop
push
adc
ret
cmp
aad
inc
pusha
popa
mov
sub
test
mov
push
fdivs
lea
dec
pop
xchg
pop
or
add
mov
pop
ljmp
movsl
lahf
dec
mov
cmp
lds
dec
pop
bound
clc
outsl
in
add
mov
sti
jecxz
add
adc
lret
aaa
fnstcw
sahf
mov
pop
popf
inc
rorl
ljmp
lahf
sub
pop
mov
mov
xor
movsb
rcrb
outsb
rorb
imul
shlb
and
inc
fcomps
cmp
jp
lods
fwait
lds
int
xor
mov
movsl
xchg
push
test
outsb
push
add
nopl
push
adc
xor
imul
push
sti
daa
or
icebp
cltd
sahf
outsl
hlt
dec
or
insl
outsl
dec
popa
sbb
cmp
jge
mov
arpl
fcoms
push
fcomip
add
lret
ret
push
cltd
pop
push
mov
jns
dec
dec
loop
ljmp
dec
repz
stc
adc
push
mov
inc
inc
out
dec
test
xchg
stc
push
orb
out
and
xchg
stc
and
int
sarb
rorl
ss
dec
repnz
push
sahf
jge
out
mulb
mov
mov
push
push
negl
fs
stos
shrb
int3
es
push
push
jo
or
xor
pop
pop
add
adc
mov
cmp
dec
xor
mov
sahf
repz
jmp
mov
imul
xchg
nop
insb
jecxz
in
in
push
cmp
inc
jmp
mov
insb
mov
sar
fldcw
cs
sarb
lahf
jp
sbb
out
cmpl
xchg
arpl
dec
movsb
adc
jo
popf
jne
insl
sti
adc
jnp
cmp
push
addl
xor
in
push
xor
sbb
cmp
pop
out
push
hlt
jo
lds
sub
or
pop
sub
fs
push
fimull
ds
push
xor
push
flds
xor
mov
push
sub
mov
lret
push
cmp
stos
testl
or
nop
mov
movsb
fdivrl
lret
std
sbb
cmc
nop
and
jge
lret
fs
xor
jmp
lret
push
inc
xchg
add
inc
outsl
shrb
mov
movsb
cmp
mov
fdivrs
ja
popf
jg
xchg
xchg
xchg
mov
adc
int3
pop
sub
test
aas
out
mov
add
mov
adc
out
mov
pop
mov
push
cs
cmp
jb
test
push
shlb
xchg
lahf
fadds
aas
sub
shl
int
imul
push
adc
popa
sahf
mov
insb
jecxz
fucom
fsubl
push
sub
dec
repz
xchg
fisubl
popf
or
out
nop
imul
adc
mov
aas
jae
pop
push
iret
or
mov
rcrl
adc
inc
in
test
ficomps
leave
bound
notb
jle
mov
mov
sub
or
jp
pop
shl
cmp
shrb
push
and
clc
clc
pop
jns
into
mov
repnz
out
add
and
lahf
sub
repnz
andl
jmp
mov
stos
xchg
sbb
or
inc
out
xor
pop
dec
jl
push
je
fidivrs
dec
add
out
addb
jne
push
jmp
pop
and
xor
loopne,pn
das
xor
hlt
testl
push
push
fs
add
adc
and
xor
aam
in
hlt
testl
push
push
fs
add
adc
and
xor
aam
in
hlt
testl
push
push
fs
add
adc
and
aam
in
hlt
testl
stos
std
into
addr16
jae
pushf
call
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
repz
roll
ret
push
pop
xor
sbb
adc
arpl
xor
and
repz
roll
ret
push
mov
mov
push
arpl
dec
xchg
xor
adc
adc
add
ljmp
push
stos
mov
inc
adcl
inc
ljmp
dec
xchg
dec
mov
mov
bound
mov
inc
inc
mov
mov
sbb
cmp
and
lret
dec
xor
jb
sbb
stos
pop
jg
cltd
sahf
mov
pop
negb
dec
scas
xchg
jge
cld
sub
pop
loopne
icebp
test
xor
std
sbb
xlat
and
pushf
dec
imul
lds
cmp
xlat
repnz
aaa
sbb
out
dec
addr16
scas
addb
xchg
bound
int3
mov
cmpsb
cwtl
cmp
mull
shlb
jmp
mov
mov
movsl
mov
jp
movsl
lret
and
sbb
cmp
dec
lods
mov
rorl
adc
adc
add
cmp
cli
roll
ret
push
movsb
data16
xchg
inc
lcall
xchg
sub
cmp
or
add
mov
mov
rorb
aaa
fisubs
andl
lret
and
daa
clc
xor
outsb
mov
cmpb
mov
filds
mov
push
xor
push
ficoml
add
xor
addr16
mov
or
push
jae
arpl
xor
and
adc
add
repz
roll
ret
push
mov
mov
push
jae
arpl
xor
and
adc
add
repz
and
fbld
mov
sahf
aaa
add
sbb
icebp
iret
add
jle
les
xor
insb
add
lret
ds
lahf
rol
aaa
data16
sbbl
aaa
xchg
mov
cli
push
jo
cltd
adcb
out
pop
jmp
cli
aaa
iret
dec
mov
jecxz
pusha
push
insl
in
jns
push
xchg
sbb
out
xchg
rcrb
dec
xchg
incb
pop
cmpb
sub
inc
mov
out
dec
jnp
shll
and
fwait
mov
jno
add
jb
push
lret
or
mov
lea
inc
jle
out
imul
bswap
test
push
mov
imul
sub
stos
lcall
shlb
loop
fimuls
xchg
lret
in
jmp
mov
sub
pop
push
mov
cld
pop
icebp
daa
sbb
outsb
repnz
call
je
xchg
mov
stc
in
add
pop
ljmp
movsb
add
xchg
cli
gs
in
or
push
mov
inc
call
fstpt
pop
mov
mov
mov
loop
ss
xchg
sti
into
push
std
nop
push
jl
mov
xchg
sub
int3
jno
pop
mov
xor
sti
rol
inc
mov
jno
insb
mov
dec
mov
out
popa
sbb
out
jmp
sbb
loop
pop
jl
cs
lcall
inc
outsl
cld
ja
repz
mov
bnd
cwtl
dec
es
icebp
rol
aad
pop
es
test
aad
aas
jecxz
hlt
ja
xchg
scas
xorl
push
cmp
das
or
xchg
dec
push
test
inc
adc
ret
idivl
cmp
addr16
mov
mov
outsl
pusha
lret
push
les
lahf
sbb
cli
push
scas
push
jae
dec
test
mov
jns
xchg
mov
mov
sub
cmpsb
jg
jmp
and
aas
cmp
shr
mov
dec
pop
dec
jmp
mov
mov
adc
ss
mov
cli
mov
xchg
push
xchg
add
js
lods
fst
mov
jge
popa
or
or
cmp
fmuls
xor
rorl
push
aas
add
jmp
ds
mov
mov
insl
add
je
dec
pushf
adc
mov
repz
sbb
outsl
xlat
or
push
sbb
lret
pop
fisttpll
lds
cmp
in
popa
cmc
dec
sti
push
cwtl
and
and
negb
jnp
mov
push
pop
test
push
dec
inc
jnp
cmpsb
dec
ljmp
rcl
mov
pop
mov
scas
add
insb
push
js
add
ret
sbb
and
fmuls
xchg
sarl
inc
jb
vmread
push
outsb
cmp
xchg
xchg
incl
fstpl
pop
ss
xor
mov
bound
nop
jbe
sbb
jne
xchg
out
sbb
cltd
leave
movsl
inc
push
aaa
and
subb
bound
popf
fdivrl
cli
and
imul
outsb
daa
sub
sub
sbbl
push
lea
sub
sub
in
xor
lret
js
lods
cmpsl
push
add
push
popf
rorl
mov
popa
loope
test
cmpsl
add
repnz
js
pop
and
mov
xor
movaps
sbb
jnp
out
sub
push
fnsave
jge
loope
aad
sub
clc
add
mov
lret
dec
gs
icebp
stc
dec
xchg
xor
ja
inc
movsl
mov
mov
jle
mov
testb
movsl
sub
inc
popa
leave
fmuls
push
je
push
push
jne
shrb
int
cmpsb
mov
shl
adc
ljmp
test
xchg
pop
mov
aam
mov
lea
lcall
subps
aas
lods
jb
aam
xchg
mov
stos
pop
popf
fldl
pop
stc
pop
push
mov
jo
sbbb
pop
mov
test
sbb
pusha
cli
adc
mov
dec
out
dec
insl
add
mov
int
pop
inc
notb
or
mov
in
mov
aam
movb
aad
or
and
mov
jno
frstor
js
dec
xor
cmp
lret
repnz
scas
outsb
jno
hlt
fidivs
sbb
push
sub
cmp
push
push
or
scas
adc
mov
dec
outsb
cmp
push
daa
sub
lret
xor
outsl
pop
pop
adc
mov
jle
push
mov
mov
xor
dec
sbb
pusha
and
pop
shll
mov
mov
push
and
sbbb
insb
inc
xor
rcrb
adc
fadds
pop
repnz
pop
pop
cltd
call
add
inc
adc
jbe
aas
arpl
sbb
sub
ljmp
leave
mov
sti
or
pop
popa
pop
mov
nop
push
or
clc
jg
lcall
jo
mov
cmp
lock
inc
lds
aad
jmp
mov
mov
mov
popa
aam
add
shrb
jns
mov
ja
pop
mov
out
ss
arpl
repz
das
lcall
ds
mov
lret
xor
sahf
jg
cwtl
neg
push
mov
push
xchg
dec
fsubr
pop
sahf
and
test
stos
jno
das
mov
aas
xchg
les
mov
adc
std
inc
ja
addr16
dec
mov
sar
out
lea
adc
fucompp
cltd
mov
aaa
push
mov
dec
dec
in
pop
outsl
and
ret
mov
sub
adc
xor
stc
jmp
jg
popa
enter
mov
pop
jne
sub
sub
mov
addr16
xorb
insb
pop
bound
mov
inc
push
inc
cmp
fdivr
jnp
pop
iret
test
inc
in
sub
sub
nop
mov
bound
cwtl
fsubrl
dec
sbb
fs
mov
push
movsl
insb
dec
fildl
inc
fadds
subb
push
jmp
pushf
cmp
in
pop
scas
testl
adc
cs
inc
fdivrs
in
mov
pop
iret
lea
enter
or
jbe
mov
mov
cli
mov
andb
xchg
outsl
mov
push
cmp
push
pushf
xchg
cmc
pop
fnstcw
sub
pop
or
push
jp
mov
ret
or
mov
mov
mov
mov
clc
inc
xor
lret
jmp
inc
or
and
mov
dec
cmpsl
cli
jmp
or
jmp
jo
fcoms
pop
pop
and
aas
sub
imul
test
xchg
dec
jle
jbe
dec
lret
add
fisttpl
adc
inc
and
or
inc
lret
cmc
std
lds
pusha
inc
jl
inc
jp
in
adc
cmpsl
popa
mov
insl
mov
fcoms
jno
push
dec
sbb
push
mov
outsl
pop
aaa
nop
dec
add
and
loope
jmp
js
cmp
inc
stos
mov
xchg
mov
popf
fldt
into
xchg
loope
mov
sub
in
repnz
mov
lahf
pop
pop
imul
out
lahf
adc
loope
loopne
inc
xchg
mov
sahf
mov
xlat
fcompl
ret
sub
add
stos
mov
mov
jnp
sahf
in
addr16
add
bound
dec
addb
and
daa
sub
add
jb
shl
dec
or
dec
movsb
adcb
bound
pop
jl
daa
aam
lods
ja
xlat
scas
test
cmp
loop
push
add
dec
or
mov
sti
cmp
sub
adc
sub
add
jp
sbb
cmc
xchg
cmc
pop
pop
push
scas
decb
andb
sub
cli
in
mov
js
mov
mov
dec
fsubl
jp
cld
sbb
xor
out
das
pusha
inc
rcll
push
sti
fstpl
js
fsubrs
add
jb
popa
jb
out
lret
xchg
iret
sqrtps
fcomps
xchg
push
xchg
aam
inc
inc
mov
sarl
inc
push
adc
arpl
aad
aaa
call
push
dec
mov
in
xchg
pop
or
mov
pop
and
xor
daa
adc
in
push
pop
push
cs
into
jbe
pushf
sbb
mov
pop
pop
pop
int3
mov
mov
mov
addr16
cmp
aad
mov
xchg
insb
adc
jnp
fdivrp
lret
mov
jbe
pop
cmp
fwait
add
dec
gs
jmp
add
pusha
sahf
pop
repnz
xchg
mov
sub
xor
loope
xchg
ss
fidivrs
mov
int3
rcrl
mov
or
fdivr
ja
enter
add
cwtl
sub
lock
cli
and
lret
inc
pop
ljmp
sbb
jo
or
add
sub
loop
pop
out
push
ret
or
scas
into
test
add
jl
cmc
dec
lret
loopne
jns
adc
lret
fs
les
fimull
idivb
cmp
jno
xchg
movsb
dec
aaa
push
sub
and
push
and
jge
mov
pop
cmc
mov
fwait
lods
inc
fcomps
push
test
adc
mov
js
adc
cmp
pop
xchg
jle
pop
cwtl
xchg
or
fisubs
cld
mov
push
in
fisttps
pop
gs
jno
fildll
stc
xor
pushfw
in
and
dec
clc
mov
mov
push
in
or
fucom
test
cmp
fidivrs
xchg
arpl
ja
fiaddl
and
inc
shl
xor
mulb
adc
push
loopne
mov
cmp
sbbl
adc
cmp
jnp
adc
fld
xchg
fwait
insb
jbe
sti
xchg
loop
popa
pop
mov
push
subl
push
rcrl
loope
mov
out
loope
scas
in
mov
scas
sub
jl
call
popf
cli
or
add
sbb
jns
test
jno
or
fildll
dec
rcl
xchg
ret
movsl
add
addl
jmp
pop
lods
loop
mov
push
ja
scas
and
test
aam
sub
xchg
mov
dec
jecxz
and
scas
mov
xor
lock
ja
pop
lods
mov
shll
scas
dec
xor
mov
pop
ret
pop
sbb
pusha
mov
in
and
xchg
pusha
or
inc
pop
pop
cmpsl
lds
xchg
mov
xchg
jecxz
lret
insl
mov
sti
mov
and
mov
inc
jmp
lods
stos
xor
out
outsb
adc
cli
mov
jp
mov
nop
outsb
pop
aam
lcall
jne
outsb
push
inc
fldcw
lods
or
shl
xchg
cwtl
dec
and
mov
push
aas
jb
mov
inc
decl
adc
jne
mov
pop
shll
mov
data16
jb
addr16
out
aam
fstpl
enter
fildll
inc
repz
sbb
bswap
addr16
fdivrs
xor
imul
jl
or
out
mov
sbbl
in
pop
sarl
das
mov
inc
das
inc
nop
cmp
sub
dec
popa
lea
sub
call
pop
mov
push
dec
jp
int
fs
idivb
jle
add
fnsave
cmpsl
cmp
lret
xor
jne
fisubs
xchg
sub
in
pop
std
jb
aam
repz
sub
jns
fstp
mov
pop
mov
lock
rorb
jne
add
je
aas
aas
jmp
mov
mov
pushf
adc
xchg
push
insl
push
data16
imul
xchg
into
ds
push
js
aam
sbb
mov
pop
test
ljmp
lcall
sbb
pop
inc
cld
and
inc
push
loopne
rcll
mov
sub
mov
inc
xchg
xchg
lds
sbb
inc
addb
pop
negl
add
mov
jbe
cmp
incb
lock
js
xchg
in
ret
cmpsb
scas
inc
dec
pop
or
aas
aas
in
mov
inc
cmp
xchg
ja
fisttpll
jae
cmp
mov
nop
sbbl
lahf
or
push
rolb
mov
cmpsb
loop
in
xchg
xchg
in
dec
jmp
xchg
push
jae
mov
adc
xchg
sti
pop
and
pop
xchg
cmp
aaa
in
shrb
dec
add
cwtl
xor
fwait
out
pushf
cmpsl
pop
mov
aas
push
pop
xchg
push
xor
js
and
cmp
jo
outsl
stc
popf
mov
sbb
hlt
jl
js
movsl
cmpb
flds
add
inc
sbb
ret
cmpl
das
dec
scas
inc
cli
jno
sahf
bnd
adc
push
shrl
pop
stos
dec
jno
pop
pusha
inc
add
dec
repnz
in
jae
inc
push
jge
out
sbb
sti
dec
lcall
insb
addr16
fcomps
mov
adcl
mov
test
xchg
cmpsb
gs
mov
cwtl
cmp
push
inc
mov
gs
scas
inc
dec
data16
xor
mov
jns
push
das
xchg
iret
js
dec
outsb
pop
mov
aad
dec
sbb
xchg
jno
cmp
sub
gs
loopne
ficomps
test
xor
or
daa
mov
cmpsb
xchg
lods
aaa
lret
leave
mov
and
js
pop
adc
xor
das
or
push
lret
cmp
out
fwait
testb
push
lds
pop
in
adc
mov
push
fisubrs
jge
cmp
push
xor
adcl
xor
sbb
adc
sbb
mov
insl
dec
dec
inc
inc
jns
mov
mov
fidivrs
imul
fucomp
push
xor
sbb
xor
pop
adc
cltd
or
bnd
cmp
fmuls
inc
jbe
bound
mov
or
xchg
popa
inc
in
xor
dec
xor
push
add
xchg
xor
cmp
inc
clc
cmpsb
stc
andl
cltd
pop
xchg
or
stos
aad
mov
cmp
pop
mov
xor
and
push
ficoms
mov
loope
xor
push
dec
imul
mov
mov
jne
push
test
fldt
das
push
loope
lods
mov
fidivrs
jg
inc
push
xchg
aaa
xor
iret
movsb
fdivrp
cltd
scas
pop
sub
push
nop
jge
mov
gs
xchg
jbe
stos
roll
sbb
cmp
imul
jnp
test
arpl
div
pop
in
push
es
mov
mov
add
ret
imul
push
mov
insl
mov
push
fsub
push
movsl
or
jg
jl
mov
and
push
adc
pop
jae
idivl
lcall
pushl
je
adc
add
xor
insb
inc
jo
sbb
xor
leave
int
cmp
aam
mov
mov
jb
mov
and
dec
js,pt
mov
sbb
xchg
push
lret
movsb
mov
inc
lcall
pop
xchg
cli
cmp
mov
jecxz
movl
mov
xor
cmp
cmp
bound
lock
ret
jae
pop
adc
bound
test
cltd
fsqrt
pop
add
xor
mov
cmp
jl
gs
push
mov
mov
test
adc
unpckhps
lret
add
sahf
jne
or
lds
pop
lcall
negl
sub
into
popf
cmovo
aaa
cs
mov
push
les
dec
cmp
push
mov
shlb
inc
pop
out
cltd
jns
loop
mov
int
jecxz
mov
das
insb
sbb
aad
cli
movsb
dec
pop
jae
inc
mov
int3
into
lahf
inc
clc
push
sub
add
ret
popa
and
pop
mov
lea
mov
adc
pop
ss
in
movsl
mov
push
lea
sub
imul
addr16
push
sub
add
mov
andb
fsubrs
mov
inc
mov
sub
push
in
xor
sub
fwait
mov
xchg
shrb
xchg
or
adc
jmp
std
mov
incb
adc
fcoml
mov
push
sahf
scas
mov
fsubl
cmp
cwtl
xorl
in
aaa
addr16
mov
arpl
mov
aam
data16
mov
jo
out
out
fisubs
mov
push
scas
gs
shl
in
testb
iret
int
push
and
shlb
adc
mov
sub
cmpsl
std
in
lahf
cmp
fstl
orl
dec
out
mov
test
in
dec
push
repnz
mov
int3
insl
test
jno
int3
xor
xchg
addr16
dec
aam
into
or
sbb
mov
jbe
or
out
add
cmp
xchg
ja
inc
rcll
or
aad
mov
adc
inc
jmp
jle
or
mov
negb
dec
orl
out
aam
sbb
insb
stos
push
fists
testl
jg
outsb
mov
pop
mov
shl
adc
mov
aam
and
mov
cld
aas
leave
mov
sbb
fcoms
push
enter
and
mov
mov
sbb
imul
mov
ljmp
sti
jle
adc
dec
jg
cmc
out
mov
loop
jb
or
adc
out
mov
shlb
pop
stos
mov
xor
lret
xchg
mov
movl
and
jmp
fs
push
xorb
loope
stc
jns
sub
mov
sub
dec
fsubr
push
push
or
cmp
xor
xchg
sti
in
adc
add
mov
into
xor
into
lea
bound
aad
sub
fistps
nop
es
jge
dec
lcall
or
mov
mov
scas
add
cmpl
mov
cwtl
dec
mov
mov
int
and
jo
gs
pop
lretw
imul
mov
aas
in
fcom
insl
xor
in
fmuls
jge
je
data16
hlt
aas
lods
adc
sub
cmc
scas
jns
cmc
xor
push
xchg
mov
add
add
scas
cli
push
add
pop
in
add
syscall
push
je
ret
pop
aad
imul
pop
imul
sub
pop
and
shl
sahf
mov
sbb
pusha
fcmovb
fadds
lcall
lea
into
add
addr16
lods
cmp
jl
stc
push
cmp
pop
cltd
sbb
inc
jbe
cwtl
mov
dec
and
xor
test
dec
inc
test
scas
jae
pop
add
gs
outsb
loop
pop
leave
jae
rorb
add
mov
push
jo
imul
rorb
rclb
mov
repnz
lods
scas
mov
add
scas
stos
inc
addr16
cs
imul
loope
mov
fimull
stc
lret
sub
in
mov
or
xlat
mov
mov
mov
mov
jl
adc
mov
out
cmp
pop
lds
mov
adc
clc
ljmp
aas
ss
add
cmp
into
inc
or
outsb
inc
pop
inc
push
out
dec
hlt
inc
std
cmpsl
push
dec
out
sub
rol
cmp
lret
xchg
jecxz
je
out
mov
dec
push
fdivl
movsb
pop
xchg
sbb
pop
pop
mov
xor
lret
mov
mov
lcall
fst
mov
cli
idivb
push
daa
sbbl
pop
pop
aas
aaa
and
aaa
enter
nop
push
mov
stc
dec
mov
dec
out
cwtl
mov
mov
push
inc
lock
pop
data16
mov
cmpsl
jp
cmc
daa
sub
test
sbb
push
xor
or
jae
xchg
mov
out
bound
sub
cmp
aas
jle
movsl
popa
mov
fs
push
jne
movsb
jge
dec
xchg
adc
lret
subl
or
inc
pop
mov
cmpsl
or
xor
jecxz
inc
and
dec
test
out
loop
or
sub
jae
mov
leave
inc
movups
or
leave
and
adc
fisttps
jns
icebp
popa
push
jp
cmpsl
and
sub
fstl
inc
roll
out
xchg
out
aad
test
pop
stc
cmpsl
insb
inc
xor
int
fcomp
mov
repnz
push
insb
js
adc
mov
ficoml
outsb
je
cmpsb
sbb
mov
lret
cmp
std
aam
jo
jb
jne
xlat
fldenv
enter
xchg
and
cmp
add
adc
and
mov
cli
lock
andb
movl
out
fidivrs
and
hlt
sbb
sub
jl
movsb
push
dec
lea
pop
xor
jb
flds
ret
push
mov
mov
push
jae
arpl
xor
and
adc
add
repz
roll
ret
push
mov
mov
push
jae
arpl
xor
and
adc
add
repz
roll
ret
pop
mov
mov
push
jae
arpl
xor
and
adc
add
repz
rolb
ret
adc
movb
mov
sbb
xchg
inc
outsb
stos
or
cmp
sub
jp
dec
inc
pop
push
and
dec
push
outsl
and
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
loopne
lock
int3
mov
nop
push
jp
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
mov
hlt
out
hlt
jecxz
adc
cmp
sub
add
xor
sub
and
and
stos
mov
loope
xabort
sbb
aad
and
sbb
aam
inc
aad
mov
mov
rcll
rclb
sub
mov
repz
inc
ljmp
orb
xor
das
and
fildl
sub
jb
ljmp
xor
dec
mov
push
and
adc
xchg
test
mov
cli
pop
push
mov
daa
repz
outsb
xchg
in
std
or
and
clc
cmc
or
mov
xchg
mov
repnz
jp
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
das
inc
aas
push
inc
inc
jae
outsl
inc
pop
inc
stos
cltd
icebp
test
jecxz
aad
stc
into
fisubrs
or
insb
dec
push
jl
imul
mov
into
out
mov
lcall
xor
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
icebp
lods
jle
lock
mov
jge
add
jmp
mov
mov
lret
xor
in
in
sbb
cmp
adc
push
inc
add
addl
lea
xor
inc
test
mov
dec
fstpt
or
rorl
aaa
cld
rorl
imul
out
ljmp
lods
push
mov
xor
push
ljmp
or
popa
push
std
mov
in
int
in
mov
add
jno
jo
loope
out
mov
dec
add
pop
loop
mov
push
sarl
and
fs
add
lds
fsubrs
cmp
mov
int
call
stos
sbb
andb
jp
fsubp
adc
notb
sbb
test
add
jl
push
stos
and
test
sub
and
movsl
not
inc
jge
adc
cmp
xorb
push
pushl
and
icebp
bound
mov
in
leave
add
cmp
pop
movsl
cs
in
scas
scas
aam
xor
pushf
call
mov
cs
ret
and
push
mov
sbb
loop
mov
jbe
cld
test
sbb
scas
int3
das
sbb
in
in
in
pop
inc
mov
mov
dec
cmp
lods
in
std
pushf
sub
repz
and
xor
in
mov
fisubs
pushf
out
xchg
xorb
out
cmp
mov
xor
insb
movsb
jl
push
mov
xor
adc
repz
adc
jg
repnz
pushf
xlat
lea
push
out
jp
add
jle
jno
movsb
jae
out
sub
xor
aad
punpckhwd
and
fwait
pop
shl
jmp
inc
or
pusha
icebp
cwtl
add
inc
dec
mov
adc
sti
or
jle
pop
fsubrl
call
pop
jb
mov
loope
mov
jo
or
lods
mov
push
cmpsl
sub
insb
shll
dec
call
out
fmul
mov
negb
roll
call
call
dec
inc
imul
mov
jno
jle
addb
loop
fistps
add
scas
jp
cs
adc
adc
lcall
in
shrb
adc
iret
push
jno
mov
xchg
mov
shll
fimuls
dec
inc
iret
sub
sub
cs
pop
inc
outsl
xchg
xchg
add
rcll
mov
adc
jle
mov
fwait
int3
mov
pop
das
out
sub
out
andb
cmp
jmp
in
inc
adc
orb
push
scas
test
ljmp
sahf
sub
push
mov
jge
adc
loopne
mov
roll
xchg
cmp
pop
pop
mov
ja
mov
push
jmp
rolb
mov
dec
dec
jl
xorl
fdivs
xor
repz
cmpsb
push
or
cwtl
packssdw
mov
fidivrs
fimuls
mov
daa
into
mov
push
enter
dec
add
or
mov
cmc
pushf
pop
rcr
fdivrl
jge
fisubrl
cmp
dec
xlat
clc
add
mov
push
mov
or
fst
push
xor
xor
push
xchg
pop
add
jge
inc
aas
cmp
scas
jp
and
cmc
sahf
cmpl
xor
jle
sarb
mov
cmp
dec
inc
mov
adc
mov
or
cli
insl
push
sbb
mov
add
and
and
xor
xor
xchg
mov
sti
mov
ret
outsb
dec
cmp
pop
dec
lock
jmp
xor
je
jmp
fdivr
pop
push
fwait
or
fs
jbe
push
jle
mov
xor
xchg
adc
xchg
cmpsl
aaa
lods
and
lcall
jmp
mov
nop
jp
inc
lea
sti
xchg
push
push
rcl
mov
xchg
out
enter
jo
cli
pop
loopne
in
dec
dec
mov
cli
lret
push
repz
ret
fildll
jecxz
loope
cli
sbb
xchg
cmc
movsb
xchg
and
jns
test
fs
fsubrs
ret
aad
stc
mov
mov
jg
push
dec
dec
or
push
leave
inc
jbe
in
dec
pop
sub
fwait
call
ret
lods
push
push
dec
dec
inc
int
push
sbb
inc
cld
pop
and
pop
cltd
cmp
iret
sbb
mov
iret
xchg
imul
sub
lea
inc
pop
mov
xor
fbld
push
je
and
dec
jb
aam
std
mov
push
test
cwtl
push
push
adc
imul
addr16
sub
insb
sbb
push
adc
dec
nop
fldl
mov
adcl
jnp
sub
add
test
jge
pop
data16
cmp
jmp
pmovmskb
addr16
and
cmp
fstpl
jo
mov
cmp
sub
bound
shl
leave
sub
les
into
sahf
stos
pushf
jne
push
push
cmpl
and
or
xlat
pop
mov
les
outsb
push
stc
fisubrs
inc
mov
lods
cmp
fcomps
lcall
push
nop
push
pop
xchg
pop
addr16
xchg
cli
dec
shll
adcb
fistps
xor
sbb
inc
mov
icebp
insb
lea
add
push
mov
aaa
adc
aaa
outsl
jno
lret
jno
sbb
hlt
icebp
dec
jae
in
adc
jo,pn
jg
or
sub
inc
sbb
sbb
jl
cwtl
mov
cmpsb
or
jb
cwtl
scas
inc
or
cmp
clts
test
inc
pop
add
push
sub
fwait
scas
xchg
loope
fwait
push
pop
loope
and
imul
pop
fbstp
and
loope
inc
mov
test
pop
fyl2x
pop
loopne
jmp
xchg
fdiv
xor
sub
mov
out
sbb
push
mov
mov
mov
cmp
fisttps
outsb
add
into
inc
and
adc
notl
mov
aaa
jne
jmp
fdivs
in
test
adc
rcrl
fisubl
imul
enter
in
mov
test
sub
scas
sahf
imul
sbb
test
cmpsl
or
push
popa
push
pop
aas
insl
dec
push
jbe
mov
out
cli
mov
daa
stc
sbb
imul
test
shl
push
mull
mov
je
ja
ret
dec
cwtl
xchg
adc
js
movsl
repnz
cmp
cwtl
or
jge
push
sub
mov
add
lret
push
add
enter
pop
lods
xacquire
mov
fists
lods
cwtl
fcoms
jge
cwtl
stos
xchg
pop
fxch
cwtl
fnstsw
cld
clc
push
pusha
cltd
ficompl
cmpsl
pop
pop
ljmp
mov
ljmp
jmp
je
add
cmp
sbbb
das
push
sub
xchg
iret
mov
and
dec
cmpsb
push
in
je
adc
xorl
and
mov
pop
shrl
lcall
out
loop
ljmp
test
push
jns
stos
std
dec
loope
lcall
xor
or
xchg
mov
movb
fsubs
pop
mov
movsl
inc
stc
nop
pushf
notl
pop
lcall
or
sub
in
aad
adc
jne
xchg
adc
js
clc
pop
adc
sub
in
mov
jno
sbb
dec
imul
cmp
scas
jbe
pusha
jae
sbb
pop
leave
xchg
jns
and
mov
xor
jb
subl
out
push
iret
cltd
dec
push
ret
mov
sbb
aam
mov
ret
leave
lcall
popa
adc
inc
or
push
in
cmp
sbb
mov
add
icebp
inc
dec
mov
cmp
das
std
cmp
shrl
inc
loop
jne
test
pop
mov
insb
xchg
push
pop
jle
in
dec
popa
stos
sbb
sub
sti
cwtl
out
inc
sbb
push
subb
dec
pop
lret
and
mov
mov
xor
out
jbe
xor
in
xchg
dec
aam
jle
mov
sbbl
test
xchg
fsubrl
inc
scas
pop
push
jl
gs
int3
xchg
clc
push
and
hlt
fimuls
clc
loop
add
fwait
iret
mov
inc
or
jnp
into
fwait
mov
rorl
cmp
xchg
fwait
mov
mov
and
push
es
das
inc
in
add
dec
ja
dec
sub
sub
test
sub
enter
mov
push
clc
pop
jl
mov
sub
jne
gs
in
mov
repz
jmp
jle
scas
xor
sub
cmc
push
mov
test
rcl
shrb
jb
out
cmc
jl
shl
mov
fdivs
xor
fstl
xor
shlb
sbb
add
mov
addr16
ficoms
rolb
xor
fcomp
out
jno
xchg
xchg
pop
jbe
push
push
fidivrl
xor
dec
or
add
lahf
pop
je
and
cmp
cmpsl
and
or
shlb
cmp
imul
inc
repnz
loopne
aad
inc
adc
cmp
sub
std
jns
hlt
int
je
out
fists
push
std
add
inc
adc
lods
mov
in
out
ja
cmp
inc
xor
mov
es
repz
adc
sbb
fsubs
cmp
jb
xor
data16
fwait
pushf
lret
xor
dec
sbb
sub
cmc
movsl
rolb
out
ficoms
cmpsl
sbb
mov
es
fadd
das
aam
mov
adc
imul
and
addr16
jb
bound
cmpsl
into
les
fsts
stos
jbe
mov
inc
into
inc
es
mov
push
pop
out
mov
sbb
pop
mov
sub
adc
cltd
pop
in
xchg
rcrl
mov
popa
icebp
lods
shlb
push
xor
xlat
add
int3
popa
mov
es
xlat
jg
adc
and
xchg
inc
aam
push
lods
enter
negb
cmp
fimuls
mov
movsb
mov
xor
push
into
jg
pop
mov
and
ljmp
not
je
push
mov
cli
cs
std
pop
pop
push
jmp
lret
repz
pop
mov
push
fwait
push
jp
in
push
pop
lods
mov
cmpsb
jbe
xorb
mov
jmp
mov
in
fnsave
mov
inc
in
stos
int
or
dec
push
xchg
or
shrl
push
ss
sbb
pop
adc
insb
aam
pop
imul
idivb
aad
shll
adc
outsb
cmp
and
or
in
or
in
mov
test
addr16
mov
inc
andb
int
push
fisubl
aam
cmp
data16
push
and
xchg
leave
dec
shrl
enter
aaa
pusha
enter
pop
mov
fsubp
cmp
sbb
cmp
adc
sub
jno
jge
mov
cmpsb
mov
and
call
mov
out
xor
push
or
inc
pop
rcl
movl
sbb
jb
das
mov
dec
push
ret
jo
add
jecxz
daa
lcall
loopne
sub
mov
mov
pushf
xchg
sbb
xchg
daa
mov
pop
push
dec
sub
icebp
fists
daa
push
cmp
xchg
lods
xchg
in
push
mov
mov
addb
and
daa
sub
cmp
pushf
gs
jo
push
push
loop
sti
arpl
inc
sar
pop
push
jns
push
inc
pop
fnsave
adc
or
sub
iret
dec
mov
xchg
xchg
pop
addl
hlt
loop
into
inc
es
movsb
ficoms
mov
dec
mov
jbe
add
mull
gs
push
rorb
or
add
loop
xor
pusha
addr16
inc
push
or
sub
pop
push
push
pop
lods
cmpsl
ret
das
adc
lock
xor
mov
and
xchg
les
lcall
sbb
in
push
popf
pop
cld
adc
aas
insl
cmp
cmp
dec
cli
fs
pop
xor
rcl
stos
xor
pushf
mov
dec
and
shrl
ret
fwait
add
add
aaa
cli
pop
movsb
push
pusha
rcrb
cmp
cmp
adc
dec
xchg
dec
repz
mov
aaa
dec
loope
mov
adc
adc
shrb
das
push
testl
add
ret
mov
test
fbstp
les
cmpsb
push
jmp
sti
jno
cli
shll
lret
adc
lret
adc
ja
stc
jl
cmpsl
pop
fdivr
popf
pushw
jns
mov
push
dec
xchg
imul
and
mov
ja
sub
xchg
pop
push
stos
flds
sub
mov
loope
dec
sbb
sbbl
pushf
inc
dec
mov
mov
mov
xor
push
pop
cmp
loopne
mov
jnp
or
das
mov
sbb
bound
and
xor
icebp
clc
ret
push
fnsave
das
push
movsb
jle
xor
jne
push
out
rorl
cltd
sub
xchg
xchg
fwait
xor
ja
adc
adc
mov
xchg
test
daa
and
lds
mov
and
jnp
lcall
add
push
flds
push
dec
mov
je
pusha
mov
test
inc
fists
sbb
sbb
or
shll
xchg
jle
ja
rolb
les
adc
aaa
push
dec
sub
adc
inc
pop
mov
in
cmpsl
pop
repz
pushf
and
jge
fcoml
or
sar
das
movsl
addl
lcall
mull
pop
push
rcll
ficoms
mov
jnp
jle
dec
fmul
outsl
lds
push
lods
lock
test
repnz
add
cmp
add
adc
outsb
push
mov
mov
out
jg
repz
in
sahf
in
and
push
fsubp
push
push
inc
xchg
jbe
scas
pop
sarb
in
xchg
fildll
lods
sub
xchg
pop
cmp
add
xchg
sub
std
fs
sti
shll
fisubrl
out
test
jo
outsl
xlat
movsb
xlat
sub
fbld
push
inc
insl
insl
mov
cmpsb
pop
xchg
arpl
pop
and
aam
lods
mov
jbe
inc
cmp
mov
mov
popa
imul
loopne
adc
adc
pop
xor
imul
push
xchg
dec
fsubrs
movsb
and
jbe
xchg
push
cmc
stc
add
out
je
xor
mov
shrl
pop
pushf
imul
mov
fwait
dec
leave
xchg
jno
sbb
sub
inc
das
adc
ss
shrl
push
scas
decb
inc
adc
loope
cmp
dec
fistpll
std
jb
stos
mov
repz
cmpsb
lret
jbe
loope
jb
or
jbe
movl
push
inc
add
xchg
movsb
inc
lea
sbb
push
cld
xchg
cmp
lods
jl
jge
jnp
jne
xchg
les
testl
enter
mov
push
and
add
loopne
cmc
pop
mov
xchg
add
loop
inc
and
dec
fcomp
lahf
aam
and
inc
push
cmc
fists
sti
imul
cmp
sbb
nop
add
sahf
cmp
and
test
mov
xor
scas
aad
xchg
sar
inc
pop
scas
cld
sub
jmp
add
mov
mov
fnstenv
das
out
adc
mov
popa
mov
and
xchg
out
je
jg
jae
fstps
fwait
jp
pop
fwait
int3
lret
mov
jge
pop
or
stos
mov
mov
out
cmp
lcall
cmp
enter
mov
das
or
xchg
mov
add
or
sub
push
jnp
push
xor
or
imulb
aam
sub
aad
in
es
cltd
sti
pushf
fisubl
jns
or
pop
mov
mov
jns
adc
in
insb
xchg
pushf
imul
or
jle
xlat
cmp
mov
mov
fwait
jmp
xchg
hlt
hlt
inc
and
roll
push
js
loopne
sbb
sbb
add
pop
pusha
xchg
inc
into
aam
pusha
fdiv
insb
ja
insl
in
dec
pop
push
loop
addb
jne
add
popf
pop
mov
int
mov
pushf
pop
orl
and
dec
je
out
lods
test
pushf
aam
fistpl
mov
mov
mov
pop
ret
jae
adc
adc
xor
add
repnz
jge
jp
into
mov
and
test
repz
leave
jl
mov
inc
jbe
xorb
loope
push
adc
scas
lahf
fidivrl
add
jne
jecxz
outsl
mov
pop
lahf
shl
inc
cltd
xlat
sub
push
mov
mov
cmpsl
popf
cs
ds
mov
in
pop
mov
sub
inc
mov
xor
push
clc
dec
sbb
jl
jnp
lahf
inc
je
je
pop
cmpsl
lcall
adc
and
adc
shll
cmpsl
push
push
fcmovnbe
loop
push
sub
fmuls
add
hlt
jnp
jae
jne
stos
mov
or
pop
stc
and
sub
lods
xchg
stc
inc
dec
jmp
out
imul
sbb
xor
and
rcll
sbb
test
and
lahf
pushf
les
mov
shll
outsb
bound
cmpsl
fsubrs
shlb
cld
addr16
enter
pop
and
or
inc
push
out
loope
out
dec
lds
push
ss
fidivrl
mov
sbb
pop
testb
fimuls
sahf
cmpl
sti
lods
lods
cmp
mov
add
xorl
mov
lret
sarl
add
xchg
test
stc
mov
incb
scas
ljmp
sub
jmp
xor
stos
clc
adc
xor
pop
jb
shrb
push
mov
pushf
movsb
lods
das
repnz
fnstcw
cmp
js
push
push
push
out
pusha
push
push
jns
stos
or
ret
lcall
fwait
adc
out
sbb
jns
stos
lods
pop
fs
mov
cmp
mov
in
add
mov
and
loopne
mov
jmp
pop
jno
or
mov
aam
adc
mov
loope
cmp
repz
xor
adc
jg
inc
pop
jae
adc
popf
push
cmp
cwtl
jg
out
jnp
scas
inc
lods
cmpsl
sub
jl
lcall
movsl
hlt
in
mov
xchg
pop
lahf
cmp
adc
mov
mov
fdiv
data16
sub
and
adc
fwait
orb
jno
xchg
add
cmp
push
addr16
mov
push
jl
mov
in
xchg
fisubrl
mov
jg
mov
fmull
cmp
test
inc
mov
test
and
arpl
sub
outsl
in
loop
movsl
lods
cmp
xor
es
mov
sarb
dec
rcrb
rcrl
push
pop
nop
aam
cltd
inc
push
inc
cmp
mov
cmp
out
pop
ret
and
loope
stos
gs
int3
sub
mov
jno
decl
mov
adc
mov
sbb
dec
test
lahf
int3
or
testl
mov
jne
fidivrs
test
or
and
add
int
out
push
push
sbb
mov
sub
out
dec
and
add
jne
sbb
rcll
cmp
out
sbb
xchg
repz
cmc
fs
add
lahf
mov
cmp
ja
lahf
dec
inc
je
inc
scas
orb
push
xchg
test
cmp
out
and
xlat
loope
pop
popa
mov
inc
mov
xor
push
es
lret
xchg
pop
lods
shlb
into
cli
loopne
push
xchg
cld
dec
lcall
jno
cmp
mov
dec
mov
addr16
xor
jge
add
aaa
sahf
mov
xchg
imulb
xchg
ficomps
xchg
int
jp
cmpsl
inc
xchg
sub
mov
mov
fbstp
sbb
std
pop
pushf
je
loop
or
push
jge
dec
aas
inc
dec
mov
hlt
dec
lods
aad
cld
jmp
lahf
test
test
in
ds
out
inc
adc
cmp
lret
dec
cli
push
jecxz
fcmovnu
nop
fimull
add
rorb
and
repz
push
xor
inc
jno
cmpsl
push
or
faddl
imul
clc
std
or
sbb
xchg
sarl
jle
nop
cmp
dec
lahf
cmpsl
xchg
push
fidivs
jo
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
cmpsl
xor
jg
outsl
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
out
mov
ret
rolb
daa
mov
cmpsb
int3
jns
jb
push
popf
daa
fistpll
loop
bnd
insl
rcrb
subb
std
dec
in
push
pop
or
xor
inc
dec
xor
pop
insl
movsb
sbb
mov
push
xchg
and
and
jo
jbe
cmpsb
sub
aam
xchg
add
push
mov
add
fsqrt
enter
test
xor
mov
sub
ret
jge
insl
and
adc
bound
mov
mov
pop
or
fwait
sbb
xchg
dec
js
mov
jae
frstor
std
inc
sub
into
fcom
lods
aad
loop
repnz
insl
sarb
mov
cmpb
dec
xchg
add
int
ds
cwtl
outsb
mov
aas
xchg
sub
mov
inc
fwait
and
into
dec
jb
in
push
lods
lahf
mov
mov
add
in
incl
repnz
and
xchg
lds
int
add
out
sub
sarb
insl
rcrb
subb
std
inc
in
outsb
popf
push
fdivrl
loop
popf
adc
add
sbb
imull
aad
and
xor
jmp
cmp
mov
inc
jmp
mov
call
in
bound
fsubs
xchg
dec
adc
scas
add
cmp
int
std
inc
in
push
popf
and
adc
dec
bnd
insl
rcrb
subb
std
inc
in
push
popf
and
adc
push
cmp
lds
mov
jecxz
fldpi
ror
outsb
and
cmpsl
pop
ljmp
cld
repnz
lock
lock
sahf
aad
out
xor
push
arpl
in
out
mov
mov
or
pop
lods
movsl
mov
in
jp
addl
loopne
mov
loope
sbb
cmp
sub
mov
jo
mov
rorb
cmp
push
pusha
cld
int
fwait
cmpsb
les
add
lcall
or
cmpsb
xor
pop
cmp
daa
or
inc
lcall
scas
mov
jecxz
notl
lds
test
sub
cmp
sub
sti
ss
add
daa
mov
dec
call
rol
push
sar
dec
ss
nop
pop
push
cmp
xchg
pop
and
roll
out
sbb
cwtl
and
aas
fidivrs
mov
adc
int3
clc
in
popf
iret
std
movsb
pop
sub
add
push
jo
cmp
push
repnz
cli
gs
xchg
cmp
mov
ljmp
sbb
idiv
lds
mov
and
xor
lds
ss
or
std
out
mov
clc
js
and
mov
sub
call
push
jns
shll
xor
sti
mov
lods
add
or
popf
in
push
inc
inc
mov
je
cmp
and
in
cld
mov
in
andl
inc
mov
or
hlt
mov
lcall
imul
mov
cmp
mov
inc
pop
push
mov
fisttps
out
xchg
jb
add
mov
cmp
test
dec
loope
movsb
inc
llwpcb
push
call
movsb
in
or
xchg
aam
orl
inc
pusha
lds
mov
add
or
or
hlt
lods
xchg
sti
mov
push
cmpsb
add
mov
dec
jne
ret
push
insl
xcrypt-ctr
cmpsl
sbb
lods
adc
or
xor
imul
push
sub
lea
aaa
aam
push
jmp
jb
push
mov
mov
push
push
xor
mov
jbe
lret
stc
dec
mov
sbb
daa
jb
dec
stc
ljmp
mov
ja
xor
dec
aam
outsl
outsl
sbb
push
aad
frstor
add
subb
inc
adc
sbb
shl
push
xor
adc
dec
mov
sbb
rorb
in
inc
sbb
repz
sbb
orb
and
mov
mov
aaa
adc
ljmp
mov
mull
cld
cmp
xor
test
popa
in
add
add
cmp
stos
pushf
testl
pop
dec
or
xlat
jmp
mov
jmp
cmpsb
sbb
add
pushf
push
cmp
leave
outsl
inc
or
ret
adc
mov
dec
mov
mov
xlat
jno
xor
test
cmp
aam
xchg
and
aad
and
inc
sub
mov
call
and
cli
xlat
xchg
add
pop
push
sbb
iret
ja
sbb
cmp
test
sub
mov
xchg
js
or
andb
ret
cmpsb
lret
adc
or
cmp
out
addr16
pushf
xchg
pop
stos
out
mov
xchg
adc
rorb
sub
and
xlat
dec
mov
pop
sub
outsl
imul
dec
mov
popf
xor
mov
mov
insl
data16
into
cli
and
fstpl
xor
shr
in
pop
repz
push
test
cmp
adc
inc
cwtl
aas
jns
scas
lods
jge
dec
sbb
ret
or
push
xorl
xor
push
int
push
or
xchg
mov
hlt
inc
or
or
imul
sar
cmp
dec
adcb
test
pop
jecxz
movb
iret
mov
ret
or
cmp
addb
mov
jno
sub
hlt
pop
lret
mov
daa
subl
mov
xchg
or
ds
mov
push
push
loop
dec
icebp
ljmp
movsl
mov
shll
pop
push
push
aas
lock
xchg
test
jae
test
cmp
enter
xor
xchg
adc
sub
or
dec
lcall
add
cs
or
xlat
jmp
mov
cwtl
stos
jp
push
dec
xchg
test
lock
out
xor
repz
adc
mov
mov
lods
pushf
out
push
lock
fdivs
cmp
insb
mov
cmp
ss
push
pop
push
inc
pop
mov
sbb
jns
les
shl
mov
addr16
and
fcoms
and
icebp
inc
ror
lret
out
jae
in
rcl
xor
push
push
mov
pushf
sbb
lea
incl
fwait
pop
addl
call
ds
cmp
add
jg
sti
lds
sub
pushf
lods
lock
push
test
and
mov
xchg
sbb
mov
test
in
pop
cmp
push
sbb
cli
sub
sub
hlt
jmp
sub
jns
and
test
jle
sahf
hlt
fsub
pop
mov
push
inc
fisttps
cld
ss
iret
jo
stos
sbb
lea
sub
jne
outsl
xchg
aas
test
ds
sbb
das
mull
or
jb
in
xor
fiadds
dec
scas
sbb
pushl
lahf
xchg
loop
data16
and
ss
insb
fbld
and
xor
xchg
imul
mov
sti
into
rorb
mov
adc
add
sub
mov
fwait
mov
popa
jmp
pop
movsl
int
loope
dec
xor
xlat
imul
je
dec
enter
enter
dec
mov
adcl
push
adc
not
jmp
mov
jecxz
lret
pushf
inc
push
jp
xchg
dec
cli
sti
mov
jnp
push
shlb
cmp
sti
or
mov
xchg
repnz
xor
test
imul
cmp
push
ficompl
push
mov
pop
inc
ss
and
callw
xor
xchg
rorb
pop
inc
out
mov
lret
adcb
sub
sub
stc
in
adc
daa
ja
push
fnstcw
adc
add
iret
dec
in
mov
xchg
imul
call
pop
inc
pusha
andb
push
xchg
daa
fisubs
push
xchg
adc
dec
mov
fwait
mov
fs
arpl
pushf
cld
sbb
mov
insb
out
das
dec
add
es
xchg
and
and
aad
fldcw
inc
add
sbb
cmp
fs
cli
and
lock
movsl
mov
cld
fisttpll
frstpm(287
dec
in
test
cmp
xchg
mov
out
mov
add
push
cmpsb
and
mov
nop
cmp
dec
mov
sbb
mov
shl
mov
or
inc
ja
imul
inc
jb
or
adc
adc
adc
lahf
mov
jne,pn
insb
push
adc
lods
xchg
mov
add
loopne
sbb
int
mov
movsl
fwait
idivl
sub
ja
rorb
loope
cltd
cmp
in
enter
testb
add
dec
sbb
cmc
add
mov
add
fsts
lods
shrl
and
jbe
mov
lods
xchg
and
inc
into
pushf
dec
dec
sti
mov
int
inc
cli
add
jno
repz
imul
xchg
inc
ss
inc
mov
and
xchg
aas
fnstenv
push
cmc
or
jbe
cmpsl
ror
or
inc
out
dec
sub
cld
dec
mov
xchg
sbb
push
iret
pop
call
cmp
ret
push
in
xor
pop
dec
mov
fildl
xchg
xor
push
cwtl
popa
sbb
push
add
jb
push
xor
mov
push
xor
mov
and
add
inc
sub
hlt
loopne
repz
leave
add
icebp
ret
push
notb
imul
sahf
bound
mov
mov
mov
das
leave
sahf
add
cltd
add
adc
add
mov
in
mov
xor
insl
je
sub
pushl
sub
loopne
mov
imull
mov
out
push
jge
xor
adc
out
dec
es
ljmp
outsl
xor
popf
fldl
fldenv
push
loope
adc
pop
pop
fdivs
dec
push
icebp
adc
cltd
cli
paddw
jmp
and
mov
dec
fdivl
mov
pcmpeqb
and
imul
push
daa
xchg
int3
shrl
inc
sbb
jg
adc
cmp
adc
jmp
sub
jbe
test
pop
push
jno
jl
and
les
jecxz
popf
aas
adc
xchg
push
call
in
out
jnp
fistpl
push
out
stc
enter
jo
xor
xchg
xchg
sbb
inc
sub
test
dec
mov
cmp
adc
out
mov
test
arpl
cmpsl
bound
jne
jmp
pop
jnp
inc
cmpsb
mov
and
popa
or
push
lods
add
or
fwait
aad
pop
aas
jle
push
adc
and
addr16
mov
stos
ss
and
jmp
ret
mov
and
sti
imul
pusha
mov
movsb
shll
add
insb
add
scas
mov
mov
cmp
pop
add
jge
sahf
add
mov
imulb
pmulhw
fdivl
insb
out
sub
mov
xor
and
or
ss
or
loop
lods
adc
mov
mov
or
dec
mov
push
aam
clc
cltd
pop
xor
or
sbb
outsl
cli
rorb
mov
shrb
js
and
vmovsldup
and
in
cltd
ss
imul
out
sti
stc
push
bound
push
movsl
rclb
test
pop
loope
insb
inc
sbb
andb
imul
add
cwtl
lcall
jne
or
cmp
lock
lods
hlt
pop
fidivl
mov
push
xchg
pop
out
movsb
call
and
mov
dec
jge
inc
mov
negb
jp
outsl
xchg
adc
inc
mov
mov
insl
cmp
pop
inc
push
rcrb
pop
das
add
cmpsb
cmp
subl
push
pop
inc
pushf
cmpsl
mov
add
shrb
lahf
add
cmp
inc
or
scas
dec
pop
mov
xchg
inc
pop
aad
cltd
test
sub
shlb
or
aas
cmp
int
adc
mov
jno
sub
adc
xchg
mov
adc
mov
push
xchg
cmp
xchg
insl
jmp
adc
pop
dec
imul
cld
aas
push
out
sub
aam
add
stos
cvtps2pi
mov
pop
iret
sbb
dec
daa
daa
shrb
int3
xor
mov
mov
hlt
adc
sbb
mov
jns
mov
nop
ss
jb
out
xor
outsb
push
jno
adc
das
mov
rcll
pop
sahf
inc
insb
mov
add
lret
dec
sbb
dec
xchg
rclb
test
mov
mov
in
fbstp
lcall
aad
test
xor
clc
cmp
add
pop
xor
xor
fldenv
icebp
inc
sbb
xchg
fimull
pop
testl
mul
imul
aaa
les
mov
pop
xchg
test
push
jno
sub
mov
cli
jno
pop
jo
mov
add
out
inc
mov
aad
out
das
jbe
or
push
dec
cmpl
or
inc
cmp
push
out
adc
ret
fs
cltd
jno
adc
lret
loopne
std
mov
add
pop
xor
imul
test
xchg
jmp
inc
pop
lds
fadds
sub
sahf
pop
imul
enter
xchg
lods
adc
movsl
sbb
mov
shrl
and
mov
orl
scas
mov
daa
cmc
pop
jp
inc
add
je
imul
sbb
enter
repnz
aad
pop
mov
lcall
jnp
mov
sahf
test
jbe
mov
jl
lds
adc
xchg
out
lods
lods
or
dec
jne
lock
sub
out
push
xor
rorb
pop
cwtl
inc
cmp
lahf
jl
addr16
xor
ret
fstpt
icebp
add
and
adc
imul
add
pop
jge
cmp
or
sub
mov
pop
pop
loope
js
lea
mov
movsb
adc
movsb
mov
stc
loope
insb
enter
ret
inc
frstor
loopne
dec
mov
lea
out
imulb
fisubl
sbb
cmp
lret
fcomip
cs
jo
jmp
inc
mov
sbbl
and
loope
pusha
in
sbb
xor
lahf
imul
mov
pop
jg
paddq
sbb
push
inc
shr
dec
xor
or
mov
push
mov
int3
into
fstpt
inc
xor
sub
imul
and
icebp
mov
es
repz
maskmovq
testl
push
or
mov
popa
insl
xchg
sbbb
insl
jecxz
test
aam
pusha
std
testb
sbb
movsb
mov
stos
xchg
clc
xchg
fwait
or
in
inc
mov
std
rcrb
jecxz
outsb
lods
mov
mov
pop
sub
push
pop
outsb
es
aaa
pop
cli
jns
data16
aaa
push
adc
stos
push
jo
int
mov
dec
neg
cs
pop
adc
test
mov
cmp
xor
and
jae
inc
xor
pop
mov
subb
push
push
loope
cmp
sbb
sahf
in
incl
into
mov
push
fs
xor
ja
xchg
addl
fbld
sub
test
std
movsb
cmp
sub
push
repz
push
sbb
shll
mov
gs
push
mov
mov
add
outsl
out
jp
jne
and
mov
mov
imul
xor
insb
sub
adc
and
sti
jnp
bound
push
push
cltd
insb
or
push
push
out
rcrl
mov
insb
push
enter
cmp
sti
stc
jnp
and
ja
push
pop
sub
xlat
pop
adc
cltd
arpl
lods
imul
sbb
pop
mov
ss
fldenv
sub
xor
test
lea
jle
fildll
fwait
push
mov
jl
iret
in
or
leave
adc
test
inc
ljmp
outsb
mov
out
add
pop
mov
adc
mov
in
mov
andb
in
xchg
dec
push
cmpb
inc
push
xchg
xchg
bound
lret
mov
fldcw
lret
mov
aad
out
xchg
jno
cmc
cli
adc
insl
stc
or
repz
rclb
in
jmp
je
ja
and
inc
pop
in
scas
mov
cmp
call
fstl
test
or
ss
movsb
xchg
mov
int
movsl
jle
fistps
popa
leave
xchg
xchg
cmc
mov
xchg
or
push
xchg
and
mov
pop
int
shll
push
dec
fldcw
xor
shlb
and
xchg
test
int3
and
push
decb
mov
clc
fisubl
addb
mov
stc
pop
insl
lods
dec
xchg
rcll
fldl
and
cmpb
popa
push
fwait
or
rcl
loop
inc
pop
in
hlt
aad
test
adc
inc
ja
pushf
cmc
dec
leave
fsubl
icebp
nop
dec
mov
fisubrs
xchg
lock
aas
xor
adc
fld1
push
mov
test
pop
shrl
fistpll
lret
fiaddl
and
sbb
aas
add
test
pop
scas
inc
mov
dec
dec
cli
push
inc
xor
xor
scas
cmpsl
insb
jg
cmp
fsubl
je
pop
sub
daa
jno
cmpsl
adc
xor
and
jge
cmc
cltd
sub
aad
adc
test
sarb
movsl
dec
mov
fldcw
das
add
and
mov
adc
or
fsubrl
mov
jle
cmp
mov
scas
push
mov
sbb
lcall
lahf
pop
ret
sahf
ja
out
dec
fwait
stc
xchg
push
and
cmp
and
repnz
scas
std
xchg
and
fcomp
lcall
add
inc
movsl
jnp
push
push
aaa
std
sbb
sbb
mov
xor
mov
sbb
push
fwait
mov
addr16
sub
inc
dec
and
lret
mov
shll
stos
push
popa
xchg
lcall
mov
scas
adc
stos
sub
mov
test
and
inc
in
ljmp
mov
enter
test
out
int3
jmp
loope
das
adc
sti
mov
test
in
repz
sbb
repnz
pop
xchg
jbe
add
icebp
psraw
hlt
divps
pop
sti
notl
pop
in
add
dec
mov
mov
rorl
cwtl
lock
mov
mov
push
push
icebp
xchg
imul
outsl
pusha
dec
loopne
sub
out
cmpsl
pop
cli
movsl
outsl
mov
repnz
insl
stos
mov
test
addl
ja
fistpll
loopne
pop
sub
aad
pop
xchg
cmc
lock
dec
daa
mov
arpl
pushf
rcrl
add
dec
adc
mov
ja
sub
addr16
lret
inc
inc
out
test
adc
sbb
out
xor
add
sbbb
lcall
mov
shll
jle
mov
sbb
xchg
mov
call
ds
mov
lock
and
jae
xor
scas
xchg
push
jp
std
mov
rol
sbb
bnd
jmp
pop
popa
mov
push
repz
movsb
mov
gs
repnz
sub
jp
in
sbb
test
sbb
in
das
loopne
mov
add
repz
or
inc
or
shrl
shrl
outsl
cmp
lds
cmp
fidivrs
popf
lret
in
in
test
mov
inc
stc
fwait
and
inc
out
decb
add
push
aam
or
xchg
jmp
add
aam
pop
cmp
repnz
inc
jbe
cmpsl
dec
in
sti
fcompl
cmp
add
js
mov
sub
jp
or
mov
jg
sub
dec
or
stos
and
testl
pop
pop
mov
sbb
lcall
xchg
jecxz
movl
inc
jle
sbb
add
andl
pop
xchg
imulb
daa
xchg
push
jno
dec
pushf
xor
mov
ds
ja
jbe
push
insb
mov
icebp
jne
dec
pusha
push
mov
push
aam
adc
sub
js
mov
lea
adcl
dec
ret
add
stos
or
lahf
sets
outsl
imull
inc
lret
mov
push
xor
stc
inc
mov
jnp
in
clc
roll
inc
loope
cld
addr16
mov
cld
add
pop
lods
push
or
mov
movsb
out
mov
fsts
xchg
inc
cmpsl
sar
or
push
test
lds
decl
mov
lahf
xor
data16
xchg
out
out
stos
arpl
fs
inc
sub
int
push
int3
fs
call
movsl
push
jge
mov
call
adc
bound
sbb
sbb
inc
mov
dec
iret
push
mov
cmp
scas
sbb
jne
mov
inc
cwtl
stc
fstpl
fdivs
push
pusha
sarb
xchg
rol
jmp
fstp
lea
push
push
fistpl
in
int
push
aas
pop
icebp
jnp
loope
xchg
leave
arpl
sahf
dec
xor
das
and
sub
in
dec
cli
push
loope
fistpll
test
jge
dec
cmpsl
jno
mov
out
test
inc
sahf
push
push
leave
jno
pop
pop
adc
dec
push
cmp
nop
and
movb
pop
add
add
out
shl
mov
dec
dec
shl
lock
hlt
pop
sub
rcrb
push
scas
test
add
push
out
data16
dec
pop
in
ja
adc
mov
mov
jl
insl
rcrb
subb
std
inc
in
push
popf
and
adc
dec
bnd
insl
rcrb
subb
std
inc
in
push
popf
and
adc
int
std
fisubrl
popf
mov
lods
xchg
frstor
jbe
inc
in
pop
popf
lea
mov
push
dec
push
jge
insl
xchg
sbb
add
fcoms
in
and
int
inc
adc
xor
and
add
xor
les
hlt
rolb
pop
inc
adc
xor
push
adc
and
xor
les
hlt
rolb
sbb
cmp
pop
add
adc
and
xor
insb
fwait
aam
add
out
rcrl
jo
adc
insb
or
dec
ret
lods
notl
mov
jnp
push
jno
inc
sub
call
adc
mov
and
sub
mov
js
hlt
jge
lea
inc
imul
push
sub
and
or
test
cmp
shrb
adc
stos
jo
mov
clc
mov
inc
out
subl
sbb
loopne
out
stos
jns
inc
mov
add
pusha
mov
cmp
mov
mov
push
shrl
pop
or
loopne
adc
std
jno
cltd
adcb
jg
outsl
aam
hlt
mov
add
lock
inc
adc
daa
je
add
adc
and
xor
les
hlt
fadds
fnsave
jne
inc
or
cmp
fs
mov
fidivs
test
adc
xor
xor
jo,pt
push
xor
mov
movsl
out
call
or
xor
cmp
adc
and
xor
les
hlt
rolb
add
and
inc
add
adc
and
xor
les
hlt
rolb
add
jns
pop
xor
dec
in
and
sbbb
fisubl
and
lret
push
mov
test
sbb
fisubl
aad
push
lcall
gs
jns
cwtl
xlat
fsubl
xor
cs
fimuls
es
lret
mov
sub
cmp
addr16
push
shlb
pop
in
and
cmc
in
jo
lods
sub
or
dec
les
mov
cmc
cmp
daa
sbb
jmp
mov
sbb
clc
dec
pop
test
xchg
enter
mov
inc
add
xchg
mov
and
sti
mov
xor
mov
std
xchg
ret
enter
cmp
stos
insb
cld
xlat
jmp
sbb
stos
daa
stc
xchg
cwtl
jp
or
fwait
mov
arpl
jbe
jg
pop
mov
or
and
aam
mov
movl
ljmp
add
xchg
cmp
and
mov
lods
outsb
mov
xor
dec
fs
xchg
imul
fisubs
pop
inc
jg
jo
xchg
filds
add
cmc
jbe
mov
out
push
cmp
and
popf
add
faddl
pop
clc
shll
insb
lret
pop
aas
inc
mov
scas
xchg
sub
addr16
jge
mov
std
mov
pop
push
mov
in
stos
xor
xchg
or
mov
jo
out
hlt
dec
in
sub
cmp
cmpsl
xchg
cmpsl
cmpsl
sub
mov
out
fidivs
rclb
xlat
cmpsl
int
cmpsb
sub
neg
jae
fs
push
in
mov
cmp
jnp
testl
sti
jmp
rcrb
hlt
icebp
or
inc
cmp
add
or
sbb
sub
dec
inc
adc
movsl
test
fdivp
in
xchg
fsubr
ss
fisubrs
int
mov
notb
adc
repnz
adc
xchg
inc
outsl
cmp
dec
out
mov
pop
xor
push
jge
cmp
or
xchg
cmp
sub
pop
mov
out
mov
jns
pop
hlt
xchg
xchg
add
dec
sub
bound
dec
jp
enter
movsb
popf
jns
jmp
imul
dec
pop
lods
popf
cli
ja
ss
add
aam
push
sahf
imul
dec
push
gs
push
lcall
jecxz
aad
add
push
inc
dec
leave
and
fadd
stos
sub
out
hlt
sub
pop
cli
push
loop
sahf
dec
jno
sub
fcoms
iret
cmp
ljmp
test
data16
sbb
insl
mov
lret
push
icebp
push
pop
mov
sbb
mov
test
mov
pop
fwait
pop
sub
hlt
jmp
shl
aam
or
cmp
inc
sarb
mov
stos
addr16
sub
inc
arpl
add
cmp
sub
xor
cmp
loop
inc
cltd
out
pop
idivl
lds
pop
flds
or
inc
push
fwait
cmp
in
loope
pop
ljmp
loop
or
mov
shlb
and
xor
dec
cmp
xor
and
jb
mov
push
or
paddw
jb
test
mov
popa
leave
pop
xor
or
aaa
add
push
mov
fstl
xchg
cmp
je
sub
inc
add
cmp
push
pushf
inc
mov
mov
push
sbb
stos
outsl
pop
int3
das
repz
adc
je
cmp
icebp
cmpsl
fistpl
inc
sub
adcb
scas
add
fadd
mov
test
push
popf
sub
cmc
inc
out
sub
cs
cmp
push
test
fildl
mov
pop
test
add
mov
or
rcl
xchg
xchg
mov
push
pop
outsb
adc
or
push
xor
iret
dec
add
in
pusha
out
std
mov
inc
add
icebp
insl
aad
outsb
popf
lahf
mov
push
in
mov
lea
adc
push
test
int3
add
je
ficoml
or
aaa
fsts
repnz
sub
pusha
adc
repz
shrb
jmp
add
lock
jae
mov
sti
xchg
xor
xchg
nop
mov
scas
mov
inc
pop
repz
jle
movsl
pop
sbb
jmp
dec
and
fcmovnb
sub
mov
fbld
jo
pop
inc
pop
push
xlat
mov
pop
scas
popf
das
es
jge
hlt
enter
out
and
cmp
push
inc
mov
cmpsb
sbb
enter
jnp
sti
mov
out
or
mov
and
repnz
test
in
loopne
mov
sti
and
push
or
xor
mov
out
add
cltd
cltd
inc
cli
jp
pop
mov
xlat
clc
pop
xchg
mov
sub
jl
enter
adc
arpl
jne
push
dec
xlat
pop
lret
mov
rorb
xchg
push
xchg
pop
es
scas
aaa
ja
cld
shrb
int
mov
pop
mov
je
dec
pop
test
stos
mov
xor
cmpsb
fcoms
subl
jo
and
mov
inc
pop
xchg
movsb
mov
jo
in
push
xchg
xor
stos
lods
shlb
fstp
adc
out
fs
ljmp
jae
and
sub
cmp
lods
out
jae
pusha
adc
or
test
push
icebp
jne
fs
stos
jns
lock
cmp
dec
cmc
inc
inc
mov
cmp
pop
xchg
xchg
mov
ljmp
pop
pusha
sub
out
xchg
xchg
sub
adc
add
mov
les
stos
jb
sar
push
mov
push
out
jmp
cmp
and
enter
mov
xor
inc
lods
pop
adc
push
and
xchg
mov
lds
pusha
jp
stc
adc
cmp
xchg
cld
roll
xor
mov
xor
xchg
push
mov
fistpl
jb
xchg
sbb
push
cmpsb
adc
jno
icebp
idivl
dec
and
insl
rclb
call
fisubrl
xor
out
jecxz
dec
js
sarl
mov
enter
jecxz
or
out
jbe
cmpsl
add
xchg
push
inc
imul
nop
xor
popf
addr16
push
in
negb
out
adc
aam
mov
xor
inc
loopne
fwait
push
bound
mov
mov
cmp
inc
shlb
pop
and
cmpsb
adc
movsb
ljmp
movsl
dec
roll
jno
adc
jge
or
sub
addl
xor
js
push
stos
fmuls
mov
push
inc
dec
sub
push
xor
dec
int
jmp
sbb
cmpsl
lods
aad
jmp
mov
ss
or
pusha
inc
or
inc
and
sub
gs
and
aas
pop
push
cmc
push
gs
adc
stc
mov
bound
add
jo
shl
ret
repnz
iret
adc
cwtl
add
xchg
jl
mov
iret
ss
loopne
sbb
ret
aaa
cli
adc
cmp
sbb
and
mov
xchg
pop
push
fidivl
and
test
adc
lea
xor
movsb
adc
mov
lds
into
imul
xlat
cmc
xor
adc
pop
cmpsb
ljmp
mov
js
daa
pop
aam
cmp
cmp
sub
push
scas
shll
xor
lods
fcmovnb
je
jne
cmpsl
pop
int3
or
int
sbb
lods
in
out
bound
icebp
addr16
aad
inc
push
sbb
dec
push
imul
mov
xlat
sub
je
pop
clc
sub
fsubl
adc
mov
cmpsb
addb
popa
cs
pop
insl
pop
shll
mov
ja
xlat
jge
xchg
rclb
push
mov
lods
ja
addr16
sub
and
adc
xchg
adc
jmp
cmpsl
xchg
jecxz,pt
xchg
orb
out
add
insb
cltd
out
inc
xlat
pop
lods
jmp
imul
inc
dec
mov
sti
and
pop
mov
pop
mov
inc
sub
xchg
out
pop
aad
inc
pushf
adc
jp
inc
xchg
xor
mov
add
imul
inc
jo
inc
mov
cmpsb
xchg
call
ja
sbb
stc
imul
jb
ljmp
ja
xor
xor
add
or
fdivrl
inc
lcall
jp
jo
and
cld
cmp
push
xlat
roll
aas
rcll
scas
in
mov
push
inc
inc
insl
cmp
add
push
jae
mov
hlt
test
mov
and
dec
xchg
xor
movsb
sbbb
loope
xor
pop
xorb
ja
inc
nop
sub
lods
pop
or
lods
call
dec
push
push
shlb
test
imull
sub
imul
iret
pop
insb
mov
jp
cmc
shrl
je
sarb
in
xchg
sti
adc
arpl
fs
pusha
cld
mov
or
aam
mov
cmp
cmpsb
dec
push
ja
add
ljmp
or
enter
cmp
repz
stos
rcll
add
mov
das
mov
pop
and
mov
test
jl
add
or
fnsave
jbe
mov
pop
sbbb
sahf
ret
adc
leave
sarl
sbb
das
xchg
popaw
mov
test
mov
mov
jp
std
nop
push
pop
mov
gs
pop
pop
iret
out
nop
xchg
stos
inc
mull
jns
bound
cmp
out
cmp
pushl
enter
in
cmp
mov
lods
sub
adcb
fbstp
aad
sub
jl
int3
inc
call
xlat
cmp
mov
jle
and
and
push
mov
clc
pop
filds
lds
inc
enter
mov
add
pop
mov
call
sarl
xor
push
rclb
xlat
lods
or
jbe
insb
jle
pop
pusha
negl
inc
fsubrl
dec
adc
and
std
dec
push
pop
cli
or
or
pop
mov
xchg
adc
lcall
inc
and
jb
mov
mov
lods
lock
fs
xor
aaa
daa
je
or
lret
mov
test
mov
nop
mov
shll
lcall
jecxz
xchg
aam
pop
inc
and
jg
cmp
js
jle
mov
mov
push
aam
fs
cmp
dec
loopne
push
lret
fs
cs
subb
inc
and
lds
bound
repz
rolb
jmp
imul
sbbl
inc
add
int
xchg
pushf
call
adc
sub
out
push
lahf
add
adcb
adc
fwait
adc
movsl
lret
or
pop
clc
xor
lods
in
jo
int
call
dec
lret
lods
inc
sbb
sbb
lds
idivb
pushf
jo
loope
mov
xchg
nop
mov
idivl
test
dec
or
out
dec
jp
stos
in
loope
adc
inc
scas
lock
and
ja
lahf
jmp
scas
mov
hlt
mov
or
sub
in
pop
cmp
jae
loope
or
adcl
sti
iret
mov
jle
inc
mov
sbb
push
je
incl
push
leave
or
lret
mov
mov
movsb
and
int
adcb
stos
scas
fmuls
mov
mov
xchg
int3
cmp
pop
fcmovb
loope
xlat
out
test
mov
dec
mov
lret
cld
mov
xchg
ret
cmpl
sub
in
inc
notb
ret
fdivl
pop
inc
or
in
pop
std
pop
cmc
push
mov
xor
and
add
mov
or
add
pop
sti
jp
in
scas
lds
push
push
in
dec
stos
adc
in
les
mov
push
dec
jl
xor
and
xor
adcl
stc
push
hlt
sahf
test
pusha
lea
cmc
add
dec
icebp
adc
scas
cmp
pusha
js
bound
adc
pop
mov
pushl
test
add
clc
add
and
faddl
add
jae
test
pop
out
dec
sub
xchg
pop
adc
inc
dec
cs
pop
iret
cmp
ja
push
scas
mov
and
xchg
pop
cmp
sahf
jbe
fisubrl
jnp
das
sbb
in
test
mov
lcall
pop
adc
in
or
dec
xor
js
test
mov
pop
sbb
sub
mov
in
std
mov
sar
or
daa
ds
ret
mov
lret
pop
xor
mov
out
mov
gs
pop
push
push
mov
es
rcrb
sub
mov
aas
into
fstpl
int
add
clc
cltd
loop
loopne
loope
mov
arpl
mov
arpl
jno
test
pop
mov
sahf
xor
mov
lods
sub
mov
add
aaa
rclb
xchg
arpl
rcll
in
dec
dec
jo
jp
add
xor
mov
sub
addr16
into
shl
bound
lcall
cmp
xor
aam
mov
or
ds
push
sbb
lret
cmp
pop
test
dec
loopne
mov
repnz
cmpsl
jbe
xor
dec
sbb
push
mov
inc
push
or
cmp
loope
in
dec
adc
nop
cwtl
lods
add
sub
in
mov
jns
mov
loopne
loopne
into
push
pop
pop
add
or
clc
ficomps
loope
int
je
sbb
inc
xchg
jno
or
and
sbb
push
in
mov
stos
fwait
adc
fsubl
das
or
push
paddsb
push
ss
int3
mov
jge
cmc
push
sub
int
fisttpl
jge
inc
cmp
lds
xchg
jo
dec
mov
testl
scas
xor
pop
es
fisubl
mov
repnz
pop
add
sub
sub
fistl
in
enter
cmp
jb
mov
adc
jnp
sbb
inc
or
adc
aam
mov
push
mov
sub
imul
addr16
jp
adc
dec
jns
or
push
jmp
repz
cmp
fucomp
scas
mov
xchg
jnp
hlt
inc
inc
cmc
adc
cmc
and
into
sub
or
cs
gs
in
adc
push
sbb
mov
scas
stos
jge
arpl
cli
dec
lret
out
pop
outsl
sub
mov
in
push
out
pop
mov
in
ss
mov
push
inc
bound
fldcw
decl
dec
push
or
lret
or
or
xchg
inc
jg
push
pop
push
test
sahf
lock
mov
orb
in
xor
or
and
sahf
dec
rcrl
mov
jns
push
shrb
clc
and
stos
push
fldl
aaa
insl
outsl
mov
leave
pop
jae
push
pop
sbb
pop
inc
jmp
cmp
sti
in
mov
les
push
mov
fimuls
loop
mov
ss
insb
pop
jns
mov
sbb
mov
inc
enter
mov
repnz
mov
or
sbb
push
outsl
loop
add
stc
or
push
jle
mov
test
sti
leave
leave
pop
or
imul
gs
hlt
bound
sub
mov
pop
xchg
jecxz
dec
and
or
gs
jmp
stc
cmp
sub
ret
adc
fwait
arpl
js
repz
xchg
mov
mov
sub
shll
subb
mov
mov
cmpsl
adc
xor
dec
jbe
stos
ss
shrb
push
int
movsb
inc
lock
pop
inc
cmp
xor
rcr
sbb
mov
mov
and
pushf
mov
in
aam
in
jne
test
add
and
roll
cmpb
ds
mov
outsb
popf
test
lods
loop
aas
bound
push
pop
xor
xor
inc
mov
xchg
jnp
jne
jmp
cli
int3
push
jmp
dec
popf
subb
das
pop
lret
es
push
xchg
repnz
test
popa
lods
sub
in
push
sbb
push
inc
fadds
lods
mov
mov
popf
xor
lret
jb
out
cmp
dec
shrl
lret
adc
pop
movsb
loop,pn
push
sbb
mov
ja
mov
ds
push
cmpsb
cmp
add
shr
call
sub
stc
add
push
dec
lock
inc
mov
insb
add
xor
les
sbb
je
xchg
inc
pop
ret
pop
cmpsb
ljmp
pop
negl
cwtl
out
ret
pop
and
jbe
push
fnstsw
bound
push
inc
cmp
pop
jmp
mov
cmpsb
repz
adc
mov
sbbb
cli
rorl
mov
cmp
stos
adc
pushf
cli
and
dec
or
xchg
iret
sbb
sub
sub
adc
xchg
xchg
inc
outsb
negl
sub
mov
outsb
jbe
adc
adc
push
popa
jecxz
push
insb
pop
imul
jae
or
mov
jecxz
in
adc
nop
pop
and
xchg
call
enter
fidivrs
push
sbb
dec
mov
pop
aad
imul
in
ret
sub
clc
fcmovu
aas
mov
and
cmc
xchg
pop
adc
loop
or
ds
in
scas
mov
push
xchg
out
out
mov
push
stos
dec
imul
flds
jecxz
push
arpl
in
mov
pop
xchg
ljmp
pop
xor
stc
adc
arpl
cmc
sub
insl
sti
inc
or
or
fdivrl
xchg
dec
mov
push
pushf
adc
mov
and
cmp
ds
xchg
adc
inc
out
cli
icebp
push
sbb
lret
adc
sub
loope
jbe
add
pop
mul
xlat
gs
add
call
or
xchg
push
loop
dec
inc
cs
subb
sbb
xor
out
cmp
cli
test
scas
jbe
cmp
loop
push
xchg
xor
call
aas
mov
and
cltd
lds
jmp
cmp
mov
movb
out
dec
mov
in
scas
nop
mov
daa
cmp
pop
pop
lcall
mov
cmpsl
add
push
dec
daa
lcall
add
popa
xor
cli
int3
shrl
xchg
xorl
cmpsl
mov
dec
push
insb
pop
or
imul
into
jg
in
fidivrs
jbe
imul
mov
int
inc
clc
pop
adc
in
ret
lea
sub
sub
pop
aas
rorb
cmpsb
cmpsb
push
outsb
push
ret
and
cmpsb
adc
imul
sub
sbb
mov
add
sbb
xchg
xchg
lahf
mov
adc
inc
aam
pop
xor
adc
imul
jbe
mov
imul
insl
out
hlt
bound
cwtl
pop
sbb
and
and
or
mov
sahf
sub
sub
das
pop
jae
push
shrl
xchg
sbb
aas
push
and
inc
xchg
mov
inc
aas
pop
adc
and
cmp
adc
icebp
sub
hlt
add
daa
lods
sub
inc
sbb
xchg
inc
pop
imul
fbstp
mov
sbb
popl
f2xm1
xor
mov
repnz
cld
les
loope
xchg
ss
dec
std
xlat
ds
or
or
mov
xorb
aaa
rcll
mov
pop
inc
sbb
ja
add
js
push
xchg
lods
mov
out
cmp
lret
push
enter
pop
fcmove
insb
jmp
xor
mov
dec
xchg
imul
add
nop
cs
je
pop
mov
and
push
adc
std
adc
push
data16
fxch
dec
mov
xchg
sub
nop
mov
pop
leave
pop
inc
sbb
mov
jmp
in
pop
ret
inc
lods
mov
add
jae
mov
inc
aaa
movsb
xor
enter
inc
shrl
jne
mov
or
cmpsb
imul
mov
insb
mov
icebp
andb
pop
dec
or
xchg
inc
push
lahf
js
push
cs
or
popf
loop
enter
mov
repz
push
mov
add
adc
and
xor
les
hlt
rolb
add
and
inc
add
adc
and
xor
les
hlt
rolb
add
and
xor
push
xchg
pusha
and
xor
inc
nop
aam
in
hlt
rolb
xor
and
push
xor
push
adc
and
xor
les
or
mov
mov
pop
imul
cmovnp
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
addb
aaa
mov
sub
xchg
add
push
xlat
inc
out
out
pop
addb
aaa
mov
inc
bnd
adc
push
xchg
and
jb
out
push
addb
das
mov
pop
repnz
loop
adc
push
ret
xor
or
outsb
incb
lods
pop
mov
shll
cmp
cmp
sti
and
dec
cmovbe
mov
int
js
xchg
out
addr16
std
outsl
imul
xchg
jp
lcall
push
dec
inc
jns
xchg
mov
adc
fs
and
movl
pop
xchg
aaa
dec
pop
shlb
xchg
das
loop
add
les
push
lret
test
cmp
push
out
enter
ja
mov
jp
ja
and
div
popf
sbb
and
aaa
daa
in
xor
cmpsb
or
ljmp
scas
mov
test
jae
arpl
int
adcb
daa
mov
inc
repnz
loop
adc
and
jb
bound
fidivs
in
es
add
or
mov
pop
loop
enter
xchg
pop
notl
mov
outsl
roll
inc
ljmp
adc
out
ret
inc
in
movsl
xor
in
lods
xchg
cmp
inc
bnd
adc
xor
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
inc
jb
out
pop
xchg
mov
xchg
xor
or
es
in
mov
outsl
dec
pop
rorl
inc
jnp
or
bound
test
push
xchg
xlat
orl
pop
xor
addr16
cmpsl
jle
fstps
inc
or
lods
mov
push
mov
mov
int
mov
cs
adc
stos
mul
adc
sahf
pop
cmpsb
ljmp
lcall
cmc
push
jne
sub
ret
cmpsl
lret
or
push
and
jge
lret
pop
jecxz
push
pop
imul
jle
out
jle
jge
incb
mov
xchg
and
ret
sahf
jmp
mov
xchg
push
pop
lods
xchg
lods
dec
mov
mov
mov
aad
inc
mov
pop
popa
popa
inc
cmpsb
sti
mov
sub
xchg
lret
push
xchg
jecxz
fcoms
mov
jl
xchg
adc
push
xchg
outsb
sub
outsb
addr16
dec
lahf
xor
call
outsl
stos
push
fdivrp
or
das
mov
sub
cmp
sarl
std
mov
shll
lds
and
sub
cmp
test
jmp
rol
xor
fwait
stos
jne
movl
mov
test
xchg
mov
ret
addr16
xchg
xor
cmp
shrb
pop
js
clc
data16
sti
inc
jg
jmp
movsl
adcb
mov
add
loop
jb
andl
inc
jns
add
fidivs
cmp
jnp
in
mov
push
mov
cmp
add
mov
fcmove
icebp
jb
sub
or
pop
pop
outsl
lock
mov
inc
imul
popa
stc
cmp
dec
xchg
divb
lret
cltd
fwait
and
xchg
nop
js
mov
dec
jnp
pop
js
add
fistps
aad
mov
push
lods
repz
mov
mov
sbb
cmp
daa
mov
rcrl
nop
cmp
xor
sub
scas
dec
adc
out
clc
or
dec
xchg
mov
push
inc
pop
pop
enter
imul
cmp
sbb
movsb
imul
fldl
mov
pop
xchg
sbb
sarb
mov
jns
mov
add
fstl
sub
repz
jge
test
jo
sbb
fidivrl
dec
or
adc
pop
lea
es
mov
and
movsl
mov
addr16
out
fwait
sub
ljmp
call
lds
lret
cmpsb
test
popa
mov
ret
int3
sbb
dec
xchg
movsl
jno
ret
jle
fmul
xchg
filds
fs
mov
fidivrs
pop
in
rol
test
pusha
js
sub
hlt
jecxz
sahf
jge
sub
mov
pop
stos
nop
nop
adc
pop
xchg
inc
lahf
out
fnstsw
in
sbb
hlt
pop
ss
pop
sbb
or
scas
outsb
jg
scas
push
jle
and
sub
kunpckbw
bound
mov
movsl
insb
mov
pusha
cmpl
or
pop
fmul
mov
mov
repnz
imul
adc
repz
cwtl
adc
or
shlb
jns
or
es
js
cmpsl
xlat
or
mov
jecxz
push
jno
rclb
cltd
mov
test
ret
test
popl
mov
icebp
push
and
jbe
shr
add
out
pop
inc
shll
fiaddl
mov
pop
jmp
test
shrb
lds
push
inc
test
sbb
push
sarb
jb
mov
sub
inc
nop
outsb
jbe
mov
add
rclb
sbb
aad
rcrb
dec
push
cmp
ret
out
push
jge
fwait
cltd
dec
inc
gs
jo
ds
int3
rolb
adc
xchg
in
jb
stos
in
fldenv
pop
mov
add
or
inc
icebp
pop
xor
xchg
clc
mov
xlat
les
movsl
mov
jo
sbb
inc
and
xor
sbb
aas
rcrb
pop
mov
aaa
lock
and
sub
sbb
lahf
js
push
push
rcrb
and
xchg
cmp
lcall
adc
cmp
or
jno
jnp
loopne
popl
push
test
cs
cmpsl
or
popl
or
sti
xchg
repz
movsb
es
push
cmpsl
or
jnp
lods
out
mov
repnz
enter
cwtl
xchg
mov
fisubrl
mov
inc
aam
iret
or
pop
mov
aad
cwtl
add
lods
shrl
imul
mov
sub
fwait
xor
test
jmp
push
aaa
mov
into
mov
inc
add
xchg
das
push
stc
test
gs
add
push
test
add
adc
dec
dec
into
jne
jge
xor
xor
je
pop
cmp
push
enter
sub
ja
sub
rcl
rcrl
pop
pop
and
xchg
xor
adc
movsb
jmp
jl,pn
sahf
sub
or
add
test
fisttpl
es
or
fistps
fwait
ljmp
fwait
xchg
lods
sub
mov
sub
xchg
popa
inc
loope
in
xlat
aaa
out
mov
inc
ljmp
fldt
daa
adc
mov
in
into
jp
shr
dec
add
jmp
push
and
nop
lahf
push
push
out
scas
and
mov
adc
or
add
test
dec
inc
call
dec
adc
adc
add
push
or
mov
cmp
shlb
and
fistl
stc
adc
jb
sahf
inc
mov
in
and
mov
or
cs
mov
xchg
inc
je
sub
scas
inc
inc
fcmovne
cld
pop
dec
testl
dec
iret
jno
aaa
idivl
xor
stc
cmp
dec
fmull
inc
hlt
fwait
ja
loope
lock
mov
inc
test
inc
rcrl
out
int3
or
frstor
dec
fcmovbe
repnz
movsb
stos
cmp
mov
pop
push
ljmp
sahf
mov
aad
inc
jmp
inc
jns
lods
les
mov
xchg
aaa
test
mov
push
mov
jecxz
in
pushf
inc
xchg
mov
xchg
pop
add
lods
sbb
bound
insb
inc
syscall
andl
lds
jg
jnp
popf
ljmp
mov
mov
xchg
in
xchg
clc
test
add
cmp
and
stos
popa
rclb
out
fnsave
lret
jo
jae
aam
bound
outsb
in
leave
fldenv
inc
sub
loopne
sub
lcall
fisttps
mov
push
incb
into
add
mulb
jo
loope
inc
sub
insb
hlt
add
sub
xchg
xor
movsl
push
cmc
sub
fs
test
in
sbb
sbb
push
add
or
mov
or
ds
xor
inc
pop
cs
xchg
bnd
aaa
pop
ljmp
dec
cwtl
int3
or
xlat
and
mov
push
mov
cwtl
dec
out
lods
cmp
cwtl
cmc
pop
push
imul
dec
scas
sbb
sti
push
push
test
rorl
imul
cmp
loop
stos
adc
pop
xchg
fisubrl
fwait
mov
cmp
movsl
js
outsl
push
dec
mov
cmp
scas
pcmpgtd
cli
mov
sahf
add
int
mov
xor
push
pop
and
ret
jmp
inc
leave
popf
pop
inc
inc
cmp
jae
aaa
into
xor
cmpsb
in
pop
xor
iret
mov
mov
scas
fadds
cld
and
sti
sub
inc
mov
pop
fcomps
lcall
xor
pop
enter
into
adc
lock
notb
mov
test
push
mov
in
loop
sbb
push
scas
fnsave
cmpsl
mov
push
into
movsl
out
movsl
stos
rcrb
sub
pop
aaa
xchg
rcl
add
xchg
and
inc
or
mov
sbbl
cmpsl
push
or
mov
xor
add
movaps
xchg
push
fmull
cmpsl
xor
addb
sbb
nop
into
dec
push
lds
push
mov
push
in
cwtl
in
out
pop
fsts
add
push
pop
ds
imul
mov
jb
cmpsl
out
fisttpl
lods
jae
lcall
call
mov
sbb
push
fnstenv
ss
xchg
and
scas
or
push
jge
and
push
shlb
cld
dec
shll
add
pop
sbb
insb
stc
jbe
popf
xor
mov
outsl
cld
add
sbb
push
mov
popf
or
dec
mov
int
mov
cld
sub
inc
ficoml
mov
mov
lret
hlt
push
or
fwait
shl
xchg
out
loopne
mov
jne
mov
mov
adc
sti
fstpt
fistpl
pop
dec
out
aas
adc
pop
pop
push
mov
push
dec
and
lods
pop
mov
pop
mov
xchg
jno
stos
imul
inc
in
xchg
mov
cmp
mov
mov
jbe
jl
pop
sub
push
out
xor
shrb
dec
fsubp
shll
iret
push
xchg
stos
jmp
mov
jg
lahf
lahf
mov
adc
out
fwait
mov
insl
sti
inc
xchg
loop
push
push
or
dec
jecxz
jecxz
inc
lcall
incb
mov
sahf
pop
jl
and
icebp
mov
jo
push
mov
stc
xchg
dec
call
and
add
sub
outsb
shl
lds
lock
gs
mov
xor
and
mov
sar
insl
in
ja
outsb
aad
lea
pop
das
mov
jl
cltd
xor
ret
dec
xor
push
rcll
xchg
inc
pop
ja
pop
dec
sub
std
sbb
loopne
scas
mov
sub
stc
inc
jl
popf
pop
loopne
pop
lcall
lock
mov
int
xchg
push
pop
insl
sbb
movsb
pop
insl
jo,pn
ja
inc
int
aaa
call
jge
fs
out
inc
leave
loop
push
push
test
sub
dec
insb
pop
xor
in
inc
and
testb
out
ja
or
adc
in
scas
mov
test
lret
pop
bound
dec
in
add
sub
sbb
xor
pop
inc
mov
inc
popa
mov
imul
cld
mov
push
fwait
fwait
push
lcall
or
fistpl
ss
push
inc
and
decl
ja
pop
mov
popa
shr
je
loopne
jmp
movsb
push
daa
addl
mov
lds
ror
fwait
pusha
data16
lret
hlt
lea
xchg
xor
push
mov
inc
iret
fs
gs
and
fisttps
cmp
adc
mov
shll
adc
push
arpl
cmpsb
movsl
push
or
inc
xchg
int3
or
sub
scas
pop
jbe
in
adc
adc
mov
mov
cld
jle
sub
and
rcll
pop
lods
stos
jmp
test
call
or
gs
inc
xchg
insl
pop
outsl
dec
mov
jns
and
mov
imul
mov
jl
xchg
mov
mov
jo
lea
sbb
pop
idivl
ljmp
xorb
xchg
ret
int3
mov
lods
cmp
dec
inc
cmc
and
mov
mov
xchg
and
repnz
out
dec
outsb
mov
or
outsl
mov
fdivl
icebp
popf
inc
or
adc
jmp
pop
cld
outsb
cmp
or
gs
idivb
into
jnp
push
aad
outsb
jbe
xchg
cmp
gs
das
lret
add
pop
cmp
push
push
push
push
dec
cmpsl
insl
push
xchg
cwtl
ds
sbb
adc
mov
mov
cmpsl
pop
loope
loopne
mov
xor
stos
adc
fists
les
jne
sbb
mov
mov
mov
frstor
push
scas
cmp
pop
leave
mov
jno
in
add
cld
pushf
aad
setbe
cmc
or
mov
rolb
clc
mov
xchg
imul
in
pop
test
push
pop
les
mov
inc
les
inc
xor
cltd
and
in
sbb
or
mov
sbb
aam
or
jp
shll
push
adcl
imul
call
pop
in
add
in
xor
xchg
pop
testb
in
and
test
pop
mov
data16
fdivrs
shrb
sbb
push
sbb
sub
add
dec
dec
fwait
test
jnp
insb
pusha
test
pop
lock
ret
cmp
push
mov
mov
push
dec
loopne
pop
notl
xor
mov
jno
stc
xchg
adc
cltd
inc
mov
repnz
or
jns
mov
xchg
ret
pop
test
xor
mov
mov
mov
xchg
into
adc
xor
adc
sbb
cmp
adc
inc
loope
repnz
push
aas
pushf
adc
loop
pop
cmpsl
push
js
jle
add
in
rolb
out
jl
xchg
inc
ja
in
scas
jl
jns
lret
loopne
mov
cmpsb
and
sahf
scas
ljmp
xchg
cmp
subb
repnz
mov
testl
mov
lods
jg
pop
mov
rcrl
mov
test
cltd
orl
or
into
mov
add
add
ret
mov
nop
rol
das
cmp
rorl
pop
in
fimuls
jge
pop
in
out
mov
jg
pop
test
add
pop
aad
dec
into
pop
push
insb
in
mulb
out
pop
xchg
lods
aam
sbb
ja
mov
aam
xchg
movsb
iret
shrb
ds
cli
push
cmpsl
sbb
and
add
dec
lods
cmp
rorb
xchg
jl
ss
popf
pop
lcall
out
cmp
pop
je
stos
test
and
push
cli
mov
sti
inc
icebp
dec
sbb
mov
daa
cmp
call
mov
xchg
fwait
pop
test
sahf
cmp
push
icebp
jno
leave
out
mov
js
push
push
cwtl
arpl
mov
xlat
cli
pop
mov
dec
psadbw
out
lcall
jle
pop
dec
pop
sti
repz
in
mov
leave
and
call
aas
lcall
aaa
andl
cmp
popa
sahf
mov
jmp
cwtl
lahf
ss
push
jb
das
int
jbe
pop
scas
add
loop
lods
push
jl
mov
out
sahf
std
cs
xchg
pminub
inc
mov
cli
cmpsl
data16
in
jmp
iret
ds
aam
pop
call
mov
xchg
add
sub
daa
hlt
fisttpl
jnp
movsl
cwtl
mov
or
pop
inc
test
inc
cli
fmuls
cmpsl
mov
xchg
loopne
xchg
leave
inc
fcoms
cmp
ret
mov
shl
aam
int3
repz
les
sbb
push
xchg
das
xchg
push
mov
sub
inc
sub
dec
or
dec
pop
xchg
sbb
es
aaa
rcr
jns
mov
mov
mov
sbb
push
jnp
rcr
push
adc
out
or
push
adcl
xchg
sbb
subb
cmp
fstpt
addl
dec
shl
mov
ret
jne
or
inc
dec
push
pop
push
xchg
add
pop
dec
pop
pop
xor
xchg
pop
bnd
fwait
mov
iret
jecxz
dec
jno
in
fucom
pop
ret
rorb
loop
jl
add
pop
jnp
lret
test
push
adc
cmpb
ss
addr16
xchg
cmp
arpl
and
das
ret
into
shlb
leave
ja
in
decl
cltd
data16
decl
pop
clc
sti
ret
popa
insb
insb
mov
or
dec
filds
fists
insb
insl
lods
dec
push
outsb
adc
fldt
sub
dec
xor
ret
subb
xor
int
push
ljmp
dec
and
cli
fs
jl
jns
xchg
out
inc
dec
pop
aam
aaa
enter
mov
cmpsb
mov
jg
bound
mov
inc
js
push
sbb
outsb
sub
lds
loop
dec
insl
aaa
movsb
hlt
pop
lds
jo
mov
jnp
mov
jbe
bound
bound
dec
shlb
pop
movsl
fcomi
xchg
cmp
arpl
cmp
mov
in
sub
cmp
ret
mov
rolb
out
call
das
nop
inc
stc
xchg
fwait
jle
xchg
fs
in
out
out
push
lahf
lret
lahf
jp
sarb
cmc
popf
subl
cmp
xchg
pop
inc
mov
ljmp
mov
pop
sarl
cltd
jnp
mov
ja
das
adc
fisttps
sahf
out
push
cmp
pop
jp
movsb
mov
mov
leave
inc
sti
mov
mov
push
inc
pop
xchg
adc
mov
shlb
adc
mov
cwtl
imul
adc
cmc
scas
push
pop
jecxz
or
testb
xchg
cs
add
push
adcl
cmp
jne
jo
push
mov
push
iret
pop
fwait
and
push
sarb
aaa
daa
out
sub
sub
xor
imul
mov
pop
mov
adc
lret
shlb
lahf
xor
ss
dec
cmp
jns
pop
push
scas
mov
nop
std
sub
pop
push
lahf
loop
gs
testb
pop
push
je
fldl
jb
and
scas
das
fldenv
dec
lds
jbe
fldcw
lods
or
gs
or
std
sub
fdivrs
or
iret
popf
xor
test
rcr
ret
cmp
sbb
cwtl
hlt
cld
fscale
jne
pop
mov
mov
push
cld
pop
aad
popa
cmp
ret
lret
sub
movsb
jle
sub
stc
hlt
repnz
push
dec
cmc
scas
jae
in
cmp
sbb
aaa
out
jle
int3
aas
out
inc
lea
push
cmp
jno
xchg
orl
rcrl
mov
sbb
cmp
or
sbb
ss
jp
negl
lahf
outsl
lcall
pop
mov
or
enter
sbb
xchg
mov
imul
push
bound
cmc
daa
pop
jbe
stos
cld
xchg
xchg
mov
jbe,pt
stc
cmpsb
scas
push
jns
out
shll
stos
in
mov
jns
aam
stos
arpl
push
jle
aad
jae
push
popl
mov
scas
dec
pop
pop
pop
rol
and
clc
cwtl
test
call
ret
mov
jo
fistl
jecxz
insb
int
js
sbb
mov
loopne
repz
js
int3
scas
repnz
dec
movsl
test
lods
jno
sub
pop
xchg
add
cmp
ja
jb
fld
sbb
roll
bound
cmpsl
mov
arpl
jae
inc
inc
out
xlat
cmp
mov
push
lahf
adc
jae
imul
sbb
adc
cmpb
gs
cltd
jo
add
cmpsl
out
sarl
add
sub
xlat
in
jns
mov
inc
pop
push
loop
and
push
aaa
outsb
xchg
sbb
sub
insb
pop
xchg
bound
lds
lods
xchg
cmpsl
adc
adc
push
or
insb
lods
cs
cmp
fsubs
adc
pushf
jbe
pop
mov
pop
cmp
xchg
movsl
aaa
xor
lods
clc
push
cmp
adc
add
sub
dec
push
in
mov
adc
daa
jnp
mov
aad
push
popa
repnz
mov
out
xchg
test
and
mov
int3
xchg
push
push
or
sub
cmpsb
punpckhwd
mov
leave
xchg
stos
dec
jns
sub
movsl
push
inc
fdivrs
in
dec
rcr
in
mov
or
cmp
das
divb
xor
mov
imul
jle
jp
push
mov
jecxz
lret
add
stos
ret
jg
xchg
in
lods
push
jmp
fldenv
and
repz
xor
cmpb
into
lret
insb
mov
add
adc
mov
adc
jmp
jl
sub
mov
and
jb
lds
les
cltd
push
mov
lods
and
sbb
cmc
ret
lock
and
sbb
imul
sub
test
cli
out
dec
xchg
andb
into
arpl
sub
rorl
cld
aad
mov
movsb
sti
mov
sub
and
clc
into
rolb
filds
rcr
fildl
in
inc
loope
jns
movsl
jns
inc
lea
and
or
inc
pop
jnp
adc
cmp
sub
mov
push
pop
test
leave
xchg
mov
mov
sub
sbbl
rcr
pop
das
lock
shrb
int3
repz
sub
fisttpl
xor
filds
jbe
fwait
xor
inc
nop
imul
stos
cld
pop
mov
addl
pop
adc
xchg
call
xchg
adc
cmp
mov
ljmp
cmp
mov
inc
bnd
adc
xor
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
inc
jb
arpl
xchg
pop
addl
aaa
mov
inc
bnd
adc
cwtl
mov
shlb
or
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jl
cltd
pop
adc
sti
jg
or
outsl
sub
loope
mov
sti
hlt
mov
cltd
shrl
and
imul
jno
popa
xchg
push
sub
loope
mov
sti
icebp
in
fwait
shr
sarl
ret
jns
aaa
sub
jge
mov
mov
rcr
mov
mov
push
push
jbe
cli
cmp
nop
push
aaa
inc
jecxz
enter
sub
mov
xchg
out
lock
shlb
xor
out
imul
xor
subl
mov
push
stos
dec
ss
dec
xor
jno
push
stc
pop
adc
and
inc
pop
pop
outsb
data16
push
stos
insb
fwait
and
stos
je
pop
dec
insb
jnp
ret
jo
sahf
jae
rolb
movsb
xor
mov
mov
les
call
out
cmp
decb
and
cmp
icebp
lret
outsb
sub
sti
add
loope
cmpl
movsb
inc
cld
dec
cltd
cwtl
aam
mov
mov
adc
jecxz
mov
fs
stos
sarl
add
stos
adc
insl
jno
or
mov
dec
sti
lahf
mov
cmpsl
jmp
stos
movsl
aad
sbb
push
sub
pop
jg
je
inc
and
loopne
rcrl
out
movsl
ljmp
push
or
pop
sbb
cmp
scas
loopne
hlt
mov
pushf
sbb
xlat
movsb
lret
inc
sbb
inc
sbb
popa
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
imul
jno
popa
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
in
mov
xchg
inc
iret
jne
fsub
sbb
cwtl
mov
and
sbb
sub
dec
lds
mov
and
push
fcoml
lods
in
fwait
mov
dec
adc
and
mov
adc
int
ja
sbb
das
pop
add
je
mov
icebp
mov
ret
roll
dec
sti
fistpl
sbb
mov
or
nop
and
imul
lret
xchg
cmp
mov
movsb
lds
and
scas
cmp
dec
cltd
inc
push
xlat
int3
mov
mov
fistpl
test
jg
fsubl
mov
jo
inc
inc
imul
nop
dec
lcall
jno
mov
xor
call
sub
movsb
fcmovb
lret
dec
pop
imul
add
sbb
xchg
ret
popf
inc
stc
out
push
sub
in
xchg
jg
cli
cli
and
lds
mov
lret
fidivrl
das
cmp
and
jp
daa
xor
lods
inc
pop
test
fsubr
inc
push
stc
lahf
push
movsl
cmp
es
je
data16
insb
mov
mov
mov
cmp
ljmp
ror
popa
jecxz
lds
pop
je
in
sbb
imul
inc
out
cmp
shrl
lret
jle
push
les
jo
mov
add
cltd
pop
push
dec
incl
and
ret
das
pop
push
pop
xor
test
cmp
sub
push
push
outsb
imul
insb
push
cmp
aad
and
add
dec
mov
js
popa
dec
scas
outsl
sub
nop
addb
xlat
lret
call
das
lods
scas
test
push
dec
das
cmpl
in
ljmp
mov
dec
mov
adc
lods
mov
sbb
roll
int
nop/reserved
or
hlt
inc
lds
aas
push
out
rorb
fisubrs
xchg
repz
adc
mov
movsl
mov
pop
sub
pop
inc
pop
sti
or
movl
and
data16
sbb
push
jnp
xchg
inc
cmp
adc
repz
addl
cld
inc
mov
push
sbb
popf
mov
es
scas
xor
ret
inc
out
fdivrp
or
sti
repz
sti
push
mov
repz
lret
mov
sarb
enter
aaa
and
adc
cs
cs
pushl
enter
iret
xchg
gs
cmp
or
jmp
hlt
lea
mov
add
xchg
dec
pushf
mov
mov
aas
cmpsb
ljmp
and
stc
push
pop
loope
push
mov
xchg
test
mov
scas
fs
push
das
fdivrl
mov
cmpsb
mov
or
dec
mov
scas
jnp
adc
imul
cmpsl
xorb
add
dec
push
xchg
mov
imul
pop
inc
add
fimull
mov
fnstenv
add
xor
inc
std
push
mov
cwtl
addr16
fadd
dec
in
shll
mov
lcall
in
push
leave
cs
in
movsb
jns
pop
push
xor
std
nop
mov
movsl
xor
enter
outsb
pop
add
addb
jae
sub
sbb
xchg
jecxz
inc
pushf
adc
or
sbbl
iret
ja
adc
sub
lahf
pop
lahf
inc
lahf
sub
xor
ljmp
xchg
in
xchg
cmp
sbb
dec
add
les
mov
rcll
mov
ret
lret
jge
sbb
or
pop
insb
incl
negb
jmp
fisubl
jp
xor
ret
lock
jns
jp
ficompl
mov
xlat
cs
push
mov
jns
stos
mov
mov
cmc
pop
cld
lds
pusha
fisttpl
push
dec
pop
adc
je
scas
pop
push
jg
mov
inc
gs
add
push
or
cmp
ret
mov
enter
adc
and
je
mov
aas
adc
mov
cmpsb
mov
add
outsl
in
sub
sbb
push
push
cwtl
aaa
adc
mov
jnp
iret
jo
mov
or
or
loope
push
je
cltd
add
stos
sti
push
jmp
sub
jno
xchg
in
mov
adc
outsb
test
pop
and
addb
rorb
js
sbb
jl
or
out
mov
aad
fisttpll
int3
push
mov
sub
iret
sbb
ja
xchg
shlb
mov
pop
push
pop
jmp
call
jae
mov
dec
mov
mov
cmp
mov
aas
fildll
imull
sub
leave
mov
inc
jmp
aaa
cmpsl
pop
pop
daa
push
jbe
mov
add
push
pop
push
ds
mov
movsl
das
fisttpl
dec
mov
mov
lcall
xor
data16
or
leave
sti
jne
into
inc
bound
push
and
ret
in
and
adc
pop
jns
inc
ds
int
les
sbb
negl
xchg
rcrb
shll
loop
pop
adc
lock
mov
or
dec
or
adc
ljmp
mov
or
add
xchg
xor
cmp
lock
jo
push
fldln2
test
mov
xchg
cld
lret
push
mov
loope
lods
mov
sbb
int3
and
lods
mov
jmp
popa
into
and
lds
pop
movsl
imul
insb
cmpsl
adc
or
sarl
les
stos
sbb
into
mov
mov
loopne
in
call
mov
std
out
pop
jecxz
loope
test
mov
subl
dec
mov
lea
shrb
clc
jne
jne
ret
pmulhuw
mov
stc
pop
test
adc
push
mov
lock
fcompl
jl
scas
test
and
fsubr
push
adc
out
cli
aad
test
mov
fucom
pop
imul
stc
pop
mov
xor
or
cmp
faddl
cmpsl
mov
in
push
fisubrl
jo
mov
mov
mov
cmp
or
fs
shll
lods
dec
sub
std
rclb
and
or
jp
jl
mov
xchg
jp
sub
inc
out
cmp
cmp
jb
sub
xchg
test
inc
loopne
mov
mov
mov
divb
lahf
cmp
xchg
push
sti
orb
mov
sub
cli
dec
xor
pusha
jno
imul
push
xor
xor
xchg
es
jns
aam
xchg
jbe
cltd
push
sbb
dec
aad
xchg
int3
cmp
and
loop
psubq
je
fs
rorb
inc
mov
jnp
mov
es
fidivl
or
sub
loopne
fdivrl
orl
push
push
add
sti
cmp
daa
addl
sub
lods
pushf
jl
stc
jb
inc
sub
xchg
pop
icebp
in
cmp
addr16
pop
and
push
insb
and
add
xor
sub
pop
andl
jle
push
xchg
imul
xchg
int3
pop
xchg
sahf
rclb
xchg
fiadds
jae
scas
call
push
sbb
mov
in
mov
andl
leave
sub
sar
dec
sub
cmp
inc
fdiv
ss
xchg
cmpsl
xchg
pop
cmp
and
call
xchg
jo
fisttpl
inc
mov
add
hlt
jno
pop
mov
insb
mov
out
xchg
xchg
jae
dec
sbb
cli
aas
mov
addr16
mov
inc
cmp
clc
xor
cltd
pop
xchg
cwtl
xchg
add
and
in
jns
fisttps
int3
insl
cmc
js
addr16
or
and
cli
jo
enter
xor
jbe
cld
add
movsl
ljmp
arpl
sbb
aad
mov
out
daa
mov
fisubrs
sub
icebp
cmp
pushf
outsb
jne
int
ljmp
add
clc
ljmp
jmp
sbb
adc
faddl
jne
jns
dec
xor
sbb
add
ljmp
add
es
dec
dec
nop
add
push
xchg
cwtl
les
test
rcrb
inc
or
fcomi
pop
daa
mov
xchg
je
pop
push
dec
ret
ljmp
adc
mov
dec
xor
add
sub
xor
decb
nop
test
push
xor
inc
jge
mov
add
dec
outsb
add
inc
mov
jle
adc
inc
or
xchg
orl
jl
and
lahf
xchg
mov
popa
ret
and
adc
decb
mov
in
sub
test
and
xchg
je
dec
stos
add
cmp
push
icebp
es
test
mov
lret
insl
out
xchg
jl
ret
jle
jp
fsubr
jae
inc
shlb
lock
mov
mov
pop
or
inc
and
cli
pop
mulb
iret
mov
insl
ret
cmp
dec
xor
adc
push
fs
pop
int3
push
xorb
mov
cltd
outsb
in
out
xor
fsubrl
lods
dec
xchg
int3
push
sbb
and
jo
mov
xchg
lock
adc
pushf
aaa
jg
dec
lcall
push
out
adc
add
icebp
int
vcvttpd2qq
idiv
lahf
xchg
cmpsb
jo
and
out
into
lea
and
aam
and
lea
lods
xchg
pop
pop
mov
mov
jae
scas
cs
dec
mov
pop
pop
dec
rcrl
fdivl
stos
push
jno
testl
out
and
pop
fidivrl
inc
and
push
cwtl
cld
mov
ret
push
add
popf
inc
imul
mov
xchg
dec
cmp
shrb
in
xchg
inc
negb
and
mov
ret
sub
mov
in
call
sub
pop
push
shrb
pop
ret
adc
xchg
jecxz
int
cmp
gs
sbbl
sub
or
mov
out
pop
push
aaa
push
inc
xchg
shrb
test
mov
fnstsw
fbstp
xchg
xor
dec
adc
sti
mov
mov
dec
push
inc
rclb
xchg
sub
nop
cmpsb
and
xchg
sub
adc
pop
xor
push
arpl
fwait
mov
pop
sahf
xchg
cmp
or
insl
mov
add
in
lret
jmp
inc
test
daa
pop
das
sub
out
repnz
call
popfw
pop
lds
jb
in
xor
scas
or
xchg
inc
xchg
or
jmp
push
xchg
enter
mov
jle
cmpb
ret
sub
fists
iret
rcrl
imul
xchg
xor
mov
pusha
loopne
aam
cmp
mov
and
add
shlb
repnz
xchg
push
movsb
adc
dec
pcmpeqw
and
add
sbb
and
pop
cmpsl
cmp
mov
aad
fs
cld
retw
out
mov
fldenv
pop
daa
lods
push
pop
ljmp
pop
pop
call
in
adc
std
adc
scas
xchg
mov
mov
std
pop
xchg
pop
cld
push
pop
add
ss
out
mov
and
insl
mov
insl
aam
insl
sbb
aam
xlat
xor
xchg
jae
add
test
out
mov
dec
cmp
cmp
nop
add
out
outsl
cwtl
cmp
shr
int3
das
sbb
or
and
ljmp
push
mov
lds
adc
xchg
jae
cmp
inc
loop
push
push
xor
xor
cmc
out
push
sbb
adc
cmp
movsl
push
sbb
out
pop
sub
fs
pop
cli
jb
mov
sub
ljmp
xchg
mov
rclb
mov
movsb
inc
insl
push
mov
cs
push
push
mov
and
outsl
mov
and
fcoms
fcmovu
xchg
aam
jb
jl
xchg
mov
mov
adc
cltd
mov
loop
or
iret
sti
insl
jmp
adcl
out
or
pop
rclb
fsts
jmp
fldenv
lret
sub
int
into
ljmp
xchg
aas
mov
xchg
cli
dec
jge
mov
or
cmpb
adc
xor
std
mov
sub
mov
mov
btc
addl
pusha
sti
loopne
incl
ds
in
rcll
cwtl
out
test
jmp
mov
pop
les
das
pop
ror
repnz
in
js
add
cs
sub
adc
and
xor
cltd
inc
insb
cmp
xor
lahf
cltd
adc
xor
popf
adc
loope
push
jecxz
iret
jmp
icebp
int3
out
test
addr16
pop
add
mov
stc
jmp
push
xchg
xor
into
js
jae
ret
dec
push
loop
jl
popa
cmp
sub
loopne
aam
push
push
mov
shll
jecxz
ret
in
enter
aad
sub
sub
sbb
mov
xor
mov
jl
lret
jl
test
pushf
out
mov
jbe
clc
lret
cltd
in
cmp
lret
xor
scas
int
push
mov
xor
sahf
mov
jl
mov
adcb
aaa
movb
aad
fistl
cli
pushl
pop
push
gs
rcrb
adc
adc
pop
or
pop
bound
in
push
and
lret
in
hlt
scas
std
sbbl
push
jmp
ficompl
or
push
jmp
ret
jge
popf
sub
scas
outsl
call
adc
mov
fsubrs
and
out
cmpb
mov
xchg
loop
xchg
hlt
test
jp
sbb
and
dec
and
jae
push
inc
test
rcrb
push
loopne
push
sub
xor
cmp
lcall
mov
adc
xchg
pop
xor
shll
pop
mov
jnp
daa
mov
ja
ss
roll
sub
cs
lods
adc
or
sahf
jne
stos
popa
xchg
push
mov
pop
scas
push
loopne
mov
xlat
int
lds
iret
hlt
xor
push
hlt
mov
or
xor
mov
iret
mov
je
mov
xchg
dec
inc
mov
jmp
mov
fwait
adc
xor
push
jnp
mov
pop
sbb
leave
jmp
adc
add
xchg
fnstcw
jo
negb
add
popl
xchg
mov
push
fcmovnb
adc
xchg
jb
jnp
sub
sahf
repnz
inc
stos
jo
call
mov
add
cli
dec
xchg
negb
pop
nop
dec
mov
fbld
mov
push
sbb
in
add
add
adc
and
adc
inc
fistpl
loope
mov
jnp
sti
adc
mov
test
movl
lock
pop
lods
mov
leave
mov
iret
dec
ds
int3
rorb
iret
sub
out
pop
mov
mov
or
mov
xchg
fists
jns
cmp
pop
add
cmpb
push
mov
mov
fildll
mov
or
and
je
jecxz
ss
pop
test
cmp
sarl
push
sbb
sub
js
les
mov
shrb
jg
mov
jnp
mov
fidivrs
add
scas
or
inc
xor
ret
shrb
inc
pop
adc
scas
loop
push
in
mov
stos
cld
sub
outsl
and
popa
cli
pop
rsqrtps
popf
decb
mov
loopne
mov
xchg
xchg
adc
call
stos
cli
mov
mov
or
jecxz
xchg
inc
dec
adc
std
lret
adc
shll
push
push
ljmp
cli
lds
outsl
jno
xchg
sbb
pop
fucom
popf
push
pop
push
xchg
inc
xor
lock
enter
xchg
idivb
fsubl
dec
mov
mov
je
fs
sti
test
cwtl
scas
pop
mov
push
aas
test
adcl
aas
aam
dec
pop
nop
adc
pusha
mov
int
mov
and
in
mov
lea
dec
movsl
xor
jecxz
jle
lea
push
mov
cwtl
shll
or
mov
xchg
mov
mov
and
ret
sub
xor
add
and
xchg
loope
popl
out
mov
in
mov
sbb
mov
nop
js
insb
adc
sub
xchg
dec
in
pop
jnp
add
adc
inc
dec
out
mov
out
mov
cmp
rcrl
into
sbb
pop
daa
popf
imul
fildll
fsubl
das
into
or
aad
out
cmp
push
and
xor
inc
je
les
lea
sbb
pop
loop
mov
les
dec
mov
insl
adc
sbb
jecxz
jo
mov
shlb
or
dec
add
adc
imul
dec
inc
sbb
fbld
add
int3
lahf
pop
stc
jno
popa
mov
sti
jp
jge
stos
nop
outsl
xchg
mul
subl
cmp
sar
jbe
in
push
stos
xor
adc
dec
cmp
push
pop
or
das
jecxz
loope
fldl
out
outsb
es
es
insb
dec
aaa
jecxz
enter
es
test
out
inc
jmp
js
pop
add
cmpsb
push
push
arpl
cmp
or
out
in
add
pop
lret
jo
adc
dec
adc
shll
fwait
or
mov
jl
mov
jb
push
pop
inc
dec
mov
xchg
outsl
xchg
adc
mov
popa
leave
xor
in
sbb
clc
pop
cmpsl
test
cmp
imull
or
arpl
aas
hlt
int
out
mul
cmp
sbb
adc
enter
iret
dec
xchg
mov
or
test
popa
xorl
mov
pusha
sub
mov
sbb
je
loop
push
daa
sahf
fiadds
adc
sub
push
iret
test
adc
sub
push
dec
out
mov
or
movb
jo
loop
cmp
xor
xor
lods
xor
cmp
fidivrl
daa
loope
stos
jmp
aaa
dec
cmp
pop
jns
sbb
stc
or
mov
leave
das
std
mov
mov
shll
aas
push
sub
dec
bound
rcl
out
xor
inc
cmp
xchg
mov
lock
insl
mov
sub
aad
lods
xor
xorl
sahf
lahf
push
or
add
push
and
xchg
faddl
mov
push
lret
cwtl
push
add
pop
lcall
sub
dec
imul
outsl
fidivrl
pop
aad
cmpsb
clc
test
inc
sbb
daa
rcrl
mov
pop
mov
jae
cmc
loop
push
inc
push
mov
lret
cltd
xor
cmpsb
fs
adc
sub
sbb
notl
in
xchg
cmc
aas
pop
cmp
rcrb
xlat
pushf
imul
jmp
rcr
ret
jne
pop
stc
dec
sub
pusha
test
ss
xorl
aas
mov
fisubrs
ret
paddd
xchg
shl
pop
cmp
mov
pop
jecxz
callw
mov
cmp
mov
pop
jl
sbb
sahf
mov
sub
sahf
scas
jmp
mov
outsb
dec
mov
popf
int
dec
ret
pop
or
out
mov
pushf
inc
lods
cltd
adc
xlat
jae
test
loope
cltd
xor
repz
pop
pop
mov
in
and
ds
cli
popa
push
lcall
push
or
mov
cmp
dec
scas
push
mov
mov
stc
xchg
adc
ljmp
cltd
sbb
imul
sbb
mov
jecxz
call
mov
and
push
mov
sahf
fidivs
decb
xchg
das
call
mov
push
fnstsw
inc
xrelease
loopne
mov
lcall
add
inc
outsb
adc
ret
or
add
jg
xor
push
sub
sub
cmpb
pop
lods
inc
out
sbb
out
or
pop
movsb
icebp
or
dec
mov
dec
jmp
inc
jecxz
jmp
vpmaxuw
dec
xchg
gs
mov
fiadds
outsb
insl
popf
imull
je
mov
jmp
inc
adc
neg
jae
int3
pop
jae
add
shlb
mov
push
pop
dec
cmpsl
mov
test
gs
fistpl
rclb
pop
mov
inc
pusha
mov
sti
ja
data16
sub
out
cs
js
stos
or
iret
popa
xchg
xchg
inc
sbb
mov
or
or
jns
xchg
push
int
inc
xchg
cld
mov
cli
out
mov
fnstenv
pop
fdivl
or
stc
pop
xor
pop
mov
sbb
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
imul
jno
popa
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
add
add
or
push
sub
mov
mov
sti
icebp
mov
fwait
aad
icebp
mov
cltd
imul
jno
jno
push
stos
sarl
xor
jno
jmp
mov
push
ds
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
