jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
pop
call
add
sbb
jae
and
inc
aam
add
add
in
add
add
mov
add
inc
xor
jae
add
mov
add
push
or
shll
fs
mov
test
inc
mov
sbb
sbb
jnp
sbb
cmp
cmp
ficoml
sbb
fisttps
cmpsl
insb
pop
xchg
ret
dec
imul
add
dec
add
or
cld
xor
fdivr
xlat
clc
mov
je
outsl
lea
icebp
divps
lea
pop
arpl
inc
leave
leavew
and
or
inc
in
add
lea
sbb
dec
dec
push
adc
adc
incl
lea
or
mov
rolb
mov
call
sub
jecxz
pop
sbb
pop
jmp
lods
pop
push
pop
test
rolb
adc
push
sub
adc
push
add
loopne
add
mov
je
cld
cmp
ljmp
xchg
adc
inc
add
and
add
add
pop
or
add
add
fisubrl
sbbb
sbb
sti
adc
lods
sbb
clc
add
inc
gs
pop
cs
insl
outsl
and
inc
je
roll
subb
outsl
fs
popa
add
add
popa
add
outsl
jge
insb
pop
inc
insb
shll
inc
xchg
les
shll
iret
imul
arpl
add
add
add
aam
add
add
in
add
add
add
jae
add
add
add
and
add
add
hlt
add
addl
test
add
xlat
cmp
outsb
push
pop
push
lcall
int3
xchg
dec
dec
inc
repz
faddl
dec
xchg
jg
leave
mov
and
jl
and
cmp
dec
jp
fmul
sbbb
test
jno
mov
mov
fbstp
or
cld
add
and
insb
arpl
je
outsl
adc
pop
vpmacsdqh
arpl
mov
or
lcall
ja
lcall
pop
cmp
imul
pop
xor
test
rcrb
mov
cltd
dec
daa
xor
dec
sub
lock
and
test
and
cwtl
sbb
add
testl
test
orb
in
outsl
js
jo
sbb
fdivrl
ds
fwait
mov
jns
cmc
shll
cmove
add
inc
dec
mov
and
sub
aam
out
scas
loopne
loope
mov
push
into
clc
scas
mov
rorb
pop
push
nop
cmc
and
pop
adc
ficomps
xor
mov
jp
fs
daa
aaa
cli
call
mov
xor
xchg
jae
imul
xchg
mov
pop
pop
aam
and
xlat
add
int3
clc
sub
mov
push
jle
mov
aaa
scas
ss
pop
sub
pusha
dec
mov
ds
cmp
mov
dec
xor
xchg
jb
cmp
jle
push
xor
mov
and
mov
ret
sbb
sbbb
xor
in
sbb
out
adc
sbb
add
mov
xor
loopne
jg
les
dec
aad
dec
ljmp
sti
fcoml
ja
pop
dec
js
pop
das
or
aad
out
insb
jl
data16
push
lds
std
andb
add
fildll
imul
cltd
scas
fsubr
mov
or
sub
mov
cmpsl
jecxz
mov
jmp
push
rol
dec
fsubr
push
sub
jo
and
imul
js
mov
stos
insl
repnz
cld
dec
add
in
push
iret
repnz
icebp
pusha
inc
arpl
cmp
xchg
lock
jecxz
sub
sbb
dec
in
inc
jne
je
repz
ss
add
cmp
test
pop
pop
inc
xchg
sub
fsts
andb
hlt
sahf
pushf
loope
stos
sbbl
xchg
sbb
icebp
sahf
aad
dec
or
iret
lahf
cmp
sbb
adc
aad
cltd
outsb
xor
adc
fwait
mov
xor
daa
lret
mov
push
cmp
jns
sbb
dec
dec
and
int
dec
sbb
ds
loope
pop
pop
test
ljmp
add
jmp
jne
decb
mov
inc
and
mov
dec
fstpl
dec
jae
lcall
popl
data16
xor
pusha
cmp
pop
xlat
jecxz
jmp
ret
dec
push
test
cltd
stos
lahf
clc
cmc
and
rol
in
std
jp
push
xchg
cli
pushaw
sbb
dec
inc
idivb
xchg
push
les
jae
fidivs
scas
icebp
xor
cmp
jge
push
sub
in
or
outsb
fimull
push
mov
mov
test
aam
lcall
mov
jl
xor
repnz
lahf
sub
or
insl
hlt
aaa
jmp
pop
std
sub
and
bound
jne
jge
js
jge
orb
push
je
idivl
cld
cwtl
lea
adc
sbb
mov
inc
dec
js
std
repnz
push
std
notl
pop
cmp
outsl
int
sbb
sbb
adc
xlat
iret
call
sbb
pusha
xchg
mov
or
scas
cmp
scas
jb
aaa
sub
jnp
iret
sarl
adc
sbb
xor
notl
inc
jbe
cmpb
and
jo
mov
fistpll
push
movsb
push
pop
outsl
outsl
jmp
sbb
mov
ljmp
mov
pushf
fisttpll
mov
rorb
pop
fistl
cmp
mov
xor
shlb
test
aad
sti
jo,pn
mov
rcll
adc
cli
cmpsb
mov
pop
xchg
stos
xlat
xor
adc
inc
imul
mov
push
cmp
fwait
pop
adc
mov
dec
xchg
fs
pop
mov
addr16
push
xor
lods
iret
sti
mov
roll
or
scas
push
mov
int3
xchg
pop
insb
jbe
nop
iret
dec
or
xchg
cmp
cmp
cmc
xchg
loopne
es
jecxz
inc
mov
xchg
push
sub
pop
add
cmp
repz
mov
adc
mov
lock
popf
idivl
inc
mov
mov
xchg
sub
xchg
lods
mov
fidivrs
sti
iret
das
pop
jne
inc
imul
mov
fstps
aaa
fadds
fsubr
or
jmp
push
sub
mov
inc
adc
es
jne
shrl
rorb
ja
test
scas
aam
adc
or
push
flds
pop
cmp
aas
lahf
out
mov
out
fldenv
loop
adc
dec
fwait
cs
lods
and
popa
xor
stos
sbb
inc
cmp
push
in
lds
and
sbb
jns
and
mov
ret
fidivs
arpl
cmp
jle
popa
mov
cwtl
daa
xchg
rolb
sub
and
push
andb
arpl
cli
test
or
out
imul
loopne
xor
pop
push
adc
dec
hlt
enter
dec
pop
pop
cmc
mov
cwtl
xchg
add
je
adc
subl
das
xor
xlat
jg
stos
scas
inc
ljmp
imul
out
sbb
mov
ds
add
shll
insb
icebp
int
inc
repz
add
ret
out
jb
ja
xorl
jno
in
jbe
daa
lret
cmp
push
sbb
cmp
xor
ds
mov
and
icebp
dec
xchg
aad
mov
dec
outsl
mov
ljmp
aaa
cmp
sub
adc
sbb
mov
mov
or
test
out
xor
mov
dec
cwtl
and
adc
inc
ss
pop
insl
pop
in
mov
adc
jmp
ds
out
xchg
cmp
cmc
outsl
mov
add
les
cwtl
sahf
inc
shll
cmp
mov
jle
fs
sahf
and
dec
sbbl
in
sub
daa
jecxz
push
pop
cmpsb
push
xor
jecxz
faddl
dec
cmp
lret
and
push
dec
inc
gs
adc
outsb
jne
and
adc
adc
ja
fwait
mov
loopne
imul
mov
jne
cmp
add
mulb
cmp
jns
pop
fdivl
fidivrs
push
std
dec
mov
mov
inc
xchg
shl
notb
lods
mov
inc
cmc
sub
rcr
call
incl
push
fstl
mov
push
jecxz
rcrb
pop
add
mov
cwtl
and
negb
lds
in
ret
cli
mov
cmpl
xor
outsb
rcrl
imul
stos
ss
and
xor
inc
test
insw
cmpl
in
fistpl
nop
icebp
popf
mov
roll
dec
mov
out
mov
and
andb
subl
cmp
and
fdivl
insl
mov
ljmp
adc
mov
sub
push
iret
leave
aas
mov
imul
add
mov
popf
add
into
push
ljmp
loop
add
scas
mov
insb
push
push
sub
dec
push
lods
jne
in
pop
mov
and
pusha
xchg
icebp
mov
mov
ret
pop
mov
repz
fisubl
insl
in
push
out
xchg
push
test
fcomip
mov
cltd
xor
test
das
mov
mov
or
sub
cmc
loopne
xor
xchg
sub
add
sbb
pop
outsb
stos
clc
add
mov
pushf
jae
mov
popf
jl
fs
mov
jne
stc
leave
pop
add
movb
arpl
sbb
inc
jo
mov
pusha
testb
lcall
and
out
jnp
push
aaa
lock
push
movsl
xor
mov
clc
jg
dec
pop
dec
or
stos
push
adc
and
mov
fimuls
dec
pop
movsl
lods
jmp
cmp
sbb
pushf
mov
xchg
outsb
xchg
and
jge
push
stos
mov
jnp
pop
cmp
inc
jnp
rorl
int
in
push
cmpsl
fbld
addb
mov
gs
and
cli
out
mov
rorl
pop
dec
sbb
sub
lock
ljmp
popf
adc
push
shll
into
jnp
clc
int
cld
xchg
adc
jbe
inc
sub
shrl
cs
bound
fldcw
jg
mov
ljmp
mov
rcll
leave
test
sub
rorl
pop
mov
add
ss
inc
mov
sbb
and
cmp
xchg
mov
xor
lods
sbb
std
cwtl
insl
xor
sub
ljmp
mov
adc
cmp
mov
xlat
mov
inc
add
sub
insb
sbb
scas
movsb
and
scas
or
xchg
jecxz
imul
pop
lock
js
add
xchg
push
scas
aaa
les
cmpsb
jge
sub
sub
xor
ljmp
xchg
mov
subl
dec
pop
fmul
jo
out
popa
mov
test
sbb
add
fisttpl
outsl
mov
jp
lret
mov
mov
and
pop
insl
xor
les
popf
xorb
cmc
ljmp
mov
jp
push
or
adc
fmull
sahf
orl
sbb
lahf
jns
int3
fsubl
shrb
dec
pop
loop
xor
sub
xchg
pop
aas
call
aas
xor
and
adc
mov
cltd
test
bound
jno
jecxz
mulb
mov
jae
out
rcrb
out
xor
out
cli
imul
pop
push
pop
out
out
pop
in
sbb
adc
shrb
aam
das
negl
negb
fisttpll
shl
and
jl
mov
sub
push
jns
mov
enter
jns
aam
mov
jmp
insl
inc
mov
pop
dec
xchg
push
sub
cwtl
mov
cmp
loope
sub
inc
push
cmove
inc
outsb
adc
sbb
pop
loopne
cmpl
mov
pop
data16
fcmovu
js
mov
pusha
pushf
cmpsl
sarb
das
mov
push
mov
fistps
add
mov
mov
adc
shr
mov
push
fldenv
or
xor
je
fwait
lcall
mulb
mov
xlat
dec
test
pusha
jb
lcall
loope
xor
cs
add
xchg
sahf
push
jnp
movsb
or
ficoms
loope
cmp
cmp
mov
lds
cmc
dec
in
xchg
nop
out
push
loope
jge
sarl
popl
and
push
sahf
mov
out
sbb
or
nop
fs
scas
xchg
cltd
dec
jne
jno
outsl
shrb
add
insl
stos
flds
daa
and
xor
mov
push
cmp
mov
std
insl
mov
sub
int
fdivl
or
call
jo
loop
lock
dec
and
es
movsl
or
dec
jmp
and
sub
push
mov
pop
pushf
dec
inc
cmpl
lock
mov
imul
xor
or
xlat
mov
cwtl
ljmp
xor
loope
int
hlt
push
cli
adc
mov
js
lds
xchg
ret
loop
orl
add
lea
jbe
and
jecxz
cli
in
jge
inc
incl
jns
je
push
jbe
ljmp
int
push
push
mov
and
and
mov
inc
popf
xchg
inc
out
jb
add
stos
inc
add
pop
mov
shll
cmpb
or
shll
or
jo
pusha
gs
sahf
test
insl
mov
pop
testb
ljmp
jb
mov
cmc
inc
adc
and
loope
lods
out
xchg
adc
add
outsb
sub
jo
fsts
cld
push
jbe
mov
divl
pop
bound
lods
jle
les
out
xor
push
pop
adcb
lcall
sbb
addl
lods
pop
sar
dec
sbb
inc
jp
test
add
jle
addr16
xor
mov
xchg
andb
ficoml
and
xor
mov
xor
adc
popa
bound
mov
add
cmc
jnp
aaa
xor
inc
cmp
fcompl
inc
fwait
mov
ret
jecxz
loop
inc
sub
and
xor
sbb
mov
int3
jo
xor
push
dec
cmp
arpl
pop
jle
pop
mov
pop
and
js
lea
adc
push
and
in
pushf
cwtl
mov
xor
push
pop
mov
dec
mov
fdivrs
mov
pusha
sub
pop
nop
out
loop
pop
loopne
pop
sarl
jns,pn
bnd
dec
mov
mov
mov
sbb
les
or
test
xchg
xchg
dec
push
sbbl
jns
mov
inc
out
out
dec
cmpsl
and
repz
mov
fmuls
inc
sarb
fidivrl
and
push
clc
jno
in
insl
call
mov
in
leave
les
cmpsl
mov
or
mov
xchg
mov
loop
lods
lret
imul
out
push
mov
pop
rcl
sbb
gs
stos
gs
frstor
cmpsl
inc
mov
scas
xchg
les
test
xor
lcall
mov
int
or
xor
leave
cli
push
xchg
ja
inc
iret
aaa
sub
mov
mov
out
inc
mov
or
aaa
lahf
xchg
leave
loope
push
loope
cmpsb
xchg
lods
push
mov
out
mov
jg
push
mov
xchg
es
les
shrl
outsb
in
shll
movsb
add
or
push
mov
mov
pop
xchg
in
dec
sbb
xchg
aaa
mov
cmc
or
bound
out
fstl
loop
sub
push
cmc
cmp
adc
punpcklwd
fs
adc
mov
and
push
mov
push
mov
add
ss
or
mov
mov
cmc
mov
popf
mov
out
and
imul
inc
or
in
pop
and
lcall
negl
mov
adc
lea
out
lahf
push
pop
cli
mov
or
pop
push
or
dec
imul
pop
shrb
sub
scas
pop
push
mov
sbb
mov
adc
dec
imul
mov
push
or
mov
fcomip
pop
dec
push
pop
inc
or
cwtl
neg
arpl
add
in
pop
mov
adc
popa
test
xor
xor
lahf
ret
leave
inc
insl
test
cmp
pop
cmp
xchg
insb
cmp
pop
imul
mov
aad
push
enter
pop
repz
mov
xchg
lcall
and
mov
pop
or
or
dec
push
pop
popf
cmpsb
shrb
xchg
lahf
pop
mov
xchg
hlt
and
shrb
push
mov
pop
nop
aad
jb
jbe
fldl
add
or
scas
fbstp
xchg
dec
cltd
fldt
pop
call
cmp
repnz
fidivl
xor
ret
or
in
push
add
std
dec
xor
fisubrl
out
enter
aaa
out
jb
rcr
mov
mov
jb
mov
xchg
aad
cld
rolb
roll
rcll
mov
test
pop
adc
or
push
lret
xchg
fldcw
push
fdivp
add
mov
jmp
mov
xchg
mov
movsl
insb
pop
jbe
roll
addr16
mov
dec
f2xm1
test
push
pusha
aam
mov
mov
filds
pushf
pushf
fsubrs
mov
insl
out
cli
jns
add
jmp
cmp
pop
sbb
mov
mov
push
leave
pop
mov
inc
adc
push
adc
adc
pop
push
fs
out
decb
dec
mov
sbb
mov
lcall
ret
cmp
push
and
aad
cltd
stos
clc
cmp
repz
int
loope
pop
dec
scas
aad
mov
cs
inc
sbb
lods
or
das
mov
lods
push
or
repz
fwait
es
in
cmpsb
idiv
or
fidivrs
adc
inc
xchg
sbb
inc
cmp
enter
inc
or
xchg
lods
xorb
mov
adc
mov
push
and
imul
inc
orb
xlat
pop
and
sbb
add
add
add
add
add
aam
add
add
in
add
add
add
jae
add
add
add
and
add
add
hlt
add
addl
test
add
dec
arpl
add
adc
ret
fadds
les
repz
xchg
add
mov
add
ss
add
add
add
xorb
dec
add
xchg
ja
sbb
decl
dec
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
pushl
pushl
pushl
push
push
call
add
cmpl
jb
call
mov
pop
pop
pop
leave
ret
add
push
add
dec
add
int3
mov
cmp
add
add
loope
add
add
xchg
popl
lea
add
add
add
add
add
or
add
int
add
add
add
popa
sbb
inc
add
adc
add
and
insb
jns
jne
loop
je
jb
repnz
dec
xor
addr16
or
leave
out
popa
aaa
iret
dec
push
clc
aam
push
jb
jns
add
push
lcall
repz
std
loop
call
popf
jle
add
push
lock
push
icebp
or
xor
mov
pop
pop
roll
std
add
call
jge
les
add
add
ljmp
add
add
test
ljmp
cmp
test
test
and
mov
add
or
call
xor
ljmp
std
xchg
pushl
mov
ret
movsl
lea
push
xchg
push
fcos
push
test
fwait
int3
pop
push
adc
push
add
add
add
add
add
loope
add
add
xchg
sbb
xchg
add
add
je
imul
popa
inc
insb
add
outsl
mov
add
js
andb
arpl
insb
gs
imul
push
dec
js
push
xor
icebp
add
int
jne
add
outsl
sub
xor
cmp
add
add
loope
add
add
xchg
add
lea
add
add
add
add
add
add
add
addl
mov
add
adc
xchg
pop
decb
aad
pop
call
mov
xor
aam
add
cltd
jle
aad
cmp
xor
push
inc
cmpsb
stc
push
pusha
mov
fcomip
call
int3
pushf
pop
clc
pop
jp
push
inc
adc
loop
jl
pop
push
inc
mov
popa
pusha
mov
cmc
xor
xor
or
dec
movsl
lds
inc
mov
xchg
repnz
std
inc
cmpsl
sub
cli
fildl
std
pop
add
fsubrs
push
out
mov
jnp,pn
fldcw
call
je
ds
ret
adc
fadds
mov
fcomps
mov
imul
xchg
aas
xchg
mov
mov
ja
negl
cmp
fimull
push
sbb
popa
inc
int
fimuls
push
xchg
mov
sub
aad
lret
sarl
and
inc
sub
jmp
faddl
xor
mov
shll
into
and
int3
pop
in
jne
mov
test
fistl
lods
int
testb
fldcw
pusha
jb
mov
sbb
rolb
fistpl
cwtl
or
je
nop
aas
shrl
push
add
aad
cli
popf
jne
cmp
sbb
arpl
jno
daa
gs
mov
adc
test
pop
cmp
jns
xchg
push
and
movsb
orl
push
ret
test
lock
add
je
aas
movsb
xor
mov
nop
ja
mov
data16
outsl
jns
sub
repnz
xor
mov
or
rcr
imul
push
jnp
filds
lret
ret
aad
dec
jmp
or
lcall
lods
js
dec
bound
sub
mov
call
mov
lret
jl
sub
jbe
inc
inc
in
mov
shll
mov
cmp
inc
fcomps
xchg
adc
mov
mov
xor
cmp
lret
adc
outsl
aam
das
cmpsb
mov
call
sbb
aas
leave
add
xchg
dec
push
int
jp
mov
test
and
jmp
fs
sahf
xor
cli
sub
inc
xlat
inc
mov
or
out
loop
fwait
mov
dec
rcrb
popa
and
xor
mov
xchg
nop
xor
fs
in
dec
and
and
fdivrp
shlb
stos
movsb
mov
mov
daa
jno
orl
jae
shrl
xor
lcall
movsl
je
in
xor
adc
or
push
pushf
ret
adc
dec
jbe
push
jle
adc
cld
push
jge
lock
lea
frstor
cltd
xchg
jns
xchg
test
cmp
pop
stos
inc
shrl
pop
mov
and
fsubrs
adc
pop
sub
insb
push
leave
jne
inc
jns
or
test
rcpps
xlat
mov
subl
jbe
sbb
gs
andb
or
aas
in
orb
adc
mov
fdivl
out
pop
mov
fucomi
sahf
mov
cmp
lea
lods
or
adcb
pusha
nop
jecxz
push
outsl
cmpl
ss
pop
jnp
orl
mov
jnp
repz
sub
push
xchg
cld
shr
mov
stos
les
mov
inc
add
dec
ljmp
xor
sbb
repz
repnz
shl
adc
push
jmp
paddsb
sbb
out
call
mov
mov
and
fstpl
les
inc
lock
adc
fwait
cld
push
dec
clc
jnp
js
cmp
cmp
xchg
bound
fstl
inc
adc
lock
mov
cwtl
pushf
dec
sub
xor
jecxz
mov
addr16
jns
sarl
adc
push
dec
fwait
inc
and
ret
mov
leave
cmp
call
outsb
and
mov
xchg
add
into
sub
xor
jge
shr
sub
mov
sarl
xchg
out
dec
mov
mov
jmp
cmc
and
mov
mov
jb
mov
mov
ljmp
inc
leave
jno
das
or
mov
sbb
nop
scas
cli
or
popa
mov
cmpsl
or
mull
stos
jno
int3
sbb
nop
xlat
adc
jmp
pop
inc
out
idivb
mov
mov
insl
test
and
add
js
jl
jle
mov
mov
sti
adc
push
mov
xchg
and
insl
dec
sbb
fmull
xor
imul
or
push
sub
fdivr
jno
stos
cmp
pop
shr
sbb
pusha
pop
inc
dec
int3
fmuls
inc
icebp
arpl
or
fisttpll
sbb
jo
addb
aas
and
jle
jg
into
sbb
popf
jge
jns
sub
lret
add
and
mov
sub
sbb
jl
mov
pop
dec
shrb
or
add
jmp
sarl
add
psadbw
mov
cmp
pop
add
imul
jp
jo
daa
pushf
cmp
jo
pop
lahf
lea
js
fnstsw
mov
inc
test
mov
outsb
mov
pop
not
jg
xor
dec
jmp
add
imul
inc
pop
lods
mov
xchg
xchg
adc
xor
adcb
mov
mov
shr
and
mov
cmp
jns
mov
clc
cmp
les
jnp
testb
sub
cmp
push
xor
sub
aam
push
mov
jl
mov
lock
pop
mov
lret
stos
and
jne
xchg
iret
inc
push
jo
sub
lret
lock
xchg
std
rcrb
dec
cwtl
jno
dec
xlat
pop
mov
xchg
inc
push
cli
push
leave
xchg
pop
xchg
adc
adc
jg
xchg
dec
and
popf
jno
iret
stos
push
iret
mov
fnsave
inc
cwtl
adcl
jp
insb
test
push
push
ljmp
and
cmp
call
cmp
sub
mov
out
add
nop
mov
hlt
pop
out
mov
mov
loopne
pop
adc
jg
aaa
adc
sbb
mov
into
popf
mov
rdmsr
cmpsb
sahf
xor
lds
or
fisttpl
repz
inc
sahf
shlb
pushf
outsl
mov
mov
sub
out
addr16
or
movsl
cmpsb
adc
jns
mov
xchg
sbb
rcll
shll
hlt
inc
dec
idivl
xchg
xor
dec
in
sbb
jne
ret
pop
int3
cmp
inc
cmp
ret
sub
xor
popa
jb
or
push
sarl
mov
fcmove
sbb
mov
mov
push
sub
aaa
jl
pop
jno
or
fbstp
shrb
orl
inc
jle
jbe
fucomi
jl
fwait
test
leave
inc
or
enter
add
add
mov
cmp
lods
cmpsb
and
in
aas
cmp
jo
or
jae
sub
cld
jp
dec
shll
cs
jmp
nop
in
adc
cmpsb
test
movsb
mov
insb
lcall
scas
ljmp
mov
lods
pop
sbb
and
and
out
jns
sub
call
enter
popf
jne
push
push
les
popa
clc
in
mov
in
loop
and
dec
int3
lods
imul
ret
or
stc
adc
lcall
inc
fldenv
push
mov
imul
psubb
notl
and
clc
inc
adc
cmp
dec
pop
pop
int
je
arpl
add
xchg
lcall
mov
test
sub
out
lock
mov
sub
adc
gs
lods
arpl
push
sbb
loope
or
aas
add
cli
pop
jns
add
pop
clc
mov
sbbl
xchg
das
ret
aam
mov
stc
fcmove
loopne
ja
cmp
jo
pop
icebp
and
ds
xchg
dec
lret
pop
add
fdivrs
push
lods
xchg
cmp
pusha
out
dec
pop
insl
loopne
xchg
out
mov
xor
and
xor
popl
ja
paddsb
lods
push
sbb
xor
adc
in
out
sub
je
lret
fs
jbe
mov
ja
cmp
inc
sbb
js
mov
lcall
aam
sub
jmp
xchg
xchg
aam
fstl
inc
adc
xor
push
cmp
add
xchg
ja
ret
sbb
inc
sbbb
push
dec
aaa
in
jno
xchg
pusha
cs
cmp
cltd
and
and
or
sbb
mov
mov
sahf
pop
xchg
fwait
dec
push
or
lahf
outsb
cs
pushf
lahf
arpl
mov
cmpsb
pop
or
jp
jbe
pushf
sbb
push
mov
xchg
sub
mov
mov
push
out
xor
sub
and
pop
sbb
lock
imul
scas
movsl
xor
mov
les
dec
or
loope
xchg
or
jae
vucomisd
xchg
cmp
mov
loope
enter
mov
stos
lea
insb
test
cmp
jns
js
sbb
xchg
sbb
dec
stos
or
xchg
sarl
das
sbb
loopne
inc
xor
mov
aaa
sub
xchg
cmpl
push
mov
push
clc
cmpl
sbb
add
sub
add
fwait
jcxz
test
test
aas
out
sbb
mov
mov
mov
dec
fdivs
out
sbb
add
push
popa
adc
dec
movsl
and
cmp
test
jecxz
mov
jp
xchg
sub
imul
xchg
xor
jl
xchg
push
jno
repz
cmpsl
jne
loop
cmp
sbb
jp
mov
enter
iret
jno
iret
jnp
inc
jb
fsts
jl
mov
sbb
mov
cli
in
lea
cmc
sbb
push
jmp
and
dec
xchg
push
jbe
mov
mov
into
adc
std
ljmp
repnz
out
pusha
out
mov
mov
and
cmpsl
xchg
sbb
pop
mov
pushf
cmp
ds
sub
movl
xchg
or
out
adc
into
loope
or
mov
shrb
mov
imul
cmp
or
push
xor
hlt
sbb
push
add
xchg
sbb
out
arpl
aam
cli
in
andl
sbb
fldt
and
imul
mov
lahf
daa
cltd
dec
jge
test
pop
ja
mov
lret
xchg
fmul
iret
sub
lods
out
mov
lods
inc
adc
ficoml
and
push
jl
lret
cmp
lcall
js
es
imul
scas
imul
dec
cltd
fstpt
jge
or
cmpsl
daa
addr16
pushf
sbbl
bswap
out
pand
in
call
pop
xchg
scas
push
enter
mov
mov
out
dec
jge
jg
inc
jecxz
pop
test
add
pop
js
cmp
cs
dec
mov
pushf
loopne
scas
dec
lds
push
push
or
mov
cmp
out
es
cmp
jne
pop
and
bound
fcoml
jle
mov
xor
lret
sbb
testb
inc
js
iret
push
inc
lcall
adc
stc
ja
out
fistpl
cmc
in
andb
lods
aaa
fwait
jnp
jmp
orb
scas
xor
cmp
push
int3
pop
pop
xchg
jmp
and
dec
mov
daa
je
sbb
xor
cltd
out
jns
and
outsl
in
inc
push
xchg
push
clc
jmp
sbb
push
out
push
rol
pop
jno
lods
adc
ljmp
mov
stc
xor
repz
pop
incl
ja
movsb
xchg
sti
pusha
push
jge
cld
jo
dec
iret
xlat
mov
jno
mov
mov
ret
add
rcll
das
adc
sbb
add
cmp
xchg
repnz
sahf
inc
push
das
add
cmc
in
gs
mov
sbb
adc
jbe
rorl
data16
cld
xchg
inc
mov
inc
ja
hlt
inc
out
fisubrs
adc
fisubl
out
idivb
mov
out
or
jnp
or
repz
addr16
jle
adc
pop
adc
adc
adc
int3
out
leave
jne
cmpsl
sub
addl
mov
xchg
lds
ror
cmp
mov
lock
enter
fmul
addr16
data16
rcr
cmpsb
push
dec
lret
ds
cmp
in
sarb
lahf
add
in
out
int
sbb
xchg
clc
mov
jle
aam
les
adc
xor
and
xchg
std
test
jge
or
insl
fstpt
pop
jno
mov
pushl
jp
subb
in
or
cs
out
cmp
mov
pop
add
adc
xchg
outsl
push
pushf
fmull
pop
mov
or
scas
fcomps
daa
das
mov
add
and
mov
in
jns
inc
mov
aaa
inc
iret
or
shll
or
in
adc
dec
sti
inc
insb
mov
in
dec
pop
rcr
notl
push
cli
sti
pop
pushf
xchg
test
cmp
push
cmp
mov
dec
pop
mov
cli
pop
iret
imul
repz
jp
ds
pop
cltd
mov
dec
sub
mov
inc
inc
adc
std
sub
loop
jns
jb
andl
mov
dec
and
inc
stos
mov
mov
dec
cs
cs
xor
mov
pop
xor
and
clc
cmpsl
sti
inc
pop
xchg
lea
cli
repz
xlat
insb
jne
sub
mov
sub
cmp
adc
mov
test
jae
xor
pop
js
movsl
add
xlat
cltd
sub
dec
sbb
ror
popa
fldpi
repz
and
shr
sbb
mov
cmc
in
call
pop
pop
cmp
dec
mov
or
dec
add
sti
xchg
xchg
pop
sbb
es
xchg
xchg
ss
adc
sub
jnp
call
ljmpw
jle
mov
jle
mov
inc
sbb
fwait
sub
cmp
pop
lods
cmp
xor
dec
adc
push
or
pop
lds
sbb
sub
dec
adc
sub
movsb
leave
xor
dec
mov
shrb
push
add
mov
adc
xor
loopne
and
arpl
fnsave
fs
or
leave
cmpsl
fcom
dec
lods
push
dec
out
jns
loope
inc
add
movsb
gs
rcrl
cmp
sub
arpl
lds
pop
mov
aas
fistl
jecxz
dec
or
enter
and
out
loope
rcrb
cltd
movsl
xchg
fwait
xor
xchg
ja
pop
cwtl
fnstenv
fs
push
push
test
sbb
sub
jae
xchg
pop
cmp
lret
test
pop
fimuls
rclb
mov
insb
cmp
mov
mov
dec
and
stos
imul
mov
jp
aaa
jg
clc
sub
dec
mov
mov
pop
pop
mov
push
or
jnp
in
in
bound
outsb
lods
lcall
in
lods
sbb
dec
mov
dec
mov
lods
xor
js
mov
mov
cs
aas
lds
and
mov
iret
outsb
loopne
call
cli
or
mov
pop
mov
mov
mov
fs
add
out
ret
shl
or
jl
inc
aaa
fiaddl
or
sbb
pop
out
and
mov
or
and
dec
mov
jle
sub
in
mov
pop
lret
push
test
imul
scas
ja
scas
cwtl
jno
cmp
aas
fs
aaa
push
int
and
sti
xor
cmp
enter
aad
ss
xchg
push
sub
clc
lret
cmp
outsb
jl
mov
cmp
jge
mov
nop
and
add
imul
aad
dec
ja
repz
aad
mov
aam
mov
out
xor
or
fsubs
sbb
or
and
rolb
pushf
es
mov
out
jb
xchg
jno
sbb
scas
cmpsb
inc
dec
xor
add
inc
in
lock
mov
jbe
out
aas
mov
mov
jl
and
mov
mov
and
pop
mov
test
jg
lahf
aaa
dec
mov
mov
and
mov
dec
ficoml
sbb
lret
in
mov
push
rorb
dec
fdivr
jnp
push
cli
xchg
mov
mov
cmp
lods
scas
sbb
lods
setnp
mov
cmp
addr16
adc
pop
pop
pushl
scas
fsubs
outsb
push
inc
inc
inc
xor
dec
movl
cmpsb
and
js
xchg
out
xor
test
stos
inc
fnstenv
xor
xchg
mov
repz
sahf
pop
xchg
dec
imul
js
inc
xchg
sub
insb
roll
or
jge
inc
out
mov
adc
testb
sub
inc
dec
std
daa
aad
or
int3
adc
pop
in
js
dec
inc
xor
jmp
dec
add
add
add
add
add
loope
add
add
xchg
add
lea
add
add
add
add
add
add
add
addl
mov
add
add
add
pop
addb
add
or
add
add
icebp
add
lods
add
mov
add
add
dec
add
add
add
add
add
jo
loope
jo
jo
int3
add
add
add
add
or
or
or
push
nop
add
add
xor
adc
add
loopne
add
add
shlb
add
add
add
and
add
inc
icebp
mov
add
adc
sbb
add
fcoms
sbb
sbb
test
sbb
sbb
adcl
loopne
jae
inc
push
mov
cltd
add
cmovg
fldpi
sahf
mov
mov
mov
inc
xchg
push
jmp
or
cld
inc
pop
in
mov
std
sub
mov
cld
or
cwtl
jle
incl
push
movsl
lock
push
add
push
push
pop
fs
push
shlb
mov
mov
mov
cmp
add
push
daa
lock
add
xor
pop
pop
pop
add
push
jmp
mov
add
cmp
mov
test
std
xor
rcr
add
lea
jo
inc
mov
push
dec
jo
incl
add
sbb
clc
loopne
shr
sub
mov
cmp
lea
cmc
adc
adc
push
jne
call
adc
add
out
adc
sbb
mov
add
add
sbb
sbb
daa
rolb
fs
inc
add
add
in
aam
jo
gs
push
inc
outsl
xchg
push
add
push
js
add
push
add
add
sbb
popa
jge
add
pop
jb
outsl
imul
inc
popa
gs
int3
jo
add
add
add
add
add
xor
add
add
loopne
add
add
shlb
add
add
add
add
add
and
add
add
adc
add
popf
loope
adc
cmp
jo
mov
fistpl
push
test
or
cli
nop
aas
in
loopne
fnstenv
in
jae
js
lods
inc
icebp
cmc
pop
sbb
jle
sbb
repnz
insl
mov
pop
inc
pop
lods
cmp
in
test
in
hlt
xchg
mov
push
mov
xchg
repnz
ror
push
mov
lds
mov
arpl
dec
jle
xchg
mov
mov
add
dec
sub
call
xchg
mov
mov
arpl
fnstcw
enter
lds
popf
repnz
jl
jmp
aad
aad
mov
or
call
mov
movl
xchg
jnp
in
adc
mov
dec
out
adc
xor
call
push
divl
aas
aad
jbe
arpl
sbbl
movsb
in
fwait
test
mov
mov
mov
jg
nop
xchg
aas
or
push
popa
and
lock
les
sbb
es
out
or
push
add
cmp
mov
jbe
jecxz
pop
call
mov
mov
aas
add
dec
push
jl
fistps
je
and
mov
mov
sbb
mov
ret
shlb
xchg
in
pop
in
and
out
mov
sbb
dec
pop
insb
inc
pop
test
add
pop
dec
mov
into
addr16
test
orl
push
mov
mov
cmp
gs
gs
inc
fsubrl
mov
stos
cmp
test
inc
insb
jno
loop
sub
lods
ret
mov
push
mov
insl
jge
int3
fidivl
sarl
es
xor
xchg
xor
sub
out
mov
ret
fimull
jne
lret
xchg
enter
scas
xchg
adc
cmp
push
dec
rclb
je
or
lods
loopne
push
sahf
in
sub
in
fmull
sbb
inc
mov
lods
jge
mov
xchg
inc
repz
cltd
and
cld
test
fisttps
lods
push
ror
gs
adc
rolb
mulb
push
sbb
add
std
pop
cmpsl
add
repnz
cmpsl
idiv
into
adc
pop
test
div
inc
out
jg
outsl
dec
fldenv
push
mov
mov
dec
adc
fnstenv
pop
jg
sub
ljmp
inc
xchg
les
int3
push
mov
out
and
shlb
jne
xor
sbb
mov
cli
cmc
out
xor
pop
mov
outsb
imul
cmpsl
cmp
insl
inc
jmp
or
shll
mov
sbb
mov
andl
xlat
cmp
and
jo
ret
lds
lds
dec
xor
push
or
jno
sbb
out
insl
and
sbb
hlt
push
cli
cmpsl
pop
cmp
xor
leave
dec
fdivrl
lods
xchg
sbb
popa
xor
aaa
or
in
pop
scas
lock
ret
das
hlt
in
lahf
jl
xchg
sub
push
adc
mov
test
cmp
push
out
notl
jp
pushf
mov
xor
movsl
call
int3
notb
shlb
sub
lea
aam
xchg
mov
rcl
cmp
jbe
push
fwait
inc
shr
dec
mov
stc
test
aaa
mov
mov
adcb
out
les
enter
idivb
lock
xor
jns
flds
push
push
subb
inc
and
daa
inc
xchg
leave
pusha
shll
mov
mov
rol
adc
inc
popf
out
push
mov
sub
xor
fisttpll
sub
pop
pop
sub
mov
or
dec
push
mov
sbbb
arpl
adc
jl
inc
sti
mov
push
test
call
rorl
lcall
push
jg
lock
jb
shlb
inc
xlat
inc
movsb
les
in
pop
mov
pop
in
dec
dec
int3
ficompl
aas
adc
pushf
inc
jge
pop
adc
xor
sbb
sub
es
and
sti
scas
ss
cld
add
mov
and
stos
out
xchg
push
xor
fiaddl
in
pop
rolb
adc
mov
aas
and
nop
insb
out
pop
cmc
ss
inc
xor
adc
into
sbb
mov
mov
mov
and
hlt
inc
cmp
mov
xchg
test
xor
nop
pop
inc
fstl
aaa
adc
jecxz
push
shl
xor
inc
pop
test
xlat
js
adc
dec
or
xchg
loop
and
mov
fs
outsb
sub
sub
sbb
pop
inc
mov
dec
pushf
fstl
inc
mov
stc
inc
jb
mov
mov
mov
ljmp
loopne
js
xchg
or
cmc
push
dec
or
fldt
mov
js
dec
mov
lods
fidivl
hlt
mov
adc
insl
cld
adc
mov
jae
sub
shl
and
fs
movsb
xchg
cmp
es
sahf
int3
rclb
sub
les
clc
in
imul
loop
jno
js
fsubrp
dec
and
es
inc
or
outsl
and
mov
cli
inc
cmpsb
xchg
imul
push
xor
scas
push
pop
mov
sub
in
push
inc
push
repz
jne
push
inc
mov
outsl
lret
imul
mov
insl
rcll
add
ret
push
fidivrs
hlt
scas
repz
fwait
sub
mov
pop
cli
push
jae
cmp
mov
mov
adc
xor
lahf
out
aas
sub
shr
mov
pop
mov
test
sbb
sub
in
add
push
mov
dec
jno
loope
sub
cli
xor
mov
jmp
das
out
ficomps
inc
mov
pushf
cmp
stc
scas
lahf
shlb
rolb
dec
and
call
lods
push
int
int
testl
sbb
and
imul
xorl
mov
pop
mov
fisubl
push
sbb
jmp
mov
sbb
into
jo
cmp
mov
mov
popa
and
adc
push
dec
sti
mov
pop
imul
popa
adcl
jne
xchg
out
cmp
push
mov
pop
mov
jbe
lods
es
adc
mov
in
cld
mov
ror
nop
push
push
rclb
cltd
and
inc
inc
dec
fidivrs
movsl
xor
or
aad
and
mov
icebp
or
add
or
fldcw
mov
sbb
add
mov
sub
xchg
cwtl
pop
sti
stos
sub
lods
movsb
jb
or
sub
shld
imull
inc
test
testb
cmp
cmp
xor
xor
push
jmp
mov
mov
dec
mov
or
jns
jbe
pusha
ljmp
out
xor
mov
hlt
or
orb
xor
jmp
int
adc
push
xchg
aam
mov
and
dec
ret
cmpsl
fsubs
scas
xor
jo
mov
jge
jl
popf
push
andl
bound
jbe
ret
aaa
pop
in
mov
roll
in
lahf
imulb
adc
jns
aaa
and
cmp
adc
xchg
xorb
fcmovb
mov
push
pushf
ljmp
lahf
int
cld
imul
push
out
adc
pop
inc
mov
xor
inc
in
sub
sarb
push
inc
test
jp
insl
mov
add
jno
idivw
push
dec
mov
pop
fldcw
jo
dec
int
sub
or
or
in
xchg
test
jns
push
jmp
xchg
ret
insl
ja
insl
insb
ds
sbb
jge
cmpsl
mov
test
mov
loopne
hlt
mov
ffree
ja
test
repz
xchg
pminub
icebp
and
loope
cmpsb
cmp
and
sbb
push
add
sti
stos
mov
out
lds
mov
xchg
push
xchg
data16
xor
jnp
lods
repz
lcall
jge
mov
mov
sub
rorl
pinsrw
hlt
sub
mov
fdivl
inc
shlb
bound
mov
mov
mov
cmp
movsl
lcall
push
xchg
pop
stc
sahf
or
pop
popf
xchg
or
ja
je
decl
mov
xchg
outsl
mov
out
jp
cmp
inc
cmp
and
or
xchg
mov
jmp
std
and
pop
add
lahf
add
loope
add
ret
xor
das
call
iret
mov
sarl
sbb
sbb
lcall
rcrl
scas
mov
sbb
sub
aas
std
xchg
mov
xchg
and
mov
fwait
outsb
push
push
inc
mov
jg
stos
pusha
xchg
shr
in
cs
sbb
into
sub
hlt
sub
in
push
rclb
iret
push
roll
pusha
sbb
jbe
rorl
fisubs
addr16
negb
push
push
sub
aaa
arpl
pop
outsl
insl
push
dec
push
in
aas
shlb
cld
adc
cld
in
inc
insl
jle
sub
push
xor
out
mov
jp
jge
sub
call
stos
jb
jge
push
fistps
movsl
insl
mov
test
xchg
push
mov
cmp
mov
xchg
bound
and
xchg
cmpsb
mov
int
fwait
popf
and
and
jo
insl
dec
push
lahf
push
jbe
xor
lret
sub
adc
hlt
mov
loop
xchg
mov
fcmovbe
stos
enter
adc
add
add
cwtl
adc
and
inc
or
aaa
es
cmp
pop
jno
jnp
pop
xchg
dec
idivl
outsb
fwait
ja
nop
sbb
out
cbtw
fidivrs
xchg
or
pushf
dec
ja
dec
jo
mov
pop
lds
adc
sbb
mov
add
fcom
lret
or
cmp
jnp
arpl
xchg
popf
push
mov
fisttpl
pop
mov
push
dec
push
in
loop
adc
lds
es
out
scas
and
cmpsb
icebp
sub
mov
or
pop
ljmp
mov
fnstsw
into
add
and
jb
std
andl
mov
ds
fiadds
and
dec
mov
adc
pop
cmc
enter
dec
shrl
ret
xlat
and
adc
sbb
sahf
push
mov
in
xor
outsb
add
xor
and
xor
inc
jns
jge
adc
lock
adc
divl
push
or
imul
das
xor
sbb
and
mov
adc
inc
inc
insl
fsub
adc
rcll
rorl
pusha
jae
adc
push
mov
cmc
jb
jns
cmp
and
ret
je
mov
fidivrs
push
das
cli
aas
sbb
aam
cli
dec
jno
push
lock
mov
mov
jne
stos
mov
inc
sbb
push
lret
mov
shrl
cmp
dec
es
test
push
into
dec
repz
js
rorl
cmp
mov
push
hlt
mov
pop
dec
das
test
or
ret
mov
xlat
fwait
inc
sub
add
das
fldenv
xchg
adc
cmpsb
mov
cmp
pop
in
sub
std
xorb
aad
jae
xchg
sar
mov
xchg
pop
addb
test
clc
movsl
adc
cmp
insl
mov
hlt
xlat
jmp
lahf
inc
stos
cmp
mov
mov
inc
lds
cld
faddl
mov
icebp
add
xchg
jae
jae
or
cwtl
inc
mov
mov
aas
jno
call
inc
popa
iret
sbb
mov
or
pop
in
or
add
aad
mov
dec
mov
pushf
add
cmc
in
fldt
jl
mov
rcr
addr16
push
jp
dec
cmc
gs
mov
and
jne
jle
daa
xchg
mov
xor
or
xor
stos
lcall
in
mov
mov
notl
stc
into
into
out
scas
push
loopne
cld
call
ficompl
daa
push
pop
fcmovne
pop
gs
insb
andb
add
fucom
pcmpeqw
adc
pop
inc
xchg
dec
jnp
and
mov
test
sub
push
mov
gs
dec
jns
scas
pop
es
sub
xor
in
in
mov
sbb
or
insl
das
inc
mov
dec
insb
insb
fidivs
push
repnz
cltd
fldl
mov
scas
leave
sub
fsubrs
push
inc
push
sbb
push
or
lds
sbb
add
xor
pop
repnz
les
js
add
inc
jecxz
icebp
sbb
add
adc
mov
std
jge
xor
pop
adc
mov
insb
cmp
mov
and
stos
lahf
xadd
and
xchg
enter
pop
mov
adc
in
ljmp
daa
fst
sub
cmpsb
push
movsb
or
inc
lahf
mov
fistps
fldt
rclb
xchg
fimuls
int3
cmp
add
shr
popl
test
dec
mov
jnp
ljmp
xor
je
out
fcoms
dec
dec
cmp
in
push
shl
or
vmread
faddp
adc
xchg
jae
iret
pusha
repnz
popa
arpl
push
xchg
arpl
jmp
sbb
mov
adc
sbb
xchg
cmc
and
dec
inc
jle
cmp
mov
mov
dec
xchg
leave
xchg
jp
sbb
or
cmp
rol
sub
jmp
iret
pusha
push
mov
repnz
jnp
cmp
mov
rdmsr
jle
push
out
bound
sub
cmp
pop
and
insl
mov
mov
push
incb
xor
fadd
and
cmp
les
sbb
inc
inc
call
mov
or
jbe
stc
mov
push
and
fistpl
loopne
and
std
add
adc
sbb
pop
xchg
xor
and
es
pop
pop
je
mov
js
push
out
add
xor
fstpl
shlb
movsb
hlt
xor
scas
call
push
inc
xor
xchg
sbb
xor
push
stos
and
xchg
cmp
ja
mov
sub
in
dec
cmp
add
jg
cmp
sbb
das
and
mov
ret
les
and
test
cmp
or
scas
test
pop
ffree
iret
jns
popa
cli
xchg
xchg
icebp
arpl
idivl
mov
mov
jbe
aam
mov
outsl
lret
aad
xchg
out
icebp
mov
xchg
cltd
addr16
mov
cmp
add
inc
data16
adc
cltd
in
and
mov
or
fsubr
xor
out
dec
mov
xor
cltd
paddsw
dec
mov
ret
jge
sbb
inc
enter
nop
out
pop
jmp
icebp
jae
pop
loope
adc
pop
pop
push
lret
lcall
add
popf
in
insl
lret
icebp
mov
mov
or
insl
out
fmull
or
movsl
shll
mov
aad
sarl
lret
mov
push
mov
xor
rclb
and
mov
aam
adc
add
jecxz
scas
bound
lahf
lea
mov
mov
mov
stc
sysenter
inc
and
lods
aam
cmpsl
movsl
sub
daa
xor
sub
ror
jg
xor
enter
or
mov
int3
push
gs
ret
fildll
pop
xchg
test
outsl
lcall
popa
pop
imul
rcll
lea
pop
clc
xchg
sbb
outsl
test
mov
iret
pop
test
xchg
dec
mov
push
add
cltd
adc
or
jb
jg
jo,pt
imul
and
jle
mov
push
mov
add
std
sbb
leave
cmp
divb
pop
cld
fmuls
leave
mov
fsubp
inc
pop
or
lock
data16
sbb
and
jge
jle
cmp
shlb
mov
lret
xchg
push
mov
mov
ljmp
aam
mov
jecxz
lea
aad
pop
xchg
push
mov
call
and
jle
test
js
outsl
repz
add
push
push
int
stc
insb
sub
add
cmpsl
sbb
xor
ds
adc
out
adc
sub
outsb
push
out
fwait
leave
test
mov
jno
mov
ficompl
and
das
fnstcw
xor
sbb
test
call
pop
ljmp
out
jecxz
call
mov
aas
idivb
ss
cmp
test
dec
test
repnz
jbe
xchg
and
dec
add
pop
xor
fdivrs
jge
sub
lock
dec
jne
jnp
mov
cltd
and
inc
jne
std
xchg
call
dec
dec
int
mov
xchg
jg
dec
ljmp
roll
pushf
xchg
mulb
daa
fidivrl
test
std
jbe
out
mov
les
cmpsb
decl
add
add
add
add
add
add
xor
add
add
loopne
add
add
shlb
add
add
add
add
add
and
add
add
adc
add
add
rclb
add
add
add
add
add
push
loopne
add
add
rolb
add
add
add
add
add
adcb
inc
nop
ja
mov
dec
add
mov
add
jecxz
and
outsb
in
rorb
or
add
add
add
add
adc
mov
adcb
ret
add
and
popa
add
add
pop
add
add
inc
push
mov
sbb
push
add
add
and
push
inc
jb
push
daa
pop
ja
dec
out
ret
imul
add
xlat
inc
xorl
dec
pop
lea
mov
add
add
pop
mov
pop
pop
adc
mov
adc
test
cld
adc
add
inc
shl
push
leave
dec
mov
ret
and
add
incl
lcall
cmpsl
in
in
push
or
or
xor
cld
add
xchg
incb
add
add
or
lahf
cld
mov
add
jmp
add
xor
adc
push
popf
push
xchg
cmp
or
dec
or
mov
add
jne
in
lea
push
push
push
inc
add
pop
add
mov
add
add
loop
add
add
add
add
push
inc
cli
shrl
outsb
je
cmpsl
add
jno
gs
gs
push
outsb
inc
imul
insb
loopne
popa
arpl
xchg
push
inc
push
jb
addr16
jns
outsl
xchg
cmp
inc
push
insb
inc
into
loope
gs
js
rolb
add
add
rolb
add
add
add
add
add
add
add
mov
add
add
adcb
ret
add
and
add
add
jb
add
add
inc
push
add
cmpsb
sub
rol
cmc
sub
push
or
out
loopne
jnp
jmp
jne
ja
ffree
pusha
and
mov
xor
pop
out
adc
dec
pop
xor
jl
stos
mov
call
or
mov
fcomi
xchg
push
sub
jle
lods
cmp
mov
ja
xor
add
jge
push
jb
push
mov
out
xlat
mov
mov
pop
jno
adc
fadd
ja
cld
adcl
sub
pop
lock
and
cltd
and
scas
gs
push
xor
adc
or
xor
repz
xchg
xlat
push
in
stos
pop
push
mov
lods
fsincos
imull
mov
pop
cmp
mov
dec
xchg
sbb
repnz
mov
in
push
mul
cltd
lock
push
mov
cmp
adc
sub
loop
dec
addr16
pop
xor
pop
xchg
daa
je
add
and
jge
loopne
jg
loope
pop
xchg
cli
adc
clc
cld
bswap
dec
cmp
test
push
xor
in
in
jg
ret
dec
sbb
lret
xchg
movsb
mov
test
fstl
rcr
pusha
pushf
shrb
push
xorl
pop
ret
insb
loopne
cmp
lahf
push
mov
shrl
push
addb
push
enter
push
or
cmpsb
push
mov
and
add
or
adc
push
sub
lcall
mov
pop
sbb
aaa
dec
xchg
lret
xor
xor
into
in
notl
add
ret
sbbb
dec
dec
fs
xchg
jno
pop
insl
pop
daa
dec
inc
or
add
jge
xchg
dec
cmpsb
xchg
rcl
cmpsb
cmp
push
sub
xor
mov
fbld
push
mov
ret
xchg
adc
into
arpl
sub
add
add
insl
push
xor
ret
mov
xor
lcall
cmp
dec
sbb
mov
jns
incl
mov
movsb
sbb
movsb
scas
sbb
xchg
lahf
loopne
dec
popa
mov
add
sarb
cmpsb
sub
xchg
adcl
in
sub
lock
hlt
cmp
out
jmp
test
cmp
fisttps
notl
mov
insl
sbb
in
adc
xor
pushf
and
faddl
mov
inc
pop
inc
push
xor
test
loopne
outsb
xchg
mov
iret
mov
pop
nop
mov
push
pop
mov
sub
out
lods
in
mov
push
and
mov
mov
sbb
pop
ja
mov
mov
xor
fisubs
or
lds
ret
adcl
js
and
enter
jmp
push
xchg
out
scas
lret
xchg
es
push
jno
sbbl
popf
dec
popl
cltd
mov
sti
movsl
frstor
loop
pushf
das
add
fcom
fistpl
add
insl
and
inc
test
out
pop
pop
loope
push
lods
shl
dec
sub
daa
mov
xchg
in
lea
outsb
jg
insb
mov
icebp
mov
mov
jmp
ja
ret
sahf
insl
subl
imul
adc
inc
outsb
xor
jb
subl
sub
jo
push
loope
sahf
sbb
loope
mov
pop
ljmp
adc
jo
cmp
inc
inc
sub
lods
jg
loopne
mov
lret
or
push
xor
test
movsb
fimull
mov
ja
jp
add
jmp
dec
icebp
pop
xchg
sti
out
add
push
std
or
jmp
dec
insb
and
repnz
repnz
push
hlt
inc
pop
add
pop
fidivs
daa
mov
ljmp
jp
add
inc
ss
dec
dec
fnstcw
mov
inc
xchg
mov
loop
jbe
or
lret
mov
sti
and
inc
push
js
sub
inc
ret
pushf
cmpsl
cmp
int
jo
adc
xor
add
mov
orl
aad
scas
in
xor
pusha
adc
outsb
call
cwtl
cs
mov
leave
or
jbe
repnz
scas
lds
pop
mov
repz
nop
sub
jo
hlt
shrb
inc
outsl
mov
out
and
divb
mov
insl
mov
out
lcall
pop
bound
daa
sarb
xchg
add
lock
test
dec
cld
push
cli
or
pop
cmp
pop
adc
jae
icebp
call
outsb
pop
xor
and
aaa
mov
hlt
dec
jge
sbb
mov
pusha
data16
imul
insb
mov
xchg
push
scas
dec
pop
mov
nop
fistps
push
and
lea
mov
cli
add
frstpm(287
adc
cmp
sti
add
jle
rcr
outsb
sub
mov
dec
jbe
int3
xchg
inc
fs
dec
cmp
sbb
push
sub
dec
dec
cmp
out
insb
add
mov
ficoms
inc
and
stos
in
imul
aad
push
fcompl
das
cmp
hlt
notl
sti
jl
or
cltd
aad
lods
imul
pop
inc
xorb
ds
xchg
mov
cmp
and
mov
adc
add
pop
shl
jno
idiv
push
imul
packuswb
lds
fidivrs
jecxz
cltd
lgs
int3
and
jo
jmp
sub
pop
arpl
adc
push
jne
mov
pop
les
xor
jp
out
scas
in
jo
xor
adc
dec
inc
fdivrl
fcom
xor
gs
ss
jg
loope
insb
fcmovb
dec
lds
xor
sub
cmp
adc
cmp
xchg
pushf
into
push
mov
sbb
jae
sub
mov
jle
lret
in
sbb
pop
xchg
xor
push
stc
mov
daa
in
dec
dec
int3
call
inc
data16
mov
xchg
ror
in
xorl
cmp
mov
pushf
push
shll
out
push
outsb
and
daa
inc
sti
nop
xor
cmp
cmp
pushf
pop
xor
mov
call
adc
and
sarl
push
jb
sbb
mov
mov
inc
icebp
xor
jbe
jmp
clc
into
fwait
test
stos
ret
and
dec
fwait
dec
adc
in
and
fs
push
or
sbb
jbe
sub
mov
jbe
adc
and
jg
pushl
js
in
sti
add
sbb
sbb
mov
mov
ja
cmc
adc
pop
rcrb
mov
mov
sbb
dec
jl
dec
mov
scas
and
jecxz
notb
loopne
nop
das
je
xchg
mov
sub
mov
fidivl
fmull
int
mov
sti
xor
popa
call
mov
jmp
pop
data16
xor
js
lahf
push
sub
std
adc
inc
aas
lods
and
int
jp
sahf
movsb
stc
xchg
mov
orl
lahf
insb
ss
aaa
xor
nop
sub
mov
cwtl
jae
das
pop
in
xchg
out
cs
mov
adc
rol
aad
shrb
inc
and
sbb
mov
mov
pop
add
push
push
insb
mov
inc
add
mov
cmp
and
dec
mov
jmp
std
into
xchg
xlat
jmp
mov
into
mov
inc
push
xchg
inc
outsb
jno
aam
mov
and
outsb
es
sbb
sti
mov
or
pop
dec
fldln2
pop
arpl
inc
aaa
push
push
sbb
mov
mov
test
jg
in
or
in
xchg
mov
jb
lds
jmp
jns
int3
mov
pop
xor
scas
das
std
jne
dec
jecxz
mov
insb
xchg
cmpsl
mov
rclb
inc
test
mov
pop
mov
and
push
jns
mov
ds
fwait
sbbb
jl
pusha
add
push
pop
movsl
or
xchg
js
fstpl
jo
cwtl
clc
cld
iret
nop
rclb
mov
pusha
inc
xlat
fcos
cmp
add
enter
pop
push
testb
lahf
xchg
rcrb
add
je
sub
jne
imul
push
jmp
pop
andb
cmpsl
ret
mov
negb
lods
mov
cmp
jmp
outsl
or
scas
shrb
and
ret
leave
outsb
xor
sub
adcb
shrl
fldt
mov
add
test
fstpt
mov
arpl
push
xchg
adc
in
xor
pop
xlat
sbb
and
xor
mov
mov
jno
lods
loope
inc
stos
pop
add
inc
mov
pop
adc
and
dec
cmp
call
mov
imul
push
mov
int3
and
out
mov
cmp
adc
inc
insl
movb
pop
fdivrs
cmpsl
insl
scas
repz
add
repz
aam
es
mov
out
cltd
sbb
iret
leave
fidivrl
jo
adc
fwait
and
sbb
push
lcall
les
nop
movsl
aad
xchg
and
and
jecxz
cmp
mov
mov
ljmp
jg
adc
roll
scas
sbb
add
dec
movsl
cmp
sbb
fisubrl
add
push
iret
mov
cmp
loop
jecxz
sub
es
sub
gs
iret
jle
movsb
test
aad
inc
and
rcrl
sub
in
test
inc
mov
dec
out
push
jo
imul
leave
or
lds
popf
call
push
into
fs
xchg
inc
push
or
push
adc
pop
or
or
das
push
stos
lcall
dec
jnp
mov
cmp
pop
xchg
nop
cwtl
dec
mov
aam
test
xor
xchg
fwait
push
adc
rol
dec
cwtl
add
cmc
iret
fwait
cmp
iret
inc
and
cmp
scas
int3
out
shlb
xchg
jge
mov
pushf
push
push
cltd
rcrl
fdivs
jnp
adc
test
test
xor
pop
clc
fucom
mov
icebp
sub
cmp
xchg
sti
out
inc
push
jmp
sbbl
pop
xchg
or
xchg
cmpsb
mov
adc
lods
in
mov
xchg
out
fsubs
in
pop
icebp
mov
sarl
inc
ret
mov
and
or
adc
or
sbb
mov
out
test
mov
sbb
pandn
rolb
jns
je,pn
mov
adcb
dec
sbb
xchg
adc
popa
subb
and
and
pop
jbe
pop
out
xchg
stc
lods
bnd
and
lret
mov
adc
lret
mov
adc
or
in
into
loopne
ret
pop
test
push
pusha
xlat
ljmp
loopne
fwait
sub
xchg
xchg
cmp
sub
nop
or
jbe
daa
add
jne
pop
in
into
bound
lret
std
in
dec
incl
inc
std
cli
mov
movsl
add
test
scas
mov
icebp
mov
out
xor
in
mov
pop
sub
out
out
push
addr16
adc
cwtl
fdivrs
dec
xor
imul
dec
int
test
mov
xor
xchg
mov
lods
or
cwtl
das
vcvtss2si
xchg
inc
and
mov
lods
sub
popf
ret
bound
sbb
pushfw
sbb
test
xchg
xchg
adc
testb
test
jl
mov
pop
dec
movsb
and
loope
lds
daa
jl
stos
jno
xor
cmpsb
xchg
adc
gs
ljmp
repnz
cmp
push
inc
cli
outsl
push
add
add
and
clc
bound
ss
add
inc
in
push
or
sub
les
pop
mov
std
out
cmp
push
mov
aaa
xlat
xor
mov
fisttps
sub
in
dec
jae
cli
out
mov
int3
fnsave
push
push
xchg
shr
sub
or
iret
loop
lods
add
lahf
nopl
push
or
or
pop
push
sbb
add
sbb
inc
jnp
mov
je
xchg
imul
sbbl
jno
imul
cmp
outsl
ss
outsl
fiaddl
mov
aam
inc
ret
les
and
sub
clc
jg
sbb
jl
inc
jno
push
pop
mov
pop
cmpb
rol
mov
lret
sahf
es
cld
adcl
push
movsb
or
lods
mov
imul
aad
xchg
jmp
sbb
adc
and
push
sbb
lock
mov
ret
jbe
sbb
or
mov
xchg
sbb
out
data16
mov
icebp
dec
int3
add
movsl
movsl
adc
aam
lods
mov
imul
xchg
xor
sbb
mov
xchg
and
out
cmp
pop
push
sub
mov
xchg
mov
jno
movsl
pop
bound
sbb
xor
movsl
insb
fsubl
out
test
push
mov
push
fldl
cmp
adc
cli
sub
cmp
iret
sbb
test
xor
inc
ljmp
mov
lret
frstor
sub
loopne
and
ljmp
ss
out
mov
pushf
cmp
xchg
lea
add
stos
fisttpl
adcb
or
popf
aaa
pop
xchg
testb
aam
pop
aaa
and
mov
jno
orl
stc
lea
jbe
arpl
es
jl
scas
push
xor
in
movsb
and
jnp
les
test
out
imul
or
dec
xchg
pop
cs
sahf
pop
data16
cmp
scas
fdivp
and
push
lahf
cltd
pop
nop
imul
xor
push
cltd
add
bound
xor
out
hlt
xlat
lds
inc
jnp
sbb
aad
imul
sahf
cmpsb
daa
or
lods
call
ret
add
loop
push
filds
add
shl
dec
mov
dec
xchg
sahf
out
cli
mov
gs
jp
xor
fidivs
scas
stos
enter
or
fucomi
adc
xchg
and
xor
imul
pusha
sbb
inc
iret
testl
mov
in
inc
test
dec
mov
sbb
dec
dec
imul
jns
xor
cmp
jecxz
imul
push
jb
nop
adc
add
cmp
sarb
sub
and
ret
outsb
add
fimuls
add
ret
inc
sbb
out
push
adc
jne
push
scas
lods
sbb
dec
push
call
aas
mov
push
repz
mov
loopne
pop
jae
ficompl
lcall
sub
mov
out
jp
js
pushf
in
addr16
test
adc
sub
movb
add
pop
jb
adc
into
xchg
fistl
shll
arpl
cmpxchg
sbb
call
enter
adc
dec
sbb
jbe
inc
mov
xchg
add
dec
mov
es
out
xlat
inc
into
push
lahf
jecxz
ret
fcomp
fs
js
repz
out
mov
sbb
xor
push
pop
sub
jb
or
test
xchg
pop
dec
in
jmp
cmp
cmpsl
addr16
sub
and
dec
sub
sbb
decb
aaa
aaa
scas
insb
cmp
arpl
jns
push
leave
loope
push
pop
hlt
ret
mov
mov
gs
fsubrl
xor
scas
and
xor
xchg
dec
or
dec
daa
sarl
sgdtl
in
sbb
orl
daa
sub
jmp
push
and
adc
call
jnp
mov
pop
and
inc
jl
loopne
mov
psllw
call
mov
xorb
mov
pushl
lea
sarl
adc
gs
cmp
mov
cmp
aaa
bound
gs
subl
adc
inc
outsb
std
push
rcr
push
sbb
stos
sbb
mov
loope
cmpsb
or
dec
mov
nop
bound
and
push
out
loop
mov
cmpb
or
mov
push
in
and
test
aam
cltd
sbb
mov
lret
repz
leave
or
mov
dec
repnz
xlat
jbe
inc
jecxz
jle
sub
jbe
imul
daa
nop
inc
or
mov
inc
push
dec
pusha
iret
inc
xor
arpl
into
mov
jmp
sbb
push
cmp
cld
inc
daa
jmp
sub
lret
imul
ja
stc
cmp
pop
into
xor
stos
mov
cli
xchg
dec
xor
cmpsl
shll
fidivl
dec
jo
mov
xlat
mov
ret
or
lds
xlat
push
or
pusha
shrb
jno
cmp
xor
cmp
and
insb
pop
pop
or
or
out
pcmpeqb
xchg
and
fcmovb
push
test
popl
lds
inc
js
mov
jge
add
ret
arpl
in
mov
jg
mov
ss
ja
inc
out
loop
cmp
pop
icebp
jl
mov
es
test
mov
add
add
loop
add
add
rolb
add
add
add
add
add
add
add
mov
add
add
adcb
ret
add
and
add
add
jb
add
add
inc
push
add
xor
repnz
nop
add
repnz
rolb
and
add
add
adc
add
add
call
mov
add
add
loop
add
add
add
ljmp
ja
ljmp
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
xor
add
xor
mov
mov
add
mov
mov
mov
mov
call
mov
movzbl
movzbl
sub
je
call
push
push
pushl
inc
pushl
pushl
call
mov
cmp
je
push
pushl
call
jmp
mov
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
sub
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
add
add
xlat
arpl
mov
outsl
enter
add
ja
add
add
inc
xchg
add
test
pop
mov
out
add
add
mov
add
add
xchg
add
pusha
add
add
add
daa
mov
add
sbb
pop
add
add
or
sbb
sbb
and
fs
add
outsl
pop
jb
pop
cmp
outsl
pop
add
add
movl
push
pop
ret
add
adcl
ljmp
xor
incl
call
sbb
lret
mov
call
scas
mov
stos
rorb
jecxz
push
std
lcall
add
jg
add
add
leave
sbb
incl
add
mov
pop
insb
push
decl
loopne
sbb
test
pushl
lock
cld
push
add
add
dec
call
call
data16
ds
jne
repz
loopne
jne
mov
push
add
rol
add
push
lcall
add
add
cmpsl
xor
sbb
sbb
add
add
inc
mov
sbb
sbb
mov
out
imul
dec
add
shll
je
aas
xchg
popa
gs
roll
inc
outsl
mull
add
jo
jg
add
jo
inc
js
adc
popa
inc
outsl
add
jbe
fs
ss
insb
push
insb
mov
add
add
add
add
inc
xchg
add
add
pop
mov
out
add
add
mov
add
add
xchg
add
add
push
jecxz
add
add
mov
add
add
insb
dec
mov
int3
cmp
adc
divb
inc
pusha
add
ss
rol
cwtl
lcall
and
cmp
int
pushf
daa
leave
stos
jmp
popa
dec
mov
or
std
mov
aam
and
loop
pushf
imul
aaa
fistps
add
out
sar
add
popl
sub
cwtl
push
leave
sbb
sahf
ljmp
pop
ja
dec
xor
nop
mov
mov
fs
cmp
in
cmpl
jo
push
adc
push
inc
ret
rclb
pusha
jp
mov
sub
nop
pop
pop
out
dec
mov
adc
xchg
clc
mov
jb
sub
xchg
push
hlt
rclb
inc
jne
sbb
mov
inc
stc
cmp
dec
jo
pop
scas
popa
sbbl
push
lret
sbb
ret
mov
mov
mov
sub
stos
lcall
add
ds
testl
vpsubw
sahf
notl
pop
scas
inc
cmp
ljmp
and
aad
mov
mov
dec
pop
and
sbb
push
mov
mov
cmpsb
push
cmc
cmp
out
sbb
aaa
call
cs
dec
ret
je
xchg
cmc
dec
inc
ret
mov
xor
adc
sub
in
inc
add
push
cmp
push
shlb
inc
mov
leave
popf
mov
jo
mov
mov
hlt
daa
add
mov
push
sbb
int3
ret
fnsave
mov
sub
sub
xchg
inc
inc
imul
ret
cmp
xchg
cs
inc
cmpsb
pop
jle
pop
xchg
mov
xchg
cli
adc
add
xchg
mov
add
adc
adc
shld
std
xchg
aaa
jmp
adc
mov
fwait
leave
jbe
fidivrl
sub
or
int3
jmp
in
jecxz
jns
mov
mov
lods
iret
mov
or
je
pop
sub
cltd
add
lods
sti
pushf
mov
push
add
sbb
mov
sub
sub
js
fwait
nop
mov
cmpsb
adc
stos
xlat
shll
cmpsb
mov
mov
sub
rcll
xchg
fimuls
fisubrl
xchg
data16
lods
mov
out
xlat
xchg
cmp
popf
clc
add
jbe
repz
sub
iret
lock
ljmp
jns
test
pop
jbe
sub
jle
mov
push
jecxz
icebp
shrl
sbb
dec
add
and
pushf
pop
scas
jl
jg
xor
adc
imul
add
xchg
mov
out
mov
sub
dec
in
and
mov
xchg
daa
ret
lret
test
jns
aas
add
mov
lock
or
add
jo
xchg
shl
xor
inc
arpl
push
push
and
insb
aaa
mov
scas
stc
std
std
pushf
mov
add
pop
das
pusha
jmp
inc
das
rolb
xor
mov
mov
popa
cltd
cmp
jb
cltd
or
or
inc
add
mov
xor
or
dec
pop
fs
or
es
dec
sbb
mov
sub
dec
sbb
xchg
push
insb
or
aas
les
adc
push
outsb
cmpsl
aas
jg
or
lods
xchg
mov
repz
out
inc
mov
sbb
xchg
mov
repnz
add
jno
or
clc
push
sub
sub
xchg
sub
and
cltd
jns
scas
lea
sbb
lahf
imul
ret
in
in
mov
fnstenv
fstpl
sub
add
sahf
sbb
inc
adc
repnz
lahf
and
fcmovbe
and
clc
cmc
push
pop
push
mov
mov
pushf
ror
call
imul
jl
pop
test
adc
jo
jns
adc
lea
cmp
jle
scas
adc
sub
rolb
mov
jbe
dec
mov
into
push
stos
sbb
mov
adc
mov
adc
push
insl
jp
jmp
test
shlb
jl
sbb
movsl
and
cmp
fidivl
enter
stos
dec
dec
cmpsl
ss
jae
ret
sub
cltd
and
out
sti
je
adc
in
fisubl
jp
mov
hlt
xchg
mov
xor
sub
inc
xchg
shlb
outsb
xlat
movsl
scas
neg
add
pop
xor
mov
jecxz
fwait
mov
sbb
mov
in
pop
and
out
lds
jmp
mov
mov
jnp
shlb
movsl
test
dec
lods
pop
fdivs
mov
daa
test
xor
es
push
fsub
lret
pop
xor
xor
jo
dec
mov
sbb
dec
cltd
lods
xor
pop
xlat
pusha
add
adc
inc
push
jge
ret
repnz
xchg
jnp
adc
icebp
ja
jnp
or
fisubs
add
into
add
push
in
jmp
adc
mov
adc
jns
aam
inc
fildll
cmp
ficompl
lock
dec
lock
mov
in
ljmp
sti
test
rolb
pop
push
cmp
mov
cmp
repz
jns
rcll
or
jnp
jl
inc
adcb
leave
xor
dec
cwtl
dec
test
cmp
jp
mov
stos
or
pop
dec
jbe
cmp
sub
sbb
pusha
mov
rolb
pop
stc
imul
cmc
jbe
bnd
xchg
push
addl
dec
adc
test
pop
out
or
jl
or
pop
aaa
xchg
insb
les
pop
shld
push
imul
aaa
out
icebp
fadds
insl
pop
mov
fnstsw
cmp
fwait
stos
dec
out
outsl
dec
mov
dec
clc
aad
push
mov
xchg
jno
fwait
cmp
popa
lcall
or
adc
bound
data16
and
mov
test
pusha
nop
mov
sub
dec
inc
xor
xor
inc
sarb
dec
scas
sbb
mov
xlat
mov
ret
ljmp
mov
jno
sbb
adc
push
in
xchg
add
ret
rorl
mov
dec
lock
icebp
sahf
aas
aaa
dec
push
xchg
pop
aaa
std
push
mov
jmp
push
xor
cmp
mov
pop
aad
and
addl
pop
cmp
repz
enter
dec
sbb
cmp
mov
jns
cmp
icebp
push
lret
nop
mov
push
adc
pop
mov
movsl
cwtl
cmp
fidivrl
xchg
mov
cmpsl
repnz
xchg
push
pop
lret
rcll
das
or
lods
mov
add
adc
andl
out
mov
sub
and
xchg
pop
push
je
fiadds
pop
mulb
or
subl
mov
in
lods
subl
jmp
in
aas
cli
lods
test
ljmp
popa
mov
scas
or
std
pop
icebp
jbe
arpl
stc
ret
push
xchg
enter
adc
lret
inc
cmpsl
push
inc
lea
xchg
repnz
pop
xchg
ror
popf
add
jle
inc
lret
es
jno
jg
out
mov
fnsave
ljmp
fstpt
or
clc
iret
mov
dec
lea
pop
popa
pushf
cmpsl
fiaddl
enter
fldenv
xchg
adc
test
sub
arpl
push
cmp
sub
sbb
push
sub
cmpsb
xchg
cmp
dec
icebp
jge
repz
mov
push
or
xlat
imul
rcl
push
jb
mov
imul
pop
and
push
inc
cwtl
orb
popa
movsl
jnp
inc
push
push
pop
sbb
out
gs
test
popf
push
inc
pop
sti
jmp
nop
sbb
imul
daa
divb
fists
insl
mov
out
lret
sbb
jae
mov
push
cltd
rcl
pop
jno
loopne
sbb
aas
rorb
adc
ret
outsl
stos
xor
fidivl
pop
jmp
fiadds
sub
rcll
jecxz
and
mov
fmull
and
mov
fwait
pop
fbld
js
jne
xor
insl
xchg
pop
jle
inc
out
fistpl
sub
out
jne
pop
shrb
cmp
mov
xchg
sti
loope
mov
bound
sahf
sbb
ja
jmp
or
or
insl
icebp
lock
sbb
out
cmp
ret
mov
hlt
mov
je
adc
push
and
inc
xchg
fiadds
loopne
aaa
push
jno
mov
push
icebp
shll
add
xor
loopne
xchg
addb
sbbb
jns
loop
mov
push
outsb
inc
lret
ja
add
fnstsw
cmp
sub
lds
adc
int3
mov
jmp
mov
mov
mov
inc
jae
xorl
and
sahf
outsl
mov
dec
jne
sbb
sub
mov
cmpsb
insl
inc
test
arpl
ja
out
in
mov
push
jae
cmpsb
xor
pop
std
or
pop
add
iret
jp
jle
sub
or
inc
sub
ds
and
es
les
je
lea
pop
scas
push
or
cmp
cmp
enter
cmp
leave
mov
ja
addl
inc
mov
out
sbb
xor
sub
push
push
mov
mov
in
js
pop
rolb
push
lcall
cltd
adc
int3
mov
in
test
lea
mov
divb
fdivrs
stos
xlat
out
rorb
jge
fmul
in
pushf
add
pop
sbb
outsb
mov
dec
aas
sub
xchg
add
nop
pop
dec
sub
jns
xlat
fisttpl
push
xor
adc
pop
cmp
mov
outsl
test
sbb
sub
adc
inc
outsb
scas
imulb
aaa
inc
xor
fistpl
clc
push
xor
pushf
daa
js
movsb
insl
inc
in
jnp
xor
pop
xchg
xchg
sub
mov
into
pusha
pusha
mov
push
cmc
pop
jb
mov
aas
xchg
pop
push
sub
push
cmp
in
data16
and
and
lret
je
sbb
scas
xchg
dec
and
jecxz
mov
mov
inc
aad
push
dec
test
jl
mov
sbb
or
mov
dec
test
xor
xchg
xchg
pop
aas
xlat
jo
inc
test
mov
and
es
xchg
sub
mov
pop
pop
divb
mov
test
out
subb
push
cmpsl
jb
mov
pop
xchg
add
or
test
bound
aam
sub
jmp
mov
pop
inc
lock
aad
lahf
leave
add
fstpl
mov
push
mov
mulb
arpl
cmp
sarb
fnsave
xor
das
movsl
mov
mov
add
mov
hlt
iret
jbe
clc
lods
movsb
dec
lods
xor
adc
les
aaa
and
addl
cs
imul
pop
mov
jg
das
sub
mov
dec
std
mov
sbb
push
inc
movsb
push
stc
push
and
js
pop
arpl
dec
loope
scas
pop
iret
sbb
aam
sub
ljmp
jnp
jp
in
aaa
in
add
cmp
jg
dec
ds
lock
jae
dec
aas
negb
outsl
jl
pop
mov
mov
xor
dec
inc
shl
cmp
fwait
test
out
std
cmp
add
cli
mov
and
jg
add
mov
stc
rclb
pop
adc
out
je
jno
push
stos
mov
fnstcw
outsb
push
xchg
sbb
ds
repz
js
cwtl
mov
in
dec
stos
mov
push
jno
repz
inc
xor
pop
xchg
mov
test
mov
stos
adc
and
nop
pop
jl
int3
mov
pop
movsl
lock
fisttpll
pop
mov
add
sbb
mov
xchg
sti
dec
lock
ljmp
adc
cli
out
imul
andb
out
cmp
jo
pusha
in
and
sub
push
fisttps
outsl
adc
sub
pusha
lea
or
mov
inc
mov
dec
inc
mov
imul
cmp
cmp
add
push
lods
dec
data16
jb
call
adc
mov
in
fimull
push
mov
ret
cli
xchg
and
dec
mov
xchg
sahf
jbe
popa
cmp
subl
xchg
test
add
pop
pop
jnp
cltd
iret
in
int3
pop
mov
cs
in
sahf
xor
rcrl
repnz
and
jae
push
inc
pop
and
xchg
stc
jno
call
cmp
imul
mov
jno
adc
pop
or
add
stos
cmp
cmp
sbb
test
cmp
rcrb
sub
jp
rolb
mov
mov
gs
dec
mov
in
mov
cld
enter
jno
adc
scas
daa
ja
cmpsb
mov
dec
mov
lcall
mov
xlat
into
cs
loop
loopne
mov
cmpl
xor
add
pop
scas
das
loop
idiv
push
pop
or
shrb
mov
ljmp
pop
stos
pop
sbb
shlb
enter
mov
sbb
sbb
or
imul
popa
push
mov
addb
or
mov
imulb
xlat
mov
mov
mov
or
pushl
fnstcw
in
pop
or
arpl
pusha
mov
js
ret
test
aad
jmp
dec
push
pop
inc
add
std
cmp
sarl
adc
push
addr16
enter
pop
push
leave
hlt
addb
adc
sbb
mov
int
mov
sti
and
pop
cmp
mov
out
xacquire
xor
mov
mov
sub
fistps
sub
or
sbb
mov
xor
jmp
rol
nop
or
popa
lock
cmpsb
in
and
push
idivb
xchg
test
iret
sbb
fs
les
fbstp
sbb
or
imul
cld
outsl
rolb
jecxz
cs
fistl
jl
nop
sub
mov
mov
push
sahf
or
in
scas
in
loopne
pusha
cmp
insb
and
out
imul
hlt
mov
sbb
mov
arpl
loopne
stos
xor
or
pusha
fstl
xorb
imul
xlat
enter
fcompl
pop
mov
cmpsb
pop
xor
outsl
pop
jge
shr
mov
or
mov
cmp
jmp
add
je
jl
cmp
push
jl
mov
lods
es
jp
push
fcomps
test
mov
and
aam
xor
sbb
cltd
insl
xor
stc
xor
aas
call
out
xor
push
mov
add
pop
mov
mov
pushf
pop
lock
ss
loope
ss
push
outsl
in
in
xchg
push
xchg
ds
in
push
mov
mov
and
dec
xchg
loopne
insb
mov
mov
pushf
insb
push
mov
and
repnz
cmc
sub
cmp
adc
ficomps
cmp
jb
bound
pop
mov
out
lods
aad
insb
add
inc
or
mov
jnp
jbe
pop
push
push
sbb
xor
les
shll
stos
cmp
hlt
xor
pop
nop
and
fs
cmpb
cwtl
push
add
jle
xchg
rorb
les
push
inc
jmp
and
jecxz
xor
leave
xchg
xchg
out
iret
dec
mov
test
add
sub
scas
insb
popa
cltd
into
cltd
sbb
pop
aas
cmp
outsl
rorl
jecxz
inc
sub
mov
cwtl
std
dec
sub
dec
cmp
iret
add
mov
ss
sbb
pop
ds
cld
sub
xchg
js
add
cli
jo
stc
lock
dec
dec
dec
mov
xchg
hlt
adcl
and
shll
imul
repnz
jo
fnstsw
mov
and
xchg
add
dec
pop
ja
sub
stc
dec
enter
dec
iret
maskmovq
mull
xchg
jle
into
sub
add
fildl
xor
mov
dec
arpl
add
mov
lahf
inc
lea
inc
xchg
fcoms
cmc
cmp
lret
pop
and
repz
xor
lods
out
movsl
aad
jmp
aas
cwtl
in
xchg
adc
push
inc
or
je
subb
leave
fistps
cltd
lret
flds
mov
jne
cmc
fisttpl
push
sub
das
mov
xor
xor
aaa
or
cs
pop
mov
mov
mov
shll
add
rolb
add
add
push
or
outsl
dec
sbb
sub
mov
in
sub
pop
gs
cmp
cmp
pusha
jo
test
mov
div
insl
idiv
cmpsl
idiv
ljmp
mov
arpl
add
add
add
add
add
inc
xchg
add
add
pop
mov
out
add
add
mov
add
add
xchg
add
add
push
jecxz
add
add
mov
add
add
inc
addb
add
adc
add
add
add
add
addb
add
pop
push
add
add
xlat
arpl
add
add
pushl
stos
stos
add
xor
mov
dec
dec
repz
ret
push
dec
add
mov
add
dec
add
add
add
add
add
add
add
roll
add
add
push
jae
add
insb
popl
add
add
loope
and
add
add
mov
add
clc
addl
and
popa
popa
fistl
ja
mov
dec
pop
push
cs
mov
add
bswap
add
jbe
adc
push
jl
cmp
jmp
sub
iret
or
jmp
test
jp
adcl
adc
add
push
mov
cmp
inc
push
push
decl
push
add
lea
repz
data16
add
add
scas
call
adc
dec
or
add
add
test
add
rorb
repz
jmp
push
adc
mov
adc
enter
xabort
push
push
add
add
add
adc
sbb
insb
ret
add
das
add
xchg
mov
arpl
add
add
add
add
inc
inc
shrl
adc
inc
sub
inc
add
gs
aaa
imul
dec
cmp
xchg
rolb
fbld
aaa
imul
add
outsb
and
mov
mov
dec
imul
inc
imul
xchg
add
mov
add
add
add
add
add
add
roll
add
add
add
add
add
add
adc
add
add
mov
push
cs
xchg
xchg
or
stc
jl
pusha
push
fldcw
repz
or
mov
mov
dec
test
push
shrl
scas
push
xchg
test
sbb
repz
fists
push
mov
clc
jmp
mov
sub
sub
je
and
dec
loopne
sbbl
cmpsb
outsl
movsl
scas
jns
or
or
out
sarb
xor
cld
sbb
jne
add
cwtl
fiadds
and
aad
sub
add
out
stos
push
lock
or
icebp
adc
xchg
or
pop
xorl
dec
mov
negl
outsb
into
loopne
and
shlb
inc
rorl
jb
xor
test
dec
sub
aad
jbe
lock
xchg
lcall
sar
mov
ficomps
js
or
sbb
mov
sbb
push
push
sub
jne
push
ds
rorb
mov
ja
push
in
push
movsl
mov
js
dec
ja
dec
popa
push
test
mov
jmp
mov
aad
inc
adc
insl
push
outsb
lret
fidivs
divl
fists
xchg
hlt
push
jmp
pop
daa
and
mov
insl
lock
dec
xchg
pusha
fidivrs
mov
sbb
aaa
repz
jl
jnp
popa
push
ss
enter
dec
pop
popa
test
fiadds
dec
cmpl
dec
ljmp
mov
jp
inc
and
lds
cmp
scas
lret
rclb
test
in
outsb
mov
jle
movsl
rcrb
sub
pushf
xor
adc
xor
stos
cmp
and
iret
vpaddw
dec
pop
and
push
inc
mov
jmp
jns
mov
xchg
mov
popa
push
cs
call
bound
test
or
fsts
rorl
mov
aas
adc
mov
dec
call
pop
fdivrs
push
icebp
and
mov
mov
xchg
pushf
xchg
pushf
sbb
jno
out
cwtl
fdiv
pop
cmpsb
mov
icebp
fldt
dec
or
xor
lods
push
cli
imul
jmp
leave
rorb
outsl
cmp
and
das
xchg
es
lock
push
shrb
sti
cmpl
or
add
fmuls
fildl
test
sub
add
rorl
les
loopne
jle
enter
imul
or
add
lods
cmp
loopne
iret
out
sbb
call
in
sub
cltd
mov
and
mov
lods
jnp
inc
out
pop
add
mov
add
call
pop
mov
insb
out
jno
and
add
mov
push
dec
cmpsb
clc
jns
cmp
sahf
repz
enter
pop
cmp
inc
dec
mov
mov
xchg
sbb
lods
jnp
mov
gs
popa
jp
push
jno
ss
test
movsl
btc
and
sbb
push
aad
inc
inc
or
xchg
xchg
xchg
xor
mulb
add
and
and
xor
mov
popf
add
xlat
scas
cmp
sub
in
rclb
inc
in
pop
and
xchg
pop
cwtl
pop
sbb
bound
push
stos
or
arpl
push
or
mov
mov
add
push
movsb
adc
sub
int
repz
das
fisubrs
mov
add
rol
push
inc
leave
repz
insl
outsl
jmp
cmp
sbb
xor
andps
cmc
dec
push
jns
or
mov
cmc
sbb
femms
sti
inc
dec
iret
pop
mov
or
frstor
cwtl
lcall
dec
int3
push
cmpsb
cmp
mov
stc
sbb
add
lahf
add
pop
gs
call
pop
add
xchg
ja
push
xchg
bound
push
add
in
dec
xchg
mov
jno
xchg
aas
loope
pop
ret
push
out
roll
and
sub
test
xchg
shlb
xor
rep
pop
mov
jmp
push
cmp
dec
bound
stc
xchg
stos
arpl
sub
mov
push
jnp
pop
or
sub
sub
adc
pop
pusha
or
nop
and
std
push
lds
add
in
lahf
addr16
sbb
pop
cmpsl
add
mov
push
add
cmc
mov
adc
fldl2t
xchg
aad
push
adc
shrb
aas
repz
sbb
cmpsb
xor
nop
cmp
push
je
mov
dec
in
or
cmp
out
pop
mov
sbb
rol
imul
int3
adc
push
dec
daa
ret
and
nop
cmp
shlb
inc
pop
mov
or
fdivl
adc
and
cltd
pop
stos
mov
xor
scas
fwait
insl
jns
scas
outsb
mov
popf
cmpsb
jno
les
inc
xor
es
mov
mov
out
and
imul
xchg
in
and
lods
ja
lock
mov
cli
jae
mov
nop
or
leave
adc
nop
insl
mov
add
ds
mov
dec
pop
in
sub
dec
cli
cmp
adc
in
test
sahf
jmp
push
movsl
iret
add
and
or
xchg
ficomps
pusha
push
dec
es
lahf
dec
pop
int3
push
loop
xchg
or
xchg
cltd
sbb
jne
fs
jmp
sbb
js
cmp
imul
lock
cltd
jge
mov
shlb
aas
dec
mov
in
xlat
ja
aad
std
mov
mov
pop
and
adc
inc
cmc
pop
and
inc
sub
xchg
mov
outsl
outsb
pop
pop
aad
inc
loop
push
lods
mov
xor
mov
mov
out
adc
xchg
stos
dec
mov
xor
fstl
and
pop
push
out
nop
push
hlt
inc
mov
and
jle
outsl
loop
cmp
xchg
jb
repnz
icebp
in
arpl
xor
pop
inc
lock
ret
imul
lea
addr16
sbb
xor
wrmsr
test
xor
stos
leave
push
jo
sbb
and
ret
addr16
imul
enter
dec
xchg
pop
shrb
ds
fidivs
pusha
lret
push
cmpsl
mov
outsl
mov
into
push
cmp
and
fstl
xor
addr16
fldenv
jb
pop
loope
push
pop
lcall
clc
xor
push
adc
fnsave
mov
or
or
push
jg
pusha
testl
rclb
xchg
inc
inc
cmc
adc
ret
jle
popf
dec
sbb
jmp
movl
lock
jg
adc
cmp
je
mov
mov
mov
xchg
push
or
sub
pop
and
sbb
dec
mov
xor
call
cmp
aad
mov
in
push
jge
std
jnp
outsb
pop
cmpsb
cwtl
adc
cmp
xchg
dec
nop
fistps
xchg
sbb
mov
sbb
rcll
jae
jle
fisubrl
or
fwait
or
mov
fdivs
cmp
cltd
push
rcll
cmp
movsl
repz
add
js
in
loop
ljmp
dec
mov
mov
xor
jbe
es
lret
cmp
aad
xchg
adc
pop
jecxz
sbb
daa
sub
sub
xor
xchg
movl
mov
inc
out
movsl
negb
jl
in
sub
imul
jbe
pop
xadd
jge
inc
nop
adc
loopne
subl
fs
outsb
push
fwait
push
mov
pop
stos
iret
lock
sbb
inc
push
pop
popa
fidivl
sbb
std
lret
jbe
inc
gs
and
pop
adc
mov
int3
jo
or
pop
subl
xchg
adc
pop
stos
jl
adc
xchg
mov
ljmp
sarl
inc
xor
stos
sti
imul
or
or
shl
sub
stc
mov
call
test
jbe
outsb
adc
and
int3
movsb
cmp
cmp
scas
lret
inc
sbbl
adc
fistl
je
push
ja
dec
cli
mov
xchg
jb
pop
stos
dec
adc
xor
cmp
mov
aad
in
xchg
pop
dec
adc
pusha
pushf
dec
mov
jg
bound
dec
inc
enter
adc
gs
mov
mov
pop
cltd
or
and
push
pop
mov
dec
and
test
ret
dec
push
xorl
lret
aaa
loopne
inc
call
stos
push
push
sbb
nop
nop
add
dec
jp
lds
cs
enter
dec
lods
ja
mov
and
mov
push
ror
sub
sarl
mov
js
mov
sti
xor
rcrb
outsl
adc
mov
je
push
and
jmp
nop
dec
push
push
dec
ss
mov
jno
enter
inc
lcall
out
inc
cmp
pop
jo
das
and
mov
inc
adc
xchg
dec
fwait
sbb
fistl
out
int3
push
mov
xchg
pop
push
hlt
sub
insb
sub
xor
mov
shll
push
sub
cmc
inc
std
insl
add
add
aaa
aam
cmp
push
adc
ret
out
test
mov
dec
movsb
inc
out
mov
aam
mov
nop
mov
loop
test
dec
sub
scas
cmp
add
inc
push
bound
notb
push
cld
jge
sahf
jp
adc
cmp
cs
in
pop
xchg
jno
repnz
push
ss
mov
pop
cmc
xchg
fcoml
mov
mov
div
adc
xchg
jl
mov
mov
push
mov
repz
cmp
loop
xchg
imul
pop
repnz
sub
xchg
mov
out
and
mov
or
and
cmp
add
enter
lret
lret
cmp
xchg
add
cmp
mov
testb
test
sbb
pop
xor
dec
scas
cmp
pcmpeqb
ret
pop
popa
cli
out
loop
push
push
in
cmpsb
lods
fidivl
add
stc
push
gs
fcmovne
mov
out
pop
push
xchg
leave
jns
je
cmp
stc
push
push
jmp
in
lahf
xchg
popf
xor
cmp
shrl
lea
jb
ss
mov
and
dec
xchg
push
test
out
pop
dec
lahf
insb
dec
sbb
fwait
gs
add
imul
mov
push
add
fisubl
lret
mov
xor
fnstsw
cmpsb
or
enter
push
mov
dec
stos
loop
jae
sbb
xchg
in
stos
insb
cmpsb
mov
into
into
lret
add
in
xchg
xor
rcr
std
jbe
jmp
into
sar
jecxz
outsb
leave
lret
leave
data16
scas
pop
roll
xchg
xlat
add
add
int
push
jge
jne
xchg
pop
dec
lds
rcl
fwait
lods
pop
xor
mov
out
cmpsl
les
jbe
sarb
jo
mov
mov
mov
pop
cs
fstps
mov
sub
push
and
es
jnp
mov
mov
sub
add
in
pop
inc
sbb
negl
out
enter
add
notl
cmp
xor
lods
mov
mov
fdivp
pop
mov
xor
push
fadds
add
pop
jbe
mov
lcall
cltd
out
add
mov
test
adc
call
xchg
sub
imul
mov
xchg
xchg
les
test
hlt
jmp
in
jno
jbe
add
bnd
repnz
fcmovnu
jne
or
xor
mov
out
loope
mov
negl
arpl
outsb
jg
sbbb
xchg
shrb
mov
xor
loope
lcall
ret
inc
and
repz
cmp
ret
cmp
mov
cmp
mov
adc
add
ljmp
xor
mov
push
out
pop
ficoms
shll
fildll
sbb
mov
ret
subl
test
inc
dec
into
mov
mov
call
sbb
out
bndldx
cmc
sub
cwtl
mov
dec
mov
shrb
and
imul
dec
mov
cmp
testb
dec
inc
dec
divb
xchg
sbb
shll
subl
clc
inc
mov
int
int
cwtl
jo
jns
addr16
dec
jo
xchg
aad
shll
push
jge
add
mov
dec
and
in
scas
je
xor
insl
or
xchg
mov
mov
xor
bound
or
xchg
jecxz
dec
std
popa
ret
int
roll
iret
sub
clc
xchg
xchg
jmp
push
mull
xor
sub
sbb
xchg
sub
loop
jns
addr16
mov
inc
mov
jbe
sub
das
pop
pop
pop
filds
repz
clc
pextrw
call
cwtl
pop
or
cmp
iret
xchg
mov
xor
xchg
dec
rolb
lods
loop
inc
movsl
sub
mov
jne
mov
or
sub
mov
pop
loopne
and
ds
cmc
aas
into
xor
inc
add
out
jne
out
popa
or
rclb
int3
clc
xchg
adc
inc
inc
movsl
jg
pop
dec
insb
or
shll
and
cmpb
faddl
mov
push
stc
sub
fsubs
pop
push
fwait
in
mov
aad
divb
mov
out
dec
inc
push
test
mov
loop
sub
cmp
sub
dec
idiv
aas
in
push
mov
in
mov
sahf
cmpsl
fldcw
cmpsl
jne
sbb
aad
add
data16
ret
and
pop
and
sub
loop
xor
icebp
sbb
mov
out
and
mov
push
mov
fldcw
add
pop
ret
pop
xchg
adc
ja
daa
xlat
aad
fists
jo
pop
loope
push
or
push
call
cmp
lret
add
stc
ljmp
fwait
pop
inc
outsl
jp
lds
and
xchg
pop
cmp
mul
jns
pop
pop
shrb
pushf
mov
scas
add
loopne
fwait
int3
inc
pop
mov
jbe
xchg
aaa
sub
mov
sbb
out
dec
inc
pusha
es
dec
pop
shrl
data16
inc
jae
shlb
sub
cmp
stc
sub
mov
and
sub
pop
cmp
popl
pop
je
out
js
mov
shll
fmulp
and
mov
jns
jmp
xchg
and
cwtl
int
xchg
rorb
pop
scas
adc
add
in
jle
push
inc
jo
out
pop
jg
mul
sbb
dec
lcall
cwtl
cld
bound
lock
test
jmp
adc
in
sub
pop
ret
inc
fbld
dec
dec
loopne
movsb
cld
dec
out
pushf
mov
aas
sub
and
shl
ds
stc
push
sarl
inc
pop
popa
stos
dec
insb
jo
pusha
inc
xchg
pop
or
addl
or
xchg
adc
inc
cltd
mov
gs
mov
dec
aaa
fidivs
and
cmp
mov
xor
pop
inc
icebp
clc
inc
xor
lret
xchg
mov
fld
jno
xchg
push
adc
loope,pn
out
ja
es
push
ret
insl
mull
cmc
push
cs
or
rcrl
jnp
or
sbb
mov
daa
or
test
and
add
sub
hlt
or
xor
insb
jnp
repnz
jb
lret
sbb
pop
lods
shll
loop
mov
imul
mov
jbe
push
jge
mov
je
push
scas
or
es
cld
cmpsb
xor
cltd
sub
push
out
mov
js
jmp
sbb
pop
insl
fyl2xp1
push
mov
mov
lods
xchg
xchg
push
cltd
sti
faddp
add
jmp
inc
push
push
cmp
xor
pop
out
sahf
lcall
in
subb
adc
cmp
xchg
popa
xlat
jg
in
add
shlb
and
popf
pop
dec
and
out
mov
gs
dec
sub
mov
push
ret
adc
mov
pop
fs
jns
dec
pop
cmp
add
outsb
std
stos
pop
lds
mov
insl
xchg
jle
xchg
in
ret
push
testl
divb
pop
cwtl
jp
sub
stc
std
mov
cmp
loope
dec
cwtl
jno
jmp
loopne
scas
xor
fldcw
jo
fdiv
popf
filds
push
or
pop
dec
pop
mov
push
test
and
shlb
hlt
inc
loopne
mov
mov
mov
int
jo
stos
jl
jnp
ficomps
in
popa
push
ljmp
cmpsl
outsb
bound
cmpb
mov
xchg
mov
ja
mov
mov
sub
fs
ret
add
imul
xchg
add
mov
add
add
add
add
add
add
roll
add
add
add
add
add
add
adc
add
add
jecxz
add
add
mov
add
add
or
add
add
and
sti
add
repz
xchg
add
ret
add
jnp
add
dec
stos
add
jmp
cld
int3
add
add
gs
add
add
aaa
add
cmp
add
inc
push
add
add
add
add
testl
daa
add
pop
add
pop
add
pop
add
inc
add
mov
add
add
add
ljmp
pop
jae
add
push
arpl
dec
gs
dec
cmpsl
add
jb
inc
fcmovb
mov
sti
jecxz
sbb
enter
mov
fsub
mov
mov
es
cmc
xchg
jmp
clc
test
or
or
lcall
inc
dec
mov
inc
cld
jb
mov
divl
insb
pop
mov
mov
shlb
add
ljmp
add
add
faddl
addl
or
adc
sbb
xor
push
push
add
popf
out
cld
push
cmp
jno
or
add
sti
push
adc
add
cld
mov
inc
adc
dec
inc
add
clc
sub
add
pushl
clc
add
jbe
add
pop
cmpsl
add
stos
add
xchg
add
fiaddl
add
add
or
add
add
cmp
add
add
add
inc
insl
repz
gs
cmpsb
outsl
dec
mov
gs
imul
xor
lds
inc
jb
push
add
push
inc
subb
add
gs
sbb
inc
insb
das
outsl
push
sbb
jp
imul
add
add
add
add
or
add
add
cmp
add
add
add
add
add
add
testl
daa
add
sub
add
add
pop
add
inc
add
mov
movsl
mov
fisubl
mov
cld
repz
ds
jno
sub
jmp
dec
ficoms
or
mov
js
int3
pushf
sbb
add
lock
sbb
test
cld
mov
or
ljmp
adc
jno
mov
mov
adc
cli
and
outsl
ficompl
ss
fildll
lods
ljmp
push
fdivs
xchg
mov
mov
lea
dec
mov
sub
jecxz
xor
push
mov
shll
movq
jb
pop
jae
imul
push
fidivs
dec
insb
add
aas
in
stos
dec
imul
sub
xchg
sub
or
mov
xchg
xchg
test
sahf
je
cld
mov
pop
cmp
daa
sub
sub
push
jbe
aaa
jmp
das
or
dec
repz
cmpl
mov
icebp
mov
lcall
jp
mov
push
sub
jg
pushf
pop
push
in
fbstp
mov
and
lods
mov
shrb
mov
jne
cmp
faddl
push
inc
inc
out
add
outsb
mov
adcb
sub
enter
mov
testb
cmp
in
mov
dec
dec
jnp
negb
xor
xchg
or
mov
scas
aas
ret
fldl
inc
ret
bound
push
jecxz
mov
inc
jl
and
mov
aaa
sbb
push
ret
and
mov
mov
adc
mov
repnz
dec
popa
mov
xchg
jnp
lcall
xor
sub
push
pop
jb
add
loopne
pop
call
imul
ja
xor
mov
dec
in
mov
lcall
roll
xor
push
dec
cmp
test
mov
loope
test
add
bound
cmp
pop
pusha
jmp
in
adc
add
pusha
xchg
nop
inc
out
sti
addr16
out
jg
xlat
fcomps
ja
lcall
sub
inc
mov
dec
mov
imul
jb
outsb
jl
push
inc
jmp
xor
test
cwtl
and
jp
or
insb
aas
mov
or
pop
mov
into
int3
xchg
fmuls
fstpl
popa
dec
shlb
xchg
push
cmpsb
in
mov
xchg
sbb
aam
repnz
popa
movsl
sbb
dec
dec
outsl
repnz
xor
ss
lret
pop
jecxz
mov
sub
aam
pop
aad
leave
repnz
adc
insb
lods
or
push
jns
outsb
mov
in
lret
pusha
mov
into
out
push
mov
lcall
mov
or
sbb
popa
aaa
xchg
push
jb
outsb
jecxz
mov
cmp
cmp
sub
sbb
pop
test
inc
sub
roll
xchg
fisubrl
sbb
pop
jecxz
and
mov
push
and
int
jl
fiadds
cli
int
mov
out
scas
mov
mov
add
iret
dec
or
jae
mov
or
lods
out
dec
cmpl
cmp
push
add
leave
jge
mov
dec
addr16
dec
and
and
incb
or
fucom
pushf
jle
cmpb
pop
jmp
pop
mov
addr16
adc
sbb
lock
xor
dec
sti
mov
jl
insl
dec
ljmp
andl
and
jb
stos
mov
lret
lock
sub
imul
mov
mov
aaa
mov
xchg
loop
int
add
cmp
lahf
es
push
jb
nop
xchg
and
ss
sahf
ret
stos
call
xchg
adc
inc
bound
out
or
ljmp
cmp
fmuls
pop
inc
cmp
adc
les
adc
and
dec
icebp
mov
scas
lds
int
shl
add
das
bound
dec
adc
sbb
add
insb
lcall
out
mov
adc
gs
xchg
dec
jmp
pop
out
lret
adc
mov
ds
cmp
push
mov
je
lret
xorl
nop
or
leave
test
test
pop
sbb
add
xchg
mov
int
pop
cli
in
mull
mov
mulb
xchg
hlt
aaa
cld
popf
add
test
fstps
add
add
pop
pushf
pop
inc
push
int
jae
mov
shll
pop
jnp
aaa
adc
int3
test
add
sar
sbb
enter
inc
cmp
pop
call
jecxz
popf
jno
repz
or
fcoms
jne
loope
les
stc
jae
sub
cmp
cmp
test
and
int3
xchg
cld
scas
push
into
data16
adc
push
cwtl
in
movsl
sbb
pop
fstps
xchg
nop
xchg
pop
pop
lea
jbe
insb
cld
ss
loope
insl
dec
cltd
pop
add
fnstenv
aas
adc
pop
cltd
inc
mov
insl
je
jbe
cmp
jecxz
test
bound
or
mov
jg
test
dec
cmp
jb
dec
inc
lods
mov
mov
or
loop
mov
mov
mov
mov
mov
mov
cmp
jne
aaa
stc
xor
icebp
xchg
lcall
in
sbb
sub
pop
ja
lcall
jg
pop
push
adc
in
stos
xor
cmp
shrb
pop
stos
das
in
imul
sbb
mov
mov
imul
popl
xor
pop
sub
inc
xchg
mov
xchg
xchg
mov
push
dec
lahf
sub
dec
pushf
dec
pop
cmp
pop
push
fwait
jbe
pop
inc
dec
push
std
sbb
pop
adcl
test
push
mov
stos
jo
mov
mov
test
mov
cmpsl
dec
cmp
subl
cmp
test
add
imul
enter
mov
loope
xchg
and
cmp
add
test
and
pop
leave
repnz
cmp
mov
adc
mov
inc
cmp
int3
jne
xor
sub
leave
stc
dec
in
pop
dec
out
jp
add
push
pop
mov
sub
sar
fwait
aaa
int3
push
xor
xlat
and
test
ljmp
inc
movsl
and
sub
and
mov
or
shl
clc
mov
mov
test
loope
mov
cld
in
icebp
enter
or
mov
xor
lahf
push
es
adc
pop
xchg
movsl
inc
nop
in
out
loop
and
rcll
popf
clc
cmpsb
nop
cmp
sbb
mov
fisttpll
fwait
sub
sub
mov
cltd
push
adc
dec
nop
stos
fnstcw
adc
pop
es
aam
mov
hlt
out
rolb
jb
sti
mov
xor
fidivl
int
jecxz
dec
in
sub
dec
jns
les
dec
loopne
push
mov
push
sub
jmp
xlat
hlt
in
mov
out
mov
ret
or
cmp
xchg
xor
dec
es
outsb
push
in
aas
insb
adc
rcrb
pop
sbb
pop
out
or
inc
lahf
or
sub
push
in
pop
cs
sti
jb
dec
push
hlt
mov
lea
mov
xchg
adc
mov
push
cmpsl
in
popf
adc
jg
push
push
mov
add
mov
xor
sub
mov
jb
push
adc
es
add
fsubrl
push
add
inc
adcb
in
mov
aas
shrl
mov
aas
in
mov
cmp
fisubl
jb
cmpsb
mov
test
fs
push
inc
sbb
sbbb
in
sub
addb
pop
sti
inc
out
lods
cmpsl
and
add
cmp
mov
call
out
aaa
xor
das
popa
movsb
and
aaa
adc
inc
jnp
ret
xchg
int
fs
cmp
xor
sub
xor
sarb
mov
pop
push
mov
or
lret
jae
jnp
mov
xor
subb
cmp
sub
jns
insb
push
nop
add
jb
sarl
sahf
pop
addr16
scas
test
pop
sub
xor
inc
rcrl
inc
or
hlt
jo
ja
hlt
ds
inc
and
sub
cmp
sbb
lea
and
enter
inc
sub
mov
pop
test
push
add
xchg
xor
adc
xor
mov
sti
pusha
jg
add
sbb
inc
test
in
scas
jb
fisttpl
outsb
daa
shll
outsl
dec
int
pusha
rclb
in
es
jle
push
jecxz
lcall
js
ret
shrb
shll
test
fs
jne
add
aaa
sbb
pop
add
push
xchg
int
dec
hlt
push
inc
jbe
in
xchg
mov
aam
push
cmp
loop
sbb
loope
out
pop
add
cmc
enter
bound
cmc
pusha
daa
in
faddl
lahf
scas
es
ja
ret
jg
dec
shlb
scas
add
and
test
pop
fcomps
ffreep
mov
jae
outsl
xchg
jnp
hlt
jmp
jno
or
lods
cltd
sbb
orb
and
stos
jge
pop
xorb
sarl
insb
lods
mov
xor
push
pop
fnstcw
loop
pop
sbb
rcrl
inc
push
xor
addr16
push
lahf
lods
push
sub
pop
pop
adc
sub
and
ret
insb
sbb
loopne
inc
in
fmuls
outsb
sbb
push
adc
popf
push
aaa
mov
inc
pop
adc
inc
jmp
sbb
xchg
imul
inc
test
in
mov
js
lret
add
xchg
jmp
pop
cmpsb
mov
out
adc
lea
insl
mov
mov
out
xor
xchg
stos
cltd
mov
adc
rclb
cmp
mov
and
movsl
sarl
or
mov
mov
or
sbb
mov
cmpsl
xchg
lret
push
shrl
rcrl
and
pop
lods
mov
imul
out
outsb
adc
stos
lods
fidivrs
mov
xchg
fxch
sarl
lcall
shl
pop
incb
ja
fidivl
notl
or
mov
ja
ljmp
pop
and
jo
pop
sbb
je
mov
jae
mov
fstl
fldl
in
push
adc
xor
data16
cwtl
mov
testl
xlat
or
insl
jp
call
call
arpl
adc
repz
cwtd
ret
adc
cmp
xlat
das
sub
or
xor
or
div
dec
sub
push
push
mov
or
or
lods
cltd
or
mov
lods
push
lret
test
ret
fs
pop
or
push
cmp
xorl
sub
dec
mov
mov
adc
pop
and
enter
or
xchg
fs
lahf
ja
in
daa
and
mov
jnp
inc
adc
movsl
fsubrs
jno
lods
add
test
xchg
lcall
out
cmp
stc
mov
cld
frstor
and
es
mov
fisubl
jo
int3
inc
xor
out
xor
scas
sub
ja
xor
out
leave
fnstenv
insl
sub
add
mov
mov
scas
xchg
in
out
push
lock
outsb
jae
repz
xchg
aaa
stos
repz
movsb
xchg
hlt
jge
sbb
pop
sub
xchg
ficoms
push
xchg
pop
cltd
and
inc
add
jge
pusha
pop
push
aaa
or
stos
int3
add
jb
push
out
jo
orb
in
mov
xchg
roll
aam
inc
or
in
out
xchg
push
jno
jecxz
pop
fs
inc
jnp
push
inc
mov
not
adcl
lcall
pop
jae
rclb
mov
dec
cmp
sbb
inc
sbb
sub
and
sbb
sub
inc
mov
add
jecxz
test
movsl
int
nop
xchg
aas
adc
cmc
or
test
test
aas
dec
push
sbb
pop
test
xor
push
stc
out
in
test
sub
mov
subb
es
xchg
mov
jge
leave
or
jnp
sub
mov
cmp
mov
mov
hlt
xor
arpl
insb
pop
aaa
mov
loopne
mov
ret
mov
mov
mov
jg
lock
mov
cmp
jb
mov
jae
addr16
jmp
into
fistps
notl
out
sbb
lahf
mov
jecxz
out
outsl
jg
aad
test
in
xchg
ljmp
loop
in
popf
pop
and
lds
push
scas
cmpsl
fstpl
pop
push
mov
mov
repnz
sbb
ja
mulps
pop
jne
ds
loop
out
out
sbb
or
ror
mov
mov
xor
fcoml
orb
adc
mov
scas
cwtl
inc
sub
and
or
jb
xorl
pop
das
add
push
pop
dec
adc
test
dec
xchg
in
mov
aaa
sub
icebp
sbbl
add
bound
cmp
and
mov
jge
xchg
and
ret
aad
arpl
cmpsl
pusha
sbb
adc
in
rorl
icebp
xor
jbe
mov
jne
and
icebp
shr
cs
ja
clc
mov
es
in
and
in
sbb
jns
icebp
xchg
or
shll
cld
push
cltd
xchg
arpl
rcrb
pop
pop
push
fldt
gs
int
arpl
out
pop
add
out
pop
pop
mov
inc
xor
dec
inc
cli
test
jge
push
les
adc
inc
jg
dec
push
in
movsl
ss
inc
inc
jl
sbb
fistpll
mov
out
push
pop
adc
push
hlt
add
mov
jle
repnz
xchg
ljmp
xchg
adc
fidivrl
cld
fsts
cli
in
jp
cmp
add
and
push
mov
sub
js
hlt
sahf
fs
testb
mov
or
fisttpll
ljmp
and
les
adc
mov
mov
test
push
cmpsl
dec
insb
icebp
pop
movsl
mov
ret
xor
sti
enter
jne
jp
in
inc
jp
inc
pop
adc
pusha
xchg
insl
dec
aas
xor
cltd
cmp
or
sub
scas
addr16
mov
shrl
pushf
mov
testb
push
sub
push
fildl
jg
pop
out
repnz
push
mov
out
into
sarb
mov
pop
adc
pop
lds
leave
ret
ljmp
inc
frstor
cmpsl
cmp
mov
testl
int
out
lock
sbb
pop
in
cmpsb
dec
shll
push
or
jmp
cld
pop
xor
pop
rolb
or
cmpl
ljmp
pop
sarb
fwait
leave
outsb
frstor
cmp
pop
mov
dec
icebp
mov
sbb
out
xchg
in
sbb
mov
je
aad
ret
out
repnz
adc
mov
jnp
mov
push
sbb
fnstcw
test
out
leave
dec
hlt
jmp
mov
inc
or
in
out
int3
rcll
fmull
push
jbe
fldcw
out
call
add
xchg
mov
jae
sub
rolb
cmovge
and
mov
nop
xor
leave
iret
mov
rclb
repnz
mov
shlb
jle
jle
and
adc
sub
add
push
roll
push
arpl
fs
xor
in
inc
xor
sub
cmp
push
push
lds
xor
ja
add
adc
and
jno
mov
ja
dec
test
cwtl
shrb
and
xchg
ds
cmc
pop
xor
xchg
cmp
mov
icebp
popa
push
sub
loopne
xchg
cltd
int3
xchg
ljmp
fldcw
jne
lret
and
xchg
mov
mov
xor
sbb
xor
fidivs
mov
sbb
repz
pusha
loopne
loop
cmpsl
mov
cld
xchg
sti
xchg
outsb
push
cmpsb
dec
add
mov
jne
ret
test
sbb
lods
pop
and
notb
imul
sbb
add
cmp
inc
in
push
ss
fwait
pop
cli
jbe
pop
subl
lods
push
jmp
pusha
enter
cmpsb
insb
mov
popf
out
call
push
and
jno
xchg
cmp
and
cmpsl
sahf
das
ja
inc
lods
das
xchg
mov
sbb
xchg
jge
jbe
loop
inc
pop
sbb
ss
sbb
push
sahf
mov
call
scas
xchg
inc
cmp
push
lret
pop
pop
cmp
outsl
lcall
cltd
in
arpl
test
js
or
scas
ss
aam
fisubrs
push
into
imul
or
scas
xchg
adc
mov
andl
mov
sbbl
add
leave
movsb
sbb
add
and
or
lds
stc
push
mov
nop
insb
mov
cmpsl
add
mov
and
cld
pcmpeqb
mov
pop
adc
leave
adc
enter
stos
fldln2
add
lods
out
imul
mov
mov
cmpsl
and
sbb
xor
lock
adc
add
add
add
or
add
add
cmp
add
add
add
add
add
add
testl
daa
add
sub
add
add
pop
add
inc
add
mov
mov
add
add
add
xlat
add
sbb
add
add
dec
add
ja
add
add
add
add
decl
incl
popf
stos
add
ja
out
mov
xchg
ljmp
inc
add
ret
push
mov
and
les
add
add
xor
add
rolb
add
add
jae,pn
add
popa
or
add
add
adc
jecxz
add
add
or
and
mov
dec
and
andl
dec
push
xchg
xor
push
mov
cmovb
aas
js
or
decl
ret
cmpsb
xor
incl
adc
jne
push
pop
cld
pop
dec
cmp
lcall
or
dec
test
sub
pop
popa
lock
mov
mov
testb
push
adc
repz
adc
xor
add
and
push
add
xor
add
add
call
lea
decl
in
std
std
cmpb
xor
roll
sbb
jne
push
loopne
and
push
clc
jmp
rclb
enter
inc
adc
push
push
es
lea
push
add
in
add
add
add
add
xchg
add
xchg
add
arpl
add
cmp
pushf
add
add
add
mov
movsl
pop
inc
jne
inc
sbb
daa
mov
inc
dec
outsl
jle
je
pop
inc
mov
insb
jb
push
add
and
insl
jne
xchg
xor
push
mov
gs
jae
adc
loopne
insb
jecxz
inc
dec
add
xchg
add
add
add
add
add
xor
add
roll
add
add
add
add
add
inc
rolb
add
add
addb
add
out
lea
out
rolb
jle
out
popa
xor
add
mov
testl
into
outsb
mov
mov
mov
in
cltd
push
push
push
push
nop
cmp
lcall
jge
or
mov
enter
jg
in
dec
xor
int
orl
stos
inc
lcall
xchg
mov
xchg
ljmp
lds
sbbb
jno
cmc
adcl
adc
mov
ret
test
push
ljmp
ja
repz
mov
push
test
mov
icebp
pusha
push
adc
pop
inc
insb
les
test
add
sub
push
aas
and
aaa
fists
nop
lods
inc
mov
out
mov
stos
rcrb
or
lcall
mov
mov
ret
dec
and
xlat
bound
call
inc
dec
out
push
fdivp
outsb
dec
js
movsl
jle
sarl
frstor
mov
aad
int3
into
push
mov
adc
imul
outsb
sbb
xor
mov
cmp
mov
sbb
xor
aad
xor
dec
pop
push
jecxz
fstps
aad
mov
clc
shr
pop
adc
adc
mov
cmp
loope
int
adc
ds
jno
enter
push
and
cwtl
sbb
or
add
add
mov
sbb
inc
inc
shll
hlt
pop
pop
xor
sub
add
daa
adc
pop
mov
dec
insl
pushf
mov
cmp
xor
sti
or
pop
es
sub
mov
push
fbstp
push
ret
mov
rolb
scas
enter
xlat
rorb
add
mov
test
inc
mov
dec
fs
push
lret
jno
dec
inc
sbb
fidivrl
inc
cmp
orb
cld
mov
inc
sbb
mov
add
bound
add
jge
loopne
scas
add
xchg
dec
pop
cmpsb
adc
inc
call
jg
jmp
inc
sub
inc
lods
aas
xor
movsl
dec
in
shll
cmp
push
cltd
xlat
jno
sbb
test
push
xchg
int3
or
push
mov
sub
scas
std
mov
into
mov
cmp
xor
test
pushf
data16
stos
imul
xchg
sarl
andb
mov
dec
pushf
mov
xlat
adc
loop
mul
arpl
sbb
or
push
push
or
mov
in
and
loope
insb
imul
outsl
xor
lods
leave
and
jmp
adc
lds
sbb
sub
daa
clc
out
pop
jg
push
fsin
cwtl
xchg
cwtl
in
popf
lret
and
mov
push
aaa
jnp
or
push
cmp
dec
sub
jbe
je
mov
jg
sbb
into
xor
sub
js
mov
xor
jae
pop
aas
lods
les
push
je
or
pop
push
inc
mov
loopne
xchg
lds
xor
icebp
and
mov
inc
pop
repz
stc
add
adc
pop
xor
mov
outsb
out
xor
jp
data16
mov
fisttpll
jge
add
lds
fbstp
inc
push
mov
add
stos
and
and
je
mov
push
lret
aas
stos
cmp
and
sbb
repz
mov
lods
push
jno
loope
mov
stos
inc
mov
popf
dec
add
xor
rclb
imul
mov
pop
fisttpll
xchg
andb
and
dec
dec
or
cmp
add
ret
add
pop
and
jg
rcll
inc
lods
or
rcr
nop
and
or
or
pop
inc
or
popf
or
vminsd
sub
lods
pop
lret
xchg
mov
mulb
jne
fmul
push
mov
inc
scas
push
xchg
pop
jb
jbe
popf
sbb
mov
xchg
cmpsb
dec
lea
jl
and
mov
push
xchg
mov
enter
pusha
aaa
sahf
fstpl
ss
test
xchg
mov
orl
jnp
lret
aas
push
in
push
scas
jle
std
xor
mov
push
aad
popa
dec
stos
sub
aam
jo
fwait
loop
mov
push
jle
cmpsl
dec
sti
std
pop
adc
pop
movsl
and
xchg
mov
movsb
push
cmp
push
push
jne
dec
xlat
push
jp
in
jle
out
mov
mov
pop
sub
mov
iret
add
lds
or
adc
push
loop
subb
or
iret
and
sbb
stos
inc
jae
into
and
negb
test
push
pop
lods
jnp
pushf
inc
lahf
adc
addr16
push
decb
mov
inc
xor
in
cltd
xlat
push
mov
aam
lods
test
loopne
jecxz
pop
clc
addr16
cmp
pushf
es
jne
movsb
psraw
aaa
push
xor
jg
xchg
rorb
mov
dec
add
pop
push
stc
loope
lea
dec
out
dec
inc
int3
dec
jecxz
out
push
aam
mov
outsb
jno
popa
aad
in
mov
lret
std
mov
mov
xchg
cwtl
loope
mov
ljmp
add
xchg
cmp
mov
push
sbb
repnz
nop
fxch
sti
loop
imul
sub
and
mov
sbb
mov
cli
jbe
and
mov
add
jge
jae
stc
movsl
jbe
loop
xchg
out
movsb
xchg
je
ret
ds
filds
jmp
out
lret
sahf
jg
cmp
shll
stos
jl
adc
inc
arpl
sbb
mov
test
xor
insl
mov
sar
int3
jl
lock
sub
or
mov
add
sub
mov
inc
mov
decb
jb
orl
pop
pop
ret
in
lahf
loopne
shlb
sbb
dec
mov
add
inc
xor
xor
mov
dec
pop
mov
and
jo
out
rcr
lds
dec
aad
fdivrs
mov
mov
dec
xchg
and
rclb
xor
mov
test
xor
mov
data16
sub
jecxz
mov
ret
lock
insl
jge
adc
inc
sarl
cltd
movl
inc
jmp
mov
test
or
add
sbb
dec
jns
sbb
mov
cmp
mov
jno
fsubrs
scas
in
sarb
sub
mov
pop
icebp
mov
mov
fsub
div
cmpsb
add
jb
cmpsb
loopne
pop
aad
pop
scas
or
jl
push
inc
inc
inc
pop
faddp
xor
cmpsb
in
mov
rorb
and
pop
repz
sbb
sub
ffree
mov
xor
outsb
xchg
testl
negl
lcall
mov
xchg
lret
add
inc
orl
dec
rorl
lock
fcomi
pop
pop
xor
push
lcall
imul
adc
xchg
jae,pn
add
adc
sub
addb
or
mov
mov
push
sahf
cmpsb
test
rcrb
pop
fucomip
aas
lcall
mov
test
pusha
lahf
mov
and
cmp
cld
adc
jmp
mov
mov
loope
jl
mov
dec
ja
push
out
and
decb
fimull
sarb
sub
dec
fistpll
sbb
dec
sar
mov
mov
xchg
mov
pop
inc
jle
mov
lods
out
add
or
add
loopne
mov
mov
dec
inc
inc
test
xchg
das
pop
cli
call
test
cs
test
pop
sbb
imul
rorb
sbb
movsb
js
das
cld
ss
add
push
push
mov
loopne
ljmp
call
mov
mov
mov
arpl
or
rol
pop
xchg
sbb
dec
test
notb
stos
add
jmp
lods
sub
jae
mov
stc
jmp
push
jmp
adc
test
loop
lcall
sar
aam
mov
inc
sbb
ds
jmp
sbb
cmp
sbb
aad
stos
adc
lahf
shlb
push
ja
xchg
gs
inc
into
imull
mov
lahf
pop
data16
or
xchg
mov
pop
mov
je
sti
cmp
ret
xor
push
repnz
mov
movsl
pop
sbb
mov
lret
sbb
mov
aam
jl
pop
mov
xor
jnp
movsb
ljmp
xchg
out
and
mov
out
cmpl
sar
xchg
mov
notb
xlat
push
fwait
xor
cli
aam
cld
push
iret
sbb
int
mov
push
int3
xchg
je
ror
lods
enter
xchg
sub
out
cld
dec
lret
adc
cwtl
add
mov
or
in
shlb
xor
ds
clc
xchg
sbb
aaa
inc
xchg
mov
jne
aad
sub
dec
jnp
jnp
insb
push
imul
lods
popa
mov
mov
sarl
jnp
rcrb
mov
popa
shl
testb
jne
dec
adc
cmp
cltd
icebp
inc
sahf
mov
xor
fsin
test
mov
sub
rolb
push
neg
cld
daa
mov
mov
add
sbb
push
mov
out
sarl
cltd
es
xchg
mov
orl
negl
movsl
enter
xchg
mov
rcl
scas
imul
fs
pop
pushl
ljmp
xchg
inc
xor
mov
pop
test
mov
arpl
rcll
lcall
flds
and
test
sbb
aaa
les
adc
lds
movsb
iret
sahf
std
cs
je
push
jmp
xchg
shr
dec
clc
test
or
call
push
loopne
and
fimuls
pop
lock
push
adc
popf
jno
test
or
pop
cmpxchg
jno
jle
push
repz
jmp
in
rorl
into
xor
dec
lds
and
fwait
mov
pop
jbe
mov
dec
loopne
lods
sar
aam
xor
mov
and
je
mov
push
arpl
jns
sub
mov
out
out
xchg
inc
idivb
imul
mov
sahf
out
inc
and
inc
xchg
sbb
cld
pop
mov
dec
push
xor
in
pusha
push
cmp
imul
fmuls
push
push
jmp
repnz
bound
cmc
or
loop
add
rcll
sbb
and
mov
lea
sti
stos
push
lcall
mov
jno
inc
loopne
mov
mov
lret
je
mov
add
or
cltd
jns
dec
jne
aaa
xor
push
fcmovne
jns
in
into
sub
mov
mov
lcall
inc
into
clc
fsubs
sti
pop
mov
pop
sub
pop
enter
pusha
movsb
or
movsl
sahf
xor
lds
jmp
and
inc
cwtl
pop
mov
xor
pop
add
mov
jo
mov
fsts
in
in
ja
dec
shll
mov
adc
and
gs
lret
pop
dec
repnz
xor
insl
cmc
mov
cmpsb
cmp
lret
rorb
je
or
adc
popa
cld
xor
adc
aad
xchg
scas
sbb
mov
jae,pn
mov
loope
mov
add
mov
mov
ret
rcr
dec
ret
jnp
xchg
xchg
dec
sub
lods
gs
cmp
pop
hlt
push
jecxz
mov
les
inc
and
lock
movsl
stos
sbb
ror
fldenv
mov
xor
xor
or
xchg
das
dec
addr16
cmp
movsb
inc
or
inc
mov
mov
outsl
mov
and
adc
or
and
in
inc
push
mov
inc
pop
lret
test
sbb
add
sbb
stos
push
xor
ret
lea
scas
in
inc
les
mov
subb
xchg
fucomip
add
dec
sbb
int
sti
or
ss
fidivrs
sbb
jp
adc
mov
add
cmpsb
call
mov
dec
jnp
inc
fadds
inc
xchg
dec
mov
aaa
push
mov
inc
adc
stos
xchg
std
mov
mov
fdiv
jnp
adc
inc
addr16
xlat
jno
sbb
xor
adc
int3
fnstenv
pop
jmp
inc
dec
xlat
mov
hlt
or
xor
shrb
insl
and
jecxz
ret
adc
mov
push
jo
ret
xchg
pop
cmp
js
push
mov
xchg
test
sub
inc
movsb
icebp
shll
pop
lret
dec
sub
lods
xchg
pusha
xor
xchg
push
mov
fs
sub
ja
inc
aaa
jo
cmp
push
repz
inc
xchg
xchg
pop
cmpsb
les
decl
in
pushf
mov
sbb
fimull
les
dec
popa
or
sub
es
test
jne
fcoml
aam
inc
xchg
mov
jmp
out
in
and
addr16
rcrl
mov
jg
fwait
sub
jg
loop
push
and
stos
dec
push
shl
fcom
sbb
xor
fnsave
mov
inc
inc
adc
pop
pop
lods
mov
movsb
xor
in
mov
mov
arpl
std
mov
mov
sahf
pop
clc
jle
lods
in
lret
xchg
xorl
adc
idivb
push
iret
fbld
and
enter
mov
cmpsl
push
mov
lods
les
lret
testl
int3
out
fcmovnb
cmp
shlb
mov
popf
adc
push
cmpsl
and
pop
pop
stc
out
sub
orb
stos
and
test
js
jb
test
xorb
mov
rcll
dec
xchg
cmp
in
xchg
add
lcall
sti
dec
sbb
push
xchg
or
and
out
jbe
gs
push
ret
and
add
fdiv
popa
imul
out
in
xor
test
movsb
xor
sti
test
in
ret
dec
inc
arpl
fldt
ror
clc
jge
ja
popa
roll
push
adc
pop
stos
loop
clc
mov
les
mov
negb
xchg
shlb
dec
notb
ds
mov
xorl
into
scas
jl
out
pop
sarl
adc
test
lret
adc
lea
mov
xchg
add
sarl
adcb
push
into
cmc
stc
jns
and
lret
mov
test
jb
adc
mov
adc
stos
mov
inc
mov
pushf
add
xor
int3
fwait
aas
push
pop
cmp
push
dec
sbb
mov
xchg
push
sbb
or
sbb
stos
pop
sahf
int3
xchg
jl
mov
cmp
lds
cmp
addr16
push
push
sub
sbb
cmc
lcall
xor
test
out
jns
dec
push
lods
inc
test
pop
sarb
pop
pop
in
mov
jle
loopne
jl
xlat
mull
js
and
icebp
sbb
repnz
inc
push
mov
jne
mov
pop
jle
imul
or
nop
movsl
aad
leave
loop
dec
fldenv
cmp
push
aaa
cmp
sub
iret
mov
push
jo
mov
sub
push
mov
pop
and
out
adc
push
test
sbb
lcall
enter
push
pop
cmp
aas
mov
add
outsb
jo
dec
push
adcb
pop
pop
pop
int
sti
push
sbb
mov
movl
dec
pop
into
mov
xor
inc
lods
dec
pop
out
mov
ret
enter
pusha
pop
outsb
in
hlt
gs
jne
mov
jo
fisttps
or
mov
divb
bound
repz
imul
xchg
addr16
mov
mov
mov
inc
js
pop
xorb
mov
dec
lds
xor
add
jmp
mov
movsb
js
cmpsl
jg
stc
sbb
jne
push
fstps
xchg
sbb
std
push
es
dec
mov
sbb
movsb
scas
mov
fbstp
loope
jnp
test
punpcklwd
in
into
lret
or
es
aaa
in
ret
test
mov
mov
sub
xchg
enter
cmpsl
inc
addr16
mov
mull
test
in
push
js
int3
dec
sub
mov
aam
sbbb
mov
jne
ja
push
pop
xchg
adc
xlat
cmp
or
or
mov
add
mov
lock
js
mov
cwtl
in
jne
add
xchg
out
jbe
lret
sbb
inc
mov
xchg
scas
mov
xor
roll
lret
xor
xor
xchg
cld
and
sti
push
lahf
insb
je
nop
mov
xchg
scas
cmp
sub
dec
call
ljmp
test
rcr
sub
bound
dec
jb
mov
inc
arpl
cmp
add
pushl
out
dec
out
sub
sbb
add
xchg
add
add
add
add
add
xor
add
roll
add
add
add
add
add
inc
rolb
add
add
addb
add
jle
sbb
add
and
imul
adcl
add
add
rolb
add
mov
or
in
test
in
in
adc
add
add
jmp
stos
add
ja
fmuls
call
and
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
pushl
call
push
push
push
mov
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
add
add
cli
add
push
call
push
imul
jb
je
arpl
sar
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
rolb
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
roll
or
add
add
add
cld
rolb
hlt
rolb
in
rolb
in
add
fadd
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
roll
dec
roll
pusha
roll
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadd
add
clc
roll
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
ret
pushf
ret
movsb
ret
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rol
add
fadd
add
call
ret
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fadd
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
les
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
les
add
les
add
les
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
lds
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fadd
add
in
add
in
lds
add
lds
add
lds
add
add
pop
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
movb
pop
movb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
