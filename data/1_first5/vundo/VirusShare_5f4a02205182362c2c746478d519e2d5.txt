jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
or
mov
pop
test
xchg
int
add
add
add
push
or
push
add
or
add
add
add
add
add
adc
add
add
add
add
add
xchg
rolb
sbb
cmp
push
add
add
add
add
add
add
add
add
jl
stos
add
add
popl
inc
add
add
add
cmpsl
add
and
leave
add
xor
adc
xchg
push
add
ret
add
pop
add
jo
in
aaa
add
add
add
add
add
xchg
in
movb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
in
aaa
add
add
add
add
inc
add
add
push
add
add
add
mov
add
add
xchg
add
or
add
inc
add
add
test
xchg
xor
push
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
str
add
add
add
add
add
add
add
flds
add
push
add
jbe
imul
add
add
add
and
adc
add
add
add
aas
add
add
add
lret
add
add
add
add
jbe
addb
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
inc
add
mov
add
and
add
xchg
xor
adc
cmpsl
add
add
aaa
add
add
add
adc
aaa
add
add
add
inc
add
add
add
add
addl
mov
add
add
add
add
add
add
add
sbb
and
xchg
das
add
roll
add
add
add
add
add
add
add
add
add
add
add
add
fadds
and
push
add
add
xchg
insb
add
aad
sbb
sub
mov
pop
add
add
xor
adc
xchg
iret
add
filds
arpl
add
add
mov
add
aad
repz
xor
xor
add
add
repz
add
cs
add
add
add
add
push
add
add
add
add
and
repz
push
add
add
add
aad
inc
add
jne
xor
adc
xchg
cmpsl
add
mov
add
add
add
xchg
push
add
add
add
add
and
push
xchg
popl
and
addl
xchg
pop
add
test
xchg
add
nop
add
add
add
add
add
add
aas
add
inc
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
or
nop
add
add
push
add
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
aas
or
lcall
push
push
jle
adc
lods
pop
mov
sti
mov
inc
jnp
aam
jbe
dec
sbb
sub
dec
inc
into
cli
push
mov
jne
insb
sahf
aad
ret
fisubl
xor
fstpl
dec
ss
into
cmp
dec
imul
push
int
jae
mul
jns
xor
repnz
adc
test
mov
and
and
pusha
mov
and
aaa
xchg
fdivs
fmull
or
lock
shll
pop
inc
dec
decl
in
arpl
test
into
call
ljmp
ljmp
fdivrs
dec
mov
cmc
sub
imulb
and
idivb
pop
cmp
cltd
cmpsb
sub
xchg
inc
push
push
inc
xor
lret
jmp
pop
push
or
call
pop
add
xchg
jbe
shrb
div
pop
mov
out
dec
out
into
lods
add
ljmp
sti
pop
popf
dec
xor
pop
and
sbbl
pop
sti
mov
hlt
xchg
dec
push
jl
mov
bound
adc
loop
mov
stc
jb
mov
push
fcoml
dec
pop
ljmp
mov
and
add
arpl
adc
rorl
xchg
xchg
add
sbb
movsl
stos
jno
arpl
jbe
mov
cwtl
pop
je
mov
xor
cmpsb
xchg
dec
popf
jnp
arpl
sbbl
pop
sub
into
into
clc
lret
cmc
inc
cmp
push
mov
loop
lahf
in
push
xor
mov
xorb
add
or
addr16
add
ljmp
add
add
lods
mov
add
xchg
cmp
in
sti
mov
xor
mov
fiaddl
stos
cmpsb
aam
subl
jg
adc
push
xchg
adc
and
cmc
mulb
push
sub
dec
incl
jge
mov
adc
loop
cmpb
cli
mov
xor
sub
sbb
push
scas
mov
ds
out
adc
pop
dec
in
cmpsb
push
loope
sbb
daa
in
adc
inc
push
or
push
filds
imul
cmp
scas
jmp
je
sahf
push
jg
sar
push
ds
pop
fmuls
dec
add
cli
and
mov
push
jns
dec
or
stc
aaa
push
inc
fwait
and
jp
dec
mov
sarb
mov
push
cwtl
jns
sub
cmp
mov
vmread
inc
jmp
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
nop
jne
std
mov
mov
leave
rol
loopne
pop
dec
add
insl
and
push
or
pusha
aad
int
std
mov
mov
mov
adc
push
xor
sbb
jo
pusha
pop
nop
dec
cmpb
mov
xchg
lock
loopne
adc
and
inc
or
cmp
push
pop
adc
lcall
jnp
imul
jne
stc
out
adc
sbb
rol
lcall
shlb
xchg
clc
sub
fldenv
andb
mov
fisttpll
adc
add
lea
inc
addb
jb
cwtl
aad
movsb
sbbb
sarl
ljmp
xchg
rclb
shlb
in
rolb
loopne
sub
stc
lcall
or
and
add
sahf
pop
adc
dec
loopne
shll
cmp
push
movsl
movsl
add
xor
js
cmp
cmp
andl
scas
adc
add
push
adc
jo
or
mov
mov
scas
mov
mov
imul
je
arpl
inc
in
aad
mov
rcrl
or
sbb
inc
outsb
ds
imul
dec
ret
fdivr
sarb
dec
add
insl
and
jo
pusha
fstl
in
mov
mov
adc
jge
insl
and
jo
pusha
fstl
mov
shll
div
pop
sbb
dec
cmc
inc
inc
lret
sbb
ret
or
scas
lret
adc
sti
or
cwtl
aas
xchg
insl
pushf
sbb
sub
loopne
rorl
dec
shlb
cmp
add
dec
cmpsb
and
jo
pop
test
scas
jle
pop
dec
sub
popa
sub
cmpsb
imul
mov
push
push
add
mov
jns
and
gs
lahf
in
hlt
add
and
push
dec
add
add
nop
mov
daa
pop
ja
cmpsl
aaa
jnp
xchg
mov
shl
pop
mov
inc
aad
sub
add
fsubrl
data16
das
data16
mov
cmp
jb
int
and
in
out
add
in
mov
pop
incl
bound
mov
sbb
cli
mov
jbe
rorb
lods
add
fldenv
je
ret
cmpb
jl
push
fdivrs
int
ficoms
xchg
mov
cmpsl
push
adc
xchg
xor
jle
mov
dec
dec
fcomip
jle
shr
cltd
or
fwait
lea
cmpsl
xchg
jmp
pop
inc
dec
test
fstps
lods
sbb
testl
dec
jge
icebp
pop
fdivrl
push
repz
out
mov
in
sbb
mov
jmp
repz
jmp
cmpb
daa
arpl
pop
in
orb
rol
fimuls
insl
imul
sub
sub
dec
pop
ljmp
jb
ljmp
xchg
je
xchg
add
xchg
leave
fcmovu
pop
and
sbb
mov
mov
sub
sti
xchg
or
das
stc
aad
iret
cs
int3
fistpll
pop
mov
jb
jg
lods
push
les
lock
lods
push
jns
cvttps2pi
fwait
in
mov
or
or
clc
inc
push
out
lods
loope
jl
iret
inc
or
push
lea
lock
or
rolb
aaa
fsubrl
jno
out
lcall
mov
push
xchg
addb
popa
fucomp
pop
bound
shll
mov
and
xchg
cmp
inc
mov
addr16
inc
pusha
mov
stos
dec
sahf
sbb
ds
sbb
xchg
pop
jecxz
in
popf
popf
push
leave
inc
pop
cmp
mov
jg
stos
lods
push
gs
lahf
inc
imul
mov
and
jno
in
sub
inc
lods
inc
js
scas
cmp
ror
subb
addr16
mov
stc
mov
xor
sub
jne
jae
aad
sub
lods
idivb
push
add
cmp
mov
jns
cmpsb
or
pusha
adc
mov
mov
ds
test
dec
or
imul
cmpsb
adc
sbb
lock
jecxz
hlt
std
out
mov
dec
jmp
mov
jns
pop
jbe
mov
mov
or
jl
test
fstp
xchg
in
cmp
fcoml
pop
adc
loope
pushl
jmp
or
pusha
fistl
stos
xorl
testl
mov
inc
int
cmp
in
jae
push
test
and
jno
je
out
movsl
lock
int3
test
sub
sbb
in
sbb
fnsave
cmpsl
or
jo
hlt
div
pop
test
repnz
mov
mov
movsb
pop
jle
jno
fsts
push
test
roll
pop
mov
in
movsl
mov
or
push
scas
loopne
addr16
mov
popa
jae
dec
lods
sub
testb
jns
jmp
lods
test
test
mov
lods
jg
repnz
adc
inc
or
mov
jl
lods
pushf
stc
push
test
paddw
lods
push
or
ss
popa
insb
repz
repz
xchg
jle
cltd
and
ja
movsl
in
addr16
sbb
mov
dec
lea
cmc
rcrl
addr16
sub
sahf
lret
outsl
pop
sbb
arpl
loop
cld
inc
cmpsl
call
sub
and
or
dec
xor
iret
xor
data16
loopne
adc
jbe
pop
lods
jg
push
or
rorl
imulb
imul
test
mov
xchg
add
mov
sbb
loopne
xor
sbb
movsb
inc
cmc
adc
add
mov
pop
addl
cmp
pop
mov
mov
in
sub
ljmp
int
adc
imul
inc
movsb
jg
xor
sub
adc
mov
push
xor
inc
outsb
mov
xchg
fidivrs
pusha
imulb
pop
mov
subb
orb
mov
scas
in
mov
pop
xchg
pop
push
movsl
ja
rcrb
pop
and
fucomip
xor
jae
sbb
jns
jmp
pop
test
adc
ss
cmc
adc
mov
fdivrp
sub
std
mov
ret
in
insb
clc
neg
mov
je
dec
or
xor
or
nop
sbb
and
inc
daa
xor
icebp
jnp
arpl
mov
pop
sub
pushf
fs
cld
mov
mov
cltd
dec
popa
movsb
and
push
loop
adc
imull
add
test
cli
les
pusha
mov
pop
cwtl
add
add
fisttps
test
fiaddl
andl
pusha
ret
dec
jmp
jp
push
inc
sub
ja
fsubs
movsl
sbbb
push
in
fnstsw
aad
push
pusha
xor
cmp
cwtl
shl
stos
sbb
mov
iret
xchg
lea
lock
sarb
rcrl
daa
jnp
ffreep
inc
inc
adc
ja
sub
movl
xor
push
push
push
push
out
ffree
sbb
push
das
andl
js
push
leave
sbb
icebp
sbb
popf
addr16
sub
jle
mov
jge
fcomip
js
sub
push
mov
cld
pop
cmp
aas
jae
mov
mov
test
imul
dec
popa
ds
push
inc
incb
insl
pop
and
shrd
push
mov
dec
lahf
es
ljmp
push
negb
stc
add
add
add
sbbl
mov
rcrb
pop
insl
sbb
shld
cmp
mov
adc
pop
or
push
inc
mov
iret
test
std
sbb
mov
sahf
xor
mov
fs
loop
push
sbb
ja
movsl
imul
insb
insl
mov
movsb
fstp
jge
fildll
mov
sub
fsubr
cwtl
rcrb
sbb
adc
adc
imul
ja
adc
stos
lods
adc
sbb
cmpsb
sub
xorb
int
pop
push
push
insb
insb
inc
cs
mov
ja
subl
repnz
and
out
inc
aaa
mov
cli
sub
inc
push
sar
push
fcoml
pop
mov
mov
push
or
jo
and
testl
mov
cmpsl
mov
ss
out
addl
mov
imulb
in
and
inc
ljmp
lock
idivb
adc
adc
hlt
mov
call
lcall
cmpsl
jbe
cs
imul
lret
lcall
mov
push
and
shll
fs
filds
testl
in
in
leave
dec
cli
cwtl
lods
mov
mov
scas
rorl
mov
pop
inc
jle
aas
or
or
push
leave
imul
xchg
sbb
pop
test
in
sub
std
imul
adc
stos
fidivrl
and
loope
mov
repnz
sbb
adcb
dec
push
cwtl
sbb
fmul
push
or
jmp
int
adc
imul
mov
jp
ja
cmpsb
add
sti
or
leave
cmp
cmp
xor
inc
leave
push
loope
aaa
daa
inc
jb
push
xor
popf
add
add
adc
call
aaa
adc
mov
loop
je
cmp
ret
ss
inc
subl
andl
push
test
in
das
mov
add
popa
lods
xor
pop
inc
jecxz
push
cwtl
cwtl
sahf
mov
mov
and
aad
xor
insl
xchg
xchg
push
push
pop
insl
add
inc
xor
or
loope
mov
popf
cmpsl
pop
xchg
mov
nop
adc
in
test
and
fidivrl
jae
mov
test
fdivrl
cmp
or
testl
ffree
fcoml
shrb
insb
or
leave
cmp
scas
mov
mov
push
ret
push
add
je
int3
ds
int3
std
hlt
in
pop
int
sub
cld
sub
mov
ret
enter
pop
push
pop
dec
or
lret
jnp
scas
and
push
nop
push
or
mov
fnstsw
or
mov
imul
movb
loop
stos
pop
add
mov
or
stc
jae
push
mov
addr16
xor
and
les
xor
int
dec
adc
mov
jg
out
fidivrl
sub
test
pop
jae
test
jae
dec
aad
fwait
cmp
test
aad
mov
iret
ljmp
dec
mov
fcmovnu
cs
xchg
sbbl
icebp
add
mov
hlt
pop
jb
inc
fisubrs
mov
popf
sahf
and
push
xor
push
add
popf
inc
fstpt
cmpsb
dec
sub
jns
popf
lock
in
lds
popl
sti
adc
arpl
cltd
mov
into
mov
movsb
into
mov
jbe
sub
inc
pop
push
divl
leave
addr16
repnz
mov
jae
jmp
icebp
ds
out
push
movsl
dec
add
cmp
out
stos
dec
sbb
dec
pop
dec
movsb
jge
mov
les
ds
stos
int
mov
cmp
add
divl
cmpsb
arpl
sbb
xor
inc
push
test
xchg
adc
fwait
mov
xchg
xchg
adc
sub
add
fdivs
imulb
and
ja
fucomip
js
and
xor
mov
mov
adc
add
pop
cmp
mov
dec
shrb
push
lods
or
testl
sbb
push
pop
fsubrl
movsl
adc
ficomps
mov
shlb
fsts
lahf
dec
mul
or
cmc
in
xorb
sti
test
inc
addr16
and
xchg
xchg
add
jecxz
jb,pn
xor
test
mov
push
inc
mov
mov
jno
aas
mov
movlps
ret
iret
lcall
pop
mov
mov
adc
dec
xor
xchg
push
xchg
fcoms
mov
es
and
and
mov
nop
xor
out
dec
clc
mov
fcmovnu
inc
int3
xchg
mov
shrb
sahf
sbb
call
xchg
fisubl
xor
mov
jmp
scas
test
jl
jne
adc
pushf
mov
xor
or
cmp
test
sbbl
sub
iret
mov
shlb
mov
mov
scas
pop
test
jno
sub
inc
test
dec
pop
push
fiadds
push
jg
adc
ret
pop
cld
ljmp
stos
stos
movsb
cli
pop
mov
mov
xchg
sub
mov
imul
cmpsb
jb
pushf
stos
aas
lret
lds
cmpsl
outsl
pop
pop
ds
xchg
push
movsb
mov
cmpsl
inc
lds
fsts
mov
fwait
roll
xor
outsl
cmp
push
rclb
std
mov
call
notl
jns
mov
in
mov
aas
out
outsl
adc
pop
xchg
jae
mov
mov
test
xchg
lahf
out
xchg
stos
lds
dec
push
cld
lds
inc
aam
inc
jge
cmp
ret
jmp
push
jbe
xor
in
pop
inc
push
adc
cmp
rcrb
add
xchg
jge
out
clc
int3
fsubrp
out
or
shrl
nop
cwtl
sbb
pop
mov
stos
icebp
xchg
cmp
les
out
sbb
cmp
adc
or
test
js
mov
psrlq
lds
cmp
sahf
mov
test
mov
divb
orb
ret
jo
fldenv
push
jns
mov
outsb
xchg
icebp
push
adc
sbb
add
xchg
cmp
jnp
ja
sar
out
push
adc
pusha
dec
shr
and
movsb
inc
jg
pop
or
js
lahf
loopne
push
push
jl
mov
outsb
adc
stos
int
popa
add
cwtl
inc
lods
add
xor
and
push
into
imull
imulb
loopne
pavgw
jecxz
nop
imul
dec
or
dec
jp
in
mov
xor
std
xor
fdivrs
adc
inc
arpl
mov
jmp
cs
xchg
adc
push
dec
jbe
in
pop
test
mov
aas
mov
fbld
dec
sbb
xorl
mov
cmp
imul
pop
test
and
rcrl
push
shll
xchg
cltd
imul
sub
ret
jle
mov
cltd
pop
testl
jl
sub
jno
pop
xchg
shll
mov
sti
cmp
out
sbb
push
inc
out
mov
cld
subb
sub
jle
icebp
movsl
jnp
cmpsl
jae
aam
out
adc
gs
nop
sarl
lds
ret
push
mov
push
mov
or
cltd
call
in
jp
adc
mov
insb
cmp
dec
cwtl
mov
mov
inc
andb
mov
xchg
ljmp
cs
popf
lds
cmp
dec
out
xchg
rcl
sbb
dec
dec
mov
xchg
clc
stos
stos
leave
dec
lret
rolb
pop
imul
scas
imul
imul
lcall
mov
test
scas
lahf
ss
push
rcrl
pusha
mov
add
mov
push
pop
xor
xor
xor
jb
jmp
insl
test
cmc
fwait
lahf
out
mov
or
add
scas
jmp
bound
test
lds
lcall
push
mov
xor
cmc
cmc
push
jne
xor
pop
mov
lea
notl
loope
sbb
adc
jl
sub
les
lret
and
inc
jne
movsl
inc
cmp
fdivs
icebp
and
jge
mov
or
or
int
xchg
mov
aam
mov
les
and
add
cmp
addr16
fwait
or
cwtl
ret
cmp
add
push
mov
andl
xchg
loope
out
pushf
lea
lds
cmp
int3
aas
das
out
imull
aad
or
jge
push
call
je
hlt
mov
or
js
outsl
add
cmp
sbb
stos
jg
mov
outsb
push
stos
mov
stc
mov
mov
stos
ret
inc
and
fwait
mov
mov
push
leave
or
jmp
jnp
repz
cmp
dec
lcall
dec
mov
mov
and
xchg
mov
xor
cmp
cmp
and
int3
gs
lea
test
test
lahf
das
xlat
out
mov
pusha
testl
xchg
mov
xchg
dec
jno
ret
or
and
dec
jae
mov
pop
aaa
repnz
lahf
mov
push
or
jmp
cmp
xor
enter
nop
push
lds
inc
pop
pop
int
lods
jl
pop
push
lods
lods
dec
xchg
pop
add
dec
push
clc
cli
inc
xor
xor
iret
scas
lock
mov
sbb
shlb
mov
cwtl
xor
dec
popa
outsb
add
in
inc
outsl
mov
mov
sahf
in
jae
pop
lahf
push
sub
gs
push
xlat
jle
ljmp
pop
fsts
dec
int3
pusha
sub
fidivs
sbb
jno
inc
test
add
ss
lea
leave
test
repz
jno
jnp
pop
icebp
mov
imul
sbb
mov
dec
cli
dec
lea
add
xor
push
sti
xorb
jecxz
xor
aad
int3
popa
and
push
mov
adc
push
out
mov
aas
mov
xchg
ds
cmp
dec
or
jl
fimuls
jne
aad
jmp
loop
xor
xchg
mov
adc
imul
push
into
movsl
mov
testb
sbb
dec
mov
or
jno
int3
imull
inc
mov
sbb
and
add
inc
jl
mov
cwtl
xor
nop
push
xchg
pop
arpl
or
jb
mov
nop
adc
loopne
out
pop
xor
pop
or
lret
js
subl
scas
sub
stos
cli
adc
push
insb
jb
pop
filds
lahf
push
sbb
repnz
add
insl
inc
or
aam
push
dec
inc
int
sbb
adc
xchg
mov
int3
fldcw
mov
mov
rcrl
sbb
xchg
push
jmp
fcompl
outsl
clc
fcom
mov
shrl
sub
lods
pop
adc
mov
test
sub
lahf
in
jno
push
loop
pop
xor
adc
dec
dec
aas
es
xchg
pop
cmc
test
push
mov
sub
scas
inc
or
loopne
inc
pop
cmp
fisubs
enter
mov
sub
lahf
js
push
sub
lods
add
adc
mul
push
mov
xor
inc
jno
into
pop
xchg
fldenv
adc
repz
cmp
aas
imul
sbb
fsub
aad
lods
in
in
inc
mov
iret
sub
loopne
cli
push
dec
sbb
inc
mov
inc
sub
lcall
rcrb
gs
lret
aaa
loop
out
or
stc
insb
push
ss
pop
pop
inc
mov
mov
sub
sbb
jl
adc
shll
jmp
pop
lea
std
pushf
insb
adc
lea
jg
or
sub
push
repz
ret
fistps
mov
xchg
add
adc
into
lock
push
bswap
stc
or
push
ret
inc
shrl
hlt
mov
loope
mov
cmc
adc
test
or
mov
mov
mov
mov
orb
add
pop
sti
fucomi
aam
lods
xchg
enter
xor
adc
repnz
cmc
test
out
adc
or
sub
bound
lret
mov
pop
sbb
jl
fldl
inc
ret
dec
sbb
adc
outsl
mov
scas
movsl
mov
out
aam
or
add
add
dec
jb
and
xchg
xchg
outsb
adcb
jg
xor
cld
and
sbb
and
insl
es
push
jnp
xchg
push
dec
inc
and
inc
out
jle
popf
inc
dec
call
enter
push
or
dec
mov
test
sub
cmpsl
lods
push
xor
ror
inc
push
mov
inc
dec
pop
pop
rol
popf
cmpl
inc
scas
xor
push
cmpsl
push
and
mov
dec
into
fsubs
cmp
sti
xchg
shr
inc
jbe
daa
aam
pop
inc
cmp
add
lret
jle
mov
and
ss
or
iret
sti
mov
rorb
aaa
pushf
fcomi
mov
mov
push
data16
jmp
mov
rorl
jae
jge
adc
cltd
ss
dec
xchg
les
loope
aas
fnstsw
movsb
ret
rorb
les
mov
sub
mov
sbb
cltd
dec
jg
jns
adc
dec
or
cmp
jmp
push
ss
adc
adc
or
adc
adc
addr16
mov
xchg
ljmp
enter
jne
and
sub
bound
inc
inc
cltd
add
jge
insb
ds
js
out
movsl
dec
mov
mov
push
popf
add
into
movsb
mulb
pushw
push
jo
pop
sub
push
std
jmp
sahf
fdivrs
mov
inc
and
stos
loop
sbb
push
clc
jbe
xor
mov
pusha
adc
inc
lds
mov
mov
aas
xchg
int3
pusha
test
cmovge
pop
cmp
xchg
xchg
lret
and
cmp
add
cli
inc
mov
adc
pop
push
inc
in
js
push
movsb
push
pop
orl
xchg
sarb
enter
dec
mov
add
sbb
push
and
jne
mov
mov
dec
adc
ds
pop
lods
push
iret
fwait
xor
cmp
rorb
loopne
adc
jge
insl
and
jo
pusha
fstl
in
mov
mov
adc
jge
insl
and
jo
pusha
fstl
in
mov
mov
adc
je
imul
cmp
pusha
lds
lds
mov
adc
push
push
test
mov
cmpsb
xchg
mov
cmpsb
clc
notl
ret
es
jbe
stos
push
jbe
data16
cmpsb
xchg
out
test
ss
es
bound
push
es
inc
push
jbe
data16
cmpsb
inc
xchg
sub
shl
out
mov
cld
aam
push
es
push
add
sub
call
cmpsb
in
hlt
ret
mov
out
pop
jne
daa
hlt
popf
cld
stc
fidivs
std
mov
fisttpl
sbb
ret
fadd
bound
or
sbb
jmp
xorl
jae
push
std
mov
fistps
push
push
test
idivl
stos
push
sub
jmp
movsl
out
mov
repz
cmpsl
xchg
mov
cmpsb
test
imulb
ss
imul
ss
leave
and
mov
lret
push
mov
inc
sarb
dec
mov
xlat
aaa
sbb
xor
sti
cmp
push
mov
push
jmp
imul
xor
inc
dec
push
out
loopne
dec
dec
add
cs
sbb
cmpsb
not
out
test
ss
es
push
xor
sbb
data16
outsb
inc
push
lock
iret
jmp
lcall
mov
jne
push
adc
movaps
add
rcl
rol
jecxz
mov
mov
ja
jae
fs
push
adc
xor
adc
ret
fiaddl
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
xchg
out
test
ss
es
push
ss
es
inc
push
jbe
data16
add
sub
mov
and
mov
mov
push
sahf
pop
or
jns
arpl
sub
jecxz
sahf
popf
and
outsb
xchg
xchg
push
test
cltd
xchg
jl
lock
dec
cli
push
fucom
int
test
rol
and
mov
pop
ret
adc
inc
dec
mov
pop
ja
jge
or
sbb
push
les
out
xchg
jnp
ds
pop
out
repz
and
test
inc
mov
inc
or
pop
push
sbb
sub
bound
jne
mov
jmp
testb
sbb
divb
mov
mov
dec
mov
je
mov
imul
enter
aas
pop
jae
mov
daa
jl
insl
inc
push
fidivrl
xchg
mov
out
cmpsl
pop
std
mov
adc
inc
xor
jmp
inc
sbb
sbb
jmp
insb
sbb
sahf
xlat
mov
mov
cltd
dec
xor
lret
sub
leave
and
hlt
test
imul
push
andl
or
aad
and
enter
mov
fdivs
mov
loopne
mov
xchg
jp
in
mov
ret
sbb
adc
bound
adc
es
cmp
test
daa
xchg
sbb
loopne
or
adc
dec
mov
jle
dec
test
inc
inc
leave
je
jp
cmp
enter
fistl
ret
mov
imul
pop
aas
jnp
or
test
inc
aaa
xchg
mov
rorl
rol
out
mov
loope
mov
cwtl
mov
or
pop
cmp
inc
mov
popa
xchg
mov
lret
lea
jne
jl
pop
adcl
loopne
add
push
mov
cmc
sbb
loope
lcall
cli
pop
pop
sbb
mov
add
pusha
push
dec
pop
icebp
dec
ss
dec
and
push
in
xchg
movsb
pop
hlt
dec
push
iret
jbe
sbb
shll
mov
xor
in
arpl
and
mov
mov
popf
aas
loope
add
cmpsb
loope
pop
mov
decb
mov
mov
jecxz
lcall
pop
xor
push
rcrl
hlt
and
mov
cs
inc
clc
jae
xchg
gs
mov
leave
or
adc
enter
mov
addb
in
shll
adc
jg
lods
dec
adc
xor
loopne
jae
rcr
mov
mov
push
or
jne
lea
mov
andb
mov
dec
loopne
lods
jle
jae
or
aad
lods
insl
aad
xor
or
cwtl
int
mov
mov
dec
xor
pop
daa
xor
push
in
arpl
add
push
gs
loope
adc
in
or
test
or
cmp
shr
or
adc
stos
sub
mov
jno
cmpsb
in
dec
mov
and
movsb
js
xor
les
sbb
clc
adc
dec
in
ljmp
movsl
cmp
jmp
xchg
push
sti
xchg
dec
inc
ret
and
xchg
adc
push
adc
xor
mov
pop
xor
jnp
add
lcall
rcrl
add
adc
js
inc
outsb
mov
cmpsb
subb
repnz
jb
ja
aas
bound
jae
fs
mov
mov
test
addr16
fucom
push
dec
imul
mov
cmpb
hlt
iret
in
dec
adcb
xor
out
call
loope
ret
dec
popf
enter
std
pushf
xchg
push
mov
in
mov
sbb
imul
in
fs
sarb
fbld
mov
addb
rcll
repz
orl
jecxz
loop
mov
inc
cmp
incb
jo
call
xchg
or
push
jno
sti
or
xchg
push
mov
pop
inc
pushf
push
pop
aas
sub
and
stos
sbbl
and
cmp
jl
xor
call
outsl
adc
lods
bound
jne
push
mov
popf
mov
pop
ljmp
insb
sbb
inc
addr16
aad
out
call
nop
mov
add
push
sbbb
jmp
sub
lcall
sbb
xchg
adc
adc
add
xor
imul
xchg
loop
pop
outsb
repz
mov
sbb
or
movsb
lock
out
fstps
add
rcl
lahf
push
sub
es
test
lret
dec
int
dec
mov
sub
sarb
stos
lahf
test
mov
pop
rclb
mov
add
push
test
push
or
jl
scas
icebp
iret
pop
push
push
cld
inc
int3
jnp
add
aas
idivb
ret
jmp
int3
pushf
mov
sub
push
sbb
dec
dec
lods
jmp
xor
lret
sub
call
aas
insb
enter
and
movsl
dec
push
cli
fldl
fwait
aaa
mov
insb
lret
xchg
mov
adc
lret
sbb
daa
inc
jbe
mov
lcall
push
push
mov
mov
fiaddl
push
fsubr
mov
testb
xor
pusha
ficompl
add
lcall
mov
js
loope
in
pop
imul
fisttpll
xchg
loop
jge
push
mov
mov
insl
popa
testl
mov
lret
xor
jmp
pop
xor
jge
mov
push
sbb
fwait
push
daa
arpl
rclb
loope
pop
xorl
inc
mov
dec
push
hlt
outsb
cmp
jbe
xchg
and
jnp
in
add
sub
jle
sbb
test
fstpt
testl
les
daa
jp
mov
call
js
jl
inc
cmp
cli
pop
xor
sub
xor
stos
mov
sub
pop
mov
dec
popaw
fiadds
cmc
adc
sti
add
sub
mov
adc
cld
dec
push
sar
gs
inc
sarl
inc
xor
decb
push
int3
xor
or
push
gs
jne
lret
jecxz
xor
or
jmp
ret
dec
inc
jbe
mov
mov
xlat
loope
test
lret
stos
addps
out
int
repz
scas
mov
test
xlat
mov
cltd
addr16
pop
sbb
sbb
movsb
adc
jl
push
add
lods
xor
adc
xor
loope
cmpsl
add
gs
mov
in
es
or
fmull
xchg
lret
int
stos
stc
dec
nop
fnstsw
les
stos
xor
cwtl
outsl
les
mov
popa
xorl
sahf
lds
sub
sbb
fldcw
cltd
mov
pop
xchg
outsb
repnz
add
rcrl
sbb
jno
cli
lds
push
call
cmpsl
xchg
add
movsl
test
cmp
inc
push
dec
setp
mov
sbb
sub
imul
mov
adc
fbld
ret
mov
movsb
mov
pop
aam
movsl
mov
aas
aaa
mov
inc
cli
sub
push
mov
arpl
dec
push
pop
push
dec
adc
mov
shll
addr16
inc
ljmp
jle
add
dec
cli
sbb
in
add
sbb
bound
pushf
sub
daa
sub
shr
add
jp
outsb
movsb
rclb
gs
jns
and
sbb
xchg
add
lea
lock
adc
jle
jae
aaa
mov
test
mov
aas
sbb
mov
popa
test
ror
dec
sbb
dec
orb
sbb
xchg
cwtl
movsl
xchg
adc
jno
and
mov
lret
enter
mov
sub
sub
push
clc
inc
jb
mov
inc
mov
adcb
call
pop
ret
push
push
int3
fiadds
pop
loop
xchg
adc
xchg
rcrb
xchg
dec
subb
add
fisubl
jno
lahf
sub
adc
or
add
cmc
aaa
in
mov
cld
cwtl
ffree
test
repz
jmp
stos
add
icebp
mov
mov
and
sbb
dec
aad
jecxz
stc
aam
fstpl
mov
pusha
mov
rcrl
loopne
xorl
push
orb
dec
negb
jae
cli
rcrl
loope
dec
jmp
sbb
jl
push
xorl
dec
mov
fmull
in
shrl
cmpl
inc
dec
sub
adc
jbe
imul
in
cmpsl
add
adc
mov
or
inc
and
ljmp
rcrl
or
push
inc
and
insl
bsr
in
out
fmuls
out
mov
inc
push
out
call
pusha
adc
dec
js
icebp
daa
enter
in
add
mov
mov
adc
jnp
or
nop
push
repz
sbb
sbb
or
shrl
test
sub
lret
movsl
fwait
js
sbb
adc
je
lods
or
or
fcoms
pop
and
icebp
sti
xchg
push
sbbb
insb
inc
push
movsl
jle
fnstsw
pop
push
into
xorl
cwtl
outsb
mov
xlat
pop
fnstcw
sub
xchg
jge
push
add
jno
mov
push
xor
and
push
stos
cmp
lret
addb
push
pop
and
out
xchg
mov
cli
push
les
push
addr16
frstor
orl
and
dec
cmp
jmp
ds
mov
orl
mov
cmpl
repnz
mov
dec
dec
cmc
mov
ljmp
pop
gs
ss
mov
sub
repnz
xchg
jl
lea
cmp
scas
xchg
mov
fidivs
sbb
mov
jne
add
fbld
arpl
filds
mov
and
pop
enter
test
mov
repnz
gs
push
outsl
adc
idiv
lahf
sub
scas
jno
jge
cmpl
shrl
repz
xor
sub
mov
js
out
test
pop
dec
scas
cmp
test
sub
pop
aas
cli
into
cwtd
add
jne
or
shlb
jecxz
push
push
mov
andb
mov
popa
shl
movsb
insl
dec
pop
xchg
pop
and
es
xor
xchg
jo
outsl
xchg
and
push
mov
fadds
scas
cmpsl
jae
bound
or
notb
mov
jecxz
adc
rol
inc
adc
jmp
pop
jbe
jg
xchg
rcrl
fiadds
fwait
push
ljmp
add
imul
ljmp
adc
add
fisttps
jg,pn
hlt
fwait
scas
roll
xor
jnp
scas
out
pop
jno
or
xlat
jae
mov
xor
jmp
out
cmp
push
imul
rcrb
inc
mov
mov
movsb
lea
or
xor
scas
mov
imul
push
push
xor
pop
testb
ja
inc
int
adc
fisubrs
mov
mov
cwtl
xchg
pop
or
cmp
nop
mov
cli
in
bound
xchg
add
xchg
das
adc
das
fs
pop
cltd
and
add
out
mov
loope
push
jg
sub
shrb
fmuls
int3
and
aam
cli
insl
ret
xchg
mov
movb
and
in
adc
pop
push
inc
push
ret
jb
cmpb
mov
mov
mov
adc
in
xor
inc
sti
dec
fcoml
inc
mov
jb
lods
inc
imul
fmuls
pop
ja
sbbl
adc
sbb
out
sbbl
addr16
xor
pop
push
mov
cli
cmp
adc
sbb
pusha
lds
mov
pop
lods
test
loop
xor
outsb
repz
in
xor
mov
pop
inc
xchg
shrw
das
xlat
shr
and
mov
jns
sbb
xchg
jnp
sar
pushf
outsb
aaa
mov
push
adc
xor
mov
sub
jne
in
orb
inc
add
mov
ss
sub
dec
cli
push
add
daa
add
in
clc
leave
or
imul
aam
test
pop
pop
dec
xor
push
das
jno
data16
bound
int3
adc
cmp
frstor
dec
neg
das
mov
lret
adc
fs
jnp
and
inc
scas
dec
imul
arpl
jmp
cmp
outsl
ja
inc
sbb
sub
xchg
mov
sbb
popa
adc
pop
test
das
cmp
add
scas
out
jne
outsb
jnp
pop
mov
xchg
adcb
xor
loope
mov
or
add
std
jp
inc
subl
outsb
dec
cwtl
aad
jo
cli
pusha
inc
sub
sbb
xchg
iret
cmpsb
cs
jge
std
sub
push
ret
leave
decl
cmp
test
mov
add
jmp
into
mov
cwtl
sarl
testl
clc
ja
ror
jbe
inc
adc
mov
dec
mov
lock
jo
add
xchg
cld
imul
push
sbb
fiadds
data16
movsl
inc
add
fistps
jmp
aas
and
in
inc
aam
movsb
adc
xchg
lds
and
and
loopne
inc
inc
int3
movsl
fcomps
jbe
inc
out
mov
int3
daa
subl
mov
outsl
xchg
roll
jecxz
pop
xor
xor
xor
aaa
addr16
inc
sub
fisubrs
sar
inc
cli
js
loope
insb
fidivrl
inc
adc
push
xchg
sahf
jle
ret
int
fdivs
lock
jle
jmp
pop
cmp
cmp
sar
aam
fdivrl
pop
push
out
je
inc
mov
mov
sar
push
clc
cmp
cld
pop
sbb
sbb
in
das
icebp
pusha
sbb
stos
inc
nop
lcall
adc
insl
popa
mov
test
and
mov
push
hlt
jnp
das
loop
mov
fisubrl
adc
outsb
pop
mov
into
inc
jno
jg
lock
xor
cld
call
mov
adc
es
into
add
ret
lcall
pop
sub
subl
and
lret
cmp
movsl
sbb
pop
test
jb
push
adc
pop
and
or
xchg
pop
lcall
pop
mov
push
sbb
mov
mov
dec
cwtl
popa
out
addl
aaa
jl
outsb
sbb
and
adc
mov
lret
repnz
testl
loopne
icebp
orl
sub
sbb
insb
daa
stc
inc
gs
or
rclb
inc
and
in
data16
mov
add
sahf
nop
rcr
andb
and
jge
jne
or
or
jg
mov
push
inc
xchg
repnz
stos
push
rclb
cld
mov
xchg
add
xor
jnp
inc
insl
pop
adcb
mov
int
cs
pushf
jmp
inc
aas
mov
scas
cmpb
push
test
fsubl
mov
lock
idiv
in
and
cmp
and
loop
shrl
mov
push
mov
pop
mov
notl
or
roll
push
xor
dec
lods
outsb
cltd
sub
adc
stos
sub
cld
lods
addb
mov
jp
lea
pop
and
repz
mov
xchg
subb
xchg
movsb
cwtl
and
mov
mov
ds
test
fidivs
mov
repz
pop
jae
mov
xchg
cmp
lock
mov
and
loop
sbb
dec
mov
xor
cmpxchg8b
mov
sbb
shl
pop
adc
roll
lret
loope
push
inc
or
test
sub
in
add
rcrl
adc
dec
lret
push
xchg
stos
lods
cmp
cs
fwait
and
inc
xor
fisubl
divl
push
mov
out
stos
cli
stos
sub
sahf
aam
shrb
jle
pop
mov
cmpsb
add
shl
xchg
insl
mov
sbbl
sub
mov
push
push
and
dec
pop
les
sub
ret
add
ljmp
cmc
adc
out
lahf
fnsave
lea
push
push
add
imul
scas
loop
push
es
repnz
mov
jno
lret
adc
scas
sbb
push
jmp
loop
adc
and
ljmp
and
push
stos
sub
int
icebp
shll
andl
mov
sbb
push
daa
mov
and
dec
fbstp
and
in
es
sub
ja
aam
loop
jp
mov
sub
iret
sar
jo
lret
fistpll
inc
cs
inc
outsb
sahf
and
pop
push
aad
xchg
push
mov
outsl
lahf
lods
mov
mulb
sbb
jne
addr16
xlat
lea
mov
lods
into
out
imul
jns
lock
mov
inc
lods
add
outsl
fcomps
popf
push
stos
fidivrl
jb
andb
gs
out
dec
cmc
out
dec
movsb
mov
mov
mov
mov
shrb
addr16
xlat
adc
fldt
je
jb,pn
xchg
adc
lcall
fwait
cltd
cmpsb
pop
sahf
test
rol
push
sbb
shll
insl
je
mov
cmpsb
xor
ss
jge
into
or
adc
dec
mov
scas
incb
sub
adc
adcl
movsl
pop
out
dec
in
popa
push
or
cmp
add
inc
arpl
xchg
leave
lods
in
or
cld
outsl
movsb
add
jmp
inc
sti
mov
xlat
sbb
sub
add
lret
test
push
add
repnz
cld
pushf
lret
cwtl
push
frstor
push
in
fsubr
cmp
or
jmp
adc
lock
dec
add
push
xlat
stos
cld
pop
loop
adc
ds
loope
into
add
pop
lcall
incl
adc
or
jo
in
inc
push
inc
out
xchg
rorb
pop
or
mov
outsl
cmp
cltd
lods
fisubs
cmpl
decb
inc
cmpsb
dec
sub
ss
cmpsb
ds
and
repnz
jmp
fldcw
ret
xchg
dec
push
popf
push
pop
or
inc
jne
scas
lret
cmpl
andb
and
aas
stos
jecxz
push
out
cli
adc
add
jmp
adcl
in
loope
cwtl
or
in
lret
pop
sbb
sti
xlat
aad
cmp
out
xor
mov
xchg
lds
ja
push
jbe,pn
loop
test
cwtl
xchg
in
xorb
push
and
mov
lret
iret
sub
faddp
or
aam
lcall
inc
jae
iret
xor
mov
dec
push
test
jg
pop
mov
jge
xor
cli
lahf
push
jns
push
xchg
icebp
nop
clc
xchg
cwtl
jbe
push
jg
push
or
jp
movsb
outsl
mov
sub
xor
pop
xchg
rclb
mov
inc
int3
test
fldt
and
dec
imul
mov
mov
clc
xor
xchg
mov
inc
ds
and
into
jne
dec
jmpw
cmpl
nop
or
mov
mov
add
mov
mov
test
mov
lods
data16
adc
in
and
nop
imulb
int3
add
xchg
or
and
mov
insb
and
xchg
lods
outsb
loop
pop
cmpsb
fidivs
popa
cmp
push
jp
pop
scas
xchg
xor
or
pop
mov
out
and
mov
loopne
jecxz
in
imul
pushf
in
popl
loop,pn
push
jns
in
pop
call
dec
push
cwtl
mov
inc
dec
xor
adc
mov
push
xchg
push
xchg
add
aad
in
add
test
xchg
fimull
inc
push
push
pop
sbb
push
inc
int
pop
sbb
das
dec
test
filds
sbb
pop
enter
movsb
mull
jp
fisubrl
and
das
xchg
mov
lcall
xchg
add
or
mov
xchg
xor
xorb
mov
rolb
iret
jnp
mov
xor
loop
push
xchg
mov
cmpsb
not
out
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
xchg
out
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
mov
out
repnz
out
pop
add
ss
das
jbe
inc
push
jg
xorb
xchg
not
out
jbe
es
push
push
add
out
ds
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
ljmp
data16
clc
iret
out
fwait
jp
push
pop
dec
dec
pop
cmp
sub
or
or
cli
jmp
sti
fcmovne
lret
stos
stos
aaa
lcall
pop
cmp
pop
cmp
sbb
sbb
jns
sti
fisubl
fnstcw
mov
cmp
sub
inc
push
cmp
sbb
mov
mov
popa
xchg
mov
rcll
sbb
xlat
mov
inc
scas
pusha
addr16
movsl
inc
adc
dec
xchg
sub
and
dec
sub
clc
adc
repnz
jg
jmp
aad
stos
cmc
mov
sub
cmp
or
mov
test
ljmp
sub
jmp
arpl
jo
fs
lods
sub
mov
les
jecxz
dec
pop
adc
pop
push
mov
fwait
adc
pop
imul
dec
pop
imul
in
sub
inc
push
fimull
pop
in
bound
lret
dec
test
adc
mov
inc
dec
sub
les
or
lahf
movsl
jmp
or
dec
lret
stos
stos
mov
jp
push
pop
pop
dec
adc
pop
sub
sbb
or
mov
test
stc
aam
loop
adc
xor
dec
ja
jle
movsl
scas
test
ffreep
into
mov
push
pop
sub
jno
pop
ja
push
jo
mov
ljmp
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
sti
fcmove
lret
stos
stos
mov
jp
push
pop
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
sub
push
fisubrs
pop
inc
fwait
sarb
ds
sbbl
fdivs
push
aaa
jbe
mov
mov
popf
adc
loope
mov
push
ret
jg
inc
je
ja
dec
and
mov
or
sub
xchg
outsb
adc
out
sbb
or
lcall
in
mov
ss
call
xor
int
xchg
xchg
arpl
push
push
out
and
pop
dec
outsb
add
cmp
ds
add
mov
lock
or
jae
push
aam
push
test
test
shrb
fsts
jne
pop
xor
roll
jns
sub
mov
pop
jg
aam
jmp
cmp
xchg
gs
int
mov
adc
mov
iret
inc
subb
inc
subb
fcmovne
stos
stc
cmp
add
pop
dec
mov
movsb
outsb
jne
fstps
jns
jae
rolb
lea
xchg
pusha
adc
call
pop
jp
add
push
andl
repnz
sub
xchg
jns
jl
pop
add
push
adc
mov
mov
rcr
adc
adc
xor
xchg
add
sarb
test
sub
inc
inc
mov
cmp
inc
in
ds
sub
js
insb
or
cwtl
add
loopne
add
xor
in
jno
aas
cmp
push
shll
and
pop
mov
adc
loopne
mov
rorb
push
sub
test
push
and
push
jns
iret
dec
scas
mov
aam
sub
pop
aad
out
push
shlb
add
movsl
sbb
addr16
jge
sahf
pop
or
es
add
push
dec
lock
jle
sub
pop
pop
sbb
dec
je
mov
push
test
adc
lcall
jnp
or
cmp
das
add
jb
test
mov
bswap
push
adc
pop
stos
xor
mov
or
addb
sbb
mov
clc
outsb
pop
and
xchg
or
andl
sub
sbb
sub
add
fists
and
jp
jo
fdivrs
aas
scas
xlat
ja
adc
sub
mov
pop
jmp
aas
pop
decb
pop
or
pop
pop
ret
shl
cmc
sbb
ja
sub
cmp
add
cs
ret
dec
sti
push
lahf
adc
xlat
sub
inc
mov
xor
arpl
lock
pushf
fldenv
stos
fwait
sbb
jg
mov
push
adc
inc
imul
outsb
mov
mov
test
outsl
sub
inc
aad
test
or
mov
rcrl
mov
stos
frstor
mov
pop
outsb
dec
adc
aam
loopne
jle
mov
mov
sbb
pop
out
lods
cmpl
add
xor
mov
mov
mov
and
test
xor
mov
imul
dec
push
xchg
cmc
push
icebp
enter
adc
outsb
pushf
lods
xchg
sub
mov
jb
pop
loop
jp
add
shrl
mov
jmp
lret
pusha
stos
jg
out
out
pop
ret
cmp
xor
ret
xchg
and
scas
add
movsl
das
movntps
add
cmpsl
into
push
pop
pop
stos
fdivp
adc
push
mov
stos
call
bound
mov
jecxz
or
mov
bnd
test
lds
sbbl
out
repz
repz
icebp
mov
cmp
cli
pop
mov
or
jns
or
stos
rcr
lcall
adc
loop
mov
and
icebp
call
test
loope
cmp
cmp
rcrb
push
inc
lret
cmp
xor
xchg
jb
push
mov
daa
insl
lods
or
faddp
pop
test
ret
call
cltd
or
filds
mov
mov
inc
cmpsl
mov
jmp
outsl
dec
add
xor
mov
repz
jle
pop
data16
repz
dec
sahf
mov
xlat
dec
jbe
xlat
add
scas
rcrl
dec
sub
aam
xchg
xor
fcoml
ret
mov
in
add
movsl
xor
push
and
sub
js
fdivrl
and
adc
stos
jmp
jae
cltd
pop
jp
gs
repz
xor
test
mov
hlt
push
mov
shll
adc
and
add
push
stos
shrb
jb
mov
mov
popa
xor
jne
fsub
pop
lret
jbe
push
mov
sarl
sub
fxch
add
fcomi
mov
inc
jg
mov
out
outsl
mov
sub
sub
scas
lretw
outsb
nop
or
sbb
adc
rorb
sbb
jge
into
aas
or
mov
fs
pop
jecxz
int3
xchg
adcb
jmp
frstor
ret
push
repz
out
inc
adc
or
scas
shr
xchg
sbb
adc
mov
shlb
lods
pop
ret
in
fldenv
cmpl
aas
mov
mov
inc
mov
cmpsb
js
in
fidivs
mov
movsb
mov
inc
add
fldt
xor
or
mov
or
mov
lods
gs
push
push
shll
es
pop
fidivrl
das
dec
adc
daa
shlb
jle
xchg
push
push
sbb
jnp
loope
sbb
lcall
in
lret
xchg
adc
jp
call
addr16
insb
icebp
or
jbe
fs
add
cmp
mov
sub
xlat
shlb
or
jo
das
sub
insl
pop
mov
sbb
push
mov
dec
dec
cmp
sub
xor
push
push
pop
idiv
nop
add
insl
fisttps
addl
xchg
pop
or
cmp
movsl
fisttpl
mov
adc
and
xor
jp
cmp
or
cmc
aaa
sbb
and
popa
sub
mov
xchg
lock
and
xor
or
push
ja
sub
sbb
mov
nop
adc
xchg
xor
sbb
adc
stos
xor
xor
scas
mov
ja
mov
out
push
mov
icebp
stc
add
dec
dec
out
mov
scas
ja
or
aam
jp
and
sbb
pushf
jb
mov
mov
sub
inc
icebp
sbb
sbb
in
pushf
adc
fnstenv
decl
adc
mov
sbb
jno
inc
jmp
xor
int
pop
ja
lahf
mov
daa
or
test
lock
ljmp
xor
mov
push
imul
bound
insl
dec
iret
out
cmc
or
daa
mov
sti
push
mov
inc
push
out
sub
mov
mov
sub
xor
xchg
fdivrl
loopne
shll
mov
inc
and
cmp
mov
mov
jl
movsl
loopne
jmp
dec
dec
movsl
rolb
pop
push
and
xchg
es
and
pop
cmc
sbb
mov
add
scas
mov
sbb
pop
ljmp
mov
xorl
dec
inc
lock
xor
xor
enter
or
fldcw
lcall
sbb
rorb
jp
jecxz
jge
xor
outsb
enter
ss
add
push
mov
pop
sub
dec
xor
or
in
ljmp
inc
xchg
cmp
into
or
cmpsl
popa
xchg
xor
ds
inc
daa
or
mov
dec
outsb
imul
mov
lahf
lock
jbe
inc
push
jecxz
jns,pt
push
les
sbb
cltd
mov
mov
fdiv
push
or
fisubrs
jg
push
jnp
push
cli
adc
orl
sbb
ror
mov
and
aas
sbb
xchg
loop
mov
fcmovbe
dec
in
cmp
xchg
shrl
mov
and
ja
xor
xchg
imull
inc
mov
xlat
inc
les
sbbb
hlt
sub
dec
sub
outsb
jmp
lcall
clc
push
ror
ret
fwait
sub
lods
jmp
mov
mov
sarb
rcl
cmp
pop
scas
lcall
xchg
ja
pop
adc
fistpll
add
and
fisttps
mov
daa
ret
sbb
mov
idivb
cmp
inc
cmp
fcoml
inc
icebp
je
cmp
outsl
cmc
add
leave
int
push
xor
xchg
mov
sarl
cltd
add
arpl
fdivs
shrb
sub
arpl
mov
test
leave
sub
mov
pop
mov
jns
fsts
jns
adc
or
adc
mov
mov
lret
sub
pusha
lret
xorl
das
outsl
fcmovbe
lods
orl
repz
int3
cmp
push
bound
mov
pop
shrl
cs
xchg
push
and
out
fildll
fsubl
js
add
cmp
push
mov
mov
push
pusha
cmp
dec
jns
imul
scas
xchg
mov
push
xchg
mov
pop
mov
push
xchg
inc
dec
pop
les
shrb
daa
adc
arpl
negl
mov
ret
xchg
sahf
repz
jb
imul
cmp
cmpsb
push
adc
cmp
aad
pop
push
mov
xchg
sbb
mov
pop
or
sub
int
mov
push
add
mov
push
into
aad
scas
mov
mov
orb
cld
pop
popf
jnp
loop
hlt
add
jne
mov
in
add
movsb
dec
or
dec
jb
sub
cmp
adc
pop
push
mov
pop
inc
mov
shrl
mov
int
mov
pushf
rclb
sub
fmull
loopne
aaa
add
dec
add
jecxz
dec
pop
mov
sub
push
std
jo
clc
sbb
mov
lods
push
dec
mov
cli
add
outsb
addr16
out
int3
outsl
aam
or
pop
mov
mov
into
imul
sbb
xor
aaa
cltd
lods
fildll
into
push
aad
jnp
xchg
outsl
xchg
jno
movsl
add
minps
sbb
fnsetpm(287
aaa
out
jl
lea
dec
xor
and
mov
push
lods
sbb
add
dec
loope
mov
pmaxub
push
bnd
arpl
add
ret
push
insl
or
rcl
xchg
push
sbb
mov
bnd
adc
pop
aaa
jg
cmpsb
lea
pop
inc
inc
ljmp
ror
xchg
inc
xor
out
roll
mov
sbb
and
xor
cmc
cmpsb
mov
cmpsl
or
les
dec
push
aad
inc
movsl
testl
and
bswap
pop
push
dec
cmp
repz
xor
movsb
inc
xchg
leave
ljmp
push
fisubrs
jb
loop
aaa
add
push
sub
adc
and
add
push
sbbb
in
mov
movsl
data16
pop
xor
clc
int3
dec
cmp
scas
push
aam
mov
pop
hlt
out
jae
popa
sbbb
shrb
loop
sub
mov
sub
mov
mov
cmp
test
dec
cwtl
movsb
mov
xchg
xchg
scas
int
jb
inc
adc
xor
mov
daa
and
cmpsl
pop
jmp
cli
lret
addr16
enter
cmpsl
mov
mov
sbb
fldenv
sarl
lods
xor
lods
leave
jno
cs
add
call
lret
scas
pop
mov
push
mov
div
inc
and
bound
and
pop
inc
cmp
outsl
mov
int3
insb
dec
fimull
out
inc
sbb
cmp
add
xchg
aam
sbb
push
into
pushl
cmc
stc
add
add
and
addr16
jns
or
arpl
mov
ljmp
add
or
ja
movsb
fsubrs
rclb
xor
inc
pop
fistl
pop
stos
dec
pop
or
leave
outsb
or
sbb
jge,pt
out
call
movsb
insl
shrl
sub
decb
xor
inc
and
les
mov
jl
outsb
mov
loopne
mov
lock
fidivs
xchg
jae
je
in
lret
loop
xchg
mov
mov
gs
adc
or
fnstenv
sub
adc
or
testl
movaps
lods
push
lock
testl
cmpsl
and
mov
mov
pop
dec
dec
mov
mov
mov
xchg
ss
ljmp
stc
mov
aaa
sahf
add
ss
addr16
cld
repz
cmpsl
test
push
int3
into
imul
sar
shrb
pop
xor
cmp
shlb
test
mov
push
out
sbb
mov
pop
or
and
cmp
inc
jp
xchg
and
mov
negb
mov
mov
inc
fsubp
inc
hlt
mov
jecxz
xchg
mov
scas
mulb
pusha
ss
ss
in
stos
insb
and
sbb
pop
inc
push
rorl
jb
cmpsl
mov
cwtl
jns
aam
imulb
dec
decb
adc
shlb
les
icebp
jne
push
pop
das
fists
adc
aam
mov
imul
aad
push
pop
pop
dec
or
mov
pop
pop
hlt
sub
dec
shll
adc
leave
pop
add
lods
ret
mov
pop
std
aam
mov
fildll
xchg
rcrb
mov
jo
xchg
add
enter
pop
int
dec
adc
push
mov
or
repnz
inc
in
out
xchg
adc
xchg
out
test
cltd
inc
icebp
push
xor
jb
dec
inc
fwait
and
dec
jb
outsb
in
sub
subb
sub
fldcw
add
pop
jno
lods
mov
mov
fdivrl
jmp
mov
or
scas
test
or
jl
lods
jns
and
fs
adc
imul
mov
pusha
movsb
push
lret
aad
aad
jns
out
sbb
insl
pop
adc
mov
or
ljmp
mov
cmpsb
orl
pushf
mov
jp
sub
xor
lret
pop
mov
cli
fs
pop
shrb
insl
mov
jbe
jne
xor
fs
adcb
aaa
mov
sbb
jecxz
fnstsw
jae
or
cmpsb
xchg
sub
mov
into
jle
jae
xor
inc
fldl
inc
cltd
jno
insl
insl
mov
outsl
jne
stos
mov
xor
data16
movsb
out
insl
test
jb
and
idivl
or
test
pop
and
mov
xchg
add
insl
jb
shr
or
stos
add
je
sub
push
cmpsb
and
jmp
loope
inc
inc
cli
and
movsl
push
dec
mov
xchg
adcl
lsl
xor
aad
mov
jb
inc
inc
aaa
inc
pop
mov
test
js
test
mov
je
or
loopne
pop
inc
adc
clc
sbb
test
push
inc
dec
cmc
adc
or
dec
in
test
arpl
mov
inc
pop
je
scas
dec
mov
imul
push
cmp
test
fstp
enter
and
mov
dec
jns
sahf
sub
outsl
int3
jns
jg
pop
rorl
mov
addr16
mov
cmp
lock
data16
push
mov
pop
pop
mov
sub
mov
stos
andb
push
gs
pop
push
jb
push
daa
pop
loope
push
mov
f2xm1
je
lods
subl
and
mov
or
inc
stos
jno
dec
pop
mov
out
repnz
sbb
negl
inc
dec
or
sub
and
test
mov
xor
mov
jne
dec
inc
ss
adc
mov
push
loope
mov
or
aas
mov
pusha
pop
cmovne
test
mov
xchg
and
add
sub
andb
cmpsl
arpl
jno
jne
hlt
icebp
pop
sti
out
outsl
dec
xor
shlb
mov
mov
pushl
lods
push
je
fisttpl
leave
sbb
cld
int3
fisttpl
xor
jl
movsb
xor
les
les
or
outsb
sarl
jecxz
pop
arpl
xchg
test
and
jb
inc
sub
cmp
pop
pop
and
mov
insl
and
popa
scas
or
call
cmp
cmc
add
mov
shrl
pop
xchg
addr16
sub
insl
add
dec
daa
mov
js
aad
sub
cmpsb
or
or
sbb
imul
xchg
cmp
push
jb
pop
out
mov
rcrb
add
test
and
xor
ret
fisubrl
out
push
orl
jl
pop
push
movsl
and
adc
push
adc
sti
dec
xchg
outsl
mov
cmpsb
adc
pop
adc
mov
and
nop
aam
inc
inc
inc
inc
popf
pop
cmc
inc
add
push
pop
mov
nop
add
repnz
push
mov
cmp
hlt
cwtl
xchg
xchg
test
js
add
mov
mov
mov
cltd
mov
fildll
sbb
adc
add
inc
dec
into
jle
sbb
jne
popa
push
jne
bound
inc
mov
lds
pusha
or
sub
or
int
mov
cmp
je
js
dec
loopne
nop
repnz
loopne
jp
dec
cmp
mov
add
sarb
inc
mov
pop
xchg
cmpsl
mov
cmovg
shlb
data16
xchg
repnz
aam
andb
pop
sub
pop
jnp
cld
inc
inc
sbb
push
mov
aaa
pop
movsb
mov
cld
addr16
sbb
sti
repz
imul
mov
and
jo
add
mov
dec
fs
test
xor
and
mov
inc
push
push
mov
and
call
stos
jae
jns
mov
sbb
mov
cmpsl
in
jo
cmp
sub
imul
daa
arpl
dec
mov
mov
je
cmp
ja
lea
rcll
cmpsl
mov
nop
mov
cs
aaa
rcr
pop
push
sti
in
xchg
lcall
adc
cmpl
adc
cmp
mov
scas
adc
jb
and
stos
insl
inc
enter
mov
ficompl
or
push
cmp
mov
lcall
or
inc
orb
popa
xchg
xor
or
stc
ret
add
inc
push
insl
jno
fimuls
xchg
loopne
xlat
jecxz
mov
mov
mov
pop
sbbb
xlat
aam
movsb
addr16
push
push
jmp
outsl
daa
push
xor
popa
daa
or
cld
or
test
sahf
ret
fmul
repnz
repz
xchg
xchg
fldl
ret
or
add
fistps
cld
call
xor
mov
push
inc
pusha
in
in
cmp
sub
repnz
dec
cs
jb
and
lea
adc
jmp
popf
lahf
jge
adc
std
out
mov
jb
pop
inc
into
mov
inc
nop
dec
testl
js
add
ficompl
out
pop
movsl
lret
in
aas
ss
repnz
test
fistpll
jo
xor
data16
or
dec
std
lahf
scas
add
vpacksswb
dec
mov
out
jae
cltd
inc
neg
pop
fbld
inc
xor
out
inc
dec
jo
add
fwait
insb
test
mov
js
jbe
ret
jp
xchg
filds
sbb
cmpsl
lock
dec
push
je
mov
lock
movsb
les
neg
loopne
jecxz
jb
xorb
and
sub
xchg
cmp
imul
in
pop
outsb
push
lods
xchg
add
out
ja
fisttpl
jno
flds
jle
jbe
pop
adc
mov
or
pushf
xor
fiadds
cmp
sbb
add
xchg
jne
fwait
jmp
xor
mov
cmp
inc
jle
sbb
xchg
fnstenv
adc
and
push
sub
inc
xor
es
into
pop
loopne
mov
enter
testl
add
xor
mov
mov
xchg
sbb
pop
popa
push
dec
call
subl
arpl
sub
pop
mov
stos
aam
mov
push
jge
inc
pop
js
jp
mov
out
pop
je
push
mov
dec
mov
jns
iret
cmpsl
lret
stos
stos
mov
jp
push
pop
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
sti
fcmove
lret
stos
stos
mov
jp
push
pop
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
mov
mov
fstpt
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
sti
jmp
sti
fcmovne
lret
stos
stos
mov
jp
push
lock
dec
sub
mov
cmc
in
arpl
xor
push
movsb
xor
add
shrl
ret
sub
push
push
lcall
xor
and
adc
add
repz
or
cmp
push
adcl
sub
loop
lock
stc
shlb
dec
cmpsb
sub
sbb
and
sub
push
lcall
aaa
xor
sub
mov
rolb
divb
xchg
lahf
lahf
lret
shll
push
sbb
jo
bound
sub
sub
pop
xchg
jp
daa
lea
or
cli
mov
sbb
jecxz
movb
dec
pop
test
mov
cli
and
in
mov
jecxz
push
fidivrl
mov
lock
mov
fimuls
cli
stos
ss
stos
mov
rcll
xchg
divb
mov
xchg
mov
mov
sub
shlb
rcrb
push
pop
das
aaa
cmp
or
aas
xchg
test
popf
push
stos
inc
mov
ficompl
adc
movsl
repz
and
xor
inc
test
push
sbb
adc
pop
mov
addr16
add
mov
cmpsb
inc
shll
sbb
jp
pop
loop,pt
mov
lret
pop
test
push
xchg
mov
and
pop
fisttpl
out
xor
adc
pusha
mov
lret
add
repz
or
cmp
sub
jp
push
lcall
xor
and
adc
add
repz
or
cmp
sub
jp
push
lcall
cld
out
cld
jmp
aam
scas
in
sbbl
mov
movb
push
std
imul
loop
enter
sarl
int
stos
jp
push
dec
adc
in
call
jecxz
stos
mov
add
jbe,pt
or
mov
or
mov
push
cmp
and
mov
lret
or
idivb
push
fs
lret
mov
mov
xorl
push
push
mov
push
and
in
shl
xchg
lock
mov
xchg
push
cmpsl
push
icebp
push
in
xor
cmc
mov
les
pop
or
add
jno
sub
ss
pusha
pop
xor
mov
sbb
xchg
cmpsb
sbb
adc
lret
adc
xchg
dec
repz
out
jg
xorl
rolb
push
xchg
pushf
data16
jmp
insb
inc
lcall
inc
cmpsb
sti
and
pop
mov
loop
lahf
xchg
hlt
jl
sbb
nop
inc
sbb
shrb
mov
jae
or
adc
faddl
mov
idivb
iret
mov
xchg
or
and
sub
add
loope
js
pop
pop
inc
sub
jno
fisttpl
fst
sub
arpl
or
jle
std
nop
mov
cs
ljmp
xchg
outsl
or
xlat
je
xchg
pop
push
shlb
push
push
lret
push
push
je
jle
les
cmp
cltd
insl
arpl
pop
mov
mov
repz
movsl
fildl
rcl
into
jmp
sub
xchg
repnz
adc
sbb
mov
push
mov
pop
fucomi
push
inc
std
add
jge
jecxz
xchg
dec
les
push
mov
or
push
lea
add
lret
xor
add
imul
add
orl
jmp
and
inc
or
cmpsl
xchg
lock
shll
aam
pop
lret
js
popa
out
je
ret
popf
xchg
push
outsl
aaa
xchg
in
repz
test
fnsave
xchg
sub
cmc
mov
bound
bnd
loop
cli
mov
inc
push
jne
xchg
rcll
dec
lea
mov
test
mov
xor
mov
mov
dec
xchg
pop
inc
xchg
cmpb
into
inc
or
test
xchg
xor
sub
adc
dec
es
outsl
adc
fstl
jnp
movsb
push
fwait
xchg
repz
pop
mov
push
fcompl
mov
jg
jl
inc
lret
fcompl
ds
and
xchg
xchg
les
addb
adc
test
std
aad
ds
les
xchg
pop
cmc
mov
addr16
fs
xchg
aas
nop
aaa
inc
rcl
cmp
bound
repnz
cwtl
mov
mov
cmp
cmp
std
dec
cmp
dec
add
fnstsw
repnz
xchg
movsl
lods
sbb
xchg
add
shlb
fistps
push
jg
clc
dec
and
dec
testl
sub
subb
mov
xchg
mov
ret
ljmp
ja
insl
dec
lods
orl
in
pop
push
repnz
sbb
dec
imul
sahf
adc
and
es
mov
adc
shrl
and
es
pop
and
movb
pop
push
adc
ds
clc
add
fmuls
fscale
imul
push
sbb
aas
lahf
or
lds
lods
scas
test
shlb
xchg
scas
cmp
xchg
push
xchg
rclb
lcall
js,pn
andb
mov
sbb
adc
mov
mov
mov
fldt
movsl
or
rorl
mov
mov
sbb
movsl
xchg
mov
repz
mov
test
xchg
dec
out
gs
mov
fnstenv
mov
cmovae
sbb
bound
movsb
loope
push
ret
mov
xchg
jl
or
add
loop
and
lea
push
inc
loope
cli
or
push
fadd
js
push
test
orb
sbb
mov
mov
lods
iret
mov
loope
pop
xchg
mov
mov
mov
adc
pushl
fbstp
mov
leave
push
fstpl
fwait
out
ret
sti
in
xchg
jae
pop
push
push
out
or
mov
inc
add
pushf
imul
dec
cmp
cltd
fwait
adc
sbb
jle
inc
mov
addr16
jle
outsl
call
sub
add
jle
ljmp
push
or
and
stos
lods
push
add
ffreep
sbb
jl
mov
inc
lods
mov
loop
repz
andl
in
or
mov
ja
mov
xchg
and
push
and
sub
inc
lcall
in
test
push
fcmove
xchg
ljmp
fsub
xchg
xchg
mov
xchg
xor
mov
dec
jbe
mov
push
es
xor
iret
and
mov
sub
jb
pop
out
adc
loopne
pop
das
xchg
mov
outsl
icebp
inc
dec
xor
mov
pop
addl
sub
pop
ds
push
cmp
jo
push
mov
mov
pop
and
pop
and
pop
add
cmp
add
jbe
adc
cmp
cmp
lret
mov
out
cmc
lds
hlt
fcoml
mov
loopne
movsl
lods
xchg
jbe
push
xchg
sti
dec
fwait
jg
neg
test
aas
xor
add
in
movsl
adc
addr16
push
imull
stc
movsb
adc
cmp
frstor
pushf
fwait
mov
ds
out
mov
mov
gs
pcmpgtw
and
dec
or
testb
cltd
jmp
cmpsb
cmc
out
pop
mov
enter
fisubl
shlb
jp
or
xchg
jbe
scas
push
in
or
adc
pop
std
fistl
push
pop
in
in
inc
sbb
mov
jge
bound
mov
add
fdivrs
daa
test
inc
cmp
or
cltd
xchg
shll
leave
jo
out
and
sbb
movsb
cmp
push
push
sub
add
inc
jl
cwtl
nop
push
es
fstpl
xchg
jb
gs
negb
out
sbb
icebp
shrb
jle
int3
jno
into
aaa
movsb
mov
xchg
push
test
and
test
fildl
xor
in
imul
out
inc
push
inc
pop
jnp
inc
jp
pop
xchg
adc
ficoms
inc
pusha
mov
cld
les
mov
repnz
loopne
dec
mov
add
mov
inc
je
fstpt
nop
lea
enter
jns
clc
xor
shr
clc
aaa
imul
shrl
mov
outsb
insl
xor
loopne
or
sbb
jb
jp
pop
sbb
xchg
hlt
lcall
push
popa
test
lds
aas
adc
movq
cmp
add
push
lcall
mov
and
push
pop
into
mov
mov
push
out
int
loope
add
ljmp
xor
dec
push
aas
insb
stos
push
repnz
andb
push
test
mov
fdiv
mov
es
cmp
cwtl
scas
fildl
mov
in
repnz
inc
imul
adc
jne
and
cmp
repnz
xlat
xor
and
sub
mov
dec
mov
jns
mov
inc
push
mov
inc
jge
es
sub
xchg
lahf
cli
je
mov
ds
jl
arpl
aas
ret
xor
shrb
popa
push
hlt
add
movb
imul
test
insb
mov
or
xor
iret
scas
je
adc
imul
push
push
add
lret
mov
bound
pusha
add
xor
sbb
fadd
js
scas
mov
push
sub
xor
shll
jne
lret
movsb
add
lret
lret
call
fwait
or
stos
push
add
or
mov
mull
fildl
cmp
test
mov
mov
sub
mov
jbe
int3
pop
and
rclb
stc
pop
or
xchg
scas
rol
addr16
jl
xchg
inc
lds
adc
les
xor
dec
insb
lcall
mov
adc
xchg
mov
adc
insb
repnz
dec
dec
dec
adc
lcall
pop
inc
mov
aaa
incb
cmp
pop
dec
aas
jo
ss
cvtdq2ps
mov
rcrb
mov
push
pop
mov
sub
mov
data16
xor
imul
movsl
push
push
mov
jnp
pop
add
in
icebp
xorl
popa
in
jb
xlat
pop
aaa
cmp
data16
fdivs
test
add
push
rorl
xchg
fs
inc
jge
out
push
mov
aam
push
outsb
js
out
sub
in
sub
xchg
aad
cmp
push
and
in
mov
mov
notl
add
push
dec
insb
repnz
jae
push
mov
mov
std
xchg
sub
adc
jl
mov
push
mov
pop
dec
mov
scas
mov
push
inc
push
xchg
and
outsb
imul
in
jp
cmp
and
sbb
jo
adc
xchg
dec
out
adc
mov
xchg
jle
pushf
push
ret
fdivrp
outsb
inc
shlb
push
pusha
mov
xchg
jns
mov
mov
mov
flds
adc
lcall
fstl
ss
and
fildl
clc
mov
pop
xorb
mov
or
xor
jle
dec
mov
in
pop
mov
shl
arpl
inc
das
popf
pop
dec
das
sbb
movsl
add
pop
inc
jl
dec
stc
lds
sti
out
push
push
scas
cmp
les
add
ds
adc
jmp
xchg
adc
inc
inc
popf
pop
test
xchg
nop
popf
cltd
dec
xor
cmpsl
adc
jle
mov
insl
mov
ljmp
divb
lcall
data16
or
pushf
jno
ljmp
jnp
xor
rcrb
pop
push
iret
stos
subl
mov
inc
or
lret
insl
aaa
mov
shr
pop
bound
stc
pop
add
rol
or
push
pop
aaa
sub
cli
xchg
jb
mov
or
ljmp
lods
stos
mov
cmp
dec
aad
and
leave
mov
dec
xlat
adc
fsubr
lret
fsubl
xchg
imull
movsb
push
dec
clc
outsl
data16
mov
inc
dec
pop
xchg
scas
mov
and
mov
fs
mov
outsb
rol
mov
fimuls
movsb
popf
orl
jg
xchg
cmp
pop
stos
cmp
test
fiadds
jae
or
mov
and
xchg
mov
xchg
ds
lea
lods
mov
mov
clc
scas
enter
cmpsb
jo
fstpl
and
enter
iret
test
push
sti
flds
pushf
int
sbb
iret
cmp
inc
push
pop
inc
mov
sub
or
cmc
and
push
popa
mov
jbe
addr16
lock
stos
adc
daa
test
mov
mov
or
inc
popa
ret
and
daa
inc
dec
lret
and
ja
ds
cld
sahf
leave
or
dec
lods
or
mov
or
push
ja
inc
fdivrl
aad
movsb
out
pop
les
inc
cltd
jl
stc
rcrb
mov
mov
js
dec
lret
adc
and
dec
das
add
mov
or
pop
in
cli
int
pop
jle
pop
mov
mov
loopne
pusha
in
ficompl
pop
jp
cmp
jecxz
movsb
outsl
daa
in
scas
insl
sbb
popa
xor
push
imul
jb
or
push
out
mov
push
inc
jno
out
xor
scas
ret
sbbb
mov
gs
mov
int
popf
mov
pop
adc
or
ja
out
mov
pop
adc
repnz
in
iret
mov
or
jmp
adc
mov
lret
movsb
lret
ficoml
addl
inc
ret
xorl
sub
outsb
inc
mov
out
test
mov
pushf
push
fstpl
shll
rolb
push
subl
dec
adc
jbe
bound
mov
cmp
mov
leave
aas
sbb
aaa
repnz
pop
daa
inc
pop
jnp
cmp
lock
cwtl
sbb
fistps
jp
jno
repz
lds
jp
mov
stos
mov
pop
jo
inc
cmp
push
mov
icebp
shlb
insl
aam
clc
push
test
push
addr16
inc
adc
cmp
inc
shrl
outsl
pop
dec
in
popf
lea
push
or
ret
sbb
xchg
mov
lock
push
into
mov
add
sahf
fists
inc
fcomps
icebp
pop
lret
xchg
sub
and
dec
sub
cwtl
rcl
je
lock
sbb
jmp
popa
rcrl
movsl
aaa
subb
sbb
call
xor
mov
aaa
mov
or
mov
mov
pop
xchg
add
iret
pushf
cmpsl
mov
into
mov
enter
aad
daa
lods
in
in
daa
or
test
inc
adc
xor
rcrb
sub
lcall
adc
je
push
cmpsl
cmc
dec
and
pop
shll
dec
lods
and
cmpsl
imull
sarb
adc
aaa
pop
jecxz
ja
lcall
test
lds
add
sub
push
orl
mov
les
je
int3
push
les
add
cwtl
pop
mov
cli
push
xchg
pop
imul
insb
ja
cs
insl
push
clc
inc
lret
mov
sub
fistpl
notl
xchg
hlt
jno
cmpsl
xor
inc
fs
cmp
mov
inc
mov
je
out
aad
xor
push
inc
and
fildl
xor
mov
xor
mov
fcmovu
jbe
in
ljmp
dec
dec
fwait
sub
daa
dec
mulb
jbe
push
bound
sbb
lods
dec
out
lret
loop
std
out
call
sbb
adc
aas
add
aad
mov
xor
enter
das
xor
inc
inc
lods
rorb
dec
repnz
je
mov
xor
jo
add
add
mov
pop
loope
mov
and
xor
cmpsb
push
inc
out
xchg
outsb
mov
jg
movsl
inc
mov
dec
fwait
iret
inc
nop
inc
or
loope
xchg
enter
mov
leave
cltd
outsb
mov
daa
cmpsl
mov
xor
pop
sahf
push
mov
andb
jmp
pop
xchg
imul
sub
push
xor
and
add
or
jp
outsl
dec
push
cld
mov
mov
push
addr16
sub
mov
push
xorl
cmp
mov
and
xchg
popa
hlt
les
adcl
push
fwait
lods
mov
or
nop
jbe
cmp
dec
dec
bound
imul
jnp
in
scas
sub
mov
es
cmc
cwtl
or
fnstsw
aaa
enter
inc
sub
lods
sbb
popf
xchg
sarl
cmp
pop
lret
rcr
dec
stc
mov
or
fwait
out
cmp
sbb
jne
test
dec
jns
and
dec
push
std
pop
cli
push
pop
cmpsl
add
jbe
mov
xchg
sub
mov
lea
ficomps
pop
adc
sbb
jbe
aad
clc
iret
in
fnstsw
or
add
dec
or
push
daa
rolb
xchg
pop
stos
xor
loop
dec
add
push
ret
mov
mov
clc
ret
in
sbb
xchg
call
in
je
inc
ja
sub
inc
loop
lods
mov
pop
sbb
cltd
sti
outsl
sub
in
test
mov
ds
aam
inc
xchg
mov
add
adc
outsb
lds
lods
cmp
repnz
mov
insl
out
sahf
sub
pop
lds
adc
mov
enter
cmc
subl
add
and
fiaddl
or
mov
cld
mov
out
inc
xchg
jmp
fs
pushf
inc
cmp
inc
mov
out
fwait
pop
inc
pop
xor
imul
sbb
test
incb
stos
mov
or
cmpsl
and
mov
outsl
stos
rolb
repz
push
inc
movsb
push
mov
push
xchg
pop
outsb
cmc
xorb
stos
cld
mov
pop
cmp
popl
mov
jae
shll
dec
repnz
insl
sti
imul
pushf
movsb
test
stos
daa
sbb
mov
pop
aam
das
xchg
sbb
mov
bound
push
outsb
lock
int
dec
mov
mov
sbb
inc
adc
fstpl
les
xor
jmp
cmp
lahf
mov
sti
mov
add
int
xor
repz
nop
jl
dec
pop
jle
mov
aaa
mov
mov
sbb
imulb
xor
repnz
and
into
icebp
dec
mov
movsl
insb
sub
xchg
insl
popa
push
jmp
aad
push
stos
clc
and
mov
push
jg
sub
in
ja
push
inc
hlt
or
gs
in
mov
push
aas
negl
rcll
xor
inc
lods
popa
jl
push
js
xchg
cmp
mov
pop
mov
pop
andb
nop
xchg
adc
adc
pop
mov
mov
push
cli
test
cld
or
cwtl
out
dec
jg
cli
stos
mov
cmp
enter
cmp
adc
mov
dec
pop
shll
or
inc
inc
adc
and
lcall
cli
push
stc
jne,pt
ret
hlt
jecxz
mov
test
jle
lret
xor
and
jmp
sbb
data16
in
repnz
cmp
daa
xor
add
cld
daa
fnclex
xchg
aaa
xor
in
das
pop
sti
push
int3
sarl
mov
lret
subl
pop
lea
jae
inc
sub
xlat
adc
and
into
push
sub
jp
jo
loop
aaa
or
or
or
cltd
scas
sbbl
movsb
lods
and
inc
jge
sbb
adc
dec
mov
xorb
cmp
daa
sub
loopne
in
in
loop
mov
sbb
xchg
cmp
inc
dec
call
push
sub
inc
inc
out
lahf
mov
or
cmpb
or
arpl
fwait
mov
mov
ljmp
aas
out
xchg
aaa
jb
out
jmp
jb
or
into
xor
shll
xor
shll
fucomp
pop
shrb
outsb
leave
and
test
out
inc
sbb
ret
cmp
inc
sub
imulb
mov
and
push
pop
shrb
adc
pop
in
cli
icebp
cwtl
fsubrl
pop
scas
mov
test
subb
lcall
and
cmp
test
fs
in
jno
mov
mov
add
clc
arpl
in
fwait
xchg
sbb
hlt
push
ja
test
fs
adc
movsb
and
lcall
roll
push
xchg
nop
push
jmp
bound
and
pop
sarl
pop
mov
sub
mov
add
add
mov
testl
aaa
lock
pop
cltd
dec
mov
ret
mov
out
insl
in
push
sbb
push
push
xchg
adc
mov
sbb
xchg
stc
insl
sub
arpl
dec
or
das
inc
lea
fs
pop
shll
xlat
sbb
dec
sbb
add
mov
pop
jg
lret
cld
insb
inc
inc
push
lds
mov
sub
mov
cli
mov
adc
aaa
test
bound
mov
pop
push
push
test
mov
std
jmp
xchg
dec
lret
lods
sub
pop
mov
mov
outsl
call
adc
or
mov
popf
nop
imul
insb
sub
push
xchg
decl
sahf
push
lods
push
mov
mov
pop
mov
icebp
out
dec
orb
mov
lahf
imul
pop
cmpsb
push
lahf
mov
popf
sbb
es
lods
xor
adc
rol
lahf
xchg
stos
xchg
sub
fwait
rcll
xor
add
and
xchg
cmpsb
add
xor
sbb
push
stos
jne
dec
push
mov
jp
inc
shll
test
and
push
mov
push
into
icebp
add
inc
mov
enter
lds
cli
adc
test
mov
dec
cmp
out
pop
es
pop
mov
dec
lds
test
push
jnp
mov
and
adc
add
repz
or
cmp
sub
jp
push
lcall
xor
and
adc
add
repz
or
cmp
sub
jp
push
lcall
mov
cli
ret
ljmp
ret
sub
jnp
push
lcall
xor
xor
adc
sub
sbb
jns
ret
pop
shrb
mov
test
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
and
xor
add
adc
gs
dec
sub
push
ficompl
lret
mov
fwait
in
cmc
stos
aam
aam
and
xor
add
adc
or
sub
lret
movsb
lret
mov
test
xchg
fwait
cmpl
xor
add
adc
adc
sub
call
cli
fwait
mov
cld
mov
jnp
sbb
fwait
cli
inc
in
push
pop
daa
xor
fbstp
andl
mov
add
cltd
xor
mov
mov
dec
pop
jnp
or
jl
test
sub
mov
mov
imul
stos
sbb
pop
and
or
sub
inc
adc
fs
mov
mov
aam
in
lret
idiv
mov
in
adc
fistpl
mov
arpl
mov
and
xchg
sbb
sub
dec
into
and
and
inc
mov
icebp
mov
movsb
mov
and
xor
add
adc
sbb
xor
shll
in
hlt
mov
and
dec
push
inc
pop
push
push
and
and
aam
lods
mov
in
nop
out
mov
mov
mov
dec
sub
dec
sbb
daa
or
cmp
js
cwtl
shrl
fwait
and
cmpb
daa
addr16
popa
add
or
sub
lret
mov
test
xchg
fwait
in
hlt
mov
and
xor
add
adc
or
sub
lret
mov
test
xchg
fwait
in
hlt
mov
and
sbb
imul
ja
jg
pop
mov
out
adc
imul
ret
clc
dec
mov
pop
jno
aad
lods
and
int
add
inc
push
push
pusha
movsl
out
adc
ja
pusha
fbld
adc
xchg
adc
cmp
sti
lret
repz
mov
and
cmp
dec
mov
push
jl
inc
xlat
cmp
enter
rdmsr
or
and
push
pop
inc
mov
daa
jne
es
push
ljmp
mov
xor
sub
ret
out
out
xor
mov
cld
je
mov
xor
and
fsubr
leave
sbb
mov
cmc
mov
clc
fcomps
clc
inc
stos
shrl
mov
ds
lods
dec
jo
push
jmp
adc
stos
scas
stos
mov
jb
sbb
cmp
aam
jle
cmp
xchg
pop
ja
xchg
imull
es
mov
cmp
mov
cmp
sbb
jl
iret
shrl
push
mov
mov
pop
js
scas
pop
aam
enter
dec
cmc
leave
jp
dec
xchg
out
stos
adc
mov
cmp
in
xchg
not
pop
pop
sub
into
pop
cmp
lock
xchg
shrb
push
es
mov
fnsave
push
xchg
fucomip
ja
in
mov
das
bound
push
sbb
and
pushf
jg
mov
stos
pop
out
cmpsb
xchg
loopne
ss
aam
mov
fnstsw
xchg
arpl
bnd
push
testl
les
mov
rclb
out
and
into
push
or
js
fadds
xor
scas
out
xor
mov
lock
fcom
inc
notb
push
mov
push
add
sbb
inc
cmpl
stos
es
lea
lcall
imul
daa
cmpsb
pop
pop
cltd
mov
and
inc
faddp
imul
mov
lock
mov
push
dec
fisttpll
dec
loope
add
das
and
add
jo
mov
sbb
lock
mov
mov
pusha
jnp
mov
rclb
shlb
pushf
inc
pop
clc
mov
adc
movsb
out
orb
mov
out
mov
xchg
test
dec
sub
xor
add
or
in
ror
enter
push
lds
fstl
dec
movsb
pop
out
cltd
and
dec
fmuls
repz
subl
xchg
or
lods
mov
movsl
dec
add
pop
aaa
lods
arpl
dec
bound
rolb
nop
jno
addr16
push
dec
cmp
les
and
inc
clts
fidivs
dec
sub
fisttpl
ja
repz
mov
rol
push
in
gs
pop
in
je
push
lret
movsl
in
adc
pop
sbb
repnz
test
hlt
sub
mov
rorl
jge
fdivs
je
js
xchg
jo
imull
hlt
inc
int
sub
pushf
push
outsl
xor
sbb
mov
inc
je
or
xor
ret
xor
ds
ss
adcl
bound
enter
cmp
xchg
cmp
mov
iret
dec
cmpsb
js
add
mov
bound
mov
pop
icebp
pushf
add
and
mov
ds
dec
mov
xor
lahf
cld
test
lcall
sbb
imul
hlt
jmp
jmp
or
or
insb
pop
jl
in
sahf
push
repz
jl
or
lret
cmp
out
rorb
add
bound
pop
roll
imul
test
das
mov
rcll
test
jmp
dec
cmp
es
outsb
fldt
jno
shrl
stos
inc
or
das
mov
dec
es
in
jl
cmp
xchg
stos
stos
push
pop
xchg
xchg
sbb
popa
sbbb
movsb
shll
sti
pop
rol
adc
jle
lea
cmpsb
jg
cmp
loopne
xor
test
enter
dec
inc
adc
in
addr16
dec
pushf
mov
clc
and
notb
data16
arpl
or
or
es
jbe
sbb
sbb
xor
add
sub
popa
sub
adc
iret
xchg
dec
jl
push
outsb
mov
or
rorl
and
mov
cld
call
xor
aad
push
outsl
cwtl
add
test
push
push
fisttpll
mov
fisubl
xchg
sbb
hlt
call
push
out
in
insl
dec
xchg
adc
adc
lcall
outsl
pop
dec
into
call
push
mov
lcall
mov
imul
xchg
pop
mov
paddsw
mov
jmp
inc
movsl
jmp
push
push
cmp
pop
test
dec
ja
jno
fsubr
aad
mov
adc
ret
fisubrs
xchg
fbld
imul
adc
push
lock
les
lods
push
negb
jb
loope
cmp
mov
das
fwait
push
clc
mov
fdivl
mov
outsb
sti
testl
jae
fidivrl
test
push
cmp
xchg
jp
fisubrs
pusha
test
imul
sbb
cmc
push
inc
enter
jle
xchg
push
sbbl
push
outsb
xor
jno
jecxz
clc
clc
pop
cmp
fcmovnu
pop
shr
jecxz
cmc
add
sahf
mov
test
dec
jo
shrl
nop
out
bound
sub
dec
out
or
dec
adc
push
mov
daa
mov
inc
push
ljmp
out
jnp
dec
mov
int3
mov
movsl
lock
xor
mov
outsb
sbb
push
mov
pop
mov
mov
jg
ss
lret
lock
int
sub
popf
faddl
js
mov
mov
adc
and
push
fidivrl
dec
cmpsl
repnz
int3
outsb
ljmp
aaa
push
push
xlat
repnz
xor
xor
into
cmc
loop
or
jmp
sti
ret
add
mov
sar
in
aam
lret
or
mov
inc
cmp
inc
xorb
fs
aaa
movsl
add
xchg
or
add
or
iret
mov
mov
and
imul
adc
xchg
add
in
xor
sbb
inc
xchg
lds
ficompl
out
lea
lods
movsb
imul
loopne
cld
pop
push
imul
inc
stos
vmovdqa
jg
mov
sub
sbb
scas
inc
outsl
hlt
xor
adc
aas
dec
gs
daa
sbb
jle
mov
xlat
push
roll
js
mov
fistl
in
pop
hlt
jne
ljmp
test
and
push
sarl
push
push
xor
pop
or
xchg
and
nop
cmp
or
or
mov
in
ficoml
das
dec
repnz
cmp
mov
mov
xor
cmpsl
popa
dec
test
xchg
jnp
sub
push
fisttpl
insl
test
ljmp
test
out
loop
arpl
jp
pusha
addl
loop
jne
mov
cwtl
dec
push
xor
jecxz
in
pop
mov
or
lock
sub
cmc
lret
stos
lcall
call
inc
push
sub
push
lcall
sub
jge
leave
sbbl
cmp
jg
fcompl
lods
push
scas
dec
mov
test
stc
push
outsb
ficoml
mov
jle
xchg
clc
mov
add
pop
mov
jbe
les
add
xlat
movsl
and
inc
ret
push
cmp
adc
sub
cmp
cmp
jbe
mov
sahf
dec
mov
std
rcrl
push
sub
insl
lret
dec
pushl
lods
or
adc
int
xchg
xlat
jno
cli
dec
adc
fsts
xchg
int3
jp
fwait
mov
jmp
dec
xchg
mov
jp
outsb
xchg
out
xor
push
mov
in
add
movsl
testl
sub
out
pop
xchg
shll
rolb
jg
pop
mov
nop
scas
pop
outsl
dec
dec
pop
icebp
aas
sub
sub
ja
push
jno
loopne
into
fdivl
jnp
dec
test
insb
push
and
sahf
sbbb
mov
dec
negb
xchg
mov
mov
int
mov
inc
add
push
fs
or
ret
stos
push
mov
out
add
ja
push
push
scas
cmp
test
mov
lret
ljmp
daa
in
jle
mov
push
mov
fcmovnu
sub
mov
jmp
ss
lahf
orb
int
es
inc
sbb
fwait
sub
or
mov
dec
into
js
out
push
imulb
sbb
lea
adc
addr16
stos
ljmp
fldt
filds
mov
dec
ljmp
scas
testl
repnz
inc
cmc
push
sub
je
push
sbb
xlat
repnz
notl
test
outsb
adc
or
daa
add
mov
aas
sarl
or
aaa
and
push
stc
out
movsl
fmuls
out
or
cmc
aas
pusha
rolb
xchg
cmpsl
test
fistps
rcrb
cmp
pushf
dec
lahf
stos
mov
add
pop
xor
aas
ffreep
xor
push
jge
dec
imul
stos
jb
mov
cmp
test
insl
ficompl
jne
popf
data16
in
cld
mov
sub
shrl
xlat
fs
adc
push
mov
cwtl
in
ret
mov
push
lods
xor
daa
jns
pop
cmp
in
inc
aas
push
jp
or
loope
mov
ja
push
fcmovu
rolb
and
pop
aas
test
js
or
xor
xor
push
or
lock
xlat
jl
sub
mov
movsl
decl
jae
dec
loopne
jle
in
and
fistpll
cld
xchg
mov
out
mov
inc
mov
je
mov
sbb
add
imul
and
push
dec
pop
pop
lret
xlat
stc
jno
cli
or
rcl
addr16
mov
out
inc
mov
xor
mov
mov
loope
lods
out
xor
sbb
or
not
inc
nop
xchg
pop
in
xchg
xchg
sub
and
into
lock
jle
jle
sub
ja
cmpsb
jo
xchg
mov
xchg
mov
scas
aam
dec
sti
iret
pushf
adc
xor
and
xchg
or
lcall
fsubl
and
ss
pop
movsl
daa
xor
xchg
push
cwtl
sbb
pusha
inc
pop
mov
pop
mov
mov
les
aaa
mov
and
jae
fcoms
subb
out
mov
lds
xor
lea
imulb
lcall
repnz
gs
sub
inc
outsb
pop
xchg
or
dec
out
shl
cmp
fstps
popa
jbe
dec
aas
jmp
adc
fmulp
xor
stos
or
outsb
call
mov
inc
sub
or
or
sbb
mov
push
inc
and
lea
cs
call
out
jg
in
fdivr
xchg
repnz
add
notl
mov
lret
mov
pop
cli
or
fwait
ret
cmp
cmpb
pushf
jnp
into
sub
cmc
cmp
int
pop
mov
or
mov
ret
lds
gs
pop
lods
pop
xor
icebp
notb
addb
dec
xor
cmpsb
or
inc
cmp
push
pop
loop
jae
clc
xor
mov
lcall
imul
loop
in
in
sub
pop
pop
xor
adc
mov
lods
dec
aaa
imul
and
push
xor
push
jg
fwait
fs
pusha
test
or
pmuludq
pushf
mov
scas
int3
push
arpl
xchg
repz
ja
nop
into
sbb
xor
cwtl
out
cmp
jmp
pop
adc
sub
test
addl
or
inc
or
pop
and
add
int
scas
cld
lods
ljmp
push
push
outsb
lcall
js
cmp
pop
xchg
and
xchg
cmp
jbe
mulb
push
bound
push
inc
mov
jmp
fsubrl
or
test
cmpsb
sbb
cld
sub
les
loopne
shrb
jo
dec
roll
or
aaa
ror
inc
sbb
fs
mov
cmpsl
push
mov
pop
pop
aam
sub
xor
mov
insl
mov
jo
mov
jb
inc
stos
aam
jmp
push
mov
mov
and
sbb
inc
movsl
repnz
jne
mov
neg
dec
cli
nop
outsb
bound
lret
dec
cvtps2pi
adc
out
sub
mov
dec
lods
sarl
leave
test
push
dec
dec
fdivrs
sub
xchg
xchg
jb
iret
push
je
mov
fildll
lods
repz
jnp
xchg
sbb
mov
fisttpl
insl
popa
mov
test
scas
or
gs
inc
es
jp
cwtl
pusha
ja
cwtl
icebp
insl
pop
daa
push
int
jbe
rorl
rcr
ret
sbbb
mov
lret
dec
xchg
sub
pop
mov
or
push
mov
shlb
push
mov
rorb
in
cmp
pusha
pop
push
xor
push
pop
inc
mov
mov
out
mov
test
in
ja
mov
xor
dec
inc
fwait
or
xchg
sub
inc
push
add
or
jg
lahf
inc
cmc
arpl
xor
pop
push
pop
adc
mov
sahf
cwtl
push
cld
test
jo
push
jb
cli
into
fsubl
mov
cmpb
ss
aam
lods
mov
dec
in
cltd
ss
mov
rol
test
into
push
leave
ds
fwait
int
dec
add
inc
mov
xor
notb
lea
mov
sub
lcall
pop
mov
push
push
and
int
cmpsl
js
xor
mov
mov
push
mov
dec
je
sub
mov
popf
fbstp
adc
jmp
push
test
inc
and
cld
mov
addl
ja
pusha
ja
stos
in
and
iret
frstor
dec
int
cltd
cli
push
imul
pop
pop
cwtl
jp
sahf
dec
les
jl
negl
enter
and
jecxz
filds
fistpll
out
mov
xor
clc
xchg
adc
or
add
cmp
jecxz
cmp
xor
xor
or
ja
aaa
scas
out
aam
cmp
jge
add
cld
sbb
push
jmp
fcoml
lods
sarl
testl
std
and
sbb
sub
cltd
pop
subl
pop
push
in
or
int3
ja
out
add
or
pusha
xor
ja
imul
lret
mov
cmpsl
cli
push
mov
mov
adc
into
dec
and
adc
or
dec
adc
jmp
aam
push
pop
mov
inc
push
repnz
std
jno
mov
movsb
mov
adc
jp
out
and
and
lcall
lds
push
add
adc
cmp
jno
outsb
and
out
test
movsb
push
mov
mov
cs
adc
pop
les
hlt
ljmp
popf
mov
icebp
cmpsb
add
xchg
cmp
lods
pusha
jg
lahf
jmp
mov
btc
mov
or
xor
lds
mov
and
flds
or
out
clc
hlt
sbb
mov
lds
mov
popa
mov
mov
mov
rcll
sub
push
in
cmc
or
xchg
outsb
shr
les
inc
pop
dec
or
sbb
mov
sub
cmp
imul
xor
je
or
fidivrl
sub
das
cmp
icebp
data16
lea
adc
mov
xchg
and
sub
xor
xchg
pop
ret
jne
cli
push
jno
lret
int3
mov
rcll
sbb
push
movsb
aaa
push
sub
int3
jmp
loop
test
mov
xor
mov
mov
in
xor
loopne
add
sub
cmp
enter
push
movb
push
mov
repnz
xchg
into
out
cmp
mov
mov
leave
jecxz
jno
scas
mov
mov
lret
lock
jg
dec
xchg
sbb
inc
std
lock
ljmp
mov
shrb
or
aaa
mov
movsb
xchg
jo
jo
or
sbb
lcall
es
adc
cmc
xchg
ljmp
dec
nop
adc
jns
lds
inc
add
mov
jmp
mov
push
shrl
and
pop
push
push
sets
dec
cmp
push
adc
sub
adc
fucom
test
lock
insb
mov
test
sbb
fmul
xchg
cmp
es
stos
adc
xor
jbe
jo
jnp
xchg
mov
pop
mov
and
fldcw
clc
scas
mov
sbb
fistpl
mov
int3
dec
add
lea
push
jp
sub
sbb
mov
ja
in
xor
jl
out
shlb
icebp
cmp
or
je
and
push
pop
mov
push
scas
into
jae
cltd
sub
andb
xchg
mov
push
jmp
sbb
xchg
mov
test
rol
sti
and
mov
adc
lahf
push
add
cmp
cmp
js
mov
std
lods
push
and
out
cwtl
in
sarl
pop
fists
xlat
jns
sub
cmc
faddl
mov
adc
add
mov
in
mov
inc
das
rolb
imul
dec
ret
mov
mov
imul
jae
mov
push
insb
sahf
pop
pop
jp
mov
mov
out
in
mov
cltd
into
or
adc
xor
mov
mov
pop
loop
popf
mov
adc
sub
out
cli
inc
push
aaa
std
xor
nop
scas
or
out
push
fisubrs
sbb
push
loop
or
int
bound
jne
sbb
jne
jne
shll
mov
dec
jmp
faddl
jge
shl
mov
and
xchg
pslld
loop
mov
push
outsl
push
f2xm1
pop
cld
lahf
lcall
push
and
repnz
lcall
loope
jg
bound
xor
fisubl
daa
ljmp
iret
pop
add
xor
dec
sbb
pop
cmc
add
mov
pop
lds
sub
adc
fxch
clc
clc
xor
mov
push
shrb
inc
sub
pop
mov
xor
add
rcrl
pop
in
push
push
cmpsl
xlat
dec
dec
and
xchg
lret
or
in
es
ljmp
insb
ja
loope
ret
jle
jl
orb
fcoms
lcall
ret
mov
movsl
sbb
inc
dec
xor
mov
mov
adc
fisubrl
gs
icebp
aad
lods
cmp
mov
push
hlt
add
inc
mov
sub
mov
fs
xchg
mov
mov
mov
popa
dec
scas
iret
ljmp
or
ret
nop
sbb
jnp
add
iret
sub
jmp
jl
pop
loope
xor
ret
ljmp
jnp
or
jb
out
aaa
xchg
lret
pop
fdivs
ljmp
imul
or
push
sti
lods
ljmp
xchg
out
jmp
addb
stos
mov
jno
push
scas
or
and
and
cs
test
pop
fnstsw
sub
adc
mov
repnz
pop
adc
push
jp
ljmp
es
mov
sbb
cmp
or
test
pop
push
adc
test
outsb
sti
push
iret
mov
xchg
mov
dec
in
xchg
mov
lret
in
leave
mov
scas
cltd
fs
repz
mov
mov
ret
popa
pop
mov
aam
or
jne
jge
pop
push
xchg
xor
mov
fwait
imul
cmpsl
or
xchg
cmp
inc
xlat
test
out
pop
mov
gs
or
daa
pop
ss
jbe
cwtl
xchg
arpl
test
or
inc
jp
inc
ja
and
xor
xor
or
ja
pop
and
imul
add
add
adc
or
sub
lret
mov
test
xchg
fwait
in
hlt
mov
and
xor
add
adc
or
sub
lret
mov
test
xchg
fwait
in
hlt
mov
and
xor
add
adc
or
sub
lret
mov
test
xchg
fwait
in
hlt
mov
and
xor
add
adc
or
stos
xchg
and
xor
push
test
jecxz
insb
add
inc
cmp
adc
and
jmp
cs
sbb
arpl
cmpsb
adc
inc
rcll
jb
adcb
add
push
rclb
jae
pop
add
xor
jb
orb
sbb
dec
rcrb
imul
add
push
inc
pushf
and
negb
jae
push
fildl
test
lret
into
sub
or
lcall
dec
jae
and
mov
mov
pushf
mov
jecxz
pop
adc
add
sbb
clc
push
xchg
fadds
push
mov
fnstenv
jp
repz
orb
popa
int3
mov
stos
push
sub
out
jae
jge
dec
int
adc
push
inc
lcall
cld
daa
int3
dec
push
cmp
jnp
or
outsl
sbb
mov
rcrl
in
push
cwtl
lret
dec
test
inc
jb
xor
push
jmp
cmpsb
sti
add
movsl
icebp
jo
inc
add
adc
push
rolb
jae
jp
xchg
adc
inc
lret
push
jb
out
icebp
jno
push
hlt
inc
cmpsl
push
mov
push
jb
ja
push
mov
mov
adc
pop
pushf
add
roll
cmpsl
push
cltd
or
jo
jne
pop
xor
or
add
push
xlat
xchg
inc
loop
repnz
xchg
adc
inc
rcll
jb
adcb
add
push
rolb
jae
arpl
xchg
adc
inc
rcll
jb
adcb
adc
mov
and
fsubr
addb
dec
push
pop
fisubrl
add
ret
ss
sbb
insb
and
mov
es
cmp
push
hlt
inc
inc
inc
aaa
cltd
adc
jne
pop
lds
or
call
sub
jo
mov
mov
sub
push
adc
cmp
leave
cs
or
push
arpl
or
shll
jae
pop
mov
enter
pop
and
test
aaa
je
aas
mov
xchg
push
mov
aaa
inc
outsl
hlt
add
pop
or
hlt
ret
pop
jno
imul
cmp
adc
ret
int3
add
xchg
iret
jb
jbe
cmc
or
sub
mov
jno
ret
mov
mov
ss
fldl
xchg
mov
jae
xor
xchg
imul
push
and
xor
adc
pushf
mov
mov
loopne
ficoml
fistpll
out
xor
outsb
jno
out
lahf
call
lea
dec
test
cs
int
pop
mov
outsl
cmp
lcall
lcall
inc
repz
fs
pop
mov
adc
mov
mov
inc
jbe
stos
ds
mov
cmpsl
fmull
imul
jno
mov
in
mov
push
cmp
shlb
lahf
fbld
scas
shlb
clc
push
push
add
pop
divb
cmp
push
and
dec
add
and
ffreep
fnstcw
jno
cmp
jmp
ljmp
cmc
push
adc
xchg
cmp
lods
or
ret
repz
xor
push
orl
pop
pop
je
test
lcall
cmpsl
mov
inc
pushf
daa
in
not
sub
mov
inc
cld
movl
jno
jp
sub
add
pop
inc
loop
arpl
fistpll
into
jl
xor
jbe
cli
push
pop
add
cli
jbe
jl
dec
loope
push
inc
int
sbb
sarl
jo
dec
dec
bound
dec
aad
xchg
mov
push
outsb
scas
das
xchg
out
fistpll
ds
and
lea
std
adc
xchg
fimuls
push
push
pop
sahf
orb
pop
add
hlt
je
jmp
insl
xor
adcl
fmuls
adc
add
and
dec
in
pop
add
sbbl
mov
mov
push
bound
sub
lcall
in
nop
stos
pop
inc
mov
xor
push
pop
repnz
aam
fdivp
xchg
ss
dec
movb
jl
pop
ret
mov
mov
shrl
ds
iret
test
or
cmp
xchg
rcrb
cmp
in
dec
adcb
xorb
loopne
lds
sti
jb
and
out
push
stc
sub
call
jno
rcrl
or
cmp
inc
sbb
ret
add
int3
xchg
adc
pop
shlb
jg
test
ss
bound
dec
mov
clc
rcrb
mov
lcall
xchg
pop
inc
adc
xchg
call
cwtl
sub
add
sbb
outsl
lds
icebp
add
hlt
add
cs
call
lret
je
jg
std
or
dec
outsb
lods
ljmp
notb
inc
jo
push
je
loope
adc
pop
mov
inc
fnclex
js
xor
out
icebp
lods
cmp
sub
je
shrb
ljmp
ret
push
jmp
mov
inc
mov
pop
mov
mov
ficoml
pusha
dec
mov
push
pop
push
jg
jno
call
popl
les
dec
or
rcrb
pushf
mov
inc
cwtl
insl
lods
or
jbe
or
mov
add
sarl
xor
scas
jle
nop
out
xorl
xchg
xor
and
call
mov
sub
repz
popa
xchg
sub
or
push
into
es
mov
test
xor
out
je
outsl
dec
and
out
test
pop
ret
pop
cmpsb
adc
fsubl
cmpsl
push
fildl
in
xor
push
lret
dec
ljmp
sub
inc
push
nop
lds
test
dec
xchg
jnp
test
mov
nop
sub
fs
sahf
mov
xlat
mov
sbb
stc
aad
mov
pop
inc
inc
aad
bound
mov
leave
cmp
fwait
ja
mov
ss
pop
lret
mov
jb
push
mov
insb
mov
xor
mov
test
dec
cmp
loop
pop
jb
test
and
test
lods
pop
loop
mov
pusha
enter
and
cltd
bound
xor
add
aaa
sub
push
mov
loop
ret
push
pop
ret
stos
jp
dec
cmp
call
pop
insl
scas
lahf
rolb
jecxz
pop
pop
push
clc
mov
cwtl
inc
add
mov
mov
jmp
jnp
mov
sbb
leave
or
pop
dec
mov
fdivl
pop
out
bswap
cmpsl
fdivrs
scas
xchg
out
xchg
data16
loop
jo
push
or
pop
es
mov
inc
cmp
int
push
cmp
jmp
scas
lds
and
int
popa
call
scas
call
outsl
mov
leave
adc
or
rcrb
jmp
adc
repnz
jo
sbb
nop
cmp
jno
leave
ret
fcoml
pop
cmp
icebp
fildl
push
sbb
mov
add
mov
cmp
inc
cs
mov
sub
xchg
stc
loope
ds
mov
lea
mov
scas
fld
pop
cli
not
push
cmpsl
sub
enter
cmp
pop
pop
and
dec
dec
rol
lds
rcl
jl
add
dec
clc
cmp
js
and
push
test
or
sti
push
push
jg
sub
or
enter
mov
lds
jae
mov
imul
sahf
imul
cmp
pop
sbb
rcrl
xchg
movsl
jo
or
push
xchg
pop
fildl
loop
or
sbb
insl
cmp
inc
fsubr
mov
pop
add
movsl
outsb
out
adc
push
loopne
jl
popf
cli
pop
xchg
cmc
mov
loopne
mov
shlb
popa
and
sti
lock
lahf
and
xchg
cli
inc
cltd
xchg
sbb
pushf
aad
xor
sbb
and
stc
adc
pusha
popa
int3
andb
jb
lods
cmpsl
int
iret
cmc
push
clc
pop
loop
adc
mov
add
jle
lret
cmp
test
daa
je
cmp
repz
mov
mov
popf
jge
push
ficoms
rcr
xchg
nop
mov
stc
or
xchg
xor
mov
sub
sbb
and
pop
cld
lahf
sub
push
in
mov
rorb
sub
mov
add
mov
iret
insl
mov
mov
xor
push
dec
mov
stos
int
lret
xor
xchg
shrl
out
or
fcompl
jle
adc
cli
mov
mov
sbb
mov
xlat
cld
int
les
dec
adc
jge
sahf
inc
jmp
stc
inc
mov
cmpsb
add
rorb
lahf
mov
push
and
xchg
stos
lcall
add
xlat
cmpsl
push
cmp
inc
push
lahf
int3
jp
jg
add
pushl
xchg
xor
cmp
xor
dec
add
jae
xlat
cwtl
call
xchg
cmc
loopne
scas
or
push
jle
mov
adc
push
push
or
and
or
cs
and
mov
mov
pop
loop
ja
js
incl
mov
cmpsl
or
sub
lods
imul
jo
mov
fldcw
push
xor
inc
pop
mov
pusha
sbbb
loopne
shr
pop
mov
jmp
mov
lock
adc
mov
lock
xchg
and
stc
shlb
jle
je
inc
pop
lcall
inc
scas
push
rcr
adc
rorb
stos
dec
outsb
loop
pushf
push
xchg
fdivrp
test
mov
dec
fists
xor
xchg
std
aaa
adc
or
dec
paddsb
and
inc
and
pop
sub
into
cwtl
lahf
jp,pn
push
dec
mov
cmp
cltd
les
fwait
int3
out
rorl
mov
mov
or
scas
mov
orb
cmc
lds
stc
shrl
push
push
dec
xchg
cmc
lret
sar
frstor
clc
loop
sbb
pushf
xchg
mov
xchg
or
aad
pop
dec
jecxz
pop
mov
add
cmp
push
mov
dec
rorl
or
mov
push
jg
push
mov
jl
mov
scas
in
lea
lods
xchg
dec
aaa
and
movsb
dec
popf
ret
jb
mov
fnstcw
call
jmp
mov
xor
adc
sbb
fdivp
ret
push
and
xchg
icebp
loop
pop
adc
adc
and
xchg
jo
es
in
ret
mov
jge
sbb
das
mov
stos
jns
cs
jb
sub
or
adc
pop
adc
inc
sbb
push
aaa
dec
adc
das
jb,pn
cmp
pop
mov
jmp
test
cmp
push
inc
add
inc
and
ja
sub
mov
pushf
idivl
xchg
add
push
push
out
jmp
and
cltd
inc
mov
xchg
push
cmpl
sbb
inc
test
out
jge
jmp
sahf
and
adc
sub
pop
call
mov
mov
xor
cwtl
push
xchg
jns
test
fsubrs
push
and
or
push
aas
and
dec
fstps
xor
mov
sbb
jo
testl
jmp
sbb
outsb
nop
mulb
cmpsl
jmp
mov
ja
inc
sti
movsb
mov
mov
mov
pop
js
inc
cli
sbb
popf
mov
inc
mov
sahf
inc
fnstsw
or
cmp
jo
cld
lods
movsl
jnp
jp
cmc
adc
test
lahf
jnp
xor
xchg
test
and
enter
fisttpll
outsb
rorl
enter
dec
sbb
inc
push
mov
sub
cmp
sub
jecxz
call
and
xlat
push
nop
std
mov
jbe
push
mov
xor
cwtl
mov
xchg
enter
and
shll
nop
movsl
push
mov
bound
push
iret
mov
icebp
in
frstor
jae
movsl
push
hlt
daa
adc
test
pop
mov
dec
inc
sub
add
mov
jl
jae
aam
aad
sub
cmp
add
or
jl
xchg
in
pop
test
scas
pop
cld
adc
jno
mov
pop
pop
pop
push
push
mov
lcall
sub
xor
js
outsl
push
inc
inc
inc
into
gs
repz
mov
and
xchg
int
test
mul
sbb
jmp
and
pop
call
xor
or
xchg
push
aas
decb
sub
orl
frstor
cmpl
inc
add
add
adc
stos
sub
subb
pop
in
push
jp
jl
jge
outsb
jnp
mov
jge
inc
dec
jns
sbb
cs
jo
scas
test
xchg
cmpsb
test
pop
cmp
cmp
push
sbb
jae
lds
test
shl
push
pop
das
sbb
inc
cmp
inc
scas
xor
mov
std
cltd
or
sbb
add
in
jle
daa
push
mov
mov
out
sbb
cs
stos
mov
inc
fs
push
dec
or
sub
cltd
sbb
or
sar
outsl
jae
sbb
shll
test
or
add
test
out
les
add
adc
stos
push
lahf
inc
sti
shl
jno
dec
or
fwait
push
jns
sarb
test
addr16
push
cmp
ds
mov
push
out
fptan
imul
mov
call
sbb
fildl
stc
pop
jmp
pop
lods
mov
dec
test
fidivs
leave
std
sti
inc
push
push
pop
scas
sbb
lea
daa
jne
mov
lcall
aaa
imul
arpl
lods
cmc
cmpsb
aas
test
cmc
lcall
xchg
jl
scas
data16
in
outsb
sub
xchg
rolb
in
xchg
jno
push
mov
cmc
push
xchg
adc
repnz
outsl
xchg
adc
andl
mov
pusha
arpl
out
xor
adc
xchg
movsl
cwtl
dec
mov
and
leave
daa
and
xchg
mov
xor
loopne
and
pop
das
xor
insb
add
loop
dec
test
jmp
inc
loope
dec
stc
sub
mov
int3
push
jg
inc
icebp
scas
mov
loopne
sub
ss
pop
adc
jmp
or
sbb
cmpsb
nop
jle
ljmp
sbb
xor
aaa
call
mov
mov
das
out
mov
rcr
loope
and
addr16
ljmp
lods
and
ljmp
mov
call
xor
js
and
mov
jle
adc
std
xor
aad
ss
push
dec
push
mov
adc
movsl
les
cli
pop
rorb
fucomp
jp
jns
filds
jp
jbe
pop
jb
mov
push
xchg
je
jb
jns
pop
sbb
arpl
ja
imul
pushf
fdivr
stc
rclb
inc
pop
scas
jge
jg
xchg
jne
out
imull
dec
and
lods
loop
adc
mov
popf
sarl
rorl
xor
enter
dec
xor
movsl
fyl2x
sbb
loop
sub
jbe
jo
push
stc
pusha
inc
sbbl
mov
and
lcall
loopne
fistpll
xor
sbb
js
dec
mov
or
lds
movsl
mov
scas
imul
add
push
sub
arpl
pop
mov
out
out
push
jle
mov
ds
inc
test
sub
inc
inc
mov
cmc
das
push
aad
mov
add
or
jge
lret
pushf
sub
je
insl
jmp
push
shll
js
rcr
int3
jmp
call
icebp
out
test
call
out
pop
pop
adc
fldenv
lcall
dec
sbb
xor
dec
stc
aad
jp
jge
add
ja
mov
jl
int
cmpsl
imul
add
jbe
stos
mov
sub
jae
cmp
mov
addr16
jb
addr16
sub
loopne
cmp
cmp
stos
lret
xor
xchg
scas
call
inc
jmp
and
popf
adc
imul
add
leave
xor
cmp
loopne
inc
xor
lock
dec
data16
popa
xor
jg
lods
sbb
and
movsb
hlt
xchg
xchg
out
into
sbb
shrb
xrelease
or
subb
sahf
push
jge
xor
jle
jb
jmp
dec
sti
mov
jl
mov
jg
inc
push
ds
sbb
lods
stc
stos
sbb
jge
cmp
pop
jb
fxam
aaa
out
jno
fnstenv
pop
ja
adc
or
fwait
mov
jne
cmp
mov
add
sarl
jnp
cmpsl
inc
rorb
pop
fcomps
xchg
les
pop
aam
movsb
dec
adc
and
jno
mov
into
lahf
mov
les
and
fxch
mov
jge
data16
cld
clc
cld
pminub
mov
add
mov
insb
mov
add
test
pop
lock
pop
les
repnz
stc
loop
in
mov
lea
inc
push
xchg
push
inc
and
scas
pop
xchg
mov
mov
cmp
xor
je
ret
mov
pop
stos
fldcw
pop
shl
icebp
aas
push
xchg
jmp
mov
pop
xchg
mov
xchg
aaa
sahf
movsl
mulb
dec
push
mov
sub
leave
push
out
aaa
clc
repnz
or
ss
std
incb
sbb
sub
xorb
mov
jge
je
cli
fs
mov
jl
jp
adcl
lcall
sbb
les
cltd
dec
adc
int
scas
jle
and
test
jne
mov
call
xor
mov
jmp
dec
scas
jg
xchg
jg
xor
push
mov
test
push
cmp
lahf
sub
scas
jmp
mov
cmp
sub
fsincos
dec
lods
cmp
arpl
outsb
popa
test
mov
in
test
lret
clc
cs
push
loope
or
cmpsb
jnp
inc
inc
test
sahf
stc
xchg
shll
ret
movl
cmp
jnp
out
sub
mov
fsub
push
scas
inc
iret
fcomps
in
out
sub
cmp
push
mov
mov
push
pop
sahf
stos
test
mov
sbb
movd
ret
xchg
dec
das
movsb
adc
and
inc
xor
movsl
imul
loope
sti
enter
xchg
inc
sub
add
sbb
fwait
xchg
dec
sahf
out
lret
in
icebp
mov
mov
out
daa
adc
mov
lret
adcb
xor
movsl
mov
dec
inc
test
lcall
in
loope
jmp
decb
push
bound
dec
mov
jcxz
ljmp
pop
pop
aaa
and
das
cmp
jb
shr
scas
mov
pop
dec
adcb
add
push
clc
push
mov
fmulp
cwtl
outsb
jecxz
or
sbb
insl
mov
lahf
pop
xchg
fstp
pop
xor
adc
jo
add
inc
push
cmp
cmp
cmp
fsubrs
jge
in
fstps
out
scas
mov
push
mov
push
inc
push
or
test
or
push
mov
pop
mov
xchg
inc
sub
fwait
popf
add
inc
popa
iret
incb
inc
imul
dec
mov
leave
push
in
int
cmc
and
xor
jl
scas
pop
pop
lds
lcall
xchg
pop
shrl
xchg
lock
loop
xchg
add
pop
and
lock
cwtl
repnz
scas
stos
outsb
mov
push
enter
jmp
fisubrl
mov
mov
lods
ficomps
pop
out
sub
mov
repnz
push
push
mov
mov
sub
or
jbe
cmp
cltd
daa
xchg
push
push
les
popf
fs
jmp
add
aam
andl
out
movl
scas
add
and
jns
ss
in
scas
xchg
xchg
test
lcall
in
icebp
mov
lret
pushf
mov
in
aaa
fwait
test
sub
cmpsl
push
and
adc
cmp
test
cld
xor
xlat
stc
cld
pusha
inc
jbe,pt
adcb
orl
sbbl
inc
push
out
add
stos
xor
divb
adc
pop
push
stc
xchg
out
jns
int
and
aas
xchg
ficompl
fisubrl
xor
push
repz
fistpll
lods
outsl
push
cmp
cmpl
punpckldq
scas
icebp
stos
mov
das
dec
jnp
movsl
dec
mov
aam
lods
fsub
imul
jle
dec
sbb
xor
dec
dec
mov
stos
or
ret
sub
sub
repz
jne
sbb
xor
push
rolb
addl
mov
adc
push
cmc
add
and
cmp
cmp
jnp
mov
sub
mov
push
xchg
or
pushl
loop
idivb
into
sbb
mov
sub
arpl
adc
add
push
scas
pop
divb
push
sub
xor
fistpll
std
jge
xchg
or
push
inc
lds
xor
push
mov
addr16
pop
mov
aam
inc
adc
int
sbbb
scas
int3
mov
push
std
sbb
ss
and
or
jp
mov
xchg
test
cltd
cs
jne
jbe
and
cmp
popf
fsubs
xlat
addl
push
adc
mov
inc
or
ret
cmp
int3
lret
in
sbb
pop
roll
xor
iret
jp
cli
fwait
sbb
jge
shlb
ljmp
xchg
or
std
add
mov
adc
xor
enter
mov
push
xchg
out
scas
divb
addr16
imul
ret
in
stos
push
std
cwtl
push
xchg
ljmp
divl
xchg
cmc
cs
push
jp
cmp
lods
mov
icebp
adc
stc
jo
sbb
sub
or
les
aam
outsb
and
pop
cmpsl
dec
icebp
loope
orb
cmc
push
push
int3
mov
xlat
pop
mov
in
dec
aad
out
mov
mov
pushf
jmp
popf
xor
inc
loop
repnz
xchg
adc
inc
rcll
jb
adcb
add
push
rolb
jae
arpl
xchg
adc
inc
rcll
jb
adcb
add
push
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jb
adcb
pop
mov
push
rolb
jae
mov
mov
fidivrl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
ret
sbb
repz
xlat
cs
dec
lock
scas
arpl
push
in
and
xor
ret
sbb
repz
sbbl
mov
popf
push
leave
arpl
int
fcoml
in
and
xor
add
xor
addl
push
lea
xadd
leave
jae
push
nop
ja
inc
xchg
xor
sbb
pop
inc
inc
mov
push
jbe
gs
arpl
mov
test
cli
or
repnz
insb
popf
scas
mov
inc
bound
push
arpl
cwtl
add
jo
adc
add
add
pop
sbb
xor
inc
mov
add
xor
cmp
ror
loop
out
orb
dec
jge
mov
popf
loope
dec
push
mov
fstl
in
pop
loop
je
dec
push
sbb
pop
insl
in
push
bound
lahf
mov
push
pusha
and
sub
mov
lock
nop
lea
ss
bound
addr16
out
ss
xor
ret
sbb
repz
addl
mov
test
arpl
in
and
jne
scas
js
dec
movsl
pop
mov
in
xor
outsl
adc
stc
das
popf
cmp
or
mov
push
or
jecxz
movsb
cmp
xor
popl
popf
aas
call
insb
scas
jl
push
std
pop
fs
das
cmpsl
dec
xchg
cmp
xchg
insl
mov
popf
push
lods
arpl
adc
and
xor
jecxz
repz
sbbl
mov
popf
push
lods
arpl
adc
and
xor
adc
bound
insl
in
int
aaa
sbb
jnp
out
daa
dec
and
sub
mov
or
adc
aam
xchg
adc
push
ja
adc
xchg
mov
or
cltd
aas
add
sbb
lret
das
popa
iret
ljmp
xchg
mov
insl
push
rorl
mov
adc
push
push
push
and
dec
mov
and
or
jo
jnp
jno
push
dec
pop
std
push
cmp
fchs
test
add
jo
mov
cli
loope
insl
fdivl
sub
scas
adc
hlt
icebp
push
and
mov
int3
repz
imul
mov
pop
mov
mov
ss
dec
adc
xor
test
scas
inc
pusha
and
mov
dec
cmc
test
mov
adc
xchg
mov
or
outsb
push
pusha
xor
dec
xor
push
popf
das
push
aaa
shlb
cmc
add
inc
fistl
mov
popf
jle
cmp
push
pop
hlt
cmc
mov
std
pop
add
outsb
push
pop
or
movsb
jecxz
sub
push
mov
mov
mov
iret
imul
fnstcw
lea
scas
dec
lea
jnp
mov
enter
xchg
sub
sub
negl
adc
cwtl
mov
bound
sbb
add
stos
out
adc
or
cmp
shlb
inc
fwait
mov
dec
cltd
or
jg
sub
mov
adc
push
icebp
pop
inc
mov
movsb
jle
or
push
lea
out
push
sahf
negl
pop
mov
push
mov
jmp
xlat
mov
mov
out
ss
iret
fwait
xor
jge
data16
movsl
nop
push
pop
or
pop
mov
adc
das
movsb
sbb
pop
jecxz
fld
mov
ret
call
and
ljmp
mov
pop
jo
adc
out
dec
out
sbb
mov
leave
push
mov
pop
and
jno
cmp
mov
push
or
cmpsb
mov
arpl
stc
cmp
fnstsw
shrl
cmp
test
je
fisttpl
out
dec
incl
rorb
sbbb
jge
repnz
sti
cmpsb
push
sbb
jmp
insl
push
jecxz,pt
dec
dec
es
dec
das
fisubrs
cltd
gs
mov
test
and
div
movsl
xor
adc
sub
jmp
jp
inc
or
add
jne
push
sub
pop
push
sub
push
pusha
sub
test
mov
scas
sbb
cmpl
xchg
loopne
add
adc
push
leave
test
in
mov
js
mov
adc
stos
push
jne
inc
call
sbb
subl
int3
pop
jg
mov
adc
iret
dec
jb
pop
fdivl
dec
or
jb
xor
mov
out
pop
scas
icebp
dec
add
stos
jae
pusha
mov
mov
call
enter
pop
push
lret
xchg
cwtl
inc
cmp
sbb
jle
sub
fdivrp
das
adc
cmp
mov
test
in
rclb
xchg
inc
push
dec
dec
ja
aam
cmp
sarb
test
fs
stos
mov
and
push
mov
sarb
aad
inc
pop
adc
dec
jle
test
sbb
mov
adc
cmc
cmp
push
imul
inc
sub
cltd
clc
sbb
std
mov
dec
jno
or
pop
or
sub
add
ds
push
ds
pop
mov
enter
and
leave
movsb
rcrl
and
mov
add
dec
repnz
icebp
xchg
dec
pop
push
ret
mov
sbb
sbb
cmc
add
pop
pop
int3
lret
and
std
xor
cmp
jmp
loopne
and
jmp
or
pop
jl
jle
cmpsl
push
rcrb
and
cltd
jle
pop
imul
sbb
and
arpl
sub
rcrb
rcrl
jge
jae
push
lahf
test
shlb
in
ficompl
adc
cld
and
xor
jp
and
test
in
daa
push
cwtl
dec
or
mov
sahf
in
xor
mov
fdivrl
push
popf
ljmp
arpl
mov
mov
aas
fwait
and
pop
aaa
inc
sarl
adc
cmpl
or
sahf
adc
xchg
mov
aad
sbb
stc
test
lcall
fsubl
insl
ja
pop
stos
mov
or
nop
cmp
movsb
push
add
popf
jmp
mov
jle
inc
icebp
imul
sahf
subb
sub
cmpsb
mov
into
push
popa
adc
fxch
int
js
insb
insl
shlb
sub
in
call
inc
imul
mov
jo
push
es
iret
aas
or
lret
dec
testl
lods
add
and
adc
mov
mov
test
fcomi
sub
mov
mov
push
add
mov
jge
xor
fidivrl
in
xor
sbb
es
fucomi
xchg
loopne
es
pop
mov
leave
ds
dec
cmp
cli
adc
stos
inc
int
mov
lret
xor
push
data16
clc
add
lcall
sti
imul
dec
pop
mov
outsl
pop
mov
pop
lock
add
dec
fs
jg
xchg
filds
push
lret
push
sub
sub
xor
cmp
cmp
and
fisubl
or
cli
xor
adcb
mov
mov
xlat
adc
sbb
cmp
mov
imul
jbe
lret
stc
jae
adc
fistl
push
mov
cmp
adc
mov
std
xchg
idivb
jb
cmpsb
mov
lods
ret
pop
lods
cmpsl
stc
mov
mov
jge
sub
ljmp
cld
fwait
lock
push
pop
and
and
bound
sti
xchg
jecxz
stos
add
jmp
xchg
ljmp
inc
leave
ret
sarb
xor
fldln2
cmp
insl
jbe
mov
mov
mov
xchg
mov
and
mov
jns
push
sar
mov
popa
or
xorl
repz
mov
dec
test
out
pop
sahf
out
inc
cltd
push
arpl
cwtl
mov
stos
xor
jle
and
orl
imul
xor
push
repz
ss
adc
sbb
scas
add
dec
ret
test
fsubrs
outsl
sub
fst
mov
test
sahf
out
test
fistl
xchg
popa
mov
and
or
lods
sub
mov
and
insb
stos
cmp
jno
push
push
pop
adc
fcomp
adc
xchg
or
loopne
pop
rcr
rcl
cmp
arpl
add
mov
inc
sub
xor
jl
test
loop
dec
or
arpl
repz
mov
adc
kxorw
cld
or
push
bound
test
mov
sub
test
fldt
xchg
jmp
adc
and
xor
xor
rcrb
push
mov
mov
mov
sbb
or
dec
roll
les
sar
xor
cld
cmpsb
jae
call
je
add
add
jl
test
mov
cli
sbb
inc
in
inc
and
pop
mov
fisubrl
lcall
jbe
inc
int3
push
fldt
cmpsl
pop
pop
leave
pop
sbb
leave
jp
xor
dec
mov
cmp
add
outsb
nop
jbe
in
jb
inc
xor
inc
pop
jmp
xchg
in
mov
push
mov
and
adc
or
sbbb
popf
add
sti
xchg
and
data16
cwtl
xlat
test
mov
jo
mov
loop
xchg
dec
mov
cmp
cwtl
rcrl
iret
dec
das
push
test
pop
xchg
aas
mov
lods
jns
jg
adc
adc
ljmp
movsl
mov
mov
lea
nop
dec
dec
cmp
sbb
std
jbe
arpl
out
pusha
push
fs
mov
mov
cmp
in
insl
clc
std
mov
rcrb
inc
leave
adc
daa
scas
test
call
enter
jg
sti
push
or
enter
inc
mov
pop
les
aad
pop
mov
push
push
xchg
jne
filds
add
fadds
fidivrs
sbb
mov
or
sbb
lret
fisubs
cmc
aad
sub
aaa
add
aam
iret
cmp
mov
clc
stos
or
xor
je
loop
xor
sub
lods
inc
and
push
movsl
iret
cmp
imul
pop
aas
sbb
into
sbbb
xor
or
and
push
js
std
jbe
addl
sbb
add
rolb
jg
adc
push
rol
xor
cmp
in
dec
push
repz
mov
fcoms
mov
mov
pop
imul
cld
push
imul
cmp
addb
cmpsl
loopne
addr16
cli
repz
sub
mov
testb
imul
outsl
jle
jno
xor
imul
cmp
and
sbb
mov
sub
int3
jb
out
es
call
xor
stos
loopne
jl
popf
add
fadd
cmpsl
adc
nop
fists
stos
scas
push
pop
inc
push
cmp
mov
repz
js
mov
lret
add
dec
pop
cmp
sbb
pusha
and
pop
mov
or
sbb
fcomps
call
in
fidivl
inc
inc
lcall
scas
mov
or
ficompl
adc
and
shrb
pop
mov
out
mov
hlt
scas
fmul
push
das
inc
ds
inc
jmp
xchg
jne
or
ja
ret
fcoms
mov
arpl
jae
and
shlb
xor
loope
mov
and
jle
and
out
imul
loope
sarl
repnz
popa
and
mov
test
push
pop
std
jecxz
fidivrl
fcompl
jg
imulb
loop
mov
flds
cli
sahf
xor
sbb
xchg
cmp
push
or
mov
sub
jns
pusha
in
adc
orl
sbbl
mov
xchg
sub
ja
lcall
orl
dec
daa
mov
xchg
movsb
xor
adc
dec
xchg
shll
sti
divb
mov
dec
test
inc
adc
xor
movsl
adc
clc
mov
sbb
pop
sbb
enter
insl
pop
loopne
out
mov
jecxz
lret
mov
in
mov
mov
arpl
inc
push
jge
scas
mov
fdivp
mov
push
sbb
cld
data16
out
add
hlt
sub
mov
cmp
lods
cmp
sbbl
ret
push
dec
mov
add
sahf
pop
addl
pop
cmp
repnz
pop
push
loope
dec
addl
sti
push
fwait
daa
in
shl
mov
and
mov
inc
jmp
repnz
test
xchg
into
sbb
in
dec
sub
xchg
fistl
push
lods
mov
xchg
nop
stos
popf
xor
and
sbb
push
add
xor
xchg
clc
es
push
push
push
stos
loopne
cmp
lret
pusha
cmovp
hlt
jmp
int
or
dec
pop
inc
xchg
pop
std
rolb
insb
dec
xchg
dec
xchg
addr16
cmp
mov
ljmp
sahf
inc
dec
and
sub
test
cmp
shll
xor
les
dec
ret
bound
gs
cli
inc
xchg
and
in
jno
inc
jg
sbb
mov
sub
mov
movsl
sar
jge
popa
addr16
loope
test
xor
inc
xchg
push
cmp
cwtl
lds
into
mulb
pushf
xchg
aas
mov
fs
cmp
outsb
push
mov
scas
loop
test
push
mov
nop
cs
add
xor
daa
in
pop
and
xchg
push
insl
mov
jns
sbb
mov
push
push
lods
popf
mov
jp
insb
xchg
cmp
loop
leave
jmp
mov
sub
inc
cmp
lret
or
cmc
movsb
dec
adcl
sbb
push
scas
ret
movsb
mov
add
sub
rorb
jnp
leave
sub
in
fldl
pusha
fbld
enter
mov
and
scas
dec
pop
dec
mov
jle
pop
adc
mov
rcrw
adc
jo
inc
cmp
or
repz
pop
orl
push
pop
jecxz
in
arpl
int3
or
lds
fisubs
mov
dec
cwtl
mov
mov
dec
les
inc
mov
xchg
jle
add
jae
add
mov
imul
in
int
pop
fists
arpl
jno
ret
adc
sbb
pop
inc
stos
add
and
lods
icebp
scas
testb
pop
cvtps2pd
fisubs
or
shl
push
and
shr
mov
jns
or
mov
sbbb
faddp
outsl
test
sub
ljmp
rcrb
insl
clc
dec
out
enter
sbb
fildl
jg
out
push
inc
cmp
push
out
add
dec
push
fldt
xchg
adcb
aad
div
mov
cmp
adcb
movsb
mov
int3
add
out
cmpsl
adc
std
cmpsl
ficompl
and
addl
mov
arpl
stos
jnp
outsb
mov
cld
jae
sbb
and
imul
stc
lods
cmc
pop
hlt
push
dec
loop,pt
divl
cwtl
test
push
daa
sub
adc
out
ja
fidivs
lea
push
push
mov
dec
into
movsl
jl
fldt
or
dec
arpl
dec
fistpll
mov
test
fmulp
mov
test
cmc
and
sbb
xchg
mov
sbb
test
test
cmp
inc
or
mov
mov
mov
neg
and
and
push
sbb
rorb
jl
ret
out
push
adc
adc
les
mov
inc
xchg
sbb
pusha
push
test
cld
sub
repnz
sbb
cmc
cmpsb
aaa
mov
aad
jb
push
sbb
cli
cwtl
cmp
ret
inc
mov
mov
cltd
jne
xchg
repz
test
in
lods
xor
cmp
bound
aam
push
test
sbb
xchg
outsb
cmp
inc
lcall
add
push
leave
je
cs
sbb
push
cmp
lods
push
push
push
orb
mov
cs
popf
jl
mov
and
push
add
repnz
dec
orl
mov
psadbw
daa
add
cmp
or
lahf
movsl
cld
jmp
je
dec
shll
cmp
scas
jmp
flds
movsl
decl
sbb
inc
call
sub
mov
dec
mov
hlt
ret
mov
lods
mov
xor
fwait
es
inc
adc
out
sbbl
xchg
outsb
or
jns
mov
adc
or
and
outsl
rcll
mov
das
inc
sbbl
out
fmulp
jmp
and
add
xlat
out
jo
js
cmp
in
rorl
or
stos
and
mov
mov
loopne
aam
out
pop
mov
dec
or
push
jg
aad
dec
fwait
add
loop
dec
xor
sbb
mov
xchg
mov
outsl
dec
lcall
loopne
jne
add
pop
or
mov
xchg
and
mov
shl
dec
xchg
add
mov
pop
push
mov
outsl
sbb
jl
cmp
adc
cmp
and
mov
mov
mov
jg
fistpll
lret
xor
icebp
gs
mov
out
sbb
ficompl
cmpsl
lea
cmpsb
xor
cld
and
xchg
sbb
nop
mov
xchg
push
cs
jecxz
mov
mov
test
ljmp
rcrl
or
mov
pop
loope
enter
pop
sbb
mov
stos
and
add
xor
mov
dec
lcall
imul
add
in
mov
xchg
mov
cltd
xchg
push
pop
adc
loopne
das
fbld
xchg
js
loop
test
jo
repnz
loopne
inc
or
jle
push
jnp
dec
pop
jg
cltd
inc
jno
jb
inc
mov
aad
or
mov
test
insl
and
pop
inc
mov
adc
xchg
outsb
adc
testb
push
test
mov
jle
add
sbb
cmp
rcrb
nop
fnsave
leave
push
js
dec
and
adc
cmp
mov
mov
xchg
aam
repnz
pop
or
mov
mov
adc
cmpsb
xor
in
out
jl
jp
push
ret
pusha
xchg
pop
pop
add
fidivl
dec
gs
loopne
int
js
insb
lds
xchg
jp
sub
outsl
or
mov
mov
fiadds
xchg
jecxz
mov
movsb
lea
mov
jno
dec
ret
xchg
and
aam
or
add
jp
adc
push
clc
jbe
sti
idivl
sahf
and
sub
in
mov
inc
insl
repnz
pop
dec
loopne
sbb
xor
jg
cmp
push
movsl
imul
push
push
lcall
and
sbb
movsl
out
sbbb
inc
xor
aam
xor
lea
mov
or
adcb
pop
xchg
add
mov
std
cmp
push
rcl
in
mov
rclb
stos
xlat
das
or
cmp
ss
imul
mov
mov
and
add
push
out
dec
subl
dec
cmp
jmp
es
cmp
jge
jb
lock
mov
out
push
loope
sbb
fs
pop
lock
and
ja
call
idivb
cwtl
sub
sahf
xor
pusha
jne
jne
cmp
dec
sub
xchg
pop
sub
or
xchg
sub
push
fwait
jle
mov
addr16
sahf
mov
mov
inc
dec
shr
or
shrb
mov
shlb
dec
jae
mov
arpl
js
mov
mov
xor
jne
mov
iret
push
push
cmp
adc
js
mov
rorb
mov
insb
lcall
xchg
fs
icebp
ss
pusha
jae
imul
inc
bound
xor
js
aam
xor
scas
out
cmp
or
insb
add
daa
or
sbb
push
les
imul
icebp
xchg
test
cmp
mov
lds
xchg
addr16
pop
movsl
pop
push
stos
imul
jno
xor
xor
out
pushf
inc
cwtl
fwait
sarl
les
movsb
mov
dec
aaa
adc
jmp
out
pop
adc
xchg
mull
pop
movsb
add
pushf
gs
add
lcall
jp
xchg
cmp
sbb
ja
idivb
gs
mov
cmp
cli
push
cs
pop
push
les
repz
pop
test
add
cs
je
or
ret
jne
pop
sbb
enter
mov
pusha
sbb
aas
mov
xor
and
and
dec
lea
ret
pop
lahf
xchg
sub
test
jo
fidivs
pop
or
cli
scas
mov
popf
adc
mov
stos
pushf
xor
pop
inc
jb
imul
fwait
xchg
jge
sarb
enter
cli
xchg
dec
jp
xchg
iret
testl
movsb
sbb
imul
cmp
cmpsl
hlt
lods
cmc
pop
outsl
mov
push
stos
sbb
pop
out
pop
dec
add
outsb
mov
jb
scas
xchg
inc
cmp
nop
cmp
in
sahf
pop
popa
outsb
sti
adc
stos
fldenv
pop
mov
js
lret
fimull
loop
sahf
js
add
xchg
add
xor
pop
xor
and
ljmp
lock
lods
mov
out
sti
ljmp
push
mov
in
xchg
xchg
pop
push
stos
inc
call
inc
inc
add
inc
decb
data16
cld
jno
mov
aam
xor
pop
dec
xchg
gs
or
call
cmpsb
sahf
pop
in
inc
scas
insl
xor
cmp
and
inc
scas
and
jp
sti
dec
jns
pop
mov
xor
or
pop
pushf
and
sbb
pop
and
mov
jno
adc
pop
xor
addr16
xor
imul
lret
int3
or
push
xlat
fisttpl
lret
pop
xchg
jmp
fs
adc
rorl
cmp
xchg
insl
mov
popf
push
lods
arpl
adc
and
xor
jecxz
repz
sbbl
mov
popf
push
lods
arpl
adc
and
xor
jecxz
repnz
sbbl
mov
popf
push
test
add
adc
and
xor
ret
sub
sbb
cmp
adc
and
dec
jb
stc
pop
arpl
in
adc
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
dec
xchg
pop
cs
adcl
call
adc
arpl
push
cwtl
mov
dec
xchg
pop
jecxz
repz
or
sbb
call
adc
mov
lret
mov
dec
xchg
pop
jecxz
repz
or
sbb
inc
adc
outsl
lods
adc
arpl
sbb
ss
cmp
daa
andl
or
out
js
enter
inc
jbe
lock
xor
adcb
ds
fildll
insb
cmpsl
sbb
repz
cmp
add
push
pushf
fnsave
adc
fmulp
repz
xor
movsl
xchg
dec
dec
hlt
and
shll
es
adc
test
cmp
shl
scas
xor
mov
adc
push
xchg
insb
cmpsl
mov
sbb
gs
xchg
outsb
sbb
mov
push
adc
inc
sbb
dec
jge
clc
je
ret
clc
cld
fdivrs
fnstenv
mov
rcrl
orl
jecxz
repz
or
sbb
call
adc
arpl
push
icebp
loop
js
and
xor
inc
cmpl
and
imul
mov
jp
dec
ljmp
jecxz
mov
mov
nop
bound
lret
sbb
enter
sub
and
cmp
ret
or
sbb
call
adc
arpl
push
cwtl
mov
dec
xchg
pop
jecxz
repz
or
sbb
call
adc
arpl
push
cwtl
mov
cli
mov
leave
jb
fdivs
sub
mov
imul
adc
push
arpl
add
icebp
aas
lret
in
sahf
arpl
add
mov
arpl
push
dec
fstl
pop
push
rcl
and
xor
scas
divl
fidivs
add
lret
mul
or
inc
mov
jae
xchg
cwtl
repnz
in
adc
mov
aam
push
push
rcl
in
sub
sbb
fwait
or
jmp
cli
cs
lock
push
iret
or
adc
stos
mov
or
sbb
and
fsubrs
dec
mov
sbb
inc
fisubs
jmp
push
out
pusha
mov
je
mov
rcl
lods
pop
mov
jb
inc
push
jbe
lods
cmp
or
dec
sbbl
mov
cli
scas
mov
dec
data16
push
sub
outsl
rorl
repnz
pop
repnz
in
jp
rolb
jne
ja
or
mov
movsb
cmp
push
pop
nop
xchg
popa
pop
cmp
sub
cmp
adc
lcall
in
cmp
push
mov
repz
in
adc
mov
je
and
xor
jo
out
mov
push
fildl
adc
ljmp
pop
mov
nop
xchg
jne
in
dec
dec
lahf
mov
enter
les
in
stos
insb
dec
lock
fld
out
nop
adc
test
pop
lods
pop
mov
fistpl
pop
or
xor
jp
cld
mov
cmpb
andl
xor
sbb
adc
std
jecxz
inc
mov
jo
push
pop
inc
mov
xor
cmpsb
dec
int3
push
mov
jnp
aas
push
adc
daa
loope
cmp
pop
test
lret
push
xchg
and
out
sbb
xchg
cmpsl
push
fsubl
test
pushl
int3
rcl
addr16
fnstcw
mov
daa
jle
xchg
out
xchg
push
je
movsl
insl
sub
jecxz
push
mov
xor
xchg
test
mov
movsl
mov
sub
notb
xchg
xor
cs
bound
dec
mov
popa
push
pop
pop
outsl
mov
adc
in
je
push
cmpsb
ret
push
inc
fdiv
sbb
repnz
pop
pop
mov
inc
xchg
mov
sbb
popa
movl
icebp
add
pop
lods
in
dec
nop
and
push
push
mov
loopne
ret
cli
lret
dec
jecxz
andl
shr
ds
out
lret
pop
clc
fiaddl
les
cmp
and
dec
lret
xchg
mov
test
or
xlat
int3
fadd
xchg
xor
testb
inc
inc
push
mov
and
sub
and
addb
dec
adc
fsubl
test
jbe
movsb
add
gs
adcl
popf
test
cltd
jne
push
xchg
mov
push
or
fstpt
cmp
jb
hlt
test
arpl
push
mov
mov
aam
ja
fmull
or
add
cld
mov
mov
pop
mov
arpl
cli
jle
dec
pop
dec
out
testb
sbb
hlt
insb
sub
fwait
push
cmpb
leave
subb
cli
pop
daa
mov
mov
es
jl
outsb
jl
popa
ljmp
daa
fildl
inc
cmc
vandnps
sbb
pop
scas
rcrl
inc
in
out
xchg
stc
arpl
test
jno
adc
dec
filds
push
test
fsts
xchg
repz
stc
pop
push
in
and
mov
es
jnp
xor
sbb
push
cmc
jp
movsl
imul
and
and
dec
je
mov
popa
xor
shrb
dec
xchg
pop
mov
ja
fistps
mov
mov
xor
ror
mov
fdivrl
insl
mov
xlat
lds
aad
cs
mov
adc
xor
jbe
dec
testl
js
out
in
stos
hlt
lret
pop
in
mov
dec
jle
cmpsl
jge
test
pop
jmp
int3
lock
sub
sub
and
cli
sbb
adc
out
xchg
xor
xchg
dec
fcomps
adc
push
cmp
sahf
mov
mov
jp
jg
and
out
pushf
popa
sub
or
sbb
or
xor
add
fisttps
cmp
and
or
cmp
arpl
ffreep
mov
aas
out
lds
mov
lret
sbb
in
or
stc
cli
adc
cmp
in
mov
cmp
out
jge
xor
in
add
jnp
ss
fmuls
sub
mov
push
sub
pop
in
rclb
scas
push
insl
pop
cmp
outsl
or
sahf
add
xlat
inc
js
sbb
mov
js
cmpsl
xor
jae
in
lods
jb
or
dec
cmp
mov
rcr
jp
inc
cld
icebp
inc
addr16
loopne
and
dec
push
js
inc
mov
ficoms
jl
fsubs
push
pop
and
add
jne
cli
xor
int
xchg
push
sub
outsb
outsb
mov
dec
pop
xchg
jp
and
mov
mov
stos
scas
cmp
stos
repnz
inc
and
or
inc
and
push
cmp
fsubl
cmp
inc
test
loope
mov
push
popf
shll
sub
or
jns
and
push
push
xchg
outsb
pop
or
clc
aaa
test
jecxz
stc
aam
movb
mov
jne
sub
and
mov
lahf
add
jno
frstor
fcoms
cmp
imul
sub
push
and
icebp
cld
ret
inc
and
shrb
mov
fisttpll
sub
cmp
adc
inc
aam
divb
jle
ss
outsl
jecxz
jge
push
in
scas
adcb
cltd
inc
mov
pusha
shll
add
mov
dec
popf
test
mov
push
mov
ljmp
test
dec
sbb
pushl
add
js
and
mov
jae
adc
test
insb
out
int3
insb
das
xchg
gs
loope
fnsave
push
lods
dec
je
fwait
sub
pusha
cmpb
dec
xor
cs
test
lret
add
popa
add
push
jno
push
fs
xchg
movsl
inc
lret
inc
sbb
test
ror
mov
cmpsl
sub
loop
loope
inc
xor
imul
xchg
cmp
adc
inc
out
pop
mov
fnsave
jl
in
cmp
and
imul
adc
loopne
jns
mov
mov
aaa
push
gs
mov
ret
cmp
fisubrl
scas
adcb
mov
in
or
add
arpl
dec
add
add
mov
mov
outsl
movsl
in
test
sbb
xor
nop
out
jp
mov
xchg
jb
mov
jp
je
inc
cmp
and
or
pop
fildl
mov
dec
or
and
pushf
sti
mov
imulb
inc
and
cwtl
dec
mov
lods
ret
mov
insb
pop
push
jns
imul
int
jbe
pusha
mov
jae
adc
xor
mov
xchg
icebp
mov
xchg
adc
xlat
enter
mov
cwtl
psubsb
adc
pop
cld
mov
inc
push
inc
scas
dec
sbb
out
xor
mov
mov
sti
jl
jecxz
mov
not
dec
nop
xchg
popf
sbb
jmp
fld
or
ret
out
and
mov
mov
inc
sub
pop
mov
push
jo
mov
add
fwait
mov
jae
sub
movsl
xor
pop
clc
out
divl
ficoml
add
or
jl
push
mov
insl
pop
into
cli
adc
dec
mov
fldl
pop
jmp
test
rcl
flds
sbb
cmp
dec
cld
test
cmpsl
mov
push
into
fwait
mov
sbb
pop
push
jno
ja
and
pop
in
or
loope
mov
mov
add
mov
xchg
std
adcl
flds
inc
hlt
dec
leave
leave
cmp
mov
xchg
std
push
andl
mov
inc
jmp
sbb
cmp
cmp
mov
cmpsl
jg
mov
nop
imul
cmp
adc
bound
outsb
push
fstps
je
sub
fadd
out
or
or
test
shlb
add
insl
fiadds
lahf
xchg
mov
addr16
xchg
dec
push
mov
and
roll
daa
fnstsw
icebp
lret
in
test
aas
lea
subl
dec
xor
int3
rol
fs
mov
cmp
stos
lods
popf
xor
jmp
shrb
inc
insl
andl
enter
lds
push
fcoms
sti
add
loopne
inc
jmp
call
cmp
pop
scas
sar
cmp
push
out
mov
mov
and
jmp
push
pop
or
mov
int
jge
imul
clc
mov
fstpt
or
sahf
pushf
fmul
cmp
push
sbb
adc
out
push
aas
test
cmpsl
pop
xchg
ss
jae
xchg
lock
push
pop
mov
and
gs
cld
push
daa
xor
into
adc
xor
push
xchg
jg
orb
and
cwtl
push
ret
mov
or
pusha
mov
push
cmp
scas
lock
shrb
in
sbb
fmuls
jno
rorb
gs
mov
shrl
insb
inc
sbb
subb
and
adc
jecxz
sbb
mov
test
je
sbb
adc
inc
xchg
jae
iret
enter
ds
aam
stc
push
subb
insb
stc
mov
stc
mov
sub
mov
push
repnz
cli
add
cld
frstor
scas
test
sub
scas
push
cmpsb
out
dec
push
stc
rcrb
adc
mov
aam
nop
daa
or
aam
sbb
aam
cmp
fstpl
popf
sbb
std
out
jge
and
fisubrs
test
push
andps
xchg
icebp
lds
mov
imul
cmp
loope
xor
mov
and
subb
nop
inc
int3
jns
repnz
mov
and
outsl
mov
vmovd
aam
adc
sahf
mov
mov
aam
sti
or
push
mov
xor
lcall
jns
xor
jl
push
mov
mov
inc
into
cmpsl
lahf
arpl
and
cmpsb
es
jo
stc
push
sbb
test
test
sub
shlb
fbld
dec
push
xlat
imul
sub
icebp
inc
xchg
cmp
lret
mov
loop
das
gs
mov
pop
or
mov
mov
testb
jae
es
popl
add
lock
mov
mov
cltd
ds
push
inc
aas
add
loopne
rolb
int
mov
ret
insb
insl
inc
out
pop
mov
fisubrs
addl
xchg
dec
jmp
scas
mov
enter
cmp
pop
sbbb
test
fs
popa
sub
pop
fs
jb
and
cs
out
jo
cltd
mov
rolb
jge
lahf
or
int
jge
add
icebp
test
pusha
add
jmp
cmp
lea
rol
loop
lods
xchg
push
je
jnp
call
daa
fmuls
or
pop
inc
outsb
ljmp
and
adc
push
mov
mov
loopne
add
cmp
inc
or
xchg
mov
jo
sub
clc
jp
call
bnd
ds
aaa
xor
or
pushf
js
cli
push
mov
inc
leave
push
je
jge
lcall
out
test
test
and
enter
xor
in
mov
pop
sub
aam
jmp
xor
sub
addr16
jg
dec
sahf
inc
dec
popl
push
lar
loope
inc
fcoms
jne
pop
xchg
adc
mov
ret
out
out
mov
push
xchg
int3
test
xlat
movsb
dec
fnstsw
stos
sete
mov
pushf
ret
jg
dec
sub
mov
int3
stc
ds
shll
xor
mov
ret
dec
xchg
mov
in
scas
sub
test
jmp
inc
cmp
or
sbb
pop
xor
adc
sub
pop
mov
push
push
push
pushf
jb
call
pop
adc
ret
pop
jae
mov
cld
hlt
rcrb
sahf
hlt
int3
mov
jmp
loopne
pop
movsl
test
dec
pop
dec
aam
in
cli
mov
push
in
or
test
scas
idiv
in
rclb
pop
pop
jge
cmp
and
js
pop
pop
int
icebp
lret
pop
and
insb
in
add
mov
ret
imulb
push
adc
emms
ss
xchg
adc
mov
out
mov
xor
xchg
inc
ret
and
or
adc
popf
pop
sub
mov
popa
and
and
ja
das
pop
loope
lods
ja
daa
shlb
insl
cmp
aaa
pop
insb
cmpsl
lret
inc
call
sub
xchg
fldcw
nop
and
dec
jae
or
je
dec
jbe
jmp
aad
rcrb
imulb
or
add
xor
mov
inc
lahf
aaa
mov
sbb
sete
hlt
inc
xor
xor
fbld
pop
rorb
movsl
cli
cld
dec
frstor
jl
or
stos
cmp
pop
mov
out
and
leave
je
stos
sahf
loop
sub
in
idivb
push
and
mov
cs
cmp
jne
jo
mov
pop
xchg
push
gs
jle
ret
jbe
addl
mov
push
jp
arpl
std
mov
lahf
dec
sub
cmp
cmpsl
mov
call
inc
jg
xor
in
cmp
cmp
push
int3
aaa
push
in
mov
add
aaa
pop
fldenv
jl
fldcw
fidivrs
fidivs
fsubrl
cmp
sarb
xchg
fsubrl
bound
dec
pusha
in
stc
flds
adc
in
cmp
aaa
lock
ja
mov
in
fstpt
pop
loope
or
clc
out
adc
and
mov
mov
popa
mov
inc
mov
clc
mov
in
mov
xlat
rorl
xchg
icebp
xorb
mov
sub
jle
lea
scas
cmc
add
icebp
fcmovne
loopne
pop
call
out
cmp
psraw
jecxz
test
leave
cmp
push
pop
sar
fcmove
adc
jmp
rol
mov
or
xor
pop
sbb
or
pop
adc
adc
sub
lods
or
mov
push
sbb
jne
in
mov
repnz
sbb
mov
lcall
mov
or
gs
mov
push
push
pop
jle
ljmp
stos
jg
bound
adc
jecxz
pop
push
add
clc
lret
cmpsl
mov
mov
sub
insl
leave
je
push
jb
mov
mov
or
dec
jmp
jmp
test
adc
push
jp
mov
movsb
or
repnz
jne
push
xchg
cmp
pushf
and
mov
insb
scas
xchg
mov
shlb
fldl
fcmove
gs
in
jbe
rcr
jle
mov
or
shrb
addr16
fyl2xp1
and
push
gs
jl
jns
lock
cmpb
inc
sahf
movb
call
or
and
jp
outsl
dec
shlb
ljmp
dec
cmpsl
arpl
sbb
ret
jb
mov
jns
imul
inc
add
mov
xor
int
add
push
push
test
push
cli
mov
sbb
pop
dec
pop
and
cmpsl
test
into
mov
xchg
xor
daa
sbb
lods
mov
movsb
inc
outsl
dec
mov
ja
inc
aaa
and
dec
dec
fstl
xor
icebp
ret
jb
adc
mov
xor
cmp
aam
cmp
sbb
call
jge
cmp
xor
cmp
push
iret
sbb
imul
xor
lock
packssdw
fs
arpl
or
inc
or
mov
aad
sbb
in
adc
cmp
scas
enter
outsl
daa
lods
shrl
lods
xchg
fisttpll
js
clc
jb
xchg
mov
mov
bound
fmulp
cmpsb
cmc
inc
and
mov
push
popa
arpl
pop
outsb
mov
lea
add
sbb
es
sbb
pushf
enter
fstps
outsl
push
movsb
pandn
stc
outsb
adc
stc
aad
clc
jl,pn
sub
mov
mov
jge
sub
call
cmp
dec
ja
and
mov
les
mov
push
js
out
call
pop
xchg
mov
fidivrs
bound
or
fwait
cmpl
call
js
mov
sbb
repz
stos
outsl
xchg
sahf
push
dec
mov
or
out
fs
aad
ja
arpl
jl
cmp
fcmovne
aas
or
jp
xor
dec
adc
pop
repnz
movsb
rcr
mov
sub
rcrb
cli
xchg
data16
ret
mov
stc
out
sarb
jns
in
inc
dec
and
lock
lock
leave
jmp
ss
shlb
lret
mov
mov
push
outsb
leave
cmc
aas
daa
std
leave
movsl
xchg
xchg
adc
ds
jecxz
gs
loopne
and
sub
outsl
inc
shl
shll
loope
imul
mov
pop
cmp
fcomi
sbb
adc
stos
add
adc
pop
stos
pop
pop
jae
cld
dec
push
mul
xor
jg
or
and
xchg
inc
sahf
mov
enter
pushw
int
std
push
or
sbb
fimull
in
sub
inc
inc
xor
fidivrl
push
leave
cmp
aaa
int3
std
data16
xlat
xor
loopne
pop
cld
data16
and
js
cmp
mov
sub
jo
test
sahf
xchg
les
mov
xchg
fptan
sub
jne
add
and
jb
add
je
je
sbb
jnp
and
cmpsb
jg
adc
pop
pop
inc
adc
jle
imul
pop
add
imul
adc
adc
xchg
rcr
or
jmp
jge
jg
lret
ret
mov
inc
loopne
inc
insl
mov
jo
mov
vmovntps
dec
add
sbb
pop
mov
push
lds
cmp
arpl
jp,pt
mov
inc
test
jbe
mov
mov
adc
or
loope
aad
aaa
jl
popf
into
stc
cmp
mov
repnz
pop
and
js
lret
pop
leave
fs
or
pop
fmul
adc
mov
or
sbb
push
inc
and
es
push
push
add
sbb
into
jecxz
cmpsl
subb
in
nop
adc
inc
mov
xor
repz
push
mov
das
jle
test
fwait
loop
lret
mov
jecxz
out
cmp
mov
dec
andl
cmpsl
data16
inc
loope
daa
repz
pop
loop
test
das
movsl
push
jnp
adc
mov
idivb
test
int3
fsts
push
bound
add
cmpsb
cmp
cmp
ds
dec
sbb
ds
add
xor
or
enter
orb
lds
aad
sub
lea
mov
adc
xchg
lea
sub
sbb
orl
in
cmpsb
mov
sbb
aam
inc
imul
inc
dec
std
test
orl
sub
inc
pop
inc
sbb
add
inc
push
pop
pop
aam
out
lret
scas
movsb
mov
jmp
jle
adc
loop
adc
push
test
pop
shll
mov
lret
in
dec
movsb
pop
daa
loope
push
les
adc
mov
jbe
les
xor
addr16
movl
icebp
test
inc
mov
lock
sub
sarb
and
inc
repnz
or
xchg
ss
or
ficomps
icebp
lods
je
insl
ret
fs
jae
cmp
addb
jb
inc
sarl
xor
cmpsl
andb
outsb
loopne
hlt
std
in
and
jmp
stos
in
mov
clc
push
pop
scas
push
into
cmc
test
xchg
jo
adc
js
pop
cld
mov
outsb
inc
jne
es
sarb
fs
mov
cmp
lret
or
sbb
test
dec
xchg
pop
jecxz
repz
or
sbb
call
adc
arpl
push
cwtl
mov
dec
xchg
pop
jecxz
repz
or
sbb
call
adc
arpl
push
cwtl
mov
enter
sub
mov
and
clc
add
adc
arpl
push
cwtl
mov
dec
xchg
pop
jecxz
repz
or
sbb
call
adc
xor
addr16
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
