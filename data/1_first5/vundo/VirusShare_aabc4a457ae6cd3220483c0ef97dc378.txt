add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cmp
mov
sub
xor
add
add
add
add
add
pop
add
fadds
test
xor
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
add
inc
add
dec
add
add
repz
add
add
add
add
add
add
add
add
aad
loop
fadds
test
xor
push
add
add
xor
mov
add
add
add
or
xor
push
add
add
add
add
add
add
add
add
fadds
pop
add
add
add
add
aad
loop
fadds
test
xor
mov
cmp
popa
add
add
add
add
add
add
xor
cmp
add
add
add
add
xor
or
aad
adc
fadds
in
add
add
push
in
add
add
add
add
add
xor
hlt
add
add
add
add
add
or
xor
add
lcall
add
add
add
pop
add
xor
test
fildl
das
add
add
add
add
je
or
add
or
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
fiaddl
or
or
mov
add
add
add
cmp
dec
add
add
add
add
stc
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
xor
js
xor
scas
add
add
add
loop
xor
in
add
add
xor
scas
add
add
add
add
add
add
add
or
sbb
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
xor
xor
rolb
or
add
or
inc
add
add
add
arpl
xor
cmp
cmp
rolb
add
add
add
hlt
add
jge
popa
add
add
add
push
add
jo
je
xor
add
add
or
cmp
push
add
add
add
inc
add
add
add
add
cmp
add
add
cmp
push
add
add
add
xor
sub
hlt
add
add
add
mov
or
lcall
add
add
add
add
add
add
add
add
lret
add
outsl
add
add
add
add
add
adc
add
add
push
incb
and
add
add
add
add
or
add
enter
pop
add
xor
inc
add
ja
dec
add
add
add
add
add
fadds
dec
add
add
pop
add
add
add
xor
in
add
add
or
or
add
inc
add
add
add
add
add
add
add
add
add
pop
add
add
xor
in
add
movl
fadds
inc
add
add
jbe
inc
add
add
add
add
push
add
add
mov
sub
scas
add
xor
adc
add
incb
test
leave
add
add
add
add
inc
add
add
add
add
add
add
add
dec
fistpll
out
adc
or
ss
cmp
jns
sar
mov
add
ljmp
fmuls
cld
or
and
gs
sbb
iret
mov
cmc
mov
jp
je
roll
jns
pop
mov
push
fnstsw
cli
iret
lret
pusha
or
lea
inc
and
sub
xchg
lods
or
int
push
mov
mov
scas
cmpxchg
dec
mov
and
inc
inc
loope
or
xchg
insl
adc
repz
ljmp
jecxz
adc
imul
div
mov
mov
fidivl
arpl
adc
jae
mov
xchg
frstpm(287
fisubrl
inc
push
mov
dec
xor
mov
xchg
pop
sahf
sti
imul
nop
movsb
aam
or
xchg
xchg
hlt
repnz
sahf
fbstp
jmp
inc
mov
pop
cmp
mov
out
enter
cmp
test
int3
push
adc
lcall
out
sbb
add
filds
imul
xchg
out
mov
ss
add
mov
mov
out
cmpsl
push
inc
inc
xor
lods
dec
lods
sti
and
inc
pop
cmp
aam
push
add
mov
mov
out
pop
xchg
insl
pop
sub
mov
and
int3
inc
jne
rclb
test
add
icebp
insb
xchg
int
cmpb
push
cmp
inc
outsl
pop
xor
inc
add
cmc
lods
mov
cwtl
cs
loop
stc
ds
ret
push
jo
ja
gs
mov
push
mov
lds
xchg
roll
pushf
and
cmpsb
repnz
orl
pop
sub
xlat
inc
mov
and
hlt
dec
shlb
pushf
insb
test
pop
jnp
test
sahf
pushf
shlb
mov
subb
pop
aas
or
scas
test
xchg
push
lods
pop
insl
cmp
lea
call
pushf
gs
sbb
test
cmpsb
clc
push
inc
inc
rclb
movsl
mov
sti
les
aam
xor
idivl
pop
cli
dec
inc
jno
xchg
cmp
mov
orl
mov
pop
loop
shufps
dec
iret
jnp
xchg
and
mov
dec
mov
lods
adcb
out
jo
scas
adc
sar
push
fistpll
adc
lds
lahf
shll
clc
ret
iret
jl
test
jnp
xchg
or
repnz
mov
push
push
mov
sbb
cmc
dec
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
inc
inc
push
jae
arpl
push
jno
adc
aaa
lahf
jns
out
notl
mov
mov
inc
inc
push
pop
arpl
pop
add
xor
and
mov
not
loop
xchg
mov
mov
push
loope
mov
pop
sub
loopne
fwait
addb
out
inc
cmp
xor
adc
mov
or
xchg
inc
lock
and
pop
cmpsl
jae
inc
mov
cli
cmp
scas
scas
mov
jbe
pop
loop
xchg
mov
pop
out
push
push
xchg
push
mov
mov
dec
inc
fnstcw
cld
adc
test
ret
out
jecxz
cmpl
jnp
lahf
jnp
lret
xchg
jb
and
push
add
int3
das
and
sarb
ret
sub
sbb
ja
shlb
test
cwtl
jp
mov
aaa
repz
repz
xchg
scas
push
lods
push
fiadds
fstps
pushf
int3
lods
push
mov
jp
pop
or
xchg
rol
mov
mov
push
jae
arpl
pop
jnp
xor
test
adc
out
neg
xchg
icebp
cmp
cs
sbb
jl
insl
arpl
and
mov
into
xchg
mov
xchg
repz
rcr
aad
rcrb
sub
cmp
das
add
inc
push
jo
sbb
fwait
movsl
ljmp
jecxz
push
das
add
add
cmovo
and
rol
ret
xlat
repz
notl
cmpsl
mov
push
jae
arpl
pop
add
xor
and
rol
ret
xlat
repz
notl
cmpsl
mov
jg
or
fmulp
aam
mov
mov
adcb
mov
iret
bound
repnz
das
cmp
push
test
jns
pop
jno
mov
and
shll
cli
rorl
add
pusha
jno
stos
push
dec
loope
dec
mov
mulb
ss
and
repz
lret
iret
std
mov
out
out
sti
cmp
call
xor
in
clc
push
nop
mov
xor
frstor
mov
or
add
notb
pop
cmc
xor
roll
jo
pop
cmpsl
mov
push
add
or
mov
jmp
jns
addb
lds
xor
pop
clc
test
ss
dec
cmpsl
int
cmp
push
aad
roll
ja
xor
rorl
mov
out
arpl
loope
and
ret
or
sbb
int3
dec
in
add
sub
push
push
cmp
test
cs
inc
mov
mov
fs
jge
sbb
inc
mov
mov
repnz
inc
lea
daa
popf
js,pt
sub
jle
data16
pop
and
jp
add
pop
mov
pop
and
cmp
sub
mull
cli
test
call
push
push
jge
jae
stos
ffree
push
jae
mov
mov
stos
adc
mov
mov
dec
add
das
mov
push
stos
js
popf
shrl
sub
mov
cmp
push
push
jae
add
and
pop
sbbb
leave
xchg
ret
movsl
movswl
nop
pop
push
or
jbe
xchg
push
and
and
xor
adc
or
out
inc
mov
fwait
lret
pop
pusha
jo
mov
xor
mov
fdivrp
lods
push
cs
lcall
mov
out
loop
ret
scas
push
daa
mov
mov
pushf
mov
in
xor
jg
cmpsb
ror
jle
std
imul
neg
jle
pop
mov
jmp
jecxz
pop
sub
jl
xchg
sbb
push
add
push
movsb
call
stc
arpl
or
adc
mov
popa
xchg
ds
lret
lods
sub
nop
stc
adc
mov
xchg
arpl
xor
fisubrs
pop
das
xor
and
xlat
xor
negb
adc
add
sub
push
cmp
pop
ja
movsb
mov
shr
mov
les
xchg
inc
adc
icebp
pushf
sub
cwtl
aaa
adc
cmc
stc
stos
xchg
inc
es
cmp
lahf
push
mov
iret
or
dec
push
into
lods
inc
jne
xchg
fildl
fwait
idivl
push
andb
xchg
aad
sbb
sub
addb
pop
lods
fstpt
xchg
sub
test
popf
popf
gs
outsb
call
add
or
cmp
aas
and
sti
out
lods
or
sbb
jge
insb
movsb
dec
out
cltd
daa
inc
pop
xchg
pusha
mov
cmovl
add
in
cmc
test
fisubs
cmp
pop
and
sbb
xor
and
jbe
ss
stos
movsb
and
lods
hlt
inc
or
iretw
lret
cmp
in
mov
and
in
out
jae
fcomps
sub
xlat
out
push
pop
inc
fdivrl
or
aad
nop
es
inc
add
inc
loop
ss
aad
dec
pop
scas
in
movsl
arpl
ja
imul
int3
das
data16
outsb
or
iret
pop
inc
les
cmp
sbb
fisubl
out
sbb
sbb
pop
push
scas
pop
mov
fwait
dec
inc
cs
mov
dec
sbb
mov
mov
sub
jne
pop
lahf
in
mov
testb
js
mov
dec
and
int3
cmp
jo
push
ds
lods
subl
lret
cmp
push
and
pop
dec
and
rcrl
inc
rcrl
es
iret
pusha
sbb
outsl
xchg
push
test
sbb
push
inc
mov
mov
dec
xchg
xor
out
and
lds
pop
sbb
scas
inc
arpl
jae
dec
sub
aas
lcall
push
jne
xchg
jnp
push
xchg
cmpl
xchg
rcl
sub
cmp
pop
mov
ds
shll
xchg
ror
cmc
xchg
or
dec
xchg
xchg
pop
xor
test
fsts
popa
cmp
inc
popa
adc
lcall
xlat
and
dec
shlb
out
lcall
imul
fstps
or
fwait
clc
add
ret
xor
mov
into
cs
jnp
ds
arpl
daa
or
das
enter
loope
dec
bound
push
sbb
push
mov
adc
pop
cmpl
loopne
addr16
je
lret
ja
mov
xorl
add
aaa
add
adc
sahf
mov
dec
push
icebp
sarb
leave
mov
inc
sub
pop
adc
out
push
mov
ljmp
daa
xchg
popa
cmc
ljmp
ret
mov
lods
nop
mov
loope
cmp
jno
cld
scas
ljmp
dec
sub
mov
inc
push
xor
sbb
jg
fildl
lret
dec
xchg
test
mov
out
push
aam
and
jecxz
ret
dec
sbb
orl
pop
jl
mov
nop
cli
lods
fcoms
adc
add
in
orb
sub
mov
push
cmp
inc
test
xchg
push
sbb
out
mov
xchg
dec
and
and
cmpl
and
lahf
mov
aam
mov
mov
jnp
sub
and
jle
inc
sbb
jmp
stos
and
cmp
imul
cwtl
mov
add
mov
popf
adc
mov
jmp
jle
les
fcmovne
add
lret
test
jnp
test
xchg
mov
lret
arpl
fisttpll
adc
xchg
in
ja
imul
leave
jl
add
cs
cmp
vunpckhps
xchg
test
sub
test
mov
dec
test
sub
imul
jecxz
shlb
push
das
jmp
push
and
jge
fidivl
clc
mov
mov
or
aam
cmp
sub
jns
xor
shrl
in
cltd
xchg
jne
testb
jnp
jns
jo
pop
cmp
lock
adc
adc
or
rcl
loop
cmp
popf
fs
lock
jmp
dec
sbb
pop
sbb
ja
lods
push
pop
xor
inc
mov
lods
insb
cmp
cmp
call
fiaddl
and
inc
push
test
xchg
sub
dec
insb
and
insl
cmpsl
in
push
mov
movsw
sbb
jb
push
flds
aaa
stos
xor
inc
and
and
sbb
xor
dec
adc
sub
mov
mov
insb
fcoml
xchg
rol
es
fistpl
mov
lock
mov
jno
stc
sahf
lahf
adc
fbstp
pop
incb
or
adc
pop
ds
mov
add
gs
mov
xchg
pushf
cmp
push
fmull
pop
xor
xor
out
or
pop
dec
jecxz
repz
icebp
jb
xor
loop
rolb
aad
mov
mov
arpl
rcrb
jecxz
daa
push
aas
sub
insl
xor
insl
sbb
repnz
pop
add
leave
pusha
fs
mov
js
pop
push
jo
and
adc
and
jae
je
into
add
jmp
popa
sub
arpl
mov
pop
stos
popf
cld
mov
aas
or
jno
xchg
out
sub
or
jbe
jle
stc
or
test
ret
ja
shrl
aas
jo
cmp
hlt
push
lret
andl
inc
divb
subl
fiaddl
pop
in
enter
xor
imull
cmp
sbb
lahf
insb
sub
inc
int
mov
fstpl
adcl
push
pop
push
cs
fistpl
loopne
hlt
aaa
outsl
add
fs
add
bound
scas
pop
aaa
fwait
loopne
fnsave
int
and
mov
je
jge
cmp
pop
jo
bound
aad
inc
xchg
gs
push
pop
add
and
inc
cmp
push
lahf
sbb
xorl
push
push
clc
je
inc
sub
xor
add
add
dec
add
push
sub
pop
sub
cwtl
orb
sbb
out
cli
in
adc
xlat
add
fsubrl
mov
adc
xlat
test
jle
xor
cwtl
dec
in
dec
push
ror
in
stc
fwait
cmp
test
jmp
rcrl
fstl
inc
jb
pop
into
push
ljmp
inc
sub
sub
sbb
xor
add
and
jo,pn
out
fwait
mov
ret
out
int3
cltd
pop
insl
push
mov
ljmp
mov
je
push
notl
mov
loope
jle
sti
pop
xchg
jmp
into
in
leave
mov
dec
and
enter
aad
filds
xor
mov
sti
pop
in
roll
mov
repnz
and
inc
dec
push
or
pop
mov
or
test
gs
inc
roll
sbb
sbb
dec
jmp
loope
mov
fcmove
dec
pusha
call
jecxz
xchg
push
mov
hlt
jge
sbb
cmp
movl
mov
ret
mov
xchg
sbb
mov
addl
test
mov
lret
mov
and
xor
cmp
ljmp
xor
push
cmp
push
enter
mov
ret
jecxz
pop
dec
fs
mov
lcall
sub
cmp
int3
movsl
or
jnp
mov
testl
xor
lock
fbstp
cld
mov
cmpl
cwtl
add
push
or
aam
add
out
mov
cmpsl
jb
ds
outsl
shll
subl
movsl
gs
insb
ret
sbb
lret
xchg
jbe
sub
sub
aam
sbb
mov
push
int3
dec
ret
inc
push
pop
and
xchg
mov
leave
jae
push
mov
xchg
rol
mov
aam
bound
pop
mov
jmp
lods
cli
sti
and
ret
inc
jno
mov
sub
out
in
aas
mov
out
pop
cmpsl
pusha
xor
xchg
mov
fs
adc
xlat
mov
ret
cwtl
jecxz
mov
sahf
jo
iret
mov
ret
rcl
int
std
jp
adc
enter
int
adcb
sahf
mov
dec
shll
add
fimuls
mov
push
or
sbb
or
ficomps
in
aam
push
or
fcmovu
mov
lods
inc
jmp
xor
jp
mov
mov
xor
aaa
fsubr
aas
xchg
and
sub
mov
cld
cwtl
insl
mov
push
aaa
mov
jecxz
xchg
sub
xor
es
jne
repnz
fldcw
mov
add
push
dec
stos
adc
mov
mov
xor
scas
sub
jb
repz
xor
addb
imul
mov
pop
adc
movb
and
jb
int3
inc
into
in
outsl
mov
lret
shrl
cmpsb
inc
int3
pop
sbb
loopne
hlt
cmp
inc
inc
popf
shl
mov
pop
insb
pop
and
push
add
inc
inc
inc
sub
adc
pop
cmp
stc
xchg
dec
rolb
xchg
test
mov
aam
mov
inc
mov
sbb
pop
sbb
cwtl
out
insb
cwtl
adc
mov
sbb
roll
outsl
cmp
jp
cmpsl
stos
jae
or
into
jo
and
mov
jbe
nop
imul
inc
mov
and
inc
rclb
pop
push
mov
insl
leave
in
mov
xchg
sbb
push
inc
or
decb
je
lds
fsubs
push
cmpsl
mov
adc
add
int3
inc
loope
jb
pop
and
mov
aad
pop
call
mov
xchg
cld
decl
mov
mov
lods
fnstsw
inc
ja
xor
jns
cmp
nop
pop
cmp
and
xchg
fistpl
imul
in
jg
inc
out
and
mov
imul
shll
jmp
inc
imull
enter
test
dec
sbb
outsl
pop
sub
add
cmp
cs
negb
push
xchg
jno
pop
js
aam
movsl
insb
jl
sbb
jg
xor
lods
addr16
iret
jecxz
incl
xorb
sbb
sub
imul
mov
jl
mov
lods
mov
gs
pop
call
and
inc
push
mov
cmpsl
enter
and
mov
ds
cmp
adcb
mov
lods
bound
jbe
ss
and
daa
xor
imul
sbb
push
repz
sbb
test
lret
fadds
or
shlb
add
in
aaa
clc
rolb
pusha
add
out
aas
or
push
xor
aam
int
sub
xor
jg
mov
pusha
push
mov
rcrb
call
push
ret
xchg
cmpsl
inc
imul
inc
or
outsl
outsl
rorb
orb
repnz
push
arpl
push
pushf
js
mul
pusha
wrmsr
clc
push
rolb
sub
ret
nop
int
xchg
call
add
in
xor
cmpsb
lret
icebp
in
cmc
jns
mov
popl
stc
mov
test
jae
mov
insb
aad
loopne
cld
add
cltd
dec
test
inc
jg
loopne
enterw
stc
push
bound
aas
daa
pop
or
xchg
push
test
pop
push
jge
sub
mov
js
ja
enter
add
push
and
push
rclb
xchg
adc
push
pop
mov
inc
faddl
push
jne
sub
sub
pop
cmp
int3
shlb
mov
negl
mov
sahf
mov
mov
mov
aas
xlat
jecxz
shrb
inc
cmp
xor
lds
fsubl
rolb
mov
inc
and
sub
fidivs
push
mov
or
xchg
gs
scas
fsubrp
mov
loop
xor
mov
xchg
dec
mov
stos
sbb
jmp
sub
in
lea
mov
mov
stc
cmp
repnz
push
insl
daa
fists
arpl
sub
out
cmpsb
cmp
jnp
pop
lods
xchg
pop
mov
dec
cmp
mov
mov
imul
shl
push
jne
cld
adc
mov
sbb
mov
jnp
pop
or
or
inc
push
jb
xor
or
data16
popf
mov
push
movsb
push
jno
cs
adc
sub
fwait
cmp
mov
mov
push
clc
mov
cmpb
sar
push
adc
lds
or
cmp
leave
movsb
negl
rolb
pop
mov
int
fildll
add
sarb
shlb
movsl
mov
std
and
or
je
xlat
jo
pop
adc
add
and
xchg
bnd
ljmp
sbb
pop
outsb
pop
shrb
sarb
in
fisttpll
jmp
sbbl
mov
call
add
cmp
aaa
cmp
adc
mov
cltd
cmp
mov
icebp
cmpb
out
and
add
push
std
cmp
sbb
dec
or
mov
xchg
push
repnz
and
dec
les
js
xchg
in
popf
sbb
icebp
out
jmp
jmp
sbb
xchg
xchg
jge
arpl
imul
or
and
pop
cmc
lds
pop
in
fcompl
cli
and
dec
xchg
lock
pop
les
shr
sbb
scas
int3
in
add
lods
xlat
ficomps
jns
mov
lahf
push
movsl
and
sti
icebp
data16
pop
or
and
xchg
mov
cmp
or
in
notl
rorb
adc
inc
in
xor
in
or
sahf
pop
mov
inc
out
jl
or
add
xrelease
and
push
cmp
inc
mov
testb
adc
cmp
jecxz
insb
mov
lock
fidivs
add
stos
mov
dec
push
mov
mov
ret
cmc
popa
and
adc
xor
lea
pushf
fcoms
inc
pop
lcall
mov
je
or
stos
bound
jo
imul
xlat
pop
pop
adc
movsl
jl
inc
inc
cld
incb
mov
dec
cmp
pop
mov
cltd
lret
aaa
xchg
xor
ss
test
hlt
bound
imul
aaa
pop
cwtl
sti
lods
mov
dec
mov
subb
imul
stc
add
test
mov
sub
test
loop
fdivs
sub
mov
rcr
insl
popf
sbb
xor
test
daa
mov
pop
aad
int
add
xor
xchg
push
or
mov
jmp
out
inc
or
ret
es
insl
and
popa
xchg
loope
in
std
fldenv
cmc
jmp
int3
and
cli
lcall
lods
gs
dec
imul
lcallw
cmc
jmp
cld
iret
jp
jmp
mov
ficoml
out
cmc
cs
add
enter
adc
sarb
jg
xchg
inc
leave
jne
mov
mov
sub
lret
push
pop
clc
mov
loopne
inc
sub
mov
test
test
lcall
and
js
xchg
sub
addr16
push
enter
xlat
fcoml
fwait
mov
or
fbstp
pop
fnstcw
xor
fsubr
rcl
mov
lcall
lods
cwtl
scas
jo
mov
mov
and
xchg
ljmp
mov
rclb
ds
popf
repz
or
xchg
scas
or
cmc
jae
rolb
jb
jno
lea
pushf
out
jb
pop
xchg
adc
and
dec
lret
mov
or
fadds
and
ljmp
inc
push
jmp
dec
pop
cwtl
enter
pop
popf
inc
adc
fcoml
jno
fistpll
fmul
in
fiaddl
push
push
out
fisubrs
fs
xchg
adc
pop
divb
imul
jge
stos
popf
pop
inc
stos
iret
test
xchg
xor
movsb
or
and
das
inc
popf
sbb
pop
xor
mov
inc
outsb
and
shlb
je
and
xor
fstl
out
and
mov
into
sbb
scas
mov
fnsave
cmp
aad
mov
inc
cli
iret
sahf
clc
push
fistl
jb
out
xor
xchg
push
cld
push
iret
ficomps
cs
int3
mov
xchg
xchg
idivb
xchg
arpl
pop
xchg
fildl
sub
sbb
cmp
inc
dec
sahf
fwait
and
mov
or
adc
fdivs
cmp
dec
and
jp
dec
xchg
loopne
jne,pt
rorb
cmp
mov
mov
ss
mov
jg
cmpsl
push
mov
insb
inc
in
nop
xlat
push
mov
out
stc
hlt
jmp
test
comiss
aam
mov
mov
sbb
push
or
and
and
jae
out
sbb
or
ja
mov
cmpsb
pop
mov
scas
mov
inc
xor
mov
repnz
in
and
add
notb
pop
sbb
aad
es
push
add
lock
mov
or
jl
fisttps
dec
inc
std
dec
add
pop
inc
std
xor
sbb
jmp
lock
subb
jg
mov
cli
xor
pop
pop
test
pop
jne
pop
pop
in
jg
lds
cmp
xchg
add
push
popa
sub
std
adc
outsl
mov
aas
cmp
push
mov
dec
xchg
inc
and
adc
adc
push
pop
adc
pusha
lret
inc
call
bnd
dec
xlat
das
jno
leave
jg
dec
adc
rcrb
mov
xor
add
repz
mov
xchg
pop
cmpsb
and
nop
xchg
xchg
or
jg
mov
xor
sub
push
fsubrs
push
pushf
add
mov
repz
cmp
mov
mov
adc
ss
ja
pop
add
xor
and
rol
ret
xlat
repz
notl
cmpsl
mov
push
jae
arpl
pop
add
xor
and
rol
ret
xlat
repz
notl
cmpsl
mov
push
adc
ja
pop
add
xor
jecxz
rol
ret
xlat
add
jecxz
xchg
xchg
mov
inc
pop
push
sub
ja
pop
adc
xor
mov
jge
out
and
or
pop
pop
dec
sub
cmp
or
sbb
and
push
dec
stos
mov
fwait
mov
stc
cli
jmp
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
cmp
mov
cli
jmp
sub
sbb
push
jp
dec
mov
push
stos
cwtd
lret
lcall
lods
mov
jne
pop
inc
or
mov
inc
mov
adc
pop
pop
leave
scas
add
ficoms
push
inc
in
xchg
js
xchg
mov
cmpsl
or
aas
stc
jne
gs
adc
fcoms
jp
xor
sub
push
sar
ret
out
sub
adc
add
flds
fldcw
stc
cmp
pusha
or
mov
jns
add
mov
aas
stc
je
lock
clc
mov
lcall
in
xor
sub
push
pop
dec
inc
ljmp
mov
enter
stc
lds
ds
sbb
std
mov
mov
mov
fstps
out
cmp
or
jp
dec
sbbl
aas
mov
shr
cli
adc
cmpsl
imul
arpl
daa
push
or
xor
stos
fucomip
mov
loop
jmp
cli
popf
test
jl
push
push
aas
pop
xor
or
mov
lcall
mov
cmp
dec
jbe
es
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
pop
xchg
mov
or
adc
sbb
insb
push
sub
xchg
mov
adc
inc
jp
lret
movsb
inc
mov
and
jae
and
xchg
pushl
shrb
hlt
leave
mov
sbb
push
mov
out
jge
jo
sub
cmp
xor
pushf
push
xor
cmp
aaa
pop
repz
adcb
xchg
iret
inc
jg,pt
les
imul
adc
adc
adc
sahf
push
in
sub
xchg
stos
dec
cmp
inc
mov
lcall
ja
stos
call
lea
xchg
cmp
or
pop
daa
movsb
mov
pop
sahf
inc
aas
jo
addr16
sub
cs
sbb
xchg
xor
pop
cmc
enter
lcall
jmp
fs
fisttpl
clc
test
arpl
orb
lods
test
clc
ds
in
push
into
int3
xchg
mov
lds
cmc
sbb
sub
repz
mov
filds
xchg
cmp
sub
sub
xchg
roll
adc
mov
mov
jbe
jecxz
data16
add
pop
cmp
imul
fbld
mov
mov
out
ss
or
pop
popf
repz
push
mov
cmp
push
cmpsl
or
xchg
dec
and
das
push
xor
xor
jbe
or
sub
push
and
sbb
or
out
orl
fwait
jne
push
leave
outsl
or
cs
jb
popf
ljmp
pop
mov
xchg
or
adc
or
into
fisttpl
add
aam
push
push
sub
subb
in
xor
inc
dec
cli
test
sub
mov
cmc
sbb
test
pusha
clc
xchg
push
mov
jbe
int
jge
sub
mov
in
push
call
daa
icebp
nop
cmpsb
dec
jbe
out
in
iret
dec
and
sub
fldt
mov
xchg
mov
xor
call
add
add
cmp
loopne
sub
test
mov
repz
push
jg
test
inc
add
popf
test
sarb
add
push
push
mov
adc
mov
jge
inc
loopne
xchg
fs
adc
push
int
or
jge
out
mov
lcall
call
fisttpl
bound
and
insb
or
push
jecxz
jbe
mov
aam
enter
sbb
aas
call
lcall
mov
inc
imul
cmp
pop
in
push
leave
mov
movsl
dec
xchg
fidivs
inc
fidivrl
int3
mov
xchg
jo
mov
jle
inc
in
or
fldenv
dec
addr16
lods
push
and
imul
mov
ja
xor
lods
push
inc
dec
push
jp
icebp
out
outsb
dec
or
push
or
sub
jbe
cld
nop
push
sbb
out
test
lods
push
push
leave
cmp
movsl
sbb
sahf
sbb
bsf
out
fildll
push
add
adc
mov
std
push
fsubr
into
sub
aaa
push
jp
lcall
ljmp
repnz
out
adc
lea
cmp
cmp
ret
lret
xor
icebp
jae
stos
ja
iret
test
out
mov
rolb
adc
add
les
cmp
repnz
inc
mov
insb
sbb
mov
mov
adc
loope
scas
insl
xchg
cmp
cltd
mov
add
ret
inc
xchg
add
pop
outsb
ret
popf
inc
fadds
mov
stos
sbb
or
icebp
notl
mov
aaa
pop
out
mov
jb
outsl
loop
popa
or
movsb
sbb
mov
and
sub
aam
das
cmp
lock
cmp
xchg
insb
jle
lods
sub
into
jmp
inc
lods
cmp
jne
or
and
mov
mov
xchg
pop
adc
jmp
clc
in
add
and
iret
and
inc
pusha
ss
ljmp
push
adc
push
jno
inc
sbb
ljmp
or
pusha
gs
mov
or
lcall
cmp
shrb
in
mov
adc
sbb
dec
aad
push
pop
stos
scas
jne
rorl
push
in
or
rol
sbb
in
and
fsubs
into
xor
je
xlat
shrb
outsl
pop
icebp
enter
jl
andb
xchg
sbb
aam
pop
dec
or
jnp
fwait
outsl
cmp
pop
add
lret
push
mov
nop
or
mov
jmp
sti
movsl
xchg
popa
dec
push
cmp
repz
lock
repz
inc
pop
xchg
js
fcmovbe
cmp
xor
hlt
nop
adc
test
push
les
xor
js
sub
stc
jge
sbb
sbbb
and
sub
dec
inc
mov
les
jmp
mov
xchg
add
dec
lret
inc
and
adcl
ficompl
cmp
sbb
outsl
aam
dec
or
add
movb
adc
lret
loope
cmpsl
std
mov
ss
xor
outsl
jne
mov
adc
and
lcall
jb
push
call
mov
push
loope
flds
jg
cmp
js
idivb
in
pop
jb
clc
cmc
and
jns
inc
into
jo
lock
outsb
sub
cmpsl
pusha
outsl
push
daa
cmpsl
repz
jmp
mov
pop
sbb
lret
dec
cmc
in
aad
xchg
mov
outsl
cmp
ljmp
in
mov
push
dec
icebp
add
pushf
jnp
fimull
push
decl
iret
sbb
rorl
shr
add
inc
cs
cld
and
fistl
jg
in
ljmp
hlt
push
popa
mov
dec
pop
dec
mov
cmp
fildl
push
xor
add
jb
sbb
adc
mov
scas
sub
movl
ds
dec
xchg
fiaddl
cmp
mov
leave
and
test
pop
adc
push
movsl
rol
add
or
xor
pop
push
jae
jne
jo
loope
mov
das
aaa
mov
add
sub
mov
lock
pushf
push
pop
lods
jbe
jp
dec
pop
xlat
mov
gs
sar
xlat
aad
sbb
push
js
pushf
outsb
divl
mov
sbb
jo
inc
lods
xchg
sub
popa
sub
out
push
add
mov
dec
add
pop
inc
adc
test
test
inc
mov
mov
push
jmp
loopne
stos
stos
imul
jne
loope
adc
and
roll
add
mov
shl
stos
inc
inc
sbb
fildll
pop
sub
fnstsw
dec
test
push
filds
mov
pop
out
dec
out
mov
jno
ds
inc
jb
fs
daa
or
sti
lea
cwtl
in
cmp
xchg
notb
cmp
fcmovu
stos
je
cwtl
dec
mov
or
js
mov
gs
push
push
in
and
data16
sub
dec
pop
negl
stc
pop
shr
xchg
cltd
ljmp
int
add
inc
push
sbb
repz
insb
adc
pop
push
clc
out
enter
xchg
leave
sub
dec
cmovne
push
dec
adc
mov
out
push
add
pushf
sub
into
pop
push
sbb
pop
cmp
fildl
adc
aaa
push
sub
push
in
sbbl
mov
xor
push
mov
cmp
sbb
sbb
jo
sbb
movsl
mov
loopne
jns
data16
jl
pop
das
push
sub
loop
repz
jmp
inc
adc
adc
ret
cli
in
mov
push
mov
dec
sbb
enter
sysexit
mov
mov
push
xchg
stc
jge
lret
shrl
or
mov
push
fmuls
inc
adc
sti
cwtl
add
cmpsb
add
dec
sub
aam
dec
into
xor
xchg
jp
test
aad
orl
xchg
lods
sub
dec
arpl
xor
jecxz
dec
scas
add
dec
call
out
jne
adc
in
pop
cwtl
mov
loope
jecxz
jg
arpl
scas
loope
pop
and
jae
xor
lods
sbb
cmpsb
gs
addr16
adc
inc
repnz
xor
movsl
sahf
outsl
dec
loope
fists
aam
repz
push
es
int3
xor
mov
mov
push
leave
fsubs
push
loope
out
add
cmp
jp
push
test
ret
pop
ficoms
jbe
adc
xor
pop
lods
out
dec
adc
ret
inc
fs
jg
dec
mov
mov
inc
call
movl
movsb
jecxz
cs
mov
dec
push
fldl
popf
mov
lods
mov
dec
fwait
xor
aad
mov
shlb
fadds
adc
es
sti
sbb
xchg
out
sub
test
les
xlat
or
push
push
icebp
cmp
in
cmpsb
lea
outsl
xlat
loopne
andb
lret
sbb
popa
loopne
and
loopne
push
pushf
shll
xchg
das
imulb
popf
xchg
xchg
xchg
aad
jecxz
dec
lret
hlt
cmp
pop
mov
mov
sub
sub
cltd
xchg
sbb
scas
or
cmp
xchg
rclb
aam
ret
fdivrl
xor
push
push
mov
scas
xor
inc
cmp
lcall
lret
xor
mov
cmpsb
outsl
out
outsb
sbb
stos
xor
cwtl
fnsave
pop
and
adcl
xchg
push
call
adc
mov
pop
dec
lds
or
jne
movb
sub
sbb
adc
ficoms
hlt
stc
roll
faddp
adc
out
or
xor
stos
shlb
fsubs
pop
lods
popa
sbb
mov
or
mov
movsl
shrl
mov
ret
negl
fsqrt
sbb
inc
dec
xchg
pop
xchg
sbb
insl
out
and
mov
inc
stc
mov
je
xchg
mov
int3
pushf
sub
push
jle
mov
pop
push
jb
loop
mov
adc
fs
jnp
push
fstpt
icebp
jg
bnd
daa
aad
and
test
fcomps
ja
adc
mov
in
cmp
pop
negb
in
scas
sbb
mov
push
negb
lret
fsubrp
mov
dec
stc
shlb
push
fnstenv
pop
add
dec
adc
xchg
lahf
or
popa
fmulp
dec
xor
rolb
bound
sub
inc
cltd
test
scas
mov
sub
dec
and
pop
mov
inc
mov
or
mov
test
adc
xor
or
xor
cmpsb
cmp
mov
mov
subl
inc
pop
insb
inc
push
jno
adc
push
or
subl
fcom
push
cld
shr
xor
daa
dec
mov
outsl
mov
int3
dec
cmc
inc
cli
ds
mov
and
into
ja
and
lahf
xor
pop
imul
cmp
mov
jae
or
nop
fwait
sti
jno
jecxz
pop
mov
lea
jle
pop
xchg
roll
jl
icebp
iret
scas
mov
pop
popf
add
out
into
lods
adcb
push
xor
xor
insb
adc
xchg
cmp
mov
jmp
sbb
and
cmp
cmp
sbbl
xchg
adcb
repz
popf
lcall
data16
ja
sti
outsb
les
orb
pop
mov
jne
pusha
in
or
shrb
sbb
cmp
in
cmpsb
inc
cmp
fdivrs
scas
pop
adc
stc
orb
outsl
dec
add
sbb
testb
sbb
nop
push
enter
sbb
xchg
in
dec
cli
in
sub
in
stos
xlat
lods
mov
dec
pop
sbb
cmp
popf
jl
or
adc
insl
outsl
dec
mov
mov
mov
into
lds
lock
cmp
ja
jne
sub
movsb
or
sti
inc
imul
sbb
in
mov
dec
je
push
and
dec
mov
jnp
pop
or
xor
lods
jne
int
loopne
bound
mov
xor
aam
push
imul
push
inc
pop
mov
mov
fisttpll
pop
outsb
dec
and
fcmovb
jnp
mov
hlt
repnz
int
dec
das
cmp
lds
rcl
push
sub
ja
sbb
sub
and
xchg
inc
inc
std
xchg
xchg
fwait
push
mov
loopne
fwait
add
rcll
loope
pop
rolb
icebp
adc
add
aad
cwtl
out
jnp
mov
rclb
inc
mov
outsb
in
shl
mov
cmpsl
int3
je
in
pop
data16
lret
aad
out
and
repz
pop
dec
pop
xor
ret
scas
dec
adc
sbb
push
xlat
loope
cmp
hlt
stc
out
jg
dec
adc
movl
mov
mov
loop
push
mov
sub
cmpsl
scas
cmp
loopne
mov
shll
add
out
idivb
or
shlb
pop
or
cmpsb
clc
outsl
sbb
xchg
mov
rcrl
jns
cs
popf
jmp
leave
loop
xchg
sbbl
sub
mov
adc
inc
and
adc
push
lods
ljmp
sbb
arpl
pop
imul
xchg
xor
imul
fs
sbb
nop
nop
test
push
mov
dec
or
dec
in
stos
sub
arpl
pop
pop
push
xchg
lea
jge
cwtl
loopne
loope
mov
dec
jp
adc
add
cmpsb
and
rol
cmpsb
mov
mov
xor
pop
xchg
cmp
iret
stos
xchg
shlb
frstor
repnz
cmp
fsubrs
loopne
pop
mov
cmp
cmp
pop
xchg
push
js
stos
xor
cmp
imul
out
movsl
jne
lcall
xchg
or
inc
lcall
xchg
and
pushf
pop
icebp
mov
fnsave
call
and
add
rcll
sub
in
mov
xchg
hlt
cmp
cmp
add
dec
ja
and
or
mov
push
mov
adc
sub
inc
xor
lds
movsb
push
cmpb
sbb
into
gs
lret
mov
mov
ret
sub
lea
xchg
inc
add
lahf
cmpsb
std
mov
arpl
xlat
mov
mov
xchg
adc
pop
sbb
ja
hlt
popa
sti
repz
sub
mov
xchg
pop
xchg
adc
mov
js
addr16
insl
or
xchg
arpl
jp
push
adc
cmp
lret
inc
pop
mov
mov
arpl
repnz
cs
xor
aad
mov
add
jmp
xchg
pop
inc
xchg
lcall
jnp
pop
dec
mov
sbb
js
mov
xchg
xor
xor
xchg
outsl
adc
or
inc
sub
cmp
cwtl
inc
outsb
inc
add
lods
or
xlat
cmp
mov
mov
subb
adc
jae
aaa
sahf
pop
fs
jb
sub
xchg
mov
push
lea
cmp
pop
imul
or
pop
stc
inc
and
sbb
cmp
daa
fcompl
iret
pop
inc
adc
cltd
cmp
inc
or
cmp
lods
add
daa
stos
jns
repnz
int3
lods
sar
xor
mov
shlb
inc
sti
xchg
mov
pop
fwait
test
push
imul
fcoms
add
add
lahf
cmp
lods
inc
xchg
notb
pop
dec
clc
push
scas
rcrb
cmc
and
mov
sub
jecxz
in
shl
out
iret
cmp
popf
sbb
cmc
fidivrl
out
mov
dec
roll
cmp
push
test
push
lock
cli
xor
in
loope
lahf
jp
jno
pusha
adc
dec
out
jb
into
repz
push
popl
push
xor
lods
cli
not
rclb
and
push
lcall
sub
dec
inc
daa
call
xchg
jb
add
cld
lcall
pusha
fdivrl
pop
jmp
lods
inc
push
lea
std
cltd
pusha
or
pop
sub
dec
dec
dec
leave
add
adc
sub
aaa
xor
and
xchg
add
fdivrs
fdivp
into
and
std
lahf
inc
cmp
out
or
mov
testl
and
mov
pop
sbb
push
mov
mov
cmp
xchg
adc
in
mov
jo
inc
nop
cmp
xchg
dec
xchg
and
pop
push
adc
ds
stos
and
xchg
add
faddp
mov
cmp
jmp
inc
pushf
dec
xor
xchg
mov
mov
jno
faddl
clc
push
in
and
mull
mov
cmp
andb
insl
push
faddp
pop
roll
push
ss
push
push
sub
mov
cmp
movsb
jg
mov
xor
sbb
pop
pop
jmp
scas
movsl
aad
dec
daa
mov
mov
fdivrl
sbb
pop
loop
sbb
aam
inc
gs
push
mov
fcmove
pop
xor
inc
das
adc
xlat
mov
subl
ret
add
cmp
push
test
jb
js
mov
call
xchg
jbe,pt
imul
push
sti
adc
loop
scas
sbb
xor
ret
jl
adc
xchg
sbb
lcall
add
shlb
cmp
jno
xchg
adc
ret
gs
adc
push
mov
cmp
inc
test
xchg
mov
bound
daa
push
sbbb
xchg
ss
ret
test
mov
push
call
add
mov
adc
mov
dec
xchg
inc
sbb
lds
mov
adc
movsl
mov
and
repnz
or
insl
pop
scas
je
mov
bound
lods
push
adc
fldcw
mov
movsb
inc
mov
test
pop
jbe
sti
rol
aad
mov
inc
xor
and
or
inc
pop
in
mov
int3
movsb
inc
cmp
and
rcll
jecxz
fcoml
fst
movsb
loop
cmp
orl
jno
jecxz
sti
jecxz
push
gs
mull
int
push
inc
flds
pop
outsl
mov
xor
movsl
add
test
cld
cmpsb
mov
jp
or
test
push
push
lods
inc
pop
dec
out
and
aas
mov
mov
repz
repnz
icebp
mov
loop
addr16
mov
or
pop
xor
ljmp
inc
pop
mov
addl
mov
inc
stos
or
or
int
cmp
lea
pop
iret
mov
cmp
movsb
cs
push
pop
ret
fbld
adc
icebp
cwtl
xchg
add
data16
jp
jb
xor
pop
in
movsb
and
pop
cmpsl
mov
ss
cmp
push
testl
loope
scas
jmp
lods
shll
and
add
lea
pop
nop
lcall
add
sbb
lods
inc
cli
in
dec
or
adc
stos
fdivrs
dec
lret
mov
repnz
or
mov
inc
rcrl
cli
xchg
loop
clc
mov
or
dec
cmp
xor
popa
daa
sub
inc
imul
mov
and
xor
push
mov
xor
sbb
outsb
gs
or
push
mov
test
clc
je
dec
aam
out
pop
push
call
mov
orb
mov
mov
pop
bound
sar
inc
add
adc
add
rcll
or
stos
nop
mov
push
fisttpl
xor
loopne
daa
test
nop
in
cmp
test
lcall
lock
dec
mov
cmp
pop
shll
pop
add
rcrb
aaa
and
idiv
cmp
int3
cltd
sub
test
dec
push
dec
xchg
or
sub
ljmp
shr
inc
jo
rcr
adc
pop
enter
add
fnstenv
dec
loope
pop
pop
jbe
je,pn
xchg
xchg
push
pop
lret
jmp
mov
xchg
repnz
or
sbb
lock
push
xchg
getsec
dec
cmp
lock
xchg
stos
imul
inc
jp,pn
pop
inc
and
mov
push
cltd
loopne
call
xor
xchg
push
shlb
shl
and
jge
and
shll
iret
outsb
pop
mov
out
adc
mov
jno
pop
int
arpl
in
xchg
jns
xchg
repnz
adc
push
movsl
pop
int
jp
out
cmpsb
leave
xor
dec
enter
jne
or
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
mov
or
jns
rorl
dec
stos
popa
mov
mov
stc
cli
jmp
sub
cmp
or
sbb
push
jp
dec
fstps
stos
inc
mov
lcall
ss
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
fdivl
arpl
push
in
inc
xchg
jg
inc
leave
xor
jecxz
shrl
mov
mov
fdivl
arpl
push
in
inc
pushf
xor
pop
repz
jecxz
shrl
fisttps
sbb
int3
arpl
push
in
inc
pushf
xor
pop
rep
rorb
mov
jg
inc
lock
lods
sub
cmp
es
cwtl
daa
mov
imul
sbb
xor
xor
add
adc
pushf
xor
loopne
rcrl
xchg
cmpsl
dec
mov
push
xchg
jge
and
outsb
xchg
cmp
mov
loop
pop
outsb
insb
mov
xchg
sbb
push
sub
fdivl
jmp
aas
jnp
adc
nop
jae
in
lods
std
lods
or
sbb
push
xchg
and
pop
les
dec
xor
adc
arpl
daa
and
inc
scas
icebp
sub
dec
loopne
mov
loopne
xor
movb
mov
pop
jmp
sbb
mov
push
clc
mov
lock
xchg
cs
pop
jae
arpl
push
in
inc
pushf
xor
pop
repz
jecxz
shrl
mov
mov
mov
push
stos
inc
stc
push
jecxz
rcll
push
sub
sub
movzbl
mov
lock
pop
ljmp
lahf
lods
inc
stc
pop
outsl
stc
jp
addr16
insb
cmpsb
jmp
imul
mov
sbb
lods
add
jecxz
shrl
mov
mov
fdivl
arpl
push
in
inc
pushf
xor
pop
repz
jecxz
shrl
mov
mov
fdivl
or
xchg
orl
outsb
inc
adc
pop
cmpsl
repz
mov
cmp
adc
fsubrp
pusha
adc
mov
push
sbb
pop
iret
add
sub
lea
or
jae
jae
push
movsl
xor
call
sbb
ret
jb
cmp
lahf
sbb
xchg
shll
xchg
jae
and
cmpsb
test
iret
adc
icebp
xchg
xchg
xchg
lcall
adc
out
sbb
jle
cmp
sub
in
pop
pcmpeqb
in
stc
jo
pusha
rorb
jne
lea
je
jne
push
pop
push
jecxz
enter
shlb
jne
cmp
out
pop
push
fisttpll
adc
fidivrl
push
inc
enter
mov
test
enter
cmpsl
dec
jbe
mov
jne
mov
sbb
lods
mov
mov
jae
iret
out
jns
lea
adc
xlat
sub
jbe
neg
loop
pop
inc
mov
or
mov
daa
repnz
inc
push
sbb
mov
mov
mov
out
popa
jle
sbb
stos
arpl
bound
inc
pop
push
scas
ss
leave
loope
mov
stc
imul
in
psubd
cmpsb
push
lret
dec
mov
push
pop
pusha
nop
jo
fsubrl
pop
add
jp
add
cwtl
inc
cmp
sbb
orb
icebp
sbb
jmp
xor
pop
je
mov
cmpsb
sar
add
aaa
andl
loopne
sar
adc
sub
jne
sbb
xchg
repnz
inc
add
mov
mov
shl
xor
add
les
in
xor
insl
sbbl
rcrl
fsts
jmp
ss
pop
leave
sbb
add
stos
cmp
orb
push
test
or
popf
scas
scas
nop
fdivl
jbe
or
jg
lods
jb
shll
push
lock
fstl
cmp
push
mov
inc
cltd
fistps
iret
cwtl
movsl
aaa
mov
js
adc
mov
pop
push
dec
jo
pop
mov
int
lds
les
xchg
pop
pop
fs
ss
popa
js
xchg
lahf
inc
data16
imul
out
mov
xor
jno
pusha
cmp
xchg
or
mov
inc
lods
xor
xchg
sub
inc
imul
popf
add
fs
or
adc
daa
test
jp
jmp
inc
inc
lods
data16
lds
adcb
pop
mov
out
cmp
pushf
push
ret
or
xchg
test
mov
sub
dec
das
or
outsb
mov
pop
idivl
icebp
inc
push
ljmp
xchg
clc
inc
jbe
xchg
outsl
adc
lcall
pop
pop
cld
push
push
clc
cmp
sbb
cli
cmp
lock
loopne
cmp
mov
jmp
ss
adc
bound
cvttps2pi
insb
clc
subb
orb
into
stc
pop
fisubrs
xor
add
in
push
dec
movb
mov
ss
mov
inc
push
mov
fimull
lods
arpl
add
dec
or
pusha
out
outsb
stc
xchg
test
adc
mov
in
push
test
out
xchg
bound
or
pop
movd
mov
arpl
imul
mov
iret
xor
cmpb
dec
je
cwtl
adc
jo
in
fildll
pop
push
in
ds
push
in
mov
xchg
bndstx
mov
shrb
pop
jo
sub
push
lret
pop
xor
jge
push
clc
lods
mov
test
addr16
adcb
rorb
arpl
fsts
add
dec
mov
fstpl
push
sub
inc
mov
sbb
jns
inc
pop
stc
in
repnz
cmpsb
fsubs
int3
jmp
pop
and
sbb
cmp
ficomps
sti
sbb
xchg
sub
push
ret
and
loope
daa
jo
push
xor
fwait
scas
adc
scas
inc
repz
xchg
sarb
stos
jns
shrb
jl
xlat
test
jnp
rorb
fistpl
imul
jbe
je
enter
fstpl
lods
and
mov
mov
gs
insl
mov
pop
mov
fcompl
out
out
inc
push
inc
and
es
iret
or
shlb
cmpsl
pop
jno
ds
lds
push
nop
mov
movsb
mov
and
and
pushf
sbb
test
push
push
imul
lock
leave
aam
ds
imul
lcall
fistl
test
ljmp
inc
pop
int
xor
pusha
out
shrl
sbb
mov
mov
pop
rcll
int
push
jnp
pop
int
adc
jne
movsl
idiv
movsl
aam
data16
pop
pop
jp
out
out
xor
fs
lret
std
push
mov
cmpsb
push
cmp
xchg
fs
bound
mov
adc
stc
pop
pop
mov
xor
dec
jb
pop
gs
or
mov
push
sub
fcmovb
mov
jbe
add
rcrl
cmp
adc
pop
xchg
mov
sub
push
hlt
cld
jns
and
push
push
ja
pop
in
loopne
out
lahf
mov
dec
inc
into
cmpsb
inc
into
mov
pop
cmc
test
insb
xchg
fnstcw
scas
xchg
lcall
dec
jl
and
sarl
dec
ds
out
cmpsb
lret
and
dec
in
inc
pop
xchg
ss
cwtl
mov
xor
jbe
or
cmpb
das
movups
or
jge
adc
int3
or
aam
push
push
ja
jmp
add
xorb
std
adc
popa
xchg
or
insb
push
das
mov
mov
fisubrl
insb
in
mov
dec
test
xchg
nop
lcall
push
sti
mov
fsubl
fdivr
lea
adc
cmp
jl
cltd
xor
repnz
jne
add
sub
insb
test
das
pop
mov
mov
out
sbb
stos
mov
nop
lock
push
scas
pop
cmp
lret
mov
inc
mov
xor
test
lea
mov
jbe
push
and
out
xchg
pushf
dec
mov
das
sbb
das
pop
fdivrs
xchg
pop
xchg
aad
fwait
out
imull
in
lea
pushf
push
and
mov
pop
mov
mov
sub
jge
aas
test
cmp
adc
aam
inc
xor
adc
xlat
push
sbb
mov
mov
fisubs
sbb
stc
out
cmp
cmp
outsl
push
mov
inc
ret
add
cmp
xchg
pop
shll
or
les
inc
sub
popf
sbb
xor
lret
fdivrp
inc
test
or
in
push
and
pop
push
jge
cmp
jns
outsb
push
iret
pushf
pop
jnp
adc
sub
or
pusha
pop
push
pop
cmp
mov
mov
mov
fs
fsubrs
sbb
sub
push
inc
inc
cmpl
dec
das
repz
adcb
lock
enter
jae
pop
xchg
insl
fistpll
xchg
pop
mov
testb
popa
cli
add
sbb
dec
inc
fiadds
cwtl
and
hlt
mov
xor
cmpsl
subl
add
dec
lea
in
dec
push
lahf
sbb
sbb
and
loopne
test
mov
imul
add
pusha
nop
test
popa
sub
push
lahf
xor
shll
shl
sti
cmp
andb
and
or
ret
dec
jl
jmp
icebp
mov
jnp
lcall
and
pusha
movsb
cmp
and
aaa
fnstcw
and
cmp
push
push
loop
mov
rcrl
sub
ret
aaa
jg
jb
and
cmc
inc
gs
sbb
add
sbb
cmp
out
mov
loope
cld
sarl
dec
int3
gs
xchg
fucomp
cmp
or
xor
mov
stos
push
outsb
shr
sbb
push
js
sti
jmp
int
adc
mov
mov
push
out
pop
scas
jb
cmp
sbb
add
arpl
pop
xlat
xchg
add
js
cwtl
push
inc
out
arpl
in
mov
inc
sbb
xchg
cmp
clc
push
out
sbb
inc
imul
mov
or
push
outsb
mov
das
jle
fwait
mov
pop
repnz
idiv
mov
sar
dec
and
stos
and
sub
mov
xorb
cwtl
cmp
mov
loope
xchg
mov
sub
dec
cwtl
test
popa
jp
jns
adc
add
mov
sub
daa
lret
xor
mov
mov
jp
or
adc
sub
inc
mov
pop
sbb
mov
cltd
xchg
btc
loopne
ljmp
xchg
inc
pop
les
shlb
mov
add
pop
lods
sbb
imul
stos
orl
inc
add
xchg
fwait
and
scas
out
dec
push
pushf
cmp
test
push
or
stos
push
dec
push
dec
xor
stos
add
mov
xor
add
inc
pop
jnp
xor
jno
add
sbb
pushl
pop
rorb
sarl
mov
das
cmpsl
dec
mov
shll
test
inc
jb
sbb
hlt
jmp
mov
pop
sub
roll
xorl
push
xor
pop
pop
in
aad
xchg
mov
pop
ss
inc
dec
aam
or
inc
push
mov
hlt
roll
roll
and
push
sub
or
mov
pop
jnp
aam
inc
xchg
mov
push
sbb
xchg
push
mov
push
sbb
inc
dec
insl
xchg
mov
pop
les
imul
inc
and
xor
mov
cmpsb
out
stos
and
pop
stc
dec
inc
xchg
stos
pop
faddl
inc
fnstcw
xchg
xor
pop
rorl
and
xor
stc
dec
adc
aaa
sti
addl
mov
rcrl
ret
test
shl
add
jnp
mov
in
sub
leave
aam
repz
adc
push
xor
icebp
and
int3
insl
mov
ror
cmp
inc
cwtl
xor
stos
pop
xor
mov
jge
movsl
lcall
scas
and
orl
and
jmp
inc
or
adcb
add
and
outsl
or
shrb
fidivl
mov
sub
and
push
mov
push
dec
sti
iret
jbe
jmp
jno
clc
es
mull
fcmovnbe
push
dec
iret
push
aad
push
lea
xor
lods
mov
xchg
cmp
subl
dec
xchg
into
icebp
cmp
lea
and
rorb
pop
aam
hlt
adc
adc
scas
pop
push
scas
dec
lret
ja
add
mov
fdivrl
insb
inc
mov
push
arpl
pop
popa
xlat
mov
cmp
or
outsb
xchg
stc
cwtl
sbb
push
pop
cli
mov
pop
sbb
pop
fwait
lret
xor
aad
push
pop
ja
sarl
mov
cmpsl
adc
mov
xor
and
das
out
pop
ss
sti
popf
mov
leave
ficoml
icebp
add
mov
faddl
out
rolb
push
sub
push
xchg
insl
mov
push
jecxz
or
pusha
loope
fsts
call
cmc
mov
push
or
shr
pop
mov
and
mov
je
movsb
jecxz
outsl
adc
jmp
aam
shrl
cmp
pop
popf
out
sbb
adc
clc
lds
das
push
out
pushf
push
or
test
pop
or
mov
push
inc
and
inc
popf
add
hlt
pusha
inc
jge
hlt
std
mov
cli
pop
sbbb
mov
push
insl
mov
xor
ret
enter
jecxz
and
xchg
push
orl
stc
jnp
xchg
neg
jae
and
pop
cmp
cmc
fwait
mov
push
mov
and
cmpl
mov
call
cli
sub
mov
in
inc
fistpll
clc
insb
cs
inc
rep
inc
pushf
neg
loop
out
mov
out
inc
mov
hlt
popa
insl
adc
enter
push
call
adc
popl
call
test
push
jl
adc
je
dec
int
push
adc
orb
jbe
dec
clc
aas
mov
fcmovbe
out
sbb
mov
into
insl
add
lods
ja
imul
ret
jo
pop
mov
jmp
mov
push
mov
in
cmp
insl
inc
push
lret
lea
aas
or
push
pop
lock
stos
cmpsb
sbb
arpl
or
movl
mov
repz
xchg
sub
ret
in
xor
mov
sub
pop
mov
adc
mov
sti
stos
ds
daa
add
xor
adc
xor
test
cmp
or
popf
jae
ret
stos
cmpsl
std
xchg
shll
imul
sbb
fbld
push
enter
mov
or
pushf
rorb
and
imul
push
pop
arpl
aas
jno
xor
inc
arpl
fdiv
cmp
lods
je
mov
dec
sub
out
jmp
rep
dec
or
sbb
imul
hlt
sub
mov
and
sahf
jns
push
cmp
call
sub
mov
fidivl
cmp
mov
add
scas
jne
and
aam
jae
add
cmp
xor
lret
aas
insl
mov
aad
xor
ja
pop
push
pop
xlat
mov
sub
jecxz
clc
ror
cmp
lds
in
add
stos
mov
cmp
test
and
rcr
test
xor
xchg
test
jg
rcrl
jle
ficoml
lea
push
gs
mov
and
fs
into
enter
add
mov
cs
pusha
mov
leave
jle
and
mov
and
test
outsb
hlt
ret
add
jb
scas
out
nop
jp
jnp
cmp
mov
push
rcrl
mov
cmp
cmp
ljmp
rcr
pusha
shlb
insl
xchg
dec
jmp
add
jb
cmp
inc
push
sbb
xchg
gs
test
mov
and
popf
cmpb
es
cmp
lahf
cmp
cmp
dec
ja
jge
cmp
orl
dec
adc
add
lock
jmp
push
inc
jle
inc
sub
mov
test
fisttpl
adc
xor
xor
ret
jle
sub
push
iret
sbb
mov
in
sub
lds
adc
add
ds
gs
repz
ret
fbstp
ror
pop
jmp
popa
and
pushf
outsb
call
sub
push
sbb
nop
jge
jmp
daa
cltd
mov
dec
xlat
jne
jne,pn
push
mov
aas
enter
mov
xor
repnz
add
cmp
imulb
lea
insb
cld
hlt
jmp
mov
xchg
aad
int3
xor
imul
push
fwait
mov
aad
mov
insb
mov
das
xchg
sti
mov
int3
mov
and
mov
jge
in
hlt
mov
movl
pop
cmpsb
sbb
add
cwtl
push
sarb
xor
mov
xchg
jb
inc
sub
shrb
push
sbb
xor
inc
jmp
dec
and
push
shl
lret
insb
push
sbbl
push
je
nop
divl
nop
adc
dec
adcb
xor
push
mov
xchg
dec
or
push
add
cmp
out
lret
inc
jge
shr
push
or
push
dec
sub
hlt
cmp
xchg
addr16
leave
mov
or
adc
jg
stos
xchg
dec
negb
mov
or
rcrb
push
ror
rol
or
test
inc
test
cmp
iret
mov
push
lret
mov
lret
push
pusha
push
je
pop
shll
mov
pop
cmc
dec
inc
insb
jecxz
cmp
adc
shlb
outsb
loop
out
scas
scas
fs
pop
js
xchg
cmpb
insb
icebp
std
dec
sarb
fdivrl
pop
outsb
int
jmp
lahf
int
ja
sbb
jg
pop
xor
xchg
jp
mov
js
mov
jmp
aam
test
inc
inc
adc
jecxz
loop
das
daa
rcl
mov
bnd
jp
jmp
cmp
repz
mov
mov
adc
cmp
mov
push
sbb
lcall
xchg
push
push
inc
aas
or
cmpsl
gs
add
das
loopne
add
xchg
aad
lods
and
insl
push
push
jle
pop
and
jmp
inc
fsts
lock
mov
imul
jo
aas
fnstcw
adc
jns
aaa
mov
scas
int3
dec
aas
jecxz
ljmp
adc
in
or
push
mov
mov
loopne
aad
xor
in
ja
push
sbb
shr
cld
adc
je
mov
xchg
xchg
push
and
lock
and
sub
outsb
sub
je
js
jecxz
push
sbb
daa
insb
sub
jecxz
pushf
mov
sti
jbe
mov
jl
push
sub
xchg
or
mov
movsb
pop
sbb
test
sbb
pop
adc
jo
cmp
inc
roll
lahf
cmp
pop
xchg
inc
outsl
mov
sbb
sub
jnp
push
jae
imul
pop
xchg
sub
sbb
imul
out
lcall
aas
sub
cs
xorb
movsl
js
ja
jg
pop
insb
mov
or
mov
mov
jg
fwait
dec
mov
xor
xbegin
adc
mov
sbb
push
push
mov
push
xor
sub
dec
popf
nop
sbb
inc
push
es
sub
pushf
or
push
outsl
jge
int
in
fsubrl
lahf
ret
push
fstpl
pop
xlat
jne
lret
orb
scas
lret
push
fisttps
adcl
mov
mov
loop
xchg
mov
push
test
jo
dec
sti
mov
xor
arpl
fs
and
mov
scas
pushf
or
sti
adc
arpl
xchg
cmp
ljmp
inc
lods
pop
dec
shlb
popf
jl
mov
xor
into
fisubl
stc
adcb
push
lock
dec
sbb
hlt
and
mov
push
mov
in
mov
arpl
pop
pop
loope
inc
out
push
add
arpl
jecxz
repnz
inc
imul
or
adc
jecxz
and
pop
xor
pushf
inc
or
xchg
xor
add
ret
pop
pusha
pop
xchg
and
es
sarl
cwtl
cmpsl
repz
xchg
loopne,pt
test
imul
arpl
and
xchg
gs
fldcw
mov
pushf
adc
dec
mov
shlb
or
push
jo
mov
adc
cli
imul
rorb
add
pop
inc
inc
xchg
push
cmp
mov
mov
dec
xor
xor
cmp
outsl
sahf
enter
stos
xorb
pop
and
inc
inc
or
mov
in
lea
dec
push
jae
hlt
ret
pop
jge
nop
cltd
push
out
mov
pop
scas
jmp
mov
inc
and
jae
dec
add
adc
mov
xor
rep
push
sbb
adc
adc
cmpsl
pop
loope
dec
cmp
jae
and
sbb
adc
jne
inc
aam
push
adc
add
pop
test
push
js
iret
cmpsl
lods
fistps
sub
and
mov
nop
ds
enter
xchg
stc
or
mov
inc
icebp
das
jnp
fnstenv
sub
pushf
xchg
lock
setge
mov
inc
dec
stos
jmp
imul
adc
mov
adc
sti
cs
dec
psubsb
test
mov
cmc
imul
mov
test
stos
dec
lahf
mov
fimull
fidivrl
lcall
clc
push
pop
repz
call
in
and
adcb
jb
rcr
enter
jne
sub
mov
and
push
adc
mov
sub
and
jl
in
iret
cmp
movsl
das
or
fildl
cli
xchg
adc
imul
stc
movl
push
and
push
adc
pop
sbb
ljmp
sbb
sti
pusha
scas
fs
repz
mov
bound
jg
push
iret
popf
das
or
pop
sbb
cltd
and
sub
es
pop
test
and
jns
ret
push
in
inc
pushf
xor
pop
repz
jecxz
shrl
mov
mov
fdivl
arpl
push
in
inc
pushf
xor
pop
repz
jecxz
shrl
mov
mov
fdivl
arpl
push
in
inc
pushf
xor
add
dec
jecxz
shrl
sbb
or
cmp
jae
arpl
push
in
inc
pushf
xor
mov
shrl
cmp
in
cmc
push
lds
aad
adc
xor
inc
cwtl
push
fs
jne
inc
xchg
push
mov
aaa
ds
add
adc
and
xor
arpl
xchg
inc
stos
pop
mov
in
add
repz
movsl
in
aad
mov
lods
sbb
adcl
ret
and
xchg
inc
xchg
mov
push
lds
push
testb
loopne
mov
or
pop
sub
sbb
mov
mov
push
mov
add
outsl
mov
and
mov
ss
ret
scas
xor
xor
fmuls
xor
das
add
add
adc
icebp
xor
mov
jp
xchg
out
push
je
jo
stos
mov
xor
mov
js
dec
fidivs
push
enter
mov
movsl
inc
add
in
adcb
pop
or
mov
lcall
fldenv
xchg
add
in
xor
push
aad
mov
movsl
push
test
loope
subl
mov
sub
rorl
mov
ds
rcrb
ss
xor
and
xchg
js
mov
push
stos
push
movsl
pop
leave
adc
inc
es
out
icebp
adc
and
xchg
xorb
test
lgs
arpl
xchg
inc
mov
xor
repz
cmc
adc
and
xor
arpl
xchg
inc
mov
xor
repz
fiaddl
pop
cmpsb
and
mov
mov
aad
and
inc
rorb
or
pushf
push
in
lahf
aam
add
mov
rcrb
or
pop
icebp
test
and
fdivrs
pop
dec
clc
mov
cmpb
pop
pushf
inc
subl
mov
in
cmp
in
lods
push
pop
mov
pop
dec
lea
xor
xchg
lret
push
cli
pop
sti
lret
xchg
inc
aad
or
loope
dec
jge
or
pusha
pop
xchg
push
mov
movsb
cltd
inc
scas
ret
fs
push
pop
push
ret
xchg
push
rclb
subl
lcall
cmp
es
ja
ror
push
movsb
call
inc
add
jno
popw
mov
mov
push
loope
enter
call
in
fisubl
cwtl
mov
cmp
mov
pop
in
fwait
inc
loopne
jns
push
mov
push
test
aas
imul
shll
cmp
dec
add
sub
or
fndisi(8087
jp
inc
pop
aas
cmp
xchg
in
pop
jmp
stc
es
iret
jecxz
scas
and
shlb
and
sbb
sbb
cmpsl
movsb
pop
push
repz
adc
lods
inc
jbe
lds
dec
and
jo
lods
test
clc
and
es
jbe
and
jne
jle
ds
lds
jle
pcmpgtd
pop
adc
cmpsl
push
sbb
dec
jb
cs
aaa
nop
dec
push
mov
add
pop
mov
dec
push
inc
push
fwait
mov
lods
scas
push
stc
mov
mov
lahf
pop
cmpsl
add
adc
outsl
mov
loopne
shl
push
jge
dec
or
adc
ret
ret
sbb
push
or
xor
inc
inc
xchg
in
xchg
and
rcll
leave
test
rclb
dec
xchg
imul
adc
loope
mov
popf
bound
insl
jecxz
data16
inc
mov
adc
cmp
repnz
and
das
sbb
and
ds
xor
jle
pop
fisttpll
cmpsb
leave
bound
xchg
ret
push
jns
inc
mov
in
push
cmp
jle
shlb
adcb
xchg
loopne
ljmp
rcr
loope
lds
sar
mov
and
ret
xor
or
mulb
in
cmp
adc
es
sub
xlat
das
cld
cld
sahf
jns
xor
mov
cmp
jnp
sti
ja
sub
dec
and
mov
xor
out
or
dec
imul
push
ds
iret
mov
dec
ljmp
lods
inc
sub
xchg
lea
dec
xor
sbb
adc
lcall
out
cmpsl
inc
bound
or
sbb
loopne
iret
pop
jbe
jle
or
and
fcoms
addr16
loop
test
jne
out
mov
and
mov
rol
push
aas
add
pop
nop
imull
add
fnstcw
adc
insb
pop
adc
aas
jle
add
pop
or
out
xchg
data16
push
adc
mov
mov
dec
cli
adc
xchg
repz
mov
xchg
dec
push
movsl
add
subl
xchg
and
mov
outsl
orl
repz
and
enter
sbb
xchg
fstpt
fmull
dec
add
ds
decl
out
js
popa
sub
and
dec
and
stc
xor
into
dec
addr16
inc
je
cmp
ja
push
sbb
add
sarl
lcall
adc
test
add
jae
mov
popa
pop
lcall
mov
and
mov
cmpsl
add
add
inc
push
inc
iret
popa
mov
adc
fnstcw
jle
loop
jp
xchg
aam
adc
sarl
loopne
into
jno
testb
call
jns
pop
sbb
or
daa
addl
stc
in
adc
xchg
popa
add
stos
lea
lahf
cmc
repz
outsb
xchg
dec
jmp
data16
add
and
das
int
shr
mov
int3
rcll
shrd
mov
pop
fstps
std
divl
aam
sub
pop
inc
bnd
out
cmc
push
in
mov
outsl
sahf
lcall
movsb
push
scas
mov
dec
out
call
adc
out
lods
sarb
inc
jl
and
pop
push
leave
out
js
cltd
out
inc
sub
pop
insb
jl
fisttpll
bound
and
sbb
cmpl
sbb
jg
sbb
lods
sbb
lock
fidivs
test
cld
insb
cltd
imul
mov
sbb
mov
mov
mov
xchg
enter
xor
ja
scas
mov
movsb
inc
nop
or
mov
paddusb
add
adc
gs
mov
shll
mov
add
cmpsl
repnz
aad
outsb
sub
and
jae
dec
cmp
sub
test
xor
pop
dec
arpl
xlat
ret
jg
movsl
xlat
repnz
addr16
xchg
push
add
xchg
adc
adcl
jno
xchg
lahf
xor
sbb
cmp
jno
add
les
and
pop
mov
orl
lea
cmc
cmc
or
gs
xchg
hlt
arpl
in
push
insl
repnz
in
mov
and
or
mov
ss
jb
rorl
fadd
sbb
ja
cli
cmc
mov
cwtl
or
push
fisttpll
pop
xorl
adc
stmxcsr
fiaddl
es
pop
add
cli
or
ret
dec
mov
les
push
movsl
test
jne,pt
pop
clc
mov
or
call
dec
mov
pop
std
and
shll
sbb
repnz
xor
int
and
push
cwtl
aaa
aas
mov
inc
cmp
aaa
dec
push
mov
adc
ss
inc
adcl
push
mov
out
xchg
test
and
int
push
xchg
gs
pop
mov
subb
movsb
arpl
xchg
arpl
enter
outsb
mov
mov
push
sbb
mov
clc
adc
mov
frstor
popa
sub
mov
jl
hlt
test
push
mov
mov
sub
or
cmc
mov
mov
aam
sub
inc
loop
and
rcl
mov
or
sbb
aam
mov
nop
adc
shll
mov
or
mov
or
add
adc
sbb
movsl
movsb
xchg
and
inc
mov
adc
in
testl
mov
lods
cltd
cmpsb
nop
jbe
mov
push
mov
fisttpll
aas
sbb
adc
imul
in
push
sub
or
jl
sub
push
mov
xor
loopne
push
shrb
clc
int
or
lods
mulb
add
mov
fdivrl
test
add
jg
fprem
scas
shlb
or
xchg
or
imul
nop
outsl
pop
or
mov
xor
or
andl
lcall
and
inc
push
lods
mov
addr16
mov
adc
mov
ret
inc
cmp
add
cmp
mov
mov
xchg
or
inc
xor
adc
xchg
mov
pop
inc
dec
cmp
jns
mov
dec
pop
mov
ret
lea
adc
cwtl
rol
fwait
dec
daa
fistps
outsb
cmc
push
dec
xor
dec
jge
jl
jae
jns
mov
add
repz
lcall
lcall
or
pushf
fcomps
xlat
adcl
mov
mov
adc
rorb
ror
test
or
and
inc
out
jmp
sbb
or
push
sub
or
inc
subl
data16
mov
pop
pusha
adc
mov
cs
pop
adc
xchg
or
or
push
inc
sbb
xchg
inc
jge
add
shrl
adc
xor
stos
scas
insl
and
loopne
xor
jns
xor
movsb
mov
xor
push
mov
add
stos
divb
inc
xlat
inc
pop
mov
js
into
ficompl
push
gs
dec
lds
push
sub
xchg
test
mov
jmp
pop
xchg
pop
jmp
sub
push
insl
mov
sub
xor
push
push
mov
xor
xchg
lea
inc
xchg
shrl
cmp
pop
xor
das
popf
dec
stos
hlt
pop
sub
gs
jmp
frstpm(287
xor
pop
nop
aad
xor
pop
xor
mov
jns
es
mov
cld
mulb
imul
imulb
jae
aad
aaa
shll
in
mov
lea
add
orb
inc
into
jae
sbb
lret
xchg
sbb
rorl
mov
sarb
pop
lret
pop
xchg
lahf
addb
repz
lock
pop
mov
add
xchg
xor
mov
push
pop
loope
insl
clc
call
jo
or
sbb
pop
cmpsb
mov
pop
rcrl
nop
fwait
cmpsl
add
mov
ljmp
cltd
cmp
enter
xorb
xchg
fcomp
int
sbb
fidivs
aas
mov
xchg
mov
pop
inc
mov
push
insl
sbb
add
mov
dec
jne
xchg
pushf
out
jbe
imul
push
adc
imul
ljmp
jl
mov
xchg
cli
out
aad
xchg
movnti
push
push
mov
add
mul
imul
lret
test
push
test
or
test
dec
imul
mov
lock
sbb
and
outsb
jp
arpl
fs
cltd
pop
bound
add
pop
dec
jne
mov
pop
repz
push
mov
cmpsl
xor
aam
mov
adc
dec
mov
cmp
stos
leave
xlat
mov
adc
jno
push
inc
cld
xchg
loope
mov
mov
neg
pop
xor
sbb
sbb
test
addr16
outsl
add
ja
pop
add
repnz
mov
les
addr16
mov
shll
aaa
lret
and
sbb
rclb
shrl
xlat
sub
leave
push
jg
xor
pop
dec
icebp
mov
pop
xchg
sub
ret
inc
xchg
insb
mov
lret
pop
dec
out
in
std
sub
lret
xorb
jmp
mov
pop
jns
fcomps
inc
jl
jl
xlat
psraw
std
mov
mov
sub
rorb
push
add
fbstp
and
mov
loope
ficomps
or
test
aaa
stos
add
push
fmull
scas
sub
inc
ficoms
stc
cmpb
fwait
bound
push
out
in
bound
ror
push
shrb
js
inc
shrl
xchg
movsb
lds
cmc
outsl
fldenv
push
pop
jle
adc
repz
pop
inc
mov
nop
addr16
sub
push
adc
stos
mov
bound
mov
fidivl
ss
sub
mov
lcall
cmp
movl
fdivl
fidivrs
xor
mov
push
repnz
or
mov
sahf
dec
or
add
xchg
mov
sbb
mov
cmp
outsl
sar
cmp
sbb
xor
and
pop
cmpsb
mov
lret
mov
sbb
add
push
xor
pop
add
mov
ljmp
sarl
test
and
add
dec
in
fdivrp
mov
adc
mov
lods
mov
fistl
daa
cmp
shll
ja
movswl
or
pop
out
xchg
dec
add
imul
loope
movsb
enter
inc
popa
xchg
hlt
mov
pop
fildll
imul
je
dec
pop
sub
scas
in
or
adc
xor
mov
imul
ret
cmpsb
lret
jle
pop
push
mov
push
dec
add
ret
mov
mov
and
pop
add
aad
lcall
rcll
lods
pop
and
mov
daa
mov
sarl
xchg
inc
mov
sbb
mov
pushf
clc
aaa
mov
xlat
inc
aaa
lds
lea
jmp
aad
lock
test
jnp
pusha
xchg
inc
mov
cmp
clc
filds
ja
dec
sbb
in
mov
imul
mov
sub
mov
xchg
sub
cmp
jecxz
mov
dec
pop
shl
sti
rcrl
xchg
rcrb
push
pop
ds
int3
add
int3
mov
je
loope
icebp
or
cmp
inc
inc
nop
fmull
jnp
repnz
dec
ds
pop
push
add
push
std
pop
xor
push
push
mov
adc
push
scas
fsubp
pop
inc
inc
aam
ret
out
lret
and
cmpsb
pop
xchg
out
xchg
cmp
jbe
inc
mov
in
mov
pop
fisttps
push
in
es
xor
push
lds
mov
mov
mov
or
pop
sti
lahf
cli
mov
sub
mov
push
lods
sub
push
xor
iret
pop
mov
push
repz
jecxz
rolb
cwtl
repnz
cmp
icebp
subb
pop
xchg
pop
push
repnz
cmpsl
outsl
xchg
mov
push
outsl
mov
push
repz
and
cwtl
scas
inc
scas
pop
or
xlat
xchg
mov
in
xor
out
jbe
sbb
sahf
push
jp
lods
ret
push
in
sbb
rcll
mov
inc
cmp
jns
push
pop
sub
jne
cltd
lret
outsl
lahf
adc
xchg
lock
add
xor
popf
movsl
js
into
in
mov
or
xchg
push
push
cs
aam
mov
xorl
xchg
pop
or
imul
mov
test
int
sub
nop
dec
iret
xor
mov
lcall
adc
movsl
fadd
xor
push
push
mov
into
pop
pop
inc
shll
mov
stos
fs
jp
fdivrl
push
out
mov
sbb
into
stc
vprotd
aaa
mov
std
mov
mov
test
or
pusha
iret
lcall
mov
aam
mov
push
lret
out
push
fs
pusha
repz
or
mov
fcmovb
aam
jmp
cmp
adc
pop
jp
andb
stc
fwait
lods
push
lds
into
repnz
inc
fwait
into
cmp
pushf
jne
jb
out
xor
mov
cltd
addb
hlt
or
xor
sbb
pop
in
add
cmp
jecxz
or
xor
nop
mov
loope
stos
cs
pop
lods
sub
std
jno
mov
push
scas
jp
pop
xlat
fldcw
iret
sub
insl
test
lcall
xchg
add
scas
cwtl
fiaddl
lret
mov
pop
rol
rclb
or
jbe
xchg
mov
adc
push
outsb
movsb
loope
pushf
cmp
push
test
sbb
and
lcall
icebp
lods
aam
int
call
rcrb
xor
sub
into
mov
dec
inc
xchg
imul
int3
xor
inc
adc
or
movsb
mov
iret
push
jo
add
jmp
nop
shll
mov
scas
rorb
data16
xor
into
xor
mov
push
mov
sbb
gs
decl
sub
lods
mov
xor
sti
sbb
mov
insb
dec
sbb
pop
mov
jmp
sub
pop
femms
inc
cwtl
je
mulb
push
ds
test
pop
enter
outsl
stos
fists
jle
sub
orl
mov
xchg
push
leave
and
xor
and
je
mov
xchg
adc
leave
cmpsl
fnstenv
xor
and
jne
xchg
mov
pop
jbe
ds
es
pop
bswap
adc
jns
mov
rcrb
pop
mov
push
repz
and
xchg
mov
dec
mov
dec
stos
push
mul
mov
inc
push
inc
jge
outsl
push
into
lret
mov
imul
mov
cmp
jp
push
aaa
cmpsb
or
insl
push
cld
xchg
adc
pop
addr16
pop
lds
pop
popa
fisttpll
mov
bound
xchg
out
ja
leave
enter
out
outsb
hlt
push
faddl
dec
push
jmp
js
lock
loop
add
movsl
dec
mov
cwtl
jns
arpl
push
mov
clc
lcall
and
test
dec
push
int3
pop
push
loop
loopne
jmp
push
addb
mov
xchg
add
cmp
sbb
into
push
or
bnd
lahf
aas
mov
lods
jp
test
push
dec
mov
mov
cmp
push
mov
out
xor
pop
pop
xor
insl
jnp
mov
pop
das
sub
pop
jmp
inc
and
in
rorl
mov
into
jge
cmpb
jmp
add
fdivl
lods
pop
mov
outsl
mov
inc
popf
in
outsb
dec
lds
in
jl
loop
xchg
stos
aas
push
aam
adc
pushf
or
mov
out
andb
addr16
mov
lock
xchg
outsb
adc
jl
jmp
cld
fbld
sbb
je
xchg
std
test
cmp
scas
jo
out
scas
cs
adc
jns
jge
subl
jle
lahf
pusha
push
insl
mov
iret
push
rcrb
jp,pn
rcl
lret
push
pop
cmp
jg
inc
cs
pop
xchg
out
dec
test
mov
dec
xorb
fisubrl
pop
nop
pushf
cmp
pop
adc
mov
ss
outsb
lea
or
ja
gs
lret
cmc
mov
and
push
push
xchg
shll
fimuls
xor
sbb
fmuls
jp
push
ror
xor
shrb
lock
lds
pop
filds
push
scas
xchg
xchg
addr16
pop
mov
add
js
shlb
push
xchg
xor
addr16
jg
int3
lret
int
xchg
std
sub
xor
leave
ja
inc
push
nop
push
push
pop
push
rolb
mov
add
or
lret
fs
mov
xchg
push
insb
push
xchg
mov
mov
cmp
popa
lea
xor
cld
gs
cs
cmp
or
out
clc
fs
fidivrl
or
mov
xchg
dec
pusha
mov
adcb
mov
add
mov
ds
jl
fucomp
dec
inc
or
jno
outsb
and
dec
or
xor
out
fimuls
jge
adc
xchg
mov
outsb
mov
mov
push
imul
sub
push
cltd
lcall
out
insl
pop
pop
scas
jge
push
in
movsl
sub
lods
dec
mov
scas
xchg
mov
mov
xchg
imul
femms
repz
sbb
popa
sub
xor
push
sbb
jecxz
add
cwtl
pop
pop
jbe
and
testl
sub
inc
in
sub
xchg
mov
mov
mov
ja
mov
add
mov
dec
mov
popa
out
jno
or
mov
ror
adc
mov
cmp
xchg
pop
psllq
mov
int3
cmpsb
std
jae
adc
out
enter
mov
mov
sub
and
mov
mov
in
mov
push
fs
and
push
sahf
insl
mov
dec
xor
jae
nop
pop
and
pop
cmc
mov
and
dec
pop
decb
xchg
cmp
popf
and
pmaxub
cmp
sbb
inc
inc
sbb
cld
out
mov
inc
jmp
inc
cli
lds
outsb
xor
mov
outsl
xchg
or
arpl
push
cmp
scas
popa
mov
rolb
stos
ja
fcmovbe
ljmp
mov
pop
xor
enter
inc
pop
mov
mov
sub
enter
sub
mov
sub
subb
shll
xchg
icebp
mov
insb
aam
enter
movsb
xor
mov
test
jle
push
rclb
sbb
mov
nop
lds
rorl
push
sbbb
xor
jg
shlb
js
xchg
lret
dec
jno
push
ljmp
int
and
xchg
or
mov
push
push
dec
pushf
pusha
nop
loope
neg
adc
push
sbb
mov
dec
inc
cmp
in
daa
ljmp
push
inc
xchg
int3
mov
push
sbb
dec
cmp
adc
cltd
jl
out
add
data16
lret
push
out
jg
dec
frstor
sub
imul
sbb
pop
sub
inc
sub
push
adc
stos
test
push
movsb
and
mov
pop
mov
or
adc
es
movsl
inc
mov
test
jae
xorl
mov
xor
repz
cmc
adc
and
xor
arpl
xchg
inc
mov
xor
repz
cmc
sbb
movsl
inc
mov
test
jae
xorb
mov
xor
add
out
test
inc
mov
add
jl
cmp
mov
mov
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jae
cmp
or
sbb
jbe
or
imul
mov
fwait
leave
fnstcw
ds
cmp
cmp
sbb
imul
mov
jle
push
clc
push
leave
insb
fnstcw
xor
and
adc
add
jo
pusha
sahf
push
scas
dec
mov
in
in
jle
dec
mov
mov
into
cmp
popa
dec
test
je
mov
inc
cmp
popf
leave
add
cld
sub
or
scas
or
nop
pusha
cmpsb
inc
mov
push
jnp
repnz
xchg
cmp
inc
sbb
xchg
daa
add
pop
out
inc
push
stos
mov
mov
push
bsf
arpl
push
mov
fldt
pop
jmp
insb
sahf
mov
xchg
shll
mov
stos
loope
shll
mov
cs
and
insl
add
mov
cmp
pushf
xchg
cltd
mov
inc
shll
mov
pop
cmp
inc
mov
test
cmp
jbe
cwtl
jg
sbb
fldcw
cmp
aas
jmp
out
push
jns
arpl
mov
mov
jle
push
loope
leave
rclb
pop
fisubrs
xchg
or
loopne
out
mov
cmp
sub
jg
into
cmp
insb
out
sbb
fstps
stos
ss
adc
fldcw
xchg
lea
fwait
adc
pop
mov
mov
jle
push
stc
push
leave
fnstcw
sub
cmp
or
sbb
imul
mov
jle
push
stc
push
leave
fnstcw
sub
cli
xchg
push
pop
jno
inc
inc
outsl
leave
stos
ja
stos
xchg
cli
push
or
loop
out
cmp
xorb
push
inc
ret
loope
jb
mov
lea
inc
mov
call
mov
push
xor
jns
and
and
sbbb
mov
mov
imul
sub
add
jne
cmpsb
xchg
addr16
cs
or
add
cmpsl
das
mov
xor
sti
aam
dec
push
mov
mov
je
fmulp
bndstx
rorb
out
pushf
xor
in
out
pusha
mov
mov
js
popl
xchg
xor
dec
lcall
xadd
leave
movsb
or
cmpsl
lock
or
jle
mov
cmpsb
mov
cltd
out
adc
mov
rcrb
adc
testb
push
xor
popa
fimuls
mov
shll
mov
sarb
iret
sbb
xor
mov
adc
add
hlt
sbb
popa
test
inc
shrl
or
gs
mov
xor
loopw
adc
jge
cs
xchg
cld
dec
aas
sbb
ficomps
repnz
ret
lods
and
xor
cmp
push
movsl
mov
push
pop
out
mov
loop
pushf
adc
cmp
push
push
cmpsl
pushf
sbb
movl
dec
out
xor
push
scas
sbb
test
insb
xchg
add
incl
dec
jo
and
push
test
pop
push
jmp
sarb
jns
sub
push
lods
or
pop
add
mov
pop
cld
mov
fstpl
fidivrl
jg
mov
pop
insb
push
jmp
fdivrs
lods
es
lahf
sub
daa
ret
cmp
push
or
imul
xor
adc
push
mov
mov
xchg
int3
dec
aam
add
icebp
addr16
jno
push
adc
cmp
adc
sub
xchg
cmp
cmpsl
cmpsl
jmp
cli
pop
mov
adc
js
or
daa
mov
and
push
adc
aas
das
mov
add
sub
movsl
mov
add
sbb
mov
outsl
pop
arpl
or
add
mov
lret
cmc
push
cmc
mov
shlb
push
mov
inc
fwait
decl
add
jge
or
push
dec
stc
push
je
lea
xor
mov
xchg
pop
jno
in
xor
jl
dec
outsl
pop
pop
dec
fisubrl
mov
icebp
imul
loope
ret
dec
das
sub
rolb
mov
imulb
addr16
sbb
mov
adc
bound
sub
addr16
out
lock
pop
xchg
ss
cld
or
and
lock
dec
test
xor
pop
repz
rcrl
addb
cmp
cmp
fstpt
jne
jge
out
or
jb
mov
lods
lds
or
cltd
cmc
insl
fstps
icebp
add
cmpsl
xor
mov
or
leave
fdivr
xor
into
out
push
es
mov
xchg
mov
mov
mov
xchg
loopne
insb
inc
mov
push
and
lods
inc
in
pop
pusha
lds
popl
mov
cs
mov
sbb
stos
and
hlt
sarb
cmpsl
mov
cmp
icebp
xchg
data16
jne
aad
push
shlb
rclb
cli
vmovd
jle
xor
lcall
mov
jmp
cltd
aas
adcl
arpl
sti
mov
fs
jns
jo
int3
pushf
in
imul
adc
push
inc
test
sbb
mov
sahf
add
int
icebp
iret
data16
leave
mov
sarl
in
or
ret
inc
push
cmpsl
int
xor
jp
sbb
push
sbb
nop
dec
mov
mov
sbb
in
mov
add
push
dec
aaa
mov
pop
xchg
lahf
fidivrs
dec
pop
pusha
fisubrs
cltd
mov
mov
jo
add
iret
pop
pop
xchg
sbb
mov
rcrl
xchg
cmp
and
dec
aaa
push
xchg
lret
arpl
shrl
xchg
pop
push
cli
aam
int3
or
mov
dec
scas
test
inc
in
mov
or
mov
testb
lock
dec
idivl
mov
je
enter
push
lcall
mov
fsubr
inc
push
popa
loopne
cmp
pop
in
aas
pop
xor
hlt
xchg
lret
xchg
int
shlb
lods
pop
xor
out
and
or
mov
add
mov
xor
cmp
xchg
adc
sahf
sbb
fwait
mov
pop
cmpb
mov
sub
or
mov
sub
add
shr
adc
shlb
xchg
or
xchg
push
into
push
jmp
mov
push
xchg
movswl
push
xor
mov
insl
insb
pop
rorb
or
push
movsb
rolb
fistps
sbb
mov
xor
daa
das
shl
mov
pop
mov
inc
inc
jle
aad
sbb
mov
sub
adc
into
aad
fsubrs
dec
cmp
dec
outsb
jnp
repnz
sbb
sahf
jno
bsf
rcl
out
lock
jecxz
lods
jp
inc
inc
adc
mov
lods
pop
mov
and
shl
insb
add
adc
aam
push
jg
js
in
push
pusha
pop
push
scas
pop
int
add
sub
hlt
pop
add
fisubl
addb
xchg
push
mov
imul
movsl
inc
xor
or
aas
and
mov
xor
aaa
je
adc
xchg
insb
cltd
sbb
pop
mov
fcmovu
lret
test
pusha
cmc
int3
scas
mov
stos
ljmp
add
sub
loop
lcall
pushf
fucom
jnp
outsb
pop
sti
aas
jmp
fimuls
or
inc
xor
xchg
testb
fwait
inc
in
push
xlat
xchg
pop
es
mov
ss
loope
dec
adc
iret
mov
adc
xchg
aam
pop
fmuls
ror
pop
mov
rorl
lcall
and
push
sub
mov
jae
jns
xor
cmpsb
add
rcrl
mov
sbb
mov
xchg
in
movsl
movsl
mov
sub
js
cmp
adc
sub
or
sub
je
test
inc
imul
fmuls
mov
pop
push
addl
pop
cld
mov
dec
inc
out
repz
mov
push
push
or
jge
add
shlb
scas
fmull
cmpsb
je
iret
sbb
outsl
fdivrl
pop
jl
cmpsb
shrb
popa
adc
cli
lods
push
mov
and
xchg
std
mov
mov
cwtl
loop
jnp
cmp
mov
fbstp
fstps
cmp
ret
stc
jo
add
pop
mov
xorb
pop
data16
stc
push
das
or
in
arpl
mov
xor
test
nop
sub
enter
in
mov
sahf
mov
xchg
dec
stos
push
cmp
mov
adc
jp
sub
lcall
xchg
ja
popl
inc
mov
pushf
clc
push
pusha
and
xor
xchg
aam
adc
xor
ja
test
movsb
sub
int
cltd
fs
jecxz
mov
lret
les
fwait
xchg
je
rolb
popa
sbb
sti
mov
or
cmp
cmc
adc
sbbl
popa
sbb
loopne
fisubrs
rolb
in
inc
or
dec
xor
pop
pop
adc
pop
jmp
dec
cmpl
fwait
movsl
fadds
add
sarb
js
jmp
mov
in
iret
lcall
daa
xorl
push
and
ljmp
mov
mov
pop
ret
lods
in
mov
or
adc
sub
adc
fucomp
mov
push
cmp
in
stc
mov
sbb
sub
xor
imul
sub
sbb
dec
add
mov
mov
xlat
jecxz
add
or
iret
inc
call
mov
or
loope
inc
mov
dec
inc
hlt
adc
inc
inc
dec
jo
inc
sahf
sbb
int3
cmp
rcr
enter
pop
xlat
jo
mov
ret
adc
mov
mov
dec
mov
leave
addr16
mov
iret
mov
sbb
shl
sbb
sub
dec
into
ja
push
test
imul
mov
pop
mov
pop
sub
dec
mov
mov
popa
fistl
aam
dec
pop
rcrl
and
lods
cmpsb
inc
fsubr
pop
addl
sub
call
lods
mov
loop
push
jecxz
je
adcl
ror
into
sub
mov
sub
mov
sbb
stos
fsubrs
fistps
nop
dec
cmp
add
icebp
adc
jg
iret
loopne
sub
scas
scas
cmpsb
push
aas
cmp
pop
mov
xor
repz
fsubs
int
push
je
mov
mov
leave
cmpsb
mov
xor
jae
aad
ja
in
push
pop
test
ret
jl
fnstenv
or
loop
adc
stc
pop
cwtl
hlt
aam
lahf
pop
sahf
add
jns
das
cmp
push
pop
stos
pop
icebp
fiadds
xchg
mov
in
icebp
push
add
shrb
jb
jb
lcall
or
mov
lret
cmp
push
sub
std
xor
pop
insb
stos
xor
icebp
test
sti
xorl
add
dec
test
fiadds
inc
cltd
iret
in
ja
jo
dec
mov
movsb
loopne
mov
lret
subl
decl
fmull
cmp
push
jnp
jecxz
cs
nop
sahf
xor
cmp
cmpb
lock
jecxz
mov
pop
jno
aam
xchg
out
pop
fldcw
push
jp
dec
loope
fwait
cmp
cs
inc
inc
xchg
cmp
jecxz
dec
sub
in
or
jmp
mov
cmc
bound
sbb
test
inc
jmp
jo
pop
test
jecxz
loopne
dec
adc
imull
xchg
xchg
cmpsb
jae
inc
adc
dec
mov
add
les
push
push
pop
adc
lret
cmp
outsb
push
or
or
loope
dec
fstl
imul
ja
dec
stos
int
sbb
pop
jae
mov
mov
fistpl
cmpb
cli
nop
sub
pop
loop
in
adc
mov
loop
cmpsl
mov
bound
arpl
jl
cs
mov
mul
mov
into
and
stos
and
xchg
lret
jbe
and
inc
and
sbb
sub
jmp
mov
jns
sub
adc
orl
push
arpl
sub
ret
dec
pop
stos
frstor
pusha
pop
lock
fnstcw
push
adc
in
jl
rcr
xchg
mov
and
adc
hlt
push
stc
sarb
lret
sub
xor
decl
sub
cmp
pop
cmp
jp
push
int
push
adc
adc
xchg
je
pop
leave
or
ret
cmpb
jle
repz
push
push
dec
div
sbb
add
ss
sub
cmpsb
pop
push
push
cli
mov
sbb
sub
shrb
push
and
mov
inc
jne
push
sub
popa
sti
mov
or
xchg
clc
inc
sbb
adc
jp
fsubs
fcom
aad
cmp
cli
mov
and
fdivs
je
inc
xor
jg
test
sub
mov
std
xor
into
inc
aas
inc
or
loop
movsb
pop
adc
imul
mov
mov
in
mov
imul
cmp
ret
fwait
stos
mov
mov
shr
adc
stos
imul
xor
mov
jbe
negb
pusha
je
stc
js
sbb
mov
pop
and
jbe
jns
sbb
jmp
out
lahf
shll
pop
das
xor
adc
sub
test
leave
loopne
lods
xchg
cwtl
pop
add
fwait
xchg
out
rorb
xor
xlat
sub
dec
jne
testb
sbb
cmp
addl
or
mov
xor
popa
notb
out
push
lods
or
mov
or
xor
test
test
test
jl
stc
ret
call
imul
lcall
in
inc
imul
lods
mov
outsl
pop
cmpsl
daa
aam
pop
shll
lock
stos
mov
mov
fwait
xchg
pop
cmp
mov
push
fwait
cld
fcmovb
out
sbb
add
cli
sub
ret
xor
pop
inc
movsl
mov
dec
or
pop
test
insb
sarl
cmp
xchg
bound
lahf
and
fstpl
mov
adc
sub
sbb
push
jbe
nop
push
xchg
sbbl
jb
mov
dec
inc
xor
pop
cltd
xor
insl
ret
aad
xor
stc
mov
test
fists
aad
icebp
insl
loop
shl
add
push
xor
fistl
jb
pop
cmp
fisubrl
repnz
xchg
adc
movq
xchg
jns
in
mov
jnp
jmp
mov
mov
mov
in
push
in
outsw
mov
or
dec
mov
and
loop
aas
pushf
mov
lock
sub
jno
sub
push
or
lret
lret
inc
push
data16
sub
mov
and
orl
arpl
addr16
or
sahf
cs
xchg
push
push
xor
jp
aad
cmc
pop
push
push
repz
aam
mov
ljmp
scas
sub
jmp
inc
adc
xor
not
lods
sub
adc
stos
fistpll
lret
xchg
clc
scas
push
push
fwait
test
sbb
inc
leave
pop
pop
mov
stc
outsb
cmpsb
xchg
xor
mov
push
aas
dec
sub
clc
stos
jbe
arpl
jb
pop
jns
push
pop
lret
filds
mov
inc
push
loope
mov
push
cmp
or
out
sub
stc
or
fsts
sbb
mul
dec
outsb
loop
xor
aaa
push
xchg
pushf
jp
cmp
xor
mov
xchg
push
shll
test
push
sub
jg
addr16
add
add
lret
pop
outsb
and
pushf
sub
push
lret
mov
xchg
jno
cmp
je
push
push
mov
outsb
icebp
sbb
ds
popf
in
sub
shll
dec
lds
xchg
hlt
popa
xor
rol
shrl
pop
sahf
call
push
sub
pop
icebp
pop
mov
js
push
ds
push
add
rol
dec
xchg
mov
pop
mov
jbe
lret
in
loop
cwtl
dec
jo
xchg
pop
insb
in
xor
pop
repz
push
vpsubusw
lds
out
pop
add
jno
call
pop
in
xchg
cmc
add
adc
dec
pop
sbb
xor
testb
and
inc
xchg
mov
ds
lds
cli
daa
jecxz
sbb
mov
dec
dec
fwait
loop
and
loop
imul
jge
shll
ja
or
xorl
cmp
and
inc
stc
mov
or
dec
cmc
mov
lcall
outsb
mull
test
dec
sub
movsb
jo
pop
jmp
mov
lds
jb
or
ret
addr16
cs
inc
xor
in
and
mov
cmp
xorl
mov
in
sbb
mov
jne
outsb
std
sub
mov
pop
pop
pop
push
mov
mov
xchg
jo
dec
adc
pop
call
jns
mov
jae
leave
cwtl
push
cmpsb
mov
je
enter
mov
sbb
adc
fnsave
pop
fs
imul
mov
mov
add
movsl
inc
movl
pop
mov
pushw
ret
xchg
xchg
adc
invlpg
mov
sbb
fwait
nop
xor
inc
ljmp
xchg
push
je
mov
pop
popf
sbb
cs
in
idivb
adc
and
aas
xor
xor
ds
mov
jb
xchg
insb
sahf
xchg
pop
mov
dec
dec
cmp
shlb
sti
jnp
jecxz
mov
daa
jg
test
std
aad
adcb
mov
inc
out
add
add
pop
add
push
sub
and
cli
loope
add
sbb
mov
mov
fistps
adc
adc
sbb
mov
dec
mov
and
jne
mul
pop
mov
mov
mov
pop
arpl
lahf
aam
pop
arpl
pop
insb
fcoms
scas
in
sub
push
in
dec
es
arpl
aaa
jp
clc
sahf
mov
shr
imul
das
test
call
stos
cmpsl
ficoml
int
clc
and
jae
push
fsubrl
sbb
jb
fcmovnu
push
or
sub
or
jb
pop
call
mov
lock
rolb
dec
out
jb
in
popa
mulb
in
fisttpll
jmp
subb
lret
xor
xor
or
clc
xchg
stos
xchg
scas
cs
mov
loope
movsb
ljmp
xlat
frstor
xchg
data16
negl
adc
out
mov
mov
xor
out
mov
dec
pushf
int3
and
adc
scas
call
loope
mov
dec
shlb
movsl
adc
xchg
arpl
int
or
push
sub
pusha
mov
sbb
inc
imul
movsb
pop
lcall
add
jae
push
pop
sbb
jle
loope
mov
enter
dec
js
fldcw
lahf
ret
and
inc
je,pn
xchg
mov
and
test
inc
in
aad
dec
imul
mov
mov
js
sar
xchg
test
hlt
jecxz
cmp
aad
fisubrl
lods
dec
shl
pop
je
mov
xchg
cmp
mov
sbb
xchg
les
mov
push
fidivs
sahf
ja
clc
int3
dec
pop
xlat
lahf
sub
test
push
push
loope
inc
ljmp
pop
mov
jnp
mov
lcall
out
cmc
mov
pop
pop
jp
sub
sbb
test
idivl
push
add
adc
out
adc
dec
or
inc
jl
mov
cmp
dec
push
insl
fwait
imul
lods
cltd
pop
lret
mov
pop
pop
push
dec
sbb
mov
clc
addr16
mov
inc
clc
jmp
addr16
xchg
mov
xor
mov
xor
xchg
push
and
lods
je
imul
int
sbb
imul
and
jne
inc
jl
xchg
das
les
out
cmp
outsl
sbb
push
frstor
mov
and
and
fs
xor
jbe
mov
outsb
cmc
jle
popa
mov
lods
hlt
mov
or
arpl
cmpsl
notl
pop
mov
fwait
das
add
xlat
fistpl
sub
jecxz
adc
sahf
mov
cli
add
je
sbbl
cltd
daa
xchg
pop
jg
test
xorl
data16
pusha
and
loope
sub
xchg
sti
push
mov
adc
xchg
or
outsl
or
jge
outsb
repnz
scas
and
test
fnstcw
sbb
add
sbb
stc
xchg
xorl
das
pop
pusha
mov
ficomps
scas
push
mov
idiv
sbb
push
cld
pop
or
push
faddl
scas
cmp
sbb
aaa
test
rolb
or
mov
or
cmpsb
ret
sbb
xlat
pop
push
mov
fdivrp
adc
cli
sti
pusha
vmovaps
inc
inc
data16
pop
mov
mov
icebp
add
test
leave
es
xor
inc
xchg
dec
nop
pop
scas
adcb
cld
push
ds
call
sti
cmpb
dec
xor
je
addr16
aas
jmp
sbb
outsl
aam
or
or
sahf
movsb
ret
mov
cmp
test
sub
movsb
add
js
into
adc
inc
test
cwtl
cmp
adc
incb
leave
dec
adc
incb
test
mov
mov
push
mov
test
and
cmp
cmp
decb
je
adc
and
data16
and
sub
sbb
inc
je
or
cmp
scas
xor
inc
icebp
mov
decl
imul
inc
and
sbbl
sbb
imul
mov
jle
push
stc
push
leave
fnstcw
sub
cmp
or
sbb
imul
mov
jle
push
stc
push
leave
fnstcw
sub
cmp
outsb
sbb
imul
mov
jle
push
std
push
leave
cs
fidivrs
out
sbb
imul
inc
hlt
and
or
shll
rcll
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jbe
xchg
mov
mov
add
jmp
stos
add
sub
dec
fldt
push
sbb
imul
clc
dec
call
mov
mov
sti
cmp
push
popf
mov
and
ja
mov
mov
dec
ljmp
cs
loope
int3
jl
lock
adc
dec
sub
cmp
jle
mov
je
test
xor
lds
xor
ss
iret
pusha
aas
cwtl
push
loopne
sub
jle
jp
pop
js
and
sbb
mov
repz
enter
add
popf
push
enter
lods
add
dec
sub
push
mov
pop
cwtl
jp
xchg
or
dec
pop
scas
dec
clc
testl
repnz
mov
inc
lret
dec
test
call
jmp
fs
sub
xor
lds
xchg
sub
mov
xchg
sub
ret
inc
sbb
lcall
cmp
or
addr16
fsubrs
enter
icebp
dec
add
adc
xchg
xor
js
or
std
pop
mov
gs
dec
xchg
sub
lret
insl
ljmp
js
add
pop
enter
stos
or
aaa
pushf
cmp
dec
out
mov
mov
scas
adc
or
imul
fnstsw
mov
enter
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
mov
push
mov
jg
mov
test
lods
jae
pop
sub
les
ljmp
mov
sbb
or
pop
xor
mov
jle
xor
or
shll
pop
pop
xor
or
pop
pusha
fildll
daa
call
shl
dec
jo
cmc
push
adc
mov
mov
ret
lock
mov
mov
inc
fxch
jmp
push
cmp
cmp
aas
or
ficompl
xchg
dec
mov
xor
xchg
xchg
jl
mov
and
and
sub
ret
vcvtss2sd
repnz
mov
ja
scas
das
pop
or
pop
test
adc
mov
xchg
or
mov
add
sub
jae
shrb
or
nop
mov
or
daa
pop
xor
fistl
scas
aas
or
int3
clc
lahf
adcb
push
fldt
in
add
mov
jbe
into
jne
add
dec
jnp
cltd
jle
sub
inc
mov
je
add
and
add
inc
add
movsl
pop
clc
shlb
dec
jg
cmc
push
test
pop
dec
in
test
mov
shrl
push
bsr
jecxz
movsb
sbb
ret
test
or
or
or
mov
shll
push
addr16
push
popa
push
sub
sub
push
mov
dec
mull
dec
mov
pop
and
iret
dec
or
shl
sbb
repnz
mulb
cmp
cmp
mov
fcomip
adc
push
loop
das
lea
add
sub
lods
jb
mov
mov
dec
imul
popa
cld
xchg
aam
push
jae
jge
ja
dec
lahf
aam
lods
push
andb
in
out
adc
jno
cli
and
shll
sbb
dec
pop
pop
xchg
xor
adc
pop
out
dec
add
sub
add
mov
ja
mov
cmpsb
popa
lods
cmc
cmpsl
gs
iret
cmpl
test
ret
jnp
das
sbb
or
mov
jns
or
les
inc
call
inc
and
aaa
push
push
dec
in
out
inc
mov
push
add
adc
pop
push
ficoms
out
pop
rcrb
push
xchg
imul
inc
inc
mov
in
ret
fisubl
in
sbb
inc
pop
and
add
cmp
jb
pop
fcoms
mov
bnd
test
stc
cmp
mov
arpl
aad
inc
stos
sub
pop
adc
sub
adc
add
jmp
clc
scas
call
loop
mov
aam
fcmove
xor
sti
shrb
insl
fidivrl
sub
xchg
negl
cmp
xchg
xchg
in
in
dec
and
add
in
jno
jp
pop
scas
add
pop
xchg
aas
aaa
dec
loope
or
dec
cmp
clc
fsubs
fcomps
insl
mov
add
mov
js
hlt
hlt
adc
loopne
gs
jae
sbb
mov
pop
mov
test
insl
xchg
push
pop
fnstenv
popa
add
or
xchg
xor
sub
mov
popa
xchg
insl
fcomp
or
lds
jb
or
adc
adc
pushf
jmp
push
cmp
jmp
sub
punpcklbw
mov
test
adc
js
lahf
mov
repnz
mov
outsl
add
jne
loopne
mov
into
mov
insl
out
inc
adc
inc
popf
or
sub
add
and
stc
jp
jg
mov
add
mov
ljmp
fstps
xor
repz
pop
sub
sbb
mov
mul
in
pop
cmp
imul
or
out
sub
leave
jg
std
sbb
cmp
ja
clc
push
ret
sti
mov
fs
rclb
jle
ja
push
lock
cmp
pop
mov
sbb
divl
mov
mov
bound
dec
mov
xor
inc
push
rcll
push
clc
sub
sarb
push
xor
in
xlat
into
mov
lahf
leave
mov
lcall
aaa
inc
cmp
shrl
pop
rcrl
or
xchg
dec
mov
dec
dec
adc
iret
sub
in
out
cwtl
hlt
mov
adc
hlt
fwait
xor
scas
jae
outsl
xchg
int
mov
mov
in
mov
stc
lret
mov
xchg
loope
cli
stc
pop
inc
ret
test
int3
pop
lods
pop
sahf
push
pushf
adc
aam
movsl
xor
test
ja
mov
call
outsb
mov
xchg
aam
cmpb
dec
add
mov
push
mov
pop
jmp
or
jae
jecxz
and
out
rcrw
rorb
out
loop
inc
cmpb
jg
aas
jg
mov
stos
dec
xchg
cld
rcrb
push
bnd
repnz
or
and
sbb
sub
cmp
add
dec
lds
lds
cmp
fst
jb
cmp
cld
dec
fimuls
mov
xchg
inc
pop
test
dec
push
inc
mov
push
sbb
cmpsb
rorl
sub
dec
sub
pop
push
xchg
pusha
mov
cli
push
fld
bound
repz
or
fwait
and
xchg
jbe
sbb
sub
and
into
fisubrs
aam
popa
je
cltd
pop
dec
fcomi
insb
inc
mov
sbb
cmp
cli
and
dec
add
pop
fistpl
scas
lock
sub
xor
xorl
xchg
sbb
xor
test
roll
mov
inc
ss
push
outsb
sub
cmp
xchg
and
sub
fildll
mov
cmpsl
bound
lret
or
pop
inc
jle
mov
xchg
icebp
or
mov
push
dec
xor
cmpsb
pop
dec
xchg
cmp
pop
cmpb
popf
cld
mov
dec
ss
aam
aas
xchg
inc
ret
fdivrs
jne
adc
aaa
adc
mov
pop
loop
push
pop
sub
cmc
mov
xor
pop
cmp
mov
push
jns
push
shrl
xchg
loopne
stos
sub
cltd
sarb
sub
jecxz
push
jne
stos
cmp
xorl
jecxz
mov
jmp
icebp
mov
mov
adc
dec
rolb
in
mov
imul
push
pusha
repnz
pop
stos
mov
inc
cltd
push
test
imul
sub
fnsave
aaa
add
pop
pop
nop
rcrl
mov
hlt
cmp
repnz
bnd
ds
and
in
ss
loopne
popf
fiadds
clc
imul
mov
mov
inc
push
ja
cmp
lods
sub
dec
sub
mov
mov
xchg
dec
jb
push
insl
dec
mov
fmul
xlat
test
cmp
cmp
in
adc
pop
sbb
in
push
and
bound
xchg
push
push
inc
mov
pop
rcrl
fisubrs
mov
outsb
fnsave
sbbb
mov
jne
insl
in
fnstcw
repz
mov
xor
ljmp
adcl
iret
xchg
insl
sbb
jo
xor
andb
or
hlt
mov
jno
cmp
pop
cmp
push
mov
or
outsl
roll
cmp
stos
imul
std
mov
dec
int3
int3
push
or
fs
push
mov
inc
and
inc
stc
popa
mov
aaa
mov
xchg
add
sbb
ja
dec
iret
jns
mov
ljmp
icebp
and
cli
cmp
cs
xor
jns
dec
jbe
loop
xor
xchg
mov
sbb
pop
mov
test
push
divb
sub
adc
or
adc
clc
insl
inc
pop
mov
popa
and
loop
pop
cli
and
lods
sahf
sbb
mov
push
mov
inc
neg
imul
adc
dec
fidivrl
in
pop
cmp
jae
or
nop
outsb
es
lret
adc
sbbl
inc
inc
gs
movsb
inc
ficoms
out
rolb
stc
es
pop
out
mov
and
push
fnstsw
push
add
pop
sub
pop
mov
mov
cld
insl
test
adc
je
sbb
test
dec
lods
cmpsl
out
mov
outsl
andl
mov
ss
ljmp
stc
into
push
aas
inc
out
ss
call
dec
lahf
cwtl
dec
cmp
ds
lea
inc
xorl
and
jle
mov
mov
adc
call
out
rcrb
add
inc
mov
xor
or
fstps
add
push
ret
inc
das
leave
js
movsb
sahf
mov
xchg
lea
add
cld
xor
cwtl
popf
add
push
in
xchg
and
lods
mov
les
test
in
jmp
add
addr16
clc
stos
icebp
out
add
fsubrl
pop
and
cmp
cmp
hlt
sub
pop
dec
popf
add
out
std
mov
dec
sub
js
mov
pop
pop
add
push
jo
jl
mov
xchg
shlb
or
aad
push
push
cmp
pop
jbe
pop
in
fildl
sub
mov
inc
mov
push
sub
push
pop
inc
test
jns
enter
or
stc
inc
repz
fiadds
insb
js
jb
stos
mov
insl
and
in
push
adc
pop
adc
add
loopne
enter
aam
sbb
push
jo
xchg
jp
nop
dec
insb
add
push
dec
inc
imul
jb
cmp
mov
xchg
sbb
ss
xor
mov
mov
imul
cmpsb
jge
push
mov
in
xchg
into
sub
fisttps
test
inc
call
dec
int
outsb
ret
pop
jo
test
xchg
fsubrp
sub
lods
ljmp
mov
insl
mov
dec
mov
in
jae
push
mov
or
jle
int
sbb
popa
into
dec
or
mov
xchg
arpl
jns
dec
or
mov
mov
add
stos
add
cmpsb
inc
dec
sub
adc
mov
pop
jl
dec
mov
pop
lea
repnz
xor
jb
scas
mov
sbb
push
mov
bound
hlt
mov
jge
push
inc
jne
dec
jb
mov
push
adc
shll
outsb
mov
in
das
cmp
ret
in
pusha
aas
mov
and
sub
inc
outsb
dec
sahf
add
jo
ja
popf
bound
jle
jp
pop
addb
add
pusha
dec
lahf
hlt
xchg
les
mov
mov
ja
adc
movsb
pop
iret
push
xchg
shr
pop
nop
lret
push
mov
xor
xchg
sub
test
push
into
das
arpl
mov
lods
push
lds
dec
out
in
mov
adc
push
sub
jge
push
add
inc
mov
mov
out
jle
imul
adcl
mov
imul
inc
or
push
dec
cmp
andl
daa
inc
jp
cli
ss
mov
cltd
xor
sbbl
clc
sarb
loop
loopne
jns
push
aam
in
xor
pop
testb
arpl
ljmp
cmp
in
movsb
push
popa
jl
sti
leave
cmp
cmp
or
nop
mov
stos
dec
outsl
push
lock
ret
dec
mov
or
lcall
je
or
inc
dec
cmp
call
jg
cmp
cmc
test
add
push
dec
mov
pop
sbb
mov
std
std
sbb
push
mov
mov
mov
push
sbb
outsb
and
pop
adc
mov
xor
or
or
pop
add
outsb
test
je
add
out
decl
lret
cmpsb
dec
lcall
push
jecxz
add
pop
aad
jae
movsb
pushl
jne
outsb
and
fwait
mov
adc
xchg
cmp
loop
inc
or
aad
sub
xor
flds
ret
pop
xchg
sahf
loope
mov
mov
fwait
xor
dec
outsl
push
push
sahf
lcall
ja
out
scas
inc
stos
adc
mov
jne
in
mov
mov
jmp
cmpsb
mov
stos
jns
xchg
add
testb
daa
leave
negb
push
cmp
scas
fstpl
popf
push
sub
xchg
call
and
xorl
xchg
pop
push
mov
and
movsb
stc
into
das
int3
xor
shlb
sti
mov
push
aad
xor
popa
push
mov
pusha
pop
push
scas
pop
pop
repnz
mov
adc
fcmove
pop
mov
pusha
lret
arpl
bound
int3
mov
scas
inc
pop
sub
sub
jecxz
pop
xchg
push
fs
movl
xchg
ret
xchg
or
push
icebp
inc
mov
popf
dec
sbb
movsb
xor
lods
ljmp
pop
sub
dec
xchg
jo
aas
hlt
sbb
push
push
cmpb
dec
int3
clc
pushfw
mov
lods
mov
pop
cmp
nop
mov
addr16
es
sub
inc
sarl
loope
or
push
dec
lret
sbb
cli
int
xchg
ljmp
cld
cwtl
cmp
shrb
adc
pop
mov
subl
subb
sub
push
imul
arpl
andl
push
cwtl
inc
jns
int3
fdivs
xchg
xchg
push
pop
adc
enter
sub
jp
inc
movsb
pop
je
xchg
pop
jmp
in
ljmp
pop
push
add
add
inc
filds
xchg
repz
mov
nopl
inc
inc
fwait
and
pusha
dec
mov
dec
es
or
xchg
out
jne
aas
lods
sbb
add
xor
call
pop
mov
hlt
int3
cmpsb
sahf
xor
cwtl
adc
ja
xor
xor
sub
mov
enter
mov
or
js
testb
and
je
jmp
add
dec
xor
and
inc
outsl
ds
xchg
sbb
imul
jle
push
arpl
cmpl
in
dec
mov
cmp
sub
inc
sub
mov
jmp
mov
aad
add
adc
xorb
mov
xchg
inc
cmpsb
mov
xchg
pop
scas
add
mov
mov
decl
fists
xor
pop
pop
arpl
mov
jo
mov
filds
lret
aas
scas
add
or
push
pop
mov
inc
lea
pop
add
mov
sub
xchg
into
outsl
movsl
and
pop
in
out
xor
fcoms
test
outsb
jg
ror
or
jbe
cmp
repz
or
jmp
rolb
es
iret
adc
jno
dec
lret
xorl
push
and
xor
jp
pop
ja
sti
es
in
xor
inc
inc
mov
out
idivl
jmp
scas
mov
int
push
mov
pop
mov
sbb
mov
cmpsl
out
dec
xorl
insl
int
pop
aas
ret
inc
or
push
mov
cwtl
data16
sub
cmpsb
pop
xlat
inc
cmpsb
and
sbb
ret
dec
aaa
pop
xor
stos
rorl
popf
add
mull
mov
dec
xchg
mov
mov
pushl
cmp
scas
fwait
or
sub
cmp
cwtl
dec
int3
je
mov
cld
int
cli
outsb
lock
mov
and
sub
pop
scas
pushf
ds
movsb
cmp
mov
pop
cmpsb
fidivrl
jb
push
push
fwait
jns
fcmovnu
loope
mov
popf
test
das
dec
in
addr16
lods
jne
or
pop
push
aas
mov
push
add
sub
idivb
out
mov
pop
sbb
or
ja,pt
pop
or
or
rol
cmp
pop
stc
ja
or
std
loop
lret
fmulp
pop
popa
mov
push
scas
sahf
aaa
int3
xor
ja
xlat
incl
std
ret
push
data16
out
stos
ret
flds
stc
out
arpl
dec
pop
xchg
sbb
outsl
adc
repnz
ret
fwait
jne
adc
std
mov
xor
stc
add
ret
gs
cwtl
xchg
in
push
lods
sti
and
and
push
out
jae
xchg
mov
push
lret
xchg
cli
sbb
adc
jg
add
lret
jbe
fidivrl
test
push
and
scas
mulb
in
jno
test
mov
scas
push
adc
iret
jmp
imul
fadds
lea
and
inc
jae
lcall
inc
mov
lock
pusha
loope
jg
mov
shrb
mov
aas
aaa
or
pop
mov
fisubrl
pop
adc
fstl
push
insb
leave
jle
popf
fdivrl
rolb
xlat
sbb
xor
pop
call
loope
orb
xchg
and
mov
jmp
lods
addr16
jnp
jbe
jne
or
ret
andl
xlat
inc
ror
jne
and
pop
ret
test
jns
jp
push
in
add
ss
or
pop
mov
inc
cmpsb
or
lds
mov
comiss
or
enter
ror
and
mov
loop
sarl
push
loop
sub
es
and
pushf
pop
out
pop
in
lret
dec
lods
imul
xlat
pop
int3
adc
into
add
xchg
ret
or
mov
std
adc
fcom
mov
int
mov
or
jp
mov
mov
cli
pop
sub
arpl
cmpsb
mov
jp
mov
mov
insb
push
cmp
sbb
std
daa
aad
in
leave
jp
or
xchg
pop
test
jo
movsb
mov
pop
pusha
xor
push
loopne
inc
test
push
jg
idiv
jge
das
sbb
mov
push
adc
rclb
std
add
mov
adc
mov
jle
dec
add
ds
scas
dec
test
mov
and
push
bnd
js
dec
add
test
pushf
push
fstpt
fcoms
and
add
out
fldcw
xor
or
lods
lds
sub
push
jge
push
es
rorl
cli
jne
sub
insb
fxtract
cmc
inc
addr16
inc
in
movsl
and
ds
mov
dec
scas
mov
ret
not
test
adc
ljmp
imul
jnp
aam
push
hlt
jecxz
sbbl
jg
mov
icebp
fistps
adc
mov
les
cmpsb
adc
call
lret
cmc
add
mov
pop
cmpsl
clc
stos
xchg
mov
cmp
cli
dec
jmp
out
popf
inc
sbb
cmp
sbb
cmp
jae
cmp
dec
or
or
int3
adc
out
cmp
jb
fbstp
inc
jecxz
mov
fstpl
stos
fidivl
dec
lods
loope
clc
mov
xchg
js
out
cld
ret
cltd
inc
xchg
out
mov
cs
ja
pushf
mov
push
sub
push
adc
push
push
push
xchg
loope
aad
sub
mov
cmc
cmp
sub
int3
push
stc
mov
icebp
xorb
scas
xor
mov
out
push
cmp
outsl
sarl
movsb
leave
pop
mov
or
cld
pop
lret
test
xchg
iret
ret
aas
daa
xor
adc
pop
loopne
das
sbb
addr16
test
sbb
push
outsb
cmp
lds
out
lret
xor
and
lock
mov
xchg
mov
adc
push
fstp
or
roll
test
push
jl
pushf
popf
inc
push
dec
lahf
inc
pop
mov
pop
jns
pop
add
cmpsl
call
arpl
sub
dec
aam
insl
roll
mov
std
stos
xchg
add
lock
push
adc
xchg
push
jns
fbstp
sub
fnstenv
jmp
leave
xor
movsl
mov
xor
pop
es
jo
jns
push
xor
test
inc
dec
shlb
leave
mov
js
mov
jl
sub
push
lret
push
cmp
fdivrs
adc
mov
out
dec
adc
fistl
mov
push
xlat
add
xchg
pop
pushf
pop
popf
dec
cs
andl
jae
push
pop
lock
inc
mov
mov
mov
adc
lds
sub
lret
les
lock
lahf
lret
add
ds
popf
inc
jg
and
jp
push
cmc
lock
fistpll
out
fistps
leave
in
mov
cmp
jbe
dec
push
scas
mov
icebp
out
mov
push
push
push
out
mov
insb
mov
push
pop
test
fsubrs
pop
clc
dec
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
or
outsl
enter
call
xchg
cmp
dec
fistpll
push
xchg
mov
jnp
pop
clc
lret
call
xor
mov
shlb
and
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
jbe
data16
insb
inc
adc
dec
pop
inc
dec
push
fdiv
int3
out
in
pushf
mov
out
xchg
lods
xchg
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jbe
data16
insb
inc
sbb
or
cmp
sub
fmul
int3
mov
hlt
in
ret
ret
jbe
adc
xor
stos
pop
lock
mov
xlat
in
ljmp
pop
mov
jle
sbb
lock
mov
aaa
sbb
push
sub
xchg
imul
mov
arpl
mov
mov
sbb
xchg
cmpsb
sbb
roll
xchg
fldcw
xchg
mov
or
push
sbb
sbb
ret
push
fadd
fdiv
jno
lret
in
idivb
cmp
cmpsl
ss
fnstcw
mov
out
sub
adc
jecxz
xchg
mov
sahf
cmp
xor
std
int
ret
frstor
testl
lea
add
add
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
sbb
add
inc
addr16
jae
jbe
lcall
stc
frstpm(287
adc
jecxz
aaa
ds
push
or
pop
push
pusha
or
sub
mov
subb
into
jecxz
call
adc
pop
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jbe
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jbe
jae
movsb
dec
xchg
repz
fadds
js
adcb
into
fcoml
xchg
mov
mov
loop
and
jge
sbb
inc
ret
jns
mov
push
pop
out
or
mov
rolb
enter
insl
in
jle
push
fxch
pushf
add
imull
std
shl
and
dec
mov
movsb
je
jg
lods
in
hlt
frstor
push
aas
mov
nop
xchg
das
loope
xor
pop
mov
insb
jl
loopne
sub
cmp
add
sbb
add
push
lods
sbb
jns
xorl
call
mov
lods
cld
add
dec
jmp
push
cld
sti
rolb
mov
mov
inc
push
xchg
xor
js
xchg
adcl
mov
sub
idiv
into
pop
sbb
call
mov
ret
jbe
movsl
aaa
mov
pop
mov
cmc
or
fists
xor
mov
xor
mov
push
sub
jecxz
pop
cmp
add
ss
aas
or
iret
pop
mov
cltd
add
mov
adc
and
out
repnz
or
popa
adc
or
inc
pushf
push
in
mov
lret
je
repz
daa
push
hlt
fcomp
jl
nop
mov
dec
jae
cmp
jl
and
lods
mov
inc
and
jnp
push
mov
notl
lods
pop
push
popf
mov
imul
pushf
lcall
pop
and
inc
mov
pop
shrl
ret
jns
lds
imul
imul
testb
sbb
dec
outsl
fsubrl
xchg
sbb
testb
int
and
call
adc
inc
ljmp
mov
pop
mov
out
mov
mov
mov
jg
xorb
roll
fnstenv
cmpsb
test
sbb
mov
mull
pop
fwait
jle
lret
data16
je
and
xchg
push
loope
hlt
std
and
stos
pop
mov
les
cmp
out
mov
mov
cwtl
addr16
or
inc
cmpsb
jbe
xchg
xor
cmp
sub
mov
sahf
scas
gs
inc
fimuls
pop
andb
sub
movsl
mov
and
adc
dec
aam
cwtl
sbb
lret
push
cmp
aas
add
insl
mov
imul
loopne
sti
cld
jge
mov
and
ret
pop
test
pusha
ret
mov
lcall
orb
in
adc
xchg
xchg
xor
insl
cli
cwtl
mov
bound
push
repz
push
jmp
or
jl
xchg
stc
lret
fcomps
out
mov
and
out
sbb
scas
lret
sbb
sbb
aaa
stos
sbb
scas
adc
insl
push
adc
out
mov
clc
lods
adc
and
sbb
mov
and
repnz
or
inc
pushf
jbe
imul
push
xchg
daa
mov
adc
rorb
lcall
cld
cmpl
mov
fldt
mov
test
mov
outsb
jb
bound
into
sub
jnp
cld
lcall
cwtl
iret
xchg
sub
xchg
sbb
cmc
mov
dec
jl
jmp
test
mov
shl
mov
cmp
in
pop
orl
xor
sub
cmpsl
push
or
xor
pop
movsl
iret
fisttps
in
imul
movsb
repnz
jne
mov
xlat
gs
xchg
adc
mov
lods
lea
mov
jl
mov
add
inc
jge
ljmp
in
sub
or
xchg
lods
pop
lock
jp
adc
pop
out
rcrb
mov
out
ror
dec
insl
notl
mov
nop
push
mov
addl
sub
clc
shl
imul
scas
jp
out
js
in
sbb
pop
loop
into
add
mov
loope
mov
sti
adc
sub
dec
jle
cmpsb
aad
xchg
cld
rcr
adc
dec
cmp
push
cmp
sbb
jmp
dec
arpl
aad
or
xor
sbb
outsl
xchg
pusha
dec
loop
add
adc
sbb
push
insl
and
bound
dec
sbb
dec
mov
dec
test
add
xor
sbb
push
add
push
movsb
insl
lds
insl
mov
jecxz
popf
fmuls
push
dec
dec
dec
test
mov
cmp
push
es
adcl
jg
es
mov
call
mov
jmp
xchg
cmp
pop
cmp
ds
sbbb
clc
roll
ja
sahf
pusha
fisubrl
test
mov
adc
pushf
out
sub
sub
lahf
inc
and
and
and
ret
sarb
rcrb
rorl
arpl
add
lcall
pop
cmp
mov
fninit
int
imul
out
sub
sub
jge
add
sbb
pop
push
scas
sbb
sbb
sub
loopne
dec
loopne
and
jmp
sbb
push
mov
xor
xlat
cmp
mov
sahf
adc
in
fs
stos
les
jae
xlat
jl
out
mov
mov
dec
push
clc
pop
xor
lds
or
jmp
push
das
in
stos
xor
out
in
arpl
orl
mov
jns
cmc
mov
add
sub
adc
xchg
repnz
mov
lods
mov
repnz
mov
mov
das
aam
addb
enter
out
or
mov
add
mov
add
push
fs
adc
int
jo
in
pop
sbb
stos
cmpsb
int
out
fildll
enter
repz
push
and
aas
xor
nopl
je
insl
or
adc
jns
push
fidivl
pop
nop
addr16
lret
or
add
mov
pop
sub
or
jecxz
test
inc
ret
loope
shl
adc
cld
push
jo
mov
in
adc
inc
sub
dec
pop
stos
sbb
xchg
jno
add
pop
sbb
cltd
gs
icebp
mulb
nop
inc
hlt
xor
add
out
ss
push
fs
dec
hlt
and
lcall
ss
orl
mov
xchg
loop
lods
ret
dec
insl
nop
mov
push
ja
and
adc
test
shll
adc
push
pop
push
cmp
out
xor
in
sbb
into
jp
repz
in
add
push
fwait
mov
pop
fimull
push
pop
adc
loope
push
fistl
or
std
mov
adc
or
xchg
and
popa
stos
sarb
jns
add
push
dec
and
pop
fisubl
pop
xchg
popf
test
add
std
je
push
jg
jb
repnz
scas
lods
imul
pop
lret
adc
push
xlat
fcompl
leave
sbb
push
scas
mov
imull
pop
adc
outsb
cwtl
inc
sbb
mov
sbb
sbb
cmp
mov
sub
pop
jo
xchg
add
rcl
or
jmp
out
filds
sub
lret
orl
push
enter
mov
inc
cmpsb
jmp
cmc
sbb
xchg
cmc
stos
add
ror
dec
fdivrl
iret
xor
cltd
inc
rolb
mov
iret
inc
sub
sub
mov
repz
mov
aad
testb
mov
xor
add
mov
nop
sub
mov
cmp
push
and
loopne
stos
mov
jbe
cld
inc
jbe
ror
add
cli
pop
fdivs
icebp
or
sub
push
test
cs
and
xor
sub
push
stos
pop
fistl
insl
or
mov
add
cli
movsl
xlat
jb
mov
xorps
out
xchg
popa
and
je
mov
aad
and
pcmpeqw
adc
je,pt
fucom
shr
jae
add
mov
xlat
mov
out
into
and
sti
mov
pushf
pushf
jmp
rcr
iret
bound
jns
cs
clc
and
inc
in
adc
and
cmp
cwtl
xchg
fs
loop
test
pop
push
adc
incl
ret
mov
jne
mov
int3
dec
dec
mov
das
loope
pop
adc
imul
dec
cmp
adc
dec
out
idiv
jle
shrl
xorb
sub
pop
sahf
or
int
repnz
aad
mov
sahf
lret
and
call
test
xchg
ret
loopne
dec
push
pop
std
sub
or
pop
es
push
imul
neg
mov
hlt
cld
mov
add
mov
stos
mov
rolb
rcl
or
jnp
jecxz
jmp
jg
imulb
inc
stc
mov
ja
xorb
push
jne
loopne,pt
mov
lcall
push
enter
mov
mov
outsb
in
jmp
add
or
xor
mov
mov
push
adcl
jae
jns
jbe
stos
push
pop
sub
fimull
xchg
cwtl
and
fstpl
jno
outsl
add
cmp
mov
aam
jg
pop
int
mov
pop
jp
popf
or
cmp
push
inc
inc
jo
fdivl
xlat
das
test
dec
int3
adc
push
cld
mov
inc
cmpsb
std
jbe
int3
insl
fcmovu
sub
push
sbb
push
sub
popa
inc
push
mov
mov
aad
cmp
push
add
mov
pop
or
enter
or
pop
pushf
neg
xlat
cs
addr16
push
out
les
into
pop
pop
and
out
cmp
pop
aad
mov
les
test
inc
repnz
mulb
mov
mov
out
pop
jbe
adcl
dec
out
test
xor
adc
xchg
loope
jb
sbb
movsb
sahf
sbb
push
loopne
adcl
jp
aaa
xor
mov
outsl
push
sub
add
shll
sub
push
mov
lret
out
loopne
fincstp
sub
andl
imul
cmpsl
call
mov
jmp
pop
sbb
daa
cmpsb
inc
cmp
dec
jle
push
nop
push
xchg
xor
mov
jnp
cmp
sub
leave
ret
cli
push
xchg
lds
sbb
dec
xorb
xor
cld
jns
adc
jg
pop
lcall
in
icebp
shll
or
adc
adc
loopne
mov
shlb
imulb
sbb
jl
scas
cmpl
lock
mov
xor
xlat
mov
jne
pop
jecxz
ficoml
xchg
aam
cmp
and
push
mov
jecxz
xor
cmp
dec
sub
test
repnz
fcoml
cmpsl
rol
and
or
cmc
mov
dec
and
xchg
mov
and
popf
aam
test
pop
in
pop
jge
xlat
mov
push
call
mov
push
dec
mov
das
test
pop
and
inc
hlt
or
and
push
outsl
dec
xchg
adc
nop
push
mov
cmp
imul
sub
aad
inc
out
out
int3
in
fdivrs
jle
in
outsl
shrb
fs
out
or
je
xchg
sahf
mov
inc
jg
cmpsb
jle
outsl
int
mov
int
xlat
sti
paddusb
cmp
gs
das
mov
jae
dec
arpl
jl
jp
sbb
sub
ret
movsl
xchg
out
adc
addr16
lds
jle
imul
test
xchg
int
xchg
sbb
fnsave
lock
leave
push
xchg
sub
sbb
cmp
adc
ljmp
dec
adc
mov
add
pop
or
jl
inc
popf
rcrb
adc
mov
call
or
mov
das
sub
pop
sub
sbb
jbe
mov
pop
dec
mov
scas
imul
cmp
pop
adc
inc
and
xor
jl
clc
inc
and
fldln2
inc
jb
jg
push
in
aaa
mov
mov
hlt
leave
imul
jmp
inc
xchg
mov
mov
pop
int3
loopne
cs
arpl
inc
xor
inc
mov
outsb
pop
mov
test
xor
xor
cli
in
jns
nop
inc
jle
pop
inc
mov
mov
and
rorl
or
mov
gs
loop
out
xor
mov
fdivrl
xor
push
mov
pusha
into
xchg
xchg
add
jmp
xor
xchg
lock
cmp
inc
mov
fildll
jle
mov
add
jo
jb
lock
pcmpeqb
sub
adc
std
mov
outsb
xor
inc
fcoms
rol
pop
js
mov
pop
icebp
in
sbb
hlt
imul
sbb
xor
pop
xchg
pop
jp
aas
xor
ret
popf
loope
pop
inc
cmpsl
jae
pop
loope
filds
pop
mov
repz
sbbl
pop
js
pusha
mov
es
leave
add
movsl
jmp
stc
inc
xor
sbb
movb
and
and
addr16
loopne
cmp
sub
cmova
pop
xlat
fstpt
adc
adc
clc
pop
lock
mov
imul
test
pop
outsb
int3
repz
pop
and
in
mov
pop
sbb
fistpl
pop
mov
into
xchg
add
push
add
jp
sub
or
adc
jno
cs
inc
or
lods
cltd
fs
hlt
ja
rcrl
sub
les
mov
testl
pop
cs
xchg
scas
sahf
xchg
mulb
xor
or
andl
cmp
es
mov
xlat
lret
xor
mov
insb
ficompl
idivl
xor
scas
add
mov
andb
add
push
movsb
jae
shll
pop
xchg
jbe
cmp
std
push
nop
repnz
pop
mov
mov
cmp
or
rcrl
pop
pop
int
test
xlat
popa
imul
pop
add
orl
lods
push
scas
movsb
je
xor
cmc
mov
in
ds
mov
pop
les
iret
pop
xchg
sti
xchg
out
push
jp
mov
sti
das
pop
push
movsb
int
cmp
ret
mov
jp
shlb
mov
and
cwtl
mov
aaa
rorb
mov
cmpsb
add
jle
mov
sbb
in
push
pop
xchg
cmp
sbb
cwtl
push
iret
push
shll
cmpsb
sbb
ret
inc
testb
mov
pushl
scas
int3
push
jno
mov
fimuls
and
data16
push
ss
adc
sbb
roll
pop
jno
or
aad
arpl
and
fsubp
divb
and
cmp
repnz
cmp
mov
xchg
int
push
clc
push
jnp
xchg
jl
stos
mov
jecxz
mov
or
in
or
sahf
pop
mov
jmp
mov
mov
incl
lock
add
add
fadds
int
xchg
xchg
scas
lcall
push
mov
push
dec
addr16
xor
add
add
mov
lea
mov
lcall
mov
das
ljmp
xor
jl
pop
mov
sahf
cmc
lods
cmp
mov
inc
aaa
xchg
mov
push
or
push
lds
xchg
insl
jmp
outsb
xor
jbe
cmp
ret
inc
inc
pop
les
or
xchg
mov
mov
ds
mov
push
ror
ret
jo
mov
daa
inc
xchg
jbe
lret
ljmp
lret
pop
inc
mov
cmp
and
mov
movsl
test
andb
mov
scas
fwait
jmp
in
adc
mov
inc
test
mov
scas
andb
cwtl
je
in
xchg
push
inc
xor
enter
scas
call
sbb
in
mov
cmp
fst
push
stos
js
aas
mov
call
ret
mov
pop
jnp
fs
addr16
cmp
dec
rol
into
bswap
cli
xor
lret
pop
mov
inc
insl
push
lods
imul
cmp
and
aad
lcall
mov
cmp
xor
mov
mov
jo
dec
or
mov
push
and
popf
imul
aad
or
daa
jae
minps
or
lods
enter
pushf
lea
int3
pop
test
or
pop
mov
js
push
lods
pop
mov
cmp
push
cli
aam
dec
push
or
je
or
mov
lsl
xlat
jbe
ror
and
and
add
add
xchg
ljmp
lea
push
outsl
xchg
call
insb
shlb
loope
scas
and
jmp
add
cmp
outsb
mov
addr16
lock
aad
mov
bound
test
adc
sub
pushf
fldl
or
movsb
cmc
mov
jne
cmp
movaps
mov
jae
cmp
jae
pop
xor
sub
push
or
inc
cmpsl
cmp
pop
inc
popf
sub
stos
flds
and
jg
bound
into
dec
aad
inc
or
mov
cmpsl
cmc
jmp
fcompl
mov
fsubp
mov
jb
out
dec
mov
fstps
outsl
lret
and
xor
test
ror
lea
aas
mov
pop
int
adc
sahf
sub
push
dec
movsb
mov
movsb
insl
xchg
add
test
jge
lds
aas
push
inc
addb
push
addb
in
dec
and
inc
or
xchg
xchg
ja
xor
arpl
cmp
out
or
imul
ficoms
sbb
js
lods
xlat
popa
mov
pop
cmpsl
shlb
inc
pop
push
xchg
cmp
sub
jns
mov
xchg
xor
xor
jl
adc
dec
ljmp
jnp
stc
adc
jmp
std
sub
xchg
mov
sbb
or
add
fidivs
pop
add
ljmp
sub
jg
movl
out
lods
sbb
jge
daa
jae
imull
and
xchg
in
mov
lea
fs
xor
loope
sub
or
scas
lcall
aam
sbb
xchg
insl
mov
and
std
iret
fsubs
ret
jle
lods
lea
jbe
inc
insb
or
inc
call
cmp
adc
xor
or
movsb
sbb
ss
mov
xchg
xlat
xchg
pop
lcall
aad
scas
mov
shlb
pop
std
push
test
push
nop
cmpsb
ds
pusha
es
mov
mov
lock
outsl
dec
jg
pop
sti
je
rol
pop
dec
outsb
cld
dec
shrl
pop
jns
imul
lock
ljmp
int
sbb
mov
ss
jo
push
lock
jecxz
jmp
dec
xchg
dec
mov
fnstcw
mov
xchg
fs
jne
sub
or
test
cmp
mov
out
test
push
push
adc
movsb
pushl
xchg
sub
aad
repz
rcrb
dec
pop
lea
pop
clc
lods
xchg
iret
add
cltd
xor
daa
stos
jae
jno
cmp
scas
inc
loop
jae
pop
push
dec
test
sahf
lea
sbb
cmp
outsl
enter
mov
pop
aas
sbb
insl
mov
ja
das
icebp
icebp
in
pop
leave
dec
jns
dec
xchg
scas
jno
lea
punpckhbw
mov
and
dec
lods
test
jp
aaa
clc
mov
or
cmp
lds
cmp
test
mov
push
arpl
rcrl
fwait
add
out
mov
inc
push
inc
push
adc
push
dec
mov
xor
addr16
dec
fsubrl
movsb
ror
jb
ret
mov
out
fstpl
inc
jne
insl
js
xchg
shl
jmp
or
daa
push
mov
repz
dec
sub
loope
into
inc
repnz
cmp
fs
mov
adc
jo
imulb
mov
pop
push
loop
sbb
xchg
out
jg
and
cmpsl
cltd
push
mov
mov
leave
gs
inc
jmp
and
repnz
adc
inc
cmp
dec
pop
cmp
cld
mov
push
mov
xor
stc
xor
fmull
adc
xchg
jb
je
movsb
aas
pop
inc
dec
ds
xchg
imul
push
xchg
nop
insb
pop
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jbe
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jb
data16
insb
inc
sbb
or
cmp
sub
fdiv
int3
out
in
pushf
mov
cmpsb
mov
jbe
data16
insb
inc
sbb
or
cmp
sub
fmull
int3
dec
push
in
mov
ds
inc
imul
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xor
xchg
lea
rolb
and
xor
or
sbb
push
pop
push
dec
mov
popf
xchg
loop
repnz
ret
mov
arpl
jb
inc
pop
push
dec
mov
test
cmc
ret
xlat
and
ja
add
sbb
bound
cmp
clc
ret
xor
loope
mov
sbb
outsb
test
out
mov
aas
daa
notl
push
dec
and
rcrl
lahf
repnz
sbb
stos
mov
and
shl
jbe
dec
out
cmpsl
nop
and
in
repnz
mov
rcrl
gs
push
mov
std
fdivrp
and
hlt
roll
loop
addb
pop
pop
pop
cmp
shll
stc
or
shlb
push
in
mov
jg
jge
push
lods
enter
gs
pop
add
dec
cmp
adc
fstl
inc
ja
lahf
repnz
push
jb
inc
pop
push
dec
std
stos
mov
addb
ret
aam
cmp
adc
gs
inc
inc
push
dec
mov
fsubr
mov
mov
test
push
subb
sbb
outsl
das
xor
and
aam
imul
xchg
xchg
mov
jo
pop
dec
jp
ja
sub
dec
cmp
mov
mov
mov
fst
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
loop
repnz
ret
int
cmp
adc
inc
pop
push
dec
mov
sbb
xchg
jbe
jnp,pn
add
push
cmp
and
inc
scas
adcb
scas
cmp
adc
repnz
pop
lcall
mov
repz
scas
scas
jle
mov
mov
jae
inc
xor
jb
cmp
or
pop
aam
out
outsl
repnz
in
adc
jecxz
xchg
pop
sbb
jl
or
mov
add
hlt
imul
or
and
dec
out
test
shrl
into
repz
inc
mov
orb
adc
test
ret
call
push
add
inc
insl
adc
in
push
nop
add
test
pop
or
shlb
pop
dec
fidivl
scas
push
pop
outsl
cltd
icebp
bound
imul
imul
adc
sub
fldl
outsl
push
mov
xor
into
dec
mov
in
in
testl
mov
fidivs
pop
pop
push
stc
pop
adc
outsl
ljmp
test
and
sub
push
aaa
aam
inc
inc
dec
fildl
push
cmp
dec
xchg
mov
insb
test
in
movsb
fs
mov
fbstp
pop
mov
pop
mul
fstl
mov
xchg
mov
arpl
pushf
loop
icebp
inc
mov
push
pop
ss
pop
ret
lea
or
ret
out
dec
mov
xrelease
push
arpl
ds
cmc
fdivrl
xchg
and
dec
ss
xor
daa
jb
ss
adc
dec
sbb
dec
jecxz
test
dec
sub
cltd
mov
adc
cmpsb
cmp
mov
adc
loope
stos
inc
pop
outsl
std
push
in
aas
out
test
lock
scas
inc
loop
mov
push
push
test
or
hlt
into
jl
mov
push
das
int3
or
jbe
inc
push
inc
in
add
cli
xor
rol
jo
pop
pop
dec
out
pop
push
idivb
sbb
mov
ds
push
lret
push
push
stc
rcll
dec
adc
lret
push
dec
ficoms
fadd
xor
add
outsl
fcomps
in
in
sti
test
sub
adc
xor
push
mov
movsl
xchg
add
mov
push
lds
stos
add
out
dec
int
xchg
adc
lock
push
push
aaa
lods
in
jno
dec
mov
xchg
adc
dec
in
pop
sub
mov
pop
ret
leave
dec
mov
scas
shlb
pop
repnz
lds
and
jg
insl
jb
insb
sub
sbbb
daa
sbb
ret
iret
in
movsb
sub
pop
cltd
movsl
test
fiadds
test
xor
mov
push
jns
jbe
pop
sub
into
sbb
movsb
jno
pop
pop
mov
cmp
mov
lods
jmp
or
inc
pop
fs
mov
pushf
xchg
pop
aaa
sbb
xor
test
pop
mov
je
pop
pop
lret
sbb
icebp
lock
aaa
sbbl
mov
xor
xchg
call
jle
mov
pop
jmp
dec
movsl
int
lods
push
fsubrs
pop
test
xlat
dec
push
push
xchg
ljmp
add
pop
inc
ja
mov
or
add
gs
imul
out
out
pop
push
pop
insb
mov
nop
jg
xchg
adc
nop
mov
cmpsb
xchg
js
mov
and
adc
inc
movsb
and
mov
outsb
cmpsl
xor
jo
xor
dec
das
shll
outsb
mov
adc
dec
sbb
popf
lahf
xchg
pop
dec
enter
mov
cmc
cld
fwait
dec
repnz
jecxz
lcall
rcll
inc
mov
fwait
xor
fcompl
jmp
sub
imul
xor
jbe
outsl
mov
lcall
daa
into
arpl
leave
jge
icebp
aaa
push
pop
or
push
outsb
push
cld
inc
jmp
in
rol
popf
je
movsb
adc
and
sbb
pop
pusha
and
into
lcall
out
mov
test
add
dec
cmpsl
shll
mov
jne
inc
jbe
or
movsl
aad
push
jno
jecxz
xchg
push
sbb
ret
test
jne
sbb
movsl
shrl
mov
jecxz
adc
jle
arpl
inc
xchg
iret
out
dec
adc
iret
jle
addr16
xlat
enter
xchg
or
dec
jns
mov
xchg
mov
push
imul
pop
aas
xchg
adc
sbb
lods
lea
push
cmp
fsubl
lret
bnd
jl
or
mov
pavgb
add
imul
push
mov
mov
inc
mov
push
xchg
scas
cmp
aad
test
out
out
xor
lahf
test
push
ret
cmpsb
mov
sbb
adc
jmp
mov
scas
adcb
cmp
call
pop
inc
fidivrl
dec
push
dec
dec
je
scas
add
popa
faddl
in
cltd
ja
dec
pop
lds
mov
push
jl
mov
and
lret
mov
pushf
dec
pop
xor
aaa
pop
outsl
sub
pop
lahf
dec
imul
insl
ror
fdivrl
mov
pushl
push
lea
mov
dec
dec
inc
leave
xor
repnz
push
out
inc
fldcw
das
aad
mov
dec
push
sbb
or
rcll
lea
scas
stos
xchg
repz
dec
add
xor
jecxz
and
dec
fdivl
imul
push
loopne
ss
int
std
xor
test
addl
xchg
into
movsb
pop
movsb
xlat
push
test
jp
ret
pop
push
mov
movsb
out
inc
enter
xchg
xor
mov
pop
leave
lret
push
leave
cmc
popl
outsl
cli
test
arpl
test
xchg
hlt
mov
popf
jns
mov
std
push
addl
fimull
dec
into
dec
dec
les
addl
cltd
addl
pop
and
mov
aas
pop
scas
add
sub
push
out
pop
xlat
outsl
mov
imulb
dec
test
bound
add
xor
dec
push
out
cmp
jmp
dec
jg
je
jmp
movsl
stos
fwait
scas
lret
inc
lret
mov
ja
imul
push
mov
inc
push
test
jmp
test
sub
andb
cmpsl
mov
push
lods
dec
test
pop
sbb
ret
pop
stos
add
mov
mov
shll
in
pushf
add
shll
push
or
rolb
lods
bound
aaa
divb
aam
nop
hlt
sub
sti
push
xchg
xor
inc
nop
or
fwait
mov
adc
sub
pop
cld
mov
xchg
fcomip
sbb
sub
cmc
push
mov
mov
in
inc
inc
xchg
mov
add
popa
xor
add
mov
or
add
or
mov
xor
test
out
inc
imull
adc
dec
xlat
adc
negl
and
jne
ljmp
insb
mov
pop
push
mov
rcrb
stos
int3
sub
movsl
imul
or
jmp
mov
fldcw
mov
xor
mov
repnz
sbbb
push
xchg
pusha
out
andb
or
test
xor
mov
fidivrs
icebp
or
sbb
das
sti
jmp
nop
mov
mov
fldl
loopne
xor
jp
loope
mov
xchg
mov
jno
sub
dec
xor
std
lea
lock
jae
sbb
pop
std
jne
push
ret
ja
xor
mov
js
arpl
fldt
negb
lcall
push
xchg
mov
leave
data16
mov
das
xor
jne
mov
insb
out
adc
mov
push
cmp
ret
inc
add
mov
dec
dec
mov
in
test
adc
mov
addr16
ret
pop
testl
adcl
add
sbb
pop
sub
movsb
sbb
mov
int3
cli
sub
aaa
cmp
dec
movsl
xchg
adc
insb
or
repz
stos
ss
dec
das
inc
and
or
pop
cs
jb
repz
push
mov
add
mov
push
in
mov
dec
outsb
mov
dec
push
add
data16
push
sub
addr16
and
mov
clc
cltd
push
push
mov
or
jmp
andb
fisttpll
push
ret
insb
gs
sbb
mov
lret
add
mov
lods
fwait
out
aaa
cs
into
mov
mov
jb
shl
xchg
into
inc
add
fdivs
fwait
lret
or
inc
pop
pushf
add
clc
loope
mov
jge
or
jns
jno
ss
int3
mov
andb
pop
icebp
xor
sti
aaa
fdivr
into
repnz
jg
cmc
push
loopne
je
stc
cli
popa
rcrl
sub
shl
and
fwait
and
push
sahf
fcomi
jmp
jle
aad
lcall
sub
push
stos
adc
pusha
adc
inc
lret
push
outsl
cmp
mov
test
mov
or
ss
push
or
mov
leave
shll
addr16
icebp
rcll
sti
in
mov
inc
decl
jae
loopne
ljmp
fnsave
mov
in
mov
jns
data16
sub
fs
sbb
pop
mov
push
inc
mov
mov
push
ret
xcrypt-ctr
cmpsl
sbb
jp
nop
out
int
leave
out
add
enter
push
lea
in
insl
push
or
inc
pop
bound
daa
mov
sbb
notl
push
rolb
push
mov
dec
cmp
nop
sub
loopne
jno
push
lahf
inc
lahf
insb
ljmp
lods
add
push
lea
cmp
data16
gs
mov
icebp
sub
sbb
pusha
xchg
subb
bound
clc
inc
sbbb
inc
seta
mov
jmp
daa
push
sbb
add
sub
mov
push
push
shlb
and
lock
jl
aas
scas
je
jmp
stos
sub
bound
jo
cmpsb
pop
mov
jb
mov
out
stos
sbb
insl
pushf
push
scas
outsb
cmp
xchg
sub
jbe
test
les
cmp
inc
scas
mov
push
in
scas
sbb
or
push
lods
cmpsl
push
pop
sub
pop
test
push
cs
xchg
mov
jge
lcall
xor
cli
nop
and
cmc
ja
fs
sbb
adc
mov
lcall
sub
sbb
ljmp
movsb
cs
repz
test
sahf
movsl
jl
cs
pop
inc
test
cmpsl
loope
or
and
ffree
cli
or
aad
jecxz
mov
push
sub
stos
rcrl
dec
dec
insl
into
jns
xchg
jl
or
jge
jb
popf
mov
outsb
hlt
fxch
dec
mov
arpl
jg
bound
or
aad
or
ss
xchg
testb
das
outsb
mov
call
cwtl
cmp
jle
pop
fsubp
mov
jno
xchg
adc
in
ljmp
cmpsl
jg
test
leave
out
icebp
adc
adc
jo
mov
xchg
mov
push
stos
xor
frstor
mov
pop
adcb
daa
das
pop
xchg
iret
js
or
dec
cmp
ret
imul
popf
pop
push
jbe
sub
imul
dec
sub
jns
mov
lods
push
dec
xor
xchg
and
sub
cmp
jg
push
rcrb
sbbl
dec
outsb
xor
cmp
cmpsl
dec
aam
and
and
jb
pushf
inc
stos
add
cwtl
cmp
call
cwtl
and
mov
je
popf
xor
mov
rcrl
or
cmp
push
sub
mov
add
jl
mov
ret
dec
int3
adc
xlat
pop
mov
and
enter
push
daa
mov
mov
fisubl
js
push
mov
daa
jl
push
cmpl
mov
jbe
mov
mov
ljmp
or
inc
out
enter
ds
jmp
scas
mov
addl
adc
int3
imul
jmp
add
pop
mov
pop
inc
adc
ja
in
arpl
lahf
adc
in
fsts
push
xor
mov
popf
test
xchg
jbe
sub
push
dec
negl
daa
jmp
cmp
testb
std
lea
clc
fwait
push
aaa
rol
jno
inc
or
jbe
loop
xchg
lods
in
xchg
jb
ljmp
repz
cli
ret
stos
cmc
sub
outsb
xchg
xor
xchg
int
jb
scas
push
push
fistps
and
pop
ja
xor
mov
adc
cmpsl
div
arpl
jo
movsl
dec
sub
ret
enter
mov
ss
data16
mov
test
adcb
popf
add
inc
loope
call
lret
mov
in
dec
in
pop
add
pop
jecxz
add
loop
xor
subl
add
mov
movl
dec
xchg
and
test
lods
and
es
loope
fdivl
push
cmovg
or
push
jle
or
ror
sbb
ljmp
dec
testl
imul
cld
sub
repz
add
pop
xchg
sub
cltd
inc
das
aad
mov
ja
in
divl
xchg
lock
int
mov
dec
mov
outsl
pop
es
aaa
arpl
mov
mov
jae
call
pop
dec
push
sti
jo
stos
dec
divb
pop
inc
fwait
popl
sbbl
divl
into
rolb
inc
pop
push
xchg
cli
sbbb
inc
or
out
pop
pop
add
into
xchg
aad
fcmovbe
int
addr16
fistl
out
dec
mov
mov
shl
sbb
scas
in
test
out
add
std
or
xlat
ja
rcrl
pop
enter
xor
scas
adc
cmp
xor
ret
xchg
push
in
mov
sbb
rcl
push
add
subl
xchg
loope
mov
mov
in
aam
fucomp
icebp
and
adc
dec
mov
xor
jmp
adc
hlt
mov
aad
int3
push
fsts
add
pusha
cmp
ljmp
jo
xor
and
imul
loopne
mov
dec
lea
fidivrs
sbb
ja
int
sbb
aam
jmp
fnsave
sar
jge
call
jge
push
xchg
inc
add
jnp
mov
xchg
push
js
dec
sbb
pop
cld
ret
insl
sub
sahf
ftst
or
and
fs
leave
fistl
pop
cmp
jg
shrb
notb
arpl
out
shlb
out
jns
cld
and
inc
mov
stos
mov
in
cmp
pop
jno
scas
mov
data16
js
loopne
lds
cld
inc
pop
mov
rol
aas
inc
xchg
adc
flds
push
dec
mov
mov
and
xchg
mov
movb
push
jne
sub
inc
push
jle
imul
imul
insl
add
push
push
add
mov
push
ss
stc
push
ljmp
popa
cmp
mov
mov
lds
test
push
ror
es
and
popa
les
test
jl
mov
mov
mov
ret
cltd
sbb
ds
std
sbb
or
icebp
into
int3
adcb
fwait
xor
xchg
arpl
sub
mov
mov
cmpsb
aaa
cmpsb
lock
and
dec
push
and
loopne
sub
dec
movsl
push
adcb
mov
ds
cmp
dec
mov
iret
mov
arpl
xor
lods
loop
bnd
add
movsl
pop
dec
bound
lcall
mov
adc
mov
dec
jg
aas
addr16
dec
adc
fs
lret
pop
popa
jbe
daa
mov
jns
mov
push
mov
xor
sbb
pusha
mov
sarl
jne
jo
adc
test
andb
js
cmp
mov
jnp
and
cmovne
daa
popf
dec
shrb
jmp
jne
sbb
jo
cli
mov
cs
xor
repz
pop
mov
push
jns
xchg
or
mov
jb
cltd
push
add
pop
loop
lods
sbb
ret
dec
loope
jne
out
lahf
ss
js
fdivrl
and
insb
dec
xchg
mov
pop
push
and
mov
clc
add
sbb
enter
push
aas
cltd
xor
lret
and
jae
adc
inc
out
pop
imul
xor
push
inc
push
addps
and
mov
pushf
lods
cmc
pop
je
pop
sbb
push
sub
fstpt
scas
dec
aam
push
dec
or
and
mov
jg
sbb
insl
xor
inc
shll
mov
sbb
mov
inc
mov
rol
dec
mov
cmpl
in
mov
shrb
arpl
js
cmp
lods
jnp
into
mov
xor
mov
sti
int3
or
insb
mov
xchg
inc
cmp
fldcw
add
fwait
dec
je
push
jne
push
popl
test
pop
sbb
xchg
pop
xchg
mov
mov
cmp
cs
jg
jb
shlb
adc
jae
pop
and
pop
dec
imulb
xor
leave
inc
insl
out
insb
inc
cs
cmp
mov
call
out
xchg
sbb
mov
or
xchg
rorb
insb
push
call
and
imulb
fsubs
popa
jg
insl
push
xor
add
out
cmc
cs
pop
repz
adc
shrl
inc
movsl
xor
or
add
jmp
call
jge
sarb
mov
stos
xlat
ss
push
cmp
out
push
push
or
jno
jne
mov
out
adc
jge
adc
repz
aad
or
mov
das
xchg
out
xchg
shrb
fistpl
les
sub
mov
insb
adc
push
inc
push
dec
inc
sbb
out
mov
mov
xorl
and
push
adc
orb
mov
cmp
xor
dec
punpckldq
xchg
jb
je
cmpb
pop
push
fsubrl
ficoml
loopne
xchg
sub
hlt
sbb
xchg
out
mov
into
outsl
into
xchg
ficoml
in
fldcw
dec
testb
xlat
mov
test
popf
repnz
adc
cmpsl
mov
ljmp
enter
or
gs
dec
int3
dec
shr
sbb
aam
aas
add
scas
pop
adc
test
dec
and
push
out
mov
cmp
jo
or
jo
sbb
jns
lret
cld
dec
xorl
adc
fimull
fsub
jg
push
mov
out
cwtl
repnz
bound
cltd
ret
push
iret
mov
scas
push
repnz
inc
jg
or
jg
push
mov
popf
dec
jbe
adc
leave
notl
js
pop
rorb
call
mov
xor
dec
mov
outsl
imul
add
cltd
cmp
add
push
lahf
negb
scas
sbb
lea
push
push
adc
fsubrs
repz
iret
push
mov
lahf
push
push
popa
mov
jg
add
fsub
inc
jmp
cmpsl
out
cmpl
or
push
mov
sub
loopne
testl
insl
and
jo
xchg
pop
pop
sbb
cs
or
cwtl
lcall
pop
inc
loopne
not
pop
mov
push
inc
mov
mov
mov
sbb
loop
cmpsb
das
xchg
das
cmp
out
fnstsw
jp
cld
push
pop
dec
roll
adc
dec
jl
lcall
adc
pushf
cmpsl
mov
in
bnd
gs
divb
or
ficomps
mov
movsb
xor
mov
xchg
mov
outsb
hlt
lcall
jg
xchg
test
loopne
in
cmp
xor
or
xchg
fs
dec
adc
mov
fwait
add
pop
mov
pop
outsb
stc
mov
out
xchg
or
sbb
or
scas
or
shrb
mov
mov
ja
testb
mov
int3
xchg
pop
stos
es
fistl
xor
sub
xor
dec
mov
inc
xchg
push
sub
cmp
out
fwait
jo
add
adc
jne
xchg
cmova
jg
ret
ret
pop
loop
lods
cwtl
pop
addr16
xorb
les
js
mov
jb
push
dec
or
xchg
mov
in
imul
loop
repnz
ret
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
loop
repnz
ret
int
cmp
adc
inc
pop
push
dec
mov
popf
xchg
loop
repnz
ret
int
cmp
adc
bound
insl
inc
pop
push
dec
mov
cltd
xchg
loop
repnz
ret
or
test
adc
cmc
cli
adc
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
