sub
dec
ror
or
mov
or
and
mov
rol
mov
mov
push
lea
nop
nop
nop
nop
nop
sub
rol
and
mov
sub
test
jne
jmp
push
push
push
lea
ror
mov
jmp
add
add
in
bnd
pop
xor
add
mov
and
sub
mov
rol
mov
push
push
jmp
je
mov
add
cmpl
jmp
nop
jmp
call
ret
add
add
add
test
lea
jle
xor
xor
mov
jmp
push
jmp
leave
leave
ret
call
leave
int3
inc
subl
pushl
call
jmp
mov
or
rol
or
mov
push
mov
mov
movl
jmp
mov
ljmp
push
jmp
inc
leave
xorl
push
jmp
jmp
call
dec
addl
call
push
jmp
push
call
push
jmp
nop
subl
call
mov
mov
jmp
jmp
lea
nop
movzwl
rol
or
and
mov
and
jmp
movl
call
jmp
xchg
push
xlat
mov
mov
ror
sub
shl
add
mov
sub
test
jne
movzbl
add
mov
jmp
lea
addl
call
jmp
pop
add
test
add
add
loope
add
add
mov
mov
add
add
xor
jmp
jle
add
jmp
mov
sub
and
or
sub
mov
mov
jmp
sub
jne
add
cmpl
jne
pop
pop
pop
mov
jmp
mov
shl
sub
mov
sub
and
mov
test
jne
add
jmp
push
movb
movb
movb
jmp
cmpw
jne
xor
xor
mov
mov
xor
and
cmp
nop
nop
nop
nop
nop
sete
mov
ret
add
add
add
push
inc
inc
mov
mov
sub
test
jne
push
jmp
push
leave
addl
jmp
mov
mov
movzbl
add
mov
jmp
push
lea
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
test
push
add
add
mov
nop
nop
nop
nop
nop
sub
jmp
or
xor
mov
mov
add
jne
add
ret
mov
jmp
add
add
add
push
or
sub
inc
mov
xor
mov
sub
mov
push
push
jmp
push
jmp
call
call
xorl
call
ret
add
add
add
fimuls
add
add
call
xor
inc
inc
mov
and
mov
push
push
jmp
sub
cmpl
lea
je
push
push
shl
xor
shl
mov
jmp
mov
xor
mov
mov
lea
jmp
lea
add
mov
shr
and
lea
rol
dec
or
add
add
mov
add
sub
jmp
ret
xor
mov
rol
mov
shr
jmp
movzwl
inc
and
mov
add
jmp
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
roll
cmpsl
push
mov
test
je
push
push
mov
shr
inc
ror
sub
mov
jmp
push
jmp
xor
mov
add
add
push
mov
mov
jmp
add
mov
jmp
inc
and
or
xor
mov
movzbl
add
mov
lea
xor
xor
and
mov
or
mov
shr
and
add
jmp
add
add
add
push
rol
xor
mov
test
jmp
ret
mov
and
jmp
nop
mov
add
mov
nop
push
nop
jmp
pushl
call
jmp
add
mov
shr
or
sub
mov
lea
sub
test
mov
mov
mov
movl
jmp
test
jne
mov
mov
pop
ret
push
sub
mov
sub
push
push
add
mov
and
xor
mov
test
push
jmp
mov
call
call
cmpl
jne
cmpb
jne
jmp
push
jmp
leave
push
xorl
push
jmp
call
ret
leave
addl
push
push
jmp
push
subl
call
mov
dec
or
xor
mov
inc
mov
movzwl
movzwl
jmp
sub
mov
jmp
add
insb
and
add
and
inc
mov
sub
mov
push
mov
movl
mov
jmp
mov
mov
mov
add
jmp
je
jmp
add
push
call
add
xor
mov
cmp
je
jmp
cmpw
je
jmp
lea
shr
mov
and
dec
mov
sub
jmp
lea
sub
dec
rol
mov
shr
and
add
test
jmp
cmp
jne
and
add
add
add
add
jmp
lea
lea
cltd
and
add
jmp
cmp
mov
mov
jle
jmp
jmp
add
sub
movb
movb
movb
movb
jmp
pushl
jmp
mov
add
add
dec
dec
mov
test
jmp
mov
dec
or
and
mov
add
mov
sub
dec
mov
and
add
inc
sub
mov
and
sub
dec
mov
rep
jmp
add
stos
sti
inc
clc
add
add
add
jmp
inc
addl
push
jmp
leave
push
call
pop
call
int3
push
leave
addl
push
jmp
call
call
jmp
dec
push
xorl
jmp
pop
loop
call
cmp
push
jae
jmp
mov
jmp
add
pop
add
pop
add
add
jmp
mov
movl
mov
jne
xor
ret
test
jne
jmp
call
test
jmp
push
jo
add
jmp
je
add
jmp
add
add
add
ds
incl
add
test
add
add
push
sub
call
lds
add
ret
mov
sub
sub
shr
mov
dec
and
mov
jmp
jnp
into
call
test
jne
push
jmp
subl
call
add
ret
add
add
add
add
add
testb
push
jmp
leave
addl
call
mov
ror
add
mov
jmp
test
mov
jne
movzbl
add
jmp
xor
test
je
movsbl
jmp
add
sub
add
cmp
mov
mov
jl
jmp
mov
shl
xor
inc
xor
mov
mov
lea
sub
rol
dec
or
sub
mov
add
test
jmp
bound
add
add
jmp
mov
mov
rol
add
mov
test
jle
sub
mov
and
mov
sub
sub
jmp
or
xor
add
sub
mov
mov
mov
shl
sub
mov
shr
and
add
test
jmp
xor
shl
mov
mov
jmp
je
jns
movzwl
jmp
cmc
sub
mov
xor
and
mov
lea
push
push
jmp
leave
ret
int3
jmp
call
dec
push
inc
xorl
push
push
jmp
pop
mov
add
add
adc
nop
add
add
test
incl
add
mov
add
call
push
jmp
call
call
leave
push
leave
push
dec
int3
pop
leave
subl
mov
call
push
jmp
push
inc
push
call
dec
xorl
jmp
mov
je
shl
sub
or
or
mov
sub
test
jne
movzbl
add
jmp
add
xor
mov
test
jne
cmp
je
add
jmp
mov
push
mov
push
add
inc
mov
call
add
add
mov
jmp
jne
test
mov
mov
jle
xor
xor
add
mov
inc
mov
and
shr
mov
add
add
jmp
mov
call
push
jmp
jmp
push
call
subl
mov
call
push
jmp
int3
xorl
mov
call
add
jmp
popf
fisubrl
cmp
jl
pop
xor
jmp
call
push
jmp
int3
call
nop
push
push
push
call
call
push
subl
push
jmp
jmp
xorl
push
jmp
lea
push
push
call
add
mov
xor
shr
and
or
xor
mov
add
test
jmp
mov
call
push
jmp
dec
call
call
call
nop
call
leave
pop
xorl
push
jmp
call
call
dec
push
addl
push
jmp
pop
push
dec
nop
xorl
call
test
je
add
jmp
lea
xor
ror
dec
or
mov
shr
and
add
test
jmp
pop
xor
mov
mov
inc
mov
mov
pop
ret
xor
or
mov
rol
mov
movzwl
add
rol
xor
xor
mov
mov
pop
jmp
mov
scas
call
add
ror
sub
inc
mov
mov
call
and
mov
call
movl
lea
jmp
scas
cmpsl
mov
jmp
push
scas
aas
sub
jne
test
mov
jle
shr
mov
jmp
jp
sub
add
xor
movl
jmp
push
mov
and
inc
sub
inc
mov
pop
ret
add
add
add
rorb
enter
sbb
and
dec
or
mov
mov
mov
jmp
mov
adc
jnp
add
test
lcall
pop
mov
pop
ret
add
add
add
jmp
stc
in
inc
pop
pop
mov
pop
shl
mov
pop
ret
add
add
add
call
add
mov
mov
sub
test
jne
movzbl
add
lea
or
shr
and
mov
mov
jmp
sbb
dec
sbb
test
jmp
dec
sub
add
add
mov
and
mov
mov
ror
mov
jmp
xor
xadd
pop
and
add
jmp
out
lahf
mov
add
pop
mov
mov
pop
mov
pop
jmp
fidivrl
push
push
jge
lock
call
dec
sub
mov
nop
nop
nop
nop
nop
xor
add
sub
jne
pop
pop
jmp
out
subl
lea
jmp
add
jmp
shl
ror
mov
pop
ret
add
add
add
test
incl
sbb
test
add
jmp
and
loopne
in
xchg
add
in
sub
dec
xchg
sub
in
in
ret
add
add
add
dec
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
jmp
movb
nop
nop
nop
nop
nop
add
jmp
nop
nop
nop
nop
nop
movzbl
dec
add
xor
shl
mov
mov
and
add
add
nop
nop
nop
nop
nop
shr
mov
nop
nop
nop
nop
nop
mov
je
test
je
sub
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
rol
and
or
add
and
mov
mov
mov
movl
nop
nop
nop
nop
nop
jmp
movl
mov
nop
nop
nop
nop
nop
movl
jmp
lea
nop
nop
nop
nop
nop
call
cmpl
jne
cmp
jne
call
test
mov
je
nop
nop
nop
nop
nop
and
dec
mov
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
xor
mov
movzbl
shl
add
add
lea
nop
nop
nop
nop
nop
or
and
mov
mov
nop
nop
nop
nop
nop
call
cmp
jb
add
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jae
add
test
mov
je
lea
dec
xor
and
add
mov
sub
nop
nop
nop
nop
nop
mov
mov
add
sub
jne
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
and
xor
add
sub
mov
sub
dec
mov
sub
or
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
add
mov
movl
mov
nop
nop
nop
nop
nop
cmpl
je
pop
mov
xor
mov
sub
nop
nop
nop
nop
nop
pop
pop
rol
mov
rol
mov
pop
ret
add
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
ljmp
add
add
mov
add
add
xor
ss
xchg
cmp
cmp
cmp
les
add
cmp
repnz
cmp
cmp
xor
jb
aas
xor
cmp
cmp
dec
ds
sbb
xchg
cmp
xor
outsl
cmp
ss
xchg
aaa
and
cmp
xor
mov
add
add
xor
xor
jne
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
jmp
sub
pusha
arpl
pop
pusha
inc
xchg
xlat
sub
leave
add
bound
ret
pop
shr
popf
cmp
arpl
push
adc
push
push
push
push
push
push
aaa
nop
cmc
test
mov
inc
bound
cmp
negb
cmp
pop
jne
sbb
inc
inc
dec
inc
dec
sub
mov
add
jle
jmp
cwtl
pop
mov
xchg
adc
add
dec
jl
lret
add
lret
repz
frstor
xlat
leave
rcrl
xchg
cmp
or
and
pop
movsb
mov
jecxz
mov
sub
iret
inc
sar
pusha
sub
inc
js
outsb
rol
shrb
sbb
jo
nop
lods
sahf
rorl
sbb
jecxz
jecxz
stc
cmp
shrb
mov
cmp
fisttps
loope
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
dec
inc
