inc
jne
aam
call
addb
cli
xchg
inc
jbe
into
out
jg
ret
rcr
mov
sbb
mov
test
mov
jb
iret
dec
outsl
or
jl
fsqrt
and
xor
cmp
or
mov
push
imul
lods
adc
push
dec
ljmp
and
xor
pop
mov
or
int3
jo
test
mov
mov
clc
sub
add
cmpsb
xlat
movsb
int
adc
fsubr
pop
pop
pop
insb
sbb
xor
out
and
mov
ficomps
add
push
sub
dec
mov
and
jmp
push
test
jno
fwait
pusha
mov
iret
fsub
mov
dec
lret
stos
cmpsl
adc
mov
jg
add
in
out
dec
inc
rcll
or
sub
insb
enter
out
push
mov
pop
cld
fwait
gs
jbe
test
movsb
stos
push
in
and
cli
or
sub
xadd
jbe
movsb
lds
mull
xchg
out
mov
ss
mov
inc
ja
aam
call
dec
in
jnp
in
cltd
fs
pcmpgtb
test
sbb
lds
shll
cs
pop
fs
inc
lock
jge
mov
repnz
outsb
shrb
sti
sub
add
jmp
nop
mov
and
inc
out
jns
sbb
roll
inc
lock
rorl
xchg
push
pop
test
xor
insl
out
ds
jae
sub
push
mov
or
adc
dec
jno
imulb
stos
fwait
cmp
jb
cmc
outsl
inc
lcall
lret
add
sub
call
jne
jnp
repz
leave
nop
movsb
jo
stc
mov
sahf
popa
mov
out
sub
jae
dec
mov
imul
cltd
pop
cmp
mov
lahf
out
subb
stos
xor
mov
std
jb
jmp
inc
jge
push
dec
jno
sub
xor
icebp
hlt
loopne
sub
aas
dec
inc
pop
addl
mov
leave
pushf
inc
pop
push
push
sub
push
lcall
subl
add
ret
frstor
pop
fcoms
int3
mov
shlb
lret
sub
lret
insl
sahf
jbe
orb
pop
mov
or
adc
sbb
pop
cmc
pop
inc
pop
jns
fsubl
jmp
jecxz
iret
in
je
addb
cli
negl
test
sbb
orl
ret
mov
jmp
sbb
fdivrs
cmpsb
insb
testb
loope
xlat
add
jmp
mov
lods
pop
lods
call
jmp
pop
xor
xchg
add
and
or
mov
dec
push
sbb
or
outsb
and
sbb
or
xchg
imul
stos
cmp
icebp
push
inc
das
data16
mov
shl
in
sub
sbb
lock
aam
or
adc
ljmp
pop
add
lods
in
iret
and
push
dec
sbb
loopne
ds
insb
xor
xchg
cmp
inc
or
add
cmp
sub
pop
jg
adc
out
mov
xor
adc
mov
fldenv
ds
sub
mov
jmp
xchg
dec
stc
or
jo
js
jge
add
dec
mov
xchg
arpl
fdivrl
icebp
inc
xchg
mov
or
mov
outsl
and
scas
andl
call
cld
lock
enter
cmpsl
outsb
repnz
adc
es
dec
mov
or
movb
adc
inc
cmp
std
out
insl
xlat
cs
sub
cmp
fs
dec
dec
outsb
jle
push
lcall
nop
push
push
mov
inc
cmp
aaa
call
jne
jnp
repz
dec
inc
mov
iret
pop
repnz
lods
cmpsl
pop
cli
test
pop
mov
popf
add
call
xor
xchg
and
cwtl
rcr
ss
jae
shrl
pushf
stos
mov
shll
cmpsb
or
ret
mov
and
fwait
sub
in
iret
and
dec
lcall
jns
daa
ret
jecxz
pushf
pop
in
out
jb
xchg
fiadds
arpl
shlb
movsl
jnp
pop
mov
add
inc
xchg
and
xchg
adc
jg
gs
jge
mov
push
xchg
and
xchg
mov
jae
inc
stos
mov
push
rol
push
test
roll
add
fscale
pop
pop
pop
cli
or
iret
jb
int3
dec
ss
mov
in
inc
and
push
xlat
lds
push
dec
inc
jae
insb
test
fwait
clc
bnd
or
jle
or
ljmp
scas
scas
addr16
ja
jns
rcrl
inc
xchg
fmuls
sub
ds
in
jmp
pushf
mov
xchg
dec
lods
or
xchg
scas
push
adc
or
push
jmp
pop
or
mov
je
inc
in
sub
ret
lock
outsl
jl
pop
mov
or
adc
push
or
cmpsb
hlt
fs
pop
stos
mov
fiadds
imul
clc
lods
sub
in
push
push
rorb
add
pop
jmp
loope
pop
aaa
sbb
cmc
bound
dec
cmpsb
push
out
lret
shlb
sbb
inc
jno
adc
add
add
dec
testl
clc
ds
xchg
mov
fdivs
es
adc
cltd
push
mov
jae
scas
insb
fsubrl
frstor
mov
add
pop
or
and
and
fidivrs
movsb
loop
inc
or
movsb
cmp
into
out
incb
lea
and
jns
mov
xor
movsl
dec
mov
lret
sldt
add
adc
xchg
dec
mov
pop
jge
pop
int
jo
pop
jl
fldenv
pop
push
in
add
and
inc
push
dec
fwait
les
sti
int3
hlt
sbb
movsb
xchg
xor
sarb
shll
push
cwtl
cwtl
or
cs
rcrb
and
inc
fstpt
imulb
pop
xchg
movsb
mov
out
shld
and
ficoms
inc
test
pop
xchg
gs
add
add
scas
add
sub
and
mov
fwait
sbb
mov
add
cmpsb
enter
movsb
pop
call
push
mov
mov
or
orb
mov
jecxz
dec
jg
es
mov
mov
xor
aad
outsl
out
mov
lea
mov
xchg
pushf
adc
call
sub
mov
pop
jne
add
cmc
pop
xchg
cmp
gs
dec
push
push
cmp
cmp
mov
sub
or
fdivl
sbb
jne
mov
clc
mov
addl
call
push
xor
popa
cmp
push
jg
js
push
mov
xchg
add
and
mov
push
repz
push
or
jae
xor
int3
adcb
xchg
incb
jg
lret
popa
mov
cmp
imul
cmp
cs
sub
xor
jns
mov
dec
cmpsl
cmp
sbb
dec
push
in
jmp
loopne
ret
cld
or
daa
jmp
daa
xchg
clc
cli
cmpsb
or
xor
popw
fs
mov
xchg
mov
xchg
jns
push
out
movsb
aaa
mov
lahf
in
mov
mov
adc
xchg
dec
jmp
jnp
xchg
and
stc
jp
ret
xchg
push
fs
shr
add
cmc
scas
fsubl
jbe
mov
out
insl
xlat
cs
sub
cmp
movsb
int
adc
pop
add
xor
xchg
mov
xor
xor
ror
sarl
mov
jbe
stc
cmp
movsb
lock
jnp
lret
jl
jl
pop
outsb
loopne
cmp
repnz
cmpsb
pop
mov
imul
add
dec
pop
mov
cmp
mov
push
push
mov
lods
mov
and
clc
jg
inc
pop
jne
push
inc
iret
inc
lcall
sub
es
jns
shlb
into
xor
xor
lahf
imul
sub
xchg
pop
add
lret
sbb
je
jnp
imul
mov
push
mov
enter
outsl
cmp
and
xchg
int
nop
and
cwtl
in
sub
frstor
mov
ror
int3
jmp
xchg
clc
dec
or
and
and
push
mov
and
xor
pop
mov
add
sub
scas
stc
out
or
daa
dec
xchg
and
cmp
mov
push
test
out
pop
dec
inc
jle
pop
lds
rclb
inc
and
leave
fbld
fcoms
ss
lea
sarl
mov
sbb
hlt
aad
mov
jne
sbb
inc
sub
addb
inc
sar
xchg
std
xchg
push
xor
adc
push
pusha
stos
mov
adc
and
pop
cwtl
mov
mov
ljmp
dec
xchg
nop
xchg
rolb
xchg
fwait
inc
test
adc
inc
lcall
xchg
stos
fwait
cmp
jb
cmc
outsl
inc
lcall
push
and
negl
jae
push
andl
or
jbe
pop
jle
nop
and
nop
mov
sub
xor
or
mov
icebp
xlat
push
inc
and
outsb
push
push
scas
pushf
jns
inc
test
pop
cli
test
aaa
jb
mov
dec
popa
xchg
lahf
push
jmp
mov
and
loopne
nop
and
or
es
shrl
pop
stos
mov
push
das
cmp
adc
popf
out
push
mov
pop
cld
fwait
gs
jbe
test
movsb
lods
mov
or
int3
test
and
mulb
and
mov
and
sbb
jbe
repnz
out
and
mov
inc
fmul
mov
incb
and
arpl
or
or
jecxz
sbb
cmpsb
cli
and
stos
lret
pop
inc
adc
mov
xchg
das
xchg
bound
dec
or
sti
add
jne
daa
add
scas
ret
xor
call
cld
lock
enter
cmpsl
outsb
repnz
adc
add
mov
test
xchg
popf
pop
and
enter
imul
movsb
lahf
xor
shr
inc
xchg
push
dec
push
dec
lret
inc
mov
and
std
jae
or
pop
adc
push
cmp
cmp
cmp
fbstp
cltd
frstor
subw
ficoml
call
mov
add
fcoms
lret
pushf
cs
push
or
es
pop
inc
cmp
test
cltd
repz
jp
iret
inc
lods
sub
in
push
push
and
cli
stos
mov
pop
aaa
sbb
sub
xchg
and
lret
fsts
pop
fsubl
outsb
cs
and
not
std
pop
pop
xor
dec
or
mov
iret
dec
cltd
enter
adc
bound
add
aam
push
add
insb
push
xchg
imul
jns
adc
inc
dec
outsl
or
test
jno
push
lea
jge
adc
nop
and
add
es
mov
dec
xchg
cmpsl
je
shlb
or
in
imul
loopne
xchg
mov
mov
add
mov
test
or
add
mov
ja
ret
jno
pop
mov
sub
xor
push
lcall
shl
xchg
cli
pop
jne
jg
inc
jne
sbb
xor
sbb
sbb
das
sbb
inc
leave
jg
mov
out
push
loope
clc
outsb
lods
pushf
repz
int
and
sbb
mov
imul
shll
push
mov
ja
mov
aas
popf
dec
or
mov
incl
or
in
sbb
or
repz
or
and
dec
xchg
nop
xchg
rolb
dec
mov
jl
repnz
lret
dec
jmp
jb
cmc
outsl
inc
lcall
xchg
adc
pop
adc
push
cmp
cld
pop
movsb
mov
dec
xchg
and
leave
and
or
inc
mov
lock
mov
add
ss
jb
push
scas
sub
idivl
nop
adc
mov
jmp
cs
or
loopne
or
lahf
pop
prefetch
out
and
pop
test
dec
pop
push
adc
scas
mov
push
sti
loopne
jae
addr16
call
out
mov
shlb
fnsave
outsb
xchg
stos
mov
gs
test
mov
dec
loop
call
fisttpl
es
cmp
jns
mov
addr16
xchg
and
mov
cwtl
ljmp
xchg
inc
lods
loop
xor
lds
and
xchg
int
nop
and
loop
dec
pop
shlb
sbb
mov
out
sbb
pop
sbb
insb
sbb
popf
and
insb
in
dec
test
pop
cmp
or
stc
or
xchg
or
test
jl
mov
jo
out
sbb
addl
add
push
pop
push
adc
inc
addl
or
push
dec
dec
insl
daa
push
add
shlb
adc
das
test
adc
inc
bound
inc
sub
mov
dec
subl
jno
pop
jae
adc
jl
pop
pushl
pop
push
push
fstps
sbb
sbb
out
inc
sub
scas
adcb
push
cs
or
ss
mov
jo
cmp
scas
push
mov
xchg
mov
sub
jmp
idiv
sti
dec
inc
push
xorl
mov
and
jb
and
dec
pop
pop
mull
aaa
push
in
cmp
inc
adc
sbb
jl
xor
cli
sub
jne
jne
mov
int
addb
xchg
xchg
inc
lods
loop
xor
jle
pop
lds
rclb
inc
and
jo
adc
inc
jmp
push
xchg
sbbl
mov
xchg
jns
loope
push
pop
int
dec
dec
stos
stos
mov
mov
xchg
dec
out
loop
cmpsl
sbb
dec
and
jle
cmp
sbbb
cltd
cmp
addr16
mov
cli
insl
inc
call
mov
adc
and
xor
pop
enter
adc
mov
test
sbb
push
ds
inc
jmp
mov
pop
push
and
rorb
addb
sub
mov
int
xchg
and
sub
in
push
push
rorb
test
add
adc
cs
cmc
and
das
daa
out
test
inc
pop
out
fldcw
jmp
aam
pop
popa
inc
shlb
stc
movb
lods
mov
int3
daa
sub
pop
jg
add
clc
sub
out
jmp
push
cld
adc
mov
lcall
outsb
setl
inc
loope
gs
adc
int
cmp
pop
jmp
sbb
xchg
in
or
jnp
rclb
mov
repnz
out
cmp
xchg
and
int
mov
je
fsubp
adc
jo
notb
imul
jnp
mov
dec
inc
jae
insb
test
pop
sub
or
pop
mov
pop
push
push
rol
pop
dec
jae
jne
jge
jns
xchg
das
lods
test
xor
sub
mov
mov
pusha
mov
pop
popf
xchg
stos
and
mov
mov
fsubr
xorl
cltd
jne
and
mov
cltd
push
jg
xchg
stos
cltd
cmp
addr16
mov
xchg
and
shrb
popa
into
adc
xlat
mov
pop
mov
cs
scas
xorb
and
enter
fcompl
dec
add
mov
mov
add
inc
imul
pusha
mov
or
test
mov
cmpb
or
add
push
jmp
mov
ret
bound
push
lea
cmp
cmpsb
stos
icebp
jb
mov
data16
aam
jae
inc
jno
cmp
adc
mov
xchg
int3
pusha
aaa
jns
dec
inc
push
xchg
orl
outsl
cli
sub
push
ret
and
insl
call
lahf
mov
sarb
jo
dec
out
cld
test
or
or
cmpsl
dec
jns
jno
outsb
jno
call
lods
jge
xor
push
in
movups
inc
mov
insb
test
jecxz
clc
jge
fidivrs
or
aad
sub
in
add
and
jne
and
ret
inc
push
int3
jl
jno
out
sbb
sbb
test
movsl
push
cmc
jecxz
adc
inc
mov
nop
and
lret
mov
insb
lahf
or
sbb
pop
pop
pop
cli
or
or
dec
mov
sub
lea
repnz
fs
mov
dec
xchg
mov
rolb
sbb
outsl
sub
lcall
out
mov
idiv
sbb
mov
pop
shlb
adc
std
mov
daa
or
cli
jmp
popa
xchg
cltd
sbb
ret
int3
jp
sahf
jno
lret
fsts
sbbb
pop
cmp
ret
fisubl
fcoms
int3
scas
cmp
or
es
mov
mov
je
bnd
inc
jns
sbb
js
mov
dec
nop
and
mov
push
inc
push
dec
inc
xor
pop
add
test
and
aaa
pop
arpl
add
cmp
mov
fwait
mov
leave
mov
ljmp
inc
and
xchg
jg
xor
scas
jg
jne
sti
sbb
ror
mov
adc
mov
daa
mov
pop
rolb
sbb
mov
pop
adc
shlb
sbb
in
in
push
imul
push
jl
dec
mov
dec
fsts
adc
or
mov
hlt
out
js
adc
xor
jl
mov
js
je
pop
fistpl
mov
leave
sbb
xchg
mov
xor
cld
pop
pop
add
jecxz
push
js
mov
std
xorl
std
test
fadds
xchg
mov
push
and
fstl
mov
in
lods
jnp
jbe
mov
pop
lods
movsl
sbb
push
negb
nop
inc
or
inc
jmp
mov
pop
push
or
imul
test
lcall
pop
movsl
mov
inc
out
jge
lret
and
xchg
shr
add
or
mov
sti
es
xchg
and
push
dec
int
xchg
cmp
xchg
jl
sbb
inc
in
fsubrl
leave
imul
jns
adc
pop
lret
outsl
sub
scas
fsubl
mov
mov
jge
outsl
in
push
scas
loop
cmp
es
and
adcb
xchg
clc
dec
popa
adc
adc
jnp
loop
stc
popa
outsl
mov
push
les
es
push
push
pusha
adc
xchg
jmp
cmc
dec
or
pushf
repz
test
cmc
pop
xchg
imul
lea
and
jnp
dec
nop
and
mov
iret
dec
lcall
add
mov
push
cmp
iret
dec
mov
or
lods
jnp
clc
or
jmp
std
repnz
ret
mov
icebp
ret
test
int3
std
xorl
std
test
fadds
xchg
mov
push
ljmp
pop
insl
push
adcl
dec
mov
dec
insl
out
jl
pop
mov
jbe,pn
stc
cmp
movsb
lock
jnp
in
cmp
lds
jno
inc
mov
lock
mov
add
fistpl
sbb
inc
shll
mov
jae
jl
pop
test
or
inc
or
sbb
inc
mov
arpl
pushf
lods
add
frstor
imul
das
cmp
inc
push
pusha
adc
xchg
loope
fisttpl
subb
es
mov
mov
je
bnd
inc
jns
sbb
inc
mov
and
nop
sbb
xor
mov
dec
sbb
insb
addl
inc
sub
vmread
add
jb
pop
in
ljmp
mov
int
xchg
ljmp
or
das
mov
sbb
pop
or
pop
xchg
mov
loop
mov
lods
jecxz
fnstcw
mov
dec
inc
jae
insb
test
mulb
push
jno
mov
sub
push
js
mov
and
test
mov
xchg
frstor
cld
lds
push
lcall
lret
dec
xchg
loop
lcall
add
stc
aas
popf
call
mov
xchg
leave
int
imul
int
xchg
xchg
scas
push
adc
shr
and
fistpl
adc
xor
xchg
xor
int
jl
dec
sarb
mov
cli
push
mov
pop
shll
pop
jnp
push
test
xor
mov
sbb
dec
jmp
popa
xchg
jecxz
mov
pop
lods
sub
aas
and
cmpsb
jbe
stos
add
lds
dec
sub
testl
cld
adc
push
loop
mov
sahf
shrb
popf
cmpsl
jle
cltd
add
mov
jns
xor
and
sahf
fsubrl
sbb
jmp
iret
in
clc
lret
sub
push
lret
sbb
pop
sar
or
mov
ror
clc
push
dec
in
jno
and
xchg
iret
data16
testb
scas
popf
inc
pop
cld
and
pop
vunpckhps
fwait
lds
xchg
call
sahf
fs
or
imul
lret
test
test
je
mov
mov
inc
test
jl
filds
and
and
lock
mov
mov
mov
movsb
pop
xchg
insb
push
xor
fs
add
push
dec
pop
sbb
xchg
dec
adc
sub
aad
loop
xchg
lea
jae
sub
jp
and
add
or
mov
cmpsb
dec
fistps
jno
mov
or
push
ds
adcl
test
or
xchg
mov
push
jmp
out
iret
lods
push
xorl
push
daa
jnp
cmp
sub
mov
aas
int
or
das
mov
mov
in
inc
and
push
xlat
lds
push
dec
inc
jae
insb
test
fwait
clc
icebp
cs
sub
or
ljmp
xchg
scas
cmpsl
ss
push
mov
rcll
cmp
push
add
ds
in
mov
mov
adc
incl
or
hlt
addr16
dec
inc
addb
sub
mov
adc
xor
xchg
xor
int
jl
dec
sarb
mov
cli
push
mov
iret
xchg
arpl
pop
aam
test
fs
mov
sbb
imul
popa
xchg
xchg
add
insl
push
mov
cli
jp
push
aas
and
inc
pop
out
fldcw
jmp
dec
sub
testl
cld
adc
ret
int
lea
test
adc
imul
push
clc
sub
sub
aaa
pop
arpl
add
sar
and
in
sbb
mov
pop
popf
jmp
or
and
mov
mov
les
xorl
adc
leave
into
out
incb
das
adc
jnp
movsl
adc
movsl
dec
mov
lret
add
fists
iret
inc
push
mov
dec
iret
dec
lcall
push
out
add
or
negb
icebp
mov
add
inc
sub
dec
pop
loop
adc
add
adc
lods
xchg
and
cs
rcrb
and
inc
fstpt
cli
test
sahf
out
mov
stos
mov
in
scas
mov
sahf
xchg
dec
out
test
pop
rorl
mov
xchg
and
and
xchg
cmpsb
negb
clc
sub
mov
or
stos
fwait
add
and
jno
and
and
adcl
dec
lcall
pop
mov
and
sbb
and
xchg
and
sub
in
jns
out
adc
cwtl
imul
rcrb
jp
or
xor
test
sub
jae
pop
push
stos
mov
loop
popf
push
cs
pop
push
and
xchg
iret
inc
lds
jl
and
frstor
nop
or
das
cmp
es
xchg
xchg
jecxz
mov
mov
jnp
data16
sub
in
and
and
test
and
and
fisubs
jae
scas
insb
fcompl
xchg
cmp
adc
movsb
push
paddusw
mov
mov
xchg
push
jp
push
aas
mov
sbb
push
ds
imul
int
les
stos
popf
inc
pop
cld
and
ljmp
pop
clc
iret
jle
pop
sbb
xchg
or
mov
adc
aam
cmp
push
push
dec
rcr
jp
xchg
add
cld
jns
mov
jmp
jno
cwtl
mov
cli
stos
or
lock
inc
pop
imul
adc
and
adcb
dec
dec
insl
js
dec
test
pop
das
xchg
dec
adc
sub
add
imul
add
add
adc
lret
movsb
cltd
mov
bound
push
mov
std
pop
pop
call
and
sub
and
nop
jbe
mov
xchg
in
adc
push
xor
test
cli
mov
out
jp
xchg
push
jnp
clc
out
shll
out
test
iret
lret
ljmp
mov
jg
inc
pop
jne
push
xchg
in
push
xchg
cmp
das
cmp
popa
scas
mov
adc
jmp
fstps
aam
bound
jo
outsb
push
sahf
mov
iret
adc
call
rcr
xor
mov
es
and
adcb
lcall
adc
inc
add
inc
mov
xor
add
inc
cld
pop
pop
push
jecxz
faddp
push
sbb
dec
ret
nop
and
mov
pop
xor
popf
pop
pop
pop
icebp
push
xlat
les
sbb
sbb
xchg
cmp
jbe
dec
frstor
mov
push
negb
lcall
pushf
lret
add
jmp
sti
sub
rolb
jecxz
jge
pop
xchg
loope
rcrb
dec
insl
cmpsb
dec
mov
mov
roll
lret
inc
mov
and
push
inc
out
fcoml
outsl
or
mov
add
and
lret
dec
mov
and
mov
loopne
stc
jp
ret
sbb
cmpsb
rclb
add
jmp
and
nop
out
xor
and
sahf
insl
cmp
gs
xor
mov
fisttpll
subb
icebp
sbb
rolb
jns
adc
in
jnp
popa
inc
ret
iret
data16
xor
in
pop
and
scas
daa
cmp
pop
mov
and
lahf
testb
cmp
filds
clc
fdivr
push
packssdw
fsub
mov
inc
ret
mov
jo
sbb
add
in
out
dec
inc
rcll
or
sub
insb
enter
out
push
mov
ficoms
cld
jno
inc
movsb
lods
mov
or
int3
test
and
imul
xor
jnp
push
or
and
imul
jmp
xchg
aam
mov
xchg
iret
mov
cmp
inc
and
push
xlat
lds
push
dec
inc
jae
je
adc
mov
test
insb
in
adc
add
scas
jns
add
xchg
js
dec
rorl
scas
add
push
mov
lds
sahf
bound
inc
push
mov
add
dec
ja
mov
and
inc
push
cwtl
cwtl
lods
jmp
push
mov
aaa
jne
jbe
rcr
jae
fcomp
lcall
insb
mov
imul
mov
mov
sub
inc
mov
stc
inc
dec
lock
insl
pop
sahf
jg
xchg
test
xor
push
xor
es
ret
lcall
fiadds
pinsrw
pop
scas
jno
push
mov
inc
fstpt
jb
pop
loope
cmp
scas
adc
mov
test
test
ficomps
cli
xchg
lods
insl
loop
pushf
es
push
out
xchg
aam
xchg
jecxz
cltd
pop
cmp
mov
lahf
out
subb
stos
xor
jne
testl
inc
jnp
pop
jge
mov
jbe
sub
icebp
mov
outsb
xchg
add
and
inc
add
lock
and
or
cwtl
in
sub
sti
add
outsl
cld
test
or
add
mov
sbb
stos
cld
cltd
fstl
bound
loop
xor
sbb
cmp
repz
pop
outsl
and
fidivs
and
inc
ljmp
xor
in
aaa
jne
jbe
rcr
jae
fcomp
lcall
loop
sti
imull
push
mov
mov
adc
mov
dec
lock
decl
lcall
mov
je
fmull
xchg
jnp
in
mov
ljmp
and
bound
lods
je
jg
xchg
add
mov
iret
jns
pusha
gs
lods
loop
mov
inc
rcl
mov
je
adc
in
dec
sbb
mov
adc
sub
push
sbb
sub
icebp
jb
mov
aad
jbe
push
pop
cli
xchg
jle
subl
imul
imul
les
and
xchg
imul
cli
sub
xor
jae
sbb
sbb
and
sub
mov
int
inc
aas
adc
cmpsl
adc
xor
popf
mov
aaa
dec
or
pop
cmp
movsb
xchg
xor
shlb
sub
sub
push
je
scas
roll
sbb
out
repnz
add
mov
dec
in
mov
mov
pop
clc
and
mov
inc
push
dec
fwait
les
pop
jb
pushf
jg
cltd
xor
rorb
clc
sub
jmp
inc
xchg
rep
lahf
data16
lods
aas
popf
pop
fisttpll
mov
add
cmpsl
push
push
dec
rcr
jp
xchg
add
ja
ret
jp
inc
dec
outsb
mov
outsl
test
xchg
addr16
push
pop
in
sbb
and
dec
cmpsl
sbb
dec
and
enter
mov
fstps
test
mov
mov
ret
daa
xor
push
jmp
jle
inc
ficompl
dec
nop
jnp
in
mov
imul
stos
adc
push
pop
test
sbb
js
scas
adc
ja
loope
and
pusha
pop
lods
xchg
sarb
or
push
ljmp
loop
xlat
xor
mov
jnp
mov
push
push
rorb
jg
sub
jmp
push
outsb
push
jmp
jg
cli
xlat
xor
or
and
fwait
mov
data16
aam
jae
inc
push
lcall
xchg
and
cs
sub
or
insb
cmp
outsb
mov
adc
add
and
pop
bound
add
insl
or
es
cmp
outsl
into
repz
adc
add
add
fnsave
outsb
mov
pushf
fldenv
fisttpl
dec
cmp
arpl
pop
scas
roll
or
leave
outsl
jne
mov
xchg
dec
mov
lret
jno
test
cmpsl
fnstsw
test
add
test
lds
filds
mov
ljmp
mov
lahf
data16
lods
aas
popf
pop
push
ret
sub
cmpb
in
mov
mov
or
dec
jnp
loope
fucom
sbb
dec
lcall
stos
or
inc
add
xchg
and
mov
fsubrl
in
std
jp
js
jbe
in
add
pop
pop
jnp
loope
loope
sbb
test
xchg
add
mov
jle
add
call
mov
subl
inc
jae
mov
pop
es
lcall
sub
pop
cli
sub
into
mov
sar
jmp
int
les
fs
sbb
ss
movsl
shufps
sub
sti
cs
xchg
and
mov
cmp
mov
loop
sub
mov
dec
jno
sub
xor
inc
mov
sbb
sbb
into
dec
sbb
jp
mov
inc
mov
dec
jnp
dec
nop
and
push
push
cli
mov
lcall
xchg
add
clc
and
mov
cmp
cmpsb
dec
mov
cmc
fildll
and
or
jmp
fwait
shr
data16
mov
ss
mov
lcall
xor
jecxz
std
push
jecxz
lahf
push
mov
dec
lcall
outsl
jmp
jecxz
ret
inc
dec
out
fcomi
inc
push
dec
fidivs
xchg
mov
repz
pop
push
sbb
js
mov
and
stc
sub
xlat
mov
and
aam
pop
int
mov
pop
jmp
popf
call
mov
xor
adc
loopne
stc
jp
ret
xchg
jnp
loope
call
push
pop
addl
jge
cli
and
stc
inc
dec
lock
decl
lcall
inc
stc
and
aaa
sbb
outsl
adc
adc
dec
sarb
iret
pop
jmp
nop
add
popf
scas
xchg
dec
adc
test
fstps
ret
sub
in
stos
dec
mov
xchg
arpl
mov
dec
push
in
out
dec
inc
rcll
or
sub
pop
ret
scas
jns
outsl
inc
pop
xor
push
push
jno
add
push
imul
mov
adc
xor
jl
aad
pop
arpl
add
cmp
insl
jbe
insb
push
stos
jmp
sbb
out
sbb
in
xchg
rcll
mov
add
addl
stos
and
es
int
xchg
and
ja
jg
mov
pop
xor
popf
subb
imul
call
pusha
je
dec
mov
mov
jp
arpl
or
push
pop
add
push
mov
and
icebp
inc
push
dec
sahf
into
push
jecxz
pop
sbb
xchg
cltd
das
pop
stos
scas
nop
mov
cli
pop
and
inc
out
fnstcw
xchg
call
aaa
in
mov
mov
fsubr
xorl
outsl
and
call
in
std
jp
stos
je
adc
out
or
jb
jge
dec
enter
pop
and
int
lret
aad
sti
cwtl
mov
push
push
test
fildll
das
sub
lcall
dec
xor
pop
cld
pop
pop
mov
xlat
rcrl
std
iret
inc
cmp
xchg
jne
sub
popa
cmp
add
mov
or
push
jae
inc
scas
test
dec
nop
and
fiaddl
das
inc
mov
lods
lret
shl
mov
add
cli
and
outsl
jge
xchg
and
nop
push
add
fsubl
stc
adc
xchg
jmp
add
and
adc
add
push
stos
mov
push
gs
jge
mov
fs
adcb
fucomi
cmpsb
outsb
mov
and
clc
xlat
fldenv
inc
mov
mov
adc
xchg
dec
mov
pop
jge
mov
jnp
scas
and
shl
pusha
sbb
mov
pop
adc
xchg
insb
add
mov
adc
out
std
repnz
sar
xchg
std
xchg
push
xor
adc
xor
mov
loop
enter
xchg
jnp
loope
xchg
sbb
push
jbe,pt
dec
jnp
push
aam
pop
dec
xor
out
mov
testb
imull
xor
aad
lret
and
aad
mov
daa
or
cli
jmp
jmp
ljmp
fwait
icebp
ror
sbb
sbb
adc
xchg
idivb
jmp
cmp
sbb
push
les
outsl
push
mov
pop
mov
loop
in
jbe
test
movsb
lods
mov
or
mov
adc
pop
in
ljmp
mov
int
xchg
ror
out
xlat
mov
xchg
subb
inc
dec
xor
mov
cmp
sbb
pop
cmp
lods
mov
and
inc
loopne
jb
jb
mov
and
lds
dec
pop
add
lret
dec
mov
and
mov
lock
loop
fimuls
lcall
fbstp
imul
jl
or
shll
xor
push
pop
lret
sub
sbb
sti
test
lock
inc
pop
imul
mov
xchg
inc
stos
jae
add
push
jmp
cmp
das
test
adc
inc
bound
inc
sub
mov
shl
in
sub
sbb
and
aam
inc
sbbb
push
sbb
inc
pusha
adc
dec
xchg
cmc
jle
test
pop
clc
sub
or
out
aam
jo
pusha
dec
das
inc
mov
pop
xchg
and
rcrb
fwait
gs
jbe
test
movsb
lods
mov
adc
sub
shll
daa
push
fcmove
jge
clc
jge
mov
div
leavew
mov
fmul
dec
das
mov
xor
movsl
dec
mov
lret
jno
test
pop
mov
jb
imul
push
pop
int3
push
ret
call
enter
xchg
mov
or
mov
or
adc
dec
lcall
clc
movsl
jmp
mov
add
iret
dec
shl
arpl
and
sub
xor
out
aas
lods
xor
adc
mov
mov
and
xor
leave
push
and
out
ror
cmp
or
jo
test
mov
bnd
imul
and
mov
and
sbb
nop
inc
or
inc
jmp
mov
pop
push
int
mov
fwait
pusha
mov
in
outsl
shlb
loopne
aam
test
jg
mov
mov
add
lods
adcb
push
cs
or
jns
xor
pop
jnp
in
roll
subb
pop
mov
push
es
cld
scas
test
adc
inc
sbb
insb
shlb
movsl
jnp
pop
pop
jns
in
mov
jl
lret
movsb
lds
mov
add
cmp
cld
sbb
shrl
xorb
adc
inc
or
mov
fimull
call
or
mov
xchg
sbb
push
repnz
dec
lock
stos
outsb
dec
pop
gs
dec
in
fwait
rclb
shlb
enter
adc
adc
je
orl
add
fidivrs
pop
adc
rorb
mov
fstl
mov
dec
test
sub
jmp
or
and
cs
fnstcw
jp
pop
loopne
es
lcall
js
jmp
mov
shl
pop
mov
lret
repz
fcoml
arpl
fistpl
subl
add
adc
mov
cltd
out
das
cld
add
xlat
loope
and
add
xchg
rcrl
sub
lcall
push
inc
sub
insb
push
loope
out
sti
sub
and
and
in
lret
aad
pushf
es
push
out
xchg
aam
stos
jmp
adc
in
dec
jge
dec
dec
aam
xor
dec
nop
and
fsubs
jecxz
mov
pop
addr16
push
shr
adc
cld
mov
xor
cmp
sarb
insl
mov
scas
test
out
jb
xchg
fiadds
arpl
mov
movsl
push
adc
mov
adc
pop
shl
inc
into
outsb
test
mov
cmp
push
insl
mov
mov
inc
push
dec
inc
test
inc
jo
pop
jp
push
mov
into
cmpsl
addb
jl
mov
add
cmpsl
add
and
pop
out
out
fadd
mov
pop
push
push
neg
inc
hlt
dec
jge
filds
pop
sub
fstl
je
test
out
add
or
sbb
shll
pop
out
pop
movsb
test
sbb
mov
ret
mov
pop
pop
adc
adc
adc
jnp
aas
rol
popa
sub
xchg
sub
sub
push
je
scas
shl
mov
fidivrl
and
jae
xchg
and
cmp
mov
and
jmp
scas
cmpsb
fwait
stos
out
popa
rcrb
and
inc
fstpt
aas
lods
imul
dec
mov
cmpsb
sub
and
and
mov
jmp
stc
inc
or
sbb
ljmp
test
fbld
pop
shrb
jne
jl
repnz
mov
std
xor
cmpb
pop
fdivrl
jae
mov
and
cmp
mov
xchg
lahf
push
jecxz
shll
adc
je
lods
push
in
mov
lcall
das
lds
dec
push
pop
testl
iret
inc
lcall
setl
cld
push
mov
aam
jl
repz
push
or
mov
add
sbb
out
sbb
in
xchg
movsl
mov
movsb
cmpsb
loopne
es
lcall
xchg
cmp
mov
sbb
pusha
sbb
xchg
scas
mov
push
adc
int
les
stos
pop
inc
fists
lahf
fsubrp
add
sbb
sbb
sub
add
push
adc
outsb
mov
xor
inc
arpl
ljmp
ds
push
mov
rcll
cmp
push
add
ds
in
mov
mov
adc
stc
repnz
xchg
dec
lods
or
xchg
or
cli
mov
test
adc
mov
inc
push
xchg
cmpsl
mov
dec
dec
mov
dec
xchg
mov
push
add
push
adc
mov
xchg
mov
cli
push
mov
aad
lds
repnz
lods
cmpsl
pop
cli
test
pop
mov
inc
je
adc
in
dec
sbb
pop
lds
push
das
push
add
push
jae
mov
test
aam
ljmp
dec
or
jle
or
jbe
xchg
stc
jnp
data16
sub
xchg
pop
add
lret
sub
lods
imul
dec
hlt
out
cmp
sti
mov
sbb
aad
inc
nop
mov
pop
ljmp
adc
push
mov
cmc
mov
sbb
inc
fstl
and
mov
jbe
cmpsb
repnz
gs
imul
in
pop
sbb
push
dec
fwait
les
imul
out
adc
inc
push
xchg
mov
rcll
hlt
jns
inc
test
jne
sbb
sub
pop
jle
add
add
and
cld
js
iret
jne
movsl
das
es
dec
mov
or
movb
enter
xchg
out
jbe
cmc
dec
addl
sbb
push
das
sbb
nop
inc
or
in
sub
sbb
lds
mov
fwait
pusha
mov
iret
fsub
mov
push
push
fstps
sbb
outsl
mov
mov
jbe
idivb
cmp
sbb
inc
out
idivb
sti
shll
cmp
test
dec
ja
jmp
movsb
jmp
gs
adc
call
out
xor
mov
es
and
adcb
xchg
clc
dec
popa
adc
shll
ja
mov
cmp
fdivrs
dec
push
pop
lret
push
bound
cli
into
cmp
sbb
insl
stc
popa
outsl
mov
jb
rorl
jmp
or
and
pop
mov
xor
call
sbb
pop
leave
cld
pop
pop
push
push
pop
scas
in
lret
or
rcll
mov
test
repz
mov
pop
mov
sar
sti
pop
inc
push
mov
sbb
sbb
nop
rclb
xor
mov
mov
in
leave
repz
pop
pop
and
adc
mov
xchg
and
mov
std
or
stc
std
xor
and
jmp
mov
call
data16
lods
aas
popf
pop
push
push
inc
popf
push
sbb
add
push
std
repnz
ret
sbb
inc
mov
sbb
jle
add
stc
jae
aad
sbb
shlb
mov
jns
or
mov
and
nop
scas
pop
mov
pop
mov
orb
add
fstl
int3
adc
sbb
push
and
xchg
add
push
pop
push
adc
inc
xor
cltd
jmp
adc
dec
cmp
push
jnp
sub
sub
call
jne
jnp
movb
pop
mov
fs
lahf
movsl
out
test
adc
addr16
test
fsubrp
xor
or
repz
mov
mov
inc
sahf
push
jle
adc
or
adc
mov
cmp
dec
xchg
filds
xor
cli
dec
inc
push
filds
fisubrl
and
xor
jnp
jbe
xor
pushf
fldenv
es
mov
orl
add
mov
dec
andb
jo
dec
dec
mov
mov
cld
leave
mov
aaa
ret
xchg
jecxz
jne
jl
jbe
push
sbb
ret
jg
mov
sub
sbb
add
add
cli
daa
inc
xlat
sti
and
and
testb
xchg
inc
sub
and
test
adc
jne
adc
dec
sbb
insl
xorb
mov
loopne
out
xor
pop
sbb
push
dec
fwait
les
cltd
cld
pop
movsl
xchg
imul
into
das
mov
lds
jbe
jnp
in
lods
iret
pushf
bswap
test
or
mov
out
popl
sbb
inc
mov
test
add
xchg
jnp
jecxz
std
cmp
fwait
cmp
das
fdivrp
sub
push
jbe,pt
dec
xorl
push
xchg
in
xor
mov
add
imul
sti
xchg
movsb
icebp
outsb
jle
icebp
add
cmpsb
xchg
jo
mov
lock
aam
jge
js
xchg
and
ja
and
xor
jp
ss
mov
pop
add
dec
push
xchg
bound
negl
sub
in
iret
and
push
sbb
dec
cmp
out
and
dec
insl
mov
fdivrl
sbb
ret
mov
push
decb
addb
hlt
bound
dec
inc
sbb
jmp
es
divb
and
add
ret
cmc
push
push
add
lds
jae
out
jns
int3
mov
jo
insb
insb
lods
mov
lea
xadd
nop
daa
test
and
sub
sbb
nop
daa
lock
and
nop
enter
adc
sub
lcall
cmp
dec
lret
dec
mov
and
xchg
sbb
push
repnz
loop
lret
fbld
xor
jcxz,pt
dec
loope
shr
adc
test
loop
rclb
push
or
jle
or
ljmp
fnstsw
add
jg
scas
in
cmp
in
push
iret
test
ret
sar
sahf
out
mov
stos
cli
jne
test
stc
iret
int
loop
add
lea
and
fstl
xchg
out
jbe
cmc
dec
insl
mov
sub
es
mov
mov
enter
rclb
adc
dec
dec
arpl
scas
dec
pcmpgtd
stos
ret
outsl
or
or
rorb
addb
cltd
pop
cmp
mov
lahf
out
jnp
xchg
xchg
add
insb
shlb
push
push
cmc
fimull
pop
mov
out
ret
hlt
ficoml
shlb
inc
cmpsl
dec
fucomip
or
insb
push
xchg
imul
jns
jo
sub
jg
dec
bound
jo
outsb
add
or
and
call
inc
mov
dec
dec
stos
jge
mov
movsb
push
stos
sbb
pop
adc
inc
sbb
shrl
call
cld
inc
cltd
mov
inc
imul
add
mov
int
nop
and
aas
rol
sbb
insb
das
jo
mov
add
cli
sbb
out
imul
mov
inc
test
pop
dec
pop
shlb
and
gs
nop
pop
out
or
or
push
icebp
mov
mov
movsb
aaa
sbbb
popa
fists
or
in
xor
cmpb
jbe
mov
fstpl
xchg
test
clc
js
lret
add
daa
inc
lret
nop
and
sub
lea
repnz
fs
mov
pop
dec
or
fldl
inc
movsb
dec
negb
stos
inc
adc
jmp
dec
cld
pop
pop
das
fdiv
adc
scas
cmpl
je
inc
xchg
loop
jbe
aam
adc
cli
lret
call
mov
sbb
popf
in
das
sub
dec
add
mov
repz
scas
dec
das
cli
and
sub
test
adc
fldl
ret
and
push
push
pop
repz
in
jne
jl
ret
je
leave
adc
test
mov
addb
pop
pop
add
imul
insl
mov
fcmovnbe
dec
add
xor
jns
push
outsb
xor
sub
pop
add
cmp
dec
sbb
inc
pop
addl
mov
out
push
cld
push
push
sub
addr16
mov
les
xchg
cmpsb
out
out
loopne
adc
mov
pop
xchg
mov
xor
mov
outsl
sbb
mov
jmp
popa
fs
popf
enter
mov
xchg
or
mov
adc
aam
cmp
push
push
dec
rcr
jp
xchg
add
repz
adc
jle
cmpsb
mov
cwtl
mov
sbb
sti
test
orb
stc
sbb
push
adc
inc
mov
dec
outsl
jge
pop
cmpl
push
xor
pop
das
xchg
dec
adc
sub
cltd
outsl
push
push
xchg
mov
inc
sub
xchg
insl
sub
sub
icebp
cmpsl
add
lds
adc
adc
loope
das
sti
cli
sub
mov
jno
leave
fcompl
icebp
adc
dec
jae
push
or
or
sub
sbb
mov
pop
cld
fwait
gs
hlt
dec
mov
mov
push
jmp
out
mov
sahf
pop
imul
out
jo
pop
jg
add
cli
das
pop
xor
lret
mov
and
push
lret
fidivs
rolb
bound
dec
ja
shll
inc
mov
push
mov
add
add
adc
add
xchg
mov
mov
int3
or
notb
add
sub
dec
inc
std
das
adc
jns
jb
imul
rclb
pop
push
push
push
mov
inc
shr
push
je
jg
adc
dec
lahf
movsl
mov
or
int
jo
adc
xor
sbbl
out
fdivl
shlb
and
jno
xchg
test
xor
popa
cli
cmc
stos
push
push
add
cmpsb
negb
xor
pop
negb
decb
dec
xchg
scas
xchg
sub
xor
imulb
xorl
sbb
add
daa
xchg
mov
xchg
adc
mov
pop
shlb
adc
std
ret
gs
in
lahf
int3
pop
rorl
mov
and
stc
in
arpl
inc
in
push
push
rorb
inc
addb
xor
push
push
bound
xchg
bound
jle
sub
es
jecxz
rcrl
xchg
mov
jg
mov
push
push
test
sarl
dec
inc
pop
addl
mov
out
push
jecxz
jb
rcll
test
jnp
sbb
call
pop
xor
cmp
pop
jno
jecxz
int
or
sbb
mov
in
inc
and
push
xlat
lds
push
dec
inc
jae
insb
test
fwait
jo
lahf
cli
sub
push
sub
jns
mov
xor
ja
mov
inc
xchg
fmuls
sub
ds
in
mov
mov
adc
xchg
dec
mov
dec
lods
or
xchg
scas
push
mov
mov
adc
inc
mov
dec
std
inc
fcmovb
lret
movsb
rorb
xor
aaa
fs
jmp
add
push
inc
pop
dec
cmp
das
test
adc
inc
bound
inc
sub
mov
dec
mov
sbb
clc
or
out
lods
adc
ljmp
test
negl
sub
in
iret
and
push
dec
sbb
loopne
ds
insb
xor
dec
xchg
rcrb
push
mov
and
clc
jge
dec
jbe
mov
leave
mov
fmul
dec
das
mov
xor
movsl
dec
mov
lret
jno
fcoms
mov
or
sbb
jle
xor
pusha
sbb
mov
pop
adc
shlb
sbb
in
in
push
iret
cmp
jge
inc
sar
fwait
in
push
mov
ja
push
das
rol
xchg
push
mov
stos
addl
mov
pusha
addr16
jnp
inc
or
enter
pop
imul
mov
movsl
call
stos
xor
xlat
in
push
xchg
jg
ret
daa
cmp
pop
mov
and
lahf
mulb
daa
leave
sub
pop
jnp
out
icebp
add
mov
dec
mov
repz
scas
dec
fsub
cmp
loop
inc
iret
aad
aad
ret
push
sub
cmpsb
jbe
add
movsb
or
pop
or
popa
rol
outsl
inc
pop
roll
jo
and
pop
push
mov
dec
dec
dec
std
pop
pop
mov
and
das
fdivs
test
loopne
es
lcall
xchg
pop
add
add
jecxz
add
stc
sti
dec
adc
int
nop
and
and
xor
mov
in
add
and
call
add
mov
les
clc
cmpsb
mov
outsl
cld
test
or
add
xlat
inc
jne
push
cmc
push
negb
jg
sahf
adc
andl
into
pop
addl
pop
mov
mov
adc
je
shl
rorb
xor
mov
push
push
inc
leave
inc
jb
push
pop
inc
loopne
mov
clc
and
js
pop
jns
jno
and
pop
push
push
bound
or
jl
enter
mov
cmc
gs
inc
inc
inc
hlt
sbb
scas
scas
lds
inc
sti
fcmove
dec
inc
lret
cltd
cld
pop
movsl
mov
cmp
fucompp
add
add
dec
lret
aad
jle
scas
lahf
sub
ficoms
jo
sbb
lds
pop
pop
jmp
leave
outsl
xor
out
loopne
inc
in
hlt
loope
lea
idivl
push
xchg
xchg
and
sub
push
lds
loop
sti
pop
mov
fdivrp
dec
xchg
stos
lcall
insl
pop
es
ret
lcall
fiadds
and
bound
lods
je
jg
loopne
adc
in
hlt
enter
repnz
test
fbld
es
hlt
popf
adc
loope
pop
aaa
sbb
xlat
inc
lock
adc
inc
test
jmp
jnp
nop
adc
mov
das
cmp
sbb
clc
clc
cs
mov
outsl
popa
rol
outsl
inc
pop
xor
push
adc
lock
mov
pop
dec
test
ficoml
and
insb
jns
bswap
jnp
or
cmpsb
sbb
push
test
and
lea
mov
addr16
mov
roll
mov
push
dec
pop
jecxz
aaa
outsb
xchg
stos
mov
gs
test
mov
pop
int
ja
xchg
enter
test
cmpsb
out
cmp
xchg
sub
mov
aam
jg
bound
arpl
shlb
loop
xor
mov
jge
rcrb
sbb
mov
dec
pop
shlb
and
lock
mov
or
sti
add
jne
daa
cmpsb
inc
mov
sbb
xchg
ja
mov
dec
hlt
dec
js
bound
mov
aaa
jne
mov
loope
lea
idivl
push
xchg
xchg
and
sub
push
lds
aam
std
cmpsb
mov
dec
lock
decl
lcall
insl
pop
mov
outsl
sub
and
sbb
pop
scas
jno
push
scas
imul
push
or
arpl
ret
div
cld
or
inc
addb
jne
lret
dec
mov
and
aad
aad
ret
push
sub
sbb
add
add
clc
das
inc
mov
xor
pushf
or
or
frstor
inc
sarb
insl
aaa
into
xor
rcrb
push
jns
inc
test
pop
lret
outsl
sub
scas
fsubl
jmp
or
and
test
and
jp
call
dec
and
shlb
int3
adc
pop
mov
aam
in
fbld
xchg
push
test
xorl
or
xchg
cmp
xorl
lret
ss
or
push
sbb
lds
icebp
sub
hlt
sub
or
adc
mov
insb
test
jecxz
lea
and
xor
mov
pop
add
add
add
in
or
and
movsl
mov
shlb
enter
adc
xchg
adc
cmp
rorb
pop
mov
test
aam
sti
pop
or
sahf
and
sbbb
js
es
push
std
xacquire
and
jecxz
and
fcoms
lret
rolb
hlt
pop
and
pop
pop
cmp
or
xor
add
negb
stos
inc
xchg
popf
call
rol
not
push
push
jmp
pushf
rcll
popf
xor
iret
dec
lcall
or
cmp
adc
push
push
xchg
dec
jmp
aam
jle
pop
mov
les
frstor
mov
push
daa
sub
mov
and
stos
mov
or
sub
in
push
adc
inc
jge
dec
enter
jecxz
scas
xchg
mov
out
sub
addb
push
dec
lret
inc
mov
and
insb
jnp
in
adc
int
and
xor
dec
push
xchg
stos
or
adc
and
mov
and
fsubl
mov
shlb
pop
ds
push
or
dec
mov
and
clc
jg
inc
pop
jne
add
cmc
pop
xchg
aaa
jecxz
mov
add
add
daa
sub
gs
mov
adc
inc
test
outsb
push
mov
dec
iret
int3
ret
inc
add
push
push
cmp
pop
dec
jo
jle
addr16
push
and
arpl
cmpsb
inc
addb
mov
sub
movsb
dec
fldenv
dec
fstpl
dec
ja
sub
xor
setl
inc
mov
jge
outsl
in
push
scas
adc
movsl
push
xor
out
incb
das
cmc
mov
mov
popf
test
adc
xchg
iret
push
push
and
call
cmp
mov
leave
push
push
jp
jp
ss
lcall
cmp
dec
loopne
ret
cld
or
daa
jmp
and
sbb
xor
fidivs
and
inc
push
xchg
das
xbegin
lods
cmp
adc
jno
test
repnz
rolb
scas
jmp
jle
add
sub
and
scas
mov
jecxz
or
adc
push
dec
je
mov
aam
jle
pop
mov
pop
mov
or
and
lahf
jge
popf
mov
push
lods
fbld
pop
shrb
loope
pop
dec
sarb
mov
cli
push
mov
aad
push
fidivrs
div
cld
or
jae
je
adc
loop
push
cs
dec
fcompl
jecxz
xchg
add
and
loope
cmpsl
aam
jmp
jo
dec
push
dec
jl
pop
adc
lret
push
pop
int
ja
movsl
jp
mov
pop
mov
adc
cmp
repz
insl
push
movsl
push
xor
test
pavgb
fstl
sbb
mov
cltd
fstl
bound
xor
xor
push
aad
push
add
mov
std
or
stc
std
xor
pop
fs
mov
or
and
cli
bound
nopl
inc
fstpt
mov
imul
sar
fwait
in
ds
bound
cld
js
iret
jae
movsl
das
es
dec
mov
or
movb
enter
xchg
out
jbe
jno
pop
lods
movsl
sbb
push
mov
ja
jb
ret
adc
or
dec
pop
sti
gs
mov
mov
hlt
adc
stc
sbb
mov
test
das
movsb
cmp
pop
ds
push
bound
xchg
mov
negl
das
test
push
rcrl
xchg
mov
leave
mov
iret
jns
xlat
pop
lods
call
subps
shr
sub
sub
lods
imul
mov
adc
lret
movsb
lds
mull
xchg
out
mov
js
pusha
test
mov
jmp
sub
mov
sbb
inc
cmc
andb
jns
or
inc
pop
je
cwtl
xor
sarb
aas
pop
out
or
lods
jnp
and
push
push
xchg
out
sbb
ss
lea
xchg
sbbl
dec
dec
mov
add
and
mov
scas
and
xlat
jl
ret
push
std
push
jae
push
xor
push
inc
lret
inc
mov
and
add
mov
mov
dec
and
xor
mov
xor
add
pop
push
stos
xor
jns
mov
pop
xor
push
cmp
push
lock
outsl
jl
pop
mov
inc
push
xor
daa
leave
jns
icebp
outsb
jle
icebp
loop
sub
add
mov
sub
stos
jecxz
insl
cwtl
insb
test
xor
push
addr16
popa
add
movsb
or
add
dec
cmpsb
loope,pn
jbe
xchg
stc
loope
sub
nop
cmpsb
and
jmp
mov
mov
xchg
fistps
loopne
cwtl
enter
adc
dec
ja
movsl
jp
mov
test
and
imul
xor
jnp
push
or
and
loopne
loope
jmp
lds
jmp
pushf
ljmp
adc
push
inc
inc
or
mov
cli
sub
mov
push
push
inc
in
data16
int3
jno
fwait
negb
stos
nop
cs
pop
fs
inc
lock
jge
mov
repnz
in
xchg
arpl
mov
push
jbe
stos
jmp
aad
fnstcw
push
adc
inc
jmp
xchg
iret
dec
mov
ret
jae
pushf
inc
dec
jno
sub
and
push
xor
sub
inc
jl
fwait
inc
and
dec
rcr
mov
inc
lcall
test
data16
push
stc
cli
push
loop
or
enter
mov
sahf
xchg
dec
out
test
out
pop
jmp
xchg
test
sub
xor
inc
add
pushf
mov
jmp
xchg
push
xchg
out
bound
ds
adc
dec
sarl
lods
movsl
sbb
push
mov
dec
sub
movsb
icebp
outsb
jle
icebp
add
mov
outsl
test
sub
notl
jecxz
dec
sub
and
nop
outsb
sahf
popa
mov
out
sub
jae
pop
gs
lods
loopne
pop
ds
push
bound
xchg
mov
negl
das
insl
mov
fcmovnbe
cmp
xchg
std
jb
inc
js
sbb
jg
mov
dec
jge
icebp
hlt
loopne
sub
aas
dec
inc
pop
addl
mov
je
lret
sbb
or
lcall
cmc
repnz
pop
pop
push
pusha
arpl
cmpl
inc
add
mov
call
fcmovne
push
vdivss
pop
add
adc
inc
das
cmc
mov
out
dec
into
jno
jae
popa
sub
pop
mov
sbb
ret
in
add
jnp
popa
push
in
mov
ja
insb
loopne
ror
into
dec
mov
pop
jl
dec
mov
iret
ficomps
shlb
in
ret
cld
fstpl
filds
jne
mov
mov
into
rolb
imul
jb
sbb
mov
mov
cmpsb
mov
mov
loop
xor
sbb
cmp
repz
pop
pop
mov
repz
inc
dec
cmp
fs
mov
bound
mov
aaa
jne
jbe
rcr
jae
filds
fdivs
push
xchg
xchg
and
sub
push
lds
add
push
cld
xor
addb
aad
ret
jecxz
pop
rcrl
push
pushf
fadds
jno
repz
dec
add
push
dec
and
dec
bound
adc
dec
ret
mov
cltd
mov
adc
stos
xchg
push
jae
mov
daa
jns
pop
aam
and
cmp
das
dec
push
addb
mov
push
push
fstps
sbb
test
mov
rolb
cvtps2pi
int
imul
pop
sub
stos
mov
adc
or
xchg
mov
push
cld
cmp
mov
push
cli
loop
leave
push
and
cs
lcall
sub
pop
xchg
in
mov
push
inc
test
aas
cmp
sbb
gs
xchg
out
mov
ss
mov
in
inc
and
push
xlat
ljmp
and
or
stos
lret
inc
repnz
rcrb
mov
jmp
jl
cmpsl
xchg
pusha
add
ja
sbb
dec
mov
lcall
inc
shr
std
ss
icebp
ret
test
int3
std
xorl
std
test
fadds
xchg
mov
push
and
fstl
xchg
mov
adc
cmp
test
push
lods
nop
inc
or
inc
jmp
mov
pop
push
or
imul
add
or
cwtl
das
inc
inc
int
xchg
and
or
jne
cmpsb
xchg
mov
cmp
mov
cli
aad
or
push
negl
das
insl
mov
fcmovnbe
dec
mov
add
inc
ljmpw
cmp
mov
out
adc
insl
sbb
es
lea
test
adc
imul
xorb
push
pusha
sbb
call
sbb
cmp
mov
sub
andl
jmp
lea
fmul
dec
das
mov
or
imul
add
push
add
outsl
std
sub
push
cmp
leave
int
nop
and
cld
cltd
fstl
bound
xor
repz
mov
dec
inc
jae
insb
test
fwait
jo
sbb
test
mov
leave
inc
arpl
pop
push
testb
pop
xchg
testl
ja
push
mov
or
out
popa
rcrb
subl
sbbl
pop
jle
in
mov
mov
cmpsb
sub
and
and
mov
jmp
cmpsb
inc
xorb
jg
xchg
test
xor
test
ret
cltd
mov
shlb
sahf
add
shr
pop
push
inc
leave
push
std
pop
dec
jnp
sbb
popa
xchg
add
mov
jle
lods
jne
jns
stc
jne
movsb
jo
stc
mov
clc
out
sar
sub
jae
dec
mov
pusha
cltd
pop
aas
or
cmp
add
adc
mov
test
sub
sbb
and
mov
mov
ficomps
xchg
loopne
cli
ror
pushf
add
insl
add
es
xchg
idivb
cmp
sbb
scas
push
xor
lods
mov
and
jbe
jae
sub
cmp
mov
xor
xchg
mov
cld
adc
lret
jns
dec
inc
mov
adc
movsl
jp
push
mov
pusha
adc
xchg
and
test
in
ret
sub
mov
sub
jne
fmuls
push
lret
scas
jl
jmp
adc
mov
test
add
out
incb
sbb
push
pop
jns
mov
cli
sub
lcall
cmp
sub
jmp
or
int
xchg
and
loope
xchg
inc
movsb
icebp
push
jge
sbb
dec
jmp
pop
inc
jo
push
in
inc
icebp
cwtl
insl
or
cmpsb
mov
dec
mov
jl
pop
mov
push
push
out
jecxz
lock
xchg
insb
jnp
mov
push
lret
dec
pop
loopne
fsubrp
sub
cmp
movsb
xchg
insl
pop
sbb
test
sub
cmc
push
cmp
std
repnz
sar
xchg
std
xchg
push
xor
adc
ret
push
add
pop
ror
mov
imul
scas
lea
dec
and
pop
xor
mov
add
push
daa
push
inc
dec
sub
jnp
dec
nop
and
jne
inc
pop
xor
inc
xchg
push
dec
push
ljmp
sti
cs
xchg
and
in
and
punpcklwd
jecxz
xchg
adc
add
add
dec
repnz
lahf
lds
xor
fsub
sbb
pusha
clc
fdivr
push
subps
mov
and
leave
dec
into
mov
ror
push
dec
rcll
out
or
icebp
cmp
movsb
or
xlat
sbb
sub
mov
add
fwait
xor
and
dec
sbb
loopne
call
pop
in
or
and
dec
jl
pusha
insb
xchg
jns
orl
insb
flds
lods
aaa
and
loope
sub
shll
ret
jnp
or
push
shlb
les
pop
xlat
sti
das
dec
xchg
and
add
mov
les
jmp
add
mov
sub
cmp
out
jne
jne
mov
jl
mov
sbb
jmp
jb
lods
fidivrs
mov
insb
test
jecxz
lea
cltd
rorl
test
divb
and
inc
push
xchg
jecxz
lods
jmp
push
mov
aaa
jne
jbe
adc
cmpsb
stos
in
pop
aaa
in
mov
insl
out
ds
jae
sub
push
mov
movsb
rorb
repz
dec
add
push
dec
inc
jle
inc
jle
cli
movsl
outsb
test
and
jl
dec
sti
cwtl
jmp
ljmp
jmp
xchg
pusha
cmp
xchg
jne
sub
popa
cmp
mov
cmp
mov
push
jae
pop
out
subb
dec
xchg
mov
jae
push
dec
sub
push
sub
popf
out
push
mov
pop
cld
fwait
gs
jbe
test
loope
test
pop
jno
out
and
fsubrs
xadd
nop
daa
test
filds
xchg
div
gs
xchg
out
mov
ss
rorb
js
pop
gs
pop
stos
enter
lret
add
cmpsb
orl
jne
test
test
enter
dec
sarb
out
add
jmp
mov
clc
sub
sbb
dec
loope
pop
push
jecxz
inc
and
int3
fwait
and
test
xchg
loop
inc
cmovns
add
mov
mov
jge
bound
popa
rcrl
mov
xchg
push
pop
int
dec
dec
cmc
lret
xor
xchg
andb
mov
cld
stos
push
mov
jecxz
addb
in
idivb
jne
int3
xchg
stos
fwait
cmp
sub
addr16
mov
fldt
in
and
imul
int3
mov
inc
add
push
jae
rcll
popa
xchg
popa
ds
xchg
pop
imul
ja
mov
sbb
push
push
out
fistpll
jns
aad
ret
push
sub
jae
popa
add
movsb
or
pop
or
popa
rol
outsl
inc
pop
xor
push
push
testb
jmp
icebp
push
jmp
pop
add
leave
push
aaa
pop
arpl
add
cmp
xchg
enter
dec
adc
repnz
sbb
in
xchg
int
sub
bound
popf
cmp
push
test
cmpsl
fnstsw
test
add
test
addl
jne
pop
js
mov
mov
leave
xchg
sbb
sarb
mov
jne
sbb
andl
jns
lahf
jmp
out
mov
stos
cli
jne
test
stc
iret
int
sub
lea
repnz
fs
bound
and
pushf
jnp
test
jbe,pt
dec
xorl
outsw
and
adc
sahf
out
mov
testb
subl
inc
jae
mov
mov
add
rol
je
adc
loop
fisttpll
dec
adc
jle
test
fiaddl
das
inc
mov
lods
orl
jl
jecxz
bound
pop
pop
adc
mov
and
xchg
cmp
scas
fsubl
inc
add
lock
dec
cmp
add
shrl
push
mov
add
outsl
push
pop
loope
and
ud1
int
sub
jo
mov
inc
subl
fstps
repz
int
shll
mov
xchg
int3
lcall
pop
mov
push
push
aas
ficomps
insl
sbb
pop
sahf
rcrb
in
mov
outsb
jecxz
test
sub
jmp
jmp
mov
addb
cli
negl
test
jno
nop
cli
mov
leave
push
scas
mov
leave
ja
adc
fnstcw
or
sbb
cmpsb
insb
testb
inc
dec
mov
insl
mov
xchg
test
add
xchg
insb
push
xor
fs
jmp
insl
js
dec
test
pop
das
xchg
dec
adc
sub
add
mov
sub
stos
inc
int
loop
inc
iret
aad
aad
lret
jmp
or
sbb
ss
movsl
shufps
sub
loope,pn
jne
movsb
mov
fimull
iret
int3
jne
cmp
xchg
adc
pusha
popf
stc
push
mov
pop
imul
add
push
dec
adc
pop
mov
aam
in
fbld
pop
out
lods
js
leave
sub
inc
popf
jb
add
jle
cs
cmp
cmp
sub
inc
clc
ds
popf
inc
pop
cld
and
dec
jecxz
iret
in
ljmp
jge
test
jno
nop
cmpsb
mov
dec
pop
loop
adc
sahf
ret
mov
fnstcw
or
clc
rorb
add
mov
jecxz
lods
pop
lods
call
iret
and
adc
mov
sarl
test
icebp
or
scas
xchg
jno
push
leave
sbb
push
jl
mov
cmpl
add
es
mov
push
jbe,pt
sbb
push
int
cmc
dec
insl
mov
sub
es
mov
mov
cwtl
bound
cmp
filds
clc
movl
sub
jp
and
add
adc
or
popa
cwtl
int
xchg
popa
add
movsb
or
pop
or
push
cli
shll
adc
js
pop
es
lcall
jb
inc
js
sbb
push
leave
dec
in
out
jb
xchg
fiadds
xchg
loop
lcall
add
outsl
or
int3
test
and
ror
xor
cmp
cmp
xor
movsb
mov
jmp
mov
je
adc
mov
xchg
cld
cmpsb
test
cmpsl
adc
xor
cmp
push
pop
inc
loopne
jb
jb
daa
fdivrl
mov
cltd
xchg
hlt
sbb
iret
popf
enter
rcrl
add
jb
dec
inc
mov
adc
sub
add
movsl
push
cmc
jecxz
test
mov
dec
adc
jle
jle
pop
xchg
gs
or
movsl
call
stos
xor
insl
dec
mov
pop
xor
push
cmp
cmpl
push
rorb
outsl
jge
pop
cmpl
out
push
cltd
sti
xchg
movsb
icebp
outsb
and
add
dec
lock
sub
mov
dec
xor
push
addr16
popa
add
movsb
or
pop
leave
xchg
cmpsb
loope,pn
jbe
xchg
stc
jnp
data16
sub
insb
test
and
and
shll
daa
test
and
sbb
jbe
fs
xchg
aam
mov
cltd
int3
dec
ss
test
into
lcall
jmp
cmc
mov
sbb
inc
cmc
andb
jns
or
inc
repnz
shrb
xlat
out
shrl
repnz
xchg
push
inc
test
pushf
test
xor
std
ss
icebp
ret
test
int3
std
xorl
std
test
fadds
xchg
mov
push
and
fucom
mov
shrb
jbe
xor
add
adc
add
js
dec
test
pop
das
xchg
dec
adc
repnz
popf
cwtl
sbb
sub
clc
and
jae
mov
inc
test
xchg
fs
insb
shlb
ja
aas
in
push
adc
inc
insb
test
xor
push
addr16
xchg
mov
dec
xchg
addl
inc
mov
iret
add
pop
test
fimuls
sub
and
insb
push
xchg
imul
jns
adc
pop
lret
outsl
sub
dec
xchg
pushf
movsl
jp
mov
pop
mov
adc
add
aas
mov
insl
push
movsl
push
xor
test
pavgb
test
jns
dec
test
cltd
fstl
bound
xor
push
cli
adc
mov
insb
test
jecxz
lea
cltd
rorl
cmp
shll
push
cwtl
cwtl
lods
jmp
push
mov
aaa
jne
jbe
rcr
jae
pop
xor
add
loope
xchg
xchg
mov
adc
push
data16
shr
cmovl
xor
es
ret
clc
adc
dec
iret
inc
lcall
mov
daa
adc
enter
adc
and
enter
sub
ljmp
orl
add
push
push
movl
repnz
loop
xchg
fs
mov
sbb
dec
popa
xchg
pop
push
pusha
mov
shrb
sbb
sbb
adc
xchg
imulb
dec
inc
push
adc
push
cs
int
xchg
and
mov
repnz
divl
adc
shrl
adc
jge
mov
scas
test
adc
dec
ja
movsl
jp
movb
pop
or
test
and
jae
cs
test
ret
sub
pop
add
add
adc
adc
adc
dec
outsl
inc
pop
sub
fimull
call
cli
adc
xchg
and
in
sti
fs
mov
mov
sbb
or
pop
gs
dec
in
pop
leave
iret
data16
mov
std
or
stc
std
xor
pop
fs
xchg
lea
roll
inc
lock
rorl
dec
mov
insb
mov
lret
xchg
aaa
fsubp
lcall
or
mov
mov
imul
lcall
clc
bound
xor
in
pop
and
lret
mov
les
add
pop
and
dec
enter
lret
mov
sub
stc
jle
lods
jne
jns
stc
jne
movsb
dec
je
gs
pop
enter
inc
mov
in
adc
mov
pop
pop
push
pop
pushf
aas
or
and
inc
push
jnp
fstpl
fcmove
pusha
call
pop
add
push
jmp
mov
inc
je
fsubl
gs
jecxz
cltd
sub
jmp
pop
aas
or
push
pop
push
mov
jmp
aaa
movsb
or
add
jmp
push
das
cmp
sbb
inc
out
popa
jmp
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
ficoml
fs
xchg
ror
into
out
cld
jmp
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
push
pop
jmp
push
mov
and
inc
push
nop
mov
ffreep
jmp
scas
xchg
jmp
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jmp
jbe
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
push
push
jb
shl
dec
cld
cld
pop
pop
xor
push
push
test
neg
push
pop
inc
cld
pop
pop
cmp
je
push
push
stc
test
inc
mov
lea
xchg
mov
cld
pop
pop
mov
jmp
jecxz
cltd
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
aad
and
sub
pushf
movsl
jp
mov
inc
pop
xor
shlb
mov
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
add
lods
loop
xor
add
jmp
push
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
dec
mov
add
push
push
pop
add
jmp
xor
imul
xchg
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
cmpb
jne
jnp
das
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
push
push
pop
jmp
sub
daa
sub
jmp
aam
jb
inc
jns
pop
insb
xor
xor
push
push
inc
mov
cld
pop
pop
pop
jmp
pop
add
and
movsl
jp
mov
inc
pop
xor
shlb
sub
mov
sub
jmp
adc
outsb
imul
fs
xchg
ror
into
out
cld
test
or
add
loopne
mov
jmp
xor
sub
shr
push
cmc
mov
sbb
xlat
les
cs
push
jmp
cmp
dec
loope
hlt
sbb
rcrl
xchg
arpl
fidivrs
or
ljmp
lea
and
inc
fcmovb
jmp
scas
mov
shll
std
repnz
push
mov
jmp
sar
lahf
in
mov
mov
add
add
jmp
push
xchg
test
xor
imul
out
sbb
cli
stos
or
add
push
push
jmp
fstps
fwait
cmp
mov
sub
jmp
jbe
in
add
push
dec
dec
outsl
add
jmp
jl
pop
rol
jmp
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
jmp
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
sub
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
inc
push
jmp
adcb
push
pop
jmp
test
or
add
addl
sub
jmp
jle
sub
mov
sbb
xlat
les
mov
add
add
dec
jne
jmp
arpl
jmp
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
and
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
mov
cmpb
jnp
icebp
push
mov
add
jmp
scas
dec
fsub
mov
inc
je
repz
jmp
mov
jmp
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
add
pop
jmp
adc
push
das
cmp
sbb
inc
out
aam
les
add
add
push
push
xchg
inc
cld
pop
pop
pop
push
push
dec
mov
test
cmp
dec
push
pop
inc
cld
pop
pop
push
push
jmp
lret
mov
pop
add
and
pop
mov
add
add
pushf
movsl
jp
mov
sub
jmp
inc
pop
xor
shlb
pop
push
jmp
sbb
int
xchg
rclb
hlt
jmp
leave
into
out
cld
test
xchg
add
jmp
ficompl
push
add
add
call
cmp
jle
sub
les
