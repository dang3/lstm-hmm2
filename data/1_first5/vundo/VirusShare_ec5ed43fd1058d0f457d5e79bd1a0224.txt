jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
ljmp
decb
lcall
add
add
add
add
add
add
add
add
dec
add
or
in
filds
cmp
sahf
add
add
cmp
incl
sub
add
xchg
add
add
add
pop
add
icebp
add
add
outsb
add
add
mov
add
dec
add
add
aaa
add
add
add
add
push
add
add
add
push
add
add
sub
add
cmp
sub
add
mov
and
ret
add
add
incl
push
add
add
add
sub
add
add
push
and
xchg
add
add
add
or
xchg
add
add
add
sub
add
cmp
sub
jl
add
add
add
add
add
add
and
cmp
sub
add
add
or
cmp
and
and
jmp
add
add
cmpsb
add
add
mov
adc
add
cmp
jl
inc
add
add
or
xchg
add
xchg
add
cmp
xchg
add
add
add
imul
lahf
add
jae
inc
add
and
fiaddl
dec
add
add
add
add
add
add
add
add
and
ret
add
add
sub
sbb
adc
add
add
add
add
outsb
add
add
and
dec
add
add
and
pop
add
add
add
add
dec
add
add
lahf
add
add
cmp
cmp
icebp
add
add
add
add
mov
add
add
add
add
xchg
add
js
stos
add
push
add
and
addb
add
scas
add
add
or
cmp
mov
add
add
cmp
inc
add
add
popl
cmp
jae
inc
add
pop
add
add
and
add
add
add
add
or
outsb
add
outsb
add
inc
add
add
xchg
add
cmp
pop
add
add
or
hlt
add
add
add
and
inc
add
add
cmp
pop
add
add
add
xchg
add
add
add
or
cmp
or
and
add
outsl
add
xchg
add
add
add
or
cmp
xor
mov
filds
fildl
add
add
xor
incl
and
inc
add
add
add
fildl
pop
add
and
mov
add
add
pop
add
and
dec
add
add
add
insl
add
add
add
mov
or
pop
add
adc
inc
add
add
add
add
add
imul
and
xor
mov
test
add
xchg
add
adc
mov
loop
xor
mov
xchg
add
add
inc
add
outsl
add
sbb
push
add
cmp
pop
add
dec
add
inc
add
add
add
add
add
add
cmp
cld
add
add
add
add
pop
add
add
add
ret
add
and
add
or
cmp
sbb
and
imul
add
add
add
add
pop
add
add
add
inc
add
addl
add
xchg
add
add
add
pop
add
add
add
pop
add
add
add
or
add
add
dec
cmpb
mov
out
cvttps2pi
je
test
stc
or
mov
scas
fisubl
pop
pop
jp
hlt
jne
inc
ds
or
dec
test
mov
mov
adc
mov
xchg
ljmp
adc
sbb
fnstenv
mov
stc
adc
cmc
out
push
mov
ficompl
jecxz
sbb
or
sub
mov
xor
inc
sub
popf
fadd
gs
pop
sub
pop
add
inc
pop
stos
add
movsl
push
jmp
mov
push
repz
push
mov
xchg
jb
shl
rcll
mov
scas
lret
js
lock
mov
repnz
and
xchg
pop
xchg
add
jmp
iret
mov
jmp
xchg
lock
jae
das
or
jno
xor
mov
scas
or
imul
mov
cwtl
popf
mov
xor
lcall
fwait
inc
hlt
fiaddl
pop
jge
iret
cmp
nop
loopne
flds
xchg
test
mov
mov
aas
sub
mov
mov
mov
test
fisttpl
push
hlt
test
adc
dec
imul
cmpsl
lock
mov
push
inc
mov
inc
xchg
push
ret
mov
jo
push
mov
inc
cli
mov
mov
cltd
add
mov
icebp
sbb
jg
cmpsb
cmc
fists
fld
mov
insl
inc
jns
orl
fcmovnbe
add
rcrb
cmp
push
mov
outsb
dec
call
inc
subl
fldenv
scas
lret
and
dec
lea
add
fstps
pop
add
mov
mov
stc
cmp
add
cmc
mov
in
xchg
inc
add
data16
in
shrl
push
mov
fldenv
mov
pushf
sub
cltd
mov
jle
mov
leave
jnp
mov
push
jmp
lds
or
clc
xchg
pushf
fidivrs
stc
pusha
cwtl
daa
mov
sub
pushf
dec
dec
xchg
mov
sbb
jl
lods
rep
push
xchg
jp
movsb
push
pop
xchg
push
mov
cmp
add
adcl
sbb
cmp
jnp
and
mov
lahf
test
sub
jns
pop
int3
int3
inc
int3
insl
aaa
hlt
cltd
addr16
loop
out
fsubs
out
or
jle
movsl
js
aas
xchg
pushf
repz
inc
pushf
pop
mov
xchg
jne
js
fs
xchg
and
sbb
jne
cmp
mov
push
ljmp
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
enter
jmp
sti
xor
inc
xchg
push
pop
inc
mov
mov
lds
cmp
scas
add
adc
inc
fwait
push
stos
pusha
mov
nop
or
sbb
sub
cmp
jae
sub
jns
and
jo
sbb
cmpb
rcrl
pusha
xchg
imul
jmp
xchg
push
dec
fwait
test
or
push
pop
dec
sbb
fsubrl
pop
aas
mov
imul
push
sbb
es
ss
mov
pop
xchg
hlt
aad
sub
mov
sahf
jns
rolb
test
sbb
mov
pop
sub
xor
aaa
pop
add
xor
pusha
push
mov
pop
jo
pop
test
sub
cmp
frstor
ja
adc
mov
fadd
imul
dec
stos
sbb
shll
inc
out
ljmp
mov
js
pop
shl
fiaddl
or
lcall
sti
xor
jecxz
stos
pusha
sbb
cmp
cld
adc
sbb
cmp
mov
dec
sbbl
cmp
dec
ret
or
push
add
jne
inc
xchg
pop
cltd
xchg
push
cltd
push
lcall
or
inc
sub
or
imul
xorb
rolb
jp
cmpsl
jae
lock
fmuls
push
stos
pusha
mov
nop
imul
shrb
loopne
lock
add
adc
and
xor
pusha
mov
nop
imul
shrb
loopne
lock
add
sub
fiadds
shll
sub
sbb
mov
inc
sti
mov
push
adc
jmp
sbb
inc
shl
cmp
jb
sahf
mov
or
mov
or
cli
jge
mov
add
imul
xor
mov
test
stos
xor
aam
icebp
sahf
or
insb
mov
jo
fbld
push
aad
sub
cs
dec
add
fdivrs
bound
jge
shll
loop
call
inc
xchg
sahf
cmp
xor
ffreep
or
nop
push
adc
andl
sub
adcl
mov
or
lea
fs
mov
pop
imul
scas
fldt
xorb
dec
jl
dec
fmuls
aas
push
mov
enter
jg
adc
repnz
xchg
inc
mov
xor
jp
mov
aad
xchg
jae
addb
aad
cmp
pop
ret
mov
test
or
mov
mov
fcomps
es
mov
pop
fwait
bound
and
push
cmp
mov
pop
pop
ret
cmp
incl
sbb
loopne
mov
mov
push
add
jns
adc
loop
mov
test
inc
add
jae
xor
movsl
xor
imul
nop
mov
lret
dec
pop
cmp
xchg
sahf
fwait
mov
sub
inc
inc
daa
and
outsl
cmp
mov
mov
das
movsb
fcom
jp
mov
mov
into
lret
aaa
popf
pop
pop
mov
mov
cmpsb
lds
int3
mov
mov
or
cmp
push
sahf
lcall
inc
test
xchg
jl
mov
and
mov
push
shlb
leave
test
movsl
cmpsb
fisttpll
cs
xchg
dec
inc
push
pusha
shll
jnp
mov
leave
pop
lods
out
pop
lods
add
mov
aad
mov
or
lods
adcl
mov
add
sahf
jmp
xchg
ss
xchg
fimull
dec
dec
inc
push
loope
sub
int
ja
dec
push
push
lcall
lea
es
dec
sub
or
sub
sahf
inc
mov
cmp
testl
pop
add
std
ds
jns
out
sti
fcompl
sbb
adc
outsl
mov
loop
movsb
sub
pop
imul
and
popa
enter
cld
fistl
mov
xor
xor
xlat
push
je
xor
inc
ficompl
mov
mov
jnp
sbbl
push
jge
jl
xor
fisubl
sub
and
jae
mov
imul
adc
cmc
xchg
cmpsb
loop
pop
jle
fdivrl
sub
lahf
pop
sti
mov
inc
pop
add
lods
fcmovnb
rolb
movsl
jl
mov
inc
mov
cmp
mov
lods
jmp
xor
cmp
loop
in
add
stos
testb
sub
xor
jo
shlb
fistps
mov
stos
cli
mov
push
lock
or
mov
dec
mov
jp
in
repnz
rcll
sub
xchg
fisttpl
inc
imul
pop
mov
movsb
push
dec
mov
outsl
pop
in
cmp
notl
inc
mov
inc
add
mov
pusha
mov
sub
call
xor
push
cld
dec
pop
mov
sub
in
pop
add
mov
test
fdivs
ljmp
cmp
cmp
inc
and
addr16
mov
repz
mov
push
xchg
flds
and
addl
add
mov
sbb
aad
scas
jge
cmp
ficoml
insb
ljmp
inc
mov
sbb
out
std
decb
dec
rcr
add
inc
push
popf
xchg
cmp
sti
es
lahf
push
mov
dec
inc
lock
jp
insl
xor
imull
data16
addr16
cmc
inc
cmpb
data16
or
jae
adc
fwait
jle
mov
pop
test
sub
dec
xchg
dec
jmp
mov
lods
xchg
lret
into
mov
aam
mov
rcr
push
rorb
adc
sub
out
mov
aad
sub
adc
loop
adc
outsl
mov
daa
shll
adc
mov
stos
insb
push
in
popf
dec
mov
mov
add
fwait
shl
mov
orl
out
icebp
sub
cmp
ret
repnz
jne
pop
cmp
ds
dec
fbstp
aas
or
inc
mov
loopne
repnz
shll
enter
xchg
mov
cmp
cmp
int3
lds
pop
stos
push
mov
pop
jmp
es
movsb
jp
loope
fnstsw
ja
pushf
aaa
scas
dec
adc
cli
call
icebp
scas
repnz
mov
pop
sahf
sbb
inc
mov
movl
lahf
cmc
int3
popf
add
adc
cld
adc
cmp
and
mov
loope
iret
pop
andb
shll
dec
lock
pop
mov
mov
mov
cwtl
int3
sarl
pusha
jmp
adc
cmc
jae
mov
xchg
out
outsl
scas
add
shlb
sub
test
xor
and
cmp
movsb
sarb
imul
and
sub
push
imul
test
mov
les
push
push
stos
or
mov
test
xor
les
psubusb
test
push
aam
ss
shrl
das
call
mov
add
xor
inc
mov
and
leave
mov
inc
div
pop
insb
outsb
cmpsl
inc
adc
cmpsb
mov
int
pusha
fstpl
inc
cli
jb
adc
pop
je
push
adc
mov
movsb
imull
fildl
stos
xor
push
pusha
and
mov
adc
dec
leave
addr16
je
and
jo
xchg
out
and
xchg
int
jno
iret
pop
movsb
jg
arpl
imul
movsl
insl
push
rep
add
cmc
pushf
xchg
push
aaa
loopne
sahf
xchg
pop
push
sub
scas
adc
inc
jae
sahf
out
xchg
mov
std
js
dec
ljmp
lea
mov
hlt
ret
dec
cmp
xchg
cs
jmp
rclb
sbb
or
jle
xchg
adc
mov
sub
cmp
add
push
test
cmp
imul
push
or
pop
cmc
in
mov
jge
in
pop
mov
ljmp
mulb
cmp
ss
test
lcall
pop
rcrl
das
repnz
push
mov
push
add
nop
repz
int3
pop
sti
loope
dec
dec
and
cmp
rol
pop
je
daa
in
test
lock
push
jnp
mov
imul
adc
push
pusha
jae
int3
inc
add
mov
rcl
xor
pushf
mov
push
pop
pop
lods
jbe
scas
sbb
loope
lahf
jmp
cs
and
dec
fs
sub
dec
mov
lock
jp
fs
pop
or
xchg
jmp
mov
insl
mov
and
push
xchg
xchg
dec
dec
aas
fdivl
mov
js
and
push
repnz
push
push
testl
xlat
push
dec
jno
mov
dec
ja
shrb
push
jns
jge
adc
js
nop
inc
mov
or
pop
js
sarb
mov
and
push
int
mov
test
push
es
dec
fdivrs
push
aam
xchg
out
or
xor
and
pop
and
jb
mov
sub
lods
adc
ret
je
pop
andb
out
push
cmp
in
sti
loopne
jle
dec
jp
aaa
or
js
xor
adc
jp
iret
fildl
int3
ret
pushf
or
adc
int
xchg
pop
pop
lcall
add
insl
cmp
jae
icebp
int
cli
popa
not
jno
das
jne
pop
sbbl
pop
iret
into
push
aad
in
fbstp
cltd
orb
inc
cmc
xorb
dec
cmpsl
pop
scas
cmp
adc
cmp
cmp
mov
push
aas
lret
iret
addb
mov
enter
mov
xchg
int
xor
push
add
lock
fcoms
ss
xor
inc
xchg
cmp
in
mov
sbb
jb
sub
inc
sbb
pop
pushf
pop
push
pusha
das
push
pop
mov
sub
andb
sbb
sbb
insb
in
sahf
test
inc
fsubp
push
cmp
cltd
xor
adc
pop
divl
jb
push
push
pushf
xor
scas
push
push
insb
addr16
jo
mov
pop
enter
xchg
mov
das
xchg
mov
mov
ret
and
lds
repnz
imul
es
xchg
test
roll
fstl
inc
push
shlb
and
adc
xor
mov
aam
imull
scas
mov
mov
cld
mov
push
rcr
and
rcrb
push
inc
push
inc
mov
outsb
lret
add
pusha
push
or
mov
outsl
in
lds
leave
icebp
push
pop
in
ljmp
push
mov
inc
test
ret
mov
mov
pop
shrl
int
mov
in
mov
cmc
lock
xor
pop
lock
sbbl
push
js
int
push
cltd
lods
adc
adc
test
add
inc
mov
adc
fdiv
dec
or
cmp
ffreep
stos
jne
pop
cmp
or
push
adc
aas
lcall
cmc
push
subb
dec
out
xchg
xchg
lcall
es
out
orl
sub
add
dec
mov
cmp
sahf
cld
and
jmp
shll
mov
mov
inc
fs
enter
push
add
lods
call
fucomip
movsb
pop
inc
xor
movsb
enter
push
pop
ret
out
fstps
jo
fidivs
cs
les
sbbl
popf
add
cmp
xchg
mov
mov
mov
sub
push
loopne
rclb
inc
movsl
sbb
out
mov
test
out
mov
pop
dec
in
cmp
addl
pop
shl
push
sarl
lds
fistpl
mov
cltd
xchg
jb
sbbl
faddl
jecxz
mov
dec
inc
std
lods
cwtl
sbb
jae
loop
push
add
pushf
setbe
sar
adc
xor
lock
xchg
shrb
sarl
ds
mov
and
fmull
imul
ds
je
adc
mov
xchg
xor
jo
bound
mov
xor
push
pop
lea
jmp
mov
int3
sbb
xor
shrl
enter
add
mov
repz
mov
cmp
jns
leave
sub
test
ret
mov
cmpsl
jp
inc
mov
lods
xchg
and
loopne
out
in
loop
jnp
pop
div
push
lret
jno
xor
arpl
mov
popa
push
hlt
pop
cwtl
les
sub
out
xchg
daa
adc
lret
push
lods
cmp
repz
popf
lds
sbb
or
bound
adc
bound
xchg
out
sbb
das
or
jo
or
xor
dec
inc
sub
cld
push
stos
inc
dec
push
lcall
sbb
es
add
je
adc
mov
gs
xchg
in
iret
or
lods
jns
cmp
out
jns
mov
outsb
data16
in
scas
cmp
stos
js
popa
sub
or
mov
cli
push
pop
ds
cli
fisttps
xor
scas
add
std
test
add
test
nop
rcr
sub
mov
cmp
cmpsl
add
fbstp
add
xchg
cmp
cs
and
enter
dec
and
shlb
shr
pusha
xchg
dec
and
orl
fisubrl
inc
sbb
arpl
or
add
in
xchg
outsl
jmp
lret
inc
sub
sbb
sbb
clc
cmp
push
sbb
cmp
inc
push
mov
mov
mov
push
fldenv
lea
test
adc
or
data16
int
jmp
cmpsl
inc
mov
push
rorb
shr
imul
daa
out
cmp
loope
pusha
aad
jg
lods
cmp
sbb
sti
pop
add
test
dec
jmp
xchg
mov
or
mov
rorl
jmp
or
xchg
or
in
mov
imul
xchg
movb
in
mov
push
inc
push
lcall
int
pop
lea
das
dec
add
shr
movsl
push
test
or
test
stc
loope
sbb
mov
adc
iret
repnz
outsb
push
jmp
stc
cmpsb
jg
pop
std
adc
cwtl
jl
xor
mov
je
pushf
adc
rcll
pop
jg
sub
int3
ljmp
and
mov
cmp
fwait
cmp
loop
jb
adc
pushf
lret
jae
inc
add
and
cmp
fildll
xlat
orb
inc
movsl
lods
pop
dec
in
or
sub
cmp
iret
adc
nop
ss
jo
into
sbb
enter
xor
daa
xchg
loope
pop
sub
jp
add
and
add
mov
sti
stc
imul
cmpsl
xchg
aam
push
pop
pop
popa
xchg
sub
icebp
xchg
push
popf
data16
pop
or
lcall
pop
pop
sbbb
jp
clc
mov
jle
sbb
rolb
mov
push
nop
xchg
imul
test
bound
dec
adc
or
mov
popf
mov
mov
es
and
movsb
lods
add
add
adc
mov
data16
add
push
inc
cmc
fnsave
rcrb
jbe
lret
inc
xchg
mov
lds
shlb
sahf
cmpsl
in
std
mov
jae
out
mulb
imul
jmp
nop
jg
sub
cmc
push
cld
sub
or
lea
adc
roll
movsb
cltd
lret
daa
out
push
aas
fs
test
push
fidivrl
addr16
repz
push
xor
movsl
testl
enter
mov
movsl
insl
pusha
loopne
fpatan
test
test
add
sub
mov
cmc
movsb
dec
sbb
pop
add
cs
adc
imul
jno
pop
frstor
add
test
clc
outsb
sub
rorl
sub
leave
jp
mov
outsb
adcb
pop
andl
xchg
xchg
and
mov
int
ljmp
mov
shr
sub
or
dec
rcrl
mov
adc
push
ja
cwtl
cmpsb
xor
sbb
lcall
int3
ret
jb
mov
into
xor
and
insb
adc
cwtl
add
popf
dec
jp
jnp
sub
cmp
loop
mov
jmp
filds
push
test
cmc
jns
ss
mov
in
movsl
xchg
stc
push
stc
mov
lcall
adc
cs
dec
out
into
dec
gs
je
sub
adc
ficomps
stos
inc
sub
mov
shll
mov
icebp
incb
add
cmp
jl
dec
enter
repnz
nop
cmp
adc
ja
inc
sub
pop
in
enter
loop
mov
cmp
cld
in
push
cmp
test
arpl
inc
leave
mov
addr16
aad
adc
sti
sbb
sbb
or
pop
jmp
push
push
stos
adc
mov
gs
or
xchg
les
or
imul
mov
sbb
pop
fdivr
mov
scas
fcom
cs
sbb
cltd
xchg
lret
mov
sub
and
push
ljmp
jo
in
xor
icebp
leave
sub
or
inc
sar
sub
xchg
mov
fldenv
fldl
test
rcl
add
loopne
lahf
int3
pop
add
cld
nop
jae
test
bound
stc
cltd
jle
repnz
inc
pop
aas
pop
or
leave
js
inc
xlat
and
cmpsb
inc
jns
lcall
cs
lods
dec
jne
or
imul
hlt
or
xchg
popf
pop
pop
xchg
xor
jg
test
xor
jnp
pop
out
or
notb
lahf
cmp
das
cmpl
sahf
adc
jle
and
pop
out
bswap
sub
ja
test
pop
or
inc
or
xchg
add
fdivp
ss
lods
nop
call
fldcw
ja
dec
xor
sahf
outsb
sub
sbb
test
push
dec
adc
add
push
test
fisubl
jne
adc
cmp
xor
fs
test
push
mov
jne
sarb
ljmp
push
aaa
pop
mov
fbstp
cltd
pop
fsts
adc
cld
arpl
and
mov
pop
into
ljmp
es
into
sahf
scas
adcb
scas
adc
cwtl
das
push
mov
js
sub
or
iret
mov
add
dec
jp
xchg
and
data16
xchg
or
fxam
xor
pop
mov
cmc
jmp
xor
pusha
iret
movsb
inc
push
jns
sbb
movsl
dec
and
and
cld
push
push
dec
out
cmp
fsts
fucom
dec
sbb
inc
sahf
roll
adc
xchg
loope
sub
mov
and
lea
pop
fldcw
movsb
cmp
xchg
xor
jne
jge
adcb
lds
push
xchg
ljmp
fisubrs
lret
je
shr
pop
movsb
mov
and
iret
inc
lods
in
gs
daa
xlat
and
fsubrs
imul
loopne
sub
xchg
cmp
gs
add
dec
sti
call
xorb
shll
xchg
out
sbb
xchg
adc
lods
cli
push
mov
push
scas
push
adc
jmp
stc
mov
mov
mov
int
push
lock
dec
lds
xor
fbld
das
sub
push
jp
mov
xchg
fcmove
push
xlat
popa
sbb
adc
add
cmp
mov
cmc
sub
ds
mov
xlat
xor
pop
add
add
inc
dec
aam
in
subb
out
aas
mov
sbb
sub
dec
sbb
fisubrl
pop
cmp
mov
frstpm(287
sub
orb
or
jbe
pop
lret
out
cmp
rcrl
cmp
cld
inc
sti
loope
add
xlat
pop
nop
jo
mov
imul
add
call
mov
xor
std
rcrl
rol
mov
fwait
ret
setg
in
lcall
fidivrs
mov
xchg
sub
adc
add
cmpsb
int
jno
cwtl
pop
hlt
nop
jp
xchg
mov
jmp
or
int
lock
int3
jb
dec
call
lods
jns
mov
sbb
das
jge
add
ljmp
inc
push
push
stc
jnp
shrb
addl
fwait
push
int
mov
imul
dec
push
cs
jb
das
dec
dec
add
or
out
jns
outsb
push
in
sbb
js
in
mov
jp
das
fldl2e
fistpll
test
fdivrs
lods
scas
or
xchg
or
sbb
pop
mov
sti
cmp
es
lahf
das
addr16
push
addr16
jmp
in
rorb
cmp
add
and
arpl
pop
mov
dec
int
outsl
clc
and
add
insl
lea
mov
insl
jae
xor
push
inc
pushl
fsubs
cmpb
pop
pop
out
push
pop
and
daa
repz
mov
cmpsb
ja
fsub
pop
mov
inc
jge
mov
insb
sub
out
imul
lds
into
mov
mov
lret
push
inc
jb
in
xchg
data16
sbb
add
stos
pop
lcall
push
mov
popa
daa
cmp
ret
mov
in
xchg
je
out
imul
push
lds
int
dec
je
push
xor
cs
into
setp
cltd
push
stc
test
add
mov
data16
fisubl
test
lret
adc
fwait
push
stos
pusha
mov
nop
imul
shrb
loopne
lock
add
adc
and
xor
pusha
mov
nop
imul
shrb
loopne
lock
add
push
mov
sti
xor
inc
fwait
cmp
sbbl
or
or
sub
rcll
in
hlt
mov
inc
mov
loopne
mov
jg
cmp
mov
xchg
test
cwtl
les
pop
xor
dec
jbe
scas
push
lahf
inc
aaa
jmp
out
push
filds
iret
idivb
out
xlat
pop
movzbl
outsl
xchg
pop
xchg
jbe
scas
aaa
lahf
inc
ss
es
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
and
push
stos
dec
mov
xchg
lcall
push
aam
negl
pop
push
pop
idivl
mov
lea
mov
jg
ljmp
cltd
push
jp
fldenv
push
sahf
jae
out
fnstenv
or
lods
repz
and
mov
out
xchg
pop
inc
ja
jp
or
aaa
sub
fmull
mov
inc
mov
outsl
pushl
push
aad
into
or
jg
dec
roll
xchg
xor
adc
push
pusha
inc
mov
dec
out
xchg
xor
mov
inc
dec
push
jle
cmpsl
outsb
push
inc
or
addr16
lcall
pop
fisubrl
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
cmpsb
cmpb
outsb
mov
sbb
push
rcrl
jecxz
push
aam
cmp
and
inc
mov
jb
test
jp
psrlq
ret
ss
sub
or
cs
and
jge
push
out
inc
mov
mov
mov
out
notl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
jecxz
pop
repnz
int
or
int3
imul
push
ja
notb
cmp
mov
push
sub
pushl
cld
pop
sbb
xor
movsb
xor
add
or
js
add
ds
cmp
or
in
and
repnz
js
pop
jnp
mov
sub
or
int
cmp
cmp
mov
sbb
xchg
not
sbb
adc
lods
sub
xor
fcmovbe
imul
outsb
iret
mov
daa
xor
lds
std
xor
cmp
gs
js
sub
add
fstl
in
stos
rclb
xor
adc
adc
pop
inc
out
outsb
shrl
ljmp
shll
fs
sbb
mov
pop
pop
inc
lahf
mov
enter
and
orb
call
push
or
fwait
in
sub
loope
popf
jle
xchg
js
lds
sahf
dec
jno
inc
lret
aas
loopne
test
sub
mov
fildll
mov
mov
xchg
cmpsb
push
outsl
adc
stc
and
ljmp
sti
iret
cmp
pushf
jl
pop
imul
pop
neg
push
mov
test
cwtl
in
cmp
mov
push
pop
push
pusha
cmp
pop
mov
stos
ror
pushf
mov
pushf
mov
push
shll
push
leave
push
js
lret
jo
inc
das
mov
jae
pop
scas
subl
int
stos
es
mov
add
ret
adc
inc
decb
ficompl
mov
fidivrl
outsb
pop
xchg
adc
lods
dec
and
out
aad
sbb
pop
inc
stos
cmp
adc
clc
push
inc
pop
loope
inc
push
enter
push
xlat
popa
push
dec
lock
cs
lods
lcall
stos
sbb
and
es
notb
inc
jo
xchg
push
stos
ret
mov
cmpl
leave
push
mov
or
xchg
jg
ja
clc
add
rorl
cmpsl
xchg
push
cmp
jge
jbe
mov
jmp
call
mov
sub
stc
ss
jge
add
xchg
enter
sub
mov
ret
push
jno
shll
push
sbb
add
nop
repz
jo
fisubl
idivb
push
into
fidivs
add
sbb
jle
hlt
adc
sbbb
jmp
push
call
or
inc
les
fists
popf
sti
fidivrs
jo
pop
rcrl
mov
lfs
jne
sbb
dec
mov
rcll
dec
lock
or
ljmp
mov
add
packsswb
sbb
aas
test
iret
dec
lahf
dec
and
out
cmp
shr
les
test
xchg
dec
cmp
lret
ret
inc
cmp
aas
lods
push
icebp
lcall
loopne
mov
jae
shlb
insl
orb
mov
ficompl
dec
mov
mov
popa
test
mov
pop
add
addl
scas
int3
lret
iret
lea
lahf
aad
and
pushf
arpl
inc
mov
jnp
addr16
push
adc
xchg
in
cmpsb
mov
aad
leave
pop
mov
mov
in
jl
movsl
jae
sub
aaa
aam
insl
ret
mov
test
sarl
jae
out
dec
mov
lcall
mov
scas
das
mov
ret
dec
pop
xchg
cmp
push
out
test
outsl
push
mov
or
mov
or
sub
mov
sar
imul
mov
xor
dec
cltd
xchg
push
lcall
pop
test
cmp
or
mov
sub
jg
jecxz
push
dec
cltd
les
dec
and
ficoml
push
pop
rclb
xchg
push
fwait
js
sub
push
loop
rolb
inc
lea
daa
test
outsb
loop
mov
inc
add
inc
pop
clc
fidivrl
fldt
adc
in
js
aad
imul
insb
rclb
insl
cmp
cli
add
out
add
inc
fimull
rcll
leave
shrb
mov
jmp
subb
adc
mov
dec
fisubs
xchg
pop
fistpl
cwtl
test
cmpsl
clc
dec
stos
or
add
jbe
xchg
push
cmp
rorb
or
dec
in
insb
mov
es
add
or
pop
mov
cmc
loopne
mov
pop
mov
mov
lret
ds
sub
bnd
sbb
insb
sbb
mov
into
mov
fwait
cli
sub
lret
aas
sub
imulb
ja
in
mov
adc
push
das
outsl
sbb
das
data16
or
xchg
arpl
loope
fisttps
cmc
loopne
std
test
push
fs
les
jecxz
imull
or
loopne
pop
in
test
das
dec
mov
inc
hlt
mov
dec
xor
aad
push
adc
pop
mov
mov
in
aam
data16
pop
jle
into
sbb
mov
mov
add
test
hlt
sbb
lret
push
dec
test
shrl
push
flds
sahf
push
lock
or
inc
test
and
sbb
mov
mov
inc
dec
ret
lods
popf
jae
into
mov
mov
dec
lds
pushf
dec
mov
or
popf
mov
cmpsl
stos
das
loop
and
xchg
cmp
inc
add
pop
dec
push
rcr
out
dec
and
xchg
scas
or
pushf
xchg
in
inc
adc
js
iret
push
dec
pop
xchg
push
ja
or
das
inc
add
aad
mov
dec
adc
ficompl
inc
xchg
cmp
andl
sbb
test
stos
imul
xchg
xor
rolb
cld
iret
add
mov
adc
leave
push
mov
jmp
ret
xor
rcrb
ja
loope
dec
cmpsb
insb
rorb
pushl
rcrl
pop
add
js
add
or
mov
nop
adc
cmp
mov
pop
push
insb
mov
loop
jecxz
ret
cmp
and
pop
jl
pop
mov
inc
jle
cmp
pop
adc
std
sti
jecxz
outsl
and
adc
bound
loopne
mov
adc
sbb
jo
jmp
je
and
clc
jb
mov
adc
add
in
pop
inc
dec
lcall
adc
andb
xchg
mov
mov
push
je
inc
jl
and
movsl
dec
push
sbb
mov
and
jp
pop
stos
or
dec
lock
xchg
sub
mov
scas
dec
push
and
mov
ret
mov
js
pop
cmp
dec
and
pusha
sub
dec
jb
add
mov
arpl
sub
loope
mov
scas
xchg
mov
inc
sbb
mov
movsl
stos
ja
push
sbb
out
movsb
cmp
mov
mov
adc
call
imul
ljmp
sarl
loope
aad
fdivrp
or
sar
clc
lea
stos
mull
out
fs
dec
movsb
es
or
or
mov
std
dec
mov
adc
cmp
rcr
ds
mov
or
shl
pusha
cltd
adc
mov
mov
ss
pop
and
out
and
call
or
and
push
ja
cmc
lea
loope
jecxz
scas
je
sbb
pushf
fwait
cld
jb
inc
xor
outsb
sbb
pop
punpcklwd
fnstenv
mov
adcl
ds
outsb
jbe
sub
and
and
pop
repnz
adc
das
xor
jmp
inc
xchg
cmp
push
pop
movsb
cmp
adc
leave
dec
dec
or
or
test
icebp
push
mov
and
xor
movsb
div
push
xchg
mov
push
rcl
dec
lcall
jle
inc
ljmp
inc
shrb
jo
xor
lea
push
in
xor
mov
imul
pop
push
add
jb
jne
jns
push
inc
inc
call
sub
xchg
and
pop
mov
dec
xchg
or
inc
in
movsl
cli
xor
inc
imul
clc
aad
cmpl
ficoml
push
into
dec
jg
add
ret
inc
stos
enter
dec
xor
jmp
mov
sub
fistl
mov
mov
into
ja
or
sub
decb
stos
imul
mov
fisubl
movsl
push
xchg
imul
or
stos
mov
mov
pusha
and
and
ja
lods
mov
lods
adc
push
inc
int
push
xor
or
cmp
test
test
addr16
mov
xchg
iret
jb
std
pop
arpl
cltd
and
pop
jae
dec
je
lea
stc
sub
gs
clts
fimuls
dec
cmp
mov
push
mov
inc
jmp
cmp
test
add
pop
xor
xor
jg
out
push
je
lret
loop
sub
lea
subb
fwait
pop
aam
cwtl
stc
inc
cmp
ja
imul
inc
repnz
inc
fdivp
pop
pop
dec
fistl
testb
movsl
jnp
or
insl
mov
and
test
dec
aad
sbb
pop
xchg
adc
dec
sti
popf
insb
enter
mov
mov
pushf
mov
dec
out
ficompl
out
lds
xchg
or
sbb
add
cmp
mov
bound
in
cmpsb
mov
sub
fdivrs
mov
jg
mov
shld
push
pop
mov
shr
repz
test
stos
out
jecxz
jne
and
add
inc
mov
aas
mov
sub
and
or
test
dec
or
sub
sbb
pop
aam
jmp
fs
pop
mov
inc
outsb
std
shrb
cmp
pusha
and
mov
lods
add
mov
fidivl
jmp
insb
inc
xchg
jae
mov
mov
sar
shll
cmp
sbbl
push
or
mov
mov
jmp
xchg
xchg
xchg
js
loopne
pop
ja
cltd
sbb
dec
incl
scas
xor
stos
or
jns
test
imul
mov
jo
repz
cmpb
mov
lds
cltd
aaa
cwtl
popf
mov
push
xchg
sbb
add
sbb
xchg
ss
pushf
dec
test
outsl
ds
jle
jle
pop
dec
xchg
cmp
sbb
mov
pop
push
lods
lahf
cmp
imul
xchg
scas
sub
sbbb
sub
push
lock
aad
pop
popa
add
sub
lds
push
mov
pop
pop
xor
jae
xor
jo
rol
jne
clc
push
imul
outsl
pop
movsl
jle
add
add
or
push
es
leave
ret
sub
mov
and
mov
enter
inc
cmpsl
or
mov
push
or
and
rcl
clc
iret
lds
popa
icebp
xchg
xor
sahf
sbb
dec
ss
cmp
fdivrl
sub
cmc
push
loopne
or
pop
mov
fxch
xor
pop
test
inc
scas
roll
das
out
jns
xor
cmp
xchg
addr16
mov
cmc
cmpsb
cwtl
mov
mov
mov
stc
push
mov
xor
mov
or
cli
adc
fistpl
xor
mov
sub
lods
cwtl
fwait
pop
lret
addr16
je
inc
add
mov
push
or
pop
les
ret
pop
inc
in
popa
imul
and
mov
in
xchg
vfnmsub132sd
pop
xor
sub
jns
pop
inc
inc
stos
shl
ljmp
subb
cmc
icebp
adc
je
push
add
pop
lods
mov
jnp
mov
cmp
insb
pop
repz
rclb
std
pop
movsl
cmp
xor
out
adc
cmp
mov
add
aaa
dec
mov
hlt
sbb
js
push
bound
incl
dec
jle
sbb
xchg
clc
out
scas
sub
call
pop
imul
xchg
add
fmuls
sub
add
mov
push
dec
mov
jge
popa
push
addr16
inc
enter
push
xor
js
lret
imul
push
sbb
ljmp
ss
les
imul
decl
lcall
adcl
xor
pop
inc
push
sbb
movsb
xor
cwtl
cmp
sub
mov
adc
adc
cmpsb
ficompl
inc
sub
call
xor
mov
out
adc
jge
xchg
inc
mov
stc
mov
sub
cmp
pop
jmp
sub
or
lods
out
push
mov
adc
or
add
sarb
ret
stc
sbb
decl
outsb
ss
out
inc
icebp
jne
and
lret
cmovp
xchg
dec
les
idivb
xchg
cld
xor
inc
mov
pop
dec
or
addr16
fsubl
add
inc
mov
dec
test
je
sahf
mov
pop
fs
pop
dec
push
imul
pop
dec
xor
lret
dec
fwait
popa
in
daa
push
inc
sbbb
icebp
subl
pop
repz
and
bound
jns
jge
and
lea
std
pop
pop
es
outsb
sbb
adcl
cmp
inc
sbb
gs
sub
cmp
push
fistps
out
adc
fldt
inc
sbbw
xorb
jp
fisubs
or
loopne
out
popl
mov
enter
sbb
xchg
cmc
xchg
jns
inc
dec
xor
nop
wrmsr
xor
mov
lcall
pop
jg
das
fildll
pop
add
sub
xlat
ja
push
aaa
push
pop
mov
pop
outsl
mov
sbb
adc
jo
call
add
xchg
push
movb
popa
xor
test
lahf
jge
push
rcrb
push
pop
int3
sub
mov
pop
adc
xor
imull
stos
pop
movsb
xchg
jne
lcall
adc
repz
lahf
cmp
dec
xor
jne
fists
mov
in
ds
sbb
add
out
xor
mov
loope
aaa
fcmovne
lcall
lcall
into
fld
stc
adc
pop
push
dec
seto
and
dec
push
cmp
xor
aas
sti
imul
xor
cwtl
mov
or
ret
mov
fwait
lods
addl
cmp
jmp
sbb
jg
xchg
mov
mov
test
out
adc
sbb
les
nop
add
cltd
cwtl
mov
loopne
push
or
loop
mov
sarl
imul
and
mov
jnp
mov
jne
pop
jne
or
dec
jo
cmp
cmpl
add
out
jbe
cmp
test
jle
pop
adc
or
dec
dec
aas
test
hlt
inc
add
mov
mov
js
push
cmp
hlt
ds
pushf
push
hlt
notb
int
daa
xor
scas
cmp
movsb
sbb
call
shlb
call
sbbb
daa
cld
mov
cmp
popf
icebp
ljmp
dec
dec
pushf
xlat
pop
xchg
stos
sar
mov
subps
arpl
mov
or
pop
xor
pop
loope
test
inc
xchg
add
nop
push
mov
iret
dec
pushf
scas
mov
or
test
fcmovb
test
xor
lods
push
push
lock
pusha
data16
ljmp
push
sub
push
mov
daa
and
mov
mov
jne
lret
adc
or
mov
outsl
push
cltd
repnz
call
mov
out
jne
fcomps
push
add
in
in
jmp
scas
sub
push
mov
push
aaa
cld
stos
inc
or
jmp
enter
xchg
popl
xorb
cmp
loopne
jle
es
cmpb
mov
dec
mov
aaa
negl
aas
repnz
mov
sbb
xchg
cmp
out
js
push
xor
pop
adc
mov
je
and
add
push
push
inc
mov
repz
daa
add
into
dec
fs
cmp
jg
push
fxam
outsb
xor
repnz
sarl
cwtl
xchg
xor
sbb
imul
insb
dec
jl
xchg
pusha
dec
daa
out
out
fidivrs
in
lods
push
fld
lret
mov
ja
lahf
enter
iret
out
pop
test
sahf
and
xchg
test
sbb
sub
push
pushf
fistpl
jp
dec
add
cwtl
xchg
xchg
test
sbb
pop
mov
fnsave
out
pop
shrl
mov
jbe
int
sub
jo
jmp
enter
insb
xor
cmp
in
xor
ficoml
ret
out
cmp
andl
xchg
pop
xchg
mov
hlt
lods
xchg
movsb
mov
ret
nop
lods
notl
stos
pop
mov
out
pushf
xor
xchg
aad
shll
xchg
pop
xchg
cmp
sub
push
adc
xchg
add
cmpsl
cmp
adc
fidivl
imul
loop
daa
iret
push
dec
out
mov
dec
jp
lods
cmp
cmp
dec
and
push
lahf
inc
push
addb
ds
and
int3
cli
aad
add
cmp
sbb
and
ljmp
or
inc
loope
jp
fisttpll
outsl
mov
popa
nop
popa
mov
xchg
bound
mov
outsl
std
iret
jmp
adc
scas
mov
daa
mov
icebp
stos
ljmp
outsb
jnp
jnp
cld
movsl
mov
jns
adcl
aad
push
xchg
pop
idivl
ss
lcall
mov
mov
sub
fs
cmp
scas
sbb
rcr
inc
pop
inc
dec
icebp
mov
sar
jb
out
xor
ret
movsl
mov
jg
out
mov
pop
pusha
popa
sbb
stos
xchg
bound
ss
lcall
bound
mov
jle
add
inc
popa
daa
pop
ds
add
mov
mov
fisubrs
xchg
mov
dec
inc
inc
mov
in
cmp
add
fs
sbb
adc
repnz
imul
enter
xchg
mov
sbb
add
imul
pop
push
stos
adc
jl
add
and
inc
lods
repz
sbb
xor
sbb
data16
push
lret
sub
xor
xchg
jbe
cmpsl
addr16
xor
dec
scas
scas
sbbl
inc
inc
push
push
cmpsl
mov
jl
jecxz
movsb
push
adc
scas
jne
ficoml
mov
scas
mov
add
insb
dec
jno
daa
frstor
inc
dec
sbb
xchg
movb
test
and
std
add
add
das
andb
push
daa
movsl
add
repnz
sahf
push
bound
or
sbb
inc
pop
mov
inc
pop
into
pop
jle
xchg
int3
ret
rcrb
adc
xor
push
mov
mov
lock
mov
xchg
jae
sub
repz
test
popf
out
test
xchg
test
adc
andl
pop
push
push
cmp
push
sbb
dec
addl
jb
xchg
loope
adc
lea
pop
adc
xorl
aaa
mov
lods
lret
loop
cmp
lods
xchg
daa
ja
lds
mov
call
or
ror
mov
xchg
or
pop
jmp
cmpsl
sub
jl
add
lret
push
jp
pop
sub
inc
inc
gs
pop
aad
push
or
inc
pop
sbb
incb
xor
cs
test
sub
cmc
das
mov
push
adc
add
test
pop
arpl
dec
mov
mov
adc
xchg
insl
scas
bound
dec
outsb
mov
jecxz
xchg
iret
push
cmp
pusha
jg
inc
out
xchg
dec
popf
add
xchg
in
cmp
lea
and
stos
mov
leave
dec
add
mov
sub
mov
push
leave
js
je
iret
shld
dec
jp
repnz
leave
mov
and
sub
dec
test
push
push
push
xor
repnz
jge
adc
mov
divb
fwait
add
cltd
mul
push
sub
rcrl
pop
and
inc
mov
aas
icebp
adcb
and
pushf
xor
icebp
and
outsl
out
inc
test
jmp
jnp
dec
xor
jae
inc
dec
loop
cmpsl
fcoml
pop
dec
dec
mov
xchg
ret
xor
mov
sbb
add
into
push
movsb
sub
xor
das
dec
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivl
out
xlat
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
clc
inc
ja
adc
and
xor
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmpsl
xchg
inc
or
fisubl
lcall
dec
daa
pop
xor
push
cmp
or
arpl
xchg
cli
or
fisubl
mov
lcall
xor
sub
pop
inc
or
arpl
mov
dec
stos
sbb
mov
jmp
stc
push
push
and
cmp
sbb
aaa
jge
imul
lods
les
sbb
add
leave
jns
inc
aaa
shll
icebp
stos
jg
dec
mov
sbb
xchg
lods
or
mov
inc
xor
in
xchg
mov
mov
scas
xor
fwait
mov
sbbb
pop
lret
call
sub
test
mov
movsb
divb
es
int
jl
dec
lock
roll
mov
sub
pop
int3
movsl
scas
cmpsl
outsl
cmp
pop
mov
jae
push
pop
jl
dec
sbb
push
adc
mov
sti
rorb
mov
pop
lcall
outsl
out
insb
cli
divl
pop
inc
pslld
xchg
jnp
imul
cmp
flds
mov
mov
and
cwtl
adc
sbb
dec
and
or
bound
mov
ror
mov
or
sbb
cmp
ss
inc
jle
pop
pminsw
jb
rclb
ret
rcr
out
jmp
data16
push
and
pop
inc
jg
pop
pop
cwtl
xchg
leave
cmpl
mov
jecxz
adc
dec
xor
sub
inc
or
arpl
xchg
cli
or
fisubl
mov
lcall
xor
sub
inc
or
arpl
xchg
ds
bound
cs
jbe
cmpsb
jp
call
and
add
in
add
dec
movsl
lds
iret
test
repz
sbb
xor
cmp
inc
incb
or
daa
sub
icebp
adc
xor
xchg
add
xor
sbb
xor
in
add
das
cltd
jbe
daa
xlat
fnstenv
mov
or
out
add
fdivrp
dec
repz
mov
mov
sbb
mov
inc
jge
push
xchg
adc
mov
loopne
arpl
sar
jns
stc
leave
aas
sub
pop
ret
mov
shrl
sbb
push
loopne
xchg
je
stc
push
test
mov
or
push
jle
cmp
lahf
xchg
dec
push
mov
xchg
cld
mov
outsl
adc
aad
xor
lock
sti
adc
ret
mov
xchg
cmc
xchg
jne
lds
scas
xchg
repz
mov
adc
mov
mov
push
or
imul
mov
cltd
int3
insb
add
add
sbb
jmp
jmp
out
cmpsl
cltd
rep
sub
pop
lret
jb
xor
mov
push
adc
push
loopne
hlt
cmp
scas
or
add
cmp
addr16
push
adc
adc
test
xchg
mov
jae
je
out
jecxz
data16
outsb
or
or
insb
call
jmp
arpl
scas
and
jb
mov
push
ret
xchg
mov
jns
mov
pop
idivl
fsubs
fsubl
sub
ficomps
sub
dec
xchg
out
push
cli
push
sbb
mov
arpl
adc
pop
jne
rolb
inc
in
cmpsb
adc
int3
adc
outsl
mov
jbe
test
xor
xor
dec
aas
fnstcw
mov
in
adc
fnstenv
aaa
rcrl
xchg
fwait
mov
int3
stos
xor
push
dec
out
mov
add
add
jb
adc
pop
iret
decl
movsl
mov
xchg
roll
dec
loopne
inc
cmc
das
inc
lock
xor
ret
sub
sti
mov
imul
insl
mov
sub
outsl
or
test
sbb
js
sarb
bound
out
test
push
inc
in
out
ror
mov
pop
and
lods
mov
xor
xor
inc
and
push
and
pop
aam
and
call
push
daa
inc
sbb
xor
cmp
fildll
and
jno
mov
setnp
pop
pop
das
outsl
sub
jp
jbe
push
add
scas
sbb
pop
aas
sub
jg
cmp
mov
cmpsb
cmp
push
xor
fistpl
xchg
pop
inc
add
push
daa
movsl
imul
inc
sbb
cmpsl
add
or
xor
add
mov
mov
adc
xor
fisttpll
sbb
pop
in
ljmp
mov
jo
dec
clc
das
hlt
js
xchg
cli
nop
dec
dec
push
call
outsb
push
mov
add
dec
jmp
jne
out
sbb
mov
movsl
std
bound
cli
sbb
cmp
int
xchg
inc
ja
loop
or
leave
jp
in
jae
leave
sbb
xchg
dec
lret
fs
lods
sub
pop
jecxz
loopne
rclb
scas
in
jo
adc
jl
jae
pop
and
mov
adc
lds
or
sti
mov
inc
lret
mov
sub
pop
cs
lret
rcll
add
loopne
andl
mov
popl
jbe
push
or
arpl
lret
xchg
add
add
les
popf
lea
pop
mov
xchg
sarl
das
and
shrb
inc
xor
incb
out
cld
cld
and
loop
add
pop
fcmovnu
lahf
stos
pop
ror
mov
mov
les
xchg
out
lds
inc
cld
sbb
fadds
add
mov
or
in
mulb
dec
xor
pop
add
mov
nop
cmp
xchg
in
cmp
mov
mov
scas
cwtl
jno
or
mov
adc
daa
mov
add
iret
rorb
in
xchg
sbb
xchg
adc
adc
adc
add
add
pop
imulb
inc
xchg
pop
jecxz
xchg
ret
jae
mov
pop
xor
mov
out
cli
sbb
fwait
jne
mov
insl
or
jns
mov
scas
int3
mov
cld
and
or
xchg
lock
cmc
xchg
pop
out
insb
sbb
mov
and
sbb
and
fcmovnb
sbb
addb
es
jae
jb
jge
and
cmp
mov
shll
cmp
data16
shl
sub
adc
pop
add
pushf
xchg
lea
mov
test
mov
clc
xchg
mov
pop
xchg
jl
iret
add
or
jl
in
adc
popf
repz
pop
clc
stos
sub
aaa
lods
adc
leave
sti
mov
push
adc
mov
fs
push
xchg
jmp
mov
xchg
xacquire
scas
mov
mov
ds
movsb
cmp
lret
dec
repnz
int3
mov
sub
nop
fwait
adc
jle
xchg
cmpsl
jecxz
leave
push
jg
in
cli
sahf
cld
dec
insb
in
or
pop
jb
mov
imul
fs
in
add
xchg
mov
push
pop
popa
push
hlt
inc
cmc
sbb
sar
dec
inc
pusha
aas
mov
lret
cli
mov
cmp
inc
hlt
adc
lahf
xchg
bound
inc
push
lcall
cmp
std
test
or
mov
cmp
in
lcall
add
add
cld
cmc
ja
cmpsl
or
daa
cmp
outsl
insl
movhps
push
fcompl
and
jno
mov
or
cmpb
xchg
outsb
xor
push
imul
push
outsl
shr
pop
push
adcb
fstpl
stos
sub
inc
out
push
mov
test
pop
jecxz
push
dec
ffreep
sub
add
dec
fnsave
add
insb
push
mov
xchg
dec
mov
mov
into
je
adc
test
outsb
mov
xor
subb
popa
mov
cltd
cmp
mov
ret
std
add
or
loop
adc
push
cmc
outsl
cmp
cmp
lods
mov
push
fistpll
repnz
pop
add
xchg
cmp
bound
out
adc
test
std
insb
and
pushf
fidivs
sbb
cli
jmp
cli
rcrb
jae
cmpsb
sbb
daa
push
cltd
in
jb
out
iret
jg
lea
dec
stos
jae
jno
lea
xchg
lock
scas
imul
xor
dec
lods
adc
sub
add
cld
cwtl
div
cmpsl
rorb
fucomp
xchg
cwtl
out
ficompl
fcompl
aaa
ss
inc
pop
rep
lea
mov
std
pop
push
jmp
dec
cmp
orl
xchg
iret
add
out
push
les
sbbb
jl
mov
sbb
std
mov
mov
jb
imul
xchg
aam
xor
inc
bound
sahf
lods
setg
and
insb
stos
shll
iret
pop
icebp
fs
sbbb
ds
clc
xlat
cmpsb
movsb
push
aad
stos
fcoms
loopne
dec
jb
and
movsb
mov
test
add
mov
jle
imul
jns
je
and
mov
adc
adc
cmpsb
outsl
enter
cmp
and
cmp
dec
movsl
push
and
add
daa
hlt
push
fnstsw
lods
sti
sbb
sbb
stos
dec
out
or
sarl
sbb
addb
add
test
push
notl
pop
adcl
jmp
lahf
fcoml
xor
add
push
and
mov
jl
mov
pop
out
pop
imul
jl
cmp
sub
mov
sub
inc
jns
stc
mov
sarl
test
in
dec
sbb
scas
jl
mov
sti
xchg
inc
mov
mov
fisttps
pop
add
adc
cmpsb
or
cmp
jle
mov
aad
int3
stos
loope
xlat
add
push
stos
lods
arpl
leave
fs
mov
or
xor
cmp
test
iret
xchg
lods
mov
cld
mov
out
or
loop
jo
ret
lds
mov
mov
add
mov
pop
ja
loopne
stos
jne
sub
jnp
xchg
fisttpl
and
cmpsl
jnp
mov
mov
cmp
add
mov
pop
test
dec
mov
lock
loop
jecxz
or
lret
dec
and
sub
stc
or
dec
or
ljmp
mov
jns
icebp
add
mov
fmull
xchg
popf
bound
mov
cld
xor
cmp
in
xchg
pop
sub
adc
lahf
mov
mov
xor
leave
stos
cltd
and
stos
sbb
jbe
cmpsl
dec
sbb
push
add
lock
push
les
push
cmp
shll
cwtl
add
rcr
addb
push
jno
or
jg
inc
dec
test
xchg
sub
dec
scas
repz
xchg
ret
fsubl
rcr
sub
mov
loope
mov
in
bnd
add
popa
and
andl
divb
stc
jmp
xchg
imul
or
adc
shl
pop
test
mov
scas
push
pop
dec
mov
and
scas
adc
push
lock
ss
dec
add
mov
cld
jo
pop
gs
fcmovu
popa
sub
fldl
out
pop
lret
in
mov
sub
jnp
mov
andb
mov
shrb
sbb
xlat
into
cld
xor
mov
pop
and
cs
loop
sub
nop
dec
stc
sub
jbe
out
jbe
loope
push
out
dec
xchg
dec
mov
inc
arpl
mov
lods
insb
movl
mov
cmp
enter
or
jp
push
fdivl
lea
idiv
xchg
popf
clc
xchg
add
mov
or
or
and
std
into
orl
lret
dec
rorb
lds
ljmp
subb
xchg
xor
jnp
sub
mov
scas
cwtl
xchg
cltd
cmp
inc
fs
out
mov
cmpsb
xchg
ss
cmp
call
push
mov
xchg
pusha
dec
rclb
nop
dec
fcmovu
repz
jne
and
jge
pusha
xchg
stos
add
outsb
jnp
cmc
movsb
iret
xor
mov
sahf
inc
mov
mov
or
lods
shrb
lahf
xor
mov
jecxz
test
out
add
add
fwait
das
iret
ret
mov
sbb
aad
cmpsl
das
scas
dec
mov
push
inc
loopne
aad
ja
dec
cwtl
xchg
aad
test
xchg
mov
jmp
jecxz
inc
mov
aam
push
repz
subl
loope
aad
cmovg
mov
imul
adc
xchg
push
xchg
lahf
mov
jnp
jne
jp
mov
pop
das
jge
xchg
mov
sbb
mov
int
xchg
mov
mov
sub
xchg
inc
ljmp
sahf
mov
insb
gs
inc
cmp
in
push
xor
repnz
sub
cs
popa
sbb
dec
scas
jae
hlt
gs
sbb
outsl
shrb
cli
imul
add
adc
mov
mov
stos
or
mov
sbb
mov
inc
cmp
dec
adc
in
pop
mov
add
jnp
or
cs
jb
lods
ficompl
std
pop
cwtl
xchg
pop
xor
inc
and
jmp
std
sub
sahf
fadds
xchg
pop
inc
jp
iret
adc
pop
dec
xor
insl
and
or
xchg
adc
fbstp
cmp
inc
ret
or
repnz
stc
pusha
mov
aam
push
mov
movd
dec
sbb
ficompl
sbb
add
sub
stos
sbb
pop
lcall
outsb
adc
lock
int
jp
sub
out
add
in
jnp
iret
adcl
add
mov
rclb
xchg
roll
mov
mov
jle
out
mov
ss
inc
dec
push
sub
mov
mov
insb
fldl
jp
jecxz
cmp
xchg
iret
add
daa
fists
add
fbld
fidivs
cmp
ljmp
icebp
and
pop
jbe
sub
xchg
testb
test
repnz
subl
jmp
sbb
nop
repnz
sbb
mull
test
popf
jl
js
adc
outsb
push
pop
enter
call
jae
jp
lods
stc
imul
shlb
and
xchg
ja
jo
shll
adc
lods
ret
push
scas
mov
in
push
sahf
xchg
insb
xchg
cmp
mov
or
jns
out
and
add
repnz
out
mov
jge
das
pop
jbe
and
jl
xor
imul
scas
loope
imul
iret
pop
add
jecxz
sub
stos
sub
sub
pop
add
xor
fisttpll
dec
cmc
pop
push
dec
out
loop
cmpl
and
insb
movsb
cmp
dec
mov
test
jo
pusha
rorl
pusha
ja
outsb
sub
cmp
sbb
mov
add
into
mov
test
int
mov
aaa
fstl
add
adc
or
inc
pushl
jnp
mov
push
notb
push
ficoml
pop
outsb
jae
push
add
mov
shl
movsl
mov
shr
pusha
pop
das
adc
lcall
pop
pop
fwait
and
repnz
push
pop
mov
hlt
fwait
cmp
ja
mov
jbe
movsb
orl
insb
std
sbb
jp
dec
popf
inc
rclb
cs
sub
jge
mov
push
push
ds
cli
pushf
pusha
and
filds
sub
shl
aam
jg
or
lahf
and
inc
and
scas
sbb
bsf
inc
cmp
mov
pushf
test
mov
lock
xchg
cmp
or
lds
es
ds
mov
ss
mov
in
inc
rcll
add
xchg
mov
movsl
in
lahf
ja
pop
lahf
lea
jnp
hlt
imul
cs
ficoms
fwait
xor
push
lds
out
cwtl
out
shrb
push
cmpsb
jg
je
fxch
sbb
sbbb
xlat
mov
in
and
fwait
mov
out
aad
adc
xchg
ljmp
ficoms
and
adc
jb
sub
mov
adc
jno
dec
out
fwait
mov
dec
roll
lcall
jge
xor
cld
popa
push
adc
pop
add
iret
jno
shll
mov
shlb
push
arpl
mov
adc
nop
xor
lea
es
gs
clc
pop
sub
add
aam
mov
insb
sub
sub
roll
sub
pop
pushl
shll
adc
out
inc
mov
cmc
and
sub
leave
addb
lds
pushf
int3
in
js
out
adc
arpl
aad
jo,pn
mov
pop
test
call
fildll
jmp
scas
jmp
push
xchg
xor
mov
xlat
lock
cmp
xor
jg
outsl
mov
jno
xor
dec
xchg
pop
jb
mov
mov
iret
test
mov
out
lods
enter
add
pop
adc
mov
fs
inc
or
jmp
pop
ljmp
pop
or
xchg
or
and
lcall
inc
pushl
or
pop
fmull
add
dec
sar
mov
pop
dec
adc
arpl
inc
cmp
and
pop
and
out
sub
xorl
cmp
lds
add
data16
sbb
out
mov
push
dec
lret
push
fbld
pop
and
ds
loopne
inc
mov
mov
loopne
shrd
or
popf
clc
xchg
int
inc
pop
xor
and
or
inc
je
es
clc
push
xor
or
push
test
pop
dec
xor
adc
inc
push
cli
or
icebp
sub
add
movsb
cld
gs
jb
cmp
add
inc
repnz
push
jnp
insb
fistl
test
xchg
lea
leave
ja
in
ljmp
loope
repnz
push
mov
push
push
mov
lcall
sbb
std
dec
xlat
cmc
mov
fstl
adc
fsubr
or
pusha
mov
add
out
iret
xchg
sub
push
in
jecxz
or
into
scas
mov
leave
xchg
xlat
adc
fstp
in
stos
push
jns
movsl
mov
sbb
push
pop
dec
pop
push
andb
imul
mov
aaa
jb
mov
mov
inc
sub
jmp
sbb
jnp
lahf
mov
dec
sub
cwtl
ja
imul
xchg
roll
js
jne
push
add
loop
rol
xchg
cld
adc
dec
sarb
call
cmp
jns
out
pushf
int
clc
jnp
xchg
nop
inc
pop
jmp
ljmp
pop
xor
and
ja
sbb
adc
mov
aam
push
xchg
in
leave
fdivrl
cmc
popf
mov
push
mov
sub
adcl
ffreep
inc
pop
xchg
sarb
lods
mov
ret
ss
idivb
out
stos
xchg
fildl
add
mov
push
sbb
negl
push
int
clc
cwtl
and
inc
jnp
lret
add
outsb
inc
icebp
mov
cmpb
pushf
test
mov
push
cmpsb
sbb
dec
sub
pop
lcall
push
pop
and
add
scas
cmpsb
in
cmpsl
add
sbb
popa
and
fisttpl
xchg
bound
add
icebp
and
dec
das
fists
mov
fnstsw
cmpsb
das
or
sub
pop
or
movsl
or
aas
cli
sbb
jp
or
push
lods
movl
mov
fsubrs
jo
stos
lock
insl
in
loope
stos
frstor
pop
mov
dec
lds
prefetch
cmc
fmull
movsb
dec
sbb
xchg
mov
dec
inc
sahf
jbe
xor
mov
test
hlt
sbb
loop
xchg
out
add
addl
es
xor
mov
addb
aaa
hlt
dec
aas
aaa
leave
imul
cld
rorb
push
outsb
cmp
lea
shl
lods
cwtl
into
cmpsb
xchg
mov
mov
data16
test
sub
add
jmp
imul
in
or
mov
sub
andl
mov
shll
add
add
das
add
bound
dec
jl
int3
or
dec
jo
jne
dec
mulb
ja
mov
icebp
aaa
stos
leave
rcl
inc
cmp
mov
jo
nop
insl
dec
repnz
push
push
xchg
into
cli
xchg
or
outsb
sti
xor
mov
dec
jmp
inc
test
test
daa
lcall
jle
cmp
jecxz
or
pusha
daa
sbb
mov
inc
pushf
inc
jns
jecxz
fsin
mov
adc
rcl
or
add
jp
mov
shrb
loopne
mov
std
dec
adc
and
or
ljmp
lret
mov
rcrb
in
cli
das
rolb
insl
cmc
and
hlt
xchg
ret
mov
cmp
lock
pop
xchg
jae
adc
aas
in
mov
ljmp
pop
pop
cs
adc
nop
push
xor
jmp
shlb
sahf
insb
iret
out
pcmpgtd
jb
test
inc
inc
pop
in
jo
dec
data16
jbe
imul
mov
jg
inc
add
std
cmc
push
jns
rolb
out
cld
aam
mov
out
call
nop
inc
outsl
insl
jmp
cli
sub
roll
jae
sbb
jb
xchg
and
js
into
aaa
cwtl
mov
movsl
xchg
push
mov
hlt
pop
xlat
loopne
loope
sbb
lods
mov
clc
test
xlat
or
push
adc
xlat
push
cmp
dec
push
arpl
gs
clc
inc
mov
aas
dec
js
icebp
sbb
cmp
pop
mov
xchg
add
mov
icebp
leave
jo
push
repz
adc
out
jle
dec
mov
int
sbbl
jnp
jne
xchg
push
xor
dec
sub
adcl
push
hlt
mov
fwait
cs
and
stc
stos
mov
xchg
notl
cltd
xlat
xor
mov
pushf
push
add
test
cmp
adcl
mov
mov
lcall
xor
sub
inc
or
arpl
xchg
cli
or
fisubl
mov
lcall
xor
sub
inc
or
arpl
xchg
stc
sbb
fisubl
mov
fwait
jecxz
adc
inc
xor
sub
inc
push
ja
addr16
xchg
repnz
mov
sbb
push
test
pop
sbb
cmp
sub
sbb
or
js
dec
cmp
push
dec
stos
pop
mov
mov
clc
clc
call
sub
cmp
or
sbb
push
jp
dec
pop
pop
sub
mov
xchg
mov
pushf
lret
leave
xor
and
adc
add
jae
bound
pop
pop
dec
mov
cltd
mov
cld
loop
ljmp
mov
or
insb
cmp
jp
mov
dec
sub
inc
push
add
ret
jo
pushf
adc
jmp
stos
cmp
cmp
cmpsb
test
jp
iret
ror
ret
das
test
fs
mov
popa
and
jmp
test
sbbb
mov
pop
jbe
push
push
aad
push
fiaddl
ret
or
pop
xchg
js
imul
pop
gs
jmp
fcmove
jp
mov
xchg
cli
add
repnz
stos
inc
jl
mov
mov
stos
cli
stc
xor
pusha
fidivrl
dec
cmpsl
in
xchg
ss
mov
mov
lret
call
fidivl
jecxz
and
or
sbb
jge
push
dec
pop
inc
dec
mov
mov
mov
stc
loop
rcr
fimull
outsl
pop
outsb
dec
sbb
sbb
pop
cmp
cmp
stc
lret
ljmp
lods
inc
push
pop
inc
gs
push
push
cmp
dec
push
or
fisttpl
pushf
xchg
jg
mov
push
jp
jl
jno
dec
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
adc
into
push
mov
imul
aad
mov
sti
jb
jbe
cwtl
and
ds
scas
mov
out
shr
jecxz
and
arpl
rcll
mov
leave
iret
fs
mov
inc
das
and
das
cmp
aad
jb
push
add
je
cs
cltd
mov
enter
mov
ja
mov
and
stos
lcall
dec
stos
pop
jb
jmp
test
push
inc
or
cwtl
leave
cmp
cld
or
sub
cmpsl
inc
push
fmuls
out
inc
mov
std
loope
popf
jp
int
call
insb
jne
mov
inc
push
stos
and
cli
rorb
scas
add
xor
and
out
sub
fiaddl
mov
xlat
out
std
pop
push
cli
adc
int3
mov
out
decl
int3
rcll
mov
push
adc
inc
nop
add
dec
mov
mov
outsl
les
push
jl
daa
fldcw
aaa
gs
mov
cmpsl
xchg
pop
in
add
imul
ss
imul
call
push
inc
mov
jne
clc
fcoms
add
mov
or
dec
repnz
xor
jnp
movsl
cmc
jae,pt
imul
inc
xchg
inc
repnz
push
insb
pop
aaa
and
mov
in
iret
push
inc
mov
dec
out
cmpsb
out
in
mov
pop
sbb
int3
inc
lods
mov
or
pop
sbbb
mov
push
jo
popa
dec
xor
mov
or
mov
push
dec
rclb
lahf
movsb
inc
ret
in
mov
ljmp
test
mov
out
test
cmc
ljmp
cmp
cmp
dec
in
mov
lret
lahf
cmpsb
shlb
jnp
cwtl
sub
dec
inc
test
inc
sbb
sbb
inc
call
dec
ffree
dec
or
cmp
pushf
mov
in
sub
sbb
xchg
mov
jle
push
inc
jb
js
daa
mov
fbld
push
lret
int
push
dec
ret
fcoms
popf
pop
add
inc
test
fisttpl
sub
sbb
or
xchg
daa
xchg
inc
push
enter
jbe
xchg
dec
mov
push
mov
out
push
jbe
pop
sahf
inc
clc
ljmp
lcall
xor
out
outsl
pop
and
lds
pushf
frstor
js
enter
and
pop
adc
loop
push
xor
stos
incb
rcll
adc
or
pushf
in
mov
icebp
push
mov
sbb
arpl
into
nop
add
inc
mov
inc
shl
cli
sbb
test
and
pop
or
adc
add
rorl
xorl
sub
mov
lcall
repnz
orb
push
dec
mov
push
scas
add
and
mov
hlt
sub
cmpb
push
mov
dec
mov
mov
pop
or
push
int3
sub
leave
sbb
in
jmp
push
mov
push
ror
pushf
movsl
xchg
fs
jns
aaa
subl
rclb
lds
cmpsl
and
mov
xor
popf
pop
mov
std
idiv
outsl
repz
push
subl
pusha
aad
popa
mov
dec
pop
shrl
xchg
fwait
imul
ret
pushf
pop
push
mull
mov
sti
sub
jne
sti
sbb
or
loop
cmpsl
push
cmpsb
mov
mov
icebp
sti
stc
xchg
mov
adcb
in
loopne
outsl
or
out
add
das
push
jns
push
scas
movsl
sbb
xor
lods
cmpsb
rclb
sub
dec
push
ja
mov
stc
arpl
fsubr
sar
shrl
sbb
lahf
cmpsb
popf
nop
jo
dec
out
push
jbe
aad
aad
add
or
in
sbb
popf
testb
or
dec
or
and
shll
xchg
les
xor
mov
adc
jne
addb
adc
push
data16
xor
mov
insl
jl
push
test
hlt
dec
dec
sbb
sub
inc
insl
pop
push
ret
lcall
popa
mov
jnp
mov
cwtl
cmp
inc
add
jbe
repz
es
dec
jmp
rcr
dec
leave
test
xlat
lea
loop
rolb
loop
leave
xchg
and
jb
cmp
pusha
hlt
sbb
daa
es
or
iret
test
jl
cmp
popa
inc
mov
loope
loopne
adc
push
rorl
inc
into
mov
add
jl
repnz
jp
pop
push
adc
or
mov
adc
repnz
jnp
xchg
push
cmp
and
inc
dec
lea
mov
nop
xor
enter
outsb
mov
mov
jnp
cmpsl
clc
ja
loop
popa
loop
aad
jl
jae
xor
bound
lods
xor
mov
repz
inc
std
or
stos
sahf
push
call
push
outsb
cmc
pop
add
inc
mov
roll
dec
loopne
insb
dec
pop
loopne
mov
call
push
dec
pop
or
dec
add
out
or
push
inc
pop
outsb
mov
adc
mov
icebp
fildll
das
cli
xorb
ds
ror
mov
xor
cmc
movsb
mov
cmp
sub
xchg
pop
add
gs
stc
push
pop
adc
xlat
and
pop
es
rcr
dec
int
sub
mov
sub
push
xor
sbb
xchg
mov
lds
and
not
jnp
cmp
loop
xchg
inc
pusha
and
jns
shll
jae
sahf
clc
aas
ljmp
inc
push
cmp
pop
mov
and
dec
mov
or
or
sbb
gs
jae
adc
pop
sub
and
pop
hlt
jno
or
mov
pusha
cmp
xchg
push
add
mov
dec
negl
add
mov
fsubl
sti
pusha
rcl
xchg
and
stos
inc
in
scas
js
inc
arpl
sbb
lahf
jns
pushf
mov
aad
outsb
pop
mov
fstps
mov
inc
jnp
sub
jmp
dec
jb
imul
leave
push
mov
inc
add
imul
cld
out
inc
jnp
xor
out
jbe
xor
push
out
fincstp
sub
loope
push
and
mov
jg
sbb
inc
mov
push
test
leave
xchg
add
sbb
je
addl
adc
adcb
mov
add
jmp
adc
gs
sbb
add
jns
mov
insb
outsb
sbb
std
xlat
pop
arpl
arpl
sbb
push
add
filds
jge
lods
cld
mov
addr16
cmp
jae
cmp
cmpsb
cmc
xor
jl
push
jo
repz
popf
and
push
subl
rol
jl
jg
mov
mov
mov
cmp
movsb
imul
lds
andl
xchg
inc
push
ud0
jle
lock
sub
lods
xchg
and
lahf
push
stos
lcall
stos
lret
in
orb
cmpsl
push
push
xlat
pushf
addb
or
add
es
lods
bound
imul
xchg
push
sbb
mov
cltd
xchg
push
jo
lea
outsb
scas
in
enter
insl
dec
push
mov
aad
pop
ror
and
add
fnstsw
inc
add
or
out
jmp
out
jns
cld
mov
in
jl
pusha
in
jl
test
dec
push
or
movb
int3
or
in
mov
inc
imul
je
dec
lock
scas
inc
sar
pop
and
sti
cmp
pop
and
xchg
xor
sub
jns
inc
ja
cmp
dec
repnz
push
insb
xchg
mov
aad
sbb
push
cmp
fwait
push
aaa
xor
shll
movsb
sub
sub
cmpsl
jnp
int
repz
ficoml
lret
xchg
ret
outsl
dec
in
adc
mov
xor
les
jbe
in
xorb
nop
je
dec
xchg
sub
push
push
mov
in
ds
mov
js
pushf
xchg
int
mov
cltd
jnp
lret
and
es
je
pop
jg
sti
mov
cwtl
out
fwait
jne
cli
and
jmp
lods
enter
neg
cmp
les
in
add
repnz
icebp
mov
sti
lcall
xchg
in
dec
mov
cmc
test
push
mov
jle
add
xlat
shll
pop
sbb
cmpsl
or
jp
pop
jge
aad
aas
test
aad
rclb
push
lret
or
jo
or
sub
vpcmpgtb
shll
das
insl
mov
clc
scas
push
cmc
jnp
mov
cmpsb
movsl
sub
insl
arpl
jae
push
lods
movl
sahf
mulb
dec
add
xorl
clc
test
push
loop
push
jle
mov
mov
pop
sbb
add
repnz
es
into
or
adc
inc
ss
fimuls
push
cmp
pop
popa
xchg
loop
jmp
sub
push
sub
loopne
sbb
add
dec
xsaveopt
sbb
mov
add
adc
idiv
sbb
push
loope
popa
pop
lods
pop
cmp
and
mov
sub
ftst
push
addr16
push
and
sbb
cld
cltd
ds
jae
or
call
and
mov
je
pop
mov
cmp
dec
pop
rsqrtps
xchg
aas
dec
adc
fldt
faddl
push
inc
scas
mov
or
ja
and
add
mov
lcall
inc
jbe
int3
xor
call
mov
ljmp
popa
push
add
sbb
test
and
or
loope
jb
xchg
sub
and
andb
mov
leave
push
loopne
and
rcll
and
mov
popa
sub
sbb
xlat
pop
fwait
inc
or
mov
ss
cmp
xchg
cwtl
aad
js
sbb
xchg
xor
mov
push
jne
fsub
adc
addb
fwait
insb
dec
push
movsb
xor
imul
leave
cli
aad
int
leave
push
adc
lret
les
jo
mov
jns
stos
ja
jg
or
add
imul
cld
pushf
mov
loop
jmp
lcall
jb
xor
es
push
fstpl
movsb
sbb
aaa
ds
mov
mov
jl
pop
mov
mov
inc
push
and
cmp
testl
fnstenv
mov
inc
les
divb
sahf
loopne
xchg
mov
pop
push
inc
dec
cmp
xchg
sbb
or
xor
bound
nop
pop
sbb
outsl
lret
js
cltd
xchg
dec
xchg
icebp
fimull
pop
pop
int3
jns
pop
xlat
ja
dec
cmpsb
adc
movsb
ror
jmp
dec
dec
movsb
inc
scas
push
sub
sub
bnd
cwtl
cmp
arpl
sub
insb
clts
ret
pop
mov
sub
sub
sbb
jge
jge
inc
out
hlt
clc
lret
out
jge
punpcklbw
imul
cmp
ret
add
idivb
aaa
dec
and
outsl
loop
mov
imul
mov
dec
nop
cmpsl
rolb
jbe
cmp
push
je
aad
or
andb
loopne
pushf
ret
bound
rcrl
ficoms
sub
fcoms
scas
mov
dec
shl
cwtl
xchg
xchg
arpl
pop
stos
or
inc
mov
push
dec
aas
xchg
les
mov
lock
loopne
addb
sbb
into
dec
test
lcall
fdivs
test
imul
jle
arpl
out
sbb
lahf
std
int3
adcl
outsb
push
mov
jge
and
jmp
icebp
loope
ljmp
je
pushf
loop
and
imul
aam
frstor
xchg
stos
mov
sbbb
push
int
ss
push
mov
jl
and
lock
dec
out
fucomip
fldenv
aaa
ret
loope
cmp
mov
sub
sbb
int3
aaa
adc
jno
lds
xchg
shl
js
adc
add
and
push
xor
push
jecxz
pop
out
cmp
lods
loope
push
sbb
push
sar
xlat
sbb
lods
jg
xor
insl
and
jecxz
cmpsb
lock
mov
add
outsb
pusha
popa
movsl
pop
ficompl
adc
lahf
pop
push
sbb
movsl
cli
inc
mov
ds
cmpsl
sbb
sti
test
xchg
push
imul
loopne
psrlw
inc
data16
adc
add
cmc
jl
mov
out
testl
fists
add
je
cmp
mov
sub
or
bound
insb
mov
jmp
cmc
hlt
push
xor
adc
les
or
lock
loope
sbb
push
int3
cwtl
fiadds
push
negl
enter
sbb
lahf
dec
rorl
stos
cmpsl
cli
divb
je
add
es
xchg
mov
in
arpl
lret
outsb
dec
sti
out
test
jmp
mov
pop
ficoml
mov
mov
mov
ljmp
pop
stos
mov
add
jl
into
out
pop
push
fadd
push
call
pop
outsb
inc
fucomip
jb
scas
cs
adc
jb
inc
push
out
pop
sbb
addl
cwtl
or
inc
insb
add
pop
sbb
mov
cmpsb
fbld
sbb
loopne
repnz
push
jge
fistpll
in
inc
rcrb
loop
cmp
sub
push
pop
popf
xchg
rorl
push
dec
mov
adc
js
mov
mov
add
jmp
adc
mov
stos
pop
insb
lahf
cwtl
or
insb
pop
mov
mov
popf
loopne
dec
aad
lret
and
mov
insl
ret
fs
cwtl
inc
dec
ljmp
repz
hlt
shl
and
inc
fidivl
mov
test
sbb
sbb
mov
or
insb
cmp
scas
add
push
and
imul
sar
push
push
push
sbb
lcall
and
repz
mov
jbe
inc
cmp
mov
or
jae
mov
and
jo,pn
je
lea
subb
mov
sub
arpl
lock
test
jne
or
lret
mov
and
and
xchg
ss
in
push
cs
fdivs
mov
or
push
mov
fistps
insb
inc
or
and
lcall
stos
imul
jmp
hlt
push
movb
cltd
jl
jp
xchg
cmp
in
pop
xor
add
sbb
add
je
gs
pop
xchg
lret
int
sbb
inc
andb
dec
into
pop
add
sub
fistpll
inc
aas
add
fcoms
cwtl
insl
pop
stc
gs
add
sbb
lds
mov
into
mov
xor
sub
adc
clc
ret
jno
and
mov
mov
rolb
add
mov
dec
test
mov
imul
repnz
les
cmc
jae
mov
jp
fwait
mov
sub
dec
dec
sarl
cmp
outsl
ret
aas
push
mov
jb
xchg
daa
negl
push
pusha
xchg
pop
les
test
aad
sub
sub
shrb
push
mov
imul
sub
jle
push
mov
cmpsl
daa
inc
imull
pop
mov
fsubp
in
inc
push
jmp
jmp
fsub
and
cs
mov
sbbb
pushf
adcb
adc
mov
add
dec
xor
insb
xlat
out
fcom
dec
cmp
fbstp
inc
lret
mov
inc
aad
cmp
xor
lds
jo
cmp
pop
aad
insb
imul
scas
jne
adc
mov
js
test
xchg
lds
jae
jo
je
xor
mov
cli
movsb
jno
mov
dec
mov
mov
cwtl
lods
dec
jecxz
inc
adc
push
mov
and
scas
pop
adc
jbe
mov
nop
jp
jbe
mov
mov
and
cs
into
pusha
stc
shrb
enter
sahf
push
pop
std
sub
adc
mov
jg
notl
and
out
xchg
push
sbb
adcb
mov
pop
test
das
fs
mov
xor
fsubrs
pop
lret
bound
xor
addr16
jg
lea
scas
cmc
dec
out
loope
inc
arpl
arpl
mov
sub
pop
push
in
addr16
bound
das
cmp
fwait
popa
xor
insb
fs
outsb
add
cwtl
mov
and
xchg
test
dec
out
fbstp
xlat
cmp
adc
mov
xor
mov
test
mov
icebp
xor
push
and
lahf
test
cmp
cmp
cmp
xor
jnp
popf
fisubs
jle
and
rorb
jo
push
mov
jns
mov
or
adcl
jg
xor
mov
push
lcall
sub
sub
jne
aad
sub
adcl
test
aam
std
pop
mov
leave
mov
jg
sbb
lds
mov
aad
pop
fdivrl
out
aam
bound
inc
sbb
mov
addr16
cltd
sub
push
add
adc
dec
mov
inc
pop
push
popa
xchg
ja
cli
or
bound
and
les
xor
jno
adc
sarl
int3
xchg
mov
adcb
out
in
mov
cwtl
and
mov
daa
insl
cs
xor
adc
pop
in
stc
movsb
int
mov
fstl
sub
movsl
push
push
sarb
in
mov
ret
push
lea
and
cld
jle
xchg
shl
inc
and
mov
sti
pop
inc
push
adc
or
lret
push
push
mov
xchg
ret
xor
mov
push
xor
inc
aaa
popa
rolb
sbb
mov
mov
in
mov
xchg
adc
jl
mov
in
or
imul
fs
daa
sbb
or
into
ja
jo
hlt
out
sub
mov
loope
jmp
fldl
jp
adc
sub
pop
andps
and
imul
and
cmc
aad
mov
or
scas
mov
add
xchg
adc
test
es
push
ret
mov
mov
adc
cmp
sbb
mov
mov
sbb
shlb
lds
xchg
test
xchg
xchg
clc
push
jbe
insb
cli
push
orl
add
loope
cmpsl
incl
pop
pop
push
cltd
mov
add
inc
mov
inc
out
ds
scas
mov
test
pop
cs
adc
pop
lret
mov
adc
outsl
fwait
ret
movsl
and
fldenv
mov
cmp
pop
mov
stc
inc
lea
out
lods
or
push
jb
xchg
or
negb
sub
ret
push
pop
js
sub
ja
lea
and
pop
adc
ja
ljmp
movb
push
rolb
sbb
sbb
aaa
pop
insb
fstpl
imul
in
iret
lahf
dec
inc
mov
icebp
inc
push
inc
jbe
icebp
scas
xchg
jl
and
shrb
add
xchg
mov
sub
push
out
pop
mov
pop
pop
xor
jle
lods
movb
or
fisubl
leave
adc
inc
pop
push
pop
fadds
je
imul
inc
pop
jmp
sbb
sub
stc
int3
shrl
mov
mov
or
cmp
pusha
inc
insb
mov
sbb
jge
fdivr
outsl
xchg
or
out
fnstenv
testb
clc
push
lea
add
pop
push
outsl
fnstsw
lahf
scas
mov
and
jecxz
nop
dec
lods
mov
or
mov
sarl
outsl
xchg
test
mov
sbbb
dec
lods
sbb
stos
jno
subl
lahf
xchg
aam
int3
in
pop
push
test
or
pop
ljmp
movl
shlb
adc
mov
nop
movsl
xorb
call
mov
sbb
call
jo
push
adc
and
adc
mov
adc
idivb
std
xor
sbb
fdiv
sbb
loopne
sub
sbb
or
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
jp
dec
pop
pop
dec
stos
mov
lcall
leave
sub
cmp
or
sbb
push
pop
fimull
and
jb
xor
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
and
xor
add
adc
and
mov
mov
loopne
lock
rcl
ret
and
xor
add
adc
pusha
jae
out
inc
push
push
aaa
mov
xchg
nop
and
lock
xchg
rol
and
adc
pusha
dec
jo
inc
mov
mov
repz
mov
mov
xor
dec
jae
bound
inc
jo
lret
dec
stos
fwait
bound
ret
ret
imul
outsb
dec
xchg
nop
popf
stos
mov
popf
mov
dec
adc
repz
repnz
rcl
dec
fdivs
mov
sub
cmp
fisubl
jg
cli
push
inc
sarl
movsl
adc
shll
xor
jbe
xchg
mov
mov
dec
mov
jg
repnz
sbb
cmp
nop
fbld
inc
lret
push
sub
inc
pop
push
inc
mov
dec
mov
push
sbb
and
lds
repz
cwtl
xor
loopne
adc
mov
js
aad
fdiv
icebp
sbb
sarl
roll
xchg
adc
pusha
jae
arpl
push
ret
mov
adcl
rcl
lods
popaw
pop
and
jne
or
cmp
cmc
mov
jecxz
cld
ljmp
test
push
jb
es
push
inc
cmp
mov
shl
in
mov
shrb
imul
arpl
push
inc
mov
xchg
nop
and
lock
rcl
ret
and
xor
add
adc
pusha
jae
arpl
push
inc
mov
xchg
nop
and
lock
rcl
ret
and
xchg
hlt
mov
ljmp
inc
xchg
sub
pop
repnz
dec
icebp
fnsave
add
jbe
lcall
cld
and
mov
add
adc
sub
loope
sbb
sub
lods
xchg
push
fbld
or
inc
or
rorb
or
imul
orb
jg
add
addr16
rorb
vminsd
loope
std
pop
xchg
mov
fmulp
fisubs
mov
popa
stos
repz
cmp
cmc
gs
mov
mov
lock
dec
out
fs
push
cltd
filds
incb
pop
sub
push
inc
or
push
jo
inc
out
jg
and
pop
xor
mov
mov
and
lret
lock
mov
fsubrl
lods
mov
sbb
dec
dec
jno
or
sbb
aad
sub
sahf
jns
xor
add
loop
xlat
mov
jl
leave
fimuls
cmpsb
aam
cmpl
andb
mov
gs
mov
out
mov
outsb
inc
repz
inc
subb
dec
repz
cwtl
or
jl
repz
pop
popf
inc
outsl
leave
and
pop
leave
xchg
mov
bswap
ficoms
fwait
jmp
popf
imul
inc
adc
pop
sbb
int3
jmp
and
pop
dec
loopne
out
loope
rorb
fsubrl
insl
fisubrl
lods
push
add
fwait
test
sbb
push
and
cmp
hlt
bound
jns
sbb
ja
ret
jnp
fdivl
pop
push
mov
sub
sub
inc
dec
hlt
sub
mov
mov
pop
mov
cmpsl
mov
and
mov
xor
push
inc
mov
js
into
mov
push
xor
ret
or
adc
lds
jnp
fisubs
fprem1
out
aas
cmp
shrb
fsubr
insb
mov
fs
sub
lea
jg
negl
dec
pop
xchg
pusha
pop
ljmp
ja
xchg
pop
and
inc
push
xor
and
dec
pop
leave
jp
dec
cmp
in
outsb
loop
ret
jg
xchg
and
imul
fildll
ret
adc
xchg
cli
add
adc
ret
xchg
push
bound
sarl
or
and
daa
cmp
cmpsl
xchg
scas
int
packsswb
into
or
mov
cld
jnp
inc
iret
push
adc
sbbb
lock
push
or
aam
loop
mov
mov
xor
mov
in
call
mov
xchg
xor
in
mov
adc
jno
lods
lods
dec
enter
sub
cmp
add
mov
pop
xchg
cmp
arpl
add
or
aaa
je
les
ret
popf
push
sbb
cmc
pop
cmpsb
insb
mov
iret
in
pop
sbb
enter
jne
es
push
fwait
or
popa
adc
mov
mov
pop
in
ljmp
pop
xchg
or
out
fst
scas
cmpsl
jecxz
xchg
insb
push
mov
add
mov
test
inc
addl
pop
enter
and
call
outsb
push
or
cmc
mov
push
xchg
test
push
loope
enter
jge
dec
test
mov
adc
dec
inc
sbbb
add
dec
pop
out
dec
mov
mov
dec
mov
js
xor
rorl
mov
ss
pop
aas
mov
stc
lods
inc
int
rorl
or
sub
xchg
dec
mov
jecxz
mov
movsl
and
mov
jns
cmpsb
ror
lods
rep
and
pop
shrl
sbb
dec
cmp
outsb
ljmp
flds
call
lret
fmulp
cmpl
je
xor
inc
and
push
jge
dec
mov
aad
daa
push
cltd
mov
and
and
and
daa
loope
xor
loopne
and
and
cmp
sub
lea
mov
sub
mov
mov
shlb
and
adc
jl
adc
xor
lods
xchg
pushf
bound
lret
jae
and
sahf
push
push
mov
ljmp
icebp
out
sub
out
sub
lock
mov
in
jb
or
call
aam
and
fldl
cltd
mov
add
lds
mov
or
jge
sub
out
cmp
xchg
mov
test
dec
ret
loope
lds
mov
out
mov
add
cmp
fwait
in
insb
xchg
adc
leave
repz
test
push
cmpsb
push
xor
in
ljmp
adc
sbb
das
pop
xchg
mov
jb
mov
aad
xor
mov
sahf
stos
mov
mov
mov
adc
inc
sbb
loope
xchg
out
shlb
fidivrs
test
pushf
and
jno
cmpsb
loope
mov
or
idiv
sub
sbb
jl
push
dec
icebp
cmc
into
xor
push
push
adc
mov
push
adc
add
cmp
arpl
xchg
mov
dec
cld
mov
mov
imul
das
adc
sbb
sub
dec
jp
mov
push
or
es
repz
cmpsb
test
and
fisttpl
mov
out
sub
push
repz
cmp
xor
jb
xor
outsb
xchg
mov
jne
mov
pusha
or
das
mov
ret
jae
shl
stos
inc
enter
daa
scas
push
call
and
xchg
fsubrl
lds
adc
sbb
mov
xchg
inc
jo
mov
mov
jg
xchg
mov
lods
sub
out
mov
shll
push
mov
lds
sub
imull
sbb
push
inc
dec
popa
call
xor
jp
jg
insl
in
ja
cld
sbb
in
adcb
stos
jl
int
add
mov
fadd
dec
popf
pop
xchg
push
inc
mov
inc
cltd
dec
pop
jb
inc
add
jecxz
sahf
insl
outsb
in
int3
or
ss
test
ret
mov
or
adc
fldcw
addl
rolb
int3
jl
push
jl
xchg
cltd
out
cwtl
std
mov
or
ja
dec
and
mov
fldt
or
ss
adc
jb
xor
rorl
cmpsl
xchg
cltd
adc
jmp
mov
or
xor
inc
imul
adc
xor
jns
jmp
rorb
test
add
pop
inc
in
jle
adcb
and
in
mov
aaa
add
push
mov
push
fidivrl
dec
pushf
push
dec
in
add
jmp
adc
iret
inc
rolb
icebp
inc
pusha
mov
lret
or
loopne
addr16
adc
imul
dec
pushf
ds
sar
stos
lret
jmp
mov
shrl
or
mov
or
mov
sub
sub
lret
sbb
pop
scas
lods
adc
loop
out
inc
sarb
mov
addr16
mov
rcrb
mov
std
enter
add
push
mov
cmpsb
jmp
js
mov
jno
out
inc
push
xchg
ja
mov
sbb
add
sbb
add
pop
push
pop
push
es
test
lahf
mov
rcr
inc
andb
test
and
or
iret
inc
ljmp
ret
ds
xor
mov
inc
int3
mov
in
in
fisubrl
xchg
cld
mov
mov
pop
pop
test
sbbb
cmpsl
in
pop
pop
popf
xor
mov
and
data16
lret
fiaddl
lods
loope
sbb
push
ret
movsb
xchg
mov
lock
cmp
push
inc
adc
lods
aam
testb
or
mov
jmp
ret
stc
arpl
cltd
clc
adc
mov
sahf
ror
mov
or
test
or
lcall
ret
adc
mov
lods
or
and
inc
enter
test
scas
push
mov
pusha
push
test
dec
mov
fstpl
data16
inc
ss
xchg
jo
and
add
test
pop
and
lahf
inc
outsl
mov
cmp
jle
imul
cmpsb
xor
lock
std
add
sub
mov
subl
mov
insl
and
sbb
mov
sbb
arpl
and
cwtl
push
imul
mov
cmp
addr16
andb
jmp
sbb
mov
add
in
pop
ficomps
jne
sbb
adc
mov
insl
mov
push
sbb
cmp
loopne
pop
sbb
stos
cltd
cmp
out
aam
sahf
out
loope,pn
adc
cs
jb
sub
shrb
gs
imul
out
int
mov
popf
mull
mov
loope
or
int3
xchg
xorb
xchg
fs
pop
cmp
lock
dec
imul
cmp
cmpsl
cmp
cmp
call
inc
ds
and
sub
jne
cmp
xchg
cmp
stc
mov
jp
dec
ljmp
cltd
ljmp
enter
dec
pop
mov
mov
cmp
je
sub
ret
mov
mov
andl
out
test
aas
in
xchg
icebp
inc
pop
pop
stc
xor
sbb
mov
pop
xchg
xor
loope
add
dec
cmp
movsl
out
jne
xchg
outsb
lea
xor
sbb
push
outsb
mov
les
jge
pop
dec
imul
mov
cs
dec
fidivrl
mov
loope
and
orb
popf
data16
outsl
div
xchg
cmp
lds
adc
out
shrb
sbb
popf
test
stos
cmc
jp
push
adc
dec
mov
dec
or
cmp
add
xchg
ret
jb
sub
jno
std
aam
int3
dec
mov
mov
sub
jb
jbe
ds
mov
push
and
adc
inc
and
rolb
popa
sub
mov
lcall
call
cli
push
push
inc
sub
scas
test
pop
fiaddl
xchg
push
popa
outsl
test
iret
gs
jb
icebp
pop
les
dec
lods
and
dec
mov
out
jne
mov
cmpl
jecxz
inc
out
and
out
adc
outsb
out
sub
push
pop
into
iret
sub
or
push
addr16
mov
mov
mov
enter
stc
adc
push
push
or
and
cmp
jmp
add
push
les
outsl
and
clc
enter
pop
sahf
cmp
ja
inc
std
xor
inc
inc
pop
adc
lret
lods
cltd
test
sub
sub
push
js
lods
sar
mov
or
fistpl
push
jns
add
aaa
mov
add
arpl
out
sbb
jo
mov
xorb
xchg
rol
out
inc
adcl
ja
sbb
mov
into
out
or
loop
mov
scas
rolb
pop
cltd
cmp
or
jnp
call
int
dec
ret
cmp
in
sbb
jge
rcl
aas
filds
fwait
jnp
mov
mov
aas
jno
pop
fucomi
sbb
mov
or
adc
test
enter
jecxz
adc
pop
or
sub
lahf
cmp
lock
add
daa
xchg
cmpsl
lahf
hlt
pop
dec
lock
xchg
dec
jno
add
aad
fcompl
jb
gs
mov
jb
sbb
pop
push
inc
and
cmp
adc
pop
movsb
sti
gs
icebp
mov
stos
out
idivl
orl
jle
mov
and
popl
xor
cmpsl
and
and
pushf
or
ficomps
sub
cmp
gs
jle
sub
jnp
sti
shrb
aam
sub
dec
sbb
mov
xchg
leave
mov
shll
les
lea
test
adc
jo
in
dec
lds
cmpsl
push
out
jnp
dec
imul
adc
pop
xchg
out
sub
mov
fisubs
subb
nop
rolb
movsb
xchg
imul
ret
xchg
jecxz
cmp
adc
pusha
not
xor
sbb
pop
insl
dec
mov
xlat
dec
lods
xor
addr16
popf
test
adc
clc
lods
xchg
xchg
lret
jbe
mov
rclb
aam
jns
add
push
test
mov
jae
lahf
lock
icebp
mov
out
insl
cld
sbb
inc
in
push
cld
cmp
mov
scas
repnz
repnz
mov
clc
addl
cmpsl
nop
pop
mov
loopne
mov
and
and
and
repz
int3
stc
sub
push
mov
into
test
fldcw
lahf
adc
lret
mov
movsb
lret
mov
cmp
mov
jns
stos
inc
push
sbb
push
xchg
mov
inc
xor
aam
jecxz
hlt
adc
movsl
xor
insl
or
xchg
je
call
xor
lock
add
pop
pop
or
jp
outsb
shl
jge
cmp
ss
lret
pop
into
hlt
push
ficoml
pop
mov
adc
ret
sti
mov
lret
insb
ret
add
adc
pop
mull
addr16
stos
aad
sub
xchg
push
xor
jle
arpl
movsl
shlb
nop
cmp
out
ljmp
pop
xor
sub
test
lea
mov
scas
in
mov
or
cmp
hlt
ss
mov
std
movsl
loope
cmpsb
rcl
int3
pop
jmp
and
xor
dec
shl
or
fwait
mov
jle
divb
pop
sbb
dec
push
mov
push
movsb
mov
cmp
mov
movsbl
stc
rcll
aam
xchg
sub
insb
leave
popf
pop
pop
jecxz
lea
sub
stos
dec
movsl
js
clc
cs
mov
stc
xor
test
pop
push
dec
sub
insl
or
call
pushf
fisubrs
push
mov
jmp
lods
xchg
cmp
int3
rcll
pusha
ljmp
add
mov
or
cmp
fmuls
dec
imul
cld
pushf
inc
data16
add
out
adc
dec
xchg
and
test
jle
adc
cwtl
sbb
xor
ljmp
push
stc
loopne
add
cli
cmp
popa
out
jmp
dec
cltd
xor
cmpsl
pop
dec
dec
cld
add
and
adc
aad
lret
inc
mov
outsl
push
jcxz
push
subb
mov
xchg
lock
dec
data16
push
mov
mov
fstpt
jmp
out
jo
xorl
sub
push
popf
repz
mov
adc
dec
lods
ret
cmp
cmp
sbb
mov
outsl
xor
xor
mov
sbb
popa
stos
add
cs
pxor
and
sbb
loop
push
mov
movsl
inc
sub
mov
dec
int
push
sbb
popf
cmpsl
xor
cmpsl
add
ljmp
aas
or
add
cs
js
mov
test
std
js
gs
mov
hlt
xchg
and
pop
pop
mov
rorl
idivb
xchg
lods
inc
push
sub
dec
pop
outsl
mov
ret
dec
test
test
inc
loopne
out
cmp
popa
push
jge
pop
cmp
ja
loopne
add
stos
cmpsl
nopl
cli
add
pop
add
adc
ja
sbb
add
loopne
sub
mov
dec
pop
push
test
or
sub
lods
and
cmpsb
iret
inc
fistpll
arpl
cmp
jae
repnz
pushf
das
in
dec
mov
inc
pop
or
push
dec
cs
adc
or
sub
pop
push
dec
testb
dec
dec
aas
jb
jnp
pushf
mov
xor
xor
mov
cmp
stos
inc
xor
dec
inc
add
js
rcll
cmp
aas
inc
lret
mov
xchg
out
push
add
sub
cmp
outsb
out
sbb
call
andl
ret
dec
adc
xor
mov
pop
fmul
stos
xchg
jo
mov
daa
mov
mov
ss
jae
in
or
fidivs
xor
ljmp
es
xor
popf
push
inc
and
stc
and
mov
and
mov
cmpsb
repnz
jno
add
pop
lods
int
ja
cwtl
pop
arpl
push
jmp
dec
fisubl
int
mov
cld
fs
loop
lea
das
sub
jge
pusha
sbbb
mov
aam
mov
sahf
daa
std
pop
out
push
mov
sbb
mov
arpl
mov
pop
pop
loopne
into
push
sbb
cmp
push
shlb
loopne
mov
ja
fs
out
jg
push
leave
sti
pushf
xchg
inc
call
dec
loope
inc
cmpsl
es
dec
xchg
aaa
cwtl
cli
or
pop
add
and
and
push
hlt
push
jecxz
mov
loopne
repnz
sbb
rcl
inc
out
loopne
sbb
rcll
cs
fnstsw
loopne
mov
add
xchg
jne
inc
push
repnz
and
pop
mov
dec
jecxz
xor
mov
pop
jne
adc
xlat
mov
iret
xlat
push
enter
jmp
movsl
adc
sub
sbb
xlat
les
cmp
sbb
mov
in
mov
cmp
pusha
sub
mov
cmp
dec
pop
xchg
dec
cltd
adc
aaa
push
dec
movsb
pushf
xor
and
xor
xor
add
in
mov
fmull
leave
add
mov
inc
decl
fwait
push
push
add
push
pop
jecxz
jle
inc
call
fs
insb
xchg
mov
cmpsl
aad
sub
jg
xchg
cs
int
pop
sbb
nop
add
cmp
jo
leave
add
icebp
or
jmp
insb
add
cmp
mulb
loopne
mov
add
jae
inc
sahf
pop
pop
and
aas
adc
popf
sub
sub
nop
jle
ret
adc
hlt
lock
insl
ljmp
popa
das
outsb
cs
dec
int3
sahf
rclb
jno
xchg
pusha
xlat
mov
adcl
outsl
ss
dec
call
xor
add
data16
jl
ret
pop
gs
or
lea
push
inc
lret
rorl
out
subl
bound
pop
lds
sub
mov
push
pop
mov
push
mov
rcr
lds
sbb
mov
dec
int
std
das
dec
ret
xchg
mov
and
sub
js,pt
pop
je
pop
loope
popa
es
lods
xor
or
popa
sbb
dec
daa
test
inc
jne
xchg
lds
scas
aam
pushf
lahf
push
pop
test
and
or
or
in
pop
fnstsw
sbb
das
inc
das
push
mov
out
or
sahf
test
fdivs
arpl
aad
hlt
and
jb
dec
adc
push
lret
das
sbb
ljmp
in
push
inc
dec
fstpl
jb
and
ss
inc
jg
lahf
inc
popa
lret
xchg
addr16
lock
inc
sbb
sbb
mov
adc
shll
mov
mov
pop
inc
or
xchg
dec
adc
fldenv
cmc
push
lret
sti
push
mov
aaa
cmpsb
sbb
sub
cmp
rcr
mov
loopne
jg
adc
dec
mov
push
cs
push
add
sub
divb
jnp
sbb
xor
ficompl
cld
aad
rcl
pop
pusha
insl
daa
lds
jnp
lds
push
or
lea
fnsave
imul
bsr
inc
icebp
ljmp
push
sbb
and
dec
mov
or
adc
aad
push
scas
popf
cld
mov
xor
push
add
and
jb
ja
lods
jno
inc
sub
leave
sbb
outsl
rep
mov
adc
pop
mov
test
push
sub
cs
inc
in
adc
inc
jl
mov
and
in
aam
inc
outsb
mov
out
je
mov
fistps
imul
lds
jmp
insb
sub
jl
push
inc
ficoml
lods
fyl2xp1
jl
hlt
fbld
jle
shrl
out
push
jns
scas
mov
lods
mov
push
or
adc
test
aas
mov
and
lret
add
sbb
mov
adc
jb
out
dec
mov
out
stc
inc
add
lock
in
jge
inc
xchg
outsl
adc
cmp
subl
loop
xchg
cmp
repnz
xor
cli
add
jbe
call
das
clc
add
test
gs
add
call
jle
inc
mov
loopne
je
push
sahf
sbb
mov
dec
pop
sbb
call
sub
jg
add
jo
inc
push
push
inc
mov
xchg
nop
and
lock
rcl
ret
and
xor
add
adc
pusha
jae
arpl
push
inc
mov
xchg
nop
and
lock
rcl
ret
and
xor
imul
pusha
jae
lret
inc
push
push
inc
mov
xchg
nop
and
lock
repz
and
xor
add
adc
pusha
jae
arpl
push
inc
mov
xchg
nop
hlt
xchg
jnp
sbb
sub
cmp
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
or
sbb
sub
cmp
inc
fdivrs
repnz
je
mov
test
or
pop
jmp
int3
sbb
sub
cmp
dec
mov
imul
jl
or
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
imul
jl
pop
stos
js
dec
nop
cmp
int3
js
sub
push
pop
subb
or
or
add
out
std
les
dec
je
arpl
icebp
adc
push
insb
inc
jge
int3
fsts
neg
jae
inc
sbb
sbb
mov
mov
mov
enter
push
stc
cmp
ljmp
mov
inc
jns
jns
adc
dec
xchg
inc
sbbl
jb
pop
push
pushf
and
jns
xchg
push
repnz
xor
les
push
sub
loope
adc
mov
rcrb
into
mov
dec
pop
push
mov
cs
cmp
int3
sbb
sub
cmp
dec
mov
imul
jl
or
sbb
sub
jp
mov
jg
sub
fldl
leave
std
int3
stc
and
xor
dec
popa
cwtl
mov
insl
xchg
dec
in
js
sub
adc
sti
or
xor
cmp
jae
pop
xchg
push
outsb
pushf
sbb
or
pop
pushf
imul
jl
or
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
imul
jl
or
sbb
sub
cmp
int3
js
mov
inc
sub
ja
int3
jge
mov
sbbl
xchg
mov
adc
mov
jnp
xor
test
sub
insl
xchg
inc
test
mov
adc
ret
mov
inc
jl
jae,pt
mov
pop
add
adc
push
fcmove
test
roll
fldl
push
sub
xchg
jb
rcrl
gs
fdivp
divb
cmp
shrb
outsl
fcoms
push
fstpt
sub
jbe
das
cmp
and
movsb
push
aad
push
movsb
jb
cs
mov
scas
les
and
lds
iret
inc
test
cmpsb
inc
stos
pusha
sub
xlat
pusha
sahf
pushf
pop
scas
adc
jg
notl
jno
pop
out
rcrb
lods
mov
add
jp
imul
sub
inc
add
fucomp
mov
mov
lret
pop
xchg
mov
rep
scas
xchg
mov
data16
mov
scas
xchg
xor
imul
cmc
add
jae
lcall
and
jno
add
adc
in
adc
sub
lods
pop
jmp
ficoml
pmuludq
mov
xor
ds
jl
sarl
mov
fs
sbb
icebp
push
push
fcmovne
lcall
dec
aas
xor
mov
maxps
mov
subb
xor
mov
sbb
mov
xchg
mov
xor
out
and
xor
mov
pop
cmp
test
stos
jnp
jge
adc
jmp
imul
pop
mov
xchg
lcall
repnz
dec
mov
dec
inc
int3
jne
xlat
dec
sarb
ja
out
xor
test
pop
mov
or
push
pusha
divl
dec
inc
jb
negl
test
ja
add
push
lret
inc
add
and
xchg
repnz
pop
dec
or
sbb
sub
jns
pop
mov
lock
incl
in
in
movsl
jns
or
add
add
xor
mov
xchg
xor
dec
scas
jg
orl
imul
loope
mov
jno
cmp
idivl
jg
test
gs
adc
jae
arpl
rorb
mov
adc
movsb
sbb
out
inc
jp
ret
imul
stos
jbe
pusha
mov
mov
dec
and
mov
xor
dec
pop
or
or
push
jae
rorb
mov
cmp
xchg
inc
adc
rclb
into
mov
es
in
aaa
cmp
stos
xchg
rcrl
in
shll
adc
rclb
cld
push
in
fldt
cli
mov
mov
lds
adc
insb
das
outsl
jae
daa
push
lock
lea
cmp
mov
ret
xchg
cmp
add
mull
mov
jg
subb
cmp
sub
pop
jb
mov
test
bswap
mov
int
jp
dec
mov
mov
mov
push
pcmpeqb
mov
enter
adc
xchg
sub
pop
mov
outsl
adc
push
or
xor
mov
test
adc
mov
dec
das
data16
cmpsl
mov
or
and
movsb
push
int3
mov
je
mov
cmp
dec
jns
inc
mov
and
shl
js
pop
mov
jo
cmpsb
fs
in
push
outsb
push
and
movsb
sbb
mov
jmp
mov
movsb
data16
and
mov
test
pushf
mov
movb
loopne
xchg
sub
addb
push
pop
push
jmp
and
das
dec
scas
mov
vmovdqu
fcoms
adc
and
sti
lds
fwait
add
roll
xlat
mov
add
xchg
xchg
dec
pop
jae
pop
or
push
je
int3
insl
in
scas
clc
cmpsl
xchg
sahf
mov
jle
frstor
add
jo
and
addb
arpl
jns
sbb
aam
shll
shll
add
mov
or
outsl
aam
and
movq
shlb
jge
pop
xor
add
cld
add
insb
cmp
into
dec
add
ja
or
pop
int3
lahf
sahf
call
ret
sbb
fbstp
rcrb
sbb
les
pop
cmpsl
pop
sub
aaa
das
out
adc
jp
add
adc
mov
js
inc
cmp
fs
jne
cld
mov
push
sbb
pop
pop
lock
popf
cmp
sbb
loope
push
divl
fucomi
lahf
ja
mov
dec
push
jns
lods
xchg
pop
ljmp
mov
and
std
xchg
push
lods
cmc
ret
jns
ficompl
cli
sub
pop
fbstp
or
rep
jp
sub
sub
xchg
mov
je
xor
mov
jmp
add
jae
pop
inc
lahf
subl
add
data16
jo
sub
push
pop
cmpsb
add
pusha
dec
jmp
sbb
jne
or
movsl
shr
ds
and
jb
in
in
sub
pop
mov
push
and
scas
mov
scas
xor
inc
bound
sbb
xchg
sub
push
mov
out
enter
adc
push
sbb
sbbl
adc
movq
faddl
sbb
dec
mov
mov
mov
cmp
mov
fwait
mov
xor
inc
je
jmp
int3
in
pop
add
mov
sbb
sti
out
lea
fbld
fwait
add
ss
pop
push
shll
sbb
lock
mov
loopne
and
cwtl
adc
or
and
xchg
and
xchg
sub
es
das
sub
jno
xchg
imul
cs
xor
xchg
mov
ficomps
mov
mov
iret
ja
and
inc
cmp
insb
inc
mov
fcomi
mov
mov
not
pop
imul
add
adc
xchg
sti
hlt
insb
dec
arpl
call
jge
bnd
adc
and
insl
inc
sbb
xchg
fistl
mov
mov
mov
mov
sub
cmp
out
fmuls
sbb
or
loop
inc
movl
and
mov
aam
sti
cmp
es
sti
jb
push
sbb
repz
inc
mov
arpl
inc
loope
test
and
push
in
jno
pop
movsl
dec
sar
imul
clc
lds
icebp
test
jnp
les
loope
mov
stos
aam
out
cli
sub
mov
mov
mov
xchg
pop
mov
jp
iret
add
mov
daa
mov
daa
mov
mov
mov
pushf
jno
xchg
std
push
mov
sub
push
mov
mov
jmp
mov
push
fisttpl
dec
mov
dec
insl
mov
jmp
dec
testb
mov
cmp
out
pop
sbb
mov
aad
roll
leave
aas
xor
lods
add
sub
mov
nop
mov
repnz
roll
mov
popa
scas
lods
popa
pop
mov
cmp
xor
or
shlb
inc
nop
in
and
daa
test
push
pop
push
mov
inc
aad
mov
dec
jp
divb
sub
pop
and
cmp
pop
rolb
mov
fs
lret
outsl
in
push
dec
ja
sub
mov
add
mov
inc
adc
loope
ret
dec
cmp
add
mov
fcompl
into
sbb
fld
rclb
pop
adc
mov
aas
idivb
outsl
mov
into
and
fldl
add
insl
scas
lahf
xchg
mov
call
and
mov
xor
pop
xchg
test
arpl
add
insl
fisttpl
xchg
push
jb
mov
cmc
test
mov
sahf
pop
pop
cmp
les
outsb
dec
xchg
sbb
neg
ret
mov
mov
fimull
jl
sti
repnz
mov
adc
sub
sbb
outsl
xor
nop
mov
jb
inc
adc
imul
push
sahf
add
insl
push
sub
add
xchg
outsl
mov
insl
mov
cld
xor
push
add
int
jne
jg
stc
sub
insb
pop
nop
jg
in
in
and
push
js
lret
cmc
stc
sbb
fs
mov
xor
pop
sbb
pop
xchg
mov
jae
es
mov
out
cs
xchg
and
pop
dec
das
push
scas
fwait
scas
cmp
mov
lods
or
repnz
jnp
xor
adc
push
push
mov
das
mov
adc
push
mov
xchg
push
push
mov
push
stc
xor
ret
inc
xchg
jns
bound
cli
aam
jmp
jo
sub
hlt
jns
pop
inc
test
xchg
mov
mov
sbb
inc
dec
dec
sbb
pop
fsubs
test
or
dec
cmp
xchg
fstpl
xor
adc
add
cmpb
fs
sub
leave
mov
dec
stc
movsb
dec
movl
cmp
inc
fistpll
jno
mov
loop
clc
and
pop
adc
lock
lret
ss
add
in
sbb
pop
and
pop
scas
lods
xchg
mov
jnp
jbe
sub
push
pop
pop
cltd
psrad
setae
dec
jmp
aas
xor
mov
jle
nop
xor
pop
imul
jmp
dec
lods
pop
call
cwtl
imul
addr16
inc
adc
aas
outsl
xchg
push
mov
aam
pop
mov
mov
fdivl
ret
loop
push
adc
jb
arpl
adc
stos
add
pusha
jge
xchg
out
adc
ds
xor
sub
dec
cld
inc
fistl
inc
and
cmp
clc
popf
icebp
push
pop
and
add
sub
mov
pop
push
in
lods
or
loope
jne
add
sub
xor
adc
adc
jmp
stos
xchg
mov
fstpt
sbb
ret
push
nop
fstl
push
ss
sarb
cmpsb
cwtl
fwait
inc
cmpsl
adc
inc
pop
xchg
scas
xor
mov
imul
and
int3
push
pop
loop
mov
out
jg
mov
in
xchg
jge
add
adc
cmpsb
jmp
in
pop
outsl
add
push
adc
xlat
adc
cmpb
pop
out
and
inc
stc
mov
popf
or
cmpsb
mov
mov
sub
jbe
ret
imul
ret
outsl
add
push
push
ljmp
pop
scas
loopne
sub
add
loope
mov
sub
mov
fstpl
xchg
or
pop
dec
mov
sub
loop
sbb
loope
testb
dec
xchg
xor
ljmp
add
add
mov
cmp
stos
jmp
daa
jl
dec
addl
cld
clc
movsb
adc
mov
push
cmc
adcb
adc
and
insb
or
push
rcrb
dec
push
pop
or
add
cmp
cwtl
fisttpl
mov
adc
dec
push
nop
jno
mov
and
js
lods
push
fbld
rcl
into
popa
mov
xchg
jne
adc
cs
adc
add
cld
fdivrl
data16
popa
push
mov
repz
orb
and
rcrl
pop
inc
pop
mov
push
into
xchg
sti
xchg
and
adc
sbb
mov
scas
sub
je
pop
insb
mov
mov
pminub
lods
or
dec
mov
dec
dec
mov
xchg
pushf
adc
movsl
xchg
fnstcw
insl
gs
js
shl
add
gs
mov
outsl
push
xlat
push
adc
push
xchg
pop
and
cmp
sbb
insb
or
jecxz
outsb
testb
enter
lds
je
je
int3
pop
sahf
adc
aaa
xchg
clc
pop
fwait
iret
xor
xchg
push
xchg
and
out
gs
cltd
shr
mov
or
imul
std
andb
jg
mov
mov
sahf
or
jae
push
mov
je
mov
cmp
xchg
xor
xchg
ret
jle
out
sub
jno
roll
arpl
push
xlat
and
add
jmp
ret
cli
scas
sbb
icebp
lcall
pop
pusha
sub
ret
push
cld
jo
dec
sub
clc
pop
in
mov
lret
lea
cmpsb
sbbb
nop
push
fidivl
cwtl
insb
push
add
mov
and
push
es
mov
mov
call
ljmp
shl
cmp
imul
lds
test
and
pop
mov
mov
mov
mov
int3
jo
mov
arpl
std
divb
sbb
xor
mov
mov
and
xchg
xchg
mov
mov
adc
push
dec
mov
gs
mov
cmp
call
mov
fwait
push
pusha
test
cmp
repnz
mov
mov
mov
xchg
xchg
jecxz
test
add
enter
mov
cltd
push
sbb
pushf
mov
inc
and
mov
scas
filds
sub
pop
add
inc
movb
mov
push
and
sbb
gs
fisubrl
mov
mov
jns
jmp
fisubs
popf
cmp
dec
je
xor
icebp
xchg
aas
cli
dec
cmpsb
ret
mov
ds
dec
subl
scas
outsb
repz
scas
add
and
notl
cmp
fnstcw
mov
enter
out
mov
push
pop
dec
lret
dec
divb
rclb
les
mov
movsb
repz
lea
cmp
arpl
xrelease
leave
pop
mov
add
sar
mov
inc
in
bound
rcr
ja
mov
dec
loopne
xor
loop
imul
into
js
lock
into
jnp
sbb
ss
int
xchg
outsb
in
lods
stos
fmulp
sti
jnp
popf
dec
ds
push
sbb
xchg
inc
push
and
sub
or
test
cmpsl
xor
popa
add
sub
fstps
ss
scas
xor
daa
ljmp
out
scas
and
mov
adc
aas
je
push
lret
xchg
addl
in
stc
fnstsw
aas
fs
push
fadds
push
mov
pusha
out
shlb
int
dec
mov
inc
xlat
cmp
sub
out
push
mov
test
adc
inc
arpl
popa
scas
mov
xchg
ds
cmp
notb
repz
xor
loop
add
xor
mov
fcoms
xchg
clc
outsb
xchg
test
push
xor
xchg
imul
cmp
loop
pop
imul
clc
flds
xor
jne,pn
ljmp
jmp
cwtl
loopne
neg
mov
mov
xchg
push
in
es
jl
add
push
adc
jg
add
fld
adc
out
sub
fistl
lock
fmuls
xchg
jae
sub
in
out
out
sbb
rorb
outsl
into
sbb
mov
push
in
fdivl
jo
mov
push
in
imul
mov
es
sub
ret
jb
loope
cwtl
lret
nop
mov
pop
faddl
mov
inc
fs
inc
or
pusha
jae
aaa
sub
lret
mov
fdivrl
je
push
mov
dec
inc
jp
and
aaa
push
mov
shll
pop
pop
lret
fidivrs
pop
dec
sub
repz
lret
fyl2x
push
push
cwtl
cmp
mov
jmp
mov
sub
movsb
push
jle
arpl
lea
inc
push
cs
mov
or
add
add
jl
dec
inc
adc
jmp
add
mov
aas
adc
adc
and
rcl
aaa
xchg
or
or
inc
cmp
sub
xchg
rol
push
push
test
jp
popa
clc
push
sbb
lods
and
mov
addr16
dec
insl
loop
push
push
inc
inc
mov
pop
rcrl
fisubrl
add
loope
xchg
fs
mov
xchg
popf
in
idivb
sbb
mov
push
cmp
mov
cs
jg
sub
add
sahf
cmpsb
or
and
sbb
sbb
int
imul
lcall
pop
jge
mov
xchg
push
xor
movsb
das
add
mov
sbb
jne
nop
inc
pop
sbb
pop
fdivrs
loope
test
xchg
or
add
mov
js
add
es
in
xor
inc
and
mov
inc
notb
outsl
lock
dec
push
lods
sahf
loopnew
push
sahf
mov
rcll
sbb
sbb
fcoms
or
sbb
and
jae
sub
loope
or
adc
inc
lock
inc
sub
insl
xor
sbb
outsb
cmp
sbb
sti
jle
aas
pushf
push
call
std
fists
add
iret
les
xorl
inc
stos
addr16
cmc
fcoml
sbb
call
outsl
sub
data16
ja
add
int3
pop
fdivrs
sti
sub
hlt
mov
clc
add
clc
and
leave
sbb
pop
rorl
addl
flds
push
lret
outsb
int3
jle
mov
push
sub
lahf
cmp
xchg
cltd
ljmp
jae
jbe
sub
inc
xor
sarb
aaa
call
push
jne
sub
fbstp
sti
negl
push
jmp
jecxz
pusha
dec
xchg
adc
push
or
mov
fucomip
test
icebp
fmull
outsl
stos
fadds
or
jmp
mov
rcr
mov
lods
stos
call
popf
jo
push
sbb
mov
mov
or
push
rorb
add
jmp
lock
fisubs
xor
jmp
jae
in
sbb
or
adc
hlt
nop
addr16
jp
jo
std
scas
dec
jo
cmp
ret
sub
mov
push
sahf
mov
icebp
iret
in
mov
pushf
ss
sub
jnp
nop
rcrb
mov
imul
lret
shlb
inc
ret
nop
jae
jp
pop
inc
mov
and
dec
xor
jmp
mov
xchg
and
leave
add
push
dec
pushf
nop
imul
add
mov
ror
push
in
mov
adc
in
mov
cmc
arpl
and
xchg
idivb
cmp
popf
fdivrl
inc
jp
or
mov
ret
shl
adc
xchg
cli
push
test
dec
fwait
cmpsl
jmp
icebp
aad
loop
shrl
mov
or
xor
mov
xchg
sbb
es
adc
jno
pop
lods
jns
xchg
call
xor
jge
cmp
mov
cmp
fnstenv
pop
jb
pop
xor
add
cli
mov
adc
cmp
inc
mov
ret
int3
pop
psrlw
stos
xorl
jge
inc
xor
cmp
jg
cmp
push
xor
cwtl
mov
add
stc
ret
jp
sub
dec
or
les
push
or
insb
sub
xlat
out
add
addr16
or
dec
rorl
sbb
mov
xorb
pop
rcrl
jle
testb
rolb
push
xchg
xor
pop
and
xchg
cld
andb
lret
mov
jl
ds
imul
push
cmp
push
xchg
jns
jmp
sti
jmp
xor
in
cltd
xor
xlat
fs
fnstcw
dec
push
sub
mov
shr
mull
dec
mov
mov
repz
cmpsl
test
flds
inc
sbb
add
push
aam
push
cmc
xor
push
cmp
addr16
fndisi(8087
adc
mov
addb
adc
insl
mov
fiadds
jbe
shrb
and
dec
and
ss
add
sub
cltd
imul
adc
and
xchg
les
add
inc
sbb
sbbl
mov
cmc
jnp
clc
scas
inc
dec
xlat
ret
mov
inc
popa
out
mov
push
arpl
add
lds
jle
movsl
push
lret
and
xchg
jp
or
test
cmp
cli
dec
out
stos
mov
mov
insl
fwait
dec
dec
jnp
mov
orb
push
fwait
or
xchg
fcoml
in
cmp
dec
mov
imul
jl
or
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
imul
jl
or
sbb
sub
cmp
enter
in
cmp
dec
mov
imul
mov
sbb
sub
cmp
int3
sbb
sub
cmp
dec
mov
jmp
mov
testb
mov
jecxz
roll
ret
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
stc
insb
jmp
mov
idivl
mulps
dec
and
push
sub
arpl
arpl
xchg
jmp
mov
cltd
repz
jns
imul
stc
xor
xchg
sbb
arpl
mov
sbb
leave
mov
cltd
jmp
stc
jns
dec
cmp
adc
insb
and
ljmp
and
xchg
insl
jno
sbb
mov
mov
or
ret
ss
inc
pop
test
imul
and
sub
dec
jae
cs
in
mov
ret
adc
cmp
cmpsb
imul
arpl
ret
jmp
xchg
sahf
repz
sbb
inc
in
cld
cmpsl
shll
fadd
add
lcall
bound
dec
ss
loopne
test
loop
sahf
aas
add
jbe
and
into
dec
jae
pushf
add
push
arpl
mov
push
adc
mov
adc
xor
movsb
ss
mov
xchg
fldenv
test
cli
jns
imul
cmp
push
sbb
pop
mov
mov
mov
std
lahf
mov
pop
xor
sub
jp
dec
push
pushf
jmp
cmpl
icebp
loope
fisttpl
pop
inc
dec
pusha
cmp
inc
sub
pop
jl
pushf
shr
out
shlb
ret
cltd
repz
jns
imul
cmp
inc
sbb
arpl
xchg
jmp
mov
cltd
repz
jns
imul
cmp
inc
sbb
arpl
xchg
int3
add
xchg
out
inc
out
or
cli
cmpsl
pushf
pop
mov
lret
dec
jp
jns
hlt
mov
std
jbe
loopne
call
xor
sbb
mov
or
sbb
cmp
jb
xchg
adc
mov
mov
push
add
scas
fiaddl
cli
cmpsb
sub
stos
inc
cmpb
and
dec
push
in
or
fldt
loopne
popf
stos
mov
push
insb
stos
imul
mov
push
pop
push
xor
cmpsl
mov
inc
adc
adcb
or
insb
int
cwtl
insl
adc
arpl
pop
pop
test
mov
call
das
sahf
sbb
sbb
test
stos
out
cmp
outsb
jmp
adc
push
lahf
xor
jae
js
mov
out
test
out
hlt
mov
ds
sbb
fldt
shrb
rcl
sbb
push
xrelease
pop
sub
out
mov
into
cmpl
add
add
call
sub
pop
rcl
cli
ja
push
mov
gs
stos
cltd
add
sbb
and
or
daa
pop
cmp
inc
jge
sbb
les
xchg
push
jne
push
mov
and
mov
dec
out
adc
adc
inc
shl
adc
add
dec
fcoms
stos
or
mov
jne
xor
adc
addr16
jno
push
jnp
sub
in
mov
popf
in
insl
xlat
hlt
xchg
addl
lret
mov
add
mov
in
dec
stos
dec
jl
gs
xchg
or
clc
sti
cwtl
jb
loope
mov
mov
daa
clc
stc
test
jp
ret
lret
pop
call
adc
addr16
ret
and
in
jecxz
adc
sub
int
xor
adcl
xchg
call
xor
insb
or
xorl
inc
inc
add
jne
jnp
icebp
loope
shlb
mov
test
push
rclb
and
test
sub
pop
dec
dec
dec
push
lods
test
hlt
sub
and
push
mov
arpl
loope
test
imul
and
pop
inc
inc
scas
shrb
mov
pop
mov
outsb
xchg
cmovo
push
enter
sbb
xor
cli
adc
hlt
cmp
jbe
dec
mulb
pushf
ja
fisubrl
push
jmp
pop
inc
and
pop
es
fmul
std
lock
fnstenvs
or
out
push
cmpsb
shl
pusha
mov
iret
add
ljmp
adc
mov
pop
jae
clc
repnz
mov
lock
push
pop
sub
mov
xor
out
dec
clc
cld
mov
fwait
mov
inc
stos
mov
lret
fdivr
push
inc
mov
jnp
popa
out
push
movsb
sahf
xor
jns
aaa
adc
clc
mov
mov
cmc
cmpsl
test
int
and
sbb
ds
xor
gs
mov
mov
xchg
pop
movsb
ret
call
xchg
daa
pop
mov
adc
ljmp
xchg
pop
mov
dec
xor
mov
cmpsb
repnz
mov
cmc
dec
mov
ret
out
mov
or
aam
shll
int
xlat
and
mov
cmp
pop
xchg
mov
es
jo
jo
jmp
ljmp
test
mov
movsb
outsl
sbb
lret
jl
loope
xchg
test
and
out
xor
nop
es
cmp
rcll
div
mov
mov
or
add
cs
dec
ret
dec
pop
rcll
jae
out
inc
shl
movsl
fwait
cli
pop
sub
inc
lods
dec
jae
inc
inc
and
mov
pop
push
ss
mov
mov
or
lods
jl
inc
pop
pop
mov
pushl
and
in
rol
insb
pop
push
dec
xchg
popf
enter
inc
dec
jnp
out
and
negl
inc
xor
mov
rcrb
cmp
negl
and
arpl
pop
pusha
lods
subl
mov
adc
out
bound
push
pop
xchg
inc
dec
xor
leave
stos
out
or
pushf
addr16
jae
out
loope
mov
fsubrs
add
aad
ja
rorb
push
icebp
insb
sub
xor
popa
mov
in
pop
mov
arpl
jo
mov
sub
sahf
adc
push
dec
loop
pop
sub
or
mov
lea
imul
sbb
adc
loopne
out
popa
test
dec
and
pop
ds
dec
xchg
into
adc
mov
mov
int
incl
stos
in
int3
xchg
out
imul
fnstsw
adc
xchg
xor
xchg
inc
andb
test
mov
out
sub
cmp
xchg
icebp
push
dec
dec
jae
fwait
mov
add
ficomps
and
pop
stos
mov
xchg
xor
pushf
adc
and
push
jne
sub
fbstp
mov
icebp
jno
int3
movsl
sarb
jbe,pt
push
out
arpl
push
mov
xor
fsubl
mov
out
jnp
and
hlt
fldl
add
xchg
inc
iret
aam
jne
lds
not
ret
pop
xorl
dec
xor
and
hlt
xchg
and
dec
leave
inc
nop
dec
fimuls
xchg
insb
ficomps
inc
int3
xorb
out
cmc
imul
inc
stos
leave
subl
mov
negb
pop
ss
push
mov
fisttps
inc
loopne
test
pop
adc
stos
inc
sub
ljmp
enter
dec
cmpsb
mov
push
sub
or
sar
xchg
xor
mov
dec
mov
pop
jnp
das
in
mov
jo
lds
lea
lret
cld
cmp
jne
movsb
int
lods
mov
inc
lds
fdivrs
in
mov
into
or
arpl
inc
push
push
leave
sbb
add
cmp
hlt
nop
add
scas
cltd
into
dec
dec
nop
fsubrs
and
mov
push
push
or
xor
test
ljmp
movsl
lods
xor
cs
daa
aas
cld
hlt
and
bound
movsb
push
push
stc
push
sbb
or
add
sbb
inc
xor
sub
ja
xchg
and
js
aam
enter
adc
jb
notb
loopne
mov
pop
mov
faddl
xor
loope
xchg
mov
cmp
dec
cld
dec
mov
repnz
mov
fimuls
mov
fmuls
cmp
and
or
push
mov
or
sti
pop
daa
dec
jnp
xor
dec
out
in
cmp
inc
das
into
adc
cld
sub
popa
leave
cmp
cli
stos
pop
out
jg
roll
ljmp
xchg
fbld
in
ljmp
add
sbbl
sub
fistl
cmpsb
mov
or
les
test
mov
push
push
jne
mov
test
adc
cwtl
aad
cs
push
insl
in
or
cli
in
sar
xchg
dec
pop
movb
adc
bound
rclb
xlat
xor
sub
int
xchg
mov
mov
push
and
cli
or
lcall
jne
sbb
push
mov
aas
dec
lea
lea
xchg
add
test
pminub
testb
pusha
ror
cmp
xchg
data16
cmp
mov
inc
adc
int
divb
fld1
dec
popf
jbe
cli
data16
pop
iret
adc
sbb
and
mov
pop
mov
out
shl
outsb
jle
or
divb
lods
popf
mov
jno
out
cmc
xchg
push
ljmp
inc
add
cs
iret
es
dec
inc
loopne
sub
sub
inc
mov
loope
xor
inc
pop
pop
stos
pop
add
fdivs
add
rorb
and
hlt
jnp
into
faddl
mov
int3
push
add
imul
outsl
add
out
test
mov
cmp
or
jmp
mov
setl
or
loopne
sbb
adc
test
cmp
pop
outsl
lods
pusha
sbb
iret
push
push
jno
pushf
and
sbb
xchg
loope
lock
mov
add
aas
xor
popa
movsl
aad
xlat
sub
xchg
or
out
arpl
pop
sbb
xchg
in
daa
mov
and
add
dec
ds
lret
jne
popf
pop
pop
push
movsb
adc
dec
jb
inc
dec
into
cmpsb
push
push
pop
cli
jge
mov
mov
adc
repnz
cmp
filds
fwait
cmp
mov
xchg
daa
imul
pop
gs
dec
stc
sub
outsb
mov
cmp
movsl
xorb
out
push
jmp
and
in
push
inc
test
aas
and
lods
cmp
pop
jb
icebp
in
push
popa
xor
add
inc
inc
and
int3
cld
popa
pop
dec
dec
push
push
fisubrs
sbb
sbbb
rcl
mov
loop
in
push
and
jmp
mov
fidivl
jecxz
pop
mov
mov
scas
movsl
pusha
jmp
xor
fsubrl
outsb
in
xchg
xchg
test
cmp
mov
sbb
pop
call
add
inc
in
xchg
push
mov
jl
arpl
idiv
aas
out
add
mov
repnz
mov
mov
adc
mov
shr
sbb
jno
loop
xchg
sub
adc
flds
sbb
mov
pop
rcrl
mov
and
shlb
jg
clc
xchg
mov
xor
sub
mov
dec
inc
adcb
ret
pop
dec
push
mull
cmp
fnstcw
cmp
gs
sbb
lock
pop
or
out
push
data16
fisttpll
jnp
inc
out
test
sbb
add
push
mov
dec
sbb
sub
dec
jmp
mov
and
repnz
lds
sub
jae
or
jno
pop
xor
cmp
pop
mov
xchg
cmp
dec
sbb
inc
stos
lods
xor
jae
push
mov
add
or
cmovle
mov
sub
ja
ds
mov
shl
inc
dec
sbb
in
fisubrl
push
iret
imul
xlat
xor
sub
sti
mov
sub
ss
fwait
add
or
dec
movsb
xchg
fnstsw
aas
xchg
pusha
or
add
loop
jg
loopne
inc
aas
sbb
adc
dec
mov
fistps
ret
scas
mov
call
mov
and
cmp
xchg
aaa
inc
mov
in
daa
lods
mov
mov
in
fidivl
ds
mov
jnp
cltd
push
add
in
xor
sbb
mov
repnz
jp
lea
addr16
or
outsl
shlb
mov
shlb
addl
js
ja
jge
test
pop
mov
fisttpl
bswap
jecxz
mov
scas
adc
inc
sbb
in
in
jp
hlt
imul
mov
jg
mov
aaa
cmp
pop
sub
mov
mov
call
jb
and
xor
inc
insb
loope
add
pop
arpl
push
push
loope
mov
or
je
cmpl
dec
adc
movsl
rcrb
stos
lahf
xchg
or
stos
inc
xor
and
pop
andb
adc
movsb
and
cmp
cmp
mov
lahf
jb
push
sub
aas
dec
push
decb
or
mov
pusha
cli
adc
xchg
adc
mov
adc
stos
fwait
mov
pop
jnp
jne
add
fcomp
cmp
inc
sti
les
jbe
popa
je
stc
xor
pop
mov
iret
bound
push
les
xlat
mov
int
xchg
add
push
inc
jno
out
sbb
push
mov
sub
mov
push
fisubs
dec
stos
test
hlt
iret
add
loop
xchg
push
jne
test
and
out
pop
xor
pop
lret
lock
addr16
and
fwait
or
pop
jg
popf
das
das
lret
fs
xor
xchg
sarb
sbb
imul
mov
push
inc
pusha
sub
and
and
out
imul
lret
stos
mov
fistpll
sub
lcall
ja
xchg
dec
rcl
xchg
jo
sahf
cmp
jecxz
push
enter
int
add
sub
xchg
je
push
inc
mov
and
fstl
sbb
cmp
jmp
pop
add
aaa
outsl
mov
xchg
lods
in
xchg
pop
imul
pop
dec
shl
add
fistpll
mov
enter
ljmp
loop
repnz
mov
adc
fisubs
inc
pop
ljmp
jmp
inc
adc
push
outsb
sub
cmp
adc
leave
mov
aam
into
mov
pop
mov
pop
or
ds
adc
mov
inc
lods
adcl
sbb
nop
or
inc
rcrb
xchg
pop
cmpl
loope
shrb
adc
add
shrl
test
jb
mov
test
call
pushl
jns
lcall
jne
or
out
adc
inc
sbbb
mov
sbb
rclb
xchg
adc
lahf
shr
or
jg
sbb
pop
push
bound
std
testl
out
inc
icebp
subl
test
cmp
ds
aam
into
in
and
cwtd
js
cmpsl
or
cli
push
test
jo
inc
mov
popf
push
push
ja
loop
mov
jecxz
test
shll
adc
mov
fiaddl
xchg
xchg
xchg
add
sbb
bnd
out
xlat
cmpsl
rolb
mov
cmpsl
enter
push
out
push
add
mov
mov
stos
ljmp
std
call
aas
fiadds
add
mov
jb
adc
add
roll
mov
js
imul
inc
idivb
or
fistpl
dec
push
nop
aam
int
add
inc
hlt
jb
test
hlt
leave
rcl
sbbl
das
into
and
xchg
dec
out
mov
shll
inc
out
out
push
fidivs
scas
push
int
popa
pop
int
push
pop
loop
leave
enter
inc
push
jmp
ret
adc
push
test
and
lret
loopne
and
mov
jne
enter
xor
cmp
cmp
adc
push
mov
lock
or
out
xor
mov
data16
in
mov
fidivrs
lea
xchg
cmp
faddl
in
push
into
pop
ds
mov
xchg
and
mov
cmp
pop
nop
jecxz
es
dec
jbe
ret
inc
mov
add
mov
das
jl
pop
mov
jl
push
fmuls
pop
inc
and
pop
dec
mov
and
jb
push
test
jge
inc
in
pop
cmp
xor
jp
sub
cmp
mov
jmp
testl
icebp
imul
ret
notb
mov
lock
mov
insb
loopne
clc
loope
sbb
xchg
clc
fisttpl
xchg
stos
mov
mov
inc
mov
pop
decb
add
xchg
lods
or
mov
mov
dec
and
adc
cmpsb
or
aam
lds
ficoml
ret
popa
xor
fucom
inc
cli
cld
sbbb
es
xor
fwait
fwait
mov
enter
mov
jo
sub
ljmp
test
fucom
les
mov
lods
jno
nop
and
pop
ret
out
xor
inc
dec
inc
and
add
arpl
dec
adc
stos
pop
push
cld
into
sub
call
lods
pop
mov
cmp
pop
jl
sub
push
js
sbb
fwait
pop
push
pop
call
inc
inc
sub
jne
test
aaa
dec
out
cli
push
cmp
addb
js
mov
inc
loop
xchg
adc
adc
cmp
dec
mov
mov
push
mov
cmc
jo
stos
inc
adc
jg
sub
ds
add
mov
push
rcrl
gs
mov
jmp
and
xchg
arpl
test
ljmp
mov
jle
adc
mov
les
in
sub
mov
imul
inc
shrl
arpl
fcompl
jo
rcl
lret
add
mov
mov
xor
insl
adc
mov
inc
cmp
pushf
xor
bound
ffreep
nop
adc
divb
jno
inc
add
dec
push
dec
repz
mov
push
mov
jbe
test
xchg
cmp
push
shrb
movsl
dec
movsb
outsl
inc
dec
or
shr
pop
and
shr
imul
inc
xor
daa
sbb
daa
stos
sbb
xlat
xchg
jbe
nop
aaa
icebp
pop
loop,pt
jecxz
je
cmp
pop
and
inc
fcmovb
push
repnz
or
jo
les
inc
xor
push
push
push
fwait
ljmp
sbb
lds
shlb
enter
test
push
js
jb
mov
enter
mov
cmp
jns
pusha
ficoms
test
arpl
dec
movsb
inc
mov
mov
jle
imul
adc
jecxz
scas
sbb
popa
mov
mov
rol
cli
xchg
aad
dec
mov
add
mov
lods
jecxz
popa
sbb
pushf
mov
out
lea
fwait
add
mov
jno
aam
jg
add
and
out
fsubr
adc
add
iret
sti
lret
lds
cmp
int3
adc
fwait
sub
inc
arpl
xchg
jns
inc
fs
mov
js
add
and
lds
push
aaa
movsl
add
jg
call
mul
aad
pop
pop
inc
push
add
leave
pusha
fcmovbe
out
or
in
and
popa
orb
stc
std
hlt
ds
test
cmpsl
and
pop
mov
imul
arpl
xchg
mov
adc
pop
aad
mov
std
dec
cmp
or
adc
outsb
mov
mov
rclb
jl
add
call
xchg
cmp
pop
imul
xchg
je
lds
loope
repz
add
adc
dec
into
lock
lods
popf
cmpsl
xor
xchg
lret
sbb
adc
mov
or
add
push
adc
cs
mov
jns
divl
pop
mov
xor
xchg
dec
shrl
insb
push
xchg
jmp
movsl
xchg
jmp
repz
movsl
jl
inc
daa
xchg
add
add
std
imul
xchg
push
jbe
xchg
adc
outsl
inc
pushf
push
inc
call
imul
sti
in
push
scas
jo,pt
ficoml
loop
add
in
push
repnz
sbb
jae
cmp
dec
xchg
inc
mov
mov
push
xchg
mov
sub
leave
cmp
push
loop
and
jbe
fists
mov
adc
mov
nop
scas
jnp
or
xchg
xchg
jge
fs
loope
lcall
xor
mov
pop
aas
push
mov
jb
xor
mov
push
push
push
jbe
jne
add
push
mov
mov
bound
xchg
mov
pusha
fsubp
xchg
mov
jge
jnp
cmp
dec
mov
inc
rcll
mov
cmp
leave
jbe
lds
insl
adc
ret
dec
je
mov
ss
push
xchg
mov
divb
and
mov
ret
mov
movsl
jl
xor
out
js
test
lods
inc
jl
lods
pop
rolb
jbe
xchg
int3
xchg
mov
pop
daa
call
mov
outsl
jne
inc
mov
rorl
dec
sarb
inc
lds
popf
xor
movsb
push
out
or
lcall
add
mov
xchg
js
mov
jle
sti
fldcw
pusha
cs
fldl
xor
dec
mov
lds
ret
xchg
ret
mov
or
pop
lea
mov
rclb
out
xor
cmpsb
incb
sahf
insl
jp
sbb
aaa
cs
shll
mov
xor
hlt
mov
sbbb
aaa
bound
out
inc
hlt
imul
add
adc
daa
and
dec
or
mov
popa
bound
loopne
icebp
adc
mov
jo
cmp
ss
mov
jo
fsub
pop
and
enter
and
clc
mov
inc
mov
std
and
rcrl
loop
rol
in
jnp
push
popf
jbe
aaa
jecxz
mov
pop
leave
mov
cltd
repz
jns
imul
cmp
inc
sbb
arpl
xchg
jmp
mov
cltd
repz
jns
imul
cmp
inc
sbb
arpl
xchg
imul
cltd
repz
jns
imul
cmp
inc
sbb
arpl
xchg
jmp
mov
cltd
repz
jns
imul
imul
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fistpl
mov
fidivs
sahf
in
inc
sbb
adc
popa
jge
insl
xchg
popf
xchg
lea
fst
int
std
icebp
in
or
repz
popa
aas
jno
cwtl
popf
mov
fcomp
enter
out
add
inc
sub
adc
sbb
popf
xchg
shr
rcr
cld
leave
sbb
jmp
call
lcall
or
mov
xor
sti
cmp
fidivrs
mov
lea
xchg
lahf
call
push
rcrb
mov
out
bnd
into
sarb
xorb
inc
jno
lods
in
int
jb
adc
ret
les
add
popa
jge
jb
cmp
push
xchg
fcoml
fdiv
call
out
pop
xor
xor
jmp
push
mov
orb
out
fstpt
jl
pop
inc
add
out
or
orl
insb
inc
popf
xchg
lea
int
std
call
or
pop
pop
dec
dec
popa
jge
add
repnz
aam
les
mov
mov
push
push
pop
imul
adc
sbbl
mov
in
add
js
pop
inc
inc
and
and
adc
jno
call
aad
enter
int
std
icebp
in
add
xor
popa
jge
insl
sbbl
ror
loope
icebp
in
add
xor
popa
jge
insl
sbbl
inc
daa
es
pop
out
dec
aas
fnstcw
popf
loope
jge
jne
and
add
outsl
xchg
arpl
mov
icebp
cmp
arpl
test
or
pop
jae
or
adc
scas
cmpsl
stc
mov
aas
sbb
push
adc
fsubl
call
in
jecxz
or
inc
xbegin
sub
aam
ret
idivl
jns
mov
jbe
cs
or
lods
push
sub
enter
in
pop
scas
dec
cli
pop
fcmovnbe
test
mov
add
mov
push
repz
repnz
lcall
insb
or
test
nop
aaa
inc
push
test
dec
mov
and
mov
mov
jno
add
sbb
mov
mov
movsb
sarl
cmp
or
or
in
mov
les
das
sbb
add
cmpsb
aam
int3
mov
xor
gs
jp
shlb
lret
lahf
adc
fcoms
scas
and
push
in
dec
xchg
add
xchg
std
xchg
fcomi
iret
cmp
into
pop
icebp
xchg
sbb
sub
sbb
fnstsw
xchg
aas
jnp
jmp
sbbb
dec
aas
das
and
add
std
push
cmp
outsl
leave
scas
xchg
xchg
cmovg
lea
mov
add
adc
adc
into
jo
cmpsl
pop
inc
xor
test
or
mov
stos
js
gs
adc
add
mov
inc
or
pop
inc
sub
lcall
lcall
add
xorb
xlat
mov
loopne
jge
mov
outsl
adc
lods
mov
fiaddl
jns
pop
sbb
sub
mov
dec
stos
push
imul
pop
xchg
xlat
cld
idivl
jae
aad
fs
dec
fcomi
cltd
inc
inc
inc
inc
int3
repz
negl
lret
mov
mull
lret
ret
pop
and
fwait
push
xor
ja
xor
dec
adc
ja
cli
btc
or
notl
add
fidivrl
or
mov
sbb
mov
dec
into
out
xchg
outsb
mov
cmp
jb
ret
mov
or
mov
fidivrs
lcall
dec
dec
cmp
test
loope
sub
push
mov
sarl
in
adc
imul
jo
push
push
movsl
dec
add
add
mov
push
push
adc
push
xchg
jno
decb
lock
mov
jp
neg
lret
in
mov
aam
sbb
jae
lods
push
clc
cltd
les
hlt
sub
add
mov
std
push
cli
push
lcall
movsb
sbb
mov
and
or
test
and
dec
nop
sbb
inc
bswap
pop
sub
inc
xor
test
inc
or
mov
mov
adc
cmc
stc
out
popa
imul
cs
add
jp
nop
or
lock
push
fwait
inc
shrb
clc
fs
pushf
sahf
movsb
dec
pop
mov
xchg
add
nop
popa
movsl
decb
ss
inc
push
pop
stc
sbb
xor
push
push
int3
cmpsl
pop
out
out
jae
out
fisttps
fcomp
andl
das
leave
push
mov
xlat
fadds
imul
dec
adc
shl
outsl
jno
out
lahf
xchg
add
out
loop
push
jecxz
and
cmp
mov
mov
ss
jecxz
pop
imul
test
pop
cli
loop
or
push
xor
icebp
icebp
add
lret
mov
inc
fld
rclb
push
lods
sub
hlt
iret
outsb
push
leave
addl
hlt
push
xor
repnz
sub
fsubrp
jo
loopne
fwait
and
push
sarb
pop
loopne
repz
mov
fmul
aaa
sar
jecxz
ss
jb
ss
jmp
inc
out
dec
gs
enter
xlat
mov
xchg
and
lods
leave
mov
adc
xchg
mov
xor
test
sub
jmp
jne
adc
push
cmp
bound
jge
imul
and
cs
pop
sbb
lods
nop
push
scas
cmp
lods
mov
and
inc
xchg
enter
das
push
mov
jnp
and
addl
aam
iret
lods
pop
loop
in
push
mov
adc
testl
cmp
loopne
or
mov
sub
imul
push
inc
pop
ss
push
dec
leave
jns
cli
jne
cmp
sti
pushf
xchg
lret
xlat
mov
sub
arpl
in
adc
xchg
jge
outsl
jmp
test
loopne
test
inc
mov
sub
fdivrp
sub
daa
hlt
add
and
test
pop
mov
pop
xchg
lcall
ljmp
cli
loop
push
rcrl
iret
pop
mov
push
xor
sbb
xchg
flds
loop
or
mov
mov
adc
inc
cmp
aad
daa
std
scas
or
pop
aad
dec
inc
mov
ss
and
test
ljmp
cmp
sbb
insb
aam
cli
das
pop
sbb
jb
lcall
daa
pusha
xorb
push
inc
into
shlb
out
xchg
jae
inc
push
fbld
push
or
cmp
inc
pusha
push
movsl
inc
roll
xchg
jnp
in
cmp
jns
inc
mov
sub
popa
in
add
cltd
inc
shrl
shrb
jmp
dec
sub
fwait
sub
and
in
push
xlat
jge
mov
sbb
fisttpll
xchg
lret
push
lods
pushf
xchg
cwtl
cmp
jb
mov
js
nop
push
pop
lea
imul
cmp
jb
sub
mov
in
mov
lock
mov
bound
mov
inc
fdivr
icebp
push
and
scas
dec
pop
into
push
shrb
aam
pop
ficomps
int
xchg
notb
lds
stos
fs
mov
jmp
push
and
push
mull
push
sub
frstor
push
daa
sbb
nop
stos
sub
inc
or
pop
push
or
sbb
add
mov
mov
sbb
jno
pop
jecxz
int
mov
push
rcl
jl
mov
mov
mov
add
push
arpl
add
jbe
loop
sbb
arpl
xor
repz
aas
push
cmp
sti
adc
lret
mov
mov
xchg
dec
xchg
call
stos
xchg
insl
or
je
test
ljmp
cmp
xchg
lret
or
mov
add
push
inc
fcoms
inc
mov
cmpsb
rcr
sub
incb
iret
lcall
int3
or
icebp
es
jl
in
loop
aad
jnp
gs
adc
push
sub
insb
mov
lret
inc
mov
mov
lcall
cmp
pop
popf
sbb
cs
push
inc
mov
pop
xchg
shrb
imul
adc
xor
aas
fwait
pusha
int3
xchg
mov
int3
xlat
add
push
or
xchg
xor
xchg
jae
les
movsb
adc
test
sub
jg
cmp
sub
push
movsl
out
enter
or
lret
fldl
inc
jo
out
push
cmpsl
stos
or
jb
cmpb
adc
push
adc
je
addl
add
push
fdivrs
and
pop
mov
imul
cld
fmulp
ret
jno
aaa
pop
xchg
in
sub
adc
pop
stos
add
push
fsubs
mov
cmp
sbb
into
push
js
mov
shrb
ret
ret
scas
mov
push
pop
or
adc
movsb
xchg
xlat
lock
sbb
out
lock
jecxz
xchg
pop
mov
repnz
inc
xchg
fildl
xchg
popa
mov
inc
xchg
arpl
out
fwait
push
and
cmp
mov
push
cmp
cwtl
push
icebp
into
xor
scas
int3
push
fdivrl
mov
out
jl
test
sti
pop
mov
mov
loope
call
outsl
ret
shr
lahf
mov
rcl
dec
jl
and
ret
and
or
and
adc
cmp
push
mov
fimuls
push
aad
mov
xor
js
je
mov
jbe
push
sbbb
mov
stc
or
mov
pop
adc
cmp
jmp
pop
jne
cld
pop
call
cmpsb
pusha
push
test
mov
xor
aaa
cld
dec
push
out
test
push
mov
scas
daa
mov
rcrb
add
in
cmp
jge
and
xchg
push
pop
and
lods
and
mov
xchg
sbb
add
lcall
dec
or
jg
arpl
or
and
inc
in
jo
loop
jge
daa
mov
push
mov
fnstenv
shll
mulb
pushf
lods
daa
addr16
dec
out
jns
mov
or
push
in
aam
in
dec
cmp
dec
sbb
pop
lcall
or
xor
mov
out
cmp
sti
fsubl
dec
adc
and
imul
pop
pop
lcall
ds
or
shll
mov
inc
xlat
sub
pop
je
gs
std
pusha
sbb
call
mov
pushf
jbe
pop
loopne
add
xor
push
add
cs
inc
lret
mov
popa
inc
into
pushf
dec
xlat
push
jmp
adc
cmp
cltd
add
rol
mov
testb
fsubp
xorl
inc
and
or
fisubrs
cmp
and
or
insl
push
in
and
pusha
out
sub
push
les
mov
divb
jo
adc
je
cld
jmp
adc
mov
push
adc
add
int
jb
or
mov
jp
pop
stos
out
lds
jns
and
xchg
mov
mov
aad
fisttps
push
shlb
sbb
mov
mov
mov
sahf
push
out
and
lock
cmp
pushf
mov
inc
out
jle
lahf
unpcklps
sbb
xchg
xchg
sbb
xor
dec
imulb
lcall
andb
mov
xchg
push
mov
add
mov
jns
pop
loopne
scas
sub
out
mov
rcrl
js
outsb
call
push
sarl
fisubs
jnp
add
lds
dec
call
loopw
ja
lds
mov
sub
repz
movsb
subl
push
faddl
cs
mov
or
sbb
mov
jle
js
mov
les
decb
adc
dec
xchg
mov
and
fwait
mov
jno
mov
mov
clc
jl
loop
sti
loope
xorb
push
andl
and
mov
insl
push
cmp
jecxz
add
and
xchg
sub
xchg
push
bound
jbe
lds
pusha
mov
add
dec
decl
pop
push
pusha
mov
push
cmc
and
fimuls
fsubrs
and
fs
pop
xchg
stos
addr16
or
inc
xchg
inc
fwait
inc
sbb
data16
sub
or
das
xchg
cmp
cmpsl
loope
stos
dec
jns
push
push
paddw
in
xchg
mov
scas
push
dec
in
aam
rorb
add
sub
jg
pop
imul
push
mov
lcall
add
inc
mov
add
sub
push
gs
stos
dec
push
je
mov
les
mov
or
push
push
sarb
pop
call
pop
nop
dec
loope
imul
nop
popf
mov
sub
cli
mov
fcmove
outsl
jecxz
jge
pop
add
pop
sub
into
test
mov
cmp
ss
push
pop
scas
je
add
mov
popa
sbb
scas
sbb
pop
cmp
pop
orl
sbb
pop
xor
test
sbb
sbb
xor
insb
fisubl
call
call
mov
and
clc
pop
push
lahf
hlt
cmp
test
sbb
cld
test
sub
lock
mov
insl
adc
pop
in
adc
inc
jl
in
in
or
pop
in
dec
bswap
aaa
fxch
sbb
mov
pop
sub
ss
jae
pushf
xor
sub
xchg
cwtl
daa
ret
adc
lods
push
call
lcall
xchg
mov
push
scas
mov
jns
pushl
hlt
fisttpl
ss
loope
adc
jae
addr16
or
arpl
push
imull
inc
mov
sub
dec
sbb
je
pop
mov
and
inc
pushf
out
out
cld
xchg
add
and
cli
fwait
sahf
cwtl
arpl
ljmp
jl
fs
push
sub
sub
mov
cmp
cmpsl
lcall
pop
es
lahf
or
or
testb
mov
iret
pop
xor
fmul
sbb
bound
mov
dec
xor
pusha
pop
aad
lods
mov
adc
dec
not
into
push
or
scas
fldenv
stos
jge
xor
fstps
mov
in
jns
mov
inc
and
lds
inc
push
xchg
inc
fsts
fwait
push
stc
es
xchg
outsl
fsubs
ret
movsb
dec
sbb
fucomi
loopne
push
or
jmp
adc
iret
orl
mov
jbe
bound
mov
jne
ljmp
mov
xlat
scas
push
out
mov
cmp
cld
dec
cmpsb
lea
lea
xchg
xor
outsb
lret
or
outsl
push
add
lret
mov
mov
jmp
cmpsl
mov
jl
adc
mov
lret
outsl
std
add
pop
inc
ret
xor
fwait
xlat
mov
and
inc
notb
popa
int
fs
sahf
ljmp
pusha
adc
pushf
sbb
lcall
jo
sbb
cs
push
addb
insb
xchg
aas
bound
int3
adc
mov
arpl
jmp
jb
pop
fcoms
loope
mov
negl
lahf
inc
jae
xchg
fidivrl
jb
testb
sub
cld
stos
add
dec
push
movl
out
dec
adc
push
adc
lret
je
cs
xchg
mulb
test
int3
dec
xor
pop
mov
xlat
jmp
in
jo
cmc
outsl
pop
imul
insl
pop
repz
in
jo
ret
xchg
sbb
pop
ss
xchg
pop
in
sub
mov
enter
mov
mov
cmp
dec
flds
das
jge
lcall
xor
jl
jns
popa
adc
ljmp
daa
ja
mov
pop
or
hlt
fdivrs
arpl
jge
mov
daa
inc
sbb
push
mov
sub
mov
in
int3
push
in
aad
test
rcll
leave
lcall
jg
in
inc
push
inc
adc
hlt
cmp
lds
inc
std
or
jo
cmpsl
sbb
outsl
pop
mov
pop
or
push
push
push
cbtw
push
dec
rcrl
aaa
std
pushl
mov
mov
push
repz
movsl
inc
mov
sub
lds
add
mov
add
in
popa
mov
cmp
mov
pop
xchg
mov
mov
lods
fistpl
push
mov
sti
push
inc
adc
repnz
fldenv
stc
imul
addr16
push
mov
or
pop
iret
push
xor
addr16
lods
xchg
ret
arpl
xchg
divb
mov
roll
test
mov
inc
cmp
jp
ja
dec
lret
movsl
push
in
out
inc
fsubrp
push
fldt
xor
aad
movd
dec
fcmovnb
sbb
lea
and
in
inc
aad
fwait
adcl
std
out
mov
fsubs
mov
push
dec
inc
int
xor
enter
add
aad
inc
cltd
sbb
imul
jle
jbe
sbb
xchg
mov
sbb
xlat
pop
mov
mov
int3
rcll
arpl
mov
mov
lahf
and
fmuls
sbb
daa
sbb
and
fsubs
in
fisttpl
pop
lods
shrl
jl
or
fstpt
mov
arpl
sub
outsl
roll
pop
mov
xchg
fbstp
loop
jae
cli
jecxz
pop
xchg
and
xchg
gs
inc
pop
shll
sbb
cmpl
dec
fstpt
aas
lret
inc
sbb
out
or
pop
fidivrl
inc
sub
mov
and
cmpsl
pop
pop
sahf
les
call
lds
cld
popf
mov
mov
xchg
push
sub
jmp
xor
cmpsl
stos
and
in
jl
pop
cmc
sub
mov
jmp
mov
adc
js
stos
mov
cli
dec
loopne
jecxz
sub
sbb
ljmp
mov
cmp
sahf
cs
cltd
cmpsb
lcall
pop
cs
test
mov
inc
push
sbb
jo
gs
adc
or
lods
jl
into
jp
test
enter
push
rclb
ljmp
jnp
mov
xchg
xor
cld
aas
int
in
ja
sbb
sahf
or
enter
cs
decl
inc
fcomp
jg
js
pop
mov
pop
and
push
inc
mov
and
sbb
lret
das
out
iret
lahf
cmp
imul
add
mov
inc
push
push
cmpsb
jns
xor
mov
sbb
aad
inc
lock
mov
lret
jg
stos
or
std
repnz
pop
repnz
sti
test
xor
add
je
std
mov
cmp
fisubs
push
mov
test
jae
mov
inc
xor
and
and
sbbl
xchg
push
jbe
jb
pop
and
ret
stos
xchg
xor
and
stos
dec
mov
sti
addr16
pop
stos
jg
bnd
ror
sbb
outsb
or
push
or
push
nop
pop
or
lods
and
push
movd
aad
pop
push
xchg
add
ret
scas
fs
in
dec
sbb
dec
ss
mov
mov
and
xor
adc
jge
dec
into
jnp
jp
push
sub
mov
lret
mov
enter
jno
scas
adc
dec
imul
inc
enter
mov
dec
xchg
cmpb
or
and
xor
popf
xchg
sub
cmp
test
pop
leave
pop
or
jae
adc
jb
pop
cmpsb
jns
dec
out
das
jb
jmp
sub
test
loop
and
mov
inc
cmp
xor
sub
xchg
hlt
out
mov
and
dec
es
inc
mov
test
dec
xchg
test
jle
je
std
xor
pushf
lea
inc
inc
fisttpl
fcoms
add
push
flds
out
xor
ljmp
mov
adc
lods
or
jno
pop
dec
and
add
sbb
cmpsb
adcb
sbb
in
jmp
aad
mov
push
insl
out
lcall
mov
cmp
xor
add
dec
mov
jge
push
and
sti
mov
or
test
repz
xchg
mov
mov
mov
xor
test
das
push
daa
cltd
xchg
add
lds
mov
cmpsl
xchg
push
dec
stc
das
sub
lret
xchg
cmp
cmp
divl
in
cmp
sub
ss
icebp
sbb
xor
xchg
xchg
inc
add
xchg
or
pop
sbb
ljmp
pop
sub
jb
jecxz
repnz
adc
shr
stos
fwait
test
push
loopne
aas
call
out
sahf
into
adc
aaa
roll
shlb
inc
icebp
shl
jae
inc
sbb
out
sbb
and
add
call
cli
movq
sub
mov
inc
sbb
push
and
aaa
subb
xlat
dec
lock
dec
ss
icebp
mov
mov
ljmp
xchg
cmc
pop
test
adc
add
leave
cwtl
arpl
popa
movsb
mov
dec
adc
sbbl
dec
add
in
cmp
dec
dec
cld
sahf
in
cmp
mov
xor
pop
data16
push
movsl
sub
or
bound
lock
jns
xrstors
dec
aas
inc
jecxz
or
cld
jmp
aad
mov
les
sbb
in
xchg
subb
mov
outsb
scas
mov
int
aam
push
aam
and
loope
mov
repz
imul
cmc
or
sarb
int
std
icebp
in
add
xor
popa
jge
insl
sbbl
ror
loope
icebp
in
add
xor
popa
jge
insl
sbbl
rorl
std
icebp
in
add
xor
popa
jge
insl
mov
movsl
lea
fst
int
std
jno
sbb
xor
aad
mov
orb
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
