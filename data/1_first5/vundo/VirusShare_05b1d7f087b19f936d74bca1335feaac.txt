pop
add
mov
mov
or
add
or
movsb
jo
add
add
rolb
fimull
rolb
loope
lock
or
add
or
xchg
add
add
or
testl
nop
add
or
add
rolb
addl
add
inc
add
rolb
push
push
add
jmp
add
push
xor
or
rolb
dec
add
add
add
adc
decb
nop
add
seto
std
add
add
pusha
add
jo
xchg
or
add
adc
std
or
pop
or
add
jo
cltd
add
add
or
add
mov
lock
rolb
add
add
add
mov
add
add
add
or
add
or
jo
daa
or
add
or
add
loopne
stos
add
add
mov
xor
or
add
add
add
or
add
mov
push
mov
add
pop
rolb
push
loopne
stos
add
call
or
xchg
xor
fiaddl
lock
or
add
push
push
add
add
add
or
add
loopne
add
std
jno
add
roll
add
loope
add
add
add
adc
add
or
add
or
loopne
add
add
add
add
rolb
lahf
add
add
push
pusha
add
add
cmpsb
or
add
add
add
loopne
aaa
add
out
or
add
pop
xor
pusha
push
pusha
add
wrmsr
add
add
add
pshufw
add
add
push
inc
add
jo
jge
loopne
mov
pusha
add
mov
add
xor
ja
xor
push
or
in
push
popl
xorl
xor
call
test
jne
ret
push
push
mov
pusha
call
mov
push
xorl
addl
push
call
cmpl
jne
call
ret
jmp
xor
mov
shl
mov
shl
mov
cmp
jne
call
popa
pusha
call
mov
push
xorl
addl
push
call
push
xorl
addl
push
xorl
addl
push
push
call
add
or
je
ret
popa
call
push
xorl
addl
push
call
push
push
push
shl
inc
not
mov
xor
pop
mov
shl
push
xor
push
call
push
mov
push
jmp
pop
mov
push
push
push
mov
mov
rep
pop
pop
push
ror
mov
inc
mov
xor
xchg
push
not
shr
lea
mov
xor
xchg
xor
jmp
sub
mov
sub
sub
mov
sub
or
jne
add
jmp
mov
shr
shl
mov
xor
jmp
sub
mov
xor
cmp
jne
mov
add
cmpw
jne
ret
push
xor
pushl
pop
lea
or
mov
mov
lods
mov
pop
ret
push
mov
add
push
push
push
push
push
mov
mov
add
pushl
mov
add
add
mov
add
xor
lea
mov
add
mov
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
xorl
addl
pushl
call
call
pop
pop
pop
pop
pop
leave
ret
call
inc
pop
adc
iret
popl
sub
shll
cmp
mov
cmp
jbe
fs
outsb
call
ds
jno
push
pop
rol
imul
ja
repz
or
xchg
inc
dec
mov
out
jl
mov
inc
cmp
bound
add
lea
dec
lds
imul
inc
dec
jb
es
sub
pop
jecxz
aad
pop
push
push
dec
out
jmp
dec
out
jns
adc
fmull
aaa
mov
jnp
in
and
push
pop
dec
loop
xsha1
cmpsb
push
dec
movsb
sub
jne
or
jnp
cmp
mov
dec
clc
movsl
sub
xor
dec
nop
adc
push
in
fmul
mov
xchg
das
jle
mov
sub
fadd
lahf
cmp
sub
jmp
cmp
mov
sub
dec
mov
pushf
push
rorb
hlt
push
ficompl
int
repnz
in
sub
jge
pop
jecxz
adc
pop
cmp
leave
dec
push
gs
shl
sub
lock
fs
mov
les
adc
push
iret
mov
sub
lcall
cmpsb
push
fcoms
add
sub
sub
int
dec
mov
jo
or
into
jne
push
mov
jecxz
stos
js
rorl
add
hlt
popf
xor
inc
clc
pop
mov
sub
xchg
data16
fisubrl
hlt
sbb
mov
rorl
push
stos
fwait
jae
out
andb
aam
ljmp
mov
insb
push
data16
ss
push
sbb
lock
xor
push
jo
inc
cmp
gs
jp
in
pop
push
fidivrs
inc
xor
inc
enter
inc
clc
lods
xor
mov
add
sub
jo
pop
lahf
movsb
push
push
adc
mov
pop
jecxz
mov
sub
pop
jl
pop
jo
fwait
loopne
cmp
mov
jo,pn
dec
sub
rcr
sub
rorb
push
pop
dec
sbb
push
mov
int
ds
dec
sbb
cmc
dec
lods
call
mov
mov
lret
gs
mov
fs
mov
mov
sub
into
pop
cmp
mov
addr16
sti
fwait
pop
jecxz
cmc
shrl
out
imul
or
jb
cmp
pop
js
iret
cmp
repz
pop
dec
mov
push
mov
dec
clc
pop
jecxz
ljmp
push
or
sub
dec
scas
divl
sub
aas
loopne
inc
les
in
js
mov
mov
sub
sub
sbb
cmp
pop
jb
inc
insl
stc
into
dec
add
push
mov
fwait
pop
pop
push
imul
sahf
enter
lods
pop
dec
push
aad
mov
push
push
fwait
je
jg
call
std
pop
push
pop
lock
daa
cs
mov
sti
jns
push
fists
je
mov
add
js
icebp
lods
xlat
das
inc
clc
pop
ja
sbb
inc
and
xor
fidivl
mov
add
mov
push
fisttpl
orb
dec
sub
pop
fildl
inc
push
hlt
icebp
or
adc
mov
aad
popa
loopne
fistpll
lahf
sbb
cli
mov
fsubs
and
call
mov
ljmp
xchg
push
xor
ffreep
test
pop
adc
pop
cmp
add
leave
inc
push
mov
sub
cwtl
js
movsl
es
push
pop
sub
in
sub
xor
fwait
sti
and
xor
cmp
jns
lret
inc
sbb
adc
clc
pop
jecxz
jecxz
bound
or
test
jnp
call
inc
fistpll
sub
cmpsb
out
mov
jecxz
mov
add
xlat
mov
sbb
inc
leave
pop
jo
sbb
ds
push
adc
sub
imul
lahf
cmc
sub
mov
scas
push
add
jl
sub
mov
fbstp
sar
jecxz
out
sub
lods
fwait
sub
rclb
push
aam
mov
je
mov
in
sub
test
pop
jecxz
rorb
inc
clc
mov
push
pop
xchg
xlat
lcall
stos
jbe
pop
pop
and
sbb
arpl
sbb
push
jg
xor
add
add
jecxz
sbb
nop
lods
mov
jmp
int3
insl
push
out
sub
enter
icebp
test
jg
jbe
add
dec
in
push
sbb
and
out
adc
jmp
repz
lock
clc
pop
int3
or
push
dec
in
scas
leave
mov
in
repz
inc
cmp
loop
pusha
jp
fs
scas
xor
hlt
mov
movsl
pop
jo
sub
jbe
adc
test
xchg
xchg
push
ljmp
ds
jg
fidivl
mov
pop
xchg
ret
mov
loopne
pop
testl
inc
sbb
out
pop
inc
ljmp
mov
out
jns
and
je
mov
mov
negl
lret
xchg
jns
in
push
out
mov
pop
mov
cli
jae
rcrb
cs
jg
ljmp
sub
add
or
sbb
data16
lock
sti
xor
sub
jnp
das
cld
or
bound
or
fs
out
jl
fstps
push
es
sbb
jae
rol
jecxz
push
std
push
xchg
pop
cmc
stos
pop
mov
daa
pushf
add
xor
jp
js
pop
inc
push
addb
and
loopne
jne
push
add
adc
add
jns
or
out
adcl
movl
icebp
icebp
or
and
push
or
sub
push
call
lods
add
pop
jecxz
push
jo
inc
adc
out
sub
dec
test
sub
mov
insl
sub
sub
push
adc
rcr
out
or
mov
cmp
cmp
out
imulb
inc
clc
cmp
pop
push
push
dec
out
shlb
decb
iret
push
dec
sub
push
scas
cmp
rcr
sub
in
ds
mov
push
or
push
sahf
push
lods
xor
jmp
pop
lods
sub
aaa
push
or
dec
cwtl
push
scas
cmp
jmp
sub
rolb
push
xor
pop
test
je
shl
loop
push
ja
mov
push
loope
or
fstpt
push
sub
icebp
jle
sbb
cmc
fsubr
test
outsb
xor
pop
push
push
movsl
dec
jge
jns
in
push
out
mov
and
fdivrs
fsubs
push
cmpsb
mov
int3
xor
fdiv
fimull
mov
push
mov
jle
mov
adc
lret
jo
insb
cmp
pop
pop
jno
xchg
shll
mov
scas
mov
pop
jo
sbb
out
sub
cmc
fs
mov
sub
mov
repnz
jecxz
ret
fwait
mov
testl
inc
push
lods
xor
movsb
mov
movsl
pop
test
cmp
xchg
mov
cwtl
push
mov
rol
mov
lock
sub
int
pop
add
push
lahf
push
lods
xor
add
sbb
push
or
scas
add
dec
call
inc
fidivl
cmp
inc
mov
jp
in
aaa
mov
mov
inc
xor
inc
enter
inc
clc
pop
jecxz
or
nop
mov
das
cmp
bound
add
cli
fisubrl
fistl
pop
rcrl
jbe
pop
jecxz
push
cmpsl
dec
dec
cmp
mov
cpuid
lock
fs
mov
cmp
sub
jecxz
push
or
sub
dec
clc
shl
pop
scas
ficompl
pop
pushf
in
in
inc
jecxz
push
shll
or
popf
sub
fs
hlt
fsts
push
out
sub
jae
push
push
rorb
pop
hlt
pop
mov
sbb
and
out
pop
inc
mov
pop
jl
push
push
std
sbb
jmp
subl
or
push
movsl
es
adc
inc
enter
cmc
and
xchg
jbe
pop
push
jne
or
lret
push
ljmp
push
push
jns
test
mov
ficomps
mov
jge
jecxz
push
inc
lods
aas
sbb
sub
andl
shl
and
mov
sub
ret
xchg
inc
dec
mov
sub
repz
push
shll
mov
mov
movsb
sub
shrl
stos
daa
lods
inc
sbb
cmp
or
mov
xor
pop
fcoms
and
xchg
sub
mov
jo
icebp
dec
mov
jg
in
enter
mov
adc
idivl
ds
sub
movsb
dec
cmovo
in
fnsave
cld
fisubs
add
cmp
nop
aaa
xor
fisubrl
mov
in
fildll
ljmp
jnp
or
push
ret
outsb
mov
aas
lods
cmp
out
clc
sub
in
loopne
jl
inc
loop
imul
or
dec
lods
jnp
jmp
or
sub
push
in
fs
lret
test
loop
imul
scas
fs
jcxz
push
dec
dec
je
xor
aas
cltd
jecxz
mov
notl
dec
mov
fistpll
xor
ds
inc
clc
mov
arpl
xor
dec
loopne
jecxz
push
leave
pop
xchg
mov
dec
pop
inc
loopne,pt
outsl
icebp
negb
shrb
or
out
adc
pop
sbb
mov
dec
or
outsb
adc
xchg
cmp
std
icebp
or
jns
movsl
es
pop
pop
ret
nop
and
cmpsl
ss
jp
rorl
sub
aad
or
dec
jl
dec
loopne
imul
mov
jno
shlb
and
and
jns
cmp
push
iret
pop
loop
mov
jmp
pop
sbb
loope
mov
jae
inc
dec
lods
inc
adc
sub
sbb
mov
dec
sbb
mov
in
lahf
jecxz
js
or
int
push
sub
lcall
mov
rcrb
test
mov
add
test
pop
dec
fcoms
inc
ret
xchg
and
dec
sbb
mov
xlat
sbb
mov
das
or
pushf
mov
lahf
cmp
decb
out
push
sbb
scas
out
rorl
pop
push
push
dec
jmp
push
fistl
lret
dec
addr16
pminub
and
in
dec
xchg
mov
xchg
pop
mov
push
out
sub
fs
xchg
mov
jbe
icebp
scas
add
dec
in
push
rolb
cmpsb
push
inc
add
jp
mov
xlat
xor
jno
or
test
cmc
iret
mov
mov
sbb
dec
adc
sub
rclb
inc
clc
pop
jecxz
int3
ficoml
ret
mov
or
pop
test
add
into
mov
cwtl
xchg
insl
movsl
es
mov
jb
sub
in
mov
jmp
imul
sbb
je
lcall
and
mov
mov
sub
lcall
and
sub
out
sub
js
movsl
sub
imul
sub
push
sbb
nop
push
lods
fildl
lret
jns
out
sub
mov
inc
lods
aas
xlat
aam
cmp
hlt
sub
imul
sub
je
in
leave
repnz
dec
test
fdivrl
fdivrl
pop
add
iret
xchg
push
popw
and
or
adc
shl
jp
pushf
sbb
ja
add
lret
lret
jnp
pop
imul
pop
arpl
mov
lds
cmp
jae
out
and
mov
mov
xlat
rcr
sub
leave
lods
movsb
std
std
pop
or
push
sahf
push
inc
push
insb
push
out
xchg
insl
sahf
jecxz
push
inc
in
imul
or
aad
and
hlt
roll
cmp
mov
out
imull
inc
clc
iret
pop
or
mov
sub
mov
into
jo
ret
popf
mov
push
xor
fs
lds
or
arpl
push
jmp
icebp
adc
jnp
call
or
lret
fs
sar
jecxz
pop
lods
std
and
inc
push
gs
mov
lock
fs
mov
cmp
adc
addr16
in
push
jge
leave
jecxz
mov
inc
sub
inc
out
dec
cmp
call
jge
hlt
loop
loopne
xlat
xor
clc
pop
bound
jecxz
cmp
or
sbb
in
cmc
push
inc
scas
js
push
and
mov
movsl
ss
push
adc
sub
lock
roll
sub
mov
mov
push
fisubrl
mov
clc
pop
cmp
pushl
mov
inc
jmp
push
out
bound
cli
imul
data16
jb
inc
jecxz
pop
stc
imulb
aas
loopne
cmp
inc
scas
and
xor
add
adc
pop
dec
ja
pop
pop
xlat
repnz
xor
push
pop
push
and
jl
fnstcw
addr16
fldt
adc
push
js
mov
ret
xchg
lock
ljmp
sub
dec
loopne
imul
stc
cltd
iret
lds
and
sub
mov
sbb
ljmp
call
cmpsb
cs
lods
loope
pusha
pop
sub
sub
out
add
xorl
test
addr16
ljmp
test
cmp
inc
pop
out
cmp
int3
push
sti
arpl
xor
inc
in
jns
pop
mov
sub
pop
and
jle
shlb
jp
xor
pushf
orb
sbb
inc
add
sub
mov
inc
iret
mov
sbb
dec
into
imul
rcll
mulb
inc
inc
push
std
stos
jnp
sbb
scas
cmpsb
and
jecxz
clc
je
popa
mov
mov
leave
push
push
gs
in
dec
mov
push
mov
sub
call
push
popa
stos
inc
out
push
out
push
sub
mov
icebp
inc
jecxz
mov
sahf
push
mov
scas
sub
inc
jmp
push
out
inc
push
popf
push
test
pop
inc
in
xor
int
push
inc
aas
cmp
push
dec
mov
stos
adc
clc
pop
jecxz
leave
adc
push
or
cmp
and
push
push
insb
out
lret
add
xchg
mov
and
mov
xlat
add
mov
shll
jnp
mov
adc
popa
fs
lret
and
xchg
jo
cs
mov
fdivl
mov
xchg
adc
jecxz
push
out
xchg
inc
dec
scas
fs
data16
push
ret
test
test
cli
sub
jnp
xchg
loop
popa
inc
jl
dec
mov
movsb
shrb
hlt
push
flds
mov
in
sub
orl
out
inc
lods
notrack
mov
repz
dec
pop
push
and
dec
pop
sbbb
push
sub
push
sub
dec
rcl
add
nop
mov
es
gs
shll
out
div
aaa
fs
mov
scas
incb
cmp
out
imull
inc
clc
out
rclb
ds
into
outsb
and
mov
outsl
icebp
div
daa
cwtl
mov
sub
push
out
gs
xor
cwtl
sub
icebp
sbb
out
hlt
call
sar
loop
xor
sbb
or
dec
ss
push
inc
pop
adc
pop
dec
in
push
loope
mov
pushf
scas
cld
test
cld
imul
test
lods
push
sub
jo
jmp
cmpsb
flds
push
sbb
mov
pop
adc
push
lock
movlps
or
leave
jl
mov
mov
fstpl
shrl
mov
push
repz
add
sbb
nop
je
sahf
test
insl
imul
mov
jne
out
imull
inc
clc
aaa
lods
xchg
cmp
into
outsb
gs
sbb
loopne
outsl
icebp
testl
call
out
push
lock
xor
pop
sbb
in
xrelease
pop
or
pop
mov
out
popa
mov
dec
or
fwait
jle
mov
popa
xor
fcoml
push
loop
arpl
add
lcall
shl
out
jp
jb
add
sti
es
mov
jp
in
sbb
mov
sbb
inc
adc
les
in
sub
inc
in
in
lods
faddl
mov
jp
and
loopne
sub
in
int3
repz
ficompl
jbe
push
add
fidivrs
dec
or
sub
add
pusha
dec
std
add
leave
xor
stos
dec
pop
jbe
sub
sbb
dec
push
addb
pop
out
mov
stc
cmp
out
iret
cmp
fs
sub
rorb
mov
xchg
add
mov
pushf
jle
jnp
lods
push
mov
shl
in
lods
popf
inc
push
or
mov
mov
iret
pushf
pop
sbbl
cmp
int3
nop
inc
in
int3
repz
sub
dec
xlat
xor
pop
sub
or
cmp
or
pop
popa
cmp
push
or
jecxz
push
xchg
mov
inc
test
pop
outsb
push
pop
addb
mov
lret
fiaddl
jo
mov
jp
sahf
adc
outsb
jb
push
adc
enter
jae
loope
pop
dec
scas
push
std
pop
sbb
pop
scas
jns
leave
and
gs
shl
dec
loope
addr16
mov
pop
add
iret
xchg
jnp
mov
sub
sub
push
jns
test
jnp
ss
lret
mov
push
outsl
jg
dec
ficoms
pusha
push
out
xlat
pop
mov
testl
dec
stc
jg
inc
push
loopne
insl
xchg
insb
and
jnp
in
push
fimull
stc
mov
mov
mov
pop
out
movups
xchg
push
sub
imul
push
cmp
jo
push
mov
mov
rcl
sar
jge
mov
jno
mov
xor
push
out
sub
push
out
or
dec
sbb
jl
push
adc
push
aas
add
pop
jecxz
push
fs
and
shll
cmp
mov
mov
push
pop
jb
lretw
xor
pushf
in
scas
jno
and
push
insb
inc
aaa
scas
cli
jo
lret
out
xlat
into
mov
fmuls
out
xchg
dec
subl
jnp
push
pop
loope
insb
push
out
add
pop
jecxz
push
fs
sub
jecxz
nop
and
cmpsb
add
inc
negl
or
mov
jge
sbb
lret
jmp
rcr
movsl
push
insb
inc
popf
xor
out
jecxz
sti
ret
outsl
ret
stc
sbb
mov
push
out
adcl
xlat
jae
pop
pop
arpl
xchg
stc
xchg
pop
repnz
imul
fs
sub
mov
add
push
mov
in
clc
int
push
and
sbb
push
popa
mov
fnstcw
push
jno
push
dec
leave
fiaddl
adc
in
data16
sub
cmp
sub
mov
dec
dec
dec
pushf
and
pop
and
mov
xlat
sti
or
pushf
out
jbe
cli
add
sahf
push
jno
testb
push
xor
loope
arpl
in
into
fxtract
loope
adc
cld
stos
pmulhw
push
lcall
arpl
push
inc
jmp
push
out
imul
sbb
dec
inc
in
call
mov
in
sub
push
push
out
jl
fstps
xor
dec
jbe
addr16
push
mov
shl
loop
aas
fsub
or
fidivs
ficoms
fistpll
js
movsl
pop
sub
mov
jno
push
dec
fbld
push
call
lods
pusha
or
dec
pop
repnz
ljmp
enter
pop
js
lods
mov
mov
push
out
add
push
pop
repnz
jg
jnp
andl
stos
mov
pop
dec
cmp
out
lcall
jl
adcb
gs
mov
js
inc
cld
cmpl
xchg
dec
push
sub
mov
ljmp
pop
dec
subb
mov
push
jnp
in
mov
pop
jbe
mov
aad
add
add
daa
mov
jmp
jno
or
pop
pusha
aad
rep
dec
sbb
pushl
imul
clc
shll
ss
xlat
enter
mov
pusha
jb
push
dec
pop
xchg
xlat
rcrl
shlb
testl
testl
sub
inc
mov
fisubrs
pop
pop
pop
orl
push
mov
jecxz
push
pop
adc
shrl
in
mov
dec
cwtl
movsl
pop
insb
inc
jo
add
push
popa
adc
js
xchg
fsubl
pop
out
push
cmp
xor
mov
or
sub
xor
mov
add
jp
mov
or
jno
cli
ds
clc
scas
xor
cmc
jl
cmp
bound
jo
xchg
cmp
test
push
pop
sub
dec
scas
popf
sarl
push
push
mov
in
sub
sub
jecxz
pop
inc
jmp
adc
lret
faddl
mov
lcall
sub
lret
and
cmp
mov
adc
rcr
sub
xchg
lods
das
jmp
sub
push
pop
pop
pop
pop
sbb
mov
dec
or
outsb
js
test
sbb
insb
inc
dec
add
pop
mov
push
cwtl
mov
mov
popf
std
jno
mov
mov
jne
mov
jae
sbb
and
sbb
jmp
out
mov
jg
out
adcl
out
jg
dec
data16
add
stc
xchg
pop
repnz
hlt
push
xlat
jge
mov
outsl
cmp
bound
add
push
cmpsl
sbb
imul
dec
jge
fsubrl
inc
lods
cmp
out
clc
sub
int3
aas
loop
out
scas
jecxz
inc
push
or
shlb
inc
sarb
dec
fs
mov
xlat
scas
lahf
cmp
xor
loopne
sub
mov
cmc
xchg
jns
in
push
out
mov
aam
sbb
push
mov
fs
cli
repz
les
adc
lcall
lods
movsl
push
insb
dec
fwait
adc
pop
popf
sub
cmc
das
scas
pop
mov
gs
xchg
fildl
push
sbb
mov
test
lea
and
mov
stos
inc
movsl
push
insb
dec
adc
jno
lret
mov
ljmp
fs
mov
add
xor
and
mov
dec
addps
mov
mov
imul
into
xchg
mov
push
inc
popa
mov
jg
mov
add
cmp
mov
out
daa
cltd
push
call
cs
inc
pusha
movsb
mov
jecxz
fucom
fnstsw
int
rcr
stos
imul
jbe
pop
pop
ret
adc
adc
leave
js
and
faddp
minps
aad
lock
adc
jecxz
repz
mov
fidivrl
jg
mov
in
cmp
bound
add
pop
gs
sub
pop
les
jl
mov
cmp
bound
add
fs
cmp
aas
cli
popa
pop
rcrl
dec
clc
mov
mov
jmp
cmp
and
repz
cwtl
push
call
adcl
mov
mov
arpl
xchg
mov
and
int3
bound
add
sub
xchg
mov
mov
arpl
lret
insl
cmp
into
rcr
sub
push
lods
sub
or
push
popf
push
call
mov
add
cmp
xchg
add
pop
insb
pop
movsl
dec
or
into
ret
out
push
adc
in
xabort
inc
sti
pop
aaa
ljmp
out
push
jmp
pop
pop
dec
push
dec
out
fdivs
dec
jecxz
jnp
ljmp
mov
leave
push
push
gs
leave
clts
sub
lock
fs
mov
popf
sub
cmp
xchg
fsubp
mov
mov
mov
lretw
insl
push
out
sub
dec
hlt
ret
xchg
cmp
movsl
imul
xor
add
out
xchg
pusha
inc
clc
pop
mov
pop
scas
stc
xlat
leave
xor
gs
fbld
jo
js
addr16
mov
out
inc
clc
pop
cmp
in
out
sub
rclb
push
xor
ljmp
loop
jno
rclb
sbb
mov
pop
push
or
popf
jb
stos
movsl
daa
dec
lods
mov
sub
jae
mov
mov
pop
lea
jg
clc
scas
fs
sbbb
loopne
jecxz
push
push
sub
cmpsl
mov
pop
inc
mov
stos
pop
mov
out
inc
jecxz
or
pushf
loop
inc
push
js
fsubp
mov
mov
mov
leave
sub
gs
xlat
adc
fs
lock
mov
sub
leave
mov
popa
adcl
push
clc
das
sub
push
xchg
popf
icebp
nop
les
mov
sub
sub
dec
fs
cmp
mov
sub
jmp
pop
jecxz
cmpsl
imul
add
lea
loop
fs
dec
andl
push
je
inc
clc
pop
cmp
in
out
sub
sarb
aaa
loopne
js
data16
jp
outsb
jg
mov
adc
mov
jbe
pop
pop
int
mov
mov
inc
mov
jg
xor
loop
arpl
mov
mov
sbb
fs
push
dec
xchg
addr16
idivl
pop
mov
xlat
mov
cmp
push
mov
iret
popa
loop
mov
loopne
lea
int3
jb
push
insb
inc
sub
jecxz
xor
inc
lea
cli
push
insb
add
popa
cli
sbb
add
fs
push
push
stos
fsub
into
into
jp
fidivl
sti
outsb
cmp
js
mov
sub
cmpsl
pop
push
lock
sub
std
pop
insb
pop
movsl
pusha
jo
add
inc
adc
in
jmp
mov
jae
aad
popf
aam
pushf
repz
mov
dec
or
movsl
fisubl
cltd
cmpsb
test
pop
pop
cmpl
test
dec
mov
mov
push
pop
dec
aad
pop
frstor
pop
mov
jbe
xor
mov
rcr
sub
mov
cmp
daa
outsb
aas
or
dec
cltd
push
pusha
fnstsw
jmp
out
sub
dec
cli
vpmaddwd
pop
mov
mov
push
aas
fidivrs
pop
push
jl
jmp
cmp
out
stc
sub
jns
addr16
dec
cli
icebp
notb
loope
jb
dec
jecxz
cmp
aas
fistpll
sub
pop
loop
imul
pop
int3
cmp
bound
add
hlt
cmp
outsl
nop
stc
imul
test
mov
fucomp
and
jl
jno
shlb
add
scas
lods
pop
pop
cmp
loop
xchg
addl
dec
out
movsl
push
insb
inc
imul
inc
call
cmp
rorl
add
into
xchg
cmp
jae
rorb
stos
jnp
ret
sbbl
push
pop
dec
fidivs
nop
jp
cmp
pusha
movsl
push
insb
inc
xchg
or
lret
divb
mov
push
decl
jg
jns
in
push
out
mov
popa
and
mov
idivl
mov
dec
mov
leave
orl
popa
loopne
push
or
jbe
in
fsubrs
mov
jns
jnp
popf
xchg
fistpl
xchg
mov
mov
dec
pop
out
sub
sbb
mov
out
mov
add
and
pop
dec
push
add
cli
xchg
add
push
push
es
jle
jg
mov
xor
or
pop
insl
sub
jg
in
pop
sub
sub
jge
push
pop
jle
mov
sub
shll
add
je
sub
js
stc
jno
ret
pusha
jo
fs
mov
jo
jo
pusha
adc
out
sub
inc
iret
jge
fidivl
clc
in
xor
lret
icebp
push
inc
in
jmp
push
pop
pop
jns
adc
inc
clc
pop
mov
pop
scas
fsubl
enter
iret
pop
shlb
mov
sbb
fldenv
ja
lock
fs
mov
sub
je
inc
clc
pop
fisubrl
out
sub
pop
loop
imul
fsubp
sbb
pop
jecxz
cmpsb
popf
pop
test
dec
test
hlt
mov
xchg
in
hlt
push
inc
aas
jb
call
pop
jecxz
push
jo
dec
or
or
sub
into
jl
fidivl
loopne
pushf
sub
icebp
push
inc
out
xor
adc
or
insl
push
out
fs
insb
push
xchg
dec
mov
xor
repnz
push
mov
mov
rolb
sub
lret
lret
cmpsl
xor
lcall
fdivrs
repnz
in
enter
outsb
mov
cmpsb
es
push
fwait
mov
jmp
nop
mov
jp
jmp
add
adc
pop
jp
jl
fsubp
in
sarb
jecxz
das
lea
sbb
inc
xchg
sti
adc
inc
jecxz
xor
rolb
rolb
lret
outsl
push
out
sub
mov
push
sbb
int3
in
ja
add
out
jnp
call
push
fwait
pop
lret
enter
pop
andl
dec
jmp
imul
inc
mov
aaa
in
popf
jb
orb
cs
js
movsl
sub
mov
cmp
mov
jb
fs
adc
mov
push
or
gs
xorl
movsl
sbb
jae
dec
xor
xchg
pushf
lods
jecxz
hlt
mov
int3
adc
sub
mov
lods
xor
mov
push
xchg
mov
jg
sbb
mov
dec
xchg
xchg
pop
xor
xor
push
aad
rcr
fiaddl
adc
fisttpl
call
gs
mov
adc
lret
mov
lea
mov
fadd
lahf
cmp
push
shr
jmp
mov
lea
mov
mov
iret
sub
test
sbb
clc
mov
sar
loop
push
int
push
sub
in
xlat
cmpsl
fcmovnb
push
xlat
icebp
pcmpeqw
and
clc
fsubr
scas
add
jne
mov
jae
pushf
mov
push
lods
jo
cli
aas
jle
ficompl
mov
cs
lret
jecxz
mov
or
insb
fimull
sub
in
xor
cmp
call
outsl
push
push
mov
mov
sarl
pop
fcoml
pop
xor
jl
pop
outsb
enter
xor
adc
sub
pop
xchg
orb
jmp
sub
ja
pop
pop
rcrb
pop
nop
popa
pop
mov
mov
imul
sub
loop
arpl
cwtl
add
outsb
inc
adc
push
ret
pop
xlat
and
mov
imul
out
sub
pop
fisubrl
mov
loopne
insb
icebp
notl
rcll
add
out
jmp
repz
inc
jl
pop
imul
ss
call
pop
enter
push
movsb
pop
ficompl
sub
repz
xchg
bnd
iret
lahf
loop
daa
inc
xchg
push
push
xlat
cld
icebp
inc
pusha
insb
push
jnp
ds
xlat
dec
or
fidivs
outsb
rol
test
and
mov
xlat
stc
fcomps
iret
subl
int
sbb
rcl
neg
icebp
js
push
movsl
sub
nop
fsubl
adc
not
xlat
mov
sbb
sub
aas
mov
sub
mov
cmp
add
pminub
pop
sti
pop
leave
jo
jnp
mov
imul
cmp
dec
push
inc
les
icebp
or
adc
addb
sub
out
test
inc
push
fists
out
jecxz
insl
push
dec
sub
pop
push
test
push
aas
jl
lahf
cmp
or
fidivs
inc
cld
cmpl
ret
cmp
lods
dec
dec
leave
and
enter
fldl
mov
cs
fs
mov
sub
rcrb
ljmp
decl
mov
daa
jmp
std
push
insb
pop
movsl
addr16
repnz
inc
clc
imul
mov
push
and
scas
fs
loopne
jecxz
push
xor
repnz
xchg
xor
fidivrl
lcall
xor
pushl
jge
daa
addb
sub
nop
pushl
rcr
cmp
je
icebp
inc
jecxz
mov
or
jo
adc
arpl
out
sub
ds
repnz
sbb
push
jmp
mov
repnz
lret
pop
dec
imul
faddl
mov
pop
out
and
push
ljmp
cmp
xor
cmp
not
fildll
std
dec
lods
ds
or
sahf
push
fsubp
mov
mov
xchg
push
out
jge
ficompl
push
sbb
pop
loope
pop
jno
rol
jecxz
ja
jns
jle
flds
inc
jnp
sbb
adc
sbbb
push
cli
inc
addr16
jae
std
std
xchg
dec
sub
lds
movsl
cmp
mov
jl
sub
push
xlat
std
pop
insb
pop
movsl
pusha
sbb
lret
inc
adc
sub
out
add
sub
xor
pop
cmpsw
add
add
mov
repnz
jecxz
jp
fs
sub
push
mov
push
out
sahf
push
inc
clc
scas
fs
push
data16
add
popa
jecxz
push
fcmovne
sub
mov
outsl
and
aad
js
data16
fidivl
mov
mov
std
sub
push
jecxz
cmp
push
mov
xorb
mov
test
xlat
add
lret
icebp
or
das
cmp
aaa
fistl
dec
loope
scas
and
sbb
insl
push
dec
mov
xlat
lret
addr16
fiadds
in
iret
lock
out
pop
push
inc
clc
lods
or
jl
pop
je
mov
arpl
imul
shl
out
enter
test
ds
fistl
push
imul
xchg
push
jmp
das
pop
push
sbbl
sub
add
inc
in
push
out
mov
pop
push
mov
push
in
pusha
pushf
cld
cmpsb
mov
jbe
pop
pop
cmp
and
jmp
fldcw
pop
push
mov
test
xor
dec
insb
aas
push
ss
loope
out
das
mov
outsb
gs
rolb
stc
cmp
in
xor
movsb
test
add
cmp
enter
dec
pop
popf
dec
fdivrs
inc
ljmp
testl
in
lahf
cmp
sub
jecxz
lahf
adc
lea
sub
cwtl
or
inc
push
aas
outsb
ret
into
cltd
fwait
cmpsl
pop
xchg
loopne
ret
xchg
and
mov
xlat
add
iret
pushf
lods
jecxz
ret
jle
mov
sbb
andl
jne
push
jle
iret
pop
std
add
inc
les
lret
lret
xchg
xchg
or
and
adc
push
mov
leave
push
push
gs
aaa
fs
mov
insl
sub
mov
lods
cmp
out
fildll
fdivl
lods
cmp
pop
sbb
push
inc
int3
nop
push
out
sub
mov
arpl
push
popf
dec
icebp
icebp
icebp
movsb
jnp
call
sub
pop
jne
jo
or
sub
push
or
pop
aaa
repnz
data16
out
ljmp
mov
lret
gs
jmp
lock
fs
mov
sub
out
subb
jne
test
lcall
xchg
inc
sar
mov
dec
add
inc
add
mov
andl
fimull
shlb
pop
jnp
shl
aad
xchg
inc
push
out
sbb
xchg
orl
add
cli
sbb
xor
in
add
movsl
jno
adc
cmp
dec
dec
fmulp
imul
dec
adc
xchg
push
jecxz
leave
push
sahf
gs
fnstenv
fimull
in
or
cmp
jge
dec
dec
lods
and
stos
les
jnp
fcmovnu
adc
fsubrl
adc
push
xchg
fs
jnp
in
aad
push
pop
daa
sub
push
xorl
dec
sub
adcb
or
inc
adc
mov
lods
cmp
dec
insb
inc
xchg
xlat
jns
lret
mov
xor
adc
rcr
sub
shrb
or
add
push
scas
cmp
dec
jmp
xchg
mov
mov
add
mov
pushf
lret
imul
inc
pusha
pop
out
push
inc
scas
es
shlb
lea
cld
inc
pushf
cld
fs
adc
add
js
mov
push
in
fiaddl
scas
adc
xchg
pop
loop
arpl
dec
bound
leave
not
int3
into
pop
push
jp
mov
sbb
mov
rcr
sub
repnz
popa
ljmp
popf
push
mov
push
adc
rcr
sub
inc
lods
sbb
add
push
mov
popa
pop
out
sub
xor
sub
in
shlb
dec
mov
push
push
repz
dec
mov
adc
rcr
sub
xlat
lods
pop
fistpll
push
lahf
push
mov
xorb
mov
lock
mov
fsubp
imul
imul
or
jnp
mov
and
push
mov
mov
or
les
inc
lret
rcl
leave
jp
arpl
in
adc
pop
jp
xchg
dec
repz
fldcw
add
push
pop
dec
sarb
xchg
idivb
mov
jmp
xchg
dec
mov
cld
pop
jecxz
hlt
fiaddl
jecxz
push
adc
gs
ljmp
mov
call
aad
xchg
dec
mov
shll
pop
mov
push
mov
xchg
cmp
dec
in
sub
lret
insl
imul
sub
cli
call
add
pop
mov
jg
xorb
leave
jecxz
add
incb
jae
iret
nop
loop
adc
cmp
cmp
addr16
mov
jae
and
push
sub
movb
xor
fnop
fildll
call
lods
cmp
mov
pop
repz
cwtl
push
call
cmp
inc
jecxz
mov
dec
popa
lret
outsb
push
out
sub
pop
xor
jl
fidivl
add
outsl
scas
add
push
adc
shll
inc
dec
mov
fimull
out
pop
fmull
and
mov
xlat
clc
sub
cmp
inc
dec
jmp
cld
int
xor
adc
jbe
push
fcmovnbe
lock
imul
ss
jl
imulb
mov
add
ret
jecxz
bound
and
call
clc
jle
mov
vmovntps
mov
insl
xor
pop
ljmp
push
loop
add
lods
xor
mov
pop
movsl
xor
add
stc
xor
test
pop
inc
ljmp
mov
and
and
cmp
inc
mov
mull
fwait
xlat
xor
pop
jnp
adc
mov
ret
repz
sub
rclb
ss
loope
js
push
add
sahf
jno
ror
jecxz
rclb
sbb
sub
xchg
test
jp
mov
push
out
std
cs
or
addb
fnstenv
mov
imul
adc
add
bound
je
aaa
hlt
pop
jne
cld
pop
jecxz
lods
fidivrl
popf
jecxz
xchg
in
lret
lock
inc
cmp
loop
fs
cmc
add
pop
xor
out
sub
rclb
push
xor
push
and
mov
xor
int
push
and
add
inc
sahf
dec
jno
lret
popf
xor
inc
jg
dec
cs
out
xlat
into
out
and
push
mov
push
pop
inc
jmp
int
ret
faddl
mov
push
jns
outsb
popf
int3
pop
sub
mov
cmp
mov
jp
in
sub
and
adc
les
pop
inc
clc
pop
outsb
test
dec
mov
cmp
cli
mov
push
mov
xchg
jo
jbe
in
sub
lret
cmp
sahf
mov
push
movzwl
outsb
jno
pop
andl
mov
xchg
out
push
fwait
loope
jecxz
push
inc
lods
es
pop
jecxz
jnp
pop
imul
mov
out
pop
xchg
sub
cmp
push
pop
push
inc
inc
icebp
pushw
test
push
movsl
pop
insb
inc
fwait
inc
mov
out
sbb
xchg
scas
cmpsb
and
pushf
out
mov
das
sti
mov
pop
jo
adcl
sub
insb
into
jg
fidivl
je
jp
in
enter
enter
loope
mov
dec
pop
cmp
pop
jecxz
xchg
xor
leave
aas
jns
pushf
repz
sub
xchg
sub
enter
loopne
lcall
push
mov
and
or
and
fwait
mov
icebp
fsubr
ljmp
in
mov
inc
pop
and
mov
dec
or
outsb
pop
pop
andl
mov
add
and
pop
push
adc
nop
and
dec
shll
test
fistpll
pop
xor
fdivrs
popf
rcrl
push
mov
mov
add
sub
sub
mov
mov
mov
mov
das
outsl
xor
adc
hlt
repnz
lods
cmp
adc
jle
imulb
inc
clc
pop
push
mov
push
dec
jmp
pop
jnp
jmp
cmp
xor
or
mov
xor
daa
xor
adc
inc
xor
inc
enter
pop
clc
pop
dec
imul
int3
faddl
mov
mov
sbb
sub
ljmp
fs
sub
mov
lods
cmp
scas
sub
sub
push
sti
dec
cwtl
xchg
icebp
add
sahf
cmp
scas
push
decl
xchg
imul
es
sub
cmp
jo
out
popf
add
out
sub
ljmp
mov
pop
ret
mov
sub
mov
dec
mov
or
push
out
dec
dec
jl
jecxz
push
jb
push
dec
mov
jnp
shlb
hlt
push
leave
les
mov
mov
mov
scas
imul
jecxz
into
icebp
jnp
bnd
or
clc
pop
inc
aaa
imul
jp
fidivl
mov
xchg
notl
inc
sub
inc
and
stc
pop
jecxz
adc
pop
xor
inc
lods
daa
stc
pop
jecxz
jnp
pop
addr16
xchg
aaa
out
mov
push
sbb
sahf
xchg
add
inc
push
movsb
push
pop
gs
jg
mov
stc
mov
adc
gs
sub
mov
inc
clc
mov
push
loopne
jecxz
push
sahf
loope
dec
repz
push
sbb
dec
and
scas
rcrl
xor
push
or
jp
fistpll
sub
mov
push
jl
or
mov
adc
jl
cmpsb
pop
loope
adc
adc
rclb
loop
loope
addr16
push
dec
mov
fsubr
clc
sbb
or
lret
mov
das
not
push
loopne
jnp
je
inc
clc
pop
popf
mov
out
sub
lea
adc
clc
pop
jecxz
les
jle
push
inc
pop
inc
loopne
hlt
inc
mov
loop
pop
fdivrs
popa
sbb
pop
jecxz
inc
out
sub
scas
pushf
lahf
sub
cmc
mov
push
mov
inc
faddl
je
dec
test
loopne
jecxz
mov
cs
jge
jecxz
push
inc
jg
enter
jp
in
xor
fisubrs
inc
adc
ds
shl
inc
clc
mov
fs
and
loopne
jecxz
push
push
in
inc
push
sub
mov
cmpsb
shll
inc
jecxz
popf
movsl
das
imull
testl
inc
dec
fsubp
roll
dec
sub
pop
jecxz
add
inc
lcall
pop
push
jnp
in
or
mov
xor
and
pop
loop
imul
insb
cmp
loope
sub
lret
jecxz
xor
sub
ret
pusha
test
cmp
jmp
sub
sarb
push
xor
push
push
xor
sub
sbb
cmp
test
pop
ss
or
xchg
out
in
push
jno
push
push
jae
lahf
sahf
andl
push
std
lahf
cli
inc
in
repnz
bound
and
pusha
jecxz
push
xchg
push
push
dec
out
loope
scas
add
das
or
mov
push
cs
jns
loop
lahf
lock
sbb
ds
dec
push
xor
xlat
loopne
cmp
es
mull
js
pop
out
mov
sub
mov
jecxz
fdivrs
ljmp
jge
dec
scas
popf
dec
jnp
mov
push
jno
jmp
in
sub
cltd
dec
fsubp
orb
jecxz
enter
pop
inc
les
pop
inc
ja
test
add
dec
jmp
xchg
inc
xor
pop
loop
bound
cmp
fildll
int3
xlat
lods
add
pop
sbb
push
call
jg
mov
mov
jp
in
and
cmpsl
lock
scas
inc
adc
les
lods
cmp
jecxz
stc
sub
push
cltd
imul
shl
adc
add
loopne
test
add
dec
out
ja
sub
push
nop
mov
shl
movsl
xor
pop
in
sbb
inc
hlt
filds
mov
std
mov
sbb
mov
lret
gs
fcmovbe
loopne
mov
aas
fs
mov
adc
or
insl
xchg
into
xchg
mov
aas
ds
jae
insb
mov
pop
add
pop
test
in
add
or
dec
jne
or
stos
push
push
ror
nop
pop
mov
lret
iret
out
sbb
inc
rolb
lret
insb
push
out
sub
inc
push
or
jnp
in
or
ffree
testl
clc
pop
jecxz
in
ficompl
push
shll
rorb
cld
jno
pop
pop
pop
mov
stc
daa
jns
movsl
and
mov
lea
jge
cmp
pop
jg
aad
lock
iret
stc
lahf
js
mov
xchg
sbb
in
xor
and
enter
pop
sti
stos
xlat
xchg
and
ljmp
xchg
xchg
or
push
inc
cli
popa
fidivrs
aam
aas
mov
inc
nop
mov
jecxz
cs
cmp
mov
inc
dec
xchg
fidivs
push
push
jl
cmpsb
push
mov
ds
push
test
sbb
push
sub
jg
mov
jl
inc
mov
jae
push
in
mov
out
clc
push
jg
fs
add
pop
jecxz
push
lea
pop
xor
je
rclb
add
iret
adc
shll
ret
popa
mov
fidivs
mov
rclb
nop
shll
push
push
call
adcb
mov
cmp
and
ljmp
decl
scas
popf
fcmovnu
rcrb
hlt
push
scas
mov
dec
lock
sub
xchg
dec
loopne
imul
push
mov
and
mov
xlat
jmp
xor
adc
repnz
stc
mov
fimuls
push
pop
dec
adc
cld
mov
cld
adc
sbbb
cmpsb
sub
insb
dec
or
fstl
addl
xchg
mov
orb
jns
les
sub
sub
jmp
inc
sbb
cmp
or
data16
jp
in
pmaxub
inc
sub
inc
push
xlat
sbb
pop
outsb
popa
pop
inc
out
sub
cmpsb
faddl
mov
out
pop
je
xor
cmp
mov
insb
mov
and
sarb
xor
movsb
adc
adc
jl
cmpsb
pop
sti
scas
fs
inc
sub
cmp
mov
cmp
bound
push
insl
jg
push
lds
lahf
icebp
lret
cmc
movsb
push
insb
inc
lods
mov
call
outsb
pop
adc
imul
jns
fsubrl
out
jge
ficompl
push
sub
jne
mov
pop
push
mov
ja
loop
push
shrl
pop
adc
cmp
xchg
movl
cmp
xlat
sbbb
test
cmp
je
nop
mov
pop
stos
push
xchg
leave
push
push
gs
jecxz
mov
fs
mov
sub
scas
addr16
clc
pop
jecxz
lcall
icebp
divl
mov
or
cmp
dec
sub
pop
pusha
xor
jb
inc
insl
adc
pushf
mov
jmp
in
mov
xlat
add
push
sbb
pop
stos
sub
inc
jle
and
movsb
mov
lds
adc
orl
je
jbe
adcl
mov
cmp
push
out
jl
mov
inc
ljmp
mov
test
xor
inc
lds
je
mov
repnz
fst
and
push
jecxz
call
inc
jecxz
in
sbb
mov
mov
inc
clc
fisubs
dec
sbb
xlat
lret
mov
shrl
mov
mov
add
iret
insl
pop
inc
jmp
jecxz,pn
add
movsb
mov
sbb
inc
testb
jl
cmp
std
add
cmp
add
mov
adc
cld
fs
sub
and
mov
xlat
sti
cmp
jle
xor
xor
loop
mov
sbb
loope
arpl
mov
mov
push
stos
mov
shrb
adc
and
test
shlb
jecxz
jb
jb
sti
pop
fnstcw
dec
in
push
or
in
sahf
je
inc
cltd
fs
icebp
mov
cmpl
sub
jecxz
addl
in
sarl
mov
jo
and
sub
push
or
push
add
repnz
test
fldcw
mov
cmc
xlat
xchg
test
pusha
push
iret
test
add
mov
inc
jmp
test
icebp
icebp
sbb
jl
out
or
repnz
idivl
cmp
xchg
dec
sbb
cmp
pop
jmp
jmp
out
pop
jge
dec
loopne
imul
and
jb
sbb
lret
jle
fstps
addl
fsubs
mov
addb
sub
cmc
out
xchg
js
mov
jb
cmp
dec
mov
mov
popl
int3
outsb
push
out
sub
jbe
jnp
fidivl
in
cmp
das
sub
fucomp
add
mov
mov
fwait
adc
cmc
mov
xlat
jl
cmp
pushl
pop
pop
dec
sub
cld
mov
mov
pop
dec
inc
in
cmpsb
mov
cwtl
idivb
lcall
jge
jnp
push
outsb
xlat
cltd
cltd
adc
mov
jecxz
fwait
pushf
hlt
add
ficomps
dec
xor
pop
push
sub
jp
das
mov
mov
call
leave
mov
dec
int3
mov
clc
ljmp
leave
not
sub
orl
pop
int
dec
inc
clc
pop
xor
xor
enter
jmp
add
push
mov
xor
icebp
sbb
mov
pop
addr16
shlb
cltd
mov
pop
outsb
dec
mov
movsl
daa
loop
adc
ror
mov
jae
sarb
jns
in
in
out
mov
call
not
cmp
pop
insl
mov
xor
or
mov
jg
leave
incl
pop
xchg
imul
dec
insb
inc
fldt
gs
lret
jo
inc
repz
adcb
bound
add
jmp
pop
arpl
pop
sti
aaa
pop
fs
inc
in
pop
cs
add
xor
mov
cmp
and
pop
cmp
cmp
pop
jecxz
xchg
outsl
loope
or
into
outsb
mov
loopne
insb
icebp
repz
mov
bound
and
imulb
pop
int
pusha
jecxz
push
push
pop
push
push
dec
out
out
xchg
scas
add
dec
call
aas
mov
cmp
in
out
mov
lds
shlb
jecxz
add
pop
loop
insl
jbe
pop
pop
jo
pop
fistpl
push
inc
int
sub
mov
gs
push
lret
lret
pop
pusha
stc
xchg
lret
je
inc
hlt
in
lods
cmp
out
imulb
inc
clc
in
aam
mov
jmp
add
inc
push
out
sbb
or
xor
movq
adc
fidivrs
adcl
out
sub
shlb
xor
stos
call
jae
rcrb
jecxz
fcompl
mov
mov
pop
shll
into
jecxz
cmp
enter
jno
pop
test
cltd
push
fsubr
test
dec
jno
int
nop
fsubl
mov
sbb
mov
in
push
cs
add
orb
inc
sub
mulb
std
pop
cmp
mov
mov
push
lret
mov
add
sub
imul
lea
jnp
pop
popa
adc
mov
push
pop
pop
sbb
mov
sahf
mov
outsl
mov
push
insb
dec
ja
and
andb
and
xchg
lret
cmpsl
jno
xor
faddl
push
out
mov
dec
mov
loopne
shl
hlt
push
mov
lock
inc
in
sub
cltd
push
mov
sub
mov
movsl
pusha
fdivl
sbb
inc
adc
rcrb
jp
and
gs
shl
ljmp
movsl
addl
cmp
bound
add
pop
gs
clc
add
stc
xchg
pop
fs
xchg
jns
sub
es
inc
clc
pop
jecxz
cmp
pop
push
push
dec
ljmp
loopne
insb
icebp
repnz
andl
add
inc
cmpsb
adc
pop
and
jecxz
addl
jne
gs
data16
fisubrl
data16
jecxz
inc
mov
add
fs
loopne
jecxz
push
fildl
aad
cmpsl
push
sbb
dec
mov
stos
or
xchg
mov
jnp
ljmp
mov
xor
and
mov
dec
sbb
ds
repz
fsubl
dec
mov
mov
fmuls
push
or
outsl
rcrb
int
loopne
imul
rcrl
inc
mov
push
mov
aad
push
shrl
push
cmp
add
movsb
jne
roll
iret
insb
pop
jo
push
or
out
sub
xor
andb
aaa
jbe
cwtl
pop
mov
lock
mov
ret
ret
push
clc
pop
jecxz
ljmp
push
dec
jae
pop
imul
int
xchg
ret
popf
out
pop
lock
sbb
mov
iret
test
xchg
jb
rcl
cmc
fsubr
jno
loope
pop
movsl
xchg
lret
jno
aad
fs
add
loope
push
mov
cmpb
bound
add
dec
gs
icebp
addr16
fs
dec
andl
sti
lcall
xor
fidivs
inc
adc
les
scas
fs
pop
out
sub
mov
jae
jnp
sub
cmp
pop
int3
inc
pop
mov
pop
lock
xor
push
test
das
rorl
pop
jle
sar
sbb
sbb
je
leave
not
lds
std
mov
ficomps
out
mov
mov
xor
lret
insb
push
out
sub
outsl
cmp
insb
test
mov
das
scas
dec
out
dec
pop
out
mov
lcall
mov
jp
in
adc
aas
arpl
cmpl
inc
clc
mov
dec
pop
out
sub
fmul
mov
inc
pop
jae
rorb
repz
imul
inc
add
cwtl
movsl
daa
adc
mov
jg
mov
pop
cmp
or
mov
fistpll
mov
xor
push
paddd
mov
leave
xor
enter
int
jae
lock
fs
mov
movsb
adc
enter
shl
lock
fs
mov
enter
sub
lds
out
sub
inc
iret
sbbb
rorb
add
mov
out
xlat
mov
inc
inc
dec
loopne
imul
inc
mov
daa
nop
lods
fimuls
dec
add
sbb
jmp
test
mov
mov
repnz
daa
clc
fdiv
sbb
outsl
mov
jle
sub
scas
jecxz
pop
push
mov
push
pop
aas
scas
and
sarb
aaa
call
jne
lahf
and
mov
xlat
add
andl
in
movsl
inc
jno
popa
stc
mov
sti
sbb
and
loope
arpl
sbb
imul
rcrb
aas
mov
in
pop
sbb
loop
in
mov
enter
lret
jne
outsb
ficoms
inc
cmp
aas
mov
jp
in
ds
fidivrs
inc
sub
inc
stc
xchg
mov
xlat
call
cmp
testl
mov
inc
jne
inc
clc
pop
jecxz
jmp
cmpsl
shlb
inc
sti
adc
xor
dec
fstpl
push
sub
push
mov
mov
repz
jb
out
sub
push
sub
std
ficoms
push
push
dec
call
les
mov
lock
dec
pop
xor
inc
clc
rcrb
sub
es
xor
fdivrl
adc
pop
cwtl
js
movsl
sub
sub
push
add
repz
sub
lcall
add
inc
cmp
mov
out
sub
stc
scas
fs
pop
out
sub
xchg
xchg
loop
jp
inc
pop
cmp
pop
xchg
daa
or
sbb
mov
dec
add
in
psubw
or
loop
jb
mov
add
push
pop
fldt
shl
ljmp
sti
pusha
loope
dec
scas
popf
mov
rcrb
hlt
push
mov
or
aaa
in
sub
addb
lods
cmp
jbe
adc
cmc
sub
sub
inc
popf
jecxz
movsb
insl
adc
scas
add
fisubrs
addr16
dec
repz
jge
out
mov
jp
in
adc
fmulp
or
mov
inc
add
cmp
xchg
inc
xor
jnp
in
jecxz
pop
repz
cmc
mov
cmp
orb
ret
pop
push
mov
pop
and
mov
popa
sahf
xor
mov
imul
pop
lods
mov
rdmsr
cli
inc
adc
mov
sarl
je
gs
xlat
xor
pop
dec
mov
fidivrl
fwait
jecxz
lahf
in
leave
repnz
inc
stos
push
clc
addr16
jno
jo
inc
clc
pop
jecxz
sub
push
pop
je
loope
or
pop
sub
inc
mov
push
push
rolb
jns
movsl
subl
loope
arpl
add
repz
dec
out
imul
push
and
pushf
cld
inc
lods
cmp
hlt
sub
mov
mov
add
sub
jns
adc
loopne
insb
icebp
repnz
aam
lret
inc
lods
and
pop
jecxz
jnp
push
insl
xchg
mov
inc
cmp
es
adc
dec
mov
ds
movsb
iret
clc
inc
sahf
push
jno
movsl
jg
ret
jmp
jp
xlat
sub
rclb
gs
add
pop
jecxz
cmp
shl
mov
inc
clc
pop
std
incb
dec
cmc
shl
dec
mov
mov
loop
pop
xlat
mov
sub
je
aas
clc
pop
cmp
add
mov
inc
call
stos
jecxz
inc
push
or
scas
add
in
in
sahf
pop
sub
push
push
scas
xor
aam
std
cmp
push
mov
dec
xor
adc
push
pop
inc
out
cs
faddl
mov
jmp
xchg
ljmp
sbb
cmp
test
mov
fs
mov
popa
jecxz
push
and
or
scas
push
sti
dec
out
gs
sub
push
out
jmp
out
nop
and
js
cmpsb
mov
pop
add
pop
test
or
mov
dec
add
inc
cwtl
test
push
xrelease
mov
popf
je
outsb
mov
in
sbb
shrb
mov
push
sub
pop
movl
es
pop
pop
jns
outsb
aam
int3
adc
push
lret
adc
xlat
pop
shl
arpl
sahf
xchg
xlat
jg
sarb
loope
fstps
jmp
mov
ret
push
adc
sub
mov
mov
jecxz
cmp
jno
jg
in
enter
adc
dec
pop
ss
fistpll
leave
cmp
push
rol
sub
cld
lock
fs
mov
je
cmp
jae,pt
mov
push
inc
dec
cld
icebp
mull
outsl
xor
scas
pop
decb
add
and
pop
js
xor
mov
xor
sub
pop
jns
push
pop
roll
inc
pop
ss
push
std
or
or
mov
bound
scas
in
mov
lret
int
add
dec
ss
jecxz
fildll
leave
repnz
and
pop
inc
addb
push
lcall
mov
or
dec
jo
out
adc
repz
jecxz
xchg
and
sub
outsb
push
out
sub
in
into
js
fidivl
push
int3
repnz
inc
pop
pop
lret
scas
cmp
cmpsb
pusha
jecxz
push
jo
fs
jg
or
sub
adc
inc
xchg
sub
out
push
xchg
sub
push
inc
and
mov
or
xchg
out
adcb
bound
add
mov
inc
lret
mov
pop
arpl
xchg
dec
pop
push
sbb
mov
push
ljmp
testl
ficompl
add
lcall
add
aam
popa
subb
push
or
andnps
push
adc
xchg
loop
arpl
lret
push
sbb
add
mov
jae
popf
sub
call
xor
mov
fs
mov
push
or
inc
ret
mov
push
bound
cmp
dec
jge
jecxz
push
inc
jle
and
mov
jp
in
adc
fidivs
inc
or
cmp
out
insb
loopw
out
sub
fsub
lahf
cmp
inc
add
in
adc
pop
pop
lea
call
inc
lods
aas
pop
sub
sub
lock
cmp
in
jo
lods
pusha
and
int
push
dec
mov
or
xor
inc
icebp
pop
inc
lods
cmp
jne
out
repz
pop
and
sbb
pop
dec
ret
dec
and
ret
mov
xchg
sbb
push
or
sub
pop
jecxz
dec
fistpll
fstps
push
sub
insb
lods
mov
xlat
aam
jnp
iret
fs
mov
adc
add
into
xchg
stos
cmp
jns
movsl
and
xchg
daa
out
fadds
xor
pushf
shl
xchg
lahf
outsb
dec
adc
ja
pusha
fdivrs
inc
clc
pop
outsb
scas
repnz
jge
jo
mov
jp
in
adc
push
movsl
mov
aad
inc
add
cmp
adc
dec
pop
xor
jmp
mov
mov
or
inc
and
sub
stos
push
and
mov
dec
adc
inc
cmp
cmp
lcall
nop
push
jae
add
out
int
push
daa
movsb
inc
aad
es
jns
movsl
and
xor
test
or
nop
pop
lcall
cmc
mov
decl
movsb
test
clc
pop
jecxz
pusha
ficoml
pop
stc
bound
adc
pushf
mov
int3
mov
outsl
loop
cli
inc
fdivrl
mov
or
mov
loop
insb
adc
insb
addr16
pop
out
sub
mov
out
sub
xchg
jecxz
or
popa
jne
cmp
scas
add
dec
jmp
hlt
pop
lret
mov
jp
xor
ss
bound
cs
mov
aas
imul
mov
pushf
stos
jecxz
faddl
add
lods
xor
cld
pop
jno
push
push
lcall
jecxz
iret
div
jb
outsb
out
jns
aas
ds
xor
fs
int
repz
xchg
loope
fs
jmp
and
sbb
iret
cmpsb
sub
data16
add
push
scas
pushf
or
stos
bound
mov
xor
push
out
sub
xlat
in
lahf
cmp
cmp
aam
fwait
cmp
dec
adc
icebp
push
jmp
xchg
mov
mov
add
insl
int3
inc
stc
mov
arpl
xchg
inc
clc
pop
lret
in
out
sub
out
insb
push
nop
dec
adc
lahf
cmp
cmp
into
cltd
push
pop
out
pop
inc
scas
cmp
insb
push
xchg
jns
cmp
clc
pop
jecxz
lock
sub
mov
cmc
add
repz
dec
fstpl
int
aas
fidivrs
dec
cmp
pop
imul
clc
pop
cmp
xlat
rcr
sub
or
dec
or
push
sahf
push
call
xor
insl
dec
cmp
add
sar
jp
jmp
push
out
jp
sarl
pop
inc
or
stos
outsb
icebp
test
inc
and
xchg
out
adc
testb
xorl
push
addl
pop
loop
push
lock
cmc
in
xor
pop
adc
fiaddl
into
jo
xor
addl
jecxz
and
xor
fnstenv
sub
loopne
xor
pushl
rclb
jmp
push
out
cmp
shll
xor
mov
roll
xchg
scas
sar
addr16
adc
mov
inc
jge
and
mov
jp
in
sbb
push
movsl
cmp
bound
cmpl
scas
cmp
iret
rcr
sub
lock
push
out
adc
and
push
push
les
mov
shl
jmp
inc
clc
pop
push
enter
mov
dec
iret
jl
fidivl
lods
sub
movsl
sbb
add
dec
out
popf
out
or
mull
sub
fimull
call
cld
adc
jl
cmpsb
push
fmulp
fisubl
jecxz
daa
mov
es
jno
pop
push
sub
repnz
stc
repnz
js
mov
push
call
sub
fsubp
mov
lret
sub
pop
jecxz
decb
lods
push
add
in
int3
notl
inc
adc
lahf
frstor
sub
push
fsubp
imul
das
lods
ds
push
clc
pop
xor
add
inc
jmp
push
out
scas
or
int
push
adc
pop
sub
fisubrl
jb
pop
inc
lods
cmp
out
clc
sub
mov
sbb
outsb
inc
push
or
test
icebp
repnz
push
aas
pop
leave
movb
bnd
out
sub
scas
fs
loope
jecxz
push
inc
mov
jb
push
or
in
punpcklbw
movsb
insb
icebp
test
data16
das
fucomip
or
js
mov
push
sub
push
sub
adc
mov
cmc
xchg
push
mov
cwtl
sub
mov
xchg
jle
mov
mov
in
adcl
je
and
mov
mov
sbb
xchg
dec
pop
into
xlat
jmp
call
add
testl
filds
inc
sub
ss
clc
pop
and
adc
xor
rorl
add
hlt
cmp
aad
clc
inc
inc
stos
mov
je
jge
jecxz
push
inc
jle
pop
lret
mov
jp
in
and
ja
inc
or
cmp
jae
mov
into
adc
sbb
and
push
inc
xchg
imul
scas
fs
loopne
jecxz
push
imul
pop
fisubrl
push
or
sub
push
call
jmp
faddl
mov
mov
cmp
mov
cld
sub
sbb
inc
repz
inc
push
or
into
lea
jecxz,pn
mov
icebp
push
fwait
dec
adcl
mov
xor
inc
mov
pop
jmp
push
mov
shll
or
pop
sub
jo
or
pushf
jmp
or
sub
iret
adc
pop
inc
xor
shrb
fisubrs
push
mov
mov
push
in
mov
mov
loopne
imul
jo
clc
rcrl
outsb
je
xor
dec
std
adc
fistl
adc
test
dec
addb
daa
cmp
cmpsb
sub
adc
test
mov
lods
cmp
idivb
clc
mov
mov
add
xchg
stc
dec
fldl
icebp
repz
push
int3
jbe
push
dec
mov
mov
inc
jl
pop
pusha
sbb
lcall
sbb
pushf
gs
add
jp
sahf
into
jno
mov
int
cmp
inc
nop
shll
push
pop
lcall
xchg
adc
rcr
sub
pushf
and
test
jae
or
dec
cwtl
push
es
mov
int3
rcr
sub
add
push
or
push
fwait
push
pop
in
push
in
dec
or
push
stc
sub
jnp
xor
fsubl
jge
inc
add
jecxz
sahf
lods
jno
dec
iret
mov
fdiv
jne
movsb
inc
iret
lods
movsl
push
jp
mov
cld
or
dec
nop
mov
xchg
jns
insb
ficoms
adc
clc
pop
jecxz
xchg
in
sub
mov
imul
scas
add
dec
out
push
in
ss
loope
mov
adc
xlat
add
movsl
or
mov
adc
mov
lds
stc
mov
push
jmp
xchg
jnp
std
dec
xor
mov
inc
mov
xchg
cmp
hlt
jbe
jl
icebp
pusha
push
or
xlat
xor
pop
aas
daa
repnz
icebp
push
dec
xchg
cmpsl
mov
aas
fnstenv
ljmp
mov
pop
out
and
je
mov
mov
ficoml
xchg
mov
sub
sub
dec
cli
fadds
std
cmp
adc
mov
jp
pop
push
out
jecxz
pushf
shrl
cs
mov
push
xchg
fisubrs
pop
or
jp
sbb
adc
outsb
ja
xchg
and
dec
mov
out
jbe
pop
pop
stc
mov
mov
sbb
push
pop
dec
dec
and
cmc
fsubr
xchg
leave
andl
push
mov
js
lock
dec
or
pop
pop
std
sbb
pop
fwait
jo
movsb
rol
push
adc
das
scas
mov
xchg
cmpl
lret
sub
ret
daa
pop
dec
mov
inc
scas
mov
dec
gs
lea
enter
cltd
jno
push
push
fisttpll
mov
dec
jae
mov
aad
stos
push
dec
cwtl
mov
pop
inc
lods
cmp
enter
clc
sub
xchg
ja
xor
int3
jecxz
cmp
popf
lock
sub
fidivl
mov
fists
fwait
dec
mov
mov
or
sub
mov
mov
mov
jmp
jne
pop
push
fistpl
sub
fidivl
scas
mov
mov
inc
sub
mov
push
inc
pop
sbb
into
xchg
jl
mov
mov
outsb
insl
pop
andl
mov
dec
add
cmp
out
negl
aas
repnz
insl
pop
popf
push
and
lret
sub
sarl
cmc
fwait
subl
ret
inc
inc
jg
lods
fnstenv
js
scas
arpl
cmpl
lret
push
aad
mov
aam
fildll
lret
and
lock
or
push
pusha
mov
mov
xchg
std
ds
pop
movsl
das
shlb
repnz
scas
push
adc
ljmp
in
push
nop
fistpl
pminub
popf
jecxz
ds
cltd
scas
add
rcl
aas
fidivrs
sbb
xor
mov
sub
cmp
xor
ljmp
dec
fwait
jns
sahf
jge
inc
aaa
sti
pop
pusha
and
loop
arpl
mov
adc
jo
mov
pop
push
adc
loope
cmp
inc
ljmp
testl
aad
inc
clc
pop
pop
scas
icebp
push
aaa
lods
mov
xchg
fcoms
sahf
test
shlb
lds
push
int
or
mov
mov
sbb
mov
paddusw
cmpsb
sbb
nop
in
daa
mov
dec
mov
sbb
push
sub
in
lret
lods
faddl
mov
adc
adc
xchg
sub
sub
negb
dec
mov
insl
push
push
stos
mov
shll
cmpb
ja
leave
sub
mov
sub
std
pop
insb
pop
movsl
push
arpl
cmp
adc
ja
cmp
inc
clc
mov
lods
negl
mov
jecxz
ret
scas
pop
and
mov
xlat
ljmp
xor
sbb
cwtl
push
lret
inc
xchg
movsl
and
inc
fistpll
jns
xchg
cmp
sbb
cmp
sbb
mov
xchg
fisttpl
adc
jb
out
sub
and
adc
imul
aad
pop
jmp
or
sub
push
insb
lcall
mov
xchg
ja
mov
sub
pop
inc
orl
mov
ja
pop
pop
lcall
int3
push
pop
dec
mov
mov
bound
repz
lret
mov
dec
lahf
aam
stos
mov
jae
je
dec
xchg
adc
inc
xchg
xor
mov
inc
out
subb
faddl
mov
in
jns
rorb
xlat
sub
insb
dec
add
pop
pop
xor
sbb
arpl
inc
gs
dec
stc
test
push
ds
imul
popa
and
fsubl
xchg
rol
adc
cs
mov
andb
cwtl
cmpsb
js
cmp
dec
pop
out
sub
call
lcall
and
imul
pushf
push
in
xor
cld
add
imul
es
mov
test
stc
fstl
int
repnz
imul
fwait
xor
repz
out
sub
rcr
mov
leave
sub
enter
fidivrs
mov
push
lock
fs
mov
lods
daa
stc
pop
jecxz
jnp
pop
addr16
push
push
ljmp
pop
addl
mov
push
imulb
sub
inc
rclb
sub
xor
stos
or
mov
jae
addr16
aaa
dec
xchg
inc
jns
pop
add
xorl
ret
fstpl
sbb
mov
test
and
mov
xlat
add
mov
cmpl
rorb
jg
dec
pushf
loope
aad
jb
mov
jno
push
dec
arpl
mov
adc
loop
push
xlat
dec
cmp
pop
cmp
xlat
rcr
sub
fsubrl
pop
or
push
sahf
push
pop
mov
xchg
sbb
jb
out
sub
xchg
jecxz
cli
hlt
pop
pop
push
push
dec
out
call
fs
clc
xor
dec
inc
mov
cmp
aam
push
push
fidivrs
inc
xor
inc
enter
xchg
dec
sbb
xlat
int3
lahf
cmp
sub
sarl
mov
lea
cmc
add
pop
jecxz
push
