jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
out
imul
lahf
rorl
mov
add
add
push
pop
add
add
add
cmp
outsl
add
add
add
add
add
add
outsl
add
push
inc
add
add
add
add
add
aas
add
add
add
fs
add
sub
fiaddl
outsl
add
add
sub
add
mov
out
add
add
add
outsl
add
add
add
add
mov
push
rolb
push
add
add
xchg
outsl
add
add
imul
add
add
add
add
inc
add
add
push
add
add
add
add
mov
add
and
push
add
add
jno
filds
or
push
rolb
push
add
add
add
add
add
push
imul
add
add
add
add
inc
add
add
outsl
add
add
add
add
jno
push
add
sbb
push
add
pop
add
add
imul
pop
add
add
sub
pop
add
add
add
add
add
add
inc
add
pop
add
add
add
add
add
sbb
inc
add
add
add
add
xchg
add
add
and
or
add
mov
push
pop
add
lods
add
inc
add
imul
add
imul
movsl
add
add
add
add
add
inc
add
pop
add
add
inc
add
add
out
aas
add
add
mov
sub
cmpsb
add
add
add
fs
add
outsl
add
add
add
add
add
dec
add
add
add
lcall
add
add
add
add
add
inc
add
add
adc
add
jno
outsl
add
jno
and
insl
add
add
add
add
add
xor
iret
add
mov
add
add
add
add
or
pop
add
add
add
add
cmp
add
pop
add
add
add
pop
add
fs
add
and
dec
add
add
add
mov
iret
add
add
push
inc
add
add
add
add
outsl
add
sub
cmpsb
add
mov
push
daa
add
cmp
jno
outsl
add
add
add
push
dec
add
add
add
add
cmp
jno
outsl
add
add
add
jns
pop
add
add
add
add
add
dec
add
add
sub
mov
jns
mov
add
dec
add
add
push
add
dec
add
add
pop
add
add
add
add
aam
adc
fildl
push
add
add
jno
dec
add
mov
lcall
add
push
in
add
add
add
add
add
add
adc
and
repz
add
loope
inc
add
add
aam
inc
add
cmp
inc
add
dec
add
xor
outsl
add
add
add
and
aad
cmp
outsl
add
stos
add
mov
inc
add
add
cld
add
add
out
add
add
inc
add
add
cmp
jno
outsl
add
out
add
inc
add
add
popf
add
add
add
cltd
add
dec
add
sbb
add
dec
add
add
sbb
add
xlat
add
add
add
add
sldt
filds
int
and
push
inc
add
movb
add
das
add
add
add
add
add
or
mov
pop
into
add
fldl
sub
repnz
lret
jge
aad
xor
cld
cmpsl
lods
scas
popa
int3
in
jae
dec
das
pop
pop
sbb
and
sbb
and
inc
aad
push
mov
xchg
fistpl
add
test
mov
lods
cmp
xor
arpl
adc
adc
mov
push
test
mov
hlt
push
push
inc
insl
ljmp
mov
loop
cmp
cmpsb
movsb
scas
mov
pop
ret
push
scas
mov
ja
or
pop
jo
push
cmp
pushf
pop
inc
mov
and
jecxz
xchg
xorl
adc
test
std
cltd
pop
lds
popa
int
fwait
hlt
aad
jno
mov
imul
lea
nop
popa
lahf
fs
fcompl
add
mov
iret
xorb
mov
outsl
ja
mov
je
dec
xchg
xlat
add
pusha
jbe
aad
inc
mov
fidivs
int3
inc
push
outsl
mov
inc
inc
pop
fs
ss
fld
arpl
mov
out
addr16
adc
sub
dec
xchg
pop
xchg
jle
fnsave
mov
xor
cmp
iret
add
addl
mov
mov
mov
push
stos
pushf
hlt
or
cwtl
or
fldenv
mov
sbb
mov
push
int
dec
mov
cmp
or
inc
mov
sub
sti
push
aam
test
into
xchg
insl
adc
push
jmp
pop
fisttpl
add
jp
cli
leave
fnstsw
mov
jb
or
cmp
fwait
pusha
adc
cltd
test
add
imul
dec
push
add
dec
mov
arpl
inc
shlb
ret
add
lcall
or
test
mov
pop
pop
push
outsl
mov
adc
cmp
popf
mov
imull
and
and
insb
cld
xor
cli
push
lahf
outsb
and
call
int3
lret
dec
push
std
icebp
stos
int
jge
inc
jbe
xchg
jg
sbb
xchg
dec
jle
decl
mov
sbb
std
lret
jge
mov
pop
add
xor
cwtl
in
ds
mov
lret
and
cmp
lds
mov
push
or
arpl
add
xchg
ret
data16
pop
push
push
out
or
js
cli
sbbb
int3
sbb
dec
iret
stc
mov
push
fmull
mov
and
jl
fisubrl
lcall
lds
mov
das
pop
adc
cmp
ret
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
sbb
mov
push
repz
ds
pop
mov
cli
ds
out
sub
sbb
or
pop
sahf
ds
pop
mov
xchg
pop
ljmp
jle
dec
mov
or
mov
push
outsb
gs
sub
aas
stc
push
lods
bound
scas
cmp
inc
mov
pop
and
inc
popf
xchg
pop
mov
aad
cmc
push
jnp
dec
lahf
das
xchg
loop
test
mov
jnp
xchg
movsl
sbb
or
lahf
cmp
repnz
stos
sti
scas
sub
cmp
das
into
add
es
push
cli
cld
cmpsb
shrl
subl
rcr
mov
std
sbb
stos
cli
xchg
mov
mov
mov
sub
jbe
sti
cmp
sbb
loope
imul
ret
push
push
pop
cmp
dec
scas
jmp
pop
mov
test
imul
or
and
addr16
mov
pop
xchg
stos
sti
ds
fnstsw
fcmove
sahf
mov
scas
jp
push
andb
pushf
cmp
insb
xchg
mov
dec
and
push
fidivrl
pushf
push
mov
rorb
add
paddb
out
push
out
aas
jecxz
xchg
push
sahf
jp
pop
stos
out
jg
imul
fistps
xor
es
fistpll
cld
sub
xor
pop
stos
pop
cmpsb
jnp
pop
mov
mov
push
mov
dec
outsb
mov
pop
mov
cli
ds
sub
sbb
or
pop
sahf
dec
outsb
mov
pop
mov
cli
ds
cmp
mov
loop
fistpll
lods
xchg
mov
sti
in
es
or
stc
add
outsl
aaa
add
ja
mov
das
lods
js
pop
inc
mov
je
jo
mov
mov
loope
shrb
sbb
pop
inc
ja
xor
fisubrl
and
emms
jae
push
loopne
dec
test
aad
mov
mov
xor
pushf
lock
sub
push
inc
jmp
data16
xchg
mov
daa
xchg
adc
dec
mov
test
dec
sub
mov
lea
out
pop
mov
sbb
pop
iret
out
pop
xchg
incb
jnp
stc
rclb
into
jmp
sub
fidivrs
pop
rol
cli
shll
repz
sarl
sahf
insl
ss
sbb
fisubl
add
sahf
jne
mov
loopne
dec
jg
adc
inc
iret
cld
inc
push
xor
fisubs
in
mov
mov
push
pop
insl
or
cmp
rcl
xchg
jns
sarb
subl
mov
xor
inc
mov
and
pop
in
sbbl
rcrl
addr16
pop
outsl
popa
cmpb
jno
cmpsl
inc
in
lods
inc
bound
mov
mov
ss
or
dec
test
ds
das
sbb
in
stc
push
add
cmp
stos
push
cmpb
xchg
cmp
lea
dec
push
imul
das
out
in
pushw
mov
stos
and
sti
ret
hlt
das
cmp
mov
mov
xchg
jl
jne
cltd
ljmp
sbb
out
out
cmp
loop
inc
xor
fsubrl
enter
dec
rcrb
stos
lock
jns
inc
imul
mov
je
lods
ss
sbb
mov
sbb
sahf
pop
xchg
push
or
pop
lret
rcll
adc
decb
sbb
xchg
psubd
push
shrl
mov
adc
insb
fsubrs
xchg
loope
xchg
add
arpl
adc
fbstp
faddl
xchg
push
jmp
stos
sti
lret
push
js
push
mov
dec
mov
adc
sub
insb
inc
fcoms
cwtl
out
xor
js
mov
int
push
and
add
push
pop
dec
sbb
push
sbb
dec
add
sbbl
arpl
inc
dec
pop
pop
xlat
push
add
stc
mov
xor
cs
mov
xchg
ret
jnp
int3
mov
test
xchg
popa
sub
lock
and
push
pusha
int
sub
aam
pop
ds
gs
add
adc
or
add
loop
sbb
push
xor
mov
fwait
notl
pop
mov
add
xchg
imul
ljmp
dec
loopne
femms
es
pushf
dec
xchg
xor
or
lahf
orb
loope
nop
mov
inc
sbb
aad
cwtl
es
insb
loopne
lret
mov
int
jnp
dec
rolb
and
ret
push
iret
add
and
mov
cwtl
pop
outsb
jmp
push
sbb
xor
dec
jae
xor
pop
xchg
mov
in
jns
pushf
ret
dec
sbb
fnstcw
out
cwtl
add
and
push
lcall
jno
pushf
cmp
push
idiv
lock
subb
sahf
mov
xor
cmp
dec
jne
insl
insb
outsl
jmp
jae
lcall
call
pop
jae
cmp
cmc
adc
shl
add
mov
nop
lock
sbb
and
or
and
sbb
movsl
inc
fadd
cltd
and
int
pop
and
sub
and
jb
pop
test
clc
leave
push
add
dec
sar
lods
push
and
jg
sbb
fldt
jl
mov
pop
xchg
or
sbb
cwtl
sbb
jmp
pop
fwait
incl
aas
scas
inc
and
mov
sub
cmc
sbb
mov
jo
and
mov
mov
or
pusha
mov
loope
fldln2
loop
lret
jmp
shlb
push
add
xor
popf
test
mov
mov
inc
fsubs
outsb
push
or
fwait
ret
popl
pop
jnp
sti
clc
movl
adc
int3
bound
xlat
mov
cmp
jne
sub
rcrl
xlat
comiss
adc
adc
cltd
or
jnp
add
iret
jecxz
rolb
dec
mov
subl
mov
pop
loop
pusha
jle
testl
orb
js
push
adc
sub
add
jo
movsb
lahf
jp
xchg
jae
and
sub
xor
push
xor
push
sahf
sbb
stos
movb
xchg
out
add
in
mov
adc
outsb
pop
mov
cmpsb
andl
xor
fildll
or
adc
outsl
lret
shrl
enter
loope
movsl
inc
mov
popa
jmp
xchg
jecxz
sarb
aaa
fnsave
repz
or
xor
lods
mov
lods
jne
cltd
inc
sbb
push
lret
popa
seta
push
jne
aad
xor
scas
popf
dec
mov
stos
cmp
mov
jne
fwait
clc
shlb
mov
cld
repz
push
mov
mov
pop
pop
dec
mov
pop
xchg
adc
pop
xchg
clc
xchg
out
inc
and
dec
movl
cmp
xor
push
lods
inc
outsb
and
lret
or
sbb
out
andb
scas
pop
mov
sahf
mov
cmpsb
push
stos
cmp
xchg
stc
jp
leave
shrb
mov
jnp
jl
insb
mov
fbstp
xlat
pushf
outsl
xor
loope
push
aam
leave
mov
sbb
jg
add
pop
cmc
jns
jo
jns
adc
outsb
hlt
dec
mov
dec
and
sahf
mov
scas
sbb
fisubs
in
add
sub
xor
sbbl
or
aaa
push
lods
loope
sub
xor
fwait
xchg
dec
mov
test
push
xchg
call
mov
sbb
ljmp
data16
pop
rclb
jno
pop
xchg
mov
sub
inc
jo
mov
inc
mov
enter
or
mov
mov
nop
cwtl
jg
mov
xchg
stos
dec
in
cltd
popl
push
ficompl
ds
cmp
in
mov
xchg
loopne
sub
inc
pop
dec
pop
enter
or
les
sti
jp
xchg
data16
pop
sbb
flds
and
or
mov
outsb
and
mov
notb
pop
scas
mov
jne
or
aam
mov
les
and
xor
xor
mov
mov
or
xor
std
dec
add
subl
int
push
enter
xor
xor
cmp
cmp
mov
jg
mov
ss
in
out
aam
mov
loopne
xor
in
or
and
jo
imul
aad
or
gs
les
jbe
je
jns
in
cmp
pop
loop
xchg
imul
sarl
sbb
xchg
sub
mov
add
and
push
outsb
mov
sbb
scas
test
fadds
rorl
mov
xchg
mov
cmp
jne
and
jnp
lods
inc
cwtl
pop
xor
dec
jno
minps
mov
sub
adc
xchg
and
cmpl
and
fucomi
pushf
jnp
xchg
dec
xor
mov
xor
sub
xor
cmp
imul
std
push
sbb
ljmp
ret
mov
das
push
pop
popa
imul
adcb
loopne
in
cmpsb
adc
cmpsb
add
fimull
test
jno
fs
sbb
jg
jno
xchg
mov
lret
dec
es
notb
mov
push
mov
js
add
pusha
xchg
ret
push
mov
or
mov
or
jp
std
mov
jb
dec
into
pusha
sarb
leave
scas
fistps
out
and
adcl
cmp
mov
jl
imul
outsb
pop
scas
mov
shlb
jns
mov
push
mov
add
or
fcoml
pop
xchg
adc
inc
cmp
push
sar
jbe
orl
fildl
stc
fwait
mov
popa
lret
mov
cmpsl
push
stos
inc
sbb
inc
sub
sbb
testl
aam
or
xchg
mov
mov
cmp
jnp
adc
cmc
inc
push
clc
jnp
les
shlb
adc
inc
repz
add
xor
out
test
andb
cmp
push
cmpsb
aad
inc
cmpsb
jp
and
mov
dec
pop
cmp
lret
pop
roll
mov
mov
lock
pop
xorl
test
testb
adc
sbb
sbb
or
jecxz
cmp
push
mov
daa
xchg
pop
xor
push
jb
push
and
adc
mov
jns
inc
inc
sbb
xor
sbb
cld
add
shl
mov
lret
test
icebp
stos
pop
xlat
das
inc
cwtl
into
outsl
leave
cmp
sub
pop
rclb
fistpl
jno,pn
cmp
xor
jge
in
sbb
mov
stos
iret
push
add
cmp
sbb
repz
adc
mov
out
jno
pushf
jno
daa
adc
push
mov
shrb
lds
cmpsb
stc
sbb
push
imul
cltd
sub
push
int
out
dec
and
pop
dec
dec
arpl
adc
je
dec
out
push
add
lods
pusha
adc
je
dec
adc
jg
nop
xchg
and
pop
xor
or
aad
jle
lahf
ret
repz
test
dec
int
lahf
decb
push
add
jb
popfw
cmpsb
mov
ja
lods
xor
push
lock
push
mov
imul
sbb
les
fistpll
aad
lahf
jae
jnp
xor
sub
stos
xchg
mov
into
xchg
jecxz
stc
jo
ret
pop
stos
mov
call
or
ds
into
js
fistps
shlb
and
inc
lods
xlat
in
mov
push
cmpsl
jb
lods
push
sub
mov
pushf
mov
push
cmpsb
adc
cmp
push
outsb
push
push
xor
in
sub
xchg
pop
icebp
jbe
xor
imul
inc
push
in
inc
fcomps
mov
jl
pop
sahf
cwtl
movsb
ljmp
cmc
sbb
in
jle
and
jmp
shrl
mov
cmc
movsl
loope
daa
ret
leave
cmp
daa
dec
push
lds
aas
imul
je
in
pop
lds
lahf
xchg
rclb
iret
leave
jl
inc
jo
cmp
and
roll
adc
lcall
shlb
mov
mov
fcmovnb
lock
cmc
aas
push
rcl
ljmp
fistpll
cmp
jl
scas
fwait
adc
les
lock
test
loope
xchg
jl
push
enter
adc
xor
lock
stos
mov
test
shl
adc
pop
lret
sub
jl
imul
dec
sub
jp
adc
sbb
mov
shl
stc
sbb
or
mov
shll
mov
pop
push
push
sahf
inc
repnz
lret
push
daa
push
mov
sbb
jge
and
loope
std
xchg
mov
inc
sub
sub
adc
mov
data16
jmp
imul
xor
je
mov
test
cmp
jnp
in
or
fbld
or
ss
fs
imul
cmc
fstps
arpl
loopne
mov
es
inc
pop
pop
dec
mov
jne
scas
jae
cltd
cld
fsubrs
test
pop
fmuls
ljmp
imul
loope
ja
in
fdivs
xchg
subb
filds
inc
cltd
dec
pop
mov
jne
xor
cmp
dec
jecxz
stos
xchg
dec
pop
mov
stos
ljmp
push
and
test
xchg
adc
add
add
andl
or
adc
cmc
xor
in
sbb
or
xorl
js
mov
dec
push
push
mov
xor
push
mov
cmp
lods
aad
filds
test
adc
in
loop
mov
in
hlt
js
les
negl
mov
mov
es
es
shl
movsb
inc
mov
rcrb
orl
bound
and
push
fs
insb
xlat
pop
lock
pop
cwtl
adc
int3
notb
ss
ss
and
les
adc
mov
es
mov
jno
outsl
fnstsw
les
inc
daa
scas
push
loopne
dec
or
pop
pop
lcall
cltd
fnstsw
repz
jp
test
cwtl
mov
adc
xchg
lock
mov
push
lahf
and
fs
push
lods
mov
adc
inc
dec
adcl
imul
cmpsb
arpl
imul
std
lea
jmp
sub
xor
jo
jge
lods
stos
or
jne
fs
inc
repz
xchg
scas
pop
push
mov
sub
sub
addl
ja
sbb
test
shll
test
call
nop
inc
xor
push
es
mov
pop
push
insl
imul
dec
inc
push
push
outsb
mov
stc
add
sub
xchg
push
cmp
add
pushf
sti
and
popa
sbb
jnp
jae
movsb
adc
push
int3
and
push
or
iret
inc
pop
popf
push
int3
adc
scas
pop
rorb
push
mov
lret
dec
sub
test
out
dec
lds
mov
jbe
cld
push
mov
stos
movsl
call
jge
ss
adc
jmp
bound
ret
inc
pop
jo
shr
mov
stc
sub
mov
shll
gs
xchg
jecxz
lea
mov
jg
sbb
xchg
iret
lret
in
popa
dec
lock
fisubs
xchg
sbb
cmp
pop
js
inc
sahf
aaa
fs
repnz
and
out
into
lods
add
fsubrp
outsl
xor
cs
jb
inc
insl
fistps
push
shl
adc
gs
cld
jnp
lret
movsl
iret
jge
jae
mov
loopne
dec
push
repz
adcb
or
xor
pop
in
lret
dec
imul
add
cmp
sub
and
hlt
fisubl
and
sti
mov
mov
or
sub
loop
cmp
lock
pop
bnd
stc
or
jne
in
popa
into
stos
inc
stos
aad
loop
mov
loope
add
cmp
and
sbb
mov
subl
les
dec
cmp
ds
call
inc
fsubl
and
cli
push
and
xchg
pop
sbb
arpl
sarb
outsb
adc
jmp
push
mov
pop
adc
lods
inc
adc
out
jg
xchg
sbb
icebp
mov
dec
pop
stc
stos
loopne
sbb
mov
fdivr
dec
das
test
test
inc
push
popa
pop
xchg
mov
daa
lock
inc
cmpsl
scas
sub
inc
push
jb
addl
pushf
sub
sub
xor
xchg
cmp
jg
sar
mov
push
push
or
lret
jge
dec
cmpsb
xchg
mov
push
out
mov
stos
pop
sbb
sub
lds
psrad
jecxz
or
push
xor
fistpll
add
jp
xor
mov
push
push
pop
xchg
out
adc
adcl
mov
jbe
xchg
inc
and
pusha
fmull
mov
popf
cmp
dec
dec
mov
fcoms
stos
std
add
popa
xor
push
out
testb
mov
enter
pop
clc
or
or
mov
fildl
jne
imul
nop
cmpsl
lock
or
pop
fisttpll
inc
sbb
sti
call
push
push
imul
xchg
nop
jmp
hlt
push
fisubrs
sub
orb
ss
cmp
scas
jnp
mov
push
add
jbe
roll
cmp
daa
mov
jb
lahf
add
lds
jle
and
cmc
movsb
testl
dec
jae
add
in
xchg
jbe
add
xchg
inc
jmp
test
pop
movsb
and
pop
pop
jnp
push
stos
fs
cmp
inc
push
aam
mov
sub
adc
add
cmp
andb
add
idivb
sub
jb
xlat
gs
mov
pop
inc
push
jno
xor
cmp
adc
pop
fld
mov
in
dec
ljmp
insl
sbb
adc
ljmp
mov
and
add
push
jb
mov
push
std
aam
adc
arpl
and
mov
cmp
mov
test
pop
inc
movsl
push
test
fisttpl
mov
sbb
inc
cmpsb
inc
cmp
std
lea
or
lret
mov
out
icebp
lods
stc
jb
divl
pop
and
addr16
adc
mov
popf
lahf
dec
sbbb
inc
stc
pop
xor
stos
mov
jbe
pop
fnstenv
push
adc
lea
les
inc
or
jo
mov
dec
and
dec
inc
sub
sub
test
scas
sbb
pop
orb
mov
adc
or
jp
ret
pop
out
push
xchg
insb
ret
pop
call
cltd
sbb
in
jp
mov
push
pop
iret
stos
push
out
mov
jns
push
push
push
jo
mov
leave
xor
enter
xchg
shrb
out
inc
dec
fs
mov
inc
lcall
lods
sbb
and
add
aam
test
add
test
push
hlt
clc
idivb
in
icebp
cmpl
jmp
in
gs
xchg
push
psubusb
rsm
addr16
out
sarb
clc
out
js
repnz
loope
inc
andb
xchg
push
ss
loopne
repnz
mov
xchg
into
jle
xlat
sub
sub
loop
push
scas
xchg
fwait
adc
jbe
fsubrs
mov
je
cmpsl
sbb
imul
ret
lods
test
inc
rcrb
cmc
jg
jg
fisubrl
das
icebp
adc
faddl
fidivl
xchg
inc
fstp
cmp
jns
pop
xlat
mov
popa
push
outsl
ljmp
sbb
aaa
dec
cmp
jmp
loope
mov
or
jl
popf
cmpsl
cld
xor
inc
mov
mov
add
stos
in
aam
rcl
cltd
test
mov
cld
fstpl
cmc
out
push
es
or
pop
inc
movsl
scas
jne
frstor
adc
cs
jne
cmpsl
out
mov
inc
lds
push
push
movsl
ret
fcmovnbe
mulb
loop
mov
push
mov
lcall
inc
aaa
inc
repnz
and
push
ds
adc
test
ss
movups
mov
adc
pop
popf
pop
in
add
das
sbb
and
ja
sahf
pop
insl
push
incl
jl
stos
xchg
or
jo
push
adc
sbb
cli
xchg
sahf
sbb
rol
dec
mov
dec
cli
xchg
loope
int
mov
popf
hlt
mov
xlat
imul
mov
aaa
subb
jecxz
test
ss
inc
push
ds
dec
lret
fistl
mov
pop
jbe
lret
dec
or
addl
add
dec
xor
pop
jl
sahf
popa
xlat
lea
aam
sbb
xor
adc
popf
push
cli
lds
stc
rorb
and
xchg
add
mov
add
push
ss
sub
lods
nop
xchg
push
lods
adc
orb
rcll
cmp
ljmp
mull
pop
jnp
pusha
mov
inc
mov
xchg
push
movups
cld
and
adc
xchg
add
test
mov
stos
xchg
out
out
push
aam
add
and
push
push
mov
in
rcr
int
cmp
shrl
dec
rcrl
sbbb
lds
mov
hlt
jno
mov
flds
cmpsb
mov
movsl
pop
aaa
add
ds
xchg
loopne
pop
fmull
fstps
jecxz
jmp
fistpl
add
rorb
mov
mov
sbbb
xchg
sbb
ret
inc
push
lock
mov
faddl
mov
movhps
lds
mov
sbb
mov
mov
mov
ret
adc
add
je
call
call
call
jl
or
cmp
xor
scas
out
test
cmpsl
xchg
sub
jbe
or
pop
sahf
dec
outsb
mov
pop
mov
cli
ds
sub
sbb
or
pop
sahf
dec
outsb
mov
pop
mov
cli
ds
std
fisubs
or
pop
lahf
dec
push
jle
inc
lcall
or
cs
shrb
inc
sbb
or
ficompl
dec
outsb
inc
addl
pop
jb
adc
cs
sbb
lea
jae
loope
pop
lea
popf
push
in
jle
outsb
int
int
dec
mov
sbb
out
dec
ficomps
lods
ds
push
lods
adc
outsb
int
fisttpll
mov
lds
push
ficomps
leave
ds
or
xchg
cmp
int
out
divb
fidivrs
xchg
push
jbe
ljmp
jbe
cmp
jle
aad
adc
in
shll
ret
inc
std
imul
rol
pop
dec
leave
rorl
or
adc
cmpsl
int
and
sarl
or
inc
sub
mov
pop
std
imul
icebp
sti
push
mov
mov
fsts
mov
xor
arpl
adc
nop
int3
push
fisttpll
lret
sub
jbe
addr16
mov
out
sarl
loope
or
pop
shll
or
jecxz
xchg
call
sahf
das
mov
sbb
scas
cmp
jbe
imul
incb
into
imul
cs
push
lods
push
movsl
jle
outsb
lcall
daa
inc
mov
mov
fwait
adc
lods
inc
out
das
call
cmp
mov
lret
jg
jl
add
sbb
lret
push
lea
imul
and
push
out
in
dec
jmp
sarb
dec
ficomps
lods
ds
push
in
jle
outsb
int
fisttpll
mov
sbb
out
dec
ficomps
lods
ds
push
in
jle
outsb
int
fisttpll
mov
fisttpll
adc
xor
ljmp
sbb
add
repz
xchg
loop
or
xchg
movsb
xchg
and
xchg
stc
psraw
inc
xor
ficoml
inc
popf
and
cld
scas
add
lret
jns
jmp
pop
rcrl
mov
and
out
adc
sbb
movsb
pop
adc
ret
into
jnp
dec
in
jbe
test
inc
jle
in
jmp
jb
jne
call
sub
out
mov
call
and
add
and
out
push
lds
sarl
sbb
mov
push
test
mov
xor
jp
leave
cmc
shlb
shl
ss
mov
add
jp
sbb
add
xchg
jmp
shl
lods
popa
sub
roll
mov
push
dec
and
push
adc
dec
rcll
sbb
outsl
fsubs
mov
push
mul
add
jnp
xchg
stos
mov
ffreep
movntq
sti
aas
or
aas
or
jae
inc
jl
mov
pop
mov
adc
lcall
outsb
add
jecxz
faddl
jle
lea
pusha
aam
into
mov
mov
mov
or
fidivs
cmp
mov
mov
movsl
adc
and
shlb
or
add
imul
es
sub
ds
jp
cld
or
inc
pop
pop
mov
shlb
xchg
jp
and
shll
mov
test
insl
imul
orb
ljmp
xor
ret
mov
sub
rep
stos
sarl
repnz
mov
negl
lret
mov
test
cmp
sbb
xchg
dec
inc
aaa
fidivs
mov
sub
xor
sahf
fdivp
out
xchg
loopne
nop
adc
dec
into
xchg
cmpsl
xchg
lcall
adc
lock
scas
into
fcoms
add
sahf
dec
fcmovne
push
repz
mov
cmpsl
xchg
sbb
lcall
add
js
data16
es
leave
sbb
faddl
pushf
mov
add
or
popa
int
lcall
cmpsb
and
jp
into
lahf
cmpsb
aas
xchg
inc
mov
cs
pushf
dec
mov
jl
mov
mov
ljmp
data16
in
imul
push
inc
mov
mov
jno
ljmp
adc
jnp
xor
fs
sub
sub
imul
subb
mov
cmpsl
push
fwait
sbb
dec
stos
aam
popa
or
inc
mov
daa
jecxz
xchg
dec
xchg
push
les
cmpsb
xchg
adc
mov
pop
icebp
ds
movsb
and
inc
cmp
fwait
mov
ljmp
fprem
jns
fstl
int3
jb
cmpl
lcall
insl
dec
jns
hlt
scas
lahf
jp
int3
mov
jp
ret
mov
bound
xchg
stos
sbb
icebp
sbb
inc
jb
cmp
add
mov
frndint
mov
fmulp
es
insl
insl
enter
bound
ret
out
imull
xor
xchg
ss
dec
clc
pop
les
ss
xchg
xchg
fiadds
push
mov
inc
add
divl
mov
mov
jp
test
inc
fidivrs
imul
sub
in
push
je
push
call
mov
xchg
cmpsb
mov
dec
repnz
cmc
dec
movsb
sbb
outsb
xchg
mov
insb
or
fstp
sahf
jb
fdivrs
mov
ljmp
or
addl
test
orl
imul
in
fstl
and
imul
stos
out
daa
outsl
sbb
mov
pop
add
jns
dec
xor
loope
fs
subl
xor
pop
jnp
faddl
push
push
outsl
rolb
mov
cs
jns
je
mov
leave
or
mov
jmp
hlt
stc
fisttpl
sub
and
out
rcll
jo
ds
xor
xchg
clc
mov
cli
call
shll
pop
sbb
sbb
mull
push
mov
ret
shl
jle
or
pop
fisubrs
cmp
lcall
adc
dec
fcoms
pop
xchg
aad
mov
dec
ss
jecxz
dec
sarb
jge
imulb
lea
pop
sahf
jl
pop
jg
add
push
pop
out
enter
mov
add
sbb
jmp
lahf
in
push
addr16
or
in
ljmp
cltd
sbb
or
sahf
std
pop
in
fsubs
xor
std
inc
call
pop
int
outsl
push
je
and
inc
mov
iret
mov
sti
movsb
popa
mov
dec
mov
xor
cld
and
test
xlat
icebp
adc
cmpsl
mov
repnz
lods
inc
lea
ss
and
fadds
adc
movsb
inc
rcr
lahf
xchg
adc
popa
js
ss
and
pop
ja
xchg
sub
dec
adc
hlt
cmpsb
aas
jg
enter
cmpsl
lret
mov
push
xchg
xchg
cmp
and
cmc
pop
mov
mov
andl
dec
je
mov
ss
mov
subb
aas
push
sbb
add
mov
jnp
jge
adc
pop
mov
insl
lock
call
inc
adc
or
xor
xchg
mov
mov
mov
daa
cs
mov
sahf
test
cmp
pop
mov
xchg
sar
xchg
jge
sahf
fistps
loop
fsub
mov
lock
je
aam
jns
popf
aam
mov
push
fildll
adc
jecxz
fs
call
xchg
repnz
lahf
lcall
cltd
int
pop
pop
pop
jae
gs
mov
outsl
fimull
fidivl
and
sbb
icebp
sbb
data16
mov
adc
sbb
inc
or
cwtl
int3
and
shrb
xor
jnp
push
lods
jb
jo
fidivrs
sbb
or
push
int3
test
fstpl
inc
push
js
xchg
mov
mov
orb
call
mov
scas
movsl
insl
or
ljmp
sub
fiaddl
adc
ret
mov
iret
sti
jl
cmp
pop
xor
cmp
outsl
out
or
mov
les
aas
mov
or
cmp
adc
pop
jl
adc
push
fstpl
lcall
js
dec
mov
test
jbe
pop
jg
sbb
cltd
mov
cmpsl
ret
dec
jbe
test
lret
loopne
pop
inc
mov
movsl
pop
daa
jle
movsb
test
mov
mov
mov
or
pushf
loope
xchg
decb
ljmp
xor
jmp
inc
popf
sbbb
or
xorl
mov
or
cli
in
jle
outsl
mov
inc
push
aas
pop
jl
dec
into
xor
in
in
and
movsl
lock
mov
push
adc
xchg
lock
jl
filds
mov
test
stc
rclb
xchg
jnp
xchg
dec
cmpsb
flds
or
jecxz
movsl
jecxz
or
clc
mov
jp
cmp
shrb
ja
mov
sub
int
aam
les
loopne
sbb
sbb
push
adc
pop
jl
inc
mov
adc
repz
int3
push
testb
pusha
and
mov
add
sub
pushf
out
mov
lock
pop
ret
rcrb
mov
aaa
cmp
out
rorl
sub
xchg
add
mov
xchg
push
mov
mov
push
jg
xchg
test
add
nop
lods
sbb
les
jle
ficoml
sub
dec
mov
loop
cmp
hlt
dec
dec
out
dec
dec
gs
push
fwait
add
adc
imul
call
inc
loop
jmp
adc
call
cs
lds
ret
lcall
mov
insl
jl
xor
fs
repz
sub
jne
adc
xchg
pop
rclb
adc
dec
jb
adc
mov
aaa
pop
sub
lret
stos
mov
cmpsb
mov
dec
xchg
mov
sbb
dec
lods
cmp
insl
jp
dec
out
xchg
cld
shlb
int
mov
in
divl
cmp
leave
into
andl
ret
or
sub
adcl
inc
lahf
mov
pusha
mov
push
xchg
xchg
in
ds
add
sub
loop
out
xchg
insb
and
test
cmp
ja
adc
xor
or
aam
jo
aad
mov
jp
jl
iret
push
out
aaa
mov
mov
fs
mov
push
sbb
imulb
inc
cli
inc
test
inc
arpl
daa
inc
inc
push
stos
cmp
imul
mov
adc
int3
jb
mov
inc
cmc
sbb
add
cli
pusha
pop
das
push
lret
mov
pushf
iret
pop
mov
and
push
daa
pop
mov
push
fs
movsl
in
fnstenv
das
aad
mov
adc
lret
jecxz
cmpsb
fdivrl
sbb
insb
fisubs
cld
pop
cmp
outsb
or
popf
in
push
jecxz
fistpll
or
fcoms
xchg
fldcw
mov
popf
inc
imul
jp
mov
jge
int
daa
stos
mov
stc
cmp
out
pop
pop
in
std
push
rcrb
btc
fxch
nop
cmp
pop
ljmp
cmp
mov
jge
or
jae
mov
and
cmp
cmc
sub
mov
cltd
movsl
push
mov
popl
cmp
sbbb
push
xorb
in
sbb
mov
lods
in
test
outsb
xor
mov
scas
jp
push
or
fcompl
push
mov
add
push
inc
in
aaa
mov
or
es
sbb
or
pop
sti
insl
push
cli
negl
or
push
outsb
jnp
je
test
mov
sarb
ja
adc
shrb
cmc
mov
mov
push
stc
or
sahf
jno
xchg
xor
inc
mov
rorl
inc
leave
push
jge
pop
data16
sbb
push
sub
xor
push
sub
js
add
pop
push
push
inc
jmp
adc
fnsave
sbb
loop
aad
jmp
inc
in
xor
xchg
mov
xchg
out
int
push
cli
pop
adc
andb
lret
jl
jge
movsb
xchg
nop
iret
shlb
dec
dec
push
dec
sti
std
pusha
cli
inc
and
test
jp
add
ljmp
mov
dec
xchg
dec
sbb
or
and
mov
ret
jge
pop
lods
fidivs
into
cmp
pop
pop
pop
xchg
lods
icebp
push
pop
subl
lods
out
jb
and
or
sahf
rolb
add
sbb
imul
mov
sub
jp
aad
xor
js
mov
roll
shl
out
jp
add
aaa
mov
fdivr
pop
pop
pushf
dec
pop
test
hlt
frstor
jbe
mov
dec
nop
imul
movsl
fmull
jb
out
arpl
xor
mov
xor
and
hlt
and
leave
mov
xchg
mov
nop
or
lock
test
push
lahf
xor
cmp
jnp
mov
out
mov
push
xchg
addb
shl
popa
push
jmp
jl
or
imull
out
jmp
jns
push
stc
xorb
cmp
adc
jg
loop
repz
xchg
repnz
mov
in
cmp
adc
jo
test
imull
loopne
scas
cmp
pop
xchg
xchg
pop
add
inc
rol
pop
repnz
orl
or
loopne
cld
xchg
add
adc
inc
testl
pop
jp
mov
push
int3
icebp
pop
sbb
push
and
movsl
mov
popa
push
lahf
addr16
iret
inc
in
mov
scas
lcall
sbb
xchg
aam
mov
scas
add
ret
sbbl
sbb
les
push
sbbl
xchg
insl
or
mov
lret
addr16
add
ss
insl
mov
out
outsl
popf
mov
loop
loope
and
ss
xchg
mov
adc
or
outsb
push
mov
sbb
add
stos
inc
xor
cmp
sarb
loop
jb
xor
aad
loop
cmp
jo
stc
call
stos
mov
push
and
and
xlat
or
mov
aas
pusha
test
sub
sbb
movsl
loope
cmp
cld
insl
cmp
sub
loopne
ds
or
mov
fs
xchg
test
lods
clc
jae
sub
jae
or
adc
jae
push
inc
fistps
xchg
mov
add
lcall
sbb
xchg
inc
ss
jmp
or
cmp
addr16
das
iret
int3
pusha
mov
adc
je
add
push
sar
cmp
sbb
lock
dec
xor
gs
mov
xor
dec
popa
cltd
cmpl
sub
xor
sub
outsl
test
test
ljmp
mov
push
mov
and
cltd
in
ret
jne
fdivl
push
push
cld
mov
lods
out
mov
push
inc
mov
add
imul
and
xchg
aam
cmp
or
aas
mov
movsb
mov
inc
mov
rclb
and
stos
mov
movsl
imul
mov
sub
into
pop
and
test
or
mov
jl
mov
lcall
shll
out
imul
add
outsl
cwtl
testb
ficomps
mov
mov
jb
roll
jmp
pop
pusha
adc
adc
lsl
dec
add
sarb
xor
adcl
and
cwtl
fadds
pop
repz
add
cwtl
xor
jp
or
in
hlt
mov
jne
jns
fnstcw
fs
pop
subb
cmp
push
ds
rorb
cli
mov
frstor
pop
out
mov
push
dec
mov
fsubrs
jns
popf
aad
mov
push
sbb
aad
test
cmc
cmpsl
jg
loopne
and
or
xchg
xchg
dec
andl
scas
xor
mov
cmp
sbb
mov
cmp
jnp
int
adc
lods
inc
pop
in
dec
lea
inc
aaa
xor
sub
rcl
outsl
add
mov
mov
dec
je
fwait
sbb
js
pop
push
xchg
ffreep
push
jmp
xchg
xchg
hlt
dec
xor
sti
and
mov
in
dec
leave
adc
jne
sti
push
es
shll
js
inc
int
bnd
lock
push
xchg
insl
popa
jb
test
mov
jnp
stos
inc
daa
mov
fmulp
cmc
mov
jle
add
ret
ljmp
cwtl
mov
repz
les
sbb
sbb
add
loopne
jae
mov
dec
xchg
lods
mov
pop
jmp
pushf
xchg
jnp
inc
aad
fcmovne
mov
test
lret
ss
lret
aaa
pop
lret
add
xor
cmp
stos
jno
xchg
xor
add
inc
jns
sub
fwait
and
add
je
mov
lds
out
dec
mov
test
outsl
sbb
outsl
add
cmp
clc
inc
push
xor
push
filds
out
je
pushf
scas
pop
int3
out
mov
xor
and
ds
aam
les
fwait
jno
xor
into
xchg
cs
cli
out
xchg
pushf
add
shlb
push
adc
sti
inc
sbb
es
cmpsl
add
jmp
xchg
inc
imul
imul
dec
mov
add
ljmp
rcrl
enter
fdivrl
jecxz
jmp
nop
mov
push
mov
test
subb
push
rclb
adc
out
push
cmp
xchg
push
dec
inc
out
cmpsb
or
sbb
xchg
sbb
mov
xor
pusha
xchg
pop
ffree
aam
ja
mov
sub
mov
ss
aaa
lret
xchg
stos
fcomip
pop
sub
das
mov
stc
push
jo
dec
jmp
sub
sub
sub
sbb
orb
icebp
out
out
and
add
aam
call
jne
mov
add
mov
xchg
test
rcrb
cmc
sbb
call
pushf
push
mov
std
add
testl
push
aad
stos
iret
mov
repnz
jl
adc
pop
js
loope
jns
adc
loopne
ljmp
dec
ror
dec
push
movsb
imul
xchg
or
mov
scas
ret
ja
cli
lds
sub
repz
mov
fdivr
std
in
rcll
inc
pop
pop
mov
sbb
pop
mov
in
pop
xor
dec
cmp
cmc
adc
inc
pop
movl
pop
out
mov
in
outsb
in
mov
jae
xchg
shlb
mov
mov
leave
fstps
push
xor
insb
push
out
add
cli
roll
mov
mov
add
xchg
cs
inc
movntq
xor
add
fcoml
adc
sbb
cmp
mov
mov
sub
mov
fstpt
aaa
cltd
shll
inc
mov
or
cmp
subb
xchg
out
dec
adc
in
cli
lock
mov
cmp
xlat
loope
das
stos
cmp
ljmp
out
adc
adc
jge
sbb
push
lock
fbld
jns
ljmp
and
test
fnsave
sbb
lcall
fimuls
repnz
mov
aad
mov
push
xor
icebp
popa
inc
fwait
pop
lods
jge
dec
mov
mov
inc
stos
adc
push
mov
fs
in
inc
daa
mov
call
in
mov
mov
arpl
test
or
lahf
sub
mov
mov
push
push
mov
aas
push
arpl
push
in
jae,pt
pushf
cmpl
adc
cwtl
fstpt
or
push
mov
loope
and
jecxz
add
outsl
xchg
movsl
repnz
xor
out
mov
lahf
add
das
stc
fnsave
loopne
xor
pop
sti
out
pop
mov
jae
pop
mov
cmpsl
popa
xor
sbb
shll
xor
scas
ficoms
iret
mov
es
sbb
decb
adc
xchg
cmp
xor
or
jne
pop
sub
mov
add
push
dec
pop
std
cwtl
scas
adc
sbb
xchg
nop
cld
push
popf
cmpxchg
cmp
test
andb
popa
cs
inc
dec
lock
mov
js
pop
out
inc
nop
stos
fnstenv
add
dec
inc
bound
jbe
dec
icebp
aas
jmp
int
adc
out
js
mov
cli
daa
jns
or
adc
dec
je
dec
stc
xor
cwtl
jp
dec
sbb
add
nop
dec
nop
or
jg
mov
scas
cltd
outsl
push
sub
xchg
ja
and
xchg
xor
add
mov
dec
mov
test
mov
sub
jne
cmp
lahf
pop
adc
mov
and
data16
push
mov
push
orl
mov
xchg
dec
sbb
xchg
mov
outsb
and
jecxz
je
inc
dec
xor
pop
add
outsb
cmp
fwait
mov
rclb
push
add
shrl
xor
sub
mov
xlat
and
sbb
sarl
ds
jl
push
lock
out
xor
mov
sub
clc
sub
xchg
jne
into
out
cmpsl
cmp
pop
xchg
add
test
add
ret
insb
push
xchg
pop
lods
lahf
lret
dec
ficomps
or
sti
pop
push
imul
push
out
lock
cltd
dec
inc
lcall
dec
pop
push
test
add
inc
jecxz
or
mov
clc
rcrb
pop
or
dec
stc
mov
mov
mov
hlt
sub
and
push
inc
xchg
pop
stos
pop
cltd
stc
adc
in
xchg
mov
hlt
jnp
ljmp
icebp
inc
imul
mov
jle
loop
in
fsts
scas
fsubl
test
push
inc
lahf
scas
dec
sahf
sbb
out
dec
ficomps
lods
ds
push
in
jle
outsb
int
fisttpll
mov
sbb
out
dec
ficomps
lods
ds
push
in
jle
outsb
int
fisttpll
mov
sbb
out
dec
ficomps
jge,pn
popf
push
in
jle
outsb
int
xor
scas
push
sahf
cmp
out
dec
into
lods
ds
test
push
popf
jns
divb
xor
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
mov
or
cmp
imul
mov
mov
int
std
sti
in
or
cmp
imul
mov
mov
int
std
sti
in
or
cmp
dec
cmp
push
sbb
stc
stos
inc
add
push
or
incb
push
push
aam
mov
pop
push
xchg
cmp
jg
ret
xchg
adc
imull
xor
mov
les
popf
pop
cmp
notb
lods
dec
into
roll
inc
pusha
cli
movsl
insb
or
dec
repz
sti
in
sbb
jle
cmpb
bound
mov
outsb
adc
mov
aad
push
shlb
dec
dec
je
jnp
dec
imul
push
pop
dec
or
roll
xchg
movsb
or
jl
cmp
push
push
sub
data16
push
aam
adc
cs
fwait
lea
fstp
int
std
sti
in
or
cmp
imul
lret
pop
ret
jmp
mov
mov
jno
sub
inc
dec
xor
or
cmp
into
mov
sahf
jecxz
xchg
test
popa
sub
inc
dec
xor
add
int
stc
leave
xlat
flds
std
sti
in
or
cmp
imul
mov
mov
int
std
sti
in
or
cmp
imul
mov
xchg
jl
sbb
mov
aad
gs
pusha
xchg
repz
pusha
xchg
jp
cmp
fiaddl
sub
es
jle
idiv
mov
into
lods
pusha
mov
stos
scas
mov
cs
mov
addr16
repz
xor
push
outsb
scas
nop
cmc
sub
cmp
rcl
int
push
imul
add
enter
mov
outsl
inc
out
mov
push
push
mov
fld
cmpsl
cmp
sbb
push
into
cld
xchg
hlt
pusha
pop
sub
dec
movsl
stos
xor
sub
aam
loope
out
adc
int3
xchg
mov
dec
and
dec
fwait
fs
cs
outsl
mov
inc
or
loope
adc
mov
mov
pop
lds
mov
lret
inc
dec
cmpsb
pop
jge
scas
pop
push
inc
adc
mov
sub
mov
jmp
jg
mov
into
sbb
das
cli
jb
or
push
fwait
pop
jmp
jno
loop
cs
lea
sub
lahf
and
in
ss
outsb
es
sub
jle
divps
pop
xchg
push
pop
in
adc
and
out
repnz
nop
cli
pop
rolb
dec
or
scas
ja
adc
call
sbb
and
push
dec
inc
int
aaa
stc
and
xchg
lods
ret
mov
or
dec
scas
pop
or
adc
push
shr
mov
stos
sbb
or
test
leave
into
push
jmp
inc
push
or
and
cmp
frstor
popf
fisubs
sarb
mov
ljmp
push
sti
psubusw
repz
imul
notl
mov
push
xchg
mov
test
sarb
nop
lds
mov
pop
or
push
sub
push
sub
inc
daa
clc
mov
jmp
fistl
in
sbb
cmp
inc
xor
and
dec
outsl
xor
in
pop
jecxz
xor
adc
push
insb
adcl
cli
repnz
dec
imull
cmp
outsb
int
aam
sub
test
cmp
mov
and
or
mov
ljmp
pop
call
adc
lret
out
pop
clc
dec
jge
xor
inc
daa
lcallw
stos
cmpsb
scas
inc
jmp
mov
inc
lds
xchg
xor
xor
cmc
pushf
pop
inc
out
fldcw
cmpsl
in
dec
pop
inc
arpl
jle
pop
push
jns
shlb
push
add
push
push
sbb
repnz
ret
inc
pop
fdivs
xor
movsb
add
sub
imul
dec
or
mov
pop
mov
fdivrl
xchg
fwait
js
lahf
addr16
push
mov
push
mov
pushf
fildll
fldl
les
jno
xchg
push
mov
icebp
push
mov
scas
jmp
push
dec
cmp
mov
cli
nop
cmc
inc
mov
sbb
mov
push
mov
aas
test
and
arpl
mov
fcompl
int3
jbe
cmp
jle
sbb
jnp
imul
dec
mov
cmpsb
cmpsl
jl
and
mov
jge
pop
xor
push
mov
lcall
sbb
mov
and
gs
fisubl
popf
dec
mov
xchg
or
ljmp
shlb
sti
pusha
jnp
stc
rcrl
pop
pop
cmc
mov
mov
cmc
sahf
mov
xor
add
loopne
arpl
xor
or
xor
std
pop
ror
les
pop
aaa
popf
xlat
adc
daa
pop
ja
scas
subb
jne
std
fisubrs
mov
outsb
xchg
jae
mov
mov
xlat
dec
dec
iret
mov
stc
mov
scas
mov
cwtl
jl
test
push
out
add
dec
dec
nop
sti
push
jae
fwait
or
pop
lods
add
fcmovnu
popl
sbb
cwtl
xlat
dec
loopne
pop
adc
push
xchg
pop
or
lods
std
cmc
xchg
mov
adc
sub
fadds
movl
inc
and
repz
pop
into
push
test
fwait
cmp
fwait
sarl
sub
and
add
mov
cmp
cmp
dec
negb
sub
mov
je
shlb
bound
push
jl
mov
daa
pop
xor
pop
adc
iret
rolb
xchg
add
loop
pop
mov
cmp
adc
fildl
arpl
or
push
sahf
sbb
push
xor
sub
les
mov
outsl
gs
addb
adc
shll
outsb
xchg
mov
mov
in
das
fwait
int3
push
xor
sub
aaa
mov
mov
loopne
test
in
inc
adc
test
push
xorl
jbe
inc
jns
pop
out
fidivs
in
sub
push
cmp
jecxz
cmc
push
mov
fstpt
jg
mov
int3
pop
mov
int3
test
sbb
fdivrs
or
xchg
mov
cmp
cmpsl
jmp
int
mov
js
push
mov
mov
scas
popf
jge
outsb
jle
bound
in
jp
push
jg
pop
mov
mov
or
jb
pop
push
mov
xor
mov
sub
mov
cmpsl
push
aaa
pop
cmp
bound
test
mov
stc
cmp
mov
popa
jns
pop
xor
fstp
mov
dec
aad
push
aas
jmp
outsb
leave
xchg
sbb
jo
ja
adc
inc
adc
sbb
adc
pop
mov
icebp
cmp
or
inc
xchg
push
pop
outsl
lret
xor
int
adc
mov
adc
outsl
adc
mov
mov
loope
or
push
lcall
hlt
notl
sbb
int
popf
rolb
lds
repz
push
or
sarl
outsl
aaa
dec
fldl
and
or
mov
mov
sub
mov
in
mov
test
adc
sub
stos
outsl
outsl
jg
daa
mov
xchg
push
cli
mov
clc
pop
adc
cmp
sub
hlt
fnstcw
push
in
arpl
push
xchg
cmp
add
push
nop
out
jb
enter
cmp
push
lds
cmc
cmp
ds
inc
xor
push
sub
jle
inc
jne
adc
or
add
rcrb
stc
pop
popa
dec
pushf
fadd
cltd
repnz
xchg
daa
cmp
mov
fs
adcl
and
in
sbb
jns
loopne
mov
rcl
pop
dec
sbb
popa
inc
scas
xor
aas
sbb
ret
cmp
add
shll
or
loope
and
test
sub
insl
mov
insl
mov
or
into
sub
int3
dec
ret
les
js
stos
je
mov
mov
ljmp
push
jnp
imul
hlt
or
adc
mov
sbb
lods
and
xchg
sub
inc
test
push
std
iret
mov
mov
sub
pop
cli
inc
loop
lods
xlat
fs
popa
inc
decb
mov
xchg
push
test
and
nop
pop
out
scas
xor
add
sub
mov
mov
dec
outsb
lods
adc
xor
dec
inc
mov
mov
rcrl
stos
xchg
sbb
mov
imul
loop
push
mov
dec
mov
lods
push
decb
mov
inc
or
es
test
jmp
xchg
push
imul
xlat
xchg
test
or
xlat
daa
or
push
mov
xor
xlat
add
dec
mov
xor
mov
arpl
sub
push
push
pop
out
push
sbb
inc
cltd
popf
push
push
fidivrl
stc
and
dec
subl
sub
call
mov
inc
enter
pop
mov
stc
jnp
jno
sbb
out
shlb
add
add
stc
push
inc
inc
pop
push
push
pop
dec
cmp
gs
mov
xchg
pop
fidivrl
inc
mov
mov
lahf
ss
addb
jno
mov
pushf
sub
jo
push
sbb
les
les
xor
out
cwtl
or
xchg
cwtl
sbb
mov
sub
push
test
or
xchg
out
add
xlat
mov
add
cli
outsl
sbb
mov
mov
aas
jne
mov
jo
test
inc
mov
pop
call
mov
stc
xor
mov
xchg
mov
les
adc
or
addr16
dec
sub
test
loopne
fisubs
rclb
daa
and
test
sbb
in
js
fimull
sbb
mulb
or
pop
cmpsb
sub
inc
sarl
xchg
push
movsl
xchg
mov
dec
or
push
int
lret
or
cmp
jp
pop
lea
fldl
data16
imul
enter
xchg
rcll
cmp
xor
push
imul
fwait
shll
xlat
stos
jae
xchg
es
rol
out
mov
sub
mov
out
mov
fdivr
jae
cmp
ror
jecxz
sahf
cmp
pop
xor
rcll
sarl
or
push
mov
and
das
and
popf
fidivrl
mov
test
mov
mov
pop
mov
jg
out
negl
pop
ret
cmpsb
daa
mov
push
subb
push
das
dec
push
inc
cli
daa
in
xchg
movsl
das
inc
xchg
outsb
push
arpl
ja
addr16
pop
mov
out
lods
lea
cmp
into
jb
jmp
push
imul
inc
aam
push
sub
lret
jge
jge
decl
inc
xchg
insl
pop
mov
das
push
inc
sub
jmp
xchg
adc
hlt
ja
fidivs
nop
rolb
dec
inc
lret
test
and
mov
sbb
lret
jno
cs
mov
push
fs
out
mov
xor
aas
pop
aas
es
fadds
lret
push
mov
cmpsb
cmc
add
push
jne
push
cmp
adc
int
jge
cld
out
sbb
in
aam
imul
push
cmp
cmp
adc
inc
movlps
adc
jl
pop
jmp
movsb
mov
hlt
cmpsl
xor
scas
int3
xchg
dec
lods
data16
push
or
add
repnz
push
testb
or
test
jns
repz
insl
je
sti
and
sbb
xchg
lods
leave
inc
jmp
cmpsb
aad
xchg
jmp
sar
out
shll
aam
push
xchg
addr16
into
jmp
pushf
loopne
inc
mov
push
pop
inc
jae
xor
cmp
mov
test
loop
dec
add
xchg
shlb
enter
idivl
scas
cwtl
or
xor
cmpsl
cltd
loop
dec
je
fcompl
xor
jecxz
test
bound
js
pop
imul
es
push
cld
outsb
test
outsl
cld
pop
xchg
mov
das
adcb
rcrl
enter
sbb
pop
adc
jp
data16
and
and
sbb
les
dec
in
daa
xchg
mov
jl
lods
std
xlat
mov
cmpsl
mov
imul
sbb
add
push
aam
pop
std
test
test
xchg
gs
sub
sbb
dec
pop
jmp
cmp
sub
mov
sub
mov
xchg
sbb
push
xchg
aam
xchg
aaa
mov
sbb
loop
push
sarb
mov
xchg
mov
lock
xor
popa
add
xchg
inc
lret
scas
inc
xor
cmp
scas
test
inc
cmp
add
jge
or
repz
jecxz
out
xchg
pusha
adc
mov
out
call
pop
mov
and
comiss
or
sub
scas
adc
les
stos
pop
add
outsl
add
or
add
inc
sahf
inc
lss
inc
aas
and
inc
in
cwtl
dec
inc
test
xchg
sub
mov
mov
sub
sub
mov
popf
inc
popl
andb
lret
test
aaa
es
mov
jae
push
jne
jnp
push
stos
in
xor
push
pop
test
jns
hlt
adc
jo
pop
xchg
leave
or
les
stos
stos
arpl
lcall
pop
ret
das
lea
mov
cmp
pop
mov
lods
jp
fadds
icebp
jns
add
lock
arpl
outsl
and
inc
xor
test
scas
dec
mov
test
mov
rorl
int
jmp
mov
fildl
movsb
jne
inc
jne
popaw
sbb
movsb
into
fdivrl
repz
insb
test
flds
incl
xchg
push
and
sub
lahf
sub
sub
cltd
mov
push
mov
iret
xor
jle
data16
push
pusha
insb
cmp
ss
push
int3
movsl
nop
adc
xchg
pop
daa
insl
lock
loope
jp
lods
and
push
addr16
push
mov
sbb
pop
xchg
outsb
out
xor
int
mov
pop
pop
stos
fcoml
imul
cmp
jmp
lods
xor
sbb
jbe
mov
sub
cmpsl
inc
mov
std
add
in
dec
out
rcr
push
in
data16
xchg
push
cmpsb
inc
add
fimuls
std
sahf
gs
mov
xchg
cltd
iret
xor
int
mov
insb
adc
xchg
mov
push
in
mov
insl
inc
fscale
add
call
cmp
or
and
inc
mov
test
mov
add
or
and
pop
push
cmpsb
push
mov
sub
adc
enter
add
imul
mov
lds
xor
push
ljmp
into
sbb
or
and
jg
movsb
popa
jno
mov
imul
jmp
rcrb
dec
lea
xchg
jp
in
iret
mov
sub
or
bound
out
mov
insl
xlat
jbe
jg
in
int3
out
or
sub
cmp
sbb
in
repz
data16
dec
inc
icebp
ja
jge
rcrb
mov
ja
rcll
push
lcall
outsb
and
mov
outsl
out
std
roll
pop
stc
fdivs
out
mov
scas
mov
into
es
cwtl
int3
stc
clc
incl
inc
mov
mov
lods
in
das
push
adc
idivb
inc
ret
test
add
mov
push
inc
stc
repz
mov
out
ja
sub
push
pusha
mov
iret
sub
fisubl
lds
pop
xor
fwait
sub
insb
push
xchg
sub
and
dec
adc
les
js
sub
insb
loop
xlat
cwtl
jbe
loope
fisubs
ret
into
pop
cmp
dec
cmp
pushf
lock
cwtl
lock
mov
fucomp
jmp
lahf
test
xchg
mov
cs
lock
imul
ja
add
test
lea
mov
pop
mov
popa
jnp
jo
push
repz
push
xchg
xchg
mov
popa
dec
add
jl
push
iret
mov
test
lds
mov
jo
jecxz
mov
fsubl
repz
pop
call
mov
mov
add
mov
xchg
jbe
adc
fdivl
inc
jae
mov
outsl
call
mov
mov
mov
lods
inc
and
adc
rorb
js
fmuls
inc
lcall
xchg
scas
jae
xor
out
or
pop
mov
push
into
scas
push
or
inc
icebp
mov
in
cmp
sbb
pop
xlat
out
sub
out
lret
jmp
cmp
xor
repnz
clc
sub
cmp
ljmp
out
lret
arpl
adc
or
dec
pushf
out
cmc
push
push
jno
xchg
test
xchg
mov
lret
jns
and
ffree
push
cmp
in
xor
jns
fwait
test
imul
and
sbb
jns
jns,pn
push
test
dec
daa
pop
js
into
int
packsswb
ds
or
push
imul
and
daa
mov
and
adc
ds
fs
push
mov
xor
lcall
lods
sbb
fstps
aad
ficomps
cmp
adc
stc
stos
addr16
outsb
inc
xchg
or
test
stos
pushf
loopne
shll
out
not
and
stos
pop
push
loope
lock
push
fdivrs
cmpsb
pushf
add
add
mov
inc
pushl
out
push
push
and
inc
push
push
add
cmp
les
mov
sub
or
xchg
mov
shrl
aam
jne
mov
adc
sub
pop
loopne
decl
scas
scas
sbb
insl
cs
imul
loopne
push
pop
ss
pop
sub
add
cmp
mov
xchg
mov
adc
repz
mov
or
dec
loope
pop
inc
xor
lods
call
xchg
sbb
testl
data16
mov
shll
cmc
into
add
mov
jp
inc
popa
fisttpl
pop
sbb
pop
mov
cwtl
jne
in
add
push
mov
cmp
mov
movsb
mov
jp
xlat
pusha
jb
sbb
push
sbb
insb
dec
sub
adc
leave
pop
mov
mov
xchg
and
dec
push
adc
nop
and
hlt
sbb
cmpsb
loope
jecxz
push
testb
sbb
out
mov
mov
lock
or
subl
mulb
bound
xchg
movsb
movsl
jne
pop
xor
insb
clc
push
push
movsl
gs
outsb
mov
xor
movsl
xor
bound
cmp
andl
jae
in
xor
dec
xchg
mov
or
xchg
mov
mov
sarl
popf
mov
loope
adc
fucom
ret
pop
jmp
aaa
in
testb
test
popa
fdivr
inc
jp
aad
pop
push
ficomps
jno
sbb
jno
adc
test
jns
icebp
pop
insb
sbb
sbb
or
xchg
in
in
scas
mov
mov
cmc
jne
lods
aas
aaa
into
pop
and
mov
pop
mov
pop
push
xor
jl
mov
xor
test
jns
fwait
sbb
fistl
inc
xchg
mov
hlt
jne
mov
pop
push
sbb
fbld
bound
cltd
lcall
push
add
jmp
decb
leave
pop
pop
mov
int
in
mov
arpl
aad
lahf
cld
test
pop
test
inc
faddl
lods
xchg
lds
popa
and
leave
lds
mov
inc
loope
repnz
xor
not
mov
enter
jg
or
and
push
mov
xchg
ror
xorb
aad
rclb
add
insl
or
mov
fdivl
xchg
and
hlt
fisubl
cltd
push
or
jo
pop
xchg
mov
leave
lea
stos
pop
test
pop
ss
jl
add
aas
sub
out
clc
cld
cmp
or
rcll
or
jmp
pop
dec
in
inc
aaa
jecxz
insl
int3
push
loop
push
inc
cld
cwtl
dec
pop
cmpb
out
sub
loopne
inc
iret
adc
cmp
das
es
add
mov
pushf
jbe
push
jnp
repz
mov
mov
je
in
repz
or
add
mov
push
pop
adc
icebp
pusha
dec
pusha
rcl
insl
repnz
addr16
jne
leave
or
mov
xchg
stos
push
inc
aam
xchg
in
and
mov
mov
pop
loopne
push
adc
jns
mov
test
push
jg
sbb
loope
jae
xor
insl
adc
test
sarl
inc
je
and
xchg
inc
lret
push
add
xchg
sbb
addb
push
movsb
ret
adc
dec
inc
enter
xor
and
add
xlat
into
pop
sahf
int
and
pop
divb
in
jmp
mov
in
pop
movsb
sub
push
icebp
push
cmp
sbb
pop
mov
jmp
shll
jle
out
xor
dec
int3
aam
push
call
dec
shl
ljmp
sbb
addb
lds
test
cmp
sub
paddb
in
sbbl
pop
jae
xchg
cmp
sbb
and
inc
out
jp
adc
cli
mov
xchg
out
add
cs
pop
ss
iret
les
ret
lea
lods
cltd
cltd
xchg
mov
jmp
dec
dec
inc
pop
mov
movsl
aaa
xor
mov
dec
scas
aas
dec
stc
mov
fldcw
cmc
inc
mov
mov
mov
insb
imul
sti
push
mov
xor
mov
rolb
or
sbb
cli
pop
scas
fisttpll
lret
fstp
int
std
sti
in
or
cmp
imul
mov
mov
int
std
sti
in
or
cmp
imul
mov
mov
int
cld
jnp
or
cmp
imul
mov
mov
dec
jmp
sti
adc
loop
cmpsl
cmpl
or
dec
mov
xor
xorl
sub
xor
sbb
push
stos
insb
cli
jl
pop
lcall
mov
sub
cmp
or
sbb
loopne
cli
cmp
sub
sbb
btc
mov
mov
xor
and
adc
or
push
cmpsb
jns
sbb
sub
repz
sbb
pop
and
and
adc
ss
fiadds
xchg
pop
push
idiv
dec
add
pusha
in
lds
cli
inc
rcll
add
sbb
jmp
pop
adc
push
jp
add
cwtl
clc
fs
add
call
mov
cltd
push
jl
jl
mov
pop
mov
mov
lods
bswap
das
cmp
xchg
sbb
fidivrs
lret
jecxz
aas
jmp
mov
jl
int3
cli
add
pushf
or
loop
add
sbb
add
icebp
pop
dec
bound
add
mov
ljmp
sub
aas
stos
or
lcall
pushf
dec
xchg
in
and
or
add
repz
and
adc
mov
cmp
leave
pop
mov
dec
mov
ja
sahf
inc
cli
inc
mov
add
das
out
dec
pushl
push
jp
das
cld
pop
cltd
pop
lahf
push
into
data16
mov
push
cli
pop
js
pop
iret
push
leave
adc
and
fldcw
in
pop
jmp
or
sbb
ljmp
sbb
insb
mov
pop
push
jp
dec
mov
sub
cmp
or
sbb
ljmp
sbb
insb
mov
pop
push
mov
popl
lds
mov
xchg
jecxz
je
nop
loopne
or
inc
pusha
mov
hlt
mov
push
add
push
shlb
push
push
into
add
pop
das
rcr
pop
mov
mov
ret
sbb
mov
xchg
ds
push
out
js
stc
in
push
xor
xlat
cmp
in
mov
cmpsb
cmpsl
in
cmpsb
dec
repnz
push
mov
gs
or
push
push
mov
or
inc
int
push
dec
sti
gs
subl
or
out
xchg
xor
fidivs
push
nop
jnp
jns
mov
push
mov
enter
dec
xchg
scas
and
cwtl
xor
fs
test
aas
cs
bound
aad
int
cwtl
test
out
jbe
cmc
dec
push
or
mov
push
icebp
or
test
nop
sbb
fistpll
out
or
popf
or
jne
orl
ds
mov
les
sbb
out
loop
dec
test
mov
dec
pop
ret
shlb
pop
scas
pop
outsb
repz
cs
push
sub
mov
jne
jg
out
mov
in
cmp
mov
push
mov
mov
rolb
mov
jo
icebp
out
mov
jge
out
and
dec
jne
clc
fsub
fwait
jbe
push
sub
mov
cmp
loop
xchg
out
jle
jmp
sub
mov
dec
xchg
add
xchg
ja
mov
add
jbe
push
popf
sbb
or
les
imul
or
xor
and
push
adc
mov
loop
test
loop
popf
sub
mov
pop
pop
lcall
pop
int3
mov
cmp
mov
xor
fcmovne
xor
sbb
pop
fadds
daa
add
in
in
test
jb
push
mov
cmp
mov
sbb
sub
loopne
push
jno
mov
test
addr16
jb
sti
fisubrs
in
adc
data16
scas
cli
cmpl
mov
push
xor
push
aas
mov
popf
aam
lret
mov
in
mov
movb
adc
pop
lds
xchg
pop
and
dec
pop
fs
imul
dec
add
dec
into
mov
out
push
arpl
and
cmp
push
mov
adc
xlat
sbb
ljmp
dec
sahf
fwait
cmp
loopne
adc
cli
sahf
sub
push
scas
das
pop
clc
repnz
fdivrl
push
test
push
mov
add
mulb
and
aad
pop
imul
shl
imull
aam
xchg
or
daa
cmpsl
clc
test
cwtl
addr16
hlt
adc
and
adc
adc
movsb
lods
nop
push
xchg
das
sub
add
cmp
jecxz
ja
cmpsb
fwait
sbb
mov
int3
dec
popf
push
lods
add
jmp
add
add
mov
push
aam
test
or
xchg
mov
xchg
jbe
mov
lahf
je
inc
sbb
loope
and
xor
repz
test
mov
mov
pop
movsb
pushf
lds
cli
aad
sub
ficompl
or
cmp
push
mov
mov
xor
aaa
rorb
pop
mov
jle
aas
movsb
xor
pop
cmpsb
lret
cmpsb
and
mov
or
lods
and
pusha
inc
push
aad
lahf
pop
lods
push
shrl
cli
or
mov
repnz
ficompl
adc
jb
dec
dec
add
cmp
mov
lods
mov
sbb
jecxz
adc
repnz
xor
push
push
insb
shrb
dec
fs
pop
mov
stos
mov
inc
and
jae
jnp
fstpt
jns
jo
in
jb
leave
jns
test
sbb
mov
xor
dec
inc
sub
cld
outsb
pushf
jno
mov
sarb
das
jp
sub
cld
mov
adc
mov
aas
aam
push
sbb
sub
and
dec
push
jg
testl
cmpsb
push
faddp
push
lcall
insb
int
lret
push
cwtl
xchg
popf
add
jns
jae
repz
mov
arpl
xor
ds
mov
cmp
sub
and
cwtl
mov
sbb
jle
aam
int3
xor
jns
hlt
dec
or
mov
std
insl
mov
dec
lcall
stos
repnz
mov
add
notl
sbb
test
cmp
pop
dec
push
mov
movsb
xchg
add
sti
adc
push
mov
cmp
push
enter
aas
sbb
dec
shr
cltd
lock
movntq
out
std
xchg
int
arpl
mov
outsb
cmp
mov
mov
jnp
popf
dec
ds
mov
ds
xlat
es
pop
movb
jns
es
out
cmp
mov
ficoms
xchg
testl
jns
and
ja
leave
aam
cwtl
sub
mov
mov
outsl
dec
dec
push
out
dec
or
sti
adc
push
popf
stc
notl
scas
in
repz
add
or
cltd
and
xchg
into
outsb
adc
push
mov
xor
xchg
xchg
mov
pop
dec
pop
call
repnz
jno
jecxz
dec
into
in
mov
mov
or
add
pop
mov
inc
dec
sub
pop
sbb
or
lret
jbe
imulb
dec
cmpsl
mov
push
cmpsl
xlat
andl
int
sbb
lock
pop
sub
sbb
lcall
js
stc
scas
push
loopne
decb
notb
in
dec
jp
jmp
aas
push
andl
xor
jle
cmpsb
stos
jl
sbb
and
xchg
andb
imul
dec
inc
mov
pop
push
inc
sub
sbb
cmc
inc
mov
faddl
ret
mov
mov
or
sbb
cmc
push
sbbl
cwtl
mov
into
inc
in
sbb
adc
daa
scas
imul
and
jge
cs
test
insl
mov
push
mov
into
rorb
fsubr
cmp
jno
daa
jg
inc
adc
jecxz
add
arpl
into
xor
sbb
mov
adc
repnz
xchg
fldt
inc
out
xor
out
adc
adc
clc
in
mov
aad
adc
pushf
in
jge
xchg
loope
scas
sti
test
sub
pop
daa
into
or
jno
sbb
sub
pop
int3
lcall
in
jno
mov
into
loopne
and
in
dec
xor
jno
cltd
dec
arpl
lds
xor
nop
adc
and
pop
popf
es
or
pop
into
inc
fldcw
push
jle
iret
mov
ds
data16
mov
aad
stos
mov
jmp
cmp
sbb
mov
pop
call
inc
pop
inc
push
das
lock
mov
popa
cwtl
scas
inc
adc
cmpsl
fstpt
xchg
cmp
mov
out
ja
std
add
jmp
or
out
xlat
iret
fists
stc
lret
jne
pusha
je
or
mov
hlt
dec
lods
push
mov
mov
out
jno
popa
inc
xor
or
and
sbb
ja
int
in
movsb
mov
ss
sbb
lcall
inc
dec
pushf
push
sub
outsb
and
mov
sbb
mov
pop
jg
push
aas
nop
rcr
inc
cmc
movsl
mov
add
das
pop
push
inc
push
xchg
lds
pop
jno
rcll
into
inc
cmpsl
int3
and
imul
jge
sub
mov
leave
rcrb
dec
cltd
and
mov
xchg
xchg
enter
loope
push
add
pop
jmp
pop
xor
mov
push
les
cmc
and
pop
inc
xor
xor
cmpsl
dec
leave
dec
lea
and
les
fistpl
rorl
das
lock
push
lods
fildll
iret
xchg
xor
pop
add
je
pop
inc
das
add
enter
dec
nop
pop
inc
inc
jle
sub
dec
push
out
rorb
dec
ljmp
mov
ja
into
and
rcl
fdivl
int
jge
jge
push
shrb
aaa
test
daa
or
mov
sbb
xchg
stos
in
or
ds
xor
mov
mov
dec
xor
jns
dec
leave
repz
jno
repz
xchg
jns
cwtl
adc
stos
pushf
jp
pop
push
aas
mov
dec
adc
mov
mov
push
lcall
jb
ret
cmp
xor
add
sbb
pushf
or
fildl
popf
mov
in
jb
cmpsb
imul
dec
jne
popa
add
push
aas
test
test
xchg
add
jbe
ret
or
xor
and
bound
lret
lcall
fiaddl
mov
jecxz
inc
pop
jo
pop
cltd
popa
pop
jmp
adc
push
cmp
fdivs
in
roll
lret
fcomps
push
in
sub
mov
push
jns
xlat
jno
sub
out
pop
ja
cltd
repz
pop
push
inc
jge
cli
loopne
lcall
pop
pop
mov
shll
push
push
jno
pop
pop
test
inc
dec
decb
adc
mov
xchg
jno
mov
outsl
jge
aaa
popf
and
lcall
and
pop
mov
iret
mul
sub
xor
xor
inc
leave
movsl
xor
mov
mov
pop
nop
cmp
js
popa
rolb
movsl
jbe
or
inc
stc
pop
decl
cmc
jge
push
cmpsb
mov
pop
lds
int3
mov
push
bound
mov
cmp
or
jle
cltd
pop
cmp
fadd
adc
in
xchg
call
lret
nop
fs
add
ds
jp
pushf
cmp
sbbb
push
arpl
mov
pop
data16
adc
orl
cmp
mov
or
mov
stos
push
pop
clc
adcl
mov
roll
add
fstp
jecxz
aas
ret
xchg
cmpsb
iret
mov
sbb
movsb
xor
mov
lcall
data16
xchg
test
loope
push
add
in
sti
cmp
les
repz
pop
movsb
or
cld
jle
push
js
pop
in
inc
inc
sub
dec
pop
ret
jecxz
dec
pop
jnp
inc
arpl
in
aam
inc
and
testb
cld
in
push
pop
out
in
aad
arpl
pop
daa
mov
sbbb
push
bound
push
jle
adc
fwait
in
arpl
mov
movsl
xchg
gs
push
addb
add
mov
movsl
cmp
sbb
int
xor
mov
jae
push
in
xchg
sub
loop
inc
loop
pusha
orb
add
dec
cmp
adc
push
daa
and
cmc
inc
jb
cmpsl
dec
adc
inc
insb
xchg
xchg
push
xchg
lcall
fsub
out
dec
ror
pop
jbe
sbb
divl
jb
xor
hlt
ss
fxch
sbb
ljmp
xchg
jmp
pop
lea
clc
fdivrl
out
pop
pop
aaa
int3
jbe
lea
out
cmc
adc
mov
and
jmp
mov
int
dec
outsb
xchg
mov
in
rolb
movsb
inc
rorl
in
push
test
mov
mov
or
sti
out
jp
or
pop
jnp
sub
xchg
int
cwtl
push
xor
xor
dec
jmp
sbb
pop
bound
cli
xor
insl
push
pop
mov
mov
js
mov
shrb
in
push
es
dec
lds
push
pop
sub
or
push
dec
fidivrl
pop
addr16
push
or
mov
imul
pop
lods
cwtl
outsl
mov
fwait
mov
negb
push
push
cli
fs
jns
inc
mov
add
shlb
rclb
mov
xchg
imul
add
cli
in
out
cs
iret
jo
pop
pushf
sub
mov
fwait
add
ficoms
jbe
mov
lret
push
add
movsl
sbbl
inc
mov
xchg
jmp
xor
cmp
shll
and
mov
jle
cmp
aad
adcl
xor
add
scas
sti
push
scas
mov
adc
xor
jns
popa
hlt
int
iret
xor
sbb
or
lock
xchg
cwtl
popa
lahf
int
ret
fucomp
inc
test
into
out
mov
sahf
enter
shrb
add
popa
or
jge
lock
mov
clc
cltd
push
hlt
jns
fbstp
enter
aad
cmp
or
out
adc
lods
push
xchg
add
popa
mov
pop
sti
jl
fs
addr16
jp
pop
cli
jl
pop
dec
data16
and
and
pop
add
jecxz
add
jle
adcb
test
mov
mov
cmp
cmp
adc
jl
aaa
fdivrp
dec
xchg
xor
sub
aaa
in
aas
inc
ljmp
xor
sub
sbb
in
sti
mov
push
sub
jo
sbb
pushf
loop
inc
push
mov
adc
sbbb
and
add
mov
cwtl
add
fldenv
mov
out
push
inc
xchg
xor
imulb
pop
mov
sub
cmp
pushf
and
out
sbbb
pop
rclb
ror
mov
ja
test
js,pn
push
int
aas
mov
mov
or
jne
dec
sub
mov
xchg
pop
cld
roll
test
cs
loop
mov
dec
ss
leave
pop
fidivrs
cmp
les
adc
add
rcrl
mov
sbb
adc
stc
jecxz
inc
movsb
int
pop
subl
pop
mov
outsb
mov
jb
inc
push
je
icebp
sbb
fwait
call
and
dec
dec
dec
std
mov
lods
adc
jge
lahf
jno
mov
lret
mov
lahf
push
sbb
sub
idivb
xchg
push
add
scas
or
leave
outsl
sub
ljmp
loope
test
sbb
jns
ret
sub
shll
push
inc
xlat
imul
sarl
dec
lods
cmc
pusha
cs
cltd
cmp
or
jl
fucom
test
jg
or
repnz
test
frstor
movsl
cmp
and
xor
jg
adc
dec
incb
lret
mov
pop
test
mov
ja
test
das
mov
fldcw
sbb
loope
inc
xchg
mov
test
lds
cltd
mov
loope
lock
or
fwait
mov
ja
fdiv
jnp
aas
mov
mov
test
push
mov
jg
inc
push
inc
icebp
cs
push
mov
push
lock
mov
xchg
and
movsb
xor
pushf
nop
lret
repz
in
leave
sbb
ret
loop
adc
loope
lock
pop
sahf
pop
add
and
rolb
jbe
lret
pop
repnz
aad
xor
jmp
cmp
adc
xor
leave
outsb
push
inc
and
pop
xorb
fbld
cmp
outsb
cmpsb
inc
pop
push
test
mov
cmp
push
aam
inc
jns
jae
mov
pop
div
out
ret
subl
fs
cmp
cmp
daa
jne
iret
fwait
inc
aas
mov
lahf
lcall
cmp
xchg
shll
loopne
aad
mov
push
push
lds
mov
inc
mov
push
outsb
cwtl
pop
fdivl
int3
aaa
and
xchg
pop
push
hlt
push
lods
sti
xor
insl
sub
fists
lods
sub
outsl
push
insb
js
cltd
and
jge
mov
and
addr16
pop
jmp
hlt
call
adc
jg
lock
popa
add
jge
dec
mov
lahf
dec
push
lret
repnz
enter
ja
and
test
fnstenv
xor
inc
fcmovnu
test
out
jo
adc
push
sub
lds
lds
jmp
mov
or
push
pop
jl
punpckldq
xchg
leave
push
adc
add
dec
iret
aad
jp
lock
jge
es
gs
cmpsb
orb
mov
add
stos
shlb
dec
xchg
popa
push
jmp
in
push
aad
or
arpl
dec
xor
fwait
stos
negl
inc
mov
and
fdivl
mov
data16
mov
test
or
pusha
mov
xchg
add
daa
outsl
shrb
or
dec
test
stos
cs
pop
mov
dec
mov
addr16
mov
aam
rcll
adc
jle
and
out
mov
jnp
test
pop
pusha
add
aas
add
cwtl
mov
mov
inc
in
daa
cmp
outsl
call
test
dec
pop
add
lock
or
push
std
pop
scas
push
js,pt
lds
aaa
xchg
ficomps
pop
sbb
mov
xor
mov
mov
es
dec
mov
and
mov
pop
xor
shll
in
mov
xchg
lcall
int3
loope
fidivl
imul
int
mov
js
out
pop
xor
xchg
arpl
fdivrs
leave
push
mov
cmp
push
mov
push
and
outsl
pop
jns
test
ficoml
out
jle
hlt
mov
xchg
fucomp
lock
sbb
gs
inc
jg
push
pop
sbb
into
lret
daa
cs
aas
into
cs
push
aam
jp
lret
mov
lahf
scas
mov
xchg
add
rolb
sbb
add
fnstenv
cmpsb
inc
cli
fidivl
jg
xchg
push
out
lock
shll
and
nop
movsl
test
scas
cmp
je
dec
gs
jo
movsl
and
dec
repz
mov
stos
int3
lock
inc
addr16
cmp
addl
jae
fld
jl
cld
popa
push
or
roll
sbb
push
popa
cs
pop
in
mov
movsb
mov
pop
xor
pop
pusha
ret
mov
rcll
inc
xchg
inc
shl
mov
test
add
call
or
into
les
pop
in
ret
jmp
rorl
xchg
out
cli
fdivl
popa
rorb
data16
xor
aam
loope
adc
jne
ds
fsubrl
xchg
pop
addps
into
or
or
std
gs
cmp
roll
jp
mov
in
jno
lock
and
or
lock
mov
mov
out
dec
sbb
aam
jno
test
xchg
ljmp
xor
fistpl
xchg
inc
inc
adc
jle
stc
aas
jl
sub
jo
cmp
mov
cli
lods
pop
sub
cmp
or
mull
inc
aad
mov
jo
psubusw
xchg
mov
xchg
sbb
pop
push
stos
inc
scas
daa
adc
ret
lret
hlt
stos
push
insb
pop
push
enter
sbb
fnsave
push
call
lahf
fwait
push
mov
push
or
add
out
mov
add
imul
dec
test
jmp
push
mov
jmp
push
or
lea
fnstenv
mov
jg
xchg
test
dec
mov
adc
cltd
mov
sbb
fcompl
std
iret
inc
mov
repnz
dec
std
sti
mov
pop
dec
inc
sbb
popf
adc
mov
and
mov
and
sarb
inc
in
sub
push
xchg
xor
ja
inc
cmpsb
repnz
xchg
rcr
sub
in
mov
out
mov
jnp
in
icebp
sub
push
cmp
cwtl
fisubrl
dec
mov
push
mov
inc
jae
imul
data16
fiadds
push
push
fnstcw
jg
rolb
bound
leave
jno
scas
aaa
mov
fdivl
jmp
inc
imul
out
movsb
dec
ret
sbb
dec
pop
push
addr16
shl
iret
mov
arpl
push
jne
divl
pushf
push
into
imul
sub
in
fnstcw
push
jbe
bound
dec
shrb
sub
xor
pop
imul
pop
aad
mov
in
sub
xchg
push
int3
xchg
sub
mov
jl
push
and
jp
std
cmp
mov
aam
push
mov
scas
mov
xor
and
movsb
pushf
add
movups
aas
sbb
pop
in
rcl
leave
out
imul
or
stc
adc
popf
andl
pop
xlat
aaa
xchg
leave
rcrb
ror
sub
loop
push
aad
jg
add
push
mov
push
sbb
xor
pop
pushf
sub
cmp
or
sbb
ljmp
sbb
insb
mov
pop
push
jp
dec
mov
sub
cmp
or
sbb
ljmp
sbb
insb
mov
pop
push
jp
dec
mov
sub
cmp
or
sbb
ljmp
sbb
mov
pop
pop
lods
dec
mov
sub
cmp
mov
lcall
or
imul
xor
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
fadds
push
push
imul
xor
rcr
jmp
sbbl
push
imul
adc
and
xor
rcr
mov
clc
icebp
mov
mov
push
push
add
adc
and
xor
imul
icebp
jmp
icebp
decb
inc
pop
push
and
sub
add
repnz
or
out
test
sbb
test
aad
sbb
adcb
mov
sub
cs
jne
jne
addr16
icebp
inc
loopne
sbb
addr16
sbb
mov
cmp
cs
sbbb
pop
std
cmp
lods
xchg
jno
add
enter
fcomps
push
mov
push
pop
mov
mov
cmpsl
scas
cmp
insl
mov
add
add
xor
mov
cmp
clc
xor
xchg
lock
sub
xlat
pop
scas
loop
std
mov
je
pushf
rclb
aaa
mov
rcrl
xchg
cwtl
push
test
inc
pop
push
push
add
adc
and
xor
rcr
call
sbbl
push
add
sbb
jge
outsl
outsl
pop
popa
mov
mov
lds
sbb
popa
xor
insl
dec
jl
sub
xor
sbbb
clc
les
add
or
dec
add
adc
and
xor
rcr
call
sbbl
push
push
add
adc
and
xor
rcr
call
sbbl
sbb
shrl
ss
cmp
int3
scas
xlat
ret
jb
pop
add
cltd
mov
dec
faddp
push
test
mov
in
out
xor
cmc
es
out
sar
popf
push
loope
pushf
xor
ret
lds
pop
and
or
add
nop
jmp
mov
add
jecxz
pushf
xlat
cmpsb
aam
cmc
lods
xchg
data16
inc
enter
cmp
into
out
xchg
jns
add
sysenter
movsl
cli
fnsave
and
jo
xchg
les
push
pop
mov
add
xor
into
mov
leave
sub
dec
faddl
outsl
push
enter
adc
js
imull
imul
jns
js
cmpsb
inc
sbb
mov
inc
push
test
pop
roll
xchg
jns
repz
push
push
and
adcl
or
mov
scas
cltd
mov
int
sub
cmp
add
f2xm1
orl
push
mov
xor
shll
sub
outsb
mov
scas
cmc
push
ja
sub
iret
or
cmpsl
pushf
fs
insl
stc
mov
fldt
mov
out
mov
inc
pop
icebp
sti
lock
adc
movl
or
add
push
loopne
lds
fists
and
loope
add
or
cmpsl
xor
pop
add
xchg
lods
hlt
xor
iret
push
or
arpl
gs
in
pusha
or
sub
add
incb
adc
loopne
jb
jne,pt
sub
xchg
push
arpl
cmp
pop
cmp
divl
dec
cmp
cmp
call
mov
shll
out
jo
sbb
sti
mov
loopne
int3
inc
add
repnz
sub
pushf
cmpsl
jno
adcb
adc
orb
push
xor
inc
je
adc
fadds
cmc
mov
sbb
stos
mov
dec
stc
into
sti
mov
das
outsl
and
arpl
lock
lock
aaa
sub
or
hlt
pop
imul
xchg
sbb
das
icebp
cmp
js
mov
lods
lods
xor
dec
cmc
mov
imul
pop
pop
inc
into
ror
pop
sbb
xor
xchg
test
xbegin
push
mov
aaa
push
pushf
repz
xchg
cltd
mov
or
mov
pushf
adc
adc
fcoml
and
cwtl
lahf
lahf
fcmovu
cli
imul
bound
in
and
sbb
push
mov
push
jbe
cmp
loope
xor
shlb
dec
mov
aaa
das
daa
lret
dec
jmp
add
ja
cmp
enter
mov
mov
mov
fstps
inc
push
lods
enter
aaa
mov
imull
xchg
imul
jl
movsl
pushf
push
call
rcrb
xor
outsl
mov
push
xorl
mov
lcall
adc
push
leave
adc
xchg
and
pop
and
xchg
lret
popa
out
in
lds
dec
sbb
addr16
dec
adc
jp
mov
in
out
mov
outsb
and
pop
out
jno
sbb
cmp
sbbb
cmp
push
jb
jnp
cs
sarb
testb
std
xor
arpl
jle
cmp
mov
jl
in
sti
das
ffree
test
inc
outsl
sub
mov
loope
rcrl
xor
shll
or
sub
xor
mov
xchg
pop
clc
jns
sub
lds
push
lret
adcb
outsl
imul
pop
xor
sarb
outsb
ja
repz
aaa
jno
mov
iret
and
icebp
mov
push
imul
mov
or
ss
push
sarl
fcmovu
jg
add
mov
lret
sbb
cmc
rclb
pop
inc
xchg
enter
add
push
push
popa
shll
mov
js
enter
push
add
or
xor
mov
cmp
cld
lret
xchg
jne
negb
or
loop
inc
inc
loop
test
push
dec
repnz
aam
push
xor
xchg
sti
sbbl
xchg
cli
add
jmp
and
pushf
shlb
or
inc
or
stos
pop
cmp
mov
out
repz
xlat
inc
sub
sub
jo
or
cmp
dec
and
push
hlt
adc
add
inc
sub
push
movsl
fdivs
jns
rorl
xchg
mov
clc
mov
cmp
sti
ret
or
jo
rep
push
and
add
fsub
ficoml
sub
sahf
mov
cmpl
insl
jne
pusha
pop
in
xchg
sti
in
pop
sub
movsb
in
push
xor
adc
dec
pop
adc
ret
mov
loopne
jmp
icebp
insb
in
pop
sbb
lds
fstl
pop
sub
ret
jno
or
adc
push
in
xchg
sub
xchg
inc
mov
or
das
sbb
jb
xor
loope
fwait
das
add
fidivl
aas
call
adc
dec
and
fiadds
inc
clc
sysenter
ret
cld
bound
cmc
lods
inc
lds
in
jno
int
push
into
lret
mov
jmp
loopne
int3
push
fistpll
jmp
push
je
add
cld
lcall
xchg
and
fmuls
add
pop
and
nop
fldcw
push
xor
pop
fwait
xor
inc
lea
rol
xchg
mov
pop
xor
push
clc
mov
in
aad
pop
adc
or
cmc
inc
add
jmp
mov
jnp
fsts
movsb
and
inc
jno
into
outsl
arpl
insl
xchg
cmp
pop
lods
movsl
sbb
outsb
add
inc
in
xor
or
push
cmc
enter
loopne
bound
in
cltd
jmp
xchg
imull
jae
pop
fcmovnbe
xchg
fistps
insl
adc
push
cmp
add
lods
wrmsr
decl
jbe
push
and
aam
mov
outsb
or
addr16
and
flds
bound
outsl
repz
adc
inc
pop
jmp
ss
sub
adc
add
mov
or
jo
stos
cmpb
xchg
ficomps
add
jge
pop
mov
and
jo
jle
push
sub
or
jo
ret
out
popf
push
in
mov
adc
jecxz
inc
jmp
sbb
pusha
add
test
popa
imul
decb
mov
inc
sbb
inc
outsl
scas
pop
stos
jns
adc
aaa
push
xor
in
xchg
outsb
loope
jge
pop
test
pop
adc
lock
outsb
jle
pop
pop
inc
sbb
mov
sub
hlt
jnp
clc
jg
jns
or
fdivrl
or
ss
jecxz
push
rorl
add
into
dec
pop
loop
std
std
int3
xchg
xchg
jg
jmp
jle
xchg
cmpsl
rorl
neg
adc
sub
sbb
sbb
rcr
in
repz
jp
mov
and
cmp
gs
add
fiadds
imul
loope
sahf
xor
nop
cmp
test
rorl
inc
rclb
aam
mov
nop
adc
cmc
cmp
sub
jbe
adc
push
inc
xor
not
and
sbb
mov
fbstp
movsb
mov
cmp
bound
cltd
dec
pop
inc
sahf
scas
mov
arpl
mov
or
shl
xchg
pop
push
ljmp
pop
lret
cmp
fmull
mov
jg
and
lods
popf
sub
xchg
mov
pop
scas
and
cld
movsb
and
pop
or
lds
popf
mov
jne
fldt
outsb
shll
in
and
loope
outsb
lods
in
es
ds
je
fs
xor
or
negb
add
movsb
shlb
cmpl
xchg
mov
cltd
movsl
xchg
or
pusha
xor
jecxz
shlb
loop
inc
shrl
push
xchg
xchg
mov
pop
xchg
mov
das
mov
mov
out
sahf
stos
popf
fsts
movl
jnp
or
mov
and
inc
adc
xchg
sub
sub
mov
xchg
mov
xor
sub
jecxz
mov
std
insl
pop
stos
ficoms
xlat
pop
mov
jl
pop
mov
xor
nop
mov
sub
icebp
stos
pop
int
mov
add
xor
pop
out
or
and
or
mov
sub
fbstp
int
and
imul
shrb
dec
adc
pop
gs
mov
aas
icebp
pop
adc
adc
jnp
mov
adc
dec
icebp
add
out
js
cmp
xchg
dec
lods
cmc
xor
out
movsl
ror
inc
ds
xor
pop
and
inc
pop
sbb
jmp
add
cld
lcall
mov
stos
nop
mov
lods
imul
sub
scas
inc
pop
jle
shll
stc
fdivrs
pop
insl
clc
movsb
ds
lea
in
mov
push
push
cmp
cmc
push
xchg
pusha
into
fcompl
dec
jnp
ss
rcrb
or
push
call
cmovg
in
and
out
sub
xchg
mov
jne
cmp
pop
jg
mov
ss
jbe
add
push
fbld
mov
jge
stc
test
lret
mov
sub
sub
adc
es
cld
ss
xor
stos
dec
out
test
push
ret
adc
push
sub
mov
mov
dec
outsb
dec
push
jecxz
ja
ja
jmp
pushf
lret
mov
pop
js
daa
out
lds
pushf
fs
mov
pop
dec
out
or
sarl
adc
mov
jp
loope
dec
arpl
mov
xchg
push
adc
dec
mov
fisttps
inc
mov
lret
sub
jne
jecxz
xchg
ljmp
shl
sub
sub
mov
int3
shlb
fsubs
cmpsb
or
fsubrp
ss
pop
stc
loop
mov
add
push
xor
std
arpl
scas
jno
jns
int3
outsl
sbb
loop
sahf
cmpsb
das
lahf
xchg
inc
mov
and
sub
test
pushf
cmpsb
gs
pop
sbb
pop
pop
loop,pn
add
and
xchg
les
fcoms
dec
call
out
or
and
dec
lcall
lret
ror
aaa
sub
jl
sbb
clc
js
mov
gs
pop
mov
sbb
les
insl
or
sub
jmp
dec
add
out
fldcw
adc
mov
xor
jge
shll
mov
mov
mov
test
ret
insb
into
push
jb
jp,pt
cltd
sbb
jae
push
pop
dec
or
jnp
xchg
or
sub
mov
pop
repz
sub
and
rcll
and
dec
jae
fcoms
out
leave
es
push
jo
sbbl
test
xchg
pop
jle
and
inc
mov
cltd
xor
or
push
sbb
mov
stos
sbb
cmpb
cmpsl
xor
jecxz
insb
xor
les
add
mov
xchg
std
negb
jno
pop
dec
dec
out
lret
mull
mov
cwtl
insl
push
test
xchg
sbb
and
inc
gs
mov
add
loope
faddl
pushf
or
arpl
mov
pop
movsl
lret
sbb
ss
jmp
subl
lcall
mov
enter
out
gs
fbstp
mov
and
int3
adc
int3
and
pop
and
xchg
stos
add
mov
nop
rorl
xchg
push
inc
adc
or
dec
scas
adc
insl
lret
and
test
inc
fstl
outsl
sbb
cli
insl
sub
adc
jnp
xlat
sub
and
divb
out
and
jg
jmp
mov
enter
test
xor
cmp
sub
fs
sub
lds
aaa
loope
mov
push
jmp
pop
out
bound
push
push
sahf
sbb
mov
mov
iret
stos
stos
mov
sbb
push
cmpsl
int3
jecxz
jae
das
rcl
sub
xor
in
push
out
cmpsb
inc
mov
xchg
jne
and
sti
nop
push
fs
sbb
and
sbb
sub
arpl
jno
pop
add
ret
mov
cwtl
xlat
sub
mov
addr16
dec
ficomps
insl
sbb
jg
jp
loope
cld
push
lock
or
jbe
jbe
ret
jno
sbb
rclb
sbb
xor
inc
sub
jle
pop
fmull
popa
movsb
mov
in
cmp
push
add
data16
popf
xchg
cmc
push
fwait
js
inc
mov
pop
mov
idiv
int3
and
adc
rcll
cmpsb
mov
imul
add
outsl
das
push
xchg
icebp
dec
lock
fs
fisttpl
push
stc
xlat
pop
dec
aas
sbb
icebp
insl
cmp
popa
nop
sahf
sub
inc
push
std
das
xor
rol
icebp
cs
cs
push
inc
mov
scas
das
xchg
cmp
gs
lahf
out
add
into
mov
inc
inc
ja
ljmp
adc
insl
jg
arpl
sbb
jb
pusha
dec
xlat
daa
mov
adc
scas
shll
popa
enter
pop
rol
rclb
cmpl
pop
mov
jb
adc
jbe
fisttps
out
cmpsl
push
bound
fisttps
mov
pop
fisttpl
adc
jb
int
lahf
fisubrs
or
fadds
test
jno
je
repz
clc
cmp
mov
dec
nop
pop
mov
mov
mov
sbb
leave
aam
lock
and
vandnpd
js
mov
jecxz
call
jbe
inc
les
stc
sbb
in
sub
cli
movsl
filds
xor
bound
ret
add
mov
mov
sbb
shlb
and
cld
mov
xchg
test
jg
andb
test
adc
xchg
cmp
or
jnp
jecxz
jbe
ljmp
jle
fs
dec
pcmpeqb
fistps
sbbb
imul
repz
cmc
lsl
pop
aad
push
popa
clc
leave
stos
jne
xchg
jb
repz
fldt
enter
jo
mov
push
in
imul
in
and
imul
outsb
and
cmpsl
jg
cmc
sub
ds
sbb
lods
inc
das
out
icebp
mov
fdivrl
xor
or
push
fcomi
nop
movsl
lds
sti
jbe
and
fnstcw
call
inc
dec
push
daa
pusha
lods
call
stos
adc
mov
and
movl
dec
xchg
loopne
sarb
jle
dec
lret
xor
mov
in
comiss
rcrb
jg
shr
pop
aaa
push
call
rcl
lret
out
nop
or
int
mov
and
sub
mov
cmc
pop
inc
sub
mov
mov
int
add
sti
ffreep
sub
cmc
ret
sbb
test
mov
imul
jmp
mov
mov
cwtl
jl
jmp
xor
xchg
jbe
xor
cli
das
sahf
imul
jecxz
mov
jecxz
aas
out
testl
jns
mov
inc
es
mov
fsts
cmpsl
lds
pushf
xchg
mov
out
inc
enter
aaa
dec
inc
lcall
hlt
imul
jae
popf
mov
push
cmp
jb
push
or
and
mov
loope
xor
push
mov
push
pop
or
mov
pop
cmp
mov
scas
gs
jbe
popa
jne
sbb
out
enter
push
jg
int3
jp
push
frstor
and
dec
outsb
jmp
add
fisttpl
insl
imul
adc
xchg
popa
cmpsb
push
adc
out
aad
add
movsl
cmp
cmp
jl
sbb
cmpsb
scas
test
out
dec
outsl
fwait
call
call
pushf
jecxz
mov
aaa
push
mov
imul
loopne
ficompl
and
lea
cli
rcrb
lcall
fisubs
pusha
into
dec
or
jo
cmc
hlt
mov
dec
xchg
or
std
roll
cmpsb
ss
mov
dec
jmp
push
mov
out
ss
in
and
cmc
push
jp
jmp
test
fsubl
cltd
cli
ret
adc
loope
cmp
cmp
xor
pusha
bound
subl
popf
scas
std
int
stos
in
jecxz
mov
pushf
mov
in
in
mov
in
mov
xor
addb
out
into
cmpsb
sub
push
push
adc
rol
xlat
inc
aam
lret
dec
mov
push
les
jbe
jg
lds
cmpsl
aaa
mov
jl
ss
gs
push
or
xor
in
mov
sbb
aas
pop
call
mov
das
cmp
in
cmc
or
fucomip
int3
pop
push
subl
xchg
imul
push
pop
mov
lods
jle
into
or
add
enter
add
testb
push
repnz
popf
pop
mov
iret
mov
mov
repz
int
pop
push
loope
addr16
or
mov
inc
mov
dec
xchg
mov
imulb
inc
sbb
xor
dec
xchg
rorb
out
stos
adc
out
or
bound
rorb
xchg
data16
push
mov
and
dec
gs
push
mov
movsl
sahf
push
sbb
sub
sub
incb
dec
jmp
ja
add
pop
cwtl
xchg
xchg
in
shrb
rorl
sahf
pop
push
cmp
outsb
mov
aad
jae
jnp
inc
cld
out
rclb
test
mov
add
icebp
dec
adc
and
xchg
std
ret
pop
mov
cmp
imul
mov
shlb
xor
sbb
pop
lahf
loope
jecxz
add
jb
incb
cs
in
jecxz
sub
pop
xor
dec
rclb
and
jbe
or
loope
add
jnp
xor
pop
int
pop
pop
scas
test
xchg
lods
dec
xchg
inc
push
push
subps
lret
cmp
mov
adc
mov
pusha
movsl
ja
imul
xor
mov
add
mov
cltd
sub
fnsave
aam
add
lds
arpl
jmp
ret
and
je
push
mov
add
and
sub
xor
jle
xchg
cmp
mov
hlt
movsl
xlat
xor
loopne
scas
adc
or
ret
pop
jg
push
mov
jmp
cmp
jmp
push
fcoml
movsb
dec
adc
dec
inc
push
outsl
lock
push
add
ja
pop
ret
loope
lea
push
inc
cmp
into
push
shlb
push
rorb
ljmp
repz
add
mov
mov
cltd
mov
fstpt
sbb
xchg
push
lret
rolb
xchg
inc
pop
add
add
jne
das
fbstp
jmp
mov
or
dec
aas
lahf
imul
xor
dec
sahf
popa
das
or
cmpb
xlat
sti
loope
rclb
fiadds
stos
xchg
and
out
push
xchg
add
enter
ret
mov
loope
cmp
lods
mov
sbb
movsl
pop
lds
inc
shrl
jp
adc
leave
pop
sub
fiadds
aad
ja
adc
push
push
cmpsb
and
push
mov
fs
pop
push
insb
imul
fdiv
int3
fsubrl
out
xor
fwait
sub
xchg
sub
mov
inc
scas
xor
daa
push
aam
pop
outsb
mov
dec
lds
pusha
and
aam
mov
push
cwtl
out
pop
in
cmp
mov
mov
inc
jl
jmp
les
test
sbb
sti
add
jne
mov
rcl
jmp
cmp
adc
rclb
adc
or
outsl
jmp
ljmp
nop
fnstcw
lahf
data16
out
je
testb
mov
mov
loopne
jno
stos
adc
or
in
aad
sub
mov
ljmp
jne
aas
mov
hlt
push
push
add
faddl
loope
and
add
sbb
dec
aas
in
imul
xchg
dec
xlat
dec
mov
mov
cmp
cwtl
sbb
inc
adc
mov
mov
sbb
jno
mov
jle
ret
jmp
fldenv
add
and
das
jns
test
popf
imul
into
pushf
pop
shlb
cmp
dec
mov
push
pop
das
xor
fistpll
mov
or
push
inc
popa
js
or
sbb
sub
cmp
enter
call
sbbl
push
push
add
adc
and
xor
rcr
call
sbbl
shrl
js
or
sbb
enter
call
sbbl
push
imul
adc
and
xor
rcr
inc
loope
xchg
or
outsb
push
pop
inc
dec
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
lcall
clc
outsb
xor
mov
cmp
pop
or
push
push
lcall
clc
fimull
ljmp
push
jp
jp
push
adc
shll
rolb
add
jnp
adc
pop
inc
and
push
repz
test
fcompl
cmp
push
pushf
xchg
icebp
adc
push
lock
xchg
mov
enter
loope
test
clc
lret
push
jg
lahf
mov
cmpsb
cmp
xchg
push
xchg
shlb
mov
fucomi
cmpsl
sbb
dec
mov
fwait
sub
dec
dec
cmc
pop
add
cmpsl
xchg
mov
jp
push
fwait
xchg
lcall
mov
mov
test
cmpsb
seta
cmc
movsl
xor
popf
icebp
xlat
push
lret
daa
aaa
pop
dec
mov
mov
int3
cmpsl
cmp
dec
or
aaa
push
std
adc
and
test
xchg
inc
xchg
jp
pop
and
clc
jp
push
push
fists
clc
int
ficompl
add
inc
and
popa
inc
adc
pusha
xor
test
stos
fisttps
lods
stc
mov
ljmp
insb
dec
sbb
or
push
cmc
mov
ficoml
cli
fdivrl
cmp
pop
js
sbb
push
dec
dec
out
mov
mov
cli
test
mov
cmp
js
or
jp
push
lcall
clc
fimull
ljmp
push
dec
sbb
push
lcall
cli
mov
into
jne
sub
jo
lcall
lahf
xor
mov
pop
or
cwtl
mov
sub
sti
inc
rcll
or
xchg
in
test
test
outsl
xchg
mov
lcall
cli
shll
pop
sub
in
jecxz
imull
mov
hlt
pop
and
pop
add
outsl
pop
cld
loope
dec
sbb
cld
xor
call
pushf
imulb
cmc
repnz
xchg
sub
int3
push
inc
pop
cld
dec
push
fisttpl
jp
scas
inc
inc
or
jbe
sti
inc
xchg
sub
call
push
scas
push
int3
xchg
jne
push
mov
int3
pushf
pop
mov
jns
jns
sbb
inc
pop
call
mov
rol
dec
mov
loope
sar
or
mov
jns
in
push
adc
cmp
and
inc
mov
notl
and
iret
push
inc
scas
insl
inc
mov
mov
inc
or
mov
cmpsl
push
cld
dec
cmp
xor
jmp
ret
roll
call
jbe
es
scas
cld
adcb
ror
fisttps
incl
xor
push
mov
shlb
fs
rcrb
into
ds
cs
sbb
inc
fisttpll
cmc
fwait
stos
fucompp
in
les
xchg
imul
dec
pop
jne
dec
dec
aam
aaa
shll
or
xchg
sbb
pop
and
sub
arpl
sbb
add
push
sti
je
pusha
and
loope
pop
cmp
cmp
push
repnz
xchg
lds
jecxz
lahf
hlt
pushf
test
cltd
jns
jns
loopne
mov
rcr
or
bswap
push
jmp
jbe
test
lea
sub
out
in
imul
loop
shrb
push
dec
aam
out
orb
jb
cld
repnz
adc
mov
pop
out
pop
jg
sbb
imul
mov
and
and
mov
test
dec
icebp
mov
add
jecxz
or
lret
mov
mov
add
lret
mov
jae
mov
mov
mov
adc
scas
pop
mov
enter
push
adc
push
mov
daa
fnsave
je
mov
hlt
pop
stos
movsb
ss
divb
adc
xor
divl
push
movb
mov
adc
sti
cwtl
shl
ficompl
push
push
jge
jge
mov
sbb
add
push
mov
dec
mov
and
mov
jne
sbb
mov
aad
lea
jae
test
rorl
mov
addr16
jmp
inc
add
loope
test
push
lds
in
sbbl
fwait
test
push
and
stos
mov
sti
adc
sbb
xor
lret
and
outsb
in
popf
pop
ja
inc
xchg
dec
add
imul
mov
cmpsb
icebp
jb
aaa
inc
rcll
loope
xor
pop
aad
pushf
test
jns
mov
cmp
inc
inc
xor
aad
sub
arpl
mov
dec
fsubr
shr
add
and
dec
xchg
pop
adc
hlt
or
jno
nop
loope
xchg
es
icebp
aas
inc
mov
es
jecxz
cmp
andb
movsl
jne
cmpsb
dec
sub
or
add
inc
dec
add
mov
mov
repnz
xchg
cwtl
out
push
outsb
mov
sbb
or
mov
in
add
jl
in
lea
andl
mov
pop
push
into
dec
aam
xchg
add
or
divb
movsl
mov
sbb
jb
xchg
loopne
push
in
mov
mov
ficomps
dec
lods
out
ffree
loope
xor
cli
les
movsl
insb
loop
stc
push
lock
int3
mov
sub
push
into
push
push
cmpsb
xor
shrb
adc
add
lods
scas
fwait
aad
je
sti
loop
lcall
test
mov
cmp
incl
cmp
fdiv
data16
or
cld
xchg
ret
xchg
fisttps
push
xor
sub
shrd
jb
xchg
push
les
cltd
rcr
xchg
sub
pop
popa
lahf
add
stos
std
lret
and
lods
lock
adc
xchg
sbb
popa
pop
pop
ret
lea
das
mov
inc
je
jnp
push
inc
lcall
cli
in
filds
mov
adc
aas
mov
ret
fidivrs
div
dec
fidivrl
pop
int
int3
popf
jae
xor
test
into
rclb
add
xor
push
movsb
fadd
inc
mov
icebp
push
repnz
iret
in
mov
test
out
pusha
push
jno
iret
and
mov
xchg
scas
inc
jns
imul
sub
push
aad
popa
or
pop
ljmp
lahf
pop
push
daa
inc
adc
mov
mov
xor
mov
and
xor
adc
in
shrd
hlt
out
sbb
outsl
imul
std
scas
mov
push
and
adc
sti
sti
punpckhbw
shrb
pop
lea
cld
add
sub
jb
imul
shr
jge
mov
mov
aas
loope
outsl
sbbl
js
int3
lock
js
cmp
out
ret
sub
xchg
xchg
data16
mov
loope
mov
loop
inc
xor
frstor
pop
insb
mov
outsb
repz
inc
xchg
xor
out
das
popa
sub
insl
inc
stos
stos
sti
fcoms
negb
mov
dec
addr16
fwait
aam
fidivrl
jns
divb
lods
jbe
rolb
push
ss
scas
inc
add
rolb
fstcw
leave
lds
mov
and
aas
scas
sarl
pop
sbb
aam
mov
cwtl
cli
nop
lods
or
inc
push
xor
lcall
je
dec
push
sub
dec
mov
ret
push
jbe
outsl
xor
loope
sub
rcrb
add
in
push
std
scas
sbb
adc
jecxz
dec
inc
cmp
adc
addb
push
xor
jg
jecxz
outsb
cld
cmpsl
in
or
or
xor
pushf
pop
imul
aaa
ds
scas
cmpsb
sti
or
call
lea
sbb
cmp
gs
int
dec
fdivs
es
xchg
insb
lea
in
and
xorl
mov
xorl
daa
outsb
xchg
pusha
push
sbb
in
mov
pop
push
push
jne
not
adc
sub
push
or
jge
loopne
adcb
lods
lret
jno
adc
lods
cmp
push
cmc
add
or
cld
mov
pop
jl
jg
mov
xchg
fstl
inc
mov
std
inc
outsl
cwtl
lds
call
mov
cmpsl
sbb
push
rcll
fidivl
or
jecxz
fiaddl
insl
cmp
out
push
loopne
and
in
adc
mov
adc
imul
data16
mov
inc
sub
cmpsb
add
cli
or
mov
inc
or
ljmp
dec
nop
cmp
test
xor
cltd
pop
mov
dec
imul
imul
cmp
popa
cmp
aas
leave
xor
adc
adc
xchg
pop
jne
mov
addr16
add
sub
pop
ja
test
inc
or
lock
in
in
mov
mov
scas
jl
mov
push
jp
jnp
decl
mov
gs
xor
xchg
mov
adc
sbb
and
xor
and
jns
cmp
loopne
dec
popf
pop
gs
int
lret
mov
mov
arpl
test
adc
fucomip
xor
push
jl
push
lahf
sub
adc
mov
xchg
and
cmpsb
dec
sahf
sub
adc
push
sarb
lods
lds
imul
or
add
scas
adc
sub
and
push
cmp
mov
mul
xchg
inc
insl
enter
inc
mov
mov
push
scas
loopne
aad
repnz
xchg
mov
stc
jl
popa
mov
sbb
into
decb
add
dec
dec
arpl
js
insl
gs
sbb
ret
rcr
add
frstor
stos
mov
xchg
gs
mov
ja
push
out
mov
xchg
mov
xchg
stos
ss
adc
push
ljmp
gs
stc
imul
cmpsb
pop
inc
hlt
add
jle
jae
fstp
adc
test
mov
cmpsb
mov
cwtl
pop
out
and
jecxz
jle
xor
stos
inc
push
out
sub
push
insl
jecxz
add
push
mov
jb
popl
xor
jb
mov
pop
push
repnz
ficompl
out
test
push
test
idiv
andb
and
out
outsb
jp
cld
stos
ljmp
out
mov
xchg
stc
in
pop
mov
mov
scas
das
mov
fadds
aaa
repnz
mov
mov
push
and
sub
mov
das
jge
jo
cwtl
push
pop
mov
enter
out
cmc
add
fldl2e
mov
sbb
shr
cmp
xchg
std
add
and
lods
cmp
jae
inc
lock
and
test
fists
fidivrs
mov
xchg
add
mov
adc
int
insb
into
les
mov
fidivs
mov
fisubl
mov
adc
fidivrl
mov
lret
stos
add
outsl
fdivr
mov
xor
pop
pop
bound
and
insb
xor
negb
push
mov
scas
imulb
cmpsl
sbb
sbb
and
stos
add
lds
pop
cmp
mov
loope
mov
out
out
imul
xchg
mov
cmpsb
mov
das
mov
mov
xor
mov
loope
jb
enter
fistps
fildl
add
pop
lahf
pusha
fwait
movl
insl
fstps
mulb
stc
notl
or
enter
jns
adc
sub
sbb
and
jg
faddp
jns
fwait
movsb
pop
sub
aam
jmp
add
fmull
adc
add
and
stos
out
add
lret
or
cmpsb
orb
pop
dec
iret
sbb
pop
inc
xor
pop
cmp
adc
ds
test
push
xchg
insl
jb
lcall
lcall
push
out
out
out
jb
test
inc
push
push
cmp
or
add
mov
stos
sub
push
jb
adcb
jne
inc
and
push
pop
cmpsl
ljmp
pushf
adc
pop
xor
stos
cli
jns
call
in
jmp
sub
enter
mov
xchg
out
es
cmc
mov
fidivrl
add
and
sub
xor
xchg
mov
neg
cmp
cmp
mov
xor
clc
mov
dec
adc
imul
mov
push
pushf
mov
sbb
in
imul
add
jp
cmp
dec
dec
cmpsb
mov
ficompl
jns
ja
push
lea
jle
push
es
push
mov
pop
push
mov
mov
jo
jge
jns
movsl
mov
and
call
leave
mov
adc
adc
mov
pop
ljmp
inc
negl
outsb
nop
add
inc
movsb
sub
mov
sbb
enter
stc
sub
pop
test
sahf
dec
xlat
je
mov
popl
sbb
push
push
out
pop
fsubrl
ss
mov
sub
jmp
adc
stc
mov
push
sbb
mov
loop
sbb
mov
lea
cmp
mov
add
test
or
inc
stos
aad
cmp
clc
gs
movsb
scas
sbb
out
xchg
arpl
mov
icebp
sub
jne
insb
xchg
ss
sbb
cwtl
roll
aas
iret
sarl
cltd
or
call
stc
shrl
decb
or
test
adc
outsl
cli
add
pusha
loop
mov
call
push
adc
xchg
dec
mov
jne
xchg
cmp
sahf
mov
enter
add
faddl
fmulp
inc
xchg
lods
sbb
les
xorl
push
add
xor
dec
leave
aad
mov
ret
push
mov
nop
ljmp
mov
sub
mov
push
rorb
inc
add
cld
mull
mov
mov
rcrl
sti
das
sbb
and
imul
je
and
dec
jnp
xchg
ljmp
mov
gs
dec
xchg
and
jb
ljmp
push
lds
or
dec
pop
xor
push
xchg
js
cmp
xchg
jno
add
jmp
int
loopne
mov
fdivrs
push
fisubs
lahf
out
in
jbe
pop
cmp
dec
push
pop
rorb
fstps
mov
sbbl
push
aas
outsb
mov
fstpl
rorl
jno
add
sub
lock
and
pop
pop
add
jmp
inc
push
add
jae
xor
push
push
mov
add
sub
loop
lahf
sbb
outsb
sahf
sbb
jns
xchg
mov
dec
shll
int3
jne
ret
pusha
mov
scas
push
sub
out
pop
mov
stc
aas
scas
mov
or
and
xor
xchg
aad
sti
in
rorb
mov
mov
mov
dec
cmpsb
push
es
out
jo
mov
outsb
test
sahf
jbe
mov
jecxz
xchg
sbb
add
aad
mov
hlt
mov
test
lds
in
xlat
cli
fiadds
pop
jns
cmp
pop
jo
add
dec
mov
or
mov
rcrl
jle
xorb
ret
xor
das
add
xor
imull
sbb
gs
sbbl
fcom
adc
dec
jae
jne
aas
jge
es
adc
outsb
jmp
es
mov
sbb
jl
sbb
fwait
bnd
ss
jge
push
mov
rol
mov
out
sbb
in
insl
ds
icebp
js
sbb
jnp
cmpsl
insb
int
dec
pop
jmp
xchg
push
loope
stc
cli
sarl
out
jno
aad
xlat
insb
leave
or
pop
mov
mov
jmp
dec
pop
jmp
lea
and
cwtl
mov
popf
adc
aam
sbb
bound
pop
lds
or
push
adc
lods
bound
mov
xchg
fabs
das
addb
or
fucomi
sti
and
stc
arpl
sbb
mov
pop
lods
popl
or
mov
test
ds
add
mov
cmpsb
add
data16
sub
push
mov
jp
inc
jns
dec
xor
fists
ret
movsb
mov
andl
pop
and
dec
xchg
mov
shrb
jno
mov
mov
pop
addr16
std
mov
roll
sarb
sahf
xchg
mov
test
pop
mov
xchg
mov
or
mov
mov
lret
jecxz
sub
iret
fcmovbe
push
jne
bound
jecxz
es
pop
jb
pushf
call
subb
into
aas
addr16
add
stc
sub
inc
outsb
or
sti
jbe
sbb
lods
icebp
stc
xchg
rcll
rcr
sbb
jno
jnp
fcmovu
fs
les
lods
jbe
iret
scas
xchg
fwait
add
rol
or
add
xchg
cmp
fidivrs
push
lcall
insb
mov
mov
sub
mov
int
xchg
imul
frstor
cmp
into
cmp
std
and
test
mov
mov
or
loop
mov
test
adc
stos
add
dec
cmp
ja,pn
pop
sbb
or
sub
ljmp
cmp
pop
inc
and
jnp
sbb
cltd
pop
jo
or
and
test
sub
adc
cmpsl
add
cs
push
and
leave
faddl
mov
out
ljmp
pushf
idivb
outsl
cmpsb
mov
popf
push
loope
fistps
jo
jp
sub
in
mov
loopne
pop
jle
mov
inc
sub
pop
mov
into
mov
or
mov
pop
jp
pop
leave
push
gs
push
iret
das
sbb
mov
stos
push
rorb
ja
dec
insl
jae
sarl
loope
xchg
divb
dec
and
imul
mov
fprem1
pop
notb
mov
fcoms
fcmovu
daa
inc
dec
mov
aas
out
xchg
dec
mov
xchg
test
ret
jle
ja
pop
pushw
rcll
fbld
shlb
orb
lret
imul
out
fnsave
insl
lret
testb
add
push
scas
push
sti
mov
orb
mov
stc
fs
insb
imul
pop
mov
lock
fsts
pop
xor
pop
insl
ret
rcrl
imul
inc
mov
mov
test
xchg
adc
bound
adc
push
sahf
flds
ret
push
ss
xor
mov
hlt
ret
or
imul
aaa
mov
xchg
jl
inc
ret
pop
popf
jl
adc
mov
loopne
mov
push
xor
jae
and
mov
mov
and
cmp
and
hlt
popa
xor
rcl
ret
push
loope
sub
dec
cwtl
xchg
mov
rorl
mov
mov
mov
or
or
adc
cmp
adc
pop
lods
jns
clc
xlat
sub
jp
mov
arpl
sub
jle
popf
out
push
fs
leave
cmpsb
fildll
xchg
sub
and
scas
test
shrb
scas
xchg
and
sbb
cltd
out
sbb
cld
aad
das
pop
adc
xchg
inc
push
into
mov
push
sub
shrb
and
sub
inc
std
cmp
xchg
test
xor
fsts
xchg
and
loopne
cltd
call
mov
shll
xor
xchg
mov
addr16
and
aam
pop
dec
stos
test
xlat
negl
mul
or
pop
mov
lods
xor
je
addb
add
stos
lods
mov
cmp
shlb
pop
fiaddl
inc
decb
lds
clc
cmpsl
sbb
arpl
push
into
jl
aaa
dec
xchg
sub
inc
sbb
xor
mov
aaa
sar
lea
in
push
jmp
lds
test
push
repz
cmovns
mov
into
xor
test
xchg
cmp
mov
inc
jmp
sbb
push
idivb
adc
push
pop
push
addr16
dec
fwait
lods
sub
icebp
xchg
xchg
fcoms
bnd
into
loopne
sub
js
mov
push
mov
call
adc
cmc
inc
xor
lahf
push
or
cmp
mov
nop
xchg
push
dec
sub
inc
outsb
push
out
imul
and
scas
outsb
inc
jbe
fwait
popf
pop
and
sbb
or
and
iret
iret
jg
fstps
xor
enter
outsl
test
xchg
mov
sub
push
in
cmp
mov
mov
push
bndldx
xchg
inc
pop
or
xchg
ret
stos
jle
cmp
aad
outsl
jmp
pusha
ds
mov
and
pop
mov
sbb
push
mov
add
test
pop
shll
and
out
mov
mov
lods
fcoms
in
lock
sbb
cmp
mov
test
push
add
bound
test
outsb
lret
mov
das
pop
mov
mov
inc
and
pop
cld
push
push
inc
scas
jnp
inc
insb
add
pop
inc
pop
std
stos
test
xchg
daa
xor
xor
sub
or
packuswb
and
pop
or
cs
xchg
notb
xlat
insb
mov
push
add
dec
or
orl
popa
or
ret
clc
movsl
add
mov
jmp
and
int
mov
test
stos
add
ljmp
hlt
jns
je
jle
inc
jno
pop
xchg
data16
insl
jbe
inc
sub
mov
out
or
out
push
iret
push
xchg
dec
call
cmc
xchg
lahf
repz
adc
dec
repnz
jns
fsubrp
push
mov
mov
stos
clc
fimull
ljmp
push
dec
sbb
push
lcall
clc
fimull
ljmp
push
dec
sbb
push
lcall
clc
fimull
ljmp
push
dec
sbb
push
fdivrl
mov
cwtl
jp
push
in
cmc
repnz
push
ret
push
xchg
inc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xlat
arpl
jae
inc
out
sahf
and
adc
insl
stos
adc
stc
ja
rcll
mov
daa
xchg
xlat
arpl
jae
inc
out
xchg
and
jbe
jecxz
repz
rcll
movb
aaa
andl
xlat
arpl
jae
inc
out
xchg
and
adc
rolb
cmpsb
add
je
dec
in
das
cmpsb
add
adc
fcompl
push
lahf
pusha
insb
cwtl
pusha
cwtl
lcall
push
cmp
arpl
sub
ficoms
mov
jmp
lret
cmp
movb
call
sub
mov
xchg
scas
xchg
ret
std
jge
clc
shr
jecxz
repnz
mov
daa
pop
xlat
out
loopne
xor
loopne
jmp
js
out
or
or
add
pop
push
iret
imulb
jb
sbb
test
fmull
sub
push
sbb
out
cmp
roll
xchg
jmp
aas
gs
sbb
insb
or
adc
add
xchg
push
jecxz
andl
testl
xor
jecxz
repz
rcll
mov
daa
aad
arpl
bnd
addr16
xchg
and
add
and
push
icebp
push
mulb
or
jbe
push
loop
and
movsb
addr16
out
mov
and
adc
adc
inc
repz
rcll
mov
daa
xchg
xlat
arpl
jae
inc
out
xchg
and
adc
inc
repz
rcll
mov
daa
xchg
xlat
arpl
xchg
inc
xchg
push
and
lods
sub
mov
ret
scas
cwtl
nop
inc
pop
push
das
cs
and
cltd
mov
xchg
sbb
jmp
jg
push
lods
lret
das
mov
nop
xchg
out
sub
jb
mov
andl
ret
adc
psubd
rcll
xchg
sub
jg
in
sahf
fdivrs
push
out
xlat
xor
out
test
push
outsb
test
xor
pusha
sti
into
dec
inc
push
mov
xor
int
pop
adc
xchg
mov
icebp
adc
std
mov
jmp
movsb
repz
pop
fcoms
daa
jp
arpl
scas
fs
test
lahf
mov
scas
lret
jge
pop
lods
jmp
clc
add
mov
ja
fisubrl
pop
call
pop
scas
dec
sub
jae
pop
js
cmp
movsb
test
in
mov
sbb
cmp
dec
hlt
outsl
jle
ja
jae
frstor
enter
mov
mov
mov
mov
sub
lahf
xor
pusha
aad
lods
pop
sub
dec
jae
xor
mov
imul
mov
sbb
iret
dec
jbe
in
sub
outsb
repz
or
gs
push
test
and
pop
sub
xor
test
call
sahf
mov
ljmp
psubsw
bound
xor
rcll
mov
gs
leave
pop
sarb
xor
and
mov
mov
lock
xchg
cltd
xchg
add
ret
je
mov
movsb
mov
out
jns
sbb
test
add
mov
cmp
fstps
clc
inc
sbb
push
icebp
cmpsb
test
std
add
xchg
loop
ret
int3
pop
sub
sub
shl
sbb
cwtl
stos
jg
jns
pop
pop
and
jne
adc
arpl
add
lods
jecxz
rcrb
lds
jae
sub
or
je
pop
jbe
and
les
mov
push
push
dec
cltd
mov
pop
adc
and
mov
cld
jl
add
and
scas
sub
xor
not
inc
popa
subb
fimuls
cwtl
pop
outsl
aam
add
inc
cld
ljmp
adc
cmpsb
jno
ds
imul
push
repnz
bound
stos
icebp
sub
sbb
pop
add
cmp
dec
ret
sub
test
cld
inc
mov
cmp
int3
out
sbb
int
xchg
out
dec
jns
sub
test
or
idivb
pop
or
in
pop
shl
or
pop
push
cmp
mov
loopne
push
adc
dec
imul
pop
insl
aaa
mov
push
jno
bound
mov
loop
lock
jle
inc
push
inc
jnp
jb
cmc
xor
jle
fsubrs
popl
icebp
lods
mov
es
loop
cwtl
sub
lret
fucom
mov
int3
popf
int3
popa
inc
push
jp
jle
or
insb
test
xor
sbb
xor
lods
cli
clc
pop
push
leave
test
mov
dec
out
and
pop
mov
push
mov
lods
add
pushf
mov
and
mov
sub
push
cmp
push
into
mov
sub
sbb
or
ljmp
fcos
adc
dec
mov
aad
out
cmp
inc
stos
mov
sub
cli
rorl
xchg
push
jge
fidivs
sub
mov
ljmp
outsb
push
loop
outsl
test
pop
inc
into
lret
push
xorb
pop
shl
jg
pop
lcall
daa
mov
daa
popa
cmc
repnz
mov
pushf
sub
aas
mov
rcrb
or
loope
int
popf
dec
outsl
clc
mov
in
jae
data16
out
out
cmc
out
push
prefetch
mov
mov
sub
mov
xchg
nop
bnd
cwtl
js
nop
jmp
mov
xchg
xchg
fbld
cli
cmp
std
adc
mov
add
fstp
mov
mov
push
and
and
dec
dec
popf
xor
cltd
adc
test
into
popa
sub
jb
call
cmp
and
jmp
push
xchg
ret
jbe
adc
mov
inc
scas
daa
dec
push
cld
push
imul
aad
sbb
sub
pop
pop
ret
pop
dec
lods
adc
pop
movsb
push
push
lcall
and
aad
xor
xor
out
stos
mov
ljmp
std
cmp
dec
loop
dec
test
xchg
push
movsb
jno
js
lock
ja
dec
lds
idivb
pop
add
sub
sbb
ret
out
xlat
push
int3
gs
mov
arpl
jbe
out
sbb
shll
fs
dec
push
call
jl
call
cmc
sub
bound
push
add
fisttpl
jp
mov
jg
pop
fwait
pop
or
sti
dec
roll
lret
jle
mov
movb
or
xor
pop
cmp
sbb
lret
cmp
ret
cs
push
rcl
rcrl
decb
xlat
movsb
add
pusha
int
movl
mov
pop
imulb
shl
dec
jbe
insl
stos
inc
inc
test
mov
mov
sbb
es
sbb
adcb
les
adc
sarl
mov
xlat
jmp
loop
sbb
addl
pop
ja
fists
add
arpl
subb
jecxz
adc
mov
das
push
inc
loopne
pop
out
sub
loopne
cwtl
pop
and
jle
dec
ja
jmp
repnz
jno
mulb
add
push
pop
cmpsl
xchg
pop
cmp
in
repz
push
fiadds
popf
dec
loop
ja
inc
cmp
mov
in
and
in
inc
pop
lret
jo
xor
fildll
xchg
nop
mov
ret
sub
push
cmc
and
cmpsl
sahf
and
adc
sub
outsb
sbb
mov
cmpsl
outsb
sbb
mov
mov
xchg
bound
pop
jl
leave
test
loop
rol
sti
cmpsb
adc
xlat
xchg
push
out
xor
lret
xor
push
dec
inc
xor
sbb
jl
push
adcb
arpl
pusha
js
dec
clc
xor
sbb
sahf
push
icebp
fdivs
das
jg
test
xchg
dec
clc
jle
fnsave
lock
sub
push
movsl
and
idivb
or
imul
andb
jg
xchg
aam
mov
mov
aaa
add
cld
mov
mov
sahf
lret
arpl
insl
aad
fsts
mov
hlt
pop
test
fcmovbe
mov
mov
push
dec
sbb
outsl
adc
lds
mov
addb
jo
enter
mov
lea
bndstx
fs
mov
or
dec
gs
cmpsl
andl
mov
in
pop
sar
ljmp
and
jns
jge
adc
hlt
xchg
mov
inc
xchg
push
in
std
loop
xor
inc
shlb
insl
pop
lods
push
jmp
mov
stc
lock
mov
mov
adc
ja
or
sbb
lods
add
test
scas
ja
and
aam
sub
mov
aaa
stos
mov
mov
mov
xchg
fsts
jg
mov
push
cmc
sbb
push
mov
cmpsl
or
sbb
in
add
jle
push
loope
into
jbe
jb
cmpsl
sbb
jge
xor
or
cmp
mov
out
adc
aas
in
inc
xchg
lods
fisttpll
ja
mov
or
jbe
mov
je
sub
sub
mov
cmp
xchg
cmp
inc
push
es
jmp
int
cmovb
mov
data16
jbe
xor
test
lret
aaa
fwait
test
cmpsb
nop
shll
or
and
lds
int
dec
divl
dec
adc
jle
out
xchg
dec
cmp
std
leave
adc
mov
out
mov
lret
insl
out
and
test
xor
dec
aaa
pusha
in
js
pop
lods
mov
xchg
movups
pop
adc
cwtl
in
or
pop
nop
popf
inc
sbb
xchg
adc
adc
leave
adc
xor
inc
mov
lret
mov
je
flds
inc
pop
fisubl
stos
dec
mov
mov
mov
jl
sahf
mov
cmp
inc
cmc
lock
push
cwtl
pop
jae
dec
scas
jge
loopne
adc
cmp
adc
xor
mov
rorl
call
out
push
cli
nop
push
das
test
iret
mov
sbb
in
sub
and
pusha
sbb
mov
leave
pop
aas
mov
xor
lahf
lcall
rdpmc
mov
adc
mov
ret
cld
outsb
out
shl
stos
hlt
test
add
roll
int3
lret
cmp
cmp
shlb
insb
mov
test
or
add
aaa
mov
mov
jmp
xchg
out
and
mov
adc
and
sbb
xchg
ror
mov
fsubrl
cld
arpl
movsl
insb
mov
xchg
repnz
ja
xor
push
and
call
arpl
fldenv
lods
sbb
decb
test
pop
pushf
xchg
fnstsw
and
and
test
push
test
pushf
in
xchg
push
je
xchg
xchg
fxtract
mov
add
or
pop
mov
outsl
andl
call
xchg
pop
pop
dec
aad
int
mov
push
idivb
xor
push
cmc
xchg
lock
jg
mov
inc
lea
sahf
ljmp
jg
adc
or
lret
mov
nop
xchg
xchg
mov
sub
mov
and
pop
xorb
and
in
push
loop
fwait
sub
adcl
mov
and
cltd
sbb
jo
cmp
jo
bnd
repnz
inc
stos
sbb
fwait
ret
xor
mov
mov
pop
leave
repz
xor
test
cmp
loope
xlat
rorl
inc
jns
adc
lret
mov
adc
xor
inc
xor
cld
xor
das
clc
nop
mov
and
int
or
les
mov
insl
or
outsl
mov
jnp
adc
stos
lcall
fidivl
sub
clc
pusha
stc
in
adc
pop
adc
in
mov
scas
xor
fadds
xchg
fstpl
mov
pop
out
mov
sbb
xor
push
inc
dec
pop
mov
sub
aaa
daa
sub
add
sub
or
jno
les
or
test
int3
dec
cmp
bound
daa
sbb
and
mov
ja
btrl
cmp
add
push
jb
dec
inc
pushf
jne
pop
mov
sub
and
lock
xor
fiadds
jbe
sub
ret
loope
cmp
ss
sbb
cmp
das
dec
jb
sbb
push
es
sub
arpl
cmp
cmc
adc
pop
sub
mov
enter
insl
pop
mov
or
adc
aam
call
adc
push
push
mov
loope
ret
nop
jne
xchg
inc
lret
sbb
ret
je
mov
add
imul
mov
adc
loopne
jns
mov
aad
repz
loop
fsubl
insl
subb
jno
dec
fadds
adc
adc
imul
fwait
xchg
xchg
insl
cli
add
mov
repz
scas
fsubp
xchg
pop
and
imul
xchg
ljmp
dec
inc
es
adc
lods
adc
les
dec
sbb
ret
mov
jmp
jle
push
scas
rcr
punpckhdq
fiaddl
mov
das
inc
rorb
or
cwtl
bound
cmpsb
sub
and
sub
ror
add
cmp
push
scas
cltd
insb
cmp
mov
mov
test
adc
lock
lahf
bound
in
popa
xor
int3
jo
xor
shll
xor
repnz
push
dec
and
jp
push
cmpl
cli
aad
sbb
xor
dec
jbe
mov
xor
sbb
lret
aam
ficoms
pop
aam
lret
fwait
ror
mull
jo
or
call
adc
ret
andb
movsb
hlt
loop
push
call
out
sbb
pop
xor
xchg
jb
push
dec
xor
popl
pop
aas
jmp
insl
stos
cmc
nop
push
sbb
push
aas
test
or
push
mov
nop
movsb
ret
sub
or
orb
add
jmp
push
and
movsl
loop
out
xchg
arpl
and
adc
ret
cmp
or
je
mov
adc
xor
xchg
bound
jo
movsl
xchg
rcrl
xor
jnp
rcr
push
lahf
or
fiaddl
xchg
mov
addr16
out
rorl
jl
jg
xor
test
jl
arpl
cld
gs
push
pop
xchg
mov
insl
adc
andb
xchg
sub
jo
pop
adc
mov
inc
gs
pop
add
loope
sbb
sbb
push
jne
push
sub
pop
inc
cmp
fldt
xlat
cmc
repnz
dec
call
mov
out
and
inc
mov
push
and
int
outsb
in
inc
jmp
mov
xchg
mov
int3
jle
inc
xchg
loop
insl
xor
fists
fmuls
push
shll
adc
mov
inc
out
pop
call
loope
push
add
rorb
push
movsl
cwtl
outsb
outsl
push
ljmp
loope
inc
mov
xchg
f2xm1
inc
cwtl
fmuls
jle
xor
mov
out
pop
add
test
jle
jmp
mov
clc
adc
pop
mov
dec
mov
push
pop
jns
daa
outsl
dec
inc
cmp
push
lock
or
lock
and
roll
mov
es
add
pushl
jle
into
mov
mov
loopne
movsb
loopne
xor
mov
ret
call
inc
xchg
int3
mov
clc
hlt
clc
popf
pop
js
jge
xlat
test
jns
add
dec
dec
dec
mov
add
scas
out
push
insl
fisubrs
incb
mov
sbb
cmp
ss
icebp
stc
out
outsl
cld
lcall
sub
pop
pop
iret
pop
add
jmp
pusha
scas
xchg
test
aas
ret
call
ret
mov
inc
jnp
fsubrs
mov
cmpsl
dec
push
ljmp
jmp
mov
gs
lahf
mov
mov
or
mov
lds
xchg
xchg
in
add
outsb
iret
fsubrp
mov
or
sub
jb
inc
mov
xchg
shl
jne
out
sub
aas
dec
insl
inc
in
scas
jg
imul
jle
out
dec
outsb
push
mov
xchg
mov
and
inc
fidivrl
jmp
pop
mov
push
and
outsl
inc
jg
mov
jle
into
cmp
add
lock
jae
fstpt
mov
aas
dec
mov
dec
pop
scas
cld
cmp
cmp
adc
in
jmp
xchg
sub
fucom
add
cmp
fcompl
mov
sti
lock
aad
call
in
xchg
cmpsb
adcl
mov
xor
out
cmc
cmp
out
sbb
sahf
sti
adc
mov
divl
test
dec
sahf
loop
sub
xchg
mov
fldl
imul
inc
and
cmpsb
sbb
enter
test
popa
mov
cmp
jae
sub
nop
out
andl
out
inc
or
fstl
popf
xor
scas
hlt
add
jmp
xchg
movsb
xchg
jg
push
daa
fsubs
fiadds
js
sub
push
cmp
dec
test
out
faddl
das
mov
outsb
sub
xor
leave
sahf
jp
lret
popa
rcr
aas
call
movsb
jmp
xacquire
scas
mov
fsts
sbb
data16
shl
clc
push
mov
pop
out
mov
xchg
orb
mov
jnp
inc
addr16
nop
ljmp
mov
aam
mov
rcrb
mov
inc
cmp
ficoms
inc
inc
mov
push
pop
sbb
lds
es
ljmp
test
inc
mov
popa
outsl
and
fisttpll
movsb
sbb
mov
iret
sbb
imul
sahf
adc
aad
add
outsl
lock
mov
add
xor
les
pop
push
mov
cmpsb
cld
mov
push
mov
cmpb
mov
push
add
imul
out
cs
inc
cmp
cmovbe
out
ds
pop
jnp
adc
dec
sti
imul
or
push
push
pop
fisttpll
fiaddl
dec
xchg
and
lret
iret
stos
add
mov
movsb
es
xor
jp
dec
mov
test
fs
adcb
sub
push
inc
xor
xchg
adc
push
sbb
mov
jg
nop
cmp
loop
aad
mov
pop
push
cli
imul
aad
mov
ljmp
loopne
adc
xor
lret
mov
hlt
or
pop
jb
sbb
fldt
and
cmpsb
mov
mov
adc
jbe
and
or
lret
jbe
movsl
cmc
out
lods
fimull
xor
adc
mov
pop
push
ror
cmpsl
in
es
movsl
sub
inc
jecxz
jno
enter
pop
inc
xor
out
adc
adc
mov
and
and
out
into
sub
in
ja
rorl
add
and
outsl
mov
and
insl
cmp
xor
jl
out
aad
data16
mov
push
test
jp
out
add
sub
icebp
cmp
scas
sbb
sti
insb
cwtl
mov
dec
mov
data16
in
rclb
dec
cld
lock
xchg
push
mov
or
jno
mov
cmp
adc
cs
lock
pop
ret
xchg
add
mov
shlb
lea
and
cmp
sahf
imull
push
pop
mov
jp
push
mov
clc
cmp
dec
arpl
cmpsl
ret
jl
cmp
add
mov
enterw
sbb
in
arpl
sub
jmp
mov
js
xor
sub
push
cmp
sbb
test
jle
movsl
pop
bnd
sub
pop
mov
dec
pop
cli
cmc
call
xchg
cmp
setge
add
in
fists
dec
cmp
dec
xor
icebp
clc
mov
or
outsl
pop
xchg
je
pop
test
or
loopne
adc
cmp
in
mov
mov
lcall
je
lds
lahf
push
ds
out
lahf
sub
jecxz
outsl
mov
adc
xchg
lods
jge
mov
jnp
mov
inc
cs
lcall
dec
pop
into
stos
pop
fidivl
arpl
sub
lret
sar
in
and
aad
dec
out
adc
aam
rorb
pop
pop
push
xchg
jl
in
inc
enter
pusha
jne
int3
push
out
ja
xor
mov
stc
pop
mov
je
flds
mov
mov
pop
mov
or
add
adcb
pop
or
fidivrs
xchg
add
pop
xor
stos
xor
mov
jb
jne
lods
cld
fisubl
clc
adc
jg
cld
jb
adc
jl
mov
dec
push
rorb
scas
jo
sub
stos
push
arpl
dec
loope,pn
adc
shlb
std
shlb
sahf
pop
mov
adc
scas
mov
push
xor
adc
rolb
or
sub
xchg
in
cwtl
jnp
mov
es
jb
xor
dec
sbb
aas
inc
or
aad
dec
bound
sub
insb
inc
push
mov
ss
pop
mov
insb
aad
fs
popa
push
outsl
jp
dec
jge
test
add
push
mov
pop
fdivr
sbb
push
xchg
into
es
roll
dec
icebp
test
inc
or
lea
dec
daa
sub
push
mov
dec
lods
inc
nop
xchg
cmpb
rolb
arpl
mov
cli
stos
stc
pop
cmpsl
jno
pop
mov
pop
mov
lea
shlb
out
popl
sbb
fwait
lods
shrb
out
inc
xchg
movsb
and
popf
push
add
mov
lahf
int3
sahf
ret
in
sbb
xchg
jp
gs
dec
sub
or
mov
cs
scas
insb
inc
cmp
jae
inc
out
xchg
and
adc
inc
repz
rcll
mov
daa
xchg
xlat
arpl
jae
inc
out
xchg
and
adc
inc
repz
rcll
mov
daa
xchg
xlat
arpl
jae
inc
out
xchg
and
adc
inc
repz
rclw
mov
daa
xchg
xlat
arpl
jae
inc
out
xchg
and
shrl
ret
movsb
pusha
sub
insb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
pop
push
cs
js,pt
push
aas
xor
pop
mov
cmpsb
xchg
xchg
sahf
xchg
out
ss
es
push
cs
jbe,pt
pop
push
outsb
inc
push
mov
cmpsb
sahf
loop
xchg
out
ss
fcoms
mov
dec
jbe
pushw
push
fs
dec
mov
cmpsb
mov
sahf
popf
test
jg
es
gs
pop
ss
cmpsw
fucomp
mov
popa
pop
in
aad
jge
not
pop
adc
fucom
pop
mov
pop
pop
loop
pop
xchg
mov
inc
jno
bound
push
add
or
repz
lods
inc
fidivs
into
sub
test
mov
int3
mov
in
inc
push
cmp
push
cmp
daa
push
pusha
sub
outsb
test
cs
mov
sbb
mov
adc
or
push
jecxz
sarl
ror
insl
pop
push
scas
inc
andb
cmovle
in
ss
push
loope
pop
out
mov
cmpsl
lods
test
into
outsb
js
aam
cmpsb
out
add
ds
pop
push
jbe,pt
pop
push
outsb
inc
in
mov
cmpsb
ss
lods
xchg
test
jo
dec
jno
inc
arpl
jmp
xor
sbb
cmp
int
out
cmc
or
fstl
lcall
inc
pop
arpl
sbb
or
pop
inc
dec
shr
movsb
jmp
cld
ret
mov
mov
lea
inc
jg
pop
push
jbe
pop
push
outsb
inc
jle
mov
mov
out
ss
es
push
cs
jbe,pt
pop
push
outsb
inc
jle
mov
mov
out
ss
orl
and
lods
sub
adc
cmp
cmc
out
and
jne
pusha
xor
inc
xor
push
js
addr16
cmc
data16
and
je
lret
xor
jle
pop
out
push
cmp
jecxz
jb
test
mov
stos
xor
out
movsl
ds
shlb
fcomps
movsl
cmpsb
xchg
mov
pushf
pop
pop
gs
or
pop
mov
adc
loop
jp
sub
in
push
ss
push
mov
mov
mov
cmp
sbb
push
movsl
aaa
std
into
je
xchg
loop
outsl
cmpsb
pop
fwait
call
xor
call
cmp
dec
inc
inc
neg
jne
icebp
arpl
pop
lock
jae
mov
call
push
pop
inc
push
inc
ret
push
movsb
inc
fxch
cmc
cmp
sub
test
neg
mov
cld
mov
sbb
negl
sahf
test
int
hlt
push
jg
lods
gs
push
out
or
xchg
gs
xorl
lcall
push
pop
mull
xor
pop
pop
xor
or
mov
xchg
jp
mov
lods
add
cmp
aad
dec
fwait
inc
imul
lcall
scas
xchg
pop
push
mov
test
aas
testl
jp
xchg
sub
lret
inc
sub
push
push
sarl
inc
mov
and
js
push
push
sub
adc
fstpt
iret
and
dec
inc
mov
lret
dec
add
xchg
aam
mov
xor
pop
jo
inc
es
movd
daa
bound
rcrl
bound
xchg
testl
roll
xchg
hlt
lods
mov
outsl
xor
xor
ror
pop
scas
ljmp
pushf
in
int3
add
out
cltd
sub
cwtl
orb
into
dec
mov
sub
mov
mov
push
pop
cmp
aad
mov
cmc
cmp
sub
lea
mov
mov
inc
imul
test
enter
push
fcmove
cwtl
out
xor
faddl
fs
out
sub
shl
adc
popf
cld
xchg
jbe
push
shlb
loopne
shl
clc
out
mov
call
push
pop
adc
test
scas
dec
or
lret
clc
lret
mov
in
imul
sbb
xchg
ja
jmp
inc
in
mov
icebp
leave
popf
lahf
push
dec
mov
mov
xor
xchg
add
sbb
push
gs
add
mov
pop
xor
mov
hlt
sub
lods
sahf
lcall
dec
cmp
mov
aaa
sbb
sub
cwtl
add
push
mov
loopne
lods
gs
aad
pop
add
notb
bound
sub
mov
outsl
adc
test
test
xchg
inc
mov
push
xchg
scas
add
cli
pushf
into
sti
xlat
movsb
out
xor
push
test
das
push
fcomi
lret
jle
push
mov
jmp
decl
bound
jmp
rclb
loop
sbb
repz
or
aaa
add
xchg
dec
ret
test
mov
cmp
jg
mov
sahf
dec
mov
mov
sub
arpl
jns
or
xlat
and
roll
rcrl
inc
orl
cmp
dec
cmpsl
enter
mov
sarb
ret
lds
stos
int3
ret
jbe
pushf
jnp
xor
addr16
add
dec
or
imul
mov
out
xchg
xor
jbe
sbb
fiaddl
fcompl
pop
rcr
mov
mov
cmpsb
test
add
test
popf
xchg
add
mov
and
cmp
cmp
xchg
aad
push
shlb
dec
dec
mov
xchg
aas
mov
sbb
ljmp
lea
xor
sub
movhps
jo
push
cld
push
mov
cmp
lret
sbb
cmp
out
and
stc
mov
pop
ret
call
js
mov
inc
pop
push
loopne
inc
dec
lods
loop
jae
pop
jmp
int3
mov
ror
and
xchg
jne
outsb
cli
adc
pop
jg
jp
in
mov
pop
out
xchg
adc
jge
xor
lds
xchg
in
stos
push
test
or
movsl
inc
inc
push
push
or
rcll
jge
push
cmp
shlb
dec
xor
xchg
call
pop
sahf
stos
dec
shll
jle
mov
push
mov
sbb
adc
cmc
pop
xchg
mov
lods
xor
insl
leave
jmp
lret
dec
mov
pusha
out
push
test
sbb
es
and
fistpll
cmp
loope
mov
hlt
xor
and
push
ret
and
stos
mov
fdivr
out
out
ljmp
adc
mov
sbbl
push
pop
mov
xchg
and
push
sbb
fwait
push
jecxz
int3
mov
adc
jbe
adc
dec
outsb
lock
loopne
mov
cmp
mov
aam
js
or
shlb
fdivs
mov
enter
mov
sub
dec
jns
mov
movsl
jbe
add
imul
adc
addb
ss
outsl
outsb
into
sbb
jne
sbb
add
into
fisttps
lcall
or
sub
xchg
or
stos
les
into
rcl
mov
jae
pushf
dec
dec
push
dec
lea
fistpl
mov
inc
push
sbb
fs
out
mov
mov
and
xor
lret
and
mov
cmp
or
xor
xchg
in
cmp
sub
enter
xchg
jno
xchg
stc
ljmp
call
ret
cmc
and
icebp
dec
lret
ljmp
int3
aas
xor
daa
pop
repz
mov
fldenv
pop
mov
into
nop
mov
scas
popl
push
popf
adc
mov
mov
rclb
fcomp
mov
rorb
xchg
cld
cmp
lds
push
gs
mov
pop
aas
cmp
mov
fsts
and
pop
cwtl
mov
filds
loopne
inc
enter
leave
pop
scas
and
sub
and
div
mov
cltd
pop
fsubs
adc
mov
gs
push
xorl
or
aaa
and
nop
rorb
xchg
xor
cmp
mov
adc
rorl
mov
repz
aad
ret
jmp
ljmp
xchg
shrl
popf
push
pop
pop
xchg
mov
mov
out
lea
mov
mov
pushf
in
fstps
enter
xlat
cwtl
mov
and
xlat
mov
loope
out
jne
lret
neg
jp
in
push
adcb
xor
icebp
shrb
nop
xchg
arpl
les
fwait
or
pop
dec
sbb
pop
push
or
insl
push
test
repnz
in
mov
int3
jmp
int
scas
mov
sbb
pusha
aad
add
dec
mov
insb
cli
fbld
or
mov
cmp
fidivrs
call
sbb
icebp
leave
stc
int
inc
mov
aaa
leave
ret
xor
cltd
sub
xor
fiadds
sahf
stc
dec
fs
sti
cmpsb
lds
adcl
mov
test
adc
xchg
loope
mov
insb
aas
push
jg
lea
sbb
scas
push
pop
mov
sub
or
dec
or
daa
mov
stos
push
int
sbb
addr16
jg
and
in
in
inc
xchg
imul
shr
sub
jl
and
push
pop
out
mov
adc
sahf
repnz
leave
dec
out
mov
cvtps2pi
jae
pusha
es
out
mov
push
xor
test
es
and
ret
or
outsb
jnp
add
push
mov
lcall
loopne
dec
lret
movsb
test
into
pop
push
sbb
icebp
cli
jl
cmpsl
mov
outsl
popf
add
inc
xchg
or
popa
mov
sbb
or
dec
movsb
cmpl
fbld
xor
xchg
dec
cmp
jno
xor
jnp
fldcw
sub
push
int3
push
xchg
mov
movq
pop
cwtl
mov
call
xor
movsb
fldt
cwtl
mov
clc
out
push
cmc
and
jae
movsl
js
repz
mov
add
aaa
xor
ret
out
or
mov
adc
mov
jmp
movsb
mov
leave
int3
inc
and
test
dec
out
xchg
add
repnz
rcrl
mov
fwait
mov
inc
add
in
jle
shrl
fstpt
adc
push
xchg
pop
dec
sub
aam
inc
icebp
call
or
dec
cmpsb
pop
sbb
push
pop
mov
rcll
xchg
and
and
inc
mov
mov
cld
cmp
pusha
decb
popf
outsb
jb
js
das
loope
xchg
push
sub
mov
sbb
aas
arpl
and
xchg
inc
inc
fdiv
scas
js
cmp
mov
push
jmp
fldt
test
jge
adcl
mov
ja
ja
cli
xchg
daa
mov
pushf
jecxz
xlat
adc
mov
bound
ret
aam
dec
jo
fwait
pop
and
rcrb
xor
adc
into
dec
leave
sbb
in
in
inc
mov
fsubl
jmp
pop
fisubrl
data16
adc
outsb
fists
cmc
mov
gs
cmp
shlb
xlat
fisttpl
out
inc
add
test
and
mov
dec
jmp
in
addr16
jp,pt
fistpl
shrb
lret
mov
in
cmc
add
and
outsl
xor
insl
cmp
mov
insl
add
xchg
jae
dec
data16
hlt
push
mull
add
negb
imulb
sbb
jecxz
and
jae
push
xor
sbb
inc
jno
fldl
inc
aaa
out
cwtl
aas
jmp
test
and
incb
js
les
fbstp
int3
mov
dec
aaa
lahf
insb
int
lret
jmp
push
div
cmp
fidivs
adc
daa
xchg
fdiv
int3
popa
iret
push
scas
xor
jg
jg
mov
dec
mov
arpl
inc
popa
cmp
adc
sbb
mov
shrl
nop
cwtl
movq
jp
cld
mov
mov
out
mov
fistl
push
lock
or
pop
mov
push
mov
cmp
jl
loopne
push
lcall
inc
std
mov
dec
adc
inc
mov
fwait
mov
mov
and
cmc
xor
es
push
dec
gs
xchg
push
mov
lahf
sub
sbb
rol
xor
js
inc
jp
push
lods
xor
mov
fucom
shrl
sub
cmp
lahf
test
lock
xchg
out
or
fwait
jge
clc
cmpsb
xchg
iret
cmp
or
cmp
mov
lret
cmp
mov
movsb
imulb
je
fmulp
sbb
cmp
fstl
inc
repnz
pusha
outsb
and
jno
js
call
cmpsb
jns
jp
inc
movl
dec
pop
fcomi
hlt
es
je
mov
repnz
repnz
xchg
cmp
push
std
jmp
aam
cmp
adc
pop
xchg
insl
xchg
rorl
xor
dec
sub
xor
or
ret
fsts
pop
cmp
cwtl
pop
outsb
cmpsl
and
jnp
ret
mov
or
dec
add
mov
in
mov
lret
mov
add
jle
lahf
cli
loop
push
add
pusha
push
mov
test
inc
cmpsl
inc
dec
std
loop
cmp
mov
movsl
repnz
mov
enter
lea
and
hlt
mov
adc
jne
fbstp
or
popf
into
or
call
stos
movsl
aas
push
fdivp
pop
sarb
test
push
frstor
pop
cli
dec
add
loope
mov
adc
mov
clc
pop
rcr
loopne
sub
into
shrb
cmp
test
push
es
popf
mov
pshufw
aas
mov
cld
pop
leave
out
cld
mull
sbb
cli
dec
jns
xor
jb
clc
mov
cs
sub
and
in
lds
dec
dec
push
sub
or
repnz
jnp
mov
cmp
push
jge
adc
xor
lahf
movsl
aaa
push
xchg
out
cwtl
dec
clc
aaa
jne
sub
and
adc
mov
lahf
out
test
ljmp
fbld
sub
cli
cltd
sbb
aam
and
das
ret
add
sbb
push
insb
ja
or
or
outsl
jb
jbe
pop
mov
out
mov
pop
cmp
jmp
mov
cmc
mov
lock
int3
dec
jge
push
pushf
cwtl
mov
mov
push
sub
xor
pop
push
out
sbbl
cmpsb
sbb
ds
dec
dec
adc
xor
inc
adc
enter
xchg
inc
mov
dec
dec
jle
ftst
sbb
nop
fs
pop
xchg
subb
pop
repz
das
sub
les
ljmp
mov
dec
fmull
sub
inc
les
sbb
loopne
sarb
dec
mov
ds
jnp
rolb
pop
aas
xchg
sbb
hlt
mov
mov
test
lret
or
mov
clc
aad
pop
xor
mov
inc
lods
adc
mov
fdivrs
push
inc
sbb
dec
je
popl
mov
test
xor
addr16
insb
sub
gs
les
sbb
jae
pop
xchg
xchg
imul
pop
push
sub
scas
lods
aam
cmpsl
dec
sar
pushf
mov
icebp
xor
leave
iret
pop
sub
lahf
imul
imul
lret
lock
xchg
jecxz
inc
movsb
cmc
aad
fadds
int
ficomps
fimull
loopne
add
lods
cli
stc
or
xor
jg
jmp
mov
mov
cmc
cltd
jns
mov
insl
pop
or
ljmp
push
mov
shll
mov
mov
pop
sbb
cmp
ja
fadds
shll
call
jl
jae
andl
arpl
sbb
les
xor
daa
les
jl
andb
addr16
cmp
jp
fildl
jne
jecxz
push
mov
scas
mov
push
push
scas
add
push
arpl
popf
loope
push
add
test
jl
mov
mov
aad
movsl
add
mov
jecxz
mov
xor
jnp
mov
pusha
lret
xchg
pop
ljmp
daa
loopne
jo
lods
inc
dec
cmp
std
lcall
xchg
sub
test
mov
mov
loope
adc
loop
ds
pop
inc
bnd
cld
mov
insl
and
ljmp
aas
insb
pop
int
mov
test
andb
loopne
mov
fstps
mov
orb
xor
clc
mov
stos
stos
adc
mov
cmp
mov
aad
or
icebp
in
leave
push
xchg
mov
adc
push
and
std
imul
lret
mov
add
lcall
addr16
fcmovnu
inc
xchg
out
and
test
adc
mov
jnp
shrl
popa
enter
jp
add
fs
cmp
jl
das
test
cmp
sbb
mov
xor
cmp
add
popa
pop
xchg
mov
xchg
dec
or
jmp
sub
out
out
mov
rcrl
and
mov
sahf
mov
ret
adc
out
cmp
mov
js
mov
aas
loope
popf
pop
jge
pushf
mov
movsb
inc
add
popf
push
aam
mov
add
test
and
xchg
bound
mov
cmp
add
mov
iret
fwait
insl
mov
mov
int3
aam
inc
lret
xacquire
or
jno
fdivl
repnz
sbb
lcall
dec
jp
pop
test
adc
cmp
adc
rorl
push
rcrl
movsb
and
aaa
notl
adc
dec
loope
mov
insb
sub
inc
leave
aam
add
shll
ja
pop
ss
outsb
rclb
loopne
cmc
mov
xor
dec
jp
add
pop
loopne
fdivrl
mov
pop
fdivs
and
mov
hlt
rcl
mov
jle
cli
mov
out
mov
mov
mov
sub
in
sub
fisttpll
dec
push
dec
push
add
enter
or
push
cmpsl
out
dec
inc
scas
add
jmp
sar
sahf
loopne
pop
mov
push
lret
addr16
cmp
sub
movsb
or
imul
ret
mov
mov
pop
push
outsl
dec
bound
fbstp
inc
mov
xchg
loop
sbb
jge
mov
push
dec
insl
dec
and
enter
int
je
out
jbe
je
push
mov
pop
xor
xor
adc
sbb
cmpsb
sti
or
aas
jle
mov
dec
decl
mov
and
cmp
or
bound
aas
cmp
stos
adc
dec
ds
test
mov
inc
mov
xor
imul
mov
xchg
call
dec
dec
xor
pop
out
shrl
fnstenv
scas
adc
xchg
nop
add
xor
add
pop
push
mov
gs
or
cmp
jge
mov
add
sbb
or
pop
inc
sbbb
xchg
pop
out
push
sbb
pop
mov
daa
adc
imul
push
cmp
push
les
sbb
cmpsl
or
mov
jb
insl
adcb
xor
bswap
imul
fldcw
mov
sbb
rolb
js
loope
xor
jg
adc
cmp
int
inc
push
add
mov
je
push
js
stos
rclb
or
jno
add
push
loop
cmc
or
dec
cmpl
rcrb
addr16
xchg
leave
mov
adc
call
pop
shlb
andl
xchg
and
xchg
repnz
pop
jmp
shrb
sbb
daa
cmc
cmc
jbe
cmp
and
inc
movsb
fbstp
ljmp
nop
mov
sub
nop
bnd
mov
pop
jg
sub
lea
and
xchg
cmp
mov
imul
iret
push
sub
inc
push
mov
pop
dec
add
cmp
xor
int3
inc
arpl
adc
imul
int
in
xchg
call
lret
xorb
sbbb
mov
movsb
push
mov
jns
xor
pushf
xchg
sub
push
insb
pop
addb
jns
mov
inc
pop
hlt
mov
add
xor
jb
or
push
or
sub
xor
test
popl
inc
mov
push
out
imul
cmpsl
aad
bnd
repz
jecxz
mov
push
rclb
mull
fsubl
negb
insb
push
mov
xor
out
fwait
pop
in
nop
add
push
pop
insb
mov
mov
lret
push
add
push
or
jge
add
bound
adc
les
and
add
push
xchg
rep
or
shrl
lahf
cmpsb
cmp
fldcw
add
ret
mov
xchg
hlt
sub
jnp
mov
cld
mov
dec
mov
lahf
xorb
iret
imul
enter
sub
shll
ret
or
sarl
lods
mov
sub
pop
out
dec
mov
push
xchg
jle
fwait
inc
sub
dec
sarb
insb
pusha
nop
pushl
mov
mov
outsb
fdivrp
je
push
push
mov
call
int
jnp
pop
add
cli
sub
xor
or
push
pop
mov
fcmovb
dec
test
inc
sub
in
idivb
outsb
xchg
xchg
notb
mov
shlb
xor
xor
and
lahf
push
arpl
push
jo
push
and
jp,pn
inc
xor
sbb
fidivrl
xchg
sbb
pop
jae
sbb
mov
jle
divb
sub
jns
mov
jg
jl
rcrl
loopne
adc
xlat
es
mov
int3
mov
imul
dec
sub
jbe,pt
pop
push
outsb
inc
jle
mov
mov
out
ss
es
push
cs
jbe,pt
pop
push
outsb
inc
jle
mov
mov
out
or
adc
ss
cmp
xor
inc
jle
cmpsb
lcall
out
out
sbb
ljmp
jbe
pop
push
out
inc
mov
cmp
xchg
xorl
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
