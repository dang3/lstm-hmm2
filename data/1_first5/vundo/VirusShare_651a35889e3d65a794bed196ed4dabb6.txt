sub
xchg
dec
jb
xchg
dec
cmp
cmp
cmp
cmp
cmp
in
es
in
outsl
xchg
sbb
fsubr
jmp
sbb
inc
and
add
out
mov
pop
add
mov
cmp
mov
sbb
daa
push
repnz
outsb
xor
adc
mov
xchg
shl
enter
jmp
jge
push
mov
dec
aad
add
ficomps
jbe
xchg
cmpsb
mov
jge
adc
inc
subb
sub
imul
fisttpll
je
enter
push
and
sti
push
xchg
xchg
xchg
ficoml
mov
pop
xor
and
mov
mov
add
adc
stc
sbb
mov
sbb
lcall
inc
fcmovnbe
push
sbbb
dec
ja
add
push
shll
nop
gs
pop
movsl
mov
je
testl
clc
divb
adc
movsb
pop
adc
sbb
ja
in
aaa
enter
xor
popa
scas
movsl
nop
or
cmpl
pop
push
jge
jne
adc
sbb
testl
pop
cs
jg
lock
movsl
inc
add
mov
lods
js
movsl
lods
xchg
iret
enter
pop
xchg
ljmp
mov
push
xor
je
jbe
loop
jo
je
push
outsb
movsb
iret
mov
scas
fisubs
into
dec
pop
loopne
test
adc
jl
test
inc
mov
sbb
or
cmp
cmp
ret
xor
leave
movsb
jae
and
outsl
mov
ds
out
addr16
add
loop
mov
pop
fxch
mov
mov
outsb
adc
push
add
movsl
into
push
loope
test
cli
adc
pusha
xor
pusha
aas
fstl
es
movsb
cltd
mov
fs
out
dec
dec
push
out
inc
nop
mov
cmp
sbb
dec
sub
or
mov
int
push
test
shll
xlat
out
shrl
adc
adc
std
popa
test
mov
or
pushf
jne
test
incb
mov
adc
adc
lahf
and
out
popf
gs
sbb
std
sub
adcb
and
sub
dec
inc
add
jle
pop
test
or
leave
pop
mov
jl
xchg
mov
movsb
pop
mov
fstps
mov
ja
fisttpl
insb
popf
sti
and
rclb
mov
dec
xchg
push
push
add
jp
cmp
jb
movaps
les
ds
popa
fildll
scas
adc
jno
inc
pop
pusha
add
sub
adc
push
pop
int3
lods
bound
xor
and
sbb
loop
cmpsl
or
push
shrl
sbb
into
push
test
mov
gs
imul
mov
leave
xchg
leave
adc
ljmp
aad
adc
rclb
xchg
loop
inc
mov
scas
jl
inc
adc
fs
jmp
sbb
iret
pushf
sbb
int
add
add
in
ja
or
mov
or
lea
lds
rcll
mov
jno
or
push
das
jae
das
xchg
data16
mov
sub
notb
xchg
fists
and
sahf
out
aaa
mov
jns
ret
sub
cmc
out
jb
inc
push
nop
movsb
cmpsl
imul
stc
es
mov
and
fnstcw
je
sbb
push
daa
jbe
scas
mov
and
mov
shrb
lret
getsec
scas
shll
cld
insb
xchg
cld
push
sti
add
mov
push
mov
lcall
scas
in
sbb
fcompl
lretw
fcomps
out
dec
sub
xchg
adc
xor
jo
insb
cmpsb
adc
in
cmpsl
icebp
daa
add
popa
xchg
adc
popa
mov
or
fnstcw
mov
cmp
inc
pop
nop
mov
cli
repz
cmp
mov
mov
test
mov
cmc
data16
rol
loop
cmpl
cmp
fldl
in
sub
mov
jne
mov
icebp
pop
sub
dec
pop
pop
movb
xchg
fildll
xor
sub
push
dec
int3
push
inc
sub
xchg
call
aas
mov
sub
out
aam
ds
test
mov
dec
dec
xor
or
das
lret
call
sbb
leave
test
sahf
ja
jge
es
xchg
jge
ljmp
popf
in
inc
mov
lock
mov
or
inc
cs
mov
insb
mov
push
xor
xor
or
push
les
mov
inc
cmpsb
dec
hlt
mov
lahf
repz
pushf
xchg
push
out
lods
or
or
push
jge
push
mov
mov
cld
pop
popa
inc
mov
or
in
jo
sbb
cmp
outsb
clc
and
pop
lcall
sbb
cmpsl
neg
lcall
mov
or
jne
fsubrs
cmp
in
xchg
hlt
add
dec
daa
jno
jg
jo
cld
roll
lret
lcall
dec
pop
mulps
gs
pop
leave
mov
inc
out
xchg
add
orb
je
hlt
cwtl
mov
mov
dec
fcmovu
mov
jns
push
push
dec
mov
jb
mov
cmp
dec
pop
push
out
data16
pop
ss
lret
push
in
sub
icebp
pop
add
fisttps
xor
pop
hlt
mov
outsb
in
aas
data16
lahf
popa
test
flds
xor
sbb
iret
addl
jge
lret
mov
shrl
jns
jne
stos
pusha
push
leave
push
icebp
std
push
mov
or
imul
fs
loopne
push
imul
mov
push
std
cs
mov
test
or
movsl
or
inc
jl
mov
loop
lods
inc
jbe
pop
adc
inc
push
movsl
andb
xchg
imul
xchg
xchg
pop
arpl
and
mov
and
jae
inc
sbb
sti
dec
pop
adc
out
in
imul
inc
lret
sbb
or
xor
ret
sbbb
inc
je
lret
push
fists
mov
adc
mov
jo
iret
loopne
hlt
aam
jp
ret
inc
insb
mov
mov
sub
push
pop
or
adc
cs
std
add
pop
ret
push
ret
and
leave
xor
cltd
aad
push
add
or
repnz
cmp
cmpsl
fisttps
xor
addr16
cltd
in
das
adc
jae
add
movsb
daa
pop
dec
cltd
iret
push
jp
movsl
imul
je
xor
sahf
decb
adc
cmp
lahf
push
mov
inc
in
jbe
xor
sub
loop
jne
daa
insb
push
push
dec
aaa
add
or
insl
cld
mov
aad
cs
fists
iret
clc
in
push
fdivrp
jge
adc
fiaddl
jo
mov
jbe
int3
neg
pop
push
pop
push
ja
mov
insl
fstl
subb
fsubrl
ja
mov
mov
push
xor
pop
into
xor
or
lahf
add
outsl
stc
pop
inc
leave
and
fcompl
inc
mov
ds
sub
push
add
in
mov
xchg
push
pop
in
push
inc
push
lret
pop
mov
daa
push
test
outsl
jge
jmp
sbb
loop
add
mov
mov
pop
movsb
daa
add
fcomp
int3
mov
addr16
aaa
dec
leave
dec
push
xor
xorb
push
movsb
out
arpl
sub
cmp
pop
sub
dec
cltd
lock
pop
pop
cmp
xchg
lahf
xchg
jl
bound
dec
fisubrs
cltd
pop
insl
inc
sbbl
imul
cmp
mov
add
mov
xor
pop
xorl
cmc
jbe
mov
xchg
mov
inc
push
ret
adc
or
int3
mov
leave
cwtl
frstor
loop
leave
and
test
jbe
dec
lret
fcmovne
dec
xchg
loope
or
dec
inc
inc
das
push
rolb
or
or
outsl
dec
call
push
dec
into
push
cmp
bound
adc
adc
and
fbstp
je
cld
jo
jmp
jb
xchg
cmp
lds
push
cmp
das
fwait
sbb
mov
popf
pop
pusha
mov
sarl
frstor
imul
outsb
adc
repnz
lret
arpl
or
mov
fsubp
push
jnp
fisubrs
mov
xlat
movsl
cmpsl
scas
or
adc
icebp
push
sbb
dec
mov
jle
xchg
or
ret
and
cmpsb
pop
mov
sbb
repnz
jp
insb
aam
xchg
sbb
add
loop
adc
adc
mov
cmp
add
xor
adc
jb
cmpsb
in
and
aas
ret
mov
pop
enter
nop
adc
mov
mov
jg
iret
xor
or
aad
pop
fdivrl
adc
cld
jecxz
jno
sub
add
incl
lret
mov
lcall
in
cltd
scas
pushw
xor
and
adc
aam
mov
movsb
call
fisubs
ja
pop
adc
shl
inc
xlat
sbb
mov
xchg
add
movsl
int3
out
xchg
push
pop
std
add
js
into
add
jnp
mov
xchg
xchg
rclb
int3
iret
adc
neg
fsts
gs
scas
lock
or
cld
sub
xchg
int
jbe
cmp
fs
pop
mov
adc
push
xor
movsl
scas
mov
icebp
adc
mov
jne
cmp
xor
rcll
cmp
test
add
shlb
pop
jge
ja
xchg
jne
sub
fnop
scas
repz
jp
outsb
lock
pop
fucomip
out
sbb
int
mov
and
jg
adc
jmp
mov
sbb
jg
xchg
jp
sub
sbb
inc
pop
xchg
pushf
push
inc
dec
lret
aaa
hlt
inc
scas
sbb
outsb
stc
jo
sub
xchg
clc
mov
jno
orl
sub
or
loopne
int3
xchg
inc
mov
inc
int
or
push
push
push
lods
xor
outsb
inc
movsb
ljmp
aas
aas
imul
mov
das
adc
fisubrl
xchg
lock
lret
cmp
mov
ja
adc
inc
pop
xchg
xor
iret
dec
mov
cmp
cwtl
push
outsb
add
pop
mov
out
mov
insb
mov
pop
dec
imul
lcall
aad
sbb
aaa
ljmp
inc
push
aad
sub
sub
addr16
in
jg
outsb
mov
mov
test
mov
outsb
jo
xchg
gs
jns
jp
mov
cmp
add
add
enter
sub
inc
mov
add
test
push
sub
adc
and
or
in
scas
jge
xchg
ljmp
cmpsb
ror
inc
push
test
enter
dec
addr16
mov
aam
cmp
lock
sti
hlt
lcall
and
xchg
mov
jne
dec
js
sarb
cmc
stos
xchg
lods
stos
dec
idivl
mov
adc
rcrb
lahf
pop
pop
xor
test
or
lcall
push
add
cmp
repz
mov
nop
stc
mov
into
ss
or
or
pop
pop
dec
call
or
mov
sti
pop
and
jge
sarl
inc
insb
int3
cmpl
insb
test
sub
pop
imul
xchg
mov
xchg
out
test
popf
cli
lods
mov
adc
pop
push
sbb
sub
xlat
notl
dec
arpl
aad
sub
pop
dec
mov
add
mov
pushl
outsl
loope
iret
pop
and
mov
out
out
mov
test
sub
cmpsb
sbb
out
scas
aam
gs
mov
push
or
jg
and
jno
imul
sbb
outsl
add
fucomi
sub
repz
imul
jl
sub
xor
mov
sti
jae
cli
sahf
or
sbb
pushf
add
test
add
xlat
pushf
pop
outsl
sub
cmpsb
mov
dec
cmpsb
mov
sarb
mov
movsl
mov
mov
push
movsb
les
loop
jg
insl
ljmp
pop
mov
scas
mov
out
mov
into
lea
popa
lods
xor
mov
sbb
ret
adc
pop
jbe
hlt
aaa
dec
xor
test
sbb
loopne
cmp
add
leave
jno
mov
adc
repz
rclb
push
push
pop
mov
repnz
ret
int3
test
and
mov
ds
cmp
xor
push
inc
jge
sbb
cmc
fstl
bound
cmpsb
loop
push
cltd
cmpsl
jg
iret
jmp
insl
filds
sub
iret
or
cli
rclb
aam
pusha
fs
lock
add
cmp
testb
jmp
add
mov
mov
outsb
out
pop
and
pop
or
stc
jno
in
cmp
xor
mov
xor
in
sbb
xchg
dec
lods
cmpsb
aam
pop
xchg
je
ljmp
cmp
xchg
xchg
enter
adc
not
dec
ljmp
lahf
test
xor
test
add
xor
repz
add
jnp
testb
ss
addb
sub
mov
test
mov
es
loope
and
add
dec
fs
out
idivb
test
add
fs
push
ss
leave
out
outsl
fdivr
ret
xor
rcr
lret
xor
imul
and
vcmpss
jle
xor
sahf
mov
shll
adc
cltd
lret
rcrb
test
inc
inc
sahf
fldenv
insb
stc
lret
adc
hlt
jnp
cld
dec
xlat
int
mov
and
pop
ret
mov
jno
dec
xor
inc
adc
adcl
push
js
nop
fstp
ja
stc
jbe
xchg
push
inc
mov
dec
add
dec
push
push
add
aaa
rclb
mov
lds
adc
or
roll
push
add
mov
std
jb
std
cwtl
in
jbe
pop
popa
pushf
lea
sub
mov
sbb
fldt
xchg
sub
mov
movsl
sbb
adc
std
inc
sbb
lret
lcall
push
pop
mov
out
push
shll
imul
testb
icebp
adc
mov
movsl
sbb
inc
xchg
arpl
push
pop
rcrl
xor
mov
push
loope
jbe
cld
add
or
and
arpl
scas
int
xchg
aam
push
jae
or
ljmp
rorb
jmp
lahf
and
cmp
in
loopne
push
add
repz
mov
or
push
sbb
sub
jns
xchg
and
xchg
and
fistpll
xor
pop
sti
inc
outsb
aaa
push
lahf
aad
mov
leave
dec
fs
and
cs
lods
jge
add
and
dec
dec
in
add
test
repz
mov
out
inc
add
mov
xchg
fiadds
cmp
loope
stos
mov
loope
sbb
mov
scas
push
inc
pop
push
push
dec
addr16
lret
pop
mov
cmpsb
mov
int3
fs
je
sbb
ljmp
mov
mov
cmp
pop
fcomip
cmp
pop
mov
and
mov
dec
in
push
xchg
dec
xchg
cmpsl
cs
fidivl
lods
mov
cmp
movsb
ds
dec
imul
mov
mov
js
dec
add
repnz
sbb
and
jae
fbld
or
cmp
dec
imul
pop
mov
dec
sub
push
sub
pop
pop
sbb
subb
mov
adc
lods
jmp
xlat
dec
push
mov
setb
iret
out
mov
add
aas
jecxz
pop
das
mov
mov
fstpl
add
fldenv
in
jl
lock
insl
sarl
add
inc
xor
pop
fwait
int
cwtl
inc
ret
mov
es
cmp
add
fdivrl
sbb
sbb
xchg
loop
sti
test
jg
jmp
xor
mov
mov
das
or
arpl
adc
into
popf
jg
or
or
movsl
lea
mov
pop
pop
fcomps
pop
pop
mov
fwait
jne
dec
stc
dec
das
adc
sbb
pop
jae
pop
test
or
sub
adc
lcall
push
jecxz
mov
sbb
dec
xor
or
cmp
add
add
push
push
subl
dec
jge
and
add
add
mov
dec
insb
imul
xchg
sbb
out
mov
xchg
orb
jle
ret
fdivrs
and
push
lcall
pop
stos
loopne
fldenv
test
mov
imul
inc
mov
and
ss
imul
ds
int
int3
je
xchg
dec
int
jae
es
jmp
add
mov
scas
lret
sbb
fldcw
out
popa
insb
xor
jmp
pop
repnz
insb
in
lock
aam
mov
inc
das
loopne
movsl
mov
imul
arpl
leave
stos
fs
leave
data16
mov
mov
jg
aam
scas
nop
xor
cltd
sarl
cwtl
push
call
out
jne
push
shrb
cmpsb
test
dec
sbbb
scas
cmp
xor
sahf
out
aas
sub
fwait
add
pop
aam
or
pop
in
leave
push
je
mov
repnz
repnz
sub
xchg
mov
hlt
test
repz
add
nop
iret
mov
mov
cltd
pop
std
xlat
jmp
inc
dec
and
in
xchg
cltd
ret
mov
push
data16
mov
sbb
int3
cmpl
jns
cld
mov
cmpsl
es
inc
mov
push
fldt
xchg
push
inc
mov
jp
shl
mov
lods
xor
add
jl
cld
mov
push
inc
mov
mov
daa
cld
mov
mov
cwtl
xorb
jnp
fiadds
bound
inc
pop
mov
data16
and
xor
js
icebp
push
test
pop
fldcw
jns
mov
ret
xlat
mov
sub
cli
cld
loop
push
and
cmp
shrb
addr16
xlat
jge
xchg
jnp
mov
lea
out
insl
xchg
into
cwtl
test
mov
sahf
rcl
cmpsb
std
pop
fcomps
xchg
outsb
and
ficompl
cltd
stos
sbb
popl
jle
pop
outsl
adc
mov
xlat
test
and
lahf
cpuid
rcll
jb
sbb
cmp
push
sub
cli
fsubrl
jmp
orb
pop
imul
je
jge
or
mov
add
mov
mov
test
pusha
push
adc
aaa
cmp
pop
pop
aaa
mov
addr16
jmp
fimull
pop
add
sub
cltd
mov
mov
lods
in
xchg
and
inc
inc
add
add
out
adc
popa
popa
cwtl
xchg
fbstp
jae
shrb
cmc
call
mov
bound
clc
dec
xchg
icebp
in
mov
call
and
and
mov
xor
pop
loop
push
stos
into
lea
mov
shlb
jbe
test
mov
sbb
mov
aas
int3
cmc
pop
jae
data16
mov
sub
xchg
cmp
fwait
aaa
gs
adc
fdiv
aam
stos
fstps
pop
int3
jns
inc
sbb
jge
add
movsl
cmp
jle
std
mov
push
pop
imul
adc
subb
int
subb
dec
mov
lods
daa
mov
cmpsl
push
mov
call
sub
lcall
sub
adc
es
mov
jne
mov
pop
push
xchg
cli
inc
aad
sbb
lds
test
inc
xor
push
hlt
jl
and
mov
mov
cmpl
or
mov
iret
xchg
sbb
sbb
pop
ljmp
int
add
popf
cmp
jbe
mov
mov
scas
imul
insl
mov
iret
insl
mov
lcall
ja
insb
lea
push
cs
push
or
out
adc
frstor
xchg
fcomp
popa
lds
jge
ljmp
sub
push
mov
jge
xor
and
cmp
lods
push
into
pushf
sub
pop
pop
pmaxub
js
inc
cmp
je
movsl
ret
fnstcw
mov
sbb
outsl
xlat
rcrb
add
pop
jae
stos
mov
sub
xchg
inc
xorb
mov
aam
movsl
ja
in
xor
leave
jns
mov
test
roll
cmpsl
push
repnz
sti
jle
les
sub
mov
jge
and
rorb
xchg
add
and
aas
push
sbb
fidivrl
mov
out
loopne
sub
jecxz
ret
jbe
mov
shlb
and
add
adc
cld
jg
in
mov
and
sub
rep
daa
jbe
pop
jno
lods
or
mov
test
mov
cmpsb
test
inc
inc
shll
rcl
sti
loope
ja
inc
aam
push
aad
push
or
arpl
and
std
into
cltd
dec
scas
loope
fwait
mov
in
imul
add
dec
add
movl
clc
jns
inc
lock
iret
mov
xor
mov
pusha
jno
adc
fs
scas
test
push
push
daa
mov
push
int3
in
xlat
and
movsl
ret
dec
jecxz
subl
jae
adc
dec
shll
or
stc
aad
and
outsb
push
jae
popa
jecxz
das
scas
aaa
adc
jbe
cmc
dec
ret
push
jl
mov
or
scas
push
frstor
cltd
jle
and
paddd
jnp
inc
sbb
ret
rcrb
lcall
cs
push
out
jle
jo
pop
xchg
icebp
iret
fiadds
call
lahf
sbb
jmp
xchg
cmp
and
ljmp
inc
pop
daa
ja
push
lods
fnstsw
cwtl
sub
jae
mov
aam
mov
and
test
test
cmp
sarl
dec
inc
insl
mov
roll
outsl
mov
push
sbb
adcb
int
add
stos
ljmp
cmc
subl
or
sbb
fsubrl
dec
dec
mov
into
stc
sbb
sahf
jo
cmp
scas
sub
mov
popf
daa
fst
jnp
mov
aad
mov
jns
mov
push
xchg
or
test
orb
adc
jle
and
ds
lret
xchg
cli
jnp
mov
mov
and
icebp
jge
outsl
mov
shlb
ret
insb
add
out
push
pop
sbb
shrl
add
das
inc
dec
jne
hlt
daa
push
int
jbe
scas
iret
and
imul
cmp
push
xlat
not
stc
mov
xchg
inc
js
hlt
pop
lea
fnsave
jns
sbb
dec
push
fadds
jg
xor
add
int
sbb
sbb
negb
cmp
xor
add
out
inc
add
and
xchg
sarl
stos
cmp
dec
aad
sub
push
jg
outsb
int
or
and
test
ja
mov
or
mov
mov
lds
idivb
jo
dec
push
test
cmp
push
cmpsb
xor
mov
gs
pop
sub
sbb
lods
mov
jns
xchg
subb
repnz
cmp
mov
movsl
arpl
test
jnp
mov
dec
test
sub
jb
sbb
inc
aaa
add
es
andl
xchg
rcl
clc
in
aam
je
push
push
push
push
mov
push
jg
mov
mov
mov
pusha
or
sti
daa
das
cmp
out
cmp
pop
inc
insl
xchg
push
sbb
fwait
std
mov
adc
jg
mov
add
sub
std
je
stos
xchg
call
mov
dec
adc
insb
jecxz
xor
out
cmp
sub
int3
test
inc
push
int
adc
add
sarl
adcl
lea
popa
mov
xor
and
jmp
scas
mov
fidivrs
pop
fdivrl
add
cli
lahf
add
push
imul
cmpsl
mov
xchg
mov
inc
or
repnz
dec
push
xor
or
cmp
push
loope
mov
pop
dec
jo
cwtl
mov
lea
push
mov
xchg
int
or
inc
subl
pop
mov
repnz
mov
into
stc
push
in
fcomps
xor
cmp
leave
dec
int
or
adc
pop
cmp
mov
divl
ljmp
push
push
insl
mov
call
rorl
popa
mov
sub
fsubrl
mov
ljmp
jo
and
adc
lcall
or
jo
add
movsb
int
jnp
xor
pop
pop
and
cmc
hlt
ds
into
cmpsb
into
stc
mov
ja
pusha
inc
lods
movsl
jmp
or
mov
jns
daa
adc
stos
cs
dec
lock
cmp
add
fucom
imul
or
pause
sbb
pop
punpckhbw
rcrb
jno
imul
cmp
add
pop
sbb
in
lcall
sbbb
mov
mov
insb
jp
pop
jo
mov
shl
or
jns
in
cmp
mov
pop
lret
int3
push
cld
jb
dec
repnz
pushf
push
cmp
lods
shlb
xchg
jp
xchg
mov
dec
or
and
fyl2x
adc
mov
and
mov
jmp
push
int3
adc
pop
adc
mov
xchg
push
pop
jle
inc
inc
js
sbb
jl
ja
scas
fstp
push
dec
in
sub
push
ret
addr16
xor
pop
lcall
stos
jmp
inc
clc
mov
insb
lock
adc
and
ret
mov
sahf
inc
arpl
and
test
pop
xchg
push
aas
push
cltd
andb
adc
lret
cmp
xor
and
imul
aad
mov
shr
sub
push
ja
mov
cmc
jecxz
cmp
sahf
inc
push
pop
sub
push
mov
jmp
inc
fnsave
nop
test
pxor
sub
fwait
pop
jmp
jmp
mov
out
mov
lods
loopne
mov
cltd
jb
dec
int3
push
lret
dec
int
push
dec
push
adc
negb
je
test
loopne
incb
int3
sbb
fsubrs
cmpsl
loopne
pop
lret
pop
mov
xlat
mov
fmull
dec
imul
cmp
mov
ret
ss
scas
stos
dec
fs
dec
mov
pop
notl
jb
pop
sbb
xchg
fdivrs
mov
xchg
push
push
lock
push
in
mov
and
xor
enter
jmp
xchg
jb
jne
mov
sub
xor
loop
jge
and
cltd
mov
das
or
outsl
mov
aaa
icebp
test
aaa
test
mov
out
push
or
rcll
rcrb
mov
test
mov
shl
mov
aas
arpl
ja
mov
xchg
rcll
sub
in
dec
sub
pushf
test
cmp
push
shlb
fistl
rorb
sahf
xor
les
and
cmp
gs
mov
insl
mov
cwtl
jle
not
shlb
pop
aad
aam
pop
xor
sub
cwtl
loopne
push
lahf
ja
xchg
adc
xor
dec
rorl
and
andl
jb
int3
pop
gs
sub
xor
scas
pop
xchg
adc
insl
jmp
lds
pop
cmp
jge
cmp
cli
xor
push
cmp
add
push
push
dec
pop
jns
shll
aaa
fldt
adc
dec
fildl
lret
jg
mov
and
dec
ja
imull
mov
adc
ret
roll
or
out
xor
xor
push
pop
jecxz
adc
add
leave
insb
ss
push
add
and
lret
add
shr
pop
mov
mov
rorb
dec
cmp
mov
mull
clc
outsl
leave
ds
inc
sbb
mov
into
mov
popa
dec
cs
popa
imul
in
mov
sarb
mov
jp
push
push
sub
xor
je
xor
push
or
sahf
je
jnp
ds
mov
cmp
ljmp
push
dec
add
bound
mov
add
stc
imul
jnp
sahf
fildl
movsl
imul
mov
xchg
dec
dec
shll
hlt
mov
test
sub
mov
xor
adc
das
adc
jb
and
pop
rcr
popa
dec
movsl
and
push
iret
or
fstps
jbe
xchg
sarl
mov
clc
test
or
test
xor
shl
xor
mov
insb
xchg
fwait
and
or
mov
pop
imul
cmpsb
aas
int
rcll
bswap
fs
pop
rol
fwait
inc
mov
leave
xor
push
pop
nopl
addr16
sub
popf
adc
lock
xchg
icebp
out
in
and
cltd
pop
fmull
outsb
mov
fmul
loopne
and
xchg
es
and
push
movsb
cmp
out
daa
ljmp
push
push
inc
cmpsl
repz
xor
in
inc
in
xor
ret
push
sub
fists
jnp
and
rorl
andl
xor
inc
sbb
repnz
dec
dec
or
mov
sbb
push
or
movsb
jge
xlat
repnz
mov
hlt
xor
stos
je
lods
sbb
inc
sbb
dec
add
push
sti
adc
xor
and
mov
mov
fisttps
inc
xlat
jp
jl
adc
and
outsb
or
jp
idivb
lret
fistpl
mov
cmp
mov
pop
sbb
mov
pop
scas
pop
cwtl
dec
mulb
add
add
insl
xchg
pop
mov
mov
and
push
das
test
lods
inc
fldenv
sbb
outsl
sub
movsl
sub
sahf
inc
xchg
jo
jne
daa
dec
mov
shr
ret
add
pop
cltd
aad
push
test
cmc
lcall
mov
mov
sar
cmp
loope
dec
fbld
sar
cld
nop
int3
dec
cmp
pop
arpl
jecxz
add
jb
sarb
mov
ljmp
jle
lcall
lods
add
mov
xchg
mov
push
lret
xorl
xor
out
arpl
sub
cltd
lret
out
or
pop
mov
div
shl
or
adc
lea
sub
outsb
xchg
stos
jl
sbb
dec
jmp
sub
add
pop
xor
mov
xor
pushl
xchg
sub
roll
mov
mov
in
je
imul
cmp
pop
add
ret
sbb
sbb
aas
inc
ljmp
jp
lods
cmp
test
iret
pop
andb
repnz
inc
in
call
push
cmp
inc
sbb
adc
sbb
and
or
ljmp
xor
pusha
ret
ljmp
jns
dec
movsl
sub
lahf
cli
sub
in
mov
js
fistpl
lret
pop
pop
adc
add
xchg
pop
test
call
fdivrs
cmp
adc
and
cs
loope
xchg
movsl
mov
mov
cwtl
inc
add
mov
push
mov
ret
sahf
pop
mov
imulb
adcb
add
mov
lcall
out
dec
adc
imul
mov
nop
jmp
ds
xor
sub
pusha
gs
les
fdivp
in
sub
lcall
and
sahf
stc
pop
in
xor
cmp
sub
and
shlb
outsl
inc
sbb
cli
jge
mov
out
push
arpl
sbb
gs
xchg
sbb
pop
scas
xlat
mov
xor
dec
mov
mov
divb
lahf
cmp
jle
sbb
sub
xchg
mov
or
pop
adc
pop
or
jno
cmp
mov
cwtl
jl
lock
movsb
lret
mov
inc
pop
fiadds
aaa
mov
into
add
xor
push
scas
in
fcmovne
loope
adc
inc
xor
sbb
lods
movsl
cli
insl
outsb
pop
push
fistpll
pop
mov
or
or
mov
sbb
testl
mov
or
mov
test
and
dec
pop
addl
pushf
int
jmp
push
xchg
lods
xchg
push
cmp
int3
push
push
aad
scas
out
pop
jnp
repz
fstl
push
aaa
jbe
loopne
enter
sti
sub
scas
out
dec
rcrb
cmpsl
dec
mov
xor
pop
and
and
sub
dec
dec
int3
mov
push
out
ja
popf
adc
cltd
rol
lea
jl
cld
add
int
mov
outsb
pop
mov
jl
and
or
mov
mov
cs
and
outsb
packuswb
lods
loope
add
mov
les
fidivrs
mov
ret
scas
leave
pushf
xchg
xchg
mov
dec
push
js
mov
int3
jge
into
cmp
inc
jno
xor
ljmp
and
outsb
enter
fmulp
popf
lahf
outsl
jp
sarl
jb
rcr
sub
push
jno
sbb
lcall
fcoml
xor
adc
cmp
push
adc
inc
sub
loopne
sub
adc
ret
jmp
aas
sahf
cmpsb
sub
fwait
mov
push
imul
out
enter
cwtl
lret
in
push
sub
or
bound
inc
jg
lods
push
and
cmp
dec
or
hlt
addb
mov
lock
sub
ret
inc
cltd
repnz
je
cltd
push
pop
in
push
mov
ss
fnstenv
jae
inc
cli
repz
fsts
aas
scas
into
pop
test
stos
icebp
pop
arpl
dec
pop
imul
mov
int3
rol
inc
dec
sub
cwtl
pop
test
fidivrl
add
ljmp
test
ss
sub
inc
jne
mov
xchg
and
push
hlt
sbb
lock
mov
leave
cld
sahf
mov
mov
ficoml
cmpsb
test
jns
mov
movsb
push
pop
lea
pop
mov
pop
mov
test
shll
je
or
call
cmp
aad
mul
loopne
sahf
fildl
loop
jb
test
mov
sbb
xor
jo
cmp
ret
adc
mov
jg
notl
mov
pop
cmp
xor
int3
mov
mov
mov
or
add
outsl
xor
cwtl
je
push
adc
xchg
imul
lret
inc
mov
pop
push
mov
sub
call
insl
shlb
aaa
sub
or
jnp
ja
outsl
inc
stc
xchg
fcompl
ljmp
sbb
jno
sub
dec
cmpsl
fst
mov
es
push
out
bnd
gs
gs
sub
xchg
and
in
pop
jecxz
fsub
pop
pop
xchg
and
gs
xor
adc
iret
rcl
pop
add
inc
call
rcrl
pop
out
cmpsl
push
movsb
iret
in
sbb
iret
test
cli
xor
cld
sti
jnp
stos
not
jge
adc
iret
popa
jecxz
je
in
mov
dec
pop
and
jnp
test
xchg
aad
imulb
push
fcoms
daa
outsl
cli
mov
icebp
enter
and
pop
push
out
loopne
fcoml
add
cld
fmulp
push
add
loope
mov
sarl
and
or
push
jmp
jl
paddusw
imulb
aaa
mov
push
imul
stos
fimull
mov
cmp
sbb
das
insl
xor
or
imul
std
jno
xchg
stos
imul
cmc
out
sbb
xchg
into
inc
adc
dec
push
test
cmp
xchg
sbb
loopne
xchg
pop
xor
ficompl
add
mov
imul
inc
jl
jg
mov
test
movsl
inc
push
mov
iret
lahf
jnp
or
jg
push
pop
xchg
mov
cs
aam
sbb
xor
enter
or
dec
icebp
aam
sub
push
call
shr
xor
sti
dec
mov
test
and
pop
pop
clc
cltd
xor
dec
pop
insl
into
jno,pt
test
xor
dec
jge
shlb
ret
ret
jne
mov
ret
pop
dec
add
fsub
cmp
shll
cmpsb
push
mulb
push
bound
and
mov
xchg
push
xchg
inc
dec
xor
inc
out
adc
push
mov
or
cmp
fimull
nop
sub
icebp
ja
xor
bound
das
xor
cmp
test
sahf
mov
dec
popf
lcall
cld
jbe
pop
adc
nop
idivl
in
in
jmp
mov
test
shll
jns
call
in
aaa
movsb
dec
aas
or
push
xchg
mov
xlat
icebp
pop
cmp
mov
xlat
movsl
dec
leave
sbb
hlt
mov
inc
lock
and
je
subb
jl
push
scas
dec
fiadds
mov
or
jnp
sbb
mov
cmpsb
cwtl
gs
stc
lods
and
sbb
mov
aam
enter
cs
ljmp
les
and
cmc
xchg
insl
and
lcall
in
out
pop
mov
idivl
xor
cmc
mov
mov
xlat
mov
test
sahf
add
rorb
push
adc
rcrb
jo
lret
nop
cmpsb
je
pop
cmp
jbe
rorl
repz
inc
mov
adc
mov
cmp
sub
arpl
mov
aas
lods
and
sub
dec
cltd
stc
or
cld
repz
fisubrl
lahf
push
std
pop
jnp
or
adc
or
or
or
adc
adc
or
pop
and
and
test
orl
jnp
xor
jno
leave
or
and
aaa
int
inc
rorb
movsl
mov
sbb
pop
xor
cmp
fstps
sub
and
pop
push
sub
add
mov
mov
pop
xor
sub
into
out
ret
repnz
ds
and
and
xor
inc
push
sub
xchg
lret
lock
popf
cli
push
xor
or
or
xchg
lods
sub
mov
sahf
mov
push
outsl
fistpl
fcoms
pushf
faddp
je
int
les
push
cmovno
aad
movsb
push
fcmovbe
dec
scas
leave
mov
jo
es
pop
xor
out
xchg
clc
cli
fisubs
enter
pop
add
xor
mov
leave
jl
push
mov
mov
fucomi
es
jae
push
fisttpl
or
out
js
cmp
sbb
xchg
or
popf
mov
inc
fnstsw
pop
popf
out
stos
mov
cs
shr
stos
dec
mov
xchg
jp
jbe
push
mov
sbb
inc
movsb
xchg
ficoms
lea
add
gs
mov
test
test
fildll
inc
in
loopne
xlat
sub
cld
sbbl
and
xchg
sub
outsl
das
cltd
jbe
into
imul
pop
jecxz
aas
pop
shlb
stc
shll
lods
mov
mov
repnz
clc
adc
negl
lock
or
sbb
out
jl
xchg
lret
repnz
mov
and
movsl
sub
lea
cltd
out
sub
xor
mov
jno
xchg
sbb
imul
push
fiadds
ds
in
mov
pop
jecxz
outsb
pop
cmp
enter
movsb
das
ja
inc
jge
mov
push
lods
lret
mov
sbbb
jmp
stc
and
aad
xor
lret
or
jne
repz
cld
mov
gs
cmp
or
xchg
outsb
mov
arpl
test
push
stc
bound
push
rclb
sbb
lods
mov
leave
movl
pushf
fisttpl
pop
scas
mov
mov
clc
je
stos
in
xchg
mov
add
and
lea
cmp
adc
stc
dec
mov
push
les
jae
xor
push
adcb
testb
rcrl
fidivl
loop
fildll
adc
roll
dec
and
add
pop
pop
xlat
xchg
fnsave
add
hlt
repz
mov
fistps
jne
xchg
push
and
sbb
sti
es
nop
xchg
cmpsb
cmp
cs
icebp
or
jnp
stos
mov
scas
xor
mov
cmc
jno
enter
shl
xor
pop
adc
mov
xor
pushf
jge
loope
aad
aaa
popf
add
cli
hlt
add
scas
es
cmp
pop
gs
testl
in
dec
testb
xor
mov
out
sbb
dec
in
sbb
xor
cmp
popa
mov
push
inc
aaa
sbb
jge
sbb
out
add
lahf
pushf
mov
sbb
in
hlt
jbe
jae
push
call
sub
jecxz
or
aaa
and
jno
int
push
dec
loop
out
mov
xor
mov
cmpsl
mov
ja
push
cmp
outsb
xchg
iret
cmpsl
repz
mov
test
pop
mov
ds
into
push
jo
push
xor
and
push
rolb
push
arpl
sbb
or
add
jmp
cli
lret
popf
lar
icebp
aam
outsb
loopne
fists
cmpb
push
mov
iret
adc
mov
les
into
test
push
mov
push
addr16
xor
cmp
dec
pop
xchg
dec
cld
loope
std
adc
xor
sub
fidivrl
mov
int3
sub
aad
enter
or
jbe
imul
add
cwtl
sub
add
scas
cs
adc
fs
cmp
lods
jo
and
xchg
cmpsl
movb
shll
push
nop
sbb
pushf
pop
jge
jge
mov
jecxz
js
repnz
pop
mov
bound
out
pop
scas
insb
ffreep
xor
sbb
aas
mov
mov
xchg
adc
mov
sahf
mov
dec
std
xchg
sahf
in
push
and
xor
movsl
adc
add
add
mov
dec
xchg
or
cmp
addr16
out
sbb
test
pop
nop
rclb
call
out
loop
int
in
add
movsb
push
rorb
inc
jbe
ret
ds
dec
add
mov
mov
mov
inc
sbb
dec
or
push
mov
stos
je
loopne
push
cs
shlb
aad
xchg
dec
pop
adc
and
cmp
push
sti
nop
sub
ss
addr16
mov
dec
and
push
sub
ret
rcrl
cltd
lahf
in
push
sub
mov
in
aam
cmp
and
add
pop
xor
xchg
xchg
mov
xchg
sub
ret
test
in
das
ds
sbb
popa
push
cmp
in
imul
es
lock
sbb
mov
adc
sub
cltd
cmp
sti
pushf
lea
inc
stos
aad
mov
bound
add
sub
addr16
sbb
subl
xchg
stc
mov
addr16
jno
xor
lock
stos
test
cmp
add
and
sahf
aam
pop
test
loope
les
mov
push
jmp
adc
cmpsl
jno
scas
inc
pop
adc
sub
insl
mov
mov
andb
or
pop
testl
fistl
jge
pop
xor
lret
shll
jl
arpl
daa
push
add
imul
data16
dec
fldenv
fwait
push
pop
ss
mov
pop
jle
ss
roll
rcrl
setp
mov
add
adc
lret
sarb
or
es
mov
mov
xchg
lret
shlb
or
fcos
add
inc
bswap
jbe
out
repnz
stc
xchg
push
cwtl
jl
cmp
xchg
mov
aam
ljmp
dec
shll
rolb
pop
adc
and
push
scas
enter
loopne
decb
push
cmpsl
insb
sar
add
jnp
out
fcmovnbe
jp
mov
aaa
sub
sub
lret
int3
lods
add
cmpsb
or
sahf
leave
and
push
jl
mov
push
add
js
cmp
sub
cmp
jno
jl
jne
subb
push
nop
jbe
loopne
lret
jg
bound
sub
fsts
adc
out
pop
inc
jp
mov
das
inc
into
lcall
sahf
xlat
bound
pop
push
add
pop
stos
jnp
out
popf
out
jae
into
and
or
mov
fidivs
into
mov
sbb
lahf
clc
shlb
or
jg
mov
jge
jle
sbb
jmp
jnp
pop
or
cmpsb
icebp
sbb
or
pop
add
pop
or
dec
adc
mov
push
aad
notb
jns
lcall
mov
push
fildl
add
scas
insb
dec
mov
inc
push
hlt
popa
popf
add
mov
sbb
mov
add
adc
ds
outsl
ja
jae
jle
add
xchg
mov
mov
mov
imul
test
cmp
fcoml
sbb
dec
xchg
in
cmp
mov
scas
jp
inc
mov
push
adc
es
xor
mov
lcall
mov
mov
push
les
int3
stos
inc
clc
mov
push
mov
pop
and
mov
rcrb
dec
inc
jb
inc
xor
movsl
and
int3
les
andl
test
ret
jl
jno
jno
xchg
imul
dec
int
inc
cmp
pop
lcall
sub
jmp
sub
push
call
loope
sub
sti
push
lods
mov
pushf
add
adc
sub
adc
enter
repnz
inc
insl
imul
jecxz
sub
dec
mov
jecxz
sub
outsl
ja
in
orb
test
repnz
and
into
ret
shlb
gs
jecxz
jno
decl
push
clc
mov
roll
adc
or
sub
jo
jg
popf
xchg
push
shlb
movsb
jae
inc
jb
add
mov
nop
out
xchg
fs
sbb
mov
movsb
mov
mov
mov
daa
adc
cmp
sbb
lods
insb
cwtl
mov
lea
inc
loopne
jo
dec
out
pop
cltd
fcomps
enter
insb
xchg
pop
xchg
sub
xlat
mov
mov
xchg
popa
lahf
sbb
stos
cs
xchg
sub
sub
stos
cli
mov
push
push
fyl2xp1
loope
fsubs
je
clc
cmp
aam
out
es
in
inc
pop
ljmp
les
and
cld
int
add
mov
loop
js
cli
or
sub
add
mov
aam
pop
mov
and
or
cmp
xchg
es
test
cmp
insb
cwtl
push
mov
fidivrs
enter
nop
lahf
mov
and
lcall
cmp
sub
or
fadd
andb
mul
aad
and
push
pushf
imul
dec
in
jge
cwtl
stc
cmp
inc
jno
jle
nop
int3
lods
je
mov
sub
xor
sbb
packuswb
stos
lods
insl
dec
sbb
adc
push
jnp
shlb
or
rorb
push
int
and
call
aam
cmc
mov
stos
pop
xor
das
xchg
xor
and
cwtl
movsl
add
into
data16
pushf
loop
push
mov
cmpsl
cmp
mov
insl
in
das
mov
xor
inc
adc
mov
jne
test
jg
daa
or
in
mov
fsubl
shl
ficoms
call
mov
mov
jecxz
fisttpll
aas
dec
test
ss
dec
cmc
dec
stc
dec
out
sbb
rcrb
mov
pop
inc
cmp
cltd
aad
xchg
imul
add
inc
cmp
jbe
repz
je
xor
out
inc
xor
aam
and
in
push
pop
scas
inc
mov
lahf
je
int
test
imul
sahf
xor
adc
mov
fisubl
and
mov
mov
sub
inc
add
mov
das
jecxz
out
sbb
mov
mov
adc
push
cmpsl
lds
cltd
mov
xchg
in
fwait
ss
test
xor
jb
dec
xor
add
dec
call
int
ja
fcmovnbe
jp
mov
jbe
cmc
sub
shl
pop
orl
add
or
jnp
and
pop
inc
xor
add
mov
iret
aam
and
pop
xchg
lret
insl
test
ja
dec
dec
pop
cld
daa
cli
jno
jmp
push
mov
rol
call
pop
sub
xchg
in
mov
sti
inc
sbb
sub
mov
and
inc
leave
adc
and
rcrb
mov
jne
pop
or
inc
add
cmpb
in
sub
mov
and
mov
mov
cmpl
jge
enter
xchg
cltd
out
mov
mov
mov
mov
in
lret
jg
popf
inc
mov
test
xchg
ret
flds
inc
dec
jne
sub
out
sub
dec
mov
mov
and
push
mov
shlb
cmp
std
into
or
mov
xor
and
dec
cmc
jo
test
outsl
mov
sub
pop
ds
pop
stc
push
or
push
and
mov
lea
loope
outsl
call
push
add
scas
lods
rolb
jnp
in
xchg
xchg
xor
sbb
ljmp
aaa
popf
repz
adc
aam
cmc
mov
es
cli
pop
popf
pushf
pop
pop
mov
sub
push
push
adc
insb
fs
xorb
clc
das
pop
mov
out
repnz
out
mov
lods
jnp
xor
mov
pusha
xchg
scas
xor
xchg
lret
shll
push
sub
out
test
add
stc
sbb
and
sahf
pop
xchg
test
ja
sub
push
ret
test
xor
or
inc
cmp
mov
mov
int3
out
push
rorl
fadds
inc
les
mov
mov
arpl
add
sbb
aas
lcall
imul
andl
and
dec
int
fistpl
in
ret
lods
push
fistps
or
aam
les
cli
in
or
jmp
jne
imul
shlb
sti
pusha
std
shrb
ja
lds
mov
cmc
mov
popa
shrb
mov
orb
mov
enter
xor
daa
push
arpl
cld
push
loopne
enter
sbb
xchg
jg
ja
jnp
gs
inc
add
insl
push
insl
mov
sbb
cmp
hlt
mov
idivl
jns
and
push
xlat
jae
hlt
mov
in
sbb
mov
cltd
daa
inc
pop
sbb
leave
hlt
jae
xorl
sbbl
dec
xor
pusha
fucomip
stos
mov
mov
in
rcll
pop
sub
out
push
call
mov
notb
mov
ret
jp
leave
idivl
mov
cmpsl
mov
push
jmp
push
in
repnz
fdivrl
cwtl
add
in
add
add
fiaddl
test
mov
aam
push
ljmp
adc
movsb
adc
rcr
push
sarl
cmpsb
fcompl
mov
xchg
addl
push
mov
lret
rclb
push
aas
mov
xchg
adc
sub
inc
mov
data16
or
and
dec
mov
sbbl
mov
insl
mov
xchg
shlb
in
xchg
push
sbb
jg
inc
lds
inc
dec
inc
aad
into
lret
lahf
cmpsb
mov
cld
movb
andb
mov
lahf
mov
icebp
inc
adc
jo
repnz
inc
movsb
xchg
cltd
xchg
mov
in
mov
mov
dec
lods
mov
dec
mov
cmp
mov
das
inc
xor
rclb
or
cmp
call
push
cmpsl
jnp
sub
lahf
hlt
jmp
inc
call
pushf
or
fidivs
inc
ret
lret
fs
xchg
jl
pop
int
data16
aam
ss
outsl
ret
imul
mov
enter
fldenv
push
shrb
adc
call
lret
aad
imul
cmc
aad
shl
inc
mov
jbe
push
fists
inc
popa
pop
add
mov
fsub
xor
and
xor
movsl
nop
cmp
jnp,pn
xor
xchg
negl
rolb
dec
stos
insb
add
movsb
outsl
push
enter
out
in
mov
scas
inc
inc
stc
or
xchg
and
repnz
adc
sub
pop
les
xchg
shl
xchg
inc
stos
out
les
pop
adc
lods
imul
xor
xor
xchg
ds
mov
dec
lahf
adc
ret
ds
int
arpl
push
add
in
je
jmp
mov
iret
xchg
aad
xor
push
in
in
sub
sub
mov
pop
pop
xchg
lea
jl
or
stos
sbb
xor
rclb
mov
pop
out
cld
xor
addr16
test
mov
mov
gs
pusha
nop
xor
rorl
popf
pusha
sbb
dec
lret
sub
adc
sub
call
js
pop
jnp
xchg
call
dec
xor
popf
test
mov
rcl
xchg
mov
lcall
test
lret
popf
or
add
sarb
fldt
out
imul
mov
lret
xchg
fbstp
in
inc
adc
imul
mov
cmp
fdivl
out
xchg
scas
js
int
xchg
xlat
jecxz
or
xchg
cmp
in
and
push
inc
and
addr16
roll
lds
jecxz
pop
sbb
loopne
push
imulb
fsubrs
sbb
lcall
jns
mov
or
xchg
xor
outsl
ss
cmp
sti
data16
xchg
iret
std
leave
ret
mov
scas
shlb
sti
adc
lahf
lock
stc
jae
mov
fs
jns
es
orl
xchg
inc
clc
rcrb
mov
dec
mov
incl
js
xchg
jo
out
mov
push
fmull
int
out
scas
jecxz
ds
andb
or
stos
sub
dec
out
jne
mov
dec
mov
jge
repz
and
imul
stos
jmp
mov
andb
ds
push
cwtl
add
xor
fwait
test
rcr
and
pushf
cmpsb
outsl
or
cmp
stos
test
mov
dec
inc
cmpsb
iret
mov
and
or
pushw
jl
bound
pop
int3
xchg
mov
imul
push
movsb
xchg
pop
pmuludq
pop
adc
es
fimull
mov
mov
aad
mov
and
std
aaa
fstpt
xor
add
testl
fistpll
dec
jbe
int3
shlb
lods
and
pop
mov
stc
and
cmp
cmpsb
pop
repz
je
xchg
out
sbbl
sbb
xchg
inc
mov
das
mov
ffree
lret
dec
push
dec
adcb
cmp
add
adc
or
out
lock
aas
jnp
inc
and
scas
je
sbb
test
and
fnstcw
lods
shll
and
movsl
cmp
repnz
ss
mov
fisttpl
pop
iret
in
movsl
lcall
dec
scas
inc
jecxz
mov
mov
fdivrs
add
lock
fildl
mov
pop
xchg
imul
shrb
rcrb
cli
inc
xchg
out
and
lahf
aas
mov
jns
xchg
movsl
jecxz
xor
and
sbb
pusha
xchg
std
clc
and
adc
loop
arpl
sub
movsl
cmc
adc
pop
xchg
fiadds
sahf
dec
pushf
out
mov
add
popa
sub
sarb
or
hlt
test
sub
mov
add
ret
push
mov
aaa
pop
arpl
rcrl
and
std
adc
movsl
inc
stos
in
lods
mov
pop
scas
sbb
mov
sti
rcrb
sti
or
shr
mov
lret
cmpsl
adc
mov
and
sub
sar
je
or
iret
sub
xchg
test
cmp
jns
pushf
mov
fdivrs
cs
or
call
jne
int
cmp
pop
test
aam
push
sbb
push
mov
lcall
icebp
cmpb
pushf
or
pop
stos
popa
sub
jnp
popa
push
dec
mov
pop
push
sub
sub
push
jle
cli
mov
in
das
lods
pop
xchg
sbb
xor
sbb
push
xor
sbb
rorl
lods
add
or
in
in
popa
test
xchg
adc
xchg
mov
cmpsl
aaa
xchg
scas
je
mov
enter
out
mov
cmp
sbbl
xchg
test
out
dec
pop
jns
ja
xchg
add
inc
sbb
mov
movsb
icebp
mov
pop
sbb
in
movsb
mov
lcall
and
pushf
xor
push
bound
gs
lahf
ds
cltd
xor
inc
xchg
add
sub
jbe,pn
fcmove
stos
repz
scas
insb
pop
push
adcl
leave
jno
push
xor
xchg
ss
pop
and
push
xchg
cwtd
pop
push
aad
mov
lahf
pop
insl
mov
int3
pop
cmp
in
movsl
mov
iret
xor
shlb
enter
jo
cmp
jle
add
push
cmpsb
and
scas
scas
push
push
mov
fcmovnu
test
or
jle
mov
xchg
mov
xor
pop
pop
push
and
push
or
je
insl
ss
leave
stos
and
mov
adc
fmull
les
add
push
cmpsl
xor
sub
out
inc
jmp
mov
stos
push
nop
addr16
insb
pop
shll
cmpsb
dec
jno
jg
push
add
enter
inc
inc
dec
gs
idivb
inc
filds
xchg
daa
decb
int
sbb
xchg
jge
test
push
or
sub
jo
iret
adc
mov
jge
or
sti
cmc
fidivrs
scas
inc
into
pop
in
pop
lods
shrb
cld
inc
fdivl
dec
loop
add
jle
mov
jns
mov
ds
adc
out
xchg
inc
mov
out
nop
clc
ss
cmc
push
inc
mov
xor
xor
xchg
insb
clc
push
xchg
inc
ret
pop
pop
dec
popa
push
lods
mov
flds
lods
xchg
jmp
jb
dec
loopne
xchg
inc
ljmp
cmp
into
rolb
sbb
cmp
mov
add
jo
xorb
mov
inc
test
push
and
mov
mov
outsb
pop
inc
jle
testl
mov
mov
xor
insb
xchg
lahf
jno
nop
mov
xchg
out
imul
pop
fld1
cli
lcall
loop
xor
xor
dec
and
fwait
movsl
lds
dec
push
mov
xorl
jmp
lcall
mov
pop
fists
pop
jbe
sbb
sbb
jmp
pop
sub
out
test
lret
xor
and
int3
fidivrs
fisubs
xchg
stc
lret
sub
xchg
std
loop
sub
lods
sbb
repnz
data16
mov
cmpsb
xchg
mov
aad
aaa
sbb
fstp
sub
sbbl
jp
out
mov
cld
into
lock
add
add
add
clc
lea
out
cmp
mov
rorl
scas
add
adc
mov
jl
xchg
cs
jl
dec
mov
aaa
lret
les
sbb
mov
ljmp
call
scas
adc
cltd
daa
jnp
adc
add
mov
pop
push
out
jbe
jle
sub
cmp
cmp
lds
or
adc
inc
ficompl
addr16
lods
xchg
test
or
outsb
ficoml
aas
aam
shl
and
or
call
mul
fwait
cli
fisubrs
gs
mov
popa
int
mov
in
xor
cmp
test
insb
sbb
out
iret
push
pop
bnd
fiadds
xchg
inc
xor
pop
and
add
mov
dec
repz
mov
sbb
mov
out
xchg
pop
pushf
std
jbe
xor
insb
push
loopne
mov
sub
jecxz
pop
jae
mov
js
cmp
testl
mov
shll
fiadds
jns
mov
push
fsub
cmp
inc
push
or
jp
mov
xor
hlt
stos
je
loope
adc
sbb
pop
lods
divb
xor
mov
stos
jl
pop
push
fidivs
and
dec
lcall
stc
insl
loop
int
lods
adc
jns
loope
mov
jle
pop
out
cmp
pop
mov
and
mov
adc
js
pop
aam
sbb
sbb
mov
jl
mov
dec
dec
loopne
fildl
cli
test
ss
add
add
enter
mov
movsb
xchg
push
ret
add
data16
adcb
out
or
sub
push
call
jmp
push
cmp
mov
push
push
aam
loope
push
mov
js
push
xlat
inc
or
push
or
les
daa
mov
js
decb
lret
test
inc
adc
dec
dec
sti
xor
sbb
cwtl
sbb
jl
loope
sahf
dec
ret
mov
addl
imul
adc
lret
adc
xchg
push
cmp
sub
fisttps
mov
mov
push
add
lret
sbb
cmp
fdivs
lock
ljmp
sbb
rcll
and
aaa
xchg
sbb
adc
ljmp
jg
or
fimull
icebp
loop
mov
mov
dec
aaa
dec
xor
arpl
lods
mov
mov
pop
mov
mov
xchg
cmp
fists
or
ljmp
lods
xorl
sbb
roll
sbb
push
shr
cmp
dec
jl
sub
cmp
add
lcall
lahf
test
sti
jle
and
cmpsl
pushf
test
stc
inc
inc
addr16
fs
and
mov
mov
push
out
andl
or
mov
fidivrs
in
jg
xchg
daa
push
push
arpl
mov
fimull
dec
mov
mov
mov
mov
test
inc
push
jns
insl
das
sbb
dec
sub
pop
xor
cld
aas
mov
addr16
in
sbb
add
cmp
jmp
pop
adc
jns
cmp
cmp
stos
cmp
dec
mov
mov
sahf
dec
out
mov
scas
fwait
pop
push
add
mov
cld
sbb
cmpl
call
imul
mov
in
inc
mov
hlt
adc
lods
and
inc
and
in
jno
jns
or
shrl
sub
inc
and
rclb
sub
xlat
repz
and
dec
cwtl
pop
xor
xor
fists
enter
dec
dec
lret
xchg
adcb
jle
icebp
and
jecxz
cmp
dec
add
je
add
mov
fwait
icebp
outsb
sub
push
imul
leave
insl
loop
negl
sti
pop
mov
and
jp
xchg
addr16
subl
es
ret
pop
insb
lret
ficomps
pop
fs
mov
ret
and
mov
xor
mov
jb
pop
mov
ljmp
dec
sbb
cmp
scas
sbb
ja
hlt
dec
icebp
test
inc
addl
xor
pop
lock
jl
mov
mov
fnstcw
or
inc
jb
test
jg
nop
ret
mov
stc
pop
lods
mov
xchg
add
ljmp
push
sub
jmp
xchg
mov
ret
int
mov
push
jle
sub
sbb
dec
inc
sti
iret
fs
test
cmc
sbb
test
mov
fldcw
loopne
icebp
loopne
pop
add
inc
ret
dec
cmp
sbb
or
sub
mov
and
cmpb
sbb
jge
outsb
jge
std
push
or
outsb
icebp
pop
xchg
leave
mov
pop
or
jecxz
or
push
push
or
adcl
sub
sub
inc
cld
push
repnz
pop
sub
push
adc
mov
dec
cs
sub
inc
addl
repnz
mov
or
fldt
push
jno
mov
jp
sub
dec
andw
cltd
repz
mov
std
aam
mov
fisubl
jnp
or
sbb
dec
hlt
fsubp
cmpsb
and
or
pop
in
data16
pop
nop
aam
inc
testb
jecxz
sub
sub
inc
shl
cltd
pop
call
test
scas
enter
mov
cmp
loop
adc
lock
add
fisubs
fildll
jne
cmp
dec
or
dec
adc
add
movsl
jecxz
jno
scas
dec
cwtl
cmpsb
clc
push
outsb
std
inc
outsl
data16
xchg
or
pop
add
dec
mov
pusha
mov
pop
push
jno
cmp
fs
adc
mov
sub
aam
mov
sbb
int
insl
pop
pop
inc
dec
add
pop
mov
lea
jg
int
gs
movsl
call
addl
sbb
pop
pop
inc
mov
jbe
inc
icebp
sbb
and
push
pop
out
lds
lock
sbb
sub
dec
push
enter
jge
sub
pushf
leave
mov
cmp
jmp
rcrl
insb
xor
pop
dec
dec
add
icebp
lock
popf
incb
or
add
ljmp
push
push
cmp
std
jg
cmp
xchg
adc
scas
or
pop
sbb
xchg
or
test
cmp
adc
jp
or
movsb
pop
sbb
pop
outsb
xchg
pop
push
mov
and
cmp
insb
or
lahf
xor
jae
jmp
imul
lea
sbb
mov
dec
cld
iret
dec
inc
jns
push
test
and
mov
xor
out
inc
nop
and
cmp
mov
mov
xor
std
sbbb
dec
out
xchg
xchg
mov
out
call
fs
pop
paddd
repz
jmp
frstor
cmc
pop
shrb
add
sbb
push
pop
nop
pop
int3
es
outsl
mov
dec
mov
lea
in
les
dec
sub
sbb
fnstenv
jo
xor
das
mov
mov
sbb
and
test
lret
aas
std
aad
xor
jbe
push
cmc
pop
std
sbb
dec
jne
in
push
in
mov
mov
mov
inc
fnsave
push
popf
test
sub
cmp
js
xchg
jae
jno
jge
pop
inc
pop
out
mov
xor
aad
pop
dec
sahf
dec
fs
les
cmp
sbb
sbb
bound
movsb
into
xchg
dec
jnp
aad
xchg
sahf
adc
mull
mov
shlb
sbb
or
rdtsc
mov
aas
jne
lods
test
adc
jle
pop
lret
jns
fisttpll
repnz
cmp
mov
add
pop
push
add
xor
cmp
sbb
int3
push
push
leave
jp
lahf
int3
xchg
mov
push
lret
dec
outsl
jmp
out
sub
outsb
inc
sub
add
mov
fsubs
jne
mov
sub
sub
or
ss
add
negb
adc
mov
mov
fcmovu
es
sub
xchg
les
add
leave
jp
or
xor
lds
inc
pop
cmpsl
add
aam
xchg
dec
nop
lret
sub
out
add
jne
test
aas
xor
push
fs
sub
and
mov
fildll
nop
outsb
mov
push
testb
or
fldcw
add
add
outsl
adc
loop
incl
pusha
rol
movsl
pop
imul
xlat
jecxz
popa
xchg
jne
mov
movsb
lcall
out
lahf
cmp
in
mov
mov
ret
mov
mov
push
inc
sbb
sahf
push
pop
add
cmp
test
pop
je
adc
push
fcmovu
jbe
ror
cmc
fisubrs
int3
lahf
sbb
jg
fwait
enter
pop
sbb
xor
pop
loopne
lahf
and
je
mov
sub
in
mov
lea
sahf
mov
push
push
push
sub
jle
lea
cmp
js
jp
int
mov
insl
leave
repz
mov
dec
xor
add
pop
push
xchg
addr16
or
mov
mov
or
hlt
insl
sub
icebp
dec
aaa
adc
repz
mov
adc
jle
xchg
adc
popa
cmp
and
imul
mov
adc
mov
mov
outsb
cwtl
and
cld
roll
jae
inc
out
dec
fcoms
sahf
das
add
mov
mov
jns
fstl
add
imulb
iret
sar
fmull
shll
mov
cltd
fs
pop
pop
orb
jecxz
rcrb
cmp
hlt
cmpsb
sbb
cs
cmp
in
pop
push
mov
invd
imul
inc
insl
lea
or
fdivr
add
shr
aam
les
and
pop
xchg
fdivr
xchg
ror
pop
xchg
repz
sub
cmp
fnstenv
xchg
xor
mov
je
xlat
mov
stos
sub
inc
xchg
inc
push
sbb
out
cmpsl
fstpl
mov
pop
repnz
jno
fsubl
fldt
rolb
sbb
jmp
mov
ficoms
jns
lret
in
je
cwtl
fsts
test
lahf
pusha
bnd
jmp
pop
push
push
nop
add
std
push
loope
xor
lret
mov
add
mov
outsl
aaa
sbb
insl
icebp
mov
adc
jo
out
mov
pop
jmp
mov
inc
jne
ret
cmp
decl
pop
adc
xor
push
mov
mov
dec
push
jmp
mov
cmp
or
xchg
jnp
imulb
outsb
inc
mov
fistl
sarl
cmp
fdivrs
aaa
ja
mov
or
sbb
pop
xchg
pop
dec
aam
ret
mov
push
add
cmp
test
in
mov
dec
test
cs
jle
fcoml
out
pop
popl
call
jmp
cmp
ror
sub
stos
lods
mov
ret
sub
pop
mov
xchg
cli
aas
cs
add
mov
mov
sub
mov
out
cld
mov
mov
inc
pushf
inc
fldt
fisubrs
nop
insl
add
adc
shll
lahf
aas
xchg
jne
dec
inc
lds
into
rorb
lahf
xor
les
ret
adc
out
ss
fstpt
test
cmp
outsb
dec
test
out
mov
sub
cmp
ret
xchg
sub
xchg
sarb
test
lret
adc
in
or
push
xchg
mov
xor
data16
inc
xchg
js
mov
cltd
sub
hlt
repz
push
adc
stos
jmp
rcll
in
roll
xchg
fs
mov
stos
inc
lahf
dec
into
lods
add
leave
cmc
movb
lahf
mov
scas
pop
push
icebp
or
fwait
adc
mov
or
push
imul
jp
fwait
scas
loopne
xchg
hlt
int3
mov
mov
lret
or
pop
jecxz
lea
mov
gs
xchg
mov
stos
adc
cmp
data16
add
enter
pushf
cltd
shrb
jno
pop
xor
pushf
xchg
pop
jns
addr16
inc
aas
push
pushf
cmpsl
fwait
sbb
in
stos
ret
bound
inc
push
mov
pop
xor
xchg
inc
dec
repnz
mov
mov
and
in
xchg
pushf
mov
push
filds
mov
arpl
xchg
data16
cmp
loope
pop
aas
xor
mov
dec
popa
out
and
push
adc
or
in
sbb
aaa
andl
mov
in
jnp
andb
mov
pushf
sahf
jmp
mov
shr
adc
repz
icebp
pop
enter
or
or
enter
cmp
cltd
shl
hlt
jp
shrb
xchg
or
and
push
adc
fdivl
adc
xchg
les
lods
loop
inc
test
cli
jnp
mov
lods
lcall
addr16
adcb
ret
mov
rorl
fildll
mov
mov
ret
xorl
mov
cmp
adc
adc
insb
sbb
jle
es
mov
lods
push
inc
leave
cli
mov
xlat
sub
xchg
test
add
fnsave
mov
mov
bound
pusha
and
movsb
sbb
xor
fdivrs
and
daa
push
cmp
pop
adcl
js
das
add
outsl
cmc
cmpsl
push
scas
xor
insl
iret
or
or
aam
notb
scas
int
sub
sbb
dec
adc
stos
ss
in
fxch
xchg
or
cmp
xchg
popw
pop
mov
add
mov
pop
negl
and
and
fisubl
and
lahf
aas
dec
xchg
frstor
push
test
mov
sub
ljmp
daa
nop
das
sbb
and
stc
popf
ja
mov
shlb
gs
cmp
sbb
shll
icebp
sub
or
mov
sti
ds
repnz
sub
shrb
jne
movsl
lahf
aaa
rcrb
pusha
cmp
test
scas
xchg
pop
int
or
lcall
pop
inc
mov
push
shrb
es
inc
sub
cmp
rcll
xor
jno
cmp
pop
cmp
and
cmp
ret
scas
cld
mov
cwtl
iret
int3
dec
inc
xor
xchg
dec
adc
subb
dec
xor
sbb
and
mov
pop
lret
test
daa
test
insl
jbe
xor
push
iret
int3
stos
stc
insl
pop
in
and
fiaddl
push
add
xchg
ret
mov
jle
arpl
rorb
pop
sub
mov
les
or
push
out
sub
cwtl
mov
repz
pop
pop
cmp
xchg
pop
insb
sub
sbb
cmc
inc
icebp
xor
in
mov
xchg
pop
add
jle
sub
push
shlb
scas
in
pop
mov
pop
xor
in
jne
cmc
mov
dec
cs
sub
pop
cld
lret
into
and
mov
push
xor
mov
bound
and
lahf
jbe
inc
lods
aam
lods
mov
mov
pop
mov
int
test
std
cmpsl
stc
fisubrs
jge
scas
cmpsb
cltd
ss
shrb
sbb
lods
xchg
mov
pushf
push
movsl
in
pop
ffreep
mov
sbbb
test
pop
fwait
scas
and
sbb
or
and
push
jno,pt
jle
mov
mov
in
das
mov
xor
movsl
popa
paddsb
outsl
lret
dec
popa
mov
popf
or
sbb
xchg
pop
jnp
pop
ljmp
dec
faddl
sub
leave
xchg
iret
out
loope
add
loop
repnz
jle
shlb
fisubrs
push
mov
inc
dec
sub
pop
dec
push
int
cli
aad
outsb
jnp
push
out
scas
imul
cld
inc
fs
inc
pop
add
inc
testw
clc
cmp
push
jg
jmp
je
cmc
mov
cmp
jle
inc
cmc
cli
sub
es
add
mov
xchg
mov
inc
adc
dec
cs
push
movsb
add
aas
sti
fcoml
popf
cmp
push
insl
jecxz
xchg
data16
add
fdivs
sub
inc
add
push
rcrb
cmp
sarl
stos
lods
test
lret
or
pusha
jmp
pop
lcall
lds
std
sub
sub
add
dec
pop
in
es
mov
inc
mov
in
sub
fsts
stos
mov
push
shrb
cwtl
adc
sbb
or
mov
mov
sahf
insl
fidivrs
cmp
mov
test
fldt
dec
out
push
inc
xchg
cmpl
dec
xchg
out
inc
das
push
call
mov
std
xlat
lcall
push
mov
aad
and
mov
xor
mov
inc
mov
cwtl
in
in
dec
jae
fisubl
push
in
out
inc
add
inc
xorb
sarl
dec
and
shll
leave
ljmp
stos
mov
enter
aas
in
mov
pop
mov
xchg
mov
jns
cmp
dec
xchg
lea
cmpsl
aam
pop
into
mov
faddl
cld
cmp
jl
or
mov
mov
jne
xchg
pop
push
les
add
cmp
fs
mov
lea
cmp
push
loopne
dec
jmp
repz
loope
mov
insl
xchg
mov
push
mov
ss
test
fldl
push
lret
sbb
mov
dec
sub
mov
sarb
cmp
ss
and
cmp
into
jnp
jle
cli
jae
fstp
jle
test
xlat
adc
hlt
push
jbe
mov
pop
test
lret
jle
inc
test
add
loope
stc
psllw
or
jnp
xor
or
ret
fistl
in
mov
ja
loop
jae
push
push
jmp
bound
cs
insl
inc
int3
inc
xchg
dec
cli
lahf
jmp
and
jle
ds
xchg
dec
push
test
ret
sub
cld
sbb
rcrl
movsb
roll
cwtl
push
fstpl
std
repz
push
aad
push
repz
mov
sub
inc
daa
push
es
xchg
jns
adc
cmp
push
xchg
sbb
js
jno
cmp
scas
sbb
ret
mov
fidivl
mov
push
fldcw
shlb
sub
mov
scas
stos
adc
push
pop
sbb
sub
sub
sub
sahf
cmpsl
adc
sbb
stc
cmpsl
add
in
inc
lcall
fnstenv
test
lock
push
mov
dec
fsubr
sub
ret
or
iret
ds
xchg
sub
inc
fwait
push
mov
adc
xchg
insb
pop
mov
jg
pop
xor
xor
call
ficomps
cmp
sbb
pop
fwait
cmpsb
fdivl
push
dec
xor
sbb
inc
add
xchg
or
push
shlb
lea
dec
test
pop
push
mov
mov
mov
mov
test
or
push
out
mov
push
cld
inc
jecxz
cmp
jge
push
repz
in
push
lret
jecxz
push
xchg
subb
call
mov
jnp
jnp
mov
cli
xchg
into
int
popa
pusha
add
divl
cmp
insb
popa
hlt
dec
outsb
dec
sub
xor
imul
or
mov
mov
mov
test
cmp
jmp
aaa
xchg
out
inc
daa
add
jp
adc
or
jns
pop
inc
sahf
inc
outsl
mov
pop
cmp
cmp
andl
fdivs
pop
bound
ss
jno
dec
pop
stos
in
data16
int3
mov
fs
icebp
clc
dec
arpl
je
outsb
sti
mov
sbb
sahf
stos
mov
js
ficoms
or
cs
cmp
andb
pop
jbe
testl
mov
add
ret
fdiv
and
cmp
mov
mov
dec
insl
jp
das
and
lods
or
ficompl
pavgw
fwait
mov
je
push
jne
lret
push
lea
add
cmc
into
sarl
add
js
xchg
pop
dec
add
iret
sub
xchg
inc
inc
mov
xchg
sbb
adc
test
repz
sub
lds
loopne
jp
in
ja
in
mov
mov
pop
inc
inc
icebp
mov
and
cmpsl
pop
xchg
dec
out
ss
pushf
dec
shll
pop
jge
popf
imul
roll
pop
dec
lods
xchg
sbb
adc
jo
mov
mov
out
dec
ss
into
push
pop
xlat
outsl
mov
cmp
jo
mov
dec
xor
and
sbb
fdivl
mov
xor
mov
cmc
mov
xchg
jo
or
mov
pushf
push
call
mov
or
repz
rcrl
mov
sub
ds
insb
shrl
movups
out
pop
pusha
aaa
dec
add
mov
loop
loop
leave
fdiv
cs
mov
push
fs
push
push
incl
daa
or
cwtl
dec
inc
movsb
sbb
aas
mov
fildll
mov
sbb
cltd
jbe
out
xor
sub
jmp
mov
es
add
clc
pop
aam
ds
cmp
add
sub
int
jb
push
jns
or
stos
push
add
lcall
cltd
push
aas
cmpsl
and
sbb
and
shlb
lret
lret
xchg
je
aam
insl
adc
imul
and
jbe
adc
addr16
fidivrl
pushf
daa
sti
stos
xchg
rorl
mov
push
cmp
mov
cmp
loop
mov
scas
clc
pop
stos
inc
aaa
pushf
mov
jb
fbstp
repnz
in
insb
mov
inc
mov
jl
mov
xorl
dec
lret
cmpsl
xchg
das
int3
sub
and
bnd
lea
mov
pop
jge
ja
push
daa
divl
pop
push
in
outsl
jle
cmp
mov
outsb
inc
pusha
xchg
add
out
lret
out
xor
fs
inc
insb
or
inc
mov
pop
push
fmull
mov
inc
es
stos
push
stos
mov
mov
cmp
es
cmp
xchg
cmp
push
push
cs
push
push
lahf
or
repz
cltd
mov
inc
mov
ret
pop
ret
dec
rolb
mov
scas
xor
fwait
or
mov
rcll
cmp
or
push
int3
push
icebp
sub
movsl
ds
xor
or
and
pop
pop
sub
cwtl
dec
xchg
dec
cmp
and
dec
and
sub
bound
nop
mov
add
imul
fidivrl
jp
insb
push
cli
mov
mov
xchg
push
sbb
push
cmp
jp
lea
sbb
mov
xchg
and
cmp
int3
mov
inc
subb
int3
xchg
xchg
fcoml
loop
add
addl
movsl
jnp
and
movsl
jmp
into
and
cli
xchg
fadd
in
repnz
idivl
shrb
popf
mov
xlat
mulb
jecxz
mov
xor
and
adc
pop
lock
push
iret
xchg
addb
stc
pop
mov
arpl
sbb
inc
ja
cltd
pop
xchg
test
call
xor
xchg
rorl
test
rcll
inc
and
ret
push
inc
mov
pop
push
lods
rcl
cwtl
dec
jmp
shll
mov
xchg
call
movsl
mov
xchg
es
aaa
push
out
push
mov
int
sbb
push
daa
mov
pop
mov
cmp
pop
je
dec
and
insl
dec
in
sahf
fistl
pop
xor
cmp
cld
je
in
xchg
mov
jns
pop
pusha
sbb
movsl
out
push
adc
shrb
aam
sub
outsb
ficoms
pop
mov
push
insl
jmp
sub
cli
adc
mov
xor
mov
adc
jae
push
adc
cmp
mov
inc
lds
pop
ftst
xor
repnz
rcrl
pop
repnz
push
call
rcrl
les
lret
call
pop
xchg
push
cmp
inc
sysenter
popf
pop
gs
fldl
dec
outsb
pop
sub
jge
pop
cs
rclb
mov
mov
es
lock
enter
jp
shll
sub
lret
js
xchg
adc
orl
xorb
inc
lcall
lret
push
sbb
cmove
sbb
lcall
cwtl
mov
pop
xlat
mov
or
setl
jecxz
pop
data16
es
sahf
sbb
cmpsb
dec
mov
push
pushf
in
lahf
sbb
call
ret
xor
mov
push
in
or
ss
pop
jmp
cmp
bound
aad
mov
jns
push
fnsave
pushf
xchg
into
xor
dec
inc
shrl
cmp
add
insl
in
xchg
pop
test
xchg
mov
add
leave
dec
lcall
fadds
jbe
out
xor
jecxz
sub
inc
loope
scas
sahf
stc
xlat
imul
dec
push
stos
mov
xchg
inc
pop
mov
cld
cmp
movsl
cmc
mov
fwait
push
mov
jb
push
push
mov
xor
add
aam
lret
adcb
xorl
jp
push
dec
mov
xor
sti
mov
enter
enter
std
jne
cwtl
jbe
push
fnstenv
sti
sbb
xchg
mov
arpl
test
push
scas
repz
shlb
mov
test
pushf
mov
and
clc
inc
push
adc
aaa
xchg
adc
pop
sar
push
jmp
pop
popa
inc
inc
mov
ja
je
push
cmc
test
out
inc
les
gs
jg
pop
mov
cs
iret
pop
jo
xor
or
push
dec
pop
or
jecxz
fldt
and
lods
dec
and
cltd
mov
aaa
mov
ljmp
iret
ss
lods
add
out
xchg
sub
lods
psrlw
cmpsb
adc
add
mov
das
es
shr
or
popa
sub
xor
or
mov
jb
clc
adc
sub
out
pop
cmp
xchg
dec
aad
pop
sub
sub
shll
adc
sub
or
mov
ret
add
inc
mov
mov
xor
xlat
in
mov
divl
and
out
cwtl
hlt
mov
or
pop
and
push
out
mov
gs
cmovne
lahf
and
cmc
pop
pop
xchg
cmp
push
push
dec
mov
ret
lods
jne
push
push
xor
ja
shrb
ret
mov
ja
adc
outsl
push
adc
cld
sbb
jns
adc
sbbl
inc
jg
pop
cmpsl
push
int
inc
test
div
and
ja
cli
std
mov
cmp
vmulps
pop
push
nop
imul
dec
jb
add
int3
and
push
daa
std
iret
out
mov
jg
data16
add
out
inc
addb
xchg
mov
or
cmpl
fcomps
mov
sbb
stos
jp
mov
mov
aaa
movsl
frstor
lock
push
sub
test
scas
ss
imul
lcall
sbb
or
inc
jecxz
mov
data16
shl
dec
js
xor
sub
mov
cli
test
jnp
sub
push
clc
pop
pop
inc
orl
test
popf
movsb
sti
int3
mov
cmp
daa
int3
fsubl
jl
mov
adc
push
imul
aam
mov
sub
cmpsb
sub
and
pop
jbe
mov
test
lahf
pop
cmpsb
imul
daa
mov
inc
pop
push
fistpll
mov
dec
into
and
cli
push
clc
mov
pop
pop
ss
es
addl
iret
xchg
sbb
xchg
out
repz
sub
jae
xchg
cmp
pop
jbe
jns
push
pop
subl
scas
sub
stos
insl
or
loop
loop
rolb
or
xchg
scas
inc
gs
ret
xor
orb
test
ret
out
mov
mov
lods
dec
je
mov
mov
pop
sub
dec
adc
lahf
movsl
sub
push
cmp
scas
dec
popa
dec
push
subb
sbb
or
das
xorl
in
outsb
sub
dec
imul
xchg
out
stos
mov
call
repz
sub
pop
scas
sbb
cmc
dec
and
cmc
ds
dec
mov
loopne
popa
nop
cmc
or
jecxz
inc
jp
pushf
cld
push
and
loopne
pop
jle
sbbl
mov
cmp
stos
cmp
gs
xor
movsb
and
sbb
adc
inc
stos
lods
pop
testl
sub
iret
lds
sahf
popf
aad
push
pop
out
aam
xlat
cli
insw
dec
test
out
xor
data16
and
mov
addl
mov
mov
inc
dec
ss
add
outsb
lcall
mov
stc
lods
adc
mov
stos
ret
jle
shrb
and
mov
into
pusha
neg
sarl
push
xor
xor
inc
les
lahf
pop
lods
aam
jg
push
lods
lea
mov
adc
fwait
inc
bound
jl
jnp
js
or
les
imul
stos
sahf
dec
mov
mov
pop
test
push
push
xchg
cmp
je
scas
rcll
push
push
add
imul
pop
sbb
pop
ror
in
push
ljmp
sub
rcll
push
shll
xorb
aaa
sbb
insb
cmpsb
push
sub
pop
sub
pushf
out
std
dec
call
pop
movsb
lahf
or
push
or
fcomi
sub
push
cmp
gs
out
and
nop
js
adc
in
daa
xchg
jg
jl
lea
xchg
jbe
or
aas
inc
idiv
inc
lea
mov
popf
pop
fidivs
clc
sub
adc
fistps
ret
dec
aaa
in
ja
dec
fcompl
jae
xor
jge
ficomps
out
add
mov
clc
pop
sub
fstps
dec
xchg
addr16
jno
fsubrs
data16
mov
aad
push
jg
insl
cmpsl
ret
mov
imul
xchg
jmp
jo
and
arpl
dec
dec
arpl
mov
jnp
add
inc
dec
aad
stos
pop
icebp
mov
sub
sarl
aam
lods
mov
movsb
mov
insl
push
jns
and
popa
out
pushf
loope
seta
call
enter
cmp
dec
inc
scas
cltd
xor
lods
shrb
cmpl
enter
and
or
xlat
bound
dec
test
sahf
jnp
movsb
insl
lods
imul
inc
adc
push
push
out
mov
inc
sbbb
popf
mov
mov
fisubrl
jbe
sub
sub
decl
outsl
xor
push
inc
sbb
imul
out
ljmp
xchg
sub
mov
fsubrp
es
dec
das
dec
shrb
aam
js
jns
or
cmp
sbb
fcompl
cmp
add
cld
sub
sti
adc
mov
jg
sbb
cmp
outsl
jecxz
xchg
lods
sbbl
outsl
pop
sub
mov
inc
mov
and
movsb
push
push
jns
push
ficoms
lods
cmpb
sub
push
cmp
xor
xor
out
xor
aam
adc
mov
xchg
nop
and
mov
push
add
imul
pop
stos
adc
cli
sbbl
mov
add
loopne
clc
imul
cmc
add
fisubrs
xlat
fsubr
mov
inc
int
push
fisubrs
sbb
mov
add
xor
jae
and
loope
cmpb
xchg
test
mov
inc
push
push
sahf
out
sbb
dec
mov
loop
or
fcmove
sahf
decl
ja
cmpsb
sbb
iret
jo
sbb
jge
xor
mov
lret
fisubrl
lahf
or
dec
adc
or
testl
and
jg,pt
sti
inc
push
xor
into
shrl
aad
fistpll
jbe
xchg
in
dec
or
push
and
mov
xor
adc
test
imul
inc
mov
popf
unpckhps
dec
cmp
push
loop
and
in
es
mov
xorl
out
ss
mov
fsubrl
mov
fbld
jmp
push
pusha
call
dec
test
jecxz
dec
cmp
jge
xchg
add
mov
push
test
and
dec
lret
pop
cmp
push
icebp
xor
das
fcmovne
hlt
subb
sbb
sub
cltd
and
int
dec
sahf
ss
fistpll
jle
adc
sbb
inc
outsl
dec
and
and
mov
adc
pop
insl
call
dec
cmpsl
cs
inc
aam
jne
cmc
and
xor
mov
mov
jno
fsubl
fwait
aas
fistl
lcall
inc
ljmp
data16
pop
repnz
inc
out
ret
pop
jmp
mov
adcl
inc
jae
es
xor
cmp
lretw
dec
dec
pop
pop
lret
inc
cs
mov
push
lock
lret
int3
add
mov
push
inc
or
mov
ret
jb
jle
mov
fldcw
cmpsl
jp
xchg
scas
das
ss
mov
adc
sub
flds
push
cmp
inc
scas
in
xchg
into
rcrl
pushl
int3
hlt
es
xchg
imul
pop
xchg
nop
dec
cld
idivl
int3
lods
mov
fcoms
adc
into
loope
push
out
test
scas
dec
enter
stos
dec
jb
sbb
std
sbb
add
mov
jmp
sbb
sbbl
pop
imul
dec
mov
stc
push
fcoms
adc
sbb
addl
js
call
je
in
or
xchg
mov
dec
sbb
fmulp
loope
test
pop
or
sub
sbb
ret
stos
call
jnp
mov
sbbl
cltd
js
bound
add
vmovaps
push
loop
jb
sbb
or
xchg
pushf
mov
sbb
or
lods
or
popa
or
adc
or
outsb
add
sub
pushf
push
sbb
sbb
ret
pop
and
leave
ss
nop
cmp
mov
pushf
dec
jmp
pushf
test
inc
jae
cmp
adc
std
push
mov
fchs
push
mov
sbb
mov
sub
sbb
lret
in
fidivl
adc
fsubrs
push
call
enter
lods
cli
std
ss
outsl
or
into
cld
push
mov
js
xor
icebp
jbe
push
push
inc
pusha
or
lret
sbb
mov
outsl
dec
cmpsl
cmp
add
stos
popa
add
dec
push
sbb
leave
adc
subl
test
out
sub
jnp
out
pcmpeqd
push
shr
xchg
clc
cmpsl
andl
rcrb
cs
loop
add
xchg
mov
dec
jmp
xchg
and
lds
stos
adc
cmp
and
mov
je
xchg
lret
hlt
xchg
sbb
jo
push
xchg
lret
cmpsb
sbb
repnz
lds
leave
out
repnz
clc
push
in
jo
lods
push
sti
mov
das
lret
sbb
shlb
aas
jl
and
lods
lahf
and
popa
mov
cli
jb
and
push
cmp
lods
clc
call
scas
divb
stos
cmp
iret
scas
jae
icebp
or
stos
cmp
inc
mov
rcrl
mov
inc
cmpl
jge
sub
jp
cli
xor
mov
push
inc
in
push
and
push
rcll
jecxz
dec
ret
out
sahf
mov
aaa
add
addr16
xor
test
icebp
xor
fwait
mov
repnz
mov
pop
push
scas
mov
stos
js
prefetchw
or
rol
shrl
dec
sub
scas
dec
je
sahf
in
xchg
adc
or
out
andb
lcall
add
sbb
clc
mov
rolb
jp
adc
out
pop
fxch
add
repz
and
xor
outsb
mull
pop
scas
xlat
cmpl
out
cmp
fidivrs
add
xor
sbb
jne
lcall
push
adc
mov
loop
dec
int
and
or
hlt
xchg
movsl
mov
push
xchg
sub
xlat
mov
les
pop
jg
jbe
jle
gs
pop
testb
jns
mov
lods
xor
mov
clc
iret
test
insl
loope
std
pop
ret
mov
in
add
out
dec
rcrl
outsl
xor
arpl
data16
in
movsl
adc
fldcw
inc
jno
aaa
or
inc
aaa
mov
adc
clc
push
inc
dec
cld
dec
sar
mov
jle
shll
adc
out
sub
jo
xchg
lret
hlt
jne
add
mov
push
mov
mov
push
jle
xor
adc
shll
shl
sub
dec
out
fcom
pop
loop
push
loopne
out
or
sti
in
pop
das
push
pop
je
mov
in
fmuls
inc
mov
xor
lret
xchg
or
dec
xchg
dec
pop
and
stc
jmp
mov
inc
push
pop
and
imull
hlt
ficoms
mov
add
or
fmull
idiv
mov
loopne
push
addl
jae
jg
dec
cmp
shl
mov
sbb
adc
test
mov
stos
or
mov
sub
xchg
cmp
jns
movsl
inc
cmp
jnp
call
aad
ret
aas
xor
arpl
pop
push
fmulp
imul
in
xor
and
cmpsl
pop
sub
push
pop
lods
adc
jp
push
push
pop
arpl
pop
repnz
sahf
js
add
xorb
aad
cmpsl
inc
sbb
jmp
faddp
loop
pop
outsb
add
orl
scas
and
add
cmp
xorb
cmpsb
stos
xchg
mov
cmpsl
mov
mov
hlt
or
mov
sub
ja
pop
mov
popa
jbe
ds
or
mov
mov
push
inc
push
gs
and
decb
filds
adc
pop
sti
mov
insb
sti
push
adc
enter
dec
rorb
jge
lret
dec
dec
xchg
outsl
jg
mov
out
jg
mov
movb
ja
pop
test
push
movsw
xor
movsl
scas
andb
fst
movsb
xchg
in
pop
xor
xchg
mov
shll
jecxz
lahf
pop
pop
mov
arpl
loop
mov
ja
xchg
xchg
js
dec
pop
and
and
fcom
insl
pop
dec
call
dec
add
shlb
shrl
popa
jecxz
mov
pop
cwtl
pop
into
std
jmp
scas
xchg
inc
dec
outsl
fisttpl
dec
subb
push
adcb
mov
or
rcll
add
cmpsb
sub
cmpsl
xchg
andl
imul
mov
and
data16
movsb
mov
xchg
inc
popa
je
enter
roll
xchg
mov
inc
dec
leave
xchg
in
sbb
lret
es
es
loopew
sbbb
andb
imul
sub
out
jmp
push
sub
aaa
into
jno
sub
jb
stc
mov
insl
cmpsl
daa
outsb
mov
dec
iret
inc
xchg
insb
aas
in
aam
mov
jae
sarl
fdivrl
popa
jnp
rcr
add
in
loop
movd
cmpsl
je
outsb
mov
pop
sbb
insb
arpl
push
inc
add
je
movl
nop
in
push
call
ljmp
lock
cmp
xchg
lretw
sbb
popf
inc
xchg
lds
cmc
aad
pop
cwtl
mov
cmovnp
aas
mov
push
int3
adc
jecxz
cs
test
mov
dec
mov
xchg
stc
add
dec
mov
mov
pop
add
fidivl
in
xor
lret
xchg
test
fisttpl
sbb
fs
mov
cmp
cwtl
jmp
xchg
dec
sar
loop
push
and
mov
cmpsl
shl
xchg
fsubrl
outsl
ret
stos
jbe
pop
add
jmp
hlt
adc
sbb
xchg
out
xor
fwait
rclb
in
pop
aas
aad
fadds
bound
inc
and
test
or
out
inc
cs
icebp
mov
xor
aad
inc
in
inc
push
cwtl
cli
pop
dec
lock
iret
or
jo
int
xor
push
sbb
rcr
pop
stos
pop
xchg
adc
jno
mov
push
fists
mov
xchg
dec
push
imul
sbb
out
push
sbb
int
mov
cmpsl
mov
cld
jmp
pop
lods
cld
in
dec
imul
xor
in
mov
fadds
cs
sub
lods
insb
daa
and
enter
mov
xchg
push
and
jnp
cmp
xor
adc
push
mov
js
push
mov
cmp
shr
jo
ds
mov
jne
les
or
test
jmp
out
js
leave
mov
xor
push
push
in
outsb
and
inc
xor
mov
jg
sbb
clc
fwait
scas
lock
sbb
xchg
rorb
adc
imull
pop
outsb
or
xor
xchg
cmp
fldl
sub
sub
imul
push
mov
or
xchg
push
mov
les
das
insl
sbb
lds
or
adc
sbb
cmpsl
movsb
out
test
inc
sti
popa
outsb
je
fstpl
fisubs
outsb
dec
roll
aad
inc
imul
fcompp
dec
pop
lcall
mov
addl
addr16
inc
lcall
sub
stos
jnp
jo
sub
bound
jnp
xchg
push
dec
cmc
jbe
fiaddl
mov
leave
sbb
adc
out
aas
and
adc
hlt
popa
vpaddw
cmpsl
lock
jle
xchg
inc
enter
xor
cmpsl
jge
mov
sub
push
dec
xchg
lds
jb
or
sbb
test
test
mov
cmp
addr16
add
out
repnz
imul
mov
cmp
or
vunpcklps
aam
mov
sub
push
mov
sbb
les
stc
gs
xor
cmc
in
push
sarb
decl
dec
je
loopne
xor
out
pop
mov
adc
xchg
insb
jl
jmp
push
call
sub
add
cmp
fidivl
das
pop
push
push
or
lret
test
insl
cmp
mov
or
xchg
fisubrl
add
fs
dec
ss
sbb
mov
cmp
in
add
push
adcl
push
sbb
jne
add
pop
iret
cli
cmpsb
dec
repz
and
adc
cmp
add
push
shll
fldl
jo
lret
dec
out
in
fcompl
mov
mov
xor
mov
cmp
dec
or
test
movzbl
stc
movsb
loop
pinsrw
dec
push
jnp
fbld
inc
inc
enter
out
sbb
xchg
jg
lds
cmp
dec
pop
inc
into
cwtl
add
mov
mov
mov
push
jmp
sbb
mov
jecxz
dec
andnps
stos
jo
pop
and
cs
mov
cmc
in
mov
sub
pop
xchg
push
fld
scas
lret
loopne
data16
add
dec
push
out
cmp
jb
mov
popf
mov
dec
fimull
sti
ret
mov
lods
and
inc
pushf
lcall
cmc
fiaddl
icebp
test
popf
sub
sub
addr16
add
outsb
inc
sbb
ja
xor
cmp
xchg
out
gs
cmpsl
pop
sub
push
stos
pop
mov
sbb
repz
or
xchg
sub
push
inc
lds
push
in
cltd
cmpsl
sub
imul
cmp
fisttpl
mov
daa
jmp
cld
cmpsl
ret
xchg
fwait
sub
adc
cmp
mov
je
lea
pop
movsl
mov
daa
adc
cmpl
push
xchg
sub
js
sbb
ss
xor
subl
stc
insb
in
rol
les
mov
ds
push
icebp
gs
cmp
dec
or
loopne
rcll
insl
pop
add
mov
in
lea
cmpsl
xor
repz
sbb
jne
sub
dec
jns
fisubrl
addr16
aad
push
shrl
mov
js
cmp
sub
pop
add
stos
ss
or
std
dec
je
test
jmp
dec
jno
clc
xor
pop
add
inc
out
cmp
clc
fbld
stc
shll
jns
scas
popf
jle
dec
sbb
cli
pusha
mov
adc
pop
lods
push
jb
dec
xchg
dec
notb
call
mov
cltd
cmpsl
jbe
lret
mov
cli
shr
cs
inc
lret
loopne
lds
push
test
ss
or
fsubrs
orl
sbb
outsb
pop
xor
or
out
dec
rolb
pop
lods
out
push
scas
dec
sub
adc
and
out
push
mov
push
aam
std
add
into
popa
insw
subl
inc
in
mov
xchg
adc
arpl
push
ljmp
int3
push
push
addr16
imul
sub
xchg
mov
testb
cmpsb
mov
scas
in
or
scas
jnp
shr
xor
pusha
sbb
ret
ljmp
out
int3
or
mov
jno
fisubrs
lods
test
inc
clc
mov
fistpl
js
fiadds
mov
loop
das
enter
adc
inc
xchg
into
or
pop
lahf
xchg
daa
mov
jmp
add
add
sub
dec
sbb
ljmp
sub
dec
fmull
pop
repz
dec
xchg
lahf
fisttpll
mov
mov
in
mov
mov
addb
mov
popa
mov
jae
nop
or
add
dec
lods
test
pushf
inc
sbb
stos
out
mov
xor
iret
push
and
rorb
pushf
jge
inc
push
mov
push
sub
xor
push
add
out
paddw
push
dec
push
test
mov
inc
mov
loopne
dec
test
jnp
or
nop
sub
mov
loope
and
sti
stc
jb
cmp
cmc
push
jl
xor
push
mov
jbe,pn
sbb
jmp
push
pop
mov
cmc
xchg
leave
pusha
movsb
mov
push
push
pop
aam
push
cmp
add
mov
sub
add
mov
jle
sarl
inc
push
in
scas
into
cwtl
pop
into
cltd
or
fnstsw
cwtl
inc
ja
in
mov
aam
mov
fisttpl
mov
push
and
xchg
dec
leave
loop
jge
cmc
sbb
mov
mov
int3
out
dec
pop
cld
cmpsl
filds
pop
mov
cmp
inc
or
cs
std
hlt
xor
cmp
xchg
jne
loopne
mov
scas
loope
dec
pop
fdiv
xchg
inc
inc
dec
fildl
sbb
repz
fisttpll
data16
add
pushf
ljmp
in
add
jp
pop
pop
in
mov
push
in
xor
pop
loope
or
pop
xchg
adc
sub
imul
pop
ljmp
adc
pop
addb
pop
xor
sti
rcll
adc
cmp
or
andb
mov
lock
mov
cltd
jg
and
xchg
xchg
cmpsb
sub
dec
adc
cld
mov
psubb
mov
fdivs
aas
push
loop
jg
sub
rcrb
push
arpl
push
mov
popa
and
jl
mov
out
sbb
test
inc
clc
sub
sarb
cmpsb
stos
dec
ljmp
jae
cmp
shl
xor
push
sub
jg
dec
shl
loope
adc
test
adc
sub
shr
xchg
mov
lods
mov
neg
xchg
fs
nop
fwait
xor
and
out
xor
sub
loop
mov
adc
sbb
cmc
push
jno
inc
or
mov
xchg
inc
mov
cmp
hlt
mov
xor
inc
or
scas
sbb
out
add
sbb
lcall
pusha
movsl
and
adc
ds
cmp
stos
adc
loopne
out
push
leave
push
jmp
imul
shlb
add
aam
xor
out
movb
cmp
pop
jno
dec
mov
adc
ja
push
into
cmpsb
jmp
push
or
lock
je
shlb
iret
jecxz
adc
ljmp
jno,pt
lret
jnp,pn
insl
push
pushf
pop
cmp
sbbl
imul
pop
daa
lahf
sub
ret
mov
add
sub
pusha
andb
xor
and
jbe
or
jno
sub
test
or
shlb
cltd
dec
nop
rol
jo
insl
into
cli
inc
pusha
into
dec
ret
sub
ficoms
ret
das
xchg
xor
and
cmp
sarb
in
pop
mov
sub
dec
jbe
cmp
and
lcall
clc
mov
push
sbb
sbb
insl
jl
repz
adc
sarb
push
outsb
mov
nop
rorb
jecxz
call
or
push
or
stc
pop
sub
sub
dec
clc
out
daa
inc
cli
stos
add
leave
fs
scas
pop
xlat
subb
push
sub
push
rorl
pcmpgtb
cmp
scas
shrl
jmp
adcl
add
or
out
and
mov
in
ds
inc
push
cmpxchg
fdivr
mov
test
sarb
nop
adc
push
lock
mov
cwtl
dec
mov
or
adc
jns
out
std
adc
mov
pop
or
push
shlb
cmovns
sbb
insb
cmp
adc
mov
pop
xchg
xchg
fsts
push
sbb
mov
xor
mov
loop
and
cmp
jae
mov
nop
or
cmp
cmp
sbb
mov
dec
mov
clc
jae
mov
add
sub
lds
and
or
jmp
mov
xor
ret
clc
sub
jge
mov
ret
insb
mov
adc
xor
dec
and
push
pop
je
call
and
xor
adc
push
call
pop
sbb
in
cmc
mov
add
xor
cmp
pop
cs
or
adc
int3
cmp
das
adc
cwtl
les
hlt
cmpsb
inc
xchg
arpl
arpl
mov
cltd
mov
xor
sub
mov
insb
sbb
add
inc
lea
jnp
mov
int
movsl
mov
push
pop
dec
lock
call
xchg
leave
aaa
add
and
call
push
fstps
cmp
scas
push
mov
call
outsb
inc
es
mov
and
inc
cld
mov
scas
jecxz
mov
inc
add
arpl
cmp
push
mov
push
mov
jo
push
ds
in
shll
xchg
jecxz
insl
pop
js
mov
shr
mov
adc
dec
xchg
outsb
mov
pop
aam
out
mov
sub
out
mov
enter
pop
xchg
fistpl
mov
xchg
adc
add
stos
push
push
adc
lcall
xor
jne
push
sub
loopne
aas
popa
mov
mov
mov
adc
push
loope
adc
sbb
inc
mov
or
sbb
lret
push
mov
in
and
jne
jge
inc
in
fbld
sub
mov
sbb
mov
push
in
sub
push
idiv
jb
out
mov
dec
push
mov
pop
push
or
cltd
xor
loope
mov
loop
sahf
clc
push
sub
push
adc
sahf
es
xor
xchg
stos
dec
sbb
insl
dec
lock
push
je
mov
mull
adc
mov
fdivs
inc
insl
cmp
lret
jmp
push
sub
xor
xlat
jnp
fstl
data16
stc
inc
mov
push
rcll
fdiv
es
lret
dec
dec
test
gs
add
vpand
sbb
cwtl
fcmovnbe
add
aam
mov
ret
and
jle
std
mov
cmp
in
ss
mov
call
cltd
das
mov
jns
jae
ret
push
mov
sbb
xlat
mov
mov
jmp
popf
rclb
pushf
jg
pop
sbb
nop
cmpsl
sub
mov
and
xchg
xchg
jb
inc
adc
dec
mov
xchg
dec
into
push
nop
movsl
mov
loop
dec
push
push
mov
cmp
mov
shlb
rcrl
arpl
push
dec
and
aaa
pop
add
lretw
arpl
push
fsubl
push
push
push
cmpb
jge
aaa
mul
test
dec
sub
repnz
mov
sbb
in
mov
dec
mov
sub
ficompl
sbbb
lods
ja
adc
dec
lods
fucom
fwait
sub
inc
dec
mov
push
in
movsb
sub
sub
cmp
xor
mov
jle
cmp
cmpsb
mov
cld
dec
sub
gs
xchg
je
clc
inc
sub
jl
pop
push
or
adc
jle
push
push
sbb
and
xchg
imul
outsl
sbb
out
mov
cmp
cmpsl
push
sbb
call
imul
in
repnz
jmp
int
arpl
ss
daa
pop
int
fistpll
cmp
mov
pop
add
lret
incl
mov
mov
jno
add
add
lret
insb
js
movsb
clc
jnp
pop
and
dec
cwtl
and
inc
mull
push
xor
sub
cwtl
add
fs
xor
jg
jmp
fwait
add
imul
cmpb
adc
pop
cmp
adc
subb
sar
dec
adc
add
fldt
les
fdivs
pop
cmp
stc
pop
in
mov
jo
nop
daa
es
push
or
subb
mov
repnz
mov
movsl
and
or
jge
add
push
mov
sbb
rclb
adc
cltd
add
sbb
cld
mov
jne
and
test
pop
icebp
sti
and
xchg
sub
gs
mov
cmp
cltd
loopne
int3
stc
aad
inc
aad
or
lahf
stos
std
mov
out
pop
mov
mull
xor
and
pop
jnp
xor
or
sub
cmpsl
ds
xchg
pop
push
or
xor
test
rep
cli
cmp
sub
mov
loope
adc
xlat
test
in
inc
sub
sbb
lcall
sbbb
fstpl
pushl
jmp
pop
loope
popa
or
xorl
and
jmp
daa
in
repz
xchg
dec
das
maskmovq
notl
jno
cmp
cmpb
pop
cwtl
sbb
adc
sbb
push
inc
test
or
aam
mov
and
mov
xchg
sbb
jb
jecxz
add
xchg
sbb
adc
inc
pusha
jbe
cs
xchg
adc
pop
sbb
ja
push
adc
enter
adc
and
rol
loopne
sbb
inc
fdivs
jns
jecxz
pusha
and
jp
adc
push
gs
ret
enter
or
data16
adc
icebp
sbb
or
shr
iret
jns
icebp
jg
pop
repnz
adc
mov
neg
les
push
out
bound
fstpl
mov
stc
push
out
rol
ret
push
dec
adc
pop
dec
inc
xchg
dec
les
adc
ret
pushf
popf
test
dec
nop
lds
jmp
ret
int
push
mov
gs
add
repz
sub
dec
out
mov
cmp
lret
popf
xor
sti
repnz
add
fidivs
arpl
mov
fcompl
fsub
push
std
jmp
pop
sbb
enter
insl
mov
jbe
test
repz
mov
loope
dec
les
lret
mov
push
pop
adc
insb
sub
cmp
mov
sar
pop
pusha
mov
or
push
sar
fdivrl
xor
add
jne
xchg
pushf
out
sub
jecxz
add
adc
cmp
movsl
in
cmpsl
cld
lods
inc
push
in
inc
vaddsd
jno
cmp
mov
rcrl
cs
mov
fs
push
insl
and
mov
push
into
les
mov
popf
shlb
dec
in
call
jmp
ftst
xchg
cmpsb
jb
fstps
push
push
es
pushf
fs
or
jg
paddsw
test
pusha
and
cs
rcr
lcall
inc
push
call
add
rcrl
cs
lock
aam
and
cmp
and
cli
sbb
cli
mov
add
sbb
sbb
ljmp
cli
addr16
cli
icebp
dec
fidivrs
pop
jle
add
jnp
xchg
mov
cmp
adc
push
test
dec
in
mov
hlt
popa
jp
dec
adc
loop
imul
mov
clc
clc
and
in
jbe
push
jg
dec
sub
ss
lods
xchg
xor
push
fadds
cmp
test
push
aaa
ret
dec
lds
nop
inc
mov
mov
jg
push
cmp
pop
movsb
fucomi
push
test
icebp
adc
out
insl
xchg
imul
cli
mov
lods
dec
pop
mov
shll
das
xchg
testb
mov
mov
push
cld
sahf
shl
in
shl
jecxz
adc
aam
xchg
xor
rolb
ror
xchg
add
cli
mov
jnp
push
mov
xchg
and
cltd
mov
in
imul
push
pushf
clc
call
scas
push
ret
cli
mov
in
dec
or
and
ret
aam
mov
fs
je
fldenv
std
pop
repnz
push
mov
xor
test
sbb
int
lods
call
jmp
cli
xor
lock
inc
fildl
add
add
sbb
in
jnp
popa
push
adc
xor
cld
out
push
jg
mov
mov
in
push
fsubrs
adc
cmpsl
xor
cmp
xchg
stc
add
jp
jmp
cwtl
add
jne
inc
or
ret
popf
testl
dec
scas
test
stos
out
xor
mov
cmpsb
push
nop
jle
pop
repz
rcl
gs
pop
shlb
pop
out
cld
insl
and
mov
test
push
bound
inc
call
cltd
ljmp
lcall
mov
mull
ficoml
push
xchg
outsl
sub
or
pop
inc
mov
movsb
adc
inc
lods
lods
dec
mov
fisttpll
in
push
xchg
clc
xchg
in
mov
pop
int3
leave
xlat
sub
jae
add
mov
loopne
pop
push
iret
movsl
testb
pusha
jle
mov
mov
in
mov
add
roll
iret
ret
es
imul
inc
pop
cmpsb
aas
fistl
pushf
mov
jecxz
insl
jne
sbb
in
xor
sbb
pop
add
ret
test
clc
dec
cmp
push
leave
jbe
xchg
insl
xchg
lcall
pop
sub
adc
sub
inc
ja
jle
and
stc
sbb
or
ja
lock
roll
scas
push
lahf
cli
out
in
cmpsb
mov
std
insb
repnz
jp
out
mov
fwait
addb
lea
neg
dec
jne
icebp
pop
shll
sbbb
fsubs
add
fdivs
je
repnz
sbb
push
ss
stc
inc
xchg
mov
mov
cmp
push
std
mov
push
jge
adc
jg
les
xor
mov
pushf
stc
clc
cmp
imul
imul
cmp
faddl
ret
adc
mov
xlat
pop
and
or
repnz
fs
imul
lods
imul
sti
sbbb
lcall
push
out
clc
xor
shl
fsubr
xor
push
cld
xorps
jp
rcrl
fcmove
dec
mov
data16
jnp
or
adc
fimuls
mov
mov
mov
outsb
adc
pusha
cmpb
in
sub
adc
je
outsl
loopne
outsb
push
inc
das
cmp
and
xchg
adc
mov
inc
divb
icebp
xor
pop
push
les
mov
push
add
lods
je
mov
out
aaa
cwtl
and
jbe
out
subb
clc
cmp
in
popa
mull
mov
jo
outsl
pop
adc
push
mov
sub
scas
mov
inc
aas
imul
inc
bound
inc
adc
pop
push
jb
lods
and
data16
xchg
and
mov
and
xchg
inc
ja
or
fucomi
rolb
inc
cmp
test
out
mov
mov
mov
lret
dec
lds
mov
daa
or
jle
iret
into
cwtl
fiadds
inc
mov
rol
movsl
sbbl
pop
loop
mov
in
adcb
faddp
mov
mov
enter
inc
outsb
add
lret
and
loope
lds
mov
and
stc
out
cmpb
les
pushf
mov
sbb
xor
dec
mov
out
loop
andb
or
dec
jb
mov
sub
or
adc
add
or
and
jp
call
iret
sbb
and
scas
pop
lret
and
jle
mov
lds
aam
rcrl
in
inc
cmovns
fdivrp
insl
xchg
add
dec
iret
inc
sahf
and
mov
pop
movsl
push
aas
jns
or
jno
shlb
shlb
jg
pop
pushl
cwtl
mov
and
call
xor
sbb
jge
sti
daa
dec
xor
ficompl
jl
mov
icebp
call
jne
fidivs
addr16
push
call
lock
sbb
push
bound
lea
fistps
lods
pop
jmp
insb
mov
mov
or
sub
shll
pop
mov
out
dec
fidivl
out
mov
adc
dec
push
jne
dec
xchg
iret
and
fcomps
dec
and
xchg
sub
roll
jne
cld
and
dec
addr16
in
in
push
fdivr
cwtl
movsb
jb
nop
and
xchg
loopne
add
into
or
repz
arpl
push
lods
call
pop
mov
pop
and
repnz
test
les
cmp
aam
int
sub
outsb
pusha
lea
mov
into
cs
fcomps
or
adc
inc
jl
push
jmp
adc
aam
jne
pop
adc
outsb
js
or
dec
push
adc
je
adc
or
pusha
mov
xor
jecxz
mov
sub
sub
sub
test
push
cmc
mov
call
xor
xlat
fwait
pop
and
mov
mov
sub
sbb
inc
hlt
push
xchg
dec
add
mov
jno
popa
adcb
dec
sbb
cmc
sub
loope
test
sarl
mov
push
std
mov
movsl
imul
mov
sub
push
inc
movsl
sti
in
xchg
cli
add
test
hlt
jno
stos
enter
jp
or
sbbl
pop
mov
adc
cmp
xor
xor
lods
or
fmull
in
sub
mov
cwtl
loopne
hlt
int3
push
cmp
cli
int3
jp
je
aam
data16
pop
xor
xchg
ja
push
or
cmp
cs
pop
popf
mov
repnz
lods
adc
cmp
jns
sub
insb
sub
dec
push
xchg
xor
jb
sub
jns
mov
sbb
dec
pop
mov
add
lods
jp
jecxz
aam
pushf
push
andl
stc
add
fwait
test
repz
lcall
adc
enter
pop
sub
and
xor
popf
subl
inc
mov
mov
sbb
nop
cmp
xor
and
movsb
in
dec
and
lret
jecxz
stos
jmp
sbb
out
daa
mov
daa
test
inc
shl
sbb
sbb
fld1
xchg
jecxz
in
fisttps
sti
fisttpll
aad
xor
pop
call
push
and
lret
jbe
nop
adc
loopne
mov
dec
mov
imul
cmpsl
xchg
dec
or
es
int3
fsubl
adc
andl
jl
xor
or
mov
add
jle
jecxz
mov
xchg
sub
cltd
fcoml
push
lock
pop
mov
or
ret
cmp
jbe
jp
xchg
add
out
int
and
inc
ret
ja
loope
push
mov
roll
mov
xchg
loopne
into
xchg
rclb
scas
pop
ror
or
mov
sbb
push
fimuls
icebp
sbb
xlat
pop
xor
sub
mov
sbb
mov
jg
ds
aad
outsl
xlat
cmpsb
and
decb
mov
sub
std
rcll
pop
inc
and
imul
lahf
repnz
mov
cmp
ret
xchg
mov
or
ds
pop
cltd
test
mov
aas
push
add
and
leave
and
push
xlat
testl
repz
test
call
and
cmc
icebp
aad
mov
lock
stos
ljmp
jl
jmp
clc
dec
inc
je
push
mov
clc
mov
xor
lods
dec
icebp
fwait
popa
mov
fidivrs
adc
adc
xchg
aas
lret
xchg
lods
sub
stc
mov
jae
bound
push
inc
cltd
clc
into
stc
hlt
outsb
mov
cmp
cmp
cmp
outsb
ja
repnz
fs
fisubrl
ret
jmp
out
dec
mov
mulb
xor
std
cmp
mov
cmpsl
outsb
clc
inc
mov
cmp
push
xchg
cli
jns
xlat
push
add
sbb
mov
test
sub
lods
inc
dec
jno
icebp
dec
mov
and
jmp
mov
push
and
mov
loop
xor
sub
mov
xchg
and
frstor
or
lret
arpl
dec
xlat
pop
jne
je
fsubs
add
repz
push
jns
xor
sub
lret
lcall
repnz
aad
ret
stos
mov
pop
test
lcall
cmp
mov
icebp
sbb
xchg
push
add
int
push
add
scas
mov
lret
push
xor
loop
aad
rcrl
mov
pop
push
push
xchg
stos
push
fistps
popf
cwtl
jb
push
testl
or
bswap
add
fwait
push
test
jge
jle
mov
inc
mov
sarl
mov
cwtl
pop
or
cmc
dec
sbb
sbb
inc
mov
jnp
jbe
mov
add
jno
popf
aad
cltd
push
lock
push
add
jge
or
mov
cltd
pop
std
lcall
sbbl
mov
mov
sub
mov
push
or
adc
xchg
dec
sbb
mov
pop
je
ss
xor
testl
fidivrs
test
je
test
lahf
loop
xchg
dec
sub
push
inc
xchg
pop
sub
fcoms
dec
mov
and
dec
or
rorb
test
cli
cmp
cmpsl
ret
shrb
cmp
mov
subb
je
lds
push
pop
stos
std
fs
mov
fisttpll
insb
pop
sbb
sub
sahf
movsl
pop
lods
pop
cmp
shufps
sti
std
cmpl
add
test
insb
sbb
mov
fwait
stc
sub
xchg
popa
stos
outsb
adc
stos
add
adc
std
lahf
rcrl
aaa
add
push
aad
sbb
and
inc
mov
es
push
lds
test
stos
insb
xchg
and
lret
cli
mov
inc
jp
lret
or
fisubs
or
push
cs
gs
in
sar
fmul
daa
cwtl
add
mov
lahf
cmp
mov
out
jmp
adc
cwtl
mov
sbb
aaa
pop
lds
sbb
or
cmpsb
xor
mov
in
das
fnstsw
xchg
xor
push
pop
add
pusha
jg
sub
lea
das
adc
stc
jecxz
ss
test
arpl
shlb
mov
test
repz
out
aad
testl
iret
and
or
cld
xchg
loop
mov
je
pop
test
xchg
in
mov
dec
jg
into
mov
test
mov
enter
jne
imul
sub
mov
and
xor
lock
jo
stc
jmp
or
dec
shrl
mov
mov
xor
mov
std
xchg
xor
into
pop
xor
shlb
pop
mov
nop
sbb
cmp
push
inc
lea
adc
ljmp
pop
adc
sbb
mov
lcall
fs
xchg
shrl
enter
jp
jmp
rorb
jge
leave
dec
sub
add
mov
lods
sti
lcall
pop
pop
les
mov
daa
ret
jg
hlt
cmp
jb
js
or
pop
fsubrp
imulb
pop
mov
and
sbb
push
loopne
adc
sbb
xchg
into
inc
ss
roll
add
mov
and
out
test
scas
mov
test
lea
xchg
cltd
ret
push
or
mov
sbb
mov
mov
mov
repnz
pop
lcall
hlt
mov
dec
cli
or
mov
dec
jmp
in
je
fs
aaa
inc
xchg
jno
in
rcll
hlt
aam
jmp
movsl
pop
movsb
push
jb
lds
std
cmp
lahf
mov
insb
add
test
stos
adc
xchg
fcomp
stos
cmp
adc
pop
add
mov
jo
lods
inc
dec
mov
cmp
movl
adc
out
lods
dec
xchg
jge
adc
or
fstps
pop
adc
pusha
inc
dec
ljmp
psllq
push
jl
in
mov
fimull
cwtl
test
aaa
outsl
sbbl
sahf
lret
mov
mov
adc
lahf
xchg
jns
lret
cld
mov
mov
add
test
sarb
sbb
in
mov
js
pop
shl
mov
inc
lret
loop
fdivl
and
leave
inc
inc
lahf
adc
push
add
jne
rcll
mov
jge
fistl
and
add
add
pop
adc
icebp
push
pop
mov
jmp
mov
shll
lret
sbb
outsl
inc
lret
mov
mov
jno
shrb
inc
not
mov
mov
testl
jae
lea
jecxz
insl
jnp
insb
loop
mov
loop
clc
sub
and
push
mov
or
mov
je
xchg
sub
mov
and
fcmovnb
jns
rorb
mov
scas
sub
nop
mov
inc
aas
loop
lcall
adc
icebp
mov
fs
xchg
inc
cmp
pop
jo
and
sbbl
sbb
aad
fcomp
lcall
cmp
sbbl
adc
push
sub
cmp
lret
mov
and
shlb
push
or
aas
jns
lret
push
in
mov
xchg
or
sahf
imul
mov
inc
xor
jb
inc
xor
cmp
imul
add
push
pop
in
add
adc
pop
enter
nop
out
dec
mov
clc
xchg
iret
mov
mov
sub
jb
or
or
imul
outsb
out
into
stos
dec
scas
sbb
cmp
stos
ret
push
jae
and
inc
out
xor
push
orb
pop
xlat
sbb
and
xchg
test
gs
adc
scas
lcall
clc
and
sbb
fistpll
mov
iret
jnp
loopne
adc
mov
pop
add
das
test
xor
mov
ret
sarl
in
pusha
fstpt
sarb
outsb
loope
loopne
push
or
pop
ljmp
push
xor
ds
loope
mov
ja
sti
lods
repz
lods
push
pop
bound
push
push
mov
aam
and
lahf
push
jo
mov
pushf
inc
popf
jae
pusha
push
or
mov
and
xchg
and
in
xchg
mov
outsb
loopne
mov
cld
rolb
and
mov
loop
inc
fsubrl
sbb
cli
test
sub
test
test
adc
icebp
and
or
mov
push
sti
mov
lcall
cmp
leave
xor
cwtl
mov
enter
xchg
clc
mov
cmpsl
std
ss
fisubrl
nop
cwtl
pop
xlat
hlt
mov
add
aam
insl
into
in
dec
pop
xchg
stc
cmc
jne
pop
mov
cmp
iret
pop
xor
and
dec
out
push
repnz
movsl
aam
dec
and
es
ret
ljmp
sub
xor
fisttpl
test
cmc
test
cs
sub
xchg
in
sbb
add
movsb
jb
push
addr16
cs
int3
lea
sbb
inc
adc
fiaddl
das
push
bound
lea
mov
mov
and
leave
jg
push
pop
jmp
aam
in
cmp
jle
fists
es
cmpsl
test
mov
lret
push
dec
scas
xor
scas
leave
data16
aad
imul
in
and
jecxz
scas
adc
rcr
in
mov
sti
jns
and
outsb
mov
mov
daa
orb
lret
cmpsl
or
in
sahf
jmp
sbb
cmp
xor
ficoml
into
cld
inc
pop
adc
pop
mov
sahf
test
mov
out
mov
loope
pushf
lcall
mov
xchg
jecxz
sbb
dec
push
scas
js
pop
or
insb
jp
mov
xor
jbe
aas
pop
imul
cmpsl
aas
cmp
dec
inc
pusha
mov
add
mov
sbb
insl
cmp
data16
sub
out
gs
leave
enter
add
stos
adc
sbb
jp
cmpsl
fs
clc
cmp
stos
pop
sbb
icebp
inc
jnp
repz
lock
fsubl
pop
push
mov
sar
xor
arpl
les
mov
orl
lcall
mov
jmp
xor
inc
bound
pop
or
jbe
aas
pop
into
and
testl
loopne,pn
sub
sub
sbb
pop
add
push
jne
aaa
xchg
les
push
push
sub
sub
or
iret
cmpsb
sub
pop
sub
mov
jp
pop
leave
out
mov
andl
or
arpl
adc
test
imull
aad
sub
adc
dec
jl
loope
cmp
jmp
push
mov
in
jo
jge
xchg
lret
pusha
popa
mov
mov
lock
mov
test
ret
dec
add
idivl
ret
int3
icebp
sub
pop
das
jns
push
aas
lods
adc
add
cs
xchg
add
sbb
xor
jo
xchg
shrb
sbb
movsl
inc
and
into
or
ja
lahf
jecxz
push
pop
jmp
mov
add
shll
lock
in
adc
cmpsl
fstpl
mov
mov
imul
push
icebp
mov
fcompl
fcom
mov
insb
imul
pop
leave
into
dec
in
popf
xchg
fisttps
dec
ret
and
dec
stos
ror
add
and
sub
ds
or
xchg
and
and
fstpt
sbb
lods
mov
pop
mov
add
dec
dec
jbe
pop
cmp
pop
in
lock
xor
add
cld
clc
out
dec
les
movsb
jl
dec
push
lods
inc
testl
mov
loope
and
int3
loop
rcrl
inc
lds
lret
int
inc
cmpsl
enter
mov
das
iret
in
pop
int3
adc
mov
not
bnd
pushf
adc
push
jp
stc
push
leave
ss
mov
sahf
pop
sbb
sti
in
push
cmp
in
outsl
fdivl
ljmp
sbb
jp
outsl
mov
mov
jne
and
fcoml
leave
imul
gs
daa
and
jae
sbbl
xchg
cmpsl
or
stos
and
xchg
jne
adc
pop
sub
movsl
enter
fisttpl
negb
mov
rorl
call
hlt
add
fwait
cmp
lods
xlat
cmp
mov
je
jp
aaa
or
xor
pop
mov
pop
inc
jne
pop
xchg
cltd
jmp
outsb
sbb
mov
inc
jbe
gs
pusha
mov
mov
fstps
or
in
ds
out
test
pop
outsl
cmp
ror
ja
aas
aad
fists
out
ret
push
imul
or
fwait
test
mov
cmp
sbb
adc
cmpsl
adc
movsb
lock
xorl
pop
add
lock
add
jo
movsb
dec
inc
lock
aam
and
cld
dec
andl
push
daa
push
mov
daa
dec
and
cmpb
sub
mov
mov
jge
and
jl
cli
mov
pop
xchg
and
ss
movsb
push
jnp
hlt
insl
dec
int3
bound
shrl
pusha
stc
inc
test
shlb
add
dec
pop
shl
mov
xor
bound
insb
inc
sbb
sub
out
push
test
xor
mov
xorb
ja
stos
or
dec
pop
fsubs
mov
dec
xor
pusha
scas
xor
clc
out
mov
mov
ja
sbb
aam
mov
adc
and
enter
nop
fcompl
add
outsb
mov
ss
fldenv
pop
or
ficompl
push
fdivs
dec
adc
add
dec
movsl
in
and
mov
add
adc
mov
sahf
cmp
hlt
pusha
jnp
or
jbe
jb
pop
adc
dec
std
sub
test
adc
in
push
xchg
sti
cwtl
nop
in
sti
lcall
jp
dec
andb
fldenv
es
in
cs
mov
sbb
xchg
scas
jns
scas
repnz
mov
icebp
cmp
xor
fdivrp
dec
test
xor
test
sub
dec
mov
inc
hlt
popf
roll
dec
test
test
and
xchg
dec
add
cmp
popa
test
mov
xchg
mov
add
fists
mov
enter
repz
sarl
mov
daa
std
xor
fidivs
dec
xlat
fnstenv
sahf
inc
push
es
add
mov
and
mov
dec
pop
fidivs
mov
cltd
pop
cmpsb
lcall
fadd
sbb
push
cmpsb
insl
aas
jae
mov
cmpsl
push
cld
push
xchg
add
out
pop
sbb
aaa
pop
inc
int
dec
mov
rcr
rorb
dec
sbb
cmp
lahf
stc
gs
cmp
lret
insb
cltd
stos
push
inc
nop
inc
sbb
clc
or
test
mov
leave
leave
jae
hlt
or
rol
popa
dec
movsb
lret
fdivl
or
loopne
add
mov
xchg
addr16
addb
and
popa
adc
push
jmp
loopne
push
push
or
dec
or
inc
fisubl
in
mov
sub
ret
pushf
ljmp
inc
emms
rol
dec
das
pusha
push
push
cmp
mov
inc
adc
fwait
arpl
add
adc
fwait
push
lret
jp
push
add
shl
mov
sbb
adc
out
lods
jmp
pop
sub
or
mov
je
pop
popa
rcl
adc
pop
pop
sbb
scas
jl
popf
pop
xchg
bnd
inc
movsb
jle
jecxz
out
sbb
popa
out
xor
inc
les
repnz
nop
mov
mov
mov
mov
xor
sub
jno
cmp
pushf
loope
cwtl
mov
xor
ss
or
nop
mov
lcall
xchg
jb
mov
cmp
mov
mov
xorb
mov
jmp
lea
dec
adc
inc
xchg
mov
mov
fiaddl
mov
push
std
adcl
lods
mov
mov
sbb
mov
pop
sbb
adc
or
in
cmc
lods
sti
mov
in
lret
pop
mov
dec
call
inc
cmp
sarb
js
divl
loop
idivl
cwtl
pop
push
sahf
or
int3
ja
push
xchg
lds
or
sbb
lea
xor
sbb
mov
push
daa
scas
mov
xchg
add
mov
lret
das
call
cli
loop
movb
cs
in
sti
pop
shll
ds
and
mov
pop
rclb
jbe
movsb
mov
mov
xadd
mov
into
inc
pop
test
push
dec
or
mov
mov
add
cmp
dec
iret
mov
mov
pop
xchg
or
popf
jle
fwait
add
xchg
sbb
mov
cs
xlat
scas
mov
or
push
add
push
pop
lds
movsb
jae
gs
jb
xor
pop
jmp
inc
jb
gs
stos
cmp
test
push
fisubrs
sub
es
mov
push
adc
or
dec
mov
mov
jp
push
pushf
cmpsb
jecxz
lcall
xchg
fcoms
jb
leave
sub
test
les
jle
shrb
cld
dec
xchg
lcall
push
adc
testl
xor
fisttpll
cmc
add
sub
imul
and
iret
mov
in
iret
adc
mov
ss
call
cmp
mov
push
sbb
repz
push
push
add
dec
xlat
loopne
and
push
in
jnp
pop
adcl
cmp
movl
in
rorb
or
pop
sbb
sbb
stos
sbb
jbe
push
push
mov
imul
outsl
cmc
cltd
dec
and
pusha
test
pop
pop
mov
outsb
xorb
cs
out
repz
mov
adc
fldcw
pop
daa
enter
sbb
icebp
out
mov
in
ret
jno
out
insl
or
and
mov
lcall
daa
inc
daa
mov
cmp
pop
sbb
jne
cmp
imul
sub
cwtl
ret
inc
xchg
mov
xchg
rcll
push
sub
pop
mov
xchg
push
pop
cwtl
xchg
lahf
mov
ror
xchg
inc
faddl
sub
mov
fcomi
push
add
test
dec
imul
jle
loop
repnz
shrl
sub
daa
adc
mov
and
arpl
add
cmp
enter
insb
dec
jno
mov
push
ds
and
mov
mov
add
pop
mov
pop
mov
mov
mov
xchg
dec
lret
adc
aad
clc
bound
cmc
xor
imul
inc
divb
inc
out
jb
rcrl
cmpsb
sub
popf
outsl
pop
in
lods
fs
test
xchg
jmp
lea
and
mov
rcll
push
add
dec
ja
es
into
adc
fistps
aam
in
push
aam
repnz
or
pushf
push
fwait
add
aam
clc
js
movsb
mov
lcall
push
push
mov
fsubp
aad
sub
mov
push
add
ds
cmpsb
jno
cmc
std
shll
xchg
in
imul
push
insl
loope
or
faddl
cmp
mov
mov
mov
clc
and
cmp
xchg
xor
sbb
mov
and
lods
xchg
adc
push
lcall
mov
mov
jo
push
pop
pushf
shrb
push
in
sub
loopne
test
in
mov
jno
lea
scas
sbb
into
fmul
scas
test
jnp
jae
test
xchg
movsb
movsb
jmp
pop
cmp
int3
adc
insl
fidivrl
dec
das
mov
and
dec
jp
xchg
repz
mov
xor
popa
out
xchg
pop
int3
leave
test
jnp
jne
ret
sbb
push
pop
hlt
and
and
pushf
or
int3
mov
mov
jb
pushf
jp
out
insl
xchg
test
sbb
and
sbb
lret
mov
jle
call
imulb
xchg
lret
hlt
mov
les
movsl
pop
dec
xchg
inc
sub
out
movsl
aas
ds
push
cmp
mov
dec
das
push
sbb
xlat
movsl
xor
sbb
xor
jo
xchg
lock
inc
cmp
mov
ja
pop
pop
jge
andl
aas
imull
inc
out
push
mov
cs
pop
test
inc
into
sub
inc
jecxz
pop
push
pop
test
inc
mov
jge
inc
mov
mov
cwtl
std
out
or
sahf
ljmp
jecxz
push
js
les
xorb
arpl
cmpsb
xor
inc
nop
add
sbbl
and
mov
test
xchg
and
lods
test
test
pop
xchg
fsubr
shl
imul
mov
xor
inc
cli
cmp
adc
test
jl
or
test
push
jecxz
fwait
cmp
cld
fisttpll
in
fdivrl
aam
ljmp
jg
push
cmp
sbb
cmpl
clc
mov
push
or
repz
popa
out
pop
push
loop
gs
sub
adc
adc
add
mov
mov
xchg
es
or
outsl
jmp
bound
or
shlb
ret
adc
lds
mov
data16
lret
jecxz
mov
cld
sub
imul
dec
negb
das
or
in
xchg
adc
fcmovbe
out
mov
jl
mov
out
mov
dec
in
data16
jae
out
in
sti
imul
roll
iret
in
mov
pop
out
push
push
test
test
das
cmc
iret
push
mov
imul
jb
in
sub
out
nop
jge
addr16
pop
mov
nop
dec
out
mul
sahf
cli
sbb
xorb
test
out
xchg
dec
jmp
push
cmpb
frstor
shll
push
and
orb
jnp
cs
mov
push
add
adc
lahf
jne
mov
lea
xor
jne
pop
mov
dec
hlt
dec
jge
test
or
in
adc
mov
xor
loopne
jp
daa
jbe
push
mov
lret
adc
sub
sub
inc
ss
mov
das
and
jg
mov
je
test
mov
mov
cmpsb
xor
jns
call
cld
jo
xor
iret
nop
in
push
lahf
xchg
jne
mov
cmpsl
imul
sbb
cltd
leave
sti
test
push
mov
test
mov
sub
cs
pushf
mov
xor
ss
ds
in
mov
jo
leave
mov
repnz
xor
pushf
xor
lods
and
xlat
scas
add
test
inc
shlb
cmp
aas
cmp
adc
jnp
jl
mov
movsl
cmp
sbb
ror
cmp
sbb
adc
dec
shl
or
mov
or
rorb
pop
pop
loopne
setle
ss
popa
or
repz
jle
jmp
mov
xor
into
jp
mov
xor
aam
mov
les
sub
out
xchg
jns
sbb
jle
filds
ss
push
and
push
push
inc
or
inc
ds
push
mov
dec
push
pop
mov
jmp
xor
outsl
cltd
pop
fcmovu
mov
add
gs
push
je
movsl
cmp
pop
mov
int3
mov
push
rorb
or
nop
jb
jl
dec
icebp
fdivrl
pop
dec
insl
mov
jmp
pop
inc
pop
mov
call
scas
es
scas
adc
gs
add
xor
inc
pop
jae
leave
pop
test
mov
out
jg
push
ret
out
sbbb
idiv
ds
insb
movsl
dec
and
ret
dec
fcmovbe
adc
fidivs
sbb
inc
lds
enter
jb
inc
or
fisubs
inc
sub
fsubrs
rorb
pusha
dec
xlat
rcr
cmp
arpl
lock
into
testl
add
ret
add
xchg
popf
mov
popf
std
into
and
mov
popa
and
cmp
and
es
push
or
jo
cmp
das
movsb
loop
inc
mov
inc
fsubl
jae
out
xchg
sub
mov
sub
rorb
loop
jmp
outsl
fildll
cwtl
aad
inc
sbb
ljmp
inc
cld
mov
movb
mov
push
cmovge
pusha
pusha
iret
fs
scas
push
xor
ljmp
incl
push
sub
cwtl
push
xor
sub
flds
jmp
adc
xor
fldl
leave
stos
insb
bound
push
stos
popa
cli
jno
test
xchg
xchg
and
cmp
mov
cmpsl
adc
xchg
inc
jae
hlt
pop
or
hlt
xchg
imul
popa
lock
cli
jl
lcall
pushf
xchg
mov
ljmp
lahf
movsl
mov
xor
jmp
add
ss
repz
mov
or
std
imul
sbb
in
pop
inc
xchg
fwait
cmp
xor
iret
add
or
shrl
stos
in
fildll
daa
std
inc
jb
adc
inc
aas
or
enter
in
cwtl
cmpsb
pop
dec
jnp
sub
mov
jle
dec
test
repz
xor
pop
jnp
cmp
jl
push
dec
mov
sti
jmp
gs
loope
push
ret
pop
cmp
arpl
pop
xor
fucomi
leave
sub
and
ja
fnsave
xchg
outsb
lcall
loop
ret
ret
fldenv
add
out
stos
add
pop
xor
fldt
jp
add
and
sti
stos
lds
and
push
mov
jge
mov
rclb
mov
add
mov
adc
push
das
push
aas
std
aam
sti
push
das
or
jno
inc
cmpl
pop
repz
push
xor
cmpsl
scas
setle
sbb
xchg
into
sbb
ja
fwait
testb
inc
mov
int3
push
shll
mov
incl
sbb
lds
jp
pop
sti
and
pop
lcall
cmp
xor
sub
push
jmp
inc
shlb
and
cmpsb
test
cmpsl
aam
and
popf
inc
out
int
mov
mov
iret
gs
or
pop
jmp
mov
pop
sub
fidivrs
bound
sti
shl
outsb
mov
xor
add
xchg
pop
or
xchg
mov
out
jnp
jecxz
clc
push
dec
xchg
es
lahf
or
mov
cmc
and
call
fistl
fsubs
mov
mov
lahf
push
inc
in
and
dec
bound
xlat
aam
sub
fsubrs
fs
push
sub
inc
in
stc
call
xor
in
ret
in
ret
mov
mov
or
jmp
mov
insl
push
dec
jbe
mov
inc
js
jbe
pop
xchg
fdivs
sub
dec
idivl
xor
fidivrs
enter
sbb
pop
out
les
xchg
stos
lret
jle
xchg
jl
lods
mov
lahf
jmp
stos
mov
pop
fistl
outsb
daa
insb
insl
pop
movsb
das
addr16
jae
test
scas
loopne
fidivs
pushl
sub
ret
inc
pop
scas
adc
int
cmp
imul
subb
push
sub
inc
icebp
scas
adc
out
pop
mov
ds
adc
mov
insl
in
cmpl
mov
cmp
mov
inc
sbb
pop
cmp
mov
hlt
shl
js
mov
jecxz
ret
sub
scas
inc
xor
mov
fsubp
mov
movsl
jmp
sbb
lcall
fdivs
cmpsl
inc
cmpsl
outsb
pop
dec
push
rolb
adc
out
icebp
xchg
and
and
scas
dec
dec
and
shlb
mov
mov
dec
jae
jmp
popa
mov
in
fnstcw
mov
cmp
adc
cmc
xor
mov
and
mov
xor
or
inc
pop
pushf
pop
rorl
and
push
cmp
mov
add
push
out
es
aas
add
lods
ret
add
fdivrp
mov
push
in
add
icebp
stos
push
pop
shl
adc
xchg
movsb
fwait
inc
inc
pusha
xor
and
push
adc
int3
xchg
xor
cs
pop
lds
sbb
or
sub
inc
out
pop
dec
ljmp
cli
fwait
xor
idivb
inc
and
fsubl
rol
add
adc
cmc
cmp
shrb
dec
inc
insl
push
lods
shlb
pop
xor
in
call
add
lcall
fwait
dec
hlt
add
xchg
push
add
repz
pop
lret
pop
insb
pop
jge
cmp
jne
cmpsb
jmp
lds
sub
pushf
sbb
outsl
xor
dec
xor
sbb
or
push
mov
jnp
mov
dec
dec
xchg
repz
push
mov
mov
push
sub
nopl
push
add
movsl
rorb
and
add
imul
jge
imul
sub
psrld
xchg
pop
mov
jns
or
jp
pop
xchg
pushl
jle
xchg
leave
mov
bound
cltd
pop
cmp
add
mov
insl
rcrl
jecxz
in
aaa
dec
in
popa
jns
mov
xchg
lods
fdivrp
ja
jo
in
jbe
inc
lock
out
sub
lea
push
hlt
fwait
or
or
cmpsb
mov
and
xchg
xchg
std
repnz
mov
mov
icebp
cmpsl
fincstp
mov
pop
inc
or
mov
loopne
xorb
dec
lret
mov
int3
ret
add
push
jle
jnp
nop
pop
nop
test
pop
out
leave
pusha
push
mov
in
jp
rolb
cmp
scas
pushf
jg
sbb
outsl
in
adc
aaa
pop
push
stc
inc
dec
dec
add
fcmovb
mov
and
pop
jmp
inc
sarb
cmp
push
adc
imul
cld
mov
jns
sub
imull
jle
inc
dec
mov
bound
repz
mov
mov
mov
sub
xchg
insl
int
pop
and
lods
xor
xchg
dec
dec
dec
cli
loopne
jo
cmpsb
mov
add
insl
jae
icebp
mov
popa
jo
mov
rorb
adc
jl
fidivrs
cmp
insl
pop
test
mov
popa
pop
pop
in
dec
fnstcw
xor
xchg
jge
insl
enter
mov
pop
mov
cmp
push
jg
mov
mov
fcomp
call
xchg
or
adc
pop
jns
out
out
inc
sub
dec
dec
xor
ljmp
sti
jp
std
inc
or
popa
cmpsl
mov
pop
pushf
mov
repz
icebp
shrb
in
cltd
mov
sti
mov
bswap
out
lods
stos
xchg
popf
daa
repz
mov
out
sbb
leave
cmp
out
and
push
insb
mov
les
inc
push
movsl
dec
lods
inc
test
aam
mov
orl
in
jae
roll
adc
mov
popa
push
mov
out
xchg
adc
ja
stos
mov
jp
sbb
dec
mov
test
aaa
jecxz
lret
fmulp
iret
icebp
xlat
sub
fsubrp
or
push
cmp
stc
lahf
xchg
nop
cmc
dec
jno
pop
test
dec
stos
mov
push
push
push
push
jnp
xchg
sbb
ja
cwtl
push
ret
mov
scas
push
xchg
mov
push
push
rorb
inc
jnp
or
xor
pushf
loopne
cmpl
sbb
xor
and
and
add
adc
rclb
fstpt
push
cld
sub
test
repz
dec
pop
dec
add
or
movsb
sarb
arpl
push
sbb
inc
lret
xor
mov
xor
jp
mov
stos
xor
aas
clc
sub
ret
movsl
pop
repz
pop
sub
or
or
xchg
pushf
fldt
notl
sbb
push
mov
sub
std
xor
mov
or
adc
cltd
ja
add
popf
test
andb
testl
int3
adc
push
push
outsl
xlat
icebp
sarl
insb
call
add
inc
ljmp
mov
add
rcll
pusha
xchg
sbb
xor
push
sbb
xchg
sbb
cmp
movsb
dec
xor
int3
push
mov
cmp
mov
pushf
jne
loopne
test
mov
gs
repnz
lods
scas
mov
sahf
inc
xchg
ret
jbe
mov
jns
mov
xorl
int3
dec
dec
fstpt
and
shlb
ja
dec
cmp
pop
daa
jmp
filds
inc
cmpsl
sub
add
xor
xor
push
addl
sub
xchg
ljmp
nop
jle
fsubrp
rcrl
xchg
arpl
mov
enter
imul
add
mov
mov
add
loop
je
hlt
jno
mov
lods
adc
ret
and
xchg
movsb
enter
pop
jg
dec
cmp
fwait
adc
pop
lcall
inc
mov
cmp
jne
cmp
cli
pop
inc
push
lods
mov
and
in
packsswb
loop
neg
sub
loope
mov
loopne
mov
leave
es
arpl
lret
cmp
xchg
sbb
jo
mov
int
mulb
mov
push
test
icebp
push
or
adc
ret
hlt
adc
movhps
cmp
sbb
xchg
xchg
and
jmp
sub
ljmp
push
aad
scas
aaa
test
add
adc
cli
xchg
cltd
adc
or
inc
lahf
inc
cmp
and
cwtl
cld
in
sti
sub
aas
fwait
xchg
sbb
push
mov
daa
insb
xor
bound
push
inc
sahf
pop
repz
xchg
xchg
mov
inc
cmp
cmp
fdivs
ret
shll
in
fwait
add
mov
cmp
sub
dec
push
fcmovne
inc
ljmp
mov
imul
imul
insb
test
out
xor
gs
flds
aam
pop
vmovhps
lods
jl
pop
in
mov
mov
add
lds
xor
jne
adc
pop
sahf
leave
jecxz
fsts
sub
xchg
push
fidivl
pop
aad
xor
fsubl
xchg
mov
mov
into
add
mov
fistpll
jbe
mov
push
ficoml
ret
mov
cmc
push
xchg
lret
imul
dec
scas
cmp
push
cmpsb
adcb
roll
jle
adc
xchg
pop
mov
cmp
inc
sahf
pop
in
inc
pop
mov
mov
repz
xor
ret
out
inc
cs
mov
mov
loope
push
ljmp
test
out
jp
add
repz
sbb
push
xlat
jne
dec
add
mov
shrl
cmpl
call
rol
mov
fisubl
shlb
cmpsb
sahf
push
dec
sub
into
pusha
xchg
jecxz
les
xchg
pop
sub
pop
pop
jb
lods
cvttps2pi
int
stos
into
jnp
cmp
movl
imul
loope
add
aam
adc
mov
sbb
and
xchg
xchg
inc
push
pop
out
out
jbe
add
jnp
test
and
cmpsl
dec
cltd
in
jns
fisttpl
mov
mov
sbb
cmp
or
jbe
fmuls
ja,pn
lock
mov
fsubl
movsb
lods
rcrb
lahf
sbb
stos
or
pop
sbb
inc
lea
push
imul
dec
out
enter
jo
xor
or
mov
pusha
cmc
mov
jmp
in
push
cmp
mov
popa
jl
jl
call
daa
push
sub
jns
pop
inc
mov
lret
sti
nop
push
dec
push
or
daa
sbb
lcall
mov
dec
pop
cmc
push
or
xlat
sub
std
sahf
cmpl
dec
mov
faddl
cmp
adc
into
stos
xor
push
lcall
cmp
stos
xor
pop
pop
aaa
mov
or
in
mov
pop
mov
cld
rorl
and
rclb
cmp
mov
xchg
push
sub
and
pop
xchg
nop
es
leave
in
mov
push
stos
incb
cmp
dec
inc
adc
mov
lret
adc
out
cmp
xchg
lahf
outsb
rol
mov
adc
ds
push
jmp
mov
arpl
out
negl
stos
xor
fldl
aas
cmp
rcll
pop
mov
ljmp
sub
mov
shlb
fildl
int3
pop
xor
popa
das
inc
insl
dec
mul
movsl
mov
fsubrl
xor
iret
inc
dec
jbe
insl
lds
cli
int3
push
ss
fidivs
add
bound
fdivrs
mov
cltd
ja
cmp
imul
fldcw
inc
dec
push
fsubs
xchg
mov
imul
inc
dec
fstps
fucomp
repz
xchg
mov
mov
insl
dec
ljmp
test
mov
das
fcoml
adc
pop
stos
cwtl
fcoms
push
xchg
stos
adc
ja
mov
ret
cmp
dec
xchg
add
mov
rol
sbbb
gs
ja
pop
add
cltd
imul
shr
lds
adc
ja
inc
fstps
mov
push
inc
push
cmpsb
inc
data16
fstpt
push
repnz
shrl
pop
jmp
pop
sub
xor
fisttpl
inc
movsl
fnstsw
cmp
dec
in
cmp
jbe
lcall
sub
les
push
inc
pop
lahf
xchg
les
ret
xlat
nop
and
xlat
xor
jg
rorl
cmp
data16
push
cmp
loope
leave
push
rcrb
movsb
dec
int3
es
iret
dec
icebp
in
cltd
pop
cmp
test
mull
and
sbb
out
sarl
xor
sbb
sub
out
das
xchg
call
not
out
dec
je
stc
add
xlat
fistps
ljmp
outsl
fstps
cwtl
popa
push
test
ficoms
push
sarl
pop
adc
pop
mov
jbe
jne
and
insb
call
sti
mov
orl
jbe
jecxz
mov
xlat
cli
mov
ja,pn
push
shrl
cli
and
icebp
cmp
cmc
addr16
mov
daa
pop
test
xor
rclb
test
ljmp
push
orl
push
mov
xchg
js
pushf
and
lret
adc
mov
push
adc
in
fwait
push
or
nop
call
inc
cli
int
and
or
cmpsl
das
decl
dec
iret
cmpsl
imul
adc
scas
cmp
and
push
mov
dec
in
jg
pushf
mov
popf
loopne
inc
push
das
pop
dec
aam
lret
or
scas
and
adcb
pop
cli
std
sbb
mov
pop
aad
insl
mov
push
jle
xchg
test
sbb
pop
push
jecxz
push
sti
andl
insb
push
inc
outsl
je
and
jb
outsb
push
mov
bound
xor
xchg
imull
dec
cmpsb
jp
and
pop
lret
push
sub
mov
jo
add
adc
lock
into
aam
sarb
fsts
add
rorl
add
fwait
andl
cmp
sub
xchg
dec
loop
adc
mov
arpl
dec
push
mov
mov
std
fwait
lcall
pop
jnp
std
outsb
and
adc
mov
xchg
sbb
pop
aam
iret
out
xlat
and
and
push
xor
pop
nop
inc
shlb
inc
dec
gs
inc
lret
or
arpl
fisttpl
add
pop
push
test
leave
cmp
outsb
xor
out
lcall
mov
pop
and
imul
and
data16
lock
leave
je
sub
scas
loop
jns
in
jg
jp
cmp
mov
stos
mov
gs
into
scas
jl
outsb
cmpsl
or
or
sub
pop
xor
xlat
push
inc
mov
inc
sub
inc
es
rolb
jae
and
sub
sub
push
or
pop
jb
and
mov
adc
adc
xor
sbb
loopne
loopne
movsb
jne
sbb
sub
cmc
xchg
and
fstpt
mov
and
add
fs
in
bound
add
pop
sub
ja
and
repz
pusha
outsb
sbb
and
arpl
jge
jb
imul
shrl
mov
aam
jns
mov
xchg
mov
sub
sub
push
or
movsb
cld
push
lods
lods
cmp
inc
lret
arpl
pop
cmp
shrb
lock
push
push
lds
xchg
mov
cmc
int
push
fdivrp
push
cmp
out
xchg
sbb
cmp
icebp
stc
mov
leave
xchg
mov
mov
jae
lods
rcrb
notb
jbe
lcall
arpl
addr16
fisubl
icebp
outsb
in
data16
sub
mov
pop
lods
popa
sub
hlt
enter
pop
dec
push
push
xchg
cwtl
mov
iret
mov
lds
es
fmul
mov
pop
in
imulb
cmpsl
xchg
pop
or
pop
jge
mov
pop
sub
pushf
lea
jo
xor
jp
add
adc
fcoml
fists
cltd
push
or
int
xchg
push
fadds
push
aad
or
arpl
adc
dec
outsl
cmpsl
mov
dec
add
mov
pop
fwait
pushf
pop
sub
add
insl
xorl
testb
xchg
mov
int
jecxz
xlat
jae
out
rolb
outsl
cmp
jb
ret
push
aam
into
jb
inc
out
cmp
jecxz
rolb
hlt
xlat
fwait
mov
jmp
lcall
mov
mov
adc
pop
test
xor
aas
popa
sbb
pop
loopne
adc
nop
sub
mov
cmovl
lcall
fldcw
icebp
mov
aaa
aas
cmpsl
notb
mov
add
push
inc
jno
push
insl
dec
mov
dec
out
mov
sub
add
mov
ljmp
nop
cmpsl
mov
sar
ficomps
dec
ror
movsb
mov
inc
xor
popf
mov
das
mov
cmpl
fadds
cs
out
mov
cmp
dec
mov
clc
mov
jle
imul
clc
cld
dec
jno
xor
pushf
repnz
sub
lods
out
aad
adc
faddl
bound
lcall
mov
in
jbe
cmc
ret
ret
loopne,pt
mov
stos
dec
iret
push
inc
das
addl
pop
push
jae
int3
or
sbb
rcl
push
andl
pop
fcomip
add
dec
xor
pop
adc
test
jno
dec
jecxz
inc
aam
imull
rsqrtps
and
and
lds
ja
ss
imul
fiaddl
lods
jmp
mov
mov
pop
lcall
sbb
gs
mov
adc
inc
mov
adc
daa
ss
mov
hlt
dec
sar
in
and
test
test
inc
mov
mov
push
hlt
int3
call
daa
or
repnz
inc
movsl
and
and
lret
daa
inc
hlt
lcall
repnz
enter
cmpsb
mov
dec
add
or
pop
push
xchg
psraw
iret
movsl
popf
mov
xchg
jno
jecxz
jno
aam
add
test
shll
and
lret
rcrb
ja
test
out
lods
dec
and
inc
bound
sbb
insl
xor
push
popl
push
jbe
sbb
scas
cld
cmp
and
mov
out
push
rorb
pusha
adc
adcb
popa
mov
fwait
sahf
out
or
lods
and
dec
cmp
push
mov
pop
jne
cmp
sbb
xchg
addr16
fabs
jb
lcall
fwait
jbe
push
sub
repz
ss
push
jecxz
fcomip
pop
mov
int3
add
sbb
std
xlat
call
jecxz
jmp
add
jl
sub
pop
out
cmp
pop
lret
mov
xor
ljmp
cmp
outsb
sub
cmpsl
or
pusha
gs
loope
lods
nop
sti
or
femms
andl
xchg
pop
cltd
mov
jne
jmp
sub
notl
imul
pop
ja
pop
sbb
scas
pop
lahf
pusha
mov
bound
push
scas
pusha
mov
orl
pop
scas
lahf
aas
sbb
scas
sbb
push
add
jno
mov
mov
adc
add
jmp
cmp
sbb
mov
push
test
mov
repnz
es
mov
and
cs
andw
xchg
xchg
dec
mov
adc
adc
cmp
aaa
lods
ret
lret
mov
cli
or
mov
inc
int3
sbb
sbb
arpl
mov
xchg
jg
mov
lahf
xorl
orl
les
xor
insl
bound
inc
inc
sbb
dec
icebp
lods
cmp
rolb
loop
push
inc
push
pop
mov
jg
in
push
mov
jbe
mov
jmp
cltd
mov
xchg
fimuls
inc
movsb
add
mov
sub
in
pop
andb
sub
sbb
mov
pushf
cmp
jb
es
or
push
sub
clc
jmp
pop
add
jecxz
jg
pop
mov
jno
in
pop
test
iret
xor
int3
jno
fistpll
sub
sbb
jns
data16
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
clc
add
orb
add
dec
add
cmpb
add
add
cwtl
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
loopne
add
in
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
or
add
add
in
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
lret
add
add
add
add
add
add
add
push
add
pop
arpl
add
add
add
add
add
jbe
add
xchg
add
mov
add
lods
add
mov
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
pop
imul
mov
add
add
arpl
add
add
and
xor
add
add
mov
add
add
add
in
arpl
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
push
inc
mov
dec
xchg
push
scas
movsl
dec
sub
inc
outsl
insl
jo
arpl
add
mov
subl
test
add
mov
mov
rcl
fimull
in
pushf
xchg
gs
push
cmpl
int
xlat
push
test
sbbw
mov
imul
jbe
push
outsb
jmp
dec
movsb
jbe
sbb
fisttpl
out
test
jns
sub
mov
add
fdivrs
jp
xorb
mov
out
imull
lcall
mov
or
dec
fbstp
in
mov
inc
xchg
orl
mov
stos
jle
dec
add
fbld
jge
jle
sahf
mov
lea
inc
sub
mov
mov
test
subl
notl
mov
jbe
es
fldt
push
insb
pop
adc
pop
inc
mov
xorl
fimuls
cmpb
push
mov
sahf
push
iret
mov
jno
mov
adc
xchg
push
mov
out
adc
gs
push
lcall
xchg
fisttps
mov
testl
pop
sub
jge
or
imul
hlt
dec
mov
and
mov
adcb
or
pop
mov
jge
imul
mov
popf
adc
dec
lea
icebp
xchg
or
and
jmp
in
sbb
cmp
lret
lahf
cmpsb
xchg
jle
mov
mov
out
mov
sbb
jg
mov
test
jmp
inc
push
inc
ss
and
xor
push
or
mov
sar
pop
test
sbb
pop
mov
sbb
pop
incl
inc
or
xor
adc
psrlq
es
mov
fmull
frstor
inc
or
push
mov
aad
xor
push
and
and
mov
or
inc
or
inc
mov
mov
xlat
loopne
mov
cmp
lods
testl
repz
or
iret
jp
pop
push
test
mov
inc
xchg
imul
inc
mov
bound
jmp
movsb
cltd
ret
push
cli
mov
pop
sub
in
mov
clc
adc
icebp
mov
xchg
cmpxchg
xlat
lret
pop
pop
mul
fs
xchg
popf
rcrl
insl
xor
push
xchg
xor
and
xchg
xlat
dec
pusha
xchg
push
dec
xlat
xchg
xchg
dec
jo
cmpsl
stos
js
lods
mov
nop
mov
out
mov
push
xchg
imul
mov
or
push
loopne
aaa
loop
roll
pop
xrelease
jmp
out
imul
ret
xchg
lods
mov
fstl
call
mov
popa
cmp
xchg
xchg
adc
fwait
mov
or
jno
mov
xchg
xor
mov
popa
lret
push
std
mov
mov
mov
sbb
xchg
call
in
sahf
jb
out
xchg
pop
imul
test
push
mov
cmp
sti
sub
pop
nop
push
and
aaa
sahf
xchg
push
ljmp
and
push
repnz
push
push
push
jb
mov
addl
cmp
decl
jecxz
ret
mov
imul
cld
mov
pop
mov
stos
xor
or
xchg
push
prefetchw
push
rorb
mov
mov
pusha
xchg
cmp
add
cmp
jge
fwait
nop
inc
ljmp
xchg
adc
in
mov
mov
mov
inc
movsb
divb
xchg
repnz
dec
orl
inc
adc
and
mov
fs
popf
add
sahf
popf
nop
fstp
or
inc
lcall
or
sub
call
jnp
xchg
repnz
test
sbb
call
mov
out
jbe
outsl
adc
sbbb
call
jle
arpl
test
and
sarl
cltd
inc
cwtl
inc
repnz
rorl
sbb
push
pop
push
lock
rol
xchg
aam
mov
aad
xchg
aaa
lds
out
mov
mov
mov
mov
out
adc
lcall
xchg
andl
sahf
jb
mov
pushf
mov
cvtps2pd
ljmp
dec
mov
xor
adc
mov
pop
dec
lret
mov
pop
fwait
lock
xchg
xchg
xchg
mov
stc
jnp
xchg
inc
mov
aad
inc
push
orb
inc
push
getsec
roll
inc
xchg
je
xor
hlt
sahf
mov
lods
popf
xchg
mov
sub
lret
not
test
movb
repz
mov
stc
ret
jno
cmp
subl
or
sahf
fwait
shrl
pop
adc
orl
int3
scas
or
test
and
adc
pop
mov
mov
nop
aam
je
js
aas
lahf
add
inc
icebp
out
push
inc
stos
ret
mov
orb
iret
cli
mov
mov
push
or
int
lcall
in
idiv
or
sub
xor
mov
inc
or
rolb
arpl
cmp
std
rorl
pop
test
popf
stos
or
xchg
scas
sarb
adc
pop
sub
mov
xchg
imul
cmpsl
ret
sbb
lods
leave
ret
xorl
inc
in
icebp
lret
shlb
aad
mov
repz
lea
orb
flds
int
inc
jle
cmp
add
add
xchg
and
orl
mov
lods
aam
xchg
cld
inc
mov
mov
shrb
inc
rclb
sub
add
scas
imul
inc
dec
sub
fdivrs
fwait
or
lds
add
add
cmc
mov
xorl
xchg
jp
inc
in
or
xor
loopne
test
add
arpl
jl
leave
pop
das
pusha
popa
xchg
std
xchg
std
xchg
sbbl
lea
push
cmp
xchg
mov
push
imul
mov
push
dec
sbb
add
mov
jle
push
aam
ficoms
ficoml
jl
mov
imul
loopne
xor
addb
ljmp
scas
lret
add
jmp
xchg
inc
mov
je
mov
cmp
les
addl
enter
dec
or
mov
popf
icebp
mov
and
dec
xchg
ret
mov
mov
mov
mov
sub
pop
imul
bound
xchg
call
faddl
in
hlt
nop
rcl
cmpsb
push
adc
fisttpl
lret
xor
arpl
addr16
xchg
popf
pop
cmp
movsl
shlb
mov
outsl
scas
rol
test
stos
leave
mov
jp
inc
mov
jno
subl
xchg
js
shrb
push
fwait
sub
dec
nop
sub
push
cs
push
xchg
xchg
and
and
sbbl
jb
rcl
movlps
or
push
rorb
sbb
push
in
lret
dec
xchg
mov
sub
sbb
xorl
loopne
mov
dec
leave
mov
lock
cmp
out
add
aaa
cmc
rcll
std
or
imul
mov
mov
xchg
and
sbb
cmpsb
mov
lods
mov
mov
pop
push
leave
lret
or
mov
fadd
cmp
ret
adc
adc
and
fimuls
and
jbe
rcl
int3
mov
add
xchg
pop
jge
mov
rcl
push
mov
ret
lret
pop
jp
sub
icebp
mov
icebp
hlt
loopne
in
fisubs
mov
add
xor
push
xchg
sub
je
inc
or
leave
insl
xchg
int3
add
add
fldt
pop
imul
imul
pop
xlat
xchg
pop
push
int
sub
dec
je
jo
inc
in
mov
jno
cmp
or
inc
cmpsl
movsl
mov
imul
sahf
rol
out
lret
popf
xchg
fmul
ljmp
cmpsb
xorb
out
imul
aaa
dec
push
mov
jno
test
test
push
nop
add
in
imul
lret
jle
push
dec
cwtl
push
mov
ret
cmp
adcb
inc
movsl
jbe
scas
inc
imul
arpl
pmuludq
xor
dec
loop
jns
add
test
sub
scas
cli
or
fistpl
stos
xor
loopne
pop
test
pop
mov
cmpsl
mov
jl
es
or
repnz
imulb
mov
mov
jb
nop
mov
jl
lods
test
ljmp
out
xor
mov
icebp
mov
out
dec
lods
in
dec
imulb
loopne
lcall
mov
jmp
out
rol
into
lahf
lds
scas
jecxz
pop
mov
test
aad
mov
not
icebp
sbb
jae
jecxz
je
sahf
in
cli
ret
pushf
cmc
push
inc
cli
mul
xchg
in
jmp
mov
not
es
add
loop
ljmp
add
repnz
iret
push
sahf
decb
jbe
ljmp
pop
hlt
adc
dec
mov
adc
sub
push
repz
sbb
shlb
out
push
repz
cwtl
mov
fwait
add
loop
mulb
stos
jle
add
push
addb
push
addb
push
addb
ret
xor
adcb
sub
push
addb
push
addb
push
iret
xchg
dec
imul
addb
xor
add
icebp
test
jp
cmc
add
pop
or
adc
jne
jb
es
mov
shlb
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
fs
adcb
add
add
mov
arpl
add
add
adc
arpl
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
inc
xor
add
jo
jmp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jmp
jle
sub
mov
jmp
sbb
xlat
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
jmp
repnz
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
jmp
stos
fwait
cmp
jbe
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
inc
sub
out
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
mov
jmp
or
push
das
cmp
sbb
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
jmp
pop
xor
shlb
sub
int3
adc
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
test
jmp
iret
pop
gs
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
jmp
mov
test
mov
sbb
cli
stos
or
push
and
fstps
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jne
pushfw
push
call
adc
mov
cmpb
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
xlat
dec
sub
daa
aam
jge,pn
ret
inc
jns
pop
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
into
out
cld
test
or
add
jmp
out
cmp
jle
sub
mov
sbb
xlat
les
pushfw
push
call
iret
pop
gs
dec
loope
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
arpl
fsubrp
ss
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
test
xor
imul
mov
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shr
loopne
aaa
movsb
or
push
das
cmp
sbb
lods
pushfw
push
call
daa
aam
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
insb
xor
ss
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
xchg
shr
pop
leave
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
int
pushf
push
call
test
cmp
mov
add
add
pop
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
loope
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sbb
mov
add
add
repnz
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
aad
fstpt
mov
and
inc
push
nop
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
jmp
imul
and
movb
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
je
js
pushf
push
call
add
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
jmp
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
sub
jmp
pop
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
push
pushfw
push
call
xlat
les
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
push
xchg
test
xor
imul
out
cli
stos
or
mov
push
and
fstps
fwait
cmp
in
adc
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
repz
push
call
cwtl
icebp
push
inc
sub
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
fsub
mov
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
popf
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
fdivrl
cmp
xchg
pop
add
and
call
outsb
setl
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
inc
pop
xor
shlb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
mull
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
js
push
pushfw
push
call
and
inc
push
nop
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
scas
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
in
mov
jmp
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
jmp
es
mov
cmpb
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
jmp
jge
ret
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
imul
aad
sub
fs
xchg
ror
into
out
cld
test
or
add
xor
jle
sub
mov
sbb
xlat
les
xor
sub
cmp
dec
loope
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
lret
test
test
das
inc
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
ror
jmp
jnp
xor
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
jmp
jmp
aaa
movsb
or
push
das
cmp
sbb
jmp
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jmp
jp
sub
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
bnd
sti
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
loope
and
inc
push
jmp
nop
mov
lret
test
repz
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
movb
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jmp
mov
aaa
sub
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
fadd
jmp
sbb
inc
out
aam
jb
inc
jns
pop
jmp
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shr
in
jmp
mov
adc
div
fs
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
jmp
jmp
cmp
push
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
sar
lahf
in
mov
mov
push
xchg
test
clc
insl
jmp
mov
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jmp
jbe
in
cs
add
push
dec
dec
outsl
jl
pop
mov
icebp
push
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
push
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
jmp
add
sub
and
pushf
movsl
jp
mov
jmp
inc
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
cmp
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
mov
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
shr
sub
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jmp
jl
pop
mov
es
adc
mov
cmpb
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
test
stc
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
sub
setl
inc
pop
xor
shlb
int3
adc
mov
das
fs
xchg
ror
into
out
cld
test
or
lock
cmp
jle
daa
fildll
push
xlat
les
cs
pop
gs
call
das
push
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
pop
pushfw
push
call
xor
xchg
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
and
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
and
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
sbb
push
das
cmp
sbb
cmc
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
mov
pushfw
push
call
in
and
pushf
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sub
mov
add
add
or
add
add
add
add
decl
lcall
mov
add
add
add
or
popf
jmp
jmp
xor
shlb
int3
adc
das
xchg
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
mov
jmp
push
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
rorl
fdivs
push
xchg
test
xor
imul
stos
add
pushfw
push
call
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fstl
and
sahf
jg
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
stos
fwait
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
ja
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
jmp
cmpb
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
mov
jmp
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shr
shll
push
dec
adc
div
jmp
fs
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
add
push
call
ficomps
mov
add
add
inc
mov
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
jmp
cmp
jbe
in
add
push
jmp
dec
dec
jmp
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
fsubr
sub
popa
xchg
popf
adc
repnz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
mov
pushfw
push
call
mov
add
add
lcall
add
pop
add
add
decl
lcall
mov
add
add
add
add
popf
jmp
jmp
mov
xor
outsb
setl
inc
pop
xor
shlb
int3
adc
div
jmp
fs
int
xchg
ror
into
out
cld
test
or
add
cmp
add
jle
sub
mov
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
jmp
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
lret
test
inc
pushfw
push
call
std
repnz
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
stc
ds
in
mov
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fdivs
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
insl
jmp
mov
sbb
cli
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
cmp
jmp
mov
pop
lods
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
test
add
jmp
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
jmp
mov
int
xchg
ror
into
out
cld
test
or
in
call
out
cmp
jle
sub
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
jp
jmp
mov
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
and
movb
fstps
fwait
jmp
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
inc
sub
jne
pushfw
push
call
fsub
mov
inc
je
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jecxz
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
aas
or
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
rcll
or
das
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
jmp
inc
jmp
pop
xor
shlb
int3
adc
out
xchg
div
fs
daa
adcb
test
or
add
addl
jle
jmp
sub
mov
sbb
xlat
jmp
lods
loop
xor
clc
test
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
pushfw
push
call
push
std
repnz
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ds
in
mov
mov
mov
add
add
xor
add
add
jmp
clc
decl
call
mov
add
add
loope
mov
enter
pushfw
push
call
test
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
imul
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
dec
jmp
sub
ds
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
jmp
inc
out
aam
jb
sub
inc
jns
pop
insb
xor
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
jmp
sub
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
in
sbb
xlat
jmp
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
fsubrp
daa
mov
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
call
push
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
insl
mov
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cli
stos
or
mov
add
add
pop
add
add
add
add
decl
lcall
mov
add
add
add
enter
jmp
dec
xchg
stos
fwait
cmp
adc
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
aam
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
sub
lret
mov
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
movl
jmp
into
out
cld
jmp
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
jmp
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
add
add
mov
sbb
cli
stos
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
call
outsl
jmp
jl
pop
mov
es
mov
cmpb
ljmp
inc
sub
scas
dec
fsub
mov
inc
je
inc
push
mov
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
xchg
shr
sub
test
or
add
addl
in
cmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
mov
xor
jmp
aad
fstpt
mov
and
inc
push
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
sub
movb
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
movw
jmp
pop
lods
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
jmp
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
ret
jmp
xchg
pop
add
and
das
mov
jmp
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
fucomp
das
adcb
test
or
add
lock
out
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
mov
jmp
xchg
arpl
cmp
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
test
xor
imul
mov
jmp
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
daa
mov
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
mov
jmp
pop
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
sub
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
pushfw
push
call
cmc
mov
sbb
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
lods
loop
xor
push
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
gs
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
loope
hlt
sbb
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
jmp
imul
stos
or
sub
movb
fstps
out
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
das
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
jmp
out
aam
jb
inc
jns
pop
insb
jmp
xor
xchg
pop
add
hlt
in
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
jmp
ror
into
out
cld
test
or
jmp
add
divl
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
loopne
add
jmp
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
stos
jmp
or
push
and
fstps
out
stos
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
out
mov
cmpb
jne
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
xor
xchg
dec
jmp
dec
sub
daa
jmp
aam
jb
inc
jns
jmp
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
xorl
jmp
xchg
cmp
jle
cmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
push
mov
jmp
and
inc
push
nop
mov
lret
jmp
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
or
push
and
repnz
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
rorb
daa
mov
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sub
jmp
ret
inc
jns
sub
cmp
xchg
pop
add
and
pushf
movsl
jp
out
mov
inc
pop
xor
shlb
xor
int3
adc
mov
mull
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
xor
cs
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
xor
jmp
stc
ds
in
mov
mov
jmp
test
xor
imul
stos
or
push
and
fstps
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
inc
jmp
mov
inc
add
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
jmp
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
out
jb
das
ret
inc
jns
pop
insb
xor
jmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
dec
jmp
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
and
jne
pushfw
push
call
mov
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
