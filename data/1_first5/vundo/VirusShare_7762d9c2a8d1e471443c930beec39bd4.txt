or
ficoms
cld
and
sbb
cli
xchg
lods
mov
or
aad
lret
mov
je
in
pop
cmovno
int
jmp
mov
out
mov
popa
jmp
push
sbb
add
filds
xor
out
or
mov
stos
ljmp
bound
xchg
mov
xchg
loope
cld
inc
stos
or
mov
femms
bound
mov
fsubrs
push
aam
push
jb
xor
mulps
aad
lcall
daa
imul
jp
mov
test
push
fsubr
pop
daa
xchg
add
cs
or
fxch
add
shrb
pop
pop
jne
sahf
push
mov
lret
cld
sbbb
pop
icebp
imul
call
mov
and
test
aas
cmpb
aas
mov
shll
xor
pop
pop
jne
mov
inc
xchg
pop
arpl
fwait
addr16
lea
mov
or
rclb
and
fwait
dec
int
mov
lahf
test
int3
jp
sub
jb
pop
xchg
icebp
xchg
inc
add
adc
shll
addl
dec
adc
sub
pop
or
mov
cmp
cmp
nop
out
mov
aam
ret
and
lods
or
inc
cs
sbb
jg
shll
and
test
push
sub
stos
mov
cmpsb
fstpl
ds
or
xor
xchg
pop
mov
mov
aaa
pushf
pusha
cmp
adc
repz
sbb
bound
mov
sbb
and
mov
add
xchg
fisubrs
and
stos
sahf
cmp
cwtl
mov
mov
clc
aam
push
jo
rcl
roll
pop
aas
push
add
repz
in
insl
cli
sub
pop
loopne
int3
cmpsl
and
pop
mov
sub
ret
dec
movsb
push
loop
scas
sub
sbb
aaa
cmp
push
mov
or
arpl
ljmp
lods
ret
xchg
std
add
bndldx
out
daa
nop
scas
popf
jg
aad
pop
in
or
pushf
mov
xor
cmpsl
sar
dec
mov
loopne
out
inc
iret
push
xlat
add
sub
add
test
pop
icebp
dec
mov
sbb
xadd
inc
pop
cmp
push
cltd
mov
push
notb
sbb
jp
push
insl
mov
sub
mov
sbb
jmp
pop
sbb
cmp
stos
push
fnsave
xchg
mov
hlt
rol
jecxz
mov
mov
or
mov
iret
push
cld
push
sbb
outsb
mov
cmpsb
adc
rol
push
inc
push
outsb
jb
dec
mov
mov
cltd
mov
fbld
mov
cld
push
jb
aam
pop
jmp
outsb
xor
pop
dec
pop
unpcklps
outsb
sbbb
mov
push
pop
test
jns
dec
test
out
jl
cmc
or
sbb
pop
pusha
mov
push
insl
idivl
jae
xor
adcl
pop
xor
inc
mov
test
lret
test
inc
ja
dec
ret
jbe
pop
jns
imul
cmpsb
lret
into
into
xor
enter
arpl
pop
sub
cwtl
vmovshdup
lcall
sub
fidivs
dec
jmp
rcll
cmp
hlt
mov
insb
xor
fldcw
jmp
bswap
lret
mov
fbld
imul
test
fistps
pop
test
lea
jmp
imul
lds
push
sbb
fdivl
or
adc
inc
jg
add
mov
sbb
add
push
dec
clc
pop
fimull
into
jmp
in
sbb
and
insl
mov
stos
pop
loopne
cmp
test
mov
xchg
push
inc
sti
sbb
aaa
xor
cmc
inc
push
add
out
jmp
dec
fildll
js
pop
cmp
movsl
fisubrs
jns,pn
stos
lods
dec
fmull
cmpsb
push
test
adc
mov
sub
mov
sub
xchg
inc
xchg
cmp
jmp
sub
int
xchg
ret
pop
pop
jle
shlb
dec
sbb
xlat
add
je
clc
xor
jp
mov
scas
sub
jne
or
push
adc
inc
insb
aam
mov
sti
and
xorl
adcb
sbb
js
add
mov
jecxz
les
sbb
cwtl
dec
popf
push
add
test
sub
loope
push
xor
and
add
xchg
aam
jmp
jo
xchg
shll
cltd
mov
movsb
mov
lods
insl
jp
inc
mov
cmpsl
xchg
mov
add
xchg
sti
sar
xor
xlat
xor
popa
sarb
dec
movsl
mov
add
jge
mov
cld
lss
jb
ret
popfw
lret
push
aas
mov
xchg
mov
xor
int3
lods
dec
pop
rol
aad
cwtl
mov
and
test
inc
rorb
cmc
add
xorb
cwtl
sbb
jge
dec
cmp
cltd
sub
cwtl
cli
dec
inc
into
sarl
sub
push
movsl
icebp
and
or
jnp
push
jae
jbe
and
or
push
nop
cmpb
push
stos
jecxz
lock
sub
int
call
push
dec
js
jne
sbb
adc
inc
sbb
nop
cli
scas
lock
and
sub
mov
push
push
push
xchg
loop
xchg
and
rcrb
mov
xchg
mov
mov
int
lret
fsubp
test
fidivrs
imul
fcomp
je
dec
jmp
xchg
add
mov
or
mov
inc
sub
push
lret
pop
out
pop
test
test
jnp
enter
fldl
fs
xor
cmpsb
fdivrs
inc
pusha
pusha
push
add
sbb
dec
xor
addr16
outsl
enter
or
cmp
dec
dec
rclb
jg
xlat
dec
lds
ljmp
pop
gs
fdivl
lcall
shrl
xchg
lcall
iret
lret
add
idiv
fcmovne
and
xor
xor
push
mov
mov
xor
outsl
inc
adc
and
leave
pushf
cli
pop
enter
aam
dec
test
dec
cmp
mov
aad
nop
mov
mov
pop
mov
jns
mov
mov
inc
cld
adc
adc
or
shlb
inc
xchg
sub
scas
add
ljmp
mov
rclb
cmp
pop
js
lret
push
xchg
sbbl
pop
nop
xchg
sbb
ja
aaa
pop
idivb
popf
add
popf
cmp
jb
insl
mov
mov
mov
testl
je
jns
mov
push
mov
push
outsl
les
add
sbb
out
adc
push
add
sti
sub
je
repnz
push
dec
adc
imul
lods
bound
jp
test
sbb
add
mov
lret
icebp
mov
xchg
dec
stc
mov
inc
mov
jno
in
call
ficomps
and
data16
adc
inc
jb
or
sar
pop
xor
sub
adc
sub
das
sub
enter
lods
cvttps2pi
shl
and
push
fcmovu
sahf
xchg
pop
or
cmp
mov
lods
je
xchg
dec
jns
or
push
lahf
push
mov
jo
test
cmpsl
or
pop
pop
pop
pop
pop
cmp
std
popf
dec
data16
adc
scas
xchg
dec
mov
lods
push
in
sub
mov
mov
arpl
stos
sbb
ret
imul
pop
xchg
cwtl
scas
in
cld
ret
fcmovbe
sbb
ljmp
inc
mov
test
adc
ljmp
into
mov
push
fstpt
cmpsl
sbb
popf
lods
mov
adc
xchg
or
movb
imul
dec
sbb
cli
leave
test
cmp
fsubrs
stos
add
xchg
sub
jle
add
enter
mov
inc
hlt
sub
lret
add
xchg
xchg
std
jge
pushf
call
cld
cmp
jecxz
repnz
jg
or
adc
adc
stos
stos
inc
xchg
std
pop
sbb
xadd
gs
and
inc
pop
lock
aas
inc
xor
and
and
imul
adc
cmpsb
aaa
push
pop
pop
sbbl
lock
cmp
xchg
adc
test
dec
mov
scas
sbb
xlat
mov
jp
jo
push
inc
jbe
mov
out
leave
inc
inc
or
xchg
sbb
lods
inc
mov
sbb
sbbl
outsb
popf
mov
xchg
mov
mov
lods
cs
dec
push
adc
loop
jp
in
movsb
adc
shll
movsb
cs
roll
add
mov
xchg
popf
add
pushf
and
push
sbb
das
jmp
xor
add
fidivrl
push
fcomps
cmp
xor
add
es
sahf
scas
xor
movsl
rolb
shrb
sub
mov
add
jge
cld
fwait
or
add
mov
and
and
int3
int3
hlt
out
lods
cmpsb
movsl
sbb
setae
jno
vmovaps
fidivrs
les
jnp
popa
fcom
loope
xor
adcb
and
dec
lret
sub
sub
add
or
inc
mov
push
jp
mov
mov
lcall
ret
mov
popf
addr16
aas
in
hlt
fadds
int
call
add
sbb
sbb
inc
xchg
lea
sub
jp
enter
mov
pop
pop
pop
xor
inc
vpshuflw
mov
cmp
xchg
or
cmp
movsl
ret
negb
add
inc
pop
mov
xchg
mov
fs
push
loope
mov
aaa
or
lods
int
leave
jae
pop
out
insb
aad
shr
mov
outsl
cmc
jnp
push
out
stos
jns
popa
gs
xor
mov
pop
inc
add
mov
cmp
adc
daa
pop
mov
adcl
test
and
inc
inc
mov
movq
sub
std
jnp
inc
shll
dec
push
xchg
addr16
out
bound
das
push
cmp
jle
dec
add
sub
sub
jns
sbbl
jp
into
or
sub
push
or
movsl
xchg
pusha
orl
pushf
pop
or
or
jns
insb
mov
adc
insb
aad
fmull
or
add
or
push
mov
hlt
ret
ret
mov
hlt
aad
es
dec
sbb
loopne
fs
lock
jge
mov
sbb
int
orb
inc
arpl
and
pavgb
addr16
jo
rcrb
jge
or
jnp
pop
lret
lahf
adc
repnz
jl
xchg
push
out
xor
inc
adc
mov
mov
mov
inc
std
into
out
mov
loopne
sbb
jecxz
dec
ret
movsl
pop
movhps
scas
push
inc
adc
mov
jnp
mov
push
dec
lods
sub
sub
aam
dec
add
dec
repnz
push
les
daa
mov
push
ljmp
dec
jle
and
mov
leave
imul
dec
in
or
ret
addr16
adc
loope
xor
add
mov
shlb
std
ljmp
fwait
aas
cmp
inc
or
popf
mov
cli
daa
mov
cmc
ret
test
shll
sub
mov
pusha
dec
adc
jo
ljmp
mov
pop
or
test
jmp
cmp
pop
insb
inc
jecxz
es
les
cmp
push
sbb
movsl
or
ret
cmp
add
and
mov
sti
cld
mulb
lods
cmp
xchg
pop
lods
xchg
inc
push
dec
jo
and
jno
jns
push
cmpsb
adc
and
mov
cmp
push
pop
std
add
in
jo
test
idivl
cmpsl
dec
push
and
push
sbb
gs
lcall
xor
xor
lcall
mov
daa
cmpsb
jg
xor
test
and
adc
dec
add
nop
mov
movsl
sahf
jae
stc
cmp
lds
sti
cmpsb
jae
xchg
jle
iret
mov
das
repnz
mov
ret
push
scas
loop
jg
dec
jne
jle
scas
adc
push
clc
test
xchg
out
pushf
cmp
rolb
das
mov
jmp
mov
mov
in
sub
sbbl
sahf
push
mov
mov
jle
ljmp
and
jns
shlb
out
push
roll
mov
pop
shlb
mov
scas
push
sbb
mov
test
and
mov
nop
ja
xor
adc
pop
enter
pop
mov
sti
push
sub
ret
jle
ss
idiv
pop
out
lods
aaa
push
jge
mov
cmp
sahf
enter
adc
mov
sub
into
data16
ret
repnz
test
cmp
add
mov
pop
xchg
push
xor
push
sub
xor
addl
sub
adc
cwtl
dec
mov
jecxz
imul
adc
ret
mov
pop
xchg
xor
pop
movsl
adc
ficomps
fnstsw
or
fadds
or
cmp
lret
jbe
push
add
cs
cmp
mov
out
rclb
push
adc
sub
and
roll
jbe
sbb
mov
in
das
cwtl
mov
sbb
imul
pop
lcall
xor
fs
mov
pushf
test
sti
dec
mov
pop
subl
pop
imul
sub
pop
jmp
push
mov
hlt
mov
mov
shlb
std
cld
loopne
dec
cmp
lret
outsl
mov
pop
lods
sarl
fwait
jo
mov
pop
pop
int3
leave
dec
add
push
ficoms
mov
add
in
lea
addr16
inc
inc
sub
out
cmp
add
mov
stos
mov
lods
mov
sarb
fwait
inc
adc
jmp
jno
cs
cmpl
insl
adc
insl
daa
sub
cwtl
or
jnp
out
addr16
stos
loop
xlat
movsl
imul
or
xor
popa
mov
pop
adc
test
adc
insl
mov
cmp
push
add
mov
iret
bnd
fisttps
dec
adc
sub
push
xchg
dec
sub
aam
subb
xchg
insl
inc
push
sbb
imul
cltd
or
xchg
sbb
push
leave
inc
sbb
push
daa
jl
mov
jbe
gs
ret
push
lret
cli
xchg
clc
scas
jecxz
insb
movsl
arpl
and
out
push
mov
xor
icebp
call
jl
xchg
lret
pop
dec
stc
out
hlt
dec
sub
out
jge
rcr
sub
cld
push
test
testl
mov
xor
dec
mov
push
mov
int
sub
pusha
leave
mov
add
inc
sbb
aaa
ficomps
imull
aam
jnp
jp
sahf
out
sbb
stos
das
fwait
out
leave
xor
lret
test
xor
rol
push
insb
pusha
pop
filds
and
inc
fsubrs
pop
push
or
hlt
mov
or
cmp
and
cmp
cli
pop
cmp
jae
js
bound
dec
icebp
aad
fwait
mov
enter
inc
mov
dec
xchg
pop
jb
xchg
into
and
popa
mov
movsb
cli
jecxz
out
cmp
mov
punpcklwd
mov
enter
cmpsb
out
add
stos
mov
xor
xchg
ljmp
jecxz
sbb
sub
adc
movsb
jae
popl
mov
loop
scas
pop
sbb
or
ret
jb
pop
mov
xchg
dec
push
jno
pusha
enter
sbb
xchg
sub
test
cmp
pop
pop
idivl
or
mov
mov
adc
rolb
int
jo
sbb
adc
lock
xor
lds
daa
outsl
mov
dec
xchg
adc
pop
adc
das
or
sete
sub
mov
aas
sar
xchg
push
push
sub
insl
mul
outsl
bound
cmp
mov
mov
mov
or
rcll
aam
lret
lahf
sbb
dec
out
rorl
out
adcl
pop
addr16
xor
jmp
sub
std
and
mov
pushf
jb
push
jae
ss
push
sub
inc
dec
inc
ret
push
sti
fnstsw
inc
jp
loopne
hlt
mov
pop
inc
lahf
mov
into
xor
xor
adc
leave
jo
fnsave
retw
outsb
sahf
cmpsl
insl
cltd
ss
stos
ljmp
sahf
dec
lahf
aaa
xchg
gs
repz
jbe
movsl
pop
jns
les
mov
mov
pxor
mov
lock
iret
sub
jle
xor
or
inc
inc
xor
add
in
repz
sub
jo
insb
popa
sahf
xor
mov
pop
sahf
adc
lret
mov
ret
sbb
cmp
cmpsl
mul
sti
sbb
repnz
cmp
inc
cs
push
loopne
adc
fs
lahf
aas
shlb
add
adc
xchg
pop
fs
orb
xor
push
xor
dec
push
bound
sbb
addr16
fstps
sbb
push
cmp
cmp
fmulp
xchg
sub
sti
idivl
out
pop
jnp
rolb
movb
jmp
jl
push
in
inc
scas
lock
daa
insb
cmp
call
fxch
rcll
movsb
xor
pop
xor
jp
sbb
sub
decb
jbe
aad
fdivs
pushf
ja
hlt
mov
fwait
add
dec
enter
or
dec
pushf
repnz
mov
sbb
jb
mov
std
pop
inc
cltd
or
lods
aad
sbbb
mov
and
cmp
and
arpl
outsl
mov
idivl
cmp
ljmp
stos
lods
or
and
dec
sub
push
pop
fists
sbb
pop
push
xchg
pop
mov
negb
mov
and
lahf
aam
or
push
pop
pusha
cmpsl
jl
or
mov
mov
lods
andl
xor
into
in
lds
xchg
pop
pop
or
sbb
pop
jg
sub
stos
pop
push
pop
pop
sbb
repz
sti
scas
test
stos
aas
loopne
xchg
rclb
cmpsb
lret
test
fisubl
xchg
outsb
mov
mov
and
dec
fwait
mov
or
mov
pushf
and
ljmp
xor
cmp
dec
push
movsb
insb
inc
bound
int3
push
pop
xor
cwtl
sub
aas
mov
push
inc
and
cld
push
pop
lahf
cmp
in
pop
mov
fstl
not
cmc
scas
xchg
sub
add
or
mov
fisubrl
jle
dec
icebp
mov
push
adc
mov
icebp
jmp
test
jae
jno
mov
sarl
mov
jne
insb
or
mov
fsubrp
mov
inc
dec
in
std
sbb
repz
jns
lret
cld
clc
cmpsl
je
sub
push
pushf
fs
fbld
and
mov
test
adc
aaa
std
jl
cmp
or
mov
loopne
jns
inc
scas
or
jge
andb
loopne
xchg
cmpsb
enter
call
mov
jnp
mov
push
fldl
mov
and
aam
movsb
mov
insb
lea
push
adc
fistps
jge
xchg
or
mov
jg
mov
in
push
dec
rclb
in
aaa
cmp
out
sub
xor
iret
mov
lods
mov
bound
int
js
loope
jne
movsb
lahf
movups
cmp
cld
rcll
imull
rclb
orl
mov
inc
mov
sub
lea
shr
mov
fsts
aad
repnz
and
pop
movsb
adc
add
and
int3
movsl
pop
mov
les
aam
pop
mov
cmp
add
pop
dec
and
cmp
cltd
lock
scas
push
es
iret
idivb
xor
sbb
mov
fstl
sar
jmp
push
dec
orl
call
sbb
push
cmc
sbb
mov
dec
aaa
roll
fisttpll
jl
adc
clc
cld
xor
insb
push
imul
xchg
test
jae
fwait
je
ret
push
scas
push
stos
in
or
insb
mov
cmp
push
xchg
cmpsl
sbb
mov
sbb
hlt
dec
out
pop
mov
sub
mov
lea
or
adcl
sbb
xor
sbb
inc
push
pop
xchg
fildl
into
daa
loope
test
sub
insl
push
pop
cmpsb
inc
mov
xor
inc
stos
repnz
cmpsl
shll
icebp
fsts
inc
rclb
es
adc
adc
rcll
negl
mov
stos
fcmovnb
fidivs
and
shlb
bound
inc
and
clc
inc
int3
add
shlb
add
and
ffree
in
jae
lcall
rcl
subb
int3
mov
dec
jns
iret
cmpsl
adc
push
xchg
and
fcmovnb
ret
aam
pop
scas
out
lret
xlat
add
sub
sti
mov
andl
dec
sbb
inc
insl
into
test
dec
pop
cmpsl
inc
cmpsl
push
push
fnstenv
mov
xor
sbb
lds
ret
repnz
jo
es
icebp
aam
shll
jnp
jb
sbb
dec
adcb
add
lret
mov
and
mov
mov
inc
popf
stos
sub
push
adc
mov
fcmovne
out
shlb
xlat
inc
fwait
push
bound
xchg
sub
push
daa
adc
ret
out
les
xchg
enter
sti
mov
dec
push
jp
pop
ret
pop
jno
popf
scas
sub
mov
aaa
sahf
call
pop
fisubrs
mov
or
call
fwait
mov
dec
sahf
mov
sbb
add
jge
repnz
sbb
or
lret
xor
sarl
out
mov
ds
mov
mov
push
xchg
cmc
pop
push
push
pop
loopne
pushl
cmp
adc
es
sbbb
popa
jne
adc
pushl
adc
push
mov
add
mov
lret
mov
adc
test
xchg
xchg
addr16
pop
sub
icebp
push
pop
mov
adc
mov
mov
lock
out
adc
fdivr
mov
outsb
fwait
or
je
cmc
sbb
rolb
push
scas
movsl
ret
add
ss
xchg
mov
xor
mov
xchg
cmp
popf
push
lods
dec
xchg
icebp
or
add
mov
in
xchg
lret
mov
inc
sub
xor
jp
xchg
lock
inc
push
bound
insl
test
mov
mov
inc
mov
js
inc
cmc
in
xchg
inc
inc
or
aas
and
stos
test
int
lods
outsl
stc
add
add
mov
test
add
rcll
jns
popf
sti
in
fwait
call
add
das
xor
inc
lahf
loopne
jge
imul
shll
neg
cmpsb
fs
sub
jb
ret
in
mov
nop
ja
hlt
mov
stos
enter
incb
push
int3
cltd
ljmp
imul
push
xlat
outsl
cmp
in
xchg
fildl
mov
int3
js
neg
dec
clc
stos
daa
xor
and
pop
inc
cs
pop
sahf
arpl
cmp
mov
mov
sub
and
mov
dec
ss
or
xor
inc
inc
mull
inc
and
adc
loopne
mov
incb
jl
pop
sub
lds
pop
fisubs
or
mov
mov
adc
jmp
repz
andb
xor
shl
bnd
jmp
jo
out
imul
xchg
leave
cmp
adc
ds
sbb
imulb
mov
push
dec
push
xor
mov
cmp
jae
push
mov
or
pop
std
data16
in
je
mov
imul
insl
push
cmp
add
push
rolb
sbb
mov
aas
cmc
lds
sbb
ror
imul
fisubl
lods
mov
or
bound
cltd
negb
fyl2xp1
push
imul
inc
or
dec
scas
dec
push
lret
and
gs
orl
ds
arpl
rcll
lea
leave
xor
mov
mulb
pmulhuw
cmpsl
sub
adc
jmp
out
dec
lret
inc
test
jbe
jle
imul
lods
jmp
in
repnz
mov
mov
push
fimuls
mov
cmp
adc
cltd
ss
movsb
sti
es
or
jg
enter
jmp
les
orb
pop
mov
out
push
ds
lcall
add
dec
shlb
adc
dec
xchg
sbb
jo
cmp
fldl
ljmp
leave
ffree
lcall
mov
inc
enter
andb
sub
push
or
imul
sub
dec
clc
or
lds
lea
cmpsb
inc
imul
sbb
xchg
xor
leave
sub
fstp
pop
xchg
out
mov
jle
dec
cmpsb
sub
imul
in
adc
inc
popl
jmp
mov
mov
fdivr
xchg
xchg
test
lods
and
inc
mov
xor
sub
lcall
sub
pop
in
pop
xchg
cmpsl
jae
xchg
xor
xchg
lea
aam
push
enter
dec
add
rolb
xor
push
js
add
loop
push
inc
lods
sub
popa
sub
xchg
dec
popf
xchg
add
inc
adc
lock
mov
sarl
mov
xchg
cs
pusha
xor
leave
add
std
clc
jge
and
std
jnp
aad
fdiv
and
adc
rorb
decb
orl
test
lds
and
repz
pop
push
push
in
xchg
add
fstpl
cmc
lret
sbb
arpl
popa
js
sub
pop
mov
lret
fidivs
ficoml
dec
addb
int
data16
shll
pop
mov
pusha
pop
out
popf
stos
mov
ffreep
push
mov
lahf
popf
adc
aaa
loopne
repnz
mov
lret
cmp
add
rorl
xor
sub
cmc
pusha
imul
push
or
cli
loop
ds
sbb
and
adc
adc
int
out
movb
imul
xchg
cmp
fwait
pop
jns
fnstsw
stos
mov
mov
pop
iret
ja
bnd
aam
cmpsl
rorb
inc
call
jae
add
lcall
rcl
pop
out
pop
scas
cmp
jo
push
push
adc
mov
cld
and
xchg
fdivrl
cmpsl
xor
les
jbe
cmpsl
es
dec
and
fisubrs
jne
scas
pop
lcall
mov
leave
lcall
dec
xchg
mov
je
std
pushf
add
pop
clc
xor
cwtl
inc
sahf
jecxz
adc
les
decb
sar
test
cs
ficoml
neg
xchg
cltd
scas
jns
icebp
aam
push
std
add
fsubrl
sbb
into
ret
inc
or
xchg
inc
clc
add
sbb
inc
jmp
lcall
mov
test
sub
insl
jne
xlat
adc
dec
inc
xchg
dec
repz
cmc
inc
int
ds
fimull
mov
loop
movsl
jecxz
fstl
sub
adc
and
mov
mov
hlt
and
popf
out
loope
adc
lret
pop
sub
jg
cmp
mov
or
leave
adc
push
mov
pop
sti
cmp
enter
xchg
mov
ret
aam
and
lods
ds
or
add
mov
outsb
push
xchg
cmp
push
popa
mov
cld
inc
push
lcall
mov
outsb
sub
stos
js
ret
sbb
mov
mov
inc
push
jno
pop
sbbl
mov
sub
jb
mov
outsl
mov
mov
mov
dec
pop
imul
xchg
add
jno
stc
pop
xchg
or
test
scas
push
sbb
test
int3
adc
daa
divl
jns
iret
rorl
shll
imul
add
js
jle
inc
mul
sahf
repnz
cmp
shrb
daa
daa
cmp
fstps
movsl
xor
dec
stos
lcall
push
mov
xchg
mov
pop
dec
pop
dec
sub
cltd
push
dec
ds
popf
inc
in
add
movsl
xor
popa
mov
sub
ss
loope
and
dec
fcompl
das
mov
inc
pop
xor
cmp
popf
nop
and
nop
popf
pop
andb
xchg
jge
pusha
inc
cld
lahf
or
insb
mov
mov
mov
iret
popa
sbb
bound
and
adc
in
repz
imul
sub
xchg
xor
rolb
in
mov
mov
cmp
lret
in
das
xor
sti
mov
js
push
fwait
cmp
fcomi
pop
mov
sub
test
lds
inc
mov
mov
sbb
movsb
inc
push
mov
rcll
add
xor
sbb
jg
aad
add
lret
negl
xor
pop
test
pusha
mov
xchg
xor
daa
mov
lock
hlt
jbe
popa
adc
imul
mov
push
icebp
popl
jmp
in
pushf
jecxz
or
jnp
ljmp
or
shll
fnstenv
daa
into
fnsave
or
adc
and
mov
in
xor
dec
stos
lods
xchg
loopne
pop
push
mov
ja
or
jecxz
ret
lret
ss
ljmp
popf
ret
ret
xchg
test
push
loope
in
jmp
pop
pop
mov
sub
insb
mov
adc
pushf
dec
lret
cld
dec
sbb
jp
pop
outsl
shrl
jne
add
cmp
stc
fld
mov
lcall
push
std
cwtl
lods
jae
inc
movsl
sbb
lock
in
adc
ret
inc
mov
sbb
adc
pop
out
sub
sar
dec
mov
insb
push
inc
nop
mov
dec
mov
inc
cld
sub
out
scas
mov
cltd
pusha
xor
jge
sti
lods
inc
inc
jae
mov
js
jecxz
cli
stos
das
pop
imul
ljmp
sub
cld
cmp
push
jl
lock
sub
mov
mov
pusha
mov
lds
mov
mov
out
cld
pop
inc
add
jb
sub
mov
mov
mov
xchg
mov
pop
xchg
cmp
push
cbtw
mov
cmpsb
xor
mov
daa
push
lods
pop
in
mov
pop
cmp
xchg
cmp
xchg
pop
loope
test
add
jmp
or
leave
mov
adc
push
sub
mov
pushf
lods
movsl
pop
xor
testb
inc
enter
int
push
out
jns
gs
nop
jnp
lock
mov
je
lods
jno
popf
imul
mov
and
lcall
fiadds
daa
inc
and
jno
mov
cmp
mov
loope
sub
test
std
mov
fsubs
lret
add
sbb
mov
and
nop
or
xlat
testb
loopne
fistpl
add
lds
imul
mov
mov
scas
mov
outsl
push
dec
pop
sahf
dec
mov
adc
movsb
cmpsb
pushf
cwtl
out
ret
clc
outsl
push
xor
pop
gs
cmpsl
pushf
xor
shrl
out
add
jnp
popf
out
push
pop
pushl
xchg
xchg
fistpll
cli
out
fiadds
cmp
cmpsl
jae
mov
pusha
xorl
sbb
xrstors
lahf
stos
adc
es
mov
mov
mov
pop
lods
fsub
sahf
sbb
repnz
or
andps
mov
in
dec
daa
lods
pop
pusha
scas
roll
les
movsl
inc
mov
loop
jmp
test
sub
xor
xchg
into
insl
popa
pop
bound
cmp
sbb
mov
out
inc
xchg
daa
addr16
andl
out
shl
ds
ret
fldcw
fucomip
jp
jnp
and
outsb
popf
cmp
pop
and
fadds
ret
ret
xchg
gs
push
fldenv
bound
mov
hlt
clc
fidivs
adc
cmp
xchg
cmc
sahf
jle
add
sbb
add
rclb
pusha
repz
arpl
out
hlt
adc
mov
or
insl
das
or
hlt
mov
mov
adc
mull
js
inc
lcall
add
es
cli
jmp
push
mov
pop
adc
cmpsb
cmpsl
fldcw
and
aam
ss
inc
stos
or
push
or
ljmp
hlt
xchg
hlt
rcrb
sub
sub
lea
andb
xor
push
mulb
or
push
arpl
scas
adcb
in
xor
data16
xor
movsb
mov
jge
mov
push
and
xchg
lock
mov
out
mov
orb
push
fcoml
icebp
ds
cmc
out
cmp
sub
rcll
clc
lods
or
out
pushf
inc
jl
xchg
sti
pusha
mov
push
cmp
inc
fwait
jbe
je
pushw
test
arpl
fstpt
movsb
xlat
out
sub
pop
pop
mov
orb
jecxz
xor
mov
adc
aad
cmpsl
and
cmp
stos
or
xor
dec
fs
mov
and
popa
loopne
push
lds
add
adc
call
jmp
jmp
fcoms
stos
pop
je
shl
les
mov
inc
fwait
leave
dec
dec
pop
rol
es
int3
das
push
cwtl
mov
add
dec
lods
add
scas
arpl
mov
insl
push
adc
push
push
icebp
mov
xchg
mov
cmp
jecxz
inc
cmp
fdivrl
add
cmpsb
pop
xchg
and
mov
push
in
sub
mov
mov
sub
xor
xchg
hlt
fdivrl
jo
add
cmp
jl
jge
sub
or
clc
xchg
inc
add
or
mov
cli
cmp
pop
loopne
dec
out
jo
xor
stos
ret
aam
lret
pop
arpl
test
movsb
and
popa
idivl
push
xor
mov
mov
fisttpl
inc
pop
mov
rcll
or
lret
shlb
inc
cmpsl
push
xor
pop
in
mov
mov
repz
ds
arpl
adc
adc
ds
push
xchg
mov
xchg
lock
jmp
in
xchg
push
pop
in
mov
jl
adcl
push
adc
stc
hlt
mov
xor
bound
mov
jmp
pop
push
and
pop
sbb
lock
imull
jno
mov
lea
dec
mov
sahf
cwtl
negb
pop
cmp
and
dec
fiadds
cmp
in
testb
jmp
xor
bts
and
lock
fisttpl
or
outsl
jge
pop
aam
shlb
and
pop
sub
dec
adc
sub
es
cmp
inc
adc
sub
inc
call
pop
cmp
rol
jge
xchg
adc
inc
ja
dec
mov
vpmovsxwd
mov
push
divl
xchg
add
jge
jae
pop
ljmp
lds
lret
push
xchg
jb
into
ret
jmp
jno
out
popfw
dec
fistpll
push
imul
jle
cwtl
pusha
jmp
cmpsb
mov
inc
scas
adc
pop
std
jl
cltd
rolb
arpl
jbe
es
out
fwait
xor
dec
jbe
push
je
movl
mov
jbe
fldl
rclb
test
mov
test
daa
fadds
clc
cli
fwait
push
mov
inc
or
insl
ja
shlb
xor
push
jle
outsb
push
subb
xchg
dec
jecxz
sub
jb
pop
int
and
mov
hlt
insl
fwait
mov
jle
lcall
cld
sti
lods
or
push
stc
mov
mov
add
adc
add
lods
rcrb
push
mov
mov
fs
mov
in
cmp
jns
std
mov
dec
testl
mov
into
cmp
xor
fs
divb
inc
aam
dec
xchg
loopne
adc
xchg
shrl
add
pop
push
out
inc
and
dec
mov
hlt
push
subl
mov
shlb
xchg
aas
lods
or
xlat
mov
jle
test
pop
add
insl
mov
push
jge
rcrb
sub
mov
mov
jbe
mov
cs
std
jl
out
jno
out
orb
sbb
cmp
out
fildll
mov
rcll
inc
lods
loope
xchg
cmp
adc
mov
roll
push
inc
and
inc
mov
hlt
ja
push
jle
xor
scas
shrl
stc
outsb
rorb
push
or
add
add
loop
sahf
sahf
pop
pusha
pop
mov
mov
push
mov
mov
cs
mov
xchg
cmp
xor
push
push
out
jno
shl
subb
xor
test
cmp
dec
out
mov
jmp
dec
xchg
xchg
dec
adc
xchg
rcr
jbe
pop
add
mov
hlt
rorb
mov
test
xchg
add
stc
inc
sbb
push
in
add
pop
out
push
das
cmc
.byte
in
int3
push
push
mov
sub
mov
jmp
mov
mov
jmp
pop
ret
nop
nop
nop
nop
nop
mov
and
incl
jmp
mov
jmp
lea
push
nop
nop
nop
nop
nop
push
pushl
jmp
jne
cmpb
jne
pushl
jmp
ret
nop
nop
nop
nop
nop
je
mov
test
jne
jmp
xor
mov
xor
jmp
pop
je
lea
push
jmp
movb
lea
call
ret
nop
nop
nop
nop
nop
pushl
call
jmp
test
jne
pop
ret
nop
nop
nop
nop
nop
mov
mov
mov
jmp
call
mov
jmp
call
push
push
jmp
call
mov
jmp
mov
mov
xor
mov
jmp
call
test
pop
lea
jmp
cmpl
je
xor
cmpl
jmp
add
jmp
sete
test
jmp
push
call
cmp
jmp
pop
jmp
nop
mov
jmp
call
jmp
test
jmp
movb
jmp
xor
jmp
pop
jmp
nop
push
push
jmp
mov
push
jmp
push
mov
mov
mov
jmp
nop
nop
nop
nop
nop
call
push
call
jmp
pop
pushl
jmp
push
jmp
push
jmp
cmpl
je
jmp
sub
add
cmpl
jmp
pop
jmp
nop
nop
nop
nop
nop
push
mov
jmp
mov
test
lea
mov
jmp
pushl
pushl
jmp
shr
push
jmp
mov
movl
jmp
push
cltd
pop
jmp
mov
mov
jmp
nop
nop
nop
nop
nop
mov
jmp
inc
jmp
nop
mov
jmp
push
mov
xor
jmp
push
jmp
nop
nop
nop
nop
push
jmp
jbe
mov
mov
jmp
push
push
jmp
push
push
xor
jmp
movzbl
inc
mov
jmp
inc
dec
jne
jmp
push
call
mov
jmp
call
push
call
jmp
add
add
jmp
nop
nop
nop
nop
push
push
jmp
push
push
mov
jmp
mov
lea
push
lea
jmp
call
mov
jmp
call
test
jmp
test
pop
je
cmp
jmp
mov
jmp
add
shr
jmp
mov
cmp
jmp
and
mov
ret
nop
nop
nop
nop
nop
lea
push
jmp
push
mov
jmp
nop
nop
push
mov
test
jmp
mov
push
mov
jmp
nop
nop
nop
nop
nop
push
jmp
test
pop
jmp
sub
cmpl
je
jmp
pushl
jmp
mov
add
push
jmp
add
mov
jmp
shl
or
movsbl
jmp
pop
cmpl
jmp
mov
mov
add
lea
jmp
pop
jne
mov
pop
jmp
push
jmp
cmpl
mov
jle
jmp
push
call
push
jmp
jmp
pushl
jmp
mov
mov
jmp
idiv
xor
test
jle
jmp
mov
jmp
push
pushl
push
jmp
nop
nop
nop
push
jmp
mov
mov
ret
nop
nop
nop
nop
nop
push
jmp
sub
mov
mov
jmp
mov
mov
xor
jmp
mov
shr
jmp
xor
movb
jmp
movb
mov
mov
jmp
push
mov
jmp
shr
test
jmp
nop
nop
push
mov
push
jmp
pushl
jmp
push
andl
lea
push
jmp
push
add
jmp
orb
jmp
andl
mov
mov
mov
jmp
lea
call
pop
jmp
push
call
test
jmp
call
add
pusha
mov
jmp
mov
mov
test
jmp
nop
mov
jmp
jne
mov
jmp
pop
jmp
pushl
jmp
movl
pushl
jmp
incl
push
jmp
call
jmp
lea
jmp
je
mov
cmp
mov
nop
nop
nop
nop
nop
je
add
push
jmp
mov
jmp
nop
push
mov
jmp
andl
push
mov
jmp
mov
push
jmp
je
jmp
lea
jmp
push
call
mov
push
jmp
je
jmp
mov
mov
add
add
jmp
mov
movb
jmp
nop
nop
nop
nop
nop
push
mov
jmp
push
push
push
call
jmp
xor
mov
test
je
jmp
push
mov
jmp
movl
push
jmp
push
mov
jmp
xor
push
mov
jmp
je
jmp
lea
sub
jmp
jle
jmp
nop
add
add
lea
mov
jmp
test
jmp
jle
mov
movzwl
jmp
mov
jmp
xor
jmp
mov
xor
mov
jmp
mov
sub
jmp
push
je
call
test
jmp
mov
and
jmp
call
jmp
test
je
call
jmp
leave
ret
nop
nop
nop
nop
nop
sub
dec
mov
jne
jmp
pop
je
push
jmp
jne
xor
test
je
jmp
pop
je
incl
jmp
test
jmp
je
jmp
addl
jmp
je
test
jmp
lea
push
push
pushl
jmp
cmp
jmp
push
push
jmp
call
jmp
sub
decl
jne
mov
jmp
xor
pop
lea
jmp
xor
leave
ret
nop
nop
nop
nop
nop
mov
cmp
jl
xor
jmp
je
movzwl
jmp
push
call
pushl
mov
jmp
jne
and
jmp
mov
call
push
push
jmp
mov
xor
mov
mov
jmp
test
jmp
push
call
dec
pop
jmp
jmp
mov
jmp
jmp
mov
add
add
jmp
sub
pushl
push
jmp
add
add
jmp
mov
call
add
jmp
add
mov
popa
jmp
jmp
jle
mov
add
jmp
lea
jne
jmp
add
dec
jmp
mov
test
jmp
mov
movzwl
jmp
push
push
call
test
jmp
push
call
jmp
add
mov
jmp
mov
mov
pop
jmp
push
call
nop
nop
nop
nop
nop
mov
add
pop
jmp
je
mov
jmp
push
push
jmp
inc
inc
decl
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
jne
jmp
je
mov
sub
mov
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
jmp
add
jmp
call
jmp
jne
add
cmpl
jmp
mov
test
jle
mov
jmp
mov
jmp
jmp
xor
jmp
push
push
push
call
jmp
jne
pop
pop
push
jmp
shl
shr
or
xor
jmp
jmp
andb
incl
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
dec
jmp
jmp
jmp
jmp
push
pop
jmp
add
push
push
push
nop
nop
nop
nop
nop
call
jmp
jne
jmp
mov
push
pop
nop
nop
nop
nop
nop
movzbl
incl
mov
and
jmp
pop
pop
pop
ret
nop
nop
nop
nop
nop
xor
jmp
inc
inc
shr
je
jmp
jmp
add
lea
push
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
push
pushl
push
jmp
test
je
mov
jmp
call
mov
cmp
je
jmp
mov
sub
mov
jmp
pushl
add
pushl
push
jmp
mov
incl
dec
jmp
push
call
add
add
jmp
jne
jmp
cmp
jne
call
push
jmp
jmp
jmp
pop
pop
pop
pop
jmp
mov
mov
push
jmp
leave
ret
xor
jmp
nop
nop
nop
nop
nop
pop
jmp
call
test
nop
nop
nop
nop
nop
pop
jne
cmp
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
lea
push
call
nop
nop
nop
nop
nop
test
pop
nop
nop
nop
nop
nop
je
mov
nop
nop
nop
nop
nop
mov
sub
mov
nop
nop
nop
nop
nop
mov
incl
dec
nop
nop
nop
nop
nop
jne
jmp
sub
jmp
nop
nop
nop
nop
nop
dec
dec
mov
nop
nop
nop
nop
nop
shl
movzbl
add
incl
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
lea
push
call
nop
nop
nop
nop
nop
cmp
pop
jb
nop
nop
nop
nop
nop
inc
cmp
jb
nop
nop
nop
nop
nop
inc
cmp
jae
nop
nop
nop
nop
nop
inc
inc
test
nop
nop
nop
nop
nop
je
mov
nop
nop
nop
nop
nop
mov
sub
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
incl
incl
xor
nop
nop
nop
nop
nop
cmpl
je
mov
pop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
push
add
xor
add
mov
push
add
test
add
test
add
and
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
add
and
popf
pop
imul
add
add
add
add
sub
add
mov
popf
loopne
add
add
add
add
add
inc
add
add
add
add
add
mov
and
add
add
add
rolb
add
adc
add
add
add
int
or
add
add
add
add
add
add
add
pop
cmc
mov
add
add
add
lock
add
add
add
add
xor
add
add
add
xor
pop
jns
enter
add
mov
fstpt
and
add
enter
popf
pop
ret
sub
jp
std
add
xchg
add
add
mov
push
aaa
out
xor
aaa
addr16
idivl
std
cmp
xor
stc
xor
aaa
push
ss
cmp
cmp
xor
cmpl
xor
cmp
cmp
adc
push
cmp
cs
xor
mov
cmp
cmp
cmp
aaa
cltd
xor
xor
ss
cli
aaa
bound
ret
cmp
dec
cmp
push
cmp
cmp
cmp
ss
in
ljmp
cmp
cmp
insb
aaa
xor
pop
and
push
dec
jnp
jne
outsl
cmp
gs
pop
push
push
push
bound
push
jle
js
jb
insb
aaa
xor
pop
inc
pop
add
and
push
dec
jnp
jne
outsl
cmp
js
dec
dec
dec
dec
dec
dec
jae
mov
push
and
.byte
pop
