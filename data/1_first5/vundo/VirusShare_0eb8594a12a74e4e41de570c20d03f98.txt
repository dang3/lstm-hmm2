add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
adc
popf
fsts
pop
sbb
mov
mov
iret
ss
pop
add
add
add
push
ja
and
add
add
popa
add
add
add
add
add
add
add
add
add
cmp
add
add
add
xor
lea
add
xor
add
stos
add
cmp
cmp
ltr
add
test
str
add
add
add
add
roll
add
mov
xchg
add
add
faddl
jo
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
xchg
cmp
add
add
add
jp
adc
fiaddl
add
arpl
add
add
add
stos
add
add
add
add
add
out
and
add
add
add
add
add
add
add
add
add
enter
mov
add
ljmp
add
add
add
add
add
add
add
ja
add
or
add
lret
add
insb
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
pop
add
add
add
add
add
mov
lea
add
mov
or
mov
lea
jbe
jb
xor
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
add
add
xchg
add
xchg
add
add
add
and
fadds
cmp
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
aaa
add
cmpsb
add
add
incl
filds
add
cmp
push
add
add
add
add
add
add
add
add
add
lea
das
add
add
add
add
add
jnp
xchg
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
in
insb
add
add
add
add
add
add
lea
inc
add
add
add
and
add
add
int3
add
popa
add
add
add
int3
add
int3
add
add
popf
jae
clc
cmp
insb
mov
js
adc
pushl
jge
push
daa
fsubrs
je
loopne
cmp
js
pop
das
mov
aad
and
clc
arpl
ror
fidivs
lcall
test
pop
jns
adc
rcll
dec
stos
xchg
pop
movsl
fwait
sbb
lods
jmp
mov
push
adc
or
stos
push
sub
pushf
stos
aaa
adc
cmp
xlat
jmp
movsl
mov
mov
addr16
jp
addr16
mov
test
scas
adc
test
mov
icebp
insb
sbb
scas
aam
push
sub
sub
cld
xchg
data16
dec
push
inc
or
add
lea
sub
push
ret
mov
add
inc
cmp
xchg
addb
and
jmp
jle
icebp
sti
xor
push
fs
test
jp
xlat
mov
outsb
mov
pop
jno
push
mov
inc
sti
insb
je
adc
mov
lahf
fcoms
arpl
jnp
jno
sub
adc
and
leave
imul
lds
push
push
push
xlat
pop
xchg
push
in
paddsb
sbb
inc
inc
sahf
loopne
negl
mov
loopne
xchg
loope
sbb
jne
jle
mov
push
or
mov
insb
imul
cmp
sbb
rcl
lcall
cmp
clc
lock
mov
push
sbb
repnz
fdivrl
ret
jbe
xchg
xchg
shll
test
add
sar
lods
pop
mov
add
test
adc
stos
cltd
sbb
lret
cmp
int
je
add
adc
lods
lods
jns
cli
repz
ret
rcrb
mov
insb
cli
outsl
mov
ror
dec
iret
idiv
popf
fcmovbe
jl
sahf
sub
jge
pushf
or
or
sbb
sahf
adc
ds
add
clc
or
mov
mov
pop
mov
mov
adc
add
adc
adc
outsb
inc
pop
lea
push
lcall
arpl
lahf
pop
push
adc
leave
xchg
mov
test
loop
ljmp
stos
pop
lea
xchg
cmpsb
or
test
ret
push
imul
mov
inc
mov
imul
lods
std
insl
idivl
outsb
jecxz
test
cmp
ret
sbb
rcrb
addr16
push
cld
les
mov
sub
xchg
add
mov
cs
pushf
push
inc
pop
xchg
add
mov
mov
mov
nop
sbbl
in
xchg
mov
jp
test
pop
mov
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sub
sbb
daa
push
shrb
push
cwtl
ss
fnstenvs
xchg
xchg
or
jns
dec
out
fsubrs
cs
sub
push
leave
fnstenvs
and
push
or
shrb
sahf
dec
in
pop
les
inc
cltd
inc
jmp
adc
adc
pop
xlat
or
jne
mov
mov
jmp
lods
sahf
mov
cmp
push
shl
dec
xchg
sarl
mov
movsb
or
ljmp
clc
or
out
xor
push
ljmp
sub
ret
lods
test
daa
pop
enter
stos
lods
mov
mov
xchg
xchg
arpl
insb
out
es
jnp
cmpl
fpatan
aaa
push
push
mov
or
push
fldcw
pop
out
xor
jns
lret
or
out
inc
or
in
mov
xor
imul
mov
idiv
push
dec
inc
jbe
mov
mov
mov
in
cmp
imul
pop
fs
and
or
jp
mov
push
lret
imul
mov
inc
fsubl
and
call
adc
shrb
fisubrl
cmp
xor
call
push
call
add
lretw
and
out
imulb
es
ss
fnstenvs
xchg
xchg
or
jns
dec
out
imulb
es
ss
fnstenvs
xchg
xchg
pop
xchg
mov
ja
jo,pt
cmc
aaa
in
loop
push
mov
add
ljmp
daa
cmc
stc
mov
loope
insl
pop
sub
mov
mov
lahf
dec
mov
mov
imulb
rorl
adc
bound
add
inc
out
jns
cs
pop
faddl
jle
pop
fidivl
dec
push
xchg
inc
test
into
shll
shll
rorl
test
mov
sbb
add
jae
xor
and
xorl
sub
int3
out
lds
ja
test
and
inc
fisubs
inc
pushf
lock
push
dec
out
and
aad
repz
xor
sub
xor
fcmove
nop
in
xchg
mov
xor
repnz
out
rcll
std
xor
fsubrl
mov
xor
pop
xchg
pop
jp
lahf
jne
inc
inc
ret
jne
cld
lret
aam
dec
mov
cmc
mov
dec
mov
lret
dec
in
mov
mov
mov
iret
mov
rolb
push
adc
push
lcall
movsl
ss
or
and
pop
cmpsl
jp
repz
mov
or
mov
inc
mov
jo
lods
out
test
mov
inc
in
jge
push
pusha
sahf
data16
cmp
cmp
mov
sbb
mov
add
out
cmp
iret
stos
out
sub
and
cmc
sbb
mov
or
jl
dec
scas
push
push
fwait
pop
sub
jne
or
outsl
dec
ss
cmp
sub
mov
add
pushf
scas
xor
scas
add
scas
inc
popf
test
cmp
mov
and
aas
cmp
popa
sti
sbb
pop
xchg
std
cmp
orl
imul
xchg
mov
xor
ja
or
cmp
xchg
push
mov
push
push
leave
or
xlat
mov
dec
cmp
inc
xchg
jge
mov
data16
mov
arpl
iret
icebp
dec
jae
and
adc
leave
call
arpl
inc
inc
mov
mov
incl
jmp
cmpsb
sub
movsb
cs
jno
aas
lret
xor
test
out
push
int3
sub
push
and
dec
xor
push
push
add
push
pop
add
test
movsb
sbb
pop
es
shll
cmp
sub
and
in
sbb
push
and
mov
and
aas
stc
sbb
fisttps
xor
arpl
sbb
in
mov
out
add
cmp
mov
cwtl
and
dec
jnp
mov
mov
aas
or
mov
mov
dec
lds
xor
or
loopne
cmp
xchg
mov
ljmp
je
jne
ret
mov
xchg
movsb
loopne
pop
fcompl
sbb
jle
enter
popa
sbb
cmp
pusha
scas
pusha
xchg
dec
sub
inc
jp
mov
sub
add
out
push
add
rorl
movsl
add
sub
or
xor
xor
loope
xor
in
insb
or
sub
xor
cmpsb
mov
xor
fcmovbe
xchg
mov
add
cmpsl
or
fucom
cmovo
cs
das
inc
xchg
cmpsb
subl
xchg
cmp
rcll
fcompl
sub
xor
and
adc
mov
sbb
hlt
push
lds
roll
mov
xchg
pop
push
cs
jmp
push
loop,pt
cmp
push
arpl
lret
xchg
fwait
xor
inc
and
or
nop
nop
inc
andb
je
cld
sub
jo
cli
iret
jbe
pop
xchg
movsb
lret
aas
xchg
das
mov
push
cli
adcl
xor
push
and
sub
sahf
xor
pop
cmp
xchg
sbb
bts
mov
ss
aaa
pop
shlb
cmp
jmp
incb
push
jnp
cltd
xor
and
fs
test
or
pop
arpl
cwtl
leave
test
add
dec
imul
pop
push
or
cmp
clc
out
jbe
mov
jg
dec
outsb
cmp
dec
xor
stos
lods
in
scas
adc
int
xor
pop
lods
inc
aad
mov
out
insb
mov
fwait
jno
vpandn
aad
cs
testl
xchg
dec
push
lahf
xor
dec
sub
test
xchg
lods
incb
cmpsb
xchg
mov
rorl
xchg
adc
imul
and
push
and
mov
icebp
loopne
cli
enter
pop
sbb
sbb
push
mov
aad
stc
sub
fistl
aad
insl
test
ljmp
mov
in
xchg
fidivrs
jnp
and
daa
mov
add
jbe
or
mov
sbb
nop
adc
mov
sahf
iret
and
mov
shlb
cmp
and
push
add
inc
mov
fcmovbe
jns
sbbl
xchg
inc
leave
or
ret
movsl
inc
icebp
test
movsl
ja
fs
sub
imul
sahf
aaa
rcrb
pop
cmp
call
sbb
jl
adc
ror
add
push
pushf
fnsave
sbb
ret
inc
jmp
mov
in
faddl
out
aad
sub
and
inc
add
sub
cwtl
cmpsb
xchg
mul
mov
into
fisttpll
and
test
cli
cmp
dec
push
andb
jl
fwait
addr16
push
aas
xor
lret
mov
adc
mov
das
xchg
or
adc
or
and
ret
pop
enter
roll
roll
mov
in
scas
int
sarl
jbe
in
sbb
or
mov
ds
fistl
in
and
daa
and
loope
mov
cmp
xchg
add
loop
mov
iret
lcall
lret
popa
divl
dec
mov
push
ret
pop
mov
mov
cmp
cltd
inc
sbb
femms
inc
imul
imul
push
inc
jae
push
iret
packuswb
aam
rorl
repz
jecxz
mov
divl
in
aaa
lock
mov
sbb
mov
mov
xor
rclb
jmp
ja
adc
jo
sbb
dec
rcrl
fidivrs
push
mov
dec
shll
sets
xor
popa
movsl
push
cmp
lahf
insb
xorb
out
xor
ret
xchg
jmp
mov
into
jbe
out
xchg
cltd
and
pushf
stos
lcall
sbb
sub
xchg
movsb
push
leave
stc
pop
push
mov
pusha
cmpsl
xor
and
mov
sbb
lods
int3
inc
jae
iret
test
xchg
xchg
repnz
rclb
cmpsb
scas
test
and
mov
data16
faddl
pop
loop
arpl
mov
sbb
inc
jb
cmp
jno
sahf
bound
jb
mov
imul
jo
inc
dec
mov
mull
sub
in
mov
and
xchg
mov
push
arpl
sbb
test
sbb
loopne
test
pop
loope
ret
or
and
lds
roll
xchg
inc
out
test
in
test
idiv
xchg
out
mov
sbb
fstps
dec
push
adc
sub
ret
neg
push
lret
pop
push
cmp
pop
sbbb
int
jle
inc
jb
inc
sbb
jge
cmpsl
and
push
sub
jmp
mov
into
repnz
push
mov
xor
fcomps
inc
cmp
pop
xchg
pop
adc
mov
and
lcall
pop
add
xchg
sub
inc
jnp
lcall
mov
pop
lods
stos
in
jae
or
or
test
mov
cli
clc
xor
imull
lahf
inc
push
jae
inc
aas
mov
push
lock
popf
insb
std
bound
dec
xor
fldt
mov
test
fwait
adc
mov
scas
jb
push
dec
repz
adc
ret
lret
ret
mov
in
aam
add
icebp
pop
dec
js
addps
scas
rorl
inc
or
fldcw
xchg
xchg
es
pop
pusha
stc
pop
in
xchg
adc
sbbl
mov
shlb
mov
repnz
cmp
cltd
push
dec
push
testl
xchg
mov
adc
jg
push
push
fucomi
inc
or
inc
mov
jg
add
inc
jg
cmp
sbb
or
cmp
lahf
push
cmpsb
jmp
call
das
or
lahf
cmpsb
cld
es
out
out
jbe
fsubl
xlat
jp
insl
inc
repz
mov
jns
and
in
adc
push
inc
push
dec
je
mov
outsb
jp
sarl
in
mov
xlat
test
out
or
out
push
sub
mov
pop
pop
mov
push
sub
mov
mulb
aas
pop
ret
or
rcrl
pop
push
pop
lahf
pusha
rolb
mov
aam
and
jae
sub
mov
push
mov
sbb
mov
dec
outsl
mov
fs
sub
add
jg
pop
sbb
fwait
or
lods
les
sub
sahf
mov
repnz
or
add
jecxz
xor
ds
cli
repz
fidivs
adcb
dec
shlb
movsb
jg
in
fsubrp
mov
das
sbbb
pop
or
mov
jae
enter
dec
fbld
add
inc
fucomi
xor
xchg
pusha
xor
sub
std
adc
mov
and
imul
ds
mov
fiadds
push
sar
ja
inc
add
adc
inc
into
cli
popf
mov
sbb
dec
inc
sbb
adc
fldln2
pcmpgtd
xor
call
lret
cs
jl
jecxz
cmp
lods
mov
repz
insl
nop
jecxz
lret
inc
jmp
and
ljmp
sbb
inc
push
jbe
idivb
dec
jmp
or
and
jl
cld
flds
sbb
inc
dec
or
shlb
jle
cmp
or
or
xchg
mov
jg
push
mov
lret
jne
pop
pop
sub
ret
rorb
addr16
adc
push
and
cmp
sub
arpl
cmc
mov
cli
in
mov
and
xor
std
shll
popf
fisubl
or
enter
or
fidivrl
cmp
cmc
arpl
test
loopne
test
cmpsl
mov
inc
pop
testl
or
mov
pop
and
cmp
xchg
cmp
jecxz
ret
xchg
mov
dec
mov
xchg
outsb
mov
jge
ud2
test
sub
mov
lcall
cmp
in
lret
dec
cmp
push
mov
out
adc
xlat
mov
cs
mov
out
sbb
xorl
cmpl
inc
rorb
pop
sub
das
in
mov
jl
pushf
cmp
mov
add
adc
adc
call
sub
push
push
add
xchg
jbe
bound
sbb
dec
xlat
cmpsl
jle
fs
aam
sbb
or
ljmp
lret
mov
lahf
icebp
loop
and
push
shlb
shrl
outsl
pop
adc
repz
mov
cmpsb
mov
call
jo
mov
cmp
sub
leave
movsl
ret
std
loopne
pusha
fwait
sbb
je
push
xchg
xor
add
in
orl
push
cmc
shr
lret
rcll
nop
jae
dec
mov
add
loop
icebp
lret
xchg
xchg
bound
ret
adcb
in
dec
xchg
out
stc
aad
pusha
adcb
xlat
loop
pushf
xlat
push
dec
inc
loop
std
mov
jo
push
or
es
lea
cmp
out
lock
js
shl
fs
inc
bound
int3
or
clc
cmpsl
or
cld
sbb
pop
call
adc
fnstsw
xorb
mov
jg
mov
mov
ja
push
into
pusha
mov
jo
int3
and
xchg
pusha
shlb
jnp
pop
cmp
out
mov
rorl
or
jl
xor
enter
mov
dec
cmc
call
daa
mov
cmp
int
pop
jno
fistps
loope
mov
add
fadds
mov
xor
sarl
fidivs
cli
jecxz
test
int3
xchg
rep
xchg
in
daa
insb
inc
mov
dec
cld
inc
xor
sub
adc
xor
sbb
add
mov
sub
mov
loope
push
ret
xchg
lcall
divl
out
pop
mov
scas
add
pop
push
scas
jg
fdivp
mov
imul
loope
cld
rcll
mov
mov
mov
xchg
shll
addr16
mov
dec
lock
cmc
mov
lahf
pop
xchg
pop
or
inc
dec
movsb
adc
sti
dec
xor
mov
dec
aas
call
pop
jge
test
je
pop
popf
arpl
mov
jbe
dec
in
sbb
arpl
inc
fsubl
insb
push
lret
xlat
push
mov
movsb
sub
lret
mov
xor
sbb
inc
stos
cld
loope
scas
fcomi
or
ds
xchg
push
mov
mov
shlb
std
push
ss
repz
rcrl
lock
stos
or
pusha
jno
out
add
data16
cmpsl
jp
push
sub
icebp
scas
xchg
dec
out
imul
push
mov
ds
or
and
adc
push
mov
pop
pop
jne
shr
dec
pop
lds
fildll
imul
jge
out
inc
inc
mov
leave
and
push
and
mov
mov
scas
pop
pop
ja
mov
inc
mov
push
pop
lods
dec
subb
mov
pop
test
inc
jnp
jge
in
sub
lret
mov
out
pop
xchg
out
out
mov
fisubs
mov
mov
test
mov
mov
push
ljmp
lcall
aaa
int3
pop
andl
test
in
xor
mov
add
hlt
push
xor
mov
jb
dec
outsl
mov
test
mov
or
and
and
iret
mov
out
mov
push
mov
je
int
stos
xchg
dec
jecxz
adc
in
sub
cltd
outsb
shrl
jne
or
sub
push
popa
daa
arpl
xlat
addr16
or
mov
add
dec
jg
into
xor
inc
inc
ljmp
pop
and
xor
movsl
sub
add
lods
stc
inc
mov
fisubrs
mov
and
cmpsl
outsb
ljmp
or
loope
lock
outsb
jo
mov
cmpsl
daa
sarl
enter
in
or
div
popa
and
and
adc
jno
pusha
andl
inc
sbb
test
gs
decb
add
cmp
xor
stc
sbb
jmp
mov
rorb
fwait
js
movsl
in
mov
cmc
push
jb
and
xchg
out
lods
mov
cwtl
jns,pn
rorb
cltd
mov
mov
push
in
xchg
pop
inc
pop
testb
clc
scas
mov
test
jns
xchg
out
lods
loopne
inc
test
dec
or
xor
pop
and
sbb
imul
stc
rorl
cmpl
jo
dec
adc
inc
or
mov
sbb
lock
add
xchg
pop
xchg
sahf
dec
cmc
jmp
dec
aam
jmp
xchg
mov
lahf
cmc
cltd
jno
xchg
popf
cmc
mov
clc
mov
inc
jg
xchg
cld
jle
test
dec
movsl
xchg
out
cli
pop
lret
sbb
pop
adc
mov
pusha
arpl
dec
aas
insl
insb
daa
imul
pop
in
cmpsl
pop
aaa
cmp
fidivl
enter
iret
inc
call
mov
aaa
pop
mov
or
dec
cmp
test
xchg
mov
aad
add
loop
ficoms
lock
sbb
and
std
test
jecxz
xchg
adc
loop
bnd
lahf
adc
call
imul
popf
and
xchg
mov
or
setbe
out
xchg
push
cmp
jne
call
cwtl
jg
inc
xchg
test
out
clc
inc
ss
dec
push
loop
jl
popa
mov
xlat
rcll
lcall
push
mov
sub
and
jb
in
sti
mov
aas
adc
pop
and
push
sbb
icebp
xchg
cmpsb
lods
and
sbbb
sarb
mov
into
inc
mov
dec
cmp
add
stc
ss
mov
mov
jne
out
xchg
sub
ret
mov
movsb
orb
aam
sti
je
lahf
out
fs
test
stos
cld
sub
mov
xor
dec
test
pusha
adc
pop
sub
ljmp
scas
in
cmp
xor
lods
sub
push
loop
pop
xchg
push
push
adc
repz
pop
lea
push
sub
les
pop
jno
imul
sti
add
pop
test
rolb
loop
xor
popf
mov
cmp
sbb
and
or
gs
out
adc
push
out
fstl
mov
or
js
aad
cmpsb
mov
push
int
js
subb
cmp
aad
int3
push
mov
dec
notl
mov
addr16
int
add
iret
sarb
test
fcoms
dec
neg
fildll
jecxz
clc
subb
popa
cltd
sub
and
out
fidivl
stc
rorb
lret
xlat
jecxz
movsl
cli
lds
mov
aaa
sbb
js
int3
sub
and
push
fisttpl
inc
inc
iret
negl
xchg
sbb
dec
fcmovu
iret
clc
dec
push
rolb
out
inc
dec
test
pop
xchg
push
insb
out
in
mov
ja
stos
inc
push
in
push
jmp
pop
ret
adc
mov
mov
lcall
mov
roll
fistps
rcrb
data16
test
arpl
sbb
mov
out
daa
loope
outsb
sub
loop
in
mov
repz
xor
mov
and
sub
test
fsts
pusha
mov
ficoml
sarb
es
xchg
xor
lea
popa
xor
dec
ds
pop
insl
pop
mov
sti
ss
mov
outsb
iret
sub
xchg
out
shlb
xchg
lret
adc
lahf
lock
cld
movsb
sbb
sbb
into
and
lock
adc
das
fbld
aad
cwtl
dec
movups
inc
inc
push
notl
inc
imul
lcall
out
push
xor
cmp
addb
adc
adc
lds
jbe
bound
add
sub
xor
mov
mov
push
aad
lock
jl
lcall
pop
ljmp
add
ror
adc
arpl
aas
fcmovnbe
iret
mov
out
mov
mov
xor
sahf
std
ss
mov
push
scas
jae
mov
jbe
scas
pop
inc
mov
stc
mov
inc
mov
repnz
jb
in
aaa
in
popa
xchg
adc
cmp
stos
and
lahf
jl
fmuls
mov
jg
sbb
sbb
movsb
jle
icebp
xorl
data16
clc
and
ljmp
mov
sbb
dec
in
pop
cmp
push
lcall
mov
xlat
push
inc
jl
mov
adc
and
jbe
mov
adc
cmpl
or
les
icebp
jl
jle
inc
ss
mov
xchg
cmpsb
sub
or
jne
dec
in
sub
ss
pop
ds
in
inc
xchg
xchg
jne
mov
mov
cmpsl
xor
mov
mov
das
inc
mov
iret
cmpsb
cmp
popf
push
aaa
pop
cmp
jge
out
in
xchg
popa
mov
shll
aas
jge
dec
sti
jge
ret
and
xor
push
popf
inc
sub
cwtl
push
mov
dec
test
inc
pop
xor
mov
mov
pop
xchg
sti
mov
add
aaa
push
pushl
bound
clc
gs
mov
jns
sub
sub
repnz
in
push
call
ljmp
and
ds
add
outsl
cmp
call
gs
test
xchg
lods
mov
mov
inc
lahf
cwtl
cmp
aam
push
and
ret
stc
pusha
lret
xchg
clc
rolb
pop
jno
outsb
arpl
dec
or
jg
je
inc
pop
xchg
in
ffreep
pop
mov
es
sub
test
sbb
aam
sub
jmp
dec
add
jg
repnz
jo
pop
out
std
lret
in
inc
or
lcall
scas
aaa
iret
imul
jns
enter
mov
wbinvd
xchg
adc
lret
enter
mov
jnp
call
test
mov
sbb
push
clc
sbb
leave
sbb
pop
sub
test
outsl
sbb
mov
out
outsl
cmp
push
nop
sub
push
notb
ret
cmc
and
cmp
repz
or
jmp
adc
sbb
shl
nop
inc
adc
cmp
lods
xchg
pop
call
cli
xor
sub
xor
xlat
mov
decb
mov
xor
xchg
pop
or
add
pushf
or
mov
push
movsl
push
loope
std
sbb
fucomip
sub
testl
enter
push
pushf
cmpsl
and
scas
xor
ret
stos
in
sub
mov
add
adc
fimull
test
inc
out
and
or
in
pop
jno
jmp
cmp
mov
mov
mov
call
add
lock
inc
dec
ss
xchg
fldenv
jmp
repz
pop
lock
jne
and
movsb
cmp
ret
or
inc
pushf
push
mov
dec
cmp
dec
das
pop
or
in
vandnpd
xlat
rcr
ficomps
out
les
into
mov
sub
scas
pop
popa
cmp
xor
bound
mov
imul
pop
imulb
es
ss
fnstenvs
xchg
xchg
or
jns
dec
out
imulb
es
ss
fnstenvs
cmpb
jmp
loop
imulb
es
aas
jmp
outsl
fsts
or
imulb
jns
dec
pop
ss
es
inc
cltd
mov
mov
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pop
cmp
shll
jecxz
jae
dec
sub
push
out
mov
inc
adcb
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
xorb
mov
adc
arpl
xor
push
adc
dec
in
inc
mov
lcall
cmp
add
push
sahf
jp
push
xchg
xor
and
fnstenv
imul
sub
or
xchg
push
dec
push
ret
stos
dec
add
out
push
data16
dec
or
push
add
jae
outsl
mov
xor
mov
stos
push
add
jge
dec
out
pop
sub
jecxz
and
jp
dec
repz
push
cmpl
xchg
pop
add
in
out
sbb
cmp
mov
jbe
cmpsl
rcl
stos
sub
dec
movsb
mov
adc
add
outsb
int
xchg
ffreep
mov
dec
push
jp
mov
mov
in
mov
repnz
ret
add
xor
stc
push
addl
jb
fidivl
pusha
lds
xchg
push
mov
jmp
and
shll
dec
fnstsw
aaa
cld
popa
lret
repz
ret
sbb
bound
xchg
jne
jmp
mov
stos
es
add
mov
inc
mov
xchg
inc
mov
nop
pop
out
xchg
jb
bound
mov
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
adcb
mov
adc
and
xor
ret
movb
jge
push
sbb
cmpb
pusha
loopne
rcr
jmp
sub
loope
add
xchg
mov
rcr
mov
sbb
fdivl
and
and
mov
out
popa
into
jnp
jo
in
dec
push
int3
push
scas
mov
or
loop
stc
pop
rorl
fbstp
int
arpl
jmp
mov
pushf
cmp
sub
in
sub
mov
scas
ret
mov
add
add
sti
jl
js
imul
in
push
and
sahf
adc
inc
into
adc
mov
sarl
mov
cmp
lock
lock
adcl
out
adc
shlb
sbb
push
jg
std
jnp
lea
in
push
cmp
cs
pop
cmc
repz
lods
cld
inc
cmp
sbb
inc
loopne
pop
test
nop
adc
popf
xchg
dec
adc
mov
xor
fsubp
not
pop
lret
insl
std
xor
mov
xor
jbe
rclb
cs
jne
mov
xchg
mov
clc
mov
popa
nop
sbb
add
and
push
sbb
xchg
scas
je
js
xchg
cmc
pop
add
ja
fimuls
jns
sub
inc
add
mov
xchg
aam
pop
or
push
out
out
and
xchg
xlat
push
and
sbb
leave
fistpl
pop
movb
popa
add
out
or
cmp
add
jmp
dec
jb
repnz
mov
jle
push
and
push
and
cld
mov
xchg
fwait
outsl
subb
push
mov
jp
shl
das
fiadds
ljmp
int3
fadds
call
cmpsb
lret
jo
pushf
or
sahf
test
inc
sbb
xlat
sahf
or
mov
fadds
adc
pop
inc
sbb
or
pop
popf
lcall
xchg
adc
ret
sti
fwait
sub
loope
out
add
or
mov
xchg
jne
stc
mov
cld
pop
cmc
stos
movsb
test
out
ret
add
sbb
ret
leave
add
xchg
mov
xchg
and
shl
je
idivl
mov
loope
xchg
rcr
pop
fildl
pop
cmp
fsubl
psubsb
shlb
lret
test
pop
lds
lret
popf
sbb
in
loope
popa
xchg
call
test
icebp
xor
dec
jecxz
add
sti
mov
movsl
arpl
int
pusha
enter
push
xor
pusha
mov
xor
movsb
dec
scas
cltd
mov
cmp
xor
cmp
cli
nop
movsb
and
fyl2x
mov
ds
and
xor
xchg
dec
stc
arpl
mov
hlt
ss
stc
dec
pop
xchg
inc
je
sub
pop
pop
jl
in
dec
mov
mov
fisttps
mov
add
sub
adc
mov
rcll
mov
cmpsb
add
jg
orl
cmpsb
or
push
jp
test
scas
lret
pop
jmp
cli
das
daa
sbb
and
dec
sahf
inc
pop
test
cltd
cmpsl
aad
outsl
xchg
xchg
sahf
xchg
clc
and
jmp
sti
test
sub
jg
leave
test
jno
js
sbb
fistps
lahf
rcrl
cmpsl
inc
jbe
sub
dec
stos
lret
fs
push
sahf
jecxz
xor
mov
out
mov
out
leave
call
mov
mov
nop
inc
sub
mov
ja
jge
std
sub
xchg
test
out
jnp
add
mov
sahf
insl
inc
adc
xchg
xor
mov
jne
daa
cltd
subb
out
int3
dec
adc
daa
jnp
or
xchg
repnz
out
pop
rcrl
push
lea
add
mov
loopne
mov
mov
lea
cmp
daa
and
lods
fucomip
idivb
lret
pop
mov
int
ret
adc
into
dec
add
mov
dec
push
dec
mov
pop
sbb
or
gs
adc
add
or
add
scas
or
sub
fidivl
pop
mov
sarb
add
and
inc
test
lods
pop
ds
and
add
jmp
shrl
lods
push
xchg
mov
in
push
jne
xchg
jnp
enter
out
mov
hlt
mov
out
mov
cs
dec
ror
outsb
out
sahf
xchg
mov
in
adc
fidivs
ficompl
out
lods
aaa
cmc
add
aas
pop
lret
jmp
lcall
adc
dec
or
mov
cmp
sub
inc
sub
jge
adc
sub
adc
nop
test
sbb
cltd
das
in
cmp
add
cmpsl
cmp
into
shll
rorl
push
inc
xor
cmp
fadds
add
push
push
pop
mov
pop
push
jae
pop
inc
xlat
cs
fldenv
jne
les
adc
ret
popa
mov
push
call
mov
lret
in
dec
fnstenv
mov
int
cwtl
mov
sub
jmp
or
rclb
lods
fbld
xchg
ret
cmpsb
mov
push
push
pop
jle
dec
xchg
or
cmp
cltd
popa
enter
xor
cld
add
push
inc
popa
fidivrl
pop
movsl
sub
xchg
in
dec
xor
dec
inc
mov
scas
jo
sarb
cs
jbe
jl
cmpl
movsb
jl
stos
lahf
mov
arpl
mov
loope
sti
scas
inc
clc
mov
or
stc
pop
orl
cli
repz
jno
ficoml
and
notb
test
pop
in
mov
xchg
loopne
daa
pop
xor
pop
les
int
mov
mov
fidivs
pop
pop
sub
cwtl
in
xchg
pop
sahf
sub
mov
insl
dec
pushl
flds
push
nop
test
or
pop
xlat
insb
movsb
sbb
stc
int
xchg
shrb
insl
sti
jno
inc
push
out
scas
xchg
xchg
arpl
mov
jmp
test
pushf
xchg
adc
ss
in
std
add
sbb
stos
and
fcompl
stos
int3
inc
je
mov
add
push
dec
jecxz
sbb
xchg
jbe
ret
leave
orb
ljmp
inc
xor
or
cmp
add
add
inc
leave
push
and
lods
in
paddsb
dec
dec
xchg
dec
test
mov
jne
cwtl
jns
mov
mov
sti
push
jge
add
cmp
mov
test
jmp
adcb
mov
ds
mov
aas
pop
mov
add
push
sbb
or
mov
and
dec
sub
xor
sahf
mov
xchg
std
xchg
jbe
mov
mov
imul
pop
xchg
lret
mov
add
sbb
cmpsb
aas
sbb
lea
xchg
sbb
lahf
clc
lds
jns
ret
push
or
inc
jo
lock
dec
jg
cltd
push
out
cwtl
or
hlt
inc
xor
mov
sahf
rcrb
xchg
subb
adc
and
or
mov
add
out
inc
lods
pop
icebp
mov
movsl
mov
xor
stos
pop
repz
xor
insl
arpl
mov
scas
sub
mov
push
or
pop
pop
xchg
cli
adc
fsubl
fwait
test
mov
xchg
or
sub
mov
popa
sarb
nop
xchg
inc
jne
pop
test
ljmp
call
or
and
sub
das
sub
lods
or
inc
fnstsw
in
aam
movsl
pop
mov
xchg
xchg
and
lahf
mov
dec
cltd
jb
push
inc
lea
jmp
lock
test
xchg
loop,pt
pop
pusha
pusha
ja
or
xor
imul
jno
xor
cmp
mov
aad
outsb
ret
sub
ret
or
mov
daa
jmp
in
decl
dec
or
ds
add
enter
jp
inc
aaa
loope
add
dec
dec
pop
and
iret
aaa
hlt
lret
nop
and
icebp
adc
jb
les
xchg
adc
pop
add
inc
lds
fcomi
enter
mov
xor
popa
cld
jecxz
in
lcall
jns
hlt
cmpsb
cmc
lds
mov
cmp
adc
xchg
mov
icebp
in
shrl
add
jns
pop
rcrb
mov
dec
mov
mov
nop
int
xchg
jnp
push
pop
lock
sub
pop
arpl
jecxz
adc
xlat
out
fs
sub
mov
imul
mov
xor
add
and
pop
jmp
dec
data16
mov
or
sbbb
dec
xchg
insb
lretw
cs
dec
dec
jle
adc
out
cmc
imul
xchg
shl
ljmp
cmp
jecxz
lds
bnd
cmp
mov
ja
mov
inc
pop
outsl
cli
push
int3
lret
mov
shlb
jae
lods
testb
xchg
push
repz
cmp
fisubrl
mulb
inc
or
inc
fildl
rcrb
push
add
stos
out
add
in
mov
aas
adc
shrb
sub
negl
adc
mov
aad
pop
mov
pop
stos
sbb
lret
pop
stc
lret
sbb
out
inc
ret
loope
loope
sub
push
sbb
mov
shrb
xor
cs
test
clc
mov
and
sub
jb
xor
dec
or
mov
fs
cmp
rcrl
out
ret
pop
xsha256
cmpsb
shr
cmp
xchg
subb
pop
rclb
or
jne
rorl
icebp
cmp
cmp
push
movl
std
cmp
aad
outsb
dec
sbb
int3
rcll
lock
mov
pushl
xor
or
fstpl
repz
mov
ja
sti
adcl
pop
pop
mov
lock
scas
adc
aad
sbb
call
inc
cs
movsb
hlt
or
sahf
fistpll
rclb
pop
cld
adc
add
add
iret
test
gs
int
mov
pop
pushf
pushf
dec
dec
daa
sahf
mov
xor
xor
add
pop
jg
mov
hlt
adc
push
std
sub
adc
mov
push
loope
mov
fldl
mov
adc
cltd
iret
pop
popa
fstpt
mov
repnz
fmul
or
mov
mov
cmp
idivl
fsts
and
lcall
jecxz
lcall
ljmp
fcmovnu
mov
jns
fisubrl
pop
ljmp
sbb
mov
movsb
jnp
fcoms
dec
dec
xchg
xchg
adc
outsb
sbb
sub
pop
jp
ljmp
shlb
push
lods
in
popa
int
sbb
adc
test
enter
add
imulb
ja
rcrl
adc
xor
ja
mov
fcomi
xchg
movsb
xlat
jb
ja
pop
call
jo
push
pop
aas
fisubrs
test
ja
and
outsb
xchg
pop
fadds
xchg
shrb
fs
xchg
mov
dec
add
mov
sti
xchg
aaa
mov
iret
sbb
jecxz
dec
mov
in
rcll
sti
test
cld
lods
popa
xor
fidivrl
pop
inc
in
jmp
movsb
adc
das
pushf
or
push
mov
xchg
cs
ret
outsb
xchg
push
int
stc
daa
fbld
pop
mov
fisttps
push
ja
cs
testl
add
push
sti
push
aam
ja
mov
or
sub
out
sbb
lods
jno
insl
adc
std
pop
xchg
shll
xchg
pop
fcmovnb
fs
sbb
outsl
xor
arpl
pop
adc
repnz
sub
hlt
xor
imul
mov
jno
stos
in
adc
lcall
cmpsb
pop
gs
or
pop
addl
cmpl
or
cmc
xchg
push
jp
fidivrs
sbb
cmp
ljmp
adc
mov
mov
int3
xor
lock
jge
aaa
stc
jo
test
xor
jb
mov
or
jnp
shrl
cmp
dec
std
ja
sbb
sbb
bound
push
mov
pushf
in
ficompl
test
and
mov
add
pop
testl
scas
push
mov
lock
lds
sbb
inc
lret
stos
int3
fldcw
cmp
or
test
jnp
lods
mov
int3
stos
add
cmpsl
int3
lods
dec
xchg
lea
sbb
dec
adc
cli
popf
push
fsubl
sbb
movsl
pop
sahf
adc
ret
add
in
cmp
push
hlt
cmpsl
jp
pusha
inc
rolb
adc
fmuls
fmuls
fstpt
fdivrl
dec
pop
cmp
mov
add
testb
xchg
loop
push
dec
cld
mov
pushf
push
adc
arpl
mov
or
cmp
insb
mov
iret
jbe
movsl
mov
xchg
jb
int3
xchg
lods
push
inc
push
hlt
shlb
jmp
mov
sub
mov
dec
mov
shlb
sti
mov
sub
shrb
cmp
dec
repnz
push
stc
test
repz
fbld
add
adc
ljmp
mov
das
mov
add
jecxz
sti
pop
nop
sbb
sub
insl
cmp
rorl
cmpxchg
cmp
or
or
daa
jne
xor
lret
mov
aas
sub
decb
push
inc
adc
ja
push
or
jl
outsb
cs
sub
dec
leave
inc
cs
sub
in
fbstp
mov
stos
dec
xor
neg
addb
ret
pop
inc
test
mov
and
lea
out
imul
addr16
ljmp
addr16
dec
add
dec
dec
xchg
mov
jnp
lds
das
cmp
jo
mov
ljmp
cld
cmp
push
in
in
add
stos
cmp
push
sahf
cld
pop
out
idivl
cmp
adc
adc
lods
cld
cmp
enter
fcomip
mov
mov
out
std
sbb
scas
sub
or
mov
mov
sub
popf
or
rorl
dec
xchg
jbe
sbb
dec
push
dec
xchg
fsubrl
jbe
jns
notl
or
lods
das
mov
sbb
sub
pop
mov
fimull
dec
pop
aam
jb
and
enter
stc
push
pop
loope
inc
data16
loopne
pop
test
jge
mov
jmp
mov
sub
lahf
jnp
jle
push
inc
mov
xor
jmp
mov
movsb
scas
pop
mov
jg
lods
out
rolb
pop
iret
mov
inc
or
movsl
stc
dec
push
push
clc
jb
mov
or
out
jp
add
dec
stos
out
pop
jge
cmc
mov
lea
mov
adc
inc
imul
dec
mov
dec
mov
add
push
ret
sbb
xchg
ffree
leave
mov
inc
or
mov
pop
mov
ficompl
fwait
push
xor
push
movq
aaa
adc
imul
mov
jb
pop
clc
cmp
adc
mov
sub
jmp
clc
pop
jp
out
push
xor
or
push
gs
pop
mov
mov
push
inc
jmp
dec
and
mov
mov
mov
out
sbb
bound
mov
inc
cmc
test
pop
inc
aam
pushl
pop
fld
push
mov
cmpsb
push
cmp
cmp
cld
dec
aas
jno
arpl
mov
push
mov
outsl
and
popf
pop
push
push
test
testb
adc
pop
add
push
cmc
and
xchg
popf
xor
aad
jb
mov
add
ftst
push
xchg
push
rorb
or
and
jmp
test
mov
shrl
jmp
psubusb
gs
sbb
adc
pop
out
inc
dec
mov
sbb
dec
sub
fsubrl
data16
out
pushf
sbb
fwait
mov
inc
call
mov
push
ljmp
inc
push
test
push
and
sub
cmp
mov
and
and
jle
xlat
xor
in
scas
aad
mul
push
mov
dec
mov
out
enter
adc
pop
adc
push
aam
sbb
pop
lock
sub
cmpsb
adc
in
jae
mov
daa
and
dec
dec
sbb
test
out
mov
jnp
pusha
ret
inc
push
mov
shlb
mov
cmp
shrl
nop
jb
add
sbbl
add
pop
cmpsl
inc
scas
or
outsl
test
sarb
lods
cmp
mov
or
add
pop
push
adc
test
jae
outsl
xchg
push
out
push
ret
clc
mov
push
aam
add
out
adc
add
sbb
xor
push
mov
mov
movsb
add
xor
inc
out
hlt
shlb
scas
push
cltd
call
hlt
aad
and
out
movsb
dec
pop
and
ljmp
or
dec
aad
add
mov
jl
sub
jne
leave
adc
sahf
inc
movlps
stos
push
das
xchg
or
test
sbb
push
xor
test
mov
cli
aaa
test
loopne
add
mov
bswap
mov
out
hlt
and
mov
fcoms
frstpm(287
jns
jb
lret
lahf
pushf
sub
jle
mov
or
in
rcll
push
outsb
lods
or
je
mov
xchg
out
pop
fisubs
lods
cs
cld
mov
push
dec
and
cltd
mov
daa
sbb
fcomps
subl
lods
sub
pushf
add
adc
jp
cmp
popa
dec
push
mov
mov
adc
push
fldcw
insl
pop
in
push
push
mov
out
xchg
inc
imul
adc
fisubl
shrl
repnz
inc
mov
cmp
call
popf
jbe
inc
jne
adc
es
addb
push
enter
ret
call
sahf
mov
mov
mov
pop
lahf
fwait
and
lock
or
mov
or
lods
push
movsl
jbe
mov
loopne
arpl
xchg
inc
add
fwait
rclb
push
into
jp
cs
mov
addl
sbb
daa
xlat
and
sahf
push
mov
push
movsb
or
cmp
and
and
push
jp
ja
mov
daa
into
in
xchg
cmp
addr16
or
add
xor
or
pop
and
mov
popf
sub
mov
fnsave
rcr
mov
jnp
push
outsl
test
lods
jae
rol
mov
jl
cmpsb
mov
inc
sbb
xor
jae
sbb
jns
ljmp
xor
mov
xchg
jge
adc
mov
mov
pop
xlat
hlt
or
cmp
push
pushf
js
rorl
xor
sbb
mov
cmp
fildll
sbb
add
iret
repz
in
add
pop
rcl
cwtl
mov
sbb
out
adc
ss
dec
aad
pop
push
sub
lcall
push
mov
inc
aas
xor
mov
fdivl
cmp
or
mov
mov
dec
scas
mov
in
or
add
cmp
test
mov
fmul
push
lods
inc
inc
lock
xchg
sti
mov
dec
jae
das
cmovbe
sbb
mov
sub
push
int3
popa
add
out
sbbl
or
add
test
movsl
in
mov
mov
lea
mov
sbb
sbb
dec
dec
loopne
movsb
add
bound
ret
mov
push
es
pushf
scas
push
sbb
mov
rcrl
frstor
test
mov
xchg
je
js
mov
movsb
arpl
test
ret
test
cli
sub
sub
lahf
dec
int3
imul
push
pop
jg
out
lds
fwait
cltd
es
orl
mov
mov
mov
out
mov
mov
std
les
loop
cli
adc
fistpl
stc
repnz
or
ds
mov
or
and
sbb
jl
fucomi
mov
jae
lea
jle
inc
add
add
mov
test
std
loope
jo
outsb
pop
pop
and
roll
adc
das
mov
repnz
shl
sub
ror
sbb
sahf
jle
in
jmp
and
cmpsb
pop
and
insl
in
xchg
lock
inc
push
jmp
test
shrb
and
push
ret
push
flds
xor
cmp
jo
addb
sub
subb
iret
out
js
pop
repnz
das
xchg
movsb
add
push
pusha
lods
add
loope
stos
les
pop
ror
add
pop
adc
scas
lret
adc
mov
icebp
push
std
mov
and
ret
cmp
stos
xchg
push
jl
jmp
pop
scas
jle
repz
xor
push
je
loop
mov
lea
xchg
lahf
dec
mov
xor
dec
jae
add
pop
std
xor
cwtl
cmc
cwtl
das
lock
in
fiadds
pop
mov
scas
or
jp
xchg
out
sbb
mov
sbb
jle
roll
fnstcw
jmp
push
pop
hlt
pushf
lcall
add
inc
jnp
rorb
out
mov
adc
xor
xor
push
pop
inc
push
xlat
ds
jge
aam
jo
mov
cmp
mov
mov
shrw
cmp
xor
sub
ret
cmpl
adc
stos
xchg
cmpsl
sub
movsb
adc
les
test
ss
sub
pop
push
push
scas
ret
scas
jecxz
or
loop
sbb
test
sti
cltd
xchg
push
sub
xlat
cltd
inc
popf
pop
fwait
loopne
dec
and
je
fnstcw
inc
out
mov
or
pmuludq
dec
add
test
mov
mov
stos
mov
lods
add
rol
and
scas
xchg
lret
test
movsb
ja
jo
or
arpl
push
in
xchg
jge
pop
pop
xchg
xchg
push
shr
cs
pop
and
pushf
and
popa
xchg
je
xor
and
push
jne
das
mov
cmp
xor
pop
repnz
cwtl
es
fwait
dec
movsb
xlat
inc
movzwl
das
shll
pop
fwait
shll
repz
addl
mov
adcb
mov
adc
and
xor
ret
add
xor
and
push
addl
mov
adcb
mov
adc
and
xor
ret
add
push
addl
mov
adcb
cmpsb
jae
add
adc
add
xor
ret
sarl
adcl
and
mov
mov
mov
in
or
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
getsec
daa
mov
cmp
add
ja
inc
pop
stc
ds
das
xchg
dec
out
xlat
outsl
lahf
aaa
daa
mov
ja
call
aas
pop
mov
cmpsl
pop
xchg
das
xchg
dec
out
xlat
outsl
lahf
aaa
daa
mov
ja
call
inc
pop
mov
test
dec
out
mov
add
jg
pop
push
push
out
bound
fmul
sahf
push
or
xor
call
fcomi
sub
lret
scas
lret
sbb
shl
pop
lcall
andb
ja
xchg
xchg
sbb
mov
mov
into
add
jg
out
movsb
lcall
into
rcl
loope
out
push
sub
jb
add
aam
popw
cmp
leave
pop
ds
addr16
frstor
bound
ja
inc
mov
out
cmp
jp
outsl
push
daa
out
xlat
nop
cmp
sub
jbe
scas
pop
pop
sub
loopne
fxtract
dec
outsl
mov
mov
xlat
outsb
rol
aaa
daa
mov
ja
call
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsl
scas
jmp
lret
rclw
loope
pushf
adc
adc
mov
repz
mov
push
int3
inc
lret
jb
pop
mov
ds
and
fiadds
dec
loop
cltd
cmp
das
xorl
fsubl
bound
push
out
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsl
lahf
aaa
daa
mov
ja
call
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsl
lahf
aaa
mov
cli
std
lds
add
rorl
stc
push
add
mov
jae
sub
iret
negb
sbb
sbbb
mov
mov
adc
and
pop
cmpsb
fnstcw
fidivrl
daa
xchg
add
out
mov
loop
xchg
pop
insb
ss
out
idiv
adc
jmp
dec
mov
mov
and
adc
pop
jmp
xchg
clc
test
mov
aad
lret
pop
inc
push
jnp
cmp
jmp
and
adc
push
sbb
in
aaa
ljmp
mov
pushf
sbb
leave
cli
jl
mov
popa
gs
stc
icebp
push
imulb
aas
jmp
fwait
inc
movswl
push
jg
fdivr
dec
add
inc
fsts
mov
mov
pop
cwtl
push
mov
xchg
jae
cld
xchg
test
mov
push
mov
push
or
ficoms
ret
push
cli
rcrb
and
add
ret
cmp
pop
repnz
ret
negl
cmp
scas
sbb
sbb
ret
sub
fcoml
fmull
adc
sti
lods
cmp
cmp
inc
lds
xchg
scas
mov
pop
fwait
je
and
mov
xor
test
ds
push
lcall
and
jbe
inc
insb
js
cltd
rolb
pop
movsl
lcall
dec
xor
loope
adc
sbb
fisubl
fimull
cmp
loop
lcall
pop
add
dec
aam
xchg
cmp
adc
and
cmp
js
jo
jne
stos
ds
mov
jle
popa
adc
add
data16
insb
jns
adc
test
jno
subb
loop
sbb
xchg
stc
cmp
add
adc
mov
ret
jle
std
or
inc
mov
mov
lea
jmp
add
mov
dec
leave
cmpb
cmp
dec
or
jg
outsb
dec
mov
push
addl
cmp
or
adc
xorb
cmp
push
es
jg
jbe
outsb
and
push
imul
push
adc
jecxz
inc
out
sbb
in
fcoml
aad
inc
xabort
pop
mov
xcrypt-cfb
cmpsl
mov
sub
mov
nop
or
cmp
sbb
pop
cmp
pop
sub
sub
jp
push
adc
sbb
lret
fdiv
jo
sbb
iret
rorb
xchg
sub
jp
sub
or
xchg
sahf
into
xchg
add
pop
xchg
jnp
addr16
cmp
adc
test
add
push
aad
icebp
xorl
inc
scas
jl
out
repz
rclb
mov
lock
add
movsb
scas
jecxz
xchg
xchg
lcall
xchg
movsl
cld
xor
sub
push
shlb
mov
es
jmp
ljmp
lret
mov
mov
outsl
and
add
dec
mov
sbb
push
stc
or
mov
cmp
sbb
insl
xor
add
sahf
pop
jmp
mov
popa
scas
mov
adc
fmul
cld
aam
push
mov
sbb
jle
push
mov
mov
lcall
mov
imul
cmp
mov
pop
jle
pminub
dec
das
out
xchg
sbb
xor
fistpll
in
popa
mov
or
push
arpl
lcall
add
jmp
cltd
xlat
insb
xor
pop
fisubs
xchg
enter
lds
cmp
imul
ficoms
ret
add
xor
negl
ljmp
xor
sub
es
cs
aaa
mov
inc
loop
sbb
fcomps
sub
pushl
jmp
aaa
fmull
iret
push
inc
fdivp
fbld
cmp
lcall
sub
dec
orb
lahf
adc
sahf
je
mov
inc
out
and
mov
arpl
cs
or
loop
cli
ret
pop
jbe
inc
mov
xor
cmp
mov
xchg
stc
or
or
ja
lods
cltd
fsubs
mov
aam
mov
lret
mov
pop
xchg
outsl
lahf
jnp
arpl
into
std
jne
mov
mov
popl
rcrb
mov
sub
jbe
jmp
push
push
filds
jecxz
cmp
push
dec
fmuls
add
in
push
xlat
into
inc
or
lea
mov
xor
das
push
je
xchg
mov
sub
or
fisttpll
mov
into
mov
andl
jecxz
int
les
cltd
pop
push
ss
ret
iret
cld
push
adc
out
addl
mov
leave
dec
daa
mov
cmp
cmp
clc
sbb
divl
sub
xor
ja
xchg
cmpsb
cs
jmp
dec
lcall
fcom
add
ljmp
leave
xchg
mov
call
sbb
arpl
xchg
push
enter
das
xchg
mov
lds
xor
sub
rcr
push
mov
mov
jne
pop
mov
aam
sub
add
out
sahf
dec
ret
mov
mul
inc
lret
clc
or
and
mov
loopne
int
cld
cmp
lods
call
stos
or
or
lea
clc
mov
and
xor
decl
cmp
xor
lcall
sbb
mov
jle
pop
movsl
or
cmp
iret
mov
lock
mov
mov
call
mov
lcall
hlt
fsubs
popa
test
rcr
xor
push
mov
adc
cld
jbe
shl
jae
sbb
push
and
insb
cmpsl
rcrl
sbb
out
and
inc
bound
adc
push
mov
imul
in
aad
js
dec
pop
es
and
mov
jge
xchg
lds
or
pop
inc
xchg
lahf
scas
in
loop
pop
je
mov
int
sti
jo
mov
mov
les
jmp
in
push
sbb
sub
mov
pop
mov
loop
jae
and
test
add
cmp
gs
push
xchg
mov
test
out
ficompl
xchg
jl
push
aas
sub
das
pop
add
xchg
fwait
divb
sub
pop
jg
mov
shl
cmp
xchg
movsl
frstor
mov
sub
mov
push
add
insl
nop
ss
xor
mov
fcomp
adc
std
push
add
pop
push
int
fdivl
nop
lret
sbb
dec
push
jp
bound
mov
inc
iret
lock
inc
push
aas
jecxz
mov
into
xor
aas
sub
outsb
xchg
sbb
xor
mov
mov
and
test
sbb
inc
inc
addr16
cmpsl
sub
loope
or
push
mov
jno
ret
pop
cmp
sti
repnz
push
scas
push
push
mov
and
dec
mov
jnp
pusha
loop
and
popf
cmp
out
add
mov
cmpsb
js
mov
and
adc
fucom
or
add
mov
ret
test
loope
fcmovbe
notl
jo
stos
js
jo
leave
lods
out
ja
sub
adc
data16
jns
fwait
mov
nop
or
enter
cld
mov
movsl
or
inc
sbb
ja
jns
shr
jnp
mov
rol
pop
or
or
in
pop
dec
push
mov
or
and
inc
cmpsb
inc
sub
pop
sbb
lret
mov
fwait
sub
leave
cs
rcrb
arpl
or
mov
stos
cmp
pop
mov
or
cmp
pop
and
dec
sub
jo
or
cmpsl
das
mov
pusha
mov
push
fildll
fldcw
in
mov
dec
mov
xchg
xor
mov
inc
inc
sub
inc
mov
or
pop
push
pop
pop
push
pop
in
popa
jb
iret
rcll
shlb
aaa
jbe
lahf
sarl
push
or
sub
add
inc
push
and
loope
mov
loop
push
imul
ret
sbb
aaa
adc
stos
call
insl
push
addr16
out
xchg
sbb
shlb
xor
andl
fimull
scas
les
inc
ss
cmp
cmp
and
mov
mov
cs
sbb
push
dec
push
int3
xchg
iret
cld
scas
mov
ja
or
and
adcb
and
mov
push
loopne
outsl
mov
addr16
xor
fldcw
push
pop
hlt
and
pop
xchg
lds
addr16
cmp
xlat
pop
jecxz
sbb
sub
adc
in
xchg
ss
cld
repz
movsb
ret
pop
out
movsb
dec
add
test
add
xor
out
and
imul
lret
mov
jne
inc
dec
adc
lods
adc
daa
iret
and
and
mov
mov
sub
nop
sbb
adcl
dec
add
sbbl
and
xchg
jne
xor
in
xor
mov
aaa
cmp
js
and
adc
mov
mov
cmp
mov
push
and
nop
ds
dec
or
and
adc
dec
jnp
mov
arpl
adc
loop
cmc
cld
iret
jl
mov
sbb
cmp
sub
add
sub
jo
fadds
rcll
test
jno
movsb
or
jecxz
shlb
sbb
lock
cwtl
imul
pop
or
mov
xchg
mov
std
aaa
sbb
out
cmp
mov
inc
fstpl
xor
pop
fldenv
ret
fwait
popf
fdivrs
mov
sahf
and
add
loopne
cs
popf
je
into
test
out
jo
mov
leave
mov
adc
sub
push
jp
pop
mov
sbb
data16
xorb
inc
mov
scas
hlt
or
lret
mov
xor
rcpps
pushf
les
shll
mov
pop
or
inc
inc
and
sub
pop
sbb
lahf
lret
leave
rcrl
mul
cli
dec
test
es
xor
loop
jl
push
test
xor
in
or
and
sbb
sbb
xor
je
sbb
mov
push
out
or
rorb
fdivl
insl
push
xchg
pop
mov
push
stos
shr
lcall
movsb
adc
cmp
mov
fs
xor
dec
ljmp
stc
sub
imul
in
xor
push
jg
xchg
in
jnp
jne
leave
ja
dec
nop
xchg
fldcw
loopne
testl
xchg
imul
pop
or
xor
or
movsb
test
mov
mov
jl
push
test
movsl
movsl
and
mov
add
mov
dec
lock
subb
add
xchg
sub
std
pop
cmpsb
rorb
inc
cmpsb
scas
lods
push
jno
pop
sub
jle
rcl
mov
cli
scas
iret
pop
mov
xor
pop
pop
test
add
jno
pop
fstsw
pop
pop
out
daa
shlb
pop
in
addr16
or
and
jl
aad
mov
notb
xchg
fistps
xchg
dec
sbb
fs
mov
cs
inc
rcll
stc
add
shll
and
insb
xchg
mov
and
sbb
cli
addr16
subb
xor
cmp
ret
lods
loop
ljmp
lret
movsb
or
push
adc
pop
daa
mov
xchg
int
jg
jb
lods
gs
push
out
out
jne
mov
add
in
xchg
fs
jb
enter
lods
stc
cmp
push
pop
lods
aas
aas
popf
ds
or
push
out
rorl
push
inc
out
stos
or
and
xchg
dec
xor
xor
xchg
dec
out
stos
cmpsl
imul
xchg
xchg
out
std
pop
pusha
fldl
mov
ds
test
hlt
aaa
sbb
cmp
xor
arpl
cwtl
movsb
iret
jl
sub
jle
nop
jg
sub
mov
mov
scas
xor
inc
push
jae
xor
je
lods
mov
pop
and
sub
frstor
jb
test
jae
imul
mov
jp
fstpt
inc
xchg
mov
xchg
jg
ds
mov
repnz
sbb
cmc
cmp
ja
scas
jne
out
pusha
repnz
pop
dec
dec
gs
xchg
dec
sbbl
adc
adc
cmp
roll
inc
jno
fs
out
aam
push
sbb
mov
inc
mov
pop
data16
adc
mov
sub
cmp
in
fldcw
std
xchg
icebp
jbe
lcall
dec
jle
mov
insb
mov
andb
mov
int
fs
xor
in
cltd
add
jecxz
mov
std
rorb
push
pop
clc
outsl
bound
sub
js
ficoml
pop
cmp
xlat
jns
push
mov
inc
adc
push
pop
push
and
push
add
adc
xor
dec
adc
jno
ljmp
inc
lea
push
fadds
mov
lock
movb
shll
dec
and
inc
outsb
mov
jnp
mov
xor
cltd
add
xchg
pop
push
sti
adc
int
daa
shrl
mov
les
sub
loopne
xchg
sub
jl
fwait
decb
sbb
fistpl
cmp
and
push
inc
mov
jle
imul
pop
sbb
lcall
lods
jl
push
shr
pop
lahf
xchg
mov
adc
cwtl
cmp
mov
push
sbb
push
cmp
or
jbe
jmp
adc
xchg
jecxz
and
add
shll
jle
scas
daa
mov
sahf
xor
cmp
out
inc
fisubs
push
sbb
repnz
inc
rorl
mov
rclb
sbb
test
xchg
lods
jl
mov
jge
dec
jecxz
mov
ja
inc
jge
inc
fidivrs
stc
sbb
or
cld
mov
sbb
adc
sbb
aas
movsl
test
outsb
jne
ds
cmp
hlt
xchg
xchg
mov
or
mov
xchg
xchg
push
add
stc
js
popf
es
sbb
push
fsubl
cmp
sbb
inc
repnz
fadds
shrl
xchg
scas
icebp
push
mov
inc
fldt
dec
mov
adc
fld
imul
add
mov
sub
lds
subb
out
popf
vpaddq
push
int3
mov
mov
lods
or
ja
or
mov
push
cli
inc
popa
insb
inc
imulb
popa
cmpsb
shl
jl
aam
xor
cmp
pop
jns
icebp
xor
or
inc
cltd
loop
dec
call
mov
inc
into
movsl
shl
dec
dec
push
bound
call
sub
lcall
loopne
push
shll
sbb
adc
pusha
dec
fadds
cmpsb
out
fwait
adc
mov
push
mov
nop
sbb
test
push
jle
add
imul
ret
addr16
out
mov
mov
bound
loop
xchg
sbb
ret
stos
rcrb
fistpl
lea
sbb
mov
push
push
out
aam
dec
fwait
pop
mov
cmc
imul
sarl
inc
jne
push
sti
push
bnd
cmp
jbe
test
mov
adc
shrb
cwtl
cmp
outsl
xor
test
gs
cmp
test
cmp
scas
les
in
stos
or
cmp
sarb
jno
roll
push
test
add
push
stc
xor
dec
dec
xor
add
lea
imul
mov
xor
jns
bound
sbb
jge
cmp
push
sbb
push
stc
inc
fsubrs
in
in
nop
adc
incb
xchg
sub
lods
outsb
ret
pop
push
mov
add
lds
cltd
jbe
lods
int3
mov
sbb
jbe
mov
insl
sbb
in
repnz
icebp
sub
aaa
pop
call
mov
cs
cmpsb
out
repz
dec
cli
ljmp
pop
xor
or
cmpb
into
fmuls
loopne
fwait
aaa
imul
fiaddl
mov
adc
lret
out
fisubrs
scas
add
outsb
push
adc
iret
into
lahf
imul
cmp
jne
out
jns
jo
mull
adc
js
add
or
jnp
int
mov
int3
mov
push
insl
xchg
ret
mov
push
mov
repnz
or
mov
lcall
aam
push
fidivrs
mov
insb
shr
arpl
sub
bound
jnp
dec
xlat
adc
popa
push
or
imul
loopne
sub
jl
in
jne
fistps
xchg
sbb
lahf
mov
cmp
inc
xchg
hlt
mov
dec
dec
mov
push
and
push
pop
hlt
sahf
dec
shll
cld
in
jle
push
xchg
inc
repnz
xor
sub
inc
pop
push
sbb
fcompl
inc
in
push
mov
out
add
js
push
fs
push
jmp
xchg
popf
popa
push
fdivrl
out
adc
pop
dec
int
pop
cmp
sub
push
in
pop
out
imul
js
fwait
pop
cld
mov
negb
and
bound
push
scas
popf
push
sti
mov
dec
cwtl
stos
ss
sti
add
dec
jmp
sub
leave
push
repnz
push
xchg
mov
out
adc
add
mov
cmova
insl
inc
and
adcl
fldl
sub
cs
push
cmp
std
mov
mov
xor
or
cmp
pop
popa
mov
pop
mov
fwait
loop
add
xor
mov
pop
out
call
mov
mov
call
push
push
stos
push
scas
in
mov
test
jae
push
in
jge
push
fsubp
test
lret
or
movsb
push
cwtl
enter
notb
dec
xchg
lcall
pusha
mov
mov
pop
sub
xchg
cwtl
jns
test
jecxz
xor
ljmp
jmp
and
inc
cmp
sub
add
loopne
dec
sbb
dec
add
inc
dec
cmp
and
cmp
mov
pop
dec
movsb
sbb
shll
sar
jno
scas
push
sub
fwait
outsl
fisubrl
jae
movsl
stos
in
cli
cltd
addr16
jg
in
and
cmc
add
push
popa
mov
fstps
insb
add
jb
dec
xchg
scas
lods
mov
xor
test
xchg
popa
xlat
fisubs
cld
movsl
or
icebp
loope
jnp
add
std
push
mov
jne
and
sbb
daa
jg
xor
daa
cld
inc
stc
lock
test
sub
pop
adc
lock
lahf
aaa
lcall
sbb
lret
call
scas
aas
push
xchg
jg
popa
je
inc
mov
in
mov
and
dec
lcall
movsb
adc
mull
mov
cmpsb
pop
jae
sub
push
inc
cmpsl
es
pushw
push
cmp
sbb
out
loope
xorb
jo
jg
sbb
das
lret
adc
mov
rorl
xor
adc
pop
inc
mov
enter
cmp
out
mov
push
mov
testl
xchg
xor
ja
add
movsl
and
out
add
pop
lret
sbb
mov
add
jl
add
loopne
rcll
fstps
mov
xlat
xchg
outsl
adc
shlb
mov
addb
cmp
push
mov
ret
add
or
outsl
clc
idivb
outsb
lcall
mov
sub
dec
loopne
mov
int
lds
test
out
aad
add
jo
int
outsl
push
push
mov
adc
inc
pop
nop
push
out
fmuls
cli
iret
cli
fisubs
mov
aas
jne
shrl
ja
andb
jge
jecxz
xchg
xchg
mov
xchg
xor
cld
jbe
movsl
add
jecxz
and
jl
mov
pushf
xchg
scas
jg
pop
inc
adc
pop
and
imul
sahf
push
add
inc
cwtl
jmp
and
jo
gs
cld
inc
in
inc
or
js
in
leave
daa
movsl
pop
or
or
iret
outsb
mov
cmp
dec
lea
lret
sbb
mov
mov
jbe
lfs
xor
lret
xor
daa
cmp
push
je
hlt
out
jo
incb
push
xor
or
or
jnp
pop
sbb
push
rclb
lods
div
mov
frstor
or
push
xchg
sbb
fstl
sti
mov
inc
cwtl
cmp
mov
or
popf
push
andl
ljmp
push
sbb
add
sub
jle
sbb
cmpsb
push
scas
inc
jae
and
stos
xchg
ja
adc
mov
scas
std
push
cmpsl
cwtl
xchg
sbb
scas
loopne
sbb
aaa
pushf
cmp
mov
xchg
mov
mov
ror
and
push
in
loopne
cmc
pop
fdiv
mov
add
pop
jne
sbb
je
mov
inc
xchg
sub
in
lock
int3
lret
leave
xor
aam
sub
movsb
mov
je
adc
movsl
insb
jge
mov
jmp
xchg
addl
aas
push
cltd
adc
inc
add
cmc
test
mov
push
add
add
rolb
cmp
dec
lret
fistpl
mov
xor
pop
and
test
and
iret
fcomps
add
lods
fsubrs
pop
mov
xchg
mov
mov
jle
jne
inc
jp
gs
testb
call
jnp
inc
clc
mov
xchg
xor
jecxz
movsl
out
xor
or
pop
and
xor
pop
jo
fisubs
add
lahf
push
enter
int
ror
push
arpl
lea
dec
push
cmpsl
xchg
jnp
push
shlb
push
dec
xchg
xchg
mov
cmovnp
dec
or
in
pop
daa
sbb
aas
mov
pop
sbb
sbb
lds
pop
out
dec
xlat
and
nop
pop
scas
pop
fbstp
call
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsl
lahf
aaa
daa
mov
ja
call
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsl
lahf
aaa
daa
mov
ja
call
inc
pop
mov
cmpsl
aas
xchg
das
xchg
dec
out
xlat
outsb
sahf
aaa
mov
mov
ja
call
inc
pop
mov
or
sub
sbb
int3
int3
int3
int3
fidivrl
xchg
cli
mov
cli
mov
pop
add
jp
push
sbb
push
cmp
jb
or
cli
mov
mov
mov
add
push
add
sbb
or
ficompl
ljmp
cli
stos
call
or
xor
imul
or
mov
cwtl
cmp
sub
push
xor
cmp
sbb
sahf
push
push
fbstp
cvtpi2ps
mov
push
sub
push
fs
divl
out
xor
pop
pop
cmp
aas
and
adc
les
push
pop
xchg
rolb
push
adcl
ljmp
mov
lcall
push
pop
in
test
bound
and
pop
rclb
loop
cs
mov
push
jecxz
xchg
sub
bound
lea
mov
dec
xor
and
add
push
xorb
and
adc
daa
cmp
lret
mov
test
ret
mov
sbb
jp
push
sbb
inc
cmp
push
pushf
out
xchg
lahf
mov
ret
mov
sbb
push
ja
pop
jg
arpl
jle
jle
fsqrt
mov
mov
mov
loopne
xchg
jae
push
das
jno
xor
dec
push
sub
mov
scas
notl
scas
mov
mov
add
jp
push
sbb
push
cmp
jb
or
cli
mov
mov
mov
add
jp
push
sbb
push
cmp
jb
subb
or
inc
pushl
jmp
lea
cmp
fiadds
shlb
repz
mov
lock
mov
shl
cmp
repz
into
pop
test
fdiv
loop
pushf
mov
inc
jns
in
rcll
dec
repz
push
xchg
mov
lock
nop
push
stos
push
mov
fcom
mov
push
xchg
testl
jl
ljmp
mov
mov
push
dec
std
out
dec
jmp
jns
cmp
ljmp
fwait
cmpsl
add
imul
push
add
jo
cwtl
jg
out
in
dec
inc
ja
jl
dec
decb
mov
test
leave
push
pop
push
in
es
jnp
pop
push
inc
hlt
ret
ds
add
shrb
mov
sti
aad
mov
jnp
dec
mov
mov
cmp
loopne
xor
addr16
mov
add
xorl
fsts
xchg
enter
aam
mov
inc
addr16
mov
jo
mov
scas
jo
add
add
jp
push
and
orl
pop
cmpsl
adcb
mov
push
test
pop
cld
movsb
insl
mov
sti
add
add
scas
dec
cmp
clc
iret
push
sbb
out
cmc
push
fnstenv
jbe
jmp
pop
pop
xchg
push
mov
push
jp
sbb
mov
dec
stos
fmull
fildl
fistpll
jg
mov
fnsave
data16
mov
in
popa
cmp
addl
lret
push
mov
and
or
jle
sbb
cmc
pop
sbb
mov
jecxz
add
push
cmp
and
stos
dec
jge
insb
mov
sub
jb
out
xchg
dec
pop
cmp
subb
xchg
icebp
imul
sahf
sbb
lock
sub
sbb
mov
out
repz
js
std
fwait
dec
std
pop
lret
xor
push
xchg
push
dec
js
dec
ret
dec
pop
in
fsubs
cmp
sbb
pop
ror
call
add
fbld
xchg
rcll
and
test
in
stos
add
lea
pop
inc
ret
dec
aam
iret
jmp
gs
jecxz
in
and
iret
cmp
fimuls
out
movsl
data16
xor
fcomip
pop
ss
mov
xor
cmp
lds
aam
negl
outsb
outsl
fcompl
je
push
in
mov
stc
mov
jecxz
xchg
pushf
pop
pop
pop
sub
shll
and
xor
jnp
mov
mov
xchg
andb
jb
clc
xor
push
lret
lock
sub
jo
aas
push
sub
movsl
frstor
mov
cmp
inc
mov
insl
ds
add
shrl
ret
ret
dec
xor
add
arpl
fcompl
sbb
push
call
inc
push
and
insl
mov
jle
ror
push
mov
aaa
dec
mov
cmp
inc
xlat
jge
xchg
shlw
mov
jle
popl
popf
cmpsl
setp
insb
mov
mov
pop
outsb
jmp
xchg
jno
sbb
jg
mov
mov
dec
in
aad
sub
sub
lds
fiaddl
ret
insl
add
dec
jbe
ja
adc
add
sub
jge
fs
and
jns
lret
dec
cmp
nop
repnz
cmp
cmp
lods
fsubrl
push
xor
aaa
dec
and
sarl
mov
leave
clc
push
add
mov
insb
outsl
and
test
mov
cs
in
mov
inc
shll
roll
add
loope
mov
mov
jo
jg
push
inc
or
or
repz
out
inc
mov
sub
mov
push
loop
cmp
mov
or
and
fs
cltd
jnp
pop
pop
sti
or
xor
push
add
jo
lret
jo
pusha
or
in
bound
mov
xchg
icebp
mov
jo
shll
ret
dec
or
addr16
and
es
push
pop
add
aam
mov
mov
ficoms
shlb
jae
fstl
inc
xorb
out
outsl
push
lcall
pop
loop
loopne
into
ja
inc
sbb
outsb
add
xchg
test
jbe
inc
sub
or
jb
clc
cs
aaa
mov
fdivrs
mov
mov
negl
mov
mov
jns
in
stos
push
aam
push
inc
mov
fsubrl
sub
loop
rol
or
sub
pusha
jl
add
scas
push
adc
aaa
cmc
ds
ret
add
pusha
fstpl
cmp
push
jb
jmp
scas
add
push
shl
jmp
jne
mov
and
add
testl
popa
popf
pop
fcom
or
xor
sub
fwait
scas
sarb
push
ret
dec
adc
mov
inc
pop
incb
movsb
pop
sahf
pop
adc
pop
sarl
or
add
jne
dec
into
add
es
fs
xchg
add
jo
mov
aaa
insb
mov
and
aas
sub
cmp
cli
and
or
push
movsb
in
jae
mov
ret
jg
test
daa
orb
dec
popf
das
mov
xchg
pop
adc
in
es
or
and
fidivrs
stos
sbb
push
push
popa
push
mov
rcll
pop
rcll
sahf
aam
sbb
das
imul
enter
adc
rorl
mov
sbb
subl
sbb
imul
xchg
stc
or
xchg
clc
inc
and
sbb
test
outsl
ret
adc
lret
dec
push
loope,pt
popa
hlt
or
aaa
lock
sbb
push
andb
in
push
ret
mov
repnz
jbe
rorb
les
mov
repz
ficoml
jbe
inc
cmp
push
testb
dec
mov
out
sbb
mov
lock
insb
das
repnz
xor
mov
fwait
daa
aam
imul
fstl
test
out
mov
jo
add
push
dec
std
dec
aaa
cmp
inc
jno
xor
xor
mov
adc
int3
mov
lods
xor
xchg
sbb
addr16
mov
xlat
stos
xor
test
rorb
dec
out
stos
xchg
sbb
xchg
sub
aaa
inc
cmp
cmp
cld
mov
push
pop
mov
roll
sbb
dec
xor
push
sti
in
push
sbb
ficoml
ret
inc
and
pop
cmp
add
mov
mov
pop
pop
out
jp
clc
mov
push
jmp
jno
push
adc
mov
cmpsb
shl
test
stc
test
imull
xchg
add
cli
mov
dec
out
push
mov
inc
sbb
pushf
pop
lods
sub
adc
faddl
je
pop
push
adc
xchg
in
nop
mov
push
push
cld
cmpb
inc
sqrtps
pop
out
sahf
cmp
in
xchg
rol
xor
pop
test
outsb
into
enter
cmp
adc
adc
lret
in
and
mulb
out
lods
pop
mov
push
mov
mov
and
xor
xchg
ficoms
xor
in
jne
jns
mov
dec
call
aam
je
lret
and
xor
adc
push
pop
cld
pop
or
or
vaddsubps
xor
sbb
sbb
jp
sbb
cmp
sbb
jp
and
bound
adc
add
pushf
scas
arpl
push
test
addr16
xor
xchg
mov
pop
inc
jmp
fisubrl
in
inc
rcr
jae
insb
jp
sbb
inc
or
push
and
push
pop
in
insl
insb
lahf
jp
bound
lods
out
leave
inc
mov
xchg
dec
push
aad
xor
lods
mov
mov
flds
sbb
adc
jle,pt
xchg
ja
xchg
movsb
lret
adc
jge
adc
dec
les
xchg
inc
xchg
pop
icebp
mov
cmp
adc
std
rorl
rclb
daa
push
jl
sbb
xor
xchg
iret
scas
movsl
icebp
bound
add
xchg
mov
jp
outsl
popf
pop
sub
mov
adc
test
pop
insb
sub
mov
in
adc
xor
ds
call
dec
jb
jl
shlb
push
aas
sub
out
xor
popf
push
inc
aam
and
adc
mov
cmp
fmuls
jmp
pop
and
out
push
pop
out
scas
or
cmpsb
repnz
mull
fldt
or
inc
pusha
jp
pushf
int3
test
and
sub
arpl
cmpxchg
or
outsl
shll
int
rcrl
jb
arpl
mov
in
sbb
std
mov
and
adc
dec
cmp
ds
ljmp
pop
stos
push
dec
mov
lods
mov
adc
and
xchg
dec
in
cmp
test
push
adc
mov
movsl
fsubl
std
stos
movsl
lahf
adc
jl
mov
add
sub
and
xchg
js
jg
jle
scas
inc
add
sbb
mov
or
cmp
aad
pop
int3
sub
nop
in
lds
mov
idiv
jmp
mov
xor
or
and
shrl
lods
sar
mov
lods
mov
jno
int
xor
jae
inc
in
sub
repz
pop
mov
xchg
dec
pushl
cmp
movsb
mov
loop
sub
faddl
sub
pop
add
es
push
fdivr
cmp
scas
push
enter
je
mov
xchg
mov
cmpsl
cwtl
out
fcomps
les
adc
or
and
push
inc
pusha
and
pop
ss
sarl
or
mov
or
dec
out
mov
mov
and
test
sub
arpl
repnz
mov
ret
dec
out
leave
xchg
dec
adc
stos
xor
cmpsb
stos
push
int3
aaa
sbb
push
sbb
test
aam
aaa
or
add
loopne
mov
fidivrs
inc
scas
mov
test
jne
and
pop
push
fs
fwait
lods
pop
adc
repz
add
dec
lock
sub
rcll
add
sbbb
xor
rcl
mov
outsl
mov
jne
cmpsb
push
mov
push
jp
push
inc
mov
jecxz
das
jo
out
es
xor
fstpt
std
cli
in
fadds
sahf
inc
shll
flds
lret
dec
pop
push
ss
shlb
mov
aad
mov
xchg
leave
scas
add
lret
daa
cwtl
dec
cltd
ret
es
sbb
mov
lods
push
sbb
imul
mov
xchg
cld
lods
dec
sbb
test
jmp
fwait
cmc
in
jns
movsb
sahf
or
sti
int
out
cmp
mov
or
pop
jb
shr
adc
mov
cbtw
in
sub
cmpsb
roll
lcall
jo
push
xor
push
mov
fcompl
sahf
inc
adc
cld
cmp
lods
stos
cmpsb
inc
cmp
mov
mov
lds
lock
dec
ret
cmpsb
test
mov
adc
sbb
mov
test
repz
push
pop
in
sbb
icebp
femms
and
pop
sbb
xchg
pop
push
iret
loope
int
cmp
stos
inc
enter
mov
mov
int
sbb
nop
cmp
cmp
adc
shrb
dec
cmc
repz
int3
into
incl
out
or
push
mov
cmc
dec
les
nop
mov
pop
mov
inc
inc
mov
imul
jno
mov
push
fsubrp
jmp
lret
test
out
in
int3
outsl
adc
adcb
dec
movsb
pop
xchg
adc
mov
jne
push
test
push
sub
lock
mov
ret
hlt
in
pusha
or
xor
filds
lret
mov
adc
call
stos
aam
lahf
push
inc
jp
mov
xor
ljmp
mov
jno
in
movsb
adc
leave
push
mov
push
outsb
add
movsb
dec
adc
in
mov
loope
mov
ret
fwait
inc
loopne
cmp
loope
sarb
shl
cmpsb
jl
into
shlb
aaa
xchg
mov
push
sbb
xorb
xor
xchg
fdivrl
push
pusha
imul
clc
insl
test
nop
mov
push
addr16
jns
into
mov
xchg
into
xchg
xor
cli
movsl
gs
push
js
data16
aam
jp
jnp
add
xor
scas
into
mov
pop
repz
movsb
or
add
fcoml
xchg
idivl
mov
shlb
pusha
push
and
aad
jg
jg
inc
cs
ja
scas
inc
xchg
into
inc
jae
call
push
sub
sbb
or
pop
shlb
xchg
daa
dec
mov
jns
inc
mov
mov
jnp
fucomi
cli
stc
cmp
subl
shlb
mov
pop
xor
pop
cmp
addr16
xchg
xchg
repnz
add
sbb
sub
int
xor
test
pop
sbb
cmp
sbb
xchg
mov
adc
mov
jne
cmpsb
ja
fists
leave
mov
outsl
xor
data16
cmp
mov
xor
imul
aaa
dec
dec
int
js
mov
dec
mov
sahf
add
push
xor
mov
dec
pop
push
in
fwait
sub
push
nop
push
push
addr16
or
pop
cld
cmpsl
scas
or
out
xor
pop
cmp
dec
add
mov
ret
inc
cmp
outsl
mov
push
rcrb
ret
sub
pop
pushf
pop
sub
into
pop
stos
jg
inc
push
test
pop
and
inc
add
mov
sahf
cmp
sbb
imull
inc
add
mov
enter
dec
jbe
fmuls
mov
add
repz
xchg
or
mov
and
xor
dec
xor
sbb
popa
nop
lret
dec
and
inc
push
pop
jecxz
loop
and
rcll
add
and
cltd
aas
enter
ret
iret
push
cmpsl
jbe
xor
arpl
out
push
dec
inc
mov
out
sub
sarb
mov
jmp
hlt
mov
cmovle
mov
ljmp
sbb
push
lods
xchg
pop
gs
je
push
repz
stc
xchg
insl
icebp
pop
cmp
sti
lods
cmc
mov
lahf
cmc
test
add
imul
in
fisttps
fldt
xor
inc
imul
add
aad
popa
lock
push
or
pop
fcoml
jbe
adcl
push
cmpsl
lock
add
enter
iret
mov
stc
call
popa
push
fidivrl
or
adc
pop
in
repnz
sbb
cs
mov
out
sub
mov
or
les
gs
loop
xlat
test
mov
in
jae
leave
stos
stos
sbb
mov
shrl
or
push
in
lods
movsb
movsl
mov
test
mov
xor
ljmp
mov
int
loopne
cmpsb
push
mov
and
xor
js
in
push
xor
jnp
cli
add
lock
dec
int
jb
popf
bound
mov
rcrb
dec
adc
xor
and
mov
jg
sub
pop
sbb
and
sub
rcr
pop
pop
fnstsw
dec
and
ljmp
jmp
scas
and
sbb
dec
gs
xchg
lock
push
cmp
mov
pop
mov
fsubrl
and
addr16
ss
add
aaa
add
dec
pop
xchg
clc
mov
ja
sarb
or
shll
test
pop
dec
pusha
jnp
mov
aaa
dec
mov
add
ficoms
fnstcw
pushf
sub
add
jg
adc
shrb
clc
or
es
incb
add
pushf
lret
lahf
insb
into
xchg
jmp
jae
shl
sbb
cmp
sub
xchg
pop
xor
add
decl
mov
popa
cmp
and
mov
aaa
stc
shll
lahf
inc
adc
sbb
les
adcb
insl
ljmpw
pop
jg
lds
mov
and
push
sbb
mov
cmp
testb
repnz
popa
aam
push
jg
test
loop
push
sub
xchg
sahf
jb
xlat
push
pop
pop
push
popa
mov
inc
jp
leave
add
mov
iret
jg
orl
dec
adc
call
loope
inc
jne
lahf
test
xchg
push
inc
ss
xchg
cli
adc
shrl
push
out
lahf
fwait
aad
test
jle
loope
ret
pop
mov
fisttps
cmp
imul
test
std
fcmovbe
imul
mov
mov
adc
mov
mov
or
mov
nop
int
js
popa
jle
inc
hlt
sti
xlat
pop
cs
dec
xor
cmc
mov
arpl
inc
sbb
mov
push
roll
xchg
add
xorl
mov
xor
add
or
mov
sarl
pop
lret
lahf
pop
test
mov
dec
fidivrs
pop
sub
inc
popa
movsb
xchg
and
sti
cmp
rcll
cmpsb
insl
and
add
xchg
into
rclb
xor
sbb
adc
sub
and
adc
push
or
push
jne
and
or
lcall
fdivrl
xchg
cwtl
jmp
sahf
cmp
es
jecxz
repnz
mov
stos
enter
sub
xchg
xchg
push
cld
out
aad
sub
inc
xchg
xlat
xchg
push
and
xchg
dec
push
push
xchg
fadd
push
test
or
pusha
mov
sub
repnz
popl
outsb
cmp
sub
test
es
push
xchg
sbb
rcrl
sbb
xor
fadds
xchg
and
scas
mov
and
sbb
and
fstl
es
mov
scas
aad
jns
push
add
xchg
inc
shll
scas
int
dec
leave
jno
pop
das
xchg
or
jl
push
icebp
ret
sub
cmc
in
add
data16
cmpsl
xchg
push
stos
mov
repz
aam
push
xor
lahf
or
sub
push
lods
jg
sarl
jmp
enter
out
pop
daa
sub
push
xor
cmpsl
or
and
jmp
pop
rorl
inc
inc
or
mov
cmp
gs
leave
popa
adc
mov
or
inc
call
pop
dec
inc
das
mov
inc
fstps
scas
mov
cmp
and
dec
orl
jp
push
ds
das
or
rcl
pop
xchg
les
sbb
stos
js
jo
js
cld
or
xor
mov
add
mov
and
inc
aam
pop
mulps
mov
inc
aas
aam
aaa
jae
cld
loope
sub
sub
movsb
sub
enter
mov
daa
jne
cmp
lea
aad
pop
xlat
xor
jle
leave
ret
in
sbb
pop
mov
ret
jp
addl
test
data16
loopne
sbb
out
adc
mov
jmp
mov
js
xor
dec
data16
fiaddl
imul
mov
sbbl
lock
sti
test
lods
xchg
jl
aam
addl
cmc
or
out
mov
cmp
and
lea
in
and
shr
inc
loopne
insl
or
cld
hlt
fmulp
xor
dec
lods
fidivl
mov
je
pop
jle
sbb
mov
lret
mov
jg
dec
mov
cmp
add
cli
cmpsb
arpl
call
aas
cmp
push
jg
sub
fildl
lret
ret
les
push
fistpl
pop
in
in
dec
orl
int
or
ret
inc
es
push
ljmp
jae
sbb
and
mov
mov
es
lahf
out
mov
fst
mov
leave
cwtl
push
jp
lahf
xchg
in
or
push
adc
fldcw
inc
and
cmp
arpl
push
add
add
inc
insl
cmp
ret
andb
in
jmp
adc
fs
fisttps
xor
ror
rclb
mov
loope
lret
xchg
ljmp
sub
popf
fdivs
add
loop
lcall
inc
std
sti
dec
inc
movsl
inc
mov
addr16
nop
fsts
jb
imul
pop
push
sbb
inc
dec
xchg
inc
ljmp
iret
jg
inc
or
jns
cmovo
fwait
sbb
add
dec
lret
mov
cli
fsubs
cmp
flds
push
es
fsubrp
lods
adc
push
xchg
adc
xchg
ljmp
mov
and
jle
pop
rcll
mov
xchg
js
inc
jbe
push
fildll
mov
fidivs
xor
jle
fwait
cmp
adc
push
inc
mov
jge
and
mov
pop
hlt
ret
sub
dec
jg
fimull
enter
inc
aad
test
mov
pop
loop
nop
in
fmull
adcl
adc
xor
aaa
dec
sar
lret
bound
jp
addb
push
push
mov
fstps
sbb
hlt
xor
xchg
pusha
or
adc
cmp
mov
fldenv
fs
xchg
jge
lahf
lock
jae
inc
roll
pusha
pop
dec
mov
test
push
pop
push
jae
or
dec
add
shlb
pop
imul
fisubrl
mov
lea
xchg
cmp
pop
xor
sub
push
push
cmpb
xchg
pop
and
and
cwtl
scas
rcrb
xchg
lea
cmc
scas
loopne
push
xchg
sbb
stc
jle
or
mov
sbb
push
pop
imul
dec
shl
lods
lea
rcl
cld
mov
mov
addr16
out
lods
pusha
add
fwait
int3
wrmsr
hlt
imul
or
fincstp
outsb
dec
jns
flds
and
sahf
call
lahf
jmp
jo
addr16
xchg
xor
push
fdivrs
cmpl
fidivrl
mov
sbb
lahf
imul
push
cmp
mov
adc
fldt
fimull
enter
rcr
pushf
sbb
iret
xor
iret
int
cmp
push
push
lret
cmpsl
pushf
jge
mov
mov
mov
pop
mov
adc
xchg
mov
sti
push
in
cli
xorl
int
fwait
dec
ljmp
loop
repnz
add
jp
push
sbb
push
cmp
jb
or
cli
mov
mov
mov
add
jp
push
sbb
push
cmp
jb
or
cli
mov
mov
mov
add
jp
push
sbb
push
cmp
jb
or
cli
mov
mov
mov
add
shlb
push
insl
lret
lds
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
mov
push
enter
enter
and
sbb
or
dec
test
pop
mov
push
call
enter
clc
sbb
or
pop
test
inc
mov
jo
add
adc
and
sub
sarl
or
ds
in
aas
xor
daa
fdivrs
push
in
dec
inc
or
stc
fucomi
int
mov
mov
nop
icebp
mov
fnstcw
aam
xor
or
push
mov
xlat
add
push
sbb
mov
test
push
call
sub
push
negl
aad
test
pop
mov
out
or
shrb
sub
leave
xlat
int
pop
lea
mov
or
push
cmc
mov
adc
jne
fmul
fadd
push
cmp
pusha
sub
test
loope
mov
out
or
push
and
cmp
test
neg
imul
mov
mov
push
call
sarl
sub
sbb
or
pop
test
xor
sub
leave
imul
mov
mov
js
or
das
lret
sub
pop
rcrb
jmp
mov
jnp
fwait
pop
lods
pop
clc
jg
pop
cwtl
sbb
int3
sbb
stc
and
adc
add
push
lret
cmp
sub
fdivrs
enter
call
push
pop
mov
push
call
fdivrs
enter
call
push
pop
mov
sbb
or
idivb
mov
mov
jnp
mov
jle
bound
inc
mov
pop
in
adc
ret
jno
ret
sub
inc
sbb
clc
pop
mov
ficoml
mov
mov
and
pop
mov
jle
cmp
lahf
sub
cmp
push
outsl
or
cmp
scas
sbb
adc
push
das
and
sbb
ja
jecxz
bound
enter
jmp
pop
iret
jns
imul
sbb
adc
lea
mov
mov
mov
or
divb
aam
xor
pushf
fldcw
popf
stos
xor
cmp
stos
cs
cmp
mov
icebp
je
scas
cmp
leave
popf
inc
imul
out
cmp
lods
loopne
mov
mov
sahf
jmp
les
loop
mov
jne
mov
jge
cmp
fcomip
adc
pop
movsb
mov
mov
out
stc
mov
pop
jo
inc
mov
or
pushf
pop
xchg
sbb
pop
popa
push
push
scas
in
in
insb
jno
and
xchg
lahf
lock
clc
pop
jbe
imul
in
out
lret
sysexit
cmp
inc
fcmovb
addb
sbb
fs
aaa
cld
xchg
cmp
in
sbb
mov
popf
iret
inc
int
aam
dec
and
mov
outsb
mov
jmp
push
aaa
add
jns
xor
fnstcw
xor
rclb
push
sahf
adcb
push
and
jp
das
dec
jnp
and
xchg
xchg
inc
iret
adcl
xchg
inc
repnz
mov
loope
dec
outsl
das
mov
sti
sub
push
call
mov
shll
dec
mov
enter
sub
pop
dec
repz
shlb
out
fmull
fld
mov
ds
jns
loope
xchg
call
addr16
jb
fidivs
xchg
jns
push
pop
shll
loop
shrb
adcl
shl
rcrb
xor
leave
inc
mov
jbe
shlb
mov
and
dec
aam
cmp
push
adc
xor
cwtl
stos
rcrb
lahf
filds
adc
inc
ss
psrad
sbb
xor
jl
pop
fdivrl
fbld
mov
into
jne
cltd
das
pop
pop
test
ss
cmp
push
mov
cmp
aad
es
sbb
int3
and
rorb
in
aas
mov
maxps
sahf
inc
shll
sbb
std
in
shlb
xchg
xchg
xchg
sub
je
xlat
fistl
inc
dec
jae
pop
fsubrs
repz
sbb
xchg
js
je
sbbl
pop
dec
rcll
shll
push
mov
lock
mov
pushf
and
mov
test
iret
imul
out
scas
xor
pop
jb
dec
inc
cmp
or
shrl
daa
lcall
adc
mov
stc
outsb
mov
aad
ficompl
mov
dec
sub
repnz
gs
sbbb
jno
stc
ja
push
and
fldl
pop
lea
sub
and
jmp
sbb
out
pop
mov
mov
push
pop
ss
je
adc
mov
push
sub
mov
sahf
add
loope
add
fstpt
int3
mov
pop
sub
mov
xchg
rorb
pop
sbb
out
sbb
lock
pusha
push
pop
aas
in
xchg
mov
pop
push
inc
rol
dec
lods
sbb
rcll
pop
inc
dec
push
xor
in
aad
mov
push
scas
pushf
int3
sub
jl
xor
test
lahf
int3
out
and
fs
movsl
xchg
lods
fistps
dec
adc
adc
inc
mov
cli
mov
cmp
push
test
test
mull
clc
pushf
inc
lods
mov
lret
movsl
cwtl
adc
pop
aaa
adcl
loop
jo
outsl
add
jae
and
outsl
insl
cli
nop
xor
push
aaa
xor
imul
or
xchg
fsubrl
xor
aaa
mov
or
pushf
push
cmc
xor
or
push
out
mov
lods
cli
sub
movsb
jl
shlb
insl
imul
repnz
inc
xor
and
pop
add
adc
push
mov
cmp
inc
inc
jmp
mov
in
inc
repnz
xchg
xchg
test
movsb
imul
subl
inc
into
mov
adc
sub
mov
je
inc
pop
sbb
or
jmp
out
out
lea
dec
in
pop
adc
idivl
mov
mov
lock
repz
shl
mov
in
mov
insl
cmpb
pop
adc
scas
mov
std
rorl
hlt
cmp
shlb
jp
fwait
pop
insl
cmp
push
cmp
rcl
xor
test
enter
sti
dec
xchg
outsb
dec
ficomps
mov
xchg
pop
inc
push
popa
mov
out
icebp
or
rcrb
stc
mov
add
fsts
xchg
rcl
inc
inc
nop
jb
loop
mov
cmp
sbb
stos
pop
test
jp
sti
jne
fs
mov
adc
xor
outsb
cmpsl
rcrb
add
in
xchg
jecxz
inc
cmpsb
in
and
dec
pop
imul
push
out
nop
ljmp
leave
aas
ret
adc
imul
mov
mov
mov
or
xchg
jbe
adcl
adc
adc
lods
jno
cmp
pop
call
add
insb
fwait
xchg
jmp
sbb
cmc
mov
daa
je
inc
mov
imul
adc
or
and
out
arpl
sbb
or
adc
jae
mov
mov
fistpl
mov
aaa
rcl
rorl
and
lret
xchg
adc
mov
push
add
jne
adc
icebp
in
lret
imul
jbe
addr16
pop
out
adc
mov
js
scas
fisubrs
ljmp
xor
mov
stos
lret
lret
imul
mov
fwait
jle
jno
rcr
leave
sub
mov
dec
mov
in
dec
sub
out
jp
xor
popa
adc
es
ja
out
cld
adc
loope
xchg
inc
jbe
sarl
jg
cmp
aad
mov
lcall
push
adc
xor
jns
pop
aas
mov
push
in
dec
dec
adc
jmp
sbb
pusha
cmc
push
loop
fisubrs
gs
cld
add
cmc
jecxz
test
fistl
push
daa
push
mov
pop
push
fs
in
xchg
sub
in
pusha
popf
outsb
sti
xor
cmc
outsl
jne
sbb
lea
mov
in
sub
ret
pop
fmul
dec
js
add
mov
and
inc
sarl
ror
or
cwtl
popf
jl
dec
xchg
adc
aad
mov
cmpsl
add
inc
dec
js
jle
int
popf
fmull
adc
vphaddwq
pop
outsl
loopne
pop
loope
add
movsb
pop
movsl
xor
insl
es
pop
push
popa
lret
push
push
jmp
bound
jle
xchg
push
pusha
mov
fucomp
push
loop
jns
fldcw
jle
seto
xchg
dec
add
clc
lock
out
pop
jge
cmp
fsts
xchg
sbb
jbe
mov
adc
pop
sbb
fidivrl
push
add
lea
test
mov
cltd
sub
mov
add
push
iret
mov
or
push
pushf
push
lock
dec
outsl
or
add
in
cwtl
flds
in
sub
cmp
push
push
fmuls
scas
and
adc
fdivr
sbb
cmp
call
pop
push
stc
jle
cld
addl
insl
jmp
pop
mov
repnz
mov
xor
adcb
int
gs
bound
shlb
popf
xchg
sub
stos
xor
fmuls
pop
sbbl
data16
xor
js
cmp
fldl
cmp
addr16
insb
repnz
cmp
jl
mov
sbb
push
jo
fwait
xchg
jmp
sbb
inc
ret
imul
pop
aam
pop
lods
aaa
imul
push
lods
xchg
pop
dec
je
mov
mov
cmp
arpl
cs
xchg
decl
pop
scas
mov
and
mov
mov
sub
lds
loope
shlb
fldcw
and
push
stos
pop
icebp
and
popf
cmpsb
xchg
pop
popa
pusha
pop
jg
mov
in
mov
lds
daa
inc
cltd
mov
ret
mov
fstp
adc
mov
xor
pop
imul
je
and
and
or
sti
ljmp
fwait
xchg
ds
in
into
dec
test
jmp
aas
jns
or
or
pop
rcl
cwtl
js
cs
dec
pop
xor
inc
mov
out
aad
and
adc
out
aas
mov
cld
and
jae
sub
jg
push
pop
cmpsb
xlat
pop
cld
dec
and
jae
add
dec
and
orl
call
mov
pop
jo
xchg
xor
xchg
mov
xchg
neg
scas
stc
pop
sub
lahf
adc
aas
inc
jecxz
in
ret
inc
jb
add
pop
add
inc
push
cmpsb
pop
lods
or
inc
mov
rclb
cmp
imul
push
push
xchg
data16
aad
jp
in
cli
add
imul
sbb
mov
dec
xor
push
sbb
push
iret
data16
and
and
hlt
push
loope
pop
out
or
jbe
dec
fists
dec
pop
pavgb
push
in
or
imul
insb
push
push
inc
dec
jmp
mov
nop
mov
xor
or
lret
rdmsr
call
jg
mov
shlb
mov
pop
adc
jns
sub
cmp
jmp
ss
pop
pop
sahf
push
out
lds
aaa
mov
mov
and
adc
xor
sbb
je
in
cmp
xor
cmp
out
sub
ret
push
sbb
pop
and
cltd
ret
xchg
inc
mov
adc
jp
jle
xorb
mov
push
cmp
or
pusha
aaa
mov
or
and
pop
or
bound
sub
jbe
clc
sti
ja
inc
cmp
cld
outsb
movsl
inc
shlb
cld
adc
jecxz
sbb
jbe
push
mov
in
mov
call
mov
mov
push
call
mov
push
jecxz
in
mov
repnz
sti
sub
inc
pop
dec
outsb
adc
fimuls
and
je
mov
imul
dec
aaa
mov
ret
adc
and
mov
lods
xor
sub
insl
jecxz
add
cmp
sbb
mov
inc
mov
adc
pop
lods
subl
into
outsl
dec
xchg
mov
and
xchg
xlat
lahf
decl
mov
mov
mov
ljmp
cmp
jb
in
dec
add
pop
sub
loop
clc
mov
aam
pop
and
dec
push
gs
mov
sub
lret
ja
sbb
cld
lods
add
xor
lods
inc
push
add
int3
and
nop
js
js
test
sub
sbb
or
jne
idivb
inc
push
repnz
add
lods
stos
dec
adc
cmp
inc
mov
fsubrs
loop
imul
mov
inc
outsl
cmp
and
int
outsl
jge
scas
test
daa
dec
mov
adc
in
maxps
sub
ret
nop
push
pop
jno
sub
cs
fcomps
mov
cmp
inc
por
addl
inc
cli
cmpsb
or
pushf
push
mov
jo
inc
rorl
inc
cmc
pop
sub
leave
loop,pn
dec
shll
loope
stos
inc
rol
cmp
cmp
pop
roll
dec
hlt
push
push
pop
xchg
xchg
call
out
mov
sbb
jb,pn
push
push
lea
lahf
out
fucomip
inc
adc
dec
mov
lret
mov
mov
mov
call
jnp
sub
popf
mov
or
xchg
loopne
mov
pop
adc
lcall
loop
jo
push
add
jge
ja
popf
lcall
mul
and
mov
mov
xlat
add
xchg
into
test
jae
jb
sub
mov
mov
test
in
mov
mov
fsubrs
out
popa
cmp
mov
add
inc
cmp
test
adc
test
pop
rcr
xor
ljmp
cmp
repz
test
repnz
dec
mov
cs
and
push
mov
pop
mov
xor
fs
loopne
and
cld
and
mov
mov
fdivl
or
aad
cmc
pop
cmp
jo
out
sbb
pusha
pusha
outsb
jecxz
mov
jo
sub
addr16
adc
addr16
jns
addr16
sub
out
es
std
negb
loopne
xor
cld
outsl
mov
and
adc
lods
fimuls
mov
cwtl
out
or
gs
cmp
lock
cmp
or
out
idivb
in
sub
inc
inc
xchg
arpl
loope
mov
cmp
cmp
mov
mov
and
pusha
sbb
sub
cmp
and
les
pop
dec
outsb
clc
out
test
and
mov
pop
dec
lret
pusha
sbb
sbb
inc
in
xor
cmp
pop
xchg
inc
xor
mov
inc
cmpsb
in
xor
push
cs
fcompl
in
arpl
ljmp
dec
jbe
sub
cmpsl
mov
inc
xchg
dec
cmc
mov
push
lea
jno
add
lcall
dec
xor
je
ret
negl
pop
add
pop
mov
lret
movd
fisubl
push
cmpsb
adc
cmp
loope
fwait
hlt
add
sub
inc
daa
imul
jns
mov
and
arpl
push
jae
cmovbe
test
jo
sbb
enter
jne
in
push
push
mov
cmp
or
addr16
int3
pop
jae
lods
cli
mov
mov
jo
cmpsl
fs
and
xchg
jnp
inc
lahf
mov
lret
pop
sbb
aad
and
movsb
bound
mov
mov
mov
popf
push
nop
lahf
movsl
or
add
xchg
pop
pop
pop
xlat
mov
in
add
pop
xchg
orl
push
dec
mov
add
call
popf
sbb
mov
mov
mov
rcrb
cmpsb
ljmp
dec
push
xchg
add
dec
and
lds
fsts
xor
insb
xor
aas
dec
iret
enter
xlat
sub
jg
sbb
add
test
mov
mov
loope
popa
pop
out
xchg
mov
push
cltd
push
inc
adc
pop
add
sub
nop
call
int3
outsb
mov
fdivs
push
jae
add
dec
mov
in
cmp
hlt
xor
rorl
pop
dec
pop
jne
inc
inc
jb
adc
add
jns
scas
inc
cwtl
pop
lret
test
xchg
xor
insb
sub
and
in
jns
shl
mov
mov
shlb
fwait
pop
or
into
dec
xchg
sub
arpl
xchg
jbe
cli
jge
adc
roll
in
mov
mov
cs
pop
sbb
sahf
adc
icebp
xlat
movsb
jo
jge,pt
xchg
push
repz
dec
and
jp
mov
mov
pop
lock
int3
mov
xor
push
mov
add
dec
xchg
ljmp
and
popf
mov
aas
adc
push
adc
mov
data16
cmc
dec
stos
and
xchg
sub
push
rclb
and
cmp
ja
mov
inc
je
in
xchg
mov
xchg
sbb
arpl
daa
mov
clc
loopne
jb
sbb
adc
popa
fildll
adcl
push
push
sbb
daa
aaa
les
rcrb
std
cld
bound
dec
daa
inc
dec
cltd
arpl
jo
fmul
hlt
jns
andb
scas
xorb
mov
and
adc
push
adcb
push
aad
shll
movsb
mov
lcall
cmp
xor
or
and
ret
push
mov
jecxz
enter
push
dec
adc
or
push
imul
into
pop
outsl
adc
pusha
mov
repnz
fwait
push
xchg
xchg
sahf
fs
mov
push
and
xchg
lock
jecxz
addr16
jle
push
push
in
addr16
test
and
mov
dec
pushf
xlat
mov
movsl
cltd
out
xor
out
fdivp
ds
test
push
cmp
mov
adc
push
and
fdivrl
sbb
mov
les
rorl
pop
scas
jne
sub
icebp
mov
pushaw
stos
cwtl
jle
lret
pushw
adc
sbb
sub
lock
into
sbb
test
pop
sub
mov
out
jp
xor
push
sub
sub
cli
arpl
lods
push
or
inc
cmp
popf
imul
fdivrs
negb
aad
jp
add
jmp
jg
xor
adc
test
pop
mov
addr16
adc
inc
inc
push
ret
movsb
jo
sbb
mov
jp
push
test
test
cmpsl
mov
push
xlat
jno
out
cltd
dec
pop
mov
loope
add
or
cmp
fcmovu
xchg
xor
js
cwtl
andb
dec
int3
lahf
cmp
dec
test
call
shlb
mov
sbb
in
inc
or
cmp
inc
and
popa
jae
shlb
rcrb
push
ds
daa
xchg
fstpt
jnp
idiv
mov
xchg
mov
ljmp
imul
mov
cmp
leave
fcoml
add
popf
jmp
into
or
int
jl
inc
cwtl
inc
inc
xor
fisubs
mov
mov
sbb
cmp
sub
loope
sbb
pop
je
leave
ljmp
divb
bound
jne
sub
sub
leave
loop
mov
loop
adc
push
and
mov
jbe
push
sub
dec
loope
les
xor
bound
repnz
stc
cld
loope
add
lods
pop
lret
rorl
fnsave
enter
cli
cmp
sub
jle
or
adc
push
loop
rcl
jmp
cmpsl
inc
add
fadd
scas
outsl
xor
into
and
data16
cmp
jle
stos
js
pusha
bnd
loopne
pop
adc
push
rorl
cmp
cmp
cmp
popf
cs
clc
in
fsubrl
sbb
aaa
pop
arpl
adc
xchg
js
mov
enter
movsl
pop
pop
mov
cmpsb
mov
inc
jne
push
mov
jo
pop
gs
shr
inc
leave
es
pop
sub
fldenv
or
xchg
lods
fwait
aam
lods
xchg
pop
fildll
notb
or
daa
aas
es
sub
hlt
and
pop
or
add
mov
sbb
fstpl
and
xchg
popf
movsb
cmp
sub
ret
stos
testb
in
repnz
mov
ret
add
cltd
ret
dec
out
xchg
arpl
pop
xchg
aam
push
adc
add
movsl
stc
js
push
xchg
push
out
xchg
pop
mov
cmc
pushw
lods
cmp
inc
xor
add
pop
xor
mov
jmp
stos
dec
jne
mov
outsb
mov
jmp
in
cmpl
out
dec
jge
mov
shr
stos
add
fcom
jp
xor
sub
mov
pop
jae
iret
and
sub
inc
cmpsl
ret
lods
push
adc
repz
ret
testl
mov
add
pop
sahf
ds
lahf
scas
insb
cmp
fwait
je
xchg
xor
sub
mov
ds
push
cmpb
and
push
add
fsubrs
mov
fsubl
cmc
mov
mov
or
iret
dec
add
fildl
je
out
inc
shrb
mov
and
es
rol
lahf
inc
orb
out
xchg
dec
test
decl
loopne
or
add
adc
xor
pop
fnsave
xchg
nop
mov
or
nop
into
push
ljmp
insl
xor
pop
mov
movsb
out
ja
scas
push
popf
outsb
adc
rorb
push
outsb
jns
cli
mov
mov
roll
fincstp
cmp
push
lret
scas
inc
inc
movsb
dec
mov
je
insl
es
push
into
fldl
xor
sub
inc
add
and
repnz
mov
push
loope
lret
jbe
pop
mov
pop
jg
fwait
addb
mov
adc
out
and
mov
lds
push
dec
xor
jo
jo
xor
jp
pop
outsb
sbb
subl
mov
cmpb
sbb
xchg
daa
lock
xlat
xor
pop
inc
repz
add
movsb
add
sub
test
jg
pop
fcompl
inc
jns
in
mov
sbb
sub
sbb
sub
push
pushf
stc
lock
es
scas
mov
mov
rolb
into
mov
lock
shll
into
jge
shlb
cld
ffreep
repnz
popl
push
mov
loop
outsb
jbe
add
mov
gs
addb
add
cmp
aad
pushf
mov
adc
movsl
iret
adc
test
movsb
sub
imull
out
push
test
in
ds
mov
loopne
and
add
jb
or
jbe
sbb
rolb
push
ss
add
mov
out
hlt
repnz
cmp
jmp
fisttpll
inc
and
js
adc
clc
xorl
lret
push
in
sub
out
sbb
cmp
imul
push
add
xor
in
sub
pop
stc
call
adc
leave
imul
jl
adc
icebp
int3
jns
das
add
inc
add
fildll
inc
sbb
fstpl
stos
mov
test
cld
cli
call
stos
sub
test
cwtl
push
call
fdivrs
enter
call
push
pop
mov
push
call
fdivrs
enter
call
push
pop
mov
push
call
fdivrs
enter
call
push
pop
mov
push
call
daa
cmp
adcb
jg
lock
int3
int3
int3
int3
int3
push
je
fs
cs
push
pop
sub
xor
add
hlt
mov
mov
mov
and
xchg
out
test
je
fs
cs
pop
xor
and
adc
add
hlt
mov
mov
movsb
out
test
je
fs
cs
pop
xor
and
adc
add
pop
lods
in
mov
fdivp
mov
test
outsl
cmp
cmp
push
repz
xchg
into
in
push
push
in
mov
test
das
push
pushf
test
in
xor
mov
adcb
inc
and
sbb
push
dec
mov
into
dec
test
mov
jbe
mov
pushf
cmc
mov
xor
and
fwait
sbb
mov
fs
out
or
std
cwtl
sub
mov
daa
fwait
outsb
sti
outsb
das
add
mov
into
pop
push
imul
xchg
mov
mov
add
xchg
sub
pop
add
or
loop
fwait
add
sarl
fisubl
in
or
lds
mov
in
test
je
fs
cs
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
xchg
out
in
jnp
insl
fs
push
and
pop
ljmp
mov
xlat
fwait
xchg
sahf
lds
jp
pop
push
outsl
cmp
cmp
add
mov
xchg
ret
mov
stos
sub
stos
iret
xchg
icebp
test
jns
push
aaa
js
dec
and
xor
and
adc
add
hlt
mov
mov
mov
movsb
xchg
out
test
je
fs
cs
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
xchg
out
test
je
sub
mov
dec
into
pusha
lcall
lock
pusha
or
xor
stos
imul
ficoms
mov
and
test
out
dec
sahf
xchg
icebp
pusha
add
jle
pop
test
in
dec
hlt
and
data16
adc
jg
pop
xchg
xor
jcxz
and
stos
ljmp
sub
lcall
fisttpl
xchg
lds
test
movsb
popf
adc
scas
mov
paddd
and
adc
mov
imul
jge
xchg
adc
aaa
enter
mov
outsb
mov
mov
test
in
out
xor
push
dec
jp
repnz
shr
dec
call
addr16
inc
test
lea
out
mov
jno
mov
push
ljmp
lcall
into
mov
xor
loopne
push
adc
addr16
or
pop
mov
mov
stos
and
shrl
cld
jnp
lahf
push
adc
aaa
and
mov
sub
push
in
es
jecxz
mov
or
in
xchg
mov
push
xlat
adc
insb
jecxz
jge
mov
inc
orl
xor
sub
cltd
fcmovne
pop
shlb
sub
in
push
movsb
cli
stc
jl
sub
ja
jo
mov
fcoml
das
add
or
xchg
pusha
and
pop
mov
stos
adc
jae
pop
out
test
jg
test
fs
push
in
cmpsb
fdiv
push
pop
push
push
rol
imul
jmp
ljmp
popa
sub
pop
push
push
call
in
sub
nop
mov
and
jo
std
in
es
sbb
dec
cmpsl
pop
and
mov
mov
in
mov
in
dec
and
and
insb
xchg
test
push
out
aam
or
sbb
xor
jp
jno
mov
or
jmp
sub
mov
scas
dec
mov
xor
shll
cltd
out
mov
gs
push
in
mov
xor
adc
push
and
dec
mov
mov
cs
mov
fucom
mov
imul
sar
test
dec
pop
xor
jge
cvttps2pi
inc
mov
adc
pusha
mov
cmp
sub
inc
aas
adc
dec
mov
imul
ds
xor
mov
jecxz
out
lods
or
sub
and
cs
loopne
or
lds
fwait
popa
mov
loop
loope
inc
push
mov
mov
jge
call
jns
mov
cmpsl
push
or
enter
fwait
int3
imul
cltd
cmpsb
cld
cltd
fldenv
adc
pop
hlt
inc
not
mov
lods
sub
mov
cli
fwait
or
sbb
xchg
std
out
xor
mov
les
fwait
push
test
sar
sar
lret
ja
mov
jmp
mov
inc
lds
nop
popa
lahf
adc
xor
aas
jg
btc
nop
push
jb
mov
inc
mov
es
ljmp
xchg
push
icebp
nop
loop
scas
out
sub
cmp
arpl
aam
jge
push
xor
add
sbb
xlat
xchg
shlb
inc
nop
das
in
gs
xchg
jle
int
push
out
jp
pop
mov
sahf
int3
inc
test
mov
and
in
cmc
mov
test
xchg
in
xor
mov
jbe
mov
push
jg
mov
decl
shlb
loop
sbb
insb
add
lret
xor
pushf
xchg
popa
outsl
sub
mov
mov
aam
loopne
cmp
add
out
sub
sbb
xor
add
jbe
sbb
mov
add
outsb
subb
lret
addr16
inc
sbb
mov
adc
sbb
test
ds
jae
rep
push
ret
cmpsl
int3
mov
pop
inc
sbb
nop
lahf
xor
mov
xchg
fmull
outsl
push
push
stos
add
test
mov
nop
imul
mov
sbb
sub
movsb
and
cmpsb
xchg
jnp
push
sbb
inc
xor
or
add
ss
jecxz
arpl
gs
adc
out
ret
add
out
repnz
jne
mov
cltd
xchg
inc
xchg
mov
je
dec
insl
xorl
or
push
mov
sub
jecxz
xchg
mov
pop
scas
mov
pushl
imul
lds
lea
popa
scas
inc
fs
lret
or
inc
and
ficoml
addr16
in
pop
test
push
sahf
nop
in
mov
xlat
sub
xor
out
add
inc
xchg
test
je
push
cltd
outsl
imul
mov
js
cmc
subps
pushf
jg
sarl
jb
repnz
fwait
mov
lods
into
daa
add
jg
fildll
lods
or
push
inc
ljmp
mov
shrl
ficoms
arpl
xor
mov
fcmovbe
pop
mov
rol
imul
cmpsb
push
hlt
mov
lcall
mov
or
add
aam
aam
inc
movb
dec
mov
add
xchg
mov
inc
cmp
mov
or
rcll
pop
jecxz
sbb
loopne
sub
mov
and
in
dec
cmpsb
and
popf
mov
stos
push
mov
or
js
add
mov
jge
add
ret
mov
jg
cmc
les
pop
and
pop
inc
cmpsl
cmpl
ja
sbb
jne
adc
aad
xlat
xor
jmp
insb
push
sbb
xchg
mov
iret
sahf
and
jo
aaa
adc
xchg
fcmovnbe
add
jno
cmc
xor
std
repnz
xor
dec
popf
mov
movsl
icebp
mov
shl
je
adc
mov
xor
xor
shrb
sbb
pushf
cmp
shrb
pusha
hlt
iret
xchg
loope
lahf
std
out
les
inc
jg
fisubs
data16
mov
cltd
in
cmp
scas
outsl
fcoml
jns
hlt
pusha
lcall
cltd
fisubl
enter
js
dec
fists
jb
outsb
jmp
aaa
dec
mov
inc
cmc
stos
dec
jnp
movq
dec
jbe
bnd
data16
call
gs
jmp
pusha
ret
dec
lds
ror
arpl
jmp
lcall
cmp
je
mov
fdivs
les
xchg
out
push
jns
pushf
ljmp
inc
mov
mov
push
jle
sbb
xor
cmpsb
enter
push
jne
sahf
sti
sbb
cmp
sbb
lret
or
mov
sarl
int3
shrb
add
ret
mov
mov
xchg
fmull
subl
lea
and
xor
mov
fstpt
insb
and
fildl
cmpl
aam
in
sub
mov
push
shll
sub
fsubrl
mov
push
jbe
sub
sub
test
sub
jno
push
mov
hlt
imul
dec
ss
enter
fisubrl
push
ja
mov
mov
inc
push
mov
jle
aam
mov
xchg
jp
data16
mov
lea
insl
scas
and
imul
mov
lret
aaa
sub
std
sub
jecxz
push
lods
cwtl
sti
mov
mov
push
bound
daa
je
xchg
ds
lcall
inc
scas
mov
test
fistps
cmp
lock
arpl
push
fimuls
pcmpeqd
aad
jmp
js
inc
mov
xchg
pop
call
sbb
cmp
and
cmpsb
dec
insl
push
cmp
mov
xor
int3
and
sub
jnp
sahf
lahf
push
jb
fstpl
enter
cmp
sbb
jae
enter
pop
mov
stc
mov
xchg
inc
mov
jnp
out
push
mov
push
push
cmp
pop
mov
sbb
jg
add
outsl
fucomi
mov
call
dec
sub
and
in
cmc
mov
pop
add
cmpb
mov
iret
out
inc
icebp
sub
xchg
lret
and
ret
sbb
dec
adc
xor
popa
mov
js
sub
push
fisttpll
mov
xor
test
rorb
adc
cmp
push
mov
dec
xlat
andl
lcall
mov
jo
int3
xor
fdivp
xchg
cwtl
cmc
cmp
test
enter
sbb
mov
loop
cmp
addb
mov
xor
mov
mov
mulb
cmp
xchg
add
or
mov
ljmp
aaa
or
and
mov
dec
inc
jno
mov
mov
pusha
stos
mov
in
dec
cmpsl
sbb
cmpsb
jg
mov
inc
push
mov
cmp
loope
adc
sbb
adc
lods
dec
mov
mov
sub
sbb
das
mov
int
out
das
rcll
roll
mov
sbb
das
ja
icebp
lcall
pop
mov
icebp
fsts
aaa
js
out
xor
shlb
mov
xchg
xchg
fwait
lea
stos
incb
mov
jbe
inc
addr16
push
pop
pop
notl
imul
mov
stos
and
leave
push
hlt
mov
decb
adcb
push
mov
and
adc
imulb
mov
sahf
and
test
dec
push
mov
jbe
movsl
mov
sub
fistpl
pop
ljmp
pop
add
out
pop
lahf
push
add
addr16
xor
adc
nop
in
rorl
iret
mov
mov
popf
insl
fcmovnbe
je
ret
dec
dec
and
pop
and
test
lea
fcmovb
ss
lods
lahf
out
push
mov
push
cmp
movsl
sbb
mov
jecxz
cmp
sbb
pushf
sub
idivb
lods
icebp
nop
push
rcl
movsb
push
pop
mov
xchg
mov
out
add
cmp
adc
in
dec
mov
sub
incb
dec
popa
xchg
mov
ljmp
in
icebp
out
sahf
adc
outsl
adc
pusha
xor
add
inc
push
lds
sbb
jbe
jo
sbb
sub
hlt
fld
xor
jo
out
mov
add
jmp
aam
mov
stos
and
and
push
out
cld
mov
dec
push
jo
and
enter
cmpsb
in
mov
cs
int
mov
push
mov
jno
sub
imul
jb
inc
mov
dec
jo
jnp
fwait
xchg
js
aaa
sub
cltd
mov
add
push
dec
fwait
test
sub
sti
lods
cmp
lock
push
push
jl
or
jo
pop
mov
iret
mov
xchg
push
push
push
clc
pushf
cmp
xchg
repz
pop
mov
push
push
cmc
in
add
dec
fidivrl
movsb
scas
jne
adc
pop
push
fiadds
out
gs
lret
pop
sahf
jns
ljmp
pop
xorl
inc
in
jl
repz
leave
sub
sub
mov
cmp
jl
xchg
clc
push
dec
cmpsb
insl
push
fists
icebp
insb
cli
pop
ljmp
add
push
sbb
jl
jo
push
dec
sbb
cli
cs
mov
jb
pop
fmulp
clc
test
mov
inc
lods
jmp
ljmp
xor
lods
mov
mov
int3
in
push
adc
lock
sub
jp
jnp
mov
out
pop
fwait
jbe
jo
mov
es
shrb
mov
cs
das
push
rorl
push
gs
out
xchg
inc
xor
jae
rorl
rclb
call
int
mov
fstp
add
fstpt
sbb
jge
and
mov
push
imul
mov
jnp
pop
int
lcall
testb
xor
repz
ds
cld
shld
popf
shrl
push
cmp
and
fucomp
fildl
and
sub
sbb
pop
adc
pop
icebp
pusha
sub
loope
pushf
xchg
ja
in
es
inc
roll
or
mov
sbb
ds
mov
cltd
sub
sbb
and
add
subl
jbe
clc
inc
add
sti
or
xor
cld
lods
push
and
js
jge
clc
rorb
jge
mov
mov
mov
out
cld
lock
lcall
inc
adc
add
inc
fsubrs
int3
pop
mov
push
out
and
inc
daa
mov
inc
leave
jne
jg
orl
les
sbb
mov
dec
iret
push
out
xchg
test
repnz
mov
clc
mov
pop
jecxz
jne
push
cmp
dec
stos
loop
push
stos
fs
fdivl
pop
sbb
dec
and
push
out
lods
out
jb
dec
adc
dec
negb
jb
hlt
or
pop
push
lret
dec
outsb
daa
into
pusha
scas
jmp
or
fimuls
or
adc
rolb
pop
and
mov
xor
ss
adc
push
inc
shll
fsincos
enter
icebp
dec
mov
sub
adc
cmp
lea
push
or
std
mov
mov
pop
jecxz
xchg
or
ret
stos
ss
pop
mov
out
shll
mov
xor
xor
ss
aaa
jl
xor
out
cltd
arpl
mov
cmp
pop
mov
mov
arpl
stos
pop
stos
jne
mov
jmp
js
cltd
lret
addr16
xchg
mov
pop
pop
cmp
lods
fnstsw
push
out
in
sub
push
outsb
int3
xchg
inc
sub
lahf
pop
rcr
pop
out
outsb
int
hlt
lock
inc
mov
adc
rcll
xchg
fnstsw
aas
loop
push
movsl
jne
pushf
cmpsb
test
int3
nop
cmc
xor
cwtl
cmp
mov
stos
cld
fldenv
pusha
sbb
mov
or
xlat
adc
and
add
jmp
in
pop
out
rcrl
mov
fwait
pop
repnz
aam
mov
into
scas
mov
das
loop
jge
xchg
sub
shlb
stc
icebp
jno
jmp
jo
into
cs
or
inc
cmpsl
jnp
jne
les
pop
mov
jecxz
fstps
pop
leave
or
push
add
sbb
scas
sub
fidivrl
aaa
mov
loop
daa
cmovs
shll
adc
mov
cmp
divl
xchg
sub
cmpl
imul
stos
or
shlb
and
and
idivl
mov
mov
push
or
into
fs
mov
inc
stc
in
pushf
and
mov
push
sarb
jno
inc
in
lods
inc
push
sbb
test
lcall
inc
outsb
jle
sti
push
cltd
stos
push
adc
dec
scas
enter
and
imul
and
out
push
dec
lahf
cltd
cmc
jo
das
sbb
ror
and
and
es
popf
or
int3
xchg
std
fildll
fldt
cld
inc
dec
mov
es
incb
mov
jo,pn
and
imulb
dec
movsl
subl
lcall
mov
fcomi
inc
mov
mov
out
inc
fsubr
lahf
jno
aas
cmc
in
es
inc
arpl
lods
cmp
cmpsb
jae
sbb
adc
lahf
je
lret
insl
sub
std
or
jg
jge
fnsave
push
pop
dec
jo,pn
fbld
adc
insb
iret
in
stos
push
push
mov
mov
icebp
je
movsl
jge
loop
push
or
xor
mov
mov
lds
xchg
mov
shll
hlt
pop
fidivrl
stos
nop
imul
push
sub
pop
js
and
inc
cmc
out
adc
mov
and
and
popa
xor
aas
or
push
pop
sbb
fstpt
and
aaa
outsl
popcnt
adc
adc
fildll
cmp
stos
and
push
cli
into
or
iret
aaa
aad
add
xor
cli
and
jmp
mov
loope
xchg
scas
in
or
aam
adc
cltd
xor
andl
cwtl
out
pop
inc
out
fwait
adc
icebp
imul
xchg
adc
sbb
mov
or
push
mov
out
icebp
stos
xor
rolb
mov
xchg
aaa
adcl
and
jl
add
lret
cmp
int
adc
jmp
stc
add
mov
sub
mov
hlt
stc
cmp
scas
push
cwtl
outsl
pop
insl
clc
adc
outsb
mov
sub
push
add
cmp
test
aad
arpl
out
inc
mov
js
inc
push
inc
andb
cmp
test
jns
cmp
repz
mov
ja
fiadds
out
mov
xchg
sbb
or
scas
je
push
aas
cmp
dec
repnz
adc
jmp
icebp
sub
sub
pop
adc
push
pop
or
cmpl
cwtl
lcall
into
and
rcll
out
cli
test
stc
adc
pop
pop
push
jle
lods
aas
cmp
mov
and
mov
loopne
sbb
loope
xchg
jno
fstps
icebp
xor
jae
inc
cmp
mov
cmp
test
icebp
sbb
andb
mov
std
aam
or
insb
push
and
jg
jo
out
lods
sahf
push
push
ret
add
adc
push
iret
imul
out
cwtl
mov
data16
xor
cwtl
fwait
sub
mov
jbe
push
cmp
sbb
lock
mov
lret
mov
inc
xchg
out
fmul
mov
arpl
push
push
xor
shr
pop
pop
dec
popa
sti
jge
mov
jbe
push
test
dec
idivl
dec
in
mov
lds
cmp
mov
icebp
insl
jle
stos
mov
cmp
push
scas
pop
jle
fstpl
push
or
imul
xchg
cs
int3
jb
jle
movsb
xchg
dec
lods
test
bt
mov
sub
and
dec
jle
jecxz
lea
lret
adc
cmc
ja
dec
enter
lea
mov
or
loopne
pop
ss
cld
mov
push
mov
sahf
lods
push
mov
sub
mov
testb
jmp
ljmp
pop
mov
leave
inc
jo
fwait
sub
mov
sub
xchg
xor
jmp
inc
and
outsb
insb
fld
ja
mov
mov
jns
xchg
adc
das
cmc
mov
in
cmc
shlb
imul
outsl
push
adc
cmc
insb
mov
mov
shlb
push
data16
jle
push
insb
out
ret
mov
fwait
mov
inc
loop
in
hlt
inc
test
in
inc
jb
cmpsb
or
add
adc
rcrl
out
out
aam
call
xchg
xchg
mov
insb
lods
inc
mov
in
jne
stos
loope
fldenv
sbb
out
xlat
fwait
ja
sub
inc
stc
push
inc
mov
les
cmpsl
inc
les
sub
rorl
add
push
push
loop
fisubl
jecxz
ljmp
enter
clc
mov
mov
in
jne
mov
in
lret
push
rcrl
mov
sub
fs
or
fsub
mov
inc
jb
stos
loope
subb
jecxz
lahf
mov
cmpsl
dec
xchg
dec
mov
mov
cmp
cmp
cmp
sub
inc
repz
pop
jbe
sub
aam
fisttpl
shr
adc
fisubs
xor
roll
flds
das
loop
arpl
shrb
inc
sbb
out
cld
mov
ret
ss
cmpsl
clc
pop
shrl
sub
pop
cltd
mov
dec
ret
and
stos
sub
enter
add
jne
and
add
aaa
cmp
arpl
xor
aas
lea
les
mov
cld
xor
mov
adc
jbe
push
jmp
in
pop
adc
mov
out
fbld
push
fcomps
and
pushf
stos
cli
jne
repnz
roll
imulb
mov
jecxz
xlat
inc
fiaddl
mov
popf
imul
jmp
push
xchg
ror
dec
or
bound
dec
ror
popf
and
sub
loope
jo
fs
adc
jbe
fsub
stc
cmp
push
test
test
ljmp
adc
ja
lds
imul
sahf
in
push
xchg
fdivs
mov
pop
es
dec
jge
mov
mov
mov
sbb
push
das
filds
jnp
push
and
adc
pop
shrb
leave
mov
out
stos
int
dec
xchg
imul
xchg
scas
ret
pop
cmp
adc
inc
test
or
shrl
add
popa
mov
gs
dec
stos
pop
xchg
fcmovbe
mov
xor
mov
sub
dec
nop
mov
jne
cmp
xchg
dec
adc
mov
jp
adc
push
clc
lret
nop
sahf
addr16
rol
in
jmp
insl
inc
pop
into
addl
lahf
lods
jne
jecxz
scas
scas
stos
roll
addr16
xor
push
shrl
cmpsb
les
jns
in
jno
lcall
andb
data16
aam
rolb
pop
mov
push
fimull
repnz
das
push
imul
insb
ficomps
sbbb
subb
rol
ljmp
inc
int
movb
icebp
inc
popf
jmp
dec
dec
test
xchg
jnp
xor
inc
out
sahf
fldcw
cmp
or
fistpll
cmc
leave
xchg
xchg
mov
sub
cs
inc
dec
add
pop
dec
cmp
jnp
in
test
lock
mov
fsts
inc
shl
imul
call
test
je
adc
pop
movsb
adc
mov
aad
cmp
inc
mov
call
lahf
outsb
lea
idivb
into
iret
jae
lret
imul
fadds
sub
hlt
pop
or
inc
repnz
lods
cwtl
test
mov
test
fstp
and
popa
andnps
inc
or
dec
and
sub
cmp
inc
lea
inc
test
popf
fisubs
jg
jae
dec
push
jl
test
call
popf
push
dec
fimull
mov
inc
cmp
mov
mov
ds
insb
push
lcall
or
cmpb
xor
jmp
jnp
call
pop
adc
push
push
jmp
data16
add
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
xchg
out
test
je
fs
cs
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
xchg
out
test
je
in
aam
inc
pop
xor
movsb
jle
outsb
add
je
in
aam
fidivs
test
je
fs
cs
pop
xor
and
adc
add
hlt
jno
adc
scas
mov
cmp
pop
push
imul
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
dec
cmp
sub
sbb
or
xor
dec
sarl
xchg
neg
out
add
push
sub
sbb
or
inc
push
pushf
mov
je
clc
call
sub
sbb
or
pop
push
xchg
xchg
mov
stos
mov
cmp
pop
jp
dec
in
mov
lahf
stos
insl
movsb
jle
jg
dec
fbld
push
jmp
push
xchg
cmpb
pop
add
stos
mov
xchg
arpl
fsubrs
fwait
sub
in
sbb
inc
jecxz
pop
jle
xchg
js
push
out
pop
dec
sub
sbb
daa
and
mov
sub
sbb
js
mov
sbb
data16
ja
stos
xchg
mov
mulb
push
cmc
push
js
xchg
cmpsw
jbe
sahf
std
jns
mov
xor
lods
jnp
push
cwtl
idivb
stos
jge
mov
imul
jns
dec
pushf
cmpsl
mov
pop
sbb
int
enter
sub
sbb
or
pop
push
mov
mov
call
gs
arpl
push
pop
inc
dec
xor
sub
je
or
loop
xchg
test
mov
pop
subl
sbb
and
and
std
xchg
repz
shl
mov
mov
xchg
xor
push
insb
es
adc
push
xchg
mov
cmpsb
mov
clc
call
push
cmp
sub
sbb
or
inc
push
xchg
mov
cmpsb
mov
clc
call
push
cmp
cmp
jns
shll
js
test
sbb
mov
mov
pop
add
xor
idivl
pop
dec
pushf
insl
test
add
sbb
leave
push
xchg
icebp
cmp
imul
pop
aaa
outsb
and
fidivrl
shll
lock
fsubs
ljmp
inc
pusha
or
cmpsl
sarl
sbb
jo
addr16
out
out
xchg
ret
xchg
mov
push
sub
xor
repz
inc
pop
sbb
inc
and
xchg
pop
cmc
ljmp
std
mov
cwtl
ja
fdivrl
cmpsl
stc
dec
jl
add
hlt
push
jl
jbe
mov
xlat
hlt
inc
or
pop
sahf
mov
sbb
sub
pop
js
jnp
xor
jno
je
subb
rcrb
scas
fwait
shr
fmull
cli
imul
push
push
mov
pop
push
adc
arpl
cmp
shll
dec
or
add
test
in
dec
pop
adc
fdivs
aaa
push
xchg
xor
push
jp
rcll
jae
and
call
je
dec
sbb
out
test
clc
cltd
inc
insl
jp
fisubrl
aas
cmp
sti
dec
adc
daa
mov
mov
call
sub
daa
ds
xlat
lods
pop
sbb
int
ret
xlat
fs
push
test
pop
in
add
or
outsl
sarb
cwtl
ret
insb
inc
dec
fwait
dec
add
push
jne
aad
jle
xor
mov
push
adc
xor
jno
mov
pop
sub
jmp
gs
insb
mov
add
pop
xchg
sbb
stc
out
xchg
sbb
xchg
xor
pop
xor
push
int3
aad
jecxz
movsb
inc
dec
pushl
inc
sbb
lret
xchg
das
iret
cli
rolb
test
ljmp
mov
lcall
das
imul
dec
out
pop
shll
and
cmp
mov
sbb
jle
push
lock
sub
push
dec
pop
jne
jnp
sbbb
iret
push
cli
addr16
cmc
repz
fistpll
daa
cs
sar
divl
jle
mov
and
add
mov
pop
jecxz
dec
pop
movsl
inc
mov
scas
adc
clc
jns
cmc
push
scas
cwtl
addr16
add
push
cmc
adc
mov
push
pop
das
push
movd
arpl
pop
icebp
call
movsl
add
ret
fs
pushf
das
std
xchg
inc
cld
jmp
cmp
pop
or
jo
idivb
in
dec
pop
or
push
ret
cmpsl
cltd
sbb
xor
popa
push
and
and
adc
cwtl
popa
cmpsb
adc
cwtl
ret
adc
cmpsb
mov
cmpsb
mov
repnz
pop
sub
pop
inc
push
mov
xchg
stos
adc
xchg
in
enter
outsl
sbb
lock
out
fidivl
cltd
mov
cmp
sahf
inc
inc
loopne
out
pop
imul
dec
pop
sub
insl
cmp
fucomi
xlat
push
pxor
sbb
mov
fs
ret
lea
imul
pop
sbb
pop
mov
dec
pop
fildll
arpl
sub
stos
lret
xchg
jns
mov
fcoml
aas
test
int3
les
cmp
adc
mov
pushf
in
sahf
sub
pop
ss
lcall
pop
or
pop
ja
cmp
mov
adc
adc
add
cltd
sbb
jl
mov
out
lods
dec
addl
loope
sub
dec
sub
nop
mov
add
add
and
adc
adc
mov
and
mov
sbb
cmpsl
lds
pop
in
dec
scas
lret
mov
push
xor
imul
loope
mov
pop
adc
jo
aad
in
jge
push
add
ljmp
insb
std
call
test
into
jle
fldenv
sbb
mov
mov
and
fstl
dec
push
hlt
fdivrs
and
rorl
pop
cmc
ret
jns
dec
mov
push
pop
jno,pt
leave
pop
ret
jl
inc
xor
sbb
ret
or
lods
pop
addb
cmc
mov
iret
mov
test
frstor
lds
sbb
call
flds
outsb
fbld
shl
mov
test
fimuls
pop
jne
sbb
sbb
nop
dec
pusha
adc
mov
clc
ja
icebp
jae
or
je
test
test
or
dec
or
cs
test
pop
xchg
imull
repnz
adc
pop
and
dec
shlb
sbb
sub
pop
or
mov
bound
ss
gs
mov
sub
lret
xchg
sahf
aaa
inc
pop
xchg
fnstenv
mov
dec
push
mov
pop
or
scas
xchg
add
nop
loop
mov
call
pop
or
repz
add
sbb
test
shrl
mov
scas
notb
sbbb
faddp
pop
lcall
les
pop
fisubl
and
cltd
dec
mov
and
adc
sti
iret
sbb
dec
jge
out
iret
xor
cmp
add
mov
adc
cmp
pop
inc
or
lcall
xchg
cmp
fdivrs
rcrb
fucomp
xchg
pop
fldl
in
mov
clc
xchg
stos
pop
shrb
pop
out
sbb
outsb
divl
xor
mov
xchg
cld
cmp
and
cld
mov
add
fistl
in
lret
cmp
jno
and
xchg
mov
sub
shll
sbb
mov
cmpsb
inc
and
cld
lret
outsl
dec
push
pop
jge
mov
jp
or
rclb
mov
and
jno
add
pop
outsb
add
fwait
xlat
insb
outsl
dec
test
imul
xor
icebp
and
cmc
xchg
aas
mov
pop
leave
out
ficoms
rorb
add
fisubrl
cmp
push
xchg
jno
mov
enter
inc
cmp
jge
jne
imul
push
adc
scas
pop
and
and
out
pop
inc
fwait
aam
dec
mov
cwtl
dec
adc
push
adc
cmc
or
push
lea
sti
sbb
pop
and
dec
xor
out
mul
or
mov
nop
lds
out
cmpsl
add
bound
push
aas
movsl
push
xlat
dec
and
fiaddl
dec
test
lcall
cmc
mov
fiaddl
sbb
loope
cmp
dec
fsubr
sbb
bound
outsb
ds
repz
cmp
hlt
or
mov
fimull
push
test
xchg
popf
daa
ja
outsl
adc
in
cmpsb
sbb
mov
inc
sar
in
cmpsb
push
pop
stos
rcrl
xchg
sbb
inc
lds
insl
sub
insl
adc
adc
adc
negb
clc
test
mov
xchg
arpl
jge
mov
xor
arpl
sbb
jns
stos
sti
in
insl
push
pop
pop
roll
adc
dec
leave
lahf
ja
pop
inc
lods
fsubs
stos
xor
popa
pop
cmp
pushf
cmc
std
and
pop
ret
mov
xchg
pop
aam
push
cmpsb
in
dec
dec
sub
push
int
fcmovnu
mov
iret
das
mov
jo
lcall
int
sbb
pusha
jle,pt
pop
outsl
fwait
pop
adc
aaa
mov
push
dec
sub
roll
bound
sub
ja
push
pusha
push
mov
sbb
mov
call
sub
jo
clc
jg
mov
inc
test
nop
jno
mov
jo
cmp
pop
dec
push
jmp
push
sbb
inc
push
movsb
and
xchg
stc
clc
fisubrl
and
lahf
pop
int
ret
fldenv
cmp
pop
sub
insl
mov
rcrb
cmp
dec
in
mov
mov
push
fcoms
mov
scas
mov
daa
inc
inc
test
in
call
xor
sbb
iret
bound
clc
or
pop
pop
inc
lahf
js
leave
rol
jmp
inc
or
pop
push
out
jl
test
inc
cmc
js
ja
movsl
sbb
and
daa
add
mov
into
mov
ret
repnz
dec
hlt
cld
pop
pushf
pusha
out
dec
jg
push
push
out
inc
push
cmp
mov
jns
popf
outsl
cmpsl
xchg
testl
mov
fsubrs
dec
xor
fbstp
sti
xor
in
inc
xchg
aas
inc
pop
lret
jnp
enter
stos
jecxz
jae
in
xor
lret
movsl
mov
cmp
cwtl
out
mov
sbb
xor
mov
pop
shl
shll
mov
icebp
inc
mov
pop
adc
das
in
add
jb
adc
dec
mov
inc
lcall
js
cmp
lods
je
sbb
mov
jge
inc
repz
imul
js
or
lods
gs
mov
and
sahf
insl
and
inc
aas
push
shl
sbb
movsb
jg
mov
xchg
popf
dec
xchg
popf
sarl
mov
data16
fsubrs
stos
jne
jne
cmpsb
mov
ss
sarb
jge
test
js
loop
pop
pop
and
xor
repz
notl
cmp
sub
pop
dec
repnz
push
lahf
jg
stos
cmc
push
add
cwtl
inc
mov
ja
and
arpl
loopne
pop
xor
test
outsl
ljmp
and
xchg
fsubrs
adc
cmp
outsb
enter
cmpsb
adc
bound
cmpsl
push
pop
or
bound
cmp
xor
stc
jae
and
inc
fcoml
aad
shlb
pop
inc
xor
fcoms
cli
mov
out
jae
test
je
sub
aaa
out
pop
cmp
lock
out
mov
mov
cmp
in
lock
or
mov
add
pop
jl
lret
cmp
bound
int
jp
mov
lahf
cmp
mov
mov
xchg
fwait
sbb
lahf
cs
insb
mov
mov
cmp
stc
lret
sbb
pop
pushf
sti
sbb
mov
xor
scas
dec
mov
outsl
dec
sbb
or
xchg
xor
or
adc
mov
or
push
jbe
jle
mov
popf
mov
js,pt
loop
rcrl
bound
add
test
inc
pushf
mov
jae
lret
in
pop
cmp
mov
push
xor
adc
in
cltd
mov
mov
add
xchg
enter
scas
movb
scas
xor
jg
addr16
inc
push
or
in
lds
pop
push
jle
popa
ret
hlt
xor
aam
inc
inc
repz
xor
cmp
xor
cmp
fwait
xchg
mov
jnp
push
fistpl
cmpsl
stos
mov
cmp
out
lock
cmp
stos
loop
aad
dec
into
out
mov
fisttpl
jo
pop
mov
mov
pop
insl
lea
push
mov
xor
sbb
xor
sub
aas
int3
fwait
or
lret
lea
and
cs
or
in
xor
xor
jmp
pop
pop
imul
lret
xchg
lret
pop
mov
mov
mov
and
jg
mov
sub
loope
add
aas
lcall
scas
rorl
mov
les
xchg
sti
mov
add
sbb
loope
mov
ss
gs
aas
clc
inc
das
mov
pop
out
iret
dec
mov
imul
mov
cmp
shlb
jl
mov
sar
bound
ja
popa
sbb
cmpsb
arpl
lea
stc
shrb
into
cmpsb
mov
jb
roll
stos
push
sub
cmp
popf
and
daa
xor
cmovno
jge
sbb
clc
jg
cmovo
jmp
and
cmp
pop
jmp
mov
loop
mov
test
pop
xchg
shlb
ja
and
push
das
mov
fdivs
stos
dec
sub
xor
cmp
movsb
sub
pop
ljmp
sti
and
inc
mov
mov
repz
xchg
les
jle
es
jmp
push
dec
leave
call
fidivrs
and
loop
cmc
pop
jmp
int
xchg
ficompl
icebp
js
jnp
imul
loopne
packuswb
in
mov
cld
push
sub
out
push
adcl
les
jl
test
insb
scas
xor
xor
jg,pn
cld
pop
inc
dec
sarl
push
out
mov
sub
loop
clc
push
in
jo
mov
jno
lods
xchg
test
out
sub
push
aad
cmp
and
and
adc
cwtl
ss
mov
jmp
les
ja
and
cmc
pop
mov
pop
lcall
or
stos
nop
pop
cmp
inc
loop
xor
shlb
sbb
or
pop
adc
ret
pop
jne
xchg
push
cmp
bts
mov
sti
fs
pop
sub
xchg
outsl
repnz
cmpsb
mov
pop
pop
out
ret
cwtl
orb
sbb
lods
divb
adc
bound
scas
int
or
stos
fnstsw
sbb
movsl
xchg
inc
js
jge
jl
cld
sub
push
cwtl
xchg
and
jb
and
jge
sub
jp
popl
mov
mov
xlat
inc
push
lret
mov
xor
out
push
in
mov
or
or
insl
out
shrl
xchg
or
inc
xchg
adc
pushf
mov
or
sbb
inc
rorl
add
pop
shl
or
aad
loope
mov
outsl
shll
adc
mov
sub
mov
xor
adc
sbb
pop
enter
sub
in
inc
lahf
or
lea
mov
nop
cmpb
add
pop
adc
cltd
lcall
dec
clc
rcl
xor
sti
and
ss
mov
fistpl
pcmpgtw
xor
sub
xor
push
cltd
inc
mov
add
push
xchg
xchg
cwtl
dec
sbb
mov
out
popf
mov
xor
aad
jge
cwtl
rcrb
xchg
movsl
lahf
fildll
aaa
or
add
mov
test
out
mov
dec
aaa
fldcw
enter
push
add
imull
pop
jg
arpl
insl
add
cld
mov
insl
sub
out
and
jle
xorb
cmp
adc
dec
pop
das
mov
arpl
xchg
cmovp
sbb
lds
jmp
fidivrs
dec
cmp
and
lcall
push
inc
sbb
mov
adc
mov
shrl
cwtl
hlt
sti
cmc
pop
jmp
cli
gs
dec
pusha
hlt
xlat
cmpl
mov
sbb
add
fsub
les
jp
imul
push
mov
clc
inc
mov
call
pop
push
push
dec
add
sub
jne
cmp
fisubrs
fdivr
pushf
rclb
xor
mov
inc
inc
aam
jle
push
repnz
mov
test
mov
lds
ja
or
inc
movsb
nop
nop
inc
mov
shll
std
mov
scas
push
jg
dec
push
inc
dec
clc
sub
jmp
sbb
dec
std
dec
cwtl
xchg
cmc
hlt
push
repnz
int
orl
add
mov
aaa
fs
sub
push
sbb
xchg
mov
or
mov
xchg
je
push
out
shll
leave
mov
hlt
cmpsl
inc
scas
imul
sub
inc
sub
jae
aaa
cmp
pop
jbe
sub
ljmp
inc
jb
fisttps
stos
mov
jno
in
lods
jmp
fiadds
mov
pop
or
mov
lods
sbb
or
and
inc
sub
fst
adc
mov
lret
dec
mov
adc
cs
push
jns
call
into
into
rcrl
and
fs
mov
pop
les
xchg
sbb
adc
insb
fcmovnb
pop
daa
cmpl
aam
and
xchg
lods
mov
cmp
scas
loop
jne
adc
dec
bound
in
or
into
js
sub
in
inc
or
cmp
repnz
outsl
sub
outsb
je
cltd
cltd
call
cli
scas
addb
xor
insl
sbb
xor
jne
and
adc
mov
cwtl
sahf
sbb
push
dec
repnz
jg
pop
or
dec
fiadds
ret
jae
and
xlat
mov
scas
push
fisttps
adc
popa
mov
popf
data16
mov
mov
jl
push
ret
enter
dec
pop
push
push
cmp
xchg
cmp
mov
xor
pop
subb
jbe
or
mov
dec
movsb
and
out
rcrl
push
out
sbb
inc
and
aas
mov
mov
ss
popa
aas
iret
sahf
imul
cli
dec
sahf
xor
iret
push
pop
fs
push
push
idivb
pop
sbb
fidivrs
movsl
rorl
pop
jb
ljmp
lret
pop
xor
sbb
cmp
daa
push
imul
dec
mov
scas
adc
or
jbe
pop
xor
loopne
dec
fstpt
inc
mov
fwait
push
adc
icebp
ret
xor
mov
jecxz
or
leave
in
repnz
pusha
loope
dec
sub
pop
call
sbb
jo
es
add
bound
jns
pushf
scas
mov
sti
sub
push
cmp
adc
lret
popa
outsb
aas
xor
lcall
aad
scas
and
test
adc
mov
push
movsb
adc
push
xor
pop
divl
cmpsb
outsl
jp
sbb
jbe
mov
pop
sbb
pop
xorb
add
sub
ret
stc
cmp
jmp
xchg
push
movsl
insb
pop
in
sub
and
hlt
ss
vpsubsw
cltd
pop
and
idivl
into
movsb
jne
dec
jae
inc
mov
jno
lcall
jmp
pop
aam
jg
call
mov
stos
mov
addr16
jecxz
or
mov
xchg
ljmp
iret
fcmovnb
xorl
cmp
stos
mov
adc
xchg
repnz
push
ds
aad
lds
pop
add
iret
ror
mov
lds
and
jno
je
mov
pusha
test
sub
out
mov
inc
clc
cmpsb
cmpsl
push
filds
sub
push
cmp
push
adcl
lods
std
icebp
jns
push
enter
jge
js
inc
rolb
mov
xchg
fmul
mov
mov
add
repz
pop
divb
scas
adc
call
mov
ljmp
cmpsl
inc
sbb
fs
jns
push
and
aam
xor
xchg
sub
imul
mov
xlat
insl
push
mov
int
pop
arpl
pop
push
mov
lea
popf
sub
lock
out
pop
mov
lret
fcoml
or
lods
jbe
add
adc
add
cld
int3
pop
cmp
jnp
adc
xor
inc
add
dec
pop
add
jmp
lcall
jmp
cmpsl
cwtl
inc
ss
rcl
sub
pop
push
fisttps
test
cmp
and
incl
cmc
out
stos
push
push
mov
subb
push
andb
xchg
cld
inc
cli
jno
cmovle
andl
push
mov
adc
jb
mov
lahf
into
sbb
repz
ds
push
push
sub
inc
pmuludq
cmp
xor
xchg
sbb
mov
dec
cli
in
fisttpll
and
sub
jmp
pop
addl
aad
fnstcw
mov
jae
aas
out
test
call
pop
mov
xor
cmpb
mov
je
and
add
mov
mov
fmull
pop
inc
cs
lods
add
cmp
sub
jno
lret
roll
sbb
xor
mov
shrb
gs
pop
jbe
cwtl
sahf
icebp
dec
lcall
repnz
cmc
mov
mov
fcomp
push
mov
js
test
movsl
imul
mov
out
outsb
sahf
scas
add
pushf
loope
sub
xor
lods
lods
andb
mov
and
sbb
xchg
mov
nop
out
in
icebp
lahf
xor
cmp
std
mov
lcall
sub
mov
dec
inc
sbbl
cmp
std
div
nop
in
push
push
insb
and
mov
loopne
cltd
push
inc
nop
cmp
sbb
sti
jge
sbb
cmpsb
jmp
add
adc
jnp
cmp
cmpsb
xchg
lds
xchg
ret
loop
lcall
and
cmp
shlb
xchg
ljmp
es
loopne
push
add
nop
lret
sub
data16
add
xchg
insl
xchg
push
mov
or
jmp
jmp
xchg
pop
fcomip
dec
jl
pop
cmpsl
lods
push
mov
add
mov
sub
or
mov
jo
aam
ljmp
ds
and
fadd
sub
xchg
stos
push
xor
xchg
or
push
pusha
jle
int
je
insb
adc
push
scas
das
mov
sub
gs
jnp
out
sbbb
sub
ja
addr16
xor
daa
scas
xchg
ret
mov
add
popf
cmpsb
js
call
sub
pop
das
push
mov
jmpw
ret
je
push
jnp
cmp
sbb
insb
dec
or
data16
scas
jecxz
data16
jg
popf
pop
stos
mov
repnz
push
jbe
xor
xchg
mov
sbb
mov
add
jbe
jns
add
iret
xchg
imul
fidivrs
fdivr
scas
inc
xchg
es
jge
ja
jl
push
ss
insb
xchg
pushf
and
inc
out
jb
xchg
in
aaa
sbb
xchg
in
movsb
test
pop
or
lock
pop
in
cwtl
dec
cli
jg
jmp
test
fisttps
clc
outsb
or
mov
pop
sbb
cmp
mov
xchg
and
cmp
test
mov
leave
sub
cmp
imull
jb
xchg
mov
dec
push
scas
fdivrs
jp
push
jnp
enter
pop
push
gs
out
daa
jne
cmp
mov
xor
mov
out
xchg
cwtl
adc
lods
lods
gs
mov
lock
pop
pop
push
inc
push
pop
sub
or
inc
push
xchg
mov
cmpsb
mov
clc
call
push
cmp
sub
sbb
or
inc
push
xchg
mov
cmpsb
mov
clc
call
push
cmp
sub
sbb
or
inc
push
xchg
mov
cmpsb
mov
stc
ret
fcom
enter
sub
sbb
or
js
call
imul
jmp
daa
sbb
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
fiaddl
xor
and
push
and
out
rorl
fsubrs
dec
mov
movsb
jp
sbb
test
cmp
sub
add
pop
cli
and
push
lcall
xchg
push
test
jp
push
push
in
lods
ret
not
cmpsb
loop
repnz
andl
mov
cmpsl
imul
push
mov
mov
xchg
dec
mov
push
push
inc
dec
scas
pop
dec
inc
roll
sub
loop
xor
inc
mov
mov
jns
inc
jmp
mov
sub
sub
push
hlt
lret
ljmp
mov
adc
test
adc
cmp
fsubrs
test
add
inc
lcall
test
les
jmp
or
test
int3
pushl
pop
mov
and
xchg
sbb
sbb
call
mov
stos
adc
cli
cmpsl
xor
xchg
pop
xor
sub
int
fidivl
and
mov
cmp
je
ret
pop
push
push
ret
jae
add
adc
and
sub
jbe
inc
lahf
pop
cmp
fs
xchg
xor
rorl
jg
or
mov
mov
cmp
into
xor
mov
fsubrl
push
or
fisubrl
push
sahf
ja
pop
test
fs
xchg
pop
test
jp
push
sbb
or
cmp
sub
add
xor
and
push
lcall
xchg
pop
test
jp
push
sbb
or
cmp
sub
mov
call
std
aas
imull
xor
pop
cmp
mov
inc
cmpsl
arpl
and
lret
out
sbb
arpl
pop
adc
xchg
adc
and
fmul
sbb
xor
xchg
cmp
test
sub
lea
call
lods
pusha
mov
lods
mov
mov
rcll
negb
mov
nop
pop
mov
or
icebp
nop
mov
loop
dec
addb
mov
data16
les
sbb
sub
pushf
int
pop
pop
ja
pop
outsl
push
leave
xor
mov
int3
or
cwtl
mov
insl
dec
mov
dec
pop
jge
cmp
loope
sub
or
test
dec
xchg
sahf
ror
test
out
cmp
push
pop
jmp
xor
mov
add
repnz
dec
cmc
in
pop
inc
lods
push
les
mov
sbb
dec
push
sbb
push
jl
cwtl
or
dec
sarl
cmp
notl
or
repz
out
adc
inc
pop
cwtl
jb
pop
jns
hlt
incl
je
lods
cmp
popa
in
nop
enter
inc
dec
mov
jns
inc
addr16
push
sarb
jecxz
test
fdivp
andb
xor
mov
icebp
pop
add
cmpsb
jp
dec
movsbl
cs
mov
lea
cld
sbb
sbb
xor
lods
cmp
pop
in
sbbl
sbb
fcoms
faddl
mov
mov
test
xrelease
mov
xchg
sbb
jl
cmp
or
imul
pop
dec
mov
cmc
std
xor
gs
jo
fwait
mov
aas
fmul
fwait
mov
mov
lret
mov
push
imul
ret
xor
out
addr16
cmp
fsub
popa
xchg
sub
cmp
mov
and
jnp
or
pusha
mov
sbb
jl
pop
aad
and
mov
jmp
cmc
das
jae
and
push
ret
and
and
int
loope
push
cmp
daa
cmp
aad
xor
mov
arpl
in
mov
in
pop
push
push
pop
lods
mov
dec
xor
movsl
lods
sub
xchg
insl
in
jno
shrb
xlat
inc
popa
cmp
push
cld
pavgb
pop
leave
addr16
sbb
inc
shrl
push
pop
test
mov
fistpl
pop
ret
ds
jmp
sbb
and
mov
aas
jg
cmpsl
insl
aad
test
pop
nop
cmp
cmp
into
mov
inc
imul
dec
mov
jle
dec
sbb
call
movsb
ljmp
repnz
call
jmp
das
stos
dec
pop
mov
cld
sbb
pop
adc
scas
cmp
dec
ja
xlat
jg
les
test
test
dec
push
pop
xchg
push
and
sub
and
cld
dec
sbb
jo
mov
jb
scas
adc
prefetch
addr16
loope
lea
dec
cmc
std
push
movl
or
cmpsb
push
sbb
adc
push
inc
pop
jmp
xor
cld
cmpsb
add
out
mov
xchg
adc
int
stos
lea
lea
iret
sbb
test
lcall
jl
out
mov
or
mov
iret
pop
pop
cli
mov
xlat
push
sbb
xchg
aad
sbb
mov
jp
and
xorl
sub
rcrb
jns
push
fldl
pop
push
lods
push
dec
sub
int
ljmp
sbb
xchg
add
ljmp
outsl
int
jo
xor
imul
dec
xor
enter
imul
test
adc
cld
pop
pop
pop
inc
mov
pushf
divb
push
leave
mov
inc
loop
xor
imul
mov
es
sbb
ret
out
jno
pop
inc
incl
lods
arpl
sbb
ret
and
sub
add
dec
pop
dec
or
adc
add
popa
lcall
mov
aad
mov
out
push
sub
adc
daa
mov
pusha
insl
mov
aam
dec
sub
push
popf
sbb
outsb
adc
out
adc
pop
int3
stc
xor
rdpmc
add
rorl
xchg
sbb
pop
ds
mov
negl
adc
in
push
sub
in
out
inc
lret
mov
push
adc
jnp
lock
aas
sbb
xchg
es
lods
testb
test
pop
mov
add
iret
pushf
or
scas
mov
mov
adc
in
test
xor
cmc
mov
lods
jo
mov
out
das
std
xor
lret
out
adc
fsubp
fildl
dec
push
lret
pop
mov
mov
xchg
mov
std
insl
jp
pop
out
cltd
pop
mov
cmpsb
js
leave
sbb
std
das
call
adc
inc
stc
or
movsl
imul
add
push
je
mov
es
out
mov
jp
sbb
pop
leave
mov
dec
icebp
mov
out
mov
rsm
lcall
xor
sub
xor
in
sbb
es
or
xchg
mov
sahf
popf
jns
nop
mov
test
pop
fwait
hlt
sub
lret
les
cmp
and
cmc
xchg
inc
jnp
lret
in
cwtl
in
cmc
orb
sub
mov
pusha
add
popf
xchg
lods
xor
iret
cmp
daa
mov
lret
add
adc
clc
dec
gs
and
adc
cltd
fwait
push
xchg
cwtl
sbb
or
fcomip
sbb
imul
andb
jns
js
add
mov
pop
cmp
mov
dec
pop
ret
lcall
pop
push
dec
mov
aas
mov
scas
stos
mov
mov
fisubrs
or
mov
ret
out
mov
loop
cmpsl
rclb
je
push
sub
dec
subl
jge
popf
dec
xlat
sbb
repz
sub
imul
jnp
mov
fcomps
inc
fdivl
pop
jle
sub
push
dec
mov
mov
fcoms
inc
ret
das
test
stos
sbb
mov
push
out
test
inc
or
pop
dec
andb
aaa
adc
or
push
xor
adc
mov
xor
shrb
cmp
mov
rclb
sub
shr
xor
cmp
out
sbb
jle
mov
ja
sarb
out
xlat
inc
mulb
out
mov
cmp
ja
fadd
adcb
addr16
lea
sbb
loop
lds
arpl
mov
jae
add
mov
shrb
cmc
sarl
rorl
cmp
lea
mov
shl
stos
pop
sbb
pop
jne
sub
jbe
stos
fstpt
insb
aas
shlb
mov
arpl
jg
outsw
mov
in
fnstcw
pushl
xchg
mov
icebp
pop
in
and
cmp
mov
jns
test
sbb
fidivrl
xchg
cs
sbb
cmc
insl
mov
pop
packsswb
cmp
rorl
jno
imul
cmp
pop
aam
inc
push
xlat
imul
aaa
xor
xchg
xchg
dec
mov
cli
cmp
xor
out
clc
jecxz
movsb
xlat
push
jecxz
cmp
jp
sbb
inc
fcmovb
inc
xchg
add
cmp
fdivrs
cli
lods
xor
insl
ret
sar
xchg
cmp
jb
dec
xchg
ret
enter
add
xor
icebp
mov
movsb
mov
mov
xor
sbb
pop
xor
lods
inc
cmpsb
stos
dec
push
cmp
test
mov
icebp
mov
dec
dec
orb
push
jne
adc
and
adc
xchg
and
jns
ret
loope
xchg
jecxz
icebp
test
xchg
push
sti
sbb
iret
sbb
xchg
ja
mov
into
jae
xor
fisubl
pushf
orl
subb
mov
push
jl
insb
orb
xor
sub
xchg
movsl
cs
xchg
jp
jbe
inc
push
lret
out
dec
rcll
fsts
mov
test
pop
add
stos
jmp
rcrb
out
fs
jno
sub
and
jno
jg
cli
mov
mov
dec
mov
cli
sbb
jp
xchg
lahf
call
jl
js
dec
test
enter
stos
cmp
adc
xchg
pop
lahf
mov
outsb
shrl
adc
mov
push
sahf
push
push
stos
push
cmp
fsts
test
mov
sub
in
jno
out
push
dec
mov
xchg
jmp
in
loopne
scas
mov
sti
push
enter
inc
pop
cmp
shlb
push
sahf
add
jl
das
incb
arpl
mov
xchg
les
repz
outsb
mov
stos
cmpsb
filds
adc
repz
mov
scas
jno
inc
out
add
dec
imul
or
push
pop
jmp
lock
cli
mov
mov
stos
mov
loope
andl
loop
inc
xchg
push
movsl
fs
lcall
jne
inc
mov
inc
mov
into
mov
dec
jne
js
fisubrl
add
ret
popa
rcl
jmp
sbb
lret
lcall
call
nop
outsl
ljmp
pop
adc
rorl
sub
mov
xor
lds
scas
mull
addb
mov
movsl
push
outsl
leave
aaa
cmpsb
cli
sub
imul
arpl
ss
sub
enter
mov
mov
sbb
inc
sbb
sub
movsb
jle
fs
loope
loop
cmp
inc
enter
cmp
cmp
sub
add
dec
loopne
sub
repz
xchg
cmp
mov
sarl
sub
jle
mov
xchg
or
loope
push
gs
sahf
fistpll
pushl
ss
inc
xchg
out
and
mov
mov
push
jl
cmp
pop
mov
lret
and
xchg
outsl
jbe
rcll
mov
pop
pop
mov
and
jp
in
pop
cmp
pop
ljmp
scas
orl
fwait
mov
mov
push
inc
mov
std
jbe
sbb
adc
aas
mulps
scas
pop
xor
daa
pop
lods
sarl
mov
shrb
sbb
test
jne
pop
xchg
pusha
lock
mov
jo
jo
xor
pop
clc
or
jae
inc
push
cmc
dec
inc
jno
sub
push
adc
ficoml
lret
jp
mov
push
jns
dec
ljmp
xchg
inc
mov
int3
mov
inc
iret
mov
lcall
sub
xchg
adc
aas
mov
push
lret
and
xchg
into
int3
or
cwtl
fistpll
je
xor
or
xlat
in
test
scas
lret
xchg
lret
mov
xchg
mov
jp
mov
scas
out
sub
inc
dec
dec
ja
push
add
add
sbb
outsl
popf
sbb
enter
jo
cmp
dec
pusha
test
scas
aam
sub
mov
push
mov
test
add
and
shlb
inc
aaa
or
cli
pop
insl
repz
lds
jo
lcall
clc
clc
push
arpl
daa
cmp
loop
xchg
sbb
test
adc
out
mov
aam
lds
lcall
fadds
xor
in
cmp
dec
ss
push
sub
pop
inc
mov
std
fdivp
adc
push
push
xchg
sbb
imul
int
outsb
mov
xchg
data16
scas
mov
incl
sbb
push
sub
jb
fcompl
or
and
test
cmp
lods
sub
addr16
in
movsl
fwait
shll
mov
popa
jo
sar
mov
inc
sub
in
sub
sbb
imul
and
jmp
insb
rorb
inc
jg
inc
jmp
fwait
push
push
outsb
jno
jno
cmc
fistpll
push
gs
xor
dec
dec
pop
jp
dec
int
ss
mov
push
ljmp
adc
and
ss
adc
daa
outsl
cmpsb
mov
sti
test
dec
lea
push
popf
movsl
mov
xor
hlt
mov
bound
das
rcrb
push
mov
xor
pop
ds
or
fs
inc
sti
xchg
testb
or
mov
mov
and
daa
add
fdivrs
cltd
in
cmpsl
inc
inc
sbb
sub
pop
push
test
jle
movl
jbe
push
sub
sub
clc
mov
sub
shrl
aaa
adc
call
or
lcall
in
mov
fmuls
jns
stc
test
dec
mov
cli
test
fmull
mov
add
dec
and
dec
jle
in
mov
and
xor
fcmovne
loop
in
add
imul
sbb
imul
pop
mov
mov
push
mov
lds
dec
jecxz
mov
fadds
push
addl
pop
test
aas
jne
insb
cli
les
aaa
mov
cmp
ds
cmp
xor
adc
and
jno
mov
xchg
jecxz
pop
push
ljmp
mov
mov
cmpb
ja
cltd
std
cmpsb
addl
xchg
sub
xor
push
arpl
jae
bound
mov
repnz
into
into
dec
lret
mov
xchg
inc
jb
cmp
dec
push
bound
sarl
out
idivb
cld
push
inc
insl
adc
inc
popf
jmp
adc
mov
test
pop
add
mov
dec
pusha
subb
mov
jge
xor
sarb
insl
roll
xchg
add
mov
ret
mov
das
fdivl
push
cwtl
adc
mov
test
push
mov
repz
mov
push
ret
shll
rcrb
add
into
ss
xchg
sbb
das
xor
ffreep
or
in
or
movsl
loopne
clc
xchg
popa
cmpsb
lahf
cli
mov
mov
inc
push
jp
push
fdivl
clc
scas
cmp
adc
arpl
fmuls
adc
mov
push
in
mull
test
test
cmp
insl
push
gs
xor
rorl
inc
pop
and
imulb
fisttpll
jmp
cmp
rcrb
jo
fs
cmpsl
lock
xchg
dec
jp
pop
shr
in
out
pop
push
aad
xchg
lods
in
mov
sbb
popa
insl
pusha
adc
jno
sub
pop
jle
ss
xor
xlat
clc
jge
xlat
cmp
rcr
sti
fimuls
jne
push
out
idiv
outsl
push
cltd
int
add
loopne
fcomps
xchg
int
mov
jle
lods
sarb
add
clc
xor
leave
mov
outsl
enter
shl
mov
add
outsb
dec
ss
sarl
shlb
ss
cmpsb
push
inc
inc
mov
gs
pop
test
mov
dec
push
mov
xor
adc
enter
aad
out
scas
ds
les
enter
shll
icebp
push
mov
fadd
shrl
jns
int3
mov
lods
lcall
push
in
push
ret
outsl
pop
jp
into
cmp
mov
fwait
jl
fstps
jne
mov
pop
pop
imul
pushf
jle
dec
pop
mov
icebp
sub
or
call
cli
cmpsb
std
pop
mov
or
or
push
xchg
bound
mov
mov
incl
mov
add
pusha
movsb
mov
ret
add
add
outsb
push
outsb
mov
push
adc
sub
dec
cmp
cli
out
rcr
cmpsl
or
adc
cmpsb
add
xor
jecxz
outsb
jl
jmp
into
xor
jl
test
inc
je
fcom
inc
or
dec
test
push
popa
shlb
cmpsl
xchg
add
repz
outsb
lcall
mov
xchg
pop
mov
or
sub
sub
loope
std
sar
test
jp
popf
inc
dec
ds
in
aaa
cltd
xor
mov
movsb
xor
inc
inc
popa
inc
xchg
push
insl
or
dec
push
pop
outsl
mov
fiaddl
or
cmp
adc
outsl
pop
inc
or
jns
leave
std
movl
imul
dec
gs
pop
cmp
mov
xchg
std
test
es
ds
cmpsb
lcall
inc
mov
inc
mov
ficomps
bound
push
ror
lret
xorb
or
xchg
ja
jecxz
sahf
push
dec
pop
dec
push
sub
xchg
pusha
push
rorb
shlb
daa
mov
and
dec
pop
jge
int
lods
enter
je
loopne
or
clc
and
mov
xchg
mov
data16
jno
jnp
jnp
popf
pop
imul
push
push
mov
imul
out
xor
jle
data16
jo
sbb
pop
mov
sbb
jle
in
pop
sarb
je
jno
jno
xor
push
mov
test
and
cwtl
push
inc
jmp
add
jmp
push
insb
clc
stos
xchg
xchg
jnp
rcrb
add
and
lods
inc
mov
dec
pushf
inc
xchg
or
stos
dec
inc
xchg
jbe
popf
mov
in
dec
fbld
jae
mov
mov
cmp
push
ret
int
aam
push
inc
lcall
fcoml
inc
fbstp
fnstcw
inc
mov
aas
scas
push
movsb
adc
xchg
cmpsb
pop
shll
fwait
dec
cmp
jno
test
mov
jb
divl
in
inc
leave
sbb
add
inc
notl
arpl
dec
mov
xor
xchg
sbb
mov
in
lret
data16
cmpsb
and
and
jmp
or
ficoml
mov
into
mov
pop
js
mov
xchg
push
and
push
loop
leave
mov
sbb
and
mov
ficoms
rclb
add
jbe
sti
push
inc
int3
xchg
call
pushf
sub
mov
rclb
pop
inc
test
sub
jbe
xor
adc
mov
outsl
and
xchg
sahf
jg
and
nop
pop
push
adc
sti
push
push
jle
mov
xchg
pushf
pop
cmpsb
jl
dec
arpl
mov
inc
arpl
and
push
decl
divb
xchg
or
push
ffreep
pusha
push
je
shrl
cmc
leave
lea
pop
xlat
cmp
jecxz
cmc
inc
das
sbb
mov
mov
xor
sbb
cmp
cli
mov
add
lcall
into
test
xchg
jbe
sub
icebp
cmp
adc
fildl
addl
xchg
jp
std
insb
out
pop
jbe
lcall
xchg
jecxz
inc
loop
nop
sbb
sbb
xchg
cmpsl
cwtl
mov
sbb
test
dec
mov
jg
test
add
push
popf
ja
add
pop
xor
fs
jge
jle
cmp
mov
addr16
aad
add
cmp
test
mulb
ja
and
adc
movsl
fisubrl
clc
push
dec
clc
hlt
add
inc
fsubrs
or
inc
test
lods
int
sbb
adc
pop
push
mov
cmp
push
fxtract
ja
mov
jg
int3
test
jae
add
lahf
pop
push
js
mov
xchg
push
inc
push
pop
aam
jecxz
dec
xchg
xor
ljmp
jp
cwtl
int
dec
jmp
rcl
sub
push
pop
add
add
adc
and
imulb
pop
jp
shl
xor
loope
adc
rclb
sbb
jl
out
sbb
cmpsb
pop
lret
jne
roll
mov
cli
into
fcmovnbe
mov
push
ss
xor
filds
dec
fidivl
dec
fsubrs
mov
or
cli
xor
rcrb
fwait
imul
imul
mov
jecxz
mov
jno
push
ret
or
push
sbb
in
and
mov
pop
test
sbb
ret
and
popa
daa
push
push
cmpsl
fsubs
mov
int3
mov
pop
shrb
mov
sti
mov
call
imul
push
sahf
cs
mov
ret
sbb
sub
sti
int
jbe
lds
outsl
test
mov
xor
inc
scas
dec
sub
mov
push
fsubs
pop
xor
fstpl
pop
cmp
shlb
jmp
cmp
fsts
lcall
mov
shll
shrb
popf
dec
out
add
insb
sbbl
jp
inc
out
mov
jp
cmpsb
adc
cld
int3
mov
mov
mov
xchg
sub
mov
cmpl
push
daa
mov
push
das
movswl
lods
test
mov
pop
fnsetpm(287
pop
lea
cmp
pusha
setbe
js
push
mov
dec
xor
ljmp
inc
and
cmp
xor
mov
lea
test
pop
xor
out
jno
ret
dec
pop
sarb
jae
jmp
sahf
inc
lea
xor
test
lahf
jecxz
lods
add
loope
ss
sbb
loopne
call
cmpsb
xor
pop
pop
sbb
mov
movsb
cmp
cmp
pop
add
ja
add
or
mov
lret
mov
mov
stos
jno
repnz
ja
cmp
iret
and
jge
das
push
fdivrl
ret
push
mov
insl
jg
and
gs
push
mov
loop
movsb
sub
xchg
fldt
and
repnz
loope
iret
jb
mov
popf
pavgw
nop
test
fs
sub
aad
insl
pop
loope
rcr
pushf
push
lahf
xchg
and
cltd
cmpsb
je
loop
xchg
ret
mov
jecxz
jbe
mov
push
nop
jmp
insb
stos
or
add
mov
push
cli
push
lret
cs
dec
dec
mov
fiaddl
je
stc
imul
push
arpl
mov
pop
in
in
lea
insb
jg
enter
jl
inc
and
jae
fstpt
jecxz
loope
adc
add
jnp
cwtl
jne
test
subb
pop
clc
mov
popf
idivl
out
mov
xor
add
in
sbb
movsb
js
jl
pop
loopne
push
out
mov
inc
inc
jg
push
rcr
or
fsts
jnp
inc
push
cmp
pop
sbb
pop
mov
fstl
aam
pop
dec
and
xchg
aaa
loope
out
jns
dec
inc
xor
icebp
xor
cmp
lret
and
push
lcall
xchg
pop
test
jp
push
sbb
or
cmp
sub
add
xor
and
push
lcall
xchg
pop
test
jp
push
sbb
or
cmp
sub
xor
push
cli
and
les
movsb
stos
xchg
pop
test
jp
outsb
aam
aam
hlt
ds
add
pop
into
outsb
incb
push
lcall
xchg
pop
jnp
push
jp
sbb
or
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
