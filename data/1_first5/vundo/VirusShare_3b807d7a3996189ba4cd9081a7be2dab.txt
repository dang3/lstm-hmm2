jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
add
pushf
mov
jle
test
or
add
add
add
pop
add
add
add
add
add
add
add
add
inc
add
add
add
test
inc
add
add
add
popa
add
arpl
incl
cmp
add
add
mov
mov
lcall
add
push
add
add
add
sbb
pop
add
add
add
push
add
add
add
add
add
add
inc
add
test
pop
add
add
call
add
add
pushf
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
call
add
push
add
mov
popa
add
mov
call
add
lods
add
add
dec
add
add
add
inc
add
add
add
mov
mov
add
add
add
fildl
popf
add
mov
dec
add
inc
add
popa
add
and
add
add
mov
arpl
mov
add
and
pop
add
add
mov
cmp
mov
add
popf
add
sub
lods
add
add
sub
cmp
mov
or
dec
add
arpl
in
pop
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
call
add
add
add
add
add
add
add
pop
add
mov
repz
add
mov
push
add
add
add
add
add
add
mov
les
popa
add
jl
push
add
add
add
add
add
add
add
pop
add
add
add
add
mov
popa
add
mov
add
add
add
add
mov
test
aaa
add
add
mov
popa
add
dec
add
add
add
popa
add
add
add
movsb
add
add
add
add
add
add
mov
nop
add
add
add
add
add
add
mov
rolb
add
add
add
add
add
call
add
adc
and
push
add
add
add
or
or
mov
add
add
add
add
rolb
push
add
add
add
or
fiadds
cltd
add
add
add
sub
fwait
add
add
add
add
add
add
add
add
add
or
and
rolb
add
sub
and
aam
mov
inc
add
add
add
add
add
add
mov
pop
add
add
sti
add
filds
mov
mov
test
add
add
add
add
add
filds
push
add
push
add
add
add
mov
daa
add
xchg
add
add
mov
add
mov
pop
add
test
filds
mov
aaa
add
push
add
add
verr
fildl
jb
movsb
add
xor
cmc
add
add
call
add
popa
add
add
add
mov
pusha
add
add
add
in
dec
sub
jmp
dec
cmpsl
mov
inc
jne
mov
fdivr
inc
jg
outsb
mov
dec
adc
jge
in
pop
xor
dec
xchg
mov
lret
arpl
stos
mov
mov
sbb
and
mov
repnz
dec
cwtl
jge
xor
data16
out
add
out
cmp
inc
adc
sbb
out
in
notl
pop
je
pop
push
fists
jmp
jb
push
push
or
addr16
test
popa
out
and
jecxz
push
mov
shll
pop
sub
or
rolb
imul
xchg
test
fwait
mov
cmp
dec
push
xchg
and
jmp
inc
xchg
fs
into
jecxz
mov
jnp
lds
insb
decl
jno
pop
push
mov
sbb
inc
xchg
mov
aad
imul
ja
lods
mov
dec
mov
and
mov
fsubrl
dec
xor
pop
sub
js
ss
xchg
popa
and
pop
inc
dec
rcll
inc
lcall
loope
sarb
push
jnp
iret
inc
add
cmc
lds
out
xlat
adc
lahf
dec
iret
imul
jg
psrad
add
daa
adcl
popa
movb
cmpsl
filds
loope
lock
ficoms
mov
xchg
movsb
mov
pop
repz
call
das
adc
xchg
xorb
in
xor
shl
inc
adc
pop
ds
xchg
popf
mov
ret
pop
outsb
sbb
cltd
aad
sub
or
dec
mov
loop
mov
test
pop
insl
push
mov
xor
movsb
add
mov
adc
sbbl
sub
xchg
int3
dec
pop
jo
sbb
popl
aaa
sbb
dec
mov
xchg
xor
out
cmpsl
push
rclb
mov
scas
loopne
cmp
fadd
or
mov
sub
mov
push
dec
aaa
and
stos
mov
nop
pop
fcomip
inc
das
test
xorb
mov
cs
hlt
sbb
loopne
idivb
ljmp
sub
cwtl
mov
pop
fistpl
mov
out
js
adc
pop
shl
fwait
jbe
je
aas
mov
mov
idivl
and
add
rcrl
mov
add
push
fistl
out
sub
dec
fistl
cmp
cmpsl
test
and
in
xor
xor
inc
adc
arpl
xchg
mov
cmc
je
imul
push
sti
psubsw
cmp
add
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cwtl
ja
sub
inc
repnz
js
or
pop
mov
cwtl
out
ret
mov
sub
xchg
clc
xchg
ja
sub
inc
dec
aaa
pop
aaa
push
sti
cwtl
out
xlat
mov
movsl
call
outsb
sbb
dec
cmp
cs
aas
push
negl
mov
clc
mov
enter
js
sbb
xor
ret
js
xchg
hlt
dec
call
cmpsl
shr
les
sub
push
xchg
in
pop
pop
jns
dec
inc
push
aam
call
addr16
xchg
stc
loopne
add
jmp
or
fs
sbb
or
and
pop
mov
enter
inc
cmp
sbb
imul
cwtl
or
je
mov
sbbb
push
dec
sub
repnz
cmc
repnz
jnp
sub
push
push
or
sbb
das
mov
mov
les
add
mov
adc
mov
mov
xor
inc
jmp
pusha
sbb
dec
cmp
aaa
pop
daa
push
negl
fmulp
scas
fdivrs
jl
pop
adc
or
sbb
out
rcr
mov
test
mov
push
push
pop
push
pop
and
sub
arpl
xor
shlb
stos
cmpsl
mov
ja
addr16
xor
add
add
daa
push
negl
enter
call
ja
sub
inc
dec
aaa
pop
daa
push
negl
enter
call
ja
je
shrb
cmp
ret
sbb
lock
add
sbb
mov
jg
cmp
fstps
pop
and
test
xchg
repnz
ror
pusha
jp
mov
jmp
add
dec
rol
test
pop
mov
adc
es
loope
xchg
xchg
mov
add
add
nop
das
xor
sbb
imul
and
mov
sbb
das
sbb
lock
lock
adc
mov
and
and
icebp
stos
fmull
mov
mov
sbb
stos
div
out
or
inc
dec
lods
ret
sub
into
rclb
clc
push
in
fadd
or
dec
xchg
aaa
cmp
mov
jle
cs
out
lahf
lock
mov
fdivr
data16
insl
jl
pop
sub
pop
das
xchg
shlb
pop
inc
xchg
ss
nop
add
mov
xlat
stc
xchg
aad
dec
sbb
test
cmp
movsb
lods
adc
hlt
cmpsl
jnp
xor
arpl
test
xchg
in
jmp
add
xchg
adc
sub
mov
push
iret
inc
std
movsl
push
jecxz
sbb
xor
sub
fwait
mov
lds
add
add
repnz
sar
das
std
mov
pop
call
inc
int
and
cli
inc
popa
jle
cmpsl
out
pop
mov
cmp
pop
jl
jmp
cmp
and
sti
dec
shrl
mov
jmp
aas
or
pop
inc
push
mov
pop
mov
push
fcmovu
inc
aas
push
cmp
cld
and
call
arpl
cmc
pop
cmc
pop
xor
rdtsc
inc
push
jb
add
das
sub
mov
repz
repz
out
sub
sbb
fwait
cmp
js
repz
cmpsl
inc
xor
jb
sub
ljmp
in
int3
nop
scas
test
inc
or
dec
dec
addb
dec
push
adc
jg
lock
cmp
lcall
mov
mov
pop
mov
xor
xorl
neg
popa
cmc
dec
sub
inc
dec
movsl
push
sub
scas
stc
dec
mov
cld
pop
out
xchg
repnz
cmpl
fistpll
addl
inc
and
fisttpl
cs
cmc
fisubs
xlat
xchg
or
dec
fbld
add
andl
imul
push
jg
mov
pop
aad
cmp
adc
movsb
aaa
sbb
xor
les
xlat
xchg
and
jb
movsb
mov
js
int3
test
mov
rcll
int
pop
xor
cmc
mov
das
mov
cmp
xor
fistpl
jecxz
lcall
ja
dec
mov
enter
mov
sub
mov
leave
movsl
inc
sarb
out
fdivrl
adc
push
mov
pop
ret
subl
xchg
popf
sbb
sti
mov
fbld
add
call
adc
mov
idivl
ljmp
dec
cmp
sbb
sbb
loope
fdivr
mov
dec
push
mov
xor
insb
inc
shll
rol
xchg
and
mov
cwtl
pop
mov
cmp
scas
gs
cmp
nop
cli
or
add
jns
arpl
mov
mov
pop
adc
add
out
scas
dec
xchg
sbb
xchg
call
pop
jbe
int3
test
jmp
mov
pop
bound
mov
out
ja
fstps
sub
dec
inc
popa
xchg
lods
sub
jns
mov
pop
sarb
push
out
daa
movl
lea
adc
inc
aad
cli
sbb
or
mov
cli
dec
jo
dec
sub
packsswb
fistps
cli
fidivl
stos
in
inc
jl
jnp
stos
mov
scas
push
mov
in
test
xchg
or
sub
cmp
push
lods
push
inc
cmp
shlb
sub
les
dec
pop
xor
jno
add
sahf
je
jmp
pop
jp
sbb
sbb
leave
xlat
loope
push
and
add
push
cltd
sbb
push
stc
icebp
ror
jbe
adc
sub
iret
hlt
pop
dec
cli
rclb
mov
xchg
clc
cmpl
outsb
adc
dec
and
cmpsb
rcrb
popf
adcb
dec
cmp
test
inc
iret
imul
cltd
lock
jp
int3
sti
jle
add
mov
jg
sub
mov
cmp
ret
adc
sbb
jge
fildl
push
std
cmp
hlt
ja
loopne
or
adc
inc
jle
push
mov
cmp
rolb
movsb
das
leave
jg
cmpsb
xlat
nop
ljmp
add
push
adc
mov
mov
testb
adc
test
mov
clc
sub
jge
dec
jns
pop
hlt
sbbl
loopne
and
call
stos
enter
enter
clc
je
call
notb
lret
push
xchg
sahf
sub
andb
les
aaa
ja
fldl
stos
unpcklps
stos
mov
adc
mov
mov
sub
loop
pop
add
or
mov
adcb
xchg
test
ret
or
sbb
lcall
jmp
lock
push
cmpsl
fadds
mov
and
icebp
xor
lcall
lahf
stc
test
lock
sub
mov
fnstsw
push
sub
cmc
ret
mov
or
mov
into
or
movsb
int
cltd
adc
sub
add
push
sub
jns
xor
stos
mov
fsubp
test
mov
jns
movsb
icebp
lds
xchg
xor
sub
shll
sbb
mov
pusha
lret
and
fimull
ret
add
test
aad
add
iret
adcb
fidivs
orb
xchg
rcrl
jmp
pushf
xor
dec
push
inc
fwait
jns
and
cmp
jp
mov
outsl
jp
enter
icebp
push
jns
cmp
cmp
xchg
pop
xorl
mov
sbb
xchg
pop
mov
inc
push
lcall
xchg
pop
push
push
sbb
add
loope
push
pop
movsl
add
cmp
movl
in
lods
sub
cmp
test
lods
cmovbe
sti
xor
mov
adc
and
je
pop
sbb
push
inc
lods
ficomps
push
lret
jno
mov
mov
loopne
lods
xor
cmc
loopne
cmp
out
mov
mov
sbb
mov
adc
mov
sub
push
dec
mov
mov
inc
js
negb
test
icebp
hlt
sbb
dec
int3
lret
pop
ja
fs
adc
fstps
adc
popl
bound
pop
je
push
mov
mov
mov
ljmp
call
ljmp
js
movsl
dec
sub
aam
test
repnz
out
xor
fsubrs
push
ficomps
mov
imul
xchg
or
aaa
mov
lods
scas
clc
leave
dec
or
xchg
inc
jnp
in
scas
cmp
arpl
sti
sbb
push
add
fisttpll
movsb
ret
ja
ret
push
inc
mov
fistpl
test
nop
and
sub
addr16
int3
and
in
repnz
pusha
pop
xor
xor
jle
jg
pop
mull
sub
dec
or
loope
pop
cmp
outsl
push
shl
data16
and
xor
push
out
popa
gs
adc
cmp
add
inc
sbb
sbb
lods
and
inc
das
ja
into
cmp
popf
lds
mov
stc
aam
adc
mov
fcmovnbe
scas
jae
jmp
mov
into
push
cmc
mov
scas
or
cmpsb
inc
inc
js
cmp
insl
testl
repz
xor
sub
lods
negb
xor
stos
xchg
xchg
repz
mov
mov
aaa
mov
mov
push
push
std
movsb
mov
rclb
je
shll
xor
aaa
cs
inc
xchg
cltd
imul
out
xchg
arpl
cltd
jne
push
loope
cmp
xor
jg
imul
sub
repnz
or
xchg
dec
xchg
ret
pop
push
inc
mov
imul
mov
fisubrs
sub
clc
daa
aaa
fisttps
cmp
push
push
dec
mov
sbb
cmp
fiaddl
outsl
notb
dec
leave
add
push
popa
mov
ret
push
adc
shlb
xor
inc
sti
dec
push
test
rol
in
xor
out
add
scas
cmpl
push
aad
insl
sub
data16
xchg
fs
in
mov
mov
add
and
daa
lods
mov
jmp
sbb
aaa
lret
add
adc
mov
lahf
sbb
xor
and
icebp
cmp
jo
out
pop
mov
pop
xor
push
jg
push
outsl
push
sub
xor
ja
push
cmp
xchg
or
fwait
scas
inc
mov
stos
call
addr16
daa
or
inc
popa
shrb
add
jp
lcall
inc
sub
pop
pop
xchg
jne
rcll
dec
push
cmp
jnp
lock
ret
xchg
insb
inc
xchg
adc
jmp
sbb
loope
jmp
sbb
xchg
and
push
cwtl
and
pop
push
aaa
jno
cwtl
adc
test
mov
mov
sbbl
add
scas
xchg
mov
push
cmpsb
adc
pop
test
outsb
repnz
lods
add
into
add
push
or
les
jbe
outsl
je
lret
sbb
mov
mov
sub
add
in
enter
mov
ret
cmp
loopne
hlt
add
dec
scas
pop
cmpsl
dec
inc
arpl
and
sub
xchg
jmp
imul
adc
mov
push
pop
or
rclb
negl
repz
lret
inc
mov
mov
je
repnz
mov
mov
into
pop
sbb
adc
adc
push
mov
imul
sub
mov
mov
out
jnp
outsb
pop
lret
or
je
jmp
ret
imul
push
pop
jg
add
xchg
aam
xor
sbb
sti
mov
dec
ja
stos
cs
and
das
sbb
adc
ja
lods
leave
je
les
jecxz
pushf
and
repnz
orb
test
adc
call
int
sarb
xorb
jp
arpl
fdivs
add
cmc
std
orl
lods
sub
lahf
xor
cli
jnp
bound
ret
jmp
mov
dec
test
dec
dec
lock
jbe
popa
lods
test
pop
fadd
gs
lret
jb
pop
xor
popa
addr16
mov
int3
mov
jnp
inc
test
add
xor
mov
add
adc
out
std
xchg
lret
jbe
aam
enter
push
push
or
pop
dec
lea
lods
das
pop
xor
das
divb
dec
jae
push
lret
enter
or
les
aaa
loopne
leave
mov
hlt
pop
mov
sbb
sbb
jmp
jae
or
imul
xor
ss
inc
and
mov
shrl
sti
cld
das
rolb
jg
shl
aad
adc
mov
jb
mov
int3
subl
loop
lea
js
in
lods
jge
jnp
or
js
jecxz
sub
xchg
pop
ljmp
hlt
inc
add
scas
adc
push
sbbl
xchg
cmpsl
addl
adc
lret
popf
add
add
and
xchg
cwtl
add
je
inc
mov
mov
push
adc
int
rclb
mov
std
xchg
ds
sub
xchg
dec
rcr
decl
ret
lcall
cltd
mov
jp
pop
cld
lods
mov
divl
cltd
cmpl
filds
pop
mov
cmp
xchg
pop
xchg
sub
repz
mov
xor
cld
push
popa
or
hlt
adc
xchg
xor
push
fucomp
inc
pop
mov
stc
push
sbb
mov
push
dec
push
pop
std
movsl
sbb
push
cmp
sub
push
ret
add
xchg
cmc
mov
inc
ret
cmp
cmp
xor
shl
or
aam
mov
mov
ja
or
mov
pop
or
out
pop
xor
sub
push
dec
push
not
push
popa
adc
rcr
into
and
jg
in
push
inc
mov
xchg
mov
in
int
int3
out
push
jb
popa
mov
pushf
mov
xor
lret
fs
or
and
ret
and
fsubs
in
les
jb
pop
mov
cmp
icebp
pop
lret
cmp
sub
cmp
or
jb
mov
xchg
push
xchg
xchg
push
cmp
pop
dec
sub
lea
hlt
inc
inc
push
lea
inc
and
ret
mov
leave
bound
xchg
lret
jae
push
into
insl
aas
jecxz
mull
cmp
pop
mov
ret
addb
pop
xor
or
stos
cld
hlt
mov
int3
aaa
aas
push
dec
inc
pop
pop
lret
iret
bound
mov
sbb
jecxz
test
sbb
jno
add
jmp
lods
imul
mov
mov
lcall
xchg
jecxz
mov
shrb
inc
dec
xchg
xchg
cld
je
sub
inc
fsts
adc
movsb
xchg
mov
cmp
lock
inc
das
fdivr
pop
mov
inc
jp
or
pop
or
inc
mov
jl
orb
sbb
bound
in
jae
add
scas
push
ljmp
add
sbb
dec
pusha
stos
push
loopne
adc
and
std
mov
shlb
pop
loope
fcoms
or
je
lret
cmpsl
adc
push
sbb
les
ret
repz
addr16
push
test
sbb
and
pop
ret
sub
adc
lahf
repnz
cmpl
lcall
and
insb
cmp
sbb
ljmp
andb
cmp
add
in
jmp
cmp
mov
call
cmp
xor
jecxz
mov
test
push
sti
jle
ficoml
daa
cmp
and
mov
loopne
loop
mov
jb
or
sub
add
mov
andl
movsb
and
or
mov
mov
xchg
shll
sub
das
push
sbb
int3
mov
out
stc
and
pop
out
jo
push
cltd
add
das
inc
pop
aaa
sarb
and
out
insb
dec
leave
js
push
dec
lret
test
repnz
mov
inc
push
popw
adc
test
int
push
cmp
mov
jb
mov
inc
sbb
mov
jg
mov
out
mov
add
inc
in
ret
js
pop
cwtl
test
leave
icebp
push
pop
sub
xor
or
outsl
scas
adc
lods
scas
mov
or
inc
add
push
push
dec
pop
repnz
jl
ret
repnz
aas
mov
ds
dec
fisubs
jbe
imul
xor
adc
mov
mov
cmp
lds
or
int3
dec
jp
pop
xchg
cmc
sbbb
imul
cs
outsb
xor
dec
pushf
ds
stc
or
mov
push
push
imul
filds
dec
adc
xchg
jecxz
push
in
dec
cmp
pop
movsb
movsb
push
xlat
das
push
xor
xchg
ret
sbb
insl
push
adc
and
or
add
push
js
pop
rcrl
sub
inc
push
push
and
pusha
fistpll
mov
outsb
inc
ds
gs
inc
mov
add
cmp
xor
popa
ret
push
gs
inc
and
fisubl
mov
mov
lods
adc
lcall
repnz
jmp
mov
insb
jmp
pop
shr
jns
rcr
ret
cwtl
jp
aam
repnz
xor
adc
push
enter
sti
in
jno
sub
clc
cld
add
jmp
movb
fdivrs
verr
xor
or
xor
fiaddl
lods
jo
testb
adc
mov
push
test
cld
int3
scas
insl
in
sub
fwait
in
xchg
pop
xchg
pop
sar
or
je
addr16
hlt
sub
push
arpl
out
insb
jp
lds
mov
cwtl
or
icebp
das
mov
fiaddl
shll
and
sub
icebp
scas
sti
push
sti
icebp
ds
sub
aad
sti
push
ret
jg
ret
rcll
mov
lcall
call
inc
xor
stos
rorb
insb
fistpl
cmp
es
xlat
loopne
rorl
push
inc
lret
mov
movsl
fistpl
daa
hlt
cmp
cmp
dec
inc
scas
mov
sub
mov
test
ret
andl
push
hlt
subl
stos
repz
ljmp
or
inc
push
shll
paddb
push
fcmove
sbb
shll
dec
adc
fnstsw
adc
xor
push
lods
sbb
icebp
mov
outsl
jo
filds
jecxz
adc
test
fwait
dec
cmp
jns
in
loop
ss
cltd
in
xor
bound
in
mov
pop
jmp
xchg
add
stc
in
daa
sub
xchg
loop
push
and
cltd
fistl
jb
idivb
dec
adc
ror
fidivrs
rorl
stc
cmp
adc
pop
loopne
sbb
xchg
inc
mov
inc
mov
mov
cmp
inc
notb
sti
and
jmp
xchg
pop
push
push
test
out
pop
sub
test
dec
addb
sbb
insb
pop
clc
pop
xor
les
mov
mov
fcmovnb
and
aad
cmp
or
shrb
adc
and
xor
push
cmp
cmp
mov
or
mov
jp
icebp
imul
sbb
leave
inc
jle
lret
iret
enter
sub
pop
jge
sti
ret
insl
or
leave
rol
andb
inc
push
jns
int3
rolb
daa
push
mov
sub
mov
mov
test
mov
arpl
in
mov
pop
dec
sahf
insl
adc
dec
add
daa
testl
jecxz
cmc
pop
imul
aam
in
inc
or
aad
sbb
mov
fbld
mov
cld
sub
inc
adc
in
push
pop
int3
dec
sub
add
lahf
stos
aam
mov
pop
fwait
insl
add
lret
pop
lcall
inc
cld
mov
xlat
jae
add
ret
nop
nop
pop
mov
lock
cld
sbb
xchg
pop
inc
xchg
adc
scas
movsb
test
mov
aaa
push
push
faddp
jbe
scas
ss
pushf
push
out
test
sbb
out
push
ljmp
pop
in
cmp
jmp
rcl
mov
icebp
or
inc
sti
inc
jns
jg
mov
movsb
mov
dec
pop
jmp
scas
mov
jno
push
inc
jbe
mov
dec
sub
pop
nop
pop
rol
lahf
inc
jmp
or
mov
ret
add
sti
add
xor
xor
lret
fwait
cmc
push
scas
out
xchg
xor
aaa
jns
or
mov
repz
mov
mov
adc
mov
les
aas
jp
lcallw
or
mov
int3
fnsave
mov
mov
push
fcmovu
ret
adc
aaa
lahf
dec
mov
loope
lods
add
fmul
push
lods
out
sahf
cmp
imul
mov
cwtl
popa
mov
test
lods
mov
inc
addr16
xchg
sub
outsb
pop
or
out
clc
xchg
testb
jl
nop
decb
xchg
inc
inc
adc
push
mov
jno
mov
lcall
into
adc
fwait
mov
fsubr
add
xor
dec
scas
lods
out
movsb
ret
push
mov
nop
xorb
or
jbe
movsl
dec
hlt
adc
xchg
in
sahf
xlat
loop
mov
out
je
dec
or
jp
aaa
jne
jo
mov
popa
jnp
cmp
loope
insb
js
or
or
test
aaa
aas
or
imul
push
out
js
xor
ja
or
lds
pop
sbb
popf
int
ljmp
add
sbb
add
and
push
inc
lret
aad
adc
cs
fisubrs
aam
dec
lret
int3
sbb
out
daa
xor
out
inc
out
test
rcll
cld
dec
scas
pusha
sbb
cwtl
push
sarb
pop
in
in
sbb
jbe
insb
shlb
loopne
jmp
add
aaa
adc
jge
dec
fwait
xchg
iret
push
mov
xchg
les
pop
aam
lret
popa
out
scas
xor
sahf
hlt
inc
jb
scas
push
je
xchg
jg
in
inc
pop
pop
pop
pop
cmp
ds
mov
lds
pushf
xor
jne
std
sbbb
mov
xor
inc
dec
aaa
pop
daa
push
negl
enter
call
ja
sub
inc
dec
aaa
pop
daa
push
negl
enter
call
ja
sub
inc
dec
aaa
pop
daa
push
negl
ret
enter
call
jae
arpl
push
cmp
aaa
pop
daa
push
negl
mov
aas
push
fcoms
call
xchg
jnp
dec
mov
into
inc
mov
xchg
sub
sbb
adc
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
fwait
daa
lret
aaa
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
inc
xor
push
scas
push
fildl
and
and
push
fwait
repz
cmpsl
and
or
in
sbb
sarl
jne
repz
insb
fdivl
popl
push
movsb
test
les
or
lcall
ficoms
xor
es
std
imul
cmpsb
add
idivl
or
jnp
je
adc
xchg
cmp
xor
mov
rcll
je
push
aam
adc
sub
sbb
jl
push
pop
pop
lods
stos
xor
sbb
mov
ja
mov
sub
pop
mov
jle
sti
inc
sahf
push
sti
xlat
fistpl
mov
lahf
jne
inc
imul
sub
cmp
or
sbb
jmp
sti
daa
lret
aaa
fildl
push
mov
loop
hlt
jnp
and
xor
inc
jae
ja
jb
push
mov
push
enter
imul
les
sub
jl
sbb
jo
pop
stos
aaa
mov
enter
out
sbb
sub
and
subb
cmp
or
sbb
jmp
sti
daa
lret
aaa
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
sti
daa
lret
aaa
fildl
push
mov
xchg
xor
stc
enter
sar
test
sub
iret
std
pop
adc
pop
hlt
dec
mov
cmp
sbb
shl
loope
push
ss
out
int
sbb
addl
or
fmull
out
push
dec
xor
and
icebp
rorb
stos
cmp
loopne
xchg
inc
cld
popa
cmp
mov
sub
sahf
jecxz
mov
lahf
cmc
jne
mov
hlt
inc
mov
popa
cmc
mov
xchg
out
jbe
iret
mov
scas
bound
push
enter
lods
cmp
out
push
lahf
addr16
xchg
loopne
jae
les
fbstp
inc
and
xchg
xchg
cmpps
sbb
fiadds
in
aad
data16
inc
std
shlb
xchg
out
movsb
add
cs
xor
loope
xlat
sbb
cmp
idivl
mov
sub
jae
jnp
adc
jae
sub
lcall
imul
stos
divb
pop
mov
movsb
lahf
xchg
xchg
cltd
nop
test
mov
push
adc
cmp
ss
inc
in
cmpsl
adc
cs
and
push
push
dec
sub
mov
jecxz
insl
imulb
push
lcall
jb
pop
push
sarb
push
xor
jae
pop
xor
push
or
push
xchg
bound
clc
mov
fidivl
mov
mov
add
push
xchg
add
insb
std
cld
ret
xor
hlt
fidivs
add
cmp
andb
movsl
push
push
mov
outsb
adc
xchg
jns
jns
lods
and
inc
mov
jp
lret
shrl
sub
adc
pushf
sub
mov
xchg
cltd
cmp
mov
add
xor
push
dec
add
push
add
loope
mov
rcr
sahf
adc
stos
imul
insl
ljmp
ds
and
loope
orb
aaa
pop
cmp
loop
dec
push
mov
ja
inc
movsl
jne
clc
wrmsr
addr16
pop
addr16
imul
std
jnp
iret
sbb
jnp
inc
xchg
jmp
pusha
mov
call
outsb
insb
es
lar
stc
dec
pushf
cmc
pop
lcall
cltd
in
add
push
dec
icebp
stos
and
mov
imul
cwtl
lods
js
lea
adc
test
jbe
xchg
inc
jb
push
and
inc
push
loop
arpl
jbe
dec
outsb
mov
sbb
lret
push
mov
and
aad
push
jmp
ret
loop
dec
enter
imul
xchg
aaa
dec
hlt
cltd
dec
int3
and
cltd
sub
mov
int
test
dec
xchg
mov
jge
jo
add
mov
adc
mov
adc
fmuls
fistpl
or
jbe
repnz
insl
movsl
outsl
sub
or
inc
out
ljmp
je
lods
sub
lds
stc
clc
in
ljmp
ljmp
sub
movsb
sub
aad
dec
ret
shlb
mov
lret
mov
add
pop
pop
push
ret
dec
enter
lods
mov
jecxz
pop
cmovae
jecxz
je
and
subb
mov
js
xor
nop
jge
movsl
xchg
call
test
mov
enter
fs
add
and
adc
and
xlat
adc
add
notl
or
hlt
pop
inc
and
cmp
fdivrs
pop
xchg
dec
sub
in
insb
sbb
cmp
lods
in
in
adc
aam
repz
rolb
push
aam
ja
xchg
in
sar
sti
pop
mov
cmp
or
call
adc
js
jbe
imul
and
imul
mov
inc
sbb
lods
add
inc
xor
mov
add
lret
sub
jno
mov
cmp
inc
xchg
jns
dec
inc
xor
outsl
cwtl
cmpsl
out
mov
pop
and
pop
push
movsb
xchg
ljmp
sbb
dec
dec
pushf
ror
mov
pop
mulb
push
test
adc
xor
and
lods
push
and
jp
ss
jle
mov
mov
mov
mov
mov
sub
xor
and
mov
cmp
shrl
cmp
add
jecxz
cmp
jmp
out
adc
or
mov
lret
dec
out
cmp
inc
and
les
xor
bound
lods
and
leave
out
aas
orb
mov
imul
cmp
fisubrs
mov
and
push
push
je
adc
push
cmp
inc
pop
repnz
mov
jmp
xchg
stos
push
mov
test
cmpsb
xor
pop
mov
jbe
sti
jae
dec
sbb
mov
out
lea
fsubl
adc
adc
pop
xlat
push
jno
out
arpl
push
ret
xchg
movsl
aas
pop
push
dec
mov
sub
shrb
sti
xchg
in
aaa
dec
rcrl
xchg
jns
xchg
add
repnz
pop
and
int
or
pop
jbe
jl
xchg
in
cmc
push
test
add
xor
movsb
add
xchg
gs
mov
insl
stc
push
jbe
ja
hlt
lcall
mov
call
je
mov
add
push
pop
mov
repz
xor
fistpl
jbe
dec
jl
outsl
add
jb
xchg
es
shrb
ftst
push
dec
test
xchg
add
outsl
xchg
jge
test
dec
mov
inc
mov
testl
rorl
aas
adc
xchg
enter
aaa
stos
aaa
hlt
cmpsb
addr16
lcall
add
iret
sub
adc
jae
cmp
dec
pop
pop
jnp
cwtl
aas
jge
adc
sbb
push
dec
idivb
jecxz
stos
ja
in
rcll
adc
and
out
xor
jecxz
xor
jecxz
jle
dec
sbb
lcall
push
cs
add
sbb
mov
jp
fildl
lea
sahf
xor
rorl
movsl
inc
out
xchg
scas
jb
mov
xchg
jle
fldenv
jo
ret
jge
lods
clc
call
sub
enter
lds
pop
shlb
loopne
sbb
repz
test
gs
daa
mov
mov
add
xlat
jle
push
jmp
inc
les
dec
xlat
rorl
mov
jge
sub
popa
stos
cmp
leave
dec
push
push
ss
sbb
mov
movsl
popf
gs
daa
aad
adc
aam
mov
mov
scas
bnd
mov
inc
cs
adc
dec
xchg
roll
into
xlat
adc
sbbb
cmp
pop
jae
inc
std
out
andb
lds
push
sub
test
lock
mov
adc
push
and
xor
mov
xor
sub
pop
push
inc
dec
push
or
mov
sbb
cli
mov
inc
adc
aad
and
or
add
stc
js
iret
cmp
mov
cmp
inc
call
push
pop
adc
fstpt
add
push
movsl
nop
icebp
les
xchg
pushf
adc
push
add
sar
and
int
pop
std
cmp
gs
xor
sbb
sub
mov
aas
test
xchg
call
inc
xorb
sub
sub
mov
pop
sub
test
mov
cmpsb
icebp
mov
jnp
push
or
sub
ja
and
or
outsl
xchg
ret
add
loopne
cmp
mov
mov
cmp
xchg
ja
push
xor
xchg
sub
and
pop
xchg
pop
xlat
scas
ficoml
sub
ljmp
push
mov
outsl
scas
shl
sbb
push
jle
divb
jbe
xor
pop
cmp
jmp
mov
test
test
pop
lea
test
mov
fcoms
lods
pushf
or
mov
push
lret
xor
mov
pop
or
inc
into
lret
mov
cmpsl
mov
subb
ja
bound
decl
inc
cmp
lock
mov
sarl
addr16
jbe
sarl
js
mov
jmp
aaa
jne
inc
imulb
ja
xchg
mov
pusha
cmp
cmp
mov
lock
jo
sub
ja
lds
adc
xlat
lcall
or
xchg
lahf
sbb
stos
jp
insb
jp
ret
xorl
fildl
subl
cmp
pop
insb
in
pop
xchg
push
xchg
cmp
sbbl
pop
adc
push
mov
lcall
jge
fimuls
mov
mov
adc
popa
test
lret
icebp
rcrl
cltd
popf
out
mov
lock
jl
or
xchg
mov
add
cs
mov
jo
stos
xorb
int
stos
arpl
scas
loope
push
sti
cmp
sahf
lahf
jecxz
insb
pop
fmuls
fmul
jnp
fwait
inc
jle
mov
in
inc
sbb
daa
sbb
pop
sbb
mov
add
sbb
xor
lods
add
and
call
or
add
adc
adc
sub
enter
jbe
mov
xchg
rcl
cwtl
and
js
roll
std
aaa
enter
xor
sti
cmp
mov
inc
mov
or
in
imul
xchg
in
mov
cmp
lds
sub
int3
data16
cmc
in
out
stc
out
int
inc
std
or
xchg
idiv
enter
jp
mov
sbb
push
xchg
jp
leave
or
imul
enter
or
gs
clc
xchg
scas
sub
cmpsb
sub
xor
mov
fildll
mov
jnp
aad
testl
data16
or
ljmp
push
imul
cmp
je
int3
fistpll
and
mov
mov
fnstsw
imul
repnz
mov
push
jp
xchg
dec
push
gs
add
movsb
lcall
mov
sbb
jle
adc
pop
xchg
adc
mov
and
mov
daa
lahf
filds
imul
push
sub
add
inc
sti
iret
adc
mov
cli
dec
xor
not
data16
adc
nop
flds
arpl
mov
mov
adc
leave
call
dec
nop
mov
dec
fnstcw
out
fldl
and
jge
pusha
mov
lret
lods
pushf
aaa
out
xchg
ds
push
adc
dec
xchg
jae
ret
dec
push
cmp
mov
push
lock
dec
addr16
xchg
cmp
mov
into
add
sbb
pop
jle
xchg
shrb
xor
xchg
xor
rcr
jle
outsb
sub
je
ror
cmp
mov
arpl
or
movaps
bound
sbb
inc
ja
popa
sti
mov
out
mov
ret
cmpsb
insw
sti
enter
outsl
push
mov
push
xor
push
rorb
jmp
jle
mov
sbb
fs
movsb
mov
inc
adc
dec
shll
inc
xchg
jl
mov
cmc
setbe
test
push
sbb
push
nop
jno
xchg
and
rcll
cmp
pop
aas
mov
in
jge
add
cld
push
bound
mov
dec
pop
push
jp
aas
dec
insl
in
push
ss
sbb
cltd
insb
or
and
mov
push
cmp
dec
sete
in
cmp
xchg
xchg
mov
mov
ret
daa
adc
popa
fisubrs
mov
data16
xchg
nop
mov
cli
psubusw
in
inc
js
popf
dec
push
jbe
or
pop
les
cmp
jmp
std
sar
lods
scas
test
ret
data16
out
or
repnz
xor
shlb
shlb
jecxz
ljmp
or
andb
pop
lret
test
in
jno
pop
push
out
loop
ds
pop
jno
jo
sbbl
adc
scas
lret
sbb
push
icebp
dec
jl
sbb
ja
mov
jnp
test
lods
or
es
dec
popf
inc
mov
or
rol
mov
repnz
dec
fbstp
popa
ret
adc
mov
mov
shlb
sbb
repz
addr16
addb
add
idivl
stos
out
jmp
je
inc
andb
or
xchg
fdivrp
orl
sbb
daa
test
aad
and
sub
orl
pop
divb
stc
enter
xor
repnz
xchg
mov
push
mov
repnz
lea
jno
fstpl
fwait
mov
xchg
mov
xchg
mov
mov
scas
movsb
pop
shrb
mov
aad
mov
pop
fwait
push
mov
xchg
daa
jns
add
adc
mov
cmpsb
mov
xor
inc
aaa
jno
aad
dec
movsl
lret
xorb
call
lea
xor
ret
mov
pop
pop
test
loopne
stc
loope
cmp
mov
adc
jbe
jmp
jl
loop
push
popf
sbb
sbbb
inc
inc
out
cmp
popf
cli
loop
fidivl
jmp
add
movsl
jae
xchg
flds
out
imul
sti
shld
gs
mov
lods
pop
es
jno
pusha
xchg
push
repz
xchg
mull
dec
rcrl
xlat
push
and
pop
mov
loop
fstpt
sub
imul
sub
jecxz
out
js
or
cli
or
inc
inc
movsl
push
adc
sub
mov
call
push
daa
xor
bound
insb
fisubl
jmp
sbb
sub
out
out
inc
movsb
in
mov
lods
pop
in
mov
or
inc
pop
inc
insl
imul
aas
loopne
xor
js
mov
sub
sti
movsb
out
lods
sbb
dec
inc
xchg
idiv
rcrb
mov
repnz
out
cli
sub
pop
fldl
insl
into
dec
ret
out
cwtl
add
xor
jo
scas
lods
sbb
rolb
ret
ds
xchg
xchg
subl
call
movsb
outsl
loop
ljmp
add
jbe
cmpsb
jnp
pop
xor
or
jbe
outsb
xlat
js
test
mov
add
mov
dec
dec
sbb
mov
mov
imul
inc
mov
jno
push
loope
out
or
jne
sbb
in
cs
std
cmpsb
mov
xchg
outsl
inc
dec
mov
jo
sti
jmp
push
pop
xchg
sub
dec
push
sbb
push
push
lds
xchg
ds
lock
gs
fcomp
sbb
jecxz
test
outsl
pop
xor
stos
cltd
jno
mov
inc
fwait
ret
mov
ds
es
lea
lret
pop
jne
stos
xchg
fldenv
pusha
int3
pop
ret
pop
mov
lret
mov
negl
insl
cmpsb
dec
push
mov
push
clc
push
xchg
imul
cli
jae
cs
inc
jmp
push
out
aas
and
pop
mov
adc
xchg
push
add
fistpll
or
cli
out
std
pop
ds
dec
addb
lcall
dec
mov
and
aad
jae
ret
mov
or
std
xchg
lret
add
inc
inc
mov
aaa
dec
sbb
sbb
jle
hlt
test
leave
mov
test
jg
stc
cmp
pusha
xor
sub
aad
push
shll
push
popa
xor
movb
pop
jb
or
pop
mov
mov
adc
rcrb
or
fsts
add
pop
imul
int
cmp
stos
lret
xchg
inc
daa
pop
pop
xchg
inc
mov
jb
inc
and
pop
std
add
mov
enter
add
push
test
mov
cmp
mov
aad
cmpsb
out
mov
insb
push
mov
stc
mov
dec
addr16
mov
and
or
xor
repnz
mov
call
pop
sub
lds
js
cmp
outsb
je
dec
subl
dec
shr
out
shll
frstor
cli
aaa
pushf
mov
and
sub
hlt
ljmp
pop
call
das
lea
fsubp
mov
mov
add
sarl
push
and
pop
mov
adc
pusha
jle
add
js
loop
push
push
mov
push
mov
and
fneni(8087
inc
add
rorl
adc
test
and
fs
cli
sbb
sub
les
cmp
test
test
pop
mov
inc
vpandn
addb
into
outsb
adc
mov
mov
addl
adc
test
popa
test
je
push
test
mov
xor
outsl
lds
pop
cmp
and
cmp
enter
lods
aam
push
pusha
add
test
das
inc
xchg
hlt
xor
sub
pop
in
leave
jo
ja
lds
int3
int3
push
xchg
mov
mov
mov
pop
sbb
or
stc
jmp
mov
mov
fsubrs
das
cmpsb
pop
mov
hlt
jb
adc
xlat
popf
negb
sub
sub
sub
pop
cmp
vcmpps
mov
inc
lea
je
push
add
mov
pop
dec
adc
mov
out
dec
in
inc
cltd
xchg
in
scas
sbb
stos
jle
cwtl
jae
movsb
and
ret
jle
sub
jge
in
stos
testb
push
xchg
push
dec
xor
shr
scas
mov
es
mov
repz
pop
push
sbb
addr16
xor
adc
add
inc
scas
pop
rorl
mov
mov
or
dec
mov
imul
xor
mov
sets
je
xchg
pop
ds
es
test
mov
mov
js
jge
enter
aas
roll
scas
adc
out
testl
mov
bound
pop
loope
xor
mov
gs
xor
jne
sub
repz
pop
outsb
shlb
popa
sbb
filds
mov
sbb
adc
ficompl
movsb
sarl
and
add
sbb
add
fcomip
es
hlt
cmp
and
mov
shl
xlat
cmc
lods
or
mov
das
xor
dec
mov
push
jb
scas
pop
adc
mov
out
popf
data16
cmpsl
sti
xchg
sub
popf
push
fistl
ja
imul
push
pop
jle
pop
add
inc
jae
jbe
stos
mov
leave
imul
cmpsl
in
notl
mov
ficoms
xchg
xor
sbb
dec
adc
xor
leave
and
xchg
pop
test
lret
aam
sbbl
rol
cmp
mov
cmpsl
ret
mov
mov
and
inc
cmp
daa
stos
test
or
sahf
aas
lcall
mov
xchg
and
xor
add
push
sti
push
fidivrl
cli
pop
xor
pop
sub
xchg
and
loopne
loope
sbb
aas
shlb
les
loope
dec
xchg
lret
out
sbb
pushf
xor
jo
sbb
adc
inc
jo
es
test
mov
in
insb
add
imul
icebp
cltd
int
adc
push
add
cmp
pop
in
jb
mov
add
jnp
pop
rolb
mov
mov
sub
sbb
jbe
adc
jge
cmovb
loope
dec
enter
dec
pop
inc
mov
add
pop
dec
lret
dec
sub
ss
out
lcall
jle
cmp
stc
mov
clc
das
testb
arpl
call
mov
iret
aaa
fildl
mov
jns
ficoml
jne
imul
dec
and
push
movsb
lret
mov
pop
cwtl
xchg
pushf
jg
mov
mov
cmp
aaa
xor
push
sub
mov
daa
push
and
rolb
xorl
std
adc
call
xor
mov
movsl
mov
daa
roll
out
mov
in
fisttpll
xor
insl
add
popa
cmc
xchg
cwtl
into
cmp
call
push
cs
in
inc
fisubs
test
xor
out
and
or
mov
and
scas
lods
icebp
mov
movsb
mov
jl
mov
push
adc
jbe
and
lods
fidivrs
mov
xor
cmp
jno
dec
clc
rcrl
out
xchg
dec
mov
ja
sub
and
mov
push
insb
mov
testb
sbb
mov
sub
cmp
or
sbb
jmp
sti
daa
lret
aaa
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
sti
daa
lret
aaa
fildl
push
mov
xchg
sti
cmpsl
lret
mov
sub
mov
push
imul
daa
lret
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
ja
clc
jmp
push
lret
aaa
lods
xor
filds
fs
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jo
pusha
lret
inc
ljmp
or
sarb
push
sbb
sub
pusha
lret
inc
ljmp
add
sarb
push
sbb
sub
pusha
lret
inc
ljmp
add
mov
dec
iret
outsb
in
out
sub
fiaddl
push
sahf
sub
stc
pop
stos
dec
sbb
das
pop
pop
jp
cmp
shll
mov
mov
jne
mov
mov
das
jp
imul
add
iret
push
xchg
mov
mov
sarb
stos
loopne
fnstsw
cmc
lds
lret
cmp
inc
pop
fwait
xor
cli
jge
gs
test
pop
adc
mov
popl
ss
mov
jne
inc
inc
cld
sbb
mov
push
xchg
dec
sarb
jp
pop
lahf
xor
push
rorb
cmpsl
movsl
adc
jle
push
in
aad
add
mov
cli
inc
ljmp
add
sarb
push
sbb
insb
xor
sub
filds
test
rclb
add
ja
jae
mov
add
mov
push
pop
mov
shrb
push
mov
into
gs
dec
cmc
inc
adc
mov
jl
and
lock
loopne
sarb
push
sbb
sub
pusha
lret
inc
ljmp
add
sarb
push
sbb
sub
inc
or
into
pop
test
and
imul
inc
xchg
repz
daa
jge
fsubl
jle
and
mov
and
shlb
les
xchg
sar
mov
push
lcall
mov
stos
movsb
ja
lcall
popa
pop
es
lds
add
dec
push
shrb
mov
cmp
cwtl
and
ss
call
cmp
jo
sub
pop
add
mov
mov
jo
xchg
outsl
push
popa
xchg
sti
jecxz
imul
mov
add
xorl
stos
js
mov
lds
shl
cmpsl
lcall
push
fimuls
jb,pn
ret
adc
pop
dec
and
cmp
mov
mov
sub
addr16
push
push
pop
add
sub
sbb
cs
xchg
test
add
cmp
push
cmpsb
mov
mov
pop
mov
xchg
adc
incb
imul
rcrl
and
loopne
pop
out
mov
mov
cmp
enter
add
mov
pop
xchg
pop
repnz
pop
fsub
movsb
andb
mov
call
stos
mov
int3
stos
push
xchg
shll
jg
dec
outsb
cmp
and
xor
pop
inc
jbe
mov
aaa
seta
xchg
insb
cmp
xor
jecxz
lods
push
call
cli
fisubrl
and
insl
ficomps
add
mov
lods
shrd
pop
dec
or
xchg
das
sub
add
jae
xor
sahf
ja
push
ss
push
mov
xor
jl
pop
arpl
addl
mov
addr16
cmc
pop
ffreep
adc
dec
push
cwtl
lods
ljmp
mov
sbb
xchg
inc
daa
inc
ffreep
and
fcomps
pop
fldl
outsb
in
mov
in
repnz
sub
and
ljmp
jne
mov
jb
movsb
jae
fldenv
xchg
xchg
arpl
push
addr16
fnstsw
mov
dec
dec
add
into
and
aad
in
aaa
data16
icebp
std
xchg
cmp
cld
dec
sbb
and
pop
clc
mov
cltd
rolb
jl
jle
dec
inc
jo
and
mov
pop
push
sub
cmpsl
or
mov
inc
fsubrp
sbb
addb
inc
adc
ja
addr16
out
mov
or
lds
xor
test
pop
call
ficoml
cld
add
xchg
push
pop
aam
bound
push
ss
push
jne
and
int
cwtl
mov
mov
lock
cmp
sahf
sub
addr16
mov
or
sbb
mov
sub
pop
sub
aas
ret
pop
cmp
das
push
dec
dec
popf
push
mov
sbb
or
cli
fisubrl
sahf
jae
cmc
jbe
dec
fistpll
insb
dec
mov
push
push
inc
pop
int
xchg
sub
int3
mov
out
int3
xlat
cld
push
push
loop
dec
mov
inc
pop
mov
sub
or
mov
enter
jp
jmp
or
push
jmp
push
ret
std
inc
aas
popa
cmp
enter
lods
lahf
pop
or
bound
lods
mov
jmp
popf
test
out
mov
movsl
add
mov
cmp
aam
push
out
sub
into
sbb
inc
xorb
cmp
inc
dec
or
add
aaa
dec
jae
outsl
std
clc
jnp
sahf
jle
fmull
cmp
mov
mov
dec
cwtl
pop
pop
movsb
dec
stos
xchg
icebp
dec
shrb
pop
icebp
pop
lods
mov
fildl
sbb
je
lock
arpl
mov
int
or
push
push
in
add
push
mov
xor
push
and
cmpsl
sbb
mov
dec
fldenv
push
mov
xchg
push
in
inc
or
pop
xor
aam
push
jb
cltd
stos
jg
add
in
sbb
or
sub
jmp
pop
or
stc
sbb
mov
push
subl
lods
mov
sub
rorb
inc
andb
movsb
stos
and
adc
fmul
xchg
adc
loop
loop
inc
xor
cmpsl
or
and
inc
aaa
sarb
jne
adc
push
push
xor
sub
push
out
add
add
fsubrl
rclb
lret
dec
call
dec
int
repnz
arpl
enter
mov
stos
shrb
hlt
adc
leave
adc
adc
inc
das
mov
xor
clc
add
in
pop
in
aad
stos
into
repnz
jno
stos
call
int
rorl
pop
ficompl
daa
push
dec
mov
inc
sbb
xchg
dec
cmp
mov
inc
dec
notl
test
leave
das
fbld
ds
bound
sti
fbstp
jecxz
dec
insl
shrb
ss
inc
cmp
cpuid
or
dec
inc
cmc
mov
leave
mov
mov
push
aam
mov
inc
ljmp
fimull
es
xor
in
lret
lret
jl
and
ret
sub
nop
loope
xlat
int
xchg
push
xchg
loope
mov
mov
mov
adc
mov
dec
jo
add
or
test
iret
inc
ret
pop
shll
loop
aas
push
adc
out
push
cwtl
lcall
aaa
mov
scas
inc
push
cmc
scas
push
jmp
jmp
ljmp
pop
mov
cli
mov
shr
stos
arpl
out
es
xchg
inc
jns
xchg
test
fistps
gs
bswap
sub
push
inc
jmp
es
in
loop
xchg
roll
and
lods
sub
mov
mov
jo
int
test
mov
jge
ljmp
les
daa
mov
xchg
cmp
ljmp
aam
dec
push
add
popa
xor
mov
lock
mov
sti
mov
stc
push
or
cmp
inc
adc
scas
lcall
in
int3
insl
and
fists
cmc
jbe
mov
and
aaa
cmpsb
adc
ret
imul
ret
sahf
mov
jge
jbe
dec
xor
aaa
sbb
data16
push
push
jle
iret
pop
xchg
lods
in
ret
lret
cmpsb
cmc
xchg
incb
cld
out
mov
mov
gs
cwtl
imul
xor
xchg
sub
das
dec
int
ficoms
ficompl
pushf
test
fisubs
faddp
scas
call
add
dec
add
add
test
into
cmpl
push
push
adc
mov
aad
fidivrs
loop
add
fsubl
push
fnstsw
fwait
or
cmpsb
dec
sbb
imul
or
hlt
je
pop
clc
mov
in
mov
dec
jb
add
sbb
dec
aaa
shll
xchg
sbbb
hlt
dec
aad
and
push
pop
sub
inc
mov
dec
mov
inc
push
addr16
mov
inc
cltd
mov
aas
or
fildll
aas
sbb
std
push
cmpsb
sub
repz
int3
imul
xchg
sbb
push
pop
divb
or
fisubs
jo
jge
cmp
mov
jl
dec
adc
aas
inc
dec
packssdw
jge
xlat
lcall
sub
dec
test
and
mov
inc
pusha
sbb
push
mov
into
jg
dec
xchg
shrl
add
jne
jg
fwait
or
jl
ret
aaa
xlat
mull
xchg
or
pop
sub
adc
pop
mov
das
comiss
push
enter
push
push
lock
loopne
jp
and
rcll
xchg
dec
sbb
dec
imul
rol
mov
dec
lds
lahf
dec
rcrl
jmp
or
mov
add
inc
mov
mov
repnz
repnz
add
xchg
xchg
push
xchg
pop
mov
sbb
out
movsb
sub
adc
stos
rcll
out
aaa
ss
cmp
mov
jb
xor
add
mov
and
ret
mov
lret
arpl
in
fcoms
push
push
ret
jecxz
mov
jmp
inc
mov
enter
insb
xor
cmc
mov
fsubrl
bound
leave
xchg
sbb
sbb
or
cmp
mov
movl
pushf
shll
or
in
sub
xchg
cmp
mov
sub
and
dec
mov
inc
fwait
xchg
push
mov
cmp
popa
pusha
clc
push
je
pop
cmpsl
cli
movsl
dec
inc
or
outsb
inc
sbbb
add
stos
mov
loopne
testl
mov
sub
sub
jns
pop
jne
add
lret
add
lret
pop
adcb
lock
fldl
lea
nop
fwait
push
je
sbb
cmpsl
lcall
jmp
xor
pop
sbb
adc
sub
sbb
shr
mov
int
mov
sub
xlat
movsb
push
inc
cs
xor
mov
or
int
sbb
xchg
and
push
rol
jmp
das
and
mov
mov
jle
jmp
add
ljmp
dec
int
cmp
inc
dec
ds
in
enter
scas
jg
repz
push
shlb
loop
vmread
mov
pop
sub
out
dec
mov
notl
xor
dec
xchg
aas
testb
xor
sarb
movsl
aam
xor
xchg
js
mov
ds
fnstcw
push
pop
lcall
in
pusha
inc
cmpsl
enter
xchg
xor
movl
inc
jle
and
jbe
cmc
xchg
test
stos
cmpb
fadds
movsl
call
mov
out
adc
cli
jb
mov
shl
cli
in
and
cwtl
mov
stos
int3
scas
adc
push
mov
call
into
push
or
sbb
popf
rcr
jae
ss
imul
repnz
les
into
cmp
mov
sbb
repz
inc
inc
and
enter
xchg
out
leave
push
fisubrs
je
insl
cmc
xchg
neg
dec
sub
xlat
leave
hlt
add
adc
pop
mov
ds
cs
xchg
fstpt
std
push
mov
data16
jo
or
repz
inc
add
sbb
mov
mov
arpl
test
jle
ret
les
adc
inc
sbb
push
cmpsl
xchg
cs
lock
xchg
cmpsl
lds
sbbl
aaa
or
sbb
and
sbb
mov
and
mov
ja
cli
push
sub
dec
xchg
lret
popf
lock
xor
lods
jo
xlat
mov
push
xchg
mov
mov
xor
out
adc
addr16
jmp
xor
push
mov
stos
sbb
xchg
sub
jle
xchg
xchg
rcrb
mov
ds
or
xor
xor
push
das
inc
dec
popa
fwait
jnp
mov
pop
xchg
or
test
push
or
lock
sbb
aam
add
xor
rorb
cwtl
std
xchg
gs
adc
pop
jge
lahf
in
mov
fisubrl
mov
adc
and
ljmp
push
lock
aaa
push
adc
or
inc
daa
movsl
mov
jne
dec
repz
lods
cmp
jae
aad
das
loopne
cs
mulb
jmp
xchg
jbe
inc
repnz
and
adc
in
test
in
inc
and
sub
jne
push
xchg
sub
scas
or
mov
inc
push
stos
adc
or
inc
push
sti
jp
sub
repz
jnp
inc
pop
pop
cmp
mov
sub
int3
mov
fidivs
cld
xchg
lret
xor
arpl
test
pop
dec
xchg
mov
icebp
setp
outsl
mov
xchg
or
jmp
test
or
popf
fistpll
cmpsb
daa
notl
inc
iret
and
shlb
pop
ds
insl
dec
cli
rcll
push
jno
mov
sub
lods
cmp
ljmp
insb
outsl
jmp
arpl
fsub
jmp
imul
xchg
in
cli
push
inc
jp
outsb
mov
sbb
xor
js
aaa
adc
dec
and
stc
outsb
pop
adc
lret
fdivp
pop
rolb
out
xorl
neg
cmp
xchg
fwait
dec
mov
sub
ds
movsb
push
outsb
mov
fmulp
scas
cmp
loop
enter
xchg
dec
and
lods
inc
scas
mov
sub
les
jbe
and
dec
stos
cltd
add
mov
lcall
test
rol
pop
mov
xorl
test
cmp
and
and
mov
stc
fprem
daa
icebp
out
xor
push
cld
enter
mov
push
pop
test
add
arpl
sub
push
in
and
push
add
cmp
dec
push
andl
jbe
inc
paddusw
push
add
or
mov
out
repz
stos
test
jp
inc
pmulhuw
lcall
xchg
jae
fmuls
popa
sbb
int
pop
push
adc
ret
lcall
cwtl
lods
cmpsb
shlb
xor
rol
fldt
out
and
andb
pop
ja
jno
and
iret
aad
mov
lods
pushf
sbb
jae
push
sub
pop
dec
and
or
push
notl
mov
mov
in
cmp
jg
in
jg
rcll
or
mov
mov
xchg
or
sbb
push
cmpb
mov
test
scas
cmp
addr16
fsubrs
enter
push
push
xlat
xchg
jmp
push
mov
pop
sub
stos
xchg
inc
je
sub
or
xchg
addr16
pop
push
js
cltd
and
mov
push
les
hlt
stos
and
mov
xchg
or
adc
sbb
sarb
jbe
xor
inc
sub
rorb
mov
pusha
arpl
and
jecxz
push
dec
xchg
sub
adc
aas
bound
jb
cmpsl
in
fbstp
xor
ds
add
sbb
mulb
cmp
mov
lret
push
pop
lods
jns
pop
mov
clc
mov
mov
dec
rcpps
sbb
cmp
jo
xchg
xor
push
push
mov
lgs
sbb
mov
cmc
sbb
add
lret
mov
pop
inc
mov
in
xchg
bound
pop
test
adc
pop
hlt
cmp
bound
scas
pushf
inc
lcall
dec
les
sete
fisttpll
jnp
lods
inc
mov
pop
dec
stc
cs
cmp
mov
pop
lcall
or
lds
xchg
mov
sbb
jg
nop
mov
shlb
pop
sbb
lcall
and
jb
mov
xchg
adc
adc
jo
das
adc
and
js
pop
bound
rcrb
lods
pop
cmp
subb
jno
mov
inc
mov
testb
data16
jmp
orl
push
popf
shrl
cmp
lods
jne
adc
xchg
fsubl
fs
pop
das
xchg
mov
sbb
movsb
pop
rcrl
rolb
xchg
dec
rcrl
pop
aaa
enter
inc
mov
xor
rclb
out
popa
std
and
push
sti
inc
push
test
mov
rcr
in
movsb
aam
xchg
out
adc
push
push
cmovge
ret
pop
ret
xchg
lret
sub
xchg
std
xchg
cmc
sahf
inc
push
sahf
mov
out
xor
or
les
outsl
frstor
cmp
sub
fincstp
popa
jmp
addr16
test
pop
lahf
fidivrl
prefetch
pop
cs
sbb
cmp
sahf
jo
pop
in
xchg
addr16
leave
sbb
xor
data16
pop
sahf
adc
and
jp
mov
fdiv
fsubp
mov
ss
pop
pushf
cs
add
cmp
add
push
xor
xchg
cmp
mov
in
pop
adc
daa
add
xor
mov
es
jmp
sbb
imul
out
stos
xor
aam
pushf
mov
jno
jo
cwtl
stos
mov
fidivrl
sbb
pop
cwtl
dec
mov
sub
cmc
mov
cli
aam
sub
test
inc
addr16
lret
ja
push
test
jp
adc
mov
jnp
jl
mov
push
lea
sbb
rcl
test
jb
fdiv
dec
mov
sti
je
lods
scas
idivl
fbstp
pushf
rcrb
fdivs
loop
cmp
xor
and
outsb
mov
xbegin
addb
call
les
mov
sub
sbb
and
lds
stos
pop
mov
fldl
mov
es
dec
xor
leave
insl
leave
aaa
scas
stos
std
mov
cmp
cmp
sub
or
add
jne
mov
mov
into
jge
adc
int3
repz
adc
cmpsb
loopne
fcmovnu
insl
mov
dec
addl
push
jg
inc
outsb
rcll
inc
stos
pop
or
into
mov
into
push
xor
lea
xchg
push
dec
scas
pushf
lods
addr16
cltd
arpl
adcb
pop
and
in
or
loop
inc
dec
lahf
shrb
repz
sub
push
add
cmp
sub
lret
dec
fisubs
sub
jle
xor
add
ficompl
sbb
bound
jb
add
inc
xor
test
rcrb
xor
in
loopne
cmp
push
outsl
pop
addr16
aad
stc
in
lcall
fdivrs
data16
sub
lock
xorl
stos
push
and
push
ret
adc
push
jb
dec
mov
test
fisttps
shll
sahf
pop
pop
hlt
scas
fists
in
movsb
push
sar
inc
xor
ss
inc
add
test
cli
jnp
std
or
mov
out
frstor
jb
add
inc
cmpsl
cs
add
xchg
sahf
or
push
cld
push
cmp
dec
call
sub
imul
bnd
imul
xor
lds
mov
shrb
dec
enter
adc
aam
inc
fldl2t
out
outsl
push
mov
mov
aam
jl
sbb
and
aad
shll
xchg
adc
mov
xchg
mov
sub
je
stc
stos
ficompl
int
loope
xor
pusha
movsl
cmc
fucom
push
sbb
xor
daa
dec
inc
xchg
add
jns
mov
loop
mov
icebp
std
mov
ja
mov
icebp
jnp
iret
loope
clc
xlat
jb
dec
mov
mov
stc
sbb
arpl
inc
enter
cmp
xchg
scas
clc
and
xchg
mov
push
inc
cmp
push
gs
fstpt
pop
xchg
fbstp
mov
mov
outsb
dec
ds
jge
call
dec
or
andb
repz
jecxz
rcrl
or
sarb
cltd
fisttpll
fwait
loop
jbe
dec
shl
or
or
lods
cmp
cmpsb
popf
xchg
clc
cmp
jno
dec
xchg
aad
pop
ljmp
xchg
aad
ds
inc
inc
enter
xchg
and
dec
push
add
xchg
mov
popa
shll
pop
push
or
mov
push
push
loopne
into
adc
or
dec
xchg
in
xchg
dec
cwtl
aas
ss
mov
in
rol
mov
pop
fs
or
adc
mov
je
pop
cs
shlb
xchg
fwait
insl
mov
jo
inc
cmp
cmp
dec
cmp
out
mov
cmp
mov
shl
rcrl
mov
int3
mov
and
or
ljmp
pop
adc
call
sti
and
cs
stc
pop
daa
cwtl
loopne
adc
mov
mov
lds
divb
testl
hlt
jae
fstl
jp
jb
loope
std
sahf
fwait
cmc
xchg
aam
or
jmp
pusha
nop
mov
aaa
insb
push
lds
cmp
popa
adc
test
sahf
les
cld
jo
or
push
inc
sub
pop
test
lea
mov
xchg
or
dec
jno
fadds
xor
mov
je
out
scas
dec
sbb
test
inc
xlat
cmp
outsb
fsubrl
inc
fadd
mov
mov
jnp
sahf
lock
add
lds
jno
or
sbb
jmp
test
push
daa
cld
mov
stos
inc
movsl
pop
fwait
std
aad
add
scas
push
pusha
scas
mov
or
lock
inc
add
push
sub
jno
iret
sub
xor
adc
jp
dec
stos
sub
imul
pushf
pusha
xchg
icebp
sahf
pop
inc
dec
mov
mov
mov
push
sti
inc
ljmp
add
sarb
push
sbb
sub
pusha
lret
inc
ljmp
add
sarb
push
sbb
sub
loopne
sar
inc
jmp
lcall
lock
loopne
sarb
push
sbb
sub
pusha
lret
inc
out
xor
add
movsl
loopne
jp
rcrb
dec
push
pop
mov
mov
xorl
iret
sub
xor
sbb
push
mov
mov
lods
pop
mov
push
in
push
cld
cs
ds
fidivrs
sub
sbb
xrstor
mov
mov
pop
cmc
push
in
aam
xlat
iret
std
push
mov
xchg
sub
jmp
aad
clc
or
pop
add
and
dec
cmpsl
and
dec
xchg
popl
iret
icebp
mov
pusha
and
push
add
lods
not
adc
sbb
jmp
inc
adc
sarl
clc
int
lcall
test
jae
mov
scas
mov
pop
dec
cld
dec
mov
icebp
int3
pop
cmp
xchg
aas
and
ffreep
fucomi
add
jno
sahf
andl
rcrl
jae
jl
int3
push
add
into
mov
push
sbb
add
icebp
push
dec
scas
mov
sub
sbb
xor
scas
or
aas
int
scas
mov
dec
xchg
xchg
in
push
cld
cs
and
adc
xchg
dec
mov
mov
jge
js
arpl
mov
popf
pop
lcall
dec
shll
and
aas
mov
bound
insl
mov
push
mov
pop
mov
cmc
adc
and
cmp
in
xor
add
push
jmp
cs
ds
sub
cmp
or
sbb
insb
sahf
jl
dec
mov
mov
push
in
push
cld
cs
ds
sub
cmp
or
sbb
insb
sahf
jl
dec
mov
cmp
lods
or
je
cli
test
mov
xor
enter
jb
inc
inc
out
add
cltd
mov
dec
test
or
out
pop
data16
ror
and
sbb
fs
mov
and
mov
inc
cmp
std
into
loop
dec
outsb
mov
dec
jae
lret
test
and
test
out
xor
pop
xor
popf
adc
lahf
scas
jae
imul
sub
fdivrs
fs
add
cmpsb
jns
popf
push
mov
nop
push
jle
pushl
cmp
rclb
jg
ss
push
cmp
mov
popa
mov
ror
and
jp
push
add
int3
pop
xor
ds
sub
sti
sahf
sbb
sbb
pop
in
ss
or
dec
fiadds
dec
mov
int3
pop
idivb
sbb
xchg
je
popf
insb
bound
xchg
xor
sbb
test
cmpsl
mov
gs
sub
push
lahf
sti
sub
mov
stc
ficoml
rolb
jmp
xor
mov
fistl
sbb
clc
sysenter
or
or
lea
notb
ror
int3
or
jp
fistpll
lret
ret
mov
push
jb
cmp
or
call
movsl
shld
inc
scas
lcall
fsubrl
or
dec
bound
mov
int3
add
scas
mov
in
or
cmpsl
cwtl
js
dec
int3
sub
push
sbb
les
sbb
scas
pop
mov
add
push
inc
pop
inc
mov
inc
adc
pop
mov
sbbl
mov
xor
mov
push
cwtl
fdivr
cmpsb
imull
push
out
pop
fs
das
dec
mov
add
add
mov
jnp
cmpsl
loope
dec
arpl
decb
add
enter
lea
les
clc
sbb
mov
std
and
cmp
fiaddl
jns
jp
sub
sbb
inc
sbb
or
adc
or
pop
dec
jge
push
and
loop
mov
pop
mov
add
cltd
or
jle
inc
pushf
adc
jp
lret
fnsave
fdivrl
iret
sub
xchg
pop
mov
repnz
es
push
lds
pop
inc
push
jo
pop
mov
aas
fucomp
outsl
imul
or
movsl
ficoms
sub
popf
jne
scas
call
aaa
dec
mov
js
cmc
in
mov
test
adc
stos
icebp
sbb
testb
ja
pop
aad
lcall
and
cmpsb
cmp
dec
ljmp
sub
mov
iret
subb
ds
sbb
pop
mov
dec
aad
xchg
nop
pop
in
or
cmc
jo
jmp
jmp
mov
dec
mov
sbb
hlt
sub
repz
jne
je
cmp
xlat
xchg
and
jno
cmpsb
lcall
and
iret
test
cmp
cltd
imul
jb
iret
les
mov
loope
jne
mov
mov
mov
jnp
insl
mov
pop
cmp
or
rcl
fisttps
jp
lock
hlt
jb
push
nop
orl
or
repz
mov
dec
jo
popf
push
jmp
lret
xor
dec
dec
out
mov
std
andb
shl
movsb
into
ret
jge
adc
jo
cli
mov
lods
jge
out
in
dec
icebp
and
jl
and
mov
popa
aam
stc
xor
addr16
mov
call
idivb
movsb
inc
movsb
pushf
pop
xor
mov
adc
push
call
cmp
popa
inc
cltd
mov
jge
daa
dec
into
adc
adc
push
fcoml
icebp
loopne
loop
jmp
sbb
dec
push
lea
sub
add
inc
xchg
xchg
mov
mov
loop
or
cltd
insl
adc
scas
push
or
cmp
clc
cmp
mov
rol
dec
push
loop
sub
jno
leave
enter
lret
faddl
loop
rclb
nop
xchg
insl
and
call
xlat
add
xchg
ds
ds
js
test
fabs
in
andl
mov
mov
mov
fneni(8087
test
iret
jecxz
stos
inc
fwait
les
xchg
insb
mov
jmp
movb
and
sub
jg
xor
dec
mov
add
rcrb
lahf
xchg
inc
iret
mov
call
mov
ret
add
hlt
pop
mov
rcrl
add
arpl
std
rorb
rcll
dec
jne
les
jo
iret
lret
mov
mov
sub
addr16
test
mov
sbb
push
sub
xchg
shl
mov
cli
push
xor
pop
pop
fcoms
imul
cmpsl
dec
jmp
mov
or
xor
jno
pop
movsl
sbb
adc
fdivrs
cld
shrb
jl
push
lcall
je
sub
ds
adc
aas
push
add
cwtl
inc
mov
xor
inc
jbe
dec
dec
ss
jge
popf
sbb
shr
pop
loop
in
push
iret
fldt
andb
adc
dec
repnz
or
mov
or
inc
scas
mov
ret
int3
int3
sahf
mov
es
sarb
dec
mov
jl
push
cmp
add
sub
insb
cwtl
insl
mov
mov
outsl
popf
sti
push
repnz
add
and
push
sar
repnz
cmp
mov
xchg
movsb
aaa
dec
movsl
cli
dec
out
mov
inc
cmpsl
negw
sub
mov
inc
mov
call
lods
dec
adc
push
iret
or
cmp
inc
mov
mov
mov
adc
cmp
sub
mov
movsb
xorb
subb
fcoms
mov
call
jle
xlat
pop
sbb
inc
xchg
movb
data16
cltd
or
mov
shrl
test
xchg
arpl
scas
add
aaa
sub
stos
jmp
mov
or
mov
fmul
add
xor
or
stos
std
lods
sub
xchg
push
leave
ret
push
mov
iret
push
inc
pop
xchg
arpl
xchg
cltd
cld
mov
mov
daa
cmp
cli
xchg
push
mov
mov
pop
xchg
jp
outsb
sbb
xor
dec
in
orb
add
xor
lcall
je
mov
bswap
in
push
es
lds
scas
and
mov
push
stos
mov
imulb
lods
sbb
fstps
sub
push
sbb
in
add
dec
dec
push
and
in
pop
out
push
jmp
fsubrl
dec
popf
loopne
inc
push
fcompl
loop
cmpsl
push
lods
xor
jno
pop
xchg
in
sub
decl
pop
pop
xchg
add
push
ds
and
cltd
jg
popa
jge
xchg
dec
jp
stos
out
aam
popf
out
ss
pop
std
xchg
aam
iret
sub
mov
rorl
xchg
daa
sub
shlb
adc
sub
jbe
or
cmp
sbb
js
cs
push
push
aas
mov
je
iret
sbb
sbb
ds
adc
popa
push
ret
push
add
mov
ds
mov
test
mov
fcomps
jg
inc
xchg
jmp
int
mov
cmpl
sub
xor
fcompl
push
sub
and
inc
or
cltd
cmp
jp
rclb
adc
loope
roll
pop
mov
scas
adc
imul
dec
clc
add
inc
iret
mov
pop
inc
pop
pusha
cmpsl
int3
shl
sbb
cltd
cltd
inc
ret
fdivp
icebp
xor
imul
enter
pop
inc
jg
ja
jge
xchg
push
les
push
out
or
add
cmp
cmc
int
push
sbb
pop
lahf
sbb
mov
xchg
xor
pop
inc
jp
repnz
sbb
es
ss
mov
sbb
push
pop
rorl
push
jne
cltd
adc
fistpl
push
pop
add
jo
fsts
out
imul
mov
jo
fildl
lock
orb
scas
fidivrs
shrb
out
push
xor
dec
push
aad
mov
or
insl
fcmovnu
pop
cmp
test
ss
xchg
sbb
jb
mov
adcl
xor
mov
jp
sub
sbb
sbb
andb
mov
or
imul
jge
movsl
test
inc
adc
push
cwtl
je
and
arpl
jnp
sahf
sbb
lea
dec
mov
pop
cmpsl
inc
pop
add
xchg
mov
inc
arpl
sub
test
xchg
iret
jge
bound
dec
mov
xchg
repz
inc
xchg
mov
xchg
sub
std
in
mov
mov
int
lret
data16
je
imul
loope
int3
or
sahf
mov
sbb
and
push
daa
cmp
and
mull
neg
or
jmp
jmp
mov
rcrl
ja
mov
xchg
pop
popf
pop
fs
cmpsb
and
lea
daa
das
jns
jns
setp
lods
cltd
loope
ficompl
xchg
lock
adc
sub
ja
lahf
test
cmc
cld
push
xor
test
jnp
std
repz
jp
inc
nop
mov
out
cmpsl
mov
sti
movsl
imul
cmp
add
xor
cmp
add
pop
push
test
jns
in
inc
loopne
testb
addr16
mov
pop
outsb
lock
filds
sbb
fadd
jmp
mov
inc
xor
add
into
add
pop
hlt
dec
enter
mov
cmp
inc
adc
loopne
sahf
mov
les
xchg
fcoml
lahf
ljmp
add
stc
sub
enter
mov
scas
loope
jg
push
push
cmp
in
mov
sahf
test
sahf
mov
sti
xor
or
aad
mov
jmp
pop
mov
dec
shl
inc
divl
movb
mov
sti
dec
mov
fwait
out
push
insl
loop
mov
cmp
jbe
mov
clc
in
pop
cmpsl
jno
push
lds
jg
sub
movsb
push
loopne
clc
cmp
call
pushl
sahf
mov
mov
dec
cmpb
fsubp
int3
sbb
pop
das
lret
insl
cmp
in
jo
or
sub
mov
or
fs
subl
pop
out
sbb
call
int3
test
xchg
insl
out
loope
andb
int3
je
leave
lods
stos
dec
jl
jno
sti
ret
jle
repz
inc
gs
add
bswap
push
xchg
xorb
pop
dec
pop
adc
js
sub
dec
fbld
movsb
cmpsl
xchg
add
out
fs
out
in
jae
movsb
aas
aas
jle
je
xchg
add
pop
popf
jo
adc
pop
or
push
adc
jns
push
in
and
inc
cmp
jmp
mov
mov
pop
jmp
push
push
shlb
mov
mov
lea
int
out
cli
xchg
pushf
cmpsb
pop
fimuls
mov
and
das
sub
loopne
push
push
mov
cs
adc
bound
scas
xor
bound
adc
push
adc
add
repnz
test
je
popa
cmpsb
pop
lock
sbb
in
jp
roll
sbb
in
push
shlb
jno
dec
mov
pop
aad
jb
xchg
mov
sahf
cmp
or
jle
ret
insb
jg
add
cmp
or
arpl
mov
hlt
enter
stc
xchg
dec
or
mov
jne
insl
cli
pop
aas
cltd
arpl
inc
sbb
es
xchg
jg
andb
jnp
push
dec
int
es
xchg
cmpsb
push
or
lods
xchg
popa
int
jmp
mov
jns
gs
xor
flds
inc
xchg
repz
jge
out
xor
and
pop
mov
lods
movsl
jle
fistpl
xchg
fldl
xchg
imul
lret
cmp
add
xchg
jmp
cmc
mov
push
testb
cmp
inc
add
data16
dec
inc
pop
xor
fcomip
sbb
sbb
sbb
push
mov
jl
fwait
into
jnp
xchg
gs
add
mov
adcl
pushf
bound
mov
fyl2x
jle
cmp
aad
inc
push
ja
out
inc
data16
enter
push
sarl
lcall
sbb
xchg
imul
sub
jae
dec
mov
cmpsb
and
aas
repz
push
aad
inc
or
shl
pop
mov
sbb
xchg
mov
scas
inc
add
jmp
xchg
andb
pop
aaa
cmp
js
jbe
loopne
les
test
or
cmpsl
pop
xchg
xchg
mov
push
addr16
push
js
je
mov
adc
mov
inc
test
sub
shlb
pushf
lods
scas
push
push
cmp
inc
sahf
or
cmp
sbb
addr16
mov
and
sahf
movsb
mov
push
fcmovnb
loope
call
fimuls
hlt
push
stos
jle
mov
mov
push
and
les
adc
mov
add
mov
dec
popa
ss
push
aad
xchg
cmp
gs
shl
push
jmp
jno
movsb
out
repz
cmpsl
inc
push
xor
xchg
pop
inc
xchg
mov
push
mov
mov
mov
xor
repnz
sbb
push
xchg
jecxz
aam
negb
mov
xlat
loope
xor
mov
adc
lcall
fidivs
mov
daa
ret
incl
sbb
setb
xchg
mov
sbb
js
ds
fsubl
outsl
push
xor
aad
sahf
sub
jecxz
mov
add
mov
xchg
push
negl
fstpl
test
cltd
xchg
sub
adc
cwtl
popf
jp
decb
xchg
sbb
sbbl
mov
in
cmc
in
lahf
adc
in
ja
lret
inc
js
shl
adc
inc
lods
insl
xor
inc
jp
adc
cmp
fsts
pop
and
push
jnp
mov
cmp
daa
and
insl
pop
addr16
sub
test
rcll
xchg
sbb
inc
sbb
js
mov
rcl
adc
mov
lret
sbb
pop
fadd
aas
or
stos
mov
pushf
neg
inc
mov
dec
cmp
mov
scas
add
repz
cli
inc
mov
jle
psraw
out
push
sbb
lods
pushf
xchg
in
into
push
addr16
mov
test
or
jbe
je
cwtl
sbb
sbb
mov
mov
mov
lds
and
jge
pop
cltd
cmp
mov
jecxz
pop
push
xor
daa
inc
int
mov
in
cmp
loop
int3
cmp
sbb
mov
in
sub
stos
out
ds
loop
fisubs
inc
jp
out
inc
fucomip
cwtl
xlat
aas
ds
jno
cmp
xchg
xor
inc
lahf
push
jmp
fnstenv
test
movsl
in
cmc
adc
adc
cmpsb
in
adc
inc
push
sysenter
or
sbb
inc
xlat
fdivs
xchg
adc
xchg
cwtl
sti
jmp
mov
mov
jmp
fdivrp
dec
ja
cwtl
incl
mov
adc
mov
mov
xchg
add
xchg
test
lahf
stos
pop
jne
in
clc
push
mov
ljmp
mov
std
pop
sbb
in
out
aam
dec
push
int
out
inc
ljmp
addb
add
dec
cmp
and
stc
add
pop
cli
popa
inc
or
lahf
fwait
inc
dec
mov
mov
scas
iret
sub
cmp
add
push
shrl
aam
js
out
push
icebp
mov
inc
mov
loope
fs
out
fcmovbe
scas
and
and
xor
movsb
mov
push
mov
push
lret
mov
push
cmp
fiaddl
icebp
ret
xchg
mov
jno
sahf
adc
add
iret
dec
bnd
sub
pxor
movsl
cmp
clc
cmpsb
aam
out
es
out
cmp
into
sbb
fcoms
test
cmp
bswap
mov
dec
cmpsb
mov
adc
int
icebp
jnp
and
test
test
andb
push
out
mulb
push
in
sarb
je
add
imulb
jo
xchg
iret
adc
xchg
mov
repnz
push
iret
push
push
call
mov
lahf
mov
enter
lret
fwait
push
js
out
xchg
scas
dec
mov
mov
pop
add
pop
xor
add
stos
xchg
jb
or
or
dec
pop
jecxz
inc
pushf
fstp
insl
cmp
lahf
insl
in
cld
aas
xchg
cld
rol
pop
and
xchg
sub
cwtl
jb
icebp
ret
xor
cltd
adc
shlb
cmp
or
adc
pop
sub
xchg
arpl
enter
ret
add
lahf
dec
call
sahf
xor
and
jle
cli
rcl
dec
xchg
enter
pusha
fiaddl
aas
decl
push
ror
ret
dec
mov
loope
inc
sbb
cmpsl
iret
jae
fmull
jo
fisttpl
pusha
inc
daa
xorl
inc
faddl
loop
inc
jge
sbb
lret
bnd
add
mov
sar
clc
leave
stos
mull
pop
pusha
xchg
ljmp
repz
jbe
and
sub
cli
out
mov
sub
mulb
out
pop
dec
jo
push
mov
lret
aaa
xor
pop
dec
xor
xor
mov
mov
push
iret
push
imul
pushw
or
add
jns
mov
sbb
sub
xor
mov
je
or
jge
inc
sahf
mov
jecxz
fldl
jne
jmp
enter
push
ljmp
add
push
das
jo
outsl
bound
and
adcb
ret
mov
or
pop
or
rcr
icebp
dec
ja
jecxz
xchg
aam
stos
pop
out
jnp
stos
mov
ret
dec
mov
lahf
icebp
int
inc
fisubrl
addr16
ret
lret
ret
jmp
test
xchg
orl
gs
sbb
fistpll
rcr
cli
pop
lret
mov
subl
and
daa
and
mov
lock
repz
jge
lods
dec
addr16
inc
fisubl
es
push
mov
add
lods
mov
arpl
mov
sub
mov
mov
xchg
fistpll
push
mov
rcrb
jecxz
sbb
pop
je
add
add
std
int3
out
ret
ljmp
inc
mov
sub
cmpsb
xchg
mov
repz
xchg
ljmp
and
out
loope
lret
jno
jge
pop
push
xor
lcall
mov
push
in
fstps
push
inc
mov
andb
flds
mov
inc
rcr
cmp
mov
imul
sub
sub
outsl
mov
push
jbe
mov
ret
jbe
ljmp
cli
push
jae
jecxz
inc
xchg
xchg
push
fbld
movsb
ss
ds
shrb
outsl
xchg
mov
xchg
dec
lods
xchg
and
and
pop
into
int3
pop
jl
pop
xchg
mov
sub
mov
add
jge
pusha
xorb
in
stos
lea
mov
push
jge
das
call
movsl
adc
out
outsb
push
push
cli
push
mov
dec
out
and
daa
and
ljmp
cmpsl
mul
inc
pop
or
loopne
or
decb
sbb
adc
adc
repnz
mov
xchg
dec
ljmpw
sub
and
pop
push
pop
ret
pop
stos
imul
xor
mov
aad
ljmp
pop
inc
shrb
cli
nop
ror
sti
sarb
push
cmpsb
dec
lret
push
dec
jb
push
inc
es
stc
mov
mov
cmp
sbb
dec
xor
arpl
ja
stos
mov
sbb
stc
xchg
mov
fnstsw
xor
ss
or
repnz
mov
das
add
icebp
and
push
push
pop
mov
sbb
sub
xchg
dec
das
out
push
bound
and
ret
sbb
jne
jb
adc
mov
push
fidivrl
dec
cs
xor
mov
ja
xchg
add
inc
xchg
mov
xchg
ja
jno
dec
mov
repz
pop
lcall
sbb
or
push
pusha
sub
rcll
icebp
or
push
shl
inc
cmp
popa
dec
sub
aaa
bound
or
sub
lods
add
fldenv
nop
mov
add
xchg
iret
stc
xor
or
pop
pop
add
cmpsb
dec
push
dec
jl
arpl
push
in
push
cld
cs
ds
sub
cmp
or
sbb
insb
sahf
jl
dec
mov
mov
push
in
push
cld
cs
ds
sub
cmp
or
sbb
insb
sahf
jl
dec
mov
mov
push
in
push
cld
cs
ds
sub
cmp
or
sbb
scas
dec
mov
mov
or
push
cld
scas
int3
mov
xchg
inc
or
imul
push
adcl
mov
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmpsl
and
in
xchg
in
cli
lods
push
jl
insb
fs
push
inc
cmp
sub
fdivl
in
hlt
add
mov
xor
gs
insb
and
je
inc
jl
sub
dec
inc
int3
push
push
dec
out
cli
mov
aam
inc
adcl
insb
and
cmovnp
adc
sub
fdivr
mov
loopne
hlt
pop
push
mov
pop
negb
cltd
sub
loopne
addl
dec
fldl
adc
popf
je
dec
cld
pop
out
sarb
sbb
adc
jl
sbb
stos
mov
icebp
out
ret
mov
int3
sbb
daa
jb
xor
adc
adc
je
xor
cld
push
fsubl
js
sbb
push
and
dec
ljmp
aam
jg
leave
mov
imul
mov
lods
add
mov
add
push
insb
and
or
pop
sbb
jno
in
push
sbb
sbb
push
pop
pop
xor
sbb
push
test
fsub
cmp
js
out
pushf
mov
fisubrl
and
xor
jbe
push
inc
int
int3
lock
lcall
sbb
popa
or
push
jae
js
jge
dec
jmp
popf
cmc
leave
repz
mov
inc
cmp
add
insb
or
pop
adc
mov
lods
mov
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
fdivl
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
fcoml
sbb
push
shrb
cwtl
lahf
dec
dec
inc
sarb
sbb
xchg
out
mov
jp
popa
dec
sbb
lret
adc
testl
inc
daa
loop
lods
and
inc
xlat
je
scas
lret
aad
rclb
test
and
fbstp
push
or
ret
push
xchg
push
push
loop
mov
outsl
das
out
xor
sbb
insb
xchg
shl
add
into
adc
in
icebp
add
shlb
xchg
pop
push
xor
call
fstl
dec
ljmp
shlb
add
lods
lods
imul
cwtl
popa
add
jecxz
sbb
addr16
or
sti
mov
int3
inc
jecxz
mov
out
ds
mov
adc
pop
movsl
mov
jmp
cmpsl
adc
jle
aad
and
aas
push
jno
push
push
out
popf
add
push
imul
lcall
test
xchg
jmp
sub
sub
in
sub
or
in
jo
shr
in
sbb
cld
dec
add
cmp
rclb
inc
cli
adc
push
push
inc
and
cmp
adc
and
test
inc
pop
adc
sub
and
sub
jle
scas
adc
xor
jp
jno
hlt
out
add
addr16
and
repz
cltd
cmp
fstps
inc
cmp
jns
mov
lcall
cld
mov
and
mov
mov
pop
mov
pop
inc
sub
aad
jb
xor
pop
nop
push
rorb
and
jo
and
cmc
or
inc
jecxz
pop
push
ss
dec
repnz
xchg
pop
scas
les
daa
mov
cmp
sti
jp
pop
and
pop
inc
sbb
jge
repz
xchg
fdivl
jmp
rcl
notb
nop
and
dec
cmp
hlt
shll
mov
mov
xor
push
out
nop
in
xchg
lds
jge
and
sahf
js
inc
ds
push
mov
xchg
dec
dec
stos
call
jmp
fldl
daa
push
sub
cli
adc
sub
inc
jmp
push
sti
dec
and
rclb
rcll
cmp
ds
rclb
mov
notb
mov
ds
or
mov
fistl
or
add
dec
lahf
std
xchg
sub
js
aam
nop
lock
push
adc
jo
ss
jno
enter
mov
out
push
sub
lahf
jns
jmp
lods
sub
cltd
in
daa
mov
outsb
adc
mov
push
mov
outsb
dec
and
test
jno
ret
loopne
pop
cmpsb
test
add
nop
pop
mov
in
mov
or
in
aam
push
jle
pusha
movsl
repz
fcoms
in
xchg
mov
jge
jns
loopne
push
jle
sbb
icebp
sbb
pop
jnp
sub
lret
fistpl
sub
adc
mov
xlat
orl
lock
xchg
out
pushf
mov
inc
ret
stc
mov
jl
pop
or
bound
dec
and
scas
lret
cmp
in
testl
je
rcr
aaa
xchg
stc
jle
divl
ret
into
pop
mov
add
scas
xchg
sbb
lock
fwait
xor
loop
test
stos
in
fnstcw
lret
push
lock
jo
or
hlt
jg
and
pushf
xor
pop
xchg
jne
dec
mov
in
and
insb
cmpsb
ljmp
mov
inc
inc
imul
sub
jne
push
mov
popf
incl
stos
out
in
sub
lock
adc
mov
orb
push
mov
push
dec
mov
cmp
push
sbb
xor
mov
jle
and
xchg
mov
in
test
mov
test
push
jnp
sbb
push
pop
xchg
out
mov
rcl
loope
shlb
cmp
fldenv
lcall
pop
ret
jl
sbb
add
sbb
movsl
and
jmp
or
insb
inc
adc
call
js
xor
es
push
movsl
lret
xchg
repz
inc
cmp
lds
scas
mov
data16
pop
int3
popf
mov
push
mov
sbb
adc
xor
loope
dec
add
push
lret
sub
jmp
lods
sbb
lock
jmp
stos
fildll
adc
cmpb
js
mov
inc
mov
cmp
shl
fdivs
jg
cmpb
cwtl
jmp
rclb
dec
xchg
cmpsl
les
imul
cwtl
lret
sbb
push
mov
jbe
hlt
lds
fdivrs
jle
int
cwtl
push
push
imull
jg
add
sbb
inc
pop
xor
mul
push
fdivrl
mov
inc
xor
jne
lock
jg
insb
push
add
pop
inc
dec
adc
es
dec
mov
data16
gs
repnz
sbb
scas
jo
fidivl
and
push
sbb
ljmp
dec
inc
call
leave
adc
mov
push
insl
cwtl
sarl
dec
ljmp
test
mov
data16
aam
jl
lret
pop
cmpsb
clc
mov
push
mov
cmp
add
and
ds
pop
cltd
sbb
mov
mov
xchg
jp
mov
or
pop
or
fmuls
in
mov
adc
adc
mov
jl
cmp
aas
dec
sbb
lret
cmc
sbb
xchg
in
int
leave
test
mov
outsb
adc
cld
out
gs
daa
pop
and
cwtl
insb
fcmovu
shlb
into
push
ret
jmp
out
sbb
pop
jmp
jns
icebp
cmpsb
sarl
inc
les
pop
mov
call
cs
dec
cli
ror
adc
xchg
adc
push
cmp
push
aaa
jo
loope
out
pop
add
je
cmpsb
in
addr16
sbb
sub
jmp
mov
inc
fwait
clc
pop
ret
jecxz
inc
stos
sub
jbe
fwait
std
xchg
lds
hlt
add
maskmovq
mull
lds
cmp
lcall
mov
insl
adc
adc
xchg
ja
aam
lahf
int3
pop
stc
ljmp
mov
fsts
js
repz
loope
fadds
inc
inc
inc
bound
dec
cmp
les
ficoms
das
fdiv
pushf
in
hlt
repz
xchg
stos
shlb
pminub
inc
mov
cmp
lods
dec
inc
pushf
cwtl
sti
cmp
pop
xchg
mov
bound
fs
sub
jns
dec
jecxz
outsl
pusha
mov
mov
pop
add
cs
dec
mov
adc
dec
cs
or
icebp
sbb
and
sbb
addr16
cltd
or
push
data16
push
jecxz
push
cmp
repnz
and
mov
add
pop
jmp
mov
clc
std
mov
fwait
sbb
outsl
inc
jge
rcl
push
jmp
shlb
cmpsl
inc
lods
sar
mov
rorb
movsl
sub
mov
pop
push
xor
mov
mov
lds
repz
imulb
inc
int
rcrb
adc
testb
and
jecxz
stos
and
or
push
notl
sbb
data16
je
pop
mov
xor
hlt
cli
popa
clc
mov
inc
mov
mov
lods
jge
aaa
adc
add
mov
stos
jle
sbb
and
jb
popf
sbb
push
adcb
lods
into
xchg
cmp
xlat
sbb
push
mov
push
pusha
mov
dec
std
test
xor
mov
leave
fcoml
mov
fsubrs
mov
cltd
fs
lds
mov
daa
adc
les
and
sub
enter
mov
pop
push
mov
xchg
addl
cmp
movb
cmp
mov
icebp
and
lock
lods
xor
mov
fisttpll
cmp
and
cmp
or
sbb
fsubrs
inc
cmpsl
iret
sti
mov
sub
negl
sahf
lods
add
add
in
imul
lock
xchg
cltd
sbb
mov
mov
dec
and
push
mov
lcall
addr16
sbb
mov
in
pop
mov
push
aad
dec
jl
mov
sub
in
sbb
pusha
mov
push
mov
out
xor
xchg
push
mov
cmp
or
repnz
cmp
add
xlat
loope
cld
xchg
push
test
andb
cli
dec
dec
adc
fisttpl
stos
adcb
ljmp
sbb
add
push
push
imul
lret
xor
pop
pop
mov
adc
test
pop
lock
js
scas
fisubrl
sbb
jb
cmp
mov
mov
mov
mov
and
test
cmp
divl
add
fucomi
adc
mov
cmpsl
mov
cmp
orb
daa
xor
sbbb
mov
cmp
jg
jbe
jae
mov
add
xchg
jp
pop
cmp
xchg
ds
lds
ljmp
pop
add
inc
mov
mov
aaa
aaa
xlat
cmpb
push
ss
pop
xchg
in
out
cmp
aad
push
test
fidivrs
sbb
add
add
aad
scas
pop
cmp
cmovl
push
push
mov
lods
mov
xchg
repz
pop
pop
and
test
sub
iret
ficomps
jo
mov
or
xchg
xchg
xor
push
mov
out
filds
insb
cltd
js
pushf
xchg
push
and
and
xlat
sti
pusha
add
je
or
xor
add
popa
jne
nop
mov
mov
movsb
inc
jle
or
test
adc
dec
aas
pop
ja
cmpb
lock
std
jmp
jmp
out
ror
in
loopne
shrl
mov
popl
pop
mov
dec
call
add
lret
dec
rolb
xchg
jp
popa
jmp
seta
or
imul
and
add
nop
mov
sbb
shrl
xor
fnsave
addr16
scas
push
setle
mov
imul
lods
movsb
or
mov
lea
xchg
or
pop
inc
ja
notl
mov
fistpl
imul
les
in
xchg
popa
stos
out
sbb
mov
xor
jbe
mov
loopne
fstps
xchg
jmp
mov
lods
jle
and
je
and
pop
cld
push
ljmp
xor
clc
daa
daa
pop
or
in
push
jne
lcall
fistpl
mov
dec
nop
xchg
dec
add
ss
pop
divb
add
mov
sbb
inc
std
dec
jne
pushl
push
pop
sub
push
add
test
std
mov
js
imul
das
fldt
out
movsb
cmp
in
std
adc
jp
les
ss
aam
daa
jg
mov
addr16
adc
push
push
mov
jmp
or
pop
and
mov
fnstsw
xor
fiaddl
push
xchg
xchg
es
dec
jo
mov
sbb
cmpl
mov
or
test
jns
mov
ret
das
xchg
mov
ret
dec
outsb
lea
xor
ss
mov
cmp
jnp
mov
pop
sub
mov
jae
in
in
loop
xchg
movsb
hlt
in
jmp
adc
jle
and
aas
and
jb
sbb
sub
add
inc
jo
mov
lods
cmp
cs
pop
dec
test
mov
mov
or
int3
shrl
insl
call
dec
popa
popf
sub
mov
push
out
iret
adc
jns
nop
push
lds
cmp
mov
cli
lahf
mov
cwtl
mov
mov
shrl
add
repnz
insb
popf
add
pop
sbb
push
movsb
xchg
es
std
mov
push
adc
mov
mov
jp
sub
xchg
nop
pop
jb
into
push
mov
xchg
jl
mov
pop
pop
jp
push
ja
pusha
stos
shll
mov
scas
or
inc
call
xor
adc
jl
insb
pop
mov
push
xchg
popa
fucomp
inc
popl
push
dec
loope
fsubs
fcmove
inc
jb
pop
andl
les
lods
mov
and
mov
add
dec
scas
sbb
fwait
test
cld
sbb
stos
xor
jmp
pop
dec
push
cmp
xor
imulb
sub
or
sbb
mov
jnp
xchg
out
inc
xor
addr16
cmp
jl
das
fstpt
or
test
es
aaa
mov
test
mov
mov
jp
xor
popa
adc
jnp
movzbl
sub
in
fnstenv
jo
xchg
daa
js
jmp
popf
inc
mov
icebp
xchg
fst
imul
sbb
push
fcoms
mov
add
fdiv
mov
xor
lcall
clc
popf
int3
add
xchg
fcmove
dec
push
adc
movsb
or
jp
push
mov
mov
cmp
mov
insb
jle
lret
test
lock
jp
or
add
cwtl
and
add
xor
call
lock
pop
jns
sub
loopne
pop
push
mov
push
push
or
into
rorl
pop
push
mov
push
jmp
xor
or
add
dec
dec
cmpsb
push
daa
fs
loopne
dec
movsl
jns
sub
sub
cmpsl
jbe
pop
jge
jo
and
aaa
shll
ljmp
mov
jge
aad
sbb
and
testb
clc
inc
int
mov
dec
cmp
jp
cmp
aaa
lahf
aad
adc
shlb
lcall
scas
mov
pop
mov
sub
cmpsl
and
jg
mov
cli
lods
mov
fldcw
ret
jne
mov
dec
test
mov
mov
jne
sbb
inc
in
pop
add
pushf
shll
pop
out
cld
sbb
cmp
inc
mov
dec
sub
mov
int
ss
icebp
xlat
dec
lret
out
jp
rorl
jle
or
popa
push
fwait
push
mov
jle
inc
push
in
push
lcall
ljmp
sub
cmp
or
push
mov
dec
ret
mov
into
adc
xor
imul
icebp
enter
dec
insl
sbb
loopne
xchg
push
xchg
xchg
ljmp
inc
test
hlt
cmp
pop
ja
pop
xor
xor
out
mov
cmp
cwtl
cmpb
xchg
push
js
loopne
and
and
aad
push
mov
out
imul
fistpll
sar
dec
ss
sub
repz
xor
shlb
pop
lock
inc
push
pop
cs
sub
xor
xchg
or
ja
scas
cltd
addl
mov
xlat
push
mov
stc
sahf
out
loop
mov
pop
and
enter
xchg
lcall
add
push
notb
in
add
mov
and
ret
and
int3
insl
push
mov
or
test
clc
xor
repz
in
cmp
and
cmp
or
inc
pop
jne
cmpsl
daa
call
enter
stos
lcall
xchg
xchg
sbbl
lahf
cmpsl
xchg
pop
and
je
mov
call
pop
sub
ljmp
sbb
mov
loopne
jno
add
adc
add
lock
or
into
mov
mov
idivl
jns
movsl
jp
adc
insb
pushf
dec
mov
outsb
dec
fs
cwtl
xor
adc
data16
xlat
or
shlb
xchg
movaps
jnp
mov
shll
leave
fwait
mov
shrl
inc
mov
lock
call
xorb
inc
daa
push
and
xor
mov
inc
inc
shll
xchg
mov
jecxz
jecxz
aaa
and
hlt
mov
mov
adc
ljmp
xor
mov
cmpsl
sub
xchg
or
cmp
scas
dec
mov
mov
cmp
cmp
ds
ja
stc
dec
out
divl
lods
rorl
loope
sub
outsb
pop
adc
jle
mov
push
inc
mov
sbbl
mov
pop
sbb
jbe
jns
push
adc
sub
test
adc
push
pop
insb
repnz
fmulp
in
lock
push
mov
inc
out
in
xor
sub
mov
sbb
jge
or
movb
cltd
xchg
mov
jg
sbb
rolb
cmc
in
sbb
push
cmpsl
cmp
or
xchg
and
shlb
popf
pop
sub
dec
push
call
xor
ret
dec
scas
jle
out
js
sarl
lret
mov
mov
imul
and
hlt
jns
adc
mov
jle
or
arpl
sbb
xchg
dec
pop
xchg
mull
stos
xor
mov
shll
or
jl
xor
mov
sub
push
fwait
hlt
pusha
push
out
dec
fists
in
xchg
sbb
insb
and
xor
fldl
pop
jno
aaa
inc
mov
jb
jno
cmpsl
pop
out
mov
insb
lcall
scas
rclb
mov
pop
test
mov
xor
ja
data16
mov
iret
lods
iret
stc
or
xchg
hlt
mov
outsb
mov
testl
jp
loope
jecxz
sub
hlt
inc
stc
repz
jae
int
mov
dec
cld
add
push
push
pop
jne
fisubs
movsl
sarb
mov
or
xchg
cmp
stos
aad
jmp
push
ja
bound
sbb
fldcw
cltd
pop
xchg
rcrb
outsl
pop
ja
int3
push
mov
or
xchg
fistps
fprem
jb
fsubs
mul
mov
in
adc
adc
pop
out
es
ljmp
rclb
jle
dec
shl
mov
andb
sub
xor
or
adc
cmpsb
push
inc
or
dec
cmp
xchg
mov
les
mov
push
cmpsl
adc
and
ficoms
mov
or
sbb
cmp
call
sbb
mov
stos
stos
aad
ror
nop
popa
aad
out
mov
and
js
addr16
xor
in
adc
xor
ljmp
mov
test
lcall
cmp
fiaddl
mov
jnp
sbb
stos
adc
dec
fwait
notl
loopne
xor
pop
inc
decb
pushf
jl
test
fs
mov
ret
jo
out
mov
xchg
test
loopne
sbb
cmp
arpl
leave
add
mov
dec
ret
mov
lret
mov
mov
iret
mov
xor
add
lahf
cmp
in
push
pop
imul
mov
mov
call
or
cwtl
mov
push
cltd
jmp
and
adcb
enter
xor
pop
pushf
xor
push
mov
mov
in
dec
jecxz
cmp
cmp
repnz
add
cld
jecxz
jo
aas
pop
jno
loope
or
cli
jle
sub
push
sti
test
mov
xchg
pop
pop
insl
add
les
ljmp
or
les
and
aaa
push
jb
loope
add
push
mov
lret
popa
sbb
push
ds
xchg
out
xor
je
mov
jg
sub
lods
in
mov
inc
jl
mov
cmp
add
repnz
dec
bound
push
jmp
add
sarl
push
jae
xor
scas
and
xlat
cmp
mov
stos
xchg
out
lods
hlt
loop
jnp
cwtl
adc
pop
mov
push
fidivrs
pop
sti
dec
into
sub
sub
xor
nop
xbegin
rcrb
in
int3
cwtl
out
frstor
inc
or
lcall
mov
push
cmp
sub
mov
push
jmp
jo
or
popa
outsb
cs
mov
cld
fnstcw
iret
fcoms
fwait
in
mov
mov
xchg
mov
mov
in
outsb
push
mov
inc
adc
adc
or
pop
sbb
inc
or
pop
icebp
sahf
push
inc
daa
lea
or
push
add
int3
ret
nop
xchg
in
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
fdivl
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
faddl
je
hlt
and
mov
xor
hlt
jl
insb
fs
or
sbb
sub
fsubr
int3
fdivrp
mov
in
in
les
lods
and
lret
out
jl
sbb
xchg
cld
repz
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
lahf
sti
jmp
fldt
mov
lds
popa
aas
pop
das
dec
pop
cmp
jg
outsl
or
fldt
stos
lcall
packssdw
das
dec
pop
pop
dec
sub
outsl
or
fldt
stos
lcall
cmovs
and
xor
jl
mov
fwait
int3
mov
scas
lahf
add
inc
je
adc
aad
testl
pop
pop
repnz
iret
adc
xor
dec
mov
inc
cmc
stos
dec
es
adc
add
imul
mov
stos
pop
mov
mov
add
ja
daa
or
neg
addb
pop
jnp
push
pop
inc
mov
pop
sbb
mov
leave
into
cs
fistpll
xchg
xchg
xchg
mov
or
mov
outsb
insl
or
sti
adc
and
fs
inc
dec
out
mov
test
jle
movsb
cmpsb
dec
shrb
cmp
mov
dec
ret
daa
hlt
push
and
adc
jnp
outsl
cs
arpl
dec
jnp
sbb
hlt
sar
jmp
fldt
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
dec
fsincos
out
ficompl
xchg
lcall
jb
or
cmp
insb
cmp
outsb
pushf
xchg
std
xchg
xchg
lret
clc
mov
movsl
jp
or
sbb
pop
sbb
idivb
scas
mov
mov
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
or
fldt
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
or
mov
or
dec
xor
cmpsl
sti
jg
repnz
pop
in
out
dec
adc
pop
outsb
xchg
pop
sbb
rcrl
add
add
jge
out
sub
int3
aas
dec
push
lahf
mov
push
sti
mov
enter
lods
ljmp
inc
stc
inc
fmuls
rol
jne
adc
dec
sub
sarl
ror
divl
push
add
scas
add
rcrb
mov
pop
ret
sete
lret
sub
and
push
mov
movsb
adc
and
rorb
fcmovbe
adc
aad
insl
jg
popa
mov
stc
outsl
xor
push
addr16
dec
aas
imul
jae
xchg
nop
dec
mov
fprem
xor
sub
scas
shlb
mov
fiaddl
inc
mov
push
test
xor
int
leave
mov
mov
push
xchg
sub
jo
add
add
stos
mov
negb
imul
je
jne
fwait
sub
dec
adc
pop
iret
std
sti
add
and
jnp
stos
mov
add
daa
rcrl
stc
and
cmp
outsb
popf
inc
clc
lods
sub
and
and
push
addr16
cltd
adc
push
mov
loop
sub
imul
jecxz
mov
adc
les
mov
add
inc
fisttpl
or
cmpxchg
rorl
shlb
cwtl
in
fcomp
out
sbb
fucomip
leave
pop
dec
lahf
ret
mov
in
lds
push
je
and
fcomps
scas
out
xor
test
js
xchg
mov
outsl
and
push
sub
iret
js
out
nop
cmp
gs
ja
enter
push
dec
pop
or
sub
out
movsb
pop
leave
std
sbb
mov
mov
test
insl
push
pushl
sub
fsubp
or
icebp
mov
or
lret
push
jo
mov
fwait
sbb
mov
call
in
xor
sbb
imul
xlat
daa
int
jle
iret
cmp
lret
push
inc
push
mov
or
adc
cmc
pop
cmc
lea
jnp
pop
jnp
sbb
add
and
cld
pusha
jmp
sub
inc
mov
lret
ss
mov
pop
loop
or
rolb
sbb
mov
xlat
lret
xchg
sahf
pop
adc
mov
fldz
into
jge
mov
sbb
cmp
fnop
sbb
cwtl
in
cmp
fdivl
das
lods
xchg
daa
out
insl
lods
jno
lods
fcmovnbe
fcomps
xchg
stos
js
pop
dec
mov
push
fisubs
iret
out
and
insl
fcomps
adc
xchg
mov
icebp
push
pushf
xchg
push
pop
mov
push
lods
inc
adc
dec
xor
add
notl
outsl
ret
push
dec
push
push
mov
xorl
jmp
dec
sub
xchg
clc
sbb
xchg
test
in
or
pop
mov
rcrb
cltd
lea
push
xchg
mov
or
and
mov
xor
iret
mov
mov
xor
sbb
mov
insb
and
roll
jbe
popf
movb
adc
jb
and
push
lret
out
loopne
ljmp
inc
cmp
mov
xchg
test
inc
ljmp
inc
xchg
mov
xor
js
insl
pop
repz
ret
sub
inc
xchg
hlt
pop
pop
pop
pop
sbb
or
xlat
cs
dec
shlb
cmp
scas
pop
roll
popa
xlat
inc
mov
imul
sbb
nop
cmp
cs
push
cmp
bnd
lock
push
ret
or
out
and
dec
jns
sub
je
arpl
push
xor
fiaddl
ds
shrl
jne
mov
inc
and
add
push
ds
scas
or
jns
dec
into
adc
cwtl
dec
mov
test
les
sysret
xchg
aas
push
add
adc
mov
cli
pop
inc
sbb
ret
inc
mov
dec
mov
test
lcall
inc
cmpsl
push
notb
inc
inc
insb
cs
mov
push
push
je
ss
unpcklps
pusha
sbb
push
mov
pop
mov
mov
loop
xchg
gs
out
shr
adc
in
mov
jbe
dec
or
fnstcw
popf
jns
pop
mov
pop
pop
enter
int
ret
arpl
test
outsb
lahf
lds
push
add
mov
roll
xchg
or
subb
mov
xchg
mov
mov
aas
ss
add
dec
push
ss
xor
mov
xchg
test
cltd
test
ljmp
insl
push
add
lea
stc
lock
std
int3
mov
xor
ret
pop
cmp
jecxz
push
mov
fcomps
dec
test
jnp
test
lock
out
cmc
jge
jge
loop
and
in
test
iret
dec
cmp
mov
repnz
cwtl
mov
adc
lret
call
dec
mov
rorb
dec
rcrb
xchg
mov
push
mov
push
das
lea
mov
mov
sub
pop
pop
loopne
or
and
and
outsl
lods
stos
dec
mov
pop
cmc
sbb
ja
inc
les
jg
ljmp
fucom
mov
jl
xchg
iret
stos
icebp
cs
pop
mov
mov
mulb
jge
icebp
or
rorl
mov
out
and
jno
sbb
pop
push
loopne
sub
mov
inc
xchg
dec
aad
daa
loope
dec
aas
imul
dec
ffree
es
test
push
xorb
add
xor
enter
out
sbb
dec
mov
cs
dec
loope
xchg
mov
pop
loope
outsl
mov
mov
adc
insb
inc
or
fmulp
shll
in
add
mov
mov
mov
fdivrs
popf
add
dec
adc
mov
ds
push
cmp
jg
xchg
or
push
sbb
rcrb
pop
jo
jl
adc
popf
xchg
lea
adcl
ljmp
popa
dec
cs
sbb
inc
repz
addr16
inc
sub
test
adcb
xor
dec
pop
jge
pop
xchg
lret
subl
mov
pop
adcb
or
and
jo
arpl
xchg
mov
or
xchg
stos
notb
lret
enter
iret
cmp
mov
int
cmpsl
aad
mov
mov
cmpsl
stc
push
adc
mov
into
popa
es
jg
ds
fdivs
xchg
bound
test
jbe
nop
dec
xor
pop
xchg
and
loopne
pusha
pop
scas
and
int3
xor
mov
push
loope
sub
sbb
push
adc
daa
ret
cmp
lahf
xor
push
push
or
inc
insb
sub
popa
xchg
ss
dec
ss
jle
xchg
outsl
dec
inc
sbb
subl
mov
dec
add
xchg
addr16
mov
ds
aam
fs
dec
cltd
mov
and
fsubrs
mov
pusha
xchg
adc
jmp
xchg
mov
jle
push
cmp
gs
mov
fisubrs
pusha
mov
or
test
gs
daa
das
lret
call
cld
pop
popf
cmpsl
sbb
sbb
xor
add
xchg
add
sub
add
hlt
jmp
cmp
scas
xchg
pop
push
pusha
xchg
in
out
jo
aad
call
and
into
adc
mov
scas
fcomps
mov
movsl
rclb
push
jno
xchg
sub
add
imul
pusha
int
mov
mov
mov
clc
decb
enter
test
jbe
dec
xor
cs
negb
addb
sub
cs
test
xor
sbbl
or
xchg
xor
pop
add
in
and
inc
or
ljmp
xlat
xor
je
repz
pop
mov
test
dec
stos
imul
push
xlat
mov
ljmp
pop
fsubrs
xlat
adc
adc
fisubrs
out
lea
add
mov
les
jns
cmpsb
cmp
stos
or
jle
add
das
clc
mov
popf
fs
or
add
jae
loop
iret
into
mov
repz
insb
outsl
ljmp
pop
and
jmp
dec
out
dec
xor
jp
jb
xor
push
fnstcw
sbb
loop
mov
xchg
dec
mull
popa
lea
decl
cmp
sbb
mov
inc
pop
fisttpl
jno
push
dec
movswl
or
pop
xor
jl
or
mov
ljmp
and
cmp
lahf
dec
mov
push
mov
xor
dec
jns
push
add
pop
pop
sub
loopne
mov
scas
loopne
movsb
dec
pop
xchg
sti
push
xchg
fidivrl
mov
mov
pop
dec
fdivrs
add
and
mov
leave
push
push
sub
in
sub
jae
or
ss
imul
iret
and
push
jb
and
jecxz
xchg
inc
mov
inc
shr
push
xor
dec
cmp
mov
dec
adc
aas
or
cmp
mov
cmp
add
adc
xor
adc
xchg
int3
aam
inc
add
sbb
es
adc
int
cmp
sti
add
mov
inc
pop
stos
xorl
sahf
pop
andl
je
xchg
push
arpl
adc
mov
mov
inc
push
xchg
sarb
push
out
sbb
int3
stos
adc
int
add
xchg
push
rcll
and
or
jg
dec
shrb
push
lods
movsb
xchg
pop
or
mov
test
icebp
rol
add
call
dec
xor
aad
xorb
pushf
aaa
inc
dec
addr16
lcall
jmp
addb
out
fldenv
pop
inc
mov
stos
sub
mov
xchg
jmp
cltd
push
imul
pushf
adc
fnstenv
shlb
cmpsb
or
cmc
push
clc
inc
nop
cmpsl
popf
test
inc
push
into
out
push
jmp
jecxz
sbb
inc
adc
push
pop
push
cmp
and
push
mov
fldenv
inc
insb
cmc
xchg
sub
mov
iret
push
xor
int3
pop
xor
in
and
das
push
sub
jb
jb
jb
mov
mov
xor
out
xchg
sub
lods
orl
inc
imul
arpl
mov
xor
sbbb
addr16
jmp
ret
mov
xchg
xor
lret
rolb
xchg
xchg
mov
xchg
or
pop
sti
bound
lahf
insb
mov
jne
aas
cmp
lcallw
sub
bound
sbb
je
cltd
pop
shll
out
mov
lods
mov
jmp
and
push
sahf
mov
enter
cmc
les
add
es
jno
in
stos
addr16
lods
aaa
push
test
inc
pop
and
sub
dec
lea
mov
xchg
or
push
out
into
mov
popa
pushf
push
jge
push
insb
dec
add
idiv
xor
ja
test
bound
scas
mov
clc
cmc
xchg
push
repnz
adc
sahf
and
xor
scas
lock
or
and
repnz
mov
loopne
xchg
lcall
pop
push
outsb
sub
push
push
stos
mov
or
xor
inc
ds
xchg
shll
add
xor
mov
int3
lret
pop
and
stc
jmp
mov
jg
mov
insb
cli
mov
ret
xchg
cmc
xchg
sarb
lock
xchg
rcll
and
decb
and
xchg
test
jg
enter
cmpsl
lret
push
test
notb
test
and
adcl
insl
xchg
out
add
mov
insb
pop
les
sbb
mov
adc
test
and
pop
inc
aam
push
cmp
clc
popf
mov
pusha
add
test
jle
mov
xchg
out
jo
rcrl
sub
call
xor
add
mov
add
mov
and
rorl
mov
push
aas
pop
xor
xchg
or
dec
out
test
int3
add
repnz
push
pop
inc
int
sahf
pop
aas
sbb
adc
aaa
jl
inc
rcr
jg
lret
gs
and
mov
cli
outsb
mov
dec
out
mov
sbb
insb
xchg
jb
add
fdivrs
jo
movsb
insl
xchg
enter
xor
popa
imul
jb
push
xchg
pop
jne
movsb
in
push
scas
mov
dec
les
xchg
add
movsl
sbb
pop
or
aaa
dec
andb
mov
xchg
sbb
and
sub
and
imul
stos
ljmp
mov
jmp
stc
adc
pop
test
sbb
sub
mov
dec
insb
push
jnp
xor
jns
sbb
inc
mov
lods
push
ljmp
ljmp
stos
cld
test
popa
push
push
fcoml
pop
add
or
xor
dec
push
pusha
xchg
nop
ret
ret
in
fildll
das
or
pop
icebp
jle
fldt
idivb
lretw
sahf
out
fs
mov
jmp
fidivrs
imulb
or
adc
mov
lock
jg
jge
xor
sub
imul
or
or
push
test
outsl
lods
mov
cmp
push
cmc
ss
jmp
inc
mov
inc
push
mov
fisttps
mov
mov
mov
and
jae
inc
imul
pusha
in
push
mov
stos
add
mov
dec
dec
shrl
lock
push
sub
or
mov
jp
lret
clc
fidivs
aaa
mov
mov
mov
leave
in
mov
pop
das
add
inc
cmp
dec
mov
bnd
jo
icebp
dec
popa
mov
enter
push
jecxz
add
popf
sbb
imul
pop
xchg
sbb
outsl
sbb
jle
loop
pop
dec
add
xchg
cmp
mov
les
pop
ja
xor
mov
sahf
daa
sub
imul
xchg
insl
pop
in
cwtl
out
mov
mov
add
cltd
inc
sbb
aas
add
pop
cli
jmp
fwait
insl
sbb
adc
test
sub
dec
and
sbb
lock
shll
or
addr16
ret
mov
dec
in
stc
mov
repz
add
aaa
and
mov
dec
pop
inc
jae
js
shlb
cmp
pusha
dec
jecxz
aam
mov
add
xor
dec
mov
out
fcomps
sub
outsb
xor
sbb
fldt
inc
jp
sbb
into
mov
cmp
imul
mov
or
add
mov
push
sbb
jge
pushf
pop
cs
xlat
ret
xor
jnp
sti
test
mov
call
jp
xor
push
jg
push
sbb
mov
daa
sti
nop
mov
popa
dec
scas
cmp
adc
orl
xchg
pop
and
cmpsl
inc
aam
icebp
jo
repz
imul
out
testb
push
inc
cmp
push
loopne
inc
hlt
inc
push
pop
mov
adc
xor
testl
movsb
mov
lods
int
cs
adc
stc
repz
outsb
push
cmp
jo
faddl
arpl
mov
mov
mov
lds
jns
test
cmp
daa
xor
mov
in
push
jl
mov
push
insb
sbb
stos
rcrl
jbe
push
cmpb
shlb
jge
inc
xchg
mov
push
cs
imulb
dec
flds
out
rep
push
lods
inc
sub
xchg
test
mov
dec
or
int3
hlt
mov
out
out
push
mov
pop
mov
or
mov
mov
jno
mov
mov
push
test
ds
cmc
xchg
roll
add
adc
add
and
fcomps
jle
jbe
dec
nop
mov
hlt
bnd
mov
mov
cmp
or
dec
mov
cwtl
lea
mov
inc
dec
cmp
xchg
mov
jb
push
rolb
push
cwtl
icebp
je
xor
repz
cmpsb
push
setns
gs
cmp
pop
push
xchg
push
out
test
clc
inc
das
and
pshufw
orb
shr
sti
jl
addr16
aas
test
jb
addr16
int3
jge
xchg
fbld
cmpsl
sbb
jnp
fs
faddl
ficomps
jecxz
aaa
pop
pushf
pop
and
fnsave
or
cmpsb
adc
xchg
add
lods
ds
add
xchg
mov
add
inc
push
repz
cmp
jge
call
xchg
push
hlt
xchg
cs
ret
nop
adc
ficompl
gs
xlat
hlt
adc
inc
sub
dec
xchg
xor
cmp
or
mov
pop
sbb
mov
lods
xor
cmp
movsl
mov
stos
xchg
jnp
repnz
mov
xchg
dec
or
mov
pusha
sub
push
mov
xchg
mulb
sbb
jle
jmp
push
mov
pop
dec
pop
data16
shr
into
into
push
pop
jp
adc
mov
or
nop
jbe
inc
and
adc
orb
daa
pop
mov
repz
inc
cmpsb
enter
jl
test
xchg
ss
aam
lds
add
mov
repz
push
push
cmpsl
jge
or
testb
xlat
test
icebp
out
pusha
adc
insl
test
cli
mov
test
add
dec
jg
lcall
mov
loopne
push
lds
pop
xchg
scas
mov
in
xchg
scas
sbb
push
sbb
pop
cmp
dec
fxch
dec
lcall
push
push
negb
cmp
ljmp
sub
mov
pop
pusha
mov
pop
addr16
cs
cmp
or
outsl
mov
inc
sub
fwait
push
into
addr16
out
int
fs
adc
xchg
push
dec
outsl
jecxz
xchg
push
testl
mov
add
cmpsb
shrl
fcoml
sti
mov
lret
inc
xor
jo
imul
mov
and
inc
xchg
jl
jle
cli
in
loopne
test
lock
mov
imul
push
jb
stos
and
push
loop
sub
lret
and
jecxz
dec
jmp
or
and
cltd
daa
lods
dec
pop
jae
loop
stc
bound
adc
aaa
adc
cs
dec
imul
xor
mov
jnp
pop
test
and
xchg
vmovups
jae
in
sub
test
and
push
sbb
nop
aam
jne
add
cltd
adc
jmp
loope
jg
lahf
lods
push
xor
lcall
arpl
mov
dec
mov
add
and
mov
mov
inc
jmp
cmp
jno
jns
or
orl
sub
loopne
fistl
jo
outsl
jge
cmp
jg
lret
mov
adc
sbb
enter
mov
or
fildl
imul
inc
jge
cmp
mov
bnd
rorl
or
sub
or
jmp
fdivrs
push
daa
out
jmp
scas
add
push
aas
add
outsl
mov
xor
loopne
cld
test
dec
rclb
xor
aam
xchg
movsb
xchg
rolb
pop
in
mov
mov
dec
cmp
aam
arpl
mov
aas
test
inc
pmaxub
xchg
icebp
lahf
andl
in
stos
push
cmp
ror
jno
aad
xchg
inc
imul
add
out
mov
jns
jno
ficomps
or
dec
and
call
rorb
add
and
inc
cmp
addb
jmp
sub
daa
add
fs
arpl
in
in
jbe
push
push
sub
cli
jae
mov
pop
cmp
scas
dec
cmc
and
sbb
jo
and
sti
sbb
xchg
xchg
pop
test
xchg
fucomi
subb
cwtl
aad
add
mov
pop
aad
add
push
jl
imul
mov
or
shlb
aad
pop
mov
movsl
insl
mov
mov
lock
lods
cmpsb
lret
rcl
arpl
and
push
mov
sub
lcall
jbe
and
data16
aad
lock
xchg
cmpsl
lods
outsb
cli
xchg
jmp
fldt
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
or
fldt
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
or
fldt
stos
lcall
packssdw
pop
das
dec
pop
cmp
jg
outsl
or
fldt
stos
lcall
xadd
mov
aam
in
hlt
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
mov
cmp
xchg
dec
loop
ror
insb
popf
xor
bound
push
sbb
cmp
repnz
ret
xchg
popf
xor
add
int
fdivl
inc
std
push
adc
add
xor
loop
bnd
push
lea
xchg
adc
jo
jae
ss
and
jge
sbb
xchg
inc
ret
pop
dec
test
shll
lret
push
push
daa
and
leave
repnz
sub
loop
ja
lret
inc
push
int
pop
mov
jno
mov
andb
xchg
add
pop
jb
xor
je
mov
xor
jb
cmp
fucom
or
lds
dec
repz
cmc
int
xchg
repnz
bound
push
in
loop
je
dec
pop
sbb
test
repnz
bound
std
mov
jb
inc
add
aas
bound
cmp
xor
push
cli
mov
and
mov
sub
insl
ret
xchg
and
adc
lds
inc
in
jle
js
dec
sbbb
xchg
fwait
outsl
test
xchg
pop
popf
xor
shll
and
sbb
sbb
xchg
cmp
cmp
call
or
jae
adc
cmp
dec
lock
repnz
ret
lea
popf
xor
fnsave
inc
std
push
or
cmpb
insl
ret
lea
popf
xor
fnsave
inc
std
push
or
outsl
push
push
bound
jo
arpl
repnz
xchg
insb
loopne
movhps
imul
xor
fcoms
dec
and
negb
jae
jp
sbb
push
lahf
js
mov
add
xchg
insb
leave
icebp
xchg
pop
sbb
loope
sub
pop
int3
fisttpl
sti
nop
mov
push
outsl
mov
mov
xchg
je
xchg
scas
stos
cli
or
mov
mov
add
jle
repz
fwait
adc
fcmovb
adc
jl
xchg
adc
lods
push
cmc
inc
cmp
lret
jns
and
out
jle
std
popf
enter
lock
icebp
fdivp
mulb
mov
adc
dec
push
xchg
mov
fiaddl
push
fstpt
enter
or
jmp
adcb
stos
repz
aad
jmp
insl
inc
popa
clc
call
jns
jg
sbb
mov
icebp
movsl
xlat
pop
cmp
cmp
je
or
arpl
in
inc
inc
lret
mov
mov
rol
sbb
sbb
or
into
or
mov
sbb
add
xor
std
fcmovnu
insb
mov
mov
adc
sub
add
lods
push
popf
cld
and
in
sub
insl
inc
popf
add
jle,pn
das
mov
loopne
shl
push
test
into
jb
pop
mov
mov
je
inc
leave
hlt
pusha
adc
test
add
add
mov
xor
push
and
pop
shll
jo
leave
repz
or
or
mov
cmpsl
mov
and
push
pop
ret
and
loop
daa
inc
jbe
pusha
pop
cmp
xchg
fisubrl
xor
daa
in
mov
insb
fnstenv
aad
push
push
xadd
ret
jge
sahf
loope
daa
cld
jnp
cltd
movsl
scas
pusha
sti
adc
mov
sti
pop
cmp
sbb
dec
xchg
push
rorl
jmp
adc
mov
leave
sub
or
or
fisubrs
sub
icebp
mov
pop
call
clc
sbb
jo
pop
in
cmp
push
loop
lcall
hlt
mov
pop
lock
cmp
cmp
loope
mov
stos
ret
aam
inc
std
xchg
pusha
hlt
adc
clc
addb
dec
and
adc
mov
int3
adc
dec
and
push
in
incl
leave
gs
or
mov
fisttps
imul
pop
push
xchg
and
fucom
mov
dec
mov
daa
fldl
clc
sbb
push
sub
ficoms
mov
dec
cmp
or
and
fcoml
cwtl
subl
cld
sahf
inc
cmp
mov
push
stc
or
lret
xchg
push
stc
dec
pop
int
mov
sub
fsubrl
inc
mov
cltd
in
movsl
pop
pop
rcrl
dec
out
std
or
mulb
push
jmp
fdivl
pop
add
movsl
rolb
push
mov
push
lea
movsl
test
int3
jnp
push
imul
push
jge
or
int3
mov
dec
jno
repnz
push
pop
mov
decl
ja
lods
adc
aaa
cld
inc
push
loopne
inc
push
adc
dec
daa
mov
cwtl
lods
popf
inc
rorb
rcrl
mov
inc
xor
js
pop
imul
iret
adc
lods
mov
mov
stos
and
inc
test
clc
xor
fcoml
mov
pop
icebp
mov
xchg
orb
es
jne
sub
stos
inc
sbb
xchg
cs
aaa
add
jl
jbe
rolb
ret
jae
cwtl
or
add
imul
fs
lcall
push
aad
adc
test
insl
bound
fstl
insl
icebp
outsb
mov
andb
cltd
arpl
lea
js
pop
jge
dec
lret
cwtl
into
negb
loop
fnstcw
lds
imul
aas
xor
shl
dec
xor
aam
mulb
push
into
lret
lods
and
shlb
inc
imul
adc
or
mov
mov
popf
pop
mov
sub
lret
in
adc
jmp
dec
push
xchg
mov
xor
add
iret
xchg
dec
cmp
push
pop
xrelease
mov
jns
addr16
cs
cmpsb
ljmp
and
mov
imul
lahf
mov
loopne
fxch
pop
rcrb
cwtl
sub
add
in
xor
lea
in
mov
adc
rep
cmp
cs
leave
js
test
testl
out
les
mov
pop
push
int3
in
std
fildl
lcall
push
addr16
out
lcallw
test
pop
add
cmpsb
push
sub
ljmp
or
pop
xchg
jmp
mov
xchg
lods
rolb
adc
mov
push
push
ja
sbb
addl
mov
repnz
sbb
fwait
dec
xchg
sahf
test
int
inc
shl
mov
insb
mov
stos
adc
or
aam
imul
call
xor
push
and
inc
mov
inc
mov
pushf
fcomps
push
mov
daa
je
sub
jno
jns
fidivrs
testl
ss
in
insb
call
push
stc
cli
es
scas
js
xchg
xchg
test
ja
fidivrs
push
push
dec
cmp
pushf
pushf
and
pop
inc
stos
mov
es
ret
lds
rcr
imul
dec
lcall
stc
inc
shlb
stos
dec
dec
mov
movsl
movsl
cmp
push
scas
daa
add
push
xchg
jmp
or
jae
push
push
or
jle
jo
cmp
mov
scas
out
test
mov
push
fcoms
mov
jecxz
fildll
sub
push
mov
lret
test
imul
xchg
fcmovnbe
ss
stos
and
das
add
and
mov
rorl
fs
jb,pn
sub
aad
ret
sbb
sbb
pop
sti
xlat
mov
sub
mov
jg
mov
dec
dec
dec
and
and
scas
std
jmp
orb
sbb
jge
in
cmp
adc
les
push
insl
cwtl
xchg
or
ret
inc
jo
shrl
push
lret
scas
or
dec
mov
pop
ss
push
mov
jl
nop
repnz
adc
out
push
mov
decl
in
popa
lcall
out
ja
dec
sahf
push
ficoms
or
mov
call
push
sbb
stos
cmp
sub
cmpb
push
sbb
repnz
lds
stos
push
mov
popa
mov
aad
test
or
loop
sub
stos
insb
xchg
mov
adc
int
test
cmp
daa
in
addb
push
cmpb
xor
cmp
or
cmp
jg
imul
jp
stc
push
adc
xchg
lock
aas
jecxz
loope
repz
fildll
mov
xchg
inc
fcomi
bound
or
lret
xchg
ret
lcall
pop
push
movsl
in
imul
pusha
or
shr
shrb
imul
mov
fs
out
xlat
and
adc
cmp
adc
iret
sbb
test
mov
fcoml
in
imul
outsl
jl
pop
push
cltd
aas
fs
mov
xchg
sbb
push
cmp
sbb
mov
lods
xlat
jmp
xor
add
ret
movl
adc
fmul
mov
out
es
push
cmp
xor
jnp
mov
mov
jl
loopne
jnp
leave
call
xor
cmc
mov
sub
test
repz
sbb
popf
xchg
lret
aaa
mov
cs
rolb
push
sub
out
add
je
mov
jl
mov
or
cmp
loopne
fwait
scas
pop
popf
test
mov
fsubl
mov
rcr
pop
out
xchg
add
jecxz
fisubs
testb
xlat
aam
mov
pusha
data16
rclb
lods
fs
aad
pop
mov
movsl
and
dec
xor
std
dec
outsl
mov
inc
cmp
inc
xchg
pop
out
add
shlb
enter
lret
push
xor
pop
mov
push
fcoms
loop
stos
aad
dec
pop
mov
pushf
imul
mov
gs
ljmp
addr16
push
jno
mov
std
cmc
or
inc
xchg
scas
or
stos
and
test
es
arpl
pop
pop
das
xor
mov
ror
shrb
repnz
dec
lret
sarb
imul
sbb
or
push
jns
push
inc
call
and
aam
pop
sbb
cmp
and
jp
cmc
scas
stos
inc
aas
fisubl
daa
daa
push
movsb
andb
lret
fs
repz
repnz
mov
xor
imul
sub
xor
fdivs
cmpsl
test
int
scas
out
sub
mov
mov
pusha
adc
repnz
insb
and
cmc
xchg
cmp
enter
clc
sub
dec
jge
adc
cmp
scas
addr16
adc
pusha
cmp
daa
shlb
jbe
je
stos
mov
imul
out
add
push
push
xchg
mov
cltd
adc
aaa
shll
jecxz
push
daa
push
sub
mov
or
test
mov
scas
fcmovnbe
xchg
setle
lret
xorb
or
clc
cmpsb
imul
inc
in
sahf
dec
push
aaa
adc
ret
sbb
ljmp
pusha
xchg
cmp
xchg
mulb
outsb
and
ss
xor
jg
push
mov
scas
lds
cld
mov
sarl
es
gs
xchg
and
fsub
stos
scas
sub
cs
xchg
test
xchg
push
xchg
xlat
repnz
mov
cmp
pop
insl
lods
push
mov
or
sub
push
and
mov
mov
ja
popf
adc
jb
jle
jg
xorb
std
sub
clc
mov
scas
pop
mov
sbb
dec
popa
mov
inc
aaa
mov
mov
lds
mov
inc
imul
or
movsl
pop
dec
das
jge
sbb
out
sub
jbe
or
cs
insb
pushf
es
subl
fiaddl
dec
or
scas
jge
popf
mov
scas
hlt
dec
mov
xchg
ljmp
int
pop
ja
ds
int
fs
jno
stos
cmp
push
pop
sbb
sbb
fistpll
push
inc
sbb
xchg
push
xchg
fwait
or
cltd
and
cmp
xor
pop
shll
test
sbb
divl
in
sub
cmp
aas
mov
adc
xchg
ss
and
in
mov
mov
mov
xor
adc
stc
xor
dec
shrl
xlat
fs
sbb
adc
sbb
mov
and
out
imulb
js
ss
sahf
cmc
call
fs
lahf
sbb
add
subps
or
sbb
out
add
lods
push
imul
in
scas
gs
adc
out
pop
outsb
jmp
cwtl
xor
les
pop
sbb
mov
ljmp
gs
push
sbb
xchg
hlt
outsb
fdivl
test
xorb
shlb
mov
pop
mov
insl
mov
jmp
xor
mov
push
movsl
lcall
xor
sarb
stc
rorl
xchg
bnd
rol
dec
and
sub
std
and
sbb
fwait
push
out
push
push
mov
pop
push
adc
aad
cmp
mov
inc
xor
js
lcall
xor
cs
or
sbb
fstps
ret
xchg
imul
pusha
jge
or
icebp
daa
outsb
or
stos
jp
jge
and
and
sarl
xor
jno
pop
jnp
add
test
jb
sbb
pop
push
dec
stos
dec
ljmp
jae
adc
lods
sub
mov
repz
inc
sub
imull
or
pusha
out
out
sbb
out
ss
data16
sub
gs
xchg
scas
and
orl
bound
ja
or
shrb
daa
push
sbb
adc
or
pop
mov
inc
dec
insb
stc
mov
xor
loop
push
shlb
insl
add
mov
sbb
pop
inc
mov
mov
loopne
cltd
test
call
jl
dec
jnp
rcll
pop
outsl
dec
xlat
lods
push
mov
mov
xor
xchg
bound
iret
sub
mov
fucomp
mov
out
xchg
je
out
cltd
shrb
incb
daa
xchg
sbb
cmp
xor
ja
ds
in
popf
mov
test
sub
mov
in
xchg
cmp
push
call
mov
xchg
cmp
rcll
mov
loopne
shrl
int
movd
inc
mov
out
jo
jmp
fsubl
imul
sbb
stc
out
daa
fdivr
add
movd
outsb
andb
in
mov
mov
lahf
and
xlat
adc
push
enter
in
addr16
adc
lods
fistpl
mov
cmp
insl
sub
xchg
jmp
lcall
in
sub
mov
ss
mov
mov
pop
cmpsb
sysexit
jmp
or
mov
mov
in
xchg
shll
jge
sbbl
jo
imul
sbb
sbb
add
xchg
or
hlt
mov
mov
cli
sbb
fimuls
ret
movsb
push
inc
xlat
int3
or
adcl
cmp
lea
call
mov
scas
addr16
das
in
cmpl
or
repz
cmp
xchg
decl
mov
adc
push
mov
pushf
leave
loop
jecxz
pop
cltd
push
aaa
xchg
pop
lahf
sbb
jne
in
pop
je
in
in
mov
mov
mov
test
arpl
jl
outsl
decb
cmc
push
das
dec
ret
inc
xchg
fsubs
je
inc
rorb
xchg
mov
pop
push
dec
in
std
and
pop
push
mov
sub
stos
inc
mov
arpl
xor
xchg
xchg
xor
cmp
pop
cmc
sub
mov
pop
lret
inc
fcomip
dec
mov
mov
call
sbb
bound
jecxz
movsb
xchg
add
cmp
fildl
testl
loopne
xchg
loop
push
mov
lcall
sbb
stos
mov
adcl
sub
push
inc
xchg
jmp
sbb
or
maskmovq
notl
and
sti
das
or
pushf
stos
pushf
mov
repz
push
push
xchg
mov
rorl
mov
jne
mov
sti
std
outsl
pop
cltd
mov
cli
mov
ret
insb
mov
jle
sbbb
inc
jl
adc
xchg
mov
cmp
push
mov
mov
cmp
out
sub
xchg
sub
add
dec
inc
imul
adc
xchg
pop
shlb
jle
pushf
add
xor
aas
hlt
push
and
std
or
pop
jb
scas
sti
jns
push
adc
xor
int3
or
pusha
icebp
jecxz
adc
cwtl
add
test
sbb
aam
lret
mov
push
aam
sub
mov
xchg
push
mov
xor
sub
jae
cmc
cmpsl
test
pop
jecxz
sub
lock
pop
daa
dec
lods
cmpsl
lock
cmp
mov
out
in
jl
movsb
ljmp
orl
repnz
xorl
and
push
shlb
imul
adc
pop
cs
adc
cmpsb
arpl
mov
adc
sbb
jne
mov
or
dec
int3
rorl
cs
cmp
andl
lods
aad
js
cmp
imul
fbstp
sub
lods
fistpll
rclb
mov
imull
fidivl
xchg
les
mov
jno
inc
fldt
lds
mov
pop
lahf
sbb
popf
int
loopne
add
rclw
xchg
les
dec
fldenv
pop
mov
xor
sub
test
mov
pop
addb
loope
es
adc
iret
out
lahf
xchg
and
push
aam
mov
pop
insl
je
ja
jae
push
sub
push
cld
add
dec
sbb
adc
cmp
lods
jl
mov
out
add
mov
xor
push
in
out
cmpl
or
mov
imul
inc
push
add
cmpl
sbbb
addl
aam
xchg
adc
rolw
inc
xchg
dec
cld
push
push
iret
mov
loopne
dec
mov
je
adc
fisubs
and
icebp
inc
cli
stc
xchg
insb
cmpsl
jge
int3
insl
or
mov
xor
and
inc
out
pusha
leave
adc
add
addl
mov
dec
stc
in
scas
and
ljmp
mov
jle
sub
mov
test
jle
cld
xchg
mov
mov
dec
ret
inc
repz
repnz
cmp
mov
std
sub
inc
sbb
adcb
xchg
in
sub
cmpl
lret
xor
lcall
jae
mov
movsb
mov
pop
sub
and
and
int3
xchg
cld
pop
mov
cmpsb
push
jp
push
sub
mov
aam
mov
push
jp
movsl
push
loop
test
mov
test
out
fcomps
lds
ret
xchg
pop
dec
inc
pop
lret
xor
mov
data16
mov
inc
lcall
in
inc
cmpsl
nop
lods
std
in
pusha
js
ret
or
jp
or
xor
add
adc
inc
inc
in
lcall
pop
jp
int
outsl
fwait
mov
mov
adc
xor
push
push
es
leave
int
sub
data16
dec
push
xlat
in
dec
imul
add
int
je
mov
ja
mov
fcoms
sbb
inc
inc
add
ja
stos
mov
stc
fadd
mov
jge
ja
fdivrl
hlt
pop
es
gs
je
fimull
mov
mov
or
out
sbb
imul
xchg
mov
adc
xlat
ja
inc
push
jns
roll
mov
rolb
dec
jb
cld
inc
arpl
std
dec
dec
jb
cmpsb
dec
pop
es
leave
sub
push
sbb
pusha
push
arpl
in
mov
mov
ja
adc
jb
xor
push
inc
xchg
cwtl
mov
mov
jle
leave
ss
mov
push
divl
stos
xchg
mov
sub
lock
repnz
jle
and
cmpsb
and
dec
mov
es
jp
pop
or
and
push
adc
sbb
sub
adc
xchg
pop
inc
push
adc
mov
add
pushf
cltd
repz
jno
jecxz
inc
xchg
outsl
inc
out
inc
ficomps
test
lods
push
inc
fnsave
sbb
and
movzbl
push
and
dec
rorb
cmpsl
and
in
mov
icebp
add
lret
rcrb
mov
ja
xchg
mov
int3
xor
ja
push
push
rorl
cs
scas
sbb
popf
push
imul
add
mov
dec
add
sub
sub
cld
sub
scas
clc
roll
push
or
push
hlt
inc
sbb
cld
lret
jmp
mov
ja
cmp
xchg
push
push
jne
inc
rclb
add
dec
ja
xchg
xchg
or
out
and
xchg
cmpl
push
hlt
inc
mov
jns
mov
sbb
roll
test
fs
sarb
dec
les
repnz
cmp
lods
filds
js
into
xchg
or
and
aaa
and
std
nop
lahf
test
add
mov
dec
mov
xor
std
mov
xor
bsf
fs
mov
mov
popf
cmpsb
les
push
pusha
lock
mov
lock
and
mov
in
push
ret
je
jae
stos
js
xchg
add
into
mov
mov
mov
xchg
add
insb
fcoms
sbb
shll
rclb
xor
test
xor
in
sti
aam
jne
mov
push
push
and
insb
add
roll
jo
popf
cmpb
insl
ret
lea
popf
xor
fnsave
inc
std
push
or
cmpb
insl
ret
lea
popf
xor
fnsave
inc
std
push
or
cmpb
insl
ret
lea
popf
xor
fnstenv
inc
int3
push
cmp
cmp
repnz
ret
jb
bound
mov
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
in
mov
shlb
dec
cmpl
mov
movsb
xchg
jnp
jo
push
and
repz
loopne
lock
xor
inc
mov
jae
shll
jo
dec
mov
ret
push
mov
jecxz
repz
inc
xchg
movsl
pop
cmc
cmpsb
push
nop
sbb
dec
mov
push
lds
shlb
jecxz
push
xchg
jb
je
movsb
xor
enter
add
mov
nop
lods
add
mov
cmpsb
inc
pop
pavgw
mov
das
adc
imull
lahf
outsb
mov
add
inc
outsl
bound
add
lret
dec
and
jo
lret
ret
popa
insb
pusha
pop
inc
dec
scas
cmp
pop
int3
adc
lods
xlat
inc
loopne
lock
les
inc
mov
andb
sbb
mov
dec
push
dec
xor
or
xchg
out
or
mov
inc
cmp
ret
daa
pop
mov
shll
xchg
adc
fdivl
stos
inc
out
mov
mov
dec
shll
in
jecxz
xor
and
mov
or
jno
add
jnp
lods
insb
mov
sbb
lahf
lods
pop
mov
jo
adc
loop
rolb
repz
xor
je
jns
cmpsb
fwait
mov
mov
mov
psubsw
mov
adc
pusha
mov
mov
xchg
gs
jno
and
push
lods
jb
push
in
push
mov
xorb
pusha
xchg
jo
inc
mov
ret
and
xor
add
adc
loopne
lock
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loopne
cmpsb
mov
xor
test
pop
jno
push
xchg
sbb
sub
call
lock
pop
pop
cmp
and
into
pop
out
pop
roll
insb
dec
test
mov
scas
adc
cmpsb
dec
pop
lret
les
lods
nop
fdiv
or
mov
pusha
xchg
xor
sbb
ret
add
sub
jo
fsubs
dec
dec
sti
adc
fwait
inc
pop
cmp
lock
movl
adc
inc
push
add
mov
add
in
cmpsl
or
jnp
mov
or
ss
adc
and
outsb
inc
add
jae
mov
imul
dec
xchg
fdivrs
and
data16
mov
jecxz
mov
mov
in
lods
lds
mov
ret
fwait
out
mov
push
ret
mov
push
popa
inc
enter
ret
fs
push
insl
mov
es
lahf
out
jb
xchg
xor
loop
inc
xor
pop
or
icebp
or
cwtl
shlb
pop
push
adc
push
divb
out
cmc
dec
lahf
or
xor
nop
dec
fidivs
adc
jmp
lcall
pop
cmc
movsl
and
cmc
push
dec
and
jb
and
test
xchg
xor
push
sbb
mov
mov
push
ds
dec
cli
lock
pop
dec
xchg
lock
cmp
pushf
loop
in
sbb
push
test
ljmp
cmp
cmp
cli
arpl
adc
pushf
pop
inc
fsubrp
mov
call
xchg
push
inc
jmp
dec
hlt
daa
jnp
addl
les
adc
cmp
bound
mov
cmp
jnp
or
jbe
xor
sub
sub
xlat
mov
mov
cmp
add
push
mov
adc
xchg
dec
enter
inc
pusha
inc
aaa
ret
dec
int
xchg
mov
outsl
add
jle
je
jae
mov
rclb
pop
movsb
mov
fistl
fs
dec
jp
pop
stc
stos
cltd
decb
mov
cmpb
xor
inc
or
push
and
test
dec
pop
cmpsb
sub
inc
xchg
test
mov
es
in
xchg
icebp
dec
call
scas
loope
cmp
enter
repnz
jb
in
and
std
mov
lea
xchg
scas
inc
cmp
in
sub
test
mov
or
fsubl
cmpsl
pop
daa
shr
jbe
or
in
out
mov
xchg
test
fisubrl
push
add
ljmp
test
sbb
jp
mull
daa
aam
popa
inc
into
xlat
jns
cmpsb
iret
or
stos
roll
sbbb
outsl
ljmp
push
nop
sbb
xchg
or
andb
iret
scas
mov
pop
sbb
mov
pop
sub
adc
pop
loop
pop
nop
or
lahf
push
mov
and
mov
inc
xorb
mov
pop
gs
cmpsb
and
or
shlb
mov
mov
enter
pop
out
out
jne
sub
cli
or
arpl
lea
lret
les
cmp
std
test
jp
divb
aam
ret
inc
sti
jne
loope
xorb
push
fistps
or
add
push
inc
and
data16
je
xor
pop
in
in
es
mov
aaa
push
out
dec
dec
lds
mov
iret
out
jmp
cmp
mov
vpsubq
jnp
jl
dec
add
lds
xchg
inc
pop
mov
mov
sub
and
pop
stc
mov
into
in
mov
addb
into
xor
and
mov
mov
jecxz
cmpsb
imul
cld
cltd
clc
mov
pop
jl
or
inc
lret
jmp
pop
enter
ja
insb
adc
in
ljmp
loopne
sbb
jno
hlt
lds
ljmp
sub
bound
push
mov
push
sub
stos
fidivrs
jns
pop
and
mov
inc
cmp
xor
mov
and
cmp
insl
sbb
jle
add
cmp
ss
mov
inc
sbb
mov
cmp
imul
ret
aaa
add
pushf
dec
lock
addl
lock
fldl
addr16
sbb
leave
jo
sub
sub
inc
movsb
mov
push
or
xlat
xor
jecxz
lods
cli
fldl
xchg
mov
mov
addb
mov
xchg
pop
mov
subl
leave
outsl
push
iret
sbb
add
pushf
push
or
pop
movsl
add
mov
sub
push
mov
pop
mov
aam
lea
dec
stos
mov
mov
lods
and
inc
xchg
pop
testl
sub
xchg
imul
ds
adc
jg
adc
add
mov
jecxz
mov
mov
dec
push
lods
xchg
imul
aaa
sub
lods
xor
aad
adc
dec
lds
movl
or
mov
flds
xchg
mov
cli
push
cmpsl
xor
push
xchg
add
in
in
in
pop
mov
mov
fimull
cmpsb
ss
lea
call
ret
jmp
shlb
nop
pop
scas
outsl
add
mov
mov
or
pop
cld
movsb
call
subl
xor
mov
xchg
test
lea
mulb
stc
and
lds
enter
rcr
jne
loopne
shlb
xchg
adc
xor
adc
push
and
jmp
or
xchg
aad
fldenv
xor
repnz
or
add
outsl
sbb
cld
sti
iret
push
movsl
add
inc
popa
mov
pop
mov
xchg
or
add
fisubrl
cmp
shll
aas
sarl
popa
jns
pop
jp
imul
inc
pop
aas
add
btr
sub
lret
mov
scas
mov
or
inc
lret
push
adc
stos
sub
mov
dec
and
jne
xlat
daa
dec
and
fimull
jl
into
xchg
mov
aad
xchg
cs
jo
rclb
andl
inc
inc
pop
clc
mov
test
vmovdqa
loopne
cmpl
fs
push
pop
out
inc
das
cmp
xchg
testl
push
pop
in
dec
mov
xchg
jne
rcr
cmp
addr16
repz
push
aaa
stos
addb
out
xchg
outsl
xor
imul
aaa
notl
int
lahf
cmc
cld
sbb
movsb
adc
les
push
rcrb
outsl
insl
add
rorb
or
pop
adc
inc
scas
popa
sbbb
hlt
adcb
insb
or
roll
fistpll
je
jmp
mov
int
cmp
dec
out
das
xor
sbb
adcb
and
lea
fildll
jg
or
xorl
cmpb
dec
jnp
jmp
xchg
out
cmp
iret
sub
aam
mov
loop
stos
adc
ret
cmp
lcall
into
xchg
iret
add
cwtl
sarw
jg
dec
inc
test
loop
loopne
mov
pop
mov
or
or
jb
push
mov
subl
jecxz
push
and
out
mov
xchg
sub
in
int
std
or
xor
pushf
add
push
sbb
out
pop
lcall
mov
mov
cmp
xchg
mov
add
loop
out
lea
dec
cmp
shlb
mov
daa
push
insl
out
push
or
insb
clc
cmp
sbb
mov
arpl
push
and
cmpsl
les
mov
stos
mov
sbb
sub
mov
icebp
or
or
pop
adc
inc
mov
repz
xchg
pop
mov
mov
mov
js
cmp
cmp
int
and
out
push
and
cwtl
lret
sub
sub
pop
jg
add
adc
sahf
pop
jne
inc
stos
aaa
mov
sub
mov
inc
inc
adc
add
xchg
or
mov
xor
das
mov
xchg
clc
and
clc
mov
mov
dec
sbb
or
scas
fcmovnb
test
jno
dec
fnop
cmpsl
xor
and
fwait
sbb
inc
mov
pcmpeqw
jo
xor
sub
inc
and
xchg
cmp
jnp
inc
jb
xlat
dec
add
aas
or
lret
inc
push
xchg
xor
inc
inc
add
stc
lods
movsl
lock
popa
idivl
pop
scas
and
and
mov
movsl
push
mov
sub
pop
xor
pop
aad
fldcw
cmp
cmp
ret
pop
in
mov
sbb
pop
gs
leave
mov
xor
mov
popf
insb
sahf
sub
je
and
pop
into
xchg
adc
mov
jle
loop
icebp
loop,pt
imul
sbb
push
xor
mov
mov
inc
add
sub
repnz
mov
in
fwait
stos
lret
cmp
push
ds
das
out
int
pop
push
lahf
test
call
push
inc
jg
add
bound
fwait
sbb
pop
mov
nop
adc
xchg
fsubrl
sbbl
add
push
test
xchg
mov
mov
inc
je
mov
test
out
push
es
adc
inc
pop
fst
pop
sub
push
mov
push
and
ficomps
xor
cmp
inc
out
sbb
test
sub
fldenv
outsl
nop
leave
shl
push
jmp
jns
adc
aas
les
addl
lret
out
xchg
push
scas
and
enter
shll
lret
sbb
imul
out
sahf
dec
les
fisubrl
push
daa
or
loop
je
out
mov
dec
and
push
add
cwtl
and
imul
pop
add
and
lret
test
int
ret
addr16
icebp
pushl
iret
mov
or
mov
add
popa
inc
adc
mov
aaa
adc
xchg
or
xchg
fxch
xchg
cmp
push
add
not
jg
incb
sbb
or
cwtl
std
lds
or
lds
pop
push
or
jae
cvtps2pd
and
add
pop
or
xor
mov
adcb
int
js
repz
mov
dec
aam
push
sbbl
mov
cmpsl
inc
outsl
clc
mov
je
xorl
jle
fs
jge
loope
pop
adc
popa
jp
sub
call
pmullw
ret
addb
fxch
fucomp
ja
cmp
popa
scas
test
xchg
fidivrl
sbb
dec
das
xor
pop
adc
mov
test
insb
cli
hlt
and
pushf
mov
push
popa
mov
add
inc
in
pop
enter
jmp
lods
test
icebp
and
mov
push
mov
leave
add
or
mov
mov
pop
or
inc
es
add
jno
pusha
dec
cli
xchg
lahf
pop
cmp
gs
cld
imul
movsb
hlt
sbb
dec
lret
fcomip
push
xlat
sub
inc
or
push
popa
popa
xor
and
fsubr
push
pop
pushf
stos
addb
out
je
es
cmp
lea
inc
mov
fisubrs
adc
pop
daa
cld
push
sbb
jno
xchg
cld
or
and
mov
mov
sbb
xor
mov
arpl
popf
fsts
and
mov
rol
adc
in
jae
sbb
mov
xchg
mov
push
pop
leave
hlt
leave
popa
add
push
mov
mov
jne
testb
mov
outsb
adc
add
addr16
dec
mov
stos
sub
das
pop
add
pop
add
into
pop
subl
dec
fwait
or
ret
sbb
dec
or
negl
ss
mov
pop
jae
fistpl
mov
sbb
scas
shll
xorl
call
call
cld
inc
pushf
push
push
xlat
imul
add
mov
adc
std
push
loope
or
pop
call
ja
inc
repnz
imull
movsb
lcall
cmc
addr16
ss
mov
cltd
xchg
cmc
xor
jbe
repnz
jge
mov
iret
add
aas
dec
arpl
or
add
sbb
xchg
jns
push
pop
out
sbb
testb
in
loope
loop
mov
fsubrp
and
test
dec
jle
sbb
sbb
enter
sub
mov
enter
mov
pop
pop
ret
in
test
insb
dec
dec
push
cmc
or
pop
adc
ss
push
sub
xor
jecxz
cmp
shr
dec
sahf
add
mov
dec
cmp
dec
sbb
popa
or
add
dec
add
cmp
divl
inc
gs
lret
push
xorl
add
stos
inc
dec
mov
or
adc
push
ret
xor
insl
inc
popf
rcr
pop
adc
dec
cmp
xchg
dec
xor
adc
shr
add
fsubl
enter
dec
fs
pop
ljmp
pop
cmp
fimuls
aam
push
or
push
jge
adc
pushf
cmp
cmp
xchg
push
jnp
mov
adc
cmc
sub
cs
pop
xchg
lds
xor
xchg
fldl
dec
xchg
repz
sbb
adc
or
stos
lods
and
dec
adc
mov
ret
test
cmp
lods
xor
jne
lahf
test
jo
fisttps
mov
stos
mov
sahf
xchg
pusha
icebp
push
ftst
lcall
lahf
xchg
pop
andb
mov
mov
dec
in
mov
adc
adc
bound
cmc
cmp
mov
adc
in
insl
call
mov
inc
push
dec
jnp
in
jg
dec
xor
in
or
rolb
inc
js
mov
mov
fimull
ficomps
fcmovb
pop
imul
sbb
insb
into
mov
mov
push
pop
dec
dec
das
es
xchg
cmpsb
sub
scas
mov
xlat
and
in
outsb
lret
jno
sbb
jnp
xor
in
sbb
je
jo
inc
and
add
mov
pop
clc
mov
xchg
or
aam
jmp
add
loopne
fwait
xor
subb
jle
cmp
aaa
mov
jge
iret
or
or
sbb
xor
dec
mov
xchg
adc
or
xchg
js
add
mov
or
fcoms
mov
sbb
mov
pop
roll
xchg
popf
mov
divl
dec
xor
xor
inc
and
xor
lods
sub
cwtl
gs
or
mov
or
dec
sub
cld
dec
int3
scas
pop
sub
lahf
xchg
mov
lea
inc
cmp
mov
push
pop
int3
icebp
bnd
sbb
xor
dec
test
inc
mov
aas
lret
test
icebp
aad
dec
or
mov
mov
pop
call
cmpsb
in
mov
or
pop
test
or
xchg
or
jae
andl
cmp
cmpsl
iret
jmp
jae
adc
daa
lcall
fwait
sti
roll
je
js
pop
jmp
ljmp
cmp
rorl
hlt
rcr
out
inc
sub
mov
pop
es
sbb
mov
jp
push
dec
or
enter
or
ss
adc
inc
inc
jno
out
xor
push
push
sub
inc
mov
dec
daa
mov
or
ja
pop
inc
xor
mov
clc
xlat
cli
inc
addr16
jmp
xchg
xor
notb
xchg
lcall
lock
enter
dec
pop
enter
mov
cmpsl
or
lcall
inc
arpl
or
out
je
cs
std
mov
daa
out
sbbl
lahf
inc
dec
cmp
es
lret
or
dec
daa
or
dec
stos
out
cli
test
xchg
push
mov
int3
repnz
mov
test
pop
or
pop
mov
imul
scas
jl
mov
je
mov
out
loop
mov
jmp
lea
addr16
leave
getsec
arpl
adc
popa
insl
xlat
adc
loopne
xchg
push
dec
scas
dec
xchg
out
pop
mov
lcall
cltd
xchg
jno
mov
push
and
mov
add
into
into
dec
mov
ja
subl
std
sti
jae
mov
pop
test
pushl
lcall
fs
mov
inc
shrb
movsb
callw
bound
inc
push
scas
jne
repnz
push
adc
aaa
mov
mov
xchg
test
dec
test
ds
js
fmuls
adc
pusha
mov
cld
mov
xchg
xchg
stc
pop
pop
pop
xchg
lahf
testl
xor
push
ljmp
mov
jae
rcrb
fsubl
loope
leave
sbb
fwait
push
push
mov
rorl
push
loope
dec
in
jmp
ss
out
and
or
mov
jg
call
push
jae
xchg
out
dec
icebp
sbb
in
js
loop
and
adc
jb
lcall
clc
js
push
in
sbb
or
mov
aad
adc
lret
ja
cwtl
mov
ds
in
rorl
aad
adc
rcr
jmp
out
sub
daa
movsb
sti
push
ja
stos
frndint
push
mov
insb
pop
fst
add
sub
loope
cltd
mov
loope
out
insb
and
xchg
sbb
mov
cmp
sahf
test
test
hlt
addr16
fdivl
xor
shr
cmp
jns
aas
cmp
jbe
cmp
insb
fiaddl
inc
popa
insl
leave
in
jb
imulb
jmp
fisttpl
jg
sbb
cmp
mov
jg
das
add
sbb
iret
push
mov
add
jnp
shlb
fildl
xor
mov
ret
jno
int3
pop
mov
scas
adc
lock
xor
dec
mov
mov
push
outsl
push
mov
cs
nop
dec
fcmovnu
or
mov
in
idivl
lock
jle
stc
scas
sbbb
jecxz
cmpsb
and
hlt
scas
inc
pop
pushf
xor
leave
or
sub
add
fnstenv
mov
repnz
inc
in
mov
inc
nop
and
sbbl
and
inc
dec
pop
add
push
or
ret
imul
inc
das
cltd
pop
push
add
scas
push
outsl
xor
mov
or
adc
inc
add
cld
adc
or
jae
js
loope
fnstenv
cwtl
test
push
xor
xor
pop
out
repnz
mov
aam
and
sub
lock
pop
cmpsl
sub
fldcw
and
pop
popf
mov
dec
lahf
je
inc
adc
xor
scas
add
mov
stos
pusha
add
and
nop
xor
into
repz
push
pop
jno
inc
lock
mov
xor
sub
pop
insl
out
out
insb
push
clc
shrb
call
test
mov
in
dec
insl
push
inc
fcoml
and
daa
pop
xchg
add
sqrtps
and
adc
in
orl
jp
aam
jo
xor
cmp
imul
cmpsb
mov
in
or
xor
push
or
mov
fadd
mov
mov
pop
sub
sub
in
mov
cmc
mov
es
sub
repnz
jecxz
call
pop
das
lods
cmp
add
xchg
mov
not
popf
push
dec
add
mov
mov
out
or
sbb
jnp
dec
ret
pusha
dec
jmp
xor
sub
mov
inc
jmp
lret
push
in
mov
lock
jmp
mov
sarb
mov
cli
out
pop
mov
xchg
and
ja
mov
dec
fbstp
ljmp
push
les
adc
rcll
incl
add
add
sbb
push
shll
or
sub
test
sbb
stos
test
cmpsl
mov
push
movsb
xor
mov
mov
mov
jae
js
add
pop
into
push
call
mov
jne
sbb
adc
scas
sub
imul
ja
sbb
cld
and
jge
dec
jecxz
inc
dec
pop
lgs
ss
sub
lock
lds
rolb
push
mov
xorb
pusha
xchg
jo
inc
mov
ret
and
xor
add
adc
loopne
lock
xor
inc
mov
jae
andl
mov
and
xor
add
adc
in
xor
xor
inc
mov
jb
xchg
je
inc
mov
ret
and
xor
or
hlt
sbb
adc
and
nop
inc
mov
repz
sbbl
daa
mov
pop
dec
sbb
or
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
