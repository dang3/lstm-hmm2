and
xor
dec
mov
test
jmp
in
push
jmp
aam
pop
test
add
lds
add
jmp
nop
nop
nop
nop
nop
push
xchg
xor
xchg
inc
push
pop
call
xchg
jmp
nop
nop
push
cld
shl
mov
sub
xchg
mov
xchg
andl
cld
push
mov
xor
xchg
and
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
outsl
sbb
test
add
add
sti
sub
and
pop
jmp
push
addr16
push
mov
push
mov
push
mov
pushl
nop
push
cld
push
sub
xor
mov
ror
push
xor
pop
xor
xor
dec
test
jne
pop
xor
xor
add
sub
mov
add
add
add
add
call
ror
add
mov
jmp
and
sub
or
add
pop
sub
sub
and
or
pop
xor
and
shl
pop
call
nop
jmp
push
sub
shl
shl
dec
dec
pop
jmp
test
jmp
out
mov
je
call
xchg
test
jmp
or
dec
add
and
test
add
jmp
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
xchg
push
mov
jmp
nop
nop
nop
nop
push
nop
rol
dec
shl
ror
and
mov
push
push
pop
jmp
nop
nop
push
push
pop
ror
mov
mov
jmp
pushl
mov
pop
andl
mov
push
mov
push
mov
push
addr16
push
mov
push
cld
jmp
mov
ret
add
mov
mov
movzbl
jmp
pop
mov
xchg
xchg
inc
xchg
jmp
je
push
lea
jmp
fmull
out
decl
add
popa
push
loope
test
std
pushl
inc
and
xor
mov
mov
ror
and
pop
ret
jmp
xlat
das
loopne
adcb
or
rorb
xor
nop
push
mov
mov
cld
jmp
add
cld
push
xchg
jmp
push
push
pop
push
nop
push
mov
jmp
mov
nop
mov
push
pop
jmp
nop
nop
push
xchg
and
mov
and
push
pop
sub
mov
jmp
push
xchg
lea
jmp
jp
jmp
pushl
xchg
call
neg
jmp
sti
das
scas
sbb
jmp
neg
jmp
cmp
ret
jmp
clc
mov
nop
nop
nop
nop
nop
lea
jmp
arpl
mov
push
push
pop
pushl
push
pop
pushl
mov
push
shr
ror
or
ror
shr
push
sub
or
sub
sub
xor
mov
or
shr
add
sub
dec
test
jne
pop
pop
mov
call
leave
jmp
jnp
gs
jmp
movsl
and
push
popl
lea
jmp
push
adc
rcrl
rorl
pushl
inc
xor
xor
push
shr
push
and
shl
pop
add
and
dec
test
jne
pop
pop
call
test
jmp
add
or
add
jmp
nop
mov
push
xchg
call
jmp
xlat
mov
inc
or
add
add
lret
push
mov
rorl
loopne
sub
ret
pop
jmp
cltd
push
out
movsl
std
add
xchg
and
mov
mov
mov
ret
jmp
dec
nop
nop
nop
nop
nop
push
mov
call
mov
mov
or
shr
mov
pop
jmp
rol
xor
mov
lea
jmp
adcl
mov
cld
jmp
push
push
pop
and
push
inc
add
inc
sub
or
and
mov
sub
sub
dec
dec
test
jne
pop
lea
call
push
cld
add
add
sub
pop
jmp
sub
ror
mov
jmp
add
and
sub
xor
mov
add
add
jmp
xor
mov
and
rol
and
shl
or
and
add
pushl
or
sub
pop
rep
jmp
cwtl
mov
test
add
add
xor
or
push
xor
sub
sub
shl
mov
sub
dec
test
jne
pop
pop
call
push
mov
pushl
sub
xor
rol
xor
xor
push
rol
mov
rol
inc
push
inc
pop
shr
dec
dec
test
jne
pop
pop
call
test
jmp
ret
inc
aad
test
add
push
mov
jmp
rol
pop
jmp
sub
mov
jmp
nop
nop
push
push
pop
cmpl
mov
jne
jmp
sub
nop
push
cld
jmp
jmp
and
rol
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
lea
jmp
repz
call
mov
test
jmp
jecxz
cmp
test
or
add
cmc
stc
jmp
leave
jmp
cmpb
nop
je
cmpb
xchg
jne
jmp
push
xchg
xor
cld
jmp
je
push
nop
call
xchg
jmp
nop
nop
nop
nop
add
add
add
rorb
xor
pop
pushl
inc
shr
or
shr
pop
jmp
pusha
jmp
sub
imul
xor
mov
push
xchg
call
xchg
add
push
pop
mov
movb
cld
movl
xchg
jmp
call
xchg
rol
xor
sub
xor
mov
pop
pushl
or
pop
add
mov
add
nop
movzwl
jmp
mov
insl
push
xchg
mov
pop
jmp
xor
cld
rorl
jmp
add
cld
dec
jmp
cmp
ljmp
dec
and
mov
and
sub
pop
ret
jmp
mov
jns
nop
nop
nop
nop
nop
call
push
pop
popa
jmp
jmp
cld
pusha
jmp
xchg
push
sti
incl
pop
sbb
dec
jl
jmp
xchg
ret
jmp
ret
cmp
nop
nop
lea
jmp
arpl
call
xchg
dec
xchg
lea
jmp
jne
test
jmp
std
pop
cmpsl
push
mov
jmp
jmp
inc
mov
or
and
add
dec
ror
mov
lea
jmp
or
jmp
cmp
xchg
mov
jmp
scas
xchg
add
je
adc
add
push
jne
mov
jmp
pushf
and
jbe
lea
jmp
call
push
jmp
sub
rol
rol
mov
jmp
je
xor
sub
rol
mov
sub
nop
mov
mov
mov
push
pop
jmp
movb
mov
incl
xchg
jmp
xor
mov
mov
lea
jmp
in
pop
dec
inc
scas
push
xchg
call
mov
push
push
pop
pushl
xor
push
and
rol
and
add
and
dec
test
jne
pop
pop
call
test
jmp
notl
std
jmp
dec
pop
mov
mov
mov
mov
add
shr
sub
ror
mov
add
xchg
mov
push
pop
and
xor
sub
mov
add
xor
mov
nop
nop
nop
nop
nop
sub
mov
rep
jmp
ljmp
add
mov
mov
jmp
mov
sbb
mov
jmp
nop
nop
nop
nop
nop
incl
mov
xor
xchg
jmp
add
pop
jmp
jmp
sar
popa
add
xchg
movzwl
jmp
cmp
inc
and
xchg
add
xchg
cmp
addr16
jmp
jge
push
inc
and
or
mov
sub
xchg
shr
jmp
add
test
jmp
ljmp
add
mov
decl
out
je
or
out
je
sbb
xor
sub
add
and
pop
xor
xor
and
add
jmp
inc
push
pop
xor
mov
and
mov
inc
mov
inc
addr16
nop
nop
nop
nop
nop
shr
jmp
sbb
stos
rolb
dec
je
test
jmp
or
je
xor
or
xor
mov
mov
ror
mov
sub
cld
mov
mov
incl
xchg
jmp
lea
jmp
lock
andb
sbb
add
add
and
mov
movzwl
jmp
add
add
mov
and
mov
cmp
mov
jmp
ss
call
add
push
inc
pop
add
jmp
mov
je
add
mov
add
inc
and
add
and
xchg
add
addr16
add
nop
jmp
mull
nop
mov
xchg
shr
and
mov
add
nop
cltd
jmp
jmp
pusha
cmp
mov
nop
nop
nop
nop
nop
mov
jmp
sarl
add
push
jmp
mov
xchg
jmp
add
mov
inc
mov
jmp
or
movsl
and
xchg
add
mov
sar
jmp
jmp
mov
shr
jmp
xor
icebp
test
jmp
lea
jmp
shlb
mov
jmp
pop
adc
and
jecxz
xchg
dec
jmp
outsl
pop
aam
jne
add
addr16
cmpl
nop
jmp
jle
mov
xchg
test
jmp
jle
shl
or
mov
inc
mov
mov
mov
sub
mov
sub
xchg
jmp
mov
addr16
jmp
call
addr16
test
jmp
sub
test
cmp
test
add
cmp
mov
jne
lea
jmp
push
call
mov
nop
nop
nop
nop
nop
test
jmp
xor
add
sub
shl
sub
mov
mov
sub
push
pop
dec
or
add
rol
dec
mov
mov
push
pop
incl
xchg
jmp
jne
or
and
add
add
sub
or
or
mov
mov
mov
jmp
test
inc
decl
jmp
mov
test
ljmp
ret
ret
enter
sub
jmp
dec
and
jmp
rorb
cmc
incl
push
push
mov
rclb
jmp
xchg
repnz
mov
mov
or
ror
pop
add
xchg
shr
pop
push
popl
add
shr
or
xor
pop
leave
jmp
jecxz
pushf
jns
ret
jmp
fildl
nop
nop
nop
nop
nop
jle
or
xor
or
mov
sub
or
mov
add
addr16
jmp
jae
orb
mov
jmp
cld
jne
jmp
sub
mov
jmp
dec
push
pop
jmp
or
jbe
roll
dec
loope
jl
mov
or
sub
ror
or
and
mov
movzbl
jmp
mov
xor
shl
jmp
jb
ret
and
nop
nop
nop
nop
nop
incl
xchg
lea
jmp
add
jmp
test
add
jne
test
jmp
lea
xchg
mov
dec
and
jmp
adc
jo
lret
shr
mov
nop
nop
nop
nop
nop
xor
push
pop
add
xchg
jmp
addl
out
pop
or
or
mov
call
xchg
cmp
push
pop
jb
inc
xchg
cmp
push
pop
nop
nop
nop
nop
nop
jb
inc
mov
cmp
xchg
jae
inc
nop
inc
nop
test
jmp
addr16
mov
add
add
pusha
jne
push
mov
nop
nop
nop
nop
nop
push
xchg
pushl
addr16
push
mov
push
rol
push
dec
and
ror
mov
pop
or
or
inc
dec
dec
test
jne
pop
shr
add
and
add
call
mov
nop
lea
jmp
ljmp
push
xchg
push
add
xor
mov
shr
inc
sub
mov
mov
or
xor
shr
dec
test
jne
pop
pushl
ror
sub
add
pop
call
push
mov
jmp
repz
je
add
mov
sub
or
mov
sub
xchg
mov
xchg
incl
mov
dec
addr16
nop
nop
nop
nop
nop
mov
jmp
jne
mov
mov
xor
mov
inc
xchg
jmp
jmp
pushl
dec
mov
ror
push
xor
sub
add
add
add
mov
shl
xor
rol
xor
xor
dec
test
jne
pop
pop
call
test
jmp
pop
fisttpl
test
add
push
addr16
call
mov
test
jmp
arpl
jmp
stos
sub
jae
je
xor
xor
and
and
sub
mov
nop
nop
nop
nop
nop
and
shl
inc
and
mov
call
push
pop
or
mov
mov
xchg
jmp
orl
mov
sub
shr
mov
shr
mov
jmp
fwait
mov
and
xor
and
mov
ror
mov
mov
addr16
incl
mov
incl
cld
mov
cld
nop
nop
nop
nop
nop
xor
xchg
cmpl
cld
je
inc
mov
rol
mov
sub
xor
add
pop
sub
xchg
sub
inc
pop
leave
jmp
mov
loop
jmp
nop
nop
nop
nop
nop
pushl
inc
pop
rep
jmp
fimull
jg
in
sub
sub
mov
xor
sub
or
sub
shr
mov
push
xchg
nop
nop
nop
nop
nop
push
xchg
pushl
nop
call
mov
push
mov
push
xchg
nop
nop
nop
nop
nop
pushl
mov
nop
nop
nop
nop
nop
call
mov
inc
sub
or
or
xor
mov
test
jmp
ret
adc
mov
jmp
aam
or
add
shl
ror
and
mov
add
mov
sub
push
pop
jmp
nop
nop
nop
nop
nop
shr
and
mov
sub
xchg
shr
jmp
in
push
and
add
clc
ss
lea
jmp
mov
sub
mov
jmp
push
ret
nop
nop
nop
nop
nop
jle
nop
nop
nop
nop
nop
mov
addr16
dec
add
inc
mov
movzwl
jmp
mov
nop
nop
nop
nop
and
xchg
cmp
push
pop
jne
and
addr16
add
mov
add
mov
nop
nop
nop
nop
nop
add
mov
xor
ror
and
add
addl
mov
decl
jmp
inc
sbb
pop
push
out
jne
add
mov
nop
nop
nop
nop
nop
cmpl
nop
jne
mov
push
pop
test
jmp
push
das
mov
jno
je
nop
nop
nop
nop
nop
lea
jmp
adc
out
mov
xchg
nop
nop
nop
nop
nop
je
jmp
mov
add
or
and
add
shl
ror
or
or
mov
mov
nop
nop
nop
nop
nop
add
mov
push
xchg
call
nop
nop
nop
nop
nop
cmp
nop
mov
jmp
je
inc
rol
xor
shl
mov
test
jmp
loop
sbbl
add
and
inc
add
xor
inc
mov
inc
add
xor
mov
mov
and
or
shl
dec
mov
nop
nop
nop
nop
nop
add
xchg
mov
inc
xor
sub
xor
mov
add
xchg
test
jmp
popf
push
mov
add
jmp
xor
rol
add
xor
add
and
add
nop
nop
nop
nop
nop
test
jmp
jns
movzwl
jmp
jp
add
jmp
add
cld
nop
nop
nop
nop
nop
add
nop
push
mov
pushl
addr16
pushl
mov
add
and
and
xor
push
inc
xor
rol
mov
and
dec
test
jne
pop
pop
call
nop
nop
nop
nop
nop
add
xchg
mov
cld
nop
nop
nop
nop
nop
and
mov
add
mov
test
jmp
or
test
call
add
xchg
cmpl
mov
jne
mov
jmp
shrb
mov
mov
and
ror
xor
add
sub
mov
nop
nop
nop
nop
nop
mov
xchg
sub
or
dec
dec
mov
nop
nop
nop
nop
nop
xor
mov
mov
mov
push
pop
cmp
cld
jne
nop
nop
nop
nop
nop
pushl
mov
shr
pop
add
xchg
mov
rol
or
add
mov
pop
mov
mov
add
sub
shl
shl
mov
mov
add
xchg
and
sub
pop
xor
and
pop
nop
nop
nop
nop
nop
or
xor
mov
inc
inc
mov
and
mov
pop
ret
jmp
cmp
nop
nop
nop
nop
mov
mov
bnd
xor
cmp
je
or
mov
xor
out
push
xchg
pop
xor
dec
xor
sub
out
jne
xor
fisubl
lcall
adcb
jmp
cld
cli
push
inc
pushf
sub
cmpsb
lods
mov
out
xchg
add
addb
iret
pushf
adc
or
dec
sub
lods
inc
push
dec
in
push
fsubs
dec
add
xchg
push
jb
inc
add
push
pop
sbb
mov
xlat
inc
cld
insl
cmc
and
js
jo
jno
pop
mov
mov
add
cltd
mov
mov
cmp
lret
enter
push
fistpl
dec
adc
xchg
jp
adc
mov
out
and
cmc
out
or
lret
outsl
adc
jns
shlb
adcb
icebp
in
jno
shl
push
push
add
testb
add
rorl
pop
sub
sbb
outsb
xor
mov
ret
orb
loop
xchg
add
mov
addb
out
imulb
mov
sbb
cmpsb
mov
js
sub
dec
iret
ja
in
data16
fwait
movsl
cmp
mov
insl
push
iret
stc
sub
aas
out
cmp
cltd
aas
or
inc
inc
pop
fnstcw
push
sub
out
inc
pop
lret
fsubrs
test
test
stos
pusha
cmp
movsb
fmuls
cltd
aam
jle
fs
movsb
incb
or
jl
inc
xchg
or
bound
or
lret
aaa
and
es
enter
sbb
xchg
adc
outsb
push
push
mov
pop
inc
into
cs
popl
lcall
lods
pusha
xchg
les
je
data16
ljmp
sub
dec
pop
xor
jne
dec
jmp
xor
adc
jae
mov
cltd
add
hlt
adc
dec
mov
dec
fwait
lahf
lea
sub
shrb
lret
pop
inc
mov
xor
mov
cmpl
xchg
adc
ja
and
and
test
push
scas
add
pushf
sbb
cld
mov
je
in
ss
test
mov
pop
fcmovb
add
into
out
inc
pop
int3
xchg
divb
pop
mov
jns
push
sub
or
mov
das
dec
lret
jge
lods
xor
lret
add
jae
fwait
scas
xlat
int3
mov
cmc
cmc
cmp
inc
mov
into
outsb
inc
test
add
mov
xor
cmp
push
popa
push
mov
add
jb
ucomiss
outsl
sbb
fsubrl
pop
je
pop
jnp
sbb
cmp
aaa
add
loope
xchg
fcmovnbe
sub
and
lods
jbe
xor
in
out
or
pop
out
adc
and
test
inc
aas
data16
test
loopne
adc
and
and
addr16
loop
scas
aam
rcl
xchg
add
in
pop
xchg
or
shl
fistl
mov
outsb
ret
enter
lahf
mov
and
jl
sarl
inc
sbb
dec
jecxz
xlat
adc
pop
loop
xchg
iret
into
mov
lods
pop
jmp
push
mov
mov
test
lds
scas
loopne
outsl
add
push
inc
inc
jl
cmpsb
pusha
sbb
sub
mov
sub
add
int3
jb
cmp
out
xchg
call
insb
inc
popa
and
rcrl
add
fdivrs
imul
mov
shrl
pop
inc
cmpb
sub
adc
mov
std
imul
sub
xor
rolb
pop
pop
lock
repz
jbe
xor
dec
in
fs
std
fs
jp
lret
daa
test
int
jl
cmpsb
sarl
or
nop
cmp
lods
mov
popf
pop
xchg
inc
jge
test
jne
cmp
sbb
add
movsb
mov
lcall
lahf
mov
nop
sbb
pop
fistps
ror
fucomip
and
mov
dec
pop
lcall
jbe
pop
iret
and
lea
adc
jle
in
mov
add
sub
sbb
cmpsw
xchg
add
jne
lods
sbb
std
mov
es
imull
into
insb
fisttpl
inc
push
sbb
sbb
pop
xadd
mov
fwait
dec
push
orl
lods
cs
pop
mov
sub
push
inc
jo
lds
call
bound
inc
mov
in
dec
popa
in
cmpsl
enter
mov
in
pop
out
test
inc
push
dec
and
fdivr
mov
dec
add
and
sbb
xchg
jmp
aaa
push
adc
lea
fistps
jbe
scas
fsubrs
xor
dec
lods
sti
outsb
into
pop
ss
movsl
aas
ret
mov
pop
adc
lods
stos
xchg
adc
xchg
pop
fcomps
mov
mov
shr
mov
and
out
idivb
lea
sub
or
std
sub
dec
dec
jg
repnz
stos
ja
push
jle
mov
or
pop
cltd
int
jmp
divl
out
popa
cmpsb
ret
sub
rcr
imul
sahf
cmp
sbb
call
ljmp
sbb
adc
xor
out
xchg
cli
jne
xor
rcrb
sub
out
les
mov
xlat
call
push
subb
jb
jmp
jle
dec
hlt
pop
xor
bound
rcrl
add
add
mov
cmp
sbb
movsb
add
dec
cmp
mov
xlat
pop
jo
add
int
jne
cmpsl
aad
mov
outsl
aam
and
or
add
addr16
xchg
push
cmp
stc
in
and
xor
js
inc
leave
mov
xor
mov
inc
mov
test
ficomps
adc
mov
lahf
xor
outsl
inc
std
push
mov
cmp
das
pop
pop
imul
sbb
mov
jmp
pop
and
jl
sahf
xor
jbe
pop
pop
rcrb
mov
pop
leave
aaa
push
sub
mov
ljmp
movsl
push
push
push
sub
add
fxtract
push
jae
fdivrl
push
jno
inc
pop
xor
cltd
lret
pop
rcl
dec
cltd
xor
es
scas
pop
movsl
jno
mov
push
scas
mov
mov
or
mov
xchg
fcomip
xor
push
test
lods
mov
imul
ja
lods
add
inc
sub
and
data16
xor
xchg
mov
pusha
sbb
ljmp
push
adc
mov
pop
mov
ljmp
jl
sahf
clc
std
mov
sub
mov
int3
std
jg
mov
outsb
and
sub
push
lahf
pop
inc
adc
outsb
rcll
rcrl
ljmp
cld
jbe
sub
jbe
rcr
out
dec
cmpl
or
xor
daa
xchg
cmpsb
jp
jecxz
mov
lret
or
addr16
ds
rorl
into
sti
xor
lahf
scas
and
fidivs
and
fwait
loopne
aad
push
call
dec
and
roll
je
push
outsb
test
mov
xor
arpl
notb
shlb
xor
cmc
and
pop
insb
daa
mov
or
js
ds
cs
push
fwait
lret
sahf
mov
andb
scas
ret
jecxz
in
insb
out
dec
das
add
push
xor
ret
test
xchg
push
jmp
sahf
ret
mov
mov
dec
ret
mov
aaa
cmc
leave
cmp
sub
inc
cwtl
mov
rorb
in
adc
loopne
adc
je
push
repnz
pop
adc
and
xchg
pop
jecxz
mov
pop
in
loopne
in
lret
js
mov
mov
clc
orb
lret
dec
cmp
pop
aaa
jae
rorb
sbb
and
orl
mov
idiv
leave
add
xlat
sbb
pop
insb
pop
das
std
ret
and
or
xchg
loope
fwait
xchg
int
fs
out
repnz
mov
pusha
iret
lretw
or
fisubs
cmp
xor
pop
push
out
dec
ffree
or
mov
imul
imul
je
push
xor
xchg
mulb
mov
xchg
jne
inc
dec
adc
inc
fbstp
inc
push
jl
sbb
xchg
xor
dec
ret
jo
ret
and
inc
mov
aam
pushf
cmpb
pop
push
aaa
mov
mov
mov
mov
jbe
pushf
dec
sti
enter
and
jnp
pop
aas
and
push
icebp
popl
div
xlat
mov
test
dec
cmp
ds
push
imul
mov
sbb
jmp
or
xchg
mov
shlb
orl
sub
outsl
pop
inc
mov
push
adc
jo
jl
sub
adc
dec
xchg
dec
cmp
ret
in
and
push
jno
subl
and
leave
lock
int
mov
int3
femms
xor
fildll
js
aam
bound
mov
pop
jmp
int3
inc
jae
pop
fwait
int3
add
and
mov
mov
xchg
icebp
rcl
mov
js
repz
pop
inc
mov
lret
iret
mov
push
push
sub
fstps
in
lods
hlt
stos
xchg
mov
test
sbb
pusha
mov
stc
fmull
imul
or
xchg
imull
ret
or
dec
push
lahf
add
scas
xchg
arpl
sbb
xchg
mov
call
aaa
loop
pushf
xchg
adc
cmp
outsl
add
ljmp
sbb
lret
or
push
mov
pop
sub
cli
int
add
push
js
ljmp
aam
mov
and
imul
out
ljmp
mov
fildl
push
add
sbb
mov
lretw
fucomip
mov
pushf
std
xlat
sti
dec
mov
push
fadd
repz
sub
add
imul
fnstenv
aas
pusha
or
add
jno
cmp
push
outsb
sbb
mov
mov
into
sbb
mov
or
shrb
add
shrb
mov
add
scas
test
addb
mov
int
les
pop
faddp
daa
xlat
out
adc
pop
xor
dec
test
outsl
adc
dec
imul
mov
cmp
xchg
int3
add
and
lock
xor
add
int
dec
ret
xchg
xchg
adc
in
adc
repnz
jo
fidivs
push
pop
inc
mov
shl
test
sub
sub
dec
popa
in
jle
mov
in
les
push
dec
lds
int
or
dec
and
test
mov
call
roll
insl
and
sub
jge
sahf
or
dec
lcall
xchg
cmp
stos
mov
into
dec
pop
adc
xchg
inc
sub
in
cmpsb
pushf
sub
dec
test
gs
xchg
jbe
ja
inc
or
repz
mov
and
lock
out
out
mov
xor
cmpsl
adc
pop
rol
push
repnz
int
adc
lret
in
iret
lods
mov
fdivs
gs
push
or
imul
xchg
xchg
push
jne
ret
inc
or
clc
loopne
mov
mov
mov
mov
push
adcb
movsb
pop
dec
sbb
insb
pop
jp
sti
pushf
pop
out
lahf
xchg
mov
mov
push
xchg
stos
das
out
cmp
cmc
insb
inc
mov
es
fists
cmp
mov
add
cld
adc
sub
std
iret
mov
out
inc
dec
mov
insl
push
imul
pop
repnz
ffree
iret
js
add
inc
hlt
fcompl
data16
sbb
jno
sbb
testl
cli
dec
popa
jge
or
inc
cmp
or
inc
cmp
scas
jne
popa
sbb
lret
js
cmp
mov
jne
mov
decb
mov
pop
fst
out
shrl
in
mov
sub
inc
aam
sub
pop
rcrb
inc
dec
ret
arpl
mov
and
xor
imul
cs
add
cmp
rcr
pop
inc
fs
xchg
daa
pop
mov
leave
fs
pop
addr16
push
in
mov
cmp
fisubl
rorl
sar
loope
mov
stc
call
in
push
mov
sbb
arpl
fwait
pushf
add
rcll
scas
add
in
xchg
push
push
dec
jns
invd
xlat
repnz
lret
popf
pusha
into
pop
pushf
lret
rcll
xor
ljmp
cwtl
push
stc
mov
je
dec
xorb
enter
mov
outsb
sbb
gs
sbb
push
inc
stos
cmpl
nop
out
add
push
adc
adc
xor
ljmp
sub
mov
in
mov
adc
and
xor
inc
jae
xchg
adc
test
lret
lods
mov
dec
cmp
sbb
cmp
jecxz
ret
inc
sbb
or
pop
rorl
enter
push
xchg
add
inc
xchg
rcpps
jecxz
mov
mov
lcall
fwait
fwait
dec
push
add
mov
push
jns
jnp
adc
das
enter
jmp
mov
data16
jne
jbe
lock
int3
push
xchg
dec
add
mov
enter
cli
cltd
aad
jl
xchg
push
test
dec
pushf
sub
jo
je
cmp
xor
out
inc
insl
rcll
sbb
mov
pop
add
or
adc
sub
push
xor
int3
mov
rcl
dec
nop
mov
mov
mov
cmp
inc
dec
add
mov
cmp
cmp
shrb
fildll
out
push
jne
mov
mov
js
mov
mov
and
leave
jge
fs
push
cmp
es
xor
ja
add
das
pusha
adc
inc
popf
cmc
jns
insb
mov
mov
orb
outsb
out
push
cs
out
popf
mov
in
insb
sqrtps
nop
in
mov
sarl
das
sbb
jp
inc
mov
cmc
dec
pop
daa
aas
jnp
insl
sub
sbb
cld
xor
fldenv
dec
push
icebp
pop
stos
sbb
enter
inc
mov
jl
cmp
cmp
mov
arpl
cmp
pop
stos
aaa
jge
mov
mov
adc
rorl
fsub
sbb
jp
fs
mov
jns
or
arpl
push
and
mov
in
imul
outsb
movsl
fadd
adc
push
jmp
loope
cld
sbb
gs
cmp
jnp
daa
push
notb
movsl
fs
xchg
mov
fwait
ljmp
cmp
sbb
scas
add
inc
xor
and
ret
into
std
cltd
pop
repz
ja
imul
sub
jne
mov
in
push
dec
add
mov
xchg
mov
mov
int
lods
jb
push
andb
and
sub
fldenv
push
lret
stos
jns
idivb
inc
cmpsl
int3
shl
aaa
je
pop
adc
inc
sbb
xor
sub
cs
mov
testl
je
cmp
dec
notl
or
adc
adc
mov
movsb
mov
into
dec
mov
mov
adc
rdpmc
sbb
lock
add
cmp
rolb
gs
cmp
repz
pop
btr
add
fs
sbb
jmp
xor
lret
push
lret
repz
mov
pushf
stc
mov
cmp
sbb
sub
pop
push
mov
mov
mov
mov
fcomi
cmpsb
mov
in
sub
cwtl
dec
popa
cmpsl
xlat
add
in
fcmovu
shlb
lds
inc
jne
mov
cwtl
sbb
aad
push
lods
idiv
ret
add
sub
push
add
jp
sahf
outsb
repnz
dec
pop
ljmp
fnstcw
shll
rcll
or
dec
add
fldenv
out
cmpsb
mov
mov
push
out
add
shlb
cmp
and
mov
shll
mov
loopne
inc
sti
fisubrl
sub
sbb
dec
fsts
push
and
mov
stos
mov
into
in
jns
and
jmp
cmc
push
pushf
dec
ret
mov
jbe
int
mov
arpl
sbb
sub
mov
push
mov
std
mov
cmp
movsl
pop
sub
insb
inc
aas
test
ss
cmp
mov
out
sub
xor
test
xor
xor
popf
hlt
mov
ljmp
jmp
loopne
cld
cmp
dec
cmc
ret
xor
mov
mov
sti
lds
sbb
mov
dec
add
cli
mov
int3
xchg
jno
icebp
push
push
js
or
dec
and
lds
or
cmp
fs
xchg
nop
mov
cmp
xor
mov
xchg
inc
or
xchg
fldl
pop
outsb
inc
loopne
xor
push
sub
sub
enter
js
repz
shll
sub
mov
in
jecxz
lods
imull
sub
xchg
add
mov
mull
dec
aas
xchg
into
cmp
fwait
cmp
push
mov
ss
add
pushf
aad
push
out
xchg
push
movsb
sahf
mov
cli
test
test
jge
xchg
test
gs
pop
xchg
adc
mov
idivb
cmpsl
ja
jge
push
cmp
int3
add
push
and
out
aad
in
movsl
std
mov
adc
fstpl
inc
aam
leave
mov
and
add
fst
pop
int
jns
scas
bound
dec
fiaddl
mov
jge
add
lds
xchg
mov
fstp
loop
loop
add
mov
cmp
xor
add
add
xchg
pusha
xor
ja
or
dec
out
lcall
or
xlat
fsubl
dec
loopne
push
xchg
ss
mov
pop
mov
jge
mov
lret
jb
stos
push
dec
leave
out
pop
stos
int
rolb
shl
mov
cltd
push
lods
sbb
pop
stos
repz
lcall
fstps
cmpsl
into
inc
xlat
cmp
inc
hlt
inc
push
mov
fisttpl
fisubrl
xlat
int3
sbb
sbb
popa
add
add
repnz
xchg
or
popf
outsb
negl
shr
mov
sub
insb
icebp
mul
adc
add
out
pushf
push
or
icebp
loopne
aad
pop
pop
cmpsl
gs
icebp
into
sub
jae
push
xchg
int
mov
push
mov
cld
out
or
cmp
pop
adc
xor
cli
imul
insl
or
xchg
pushf
pop
out
rorb
mov
pop
pop
or
and
lret
dec
push
decb
push
add
add
lahf
insl
shll
jge
and
mov
ss
shl
sub
mov
pop
fs
push
and
fsubrs
xor
fmull
add
repnz
push
sbb
fst
adc
pop
outsl
fildl
push
ds
leave
sbb
jb
inc
sub
and
xchg
pop
jmp
mov
int3
xchg
xor
mov
leave
jl
scas
sub
insb
cwtl
clc
pop
cwtl
in
pop
push
sahf
adc
fisttpl
pop
push
cs
cltd
and
or
shrb
or
sub
jnp
jmp
inc
cmp
lds
shlb
insl
xchg
pop
in
adc
dec
and
xchg
enter
cmp
aas
sbb
sbbb
xchg
fldcw
or
sarb
lcall
jecxz
push
jns
pop
pop
rcll
inc
fsubl
xor
adc
and
or
dec
pop
out
scas
aaa
mov
loope
adc
rolb
fdiv
movsb
cs
rolb
test
scas
mov
and
pop
mov
sub
ljmp
setle
sbb
cmp
sbb
push
pop
divl
testl
mov
int3
xchg
adc
subb
xchg
mov
xchg
sarl
insb
sti
stos
mov
loopne
stos
loop
aaa
pop
stos
xor
dec
mov
mov
pop
out
cmpsl
bound
jmp
add
xchg
xor
dec
xor
xor
or
and
cmpsl
jns
jg
aaa
pop
out
add
f2xm1
aaa
xor
jg
mov
pop
inc
cmp
nop
fildll
push
pop
ja
test
shrl
ret
pop
dec
sbb
in
mov
ja
or
xor
sub
outsb
out
mov
sub
and
cwtl
faddl
push
ljmp
mov
pop
dec
inc
test
loop
leave
or
jmp
dec
mov
xchg
xchg
fstpt
call
dec
pop
data16
addr16
fdecstp
mov
jns
mov
loop
inc
gs
adc
imul
sbb
pushf
rcl
aam
adc
in
ficompl
pop
push
sahf
sub
aad
mov
push
and
and
ds
ljmp
push
sbb
or
aaa
stos
int
jle
and
xchg
pop
les
sub
mov
sahf
nop
push
mov
xor
imul
loop
scas
fwait
imul
mov
fldln2
sbb
mov
cmc
jmp
cwtl
fcoms
mov
stc
dec
mov
imul
sbb
push
sahf
mov
nop
fbstp
push
inc
int
mov
stos
sbb
mov
ds
inc
mov
inc
adc
adc
cmp
out
imul
imul
sbb
cwtl
subl
fistl
pop
mov
push
adc
cwtl
cld
sti
add
xchg
xlat
out
push
pusha
iret
jb
and
adc
add
or
repnz
xchg
ret
pop
pop
mov
pop
test
test
sub
xor
jbe
xchg
lods
out
inc
das
jns
lea
scas
mov
gs
movsl
sbb
dec
movsl
call
mov
mov
jecxz
xor
sbb
imul
xchg
adc
aam
jb
test
mov
inc
out
jp
add
lahf
pop
dec
adcb
sti
lret
pop
pop
stos
adc
fidivl
imull
aad
fcmovne
or
xchg
bnd
and
or
les
js
out
cmp
repz
out
jle
aaa
fmuls
gs
mov
scas
cs
push
xchg
arpl
sbb
mov
popa
rcrb
lods
fsts
fnstsw
fdivrp
pop
sbb
or
jo
std
pusha
mov
inc
mov
mov
insl
aad
cwtl
mov
push
mov
mov
jno
adc
mov
dec
and
mov
adc
adcb
fcom
mov
out
lret
int
mov
mov
ret
sbb
cmp
dec
inc
movsl
cmpl
sub
jb
lock
shll
ljmp
push
stos
inc
mov
push
test
xchg
push
cli
mov
jle
imul
mov
mov
outsb
sbb
mov
jmp
mov
lods
pushf
push
sti
pop
and
adc
xor
out
fidivrl
loope
adc
imul
mov
fdivrs
fistpll
dec
cmc
pop
sub
imul
je
addl
arpl
sbb
fcoms
xor
mov
mov
loopne
in
sub
fiaddl
push
mov
xchg
in
push
repz
adc
lcall
fwait
loope
dec
ret
test
mov
pop
jecxz
pushf
jp
xchg
pmaxsw
xchg
rcl
stos
adcb
mov
cmpsb
ret
mov
sub
pop
dec
mov
nop
test
dec
or
xchg
jmp
sbb
mov
or
idiv
or
xchg
mov
mov
push
push
mov
xlat
jb
cld
arpl
rcrl
xchg
shrl
jecxz
test
imul
repz
int
outsl
fimull
push
push
test
out
add
pop
cmp
lea
negb
mov
outsb
pop
xor
mov
lds
sbb
fsubs
or
mov
lods
and
jle
ljmp
lret
mov
add
arpl
jle
mov
ljmp
inc
mov
hlt
pop
add
inc
out
popa
xor
push
xlat
xlat
xchg
pop
sub
mov
jmp
stos
adc
and
leave
mov
imul
push
mov
mov
mov
subb
jge
shll
cmp
mov
pop
sub
in
negl
mov
jecxz
cmp
cld
ret
out
fldenv
js
or
xor
je
jg
adcb
test
repz
xor
scas
icebp
mov
inc
loope
inc
xchg
xor
inc
outsb
push
jnp
mov
in
cmpsb
jo
jbe
mov
push
push
sahf
test
pop
rcrb
es
int
jno
cmp
jmp
jl
mov
es
xchg
scas
pop
jns
dec
test
insb
mov
pop
jg
das
inc
pop
pop
mov
sub
push
scas
neg
in
jecxz
aam
dec
repnz
out
mov
cmp
js
scas
hlt
and
inc
pop
jns
faddp
out
sub
fadd
test
dec
jg
mov
les
mov
push
sbb
sbb
dec
daa
mov
icebp
int
inc
dec
xchg
mov
lahf
leave
mov
movsl
mov
sbb
xor
xor
test
nop
sub
push
addl
mov
inc
xor
cltd
out
movsl
out
cli
mov
mov
mov
jle
pop
jnp
cli
add
mov
shl
lcall
outsb
in
insb
out
xchg
mov
mov
icebp
pop
or
mov
xor
pop
inc
add
jmp
addr16
pop
mov
xor
movsl
into
add
into
add
lret
pop
inc
cmp
pop
jg
mov
dec
ret
aas
sbb
pop
or
xor
imul
sbb
shlb
jne
popa
fcos
pop
push
aas
clc
jno
mov
lods
js
adc
adcl
jo
cmc
mov
pop
adc
or
mov
xchg
inc
sahf
push
jno
add
mov
ds
push
inc
fisubs
or
fiaddl
jmp
mov
inc
cmp
and
dec
bound
aad
mov
inc
xor
daa
jl
push
mov
lea
jecxz
push
cli
xchg
xlat
mov
adc
popf
mov
jge
jmp
push
test
sub
mov
inc
push
xchg
ss
add
push
mov
xchg
mov
adc
mov
or
jo
adc
pop
adc
jmp
mov
orl
imul
mov
xor
ret
sub
ljmp
into
ret
jle
mov
stc
mov
mov
in
ud1
or
mov
mov
sub
lret
ja
inc
jge
sub
cmp
lcall
sbb
mov
mov
std
mov
cs
hlt
fwait
mov
push
loop
sub
add
insb
and
xorl
icebp
lock
imul
dec
data16
inc
add
aas
and
sub
inc
imul
cmp
dec
imul
push
shlb
jmp
mov
or
cmp
xchg
gs
or
rcrb
xchg
pop
fcmove
pop
adc
sar
sbb
xchg
and
dec
les
pop
push
insl
jecxz
add
adc
dec
mov
movsb
hlt
aad
mov
and
pop
in
stos
fimull
mov
fnstenv
repz
out
fists
test
xor
sbb
inc
xor
loopne
mov
mov
test
vfrczps
xchg
or
ficoms
push
sbb
push
call
sub
or
xchg
pop
xor
pop
mov
xchg
imul
pusha
dec
shrb
cmpsb
dec
imul
rclb
insb
lret
int3
jbe
jg
jle
bound
or
inc
icebp
mov
nop
sub
nop
rcrb
adc
in
popa
and
movsb
das
mov
mov
insl
sbb
ds
xchg
or
push
pop
ljmp
iret
mov
int3
decl
movsl
stos
imul
jge
lret
dec
sub
pop
sbb
adc
xor
push
lahf
push
dec
jge
sub
mov
jg
cwtl
data16
add
inc
mov
repz
mov
xchg
in
loope
in
mov
and
lods
sub
pusha
and
dec
loopne
mov
cmp
cmovs
idivl
stos
sub
faddl
jne
sub
fsts
pop
mov
scas
mov
cltd
imul
adc
dec
mov
fwait
repnz
test
jl
jp
sbb
push
and
icebp
lret
pushf
add
push
aad
mov
gs
pop
mov
inc
fmuls
adc
xor
jo
and
jno
scas
dec
lock
sub
jae
out
push
pop
push
rol
stos
mov
adc
cmpsl
xchg
ja
daa
stos
xor
xorb
cmp
test
shl
xlat
adc
and
gs
xorb
dec
inc
stos
ja
jle
lds
popa
mov
ja
dec
aam
sti
add
sub
dec
lahf
test
adc
idivb
cmpsl
frstor
mov
pop
mov
push
or
int3
stc
dec
mov
add
dec
adc
js
cli
mov
ja
jecxz
jb
dec
ja
movsl
mov
cmp
fnstcw
cmc
pop
scas
mov
adcl
cmc
popf
ss
daa
fistl
sub
addb
cmp
shlb
and
mov
sbb
jp
notb
mov
cmp
adc
roll
adc
je
sub
or
and
pop
addl
cli
and
pushf
gs
arpl
in
sub
jnp
cmp
xlat
jp
jge
fisubrs
neg
and
shlb
mov
push
add
xchg
lods
fwait
dec
sbb
outsl
loope
dec
loop
xchg
aad
jge
dec
add
lds
xchg
fcmovnu
xor
mov
fdivrs
ljmp
cmp
cltd
push
mov
je
and
sti
or
mov
fs
mov
mov
aam
fs
mov
inc
or
sarb
fistpl
lret
or
push
xor
xor
ja
xlat
jbe
add
addl
mov
sbbl
sarb
cmpsb
into
ficoml
add
push
jno
sub
mov
mov
adc
int
xchg
iret
insl
xchg
rorl
mov
inc
decl
shll
fnstsw
ss
add
jo
outsl
lcall
pushf
scas
push
mov
push
pop
repnz
jns
pop
push
aad
lods
scas
pop
push
pop
idivl
or
addl
sub
mov
icebp
sbb
mov
shr
pushf
test
aas
dec
push
mov
dec
aas
loop
sbb
out
sbb
xchg
cs
push
loop
ds
loopne
jecxz
sub
inc
sahf
icebp
mov
xchg
jo
imul
ret
repnz
jecxz
mov
andb
in
lods
gs
mov
push
das
dec
insb
je
mov
adc
push
inc
adc
inc
pushf
xor
dec
cmp
inc
mov
popf
xlat
pop
pop
jg
daa
jmp
ljmp
cs
mov
dec
ffree
outsb
inc
xchg
jne
enter
mov
xor
repz
loopne
and
mov
icebp
xchg
mov
sbb
mov
fs
jle
push
movsb
loop
xor
inc
out
jle
out
dec
push
or
pop
cmc
loope
push
mov
mov
pop
and
push
int
popa
negl
cwtl
sub
int
lcall
mov
jo
cmp
rorl
pop
outsb
xlat
lea
inc
in
sub
mov
daa
cltd
xor
pop
cmp
add
movsb
sub
outsl
std
ficoms
mov
lret
ret
cmp
lods
adc
dec
in
or
xor
roll
shll
insb
mov
lret
into
outsb
shrb
aam
clc
andl
imul
es
sbb
push
cmp
xor
sub
adc
and
in
out
sub
push
fiadds
dec
xchg
jmp
arpl
mov
stc
jb
cmp
dec
xchg
call
lret
fwait
into
mov
rcrl
jnp
or
or
push
insb
jmp
jp
adc
ja
dec
or
jo
data16
lods
lea
cld
pop
dec
notl
lods
es
pop
sahf
add
inc
lret
ds
xor
rorb
jle
pop
scas
lods
dec
out
into
sub
jne
jns
push
xor
mov
es
xor
out
xor
aam
xchg
cltd
lods
out
pop
push
xchg
mov
test
ja
sub
or
push
mov
dec
loopne
add
les
or
sarl
pop
aad
sub
add
jb
push
inc
sub
push
jmp
mov
mov
lahf
inc
add
daa
push
insl
subl
cmp
arpl
js
add
shlb
lds
loopne
sahf
mov
mov
mov
and
inc
jns
les
mov
dec
aas
popf
pushf
cmp
insb
jl
dec
push
js
jle
dec
mov
xchg
jno
lret
mov
leave
cmp
ret
inc
xchg
stos
mov
mov
xchg
cmpsl
and
jae
addr16
movsl
ss
mov
xchg
xchg
std
ss
xor
xor
mov
xorb
push
inc
xchg
xor
adc
popw
xor
jno
mov
add
or
and
xor
arpl
sbb
mov
inc
mov
adc
cmp
push
inc
mov
add
cld
or
lods
inc
push
fdivl
rorl
jno
xor
or
sub
cmpsb
or
test
lock
dec
mov
and
xor
cmpsb
ficompl
push
lret
mov
jne
out
xchg
xchg
xor
cmp
cmp
mov
sarb
sbb
sahf
scas
cmp
icebp
lret
mov
arpl
lahf
sbb
jle
jge
dec
test
mov
mov
repnz
jle
test
cmpsb
imul
repnz
or
lods
fs
loopne
shlb
xor
ds
xchg
xchg
mov
sub
movsb
shr
adc
pop
xor
out
cmp
dec
stc
mov
sarl
mov
pop
add
dec
adc
mov
add
in
sub
sbb
mov
or
mov
adc
out
fnstcw
data16
scas
inc
add
lret
mov
push
icebp
mov
imulb
arpl
lods
ret
loopne
push
sbb
test
fldl
xchg
or
push
mov
cld
or
pop
cld
not
sbb
mov
push
inc
jge
add
cmp
adc
aad
inc
inc
mov
int
dec
pop
mov
aad
xlat
mov
aaa
add
das
repnz
sub
mov
inc
clc
outsb
je
xchg
mov
fistpl
push
xchg
test
jl
mov
pushf
sub
fcmovbe
mov
jge
mov
sti
jg
jecxz
inc
mov
movsb
f2xm1
iret
cmp
popl
adc
pop
rcrb
rcll
arpl
in
rcrb
fnstcw
je
es
cs
pop
or
mov
sub
push
subb
inc
sbb
mov
xlat
in
push
gs
xchg
fimuls
dec
mov
bound
add
sti
sbb
push
mov
std
pop
das
and
or
mov
cmp
ret
adc
les
adc
pop
in
outsb
xchg
push
data16
in
jp
ret
out
int
inc
shlb
sub
sbb
les
jecxz
mov
lahf
add
in
sti
imul
hlt
mov
mov
inc
mov
fstps
sahf
stos
stos
clc
ljmp
sub
xchg
jb
les
xor
cli
xchg
adc
or
in
xlat
xor
loope
mov
pop
push
jns
cmp
mov
and
enter
cmpsb
fs
fmull
jno
in
mov
cmp
fstpl
in
mov
and
dec
jg
mov
out
xchg
imul
cli
subl
xchg
cltd
push
pop
lods
dec
fmulp
xor
and
mov
stos
pop
dec
nop
movsl
dec
lods
push
jecxz
ss
dec
sub
js
sub
hlt
shlb
and
inc
sbb
aas
cli
inc
add
test
inc
sub
ds
adc
push
inc
repz
int
rcrb
je
ret
test
jl
inc
mov
movsb
sub
adc
jno
jbe
push
outsl
dec
adc
lret
mov
push
test
cmp
adc
jecxz
sub
loopne
mov
iret
ret
push
fwait
ds
add
sbb
sbb
out
mul
jb
pop
jns
fdivr
dec
adc
rol
cmp
lret
pop
mov
xchg
les
push
es
addr16
lcall
out
inc
xchg
cli
test
push
dec
jg
push
and
mov
push
push
mov
adc
lret
jne
repz
push
sbb
fcompl
jge
jno
mov
dec
jae
adc
xchg
repnz
push
xchg
pop
adc
ds
pop
mov
adc
sbbb
pop
iret
std
test
ss
lock
jle
mov
cmp
cmpsb
push
faddl
push
mov
aad
movsl
mov
shrl
and
ret
inc
loop
js
sbb
adc
sub
mov
fwait
add
and
push
mov
iret
dec
mov
adc
sbb
mov
pop
and
pop
jmp
sbb
xchg
and
push
push
sbbl
aaa
test
xchg
sub
xchg
inc
sub
pop
xchg
stos
scas
jbe
aaa
addr16
sahf
jmp
mov
push
pop
pop
cmp
sbb
pop
int
jns
cmpsb
push
mov
lcall
test
scas
jecxz
jp
inc
imul
dec
adc
inc
jae
push
sub
and
fistpll
frstor
in
pop
fwait
adc
popf
jge
xor
xor
popa
sti
add
sahf
fs
mov
jge
push
outsl
pop
sub
xor
mov
cmp
inc
pop
std
and
pop
daa
inc
push
jae
adc
mov
je
enter
enter
imul
test
push
xor
pushf
in
loope
sub
cmp
pop
sarl
and
push
orl
mov
cs
jge
inc
jnp
cld
jno
or
sarl
stos
mov
std
inc
cmp
pop
pop
ss
push
addl
pop
dec
xor
gs
sub
push
add
push
jecxz
test
mov
jmp
fwait
mov
add
inc
ds
fisubs
and
ret
mov
adc
mov
loop
adc
dec
fbld
clc
ja
out
add
inc
xchg
cwtl
pop
sarl
adc
cmp
dec
adc
push
lret
push
insb
mov
ret
notb
in
jmp
das
jbe
and
nop
mov
cmpsl
arpl
divl
cs
adc
add
aam
mov
insb
xor
je
push
imul
shl
and
stc
lret
xchg
sub
push
xchg
lret
adc
iret
orb
mov
js
iret
in
adc
stos
in
insb
ss
push
jns
adc
xchg
or
jb
mov
push
jge
push
pop
out
xor
fdivr
add
hlt
fsubs
pusha
dec
push
inc
arpl
hlt
es
stc
outsl
imul
push
or
ds
dec
lret
pop
cmpsl
arpl
popa
stc
jb
cld
imul
xchg
les
add
mov
cmpsl
rep
push
jno
lcall
ss
adc
pop
sbb
dec
js
mov
pop
mov
cs
imul
fimull
add
loopne
bnd
daa
pushl
and
xchg
mov
xchg
lock
mov
xchg
inc
inc
mov
cmc
push
xor
movsl
idivl
es
enter
sbb
xor
cli
xlat
hlt
bound
jge
mov
mov
sbb
xor
lea
ja
xchg
decb
and
leave
mov
mov
push
stc
ss
adc
push
gs
sbb
mov
ja
xchg
out
add
adc
jnp
mov
cmp
push
or
in
pusha
jmp
aas
jmp
repz
shlb
xlat
xor
jg
or
cs
addr16
jp
int
or
xor
sub
mov
in
and
push
or
inc
daa
gs
jae
scas
xchg
aam
xchg
sti
ret
rolb
aam
jns
adc
js
lods
rorb
sbb
jl
mov
lea
adc
bound
xchg
or
stos
cmp
lahf
mov
push
mov
xor
inc
pop
add
push
pushf
pop
and
cmp
leave
into
mov
popf
scas
icebp
xlat
loopne
stc
or
fdivs
pushf
insb
push
lods
pop
inc
ss
out
and
iret
push
or
lds
loop
pop
push
push
sahf
iret
lcall
insb
jno
cmp
jle
add
cmpsb
std
sahf
mov
and
mov
vpmacssdd
out
dec
mov
cmpsl
or
inc
shrb
loop
jmp
cld
cmp
data16
xchg
lea
lret
add
rolb
sbb
xor
std
sbb
cmpsb
lret
cmp
loopne
scas
and
sbb
mov
int3
cmp
adc
jp
clc
mov
cmp
add
les
imul
jo
repz
mov
dec
pushl
aas
pop
xchg
cmc
aas
stc
bound
cmp
push
push
test
nop
fwait
in
inc
sub
xchg
mov
mov
or
pop
inc
inc
push
fdivr
push
mov
pop
cmp
mov
fisubrs
lea
lods
jbe
inc
aam
jmp
jle
into
cmovle
movsl
imul
rolb
mov
adc
cmpsl
je
jno
cmpsb
mov
sahf
aaa
shll
jae
sub
call
insl
xchg
and
push
push
jbe
sbb
and
pop
jl
pop
push
mov
push
aaa
dec
lahf
xor
out
pop
xchg
bnd
push
cltd
cmc
xor
jp
cmp
test
mov
and
jns
loopne
insb
sar
mov
pusha
lret
push
mov
and
outsb
lock
cli
lods
mov
jae
roll
xlat
data16
xor
roll
mov
cmpsl
dec
pop
ds
pop
sbb
fmuls
xor
cmp
push
test
hlt
add
add
movsb
fisubl
jmp
pushf
xor
shr
lahf
or
fisubl
pop
mov
divb
dec
loop
sub
add
out
aas
lret
jno
sahf
fildll
pushf
outsb
cmc
mov
adc
pusha
out
popa
mov
fs
mov
aaa
xchg
fdivrp
mov
ret
inc
adc
das
jae
sbb
add
idivl
hlt
jns
sahf
std
dec
ljmp
mov
sub
js
fdivrp
shlb
mov
adc
fwait
xlat
cld
inc
push
les
add
bound
insb
or
push
aas
sub
ret
iret
cmp
sbb
jg
sub
fcmovbe
insl
iret
dec
cmp
shl
gs
ret
xchg
add
mov
loop
or
sbb
xor
push
fistpl
lods
pop
mov
ja
add
push
mov
ds
aas
push
push
pop
cwtl
sub
adc
fdivl
push
addb
adc
add
lds
imul
pop
pop
adc
in
test
lock
cmc
and
bound
sub
xlat
in
movsb
dec
lods
hlt
and
and
in
jle
fnsave
xor
mov
add
mov
das
stos
mov
jne
addr16
sub
outsb
lahf
cmc
icebp
loop
adc
mov
out
push
iret
jge
shll
mov
add
imul
sti
jg
adc
mov
in
or
stos
push
movsb
push
mov
cmc
repnz
mov
popf
cmc
shll
in
xchg
call
data16
pushf
dec
adc
add
sahf
scas
xlat
dec
and
mov
cltd
jmp
mov
sbb
or
leave
in
xchg
fwait
inc
lea
dec
sarl
jg
add
push
add
mov
outsb
gs
insl
pop
jne
jo
bound
and
cmp
pop
aad
ds
cmp
add
pop
out
jl
out
pop
jns
movsl
pusha
and
ja
cltd
js
push
cwtl
add
mov
xchg
xchg
dec
test
pop
push
scas
cltd
cmp
loopne
call
mov
lcallw
mov
gs
mov
jle
mov
xor
jns
dec
dec
xlat
add
cs
push
mov
pushf
in
cs
pop
ja
insl
mov
or
xor
pop
imul
cwtl
repz
adc
jle
mov
inc
dec
xchg
pop
pop
cmpsl
or
xor
push
cli
dec
out
xchg
sub
mov
add
cltd
pusha
xchg
sub
movsl
xor
xchg
push
ja
mov
fisttpll
movsl
add
jno
sbb
adc
mov
int3
popf
mov
stc
xchg
xlat
mov
enter
sbb
fldcw
mov
outsl
sub
push
dec
cmpsb
pop
pop
repz
mov
xchg
out
mov
cld
fisubrl
cld
xor
lret
cltd
aaa
sbb
mov
popa
ljmp
xchg
js
or
jp
andb
lret
cmp
jp
pop
mov
mov
loopne
notl
pushf
dec
jmp
ret
sub
outsb
icebp
cmp
or
lock
jb
roll
mov
mov
ds
lods
inc
pusha
or
jp
xchg
xchg
repnz
push
dec
lea
int
sub
int3
cmp
mov
aas
mov
jno
fnstenv
cmp
scas
pusha
sub
sbb
xchg
orb
pop
pushf
into
and
pop
movsb
push
mov
sbb
xchg
push
mov
pop
mov
aad
adcl
inc
add
insb
push
add
fistl
push
push
int
dec
cld
lcall
stos
js
cltd
inc
inc
xchg
push
int
xchg
push
pop
adc
clc
insb
scas
arpl
cmpsl
movsb
in
test
mov
cli
cmc
fildl
xcrypt-ctr
cmpsl
pop
rorb
fldl
leave
and
xchg
fildl
xchg
cs
jbe
insl
orl
je
mov
sbb
mov
ret
cmpsl
pop
out
jl
in
xlat
ds
sub
dec
jbe
mov
lock
mov
push
sahf
jg
jno
int
jo
mov
adc
pop
jo
pop
push
add
adc
int3
or
test
sub
and
cmp
push
ret
or
sub
cmp
xchg
lcall
stc
repz
inc
loop
mov
sbb
and
sahf
testl
adc
jp
pushf
aam
mov
xor
cwtl
push
jl
icebp
xorb
jmp
lock
sbb
push
adc
and
sahf
call
dec
xor
lods
gs
xchg
cltd
cld
and
dec
test
popf
jbe
in
sub
cmpsb
push
cmp
mov
test
xchg
insl
push
jno
push
ja
insl
int
ja
adc
jnp
dec
or
sbb
sahf
out
cmc
xlat
mov
mov
push
sahf
adc
jnp
mov
cmpsb
cmpsb
push
js
inc
jno
push
lahf
xor
jmp
int3
push
and
lcall
sarb
cld
icebp
sti
mov
push
cli
push
push
adc
inc
shl
cmpsl
jne
fistps
push
adc
cmp
dec
mov
ss
xchg
hlt
hlt
rcrb
mov
iret
insb
fstpl
dec
scas
sbbb
loope
das
jmp
or
and
pop
fistps
lock
gs
scas
int3
clc
test
scas
ljmp
mov
shll
int3
xor
sub
nop
mov
lahf
lret
mov
notb
iret
inc
std
sbb
addb
out
imul
mov
push
sbb
test
dec
in
int
cmp
repnz
arpl
mov
pop
and
stc
push
push
xchg
aad
pop
out
and
and
out
outsb
call
jle
push
jbe
pop
or
pop
aad
mov
test
xchg
aad
push
enter
mov
ja
mov
adc
ss
imul
and
dec
daa
stos
cld
cmpb
gs
jne
data16
jp
cmp
add
cmc
cmp
cwtl
mov
pop
mov
cmpsb
xlat
mov
mov
in
test
pop
push
loopne
cmp
inc
dec
aam
in
mov
push
cmp
shl
jno
loopne
ret
jnp
stc
xor
xchg
shlb
scas
fwait
push
or
or
adc
sti
jbe
inc
ret
jmp
das
insb
or
adc
adc
iret
test
fs
xchg
mov
orl
pusha
pop
and
cwtl
or
in
aam
cld
mov
xchg
jp
movsb
mov
lcall
pop
orl
in
add
sub
xor
adcb
inc
mov
jno
outsb
bound
mov
loopne
push
scas
inc
xlat
stc
faddp
xchg
pop
std
sbb
shl
out
insb
iret
lcall
jns
movsl
aas
xchg
mov
push
pop
sahf
sub
stos
xor
in
and
mov
jg
cs
mov
arpl
sti
sbb
cmpsl
lret
add
gs
pop
outsl
imul
pop
out
aaa
fsubs
movb
push
sbb
shlb
sub
gs
stos
mov
fsubrl
cltd
jecxz
jno
mov
stos
nop
imul
sub
int3
clc
fldlg2
insb
stos
scas
jbe
xor
mov
xchg
mov
jae
loop
in
dec
xchg
push
jno
push
mov
lahf
das
push
lock
fcoms
jb
dec
in
insb
pop
push
jle
dec
subl
xor
rclb
xor
mov
sbb
pop
adc
sarl
sbbb
int
jmp
psrad
xor
pop
lret
push
and
and
popf
int3
cmpsl
mov
cmpsl
js
mov
out
ss
cmp
loop
std
mov
xor
jecxz
and
or
aas
es
addb
icebp
mov
xor
fldcw
push
sbb
pushf
out
mov
mov
dec
divb
iret
stos
and
xor
gs
cmp
dec
sub
jp
cmp
pop
or
fsubrs
jne
int3
sahf
or
jp
adcb
aaa
popf
jecxz
mov
xor
push
xor
test
ds
add
addl
lahf
jbe
outsl
jg
add
jle
or
popa
int
pop
icebp
inc
push
mov
clc
push
mov
sbb
mov
aam
in
dec
repnz
rdmsr
mov
mov
add
hlt
cmp
or
add
adc
les
out
or
in
js
xchg
dec
jmp
les
fcmovbe
popf
xchg
mul
xor
cmpsl
fwait
inc
stos
loope
fstp
out
gs
fdivrs
leave
mov
push
ds
xor
jne
pop
sub
mov
int
mov
cmp
aad
add
in
cmpl
test
xchg
fbstp
and
jg
insb
popa
bound
cwtl
fwait
imulb
push
sbb
stc
inc
mov
sbb
rcrl
xchg
mov
loopne
jmp
push
or
add
jo
arpl
mov
push
ja
sbb
push
inc
jbe
or
sbb
mov
orl
mov
fldenv
into
rclb
xchg
test
in
mov
dec
mov
fs
cltd
adc
lods
mov
sub
imul
sbb
in
pop
rorb
xchg
or
imul
test
pusha
sub
jb
sub
mov
jl
sub
fcoms
inc
cmpsl
out
in
adc
sbb
push
jnp
mov
push
adc
lods
sbb
ret
popa
mov
hlt
lret
jle
mov
cwtl
imul
xor
push
test
xchg
and
dec
ljmp
mull
push
out
cmpsb
pop
repnz
inc
sbb
and
mov
mov
or
sub
xchg
sub
data16
out
ja
add
loopne
js
cmp
inc
mov
mulb
stos
gs
mov
psubsw
inc
inc
inc
sarl
ja
sub
add
sbb
xor
mov
iret
push
inc
inc
popa
mov
pop
int3
mov
icebp
testl
mov
outsb
add
addr16
repnz
push
insb
test
pop
stos
pop
leave
nopl
and
jp
movsl
and
cmp
arpl
mov
rolb
in
cs
cltd
mov
les
mov
std
mov
lds
fists
and
cwtl
out
jecxz
pushf
jg
ficompl
insl
in
sub
bound
mov
mov
adc
in
xor
nop
lods
test
jle
sub
jnp
adc
push
xchg
mov
cmpsl
and
leave
nop
pop
pop
xchg
cmp
sub
push
repnz
jb
pop
les
outsl
movsl
jmp
arpl
or
xchg
fnstenv
jbe
dec
jecxz
sbb
jl
pop
cld
mov
mov
dec
test
cli
int
rcll
xchg
and
xlat
fstpt
movlps
or
js
js
enter
daa
inc
sbb
rorb
add
xchg
and
mov
cmpsb
frstor
or
or
xor
sti
xor
out
push
xchg
mov
adc
loop
or
lahf
popa
jecxz
inc
mov
cmp
sbb
xchg
pop
das
and
inc
inc
mov
and
push
add
jbe
inc
mov
mov
jae
dec
xor
sub
iret
push
test
adc
xor
iretw
add
lcall
or
pushf
xor
in
xlat
movsl
sub
pop
shr
adc
in
test
mov
rcrb
rclb
push
sbb
mov
and
leave
fldt
mov
fwait
push
cmp
mov
insb
xchg
loopne
mov
call
iret
shl
mov
cmp
test
sbb
mov
or
mov
mov
addr16
hlt
repnz
int
jae
test
cwtl
and
jbe
test
in
and
int3
xchg
fistpll
xor
mov
out
mov
sar
in
push
and
mov
leave
lret
sbb
cmpb
outsb
int
jecxz
sub
mov
push
and
in
inc
es
mov
or
sti
sbb
aam
inc
sub
inc
sub
xor
or
in
mov
in
inc
mov
lock
pop
fs
xlat
mov
mov
adcl
popf
mov
roll
dec
ret
bound
cmp
add
or
call
jae
xchg
sbb
mov
aam
sub
fidivrs
test
test
dec
jns
dec
cwtl
mov
jo
adc
fisubrl
lahf
inc
stos
std
add
imul
push
cmp
mov
lret
ret
pop
adc
jnp
push
push
repz
dec
pop
clc
addl
add
aaa
imul
add
push
xchg
xchg
mov
sbb
push
imul
loop
rclb
xor
lea
arpl
add
adc
mov
xchg
cmp
hlt
mov
out
lods
insl
sub
xchg
mov
es
insb
sub
cmp
mov
jp
fs
gs
mov
lds
dec
push
inc
cmp
mov
cmp
ficompl
in
insl
in
and
push
mov
push
test
dec
leave
sub
test
jle
pop
movsb
js
and
xchg
push
ss
shlb
xchg
xor
inc
loope
sbb
nop
inc
and
or
push
andl
stos
repz
enter
mov
inc
nop
cmp
or
int3
cmp
stc
sub
mov
mov
mov
insb
arpl
pop
sub
jno
int
lret
int3
mov
js
fistpll
pop
xchg
in
jp
mov
push
in
xor
mov
or
mov
add
push
mov
dec
mov
xorb
ja
inc
idivl
jp
add
cmpsl
lea
jo
xchg
sbb
std
add
xchg
xchg
lds
push
gs
pop
cmp
jbe
or
and
lea
sbb
cmp
loope
push
mov
mov
and
addr16
addb
shlb
jge
xor
xchg
mov
xchg
popa
popf
test
sarl
xor
das
int
pop
cmp
ret
sbb
push
frstor
adc
pop
xchg
popf
inc
and
pop
lods
daa
in
sahf
sub
cmc
add
mov
lds
out
push
mov
jge
cwtl
insb
aas
es
subl
dec
xchg
in
imul
xor
mov
mov
stos
movsl
dec
push
mov
jne
cmp
add
ja
lret
push
and
mov
fcomip
lds
call
dec
rorb
inc
fs
jl
inc
loope
inc
mov
jl
xlat
decl
gs
or
push
xchg
cmpsb
es
adc
ss
test
mov
xor
cmp
xchg
and
inc
pextrw
ja
lock
pop
fldcw
or
sbb
xchg
inc
js
mov
insb
mov
jae
push
cmpsb
mov
lods
sbb
lret
in
sub
outsb
shrl
pop
repz
imulb
outsl
and
dec
inc
inc
insl
dec
int3
fs
scas
xchg
dec
xor
call
adc
adc
imul
jge
pop
lock
call
push
dec
dec
jle
sbb
mov
dec
jge
ja
jno
push
ja
dec
dec
inc
inc
je
insl
cmp
popa
sub
es
pop
dec
jge
ja
inc
cs
ss
jno
push
fs
pop
sub
push
orb
push
pop
pop
pop
pop
pop
pop
xchg
add
jmp
xor
.byte
.byte
