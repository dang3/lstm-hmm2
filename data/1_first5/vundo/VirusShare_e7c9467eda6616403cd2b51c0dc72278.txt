mov
ror
sub
shr
mov
and
xor
or
and
and
mov
jmp
or
mov
sub
test
jne
push
jmp
push
call
ret
addl
call
xor
mov
push
jmp
ret
sub
add
push
jmp
push
lea
ror
mov
sub
test
jne
inc
inc
rol
mov
mov
movzbl
jmp
push
mov
jmp
movzwl
movzwl
add
xor
mov
lea
sub
test
mov
jmp
push
push
lea
inc
sub
and
mov
add
push
jmp
push
nop
nop
nop
nop
nop
add
or
xor
add
and
mov
push
mov
mov
jmp
jne
nop
nop
jmp
add
mov
jmp
or
mov
sub
shr
test
lea
jle
or
inc
and
dec
xor
mov
jmp
jmp
xchg
fwait
dec
test
jne
jmp
lea
nop
movzwl
or
add
mov
mov
xor
mov
jmp
jne
xor
mov
or
ror
dec
mov
mov
mov
shl
mov
mov
lea
jmp
movl
movl
call
jmp
jne
and
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
mov
mov
shr
and
jmp
add
xor
rcl
xor
xor
mov
jmp
negl
lea
jmp
jne
jmp
add
add
xor
cmp
mov
mov
jle
jmp
shl
mov
or
sub
and
xor
mov
rep
movzwl
jmp
and
cmp
jne
and
jmp
and
xor
mov
jmp
lea
lea
cltd
and
add
sar
test
jmp
lea
addl
jmp
test
jmp
add
push
std
decl
test
add
add
or
push
jmp
push
pop
subl
jmp
movl
mov
jne
xor
ret
jmp
je
push
jmp
push
call
inc
push
int3
leave
ret
addl
push
jmp
pop
int3
dec
leave
dec
push
xorl
jmp
movzbl
add
mov
lea
dec
mov
ror
or
mov
shr
jmp
add
add
add
jmp
add
add
add
push
sub
or
mov
sub
mov
push
push
push
push
jmp
inc
nop
pop
inc
ret
pop
push
ret
ret
subl
push
jmp
call
push
dec
jmp
nop
subl
jmp
push
push
call
nop
nop
nop
nop
nop
call
ret
add
add
add
dec
aaa
sbb
incb
mov
jmp
jmp
xor
mov
mov
add
jne
add
ret
mov
jmp
ror
add
mov
add
add
sub
add
cmp
mov
mov
jmp
add
test
je
jns
movzwl
push
jmp
mov
jmp
jle
or
and
mov
mov
lea
and
sub
mov
jmp
add
mov
lea
sub
xor
mov
shr
and
add
test
jmp
add
mov
test
je
jmp
mov
add
cmpl
je
push
jmp
sub
add
or
mov
and
jmp
call
cmpl
jne
cmpb
jmp
jmp
lea
or
mov
sub
cmpw
jmp
mov
add
jmp
xor
jmp
add
add
push
sub
mov
test
je
jmp
push
push
jmp
push
push
subl
call
mov
sub
xor
shr
shl
and
mov
jmp
test
mov
jmp
sub
mov
and
add
mov
push
push
and
mov
mov
rol
and
mov
mov
xor
jmp
test
jmp
add
add
call
or
push
and
mov
jmp
mov
dec
mov
sub
cmpl
lea
je
push
push
jmp
call
inc
shr
add
mov
cmp
je
ror
shr
and
shl
mov
test
jmp
add
push
mov
mov
mov
mov
add
xor
or
mov
sub
test
jmp
mov
mov
add
sub
test
jne
inc
dec
mov
movzbl
jmp
jne
mov
mov
pop
ret
push
jmp
cmpw
je
jmp
mov
mov
movl
jle
add
jmp
mov
jmp
push
jmp
leave
dec
call
push
inc
inc
jmp
addl
call
ret
sub
xor
dec
add
mov
or
mov
shr
jmp
push
jmp
jmp
nop
push
push
xorl
call
test
je
add
ret
ret
add
add
add
jne
rorb
push
nop
jmp
pushl
call
jmp
push
pop
call
sub
add
or
mov
mov
xor
add
or
sub
rol
mov
add
mov
add
or
sub
mov
jmp
add
pusha
mov
call
popa
jmp
mov
ret
push
jmp
push
leave
jmp
ret
pop
int3
push
call
xorl
call
test
jmp
push
push
jmp
add
push
jmp
int3
dec
addl
call
test
jmp
add
add
add
push
jmp
dec
addl
push
jmp
call
dec
call
inc
subl
push
jmp
addl
call
test
je
add
ret
nop
nop
nop
nop
nop
mov
and
jmp
mov
jmp
add
add
add
jmp
roll
xor
mov
push
mov
movl
mov
jmp
add
mov
jmp
call
test
jmp
add
add
add
jne
xor
ret
ret
add
rorb
and
shr
xor
mov
add
shr
mov
test
jne
add
jmp
bound
push
lea
push
push
call
add
mov
dec
inc
mov
mov
add
test
jmp
ret
or
mov
rol
and
mov
test
jne
add
ret
rol
xor
shr
mov
jmp
and
add
test
je
add
mov
sub
test
mov
jmp
outsl
push
dec
jl
or
and
mov
mov
mov
push
mov
jmp
mov
add
sub
jne
add
cmpl
jne
pop
jmp
stos
aaa
mov
test
add
movzbl
add
shl
or
and
add
mov
mov
jmp
test
je
movsbl
rol
add
xor
mov
test
jne
jmp
push
add
and
xor
sub
xor
mov
call
add
xor
mov
xor
or
mov
jmp
pop
pop
mov
pop
ret
pop
mov
pop
jmp
jne
add
cmpl
jne
pop
pop
jmp
jle
sub
xor
sub
shr
mov
lea
sub
sub
sub
jne
mov
sub
jmp
inc
xor
mov
add
and
inc
call
mov
or
ror
add
mov
and
mov
add
mov
xor
mov
ror
sub
mov
lea
push
jmp
outsl
mov
jne
jmp
push
jmp
call
call
subl
push
push
call
push
jmp
push
dec
jmp
leave
inc
push
addl
jmp
mov
and
mov
shr
and
add
test
jmp
sub
pop
cmp
je
add
cmp
jl
pop
xor
jmp
sub
pop
cmc
ljmp
jmp
subl
push
jmp
call
pop
push
call
call
ret
addl
push
jmp
inc
pusha
movsl
ret
mov
ret
add
add
add
add
add
pop
ret
add
add
add
test
fs
ss
xor
inc
shr
or
mov
pop
ret
and
add
xor
mov
jmp
fwait
jae
call
or
dec
mov
call
dec
shl
xor
mov
call
movl
lea
call
mov
jmp
outsl
icebp
mov
add
call
jmp
or
mov
mov
sub
test
jne
jmp
movzwl
or
mov
mov
pop
add
pop
inc
ror
xor
dec
ror
mov
pop
ret
add
add
add
adc
shll
and
mov
rol
mov
mov
mov
mov
jmp
mov
mov
jle
shr
shr
add
shr
add
mov
or
mov
mov
xor
mov
jmp
push
jmp
push
push
call
call
inc
xorl
mov
call
push
jmp
push
push
call
int3
addl
mov
call
push
jmp
nop
push
pop
addl
mov
call
nop
nop
nop
nop
nop
add
push
jmp
call
call
push
call
push
push
leave
push
subl
mov
call
test
jmp
movzbl
add
mov
lea
sub
and
mov
shr
jmp
push
fstl
add
dec
sbb
test
decl
pop
mov
jmp
scas
push
test
jge
add
sub
jne
jmp
push
idivl
loopne
add
jmp
mov
mov
pop
mov
pop
add
or
mov
pop
ret
add
add
add
mov
add
add
loop
aam
shlb
ret
push
rol
or
and
sub
mov
ror
mov
jmp
lods
add
add
add
or
push
jmp
call
ret
xorl
call
test
mov
jmp
ljmp
lea
add
xor
movl
or
xor
xor
dec
mov
sub
test
jne
jmp
mov
add
add
ror
or
add
rol
mov
xor
jmp
das
lgs
test
jmp
leave
call
dec
addl
push
jmp
inc
push
addl
push
jmp
dec
ret
call
call
push
push
subl
call
test
je
jmp
sbb
movb
pop
pop
xor
ror
and
mov
shr
and
add
jmp
call
sub
jne
pop
pop
pop
ror
mov
xor
mov
pop
ret
add
add
add
nop
nop
nop
ret
push
jmp
push
nop
addl
push
jmp
jmp
call
pop
xorl
push
jmp
dec
addl
call
test
je
add
ret
jmp
es
subl
lea
jne
test
mov
je
add
add
xor
shr
mov
mov
jmp
dec
iret
jg
pop
mov
pop
dec
ror
inc
xor
shl
mov
pop
ret
add
add
add
mov
mov
add
jmp
nop
nop
nop
nop
nop
movb
add
nop
nop
nop
nop
nop
jmp
movzbl
xor
mov
and
nop
nop
nop
nop
nop
add
add
shr
mov
mov
je
test
nop
nop
nop
nop
nop
je
xor
add
mov
sub
add
sub
mov
mov
jne
or
mov
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
movl
jmp
movl
mov
movl
jmp
lea
nop
nop
nop
nop
nop
call
cmpl
nop
nop
nop
nop
nop
jne
cmp
jne
call
test
mov
je
mov
or
shl
add
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
nop
nop
nop
nop
nop
jne
mov
nop
nop
nop
nop
nop
jmp
sub
jmp
sub
add
mov
xor
sub
xor
mov
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
shl
add
add
lea
nop
nop
nop
nop
nop
inc
add
mov
mov
nop
nop
nop
nop
nop
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jae
add
test
mov
je
lea
rol
or
or
rol
mov
nop
nop
nop
nop
nop
sub
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
mov
mov
sub
mov
and
mov
movl
jmp
nop
nop
nop
nop
nop
mov
mov
add
add
mov
movl
mov
cmpl
je
nop
nop
nop
nop
nop
pop
shl
add
shr
mov
sub
pop
pop
and
mov
and
mov
pop
ret
add
pusha
add
loop
add
add
add
les
add
add
add
add
or
add
lock
add
loop
add
add
add
les
add
add
add
add
or
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
add
sub
push
inc
js
jae
jae
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
add
adc
push
jb
outsb
je
insb
addr16
js
add
adc
add
add
add
add
xor
add
add
add
or
out
dec
add
add
or
add
add
add
aaa
scas
xor
xor
add
lret
cmp
cmp
cmp
mov
stos
aas
sub
xor
add
cmp
xor
cmp
pop
xor
sbb
add
and
cmp
addr16
insl
aas
sbb
out
cmp
cmp
xor
cmp
aaa
nop
cmp
cmp
cmp
cmp
add
mov
add
add
xor
xor
xor
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
pushl
mov
jo
push
loop,pt
jnp
mov
or
jmp
in
enter
sub
cmp
mov
das
or
dec
push
pop
pop
pop
pop
push
cmp
mov
lock
cmp
jno
popa
mov
fst
addl
shlb
mov
aam
and
lcall
insl
mov
jp
push
or
jge
lcall
mov
pop
sub
loope
pop
enter
lds
adc
and
cmpsb
bound
jmp
add
cmp
xor
xor
push
fisubs
out
pop
mov
dec
xchg
popa
mov
push
push
mov
stos
push
in
pop
dec
pusha
movsl
dec
inc
pop
xlat
movsl
mov
mov
add
dec
cli
lahf
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
.byte
hlt
nop
push
