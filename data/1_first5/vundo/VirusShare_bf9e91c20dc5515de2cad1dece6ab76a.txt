dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
mov
fldt
out
js
popa
mov
or
pop
add
push
add
pop
add
add
add
add
add
jp
test
add
add
add
das
add
add
arpl
outsl
add
sub
add
add
adc
add
add
add
add
popa
add
add
add
add
add
add
add
add
das
add
out
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
pop
add
add
sub
mov
sbb
push
add
add
add
add
add
add
dec
add
add
add
sub
jb
pop
add
outsb
add
push
add
sub
mov
sub
add
add
add
add
add
add
add
add
outsb
add
xlat
add
sub
outsb
add
add
add
add
add
mov
pop
add
aam
add
pop
add
add
mov
sub
add
outsb
add
add
add
add
add
outsb
add
aad
jle
outsb
add
add
popa
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
into
add
add
add
mov
add
sub
sub
arpl
mov
cli
add
add
add
push
add
add
add
add
add
add
outsb
add
call
add
add
jl
mov
insb
add
add
add
outsb
add
add
add
sub
push
add
add
adc
and
and
adc
outsb
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
sti
add
add
mov
add
or
inc
add
add
add
add
add
aaa
add
add
outsb
add
xchg
add
add
arpl
adc
add
pop
add
or
xchg
add
dec
add
addb
add
add
add
sub
aad
push
add
add
inc
add
add
add
xchg
add
add
into
add
add
add
add
add
flds
xor
cli
add
add
add
add
add
add
add
cli
add
add
add
add
add
jl
sub
xchg
cli
add
add
add
lods
add
add
add
add
inc
add
in
add
add
push
add
add
add
add
mov
sub
cltd
add
bound
out
add
add
popa
add
add
cli
add
add
add
add
add
add
add
add
add
xchg
add
add
add
pop
add
outsl
add
rolb
add
add
add
in
add
add
add
insb
add
add
aaa
add
add
add
sub
sub
add
gs
add
add
test
into
add
add
outsb
add
into
add
and
mov
outsb
add
in
add
add
add
dec
add
add
arpl
inc
add
add
push
add
add
sub
popf
add
add
add
pop
add
sbb
push
add
add
add
jl
or
popa
add
add
add
add
add
mov
cmc
cltd
sub
and
pop
andl
xchg
jae
inc
lcall
dec
sub
sub
pop
dec
stos
mov
mov
lret
cmp
push
jnp
in
sarl
mov
dec
sbb
mov
ja,pn
rclb
xor
outsl
lret
cmp
mov
in
movsl
jle
inc
push
mov
cld
adc
fwait
outsb
cmc
sbb
sub
or
cmp
fdivrl
stos
push
xchg
cwtl
jnp
sbb
lods
jle
xchg
fsubrs
popa
mov
daa
pop
xchg
adc
leave
int3
cmpsb
data16
lea
xchg
notb
in
or
data16
xchg
addb
mov
rcrb
cmp
and
clc
mov
cmp
arpl
mov
xlat
xchg
push
xchg
sti
mov
push
push
mov
jl
push
and
push
jle
rorb
out
jbe
push
jge
jno
out
cli
xor
lea
inc
aaa
mov
lahf
stc
mov
movsb
or
mov
dec
and
dec
test
dec
dec
lcall
pop
xchg
shll
divl
push
popa
sub
jae
out
aad
jl
cli
sub
cld
pop
xchg
pmaxub
push
aaa
pop
sbbl
negl
add
dec
xor
clc
xchg
scas
jmp
data16
cli
fbld
or
sub
mov
scas
ljmp
adc
xchg
cmp
lea
cltd
test
push
adc
add
adc
sti
push
jne
lahf
add
xorl
and
aam
loop
xor
mov
fistl
dec
sub
in
push
cs
xor
addl
push
or
js
aaa
insl
xlat
jp
fsubl
lea
pop
jl
dec
mov
enterw
movsb
cmp
out
into
and
pop
cld
add
test
andb
push
push
sti
lds
add
and
lods
mov
addr16
or
out
jge
in
ja
add
xor
jno
and
cmp
mov
aam
jecxz
das
in
iret
inc
loope
or
push
scas
sbb
ret
nop
mov
inc
dec
xchg
shrb
iret
outsb
inc
in
and
insb
imul
aad
xor
adc
xchg
xchg
jge
int
shrb
add
and
movsl
adc
popf
rcl
fcmovnbe
pop
mov
call
aaa
xchg
ret
fldcw
fmul
imul
pop
fcoms
add
fstps
push
loopne
out
and
and
mov
testb
lock
push
loop
xchg
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
gs
xchg
inc
mov
inc
mov
in
cmc
pop
lds
aad
movsl
inc
mov
test
jae
xorl
mov
xor
repz
cmc
adc
and
jae
lcall
and
sti
adc
sub
add
cmp
sub
jne
xlat
daa
cmp
xor
xor
mov
cwtl
or
test
outsl
or
leave
shlb
dec
mov
push
imul
sti
dec
xor
pop
mov
ds
jl
adc
cld
fst
jnp
and
js
sti
pop
in
lahf
sarl
lahf
mov
push
loopne
push
jae
shll
mov
and
or
push
in
dec
ret
repz
pop
adc
lods
test
xchg
sbb
pop
insl
push
sahf
jecxz
das
add
adc
cmc
mov
adc
pop
xor
sub
mov
mov
hlt
xor
fstps
pop
cmp
adc
cmp
push
test
add
sbb
or
cmp
sub
arpl
xchg
and
jl
pusha
push
sahf
movsb
push
imul
faddl
shll
data16
pop
xchg
adc
mov
loope
xchg
jb
push
nop
jo
xor
cmp
setne
or
adc
sub
push
and
jecxz
repz
cmc
adc
and
xor
arpl
xchg
inc
mov
xor
repz
cmc
adc
and
xor
arpl
adc
xorb
dec
pop
jo
add
subb
outsb
or
jp
addl
mov
dec
jge
movsl
addb
jge
fsubr
jno
std
mov
mov
pop
inc
rol
rorb
add
fiadds
in
dec
aas
mov
mov
sbb
lods
repz
cmp
jp
aad
fldlg2
popf
push
pop
add
imul
mov
out
pop
sub
mov
and
scas
les
ror
add
dec
js
push
orb
or
sbb
cmp
sbb
cli
pop
and
aaa
idivb
call
add
repnz
mov
jle
cwtl
into
lret
cs
mov
add
les
cld
dec
adc
adc
dec
ss
sub
into
nop
jge
push
ficompl
adc
cmp
loop
test
jno
pop
jge
add
orl
imull
add
xchg
movsl
sub
notl
mov
movsb
outsl
call
and
test
pop
repz
mov
xchg
mov
inc
adc
sub
ret
hlt
sub
add
js
inc
lock
xchg
push
dec
push
jl
xor
cmp
in
pop
jae
out
ret
jg
pop
scas
push
cmp
imul
cmpsb
inc
push
addr16
mov
in
or
add
jb
repz
jg
std
xchg
scas
push
pop
test
jnp
or
repz
cltd
lcall
icebp
mov
pop
pop
cmp
push
inc
out
test
xchg
cld
scas
sbb
pop
add
sarb
xchg
fisubl
or
mov
dec
cmpsb
add
nop
dec
lds
pop
loopne
cmp
jo
pop
sbb
add
int
push
sbb
sub
mov
daa
popa
mov
cmp
out
cmc
dec
mov
int
aaa
lods
cmp
aas
out
fsts
mov
mov
jo
mov
ret
ja
xchg
sub
cmp
ret
and
xor
jo
ss
mov
xlat
cwtl
fistpl
dec
adc
test
stos
mov
mov
addr16
adc
xchg
xor
dec
jae
pop
fcomip
sbb
sub
in
sbb
into
mov
insl
adcl
and
sbb
push
nop
mov
sahf
mov
jl
enter
ljmp
loop
stos
fiadds
cwtl
popa
or
sti
pop
xor
jmp
push
mov
mov
sub
test
test
sub
pop
test
or
mov
adc
or
andb
lahf
push
sub
shr
mov
lahf
test
pop
mov
sarb
cmc
jmp
ja
cmpsl
jl
pop
ret
sbb
mov
pop
sahf
inc
and
popa
mov
xchg
xor
sub
out
leave
out
pusha
cmc
clc
add
dec
cmpsb
pop
bound
sub
sti
test
sub
mov
jg
mov
addr16
loope
aam
std
les
pop
cmovs
andb
sbb
popa
fiadds
ja
pop
clc
shll
xor
mov
push
iret
sub
scas
sub
xchg
stc
cld
out
inc
jp
fwait
dec
ret
aas
jecxz
sub
out
sub
dec
mov
push
mov
add
or
mov
mov
push
mov
pusha
pushf
arpl
in
adc
xor
ret
adc
and
lea
push
out
mov
mov
fs
push
bound
pushf
sub
es
lar
enter
lds
in
mov
int
dec
fcomps
rcrb
cltd
jecxz
sub
add
mov
inc
arpl
mov
xchg
sbb
jns
jp
jno
push
clc
sbb
xlat
sarl
inc
xchg
mov
mov
testl
jle
out
mov
pop
cmpsl
mov
jno
in
ss
enter
adc
in
mov
mov
lea
pop
jne
hlt
loop
out
mov
jnp
dec
sbb
push
and
mov
aam
dec
stos
fnstenv
lret
test
daa
fisubrl
adc
xor
fucom
cmp
pop
jb
ret
fs
aaa
gs
xchg
sub
or
cmp
mov
loopne
jmp
fs
insl
jae
jo
and
hlt
and
fisubrl
pop
test
pop
notb
jnp
mov
fisttps
mov
sub
xchg
repz
sub
jecxz
sbb
inc
mov
push
test
cmp
inc
pop
mov
test
or
xor
decl
xor
ja
shll
or
out
xor
add
ss
dec
adc
mov
xor
sarl
push
mov
mov
test
cmp
insl
push
icebp
insl
dec
insl
mov
cwtl
pop
xchg
in
push
sbbl
je
repnz
pop
jle
aam
imul
inc
inc
sub
pop
push
aam
aaa
pushf
adc
ds
imul
pop
cmp
mov
jns
fisubs
xchg
clc
mulb
and
adc
inc
mov
ds
push
mov
sbb
push
lahf
pop
sbb
cmp
xor
fisubl
add
call
mov
daa
ret
xchg
sahf
inc
push
clc
mov
mov
sbb
fs
mov
rcll
shll
dec
mov
dec
adc
cld
xor
int3
popf
cmp
test
bound
das
movsl
fwait
mov
pop
sahf
sti
sbb
pop
cmc
repnz
xchg
sbb
fildll
mov
das
icebp
cmpsb
jle
andl
icebp
fs
aaa
push
bound
xchg
push
or
xchg
call
rcr
outsl
xor
push
je
mov
mov
mov
test
pop
pushf
inc
and
movsb
jecxz
sbb
pop
mov
ret
fsubl
addr16
repnz
ficoms
lcall
xor
mov
andb
aas
xchg
mov
enter
mov
fs
jp
test
fimull
cli
iret
enter
sub
mov
fwait
xlat
sarl
or
in
sbb
jae
mov
adc
int
mov
push
jp
sti
inc
lods
mov
mov
pusha
pop
roll
rcrl
fcomps
lock
repnz
cmp
ret
das
lea
cld
ret
scas
add
mov
nop
adc
xor
imul
in
sbb
outsb
dec
in
mov
jecxz
adc
push
enter
mov
xchg
adc
sbb
outsl
gs
sbb
dec
sub
add
insl
inc
test
jg
add
test
test
rorb
sbb
popa
push
xchg
push
inc
sub
mov
mov
cs
adc
jge
mov
cmp
es
cmp
cmpsl
stos
push
pop
loopne
and
rolb
jle
jae
add
out
test
js
add
inc
xor
mov
push
mov
and
out
mov
push
push
adc
int3
mov
or
xchg
fwait
add
xlat
push
xlat
cmp
xchg
hlt
adc
and
sti
sbb
inc
pop
js
xchg
ljmp
xlat
aas
cltd
arpl
iret
mov
pop
xchg
loop
and
mov
or
cmpsl
and
jns
cwtl
imulb
dec
xlat
rcr
jbe
int3
xchg
sbb
fwait
andb
add
aaa
cmp
inc
loope
dec
in
testl
lahf
xor
sbb
pop
cmpsb
ja
inc
outsl
cmp
test
orb
jecxz
mov
push
sub
sub
adc
push
add
bound
insb
insb
mov
test
cmpb
inc
sub
pop
add
bound
movsl
mov
inc
out
or
mov
xor
rcrl
sub
cltd
jae
in
movsl
jl
mov
imul
jecxz
xchg
fcoms
adc
ret
movsb
xchg
dec
push
fimull
push
inc
sti
pushf
ret
pop
mov
pushl
stos
xlat
js
repnz
xor
cmp
sub
and
cmpsl
stos
dec
pop
mov
push
or
mov
mov
jo
cmp
fcompl
pushf
cld
push
insl
push
mov
cmp
xor
popa
adc
jecxz
aaa
ss
lock
ret
cmp
cmpsl
aad
ss
push
add
fwait
or
pop
shll
cs
mov
sbb
xchg
lret
xor
jo
dec
test
add
jb
sub
pop
sub
lea
mov
movsl
jmp
sub
bound
adc
xchg
mov
mov
cmp
es
subb
jecxz
mov
movsl
nop
insl
fistpl
shlb
aas
mov
mov
out
loopne
and
dec
outsl
pusha
push
mov
cmp
mov
jmp
pop
mov
add
xor
adc
lret
jae
out
outsl
cmp
les
gs
adc
sbb
push
dec
mov
and
dec
jo
sub
mov
lock
sub
jl
add
stc
les
and
mov
push
sub
adc
icebp
mov
insl
aaa
push
insb
push
sahf
icebp
int3
xchg
and
push
and
sub
into
mov
xchg
addr16
and
imul
xor
cmp
loop
loopne
pop
push
shr
fcmove
dec
or
add
js
lea
test
repnz
repnz
cld
and
fnsave
xlat
lock
add
fwait
es
jg
pop
push
xchg
rol
or
cltd
cs
and
or
stos
sbb
jmp
sysexit
mov
cmp
fimull
xlat
cltd
mov
jbe
ljmp
jmp
inc
rol
mov
fldenv
pushf
lcall
add
push
lcall
adc
repnz
adc
out
mov
adc
cmp
sahf
pop
xor
roll
jmp
fldenv
jge
out
lahf
jae
es
test
bound
dec
movsl
inc
and
cmc
sti
xor
shlb
out
lods
std
fs
or
movsb
insb
aam
pop
jae
dec
arpl
pop
andl
inc
std
test
inc
lret
jns
dec
imul
pop
insb
iret
in
jge
xlat
add
cmp
add
in
xchg
push
mov
fsts
jbe
xchg
in
ret
inc
cmp
repz
repz
insl
rorl
icebp
lods
or
cs
mov
jle
mov
mov
add
inc
popa
xor
pop
mov
es
int
mov
fdivp
cmpsl
mov
popa
mov
jg
mov
not
lods
inc
sahf
jecxz
fcom
jge
and
pop
ljmp
out
mov
scas
sbb
call
les
dec
dec
mov
pop
fnstsw
test
cwtl
ret
jmp
loopne
ds
insb
jp
mov
and
test
cmpsb
pop
push
cmc
outsl
jbe
and
cmpsl
dec
es
cmp
icebp
icebp
into
loopne
or
jnp
fldenv
shl
and
xchg
push
pop
repnz
call
pop
inc
jp
psubusw
andl
cli
fistps
cltd
xor
mov
push
incb
pcmpeqw
sbb
test
sti
mov
fwait
sub
in
push
stos
rorb
mov
cmpsb
mov
jo
fbstp
push
es
hlt
jns
icebp
mov
iret
popf
xlat
int3
mov
mov
or
ljmp
shrl
mov
xchg
mov
xchg
iret
or
mov
scas
adc
int
push
or
pop
fnsave
sub
sbb
test
mov
loopne
push
into
xchg
or
fwait
jmp
push
adc
das
mov
lods
in
sbb
jo
fisttps
mov
sub
cmp
adc
roll
add
adc
fst
ret
nop
jp
sbb
add
push
iret
imul
push
stc
cmp
lods
out
dec
add
sahf
leave
lods
mov
arpl
pop
andl
out
xor
lahf
adc
push
data16
in
mov
mov
test
aad
repz
out
mov
test
es
cmpl
mov
pushf
xchg
or
rcr
daa
jecxz
test
cmpsl
adc
sub
jnp
out
xorb
adc
cmpsl
adc
pop
insl
cmpl
mov
ljmp
roll
lods
insb
push
popa
hlt
insb
push
add
jg
out
into
aam
stos
pop
cmp
xchg
jb
add
loop
call
cltd
lahf
mov
jg
aas
pop
inc
fnstsw
fcoms
add
sbb
jno
inc
add
push
test
gs
jl
pop
xchg
jo
or
shlb
xchg
cmp
aas
pop
adc
adc
stc
jl
pushl
pop
and
push
aaa
jl
out
lcall
in
icebp
pop
jl
std
and
and
push
xor
jns
in
jno
imul
pop
add
mov
rorb
mov
out
in
cmp
jmp
push
incb
rclb
lods
pop
or
mov
rolb
jl
jp
adc
dec
je
push
imul
or
and
pop
hlt
mov
dec
push
pop
popf
push
aad
mov
popa
clc
ret
enter
jecxz
outsb
cmpb
mov
mov
pop
mov
pusha
pop
or
into
dec
add
movsb
sub
cmp
jnp
mov
inc
loop
cmc
dec
shll
pop
adc
jp
cltd
xor
push
int
leave
stc
decl
stos
sbb
aam
adc
pushf
cs
push
push
ja
push
rorl
mov
cmp
add
dec
lahf
and
push
xor
xchg
js
add
mov
sti
jg
leave
clc
adcl
andb
je
push
pop
test
scas
push
jecxz
out
test
ds
mov
mov
or
jle
push
data16
jns
and
cmp
ret
cwtl
cmp
imul
scas
repz
jge
jle
xchg
daa
out
insb
jg
jo
enter
mov
inc
sbbb
leave
sub
inc
sbb
aad
lds
sbb
sub
cmp
sti
fistps
loopne
adcb
adc
jg
aad
pushf
dec
jge
mov
mov
jmp
testb
hlt
sahf
enter
or
in
cmpsb
push
push
adc
mov
sbb
lods
in
xor
inc
xchg
cli
xchg
inc
int
imul
mov
fs
scas
aad
aas
mov
es
inc
insl
add
mov
mov
lretw
incl
int3
popf
ljmp
mov
aam
jp
jne
cmp
stos
adc
scas
loopne
movsb
divps
dec
addb
sahf
pop
push
loope
add
clc
das
dec
hlt
popf
test
out
repnz
vmwrite
mov
dec
call
push
testl
push
mov
pop
setge
pop
mov
in
pop
or
pop
pop
stos
aam
cli
lock
jle
rolb
xlat
sbb
ret
int
and
arpl
popa
aaa
sub
cmpsb
sub
inc
inc
ror
divb
jnp
pop
inc
sti
cmpsl
stc
out
stos
ret
lret
test
roll
addr16
addb
das
in
iret
mov
mov
scas
sti
fs
sahf
sub
push
scas
dec
icebp
les
mov
les
and
push
add
mov
sbb
ss
pushf
mov
xchg
jmp
xor
jle
nop
mov
sbb
mov
jecxz
sbb
inc
ficoml
int3
mov
and
std
ficomps
mov
test
add
sbb
xlat
adc
mov
xchg
xor
pop
push
stos
les
subl
dec
mov
xor
xchg
jne
orl
out
stc
movsb
inc
test
pop
out
mov
subl
movsbl
sub
and
clc
and
sbb
lods
or
mov
xor
adc
repz
ljmp
fsubrl
push
xchg
out
icebp
inc
rol
inc
push
scas
mov
fldt
js
xchg
out
lret
sub
jnp
ret
add
das
call
ss
addr16
movsl
inc
jo
loop
and
call
cmp
outsb
ret
call
sbb
data16
les
in
mov
testl
push
xor
mov
out
sti
pop
sub
lods
mov
data16
jne
test
insb
or
mov
dec
popa
cmc
dec
mov
push
out
pop
stos
push
stos
in
pop
clc
aad
imul
mov
xchg
jns
cmp
andl
in
mov
pop
call
xorl
sbb
push
xorl
stos
addr16
push
mov
call
dec
dec
pop
mov
mov
sub
sahf
mov
jbe
push
test
jg
xor
out
out
jnp
pop
cmp
inc
pop
testl
sbb
xlat
in
jo
push
mov
xor
xchg
addl
cmpsl
mov
in
xchg
cmp
mov
orb
inc
insb
in
into
popa
adc
xchg
out
or
popf
in
sub
dec
jp
mov
mov
movsl
aaa
and
or
add
ficoml
push
insl
cmp
stos
jmp
xor
mov
shll
insl
pop
dec
pop
idiv
adc
mov
adc
dec
xchg
mov
push
inc
push
push
outsl
push
xor
aaa
repz
pop
loopne
xchg
cli
repz
mov
xchg
cmp
adc
hlt
jle
dec
mov
lcall
lcall
xor
aam
std
ljmp
or
pop
scas
mov
jno
mov
sub
stc
in
xchg
in
jl
cmp
mov
iret
icebp
mov
cwtl
xchg
scas
mov
loopne
dec
ljmp
add
mov
xor
fstpl
push
addr16
mov
pop
fwait
lds
jp
scas
add
inc
inc
or
add
inc
inc
jnp
mov
jno
jmp
sub
mov
push
adc
sbb
mov
inc
cmpb
pop
push
fisubs
cli
imul
bound
mov
leave
dec
dec
out
or
cmp
test
sbb
pop
xlat
xorl
jb
push
mov
or
xchg
rorl
cmp
cmpsb
aaa
sbb
loopne
testb
or
xchg
add
repnz
adc
inc
push
mov
add
dec
xor
or
jnp
iretw
incb
jecxz
and
imul
sbb
lds
or
lds
shll
out
xchg
int3
inc
stos
cltd
adc
push
stos
fucom
inc
lods
inc
mov
in
adc
out
iret
jge
js
mov
imul
cmp
icebp
in
xor
adc
fwait
ljmp
aas
pop
movsl
pushf
hlt
adc
idivl
out
test
push
clc
mov
hlt
insb
mov
add
stos
push
dec
insl
pop
xchg
test
mov
movsl
inc
stos
popa
jecxz
sbb
out
out
outsl
or
in
mov
mov
inc
ss
dec
add
loop
mov
outsl
sub
test
ss
clc
jo
xor
orb
jle
nop
mov
and
xor
jmp
mov
cmpsb
cmp
mul
aas
jg
insb
imul
outsl
jb
jae
fiadds
inc
bound
jge
add
imul
xor
loop
fld
and
test
stc
adc
out
cmc
pushf
mov
adc
and
mov
push
xchg
bswap
sbb
pop
scas
pop
movsl
rclb
out
mov
addr16
icebp
hlt
jecxz
sub
cmp
sub
repnz
sub
rorb
mov
negl
test
jae
and
jecxz
gs
jg
std
dec
sbb
pop
out
popa
stos
mov
sub
cmpsb
push
dec
insb
mov
mov
test
jecxz
pop
or
dec
or
jb
subb
mov
stos
inc
je
dec
sbb
push
addl
mov
fnstenv
jbe
pop
adc
adc
inc
jns
push
movsl
in
push
aaa
jne
movsb
imul
mov
clc
push
roll
aas
ds
add
or
pop
jnp
push
mov
pop
mov
push
adc
pop
add
aas
xchg
inc
sti
enter
push
ja
lcall
mov
cmp
dec
dec
cmc
hlt
and
cmpsb
cmpsl
and
mov
sbb
movsl
sbb
xchg
cmp
fwait
cltd
into
xchg
rclb
jae
leave
inc
addb
xor
push
aad
add
mov
sti
das
lds
adc
test
fidivs
push
xchg
les
add
mov
jae
mov
or
pushf
movsl
loopne
sub
sbb
xor
out
in
jo
mov
xlat
pop
ja
cmp
in
jns
or
pusha
daa
iret
fnsave
sub
popa
data16
les
push
aaa
xchg
or
pop
cld
and
pop
xchg
mov
sti
sub
addr16
test
test
inc
and
lea
xchg
jmp
cmp
dec
mov
and
push
mov
push
xor
testb
inc
adc
test
mov
and
aam
scas
test
sbb
mov
leave
adc
jnp
jo
into
xor
icebp
jb
rdtsc
jns
cmc
in
out
push
sub
icebp
scas
cmovs
cmpb
test
dec
mov
test
jne
flds
daa
ret
jecxz
aam
cli
jecxz
sbb
mov
sbb
je
jg
sahf
jmp
mov
lock
int3
add
ss
push
ficompl
mov
jns
inc
cmp
sti
cmp
es
mov
mov
push
mov
test
dec
jge
mov
test
push
in
lock
add
dec
xchg
inc
sarl
aas
imul
push
cwtl
push
mov
add
jnp
sti
sbb
sbb
mov
pop
lea
push
xor
sub
arpl
shl
adc
sahf
call
sbb
loopne
dec
mov
ljmp
lret
cltd
mov
xor
gs
loop
orl
mov
sbb
and
jecxz
repz
cmc
adc
and
xor
arpl
xchg
inc
mov
xor
repz
cmc
adc
and
xor
arpl
xchg
inc
mov
xor
repz
cmc
adc
and
xor
bound
xchg
inc
mov
xor
repz
cmc
mov
ror
cmp
mov
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
outsb
popa
and
adc
add
imul
je
sub
icebp
loope
icebp
xchg
shll
add
jno
inc
add
je
xor
adc
rcll
mov
les
or
sbb
insl
and
dec
add
mov
scas
lods
clc
mov
rcr
repz
xchg
inc
popa
and
pop
and
cwtl
lock
std
pop
movsb
pop
shrl
cmpsb
sbb
or
pop
xor
test
scas
mov
fwait
into
movsb
or
pop
xchg
imul
rorb
mov
cmp
and
pop
mov
cmp
inc
push
pop
nop
mov
pop
pinsrw
adc
mov
add
hlt
inc
popl
and
mov
ror
in
aas
fsubrs
jno
mov
xchg
jg
mov
cld
fisttpl
and
movsb
into
inc
push
inc
mov
cmp
in
pop
cmpb
in
mov
mov
ljmp
dec
push
pop
loopne
lds
inc
xor
les
adc
adc
and
push
add
lods
loope
icebp
mov
popf
shr
mov
fst
inc
or
mov
adc
jo
sub
lea
cwtl
int3
or
add
cmp
push
push
add
cmp
adc
xchg
icebp
mov
movsb
hlt
lcall
push
add
or
xor
adc
test
hlt
mov
les
adc
add
je
xor
adc
test
hlt
mov
les
dec
mov
sbbb
cli
xchg
cwtl
dec
rcrb
mov
rcrl
xor
sub
filds
cmp
shlb
mov
and
sbb
test
addr16
push
sbb
add
divb
jmp
xor
stos
jne
mov
push
mov
xchg
rolb
inc
mov
sub
lock
inc
jnp
xchg
imul
aam
xchg
andb
pushf
or
jecxz
packsswb
cld
loopne
pop
inc
insl
mov
mov
hlt
test
fnstsw
sub
inc
insb
push
je
aas
or
lods
xchg
jecxz
jo
add
cmc
adc
test
push
ret
lods
mov
aad
mov
and
sub
sahf
imul
or
cs
addr16
sahf
jo
mov
pop
lea
xlat
les
pushf
pop
mov
insl
cwtl
sub
inc
cwtl
sbb
scas
cmp
iret
xlat
push
xor
push
mov
std
jne
xchg
std
or
push
ret
pop
mov
push
push
subb
shll
cmc
lahf
lds
cmp
xchg
imul
sbb
jne
adc
mov
and
add
rcrl
stc
mov
lahf
cs
cwtl
ds
inc
loop
dec
js
lods
out
imul
cmp
mov
jmp
je
xor
enter
pop
mov
jecxz
xor
pushf
adc
mov
les
repnz
xor
sti
xchg
loopne
inc
lods
cmp
or
ds
icebp
jb
jb
mov
mov
es
icebp
mov
pop
inc
rcrb
or
out
xchg
stc
dec
sub
inc
pop
cwtl
out
sub
jo
pop
bound
push
cmp
dec
and
add
mov
pop
stos
out
mov
shrl
mov
xchg
mov
pusha
je
mov
jmp
mov
cmc
inc
pop
xlat
cwtl
mov
jecxz
dec
xlat
add
cltd
stos
sbb
movsb
cmp
cld
out
xor
je
dec
stos
add
cli
aad
in
sbb
inc
popf
mov
out
xchg
imul
mov
cs
mov
mov
sub
fstl
stos
nop
outsl
test
pushf
cmpsl
div
mov
rorb
and
and
fists
mov
inc
pushf
jae
fldl
push
push
loop
sbb
cltd
xchg
ljmp
adc
push
cmp
jbe
je
lock
lret
hlt
scas
cmpsb
dec
sbb
inc
popa
inc
in
faddl
jp
mov
inc
cltd
fstps
add
adc
pop
mov
push
js
mov
sub
jno
in
pop
iret
pop
mov
pop
pop
jb
aas
scas
mov
fisubrl
fdivrp
out
lret
jnp
sub
sahf
fwait
pop
jmp
and
cli
mov
movnti
add
roll
xchg
aas
mov
or
flds
sbb
jecxz
enter
dec
jecxz
leave
lret
insb
sti
xchg
leave
jb
xor
fidivs
jns
xchg
inc
sub
fiaddl
icebp
pusha
and
push
fsts
inc
cld
insl
out
pop
popf
test
ja
add
out
test
inc
shll
dec
jp
mov
xor
ret
dec
dec
es
and
inc
scas
in
cmp
mov
aam
cmp
test
rolb
lret
sbbl
lahf
lock
add
sbb
push
mov
scas
arpl
rorb
loop
mov
daa
pop
sbb
xor
mov
adc
rcrl
repnz
mov
jns
jge
mov
jl
lock
inc
sar
jnp
cmp
sub
and
pop
shll
leave
loop
sti
cmp
cs
push
fldcw
insl
add
xchg
sbb
fimull
repz
in
mov
dec
xchg
sahf
mov
jb
sbb
sbb
adc
in
out
repnz
in
bound
xchg
out
inc
mov
add
fdiv
jns
sbb
scas
popfw
cmpsl
inc
out
xor
mulb
add
push
pop
ficompl
sbb
mov
loope
cltd
arpl
add
push
and
xchg
jne
mov
xchg
outsl
push
popa
ror
cltd
xchg
mov
xchg
push
rorb
jae
decl
and
and
test
mov
jb
inc
inc
stc
push
mov
ds
int
nop
sahf
or
sbbl
push
pop
into
push
push
ret
cmp
mov
push
xchg
sbb
in
insb
push
xor
jle
mov
test
outsb
mov
and
adc
enter
pop
mov
das
pusha
pushf
xchg
sarl
andl
dec
popf
cli
pinsrw
inc
or
or
jno
add
out
shll
fwait
add
mulb
mov
sti
inc
jge
xor
add
inc
outsb
xchg
shl
mov
push
dec
icebp
and
push
push
jns
ljmp
mov
fldenv
jns
leave
lcall
push
in
lahf
sbb
mov
mov
sbb
xchg
cmpsb
and
sbb
xor
dec
xchg
test
fstl
xchg
adc
push
popl
pushf
iret
jne
and
pop
sbbb
mov
out
fdivrs
adc
or
cmp
maxps
inc
jo
sbb
popa
mov
call
xchg
inc
cmove
lcall
ljmp
pop
scas
fbld
pop
mov
mov
psrlw
mov
lea
mov
cmp
in
lds
out
inc
mov
inc
aad
into
mov
mov
xchg
jge
pop
pop
das
jecxz
lods
addr16
icebp
cmp
imul
jp
dec
adc
sbb
and
push
test
les
push
xor
daa
int3
loope
sahf
pop
adc
sbb
in
ret
addr16
fcmovu
push
jnp
scas
es
xor
ja
arpl
scas
push
push
enter
insb
fidivrs
cli
xchg
fdivl
mov
aaa
movsl
xchg
loopne
jg
sbb
cltd
pop
mov
insb
cmp
lods
and
js
inc
orl
enter
mov
shl
lret
jbe
pop
lods
push
sub
xlat
jle
test
fsubl
dec
pop
andb
dec
sbb
and
hlt
mov
popa
inc
and
ret
test
repnz
lea
or
sub
mov
push
lock
sbb
cmp
add
sbb
pop
jl
fistps
int3
jnp
inc
idiv
call
push
outsl
das
cmp
or
mov
lcall
or
jg
or
pushf
push
sbb
shlb
movsb
xor
leave
int
jne
int3
jle
in
cmp
test
imul
and
and
or
in
out
xchg
nop
popf
push
movsb
test
mov
or
stos
mov
es
insl
inc
lret
cmp
mov
mov
les
lahf
sar
repz
sub
mov
sub
dec
fsub
add
mov
mov
testb
mov
cmp
pop
daa
push
imul
jg
daa
imul
jno
loop
and
and
mov
xchg
insl
and
jnp
mov
sbb
dec
pop
add
ret
dec
adc
dec
cmpb
insl
sub
adc
push
movsb
in
out
mov
lock
dec
les
mov
insb
mov
std
push
mov
lret
sub
mov
outsl
or
shlb
pushf
std
add
add
mov
mov
daa
clc
mov
into
xor
sahf
fwait
adc
pusha
push
mov
pop
inc
cld
dec
push
outsl
addr16
gs
into
data16
insl
loop
cmp
out
or
in
pusha
inc
push
and
icebp
sub
aas
sbb
push
add
jno
and
cmpsb
cli
mov
mov
fadds
jns
dec
out
pop
mov
dec
scas
mov
sub
xchg
pop
in
and
aam
fisubrs
mov
enter
jecxz
lock
inc
mov
je
data16
dec
adc
pop
shrb
repnz
dec
add
and
cmp
cmp
cli
cmp
mov
mov
aam
and
out
mov
frstor
lds
fldenv
fildl
ja
push
jmp
gs
add
xor
push
xchg
push
sub
pop
stos
jg
sub
jmp
or
jb
movntq
out
xor
loop
xor
push
sti
cmp
push
arpl
loope
data16
mov
dec
push
fld
mov
mov
fadds
mov
or
iret
daa
pop
lds
or
cltd
lahf
push
cmpsb
xchg
repz
dec
scas
insb
pop
xchg
pop
pushf
jne
es
mov
scas
xchg
test
mov
repnz
pop
push
pop
cmc
clc
xchg
inc
loopne
push
jns
sbb
jbe
addb
mov
xor
sub
jle
jnp
andb
mov
cmp
jns
in
imulb
jp
rorl
fstps
dec
std
push
jns
xchg
push
or
xchg
xchg
ja
xchg
mov
stc
cltd
lods
add
cmp
jp
loopne
rclb
add
out
push
and
cmpsl
faddp
scas
jnp
xchg
cli
loope
mov
pushf
push
mov
add
or
ficoms
add
mov
push
push
xchg
dec
mov
stos
popa
mov
mov
movsb
lds
shrl
sbb
mov
ret
sbb
mov
jne
dec
lds
ret
es
push
xchg
mov
dec
icebp
inc
imul
push
cmpsb
adc
rorb
out
sub
inc
insl
jmp
rclb
dec
xchg
cltd
inc
cmp
ret
and
dec
nop
ret
sbbl
cmp
bound
push
inc
outsl
add
dec
idivb
cwtl
pop
test
cs
cmpsb
dec
enter
mov
ss
in
insb
mov
aad
dec
xchg
mov
lcall
jecxz
sub
incl
dec
int3
jae
lcall
xchg
mov
loope
in
outsl
xor
shl
xchg
lcall
fbstp
and
out
test
inc
stc
dec
test
jns
cmp
loopne
fwait
pusha
aad
push
mov
push
ret
popf
fldenv
mov
sub
enter
inc
push
insl
cmp
cmp
push
das
pop
or
xor
loope
clc
xor
js
icebp
xor
rcl
inc
scas
add
gs
test
cmp
test
rcrl
cmp
inc
mov
inc
loopne
data16
sbb
stos
add
sub
add
or
add
and
sahf
sbb
push
lock
mov
xlat
pop
hlt
dec
xor
dec
jno
jge
fldenv
les
lcall
mov
stos
sub
dec
mov
push
mov
fs
add
insl
dec
test
fmuls
push
xor
push
sbb
imul
mov
aaa
out
ljmp
pop
jae
cs
jecxz
fcoms
inc
or
xor
cmp
adc
mov
daa
fisttpll
movsb
push
das
xor
ds
mov
push
repnz
mov
sbb
lds
or
das
es
xchg
jp
xor
adc
mov
jl
and
jle
sub
push
mov
imul
mov
outsl
pop
sub
ret
mov
insl
xchg
ret
iret
mov
enter
push
lods
mov
scas
mov
mov
and
add
push
iret
adc
adc
add
lods
jnp
jge
pop
popf
enter
shrb
or
dec
sub
adc
out
push
sub
lods
mov
insl
orb
loopne
lcall
cwtl
cwtl
call
mov
or
mov
mov
adc
test
push
add
pop
mov
xchg
pop
xchg
les
or
xor
aas
cli
stc
mov
ret
mov
sub
push
nop
mov
in
stos
inc
das
cmp
cwtl
jle
rcll
rcrb
xacquire
stc
xor
lods
push
cmc
inc
aaa
cmpsb
jp
rorl
call
xor
cli
lahf
int3
sbb
inc
cmp
push
cmp
mov
mov
pop
adc
mov
inc
fwait
cmp
jge
push
jns
mov
pop
sbb
xor
loope
movl
fs
push
scas
test
and
inc
push
in
jbe
push
incl
sub
js
sbb
jne
dec
or
aaa
fnstcw
lret
pushl
sti
inc
and
xchg
jg
cmpsl
cmp
fs
aam
fcoms
popa
lods
push
or
mov
xor
movsl
subl
shlb
add
test
cmpsl
call
inc
repz
xor
stc
mov
xor
jbe
adc
sbb
cmp
fsubl
add
or
push
adc
aad
leave
aas
adc
jo
push
movsb
cli
aam
or
cmpsb
in
mov
or
out
addr16
shl
orb
sub
mov
push
adc
adc
imul
cmpsl
es
xor
aaa
jnp
mov
ja
icebp
cmp
jmp
std
pop
sbb
daa
cs
nop
sbb
add
jne
rcl
mov
rcrl
push
shl
or
enter
test
fwait
lds
pop
fdivs
ret
mov
jmp
pop
cmpsb
in
outsb
movsl
mov
leave
jne
mov
sub
in
add
cmpsb
push
fistpl
mov
and
jp
and
push
jns
movsl
xchg
or
imul
push
lock
enter
mov
rep
js
or
push
push
jno
sbb
aas
lcall
cmpsl
fidivl
xchg
clc
xor
sbbl
pusha
ficomps
inc
rclb
cmp
int3
dec
xchg
cs
xor
cmp
mov
sub
mov
fadd
mov
xor
jae
or
jnp
xor
mov
xchg
add
sbb
mov
push
mov
xor
mov
jge
dec
lods
inc
pop
fsts
pop
loop
adc
shld
sub
xchg
and
stc
in
or
out
xorb
cli
outsl
mov
movsb
ja
sub
inc
lods
adc
outsl
add
or
adc
shll
mov
loope,pt
sub
and
movsb
mov
dec
jnp
mov
and
clc
sbb
imul
xchg
push
inc
out
jb
inc
push
jp
mov
mov
das
pusha
shlb
dec
shrb
jmp
enter
aaa
dec
push
fcomps
sbb
push
xlat
stc
jno
sar
push
out
push
adc
das
stos
popf
rorb
das
mov
stc
leave
out
pop
jecxz
sbb
jge
outsl
jns
dec
loopne
scas
rorb
sbbl
xchg
mov
mov
inc
notl
push
cmp
mov
add
sub
xchg
mov
mov
xchg
dec
sbb
push
jae
fisttps
add
pop
push
cmpsb
test
aad
mov
imul
add
mov
mov
push
xchg
mov
std
into
hlt
je
inc
out
lods
xchg
and
dec
push
cmc
mov
sub
lods
adc
push
arpl
aad
into
cltd
in
mov
dec
add
mov
and
daa
mov
sub
mov
or
shrl
jbe
dec
lods
mov
xor
inc
xchg
push
pop
insb
out
jb
xor
out
repz
and
int
jge
sub
jp
push
sub
clc
mov
add
sbb
mov
adc
xor
mov
clc
scas
fmuls
call
xlat
loope
loop
data16
and
clc
xchg
mov
push
sbb
pop
mov
jp
cltd
cmpsb
ret
aam
aad
cmpsl
adc
neg
mov
jg
inc
mov
popa
das
and
int3
faddl
sbb
sub
mov
cmp
mov
inc
mov
sub
and
cli
jmp
cwtl
cmpsl
fs
or
cmp
aad
xor
scas
enter
mov
push
std
xor
stos
fldenv
mov
push
dec
sub
dec
adc
mov
das
or
test
dec
mov
loop
in
mov
sarl
icebp
mov
enter
sbb
and
fs
inc
lret
add
lahf
xor
dec
cwtl
and
popf
xor
dec
pop
mov
aaa
or
xor
inc
outsb
or
insb
sahf
sbb
js
xor
sbb
fcmovu
sbb
mov
or
sub
mov
sbbl
push
ret
test
xor
bound
xchg
pop
cmp
add
cmp
push
divl
mov
lds
dec
in
xchg
lret
pop
cmp
sbb
stos
adcb
mov
mov
mov
mov
inc
push
cld
sub
pop
fimuls
lds
aad
push
mov
pop
sub
aaa
ror
and
int
inc
inc
ja
fldt
mov
loopne
add
fisubrs
sbb
jge
jmp
movsl
xor
jo
popa
ljmp
in
adc
xchg
jp
es
sbb
push
rolb
dec
jmp
xchg
sub
lcall
pop
call
mov
or
jnp
scas
movsl
mov
cmp
sbb
push
daa
lret
mov
pop
out
jae
lret
pusha
pop
cmp
cwtl
ljmp
cmp
mov
pop
outsl
mov
xchg
stc
fsubrs
cmpsb
sbb
fistpl
mov
mov
sahf
or
cmp
cs
aas
pop
adcl
mov
lea
and
loope
shll
je
xchg
inc
sub
inc
repnz
sbb
in
mov
test
fsts
sbb
cs
mov
jmp
jmp
adc
incl
jle
pusha
jg
jo
jae
lods
out
jge
dec
jl
or
pop
xor
fists
inc
loopne
or
cmp
outsb
daa
mov
cld
out
mov
jnp
scas
leave
cmp
pop
frstor
jmp
pop
cld
pop
mov
push
test
jle
sub
push
xor
lock
push
xchg
cltd
lock
out
mov
mov
xchg
gs
add
push
add
jmp
adc
nop
sub
lret
cld
lods
dec
mov
out
mov
add
push
xchg
loope
and
sti
scas
ja
cmp
fcompl
cld
adc
mov
out
sbb
mov
outsl
dec
pop
mov
ss
ja
movsl
mov
push
je
xchg
scas
std
cmc
jge
shrl
add
push
test
mov
mov
push
pop
jbe
push
ret
jmp
mov
or
imull
mov
stos
shll
add
xor
js
ucomiss
lea
movsl
out
cmp
and
cltd
dec
pop
sub
and
jp
test
lahf
ss
ficompl
push
inc
push
mov
mov
mov
in
dec
mov
pop
loopne
xchg
mov
push
dec
mov
cmpsb
lds
xor
fidivs
jae
mov
shl
stos
cltd
fs
aam
pop
cld
push
push
mov
mov
int
mov
ljmp
jbe
cmp
insl
mov
dec
dec
nop
in
push
out
jbe
cmp
out
mov
test
cwtl
aas
cwtl
lock
lret
inc
aad
mov
in
lahf
and
sub
add
cmpsb
sbbb
xchg
int3
movsl
shl
dec
sub
push
jns
xchg
inc
cltd
xchg
inc
mov
fsubrp
pop
mov
mov
dec
cmp
cmp
repz
repnz
sti
pop
loope
es
pop
cmp
cltd
jae
inc
mov
mov
jno
and
mov
mov
jp
or
in
in
lret
outsb
incb
and
mov
xchg
and
jb
js
mov
test
adc
xorl
jmp
xchg
xlat
mov
mov
cmp
fbstp
inc
loope,pn
add
movl
ret
popa
js
int3
iret
test
jle
jl
sbb
lret
push
sbb
jo
inc
leave
fwait
sbb
pop
jg
jb
jmp
stc
pushf
cmpsb
cld
mov
xchg
dec
lea
popf
dec
and
sub
in
mov
adc
jns
outsl
aas
push
mov
sbb
mov
push
dec
xor
test
add
aaa
mov
dec
and
fistps
and
dec
idiv
sahf
or
shl
jmp
sbb
mov
jne
mov
dec
fadds
xorb
fiaddl
in
das
das
xor
mov
hlt
cmpsl
mov
jge
jb
mov
std
sub
outsl
inc
lds
and
leave
es
cmp
subl
cmc
test
sbb
sub
fistl
push
insb
aaa
loope
mov
add
frstor
cli
lret
sbb
pushf
mov
cli
cmpsb
shrl
popa
cmp
aad
and
or
ret
lock
jecxz
jne,pn
out
test
sbb
adc
cmp
lock
mov
mov
fs
iret
mov
add
mov
jnp
stc
cltd
add
cs
cmc
nop
push
rorb
dec
pushf
mov
shlb
sbb
insl
xlat
fwait
dec
inc
push
cmp
in
jl
vpmaxub
fadd
xor
mov
adc
and
dec
out
out
into
bound
repz
in
movsl
std
jne
adc
movsl
scas
cmp
mov
stos
mov
ret
in
popf
icebp
jp
outsb
aam
xchg
ljmp
and
mov
push
inc
fcomp
adc
xchg
pop
hlt
xchg
jnp
push
dec
push
push
sub
cmpsb
pop
arpl
mov
stos
lds
in
cli
mov
lret
pop
jg
insl
scas
cmpsl
mov
cli
gs
scas
xchg
outsl
f2xm1
pop
pushf
mulb
lret
lahf
mov
and
inc
mov
dec
movl
fwait
xor
jnp
jl
or
das
cmpsl
sahf
dec
stos
out
in
mov
mov
dec
inc
xor
pushf
push
sbb
lret
nop
cmp
sbb
xor
sahf
xchg
inc
lret
clc
repz
mov
imul
sub
sbb
popf
push
jno
inc
add
je
xor
adc
test
hlt
mov
les
adc
add
je
xor
adc
test
hlt
mov
les
adc
add
je
xor
adc
test
hlt
mov
cmc
xchg
add
jno
inc
add
je
fs
add
pop
roll
jle
outsb
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
jp
push
pop
dec
xlat
mov
inc
fisubrl
pop
xchg
sti
push
ljmp
daa
test
mov
mov
jp
push
pop
dec
xlat
cmp
or
ljmp
push
mov
pop
mov
arpl
jae
inc
fists
and
or
test
mov
mov
jne
js
stos
add
mov
outsl
sub
fs
jl
adc
push
inc
xchg
push
mov
stos
mov
sti
out
jge
into
testb
js
push
es
xor
ljmp
out
test
pushf
test
sub
pushf
xchg
mov
lret
adc
test
adcb
pop
mov
mov
outsb
test
cmpsl
sub
jno
jmp
out
mov
stos
mov
clc
mov
sub
or
cmp
ret
cli
cli
fwait
sub
fstpt
stos
daa
gs
lcall
aas
mov
lds
add
add
mov
stc
xlat
lcall
out
fimuls
sub
xchg
mov
repnz
ret
dec
mov
sbb
jne
dec
movsl
dec
push
jmp
repnz
or
xor
push
or
push
cmpsl
sub
sbb
pop
movsl
mov
and
aaa
in
pusha
out
arpl
out
divl
mov
sub
cli
addr16
daa
stos
aaa
lcall
negl
dec
xlat
cmp
or
fiaddl
push
mov
pop
mov
jp
inc
in
inc
cmp
push
sub
pop
cmp
aam
into
push
nop
jmp
add
dec
jle
pop
mov
add
push
jns
movl
add
sbb
in
xchg
inc
stos
add
add
jle
fimuls
outsl
pop
dec
cmp
cmc
call
lea
xorb
add
and
mov
pusha
iret
aas
out
fsubs
popa
outsl
test
jmp
or
movsl
dec
jno
cmpsl
les
out
ss
jl
scas
dec
add
dec
adc
ljmp
inc
in
imul
arpl
bound
scas
mov
push
sbb
pop
pop
push
scas
push
in
xchg
and
mov
jmp
add
ljmp
dec
popa
les
add
jp
jae
test
xchg
lahf
call
lret
mov
jns
mov
push
movsl
xchg
mov
xor
loopne
adc
enter
js
aad
push
adc
inc
pop
jo
mov
sub
dec
imul
adc
and
in
jne
out
hlt
scas
hlt
and
imul
mov
sarb
int
jns
aaa
mov
int3
mov
aad
ljmp
xchg
or
xchg
das
sar
xor
jecxz
pop
cwtl
repnz
test
scas
hlt
sbb
fistpll
lods
sub
icebp
arpl
mov
outsb
std
loop
scas
in
popf
cmp
and
mull
and
loope
add
sbb
push
mov
push
in
add
jae
pop
dec
cmp
arpl
lret
mov
cmpsb
nopl
das
mov
mov
pop
cmp
ja
mov
sbb
ffreep
inc
mov
inc
jmp
xchg
inc
mov
mov
jp,pn
or
lods
add
outsl
inc
mov
add
mov
cmpsl
and
inc
lret
dec
data16
shlb
push
jmp
jmp
fstp
lock
and
fcomps
iret
testl
jmp
mov
mov
imul
les
mov
mov
pop
cmp
test
jg
std
push
cs
push
or
adcl
fs
adc
xchg
push
out
jo
lcall
dec
ret
roll
push
in
xchg
cli
pop
je
dec
in
movsl
dec
sbb
mov
shrb
xor
jb
mov
call
push
out
xor
scas
jbe
mov
jl
push
ret
mov
sbb
imul
inc
ficoms
mov
clc
aam
call
pusha
rolb
sbb
dec
adc
arpl
scas
mov
inc
cld
mov
addl
and
insl
aas
dec
pop
jecxz
push
push
inc
popa
movsl
sbb
cltd
and
jge
call
icebp
ret
dec
pusha
movsl
scas
jmp
jns
xor
enter
add
scas
or
popf
into
fdivl
out
out
aam
out
jo
pshufw
or
ljmp
xchg
xchg
fsubrl
stos
xor
jge
mov
into
cltd
insl
leave
inc
loop
mov
xor
iret
lods
sbb
adc
xchg
hlt
add
iret
aam
push
popa
test
inc
xchg
jg
lahf
dec
push
inc
cmpsl
mov
mov
inc
stos
or
mov
pusha
lcall
lods
sbb
out
xchg
insb
mov
clc
mov
cmp
mov
sbb
scas
dec
lds
sub
aas
int
test
and
andl
jbe
push
jno
out
stos
rdtsc
xchg
jle
xchg
xchg
cltd
iret
cmp
inc
sub
jne
jmp
or
mov
mov
lods
negb
lods
clc
sbb
xor
fsub
add
addr16
sbb
in
and
insl
std
or
push
arpl
shll
and
icebp
hlt
scas
in
and
xor
push
lcall
cli
data16
xchg
imul
shlb
mov
jae
and
cmp
fld
push
jae
fdivs
leave
pop
gs
mov
add
aad
sbb
ret
leave
idiv
lods
xchg
ret
arpl
xchg
add
test
inc
lods
push
sub
adc
xchg
lahf
cs
adc
pop
movsb
shll
dec
stos
test
sbb
fst
icebp
jns
mov
adc
movsl
popa
push
outsb
ds
stos
or
push
andl
lods
test
cli
ljmp
adc
orb
notb
jecxz
std
mov
aam
and
xchg
in
loopne
out
xor
enter
scas
mov
sub
fwait
insb
lock
js
fmull
mov
pcmpgtb
lcall
stc
adc
paddsw
mov
sub
out
mov
int
add
movsl
jns
ret
inc
pop
mov
xor
pop
daa
cltd
cld
mov
data16
inc
dec
stos
add
repnz
pusha
or
scas
dec
jbe
cmpsl
sbbb
cs
mov
adc
mov
and
or
or
cltd
mov
sbb
dec
add
inc
imul
dec
fdivrs
std
adc
roll
fcomip
inc
in
cmp
imul
addr16
sub
addr16
addr16
cmp
aaa
jl
aad
repnz
mov
push
lods
push
cmp
pop
xor
xchg
ja
jg
push
leave
lods
cmp
pop
stc
mov
pop
push
pop
in
fidivl
adc
ljmp
push
data16
cmp
xchg
call
push
xchg
aas
mov
loopne
mov
inc
dec
mov
jne
pop
out
lock
mov
inc
mov
enter
xchg
std
cltd
push
cmp
outsl
loop
push
outsl
fwait
mov
call
lds
add
pop
shll
mov
push
jle
loop
or
and
imul
in
inc
sbb
bswap
jno
push
add
cmc
jle
sub
cmc
loope
or
daa
fiadds
xchg
sbb
mov
jle
insl
aas
nopl
add
xchg
cli
xchg
push
lds
pushf
sub
cmp
mov
fnsave
gs
mov
mov
push
lds
pusha
and
icebp
cmpsb
xchg
mov
mov
pop
mov
xor
lahf
sub
add
cltd
popl
mov
pop
xchg
pop
movsb
xor
push
xchg
inc
scas
mov
inc
jns
ljmp
mov
pop
jl
ret
subl
sbb
int
or
adcl
xchg
sbb
jp
ljmp
mov
jbe
scas
add
cmc
pop
inc
pop
sub
mov
xchg
std
xchg
mov
or
or
mov
add
pop
mov
dec
mov
movsl
mov
sbb
stos
movsl
orb
mov
test
movsl
xor
inc
pop
mov
and
cld
test
shr
rorl
outsb
ret
or
add
int3
scas
adc
adc
or
into
cli
mov
mov
iret
rcll
cmpsb
shrl
and
pop
dec
out
js
xchg
negl
sub
lret
push
cmp
mov
mov
xor
pop
cld
xchg
test
add
stc
mov
xchg
mov
imul
or
push
rorb
ficoml
cmpsl
push
ret
sub
push
fcom
adc
and
xchg
push
sbb
pop
xor
mov
pop
shr
pop
leave
jbe
lcall
dec
mov
loopne
and
xor
sub
icebp
add
fists
shll
lret
rclb
sbb
mov
mov
sub
sub
inc
pop
xchg
xor
mov
mov
cmp
dec
xchg
inc
repnz
jo
jns
fsubp
sti
push
bound
loope
loopne
out
inc
or
push
inc
mov
clc
adc
sub
out
inc
sti
pop
out
add
jbe
sti
fdivrp
xlat
cmpsb
xor
xor
pop
inc
or
mov
fsubs
mov
test
mov
pop
sbbb
cmp
fcmove
mov
in
ja
and
adc
out
sub
push
shlb
dec
popa
pop
icebp
pushl
mov
push
mov
mov
mov
in
fs
push
xchg
testb
mov
fsubs
jge
lea
and
or
adc
popa
popa
mov
aas
jl
inc
pop
xchg
fimull
jbe
mov
popa
jns
mov
fistpl
pop
rcl
sub
mov
jnp
xor
xchg
lahf
sahf
mov
push
nop
ja
jle
mov
dec
push
pop
jnp
jle
int3
test
adc
pop
mov
les
imul
es
rorl
test
push
rorb
mov
lds
arpl
inc
rclb
loop
pop
mov
push
std
cs
mov
pusha
adc
ja
push
mov
xor
loop
add
shr
outsl
push
mov
stc
jg
and
daa
dec
cmpsb
inc
out
jb
and
inc
std
xchg
sub
and
jnp
sbb
mov
sub
nop
popa
in
out
les
lea
rcrb
xchg
fildl
sub
xchg
jl
mov
aam
adc
js
jg
js
insb
loopne
fldl
hlt
and
negb
jg
dec
out
aaa
sub
sub
mov
xlat
aas
cmp
xchg
sbb
sub
jns
xchg
xchg
cmp
adc
push
inc
sub
dec
movsb
int
dec
pusha
push
fwait
call
and
leave
shrb
adc
sub
jne
push
mov
in
jae
pop
adc
pop
mov
xchg
jle
mov
sbb
push
out
pop
fildl
mov
jp
sahf
scas
cmpsl
aaa
mov
pop
mov
xchg
pop
roll
insl
sbb
sbb
pop
sarl
movsb
and
imull
aam
cmp
jle
push
push
bound
fmuls
ret
frstor
push
or
jnp
add
negb
movsl
scas
jno
loopne
add
mov
in
lret
cmp
jbe
mov
pushf
mov
jno
ljmp
adc
jno
dec
fcomi
lock
jbe
and
in
notl
sbb
imul
movsl
stos
mov
add
insb
push
inc
jne
movsl
inc
and
push
aas
icebp
dec
pop
iret
bswap
push
add
inc
jb
test
imul
imul
lret
hlt
test
mov
push
push
lods
fisttps
or
add
mov
xchg
sbb
and
mov
aas
jb
ds
out
sub
mov
fldl
and
lret
loope
insb
jbe
jge
pop
pop
nop
jnp
xchg
int
insl
icebp
mov
lods
and
mov
push
sub
sbb
jge
das
xchg
push
pop
out
jns
int
push
jge
mov
and
sub
les
je
test
xor
shrb
jmp
lret
aaa
orl
ret
stc
add
dec
or
jb
jle
cmp
cmpb
jbe
les
dec
push
cmp
jns
xchg
scas
pushf
mov
pop
rorb
into
stc
cli
into
inc
inc
scas
and
xchg
arpl
outsl
mov
add
lret
cmp
jle
cmp
js
pop
cmc
arpl
mov
in
or
jmp
insl
mov
lods
xchg
xchg
cltd
aaa
add
leave
into
negb
push
inc
mov
mov
cmp
mov
mov
aaa
shl
ror
sbb
inc
pusha
sbb
lods
daa
insl
xchg
mov
or
cmp
dec
and
jle
cwtl
fs
mov
rcr
mov
push
ret
call
adc
mov
rorl
xchg
faddl
clc
into
xor
sub
enter
leave
inc
and
stc
cltd
xor
out
mov
rol
jecxz
or
xchg
push
adcb
gs
loop
lret
lds
mov
lea
and
iret
mov
scas
and
fcomps
icebp
dec
add
sbb
bound
ficompl
in
mov
ret
aas
add
scas
in
add
push
cs
add
out
ret
fmull
xchg
ljmp
xchg
mov
lds
fldcw
enter
mov
bound
cmp
pop
orb
testb
pop
mov
sar
pop
inc
or
fs
pop
out
and
push
jl
jo
sbb
xchg
icebp
and
mov
ror
inc
push
stos
sbb
popf
js
das
jo
push
cld
add
and
mov
loop
fisubrs
cmp
add
push
decl
subb
pop
mov
pop
ljmp
adc
cmovae
iret
bound
lea
push
and
popa
fcompl
cld
mov
das
js
imul
leave
mov
mov
mov
sub
decb
pusha
call
movsl
movsb
inc
jnp
mov
mov
and
test
outsb
fsubl
dec
aas
idivb
mov
xchg
in
xor
fisttps
call
mov
push
cmp
cmc
call
sub
test
or
lcall
mov
pop
rcrl
cmc
sarb
clc
fadd
lcall
ffree
lret
popf
cmp
in
add
inc
lahf
xchg
stc
sbb
les
and
fildll
or
out
xor
cli
lds
mov
out
sub
and
jne
xchg
ret
lea
push
mov
shr
test
and
cmpsb
out
jbe
out
and
xor
shl
and
pop
cmpsb
xchg
fistpll
cmovnp
add
pop
sub
push
cmc
mov
mov
int3
xor
nop
enter
inc
movsb
sbb
adc
push
sarb
movsl
movsl
jg
or
inc
mov
mov
pusha
push
test
mov
lcall
icebp
push
or
repz
fsubrs
aas
enter
pop
sub
push
jg
and
xor
insb
icebp
fwait
repnz
pusha
pusha
popa
stos
sbb
dec
fcoml
insl
mov
lds
sarl
inc
pop
mov
add
adc
sti
iret
pop
jbe
push
mov
xchg
fstpl
push
mov
add
mov
aam
gs
dec
arpl
mov
dec
sub
shlb
into
dec
sub
movsl
jno
sarb
mov
mov
mov
xchg
xor
ja
std
inc
call
xor
xchg
mov
fistpl
and
popf
lock
pop
jle
inc
cld
xor
std
inc
aas
sub
add
icebp
notl
push
and
push
data16
push
aas
mov
jl
mov
fcomps
mov
pop
push
fcmovnbe
sbb
jno
push
cmc
jp
cmp
sub
sub
jp
stos
cld
push
and
jb
inc
mov
pusha
cli
mov
dec
push
lret
xchg
ret
pushw
lods
mov
cmp
sub
jmp
mov
jge
jp
out
add
adc
arpl
add
outsl
mov
pop
mov
push
xchg
sar
add
popa
loopne
movsb
loop
leave
sbb
cmp
xchg
stos
jne
pop
xor
cltd
jno
push
jae
mov
ljmp
out
mov
jl
dec
mov
cmpsl
imul
add
jo
inc
dec
stc
out
inc
das
xor
mov
jle
xchg
cltd
jge
xchg
movsb
xchg
mov
leave
jno
js
addr16
test
mov
cmpl
popa
sub
aas
mov
fmull
icebp
mov
cmp
ret
sub
inc
mov
incb
int3
out
out
cmp
int
stos
je
arpl
mov
cmp
or
mov
inc
hlt
gs
cmp
ljmp
mov
mov
fs
inc
pusha
push
mov
into
das
dec
pop
aam
mov
int
mov
fcomi
fwait
inc
call
fnstcw
mov
shll
or
fucomi
in
sbb
xchg
popa
das
sbb
xchg
push
mov
push
or
hlt
les
orl
insl
movsl
push
std
pop
xchg
xor
push
mov
jmp
pusha
ss
repz
mov
sarl
lods
mov
imul
xor
pop
rolb
es
adc
mov
xor
inc
pop
cmp
inc
push
fwait
outsb
pop
mov
inc
je
mov
pusha
xor
leave
push
push
xchg
fstpt
pusha
pop
add
and
xlat
jl
aad
fdiv
jl
fcoms
fsubrp
repnz
test
insb
outsb
lret
pop
enter
sub
in
enter
mov
iret
xchg
leave
movsb
sub
fwait
or
jno
in
aad
pop
clc
or
in
push
aaa
int3
add
js
ficompl
int3
mov
cmp
lods
stos
jle
and
les
das
xlat
xchg
mov
adc
into
xchg
ja
clc
test
and
and
icebp
sbb
push
pop
into
lcall
adc
add
or
cmc
xor
loopne
mov
push
pushl
mov
leave
mov
jecxz
inc
lret
pop
mov
pop
and
orl
push
xchg
subb
fistl
push
cmpsb
inc
cmc
jge
popa
rcrb
das
jne
mov
xor
outsb
test
dec
push
imul
popf
pop
mov
enter
jae
out
rolb
fisubl
jb
mov
sbb
sub
test
mov
jae
jecxz
or
and
shll
loopne
cmp
pop
out
and
and
fsubrl
sub
pop
push
dec
inc
add
xchg
or
cmpsb
in
and
popa
inc
inc
subb
in
sarl
shll
imul
sahf
inc
add
fwait
in
loope
fsubs
jno
mov
push
mov
cmp
adc
dec
addr16
mov
ret
clc
inc
out
fwait
mov
and
out
jecxz
orl
cmpl
mov
out
and
dec
adc
and
in
adc
xor
pop
xchg
or
in
repnz
mov
js
std
push
jae
ret
lret
in
mov
negl
pop
xchg
std
add
mov
mov
and
sbb
add
pop
mov
or
push
jno
dec
cwtl
push
mov
call
loop
push
sub
mov
std
xchg
popa
icebp
aam
push
or
dec
ret
or
lret
add
jns
cmp
inc
fnstcw
jl
adc
jmp
pop
xor
movsb
jge
fadds
out
mov
roll
dec
out
rcl
jno
push
pop
xor
fstpt
adc
fistpl
sub
idiv
lahf
pushf
xor
mov
test
mov
sti
fwait
hlt
js
mov
mov
push
sub
int
inc
jb
sbb
repnz
sarb
aam
adc
cmp
gs
out
cld
cmpsl
insl
add
popf
push
lock
jmp
gs
bound
push
filds
out
cmpsl
jmp
aam
pop
stc
test
sub
int3
iret
outsl
xchg
ljmp
repnz
lahf
movsl
xchg
ret
cmpsb
out
jbe
mov
iret
icebp
ljmp
mov
dec
in
aam
fwait
xchg
je
out
mov
popa
out
xchg
and
mov
push
push
xchg
xchg
push
adc
mov
jp
testl
insb
adc
mov
idivl
mov
leave
test
sub
pop
and
push
cwtl
adc
ret
dec
in
and
add
dec
jle
repz
push
sub
enter
mov
rcrl
out
lret
sub
jno
stc
movsl
in
push
dec
sahf
fldenv
pop
mov
cs
mov
mov
pop
lahf
lds
mov
push
mov
sahf
iret
test
and
jnp
js
test
fldenv
pop
inc
add
ss
repz
mov
scas
xchg
rcl
movsl
xor
in
incl
cmp
loopne
lret
xchg
add
and
jmp
xor
lea
es
aam
test
mov
cmp
js
mov
imul
mov
add
jb
loope
pusha
inc
mov
cmc
movsl
xchg
jb
push
insb
xchg
and
push
sub
adc
xlat
jmp
sbb
inc
shlb
je
push
lcall
pushf
mov
pop
lret
lea
outsl
xor
in
pop
out
inc
es
pushf
push
mov
add
xor
cli
mov
dec
not
cmp
mov
aaa
sub
hlt
fidivrl
icebp
push
or
mov
and
lret
push
je
push
rclb
stos
jo
xor
pop
and
dec
mov
jge
sahf
xchg
into
jno
mov
pop
jne
out
mov
lods
and
jo
sub
mov
popa
mov
sbb
mov
push
mov
adc
pop
xchg
push
rorl
xor
mov
clc
icebp
bnd
cmpsl
ror
sbb
fs
das
mov
and
jge
jno
mov
adcb
adc
adc
mov
shll
pop
outsl
xchg
cmc
pop
paddd
aaa
add
jb
outsb
inc
xor
mov
test
mov
ljmp
or
sbb
mov
in
cmpsl
mov
add
or
sarl
and
out
fsubl
push
pop
aaa
and
pushf
jbe
add
add
fwait
xor
ja
cmp
daa
push
imul
ret
and
mov
fistpl
jbe
cwtd
pop
out
lds
inc
mov
add
sub
xor
mov
push
and
outsl
bound
dec
pop
pop
repnz
out
dec
push
outsb
pop
fs
aaa
mov
cltd
lock
inc
sub
inc
cmp
xchg
add
jl
ds
jno
pop
and
cmp
inc
iret
adc
jno
xchg
pop
or
sbbb
decl
or
xor
sbb
cltd
mov
xchg
std
mov
xchg
pop
cmp
addb
and
push
call
int3
add
das
mov
adc
mov
pushf
dec
bound
mov
dec
shll
xlat
cmp
or
fiaddl
push
mov
pop
mov
jp
push
pop
dec
xlat
cmp
or
fiaddl
push
mov
pop
mov
jp
push
pop
dec
xlat
cmp
or
fiaddl
push
mov
add
repz
ret
dec
xlat
cmp
mov
addr16
and
scas
and
js
push
int3
mov
test
fwait
jmp
loope
jae
iret
xor
add
adc
outsl
icebp
pop
inc
pop
push
xchg
jmp
out
hlt
ffreep
iret
aam
and
push
jle
unpcklps
outsl
je
push
dec
push
pop
movsb
pop
mov
test
loope
hlt
rol
aam
mov
ja
push
adc
sbb
push
shll
out
pop
add
mov
adcb
dec
dec
xchg
push
repnz
xor
loop
imul
outsl
or
inc
xchg
leave
int3
pop
lret
lcall
cwtl
pop
adc
add
ljmp
and
imul
psubsw
sub
mov
aaa
jp
arpl
dec
iret
sub
ljmp
pop
fwait
sti
icebp
inc
orb
mov
dec
flds
mov
imul
loopew
roll
fsubrs
cmp
cmpsl
mov
xor
loop
insl
add
cli
xor
push
sub
adc
adc
pop
push
dec
push
in
stc
mov
test
hlt
ffreep
imul
imul
je
inc
dec
cmp
jmp
idiv
nop
mov
test
inc
jl
jp
push
or
inc
sub
in
test
out
lods
mov
pop
pop
jge
pop
gs
push
pop
add
and
add
in
ret
out
in
fdiv
lods
in
hlt
ffreep
iret
aam
and
xor
add
adc
outsl
je
inc
dec
push
mov
test
hlt
ffreep
iret
aam
and
xor
add
adc
outsl
je
inc
dec
push
mov
ss
shll
sub
mov
adc
movsb
loop
stos
lahf
or
stos
mov
mov
es
sub
xor
pop
fwait
imul
xor
jb
mov
push
movsl
out
mov
push
fstpl
arpl
sbb
pop
bnd
pop
cs
xchg
loop
loope
dec
fisttpll
mov
xchg
mov
xor
dec
inc
clc
je
into
enter
xchg
sahf
jge
jmp
cmp
aaa
pop
fistl
repz
mov
push
popa
lea
lea
rorl
cmpsl
int
jmp
pop
jmp
mov
adc
sub
mov
cltd
popa
lahf
jle
cmpsl
xor
movsb
mov
and
xor
leave
popa
cwtl
pop
push
push
mov
sbb
lcall
mov
enter
push
xchg
xchg
pop
jno
sub
cs
or
xor
xchg
nop
mov
adc
sbb
sub
cwtl
fbstp
dec
pop
or
dec
lret
rclb
sub
inc
xor
push
pop
stc
and
inc
mov
xchg
out
int3
pop
clc
ret
xchg
mov
les
jge
ficoms
jl
dec
inc
xchg
xchg
sahf
lret
dec
xlat
or
xchg
xchg
outsl
insb
lds
xor
mov
xchg
push
data16
cld
test
aam
rorl
push
xchg
mov
mov
add
ja
sbb
dec
lret
shll
jb
mov
xor
out
sbb
movsl
dec
xchg
in
sbb
lahf
int
push
pop
dec
mov
addr16
jnp
sub
mov
inc
mov
pop
sbb
mov
jae
and
push
mov
lahf
mov
push
jl
data16
sub
enter
xor
adc
movsl
jns
sub
xchg
sbb
aam
cmp
inc
out
icebp
lahf
mov
in
outsb
subl
fisubrs
push
js
outsb
es
push
subl
jg
jg
mov
jg
or
out
dec
mov
adc
xlat
out
add
xchg
cmpsl
out
xchg
mov
movsb
fcmovbe
xchg
inc
push
inc
jnp
cmpsb
cli
lock
ret
xchg
mov
pop
jp
shlb
int3
je
mov
inc
int
mov
stc
jecxz
aam
movsb
mov
mov
push
or
outsl
pop
test
jle
pushf
and
cmc
jno
sub
add
sbb
into
daa
or
loopne
outsl
dec
movsb
pop
sub
repz
gs
ss
shlb
push
jmp
adc
push
mov
mov
jl
lahf
test
out
inc
pop
mov
add
sahf
add
mov
movsb
inc
fcmovb
hlt
mov
jg
xchg
sbb
adc
lahf
setg
scas
ljmp
cli
leave
lods
dec
mov
and
lahf
jge
hlt
pop
cmc
jno
push
mov
mov
sub
popa
imull
subb
subb
cmp
sbb
dec
lds
lea
push
cmp
dec
or
mov
push
ds
add
push
add
dec
pop
mov
es
lahf
in
lods
and
mov
pop
fs
jp
cwtl
scas
lea
add
xchg
sbb
cmp
mov
test
fdivr
call
or
jl
mov
pop
pop
jl
jo
pusha
repz
mov
add
lcall
aas
popa
cmp
lret
mov
shr
insl
xor
xchg
aaa
mov
mov
loop
test
pop
jmp
test
cmpsb
xchg
jns
pop
push
bound
add
push
jns
and
lahf
int3
push
test
pop
in
lods
lods
fmull
inc
das
mov
push
xor
sbb
mov
mov
push
xor
lret
nop
aam
loopne
sub
lahf
out
sti
and
sub
push
imul
pop
add
mov
inc
aad
mov
shll
jl
inc
stos
repz
push
and
xor
jae
out
fs
inc
jmp
lret
push
xlat
mov
sahf
xor
jb
sbb
dec
adc
inc
in
nop
jno
shll
enter
mov
jns
add
daa
sti
int
sub
mov
push
dec
pop
pop
add
inc
insb
mov
addr16
push
outsb
sti
outsl
mov
xor
xor
cmp
sti
sbb
aas
lds
aaa
mov
loopne
daa
loopne
cmp
jne
jns
in
add
xchg
test
dec
aaa
jne
ret
test
xor
or
outsl
jb
push
popa
jl
ds
mov
cmp
xchg
and
mov
pop
aam
fwait
adc
mov
in
dec
addl
movsl
dec
pop
xchg
cmp
inc
adc
div
xchg
in
das
mov
adc
cmp
sub
and
mov
sbb
out
loope
push
cwtl
add
xchg
xchg
add
dec
call
xchg
jecxz
out
add
lahf
xchg
jecxz
mov
dec
and
repnz
jle
into
xor
cwtl
add
in
repz
xor
and
loopne
xor
adc
pop
push
xlat
sub
arpl
clc
mov
or
cmpsl
adc
push
std
leave
repnz
sbb
lahf
pusha
adc
lahf
fsqrt
stc
adc
ret
xor
mov
add
out
xchg
dec
mov
and
dec
lahf
cmpsb
sub
repz
sbb
or
dec
dec
xlat
push
xchg
in
in
addr16
mov
cmp
mov
xor
in
pop
sbb
push
in
mov
pop
in
shlb
and
incb
lds
hlt
push
std
xchg
stc
popa
repz
xor
adc
mov
lods
arpl
in
dec
fistps
cli
sbb
lock
mov
pop
mov
jne
and
cwtl
out
adc
in
mov
out
xchg
jge
mov
or
mov
call
and
inc
testb
jg
scas
jmp
fwait
lret
inc
sbb
mov
adc
mov
xchg
jo
leave
out
pop
daa
jecxz
add
cmp
xor
xor
add
sbb
sub
movsl
scas
push
inc
fimuls
sbb
pop
inc
inc
jnp
adc
mov
xchg
cltd
and
aam
repnz
adc
scas
sub
inc
mov
leave
xlat
fadds
pushl
mov
loopne
add
gs
cmp
and
mov
inc
repnz
loope
das
and
cmp
or
jbe
push
xchg
idiv
or
in
mov
xchg
xchg
gs
mov
loope
fstl
mov
mov
fucomip
fwait
mov
inc
bound
mov
test
loope
fs
xchg
into
xchg
outsb
testl
cmpsb
fimuls
loopne
gs
icebp
lods
in
stos
decl
out
and
lock
dec
pop
fcmovu
sbb
pop
cmp
out
or
xor
std
add
sbb
or
mov
pop
or
mov
repz
jp
mov
filds
cmp
in
jle
int3
test
push
in
xchg
or
pop
aam
dec
nop
cli
or
pop
xor
mov
sub
pop
rcrl
mov
adc
scas
aaa
loope
or
sub
mov
mov
mov
pop
sub
lahf
lods
mov
in
aaa
or
hlt
or
ret
xor
or
fdiv
cmp
mov
sub
push
pop
outsb
jmp
lods
ror
dec
idivl
fcoml
aas
inc
lock
ja
and
and
repnz
jb
inc
pop
jp
stc
xchg
inc
mov
adc
repz
mov
xchg
push
int
sti
sbb
bound
mov
movsl
shll
add
sub
jle
sbbb
mov
push
pop
cmp
pop
pop
loop
add
mov
cld
xor
push
loope
cmp
shll
add
scas
mov
cltd
movsb
inc
je
pop
dec
sub
mov
imul
mov
cmp
add
pusha
cmc
pop
addr16
loop
xchg
cmp
imul
jae
add
jg
setne
std
mov
mov
and
jns
je
mov
pop
inc
sbb
bound
addb
jl
jp
push
divl
jmp
xlat
mov
shlb
cmp
outsw
ret
add
push
or
dec
jmp
pop
rolb
sbb
push
push
adc
lds
sbb
cmc
sbb
stc
jecxz
testl
jns
dec
cmp
scas
sub
pushl
cmp
enter
inc
aam
icebp
xchg
outsb
dec
or
push
lret
or
pop
imul
or
in
push
mov
push
pop
das
mov
or
mov
xchg
test
sub
adc
fdiv
jnp
mov
push
mov
xchg
cld
movsb
mov
pop
cwtl
cs
mov
dec
insb
jne
push
or
adc
lret
add
aam
and
cmp
and
lret
xor
addr16
test
adc
cwtl
sub
dec
mov
mov
lret
mov
sub
cmp
test
nop
gs
mov
push
sti
out
and
sbbb
popf
xchg
popl
rcl
lods
pop
fldt
push
fldt
int3
cmp
arpl
stc
push
ficoml
arpl
sub
xor
inc
popf
sub
inc
das
or
xlat
xchg
mov
into
pushf
call
inc
enter
jmp
cmp
or
cmpsb
cmp
mov
jp
mov
inc
stos
enter
aaa
arpl
rol
mov
pop
xor
arpl
inc
or
into
mov
dec
mov
insb
mov
ss
popa
sbb
xchg
mov
div
iret
and
mov
adc
push
iret
sbb
rcrl
jmp
sub
cs
or
cld
hlt
jge
cmpsl
add
jns
pop
imul
scas
popf
pusha
sub
push
sarb
lahf
dec
fstpt
cmp
popa
xchg
jp
pop
iret
outsl
jbe
push
or
mov
pop
adc
popa
push
mov
inc
inc
test
jmp
jp
adc
sub
and
cmc
inc
mov
or
jmp
dec
mov
fists
fimull
mov
shlb
aas
in
inc
mov
ja
dec
xor
jns
mov
sbb
notb
notb
inc
jno
sub
lahf
aad
arpl
je
and
jmp
xor
icebp
mov
jle
es
stc
inc
ficoml
call
int
xorl
mov
mov
mov
sub
pushf
jg
mov
jnp
lods
insl
and
or
fisttpl
sub
dec
dec
mov
xor
gs
mov
rorb
stc
pop
pusha
jno
mov
pop
scas
push
mov
test
fs
xchg
mov
jecxz
xchg
cmp
push
out
lcall
mov
cwtl
lock
xchg
add
push
jbe
icebp
cltd
jmp
sbb
jl
mov
rorl
or
insb
stc
cmpsb
cmp
ret
mov
pop
mov
jp
ljmp
mov
sbb
in
clc
hlt
pop
push
sti
mov
lock
js
push
pop
mov
sub
stc
sbb
push
gs
xchg
aaa
dec
add
mov
ret
mov
and
nop
dec
gs
pop
dec
mov
lods
or
pop
sbb
inc
lret
mov
cmpb
insl
xchg
sahf
scas
gs
mov
mov
and
pushf
pop
sti
addr16
dec
fsubl
sbb
mov
repnz
fbstp
jb
xchg
jmp
negb
add
or
je
or
mov
inc
mov
cwtl
lods
dec
sub
faddl
or
jno
ret
daa
es
shl
lock
rorb
popa
push
jne
xlat
lods
dec
xlat
dec
sub
jge
data16
aad
mov
adc
xor
push
or
lock
les
mov
pop
cmc
rol
pop
or
in
sbb
or
push
aad
repz
cmp
divb
cltd
movsl
add
dec
xor
outsl
outsb
inc
sbb
add
leave
imul
sbb
fcmovnb
add
xchg
loop
test
xor
stc
xchg
push
iret
mov
pushf
or
add
sub
dec
hlt
lahf
cwtl
ds
jmp
pop
popf
fsubrl
test
pop
in
shrl
adcb
fisttpl
je
push
push
or
sti
sbb
mov
cmp
pop
hlt
js
pop
push
sub
lahf
push
adc
movsl
out
jl
aad
fwait
adc
and
mov
sbb
jbe
or
xlat
in
aam
adc
loope
inc
int
and
insb
imul
jecxz
ret
sub
xchg
jecxz
imul
ret
push
rcll
xor
pop
pop
shrb
mov
aaa
in
aam
inc
mov
pop
add
scas
in
mov
stc
adc
dec
loopne
sbb
addr16
xor
movsl
mov
mov
fmulp
xchg
fisubs
jo
pusha
mov
mov
in
jg
mov
lea
push
inc
jne
mov
js
insb
push
lods
or
shlb
xorb
call
xchg
mov
aad
xchg
lahf
aas
jno
cmp
add
rcll
decl
cmp
popa
xchg
add
lcall
sub
popf
cmp
sbb
xor
xchg
xor
mov
hlt
lods
insb
and
es
das
dec
adc
jbe
popa
jmp
std
or
clc
scas
dec
dec
sbbl
test
sbb
sub
fdivrs
adc
dec
cli
cs
cmp
jb
jne
addl
and
xor
fs
mov
add
push
sub
icebp
add
fbstp
xchg
mov
add
test
ds
fdivs
out
fmull
add
movaps
fidivs
or
inc
jl
das
aad
pusha
pop
add
pop
push
sbb
lods
xchg
jecxz
jle
cs
xchg
push
xlat
dec
cmp
xchg
das
jp
in
xchg
out
xlat
inc
or
jae
sub
inc
scas
and
cmp
push
sahf
sub
xor
mov
mov
mov
ljmp
sbb
dec
adcl
push
std
xchg
rcrb
in
and
inc
popa
xchg
push
push
jecxz
pop
jns
shl
mov
pusha
rolb
dec
dec
adc
cmpsl
dec
mov
add
mov
lods
sbbb
shlb
addr16
mov
int3
cmpsb
jecxz
xor
fwait
outsl
pop
jle
xor
pushf
mov
pop
scas
xchg
jge
insb
xor
xchg
ss
jb
mov
cmp
inc
xchg
into
inc
or
flds
xlat
pop
adc
xchg
push
push
imul
lods
rclb
daa
shl
das
addl
sub
mov
pop
ret
jle
punpcklwd
mov
push
imul
sub
or
pop
or
xchg
imul
add
adc
sbb
add
xor
jnp
xor
adc
jmp
xor
sub
daa
lods
inc
mov
in
jmp
mov
mov
cmp
push
pusha
daa
ds
stos
add
outsb
mov
shrb
lcall
je
mov
es
xchg
bound
sub
dec
cmp
nop
in
or
in
lock
pop
inc
subb
stos
jne
dec
lock
dec
add
mov
arpl
pop
outsb
insl
lds
add
inc
and
jp
or
adcb
icebp
out
push
lods
lods
sbbb
sbb
inc
pop
mov
icebp
insb
adc
aad
testb
arpl
cmp
xchg
bsf
mov
xlat
nop
pop
ja
inc
mov
fimuls
sub
fs
mov
inc
gs
das
dec
into
movsl
mov
stc
hlt
mov
lock
in
jns
jbe
aaa
mov
clc
mov
sub
push
pusha
hlt
mov
xorb
divl
xchg
xor
out
mov
testl
or
test
xor
sub
push
popf
clc
rolb
adc
loopne
xor
in
iret
xchg
mov
inc
or
pushf
sub
mov
sbb
notb
pop
sub
test
std
cmp
jb
dec
pop
adc
sti
das
xchg
out
push
jo
idivb
inc
and
hlt
out
inc
dec
hlt
dec
sahf
cmp
mov
jmp
sbb
daa
dec
out
ds
jmp
test
movsb
push
sbb
test
push
divl
jno
aam
sbb
cmp
mov
inc
jae
pop
and
dec
test
ret
mov
jmp
or
lcall
mov
fcom
cmp
cmp
js
xor
scas
mov
sub
inc
mov
dec
lods
test
daa
jecxz
xor
xor
mov
pop
aaa
sbb
stc
hlt
push
mov
add
jbe
cmpsl
mov
in
fsubrs
pop
xor
imul
fadd
inc
movsb
pop
cmp
mov
dec
mov
or
popa
sub
adc
cmp
cltd
cmc
cs
je
jns
adc
add
popa
and
fistpll
pop
int3
sahf
jno
mov
sbb
lret
and
dec
leave
out
aam
aaa
ret
inc
sahf
pop
nop
dec
stc
mov
add
imul
mov
push
clc
and
int3
scas
addr16
fscale
xlat
jmp
pop
push
pop
hlt
ffreep
mov
out
es
dec
xchg
fdivrl
mov
fwait
push
push
call
fcompl
fidivrl
je
mov
mov
sub
mov
add
orl
fsubr
jae
or
or
lds
imul
stos
loop
js
jns
xchg
pop
outsl
pop
dec
sbbl
jg
das
imul
ja
mov
inc
pop
and
leave
std
loop
jns
aam
xchg
xor
out
clc
mov
daa
xchg
lock
push
mov
arpl
in
sub
xchg
inc
sarb
lds
mov
roll
and
enter
mov
faddp
pop
lret
repnz
aam
addr16
repz
int3
dec
or
outsl
test
mov
xchg
inc
xchg
push
clc
sub
and
add
outsb
hlt
aas
movb
mov
je
arpl
or
adc
mov
push
js
sub
sbb
je
push
loope
imul
pop
xchg
xchg
mov
popf
and
sahf
lock
push
repnz
dec
enter
mov
adc
mov
sbb
shll
or
inc
xchg
jl
scas
enter
push
sbb
push
fsubr
cwtl
stc
add
adc
and
xor
jne
xor
xor
mov
loopne
cmp
or
lock
js
divl
dec
pop
mov
pop
inc
fsubrs
js
out
cld
sbb
jl
scas
test
xor
dec
push
mov
enter
jmp
sti
scas
fs
or
mov
or
cmp
and
pop
lods
decb
in
sub
scas
or
subl
nop
mov
add
pop
imul
push
xchg
push
mov
std
and
into
call
sbb
fldt
stc
rolb
out
imul
sbb
inc
sbb
inc
daa
jl
or
mov
mov
cmpsb
jnp
and
fs
pop
lret
adc
jl
lret
mov
or
leave
add
in
loope
xchg
pop
mov
jmp
mov
inc
push
dec
xor
stos
xlat
xor
and
iret
dec
sbb
sub
xor
mov
stc
push
dec
imul
or
lret
and
clc
xlat
std
cmpsl
sbb
stos
rcll
mov
cwtl
stos
fcmovne
push
pop
xchg
adc
scas
add
inc
lret
pop
dec
and
incb
adc
cmp
sbb
int3
dec
cltd
fs
scas
inc
pop
jmp
pushf
or
pop
or
xchg
adc
std
sar
sbb
dec
mov
shlb
inc
push
sub
cmp
inc
cld
adc
xor
push
xchg
lea
icebp
std
and
shrb
sbb
adc
roll
movsl
sahf
rclb
les
cmpsb
daa
lods
xchg
dec
int
jmp
aas
inc
mov
jl
cmp
add
add
inc
lret
and
sub
cmc
and
pop
fs
leave
test
xchg
jge
aaa
sbb
mov
fdivl
pop
cwtl
xchg
or
push
shl
add
or
dec
mov
xchg
jmp
or
loope
test
jae
dec
adc
jb
xlat
popl
imul
repnz
sub
xchg
subl
pop
das
cmpb
mov
aaa
sbb
js
ljmp
cs
dec
leave
inc
std
cmp
mov
ljmp
cli
outsb
movsl
call
mov
cli
loop
push
sub
rclb
scas
testb
test
xchg
cmp
cwtl
scas
mov
xor
jge
dec
call
rcrb
jnp
jge
adc
lds
int
lret
jmp
jecxz
xchg
dec
out
fstpl
mov
jecxz
shld
orl
sbb
lahf
das
int3
subb
and
in
icebp
fs
test
and
cmp
jg
pop
arpl
in
lret
loopne
mov
sbb
push
pop
push
add
loop
das
je
xlat
rorb
insl
cmp
mov
ffreep
push
jo
stc
jecxz
mov
adc
in
xchg
mov
jne
nop
loopne
push
push
shrb
mov
call
daa
jmp
fidivrl
cltd
xchg
xorl
mov
and
in
sbb
ret
xchg
lret
add
test
clc
stos
imul
cltd
je
jl
outsb
lret
push
test
mov
push
jns
and
call
add
sub
adc
fdivrl
rcrb
dec
jl
xchg
outsb
cmp
repnz
fstpl
jl
jl
movsb
sbb
adc
jle
add
in
mov
test
in
xor
call
ror
adc
out
xchg
loopne
xor
leave
in
sbb
in
and
push
dec
outsl
sub
cs
add
mov
pop
fwait
xchg
jp
or
fcompl
mov
fadds
hlt
ffreep
iret
aam
and
xor
add
adc
outsl
je
inc
dec
push
mov
test
hlt
ffreep
iret
aam
and
xor
add
adc
outsl
je
inc
dec
push
mov
add
xchg
outsl
in
je
les
aam
movsb
das
xor
add
adc
fs
pop
inc
cmpsl
push
stos
movsb
repz
test
hlt
ffreep
dec
aam
and
sahf
mov
packsswb
in
out
mov
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
fdivl
cld
push
in
inc
push
xor
add
jl
add
call
sbb
or
cmp
sub
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrl
xlat
or
cmp
sub
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
rcll
insb
lods
sbb
arpl
dec
testl
cld
add
int
adc
jno
push
cmc
mov
xlat
insl
insl
sub
jb
jb
cmp
iret
arpl
mov
mov
sub
or
rorl
cltd
test
jg
in
aaa
leave
repnz
jl
lods
cmp
pop
pop
sub
fdivr
int3
ja
inc
in
adc
xor
loop
push
leave
sbb
jecxz
dec
inc
mov
mov
popf
sbb
adc
mov
jmp
idiv
sub
repz
cli
sub
je
in
addr16
pop
jge
test
or
mov
cmp
jns
lods
jge
jb
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
popf
jb
sbb
jne
push
fdivs
jbe
subb
jl
adc
sbb
loopne
out
push
test
and
sub
xchg
sbb
nop
sbb
negl
mov
aaa
cmpb
add
pop
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
dec
popa
cmp
sub
xor
inc
add
sbb
mov
or
sbb
andb
fsubrl
dec
jl
in
mov
cltd
outsl
inc
in
jae
and
fwait
int3
dec
inc
push
inc
xchg
xchg
dec
fdivs
sub
pop
pop
stc
mov
push
cwtl
mov
cmpsb
in
sub
scas
mov
clc
mov
mov
adc
push
lcall
mov
dec
out
mov
cli
stos
hlt
push
cmp
ss
out
pop
aad
or
loop
dec
and
sub
add
cld
rorl
add
movb
lret
xchg
dec
and
imul
adc
xchg
sub
loop
jmp
xchg
shlb
sub
adc
push
iret
repnz
push
sub
repnz
insl
inc
enter
or
mov
sbb
movsl
negb
adc
sub
fwait
popf
adc
repz
jmp
push
xchg
and
dec
add
ret
adcl
inc
bound
push
out
into
fiadds
rolb
data16
or
mov
lret
adc
repz
nop
sub
fmuls
push
in
dec
jecxz
testb
cwtl
data16
in
fiadds
mov
add
sahf
andl
mov
popa
std
mov
jae
push
or
jmp
adc
cmp
cmc
push
data16
inc
fdivrs
lea
pop
outsb
je
jbe
int
xchg
ljmp
cmp
dec
dec
jmp
jbe
test
shrb
push
rcr
add
adcl
fiaddl
icebp
scas
and
je
int3
shrb
jne
jns
add
add
popf
mov
xchg
nop
xchg
sub
test
in
loope
mov
lret
inc
jb
inc
aam
mov
sarb
out
aaa
lds
push
lret
cmp
movsl
or
sbb
sahf
pop
call
repnz
mov
fisttpl
mov
ds
xchg
lock
int
dec
in
rorl
dec
test
jle
mov
ret
insb
push
sub
xchg
jmp
aad
clc
adc
enter
lods
xor
or
sbbb
inc
sahf
jne
shlb
es
int3
js
sbbl
dec
add
ljmp
mov
xor
das
cmp
je
inc
gs
xchg
idivb
mov
xchg
les
ret
inc
icebp
mov
subb
clc
aad
popa
sbb
addr16
bnd
dec
js
pop
js
fistpl
cmp
aam
lcall
jp
push
dec
push
pop
and
subl
push
push
xchg
ret
mov
movsl
mov
fldcw
rolb
cmp
mov
addr16
adc
inc
mov
scas
stos
les
mov
jae
or
mov
movsb
jns
stos
push
hlt
dec
enter
sbb
sub
aad
pop
out
fwait
xchg
arpl
jecxz
push
xor
mov
and
cmp
jle
dec
mov
jnp
nop
or
loope
aaa
aam
and
add
mov
jmp
inc
mov
and
push
xchg
and
mov
shlb
adc
cld
jae
or
orb
and
repz
and
imul
push
mov
fwait
cli
or
and
es
sub
cltd
adc
gs
jne
hlt
loop
pop
xchg
fcoms
outsb
cmp
std
add
rclb
sbb
xchg
and
inc
dec
pop
sub
ret
adc
loopne
dec
cmp
daa
mov
mov
in
ljmp
int
fdivp
pop
mov
jg
addr16
frstor
xchg
lock
cld
xsaves
jne
test
pop
shrl
mov
push
hlt
popf
cmp
add
enter
xor
cmp
lahf
xor
mov
push
out
data16
ja
fcmovb
jno
jo
lahf
mov
inc
add
jecxz,pn
sbb
std
flds
fwait
das
or
push
das
cld
adc
dec
push
inc
imul
rol
jne
inc
cmc
stc
adc
dec
test
into
cmp
xor
sub
daa
sub
xor
clc
ljmp
enter
sub
jnp
mov
jp
mov
add
imul
pop
lock
testl
push
jmp
jno
enter
adc
dec
mov
xlat
inc
pusha
bound
inc
test
push
jl
std
nop
test
daa
cli
test
jmp
cmp
and
lods
cld
scas
lods
jl
cld
jmp
stc
test
movsb
lock
rcl
iret
jmp
adc
stos
push
xor
aad
sbb
pushf
in
les
aam
mov
jmp
sahf
stos
xor
lock
ds
fcomps
mov
cltd
push
mov
mov
imul
lods
mov
or
push
adc
xchg
mov
cmp
test
xchg
or
sbb
inc
inc
sbb
ja
and
and
xchg
outsb
int
outsb
scas
fcoms
or
nop
push
js
insl
in
cmc
pop
add
cs
mov
cmp
jb
lods
cmpsl
daa
push
sti
mov
inc
cmp
fimuls
push
or
and
cmpsl
outsl
js
ja
pop
jne
lret
je
cmpsb
cwtl
cld
or
lret
dec
movsb
cmpb
in
or
imul
xlat
sbb
out
mov
cmp
pop
xlat
nop
dec
push
in
in
or
jecxz
out
sbb
test
push
adc
in
fwait
call
scas
int
sub
fincstp
pop
loope
int3
push
ret
xlat
or
cmp
pop
scas
sti
or
repz
xor
andl
push
sub
and
inc
aad
mov
jp
mov
xchg
ret
test
test
add
ss
push
jge
xchg
movsl
mov
arpl
leave
add
dec
lret
mov
dec
pop
pop
mov
pop
dec
shrl
stos
jo
mov
mov
test
adc
sbb
sbb
scas
inc
clc
icebp
loopne
jmp
fimull
aam
nop
fisubrl
cltd
mov
cltd
ret
or
dec
fadd
std
icebp
jp
incb
dec
mov
lahf
aam
jle
mov
pop
nop
push
lods
pop
iret
inc
sti
movsl
mov
pop
popf
stc
loop
fbstp
jecxz
mov
dec
dec
push
scas
adc
jbe
iret
mov
and
cmp
mov
pusha
cld
mov
in
out
ds
outsl
inc
mov
mov
iret
stc
mov
inc
dec
add
xor
gs
fwait
xchg
jge
and
push
hlt
cltd
jge
dec
or
ficomps
push
pop
cmc
add
and
sbb
xor
loop
mov
adc
hlt
testl
mov
pop
inc
fnstenv
repnz
testb
out
imul
mov
mov
cmpb
repz
xchg
jmp
jg
mov
xchg
lods
mov
or
xchg
inc
lret
sbbb
cli
cs
dec
adc
movsl
cmp
adc
popl
xor
dec
pusha
xor
pop
popa
jno
int
jbe
lock
and
dec
scas
xchg
loop
push
sahf
iret
sub
negl
mov
mov
loope
push
add
pop
or
int3
jp
scas
rorb
push
clc
xchg
aad
mov
or
and
xchg
mov
mov
xchg
mov
mov
test
mov
push
cmp
fwait
push
jo
jge
mov
out
mov
paddsw
and
shlb
outsb
fldenv
mov
inc
adc
and
xchg
mov
push
push
jae
shll
inc
loopne
scas
mov
lcall
ljmp
mov
aaa
adc
jno
mov
out
mov
mov
xor
in
mov
pusha
data16
arpl
insb
pop
push
xor
cs
sti
out
xor
jae
cmp
jge
cmc
mov
push
jb
push
mov
sub
aad
or
sbb
fbld
mov
sub
mov
add
xchg
cmpsb
cmpsl
cmp
pop
inc
stos
stc
cmp
jmp
movsb
push
dec
fs
jne
sbb
sbb
ficompl
sbb
sub
push
xchg
aaa
push
call
cmc
push
jbe
jge
add
dec
je
aaa
and
add
add
add
subl
sbb
outsb
and
and
xchg
xchg
xchg
xor
shlb
sti
jp
in
scas
jne
and
repz
sbb
arpl
scas
popa
inc
js
cmpsl
add
jle
sbb
adc
adc
mov
lds
pop
in
add
lea
and
add
cmp
push
xorl
imul
imul
loopne
dec
inc
jnp
sbb
mov
mov
push
add
mov
aam
lahf
sbb
cmp
xchg
repz
inc
jg
dec
pop
xchg
inc
movsb
out
cmp
mov
pop
fs
stos
ds
adc
int
inc
mov
orb
push
mov
push
cltd
add
cs
sbb
outsb
and
in
xlat
sbb
popa
shrb
mov
bnd
inc
adc
mov
xor
movsl
push
fisttpl
insl
xchg
adc
je
loope
je
cmp
pushf
cmp
in
ret
sub
lods
and
dec
inc
shl
sbb
pop
mov
jmp
pusha
cltd
fdivs
push
push
fmull
push
lahf
filds
imul
push
int
jnp
cmp
inc
sbb
adc
jge
mov
xor
jmp
mov
xor
adc
je
jmp
aad
pop
mov
xor
add
lods
popa
psrlw
adc
jle
xlat
pop
lock
inc
dec
dec
in
push
lret
mov
rorb
mov
insl
outsb
mov
sti
mov
adc
mov
dec
pop
push
mov
fsubrs
out
in
hlt
jne
sbb
inc
out
push
mov
call
imul
fwait
jb
mov
inc
test
pop
lea
iret
pop
jl
lahf
mov
push
or
xchg
fisubl
cltd
stos
into
loopne
test
rorl
mov
inc
out
aas
or
pop
cwtl
mov
inc
xchg
sti
js
inc
sbb
lcall
dec
inc
imul
pop
dec
or
or
xor
clc
xor
outsl
aad
shll
addr16
shr
or
pop
push
je
jmp
jg
out
cmpsb
mov
ja
pop
mov
popf
sub
xchg
call
add
loop
mov
in
repz
pop
cmp
pusha
insl
test
in
mov
mov
xchg
jp
addb
shl
pop
jg
fcmovb
jne
jmp
pusha
inc
das
pop
adc
ret
and
adc
cmpb
add
jns
repz
jo
inc
jle
nop
xchg
clc
sbb
test
add
fisubrs
sti
and
cld
sbb
andb
test
dec
addr16
in
mov
decb
xor
inc
inc
roll
int
and
pop
call
pop
mov
or
xor
xchg
jno
dec
clc
mov
arpl
xchg
stos
andl
or
or
mov
jecxz
aad
or
into
aam
cli
fimuls
jg
jg
dec
dec
aaa
lret
jmp
cs
lock
jbe
rol
mov
mov
mov
andl
mov
ljmp
dec
dec
scas
clc
stc
cld
insb
aad
aaa
shll
add
fucomp
nop
clc
jne
or
rcrb
inc
xchg
mov
into
cmp
leave
lahf
mov
stos
mov
in
push
popf
sbb
jecxz
movsl
std
mov
not
and
les
rolb
pop
sub
movsl
jecxz
fildll
pop
xor
lret
loop
and
push
cmp
adc
mov
push
fisubs
lahf
adc
inc
jg
fwait
es
push
lahf
pop
lret
fcomps
push
stc
lret
testb
loope
adc
mov
rolb
inc
push
mov
insl
mov
mov
mov
dec
fxch
aam
loopne
insl
xor
cmpsl
jl
lret
dec
addr16
outsl
fildl
dec
test
inc
mov
int
dec
add
jb
jge
pushf
pop
jne
dec
push
cmpsb
mov
imull
mov
jge
enter
lahf
sbb
xor
stos
cmp
inc
lcall
lea
lcall
rolb
test
in
int3
lods
xchg
xor
inc
jg
jl
iret
pop
movsb
xor
in
cwtl
sub
sbb
xor
push
mov
lods
lea
push
dec
std
cwtl
inc
fsts
sarl
popf
xchg
mov
loop
stc
pop
or
aas
xor
adc
fidivl
popa
adc
sarb
aam
stos
scas
jae
in
ret
xlat
add
push
dec
sahf
jl
dec
xchg
stc
sarb
popa
popf
lret
fidivs
mov
into
movsl
mov
adc
cmp
jmp
stos
and
sbb
out
pop
jno
adc
mov
scas
cld
scas
push
pusha
out
inc
insl
ror
jns
in
and
cmpsb
aaa
mov
outsb
mov
divl
push
sub
adc
sbb
fs
data16
movsl
pminsw
addr16
jle
aam
cwtl
or
mov
adc
pusha
fsubrs
loopne
and
mov
cmp
and
clc
jb
sub
loope
movsb
mov
fdivs
pop
dec
stc
xor
mov
ljmp
enter
ds
or
mov
std
daa
stc
loope
aad
mov
push
test
cmp
mov
sbb
adc
movsl
sbb
xor
adc
je
mov
aad
push
and
cld
sub
mov
pop
pushl
xor
les
jmp
sahf
fcomip
mov
dec
jns
jle
jne
xor
pusha
fadds
lock
mov
inc
lods
add
test
mov
mov
gs
popa
pop
sbb
xchg
push
add
das
pop
mov
pop
and
mov
fsubl
imul
enter
dec
outsb
fs
pop
mov
and
loop
and
dec
iret
cmpsb
mov
ja
sub
fbstp
dec
shll
outsl
lods
xor
mov
push
loope
sbb
in
dec
hlt
jl
insl
imul
inc
inc
push
pop
inc
sbb
mov
imul
mov
cli
xchg
mov
daa
dec
imul
jbe
fisubrl
mov
pop
jmp
pop
push
push
dec
ja
dec
push
pop
lods
out
jmp
sbb
inc
rorl
flds
adc
fstps
fwait
xchg
bound
iret
ficomps
jmp
xchg
jnp
movsl
lods
call
xchg
scas
lahf
adc
mov
enter
inc
idivl
pop
jb
fcoms
and
cmpsl
jne
push
daa
shr
mov
imul
dec
adc
jecxz
xor
jge
lods
adc
push
inc
pop
lret
push
out
push
push
push
and
jne
dec
scas
mov
dec
daa
in
insl
and
mov
mov
mov
mov
sub
xchg
mov
and
vmwrite
je
add
xor
jle
push
push
jle
adc
sbb
out
inc
incl
test
cmp
lock
mov
mov
test
popfw
cli
pushf
lock
xor
inc
cld
xor
addb
mov
mov
mov
mov
ret
shlb
jmp
fistpll
sbb
inc
sbb
push
sti
in
dec
aad
jno
nop
push
inc
adc
lret
pop
stos
mov
mov
inc
lret
insb
push
or
insb
mov
mov
ret
test
mov
movsb
insb
sbbl
je
imul
cs
add
mov
mov
add
and
sub
insl
adc
ljmp
pusha
notl
jne
dec
les
pushf
dec
int
jge
or
pushf
cwtl
push
mov
mov
xor
push
xlat
jmp
loopne
cmp
pusha
add
sub
retw
and
push
mov
scas
in
mov
pop
jmp
rolb
or
pop
inc
popf
pusha
xchg
adc
mov
sbb
fstps
xor
scas
lret
aaa
mov
mov
fcmove
scas
add
jnp
int3
adc
mov
js
test
xor
test
stos
cmp
xchg
mov
mov
iret
mov
insb
mov
and
jno
sbb
aaa
inc
das
push
dec
adc
into
imul
shlb
jnp
xchg
cmp
dec
je
mov
jne
ds
mov
adc
in
and
or
loopne
add
rclb
xor
or
adcb
cwtl
pop
dec
push
lods
rorl
or
dec
sbbl
xor
movsb
arpl
jno
lods
push
aaa
out
jl
mov
and
jns
insb
das
in
mull
xor
jmp
jnp
jnp
xchg
lea
jno
pop
xor
xchg
jns
fisttpl
test
adc
testl
mov
in
cmp
sub
xchg
movsb
cmpsb
sahf
inc
cmp
insb
add
push
in
xorl
mov
cmp
and
adc
mov
gs
cmpsb
adc
push
scas
scas
mov
sbb
shlb
jbe
push
sti
pop
dec
sub
add
outsl
xchg
mov
arpl
xchg
mov
xor
push
inc
cmp
jo
int
jg
push
in
int
inc
or
out
push
cwtl
dec
sub
inc
cwtl
mov
add
mov
orl
xchg
sub
jnp
push
mov
sub
mov
pop
or
push
stos
imul
or
andb
repnz
or
in
dec
orb
and
xchg
loope
pushf
and
add
leave
rclb
sub
push
test
or
lods
enter
sbb
fwait
sbb
cmc
in
es
pop
sbb
sub
popa
cmpsb
sbbl
ja
test
push
or
dec
out
mov
mov
push
mov
imul
push
inc
imul
xor
rcll
xor
jb
mov
scas
add
add
mov
xor
adc
dec
les
in
sub
xchg
movsb
inc
cmpsl
mov
adc
clc
lcall
ja,pt
test
inc
mov
sbb
push
sub
pop
hlt
adc
mov
sbb
pop
insb
jle
lock
into
push
or
insb
xchg
push
lea
stc
pushf
enter
ja
stc
nop
ja
fwait
imul
jnp
movsb
sbb
cmp
ss
pop
xchg
cld
cmp
sti
loop,pn
aaa
mov
sub
testb
call
in
stos
mov
or
sbb
data16
sub
jbe
sub
jge
sub
pop
jge
sbb
mov
insl
mov
in
push
movsb
addb
mov
ror
dec
pushf
hlt
popf
fs
push
int
mov
inc
cld
mov
sbb
adc
pop
adcl
xchg
adc
or
add
enter
add
lods
xor
jge
mov
imul
cli
push
add
lods
int
lea
gs
and
ret
xchg
fistl
cmp
lods
add
in
mov
jmp
push
dec
cmp
fldcw
cltd
dec
sarb
icebp
pavgw
xchg
scas
call
push
adc
pop
and
mov
lcall
push
rcl
push
cld
or
push
cwtl
sbb
lods
adc
shrb
jecxz
inc
dec
das
decl
je
xchg
std
ja
out
push
mov
in
std
mov
iret
test
cli
add
das
mov
xor
or
push
lods
ret
ds
movsb
pushf
or
jnp
sbb
sbb
scas
mov
cmp
mov
insl
in
cmc
test
test
test
dec
push
xchg
sbb
ds
adc
addr16
mulb
sbb
push
rcr
int
loopne
push
daa
jae
lret
push
xchg
mov
int
add
dec
lret
inc
add
je
hlt
and
add
xor
aas
add
push
cmp
stc
push
scas
rcrb
sbbb
pop
sbb
lods
fists
pop
pop
int3
mov
push
pop
sub
pop
popf
out
and
and
mov
int3
jg
jmp
xchg
pop
xchg
jae
push
jbe
les
dec
mov
scas
push
sbb
loop
add
cltd
mov
nop
mov
out
rclb
inc
push
out
test
and
and
cmp
and
cmp
mov
xorb
sbb
imul
aad
bound
sub
daa
iret
scas
pushf
sub
xor
movsl
adc
lret
add
ret
rorl
hlt
mov
fimull
xchg
dec
jmp
fiadds
stos
lcall
and
mov
jne
and
push
hlt
or
enter
std
inc
and
pop
lea
lds
fists
dec
push
sahf
dec
test
push
faddl
out
jp
clc
int
dec
lcall
sbb
notb
jbe
adc
xchg
insb
leave
cmp
xor
fmull
repnz
xchg
andb
mov
jb
jno
inc
cmc
subb
cmpsl
sub
push
in
sbb
and
cmp
xlat
jb
add
push
lret
mov
xor
imull
sub
pop
xchg
fnstenv
dec
jl
lock
jl
loope
dec
mov
xor
arpl
adc
pop
adc
mov
nop
add
call
mov
push
cltd
jae
bound
mov
es
pop
inc
mov
and
es
ficoml
add
iret
sub
mov
and
push
jnp
mov
pop
orl
repnz
ss
mov
out
adc
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
bound
inc
sbb
mov
mov
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
dec
shrb
cmp
insl
pop
jge
int3
int3
int3
int3
jle
outsb
jo
add
aaa
inc
dec
adc
add
in
mov
mov
rorb
pop
add
ds
jo,pn
inc
push
jle
mov
into
nop
mov
rorb
pop
lcall
push
dec
push
mov
stos
loop
mov
xchg
fnsave
pop
push
daa
jne
outsl
jns
cmc
ret
test
aam
leave
jnp
cmp
fwait
xchg
and
out
jne,pt
sti
loop
out
inc
pop
arpl
xor
jmp
dec
fistps
xor
pop
loopne
mov
mov
mov
or
sti
mov
mov
adc
pop
jle
dec
xor
je
inc
inc
orb
push
and
xor
data16
add
int
std
mov
rcll
loop
test
pusha
inc
pusha
out
mov
in
xchg
mov
fists
rclb
push
push
mov
push
movsb
cli
pop
mov
mov
sub
mov
pop
je
adc
pusha
jo,pn
inc
push
ret
out
sbb
or
mov
fmuls
pop
sbb
pop
lds
jno
mov
mov
mov
lods
and
out
lahf
sti
mov
mov
cmp
xor
pop
sub
mov
mov
mov
scas
lret
lock
outsb
rcrb
insb
sub
jo,pn
inc
push
push
mov
into
nop
mov
rorb
pop
add
ds
jo,pn
inc
push
push
mov
into
nop
mov
rorb
ret
jge
out
pop
das
repz
cmp
cwtl
fisttps
add
push
jl
mov
test
dec
inc
in
gs
cld
ja
incb
sbbb
add
xchg
shr
movsl
xor
div
divb
push
shrb
insl
cmpsl
je
inc
enter
mov
pop
jp
lock
inc
insb
js
sahf
dec
outsb
and
and
lahf
and
in
push
mov
push
pop
in
lods
out
add
jmp
push
jno
stos
enter
jb
mov
bound
icebp
sbb
adc
xchg
push
int3
ljmp
push
mov
insl
or
lods
pop
cli
xor
push
jae
sbb
inc
popa
or
mov
mov
fldl
ja
mov
int3
and
and
mov
adcb
jae
popf
jne
mov
imul
inc
rolb
icebp
jbe
add
in
nop
sbb
dec
bound
mov
in
repz
cs
inc
cmpsl
mov
jp
mov
push
clc
adc
adc
lahf
inc
aam
out
push
call
mov
testl
ss
sti
icebp
test
clc
and
pop
sub
insb
pop
pop
je
outsl
mov
jecxz
xchg
aam
pop
ret
lcall
dec
jl
mov
repz
mov
clc
shrl
or
in
push
jo
mov
xlat
jecxz
lret
xlat
cmp
divb
out
mov
inc
sub
arpl
mov
mov
cmp
ljmp
lock
cwtl
movsl
jns
jecxz
jns
cmp
pop
out
stos
mov
pop
cmpsb
mov
fwait
mov
and
and
les
pop
lock
and
inc
ret
sbb
push
xchg
sub
jmp
mov
idiv
test
pop
adcl
jp
sub
sub
arpl
mov
cltd
pop
add
mov
push
push
mov
inc
stos
push
ss
add
xchg
inc
jl
add
lahf
in
mov
addr16
adc
ja
mov
xor
adc
push
pusha
test
cld
cmp
pushf
cmpsl
insb
mov
data16
pop
and
stos
daa
out
sub
cmp
or
js
cmc
ss
mov
adc
stc
test
xchg
xor
xchg
insl
rclb
sbb
loop
inc
and
les
jb
cmpsb
mov
mov
paddd
pusha
xchg
jbe
mov
in
jne
xchg
andl
add
inc
aaa
sub
inc
rorl
jecxz
xor
stos
cmpsl
pop
and
push
cltd
ret
and
mov
bnd
jns
fdivrs
fldl
add
push
js
test
enter
inc
lds
movsb
inc
mov
stc
popa
mov
jecxz
out
fldt
xchg
mov
adc
add
clc
lods
mov
add
loope
xchg
outsl
cmp
jg
popa
insb
mov
ds
cli
bound
insl
jg
and
lret
sbb
push
xchg
les
cmpsl
cli
xchg
in
cmpsb
add
push
sbb
ds
lods
or
out
xor
lret
inc
sti
mov
es
sti
push
inc
insb
mov
xor
mov
cmpsb
jnp
jno
pop
inc
int
xor
jge,pn
sbb
xor
test
pop
mov
inc
stc
je
lds
je
test
push
mov
or
dec
das
sub
add
out
pusha
sbb
repnz
mov
push
leave
add
test
shlb
cmp
add
add
cld
xchg
movlps
pushf
jge
or
pushf
xchg
push
push
pop
mov
insb
flds
sub
mov
pop
icebp
pop
push
scas
pop
jmp
icebp
imul
push
nop
rcll
mov
pop
dec
mov
jnp
sahf
test
cwtl
cmpsb
dec
iret
pop
ficomps
pushf
mov
sarb
pop
repz
insb
push
lds
pop
or
sbb
cmp
stos
inc
sub
pop
add
or
mov
outsl
add
jae
jg
mov
push
mov
push
fsubrl
bound
rcpps
cmp
mov
add
sbb
sbb
out
pushw
das
das
fcomi
pop
ss
scas
cmp
xor
insl
fistpll
dec
push
pop
jge
mov
das
je
test
popa
dec
xchg
inc
jle
repnz
mov
or
rolb
mov
pop
jle
mov
test
out
or
pop
loopne
popf
sub
insl
add
ret
xchg
inc
dec
leave
cmpsl
mov
jns
inc
xchg
lret
jno
inc
xchg
and
mov
ret
repz
lds
xchg
dec
sub
add
and
stc
int3
mov
ss
popf
lods
stc
xor
xchg
sarl
mov
cmc
and
sub
mov
push
ret
push
call
stos
inc
mov
mov
pop
stc
loop
push
xchg
pusha
or
jo
cwtl
insb
mov
out
pop
xchg
js
test
jmp
arpl
sbb
sbb
outsl
mov
jno
mov
sbb
mov
push
cmp
inc
mov
push
aaa
ja
lret
in
ja
fs
mov
or
add
jne
or
stos
push
scas
std
test
bound
jnp
xchg
pop
subb
and
test
into
arpl
mov
jp
mov
ja
imul
out
imul
ret
jmp
es
pop
ds
das
cli
jo
or
push
xchg
shrb
jno
into
dec
xor
bound
mov
bound
pop
mov
loopne
or
push
push
sub
dec
adc
push
mov
dec
stos
sub
mov
push
int3
out
stos
push
sub
out
jle
orb
scas
xor
add
sub
jbe
int3
movsb
push
icebp
jmp
dec
mov
bound
and
insl
faddl
jb
adc
xchg
pop
adc
aas
and
cmpsb
in
pop
mov
cld
mov
cmp
mov
popf
scas
in
repnz
int3
lock
push
pop
push
xchg
push
out
pop
pop
mov
fldcw
out
push
jbe
rclb
xchg
sub
mov
push
lret
dec
inc
and
push
data16
mov
sub
xor
pop
loop
or
arpl
cmpsb
adc
sbb
mov
std
sub
mov
cmp
lock
dec
testb
ss
push
xor
jl
sbb
pushf
inc
fmul
imul
pusha
jno
dec
mov
lcall
pushf
and
xchg
pop
sbb
pushf
mov
movsl
mov
mov
imulb
imul
loopne
mov
inc
push
in
dec
insl
imul
pop
sbb
ss
mov
mov
sub
pop
movsl
in
jo
in
jno
push
add
mov
jno
mov
mov
scas
xchg
xor
inc
int
push
mov
jmp
add
xchg
xlat
negl
ds
lds
xor
sar
mov
pop
push
sub
adc
in
call
adc
cmpsl
jecxz
rcll
std
dec
mov
jmp
cmp
and
f2xm1
jae
or
out
fptan
and
push
add
add
xchg
imul
xor
inc
lods
in
dec
push
ds
inc
inc
pusha
xorl
out
aas
xor
addr16
stos
lea
cmp
sbbb
imul
push
clc
fcmovne
mov
ds
cmp
mov
sub
xor
aad
inc
fs
orl
add
out
dec
ds
andl
add
push
cltd
test
fnsave
push
aad
push
push
add
sbb
hlt
pusha
imul
jbe
aaa
jp
add
jecxz
dec
stos
std
sti
xchg
imul
cltd
sub
popa
xchg
inc
cmp
dec
mov
pop
int3
outsl
lea
dec
decl
push
ljmp
aaa
adc
push
inc
into
in
roll
push
dec
bound
popa
ja
sub
mov
jns
insl
push
addr16
int
inc
mov
pop
gs
jecxz
aad
repnz
mov
xchg
out
idivl
insb
push
inc
inc
test
in
dec
aad
dec
xor
jle
xlat
std
xor
pusha
dec
test
unpckhps
push
or
in
cs
js
lods
xchg
adc
dec
sub
andl
cmp
adc
fdivs
int3
dec
adc
sti
fcomps
push
shrl
cmp
pop
aaa
into
xor
inc
mov
jmp
jne
jecxz
dec
pop
xor
fstpl
push
sub
push
or
mov
adc
push
rolb
pop
mov
insl
mov
gs
lcall
test
jmp
jae
sbb
stc
stos
pusha
cltd
mov
ja
xor
scas
pop
and
mov
push
int
in
rcrb
push
or
sub
ss
add
jnp
enter
push
adc
mov
add
mov
xor
jmp
lds
jnp
pop
sbb
and
push
hlt
xor
dec
jmp
filds
popa
imul
add
cmp
cmp
in
mov
aad
mov
daa
daa
jb
repnz
mov
out
jns
cli
pop
cmp
notl
jle
ljmp
pop
xlat
rcrl
mov
dec
out
xchg
jmp
repz
aas
inc
jbe
aad
xor
out
stos
push
aad
sbb
jae
into
fldcw
xor
push
mov
add
mov
lds
mov
loope
aad
popf
aad
cld
adc
rorl
fwait
shlb
cmp
jl
mov
mov
insb
cmp
mov
daa
out
imul
mov
mov
int
jnp
mov
dec
inc
dec
mov
decl
mov
jecxz
ret
iret
data16
aad
cmp
pop
mov
mov
mov
enter
adc
outsb
pop
js
xor
mov
pop
jecxz
inc
lods
test
push
adc
xor
mov
mov
or
fmuls
aas
add
or
fisttpll
sbb
mov
test
paddd
ljmp
fmul
or
repnz
pop
test
scas
int3
imul
out
into
xor
arpl
sub
adc
mov
in
jbe
jl
jbe
lods
call
cmpsl
push
test
cmp
sbb
mov
lahf
fisubrl
adc
jp
leave
pop
push
pop
mov
jl
cmp
push
lcall
sub
push
push
and
rorb
xchg
sub
ljmp
and
sub
mov
pop
add
add
pop
xchg
jmp
inc
xchg
adc
aad
mov
pop
mov
stos
cwtl
int
or
test
mov
divl
in
aad
movsb
and
arpl
xchg
sti
fwait
shlb
push
idivl
push
test
push
jbe
jae
mov
xor
das
push
clc
sahf
fwait
jno
mov
aam
xchg
js
xor
jle
adc
add
inc
fdivs
out
dec
jg
or
arpl
lock
dec
dec
or
and
out
xor
xchg
lret
xchg
dec
lret
push
jp
fnstenv
loopne
loopne
push
lock
xchg
fdivrs
aaa
xchg
mov
or
push
pop
inc
out
psubb
jle
adc
in
fcoms
lods
pop
and
cmc
and
enter
into
jl
xchg
pushf
push
pushl
mov
and
or
jne
stc
enter
dec
pop
sub
ret
insb
inc
out
addb
lret
lahf
ss
or
testl
fwait
hlt
push
fldt
mov
jge
mov
aas
mov
subb
lea
and
sub
out
dec
sub
sbb
pop
shll
pop
stos
xchg
mov
jmp
scas
inc
push
loop
fidivrs
adc
mov
xchg
out
mov
pop
lock
rclb
mov
pop
out
inc
int
mov
orb
mov
push
outsb
popf
scas
dec
xchg
adc
cli
cmp
mov
add
xor
bound
xchg
sbb
inc
scas
imul
std
and
stc
aas
pop
or
pop
fs
or
or
push
xchg
test
adc
aaa
mov
stos
inc
arpl
mov
test
sahf
rolb
mov
xor
shrb
and
ljmp
pop
lods
mov
cltd
test
jbe
stos
lret
adc
xchg
jmp
xchg
fsubrl
mov
rcl
fmull
mov
jbe
insl
sub
cmpsb
dec
push
lods
pop
inc
pop
lock
aad
out
dec
mov
pop
out
sub
stc
sub
push
pop
add
pop
mov
sub
cmp
enter
rorl
pop
fisubl
mov
and
dec
ret
pusha
cli
stos
xor
inc
out
xchg
outsb
ljmp
adc
out
pop
mov
fdivr
ljmp
test
adc
out
pop
out
pop
or
dec
dec
mov
sub
mov
jae
out
add
outsl
call
out
xor
xchg
push
push
popa
ss
xchg
or
cmpsb
pop
push
addr16
jbe
enter
push
aad
into
imul
jnp
or
mov
mov
icebp
push
cmpsl
addr16
movsl
push
iret
inc
std
xlat
cmp
dec
or
mov
mov
aaa
jecxz
dec
mov
xchg
xorl
dec
rorl
rorl
xor
cmp
je
outsl
and
push
leave
mov
xor
or
rclb
lret
jl
cltd
dec
into
pop
mov
nop
les
lock
pop
mov
xor
fdivrl
pop
dec
jnp
pop
inc
and
push
add
adc
and
addb
in
cmc
fst
and
mov
idiv
xchg
xor
pop
movsb
roll
bound
mov
sbbl
in
repnz
xchg
jns
inc
mov
fadds
mov
adc
dec
in
xor
xlat
leave
in
outsb
push
mov
cmpsl
mov
mov
inc
bound
lds
das
cmp
fistpll
into
shrl
pushf
mov
mov
jne
bound
sbb
push
or
adcl
imul
stc
jb
rolb
inc
pushf
xchg
cmp
mov
int3
push
inc
cmp
ds
and
xor
into
add
add
push
andl
cwtl
adc
cmpsl
mov
cmp
fsts
enter
jb
push
sbb
lock
adc
mov
mov
stc
sbb
lock
aad
clc
mov
xor
dec
mov
cmp
mov
sub
and
pop
mov
ds
add
cmc
ret
mov
add
clc
push
jmp
cmp
jmp
data16
cmp
add
cld
fildll
sub
add
adc
sti
lock
dec
repnz
ja
aas
out
or
out
dec
lret
and
and
shlb
cmp
mov
cld
xchg
or
popf
out
or
pop
mov
jns
insl
dec
clc
stos
pusha
imul
cmp
movsb
addr16
xchg
leave
and
add
pop
mov
jle
and
fmul
xchg
mov
push
call
pop
jl
arpl
and
sub
jmp
loopne
jo
aam
add
lds
push
enter
pop
mov
hlt
in
sub
nop
daa
inc
cwtl
jnp
rolb
sahf
lods
jle
sub
pop
xchg
lods
lds
jge
xchg
fisttpll
pop
inc
int3
loopne
jl
inc
push
out
xor
add
imul
add
popf
ljmp
mov
loopne
xchg
mov
ror
push
inc
or
inc
scas
les
mov
repz
jb
aas
and
clc
mov
dec
es
pop
int3
in
lcall
cmpsb
push
mov
movsb
jecxz
js
jnp
mov
mov
mov
es
mov
js
aaa
pop
mov
push
int3
outsb
xchg
in
subl
xchg
psubd
lret
xchg
inc
arpl
fdivs
xchg
and
or
cmp
or
mov
inc
mov
dec
in
daa
xchg
push
out
xchg
push
sbb
xor
inc
xchg
xlat
js
dec
aad
fcoms
adc
mov
nop
pusha
inc
pop
stc
jecxz
cmpsb
or
fs
jno
inc
xchg
pop
out
outsl
mov
mov
and
dec
inc
aas
loop
dec
dec
mov
xor
pop
pop
bound
fs
sub
dec
sbb
push
dec
pop
or
lahf
xchg
mov
outsb
in
data16
xor
scas
sub
pushf
jb
adc
flds
sahf
add
jl
push
jl
movsl
cli
push
and
xchg
mov
and
adc
lret
cltd
cld
xor
fnstcw
jno
rolb
and
flds
pop
inc
adc
test
lds
lahf
fdivl
mov
ds
pop
fcoml
ret
cmp
mov
icebp
cmc
sub
push
pop
and
out
les
divl
mov
sarl
add
dec
sub
push
pusha
popl
push
sub
push
nop
aaa
imulb
lret
push
rcl
jo
fcoml
ljmp
inc
and
icebp
aad
sbb
sbb
pop
mov
xchg
inc
sbb
fldcw
inc
mov
mov
pop
push
pop
sahf
pop
lahf
fs
ficoml
xchg
cli
popa
dec
cmovle
ret
dec
xor
jmp
push
loop
imul
je
stc
addr16
mov
rcrl
jecxz
xor
xor
das
pop
ret
push
push
shrl
cmpsl
insb
std
dec
test
ss
dec
ud1
pop
into
pop
dec
stos
cld
ss
loopne
mov
mov
fs
jle
das
lret
pop
push
dec
aam
aam
push
scas
push
dec
push
fnstcw
lret
xchg
mov
inc
sub
ljmp
rcl
mov
aad
gs
push
cmp
or
cld
sahf
mulb
repz
sbb
jmp
cmc
dec
jo
fsubp
enter
rep
cmp
mov
dec
rdmsr
push
fcompl
or
out
pop
push
sbb
mov
movsl
js
iret
mov
subb
sbb
xor
mov
sub
cmc
xchg
call
jbe
cmpsl
loop
shrb
push
xchg
push
cmp
cmp
mov
mov
adc
jg
adc
pop
xlat
push
sub
fnstenv
pop
stos
icebp
mov
sbb
iret
fabs
addr16
cltd
aas
xchg
pop
push
mov
mov
rclb
jno
sti
or
mov
push
in
mov
mov
jno
add
pop
outsb
sbb
jnp
lcall
loope
test
loop
cmp
adc
fs
push
dec
lret
enter
imul
insl
xchg
push
hlt
cmp
push
mov
test
adc
jmp
mov
cmpsl
mov
inc
jb
rorb
aam
adc
fdivl
inc
add
jl
xchg
cmp
jle
and
icebp
stos
and
xchg
jae
xor
es
arpl
mov
push
inc
jg
stos
ficomps
fs
dec
loope
out
cmpsl
cltd
push
cli
mov
push
push
jo
ja
sbb
mov
dec
sbb
cmp
cmpsb
jmp
xchg
mov
fbld
xor
leave
lcall
nopl
dec
push
stc
mov
xchg
add
pop
xchg
sub
dec
dec
aam
mov
test
xlat
shrb
aas
cmp
stc
pop
xchg
pushf
pop
jl
test
test
pop
push
out
cmp
mov
loopne
nop
mov
mov
dec
in
xchg
movsl
lret
popa
jbe
hlt
mov
sub
sub
test
mov
gs
out
call
in
xor
mov
scas
xchg
enter
add
out
mov
add
jae
iret
xor
loope
and
pop
push
sub
cltd
lcall
cmpsb
jne
inc
enter
and
and
lock
aas
fisubrl
pop
fadd
adc
in
push
rcrb
into
in
ljmp
adc
int3
xchg
sub
into
jp
rorl
int
xchg
iret
fsts
and
xor
cmpsl
outsl
pop
shl
cmp
or
sbb
jno
out
mov
lret
pop
in
stos
dec
sahf
push
and
aas
push
hlt
push
cmpsl
pop
rorb
dec
cmp
add
insb
mov
sbb
mov
ret
scas
jl
sbb
mov
adcb
int
push
iret
fs
pop
sub
and
fcoml
inc
cmp
add
push
ret
pop
push
test
dec
cltd
inc
cmp
or
test
add
mov
lock
aad
mov
and
fcomps
incb
cmpsb
ret
or
pop
adc
fidivrs
lea
sbb
inc
rolb
ret
mov
dec
enter
out
shll
hlt
pop
jge
mov
jns
cmp
mov
sub
push
fidivrs
dec
or
mov
mov
push
sbb
xor
les
subl
pop
cmc
add
cmpsl
xchg
cwtl
push
lds
xchg
mov
cmc
jb
jbe
pop
mov
cli
pop
inc
mov
dec
sub
out
sahf
fisttpll
push
lcall
sarb
cmp
inc
sub
jne
jo
insb
xchg
xor
add
push
xor
jno
fs
sbb
test
adc
es
inc
ja
inc
bound
jmp
leave
and
and
sbb
out
xchg
test
push
mov
into
sbb
cld
mov
sub
push
push
mov
arpl
push
int3
frstor
mov
cltd
inc
js
jp
sub
movsl
sub
jl
loope
lret
xchg
pop
mov
mov
xchg
lcall
leave
stc
insb
jne
lcall
mov
mov
fidivs
punpcklwd
lret
xor
pop
jge
stos
or
mov
and
repnz
sbbl
pop
push
or
rcrl
sub
mov
imul
push
push
rcrb
sbb
sbb
add
cwtl
pop
push
mov
lret
mov
xor
lahf
mov
pop
mov
push
popa
outsb
jge
inc
pop
inc
lahf
ds
push
pusha
bound
int
jle
hlt
lds
cmp
jecxz
inc
fs
outsl
test
out
xor
dec
adc
pusha
jo,pn
inc
push
push
mov
into
nop
mov
rorb
pop
add
ds
jo,pn
inc
push
push
mov
into
nop
mov
rorb
pop
sbb
ds
das
sbb
inc
push
push
jmp
iret
cltd
mov
leave
mov
les
pop
in
push
ds
jo,pn
rorb
je
into
out
cwtl
mov
jbe
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
loop
bound
dec
inc
fisttpll
dec
sbb
loop
ror
ret
lods
mov
popf
jb
bound
dec
inc
pop
xor
add
in
loop
mov
ret
ret
xchg
int
popf
jb
bound
in
pop
xor
and
adc
add
mov
cmpsl
scas
sar
lret
aam
stc
in
popf
add
adc
cmp
or
adc
lds
loope
fisttpll
xchg
popf
mov
enter
out
insb
daa
pop
add
xor
pop
xchg
sbb
int
lods
pop
jle
mov
imull
pop
push
and
jle
add
repnz
mov
test
push
or
bound
mov
bound
pop
scas
in
sub
add
loop
and
sar
sub
push
lods
icebp
inc
andb
js
xchg
add
push
fcomp
or
js
add
xchg
in
orb
fucom
dec
mov
mov
shrb
mov
or
xor
lods
mov
sbb
leave
inc
push
xor
add
rcr
ret
andl
jge
push
or
jno
inc
push
push
fs
stos
push
mov
mov
leave
dec
idiv
sub
sub
js
inc
inc
push
adc
jno
mov
mov
ret
testb
cmp
sbb
and
repnz
loop
ror
ret
lods
mov
popf
jb
bound
dec
inc
pop
xor
add
ror
ret
lods
mov
popf
jb
stos
fucomip
adc
mov
cs
in
popa
dec
lret
arpl
jge
inc
mov
cld
testb
aam
out
jg
rcll
pop
lock
bound
jl,pn
stos
adc
cld
adc
xor
fcomi
es
push
repnz
cmp
dec
dec
into
clc
mov
dec
xchg
xchg
cmp
repnz
adc
das
inc
mov
dec
push
es
pop
or
addr16
add
insl
test
test
mov
pusha
xchg
sbb
mov
push
aas
int
lcall
insb
pop
and
or
xchg
adc
mov
xchg
leave
jns
cld
out
sahf
dec
or
and
mov
hlt
cs
fwait
aaa
out
jmp
hlt
add
out
rcll
es
lods
fnstcw
lret
mov
or
cmp
mov
faddl
mov
mov
ds
pop
sbb
or
scas
mov
int
cmp
adc
jecxz
clc
jg
lret
loop
jno
shl
stos
leave
dec
lahf
movsl
movsl
cmp
ret
fwait
lods
xor
xchg
lea
clc
sub
jg
adc
fisubrs
sbb
push
stos
mov
mov
jecxz
mov
mov
daa
fwait
outsb
ljmp
test
nop
out
sbb
or
orb
rcrl
scas
sub
mov
inc
call
and
test
sub
xchg
jnp
sbb
rcr
pop
dec
push
push
add
popf
push
loopne
mov
mov
rolw
out
sub
pop
out
fwait
aam
stos
lds
fwait
sbb
sbb
fs
pop
and
dec
and
sub
dec
lea
outsl
push
jne
adc
add
xchg
pusha
mov
ds
mov
or
test
imul
jne
pop
add
rorb
int3
cmc
xor
iret
sub
adc
addl
sbb
pop
lea
mov
push
dec
negl
leave
mov
mov
sti
outsb
push
jno
inc
imul
push
sahf
nop
outsl
push
mov
push
cmp
test
fldt
les
dec
jno
and
xchg
lock
xchg
sarl
adc
mov
scas
cli
cmp
push
inc
pop
sbb
push
out
fcmovnb
out
outsb
lret
dec
dec
mov
popa
out
adc
sbbb
cli
push
sbb
data16
andb
mov
xchg
and
mov
int
mov
inc
pop
movsb
mov
cld
loope
sub
push
xchg
xlat
mov
and
std
dec
in
pop
xchg
xor
leave
lock
scas
mov
arpl
fistl
icebp
jl
mov
pop
add
shl
dec
and
cmc
adc
add
jne
lahf
mov
push
aaa
mov
xchg
push
mov
loope
movsb
bound
cmp
and
std
jge
push
mov
pop
push
push
jp
add
mov
lods
mov
in
pop
imul
fstpt
lret
dec
iret
jle
movq
mov
test
push
inc
cmp
jb
push
divb
sbb
sub
mov
xchg
pop
and
mov
or
mov
stos
std
pop
insb
jecxz
mov
out
iret
stos
lea
ds
xchg
push
push
push
xchg
cmp
or
and
inc
cwtl
or
cmp
sahf
leave
sti
outsl
aam
mov
adc
inc
gs
jno
pop
lcall
dec
addl
imul
xchg
subb
push
scas
aas
mov
repnz
cmp
popw
push
and
cmc
cmpl
gs
sub
xchg
add
test
imul
pop
mov
or
cltd
sub
das
jmp
adc
push
jbe
js
and
inc
sahf
xchg
dec
cmp
inc
cmp
aam
jle
jne
and
enter
fsubrl
bound
and
inc
mov
adc
clc
dec
dec
jmp
in
and
mov
xor
rolb
adcb
inc
ljmp
stos
and
sub
cmpsb
int
cmp
xchg
ss
xchg
imul
movsl
pop
fmul
dec
pop
pop
fmull
fimuls
negb
push
int
push
enter
idivl
into
cmp
inc
jb
adc
cmpsb
call
in
xchg
push
cld
out
dec
and
jo
fnstsw
sbb
test
scas
outsb
loope
cltd
mov
xchg
popf
dec
xchg
sub
sti
in
ret
hlt
mov
and
push
and
ljmp
xchg
dec
out
lea
lods
lods
mov
cwtl
jge
mov
mov
ljmp
inc
pushf
daa
cltd
loopne
push
rcrl
or
orb
movsb
fnsave
int
or
mov
xlat
adc
push
loope
lds
arpl
inc
lods
push
xchg
insb
ds
add
int
jp
push
mov
inc
xchg
add
adc
ljmp
es
xor
mov
jo
outsl
add
dec
adc
es
call
dec
push
test
pop
aam
push
xchg
push
mov
add
sub
fwait
loopne
and
incl
inc
xchg
cmpsl
aam
decl
es
je
fwait
xor
jp
lret
mov
pushf
test
adc
jmp
ficomps
sbb
in
add
xor
shrl
loope
push
cmc
into
xor
sbbb
in
and
mov
lds
push
mov
mov
add
aas
sarl
shll
cmp
fisubrs
mov
js
int3
push
push
cmp
aam
fsubrs
cmp
gs
loopne
xchg
or
inc
and
xlat
dec
xor
incb
pop
add
ja
lahf
mov
jge
ret
jnp
inc
xchg
push
mov
lret
aad
jge
pop
loop
mov
insl
ja
mov
popf
xchg
cmpsl
std
negl
jne
inc
incb
push
lahf
stc
std
mov
sub
lods
imul
lcall
testl
cmp
loop
mov
enter
fistl
jge
xchg
aas
js
jg
idiv
mov
insb
aas
mov
cmp
jle
cmp
out
in
lcall
jg
cmp
pop
pop
dec
ret
mov
lods
adc
jmp
mov
movsl
lds
es
repz
cltd
dec
testl
js
mov
mov
jmp
dec
aam
fwait
imul
inc
jg
pusha
sbb
int3
out
out
mov
xchg
jnp
sbb
sti
or
inc
sar
add
inc
adc
mov
jno
cli
jb
mov
std
or
sub
call
mov
ret
popf
dec
mov
lock
sbb
xchg
inc
mov
xor
daa
sub
lods
pop
cld
addr16
sar
or
sbb
pusha
jl
push
mov
or
sub
jae
and
mov
xchg
mov
sub
pop
sbb
pop
fwait
sti
and
jg
aaa
out
jb
xchg
outsl
out
xchg
enter
xor
data16
dec
add
mov
xor
scas
jmp
addb
iret
jb
int3
pop
ss
mov
cmp
lock
push
lahf
in
loopne
mov
sarl
adcl
pop
xchg
enter
insl
js
aaa
xorl
xor
stos
push
dec
fwait
cwtl
push
jno
xchg
mov
out
cmp
add
das
mov
pusha
mov
fisubrl
add
xchg
xchg
std
or
or
hlt
sub
loop
xor
aaa
mov
and
sbb
mov
mov
nop
stos
outsb
and
daa
dec
xchg
outsb
pop
add
xchg
pop
add
jg
adc
loopne
cmp
mov
sbb
mov
push
push
jne
popa
jecxz
mov
scas
or
lods
dec
rolb
fwait
xchg
xchg
push
fisttpll
xchg
add
sti
inc
loop
loopne
lds
mov
ja
sahf
rcl
jns
xchg
mov
mov
mov
and
ret
movsl
daa
rorl
mov
mov
addl
add
pop
shrl
mov
mov
sahf
xchg
push
roll
je
fldl
adc
fisubrs
notb
xor
pop
mov
push
mov
je
push
jb
adc
aam
lcall
repz
repz
in
sbb
push
aam
adc
jg
enter
jge
sub
mov
je
fucomp
sub
push
pop
push
insl
icebp
rcrl
push
mov
xchg
scas
fwait
ljmp
loop
sub
jl
test
repz
fsubrl
repz
and
push
mov
sub
jg
add
cmp
or
adcl
jp
popf
lea
data16
clc
inc
andb
pop
out
push
mov
movsl
xchg
in
jecxz
xchg
sarl
inc
jecxz
pop
sub
shlb
fistps
les
into
xchg
ja
addr16
insb
cmpsb
mov
out
xor
push
daa
mov
leave
push
dec
push
into
lahf
sarl
hlt
xchg
mov
lret
icebp
push
cmpsl
lcall
or
cmp
cwtl
adc
and
jp
out
xor
outsb
dec
sbb
aad
aaa
adcl
xchg
xlat
add
stos
movsl
xchg
aad
mov
dec
scas
jp
gs
cmpsl
cmp
mov
mov
test
adc
shlb
fildl
lods
test
lds
pop
add
and
dec
aad
les
pop
mov
test
movsb
sub
sbb
lea
and
xchg
jns
inc
ret
mov
xchg
repz
les
or
and
xor
and
in
fstl
aaa
icebp
aad
clc
xchg
outsl
nopl
mov
inc
mov
sub
imul
cs
push
dec
popf
or
notb
push
mov
cmpsl
mov
sbbb
mov
int3
cwtl
lcall
xchg
test
iret
cmc
inc
loopne
sub
adc
lcall
and
add
push
mov
push
xorl
ljmp
xchg
popf
or
adc
sub
icebp
das
in
sbb
mov
fdivp
push
sbb
movsb
ljmp
xchg
mov
sbb
sub
add
cli
mov
inc
mov
pop
stos
fdivl
and
cs
cvtpi2ps
stos
or
nop
mov
inc
mov
mov
clc
add
cli
les
sahf
lock
mov
cmpsl
sbb
pop
sbb
daa
movsl
mov
dec
inc
adc
xchg
mov
decb
aas
cmpsb
imul
mov
and
ljmp
mov
mov
mov
push
jbe
push
pop
verw
mov
lahf
mov
orl
sti
jo
loope
leave
dec
dec
pop
out
mov
stos
rcrl
outsl
test
inc
pop
mov
aam
psubw
xchg
jbe
test
int3
out
mov
push
call
cltd
ss
test
mov
xchg
push
mov
dec
lods
push
pop
fcmovb
lods
jno
add
insb
xchg
cmp
lock
mov
and
add
inc
in
dec
push
add
lock
dec
adc
loopne
dec
daa
xor
and
adc
flds
push
jge
mov
imul
xchg
mov
addr16
inc
scas
or
xchg
adc
cmc
push
add
xor
or
enter
dec
mov
fcoms
sbb
sbb
imul
xchg
or
insb
pop
je
cmc
push
mulb
addb
mov
movsb
dec
mov
shrl
aam
adc
xlat
jno
xlat
pop
xchg
mov
jo
mov
repnz
fwait
es
idivl
pushf
add
mov
sbb
iret
and
sbb
ficompl
loop
sbb
movb
das
mov
push
add
jl
inc
push
push
shll
int
fmull
xchg
push
xor
jmp
mov
jae
cmp
sahf
or
sub
pusha
or
repz
ret
sub
pop
mov
sbb
xchg
ljmp
xchg
lea
add
cltd
fistpll
iret
lahf
clc
test
mov
lock
into
inc
into
lret
ret
or
std
or
mov
pusha
xlat
adc
ret
sub
jnp
xlat
mov
call
addr16
out
mov
xchg
in
stc
push
loope
xchg
adcl
cltd
jl
or
inc
jae
push
addr16
mov
or
cmpl
xlat
jg
adc
pop
rcrl
inc
and
popf
ret
adc
or
pop
xchg
addr16
cmpsb
push
idiv
lock
mov
xor
ficoml
jp
push
ss
cld
rclb
adc
mov
dec
mov
sti
xchg
fsubrl
cli
cld
lahf
pop
or
aaa
add
or
pushf
jne
rorb
repnz
loopne
clc
mov
jp
fmulp
mov
inc
jne
js
icebp
jb
imul
dec
ret
cli
mov
cmovs
sahf
and
cmp
and
pop
adc
nop
cmp
sbb
test
testl
inc
sti
imul
push
into
cs
mov
das
test
fstps
nop
sub
cmp
iret
jb
out
dec
pop
jl
sub
testb
mov
stc
fwait
orl
aam
jno
aam
add
mov
pop
add
cwtl
cltd
mov
xor
lahf
repz
cmpb
adc
subl
sbb
add
xlat
mov
arpl
imul
push
int3
jmp
dec
adcl
jl
fdivrs
add
imull
adc
cltd
add
add
test
std
xchg
mov
sbb
mov
sub
loope
push
bound
test
test
cmp
repnz
sbb
gs
out
sub
add
mov
ds
icebp
sub
push
sub
xorb
mov
imull
popa
mov
int
jmp
sbb
sahf
cmc
add
mov
scas
jp
movsl
popa
cmp
pop
shlb
testb
pop
mov
in
fmuls
ljmp
loopne
mov
fiaddl
int3
aam
ja
xchg
jl
arpl
inc
xchg
mov
pop
movsb
inc
call
movsb
cmp
adc
mov
fisttpll
xor
jns
stc
xlat
pop
ljmp
mov
inc
addr16
sbb
push
mov
mov
inc
jp
dec
ds
push
xchg
sub
fdivrl
push
aad
fists
push
pop
inc
pop
das
sub
sarl
dec
nop
test
adc
popa
sbb
and
push
int
jae
xor
xor
mov
push
xchg
lock
adc
xchg
bound
cmp
pop
daa
or
push
cwtl
fsubs
inc
enter
pop
mov
xor
sar
in
test
or
stc
loope
jno
mov
ds
fisttpll
lahf
push
cwtl
xor
mov
aaa
jl
push
iret
dec
jmp
inc
cli
dec
pop
fcmovnbe
mov
out
repnz
push
inc
xchg
add
ret
sbbb
cld
mov
cli
xor
ss
xor
test
push
lock
insb
rolb
sarb
cmp
es
xor
lock
jecxz
mov
int
or
mov
lea
lds
jae
cmc
fcomps
xor
mov
adc
ljmp
xchg
and
fxch
push
pop
and
cmp
and
bound
js
xchg
inc
cmp
scas
outsb
nop
and
cmp
out
imul
mov
xchg
jne
jecxz
popa
push
aam
mov
or
sub
xor
dec
dec
jb
push
sub
and
jp
or
scas
fwait
add
jg
cld
inc
lods
mov
mov
xchg
dec
idiv
fistl
outsb
rcll
mov
cmpsb
call
stos
push
mov
inc
push
xorl
inc
sarb
lds
scas
es
jmp
pop
xchg
sub
inc
mov
andnps
pop
xchg
mov
add
aam
xor
xlat
test
cmp
or
scas
xchg
sub
in
cltd
btr
adc
pushf
lcall
pop
pop
and
add
mov
mov
add
sbb
mov
sbb
lcall
out
cmp
or
cmp
int
out
sub
test
push
xor
inc
push
sbb
lret
push
ds
fnsave
lea
pop
push
sub
jecxz
shll
sahf
sti
pusha
push
sub
mov
aad
add
in
jge
aas
lret
jno
cmp
test
jae
sub
mov
xor
js
dec
or
mov
cmp
mov
mov
mov
cmp
imul
adc
test
cld
inc
jmp
icebp
fwait
mov
ret
divb
and
popf
repnz
jmp
sarl
mov
aaa
cwtl
loop
cmp
push
ret
fidivs
adc
or
psrad
pop
xor
push
adc
ret
mov
imul
movsl
dec
aam
mov
xorl
nopl
in
sub
jo
push
nop
clc
lods
adcl
dec
inc
adc
cmc
cmp
in
pop
popf
in
rcrl
jno
rolb
xchg
mov
fimuls
adc
cltd
inc
push
jg
mov
mov
or
pop
divl
clc
jno
popa
test
sarb
call
mov
int3
bnd
jecxz
jnp
mov
push
test
jns
inc
mov
sbb
in
cmp
mov
pop
jae
cmpsb
add
test
mov
xchg
test
fstpl
stos
cmp
popa
pusha
cmp
sbb
insl
add
enter
jnp
mov
fiaddl
cs
adcb
mov
pop
pop
mov
or
push
jge
das
inc
stos
sbb
fnstcw
das
mov
or
sub
rclb
repnz
test
sbb
imul
aaa
mov
rcl
ret
mov
mov
sbb
sub
sti
dec
mov
jnp
mov
add
mov
inc
sbb
cmpsb
and
push
es
mov
mov
testl
xchg
cs
cmpl
movd
dec
jo
inc
or
sub
lds
sub
add
mov
in
push
xchg
add
loop
insl
sub
in
add
cmpsb
movsl
push
aam
mov
adc
cmp
sbb
adc
dec
jno
cmp
aam
and
jb
push
ret
sub
les
ljmp
fildll
adc
sbb
lea
aad
jmp
mov
sub
jae
in
add
testl
or
push
cmp
sub
dec
mov
push
and
cs
add
jle
jecxz
psubd
jp
and
mov
cmp
pop
mov
lret
mov
test
stos
stc
and
cmp
xor
xor
mov
data16
loop
pusha
scas
add
icebp
jecxz
adc
rorb
pop
xchg
jecxz
push
add
push
adc
test
test
shll
or
nop
bnd
jb
inc
fsts
mov
stos
rolb
xor
inc
das
call
cmc
dec
mov
adc
xchg
das
stos
push
loop
or
int
rorb
into
fdivr
dec
insb
mov
mov
lock
sub
fdivrs
cmp
jns
cmc
jb
arpl
jb
ss
adc
and
adc
pop
sbb
test
aam
xchg
ret
xchg
push
fs
jnp
movsl
mov
arpl
loop
mov
jne
mov
push
mov
and
cmp
mov
inc
cmc
rclb
jno
inc
into
outsb
cmp
or
shll
jmp
push
lea
mov
stos
xor
dec
push
mov
pusha
xchg
jecxz
xorb
clc
nop
mov
fxtract
jns
xchg
adc
lods
jno
outsl
loopne
lock
xor
mov
cmp
cmp
cmp
arpl
add
or
sarb
pusha
jns
or
repnz
ja
push
dec
adc
ljmp
or
xchg
out
mov
pop
daa
jnp
lods
push
pop
rcll
dec
shl
imul
lds
mov
pop
loop
nop
push
popa
rolb
rorb
not
rcr
jae
dec
pop
stos
iret
lcall
ud2
ja
mov
test
sahf
leave
test
mov
jecxz
mov
andl
cmp
jmp
mov
jb
inc
or
push
jmp
scas
dec
pop
nop
lods
sub
mov
jle
push
or
in
subl
mov
sub
xor
or
lret
loop
scas
mov
add
pusha
test
inc
adc
adc
push
mov
jecxz
aad
jns
movb
cvtps2pd
pop
bound
scas
js
loopne
inc
stc
push
cmp
mov
mov
jge
cmc
and
dec
push
sbb
inc
out
lahf
fs
inc
pop
mov
imul
movsb
pop
xor
xchg
cli
rorl
pop
cld
lcallw
push
pop
adc
adc
aad
test
inc
xor
jmp
cmp
call
mull
or
repnz
xchg
xchg
dec
test
xchg
scas
mov
dec
clc
fcoml
sti
aas
lcall
xor
lods
arpl
das
mov
xor
test
std
pushf
xlat
mov
xchg
hlt
fcoml
sbb
push
mov
movsl
cmpsb
add
mov
xchg
fsubr
push
outsb
fs
les
lcall
xor
xchg
int
add
cmc
inc
or
movsl
push
enter
lds
divl
je
inc
pop
sbb
sub
mov
addl
sbb
pop
sub
inc
lea
stos
adc
test
or
xor
scas
jo
adc
neg
lahf
mov
fs
mov
pop
xor
add
ror
ret
lods
mov
popf
jb
bound
dec
inc
pop
xor
add
ror
ret
lods
mov
popf
jb
bound
xor
add
ror
ret
lods
mov
popf
jae
arpl
dec
inc
pop
xor
add
js
ret
and
jge
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fimuls
pop
mov
mov
js
or
jmp
sti
push
mov
jae
arpl
mov
mov
sbb
sub
inc
inc
lret
add
sbb
out
fwait
jae
arpl
xor
or
cmp
lret
outsl
clc
push
cltd
inc
lcall
adc
sarb
mov
jnp
sub
mov
sub
scas
cmp
test
mov
push
mov
and
lahf
sbb
rorl
or
fsubs
xor
and
dec
lahf
mov
push
repnz
out
ljmp
and
add
outsb
push
popf
cld
push
int3
mov
stos
lods
sahf
into
fwait
subb
add
push
sti
jg
inc
imulb
test
sbb
inc
loope
push
xor
and
outsl
fcompl
fimuls
pushf
mov
dec
cmp
sub
inc
xchg
mov
stos
sbb
xor
xchg
int3
adc
jmp
stos
push
inc
push
into
adc
jnp
cmp
cmp
jbe
sbb
mov
adc
out
mov
ss
jae
mov
imul
rorl
xchg
repz
loope
xchg
fucomi
jmp
sti
xor
pop
shl
dec
cmc
sbb
imul
mov
insl
subb
inc
fisubl
inc
cmp
sub
cmc
xchg
or
hlt
push
push
push
lahf
inc
nop
pop
sub
dec
sahf
and
es
mov
ret
sbb
push
xchg
and
jecxz
adc
add
xor
and
push
mov
jae
arpl
mov
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jae
arpl
sbb
mov
pop
fildll
pop
test
or
inc
push
js
adc
aam
xchg
sbb
scas
sbb
pop
lahf
jns
push
dec
hlt
fbstp
mov
xor
pop
mov
or
std
jmp
jl
push
test
mov
ds
mov
dec
push
push
fwait
adc
or
movsb
mov
cld
sbb
mov
fs
or
dec
daa
lret
add
pop
lock
mov
mov
xchg
and
leave
test
inc
and
mov
aas
aad
jno
jecxz
stos
gs
push
data16
out
cmc
int
das
ljmp
mov
bound
push
xor
rorb
ds
int3
or
shll
pop
loop
test
div
test
add
push
shrl
das
mov
cmp
inc
jnp
mov
xor
pop
mov
push
and
or
imulb
sub
xor
xor
and
ret
jb
sub
cmp
mov
mov
or
stc
push
repz
sub
pusha
stos
imull
mov
inc
stc
insb
jno
and
jmp
cmpsb
mov
mov
pop
adc
add
out
adc
scas
lea
xchg
int3
or
fadd
cmc
push
inc
mov
mov
jb
mov
sub
inc
aaa
outsb
or
ret
jmp
clc
cmp
call
push
pop
mov
mov
stc
icebp
mov
cmp
adc
sbb
sti
adc
add
cmp
mov
add
mov
div
adc
inc
xchg
insl
lcall
outsl
add
push
push
cmp
xor
loop
jmp
xlat
mov
aad
vpsrld
xchg
imul
push
scas
jg
sub
cmpsl
imul
cmc
leave
test
pop
out
sub
xor
es
orl
mov
or
or
movsl
shll
push
test
or
inc
mov
cmc
xor
js
mov
jg
mov
dec
hlt
pop
pop
xchg
and
and
pusha
pop
lahf
pop
xchg
adc
out
or
jbe
adc
nop
push
dec
cli
xor
fs
clc
push
loope
aas
aas
mov
adc
adc
in
enter
imul
dec
rcrl
gs
or
mov
mov
rol
out
repz
fldl
dec
addr16
lock
mov
dec
lock
nop
adc
mov
int
adc
add
jmp
pop
push
push
lret
dec
cmp
jge
push
decl
pop
xchg
test
xchg
test
dec
scas
out
sub
nop
xchg
jg
and
jnp
aad
sti
orl
andl
data16
les
mov
mov
je
adc
lcall
cmp
pop
xor
cs
jno
xor
or
scas
push
pop
in
sub
cmpsb
mov
mov
aaa
mov
mov
popf
mov
push
cmp
and
pusha
pop
sbb
jl
cmpsl
je
mov
out
into
testl
iret
xchg
sub
je
cmp
push
add
adc
cmpsb
lods
dec
push
add
ss
popa
and
fstpt
push
sbb
sub
popa
clc
imul
jle
pop
out
movsb
out
call
sarb
shr
jno
sbb
push
test
mov
cmp
pusha
add
in
idivb
inc
cwtl
out
insl
cmp
add
lret
xchg
lea
rorb
xchg
movsb
les
or
pusha
mov
fdiv
jle
push
mov
pusha
daa
mov
sub
xlat
sub
dec
or
rorb
add
rcll
mull
addr16
out
clc
jmp
iret
rorl
push
pop
sti
lret
jmp
or
add
adc
fimuls
fcmove
cli
ret
sahf
cmp
inc
and
mov
cmp
mov
cmc
fdiv
adc
aad
jecxz
push
movsb
ljmp
and
out
nop
mov
inc
sub
and
clc
lods
sbbl
mov
or
scas
imul
dec
xor
mov
call
call
push
testl
fstpl
repz
pushf
cltd
pop
jo
lds
iret
loopne
xor
sub
inc
mov
push
loope
je
pop
lods
mov
cmpb
mov
ficompl
jne
daa
popf
dec
mull
inc
arpl
xor
pop
clc
push
inc
xor
js
dec
cmpsl
sbb
lcall
mov
cmp
fcoms
popa
xor
mov
arpl
movsl
jle
roll
mov
jmp
jnp
xor
cmp
sub
sbb
jecxz
or
xchg
and
xlat
popf
insb
cld
xor
cmc
cmp
movsl
dec
sub
cld
rcll
pop
or
lahf
jge
imul
xchg
ljmp
add
scas
jge
push
jo
lahf
cltd
pop
inc
nop
push
imul
fstl
aam
mov
mov
stos
sbb
lcall
sahf
cltd
add
lahf
xchg
mov
insb
jle
dec
push
sbb
rcll
lahf
xlat
lahf
pop
hlt
cmp
cmpsb
pop
stc
fsubrs
mov
icebp
push
add
cmc
fucomip
data16
insb
cmp
push
add
loopne
mov
ret
lods
in
mov
push
pop
push
sbb
jp
andl
mov
pop
mov
and
cli
mov
fcomip
and
dec
lcall
inc
mov
mov
jmp
clc
xor
jge
rcll
mov
loopne
andl
sub
cmc
loopne
or
cmp
xor
cld
lods
cs
addl
xor
lea
adc
data16
sbb
outsl
mov
mov
push
ja
or
outsb
gs
adc
jmp
xor
mov
mov
mov
pop
adc
xor
mov
mov
pop
aad
icebp
dec
add
push
ja
add
push
mov
test
hlt
ja
mov
pop
jp
push
push
cmp
je
dec
sbb
lret
mov
push
imul
inc
mov
cli
dec
clc
mov
mov
rcll
ss
mov
and
mov
add
mov
jae
bound
imul
mov
xchg
and
iret
out
push
adc
mov
cmp
or
test
out
aas
loop
xchg
mov
sbb
xlat
mov
pop
sub
inc
ss
ret
fs
xrelease
in
jmp
jb
cld
xlat
mov
push
adcb
js
out
or
push
sbbl
dec
mov
dec
inc
pusha
cmp
gs
add
adc
iret
nop
sbbl
push
sub
adc
aad
xchg
jae
jmp
mov
adc
in
imul
pop
sub
jp
push
or
inc
push
or
nop
or
imul
cmp
cli
loopne
inc
fldenv
lahf
insl
mov
pop
jle
inc
xchg
inc
xchg
sub
push
xor
mov
call
mov
mov
stos
add
std
int
and
inc
xor
pop
xchg
and
cmpsl
fmuls
push
scas
inc
loop
mov
push
push
jecxz
popf
stos
xchg
cli
jle
lock
test
adc
push
loopne
adc
shll
sti
pop
ret
push
pushf
bound
daa
pusha
or
add
mov
push
sub
adcb
xor
mov
cmp
call
test
inc
cmp
fidivs
jno
push
ljmp
mov
jg
shrb
push
aas
pop
mov
idivb
inc
cmc
xor
divb
pop
repz
imul
xchg
in
adc
mov
in
ja
popa
cmp
inc
imul
lods
sbb
push
insl
mov
lods
push
mov
add
test
jmp
les
mov
push
add
pop
pop
cltd
insb
lods
es
aam
aaa
mov
pop
sub
icebp
ret
lret
mov
cmp
xor
push
lds
jae
mov
add
adc
imulb
lods
out
shlb
and
pop
pop
cmp
mov
das
std
mov
xchg
mov
fadd
in
insl
ss
fwait
jno
lea
dec
and
cmpsb
mov
mov
sbbl
scas
mov
cmpsb
dec
push
lcall
jo
inc
xor
je
push
lds
in
insb
xlat
xchg
jle
adc
xor
ds
ljmp
fmull
jae
add
pusha
mov
xor
jmp
push
fbstp
cmp
pop
test
mov
inc
ja
mov
inc
aam
mov
add
push
inc
push
and
push
xor
mov
and
push
pop
mov
jo
aam
cmp
xor
in
fmull
je
jbe
push
shrb
out
inc
fwait
push
xor
push
shlb
mov
imul
cli
addl
sub
or
cmp
add
add
dec
daa
sahf
mov
mov
push
cmp
ret
out
lret
inc
cld
aas
sbb
imul
fwait
cli
inc
test
nop
decl
movsb
fisttpl
mov
rclb
out
xchg
js
jmp
jmp
repnz
and
pop
jno
xor
mov
xor
sbb
lods
push
inc
jae
jae
rorb
je
inc
ds
scas
cltd
jb
subb
cmpsb
cmp
std
ret
pop
sub
clc
stc
into
in
cmp
sub
add
inc
xchg
xchg
pop
add
into
and
cmp
shll
sbb
cmp
fidivl
fs
data16
cmp
mov
xor
loopne
stos
xchg
sub
nop
jns
xchg
pusha
dec
push
cmpsb
jo
cwtl
roll
add
out
mov
push
ja
loope
jmp
je
sub
prefetch
add
ret
call
loopne
fwait
sub
adc
sbb
sahf
inc
sar
jmp
sbb
inc
or
dec
scas
pop
xchg
nop
aas
stc
stc
mov
add
add
dec
iret
pusha
in
lret
push
push
push
sbb
dec
into
mov
imul
cld
adc
jg
push
pop
in
push
or
jg
rolb
insb
push
sub
cli
mov
test
or
test
xchg
dec
dec
in
pop
inc
xor
jno
mov
pop
adc
gs
push
cmpsl
xchg
jl
push
sbb
inc
sbb
out
popa
fldl
cld
insl
rcl
out
fstl
push
je
lods
mov
mov
sub
lret
mov
inc
and
mov
mov
xchg
lret
xchg
out
sub
inc
xor
mov
popf
sub
jle
fs
lock
mov
cwtl
enter
inc
insb
popa
test
pop
mov
jp
mov
push
fdivrs
cmpsl
sub
dec
cmpsl
xor
add
mov
pop
add
xor
dec
cmp
int3
jmp
in
inc
push
xchg
rorl
mul
pop
ss
dec
movsl
loop
in
int3
mov
mov
and
pop
loope
fdiv
cmp
lea
mov
push
mov
adc
dec
push
ss
dec
sub
and
jno
lods
mov
in
out
fisubl
test
inc
loope
ret
lcall
icebp
xchg
repnz
out
dec
mov
insb
lods
add
fs
jg
inc
inc
cld
mov
movsl
in
leave
jno,pt
dec
cmp
popa
or
aas
and
xchg
fdivl
and
je
jg
and
shlb
adc
mov
mov
cmp
adc
push
jne
sub
jne
xor
mov
adc
hlt
cmp
out
pop
pop
mov
in
aas
push
or
sbb
out
fsubrp
push
pop
aas
mov
mov
pushf
cmpsl
adc
inc
cmpsl
arpl
inc
std
test
xchg
out
pop
movsl
pushf
pop
pop
xchg
stc
cmp
js
and
mov
insl
mov
push
pop
ss
or
jb
leave
sub
nop
inc
loope
in
and
leave
adc
mov
inc
out
xchg
adc
xor
fcoms
add
add
inc
sub
mov
cmp
mov
jecxz
mov
add
hlt
push
add
push
pop
aad
ret
and
mov
adcl
sub
test
mov
xor
mov
mov
push
enter
jl
mov
pop
lds
test
fwait
adc
mov
std
push
loope
push
scas
lods
mov
or
mov
scas
enter
add
jb
enter
enter
mov
fistl
std
mov
mov
lahf
mov
mov
add
iret
dec
jecxz
jbe
test
movsb
cmp
pop
push
insb
stc
repz
and
das
call
pop
addl
scas
lods
sub
inc
add
or
sbbb
jns
in
lahf
inc
add
leave
inc
xchg
cli
xchg
in
add
or
mov
fisttps
pushf
aas
mov
test
insb
push
mov
push
stos
lods
sub
inc
outsl
out
add
pop
sub
or
adc
shll
sub
cltd
lahf
mov
mov
rcrb
popa
pop
insb
lret
and
inc
xor
popa
xor
push
xor
outsl
or
cmp
leave
cmp
sbb
add
dec
cmpsb
ficoms
jbe
adc
repz
imul
hlt
ret
mov
test
dec
jb
es
into
aad
and
nop
insl
push
sub
jg
jae
mov
stos
mov
aam
adc
jg
call
ljmp
ljmp
int3
dec
or
outsl
rcrb
xor
insb
adc
sti
dec
fistpl
and
or
or
cs
mov
test
mov
adc
xor
inc
scas
fstp
hlt
sbb
sub
push
mov
cltd
iret
push
mov
jg
mov
out
int3
mov
push
ficomps
lret
arpl
inc
test
cmp
ljmp
test
pop
andl
mov
dec
insb
mov
icebp
xchg
aaa
cmp
stos
dec
dec
xchg
xor
push
shrl
push
xor
imul
pop
mov
fstpl
push
dec
push
ret
fldcw
jbe
cld
adc
daa
sbb
add
lods
jnp
jne
cmc
push
scas
fsubp
sbb
pushf
adc
jecxz
push
mov
scas
push
inc
xor
dec
mov
push
pushf
push
out
dec
adc
loopne
out
test
or
dec
pop
push
pushf
ficoms
push
xchg
test
mov
cmp
add
pop
adc
push
mov
inc
xchg
cmc
aas
mov
arpl
mov
out
in
nop
popf
shrl
test
adc
xor
or
inc
add
lock
lahf
ret
sub
cmp
inc
adc
repnz
pop
int
mov
test
rol
test
xchg
mov
sub
loope
dec
mov
ds
lea
cmp
add
out
push
xchg
jno
jne
fldt
jecxz
pop
mov
mov
mov
aam
pop
jge
pop
sbb
je
popa
dec
shll
push
push
xchg
adc
mov
fnstsw
arpl
arpl
clc
push
adc
scas
aad
vcvtdq2ps
int
pop
imul
dec
mov
cld
test
dec
add
out
adc
lcall
loope
mov
jb
push
add
enter
stc
adc
xorb
inc
lods
outsl
jns
xchg
lods
ret
jle
add
or
push
push
out
nop
cmc
xor
mov
cmp
arpl
stos
adc
add
and
lds
daa
stos
sub
stos
gs
scas
cmp
push
jle
sub
dec
test
lods
add
xor
mov
bound
mov
lods
in
cld
aam
cmp
xor
jecxz
push
outsb
sbb
std
sbb
push
sbb
aad
inc
daa
lds
mov
adc
fnstenv
aas
maskmovq
testl
mov
inc
mov
inc
mov
jmp
iret
stos
aad
ret
pop
cs
adc
rsm
sbbb
pop
arpl
push
sbb
mov
jle
mov
lock
aad
or
inc
iret
inc
push
add
mov
in
mov
aam
enter
jp
dec
push
xor
jae
dec
pop
and
jae
outsb
leave
fwait
dec
sub
mov
xchg
adc
push
std
shl
cmp
rcll
jp
sbb
lret
fisttpll
xor
cmp
push
xchg
dec
lahf
and
out
pop
lea
adc
mov
add
lahf
sbb
shrl
lods
test
sbb
inc
je
int
into
mov
cwtl
push
and
lea
dec
repz
mov
jne
pop
xchg
in
inc
pop
mov
lock
jno
add
popa
push
ljmp
mov
mov
xlat
mov
enter
in
sbb
dec
push
push
or
lods
mov
rorb
xlat
mov
or
pop
out
ficomps
dec
jp
hlt
out
cmp
rorb
push
cmp
xchg
enter
ret
call
scas
cmpsl
jl
cmp
stos
inc
and
test
sub
add
int
mov
pusha
sbb
sbb
out
and
jle
pop
mov
push
icebp
pushf
pusha
fidivl
dec
insb
aaa
cltd
jo
lcall
int3
push
push
ficomps
xchg
fwait
mov
std
imul
fidivrs
xor
add
xor
imul
lret
fcoml
jecxz
sub
sub
cli
fldenv
adc
push
sub
ss
sti
fimuls
ret
jle
pop
mov
adc
adc
push
inc
imulb
in
and
iret
out
int3
cmc
or
sarl
ljmp
cmc
out
jne
push
dec
scas
neg
mov
fistpll
lock
add
loopne
orl
lcall
fstpl
ficoml
out
leave
sahf
pop
mov
xor
in
scas
and
cmp
ss
int3
das
int
aas
jmp
fucomip
adcl
inc
and
repz
into
mov
test
inc
cmp
adc
pusha
jo
lea
pop
fld
and
lods
dec
outsl
jne
sbb
mov
add
adc
dec
in
sub
xor
aad
lahf
ss
fdivrl
lds
inc
jp
je
and
push
sbb
dec
jg
fisubl
out
enter
pop
xchg
jmp
xlat
xchg
mov
enter
pop
data16
leave
sbb
cltd
test
adc
push
clc
xor
fdiv
test
scas
insb
arpl
cltd
mov
push
aam
cmp
pushf
xor
enter
adc
ficomps
cwtl
ficompl
cltd
xchg
pop
pop
add
hlt
mov
dec
nop
sti
push
call
dec
cmpsl
sahf
outsb
jmp
sbb
pushf
cmpb
lret
out
lock
lock
cwtl
cld
mov
xor
push
stc
out
jae
jae
hlt
or
out
jne
mov
adc
xchg
movsl
xchg
int3
push
mov
sbb
inc
pop
jg,pn
sbb
shl
push
jmp
es
adc
out
testb
sarb
push
movsl
aaa
int3
mov
mov
jne
dec
ret
cli
pop
movsl
test
std
sbb
xor
inc
daa
dec
out
pusha
xchg
clc
and
stos
ja
push
pop
and
adc
divb
ljmp
fcmovnbe
sbb
sbb
iret
dec
jp
sti
outsb
ss
xor
scas
sbbl
jl
mov
and
scas
jmp
fwait
xor
outsb
subl
lock
movsb
inc
addl
dec
adc
pop
enter
shrb
inc
inc
mov
add
push
scas
int
push
cmp
push
push
and
push
mov
pop
test
insl
sub
test
xor
or
mov
and
cmp
pop
inc
sti
sti
inc
fs
lret
pop
push
outsl
rcl
filds
lock
sbb
imul
fwait
into
add
push
inc
out
test
fyl2xp1
daa
clc
dec
inc
shrb
jne
rorl
add
sub
xrelease
dec
mov
xchg
lea
mov
rorl
xor
daa
popa
ror
jle
pusha
leave
lods
xchg
sub
sahf
fs
push
inc
xor
fadds
push
mov
inc
xchg
mov
es
divl
rclb
into
flds
lock
jb
gs
cmpb
loope
fnsave
push
dec
nop
lds
pop
lret
mov
adc
jg
xor
adc
clc
push
push
adc
push
xchg
sbb
push
cmpsl
stc
dec
add
notl
mov
repnz
pop
fcompl
xchg
cmp
scas
pushf
or
xchg
mov
in
ds
sbb
push
mov
les
lea
fwait
call
push
int3
xchg
sub
jns
aaa
adcb
pop
mov
xchg
data16
dec
inc
fistpll
add
repnz
xchg
xchg
call
jnp
cmpb
scas
cmpsb
jae
ss
fsubrl
add
roll
outsl
fwait
pmuludq
mov
jb
sbb
mov
cmp
adc
push
es
pusha
xchg
or
sub
fistpl
stos
fisubrl
in
mov
test
out
xor
idivb
rcl
push
dec
xchg
rol
dec
jno
in
cwtl
xor
or
movsl
pop
lods
das
mov
iret
int
cmp
fs
and
out
jmp
shlb
arpl
jge
es
sub
sub
jo
xchg
movsb
movsl
and
negl
mov
sub
enter
fildl
xchg
add
cmpsl
and
movsl
scas
inc
mov
push
lods
push
xchg
jno
sbb
mov
or
lcall
cld
mov
push
iret
push
inc
add
cmpsb
inc
jno
push
dec
lock
xchg
cmp
jge
in
es
mov
and
aam
pop
lock
jb
mov
jmp
xor
in
sahf
cmpsb
enter
sub
mov
add
inc
lds
mov
aad
jecxz
and
je
pop
push
pop
test
stos
daa
xor
rorl
dec
cmp
jge
out
dec
xchg
clc
jnp
or
call
push
mov
jo
lods
fidivs
xchg
out
test
jmp
fists
jae
sarl
mov
sub
loopne
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jae
arpl
mov
mov
sbb
sub
cmp
lret
add
xor
and
push
mov
jae
arpl
mov
or
sbb
sub
cmp
lret
add
cmp
daa
sti
push
mov
ja
push
mov
cmp
jnp
or
sbb
sub
adc
cld
jno
jmp
mov
lret
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
