pushl
testb
lock
cmp
jne
push
call
mov
ljmp
adc
inc
cld
adc
test
je
pushl
mov
push
mov
call
push
xor
cmp
std
ja
or
xchg
rclb
adc
add
push
inc
mov
jmp
mov
in
mov
add
jne
sub
or
in
ja
add
add
add
push
fidivs
dec
sbb
push
decl
test
out
mov
add
jo
mov
push
fidivl
xor
imul
push
pslld
and
xor
adc
cmpsl
mov
cmpsb
and
data16
or
adc
or
add
inc
pop
mov
ret
ds
or
push
cltd
push
fiadds
cmpl
subb
sbb
daa
xchg
dec
mov
add
mov
mov
adc
push
insl
push
sbb
cmp
in
test
sbbl
dec
shlb
ret
sti
mov
lcall
inc
rclb
call
ds
adc
je
sbb
cmp
jmp
andl
iret
add
repz
adc
jmp
xor
adc
jmp
data16
je
les
je
iret
pushf
shl
aam
nop
sbb
add
std
test
arpl
dec
jmp
mov
and
into
pop
nop
adc
or
outsl
insl
shlb
test
enter
pop
pop
pop
lock
out
mov
add
push
in
add
orl
lea
sbb
inc
sub
mov
add
add
sbb
lods
cmp
push
cmp
mov
push
dec
aas
mov
cmpsb
orb
outsb
ja
sbb
push
adc
sahf
xchg
or
mov
call
push
jp
ds
mov
scas
in
test
cmpsl
jg
mov
pop
add
add
lock
addl
jg
and
mov
neg
sbb
and
push
fildll
mov
movsb
or
fiadds
cmp
jne
pop
xor
cmp
jne
or
and
add
aam
dec
fdivs
test
mov
push
add
inc
loope
aas
ret
sub
jg
adc
jge
add
xor
je
or
sbb
testb
lock
loop
call
neg
sbb
and
push
push
push
xchg
jg
popa
push
sub
data16
loopne
xchg
setb
fsubrs
in
jo
lcall
cmp
push
invd
cmp
ljmp
xchg
or
in
or
fistl
test
leave
aam
movb
fadds
fwait
push
or
mov
add
sbb
ret
out
fidivs
sub
sar
movsb
repnz
aam
ret
cld
dec
push
inc
dec
and
inc
or
or
mov
push
add
fisttpl
in
jge
call
jmp
xorl
mov
mov
cmp
dec
sbb
jl
test
fsub
and
mov
and
inc
sbb
lea
rorl
outsl
outsb
push
aam
and
lea
lahf
cmp
sbb
inc
shrb
je
add
jl
pop
push
sub
and
add
fmuls
ss
sti
add
xor
mov
adc
push
push
jne
push
shlb
push
jle
mov
fmuls
loope
leave
neg
sbb
nop
push
jb
and
adcl
push
and
cmp
cmc
jmp
sbb
sti
inc
mov
sbb
push
fwait
push
fcoml
call
scas
mov
lea
pop
sbb
or
and
sbb
xchg
popf
adc
xchg
or
xlat
and
enter
jns
cmp
inc
jb
adc
ljmp
or
inc
orb
pop
pop
sbb
push
add
jmp
decl
aad
fcmovnb
xor
adc
add
and
shlb
jns
jns
mov
add
ds
aam
jns
ror
pushf
cmp
add
repnz
int
aad
dec
jae
push
stos
xor
mov
dec
cmp
xor
pusha
fs
or
sub
inc
cmpsb
pushf
pushf
xor
aam
push
fadd
incl
sbb
filds
sbb
jg
cmp
pop
push
or
int
outsb
pop
loopne
inc
imul
mov
push
mov
divl
cmp
fdivr
mov
in
cmpsb
and
fs
gs
adc
cmpl
mov
neg
mov
cmp
lcall
fs
lock
mov
call
pushl
mov
test
es
jne
mov
fnsave
ja
lea
push
jmp
in
pop
outsb
lahf
in
sbb
sbb
cmpl
outsl
pop
and
or
dec
add
dec
or
fsub
test
dec
into
pop
jmp
dec
ret
ja
and
pop
adc
pop
and
xchg
add
or
jmp
mov
add
into
inc
and
xor
mov
jnp
jle
pop
xor
push
mov
push
ss
dec
and
les
lock
fimull
xor
shlb
mov
pop
imul
shlb
lcall
loop
clc
cmp
xchg
push
ljmp
in
pop
and
push
mov
loop
ss
fisubl
jbe
and
movsl
mov
cmp
je
lock
outsl
mov
jne
or
iret
movzwl
rorl
and
mov
test
add
fwait
push
jle
and
inc
push
inc
pop
inc
push
mov
add
dec
inc
fbld
adcb
jno
xor
jle
inc
or
jbe
add
jl
adc
or
stc
jb
mov
add
cmp
jb
ret
shll
jb
xchg
sarb
push
xchg
sbb
nop
or
pusha
pop
xor
mov
es
push
out
clc
fsubs
jle
sarb
mov
mov
mov
and
sub
xchg
jbe
jp
mov
mov
sbbl
inc
cli
js
cmp
jne
push
or
lcall
pusha
mov
inc
or
rorb
pop
roll
add
sarb
aaa
ret
sahf
jae
inc
and
fcomip
mov
shlb
inc
and
mov
loopne
js
jmp
aas
insb
mov
mov
sbb
ja
jne
mov
ficoml
push
add
pop
adc
sbb
sbb
sbb
or
mov
dec
or
data16
cli
push
pusha
mov
add
adc
mov
mov
push
cmpsl
outsb
pushf
push
cmp
mov
mov
dec
or
pop
mov
or
fucom
nop
push
dec
sub
outsl
push
nop
push
imul
and
sub
push
push
insw
ja
sub
mov
clc
cmp
sub
sti
test
mov
adc
jne
jecxz
loope
popa
les
in
loope
xor
rol
aaa
cld
loope
out
push
mov
testb
mov
lcall
lahf
add
negb
andnps
dec
adc
shl
xor
mov
adc
pop
or
jl
add
or
in
jle
loopne
mov
xor
test
cmp
clc
ds
notb
iret
inc
mov
push
push
add
add
shrb
add
adc
push
add
or
jp
push
adc
imul
mov
adc
pop
insb
mov
test
cmp
jge
dec
enter
subb
jl
mov
adc
push
push
push
add
rcrb
or
repz
xor
or
push
or
sub
movsb
enter
fadd
cmpsl
xchg
xchg
insb
push
jae
sbb
fldz
push
adc
push
mov
mov
loop
inc
rclb
lods
xor
outsb
icebp
test
or
sti
adc
rcll
xchg
xor
add
out
cmp
push
pop
inc
call
xor
mov
inc
or
add
lea
push
sbb
ss
mov
mov
push
repnz
push
int3
je
push
push
loopne
ss
mov
xchg
or
pop
and
push
mov
lods
mov
push
jne
add
xor
das
inc
adc
mov
jge
shlb
add
or
fists
pusha
lea
addl
rorb
or
incl
incl
mov
mov
or
xchg
enter
fcomp
sbbl
es
adc
lods
mov
shrb
push
adc
dec
prefetcht2
xor
push
rcll
push
ret
shrl
mov
cmp
je
mov
mov
adc
pop
cwtl
push
rcr
loope
mov
push
cli
cwtl
outsb
sti
jno
jo
sub
andl
decb
pop
cmpsb
jl
out
popa
dec
push
jb
mov
mov
les
pushf
mov
psubb
pop
insb
sbb
push
shlb
fwait
and
stc
repnz
ja
add
push
cltd
test
mov
xor
movsb
dec
adc
cmp
loope
lds
push
cmp
int3
jae
push
push
sub
xchg
daa
push
inc
jo
xor
testl
lahf
adc
jl
jmp
movsb
in
push
push
push
lcall
push
pusha
je
mov
sbb
add
add
sbb
pop
dec
or
vaddss
mov
out
sub
pop
mov
pushl
cmp
xchg
int
add
fstps
push
adc
xor
adc
sub
cmpsb
adc
add
cmp
jle
int3
add
cmp
pop
adc
ljmp
adc
fcoml
or
pop
setl
out
or
ret
nop
ret
jmp
inc
xor
js
jp
cli
push
addb
or
sbb
dec
fs
notl
sub
jl
mov
add
data16
jmp
test
shlb
iret
cmp
popa
add
aaa
stc
shlb
add
and
dec
or
mov
int
in
pusha
call
jl,pt
pop
shrb
pushf
rcrl
jb
mov
or
sbb
cmp
jne
ss
push
push
pop
or
fwait
lock
pop
inc
jg
adc
shlb
insb
fmuls
pop
in
sbb
and
test
and
inc
sbb
rorl
push
sub
push
inc
icebp
lea
ss
adc
cmp
pop
ds
jne
daa
fiadds
add
mov
in
pop
outsb
test
ja
and
dec
adc
leave
or
pop
jnp
add
sbb
adc
aas
loop
pusha
cmp
add
lock
jbe
inc
pop
fs
movd
popa
xchg
sahf
fstpl
arpl
mov
jo
or
test
inc
push
sbb
jg
fnstcw
adc
ss
sbb
pop
add
addb
scas
pop
pushf
popl
add
add
mov
js
mov
and
add
fnsave
inc
cld
mov
movsl
loopne
push
xor
inc
adc
add
movl
push
nop
inc
push
inc
aaa
mov
loopne
and
dec
pop
leave
aam
aam
xchg
iret
movl
lock
mov
movsb
pop
jl
test
or
jmp
mov
test
sub
inc
and
sti
jmp
lock
or
add
imul
sub
or
mov
clc
cmpsl
inc
out
movsbl
pop
mov
pushl
fcomip
call
inc
push
push
movsb
stc
inc
out
mov
aam
stc
inc
lcall
jmp
inc
lcall
cwtl
movsbl
pop
push
push
adc
imul
loopne
push
rorb
jg
pop
cmc
push
jne
cmpb
je
add
adc
xor
test
adc
stos
mov
mov
push
push
push
fsts
imul
outsl
adc
cmp
add
lock
sbb
rorl
mov
cmp
pop
mov
mov
push
adc
divb
clc
push
adc
push
in
adc
mov
call
add
test
es
add
ljmp
xor
sti
pop
mov
cmp
add
adc
push
adc
sarb
jp
jne
add
rorb
pop
in
cmpb
xor
cmovl
or
lcall
push
mov
cmp
test
push
ret
jae
or
push
shl
adc
xchg
ret
nop
inc
pop
jl
push
push
or
jbe
mov
cmp
add
inc
insb
cmp
jb
or
lea
or
add
outsl
je
cmp
rorb
xchg
cld
sbb
xor
decl
fucomip
loope
les
call
mov
shlb
mov
push
push
jmp
and
in
sub
inc
shll
jge
gs
push
or
xor
lahf
std
adc
inc
or
sbb
shll
pop
pop
movq
jne
inc
inc
or
pop
pop
mov
mov
jmp
outsl
inc
pop
pop
ja
jbe
add
inc
xor
sub
in
push
xchg
fildl
fs
jmp
sahf
addr16
cmpsl
nop
and
mov
mov
xchg
fdivrs
test
fisttpl
mov
aam
inc
fwait
ss
cmp
adc
or
dec
into
push
es
popf
jle
out
jne
mov
cmc
movsb
es
pop
out
xor
sbb
mov
mov
je
cmp
adc
jne
movl
push
cmp
int3
and
adc
leave
repnz
cmp
je
mov
rclb
inc
in
add
push
in
mov
sub
push
lea
push
push
jo
push
push
lock
cmpb
push
rclb
shr
add
leave
lock
sbb
jmp
push
adc
ucomiss
ljmp
aaa
pop
icebp
shrl
je
sub
movb
and
push
jg
inc
mov
and
add
adc
mov
in
dec
je
test
test
dec
or
jmp
mov
push
lcall
mov
mov
scas
mov
cmp
jmp
cs
adc
lods
jl
cmp
push
stos
int
jle
insl
lock
rolb
ret
add
add
dec
sub
mov
push
jg
sub
mov
mov
sub
sub
xor
adc
sub
call
aaa
push
or
adc
clc
jle
xor
inc
mov
xor
or
dec
shl
out
stc
adc
into
or
or
idiv
incl
mov
xor
mov
inc
xor
in
cli
sbb
add
sbbl
or
out
add
faddl
xacquire
mov
inc
int
inc
pop
lret
mov
inc
out
lea
adc
push
cmpb
sbb
rol
add
movsl
mov
mov
and
rep
lea
or
loopne
loopne
or
inc
stos
sarb
stos
xchg
adc
js
lock
lcall
and
out
jmp
jmp
clc
nop
and
push
jb
mov
shlb
pop
adc
mov
ss
push
lahf
adc
jmp
sub
jecxz
cwtl
es
aam
mov
mov
test
in
adc
mov
sbb
aad
call
lea
pop
testl
leave
movsl
xchg
insb
cmp
xchg
insb
or
addb
rolb
imull
xor
mov
call
cmp
or
test
out
cmp
cmp
cmp
pushl
out
add
pop
mov
in
ljmp
adc
push
jmp
push
mov
clc
or
add
jl
cmp
jo
jle
in
inc
add
ret
sahf
push
lcall
dec
sbb
jbe
cld
or
sbb
inc
lock
mov
sbb
clc
call
and
inc
and
ret
ja
adc
jg
ss
mov
pop
or
rolb
jae
inc
sub
mov
inc
cmp
or
int
and
or
sub
mov
dec
xor
outsl
push
rcll
pop
add
xor
cmp
cmp
out
je
and
and
inc
cwtl
lret
test
push
push
lock
cmp
cli
bound
push
add
and
sti
push
faddl
adc
cmpsl
dec
or
push
inc
cmp
andb
insb
jb
adc
push
cs
addb
and
push
fwait
add
cs
movsb
xor
addl
inc
or
out
or
out
mov
jns
int3
xor
push
loopne
push
inc
mov
push
inc
jnp
push
repnz
movl
add
cld
cmp
je
or
or
mov
lea
inc
and
push
or
mov
push
push
jo
dec
mov
push
adc
sub
sbb
sahf
or
push
or
adc
ds
adc
or
insb
adc
sbb
or
mov
mov
pop
inc
mov
push
mov
mov
xchg
push
push
mov
add
hlt
loop
aam
push
out
pop
xchg
sbb
xor
push
xchg
or
ljmp
mov
push
push
mov
aaa
fisttpl
push
adc
jne
sbb
sti
xchg
insl
sub
push
mov
inc
cmp
ljmp
sub
clc
push
loope
in
push
push
xchg
sub
sbbb
popa
push
hlt
push
push
pop
rolb
loop
pop
or
lret
xchg
pop
jl
mov
jl
jne
jl
pushf
shrb
sub
xor
or
mov
adc
push
loopne
js
ljmp
js
pop
fs
lret
mov
imul
or
xchg
pop
and
mov
popf
mov
adc
fsubl
daa
pop
ret
inc
and
sub
sub
mov
mov
fs
xor
int3
cmpsl
test
pop
lret
addr16
cmp
xor
or
add
add
sbb
int3
test
rclb
jp
xchg
cmp
cmp
scas
cwtl
mov
inc
cs
dec
and
sbb
and
dec
add
sub
js
inc
test
cmp
decl
ds
mov
sub
and
and
lea
mov
shr
mov
mov
shr
xor
lret
mov
jae
out
shlb
adc
cmp
and
adc
repz
repnz
adc
xor
push
push
adc
iret
pop
push
sbb
pop
in
jns
std
sbb
sbb
sbb
sbb
sbb
cmp
cmp
sbb
sbb
sbb
es
sbb
pop
sub
sbb
shl
and
or
inc
cmp
fimull
dec
fisubrs
adc
adc
cmovno
pop
mov
les
out
shl
push
ds
js
cmc
into
xor
insb
sbb
shll
mov
jl,pn
mov
push
xor
xchg
push
push
inc
pop
lea
dec
lds
scas
les
pop
mov
dec
push
add
push
mov
xor
jb
mov
lods
sub
mov
das
push
push
mov
mov
jmp
dec
xchg
jne
fdivs
pop
idivb
cltd
inc
hlt
xor
out
dec
xor
test
popf
cwtl
imul
push
loopne
dec
fwait
icebp
sbb
outsb
test
repnz
sub
shlb
test
dec
pop
mov
pop
mov
lea
dec
sahf
mov
loopne
ljmp
cmpsb
dec
das
pop
test
mov
jge
lret
test
loopnew
mov
or
xchg
fisubl
jmp
enter
cltd
or
push
push
push
orl
mov
aad
addr16
repnz
pop
out
rclb
fs
add
jge
das
je
pushl
cmp
or
aaa
sub
sbb
jl
addb
stos
popa
push
inc
mov
lcall
mov
xchg
or
mov
lea
add
int3
rolb
add
push
or
lods
cmovg
xor
and
fdivl
jl
mov
mov
xchg
push
push
mov
and
call
add
sahf
sub
fadds
loopne
xchg
popa
jne
pop
xlat
mov
mov
pop
inc
mov
mov
push
push
push
push
xor
jl
jmp
addr16
fidivs
inc
and
jb
mov
cmp
divl
add
or
test
xchg
hlt
adc
fwait
fs
add
ficompl
test
inc
lea
pop
les
loop
aas
repnz
lea
mov
adc
lea
sahf
sbb
mov
fiadds
push
das
in
clc
nop
mov
rorb
loop
jnp
popa
test
jp
or
js
xor
push
call
xor
lods
xor
or
and
in
sbb
push
adc
mov
enter
pop
add
adc
dec
adc
push
or
mov
or
adc
adc
push
push
ret
movsb
adc
hlt
dec
mov
jle
push
add
lret
adc
fdivrs
movl
sub
pop
mov
shlb
cmp
dec
mov
gs
and
xor
push
je
and
sbb
adc
int
inc
mov
loope
nop
dec
and
loopne
orb
cmp
je
fsubl
fdivrl
lret
pop
and
pop
or
je
sub
call
xor
jo
add
fdivl
sbb
jecxz
cmp
xor
cmp
bound
rolb
or
pop
je
mov
push
push
inc
adc
pop
mov
hlt
out
sbb
inc
push
sbb
xorb
popa
inc
cld
push
daa
add
pop
sbb
mov
xor
cmp
pop
aaa
push
or
data16
jl
je
ss
mov
inc
decl
lock
xchg
loopne
and
sub
mov
rorl
loope
mov
call
mov
loopne
js
xchg
shl
jo
aam
mov
add
ds
and
sarb
mov
push
pop
mov
cmp
jae
in
sub
test
adc
mov
jle
rorl
cmp
in
rorb
jecxz
push
or
adc
push
into
das
cmp
shl
mov
out
ja
add
add
aam
stc
add
sub
enter
pusha
enter
pop
out
inc
add
push
add
out
lcall
shlb
pop
or
sbbb
mov
incl
jmp
push
dec
ret
push
test
loopne
xor
mov
rcr
add
bound
push
fdivs
lea
sbb
mov
orl
sbb
jo
pop
mov
push
xor
or
imul
add
inc
mov
shrl
or
stos
sub
add
jmp
inc
and
out
adc
sub
imulb
cmpsb
pop
add
jmp
sub
and
sbb
add
in
aaa
insb
sbb
ja
sub
add
lock
inc
lock
xchg
push
scas
loope
ss
add
add
mov
add
cli
add
loopne
mov
lea
cmp
jbe
xchg
xchg
test
add
and
leave
and
pushl
pop
shll
popa
jbe
sub
mov
and
popa
sbb
cmp
push
call
lods
mov
incl
sbb
les
icebp
mov
sub
add
push
js
sub
lcall
test
leave
pop
lret
xchg
xor
sbb
add
inc
add
sbb
add
sub
movsl
sub
mov
xlat
mov
shr
cs
xor
jbe
scas
clc
xchg
mov
and
rol
add
add
pop
mov
outsl
rcr
mov
rcll
add
adc
jmp
test
sub
adc
lret
mov
js
mov
jp
inc
and
cmp
bound
test
icebp
ds
lods
cmpsb
xor
push
test
idiv
out
cmp
mov
call
or
inc
add
decl
adc
mov
xchg
pop
mov
mov
outsl
mov
in
fs
xchg
sub
mov
jecxz
je
push
xchg
aaa
lret
mov
inc
push
in
je
mov
add
or
rcrl
cmc
cwtl
dec
add
out
fdivrs
mov
movsl
out
fs
xlat
inc
loopne
push
test
or
out
fisttpl
hlt
ds
push
add
xor
cmp
xor
or
jg
lcall
or
mov
ss
repnz
xor
xor
scas
std
sub
cmp
inc
movsb
pop
push
xor
add
cmp
jne
das
mov
setb
jp
icebp
movb
cltd
push
cld
push
mov
mov
mov
mov
push
std
sbb
add
call
sub
adcb
aaa
sbb
inc
push
sub
rolb
lret
ret
mov
pop
xchg
je
ret
mov
das
ret
or
insb
loope
test
xchg
ret
adcb
mov
cmpl
mov
mov
or
mov
add
cwtl
jge
lds
dec
mov
dec
mov
cmp
inc
add
jne
cmpb
xchg
shrb
mov
and
sbb
lcall
shll
mov
rcll
faddp
adc
push
mov
xor
inc
lea
sub
dec
into
adc
rcll
hlt
dec
rcrb
lret
jecxz
pushf
adc
shl
lock
loopne
sbb
adc
xchg
or
lock
sbb
pop
and
add
scas
fisubs
movsb
xor
mov
mov
sub
and
loop
mov
mov
cs
out
xor
mov
mov
mov
ret
push
stos
push
sbb
or
mov
sti
inc
add
ret
imul
orb
mov
inc
mov
mul
decl
or
and
or
mov
call
xchg
outsb
pop
push
shlb
lret
mov
adc
pop
xlat
nop
pop
pop
add
sbb
cmp
add
push
push
add
sbbl
jl
mov
push
dec
jno
cmpsb
jl
pop
icebp
loop
imul
pop
xor
jmp
mov
xor
sti
mov
inc
push
sub
mov
mov
xchg
and
fwait
and
pusha
mov
xor
into
sahf
std
xor
adc
out
xlat
in
decb
or
rcr
push
scas
insl
imul
mov
rclb
cmpsl
fwait
sbb
xchg
sarb
out
cltd
xor
pop
add
adc
dec
jle
ficomps
xor
and
sbb
sahf
pusha
sub
push
es
dec
mov
lret
mov
mull
mov
mov
aaa
jmp
pop
aas
adc
jo
cmpsb
stos
test
dec
cmp
xchg
clc
add
sub
push
data16
cmp
push
push
pop
jb
sbb
sbb
addl
ljmp
leave
or
jns
in
sbb
push
sbb
add
outsb
cltd
in
sbb
mov
cmp
sub
outsl
xchg
cmp
adc
in
and
xor
adc
xchg
pushf
mov
inc
xchg
sub
mov
leave
mov
sbb
cmp
jb
imul
fisubrl
lea
shl
shl
jl
adc
shrl
fldt
push
sbb
repz
ljmp
jmp
or
mov
or
cli
xor
insb
cmp
inc
pop
cmp
sbb
pop
shlb
sbb
mov
cmp
daa
add
mov
push
sbb
pop
lods
or
daa
leave
and
xor
adc
push
jae
iret
mov
or
pop
enter
cmp
notl
xor
mov
sub
js
mov
pop
ficoml
and
ljmp
cs
push
mov
je
xor
pop
js
adc
dec
sub
adc
clc
pop
push
out
push
imul
push
repz
jno
mov
add
inc
lock
inc
call
pop
or
lock
rclb
push
xor
test
sti
outsl
lret
je
cmp
je
jbe
or
jbe
cmp
iret
and
xor
jne
popa
clc
or
orb
mov
mov
or
adc
or
add
cmp
leave
ljmp
pop
rcr
pop
mov
pop
or
sbb
lock
mov
adc
and
in
or
shll
pop
jne
jp
inc
into
pushf
cwtl
lock
repnz
mov
cs
ficompl
cmp
stc
push
adc
mov
adc
js
mov
adc
mov
jle
clc
iret
jns
icebp
ds
fisubs
or
cmp
mov
push
pop
lret
and
push
rcrl
pop
inc
sbb
iret
mov
mov
fcomp
mov
add
repz
mov
ds
add
rcr
mov
push
cmp
data16
addl
mov
jnp
cli
mov
or
push
adc
addl
mov
loop
out
and
and
inc
sbb
push
sub
sahf
sub
and
xor
jle
cld
ret
loop
mov
dec
push
cmpl
jno
lea
je
push
clc
xor
xor
cs
adc
sarb
adc
fwait
mov
aas
test
inc
mov
inc
jbe
lods
inc
cmp
add
lea
xor
mov
pop
and
push
dec
adc
pushf
cli
dec
xor
sbb
je
repnz
bound
out
hlt
js
adc
lock
in
push
ret
push
mov
dec
jne
in
leave
mov
and
mov
test
cwtl
fiadds
outsb
ja
lret
nop
shll
cmpb
mov
pop
cld
add
pushf
inc
aas
ss
shll
int3
rcrl
aaa
mov
inc
lea
push
das
test
push
pop
mov
xchg
lcall
rcrb
shlb
push
sub
jg
adc
cmpl
pop
mov
jo
ss
cmp
mov
ds
popl
in
xchg
pop
inc
adc
in
push
ljmp
push
dec
ds
scas
lock
movsb
mov
jle
popw
cmp
jbe
insb
add
cmp
sbb
mov
jb
pushl
sbb
xchg
cmp
sbb
or
insl
shlb
push
cwtl
int3
je
mov
inc
movl
jle
testb
rolb
sub
jle
push
insl
mov
testb
cmp
adc
xor
sbb
lea
mov
or
inc
add
arpl
loopne
cmp
inc
jge
fmuls
push
jg
fiaddl
sete
rcll
icebp
icebp
ret
loope
lock
inc
cmp
xchg
mov
cmp
in
lock
add
repz
lea
outsl
push
push
pop
je
or
in
inc
add
mull
xor
sbb
sbb
repz
xchg
cmp
dec
or
jnp
mov
pop
adc
sahf
push
cmpsl
in
mov
lcall
enter
aaa
sahf
orb
jge
pop
jmp
or
inc
add
orl
fdivrl
test
add
out
aam
sbb
jns
sub
mov
fldl
and
dec
cmp
jge
cwtl
sub
jmp
mov
cmpsl
pop
in
inc
stc
insl
mov
dec
jne
daa
outsl
and
jae
or
pop
add
xor
push
test
xchg
addr16
xchg
pop
pop
sub
shl
lock
mov
or
out
dec
or
ret
add
fadds
add
cmp
mov
test
pushl
mov
lcall
ljmp
enter
lret
enter
mov
pop
mov
or
or
in
mov
repnz
je
cmp
je
lret
outsl
mov
dec
adc
or
je
inc
arpl
cltd
lret
inc
nop
aas
inc
pop
sbb
inc
push
add
inc
imul
jge
sbb
cld
add
leave
bnd
je
push
cmp
or
ja
fcoms
adc
push
pop
shll
inc
adc
daa
pusha
xchg
nop
xor
cmp
jl
mov
into
pushl
outsl
cwtl
and
cmp
test
or
mov
lahf
add
sub
out
or
in
out
sahf
movb
je
jne
cmp
jmp
add
inc
inc
jecxz
or
push
push
or
sub
or
jle
iret
add
leave
cmp
dec
lea
fstpt
sbb
ljmp
lcall
xchg
nop
sbb
sub
call
xor
jbe
or
lea
add
push
fmuls
jp
xor
mov
ret
xor
add
subl
mov
pusha
xchg
xlat
adc
inc
subl
push
pop
lcall
inc
pop
out
data16
int3
jge
cmp
out
decb
test
jne
cs
xchg
jg
cli
cltd
or
jmp
in
mov
mov
movsb
jo
test
and
pop
mov
call
in
loop
mov
out
pusha
push
mov
fs
sub
pop
xlat
add
aam
cmpsb
jns
adc
mov
jne
mov
jo
mov
insl
cmp
mov
sbb
test
pop
pop
cmp
sbb
cmp
add
test
mov
add
sub
add
mov
inc
jns
mov
mov
mov
xchg
sub
popa
sub
sbb
roll
sarl
push
sbb
js
jp
dec
int
fildl
mov
push
adc
push
inc
mov
sub
adcb
mov
fistl
mov
mov
ror
int3
mov
rol
dec
je
cs
outsl
cmp
mov
loopne
in
xchg
enter
or
jns
pop
sbb
jb
mov
lcall
fadds
mov
mov
sbb
loopne
loopne
adc
sti
xor
sbb
mov
es
sbb
push
xor
stos
jbe
sub
lods
add
addb
pop
enter
and
or
insb
fsubrs
std
jo
push
inc
in
cwtl
and
sub
and
or
test
mov
or
push
sbb
sarl
dec
pusha
push
mov
test
push
outsb
xor
sbb
and
sub
sbb
mov
mov
das
enter
push
push
into
pop
ror
sub
jo
ss
nop
pop
dec
dec
out
testb
pop
mov
mov
pop
adc
leave
repz
sbb
mov
pop
xor
addr16
shl
lret
and
fs
xor
les
and
ds
dec
jo
inc
dec
sub
xor
cmp
js
pop
push
push
shrb
mov
mov
push
mov
mov
loope
xor
inc
cmp
out
dec
rclb
les
cmp
dec
add
sbb
fdivrs
sub
add
cmp
movsb
call
mov
aas
jo
fnstcw
mov
jmp
mov
shlb
adc
jl
mov
and
shlb
call
cmp
jge
cmp
fdivrs
adc
cld
rclb
pop
cmpl
inc
inc
cmp
jl
sbb
or
outsb
mov
out
and
push
pop
test
push
jo
sbb
mov
mov
movsl
pop
rcr
mov
stos
pop
adc
cmp
dec
dec
sbb
in
xchg
inc
call
repnz
and
aas
push
jae
decl
fsubrs
fndisi(8087
and
mov
push
push
or
xchg
pop
faddl
js
mov
ret
inc
mov
mov
je
pop
fmuls
in
or
mov
notb
pop
jb
sldt
pop
dec
sbb
leave
jo
push
and
cmp
pop
lock
loopne
jne
sahf
in
pushf
cmp
callw
push
sbb
enter
and
aaa
popa
test
ds
icebp
loopne
outsb
shrb
rorb
inc
insb
loopne
cmp
jnp
insl
loopne
popa
lock
daa
daa
lock
mov
sti
push
lea
in
mov
mov
cmpl
cmpb
mov
in
sbbl
imul
push
or
or
cmp
sbb
push
xchg
rcrb
call
push
and
sahf
test
nop
cmp
mov
fmul
test
daa
push
in
nop
jg
movsl
cmp
sbb
inc
push
not
add
jmp
adc
adc
adc
dec
test
adc
fsubrl
xchg
adc
push
add
call
insb
lret
pop
add
mov
lock
jmp
cli
and
jle
pop
je
push
je
dec
pop
data16
stos
lods
push
mov
jne
and
inc
dec
push
dec
inc
mov
dec
adc
ret
lds
add
shlb
jno
push
jne
dec
insb
test
mov
lea
fdiv
cmp
or
dec
and
mov
sub
shr
sbb
lea
add
or
or
dec
or
xchg
loopne
mov
sub
mov
in
fstpt
call
and
adc
jl
clc
push
push
push
cmp
push
add
or
cmp
add
add
aam
or
repz
cmp
hlt
ret
jmp
imul
pop
cmp
or
xchg
jbe
ja
fidivs
ds
daa
data16
cmp
sbb
cmp
jne
inc
adc
sbb
shl
nop
in
jae
ror
hlt
jne
add
and
jne
push
push
dec
pop
push
add
mov
cmpl
jbe
mov
sub
incl
mov
push
je
sbb
or
and
and
mov
mov
pop
mov
push
add
pop
or
xchg
inc
dec
cmp
jb
addl
movsl
inc
ds
shrl
rolb
hlt
pop
clc
xlat
and
sub
ja
or
mov
or
sub
int3
mov
stc
mov
cwtl
sub
sub
enter
sub
inc
inc
lods
jecxz
mov
mov
mov
dec
or
sub
add
pop
mov
pusha
or
lock
or
pop
adc
shl
cltd
mov
adc
ja
mov
pop
pop
push
cmp
addl
inc
pop
clc
aad
cmp
push
push
rcr
je
mov
dec
push
dec
mov
push
xchg
addl
clc
loopne
mov
mov
push
push
andb
inc
and
jg
test
and
mov
push
add
sarb
xchg
pop
mov
test
repnz
pushf
push
pop
sbb
push
imul
adc
adc
dec
xchg
call
insb
ss
fistpll
or
adc
ss
stc
xchg
adc
shlb
adc
mov
inc
rcrb
out
sub
icebp
sbb
add
daa
jmp
lret
sub
out
scas
cmpsb
out
ds
pop
rolb
add
testl
mov
add
clc
add
ljmp
jmp
enter
or
dec
mov
les
and
jp
push
pop
push
sarb
cmpsb
adc
out
push
push
test
jo
add
nop
insb
cmp
iret
jl
xor
sub
jle
shlb
cli
cmp
ret
or
rorb
mov
push
mov
outsb
inc
sub
ficomps
inc
or
cmp
mov
inc
aam
adc
inc
fdivs
imul
push
repnz
jmp
outsb
movd
push
sub
xor
mov
inc
sub
xor
clc
jg
testl
adc
mov
xchg
repnz
clc
adc
shll
and
inc
push
jl
mov
decb
pop
lea
and
sbb
push
out
add
sub
loop
jo
and
fadd
lock
rol
jl
add
dec
jecxz
cs
lods
orb
loopne
push
test
test
dec
adc
xchg
imul
xchg
jae
push
pop
or
adc
adc
push
sbb
cmpb
fcoms
jle
sbbb
jl
cs
pop
cmp
adc
fsub
je
push
sbb
leave
pop
sbb
dec
movsl
pop
pop
sbb
scas
inc
aas
pop
add
testb
imul
lods
push
lods
out
adc
stc
pop
mull
sbb
dec
jge
test
pop
sbb
ret
sbb
test
or
addr16
inc
out
adc
jmp
fdivl
pop
aaa
dec
mov
negl
inc
cli
or
int3
mov
or
mov
lahf
push
lock
adc
rcrb
or
add
push
addr16
sub
adc
lcall
cmpw
jne
lcall
mov
pop
out
lods
movsb
push
sub
adc
adcb
in
int
mov
shl
push
sub
cmp
loope
add
adc
test
daa
cmp
xchg
mov
dec
call
add
out
stos
mov
daa
jno
sarb
or
mov
push
lods
ss
pusha
out
mov
jl
fs
xchg
adc
xor
test
mov
xor
or
jmp
sub
sar
stos
sbb
lea
adc
and
dec
cmpsl
xor
lret
inc
adc
adc
out
sub
cmpsl
mov
call
mov
in
mov
add
inc
or
inc
or
xor
je
pop
jecxz
dec
pop
rorl
pop
cmp
lcall
cmpsb
mov
jne
test
adc
loopne
ss
mov
pop
xchg
incb
jne
or
mov
push
xchg
add
jbe
jge
add
mov
jmp
mov
add
cld
ljmp
sub
incb
or
lds
add
mov
lret
pop
movsl
cmp
cmpsb
lods
push
mov
sub
add
andl
imul
pop
push
ret
inc
pop
test
xor
filds
in
dec
in
mov
push
sbb
pushf
xchg
mov
or
inc
push
les
jecxz
roll
je
in
orl
out
orl
inc
mov
mov
xor
mov
ss
adc
cmpl
push
and
xlat
ss
clc
xor
bnd
js
inc
push
out
fstl
es
push
jo
daa
jno
xor
or
push
in
sahf
les
dec
sub
jb
in
sub
addr16
and
pop
daa
mov
lock
dec
add
jmp
in
add
pop
mov
clc
stos
fs
or
into
orl
jmp
cmp
ja
ret
cmpb
mov
push
and
mov
ret
sbb
lods
je
and
add
aam
dec
out
ret
test
mov
mov
lods
sbb
add
imul
jne
mov
jnp
adc
es
out
push
mov
xor
xchg
inc
dec
or
dec
push
jno
fwait
sbb
inc
xor
jo
sbb
add
repnz
add
stos
add
mov
andb
jge
mov
jnp
clc
jmp
push
pusha
dec
and
in
xchg
and
popa
movsb
xor
iret
jo
jl
sbbl
in
push
xor
jns
push
inc
xchg
movsb
xchg
dec
inc
pop
push
sub
paddw
mov
mov
push
shlb
xorb
fmull
jmp
or
arpl
jp
mov
push
lea
mov
sbb
lods
push
jbe
or
add
cmp
sbb
insb
sahf
adc
jbe
popa
add
add
inc
repz
push
iret
push
push
add
dec
js
pop
scas
lret
xor
cmp
enter
dec
adc
jmp
push
adcb
sub
shrl
iret
repnz
jmp
mov
lock
push
push
xor
sbb
adc
fdivs
and
add
adc
rcrl
pop
mov
lock
cli
subb
push
sub
and
wrmsr
fs
adc
je
movsl
dec
add
mov
cmp
push
mov
mov
push
sub
and
cmpsb
inc
mov
or
xchg
loop
dec
add
insb
xchg
gs
adc
jp
xchg
outsb
jno
daa
push
or
cmp
cmpsb
les
xchg
je
push
or
dec
push
inc
push
pop
xlat
sub
orl
cmp
push
push
xlat
xchg
add
lea
cmp
add
and
ret
and
or
mov
xchg
pop
ja
xor
cmp
pop
push
movl
jnp
inc
push
mov
testb
test
out
dec
inc
or
inc
ljmp
imul
clc
scas
adc
xlat
dec
push
xor
cmp
jne
cmp
jbe
cmp
xchg
push
dec
or
je
idivl
or
hlt
mov
and
test
lods
mov
scas
pop
ret
out
out
and
push
push
aam
cld
mov
jl
rol
call
mov
cwtl
cmp
pop
mov
aam
inc
pop
inc
mov
cmp
or
fldenv
iret
sub
rorb
pop
mov
loopne
jle
dec
jmp
mov
cmp
dec
sub
xchg
push
in
xchg
lods
inc
js
xor
dec
nop
fidivrs
jae
aam
dec
push
or
incl
shrl
add
sbb
xor
loopne
cmc
or
pop
jne
pop
pop
ljmp
je
cmp
aam
call
ret
push
dec
fst
pop
add
adc
repnz
mov
test
and
push
sbb
out
add
movntps
cmc
jae
push
mov
mov
lret
daa
add
clc
inc
mov
mov
jmp
jne
add
fnstenv
adc
push
sbb
push
push
shll
push
scas
aas
loop
mov
rep
test
mov
jle
jno
push
movsl
add
or
mov
mov
cmp
mov
rorl
test
mov
adc
mov
and
or
std
cmp
call
fdivrs
jmp
inc
je
xchg
mov
mov
xchg
scas
mov
scas
push
sub
outsl
xchg
test
jle
out
push
or
mov
jo
decl
jmp
jp
mov
test
adc
ds
fsubrs
or
push
pushf
jns
popa
push
push
out
mov
loope
jge
or
js
pop
push
add
cmp
mov
and
cmpsl
pause
je
shrb
je
outsl
test
push
inc
cwtl
movzwl
cmp
jne
scas
jle
push
and
rolb
pop
icebp
cmp
and
sub
or
mov
lahf
push
inc
mov
movl
test
fildll
ljmp
xor
mov
xchg
inc
inc
ds
sub
aaa
push
mov
push
sub
or
loopne
inc
pop
cwtl
pop
hlt
add
push
push
xchg
call
push
idivl
pop
sub
stc
push
insb
std
scas
aas
mov
pop
shll
call
jg
pop
mov
mov
and
push
jns
lods
add
jns
popa
inc
movl
cli
aas
adcl
sbb
movsl
aad
rcr
push
ret
mov
sub
xor
adc
add
and
ja
rolb
jbe
in
popf
push
inc
mov
jge
mov
mov
push
push
or
rcll
sub
popa
push
pop
dec
xor
inc
loopne
and
mov
jbe
js
cmp
cmp
inc
xor
cmpsl
mov
iret
int3
aas
mov
js
cmp
mov
incl
fcomps
xchg
insl
or
inc
add
mov
imull
dec
push
iret
xor
push
test
movsl
cmpsl
mov
repz
sub
test
sbb
xor
fcompl
push
test
sub
xchg
ret
add
sub
data16
imul
gs
and
cmp
jl
pop
cmp
fiadds
cmp
jne
push
enter
mov
and
pop
incb
or
mov
rorl
dec
pop
clc
bound
dec
pusha
jno
movsl
mov
adcb
xchg
call
pop
into
outsb
sbb
das
stos
inc
sub
jmp
adc
sarb
or
pop
pop
xchg
cwtl
dec
or
testl
cli
and
push
push
adc
sub
cmpl
mov
aam
ds
idiv
push
pop
xor
xor
push
xor
out
int3
dec
sub
dec
add
push
mov
outsl
int
dec
pop
addl
outsb
andb
jb
xchg
sub
scas
mov
inc
xlat
sub
push
ljmp
xchg
cmp
ficomps
or
mov
add
add
cmpl
xor
lahf
inc
add
xchg
lods
xor
fs
fisttps
dec
fdivs
sahf
xchg
fld
roll
in
add
pop
push
in
test
jmp
xor
mov
push
aam
or
mov
push
out
jnp
scas
ffreep
push
ds
call
cs
dec
sub
pop
sbb
cmpsb
add
cli
aam
jle
andb
daa
call
add
ret
sbb
sub
pusha
dec
fwait
insb
or
pop
shlb
add
or
movsl
adc
xorb
shrb
push
adc
inc
xlat
out
outsb
pop
or
loopne
or
mov
xchg
sbb
xchg
fidivrl
outsl
cli
in
xor
inc
mov
and
pusha
cmpsb
xchg
or
mov
insb
lods
xor
cmc
add
xor
test
mov
mov
pop
add
add
rcr
lea
mov
adc
mov
std
sub
dec
mov
pop
inc
cmpsb
inc
in
call
cmc
pop
lret
jnp
aaa
jmp
sbb
mov
notl
mov
add
rorb
sbb
mov
clc
add
test
push
push
cmpsl
sbb
xchg
push
mov
popa
xlat
popa
loopne
aam
lods
mov
and
push
shrl
repz
adc
lcall
in
cltd
sbb
sbb
scas
push
mov
testl
xchg
jo
int3
call
outsw
ds
lods
lods
stos
nop
pop
pop
push
imul
adc
stos
adc
pop
mov
repnz
and
inc
je
push
mov
pop
int
xor
pmuludq
inc
pop
push
cmp
je
inc
loope
cmp
jg
add
or
lret
sub
sar
js
push
or
adc
xor
pop
add
pop
addl
outsl
lea
mov
ss
mov
sbb
add
pop
push
loope
cmp
adc
dec
dec
cmp
jp
dec
clc
mov
and
adc
xchg
xchg
mov
gs
xchg
cmp
add
stc
movsl
jb
lret
inc
push
jbe
sbb
cli
jle
push
std
or
je
xchg
push
push
pop
or
je
or
popa
lcall
sysret
orb
enter
or
jns
out
add
add
imul
divb
clc
or
jmp
sub
fsubrl
lock
aam
imul
jg
mov
push
test
sbb
movups
dec
sub
cmp
rcl
push
jmp
cmpsl
push
shl
aam
push
push
add
cmp
xchg
push
imul
cwtl
add
push
push
gs
cmpsl
push
dec
insb
jne
sbb
adc
push
dec
push
dec
dec
out
xchg
fildll
je
mov
lock
jbe
mov
xchg
lea
mov
cmp
stos
pop
ret
movsl
or
jne
jmp
xor
popl
mov
adc
lds
mov
ud0
lea
ficoms
movsb
cld
roll
sbb
mov
push
push
add
sbb
pushf
dec
xor
xor
adcb
jle
call
adc
push
xor
out
cmpsl
push
sbb
imul
into
add
int3
dec
cli
flds
add
mov
push
lea
xor
xchg
mov
dec
test
mov
xchg
cld
arpl
pop
mov
add
ret
gs
jmp
std
mov
mov
cltd
xchg
pop
cwtl
mov
movsl
hlt
adc
xchg
cmp
arpl
punpcklwd
xor
xchg
lahf
push
xor
xor
pop
add
or
pusha
sbbb
jecxz
mov
cmpb
nop
mov
xchg
lock
mov
mov
sub
sbb
mov
dec
xchg
cmp
add
xor
cmp
xor
add
inc
ror
call
xor
out
out
subl
jae
xrelease
mov
mov
cmp
lret
sbbb
mov
jnp
sub
or
dec
adc
mov
nop
and
mov
push
into
add
sbb
js
iret
jmp
push
or
mov
mov
or
filds
out
mov
dec
dec
stos
inc
mov
mov
push
cmp
hlt
mov
push
mov
add
mov
lret
ret
mov
das
mov
sub
inc
cmp
jb
push
sbb
sbb
jmp
cld
into
adc
adc
mov
enter
jg
or
xor
inc
mov
notb
pop
push
add
jmp
sbb
jmp
test
loope
cmp
pop
je
lret
test
mov
add
pop
push
sbb
jle
adc
or
cmp
ja
cmp
jge
lea
push
rorb
out
add
sbb
cmp
lock
cs
lods
mov
jl
add
push
cmp
xor
mov
mov
pushf
clc
jbe
mov
xchg
push
lret
mov
mov
sbb
cld
mov
test
pushf
adc
xor
negl
push
data16
sub
mov
push
xor
dec
pop
pop
sbb
hlt
ud1
mov
xor
mov
jae
cmpb
adc
jle
xchg
jno
cmp
decb
int
dec
jne
insl
pop
xor
push
flds
xchg
mov
jb
out
scas
sub
and
mov
daa
cmp
pop
sub
cmp
or
push
and
pop
mov
pop
pushf
and
ja
ret
cs
out
mov
sub
pop
hlt
clc
push
push
xor
clc
filds
sub
add
inc
adc
leave
fmull
sbb
add
and
inc
push
leave
mov
add
bound
hlt
subl
pop
jg
mov
or
enter
add
sbb
or
pop
push
jno
testl
cmp
jg
jl
add
and
jae
add
add
in
popf
xchg
xchg
out
pusha
pop
cmp
sbb
and
fwait
test
jg
add
adc
adc
mov
add
icebp
xor
pop
dec
inc
lret
aam
pushl
cmp
inc
cwtl
sub
subps
movsb
jno
inc
or
push
sub
mov
js
mov
push
push
inc
jae
arpl
jl
xchg
push
bound
adc
push
cmp
pop
repnz
push
push
data16
xor
push
mov
aam
or
call
sub
and
pusha
lahf
test
cmp
push
addb
arpl
push
jmp
mov
pop
adc
mov
pop
test
cmp
xor
push
mov
cmp
sub
sbb
inc
cmp
shll
add
cs
nop
ret
in
and
push
xchg
cmpsb
pop
push
mov
dec
mov
divl
sbb
mov
mov
add
xor
fisttps
push
les
ss
and
adc
mov
mov
shlb
enter
rorl
enter
sbb
ficoml
ret
jg
dec
dec
xor
icebp
inc
rorb
jae
adc
int3
inc
pop
jg
pop
loopne
pop
in
rorl
je
cmp
lock
icebp
jb
or
add
hlt
enter
xchg
mov
data16
mov
and
mov
dec
jne
dec
pusha
mov
pop
or
loop
cli
mov
jp
aam
cmp
inc
add
push
cld
je
add
mov
jmp
insb
aaa
mov
jb
or
gs
cmp
dec
pop
pop
sub
in
lea
sub
jne
add
adc
or
cmp
push
push
enterw
sbb
ljmp
inc
lcall
push
adc
xchg
scas
lret
inc
adc
and
andl
jg
xor
fwait
cmpb
js
and
movzwl
popf
sub
hlt
bnd
sbb
or
jmp
call
dec
cmpsb
mov
inc
push
aam
jp
pop
push
dec
ljmp
inc
inc
rolb
arpl
sbb
xchg
jb
push
adc
xorl
into
into
sar
movsb
addl
inc
outsb
cmp
xor
jno
hlt
dec
inc
pop
movsb
lahf
jo
mov
scas
push
mov
data16
or
add
dec
rcll
adc
xor
lods
sub
and
ficomps
inc
in
repnz
jbe
adc
jb
push
cmp
or
or
inc
cmp
jl
ja
sbbb
or
push
pusha
pushf
sub
je
adc
mov
adc
int3
push
std
inc
inc
add
inc
push
pop
ljmp
pop
out
dec
std
inc
cmp
pop
mov
jg
add
js
pop
dec
xchg
add
cld
outsb
and
add
es
repnz
nop
xchg
ss
leave
inc
pusha
test
or
sub
dec
loopne
or
stc
jo
push
sbb
aaa
push
sbb
in
sbb
xor
es
in
repz
inc
cmp
iret
sub
rdmsr
or
add
push
or
cs
xor
xor
mov
out
cs
jmp
xor
inc
push
pop
inc
add
repnz
push
inc
sbb
dec
cmp
adcl
dec
sbb
setne
fldl
cld
xor
cmp
lcall
gs
jl
push
push
mov
movsb
inc
add
sub
mov
inc
sbb
adc
xor
cmp
inc
sub
dec
data16
or
pop
mov
push
push
inc
testb
addr16
or
adc
or
sub
xchg
mov
add
mov
add
into
insb
enter
cmp
push
or
faddl
notl
js
call
fxam
push
dec
adc
push
les
aas
cmp
xchg
inc
dec
push
or
sbb
dec
add
or
jg
dec
cmp
and
ficomps
dec
dec
pop
repnz
jl
cmpsl
add
push
rolb
cmp
inc
loop
in
lock
andb
sahf
clc
and
xchg
inc
or
add
pop
mov
adc
inc
jnp
leave
lock
push
stos
fistps
shrl
cmp
not
push
daa
push
xchg
repnz
add
cs
pop
aam
and
clc
and
sub
lea
push
clc
xchg
xor
sbb
mov
add
rol
ljmp
or
mov
and
or
nop
out
mov
and
pop
jns
in
sbb
sbb
addr16
sahf
add
sbb
sbb
sbb
fsubr
or
dec
and
cmp
adc
and
jnp
sahf
add
and
shr
add
sbb
or
rorb
sub
js
idivb
shr
outsb
and
loop
test
push
and
and
pop
jo
cmpb
fiaddl
incb
jle
add
jl
cmp
adc
cmp
pop
push
ret
mov
adc
imul
mov
push
mov
push
mov
push
add
sub
dec
lods
ds
push
push
lods
sub
cs
xor
lock
outsb
fcomip
es
push
and
push
xor
adc
mov
mov
dec
imul
push
or
cmp
mov
shrl
pusha
popa
jne
pop
inc
add
int
fcompl
mov
lds
les
sbb
jnp
and
adc
lahf
pop
mov
dec
out
add
mov
test
cmp
push
cli
xor
jge
fimuls
jbe
pop
or
adc
add
adc
jbe
mov
pop
inc
mov
or
mov
push
popa
sbbb
add
xor
sbb
push
and
add
dec
in
inc
rcll
pop
call
mov
mov
mov
int3
mov
sbb
mov
inc
or
xchg
cmp
cld
inc
jbe
adc
jecxz
push
push
push
inc
call
incb
rcr
pop
sbb
inc
cmp
pop
add
ret
sarb
and
imul
sti
test
popf
incl
icebp
pop
decb
xor
jge
inc
mov
mov
xor
jbe
lods
leave
inc
mov
int3
cmp
fisubs
jnp
jmp
jbe
xor
clc
adc
decl
xor
popf
in
or
out
test
sub
imulb
and
xor
mov
and
lcall
push
mov
ss
repnz
rcrb
idiv
std
popf
in
cmpsb
sti
cli
iret
inc
sub
push
mov
add
aam
or
xor
jmp
and
in
cmpl
js
jbe
add
fmuls
mov
sbb
mov
xor
push
test
xchg
pop
mov
pop
adc
ds
arpl
inc
and
call
add
xchg
mov
adc
cld
pushl
call
cmp
out
loopne
jl
pushl
mov
lods
dec
or
or
cmp
push
mov
mov
sub
dec
jmp
stc
dec
cld
and
in
dec
xor
push
or
sub
addr16
push
mull
sub
jmp
push
mov
adc
hlt
xchg
push
int3
lcall
pop
mov
cmp
insl
daa
rcrb
add
adc
or
xor
enter
xlat
cmp
jae
cmpl
fwait
scas
aam
cwtl
add
sbb
stc
inc
cmc
mov
lea
dec
dec
leave
rcr
push
insb
in
sbb
fbld
sub
cmpl
jno
shl
or
or
dec
push
mov
dec
adc
fwait
test
adc
sbb
jae
xchg
mov
popa
icebp
and
inc
jl
inc
xor
jns
icebp
popf
fiaddl
push
loope
cmp
mov
push
xchg
lret
in
pushf
mov
jg
scas
inc
and
test
mov
andb
xorb
mov
iret
inc
xchg
enter
int
xor
fs
push
adc
xor
adc
pop
fs
xchg
pop
rorl
push
mov
sbb
xor
mov
stos
or
or
es
add
sub
or
aam
adc
cli
sbb
dec
mov
inc
sub
push
adc
inc
add
rorb
nop
scas
iret
dec
movsb
adc
adc
scas
and
call
push
int
xor
mov
outsb
adc
xor
pop
mov
inc
push
and
neg
clc
sbb
jne
out
inc
sub
adc
in
arpl
push
out
or
cmp
or
int3
test
loop
sub
test
imul
jb
mov
mov
insb
add
dec
les
aam
sbbb
rclb
dec
jnp
mov
fdivr
cmp
adc
xor
push
cmp
pop
aam
push
mov
dec
mov
ret
testl
lea
xchg
sub
cmpsl
sbb
inc
sbb
inc
nop
or
mov
test
xor
aam
inc
xchg
xchg
ret
out
ss
dec
dec
and
scas
push
fisttpl
and
add
sub
mov
lea
mov
mov
movsl
cli
mov
sbb
js
mov
inc
or
outsb
cmpsb
inc
aas
and
nop
jbe
xor
movsl
cmc
gs
inc
imul
cmp
pop
dec
sub
jne
and
and
mov
sub
and
xchg
cmp
cmp
jb
and
or
sub
and
add
popf
xchg
jno
jge
clc
inc
jmp
repnz
and
xor
cmp
mov
jns
lods
shrd
sub
jo
or
push
cmc
cmp
sbb
push
fsts
mov
imul
mov
or
roll
popa
or
stc
bound
pop
xor
or
test
popa
js
mov
cmp
jp
gs
pop
cltd
adc
xchg
and
pushf
sbb
data16
dec
xchg
sbb
test
sahf
cwtl
neg
icebp
sbb
insl
pop
bound
jmp
js
call
dec
leave
add
sbb
jecxz
ret
jno
mov
mov
enter
push
xchg
imul
or
inc
xor
jb
pusha
pop
das
pop
mov
xor
and
mov
jbe
stos
xchg
aaa
ficompl
jecxz
mov
out
lods
popa
and
aaa
and
push
sbb
and
enter
mov
push
testb
push
and
or
or
out
roll
dec
inc
sahf
popa
push
fistpl
sub
xchg
scas
incb
xor
dec
push
and
cmpsl
mov
or
sbb
add
xacquire
pop
xor
jne
cmp
add
aam
pop
sub
insl
ret
push
cld
jae
insb
dec
test
nop
outsb
stos
mov
jmp
mov
test
push
cmp
je
adc
sbb
jne
pushl
mov
insb
jae
dec
jb
lret
adc
mov
clc
xor
push
push
lret
adcb
pop
cmpb
out
mov
add
iret
sti
gs
jl
mov
and
push
insl
sub
mov
notb
lock
mulb
les
movsb
in
lcall
push
cmp
fcoms
xor
ss
orb
mov
and
mov
add
cs
loope
bswap
adc
and
dec
fidivs
xorl
xor
jl
add
mov
inc
cmovs
rclb
mov
in
in
rclb
popa
dec
push
repz
or
js
mov
cmp
mov
sub
pushf
mov
add
adc
mov
mov
leave
add
ljmp
call
push
repz
movb
pop
cmpsb
inc
inc
addl
ffree
ss
add
pushf
xor
mov
add
adc
arpl
sbb
cmc
in
loopne
nop
pop
loop
mov
inc
pushf
adc
lock
icebp
out
adc
push
push
sbb
pop
ret
andl
sub
cltd
cmp
inc
or
cmp
call
or
xor
sbb
add
dec
or
sti
inc
inc
inc
inc
call
mov
call
mov
and
push
out
inc
and
inc
adc
sbbl
sub
repnz
ret
adc
adc
nop
pop
push
jmp
add
add
mov
pop
pop
decb
gs
aas
out
fldenv
mov
dec
aaa
cs
xor
pusha
mov
adc
test
movsb
xchg
dec
jg
fmul
push
push
or
mov
xchg
and
les
and
push
xor
int3
outsl
enter
pop
add
sbb
or
out
ret
push
sbb
lea
hlt
push
pushf
aam
inc
popa
cwtl
sub
xchg
bound
cmp
jb
popa
fistps
nop
test
mov
push
insb
dec
add
add
mov
test
mov
jg
push
outsb
sub
adc
xorl
xor
lea
push
cmp
fimull
jbe
push
lcall
jp
xorl
jg
xchg
mov
clc
das
negl
mov
xchg
aam
clc
mov
ss
mov
jns
mov
add
mov
or
add
jno
push
push
mov
add
add
sub
sar
adc
jle
arpl
sub
cmpsb
sub
pushf
or
xlat
push
push
pop
mov
dec
push
sbb
cmp
jae
fiadds
push
lods
rorb
shll
in
push
push
clc
mov
popf
or
adc
cmp
enter
pushf
and
inc
mov
and
and
pop
inc
stos
xchg
test
dec
cwtl
push
lea
adc
add
pop
inc
fcmovu
sbb
imul
add
cmp
clc
addr16
push
jle
sbb
sbb
mov
or
bound
rcll
js
adc
push
les
add
lret
pop
popa
mov
jecxz
pop
jne
push
xor
push
popf
test
clc
ja
in
push
stos
scas
lods
pop
rolb
popa
hlt
test
mov
sub
das
push
cmp
repnz
inc
and
call
sub
mov
push
dec
repz
std
jge
pop
add
or
pop
adc
adc
cmp
jbe
daa
lea
mov
test
dec
dec
lods
sub
arpl
out
movsb
sti
xor
inc
xchg
inc
testl
add
xchg
xchg
lret
test
add
aaa
popa
or
je
dec
add
and
mov
shrb
sub
pusha
sub
movb
shrb
inc
shlb
or
pop
aam
test
push
fchs
push
test
push
push
inc
jo
mov
out
dec
add
jg
in
or
roll
les
dec
rorb
inc
add
mov
movb
push
add
mov
or
add
mov
sub
or
mov
sub
daa
cmp
hlt
sbb
cmp
mov
popl
mov
push
ror
pop
and
cmovl
sub
aam
in
add
add
daa
push
lods
mov
push
mov
sbb
pop
adc
jnp
mov
fcoms
sbbb
nop
dec
enter
imul
lahf
fdivl
dec
mov
leave
pop
push
lock
ss
mov
xchg
and
xchg
loopne
cmp
add
add
cltd
sub
push
enter
lock
shr
push
add
jmp
or
mov
sahf
lods
leave
mov
fdivrp
dec
xor
dec
cmp
jo
jg
mov
inc
and
inc
xor
lret
pop
xor
pop
pop
loopne
adc
mov
inc
aaa
pop
test
inc
dec
xorb
add
shrb
pop
div
lcall
adc
dec
test
scas
cs
ss
out
xor
daa
into
shrb
mov
adc
shll
cmp
mov
ret
lods
or
mov
inc
xor
test
add
push
push
xchg
mov
jno
xor
cmp
in
je
movsb
or
pop
sbb
pop
jge
int
mov
push
push
sub
jae
or
pusha
rcrb
add
add
lock
xchg
out
xor
xchg
sbb
push
loopne
lea
fnstcw
adc
je
dec
jne
jb
adc
fcomp
sbb
inc
and
pusha
pop
pop
jbe
or
push
xor
lcall
xor
mov
inc
inc
dec
pop
jne
jmp
jnp
adc
and
or
push
push
sti
mov
inc
xchg
push
pop
mov
sahf
xchg
cmp
dec
and
pop
inc
mov
xchg
jmp
sbb
pop
dec
mov
xchg
icebp
movsb
std
sbb
cli
inc
and
mov
xchg
xor
in
lahf
movl
jmp
push
enter
or
in
sub
pushf
rcll
dec
xchg
sarb
xchg
sub
aad
dec
mov
push
jle
dec
push
lret
xchg
and
loop
fidivl
sahf
rorl
jns
push
movb
adc
daa
lret
cwtl
push
xlat
adc
or
pop
rolb
push
or
add
xor
stos
dec
addb
sub
and
sbb
lahf
mov
mov
mov
aam
add
dec
jbe
dec
mov
add
movsb
lea
popl
stos
xor
adc
and
xchg
idiv
mov
fmuls
lea
adc
fdivs
sbb
push
inc
into
push
push
mov
and
push
outsl
and
popf
xchg
mov
add
test
jbe
xchg
mov
es
ja
mov
and
pusha
push
or
andb
xor
test
mov
inc
sbb
sub
stos
jo
cmp
rcl
neg
addl
cmp
or
sti
pop
jle
xchg
and
mov
inc
add
mov
adc
sbb
movsl
lock
out
adc
sbb
aaa
test
pop
cmp
rcrb
pop
out
loopne
sbb
mov
fildl
push
cld
testl
inc
mov
decl
scas
mov
not
mov
jbe
add
push
cmpl
jl
xchg
cmpsl
sub
add
and
pop
mov
add
jmp
test
adc
es
jbe
add
xor
shll
mov
pop
out
loopne
orb
xor
and
mov
push
inc
xor
pop
inc
xor
mov
jge
xor
int3
out
testl
test
adc
adc
pop
lahf
xor
fcmovnu
or
jnp
idivl
mov
or
mov
pop
push
push
lea
mov
fdivl
shlb
testb
pop
jo
in
ja
xor
js
ja
in
dec
or
mov
fwait
cs
dec
cmpl
or
ja
int
jmp
mov
jle
or
dec
and
mov
jmp
out
push
movsl
pop
dec
mov
push
add
ret
dec
ljmp
pop
sbb
push
or
jnp
testl
stos
fsubrl
push
mov
jl
mov
inc
rclb
stos
out
xchg
ret
inc
mov
jl
or
cmp
je
rcrl
xorb
mov
push
jl,pn
adc
push
xchg
sbb
mov
push
adc
ret
popl
sub
andb
jns
rcll
inc
add
or
into
jne
aas
adc
dec
adc
jg
mov
dec
add
add
imul
nop
add
mov
add
repnz
dec
lahf
pop
mov
push
xor
push
push
or
stos
mov
xchg
fwait
push
lods
or
adc
xor
ds
push
in
and
and
pusha
lcall
or
jbe
movsl
icebp
inc
mov
sub
in
inc
pusha
and
add
xchg
or
ret
adc
or
inc
cmp
cmpw
jne
and
cmpl
mov
or
pop
or
rcrb
cmp
push
jmp
cmpl
push
jbe
fs
add
adcl
push
fidivrl
push
loop
outsb
test
lods
mov
and
push
jo
in
push
jmp
dec
mov
mov
add
push
pminub
insb
ss
cmpsl
repnz
stc
adc
or
movsl
sbb
or
mov
aad
dec
bound
push
sub
mov
lock
loopne
movsb
dec
loopne
mov
mov
mov
pop
push
mov
mov
pop
aam
call
dec
fnsave
jmp
and
sub
loop
pop
push
outsb
pop
jo
xor
lea
cmp
scas
jbe
out
ret
in
pop
mov
jo
std
or
ret
add
insl
mov
ja
add
fldl2e
aaa
icebp
mov
pop
add
ret
mov
int3
jle
pushl
mov
movb
lahf
pop
mov
in
outsl
mov
push
stc
xchg
jae
jecxz
js
sub
inc
rorl
sbb
xlat
jbe
mov
dec
fisubl
js
cmp
inc
mov
push
sbb
out
dec
rol
jl
sarb
cmp
adc
aaa
or
inc
cmp
jl
dec
test
jmp
mov
pusha
jb
jge
add
ret
adc
hlt
int3
je
dec
in
cmp
inc
jae
aas
push
loopne
xor
out
mov
sub
dec
xchg
pusha
sar
fimull
lea
jbe
jb
incl
fs
cmp
jae
testb
jne
iret
shlb
test
sub
jno
leave
mov
jle
je
push
orb
add
call
mov
enter
pop
cmp
jg
outsl
sarb
fstpt
xchg
lods
mov
inc
cmp
ss
jle
and
cmc
incb
pop
inc
mov
and
mov
sbb
inc
loopne
xchg
fistpl
cmp
ss
jp
lcall
sub
sub
sbb
add
hlt
out
lea
inc
mov
negb
lea
inc
cmp
cli
or
ficoms
pop
sar
xchg
sub
push
lea
push
push
lock
sbb
jae
jne
rorb
es
int3
shlb
jle
popf
inc
xor
pop
push
push
mov
insl
sbb
sbb
sub
mov
jae
pop
loope
cmp
mov
cs
sar
cmpsl
mov
jb
and
push
lret
mov
cld
sti
mov
mov
pop
jae
sub
add
dec
sbb
test
pop
jg
inc
cmp
add
sub
nop
je
test
pushf
mov
mov
jne
outsb
mov
repnz
mov
pop
cmp
jmp
mov
mov
stos
push
pmaxub
jae
mov
adc
or
xor
pop
adc
mov
and
lock
test
movl
in
jmp
or
sahf
mov
mov
add
jge
cld
push
lea
xchg
xor
lods
pop
mov
lods
mov
div
push
in
vmovhps
mov
adc
and
dec
mul
add
mov
adc
cld
es
test
dec
jne
pop
js
or
and
enter
les
adc
push
push
mov
xchg
cmc
hlt
jbe
popa
repz
sbb
in
cmp
jbe
sbb
icebp
jns
cmp
add
push
or
push
loope
adc
aas
pushl
lea
mov
add
loopne
cmc
mov
push
in
push
push
or
sbb
ficoms
mov
adc
lret
outsl
xchg
ret
sub
test
lret
pushl
inc
cmp
lea
hlt
jbe
hlt
imul
lcall
clc
push
add
and
enter
add
push
push
cmp
aam
sahf
or
pop
jg
fldt
pop
ret
add
int
in
mov
cmp
je
lea
add
mov
jg
push
lods
push
jb
xor
sbb
jae
ds
je
jb
and
cmp
jge
sbb
cltd
cmp
jne
popa
or
sbb
push
bound
test
or
adc
fs
mov
mov
dec
or
mov
adc
shrb
or
jne
mov
in
mov
xor
adc
int3
je
jmp
xor
mov
xor
dec
in
xchg
test
xchg
dec
lcall
imul
adc
or
ja
out
pop
mov
push
psubsb
xchg
arpl
mov
in
ret
cmp
mov
jecxz
adc
icebp
aas
outsb
rolb
xor
or
test
cmp
jne
pop
ljmp
int3
sete
pop
mov
leave
mov
pop
popl
inc
inc
jmp
push
pop
inc
jmp
push
mov
cmc
pop
jo
xchg
sbb
cltd
lret
in
mov
xchg
int3
adc
xor
lea
je
ret
jne
mov
add
loopne
ljmp
js
fnstenv
push
jmp
jno
call
pusha
ds
cmp
pop
pop
std
pop
popa
push
push
cmp
jne
jmp
out
out
insl
inc
xor
fiaddl
ds
mov
dec
rorl
inc
jne
adc
rolb
cmp
push
hlt
movl
imul
cmp
cmp
incl
shll
push
bound
inc
or
mov
testb
or
sbb
leave
mov
fiadds
and
or
jne
cmp
popf
das
jae
inc
ljmp
mov
mov
inc
dec
jmp
dec
jmp
xor
jo
sbb
sbb
ficomps
pop
jmp
inc
inc
inc
pop
je
cmp
test
sub
dec
add
rol
xor
lods
inc
dec
cld
xchg
shrl
orb
out
or
dec
outsl
aam
sbbb
dec
cmp
sbb
testb
fists
wrmsr
leave
testb
push
addr16
xchg
mov
ljmp
lret
add
push
test
mov
mov
faddl
lods
mov
add
pop
inc
aaa
mov
pop
cmpsb
xor
adc
fdivs
fdivp
push
lea
mov
adc
adc
in
pop
inc
cmp
add
mov
sbbb
cmp
gs
pop
cwtl
popa
and
je
loopne
repz
js
inc
cmp
daa
test
mov
adc
lds
push
test
in
push
pop
jne
xlat
sbb
pop
mov
push
inc
loope
mov
addb
mov
mov
add
jge
jge
or
cmp
push
and
add
adc
jne
or
or
push
sub
push
sar
inc
push
push
adc
mov
call
into
and
scas
je
cmp
jo
in
call
push
sbb
lahf
inc
mov
aaa
xor
push
es
sub
jmp
cmp
and
pop
inc
mov
add
lock
je
inc
cmp
or
lock
push
sbb
mov
or
and
push
mov
xchg
sbbb
shrb
inc
iret
stc
gs
faddl
mov
push
popa
pushf
jbe
sbb
dec
xchg
add
jecxz
or
rolb
jb
out
adc
sbb
popw
cmp
arpl
pop
mov
push
lea
out
mov
lea
jl
lock
test
and
and
and
scas
andl
jl
xchg
popa
js
jmp
adc
loopne
call
jo
mov
pop
mov
test
and
lock
or
jg
cwtl
mov
test
sahf
loope
mov
mov
mov
pop
mov
mov
inc
add
jl
pop
andb
test
push
dec
mov
loopne
cs
pop
jmp
ret
dec
pop
add
cmc
mov
int
jge
jge
pop
push
int
and
ljmp
movq
adc
jmp
or
pushf
jbe
add
jno
sbb
inc
push
push
sbb
enter
push
jae
mov
sahf
leave
or
shr
mov
inc
je
xchg
mull
aad
xchg
hlt
and
pop
cmpl
add
xchg
dec
dec
rcll
nop
test
push
int3
pusha
movsl
loopne
sub
push
out
inc
mul
mov
jg
loopne
fs
or
jg
push
push
psubsb
test
dec
inc
sbb
test
push
adc
mov
subl
push
lcall
inc
mov
jbe
add
push
ret
adc
mov
leave
cmp
cwtl
mov
push
cwtl
inc
movsb
loope
in
dec
or
lahf
aam
mov
mov
scas
call
mov
in
ret
inc
out
push
bnd
mov
into
add
into
add
aad
movsl
mov
add
rcrb
xchg
sub
add
ljmp
pushf
push
jne
add
lods
dec
dec
inc
mov
dec
ret
push
adc
clc
sbb
sbb
mov
lods
push
mov
mov
fstpt
add
mov
testl
push
jp
adc
adc
fbld
push
mov
sbb
mov
fcoms
lods
in
addr16
or
jge
ja
enter
ret
cmp
call
fadd
sub
sarb
sbb
mov
sbb
fldl
mov
dec
adc
jmp
hlt
xor
pop
adc
mov
jo
divl
mov
and
push
es
enter
or
pop
int3
add
in
lea
cmc
push
test
rolb
into
xchg
je
jne
add
push
jp
jle
mov
loop
xor
mov
je
mov
push
and
js
incl
pop
push
or
add
int
jns
jmp
or
jmp
in
imul
add
enter
mov
jnp
in
js
je
mov
movl
mov
xlat
decl
mov
bound
divb
in
jae
test
jo
pop
ss
adc
sbbb
test
sub
orb
shl
in
scas
test
clc
xor
jne
loop
test
loopne
cs
add
add
clc
in
in
fisubrs
push
jne
outsb
dec
jne
adc
push
inc
aaa
sub
in
mov
fistl
pop
pop
ljmp
imul
mov
je
jnp
pusha
das
insb
mulb
out
pop
cltd
mov
add
cmp
fsubrl
or
inc
insb
pmaxub
sbb
sub
xor
adc
add
popf
jecxz
cli
stos
xchg
scas
or
or
adc
mov
ja
jo
js
imul
mov
dec
fdivs
add
cltd
call
push
imul
rol
std
jbe
xchg
inc
cld
dec
inc
testb
add
sub
cli
sbb
pop
mov
add
cmp
loop
add
movzbl
cld
test
call
das
and
adc
inc
and
pop
loopne
test
data16
and
mov
push
sub
hlt
mov
mov
pop
or
ja
sbb
or
push
pop
lea
xchg
or
push
push
push
inc
fdiv
push
loopne
rep
stos
adc
inc
xor
and
shlb
push
sbb
add
push
inc
sub
jg
add
loopne
adc
enter
rclb
or
xchg
mov
jb
mov
pop
inc
fsubrl
movb
out
push
dec
adc
sub
or
or
adc
sti
jecxz
enter
mov
aaa
call
inc
mov
inc
adc
pop
pop
out
roll
shlb
mov
repz
jl
push
or
inc
das
das
cmp
mov
push
jne
or
xchg
movsb
cld
adc
pushf
mov
pop
or
and
or
js
push
subb
mov
mull
je
and
cmp
mov
jmp
movsb
clc
inc
jb
or
adc
fucomi
ret
mov
add
test
xor
adc
jp
push
adc
jmp
mov
roll
push
sbb
mov
xor
andl
push
mov
add
cmpl
std
sub
adc
lock
movsl
mov
sahf
lock
inc
clc
pop
jecxz
repz
in
cmpb
mov
ljmp
cmp
push
xor
cli
push
mov
daa
mov
adc
cmp
inc
mov
push
pop
outsl
push
out
ret
jecxz
sub
mov
pop
sarb
xchg
sub
push
shlb
mov
decb
add
stos
lea
lcall
mov
jmp
mov
es
add
ja
or
cmp
mov
jle,pt
lods
ret
or
cmc
inc
popf
sar
mov
or
jb
loopne
mov
ficompl
fstp
lods
pop
mov
lea
movsl
adc
jmp
sub
add
jbe
inc
inc
cmpb
dec
lds
shlb
mov
popf
pusha
idivl
outsl
mov
push
sti
loop
cmp
xchg
jmp
cmp
push
push
push
test
sarb
xor
lock
jae
push
and
pusha
inc
popa
cwtl
rol
add
adc
sub
sub
jne
xchg
dec
pop
adcl
mov
jns
fisttpl
ficomps
pop
jge
adc
adc
ja
push
shll
subb
inc
dec
dec
adcl
lock
mov
lock
test
xor
ja
xlat
mov
jae
int
mov
ret
daa
int
push
fidivs
add
push
or
sub
lcall
mov
push
and
mov
roll
cmp
jbe
pop
add
and
jl
pop
adc
and
dec
sbb
jb
rep
jmp
in
push
insb
out
sub
or
loopne
add
test
addr16
cmp
push
mov
jg
out
jo
pushf
push
shlb
sbb
mov
cmpsb
fnstenv
adc
xor
fiaddl
dec
push
dec
add
cmp
movsb
rolb
cmpsb
nop
inc
add
inc
sub
add
cmp
jnp
sub
and
adc
out
dec
add
inc
in
call
in
in
lock
hlt
add
cld
cld
or
pusha
scas
pushf
add
add
sbb
into
repz
fs
jo
enter
xor
dec
into
inc
pop
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
pop
repnz
std
cld
out
call
mov
fsts
mov
push
inc
sub
pop
nop
cld
xor
out
adc
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
lods
cmp
pop
add
lcall
mov
or
push
lods
mov
out
out
int3
aaa
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
clc
and
leave
push
adc
aaa
sub
xchg
cmpsb
push
add
pop
pshufw
daa
ja
lea
sarb
adc
add
rorb
add
mov
adcl
lods
in
sahf
sbb
dec
inc
and
out
inc
ret
mov
mov
push
add
push
movsb
push
or
cli
add
subl
lock
push
addl
outsl
push
mov
sub
clc
scas
es
mov
imul
pop
ret
add
push
dec
mov
cwtd
jbe
jne
inc
pop
je
pop
adc
call
adc
je
cli
add
sub
add
aas
jbe
push
pop
call
push
cmp
push
and
xorb
lret
lea
sar
add
shll
pop
mov
add
sbb
sbb
lods
mov
xor
pop
add
push
lock
adc
add
xor
push
or
pop
int3
xor
jmp
clc
add
int
jecxz
pop
hlt
mov
xchg
sar
xor
lret
cmp
jbe
ljmp
cmp
andb
cmp
je
in
addb
jno
jno
cmp
mov
pop
mov
shr
not
and
add
sub
shl
lea
das
mov
xor
sahf
jle
push
popa
data16
and
add
jo
shlb
push
dec
fmull
mov
add
push
rorl
or
jnp
dec
or
adc
mov
ffreep
aas
sub
mov
jge
jle
negl
push
or
cmpsl
push
or
pop
loope
roll
jmp
dec
adc
in
fisubrl
lea
or
mov
inc
xor
ficoms
and
adc
lahf
repnz
xchg
fmul
and
mull
sbb
icebp
add
push
pop
inc
clc
roll
fidivs
push
call
aas
gs
push
or
xor
andl
aas
jnp
dec
inc
adc
inc
push
ret
or
and
mov
imul
push
sti
leave
mov
lds
jp
enter
sbb
in
push
lea
sbb
add
inc
or
fwait
mov
insl
or
xchg
leave
and
pushf
or
sbb
ss
add
shll
mov
add
push
adc
pop
test
ret
addl
out
mov
arpl
inc
scas
or
lea
jo
adc
inc
ljmp
push
cmp
xchg
rclb
ds
jmp
orl
sbbb
and
add
jge
pop
mov
testb
jo
fcmovnu
shl
inc
sub
xchg
mov
rcrb
aas
adc
pop
mov
add
mov
jne
cltd
cmpsl
mov
adc
rolb
add
adc
add
jl
xchg
add
cli
mov
ja
ljmp
jb
call
inc
orl
orl
inc
fstpl
push
push
inc
cld
lock
testl
add
dec
cld
push
outsb
inc
clc
add
add
jb
adc
arpl
aaa
fs
inc
or
jo
inc
mov
add
decb
jne
or
xlat
ss
popf
add
test
inc
push
sbb
sub
stc
add
adc
add
cmp
ja,pt
dec
loop
pop
jo
jle
or
or
fists
lcall
incl
add
stc
add
cmp
xorb
add
pop
push
mov
pop
inc
subl
cmpsl
xchg
stc
sbb
clc
into
add
lea
or
rcrb
xchg
fimuls
lcall
sbb
das
shrb
sub
add
call
gs
pop
adc
lret
aas
ljmp
pop
hlt
lea
loop
jg
lcall
pop
dec
jns
cmpsb
imul
imul
mov
loopne
and
and
ja
and
dec
test
push
and
push
fisttpll
aad
xor
and
and
and
adc
pop
adc
or
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
cmp
cmp
scas
xor
movsl
pop
divb
dec
fiaddl
or
inc
cmp
inc
lock
cmp
dec
scas
cmp
or
into
je
fisttps
scas
mov
inc
in
push
add
je
ja
ja
dec
in
cwtl
sub
or
ret
xor
or
mov
sub
mov
sahf
out
adc
lods
push
paddd
mov
jns
bswap
mov
dec
cmp
rdmsr
cmp
xchg
arpl
movsl
or
sbb
inc
inc
sbb
mov
inc
sub
loope
push
inc
xor
push
shlb
inc
cmp
lea
in
mov
pop
or
into
call
out
sbb
loopne
push
pmuludq
cld
mov
sti
fmul
hlt
cmp
jmp
dec
cmp
subb
and
or
jne
ret
adc
orb
out
frstor
push
outsb
adc
xorb
fadds
or
aam
nop
stos
ficompl
imul
cli
incl
mov
mov
mov
jl
fbstp
mov
lea
xor
mov
mov
add
mov
push
xchg
test
lods
xchg
or
pushf
mov
fsts
cli
xlat
je
dec
imul
mov
cmp
into
jne
lret
ret
pop
jmp
cmpl
imul
js
out
andl
xor
lock
outsl
add
je
xor
scas
in
mov
daa
sub
cmp
cmpl
and
sahf
add
and
push
shl
inc
test
cwtl
cli
push
inc
aam
sbb
mov
sub
icebp
imul
sar
jle
cmp
push
mov
dec
xor
int3
inc
stos
xchg
jge
iret
jg
cmp
jge
xor
mov
mov
decb
jne
cmpsl
ja
inc
fs
or
sub
inc
cltd
adc
mov
mov
fimuls
into
dec
bound
mov
into
pop
jp
sbb
xchg
cmpsb
dec
jp
fs
imul
or
pause
mov
das
pop
popa
or
call
jo
cwtl
out
or
fimuls
subb
movsb
inc
or
outsl
or
push
mov
pop
outsl
mov
jo
jmp
or
xlat
pop
lods
xchg
xor
rcr
and
fistps
or
lcall
cmp
add
xchg
cmp
pop
sub
sub
test
dec
cmp
stos
xchg
push
rolb
adcl
sub
inc
lds
or
fimuls
sub
mov
test
jmp
jmp
sbb
ja
andl
mov
cmp
ja
push
push
stos
mov
leave
inc
je
jmp
adc
add
popf
jnp
jl
outsb
jo
cld
dec
addb
push
push
rorb
jbe
xchg
jo
dec
push
sbb
cmpb
jbe
dec
fists
cmp
jg
test
jne
push
orl
mov
dec
dec
adc
push
aas
inc
cli
add
enter
push
ss
aam
sbb
inc
xchg
push
jnp
jne
movsl
pop
dec
rcrb
pop
cmpsl
movb
les
push
sbb
or
push
jmp
decb
test
adc
cmp
jecxz
dec
xchg
sub
add
cs
movsl
sahf
add
jg
mov
add
pushl
pushf
push
cwtl
lret
aam
or
pushf
pop
jmp
mov
dec
je
mov
fcoms
mov
add
adc
clc
imulb
pop
idivb
loopne,pt
fmull
push
jns
mov
sub
les
mov
ret
addr16
mov
jbe
and
sbb
fists
fsubrs
push
insb
cmpsl
adc
push
out
xor
rolb
cltd
pop
inc
jae
push
push
mov
mov
dec
imulb
xchg
int
push
or
push
mov
mov
rolb
cmp
std
mov
clc
aam
push
push
loopne
pushf
mov
xor
scas
pushf
arpl
push
mov
adc
inc
ljmp
loopne
pusha
jg
inc
adc
sbb
out
ja
adc
sub
add
mov
adc
faddl
ret
push
aam
fidivrs
sar
cmp
xchg
pop
or
inc
and
stos
and
loopne
adc
sahf
jne
jno
and
lea
lar
mov
xchg
inc
mov
xchg
out
ss
dec
loopne
les
sbb
fldenv
or
in
aaa
imul
mov
in
sbb
push
movsl
push
dec
pusha
scas
enter
and
add
add
lock
or
xlat
xorb
addr16
enter
bndldx
les
and
mov
mov
pop
popl
xor
lcall
loopne
cmp
nop
loopne
scas
jbe
push
or
test
cmpsb
inc
xchg
int3
push
loopne
test
in
orl
push
mov
or
mov
and
xadd
enter
insb
sub
cmpsl
test
or
or
sub
jge
data16
sbb
flds
mov
or
iret
cmpsb
rcrl
sbbb
addl
sbb
sbb
pop
lods
add
jmp
mov
sub
jne
and
xchg
nop
push
inc
xor
cld
js
inc
outsb
les
push
add
or
xor
push
lock
push
in
jmp
push
dec
and
or
jp
mov
push
jmp
ss
imul
inc
xor
adc
fcoms
test
lods
mov
jle
ja
cmp
push
mov
push
jo
sub
dec
xchg
cmp
push
aad
cld
xor
add
loop
fmuls
daa
pusha
push
mov
loopne
or
pop
push
push
sub
nop
push
es
sbb
mov
fdivrs
mov
pop
sub
mov
movsl
lods
xchg
cmp
sbbl
ret
mov
xor
cmpsb
adc
pop
sub
lret
pop
pop
pop
mov
mov
loopne
push
das
push
inc
xchg
mov
mov
xchg
cld
fcomps
lea
push
jmp
push
aaa
push
or
cmp
add
cwtl
enter
lds
push
mov
cmp
pop
lods
sub
adc
popl
aam
cmpsl
sub
ja
adc
inc
mul
xchg
and
add
shrd
jg
pop
enter
mov
jne
fisubs
cmpxchg
faddl
add
push
leave
or
fidivrs
orl
push
pusha
pop
push
dec
inc
ficomps
push
rolb
decl
clc
mov
mov
fsubp
and
fcomp
divl
and
pop
nop
cmp
pusha
push
nop
adc
mov
jg
loopne
inc
enter
mov
lahf
out
pop
push
in
in
hlt
cld
add
orb
xor
pop
loopne
iret
jnp
sub
cmp
inc
push
push
fs
add
inc
adc
push
adcl
dec
pushf
and
or
adc
add
or
shl
insl
insb
push
jmp
or
adc
lcall
or
dec
or
ror
arpl
or
push
mov
fadds
clc
les
lcall
cmp
test
cmp
fmuls
hlt
inc
std
or
int3
sub
pop
xchg
push
sbb
outsb
fwait
rclb
leave
ret
jae
inc
mov
sub
and
sbb
inc
mov
or
sub
sti
incl
add
or
enter
mov
push
push
push
lahf
or
test
enter
cmp
loope
xchg
faddl
inc
push
sahf
add
xor
jae
fucomip
sub
xchg
fidivl
push
and
icebp
adc
nop
sbb
sbb
cld
shlb
addl
test
push
cmpsl
or
jg
js
data16
int3
jmp
mov
push
add
addb
fsubl
dec
push
xorl
sbb
and
add
sub
inc
push
in
mov
shrl
ljmp
push
popa
inc
int3
decb
or
pop
stc
gs
out
push
push
je
mov
je
mov
sub
int
mov
sbbb
xlat
and
sub
push
dec
xor
xchg
mov
call
imul
add
cmp
mov
dec
flds
sub
pop
lcall
add
and
cli
ja
jle
clc
test
je
testb
fadds
inc
cmp
jae
adc
jb
cmp
jae
cmp
push
into
test
mov
mov
popa
movsl
mov
push
dec
mov
movsb
daa
adc
or
data16
inc
cmp
mov
cmp
jmp
sbb
sbb
adc
sub
or
rorb
sbb
jmp
sbb
pop
and
pop
test
ds
test
inc
leave
fldl
jl
mov
fmuls
jne
pop
and
mov
fdivr
xor
cmp
jmp
add
and
out
add
inc
jmp
push
sub
sub
adc
inc
addl
pop
inc
fimuls
pusha
addl
sub
inc
or
pop
or
adc
push
lcall
add
or
mov
jne
bound
je
pop
or
cwtl
inc
or
adc
aad
jno
roll
push
adc
std
mov
aad
or
or
xlat
sar
mul
js
jge
mov
or
adc
adc
jne
or
pop
loope
add
test
add
jmp
mov
lcall
push
add
or
jp
out
cltd
or
cmp
loopne
add
sub
or
adcl
cld
mov
insb
mov
jno
ds
and
clc
or
jmp
xor
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
sub
gs
insb
add
outsb
je
insl
and
cmp
xchg
jge
fimuls
dec
push
push
and
inc
jg
notb
inc
and
add
xor
fucomi
pushl
push
push
jo
insb
imul
or
outsb
lods
insl
out
outsl
je
shlb
jne
imul
popa
arpl
jbe
lods
fnstenv
inc
outsl
sub
movsb
jae
pusha
jg
fistps
dec
inc
push
and
or
gs
jae
mov
out
dec
push
daa
fdivl
cmp
xor
and
insl
jo
cmp
adc
inc
cs
pop
mov
imul
pop
outsl
inc
imul
popa
xchg
jp
stos
test
dec
aaa
lods
fstpl
sub
or
push
cmpsb
mov
outsl
ja
jno
outsl
ss
je
xor
jo
insb
jbe
xchg
jne
adc
ss
arpl
mov
xor
pop
push
gs
js
loopne
or
lds
jbe
out
outsl
jo
mov
sti
push
fs
push
cmp
pop
arpl
aaa
stos
adc
jne
pop
xor
bound
in
inc
fs
arpl
das
ret
scas
loopne
imul
fldenv
inc
jno
jbe
popa
pop
cmp
cli
xor
inc
les
cmp
ds
xorl
or
add
cmp
and
and
pop
push
mov
inc
dec
cmp
addr16
jae
loopne
xchg
xor
fdivrl
adc
je
and
xchg
push
imul
dec
imul
pop
sub
push
add
ds
cmp
imul
fldt
add
cmp
and
popa
dec
pop
imul
pop
leave
jne
outsb
outsl
lock
fiadds
pop
xor
cmp
inc
gs
push
inc
fs
je
sbb
das
push
jb
bound
dec
jae
pop
icebp
outsb
inc
jle
dec
add
push
enter
in
fisubl
pop
lea
mov
outsl
js
jne
xor
dec
add
jbe
call
fstps
or
data16
xchg
cmp
jecxz
xchg
fs
and
das
cli
mov
jnp
mulb
pusha
xchg
sarb
insb
add
js
outsl
mov
dec
adc
lret
sbbl
js
jne
ds
dec
rcrl
hlt
adc
jbe
add
sub
adc
inc
mov
jb
jns
mov
xor
adc
add
sub
or
in
or
add
sub
loopne
jae
popa
imul
pop
cwtl
push
inc
out
add
sub
sub
dec
add
inc
scas
in
test
mov
add
or
leave
add
xchg
sub
push
add
add
rorl
mov
add
add
mov
incl
adc
mov
in
pusha
aaa
add
pop
pop
inc
mov
shr
and
iret
roll
add
mov
push
adc
fsubs
push
push
dec
cmp
add
out
loope
loope
nop
push
push
xor
nop
pop
sub
cli
aad
and
cmc
loope
inc
lds
arpl
repnz
add
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
lcall
xchg
es
test
jno
xor
sbb
and
ljmp
jmp
mov
sub
sbb
mov
sub
das
test
incl
in
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
inc
xchg
popf
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
cmp
fsubl
sub
adc
pop
or
loopne
cmp
dec
push
and
ret
bound
enter
pushl
insl
aad
test
gs
or
cmpsb
mov
call
mov
pushl
push
popa
xor
sbb
adc
mov
push
sub
mov
mov
inc
cltd
sub
push
arpl
clc
jl
test
ja
cltd
idivb
push
out
push
or
fisubrs
mov
vandpd
xor
add
addr16
ljmp
out
sbb
stos
stos
out
jbe
lcall
sbbb
incl
jge
xchg
cli
cli
adc
inc
leave
sti
lock
ljmp
aam
pop
mov
scas
ljmp
movsb
mul
jb
xchg
fwait
rol
jne
pushl
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
pushl
pop
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
incl
or
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
lcall
incl
pop
or
adc
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
decl
or
sbb
sub
je
sbb
cs
sbb
mov
pop
out
pop
mov
sti
movsb
push
push
divb
cmp
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
cmpsb
push
push
cmc
mov
shr
sub
and
pusha
jecxz
cld
pop
jns
mov
dec
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
dec
dec
ficomps
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
call
test
iret
jmp
add
push
jg
andl
lahf
lahf
mov
mov
mov
inc
rolb
xchg
lods
and
cmp
decl
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
xor
lcall
std
repz
decl
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
dec
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
cmpb
inc
enter
mov
sbb
ljmp
out
jae
shlb
sbb
dec
shll
and
push
sub
jle
nop
nop
ljmp
mov
lret
out
sub
mov
cmp
jns
pop
pop
loop
or
mov
cmp
push
je
cmp
or
push
xchg
dec
dec
fisttpl
push
or
decl
and
mov
ret
mov
lods
lods
out
les
cmpsb
cmp
xchg
movsb
cli
jg
call
in
aaa
bnd
mov
out
mov
enter
aaa
pop
fisubrl
mov
pushl
out
mov
aad
pushf
dec
dec
rorb
test
mov
push
jmp
repz
hlt
pop
iret
ljmp
hlt
jp
cmp
scas
jmp
outsl
mov
mov
and
jb
sbb
and
cmpsb
cmpsb
icebp
jae
mov
call
call
fnstsw
je
ds
pop
and
mov
mov
jp
jo
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadds
add
add
lcall
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcrl
sbb
or
loope
jmp
clc
adc
cwtl
cwtl
mov
adc
xor
imul
pushl
mov
cmpsl
sub
push
push
and
jmp
into
dec
stos
push
push
call
sub
jp
mov
or
or
fcmovbe
out
pushl
test
shrb
mov
sub
sub
adc
mov
test
push
cmp
xlat
cld
insl
mov
push
cmp
repz
repz
iret
repz
add
cmp
repz
inc
popf
inc
xchg
cmp
repz
iret
repz
addr16
ljmp
cmp
ret
push
cmp
repz
inc
add
iret
repz
hlt
xor
xchg
jae
cmp
repz
or
gs
repz
repz
repz
ss
cmp
iret
repz
sbb
iret
repz
iret
repz
dec
popa
into
jnp
jno
iret
repz
cmc
push
iret
repz
pop
enter
repz
inc
aam
cmp
repz
imul
push
repz
repz
adc
xor
repz
repz
mov
cmp
rep
mov
repz
shll
sbb
cmp
repz
dec
adc
das
repz
repz
int3
cmp
repz
repnz
sub
repz
mov
cmp
repz
or
repz
sub
cmp
loop
cmp
repz
cmp
push
repz
repz
insb
in
iret
repz
outsb
out
cmpsb
test
aaa
cmp
repz
xor
mov
cmp
repz
mov
repz
cli
pop
and
iret
repz
aad
outsl
jb
cmp
repz
push
and
repz
jl
and
faddl
test
cmp
repz
repz
pop
stc
rclb
repz
cmp
mov
repz
repz
iret
repz
and
cmp
repz
clc
adcb
cmp
repz
mov
iret
mov
adc
cld
cmp
repz
arpl
repz
repz
iret
repz
add
xlat
stos
cmp
repz
lret
jge
cmp
repz
pop
inc
lock
iret
repz
aam
scas
pushf
movsb
jb
iret
repz
mov
xchg
es
repz
test
iret
movsl
in
jno
xor
repz
add
and
repz
repz
repz
adc
cmp
repz
or
iret
repz
mov
iret
cmp
mov
jecxz
cmp
repz
push
roll
in
repz
repz
mov
push
repz
lret
mov
cmp
repz
shr
stos
sti
repz
repz
dec
xor
iret
stc
add
cmp
cmp
repz
push
mov
iret
repz
popf
cmp
mov
mov
and
push
cmp
repz
int
adc
repz
repz
xchg
inc
pop
iret
repz
cmpsl
jle
fs
sbb
repz
pusha
orl
and
nop
mov
repz
out
mov
cmp
repz
loopne
cmp
repz
repz
push
and
ret
cmp
shrl
iret
repz
out
aaa
insl
repz
repz
aad
test
iret
push
hlt
ljmp
cmp
mov
cmp
repz
mov
call
fnsave
mov
cmp
jo
mov
repz
repz
add
push
popa
iret
repz
xor
sbb
sahf
loope
cwtl
adc
cmp
repz
repz
push
xchg
into
push
sub
repz
mov
iret
repz
iret
repz
cltd
sub
cmp
repz
arpl
repz
repz
iret
repz
add
xlat
stos
cmp
repz
lret
jge
cmp
repz
pop
inc
lock
iret
repz
aam
scas
pushf
movsb
jb
iret
repz
mov
xchg
es
repz
test
iret
movsl
in
jno
xor
repz
add
and
repz
repz
repz
adc
cmp
repz
or
iret
repz
mov
iret
cmp
mov
jecxz
cmp
repz
push
roll
in
repz
repz
mov
push
repz
lret
mov
cmp
repz
shr
stos
sti
repz
repz
dec
xor
iret
stc
add
cmp
cmp
repz
push
mov
iret
repz
popf
cmp
mov
mov
and
push
cmp
repz
int
adc
repz
repz
xchg
inc
pop
iret
repz
cmpsl
jle
fs
sbb
repz
pusha
orl
and
nop
mov
repz
out
mov
cmp
repz
loopne
cmp
repz
repz
push
and
ret
cmp
shrl
iret
repz
out
aaa
insl
repz
repz
aad
test
iret
push
hlt
ljmp
cmp
mov
cmp
repz
mov
call
fnsave
mov
cmp
jo
mov
repz
repz
add
push
popa
iret
repz
xor
sbb
sahf
loope
cwtl
adc
cmp
repz
repz
push
xchg
into
push
sub
repz
mov
iret
repz
iret
repz
cltd
sub
cmp
push
hlt
cmpsl
push
jle
gs
sbb
movsb
ret
cmp
pop
xchg
cmp
lcall
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
testb
dec
and
fcomip
sub
xlat
es
xorb
pop
dec
and
ljmp
inc
das
jne
orl
imul
movb
pop
out
xchg
pushf
xchg
mov
push
pop
call
mov
and
dec
loopne
sub
ret
hlt
mov
cltd
pop
imul
jno
mov
mov
data16
cmp
sbb
adcb
jg
pushl
imul
stc
or
xchg
jo
push
sbb
clc
mov
ljmp
dec
add
jecxz
push
push
stos
sub
mov
add
aaa
or
xor
xchg
and
push
in
push
sbbb
sub
pop
repnz
imul
jmp
hlt
int
add
bound
les
push
popf
mov
mov
xor
mov
in
cmp
out
stos
pop
jno
push
mov
and
lcall
xchg
fldl
cmp
dec
out
inc
xchg
push
lea
add
aam
pusha
push
adc
lcall
jmp
int3
fstps
call
mov
jns
out
jl
inc
jl
psubsw
test
leave
xchg
addb
push
adc
insb
lcall
dec
std
push
sti
jne
aad
ss
fldenv
cmpsb
and
pushl
cmp
addr16
push
out
mov
xchg
rcrb
fwait
xchg
sahf
add
dec
popa
fsubl
mov
sbb
icebp
call
sbb
loop
mov
in
and
inc
adc
pop
sbb
mov
lods
ljmp
push
test
test
cltd
fnstsw
testl
cmc
mov
inc
cmp
pop
sti
jle
mov
jbe
and
fdivl
icebp
arpl
xor
dec
inc
arpl
inc
test
adc
test
jge
mov
xor
sub
decl
mov
repz
shl
sub
mov
cli
inc
jmp
mov
inc
mov
jge
fsubs
xor
fnstcw
rol
mov
mov
cmpsb
cmc
cmp
movsl
jp
sub
mov
es
lods
mov
in
js
or
push
jle
testb
ret
mov
pop
add
cmc
lahf
pop
cmpb
aad
test
enter
cmp
sbb
call
cmp
or
sbb
in
lcall
out
outsb
jmp
jmp
jle
mov
call
ss
ljmp
xor
scas
sub
and
movsl
xchg
xor
aaa
cld
cmp
dec
cmpsb
loopne
shlb
icebp
add
dec
inc
in
jg
push
push
pop
xchg
imulb
jbe
lea
pushl
push
in
add
sahf
shll
sbb
sub
mov
popf
pop
ljmp
pushl
jae
or
mov
sbb
push
jmp
inc
adc
mov
or
pop
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
repnz
pushl
sbb
jns
aaa
mov
pop
std
stos
pop
fistpll
fildl
mov
inc
cmp
sub
mov
ret
jb
loop
or
cmp
mov
or
add
or
cmpsb
pushl
pushf
fs
rcll
xor
sarb
repz
add
xchg
lret
icebp
cmp
repz
xchg
push
notb
and
iret
repz
dec
addr16
loope
adc
repz
out
jmp
cmp
repz
repz
push
imul
pop
cmp
repz
mov
andb
iret
repz
loopne
sbb
iret
repz
pop
sbb
iret
repz
sub
add
movsl
repnz
pop
iret
repz
sub
cmp
repz
mov
iret
repz
stos
push
push
iret
repz
stc
cmp
cmp
repz
jmp
int3
repz
repz
mov
fcmovne
repz
inc
jmp
cmp
repz
dec
sti
push
push
repz
repz
fs
cmp
repz
mov
rcrb
repz
push
or
inc
repz
repz
iret
repz
test
lahf
mov
lds
fsubrl
cmp
repz
adc
iret
repz
jge
adc
repz
repz
shrb
repz
repz
sbb
out
iret
repz
mov
cmp
repz
movsb
in
fwait
repz
repz
call
cmp
mov
cmpsl
cmp
repz
jnp
hlt
add
cmp
repz
jle
out
repz
fxch
aam
scas
xor
repz
shlb
mov
cmp
repz
iret
repz
lea
sbb
repz
jg
pop
jae
cmp
repz
push
xor
iret
repz
mov
mov
xor
in
cmp
aas
jns
cmp
repz
iret
repz
cmpl
cmp
repz
inc
jno
pushf
repz
pause
popa
jo
inc
iret
repz
cmpsl
movsb
pop
imul
repz
add
insl
jbe
cmp
repz
xlat
lret
inc
mov
pop
sbb
shlb
iret
repz
stc
pop
pushf
jp
cmp
repz
andl
enter
iret
mov
jno
lods
cmp
repz
cmp
xor
cmp
repz
scas
mov
iret
push
add
repz
stos
sub
jnp
cmp
repz
repz
sbb
repnz
mov
push
push
loope
cmp
repz
out
lahf
adc
repz
mov
add
iret
repz
adc
cmp
repz
inc
mov
iret
repz
or
push
add
cmp
jb
cmp
repz
repz
cmpsb
push
cs
repz
addr16
xchg
lds
cmp
repz
sbb
iret
repz
or
repz
sbb
frstor
cmc
cmp
repz
jle
cld
repz
repz
faddl
cmp
and
xor
repz
jecxz
mov
repz
sub
iret
repz
dec
shll
iret
repz
mov
cmp
repz
adc
cmp
adcb
iret
repz
mov
cmp
repz
cmp
fwait
or
cmp
repz
mov
repz
repz
repz
mov
add
mov
repz
push
ljmp
inc
sbb
repz
popa
or
cmp
leave
cmp
repz
mov
jae
repz
repz
int
outsl
fcmovne
repz
repz
ret
and
dec
xchg
add
repz
iret
hlt
inc
pop
daa
stos
popf
cmp
repz
jecxz
jbe
repz
repz
sub
iret
mov
ljmp
cmp
rorl
iret
repz
mov
repz
ret
mov
repz
into
fistps
push
repz
repz
imul
dec
inc
fidivrs
dec
cmp
repz
push
jmp
iret
repz
sub
cmp
iret
jns
imul
cmp
cmpsb
cs
cmp
repz
cmp
and
ds
les
repz
push
cwtl
mov
repz
mov
enter
iret
jl
test
subb
iret
repz
pop
push
test
sub
iret
repz
or
fwait
rcr
iret
repz
adc
iret
repz
mov
iret
icebp
jne
jg
jb
iret
repz
sti
inc
and
repz
repz
arpl
iret
dec
mov
cmp
repz
shll
repz
iret
repz
dec
cmp
aam
jp
iret
repz
lods
cmp
repz
repz
fdivrs
ret
iret
repz
pop
rcl
and
repz
cmp
pop
lcall
mov
iret
out
lahf
mov
aas
cmp
repz
mov
cmp
repz
add
int
iret
repz
dec
out
stos
xchg
shrl
iret
repz
gs
mov
or
adc
iret
repz
xlat
mov
cmp
repz
inc
shl
adc
cmp
repz
idiv
cmp
iret
scas
push
cmp
repz
or
cmp
repz
lret
xor
call
push
xor
movsl
cmp
repz
sti
jl
cmp
xor
inc
inc
fsubrp
dec
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
jmp
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
push
cmpsl
lea
test
mov
pop
add
shrb
add
scas
mov
ljmp
xchg
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
call
ljmp
icebp
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
sbb
outsl
cli
hlt
pop
mov
adc
sub
pusha
out
sbb
pushl
jp
xchg
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
ja
es
adc
push
and
xchg
dec
push
mov
mov
xchg
push
cmp
mov
pop
call
cmp
mov
jmp
scas
into
movsb
test
fidivs
xchg
inc
jp
push
es
movsb
inc
pop
pop
push
push
push
mov
test
push
sbb
jbe
test
cmp
push
es
xchg
movsl
cmpsb
out
imul
jbe
fisubrs
xchg
xchg
push
ss
dec
cmp
mov
imul
scas
inc
mov
test
xchg
scas
test
sahf
mov
push
dec
notb
sbb
out
mov
test
imul
cmp
push
xchg
mov
ljmp
sbb
mov
test
imul
ds
fisubrs
jbe
mov
outsb
mov
xchg
jp
test
mov
xchg
push
ficoms
imul
out
push
xchg
sbb
cmpsb
jbe
sahf
sbb
outsb
push
sbb
movsl
mov
push
push
push
cmpsl
mov
ds
cmpsb
ficoms
jle
mov
sbb
mov
pop
jmp
push
push
mov
push
ss
movsl
xchg
into
pop
notb
imul
ds
into
cmp
test
imul
out
inc
movsl
movsl
pop
cmp
sbb
inc
inc
cs
jp
test
jmp
mov
test
mov
mov
jp
jle
mov
jp
cs
out
mov
push
testb
pop
ljmp
test
push
es
cmp
xchg
out
pop
jp
lods
pop
mov
pop
imul
movsl
into
push
push
scas
test
fidivrs
fiadds
push
mov
sbb
inc
dec
mov
pop
mov
xchg
push
jmp
mov
lods
mov
jle
jp
push
jle
pop
inc
sub
dec
lods
jne
sahf
jbe
cmpsl
push
rcrb
pop
add
lods
inc
push
jns
out
inc
add
or
sbb
out
cmp
pop
push
sahf
out
sahf
dec
inc
je
bound
sahf
out
mov
cmpsb
lods
pushf
out
sahf
out
mov
jns
cmc
iret
rcr
jns
out
jnp
insl
push
out
sahf
out
inc
dec
and
sahf
out
sahf
xor
adc
out
lret
rcr
out
jns
out
icebp
cli
xchg
cwtl
sahf
out
sahf
test
jns
out
idiv
loopne
jns
out
int3
scas
movsl
sahf
out
sahf
mov
lahf
jns
out
inc
dec
push
pop
push
jns
out
jl
push
adc
or
xor
and
jns
out
lea
jns
out
mov
aad
sahf
out
sahf
ret
enter
in
sahf
out
cmp
out
sahf
out
pop
or
outsb
sahf
out
sahf
jae
dec
inc
pop
push
jns
out
idiv
loope
jns
out
int
scas
movsb
sahf
out
sahf
mov
sahf
jns
out
inc
dec
push
pop
imul
sahf
out
jge
pop
adc
out
sahf
or
xor
and
jns
xchg
sahf
out
mov
aam
sahf
out
sahf
ret
repz
in
sahf
out
cmp
sub
adc
jns
out
push
or
jns
jb
dec
inc
pop
push
jns
out
add
pop
sbb
out
sahf
out
cmp
pop
push
sahf
out
sahf
dec
inc
jne
arpl
sahf
out
mov
cmpsl
lods
popf
out
sahf
out
mov
jns
push
fdivrs
out
jp
insb
addr16
out
sahf
out
inc
dec
and
sahf
out
sahf
xor
push
add
out
lret
xlat
out
jns
out
lock
xchg
cltd
sahf
out
sahf
test
jns
out
add
jns
out
and
sahf
out
sahf
jb
pop
push
inc
dec
jns
out
rcr
lret
out
sahf
out
repz
sahf
mov
fwait
jns
out
mov
out
sahf
out
xchg
cwtl
rcr
sahf
out
sahf
leave
out
std
lock
out
imul
pop
out
sahf
out
inc
dec
add
sahf
out
sahf
sbb
cmp
jns
pusha
ja
pop
out
sahf
out
inc
dec
add
sahf
pop
adc
cmp
es
out
mov
out
sahf
out
xchg
sahf
aad
sahf
out
sahf
iret
ret
sti
idivb
out
fcmovne
shl
jns
out
clc
cmc
mov
sahf
movsb
test
jns
out
push
or
xor
jns
out
sub
jns
je
pop
push
inc
dec
jns
out
fcmovbe
ror
out
sahf
out
hlt
stc
mov
sahf
out
sahf
test
xchg
out
or
adc
out
and
bound
out
sahf
js
push
pop
dec
inc
jns
out
popa
insb
jnp
push
out
sahf
out
dec
inc
or
out
sahf
adc
cmp
sahf
out
mov
stos
cmpsb
test
jns
out
lahf
xchg
sahf
out
sahf
ret
into
in
loopne
cli
jns
out
mov
lods
mov
out
cltd
xchg
sahf
out
sahf
out
cld
jns
out
addr16
jo
out
sahf
out
dec
inc
lar
sbb
and
sahf
out
or
push
sbb
out
sahf
out
and
imul
inc
jns
out
lret
call
in
pushl
scas
mov
jns
out
add
adc
and
jns
out
ss
dec
inc
sahf
out
sahf
pop
push
insb
gs
jns
out
nop
cltd
orb
mov
sahf
out
sahf
lret
cmc
out
out
sahf
out
cmp
sub
pop
out
sahf
out
or
out
sahf
popa
push
jns
out
stos
mov
jns
out
popf
xchg
jecxz
sahf
out
sahf
icebp
clc
into
aad
jns
out
jbe
fs
push
out
sahf
out
inc
dec
ds
sahf
out
sahf
sub
sbb
or
jns
out
out
hlt
std
ret
sahf
out
rcr
scas
cmpsl
sahf
out
sahf
mov
xchg
jns
out
dec
inc
pop
push
imul
jnp
add
sahf
pop
push
and
xor
jns
out
fst
iret
stc
out
sahf
out
jmp
xchg
pushf
sahf
out
sahf
xchg
jns
out
in
in
test
rcr
movsb
lods
sahf
out
sahf
mov
orb
jns
jne
addr16
out
sahf
out
dec
inc
xor
sahf
out
sahf
es
adc
add
jns
out
xlat
faddp
int3
repz
sahf
out
loope
lahf
xchg
sahf
out
sahf
lea
sahf
out
inc
dec
push
pop
arpl
jns
out
jno
clts
sahf
out
sahf
sbb
xor
out
lcall
sahf
out
lods
movsl
rcr
sahf
out
sahf
ror
jmp
in
jns
out
or
sbb
cs
sahf
out
cmp
inc
dec
sahf
out
sahf
push
pop
outsw
je
jns
out
mov
out
sahf
out
xchg
sahf
jmp
sahf
sti
repnz
jns
out
xor
and
adc
sbb
push
jns
sahf
out
sahf
imul
dec
inc
repz
jns
add
add
adc
repz
and
sbb
insb
cmp
repz
stos
dec
lcall
mov
repz
xor
cli
xor
repz
lds
loop
mov
outsb
mov
inc
sbb
xchg
clc
jg
cmp
sbb
mov
add
icebp
decl
jg
cmp
add
sub
cmp
decl
call
add
mov
cmp
push
rcrb
aaa
int3
add
out
ret
push
incb
mov
imul
inc
int3
test
pop
adc
sub
and
fs
nop
test
xor
add
pop
mov
imul
ss
add
add
push
add
mov
sbb
or
add
xchg
push
arpl
jmp
push
jmp
jl
das
js
mov
stc
pop
rcll
cmp
xor
push
add
les
push
mov
adc
or
rep
ljmp
mov
push
and
mov
xor
adc
sub
add
inc
mov
mov
mov
add
adc
add
and
jmp
jl
fstpt
mov
jne
xchg
inc
test
mov
stos
jmp
add
add
add
lea
push
cmp
insb
lcall
clc
push
jle
ret
enter
inc
cmp
push
adc
mov
in
lcall
enter
loopne
mov
pop
cmp
lcall
add
jl
pushf
cmc
mov
pop
decb
add
dec
js
gs
inc
inc
sahf
mov
dec
cmp
cld
in
outsb
mov
cli
inc
flds
pop
rdpmc
dec
sbb
in
out
lock
add
inc
adc
lea
sbb
cs
cmp
in
add
push
dec
push
sbb
jl
mov
lahf
jp
mov
xor
jo
dec
stc
fildl
push
add
js
cmp
xor
jmp
data16
add
rol
gs
stos
ror
je
or
push
jle
mov
cwtl
xor
dec
push
and
mov
call
add
lret
add
movsb
mov
rol
mov
call
call
mov
outsb
out
movsb
add
cltd
adc
add
pop
push
adc
hlt
out
fistpll
int
adc
add
xchg
pop
pop
jl
mov
test
or
add
add
push
outsb
and
nop
lea
imul
inc
jle
imul
or
call
outsl
es
add
mov
inc
roll
xor
mov
inc
jl
cld
add
outsl
je
std
hlt
adc
call
mov
push
mov
mov
pop
pop
jg
xor
pop
sbb
add
sti
and
js
fs
call
xor
xchg
inc
orl
and
rcrl
out
dec
rolb
mov
fiadds
popf
add
add
in
rclb
jge
mov
pop
dec
mov
push
mov
push
jge
int
clc
jl
add
or
or
push
hlt
mov
mov
pop
push
push
mov
icebp
ljmp
lock
pop
nop
sbb
mov
xchg
stos
mov
ljmp
push
add
repnz
inc
sti
and
push
enter
shlb
push
sbb
inc
cmp
mov
test
insb
ss
data16
sbb
cmp
jbe
sahf
fldt
imul
test
push
lock
lea
inc
jmp
and
clc
sbb
mov
hlt
mov
lret
mov
sbb
mov
sbb
mov
push
outsl
push
push
data16
sub
rorl
inc
fistl
xor
cmp
inc
loope
jge
out
mov
mov
adc
push
ret
int3
pop
test
pushf
lcall
movsb
lea
push
cmp
cld
test
add
or
xchg
lea
adc
mov
mov
and
out
push
lret
mov
jbe
jnp
jl
pop
ljmp
out
js
call
mov
orb
fidivl
loopne
sti
pusha
ret
nop
shll
add
mov
inc
sub
sahf
push
mov
sahf
enter
mov
add
cmc
push
out
pop
icebp
divl
fs
or
pop
sub
mov
push
sbb
dec
lock
mov
add
mov
push
mov
adc
ret
push
addb
les
jbe
mov
push
cli
dec
cwtl
adc
in
je
mov
pop
xor
dec
imul
les
xchg
pushl
out
insl
push
out
add
jne
pop
inc
lea
jbe
xchg
mov
outsl
sub
jo
ljmp
inc
mov
push
ret
mov
in
sbb
les
mov
stc
mov
mov
xor
and
cmpb
leave
and
or
inc
add
scas
je
lds
add
mov
jo
mov
div
mov
push
aas
ret
xchg
rsm
int3
in
or
xor
arpl
inc
mov
add
mov
cmpsb
nop
jl
dec
loopne
call
mov
push
adc
scas
outsb
inc
add
in
clc
imul
mov
cmpsb
mov
mov
cmp
adc
scas
into
incb
or
adc
fwait
test
fwait
imulb
dec
mov
push
fistl
inc
les
outsb
push
mov
jb
lcall
test
add
lea
cmp
push
add
push
xor
mov
cmp
mov
mov
mov
cs
dec
adc
bound
outsl
sbbl
cli
cmc
test
in
int3
xor
fcomi
loop
mov
or
add
out
adc
jbe
fisttpll
jl
or
xlat
adc
arpl
js
push
pusha
xor
push
or
jl
and
in
mov
insl
mov
sbb
sar
push
xchg
cltd
push
cli
and
loopne
arpl
add
insb
std
lcall
and
adc
adc
je
in
incl
int3
mov
or
jne
push
out
sti
stos
or
inc
cld
in
sub
jl
call
jbe
xchg
jmp
clc
in
add
sbb
out
rorl
dec
lock
arpl
inc
lea
js
mov
pushf
div
push
add
mov
jmp
imul
mov
out
dec
shlb
inc
and
data16
insb
xor
incl
push
cld
sahf
rorl
push
mov
mov
ss
mov
ret
add
lcall
mov
inc
fdivrp
mov
adc
std
loope
std
mov
cmp
xor
adc
shl
pop
pop
cli
sub
js
xor
pop
lea
push
mov
aas
fdivr
mov
sub
pusha
inc
out
daa
cmp
push
adc
push
add
in
push
mov
sub
add
outsl
pop
lock
or
adc
or
pop
clc
xchg
lret
sti
out
dec
and
sub
inc
sarb
adc
lock
sub
fdivrs
leave
cwtl
mov
adc
imul
xchg
js
mov
mov
gs
ljmp
adc
outsb
decl
cmp
inc
in
testb
lock
add
cmp
push
loop
jo
pop
xchg
push
pop
icebp
add
enter
loopne
xor
call
leave
or
outsl
jp
inc
rorb
cwtl
arpl
movsb
fstps
es
mov
xor
pop
push
mov
pushf
dec
pop
sahf
cmp
outsl
ljmp
test
pusha
incl
out
add
push
clc
js
test
xchg
or
push
push
pop
gs
out
push
lods
push
je
cld
rorl
cmp
lea
inc
cli
mov
lcall
mov
loopne
lahf
outsl
push
xchg
inc
lret
lock
xlat
sbb
aas
mov
xor
add
add
ljmp
mov
int3
mov
push
mov
mov
mov
add
sar
lods
imul
es
mov
xor
xchg
adc
subps
cmp
push
loop
pop
push
dec
and
xor
sbb
mov
cmpsb
in
push
dec
jg
inc
ss
pop
scas
mov
mov
pushf
add
cmp
aad
inc
inc
bound
cmp
lods
adc
mov
mov
cmp
gs
mov
or
dec
lea
gs
aad
popf
test
lcall
push
jmp
fs
sub
add
add
pop
pop
push
mov
int3
ret
sar
mov
xor
mov
cli
scas
jg
nop
mov
xchg
xchg
mov
icebp
outsl
pop
inc
hlt
sar
loop
out
pop
jne
scas
dec
pop
mov
sar
scas
fadd
adcl
mov
cld
add
push
dec
push
jne
mov
push
or
scas
jo
jg
push
ja
jae
jl
nop
inc
lahf
xor
ss
leave
inc
incl
repz
mov
mov
es
inc
in
syscall
inc
add
lds
mov
push
inc
push
mov
mov
loop
addb
add
push
pop
std
aam
shr
or
jo
ret
push
mov
and
insl
sbb
subl
lock
cmp
adc
dec
lods
mov
dec
repz
push
push
lcall
mov
clc
dec
inc
lea
rolb
test
mov
push
cs
lea
incb
mov
sbb
and
and
lcall
ss
clc
test
mov
push
and
pop
add
icebp
lahf
or
push
addl
dec
add
popa
lds
adc
push
push
xlat
mov
pop
imul
and
cld
jle
movsb
ja
out
call
movsl
fwait
adcb
mov
xchg
inc
add
fldt
pop
push
mov
shlb
cmp
add
out
js
stos
nop
mov
aaa
std
gs
add
mov
adc
in
pop
mov
incl
or
add
push
lods
sbb
xchg
jne
mov
loop
pop
outsb
mov
mov
mov
call
loope
stos
mov
mov
xor
fiaddl
jb
fmull
adc
pop
jno
mov
mov
test
stos
insl
je
adc
push
mov
fs
lock
cmp
sbb
sbb
lods
jl
mov
lods
add
jo
sbb
and
lret
xor
fnsave
push
pop
int3
sbb
and
in
out
ret
xor
int3
add
mov
scas
inc
ret
push
sbb
cmp
xchg
push
testl
int3
scas
and
or
push
jmp
outsl
add
ja
adc
rorb
aaa
mov
sub
enter
inc
lea
lock
addb
push
mov
pop
mov
xor
fsubrl
mov
and
adc
pop
ret
dec
sbb
jbe
mov
or
push
push
push
std
loopne
mov
ss
pop
in
in
push
daa
push
test
pop
pushl
nop
or
dec
mov
push
fdivrl
push
and
pop
popa
aam
inc
mov
add
test
sar
in
lods
mov
incl
outsb
push
enter
jne
sbb
pop
test
push
xchg
dec
xor
xor
jbe
pop
add
loopne
mov
loope
icebp
rcl
xchg
arpl
nop
daa
push
add
sbb
cwtl
icebp
leave
in
sarl
fstpt
pop
mov
jb
cmc
jno
jg
jmp
sub
cmp
mov
call
pop
test
pop
cs
add
daa
cltd
push
aaa
hlt
call
xchg
data16
push
mov
movsb
inc
pop
aad
jno
push
loop
adc
incl
repz
jge
push
jmp
adc
mov
add
repz
mov
mov
sub
sbb
jg
push
sti
and
xchg
inc
xor
lcall
mov
jg
mov
lds
outsb
shll
xor
dec
xchg
inc
xor
mov
inc
rcrb
mov
add
sbb
imul
stos
sbb
jne
fadd
or
insb
pusha
inc
or
fsubrs
xchg
mov
cmp
push
insb
sbb
pop
nop
lods
inc
clc
hlt
pop
les
pushl
inc
lock
data16
or
clc
mov
daa
outsb
cmp
test
mov
aaa
mov
mov
sub
mov
mov
and
cmp
xchg
sub
mov
pusha
mov
sub
cmp
insb
cli
adc
adc
paddd
mov
inc
mov
rclb
or
sbb
mov
pop
repz
cld
cmpsb
add
pop
lea
shr
cld
pop
add
mov
lcall
rol
push
xor
mov
xor
mov
jb
add
jnp
incl
in
scas
int3
cmp
fdivr
adc
lods
mov
insb
subl
ss
mov
xor
xchg
repz
push
push
push
lock
mov
rol
or
push
sbb
and
xor
je
push
pop
or
bound
xor
negl
mov
sub
cld
lea
inc
add
aam
jbe
xchg
test
cmp
jne
mov
dec
cmpsb
subb
add
adc
push
adc
add
popa
repz
scas
test
int3
xchg
adc
int3
mov
xor
xor
mov
mov
lret
adc
fucomp
inc
cmp
push
xchg
xlat
xchg
test
push
mov
adc
jg
and
test
jg
inc
mov
adc
pop
mov
mov
ret
add
and
rorl
inc
ljmp
cmp
push
cli
push
inc
movb
jmp
or
mov
sub
jmp
dec
push
popl
lds
int3
inc
mov
adc
xchg
loopne
mov
data16
jae
add
mov
mov
aas
jmp
cld
sti
aas
sar
jp
pop
dec
int3
out
sub
test
or
in
sub
jbe
mov
push
mov
cmp
mov
std
ret
lock
pop
sub
stos
std
pop
inc
incb
gs
lret
mov
mov
and
cmp
hlt
aaa
lods
inc
sub
adc
push
cli
aad
mov
inc
xor
add
push
in
mov
push
outsl
mov
in
dec
data16
dec
call
pop
aad
mov
sub
out
add
test
jl
pop
call
cmpl
ret
lock
or
dec
mov
jae
out
add
decl
mov
sub
push
mov
and
push
mov
jg
fiadds
mov
mov
add
inc
gs
push
cmp
mov
jo
pop
jle
rorb
loope
mov
xor
mov
jl
jmp
push
cmp
loopne
fs
ja
add
mov
fmuls
mov
pop
add
xchg
nop
into
shl
cmp
hlt
or
mov
sub
jmp
add
sub
test
xor
jge
dec
icebp
test
shl
dec
add
les
data16
ja
push
mov
xchg
pop
call
sub
outsl
loop
push
or
push
add
sbbl
pop
xor
ret
push
int3
lea
cmpl
lock
xchg
aaa
mov
add
add
or
mov
scas
push
sub
cld
orl
add
pop
or
jne
aam
push
or
xchg
sbb
sub
cmpsb
sbb
adc
js
xchg
add
push
fcmovnu
ds
add
xchg
mov
cli
inc
call
inc
xchg
mov
inc
arpl
scas
pop
jge
xor
into
add
mov
pusha
out
iret
ljmp
fcoms
add
mov
scas
clc
mov
xor
mov
icebp
cmp
push
ret
clc
jmp
loop
push
fcomps
sub
sbb
data16
aam
enter
fwait
inc
call
xchg
movsb
push
add
shll
mov
call
js
pop
incl
rorl
mov
inc
call
rorb
mov
jne
pop
out
mov
add
call
fidivl
lock
insl
out
add
push
cmp
std
hlt
push
mov
fmul
mov
pop
sbb
lcall
or
ret
mov
pop
fwait
push
jbe
incb
outsb
sub
push
mov
pusha
or
addb
adc
mov
pop
push
mov
inc
sarl
add
inc
or
dec
adc
test
mov
jge
enter
or
push
mov
adc
jle
dec
or
mov
call
cld
and
add
mov
inc
xor
mov
stc
data16
fbld
cmpsl
mov
lcall
test
fisubrs
push
jae
pushl
mov
std
jg
addb
sub
mov
mov
fimuls
mov
inc
test
pop
test
dec
stc
call
fisttps
jle
xor
inc
xchg
bound
loop
cmpsb
aaa
fdivrl
rclb
cmp
in
lret
mov
cmpsb
add
xchg
clc
mov
lock
adc
mov
sub
add
mov
push
pusha
push
and
iret
push
insl
xor
sbb
mov
or
push
mov
int3
jmp
sub
into
repz
push
jecxz
add
jo
adc
jo
adc
add
jp
ret
sub
cmpsb
es
pop
sub
mov
mov
fnstenv
stos
outsb
fstpt
inc
xor
mov
mov
sub
fisttpl
rcrb
out
push
dec
xlat
jg
subb
seto
push
adcb
lcall
cmp
mov
int3
xchg
mov
nop
scas
add
adc
fadd
sub
pusha
add
stos
inc
pop
add
scas
push
mov
pop
push
xchg
or
shll
adc
pop
add
dec
subl
outsb
push
mov
pusha
subb
cmp
pushf
js
or
jmp
xlat
xor
sbb
stos
adc
stc
js
jne
aad
cmp
je
or
push
lret
push
scas
cmp
add
push
inc
mov
xorps
test
or
into
and
push
inc
jne
call
cmp
jbe
mov
adc
add
call
mov
icebp
add
sar
xor
add
add
test
fisubs
data16
movb
and
add
dec
sub
loop
inc
icebp
aas
lock
les
clc
push
pop
scas
mov
hlt
add
repz
mov
sub
je
push
or
jle
sub
shrb
rcrl
cld
mov
and
invd
mov
outsb
sbb
add
cmp
filds
pop
scas
jle
jne
bound
int3
ss
jmp
data16
jge
inc
call
sub
test
subl
je
xor
sahf
call
les
inc
les
adc
jg
jne
outsb
inc
push
in
lods
mov
lea
call
pop
lcall
mov
push
mov
push
fs
les
mov
dec
push
subb
lret
mov
pushf
dec
mov
mov
cli
xchg
fdivrs
mov
add
push
lret
mov
cmc
into
add
push
cmp
adc
xchg
shll
sbb
inc
jae
clc
lea
test
adc
inc
jg
decb
mov
decl
mov
push
test
dec
or
clc
bsf
cmp
adc
adc
mov
outsl
in
xor
movq
push
sbb
dec
fs
sbb
jo
sbb
subl
mov
bound
add
mov
adc
inc
xor
add
mov
or
pinsrw
movsb
pop
mov
pop
push
loop
js
cmp
dec
outsl
adc
mov
mov
jo
inc
cmpb
add
pop
xor
mov
fwait
aam
pop
push
repnz
lret
jg
mov
cmp
mov
in
jmp
mov
ss
inc
sbbb
add
ljmp
hlt
pop
cmp
repz
push
insb
aad
inc
shlb
or
jb
mov
jmp
sub
jbe
push
andb
sbb
mov
mov
pop
les
push
lods
rolb
das
sub
dec
mov
aam
rcrb
sub
jmp
inc
xchg
paddb
cli
int
xchg
cmc
mov
push
dec
imul
xor
mov
loope
cmpl
jle
insl
add
or
ret
inc
push
rcrb
adc
ror
push
dec
arpl
ror
xchg
cld
dec
mov
jb
test
lods
sbb
add
pushf
jle
cld
mov
xchg
insb
gs
sub
mov
sbb
pop
std
mov
dec
nop
adc
incl
jne
je
xchg
data16
daa
lods
shrl
sbb
aam
loop
cwtl
xchg
xor
adc
dec
sarb
jbe
add
roll
shlb
shr
cmpl
push
in
push
adc
jb
addb
add
push
ljmp
test
lds
push
mov
pop
add
fiadds
call
mov
push
enter
sarb
sub
les
adc
sbbl
sbbb
cmpsb
leave
cmpb
or
sarb
mov
mov
xchg
pop
js
mov
adcl
int3
push
loop
xor
mov
and
adc
outsl
push
lret
or
sbb
js
je
cmp
addr16
jmp
inc
hlt
mov
push
add
adc
adc
repz
jne
mov
push
test
cld
leave
push
push
inc
incl
and
lock
pop
mov
scas
clc
movsb
or
push
scas
push
clc
lods
incb
lods
std
repz
and
pop
jbe
or
cmpsb
pminsw
jmp
fsubr
add
or
push
in
in
orb
fs
mov
and
fcomps
clc
call
test
sub
push
or
push
cld
inc
popa
mov
popa
movsb
pushw
and
inc
inc
cmp
mov
adc
testl
dec
pop
inc
xchg
mov
lea
call
mov
sbb
inc
call
mov
incb
iret
das
ljmp
mov
jecxz
testl
imul
ss
das
pusha
mov
adc
adc
mov
or
rcl
jbe
and
cmp
mov
inc
adc
add
sub
sbb
jne
mov
lea
mov
dec
sub
cmp
pop
rorl
icebp
xor
sbb
fmulp
mov
lret
es
je
push
mov
cmpb
jo
cwtl
lds
jmp
in
into
pop
push
cmpb
ds
mov
fildll
inc
sub
jp
sbb
add
push
test
and
adc
js
cmp
jo
pop
push
in
mov
fdivl
jae
add
push
inc
out
testl
add
cmpsb
negb
lea
push
aaa
insb
adc
pop
lock
stos
dec
or
dec
mov
ret
test
call
sub
push
mov
inc
add
pop
fsubs
mov
mov
add
push
in
push
push
mov
sub
enter
sbb
decl
stc
add
std
sub
push
dec
cmp
xor
ret
test
mov
jge
mov
ret
push
testb
jb
inc
out
push
adc
sahf
mov
hlt
imul
mov
jp
fidivrs
push
hlt
jmp
add
adc
ljmp
arpl
out
xchg
jne
es
xchg
fsubrl
add
es
mov
mov
mov
push
negb
dec
into
cmpl
mov
push
push
pop
jg
int3
mov
cwtl
roll
ss
and
jo
ret
js
bound
fs
add
and
mov
mov
in
inc
pop
mov
adc
scas
rcl
and
mov
jle
dec
mov
rcll
test
mov
int
ljmp
shll
jp
jl
pop
sbb
mov
je,pn
inc
jmp
mov
stos
dec
sub
stos
sbb
push
aam
mov
mov
popa
xchg
and
cmp
mov
call
cmpsb
push
callw
das
cli
or
inc
into
cmp
push
add
nop
push
jns
clc
test
mov
add
cmp
js
xchg
mov
outsb
data16
jne
mov
push
sbb
dec
mov
mov
or
mov
data16
jmp
loop
push
ret
push
xchg
repnz
xorl
push
test
mov
mov
fldt
or
bnd
push
add
or
xchg
subl
mov
adc
rcl
mov
int3
rcl
dec
iret
or
add
push
cld
adc
or
pop
faddl
xchg
outsb
outsb
mov
push
mov
inc
push
adc
pop
add
adc
lea
xor
mov
xlat
jne
mov
dec
pop
scas
lock
mov
jo
out
or
pop
test
push
ret
stc
incl
mov
mov
sub
mov
scas
adc
jb
orb
fistpl
lea
xchg
or
inc
lea
insl
lds
push
sub
adc
ret
xchg
mov
movb
or
rorb
adc
sbb
shrb
add
adc
in
test
adc
xor
pop
fs
scas
adc
std
sbb
xor
or
add
xchg
rcll
push
std
dec
popa
mov
adcb
adc
sarb
ds
test
std
xchg
add
das
mov
rolb
jne
popa
mov
loopne
test
ja
std
ds
std
mov
xchg
pop
cld
mov
icebp
adc
mov
add
adc
js
mov
in
es
hlt
rorb
and
lds
mov
add
insl
dec
ret
and
pop
jmp
mov
sbb
jle
sbb
push
mov
call
scas
fcoms
push
lea
xchg
mov
mov
xor
int3
cwtl
mov
add
mov
pop
mov
lcall
sbb
mov
mov
push
rolb
push
push
sbb
xor
arpl
mov
sbb
lock
mov
adc
mov
mov
mov
xor
cmp
das
test
into
push
or
add
lds
les
jne
cmc
shll
mov
inc
decb
test
xchg
mov
pop
mov
mov
mov
jmp
sbb
push
int
add
push
add
cld
lahf
hlt
mov
nop
or
and
dec
cmp
outsl
clc
push
push
psubb
inc
test
push
pop
xchg
std
sub
clc
rclb
das
mov
or
insb
and
push
mov
popa
xchg
je
or
jle
rorb
call
push
or
pop
add
rolb
add
push
adc
inc
mov
inc
dec
add
sub
push
pop
mov
ljmp
xor
out
dec
inc
and
xchg
mov
cmp
mov
jmp
inc
out
fdivl
cld
cmp
dec
sub
cmp
pop
xor
adc
xor
or
mov
loopne
jg
add
sbb
jo
lock
in
xadd
out
mov
adc
add
sbbb
jmp
nop
jae
fs
je
mov
or
decb
je
sub
adc
xor
loopne
sbb
mov
pushf
xor
incb
movaps
push
jne
xchg
push
outsb
fisubrl
bound
std
aam
pop
cmp
add
fidivrl
pop
jl
pop
pushf
mov
rorl
jg
pusha
add
in
call
cld
decl
decb
pop
pop
mov
fmull
out
lea
lods
fmul
cmp
push
jne
jg
mov
les
add
arpl
add
dec
mov
pop
es
insb
ret
push
adc
je
call
dec
mov
fimull
int3
and
jmp
into
sti
imul
decl
scas
cmp
addb
jmp
out
push
dec
lods
mov
jo
lret
pushl
sub
add
sub
unpckhps
pop
dec
xor
xchg
ljmp
adc
cmp
jp
jmp
jae
push
xor
or
rorl
jge
add
sub
sarl
cmovge
int3
into
push
loopne
mov
test
mov
mov
fiaddl
ljmp
scas
scas
adc
add
xor
mov
cmpsb
push
nop
sarl
xor
cmp
or
pushf
mov
push
jmp
scas
or
jge
inc
dec
pop
mov
pop
addb
test
mov
fidivl
call
mov
xlat
pushf
movsb
paddsb
adc
cmp
icebp
cmp
add
sub
pop
popf
fdivrl
adc
in
fld
mov
mov
add
mov
sbb
icebp
in
push
insb
and
sub
pop
je
adc
add
mov
mov
adc
loope
fcompl
notb
rclb
test
add
jmp
loopne
sbb
add
dec
orl
push
ljmp
or
aaa
cmpsb
outsl
inc
cld
jae
in
and
cmp
pusha
dec
ret
pop
mov
xor
out
add
adc
add
push
add
jne
and
fidivs
jbe
test
or
pushf
mov
mov
sbb
jmp
test
jbe
cli
jae
dec
xabort
loope
jbe
loopne
adc
adc
dec
adc
hlt
inc
call
cld
test
and
test
rcr
test
push
or
loop
inc
aam
enter
pop
mov
sub
call
push
pop
xor
ljmp
repz
dec
push
mov
sbb
js
mov
mov
mov
cmp
or
shlb
add
mov
add
jo
shlb
xor
mov
fwait
jns
push
xor
ret
mov
loopne
mov
cld
les
andb
cmp
push
fcomip
sub
ss
fcoms
les
xchg
int3
xor
xor
add
incl
jl
adc
sub
ds
push
or
les
inc
lock
add
clc
inc
jmp
add
sbb
xchg
pop
pop
rcrl
mov
int3
lods
or
push
popa
mov
fdivrs
mov
mov
sub
cmp
dec
jo
add
add
push
sbb
jmp
xchg
sti
jbe
mov
sbb
sub
call
and
add
inc
in
out
aam
sbb
or
int3
xor
jmp
lcall
cld
call
adc
adc
add
sbb
mov
movsb
cmc
mov
fs
cld
rorb
sahf
jae
stc
push
aam
push
jl
ret
les
rorb
rcr
es
pop
and
je
xchg
insb
mov
fistl
adc
xor
cmp
add
or
ljmp
cmc
push
dec
push
shrl
ret
inc
adc
inc
sti
scas
andl
dec
jp
xchg
jne
les
fwait
inc
enter
lea
inc
frstor
shl
push
fmull
push
sbb
inc
mov
inc
mov
adc
fistpl
sub
and
add
adc
mov
decl
sub
mov
sbb
call
or
fcom
jo
aaa
jmp
or
inc
mov
sub
push
stos
mov
mov
stos
pop
aad
and
js
gs
mov
fcoms
and
fcomi
cmp
test
loope
sbb
ror
es
mov
out
dec
in
push
push
add
cmp
inc
inc
sti
push
or
not
and
sar
cmpsb
push
push
or
mov
adcl
mov
inc
mov
enter
shrl
sbb
push
aam
das
mov
xchg
mov
pop
push
dec
mov
adc
mov
mov
roll
je
sbb
mov
push
push
or
mov
push
ljmp
dec
data16
xor
mov
gs
sub
shlb
and
push
std
outsb
test
mov
push
icebp
xor
fs
sarl
testb
adc
jb
sub
shlb
je
xchg
test
sub
pop
xor
inc
jp
push
sbb
rcll
dec
pop
xlat
sahf
push
adc
xchg
sub
jo
push
and
int
je
jge
nop
jmp
sbb
test
or
pusha
and
scas
sahf
add
xor
inc
jns
add
int3
test
inc
bound
or
in
insb
into
xchg
mov
jecxz
mov
push
pushl
incb
adc
mov
inc
dec
data16
nop
inc
push
ds
ret
add
jne
or
lods
cmpsb
in
ljmp
je
add
sub
fldt
adc
cwtl
pushf
rorb
dec
and
xor
jae
imul
xor
inc
xor
inc
or
jbe
es
adc
mov
or
call
loopne
jmp
adc
or
call
sahf
ljmp
cs
sub
add
add
pop
mov
lret
arpl
inc
mov
les
mov
lods
subl
sub
cs
dec
loopne
movsb
mov
rorb
inc
in
sub
ret
mov
fidivl
popf
test
jbe
mov
fnstcw
push
xor
sbb
sub
sub
movsb
scas
in
stc
insb
inc
test
xor
mov
inc
mov
add
jb
jl
lea
push
test
sbb
push
cld
dec
loope
in
inc
test
sarb
pop
int3
xor
outsb
mov
pop
mov
rcl
ret
jecxz
push
cmc
inc
rcl
subb
cltd
fcomps
and
push
or
lcall
ljmp
pop
lds
sub
decl
sti
xchg
shrl
xor
cli
add
dec
arpl
and
and
loopne
cs
cmpb
cmpsb
push
lea
or
int3
fdivrs
cld
icebp
cmpsl
inc
pop
notl
dec
lahf
jne
jle
adc
sahf
push
push
push
pop
cmp
stos
lods
in
js
rcll
push
adc
xor
ret
pop
dec
test
sub
sti
in
lea
int3
mov
add
rclb
rolb
cmp
jbe
js
mov
adc
je
or
sub
dec
xchg
push
adc
ja
es
xchg
mov
js
dec
adc
mov
pop
fcoml
mov
incl
mov
ffree
sub
imul
adc
fsubp
jae
push
ss
in
sbb
mov
inc
jmp
test
jmp
jb
mov
sti
rorb
add
mov
dec
das
mov
mov
aam
and
fsubl
decb
outsb
sub
ret
mov
cmp
xor
add
out
aas
push
mov
adc
xchg
fcoms
mov
cmpl
ret
add
adc
and
or
in
and
mov
out
int3
loop
inc
add
xchg
or
cld
push
mov
add
repnz
cld
jmp
mov
xor
add
push
inc
mov
push
sub
leave
subb
mov
adc
adc
inc
jg
cmp
fistl
std
fadd
ljmp
dec
and
xor
xchg
and
dec
call
pop
in
arpl
js
sbb
inc
je
jmp
mov
mov
icebp
mov
xor
lret
je
push
ds
ljmp
enter
push
ljmp
bnd
and
aas
jl
pop
idivb
rcrb
mov
adc
dec
rclb
xor
test
mov
call
daa
fidivrs
test
les
or
and
cmp
outsb
inc
sbb
and
pusha
mov
clc
push
inc
test
lret
and
cmc
xadd
call
call
rorb
pop
mov
push
test
cmp
add
push
jmp
mov
mov
adc
mov
cmp
fildl
aad
push
lea
inc
cmp
mov
adc
in
fdivl
fdivrl
sbb
movsb
cmp
ja
sub
imul
clc
push
loop
dec
pop
roll
sbb
mov
mov
ds
clc
jg
cmp
testb
mov
shll
dec
xor
ljmp
dec
inc
mov
mov
imul
add
loop
je
fsubl
push
pop
daa
sarb
loopne
dec
or
add
add
pop
adc
sarb
in
dec
data16
call
jbe
lds
dec
stos
adc
inc
cld
jg
push
push
dec
test
cltd
jle
ds
mov
dec
add
jne
mov
int3
inc
mov
lea
shll
adc
inc
mov
pushf
dec
add
mov
jb
std
ja
push
add
jl
call
and
cld
mov
test
cli
jmp
push
incl
enter
insl
call
ret
push
mov
fimull
push
loopne
xorb
rol
test
sbb
sub
ret
push
mov
mov
call
mov
popa
cld
mov
fs
push
fistl
pop
je
fidivl
add
xor
aad
cmp
jne
fsts
in
movb
outsl
or
std
bound
or
sbb
inc
shrb
clc
push
add
cmp
gs
mov
sbb
leave
lock
push
dec
mov
push
scas
popa
test
adc
push
fs
xchg
clc
sub
shlb
add
add
in
js
cwtl
push
int3
push
or
jp
test
out
iret
fwait
jmp
sbb
cli
lods
add
push
rorb
jg
stos
push
inc
dec
and
adc
adc
inc
loope
mov
push
sub
xor
mov
mov
out
int3
adc
ja
aaa
lds
xor
push
sti
add
cwtl
xor
inc
cmc
inc
mov
mov
imul
mov
xchg
call
sbb
pop
jae
mov
lcallw
loope
dec
lahf
andb
loopne
lea
in
call
inc
pusha
shl
das
incb
pop
stos
push
int3
daa
and
call
cld
push
inc
hlt
xchg
push
push
add
pop
sub
in
add
fs
into
ret
enter
dec
jo
inc
sub
or
rclb
dec
mov
or
pop
pushf
ds
imul
push
cmp
ret
mov
mov
xchg
add
lds
jge
idivl
mov
dec
rolb
cmp
mov
add
push
push
pop
clc
inc
jne
add
testb
xor
out
int3
xchg
enter
nop
hlt
sbb
nop
sub
lea
test
inc
sbb
pop
ss
inc
inc
cwtl
je
loop
add
jl
loope
mov
mov
adc
pushf
mov
ds
ds
add
call
jb
mov
loopne
mov
addr16
and
xor
add
jne
xor
adc
push
add
nop
ret
je
xchg
loopne
std
push
leave
sub
ret
fcomp
fistpl
mov
aaa
das
test
les
dec
mov
test
cwtl
mov
jge
add
pop
adc
popf
loopne
mov
adc
scas
arpl
push
inc
cmp
outsl
sub
mov
in
jmp
nop
out
pop
push
or
lcallw
inc
lahf
mov
jl
add
pop
push
mov
scas
jmp
mov
mov
mov
aaa
lods
stos
mulb
jp
push
mov
jecxz
out
or
and
dec
loopne
pushf
adc
lods
pop
int3
test
mov
or
jb
add
pavgb
pop
dec
scas
test
or
mov
dec
mov
imulb
dec
add
dec
and
jnp
add
in
call
push
push
or
in
sbb
fsubs
addb
faddl
mov
aas
and
div
lea
inc
cmp
jns,pn
cmp
add
adcl
xor
sahf
int3
lea
xor
pop
roll
jmp
xor
mov
stos
sti
inc
std
test
subl
jl,pt
call
pop
mov
push
or
call
jle
lock
add
sbb
das
js
inc
add
insb
mov
int3
xchg
sub
pushl
test
or
push
aas
in
sub
add
push
notb
or
call
or
stos
cld
icebp
or
cmp
shrb
fmuls
in
loop
push
bound
or
pop
and
push
bound
pop
push
adc
push
hlt
mov
lret
cmp
dec
leave
hlt
xor
shlb
jle
mov
and
jmp
xor
nopl
cmc
mov
ror
sub
dec
push
mov
sbb
add
cld
out
mov
mov
lea
add
mov
add
test
push
mov
dec
inc
in
pusha
loope
aaa
mov
dec
bound
pushf
xor
push
cld
aad
jne
lret
ljmp
mov
pop
inc
orl
or
std
das
sbbb
mov
mov
jne
inc
lock
jecxz
cmc
aam
je
lods
cmpl
and
push
stc
or
pop
add
call
shr
ret
fisubrl
inc
add
nop
in
call
inc
shlb
mov
pop
loope
movsl
icebp
add
add
sbb
xor
aaa
jecxz
aam
push
xchg
pop
lea
and
jg
decb
and
add
inc
in
sbb
push
in
xchg
sub
mov
pop
mov
sti
ret
sub
mov
lock
in
movsl
mov
or
in
lods
or
inc
shrb
xchg
adcl
sarb
and
adc
adc
jg
int
xor
and
aad
loope
pop
daa
inc
imul
or
test
mov
loopne
inc
or
jns
incl
ret
lcall
xchg
inc
mov
loop
clc
movsl
out
and
and
loopne
pop
adcb
dec
jmp
fcmovb
push
mov
mov
mov
ret
cld
xor
out
aad
or
mov
and
fsubs
aaa
shrl
mov
push
aaa
xchg
cwtl
mov
sar
jnp
lds
roll
pop
mov
pop
je
inc
push
iret
cwtl
ror
pushf
mov
jbe
push
add
cld
and
inc
adc
push
aam
lahf
pop
incb
mov
sub
in
mov
pop
outsb
or
leave
mov
mov
add
movsb
inc
rorb
sarb
dec
pop
fs
push
je
sbb
mov
andl
cmp
testb
or
les
add
shll
sub
incl
cld
test
test
add
je
mov
js
aas
std
xlat
jge
movsb
out
vpcompressq
cmp
cs
orl
shl
int
ljmp
xor
xor
pop
fcomip
call
jne
fs
sti
je
mov
mov
mov
cwtl
push
xor
push
dec
xchg
test
push
fxch
mov
jl
pusha
xor
pop
mov
loopne
js
out
mov
push
jno
jle
and
int3
ljmp
add
push
adc
mov
adc
test
mov
or
mov
pop
push
enter
aam
mov
pop
xor
sub
push
push
dec
repnz
pop
hlt
xor
mov
mov
or
loopne
push
movl
mov
adc
jmp
cmp
add
or
add
pop
inc
mov
pop
outsb
jmp
xor
dec
pop
mov
stc
imul
jne
mov
shrl
ljmp
lretw
arpl
or
std
mov
gs
lea
add
shlb
call
and
call
mov
sbb
sub
mov
out
add
cld
mov
sbb
data16
inc
push
xor
sub
adc
push
add
pop
pop
arpl
push
push
rolb
pop
mov
push
insb
stc
outsb
cmpxchg
js
add
xor
shrb
inc
icebp
daa
mov
faddl
mov
mov
mov
int3
repnz
imul
jl
xchg
adc
mulb
pop
jecxz
mov
in
inc
cmc
filds
les
rcrl
sbb
lcall
lea
push
scas
in
fsubrl
addr16
data16
cwtl
fisubs
push
push
pusha
dec
lds
sti
sub
leave
cld
shll
mov
hlt
mov
dec
nop
add
jl
pop
push
or
aam
lcall
jno
pop
add
or
mov
icebp
fadds
mov
flds
std
aam
inc
adc
mov
inc
or
add
inc
mov
jne
jo
add
push
inc
and
or
add
sub
pushf
sbb
mov
jl
adc
shrb
jg
mov
call
rcl
dec
push
jmp
mov
and
enter
popf
fbld
mov
testb
sub
xor
pop
cli
push
adc
arpl
adc
ss
mov
sbbl
jb
or
shrb
shlb
incl
push
mov
les
pop
ret
sahf
jg
push
jb
cld
pop
xchg
pop
rorl
cmp
dec
icebp
repnz
add
cmp
int3
xor
push
add
incl
push
adcb
stos
lcall
test
mov
ficoms
bound
mov
fisttpl
cmp
xor
add
mov
add
int3
push
mov
fidivs
or
fwait
hlt
mov
lock
cs
arpl
add
adcl
aad
jg
jp
inc
xor
adc
ljmp
dec
test
incl
push
mov
add
add
hlt
sub
pop
mov
loope
dec
xor
cli
fistl
loopne
inc
jo
and
fisttpl
and
enter
es
mov
jnp
push
pusha
adc
cmpsl
xchg
cmp
jecxz
pop
pop
mov
je
int3
stos
push
call
aad
fcomps
mov
cmp
lea
add
pop
cld
int3
pop
inc
mov
clc
pop
mov
out
jbe
add
mov
adc
inc
add
ja
std
inc
inc
scas
in
mov
std
mov
jb
cld
xchg
mov
pop
call
inc
or
inc
test
cmp
inc
dec
lock
jne
push
mov
mov
mov
add
mov
inc
ret
sub
ja
pop
les
test
lcall
lds
sahf
jnp
jmp
call
aad
sub
mov
test
lea
pop
jge
mov
push
lret
les
add
jle
pop
stos
add
add
inc
xor
jmp
add
jns
testb
push
mov
lock
jle
int3
js
test
fisubl
mov
ljmp
pop
adcb
mov
pop
call
xor
rolb
xchg
int3
cmp
jge
adc
pop
or
sub
inc
dec
out
cmpsb
adc
in
cmp
je
lods
cmp
je
pop
adc
adc
xor
push
push
fidivrs
mov
push
insb
mov
ja
sbb
add
pcmpeqw
dec
pop
ss
rcrb
dec
adc
push
xchg
add
dec
jo
inc
lea
xchg
mov
arpl
loope
mov
pop
mov
mov
insl
cmp
jb
or
mov
mov
hlt
je
call
inc
mov
inc
jnp
mov
xor
jmp
adc
pop
subl
xor
add
push
mov
xchg
xor
lret
lods
sbb
loope
pop
add
rorl
decb
push
addb
fcompl
sub
or
in
sbb
rorl
mov
or
outsb
adc
ret
cltd
faddl
std
push
xchg
adc
mov
lds
aam
es
dec
inc
mov
xchg
xchg
sarb
cli
xchg
rorb
and
out
pop
cs
rcrb
fists
rcrl
nop
pop
cli
ljmp
xchg
in
sbb
sub
pop
cwtl
sub
sbb
inc
inc
add
and
mov
daa
lcall
fisttpl
scas
cmp
push
insl
dec
xor
cmp
lods
mov
push
pop
jmp
loope
add
and
outsl
test
rcll
dec
inc
pushf
inc
inc
movsl
pop
xchg
int3
sarb
push
aam
pushl
jb
decl
mov
mov
sbb
lock
xor
pop
jmp
inc
lock
sub
jae
sbb
sbb
or
mov
test
dec
les
lock
ja
or
das
out
lahf
mov
ret
pop
sti
add
or
outsb
cmp
push
adc
mov
mov
mov
push
mov
ret
pop
inc
sub
inc
push
xchg
loop
sbb
leave
or
inc
push
test
pop
jl
sbb
test
test
fwait
lods
lcall
lahf
aam
cmp
outsl
mov
lret
test
cltd
call
lock
adcl
push
in
jg
lds
or
mov
shlb
mov
sub
ljmp
fsubs
movsb
shrl
pusha
shlb
mov
xor
push
sbb
add
stos
push
push
add
inc
aaa
inc
adc
out
into
scas
mov
lahf
jge
out
shlb
addb
mov
std
mov
inc
push
sub
push
orl
push
test
adc
or
cld
sub
inc
incl
stc
push
mov
or
push
or
add
lods
or
lea
mov
test
push
push
popa
aas
jbe
cwtl
clc
fldt
scas
jp
push
cmp
push
dec
push
mov
data16
fs
cmp
divb
cs
lods
cli
sarl
rorb
jns
loopne
adc
add
insl
or
movsb
mov
loope
push
hlt
lock
mov
mov
int3
lods
add
inc
mov
jo
inc
jmp
push
add
mov
js
jo
lea
and
mov
shlb
xchg
xchg
mov
mulb
aas
push
clc
cmp
rolb
out
aas
in
add
mov
pop
scas
xchg
sbb
mov
adc
loope
sbb
aam
add
mov
push
cmp
decb
mov
cmp
inc
add
sub
shll
and
adc
xor
add
dec
std
mov
push
cmp
xor
sbb
mov
push
or
negl
jl
lds
adc
adc
inc
and
fs
ljmp
test
adc
xchg
test
mov
pop
fcomip
in
ds
rcrb
cwtl
inc
adc
cmp
mov
or
push
add
mov
push
inc
incl
push
scas
jp
inc
push
scas
mov
lods
sbb
mov
call
nop
hlt
xor
push
pop
cmc
mov
mov
mov
lretw
aas
lcall
or
movsb
test
lock
jae
xchg
add
bound
sar
jge
or
pushf
sbb
in
mov
test
jnp
je
pop
and
cmp
movsb
inc
idivb
sbb
insb
rcll
pop
or
rcrb
add
push
stc
sti
xor
ret
or
call
xor
aaa
jo
rolb
jmp
cmp
outsb
and
jmp
inc
push
dec
outsb
cmp
cmp
mov
rolb
cld
daa
fwait
shll
cmp
cwtl
and
in
or
clc
add
pop
add
dec
je
and
nop
push
loope
inc
fwait
dec
sbb
in
push
clc
mov
mov
incb
add
in
jno
hlt
popa
sbb
and
paddusb
add
je
pusha
fistl
in
push
add
dec
adc
jb
cmp
adc
shr
mov
push
fiadds
loopne
incb
inc
mov
mov
jp
jle
or
mov
movb
jp
jp
fwait
jo
andl
add
in
jne
mov
sti
clc
adc
bound
sub
iret
adc
inc
or
mov
out
and
add
fsubs
cmp
mov
aad
ds
inc
push
push
aaa
push
inc
mov
loope
lock
ss
push
jbe
sar
lcall
pop
push
out
push
or
rorb
call
out
push
mov
mov
repnz
rcr
push
sbb
leave
pop
xor
pop
adc
pop
inc
or
ficomps
in
xor
inc
popa
push
mov
les
nop
add
push
push
mov
test
jl
test
shr
fsubl
cmpsl
bswap
xchg
rolb
js
inc
aaa
aad
push
imul
nop
jb
ja
je
shrl
xchg
imul
test
cwtl
push
add
ljmp
jmp
fwait
mov
gs
cwtl
js
xor
out
fcmovbe
push
dec
cmp
jle
xchg
mov
imul
xor
fistpll
int3
stos
bound
push
js
lods
rcrl
fnstsw
mov
pop
add
cmpsb
jp
bound
js
test
mov
cmp
mov
in
call
push
mov
mov
sub
pop
in
push
cli
jmp
inc
mov
repnz
dec
inc
loop
mov
push
mov
pop
adc
stc
jae
add
inc
inc
int3
into
mov
inc
pusha
adc
inc
and
sarb
rcll
addl
inc
cmc
push
mov
popa
hlt
mov
jb
pop
and
jg
stos
and
and
mov
add
int3
nop
sub
loopne
popf
mov
mov
xchg
push
jo
xor
ds
fiaddl
xchg
add
pop
mov
jge
jmp
mov
test
stos
insb
stc
sub
push
mov
add
inc
mov
data16
hlt
pop
jp
aaa
faddl
es
sbb
pop
xor
xchg
loopne
dec
xor
ds
loopne
decb
rolb
mov
xor
movsb
or
rclb
mov
push
or
outsl
clc
fisttps
add
nop
xor
adc
cs
je
cmc
or
stc
add
or
jb
hlt
jmp
nop
loope
cmp
movsl
and
sub
cmpsb
roll
shrb
inc
adc
mov
fcmovbe
ret
mov
add
call
pop
icebp
shr
mov
mov
int3
xchg
faddl
popf
cli
push
test
lcall
loop
roll
or
inc
sti
addl
xor
jge
adc
or
sbb
mov
xor
sub
mov
les
add
jne
adc
push
push
xor
add
inc
mov
mov
aam
aas
inc
jne
pmulhw
or
add
loopne
mov
enter
push
movsb
call
pop
add
subb
xor
mov
and
and
adc
xchg
xchg
fs
pop
xor
pushf
aam
pop
xchg
jb
cmp
loope
jge
jbe
fmull
jle
test
popa
data16
xchg
lahf
mov
subl
mov
adc
push
vmptrld
mov
ss
mov
and
jo
mov
add
cmpl
add
pop
mov
and
sub
cli
das
and
mov
outsb
xor
out
adc
popa
in
das
sbb
sbb
sub
out
push
popa
cmp
jge
in
ss
fadds
inc
inc
movb
test
decl
pop
sub
shll
je
popa
add
loopne
pop
and
adc
leave
data16
icebp
jg
gs
cld
sub
push
jb
jne
test
cmc
mov
cmp
std
imul
jbe
cld
pop
or
lods
sbb
clc
or
inc
shlb
adc
sub
mov
mov
mov
mov
clc
cmp
mov
mov
call
jne
les
add
icebp
mov
pusha
shlb
nop
js
rolb
pusha
cli
js
bound
lret
mov
rclb
sarl
lock
adc
gs
add
add
cld
dec
js
adc
push
fsubr
movsb
inc
push
xchg
js
outsb
add
sbb
nop
add
out
stos
gs
lcall
jecxz
jae
insb
or
incl
sti
call
je
ljmp
adc
rolb
and
or
dec
ljmp
jg
xchg
and
mov
inc
ud0
lock
or
adc
call
rorl
lods
cmp
mov
mov
rolb
dec
mov
inc
scas
cli
clc
mov
xlat
push
cmp
lock
icebp
inc
push
mov
push
sub
loop
subb
inc
data16
mov
ja
push
mov
call
mov
pop
mov
int
cmp
and
mov
mov
enter
add
mov
mov
js
push
dec
xor
mov
cmp
sbb
pop
add
out
pop
ljmp
or
in
test
dec
or
cmpsl
dec
xchg
xor
pushf
test
test
cld
xor
stos
jb
jo
je
mov
shr
xchg
pop
sbb
mov
std
aas
cld
shlb
out
je
popa
adc
fs
or
pop
les
xchg
cmp
xchg
insb
dec
push
repz
sbb
jge
pop
and
mov
sti
stos
dec
add
lret
inc
lret
xor
outsl
fidivl
dec
add
push
push
add
inc
cmp
xchg
adc
dec
sub
sti
stos
andb
fistps
mov
and
sub
out
cmp
dec
and
jne
jmp
mov
fisubs
lea
cmc
gs
dec
cld
inc
sub
adc
in
into
adc
push
push
outsl
pop
add
and
xchg
std
push
mov
mov
adc
lret
push
push
aaa
sub
dec
dec
inc
jbe
mov
pusha
mov
in
adc
add
add
push
mov
pushf
js
adc
outsl
adc
sbb
dec
mov
das
mov
jo
xor
push
pop
add
jno
xchg
mov
mov
subb
mov
inc
pop
sbb
xchg
adc
inc
aam
mov
add
test
push
jo
mov
pop
int3
lods
sbb
cli
out
std
add
add
mov
icebp
loopne
idiv
push
int3
jb
pop
mov
test
jb
push
jb
jp
outsb
cmpsb
sub
ret
fiadds
aaa
in
sbb
mov
outsl
sbb
push
mov
call
sub
lds
int3
push
std
mov
sub
xchg
inc
cmp
std
sbb
and
lock
push
ljmp
enter
inc
movsb
lods
pop
cli
mov
decl
lret
rcl
lcall
pushf
fistps
mov
add
aam
fs
dec
pop
adc
add
outsb
xchg
fcmovnb
push
ret
push
push
fimull
arpl
int3
shlb
sub
incl
nop
je
sub
push
xor
dec
cmp
jmp
sbb
xor
ret
ss
jbe
sbb
sub
inc
or
int3
xor
loopne
mov
imul
fisttps
mov
ror
push
push
test
pop
push
mov
cli
add
call
shrl
mov
push
xor
sub
dec
jno
cli
sbb
xlat
inc
lea
sub
shlb
cld
int3
pushf
daa
inc
cld
adc
or
into
decb
leave
mov
push
mov
fwait
test
test
mov
in
in
jmp
jle
dec
enter
xchg
inc
cmp
jp
test
mov
mov
stc
test
push
cmp
arpl
imul
int3
mov
ss
pop
into
lea
push
jmp
cs
repnz
push
fdivs
loop
rclb
and
je
adc
lea
jp
xlat
sub
push
sbb
jg
test
clc
movl
pusha
popa
mov
orl
sbb
dec
sbb
loope
jne
test
pop
fcoms
test
ds
mov
xor
popf
call
dec
pusha
mov
mov
sub
mov
push
sbb
das
dec
and
pop
loopne
pop
add
and
mov
rolb
jb
mov
jbe
push
insb
test
xchg
mov
rolb
outsl
js
test
dec
jo
fisubl
cmp
jp
or
mov
ficoms
mov
push
xchg
ss
add
or
sbb
xchg
call
cmpl
xor
std
xor
insb
data16
jge
shl
movsb
in
icebp
xchg
xor
mov
andl
shlb
cmpsb
pop
jg
aam
pushw
ret
xorb
and
dec
adc
out
lcall
xsaveopt
lock
loopne
jp
mov
xor
adc
push
rorl
and
push
iret
cmp
loope
stos
inc
fiaddl
scas
ljmp
xor
testl
jle
inc
sbb
mov
add
adc
push
push
jecxz
jbe
or
hlt
and
xchg
and
xchg
sub
xchg
into
mov
fisttpll
push
aam
mov
and
dec
or
aad
xchg
lcall
stos
jb
insb
cmp
fstp
adc
jo
rclb
add
add
and
out
ljmp
pop
in
mov
push
and
cmpsb
leave
mov
xchg
mov
call
mov
clc
sbb
std
pmulhuw
dec
inc
movsb
xor
cmp
add
dec
loopne
ror
add
insl
xchg
clc
add
loop
js
push
mov
add
ja
incl
xorb
data16
pop
or
pop
mov
or
inc
mov
orl
and
andl
test
mov
fnstsw
sbb
adc
push
sbb
inc
pusha
ja
out
iret
sar
cmp
inc
lods
movsb
decb
decl
sahf
ret
insb
add
ss
shrl
pop
cmp
or
call
xchg
sbb
push
pusha
dec
pop
mov
ds
testb
cs
out
loopne
push
test
imul
and
incb
in
cltd
sahf
in
sarl
adc
psubusb
sub
and
jmp
test
rclb
shrb
dec
inc
jg
xchg
pop
xor
sahf
mov
fistps
mov
cmp
add
sub
inc
mov
or
add
test
cltd
mov
pushf
lock
mov
push
add
mov
mov
pop
mov
aad
mov
insl
test
bound
adc
mov
call
add
data16
les
xlat
sti
or
xor
inc
mov
sub
sahf
inc
lret
mov
adc
adc
adc
xor
hlt
test
int3
jl
inc
jmp
loopne
fadd
insl
orb
sub
push
push
inc
aaa
xchg
mov
adc
int3
mov
lock
or
faddl
into
xor
mov
dec
xchg
iret
test
fcomp
adc
ret
fidivl
sub
rcr
ficompl
sub
jmp
insb
push
test
push
mov
inc
dec
icebp
xchg
lds
rol
sarl
push
fbstp
adc
xor
push
aaa
adc
xor
std
dec
leave
pop
ds
mov
jmp
rcll
aam
add
enter
or
fs
push
inc
fisttps
mov
jb
rcrb
call
ret
mov
xadd
cmp
fwait
shl
fldt
call
pop
aad
dec
mov
mov
loopne
add
daa
mov
les
inc
push
pushf
shrb
sbb
fdivr
push
test
je
mov
cmc
pop
std
jo
mov
xor
std
imul
push
shl
movsb
cmpsb
out
add
mov
ljmp
jne
jge
call
mov
dec
xor
outsb
mov
gs
inc
pop
fsubs
mov
mov
mov
xor
mov
pop
rol
cli
scas
mov
idiv
mov
inc
cmpl
or
loop
lahf
push
fimuls
call
sahf
add
jecxz
push
lret
setle
jecxz
mov
fadds
imul
and
fbld
hlt
cld
or
or
add
adc
xor
or
adc
and
sti
pop
jae
loope
sbb
fisubrl
sbb
nop
scas
push
inc
imul
enter
out
jle
mov
inc
xchg
rol
adc
inc
sarl
shrl
sub
dec
cmp
lods
add
bound
cmpsb
mov
jmp
data16
rorb
mov
filds
mov
pushl
in
pop
addr16
iret
inc
jo
push
ds
adc
icebp
cld
add
pop
add
stos
mov
mov
mov
cmp
xor
mov
sarl
mov
adc
fwait
mov
pop
rdmsr
call
jo
fdivrl
aam
int
xor
mov
and
xor
addl
divb
sar
call
jne
lods
mov
and
fs
clc
mov
test
sbb
lea
rolb
xor
cmc
out
inc
dec
outsb
pop
es
sar
jbe
in
insl
and
ds
mov
rol
icebp
sbb
in
dec
jmp
push
outsl
aad
pop
push
mov
pop
cli
call
mov
push
sub
jo
add
fimull
inc
dec
pop
or
inc
inc
bound
loopne
cld
sbb
loopne
lods
rolb
int
fimuls
cld
cli
je
pop
jne
sbb
rcll
insl
outsb
push
movsb
adc
addl
lock
xor
jbe
and
hlt
mov
fsubr
cmp
lcall
xor
add
xchg
push
pop
add
push
sbb
or
stos
out
sub
mov
js
es
inc
fidivrs
fcompl
rol
add
in
pusha
in
ljmp
sub
shlb
pop
xor
loopne
xchg
add
and
add
hlt
ljmp
loopne
cmp
push
mov
mov
les
ret
mov
lods
enter
add
jne
pop
inc
sub
mov
push
sub
push
ficoms
es
dec
jg
pop
out
lcall
xor
stc
mov
dec
sbb
sbb
sbb
sahf
add
mov
sub
rolb
mov
lea
loopne
adc
xor
movsl
jecxz
push
sub
mov
inc
int3
outsl
or
jp
sub
sub
mov
and
xor
or
lea
into
test
pop
jge
clc
mov
xor
jle
xor
lock
mov
sbb
push
mov
jmp
adc
rol
add
jo
mov
add
push
adc
mov
test
out
stc
fwait
out
sub
outsb
pop
jne
jb
jns
or
lds
add
push
sub
or
rolb
add
je
push
inc
jne
fdivr
xor
mov
cmp
insb
sbb
adc
push
lock
std
push
cmp
add
or
test
mov
or
or
ret
jo
nop
push
push
xchg
cmp
shlb
cmpsb
imul
or
imul
push
pop
je
js
mov
lock
or
pushl
arpl
jmp
popf
adc
adc
mov
jp
pop
mov
push
ret
add
xchg
xor
enter
mov
xchg
int3
inc
clc
push
jg
pop
cmpl
sarb
js
incl
sub
data16
sbb
into
add
push
jge
cmp
push
popf
inc
jb
dec
les
jne
pop
pusha
aad
cmc
ja
xchg
add
pop
es
call
aad
inc
and
sub
cmp
pop
add
xor
inc
rcrl
push
in
in
push
dec
fmull
dec
je
js
std
push
push
test
stc
push
jbe
and
test
bound
push
out
or
mov
mov
pop
and
sbb
cmpsl
add
test
jp
and
decl
push
cld
xchg
add
rolb
and
push
stos
scas
mov
add
inc
movzbl
xor
push
jmp
pop
fidivrs
nop
rcll
daa
ljmp
or
arpl
in
sbb
in
gs
test
and
jp
xor
jne
push
mov
cmp
adc
push
roll
mov
cld
loop
push
mov
push
pop
movsb
mov
xor
std
mov
push
xor
pop
pop
mov
mov
testl
in
ss
adc
adc
push
or
pop
scas
pop
addr16
xor
loopne
mov
push
imul
adcb
cs
adc
jl
jmp
incl
add
test
imull
and
movb
inc
sub
xor
test
mov
cwtl
mov
or
or
dec
inc
mov
jl
test
adc
push
adc
fbld
addb
cs
mov
shrb
push
flds
jmp
repnz
jo
testb
cwtl
shlb
test
push
sub
into
jle
jecxz
and
cwtl
mov
stos
cld
pop
clc
enter
rcrl
pusha
mov
xor
orl
lret
test
mov
ja
addr16
into
mov
ljmp
shl
lea
adc
sub
or
adc
cmp
push
or
sub
in
xchg
test
and
enter
mov
inc
ffree
sub
call
insb
rorb
jl
xchg
in
stos
jo
mov
andb
cwtl
or
pop
jle
lock
std
insb
xor
fdivrs
in
pop
test
pushl
orb
inc
ss
mov
jmp
push
outsb
les
in
das
xor
ds
pop
pop
rcrb
imul
outsl
dec
pop
enter
lea
add
xchg
push
xchg
ds
mov
lock
push
pop
call
ljmp
xor
add
xor
cmp
testb
dec
push
test
adc
call
cmp
ficoms
les
pcmpeqw
rol
mov
mov
fmull
inc
les
hlt
sbb
out
xchg
add
adc
push
mov
rolb
inc
outsl
adc
adc
repz
mov
xor
add
inc
push
pop
cmp
pushf
or
pop
and
pop
mov
jo
stos
int3
js
mov
push
sbb
adc
cmp
push
add
add
dec
xor
xchg
ds
ret
mov
dec
sub
add
je
imul
xchg
in
cli
mov
add
mov
stc
je
xor
mov
clc
scas
je
loopne
std
int3
into
out
test
incb
push
ja
orb
jmp
cmc
cmpsb
arpl
jg
mov
js
add
rcrb
adc
or
sahf
pop
data16
call
mov
lock
jmp
shll
sub
scas
or
clc
xchg
pop
dec
test
mov
xchg
add
push
push
inc
out
add
adc
adc
mov
or
adc
data16
dec
and
jge
ja
mov
dec
pop
out
cmp
ret
test
ret
pop
cli
inc
push
cld
mov
xchg
push
in
mov
fdivr
cmp
sub
pop
push
jmp
test
cmpsb
push
cmpsb
outsb
push
jne
push
rorb
and
ret
sub
pop
mov
or
jmp
sar
stos
adc
cmpsl
push
outsb
test
xchg
nop
mov
or
ljmp
in
nop
xor
decl
mov
mov
testb
inc
mov
fdivrs
cmp
inc
jge
fimuls
das
sbb
lcall
pop
add
mov
xchg
aas
or
or
jmp
in
test
jl
je
or
mov
mov
cwtl
hlt
add
push
adc
add
mov
out
fimuls
sar
fs
in
xchg
cmp
push
nop
push
jo
rcll
mov
mov
test
jne
xor
cmp
fsubrs
sarb
jecxz
jae
jp
nop
subb
push
adc
loope
je,pt
cld
mov
mov
outsl
cmpsb
test
mov
add
dec
jbe
mov
xor
dec
add
and
loopne
mov
sub
push
pop
sub
dec
push
je
outsl
add
add
idiv
aam
inc
mov
xchg
test
mov
jb
stos
push
ret
mov
mov
mov
mov
out
lock
and
shrl
mov
jp
push
scas
in
jg
push
inc
addl
test
ret
inc
adc
pop
pop
add
push
shr
push
popf
std
cmp
mov
add
xor
xor
mov
pop
loopne
or
push
cld
jle
push
loop
andl
or
and
mov
call
jp
in
mov
leave
jg
jno
and
loopne
jns
sbb
lcall
fildll
mov
pushl
lea
repnz
sub
lret
lock
pushf
push
dec
test
jbe
enter
sbb
es
cmpsb
and
mov
mov
int3
call
in
or
mov
or
xor
ss
push
decb
ret
and
je
mov
and
pop
inc
cld
rorb
or
add
cmpsb
out
out
fninit
das
aam
fcompl
push
xlat
fdivs
cmpsl
lea
mov
std
cmp
rcrb
enter
xor
and
mov
sar
push
popa
push
iret
and
add
jp
aas
mov
lock
and
mov
jmp
aaa
add
out
idiv
jmp
inc
ljmp
test
or
out
mov
cmp
inc
inc
pusha
add
push
into
jge
mov
sub
sbb
sbb
lods
repnz
or
cli
or
xchg
xor
je
sub
jle
or
sbb
sub
mov
sbb
jmp
inc
sbb
testb
movsb
xchg
or
push
xor
jne
test
test
ret
dec
mov
pusha
or
or
in
push
popf
inc
or
mov
or
loopne
push
adc
pop
inc
lea
test
push
add
xchg
aam
add
mov
inc
push
mov
pop
xor
and
out
mov
jae
orl
loopne
mov
mov
cmp
les
mov
testl
cs
dec
mov
mov
jp
xlat
in
add
and
fisubl
outsl
lods
shlb
mov
push
mov
incl
js
pushw
cld
jne
cmp
xor
lock
ret
jne
adc
inc
push
fsubrl
mov
outsl
std
inc
in
out
sahf
es
and
imul
rcll
sbb
adc
pushf
xchg
jg
push
fcoml
mov
adc
xchg
ljmp
sti
adc
sub
int3
stc
mov
lret
std
outsb
call
inc
add
clc
push
or
mov
test
inc
mov
and
das
aad
push
mov
push
daa
add
adc
add
call
js
push
cmp
mov
cmp
push
and
push
xchg
ret
pop
push
ret
aad
loopne
cmp
xchg
lcall
data16
gs
fisttpll
mov
mov
sub
loopne
nop
loope
push
mov
adc
sub
popf
clc
arpl
add
xor
adc
pushl
xor
adc
lock
stos
mov
js
cmp
scas
subl
movlhps
or
fcoms
stos
loopne
add
test
cmp
cli
jnp
jmp
or
inc
push
xchg
es
mov
mov
dec
test
jg
mov
popf
xor
daa
and
loop
jp
add
das
lea
je
mov
ret
adc
push
shlb
push
sub
mov
repz
shlb
ds
mov
les
sub
shlb
rcrl
and
loope
in
rolb
fistpl
jae
add
add
fs
and
sbb
push
xlat
aas
push
xorb
call
cld
and
inc
addr16
mov
sub
loop
dec
hlt
ret
xor
aad
out
adc
mov
aaa
cmp
test
mov
neg
jl
cmp
lret
add
inc
jbe
pushf
jne
sbb
push
pushf
mov
aas
pop
lock
cmpsb
cmpsb
pop
inc
mov
mov
jb
xor
scas
cmc
mov
jge
clc
std
lahf
add
inc
inc
lret
ljmp
add
test
hlt
or
pop
stos
mov
repnz
adc
push
add
mov
outsl
out
sub
cmp
jle
inc
dec
call
pop
mov
popa
cmp
pop
rclb
stos
jno
cmp
mov
jno
xchg
incb
sub
in
or
pmuludq
or
test
mov
inc
mov
sub
inc
jp
inc
jns
sbb
out
icebp
jne
push
add
cwtl
lds
iret
mov
les
shll
push
cwtl
mov
push
push
test
je
sbb
dec
std
popa
jecxz
mov
and
push
shrb
adc
inc
mov
or
inc
adc
loope
inc
out
call
hlt
fsubrs
fdivl
cwtl
add
std
lods
add
add
jno
test
int3
mov
pop
subb
mov
dec
add
push
or
add
mov
ret
add
mov
js
adc
fldl
movsb
push
inc
jbe
pop
add
xor
les
fimull
mov
dec
push
repz
push
mov
push
push
mov
mov
decl
or
xlat
divl
cld
idiv
fwait
xchg
jp
jge
fs
and
add
sbb
mov
cbtw
adc
push
dec
mulb
nop
ret
insb
mov
clc
imul
and
mov
aas
xchg
ffree
call
movsl
or
lock
push
or
testl
inc
add
push
stos
jae
out
xchg
scas
lret
mov
xor
mov
dec
std
add
xor
mov
dec
or
or
xor
sbb
arpl
repnz
enter
cld
or
aam
push
int3
add
cs
insl
pop
xchg
jb
repnz
inc
push
sbb
pop
jg
movsb
shl
frstor
or
ja
mov
ret
xor
adc
imul
hlt
pop
xchg
std
or
mov
lods
push
repz
notl
inc
push
pop
loopne
xchg
xor
add
mov
adc
pop
rol
sub
lods
lahf
fcoml
and
adcl
decl
jge
ret
xchg
enter
mov
dec
sbb
pushl
testl
dec
pop
jl
stos
jg
rcr
add
cmp
jae
outsl
call
dec
jge
lcall
popf
rolb
pop
jle
aad
xor
pop
imul
fldt
xlat
arpl
xorb
jo
push
push
lock
mov
rcl
xor
insb
popf
push
jne
pushf
mov
es
lea
push
jmp
dec
adc
push
push
push
pop
mov
jp
movsl
push
or
cs
fs
clc
cs
rolb
das
cmp
mov
roll
adc
shl
aaa
or
rclb
hlt
ret
xlat
add
lods
outsb
orl
or
adc
int3
out
xchg
sub
push
out
push
lods
mov
lock
clc
push
sub
adc
xor
pop
movsl
rorb
mov
lds
pop
insl
data16
pushw
ror
xchg
mov
adc
enter
cli
data16
lea
mov
add
dec
loopne
jge
test
in
in
mov
es
xorl
dec
out
and
shlb
orb
adc
cld
lods
lock
sbb
imul
xor
add
sub
sub
aaa
sub
mov
imul
xor
mov
add
or
xchg
lret
adc
popf
xchg
or
mov
mov
push
call
adc
jp
in
xchg
je
daa
sbb
inc
into
rcr
fistpl
leave
pushf
addr16
jne
pushf
les
mov
shlb
ud2
jge
xor
mov
jmp
mov
out
and
insb
push
sbb
mov
enter
inc
adc
pop
cmp
pop
mov
movsb
mov
push
mov
sbb
mov
mov
push
or
outsb
mov
push
or
push
xchg
shr
nop
or
xlat
sub
std
xchg
aam
leave
cmp
dec
push
lea
js
call
mov
sub
mov
fdivrp
mov
popa
mov
add
jae
std
mov
clc
mov
cmp
in
and
jle
or
adc
lods
xorl
shlb
mov
pop
add
or
jo
fadd
mov
mov
adc
scas
nop
dec
data16
std
lods
in
mov
push
jge
shll
mov
shld
subb
sahf
inc
andl
push
addr16
adc
mov
jne
pop
inc
testb
mov
ljmp
inc
sub
lods
sub
pop
cmp
push
mov
sub
pop
fdivrs
mov
mov
cld
shlb
jg
stos
or
pop
lahf
dec
rclb
pop
inc
jmp
inc
and
push
sbb
adcl
fs
nop
mov
mov
shl
fisubs
add
insb
push
pop
dec
mov
sub
dec
fs
mov
lea
test
call
andb
lea
das
imul
lret
pop
pop
adc
and
fs
add
push
mov
jmp
jmp
jb
call
mov
movsl
mov
test
lds
ja
decl
or
cmp
xlat
add
xchg
call
add
aaa
int3
mov
add
fisttpll
mov
rorb
dec
adc
add
sbb
add
xchg
cld
sub
jp
jle
xor
and
or
int
mov
xchg
jmp
pop
enter
aad
rolb
inc
movsl
cld
mov
pop
iret
mov
xchg
add
cmp
cmp
cmp
adc
add
jno
cld
rolb
mov
and
cs
mov
inc
sub
mov
lods
pop
fdivrs
mov
jmp
mov
aas
clc
data16
call
mov
xor
mov
push
push
inc
je
push
jecxz
into
and
fs
fwait
lea
mov
xchg
fwait
stos
jmp
int3
adc
adc
push
inc
mov
xchg
xchg
in
ja
xor
and
lods
movsb
xor
cli
jg
push
pushf
and
dec
in
fcoml
add
andl
mov
mov
outsb
xorb
push
cmp
or
inc
mov
mov
and
adc
jno
add
cmp
enter
cmpsb
cmp
xor
je
rcl
and
enter
dec
fsubrl
or
in
jmp
addl
xchg
ret
pmullw
pop
push
testb
loopne
dec
push
icebp
dec
in
in
inc
mov
pop
push
mul
out
test
insb
or
out
push
fists
lods
in
movntps
adc
or
lea
add
mov
outsl
test
jne
mov
pop
xor
clc
lcall
adc
dec
add
dec
push
pop
sbb
sbb
mov
dec
or
or
test
scas
clc
pop
ljmp
mov
and
ret
sbb
in
loopne
rorl
pop
cwtl
ret
call
xor
int3
cmp
insl
ret
mov
rorl
insw
lret
add
into
call
ret
mov
out
test
call
or
cld
xchg
xchg
mov
std
adc
push
jmp
mov
add
push
aaa
fmull
ret
les
jp
or
icebp
or
out
dec
mov
jmp
xchg
mov
pushf
rol
out
mov
data16
scas
adc
das
or
inc
inc
pop
dec
mov
mov
jne
inc
cmp
xchg
xchg
mov
shll
xor
xor
imul
add
lea
and
nop
dec
push
sub
xchg
pushf
mov
jne
int3
push
fs
jb
pop
sub
data16
jp
pop
sarb
and
rcrb
dec
xor
andl
pop
aam
das
pop
shll
jg
inc
adc
inc
add
bound
adc
adcl
aad
add
and
sbb
lcall
fidivl
dec
inc
and
jns
decl
mov
mov
ljmp
jne
xchg
mov
fwait
inc
sbb
add
leave
push
mov
mov
mov
cmp
inc
aam
adc
mov
rcll
jmp
jge
out
push
mov
lret
mov
jmp
incl
inc
xorl
dec
js
test
aam
cmp
xchg
aam
testb
adc
mov
add
mov
test
pop
push
movb
or
hlt
mull
dec
fisubl
lods
shrb
ret
clc
push
inc
les
inc
dec
xchg
shll
sbb
push
mov
call
cmp
add
hlt
ljmp
pop
rcrb
movl
aaa
xor
rcrb
out
adc
sub
push
in
inc
test
mov
or
rclb
jmp
mov
xor
jmp
dec
fidivs
push
or
push
into
adc
xchg
lea
or
into
push
pop
fsub
iret
stos
pop
push
mov
push
testb
pop
test
jo
leave
lock
out
xor
add
and
or
mov
aam
add
pop
add
dec
xchg
out
daa
jo
popa
pop
push
or
outsb
adc
fdivp
sbb
enter
or
xor
add
push
decb
inc
pop
loope
pop
xor
decb
push
insb
add
cld
mov
je
push
imul
mov
in
add
or
adcl
or
adcb
pop
das
aas
cmp
adcb
loope
push
and
dec
out
mov
inc
adc
in
sub
pop
sub
negl
sub
add
stos
call
xchg
jae
sub
pop
dec
call
gs
je
insb
add
mov
sti
test
sub
mov
mov
or
mov
push
int3
subl
inc
xor
lods
add
xchg
ss
outsl
es
or
cmp
xchg
and
ficoml
fisttps
push
jo
into
or
xlat
lock
sub
addr16
call
inc
xchg
nop
sub
enter
pop
push
std
sbb
or
cmp
jne
adc
rolb
shlb
das
cmp
pop
and
js
sub
and
mov
and
cld
push
sahf
or
push
mov
sub
and
sub
cld
xchg
insb
or
jge
jne
dec
or
hlt
adc
push
rcrb
sbb
mov
or
push
mov
rcrb
out
leave
mov
add
ret
jo
dec
data16
scas
mov
inc
or
add
push
dec
push
pushf
sub
mov
add
xor
jmp
mov
mov
insb
cmp
push
xor
lods
inc
or
pop
cmp
ja
dec
dec
fsubrl
inc
dec
add
sar
add
jge
inc
push
lea
and
add
jl
rorl
or
in
adc
mov
sub
add
aam
imul
in
or
add
inc
mov
lcall
add
push
les
or
add
mov
jp
fbld
cmp
xlat
loop
loopne
lret
mov
adc
inc
popa
mov
clc
ss
cwtl
lcall
decl
fdivp
lock
lea
rorb
jle
dec
xor
sbb
in
sar
dec
jne
in
loopne
add
push
xor
push
adc
adc
or
mov
nop
data16
add
xor
cmpsb
xlat
push
fs
mov
hlt
test
scas
pop
sub
xor
and
sbb
iret
shlb
call
ss
hlt
add
das
test
sub
pop
shrl
lea
lcall
cli
jne
das
in
outsb
sti
cmp
call
push
inc
add
mov
pop
push
push
add
std
rolb
lcall
or
movl
cli
lret
add
data16
push
push
lods
mov
push
adc
pusha
adc
fcoml
je
stos
and
push
add
mov
pop
xor
mov
insb
add
push
push
add
sbb
push
pop
push
out
and
xor
mov
or
fadd
ljmp
cs
in
cwtl
push
in
pushf
sbbb
pop
rorb
hlt
ret
test
sub
ds
mov
inc
daa
test
push
add
test
test
shl
ja
pop
adc
es
sub
xor
push
adc
shr
or
fimuls
xor
loopne
xor
pushl
addl
sbb
mov
xchg
cmpsb
mov
scas
xchg
cmp
or
sbb
inc
adc
jl
push
testl
int3
mov
scas
push
and
test
nop
enter
and
cld
add
sbb
mov
xlat
push
fsubr
call
int3
xor
clc
push
int3
jae
fsubs
jo
fcmovb
outsl
pop
mov
in
dec
adc
jmp
mov
add
pop
lcall
dec
dec
mov
mov
stos
or
mov
add
imulb
and
hlt
aaa
jmp
fsubr
push
inc
mov
xchg
add
decl
jmp
or
imull
jmp
jl
push
test
std
dec
loope
dec
add
xor
sti
inc
mov
ret
pop
ficomps
lcall
ds
cmpsl
je
sub
in
clc
add
int3
jle
mov
cmp
pushl
lock
mov
dec
or
in
xor
ret
stos
fisubs
imul
pusha
fidivrs
mov
jo
int3
adc
cltd
sarb
fmuls
mov
sub
icebp
imul
sarl
sub
cmc
add
fsubr
xor
mov
loopne
push
mov
mov
sti
jbe
mov
jbe
lock
add
cltd
jge
add
arpl
pop
xchg
icebp
test
outsb
and
xor
cmpsb
dec
rclb
cwtl
fmull
mov
paddb
call
data16
ret
add
popf
lods
fwait
in
aaa
mov
repnz
cwtl
and
shll
pushf
pop
sbb
mov
rcl
add
xor
sub
mulb
inc
push
jge
or
je
push
cs
jo
dec
adc
push
imul
movl
mov
incl
xchg
imul
scas
cli
push
xlat
add
fldl
and
xor
inc
push
mov
stc
mov
pmaxub
push
fcoml
inc
leave
popa
jl
dec
mov
push
pop
clc
mov
inc
dec
sbb
pop
cmp
pop
jecxz
loop
and
out
xchg
mov
cmp
mov
lods
xchg
push
sub
add
ss
cltd
clc
mov
lea
pop
add
and
sub
pop
fs
pop
cmpsb
mov
rcrb
stos
icebp
and
idivb
dec
cmpl
add
cmp
gs
jmp
cli
dec
jmp
sbb
dec
mov
add
xor
std
outsl
loop
cmp
sub
fldt
lea
ljmp
shll
jmp
or
js
jle
mov
mov
aas
mov
shl
bnd
push
cld
movsb
test
fistpl
pop
jo
insb
adc
outsb
push
cmp
sar
dec
test
inc
fadds
loope
push
hlt
fistps
outsl
pushl
jne
pushf
adc
iret
sbb
out
add
sbb
xchg
pop
jb
cmp
cmc
adc
sarb
add
fiadds
add
cmp
js
jbe
imul
leave
testl
pop
push
ljmp
inc
pop
jle
xchg
push
mov
mov
pop
add
push
scas
add
sub
cmp
mov
fisubl
xchg
les
gs
mov
or
outsb
hlt
faddl
pop
lar
mov
mov
add
ret
add
xor
popf
scas
call
mov
out
outsb
sti
mov
mov
iret
out
pushf
pop
cwtl
clc
int3
rcrb
inc
dec
push
test
mov
into
pushf
push
or
xor
fmuls
shlb
mov
mov
call
paddusb
mov
jmp
cwtl
in
add
cwtl
adc
lods
std
adc
lea
lcall
mov
ret
cli
pop
or
cmp
adc
test
dec
loopne
push
inc
stos
and
sbb
or
clc
ja
sbb
dec
mov
cld
xchg
cmp
test
rol
sbb
add
nop
mov
roll
dec
sbb
add
mov
loopne
xor
adc
jmp
call
jecxz
ja
aam
cmovne
fs
adc
push
adc
jns
imul
lcall
or
adc
sub
stos
rcr
push
xor
aas
push
cmp
push
adc
jge
mov
jge
sub
dec
cmp
xchg
movsb
add
jmp
mov
imul
stc
call
push
xchg
stos
push
inc
inc
jnp
out
aad
fldenv
mov
fildl
mov
test
inc
push
jo
shlb
push
or
nop
daa
cmp
sbb
adcl
and
mov
dec
ret
xor
pop
xchg
jne
pushf
cmc
add
cwtl
xchg
mov
int
incl
pextrw
lock
pop
je
cmp
push
ja
xchg
jb
inc
inc
jbe
fists
jle
sbb
cmp
add
mov
pop
les
clc
mov
jo
incb
jge
lea
mov
aad
push
mov
and
or
xchg
dec
mov
mov
cmp
push
adc
push
jo
inc
mov
xchg
jbe
jnp
cmpl
hlt
adc
or
push
fwait
stos
mov
lock
and
scas
ljmp
pop
push
adc
mov
or
andl
pop
add
adc
lods
int3
test
repnz
push
add
out
inc
hlt
movaps
cmp
imul
pop
add
xor
mov
add
les
push
outsl
push
scas
add
aaa
ret
pop
rorl
jmp
cli
in
fmuls
adcl
js
xor
adc
sbb
mov
add
shll
or
add
sbb
lock
push
rsm
adc
dec
gs
adc
fdivrs
sbb
mov
test
jle
xor
inc
lfs
xor
or
fcomps
add
int3
leave
xchg
mov
mov
aas
xchg
rorl
push
xchg
xchg
mov
jg
push
sub
pop
push
inc
jae
or
rolb
fmuls
gs
cs
andb
into
push
mov
mov
xor
fs
decb
add
mov
mov
call
cwtl
arpl
loopne
adc
getsec
push
cmp
imul
dec
imul
rclb
add
xchg
test
cmp
push
call
aam
movsb
lods
add
lahf
adc
ret
clc
out
imul
imul
dec
dec
test
mov
jg
sbb
add
dec
inc
or
adc
mov
add
movsl
mov
and
mov
aaa
sbb
ja
loopne
fsub
adc
loopw
add
adc
or
inc
add
pop
mov
test
add
jb
loop
imul
rclw
js
or
mov
add
int
xchg
add
add
aam
call
sub
push
in
dec
mov
lret
pushl
mov
xor
cwtl
js
mov
orb
mov
ret
cmp
sub
jmp
ret
add
inc
fcomps
mov
data16
or
mov
jp
gs
add
mov
mov
pop
push
cmp
mov
or
call
jle
movsb
xor
or
push
rcr
jne
xor
cmpsb
lret
mov
xor
inc
out
jae
sbb
fcomp
push
ss
mov
add
test
fisttps
inc
push
cli
adc
adc
mov
jecxz
test
fmuls
add
mov
cld
lret
lods
mov
cmp
cmp
fdivs
mov
jle
push
repz
jmp
into
idivb
insb
sub
rorb
push
in
mov
push
les
aaa
push
pop
pop
cmp
fcoms
je
pushl
aas
lods
xor
push
push
les
push
incl
jle
insb
sbb
add
push
mov
int3
fmuls
add
lods
call
jl
mov
test
popa
mov
cmpl
rolb
cld
fbstp
mov
jnp
xor
dec
imul
xor
jbe
xchg
call
dec
sti
mov
je
jmp
sbb
cmpsb
lock
push
adc
sub
repz
sti
pop
cmp
mov
jp
xor
out
imul
imul
into
push
add
inc
dec
push
inc
dec
push
pop
ss
dec
jmp
inc
and
and
clc
jne
add
int3
clc
leave
sub
push
add
cld
push
addl
out
and
dec
shll
or
gs
stos
or
popa
dec
push
cmp
mov
jnp
push
pop
pop
in
ss
std
mov
hlt
inc
inc
stos
mov
push
inc
std
and
mov
xchg
inc
sar
jo
push
and
jbe
ja
adc
ret
sub
movsl
cld
dec
filds
mov
sub
paddw
inc
cwtl
mov
jmp
jb
test
jg
ss
mov
mov
in
mov
jg
inc
ret
inc
pop
add
cmp
hlt
xchg
dec
out
int
fwait
add
mov
je
fstps
or
xchg
adc
mov
jae
ror
lret
mov
jp
push
xor
push
jg
popf
aas
jbe
sbb
mov
lds
sahf
sbb
jl
sbb
adc
call
add
add
dec
dec
mov
inc
lock
roll
jmp
and
mov
or
addl
into
icebp
ljmp
sub
stos
push
imul
sbb
les
xchg
and
fists
push
sbb
cli
loop
add
pushl
ret
sti
das
nop
adc
cmp
movsl
sub
test
sahf
pushf
cli
adc
cmp
clc
call
inc
rcr
leave
outsl
je
sub
add
insb
mov
inc
push
jle
punpckldq
and
and
aam
imul
stos
cmp
xor
adc
push
sbb
scas
movsb
shll
inc
call
cli
add
lahf
add
icebp
sbbb
push
mov
loopne
shlb
shlb
cmp
push
adc
fmuls
mov
push
cwtl
cli
and
or
in
outsl
xchg
scas
call
jb
push
nop
sbb
and
push
orl
mov
push
and
jg
pusha
add
cmp
lea
fwait
add
mov
sub
addr16
cmp
lea
mov
mov
clc
in
add
push
mov
mov
mov
add
cli
cmp
cmp
push
scas
push
stc
jno
jmp
mov
xor
testb
cmp
mov
sbb
subl
movsb
push
pop
xor
adc
sbb
decl
call
leave
xor
cmp
push
and
int3
out
stc
dec
call
add
push
inc
xchg
sub
add
ret
mov
inc
ret
test
or
sub
lahf
sub
in
jge
pushf
call
fmull
xor
sub
std
pop
adc
adc
lret
pop
add
or
inc
aaa
jne
cmp
xor
ret
orb
xchg
adc
clc
mov
push
leave
push
sub
mov
add
test
xchg
or
in
add
mov
sub
cld
loop
mov
push
jb
mov
jg
jmp
mov
add
mov
sub
std
es
add
push
movsl
mov
jne
xor
add
jae
add
and
push
les
movups
jae
and
mov
push
dec
push
fs
cmp
add
mov
mov
jg
mov
stos
sbb
mov
push
jno
or
idivl
inc
lea
cmp
push
and
fstl
clc
push
lea
mov
or
sub
ficomps
aam
fmuls
pop
cli
rcr
test
jecxz
push
jae
fbstp
sub
dec
dec
lret
mov
mov
adc
mov
pop
fldenv
incb
clc
sbb
mov
add
mov
in
test
andb
mov
rolb
push
lock
xchg
push
mov
fstp
jle
add
inc
int3
add
test
pop
inc
push
rclb
xlat
andb
add
sbb
adc
mov
mov
mov
loopne
ret
pop
test
push
push
sbb
cs
in
sub
push
push
rcrb
cmpsb
adc
lcall
clc
insb
jns
add
js
mov
divl
xor
add
push
inc
fdivrl
push
push
add
adc
aam
in
test
into
dec
jb
push
lods
push
xchg
or
loopne
fsubl
cld
lret
lock
cmp
mov
vpmuludq
cmp
inc
xor
and
mov
popf
insb
sbb
fadds
jp
mov
es
or
test
dec
xor
xchg
rorb
mov
pop
loopne
adc
clc
incl
xor
int3
loope
je
or
lock
pop
rolb
shlb
dec
rorb
bound
adc
test
sub
cld
lock
jo
pop
adc
ss
xorl
xor
shlb
idivb
xchg
cs
jmp
pop
xor
dec
lea
repz
sub
dec
lods
lea
jbe
daa
mov
clc
and
lcall
int3
adc
push
mov
scas
pusha
push
pushf
add
mov
arpl
ljmp
mov
decl
pop
ret
xor
push
mov
scas
mov
sbb
pop
push
jb
add
ja
sbb
mov
sbb
sar
add
lock
mov
adc
aas
ds
aam
pop
mov
push
cltd
push
andb
sbb
cld
mov
mov
jl
ficompl
ror
leave
orb
enter
div
aam
std
pop
add
push
dec
push
je
mov
fidivrl
mov
call
bound
int3
inc
xchg
push
push
sahf
jmp
aaa
mov
inc
or
out
adc
imul
mov
rclb
xor
add
fcmovnb
les
push
add
xor
insl
cmp
push
add
pusha
test
subb
out
mov
add
lcall
push
inc
ljmp
arpl
pusha
push
shrb
push
push
jecxz
nop
or
mov
sbb
ljmp
inc
push
cmp
fsubrp
push
mov
repnz
push
mov
mov
sub
sbb
mov
jmp
push
sbb
gs
test
addl
jmp
addl
inc
decl
jle
ljmp
pusha
sub
xor
leave
sbb
ljmp
xor
sahf
jo
shlb
add
mov
xor
adc
aaa
decb
add
fmul
inc
in
pop
mov
push
in
push
mov
dec
mov
dec
mov
mov
mov
jb
push
and
shlb
mov
push
push
call
rclb
xor
js
xchg
call
lea
mov
mov
pop
in
push
call
fs
push
adc
and
add
mov
push
sbb
or
rorb
jmp
pop
sbb
gs
out
push
mov
add
fwait
movsl
ja
xlat
test
inc
je
xchg
pop
mov
scas
js
outsl
fs
cwtl
add
pop
and
add
inc
sub
mov
inc
sarl
pop
cld
dec
xchg
push
mov
mov
data16
sbb
ljmp
imul
adc
jmp
and
out
jl
and
add
push
cmp
enter
add
aaa
add
rorb
sbbl
pusha
pop
inc
clc
call
leave
jo
xchg
iret
sub
hlt
mov
out
cs
xor
or
or
ret
sub
cli
test
jo
fs
call
add
adc
negb
dec
inc
sbb
int3
cmpsb
shlb
mov
push
test
testb
jmp
test
sbb
push
mov
ss
mov
pushf
sbbb
and
sahf
add
fadds
lret
cmpsl
pop
push
sahf
add
sbb
in
mov
and
gs
cld
lods
mov
rolb
in
cmp
fwait
test
mov
in
or
add
jmp
add
fisubrs
dec
dec
push
push
pop
inc
rolb
stos
test
and
shlb
jo
push
inc
jl
jo
mov
mov
js
in
adc
push
shl
jnp
mov
aas
cmpsb
mov
push
scas
inc
jg
data16
add
inc
lea
dec
enter
xor
dec
cmp
aas
pop
imul
popf
daa
inc
js
push
mov
jl
jg
lcall
lahf
rcr
outsl
push
jmp
movsb
xor
aam
aaa
dec
fs
call
das
cmp
adc
sarb
mov
enter
aam
pushf
sbb
push
pop
cmp
insb
aad
adc
cmpsb
mov
dec
mov
adc
subl
loopne
sub
adc
incl
pop
add
int
mov
or
arpl
arpl
mov
loopne
push
lods
pop
movb
dec
divb
ljmp
jne
cmp
inc
adc
adc
cld
mov
mov
cmpsl
or
outsl
sahf
test
mov
push
mov
inc
sub
jb
jecxz
incl
and
mov
sub
push
ds
jg
mov
test
adc
push
pop
add
dec
add
stos
aaa
les
sub
push
pop
push
add
in
add
or
cmp
push
mov
jmp
adc
cs
jmp
mov
fs
inc
inc
test
add
lcall
cmp
or
sub
test
jl
or
cmovo
test
fstps
subl
mov
call
dec
push
mov
repnz
mov
adc
sahf
in
sti
mov
ret
jbe
cmp
outsl
jmp
fisubs
push
add
sub
jns
sahf
cli
sub
push
sub
ljmp
das
xchg
or
rclb
pop
test
mov
pop
or
push
incl
xor
daa
in
adc
sub
cmp
mov
pushf
jecxz
push
or
in
pop
notb
aas
out
pop
add
js
xor
add
lods
faddl
outsb
add
adc
push
rorl
ret
ret
ss
jecxz
fsts
sarb
mov
dec
or
gs
popf
push
addr16
cld
adc
cli
or
outsb
fnstenv
pop
xchg
xchg
orb
push
sbb
divb
xor
test
push
inc
dec
or
imul
ja
mov
aaa
jo
dec
adc
and
or
ljmp
daa
sbb
pop
adc
jns
data16
push
pop
hlt
xchg
cmp
xchg
orl
inc
clc
adc
cmp
loop
shlb
aad
xlat
mov
add
add
adc
cmp
outsb
push
leave
sub
test
inc
push
negb
sub
sub
stos
cmp
push
mov
add
int3
cs
sti
aas
inc
push
sbb
lods
outsb
fs
jne
cli
adc
add
testb
stos
rorl
xor
add
inc
loopne
jne,pt
mov
push
and
xchg
js
mov
sub
xor
mov
adc
psadbw
lret
add
dec
into
nop
jo
subb
add
ret
test
pop
cmp
push
inc
shll
inc
xchg
add
rclb
cmp
xchg
je
mov
pop
fisttpl
push
push
bound
adc
xchg
cmp
push
cmpsl
ret
mov
mov
pop
ret
lret
adc
dec
push
cmp
sbb
xor
pop
mov
dec
insb
mov
roll
xchg
sbb
testl
xchg
add
int3
push
mov
int3
fsubr
in
mov
or
xor
jl
ds
mov
pusha
mov
sub
into
mov
cmc
dec
in
dec
and
testb
jb
out
dec
adc
push
fisubrl
test
sbb
mov
fiaddl
loopne
sub
xchg
dec
aam
mov
or
aam
mov
movsl
mov
sbb
out
sub
call
lock
and
and
fnstenv
sbbl
into
pop
je
xchg
rolb
jecxz
vpshufd
cmp
dec
jno
fucomp
dec
add
push
and
mov
leave
gs
fs
mov
add
sbb
add
js
test
movsb
xchg
and
xchg
adc
js
pop
dec
lods
clc
push
cmp
data16
andl
stos
lods
or
or
cmp
cs
xor
movl
call
shll
adc
rcrb
xor
mov
inc
inc
inc
data16
xor
adc
add
int3
js
cmp
clc
scas
jl
shrb
mov
or
mov
cmpsb
dec
decl
in
decl
sbb
adc
lret
cmpsl
movsb
mov
mov
in
mov
pop
loop
jge
inc
jbe
sbb
decl
in
or
pushl
mov
xor
push
mov
leave
lods
add
or
std
push
daa
mov
pop
or
js
shl
fwait
cli
xchg
mov
cmp
add
sbbl
jne
add
stos
ss
aas
mov
and
ret
ror
loop
es
mov
jo
psubd
js
iret
repnz
or
push
push
cmp
jmp
outsb
lods
lea
ret
enter
inc
aad
xchg
cmp
mov
dec
mov
mov
sub
andl
stos
pop
cli
ror
adcb
mov
or
jg
mov
movsb
shlb
push
fadd
lea
fldcw
inc
xor
lea
or
aaa
or
ja
call
mov
aaa
lods
es
ret
add
pminsw
loop
sbb
add
or
or
mov
iret
lods
mov
jb
mov
test
sub
adc
add
or
inc
pop
adc
mov
clc
mov
inc
dec
pop
mov
mov
shl
xor
test
sar
inc
lock
mov
pusha
jmp
test
adc
call
in
inc
fcoms
gs
cmp
or
xor
movsl
jne
in
and
push
dec
add
pop
add
add
int3
or
jle
pop
lods
rclb
lret
jge
add
shll
ds
jmp
rolb
mov
sbb
jl
push
or
pop
loopne
call
jle
add
por
or
lock
test
pusha
add
fstl
push
int3
and
sub
testl
adc
jle
push
mov
inc
fildl
hlt
jg
loope
sbb
daa
shrb
scas
std
orb
adc
push
inc
and
rdmsr
ds
aad
add
sub
xor
je
and
into
cmp
dec
nop
jnp
mov
inc
push
insb
add
pop
add
outsb
int3
dec
jne
rorl
inc
lds
cmc
inc
subl
pop
mov
mov
sbb
in
faddl
cmp
or
push
popf
push
pop
inc
jb
add
cmp
test
data16
or
test
test
icebp
adc
outsb
or
add
pop
or
add
pop
mov
clc
sbb
es
cmp
mov
add
cmp
std
add
pop
push
push
je
cld
add
insb
mov
ret
testb
and
push
xor
test
rolb
je
adc
jl,pn
push
add
push
out
pop
mov
aam
cmp
push
lret
push
push
imull
mov
dec
xchg
lea
imul
sbb
dec
outsb
or
pop
fdivs
movb
xchg
push
jb
sbb
add
add
jne
push
bound
ss
ljmp
or
outsb
cmp
mov
test
cmp
or
mov
sub
lock
rcrb
inc
or
sbb
fisubrs
pop
aam
add
iret
push
xor
inc
add
push
gs
pop
or
mov
repnz
jne
add
mov
push
and
mov
or
jnp
out
jb
popa
fs
test
xchg
loop
cwtl
cmp
shlb
mov
and
in
adc
jo
data16
fstpt
add
js
jge
dec
adc
sarb
adc
ret
je
adc
mov
adcb
pop
clc
mov
jmp
push
lods
out
mov
scas
icebp
push
sbb
addb
jbe
sar
push
xchg
nop
xchg
lcall
inc
jo
inc
jge
int3
mov
dec
inc
lock
xor
add
mov
add
mov
divb
xor
fwait
adc
xchg
mov
fmulp
lcall
fsubs
mov
add
mov
push
sbb
xchg
inc
pop
stos
dec
loopne
inc
aaa
rorb
fs
sub
les
push
push
lock
jge
mov
cmp
notb
sub
add
xchg
cmp
pop
dec
push
jmp
aas
lret
jge
sbb
test
jp
inc
adc
enter
push
or
repnz
aaa
and
mov
decl
lds
ss
add
or
jl
cmp
mov
pushl
in
mov
and
fdivrl
xor
push
into
push
inc
add
sbb
push
pop
mov
mov
js
mov
xor
mov
or
adc
jecxz
in
insl
cmp
mov
ss
inc
mov
push
fstpt
clc
filds
ss
add
or
inc
sbb
mov
push
scas
push
les
mov
or
enter
out
or
xchg
cli
mov
adc
mul
xchg
cmp
sub
xor
fs
mov
and
sbb
hlt
xchg
xchg
std
sub
test
push
shll
cmp
pop
adc
mov
inc
push
pop
inc
inc
jb
lea
push
mov
xor
xor
pmullw
mov
insl
repnz
jbe
aad
call
ret
sbb
adc
and
add
pop
adc
mov
fimull
orb
mov
fmul
roll
rcl
incb
enter
dec
nop
cmp
cld
pop
inc
lods
ss
lret
add
es
push
and
je
or
and
test
cli
mov
xlat
mov
fsubs
stos
lahf
xor
jnp
xchg
jae
sub
in
seto
xor
adc
sub
cmp
loope
rcrl
mov
aam
sbb
lea
mov
add
add
call
mov
pushl
add
call
std
int3
fmuls
adc
sar
outsb
sbb
in
sub
adcw
in
shrb
fwait
test
inc
ret
inc
pop
xchg
and
rorl
stos
cs
push
or
push
orl
dec
dec
data16
inc
es
loopne
push
in
add
mov
lock
ljmp
decl
adc
pushf
mov
inc
incl
push
mov
xchg
mov
xchg
and
mov
lock
add
pushl
fsubl
shll
shrb
je
xor
sub
add
das
lock
mov
xor
fisubl
lret
fimull
push
pushf
adc
std
in
push
mov
fsubs
mov
mov
xor
mov
movl
mov
pop
push
inc
inc
sti
mov
or
cld
out
add
enter
or
clc
push
sub
nop
or
inc
insl
push
out
ret
push
and
aas
out
xor
cmp
shl
add
mov
popa
aaa
pushw
lock
into
add
sub
aaa
in
ja
mov
std
cmp
loop
sub
pop
punpckhbw
jne
test
cld
add
mov
inc
pop
lods
pop
push
push
dec
adc
jle
xor
mov
cld
mov
movsl
test
rorb
dec
out
andl
mov
loope
arpl
fcomip
pop
sbb
cld
insl
mov
pop
decl
in
sub
js
and
lcall
mov
push
imul
jl
and
int3
lods
clc
rcll
cld
dec
jle
and
popa
pushf
and
dec
mov
data16
gs
fcoml
push
xchg
clc
jp
fisttpl
and
cmp
push
and
mov
inc
lcall
sbb
sub
pushw
in
fidivrl
or
or
or
and
les
mov
push
push
xchg
lock
cmp
sbb
add
decl
adc
test
paddsb
mov
das
shlb
pusha
or
cmc
aas
add
mov
xor
fbstp
call
out
push
jg
aas
and
mov
fsub
rclb
jns
adc
mov
adc
clc
insb
xorl
rorl
adc
cmp
or
pusha
mov
loope
push
push
rolb
add
aam
and
push
push
pop
xchg
ljmp
push
pop
or
std
add
clc
pusha
mov
mov
shr
lret
pushl
add
out
jmp
adc
fsubl
sldt
inc
jbe
pop
idivb
or
out
int3
push
add
dec
mov
jbe
push
jb
sar
cmp
push
push
ret
enter
xor
inc
jne
lock
mov
sub
or
fsubrs
mov
bound
cmp
je
push
sbbb
jbe
insb
int3
sbbb
andb
loope
clc
test
lea
test
in
mov
andb
adc
xchg
cmpsl
in
sahf
call
mov
cwtl
sbb
push
test
rorb
adc
and
mov
pop
lea
in
lock
xor
daa
stos
je
adc
push
rolb
pop
mov
adc
jb
cmpsb
inc
mov
in
adc
shl
inc
in
adc
fldl
in
jg
rorl
sahf
or
lock
or
mov
es
mov
mov
sub
cmp
sbb
sbb
add
arpl
sbb
jo
incl
mov
xor
pusha
xor
test
sub
add
js
pop
ret
loopne
mov
adc
mov
cmp
dec
xor
js
xor
outsb
popf
ret
jae
out
out
cs
mov
or
mov
mov
mov
imul
push
mov
mov
xor
pop
or
pop
cld
mov
rorw
cli
xor
aaa
test
cld
mov
loope
mov
mov
pushf
add
enter
or
iret
nop
and
mov
push
lock
push
gs
push
mov
xor
inc
push
shl
push
xor
mov
dec
inc
lea
ret
add
es
xchg
repnz
mov
es
xchg
movl
inc
mov
movsl
fcomip
int3
adc
cmp
fdivr
mov
adc
mov
mov
insl
nop
orl
lock
or
or
pop
push
imul
ljmp
push
jb,pt
jbe
add
mov
pop
push
arpl
sti
cmpsb
mov
insb
push
dec
test
sub
ss
cmp
mov
xor
add
clc
pop
ret
jne
mov
xor
imul
std
and
add
xor
push
inc
mov
inc
push
inc
and
outsb
lock
or
pushf
sub
ds
pusha
inc
pusha
push
pop
xchg
add
leave
mov
test
aam
mov
pop
pusha
stos
and
mov
aas
hlt
icebp
mov
adc
pop
pop
gs
cmp
cwtl
inc
insl
sub
cmp
insb
jno
adc
leave
add
or
mov
call
cmp
cli
xor
or
inc
sub
mov
es
in
sub
pop
mov
inc
fcomps
data16
shlb
push
rorl
mov
out
mov
add
js
arpl
xchg
decl
xor
call
or
divb
fs
jns
jbe
add
cmc
lcall
ljmp
mov
fistl
xor
aad
inc
icebp
mov
xchg
mov
push
outsb
js
dec
call
push
inc
xchg
pushl
xchg
popf
inc
inc
inc
ficompl
cmp
ret
fsubrs
call
popf
jae
push
test
mov
popa
sbb
inc
sbb
js
or
adc
push
sarl
std
dec
gs
add
add
or
mov
subb
pop
sar
push
mov
mov
shrb
and
int3
adc
or
mov
jo
jb
data16
xchg
or
push
jg
sbb
or
xor
mov
jb
add
add
insb
jb
mov
xchg
xor
sub
jne
ficoml
pop
fmuls
adc
in
xor
xor
rorb
outsb
add
aas
inc
jmp
inc
xchg
aam
add
insb
adc
mov
rcrb
and
mov
xor
jbe
jne
xor
fs
data16
push
push
xor
sub
mov
inc
lret
mov
adc
out
add
ja
pop
jp
cld
mov
rorb
mov
mov
adc
and
mov
xchg
or
jae
gs
in
jne
push
loope
mov
jo
gs
fdiv
cmp
pushl
out
aaa
mov
mov
int3
jl
and
pop
mov
test
push
fistps
int3
into
iret
push
and
fadd
add
dec
cli
jp
icebp
mov
mov
sbb
enter
add
fistps
push
xor
sbbb
std
xchg
or
mov
mov
adc
icebp
inc
sub
insb
cmpsb
add
les
fisttps
nop
mov
adc
cmp
adc
push
je
inc
popf
push
or
xor
leave
ds
scas
push
push
mov
test
sbbb
or
in
lea
mov
nop
push
mov
xor
push
out
inc
xor
pop
add
fdivs
pop
cwtl
xchg
scas
cld
inc
inc
pushf
xor
scas
add
jle
call
outsb
xor
add
push
ss
mov
push
push
or
pop
adc
and
gs
dec
inc
addb
test
loope
dec
shl
loopne
adcb
pusha
shll
xchg
mov
fstp
xor
jo
mov
lea
inc
data16
cmp
pusha
push
or
ss
mov
add
into
dec
test
cli
sub
fmuls
jb
sarb
lock
call
xor
jb
movsb
push
clc
rorb
xchg
mov
adc
push
mov
and
ss
cld
cld
jns
aaa
inc
push
xor
xorl
lea
sar
sub
roll
rcl
pop
inc
aaa
cmp
and
and
pop
ret
rolb
mov
out
adc
push
sub
pop
add
xchg
adc
cli
lea
xor
dec
jb
add
and
inc
cmp
mov
adc
add
into
fwait
insb
insl
shll
cmp
mov
clc
call
rol
insb
cmp
or
mov
mov
cmpsb
sub
das
mov
mov
sub
je
je
push
aas
sbb
imul
push
cmp
mov
in
hlt
add
or
sarb
mov
lods
adc
inc
inc
adc
popa
xor
mov
and
sub
lock
call
cmp
adc
or
aas
aad
rolb
fldl
pop
hlt
cmp
sub
add
xchg
dec
movl
aas
call
out
sbb
sub
out
dec
mov
add
xchg
repz
cmp
aaa
std
loope
and
or
add
clc
add
aas
leave
add
js
ds
call
ss
sub
inc
jecxz
call
incb
inc
xchg
leave
fdivrs
outsl
cli
mov
cmp
imul
rorl
pop
pop
xor
sahf
push
insb
jb
insb
pop
dec
adc
cli
lahf
and
lea
and
mov
cld
notb
xchg
test
sbb
lods
add
rolb
cli
stos
jge
fisttpll
test
add
and
or
clc
shll
test
nop
test
pop
int3
les
inc
inc
les
aaa
ret
or
cld
test
lock
outsb
call
sbb
mov
push
xorb
and
movl
adc
adc
jp
and
sub
sub
add
cli
daa
inc
mov
add
call
push
gs
int
jb
incl
adc
sahf
or
test
push
dec
movsb
das
sahf
decb
add
int3
repnz
mov
xchg
mov
xor
inc
enter
rorb
mov
adc
xor
in
mov
adc
cmp
int3
add
sbb
mov
sub
lods
push
xchg
add
fdivrl
mov
push
neg
add
push
pop
aam
movsb
lea
or
adc
sti
arpl
xchg
xchg
rclb
mov
fwait
gs
loope
cli
hlt
pop
arpl
and
pop
inc
cld
popf
xlat
jae
loopew
inc
adc
and
push
clc
push
jo
cmp
pop
subb
fcoms
enter
pop
sub
cmp
adc
mov
xchg
cmc
lcall
pop
shlb
mov
mov
mov
xor
test
or
aaa
jnp
push
scas
decl
test
adc
mov
push
mov
jb
sub
lea
call
mov
int3
int3
cld
bnd
dec
jmp
lret
loop
inc
bound
sub
gs
push
mov
push
imul
inc
lret
jnp
testb
scas
lock
cmp
test
ret
shlb
sbb
sbb
ficomps
sqrtps
xor
push
cmp
mov
mov
inc
in
pusha
jmp
shll
ret
js
in
pop
sbb
inc
mov
inc
push
cld
aad
mov
sub
loope
xchg
or
sub
push
mov
mov
lret
aam
ficoms
jp
push
call
call
pusha
add
or
pop
push
mov
repz
js
inc
pop
andl
xchg
enter
adc
inc
jnp
inc
movsb
push
mov
jmp
loopne
adc
jge
adc
loopne
js,pn
decl
jne
les
sti
cli
ret
inc
jo
fs
gs
ret
mov
lock
jmp
xor
push
ds
add
adc
pop
clc
loop
add
push
mov
das
rclb
push
gs
mov
outsb
cld
mov
ret
hlt
call
sahf
or
xchg
push
aaa
pop
ret
mov
call
inc
or
mov
pop
add
inc
js
pop
into
roll
mov
jne
mov
sub
adc
in
insb
push
xor
rcll
loope
mov
or
sub
pushf
sub
add
dec
icebp
or
loopne
scas
test
mov
xlat
jo
int3
mov
mov
add
hlt
mov
sbb
bndldx
jmp
shlb
or
sbb
sbb
ljmp
jl
hlt
fstp
jb
pushl
int3
cld
mov
dec
or
sub
shl
cmp
inc
adc
dec
mov
jl
fldl
jle
xchg
mov
add
add
mov
push
dec
subb
not
push
push
pushf
call
mov
mov
lcall
or
pop
sub
add
jl
pop
push
xor
add
cwtl
jp
xchg
pop
or
mov
mov
jne
sbb
sub
pushl
mov
les
fsubs
loope
inc
add
rorl
push
inc
mov
mov
dec
loopne
add
fistpll
or
insb
push
idivb
sbbb
rcrb
test
in
testl
inc
and
scas
mov
cli
dec
inc
les
and
shlb
push
or
out
mov
push
movsb
loopne
mov
adc
cmp
lock
rcl
sbb
sub
movsb
mov
orb
insb
out
adc
pop
mov
push
cmp
push
fdivrp
xchg
loopne
jne
and
dec
jl
add
push
adc
push
popa
jmp
mov
jbe
mov
push
mov
cs
pop
inc
cli
jg
decb
sub
sub
loop
jge
andl
adc
fldl
cltd
mov
inc
jnp
adc
cs
loop
mov
lds
push
mov
dec
inc
mov
es
inc
rcl
out
jg
fbld
xor
fidivl
cmc
jb
imul
nop
jl
jmp
hlt
add
jnp
dec
aad
xor
outsb
mov
and
lods
push
add
xor
aas
and
add
and
orl
mov
adc
loopne
clc
lcall
sub
pop
fiadds
jb
mov
cmp
repz
mov
push
mov
dec
shll
rcrb
repnz
adc
hlt
jne
and
inc
adc
push
push
es
xor
adc
jnp
cmp
pushf
xchg
inc
call
inc
pop
or
or
pop
xor
mov
mov
add
inc
fadd
push
inc
je
xchg
ret
add
cs
adc
cmp
cwtl
mov
sub
push
icebp
pop
jns
pushf
add
cmp
mov
popa
mov
rolb
xchg
or
mov
sbb
in
rorb
mov
inc
shll
cmp
pop
inc
cld
cmp
je
add
rclb
pop
xchg
mov
pushf
lock
lea
add
shlb
incl
mov
std
or
xor
mov
out
add
pop
xor
jne
movsl
and
loop
push
or
jne
call
dec
xor
push
pop
fcoms
stc
incl
dec
push
in
insb
pop
pop
test
inc
addl
ds
out
outsb
xor
call
push
adc
ljmp
mov
subl
cmp
add
mov
pushf
mov
or
dec
std
and
int3
mov
inc
js
aam
test
pop
dec
or
mov
xor
cmc
fiadds
adc
push
nopl
inc
clc
enter
mov
pusha
clc
les
or
xor
push
mov
fstl
lods
loopne
cmpsl
jmp
cmp
push
test
or
adc
shlb
ret
lock
mov
cmp
call
addl
jmp
in
mov
dec
cld
pop
pop
inc
lds
pusha
sub
lods
push
shlb
pop
xor
add
inc
jmp
or
jecxz
inc
xor
in
mov
outsb
jg
mov
in
lea
pusha
out
in
nop
adc
in
ret
mov
adc
pop
mov
pop
jbe
sbb
outsl
mov
or
push
add
dec
and
cli
sbb
add
loope
cwtl
js
mov
js
fildll
mov
cmp
addl
les
in
loopne
test
cmp
rolb
push
push
pop
xor
imul
inc
xor
into
out
insb
loope
push
lea
inc
push
mov
pop
push
rorb
push
mov
push
test
in
cmp
push
insl
pop
dec
jmp
jne
mov
faddl
pop
incl
add
add
mov
push
call
inc
add
rcl
xchg
cld
insb
jae
or
ret
pop
aam
jge
mov
lds
inc
adc
xor
jle
add
into
pop
inc
lahf
js
stos
jo
jmp
push
shlb
inc
xor
push
mov
fs
testl
jb
jae
loope
xchg
cmp
out
fldt
rolb
push
push
mov
movl
js
sub
xor
test
cld
mov
or
int
mov
inc
cmp
add
mov
ljmp
lea
cmp
push
add
lea
sbb
or
push
sbb
jge
incl
push
and
add
jo
lods
or
inc
jo
cmp
sbb
jb
jmp
roll
add
push
pushf
mov
pop
sbb
cmp
inc
adc
adc
fiadds
addl
and
out
int3
xchg
cwtl
decl
jl
cld
call
or
mov
sub
dec
es
rolb
xor
cmp
arpl
lds
stos
test
ret
xchg
pop
cmp
lock
cmp
pushl
enter
mov
lock
jne
roll
adc
in
mov
add
sub
sub
fisubl
or
push
inc
mov
sbb
sbb
loopne
clc
fisttpl
sbb
scas
call
lea
push
add
dec
sub
mov
out
mov
mov
or
jle
sti
aad
js
jo
pop
cld
cld
sbb
and
mov
fs
add
lea
fs
fildl
add
pop
push
cmp
decl
scas
push
sub
test
loopne
add
push
stos
add
inc
sar
loopne
out
add
add
add
push
pop
cmpsb
jecxz
sub
mov
cli
cmp
loop
fs
jmp
add
dec
and
insb
insb
aam
lods
cli
push
cltd
test
sbb
ret
jle
cmp
adc
cli
add
or
fbld
fdivs
xchg
mov
jg
outsl
add
test
lock
mov
or
icebp
aas
sbb
and
std
add
lods
je
sbb
popf
outsb
mov
scas
rcrl
xor
xchg
pop
sbb
dec
loop
push
decl
sar
mov
pop
ja
vpmulhuw
shlb
inc
xchg
mov
push
movsl
pop
test
test
call
mov
clc
leave
xor
push
lea
test
adc
and
lock
adc
or
insl
xor
clc
add
xchg
jl
push
and
pop
ss
xchg
push
jns
sub
dec
inc
adc
add
jo
add
or
add
push
in
adc
jo
decl
pop
inc
dec
loopne
ds
cmp
or
mov
movsl
dec
mov
insb
sbb
shll
loope
push
inc
push
leave
pop
inc
push
add
sbb
adc
arpl
push
mov
inc
pop
push
mov
push
pusha
mov
rorb
and
push
insb
insb
adc
add
fdivrs
inc
push
mov
int3
xor
sbb
shll
das
adc
sbb
add
push
pop
sub
adc
jb
add
or
int3
add
add
mov
jb
adc
imul
jle
dec
xchg
fmull
xor
add
les
dec
je
dec
call
test
stos
ljmp
mov
shl
mov
clc
lds
clc
sub
fisttpl
aaa
sub
cwtl
fimull
xchg
ret
sub
push
mov
dec
xchg
mov
dec
jb
mov
inc
jo
insb
cmp
xchg
mov
mov
aam
fdivrl
gs
std
mov
jb
inc
sub
pop
xor
sbb
pop
or
jne
sbb
into
sar
cld
scas
push
xor
or
adc
adc
sub
lods
aam
inc
decl
add
ljmp
fcompl
jb
fmull
sbb
xor
cs
int3
cmpb
adcb
inc
sub
mov
test
repnz
out
xchg
or
jl
xor
lock
ss
and
repnz
call
mov
ljmp
add
sar
xor
cs
xlat
stos
enter
inc
cmp
call
loopne
leave
nop
into
push
adc
cmpsb
mov
mov
in
push
push
inc
cmp
sub
adc
pop
sbb
vpor
hlt
mov
xor
xchg
dec
inc
lea
jle
outsb
or
push
sbb
data16
sbbb
adc
push
bound
popa
ficompl
pushf
jnp
orb
push
fs
jmp
push
sub
or
test
pop
xor
jne
rorl
ret
in
addb
je
cmpsb
int3
insb
jo
fisubrl
in
add
push
push
mov
dec
mov
jae
xor
es
lock
push
pop
inc
stos
push
push
push
out
pop
sbb
fimuls
les
push
adcl
cltd
test
cmp
mov
xchg
je
int3
or
add
int3
outsb
and
mov
jmp
or
sub
or
add
rcr
mov
movl
sbb
ret
pop
stc
add
inc
add
scas
push
xor
fbld
in
enter
mov
sbb
adc
xor
adc
cmp
fsubr
sbb
push
push
sbb
and
dec
bnd
jl
hlt
mov
and
rcrb
jae
aaa
pusha
aaa
jmp
cmp
int3
test
mov
sbb
inc
adc
mov
xchg
hlt
mov
test
mov
test
or
jle
mov
add
out
add
mov
mov
je
in
pop
data16
icebp
or
int3
xchg
add
nop
iret
sub
loopne
pop
cmp
add
add
clc
adc
inc
aaa
jge
lcall
pop
jbe
and
jbe
push
jmp
sbbw
xor
mov
pop
inc
pushf
mov
mov
sarb
aaa
add
jge
std
sub
cmp
mov
xor
pop
push
pop
cmc
inc
add
shrb
popa
push
xor
ds
or
mov
lret
inc
mov
cmpsb
or
or
push
inc
mov
xor
enter
or
adc
mov
inc
data16
and
stos
push
mov
sbbl
cs
push
push
shrl
dec
pop
xchg
mov
jp
mov
pop
inc
dec
xchg
subb
adc
cmp
add
nop
leave
mov
in
es
push
cwtl
mov
pop
les
xor
lret
and
loop
addb
dec
fdivrs
inc
mov
sbbl
push
sbb
lcall
xor
jb
mov
cmp
dec
cmp
mov
inc
lock
sbb
orb
pop
adc
roll
mov
mov
orb
cmp
mov
push
repnz
fsubs
and
inc
fs
outsl
mov
jne
test
add
dec
mov
dec
movl
in
xchg
clc
and
xor
movsb
or
imul
sub
jbe
mov
mov
mov
pushl
or
in
mov
or
pusha
push
inc
xor
push
push
xor
xchg
pop
and
dec
dec
add
into
imul
jbe
or
ficompl
pusha
push
gs
pop
mov
movsl
pop
mov
test
pop
inc
adc
mov
xchg
outsb
xor
dec
loop
sub
xchg
add
cmp
out
aaa
ret
mov
imul
les
test
mov
inc
jmp
inc
shl
add
pop
outsl
xchg
push
les
aaa
bound
push
frstor
call
incl
test
xor
pusha
imul
pop
paddusb
or
jns
sub
test
push
clc
dec
mov
add
jne
test
stos
call
or
incb
jmp
jno
stos
xchg
jle
push
cmc
mov
sbb
stc
inc
add
and
sub
int3
je
cltd
xor
es
dec
subb
inc
pxor
shrl
jmp
cmp
adc
pushf
dec
or
aas
in
popl
andl
lea
inc
xor
not
test
test
sbb
dec
push
dec
sbb
xor
push
int
and
pushf
mov
inc
mov
scas
in
push
jo
adc
adc
in
stos
mov
xor
lcall
mov
ljmp
xor
daa
test
xor
xor
pop
cmp
sahf
call
dec
adc
add
in
inc
test
fnsave
test
xor
add
push
inc
and
inc
pop
fmuls
rorb
pop
adc
or
mov
jb
mov
jecxz
adc
and
jg
sub
push
or
mov
add
pop
dec
dec
inc
mov
loope
pop
mov
mov
add
addr16
into
pop
aam
or
cmp
lea
or
push
sub
adc
adc
pop
or
mov
mov
cmp
and
add
movsb
shl
gs
push
out
and
dec
fildl
clc
dec
cmp
lcall
sub
out
xorb
xor
pop
cli
add
jb
mov
or
or
mov
clc
and
outsb
add
aaa
sbb
adc
sub
jge
sub
pop
jbe
adc
in
mov
inc
xor
or
xor
fimuls
add
push
shll
gs
jecxz
cli
cli
sub
mov
mov
fwait
push
dec
fists
sbb
and
cli
push
scas
movsb
sbb
or
mov
or
shr
push
stos
mov
adc
push
sub
hlt
sub
addl
imul
aaa
mov
push
push
or
in
adc
cmp
lods
icebp
fcompl
stc
jae
pushf
mov
insl
and
je
subl
aaa
inc
sbbb
fcoml
inc
repz
xchg
rcrb
loop
cmp
mov
add
nop
fisubs
shrb
add
push
push
lock
lock
ficoms
rolb
add
xor
les
dec
sarb
pop
cs
call
mov
push
stos
mov
test
movsb
pop
pop
sbb
mov
rorb
add
sub
insl
pop
mov
jmp
ljmp
subb
adc
arpl
add
jg
adc
pop
dec
fnstenv
sub
mov
push
imul
ror
add
lock
loope
push
call
xor
inc
mov
loop
push
dec
push
in
scas
jle
jb
add
cmp
je
sbb
incb
and
mov
add
and
test
lea
jo
and
or
loope
int3
or
dec
andl
inc
daa
stos
ljmp
push
cmp
data16
fs
mov
push
inc
lcall
cli
or
pop
fcom
cs
pushl
inc
jb
gs
push
test
add
fimull
inc
jl
cmc
mov
sbb
lds
sub
hlt
decl
xlat
cmpsb
ret
or
ds
xchg
test
or
sbb
ja
arpl
mov
or
xor
lea
pop
lcall
mov
in
lcall
ret
enter
mov
mov
pusha
xor
roll
cmp
or
jno
scas
fcmovbe
addl
test
add
mov
adc
mov
jge
adc
lock
mov
lock
ret
pop
push
test
add
nop
ret
push
rolb
push
icebp
shrb
mov
dec
stos
test
mov
fbstp
test
negl
iret
mov
jl
adc
mov
adc
mov
jo
dec
mov
cmpsb
in
mov
scas
sbb
inc
jl
insb
int3
push
cmp
adc
call
xlat
or
in
cli
inc
je
fstpt
jg
rorb
insb
inc
mov
cmpsl
sbb
or
lock
dec
call
pop
dec
xchg
roll
lahf
or
add
xchg
rcrb
pop
and
out
int3
jg
hlt
addl
enter
cmp
ljmp
push
pop
test
sub
cmp
adc
aaa
add
clc
pop
je
lret
push
fadds
push
andb
sbb
cli
xor
pop
mov
ror
mov
lods
nop
push
ds
jmp
push
scas
inc
loope
outsb
mov
and
out
push
fs
icebp
inc
mov
insl
add
dec
jae
cli
mov
inc
pop
xchg
push
sbb
push
cmp
aas
adc
test
inc
decl
repz
loope
mov
adc
inc
jecxz
mov
mov
incl
adc
add
add
sti
dec
addb
push
sub
push
lock
adc
dec
jcxz
and
mov
dec
fsubs
xchg
dec
aaa
stos
inc
mov
cmp
repnz
mov
shlb
repnz
sti
inc
cmp
xor
inc
fsubrl
je
bsf
mov
fadds
sbb
cmp
adc
in
xchg
ljmp
shrb
add
add
push
inc
add
inc
add
adc
cmpsl
or
sub
jge
inc
std
test
int3
and
daa
aam
cli
push
in
lret
loopne
je
fsubrp
js
push
notb
es
pop
cmpsb
jle
insl
pop
dec
aam
xor
mov
add
loop
cmp
leave
push
mov
lcall
mov
mov
fdivs
mov
mov
push
push
push
mov
outsb
and
push
movsb
ds
lcall
in
dec
call
dec
mov
push
pop
adc
add
shrb
inc
mov
push
ret
call
and
jge
mov
mov
js
xor
inc
sub
jbe
inc
pop
popa
je
inc
out
fs
mov
sub
add
push
dec
stos
jl
mov
cmp
ret
pop
fisubl
pop
push
out
xor
stos
lods
or
pop
clc
insl
bound
mov
add
icebp
mov
and
cwtl
mov
pop
jo
mov
ljmp
rclb
or
cmp
and
add
push
and
enter
sbb
inc
and
pop
add
cmpsl
or
call
mov
mov
or
push
insl
xor
fcomps
stos
out
cmp
and
add
add
sbb
lock
inc
mov
lcall
insb
inc
imul
int3
add
and
dec
inc
mov
std
mov
jne
loopne
or
ja
dec
test
cmpsb
aam
push
sub
out
out
arpl
mov
pop
adc
jne
aaa
int3
fsubr
cmp
mov
sahf
jbe
pop
jmp
adc
xor
dec
push
je
mov
js
out
test
les
int3
gs
pop
les
or
je
lock
mov
push
adc
fcmovu
insb
dec
hlt
xor
sbb
pop
push
dec
adc
loop
mov
out
push
in
mov
jb
add
push
cmp
jbe
int
jle
dec
sarb
or
adc
or
mov
jo
or
movsb
mov
in
pop
or
xchg
and
push
mov
add
mov
cmp
push
cmp
cld
loop
imul
je
xor
lret
je
rcrl
mov
add
popa
inc
in
test
leave
sub
incb
jg
outsl
js
js
test
mov
xor
mov
adc
pop
or
push
leave
cmp
add
sub
xchg
mov
mov
ret
ja
fdivs
pop
cmp
in
lock
ds
push
jne
insb
out
or
push
mov
je
or
orl
mov
fwait
add
sub
mov
push
sbb
or
push
out
pop
inc
or
xor
cmpsb
pop
and
and
movsl
inc
cmp
shr
inc
inc
dec
push
push
pusha
adc
push
dec
int3
and
ret
or
call
ljmp
lcall
pusha
aaa
stos
lock
inc
mov
inc
fcmovu
and
add
inc
jne
cmp
fwait
cmpsb
push
cmp
xchg
ss
in
cmp
call
fdivs
sbb
lods
xor
or
adc
jle
pop
loopne
mov
rolb
inc
mov
xchg
add
loope
loop
es
inc
nop
int
fcmovne
std
push
push
or
push
outsb
inc
test
orb
data16
pop
sbb
cmpsb
or
or
and
and
shll
call
in
push
mov
add
inc
add
fadd
push
dec
fadds
hlt
pop
mov
xor
adc
jge
outsb
push
push
mov
or
enter
leave
sub
or
test
mov
add
addl
outsl
es
rol
inc
scas
call
shll
add
sub
pushf
movsl
add
push
adc
mov
cmp
push
pushf
sub
lock
jecxz
lock
jl
ret
aam
dec
add
inc
incb
mov
jl
std
scas
clc
dec
loop
rolb
inc
out
int
in
add
lock
cmc
lcall
pushf
or
iret
lods
testb
fadds
loopne
pushf
fsub
xchg
rolb
pop
dec
xchg
lahf
or
sbb
push
adc
add
sti
adc
fs
sub
adc
scas
sub
enter
xchg
mov
push
inc
movsl
pop
clc
lahf
je
jmp
loop
push
movsb
sarl
mov
into
mov
outsl
fistl
mov
add
sub
daa
mov
pop
enter
cwtl
insb
ficoml
xchg
pop
push
jo
int3
shll
dec
cltd
popa
hlt
out
bound
fimull
lds
sub
imul
fdivl
inc
lock
sub
std
fdivs
push
gs
push
push
fmuls
adcb
rolb
ret
xchg
cmp
rclb
xchg
push
adc
cli
sar
outsb
jge
dec
adc
pop
stos
add
push
rclb
push
mov
nop
dec
testb
loope
fdivl
in
pop
add
insb
lea
lock
andb
rcrb
add
mov
ret
cli
xor
push
mov
mov
ss
inc
and
push
mov
push
cld
push
orl
mov
add
ss
push
ficompl
les
add
lcall
xchg
mov
dec
sub
cwtl
mov
aam
inc
sub
insb
or
cwtl
test
cmp
roll
inc
aaa
hlt
call
shll
xor
or
in
push
mov
mov
jne
pop
add
hlt
jg
push
add
icebp
cmp
lods
xor
fisttpll
std
rcrb
inc
int3
lods
incl
mov
lret
jne
aad
xchg
mov
shrb
or
pop
xor
loope
bound
or
test
lock
mov
or
imul
in
push
or
mov
adc
ja
adc
outsl
ret
movsb
dec
pop
int3
test
push
pop
test
push
xchg
cmp
fs
sub
pop
jl
dec
xor
cmp
jo
add
xor
ja
mov
pop
sar
in
mov
in
push
mov
mov
push
or
mov
loop,pt
pusha
ret
adc
js
cmp
les
stos
mov
sub
ds
call
add
mov
cli
xchg
or
out
movsb
fcoml
les
xchg
addb
lcall
sub
cwtl
shrb
mul
roll
push
pop
or
mov
movsl
fidivs
add
xchg
adc
add
insb
hlt
cs
rcr
ljmp
icebp
push
popf
push
andl
clc
call
inc
inc
js
lcall
pop
pop
loopne
shlb
leave
gs
test
push
add
push
fistps
mov
jo
add
xor
movsb
cs
js
int3
inc
sub
or
test
dec
jne
loop
sub
sbb
xor
lock
mov
sbb
adc
xor
fiadds
out
mov
sbb
xchg
jno
mov
lock
adc
inc
adc
in
dec
icebp
gs
in
adcb
mov
das
add
jb
outsb
push
movsl
xchg
clc
outsl
sbb
out
incl
add
and
jmp
shlb
cli
mov
push
fcoml
das
mov
or
jne
cmp
mov
push
rcll
jp
inc
adc
and
jmp
nop
push
mov
leave
aam
and
jecxz
incl
push
sbb
shll
adc
mov
sbb
xchg
push
add
mov
in
cmp
push
push
loop
add
jp
push
pop
cmp
stc
mov
dec
fimull
popa
jns
adc
sbb
xor
prefetcht2
test
shr
mov
div
in
jl
mov
pop
gs
cmp
xor
push
loope
cmp
xor
add
outsl
xor
adc
push
add
jb
call
add
mov
or
jge
mov
outsb
shrb
test
push
loopne
or
jl
rcrb
idiv
add
movsl
inc
mov
fcomps
inc
mov
push
aam
mov
loopne
mov
xor
hlt
mov
in
js
test
ljmp
mov
or
pop
jo
cmp
mov
push
add
mov
pushl
inc
arpl
pop
lea
js
pushl
mov
enter
inc
je
adc
or
dec
test
mov
mov
or
pop
roll
call
inc
ret
xchg
pop
add
mov
and
xchg
xchg
jo
sub
mov
inc
and
jne
push
sub
sub
cwtl
sbb
cli
jg
popf
adcl
out
sbb
adc
aam
aam
mov
test
clc
pop
andl
lea
or
in
mov
cmp
sub
or
mov
rorl
aaa
mov
shlb
ret
mov
push
push
adc
mull
sub
stos
sub
adc
or
or
xchg
xor
sar
mov
es
push
add
or
push
adc
jecxz
fisubrs
jae
sub
mov
xchg
fidivl
inc
sbb
call
add
aam
ror
push
adc
imul
mov
test
dec
insb
ljmp
call
arpl
aad
mov
cmp
xchg
sub
pop
lock
cld
jb
andl
dec
add
fsub
and
mov
out
ret
push
les
inc
ret
add
xchg
mov
push
inc
pop
mov
test
insb
or
je
xchg
jno
mov
insb
jmp
paddd
ret
inc
dec
out
aaa
call
test
add
jp
lret
inc
loopne
and
test
fistpl
lret
sbb
sub
fadd
in
mov
mov
fadd
ficoms
imul
mov
push
mov
sbbb
xor
and
push
mov
lock
add
cld
popa
ret
mov
inc
lret
je
cltd
or
je
mov
lcall
loop
mov
test
mov
mov
push
add
gs
jecxz
cmpsb
pop
adc
adc
loopne
add
adcl
mov
fwait
scas
subb
call
clc
add
mov
cs
sbb
jmp
lret
popf
inc
inc
xchg
in
test
dec
cmp
dec
fmull
jle
adc
sub
mov
fisttps
ds
push
test
adc
push
cs
mov
out
dec
pop
pushl
and
sub
scas
leave
sub
mov
lock
roll
jo
int3
loop
ds
xchg
imul
lock
push
mov
sub
mov
sbbb
mov
sbbl
insb
jp
push
push
test
adc
div
mov
addl
xlat
dec
pop
push
rolb
out
les
xor
pop
out
stos
outsb
push
jmp
mov
daa
xor
cmp
push
or
sbb
pop
adc
mov
fistps
imul
cmp
subl
xor
mov
or
or
xor
test
scas
pop
inc
into
jns
jge
sub
dec
mov
test
mov
cmp
add
int3
xchg
ret
pop
dec
cltd
jns
add
sarb
test
or
add
paddq
push
and
mov
add
in
repnz
lcall
lea
push
call
or
test
inc
or
mov
add
movsb
or
xor
sub
mov
test
ds
decl
xor
es
sub
dec
call
cmp
sbb
subl
and
incl
add
lea
pusha
insb
mov
inc
adc
cmp
lcall
or
test
icebp
imul
mov
insb
or
sub
jbe
adc
or
scas
inc
adc
pusha
add
or
sbb
jmp
sar
jl
and
pop
inc
jae
mov
pop
and
sbb
jnp
xor
imul
cmp
push
nop
mov
push
aas
mov
test
pop
sarb
mov
mov
mov
inc
stos
inc
mov
scas
xor
mov
lea
dec
cmp
testb
inc
pop
lret
xchg
test
loopne
dec
mov
pop
push
mov
mov
push
div
add
mov
inc
test
and
pop
fmul
jo
sbb
jge
and
xor
rcrb
pop
std
adc
mov
inc
xor
in
push
loopne
adcb
jbe
add
js
leave
jbe
dec
lahf
cli
mov
call
xchg
or
adc
jns
jne
mov
dec
adc
fdivl
fs
pop
push
inc
stos
mov
test
mov
sbb
inc
adc
lea
cld
hlt
inc
movsl
inc
or
in
outsb
imul
cmp
cmp
add
xorl
mov
addb
outsb
jmp
sbb
insb
add
das
adc
and
dec
sbb
jnp
in
out
add
and
dec
push
iret
jl
out
scas
shrl
jne
test
adcl
mov
les
mov
dec
ret
cmpsb
das
sbb
xor
sub
cld
decl
imul
and
jge
ja
push
push
cli
insb
data16
or
lcall
push
mov
cmp
movsb
add
enter
and
xchg
mov
je
fcmovb
or
push
xor
jge
xchg
add
and
jmp
sub
shl
ja
xor
inc
or
adc
test
cmpsb
jae
cli
mov
push
or
scas
test
jo
dec
or
inc
nop
cmpsl
loope
sub
add
mov
call
xchg
push
add
mov
arpl
in
test
std
idivb
imul
je
sarl
jp
push
lea
ss
xlat
push
jle
mov
cld
test
jmp
sbb
add
outsb
movsb
lret
xor
je
pop
in
jno
jbe
mov
out
mov
or
pop
subb
sbb
dec
mov
dec
call
adc
xchg
and
inc
or
xchg
movsl
and
cmc
das
xor
jo
lea
add
inc
push
mov
std
sbb
test
adc
es
mov
xchg
fs
sbb
mov
add
jge
mov
sarl
jge
and
ss
adc
aam
hlt
out
mov
add
stos
into
xor
pop
jno
daa
pop
rcrl
pop
fsubrl
or
xor
ljmp
add
out
cmc
aam
add
or
in
sub
aad
leave
cld
je
push
ret
call
xchg
test
mov
pop
xor
sarb
cmpb
jbe
sub
push
xor
pop
xor
fcoms
or
push
or
mov
adc
rcrb
fwait
scas
push
stos
cmp
loopne
scas
mov
in
std
sbb
outsl
mov
cmp
fwait
rcrb
pop
aas
cmpl
cld
pop
push
test
and
or
cmp
aaa
dec
lock
incl
or
hlt
mov
mov
dec
or
rclb
pop
add
out
push
or
icebp
jnp
jmp
and
push
and
lock
inc
adcb
ljmp
cmovae
mov
in
idivb
xor
call
testb
jb
lock
mov
daa
ds
or
adc
mov
adc
jne
mov
into
por
or
push
mov
in
ret
xchg
int3
inc
mov
push
jle
mov
js
lock
es
mov
test
inc
fcomps
movsl
fcoms
ja
xor
or
mov
sub
push
mov
xor
mov
add
dec
pop
lods
inc
inc
add
fs
neg
push
pop
mov
push
movsl
hlt
clc
lods
pop
dec
mov
mov
cli
iret
inc
je
jp
mov
inc
jge
clc
test
jnp
in
pop
ss
push
pop
std
push
push
add
pushf
addr16
xchg
jmp
add
and
out
add
mov
clc
jne
mov
data16
mov
cld
scas
roll
std
inc
mov
out
hlt
sbb
adc
dec
outsb
pop
xchg
rol
gs
imul
inc
subl
inc
xchg
sub
les
loop
dec
rolb
je
in
std
or
or
or
inc
test
adc
mov
xlat
pushf
xor
inc
sbb
sbb
ss
pusha
daa
add
sbb
fiadds
movsl
testb
push
add
pop
fwait
pop
add
push
icebp
push
add
xor
and
cmp
and
and
sub
pop
pop
add
cmp
addb
jp
clc
push
test
push
iret
aas
push
aas
mov
jg
inc
insb
mov
mov
adc
inc
or
dec
faddl
lcall
jmp
jge
mov
push
out
push
push
inc
pop
add
push
mov
cld
pop
push
jle
dec
std
xor
shlb
add
gs
subl
sbb
lret
xchg
mov
mov
pop
test
xchg
inc
mov
adc
test
fsubrl
inc
sub
mov
inc
or
sub
jecxz
or
mov
adc
or
hlt
and
mov
test
sahf
pusha
xchg
mov
arpl
and
andl
lock
cld
inc
add
sbb
ds
decl
jmp
push
ss
rorb
loope
xchg
imul
lahf
ss
out
ficomps
div
cld
or
repnz
add
add
and
add
outsl
mov
jecxz
loop
sub
stos
scas
push
add
fstpt
pop
fwait
xchg
add
add
inc
call
pushl
sahf
leave
lret
mov
mov
dec
mov
mov
cs
jg
cld
inc
push
mov
fcmovb
movsb
in
push
cmp
clc
jmp
mov
imul
testb
bound
sub
ss
sub
jno
dec
or
cmp
jbe
add
fiadds
inc
insb
jo
inc
adc
scas
ljmp
mov
xor
ja
add
pop
and
jl
push
sbb
lcall
lret
jp
cwtl
nop
pop
cs
or
cltd
or
addr16
mov
cs
lret
inc
bound
sti
push
push
movswl
push
push
fidivrs
jbe
shlb
sub
out
inc
sub
es
fnstcw
mov
inc
fwait
inc
fiaddl
cmp
sub
xor
insb
xorb
insb
mov
subl
cmpl
pop
nop
sbb
orb
pop
inc
inc
add
in
popf
clc
je
push
push
or
mov
mov
xchg
jno
inc
decl
and
mov
lea
inc
add
or
mov
loop
outsl
mov
and
jmp
add
dec
jg
inc
sahf
movsl
add
pop
repz
adc
inc
leave
insb
and
or
les
stos
mov
sbb
jae
jmp
mov
pop
leave
popa
and
add
addb
jo
cld
loopne
lcall
xchg
mov
adc
push
and
mulb
lock
jle
jne
in
and
aaa
mov
test
ljmp
rclb
sbb
jge
pop
andb
iret
add
test
cmp
icebp
filds
cmpl
jb
stos
mov
stc
fiadds
out
pop
rolb
add
sahf
loopne
loop
push
sbb
cmp
inc
push
cmp
add
push
mov
fcmove
pop
push
cmp
test
stc
je
or
pop
dec
fcoml
mov
push
jne
mov
push
mov
cmp
fcompl
cld
inc
cld
std
or
lcall
dec
cmp
sbb
xchg
xchg
fsubrl
or
xor
mov
add
jp
pop
and
fdivl
jo
bound
add
and
out
add
sub
push
xchg
test
jmp
dec
pop
lcall
and
decl
cmp
sub
pop
jl
mov
add
mov
xor
push
jge
insb
xor
test
loope
js
mov
xchg
add
pusha
dec
jno
add
mov
fimull
gs
inc
rorl
xor
je
add
mov
dec
adc
adc
pop
adc
jne
sahf
push
xchg
sti
mov
roll
mov
stc
push
addr16
loope
pop
mull
adc
dec
jmp
shlb
rcl
inc
scas
mov
xlat
jns
mov
in
dec
lea
cmpsb
mov
cmp
pushf
mov
imul
dec
adc
sbb
sahf
ja
mov
mov
pop
inc
sbb
adc
dec
mov
in
fwait
and
inc
icebp
ljmp
push
jne
or
pop
je
sahf
mov
orl
or
or
cmp
loope
xchg
mov
push
xchg
int3
sub
je
or
lret
mov
es
fdivl
clc
rolb
dec
push
or
ljmp
andl
adc
sub
mov
lea
mov
aam
mov
loop
loope
notb
andl
xor
or
decl
pop
push
or
cmc
sar
ds
inc
insb
mov
outsl
jmp
push
mov
cmp
adc
dec
jmp
push
fimull
pop
decb
clc
or
mov
scas
inc
push
bound
mov
movups
pop
cmp
jno
pop
imul
add
out
clc
ljmp
sub
adc
push
data16
mov
call
fdiv
mov
fdivl
loopne
push
into
pop
insb
adc
push
shll
push
mov
xor
fcmove
std
or
cmp
mov
sub
xchg
imul
aas
ljmp
les
lods
mov
rclb
push
pop
fwait
sub
add
dec
scas
fimuls
add
ds
psubsb
ret
jp,pn
pop
add
rol
call
jne
fwait
outsb
loopne
movb
sub
cmp
scas
jmp
cli
or
and
scas
rcrb
mov
sbb
js
addb
jbe
std
add
loopne
jge
push
inc
test
or
mov
push
mov
jmp
aam
cltd
jp
inc
or
movsl
xor
rorl
mov
dec
mov
les
jne
push
hlt
add
adc
push
push
dec
clc
test
pop
andb
mov
scas
fcomip
push
jo
inc
pushf
jmp
jne
xchg
adc
mov
mov
sbbb
rorl
int3
sub
inc
push
icebp
stos
pop
es
int
mov
jl
inc
das
xor
add
int
sub
int3
cmp
popa
push
sti
dec
lret
mov
jb
mov
jle
mov
adc
inc
mov
jl
dec
jae
add
dec
mov
rorb
loopne
push
mov
and
push
orb
xor
push
push
mov
pop
mov
outsl
inc
movsl
pop
mov
jmp
emms
cld
outsb
cld
inc
dec
call
cli
lea
mov
adc
add
jnp
arpl
push
cmp
inc
aad
test
mov
and
je
or
ficompl
mov
int3
xor
add
push
in
cmp
int
sti
or
lcall
push
push
push
jae
jo
fwait
push
mov
cmp
icebp
xor
and
sarl
jmp
and
add
js
or
lock
mov
mov
adc
out
xor
mov
sub
xlat
push
inc
push
and
sbb
fistps
ljmp
jo
inc
cld
and
in
roll
mov
xlat
xor
push
cs
xorl
decl
push
rclb
inc
ljmp
fcmovu
aad
enter
cmp
lock
fistpll
movsl
jo
outsl
add
icebp
pop
scas
outsb
jbe
dec
inc
pop
mov
push
es
ja
mov
inc
push
push
fwait
decl
aaa
pop
jb
dec
mov
dec
dec
ds
mov
and
or
incb
dec
adc
add
mov
mov
retw
movsb
imul
cmc
and
stos
cli
gs
cs
xor
mov
out
mul
dec
mov
mov
push
call
inc
aas
add
jo
adc
cmp
outsb
pop
test
inc
add
enterw
dec
lock
push
out
loopne
repz
daa
mov
mov
add
xchg
lock
ret
shlb
int3
push
push
add
lret
pop
inc
lret
add
dec
jg
push
sahf
int
loop
gs
or
test
jnp
xor
cld
mov
int3
mov
push
push
xchg
push
mov
cmc
mov
add
cmp
cmp
loop
or
push
sbb
leave
mov
jb
mov
clc
push
lcall
icebp
inc
xor
sub
out
xor
adc
jle
int
cli
ja
out
ficompl
cmp
xchg
ret
movups
test
mov
and
sbb
mov
ret
pop
aas
arpl
dec
add
orb
cltd
jo
insb
xor
mov
or
xchg
pusha
cmp
pusha
jbe
mov
mov
lock
mov
push
decl
out
and
fsubs
adc
mov
add
mov
push
out
mov
call
mov
fimull
xor
or
cmp
jmp
xor
insl
sbb
or
push
sbb
or
dec
sbb
sbb
dec
mov
clc
xor
aad
rol
mov
pop
ret
test
mov
inc
ret
jbe
les
rcrb
inc
scas
scas
fs
mov
lods
xchg
jne
movlps
adc
loop
jne
fmull
test
sbb
in
push
out
pushl
std
cmpsb
test
cs
xchg
add
rcl
stos
push
std
shr
stc
ret
sahf
icebp
int3
xor
or
mov
mov
lcall
cmc
push
call
jbe
jnp
jnp
add
scas
add
sti
rcrb
sbb
dec
adc
xor
add
shl
add
inc
fcmovb
dec
mov
inc
mov
xchg
xchg
add
hlt
fbld
ret
xor
inc
mov
add
sbb
testl
push
adc
adc
jg
add
cmpsl
add
adc
xchg
add
adc
add
push
adc
sub
lcall
mov
and
arpl
ficoml
dec
adc
cmpb
jb
dec
loop
cmp
or
sarb
aaa
xor
cmpb
push
ret
and
mov
movsb
sub
sub
cmp
xchg
cmp
xor
movsb
mov
mov
or
push
test
adc
add
int
ss
cwtl
cmp
incl
dec
pop
lea
jo
add
popl
sbb
ljmp
push
adc
and
cmp
outsb
xor
add
lea
add
iret
xor
clc
leave
mov
pop
push
js
outsl
mov
lock
iret
clc
shld
sbb
mov
push
push
cmp
sti
jg
loop
outsb
add
push
inc
jne
ror
xchg
adc
ret
insb
inc
addl
loopne
push
or
shlb
test
movb
sbb
push
std
cld
jl
imul
sbb
pop
pop
fisubl
add
js
adc
mov
pop
xchg
add
add
push
adc
dec
sbb
or
jg
push
sub
xor
js
cmp
outsl
dec
shlb
push
xor
jo
enter
ret
fistpll
pop
jae
jmp
push
add
sti
incl
mov
test
add
ror
or
and
das
xor
mov
outsl
xor
xorb
cwtl
movl
jbe
inc
fs
or
or
lods
jmp
dec
add
sti
mov
clc
or
dec
push
pusha
dec
shll
mov
mov
adc
jo
mov
xor
dec
and
push
mov
sbb
xor
repz
push
in
pop
mov
test
fbld
sar
std
clc
push
nop
xchg
and
mov
ss
scas
mov
adc
stc
call
push
add
jno
shrl
cld
or
mov
pushf
xchg
push
mov
and
push
mov
hlt
pop
inc
and
clc
adc
inc
add
imul
sub
adc
push
call
add
call
or
shll
adcl
mov
cmp
jle
nop
inc
push
xchg
inc
repz
loope
fimull
sub
nop
mov
xor
mov
adc
std
adc
adc
push
call
push
cld
xor
xor
lock
sub
into
or
ss
push
test
hlt
insb
or
adc
int3
or
sbb
sbb
lods
xchg
popa
xchg
cmp
inc
mov
mov
push
add
pop
hlt
into
outsb
nop
je
xchg
cwtl
adc
pop
cld
and
cmp
dec
dec
mov
push
cmc
call
add
std
fsubrs
mov
lock
call
lock
dec
mov
mov
mov
inc
inc
xor
add
out
adcl
lea
add
add
push
pop
mov
test
adc
dec
hlt
mov
pop
dec
gs
inc
loopne
xchg
xor
jmp
idiv
test
iret
adc
add
inc
xchg
inc
mov
je
adc
call
cld
outsl
fistpl
xor
dec
jae
push
jecxz
cmp
cmp
mov
negb
ret
dec
sub
inc
mov
sbbl
dec
adc
outsb
xor
stc
push
cld
push
cmp
inc
out
xor
mov
or
lcall
call
je
incl
pop
jbe
push
xor
add
jbe
xor
push
into
mov
dec
jne
sub
call
add
into
call
shlb
mov
es
pop
mov
cmc
inc
sbb
int3
adc
ds
fmuls
inc
ja
mov
inc
jge
add
outsb
notl
pop
sub
lock
mov
movaps
add
mov
pop
call
sbb
sub
insl
mov
add
das
jle
mov
std
call
int3
dec
test
dec
adc
inc
lea
stos
loope
fucom
decl
in
add
mov
add
loop
lea
je
shlb
mov
add
ja
or
xorl
inc
jnp
int3
adc
add
into
mov
xor
inc
push
fs
or
lock
jl
mov
fisubl
push
mov
dec
add
icebp
loopne
orb
incl
mov
sbb
mov
clc
mov
mov
scas
mov
xor
jmp
je
or
loopne
mov
aas
adc
clc
dec
call
xchg
sar
fiadds
inc
lds
jecxz
pop
imul
popl
inc
test
or
lcall
jb
push
jge
lret
ret
cwtl
fsubrp
fsubrs
or
ds
inc
sbb
xor
add
push
stc
loopne
inc
push
mov
shl
add
sbb
mov
mov
sub
inc
jmp
pop
and
hlt
sahf
adcb
add
aaa
leave
popa
push
add
ds
add
lock
sub
and
imul
test
movsl
mov
fidivs
mov
cld
outsl
mov
push
jge
pusha
les
inc
xor
sbb
mov
cld
push
or
rclb
pop
jl
sub
popf
int3
fadds
xor
add
mov
lods
pusha
dec
mov
xor
iret
sbb
or
xchg
out
shl
mov
nop
nop
push
icebp
inc
push
sub
mov
sub
pusha
cmp
fs
ljmp
or
in
inc
xchg
mov
sub
call
add
repz
add
insb
imul
test
insb
mov
mov
xor
dec
xor
lea
call
jmp
scas
or
and
add
add
wrmsr
xchg
popf
pop
add
iret
mov
and
inc
imul
push
test
push
fidivs
add
lcall
outsl
in
jae
pop
scas
fnsave
cmp
rcll
xlat
xor
adc
push
inc
push
xchg
je
adcl
clc
loope
xor
mov
inc
rorl
jmp
test
xchg
jle
decb
pop
xor
mov
xchg
mov
into
add
fdivp
aad
mov
mov
cld
shll
push
adc
xchg
mov
pop
hlt
inc
jmp
rcrb
fcmovb
negb
int3
movsb
loopne
call
cmpsb
test
push
cmp
inc
cmp
mov
icebp
fbstp
fdivrs
push
addb
mov
sahf
clc
call
nop
pop
mov
sbb
or
in
sbb
or
add
je
aad
inc
testb
inc
push
loopne
push
xor
aam
sub
inc
inc
push
ret
sub
push
mov
mov
loopne
ret
hlt
adcb
add
pop
push
mov
inc
inc
out
mov
sub
ds
push
subl
jge
aam
adc
sti
pop
mov
sbb
clc
nop
mov
movsb
cmp
aam
push
sarb
incb
cmp
ret
pusha
or
in
push
rcll
pop
sbb
sti
add
cltd
mov
jmp
rorb
rolb
xor
mov
add
loopne
cmp
and
mov
outsb
sbb
inc
xchg
xchg
mov
jmp
sbb
divb
sbb
mov
mov
inc
xchg
clc
std
popf
rclb
push
in
push
clc
inc
andl
loop
xchg
push
insb
cmpsb
jne
int3
pop
inc
std
lock
call
cmpb
cmp
add
fsubr
movb
push
das
jbe
mov
cmp
sub
sub
lahf
push
sub
cmp
add
shl
loop
cmp
or
movsb
outsl
add
fs
push
inc
push
rorl
loope
sub
xor
rcrl
fmulp
xor
aaa
stos
hlt
jmp
jl
loopne
mov
mov
loop
and
pop
pop
sbb
add
loope
aaa
ja
mov
test
pop
cmp
mov
mov
push
mov
loope
jno
rorb
xchg
sbb
and
or
sbb
dec
jl
test
cmpsb
js
in
mov
mov
in
push
mov
xchg
and
mov
popa
stc
xor
sub
mov
and
das
mov
sub
lods
lahf
pusha
push
ds
mov
mov
adc
mov
lock
jg
inc
push
addl
mov
sub
fwait
cmp
mov
je
mov
mov
mov
mov
imul
int3
js
push
or
pop
nopl
je
lods
mov
loop
clc
jge
mov
add
pusha
hlt
adc
or
pop
test
imull
icebp
or
sbb
test
pop
cmc
test
cwtl
add
or
or
push
adc
pop
leave
movsb
addb
sub
decl
fs
cmp
call
out
push
inc
pushl
mov
stos
inc
imul
cmp
pop
stos
mov
lret
ja
clc
jmp
add
enter
mov
jge
mov
xor
repnz
pusha
clc
or
adc
scas
jo
rclb
movb
push
and
jmp
cld
idiv
je
loopne
out
push
mov
imul
mov
jne
lcall
test
js
add
jl
scas
out
loop
lods
sbb
mov
sbb
add
testl
lock
cwtl
add
pop
mov
hlt
and
adc
es
adc
js
test
mov
xor
inc
push
adc
inc
es
mov
add
cmpsb
inc
dec
ret
cmpsb
loop
test
xor
jo
mov
outsl
mov
ss
out
push
pop
scas
int3
xor
pop
push
pxor
add
rclb
outsl
shrb
jmp
mov
push
mov
hlt
push
xchg
mov
pop
cmp
and
dec
xor
mov
movl
add
ljmp
pop
mov
repnz
adc
dec
f2xm1
ror
shl
outsl
mov
out
push
adc
js
inc
inc
jg
addl
xchg
mov
sbb
out
bound
pop
mov
push
cld
mov
mov
je
rolb
pusha
insb
sub
in
jo
mov
mov
int
mov
push
fbld
add
push
ret
add
icebp
inc
push
dec
mov
cs
repz
add
adc
add
sub
mov
fs
sbb
add
adc
pop
mov
mov
loopne
popf
clc
adc
xor
ja
add
jo
sub
sub
cmp
push
adc
dec
cmp
pop
inc
call
pop
mov
outsb
and
sysenter
mov
jg
loopne
mov
mov
and
lcall
incb
dec
cli
adc
lahf
or
nop
rclb
jl
in
fmuls
add
pushf
stos
lret
inc
mov
mov
jmp
and
in
add
enter
cmovl
mov
adc
outsb
adc
mov
push
roll
rcll
and
adc
jno
std
xor
xor
inc
or
ret
movsb
push
push
adc
imul
mov
cwtl
lea
cli
rolb
ljmp
sti
jp
decl
inc
addl
je
xorb
aam
mov
lea
jns
cli
das
add
add
cld
repnz
mov
jl
sbb
aaa
inc
mov
or
stc
xchg
jbe
dec
or
fimuls
mov
xor
ficoms
punpcklbw
push
fadds
mov
adc
lods
fwait
mov
ljmp
dec
popa
shll
add
pusha
jnp
imul
mov
push
push
mov
push
popl
pop
mov
cli
jmp
add
xor
int3
dec
sbb
pop
pop
cld
addb
sbb
lcall
ds
jle
mov
pushf
lea
in
add
ja
adc
int3
xor
inc
pop
repnz
xchg
pop
lock
sub
inc
xchg
shrl
fs
or
or
push
xor
push
cmpsb
jnp
aad
sbb
inc
lea
adc
pop
add
icebp
pop
push
push
jo
inc
cld
adc
call
add
push
sbb
cmpsl
xchg
add
lock
mov
mov
push
mov
mov
adc
mov
add
cmp
mov
orl
cs
add
push
push
jno
add
or
add
inc
mov
adc
xorl
cmc
adc
xor
mov
call
push
mov
jp
arpl
add
sbb
push
js
outsl
jecxz
clc
sub
movsb
xchg
shlb
xor
mov
inc
mov
insl
xchg
test
push
push
push
mov
outsb
ret
jge
inc
push
rolb
xchg
std
or
jl
jbe
test
push
pop
insb
sbb
adcl
lea
test
stc
or
call
roll
mov
ljmp
js
cmp
js
add
cmc
hlt
xor
and
cmp
xor
movsb
xorb
lea
adc
lock
mov
push
cmp
add
rclb
push
inc
adc
dec
mov
decb
dec
push
mov
sub
cmp
dec
sbb
xor
jecxz
cwtl
in
mov
cli
add
sbb
xor
popf
mov
outsb
mov
or
std
addr16
aaa
outsl
lcall
dec
fwait
pop
inc
push
push
and
movsb
sbb
call
inc
test
cmp
test
pop
mov
mov
adc
adc
push
insb
imul
adcl
jge
cmpsb
push
push
pushl
push
xlat
and
lret
add
cld
pop
push
mov
inc
adc
popf
sbb
cld
and
lea
jne
dec
shlb
xchg
lea
xor
inc
push
cmpsb
xorl
add
dec
dec
mov
fcompl
or
inc
mov
test
jmp
mov
and
es
xchg
ficoml
cwtl
adc
je
aam
inc
cmp
push
xlat
jecxz
cld
cld
or
mov
leave
test
push
add
pop
ret
dec
dec
push
mov
es
fbld
push
sub
je
loopne
out
pop
pushf
incl
adc
cli
mov
adc
or
incb
fisubl
loopne
cmp
pop
fidivrl
mov
test
es
adc
rol
insl
sub
fisubrl
lods
call
rcrl
push
cld
orl
je
cmp
mov
pop
pusha
add
and
das
xchg
cs
outsl
loop
lods
mov
lret
and
xor
cmp
and
and
daa
add
and
add
test
fdiv
or
push
loope
cmp
dec
je
cwtl
dec
in
movsb
push
lock
mov
or
imul
incl
je
push
cs
add
rcrb
push
xchg
rcrb
fs
adc
in
xchg
sbb
add
lea
jb
cmp
fcom
or
les
fst
ret
sub
gs
adc
inc
cmp
adc
add
adc
mov
inc
xor
mov
sbb
ja
add
int3
mov
movl
jo
jmp
adc
push
fildl
pusha
loope
adc
lret
fcmovnb
rorb
sti
clc
pop
cmpsl
jp
push
push
cmp
clc
mov
jmp
loop
push
ja
clc
jae
mov
adc
ret
add
shrb
pop
xorb
test
arpl
rcrl
outsb
and
mov
icebp
cmp
xor
sbb
or
dec
add
mov
ja
xchg
mov
imul
push
out
aam
std
addb
adcb
inc
pop
cmp
faddp
inc
dec
inc
jge
jl
pushl
pushf
push
or
or
insl
and
mov
fcom
jmp
ret
je
mov
cltd
fisubrs
adc
pop
sbb
test
sub
inc
cmp
mov
loope
loope
adc
lret
and
or
push
or
cwtl
or
aaa
sub
faddp
inc
jb
inc
ljmp
ljmp
adc
cmpsb
cmpxchg
loop
test
iret
insb
inc
pop
orl
sarb
clc
pop
movsb
inc
push
xchg
adc
mov
mov
push
add
rcrb
fs
adc
jmp
push
into
or
idiv
pop
mov
insl
les
cmp
shll
mov
call
loop
add
jmp
test
mov
mov
movsb
pop
add
ja
fs
setns
and
cmpsb
inc
inc
add
outsb
jle
incl
gs
insb
xor
add
pop
pop
mov
push
push
bound
xchg
xchg
add
lods
es
mov
push
xor
imul
pop
mov
jle,pt
ds
or
adc
mov
imul
mov
push
xor
scas
jp
in
jp
cmpsl
cmp
call
mov
ss
loopne
xchg
adcb
cli
pushl
push
mov
mov
push
movsb
and
and
int3
pop
xchg
xor
test
or
cli
sarb
inc
std
mov
pop
or
pop
push
lea
xchg
ja
es
mov
mov
in
jmp
push
ret
or
rdmsr
inc
out
mov
arpl
leave
shrb
fiaddl
cli
cmp
fs
movsl
adc
push
sub
add
orl
xor
mov
pop
mov
xor
mov
or
add
ljmp
faddl
or
popf
ret
add
shrb
outsb
ds
and
sbb
add
inc
add
in
adc
mov
cmp
dec
pop
mov
or
dec
jne
pop
or
xchg
mov
nop
jp
xchg
mov
out
mov
cli
mov
test
xchg
inc
cmp
sbb
mov
addb
js
mov
pop
scas
jnp
orl
mov
lsl
mov
sub
xor
subb
jg
jle
adc
decb
jne
dec
ja
sub
push
arpl
cmpb
hlt
push
push
add
push
mov
rorb
aam
shr
aas
loopne
xchg
lcall
inc
ret
rorb
mov
movsb
jge
jg
pop
shr
jnp
mov
movsl
in
or
mov
sbb
ret
dec
inc
or
jmp
push
cmpsb
mov
mov
pop
xor
pop
notb
cli
jp
xor
add
div
and
sbb
jnp
cltd
jno
int3
xchg
fdivr
outsl
scas
rol
mov
inc
pop
sbb
inc
rcl
sub
testb
pop
adc
test
cmp
ret
popa
adc
popf
add
xor
rorb
push
ret
test
or
mov
mov
lods
adc
xor
push
inc
js
rcll
test
sti
mov
push
push
fld
add
mov
scas
mov
sub
or
and
mov
push
jge
clc
movsl
mov
jl
imul
pop
mov
gs
ret
sbb
push
pushf
or
adc
fcoml
xor
rep
je
cld
pop
cld
xor
mov
fisttpl
das
int
inc
inc
rorl
push
es
jne
addb
add
roll
mov
sub
popf
push
mov
data16
cmp
push
ret
je
sub
pusha
add
rclb
mov
aaa
add
dec
sbb
sbb
and
cmp
nop
inc
fists
clc
xor
cmp
rcrb
les
mov
or
out
or
dec
call
jmp
ss
andb
push
inc
mov
mov
out
push
mov
pop
ret
test
push
adc
xor
je
add
jo
jb
xor
fdivrl
sbb
mov
mov
decl
cmp
jp
pusha
push
and
jl
js
rolb
jae
ss
or
or
sbb
mov
adc
add
ljmp
mulb
mov
or
in
outsl
test
outsb
inc
mov
in
ja
mov
rorb
lcall
push
call
sbb
pop
xchg
push
loop
push
enter
stc
xor
or
and
add
push
or
add
add
out
clc
inc
xor
jg
xor
inc
cmpl
sbb
rorl
sti
push
xor
ret
shlb
icebp
lret
add
mov
fisttps
xor
add
xchg
mulb
js
hlt
mov
adc
pop
outsb
gs
push
pop
pop
adc
xor
mov
lock
or
xor
add
jne
lcall
negl
push
mov
push
int3
adc
addb
testl
mov
pushl
call
out
xchg
jmp
mov
stos
cmp
push
addl
sbb
xor
sub
or
mov
mov
stos
movsb
mov
xor
in
clc
and
pusha
ret
in
inc
mov
shlb
inc
push
fsubl
ljmp
push
scas
cwtl
out
adc
mov
cli
cmpl
addb
or
sbb
xor
test
idiv
pop
leave
jb
push
orl
int
dec
push
mov
in
mov
mov
inc
enter
and
inc
and
cld
jo
bound
addl
pop
cwtl
test
xchg
adc
mov
jp
adc
fsubl
inc
cmc
ljmp
loop
sub
scas
mov
inc
lock
std
incl
sar
je
jnp
push
add
mov
adc
dec
test
popa
adc
push
pop
jl
in
mov
je
sti
je
adc
inc
leave
and
les
push
push
imul
ret
add
mov
fcmovb
les
xchg
outsl
pop
in
adc
mov
dec
xchg
mov
arpl
mov
xchg
stos
jmp
loope
xor
cmp
push
jne
inc
push
xor
fwait
rcl
jmp
sbbb
xor
stos
mov
rorl
into
xor
test
and
clc
inc
fisttpl
sbb
adc
xor
or
inc
repz
pop
push
xchg
or
fadds
sbb
outsb
and
add
pop
sbb
stos
stc
or
adc
or
add
and
nop
xor
hlt
shrb
cmp
cli
inc
inc
mov
mov
int3
ret
xor
inc
cs
ljmp
test
ja
mov
or
les
and
jmp
gs
mov
xchg
lea
cmp
movsb
inc
inc
push
mov
daa
js
movsb
xor
sub
inc
hlt
hlt
push
push
mov
pop
mov
pop
jne
test
stos
in
dec
cmp
inc
ret
stos
jg
int3
jb
sbb
mov
rcrb
dec
mov
cld
stc
fcomi
cmp
mov
pusha
imul
jg
call
add
dec
adc
scas
and
mov
jmp
mov
ds
adc
outsb
sub
add
inc
inc
adc
inc
inc
subb
rcr
rclb
pop
push
and
or
mov
std
out
push
mov
aam
incl
cli
shrb
out
mov
lret
cmc
mov
sbb
inc
pop
adc
les
sbb
les
xor
test
js
and
xchg
imul
mov
cmp
bound
pushf
aam
jb
and
std
mov
cmp
out
int3
rclb
add
call
adc
aas
cld
mov
call
mov
les
mov
addb
fsubs
add
mov
mov
mov
xchg
mov
cmpsl
adcl
iret
sub
cmp
insl
adc
clc
dec
shrb
push
xor
fcomp
jne
adc
sarb
js
jg
test
mov
jge
or
push
push
jo
mov
cmp
stos
pushl
cmp
push
pop
mov
add
lcall
int
imul
sub
xor
mov
inc
les
push
insb
inc
inc
insl
mov
aas
mov
jg
push
mov
mov
inc
mov
xchg
inc
jmp
add
test
fdiv
lods
fsubr
add
lcall
jmp
ja
test
adc
dec
divb
cld
push
mov
mov
add
fsubs
push
out
jecxz
mov
fsin
dec
fs
push
sbb
add
movsb
sbbl
jge
je
subl
dec
hlt
push
leave
push
push
jle
jns
add
push
jle
mov
inc
and
enterw
add
add
mov
cmp
loop
pop
stc
sarb
cmp
rclb
inc
mov
cld
xor
orb
outsl
fsubl
jl
imul
sbb
test
add
ss
cmp
insb
cmp
lea
divb
mov
mov
push
fwait
and
add
inc
xor
add
sbb
call
pop
jbe
inc
mov
stos
add
mov
lcall
inc
or
cmp
enter
test
xchg
push
mov
fwait
sbb
fs
mov
jmp
cli
dec
mov
bound
lock
or
and
add
stos
shlb
adc
sbb
hlt
mov
dec
push
enter
dec
push
gs
ljmp
and
jp
and
jo
xor
mov
cwtl
sub
add
add
pusha
shlb
les
cmp
jle
jmp
je
scas
out
push
lock
mov
push
sub
push
lds
lods
push
push
repnz
adc
xchg
or
cmpsb
int3
adc
ds
movb
inc
adc
mov
push
int
dec
std
or
and
mov
out
rolb
test
push
leave
mov
adc
mov
xchg
enter
in
test
shl
sub
push
test
lcall
dec
pop
outsb
mov
fsubrl
orl
in
push
sub
mov
inc
pop
mov
add
xor
jge
mov
mov
xchg
inc
subl
jle
aaa
jl
mov
xor
and
adc
and
scas
dec
gs
or
mov
adc
xchg
inc
xor
mov
cltd
mov
punpckldq
pop
add
mov
push
decb
mov
mov
add
ret
sub
xor
repz
cmp
cmpsb
sahf
roll
mov
insl
cmp
addr16
loope
js
imul
mov
or
push
add
xchg
or
pop
dec
adc
insb
pop
jge
cld
or
imul
out
neg
adc
jecxz
sub
shlb
add
outsb
cmp
aam
rorb
cwtl
icebp
test
cmp
int3
decl
add
adc
add
mov
dec
incb
and
fistl
mov
jne
dec
sbb
fiaddl
push
filds
sbb
jp,pn
ficoml
push
in
add
ret
mov
sbb
push
mov
out
fdivl
arpl
dec
sub
jnp
mov
data16
ret
fdivs
mov
push
and
cs
in
dec
mov
inc
mov
xchg
mov
fsubrs
int3
pop
rcr
mov
pop
xchg
mov
sbb
lcall
xor
pop
inc
mov
ja
decl
mov
pop
clc
insb
stc
call
lea
inc
je
mov
fldcw
mov
cmp
push
or
add
addl
and
les
inc
fcomps
inc
testl
rorb
adc
je
push
pop
movsl
test
push
arpl
fwait
mov
xor
jge
push
hlt
pcmpeqb
cmp
pop
or
movsb
mov
xchg
insb
addb
nop
jne
test
adc
outsb
aad
cmp
push
insb
call
cmp
ja
neg
or
test
jg
cmc
jb
pushl
lahf
arpl
cmp
inc
jae
push
icebp
sub
out
push
inc
jne
dec
loopne
pop
gs
repnz
data16
aaa
add
jo
in
int3
mov
adc
fsubr
and
mov
sbb
sub
fwait
or
mov
jnp
jae
push
dec
loop
mov
insb
call
divl
mov
and
add
mov
sub
movsb
jno
xchg
sub
nop
pushl
adcl
cld
shr
pop
sahf
add
dec
ss
flds
mov
rol
pop
and
pop
inc
ljmp
subl
ret
cmp
pop
imul
shl
and
ds
xor
cmc
data16
mov
cmp
cli
dec
adc
in
cmp
xor
push
add
sbb
out
xor
dec
incl
test
add
test
inc
pop
jmp
or
pop
push
mulps
sub
sbbb
pop
jne
sti
cmp
js
dec
cmp
adc
xchg
mov
dec
je
addl
sahf
addb
out
sti
in
cmp
fs
int3
test
cmp
call
inc
push
incl
rclb
test
shlb
pop
out
rolb
add
xor
push
xorb
xchg
nop
or
daa
movsb
xor
push
or
cmp
jne
mov
dec
jmp
sbb
pushl
add
xchg
test
insl
or
gs
loop
push
mov
je
adc
imul
lock
push
loop
outsb
dec
jge
in
in
cmpsb
inc
inc
pop
lods
xor
adc
outsl
shl
in
jb
adc
loopne
mov
lret
fcompl
jb
dec
xchg
xor
jne
inc
clc
cld
mov
les
mov
cs
pop
mov
mov
es
sbb
cmp
call
ds
mov
ret
test
mov
fwait
pop
test
sti
push
add
cmp
pop
adc
lret
and
cmp
lea
mov
adc
ja
and
jbe
incb
out
bound
mov
jbe
mov
mov
adcb
mov
adc
mov
adc
sub
das
ds
inc
sti
sbb
xchg
push
out
and
xor
adc
adc
lret
das
and
insb
int3
sbb
insl
pop
mov
jb
add
bound
mov
dec
and
sbb
cmc
filds
lock
cmp
jp,pn
fsts
mov
iret
and
ror
decb
jge
inc
movb
xsha256
cmpsb
push
rolb
mov
xchg
xchg
or
push
add
rol
vmread
pop
mov
sbb
mov
psubsb
imul
mov
mov
lock
ss
pushf
sbb
add
push
or
and
clc
xchg
rcl
aaa
mov
sbb
test
or
sbb
lods
loop
mov
mov
movsl
or
nop
int3
push
add
out
int3
jmp
cmc
sbb
lcall
add
test
std
push
dec
pop
icebp
push
pop
into
push
adc
mov
dec
mov
push
movsb
adc
xchg
or
ss
fisubrs
push
pop
push
cld
adc
and
in
ss
call
add
roll
mov
test
mov
push
lea
add
outsb
ljmp
add
fdivr
fidivrl
pop
push
cs
pop
inc
jne
mov
cmc
sub
jmp
mov
inc
pop
test
push
test
cmp
ss
push
sub
jne
push
add
test
inc
mov
adc
xchg
adc
mov
dec
mov
add
cmpsb
test
in
sbb
ficompl
cld
push
cld
repnz
dec
push
les
add
inc
mov
sbb
sub
pop
cmp
int3
and
jecxz
pusha
sbb
dec
jb
cmp
jle
fwait
mov
adc
cmpsl
sub
fdivr
inc
add
add
in
out
sarb
sub
outsb
or
lret
jno
dec
cwtl
push
push
mov
adcb
cmpsb
jle
call
in
add
push
pop
aad
icebp
or
sub
adc
xchg
lds
aaa
test
push
ret
ljmp
addb
mov
ljmp
push
sbb
add
aaa
test
mov
or
mov
mov
and
outsb
add
orl
sbbl
adc
jp
add
call
subb
pushf
add
sahf
addr16
and
icebp
data16
jle
icebp
dec
cmp
inc
dec
gs
sub
jb
jne
js
mov
adc
cmc
cmp
decl
fs
fisubs
cli
add
int3
cmp
dec
mov
cmpsb
push
and
test
test
fstps
xor
int
add
add
or
push
fiaddl
int
jle
dec
jb
add
pop
invd
or
lods
mov
jnp
pushf
dec
push
cld
fsubs
popa
lods
add
pop
jmp
jmp
mov
sbb
cmpsb
jg
mov
add
icebp
jb
add
dec
mov
jno
mov
in
push
aaa
inc
mov
scas
mov
lcall
push
mov
add
pop
rolb
sub
dec
scas
rcl
add
mov
add
mov
loop
add
adc
test
movsb
adc
call
lock
loop
mov
push
pop
add
push
jb
das
push
fprem
es
divb
sbb
cmc
fdiv
or
test
out
icebp
sti
mov
clc
push
dec
jbe
mov
loopne
add
sub
imul
mov
loop
mov
mov
push
sbb
mov
scas
inc
add
inc
and
fimuls
pusha
mov
mov
jmp
cmpsb
sub
adc
lcall
test
xchg
test
test
xor
add
or
clc
hlt
xchg
mov
mov
movsb
in
sbb
mov
jp
cmp
or
push
inc
out
mov
cmp
cmp
add
jns
rcrb
je
fdivrl
xchg
adc
dec
addr16
add
sub
sub
test
mov
or
shlb
pop
xor
cmp
fdivp
out
dec
je
jo
adc
neg
popa
add
adc
ret
pop
mov
outsb
movsb
dec
adcb
jge
sub
jle
lret
in
test
pop
int3
gs
mov
imulb
cld
jmp
jne
push
lea
pop
add
es
xchg
inc
adc
mov
sub
jl
addl
ljmp
mov
push
imul
xchg
cmp
test
sarb
adcl
jmp
dec
inc
push
push
dec
xor
ljmp
sub
lods
psubb
and
fwait
movsb
push
repnz
cli
js
push
add
fimuls
inc
inc
pop
dec
xor
pop
in
je
adc
fcom
into
and
shrb
ret
ds
xor
nop
or
movb
mov
test
sub
inc
inc
pcmpeqb
or
fimull
cld
gs
xor
sub
lods
roll
mov
inc
mov
add
add
push
sbb
repz
xor
xor
and
xchg
mov
test
in
cs
cmp
lods
pop
mov
clc
test
pop
inc
push
add
test
sbb
test
push
jae
js
add
cmp
mov
sub
arpl
jle
mov
imul
mov
ja
cmp
jno
or
or
jp
ds
mov
add
js
jae
lea
std
ja
loopne
shlb
aas
fldenv
or
add
and
add
in
je
and
in
and
lcall
fisttpl
orl
xchg
pop
mov
cmp
dec
aad
lods
adc
adc
cli
data16
cli
test
rolb
xchg
popa
sub
je
pop
in
adcl
dec
int
and
inc
pop
ljmp
in
outsl
inc
daa
mov
mov
lods
ljmp
mov
add
push
lahf
sbb
in
push
xor
and
pop
ja
pop
lcall
mov
pop
xlat
jg
repnz
xchg
cmp
pop
int3
add
nop
mov
shl
flds
sub
fbstp
enter
xor
cmpsb
xchg
in
ljmp
hlt
neg
andl
inc
mov
mov
cs
add
or
leave
pushf
or
adc
lds
and
add
pop
dec
jne
jbe
xor
insb
push
dec
mov
les
rclb
sar
hlt
int
push
mov
adc
jbe
orl
cld
xlat
xchg
cmpl
mov
mov
lock
mov
mov
subl
shlb
push
dec
stos
fmuls
add
inc
enter
sbb
push
jle
movsb
outsb
sub
push
and
push
or
mov
push
sbb
sbbb
fwait
lds
dec
ret
cmp
dec
push
je
icebp
scas
sbbb
gs
jbe
cmp
mov
mov
ljmp
push
mov
mov
inc
add
mov
sahf
call
add
enter
call
jl
test
adc
sbb
cmc
jb
add
test
add
sti
out
pop
push
aaa
jb
push
or
mov
cld
pop
movl
popa
mov
xor
dec
mov
rolb
movsb
andb
add
sub
cmp
incl
bound
and
inc
inc
mov
dec
mov
add
call
mov
aas
out
inc
mov
add
les
out
aam
das
stos
int3
pop
loop
popa
mov
pushf
mov
outsl
int3
lcall
cmp
aam
or
jbe
sbb
xor
ljmp
in
dec
push
sbb
sbb
ds
mov
pop
or
into
test
mov
adc
add
mov
or
or
push
sub
sbb
add
ret
cwtl
adc
mov
std
ret
enter
mov
xor
mov
and
shlb
enter
adc
pop
mov
movsb
fwait
mov
sbb
shlb
stc
mov
test
fs
mov
or
call
loopne
fcmovbe
mov
shrb
ret
or
add
andl
fsubrs
adc
inc
cmp
add
inc
jl
cmp
fadds
xchg
negb
mov
insb
mov
aad
dec
adc
xor
sub
push
adc
sbb
js
das
and
sbb
push
xor
inc
xchg
in
clc
mov
clc
add
mov
adc
lods
jg
cld
sub
jl
outsl
mov
cmp
cld
mov
adc
stos
cmp
dec
imul
push
push
push
adc
pop
adc
inc
enter
fs
lea
sbb
and
cltd
adc
mov
fs
in
mov
imul
push
test
decl
insb
or
add
mov
outsb
aam
jmp
push
push
add
pop
sub
push
jo
lods
rclb
dec
dec
and
or
push
cmp
shll
movsb
push
cld
cmp
int3
in
xchg
sbb
mov
pushaw
adc
add
gs
inc
shlb
or
dec
push
sub
add
fwait
add
shlb
fbld
push
mov
adc
data16
lock
loopne
mov
jne
arpl
cmpl
pusha
xor
mov
add
and
imul
arpl
cmpb
out
cmpb
jg
mov
test
fisttps
shlb
in
loope
out
mov
xchg
adc
or
icebp
sbb
arpl
pop
icebp
and
neg
sub
not
dec
xor
roll
fs
fs
jns
pop
decb
jo
mov
mov
ds
ret
sete
adc
clc
or
addr16
rcrl
rol
clc
jl
inc
push
orb
mov
jmp
pop
in
clc
insl
in
jle
mov
fwait
lea
out
insb
mov
adc
shll
nop
dec
push
rcrl
ret
mov
pop
neg
mov
in
dec
push
dec
lods
pop
adcl
and
sbb
mov
sub
mov
mov
movsl
mov
cli
decl
sbb
ret
or
xor
dec
mov
aam
add
mov
add
test
jp
faddl
out
clc
nop
cmp
fdivrp
lea
decb
sti
or
popa
add
jbe
cs
sub
daa
adc
loopne
loope
insb
cmp
mov
add
lods
inc
insl
fnstsw
clc
pusha
push
sti
xor
sbb
imul
adc
and
dec
jne
nop
aaa
mov
pop
shlb
test
sahf
jmp
inc
and
lock
pop
sarl
jge
outsb
lret
xor
sub
imul
jl,pn
xchg
inc
mov
or
add
incl
shr
ret
cmp
add
pop
or
xchg
dec
or
dec
push
loopne
int3
push
dec
clc
cmpsb
push
sarb
je
mov
cmp
pop
dec
insb
pusha
lock
push
ret
add
aas
stos
int3
fiaddl
sbb
push
sahf
sub
js
clc
addb
jne
stc
icebp
sbb
mov
adc
dec
sbb
addr16
mov
pop
push
mov
mov
sti
pushw
cmp
ret
pushl
xchg
sar
add
dec
lea
push
jb
insb
mov
outsb
inc
or
scas
js
add
jb
out
clc
dec
jbe
arpl
push
rclb
and
push
gs
mov
fwait
test
xor
add
lods
and
push
out
ljmp
orl
test
mov
inc
pushw
sub
js
push
mov
dec
jo
mov
jo
test
adc
rolb
adc
in
sbb
push
pusha
pop
mov
dec
lods
mov
xor
rolb
mov
decb
xor
pop
test
jbe
repnz
sbb
and
mov
cli
incl
ds
and
in
push
pop
lea
in
pop
mov
pop
sbb
out
pop
inc
adc
pop
push
ljmp
add
add
jmp
xchg
scas
and
push
sbb
call
push
xor
adc
adcb
mov
hlt
fsubrs
jmp
test
arpl
icebp
dec
es
shl
and
dec
add
and
push
js
enter
fnstcw
jb
push
out
test
pop
insb
xchg
call
push
inc
ret
data16
inc
and
push
mov
call
adc
mov
data16
mov
loope
les
push
sbb
ljmp
pop
adc
clc
add
bswap
xchg
jmp
jns
cmp
or
jbe
rolb
xor
jmp
test
adc
fs
cli
loope
add
andb
insb
mov
xchg
mov
and
or
xor
pop
icebp
lcall
jmp
das
and
adc
insb
mov
call
cmpsb
xchg
out
xor
inc
pop
sbb
xor
add
dec
aad
inc
sub
pop
call
xchg
xchg
and
in
imul
fildll
dec
dec
add
inc
add
dec
push
leave
or
push
mov
adc
insb
test
nop
test
xorl
rclb
xor
xchg
mov
movsb
in
ja
sub
pop
pushf
jbe
rol
pushf
fisttpl
dec
nop
cmp
loopne
jno
lock
push
les
mov
cmp
add
pop
or
popf
cmpb
lods
je
repnz
lcall
pop
xchg
nop
fmull
jbe
rclb
dec
in
xor
pop
adc
mov
mov
movsb
jno
fimuls
dec
sub
call
cmp
mov
add
cmp
push
pop
inc
cmova
ja
dec
scas
xchg
add
mov
nop
or
dec
push
in
add
cld
mov
out
and
push
ret
andb
in
xor
lock
movsb
pushf
sbb
aaa
shrl
lret
fsubr
add
nop
popf
hlt
and
test
cmp
arpl
mov
or
cmp
sub
retw
mov
mov
cmp
ds
xor
nop
cmp
or
add
adc
adc
or
sbb
ss
mov
int3
icebp
ret
mov
lea
mov
or
and
adc
mov
adc
cmp
or
enter
insb
and
jle
mov
mov
test
in
incb
adc
xchg
pushf
xchg
dec
dec
mov
fs
jge
jl
call
push
jp
adc
xchg
push
pop
out
inc
mov
punpckhbw
mov
mov
cmpsl
mov
jl
xchg
sbb
ljmp
stos
sub
aam
fnstenv
or
les
jmp
ret
add
mov
add
adc
add
adc
xchg
fs
fisttpll
inc
stos
pushw
mov
lcall
ficompl
push
lock
adcl
sbb
insb
sti
iret
pop
hlt
cmp
mov
xor
nop
add
lock
stc
gs
push
or
add
insl
lods
lock
testb
std
loope
push
mov
inc
and
data16
ret
mov
jne
and
mov
add
ljmp
lea
jl
adc
sub
jo
xchg
pop
es
xchg
jle
adc
sbb
aad
or
mov
into
inc
sub
stos
loopne
inc
add
and
jg
leave
push
push
inc
push
jne
pop
lcall
inc
cli
call
data16
lea
xchg
mov
fimuls
add
xor
test
sub
mov
rorb
add
lret
adcb
mov
adc
fwait
inc
sbbb
pusha
xor
mov
es
cmp
aam
ret
mov
push
or
add
mov
xchg
lods
fisubs
test
test
mov
cmp
jp
sub
fsubrs
rorb
and
push
ret
nop
inc
xor
add
add
stos
aas
inc
xor
ret
xlat
push
pop
mov
push
or
mov
inc
cmp
or
insl
fcoms
and
mov
adc
sub
mov
add
enter
fisttps
add
lock
or
push
inc
lock
daa
jl
push
jmp
lcall
jb
lret
lcall
mov
push
cwtl
int3
dec
ljmp
js
mov
jge
pusha
mov
jmp
mov
test
cli
push
outsb
adc
adc
add
sub
mov
push
sub
std
adc
and
dec
xchg
sbbb
mov
add
fwait
pop
cmp
dec
push
mov
mov
sbb
out
inc
xchg
add
mov
decl
mov
sbb
test
inc
imul
mov
sti
push
or
inc
mov
cli
cmp
insl
insl
mov
inc
inc
inc
mov
outsl
fistl
je
adc
or
add
int3
or
cs
sbb
adc
or
jbe
adc
mov
add
sarb
push
rolb
xor
ret
pusha
sti
ret
bound
jbe
rolb
push
test
xchg
cmp
push
ljmp
mov
fmull
adc
lcall
decb
pop
push
scas
inc
outsb
insb
dec
ds
adc
sbb
clc
aam
insl
jle
dec
push
mov
add
mov
inc
push
je
push
callw
cmp
jbe
dec
fst
sbb
sbb
mov
into
pop
je
popf
or
repnz
icebp
pop
cmp
inc
mov
into
push
or
aad
and
push
mov
xor
push
rorb
sbb
cld
jne
and
pmaxub
test
test
test
add
add
jb
sub
ljmp
into
shrb
add
cli
inc
pushl
mov
jl
jge
test
idivb
into
dec
scas
sub
inc
pop
aam
fsubl
out
sub
xlat
mov
pop
mov
pop
jo
shrb
push
adc
mov
ss
sarb
sub
mov
cmc
or
ret
lret
and
rclb
hlt
scas
dec
mov
add
sahf
inc
pop
pushl
and
inc
inc
clc
or
cmpsb
jp
adc
sub
jmp
mov
outsl
jg
sbb
addr16
jbe
sub
addb
pop
xor
rorb
jb
push
add
inc
pusha
pop
shlb
push
lods
xor
sbb
pop
mov
incl
pushf
add
dec
inc
jno
sub
and
inc
dec
mov
std
les
lcall
add
add
outsl
mov
in
xor
dec
fstps
addb
aaa
mov
test
pop
inc
cmp
sbb
aaa
ret
mov
adc
js
jp
adc
jb
push
lock
jle
fsubs
loope
lea
data16
mov
or
lock
clc
adc
jle
or
pusha
push
call
and
sti
dec
xor
sub
call
insb
clc
adc
add
loopne
pusha
xor
scas
shl
cmc
popa
mov
int
xchg
adcl
adc
add
dec
xchg
lea
cmp
stos
and
icebp
jl
mov
dec
loope
pop
in
cs
arpl
aam
adc
sbb
xor
xchg
mov
adc
adc
add
dec
lsl
and
mov
jne
test
mov
dec
test
gs
jle
int
sar
pop
xor
stc
fwait
es
int
test
jmp
sbb
push
and
arpl
mov
les
mov
jb
jp
add
ljmpw
js
or
lea
aaa
push
sub
mov
or
push
pop
mov
aad
test
push
pop
adc
and
fildl
mov
call
mov
adc
cmpsb
dec
mov
into
and
push
insl
mov
xor
jle
xor
pop
fisubrl
mov
rol
xchg
mov
inc
add
ljmp
stos
mov
loopne
mov
rcrb
dec
call
adcb
lock
jge
pushf
add
in
pop
mov
shlb
inc
stc
inc
sub
stos
pop
push
pop
andb
or
enter
cli
loop
adc
or
xchg
or
inc
mov
xor
jp
cs
wbinvd
pop
xor
fsubrs
jb
add
push
sub
clc
incb
fistps
into
push
pop
pop
mov
sbb
or
fbld
insb
cmp
mov
test
sbb
movsb
arpl
scas
pop
andb
adc
xchg
loopne
and
call
ljmp
outsl
add
jne
push
mov
mov
ret
test
mov
testb
int3
adc
cmp
pushf
and
mov
or
mov
dec
jae
sti
repnz
adc
sbb
insl
sub
xchg
mov
mov
rorb
cltd
mov
loop
xchg
rol
inc
add
dec
cwtl
jne
xor
test
int3
mov
push
push
xchg
sarb
lret
mov
stos
rclb
pop
mov
mov
ret
pop
mov
add
mov
sbb
push
cmp
dec
adc
inc
dec
fmuls
rcl
pop
in
push
mov
aad
jle
inc
nop
sub
mov
mov
repnz
push
cmp
cmp
add
es
mov
dec
pop
sub
mov
cmp
dec
fwait
dec
lret
bound
mov
in
sbb
arpl
gs
xchg
addb
std
lret
mov
aam
add
adc
inc
add
fldt
test
mov
add
sub
xor
rcrb
movsl
xchg
jo
or
mov
shrl
sbb
je
orl
clc
pop
push
push
xor
lock
mov
lcall
jo
mov
push
mov
xor
das
in
fwait
and
sub
aam
incl
jo
lcall
loop
adc
mov
fisttpl
or
jl
data16
shlb
pop
or
push
sub
pop
clc
sar
loop
dec
sahf
shr
aaa
jge
loope
fs
hlt
sbbl
jne
push
inc
push
les
cwtl
lock
fsubrl
add
push
rcr
push
fidivs
repz
cmp
add
subl
out
cmpsl
cs
ret
test
xor
fisubrs
xor
test
lcall
push
rolb
xor
jo
adc
xchg
sub
jg
jle
mov
xchg
mov
dec
cmp
inc
hlt
inc
cli
cmp
push
in
fildll
or
mov
pop
cmc
push
sbbb
push
push
or
jle
orl
popa
jne
jne
xchg
enter
cld
sti
mov
incl
inc
andl
and
mov
lret
leave
xor
inc
add
clc
adc
add
loopne
loopne
outsl
or
mov
loop
inc
out
mov
call
add
and
mov
mov
jge
pop
push
xlat
add
fidivs
mov
imul
jmp
or
cmp
push
addr16
call
sub
popa
loopne
push
xor
and
add
dec
mov
push
clc
mov
mov
shll
xchg
cli
cmp
loop
cmp
jp
jne
out
xor
add
jb
lock
mov
adc
cmp
mov
xor
adc
mov
mov
or
mov
outsl
ss
ja
clc
insb
pop
inc
sub
scas
mov
insl
nop
shlb
je
push
les
inc
unpckhps
xor
gs
cld
push
cmpl
gs
sar
pop
addb
push
adc
mov
or
repz
add
adc
mov
xchg
stos
mov
mov
es
pop
cmc
lcall
scas
add
adc
ja
jmp
add
lods
aad
push
jbe
or
mov
mov
sbb
and
scas
cmp
mov
or
or
xor
data16
sbb
mov
pop
icebp
fdivp
or
int3
or
jbe
and
aas
add
push
pop
jb
shlb
stos
nop
ljmp
sub
mov
or
cmp
test
xchg
jmp
rcrb
pop
test
andl
mov
sbb
les
into
push
xor
add
or
ds
mov
outsb
or
mov
les
adc
cld
jmp
mov
adc
rcrb
push
out
cmp
pop
fmull
mov
jmp
jmp
stos
cli
daa
mov
test
sti
ds
data16
sub
mov
cli
push
sarb
add
stc
je
pop
sub
mov
push
js
rclb
or
adc
mov
pop
mov
test
mov
cld
rcrb
adc
pop
stos
push
mov
int3
push
aam
xor
mov
les
fbstp
push
xor
ror
cmp
dec
fsubrl
insl
jne
mov
adc
mov
call
icebp
cld
mov
decl
shrl
nop
or
movsl
rcl
mov
push
adc
push
cmpl
add
ret
sbb
cs
loop
adc
roll
jge
ja
dec
sbb
dec
jae
lock
inc
mov
loopne
data16
mov
pop
inc
les
adc
mov
in
idivb
jge
push
or
stos
mov
xchg
lea
push
cmp
sub
or
sbb
rclb
or
push
sbb
mov
lea
mov
push
push
push
and
es
pop
call
ret
jl
sub
fisubl
mov
mov
dec
mov
ljmp
int3
je
fstl
sub
dec
mov
int3
nop
cmpsl
sub
pop
clc
or
cmpps
cmp
sub
cmpsl
lahf
je
lret
xchg
lcall
inc
cmp
inc
clc
inc
mov
cld
decl
mov
ljmp
outsb
push
add
add
adc
scas
jg
mov
jae
inc
xor
mov
add
jb
addl
xor
ror
add
xor
fisubrs
mov
inc
push
jp
xor
mov
jp
ds
cs
push
test
shrl
cwtl
add
in
mov
or
lret
loop
mov
mov
push
mov
scas
enter
sbb
rolb
je
or
hlt
lock
enter
mov
add
faddl
mov
bound
cmpsb
add
cmp
jl
cmp
addl
stos
ljmp
push
mov
clc
fninit
jg
inc
lock
sbb
andl
add
rolb
sbb
pop
jp
dec
loopne
push
icebp
div
sbb
orb
icebp
add
ror
lea
call
fs
inc
in
les
lea
mov
int
lret
outsl
shr
push
adcl
call
sub
jl
out
aam
adc
in
jmp
adc
out
nop
test
dec
xchg
mov
jo
xchg
xchg
test
mov
inc
stos
inc
test
dec
movb
pusha
icebp
mov
dec
sbb
mov
inc
pop
sub
push
aas
aad
xor
cmp
dec
test
lods
xor
lds
repz
rorb
jnp
or
pop
faddl
les
mov
cmp
and
ret
out
lcall
jbe
inc
mov
xchg
lea
push
pop
lock
fadd
push
dec
xrelease
inc
cmp
gs
cwtl
cmp
je
mov
sbb
faddp
fsubrp
adc
mov
repz
fstp
ss
xor
ret
lock
mov
add
xchg
notb
add
aam
loopne
loope
dec
fimuls
xchg
ds
cld
push
addb
dec
aam
jle
push
dec
mov
icebp
and
dec
inc
and
lock
dec
leave
and
inc
xor
ds
xor
jmp
xchg
mov
jb
fldcw
hlt
adc
pop
mov
cwtl
test
aam
stos
loope
testb
movb
adc
movsb
mov
mov
push
inc
push
femms
push
xchg
cld
cmc
in
mov
cld
popa
mov
cmp
notl
jne
mov
sbb
lret
ss
std
dec
mov
call
lock
add
out
pop
addl
xor
fidivrs
fs
push
jge
and
or
push
aas
jl
enter
adcl
dec
rolb
inc
mov
dec
decl
jns
icebp
cmp
push
push
push
scas
inc
rorl
and
push
xchg
mov
jb
push
and
adc
xchg
mov
icebp
push
pop
fidivrl
push
hlt
lock
push
lret
clc
xchg
push
inc
scas
or
fisubs
mov
rolb
sbb
and
sbb
or
call
and
sub
or
cmp
dec
inc
or
lret
pusha
test
jbe
idivl
aas
movsb
pusha
aam
adc
add
lock
lods
imul
rorb
sbb
mov
jb
or
lcall
hlt
enter
in
jne
inc
movb
nop
dec
rclb
push
add
psubsb
xor
push
ss
dec
push
mov
adc
cmp
xchg
pop
inc
mov
lret
in
add
or
aaa
dec
push
sti
std
and
fdiv
sbb
push
gs
add
fisubl
pop
jl
lret
mov
gs
mov
adc
sbb
rol
cld
mov
jle
pop
mov
roll
and
mov
push
cmp
mov
pop
ljmp
jbe
mov
adc
pop
cmp
sbb
clc
fucomi
push
inc
ret
insb
xor
sarb
inc
mov
jg
cmp
sub
incl
adc
arpl
push
push
clc
fs
push
mov
add
push
push
inc
sub
sti
negb
xchg
xchg
pop
in
out
mov
push
mov
push
stos
push
push
ret
test
sub
stos
adc
mov
ljmp
fsubl
mov
inc
push
add
add
leave
out
cmpsb
add
add
addl
jmp
cmp
pop
jbe
and
jle
mov
rolb
ds
sbb
mov
sub
ret
out
inc
mov
bound
std
cmpsb
fsubl
pushf
rclb
push
xor
xor
pop
pop
decb
mov
clc
jge
call
fildl
stos
jp
add
xchg
lahf
jp
call
loop
inc
aaa
int3
add
adc
or
dec
xchg
pop
adc
hlt
sbb
add
out
pop
jl
cs
xor
mov
push
fidivrs
xor
bound
add
jb
xor
dec
add
into
in
adc
push
fisttps
cltd
clc
or
les
cmp
icebp
cmp
mov
xchg
or
push
mov
sbb
push
adc
mov
mov
mov
add
scas
inc
xchg
sub
rorl
mov
pusha
clc
mov
data16
jl
push
xor
sub
aad
push
sbb
xor
xor
sbb
push
gs
ljmp
stos
pop
lcall
out
mov
cmp
inc
add
cmp
mov
add
pop
adcb
xor
add
xor
sbb
jmp
cmpsl
xor
mov
sahf
movsl
adc
and
sbb
pop
adc
sub
orb
lds
jp
add
insb
push
or
mov
jge
add
out
arpl
xchg
mov
jbe
or
insb
fisubrl
movb
fcomip
lea
jnp
jne
mov
shll
adc
add
sub
or
xchg
mov
movsb
rolb
mov
push
rcrb
pop
pop
push
sti
sti
movsb
mov
push
lock
shrb
rorl
dec
push
in
mov
push
or
inc
popa
cli
xchg
add
mov
add
mov
loopnew
jp
je
jne
push
push
int3
fbstp
pop
pop
nop
xor
je
imul
add
fildll
push
inc
sub
mov
push
xchg
cld
push
loope
push
push
out
gs
les
call
pop
pusha
push
pop
cmp
test
push
scas
mov
nop
clc
add
test
fcomps
pop
pop
or
or
or
popl
dec
jp
jne
and
mov
sbb
outsb
push
push
push
mov
gs
inc
xchg
nop
hlt
add
jmp
shll
fmuls
lcall
and
or
push
and
dec
sbb
lods
adc
fimull
call
out
inc
inc
lret
push
jne
fs
xchg
jb
adc
cmp
pop
btc
jo
sub
mov
in
sub
sbb
clc
rcll
scas
incl
and
pop
cmc
inc
sti
xchg
sub
and
or
scas
je
or
xlat
pop
lock
ljmp
scas
add
orl
xchg
scas
mov
or
inc
xchg
sub
inc
xchg
lcall
xor
adc
decl
lods
sub
nop
orl
bound
xor
lock
xchg
mov
jb
sbb
pop
cmp
xor
loopne
push
test
inc
pop
test
dec
inc
cmp
popf
frndint
lea
push
fs
xchg
add
and
lea
push
lcall
arpl
dec
mov
xorl
xor
test
cmp
lock
sub
das
idivl
push
and
ljmp
jmp
test
pavgb
insl
sbb
inc
das
pop
jo
and
int3
mov
popf
sub
rol
pop
mov
cld
icebp
xchg
pop
jne
inc
icebp
repz
lock
pushf
insl
add
cmp
aaa
lock
test
adc
xor
add
cwtl
or
cli
jg
sbb
mov
pop
test
loop
test
pop
in
cmp
ljmp
insl
call
outsl
cmpb
lea
call
inc
jmp
mov
js
xchg
repnz
clc
jg
mov
inc
aam
stc
hlt
add
sub
push
loopne
js
push
mov
incl
dec
pop
out
pushf
es
push
jb
or
or
in
mov
jp
sbb
pop
xor
test
mov
out
rolb
fs
ret
sbb
icebp
repz
dec
popa
mov
xchg
mov
sub
inc
add
jecxz
xchg
xor
xor
mov
popa
aaa
push
into
push
sub
add
adc
decl
or
mov
push
je
push
inc
filds
jb
aam
movsb
negl
and
gs
jae
inc
jmp
sarl
outsb
or
cmp
mov
pusha
fstpt
lret
enter
rol
mov
shll
subb
lock
jl
push
dec
loopne
mov
dec
fbstp
mov
push
insb
xchg
lcall
das
ficoml
test
movsl
adc
cs
lock
pop
mov
ss
mov
repz
and
adc
es
push
test
mov
inc
jb
adc
cmp
pop
add
and
jbe
shrb
or
jg
push
sti
cmpsb
cmpl
add
or
call
out
pop
push
push
xor
mov
lahf
mov
mov
pop
adc
pop
push
pusha
js
inc
hlt
gs
dec
insb
outsb
rorb
shl
pusha
xchg
jns
push
insb
cmp
push
sbb
loopne
inc
jl
outsl
dec
popf
mov
mov
push
add
xchg
xor
cld
lea
inc
pushf
cmp
mov
fs
test
call
push
and
push
xchg
jno
mov
xor
and
or
cltd
dec
ud0
and
push
cmp
cmp
lock
pusha
lea
mov
movsl
mov
cmp
aas
orl
pop
aaa
cwtl
mov
enter
mov
mov
pop
pop
dec
inc
cmp
mov
and
nop
xchg
adc
notb
bound
scas
jg
cmp
add
jl
mov
cmp
int3
dec
sti
xor
pop
outsl
clc
or
into
add
mov
push
inc
and
mov
xchg
mov
push
rorb
cld
adc
call
punpckldq
or
add
orb
test
fs
inc
std
scas
push
imul
jp
call
dec
es
mov
push
adc
add
or
jmp
add
and
or
mov
xorl
pop
xorb
adc
lods
pop
mov
stc
inc
int3
xor
sbb
adc
xor
inc
js
jle
sti
mov
push
pop
pop
add
cld
inc
cmp
inc
add
push
add
pushf
je
sbb
inc
insb
push
mov
loopne
or
cmp
notb
add
push
pop
push
xor
mov
push
jmp
inc
inc
mov
push
and
cmpsl
test
sub
mov
rcrb
pop
enter
sub
out
lock
rorb
mov
or
jae
lock
or
les
lea
mov
add
add
mov
dec
imul
clc
outsl
dec
test
cli
sahf
adc
bound
fs
test
inc
in
call
jmp
je
mov
outsl
jmp
pop
ret
fdivrl
pop
addr16
push
xchg
dec
sbb
loopne
mov
fwait
hlt
push
inc
xchg
add
std
in
imul
jl
jo
or
lret
add
jg
mov
repz
pop
leave
inc
cld
test
clc
sub
shlb
push
and
push
push
cmp
and
dec
and
or
fmuls
sub
jle
push
mov
push
loope
push
and
adc
clc
orl
call
sbb
xlat
rolb
stos
shrb
jmp
sub
mov
pusha
testl
mov
or
pop
xor
nop
and
out
test
sub
or
fistps
xchg
ror
pop
xor
add
or
inc
std
enter
scas
dec
loope
jo
bound
hlt
ret
imul
sbb
pop
cmpb
mov
test
add
inc
imul
or
nop
and
popf
and
push
push
mov
stos
pop
les
push
pmulhuw
lock
add
lds
ds
fucomi
adc
mov
mov
inc
xor
shrb
add
mov
in
pop
sbb
xchg
sub
inc
test
cmp
mov
cli
nop
es
mov
and
mov
ds
cld
jne
cmp
test
out
sbb
xor
fdivs
outsl
dec
enter
nop
or
sub
outsb
dec
into
push
dec
or
imul
pop
addb
push
push
pusha
js
jno
jp
cmp
xchg
mov
and
xchg
movsl
ficoms
lods
mov
jle
and
pop
xchg
addl
std
std
call
or
test
jb
fstl
lea
mov
add
loop
xor
or
outsl
jno
fdivl
adc
or
stos
loop
jmp
shlb
lea
cld
and
mov
loop
cmpsl
dec
imul
sbb
mov
add
mov
pusha
cwtl
ret
inc
add
push
add
decl
fidivl
push
cmc
je
mov
mov
test
movsl
add
adc
mov
and
mov
ljmp
mov
cs
int
sub
ja
inc
or
xchg
jle
movsl
popa
faddp
inc
mov
loopne
add
bnd
push
or
stos
mov
or
jo
adc
inc
inc
jb
xchg
push
cmp
test
insl
push
pop
dec
adc
or
dec
mov
test
hlt
stc
incb
add
stos
add
or
cmp
das
xor
adcl
push
outsl
mov
push
jae
adc
incl
addb
test
jb
pusha
cli
fcmovne
lret
jo
mov
or
lods
and
loopne
cld
lahf
sbb
int3
jns
add
outsb
popaw
lock
insb
cmp
bnd
push
adc
movsb
adc
xor
iret
clc
add
push
fdivs
cmc
decl
popf
pop
cltd
add
stc
jb
fimuls
ret
nop
test
push
call
cmp
inc
mov
dec
jmp
in
rolb
sbbb
andb
mov
or
inc
pop
loop
cmp
mov
insb
cwtl
dec
dec
add
add
push
or
pop
jmp
mov
jbe
daa
clc
jge
movsl
mov
dec
loop
pop
push
imul
in
inc
xchg
mov
in
loop,pt
data16
jl
ss
inc
push
shlb
push
push
mov
xor
or
fidivrl
push
into
pop
rorb
or
mov
dec
pusha
push
ret
pop
rcl
add
cmp
mov
popf
adc
aam
mov
inc
in
xor
lock
mov
xchg
push
ret
sbb
jge
imul
lcall
mov
mov
pushf
js
pop
push
dec
in
andl
outsb
adcb
push
pop
push
push
orb
cltd
icebp
sbb
inc
les
ficompl
inc
push
data16
aaa
sub
mov
ss
add
or
lock
pushf
repnz
jmp
pop
push
les
push
sbb
or
pop
std
test
out
sbb
pop
test
pop
sti
testb
gs
es
pop
in
into
add
inc
jbe
sub
add
dec
loop
leave
pop
lret
jo
xor
nop
push
stos
js
pop
push
xchg
aad
dec
lahf
fdivr
nop
sbb
sbb
mov
or
fs
pop
divps
sub
mov
daa
dec
fmuls
sub
decb
cmp
leave
or
cmpsl
mov
or
push
pop
cmp
mov
mov
fildl
pushl
lret
ja
mov
lret
pop
pop
mov
sub
mov
cli
or
je
pushf
std
adc
mov
mov
xor
test
sbb
test
push
push
sbb
in
gs
pop
js
pop
clc
aas
test
dec
lock
or
inc
add
gs
addl
les
fdivr
shrb
fildll
test
cmp
jnp
dec
das
rclb
push
js
movsb
les
or
jae
and
je
adc
mov
jmp
pop
sbb
jnp
fs
popa
mov
and
cwtl
scas
nop
add
pop
gs
lcall
fstl
cmp
enter
or
xchg
xor
jnp
fadds
je
cs
sbb
loop
gs
add
jp
lcall
cmpsl
orb
xchg
cli
jo
shlb
repz
hlt
cld
xor
push
and
sbb
subl
cmp
or
data16
or
adc
xor
aas
cmp
adc
in
pusha
lea
flds
fwait
mov
dec
add
sarl
jne
test
faddl
stos
movsb
in
movsb
lods
les
fidivl
cmpb
cmp
aad
jg
mov
push
mov
push
dec
loop
lcall
dec
xor
add
les
cld
jnp
mov
mov
roll
sar
jg
pop
les
push
cld
lcall
lea
dec
push
or
push
sti
push
jne
ds
adc
inc
mov
push
ljmp
dec
mov
and
sbb
adc
sbb
jb
mov
sub
sbb
and
add
jge
adc
fdivr
pop
loopne
lcall
adc
adc
rcll
add
jnp
ljmp
mov
rcll
test
inc
add
enter
cmp
test
dec
ficomps
or
pop
mov
add
out
and
mov
pop
in
xchg
pop
or
push
push
dec
call
jne
jmp
rcl
stc
mov
cmpsb
mov
filds
rcll
jp
fcomps
lods
sbb
add
push
push
stos
or
push
ljmp
clc
inc
shrl
adc
sbb
adc
sbb
pusha
inc
inc
and
jbe
cmp
or
inc
shr
lret
mov
dec
clc
mov
cmp
test
cld
out
mov
sbb
inc
insb
movsl
and
aaa
adc
and
pusha
jo
int
sub
push
sar
fildll
and
xor
xor
mov
cmpb
in
or
pop
enter
mov
dec
lods
or
sbb
sub
lcall
add
jae
incb
cs
add
lret
pop
addb
mov
push
scas
roll
push
dec
mov
dec
test
add
imul
mov
pop
lret
imul
js
jle
sbb
adc
mov
add
xor
shlb
mov
inc
call
adc
outsb
je
jl
in
imul
inc
movb
add
sbb
inc
fistpll
stos
fisttpll
icebp
fcmove
push
fildl
push
int3
into
call
decl
mov
orb
inc
clc
pop
add
aam
test
les
adc
je
lods
xchg
aad
cmp
xchg
lret
syscall
hlt
ja
jns
movsl
add
jecxz
xor
mov
test
ret
aas
insl
insb
dec
in
lret
or
lods
orl
jmp
adc
dec
jp
js
cs
cmp
push
sub
pop
bound
add
push
or
jo
xchg
aam
push
mov
mov
add
add
xor
pop
mov
xor
sub
inc
or
add
push
push
jp
adc
cmpsb
mov
push
xor
mov
call
dec
sbb
mov
enter
cli
cli
push
loopne
ficoml
lret
jne
sbb
div
js
or
movsl
imul
add
pop
aam
les
scas
negb
mov
test
data16
xor
ljmp
lret
mov
mov
mov
shr
push
mov
push
sbb
jle
push
shlb
std
add
ret
clc
or
sub
subb
sbb
cld
ret
cmc
push
ret
js
jmp
and
pop
inc
mov
mov
adc
mov
push
es
pop
push
cwtl
fmull
bound
fisttpl
jmp
add
mov
inc
mov
and
or
and
mov
rcrb
xor
stc
add
fstl
lea
xchg
mov
xor
rol
int
out
xchg
sbb
in
ds
ret
bound
dec
imul
ss
out
push
lcall
or
int3
or
inc
dec
push
pop
nop
push
mov
mov
or
leave
pop
xor
cmp
mov
add
or
sti
lea
xor
push
sar
mov
jne
push
pop
pop
inc
cltd
shr
adcl
lods
lods
add
mov
cmpb
rcl
adc
adc
mov
or
sbb
sbb
jp
add
mov
pop
xor
les
sub
clc
enter
rcrb
mov
negb
sbb
pop
dec
inc
ljmp
rorb
movsl
daa
test
pop
inc
in
xor
dec
mov
lods
div
push
sahf
movb
pop
gs
add
in
out
pop
and
add
mov
and
cld
sbb
lcall
ret
push
adc
orb
adc
jp
mov
mov
ljmp
cmp
jmp
mov
scas
sub
mov
add
inc
leave
add
andb
pop
scas
pop
add
aam
mov
fadd
jno
inc
shll
jmp
inc
out
push
mov
mov
push
add
fst
push
leave
cmp
call
mov
ljmp
push
mov
ret
fs
into
add
or
inc
push
bound
push
or
dec
test
xchg
call
push
xorb
sbbl
and
rolb
jo
int3
lods
push
dec
rorb
popa
jbe
push
mov
mov
jnp
mov
iret
xor
call
xor
mov
js
add
inc
or
push
mov
inc
adc
fimuls
xchg
cli
aaa
push
pop
shll
inc
insb
xchg
shr
test
fmuls
dec
roll
dec
jne
or
out
adc
imulb
jb
mov
fildl
push
mov
add
push
mov
int
jb
repz
ret
pop
or
inc
aas
push
xchg
in
ja
adc
or
rorb
int3
inc
lock
dec
cld
cmp
bswap
movsb
and
lods
sbb
out
out
jne
inc
jns
sbb
decl
push
ds
aas
test
orb
xchg
out
jb
pop
mov
xchg
fdiv
dec
jl
inc
and
enter
push
cmp
dec
fistl
test
call
add
xor
pop
adc
jmp
mov
sub
jne
add
mov
out
aaa
mov
and
sbb
mov
or
mov
sub
cmp
xor
sub
pusha
rcll
test
imul
add
pop
push
mov
push
jge
outsl
ret
inc
out
mov
mov
dec
dec
fdivl
outsb
add
sbb
addl
and
clc
clc
sbb
xor
lock
enter
das
call
mov
lds
push
sbb
push
call
xchg
cli
pop
mov
les
push
sbb
or
movsb
mov
ljmp
pusha
xor
std
pop
fs
ds
mov
sub
je
mov
js
lods
scas
loopne
sub
add
std
xor
int3
shll
mov
orl
dec
sbb
mov
sub
les
aaa
ds
xchg
lret
xchg
outsb
pushf
inc
cmp
adc
pop
mulb
icebp
xchg
jnp
pop
push
loopne
adc
stos
adc
mov
ror
addr16
les
adc
lds
loop
call
xor
push
and
mov
es
les
push
mov
rcr
outsb
xor
fimull
push
jmp
fcomps
add
fstps
push
fimuls
and
or
or
fs
dec
mov
jb
mov
push
add
adc
pop
sbb
rolb
add
sbb
jmp
adc
push
push
pop
xchg
ljmp
frstor
int3
lret
add
jb
jb
ficoms
mov
fcmovu
jo
mov
push
push
add
mov
jmp
add
or
dec
cld
scas
or
stc
cmp
in
mov
cmp
repnz
ljmp
add
push
mov
or
jmp
ret
add
sub
mov
jne
fs
lods
cltd
loopne
mov
test
lock
inc
stos
push
mov
adc
pop
adc
clc
pop
push
sub
pusha
and
cwtl
test
or
inc
cmp
xchg
jmp
adc
data16
push
or
nop
sub
jl
push
int3
fdivrp
sub
mov
adc
fsubl
mov
xor
loop
sbb
sub
out
dec
int3
js
cmp
mov
jns
aam
cmp
inc
int3
repnz
dec
shrb
mov
mov
inc
and
xor
clc
loopne
dec
or
push
push
sub
les
mov
or
sub
xchg
mov
sar
rolb
xchg
mov
xor
mov
mov
std
pop
mov
mov
sbb
fists
pusha
xor
dec
test
pop
pushl
insb
lock
mov
fwait
int3
lret
cmp
out
push
or
in
mov
add
jge
adc
jbe
push
dec
cmp
test
sbb
push
add
or
in
xorb
aaa
mov
fdivr
push
cmp
nop
loop
aas
mov
pop
sub
pop
pop
cld
adc
mov
push
cld
mov
push
inc
pusha
cld
int3
sti
add
push
mov
cld
fidivrl
mov
jl
clc
sub
pop
mov
fidivl
adc
js
gs
arpl
xor
dec
cmp
or
sub
xchg
mov
lods
ja
cmp
call
and
loope
mov
add
into
leave
push
inc
mov
cmpsb
dec
inc
fs
inc
ret
aaa
cwtl
inc
mov
fcoms
sahf
sahf
mov
scas
cmp
dec
or
test
pop
std
fldl
jae
es
jne
in
sub
scas
xchg
lock
pop
push
mov
mov
test
popa
jl
or
xchg
cli
or
push
xor
adc
insl
lret
cmpl
call
push
push
push
mov
xchg
test
pop
or
rcll
mov
ljmp
add
es
fstpt
popa
pop
cmp
inc
aam
fs
jns
es
inc
and
sbb
adc
repnz
inc
jb
movsb
rcll
push
cwtl
insb
insl
or
mov
cmp
or
jo
shrb
jg
inc
inc
push
sti
rcl
or
add
mov
mov
js
add
movsb
cmpsl
mov
pop
add
mov
adc
addb
cld
mov
test
aam
inc
jl
in
cld
push
inc
enter
push
lods
and
aad
int
sbb
shlb
std
jmp
xlat
aam
push
pop
adc
fildl
std
add
jae
pop
imul
movsl
mov
movb
mov
lret
fs
mov
and
jb
jno
and
out
cmpsb
in
mov
ljmp
dec
std
inc
sbb
jns,pt
mov
add
cld
lea
pop
or
mov
inc
inc
cld
lea
cmp
ret
pop
movsl
movd
add
push
lock
mov
iret
xor
fs
pop
lock
xor
aad
es
push
cmp
jo
mov
outsb
loopne
rcll
std
add
fst
dec
sub
notb
pop
inc
lea
dec
inc
je
jmp
cmc
es
mov
add
xor
xor
mov
adc
es
subb
inc
je
jge
mov
dec
add
push
icebp
push
or
cld
and
mov
push
mov
and
xor
sarl
mov
fcoml
sbb
cs
cmpsb
cmpsb
lock
test
rorl
rorb
fs
jmp
nop
jo
daa
or
lea
clc
cmp
push
nop
push
ss
mov
cwtl
sub
incb
aas
push
aam
dec
je
inc
push
push
pop
fs
hlt
leave
cmp
hlt
lock
mov
xchg
add
sti
push
addr16
add
inc
ret
add
mov
push
cltd
pop
into
sbbb
movsb
arpl
sub
pop
push
jl
clc
sub
mov
cmp
repz
je
or
je
lea
sbb
sub
sbb
out
rcll
mov
xor
push
and
mov
leave
mov
xchg
cmpb
scas
or
nop
shrb
dec
jle
scas
jle
jmp
inc
add
sysenter
cld
mov
add
repz
pusha
ret
push
dec
adc
outsb
shrb
cmpsb
out
lret
mov
sbb
jne
scas
insl
loope
mov
je
pop
sbb
idiv
ja
sbb
int3
mov
jo
insb
incb
fcoms
push
in
int3
dec
jge
lods
fdivr
loop
add
xor
lock
pop
xor
orl
adcb
xchg
clc
lods
sub
je
loopne
mov
insb
mov
cmp
adc
pop
push
push
cmpsb
sbb
fsubs
mov
push
pop
cmp
mov
pop
loope
lods
mov
cs
shll
jg
dec
cld
testl
add
lea
mov
add
add
das
mov
add
xadd
mov
inc
push
mov
or
inc
ja
or
add
int
ss
jl
mov
lock
fcmovbe
or
je
lock
or
sbb
rclb
mov
jne
mov
addr16
mov
mov
and
mov
icebp
or
rclb
mov
jle
inc
test
cmp
mov
cmpsb
gs
sub
ljmp
adc
jmp
inc
and
nop
xor
inc
out
cli
xor
xor
push
add
sbb
fisubrl
subb
gs
cmp
jp
jmp
and
inc
sbb
fmul
xor
fadd
sub
je
inc
jge
adc
push
movsb
pop
add
testl
fdivl
std
aas
and
mov
adc
ret
test
pop
mov
xor
fs
adc
adc
dec
dec
mov
lock
jo
pop
aam
je
add
pop
mov
inc
push
push
call
imul
dec
xor
xor
or
add
jl
sub
xorb
es
push
movl
inc
add
lcall
addb
inc
rorl
adc
arpl
adc
xchg
scas
sub
mov
call
and
xchg
sbb
sub
or
push
leave
mov
dec
addr16
dec
arpl
aaa
or
adc
sbb
jne
outsl
fadds
lods
incb
sahf
cmp
sahf
subps
mov
test
shlb
jle
lods
clc
es
mov
sahf
call
lods
pusha
lds
sub
jbe
mov
test
dec
jge
les
cld
rcll
stos
ret
les
cmp
testl
xor
mov
or
je
ficoml
loopne
add
jne
cmp
or
mov
jo
sbb
adc
int
adc
mov
psubd
sbb
mov
pop
loopne
sar
call
sub
popw
cmp
or
movsb
sub
pushl
ljmp
push
sub
xor
xor
push
adc
cmp
enter
ja
ret
dec
mov
insl
shlb
arpl
push
sub
adc
out
mov
pusha
mov
or
xor
rorb
inc
es
pop
insb
incl
popf
mov
inc
pop
rolb
mov
fs
xor
adc
ret
sbb
pop
cmp
adc
cmp
pop
adcb
xchg
inc
cmc
aas
or
test
adc
jne
hlt
mov
push
push
fdivs
pop
clc
pop
push
test
int3
lock
lock
aas
fs
inc
xlat
and
fsubrs
jb
push
outsb
int3
int
rorb
test
xor
cmp
imul
test
add
fdivrs
loopne
adc
mov
jnp
icebp
int3
xorl
lock
mov
shlb
lea
addl
or
outsl
decl
push
push
fsubr
push
add
inc
int3
push
pop
push
mov
ret
mov
lods
sbbl
call
inc
dec
test
or
cmp
pop
les
ljmp
out
arpl
or
cmc
jmp
mov
sbb
mov
ficoml
es
test
xor
ret
sbbl
push
andb
shr
xlat
inc
mov
cli
lock
fbld
gs
pop
ss
outsl
imul
xor
mov
jo
jge
jno
push
pop
mov
clc
adc
or
rol
clc
cld
jmp
and
mov
push
adc
or
add
push
xchg
insb
inc
cld
sbb
lret
add
in
mov
pop
push
lea
pop
adc
mov
out
mov
insl
pop
dec
incb
sub
test
test
int3
cmp
mov
js
pop
lea
icebp
dec
add
xorl
pop
decl
mov
psrlw
push
add
ss
push
lock
or
cld
cmp
jg
ljmp
cmp
or
repnz
push
pop
mov
inc
jl
loopne
xor
rcrl
sub
lcall
mov
test
dec
in
sbb
xor
insb
addb
out
fcmovnb
add
adc
add
ret
or
fcomps
loope
imul
decl
dec
test
push
clc
adc
clc
enter
adcb
sbb
inc
jl
clc
xchg
loop
out
mov
mov
sub
add
shr
push
xor
jp
inc
sbb
sub
inc
aaa
push
adc
sub
xchg
mov
outsl
test
outsb
cmc
and
sti
jae
in
rorb
mov
jl
or
xor
in
test
add
or
aam
ret
adc
xchg
enter
lods
lret
inc
jl
rorl
lcall
fbstp
jo
stc
sub
shrl
lods
fmuls
loop
pop
mov
orl
rcrb
mov
test
fldenv
ljmp
into
pushf
addl
scas
and
jo
xchg
imul
xchg
mov
xchg
shlb
insl
scas
mov
cmp
mov
mov
hlt
cmpsl
in
adc
lcall
loopne
daa
and
sti
mov
add
dec
test
pop
mov
mov
test
lea
inc
adcl
mov
les
lea
gs
jns
out
xor
insl
int
adc
out
add
sub
adc
out
pcmpgtd
push
add
out
adc
jne
fists
lret
sbb
inc
lea
pop
xchg
add
imul
mov
jbe
xor
add
ret
mov
in
xor
std
xorb
enter
movsb
or
or
mov
cmpsb
sub
adc
adcl
aam
or
jl
xchg
mov
mov
ss
test
xchg
out
call
lcall
lret
loopne
push
and
inc
dec
adcb
jle
add
in
pushf
mov
mul
mov
and
movsb
inc
mov
shlb
sub
xor
jns
mov
stos
or
pop
add
pusha
cmp
pop
cs
or
adc
or
pop
xchg
lods
daa
ret
lds
pop
cmp
xchg
inc
sbb
mov
xchg
pop
decl
pushf
repnz
cld
add
adc
push
fists
push
mov
mov
aas
data16
mov
mov
cwtl
jbe
push
sub
in
les
add
out
push
adcb
shlb
cmpsl
add
stos
pusha
loopne
gs
add
cs
push
jne
sub
orb
lods
inc
inc
repnz
or
jbe
fiaddl
scas
dec
ss
or
je
adc
add
sbb
sbb
scas
mov
movb
and
xchg
add
jbe
pop
sub
pusha
jle
test
pushl
loop
adc
aam
xor
int3
or
mov
push
sub
sub
pop
xor
cmp
nop
inc
jo
jg
push
dec
mov
subl
loopne
je
jmp
cmp
jl
adc
fcomps
push
add
arpl
push
loopne
inc
pop
cmp
sub
aad
scas
outsb
or
ja
sahf
sub
leave
adc
andl
test
popa
in
pop
or
xchg
or
push
pusha
xor
mov
cld
insb
bound
sbb
jb
in
aaa
iret
dec
push
dec
fwait
add
cld
pushl
lret
les
mov
pop
sbb
stc
lret
xchg
pop
sbb
pop
pop
sub
fidivrl
fisubl
fnstsw
cmc
lret
jge
loope
out
dec
and
sub
pusha
and
xor
sub
xchg
lret
xchg
test
xor
stos
cmp
inc
and
mov
in
outsl
stos
stos
fmuls
out
adc
int3
cmp
push
xchg
cmc
pop
out
cmp
sub
ror
inc
adc
push
pop
clc
pop
test
mov
xor
pop
ds
cmp
nop
mov
repnz
adc
add
sub
mov
xor
push
insb
test
xor
xor
adc
push
out
sarl
sub
test
sub
insl
loope
xor
in
inc
clc
cmpsb
je
ret
adc
push
add
js
repnz
repnz
push
mov
outsb
push
xchg
shlb
in
jecxz
add
jmp
lret
xchg
push
jb
loopne
mov
enter
push
jne
push
clc
jmp
xlat
push
adc
jmp
pushf
repz
fmuls
jmp
inc
mov
test
ficompl
mov
pusha
repnz
lds
lods
mov
inc
push
or
mov
push
sub
cmpsl
int3
lret
icebp
lods
cmp
in
rcrb
test
or
or
push
inc
inc
loopne
mov
sbb
add
cli
outsb
ret
mov
push
cmpl
lea
in
clc
int
cmp
mov
cmp
sub
cli
jg
dec
add
pop
or
or
movsb
push
mov
or
les
add
sub
adc
inc
and
cmp
jmp
pop
sbb
cmp
xor
enter
mov
jle
jne
adc
push
ljmp
or
inc
or
inc
jmp
jle
ss
and
dec
or
dec
aas
xor
imul
clc
retw
jg
or
adc
aam
fmuls
rorl
repnz
pushl
mov
mov
add
sahf
add
mov
movsb
frstor
mov
jle
adc
shr
mov
shlb
jae
ds
push
add
testb
and
cld
cmpsb
push
sbbb
icebp
lock
mov
jbe
dec
roll
pop
scas
push
pop
inc
pop
in
mov
mov
fiaddl
add
int3
mov
or
cli
or
xchg
test
mov
lret
adc
dec
add
mov
mov
xchg
test
sbb
jb
mov
insb
in
cltd
cld
sti
push
rorb
jl
subb
sbb
imul
cmp
push
push
sub
push
push
add
outsb
ret
pop
xchg
push
data16
mov
cmpsl
cmp
scas
push
jo
fiadds
insb
adc
cmp
push
mov
int
pop
fdivl
js
je
pop
add
das
imul
sar
push
shr
mov
loope
ret
push
inc
jl
popa
hlt
loope
ret
add
mov
data16
stos
ljmp
cmp
nop
loopne
out
hlt
adc
or
lret
mov
mov
fnsave
enter
xor
mov
push
loope
loopne
adc
push
xchg
inc
test
fwait
add
sub
rcrb
std
cmpb
enter
mov
push
mov
cmpsl
inc
adc
mov
nop
jbe
add
add
or
ljmp
in
lea
pop
jl
or
and
push
add
push
and
push
fists
pop
mov
jae
mov
in
push
pop
cmp
hlt
dec
mov
and
and
mov
mov
fwait
pop
and
loopne
lods
and
pop
jo
mov
lcall
mov
dec
nop
ret
je
xor
fwait
ss
push
sub
push
xchg
add
sub
test
lock
ret
fiaddl
fisubrs
jns
test
jb
adc
orb
jo
pusha
push
push
jge
rol
xchg
adc
rcrb
inc
sub
je
jne
mov
rcl
dec
add
inc
fldl
mov
mov
mov
mov
mov
pop
nop
mov
shl
add
jb
push
xchg
pop
mov
cmp
ret
incl
or
add
and
cld
dec
push
push
out
xchg
decb
imul
test
inc
out
andb
mov
push
push
mov
cs
pop
inc
push
cmp
push
add
int
jo
mov
sarb
repnz
shr
inc
push
pop
shlb
sbb
fdivl
test
push
loopne
data16
out
ja
xor
lret
icebp
adcb
mov
mov
xor
add
test
inc
jecxz
jo
add
pusha
idivb
or
test
cs
jg
push
adc
test
mov
orb
add
call
nop
mov
adc
gs
xchg
add
adc
stos
cmpsl
les
mov
movl
xchg
push
stos
cli
cwtl
loopne
push
xchg
test
or
dec
push
les
test
cwtl
in
push
movq
cmp
aad
sbb
loop
adc
rcrl
addr16
test
adc
xor
cmp
add
or
add
rcrl
fadds
add
addl
pop
add
sbb
jle
scas
bound
jne
inc
jb
mov
insb
std
out
pushf
test
loopne
pop
xor
int
sbb
popa
jmp
les
mov
cmpsb
push
daa
adc
adc
adc
decl
mov
dec
mov
sbb
jne,pn
or
test
push
movsb
mov
mov
lock
push
ror
dec
je
dec
jae
mov
insb
sub
lock
std
inc
inc
test
das
pop
pop
xchg
orb
jo
and
push
sub
leave
je
add
and
mov
sar
jne
cmp
inc
xchg
xor
mov
pop
outsl
pop
mov
add
push
insb
dec
xor
mov
test
hlt
push
lea
cmpsb
movsl
jo
dec
rolb
fsubs
add
adc
jmp
sti
pop
movsl
mov
aam
push
int3
clc
nop
fiadds
test
mov
xchg
sahf
test
add
bound
pop
stos
adc
xchg
pop
fisubl
pop
les
out
in
lods
push
inc
bsf
in
outsl
stos
inc
and
dec
sti
mov
in
add
mov
lret
or
mov
sub
adc
xor
fdivp
or
inc
sbb
in
and
sub
or
es
mov
lea
inc
or
fwait
es
push
iret
adc
pshufw
and
and
jecxz
push
sbb
mov
mov
loopne
and
pop
xchg
push
jb
xchg
add
push
int3
inc
adc
in
sbb
mov
inc
dec
or
test
testb
enter
stos
dec
popf
lea
jle
imul
repz
mov
push
jb
inc
xchg
inc
cmpsl
test
fmull
or
shll
or
xor
lcall
bound
mov
dec
or
adc
jl
mov
mov
fsubl
je
fsubl
inc
test
pop
cwtl
push
pop
xor
pop
ret
jp
fldcw
mov
clc
and
std
mov
xor
add
dec
insb
lea
jmp
sbb
adc
mov
mov
fldl
scas
fmull
inc
jp
lret
push
dec
or
inc
mov
pop
ljmpw
mov
loop
in
add
xor
and
mov
enter
lea
jge
push
push
sbb
nop
stos
push
std
jg
jmp
in
test
jb
div
je
ret
push
mov
pusha
mov
inc
inc
popf
in
fsubs
pop
push
insb
mov
insb
or
cmp
fstl
push
inc
jo
or
rorb
lock
pop
push
inc
and
xchg
jge
mov
je
jge
aam
test
sbb
insl
inc
dec
mov
dec
add
mov
test
mov
ficompl
andl
and
adc
push
cmpsl
xchg
and
ljmp
lea
sub
mov
add
cmpb
sbb
dec
imul
push
jmp
call
push
xor
sub
cmp
xlat
mov
inc
pop
shlb
lock
imul
call
ret
adc
fistpl
xbegin
jge
pop
mov
pop
adc
outsb
mov
mov
loopne
incb
repnz
js
lods
adc
xchg
jb
cmp
push
movsb
mov
sti
mov
xor
mov
pusha
decb
push
mov
sub
jb
pop
insl
or
ds
push
scas
add
jne
lahf
cmp
in
mov
jmp
push
shlb
add
sbb
add
cmp
pop
mov
add
test
lea
mov
mov
jno
sbb
movsb
push
dec
or
push
shrb
or
inc
adc
je
notb
punpckhbw
rorb
mov
insb
push
sub
in
jp
mov
scas
stos
ja
repz
fidivl
lock
sub
push
dec
adc
hlt
xchg
pop
mov
incl
popf
cmp
cmp
scas
test
faddp
adc
push
sbb
jno
filds
push
xor
xchg
inc
pop
sub
mov
int3
stos
add
lock
cmp
lea
and
outsb
aad
js
rcll
push
jl
decb
and
add
shr
decl
repz
xor
add
pop
mov
and
sbb
xor
inc
in
fstpt
mov
fidivs
andb
xor
sub
jae
jge
xchg
imul
andb
insl
add
loop
fs
inc
mov
jecxz
gs
incb
dec
cld
add
mov
sub
mov
pop
mov
cmpsb
pop
mov
or
inc
add
add
fcoms
mov
rol
or
inc
je
jle
mov
loopne
or
psllw
movsl
or
shll
xor
sar
shl
inc
mov
jle
pop
rcll
gs
fucomi
pop
dec
jb
inc
xorl
daa
inc
fldt
les
dec
pop
enter
push
ret
push
jo
push
dec
nop
out
and
mov
pop
mov
sbb
sbb
add
dec
add
movb
or
adc
jo
push
and
sbb
popa
aas
int3
mov
fsubs
fistl
and
xchg
lods
rorb
ljmp
inc
aaa
je
and
mov
pusha
push
outsb
mov
sar
loopne
cld
insb
decb
adc
ficoml
nop
add
aas
add
int
mov
std
incl
pop
int
jno
test
sbb
lea
and
mov
sti
data16
mov
bound
out
fmulp
sbb
lcall
or
fistpl
xchg
je
mov
ficoms
adc
cmp
subb
scas
push
sbb
loope
mov
daa
enter
iret
in
test
ret
add
push
push
xchg
roll
shrb
call
in
rcrl
insb
call
push
adc
jg
xchg
mov
mov
cmp
cmp
ss
rolb
adc
jne
fwait
lea
call
or
mov
xchg
rorb
jae
gs
das
fdivs
fstpt
mov
sarb
jbe
outsl
ss
dec
sahf
cmp
xor
mov
mov
dec
data16
sahf
xor
ficomps
push
lret
cmp
or
inc
test
sbb
push
sbbl
mov
cmp
subb
mov
xchg
test
xchg
call
or
sub
idivb
adc
mov
push
pop
out
loopne
xchg
out
cli
stos
add
testb
add
sysret
aaa
ds
cmp
pop
in
bound
xchg
pop
lock
add
cltd
ror
mov
in
rorb
pop
insb
fimuls
sub
add
rcll
je
fs
movb
xor
inc
rcl
push
pusha
movsb
das
roll
mov
gs
and
loop
jge
fildl
cmpsl
xor
mov
jno
and
adc
ret
add
or
rcll
cmp
test
adc
xor
sbb
add
ja
decl
pop
and
idivb
aam
pop
das
aam
aad
mov
jl
push
push
jmp
lock
sti
std
dec
mov
cli
sahf
push
sub
jge
cmp
ret
adc
jb
mov
pop
pop
add
adc
or
mov
and
add
pop
adc
jb
xchg
pop
loopne
push
adc
jno
andl
mov
inc
cmp
add
push
pop
fcos
out
mov
sti
pop
add
and
sbb
es
mov
cmp
add
inc
out
mov
dec
lods
rcrb
call
mov
sbb
ds
cmp
lretw
jo
pop
push
add
loope
jge
jle
push
and
sbb
mov
push
out
test
dec
and
call
inc
pusha
jp
push
ret
cmpsl
add
push
xor
loopne
adc
push
mov
cmpsb
mov
in
shll
jnp
push
fadd
pop
inc
mov
call
repnz
testl
add
cmp
adc
pop
aaa
xchg
adc
cmpsl
lea
das
mov
test
sub
cmpsb
mov
loope
ret
cmp
jne
and
xor
lahf
inc
pop
mov
pop
mul
div
push
sub
push
shll
ja
jns
loop
or
ljmp
jmp
cmp
mov
shlb
pop
incl
sub
stos
bnd
pusha
sub
push
add
fidivs
std
scas
inc
stos
inc
sub
mov
pop
sar
mov
push
fs
addl
pop
ret
add
xor
in
add
cs
xchg
adc
sbb
test
rcll
sub
xor
call
insl
mov
add
pusha
lods
mov
jb
adc
adc
add
outsl
mov
or
into
push
add
mov
pop
add
jl
mov
or
call
popa
cmpb
test
adc
aad
ret
mov
xor
mov
lock
adc
aas
push
pushf
mov
push
mov
jne
adc
pusha
inc
or
inc
lds
sahf
call
dec
sahf
jmp
mov
stos
jb
scas
cmpsb
mov
je
std
sbb
rolb
outsb
loopne
pop
test
inc
xchg
xchg
les
sub
xchg
inc
loopne
ljmp
sbb
add
add
cmp
testb
je
mov
je
sbb
dec
pop
movsl
mov
jl
leave
ret
mov
and
sbb
fdivp
bound
xor
wbinvd
data16
pusha
repnz
adc
movsb
ljmp
imul
mov
mov
cwtl
test
ds
hlt
and
lea
movsb
clc
cs
cmp
or
aam
or
jo
dec
mov
mov
dec
inc
inc
call
jle
mov
and
cmp
xchg
test
into
cmp
inc
aas
cmp
mov
jno
inc
xchg
push
outsl
lret
xor
mov
push
jp
xor
lods
push
fidivrl
or
mov
in
push
lea
sub
dec
push
jb
push
mov
xchg
test
lcall
call
loope
adcb
jne
inc
scas
sbb
lock
aas
pop
lret
mov
test
ret
push
popf
sub
fsubrp
rorb
xorb
stos
popa
fcmovne
decl
xor
xor
mov
mov
mov
sbb
bound
and
add
pusha
mov
lcall
push
jb
push
inc
mov
xlat
mulb
add
lea
mov
call
cli
xor
test
sub
adc
insb
je
outsl
outsl
sar
xchg
add
inc
push
jae
stos
mov
adcb
mov
incl
mov
mov
push
lock
sbb
sarb
loopne
nop
dec
sbb
inc
leave
inc
mov
mov
into
insb
test
jo
insb
cmpsl
clc
cmpsl
fs
loopne
push
jl
adc
add
rcrl
aam
cmp
cmp
loope
pop
ret
and
mov
jmp
push
adc
or
test
jmp
ret
inc
out
adc
jb
inc
pop
inc
gs
adc
cmp
mov
lcall
cld
mov
mov
neg
push
push
and
cld
jge
rcl
xchg
and
jns
dec
mov
mov
add
ret
ljmp
xchg
sub
stc
xor
add
test
or
push
aam
incb
adc
mov
push
or
cmpsb
push
push
mov
jl
incb
cld
sti
jnp
push
push
xorl
cmp
xlat
mov
call
mov
lods
dec
out
dec
pop
jl
jne
leave
cmpsb
xor
pop
sub
es
cmp
in
pop
loopne
sub
dec
and
mov
sub
and
add
mov
xchg
xor
mov
lret
mov
jb
pop
pop
movsb
clc
mov
mov
enter
add
inc
imul
push
les
pop
inc
push
sti
int
test
push
cmp
mov
and
popf
mov
movsb
in
mov
and
sti
repnz
sbb
and
ret
scas
adc
or
sbb
add
mov
push
loope
andb
out
mov
jno
add
mov
ret
aas
cld
or
ljmp
cmp
in
inc
push
ret
inc
push
xchg
ljmp
push
lods
mov
test
dec
mov
xor
mov
lcall
mov
xchg
lock
fs
shrl
mov
adc
fildll
add
and
sub
lods
xrelease
push
sti
ljmp
orb
dec
shrl
data16
cmp
shlb
xchg
call
sahf
add
or
loopne
jae
sbb
inc
test
and
xchg
and
mov
mov
sbb
outsb
or
push
add
jl
sbb
pop
mov
lea
or
mov
pop
int3
ds
fchs
sbb
enter
stos
sbb
push
adc
or
test
push
in
adc
lock
xchg
sub
xor
nop
sub
sub
inc
int
mov
mov
cmp
add
adc
ds
icebp
in
popa
jns
mov
adc
inc
pop
clc
xchg
sarb
and
stos
add
add
sub
push
ljmp
in
mov
inc
sarb
push
loop
call
lods
or
add
movsb
add
add
jg
call
test
enter
incl
cwtl
test
sti
data16
loope
shlb
or
pushf
inc
mov
pop
or
test
subb
call
mov
mov
dec
lods
dec
xchg
fldcw
frstor
ss
mov
inc
mov
test
dec
xor
and
int
inc
and
xchg
inc
fisubrl
aam
loope
lds
mov
mov
xor
mov
call
jne
mov
les
jo,pn
sub
ret
jle
cmc
mov
sbb
stc
push
xor
test
les
sbb
test
mov
add
sbb
xchg
outsl
add
mov
inc
aam
jg
movl
inc
lods
xchg
scas
hlt
out
lea
dec
rolb
adc
pop
dec
sub
icebp
or
mov
pop
mov
jb
cmp
xor
out
insb
fucomip
inc
mov
xor
jno
sub
add
jns
or
add
fistpll
adc
push
mov
roll
sub
add
push
xor
dec
cmp
xor
or
out
mov
shl
mov
pop
xor
sbb
data16
jle
add
sbb
fcomps
sahf
add
add
loopne
rep
je
clc
mov
adc
js
pop
push
sahf
push
aad
lods
inc
sub
pop
xor
aad
decl
mov
adc
mov
ss
imulb
aas
sub
nop
inc
icebp
pop
loopne
in
cmp
push
rol
loopne
js
mov
adc
lods
inc
xchg
push
inc
push
pusha
cmp
aam
call
rclb
pop
mov
mov
cmp
jne
ss
adc
outsl
lcall
xor
jno
test
aas
pop
fisttps
scas
mov
add
mov
out
leave
stos
imul
adc
mov
idiv
fs
loop
push
add
fwait
ss
push
jo
ja
mov
fwait
add
sbb
neg
adc
ss
clc
pop
imul
inc
sub
push
mov
les
dec
push
incl
inc
push
aam
sti
add
and
add
adc
or
cmpb
push
rolb
clc
xor
push
mov
repz
add
pop
inc
fs
mov
dec
mov
clc
mov
push
lds
push
fisubl
pushf
xor
mov
mov
push
push
shll
and
or
loopne
test
je
mov
and
nop
xor
mov
icebp
pop
inc
bswap
cmp
pop
leave
push
int
jo
out
mov
add
mov
sbb
mov
test
leave
fcoml
jmp
mov
leave
sar
iret
push
dec
pushl
inc
add
shl
jbe
mov
add
mov
fmuls
or
sub
add
xor
inc
dec
xchg
and
pop
call
clc
into
ret
ja
push
add
rcrl
inc
xor
jp
rcll
mov
and
insl
cld
push
mov
sub
sahf
cmp
cmpsb
or
adc
loopne
testb
fldt
rcrb
mov
incl
sub
incl
aam
fsubl
shll
sub
xor
out
fisubrs
stos
push
adc
cmp
jp
cmpsb
add
xchg
and
mov
sbb
je
xorl
aas
rcl
es
ljmp
ret
ficoms
pop
and
or
lret
mov
test
add
sbb
loope
inc
dec
lods
mov
fmuls
data16
addb
adcl
inc
mov
in
inc
xlat
xor
shr
inc
add
cmc
or
lret
xor
dec
mov
rcrl
sbb
rorb
push
jo
sub
jbe
outsb
add
or
push
fsubrs
in
xor
xor
adc
or
inc
cli
rorl
popf
fsubrs
paddb
add
dec
or
jg
dec
inc
nop
inc
add
mov
dec
clc
adc
push
int3
or
xor
into
std
mov
and
xchg
sbb
scas
push
lea
mov
lds
cli
inc
call
pop
clc
jmp
jnp
jne
adc
sarb
push
adc
xor
pop
roll
sbb
inc
test
insl
cmp
int3
fucomi
in
push
std
bound
decl
pop
inc
jecxz
mov
bswap
dec
pop
inc
fadds
xchg
sbb
fstl
into
push
and
test
add
dec
lret
xchg
xor
push
arpl
or
cmpsb
test
mov
incl
js
push
mov
int
test
pop
xchg
ljmp
inc
sbb
add
adc
int3
or
popf
rclb
sub
scas
or
shlb
orb
shlb
jl
or
mov
stc
cld
in
push
add
fsubrs
test
cwtl
push
adc
adc
adc
mov
inc
sbb
push
popa
scas
mov
sbb
insl
repnz
in
movsb
hlt
aaa
ret
clc
ss
sbb
jge
cli
outsl
adc
mov
imul
ja
mov
add
cmp
call
jge
pop
fidivrl
pop
inc
sub
xchg
test
and
rcl
test
cwtl
cmp
add
rcrb
jb
cwtl
jbe
inc
inc
cmp
inc
pop
add
jle
mov
and
adc
add
push
movsl
movsl
jmp
ja
push
mov
les
dec
mov
cmp
shl
push
jecxz
out
das
adc
xchg
jno
cld
mov
mov
pop
data16
pop
sub
enter
shl
or
jg
clc
in
std
add
push
cmp
fmuls
mov
jo
and
push
sub
test
push
shlb
int
scas
mov
mov
pop
lea
int3
inc
jmp
push
je
xor
daa
fisubrs
push
adc
es
xchg
pop
mov
add
push
sub
xchg
aam
push
fcoms
inc
dec
add
xchg
inc
add
lock
push
call
in
out
lea
mov
popa
shl
ja
inc
sbbb
pop
jo
adc
and
xor
xchg
push
test
mov
or
add
mov
pop
inc
mov
mov
mov
mov
insl
sbb
in
add
or
add
cmp
fisttpl
movsb
adc
pop
pop
scas
cmp
les
test
pop
cmp
jno
dec
clc
push
rclb
cmovo
loope
sbb
pop
add
fsubs
or
push
lds
outsb
bound
mov
push
push
fsubs
clc
push
rolb
shl
cwtl
pop
inc
pop
mov
sbb
dec
and
push
inc
pop
adc
ret
std
dec
mov
adc
dec
sub
jp
xchg
fdiv
cmpsl
add
mov
ret
mov
cmpsb
movsl
jo
mov
push
push
loope
or
sub
mov
add
out
popa
out
sar
les
dec
push
adcb
nop
sbb
jmp
cmp
in
lock
push
and
data16
add
decb
or
inc
mov
xor
mov
mov
inc
lcall
test
negb
push
jo
scas
incb
clc
addr16
fsubr
adc
cli
mov
cmp
shr
mov
rolb
xchg
sub
adc
or
mov
es
mov
js
gs
sbb
sub
daa
lods
jbe
out
sahf
xor
push
adc
xor
sar
les
sbb
sarb
sahf
xchg
and
mov
stos
nop
pop
pop
jno
mov
add
call
add
adc
fsubs
std
mov
xchg
std
inc
fmuls
call
xchg
dec
inc
ljmp
test
cmpsl
lock
add
int3
out
lods
sbb
icebp
shll
dec
out
push
filds
stos
push
add
dec
ljmp
jge
loope
push
sbb
xor
add
and
imul
xor
cmp
xchg
lea
inc
xor
add
cmp
pop
and
je
push
add
jle
cmpsl
test
pop
js
jne
je
wrmsr
or
ror
and
xor
leave
or
sbb
pop
xchg
mov
je
adc
pop
addr16
aas
test
cld
stos
mov
sbb
sahf
cmp
and
or
xor
out
xor
test
mov
imul
fadds
adc
or
call
adcb
in
push
fld
push
sbb
call
dec
mov
mov
cmp
lods
or
inc
mov
daa
inc
adc
fistpll
cli
mov
pop
jb
xor
pop
clc
pop
and
xor
inc
add
and
loopne
scas
call
clc
pop
stos
sbb
nop
lea
fisubrl
loope
mov
adc
mov
call
push
int3
repz
mov
test
lea
xor
push
popa
lret
jl
mulb
cwtl
call
pushf
or
pop
fcomip
and
cld
cmp
std
sub
mov
call
pushf
fsubr
test
xor
dec
clc
rcrb
cmp
outsb
push
mov
ljmp
or
jne
bound
stos
enter
add
xchg
xchg
sub
nop
xchg
lret
push
add
subb
inc
mov
pop
or
jle
push
paddq
cld
es
ss
imul
xor
decb
les
ss
adc
loopne
pop
inc
icebp
test
jle,pn
ret
call
or
fisubrl
dec
lahf
scas
clc
xor
dec
mov
xchg
cmpsl
imul
mov
lret
outsl
inc
test
dec
push
inc
sub
ret
roll
add
shrb
les
push
sbb
cmc
xor
xor
aam
leave
cmpsl
mov
in
mov
and
aam
push
inc
xchg
jne
add
jne
jno
sbb
clc
ss
or
adc
aam
ljmp
outsl
mov
cmp
add
pop
mov
out
mov
lea
xor
jns
out
dec
pop
jmp
add
xchg
xchg
in
cltd
inc
lea
dec
mov
pop
rolb
lcall
icebp
xor
adc
push
sbb
push
xor
jl
push
jbe
add
ss
les
imul
xchg
dec
xor
cmpsl
or
jl
and
dec
push
mov
incl
or
mov
imul
stc
sbb
orb
enter
jb
sbb
pop
rclb
push
loopne
push
nop
lods
mov
pushl
insl
lock
mov
loopne
add
sbb
out
jne
add
sar
xchg
pop
inc
inc
sti
and
adc
adc
sbb
add
xor
add
dec
jge
mov
imul
sub
pop
mov
dec
pop
int3
jmp
push
push
pop
insb
aam
add
outsl
les
cmpl
pusha
add
push
aaa
pop
bound
adc
fs
xor
mov
and
push
and
xor
dec
test
test
or
insb
xor
inc
dec
lret
push
sbb
mov
inc
out
add
lret
mov
jo
mov
ds
sub
add
or
xlat
push
or
cmp
inc
in
mov
or
repnz
sub
jnp
adc
add
mov
push
xor
xor
xor
imulb
cli
mov
mov
and
fwait
xchg
mov
jmp
scas
sbb
in
outsl
mov
dec
test
xor
ss
lret
mov
insb
sbbl
imul
je
outsl
loope
cld
pop
test
jno
rclb
lods
dec
mov
in
pusha
add
sub
jg
bound
mov
stos
enter
lock
mov
jle
je
fbld
cli
aaa
rclb
sub
inc
fbld
inc
imul
lock
mov
inc
out
popa
add
mov
mov
js
cli
std
inc
fildll
xor
loopne
push
jge
fwait
movsb
inc
jmp
fisttps
jp
cmp
incl
adc
call
cmp
mov
push
or
test
adc
sub
and
data16
or
shrb
inc
js
test
cli
loop
scas
push
push
lret
inc
mov
adc
mov
push
push
jns
push
and
xor
scas
test
cmp
mov
xor
adc
xchg
or
xor
filds
pop
nop
test
jbe
push
stos
fs
sarl
mov
sbb
jno,pt
push
ljmp
in
or
push
adc
jmp
out
test
or
insl
leave
or
cs
adc
in
ss
mov
rcrb
lock
xchg
adc
sbb
or
pop
sub
push
faddp
rorb
inc
aaa
jecxz
xor
jae
es
add
sub
xchg
es
cmp
out
push
inc
pop
fsubrl
cli
dec
ret
nop
jp
ss
and
lcall
sbb
leave
lar
and
cmp
lock
gs
sarl
lret
sbb
pop
adc
jl
push
imul
popa
adc
cwtl
cmp
clc
mov
mov
dec
shrb
insl
cmp
cld
pushf
jb
call
xor
inc
clc
dec
lea
sub
xor
add
pop
ljmp
jne
std
stos
fistps
call
cs
lea
test
pop
test
sub
pop
lds
cmp
loopne
sub
sbbl
lret
sbb
cmp
pop
xor
cmc
inc
ss
mov
jmp
sub
lods
add
pop
jb
rorb
je
sbb
xorb
add
call
mov
cmp
xor
jb
jne
sbb
and
nop
dec
sbb
mov
xchg
xorb
jb
fcomps
inc
cmp
cli
sbb
addl
mov
je
and
cmpsb
jg
push
mov
ljmp
call
fwait
int3
call
xchg
push
gs
cli
pcmpeqd
cmp
mov
cs
mov
testl
andl
jne
jmp
cli
cld
sbb
insb
mov
add
inc
mov
push
dec
xor
cmpsb
push
push
push
int3
pusha
sbbl
pop
cld
xor
pop
push
add
test
add
icebp
cmp
pop
dec
and
mov
dec
or
push
xchg
sub
cmp
stos
add
rorb
sbbl
sbbl
and
hlt
inc
insb
jecxz
jl
xchg
js
add
sub
push
mov
jp
into
jl
jo
fmull
addb
fiadds
mov
mov
pop
arpl
cmp
pop
movups
into
push
fisubrs
sbb
arpl
fimull
fcoms
push
inc
and
scas
xchg
push
arpl
push
sub
std
xchg
dec
lret
cli
cmpsb
add
xchg
pop
mov
outsl
inc
call
test
mov
movb
xor
or
std
push
shlb
push
hlt
push
js
add
ret
outsb
and
jne
lahf
daa
adc
xorl
push
jl
or
cmp
cld
test
cld
or
sub
pushf
dec
dec
ja
cs
incl
and
insl
xchg
hlt
add
ljmp
dec
mov
lea
mov
insb
and
test
popa
xchg
xchg
fsubs
in
ret
sbb
hlt
daa
aad
dec
dec
hlt
dec
mov
push
adc
push
sbb
adc
jae
mov
bound
shl
and
xor
or
dec
xor
test
push
push
add
cmpsb
mov
push
jle
aam
xor
push
aaa
mov
push
loopne
mov
dec
pop
jno
sub
inc
xchg
push
loope
and
sbb
mov
xor
mov
call
cmp
add
movsb
shlb
idivb
jno
in
test
test
sub
dec
push
pop
loopne
or
sub
outsl
ljmp
jb
les
mov
sub
call
aad
into
lock
cmp
push
cs
fsubr
mov
jmp
in
inc
dec
cwtl
shr
rolb
mov
sbb
jl
loopne
sub
scas
sar
add
test
sub
lods
adc
inc
test
jg
mov
cld
push
xor
fisttpl
push
sarb
or
xchg
dec
shl
pop
rol
lahf
jbe
fldl
ds
je
push
loop
mov
pop
leave
sbb
stos
nop
add
movb
lahf
add
cmp
pop
mov
dec
push
add
jo
sbb
int3
jle
loop
je
insb
ret
inc
nopl
test
adcb
mov
push
mov
cmp
inc
mov
mov
xchg
shl
incl
fs
test
ret
mov
lea
aas
pop
push
mov
fsub
mov
test
rclb
cld
outsl
mov
mov
mov
pushl
inc
or
mov
inc
clc
mov
cmpsb
repnz
xor
fwait
add
push
cmp
jmp
outsl
es
or
sub
dec
mov
pop
shr
mov
adcl
inc
icebp
outsl
repnz
dec
lea
or
mov
arpl
inc
aad
dec
call
and
and
scas
cmp
or
inc
and
stos
je
mov
add
sbb
rolb
mov
sbb
adc
or
es
rclb
add
nop
xor
inc
add
xor
gs
sub
push
outsl
ss
pushl
add
cld
and
mov
sahf
dec
pop
clc
ja
fadd
and
pop
call
mov
ret
stc
and
fisubs
ljmp
mov
or
fdivr
repz
incb
popa
xchg
lcall
fwait
dec
movsb
jp
ds
push
lock
insb
adc
vsqrtps
shl
xchg
inc
lret
lcall
xor
scas
add
aas
xor
adc
outsb
fwait
cmpsl
outsl
mov
adc
aam
mov
add
pop
xor
lods
call
addr16
or
dec
cld
add
and
cmp
dec
mov
nop
cmpb
cmovb
es
ljmp
xlat
mov
xchg
out
loopne
push
or
add
push
je
lea
popf
push
mov
xchg
cli
cmp
sbb
xor
mov
xor
jp
ljmp
mov
dec
mov
and
push
and
push
xchg
or
sub
scas
push
insl
mov
add
ljmp
or
jmp
xor
or
fs
push
xor
mov
xchg
nop
jg
adc
dec
adc
xor
rclb
imul
rcrb
cs
cmp
cli
push
lret
mov
adc
mov
push
aas
ljmp
sar
mov
inc
outsb
cmp
sub
loop
fcoml
cmp
not
ds
add
dec
jb
clc
pusha
rorl
and
cwtl
mov
std
aaa
mov
lcall
add
stos
decl
popa
push
jne
cmp
jmp
rclb
dec
cmp
iret
dec
ficomps
or
notb
jg
cmp
cmp
or
mov
rclb
loope
cmp
lock
in
cwtl
fldenv
outsl
sbb
jne
push
sub
popf
clc
pop
test
jmp
and
je
xor
shrb
push
inc
mov
and
arpl
or
movb
and
sub
into
mov
aad
xor
sbb
lea
mov
enter
add
mov
insl
xor
mov
clc
push
jge
clc
or
mov
and
mov
push
cmp
enter
aam
sub
jbe
inc
xchg
mov
ss
xadd
mov
out
adc
or
and
cli
push
lock
jmp
xchg
fbld
data16
sub
fiadds
jmp
dec
sub
lock
or
mov
cmove
jo
pop
cld
repnz
push
gs
addl
into
inc
aaa
cmp
push
jno
test
std
call
lods
lods
inc
fcomi
lock
stos
adc
inc
lock
add
dec
cmp
sub
add
out
ret
add
add
sub
or
in
push
out
pop
mov
les
lods
aas
fs
scas
adc
test
in
mov
and
inc
fcoml
mov
add
dec
push
jecxz
pop
bound
inc
pop
sahf
aas
mov
add
cwtl
jo
or
loop
push
or
push
rolb
fstpl
sbb
mov
add
mov
ret
pusha
dec
lock
and
mov
push
mov
dec
jo
cmp
sti
ja
fs
movb
out
mov
adc
push
xor
push
mov
jne
lret
mov
test
jg
aam
mov
lea
bound
xchg
out
cwtl
push
fcomip
scas
jg
pop
popa
ljmp
dec
push
lods
mov
les
pop
or
jmp
mov
push
xor
and
xchg
xor
cmpsl
aam
xor
out
cmp
sub
and
mov
mov
mov
xor
std
jecxz
rcrl
je
push
mov
ds
repz
dec
insb
scas
mov
test
dec
ret
or
shl
add
jne
pop
pop
inc
push
lock
ljmp
mov
or
jne
or
inc
inc
mov
inc
dec
call
loop
loope
add
int3
in
rol
hlt
por
pop
lock
aam
sti
test
insb
enter
mov
sub
pop
sbb
aam
iret
in
js
mov
scas
test
add
stc
sub
or
aad
fisubs
mov
movsb
das
xchg
push
add
lahf
mov
mov
clc
ret
jns
sti
mov
xchg
or
jmp
mov
fadds
add
pop
les
jge
mov
jmp
or
das
fcomps
divb
ret
scas
sbb
loopne,pn
jb
jb
test
add
xor
jmp
in
test
insb
push
cmp
and
add
test
cmp
insl
sarl
dec
push
inc
dec
push
xor
cli
sbb
inc
aad
ljmp
outsl
mov
dec
pop
and
cmp
les
inc
adc
cmp
jne
and
insb
loopne
mov
rolb
mov
sbb
jp
xor
icebp
pop
out
mov
gs
ljmp
fisubrl
cmp
push
in
sbb
cli
and
leave
leave
push
pushl
dec
sbb
push
push
add
dec
xor
cmc
mov
outsb
ret
sbb
popa
movsl
test
adc
jae
jne
add
popa
loope
inc
add
dec
and
mov
push
push
xor
ret
mov
enter
lret
adc
test
and
add
push
pop
or
jge
xor
shlb
cmpsb
mov
out
xchg
movsb
fisubrs
orb
enter
lock
mov
mov
in
push
or
repnz
test
adc
inc
push
xchg
fs
mov
test
movsb
xlat
out
inc
jbe
outsl
dec
or
pop
mov
stos
lods
test
or
outsl
test
inc
add
sbb
xchg
je
jg
or
cmp
xchg
pop
inc
sub
cmp
jae
fildll
test
inc
xchg
jle
and
inc
lahf
add
jb
inc
test
and
rcrb
ljmp
test
push
xchg
jo
adc
int3
fwait
icebp
adc
cmp
sbb
jl
sti
loope
clc
incb
mov
add
mov
inc
sub
sahf
lahf
xchg
ds
jl
outsl
and
out
xchg
dec
pop
pop
lcall
lds
jl
cmp
test
mov
leave
mov
push
leave
sub
xlat
aaa
dec
loopne
int3
pop
je
sti
dec
mov
mov
rolb
or
outsb
cmpsl
jle
jbe
clc
je
inc
rcll
sbb
push
add
or
les
ss
inc
jo
xchg
sub
mov
sub
adc
or
mov
popa
cmpsb
pusha
and
and
lods
sarb
cld
cld
call
pop
ret
and
daa
push
test
xor
rcr
test
or
push
adc
adc
mov
insb
pop
negb
mov
fisubrs
sbb
sub
inc
xchg
pop
mov
call
xor
fmuls
push
sbb
repnz
xor
rcrl
adc
fsubrs
fdiv
jb
jb
or
pop
aad
lret
adc
clc
mov
sub
test
out
pop
fsubl
pusha
adc
inc
inc
pop
js
mov
push
jecxz
sbb
ljmp
clc
mulb
mov
xor
push
cltd
cwtl
cmp
inc
fadds
push
sub
jno
notl
push
jg
dec
enter
mov
loop
cmpb
jne
call
and
or
cmp
mov
push
add
sub
inc
aam
push
sbb
jmp
frstor
pushf
add
sarl
scas
cmp
fwait
lods
addb
jge
aad
xchg
or
mov
add
cli
mov
cld
mov
push
shl
sbbb
and
loope
mov
push
jecxz
in
or
sub
lods
inc
into
repz
ljmp
push
sbb
mov
subl
shrl
inc
fsubrs
inc
dec
jg
addl
mov
fiadds
push
les
mov
mov
jl
mov
ret
mov
mov
mov
sahf
adc
mov
and
test
mov
add
pop
gs
cmp
cmp
push
or
stos
mov
mov
sbbb
mov
add
mov
scas
jmp
outsl
out
push
lea
pop
push
mov
or
sub
sbb
push
and
hlt
inc
or
and
hlt
test
push
mov
outsb
mov
mov
les
lret
loop
mov
out
push
cwtl
int3
jns
loope
or
cld
pop
mov
cmp
sahf
cltd
jp
incl
cmp
adc
push
xchg
xlat
mov
dec
push
dec
je
inc
mov
mov
mov
push
test
and
inc
or
mov
jmp
xor
orl
test
repz
aas
mov
push
mov
mov
adc
fnsave
aam
call
cmp
insb
cmp
adc
mov
shll
sbb
mov
sub
dec
imul
data16
cmpsb
adc
jbe
inc
lods
jne
xchg
mov
loope
cli
pop
xchg
cmp
call
cli
mov
les
add
sub
fistl
adc
je
je
xchg
or
mov
call
xor
mov
test
scas
pop
cmp
sti
pop
gs
mov
jne
cmpsb
dec
cltd
xchg
out
lock
push
aad
sti
mov
lret
xchg
out
inc
inc
jmp
fistpl
cmp
sub
shlb
xchg
or
std
lock
push
mov
icebp
aam
lea
push
cmpsl
adc
popa
adc
shl
inc
jne
insb
or
popa
push
jnp
mov
adc
orb
aam
adc
cmp
cmc
dec
incl
and
int3
push
imul
cli
or
xchg
cmpsb
fs
dec
or
jle
pop
adc
ret
inc
and
iret
xor
mov
scas
and
add
ret
pushl
xor
sbb
test
add
incl
add
test
sbb
outsl
rclb
inc
lock
std
cmp
adc
decl
mov
cmpsb
sbb
dec
flds
cmpsb
insb
dec
outsl
cmp
clc
dec
pusha
add
pop
inc
in
cmp
and
push
pop
mov
xchg
lret
inc
push
inc
fdivrl
jne
int
mov
adc
stos
rdpmc
insb
sbb
xchg
ret
or
pusha
sbb
ret
shlb
mov
push
shll
jae
imul
and
mov
fldl
mov
inc
int3
dec
inc
mov
and
ret
dec
pop
add
xchg
call
mov
call
cmpsb
or
jbe
inc
sbb
call
add
mov
insb
leave
cmc
cmpsb
shr
add
dec
lock
xchg
lcall
icebp
orb
xlat
dec
test
dec
jo
inc
nop
sbb
nop
dec
cltd
lock
or
pop
jle
mov
iret
pop
add
adc
ljmp
inc
adc
push
in
adc
push
dec
ret
and
pop
inc
js
lock
in
jle
ljmp
pusha
cld
xor
fidivs
mov
gs
sub
jo
cltd
add
inc
lret
xor
xor
ds
call
mov
sub
arpl
outsl
xlat
rolb
cmp
sub
ret
and
cltd
add
mov
xchg
rcl
ret
stos
mov
or
add
popa
mov
hlt
and
mov
fs
adc
adc
out
pop
fdivrl
in
mov
push
into
fisubrs
pop
int
adc
lock
adcb
ficoms
jecxz
xor
rcrl
push
nop
in
je
pushf
mov
xorb
adc
mov
jg
mov
pop
mov
pop
rcll
mov
lcall
push
ret
cld
in
jne
pushf
les
pop
sub
push
adc
shl
mov
aad
movsl
jle
scas
lcall
gs
pop
fdivr
ja
pop
and
fdivrl
je
xlat
sbb
test
xor
add
aad
cmpsb
fimuls
or
mov
push
sbb
cmp
test
loopne
xor
xchg
add
clc
fnstsw
and
ljmp
lods
cld
adc
fxch
lea
push
test
push
push
or
pop
sahf
call
gs
adc
mov
mov
mov
lods
dec
push
adc
lret
or
arpl
lods
in
out
push
das
and
xchg
jbe
dec
lea
or
and
imul
int3
clc
addl
and
mov
je
in
insl
push
mov
data16
in
int3
xlat
jmp
movl
xchg
xchg
dec
sub
mov
mov
inc
sti
mov
and
push
mov
xor
inc
sbb
movsb
push
loope
imul
inc
dec
loope
adc
loopne
in
cmp
add
into
incb
cmp
stos
push
add
bound
je
andb
cmp
loope
shlb
mov
xchg
pop
inc
rolb
sbb
data16
test
mov
cs
lahf
clc
fwait
pop
pop
push
mov
int3
xchg
or
add
test
dec
aam
sbb
cmp
sbb
xchg
add
insb
lods
add
insb
lret
add
clc
orl
sbb
ret
cmpsb
pop
add
push
sarb
lret
lea
cmp
js
outsl
clc
sbb
pop
test
insb
stos
std
jne
pop
in
add
pushf
fisubl
lods
call
aad
cli
testl
mov
push
xchg
call
push
fwait
cli
pop
sbb
int3
mov
pop
test
push
inc
int
sbb
mov
ljmp
mov
out
inc
into
movsb
out
test
fcompl
clc
mov
fiadds
popl
add
mov
sbb
fwait
push
mov
fidivrs
xchg
mov
mov
add
adc
jmp
xor
scas
push
and
push
iret
xor
repz
sub
mov
adc
xor
sub
hlt
push
jno
xor
rcrb
cmc
clc
dec
ret
clc
shlb
jle
call
imul
into
je
cmp
and
push
inc
and
je
mov
inc
je
call
sbb
rcl
push
or
ljmp
mov
or
adc
sub
push
cmp
ror
rcr
push
ret
pop
sub
push
decl
or
fwait
jb
inc
sub
in
add
sub
cs
faddl
mov
add
rcl
add
fimuls
add
push
adc
push
push
mov
push
cmp
fiadds
std
push
xchg
enter
mov
sbb
ds
shlb
cld
xchg
pop
or
mov
in
sarb
pop
xor
xorl
adc
pop
outsl
ljmp
arpl
push
or
sbb
fisubl
xor
mov
adc
jae
mov
test
rorl
mov
mov
out
lahf
dec
mov
or
and
cmp
sbb
push
mov
clc
mov
mov
pop
pushl
jno
mov
and
cld
addl
push
mov
and
pop
jle
inc
add
mov
inc
cmp
dec
cmp
pop
mov
les
jl
or
nop
out
subl
sub
nop
data16
sarb
cmc
mov
aam
insl
nop
inc
jae
mov
cmp
and
dec
ljmp
jb
add
or
adc
xor
mov
add
adc
xchg
jg
jmp
stc
add
movsb
in
test
test
push
mov
movsb
inc
adc
lret
mov
inc
inc
sahf
scas
dec
mov
cmp
pop
subl
mov
int3
push
out
enter
sbb
rorb
ljmp
mov
push
test
and
xor
outsb
out
push
iret
add
cwtl
test
movsb
jbe
and
jb
sbb
lret
cmp
or
xchg
jbe
push
jo
fmull
sahf
loop
loop
in
sti
nop
pop
in
fimull
or
mov
ret
repnz
cmp
inc
pop
mov
push
inc
notl
inc
add
xchg
ljmp
push
mov
mov
add
jne
imul
in
push
or
sub
add
xorl
bound
push
xchg
mov
int
popf
mov
pushl
mov
popf
sub
lods
push
rolb
cmc
dec
fldl
pushf
sahf
repz
adc
punpcklwd
adc
in
pushl
xchg
add
pusha
adc
data16
push
push
inc
mov
mov
inc
xor
mov
cmpsl
icebp
xchg
imul
adcl
sbb
or
sbb
adc
sbb
fimull
push
int3
jne
add
sub
xchg
push
aam
pop
mov
xchg
mov
arpl
and
sbb
dec
xchg
rol
inc
push
cli
add
stos
pusha
push
jmp
or
inc
out
xchg
jle
int3
pop
mov
test
sub
inc
xchg
inc
mov
or
or
add
add
jb
leave
push
ret
pop
xor
cmc
movb
xchg
mov
cmp
adc
xor
dec
xchg
andl
push
and
and
fimuls
jne
push
push
cld
pop
pop
inc
add
fs
push
in
stos
push
inc
test
cli
pop
mov
push
dec
xchg
push
dec
push
add
icebp
mov
mov
and
fsin
sub
adc
gs
adc
subb
dec
in
push
xor
cmp
adc
mov
cmp
loope
test
adc
jl
decb
sub
mov
scas
mov
mov
arpl
dec
mov
jl
xor
iret
call
mov
insl
data16
fists
es
shr
add
scas
add
incb
inc
dec
fcom
das
mov
push
subl
enter
lea
sub
sbb
lea
mov
icebp
cli
pop
dec
push
sub
mov
lcall
cmp
fs
test
add
cmp
lcall
dec
push
pxor
inc
add
int3
nop
rcrb
add
cs
js
ret
mov
aaa
lock
sbbl
decb
sub
add
sbb
mov
sbb
add
jo
cmp
push
push
outsl
cmp
dec
ret
movsb
sbb
in
jecxz
popa
cwtl
rcrb
shrb
add
negl
xor
and
jae
sbbb
push
add
add
add
pop
pushl
fwait
iret
mov
jbe
xor
lea
adc
mov
push
xor
jg
xor
je
aam
idivl
or
adc
rol
hlt
sub
xor
sarl
sbb
nop
dec
jno
mov
and
nop
aaa
dec
lcall
aam
aaa
jg
je
subl
mov
fistps
dec
rorb
test
jle
inc
and
aam
cmp
loopne
movsl
cmpb
dec
cld
dec
jge
pop
in
xor
dec
mov
jge
xlat
push
xor
lahf
add
add
add
leave
popf
test
mov
and
inc
dec
pop
insb
inc
les
in
push
xchg
dec
shlb
loopne
dec
out
scas
rcll
dec
adc
mov
mov
adc
dec
jp
stc
jae
pop
stos
cmpb
je
push
or
mov
jae
test
out
inc
data16
insl
pushf
cld
and
add
int3
gs
ret
je
loop
sbb
loopne
push
inc
cmpsb
xor
and
dec
or
add
sub
inc
mov
fmul
cmp
movl
add
in
cmp
enter
rcrb
test
fisubrs
jb
gs
xor
xchg
std
mov
mov
loopne
inc
push
leave
decl
xchg
cmp
mov
add
in
mov
in
pop
lock
testb
ror
inc
mov
mov
mul
cmp
or
cmpsb
push
xchg
int3
mov
or
push
sbb
push
dec
mov
movsb
lret
inc
test
outsl
or
inc
std
insb
push
inc
ret
add
popa
add
adc
stos
pop
xlat
fstpt
ret
xor
push
sub
jmp
push
aas
inc
inc
fdivp
push
decl
mov
jmp
popf
push
sub
aam
jge
xchg
mov
mov
inc
je
outsb
jecxz
or
stc
inc
ss
push
mov
dec
cmp
test
mov
sub
push
mov
int3
out
nop
jmp
aam
test
rclw
add
cvttps2pi
mov
js
shr
push
or
pop
mov
ret
fildl
outsb
jb
in
in
jl
out
stos
or
jnp
data16
lret
xor
mov
mov
or
data16
inc
popa
pop
loopne
in
xor
sub
movsl
xchg
adc
lock
nop
clc
rorb
lds
bnd
push
popa
add
lret
or
inc
pop
clc
adc
insb
add
push
jge
hlt
int3
adc
ja
and
mov
movsb
outsb
or
adc
and
loop
cltd
sbb
dec
inc
inc
fistpl
inc
icebp
lea
test
push
daa
ljmp
in
and
pusha
xchg
gs
lods
mov
test
call
and
call
je
inc
loopne
bound
sub
xor
test
cmpsl
mov
std
mov
fmull
xchg
cwtl
xor
pop
ret
insw
inc
xor
std
inc
mov
dec
or
loopne
es
ret
lods
jp
lock
test
lret
out
loopne
fcomps
push
push
mov
es
bound
mov
add
mov
mov
mov
idivl
rcl
or
lock
test
jmp
js
clc
fmull
subb
sarb
hlt
popf
jb
ret
stc
movb
sbb
mov
dec
sbb
push
out
mov
fwait
jp
push
int3
scas
out
jp
fdivs
aam
push
outsl
add
mulb
cmp
and
add
xor
insb
sti
mov
fisttpl
movsl
rorb
push
std
push
push
xlat
jecxz
test
nop
cs
inc
pop
and
cmp
in
xor
fsubrs
cli
lods
dec
xor
pop
fimull
jecxz
sbb
cld
nop
adc
lea
mov
xor
jge
jne
mov
std
xor
mov
or
mov
inc
and
mov
lahf
mov
jno
daa
jb
sub
inc
pop
mov
adc
je
adc
sub
jl
repnz
nop
mov
ljmp
stos
and
call
dec
ds
push
push
mov
jae
or
sbb
icebp
int
push
dec
push
test
mov
mov
ficomps
mov
jle
sbb
test
xchg
cmp
loop
rcll
sub
add
mov
sub
out
ror
jle
clc
sub
add
or
js
mov
fsubrp
es
push
call
cmp
xchg
adc
ret
ja
mov
pop
jo
call
and
mov
pop
add
dec
movb
lret
bswap
ret
loop
add
inc
in
sub
mov
push
mov
sbb
adc
loope
xchg
add
ret
insb
pushf
jne
push
jle
sub
clc
hlt
inc
mov
adc
cwtl
lea
add
pusha
rclb
pop
push
sbb
pop
push
leave
mov
xor
adc
out
mov
dec
aas
xor
mov
fdivl
dec
jmp
sub
jmp
test
test
inc
rolb
out
ds
xor
dec
jmp
xor
mov
arpl
cli
mov
sbb
pop
lods
ljmp
jg
outsb
adc
incl
add
int3
or
mov
mov
ds
jl
inc
clc
mov
inc
js
jl
mov
cwtl
cld
mov
jno
enter
fmulp
add
fmul
mov
incb
bound
jae
push
movsb
setle
lret
lock
lods
scas
dec
pop
outsl
mov
shll
scas
pop
add
out
inc
sbb
popa
add
add
loope
mov
lods
icebp
push
les
mov
cmp
cli
das
mov
imul
cwtl
lea
lock
ret
adc
push
pop
adc
mov
pop
mov
fmull
fldt
dec
push
fmulp
push
fiadds
jmp
mov
iret
cli
fdivs
cmp
mov
inc
out
xlat
out
xchg
or
push
xchg
ret
cmp
sub
sbbb
mov
push
lock
loopne
enter
jle
xor
add
dec
outsl
aam
push
fisttpll
and
mov
cmp
xchg
push
hlt
pusha
or
fistpl
inc
inc
shlb
push
insb
mov
sbb
inc
jg
scas
mov
or
test
das
xchg
outsl
inc
in
out
mov
xchg
jle
pop
insb
loopne
ret
out
js
cli
lds
addb
mov
push
sbb
or
outsb
into
cmc
ja
sub
pop
jb
mov
jae
repz
sbb
push
xchg
xor
and
lds
rorb
punpckhdq
xor
je
xchg
outsb
es
and
fsubl
xchg
push
pushf
pusha
int3
mov
test
pop
test
mov
or
repnz
arpl
pop
dec
mov
es
jmp
mov
or
je
jns
lret
enter
or
int3
movsb
fs
add
mov
adc
push
call
aam
inc
rorb
std
clc
sbb
fwait
cwtl
mov
or
mov
dec
fdivl
fstps
iret
push
adc
roll
es
sbb
adc
mov
pop
add
mov
inc
shrl
or
adc
adc
dec
mov
inc
or
stos
iret
jl,pn
jle
or
jnp
and
adc
sub
test
sbb
sahf
push
sub
inc
cmp
inc
sub
pop
adc
fcmovnb
add
add
inc
test
in
pop
sub
adc
xchg
adc
or
jmp
push
lock
loop
outsb
add
adc
xchg
hlt
jo
cwtl
movsl
incb
inc
js
adc
jnp
cmp
or
nop
out
ss
inc
sub
sbbl
cmp
stc
std
adc
push
lret
arpl
mov
push
mov
sub
jo
in
xor
es
jp
adc
mov
iret
aam
sbb
mul
inc
and
clc
or
add
add
adc
idiv
or
pop
jge
inc
add
or
jb
movl
and
mov
cld
lea
or
mov
mov
adc
xor
adc
les
cli
jae
adc
and
jecxz
cmpsl
cld
add
mov
pop
fs
subb
movsb
xor
icebp
add
data16
scas
mov
adc
push
hlt
loopne
inc
or
pop
sub
add
icebp
adc
pusha
xchg
les
sahf
push
or
loope
push
iret
inc
xchg
push
loopne
xor
lea
mov
adcl
pop
aam
mov
pop
pop
ret
fnclex
mov
jne
in
clc
stos
adc
pushf
mov
xor
mov
jo
push
clc
pop
in
dec
lock
mov
call
xor
and
mov
jmp
mov
push
push
xchg
sub
jge
mov
addb
add
ret
jnp
decl
mov
mov
mov
jmp
fildl
and
mov
add
add
pop
or
adc
push
sub
add
xchg
lea
inc
or
lock
out
addl
mov
add
ds
popa
scas
mov
sbb
mov
pmaxub
cmp
cmp
push
xor
pushl
outsb
adc
insl
add
loopne
orl
fimuls
clc
push
or
add
data16
hlt
sbb
mov
mov
outsb
divb
push
addl
jp
pop
mov
mov
incb
inc
cld
push
add
add
push
mov
xor
jle
and
push
int3
sbb
xor
in
cmpsb
daa
xchg
pop
xchg
cmp
repnz
mov
dec
pop
mov
mov
int3
mov
jae
ljmp
les
adc
dec
cmp
mov
jg
or
mov
pop
scas
add
int3
adc
adc
or
in
sbb
mov
movsb
and
cs
arpl
sbb
imul
cmp
dec
add
mov
pop
or
movsl
psubsw
lret
jecxz
sbb
ret
and
fs
out
adc
lock
jbe
loop
adc
jmp
and
cld
xor
mov
mov
xor
std
addr16
sbb
into
repnz
add
in
stos
clc
dec
int3
cmp
lcall
negb
fs
int
movsb
add
push
or
fs
mov
call
add
addb
arpl
push
push
fdivr
call
test
shlb
adcl
cltd
jne
aas
and
xorb
xor
out
and
xor
mov
and
jge
mov
clc
paddusw
jmp
test
jne
xor
stos
orl
jne
push
mov
lcall
and
lock
pop
mov
inc
nop
pop
push
fs
push
mov
out
in
movsb
push
xorl
or
or
cmp
imul
loopne
in
sub
movsb
push
adc
sti
sub
sbb
outsb
mov
jb
push
pop
jne
lock
mov
inc
test
inc
popa
push
mov
addb
rclb
add
pop
mov
adc
je
lret
sbb
xchg
xor
mov
mov
cmp
add
cmpsb
bound
sbb
inc
in
mov
fsubs
pusha
jl
ret
lret
in
push
and
decl
add
scas
imul
push
xlat
les
cmpb
mov
xor
and
aas
lods
rcl
xchg
je
cwtl
lods
jbe
mov
call
call
shrl
insb
idiv
clc
test
leave
pop
cmc
int3
imul
dec
outsb
movhps
movsl
sbb
shlb
inc
xor
cmp
pushf
aad
sbb
add
cmp
sbbl
inc
pusha
enter
xor
dec
mov
push
sub
mov
push
mov
adc
cmovae
fsubr
add
adc
cmp
pop
cld
dec
add
mov
inc
data16
inc
dec
mov
inc
adc
jne
mov
adc
mov
test
ret
push
pop
imul
mov
jo
test
fisubrl
cs
cmp
cld
inc
pusha
cmp
push
add
adc
lods
bound
cwtl
test
mov
test
lock
sub
test
ret
int3
add
xor
wrmsr
lahf
fcmove
inc
dec
cli
daa
pop
push
adc
movsb
pop
mov
hlt
pop
mov
add
fidivrs
add
js
std
data16
add
mov
rolb
call
or
imul
push
jl
add
sbb
add
jg
mov
std
pop
xor
add
data16
and
fidivl
incb
loopne
cmp
jne
pop
push
cmp
xchg
ret
filds
pop
inc
lcall
add
stos
shlb
std
mov
adc
outsb
xor
or
mov
pop
mov
inc
fistps
jae
xchg
adc
fists
pop
scas
cmp
arpl
push
lock
bound
push
push
pop
ljmp
inc
xor
cmp
fs
or
mov
cmp
into
push
add
or
push
movsl
mov
je
cmp
icebp
or
mov
push
mov
push
jae
xor
pop
lock
arpl
pushl
cmp
xchg
or
cmp
lods
dec
jl
push
mov
fimull
fsubs
pop
push
dec
xor
cmc
add
pop
adc
push
orl
cmp
sub
std
pop
xchg
call
out
or
push
adc
test
ss
nop
xor
insb
or
insb
mov
int3
and
lds
test
push
adc
jo
inc
push
sub
push
add
adc
mov
dec
jle
test
sbb
add
subl
pusha
jb
jne
mov
jecxz
cwtl
xor
xor
clc
push
adc
mov
ret
psubsb
mov
pop
insb
sbb
mov
dec
jbe
mov
je
add
test
inc
and
mov
inc
pop
lock
arpl
arpl
adc
dec
inc
das
rolb
mov
pop
pop
sbb
or
iret
mov
jge,pt
loopne
loop
mov
addb
fbstp
lock
push
insb
cmp
inc
mov
les
popa
and
daa
ds
test
push
jb
bound
rorb
add
inc
add
js
adc
sub
popl
xor
out
inc
mov
or
lods
fwait
test
dec
xchg
les
lods
cli
call
jb
psraw
dec
clc
cli
inc
mov
mov
rolb
add
mov
cmp
jo
add
outsb
push
mov
jmp
shlb
lock
cltd
mov
inc
icebp
test
xchg
icebp
mulb
and
and
mov
sub
cs
mov
sbb
out
iret
jae
jl
imul
mov
sbb
lea
lcall
pusha
ds
inc
adcb
icebp
aaa
mov
inc
add
and
and
xor
ljmp
ljmp
ss
mov
or
push
lret
out
outsb
xchg
push
cli
ret
xchg
aaa
out
mov
or
mov
orl
insl
test
dec
push
dec
inc
rorb
xor
jns
inc
add
dec
sbb
insl
ja
test
xor
add
mov
aam
les
pop
addl
push
lods
sar
adc
add
xlat
int
cld
sub
in
imul
or
push
fadds
jns
cmp
mov
jp
loop
mov
add
jmp
loopne
adc
adc
add
shrl
mov
and
negb
hlt
inc
or
and
clc
lods
push
out
and
gs
and
or
add
mov
hlt
fldenv
lea
lods
mov
sbb
mov
adcl
mov
mov
arpl
or
push
xor
or
orl
cmp
xchg
ret
jl
push
sbb
cwtl
scas
or
or
dec
loope
dec
ret
cld
call
je
ret
testb
inc
and
inc
aam
pop
aam
clc
jge
mov
std
or
mov
dec
dec
dec
adc
mov
mov
sbb
add
test
push
sbb
or
push
dec
adc
adc
sbb
leave
add
inc
roll
or
subb
dec
sbbb
pusha
xor
ljmp
data16
adc
mov
je
mov
xor
push
das
js
push
scas
lret
pusha
push
mov
mov
pop
and
inc
push
call
ret
call
inc
shl
push
retw
lea
fildll
pop
and
shll
cli
push
cmp
les
mov
mov
adc
cmp
mov
jbe
jecxz
fucomi
xchg
arpl
data16
lcall
xchg
test
or
sub
fdivs
jno
movsb
je
sub
and
fimull
cmp
hlt
push
sub
dec
jecxz
xchg
cmc
sbb
push
or
js
adc
shlb
leave
rclb
cli
dec
ljmp
pusha
lret
add
sbb
lock
add
ja
inc
jl
or
adc
sbb
pop
in
fs
sbb
or
mov
push
inc
add
stc
add
sar
cmpsb
cmp
mov
add
fadd
mov
pop
out
es
xor
pop
sub
push
pop
xor
xor
movsb
test
push
adc
cmpsl
xor
orb
sahf
aas
mov
pop
inc
jmp
dec
call
push
popa
je
pop
mov
push
cmp
ja
std
dec
insl
and
cmp
fdivs
dec
out
hlt
jne
aam
add
stos
imulb
lock
fnstsw
and
fs
mov
adc
rcl
and
inc
es
add
push
sub
outsb
mov
ljmp
mov
lret
or
push
dec
int3
add
push
adc
inc
push
xchg
hlt
jmp
mov
mov
ja
dec
lcall
mov
inc
jbe
pop
fmuls
rcrl
es
cmp
ds
xchg
test
add
idiv
sub
xor
test
jp
fcomps
xor
ljmp
fmuls
dec
js
aad
pushf
int3
cmp
and
and
push
add
inc
aaa
cli
xchg
mov
xchg
scas
inc
push
ret
jb
jne
inc
cmpb
shl
data16
arpl
rclb
std
je
repz
les
loopne
ja
bound
push
fs
sbb
inc
jg
push
cld
cmc
push
mov
aaa
mov
decl
enter
or
pop
call
in
add
jle
mov
mov
stc
hlt
add
mov
shl
bnd
sub
or
push
adc
add
dec
std
xor
jg
mov
dec
mov
shrl
push
dec
xor
inc
gs
pusha
mov
push
lahf
add
jp
or
cmpb
pusha
jne
push
jne
adc
sbb
pop
push
xor
pop
mov
cwtl
push
pop
cld
inc
lret
inc
jl
add
and
imul
std
xchg
mov
xchg
inc
mov
xor
fcmove
divl
iret
mov
xor
popf
in
ret
aas
jbe
add
imul
xchg
pop
push
xor
mov
rol
xchg
movsl
pop
cld
das
mov
pop
test
or
adc
lret
ret
push
dec
mov
mov
gs
sub
xor
mov
rorb
jecxz
xchg
xchg
push
test
in
orb
or
gs
test
push
aaa
lock
or
xor
ror
out
shrb
mov
ret
loopne
test
aam
pop
ret
mov
jo
push
cli
push
push
fld1
lods
pop
cs
int
rol
data16
out
clc
lea
cmp
inc
pushf
jecxz
daa
loop
adc
faddl
xchg
dec
lcall
lea
lds
cmp
es
call
add
dec
ret
inc
sub
out
mov
enter
inc
filds
aaa
and
call
lea
rolb
jo
inc
sbb
lea
in
mov
mov
adc
out
inc
push
dec
iret
mov
fildll
cmp
shll
push
and
push
gs
mov
les
es
adc
int
mov
jb
cmc
add
pop
or
add
sub
loopne
jbe
xor
ficompl
loope
push
fwait
sub
aaa
and
sub
cmp
xor
or
leave
int3
mov
xchg
ljmp
jl
pop
stos
lods
push
das
aaa
or
mov
add
or
jp
outsb
mov
mov
je
pop
pushf
js
inc
loop
test
xor
gs
dec
add
test
xor
sbb
xchg
in
ds
mov
int
mov
mov
push
mov
lcall
and
jb
push
jp
dec
xchg
loop
das
gs
cmp
mov
fidivrs
dec
xor
mov
frstor
xchg
mov
enter
xchg
lock
cmc
loop
jge
jle
dec
fcoms
push
mov
xchg
rolb
repnz
out
jmp
push
add
adcb
les
js
adc
inc
adc
loop
js
add
sbb
add
add
mov
push
jp
xchg
aad
dec
jecxz
cmp
xchg
jo
mov
pop
cld
push
sar
rcll
rclb
add
cwtl
add
mov
pop
jecxz,pn
lret
repnz
ret
dec
xor
push
adc
jo
jge
or
repnz
ds
sbb
cli
jno
add
pop
arpl
pop
inc
mov
pop
cmpsb
lods
dec
loopne
iret
and
addb
push
xor
adc
mov
and
dec
inc
push
pop
mov
int3
sbb
imul
enter
mov
jp
push
repnz
stos
data16
or
cli
out
push
stos
test
fs
je
inc
cmp
pop
clc
cmp
xor
push
inc
jb
xor
add
mov
mov
je
and
add
adc
add
mov
aad
mov
pop
push
out
add
cltd
lret
adcl
iret
call
pop
or
push
cs
insb
cltd
sbb
mov
jg
rcrl
leave
imul
or
ja
mov
dec
jb
adc
sub
add
sub
test
stos
jge
sub
mov
les
pop
fs
push
test
enter
push
xor
pop
xchg
lahf
or
ja
mov
adc
stos
mov
aaa
rcll
pop
inc
daa
movsb
inc
fcoms
fucomip
cmp
pop
incb
and
rolb
test
or
insl
lea
shr
ljmp
mov
lock
sarl
ret
add
inc
mov
push
jbe
xor
shrl
jp
inc
jb
jne
out
lock
adcl
or
cmp
and
jnp
cmp
push
mov
std
cli
fisubl
daa
mov
jle
or
or
loopne
js
ljmp
add
push
into
and
ss
and
pop
sub
aam
ficoml
add
push
int3
call
in
test
imul
or
mov
xor
insb
jne
push
xor
ret
gs
icebp
ss
add
adc
jmp
add
xchg
xor
mov
mov
rorb
cld
sahf
movsb
push
clc
mov
movsl
call
in
std
clc
and
shr
mov
pop
aaa
sub
push
and
push
push
mov
add
pcmpgtw
js
push
inc
push
incb
jge
inc
cli
and
mov
push
mov
into
jbe
and
ds
repnz
cmp
add
or
and
and
imul
data16
push
fiaddl
mov
xor
fwait
movsb
cld
sbb
mov
push
jns
roll
ret
ret
mov
test
andb
sub
imul
subl
rorb
fcomps
mov
sub
push
out
lret
mov
fs
dec
leave
or
mov
dec
push
sub
push
enter
mov
inc
jb
add
adc
pop
cmp
push
shr
enter
mov
nop
pop
aaa
push
inc
xor
lea
subb
inc
xor
cmp
cmp
test
mov
fwait
adc
int3
hlt
jg
fiaddl
cwtl
lods
dec
push
sub
ss
mov
orps
xor
push
adc
sub
pop
sub
inc
push
mov
jge
sbb
rcr
jne
mov
lock
rolb
adc
out
or
int3
push
shl
mov
popa
cwtl
hlt
sub
aam
sub
add
or
lea
cmp
out
fcoms
inc
ss
stc
js
pop
sbb
add
addr16
jo
loopne
inc
js
rcl
in
jge
inc
clc
les
clc
and
lock
jne
mov
jae
or
jg
bound
add
nop
dec
and
outsb
jo
movsb
ret
popf
jbe,pt
dec
adc
pushf
cwtl
mov
cmp
pop
dec
clc
hlt
add
mov
leave
jp
mov
lret
test
loopne
lahf
stos
fdivrp
xor
pop
inc
repnz
sbb
adc
hlt
inc
lret
outsb
js
or
fcmovne
stc
push
test
inc
rclb
rcll
loopne
mov
adc
inc
clc
clc
cli
xchg
dec
repnz
rorl
xor
imul
push
aam
stos
test
mov
push
in
add
mov
jno
inc
hlt
pop
add
iret
movsb
mov
ficompl
cs
je
adc
loopne
xor
pop
mov
inc
dec
cld
inc
sbb
jb
add
mov
push
push
jmp
fldl
popf
pop
out
test
pop
fidivrs
inc
mov
mov
int3
sti
aam
xor
or
dec
ljmp
loope
mov
fcmovu
test
jb
clc
fildll
out
push
cmp
test
in
das
add
fmuls
sahf
xor
add
stc
jo
call
xor
rcrb
pop
xor
push
daa
add
mov
hlt
sub
cmp
ret
fcmovu
mov
insb
or
cwtl
in
jb
pop
sbb
sbb
pop
cmp
sub
in
sbb
dec
cmp
fidivl
xor
lea
pop
imul
mov
push
decl
loopne
mov
test
mov
imul
aam
subb
js
inc
lock
pushf
jne
shlb
add
sub
sbb
jle
cmpsl
fistpll
ljmp
ficoml
fimuls
repz
mov
xor
add
mov
ror
adc
je
pop
dec
dec
mov
loopne
outsb
jl
test
and
push
test
cld
shr
incl
add
add
xor
int3
bound
xor
mov
out
xchg
xorb
jg
cwtl
add
and
cs
and
inc
push
stc
add
mov
or
clc
hlt
mov
xor
cmpsb
daa
fildll
pop
push
fwait
xchg
push
cmp
rorl
push
rcrb
incb
clc
scas
mov
inc
xlat
inc
mov
jne
jb
addb
xchg
xlat
jmp
sar
jb
je
mov
test
or
inc
aad
ror
sbbb
ja
setle
mov
addl
bound
mov
fdivl
jge
mov
je
orb
add
add
icebp
adc
popf
pop
sbb
jle
and
nop
stc
mov
test
or
lahf
imul
inc
push
stos
jae
jp
and
mov
add
out
out
sbb
or
hlt
push
ja
mov
jb
jecxz
into
adcb
bound
cwtl
add
or
loopne
push
push
rol
gs
pop
or
add
xchg
push
dec
sbb
in
mov
pushf
lods
icebp
pop
repnz
out
loop
mov
dec
mov
das
push
add
loopne
push
lcall
mov
nop
mov
aaa
sub
or
push
ret
orb
faddl
push
scas
in
or
mov
fidivrl
mov
inc
cli
dec
punpckhdq
xor
add
push
lret
mov
jae
push
lcall
mov
add
pop
addr16
lret
mov
cmpsl
shrb
push
or
mov
sbb
sbb
adc
xor
sub
clc
mov
sbb
scas
push
and
inc
push
ljmp
or
jb
push
test
add
fsqrt
ds
addl
push
jl
in
xchg
out
pop
dec
pop
xchg
push
push
xor
push
arpl
add
ret
out
and
inc
push
pop
clc
fnsave
mov
faddl
dec
jb
ret
repz
insl
adc
repnz
push
push
cli
test
add
je
sbb
fidivs
mov
jl
add
clc
enter
les
mov
cli
les
mov
sarb
ret
cli
add
xor
cmp
add
sbb
popa
jns
ret
xchg
pop
mov
add
mov
sysenter
or
call
xorl
mov
scas
dec
lahf
mov
adc
cwtl
call
cmp
in
mov
add
jo
pop
bound
cmp
adc
sub
xchg
bound
fsubl
and
cwtl
sbb
fs
fsubrl
test
lock
jae
sub
flds
pop
inc
test
push
popa
mov
dec
push
and
add
int3
and
cmovp
xor
hlt
mov
lods
shlb
or
push
inc
add
add
ljmp
pop
or
lcall
mov
jmp
adc
and
inc
mov
stos
ficomps
or
mov
push
int3
xlat
jb
int3
mov
test
xor
out
test
mov
scas
mov
jne
and
call
dec
les
pusha
call
jns
incl
sbb
sbb
add
test
addr16
xchg
enter
mov
and
mov
sub
std
ficomps
jne
xorl
adc
mov
push
aaa
cld
stos
and
int3
jne
bndstx
arpl
faddl
pushf
popa
cmp
ds
je
mov
int3
cmc
pop
cmp
add
jp
jl
shlb
and
sub
cmp
les
fdiv
cvtpi2ps
add
fistpll
lods
or
jbe
pop
pop
mov
sahf
pop
je
jb
adc
test
mov
cmp
xor
dec
push
cmpsb
inc
push
or
movsb
push
ret
mov
nop
dec
add
mov
add
xor
and
outsb
add
mov
ljmp
and
nop
and
lods
stc
jg
js
mov
repnz
push
mov
adc
add
xchg
sub
add
dec
jle
loopne
out
push
adc
push
fmulp
jge
mov
add
hlt
fistps
imul
mov
xor
or
push
push
push
lock
ret
sarb
int3
or
jno
fsubrs
ret
mov
adc
sbb
lods
or
lret
outsb
sbb
add
push
jbe
rcrb
add
inc
mov
push
sbb
mov
lcall
loope
lcall
xchg
pushl
xor
add
mov
call
int3
mov
call
ljmp
adc
fisttpl
or
xor
sub
push
mov
mov
int3
les
aaa
shr
sub
data16
push
mov
cmp
or
xor
cmp
add
aas
mov
nop
or
jp
imul
int3
push
mov
mov
pop
inc
ret
fsts
push
in
fs
int
repnz
mov
cmc
cmc
pop
mov
push
les
out
sti
data16
mov
aam
xor
addr16
test
lcall
inc
rcrl
push
inc
icebp
add
loopne
push
jmp
divb
mov
in
inc
mov
xchg
decl
fidivl
mov
and
mov
xchg
es
add
xchg
adc
and
call
lds
and
std
cs
aaa
jle
insb
fwait
xor
aas
les
lret
dec
inc
add
out
inc
lret
add
fs
and
xor
jl
gs
out
loope
push
inc
test
clc
xor
insb
mov
mov
pop
negb
and
xchg
ds
cmp
jo
pop
cs
cmp
push
rolb
add
cmove
add
pop
or
popa
cmp
enter
sub
fisubrl
adc
into
je
insb
and
mov
outsl
push
mov
push
movsl
mov
adc
orb
bound
adc
nop
repz
adc
adc
outsb
mov
repnz
jo
jecxz
sub
pop
test
mov
and
push
addl
and
fiaddl
ror
push
mov
fwait
push
cwtl
xor
jne
inc
cmp
icebp
cmp
and
ret
ret
mov
loope
push
sbb
inc
jecxz
ja
cs
lds
aam
fisttpl
lock
bound
mov
push
adc
and
sub
pop
repz
repz
add
addb
add
xor
cwtl
fmulp
push
lock
mov
mov
ret
xor
sub
inc
and
inc
dec
aaa
or
loop
push
push
rcll
lret
push
shl
lods
adc
fs
clc
nop
mov
orl
pushf
xchg
add
in
mov
sub
pop
pusha
inc
push
or
enter
adc
jp
xor
cmp
jmp
sti
sub
leave
testb
stc
fdivs
das
xor
push
push
push
jl
add
mov
cmp
test
lahf
cmp
cmp
add
out
test
clc
add
cs
push
xor
pop
cltd
arpl
push
inc
push
sbb
mov
movsb
es
mov
push
inc
sub
and
or
rol
push
ret
dec
loopne
push
cmp
imul
sar
outsl
hlt
fs
loope
push
push
and
hlt
push
push
lock
test
pop
gs
shlb
inc
daa
or
push
and
xor
push
call
add
mov
loopne
ficomps
mov
pop
xlat
adc
pop
add
rclb
jo
xchg
pop
pushl
aam
inc
or
loopne
add
lret
inc
push
adc
test
or
dec
add
std
outsl
in
push
cmp
push
inc
rcrl
jo
push
mov
mov
sub
push
mov
pop
shr
jno
jmp
out
pop
lods
sub
insl
push
inc
add
call
sti
pop
cmp
mov
test
mov
fyl2xp1
outsb
in
je
sub
add
test
fdivs
lcall
cmp
push
add
inc
push
push
mov
jl
cld
mov
xor
adc
and
mov
mov
test
jmp
pop
pushf
mov
lock
int3
dec
xchg
sti
cli
and
sar
pop
cmp
pop
bound
mov
out
fisttpl
in
jnp
mov
inc
lcall
mov
sbb
or
fidivs
inc
mov
lock
inc
outsl
inc
jne
adc
or
cld
cmp
mov
pop
rclb
add
dec
adc
adc
push
notl
sub
inc
inc
ljmp
shlb
sarb
sub
es
xor
mov
mov
jbe
xor
xor
sub
xor
fwait
mov
mov
jo
aam
lret
ljmp
mov
std
sbbb
lret
aam
or
push
mov
mov
adc
aaa
jne
lods
out
lea
inc
jmp
and
add
xchg
js
mov
aam
or
mov
add
insb
cld
sub
sbb
mov
aas
or
mov
mov
jne
imul
inc
repnz
mov
sbb
movl
orb
mov
push
popa
mov
ss
inc
xchg
stc
push
jne
sub
push
sbb
cmpsb
loopne
loop
sub
lret
add
push
fcomps
andb
dec
ljmp
push
cld
mov
jmp
loopne
and
lods
inc
test
push
jmp
jne
movsl
ja
sbb
or
mull
mov
incl
push
sbb
jne
jne
cmp
inc
dec
mov
jmp
outsb
ficomps
xchg
xor
test
lea
lret
pop
data16
hlt
data16
dec
clc
pop
add
add
inc
push
popf
add
lods
xor
es
fbstp
add
dec
fldt
add
and
sub
loopne
add
pop
cwtl
lods
jne
nop
ret
jmp
xchg
mov
test
xchg
mov
aam
sarb
test
mov
cs
cmpsb
fiadds
cmp
jl
mov
dec
jl
cmp
in
sub
clc
cmp
dec
sbb
inc
fsubrl
push
ret
push
push
js
fsubrs
pop
cmp
mov
adc
lret
add
pop
fiaddl
addb
push
add
fwait
pop
and
inc
mov
rcr
roll
jb
cmp
pop
test
call
add
sub
xor
clc
add
xchg
pop
in
jnp
daa
stos
pop
in
ja
jp
loope
adc
insb
popf
push
fdivrl
dec
and
test
int3
aam
cs
xor
andl
add
pusha
cld
dec
pop
nop
fsubrs
jmp
jle
dec
xchg
xchg
xchg
orl
cwtl
aas
push
adcb
xor
dec
jge
loope,pn
jb
cmp
sub
jbe
pop
je
push
sub
shr
dec
lea
out
xchg
and
jmp
xlat
imul
and
mov
sbb
mov
add
xor
loop
int
imul
or
addb
push
mov
push
aas
mov
bound
fwait
cmp
fimuls
jle
push
das
test
and
push
mov
sbb
jecxz
clc
data16
cmp
gs
rorb
pop
adcb
dec
mov
mov
push
mov
loopne
add
adc
mov
push
xchg
xor
sar
push
mov
dec
test
and
pop
mov
mov
or
std
add
mov
cwtl
stos
mov
jns
add
sarl
cmp
mov
push
fiaddl
fsubr
inc
cltd
cli
xchg
add
outsb
or
inc
pop
push
adc
or
mov
and
or
dec
cltd
add
add
repnz
inc
pop
out
xor
shlb
or
test
mov
jle
push
sbb
xorl
push
push
push
cs
test
pop
push
mov
push
arpl
test
xlat
sar
mov
pop
and
sar
fsubrl
je
jne
push
cmp
je
and
push
or
pop
xor
adc
leave
add
jle
inc
push
jo,pt
int3
or
stos
push
add
aaa
jne
sahf
add
sbb
sbb
orl
orb
add
imul
pushl
cmp
mov
mov
cwtl
clc
or
mov
cmp
mov
xor
jb
and
adc
shrb
roll
jmp
in
aaa
ds
jbe
rolb
pop
xor
ret
xor
lcall
add
mov
call
or
mov
adc
pushw
fmuls
stos
jns
daa
movsl
mov
int3
jge
adc
bound
test
aam
call
aam
lahf
mov
jne
pop
sub
call
dec
insl
inc
mov
add
adc
pop
sbb
fcmovb
sti
scas
mov
dec
adc
imul
orb
scas
sbb
pop
nop
sub
es
cmp
icebp
xor
cmp
sub
andl
loop
pushl
call
adc
les
jp
mov
cmp
mov
sub
add
clc
adc
push
fimuls
movsl
xor
push
or
cmp
inc
xchg
mov
cmpl
or
lahf
out
imul
mov
movsl
add
lods
and
sub
gs
pop
pop
push
fcmovb
push
sub
pop
cmpsb
sbb
mov
daa
add
jp
dec
in
les
leave
call
mov
mov
int
test
adc
jno
rcll
add
data16
xchg
mov
nop
push
jne
add
pop
icebp
incl
pop
pop
sbb
cld
addl
lea
dec
or
pop
pusha
dec
dec
adc
lret
xor
inc
clc
or
lcall
insb
clc
dec
jae
shlb
mov
jo
jmp
mov
cmc
cli
inc
adc
and
cmp
dec
icebp
call
test
roll
mov
inc
push
mov
subl
loop
lea
sbb
xor
xlat
dec
call
or
les
shll
cs
insl
dec
cmp
push
movsb
je
cmpl
fisubs
addl
cmp
sbb
push
adc
push
or
add
clc
push
stos
bound
bound
pop
xor
sarb
sbbb
sbbl
lcall
add
and
cwtl
lods
sbbb
mov
gs
ds
call
fldl
cmp
jb
in
sub
call
call
scas
lea
mov
test
mov
sub
mov
adc
add
sub
lea
scas
xchg
cli
or
dec
movsl
enter
dec
testl
hlt
add
push
add
mov
add
int
xor
mov
add
or
rolb
adc
push
push
mov
cmp
aam
iret
nop
add
xor
insb
dec
test
jne
mov
push
mov
movl
jge
inc
xchg
dec
mov
mov
mov
ret
lods
stos
mov
sar
lea
add
mov
daa
sbbl
cmp
pop
dec
push
outsl
inc
and
jmp
outsb
sub
in
sahf
pushf
movb
rcrl
movsb
mov
sti
pop
je
aam
inc
in
mov
pushf
xchg
jl
pop
mov
inc
dec
sbbb
dec
mov
sbb
ret
int
bound
add
cmp
lret
incb
jns
push
add
dec
loope
cmpsb
pop
push
adc
stos
xorl
or
test
ret
push
push
mov
pop
add
sub
cld
bound
pop
or
pop
mov
loope
filds
pop
aam
leave
push
push
adc
rolb
cld
add
test
cmp
stos
and
xchg
mov
lods
add
push
nop
push
adc
in
add
shlb
dec
add
hlt
cli
jp
lods
loope
mov
push
punpckhbw
xchg
das
clc
mov
fiaddl
nop
pop
lds
mov
or
inc
xor
scas
ror
dec
test
pusha
xor
cs
pop
inc
lods
out
push
xor
mov
clc
aam
add
test
mov
mov
jle
pop
nop
loopne
int3
and
and
inc
rcr
aad
je
out
shlb
mov
call
pcmpeqb
inc
ss
pusha
add
outsl
sub
push
lea
mov
xchg
inc
jge
or
lea
sar
dec
lds
ds
outsb
or
stos
mov
in
adcb
adcb
pop
push
dec
out
shlb
lock
inc
jne
iret
and
setne
scas
sbb
or
jb
pop
test
or
sub
add
adc
out
jb
push
aaa
inc
aas
retw
xor
push
add
jmp
push
pop
lock
ret
inc
loop
mov
addl
fs
daa
or
mov
jle
xlat
adc
andl
add
fdivl
dec
or
in
push
cltd
push
mov
loop
lcall
adc
out
scas
jo
mov
sar
add
inc
mov
cs
mov
lret
and
imul
shlb
ljmp
sub
inc
push
or
dec
aad
testb
pop
add
scas
xchg
call
push
sub
pop
cli
dec
gs
loopne
sub
pop
inc
ljmp
pushf
xchg
pop
movsl
xchg
and
lods
add
push
sub
jmp
adc
les
mov
mov
std
mov
clc
fcmove
or
in
aam
adc
mov
cwtl
dec
mov
and
mov
sub
xor
ljmp
xor
jbe
sbb
mov
fcoml
mov
outsl
push
test
add
repnz
adc
enter
movl
push
pop
lea
call
cmp
mov
pusha
inc
mov
push
nop
or
rolb
int3
or
jbe
int3
js
fsubl
outsb
aaa
add
inc
push
jo
jno
pop
sarb
mov
pop
add
inc
jmp
xor
dec
mov
push
push
dec
aam
mov
jle
add
or
dec
mov
add
push
mov
cmpsb
dec
adc
lock
out
push
insl
add
dec
int3
push
xchg
add
lret
hlt
fwait
dec
and
lret
rolb
incb
out
xor
sbb
stos
pop
mov
fsubs
add
inc
addb
clc
inc
fsubl
add
out
mov
xor
or
cltd
inc
test
ret
scas
mov
jb
mov
loope
hlt
sub
mov
leave
inc
push
adc
lods
sbb
subl
pop
cmc
movsl
adc
cmp
mov
fistpl
dec
mov
cmp
xor
pusha
test
add
inc
out
fbld
cmp
sub
pop
cmpb
adc
call
mov
pop
push
and
push
les
int3
xchg
mov
mov
fidivl
push
pop
pop
dec
ljmp
insb
xchg
adc
adc
pop
fisttps
push
outsb
adc
aaa
adc
sarl
mov
ljmp
inc
adc
and
mov
xchg
hlt
aas
mov
ss
mov
lea
roll
mov
int3
and
adc
jo
jo
cld
xor
add
je
xorl
push
add
pop
pushf
mov
shll
int
mov
push
nop
jl
push
std
outsl
imul
mov
dec
inc
dec
in
inc
push
outsl
inc
mov
sahf
jle
jl
ss
add
mov
and
mov
jbe
cmp
sub
sub
les
js
cmp
hlt
or
nop
mov
cmc
test
adc
mov
mov
xor
xchg
cmp
xchg
pop
cli
lea
mov
push
ret
and
sub
rol
incl
ja
jb
out
adc
push
gs
pop
cwtl
xchg
mov
sub
int3
andb
adc
lock
mov
rcr
mov
push
mov
rorb
and
lock
add
adc
and
lret
mov
push
mov
jns
push
adc
xchg
cmc
pop
sbb
jae
fistps
inc
add
in
das
scas
mov
push
push
adc
xlat
mov
adc
sbbl
mulb
je
pop
test
les
push
adc
divb
out
inc
shlb
add
ds
mov
out
or
test
int3
sahf
adc
push
es
pop
jne
jmp
cmpsl
mov
ljmp
ja
sahf
xchg
rolb
jmp
push
cmp
xor
mov
sti
aas
jmp
orl
loopne
cmp
lcall
xor
push
ljmp
test
inc
add
filds
dec
xlat
dec
in
dec
add
mov
repnz
or
les
outsb
std
hlt
sbb
mov
bound
push
mov
or
sub
pushf
push
pop
and
fsubl
jne
cmc
push
data16
faddl
adc
mov
sbb
mov
add
mov
cld
add
out
ljmp
in
mov
push
sbb
pop
push
lock
dec
lcall
ljmp
dec
rolb
add
mov
pop
scas
clc
mov
imul
adcl
test
les
and
dec
jmp
jo
xchg
shlb
andb
xchg
call
shr
inc
add
inc
push
lahf
or
inc
jp
and
les
mov
pop
cmp
pop
mov
dec
mov
movsl
sbb
or
int3
sbb
in
shlb
mov
xor
imulb
jne
fwait
fs
rol
and
xchg
ret
btc
js
mov
sub
std
cwtl
xor
jo
test
inc
dec
inc
xchg
outsb
notb
mov
dec
add
mov
push
sub
int3
push
mov
sub
push
lock
scas
es
or
ljmp
ret
imul
push
xor
and
andb
add
adc
sti
test
sbb
push
add
push
dec
popa
cld
cmp
loop,pn
inc
nop
mov
mov
xorb
dec
lods
push
sbb
in
sti
frstor
stos
or
dec
mov
or
sub
or
adc
push
jl
xchg
sar
andl
lods
adc
mov
int3
mov
ret
sar
scas
xor
jge
adc
ret
icebp
dec
loope
push
fadds
ret
jp
dec
xor
ds
dec
cmpl
into
inc
ret
cmp
or
and
leave
mov
adc
int3
mov
aam
mov
or
pop
scas
add
ret
stos
jo
je
repnz
inc
jmp
test
enter
sbb
xor
mov
jbe
inc
ss
sub
cwtl
push
inc
mov
ret
mov
out
outsb
lret
push
stc
mov
push
filds
scas
jle
rol
das
pop
enter
std
or
add
xor
or
dec
cmp
and
mov
call
mov
pop
sub
mov
insl
stc
movd
or
call
inc
push
push
or
lcall
clc
dec
fadds
arpl
imulb
cmc
mov
scas
dec
scas
lock
dec
or
push
cmp
aam
xchg
inc
in
cmovb
pushf
and
xor
std
push
sbb
nop
mov
jo
xor
and
sbb
mov
aam
ss
mov
adc
cmp
adc
test
das
sub
lahf
mov
es
cli
pop
push
inc
push
pop
clc
mov
shll
add
sbb
pop
fdivrs
jne
hlt
nop
add
or
mov
jg
mov
inc
inc
adc
lods
xor
mov
nop
cmpsb
add
sub
add
movsb
push
inc
push
or
adc
pushf
scas
movsb
push
cli
jns
lods
push
fisttpll
sahf
sarb
ficoml
insb
mov
or
xor
rcl
xor
insb
or
add
add
mov
add
aas
add
cmp
add
sbb
stos
adc
pop
inc
outsb
mov
sbb
add
pop
loopne
pusha
jb
inc
cli
push
inc
pushf
mov
jmp
add
push
mov
sbb
jl
dec
xor
clc
lods
mov
sbb
cwtl
add
sub
lods
dec
std
jle
sub
mov
ret
or
push
jae
adc
es
mov
cmpsb
mov
rolb
test
scas
and
sub
pop
mov
push
jns
outsb
leave
pop
or
mov
xlat
orb
cld
ljmp
push
and
shr
lea
popa
insl
into
and
xor
inc
xor
inc
test
mov
xor
mov
add
mov
jmp
ret
ret
cmp
mov
rcrl
mov
mov
jne
push
sahf
lret
les
adc
das
cmp
pusha
push
je
leave
clc
add
add
lock
mov
into
sub
pop
ljmp
mov
xor
adc
mov
stos
imul
pushl
adc
icebp
xchg
loopne
push
xor
imul
push
adc
sbb
adc
data16
mov
ljmp
pop
lock
test
stos
sub
adc
dec
fiadds
leave
cld
push
aam
mov
jle
push
add
fwait
sub
rorb
dec
xchg
add
mov
adc
xor
mov
pushf
sahf
lock
cmc
mov
xchg
cmp
jne
inc
jmp
push
sub
jmp
sbb
clc
data16
jg
and
jae
in
and
sbb
mov
xchg
pusha
xchg
movsb
adc
in
push
xor
sub
pushl
mov
sbb
decb
std
xor
fisubl
call
dec
or
ret
mov
cmpsl
mov
add
into
push
jne
or
testb
push
arpl
dec
ret
xor
gs
das
xor
std
aad
mov
adc
mov
andb
loopne
rorb
outsl
add
insl
inc
push
mov
push
pop
outsl
add
cmp
les
push
inc
pop
or
fistpll
jb
add
jmp
add
xchg
in
sub
scas
cmp
adc
dec
test
fidivs
xor
loope
loop
cmp
xor
popa
mov
insl
adc
rolb
adcl
mov
cmp
push
imul
and
call
or
or
jg
jo
jp
cmp
mov
test
subb
arpl
push
xor
xchg
add
add
jnp
sub
out
fld1
or
inc
or
dec
orl
int3
cmp
pop
pushf
and
inc
andb
push
pop
mov
mov
sub
mov
xlat
or
push
jge
xchg
dec
mov
mov
push
add
or
adc
mov
out
bound
sbb
inc
push
or
push
push
jbe
sub
sub
inc
cmp
pop
sub
mov
inc
push
fs
mov
sub
or
mov
testb
shlb
mov
mov
icebp
jge
lods
sarl
subb
cld
and
ret
add
cmp
xchg
les
mov
movsb
fidivrs
nop
movsb
dec
in
and
cmp
xchg
fisttps
inc
out
inc
jl
add
test
rorb
mov
or
inc
push
jle
jmp
mov
insl
push
js
pop
stos
sub
mov
or
int3
mov
sub
mov
cmp
sub
dec
imul
mov
mov
sbb
add
mov
mov
movb
test
dec
icebp
fidivs
jnp
inc
xor
out
mov
scas
ret
mov
mov
test
pop
jo
fadds
push
cmp
test
mov
mov
mov
outsb
adc
lret
scas
sbb
push
repz
or
jecxz
lds
pop
adcl
push
mov
and
jmp
jmp
or
sbbb
adc
pop
add
orl
call
fcmovbe
jge
lcall
add
rolb
es
sub
and
adc
and
ret
push
pop
mov
sbb
pushf
sub
mov
outsb
add
jne
dec
adc
add
int3
sbb
cltd
cmp
push
test
pop
fdivr
jl
cmp
popa
push
and
push
jmp
add
orb
push
add
ss
push
adc
cld
add
jb
add
mov
fwait
cli
dec
or
pop
cmpl
push
scas
adcb
out
add
gs
jmp
sbb
popf
mov
jp
rclb
inc
inc
xor
mov
imul
push
cmp
sar
xchg
mov
call
in
hlt
push
test
jne
add
sub
out
dec
movsl
pop
decl
rolb
adc
aaa
and
sbb
adc
movsb
js
xor
icebp
inc
cld
push
xchg
mov
lods
mov
int
push
sti
inc
or
je
loope
enter
mov
mov
in
inc
sti
sbb
xchg
cmp
inc
lock
push
je
outsb
push
adc
jle
cmp
mov
sub
mov
adc
out
mov
js
mov
ret
adc
mov
sbb
or
sub
lods
push
inc
xchg
mov
push
push
mov
lock
scas
adc
dec
mov
int3
push
inc
shlb
fidivrl
shlb
xor
pop
loop
addb
test
adc
xor
cmp
cli
mov
dec
enter
inc
mov
std
ljmp
std
push
sarb
sbb
clc
jg
orb
outsb
popa
cld
fs
add
cmp
inc
test
pushf
and
insl
add
loop
in
aad
mov
and
add
push
pop
add
adc
add
test
test
mov
pop
add
adc
mov
jo
sub
xor
or
add
xchg
dec
sbb
pusha
and
bswap
mov
insb
les
fstl
push
pop
cwtl
inc
mov
push
mov
push
mov
ret
adcl
or
lods
sar
ret
push
andl
xor
aam
subl
lea
push
mov
and
adc
mov
pop
mov
mov
or
xchg
push
inc
sbb
add
mov
sbb
mov
clc
or
loope
jbe
mov
jg
mov
fidivrs
push
inc
pop
pmulhuw
lea
imul
test
lock
nop
adc
cmp
in
xchg
pop
shlb
call
xlat
xorl
ret
xchg
or
cmc
dec
cmp
jb
adc
mov
add
xor
mov
js
ss
mov
cmp
and
testb
and
adc
inc
push
sbb
cwtl
clc
sti
or
fistps
push
cmp
fs
notrack
pop
lock
sbb
pop
test
je
mov
inc
outsb
and
sub
jg
je
stc
xchg
cmpb
mov
inc
jmp
lock
loopne
je
add
jo
jo
cs
sbb
arpl
iret
les
jl
insl
mov
xor
scas
std
sub
xchg
pop
push
adc
imul
ss
lcall
pushf
jbe
jle
icebp
jae
mov
adc
loopne
cmp
lods
data16
shlb
add
or
or
or
fcoms
and
cmp
enter
imul
les
or
mov
push
mov
gs
xor
jl
shlb
mov
loop
outsb
push
test
xor
testb
pop
push
fsubl
pop
pop
push
add
subb
mov
shrb
nop
int
mov
pop
dec
lods
lods
cmp
adc
pop
jp
push
cmp
data16
addl
int3
add
outsb
es
fs
mov
sbb
mov
data16
cs
cs
push
testb
adc
adc
adc
ret
mov
mov
add
je
jl
ret
and
daa
add
movsb
jo
test
xor
xchg
or
lea
into
lock
add
and
loopne
jne
rcr
icebp
jg
cmp
cmp
or
xor
clc
or
mov
jmp
mov
and
ret
add
rorl
lods
mov
or
jp
cmp
in
and
dec
movsb
incb
mov
push
out
insl
loop
cld
add
inc
adc
cmp
add
into
test
xorl
in
adc
mov
xchg
mov
mov
aam
or
mov
ljmp
xor
add
shrb
aam
ds
imulb
dec
outsl
adc
inc
cmp
sbbl
lea
aaa
call
inc
xor
mov
cld
outsl
les
xchg
or
add
or
inc
test
jmp
lea
xor
icebp
push
push
sub
push
mov
mov
addl
push
jae
jg
loope
lock
add
test
push
mov
mov
or
mov
outsl
ljmp
cld
sbb
les
push
rorb
jbe
enter
sub
inc
ljmp
in
cmp
fnsave
mov
out
mov
jp
adc
pusha
jns
fwait
cld
lods
adc
sub
rorb
or
xor
sbb
ss
loopne
push
jg
scas
mov
adc
adc
aas
je
inc
enter
or
outsb
test
in
cwtl
mov
pushf
mov
xchg
cli
and
push
or
les
mov
je
shlb
push
push
mov
jne
xor
or
pop
pop
sub
xchg
cmpsb
adc
incl
cs
into
loope
cmp
shrl
aas
mov
idivb
in
inc
or
pop
adc
int3
sbb
push
sarb
cld
orl
test
std
add
push
xor
fs
das
ret
mov
in
shlb
push
adc
shrb
mov
dec
ret
push
mov
mov
xchg
loopne
pop
icebp
les
xchg
mov
sbb
js
cmp
or
and
cwtl
test
lds
inc
jle
mov
pop
add
add
lock
push
dec
cmp
lods
push
dec
or
push
mov
test
dec
mov
ljmp
jo
fdivs
add
ret
shrb
repz
adc
clc
lods
sbb
insl
loop
push
adc
pop
int3
leave
dec
gs
aas
movsb
push
add
add
sbb
add
push
ljmp
loop
add
inc
mov
sub
push
xor
mov
sub
push
push
pop
xor
jmp
adc
hlt
lea
mov
pop
jge
cmpl
pop
imul
std
add
gs
movsl
call
mov
sti
cmp
mov
scas
pop
scas
inc
das
or
test
ret
mov
cld
dec
lods
push
test
aam
gs
gs
fcompl
loope
ret
jge
xor
mov
arpl
ljmp
pop
cmpsb
std
inc
mov
lds
mulb
sbb
and
jne
hlt
adc
add
sbb
insb
insb
adc
adc
and
push
pop
inc
sbbb
jo
je
add
mov
popf
xchg
lret
inc
mov
mov
cmc
push
mov
dec
pushl
or
push
inc
xor
fbld
and
call
rcll
dec
and
incl
iret
mov
pop
xor
jbe
cmp
int3
ljmp
inc
cmp
cmp
fmull
adc
cltd
test
loop
mov
lahf
mov
mov
stc
add
lods
clts
push
ret
sbb
push
mov
fstpt
push
ss
fs
lods
cwtl
inc
addb
push
push
pushf
mov
sub
ds
outsl
mov
orl
test
insb
sbb
fiaddl
jae
mov
inc
dec
xor
call
incl
jo
lock
std
inc
pop
push
and
fdivl
sub
ljmp
fldt
inc
rolb
mov
or
xadd
and
add
addb
xor
push
dec
jb
ficoml
add
push
mov
push
scas
mov
add
mov
inc
jge
mov
cmp
push
data16
lock
aaa
popf
mov
in
push
stc
mulb
aad
imul
mov
add
out
inc
dec
sbb
push
sub
adc
mov
aas
cmp
dec
insb
dec
adc
lret
aam
ljmp
test
orb
xor
aad
pop
lahf
cmp
cmp
mov
and
xor
mov
inc
bound
and
dec
bnd
in
mov
mov
hlt
adc
xchg
mov
sbb
fildll
aas
rcrl
or
inc
cld
lods
fdivl
das
sarb
add
pop
sbb
and
add
mov
jl
add
or
dec
mov
je
push
mov
data16
hlt
or
test
jecxz
add
fistl
js
test
adc
les
test
sbb
test
mov
xor
dec
hlt
inc
inc
mov
mov
cmp
int3
call
jg
loopne
cmp
aam
sub
loop
loopne
mov
aad
test
lret
fadd
jl
jecxz
xchg
add
mov
add
outsb
or
add
push
pushf
stos
mov
subb
fidivrl
int3
addr16
pop
mov
push
repnz
xchg
jmp
cmovns
in
mov
mov
sub
push
cmpsl
sub
inc
or
mov
cld
push
repnz
xchg
nop
mov
sub
inc
sbb
jge
je
push
mov
fdivs
lcall
lock
in
xor
idiv
lahf
dec
mul
cmp
mov
mov
or
lahf
scas
fisubl
ljmp
inc
jo
sub
xchg
dec
es
push
adc
aam
mov
lds
xor
mov
pop
and
add
in
in
aaa
add
mov
insl
addl
add
popa
shlb
fisttps
sub
stos
xchg
clc
mov
cmp
jmp
xor
mov
push
fwait
test
cmp
shlb
jp
pop
inc
add
dec
or
jo
xor
xchg
jle
xchg
test
dec
aam
mov
hlt
outsb
pushf
push
enter
mov
push
inc
xchg
push
lock
cmp
ss
or
scas
or
cld
and
pop
sbb
movsb
mov
test
adc
mov
jne
cmp
xchg
lods
ja
mov
ret
and
in
sub
pop
int3
pop
and
add
test
and
aam
cltd
push
shlb
mov
adc
movsb
add
mov
outsl
adc
xchg
movups
lcall
in
and
cmp
xchg
rclb
mov
test
imul
fnstcw
xchg
shr
or
lods
sub
cld
int3
xlat
ljmp
mov
mov
pop
enter
pusha
loop
fs
mov
mov
popa
cmp
hlt
xchg
push
fildl
fs
mov
and
xorl
xchg
bound
pop
mov
sbb
jmp
sub
movsb
cli
mov
inc
xor
mov
mov
clc
andl
jl
call
aaa
pop
test
cmpsb
add
push
push
ljmp
jb
sub
inc
ret
push
or
in
adc
jecxz
shrb
gs
cmp
sbb
popf
adc
les
mov
jg
mov
jne
xchg
dec
push
jnp
cmp
iret
fiadds
cltd
mov
bound
test
push
xor
lea
ja
jb
add
out
call
lret
inc
push
cwtl
call
xchg
pop
add
ret
aam
and
fwait
pusha
xchg
xor
mov
daa
mov
xor
imulb
mov
lret
fiadds
stos
mov
cld
push
add
sbb
sub
mov
sbb
nop
sahf
sub
fisubl
std
or
subb
popw
lock
xor
adc
shr
test
jbe
add
orl
or
adc
insl
and
sarb
xchg
mov
xchg
lods
shlb
jl
mov
fadds
and
push
or
mov
jle
xchg
hlt
add
jl
nop
icebp
add
pop
cmp
inc
xor
mov
or
mov
xchg
add
or
or
mov
xor
icebp
ss
dec
adc
mov
adc
imulb
mov
icebp
mov
sbb
ret
sti
sti
xchg
xchg
cmp
mov
leave
inc
jbe
add
and
inc
clc
outsl
imul
int3
adc
sub
mov
inc
mov
inc
sbb
or
adc
push
orb
mov
decb
cld
push
shlb
add
adc
ret
les
mov
and
mov
add
cmp
sub
stos
loopne
mov
push
leave
popa
stos
xchg
jg
xor
hlt
sub
rolb
cmp
jl
loope
fnstcw
xor
insb
shl
inc
jne
xchg
je
mov
test
loop
es
ret
ret
inc
pop
inc
mov
push
lock
sbb
popf
addl
shlb
inc
mov
gs
add
jno
in
scas
xor
push
xor
or
js
hlt
pushf
pop
adc
xor
je
mov
mov
imul
cmpsb
es
add
adc
sar
cmp
push
dec
cltd
nop
outsl
sbb
pop
push
mov
decb
fiaddl
add
pushaw
push
and
inc
dec
cwtl
xchg
push
loopne
adc
in
orps
lock
lock
cmpsb
aad
xor
cmpxchg
dec
push
mov
or
out
add
outsb
enter
add
or
cmp
imul
pop
push
sahf
arpl
addr16
daa
inc
add
leave
ja
push
mov
push
testb
push
aam
pop
jne
mov
mov
call
adc
adc
lea
int3
ror
lea
and
adc
xor
cmp
or
add
cmpb
aaa
test
stos
test
or
sbb
je
pop
cwtl
sbbw
push
mov
je
push
jp
lds
and
sub
fmull
mov
outsl
mov
add
xor
pop
and
les
shlb
xor
add
jg
sahf
fs
je
push
xchg
mov
push
inc
push
inc
fs
scas
mov
pmaxub
scas
adc
clc
adc
push
mov
mov
xor
push
jb
adc
sub
add
or
dec
outsb
mov
call
add
inc
lea
push
push
add
ret
push
xchg
mov
sub
test
xchg
and
mov
dec
ss
incl
mov
mov
mov
paddusb
stos
xor
push
in
shl
xchg
push
push
add
andb
add
add
incl
or
loop
push
sbb
addl
sub
inc
xchg
call
mov
ret
jp
mov
dec
clc
jl
out
cmc
dec
and
and
lcall
add
pop
add
mov
mov
cs
cmp
or
push
cmp
mov
or
pop
mov
stos
pop
cmp
outsb
xorl
dec
loopne
jp
adc
jo
cmp
sbbb
adc
sub
add
mov
ss
hlt
push
cmp
cmp
scas
cmpsb
jo
outsb
push
lock
mov
lea
aad
push
sahf
pusha
lock
pop
xchg
jns
push
in
hlt
inc
andl
sub
jg
jae
mov
push
stos
ss
jne
mov
push
sub
lcall
ljmp
xor
je
jle
pop
lret
push
clc
add
outsl
popf
call
outsb
mov
xorl
lea
sbb
mov
inc
adc
add
inc
and
push
orl
aas
mov
sbb
pop
les
sbb
fst
pop
movsl
dec
sub
push
call
cmp
repnz
mov
push
lods
push
dec
inc
lock
mov
mov
in
imul
mov
psubsb
mov
jmp
mov
sbb
push
mov
lock
push
test
outsl
arpl
and
mov
imul
insb
and
pop
mov
ret
sbbl
or
outsb
jl
adc
or
cmp
xor
push
ret
adc
push
add
outsb
cmp
arpl
dec
stos
mov
idiv
rolb
mov
mov
fs
jb
mov
push
jp
lea
loop
mov
inc
cli
lods
ror
gs
add
mov
dec
cmp
int3
pushw
shr
sbbl
fsubrl
mov
fisttpl
push
sbb
jl
mov
pop
fwait
mov
jne
mov
xor
aas
les
std
xor
stos
cwtl
inc
pop
lret
cmpl
mov
mov
ror
or
out
ds
push
testl
in
mov
dec
enter
dec
je
or
sub
nop
xchg
hlt
pushl
mov
mov
push
ret
cmpsb
mov
inc
dec
cld
dec
lock
iret
mov
push
push
hlt
inc
mov
pop
movsb
add
clc
or
hlt
cmp
cmpb
lret
shll
lret
call
in
int
add
and
data16
inc
ret
push
pusha
jne
pop
mov
fmulp
xor
fcomip
dec
cmp
push
cld
loopne
out
gs
xchg
cmp
pop
cld
xchg
mov
push
xchg
inc
lock
dec
push
push
jns
pushl
iret
push
ljmp
and
inc
and
lods
fisubrs
sub
mov
test
add
sub
insl
dec
add
cli
push
add
push
adc
out
dec
fwait
push
cld
inc
push
inc
loope
xor
scas
adc
adc
cli
enter
lds
inc
out
mov
nop
push
fdivrp
dec
sbb
adc
mov
fisubrl
loopne
rolb
mov
call
mov
fldt
jb
shrb
add
push
push
rclb
fdivrp
mov
incl
cmpsb
inc
addl
or
bound
loopne
lcall
cs
inc
sbb
lea
gs
lcall
xchg
sbb
js
mov
shr
ja
add
sbb
dec
jl
inc
test
add
fstl
mov
mov
adc
push
dec
dec
push
andl
xchg
mov
mov
lea
lcall
sub
fiaddl
sbb
adc
ljmp
jb
popa
rorl
pop
jo
data16
pop
lret
ret
int3
fcompl
mov
add
lock
sbb
jge
shlb
cmp
je
jbe
fcomp
loopne
fsub
or
or
iret
adc
filds
stos
jmp
icebp
push
inc
mov
xor
pop
cli
jbe
mov
xchg
xor
sbb
and
xchg
dec
mov
sub
scas
mov
pop
mov
lock
addb
push
sub
mov
adc
cmp
roll
imul
test
inc
sarb
loop
sti
pushl
insb
add
mov
mov
iret
clc
sub
xor
sarl
cmp
scas
mov
cmp
mov
mov
inc
orl
add
cwtl
mov
xor
sub
call
dec
push
idiv
pushl
sbb
sbb
push
sbb
popa
push
ja
inc
inc
jmp
dec
cmpsb
pop
shlb
sbb
dec
sbb
sbb
fstl
lcall
mov
in
or
ud1
pop
add
xor
out
dec
ljmp
mov
cmp
adc
adcb
gs
add
test
and
adc
scas
loopne
stos
mov
mov
inc
mov
insl
pop
test
push
xchg
or
push
shll
mov
and
or
sub
das
sbb
pop
inc
rorl
cli
dec
lock
push
lock
cs
rorl
mov
cmp
movsb
add
adc
push
mov
adc
pop
mov
popf
sbbl
dec
or
adc
rolb
cmpsl
adc
test
fmull
jge
test
sub
aaa
decl
jg
adc
repz
inc
add
stos
mov
push
lods
cmp
lea
sar
icebp
push
in
cli
ds
sbb
rcr
jne
push
dec
add
inc
aaa
mov
dec
jmp
inc
enter
mov
inc
inc
or
mov
add
loopne
inc
cld
std
pop
inc
push
mov
xchg
cmp
mov
in
insl
in
inc
cld
add
lds
mov
js
inc
subl
mov
push
inc
jnp
cmp
mov
test
scas
sbb
mov
pop
mov
clc
cld
test
pushf
faddl
xchg
jge
pop
cli
jecxz
sbb
popf
jbe
mov
int3
int3
repnz
xorb
inc
xor
pop
push
cld
inc
or
insb
je
xchg
mov
adc
mov
dec
pushl
and
std
sub
dec
and
sbb
mov
outsl
push
push
push
loopne
lea
and
xor
jp
jl
insb
imul
shlb
push
das
mov
je
mov
lea
add
mov
adc
aas
clc
or
cs
bound
add
mov
orl
push
sti
out
inc
cmpsb
pop
inc
out
insb
or
sub
outsl
push
mov
movsb
sub
cwtl
cmp
mov
pop
sub
and
je
lcall
stos
inc
adc
adc
mov
adc
jnp
hlt
out
pushl
fsts
inc
sub
sub
push
fadd
sbbb
bound
rcrb
xchg
mov
or
push
inc
xlat
pop
mov
test
andb
xor
xor
pushf
push
addl
scas
aas
push
xor
shlb
ret
sub
add
mov
loop
jg
ficoml
jns
push
inc
mov
or
incl
rorb
clc
inc
mov
pushf
nop
call
sahf
out
cmp
lcall
pop
adc
inc
mov
or
dec
xor
mov
push
test
push
adcb
lds
push
std
subps
test
je
rol
sbb
ljmp
nop
push
outsb
clc
or
fs
cs
dec
sbb
sub
jne
add
loopne
xor
inc
or
and
adc
imul
inc
cmp
int3
sahf
movsb
test
or
mov
pop
pop
jl
add
or
movsl
rcll
nop
cmp
clc
mov
les
push
or
add
inc
adc
sub
sbb
add
data16
int3
adc
mov
stc
push
inc
int3
andl
mov
cmp
mov
loope
push
sbb
xchg
xlat
setb
mov
xor
add
or
insb
add
dec
adc
cmp
push
sbb
add
jb
jmp
push
pop
sub
inc
bound
add
or
xor
jge
jne
in
es
and
mov
das
test
mov
sbb
aam
out
leave
cmp
xchg
push
js
add
sub
adc
push
xchg
cmp
push
mov
inc
mov
dec
les
inc
pop
mov
mov
loopne
lods
fstpt
jle
int3
cmpsb
xchg
xchg
mov
test
out
adc
dec
or
push
mov
cli
int
mov
sub
aaa
push
sub
and
pop
xchg
sbb
add
cmp
mov
loop
lret
addl
inc
ret
movsb
std
xor
lock
test
push
mov
pop
ret
insb
adc
data16
out
jle
and
sbb
jle
inc
add
orb
adc
or
or
stos
inc
and
add
cs
les
mov
mov
bound
lret
bswap
push
jnp
jo
sbb
cmp
xor
cmc
pop
sbb
nop
incb
jg
mov
xchg
dec
stos
mov
xor
pop
call
cmp
stos
lods
das
lods
cltd
adc
mov
lret
addr16
inc
xchg
pop
push
and
add
js,pn
cmc
psrlw
fcomps
pop
xchg
daa
push
push
les
jle
inc
xor
sbb
xchg
pop
adc
jne
cmc
ja
loop
outsb
js
insb
mov
push
or
pushl
mov
in
sub
inc
testb
int3
mov
mov
inc
or
pushf
xor
cmpsb
out
ss
sbb
loopne
mov
jbe
out
add
aaa
sub
nop
shlb
sub
xchg
or
pop
decb
xchg
push
insl
adc
jp
pop
cli
in
or
add
int3
mov
push
test
cmp
dec
cld
mov
pop
call
into
mov
adc
cld
cmp
sbb
gs
lds
fdivrs
add
iret
push
cli
ljmp
call
add
loope
or
hlt
pushf
inc
mov
popf
push
mov
ret
in
call
and
sub
loop
jmp
lret
in
decl
pop
xor
or
lods
push
add
lret
outsl
cmp
sbb
test
adc
subl
jp
test
xor
ljmp
push
push
mov
arpl
push
dec
cmpsb
ret
out
fbstp
jne
inc
lea
jmp
loope
xchg
insb
ret
and
sub
inc
fldenv
add
xor
xchg
jg
xor
cmc
push
inc
data16
je
into
sbb
bound
push
push
add
jmp
ret
push
out
mov
push
fisttps
frstor
cmp
cmpsb
orps
pop
push
dec
call
test
ficomps
icebp
pop
push
add
cmp
popa
adc
insb
ljmp
xor
subl
adc
shl
dec
sub
cmp
add
scas
ds
shrb
add
pop
adc
cmp
pushf
bound
push
aam
adc
mov
data16
jne
push
adc
test
cli
pop
mov
test
scas
incl
out
add
ret
xor
sbbb
or
fcomps
xor
jb
cmp
add
jns
jp
ss
inc
jne
ret
fsubl
paddw
sub
adc
push
sub
push
pop
adc
movsb
movb
adc
daa
loope
mov
xchg
call
jg
movsl
mov
jno
add
lcall
cs
incl
lret
mov
cmpsb
subb
cmp
mov
jo
mov
mov
call
inc
sub
arpl
fisubrs
mov
outsl
and
aad
mov
decl
mov
sbbl
inc
rol
add
and
fdivl
xchg
add
jg
push
pop
inc
mov
adc
pop
test
or
mov
cmp
push
fdivs
cmc
decb
subl
insl
in
jae
inc
adc
ret
jnp
in
xor
xchg
dec
jl
push
push
xlat
jmp
push
call
les
nop
fs
mov
shlb
mov
ror
out
add
push
dec
test
dec
pop
xchg
push
insb
clc
rcrb
push
cmc
inc
sub
cld
shll
adc
loopne
cs
sar
stos
pop
leave
dec
jecxz
add
rcrl
inc
push
aad
mov
and
xor
pop
cs
int3
or
adc
or
pop
imulb
clc
xor
or
mov
push
mov
xchg
inc
sub
pmulhuw
inc
in
add
xchg
cmp
fmuls
add
jle
outsb
je
in
push
cli
ret
mov
lock
jno
jae
cltd
push
xor
xchg
adc
and
stos
movsl
out
call
stos
add
lock
xchg
sbb
aas
test
aam
and
mov
push
in
jg
das
ss
hlt
sub
or
clc
add
clc
popa
call
aaa
sub
mov
add
into
pushf
and
xlat
decl
add
push
enter
clc
lock
add
sub
prefetchnta
scas
add
inc
add
lea
ljmp
xchg
mov
push
jmp
add
lods
fnstenv
cltd
es
je
jo
mov
shrb
jp
stos
mov
pop
add
loopne
imulb
xor
fidivrl
sbb
mov
insb
shlb
iret
add
add
jp
xor
mov
subl
jb
inc
mov
fbld
xchg
cmp
mov
xchg
enter
push
ja
shrb
adc
aaa
fimull
sbb
mov
push
fstps
mov
jge
and
ja
cltd
xor
add
fs
into
inc
jmp
cmpsl
es
add
dec
sbb
std
jg
sbbl
cmp
adc
add
xor
sub
test
cld
xor
std
mov
mov
std
loopne
test
jecxz
inc
in
jno
outsb
testl
mov
mov
pop
adc
mov
lock
loopne
dec
in
adc
loope
les
imul
loope
jnp
cmp
adc
inc
mov
adc
orl
push
inc
incl
imul
ret
and
aam
test
mov
out
rolb
pop
std
dec
test
and
clc
inc
rcrb
cs
movsb
mov
jecxz
jb
or
cld
sbbb
or
cs
fcoms
xor
inc
xorl
push
xchg
add
jb
mov
imul
jle
ret
pop
movsb
ret
in
adc
int3
jl
bts
loope
int3
adc
xor
imul
cmp
and
sbb
mov
lret
mov
addr16
pop
addb
arpl
mov
jmp
or
cmp
add
mov
add
gs
int
mov
sbb
test
xchg
or
dec
ret
out
data16
pop
inc
psubb
push
xor
fwait
icebp
lea
in
rol
adc
add
imul
dec
mov
clc
push
mov
mov
inc
insb
lret
in
addr16
push
lret
std
call
shlb
add
das
mov
inc
je
cli
jmp
aas
sar
repnz
dec
mov
or
inc
jne
lret
lea
dec
mov
xlat
and
mov
adc
pop
ljmp
leave
lea
add
cmp
lods
imul
inc
xlat
call
cli
xor
sub
push
inc
xchg
mov
inc
adc
inc
jge
test
ljmp
push
das
pop
or
jecxz
inc
cmp
hlt
aas
pop
push
push
loop
pop
lock
xor
add
mov
pop
sub
pop
shr
mov
cmp
and
mov
shlb
jecxz
incb
add
mov
sbb
or
add
outsb
and
insb
fdivrl
mov
xor
scas
iret
adc
sbb
xor
call
mov
adc
test
inc
ret
add
repnz
rol
ss
shrl
sub
mov
in
jmp
jno
outsl
push
pushf
push
add
icebp
jecxz
ljmp
xor
and
push
andb
sub
sti
stc
in
add
adc
push
push
fiaddl
lock
push
repz
or
repnz
outsb
xor
lds
xor
rolb
mov
push
push
repnz
add
outsb
add
or
sub
jmp
outsl
jmp
mov
outsl
loop
jle
xor
cld
scas
mov
add
push
mov
xchg
push
lea
and
mov
mov
or
fwait
push
add
xor
xchg
push
adc
es
sbb
cli
outsl
pop
mov
add
and
mov
fstpt
sti
test
bound
xchg
xchg
adc
mov
in
push
push
scas
cmp
rclb
test
cmp
jae
decl
into
or
std
outsl
das
xchg
jle
sub
lcall
mov
sbb
and
push
rcll
rol
aas
or
divl
mov
je
push
sti
shrb
jl
and
mov
loope
cwtl
fcompl
call
pop
call
and
bound
pop
int
call
in
cmp
jne
in
jmp
dec
test
mov
lcall
decl
push
and
jg
jo
int3
xchg
mov
ljmp
rcl
sbb
and
push
lds
adc
cld
push
lds
dec
or
jl
testl
mov
add
add
out
inc
divb
scas
or
rclb
mov
inc
aaa
and
in
stos
or
fnstsw
dec
jo
sub
cmp
pop
es
inc
ja
js
push
fadd
in
push
inc
aas
sarl
jmp
movsl
mov
cld
pop
aam
rorl
mov
xor
inc
jg
cmpsl
insl
pop
je
call
rorb
jbe
rcl
adc
add
add
dec
fbstp
pop
or
cmp
xchg
cs
les
testb
add
mov
call
mov
and
movb
je
test
sbb
xor
enter
cs
push
adc
dec
xchg
cmp
sub
xchg
sarb
or
clc
dec
mov
xorb
add
loop
mov
cmc
or
xor
push
sbb
fs
je
push
clc
pop
cmp
mov
mov
das
ss
adc
cli
rorb
push
in
aaa
mov
mov
jg
adc
dec
incl
push
sub
push
mov
imul
incb
mov
add
adc
loopne
icebp
filds
lea
mov
jecxz
aas
in
dec
call
pop
aas
ret
xchg
push
sbb
loopne
sbb
mov
mov
mov
add
ds
inc
pop
mov
test
repnz
loope
mov
cltd
jae
dec
add
push
cli
xlat
sbb
jb
pop
jmp
adc
mov
jmp
or
js
inc
rolb
sub
loopne
xor
or
push
xor
add
addb
jae
stos
mov
pop
push
add
dec
bound
fcompl
inc
pop
ret
sbb
ss
cmp
dec
cmovo
loopne
sbb
mov
xchg
adc
inc
or
int3
inc
cmp
adc
faddl
inc
adc
push
insb
dec
mov
sar
cmpsl
fcompl
out
lahf
mov
dec
mov
dec
std
test
test
pop
adc
xchg
push
shll
outsl
ret
leave
add
pop
inc
std
lcall
mov
add
hlt
in
aaa
mov
int3
xor
das
and
inc
mov
fildll
jae
rclb
jmp
add
sbb
ljmp
sub
sub
xlat
push
loopne
fadd
and
bound
imul
mov
mov
cmp
sub
rcrb
push
insl
add
add
push
test
lods
jmp
outsb
popf
mov
xchg
inc
push
jle
mov
mov
std
test
nop
sbb
fwait
jmp
mov
pop
ficoms
sub
cmp
das
sbb
or
pop
pushf
sahf
stc
pop
push
ljmp
es
push
or
pop
fdivs
mov
mov
add
push
inc
pop
or
xchg
incb
pop
inc
push
add
stos
pop
mov
roll
daa
in
dec
js
adcl
test
or
pusha
inc
push
movsb
mov
stc
fadds
mov
fs
sahf
cmpsl
sbb
cmp
std
and
or
outsl
jle
or
jnp
mov
pushl
pop
test
mov
daa
fsubrl
push
mov
mov
inc
mov
mov
int3
or
into
pop
sub
scas
repz
sub
out
cs
hlt
push
aam
jnp
paddd
push
xchg
cmp
mov
inc
cmp
inc
sbb
sub
mov
mov
jg
xchg
xor
les
sbb
je
sub
xor
ljmp
mov
push
mov
mov
and
clc
loopne
movsl
adc
pop
xchg
ss
enter
adc
dec
ljmp
sbb
push
add
xchg
fs
mov
push
push
scas
inc
or
inc
push
sbb
inc
shll
push
mov
ss
cld
jg
outsb
cmp
pop
popa
mov
mov
mov
jne
test
inc
rolb
add
test
push
call
cld
idiv
sub
cli
cld
lock
cmp
outsl
nop
movb
add
pop
push
adc
or
or
rcrb
nop
mov
dec
mov
mov
mov
out
dec
leave
or
inc
adc
push
dec
mov
in
mov
leave
iret
sbb
cld
adc
mov
ljmp
mov
data16
ret
add
andl
inc
xchg
pop
aas
dec
cs
loope
xchg
push
shrl
xor
push
outsb
in
call
or
sub
push
call
jne
mov
adc
adc
orb
mov
xor
inc
and
call
mov
mov
or
cmp
cli
inc
add
add
inc
dec
aaa
sub
test
test
dec
sbb
and
or
cmc
cltd
or
add
mov
test
pop
and
rcrb
les
push
and
movups
leave
inc
inc
cmp
mov
insb
xchg
jle
inc
pop
xorb
mov
mov
xchg
ret
test
data16
xor
cwtl
xchg
inc
mov
sub
fiadds
int3
std
jmp
mov
adc
and
filds
test
test
insl
dec
add
daa
xor
stc
push
in
mov
mov
mov
add
pop
roll
and
xor
test
sub
iret
inc
xchg
inc
push
pop
movsl
add
pop
lahf
cld
cmpsb
scas
sbb
dec
aam
add
pop
pushl
mov
mov
mov
push
adc
or
push
mov
outsb
and
test
test
inc
xor
ret
push
pusha
pushf
or
cld
ret
xchg
pop
loopne
jno
pop
mov
add
inc
orl
jle
jp
mov
and
add
xor
fidivs
mov
and
fs
adc
rcrb
out
shr
cmp
ret
outsl
loop
mov
stos
mov
push
out
hlt
mov
outsb
cmp
push
push
add
je
mov
sub
sti
ret
sub
add
lods
fildll
cld
mov
adc
push
push
cmp
cmp
stc
push
or
mov
sub
adc
pop
or
jg
inc
cmp
mov
push
xchg
mov
je
das
add
in
into
test
cmp
push
push
pop
cli
ljmp
lods
int3
push
adc
push
mov
dec
fsubrs
loopne
jno
mov
xor
add
push
cmp
pop
jbe
jmp
or
mov
addb
adc
jl
sub
stos
cmpb
mov
incb
lahf
inc
hlt
mov
adc
jb
or
clc
adc
jo,pn
fs
rcrb
inc
xchg
dec
fsubrl
fnsave
rcr
mov
jmp
hlt
stc
js
add
in
dec
jae
jmp
add
lea
int3
enter
inc
rorl
add
jne
xorl
and
test
icebp
icebp
sbb
sub
lods
cmp
call
inc
lcall
xchg
push
cs
jmp
mov
cmp
ja
mov
jo
fidivrs
shrl
mov
mov
jne
add
mov
push
or
call
push
outsl
movsb
icebp
fiaddl
aam
mov
push
jl
inc
cli
outsl
clc
pop
add
sub
lock
sbb
shl
push
test
insl
sbb
add
mov
mov
pop
lcall
lcall
push
inc
int3
or
or
mov
xchg
lea
pop
es
adc
test
mov
es
push
mov
adc
mov
mov
lret
hlt
push
hlt
mov
pop
or
sbb
pop
adc
insl
sub
cld
push
push
xchg
add
pushf
sar
and
rcrb
orl
arpl
jmp
add
incl
push
je
aad
pop
add
aaa
add
outsl
inc
ret
fstps
add
mov
mov
xchg
xchg
sub
ds
dec
enter
pop
fwait
jno
mov
push
les
pushl
or
pop
mov
mov
sbb
popf
test
adc
add
cld
adc
lret
pop
scas
push
add
mov
adc
lock
icebp
scas
xchg
push
pop
dec
xor
sub
cltd
inc
add
outsb
push
pop
movsb
outsb
sbb
mov
psrlw
andl
std
or
dec
lock
xor
xor
lea
jbe
add
fs
mov
rcll
push
arpl
and
add
aad
pop
sbb
and
aas
push
scas
mov
cmp
decl
sarb
mov
inc
xor
or
xorl
movsl
test
mov
push
dec
out
push
scas
lret
jmp
bound
gs
jmp
sub
scas
js
xorl
shlb
push
pop
ljmp
ret
stos
inc
ss
inc
je
add
shl
rorb
out
add
add
mov
push
stos
call
mov
fidivrl
push
or
pop
shr
sub
mov
dec
or
mov
mov
or
or
mov
sbb
bswap
mov
clc
test
and
adc
mov
hlt
aaa
insl
mov
push
jb
adc
cld
fcmovb
scas
inc
loope
xchg
xor
call
fidivrl
xor
add
xor
sbbb
mov
fisttps
les
sbb
add
sbb
in
push
imul
push
xor
jg
or
pushf
jnp
add
push
mov
call
sub
daa
scas
pop
shrb
adc
adc
add
dec
lock
cmp
jno
push
sub
add
jo
sbb
mov
mov
lock
inc
fiaddl
cmpsb
ss
jl
fcmovbe
mov
mov
mulb
mov
jmp
add
push
scas
mov
test
test
cmp
cli
push
add
push
sbb
cmp
ss
sar
in
xchg
mov
cltd
adc
inc
jo
rclb
sbb
push
rcll
mov
fistpl
adc
paddsw
mov
dec
cwtl
sti
mov
insb
and
inc
inc
mov
test
ficoms
mov
add
cld
inc
mov
mov
or
data16
push
lock
loopne
add
pop
mov
push
je
std
mov
ds
jmp
jae
out
mov
or
jl
jo
inc
out
sub
sub
mov
out
dec
cmp
aas
out
psubb
mov
xchg
sub
push
push
arpl
inc
jecxz
arpl
pop
sub
inc
ret
inc
mov
ss
pop
inc
jns
add
xchg
dec
or
adc
xchg
inc
mov
dec
enter
push
push
adc
xor
push
dec
fcompl
sub
xor
push
ss
out
shlb
cmp
inc
push
fmuls
ja
sbb
or
mov
sub
jecxz
ja
sub
mov
fiadds
add
cmp
and
aam
xor
xchg
int3
sub
sti
mov
mov
shll
stc
mov
test
ljmp
push
inc
cmpsb
xor
inc
xchg
aam
xor
add
sbb
sbb
cmp
or
aad
xor
jae
and
testb
inc
movsb
outsl
loope
or
add
pop
pop
scas
rorb
sbb
rolb
std
cmp
add
pop
and
dec
in
jo
mov
loope
js
pop
mov
mov
adc
insl
lock
movsl
jnp
pop
adc
clc
ret
mov
sbb
sub
add
cmp
fsubrl
adc
push
xor
idiv
jp
push
mov
shlb
jmp
inc
imul
ret
addl
lahf
lock
shlb
mov
pusha
fucomp
hlt
cmpsb
xor
stos
leave
pop
gs
imul
and
addb
inc
in
add
je
outsb
fbld
sub
push
pop
cli
insw
sub
inc
push
in
xor
les
sub
hlt
rcll
jne
sub
inc
movsl
loop
mov
pop
add
add
and
test
and
loopne
add
enter
pop
dec
push
xchg
push
out
xchg
add
add
das
loopne
add
aas
xorb
add
xchg
ss
lock
lock
inc
mov
addb
movsb
aaa
xchg
jge
lea
sti
add
cmp
jmp
ret
inc
pop
push
jae
or
sbb
test
xchg
or
xchg
rclb
mov
rol
pop
xor
addl
xchg
xor
or
clc
bound
push
test
and
std
dec
enter
shlb
xor
inc
mov
cmp
push
inc
pop
xchg
ss
mov
cmp
aas
aam
adc
cmp
ss
flds
inc
mov
mov
popa
shr
xchg
adc
stos
test
in
jle
imul
out
push
push
push
or
and
xor
xchg
and
pop
lods
and
movsb
enter
and
sub
add
je
in
or
adc
sub
mov
test
cld
int3
pushf
enter
outsb
push
jl
inc
out
addb
pop
cmp
adc
inc
cli
das
and
cs
mov
mov
lea
outsb
jmp
add
add
cmpsl
push
push
pop
sahf
inc
sub
cmp
in
loopne
add
dec
add
rcrl
cmp
jae
mov
add
xor
mov
and
mov
mov
std
push
mov
lods
jb
xchg
adc
mov
inc
mov
fwait
push
push
std
rorb
pop
les
inc
sub
adc
lods
int
or
lods
dec
adc
cld
xor
pop
xchg
mov
mov
push
daa
or
push
xor
ror
cmp
hlt
divb
xor
inc
xor
cmp
inc
or
movsl
add
pop
pop
inc
cmp
mov
xor
lods
je
jo
movsl
mov
dec
inc
mov
fldt
sti
icebp
or
push
xor
mov
adc
outsb
aas
jl
ljmp
fidivl
xchg
cmp
xchg
mov
xor
orb
inc
shlb
sub
rclb
dec
aaa
pop
fwait
add
inc
mov
ss
lret
push
lods
adc
cli
cmp
and
pop
sub
sub
add
dec
push
jne
cmp
mov
sahf
inc
pop
mov
pop
fs
mov
clc
out
cmp
hlt
push
sbbb
out
jbe
adc
test
loope
cmp
jg
add
pusha
cmovb
dec
call
push
fstpt
lock
gs
inc
adc
mov
or
sahf
xor
or
add
push
mov
ds
adcb
cmpsb
push
sbb
dec
in
dec
inc
push
push
mov
and
insl
jmp
mov
loop
mov
rorb
cld
push
xorl
inc
repz
push
movsb
das
jp
cmp
push
adc
loope
and
loope
xor
xor
or
pop
ss
pop
sub
xchg
jmp
dec
mov
loop
repnz
mov
mov
dec
mov
adc
pop
mov
inc
ror
dec
rclb
jb
outsb
mov
mov
push
movsb
sbb
jp
or
sub
jmp
in
loopne
dec
incb
arpl
sbb
push
and
xchg
push
pop
adc
pop
lret
and
mov
and
sub
or
add
xor
fdivs
push
jne
mov
adc
push
loop
fwait
xchg
pop
cmp
cs
or
out
jb
ret
ds
push
or
xor
inc
adc
push
pop
mov
xor
incl
push
int3
ljmp
ljmp
lds
push
inc
cmp
lea
push
cs
adc
mov
scas
or
scas
dec
jp
adc
lcall
cmp
jg
inc
jp
and
inc
cmp
jmp
mov
adc
pushl
sbb
cmp
mov
cmc
push
cld
inc
rolb
lds
mov
cs
lret
cli
adc
adc
push
jle
insl
test
test
cmp
rcr
cmp
sbb
mov
push
xchg
push
mov
add
je
and
ja
cmpb
shl
push
fdivrs
and
sub
int3
into
xchg
add
mov
clc
hlt
mov
divps
shrl
les
test
movl
xor
or
add
pop
xor
lock
fistps
jne
gs
cmp
mov
xor
loope
xor
cs
decb
test
in
rclb
inc
jle
fwait
add
inc
jno
mov
add
sbb
enter
and
or
sub
test
mov
add
and
pop
in
pop
and
outsl
jmp
add
dec
and
add
ds
and
push
jo
adc
jl
adcb
mov
cltd
adc
mov
data16
jne
inc
mov
adc
jno
ss
in
or
sub
push
jl
rolb
fwait
ret
negb
mov
mov
lds
les
jo
mov
push
xchg
aad
ss
fcmovbe
add
pop
lret
lods
call
and
dec
rorb
mov
lods
or
sti
scas
adc
inc
cmp
jecxz
loope
and
dec
mov
pusha
ja
and
pop
pop
dec
push
or
or
dec
add
cmp
dec
ret
leave
and
inc
pop
add
mov
sub
sahf
lcall
shlb
ret
add
arpl
xor
sarb
inc
xchg
dec
ret
mov
mov
sbb
lret
xorb
mov
lcall
aam
pusha
pushf
push
cmpsb
mov
outsb
add
and
clc
adc
in
adc
int3
bound
fnstcw
jle
fcoms
rorb
cld
cmp
fdivl
xor
add
movsb
js,pn
std
sahf
cmp
pop
shrb
fwait
push
mov
ret
push
in
mov
cmp
push
aaa
ss
push
call
pop
adc
cmpsl
pop
jns
adc
test
loop
pop
insb
and
fwait
test
dec
test
shl
mov
das
clc
outsb
xor
je
clc
push
xchg
push
cmp
mov
nopl
xor
add
and
inc
mov
jecxz
mov
pusha
push
pop
cmp
pop
dec
mov
mov
add
stos
jo
mov
push
fcompl
push
sub
mov
xchg
xor
xor
mov
sub
icebp
pop
and
add
inc
mov
hlt
pop
adc
test
inc
in
popa
lds
mov
out
andb
das
cmpb
mov
pop
jae
std
popf
loope
jl
popa
call
rol
jne
cli
aaa
lret
divb
inc
cwtl
add
xor
or
movsb
incl
sbb
mov
push
bound
out
mov
pop
jb
subl
jecxz
hlt
int3
das
mov
dec
xor
sbb
mov
cltd
roll
add
or
test
testb
mov
es
lock
add
sbb
xor
mov
adc
sbb
xor
mov
or
push
or
pop
insl
add
push
sbb
cmp
cld
xor
dec
popa
and
or
test
fdivs
shlb
cli
pop
test
out
push
aas
cmp
scas
dec
mov
test
jo
scas
js
cmp
xor
imull
add
xchg
xor
sub
ja
fst
js
mov
dec
mov
and
cli
mov
and
les
mov
into
mov
lea
xor
sbb
jno
jle
dec
aaa
dec
repz
shr
xor
insb
sub
rolb
xchg
lods
call
adc
mov
add
dec
pop
or
push
ja
clc
lcall
add
add
orl
out
cs
inc
daa
adc
sahf
pop
add
lods
add
pop
lock
inc
push
adc
ss
sub
les
pop
pop
inc
and
mov
popa
loop
add
or
movsb
pop
cld
jo
jmp
idivb
sbbl
pop
push
data16
out
mov
push
mov
lock
ret
adc
pop
inc
push
clc
mov
pushl
rolb
mov
or
mov
in
or
push
lret
je
sub
mov
jmp
lds
loope
mov
or
pop
cmp
and
shlb
cli
inc
add
inc
mov
scas
incl
mov
xor
push
push
loop
and
ficomps
fwait
adc
sbb
dec
or
call
jb
dec
push
inc
fistps
push
cmc
ret
mov
shl
jnp
push
insl
nop
pop
xor
orb
sbb
imul
repnz
add
mov
push
or
das
cmovbe
pop
mov
push
pop
aad
cmp
or
cli
jg
je
adcl
sbb
aaa
je
mov
pop
push
mov
push
xchg
mov
in
jle
sarb
push
inc
sbb
add
xchg
hlt
pusha
adcl
insb
ja
mov
xor
cmp
int3
inc
push
mov
adc
sub
inc
push
add
xchg
push
test
add
jmp
mov
or
pushl
sub
add
sbb
cs
mov
incl
call
jmp
cmc
or
clc
pop
nop
ljmp
pusha
mov
dec
xchg
adc
inc
subb
push
add
adc
push
ror
adc
mov
and
or
sbb
inc
sub
adc
push
adc
ljmp
mov
pop
adc
stos
inc
mov
cmc
jp
inc
mov
pushf
or
retw
scas
mov
orl
dec
cmp
add
rcll
icebp
bound
rclb
mov
mov
xchg
xor
shll
call
jo
fsubrs
push
xchg
dec
add
inc
pop
adc
mov
popa
and
push
cmpsb
push
adc
rcl
ret
fidivrl
sti
call
jnp
mov
scas
dec
fwait
lods
notb
insb
add
sar
filds
mov
inc
cmp
pop
push
lcall
add
mov
fdiv
inc
or
ret
inc
cmp
adc
or
dec
push
add
aad
cmp
test
roll
cmp
les
or
ss
jo
adc
push
and
mov
xor
push
paddw
pop
mov
mov
cli
pop
mov
or
fwait
movsb
icebp
mov
add
loop
and
outsl
and
or
mov
aam
jmp
gs
mov
paddq
jb
pop
lock
push
ret
call
jne
inc
ljmp
xor
adc
pop
rolb
sub
movsl
pushf
and
sbb
in
mov
mov
push
cld
stos
push
and
fsts
pop
nop
mov
or
cmpsb
jo
or
or
out
test
lock
jo
add
add
lods
cli
ljmp
lods
sar
popa
test
mov
xor
adc
inc
jge
mov
mov
or
and
insb
mov
xor
adc
and
adc
adc
adc
imul
pushl
nop
push
ljmp
cltd
add
or
clc
adc
sbb
sbb
ljmp
and
sub
movsb
mov
push
jo
insl
mov
and
sysexit
ret
test
mov
test
push
dec
xchg
inc
cmp
and
and
shll
lahf
xor
in
ljmp
push
lds
sub
into
shl
loopne
add
cwtl
in
jl
lock
jbe
and
xor
sub
shlb
dec
pop
unpckhps
push
jp
push
daa
jns
push
cmp
push
ljmp
sub
sbb
divps
push
push
mov
pop
es
mov
xchg
sbb
les
lock
lcall
jb,pn
and
jle
movl
dec
stc
and
je
inc
jbe
int3
int3
adc
je
out
rcll
push
add
mov
push
sub
sbb
pop
jns
out
mov
loopne
call
mov
inc
clc
loop
sar
in
std
in
sub
outsl
outsb
je
adc
xor
xchg
sub
push
push
inc
mov
addr16
inc
adc
inc
and
sub
sar
popa
js
insl
incl
test
bound
out
pushf
imul
and
jg
or
rorb
jle
fcompl
jb
cmpl
sub
aas
mov
and
rcrb
mov
adc
je
orps
test
call
loop
mov
inc
or
cmpsb
adc
inc
pop
je
xor
fstpt
jp
std
std
cli
fildl
jp
mov
adc
push
inc
pushw
test
xchg
rorb
pop
cmp
jg
pop
xor
fcmovu
out
or
and
xor
add
dec
mov
inc
dec
inc
sahf
xor
push
sbb
shl
push
test
xchg
mov
push
inc
jbe
jb
clc
mov
push
cmpsb
cld
negb
pop
fdivs
mov
push
fs
xchg
push
mov
pop
inc
push
mov
inc
call
out
aaa
and
mov
adc
shlb
or
push
das
pop
xchg
cli
mov
repz
cmp
or
add
add
dec
lock
jbe
inc
pusha
xor
cmp
and
adc
outsb
rcl
and
sub
xor
nop
jne
mov
ss
push
call
cmp
jmp
bswap
push
mov
es
adc
nop
add
adc
imul
add
and
or
js
cld
mov
fs
je
push
mov
or
cmp
int
mov
daa
mov
jo
mov
dec
jo
fcomi
add
dec
push
sti
rcl
dec
testb
shl
dec
roll
cld
aad
ds
sti
inc
or
test
jne
cmp
sub
adc
inc
mov
push
push
sarb
adc
rclb
add
sub
rolb
or
push
sbb
inc
mov
int3
xorl
pusha
lods
inc
push
adc
xchg
or
leave
sti
fisubs
push
incb
inc
inc
adc
inc
push
inc
push
lret
push
cli
mov
or
xchg
cli
cmp
mov
dec
xchg
aad
je
rcrb
xor
adc
ss
jmp
pop
cmp
add
cwtl
inc
pop
test
lea
xchg
pop
scas
pusha
or
adc
pop
mov
es
insb
push
xchg
sub
ficoms
xor
pop
imul
add
orl
jle
or
test
push
adc
outsb
jno
sahf
movsb
fisttpl
sbbb
ret
into
adc
cwtl
jo
gs
adc
push
popf
stc
cli
adc
inc
data16
adc
pop
sub
pop
mov
mov
mov
add
incb
in
sahf
std
cld
add
int3
das
sbb
cmp
xor
push
std
or
cld
lcall
dec
mov
jo
mov
inc
es
test
adc
icebp
cmp
shrb
cmp
scas
movsb
jmp
lret
mov
fldt
push
lock
pop
adc
call
push
or
xor
incb
pop
loopne
adc
pusha
xlat
inc
insb
push
push
fs
inc
add
outsb
inc
or
and
and
shlb
push
xchg
aam
stos
sahf
outsb
xchg
sbb
lea
adc
loop,pt
pushl
fsubr
mov
cmp
les
popa
xor
sub
hlt
xor
mov
sti
gs
cmp
push
mov
shlb
cld
jo
call
and
adcl
jmp
sbb
add
shrb
add
jl
fdivs
inc
bound
mov
je
sbbl
pop
push
mov
pop
testl
loopne
lods
xchg
leave
add
push
nop
cli
xchg
lock
sbb
adc
outsb
dec
add
dec
jns
rol
lea
frstor
imul
push
data16
push
cmc
decl
hlt
inc
xchg
mov
ljmp
jne,pn
aad
xor
in
adc
call
mov
test
xorl
xor
out
out
leave
cmp
cmpsb
aad
lock
mov
pop
and
xchg
add
std
rclb
jp
les
pop
xor
ss
lea
push
inc
xchg
cs
roll
pushl
out
mov
lods
or
xor
push
mov
sub
lods
or
rcrb
fldenv
out
push
add
in
dec
les
lods
mov
push
popf
ret
inc
imul
out
test
push
mov
pop
mov
iret
loop
shll
adcl
fwait
mov
or
daa
inc
lods
rcrb
adc
call
fnstcw
ljmp
cld
and
xor
loop
cmc
inc
jae
or
sbb
jp
cli
ret
mov
sbb
call
or
fs
dec
in
mov
lods
mov
fnstenv
je
or
add
cmpb
and
insl
lods
fiadds
lods
aas
movw
negl
subb
ljmp
cmp
icebp
lcall
cmp
scas
adc
mov
push
ja
pop
and
loope
push
xor
loopne
sbb
add
mov
aaa
lock
pop
mov
pop
inc
jb
jp
or
enter
inc
sbb
mov
dec
into
repnz
add
andl
add
ds
enter
js
mov
pop
adc
leave
bnd
popa
push
hlt
add
jmp
push
push
shl
xor
fnstenv
or
call
adc
dec
and
test
mov
cld
fcmovnbe
xchg
and
mov
dec
std
adc
shlb
shl
push
add
movsl
push
std
push
mov
int3
shlb
xor
stc
push
mov
sar
inc
repnz
and
inc
xchg
mov
mov
pop
aam
inc
or
addb
xchg
cmp
adc
jne
call
pop
sub
cmp
lods
xchg
stos
push
add
nop
cltd
adc
and
push
push
leave
nop
mov
inc
loop
lcall
sbb
je
push
add
aam
aad
aaa
xor
mov
in
incl
inc
and
adc
dec
push
add
inc
sbb
sbb
inc
sub
xchg
stos
mov
int3
fisttpl
ret
or
sbbl
in
mov
cmp
jne
and
popa
xor
idivb
jge
or
pop
fs
add
ret
clc
popl
add
test
call
pushf
jne
xlat
push
or
movsb
outsl
lds
into
aam
inc
jae
mov
loope
add
les
adc
sbb
push
rcl
call
push
ret
sbb
lret
mov
icebp
inc
push
fwait
andb
or
cmc
dec
jp
clc
dec
call
and
shrb
into
mov
sub
mov
jbe
out
jl
sub
jle
decb
cvttps2pi
lret
or
sub
adcb
lret
loopne
and
inc
pop
push
pop
divb
enter
pop
mov
xor
mov
add
sub
xchg
add
lcall
ret
leave
add
fiadds
fadds
add
and
shl
push
aaa
pop
push
and
inc
pop
sbb
xor
jg
call
push
cmpsb
loopne
cmp
cltd
xor
lretw
dec
push
stc
jmp
push
inc
xchg
pop
lock
sbb
jb
pushf
test
notl
dec
fidivrl
inc
mov
add
enter
jg
mov
movb
leave
inc
push
rcll
cld
movb
ficoms
test
lods
pushf
push
mov
add
ret
push
mov
mov
jae
and
call
mov
mov
repnz
mov
pop
outsl
add
adc
cmovp
lea
pop
fcmovne
lea
xor
shlb
cs
sbb
lret
adc
fldenv
pusha
pop
add
mov
outsb
push
aad
xchg
inc
incl
stc
add
add
ret
test
push
xor
push
add
inc
movsb
push
out
js
push
mov
add
inc
mov
lcall
mov
pop
ret
aaa
jae
xchg
hlt
push
fwait
sub
data16
outsb
jo
hlt
es
xor
mov
pusha
stc
add
in
movsl
int3
incl
aas
xor
mov
loopne
pop
add
mov
pop
fs
xor
mov
add
fbld
ret
out
mov
xchg
or
cmp
scas
xor
push
xor
jge
xor
push
lods
inc
dec
imul
xchg
fmul
fs
jg
ja
pop
mov
add
aam
add
fdivrl
lret
pop
mov
lock
add
fwait
xchg
out
inc
test
push
movb
outsl
fcomps
inc
adc
adc
cld
and
jbe
mov
pop
lock
js
and
pop
test
push
cmpl
vmaxps
loopne
mov
jne
push
imull
xchg
hlt
xor
adc
xchg
and
mov
xorb
mov
add
insl
cmp
push
inc
mov
jne
jg
mov
lea
int3
add
pop
mov
test
decl
inc
inc
into
dec
cmp
add
push
xchg
sbb
sbb
and
and
in
mov
les
adc
push
cmp
icebp
lods
insb
lods
push
shlb
jl
mov
testl
mov
mov
push
xor
mov
mov
int3
pop
adc
stos
push
sub
mov
ret
gs
sub
mov
push
adc
inc
dec
dec
jmp
lods
mov
shll
xchg
adcl
mov
cmp
dec
insb
fists
mov
nop
mov
mov
ret
js
or
call
imul
leave
push
jne
dec
push
incb
jl
dec
mov
in
insb
xchg
mov
or
ss
pushf
inc
cltd
add
lcall
cld
push
insb
xchg
test
push
push
push
lret
dec
xchg
xor
inc
int3
jbe
push
loopne
fsubl
pop
clc
and
ds
or
adc
push
rorb
inc
ljmp
stos
xor
cli
mov
mov
add
mov
test
xchg
les
xor
sarl
xor
loop
jo
pushf
shlb
jg
push
jae
dec
sbbl
inc
xchg
fs
pusha
addr16
jp
and
les
je
jbe
mov
dec
imul
or
dec
xchg
ss
jge
xchg
add
xchg
add
xor
xor
filds
loop
push
or
jg
in
mov
push
xor
sbb
mov
add
mov
ljmp
jno
fisubl
xchg
mulb
mov
sub
pop
clc
mov
out
push
outsl
mov
pop
inc
rolb
shlb
jg
mov
das
pop
ret
jo
int
mov
shl
sbb
push
test
pop
cli
ja
mov
adc
xor
insb
ljmp
cmp
pop
sub
out
ret
bound
inc
insl
insl
jecxz
fsubs
and
sar
mov
cmp
sarb
add
pop
mov
xchg
test
jecxz
mov
and
or
sub
add
ss
das
scas
push
fwait
and
xor
or
pop
js
sub
jg
add
inc
or
aam
lret
clc
data16
insb
idivl
lea
or
cmp
loop
add
xchg
cmc
mov
lcall
add
int3
sub
or
incb
xor
enter
mov
repz
adc
adc
call
ja
or
add
leave
jecxz
dec
pop
lods
jge
push
xor
mov
adc
stc
mov
mov
sbb
pushl
mov
push
inc
xor
std
mov
roll
inc
push
ds
pop
outsb
inc
xor
xor
mov
xchg
or
imul
das
cmp
gs
jmp
sbbl
lods
push
je
call
xchg
jno
cmp
js
push
dec
pop
mov
out
adc
add
jbe
push
inc
add
in
inc
push
pop
sbb
fimull
push
scas
xchg
aad
mov
mov
sbb
add
outsl
sub
jmp
ljmp
add
push
popf
jecxz
inc
jo
adc
std
fucomip
pushl
mov
lds
fisubrl
mov
sub
mov
adcl
mov
jle
jne
adc
jne
cwtl
dec
pop
lods
push
adc
jmp
shlb
push
outsl
adc
pusha
fs
cltd
xor
sbb
push
outsb
adc
push
loopne
mov
enter
xchg
lods
push
insb
sbb
js
sub
aam
xlat
lret
or
push
dec
or
sahf
and
push
xchg
mov
popf
lea
clc
out
insb
jecxz
add
push
xor
clc
sbb
push
adc
xchg
hlt
mov
fsubrs
and
xor
push
xor
dec
in
clc
or
and
add
or
call
hlt
and
inc
loopne
std
incl
mov
pushl
ljmp
test
adc
shlb
adc
mov
leave
imulb
fisttps
add
mov
adc
inc
inc
pop
cli
nopl
fdivrl
and
sbb
mov
ljmp
addb
fidivrl
add
ficompl
hlt
sbb
cli
sbb
inc
adc
adc
dec
int3
stos
jmp
xor
in
mov
out
ret
add
mov
add
fildll
and
pop
cwtl
pusha
icebp
adc
cli
ret
push
stos
das
adc
jo
adc
icebp
and
rcrb
enter
popa
shrl
add
sbb
mov
push
sbb
cmp
add
mov
sub
subl
adc
addr16
mov
sti
add
test
test
mov
or
add
jmp
push
inc
dec
jmp
call
sti
push
sub
movl
clc
mov
cmpsb
and
loope
test
clc
lock
mov
mov
push
push
je
or
mov
lcall
gs
stos
repnz
gs
sub
ret
sub
ss
out
add
ret
push
or
or
mov
pop
mov
das
clc
inc
jp
xor
adc
inc
sbb
jg
insb
js
sbb
mov
add
icebp
lahf
push
cli
mov
gs
or
call
outsl
xchg
push
mov
ss
jb
push
mov
pop
fprem
arpl
pop
int3
jle
or
and
test
in
mov
rcrb
and
adc
mov
std
adc
and
enter
inc
push
adc
push
and
pusha
cltd
adc
lock
add
repnz
incl
fistl
lods
je
mov
dec
insb
inc
mov
push
cmp
pop
lock
add
adc
insb
nop
pusha
dec
push
sub
sahf
call
shlb
jmp
jg
cmc
sub
cltd
sahf
push
or
sbb
cmp
push
dec
imul
inc
cmc
pop
std
jecxz
push
cmp
inc
add
push
std
inc
pop
mov
rolb
cmpsl
call
or
push
fs
rorb
incl
cld
inc
xchg
orl
fdivs
or
push
lock
push
andb
out
add
cs
inc
stos
movsb
sub
addb
push
nop
sahf
daa
pop
das
std
and
jb
adcl
mov
pop
cli
mov
rolb
pop
mov
cmp
xor
cs
sbb
shrl
test
fsubrs
push
fisttps
dec
lret
nop
xchg
pop
jecxz
repnz
test
xor
das
mov
xchg
ret
popf
lahf
xor
jb
jne
dec
fisubrl
push
mov
xlat
jp
inc
inc
sub
pop
les
insl
lcall
je
test
push
push
mov
shlb
or
std
sbb
inc
sbb
mov
add
mov
rolb
mov
in
xchg
push
pop
mov
cmpb
loop
push
add
xchg
add
inc
adc
testb
push
adc
or
sysenter
sbb
push
scas
mov
std
mov
or
push
push
ljmp
inc
and
adc
je
push
inc
cmp
and
cltd
addl
push
mov
cmp
or
into
push
or
mov
loopne
jb
loopne
xchg
cmc
add
psadbw
imul
push
cmpsb
dec
jae
in
int3
jb
mov
mov
clc
sub
lock
mov
xchg
lret
mov
insb
dec
push
xor
scas
lods
add
popa
pusha
dec
add
xor
sbb
mov
popa
rcl
cwtl
xor
jle
adc
jg
push
lods
int3
mov
lods
imul
in
inc
mov
clc
jno
push
bound
les
mov
dec
fistps
pop
jnp
jnp
imul
add
stos
mov
mov
ja
pop
push
fcomps
shll
imul
push
cld
push
in
and
inc
pop
cli
cld
jno
and
outsl
or
dec
adc
std
dec
jp
push
sbb
call
push
jne
mov
enter
mov
lea
push
fisttpl
push
dec
xor
scas
fsubl
aad
cmpsb
mov
push
aad
sbb
inc
xchg
jg
dec
pop
jb
mov
lea
divl
aad
repz
test
test
dec
icebp
out
js
stos
mov
cld
or
xchg
pop
lods
in
loopne
imul
cmp
sti
jb
inc
cmpsb
js,pn
pop
scas
xor
aaa
ljmp
mov
cmp
lcall
mov
jle
sub
add
add
mov
xchg
inc
and
aad
nop
adc
cld
cmp
push
and
jb
push
jmp
mov
loope
notb
aas
sbb
outsb
pop
imul
in
cmp
les
pusha
xchg
inc
or
push
cmpl
sub
or
jmp
test
subb
js
jno
lock
pop
inc
adc
xor
call
xchg
mov
test
aam
test
int3
rorl
rorb
inc
das
outsb
enter
cmp
in
push
addl
xor
jae
test
shrb
add
les
lock
add
dec
insb
shrl
fisubl
cmp
xor
bound
add
adc
mov
lret
clc
jecxz
sbb
jge
loop
add
scas
shrb
idiv
mov
push
add
or
aam
rcr
rolb
inc
mov
pop
js
jmp
cli
decb
and
and
rclb
jbe
jle,pt
sub
pop
dec
fcompl
mov
orl
cmp
add
data16
xchg
in
data16
pop
lret
cmp
idiv
aaa
jo
bound
in
sbb
dec
popa
ficoml
jns
mov
pusha
rcrl
popa
inc
dec
add
iret
and
mov
lock
test
add
add
add
inc
add
add
adc
dec
jmp
mov
add
and
cmc
sub
pop
mov
adc
ss
inc
and
test
mov
push
insb
outsb
add
ret
adcl
add
push
push
add
ret
mov
ud0
or
jo
es
test
add
pop
xchg
ret
or
sub
lock
push
jb
out
ja
push
mov
add
push
mov
sbb
jae
test
out
fdiv
mov
bound
xor
lock
xlat
mov
mov
xor
jo
mov
arpl
or
sub
in
cmpsb
push
or
push
loop
sbb
mov
push
push
mov
inc
pop
pop
inc
les
cmc
push
loopne
ret
add
inc
std
add
cs
shlb
jl
mov
inc
dec
dec
icebp
out
repnz
jo
cmpsb
push
fdiv
or
mov
xchg
adc
aaa
loopne
xor
lret
mov
add
sbb
push
add
sub
outsb
push
add
push
outsl
or
xchg
mov
mov
es
dec
adc
adc
pop
pop
add
aad
inc
xchg
icebp
inc
jnp
popa
add
or
or
lcall
ret
mov
shr
rorl
pop
mov
mov
pop
sahf
cli
or
adc
cmp
js
jge
push
je
outsl
push
mov
sub
ja
pop
dec
xchg
pusha
call
and
push
ja
mov
xor
cld
mov
mov
lcall
leave
mov
sarb
out
cltd
sbb
in
int3
sub
adc
call
jl
outsb
xchg
push
and
fcoms
mov
test
add
call
mov
fldcw
pop
loope
outsl
push
ficompl
adc
ljmp
ds
loop
push
add
mov
dec
or
pop
add
adc
adc
je
inc
fs
imul
jl
or
mov
mov
mov
sub
push
in
std
mov
jne
sub
cltd
lret
or
push
hlt
aam
cld
hlt
add
add
mov
and
add
mov
in
mov
mov
pusha
jle
cmp
inc
dec
add
inc
jb
aad
mov
mov
cmc
incb
scas
and
les
or
into
sub
jmp
rorb
jle
inc
mov
or
jmp
es
andb
pop
jb
sbb
xlat
test
and
add
mov
jne
push
movl
data16
hlt
sbb
mov
stos
and
pop
add
mov
or
mov
mov
data16
push
sbb
xor
push
mov
xor
inc
jle
and
repnz
insl
push
mov
hlt
xchg
fbld
scas
adc
and
add
mov
test
bound
mov
and
add
mov
lock
cmp
in
mov
test
das
pop
adcb
decb
jmp
test
inc
fildll
pop
mov
es
pop
xorl
insb
test
inc
sub
jg
cmp
adc
in
enter
add
push
xor
mov
mov
adc
in
mov
lock
dec
sar
sub
add
fidivrs
mov
mov
hlt
sub
dec
fcomps
ret
and
jge
add
push
rcrl
cmp
mov
inc
mov
sub
out
aas
jle
mov
sahf
xchg
pop
and
data16
and
pushf
cmp
sbb
popa
loopne
inc
nop
cli
es
or
fstpl
jl
lret
lock
push
jmp
xor
out
stos
into
mov
inc
mov
mov
or
add
insw
call
cmp
xor
jg
sub
or
call
jmp
test
mov
mov
sub
jl
shll
nop
call
clc
cli
xor
pop
adc
cmp
or
jp
ds
push
arpl
in
loop
outsl
outsl
push
hlt
inc
adc
and
pusha
add
inc
lret
or
cmp
add
rorb
rorb
mov
jp
push
lods
loop
pop
cmp
mov
movsl
ja
call
push
inc
xchg
fwait
mov
cld
mov
xchg
sub
jl
jle
shlb
mov
sub
mov
pop
inc
outsb
int3
insb
push
adc
dec
jbe
mov
rclb
lea
insb
push
push
mov
jne
mov
inc
lcall
mov
mov
int3
outsl
adc
repz
push
int3
insl
jmp
insl
decl
push
mov
adc
xchg
mov
xor
mov
xchg
loop
sub
pusha
repnz
dec
cli
test
xchg
mov
fwait
pop
xchg
pop
pop
dec
nop
ret
xchg
movb
mov
roll
and
and
icebp
pop
and
push
inc
and
add
pop
adc
fisubrs
cmp
push
mov
sbb
xchg
inc
jmp
mov
pusha
lcall
lcall
cltd
sbbl
fbld
sbb
xchg
test
mov
pusha
mov
adc
sbb
and
shr
jne
mov
cmp
jge
push
or
mov
ss
xchg
sbb
mov
mov
mov
enter
cmovg
push
jne
test
test
add
fmull
push
dec
inc
jge
mov
sub
and
insb
adc
sbb
data16
push
int3
pop
hlt
test
pop
inc
cli
mov
lods
push
add
popf
sub
inc
in
arpl
cmp
xor
cs
jb
or
stos
mov
pop
push
mov
sub
lret
ret
cmp
jl
pop
out
sbb
aam
jp
add
out
hlt
cltd
pop
ja
pop
xor
gs
xchg
jb
inc
cmp
cmc
jp
adc
push
call
inc
mov
push
mov
scas
inc
stos
lock
cmp
mov
xor
mov
push
aam
xchg
out
push
mov
pop
dec
xor
dec
je
adc
push
pusha
inc
push
push
stos
add
xchg
call
cmp
pop
pinsrw
cmp
pop
lea
ret
xchg
add
pop
insb
inc
mov
mov
add
mov
pop
hlt
fsubl
fwait
js
incb
push
rcrb
mov
test
ud2
insl
sbb
push
mov
outsl
sarb
mov
xchg
adc
rolb
icebp
out
ljmp
add
xor
xchg
out
aaa
loopne
mov
je
rolb
inc
dec
stos
mov
xorl
xchg
test
mov
cli
pop
add
push
fmuls
pusha
xchg
sub
fmuls
mov
jnp
leave
xor
fsubl
mov
cmp
xchg
and
jecxz
es
leave
aad
mov
push
mov
xchg
cmpsl
imul
mov
sbb
sbb
js
or
loop
ja
imul
or
jmp
jne
inc
scas
ret
push
aam
push
popf
mov
ret
mov
inc
mov
pmulhw
data16
lea
jbe
and
int3
mov
test
push
jb
aaa
xchg
lret
lret
inc
std
dec
fs
loope
pop
pusha
xchg
cs
sar
mov
inc
nop
push
sbb
test
arpl
shrl
inc
ljmp
loope
pop
and
js
jge
scas
mov
stos
pop
cld
jmp
clc
scas
mov
add
xor
sub
call
and
enter
out
mov
pushl
add
xor
je
cld
loope
cmp
add
mov
ljmp
add
sti
pusha
das
or
add
adc
rcl
int3
shll
das
or
mov
sbb
cmp
inc
sub
addl
push
ret
shlb
test
push
ss
das
lods
add
jne
hlt
add
inc
nop
pop
inc
rol
addb
xor
jge
lods
jp
std
jbe
cltd
call
adc
mov
sbb
sbb
cwtl
dec
inc
push
jge
inc
sbb
add
jl
xchg
push
fisttpl
call
or
inc
push
sub
test
jp
lods
lcall
inc
mov
or
lret
push
push
int3
cmc
jmp
push
pop
mov
xor
or
push
xor
aam
ljmp
pushf
loop
fsubs
cmp
push
inc
or
aam
mov
mov
scas
xor
in
loop
fdivl
call
add
mov
inc
loop
push
sbb
mov
aas
test
les
mov
ret
adcb
push
dec
and
mov
lock
in
sahf
sub
push
inc
sbb
mov
mov
mov
fdivrp
mov
dec
stos
ljmp
mov
lea
push
cmp
adc
xchg
test
and
std
mov
and
les
and
lods
inc
xchg
mov
sub
ljmp
mov
and
mov
rcrl
pop
pop
jmp
adcl
mov
jmp
ss
in
xchg
sarb
lret
adc
pushf
add
pop
mov
add
sub
loope
dec
nop
adc
adc
xchg
test
and
out
adc
inc
push
mov
push
dec
cmp
scas
imul
movsl
add
jmp
mov
sub
std
in
inc
sbb
stc
jg
lret
mov
mov
imul
js
or
sub
sub
dec
dec
jg
mov
dec
pushl
push
fistl
inc
or
cs
cvtdq2ps
std
test
mov
fsubrl
mov
int3
movsb
in
jae
or
insl
inc
mov
in
and
lea
fcmovnb
mov
int3
jp
mov
jg
mov
bsr
xor
test
cmp
nop
xchg
jbe
pop
sub
inc
bnd
cld
clc
push
sbbl
and
lea
data16
mov
aam
test
lcall
jno
sbb
or
pop
pop
stos
push
xchg
inc
fmull
sahf
gs
ljmp
cld
cwtl
jne
pop
dec
mov
mov
dec
jecxz
les
ljmp
cmp
decb
or
lea
sub
mov
xor
ficomps
mov
jp
sub
rorb
cmp
adc
mov
dec
das
or
mov
imul
mov
xor
clc
pop
jne
mov
xchg
test
or
cmp
dec
clc
push
mov
adc
xchg
mov
cld
rcll
xchg
add
fadds
inc
jne
dec
add
cmp
push
lahf
out
pop
lret
enter
and
and
mov
sti
shrb
mov
movsb
and
test
cmp
xor
scas
rorl
xchg
push
lock
xchg
cmp
test
cmp
jp
add
test
xchg
out
xchg
sahf
pop
jmp
cmp
aas
cld
lods
cld
xor
lods
xchg
int3
leave
icebp
mov
call
jle
cmp
push
sti
cmp
mov
xor
std
imul
add
mov
ss
sar
leave
enter
adc
addb
pop
mov
push
mov
or
je
pushf
mov
pop
test
daa
cmp
push
cmp
dec
push
push
push
mov
mov
inc
test
pop
cli
pusha
or
mov
test
addl
hlt
mov
add
mov
inc
and
mov
push
ja
adc
mov
push
ret
dec
cs
mov
jp
sub
xor
in
inc
cmp
push
mov
xchg
mov
in
pop
scas
jo
xchg
mov
add
xchg
add
fs
xor
imul
out
clc
es
sahf
popa
cmp
inc
adc
fwait
into
cmp
in
inc
jle
in
and
or
or
and
jle
and
adc
adc
mov
push
mov
sub
dec
push
cmp
mov
and
ror
push
jbe
loopne
cli
fmul
adc
lea
mov
push
push
jmp
pop
add
inc
andb
push
fistpl
jns
test
add
or
aad
pavgw
lds
out
add
orl
enter
push
adc
cmp
cmc
leave
in
cs
jae
mov
mov
mov
mov
lret
push
scas
add
loopne
in
push
test
mov
arpl
lret
add
xor
mov
dec
ret
pusha
cld
mov
ret
lds
xchg
cmp
sub
hlt
dec
push
adc
add
lea
xchg
cmp
mov
je
inc
push
shlb
cmp
add
add
popa
cmpsl
add
inc
stos
daa
push
pop
xchg
filds
jmp
sub
mov
and
rcr
aad
jmp
xchg
inc
cli
or
pop
icebp
cmpsb
jmp
lcall
flds
cmp
int3
jns
test
call
fs
cmp
and
out
outsl
fs
stos
test
and
daa
add
push
jne
adc
lods
or
ficoms
inc
and
in
mov
push
mov
jg
scas
inc
ds
incb
push
cmp
mov
adc
xor
sub
dec
add
es
negb
pop
cld
leave
decl
jmp
sbb
cld
ljmp
mov
cltd
inc
inc
mov
jb
insb
xchg
and
mov
and
add
enter
jge
sub
xchg
sub
ret
push
push
xchg
pusha
sbb
shrb
test
jge
add
jle
mov
jg
dec
and
add
mov
sbb
xor
cmp
xor
out
and
mov
lcall
pop
gs
sub
mov
push
sub
push
pop
dec
or
xor
jecxz
adc
mov
mov
movsb
or
inc
push
aam
add
adc
stc
add
lods
rolb
out
in
and
les
or
je
rorb
lods
dec
aam
mov
je
cmpsb
pop
fs
movaps
fs
lret
push
test
adc
clc
sbb
sub
js
jmp
adc
xor
outsb
xchg
daa
or
mov
popa
mov
mov
mov
cli
das
jne
stos
push
adc
cmc
mov
das
cmp
add
add
and
rcl
pop
js
mov
adc
aas
adc
add
dec
in
mov
cs
js
imul
push
push
or
lods
push
jle
fs
xor
pop
pop
test
outsb
lcall
push
fildll
add
mov
or
ret
jl
gs
push
pop
xor
pushf
cmp
filds
inc
movsl
imul
fdivs
shll
xor
pop
mov
dec
cmp
sbb
insl
pop
mov
or
rorl
mov
sbbb
daa
movsb
in
fs
jp
mov
mov
test
shlb
cli
in
dec
lcall
sbb
inc
push
cld
sbb
xor
aad
sbb
jle
pcmpeqb
out
mov
mov
add
mov
push
outsb
mov
cmp
std
jno
mov
orl
inc
mov
or
add
jo
dec
loopne
stc
inc
pcmpeqw
outsl
add
std
add
pop
sbb
jge
imul
xor
roll
xchg
dec
into
out
mov
xor
decl
shll
rcrl
ret
push
mov
cs
js
roll
adc
repz
loopne
add
or
mov
adc
cmc
jg
cli
pop
cltd
in
inc
sub
aaa
add
adc
or
mov
xchg
loope
mov
in
xchg
icebp
adc
pop
push
inc
in
mov
popa
mov
sbbb
aas
fs
ja
sbb
push
mov
pop
dec
mov
push
add
mov
cmp
and
mov
cmp
push
hlt
push
push
in
jge
cmpl
in
addl
xorb
dec
pop
mov
sbb
mov
ret
call
and
into
nop
cmp
push
pop
or
stos
mov
xor
push
shrl
inc
pop
fidivs
shrl
std
insl
xor
mov
and
enter
sti
jo
adc
dec
inc
xchg
aaa
inc
inc
push
cli
scas
sub
stos
icebp
adc
adc
mov
sahf
push
mov
int
sbb
and
push
add
pop
or
mov
sbbb
mov
and
push
pop
ljmp
or
ja
push
inc
call
icebp
pushl
subl
stc
push
outsb
test
cld
fsubl
cmp
or
dec
jo
pop
or
dec
mov
iret
outsl
popa
fidivl
mov
fbstp
xor
into
adc
cmp
cltd
test
mov
add
adc
pop
sub
incb
addr16
pushf
ja
sahf
xchg
adc
aad
ret
testl
repnz
loopne
pusha
push
xchg
mov
inc
adc
lock
push
sub
repnz
jbe
jp
aaa
mov
paddd
fidivs
fsubrs
aaa
fiadds
test
int3
mov
sub
adc
test
adc
cltd
or
call
loop
cmp
fmul
xchg
dec
fisttps
andb
push
xchg
cli
addb
frstor
sub
loop
xor
pop
xchg
dec
out
jb
scas
jl
push
inc
cli
add
add
scas
outsb
lcall
insb
mov
mov
mov
hlt
mov
decl
mov
lock
cld
movsb
test
fsub
shll
mov
popf
and
decb
insl
push
add
or
cmp
pop
cld
xchg
scas
mov
lea
or
stc
gs
cmc
push
lods
cmp
mov
orb
sub
add
adc
dec
adcb
adc
gs
loopne
add
push
rclb
lret
mov
or
andb
push
sub
xchg
push
dec
adc
in
ret
lea
cld
push
dec
push
jmp
enter
je
mov
push
add
xor
insl
and
out
and
xchg
fadds
or
mov
dec
pop
cmp
in
adc
dec
ja
ljmp
cld
movsl
sbb
js
push
adc
jae
imull
ret
jno
or
or
data16
jge
push
mov
cmp
mov
jo
jmp
lret
add
push
stos
inc
pop
add
mov
sahf
pop
adc
loope
xor
testl
mov
add
push
jbe
jb
rolb
mov
sbbb
pop
call
cs
clc
lcall
add
aam
sub
add
cwtl
or
xor
out
push
popf
adc
cli
xchg
test
arpl
scas
cwtl
mov
lods
mov
js
scas
add
clc
adc
test
push
or
mov
cmp
cld
xchg
mov
cld
adc
cmp
xor
loopne
mov
gs
or
ljmp
push
inc
add
pop
fwait
test
shrb
and
test
or
leave
jb
mov
cmp
cld
jg
adcl
lahf
shlb
rolb
shll
pop
inc
xchg
adc
inc
sub
sub
idiv
and
sbb
fiadds
js
sbb
pop
adc
mov
aas
aam
int
ds
nop
sub
pop
movsb
xlat
lods
xchg
add
and
mov
sub
faddp
lods
imul
sti
sub
or
sub
add
jmp
jle
leave
and
adcl
incb
enter
pop
adc
mov
or
imulb
sbb
push
mov
xchg
xchg
add
outsl
jmp
test
rcrb
add
mov
dec
adc
rcr
xchg
or
sub
mov
testb
call
arpl
add
mov
dec
add
dec
dec
sbbb
pop
sub
dec
ret
stos
push
cmpsl
push
add
icebp
roll
in
bnd
add
or
or
mov
sbb
fs
in
add
popa
ljmp
push
pop
add
mov
ss
mov
lcall
subl
lcall
pop
add
sub
sbb
xchg
inc
lret
fdivl
pop
xchg
add
popa
arpl
pop
push
mov
mov
push
pop
and
adc
xchg
xor
add
xor
and
fwait
push
push
mov
push
adc
xchg
sbb
sub
mov
mov
cmpsl
push
shrl
out
inc
loop
sbb
or
push
and
ja
test
loop
mov
adc
cld
adc
aas
mov
mov
xor
aam
push
jns
or
outsl
mov
insb
cli
add
add
add
js
push
mov
pop
or
or
xchg
add
cli
cmovno
add
sub
or
addr16
aaa
and
mov
das
xor
push
mov
inc
mov
push
xchg
pop
and
xor
fbld
sub
cmp
inc
call
add
or
addl
idivb
mov
fnstsw
enter
loop
xchg
dec
fadds
test
das
push
mov
clc
mov
fstl
andb
xor
mov
mulb
mov
mov
inc
cmpsb
gs
mov
fisubrs
stos
mov
cmpsb
mov
test
xchg
inc
stos
mov
push
adc
lret
stos
push
in
mov
push
loopne
xchg
lock
inc
push
push
pop
into
xor
bound
mov
orb
jp
mov
xor
jmp
jl
add
mov
xchg
dec
enter
mov
jl
or
cmpb
ret
mov
sahf
in
orb
cmc
cli
fbld
adc
add
outsb
sti
das
pop
jg
daa
push
stos
pop
jp
rolb
cli
aaa
dec
inc
adcl
jge
inc
xchg
mov
lcall
cli
pop
gs
mov
push
sbb
fiadds
cli
and
outsl
xchg
jbe
adc
xor
icebp
adc
or
mov
rclb
movsl
pushl
fdivrl
rolb
mov
sub
sar
movswl
pusha
ljmp
mov
xchg
mov
mov
sbb
adc
decl
push
insb
aaa
push
or
mov
or
xchg
jle
out
or
mov
lock
jp
and
inc
cmp
mov
pop
fisubrs
and
mov
decl
adc
add
es
cwtl
mov
in
sti
shrl
mov
push
rolb
xlat
xor
data16
cs
pushf
or
jnp
test
ret
pushf
insb
frstor
js
enter
js
and
jle
push
test
mov
lret
xchg
sbb
outsl
sub
push
mov
test
lret
push
cmpsb
push
movb
leave
sbb
and
cld
xor
stos
pop
mov
push
mov
mov
repnz
pop
aam
test
imul
xchg
add
insl
mov
int3
jl
stos
pop
jl
add
loopne
jne
hlt
inc
out
inc
jmp
insl
data16
clc
push
jg
fldt
cmp
dec
pop
jmp
loopne
call
or
fisttps
jo,pt
ljmp
push
loop
mov
pop
sbb
add
jne
inc
inc
jmp
push
cmp
loopne
xchg
dec
lea
dec
jb
add
cmc
mov
or
dec
inc
add
jno
mov
js
mov
stos
cmp
fcomi
pop
mov
inc
inc
or
popf
add
lea
and
mov
inc
jge
adc
pop
pop
fmull
adc
mov
add
call
dec
cmp
or
cwtl
sbb
in
or
xor
pushf
and
pop
icebp
arpl
xor
inc
lea
mov
aam
push
dec
inc
jb
cmpl
pop
cmpsb
enter
xchg
nop
lcall
or
sbb
or
pop
shl
jmp
in
repnz
out
rolb
jle
xchg
aam
clc
push
push
lret
adc
enter
nop
push
lock
add
pop
and
in
insb
sbb
inc
jl
in
rol
jge
sbb
mov
je
push
incb
in
inc
or
mov
adc
movsl
inc
mov
dec
jo
std
inc
aad
add
outsb
out
mov
faddl
scas
fsts
inc
push
jbe
cmp
sbb
push
adc
and
out
mov
fmuls
loopne
nop
adcl
fwait
inc
ficoms
push
xchg
cmpsb
jns
mov
mov
aad
fadds
adcb
push
pop
push
cmpsb
jmp
pop
in
out
inc
subl
outsl
xor
push
cmp
sbb
cmp
sbbl
inc
lcall
mov
lock
or
enter
cltd
cmpb
out
fs
pop
add
pop
loop
mov
push
mov
sbb
insb
adc
dec
cld
push
and
mov
rep
arpl
js
mov
pop
push
mov
push
jp
pusha
data16
pop
push
mov
push
addr16
aam
fld
fdivrs
out
mov
inc
sbb
push
ret
call
les
adc
add
push
pop
inc
mov
stos
movsl
add
pusha
dec
mov
mov
add
pop
cmp
movsb
and
cmpsb
cmp
push
je
cmp
call
jno
push
fists
pop
cld
outsl
push
pushl
rcrb
imul
outsb
sbb
ds
mov
pushf
pop
mov
jnp
lcall
into
add
inc
jl
and
mov
mov
je
fdivrl
lds
xchg
xor
adc
pop
shlb
xchg
lods
lods
cwtl
push
ret
call
fisubl
add
push
clc
movsb
out
jb
in
jns
sbb
data16
cmp
fsts
les
push
cmc
ret
outsl
or
mov
adc
push
sbb
clc
call
pop
mov
rorb
adc
mov
outsl
dec
jle
in
mov
xor
or
faddl
push
inc
mov
call
jno
hlt
adc
pop
and
mov
push
push
xchg
push
test
test
add
movsb
xor
rorb
push
or
dec
fs
and
ret
lods
mov
js
mov
inc
dec
std
cs
add
in
cli
cmp
jl
andl
xor
push
adc
xor
add
lret
mov
cld
call
mov
or
pop
sub
add
adc
adc
inc
mov
dec
cld
std
or
lret
daa
add
test
repz
mov
imul
dec
lods
and
xor
mov
mov
push
xor
adc
sub
jmp
and
add
dec
in
mov
add
adc
push
icebp
dec
andb
ljmp
nop
lea
leave
jno
negl
mov
and
mov
and
adc
fsubrp
test
mov
mov
repnz
or
scas
arpl
outsb
out
aas
cli
xchg
outsb
push
fisttpll
jmp
pop
fdivrs
sar
push
mov
shrl
movl
clc
xor
cld
int3
fadd
add
js
xor
or
cmc
sbb
xor
fadds
inc
pop
movsl
and
cmp
xor
movaps
nop
jl
sub
aas
mov
add
lea
push
xchg
push
xor
jle
in
push
sbb
js
lock
add
add
mov
call
dec
sahf
cmp
enter
int3
jo
push
dec
xor
mov
dec
mov
mov
popf
shrb
std
cmp
fxam
xor
cmp
imul
aaa
in
cld
je
out
xor
decl
in
push
sbb
jns
mov
xor
ljmp
test
shrb
jno
and
jg
outsb
push
mov
daa
incb
mov
in
push
add
mov
add
orb
dec
ret
das
push
push
push
push
lret
jl
insb
pusha
jl
sbb
jb
call
adc
adc
pop
insb
jbe
adc
adc
mov
dec
mov
sbb
inc
inc
jnp
inc
pop
loop
fsubl
fdivp
int3
in
push
and
mov
out
dec
adc
mov
pop
or
push
dec
es
add
mov
sahf
bound
loopne
or
xchg
pusha
adc
push
sti
ja
jb
int3
cli
sbb
std
push
mov
cmp
jo
lods
fs
dec
rorb
pop
icebp
pop
lods
push
gs
clc
adc
ss
test
dec
add
jb
movsb
cli
sbb
incl
lock
dec
test
xchg
cmp
mov
or
push
jne
push
mov
loope
sbb
sbb
push
mov
xor
aam
inc
enter
inc
jge
out
sbb
and
jp
jo
push
inc
mov
hlt
and
dec
mov
fldt
cmpsb
lcall
mov
and
or
sub
adc
call
call
adc
jp
or
int3
addr16
push
dec
pop
inc
out
pop
loop
jge
or
enter
imul
xchg
sahf
dec
push
xor
or
cmp
ret
or
mov
mov
pop
pop
inc
mov
jge
je
scas
movsl
cltd
mov
es
dec
xchg
sbb
sub
mov
lea
pop
jecxz
dec
mov
xor
jb
or
shll
add
sub
lret
dec
sysenter
out
xor
jne
arpl
scas
imul
fwait
sub
pop
cmp
or
call
insl
push
dec
mov
mov
stos
sub
jbe
mov
or
inc
sub
push
popa
and
lods
mov
inc
mov
push
imul
sbb
push
and
mov
xchg
les
and
loopne
repnz
rcrl
and
into
insl
push
lock
pop
aad
lea
inc
sbb
dec
mov
inc
sub
xor
add
mov
push
jp
jg
mov
xor
loopne
push
pop
push
cld
push
ja
in
aas
mov
lock
pop
roll
outsb
add
push
in
and
pop
push
cltd
mov
xorl
clc
add
xchg
jne
fwait
and
push
aaa
stos
fsubl
imul
cmp
sub
jne
add
jg
cmp
pop
jb
push
mov
sub
inc
mov
mov
dec
ljmp
lret
lret
adc
push
stc
cmp
insb
fs
adc
push
inc
or
jl
test
sub
pop
inc
lock
lcall
push
jge
inc
sbb
movlps
inc
cli
add
sarb
mov
stos
in
xor
das
adc
fimuls
adcb
push
aaa
cwtl
std
repnz
xor
clc
outsl
jp
adc
and
icebp
inc
add
jne
ret
mov
push
mov
jno
cmp
push
lods
fdivrl
lods
test
adc
jae
add
in
dec
or
in
sub
ss
ret
out
mov
mov
xor
loope
xor
or
push
mov
ds
and
aas
sbb
push
pop
cmpsb
arpl
scas
mov
adc
roll
inc
loope
adc
enter
and
shrb
jmp
pop
push
in
push
nop
jbe
inc
aaa
test
xor
mov
mov
cld
cli
nop
cmc
mov
pushw
jns
cld
xchg
xor
loop
call
add
pop
dec
je
adc
push
inc
outsb
and
gs
sbb
cld
xchg
inc
les
inc
jle
test
les
les
and
aas
aad
pushl
push
dec
add
mov
jmp
xor
cmp
sub
mov
shrl
imul
shlb
cli
mov
inc
push
sub
fiadds
loope
rcl
mov
mov
in
inc
shrl
pop
adc
outsl
mov
imulb
or
mov
mov
fnsave
sbb
adc
movsb
subb
aam
dec
mulb
divb
adcb
pop
out
clc
sti
imul
call
mov
jb
dec
incl
mov
cmp
mov
sub
movb
test
call
incl
dec
test
pop
push
mov
jo
push
call
mov
aas
inc
pop
push
lock
sub
lret
call
sbb
push
push
adc
lahf
hlt
mov
mov
dec
and
add
ds
pop
repnz
clc
sbb
add
faddp
xchg
sbbb
pushf
dec
cmpsb
push
xchg
aas
nop
push
call
lret
and
mov
insb
iret
add
pushl
dec
mov
jb
bound
dec
and
lods
aaa
jo
and
out
cld
mov
mov
in
push
mov
daa
stc
jo
xchg
inc
xchg
mov
insb
enter
int3
push
mov
data16
add
lock
cmp
hlt
inc
loop
repz
inc
loop
leave
push
jb
push
stos
push
pop
mov
add
stc
inc
inc
lcall
cli
xchg
mov
inc
or
push
mov
ret
dec
ficomps
cwtl
push
out
mov
xchg
xor
inc
fldl
mov
xor
in
xor
sub
xlat
nop
xchg
fcmovb
js
jecxz
rcr
inc
add
push
pop
inc
dec
icebp
xor
pop
and
mov
pop
clc
xchg
sbb
call
fcmovnbe
push
in
or
add
xor
inc
mov
mov
div
dec
ds
sub
stc
pop
mov
xor
jge
int
call
int3
lock
or
ss
mov
jns
sub
inc
and
stos
pop
add
mov
out
adc
or
in
outsb
ljmp
mov
shrb
jecxz
fwait
je
push
pop
fiadds
mov
push
or
adc
es
bound
call
dec
cld
mov
mov
mov
push
mov
sbb
lahf
data16
jmp
clc
jne
jno
mov
or
call
inc
push
xchg
hlt
cmp
pop
mov
jo
xor
je
xor
cld
and
cmp
pop
xchg
cmpsb
sar
inc
les
sbb
outsl
inc
ret
add
pop
in
mov
nop
mov
sahf
cmp
cmc
adc
scas
call
pop
incl
mov
mov
add
dec
adc
fisubrl
add
leave
sub
sarb
test
mov
cmp
cwtl
push
imul
mov
leave
insb
jne
movb
aam
imul
shrb
mov
js
xchg
mov
cwtl
in
pushf
nop
mov
jl
push
jl
cmc
pop
sbb
pop
or
dec
inc
outsb
shl
mov
mov
pop
cmp
add
shrb
ret
incl
pop
cmp
inc
sbb
call
jb
pop
cmp
outsb
jl
push
push
fnsave
testb
hlt
fdivrs
test
movsl
inc
jle
mov
or
int3
or
subl
dec
cmp
aam
faddl
cmpsl
and
aaa
inc
sub
pop
inc
out
mov
xchg
mov
add
es
ficompl
xor
fistpll
add
inc
or
aam
insl
out
add
hlt
mov
push
add
outsb
and
jne
fnsave
ljmp
andl
cwtl
fldenv
dec
inc
add
into
inc
clc
aas
incb
mov
popa
incl
je
pushf
xor
loop
mov
inc
mov
lea
xchg
aas
bound
mov
std
sbbb
insb
xchg
add
pop
dec
sub
adc
xchg
sub
mov
nop
adc
dec
dec
inc
int3
push
adc
aad
je
add
adc
jle
lods
push
adc
fcmovb
cmp
add
dec
sbb
or
jnp
pop
push
push
adc
inc
dec
or
test
cmpsb
test
push
cmp
mov
push
das
push
xor
push
push
or
xlat
and
pop
lods
sub
fcompl
rcl
arpl
add
loopne
movsb
inc
push
enter
inc
clc
nopl
push
lock
or
or
add
pop
leave
push
mov
fsubl
or
push
aaa
pop
cwtl
push
dec
jmp
pushf
mov
call
jl
mov
adcl
clc
add
mov
fsubrs
mov
add
or
jp
mov
inc
sub
fildl
mov
mov
and
xchg
dec
test
mov
rolb
xchg
inc
rolb
loopne
add
ret
aam
xlat
bound
sub
inc
and
shll
push
cwtl
fs
pop
lea
push
jp
sbb
rorb
fdivrs
hlt
adc
sbb
pop
lahf
adc
inc
arpl
bnd
popa
mov
cmp
jle
or
mov
fsubrs
std
sub
jne
dec
call
and
cs
jle
rclb
int3
nop
js
mov
mov
dec
lock
push
filds
sbb
rcrb
mov
dec
jne
lea
sbb
or
shrb
pop
xor
xor
fs
ret
ret
fwait
jo
jb
rcll
incl
out
cmp
outsl
dec
adc
adc
sbb
es
push
add
jmp
sub
je
push
paddusw
mov
jle
mov
out
sbb
sub
push
add
mov
fcoml
test
bound
xchg
and
fimuls
cs
subl
lock
clc
hlt
paddw
test
inc
mov
rcll
mov
mov
lock
sub
mov
fistpll
sar
call
rorb
shlb
fimull
xchg
sub
fcoml
ror
in
lock
and
inc
mov
dec
jge
mov
pusha
out
loope
xchg
bound
push
popf
and
or
leave
inc
out
mov
or
xchg
loop
jno
ret
cltd
sub
rcrb
mov
mov
daa
xchg
adc
clc
fildl
outsl
addb
xchg
cmpsb
and
pop
mov
lret
add
mov
aas
adc
loop
popf
loop
cli
push
mov
push
jmp
cmp
mov
cmpb
loop
test
rolb
stos
sahf
pusha
mov
cmp
push
dec
adc
add
push
fs
adc
lods
fs
incl
mov
rolb
add
sahf
repnz
imul
call
ss
aam
sbb
cmpsl
shrb
adc
lahf
pop
cmp
inc
mov
inc
inc
dec
jg
mov
pop
les
lods
repnz
sar
nop
mov
out
add
pushf
dec
mov
testb
out
add
gs
ss
repnz
add
pop
mov
cmp
add
mov
std
fcomps
icebp
inc
add
and
movsb
push
adc
xor
mov
or
push
xchg
lock
push
out
or
fisttps
rorb
jne
jmp
ret
hlt
jp
ljmp
and
push
rorb
fiaddl
add
sub
mov
push
mov
jl
add
int3
out
in
lods
or
dec
das
mov
lock
inc
sbb
ja
jo
sahf
lea
lods
xchg
push
xchg
add
movsb
add
cld
cmpsb
jmp
rclb
mov
jns
inc
fmul
push
orb
add
fsts
faddp
test
in
nop
in
mov
sarl
insl
jmp
xor
jecxz
or
test
in
in
xor
mov
or
xor
dec
cmp
pop
fisubrl
gs
cli
sub
call
cmp
xchg
fmull
or
lea
fsubrl
sub
sahf
movsb
adc
js
call
pop
sub
mov
xor
push
or
out
xor
jge
test
push
mov
push
lret
inc
gs
add
dec
push
cs
xor
lret
test
sbb
rcl
inc
jne
outsl
adc
pop
data16
je
mov
movsl
aam
sub
push
mov
sarb
mov
into
add
leave
in
xor
mov
sbb
pop
clc
subl
repnz
sahf
push
enter
jl
inc
cli
cmc
xor
mov
and
mov
and
fdivrs
push
popf
mov
add
jbe
dec
movsl
push
dec
jmp
inc
sti
add
mov
fiadds
insb
and
sbb
adc
dec
mov
xlat
inc
mov
addr16
push
imul
inc
sub
sbb
jne
or
push
cmc
push
cmp
mov
insb
fbld
cltd
jne
testl
iret
stos
cmp
rorl
test
xor
idivl
add
sub
shrl
mov
jmp
mov
dec
or
xor
xchg
movsl
add
xlat
adc
push
pop
out
push
mul
faddl
xchg
mov
jo
pop
ret
je
jl
lock
testl
movb
orb
jmp
enter
stc
jp
jg
loope
cs
inc
cmove
scas
roll
incl
push
mov
outsl
ja
jb
pop
inc
lods
or
ret
dec
cmp
insl
mov
push
clc
rcr
xchg
mov
lods
cld
cmp
push
add
cs
pcmpeqb
mov
pop
testb
pop
inc
into
popf
dec
adc
add
and
loopne
push
ljmp
int3
mov
push
push
add
clc
inc
add
test
hlt
xchg
ss
std
push
and
test
dec
dec
jg
push
and
mov
pop
or
mov
pop
sbb
std
lcall
adc
fs
out
loope
add
cld
jbe
push
push
pop
in
out
pop
xchg
xor
xchg
enter
mov
movsb
loopne
lret
aad
add
in
jne
and
push
or
cmpsl
pusha
mov
pop
in
dec
xchg
or
pop
mov
mov
sub
lret
xchg
and
lcall
sub
enter
pop
inc
jns
call
adc
cwtl
andl
mov
outsb
sub
sub
cmp
mov
xlat
dec
adc
dec
mov
and
fs
fadds
in
in
add
xchg
lahf
jae
adc
and
loopne
mov
rcl
add
icebp
dec
les
outsb
in
clts
jbe
movsb
lock
cld
push
sbb
xor
xchg
loope
movsb
add
mov
adc
test
or
pop
scas
clc
mov
dec
sub
add
inc
push
pop
dec
adc
cmp
mov
mov
mov
jo
imul
ds
sti
or
imul
call
adc
subb
and
xor
inc
mov
inc
mov
push
jle
cltd
std
fcompl
sbb
inc
dec
push
ja
in
clc
or
jne
cmpsb
push
push
mov
int3
clc
cwtl
and
scas
out
int3
xor
xor
fiaddl
mov
cmp
les
mov
mov
jl
inc
adc
xor
fs
and
adc
movsb
dec
test
lods
xor
jb
sub
loop
sub
push
jge
in
jl
dec
jmp
adc
shl
mov
cld
call
and
xchg
inc
addb
pop
push
jb
jbe
pop
movsb
cmpb
lea
pop
rclb
lcall
in
ja
inc
and
add
pop
push
fsts
mov
shrb
push
sbb
ja
add
and
adc
mov
shrb
push
mov
jge
orb
push
in
add
push
fdivrs
adc
push
and
lods
ja
or
cmp
or
hlt
stos
mov
cld
je
ret
or
xor
repnz
jmp
test
xor
js
xchg
pop
outsb
std
mov
push
adc
xchg
push
xchg
add
mov
inc
ret
lret
pop
arpl
pop
mov
add
gs
pushf
xor
push
int3
shlb
fdivs
add
mov
aad
push
std
jg
aam
push
mov
aas
icebp
or
rclb
mov
or
mov
dec
pop
incb
mov
add
xor
mov
sbbl
outsl
push
push
or
pop
sub
jns
test
or
das
ret
adc
mov
and
sar
outsl
je
ret
pop
mov
fstpl
fnstenv
mov
pop
aam
mov
orb
outsl
xchg
orl
jmp
dec
or
add
imul
mov
xchg
and
sbb
push
push
cmp
shlb
sbb
inc
es
scas
pop
mov
sbb
push
mov
push
aam
dec
jb
inc
push
pop
mov
stos
les
fsubs
fcoml
fcmovu
repnz
mov
inc
sub
data16
ret
sub
sbb
mov
mov
xchg
add
shlb
mov
xor
icebp
push
jp
mov
ja
inc
cli
push
mov
mov
cli
lea
and
aaa
jno
xchg
jne
shlb
loopne
add
inc
xchg
push
xor
dec
mov
xor
or
int3
and
pop
push
aas
cmp
cld
or
or
push
push
outsb
nop
push
push
cmovl
mov
push
outsb
sbb
clc
add
adc
mov
aam
push
dec
sbb
adc
mov
scas
in
rclb
adc
and
iret
fucomi
push
ljmp
je
mov
inc
xchg
sbb
in
inc
out
or
push
inc
loopne
imul
and
or
hlt
xchg
mov
jge
sbbb
in
add
sbb
inc
nop
inc
loope
sub
sahf
aam
mov
pop
push
cmpb
rcll
inc
arpl
and
lods
mov
outsl
daa
mov
dec
pop
sbbb
sbb
ds
inc
fstpl
sub
jae
jbe
fcmovu
add
push
imul
lret
mov
and
imul
rcll
cmp
cmp
fadds
push
ja
adc
fs
or
fsubrs
test
push
inc
xchg
insb
mov
xchg
pushf
clc
ret
enter
add
flds
jge
adc
lods
ljmp
xchg
aaa
xchg
psrad
fisubs
sub
jne
push
loopne
ret
test
inc
add
pop
jp
loop
jne
cli
jle
stos
and
faddp
int
iret
pop
scas
outsb
xor
xchg
mov
inc
js
call
cli
jle
or
mov
xor
js
roll
xchg
push
insb
sqrtps
xchg
mov
loopne
sarl
mov
rol
sub
in
subl
dec
popl
cmp
xchg
xor
ss
or
push
cmp
popf
int3
inc
push
mov
loop
fidivrs
cmp
test
adc
mov
push
push
pusha
idivb
mov
insl
push
subb
inc
and
pop
xor
decl
jb
sbb
fmull
xor
xchg
pop
mov
inc
lock
add
push
xchg
or
ficoms
inc
clc
jmp
xchg
jne
cltd
lret
adc
pushf
das
pushl
mov
scas
and
cli
xchg
mov
jge
ret
in
lea
jge
dec
rcr
shlb
xor
mov
push
or
out
jne
mov
dec
inc
inc
add
std
push
push
push
fwait
xor
jbe
fcmovbe
in
sub
push
into
xchg
int3
inc
clc
pop
mov
mov
jg
addl
call
and
dec
sbb
sub
push
adc
add
imul
add
pop
aaa
je
add
lock
push
mov
jb
xchg
adc
aas
jle
rol
or
mov
mov
cmc
dec
incl
fwait
clc
xor
push
inc
test
inc
test
dec
adc
mov
out
add
adcw
mov
nop
and
out
sub
mov
mov
push
adcl
call
loop
call
jbe
pop
mov
clc
call
mov
jle
xor
fbld
fcmovnb
aaa
dec
ret
unpckhps
add
or
insb
lret
loopne
or
ds
dec
pop
push
ret
xor
stos
inc
pop
loop
sub
std
dec
rclb
push
mov
add
inc
out
fadd
andl
repz
add
push
jbe
sbb
sbb
daa
xchg
xchg
in
pop
fildll
mov
push
push
cmp
nop
sar
jb
mov
ds
fldt
sub
push
outsb
jae
loopne
xchg
ror
dec
mov
mov
or
in
pop
loope
push
mov
pusha
cmp
negb
add
mov
andl
xor
push
add
aas
ljmp
and
adc
movsl
orb
in
in
loopne
stos
ljmp
pop
je
xor
cld
adc
in
dec
je
popa
or
add
enter
push
dec
insb
test
mov
data16
or
add
decl
loopne
xor
jne
jge
lods
inc
cmpl
je
inc
shrb
and
jmp
lret
pop
insl
and
imul
dec
call
cwtl
jb
add
and
adc
loopne
jne
imul
xchg
pxor
dec
mov
inc
icebp
push
call
movsb
neg
add
pusha
pop
cld
pcmpgtw
inc
mov
les
negl
cli
data16
mov
pop
nop
sti
pop
inc
hlt
dec
or
inc
mov
js
mov
and
mov
inc
outsl
call
insb
ror
loopne
mov
push
xlat
call
add
jne
int3
inc
lock
mov
imul
add
mov
cs
xchg
sarb
clc
push
mov
sbb
stc
mov
pop
pop
add
xor
incl
adc
add
je
mov
popa
adc
fs
outsl
les
xchg
movsl
mov
jecxz
movl
push
clc
jne
ret
dec
and
mov
adc
lahf
mov
rolb
hlt
add
std
mov
fdivl
roll
and
adc
clc
cli
mov
nop
push
push
pop
shlb
pop
xchg
jns
jo
pop
and
test
cmpl
mulb
push
mov
je
inc
or
fcmovnu
test
add
or
sbb
push
push
imul
adc
je
cmpl
imul
add
shlb
add
fildl
in
add
out
dec
add
iret
cli
push
adc
push
rolb
in
or
mov
clc
insl
aad
push
rorb
testb
es
adc
xchg
mov
mov
xchg
test
jmp
aaa
push
inc
hlt
pop
ret
and
maxps
sub
out
pushf
xor
mov
rolb
std
xor
mov
clc
jne
xchg
push
add
jmp
incb
sarb
mov
xor
scas
adc
add
jge
cmp
push
ja,pt
lock
mov
pop
or
dec
sub
popa
push
ret
lcall
inc
push
pop
je
inc
roll
call
or
mov
lcall
movsb
add
jge
jge
xor
add
test
adc
push
jmp
lock
sarb
dec
jge
lea
cmp
or
xor
xorl
ss
push
imul
cmpsl
aas
ja
subl
push
test
orl
xchg
js
gs
or
dec
enter
daa
push
or
adc
jg
add
shl
mov
rclb
mov
mov
hlt
xor
cmp
mov
data16
adc
ds
loop
int
sbb
adc
gs
sbb
test
add
dec
cmp
xor
out
ret
in
aas
pop
mov
sub
mov
mov
push
inc
loop
inc
push
loop
cmp
xchg
push
sbb
push
add
push
negb
fisubrs
push
or
inc
jl
push
and
shr
out
adc
scas
lock
stos
int3
int3
cld
in
xor
push
push
pop
pushf
imul
outsl
jg
lret
mov
dec
xor
jmp
add
cmp
test
fadd
sub
adc
ljmp
icebp
add
cmp
mov
fisttps
ljmp
xchg
mov
mov
adc
sub
adc
add
push
test
pop
push
nop
repnz
push
in
and
push
and
add
add
aad
sbb
pop
aaa
test
xchg
add
and
and
ljmp
sub
lret
jmp
jmp
into
cmp
inc
fnstsw
lock
mov
inc
xor
aam
lods
inc
add
sbb
sbb
sti
js
rolb
mov
lods
mov
jbe
adc
mov
inc
leave
mov
mov
sbb
jmp
out
pop
insl
push
lea
in
mov
jl
pop
movsl
and
cmp
pushw
lds
fs
push
push
shll
inc
loope
sbb
pop
sub
stos
rclb
insb
dec
and
inc
aam
fsub
les
push
out
cmp
dec
add
js
or
int3
pusha
mov
mov
aad
rorb
in
shrb
jg
adc
jo
in
dec
sub
or
jp
push
cli
aas
insb
in
push
and
pop
cs
mov
cld
pusha
ret
pop
hlt
cmpsb
mov
pop
aam
add
div
movsb
insb
ds
add
lods
dec
add
push
mov
rorb
test
cmc
xor
test
inc
out
adc
and
cwtl
es
jne,pn
das
mov
pop
pop
and
ljmp
push
add
dec
xorb
push
ljmp
ret
je
mov
adc
sub
inc
enter
andl
adc
insl
mov
cmp
sbb
jae
stos
mov
sub
stos
push
mov
cld
or
jmp
dec
cli
jge
lea
add
inc
insb
mov
inc
xor
lea
rcrl
mov
in
call
ja
push
mov
les
iret
aaa
ljmp
outsl
ljmp
jb
outsl
aam
fildl
cli
sbb
loopne
les
push
pop
pop
incl
or
ret
jno
mov
pop
push
faddl
adc
or
das
inc
cwtl
inc
jne
add
push
bswap
clc
jg
and
loopne
mov
push
adc
mov
jb
scas
sbb
adc
fisubl
dec
pusha
pushf
xchg
xor
movsl
xchg
jne
pusha
xchg
scas
xchg
sbb
add
pop
clc
stos
es
lret
call
insb
mov
jp
or
jmp
xorl
inc
cmpsb
and
mov
call
std
mov
cmpsb
sbb
jae
cwtl
fisttpl
addr16
dec
add
mov
movsl
hlt
outsl
mov
insl
push
add
lret
xor
dec
sbb
push
or
sub
jge
pop
xchg
pop
fcmovne
testb
jb
xor
xchg
and
lea
rol
pop
pop
pop
jo
mov
test
mov
mov
xor
pop
inc
pushl
push
xor
sahf
inc
sub
push
sbb
jb
pop
lea
movsl
and
inc
insb
dec
ljmp
dec
cs
icebp
mov
inc
mov
jmp
and
jle
xor
sbb
xor
jne
add
xor
cwtl
push
push
ja
mov
mov
rorb
pop
pusha
pop
mov
push
jl
and
in
enter
pop
movsl
sbb
mov
shl
lea
in
sbb
xchg
sar
subl
pop
adc
mov
loop
and
mov
push
dec
mov
mov
out
dec
data16
adc
adc
outsb
outsb
test
push
mov
add
add
test
mov
pusha
dec
loopne
psubsw
lods
je
pop
sbb
shrb
psllw
dec
push
loop
and
inc
xchg
pop
pop
xchg
or
das
lcall
loopne,pt
inc
mov
jmp
sahf
movl
repz
xchg
test
dec
les
add
repnz
jmp
add
pop
outsb
or
push
mov
aam
movsb
fcmove
inc
mov
pop
and
test
lods
xlat
ficompl
in
push
hlt
inc
loopne
mov
pop
les
movsb
xor
cmpsb
ret
cwtl
loopne
ja
add
inc
dec
push
ds
insb
icebp
pop
jb
lret
inc
mov
cmp
push
pop
sti
dec
cld
add
mov
int3
mov
or
and
sbb
jge
or
orl
mov
mov
push
bound
decl
mov
jne
sti
mov
xor
or
push
cltd
mov
mov
xor
mov
pushf
dec
test
mov
shrl
mov
jecxz
sbb
cmpb
or
or
mov
nop
push
pcmpgtw
outsb
mov
shlb
cli
sbb
add
mov
pop
movsb
fwait
mov
aam
fwait
add
inc
lock
int3
cmp
add
sahf
xchg
flds
dec
fs
outsl
mov
xchg
sbb
mov
fcmovnbe
cmp
inc
push
mov
mov
push
int3
addl
inc
aaa
pop
add
cmp
sbb
sbb
out
shr
fdivl
add
js
lret
push
mov
mov
sub
cld
push
sti
xchg
push
inc
or
mov
loopne
add
insl
pop
sarb
jb
mov
mov
dec
pop
cltd
fwait
aam
or
out
or
rolb
pop
mov
pop
xchg
xchg
sbb
dec
push
mov
push
mov
xlat
dec
add
fimull
in
mov
rclb
rcr
inc
lret
jmp
pop
cwtl
jno
fisttpl
shlb
dec
inc
xor
pop
call
pop
test
outsb
inc
fisubrs
dec
rorb
enter
pop
mov
xchg
lock
or
push
inc
pop
sub
gs
imul
icebp
fistpll
cmpsb
faddl
push
jb
test
push
cmp
ret
cmp
adc
addl
inc
ljmp
movsl
push
andnps
lcall
mov
mov
mov
mov
adc
pop
cmpsb
lea
loopne
ret
mov
pop
xor
mov
les
or
inc
push
and
and
sarb
jl
rcr
push
pop
and
cli
push
mov
fisttps
sarb
add
aad
mov
pop
inc
ret
adc
lock
cmpsb
push
mov
push
mov
cld
ja
int3
add
pushf
aam
shrb
int3
mov
and
lods
jno
les
xchg
fs
andl
xchg
mov
mov
sbb
call
test
mov
andb
xor
mov
jg
or
loopne
cmpsb
cs
xor
inc
lock
ss
sub
dec
ret
adc
and
inc
les
dec
inc
cmpsb
mov
lea
jp
push
lcall
sbb
pop
adc
incb
pop
xor
xchg
faddl
dec
pushf
push
fidivs
adc
cmp
in
or
out
or
test
or
xor
push
movsb
idiv
shl
lret
or
sub
out
fmuls
stos
push
add
inc
jle
jne
dec
pop
orb
bound
pcmpeqw
sub
xor
mov
xor
push
std
push
test
cvtdq2ps
add
nop
ftst
je
mov
push
inc
arpl
sub
sbb
cmp
ds
push
pop
adc
rcl
sahf
popa
int3
add
mov
int3
mov
push
inc
daa
pop
mov
adc
xor
jl
pop
lcall
lock
jg
pop
sbb
inc
add
and
push
or
mov
rclb
pop
loope
mov
lock
and
sbb
cld
mov
push
adc
mov
xor
xor
add
mov
mov
push
call
xor
dec
fs
mov
insl
js
cmpl
dec
mov
test
cmc
orl
sbb
push
fidivl
inc
jge
and
test
or
dec
call
xor
pop
or
testl
add
dec
jmp
inc
pop
inc
fmull
jmp
cmp
orb
call
or
pop
test
pop
or
test
mov
les
add
shrb
or
fadd
hlt
jmp
cmp
cwtl
addl
sub
add
call
subb
sub
inc
nop
jmp
sbb
inc
shll
sarl
pop
push
sti
inc
nop
aam
mov
fidivl
mov
pusha
cld
xor
cmpsl
stc
sub
cmp
mov
mov
aaa
test
dec
jmp
shr
sahf
js
mov
rorb
mov
add
subl
cmp
sbb
add
ss
rolb
push
lcall
pop
hlt
push
shll
add
and
push
push
fimuls
push
pop
ret
push
stos
mov
dec
enter
mov
icebp
or
dec
test
call
movsb
cmp
leave
inc
jne
data16
mov
arpl
jecxz
icebp
xor
daa
nop
cmc
mov
insb
sbb
jp
fiaddl
rorb
adc
inc
xchg
lret
dec
push
push
push
push
fwait
add
jbe
invd
ret
push
call
sbb
jne
push
xor
insb
or
stos
inc
test
aas
pop
leave
dec
and
icebp
sarl
mov
sub
imul
lds
testl
imul
icebp
fmulp
shrb
ror
mov
rorl
cmpl
dec
push
scas
xchg
mov
mov
andb
out
add
sbb
out
sbbb
xor
adc
push
jge
outsb
jl
aaa
adcl
mov
jne
and
xorb
arpl
adc
lock
adc
mov
xor
mov
add
push
push
cs
push
sub
mov
int3
add
or
mov
fcoms
call
cld
out
rcrb
sahf
jmp
dec
push
push
mov
inc
dec
cmpb
hlt
dec
push
jp
xor
push
mov
and
mov
jo
sbb
adc
xchg
or
aam
ja
inc
aas
push
idivl
pop
in
pop
add
mov
scas
mov
loopne
movsl
leave
insb
cmp
push
out
xor
es
pop
mov
int3
sbb
divb
sbb
addr16
out
ret
inc
movsl
rcrb
sarb
xor
sbb
std
leave
mov
mov
fcom
push
mov
cmp
dec
mov
inc
sti
or
dec
test
xlat
push
call
pop
push
add
movb
int3
and
xor
loope
fadds
fadds
cld
jg
loop
roll
clc
mov
sbb
sub
xchg
adc
mov
push
xlat
and
mov
icebp
mov
jg
aad
leave
mov
or
hlt
ret
jo
push
sbbb
jl
and
daa
push
dec
inc
cmp
ret
rcrl
pop
mov
int
sbb
inc
inc
adc
mov
push
mov
pop
outsl
test
push
xchg
setb
pusha
inc
push
add
outsb
je
rcll
inc
cwtl
cmp
add
jp
mov
ficompl
jge
sub
jb
mov
inc
rol
fbstp
inc
ds
decl
xchg
icebp
fistps
or
mov
data16
push
push
shr
addl
scas
loop
and
lock
pop
fdivrl
xchg
pop
std
adc
xor
jecxz
mov
jg
test
orb
or
xor
inc
inc
loop
inc
and
mov
sub
lcall
cmp
mov
fcoml
aas
xchg
pusha
test
loope
mov
pop
dec
adc
faddl
pop
addl
std
loope
dec
push
xchg
loop
mov
sub
jb
jmp
rorb
sub
sarl
pop
orb
and
test
cmp
xchg
and
jge
mov
add
adc
lret
xor
mov
push
outsb
push
aaa
inc
or
dec
sub
jno
lea
jne
addl
imul
lods
addb
sbb
pop
jge
movsb
inc
test
call
add
mov
or
pop
and
test
bound
sub
jmp
psraw
aam
jne
push
lea
add
mov
jbe
pop
cwtl
je
clc
push
mov
arpl
inc
xor
add
dec
add
outsl
mov
sahf
fdivl
sbb
add
adc
mov
lea
pop
call
mov
dec
inc
inc
clc
sbb
mov
inc
push
sbb
xor
mov
pop
fcoml
jb
and
adc
inc
icebp
inc
ljmp
jp
mov
ja
test
cmp
jg
outsb
inc
mov
jg
xchg
and
data16
movsb
push
or
out
mov
stos
shll
insl
mov
pushf
mov
fstl
aam
push
nop
fmull
mov
or
pushf
outsl
data16
adc
aam
pop
jo
mov
pusha
mov
dec
movl
adc
mov
subl
push
or
loopne
pop
iret
pop
daa
inc
test
out
xor
xor
xchg
mov
loopne
dec
cld
mov
cli
add
or
sbb
dec
imul
in
pop
stos
adc
and
jmp
xchg
cmpsb
movsl
or
pop
push
dec
push
int
cld
or
test
fisttps
and
in
mov
inc
cmp
lea
stos
inc
inc
hlt
jmp
xor
add
adc
inc
loopne
dec
loope
inc
mov
je
or
and
inc
fmuls
clc
jle
jmp
inc
inc
mov
and
adc
jae
fisubl
xchg
mov
adc
inc
fs
or
mov
add
sub
mov
adc
cmp
pop
and
jl
stc
sub
mull
outsl
or
adc
ss
fisttps
cwtl
rcl
rcrb
fs
dec
sbb
notb
dec
mov
pop
int3
adc
cwtl
mov
xor
into
jmp
and
test
push
add
andl
mov
xor
je
cmc
adc
mov
cmp
cli
dec
aam
shl
fdivrp
adc
sub
adc
adc
flds
push
popa
test
jo
inc
test
push
adc
sub
aaa
xchg
in
call
xlat
add
mov
cmpl
nop
add
adc
or
jbe
xchg
scas
sub
or
add
jbe
sahf
xor
mov
loop
xchg
call
mov
inc
mov
insl
mov
inc
jmp
push
call
push
adc
je
cmp
and
jle
and
and
test
test
cmp
or
or
mov
xchg
pop
push
pop
mov
sub
or
outsl
sar
int3
xlat
repz
mov
mov
clc
push
out
das
test
gs
cld
aaa
mov
imul
push
sbb
dec
inc
cld
xchg
enter
push
and
and
mov
xchg
mov
or
or
sbb
add
push
cli
pop
adc
cmp
notb
sbb
add
push
loopne
mov
jo
mov
icebp
out
mov
outsb
push
or
xchg
mov
mov
cld
add
popa
push
xchg
and
sbb
pop
dec
shlb
and
and
or
mov
ja
fisubrl
mov
xor
adc
les
add
lret
pop
je
insl
and
loopne
inc
jmp
cmp
insb
lock
mov
es
cmc
inc
pushf
mov
incb
gs
cli
and
jb
xor
add
mov
push
and
sub
or
mov
loope
dec
xor
gs
push
cmp
in
add
sub
mov
push
mov
or
data16
js
mov
push
pop
sub
cmp
sub
xor
mov
cwtl
cmp
jg
add
push
aad
std
add
dec
jp
fidivrl
rolb
sub
in
fsts
inc
loope
enter
cmp
mov
jmp
ljmp
hlt
jge
adc
dec
fsubl
dec
sbb
jecxz
fwait
test
xor
dec
cwtl
push
int
cli
mov
fdivr
fmulp
fistl
xchg
xchg
adc
inc
pop
jp
sbb
sub
cs
or
subb
mov
pushf
jo
push
fs
les
test
jbe
scas
mov
push
sarl
push
mov
rolb
push
add
jge
loopne
rol
and
mov
push
mov
sub
cs
out
jmp
inc
pop
mov
call
mov
inc
mov
sarb
sbb
push
add
call
xor
dec
pop
jl
cmp
aaa
mov
or
call
out
xchg
add
testb
mov
test
xor
mov
out
clc
std
add
mov
out
clc
adc
jg
movsb
adc
enter
mov
out
orb
sbb
sub
pop
es
std
lea
ret
ret
push
movsl
scas
push
bound
pop
pop
sub
sbb
inc
sub
lret
jg
mov
jne
outsl
int3
jne
or
test
jnp
xor
mov
dec
jmp
cmp
divb
pop
add
fiadds
mov
rol
or
push
sub
push
mov
fs
decb
ja
inc
jmp
xlat
js
dec
out
or
inc
lods
cmpsb
shl
push
adcb
lea
sub
xlat
add
pop
or
and
mov
mov
or
mov
mov
jge
cmp
push
into
clc
in
sub
data16
dec
mov
pusha
adc
gs
mov
lret
rcll
adc
arpl
and
add
fcoms
lea
cwtl
adcl
jge
jmp
psubusb
sarl
shr
in
and
lret
mov
inc
jne
mov
adc
dec
xor
jo
in
add
jl
add
call
imul
cld
lock
add
sub
mov
mov
lea
adc
mov
cmp
pop
adc
pop
shl
and
lcall
mov
and
push
mov
rcrb
push
testb
vmovss
mov
loopne
mov
add
pop
adc
or
jo
mov
push
mov
push
test
inc
inc
push
pop
in
out
sbb
adc
outsb
pop
insb
push
cmp
data16
cltd
gs
xor
mov
aaa
int3
out
test
or
dec
je
xchg
mov
sbb
mov
fucom
push
ret
sbb
jb
mov
inc
lea
cmc
stos
testb
push
jbe
and
les
jmp
call
fdivp
sbb
sbb
jne
and
mov
stc
push
pop
adc
cs
inc
xchg
cld
and
mov
push
into
push
jbe
mov
pop
jl
or
adc
ljmp
mov
or
jle
call
mov
push
andb
lret
mov
mov
pinsrw
xor
xchg
mov
inc
mov
or
mov
jb
sbb
outsl
enter
add
push
idiv
movsb
lcall
cs
enter
sbb
sub
jmp
cmp
sar
mov
mov
test
push
int3
ror
jo
test
or
add
addl
clc
data16
lcall
xor
int3
shll
fldt
dec
shl
movsb
push
mov
out
pop
mov
inc
in
and
adc
cli
xorb
pop
xlat
push
pcmpgtd
ljmp
lock
mov
imul
mov
or
clc
mov
data16
rol
xor
aas
jmp
xchg
inc
or
ja
or
popa
mov
movsb
xchg
sub
add
mov
pop
push
jg
cli
imulb
xor
push
lea
sarl
movsl
and
enter
outsb
or
rorb
sbbl
push
int3
data16
mov
add
inc
add
mov
or
insl
mov
or
loopne
pop
in
leave
clc
aaa
lret
sbb
mov
mov
inc
mov
getsec
inc
into
loope
dec
loop
ret
je
ret
ud0
and
mov
pop
fbld
incl
mov
add
mov
xchg
fs
push
cld
inc
sbb
jmp
jecxz
lds
lcall
fcmove
test
mov
in
lret
add
clc
fcomp
pop
lcall
movsb
ds
mov
cs
leave
leave
mov
push
jge
jge
insb
lods
nop
add
lcall
push
adc
sub
push
jmp
and
je
mov
mov
inc
scas
jle
sbb
sbb
sub
add
pop
enter
iret
jne
negb
int
lock
clc
int3
jp
and
mov
dec
cmp
push
hlt
pmaxsw
sub
mov
cld
cmp
loop
add
insb
add
push
mov
cwtl
test
adc
loopne
or
movsb
jmp
loop
hlt
push
sub
out
sub
decl
notb
sbbb
mov
pushf
add
or
int3
cmp
inc
dec
xor
jg
scas
fs
inc
loop
ret
lret
mov
mov
adc
inc
push
jg
mov
push
ja
mulb
loopne
loopne
fs
xor
outsb
loopne
push
dec
test
adc
pop
dec
lock
lock
fsub
jno
vpunpckhdq
sbb
add
icebp
es
lods
bsr
cmpsb
lea
xchg
jp
cld
push
lds
adc
loopne
add
and
dec
shrb
subb
dec
call
xlat
int3
movsl
int3
imul
orb
mov
and
inc
lock
js
insb
push
movd
icebp
push
sbb
in
aaa
test
scas
xor
jbe
cmp
dec
pop
add
js
rcll
xor
sub
fmul
js
fbstp
popa
xbegin
add
loope
out
je
mov
mov
aas
mov
and
mov
or
call
mov
insl
or
add
or
jo
cmpsb
fistps
in
mov
add
clc
adc
xor
in
pop
fsubrs
dec
push
mov
fsts
and
jmp
push
or
pop
mov
mov
mov
jb
push
mov
test
leave
dec
mov
add
inc
into
pop
xor
aam
and
insb
cmp
cli
pusha
mov
lock
or
test
and
outsb
xchg
push
cmp
mov
movb
cmp
call
mov
mov
icebp
mov
test
loopne
inc
cli
call
mov
push
mov
pusha
es
pop
orl
dec
cli
sub
push
inc
imul
cmpsb
jge
add
inc
js
add
movb
xor
or
mov
ds
stos
lods
fsubr
fs
cmp
repnz
out
int3
cmp
sbb
cmpl
shl
decb
and
inc
inc
sbb
pop
push
push
add
lahf
add
imul
outsb
mov
test
rclb
add
xor
inc
mov
ret
jg
jecxz
cmp
sbb
not
pushf
lods
sub
sub
adc
inc
xchg
dec
ret
fcoml
xchg
push
adc
jle
js
and
insb
xor
and
inc
mov
mov
and
push
leave
add
jb
sub
scas
push
mov
xchg
or
inc
inc
mov
pop
push
jge
mov
sbb
movsl
add
inc
mov
mov
ljmp
xchg
mov
add
sub
sub
das
push
roll
inc
mov
stc
adc
into
xor
test
sbb
stos
push
scas
mov
clc
in
fs
add
mov
fmuls
pop
jb
mov
xor
fstl
decb
cld
push
xor
pushf
lea
les
inc
cmpsb
mov
add
ret
insb
sbb
push
adc
repnz
sbb
incl
xor
addl
loopne
out
call
mov
mov
sti
add
lods
bound
ret
xor
push
mov
es
push
test
mov
and
and
jne
dec
pop
lods
sar
add
add
jb
push
jge
cld
mov
lock
adc
pop
out
mov
push
mov
insl
lret
sub
sub
sbb
outsb
popa
mov
mov
add
inc
cmp
in
sub
jne
and
out
mov
add
out
mov
test
cli
push
fdivs
push
das
dec
pop
lcall
movsl
and
test
jp
call
push
inc
xor
add
and
mov
icebp
add
push
ljmp
add
mov
add
stos
sbb
add
jecxz
rcll
cmpsb
enter
ret
or
sbb
decb
add
test
push
push
adc
jmp
pop
arpl
stos
jmp
out
lods
add
aaa
dec
gs
push
xor
stos
xchg
gs
pusha
push
shlb
lret
gs
push
mov
mov
rorb
ret
in
xor
mov
fisubs
pop
mov
cmp
push
movsb
and
mov
in
inc
cmpsb
dec
call
jle
sbb
add
mov
shlb
sbb
xchg
inc
jle
dec
cmp
cld
dec
movsb
mov
mov
push
or
pop
adc
insl
add
leave
pop
jae
mov
push
insl
adc
sbb
add
sbb
mov
mov
bound
sub
mov
add
je
add
push
ljmp
rorl
cld
push
mov
loop
dec
pop
mov
ds
sub
sbb
xor
mov
and
mov
fbstp
mov
fnsave
rol
fmull
movsb
nop
mov
mov
adc
xor
push
cmpl
jge
mov
push
pop
mov
mov
adc
dec
lahf
cwtl
cmpb
xchg
pop
sub
sub
pop
mov
sarl
xorl
daa
test
sub
bswap
push
jmp
and
ret
icebp
loop
mov
adc
mov
adc
in
loopne
js
mov
rcll
xor
decb
nop
popa
pushf
popa
lcall
outsb
xor
nop
ja
lcall
push
adc
les
add
inc
loop
or
push
sub
mov
mov
cld
out
test
fildl
or
pushf
lock
je
lahf
aad
push
ret
add
loopne
pop
pushf
jo
test
cli
push
push
les
mov
lret
aaa
cmp
int3
pop
push
xchg
dec
sub
and
lret
ret
ret
loop
inc
push
cmp
adc
inc
jg
pop
enter
adc
cmp
push
in
push
adc
inc
jae
lods
xchg
xchg
aam
mov
rcrb
pop
int3
add
xor
and
mov
inc
jle
sbb
sahf
sbb
pushl
flds
les
push
test
test
je
push
pop
dec
mov
push
pushf
xchg
add
ss
xor
sbb
adc
hlt
xchg
sub
pop
mov
test
mov
dec
outsl
mov
mov
sbb
sarl
fadd
add
add
mov
jo
sub
push
in
incb
fisttpl
invd
lret
push
enter
inc
mov
leave
std
jo,pt
ror
push
insb
or
lock
bound
mov
jo
inc
dec
inc
push
dec
ret
xchg
aam
xchg
in
je
fmuls
push
mov
push
sub
or
add
movsb
stos
add
lret
lea
in
je
fiaddl
rorb
cld
lret
dec
or
mov
sahf
push
dec
call
mov
and
outsl
loope
push
dec
cmp
push
rorl
nop
push
jb
popa
outsb
push
cmp
mov
pop
rcrb
xchg
shl
rcr
mov
jbe
inc
pop
add
xchg
mov
movsb
sbb
mul
mov
cli
lock
mov
mov
mov
fdivrl
xadd
mov
mov
ret
pop
jg
out
pop
jne
shrl
test
mov
jle
es
stos
ljmp
lcall
ds
jmp
push
rcr
ljmp
mov
int3
lcall
push
ud2
cmpsb
mov
xchg
repz
ss
clc
sub
incl
pop
push
out
adc
xchg
add
lods
inc
movsl
lock
or
xor
ja
rcl
data16
or
jl
jb
data16
cmp
ds
gs
outsb
dec
jo
sub
rolb
xchg
cmp
ds
cmp
addr16
int3
push
mov
sbb
sarb
xrelease
in
out
xor
movsb
cmp
xor
cmp
jg
movsl
xchg
mov
xlat
adc
add
add
push
adc
les
js
stos
sub
jp
subl
cli
unpckhps
imul
adc
sti
sbb
into
ss
clc
push
loop
pop
mov
inc
mov
pop
add
push
xchg
cmc
push
jl
testl
incb
lcall
out
paddd
scas
cmp
aas
or
mov
inc
lcall
shrb
and
fcoml
push
rcrl
cs
popa
cmp
lock
rol
or
divps
or
test
xchg
mov
mov
add
pop
xor
enter
or
mov
icebp
lcall
mov
inc
push
inc
inc
into
inc
push
or
sar
shl
fmuls
shrb
push
decl
pop
inc
rcll
push
inc
mov
mov
out
xor
add
out
ret
mov
push
pop
and
mov
add
push
xor
mov
sti
aam
aaa
add
dec
call
testb
lcall
notl
push
adc
cmp
jmp
loop
mov
mov
push
mov
fimuls
in
test
fadd
je
cmp
push
cld
mov
stos
ss
mov
mov
mov
adc
cli
mov
aad
shll
test
xlat
push
or
sbb
insb
arpl
popaw
int3
cltd
cmp
push
pop
mov
jle
sub
or
aas
fdivrs
sbb
or
cs
mov
or
sub
cmp
mov
and
ret
mov
push
xor
add
stos
outsb
andl
aam
loope
int3
xchg
ret
cmp
gs
pop
or
push
adc
loopne
mov
or
cmp
call
add
sbb
mov
inc
add
sbb
les
mov
inc
orb
jmp
and
fbstp
mov
popa
add
sub
stos
mov
ret
movsl
pop
sub
mov
inc
pop
call
in
int3
aad
sar
and
mov
notb
js
pusha
ss
mov
cs
adc
call
outsl
xor
add
lret
or
out
out
inc
cmpsl
rcll
testb
push
lcall
call
xchg
push
add
test
push
je
add
cltd
sbb
xor
lcall
enter
fsubrl
sarb
fldcw
das
incb
add
mov
sbb
pop
stos
rclb
es
adc
add
cmp
and
inc
mov
jne
ret
in
xor
int
bound
adc
mov
push
or
outsb
adc
mov
call
lods
fs
aas
xor
loope
popa
mov
lods
ja
test
faddl
sbb
sbb
cmp
pop
movsb
add
mov
xor
scas
add
or
outsb
add
cli
enter
xor
fwait
mov
push
enter
mov
push
arpl
add
adc
xchg
mov
dec
dec
ret
mov
or
mov
leave
sahf
sbb
dec
fs
dec
pushf
int3
xor
test
mov
loope
push
mov
push
testb
push
int3
mov
shrb
sbb
test
mov
push
test
and
enter
pmaxsw
cmc
sahf
sub
pop
fs
push
push
xor
cli
pop
mov
addb
nop
adcl
movsb
loopne
dec
push
sub
scas
and
mov
xchg
mov
jmp
lret
sbb
push
add
pop
adc
xor
scas
test
pop
loopne
jne
xchg
add
outsb
add
clc
andps
fwait
rcll
fistl
ss
pop
and
mov
mov
fsubrp
cmp
lea
mov
inc
or
push
pushf
add
lret
insl
in
ret
aaa
xchg
mov
jp
push
xor
xchg
xchg
push
push
sbb
mov
cld
nop
mov
stos
push
in
int3
in
xchg
mov
movsb
inc
xor
or
lock
dec
add
sub
mov
call
pop
daa
sbb
inc
je
je
cli
sbb
add
add
push
sar
dec
jl
add
jae
dec
addb
outsb
jl
ljmp
inc
jge
cwtl
sub
adc
cmp
xchg
jb
push
add
lfs
inc
scas
inc
or
cmpsl
lea
and
xchg
cmp
add
adc
mov
add
push
rolb
xorb
cld
fdivrs
add
lock
mov
std
mov
push
repz
mov
hlt
lods
pop
jo
mov
cmp
dec
mov
inc
mov
and
sub
jg
rolb
mov
add
push
xor
pop
inc
mov
test
lret
popf
aam
cmp
outsb
add
pushf
in
jb
imul
lea
hlt
addr16
xchg
loop
scas
jl
dec
pop
ficompl
xor
mov
inc
sbb
aam
hlt
call
sbb
push
cmp
add
pop
fidivrs
inc
andl
scas
pop
add
add
fisubl
enter
push
test
pushf
fisubl
sbb
or
mov
js
inc
rcr
cmp
popa
mov
call
ljmp
dec
pop
mov
cs
push
ss
int3
jge
mov
sub
data16
adc
call
lcall
shr
push
in
aam
mov
les
dec
dec
push
sbb
cmp
pusha
add
jle
mov
fisubl
add
sbb
pop
sbb
mov
adc
inc
cli
mov
add
inc
pop
ss
jbe
add
jne
inc
je
jne
fimuls
push
sbb
push
lock
call
loope
aam
push
loope
xchg
loopne
xchg
mov
repz
lcall
addb
mov
and
outsb
aam
test
xchg
inc
lock
xchg
pop
fdivrs
jl
mov
and
dec
sbb
decb
ljmp
pop
xchg
ficoml
aas
lea
incb
cmp
std
mov
sbb
pop
hlt
fisubrl
je
push
gs
mov
mov
mov
int3
inc
call
pop
ss
or
pop
rep
pop
int3
sbb
push
adc
pop
rolb
push
nop
mov
cltd
add
push
cmpsl
xor
xor
adc
sub
std
add
ja
fs
enter
fs
jmp
pusha
inc
xor
mov
xchg
aad
dec
int3
int3
call
mov
sub
aas
gs
xchg
add
push
push
xchg
jbe
push
push
pop
loopne
jmp
xor
or
pushf
xor
mov
adc
dec
fs
cld
lret
pusha
cs
aam
mov
js
negl
cs
xchg
sbb
mov
clc
movsb
popa
adc
jo
mov
or
push
hlt
lcall
mov
add
ds
mov
cmp
inc
les
xchg
arpl
add
push
outsl
push
or
lock
push
push
jae
mov
adc
adc
ja
push
test
loop
cmpsb
mov
mov
incl
test
add
jle
shll
cmpb
sub
push
push
mov
scas
pop
inc
add
xor
subl
mov
rclb
push
outsb
js
push
sahf
add
mov
pushf
and
adc
in
divb
ret
push
xor
xchg
test
in
xchg
mov
sub
fadd
jb
pop
inc
push
push
inc
mov
push
xor
mov
jge
fwait
dec
outsb
enter
cs
push
mov
add
inc
cmc
push
mov
lock
mov
and
iret
jmp
pop
xor
call
clc
dec
out
or
in
xchg
andnps
xchg
mov
inc
push
filds
push
or
sub
pop
cmp
push
loopne
lods
xchg
add
or
aam
push
ret
and
jb
inc
push
jne
fists
cli
inc
imul
pop
imul
fildll
ljmp
inc
outsl
pushf
jmp
dec
jbe
cmp
mov
arpl
inc
adc
cmp
fwait
test
shlb
or
insl
inc
xchg
out
decb
fs
int3
or
mov
dec
mov
je
jbe
xchg
xor
test
in
lods
xchg
mov
dec
jp
push
jg
les
in
imul
loopne
movq
ljmp
or
push
int3
inc
loop
adc
mov
push
inc
call
in
adc
cld
jo
filds
push
dec
xlat
and
adc
lret
fwait
aam
add
mov
jmp
add
dec
or
push
adc
adc
outsl
rcll
cmc
push
push
or
fimuls
mov
adc
sub
aaa
out
add
push
and
shlb
xor
int3
lock
mov
mov
cld
mov
sub
dec
outsb
aam
clc
loope
push
add
ja
push
cld
xchg
scas
inc
adc
int3
andb
mov
js
jle
ljmp
ret
cli
sub
add
lods
mov
loop
push
es
mov
push
ret
aad
adc
inc
and
or
cli
jecxz
mov
popf
int3
mov
stos
push
aaa
inc
lds
int
outsl
add
dec
call
or
inc
push
jne
rorb
shl
ja
xchg
fs
in
call
rol
add
jmp
mov
adc
mov
dec
inc
cmpb
push
jg
cmp
jns
jae
test
stos
mov
js
inc
dec
lea
xchg
das
push
popa
fidivs
movb
mov
in
outsb
cmp
or
mov
xchg
push
cmp
xor
leave
xor
ret
mov
mov
sbb
and
lock
mov
push
push
imul
jbe
inc
movsb
mov
outsb
enter
rol
mov
movsb
adc
pop
or
or
roll
cld
notb
sbb
pop
std
rcll
mov
in
pop
icebp
mov
dec
int3
inc
or
and
lcall
dec
lods
test
sbb
push
mov
fs
push
frstor
clc
cmp
test
in
mov
leave
push
xor
shlb
adc
mov
xor
fwait
repnz
mov
mov
in
flds
aam
das
test
push
xor
test
int
mov
mov
test
sub
mov
sahf
lods
ret
roll
test
sub
dec
push
or
mov
add
mov
ret
shlb
add
xchg
dec
cmp
push
xchg
js
cld
shlb
jge
addb
xor
std
xchg
test
in
or
mov
add
adc
mov
sti
cmpsl
ret
roll
addl
xor
pop
cs
inc
stos
add
adc
out
test
sbb
cmc
ja
in
fsubl
xor
cmp
push
mov
adc
lret
jo
ret
call
pop
in
outsb
sub
and
cmp
popa
jmp
adc
sub
adc
inc
sbb
hlt
mov
aam
mov
xor
loopne
cmp
cmp
js
nop
or
or
je
dec
cmpsb
pop
je
rcll
test
adc
rorb
scas
inc
sub
jb
cs
cmp
es
mov
jp
dec
test
pop
lock
pushf
fiadds
lea
mov
mov
lock
sbbl
fnstenv
xor
mov
pop
add
push
pop
dec
in
out
test
outsb
test
scas
push
or
push
jmp
push
pop
pop
aam
popa
xor
shll
mov
inc
or
xor
decb
add
pop
sub
pop
push
jl
icebp
push
loope
xchg
call
adc
dec
dec
sub
stos
mov
dec
ror
cmpsb
jb
inc
stos
and
mov
add
jmp
jbe
xor
or
push
mov
clc
stos
xchg
gs
inc
fdivrl
dec
push
test
fcomi
dec
pop
mov
xchg
test
nop
cld
arpl
aad
js
jmp
sub
js
sub
cmp
call
daa
dec
jge
inc
xor
mov
xchg
ss
push
mov
lcall
div
pushf
cmp
sbb
cld
decl
xchg
lret
data16
popa
jg
mov
in
dec
rol
sbb
jne
data16
nop
test
daa
int3
mov
stos
add
or
dec
inc
push
push
loop
sub
pop
shlb
lcall
or
lock
loop
dec
push
push
lret
pop
sub
push
mov
inc
and
ss
xor
fists
inc
in
inc
scas
pop
pop
imul
fs
xor
xchg
add
ss
rsm
js
test
lcall
and
fnstcw
or
and
pusha
mov
kmovd
or
sbb
sub
cmpsl
and
mov
mov
js
je
cmpl
dec
mov
add
ret
das
movsb
repnz
nop
add
and
outsb
jb
das
mov
push
mov
loopne
push
sbb
cs
clc
shl
and
lret
or
fnsave
cmp
xorb
fmull
hlt
add
mov
lret
and
aam
stos
dec
call
jmp
test
mov
sub
popl
into
int3
movsl
lock
xchg
add
push
std
js
xchg
xor
rclb
adc
push
cld
cmp
inc
push
pop
cmpsb
xor
xor
mov
sbb
jb
inc
or
push
and
setns
movsb
lods
mov
and
and
adc
sarb
push
sub
add
push
js
test
and
push
add
aaa
push
insl
push
push
aas
inc
add
in
xchg
cmp
mov
je
sar
xchg
xor
or
pop
mov
hlt
sarl
push
not
pop
add
dec
push
dec
inc
push
xchg
popf
rcll
enter
ret
repnz
arpl
cld
cmpsl
gs
xor
pop
dec
sub
rorb
adc
outsb
aas
dec
jb
loope
push
jmp
push
pop
mov
jl
int3
inc
sub
mov
or
rcr
pop
mov
lods
out
addr16
adc
push
xor
lret
or
inc
cmp
sar
mov
jo
xorl
test
ss
cmp
int3
and
push
in
inc
jle
adc
push
cs
inc
mov
sub
lea
ljmp
mov
inc
or
jecxz
mov
inc
pusha
mov
sbb
testb
fsubr
sbb
inc
xor
adc
xchg
push
imul
pop
push
data16
or
insl
sti
mov
push
cmp
jbe
rolb
inc
into
sbb
adc
dec
and
mov
cld
lea
add
mov
inc
and
loop
sarb
outsb
andl
clc
aam
test
push
ret
je
mov
in
and
and
lcall
movsb
jmp
sub
mov
mov
cmpsb
cs
pop
adc
rcl
ljmp
push
ficoms
add
cmp
pop
pop
mov
adc
xor
stos
add
pop
push
cmp
mov
cli
pop
cmp
fmuls
testb
lret
push
sub
jge
rcl
mov
lea
outsb
aam
xor
test
and
push
je
inc
cmpb
addb
mov
enter
mov
add
jg
mov
cmp
test
ds
mov
pop
and
sub
mov
ficoms
and
or
subl
fcmovnbe
insb
pop
add
leave
mov
mov
fwait
dec
sbb
gs
dec
and
push
and
shlb
sub
cmpb
sti
or
or
fdivrs
xor
insl
adc
mov
jae
mov
insb
std
cli
outsb
inc
adc
mov
jmp
subl
sbb
push
push
mov
cmp
in
shll
add
push
nop
clc
mov
jne
aaa
sbb
push
cld
mov
mov
cmp
hlt
mul
pop
es
or
movsb
xchg
jmp
ljmp
pop
add
jle
adc
call
mov
pop
inc
push
cltd
ljmp
fs
sbb
mov
dec
pop
sbb
xor
fdivr
lahf
pushf
cmpsb
adc
mov
cmp
jge
icebp
add
int3
add
lods
jmp
lock
sub
xchg
xchg
pushf
clc
call
jbe
dec
mov
cli
incl
ret
decb
push
lret
xchg
jo
ret
cld
pop
mov
xchg
test
pop
outsb
loop
adc
xor
mov
and
sub
xlat
addl
push
hlt
xchg
jb
pop
movb
lock
xchg
sub
mov
jp
jl
ljmp
jge
jmp
sub
nop
sub
decb
mov
adc
pop
mov
jae
das
es
push
popa
jmp
call
inc
jb
roll
subb
insb
xchg
inc
cmp
call
dec
insb
xor
and
inc
jo
push
pop
push
sub
out
es
sti
xor
mov
inc
cmp
stos
jg
dec
sbb
scas
push
inc
xor
mov
jo
mov
xor
data16
aaa
xchg
mov
jp
test
xor
gs
inc
ja
xor
decl
push
mov
jne
mov
mov
test
aam
xor
shll
pop
test
or
xchg
add
out
push
fstps
stc
int3
adc
inc
shl
or
arpl
add
pop
mov
or
jmp
pushf
scas
add
or
test
roll
push
mov
in
popa
push
mov
stc
add
or
jge
bound
jle
outsl
pop
nop
psrld
decl
mov
mov
pushf
nop
add
stos
or
fs
int3
mov
pop
adc
mov
sbb
and
mov
add
push
rclb
or
loop
add
pop
dec
add
add
dec
cs
fs
xchg
and
push
ds
inc
xor
outsl
add
sbb
lret
jmp
xor
cmp
mov
add
cs
or
lods
cld
clc
bound
pop
cmp
xchg
mov
aaa
jecxz
jp
movsl
xchg
outsb
jo
call
jg
push
add
xor
add
push
fcmovu
das
or
push
fiaddl
sahf
repz
test
mov
call
loope
mov
insb
pop
and
lods
pop
sti
outsb
push
lcall
push
xchg
mov
or
adc
mov
push
lcall
inc
xor
scas
inc
popa
dec
jmp
add
shlb
fdivr
pop
fstpt
pushf
xor
ret
add
adc
add
jg
outsb
dec
ret
add
call
push
fimull
pop
jg
rcrl
cmc
bswap
je
push
cs
cmp
inc
hlt
out
js
out
sbb
int3
in
insl
mov
stc
push
push
sahf
mov
lcall
mov
dec
lods
into
cli
pop
mov
jbe
sub
out
mov
add
lea
lret
test
push
and
std
add
aam
jmp
in
add
sub
stos
adc
out
fidivs
mov
xor
cltd
dec
mov
mov
adc
sub
add
dec
call
adc
ret
aad
sbb
push
push
add
inc
into
push
fmuls
decl
int3
xor
loopne
adc
dec
adc
fdivrl
es
push
and
fildl
dec
xchg
cmc
xor
rcrb
jb
jb
pop
dec
mov
test
lcall
pop
cwtl
mov
jp
jae
das
mov
mov
add
dec
cmp
ret
outsl
popa
test
and
loopne
lea
sarl
or
andb
push
xor
sub
pop
pop
push
or
ret
adc
outsl
dec
sbb
rorb
fcmovne
mov
sub
sbb
xchg
push
lock
shlb
or
cld
dec
jg
and
out
fs
roll
ljmp
mov
sub
xchg
push
xlat
sub
sub
lock
push
fmull
cmp
aaa
push
sbb
pushf
cmp
inc
add
test
add
sarb
cmp
ret
call
pop
into
mov
adc
or
bound
fdivs
or
in
cmp
xor
inc
inc
push
out
inc
mov
dec
outsl
push
pop
pop
cmp
or
or
fcom
mov
lock
mov
adc
test
cmc
jbe
mov
lods
mov
adc
int
int3
ret
add
add
jo
ss
ror
push
and
clc
punpcklbw
pop
mov
mov
xorl
cmovl
loopne
loope
push
add
pop
push
bound
cmp
add
add
dec
data16
in
orb
outsb
adc
fiaddl
mov
repnz
in
mov
lock
rorb
xchg
inc
pushl
push
sbb
or
adc
inc
insb
inc
push
inc
inc
test
cld
mov
fs
rcrb
scas
pop
mov
push
rolb
rcr
sub
lret
push
mov
push
mov
jbe
mov
sbb
xchg
fdivr
jg
cmp
sub
movzbl
push
xchg
cwtl
pop
xchg
stc
add
lock
push
out
ljmp
cmp
push
inc
lock
push
pop
jb
push
lds
in
xchg
mov
dec
insl
inc
add
cmpsl
pusha
fcmovb
cmp
xor
jb
sbb
inc
cmp
pushw
add
mov
test
aaa
add
cld
adc
add
cwtl
or
in
cmpsb
outsl
adc
fdivl
rorl
and
decl
xchg
inc
sub
aaa
mov
inc
mov
movsb
sub
mov
push
push
iret
pop
repnz
inc
add
jno
mov
sbb
pop
or
pushf
adc
add
push
inc
fdivrl
cli
jb
adc
pop
in
mov
movsb
test
pushf
jl
mov
leave
enter
pop
lock
sbb
jl
dec
adc
jge
andps
enter
test
inc
fmull
and
cld
and
push
gs
dec
add
xchg
or
hlt
test
sbbl
imul
cli
or
in
cli
or
mov
push
loop
fdivl
mov
add
js
jns
ja
adc
jp
dec
inc
sbbl
push
rorb
aam
push
mov
sub
dec
sub
outsb
xchg
mov
loopne
sub
ds
add
imul
push
sbb
arpl
adc
scas
push
inc
add
cmp
out
cmpsb
out
lret
jmp
jp
or
xor
inc
or
push
sub
push
loop
cmp
add
incl
das
push
cmpl
xor
adc
call
aam
aaa
lea
cmpsl
cmp
sbb
cs
push
cmp
pusha
jo
int3
cli
mov
imul
ret
inc
mov
fisubs
pushf
clc
outsl
xchg
int
lods
icebp
in
jae
mov
stos
mov
shr
int3
or
inc
add
mov
ljmp
mov
adc
xchg
es
rolb
adc
jb
ret
insl
add
hlt
mov
sub
add
dec
xor
repnz
mov
stos
xorb
xorl
mov
push
inc
mov
push
rolb
call
outsb
nop
stos
adc
push
lea
ret
adc
int3
pop
test
and
in
movsb
cmpb
add
inc
jp
or
or
adc
pop
dec
push
decb
jne
sahf
sub
rcrb
ljmp
hlt
nop
negl
aam
loopne
cld
stc
int3
xchg
hlt
mov
ret
shlb
jmp
and
stos
sbb
pop
mov
or
jb
scas
dec
or
jp
push
push
ljmp
lods
mov
adc
dec
xor
add
jg
mov
test
pop
mov
rolb
clc
test
rcr
cld
outsb
adc
incb
shrb
push
inc
inc
sub
addl
or
mov
xchg
in
jl
mov
and
fwait
incb
sub
mov
jge
out
clc
mov
and
popf
mov
adc
push
mov
dec
push
and
jmp
add
cmp
out
adc
and
mov
rcr
shl
adc
xor
pop
and
data16
dec
fstpl
into
xchg
push
push
push
xor
in
mov
hlt
jg
loop
call
sbb
icebp
xchg
xchg
push
push
incb
lea
cmpsb
imul
push
inc
addb
lahf
or
add
mov
push
xchg
push
pop
lcall
divb
addb
nop
and
jne
xor
popa
jge
je
xchg
pop
mov
sub
es
jg
idivb
data16
hlt
jb
test
jnp
cmp
inc
mov
add
mov
rclb
inc
pop
in
lods
jg
cmpsb
fwait
test
ret
xor
sahf
test
adc
and
pop
push
dec
dec
mov
or
push
sbb
push
lods
in
and
aam
std
fdiv
push
inc
or
in
mov
xor
jmp
pop
cmp
ret
push
and
mov
nop
and
outsb
and
xchg
adc
test
inc
cmp
add
and
data16
ljmp
int3
mov
jmp
aam
cmp
add
call
add
insb
pop
sbb
popf
clc
inc
lret
loop
mov
jae
pop
xchg
in
pop
add
adc
mov
xor
inc
cmp
dec
lods
call
mov
mov
xor
mov
or
mov
cmp
enter
call
and
or
ljmp
cld
inc
xchg
rcrl
lds
push
mov
ret
mov
ret
test
jp
mov
fs
pop
add
sub
lcall
mov
rcl
mov
push
xchg
mov
mov
test
icebp
jg
lock
or
inc
cmp
sbb
cmp
outsl
aas
mov
add
test
ret
add
ds
test
pop
adc
cvtpi2ps
bound
jo
push
sarb
lods
inc
push
mov
push
add
xchg
ret
jmp
pop
adc
insb
es
or
lock
and
je
lock
jb
sub
cmp
ud0
jmp
loopne
adc
push
cmp
push
inc
jle
mov
dec
push
mov
rcrb
call
sar
lods
add
std
rolb
cld
lock
cmp
adc
ret
inc
nopl
sbb
test
test
std
clc
js
cwtl
popf
mov
inc
push
or
cmp
sbb
jge
jmp
leave
sub
int3
clc
add
enter
jbe
pop
fidivs
mov
call
cmp
nop/reserved
and
xchg
or
add
push
movsl
adcb
mulb
xor
sbb
into
add
or
fimuls
scas
popa
imull
push
dec
pop
mov
cmp
xchg
addl
movsb
sbb
pop
xor
or
mov
lahf
push
cld
add
xchg
add
cmp
push
mov
jmp
or
mov
or
aaa
in
xor
out
xor
cmp
or
and
test
fidivrs
rolb
in
adc
fisubs
lcall
add
repnz
mov
aam
pop
enter
stos
dec
dec
jmp
add
cmp
outsl
sub
fimull
arpl
push
add
hlt
jg
mov
or
call
les
inc
cmp
pop
sub
or
cmp
sahf
mov
mov
insb
push
fadd
hlt
cmp
mov
mov
lret
daa
fsubl
push
or
dec
test
std
cmp
pushl
ds
js
push
enter
push
icebp
jo
insl
nop
add
lods
inc
test
lods
test
pop
add
pop
fdivrs
div
and
push
mov
push
add
popa
ret
dec
movsl
cmpsb
aas
fs
cmp
push
out
loope
in
shr
add
pop
jae
push
add
clc
pop
fisubrl
xor
enter
mov
mov
mov
xor
mov
add
lret
inc
push
mov
and
jecxz
insl
pop
mov
ret
lahf
cmp
movsb
fdiv
add
mov
pop
push
add
mov
cmp
and
cld
or
adc
arpl
add
js
and
sbb
jl
add
jmp
dec
mov
scas
out
ds
add
je
push
leave
mov
ret
stos
inc
or
hlt
std
push
cmp
xorl
movsb
add
mov
nop
out
test
jp
pushl
add
jb
pop
cmp
mov
and
mov
cmp
cmp
lods
xchg
cmp
push
mov
js
call
mov
cli
lods
mov
add
jb
mov
je
pop
mov
stos
push
data16
pop
movsb
mov
gs
lods
pop
push
inc
jb
cmp
jne
mov
pop
mov
icebp
xchg
clc
into
sub
sbb
les
faddl
out
scas
in
mov
mov
test
cmp
mov
hlt
jne
mov
xchg
cs
lea
js
rcll
push
add
mov
inc
scas
mov
adc
aam
insb
cmp
sub
pop
adc
test
dec
push
xor
lea
adc
add
mov
pop
jne
or
jo
inc
repnz
fwait
sub
mov
pushl
jmp
call
jmp
dec
inc
imul
or
test
push
aam
jmp
ljmp
add
adc
dec
inc
sub
je
cmp
movsl
xor
push
mov
sbbb
inc
mov
jo
inc
out
out
sub
mov
pop
adc
mov
cli
shll
outsb
inc
paddusb
mov
push
fmuls
insl
aad
adc
lea
add
ljmp
loop
test
lahf
pop
cli
ja
lods
inc
fst
mov
pop
mov
das
mov
mov
push
pushf
mov
ss
dec
xor
inc
and
pusha
mov
pop
scas
adc
out
sub
rcrl
mov
adc
clc
imul
movsl
mov
add
mov
loopne
lcall
roll
inc
call
addl
insb
dec
xor
ret
jle
inc
or
or
pop
push
out
or
lods
dec
mov
push
xlat
fidivrl
cs
test
mov
ja
ret
xchg
popa
dec
add
and
adc
adc
ss
sub
mov
or
inc
mov
sub
jmp
push
inc
jne
and
sub
scas
lods
pop
stc
ret
inc
dec
lret
mov
cli
add
sbb
dec
fiaddl
sbb
sub
sbb
rol
sar
scas
arpl
icebp
and
cwtl
jg
lock
ficoml
scas
inc
cmc
lcall
mov
mov
fsubs
js
mov
push
pushl
aam
and
aaa
add
les
inc
xchg
inc
jb
sbb
dec
movl
mov
xor
add
fwait
leave
add
enter
sbb
mov
or
mov
pop
push
cld
dec
dec
jp
gs
rcrb
add
or
or
imul
push
test
sbb
dec
dec
xor
push
add
sbb
loope
mov
fidivrl
mov
xchg
pop
hlt
cmp
in
push
mov
push
test
pop
inc
es
pusha
push
push
pop
arpl
and
bound
dec
xor
add
or
push
out
add
xor
daa
enter
sub
add
add
mov
adc
push
mov
shlb
push
adc
add
lock
xor
xor
std
dec
mov
mov
cmp
out
mov
mov
movsb
mov
inc
fs
sahf
xchg
nop
pop
adc
dec
add
add
shl
sbb
or
imul
pop
jb
call
fidivs
add
std
sbb
xchg
or
add
jl
sub
xor
dec
rclb
push
inc
cmc
lea
dec
decl
movsb
and
add
call
rorb
xor
outsb
data16
or
int3
shr
mov
push
mov
clc
jo,pt
mov
add
pop
ret
push
mov
ljmp
aas
push
movsb
mov
hlt
je
cld
lea
mov
rcr
adc
mov
mov
cld
cli
jmp
nop
gs
sar
int3
adc
aaa
mov
dec
call
or
mov
fadds
shll
out
add
clc
jg
xor
jmp
enter
ret
sbb
add
push
in
mulb
mov
enter
xchg
mov
subb
dec
mov
cmp
mov
decl
mov
leave
shl
sbb
es
cli
jae
xorps
mov
mov
orb
pop
addb
push
loop
sub
push
cmp
mov
mov
test
adcb
push
hlt
pop
dec
fdiv
adc
push
mov
mov
xor
and
xchg
enter
add
call
es
mov
jo
sbb
aad
call
sub
mov
nop
add
je
mov
lods
or
lods
clc
loope
mov
cld
in
test
pop
xchg
ss
mov
leave
idivb
inc
jg
pop
or
loope
add
push
int3
pop
push
call
mov
imul
xor
push
aaa
out
arpl
lock
rcrb
ljmp
pop
loope
xchg
and
dec
or
mov
pop
aad
cmp
addb
nop
mull
imul
shrb
sahf
fsubs
push
loope
add
xchg
lock
inc
ljmp
jo
sbb
push
pop
add
fdivr
and
test
sub
mov
xor
pop
dec
jge
roll
popa
repz
xchg
icebp
sbb
dec
and
inc
adc
filds
in
ss
push
and
adc
or
xchg
push
je
pop
fbstp
divl
inc
sub
lcall
or
and
inc
inc
inc
mov
scas
inc
and
ret
cmp
fstpl
sub
mov
inc
test
sbb
add
je
cmp
cmc
leave
subb
xor
xor
push
ret
mov
add
je
mov
fucomp
push
cmp
out
mov
clc
adc
inc
dec
or
loope
stc
sbb
outsb
mov
or
push
add
jae
movsb
pop
jne
or
pop
sbb
inc
mov
mov
jbe
cmp
sub
sbbl
into
out
mov
sub
inc
fisubrl
push
outsb
and
sbb
add
int3
push
stos
dec
push
jne
adc
mov
dec
dec
jge
mov
sub
cmp
xchg
aas
xchg
clc
or
xchg
push
and
fcomp
mov
and
mov
dec
cld
push
gs
rorb
or
addb
jae
mov
cld
mov
cmpl
adc
add
cwtl
pusha
adc
ret
lds
dec
jl
call
aaa
mov
pop
adc
xor
push
jge
mov
or
mov
sbb
ficomps
in
in
clc
stos
pop
test
xor
adc
lahf
mov
ret
cmp
push
rcll
sbb
jo
mov
jae
fdivs
cld
xor
fmull
std
scas
inc
ret
mov
jmp
test
bound
loope
dec
jp
hlt
sub
dec
jp
dec
inc
orb
inc
pop
cmp
push
push
incb
popf
mov
ljmp
lret
jnp
dec
movl
movsb
mov
adc
aam
mov
inc
add
les
dec
iret
adc
adc
cmp
and
movsb
movsb
mov
fcoml
testb
test
ret
call
lahf
push
push
and
int3
inc
pushl
fdiv
imul
js
cwtl
inc
mov
xor
mov
mov
jo
add
sbb
fdivrs
cltd
sub
pusha
push
rcll
gs
pop
mov
sti
jns
dec
fsts
sub
xor
stos
bswap
dec
or
arpl
test
xor
lock
inc
push
rolb
cmp
fmul
std
fs
subl
push
xor
sub
fmuls
hlt
sti
xor
cmpb
orl
jb
js
adc
jne
add
and
mov
incb
js
std
adc
dec
ja
ds
dec
add
aam
mov
or
adc
push
add
push
stos
imul
jb
dec
mov
xchg
cmp
push
adc
or
fisttpll
sbb
mov
and
data16
pop
fmull
or
jne
add
mov
jle
stos
inc
in
into
add
push
adc
jmp
cmc
mov
stos
shrl
call
std
mov
lods
pop
add
xor
adc
icebp
jbe
sub
mov
inc
ss
push
adc
add
or
inc
cmp
xchg
inc
xchg
mov
mov
movb
xchg
outsb
enter
outsl
stc
popa
mov
pop
add
shlb
sbb
mov
dec
cmpl
jbe,pt
lahf
test
int3
inc
test
imul
and
rorb
loope
rclb
pop
mov
rcrl
mov
jl
cld
fwait
adc
push
adcl
ss
mov
or
negb
stos
ret
adc
dec
sbb
je
lea
pop
push
xor
int3
mov
push
test
xlat
sbb
test
and
test
adc
adc
fsubrl
and
ds
notb
call
mov
sbb
movsb
cmp
test
or
push
and
or
and
push
mov
sub
popa
orb
dec
jge
sub
xor
push
jae
dec
and
sub
mov
push
sub
mov
mov
aam
lds
js
movsb
mov
inc
push
ret
mov
fdivrp
push
mov
mov
mov
fdivr
push
mov
inc
in
or
fs
daa
lock
lret
cmpb
xchg
fldcw
outsl
jnp
mov
push
subb
nop
rcr
add
int3
sub
mov
jg
push
repnz
jecxz
mov
or
ret
add
rolb
pop
enter
dec
fbld
sbb
mov
mov
dec
cmp
jg
leave
imul
add
sub
mov
mov
pop
stc
push
adc
pop
sbb
mov
test
dec
test
push
out
into
mov
push
add
adc
fsubl
cltd
lea
nop
icebp
cld
adc
or
fmuls
jp
mov
fcmovu
mov
lcall
adc
mov
test
cmp
xor
add
outsw
xchg
jb
out
xor
shlb
rolb
inc
in
enter
or
dec
call
pushw
xor
sub
movsl
cwtl
mov
push
jg,pn
aad
cld
test
decb
or
sar
pop
xchg
pop
out
mov
rsm
or
adc
inc
push
cmp
xor
and
and
int3
add
bound
jb
in
mov
pop
push
and
mov
xor
jecxz
aam
adc
mov
push
rolb
xor
cli
inc
ljmp
incl
or
push
mov
pop
mov
sarb
add
pop
adc
outsb
mov
dec
mov
movsl
cmp
mov
adc
pop
sub
movsb
cmpsb
mov
pcmpeqb
fisubs
nop
fdivr
inc
adc
shll
push
andl
push
xchg
aaa
mov
xchg
aam
outsb
cmp
pop
jo
rorb
dec
sub
push
lea
dec
cld
xchg
push
adc
push
lea
ljmp
adc
les
mov
loopne
fstps
lock
inc
minps
cmpsb
and
dec
pushf
pop
hlt
mov
pop
sub
push
add
outsb
or
es
fadds
mov
idivl
jo
cmp
and
inc
call
jo
leave
xchg
add
cmp
xchg
sub
sbb
test
jmp
add
rclb
pusha
xor
and
lock
sbb
or
ss
mov
dec
push
add
rcl
insb
cmpsb
push
dec
sub
push
mov
mov
lock
ret
adc
inc
sahf
push
lret
fisubl
aad
clc
lods
cli
sub
lock
cwtl
idiv
arpl
ret
xchg
movsl
mov
clc
popa
sbb
shl
add
mov
mov
enter
cmp
or
ret
orb
fsubs
add
not
pop
hlt
adc
push
add
dec
cmpsb
and
pushf
push
call
enter
jp
xchg
cltd
mov
addr16
sbb
inc
pop
scas
mov
push
dec
aam
andl
adc
push
insl
or
shrb
ds
incl
mov
and
mov
call
repz
cwtl
repnz
les
test
push
popa
jp
pop
test
aas
jbe
xchg
jbe
mov
jmp
mov
push
cmpb
addl
push
call
pop
test
push
mov
cmp
bound
sub
insl
ljmp
mov
push
inc
int3
test
or
repnz
adc
aas
rolb
enter
inc
push
add
mov
sahf
aad
cmp
shrb
dec
add
insb
movsb
push
outsl
inc
inc
xor
or
dec
and
push
cmc
daa
dec
sbb
or
add
push
cs
and
insb
inc
push
loop,pt
dec
jl
out
add
pop
stc
add
push
push
clc
insb
or
inc
mov
push
pop
hlt
cmp
loopne
cmovge
and
test
icebp
jecxz
out
mov
lock
iret
pop
adc
jnp
jno
or
add
jmp
lea
clc
adc
dec
pop
mov
test
outsb
outsl
push
imul
adc
mov
movl
mov
jne
and
cmp
push
and
and
ja
xor
sbb
leave
aam
push
ret
pop
or
insl
dec
sub
or
je
outsl
arpl
mov
push
fwait
aas
add
or
push
add
call
ljmp
xor
imul
in
cld
or
adc
or
test
jl
inc
ja
rclb
xchg
addb
add
test
xchg
iret
std
pop
lods
push
sbb
test
inc
or
int3
push
iret
call
ljmp
sbb
dec
addl
cmp
js
inc
movsb
adc
push
ds
jne
xor
sbbl
push
or
lret
push
xor
push
pop
push
hlt
push
adc
imul
adc
mov
mov
jle
cmpl
mov
js
adc
decl
and
aaa
push
pushf
push
push
push
xor
test
inc
xor
jb
dec
insb
je
xchg
add
sbb
dec
negb
sbb
inc
xor
fwait
ret
mov
xchg
or
inc
push
mov
add
push
xor
push
mov
mov
pop
or
and
std
icebp
outsb
or
cmp
fidivrs
loopne
adc
dec
push
sub
aaa
pcmpgtw
sub
call
nop
into
push
arpl
lret
cmc
cmpsb
jg
and
pop
add
and
mov
push
cmp
sahf
les
es
mov
push
mov
add
or
sti
dec
inc
add
mov
decl
mov
aas
adc
mov
addb
jne
test
pop
sub
mov
push
mov
push
enter
loope
ds
lock
jl
sbb
push
fstpl
add
and
and
and
movsb
mov
hlt
add
add
xor
add
test
icebp
dec
inc
inc
push
push
aam
adc
fldenv
test
jecxz
lcall
xor
cwtl
out
insl
movl
lock
mov
jl
pop
bound
xor
push
jmp
dec
pop
movsb
nop
and
push
dec
clc
rcll
sub
scas
sbb
mov
lea
in
mov
dec
push
mov
xchg
add
jg
incl
das
dec
xorl
arpl
lcall
sbb
push
cmp
lcall
leave
adc
xor
testb
push
ficoml
jne
bound
repnz
dec
pop
jne
mov
sarb
cmpb
sub
mov
test
cld
add
aaa
mov
inc
add
iret
push
push
cs
sbb
int3
clc
push
aaa
test
and
xchg
hlt
inc
in
or
in
push
push
stos
mov
cmp
cmpsb
mov
fistpl
divb
mov
sbb
push
loopne
and
add
hlt
loopne
mov
add
xorb
lcall
sbb
out
add
push
cld
fisttps
dec
rcll
xor
mov
call
jnp
data16
popa
xchg
pop
or
aas
and
dec
cmp
dec
and
movsb
sbb
sub
lea
mov
fmuls
rclb
sub
adcl
lcall
push
inc
sbb
rcl
pop
xchg
insb
clc
pop
or
cmp
lock
jle
es
sbb
add
push
jo
fiadds
int
cmp
cs
add
mov
rclb
push
mov
inc
xor
mov
mov
or
mov
sub
sub
add
ja
dec
inc
sbb
push
add
inc
inc
add
les
lock
sub
xchg
faddl
add
cmpb
push
icebp
xor
sbb
frstor
pop
pop
stc
cmova
js
insb
cmp
test
jb
incl
sub
push
lea
adc
push
push
fsubs
fadds
lcall
push
jge
aam
add
xor
or
test
clc
inc
mov
inc
aaa
adc
inc
neg
xorl
es
sarb
mov
xchg
lcall
sbb
adc
push
inc
or
push
mov
int3
xchg
dec
push
hlt
popa
sub
lahf
insb
test
mov
sti
fistps
lock
clc
push
shl
int
lds
push
pop
fdivl
pop
dec
inc
inc
and
mov
xor
lock
mov
outsl
dec
cs
adc
dec
or
aaa
lret
call
pop
addl
sahf
jnp
popf
cmpb
scas
decl
push
jp
ret
or
movsl
fistl
mov
xchg
pop
imul
fldl
push
add
call
sub
add
gs
mov
lock
ret
xchg
or
pop
leave
mull
test
lret
jmp
outsb
and
push
inc
push
mov
push
push
out
test
jb
mov
or
jnp
pop
and
sbb
push
sarl
insl
push
mov
dec
adc
repz
cmp
or
rcrb
jne
insl
loop
loop
bound
cvtdq2ps
les
dec
adc
rol
xchg
jns
in
loop
sub
push
adc
mov
mov
jmp
sub
test
mov
shlb
movsb
cs
fsubrl
xor
push
pop
sarb
int3
divb
mov
out
add
rorb
inc
push
test
out
test
cmp
fdivrs
push
shlb
pop
repz
jge
add
pop
inc
xor
sub
inc
xchg
test
push
xor
out
pcmpeqw
or
cli
outsl
insb
add
fistl
bound
inc
push
push
and
movsb
loopne
push
js
shl
fucomp
mov
in
sarl
and
jne
xchg
and
push
or
pop
pop
call
ss
push
bound
mov
and
sub
stos
sub
xor
mov
or
jp
loope
push
sbb
insl
pop
testl
aam
sbb
push
hlt
add
cli
add
fs
aam
xor
pushf
adc
in
mov
es
adc
call
test
push
out
out
push
mov
dec
cmp
fdivl
outsb
jl
aam
mov
out
lcall
mov
stos
aaa
xchg
sarl
incb
inc
cmp
arpl
adc
mov
sub
lcall
push
add
dec
cld
pop
or
hlt
sar
cmp
hlt
add
js
fisubrs
es
inc
lock
add
or
cli
std
rcl
mov
js
mov
sub
cli
mov
test
adc
push
add
mov
jg
xchg
pusha
adc
adc
jge
add
add
lea
in
push
movsl
inc
xchg
xor
adc
fwait
pop
in
stos
sbb
scas
push
rolb
adc
les
jge
sar
adc
lret
cmp
push
int3
push
mov
outsb
scas
push
adc
inc
mov
icebp
mov
fcoml
xor
repnz
mov
ss
and
inc
incl
cmpb
sbb
call
inc
js
lret
push
xchg
push
lods
xchg
inc
jb
je
sar
adc
je
lock
in
gs
or
loop
add
enter
cmc
jmp
outsl
scas
outsb
adc
dec
lret
mov
cmpb
mov
mov
pop
pushl
or
leave
js
and
and
xor
lds
cmp
test
mov
sub
test
shrl
inc
loopne
xchg
out
cmp
cmp
ljmp
cmpsb
mov
testb
int3
sbb
aam
add
push
test
mov
sbb
aas
jb
cmpb
les
mov
dec
stos
decb
dec
mov
jae
pop
shlb
sbb
out
inc
rolb
sbb
jo
mov
or
mov
lods
xor
cli
pop
jmp
call
out
add
into
rolb
jo
add
pop
adc
inc
mov
xor
mov
enter
lar
jp
inc
cmp
push
cltd
lock
fcoms
inc
push
fstl
xor
movsb
js
jmp
testb
sub
add
sbb
xchg
out
fsts
cmp
sbb
inc
mov
cli
mov
push
jg,pt
push
xor
test
lret
add
push
loope
sti
lds
sbb
push
aad
sub
push
loopne
clc
dec
lret
cmp
outsb
fsubp
inc
shlb
lcall
inc
push
inc
jg
mov
and
mov
addl
cmp
nop
mov
add
movb
sub
add
shlb
sub
push
and
jbe
dec
xchg
mov
jb
cmp
ds
jmp
and
cmp
addb
int
mov
cmpsb
jae
sub
xor
enter
aam
xor
mov
inc
ret
jge
add
mov
push
and
mov
jbe
rclb
stos
dec
loope
stos
cmp
insl
or
jge
push
mov
inc
rclb
add
inc
mov
jp
adc
dec
leave
ds
mov
and
xor
push
insl
test
cmpsb
outsb
pop
add
loopne
pop
xor
mov
daa
and
ds
cmpsb
lea
int3
pop
pop
sub
add
xor
jle
push
ret
push
data16
jge
pop
and
xadd
cmp
fstl
or
or
cmp
icebp
adc
insl
mov
jbe
inc
sar
jne
jo
mov
push
pushf
das
and
fwait
in
in
xor
scas
call
int3
mov
push
ret
es
mov
push
jg
mov
inc
pop
push
fisttps
inc
mov
mov
clc
nop
sbb
cld
cmc
scas
call
out
jg
and
xchg
mov
loopne
cs
negb
fnstsw
inc
xchg
stc
mov
and
xchg
imul
and
or
outsb
adc
cs
and
ret
pop
scas
inc
loop
xchg
insb
pop
or
mov
and
sub
sub
xor
xor
jp
test
mov
incl
push
shrb
clc
data16
xor
rol
jnp
pop
adc
dec
mov
mov
jae
and
add
xchg
add
and
fsub
sarb
adc
lods
incl
push
dec
jp
lcall
mov
push
data16
cmp
add
pop
jp
jo
std
sub
sub
dec
lock
push
inc
nop
lret
pop
aam
or
test
lret
push
inc
push
dec
test
in
aam
pop
add
test
or
mov
loopne
mov
inc
cmp
push
lock
mov
jp
add
sbb
ret
cld
sub
inc
repnz
inc
adc
adc
outsl
pop
sbb
test
cmp
or
sub
push
mov
jne
outsl
lock
stc
add
push
clc
sbb
add
inc
ss
mov
add
jb
andl
pop
sbb
mov
jecxz
call
fmull
mov
cmp
sbb
sarb
adcb
push
fisubrl
mov
and
shll
jl
adc
pop
lahf
pop
cmp
or
in
test
lds
pop
cmp
bound
add
scas
dec
inc
dec
mov
xchg
xor
inc
test
fs
bswap
pusha
inc
test
outsb
pop
dec
push
and
jo
add
rcrb
inc
bound
adcb
nop
xor
and
daa
pusha
orb
imul
xchg
push
cmp
outsl
mov
les
orb
add
mov
test
adc
xchg
mov
jb
jbe
pushf
js
mov
add
inc
xlat
clc
in
rclb
lock
add
dec
addr16
adc
data16
fdivp
xor
and
jl
add
les
lea
lods
js
insb
adc
mov
push
lea
jle
lahf
data16
push
jl
mov
push
cld
mov
push
push
mov
pop
std
hlt
sbb
lahf
dec
aas
inc
int3
pushf
push
enter
pop
inc
addr16
adc
push
sahf
shr
ret
in
cmp
mov
mov
hlt
push
fs
or
test
sub
fstpt
mov
pusha
or
outsl
pop
jg
orb
push
push
hlt
mov
inc
in
inc
sbb
call
clc
inc
int3
adc
adc
lret
mov
movsb
negb
fiaddl
push
mov
inc
jl
push
ss
add
cli
sbb
mov
nop
in
movsl
push
mov
dec
or
lock
fs
dec
mov
call
incb
fistl
repnz
add
pop
ret
mov
push
add
rorb
or
push
int3
inc
lcall
mov
xor
push
jle
clc
imul
scas
jecxz
inc
rorb
incl
fdivrs
inc
cld
scas
mov
cmp
pusha
int3
inc
xor
clc
push
push
loop
leave
xor
pop
dec
test
lods
lock
push
in
repz
xor
xchg
pop
xor
xchg
xchg
cmp
pusha
movsb
and
and
cmp
or
hlt
add
fsts
add
mov
mov
js
cmp
add
pop
or
mov
push
sub
push
ja
push
mov
mov
xchg
push
xchg
or
mov
rcll
mov
dec
xchg
jle
jb
add
or
rorb
pop
mov
cld
pusha
add
mov
idivl
cwtl
rolb
orl
das
lock
add
test
loopne
clc
aam
lret
arpl
pop
icebp
mov
inc
pop
repnz
cs
sti
or
add
lea
cmp
clc
xor
lahf
and
dec
div
push
push
cli
addr16
scas
fs
mov
incb
fcmovnbe
add
add
xchg
xchg
cmp
or
gs
cltd
or
mov
or
pop
imul
mov
and
mov
mov
icebp
stos
pop
ret
idiv
mov
and
add
movsl
sub
push
push
xlat
mov
cli
adc
cmp
jb
jecxz
lea
push
sub
insb
loopne
add
cmp
dec
pushf
xchg
inc
mov
or
sub
or
icebp
sub
pop
ljmp
aaa
and
les
add
xchg
sub
sbb
mov
test
es
mov
imul
repnz
mov
ljmp
test
adc
cmp
cli
mov
outsl
and
leave
jmp
dec
std
int3
test
call
add
loope
imulb
enter
int
inc
push
divb
gs
dec
jl
push
ljmp
out
call
js
inc
pop
xchg
subl
mov
fmull
push
aam
sub
xchg
aam
scas
and
add
add
push
incl
sti
lea
rorb
add
fisubrs
inc
and
pop
sub
inc
push
push
mov
mov
sahf
push
mov
test
push
rcrb
int3
push
push
lret
clc
push
cmp
mov
push
repnz
mov
cli
add
push
lods
gs
sub
xchg
int3
aad
and
jp
mov
pop
xchg
push
push
dec
inc
fs
ficoml
out
dec
sbb
xchg
mov
push
mov
sbb
mov
sar
sub
jge
sub
mov
inc
or
fbld
sar
ret
mov
outsl
mov
cmc
push
add
call
xchg
decb
lods
inc
data16
outsb
in
daa
not
push
mov
filds
outsb
jae
filds
incl
jo
cmp
xchg
insb
inc
inc
jae
call
les
mov
mov
gs
aam
stos
mov
fs
cmc
jmp
cmp
fs
popl
in
mov
sbb
mov
lret
push
cmp
adc
push
adc
sbb
clc
cmp
sub
divl
ss
or
lcall
lea
jo
add
xchg
lcall
xchg
mov
ss
cli
push
sub
mov
fs
ret
adcb
push
cmp
hlt
scas
sbb
loope
pop
jp
sbb
mov
test
xor
jne
or
xorb
fsubrs
cmp
inc
xchg
dec
cmpsb
divb
mov
sbb
int
inc
fdiv
push
hlt
sub
sub
daa
sbb
and
lock
fildl
dec
fs
or
call
movsl
es
ja
inc
cmp
pop
std
xchg
daa
push
xchg
sbb
adc
xor
roll
pop
xor
je
shrb
test
pop
inc
rcr
insl
mov
push
add
mov
mov
enter
in
xor
push
mov
sub
or
cmp
sar
jne
sarb
insb
inc
stos
hlt
inc
fsubs
add
xor
testb
dec
cli
xchg
ja
xchg
cmp
daa
add
pop
jne
in
jmp
and
fs
add
cld
ss
or
pop
xlat
lock
pushf
out
pop
push
mov
jbe
rcl
sub
cmp
lock
dec
ret
in
fldl
es
and
out
dec
and
int3
rolb
mov
adc
mov
lcall
sub
pop
sbb
add
std
pop
push
fiaddl
mov
mov
ljmp
mov
add
sbb
xchg
and
mov
push
nop
fcoms
fsubrs
stc
lods
sub
push
mov
sbb
push
push
push
rclb
insb
rolb
mov
js
ds
or
or
add
loope
xchg
or
movsbl
test
mov
hlt
add
adc
xor
xor
hlt
stos
push
movb
mov
call
dec
aam
inc
repz
rorb
bound
loop
rclb
add
add
cmp
inc
lahf
icebp
cli
std
inc
xchg
out
sbb
lods
mov
call
mov
mov
repz
add
xchg
outsb
xchg
mov
je
je
inc
jmp
adc
jmp
or
push
push
cmpsl
jne
xchg
aam
sbb
adc
or
jae
or
jle
fsubrl
rorb
adc
pusha
or
pop
mov
test
and
data16
loop
dec
xchg
mov
inc
mov
jne
add
push
mov
cmp
insb
cvttps2pi
aam
fildl
jbe
sbb
arpl
and
push
fld
xor
add
scas
repz
fcoms
movsb
push
cltd
inc
jl
call
jecxz
imul
ret
jg
cmp
dec
dec
icebp
nop
popa
and
pop
test
xor
dec
addr16
test
repz
cld
push
inc
icebp
ja
mov
push
push
add
mov
and
insb
push
xor
mov
and
adcl
test
xchg
pop
aas
lods
sbbb
lods
add
adc
cmc
add
sahf
leave
or
sub
or
xchg
and
sahf
nop
inc
push
sarb
mov
stos
fs
add
ret
mov
mov
inc
dec
xor
xor
filds
mov
and
call
pushf
jbe
pop
sti
add
xor
inc
orb
shrb
jo
inc
ds
dec
enter
call
adc
push
xchg
push
push
cmpsb
insl
xchg
push
pusha
out
rclb
add
dec
dec
cld
or
ret
mov
dec
or
pop
push
mov
mov
cmp
cs
add
das
pop
aaa
jmp
aad
push
scas
dec
pop
clc
and
add
aaa
add
outsl
mov
out
dec
popa
arpl
mov
dec
push
dec
pop
or
in
mov
data16
sub
cmp
mov
mov
cmp
inc
enter
and
mov
hlt
or
loope
cwtl
push
insb
add
push
adc
jp
out
bound
adc
jmp
xchg
mov
clc
stos
xor
test
pop
mov
xor
daa
or
fwait
inc
add
std
mov
inc
ljmp
incl
jb
cmp
in
or
lock
jno
cmp
loopne
sbb
jmp
adc
movsl
sub
hlt
data16
rcl
inc
push
js
xchg
jbe
ss
push
arpl
push
cmc
sub
adc
addr16
mov
mov
add
xchg
xchg
adc
lock
cmpsb
fimuls
pop
insl
xorb
sub
push
add
test
sbb
pop
xor
add
test
mov
inc
fisubl
sbb
ss
jmp
xchg
push
push
es
mov
cmpsb
xchg
shlb
add
and
in
or
leave
mov
mov
icebp
insb
add
ljmp
lock
and
mov
push
push
cmp
add
add
push
test
inc
or
inc
jnp
fs
push
stos
cli
jp
gs
jmp
cmp
mov
dec
push
add
push
insb
inc
or
in
scas
je
add
sbb
cmpl
pop
mov
add
add
mov
bound
jmp
pushl
adc
add
data16
push
dec
inc
dec
std
scas
jp
aam
push
add
jne
push
test
push
add
push
clc
decl
lods
incb
enter
jns
pop
push
addl
mov
dec
sub
push
outsb
sbb
in
lock
push
mov
pop
xchg
mov
out
sub
in
jle
xchg
xchg
loope
jle
mov
shlb
test
cli
lds
jbe
mov
call
cmp
add
in
insb
lret
inc
inc
pop
fs
ret
inc
mov
mov
test
stos
addl
idivl
unpcklps
pop
ret
cmp
ja
mov
stos
lock
or
nop
push
jmp
int
xchg
cli
jo
jg
add
inc
push
cvtps2pd
dec
jmp
mov
nop
push
mov
mov
push
test
dec
ljmp
push
lock
in
or
or
or
mov
mov
mov
cmp
mov
fisubs
xorl
adc
adc
movsl
call
and
adc
mov
cmpsl
add
insl
fbld
outsb
xor
ret
xor
or
into
mov
and
mov
xor
enter
shr
push
push
movaps
cmp
fadds
add
js
call
popa
mov
and
lsl
loopne
addl
je
xor
subl
mov
fistl
rolb
adc
xor
test
lock
inc
pusha
popaw
call
outsb
pop
aas
xchg
xlat
std
add
inc
je
push
shrl
mov
inc
insl
rclb
sbb
movsb
insl
mov
mov
push
clc
loop
push
shl
mov
je
nop
or
cmp
and
idivl
movb
cmp
xchg
int3
push
mov
push
loopne
pop
fdivs
rolb
add
jb
jae
jl
lods
xor
push
les
inc
push
rclb
adc
mov
and
pop
ljmp
orl
inc
arpl
inc
enter
mov
popf
push
jno
push
mov
push
aam
or
cmp
adc
pop
mov
or
fdivs
ja
call
sub
sub
and
sub
mov
add
and
pop
data16
aam
mov
inc
in
clc
pop
xor
fdivl
jo
push
inc
daa
call
adc
push
mov
je
sub
push
or
push
jo
mov
enter
mov
sahf
movb
fimuls
sub
les
xor
es
add
mov
mov
mov
call
push
dec
cmp
adcl
cmovns
dec
lret
pop
and
lods
inc
add
ljmp
les
int3
insb
sbb
jge
adcb
or
sbb
addb
cld
push
push
push
lds
inc
sbb
inc
or
scas
scas
test
mov
adc
call
mov
or
sbb
mov
jb
mov
mov
xchg
es
loopne
ds
cwtl
ret
dec
leave
add
and
cmp
cmp
je
or
pop
sbb
mov
pop
ret
aas
rclb
fimuls
cld
xchg
aaa
and
or
pop
popa
and
call
pushf
ftst
add
fsubrs
subb
cmp
addb
sbb
ja
movsb
mov
xchg
clc
into
pop
stos
sbb
fcomip
mov
aaa
inc
xchg
cwtl
andl
cwtl
ret
push
inc
adc
push
add
cmp
jp
js
or
mov
test
or
xchg
inc
pop
or
pop
lock
sbb
pop
dec
arpl
mov
cmp
sbbb
mov
fwait
sbb
es
and
pusha
adc
les
inc
mov
mov
and
inc
mov
clc
and
sarl
aaa
call
sub
mov
jb
and
stos
fs
jae
shrl
xchg
adc
jnp
push
leave
adc
cltd
sub
dec
xor
jne
cltd
test
mov
lods
icebp
cli
mov
push
xor
test
test
test
cmp
xor
lcall
adc
out
or
push
and
in
cld
mov
nop
push
dec
dec
mov
mov
mov
jo
mov
cs
data16
outsl
inc
inc
leave
pop
mov
add
jne
enter
imul
repz
out
mov
or
push
pop
lock
pushl
mov
push
push
mov
aam
lds
jnp
cmp
push
sarb
jmp
rcl
push
scas
mov
arpl
data16
in
or
cmp
lret
cmc
inc
addl
adc
stc
outsb
sbb
fwait
pop
xor
jmp
icebp
push
add
jb
cmp
and
push
aam
pop
hlt
jg
cmp
lcall
data16
mov
inc
std
mov
sar
mov
sub
nop
push
cmp
jbe
sbb
shl
jp
push
sti
xchg
pop
rorb
sbb
dec
je
mov
fsubs
dec
sbb
lock
in
mov
lock
push
xor
push
rorl
dec
dec
fisttpl
in
pop
push
insb
xorb
mov
outsl
mov
mov
adc
ret
push
subl
mov
jnp
aaa
lock
scas
lock
fildll
call
push
mov
sub
data16
sbb
ret
mov
call
mov
add
sbb
mov
test
fs
sbb
daa
pop
push
inc
xchg
stc
call
mov
adc
cmp
out
sbbb
push
add
nop
xchg
push
cld
data16
out
mov
ret
mov
push
jl
dec
add
push
and
leave
add
and
aam
inc
std
fcmovb
js
add
out
xchg
sub
lods
xor
cld
mov
hlt
add
dec
in
test
mov
pop
xor
js
lods
jl
adc
int3
sub
or
rorb
mov
xchg
leave
and
sub
inc
sub
aas
jl
fldpi
adc
add
fs
and
test
or
sbb
dec
out
xchg
xchg
push
pop
enter
adc
cli
add
xor
ucomiss
lret
xor
out
mov
ret
xlat
cmp
xchg
lea
mov
sub
xchg
jns
jle
scas
xor
push
aad
or
jb
insl
xchg
add
or
inc
movsb
std
or
pop
je
pop
fisubrs
mov
int3
and
pop
push
pop
les
cmp
jbe
mov
loope
in
cld
cmp
les
int3
and
xchg
add
xchg
nop
mov
out
mov
sbb
add
test
outsb
call
add
jecxz
je
mov
cmpsb
sbb
pop
loopne
addl
add
mov
inc
mov
dec
jle
adc
sub
dec
adc
lds
pushf
test
dec
pop
mov
mov
and
push
sti
sbb
fistl
or
outsb
pop
jne
push
pop
ljmp
push
imul
sarl
shll
loopne
cli
lcall
xor
jae
adc
lahf
cmp
shrb
nop
jbe
cmpsl
les
adc
addl
fwait
adc
data16
add
popf
aam
sbb
jge
pushf
xchg
ljmp
push
cmpsb
pop
lea
or
mov
push
jp
sar
insl
outsl
js
aam
cmp
inc
into
or
lock
sbb
test
jae
mov
add
push
mov
mov
mov
cli
sub
fmull
adc
cmp
lock
xchg
push
icebp
or
int3
and
sub
xor
pop
rclb
mov
xor
cmp
ret
movsb
mov
or
mov
scas
int
inc
hlt
cmpsb
rclb
push
mov
xor
mov
nop
push
inc
ret
pop
pop
aad
pop
mov
sub
mov
pop
add
mov
pand
es
mov
cmp
add
mov
and
inc
pop
xchg
les
jle
mov
loopne
xor
loopne
jecxz
jo
ljmp
fidivrs
clc
js
clc
push
and
inc
inc
mov
xor
mov
sub
sbb
push
or
sbb
lret
sbb
or
test
mov
inc
jae
push
or
inc
rsqrtps
mov
inc
inc
jns
add
pop
add
dec
or
je
adc
push
aam
call
lcall
xchg
shrb
sub
sbb
test
idivb
dec
push
lods
jne
push
inc
add
fadd
mov
int3
dec
or
xor
inc
call
inc
mov
and
mov
shll
int3
xchg
mov
outsl
jbe
popf
mov
sbb
test
ret
test
pop
jb,pn
mov
sbb
xchg
and
pop
push
mov
mov
fs
or
bnd
jb
push
xor
testb
pop
adc
sub
fnstenv
jmp
mov
sub
and
aaa
jne
sub
cmpsb
mov
mov
cmp
arpl
mov
je
setl
shll
ja
js
adc
mov
nop
movsb
pop
cmp
bound
xchg
pop
pusha
xor
aam
cld
inc
call
sti
int3
aaa
inc
xor
inc
push
mov
insl
cli
sbb
ja
or
lock
mov
or
mov
test
test
ss
add
pop
ret
mov
ja
aam
lock
fcoms
or
outsl
outsl
je
incl
insl
cmp
outsb
call
in
ret
cmpb
adc
sbb
arpl
arpl
push
imul
cwtl
outsb
xchg
mov
xor
nop
inc
xchg
mov
push
sbb
and
shll
cmp
jmp
imul
mov
dec
std
insb
fwait
cmp
and
inc
int3
sbb
sub
or
xor
rcrl
data16
or
insb
jns
fwait
andl
dec
dec
mov
cs
add
jne
std
inc
xchg
lods
or
int3
xor
xchg
xchg
mov
mov
and
decb
pop
shlb
insb
out
push
xchg
sbb
inc
cmp
push
insl
dec
ljmp
sub
cli
insb
mov
mov
loope
lea
outsb
push
aam
jle
mov
lock
cmp
mov
dec
inc
int
mov
cmc
cmp
sarl
mov
adc
pop
xor
fadd
push
xor
or
gs
lods
loopne
push
jmp
mov
push
test
pop
mov
mov
cmp
popa
dec
mov
jbe
hlt
jno
test
pop
pop
push
inc
xlat
jle
add
je
adc
imul
cli
lcall
fwait
push
push
push
and
and
fidivrs
add
dec
pop
aam
mov
je
pop
loopne
sub
rcrb
jp
je
or
inc
popa
jge
push
sbb
int3
nop
push
mov
mov
cmc
jl
movl
fimuls
mov
stos
push
dec
mov
mov
mov
leave
xor
pop
outsl
rcl
mov
movsb
pop
push
push
add
test
xchg
in
mov
add
push
mov
inc
test
dec
push
incb
xchg
lret
or
inc
les
or
lahf
loopne
loopne
mov
sub
jge
adcl
push
or
sbb
loope
fiaddl
ss
pop
dec
xchg
nop
sahf
push
jae
dec
jmp
push
dec
outsl
push
jl
push
fdivs
ret
xor
push
jge
inc
ret
lea
je
bound
or
push
sti
es
hlt
leave
xor
je
add
shll
adc
jge
xchg
out
sub
pcmpeqw
or
pop
inc
pushf
adc
or
rolb
shll
sbb
inc
pop
loope
sub
dec
and
scas
mov
lret
mov
push
and
inc
out
cmp
push
sbb
xor
or
movsl
in
pop
mov
leave
fcompl
mov
sbb
adc
sbbl
or
sbb
mov
and
into
push
or
outsb
mov
les
fs
dec
inc
push
inc
imul
sub
dec
push
dec
ret
ret
push
xlat
ret
das
movsb
push
mov
lret
aad
shll
pop
inc
je
push
mov
hlt
add
data16
rolb
insb
add
clc
sub
inc
push
mov
mov
mov
push
push
push
sbb
mov
sarl
or
aas
rol
gs
push
in
cmpb
jmp
lea
dec
movnti
cmp
cmp
fisubrs
rolb
xchg
cmp
push
in
clc
add
mov
movsb
fsubl
push
add
clc
dec
mov
cmpsl
jle
inc
pop
pop
aas
movsb
sbb
and
xchg
inc
js
in
outsl
hlt
aas
sbb
pop
add
bound
ret
fcmovb
nop
orb
inc
dec
jo
repnz
add
dec
mov
inc
clc
fstpt
ss
leave
push
js,pt
or
decb
lret
shrl
pop
cld
and
xor
mov
lret
add
jmp
aam
xchg
lcall
js
add
outsb
call
js
cs
popa
xor
xor
pushf
mov
sbb
add
xor
cmpsl
dec
repnz
les
pop
call
sbb
enter
sub
cli
xor
icebp
sub
xchg
mov
push
xchg
jo
leave
enter
push
inc
add
push
out
aas
push
jle
sub
jecxz
mov
jb
mov
outsb
ljmp
add
push
adc
and
sti
xchg
adc
pop
pusha
push
lret
call
and
loopne
and
lcall
cli
add
mov
hlt
out
stc
push
arpl
and
push
ljmp
lcall
or
in
pop
ss
push
xor
test
sbb
pusha
and
adc
mov
add
mov
decl
pop
mov
ret
or
mul
scas
ja
adc
jb
adc
xchg
int3
inc
mov
mov
push
subl
ret
dec
jg
leave
mov
xor
sub
jge
test
push
shlb
adc
xchg
addb
bound
sahf
mov
add
repnz
shrl
ret
sub
lock
dec
loopne
sbb
inc
jge
in
xchg
dec
push
out
or
mov
xchg
pop
lea
xor
inc
xor
sbb
aam
mov
add
in
fsubrp
dec
rolb
clc
jp
push
inc
xchg
add
faddl
lods
xchg
xchg
sub
mov
or
xchg
mov
sub
mov
ja
enter
mov
sub
jle
daa
andb
mov
aam
mov
scas
idivb
pop
movsb
push
sbb
and
mov
xor
shrb
ljmp
or
aas
adc
adc
jae
xor
adc
rolb
add
repz
into
lahf
fistl
pop
dec
pushf
mov
loop
rcrb
or
inc
call
adc
jo
xor
jne
sub
cld
shll
push
or
out
rcl
pop
xchg
bound
sub
pop
mov
out
negb
clc
mov
call
mov
jno
sub
into
jl
or
pop
icebp
test
pop
and
pop
add
cmp
mov
addl
and
lods
push
pop
push
adc
lcall
lds
hlt
cmp
mov
push
in
popa
aaa
push
data16
sbb
nop
rcll
jb
stos
adc
and
in
mov
inc
cmp
mov
mov
sbb
js
xchg
inc
push
and
or
mov
xor
fisubrl
fs
shlb
inc
lret
jno
fisubrs
loop
leave
inc
adc
mov
adc
inc
add
add
pop
push
adc
add
pop
mov
inc
sti
and
sub
jp
xor
jmp
fs
incl
out
cltd
adc
dec
add
fdivr
mov
int3
push
mov
call
ja
pop
add
outsb
shll
lret
sub
outsl
adc
mov
mov
in
adc
or
popf
in
inc
push
jl
mov
xor
push
imul
jl
roll
pop
rolb
pop
pop
inc
inc
mov
cmp
push
arpl
xchg
mov
adc
cmp
cmp
inc
mov
mov
mov
clc
adc
jne
push
addl
adc
fs
dec
dec
nop
adc
cltd
mov
hlt
popa
and
add
fisttpl
push
filds
xor
dec
pusha
lret
rcll
dec
or
in
xchg
mov
jne
mov
in
lock
loop
in
mov
adc
nop
icebp
orb
dec
xor
dec
add
add
push
insb
stos
xchg
cmp
rclb
aad
xor
push
nop
adc
lret
decl
adc
jbe
dec
repz
dec
xchg
rclb
outsl
daa
fisttpl
or
testl
aas
xor
or
or
jb
cld
inc
mov
pop
jmp
mov
push
cmp
and
inc
out
add
adc
push
inc
bound
xlat
mov
popa
pop
insl
inc
arpl
int3
outsb
add
call
fmulp
push
shl
xor
or
cmp
adc
cmp
cmc
rol
mov
lcall
cli
push
mov
cli
gs
inc
sub
inc
pop
data16
repnz
push
dec
mov
imul
out
jne
inc
xor
popf
rolb
sbb
mov
mov
aas
mov
mov
sub
testl
cwtl
sub
mov
in
xor
and
dec
enter
mov
cmovo
push
aas
inc
jecxz
gs
lea
mov
lock
int3
or
push
push
mov
bound
mov
sbb
insb
add
xor
inc
stos
add
push
imul
sub
movd
sbb
sbb
adc
lods
leave
jl
add
adc
shlb
lods
inc
inc
push
popa
push
pop
sbbb
pop
sbb
add
push
mov
das
xor
repnz
sbb
add
loop
sahf
push
or
and
jae
adc
fwait
stos
clc
mov
sbb
xor
es
sarb
mov
jp
mov
popa
push
push
push
shll
mov
cmpsl
add
lock
add
xchg
sub
in
lea
lds
add
lcall
jg
incl
dec
lret
fidivrs
xor
ret
or
in
loope
jp
jmp
inc
cmp
enter
push
pop
add
mov
hlt
jne
hlt
inc
rcl
lcall
in
jo
fsubl
test
repnz
roll
push
adc
or
or
test
inc
aaa
test
ret
push
dec
add
sub
jle
les
cs
test
fwait
loopne
imul
or
adc
outsb
lods
dec
rclb
adc
sub
push
push
nop
lret
es
dec
xorl
sbb
sbb
push
clc
cli
mov
jg
jmp
mov
push
insb
mov
sbb
adc
jp
divb
stc
lretw
mov
test
xchg
add
push
xchg
adc
std
sub
jbe
mov
cmp
popa
inc
jmp
pop
jne
fildl
push
add
sbb
icebp
inc
dec
add
mov
es
jp
mov
fwait
fwait
or
gs
pop
mov
xacquire
frstor
mov
shrb
mov
pusha
adc
scas
xchg
mov
out
push
daa
daa
sbb
arpl
scas
sub
js
cmp
bound
and
xor
xchg
mov
sbb
push
mov
mov
adc
push
repnz
or
pop
pop
pop
xchg
add
or
add
in
add
ja
xchg
lcall
scas
xor
pop
push
adc
add
cmp
push
ljmp
inc
or
push
adc
arpl
fwait
cs
std
mov
test
jg
mov
mov
add
mov
jae,pn
dec
pop
aam
add
mov
add
movsl
nop
add
xor
inc
add
add
mov
sub
push
mov
jg
adc
add
lods
xchg
fimuls
push
add
stos
fcoms
ljmp
dec
lods
sbb
les
ret
adc
cmp
xchg
fiaddl
jmp
dec
or
adc
mov
fsubl
cli
cmp
incb
mov
mov
mov
das
push
std
std
out
xor
adc
sbb
adc
xorl
lods
pop
add
inc
xor
setle
call
mov
sahf
jp
notl
ret
fisttpll
test
mov
add
jnp
hlt
adc
lods
add
fs
push
or
fcoml
enter
sub
ret
mov
mov
mov
inc
push
inc
fsubr
mov
jle
fwait
and
nop
cmp
xor
fadds
or
int3
pop
rcl
add
xor
out
mov
xor
lret
push
ret
clc
ss
push
mov
lock
ret
sbb
inc
jo
dec
pop
inc
fisubrs
jge
test
call
and
into
pop
add
stos
mov
push
pusha
fs
call
push
mov
pop
hlt
outsl
mov
xchg
outsb
push
andb
js
add
or
push
inc
and
fsubr
pusha
inc
adc
cld
fs
es
int3
clc
mov
inc
inc
push
xchg
xchg
and
adc
mov
sub
xorb
xchg
or
cwtl
lea
lret
lcall
or
cmp
icebp
inc
or
mov
mov
shrl
add
jmp
mov
adc
or
popa
icebp
and
cmpb
sarb
jle
xchg
xor
jne
or
sbb
fimuls
jae
in
mov
lcall
push
inc
incb
or
fisubs
lock
add
inc
cli
lds
lods
leave
xchg
pop
inc
xor
faddp
pop
cmp
and
clc
nop
mulb
sub
jle
test
and
in
sbb
call
xchg
mov
sub
lods
xchg
jns
insl
add
or
mov
in
push
cli
push
arpl
mov
ja
adc
mov
mov
jmp
addl
into
mov
outsb
fmull
dec
mov
stos
push
push
or
orb
add
jnp
pop
xchg
test
in
div
test
inc
rolb
aaa
in
adc
xchg
int3
mov
push
pop
push
out
sbb
shlb
pop
xor
insl
xlat
push
ficomps
pop
mov
dec
add
lea
or
orb
push
inc
out
sbb
lock
lods
js
nop
push
add
and
add
sbb
sbb
shl
jnp
xchg
jo
xor
mov
push
push
dec
mov
lea
mov
lods
jg
jle
push
rorb
loopne
sub
roll
and
decb
les
add
mov
add
xor
hlt
cwtl
dec
cmp
or
sti
sub
enter
in
pop
fldcw
fsubr
or
push
cmp
test
dec
mov
gs
mov
data16
pop
ljmp
mov
mov
mov
and
mov
dec
ss
testb
inc
movsb
cltd
inc
outsl
mov
and
mov
cmp
mov
imul
xor
or
xchg
pop
rorl
pop
xor
sub
sbb
sbb
call
hlt
test
jg
sub
sbb
push
or
or
mov
cmp
pusha
jnp
cmp
enter
sub
push
cmp
sub
ja
bnd
push
or
mov
lock
outsb
xor
sti
jge
dec
mov
subl
aaa
insb
xchg
lret
ret
ljmp
jge
ret
ss
sub
dec
mov
nop
cmp
and
dec
call
push
and
pop
aam
or
pop
pop
push
jp
adcb
mov
mov
mov
pop
sbb
fdivl
add
subb
lcall
mov
push
xor
xor
cmp
test
fcmovu
clc
ljmp
ror
inc
mov
les
xchg
or
mov
mov
mov
add
je
lret
movsb
out
push
inc
or
scas
rcll
aas
mov
push
cld
int3
add
sub
xchg
pop
mov
dec
sbb
xor
add
or
mov
outsl
aam
and
mov
push
push
add
ss
mov
mov
cmpsl
jne
sub
jmp
fsub
jmp
add
clc
push
xchg
dec
xchg
push
push
pop
and
mov
mov
mov
lahf
push
push
push
in
nop
fisubrs
stc
incl
adc
push
test
push
add
inc
xchg
inc
gs
jmp
test
scas
scas
or
sub
pop
add
lods
adc
or
lret
leave
dec
dec
jmp
cwtl
mov
add
add
ljmp
push
add
mov
push
pop
or
inc
push
pushf
add
je
in
and
push
add
hlt
jo
and
add
dec
enter
or
pop
call
fsubr
sub
lea
dec
xchg
repz
jp
xor
idiv
dec
clc
or
clc
mov
insl
dec
rcrl
mov
fisttpll
xchg
mov
lea
out
mov
xchg
or
fnstcw
sti
out
testb
lea
xchg
out
cmp
mov
xor
je
movb
sbb
mov
repnz
and
aam
fdivrs
mov
clc
push
cmpsb
dec
ds
outsb
mov
pusha
add
pusha
stos
pop
sub
hlt
ret
cwtl
ror
xor
inc
loope
pop
jbe
test
test
lcall
insb
icebp
jg
imul
lret
mov
orb
adcl
nop
mov
adc
jno
xadd
test
nop
cmc
sbb
stos
or
mov
push
adc
fsubr
clc
mov
cmp
in
push
sub
add
rcrl
movsb
ret
push
mov
ret
add
mov
bound
rorl
or
test
hlt
sub
sar
in
out
pop
call
adc
adc
mov
and
icebp
inc
mov
xor
xchg
push
test
add
pop
call
cli
inc
mov
insb
xor
jae
cmp
or
fnsave
fisubl
adc
pop
xchg
lods
jg
fcomps
call
adc
and
xor
push
lcall
nop
add
and
call
push
mov
xchg
mov
inc
daa
enter
nop
inc
mov
mov
fwait
add
data16
loope
jl
xchg
in
add
ljmp
jbe
mov
bnd
mov
add
inc
and
push
call
mov
xchg
dec
cmp
xchg
mov
mov
dec
xchg
xchg
add
loop
ret
mov
xor
xor
or
dec
movl
aad
lcall
scas
cs
out
cmp
dec
int3
icebp
fmull
aas
test
push
out
push
jne
add
cmp
dec
or
pushf
call
jle
push
pop
rol
cmp
push
adc
dec
fmull
jg
mov
lock
je
inc
aam
insb
lods
test
xchg
xchg
stos
lods
call
lods
popf
or
mov
cs
insl
sbb
or
and
movsb
inc
arpl
inc
jle
sub
repz
outsb
loop
shr
sub
pop
inc
cli
mov
shlb
inc
jl
dec
or
add
call
rcl
xchg
sbbb
and
addl
out
addr16
jb
lock
xchg
push
into
mov
lahf
cmpsb
pop
mov
jo
sbb
pop
lcall
push
cmp
mov
cwtl
es
test
je
inc
fdivr
sbb
call
decb
add
lock
subb
or
pop
mov
lret
or
enter
ss
push
subb
out
stc
xor
adc
fs
jl
dec
das
mov
push
pop
fnsave
xchg
jo
and
call
sub
pop
add
inc
test
xchg
pushf
pop
rorb
xchg
clc
and
and
sub
ljmp
rcr
xchg
testb
mov
movsb
lret
mov
rorb
dec
push
mov
adc
xchg
jp
pusha
sbb
int3
mov
push
push
loopne
jo
pushf
adc
pushfw
mov
adc
add
cwtl
jle
test
lock
std
mov
jo
stos
rolb
and
jmp
lock
add
cs
mov
jne
in
test
and
test
or
shll
stc
cli
push
test
out
je
xor
pop
adc
inc
or
or
lcall
mov
xor
out
mov
pop
push
push
aaa
ret
jg
jnp
jl
sub
xchg
push
mov
call
jo
jne
loop
push
xor
adc
xor
jne
xor
idivl
jne
xor
dec
bnd
add
int3
push
aam
adc
push
add
mov
push
test
cli
mov
and
or
pusha
xchg
movsb
pop
mov
loop
clc
int
sub
sub
lea
push
add
jp
push
adc
pop
xor
mov
fdivr
pushf
ja
test
jle
or
xlat
les
xor
add
mov
sub
in
movsb
adc
sbb
pop
sbb
inc
push
movsb
mov
dec
loope
popa
sahf
adc
sub
mov
cmp
sarb
cmc
xor
hlt
mov
in
mov
mov
gs
clc
xchg
add
mov
out
jmp
jmp
leave
or
push
inc
sbb
mov
mov
nop
adc
and
push
stos
add
test
inc
jo
orl
lcall
cmp
and
adc
jle
xlat
testb
pop
je
mov
xor
mov
add
add
ss
push
into
lock
sub
test
shlb
pop
dec
jb
pop
aaa
les
jmp
frstor
mov
xchg
int3
rcr
push
push
in
std
adc
add
mov
sbb
cwtl
sub
or
lods
movsl
inc
mov
shl
ret
into
add
or
roll
mov
fwait
jg
in
mov
inc
pop
test
and
call
inc
pop
fidivrl
inc
pop
lds
mov
mov
lret
loope
call
int3
orl
add
mov
pop
insb
xlat
lea
xchg
push
inc
sub
fmuls
nop
fldl
in
pop
mov
sbb
xor
push
cld
sbb
aas
shl
push
push
push
push
push
mov
jmp
pop
inc
xchg
xchg
push
dec
xchg
xor
push
test
mov
mov
cwtl
insl
fmulp
adc
xor
dec
adc
mov
pop
fcoml
addb
xor
out
or
cld
push
pusha
and
mov
or
mov
jg
sbb
fisubrl
mov
mov
push
dec
lods
lods
cli
xor
inc
inc
or
ficoml
add
je
pop
cld
cmp
icebp
push
dec
jp
xchg
push
test
icebp
adc
add
pop
push
std
mov
push
outsl
adc
dec
cmp
mov
jmp
or
inc
mov
fdivr
mov
int3
xor
mov
jb
push
xchg
ds
inc
add
mov
add
inc
push
sbb
mov
sbb
cmpsb
in
inc
gs
movl
in
add
mov
and
dec
sub
insl
cmp
stos
je
fists
cmp
cmp
inc
cmp
push
hlt
push
push
ss
mov
xor
dec
push
adc
mov
mov
mov
inc
negb
les
inc
xor
je
ret
or
lods
rolb
and
cld
pop
out
xor
lret
jg
xor
cld
in
loope
add
or
ss
xorb
xor
mov
in
pusha
xor
mov
push
fldl
and
push
sbb
call
mov
mov
xor
pop
jg
pop
es
stc
call
pop
gs
and
xor
jb
pop
lods
rolb
sbb
test
mov
ds
sub
mov
je
xchg
add
mov
aad
sti
mov
mov
arpl
sbb
lods
shrb
inc
lret
dec
js
xor
testl
jo
push
clc
push
std
ffreep
add
insb
mov
inc
ja
dec
testl
loopne
cmp
pop
and
adc
adc
aad
in
cs
push
add
inc
or
ret
push
push
stc
xor
xchg
add
push
fdivrl
out
pop
or
mov
or
add
pop
nop
fcmovnbe
shlb
jl
lcall
adc
xchg
mov
gs
add
adc
call
or
jge
mov
and
aad
push
dec
inc
lock
dec
js
add
movb
jo
push
mov
pushl
dec
jle
push
mov
pop
enter
or
subl
pop
add
pop
and
mov
jg
insb
je
push
fwait
int3
clc
les
aaa
or
rorb
push
and
jne
leave
outsb
xchg
xlat
mov
sar
cmp
cmp
idiv
shll
cli
adc
arpl
inc
xchg
mov
xchg
and
cmp
push
jp
push
out
add
xchg
cmpsb
rcrb
jmp
fcompl
jb
test
mov
rol
mov
loopne
decl
push
in
jo
out
nop
nop
xchg
mov
popf
ret
pop
andl
sar
mov
mov
cld
pop
call
push
xor
faddl
xor
pop
cmp
aas
outsb
sub
dec
pop
and
sti
cmp
sbb
loopne
insb
pop
dec
mov
and
mov
adc
xlat
mov
xor
lock
test
clc
data16
and
xor
rclb
icebp
add
pop
iret
es
js
add
inc
loop
stc
call
ss
push
mov
sub
pop
shlb
push
sbb
ss
or
mov
adcb
or
inc
ds
xor
stos
cmp
lock
xchg
cld
call
sbb
in
xchg
movl
je
lods
inc
cmp
jnp
insb
aam
inc
and
loopne
add
or
push
fildl
xchg
mov
add
loope
ljmp
mov
sub
scas
sub
aam
pop
lcall
mov
adc
test
loope
cwtl
mov
inc
sbb
adcb
call
pop
inc
jb
cwtl
cmp
outsl
inc
cld
xchg
mov
pushf
adc
dec
adc
jae
cmp
adc
push
adc
pop
in
jge
mov
pop
es
ds
and
inc
dec
or
push
sub
push
mov
je
or
popa
inc
mov
stos
sub
xor
add
inc
clc
sti
cmp
hlt
pop
and
mov
adc
data16
icebp
testb
stc
cli
sub
hlt
sbb
out
fsubs
in
inc
mov
dec
adc
adc
mov
sbb
rcr
jb
xor
xor
loope
add
inc
xor
fldt
loope
inc
mov
add
sub
int3
and
inc
loope
rorb
or
outsl
cmpsb
add
lcall
pusha
sbb
inc
loopne
xor
icebp
test
push
rcrb
fcmovne
adc
inc
pop
jne
inc
add
movb
test
clc
insl
pop
jno
test
push
rolb
sbb
and
cmp
cwtl
and
push
nop
pushf
pop
cmp
xor
jg
orb
leave
jns
xor
jle
push
sub
dec
pusha
xor
pop
aam
enter
jae
das
mov
subb
ficompl
jmp
movsb
jo
mov
and
jmp
adc
add
mov
aaa
fmul
js
adc
inc
xor
pop
push
aam
aas
js
pop
sub
inc
cmpsl
dec
fs
and
dec
repnz
add
push
hlt
and
fstl
pop
imul
jecxz
rclb
adc
sub
mov
jb
push
jne
mov
inc
dec
mov
rolb
push
cli
sbb
cmp
xchg
jle
loopne
hlt
mov
adc
dec
xchg
or
hlt
inc
add
pop
rorb
push
std
test
mov
clc
xchg
rol
adc
and
mov
repnz
sbb
aad
mov
sbb
inc
test
jp
fisubrl
ret
push
or
sub
inc
cld
outsl
push
jb
adc
mov
test
push
mov
incb
cltd
inc
cli
push
in
push
fnstcw
pop
in
movsb
cmpsl
pop
mov
lods
sbb
cli
cli
pop
notb
and
ljmp
adcl
xor
aam
cmp
push
inc
cld
les
mov
sahf
xchg
mov
rcrb
jl
mov
stc
mov
push
push
cmp
add
add
mov
dec
flds
mov
cmp
mov
mov
sub
add
data16
push
out
add
xchg
xor
ljmp
jg
inc
js
add
push
into
push
mov
mov
adc
nop
js
ret
pop
and
push
and
inc
out
mov
or
imul
testl
stos
and
pop
inc
cmp
jle
pop
lea
dec
nop
cmp
int
aam
andl
test
or
divb
or
sub
ret
adcb
rorb
or
fwait
dec
sbb
xor
push
pinsrw
lret
adc
incl
in
and
add
in
ds
out
jo
in
inc
add
mov
ret
das
cs
fsubs
inc
lock
inc
pop
add
inc
push
push
mov
mov
test
testl
push
push
and
pop
aas
sbb
je
insb
test
mov
aam
loope
loop
mov
out
dec
dec
pop
in
jmp
mov
and
xor
js
sub
jb
inc
incb
pop
pusha
mov
ljmp
pusha
out
push
adc
fidivs
stos
push
mov
enter
shlb
push
jbe
je
fmuls
dec
sub
mul
test
cmp
cmpsl
mulb
or
dec
rcl
loopne
jne
jmp
adc
pop
or
test
mov
mov
outsl
and
loop
fdivrs
add
sub
xchg
test
sbb
cld
add
mov
add
pop
outsb
ret
lcall
push
cmp
adc
pop
inc
cmc
sbb
push
inc
clc
or
sub
loop
mov
fcoms
addl
and
mov
push
cmp
insb
rorl
inc
std
sub
dec
push
lret
je
push
pusha
adc
adc
dec
sbb
adc
cmc
jo
test
sbb
push
mov
mov
push
add
lea
or
fs
mov
add
xchg
mov
dec
aam
mov
fldt
mov
ja
mov
call
imul
or
jne
sub
out
andb
mov
or
mov
test
pop
mov
movsl
cmc
orl
shlb
std
inc
je
call
test
inc
add
mov
push
cmp
stc
adc
outsb
xor
decl
mov
sub
out
stc
sar
push
push
mov
lods
sub
push
loop
mov
xchg
lock
and
or
movsb
lea
mov
sbb
adc
sub
fmul
mov
xor
inc
je
inc
in
add
shlb
fwait
rcrb
adc
inc
int3
or
xchg
ret
loopne
clc
and
cmp
push
lods
xor
rolb
xorl
mov
std
push
imul
inc
xchg
lea
or
jecxz
xor
xchg
push
inc
insb
adc
sub
cs
jle
ds
mov
stc
pop
sub
roll
add
sbb
mov
inc
mov
mov
add
push
mov
dec
imul
and
test
cmc
add
test
or
push
adcl
lock
lods
dec
adc
dec
hlt
test
sub
mov
cmp
std
out
cmp
test
cmpsb
test
xchg
imul
mov
int
popa
es
mov
pushl
test
jp
dec
add
fwait
cli
push
mov
mov
scas
fistl
xlat
inc
ss
jg
test
xchg
jl
add
rclb
push
mov
lret
pushf
push
jecxz
or
add
fimull
jmp
cmp
das
lock
rorb
pop
scas
test
ds
int3
aas
mov
pop
shlb
test
mov
pop
movsb
dec
and
adc
nop
push
and
mov
sbb
or
outsb
xchg
pop
andl
aad
add
add
ljmp
dec
add
mov
push
sub
xor
call
push
movsb
adcl
aam
jl
scas
sbb
pop
push
sub
push
sti
movl
in
push
pop
push
inc
cld
es
das
lret
pop
sbb
pop
fdivrp
and
jne
aas
mov
mov
push
mov
push
push
shrb
notl
add
scas
add
leave
pop
pop
mov
mov
ret
pop
mov
mov
mov
pop
and
cld
pop
int3
jb
lcall
clc
mov
sar
loope
shlb
addps
movsb
mov
push
in
mov
push
cmp
fwait
mov
loopne
cmp
cmp
jmp
mov
mov
stos
stos
jge
clc
xor
insb
mov
mov
sarb
mov
xchg
test
sub
test
pusha
xor
cmpsb
loopne
pop
popf
mov
or
push
cld
test
sbb
mov
cltd
movsb
addl
out
push
test
xor
mov
add
loopne
stos
push
mov
cmp
out
xor
add
adc
popf
dec
xor
push
xor
mov
add
icebp
dec
push
adc
mov
imul
iret
adc
test
jg
loope
scas
dec
push
cmp
insl
jae
mov
mov
push
stos
or
add
insb
mov
jae
pop
and
ljmp
rolb
adc
add
dec
cltd
sub
jne
or
aad
bound
jne
adc
movsb
icebp
xchg
dec
jo
or
aam
pop
nop
ja
ret
jb
in
pusha
data16
or
add
pusha
push
test
ret
mov
sub
sbb
sbb
add
lret
mov
ret
mov
outsb
xor
add
mov
cs
inc
add
shlb
leave
mov
mov
mov
inc
or
push
push
jmp
js
cmp
insb
inc
sbb
add
xor
sbb
dec
test
les
mov
punpckhbw
push
xor
adc
cmp
jbe
or
cmp
lea
test
xchg
fnsave
test
adc
or
inc
call
cli
adc
insb
cmp
icebp
imul
cmp
mov
xor
pop
ds
or
roll
cmp
cmp
aad
adc
lret
jle
aas
cli
test
lcall
add
shlb
cmpsl
cmpsb
mov
fs
mov
scas
adc
mov
sbb
jne
sub
add
fmull
cld
adc
rorb
stos
jb
adcl
inc
dec
lcall
jmp
xchg
jne
inc
mov
data16
mov
call
push
xchg
cmc
loope
inc
dec
cmp
gs
jno
adc
adc
xchg
adc
mov
and
fidivrs
sub
pusha
sbb
mov
in
sub
ret
mov
ljmp
jle
push
dec
aam
push
jne
dec
cmp
add
cmp
popf
sbb
cmp
cld
rclb
ret
pop
cmp
inc
cld
fnstenv
add
addb
sub
clc
mov
adc
lods
loopne
ficoms
mov
or
shlb
adc
cmp
xor
rol
mov
stc
test
hlt
int3
mov
shr
sub
inc
enter
xchg
hlt
pop
jne
mov
push
jmp
std
jno
sahf
add
sbb
push
mov
mov
movsb
nop
dec
outsl
cmc
adc
cmpsb
inc
data16
sub
loopne
push
cmp
mov
mov
ja
or
xchg
cmp
sbb
insl
inc
mov
insb
xchg
adc
sbb
cli
xchg
jno
js
hlt
mov
outsl
push
test
push
pop
and
outsb
call
mov
add
test
in
xchg
add
fmuls
or
lods
bound
fmul
sub
mov
js
xor
push
add
sbb
mov
jecxz
or
inc
pop
add
das
test
clc
mov
je
adc
add
sub
test
hlt
mov
adc
and
pop
mov
add
aas
inc
adc
add
adcl
call
cmc
jae
mov
mov
loope
faddl
jmp
je
mov
stos
push
data16
mov
mov
or
add
lea
outsb
lds
pop
rorl
aas
orb
gs
fisubrs
fs
push
mov
add
int3
jno
xchg
add
clc
hlt
cmp
cmp
and
mov
push
pop
cmpsl
fdivp
lods
shlb
push
clc
push
xchg
nop
stos
pop
push
bound
scas
mov
fs
jl
sbb
sahf
add
ss
mov
bound
or
adc
cmp
lea
les
xchg
int3
cmp
sub
sar
repnz
or
mov
mov
sahf
pop
popa
cld
jg
lcall
sbb
insl
mov
add
stos
cmpsl
push
cmp
aaa
std
push
pop
mov
outsl
dec
rolb
movsb
mov
adc
jmp
pop
cld
push
or
fsubrl
clc
mov
nop
or
fiadds
in
add
hlt
jmp
js
lret
sarb
push
lret
hlt
jbe
add
movl
test
pop
shlb
test
inc
mov
das
dec
xlat
adc
fsubs
mov
pop
xor
pop
andb
mov
test
pop
fmuls
int3
or
mov
mov
or
pop
movb
xor
enter
fisttpl
or
je
filds
inc
sub
mov
call
fildll
rol
mov
add
adc
mov
outsb
imul
xchg
jle
icebp
jg
enter
cmp
jge
jge
or
sub
ret
or
pop
sar
les
jmp
inc
in
or
movaps
clc
scas
lock
movsl
cmp
pop
cmc
mov
mov
int3
je
sbb
nop
push
push
push
xchg
fistpll
xchg
cmpsl
sub
adc
sbb
dec
insb
or
lcall
fmul
cmp
lods
call
mov
jle
xor
loop
push
ret
cld
push
cli
inc
cmp
add
js
fwait
clc
test
das
subb
push
es
mov
xor
mov
pushl
jmp
fmull
dec
adc
iret
push
mov
into
or
mov
pop
lock
inc
and
shr
add
inc
sbb
jge
push
adc
inc
inc
outsl
sub
sarb
add
fcos
and
mov
xchg
pop
mov
jne,pn
inc
xor
pop
cmp
cmp
add
in
push
stos
lcall
aam
adc
adc
and
mov
add
cli
cmpsb
adc
std
mov
shll
mov
data16
jne
out
mov
std
scas
pop
je
hlt
sbb
push
inc
pop
add
fidivl
ret
sub
test
sub
addr16
jl
push
or
jns
lret
inc
push
sub
cs
loopne
inc
clc
push
out
or
lcall
xor
dec
inc
setp
inc
jmp
or
mov
mov
and
fnstenv
sub
andb
sbb
jb
or
dec
add
xchg
mov
test
adc
out
orl
push
fnstcw
in
push
es
mov
cmpsl
push
aam
out
bound
stos
adc
fisttpll
mov
cmpsb
arpl
in
and
sarl
lea
and
cmpb
or
into
cld
ror
mov
mov
mov
and
push
jl
rclb
add
add
aas
jmp
adc
icebp
scas
stc
or
xor
icebp
je
jne
in
call
inc
mov
add
psubusb
out
mov
dec
or
inc
push
fiaddl
push
inc
das
and
rorb
js
inc
orl
enter
inc
addr16
dec
adc
cmp
andb
pminub
test
xchg
data16
nop
jb
jnp
mov
pusha
and
subb
or
dec
xchg
push
das
jae
cli
mov
call
inc
test
mov
repz
sti
movb
clc
or
fwait
call
enter
push
lods
xchg
jmp
inc
int3
js
mov
or
mov
fs
mov
sub
cmp
push
fisubrl
test
or
adc
xchg
test
mov
mov
mov
push
sub
inc
ss
push
or
shlb
clc
sub
scas
mov
fcoms
cmp
inc
in
call
or
pop
ficoms
bound
cmpsl
test
movsb
jno
cmp
daa
sub
or
div
xchg
xchg
loopne
shlb
dec
jne
scas
fdiv
xor
loop
add
mov
rcl
adcb
pop
push
add
icebp
adc
pmulhw
sbb
mov
cmp
mov
inc
fcoml
roll
shrb
es
sub
ds
or
shlb
xchg
push
test
push
add
call
jp
lea
idivb
mov
shl
sarb
mov
push
test
punpckhdq
jmp
xor
lret
xchg
xor
jl
mov
pop
stc
sahf
xchg
rcl
inc
add
inc
adc
sbb
mov
or
dec
faddl
fistpl
movsb
sarb
adcl
add
adc
stos
pop
xchg
out
jmp
adc
in
dec
rclb
adc
or
xchg
jmp
arpl
mov
push
and
cmp
and
je
outsl
adc
push
loop
or
xor
stos
dec
cli
rcrl
add
rcrb
push
aam
pushf
adc
pushf
add
faddp
adc
mov
mov
lret
adc
outsb
jbe
cld
hlt
add
cmp
add
shrb
inc
paddw
sub
adc
jmp
test
add
inc
call
jb
push
outsb
mov
js
xchg
repz
adc
test
les
sbb
call
nop
sbb
inc
mov
xor
enter
ret
shl
stos
adc
xchg
icebp
cmp
imul
inc
jp
adc
push
dec
and
add
add
xchg
push
adc
test
rorb
inc
xor
clc
push
xor
pusha
lcall
call
dec
jns
leave
faddl
fidivrs
out
gs
push
dec
lret
inc
sub
sub
pop
pop
pop
lcall
mov
pop
jb
mov
mov
loopne
xchg
sub
int3
out
bound
dec
mov
or
pop
js
mov
ret
fadds
adcb
sub
orb
data16
push
or
das
lock
sbb
or
movb
jmp
pop
std
add
dec
testb
clc
movsb
test
mov
loopne
lcall
adc
pop
pop
aad
jo
pusha
cli
adc
popa
cltd
test
add
jge
or
mov
ret
jp
js
xor
add
xor
movb
les
test
call
pop
push
xchg
cmp
adc
pop
loopne
mov
cli
push
sbb
mov
call
inc
divb
stc
sbb
mov
jne
inc
loop
jb
jbe
es
cli
mov
mov
cmc
fbstp
add
pop
adc
ret
and
int3
sbb
outsl
xor
inc
or
jge
fcom
mov
mov
sbb
jl
add
and
sahf
mov
ret
cmp
push
xchg
fld
test
push
ja
fwait
mov
imul
aad
rcr
hlt
lret
pop
gs
add
clc
or
pop
and
inc
test
aaa
adc
sub
jno
dec
jne
icebp
lret
add
dec
mov
add
cmp
hlt
sbb
cli
add
mov
nop
mov
push
mov
ret
cmp
mov
adcb
push
xor
lahf
push
adc
push
stc
mov
or
push
mov
sub
dec
lea
int
mov
ficomps
add
dec
adc
ucomiss
subl
enter
rorb
or
cmp
mov
sbb
mov
mov
idiv
or
ss
mov
adc
clc
inc
mov
pop
or
fsubrs
les
add
pop
lods
push
push
int3
fdivs
push
and
call
mov
pushf
ds
mov
jge
enter
jb
add
icebp
dec
sbbb
cmp
mov
xchg
pop
inc
mov
sbb
pop
data16
aam
cli
cld
mov
push
pushf
inc
daa
mov
push
xor
xchg
jp
test
ret
gs
loop
ljmp
fildl
les
cmp
mov
push
add
mov
xchg
lods
inc
in
inc
pop
sbb
adc
mov
push
adc
fidivrl
push
mov
mov
sbb
mov
cmc
xor
in
jl
add
and
add
push
ret
mov
xchg
je
adc
push
inc
iret
add
scas
xor
testb
and
sti
icebp
mov
inc
insl
adc
mov
stos
mov
xor
add
jge
push
add
mov
mov
pop
xor
mov
aas
sarl
jmp
cmp
enter
dec
jp
or
and
lret
push
dec
inc
ret
lock
or
add
shr
loop
sarb
xor
jp
mov
add
jp
mov
mov
sbb
pop
lret
cli
or
adc
js
outsl
and
movsl
and
jmp
ret
test
cmp
xchg
mov
xor
rol
inc
pop
adc
lea
xor
incb
test
js
jbe
cmp
sub
int3
mov
rorb
mov
enter
xor
mov
mov
rcrb
cs
dec
lret
retw
cmp
inc
mov
incb
jl
or
mov
add
das
js
testb
ds
movsb
or
aad
xor
icebp
inc
nop
mov
jle
inc
loop
dec
mov
imul
inc
sub
imul
xor
js
loop
test
dec
scas
push
or
push
mov
mov
cmp
test
in
sbb
push
test
mov
decl
inc
push
mov
push
adc
mov
and
std
push
cs
andl
out
push
outsb
dec
add
mov
cmpsb
inc
adc
stc
cld
lods
and
ret
dec
dec
jle
mov
inc
int3
cli
push
lret
push
aad
loope
inc
cs
add
sbb
add
push
cmp
mov
mov
add
insb
mov
mov
test
cmp
mov
add
incl
push
jne
loopne
mov
xor
cmp
or
ds
or
shlb
iret
inc
mov
and
aaa
sub
sar
xor
dec
pop
int3
push
and
sbb
xchg
ret
xchg
call
psllw
cmc
add
nop
loopne
sbb
les
cmp
pusha
xchg
mov
jmp
add
pusha
lock
cmp
and
int3
lds
jne
loop
imul
push
adc
fnstsw
test
or
lock
push
inc
dec
decl
mov
cld
push
mov
mov
xchg
mov
xor
stc
mov
xchg
push
shlb
pushl
lods
add
add
xor
push
inc
push
add
and
add
cmp
push
cwtl
loopne
popf
hlt
clc
add
sbb
mov
clc
push
push
adc
xor
pop
add
addr16
inc
outsb
scas
and
jbe
in
movsb
push
leave
dec
outsb
addb
pop
sbb
pop
mov
inc
xchg
and
xchg
les
sub
sti
ficoms
pop
mov
test
push
adc
call
cwtl
mov
mov
int3
sarb
push
movsb
ds
dec
das
test
sbb
adc
sbb
call
stos
andl
inc
cmp
jae
push
ret
clc
xor
inc
scas
xchg
loopne
jg
adc
mov
cmp
aad
inc
aaa
pop
and
mov
and
push
xor
movl
test
or
mov
ds
js
and
sbb
or
cmp
fmul
xor
or
sub
icebp
mov
cld
push
shrl
insl
xor
sub
test
inc
lea
xor
idivb
insb
dec
rol
mov
push
add
cli
loopne
pshufw
xchg
imul
out
test
jb
es
test
rclb
jmp
lock
enter
pusha
xchg
mov
sarl
in
sub
adc
std
decl
pop
xchg
ret
aam
mov
adc
loopne
lods
loop
pop
aas
push
mov
add
lock
and
ret
pop
fdivs
aas
addb
loopne
test
sbb
push
cmpsb
popf
enter
mov
xor
pusha
por
push
or
inc
sbb
mov
add
dec
lods
or
cmc
mov
es
cli
aad
add
sbb
arpl
nop
add
in
mov
icebp
and
adc
cli
jmp
movl
sub
decl
cmc
sarb
xlat
pop
loop
xor
push
cmp
insb
imul
data16
insl
sti
inc
mov
mov
xor
shrb
clc
inc
fdivr
inc
dec
and
cmp
insl
inc
leave
mov
dec
jg
fcomip
push
std
and
popa
aam
jmp
mov
popf
push
or
add
mov
jp
adc
mov
push
inc
mov
push
or
loope
pop
jmp
fistpl
sbb
add
loopne
mov
push
not
and
or
loope
xchg
fisubrl
cld
pushf
mov
sub
add
inc
mov
outsb
adc
lcall
sarb
xor
out
fiaddl
adc
and
rclb
dec
jmp
dec
push
repnz
sysexit
dec
adc
rcl
sidtl
scas
lcall
ret
ljmp
out
inc
loopne
pop
jg
stos
jne
mov
cwtl
outsb
fistpll
test
notb
add
or
mov
cmp
jne
pop
insb
gs
xor
ljmp
adc
aad
push
sarl
ret
jno
mov
je
sbb
arpl
mov
sarb
and
pop
fcomip
clc
push
int3
mov
lea
loope
aaa
mov
imul
or
xlat
shrb
lret
mov
subl
jge
or
jecxz
pop
push
dec
or
pushf
sahf
fs
loope
cmpsb
mov
stos
scas
sub
cmp
inc
test
popf
cmp
outsb
ds
lea
cmp
pop
cmc
popf
loopne
inc
test
stos
loop
ds
ret
pop
out
cmp
loop
or
sub
mov
movsl
sbb
sbb
mov
es
dec
rorl
out
sti
mov
or
cwtl
mov
push
mov
call
mov
ds
cmp
dec
std
fwait
or
ret
xlat
js
xchg
fadd
mov
and
mov
sbb
and
xor
sti
adc
fwait
es
cli
int
inc
push
fsubs
dec
loopne
mov
inc
leave
cmp
or
pusha
fcom
xchg
arpl
je
adc
mov
popf
xor
lahf
insl
loopne
pop
call
sub
push
xchg
or
test
fistl
mov
icebp
jg
ja
mov
push
sti
or
xchg
adcl
jmp
ljmp
mov
cmpsb
adc
push
adc
mov
xor
lods
and
jle
cld
scas
add
mov
popa
or
mov
ret
les
mov
orb
sub
fisttpl
xor
inc
add
pop
push
cmpsb
pop
insl
frstor
mov
pop
shufps
inc
mov
adc
add
xor
fs
in
push
scas
rcrl
lret
es
rolb
pop
xor
mov
clc
push
mov
push
out
lcall
test
adc
sbb
push
push
int3
add
ret
push
mov
je
add
lcall
call
lock
inc
pop
mov
pop
dec
insb
or
push
dec
and
adc
and
je
cmp
jp
mov
pushf
dec
divb
stos
ja
hlt
fidivrl
add
mov
std
mov
mov
mov
cs
es
or
cld
xor
notl
les
xchg
dec
inc
push
push
add
sub
sbb
shll
out
lcall
pop
shlb
cmpsb
call
cmpsb
pop
aam
jne
cmp
inc
push
jmp
xor
mov
and
cwtl
call
ds
inc
test
cmp
adc
mov
xchg
lret
lock
das
xchg
scas
mov
inc
and
lret
push
jmp
hlt
pop
add
ljmp
dec
std
push
sub
push
mov
and
mov
cld
cs
mov
incl
add
xor
cwtl
pusha
add
add
ds
or
out
xor
push
scas
or
fs
clc
pop
jge
push
aas
movsb
sub
in
lcall
pop
xor
and
xchg
insb
test
or
jle
sarb
xor
sub
add
test
or
or
negb
inc
pop
and
cmp
dec
xor
out
and
adc
lock
add
jmp
push
dec
leave
ljmp
mov
adc
mov
sbb
loopne
lock
stos
adc
jno
or
and
cmp
adc
dec
cmpsb
xchg
mov
loopne
mov
jns
and
decl
loopne
popl
mov
fs
jle
loopne
in
push
or
fucomip
shr
test
xor
xor
lcall
and
inc
je
fldt
sub
es
xlat
add
add
push
inc
clc
and
cmc
push
testb
js
dec
inc
in
push
jb
rcrb
add
mov
xchg
or
and
xor
addl
xchg
mov
inc
xchg
aas
xchg
mov
testb
mov
je
std
ljmp
or
and
xchg
fiaddl
mov
cmpb
pop
test
jmp
add
or
inc
mov
ret
les
push
pop
stos
cmp
or
mov
movsb
add
loopne
dec
lods
imul
insl
rcll
sahf
cmp
adc
add
push
xor
test
adc
mov
adc
adc
mov
pop
clc
lret
add
fdivr
xchg
add
mov
push
and
test
and
insl
inc
loope
popa
cld
mov
fists
add
jge
fidivrs
ret
push
mov
mov
pop
sbb
push
js
or
inc
jge
dec
mov
dec
pusha
push
movsb
mov
xor
jae
and
orb
push
cmp
clc
jns
shlb
adc
imul
xchg
inc
std
add
loopne
das
insb
ss
aaa
ret
mov
test
pusha
sub
in
ds
xor
push
mov
cmpsl
loop
mov
push
push
in
je
addl
ss
ret
jo
imul
fisubrl
fisttps
adc
xchg
movsb
xor
push
sbb
or
jp
js
or
ds
ror
repnz
push
cmp
shlb
adc
adcb
and
xor
cmp
push
push
push
aam
pop
movsl
push
or
fs
ds
aaa
xchg
cld
push
out
jae
aam
or
pop
popa
test
dec
fdivrl
adc
push
xor
lods
inc
adc
icebp
outsl
mov
dec
test
aam
mov
repz
lds
call
or
inc
dec
inc
test
cmp
xchg
jbe
pop
cli
popf
testb
lock
inc
sar
mov
popf
notb
add
push
adc
add
push
adc
mov
std
mov
mov
dec
jge
pop
in
aas
adc
loop
scas
roll
movsb
xchg
jle
jl
icebp
inc
aas
cmp
dec
dec
movsb
nop
or
clc
scas
xor
cli
or
icebp
ret
imul
add
jg
jecxz
sub
mov
icebp
sbb
adc
mov
push
pop
rclb
sub
into
jl
adc
xor
cmpsb
rorl
inc
nop
pusha
fsubrs
data16
pop
fildl
test
or
inc
push
std
nop
mov
fiaddl
mov
sub
xor
adc
das
jno
fcoml
les
or
push
xchg
roll
adc
cltd
mov
mov
mov
jne
ret
mov
xor
inc
faddl
adc
adc
push
add
xor
fdiv
push
les
mov
add
mov
ds
pop
xor
and
add
fxam
add
add
xor
ja
pop
repnz
jne
dec
lcall
add
cwtl
fisttps
les
dec
jmp
pop
ja
pushf
dec
push
adc
cmp
mov
jnp
or
ljmp
movb
xchg
outsb
push
andl
cmp
pop
dec
mov
sub
cmp
xor
popa
enter
leave
into
icebp
and
mov
adc
cwtl
and
mov
fisttps
add
push
xor
mov
imul
movsl
adc
sbb
push
pushf
hlt
je
push
jmp
inc
pop
js
insb
test
xor
lods
out
into
bound
mov
in
pop
pop
jo
es
das
outsl
das
dec
sub
jb
inc
cld
mov
cli
aad
inc
gs
add
mov
xchg
mov
adc
pop
addb
lret
hlt
cld
inc
push
sub
jne
xor
push
hlt
dec
ret
dec
adc
mov
push
inc
mov
mov
push
hlt
push
popl
xchg
loopne
add
adc
pop
aad
jle
mov
pop
leave
insb
cmp
adc
pusha
shrb
mov
add
ficoms
ljmp
hlt
add
lahf
sbb
mov
mov
push
xor
jmp
sbb
mov
outsl
lds
call
xlat
push
adc
shrb
push
fildll
push
xor
loopne
mov
cmp
or
lods
es
pop
and
mov
hlt
in
dec
fwait
inc
jmp
add
push
mov
mov
repz
test
adc
cmp
popf
inc
push
push
loop
and
mov
add
test
push
stos
push
add
sub
dec
xchg
inc
std
sub
insl
clc
xchg
test
push
je
adc
mov
add
fdivs
incl
mov
and
and
jmp
fwait
mov
adc
subb
push
or
sbb
dec
add
or
sub
push
aas
leave
rorb
and
pop
mov
jne
or
pop
inc
int3
shrb
push
add
mov
sbb
and
inc
shrb
sarb
inc
les
arpl
pop
insl
mov
nop
mov
add
loopne
pop
jae
mov
xor
sbb
js
test
ja
or
and
push
pop
sbb
cmp
xchg
pop
clc
and
ja
or
js
push
shufps
je
xchg
push
push
fiaddl
pop
dec
inc
push
mov
hlt
loop
aad
mov
and
rclb
outsb
stos
pusha
inc
pop
mov
or
nop
mov
jae
push
or
enter
jne
sar
mov
mov
push
mov
scas
lods
lahf
lods
rcrl
cmovl
stos
push
pushf
mov
push
mov
inc
cmp
mov
adc
or
mov
sub
cs
mov
jp
mov
add
fdivs
inc
push
orl
add
loopne
and
into
pop
andb
dec
pusha
and
and
and
or
add
mov
push
mov
adc
push
pop
inc
lods
xchg
add
pop
shlb
inc
push
std
stc
call
loope
jb
sahf
and
mov
jmp
push
call
mov
inc
inc
jne
fcmovne
cli
xor
out
xchg
fsubs
loopne
cmpsl
dec
jne
or
push
sahf
rcrb
pop
pushf
push
inc
call
adc
push
or
aam
inc
rclb
mov
fisubrl
xchg
enter
mov
callw
popa
shlb
mov
adc
es
sub
jmp
call
mov
insl
pop
mov
insb
call
aam
mov
lahf
xor
inc
clc
add
repnz
sarl
and
mov
test
inc
call
sbb
pop
inc
mov
and
clc
mov
test
lock
out
lcall
sarb
lock
pop
adc
and
in
push
add
stos
fisubl
mov
mov
push
imul
shrb
mov
pop
adc
stos
pop
clc
dec
push
or
hlt
pusha
inc
stos
or
sub
inc
push
xor
lahf
push
ret
loop
jmp
enter
rolb
call
sbb
les
cli
add
inc
mov
add
xor
sub
adc
sbb
cmpsb
orl
lock
dec
pop
jp
pusha
je
lea
mov
shrb
sbb
mov
mov
push
sbb
sub
mov
push
clc
or
jb
mov
adc
outsl
mov
mov
and
test
mov
xchg
sub
xor
out
fs
gs
adc
outsl
jo
mov
push
sub
sub
es
data16
sarl
adc
jp
into
addl
add
mov
push
in
and
sbb
repz
add
lods
xchg
and
inc
add
cmp
mov
mov
lock
and
or
add
sarb
or
inc
lret
loopne
add
lea
call
cmp
xor
inc
mov
pop
fdivrl
test
test
adc
shrd
inc
and
add
or
ljmp
adc
cmp
sub
lock
mov
dec
add
dec
loop
mov
test
add
add
sbb
repz
pop
mov
insl
jge
inc
out
pop
insl
and
xor
xlat
push
out
mov
aam
fcom
jl
and
push
mov
mov
call
addr16
inc
fwait
xchg
sbb
xor
push
add
imul
mov
pop
pop
call
xor
push
enter
data16
enter
sub
nop
xor
pop
xchg
mov
popf
outsb
or
outsl
pop
add
and
add
add
icebp
and
add
xor
mov
ljmp
add
sbb
cmc
es
sar
jge
call
rolb
push
add
dec
rcrb
xchg
and
icebp
enter
cmpsl
mov
xchg
fidivrl
jmp
xor
jg
inc
sahf
mov
mov
lods
mov
outsl
sub
std
dec
push
inc
sbb
jl
jbe
in
pop
mov
test
push
or
out
cli
jae
lea
mov
mov
pop
mov
ds
sub
cmpsl
adc
fsubr
ljmp
adc
out
mov
or
in
mov
jmp
lock
loopne
int3
jnp
jmp
mov
repz
and
outsl
add
dec
mov
lea
in
cmp
mov
sub
push
std
xor
sbb
adc
push
rolb
and
push
or
jp
mov
jb
aas
jl
mov
inc
dec
mov
pushf
adc
pop
pop
orb
gs
out
fiaddl
lret
shlb
and
dec
std
adc
add
cmp
leave
cmp
fildll
test
pop
adc
cmp
push
mov
inc
in
inc
ds
mov
xchg
add
add
call
cs
push
arpl
push
mov
inc
push
mov
ljmp
push
pusha
jne
add
mov
lds
pusha
ret
push
mov
scas
or
pop
inc
cli
xchg
je
andl
add
ljmp
dec
jmp
push
aas
jecxz
adc
je
pop
dec
or
call
adc
push
test
dec
jmp
jo
add
fwait
or
dec
loopne
fdivs
dec
fs
sub
mov
jecxz
push
std
push
in
fisubrs
push
xor
dec
sahf
inc
and
lcall
mov
loopne
dec
lea
push
aas
add
push
je
test
lock
hlt
bnd
pushf
xor
aaa
jl
pop
dec
xlat
inc
inc
push
adc
push
and
add
add
ret
pop
mov
add
shlb
cld
mov
xchg
bound
push
cmp
nop
inc
push
fsubrl
jne
sbb
aaa
xlat
fstps
fstp
add
les
jmp
les
fcoms
mov
hlt
inc
ja
or
mov
push
adc
push
xchg
fildll
or
mov
test
push
or
scas
inc
shrb
enter
stos
mov
rolb
mov
shlb
jne
and
loope
loop
pop
imul
nop
cld
add
mov
fnsave
jbe
call
pop
cmp
pusha
loope
push
sbb
adc
js
mov
loopne
mov
mov
push
pop
and
aad
sbb
cld
leave
dec
jne
jl
jae
cmp
adc
aas
or
sub
in
test
mov
adc
das
adc
or
adc
or
pop
fwait
push
cmp
gs
lock
push
mov
pop
icebp
pop
lods
cld
dec
movd
das
repnz
movsb
mov
pusha
lock
push
sub
mov
loop
jg
pop
dec
stos
nop
xor
adc
adc
incl
mov
lcall
in
outsb
sub
pop
iret
insb
add
jp
jp
jb
push
mov
mov
sti
mov
in
mov
jbe
test
mov
lods
icebp
cmpl
in
jnp
mov
insb
pop
mov
cmp
pop
cli
lock
mov
push
andl
add
movsl
inc
cmp
es
mov
imul
push
jmp
test
rorb
xchg
je
cmp
push
sar
pop
scas
mov
xor
mov
pop
rolb
pop
dec
imul
adc
fs
sub
fimuls
cmc
jbe
jecxz
outsb
inc
cmp
mov
sbb
jg
and
inc
push
inc
xchg
and
test
or
mov
mov
mov
and
jl
arpl
dec
adc
fwait
adc
xchg
stos
mov
add
mov
rcrb
sub
fsubrl
loopne
inc
sbb
add
mov
rolb
jo
lcall
call
sarb
adc
adcl
scas
pusha
arpl
rclb
inc
mov
sarl
adc
rol
xor
and
mov
dec
or
dec
inc
mov
test
or
test
push
fsubs
and
lock
xor
jb
inc
in
mov
test
aas
pusha
adc
xor
dec
scas
test
sub
rolb
pop
ret
pop
xchg
mov
pop
les
push
and
stos
jae
fistps
lcall
movsb
sti
and
mov
test
xor
lret
test
mov
loopne
and
sbb
push
or
cld
inc
adc
pusha
mov
jp
idiv
adc
lock
sub
push
call
shlb
popf
adc
add
jns
adc
mov
fisubl
cld
mov
or
into
mov
adc
push
push
sahf
pop
int3
fimull
pushl
mov
dec
mov
aam
rcr
xchg
pop
sub
ficoms
sbbb
xbegin
inc
inc
xchg
incb
aas
in
icebp
shlb
inc
mov
add
sub
adc
jmp
xor
or
mov
jmp
sub
and
jge
leave
mov
xor
sti
orl
rcl
es
stos
sbbb
adc
pop
gs
test
xor
ficompl
into
arpl
ficoml
mov
shll
pop
sbb
call
lods
mov
add
push
xor
inc
push
inc
push
mov
movsb
or
xor
pop
mov
and
mov
sahf
loopne
popa
sub
inc
ljmp
cwtl
jo
aas
leave
rcl
dec
aas
aad
jmp
pushf
mov
cld
dec
or
mov
cmp
jle
mov
jbe
push
pusha
lock
mov
adc
fs
xor
mov
dec
jp
push
negb
lods
adc
cld
jg
jle
inc
add
pop
jnp
enter
mov
sbb
push
adc
jmp
pop
lea
int3
xchg
push
dec
lcall
loope
call
hlt
xor
pop
dec
iret
inc
xchg
icebp
testb
inc
pushf
movsb
push
aad
out
lea
mov
inc
int
xor
mov
jg
bound
pop
lods
add
xor
je
jp
sti
ucomiss
or
and
orl
sub
sub
incl
stos
int
mov
mov
sbb
push
adc
pushf
jp
and
push
arpl
je
push
or
mov
je
cmpps
sbb
test
ds
add
mov
mov
lea
shr
and
outsb
adc
xchg
in
cmp
pop
cmpsb
cld
je
loopne
jbe
fs
mov
xchg
icebp
add
pop
inc
fists
test
fs
loop
in
pop
inc
inc
xor
movsb
into
xadd
or
or
mov
or
pushf
ja
in
inc
in
push
add
pushf
ss
cltd
js
mov
xor
test
pop
sub
pushf
ret
jne
cltd
dec
add
rcr
sahf
loop
pop
idivb
loopne
or
adc
push
push
outsl
or
cmp
mov
xor
rcl
cmc
incl
inc
push
rcrb
out
xor
pop
xchg
and
jge
xor
sbb
xor
into
cld
rorb
cwtl
sub
add
mov
sbb
or
or
mov
stos
xlat
fcoms
cmp
lods
rolb
xor
das
mov
stos
pop
aas
hlt
sub
jge
add
sbb
pop
and
fstp
mov
pop
xchg
pop
loopne
dec
xor
mov
adc
jnp
push
inc
imul
test
test
loopne
cmpsb
fisttps
sbb
or
mov
aaa
adc
ret
or
push
jo
xor
dec
pop
sub
leave
loop
fwait
std
test
push
push
mov
rcr
mov
in
jne
mov
popa
sbb
jbe
call
and
inc
gs
cmp
xchg
xor
test
mov
or
or
sbb
add
lods
psubsb
movups
das
add
inc
ljmp
pop
inc
jl
pusha
inc
repnz
add
pop
and
inc
jmp
jmp
mov
inc
add
mulb
sub
and
xlat
mov
inc
sbb
fidivs
xor
mov
mov
call
ljmp
incb
mov
testb
aaa
je
mov
mov
fisubrs
mov
inc
nop
add
mov
pop
adc
mov
int3
movups
aam
sub
clc
aam
cmp
mov
loop
sbb
bound
dec
int3
insl
cs
push
imul
movsl
mov
dec
sub
sbb
out
xor
clc
pop
std
std
loope
mov
call
add
push
ljmp
imul
repnz
xchg
lahf
ror
loopne
adc
icebp
call
inc
and
sub
xor
mov
mov
cld
aas
cwtl
adc
jne
in
clc
adc
dec
inc
les
imul
fcompl
add
ret
pop
jp
lcall
lcall
mov
inc
inc
xchg
adc
inc
pop
pop
xchg
mov
and
iret
mov
out
lock
arpl
adc
sbb
push
push
or
outsl
and
std
call
mov
jb
sub
cmpsb
mov
inc
cmp
jmp
push
cmp
dec
pop
mov
shl
sarb
in
mov
or
jecxz
pop
hlt
mov
aaa
scas
shrb
stos
cmpb
mov
into
push
pop
push
adc
adc
cmp
mov
add
imul
pushf
add
mov
fadd
fwait
push
fnsave
faddp
mov
adc
mov
xchg
push
pop
mov
xchg
jno
push
xor
jmp
xor
cli
push
jmp
jp
add
pop
mov
call
es
hlt
and
ljmp
test
psubusw
bsf
xchg
jne
adc
test
fmull
xchg
les
sbb
in
mov
stos
addr16
adc
rcl
push
sub
sbb
adc
pusha
add
xor
jb
aad
subb
mov
call
xor
ret
rclb
push
mov
push
dec
mov
fcmovb
jmp
cmpsl
or
cld
adcl
push
adc
mov
xor
adc
sub
lahf
ret
fiaddl
xchg
cwtl
sar
out
ljmp
lret
loope
push
iret
add
dec
push
add
pusha
and
ds
push
in
sub
mov
shlb
inc
cltd
push
mov
pop
fsubl
xchg
push
dec
iret
xchg
mov
sbb
push
jp
in
dec
xor
and
push
testb
aam
je
pop
mov
ljmp
sub
push
ja
movsb
push
and
enter
cwtl
pop
fdiv
sahf
fs
icebp
ljmp
add
fwait
cmpsb
jmp
jg
inc
jb
adc
loopne
rolb
out
mov
mov
add
mov
or
sub
mov
insl
add
push
xchg
mov
stos
sbb
jge
pusha
test
fisubrs
mov
mov
xchg
sbb
rcrl
std
mov
testb
scas
xchg
xchg
shlb
push
mov
mov
mov
fisttps
mov
or
lea
mov
loope
lcall
rorb
ret
add
stos
sub
loop
movsb
xchg
into
push
int3
out
adc
xchg
push
lock
pop
cld
push
addl
ss
mov
xchg
xor
inc
clc
es
pop
cld
inc
push
mov
jns
sti
cmp
pusha
rcrl
sub
cmp
scas
push
repz
je
jno
add
and
mov
push
call
loopne
xchg
test
aas
sub
outsl
adc
mov
adc
adc
add
hlt
add
adc
push
push
mov
push
sbb
leave
jb
icebp
and
dec
jmp
xor
into
fwait
add
jp
int3
mov
adc
dec
add
imulb
inc
adc
pop
jmp
mov
std
cmp
push
out
push
adcb
test
dec
nop
scas
add
clc
cmp
inc
push
rcr
decl
push
xlat
mulb
add
inc
jg
jno
cmpl
inc
add
loopne
adc
mov
outsl
nop
mov
xor
imul
in
cmc
lea
sbb
shlb
push
cld
jbe
insb
cmp
pop
lea
int3
sub
lods
outsl
mov
xor
jge
push
xchg
mov
push
aad
mov
adc
add
ljmp
pop
jbe
mov
mov
divb
add
lcall
mov
push
iret
sub
add
sub
pop
sbb
dec
inc
repz
loope
ss
je
jecxz
fdivs
mov
jl
xchg
mov
adcb
scas
add
jmp
jle
mov
add
mov
sub
icebp
inc
rorb
mov
mov
data16
jle
cmp
add
nop
test
mov
jmp
sub
hlt
xor
cmp
fimuls
mov
fdiv
ljmp
sbb
push
push
add
adc
sub
outsl
loop
int3
sub
mov
or
push
or
sbb
sub
xchg
test
xchg
push
push
mov
add
xchg
push
cld
inc
icebp
leave
rorb
test
loopne
or
jmp
call
push
inc
cmc
addr16
mov
push
jns
subb
roll
cmp
mov
pop
push
fbld
sub
mov
insb
or
or
xor
add
pop
push
int3
mov
call
scas
mov
in
and
and
fs
jo
xor
std
lock
test
adc
insl
xor
lods
sbb
lea
mov
jo
mov
dec
insl
or
enter
jg
clc
jae
test
cld
sub
rcr
adc
mov
aad
sahf
insb
in
cmp
xor
dec
in
mov
sbb
mov
xor
push
add
push
out
mov
or
rcrl
add
lret
pop
mov
and
mov
mov
adc
add
mov
mov
inc
inc
mov
adc
test
or
fs
and
jo
mov
pop
mulb
or
rclb
leave
dec
push
insb
jecxz
inc
add
aaa
push
jp
inc
mov
je
add
out
mulb
js
xchg
add
nop
or
or
xor
call
lds
icebp
pop
pop
push
jne
xor
cmp
add
fucom
in
rolb
jg
adc
xor
call
aam
outsb
mov
jbe
xchg
mov
clc
jmp
push
fsubr
push
clc
cmp
ret
cmp
adc
shrb
nop
mov
notb
adc
test
mov
icebp
jnp
jnp
xchg
insb
and
ds
mov
push
push
sub
push
xchg
repz
je
rclb
js
jp
dec
int3
or
adc
pop
popa
push
xor
mov
mov
lods
imul
or
cmp
xor
roll
push
lock
pop
xchg
xchg
dec
adc
loope
es
scas
add
mov
or
xor
push
sub
push
sub
dec
push
ss
dec
call
outsb
or
inc
cwtd
in
or
mov
push
adc
js
pop
imul
je
ds
mov
icebp
mov
addb
and
pop
jne
push
sbb
adc
shr
mov
sarb
pop
push
and
cmp
or
push
jns
add
and
decl
leave
mov
cmp
cltd
rcrb
xor
in
inc
add
test
adc
inc
sbb
pop
fneni(8087
out
sbb
popa
or
add
in
aam
mov
and
push
lret
xchg
dec
cli
into
jge
push
jg
in
xor
add
mov
je
punpckhdq
lea
cmp
add
sbb
aas
hlt
xchg
pushf
add
ds
nop
fbld
cmp
les
js
mov
ss
mov
push
add
sub
hlt
jge
nop
inc
pop
cmp
loopne
mov
scas
mov
adc
add
cmc
push
and
lods
testb
inc
push
xor
iret
nop
lock
mov
fxsave
or
ret
test
test
and
inc
ljmp
loopne
push
add
mov
add
data16
pop
mov
xor
sti
add
aad
daa
mov
mov
adc
or
adc
adc
or
cmp
dec
mov
mov
mov
pushw
cmpl
mov
jmp
sbb
push
negb
incb
xor
jbe
hlt
pop
ljmp
adc
lea
mov
fistpl
mov
and
rorb
add
test
aaa
add
sub
push
jo
adc
mov
fadds
pop
int3
psrad
pop
clc
adc
sub
in
outsb
push
mov
incl
loope
cld
cmpb
gs
sbb
out
call
test
in
lock
or
or
add
int3
test
pop
fildll
ds
inc
inc
push
push
inc
cli
cmp
push
or
add
pop
or
mov
and
inc
add
enter
stc
add
inc
decl
jmp
cmp
jmp
incb
ljmp
call
leave
fdivr
mov
jmp
and
mov
pop
push
call
test
xor
lock
or
iret
sub
push
sbb
xor
push
add
or
aam
pop
push
loope
fsubrs
clc
sarb
leave
cmp
cld
xchg
sub
xchg
add
add
insb
sbb
dec
imul
fdivr
mov
adc
arpl
aaa
cmc
sub
clc
or
adc
push
jecxz
inc
xor
and
fucom
xchg
sbb
mov
loopne
pusha
ret
aaa
inc
add
sbb
je
test
clc
xor
icebp
push
cmp
loopne
and
and
jl
pop
mov
inc
inc
fs
sbb
mov
inc
aam
leavew
fnstcw
test
push
enter
push
add
orb
rorl
cwtl
es
or
add
lea
dec
into
nop
xchg
arpl
jmp
pop
loopne
inc
jbe
and
dec
hlt
cmpsl
lods
add
add
pushl
test
or
cmp
roll
mov
adc
xor
push
ret
mov
mov
fbld
int3
out
notl
fs
scas
cmp
hlt
jg
xchg
xchg
pusha
hlt
jne
dec
adc
or
pop
xor
es
cmpsb
and
jbe
push
loopne
jne
xchg
inc
mov
dec
int
add
jnp
inc
cwtl
mov
lahf
fiadds
or
add
dec
and
dec
mov
jl
aas
inc
in
fsub
add
inc
sbb
lea
mov
icebp
test
mov
mov
pop
movsb
pushf
mov
pop
shl
arpl
push
cmpxchg
xor
mov
js
test
add
test
hlt
fldt
xor
ss
je
jp
gs
or
andl
in
mov
in
test
sub
jle
call
mov
clc
pushw
shr
dec
jecxz
mov
inc
fs
es
push
cwtl
pop
adc
fbld
sub
xor
push
test
lea
mov
dec
enter
add
push
mov
test
out
mov
ljmp
stos
lods
mov
dec
or
xchg
imul
mov
cmp
test
lock
and
pop
jl
jle
les
xor
xchg
rolb
dec
repnz
imul
arpl
xor
sbb
jbe
fsubs
cld
pop
stos
add
fiadds
loop
xchg
fcoml
call
push
xor
repz
testb
lock
mov
orb
jbe
inc
or
insl
add
adc
push
adc
mov
dec
or
push
test
icebp
mov
mov
add
rcll
and
pop
pop
cmp
call
fiadds
pushf
fimuls
adc
pop
pop
sbb
mov
shld
loope
push
and
pushf
mov
rorb
add
sahf
lahf
mov
push
adc
in
push
jmp
xchg
pushf
inc
repnz
idiv
add
enter
and
push
adc
add
adc
or
xor
data16
jecxz
add
sbb
inc
push
or
arpl
mov
ret
shrl
cmpsb
outsl
fs
aad
dec
add
sub
sbb
icebp
pop
imul
sub
jge
out
ja
lahf
adc
test
sub
mov
or
lret
jl
rep
ljmp
cmp
xchg
adc
mov
scas
add
add
jo
imull
cmp
aad
ja
inc
out
shll
test
add
rcr
xchg
lods
mov
inc
xor
xchg
les
ljmp
aad
aas
mov
and
int3
jge
or
cs
cmp
or
mov
mov
aaa
mov
mov
psubw
stos
push
or
cwtl
mov
mov
cli
inc
inc
push
decb
inc
fistps
imul
jl
mov
push
inc
mov
ja
call
mov
sub
es
test
cs
movsb
lods
and
test
push
stos
out
inc
inc
mov
jmp
ficoml
pop
inc
xor
xor
pop
insb
sub
shlb
xchg
inc
jne
xchg
cmp
add
sub
call
jle
add
cmp
insb
or
shlb
out
xadd
test
std
mov
mov
dec
push
adc
popa
xchg
inc
std
rolb
inc
dec
clc
add
iret
rolb
xor
push
xchg
or
adc
xchg
add
fcmovbe
data16
fimuls
mov
fnstsw
lock
jno
or
push
orb
and
jl
push
push
push
call
jmp
and
add
mov
and
cmpsl
icebp
testl
lods
adc
in
in
xlat
xor
outsb
in
add
dec
add
adc
fdivs
pushf
dec
sbb
xor
pusha
or
pop
shrl
cmc
incl
sbb
call
inc
data16
orl
jecxz
pop
pop
inc
jmp
cld
or
sub
sar
dec
scas
xor
jmp
adc
push
imul
pop
push
xor
adc
inc
push
sbb
add
call
test
jecxz
decl
mov
jns
xor
and
or
test
pop
ret
stc
adc
pop
aaa
es
ret
dec
outsl
lret
in
add
js
pushl
jae
popa
aad
push
adc
lret
mov
les
jge
fldl
sti
mov
cmc
popf
inc
cmp
xchg
dec
inc
dec
inc
pop
cmp
je
push
sbb
add
pop
pop
dec
loop
push
sub
dec
push
push
sahf
pop
ret
mov
leave
adc
jmp
int3
arpl
data16
adc
cs
ret
cs
inc
mov
negb
lock
push
dec
ja
and
test
add
inc
std
fwait
push
dec
adc
adc
mov
mov
inc
and
int
int3
sahf
test
pop
aam
mov
pop
inc
push
and
insl
mov
mov
xor
xor
lock
adc
mov
pop
jmp
data16
inc
mov
ja
or
jmp
loopne
mov
imul
je
jl
movsl
mov
test
sbb
adc
mov
lods
dec
filds
clc
push
push
cmp
jmp
jo
dec
pop
cs
ds
fwait
xor
mov
test
dec
or
loopne
out
adc
hlt
mov
outsl
insl
lcall
cmp
add
cs
lock
rcr
je
jp
dec
xor
ds
mov
fdivs
sar
sub
sbb
pop
jmp
ds
add
je
mov
mov
add
cmpsl
pusha
push
dec
or
mov
clc
je
test
cmp
popa
or
sub
clc
aaa
insb
mov
sar
mov
xor
mov
xor
inc
js
outsb
jmp
pop
std
mov
inc
sbb
push
dec
clc
dec
push
adc
mov
inc
loopne
hlt
jo
data16
sub
mov
in
cmp
cs
add
insb
sahf
shll
sub
andl
jle
mov
add
bound
outsl
mov
pop
sub
push
movw
test
jge
dec
mov
push
inc
pop
call
sub
int3
push
pop
enter
setns
leave
jge
test
xor
mov
cmp
arpl
mov
push
push
je
xor
xor
inc
rcll
and
adc
aas
inc
push
aaa
fs
loop
xchg
sub
cld
dec
or
andb
ret
adc
in
shlb
dec
inc
jge
push
ret
std
call
jl
stos
dec
movsb
call
jns
lret
xchg
push
popa
push
sub
testl
jno
mov
test
jbe
cmp
inc
mov
rcll
cmpsl
movsl
aam
loop
inc
dec
inc
ret
mov
jns
shlb
les
dec
xor
inc
pop
and
popa
out
push
sbb
pop
insb
cwtl
aaa
faddl
sub
cvtps2pd
jmp
sbb
pop
cmpsb
push
pushf
sub
inc
movsl
test
mov
int3
rcr
outsl
mov
test
into
add
inc
push
fwait
xchg
add
fdivs
push
dec
mov
push
sbb
and
faddl
or
mov
jg
or
and
in
pop
adc
and
dec
out
pop
es
or
cld
pop
push
cld
shlb
pusha
fldcw
test
push
dec
inc
roll
sahf
rcrb
jmp
pop
adc
mov
push
mov
mov
bound
aam
pop
push
mov
test
dec
add
lock
push
sti
adc
or
adc
xor
inc
mov
add
push
aad
xor
xlat
mov
mov
jmp
sub
icebp
ret
out
pop
cmp
lea
out
sbb
push
pop
dec
push
xor
pusha
mov
pop
jecxz
push
repnz
pop
adcb
popa
mov
mov
fs
or
popf
xchg
xchg
adcl
rcr
loopne
lods
cmp
mov
mov
aam
adc
push
add
mov
popa
mov
xor
in
cli
cld
push
or
mov
sbb
inc
inc
add
mov
jns,pn
ret
repnz
pop
divl
push
pop
lea
dec
adc
leave
jo
add
dec
cwtl
xchg
add
mov
les
inc
loope
xor
pop
cmp
mov
repz
push
or
dec
push
lock
stos
jge
add
imul
subb
das
push
xchg
imul
scas
mov
inc
adc
add
incb
or
push
add
push
dec
inc
push
jg
add
fwait
sub
jb
jmp
pop
lock
push
sub
cld
jns
xchg
outsb
dec
adc
push
data16
dec
mov
cmp
add
and
pop
dec
pop
jmp
lock
or
xor
aam
sub
fidivs
or
test
mov
mov
sarb
add
shll
ret
fidivrs
rolb
loop
add
orb
clc
mov
add
inc
push
aaa
jmp
sbb
fmuls
ret
in
setp
lods
mov
inc
cwtl
test
test
enter
jle
push
mov
fdivl
mov
xor
push
mov
lods
fs
cs
mov
push
es
in
cmp
decb
or
lods
jmp
nop
mov
das
insb
and
push
and
adc
out
cmp
push
or
sbb
mov
xchg
inc
mov
adc
leave
into
push
push
xor
mov
push
push
add
push
mov
shrb
push
ror
ret
add
xchg
pop
mov
mov
adc
sub
add
pop
inc
inc
adc
fstpl
add
push
xchg
std
adc
push
xor
pop
pop
pop
insl
cmp
dec
add
inc
insb
push
fisttps
push
pop
into
pop
dec
sbb
fcomp
mov
ljmp
lea
idiv
dec
adc
sar
aam
pop
shlb
data16
int
add
lock
xchg
push
mov
pushf
push
mov
adc
add
dec
jo
cwtl
ss
dec
jg
addl
rorb
or
lahf
scas
loop
add
decl
dec
data16
cs
dec
or
arpl
mov
add
pop
jg
rcrl
mov
add
mov
inc
and
inc
add
add
xchg
xor
aam
int
dec
and
xchg
lcall
or
or
or
push
bound
rcl
arpl
sub
inc
test
and
xorb
xchg
clc
add
or
enter
fisttpl
pop
nop
pushf
jne
mov
or
cmp
fcmovnu
sub
push
sbb
inc
cwtl
xchg
sbb
mov
sub
inc
mov
mov
push
aam
movsb
inc
inc
daa
hlt
mov
inc
or
inc
lret
xchg
adc
xor
cmp
int3
orb
fs
or
pop
add
rcll
adc
and
cs
cmp
mov
or
add
and
addb
mov
sub
popa
call
dec
push
ds
sub
jmp
inc
or
data16
xchg
scas
jmp
push
mov
int
pop
ret
insb
fs
popaw
xchg
cli
add
and
cld
and
xor
sbbb
enter
cmpsb
sub
enter
pop
mov
inc
call
push
stc
mov
or
pop
bound
mov
mov
sbb
lds
add
sbb
inc
add
pop
aam
xchg
sub
clc
ud0
clc
fwait
lret
dec
insb
test
in
cmp
fs
outsl
cld
dec
pop
fdivr
add
jmp
xchg
jb
dec
insb
cwtl
scas
adc
stos
ljmp
push
xchg
mov
or
xchg
push
xchg
push
lea
and
fsub
push
jp
hlt
js
jmp
inc
jbe
bound
out
push
int
push
jb
fcoms
push
dec
sub
sub
cmp
add
xor
cmp
xchg
lods
ljmp
daa
dec
xor
mov
sub
mov
mov
imul
pop
js
jmp
cld
push
insb
inc
enterw
cmp
leave
mov
mov
dec
test
jp
mov
data16
dec
cli
mov
pop
decb
cmp
lods
xchg
mov
adc
mov
rolb
add
adc
sti
xchg
lahf
in
cmp
ljmp
dec
les
cli
add
in
xor
and
test
rcrl
inc
subl
and
mov
cli
aam
inc
xchg
jmp
xchg
inc
mov
mov
lcall
ljmp
xor
push
lods
mov
test
mov
sub
fsubrl
incl
out
mov
cmpsl
mov
adc
lea
inc
std
sub
push
adc
pop
sbb
adc
loopne
mov
sar
data16
mov
mov
mov
jbe
sbb
xor
push
mov
mov
push
xor
dec
jne
ljmp
pop
cwtl
push
mov
dec
outsl
mov
mov
mov
rcrb
clc
pop
rorb
decb
adc
andb
mov
bound
mov
mov
jg
mov
jle
inc
sub
mov
adcb
std
cmc
ret
sahf
push
inc
addb
lcall
lcall
dec
or
inc
das
xor
call
cmp
imul
adc
mov
pushf
sub
loop
bound
imul
pop
stos
pop
xchg
test
sub
push
jo
add
mov
lock
mov
dec
mov
adc
call
ss
imul
or
dec
jle
or
mov
add
dec
xor
push
or
sbb
xchg
int3
xor
xlat
js
add
jle
mov
pop
inc
jo
push
push
inc
cld
push
imul
fs
xor
and
jecxz
inc
pop
test
mov
mov
push
or
mov
shrb
or
std
cli
sbb
inc
aad
mov
inc
loopne
outsl
mov
sbb
dec
das
sbb
sbb
xor
jo
aam
aaa
add
fcomps
cmp
sti
mov
mov
cmp
pop
mov
lret
mov
mov
mov
shll
xor
stos
and
incl
add
js
lea
push
pop
jne
or
xchg
xor
ss
outsl
push
in
sbb
sbb
pop
push
dec
adcb
push
aaa
cld
cli
dec
in
js
jmp
and
xchg
xor
adc
stc
mov
cmp
mov
test
mov
call
or
cli
push
pop
add
out
mov
xor
cmp
add
or
cmp
xor
mov
sbb
scas
aas
aad
mov
inc
mov
repnz
ds
std
mov
pop
leave
inc
lgs
cmpl
lock
dec
addb
add
std
xchg
inc
mov
jg
call
mov
fs
push
adc
aaa
mov
lock
xchg
pushf
mov
pop
ret
mov
add
xor
out
mov
jb
or
jg
les
test
jmp
mov
mov
fadds
jle
push
cld
mov
add
xor
cld
adc
jl
clc
dec
pop
sub
outsl
inc
or
popa
sbb
shrb
adc
sub
push
ficoms
icebp
les
cmp
call
add
jle
aad
scas
out
xor
or
mov
sti
mov
inc
mov
cmpl
push
dec
add
lock
orb
test
ljmp
dec
and
mov
inc
sbb
lcall
push
mov
inc
insb
mov
in
adc
fwait
nop
xchg
push
idiv
add
add
jge
or
fcoms
adc
add
int3
in
shl
inc
sub
cmp
push
jg
mov
sub
pop
arpl
fldt
pop
or
mov
push
pop
fsts
mov
dec
mov
fdivp
push
adc
pop
incl
inc
int
pop
insl
mov
sbb
sbb
push
loopne
daa
mov
cli
lea
and
shlb
adc
lock
cmpsl
or
xchg
lock
mov
fmull
jo
push
fs
fmuls
add
xor
sbb
call
cmpsb
clc
aas
or
and
adc
mov
je
lock
ljmp
sub
adc
jle
pop
in
push
or
mov
mov
test
push
mov
mov
jo
jb
shlb
mov
pop
into
ja
cmp
movl
subb
add
movsb
sub
push
dec
mov
xor
mov
dec
lcall
mov
pop
mov
and
or
outsb
dec
hlt
xchg
mov
popa
add
cmp
add
aaa
dec
jne,pt
dec
std
dec
cwtl
gs
mov
push
mov
mov
movsb
or
ljmp
shlb
out
mov
lock
mov
loopne
gs
mov
or
adc
popf
inc
shrl
sbb
push
mov
push
cmp
roll
inc
fsubs
lahf
sub
mov
test
stc
or
xchg
addb
add
aaa
andl
lods
fdivrl
push
rcr
and
and
cmp
push
imul
out
and
enter
cld
mov
add
or
les
push
dec
test
inc
pop
xchg
mov
mov
imul
cwtl
mul
ds
rolb
mov
add
pop
sub
bound
mov
aam
adc
mov
lock
leave
ror
mov
or
clc
xor
cmp
lock
data16
dec
call
dec
push
add
or
dec
cs
pop
cmp
jne
push
pop
insl
push
pop
andb
rolb
adc
mov
inc
inc
adc
cmpb
push
cmpsb
addl
and
dec
cli
out
mov
mov
xchg
daa
mov
adcl
push
mov
sbb
xor
fdivl
jl
loope
les
mov
fadds
add
pop
push
cwtl
hlt
cmp
jl
std
inc
aam
mov
adc
pop
call
mov
push
mov
add
popf
repnz
pop
xchg
jle
ret
xor
cmc
lret
cmp
divl
rorl
jge
aad
enter
inc
dec
aas
daa
rolb
mov
out
mov
push
iret
pushl
aaa
adc
add
loopne
test
and
movsb
xchg
pop
dec
movsb
add
loopne
lcall
into
repnz
addl
shlb
cld
jg
pushl
add
sbb
ret
mov
clc
test
les
add
movsl
jmp
pop
push
mov
les
dec
mov
mov
push
rorb
pop
int3
push
xchg
inc
xor
cmp
mov
rclb
dec
sub
sub
cmp
or
mov
cmpsl
sarl
push
bound
sti
aaa
mov
push
shl
cmp
inc
mov
call
jae
inc
pop
jmp
insl
inc
lret
push
sub
inc
jecxz
mov
and
adc
in
inc
cmovl
push
sar
into
mov
and
mov
inc
and
gs
pop
mov
cwtl
repnz
push
jl
add
fs
mov
push
shlb
out
jg
xchg
add
mov
pusha
mov
sarb
jbe
ret
mov
xchg
mov
lods
test
sqrtps
inc
sbb
dec
decl
push
cmp
aam
add
cmpsl
lea
sbb
dec
in
or
test
enter
mov
adc
sbb
gs
sub
push
fcmovbe
ja
fdivrl
cmp
mov
loop
and
hlt
int3
pop
inc
mov
nop
int3
test
dec
mov
mov
es
mov
call
incb
loop
mov
inc
xor
add
test
mov
inc
scas
cmpsl
sub
sbb
dec
out
mov
loop
inc
imul
jo
push
mov
rorb
xor
push
add
fs
jle
pop
pop
push
xor
mov
je
inc
addr16
mov
sbb
inc
inc
int3
dec
or
ret
mov
ljmp
add
xchg
call
cmp
inc
lock
or
xchg
cmpsb
ss
cmp
in
xor
iret
pop
inc
add
ljmp
xor
mov
int
add
push
and
stos
fs
or
pop
xchg
mov
pop
dec
insb
dec
lock
ljmp
mov
adcl
addb
xor
insl
fcompl
test
cmp
sbb
adc
jl
ljmp
pop
aad
adc
add
sub
clc
sub
jne
in
enter
pop
mov
and
push
fdivs
inc
fmuls
and
pushf
arpl
sbb
cli
dec
clc
adc
push
cmp
adc
dec
xor
mov
inc
push
inc
jp
cmp
lock
sub
call
jb
jl
and
test
subb
adc
push
shl
insl
movsl
adc
scas
xor
nop
jae
cmp
and
movsb
sub
faddl
add
fprem
jg
mov
or
lret
enter
sahf
inc
sti
popf
xor
test
cmova
inc
jmp
lret
icebp
jne
jb
pusha
sub
dec
mov
xor
and
data16
xor
rcr
inc
or
dec
jle
mov
push
mov
mov
push
test
xlat
imul
fs
cld
xchg
xchg
hlt
xchg
mov
sub
fiaddl
pusha
inc
push
test
add
sar
xor
xchg
jp
insl
hlt
dec
inc
cmp
test
call
pop
inc
push
leave
sub
incl
push
inc
add
push
mov
sar
flds
add
or
pop
in
imul
cli
in
inc
lcall
push
and
jge
leave
and
test
inc
mov
and
mov
ljmp
outsb
mov
out
xor
fs
push
sbb
in
push
loop
inc
ficoml
jle
sbb
adc
gs
add
adc
adc
call
pop
lea
enter
jne
fwait
add
pop
xchg
xchg
jle
or
xor
inc
outsl
loopne
pop
ljmp
or
mov
mov
or
adcb
pop
mov
adc
mov
stos
jge
or
mov
js
sub
ljmp
iret
ret
insb
or
inc
mov
cmp
jb
scas
add
mov
xchg
inc
xor
arpl
xchg
adc
xchg
call
inc
sub
lods
scas
adc
cmp
jae
pusha
int3
daa
cmp
or
sar
add
rcll
or
mov
mov
push
jg
movsl
fwait
loope
fucom
push
call
call
lock
pop
cmp
pop
inc
pushl
or
jne
gs
jmp
test
cli
aaa
cmp
and
ret
mov
testl
out
and
jbe
cs
test
or
xlat
call
push
mov
mov
push
pushf
int3
sbb
incb
push
jne
lods
lock
sbb
int3
and
dec
inc
sbb
push
mov
inc
ja
stos
jecxz
mov
nop
mov
clc
push
pop
icebp
jo
pop
pop
adc
lock
inc
mov
mov
sbb
push
adcl
push
xor
dec
jp
mov
adc
sahf
cmp
or
add
test
adcb
test
push
cmpb
sub
orb
aam
push
jle
xor
dec
outsl
fistpl
push
mov
ret
xchg
js
fs
lcall
lock
cwtl
adc
mov
movl
call
mov
and
inc
call
push
cs
shrb
loop
add
mov
cmc
outsb
add
adc
push
add
adc
lds
xchg
push
cmp
js
lods
adc
leave
xor
adc
sub
out
ret
test
or
cmpsb
icebp
mov
cld
push
add
sub
push
push
incb
mov
pop
push
loopne
push
xchg
xchg
in
xchg
adcb
scas
sbb
xchg
jl
dec
xchg
dec
push
jne
add
mov
mov
add
aas
into
xchg
pop
and
mov
loopne
push
sahf
mov
sub
adc
sub
aam
mov
mov
lods
cmp
pusha
cltd
add
xorb
adc
jge
aaa
ret
push
adc
push
adcl
imul
mov
mov
mov
adc
aam
cmp
cltd
test
adc
adc
push
rcrb
int
mov
pcmpeqw
pop
test
push
nop
push
xorl
test
in
push
js
inc
xchg
lahf
mov
xchg
fs
sbb
push
fdivrl
jle
pop
call
fisubl
mov
adc
pusha
sbb
jmp
std
or
mov
xlat
mov
and
int3
inc
in
or
dec
jo
into
adc
sub
push
adcl
pop
dec
sub
insb
ret
imul
dec
add
adcl
lret
rol
std
dec
sbb
push
dec
cmp
push
mov
or
push
jg
movsb
outsl
pop
rorb
mov
das
rclb
icebp
dec
add
and
push
mov
insb
cld
dec
add
inc
sbb
or
push
push
and
ss
xchg
rcr
cs
jl
scas
dec
call
push
inc
lods
test
push
fidivrs
insb
adc
add
loope
scas
stc
sub
shrl
pop
mov
movsb
dec
ljmp
mov
lock
adc
pandn
jb
in
sub
ljmp
push
ret
add
or
pop
rcll
out
lret
out
mov
mov
in
sub
aaa
lcall
pop
pushl
pop
add
ds
cmpsb
ss
push
inc
cmp
es
shr
test
inc
mov
js
adc
imulb
ja
xor
jmp
jg
hlt
add
adc
adc
es
ret
mov
add
mov
mov
pop
or
inc
jmp
jnp
mov
test
idivl
xor
push
inc
xlat
mov
fdivs
adc
sahf
iret
push
data16
out
insb
sbbl
stos
pop
ljmp
in
xor
int3
les
add
sub
cli
add
pop
mov
mov
mov
pop
inc
xchg
mov
dec
fisubl
inc
xor
sbb
scas
pop
lods
or
test
adc
outsb
outsl
pop
ret
mov
sub
cmc
inc
adc
sbb
push
sub
and
ja
adc
pop
mov
inc
xor
inc
je
loopne
and
fs
or
push
ds
pushf
add
mov
das
cmp
inc
push
pop
addb
adc
jo
lods
inc
add
sub
push
sti
ljmp
mov
xchg
adc
add
int3
mov
and
pop
aam
lret
jb
sub
call
sub
negb
pop
sbb
pop
int3
jne
sbb
xor
cmp
adc
loopne
cmpl
clc
sbb
jne
mov
xor
in
lock
aad
mov
mov
push
xor
subb
aas
dec
popa
lods
push
jl
das
lcall
addb
mov
mov
outsl
pop
or
jmp
pop
sar
xor
ret
fs
mov
rorb
push
adc
and
jae
sbbb
decl
std
movsl
test
push
mov
pop
ds
dec
outsl
add
imul
enter
sbb
hlt
push
rol
lahf
orb
sbb
imulb
push
fs
add
dec
adc
or
inc
jg
xor
xor
xor
rolb
mov
adc
xchg
outsl
push
jb
dec
in
cmpsb
incb
jmp
add
lods
or
jle
push
aaa
in
pop
ss
cmp
mov
inc
test
enter
mov
inc
test
inc
dec
xor
jns
sbb
pop
lret
dec
leave
call
je
dec
jbe
pop
dec
gs
je
mov
or
lcall
lock
insl
pop
xchg
add
lcall
outsb
ljmp
push
dec
push
add
sbb
ljmp
popa
mov
loope
mov
call
cmp
fs
outsl
dec
cmp
push
cmp
jo
mull
lock
icebp
fadds
loop
icebp
mov
or
mov
xor
and
mov
jle
ljmp
jae
mov
dec
xlat
inc
loope
lea
jl,pn
in
rorl
ret
cmp
decb
sbbl
int3
and
shr
jae
test
fcmovnu
fisttps
push
nop
int3
add
push
cld
mov
inc
ret
js
mov
push
push
out
orb
stc
popa
scas
fildl
push
jno
cmp
and
pop
adc
push
popa
shll
js
mov
or
mov
das
les
push
incb
outsb
pop
add
sub
jbe
mov
fcomps
movsb
sub
test
iret
add
or
add
xor
fsubl
repz
xchg
popa
jmp
sub
cmpsl
hlt
mov
jne
add
ds
xor
and
adc
push
lea
outsl
mov
into
xchg
int3
pusha
pop
shrb
and
sbb
fcompl
rol
into
gs
loopne
mov
inc
jbe
enter
mov
cltd
movsb
aad
ret
inc
push
jae
push
and
out
int3
insb
fisttpl
mov
jae
mov
fcmovb
fsubp
bound
jmp
xor
call
outsl
gs
cwtl
or
lret
push
mov
mov
jmp
jl
nop
inc
mov
sub
and
add
sbb
adc
decl
pop
loopne
sahf
dec
sbb
or
xor
add
push
adc
adc
adc
mov
bound
lret
fsubl
rorb
test
inc
rorb
mov
test
sahf
jp
or
cld
cld
push
pop
mov
sarb
sbb
lret
dec
cltd
clc
rclb
fs
or
loope
add
push
in
push
add
ljmp
divl
insl
cmp
cltd
out
or
int3
pop
ret
ret
cli
dec
and
sbb
jne
adcb
bnd
mov
push
or
aaa
mov
inc
or
inc
push
xchg
pop
call
and
aad
outsb
fidivrs
push
add
jmp
push
imul
add
inc
fdivl
in
jle
sub
adc
stos
mov
daa
call
push
sub
test
inc
incb
fsubs
push
movsbl
dec
scas
test
or
sbb
rorb
dec
and
test
roll
and
cmp
test
movups
mov
or
jl
pop
xlat
std
pop
push
lea
inc
and
sub
gs
ret
rcrl
add
xor
or
mov
mov
sbb
and
push
icebp
adc
insb
adc
data16
cmp
clc
mov
and
mov
or
cmp
loope
xor
clc
push
js
ffreep
and
cmpsb
out
add
adc
adc
push
repnz
add
push
mov
mov
push
pusha
jl
mov
ret
into
imul
jno
test
shll
cmc
xchg
adc
gs
ret
dec
pop
push
mov
cmpsl
and
xchg
xor
test
push
lods
and
sub
out
repz
test
push
faddl
inc
pop
push
sub
nop
push
sbb
push
int3
out
ret
mov
add
push
inc
add
mov
push
ret
lods
les
and
inc
add
add
and
mov
push
daa
lcall
sbb
lock
jl
sbb
pop
jo
inc
incb
add
mov
cltd
call
jp
icebp
jp
arpl
adcb
adc
std
clc
nop
incl
mov
lods
jle
int3
jg
movq
sbb
jl
mov
inc
jl
jne
add
and
idiv
das
mov
incl
inc
in
or
mov
inc
xor
stos
lock
loopne
jb
lock
push
xchg
adc
cmc
xor
sbb
pusha
mov
fadd
mov
sbb
aas
xchg
push
cmp
pop
dec
mov
add
xchg
adc
xor
push
shlb
jbe
and
sbb
jbe
sub
sbb
ljmp
call
cmp
test
mov
pop
xchg
push
in
cwtl
xor
insb
mov
test
or
inc
jecxz
scas
inc
cld
jns
test
xchg
push
in
add
mov
mov
out
jo
ficoml
or
cli
or
push
cld
fcoml
pop
add
cmovno
mov
sbb
mov
aas
mov
leave
ror
shlb
flds
or
and
jo
shl
mov
xor
clc
push
or
cltd
and
mov
cmp
push
push
das
enter
inc
fisubrl
aad
sbb
icebp
push
clc
ss
push
mov
testl
inc
mov
jle
add
jg
jp
imul
xor
add
mov
data16
mov
cmp
in
inc
lds
ficoml
mov
popf
test
xor
pusha
in
mov
jmp
push
add
push
and
popf
add
inc
adc
icebp
dec
or
xchg
or
pop
ret
adc
aam
push
cmpb
out
push
xchg
add
jmp
fmulp
sbbb
and
aam
push
or
pushf
hlt
inc
add
fs
push
mov
in
ja
jo
out
mov
cmp
mov
adc
orb
lods
into
test
aad
lea
cli
ret
sub
pop
repz
inc
ret
sub
adc
push
dec
push
xchg
pusha
in
pop
sbb
fsts
loopne
gs
mov
lods
hlt
mull
int3
jne
gs
jb
ret
fstpl
bound
push
fsubrs
test
loope
ret
sbbl
cmp
fnsave
pop
push
mov
inc
mov
push
sub
cli
mov
fistpl
mov
push
mov
clc
push
int3
push
cmp
mov
xchg
roll
mov
add
jno
popa
pop
jne
inc
into
notb
push
insb
mov
or
icebp
add
inc
pop
xchg
in
mov
nop
lods
inc
mov
sbb
mov
out
enter
rol
int
sub
call
pop
inc
js
and
or
in
outsl
pop
sub
inc
div
push
aam
and
sbb
mov
cs
mov
xchg
pushf
mov
cli
call
shrl
add
xor
jae
clc
xlat
jb
cmp
mov
jl
or
rorl
sarl
mov
fs
clc
lret
in
add
cs
mov
rorb
popl
push
mov
push
cltd
cli
sub
add
mov
and
mov
outsl
adc
dec
outsb
cmp
push
imul
mov
add
inc
loop
addl
insb
pop
push
dec
xor
nop
lods
imul
pusha
dec
xor
push
pop
es
jne
jo
movlps
and
cmp
mov
push
mov
jnp
push
and
daa
xchg
movsb
inc
jge
sbb
rcl
mov
fsubrl
pushf
push
shlb
push
push
pop
stos
vfmaddsub132ps
mov
les
outsl
lods
xchg
or
and
fsubrl
addl
jl
scas
cli
mov
lcall
leave
enter
fnsave
mov
jmp
ja
cli
or
adcl
push
dec
pop
mov
add
xor
inc
xchg
mov
push
jmp
flds
push
jb
mov
mov
cld
add
or
inc
jo
mov
xchg
das
hlt
pop
adc
sub
add
sbb
push
add
push
push
adc
dec
mov
icebp
ljmp
pusha
pop
fiaddl
leave
xor
push
lea
int
cld
lcall
cmp
inc
pop
push
mov
mov
out
ret
mov
aam
movsb
xchg
jl
pop
jge
hlt
xor
daa
xchg
loope
sbb
cmp
pop
movsb
pop
lea
les
xchg
inc
mov
mov
and
xor
dec
es
scas
xor
adc
add
loopne
xor
xchg
cld
push
mov
xchg
pop
pop
cld
push
test
inc
stos
or
ret
jmp
jbe
mov
fwait
dec
mov
mov
incw
jp
adc
hlt
movsb
add
cli
call
jp
je
inc
orb
adc
adc
xor
sub
sbb
sub
pop
mov
push
push
out
movsb
inc
adc
in
nop
repnz
adc
push
mov
push
je
shl
shrb
xor
pusha
mov
cld
addl
ljmp
mov
rcrl
loope
or
and
test
inc
push
nop
shll
push
jle
xchg
jne
inc
add
push
xchg
jbe
push
and
movsl
lahf
xchg
sahf
stos
push
in
test
xor
inc
mov
cmp
mov
adc
sbb
fimull
dec
xchg
xchg
push
add
pop
je
aad
and
push
xor
idiv
cmpsl
lahf
cmc
idivl
add
in
mov
and
pop
fcoml
push
inc
jle
arpl
pop
aad
jecxz
repz
rorb
push
sub
in
and
pushf
mov
sub
and
jp
mov
push
cmp
mulb
ficomps
lods
and
adcl
movsl
pop
dec
bound
cwtl
ja
mov
sub
xor
cli
mov
ljmp
add
jne
xorl
add
cmpsl
adc
add
dec
jmp
xor
shrl
lcall
sub
cs
mov
sbb
dec
cld
fdivs
adcb
icebp
aaa
mov
rclb
xchg
jb
call
movsl
test
pushf
loopne
lock
test
call
pushf
xchg
addb
movsb
push
mov
cld
es
jno
repnz
inc
dec
push
lcall
shlb
lret
sub
inc
pop
push
int3
shrb
or
mov
shlb
xchg
inc
mov
add
and
in
arpl
push
add
clc
mov
cld
pop
inc
pop
call
mov
add
push
inc
push
inc
xor
nop
push
ret
xlat
outsl
ss
dec
and
lock
cmp
mov
movsb
incb
mov
adc
and
aaa
fs
aam
sub
xor
mov
add
pop
adc
sbb
inc
or
aaa
push
enterw
inc
cltd
sbb
movsb
scas
and
mov
sub
nop
movsb
in
add
add
cs
and
loopne
mov
xchg
lret
into
jne
cmp
outsb
adc
hlt
cli
and
cwtl
lock
mov
mov
mov
call
add
or
outsb
pushf
xchg
fidivl
ss
hlt
stc
outsb
inc
adc
or
fucomip
mov
aas
sub
pop
int3
outsb
sbb
ss
sub
jge
lret
test
add
ss
sub
inc
jmp
je
xchg
mov
adcb
add
inc
inc
mov
mov
or
stc
loopne
bound
int3
inc
arpl
dec
xchg
add
inc
push
je
outsl
jmp
je
insb
je
push
sub
or
rorl
and
dec
push
push
mov
loop
mov
into
shlb
sub
bound
mov
imul
push
mov
pop
xchg
push
mov
test
push
adc
sbb
outsb
jbe
subb
cli
mov
dec
in
xchg
mov
cli
imul
add
add
mov
or
int
sbb
jmp
je
inc
cmp
push
inc
cmovns
inc
push
call
in
and
andl
ret
sti
add
sub
adc
push
push
cmp
aas
lea
mov
pop
cli
inc
inc
in
and
fsubl
nop
jl
scas
push
adc
shlb
inc
mov
clc
mov
fdivr
sub
pop
xchg
ret
lock
adc
inc
pop
out
mov
cltd
inc
cmpl
in
xchg
sbb
loope
push
bound
mov
enter
mov
adc
add
mov
add
icebp
push
cld
fiadds
data16
push
popa
test
test
je
pushf
mov
jg
push
push
mov
test
adc
xor
and
mov
cmp
js
fcompl
xchg
or
pop
les
add
in
ljmp
icebp
mov
mov
test
push
dec
pop
mov
adc
outsl
pop
mov
scas
js
add
adc
jbe
call
mov
lea
cmp
rolb
lds
test
mov
xchg
inc
push
dec
push
call
or
xchg
je
aam
or
or
lock
rorb
cs
inc
fisttps
dec
or
in
shl
push
push
mov
outsl
sub
inc
adc
xor
xchg
fs
mov
out
xor
pop
push
inc
jl
pop
scas
rolb
jne
movsb
aas
and
call
pop
test
add
inc
mov
ret
mov
xlat
fiadds
decl
daa
icebp
sbb
bound
or
pop
xchg
mov
fsubrl
mov
mov
push
enter
call
add
inc
mov
xchg
push
in
or
add
xor
push
add
imul
jmp
mov
add
roll
popf
pop
and
mov
add
call
inc
add
xor
mov
sarl
out
lcall
ret
push
aam
jne
popf
xor
sbb
mov
push
lock
clc
lods
push
sub
mov
mov
sub
push
imul
adc
mov
add
dec
rorb
add
sub
fcomip
push
jecxz
test
or
and
inc
jbe
mov
and
add
xor
ret
or
ret
sbb
imul
loopne
xchg
popa
cld
mov
or
inc
cli
pop
inc
inc
test
jne
dec
mov
xor
sub
je
sbb
ret
mov
add
out
dec
jge
add
stos
adc
mov
cmp
mov
pop
imul
inc
loopne
pop
aas
push
push
js
xor
xchg
fidivs
inc
or
and
pop
jg
push
jmp
mov
out
mov
inc
cltd
push
adc
dec
pop
rcrb
test
xchg
mov
test
push
sub
xor
adc
popa
int3
ss
cli
sub
cld
dec
clc
rorl
fcomps
mov
in
dec
inc
mov
mov
aam
cmp
movsl
dec
loop
ja
mov
scas
mov
data16
jg
pop
dec
mov
cmp
jmp
rolb
test
jne
test
call
jmp
inc
push
sub
and
icebp
pop
inc
jecxz
cwtl
test
and
hlt
incl
xchg
dec
push
or
mov
mov
adc
xor
aaa
jne
ljmp
dec
movsb
cs
sti
sbb
push
inc
in
jne
lea
cmp
ror
mov
mov
cmp
mov
add
loopne
jl
jmp
shll
mov
push
inc
push
jl
push
fisubrs
cmp
push
mov
cmp
and
push
icebp
fisubrs
xchg
jle
pop
std
or
sub
push
mov
pop
pushw
cmp
fld
inc
adc
test
inc
xor
fsqrt
or
cmp
pop
pop
and
lock
jmp
pusha
sub
rolb
movsb
and
mov
cltd
testb
push
xorb
lahf
lock
enter
enter
lds
outsl
loop
cmp
xor
dec
mov
or
cld
pop
jno
mov
rcr
cmp
fildl
dec
pop
mov
xlat
dec
push
je
pusha
inc
mov
jl
cmp
ret
lods
inc
add
push
mov
lock
inc
das
rolb
jle
aaa
xorb
popf
rcr
dec
or
mov
push
or
jg
sbb
push
bound
leave
stos
scas
cmpsb
or
es
lock
outsl
addl
mov
mov
jge
mov
addb
rorb
inc
mov
add
jge
add
rcrl
xor
jo
movsb
stos
adc
mov
adc
stos
or
in
and
mov
test
xor
inc
std
aas
mov
hlt
adc
cmp
sbb
push
out
add
ljmp
pusha
push
dec
sti
test
adcl
fadds
mov
mov
jb
rol
movsb
out
call
mov
mov
call
push
les
shlb
mov
mov
sub
add
add
or
pop
cld
push
push
rcrb
xor
pop
push
data16
or
cmpsl
dec
into
add
mov
fildll
mov
push
dec
sub
inc
inc
pushl
adc
xchg
dec
aam
push
jl
in
mov
idivl
sbb
jmp
add
je
ljmp
pusha
rcrb
sbbl
xor
pop
mov
add
mov
mov
adc
cmpb
push
jo
or
int
dec
les
mov
daa
int
jmp
xor
jne
cli
dec
push
pop
out
cli
jl
incb
mov
inc
lock
push
data16
int3
mov
mov
mov
outsb
or
pushf
in
or
mov
nop
and
call
ret
fmull
sbb
jp
inc
call
push
mov
mov
rorb
dec
push
and
sbb
push
lock
push
cmp
add
mov
inc
sub
popa
xchg
and
mov
sbb
decb
pop
inc
add
inc
enter
ss
and
jecxz
nop
std
addb
ret
or
jo
out
dec
or
sbb
rcrb
add
aaa
push
dec
in
mov
jne
inc
mov
mov
test
cmc
pop
gs
out
xorl
test
aam
fmulp
pop
mov
mov
mov
pop
or
pop
loopne
ljmp
mov
fcompl
or
lcall
addl
xor
mov
xor
push
int3
or
push
and
ds
fdivl
stos
xchg
enter
add
leave
add
test
add
test
sbb
and
and
sub
jmp
data16
popa
sbb
jecxz
clc
stos
insb
stc
or
sbb
cwtl
push
mov
jg
or
sub
repnz
mov
pop
pop
movsb
pop
or
sub
push
pcmpeqw
xor
ljmp
sbb
imul
sub
movsb
in
lea
call
lret
shl
pop
adc
popa
aam
mov
mov
mov
rorl
push
pop
sbb
and
jne
or
in
test
fisttpll
ljmp
in
and
loopne
push
ljmp
inc
shll
leave
clc
mov
or
or
bound
cwtl
xchg
ljmp
pop
cmp
xchg
fsubrl
rol
cld
add
je
in
imul
stos
lods
xor
inc
lock
popl
or
fcmovb
mov
inc
push
jp
mov
mov
mov
fcoms
push
adc
sub
mov
dec
insb
out
push
push
dec
mov
shl
insb
mov
mov
ficomps
mov
pop
inc
or
stos
ljmp
mov
push
mov
and
lea
ljmp
fnsave
ss
mov
dec
test
hlt
sub
jg
bound
and
push
leave
adc
mov
mov
imul
mov
das
inc
clc
fwait
inc
rolb
ret
sub
sbb
imul
pop
pop
jo
int
push
or
insb
adc
scas
loop
push
mov
cld
lock
jo
sub
pop
fsubrs
adc
push
jb
mov
push
hlt
shll
test
xchg
lea
rorb
fists
in
sub
out
mov
cmp
jl
push
dec
adc
adc
adc
adc
push
or
adc
push
mov
lds
push
ret
loopne
cli
pop
dec
shlb
add
lods
inc
scas
or
rcr
xchg
out
sbb
add
jge
mov
xor
mov
loop
clc
push
mov
sub
push
mov
xor
mov
adc
pop
je
call
push
lret
pusha
push
test
fwait
xor
dec
mov
mov
out
test
mov
push
and
call
enter
jno
sahf
mov
mov
pop
pop
sbb
adc
xor
repnz
aaa
je
lock
xchg
cmp
pop
and
add
lea
and
test
add
jmp
dec
jne
loope
andl
test
clc
push
lods
pop
add
push
aad
mov
stos
add
pop
test
or
sbb
xor
sar
push
push
fildl
es
add
push
sbb
mov
push
mov
rcrb
sub
xor
mov
or
and
xor
lock
insb
idiv
les
das
push
cmp
and
test
jmp
enter
or
or
rcrb
inc
rcrb
lcall
adc
sub
or
hlt
jo
cwtl
int3
and
push
and
outsb
ljmp
push
push
jbe
pop
sbb
or
clc
cmp
fiadds
pop
je
push
xor
adc
mov
push
xchg
roll
jb
jbe
adc
or
nop
mov
sti
sub
rolb
xor
test
cmpl
lea
mov
fbstp
mov
sub
cmpl
icebp
rcrl
icebp
sarl
mov
inc
decl
data16
divb
call
pop
mov
add
dec
sbb
xor
push
test
push
mov
push
jo
loopne
stos
xchg
adc
ficomps
inc
mov
and
jo
das
incb
fs
add
dec
arpl
clc
scas
jmp
add
test
test
add
jne
push
jecxz
clc
shlb
push
sub
add
ljmp
adc
ret
push
pop
xchg
mov
jne
inc
push
xchg
rcrb
mov
pop
outsb
jge
mov
stos
pop
or
inc
and
lret
int3
inc
jne
ret
add
mov
mov
jne
or
inc
sbb
mov
les
push
xchg
out
xor
cmp
insb
add
push
loopne
into
push
inc
jmp
jo
leave
cmp
mov
cwtl
and
mov
aam
fmuls
fdivs
testb
pop
add
shl
or
shlb
fs
aam
jno
subl
sti
es
push
pop
push
or
add
scas
enter
push
or
jle
dec
in
in
adc
frstor
loopne
cwtl
push
scas
stos
mov
add
into
inc
lret
mov
mov
mov
mov
cmp
mov
jno
mull
sub
xchg
cmp
push
cmc
clc
mov
jmp
mov
add
or
adc
push
mull
sbb
rorb
mov
fists
scas
divl
mov
xchg
incb
mov
or
lcall
adc
or
push
into
jae
out
push
pusha
out
jmp
mov
pop
and
mov
sbb
hlt
addr16
add
mov
cmp
adc
and
out
or
fdivs
mov
call
sahf
cld
andb
mov
cli
push
rorb
adc
in
ljmp
xor
outsl
mov
sbb
cmp
mov
pop
cmp
stos
inc
add
ja
cmp
cmpb
mov
cmp
inc
xchg
jne
fs
ror
jmp
add
data16
clc
fists
pop
cmp
mov
inc
pop
loope
cld
inc
lock
jb
aam
and
or
sbb
cli
inc
dec
das
mov
jl
fadds
mov
mov
stc
enter
ljmp
add
outsb
or
xor
incl
cmp
loop
mov
push
cmp
addb
cmp
sbb
dec
mov
pop
adc
hlt
sub
jbe
dec
or
xchg
adc
sbb
ret
and
ret
lahf
test
bound
and
xor
add
pop
pop
loopne
out
movsb
and
cli
loop
test
sbb
mov
inc
add
cmp
jle
push
pop
pop
mov
adcl
test
mov
aad
inc
push
stos
imul
add
xchg
mov
add
push
into
fldl
jne
icebp
fsubrl
push
sbb
shlb
clc
mulb
add
rolb
es
rol
lahf
clc
sbb
std
push
mov
iret
fbstp
ret
clc
pop
ljmp
insb
cld
incl
out
xor
jns
ja
inc
cmovge
xor
inc
test
cmp
ljmp
leave
and
in
outsl
les
cmp
decb
decb
in
jg
inc
imul
inc
adc
call
cmc
pop
inc
scas
js
pop
and
int3
jl
gs
add
jo
xor
pop
or
mov
push
xor
fisubl
add
sar
in
inc
xor
shlb
add
jnp
mov
cmp
inc
pushf
mov
push
mov
fcomip
movsl
clc
leave
mov
xor
shl
and
add
jp
movsl
aas
hlt
insb
btr
dec
dec
sbb
in
lods
push
add
mov
mov
sub
mov
adc
aam
leave
test
sbb
mov
test
jle
add
pop
lret
fldz
std
jne
sub
js
xchg
mov
inc
dec
jae
andl
pop
cli
es
out
hlt
je
les
cld
adc
push
pop
cltd
int
pop
dec
std
mov
xchg
dec
sub
gs
add
cmp
std
lea
stos
sub
sbb
add
clc
lea
lock
sahf
xor
inc
cmp
adc
push
mov
call
fiadds
mov
inc
add
dec
cld
pop
cmpsb
push
gs
xlat
pop
cmp
clc
pcmpgtw
les
enter
lret
sub
test
push
pop
outsb
cmp
adc
jmp
test
out
call
or
mov
lcall
push
sub
jbe
cmp
jbe
mov
mov
fidivs
mov
xor
inc
gs
add
push
aam
rcrb
add
rcrb
push
push
cmp
mov
mov
push
and
je
test
sub
xor
or
les
mov
add
dec
jne
dec
loopne
lock
gs
mov
sbb
hlt
sbb
add
mov
pop
ja
push
cmpsb
cmp
fdivs
xor
mov
inc
push
inc
test
lock
add
pushw
out
jp
jl
scas
je
push
out
sbb
sbb
fisubl
cmovae
lods
push
fistpll
pusha
dec
lock
and
inc
jae
dec
xor
push
clc
inc
cld
push
clc
adc
outsl
lods
fs
orb
sbb
enterw
mov
stos
mov
inc
test
xchg
add
push
push
xchg
ljmp
jge
mov
mov
in
adc
adc
dec
mov
add
popa
dec
lret
cli
xor
cmp
sbb
cmpsb
lock
add
scas
pop
clc
sbb
mov
test
call
inc
add
int3
xchg
or
pop
int3
je
negb
add
inc
int
or
test
int3
add
in
add
bound
cmp
pop
cmpb
adc
imul
mov
fmull
sbb
imul
dec
jo
mov
out
xor
fildll
mov
cltd
out
rcll
xchg
inc
int3
push
cld
sbb
adc
pop
xchg
push
add
lock
sbb
mov
and
out
cmp
mov
push
mov
or
ret
mov
sbb
add
dec
and
dec
test
or
andl
inc
fcmovb
add
cmpsb
xchg
test
scas
adc
jl
jne
push
fdivr
and
or
in
data16
pop
ficoms
cmp
fcoms
inc
ja
popa
movsb
je
inc
lea
decb
mov
mov
fs
dec
dec
subb
or
and
or
in
and
sub
das
scas
add
push
pushf
enter
adc
or
mov
mov
ret
bound
xor
add
mov
sarl
xor
scas
xchg
adc
and
cld
add
call
stos
jae
jbe
cmp
cld
cmp
mov
fiadds
or
call
sbb
and
and
lea
mov
mov
lcall
fbstp
repnz
jns
sub
pusha
mov
int3
test
ret
and
jbe
in
sub
push
clc
cld
mov
rorb
mov
push
sub
xchg
or
xchg
loopne
rcrb
jge
dec
push
mov
cmpsb
and
arpl
mov
jnp
jle
call
loopne
call
mov
sbb
test
dec
mov
cld
xchg
mov
fisttpll
leave
dec
xor
insl
xor
cli
jb
adcb
sahf
add
cli
ret
sarb
test
sbb
clc
pop
popf
sub
shl
push
add
jb
push
xchg
pusha
lods
ss
arpl
test
test
xor
lret
and
cld
mov
lock
jp
ret
lahf
mov
mov
or
or
xchg
aam
and
mov
sub
sub
dec
mov
scas
push
sahf
cmp
sarb
ljmp
rolb
repnz
adc
fistl
aam
pop
push
push
pushf
movb
xor
das
or
push
jge
xchg
popf
push
add
test
imulb
enter
les
dec
sub
cmp
ljmp
pop
fidivl
fs
mov
sub
imul
push
inc
dec
add
push
imul
fidivl
pop
mov
inc
dec
scas
push
incb
nop
push
call
shlb
add
adc
xchg
mov
sbb
push
add
andb
ljmp
jne
dec
sub
and
add
pop
add
test
pop
push
mov
add
sub
divb
inc
xchg
mov
hlt
movsb
stos
or
rclb
pop
adc
mulps
xor
jmpw
andl
or
movsb
shr
push
hlt
je
xor
ja
js
call
adc
add
shl
test
pop
cmp
rolb
mov
and
push
inc
add
jne
mov
or
scas
loope
add
in
mov
jmp
xchg
test
push
sbb
loopne
or
aam
pop
adc
xchg
loope
jge
push
ret
stos
xchg
jo
cmp
test
scas
pusha
out
push
cmc
jne
testl
fwait
xchg
mov
cmpsb
int3
test
xchg
and
mov
push
and
xchg
cli
mov
add
cmpsb
loopne
jmp
jne
jb
out
inc
or
sbb
int3
adc
mov
clc
push
or
mov
cmpl
inc
roll
in
sahf
and
mov
ret
pop
mov
lock
cmc
sti
mov
pop
pop
push
sahf
popf
add
mov
fisttpl
xchg
les
add
not
xor
jle
adc
jp
ret
lods
dec
adc
pop
push
dec
or
lock
cmpsb
sub
flds
sbb
stos
dec
aam
sub
scas
push
mov
mov
mov
pusha
add
mov
adc
pop
subb
pop
mov
out
hlt
cs
pop
lods
ret
loop
jmp
jg
or
mov
insb
loopne
in
call
leave
aam
lea
lea
adcb
jp
xor
dec
inc
pop
rolb
pop
je
rcrb
es
add
nop
xor
lea
loopne
je
cmp
stos
and
ret
mov
fdivs
into
push
sbb
ljmp
mov
push
les
sub
sub
sbb
cs
pop
xchg
arpl
aaa
ret
push
lret
stos
dec
or
jl
adc
add
and
je
and
sahf
xchg
jmp
test
cmp
cmp
orl
mov
stos
sbb
outsl
xor
rolb
aam
pushl
pcmpgtd
xchg
adc
aas
sbb
scas
addr16
scas
xor
mov
andl
or
add
insl
lcall
jg
outsl
rolb
dec
jmp
sbb
xor
xor
push
mov
sbb
pop
cwtl
mov
sahf
xor
mov
cltd
es
popf
negb
adcb
in
mov
jno
mov
mov
test
lods
out
push
shlb
je
xchg
fisttps
mov
sbbb
cmp
pusha
rcr
jecxz
je
testb
jb
cmp
mov
mov
add
pusha
js
adc
rorl
jge
push
inc
jle
inc
jbe
jo
mov
mov
dec
push
sti
es
mov
int3
mov
test
mov
sbb
movsb
pandn
push
aam
andb
push
test
jl
xchg
push
ds
push
cmp
and
js
mov
lcall
mov
ds
in
sbb
cmpsl
fisttpll
jne
repnz
or
gs
jne
fadd
push
inc
and
sahf
hlt
jmp
std
push
pop
idivl
sbbl
inc
sbb
pop
ss
fs
push
sub
push
rorl
dec
aad
push
dec
call
mov
js
scas
dec
cmp
sub
data16
call
insb
fidivl
inc
jmp
aam
pop
decl
and
adc
push
or
pop
test
push
fsubr
mov
pop
push
outsb
cmp
adc
or
sub
pop
dec
call
inc
fld
aas
cli
jg
addr16
cld
mov
mov
lods
push
and
push
idivl
sub
lods
ds
loop
dec
xor
xchg
push
fwait
inc
add
in
or
mov
mov
popf
clc
or
enter
nop
mov
sbb
ljmp
test
add
inc
and
jmp
popf
test
pop
or
xor
and
pop
fsts
clc
sarb
push
fiadds
dec
push
sti
leave
cli
rclb
je
push
mov
xor
inc
pop
mov
cltd
add
les
ret
pop
aam
dec
xor
les
mov
push
push
mov
mov
adc
lret
mov
cwtl
popa
jne
mov
or
or
shr
in
pusha
sar
das
sub
mov
push
mov
mov
adc
out
push
or
and
pop
das
adc
jg
call
test
outsb
outsb
mov
xor
mov
into
lock
cmp
mov
ret
inc
test
inc
pop
or
jb
mov
adc
loopne
fcomip
mov
call
mov
int3
mov
sub
jp
xor
push
lea
fdivrp
push
inc
cmpsl
aam
loop
idivb
loopne
adc
icebp
popa
call
lea
mov
aam
xor
out
pop
jle
mov
lret
test
sub
lea
imul
push
dec
std
rclb
cmp
and
shlb
mov
lock
pcmpeqb
add
int
mov
adc
fs
imul
xlat
dec
stc
jle
or
sti
inc
adc
scas
xor
mov
sub
dec
and
insl
ret
pop
sbb
out
xchg
test
push
dec
cmp
jecxz
push
and
test
add
fdivp
enter
add
mov
sar
in
add
and
and
mov
mov
mov
xchg
cld
bound
sub
sarb
mov
xchg
fs
xorb
ret
rorb
mov
dec
fstpt
jne
call
lret
mov
mov
add
jl
or
lods
add
sbb
pushf
je
or
xor
je
dec
ret
xor
xor
inc
gs
imul
fld
and
dec
jbe
xlat
aaa
adc
popf
shlb
push
add
xor
jne
sbb
jne
push
push
or
xchg
add
cli
inc
mov
inc
push
mov
xor
mov
mov
out
pop
insb
rcr
bound
or
mov
mov
cld
or
rolb
mov
cs
fildll
testl
mov
add
mov
or
adc
shrl
mov
pusha
mov
push
incb
adc
add
mov
inc
jmp
dec
mov
cmp
rolb
and
in
movsl
ss
and
mov
push
xchg
push
data16
mov
xlat
pinsrw
xor
sti
pop
jmp
dec
mov
jbe
ja
fs
sbb
mov
aas
shl
and
adc
push
push
loopne
add
pop
insl
cmp
movsl
adc
rolb
lods
movsl
arpl
sti
movb
int3
and
ss
inc
mov
ja
jo
cmp
gs
cmp
loop
rclb
dec
fs
inc
loop
or
pusha
test
shrb
mov
xchg
or
outsb
in
scas
add
add
pop
fs
dec
add
lret
fdivr
cs
fucomi
fdivrl
or
dec
mov
xchg
pop
inc
xchg
je
lock
ret
push
xor
push
or
push
sub
pop
jecxz
outsl
push
sub
mov
xchg
dec
lock
sub
shrl
jb
add
fadd
mov
in
push
cmp
out
cmp
addl
inc
jmp
sub
cmp
push
jp
pop
ret
and
push
mov
aas
and
push
cmp
mov
dec
jge
loop
mov
mov
psubd
push
arpl
inc
inc
cmpsb
int3
mov
ds
cmp
xchg
cwtl
cmp
decl
enter
gs
dec
sub
sub
cmc
pop
incl
mov
pushf
add
inc
ret
push
ret
mov
les
shll
ja
dec
pushf
push
push
outsb
data16
pop
mov
lock
or
mov
pusha
clc
mov
int
pop
xor
orb
inc
mov
mov
xor
jns
push
aas
fs
xor
cmp
push
cld
jb
cli
push
scas
paddq
ljmp
jae
int3
adc
mov
fmull
ret
and
pusha
push
lods
add
ljmp
adc
xor
cmp
and
and
jbe
inc
ret
sub
ja
aaa
mov
push
dec
mov
aaa
incb
and
push
out
or
adc
xor
push
jno
mulb
pop
push
add
pop
mov
add
push
ret
mov
push
jl
dec
cwtl
mov
jecxz
rolb
xor
inc
add
movsl
and
mov
or
mov
mov
and
mov
push
rorb
in
adc
cmpsb
inc
push
mov
push
out
adc
lock
test
arpl
sub
fisubl
adc
sub
or
cmp
cwtl
pushf
add
and
sub
fsubrs
mov
and
push
ljmp
jne
pop
mov
adcb
adc
loope
pop
mov
fimuls
decb
sub
adc
jp
cmpsl
push
pop
adc
mov
data16
fwait
cld
jg
xor
cmp
lods
scas
pop
add
lret
lock
aaa
add
scas
mov
sub
and
loopne
push
rcrb
scas
sub
mov
pop
aam
nop
scas
js
and
xchg
es
and
ret
cmp
in
cmpsb
xor
pop
mov
pop
jae
mov
ret
movsb
shr
scas
cmpsb
outsb
lock
cld
push
js
sub
cmp
push
hlt
test
fwait
push
pop
sbb
lcall
mov
test
add
pop
sbb
inc
scas
cmp
mov
cld
add
jo
aad
subl
inc
dec
push
das
out
dec
mov
fiaddl
inc
lret
fcomps
cwtl
cmp
es
movups
inc
in
stos
incb
adc
rolb
mov
insl
pop
fisubrl
out
enter
subb
push
repz
inc
popa
loopne
fidivs
stos
les
jg
mov
push
or
das
push
and
in
fildl
fwait
pushf
jbe
lea
fidivrs
cli
xchg
mov
dec
jo
std
push
ror
int3
push
les
or
mov
xor
push
add
cmpb
xchg
cld
jg
orl
cmp
pop
jl
les
jne
jl
cli
mov
sub
std
loop
push
cld
stc
arpl
or
popf
adc
adc
test
and
sub
mov
or
fcoml
push
mov
aas
inc
xorl
test
call
pushl
outsl
mov
jge
xchg
rolb
inc
fs
dec
mov
push
add
dec
insl
stos
xorb
roll
jle
jne
jbe
jo
add
xchg
aam
shlb
mov
test
adc
lret
mov
mov
lock
mov
inc
out
popa
pop
dec
pop
push
aaa
pop
arpl
push
es
ss
or
cli
in
push
xor
into
call
addb
cmp
add
testb
xor
sub
incl
scas
test
mov
push
adc
aaa
lea
fdivs
mov
ret
xor
jne
and
jae
adc
dec
hlt
adc
lock
bound
mov
mov
jge
push
sbb
stos
xchg
cmpsl
and
xchg
push
adc
jp
jl
fnstsw
mov
dec
and
roll
sub
fiaddl
dec
sub
jge
movsl
jo
and
sbb
jg
push
test
mov
or
test
test
add
fcoml
push
inc
and
scas
dec
inc
or
mov
fidivrl
adc
or
add
sub
aaa
loopne
push
cmpsl
adc
and
mov
add
or
fwait
inc
cmpsb
subb
or
stc
fs
inc
test
xor
add
loope
xor
push
int3
xorb
mov
fwait
push
ret
call
sbb
out
and
clc
filds
bound
add
popf
xor
xchg
dec
adc
mov
inc
popa
in
sub
xor
sarl
stc
call
jne
repnz
mov
push
shr
mov
clc
or
and
sbbl
sti
imul
mov
or
jne
xchg
div
pop
dec
sbb
test
adc
ret
push
scas
cmpsl
cmpb
xor
std
push
mov
inc
pop
pop
test
test
cld
jne,pn
data16
push
lock
pusha
ret
or
jo
int3
mov
and
insl
add
in
mov
shl
add
or
addr16
jge
loopne
les
aam
mov
clc
adc
stos
rcll
cld
sbb
and
out
cli
aam
outsl
loopne
cmp
test
aas
inc
ret
pop
and
in
test
icebp
and
adc
jmp
add
mov
call
mov
cmp
sarb
xor
loopne
mov
and
pop
pop
push
jne
incl
adc
push
fldenv
sub
in
shl
in
pusha
sbb
adc
rcrb
push
sti
movsb
pop
sub
push
pop
hlt
mov
movsl
push
movsl
inc
or
adc
mov
mov
sbb
mov
test
or
les
test
push
insl
ret
imul
mov
aas
movzbl
fidivrs
mov
xor
cwtl
nop
add
movsb
mov
mov
dec
inc
mov
ret
inc
or
xchg
int3
ficoms
je
adc
adc
stos
dec
addl
or
stos
lock
aas
mov
add
or
push
sbb
add
and
sbb
clc
push
xchg
cmp
int3
xor
mov
mov
cmp
xor
add
or
xchg
frstor
in
inc
push
xchg
hlt
xchg
cmp
dec
mov
popa
jmp
lds
lcall
adc
push
gs
sti
outsl
in
int3
mov
sub
popa
outsb
mov
mov
dec
mov
push
add
leave
pop
and
cmp
bound
ficompl
and
outsl
pop
mov
mov
sarb
cmp
movsl
jg
lea
mov
lea
sub
mov
fsub
adc
ret
scas
clc
in
cld
adcb
shlb
or
andps
xor
xor
sbb
je
ja
lock
aaa
out
in
lock
testb
into
rolb
jecxz
and
ficoms
cmp
cmp
adc
push
mov
and
push
jmp
sahf
mov
jle
push
arpl
pop
push
lret
cli
cmp
mov
outsb
sub
xchg
mov
cmp
add
jge
mov
push
xor
mov
jb
sbb
jne
mov
arpl
inc
fwait
and
dec
je
bound
and
lret
push
rol
js
mov
bound
sbb
mov
and
cmp
pop
iret
jmp
es
push
push
addr16
xchg
mov
imul
pop
mov
outsb
out
xbegin
ret
mov
pop
dec
push
mov
mov
mov
cmp
sbb
rcl
movsb
add
cmpsb
fs
adc
cmp
mov
add
jle
mov
enter
push
ret
insl
call
dec
mov
push
dec
add
dec
mov
and
pop
loope
or
daa
cmp
mov
lahf
adc
pop
xchg
dec
pop
test
mov
or
cmpb
pop
jne
xchg
adc
adc
xor
cmpsb
fldl
popa
push
push
lods
fisubs
bound
mov
les
lret
xchg
or
stos
dec
push
and
cmp
outsb
dec
mov
cwtl
xchg
int3
call
sbb
std
je
mov
out
sub
les
in
push
hlt
cli
aaa
inc
jmp
jns
jl
mov
jp
xor
inc
jae
mov
clc
fdivrs
pop
cli
jne
push
xor
push
mov
je
cmp
adc
cmp
fmull
aam
sub
dec
xchg
mov
jbe
adc
inc
les
cs
mov
les
fistps
pushl
or
aas
lock
aaa
sbb
je
jne
data16
int3
into
dec
jne
loop
sub
bound
inc
xor
fdivr
lods
jmp
mov
rclb
gs
or
adc
cmp
pushf
sahf
and
fsubs
gs
add
and
add
aam
and
xor
call
lods
leave
sbb
stos
xchg
subb
push
aas
sar
push
jo
stos
lret
push
test
clc
jge
sub
dec
add
fdiv
push
loopne
inc
fildl
add
inc
lea
int3
or
enter
gs
fcomi
bound
mov
pop
add
mov
cmp
test
cmp
or
cmp
sbb
push
or
push
je
sbb
mov
inc
cmp
addb
fisubrs
push
inc
cld
push
jg
rcrb
mov
pop
add
addb
pop
xchg
xor
pusha
xchg
adc
repnz
jp
mov
pop
jo
stc
loop
jb
mov
mov
leave
sarl
test
push
jle
jp
and
push
shrb
clc
xchg
movsl
popl
call
mov
xchg
push
ret
into
or
or
ficomps
push
scas
push
insl
inc
cs
jo
push
lea
call
push
dec
call
repz
cmc
insb
imul
pop
arpl
hlt
sbb
push
push
aaa
jl
sbb
in
dec
sbb
ret
push
fisubrl
and
sbb
cmovs
lret
jmp
aam
mov
mov
lahf
xchg
addl
repnz
cld
test
mov
cmp
jmp
mov
mov
or
enter
movsb
sahf
imul
push
nop
add
out
push
xor
das
push
lret
shlb
test
pop
inc
push
sbbl
jb
js
sub
fsubrs
cmc
cs
jne
add
or
and
rol
push
and
mov
icebp
jne
cmp
pop
insb
fs
adc
loopne
pop
test
mov
hlt
rcrb
lods
jae
mov
push
dec
push
or
or
mov
lods
rolb
int
cmp
cld
mov
insl
mov
jns
xchg
ds
pop
lods
mov
rcrl
add
mov
nop
or
jne
lret
sub
loope
cmp
fcompl
shll
sbb
shl
pop
pop
xlat
cmpsb
je
js
sbb
xor
xor
push
shlb
rolb
adcl
stos
xchg
mov
sbb
repz
stos
in
fdivrs
inc
inc
sub
sbb
xchg
adc
stos
daa
jnp
dec
and
mov
dec
fbld
lock
test
loopne
xor
adc
test
shlb
stc
pop
xor
fdivs
push
aaa
test
mov
or
clc
gs
test
xor
in
dec
pop
push
sbb
outsl
adc
enter
enter
push
dec
sbb
cltd
inc
mov
icebp
xlat
les
mov
jne
div
incl
nop
aam
push
nop
push
cld
mov
jp
pop
cmp
jno
mov
hlt
addr16
adc
adc
testl
je
dec
mov
pop
push
idivb
fs
mov
int
movb
inc
test
sub
divb
or
fdivl
push
mov
add
mov
sbbl
loop
jne
ret
insl
push
xor
call
lcall
xchg
push
rclb
inc
das
rclb
sbb
xor
call
loopne
insb
mov
in
adc
push
fdiv
das
popa
mov
adc
dec
push
add
or
adc
inc
mov
jae
cmp
inc
in
mov
dec
les
ret
and
jae
mov
push
cwtl
icebp
sbb
int3
cmp
ljmp
test
cs
loopne
pop
js
stos
sub
adc
adc
lods
or
les
inc
loop
in
les
cli
inc
mov
inc
lock
aad
push
ret
mov
add
jmp
or
xor
xorb
es
ss
js
add
xor
mov
jmp
clc
mov
scas
push
outsb
or
and
adc
subl
int3
rcrb
ror
cmp
add
adc
fbld
adcl
mov
adc
mov
outsl
dec
incl
in
sbb
and
lods
dec
inc
adc
cld
test
test
cmp
or
mov
hlt
adc
test
mov
movsb
or
cli
lret
adc
lods
cmovp
mov
cwtl
aam
nop
add
mov
imul
ja
jl
jne
sbb
and
cmp
mov
mov
sbb
and
xchg
js
xchg
and
cmp
rolb
dec
inc
xchg
inc
inc
cmpsb
fnsave
hlt
out
int3
mov
insl
and
andl
push
sti
andl
fidivrl
and
subb
mov
loopne
ret
popl
xor
movsb
inc
lock
sbb
call
xor
mov
cmp
and
push
jmp
cld
inc
push
mov
and
cmp
rol
cmp
pop
mov
xor
iret
push
or
sub
xor
push
and
aad
in
rcr
or
dec
push
pop
mov
or
mov
adc
in
push
and
out
sbb
dec
jno
cmpsb
mov
ljmp
pop
xchg
mov
push
mov
das
hlt
mov
ljmpw
lds
fwait
mov
xchg
stos
test
mov
push
lock
rolb
je
mov
mov
push
sub
icebp
add
sub
pop
test
push
mov
je
pop
repnz
add
xor
fstpt
and
sub
icebp
imul
inc
inc
mov
arpl
out
xchg
push
or
xor
add
pop
jp
inc
scas
sbb
push
mov
push
mov
or
lock
dec
xchg
or
pop
jge
or
test
es
incl
std
xchg
lea
xor
ljmp
shlb
rol
push
es
mov
inc
and
inc
push
pop
sub
and
sahf
shrb
push
mov
std
xlat
clc
add
jnp
mov
insl
fsubr
sti
scas
adc
xor
bound
sbb
inc
psrlw
pop
mov
mov
adc
xor
sub
mov
or
call
pop
sbb
cmp
mov
test
out
cli
lods
movsb
cmp
repnz
xchg
sbb
dec
xor
cs
imul
aaa
stos
jg
push
jge
es
add
notb
sub
add
fidivs
mov
xor
jno
jecxz
ds
mov
xchg
pop
punpckhdq
and
popf
inc
imul
cmp
icebp
in
cld
incl
lea
pop
sub
add
cmc
mov
stos
xchg
ds
and
mov
xorb
and
ja
cmc
imul
adc
jg
and
test
or
data16
nop
lock
mov
push
mov
xchg
pop
sub
les
cli
sbb
push
pushf
push
mov
xorl
pop
push
sbb
mov
cmp
cli
pushw
jne
lea
pusha
or
rcrb
mov
stos
test
mov
lret
add
add
xor
cli
or
adc
sbb
idiv
xor
cmpsb
fwait
add
loopne
and
and
sub
or
adc
mov
dec
xchg
jp
or
xor
xchg
out
push
and
call
clc
or
push
inc
mov
inc
ljmp
xor
cmpl
loop
call
cmp
push
into
js
fdiv
mov
aam
adc
je
test
mov
int3
push
xchg
pop
adc
stos
icebp
jbe
dec
mov
ds
fsubrs
addb
cmp
fs
mov
int3
popa
fidivrl
cld
lcall
int3
es
or
std
inc
repnz
mov
inc
jecxz
rorb
call
cmp
mov
pop
add
cmp
add
mov
shr
fcoms
add
push
sbb
imul
pop
inc
push
in
add
mov
lods
push
push
add
in
xchg
inc
jp
ror
sub
ret
andl
or
mov
sbb
add
jbe
dec
stos
or
mov
loope
add
mov
rol
sbb
cmp
inc
xchg
xor
cltd
icebp
dec
cmc
push
mov
or
in
add
lock
xchg
scas
push
ljmp
lods
in
inc
sbb
xor
add
rorl
lcall
jp
mov
xor
mov
cmp
pop
test
iret
lea
xchg
insb
jne
mov
and
lea
or
cld
or
dec
pop
lea
inc
inc
pop
lea
ljmp
add
fwait
sbb
nop
int3
add
ljmp
pushf
xor
adc
or
or
loopne
pop
ds
ficoms
inc
sti
ljmp
in
scas
mov
mov
add
fs
hlt
and
mov
inc
pop
stc
xchg
nop
shll
pop
inc
pop
push
ret
mov
add
cmp
jge
pop
mov
mov
in
push
and
add
pop
jg
les
jo
mov
sub
cmpsb
lock
aam
rol
adc
fsubrs
mov
andl
adc
outsb
mov
enter
ret
ficomps
aaa
int3
or
jecxz
mov
scas
mov
test
mov
pop
sbb
mov
or
lcall
pop
test
and
clc
adc
pop
aam
add
notl
pop
mov
xor
clc
pop
jo
inc
dec
push
xor
cli
cs
shlb
xor
jp
stos
jmp
add
push
dec
jge
call
ret
shr
ficomps
test
mov
out
repnz
es
ljmp
cmp
sti
fisttps
sub
push
xor
notb
mov
add
push
bound
jecxz
push
dec
nop
adcb
test
test
loope
mov
mov
and
fs
test
inc
lock
pop
mov
decb
xchg
and
jno
and
xor
pop
ljmp
cwtl
add
daa
insl
mov
aam
pushw
dec
pusha
test
push
mov
dec
jmp
inc
and
movsb
cli
xchg
icebp
adc
jb
mov
mov
adc
sub
rorb
ljmp
es
call
inc
cmp
lcall
clc
pop
stc
pop
bound
sbb
push
loop
or
arpl
sub
repz
push
push
push
daa
xchg
das
aam
mov
jne
incb
sbb
dec
std
pop
adc
xchg
clc
sti
inc
nop
js
or
sbb
dec
inc
fcoms
rolb
outsl
push
cs
mov
cmpsb
adc
inc
pusha
add
or
cld
lret
xchg
and
mov
lahf
rolb
mov
sbb
push
cmp
shrl
cmp
mov
fisttpll
mov
out
pop
add
ja
sbbb
ds
lock
popa
push
cmp
add
into
mov
adc
fcomip
push
cmpsb
mov
jmp
push
push
xor
dec
repnz
les
mov
jge
cli
shrl
push
in
hlt
test
mov
es
movsl
js
xor
xchg
mov
mov
hlt
lods
push
push
rorl
ljmp
movsb
push
xchg
xor
xor
lock
xlat
push
fwait
loopne
add
dec
or
push
cmp
dec
ret
add
loop
jge
add
loop
test
push
orl
shll
inc
outsl
nop
xor
call
test
arpl
xchg
xchg
sarb
xor
std
inc
and
lock
cmpsl
push
dec
mov
jmp
push
sub
and
push
lret
cwtl
bound
rorl
lret
or
hlt
lret
mov
pushf
xchg
sub
enter
adc
inc
or
cmp
jp
adc
push
jg
add
sub
fcoml
adc
push
outsl
mov
scas
sbb
inc
and
mov
add
sbbl
ret
adc
xchg
fs
test
adc
push
dec
mov
pop
ret
bnd
sbb
dec
hlt
mov
add
test
lock
adc
loopne
clc
sub
cmp
push
out
fcmovb
loopne
add
outsb
leave
lret
dec
adcb
xchg
lock
xor
or
jl
pop
addr16
enter
loopne
movsl
add
pop
xor
add
push
lock
mov
out
push
gs
stos
pop
ja
jmp
sub
and
arpl
lock
inc
dec
daa
or
pop
fidivl
push
mov
inc
cmp
aaa
loopne
mov
pop
int3
cs
cmp
xorb
inc
mov
and
in
test
inc
mov
push
cwtl
or
subb
out
xlat
xor
adc
cmp
shr
push
mov
adc
mov
jle
lock
loop
jmp
push
gs
sub
call
xor
mov
clc
inc
jecxz
lea
sti
cmpb
scas
enter
cmc
jbe
std
push
sarb
nop
and
or
adc
rcr
fmuls
push
adc
pop
pushl
mov
dec
aas
inc
stos
setl
lea
out
push
adc
mov
sahf
adc
test
and
xchg
je
or
xchg
jge
and
ljmp
inc
inc
imul
push
lods
mov
enter
nop
dec
push
or
dec
cmc
clc
lcall
adc
jbe
inc
xor
sbb
push
incl
icebp
mov
adc
sar
std
leave
les
jmp
jl
mov
xor
xor
dec
jge
mov
sbb
mov
cld
pop
into
rclb
mov
in
outsl
pop
mov
ds
mov
mov
add
std
xchg
mov
push
sub
call
and
add
push
push
in
xor
push
nop
cmpsb
je
mov
out
fdivr
shlb
imul
inc
sub
xor
stos
icebp
xor
mov
dec
ret
incl
test
adc
cmp
mov
mov
aad
adc
push
jge
and
inc
add
xchg
inc
shr
nop
test
jmp
pop
addb
jl
mov
mov
push
cli
add
lea
enter
or
sar
inc
add
push
inc
mov
enter
sbb
out
mov
lea
pop
insb
sub
pop
rorb
repnz
pop
add
mov
add
or
notb
ret
cmpsl
mov
stos
adc
push
aaa
inc
push
sbb
cmp
xchg
loop
stc
rorl
adcb
cwtl
mov
add
adc
sub
stos
daa
cmp
call
jmp
jne
pop
push
stc
outsb
mov
cmp
test
xchg
mov
jp
mov
cmp
js
in
cvtpi2ps
mov
stos
push
push
lock
xor
fwait
jge
sbb
mov
aad
sarl
insb
movsl
inc
pop
fistl
push
pop
or
dec
fcomps
lahf
ss
jb
js
arpl
jne
rcrb
sub
nop
xor
xchg
les
xor
add
ja
dec
mov
movw
add
inc
push
bound
loop
add
mov
call
pop
test
ret
bound
inc
ret
dec
xor
clc
das
adc
mov
inc
push
adc
popa
incl
les
jle
push
addb
scas
aaa
xor
jo
outsb
movsb
in
movsb
xchg
pop
cmovs
mov
js
loopne
mov
pop
lret
daa
xorb
nop
push
xor
dec
pop
cmp
sbb
cmp
test
ljmp
add
cmp
mov
sar
mov
pop
adc
adc
dec
ja
inc
inc
sub
add
enter
inc
and
daa
lea
pushf
rcrb
outsl
cmp
jne
push
and
add
push
add
add
fmul
fs
mov
mov
inc
ds
call
mov
insb
add
pushw
sub
cltd
rcrb
sub
adc
mov
xchg
push
pop
mov
jnp
jno
setbe
sahf
add
fwait
ret
xlat
outsl
ret
cmp
push
incb
stos
out
inc
pop
or
inc
call
or
push
cmp
subl
fwait
loopne
push
mov
fmuls
add
hlt
ljmp
clc
push
pop
mov
fcomps
or
loopne
and
inc
inc
xor
jge
mov
mov
or
mov
or
cmc
mov
sub
mov
ret
adc
sbb
mov
adc
test
mov
cli
dec
add
sbb
inc
add
lds
lcall
mov
jle
outsl
aaa
lret
scas
xchg
jo
cld
popa
dec
pop
test
les
push
sub
gs
clc
shrb
xchg
jo
mov
js
adc
loopne
lock
or
push
roll
add
add
or
inc
jmp
mov
push
shlb
xor
jecxz
es
or
push
int3
or
out
pop
push
in
adc
mov
mov
add
mov
out
mov
inc
insl
xor
dec
jb,pt
addb
or
cmp
push
call
fcompl
dec
stos
push
adc
insl
add
sarb
clc
sub
add
or
sahf
mov
sbbb
ret
in
lea
outsb
call
add
adc
push
and
mov
imul
cld
mov
imul
dec
cld
mov
gs
dec
and
inc
add
sahf
sbb
jl
sbb
ret
dec
mov
je
push
jmp
mov
add
out
xor
mov
out
and
xchg
cmc
push
mov
das
jmp
ds
out
mov
je
push
push
fsubs
push
xchg
fiaddl
pop
cmp
or
xor
scas
and
add
stos
and
mov
js
xor
ret
or
push
xchg
sbb
insl
push
mov
outsl
adcl
loop
pop
inc
loope
xor
xor
call
loopne
dec
mov
adc
add
adc
mov
clc
icebp
or
cs
sti
push
dec
jbe
leave
push
fldenv
fisttpl
ret
jp
or
fimull
inc
or
movsb
rolb
orb
shlb
cmp
add
cmpsb
adc
adc
rorl
push
or
inc
in
add
enter
aam
orb
mov
pop
bound
add
repz
pop
inc
push
daa
shrb
pop
lret
inc
stc
inc
aad
cmp
lds
jae
ja
mov
or
in
sub
mov
clc
jge
mov
mov
jno
or
push
sahf
jmp
xor
dec
mov
gs
fadd
pop
lods
lcall
mov
inc
fs
mov
int3
push
std
sub
sbb
add
lock
pop
mov
scas
sbb
cmp
sahf
xorb
shrl
sbb
mov
cmp
jp
mov
mov
mov
sub
jb
sub
mov
nop
rcl
adc
sbb
adc
mov
rclb
in
sub
dec
imul
lods
xor
fidivrl
cmp
out
cmp
and
or
mov
jbe
mov
pop
sub
bnd
inc
test
cli
lock
popa
pusha
pushf
call
icebp
add
call
sub
cmp
sarb
les
fs
incb
scas
mov
ficompl
lcall
or
inc
add
mov
pop
std
inc
dec
pushl
cmp
jle
sarb
or
test
jbe
or
cld
add
inc
xor
int3
adc
cmp
or
xchg
inc
clc
xchg
test
mov
jo
mov
mov
adc
in
xchg
sub
in
aam
outsb
sti
out
push
pop
scas
je
xor
inc
cld
add
iret
adc
mov
xchg
std
and
and
inc
fs
enter
and
hlt
pop
rclb
inc
ret
inc
xchg
push
xchg
add
push
rclb
dec
sbb
ljmp
push
push
push
push
fdivrs
add
ficoml
mov
sub
sub
inc
pop
popf
rol
add
mov
in
in
add
lret
push
cmc
dec
mov
sarb
jb
lea
in
or
pop
and
data16
gs
pop
test
ret
ret
jg
mov
jbe
adc
add
pop
lea
mov
in
rorb
push
ficomps
loope
movsb
pop
fsub
orl
jle
sahf
add
mov
or
add
mov
rclb
ret
pop
test
sub
pop
cli
push
and
out
mov
xor
sbb
ret
dec
mov
ret
sbb
jo
add
and
rolb
sbb
add
inc
add
int3
mov
xchg
mov
jne
aad
int
and
mov
inc
inc
lcall
push
and
bound
hlt
shlb
sbb
xor
gs
filds
xchg
clc
test
push
icebp
sbb
fsubr
and
jl
push
les
scas
lods
add
shl
push
daa
aas
inc
in
adc
add
push
pop
add
push
and
dec
push
sub
mov
scas
arpl
pop
and
insl
addb
sub
cmp
lret
dec
divb
pop
mov
ret
inc
mov
inc
jno
movsb
push
sub
imul
es
fiadds
cld
inc
stc
jmp
cli
add
jb
in
dec
or
xor
pusha
mov
outsl
push
push
push
lods
pop
incl
dec
add
push
in
or
scas
sub
mov
sub
xchg
cmp
or
mov
cwtl
jp
leave
xor
cmpsb
xor
les
xchg
mov
rcll
push
fs
mov
add
add
fcmovnbe
cmp
cmp
mov
mov
mov
and
and
or
pushf
into
adcb
pusha
xchg
testb
inc
jp
ja
and
roll
mov
adc
mov
lods
je
and
jp
pusha
ret
jmp
adc
or
mov
call
dec
push
idivb
xchg
xorb
lret
ss
or
sbb
cmp
clc
iret
and
bound
or
push
inc
ficomps
dec
or
leave
jno,pn
lahf
or
out
cld
addr16
dec
and
inc
and
push
and
int3
push
js
imul
test
mov
adc
outsb
ret
iret
and
call
pop
nop
push
mov
mov
mov
jmp
int
mov
mov
shl
loopne
or
mov
enter
aas
jp
add
mov
dec
pop
pop
mov
and
push
xchg
rcrl
xchg
or
jmp
mov
addl
loopne
inc
ds
mov
mov
dec
or
rolb
outsb
out
fwait
je
fucomip
shlb
mov
and
pushl
push
cmpsl
fdivs
mov
ds
inc
imul
push
jnp
mov
into
jl
ss
lock
pop
lods
js
dec
mov
mov
adc
sub
or
adc
push
into
shlb
roll
fadd
xchg
fidivl
cmpb
arpl
fidivrs
pop
jle
test
icebp
adc
xchg
les
sti
inc
sub
stos
dec
clc
dec
inc
add
rcpps
stc
icebp
int3
adc
mov
mov
or
push
push
inc
jb
ret
mov
incl
outsl
hlt
mov
inc
adc
nop
test
add
jmp
lcall
push
jge
jo
idiv
mov
je
jne
insl
and
xorb
push
and
adc
jp
xchg
adc
add
mov
xor
sbb
sbb
pop
cmpsb
popa
pop
es
sti
int
xorb
pop
xor
mov
xor
push
jae
incl
adc
adc
cli
add
cwtl
shll
push
mov
dec
pop
inc
cli
mov
mov
mov
sbb
call
lea
mov
or
fcmovb
or
test
rclb
test
cltd
push
inc
popf
jmp
pop
cld
ss
jno
or
imul
fwait
inc
push
dec
shlb
mov
or
test
sub
push
fcomps
xor
add
clc
xor
mov
xchg
cli
ljmp
fdivrp
rcrb
pop
shlb
or
dec
jl
mov
mov
push
ss
or
xor
nop
fisubl
add
dec
jae
jbe
cmp
push
aad
sub
fstpt
leave
add
fisubl
popa
addl
call
lds
mov
call
idivb
xor
jb
pop
mov
push
push
pop
ljmp
xorl
inc
outsl
lcall
outsl
xorl
les
sbb
enter
jmp
xor
mov
scas
adc
adc
jb
cld
shl
push
or
imul
dec
jo
xchg
mov
wbinvd
cmpsb
cmp
mov
mov
sbb
and
dec
mov
loopne
or
cs
jge
mov
inc
punpckhbw
mov
js
flds
or
std
push
fsqrt
test
cld
popa
popf
mov
rcrb
adcl
jae
mov
adc
sahf
leave
push
ss
mov
mov
mul
pop
ss
dec
fcomp
mov
add
xchg
or
in
jg
mov
push
and
punpcklwd
add
daa
test
sbb
push
inc
cli
xchg
fadds
jo
test
mov
add
push
cmp
lock
hlt
rcr
sti
dec
push
xor
jnp
inc
add
ljmp
push
in
je
test
push
sbb
add
sub
push
add
pop
xchg
inc
sub
sub
or
inc
ret
inc
test
add
pusha
sbb
xorb
ret
imul
add
enter
and
lahf
mov
stos
mov
cmpsl
cmp
test
mov
inc
dec
add
xor
mov
gs
mov
cmp
mov
inc
mov
and
ljmp
aas
adc
stos
shrl
roll
or
dec
add
sub
call
fiadds
pop
cmp
or
lea
sbb
sub
in
rorl
rorb
or
hlt
jp
movsb
rorb
jl
leave
loopne
jbe
cmp
or
rorb
mov
pop
add
xor
push
sub
mov
mov
sub
xor
jae
pop
pop
sbb
mov
dec
xlat
int3
enter
sub
test
mov
aas
adc
rol
push
mov
test
sbb
mov
dec
aam
xor
cmp
adcl
insl
or
mov
mov
pop
popw
cmp
xor
inc
add
lahf
dec
cwtl
mov
arpl
jo
pusha
cld
or
je
mov
in
xor
icebp
inc
and
sbb
cmc
nop
sahf
stos
sub
mov
add
nop
scas
mov
mov
stos
out
xorb
mov
and
es
cs
or
insb
mov
mov
xor
stos
inc
aas
add
das
adc
mov
sub
pop
pop
rcrb
adcl
pop
int
inc
mov
push
insl
stos
push
mov
pushf
jl
push
out
rcl
lds
jl,pt
into
aas
cmp
loop
fldl
jo
mov
pcmpeqb
ds
sbb
mov
enter
sbb
adc
std
outsl
or
mov
push
pop
outsb
push
or
pop
fwait
xor
test
pop
out
xchg
mulb
pop
mov
test
std
lret
push
mov
cmp
call
push
jns
std
sbb
inc
mov
adc
test
push
incb
xchg
aam
mov
je
rol
xchg
push
leave
iret
fcoms
mov
mov
pop
fadd
movsl
and
push
or
and
pop
jne
lods
xchg
clc
test
inc
js
add
xchg
adc
add
push
mov
xor
add
jge
jecxz
test
outsb
mov
mov
jg
cmp
gs
je
cli
aas
dec
sbb
sahf
adc
rcr
push
loopne
repnz
enter
inc
mov
scas
in
push
mov
pushf
insb
inc
push
pop
cmpsb
js
cs
scas
loopne
subl
and
add
add
es
rolb
or
inc
dec
dec
jo
push
gs
inc
out
push
roll
lods
pop
fsubl
je
pop
mov
add
dec
into
inc
mov
mov
incl
and
cmp
add
sub
adc
sub
fmul
sbb
xchg
cld
or
sub
mov
adc
subb
loopne
es
clc
and
inc
rol
sub
xor
dec
push
stos
insb
loop
adc
pop
and
adc
add
add
adc
rclb
ljmp
adc
push
inc
mov
cmp
cli
inc
mov
mov
je
inc
xorl
adc
sbb
es
sub
clc
jne
cli
iret
dec
in
mov
bound
outsl
cmp
ret
jmp
sti
cmp
jmp
gs
rclb
insb
movsl
cwtl
xor
movb
loop
std
shl
mov
orl
xchg
push
xor
sahf
fcomp
mov
pop
mov
xor
fld
out
xor
ja
outsl
pop
mov
ljmp
push
sbb
call
nop
and
mov
or
push
and
sbb
inc
mov
or
lock
sti
adc
inc
push
inc
mov
ds
jp
bound
push
data16
outsl
dec
shlb
inc
jl
lods
popaw
jl
push
aaa
shll
xor
push
push
mov
add
add
cld
cmc
and
xchg
adc
pop
mov
insb
subb
add
jbe
xor
jae
call
and
orl
mov
test
mov
loop
mov
and
outsb
jge
sub
mov
push
stos
sbb
std
imulb
cs
cmp
or
shrb
sarb
jne
data16
shll
pop
nop
push
loopne
test
sti
outsl
adc
mov
std
pop
rolb
mov
push
push
and
adc
or
pop
dec
push
xlat
je
jne
outsb
xchg
push
hlt
ds
xor
mov
mov
inc
inc
idivb
mov
arpl
add
in
xor
mov
data16
dec
add
push
pop
cmp
push
mov
or
add
call
jb
fisttpll
arpl
sbb
mov
call
push
add
test
lock
pop
jo
ret
test
pop
dec
push
mov
xchg
test
mov
jmp
decl
pop
push
cmp
mov
jno
out
push
sbb
push
jnp
xchg
or
les
lock
insb
lods
add
enter
loope
cld
adcb
outsl
push
out
pop
push
inc
mov
mov
sbb
mov
ljmp
mov
sbb
or
bound
cmpl
cld
push
jge
ficomps
mov
inc
pop
pop
add
inc
jge
scas
es
or
cmpsb
in
add
sarl
fwait
test
push
jns
xchg
cld
lea
ret
lcall
inc
push
and
bound
out
inc
xchg
and
pop
int
push
gs
sub
das
mov
cmp
je
push
fs
data16
add
mov
xor
loope
es
xor
and
ljmp
mov
push
push
mov
jne
mov
in
lods
loopne
adc
cmp
addb
push
pop
add
loopne
cli
pop
ja
mov
xlat
shll
pop
and
in
inc
rol
inc
movsl
sub
enter
sub
bound
fsubl
inc
pop
add
loopne
xchg
pop
test
sbb
jl
outsl
and
pop
pop
loop
cmp
push
push
sbb
mov
push
in
adc
pop
sub
dec
mov
repnz
xor
fdivr
mov
cmp
hlt
cmp
dec
sub
or
cmp
sar
or
dec
cmp
mov
push
xor
add
and
sbb
bound
dec
fdivs
pop
mov
mov
out
add
inc
paddusw
test
jmp
push
push
push
std
int3
xor
mov
fstp
cltd
adc
inc
cld
sub
mov
pop
push
ret
test
fldt
and
inc
stos
or
push
imul
inc
dec
mov
jmp
xorb
mov
mov
add
loop
ja
rolb
inc
or
dec
shrl
add
push
mov
jecxz
or
adcb
sub
mov
and
sub
in
test
xchg
rcrb
ror
lcall
push
or
mov
push
xchg
out
xchg
sbb
ret
push
and
or
pop
div
clc
mov
inc
subb
ja
pop
cltd
fstpt
mov
test
add
cld
mov
je
pop
daa
add
cmp
push
cmpsb
incl
shll
and
push
jne
cmp
enter
stos
out
sbb
data16
or
stos
sbb
sarb
nop
sub
aas
fs
inc
data16
fcmovbe
fmuls
jl
mov
imul
out
aad
cmp
inc
int3
and
pushf
push
inc
add
cmp
xchg
xchg
in
inc
mov
pushl
push
ret
pop
sbb
test
add
es
fsubrl
mov
and
inc
sub
int3
pop
push
icebp
pop
pop
test
sub
testb
leave
movsb
loop
leave
inc
movsl
js
xchg
inc
or
nop
jg
push
add
cmp
scas
mov
arpl
cmp
into
loopne
pop
add
in
rorb
lds
rolb
mov
call
imul
mov
cs
mov
push
in
or
jecxz
pop
ja
ret
daa
cmovl
cli
gs
pop
shr
sbb
sbb
pop
cmp
adc
or
cmpsl
or
andb
pop
pop
add
adc
insb
sub
mov
jge
adc
test
add
push
int3
pusha
push
inc
push
fwait
or
je
or
pop
jae
ljmp
add
loopne
rcrb
add
scas
add
mov
mov
stos
mov
mov
push
aad
adc
sar
call
jo
std
mov
adc
psubq
or
jne
or
add
clc
pop
jmp
fs
adc
push
add
gs
cltd
jmp
inc
mov
aam
push
or
sbb
lock
mov
push
insb
ror
lcall
pushl
ljmp
shlb
pop
or
or
out
add
add
int3
xchg
nop
jo
in
add
mov
outsb
mov
dec
filds
mov
inc
add
add
fcmovu
scas
xchg
jbe
fadds
lods
push
inc
stos
xor
pop
outsl
into
test
and
mov
sbb
mov
mov
addl
dec
inc
sbb
fildl
xor
mov
fsts
scas
es
imul
sahf
push
clc
pop
fnstsw
inc
adc
inc
in
mov
fwait
add
in
mov
cld
sub
add
push
movsb
jo
test
mov
and
lock
dec
xor
fadds
fidivrs
loop
dec
sbb
xchg
sbb
pop
ret
mov
push
add
xor
pop
mov
cmp
xor
aaa
cmp
jo
adc
loopne
or
and
dec
fcoml
pop
push
pop
test
mov
adc
xor
mov
jbe
loop
ss
mov
fmuls
pop
adc
adc
stc
arpl
mov
test
shlb
cmp
andl
dec
xor
jle
cmp
addb
mov
push
fstpl
add
lcall
dec
gs
or
in
fcom
lds
divb
dec
inc
pop
fucomi
sub
sub
sbb
mov
push
loope
mov
insb
jl
adc
add
mov
add
pushf
adc
inc
insb
mov
mov
mov
js
andl
gs
mov
addb
inc
shl
and
mov
dec
arpl
aas
cld
or
add
sbb
andb
and
add
adc
movsl
insl
adc
sbb
ret
or
enter
inc
xor
jecxz
or
xchg
add
pushf
or
sarb
or
pop
push
arpl
mov
add
add
xor
jo
cmc
add
pop
addl
sar
mov
test
popa
xor
cmp
insl
inc
inc
pushf
mov
daa
cmp
xchg
xchg
cmpsb
insb
push
std
mov
int
jg
mov
add
jp
or
xchg
in
lock
es
and
xorl
std
aaa
inc
xlat
xchg
xchg
rol
lea
in
and
sahf
push
cld
dec
inc
movsl
sub
or
push
int
adc
insl
mov
hlt
leave
add
sub
daa
push
inc
cmpsb
cs
icebp
dec
xorb
aad
and
jmp
aam
cmp
mul
ja
cli
gs
data16
lea
lods
les
inc
and
push
sub
mov
aam
jbe
jbe
push
mov
mov
daa
adc
mov
push
and
mov
icebp
push
flds
loop
out
clc
inc
add
rcrb
sti
mov
repz
push
ret
dec
mov
lea
jg
outsb
test
jl
xor
dec
addb
xor
sbb
arpl
push
mov
dec
inc
test
dec
pop
adc
xor
push
add
adc
push
inc
or
dec
cli
and
add
mov
pop
xor
lock
push
rcrl
add
adc
lcall
mov
inc
push
repnz
out
aad
lret
sbb
pop
cs
shl
pop
push
sbb
mov
lock
mov
test
inc
nop
jb
int3
mov
orb
mov
fisubrl
push
inc
mov
es
cs
inc
insb
pop
lcall
sub
sub
cli
mov
cld
icebp
ja
hlt
das
js
sti
or
mov
sahf
cld
loop
jl
mov
mov
test
sar
mov
lods
cmp
mov
inc
mov
push
xchg
adc
aam
or
mov
inc
inc
jl
cmp
add
scas
pop
popa
loope
popf
push
inc
sti
add
lock
add
mov
or
pop
and
je
mov
add
add
push
leave
sbb
ja
sbb
nop
je
adc
lcall
jmp
sbb
ret
dec
pusha
and
sbb
jmp
push
sete
movsb
movb
lcall
pop
dec
dec
xorb
mov
cmp
jmp
and
ret
add
jle
addl
pop
mov
sbb
ljmp
jno
adc
cmpsb
dec
push
outsl
call
adc
or
and
js
mov
inc
xor
inc
outsb
or
rol
adc
jge
scas
cmc
loopne
cmpsl
mov
mov
ret
pop
add
rolb
dec
mov
or
mov
leave
lea
bound
mov
mov
mov
test
xchg
bound
adc
push
test
dec
popa
mov
call
jmp
in
movsb
pop
movsb
jmp
sub
mov
les
stc
stc
cld
popf
loopne
sub
jmp
loope
std
ficoms
lock
sub
push
ret
push
jbe
lret
mov
sub
iret
cmp
test
sub
push
cmp
loopne
inc
and
cmp
sub
xor
les
cmc
jmp
push
ret
and
cmp
shl
mov
int3
sbb
pop
jb
ja
insl
jmp
push
fsubr
gs
lea
mov
push
add
testb
or
testb
mov
or
mov
sub
lea
stc
jne
mov
pop
lret
push
mov
jae
and
je
mov
mov
hlt
bnd
mov
add
icebp
xor
mov
or
in
sub
pop
enter
sbb
hlt
jns
xor
jmp
testl
or
in
and
jo
push
cmc
adc
jnp
xor
adc
xorb
icebp
xor
in
dec
mov
sti
inc
lret
clc
cld
mov
cmp
jecxz
cmp
or
insb
notl
jae
jb
rorb
add
cmp
lock
and
xor
xorl
pop
std
iret
push
and
mov
xchg
les
lods
shlb
cli
push
jp
jl
cltd
or
lock
and
jbe
and
mov
jae
ja
rclb
or
mov
cmp
sub
or
pop
push
or
mov
push
push
push
or
push
mov
fwait
lret
js
mov
sub
js
cld
fnsave
aam
outsb
out
pop
pusha
jmp
inc
incl
hlt
rolb
sbb
push
bsr
popa
rclb
pop
mov
adc
xchg
push
jge
ficompl
pop
dec
jae
ss
test
icebp
pop
movsb
out
fidivrl
xor
jle
dec
test
pop
js
mov
push
leave
ja
inc
mov
cmp
cli
jp
mov
lea
js
add
mov
cmpsb
jge
adc
mov
cmp
lea
sub
adc
jne
cs
and
mov
mov
xchg
out
add
inc
jl
lret
push
aam
lock
adcb
bound
pop
jno
xchg
adc
jle
push
call
mov
aas
sbb
std
nop
and
push
jbe
ljmp
clc
push
adc
mov
je
mov
outsb
mov
add
xor
push
inc
cwtl
enter
push
clc
pop
sbb
pop
jle
dec
outsl
jo
mov
or
js
pushl
and
jecxz
inc
loopne
test
jg
repnz
sbb
gs
pop
and
dec
xchg
and
add
or
insb
xor
inc
jmp
sbb
mov
add
mov
inc
sbb
ljmp
aaa
xor
mov
fs
add
sahf
mov
or
cmp
lock
test
and
cmp
lret
mov
xor
jbe
in
nop
aas
adcb
nop
inc
and
xchg
test
inc
adc
add
call
addr16
ret
test
mov
mov
push
add
es
cwtl
push
adc
shr
out
sahf
cmc
mov
add
mov
test
cmp
mov
fcoms
pop
mov
jge
andb
sub
fistl
push
inc
rolb
ja
inc
rorb
mov
add
pop
shl
psraw
inc
mov
decl
cld
add
and
push
loopne
je
popa
inc
add
mov
cmp
lods
aas
movsb
add
jl
imul
inc
push
mov
push
add
cmp
pop
fdivrp
mov
stos
sbbl
mov
adc
xor
shll
test
push
sbb
fldt
cmp
add
mov
mov
push
sbb
push
adc
adcb
push
push
jmp
or
rclb
or
add
pop
mov
cld
call
xor
call
sbb
test
shll
mov
out
or
sub
push
sti
out
jg
and
xchg
mov
ret
pop
icebp
stos
mov
rcl
push
xor
mov
rclb
dec
out
push
dec
jge
cmpsb
mov
dec
xchg
aaa
push
sbb
leave
lret
push
jge
fistpl
pop
xchg
dec
aam
dec
add
aam
sarb
sbb
jmp
sub
push
mov
in
dec
fwait
jae
aas
int3
and
pushf
mov
inc
pop
hlt
push
test
sbb
jmp
sub
inc
adc
std
push
fs
xor
jnp
js
mov
add
add
push
sub
inc
loope
mov
test
or
sbb
push
js
push
rol
sti
dec
int3
std
pop
mov
adc
pop
je
stos
aad
test
int3
in
rol
xorb
lock
lea
add
fwait
mov
xlat
push
sub
insb
cmp
jg
push
or
mov
pushf
jnp
add
addl
stos
xchg
mov
pop
ret
insb
cmp
push
lds
mov
sub
push
pop
das
mov
mov
push
push
out
pop
jb
aam
cli
scas
test
dec
sbb
cmpsb
lret
add
cmp
call
dec
cs
inc
and
loopne
xchg
inc
cwtl
popa
lfs
inc
cld
and
add
add
std
ret
mov
lret
jne
inc
mov
ljmp
mov
inc
mov
loopne
cld
dec
int3
push
sub
xor
stos
in
gs
jecxz
subl
das
sub
xchg
addb
mov
das
add
lock
fadds
aam
xchg
push
cwtl
jo
xchg
ror
cmp
xchg
test
lds
out
pushf
mov
or
notb
jmp
bound
fidivrl
mov
push
xor
add
push
popf
adc
cmpsb
js
mov
mov
jne
cltd
mov
iret
lea
and
test
shl
adc
ljmp
jns
fildl
and
sarl
xor
ss
das
or
cmp
sbb
mov
push
loope
push
aam
sti
cmp
sbbb
push
bound
test
push
and
loop
pop
rolb
mov
add
data16
adc
mov
inc
push
out
jnp
lret
pop
inc
rcr
mov
les
push
std
dec
ljmp
sub
jge
ljmp
outsl
adc
cmpl
in
push
inc
cld
adc
int3
pop
seta
std
mov
enter
mov
push
ret
jns
stos
adc
and
lods
dec
inc
cli
call
push
xchg
sub
loop
jmp
pop
fs
jno
pop
inc
jne
mov
mov
xor
aam
push
jl
lods
ficoml
or
push
outsl
dec
mov
rol
mov
test
adc
shr
fcompp
push
xor
scas
enter
js
mov
decl
mov
or
je
pop
xchg
cmp
add
addr16
xor
xchg
ret
push
adc
sub
push
ljmp
aaa
add
adc
loope
inc
adc
aaa
xchg
xor
push
mov
add
sub
loope
test
mov
mov
add
sbb
jne
nop
sbb
adc
sbb
pop
dec
mov
lea
mov
shl
mov
push
test
flds
mov
sbb
sbbb
or
push
add
movsb
cmp
hlt
rolb
pop
add
jo
sub
fadds
xlat
mov
jb
sbb
in
decb
add
add
jl
adc
js
inc
and
jmp
and
sbb
add
jle
cmp
dec
outsb
jne
jmp
xchg
inc
mov
mov
pop
sbb
ret
cmp
lret
pusha
jmp
ret
dec
push
pop
cld
pop
ljmp
push
jecxz
test
inc
fmuls
test
sti
je
icebp
inc
loope
cld
sarb
cs
enter
and
cmp
and
dec
lcall
les
mov
xor
lea
loopne
test
sbb
push
call
mov
and
mov
cli
rclb
pop
sub
xchg
fisttpl
out
add
pushf
fimull
add
adcl
test
adc
push
lret
sub
push
add
imul
and
and
push
adc
inc
mov
rol
es
adc
mov
stos
mov
cli
inc
les
adc
jae
bnd
mov
daa
loopne
shrl
mov
or
adc
jecxz
ret
mov
and
scas
addb
mov
lods
push
xchg
dec
idiv
sbbb
call
pop
add
push
sub
icebp
mov
mov
test
call
cld
sahf
hlt
add
jp
jmp
cmpsl
cs
mov
cmovo
lods
and
std
js
test
inc
mov
cli
fldl
xor
pusha
fldt
inc
pop
outsb
xchg
das
stos
xchg
pop
rol
dec
and
push
sbb
into
leave
xorl
xchg
adc
lock
add
and
inc
and
adc
and
idiv
movsb
mov
paddsw
mov
shl
sbb
loope
ljmp
dec
out
mov
int3
add
mov
inc
pushf
out
sbb
cli
add
mov
xor
jne
xor
sub
mov
mov
ja
movb
sti
in
push
fcmovnb
fcom
js
sub
gs
fdivrl
dec
inc
js
mov
imul
testb
mov
cli
sub
inc
les
es
pop
mov
ss
sti
aam
cmp
out
mov
test
ja
rcll
xchg
or
xor
push
sbb
lcall
mov
test
push
jmp
fs
insl
mov
dec
cmp
xchg
cmp
push
adc
dec
cwtl
stos
adc
rolb
dec
faddl
fmuls
sbb
test
push
mov
mov
and
add
mov
dec
mov
addb
je
fcomps
leave
mov
mov
pop
mov
rolb
test
add
and
push
dec
mov
jo
sub
rcr
ds
cmp
movsb
cmp
mov
cmp
add
mov
cmc
fsubl
lock
push
add
shl
out
adcl
mov
pop
sub
rcrb
sub
push
stos
and
pop
mov
push
push
push
icebp
inc
mov
push
subl
out
add
pop
push
mov
add
scas
jne
test
jg
push
popa
fsubl
pop
dec
mov
jl
fidivs
mov
mov
popa
mov
je
mov
rcrl
push
push
imul
ret
pop
popa
mov
fidivrs
xor
cmc
sub
mov
loop
pushf
loop
push
sbb
scas
xchg
xor
push
or
sbb
cmp
roll
test
mov
jle
jle
push
test
xchg
aam
push
js
pusha
mov
cld
xchg
jg
pop
adc
add
jae
cli
lea
es
jb
rcr
fbstp
push
inc
sti
sub
lock
cmp
mov
inc
sub
xor
stos
dec
pop
repz
lea
nop
mov
add
push
addb
ret
movsb
mov
mov
jb
and
sub
lcall
in
add
push
aaa
ss
rorb
lret
mov
mov
scas
jle
dec
or
or
fistpl
mov
sbb
mov
movsb
incl
mov
verr
lea
add
push
lock
push
or
xorb
push
sete
cli
stos
inc
faddl
push
mov
adc
and
ret
sbbl
hlt
nop
fcoml
add
add
and
std
or
incb
movsb
movsl
push
push
cli
es
inc
in
mov
inc
sub
dec
inc
add
and
adc
sbb
cmp
push
dec
add
mov
inc
push
sbb
cwtl
dec
out
push
cmp
inc
sarb
xchg
push
pop
jo
mov
lock
mov
inc
jno
push
cwtl
movhlps
inc
push
pop
add
xchg
inc
inc
fs
repnz
xchg
clc
ja
add
shll
xorb
push
repz
adc
pusha
mov
jmp
lock
leave
dec
add
push
fsts
adc
jecxz
jno
outsb
bsf
dec
les
jb
decl
cld
fnstenv
mov
pusha
call
cli
call
inc
out
adc
mov
push
inc
je
dec
icebp
adc
incb
xchg
arpl
test
scas
xor
xor
cmp
je
dec
dec
enter
sbb
mov
sbb
pop
xor
or
or
mov
aaa
mov
mov
sub
pop
inc
jle
adc
hlt
dec
ljmp
inc
and
mov
into
jo
sbb
mov
lods
dec
sub
pusha
push
mov
or
stos
je
mov
jp
test
test
je
xor
adcl
or
call
jns
pop
push
std
jp
xchg
inc
inc
stos
or
outsb
popf
lock
fcoml
jo
sbb
dec
pusha
jl
push
js
cld
fisubl
push
ror
adc
inc
fisubl
test
cmp
orl
pop
addb
cwtl
mov
inc
lock
loop
mov
pop
xorl
in
repnz
int3
push
fs
popa
enter
mov
and
add
in
leave
mov
into
push
xchg
add
adc
rcll
push
add
outsl
mov
out
adc
shrb
repnz
imul
add
jbe
mov
js
inc
cld
movsb
scas
int3
xchg
cli
das
mov
les
push
cld
sub
sbb
bnd
mov
dec
mov
xchg
sub
mov
loopne
sar
fisttps
xchg
pop
mov
lock
inc
imul
sub
jo
or
jle
and
std
lcall
ret
fdivrp
inc
sub
push
push
or
mov
imul
stos
xor
in
out
fs
in
nop
clc
inc
aam
cld
orl
sub
shrb
push
xor
enter
add
scas
inc
cmp
xor
je
call
and
add
or
js
incl
dec
jb
call
push
and
lds
aam
mov
fcoms
xor
mov
adc
rcl
and
in
inc
or
push
fidivs
push
xchg
fs
jae
xor
pop
cld
pop
js
jle
add
je
xchg
jno
add
ret
xor
jl
pop
iret
push
mov
sbb
popa
in
ficoms
or
stc
cs
adc
insb
push
gs
adc
push
mov
push
xor
xor
outsb
cmp
clc
jg
lock
pop
xorl
clc
mov
cmpb
enter
mov
xorb
test
inc
sub
push
adc
mov
pop
mov
and
dec
bound
xchg
adc
gs
sub
pop
test
rcrl
mov
xchg
fisubrl
imul
sub
decl
adc
and
loope
sarb
adc
sub
mov
mov
fs
mov
test
jp
fiaddl
and
int3
jp,pn
and
addr16
data16
std
aaa
cwtl
testl
inc
add
cmp
nop
push
scas
inc
push
push
lock
xor
push
push
data16
pusha
out
clc
psrad
mov
pcmpeqd
mov
out
xor
and
dec
aam
adc
add
in
jg
jle
push
mov
inc
test
xchg
inc
and
outsb
filds
xor
and
add
cli
inc
les
mov
xchg
loopne
or
popf
push
cmpsb
cmp
mov
cmp
mov
xor
sub
adc
imul
mov
mov
shrl
inc
add
mov
or
push
lahf
inc
push
mov
pop
push
sub
mov
fs
mov
lock
mov
sbb
cmpsb
popf
sub
jecxz
aaa
and
jb
andl
push
push
lock
les
icebp
bts
adc
push
sahf
pop
popa
inc
int
xor
or
aas
xor
jae
and
sbb
sub
add
lcallw
add
push
add
xor
sub
mov
pop
xor
aam
movsl
cmp
or
sub
xchg
push
cmp
mov
jmp
in
rcrb
fdivrs
cmp
add
aam
push
pop
pop
cmpsb
push
adc
pop
add
insb
xchg
adc
repnz
mov
loope
push
cltd
sub
idiv
inc
adc
xchg
push
ret
sbb
out
adc
xchg
out
lea
mov
sbb
loopne
bound
add
jmp
adc
rorb
subl
insl
mov
jb
push
mov
dec
push
mov
sbb
jmp
sub
clc
sti
sbb
add
out
fsubrs
loopne,pt
fld
push
test
out
fldcw
out
sarb
les
je
mov
sbb
call
xchg
and
not
adc
adc
adc
out
push
orl
or
push
push
xorb
dec
sbbl
and
pusha
or
dec
decl
ret
enter
add
gs
sub
sbb
sub
add
lcall
xor
xor
mov
push
mov
std
or
fdivr
dec
notb
sub
shl
sbbl
hlt
adc
xor
nop
xchg
add
mov
jo
adc
sub
data16
mov
test
jbe
ds
incb
aas
dec
or
xchg
ret
ret
dec
jecxz
rolb
dec
inc
cmp
js
lret
cmp
fists
lods
cli
outsl
jp
rcrb
push
adc
in
or
shll
mov
bound
ficoml
mov
jne
or
shrb
in
les
fsubr
aam
xchg
js
jp
mov
mov
push
mov
adc
pop
cs
cld
repnz
les
mov
outsb
inc
data16
rclb
push
cltd
outsb
xchg
mov
rclb
mov
aaa
lret
mov
adc
cmp
xor
lahf
outsl
inc
push
cmp
aam
in
push
sub
inc
shlb
movl
or
ljmp
dec
mov
ljmp
je
or
leave
pop
shlb
sub
mov
xchg
add
gs
fcmove
or
dec
jo
mov
mov
inc
lret
jmp
cs
mov
loope
pop
jl
cmpsb
test
fimuls
aas
mov
std
or
jo
test
mov
lea
jbe
cld
add
imul
aas
in
aam
daa
push
sahf
stc
mov
add
sbb
jmp
dec
andb
push
repnz
icebp
push
cli
or
add
subl
ss
cmp
outsb
ljmp
pushl
pushl
dec
aas
or
dec
xor
ror
nop
jge
push
ss
cmpsb
xor
dec
fs
mov
mov
adc
inc
stos
add
push
into
loopne
inc
popf
test
in
sub
sbbl
xor
cwtl
add
insb
dec
push
inc
fsubs
jbe
mov
add
in
mov
ret
filds
jb
das
mov
stc
mov
inc
dec
add
in
mov
es
mov
cwtl
call
lcall
push
movl
cmp
les
cmp
int3
rorb
test
sub
jbe
pop
test
cmp
call
or
jae
mov
xchg
rclb
jmp
xchg
mov
sub
aad
aam
shrb
cld
mov
push
add
or
loopne
pop
test
inc
scas
lods
adc
aam
loop
sbb
ret
xchg
push
inc
mov
inc
inc
fdivs
add
add
movsb
xchg
in
mov
add
mov
test
out
je
sub
ja
fldl2e
stos
mov
dec
push
ficomps
clc
movsl
mov
dec
inc
test
cmp
pop
insb
dec
jb
pop
ret
add
mov
cld
scas
fbld
mov
lock
movb
xchg
add
add
mov
cmp
inc
dec
lea
decl
test
pop
ret
adc
xchg
lret
mov
data16
flds
out
xchg
rorb
push
sub
je
fistl
das
dec
pop
mov
xchg
add
loop
aam
std
mov
out
push
stos
in
fbld
sub
arpl
xor
pop
inc
mov
test
add
filds
pop
cld
inc
call
inc
popa
aam
sub
mov
cmp
pop
clc
sarb
jecxz
bound
shr
fnstsw
cmp
adc
push
fimull
lock
jne
orb
sub
das
sbb
jne
icebp
rclb
mov
push
push
jmp
cmc
cmpsl
cmp
andl
mov
xor
jl
in
stos
jp
sahf
ss
dec
fcoms
gs
addl
jb
test
sub
xor
ljmp
lock
add
push
mov
mov
or
fiadds
js
add
sbb
push
xor
or
push
sbb
xor
and
outsb
and
add
add
xor
jg
fcomip
aad
sub
fstpt
mov
nop
shll
jb
mov
add
mov
and
arpl
ficoml
jecxz
mov
in
xchg
ret
cmp
sti
push
sbb
rorb
cmpb
add
jmp
jp
lock
cli
dec
cld
sub
push
jg
sub
cmp
or
push
fadds
mov
fildl
cld
clc
js
cmpsb
cmc
jmp
jle
les
ljmp
mov
movsbl
mov
adc
mov
movsb
sub
loop
push
pushf
push
hlt
sbbl
scas
mov
jnp
std
or
or
cmp
sub
repnz
das
es
je
push
fdivr
xorl
test
add
fildl
nop
jmp
jbe
stos
push
gs
push
mov
mov
mov
inc
cmp
int3
xor
sahf
je
and
jmp
loop
push
into
lods
in
insb
jno
add
out
ret
inc
add
int
outsb
je
les
jae
gs
adcb
sbb
adc
sub
ficomps
inc
cmp
inc
mov
push
pop
mov
add
jl
or
das
gs
xor
pop
mov
push
nop
clc
mov
pop
add
inc
xor
push
add
push
push
jnp
inc
rclb
test
test
test
sub
lock
sarb
sub
cmp
mov
mov
mov
mov
adc
push
adc
sti
inc
addb
insb
negb
hlt
insl
stos
add
loopne
incl
fadds
in
cmp
sub
jmp
enter
leave
daa
pop
mov
add
jne
fcompl
pop
lock
lret
and
sbb
pop
add
push
adc
test
jbe
adc
enter
push
inc
lea
les
pop
test
insb
xor
pop
loope
cmp
xchg
push
dec
mov
fcompl
sahf
clc
add
decb
bswap
lea
inc
xchg
addb
or
cli
roll
sbb
add
lea
or
xor
mov
pop
ret
xchg
mov
inc
aam
dec
rorb
in
mov
icebp
pop
add
lea
jecxz
es
jle
sub
adc
cmp
xor
out
call
movsl
pushf
out
cmpsb
movsb
sub
adc
dec
jne
clc
or
clc
insb
in
cmp
cs
ret
dec
and
shrb
cmp
dec
inc
pop
push
lock
push
nop
rolb
leave
sbb
pop
clc
outsl
xchg
sbb
les
fs
in
sbb
xor
mov
ret
jnp
or
mov
icebp
stos
adc
test
in
stc
and
push
mov
cwtl
cmp
mov
stos
adc
cld
rorb
and
call
repz
jmp
lods
pop
cld
loope
push
out
xchg
mov
xor
outsb
xchg
fisttpl
std
inc
rolb
mov
pop
jbe
push
inc
in
sahf
xchg
cs
test
in
aad
sar
ficoml
pop
inc
sti
rcrb
add
hlt
mov
adc
adc
cmp
mov
hlt
dec
insl
test
mov
mov
test
sbb
ret
mov
xor
loop
xchg
lock
rcrb
subb
sbb
fs
faddl
adc
es
or
jmp
gs
test
scas
inc
test
cmp
add
jl
and
or
mov
faddp
pop
loope
dec
xchg
sbb
gs
sub
repnz
addb
call
lods
sbbl
call
aaa
lcall
es
ret
les
sub
add
push
icebp
inc
pop
push
mov
loop
dec
leave
inc
mov
fcmovnbe
inc
mov
xchg
push
mov
cmp
jmp
hlt
push
adc
and
cmp
sub
add
mov
add
arpl
stos
cmp
je
mov
sub
jb
mov
das
dec
call
je
inc
inc
cld
push
adc
mov
int3
bound
cmpb
in
data16
adc
cld
mov
stos
add
cmp
xchg
dec
rorb
rclb
or
add
movhps
and
sub
cli
lcall
jns
mov
sbb
jbe
mov
clc
popf
insb
dec
scas
notl
mov
in
test
inc
add
lods
aad
cli
or
icebp
aam
sbb
push
inc
dec
or
cmp
hlt
pop
into
in
jne
or
cmp
inc
jmp
imul
fwait
cld
lock
push
mov
mov
push
test
mov
mov
pushf
fs
mov
sub
insb
push
cld
stos
cmp
push
js
cmp
add
mov
push
cmp
cmp
inc
sub
mov
xor
pop
inc
out
test
mov
push
icebp
add
cmpl
cmp
fnstenv
out
xchg
daa
jl
push
push
add
push
incl
rcr
push
add
push
jnp
pusha
test
inc
mov
les
and
ds
cmp
mov
add
inc
push
xor
add
sarb
sub
jmp
outsb
xor
lods
pushl
or
dec
decl
fsubr
mov
add
jg
mov
jl
jne
inc
add
xor
call
inc
jecxz
lock
push
xlat
push
sub
mov
out
shrb
andb
and
push
inc
fcoml
out
pop
gs
add
inc
fcoml
mov
adc
mov
cmp
mov
mov
stos
fnstenv
mov
pusha
outsb
adc
orl
jle
mov
aas
mov
pop
mov
pushf
std
insl
test
mov
clc
cltd
sbb
or
xadd
or
and
sbb
adc
scas
ss
mov
add
jo
adc
xor
mov
pop
cmp
or
shrl
lcall
jb
cmp
cmc
xorb
ret
movsl
gs
popa
and
cmp
push
inc
shll
add
or
imul
ss
add
ret
xchg
rclb
inc
imul
loopne
adc
jecxz
push
push
add
pop
mov
xor
add
xor
arpl
sub
dec
mov
sbb
fsubrl
pusha
sbb
fsubp
nop
ds
adc
inc
loopne
pop
mov
call
cs
add
les
loopne
xchg
dec
cmp
jge
push
jb
cmpsb
icebp
or
pop
inc
cvtdq2ps
push
or
ret
push
loop
sub
jle
cmc
lret
sub
push
stos
nop
push
std
pop
pop
sbb
jg
mov
jp,pn
repnz
int3
cld
or
mov
loop
push
sub
sbb
jae
sub
xor
lea
push
cli
out
std
push
je
insb
leave
xor
xor
dec
xchg
mov
cvtps2pi
pop
addl
inc
test
push
adc
add
dec
add
pusha
lods
xor
shrb
cmpb
push
adcl
rcr
imul
and
mov
ja
or
call
ss
adc
xor
add
push
adc
enter
push
adc
scas
add
pop
push
mov
sti
and
inc
add
push
xchg
push
call
xor
mov
fwait
test
andl
push
push
and
test
inc
lea
inc
push
xor
inc
cwtl
add
mov
xor
aad
jmp
call
pusha
int3
adc
pop
data16
pop
add
cmpsl
push
jg
mov
movups
fidivs
mov
xor
dec
mov
call
push
push
mov
xchg
pop
insb
jns
push
adc
adc
adc
cmp
jae
push
rcrb
inc
mov
cmp
daa
loop
or
jge
and
xchg
pop
xor
lds
ret
pop
inc
cmp
stos
in
push
inc
inc
sbb
push
inc
fistps
sbb
sbb
xchg
cli
sar
insl
push
addb
or
cmp
adc
decl
int3
inc
imul
cwtl
dec
or
xchg
jl
sub
filds
mov
xchg
mov
sti
outsb
cld
je
out
pop
mov
cld
iret
xchg
mov
mov
mov
inc
out
aad
jl
adc
incl
pop
test
and
dec
or
add
test
sub
test
mov
mov
push
mov
or
inc
mov
test
pop
cmp
cld
cwtl
mov
add
mov
dec
jecxz
sbb
ljmp
inc
lods
xchg
subb
push
inc
push
inc
or
sub
int3
inc
mov
mov
push
push
xchg
xor
movl
add
pop
mulb
mov
lcall
sbb
jb
inc
nop
mov
decl
adc
dec
cmp
ffreep
pop
add
leave
adc
and
icebp
xor
jge
inc
fsubl
rcl
dec
outsl
jp
xor
in
lea
cmpsl
mov
imulb
ss
lock
rolb
inc
inc
jge
xchg
mov
sbb
mov
in
mov
fmuls
push
lcall
shrb
ret
mov
add
push
pop
and
in
cmc
dec
data16
dec
mov
jl
dec
pop
adc
inc
push
mov
rorb
mov
aam
mov
sbb
jle
push
sbbl
fcmovu
jle
xchg
xchg
sbbl
mov
jmp
mov
sbb
das
or
ret
mov
ljmp
push
inc
ret
sub
push
fistpll
inc
test
and
jp
sub
push
daa
and
shrb
cmp
stos
jns
hlt
pop
call
mov
xor
mov
mov
lcall
dec
sub
dec
mov
pop
xorl
cli
mov
xor
mov
cmp
adc
test
mov
rorl
push
mov
mov
data16
pushl
es
addb
mov
xchg
arpl
outsb
es
sbb
push
mov
lret
es
clc
fs
inc
ljmp
loope
cmp
loopne
or
jbe
ss
push
pop
mov
mov
sbb
mov
mov
lock
cmp
push
add
mov
jge
pop
push
sbb
push
sub
mov
or
enter
loop
insw
xor
push
mov
mov
sbb
call
or
sbb
sbb
add
cmp
call
sahf
hlt
lea
loopne
sbb
call
xchg
aam
xchg
dec
xchg
mov
jp
sub
lock
fsubrs
aam
cld
movsl
addb
dec
xor
jg
incl
fisubl
adc
lret
cmpl
jge
in
push
lret
mov
push
xorb
pop
cld
call
or
add
dec
sbb
mov
cmpsb
outsl
testl
incl
pop
jg
in
inc
jmp
add
xchg
cmp
ret
data16
push
cmpsb
push
mov
jge
mov
ret
dec
lods
xor
les
ret
jmp
mov
in
add
xor
xor
jp
pop
xchg
clc
add
andl
inc
jge
push
aas
sbbb
adc
jne
in
stos
test
adc
pop
aad
sub
js
leave
sar
and
fcomp
shl
in
hlt
adc
pop
lock
dec
inc
and
leave
xchg
int
jo
dec
stos
adc
inc
outsb
outsb
pop
fdivr
mov
dec
loopne
dec
pop
call
jge
cs
mov
mov
push
cmpsl
lea
mov
add
add
push
and
lock
hlt
dec
or
fcomps
rclb
out
inc
inc
sbb
jle
dec
ret
aad
mov
bound
jg
cli
dec
or
or
arpl
or
and
sub
fs
xor
mov
std
fisubrs
mov
or
rclb
xor
and
jg
cli
jmp
pop
sbb
or
inc
inc
add
mov
cli
mov
adc
and
fdivs
int3
pop
leave
leave
push
add
jne
inc
mov
loopne
adc
add
inc
mov
or
push
sub
cwtl
sbb
addr16
cmp
jmp
out
out
add
jo
push
scas
add
ret
les
push
or
cmp
roll
cli
nop
inc
push
inc
xor
push
rorb
inc
jmp
jmp
inc
xchg
xchg
xchg
insl
iret
push
pushf
lock
sbb
arpl
jnp
jns
xchg
add
xchg
inc
xchg
ds
out
mov
xlat
adc
int3
push
sbb
inc
movsb
cmp
pop
dec
stos
add
stos
jo
test
or
cmp
cmp
xor
adc
cli
and
adc
pop
push
inc
cld
out
enter
call
dec
sbb
imul
mov
sub
jmp
std
mov
cmp
outsb
nop
jg
scas
cmp
ja
mov
mov
hlt
lcall
adc
jp
inc
ljmp
push
sbb
mov
imul
test
movsl
fildl
or
data16
mov
aam
inc
or
fld
or
jb
adc
adc
fld1
add
lret
push
push
adc
popf
lods
adc
or
add
dec
jp
pushf
jno
dec
out
in
ret
jp
xchg
push
sub
test
mov
push
or
insb
or
push
sbb
or
add
dec
repnz
mov
fwait
push
cld
inc
sbb
stos
jmp
cli
test
sarl
or
in
adc
xchg
test
lods
inc
cmp
add
push
std
pop
into
test
out
outsl
add
loop
mov
test
add
shrb
push
and
jb
push
outsl
dec
inc
sbb
sub
decb
subb
ret
dec
mov
popf
xchg
inc
push
mov
in
xchg
push
pop
mov
push
inc
xor
sub
fadds
add
mov
push
pop
mov
jo
cld
xor
inc
out
stos
mov
out
inc
rolb
arpl
movsb
ret
push
jmp
or
pop
out
add
add
jmp
fdivr
adc
gs
mov
add
and
fists
int3
cmp
addb
bound
cmp
gs
ret
cmc
rorb
test
add
loopne
lock
sbb
adc
sub
add
pusha
sti
je
mov
mov
dec
cmp
enter
sub
inc
pop
pop
pop
lea
cld
in
or
jb
mov
mov
push
or
fs
add
add
add
mov
loop
add
cld
add
test
or
sub
mov
negb
mov
push
les
repz
fisttps
lret
push
aad
and
cmp
ds
pop
sub
jo
outsl
mov
xchg
push
cld
jmp
lcall
adc
adc
and
mov
int
xor
adc
out
jbe
add
loop
pop
sbb
add
sbb
bound
xchg
jle
inc
and
cmp
inc
int3
and
xor
ret
add
mov
ret
ja
jp
sub
cld
xor
dec
inc
ja
cmpsb
das
sbb
jmp
push
rolb
xchg
aad
mov
popa
sarl
mov
add
pop
cmp
mov
nop
push
ds
mov
call
add
into
and
test
mov
rclb
fs
popa
xchg
sbb
xor
test
mov
inc
fistl
bound
jle
or
xor
call
push
sahf
ficoml
add
inc
mov
xor
xor
push
xor
andl
xchg
sahf
push
imul
add
test
ficoml
loop
and
xchg
int3
inc
jl
mov
data16
in
inc
add
aas
pop
icebp
mov
or
xchg
leave
sbb
jecxz
lock
xchg
addl
add
mov
call
inc
sarb
and
ret
or
pop
test
dec
cmp
jbe
inc
rol
adc
call
pop
lea
imul
push
inc
xchg
inc
or
les
xchg
mov
push
adc
pop
js
inc
jecxz
ljmp
int3
mov
ret
mov
lock
les
push
repnz
pminsw
adc
clc
mov
ficompl
cmp
sbb
fsubs
inc
lock
mov
jmp
pop
or
adc
and
sub
les
loop
cmp
rcr
pop
popa
cli
cmp
lds
mov
in
mov
xchg
pop
dec
mov
or
adcb
xchg
push
loop
or
push
ret
inc
insb
je
or
roll
sbb
out
rcr
imul
dec
xchg
ret
jne
and
adc
pusha
ljmp
daa
sub
outsb
adc
adc
add
in
mov
push
push
clc
jg
addl
cmp
repz
fnstenv
pop
mov
pop
adc
lds
ret
test
insl
mov
mov
add
dec
lods
fs
ljmp
inc
cmp
jo
fldt
or
pop
dec
mov
mov
push
lods
lea
stos
push
xlat
mov
push
xor
mov
nop
out
mov
mov
cmovb
stos
pusha
fmull
in
jmp
inc
mov
idivb
aam
pop
cmp
jp
mov
outsl
or
lcall
sub
cmp
mov
adc
cli
je
push
mov
sub
std
xchg
mov
test
dec
inc
pop
inc
inc
cmp
pop
inc
outsl
mov
popa
jl
xchg
test
mov
adc
inc
rol
das
adc
mov
sub
fdivs
cmp
push
loope
mov
orb
adc
lock
pop
movsl
xchg
pop
cwtl
mov
repz
pop
push
jle
movsl
call
add
dec
loopne
inc
mov
or
aad
sahf
xchg
mov
jl
lock
sub
mov
adc
cmpsb
data16
push
jbe
and
rcr
ds
xchg
loopne
xchg
inc
cwtl
or
adc
int
jae
mov
pop
and
mov
add
or
roll
out
or
sub
push
stos
test
mov
mov
dec
nop
cmp
lea
test
push
cwtl
jle
nop
test
jno
mov
xor
lock
fwait
pop
shrb
lea
sub
loope
and
orb
rclb
jae
in
or
adc
mov
lock
loop
mov
test
add
je
daa
scas
adc
dec
jmp
orl
ss
add
pusha
inc
lret
xor
or
inc
xor
call
mov
inc
or
adc
sarb
lcall
ror
dec
cld
mov
cmp
cld
mov
loopne
fs
sub
mov
test
jp
je
jbe
int3
push
and
test
js
in
lret
xchg
xorb
adc
push
fcmovu
aaa
dec
dec
popa
stos
push
or
xor
imul
inc
sbb
data16
jo
mov
setg
cmovge
aad
into
mov
jne
sar
fisttpl
daa
cmp
incl
push
pop
xorb
add
in
mov
adc
es
cmp
mov
aad
ljmp
cli
test
add
cmpl
xchg
aad
cmc
mov
sub
mov
xor
ficoml
jp
mov
push
sbb
pop
mov
mov
inc
out
addb
mov
mov
mov
lock
out
push
xor
outsl
mov
adc
jl
test
mov
stos
loopne
scas
sub
cmp
movsb
cmp
add
pop
mov
hlt
xor
or
adc
int3
movsb
in
mov
jne
in
inc
xor
mov
mov
mov
and
cld
mov
call
outsl
push
jbe
movsl
mov
sub
pop
call
ret
push
add
jb
jp
test
aas
jb
bound
dec
xchg
punpckhdq
icebp
xor
xchg
incb
and
lea
inc
shlb
pop
mov
cld
pop
std
sub
cmp
in
fcoml
shrd
xchg
pop
mov
stos
cwtl
jl
int3
pop
xadd
add
xchg
pop
or
pop
sbb
insl
push
daa
xor
dec
hlt
test
inc
jmp
sar
fsubrl
add
and
jbe
push
ret
test
mov
push
or
or
std
push
in
sbb
pop
mov
ds
mov
mov
inc
das
rorl
fsubs
clc
movsb
mov
popa
in
movsb
test
xor
jb
jne
xor
mov
xor
inc
leave
test
xchg
cmp
in
and
mov
outsb
xor
push
subb
or
repnz
add
sbb
or
add
shlb
fs
cmp
pop
xor
outsb
adcl
push
sbb
add
xchg
cli
notb
and
push
pop
adc
call
add
rclb
js
push
cmp
push
push
mov
ljmp
sub
and
loop
nop
sub
arpl
and
mov
movsl
sub
mov
or
ficompl
lock
scas
xchg
movsl
daa
and
adc
or
mov
add
and
inc
shll
sbb
jno
xchg
pop
mov
jge
push
int
mov
aam
jmp
jbe
test
or
xor
mov
clc
hlt
pop
inc
cli
push
inc
dec
je
pop
decl
je
decl
nop
je
mov
dec
or
js
rorb
mov
jne
mov
xchg
add
in
and
pop
or
notb
sub
mov
mov
add
rol
lcall
das
jb
push
clc
xorb
xchg
js
xchg
lock
insb
add
icebp
rolb
call
loop
dec
jns
add
mov
mov
jo
je
rcl
das
stos
loopne
ss
std
pop
mov
hlt
mov
add
adc
cmp
shlb
push
sbb
scas
and
xchg
out
jl
mov
xchg
push
jmp
cltd
sub
pop
loopne,pn
sub
or
sbbl
lret
xor
loope
fiadds
push
rclb
inc
push
lret
rolb
mov
orl
orb
int3
sbb
ja
call
imul
test
mov
add
shl
sub
outsl
mov
mov
out
ljmp
push
or
cmp
and
sarl
add
and
adc
mov
xchg
or
ss
sub
into
imul
xchg
je
jmp
push
imul
lcall
adc
bound
rsqrtps
xor
clc
xor
jl
clc
stos
jne
xorb
mov
mov
add
push
unpcklps
or
xchg
jne
or
sub
hlt
test
and
mov
into
jo
mov
add
inc
jp
scas
pop
push
inc
shlb
cmpsb
pop
mov
inc
roll
fwait
inc
push
jbe
loope
inc
ja
push
pop
mov
pop
mov
popf
jno
sub
mov
rcll
dec
cmp
xchg
dec
clc
inc
and
dec
enter
jno
cmp
and
test
aad
pop
ret
int3
add
jp
es
inc
push
data16
iret
jle
add
insb
pusha
adc
inc
push
and
or
data16
lods
rclb
jb
mov
or
xchg
push
mov
mov
adc
movsl
push
mov
or
ret
data16
push
cwtl
add
or
mov
loopne
adc
adc
mov
push
cmpsb
mulb
cmovs
cmpl
pop
mov
add
push
cwtl
push
addb
test
mov
mov
xchg
push
inc
push
push
mov
push
jb
daa
mov
mov
into
inc
cmp
inc
xor
roll
mov
sbb
gs
incl
je
inc
push
sub
or
adc
or
add
pop
je
push
in
into
lcall
lcall
lods
ret
adc
mov
fisubrs
cld
jge
cld
int
or
incb
inc
in
push
ret
daa
cwtl
hlt
in
mov
push
xchg
pusha
movsb
xlat
sbb
incl
int3
je
push
es
push
std
jl
shr
lcall
cld
xchg
push
aam
mov
or
mov
js
testb
and
sub
add
fs
ret
ret
jne
cmpb
cld
add
xor
clc
jle
mov
cmp
fstl
aaa
add
dec
or
aaa
push
add
or
or
adc
fcmovbe
repz
and
ret
enter
dec
ret
mov
sub
sbb
nop
cmpsb
test
shlb
mov
mov
adc
sbb
dec
int3
cld
inc
bound
inc
les
ds
jmp
addr16
cmp
xor
cmp
jne
pop
out
jp
pop
data16
inc
vmread
push
jge
inc
lea
out
testb
aam
mov
mov
sub
ja
push
mov
outsl
adc
fcoml
movsb
push
jb
sbb
or
into
lret
add
xor
mov
pusha
mov
in
movb
dec
xor
shr
sub
rcr
or
sbb
mov
adc
pop
cmp
outsb
adc
add
sbb
push
push
and
pop
rorb
icebp
mov
xor
fcmove
inc
clc
in
loope
mov
xor
adc
les
push
mov
pop
dec
sti
add
into
negb
and
xorb
lea
adc
test
mov
insb
jle
pusha
cmp
push
xor
mov
adc
stc
into
ret
add
mov
dec
dec
dec
je
lods
push
push
jp
movsb
cmpsb
push
popf
inc
mov
insl
fs
ss
pop
arpl
adcb
jo
and
shlb
add
iret
pop
imul
ret
subl
fmuls
adc
std
jo
xchg
cwtl
inc
ljmp
mov
mov
or
int3
mov
call
mov
and
scas
jmp
cmp
mov
pop
sbb
push
test
dec
cmpsb
movntps
incb
pop
sbb
mov
rclb
nop
inc
nop
sbb
push
aam
or
mov
orl
adc
scas
aad
sahf
xor
jo
aaa
sahf
sub
add
aad
aas
push
mov
out
shrb
cmp
pushf
sysret
cwtl
adc
imul
and
mov
cmp
cli
pop
aam
mov
jbe
jge
leave
xchg
add
push
sub
sbb
xor
test
push
push
pop
cmp
fcmovnu
icebp
outsb
pusha
push
xor
inc
pop
push
and
nop
shlb
dec
rolb
cmp
push
sbb
mov
jae
or
fdivl
adc
filds
mov
xor
dec
pop
pop
shrb
add
pop
push
push
test
aas
mov
std
jmp
adc
aaa
call
xchg
and
pop
aaa
push
add
loopne
mov
cs
or
inc
adc
mov
ret
pop
adc
test
nop
dec
test
cli
call
rorl
mov
dec
and
jl
addb
orb
mov
decl
out
inc
mov
inc
gs
cli
push
mov
shlb
in
cli
sbb
fisubrl
insb
mov
mov
lea
ds
sbb
cld
mov
mov
mov
jmp
sub
js
add
lahf
add
aaa
mov
add
mov
enterw
aad
es
mov
add
mov
sbb
pop
add
je
add
popa
outsb
pop
adc
cli
xchg
dec
or
xchg
pop
lods
and
scas
rorb
out
orb
pop
mov
xor
add
mov
fwait
nop
and
push
rcr
out
or
ljmp
cmp
add
pop
pop
dec
aam
mov
xlat
mov
lock
into
fwait
xor
adc
into
and
mov
adcl
inc
add
pop
mov
jne
insb
or
cmpsl
xor
popa
or
and
inc
mov
mov
in
clc
scas
jecxz
adc
incb
mov
add
adc
sub
pop
test
call
jecxz
lcall
fcompl
push
test
mov
sar
aaa
push
sub
imul
or
or
add
scas
lcall
mov
dec
mov
xor
loop
dec
or
sbb
sbb
jns
jp
test
dec
mov
ljmp
mov
xor
add
pop
aad
or
xchg
in
shrl
mov
mull
pushf
add
inc
sbb
mov
adc
psrlw
jne
or
inc
std
inc
mov
mov
popf
or
ficoml
aaa
dec
stos
push
cwtl
in
arpl
data16
daa
sbbb
dec
dec
clc
popf
add
adc
or
xchg
or
cmp
fcoms
jne
inc
je
cmp
sub
pusha
push
mov
sbb
push
stos
and
and
pop
dec
jb
mov
xchg
cmp
mov
or
jne
cmp
push
loope
fcomps
stos
jg
pop
mov
ret
test
ss
test
repnz
lcall
dec
les
cmp
in
clc
fdivl
movsb
adc
mov
stos
mov
and
push
inc
test
hlt
jns
xchg
jb
xor
les
test
push
js
and
lock
adc
fucomi
mov
push
lea
push
fstpt
add
pusha
cld
aaa
lods
cmp
add
addr16
adc
jo
inc
repz
push
ds
cmpsb
cmpsb
jae
and
aaa
and
pop
add
loopne
cmp
in
sahf
lret
mov
xor
or
adc
daa
in
dec
mov
std
push
call
ja
call
push
push
push
iret
fisubrl
push
imul
test
add
push
fadd
aam
push
shlb
movsb
nop
mov
mov
ljmp
je
lcall
and
mov
add
push
adc
mov
call
shl
adc
mov
lret
push
mov
call
lcall
bound
loopne
aad
or
fcomps
lahf
mov
dec
pop
lcall
aad
add
pop
bound
jne
sub
pop
incl
xorb
cld
sarb
add
adc
icebp
adc
std
inc
mov
push
push
insl
sub
les
out
dec
mov
inc
or
mov
adc
testb
rorb
hlt
xor
fldt
subb
repz
sbb
test
jl
in
xor
loopne
ret
loope
add
mov
les
call
mov
loopne
push
loopne
cmovno
add
cld
xor
js
lock
push
shll
inc
mov
sarb
jle
sub
or
mov
lea
sub
push
loopne
movsb
nop
test
cltd
sub
cmp
push
xchg
bound
dec
pop
popa
inc
jb
out
inc
and
cmpsb
mov
lods
enter
rorb
out
and
cld
push
dec
add
push
call
push
pop
add
mov
mov
lret
adc
adcl
cmp
cld
adc
test
add
gs
and
mov
or
sbb
sub
push
adc
mov
push
mov
movsl
decl
lock
ret
or
add
fcmovu
imul
aad
xchg
and
sbb
xor
out
lret
dec
push
ljmp
cld
sub
rorb
stc
pop
add
test
jle
xchg
pop
insb
les
lds
scas
gs
and
push
jo
aas
mov
lods
addb
adc
loop
popa
or
cmc
fs
es
or
jnp
popf
dec
ljmp
ret
les
notb
loop
shrb
int3
inc
fs
xlat
add
sbb
test
pop
adc
xlat
sar
jne
nop
pushf
popf
jo
pop
imul
loopne
push
push
bound
les
mov
fcomps
jmp
xor
test
pand
inc
mov
scas
fsubs
js
orb
mov
jnp
orl
mov
in
push
mov
nop
js,pn
call
testl
outsl
enter
cmp
xchg
adc
popf
mov
out
dec
mov
mov
sub
pop
sahf
mov
das
mov
mov
test
dec
jbe
push
mov
sbb
bound
in
add
not
cmp
out
pop
pop
and
shll
nop
js
arpl
and
ret
test
aaa
adc
adcb
in
cmp
mov
jl
ja
pop
inc
ret
cmp
cs
inc
mov
repz
sar
ds
or
xchg
sbb
insl
shlb
push
push
add
mov
shrb
loopne
sub
test
clc
mov
dec
jo
cmp
push
push
aaa
pop
loop
xor
pop
mov
lock
adc
push
mov
std
push
or
mov
in
ljmp
jne
add
arpl
mov
mov
push
in
ss
aam
xchg
add
aaa
add
sub
inc
std
push
cli
dec
push
nop
jl
ror
cmpsb
jbe
xor
dec
int
dec
mov
push
adc
pushf
or
arpl
pop
stos
fisubrs
inc
dec
ds
das
or
popa
es
inc
xchg
test
inc
inc
out
outsb
pop
or
pop
std
test
mull
and
jne
repz
jge
ljmp
xchg
and
lcall
icebp
call
push
xchg
std
mov
mov
push
mov
add
ret
jno
nop
push
loope
adc
sbb
mov
aad
push
cwtl
cmp
mov
sahf
cmpsl
ret
clc
cmp
mov
mov
dec
mov
push
push
or
sbb
xor
mov
loopne
mov
and
jmp
orl
sub
push
jo
outsb
fwait
int
sub
push
inc
mov
cmp
inc
clc
dec
pop
sarb
add
jmp
sub
pop
test
xchg
inc
sbb
jmp
or
movsb
jb
sbb
std
fdivr
call
ret
imul
mov
xchg
sub
jmp
dec
add
add
mov
inc
jmp
jg
and
xor
jb
or
test
mov
push
test
push
loope
and
add
in
je
add
imul
cmp
inc
leave
adc
movsb
aas
add
mov
mov
or
add
push
fs
push
pop
dec
cmp
adc
outsb
or
fidivrs
cmpsb
and
lods
jle
int
jge
cmp
push
int3
mov
shlb
ljmp
xor
cld
out
jmp
test
inc
xchg
sbb
aad
inc
or
aam
ljmp
xlat
pop
ror
enter
dec
cmpsl
test
push
insb
pop
pop
or
movsb
sti
xor
push
cmp
lcall
sbb
add
pop
mov
or
imull
lock
dec
gs
gs
lcall
movsb
pop
or
inc
lea
push
inc
adc
arpl
cmp
or
lret
incl
aad
add
cmp
and
inc
push
dec
gs
mov
inc
inc
pop
std
int3
xchg
fdivrs
add
lods
mov
or
orl
mov
or
mov
push
pop
inc
fwait
ret
in
jge
and
dec
dec
sub
popa
push
sub
cmp
mov
arpl
mov
nop
mov
loop
lock
movl
pop
xorl
outsb
xor
mov
mov
sarb
cmp
pop
mov
inc
jmp
mov
into
push
add
ret
pushl
lods
xor
and
xor
pop
fsubr
dec
add
cld
repz
push
inc
sbbl
data16
and
rcrl
ret
aam
push
push
in
jno
xor
cld
add
pop
sbb
mov
ljmp
cmpps
xchg
mov
adc
mov
or
lock
outsb
sbb
sarl
push
arpl
inc
arpl
fadd
ret
xor
mov
mov
xor
scas
cmp
movsb
jne
push
pop
in
mov
push
add
sbb
push
push
cs
fs
inc
test
ds
push
call
clc
cmp
inc
outsl
call
or
add
add
pop
cmpb
push
es
xor
test
in
inc
pop
fmull
lea
pop
hlt
xor
mov
pop
rorl
adc
add
jge
aas
ret
or
shr
fimuls
mov
mov
jns
or
dec
loop
jne
pushf
xor
in
xchg
mov
ds
add
shrb
call
or
bound
les
lods
sbb
mov
sti
ljmp
add
scas
push
mov
stos
add
push
fldl
cmp
adc
test
fwait
mov
inc
xor
addl
mov
mov
lea
push
push
push
shrl
lcall
stc
xor
insb
aas
hlt
testl
lea
add
sbb
nop
mov
push
cmpsb
pushf
cmp
sti
pop
add
sar
ret
lock
aam
and
aam
sti
mov
sbb
pop
test
insb
mov
push
cmpsl
aaa
and
adc
add
out
int3
incb
and
mov
stos
jp
dec
cs
mov
ds
out
inc
dec
jg
xchg
fstpl
add
popf
lret
xchg
push
xor
add
jg
mov
pusha
int3
data16
add
lea
adc
daa
les
aas
pop
subl
lret
pop
test
loopne
jmp
jge
call
ret
adc
les
popa
inc
or
pop
dec
data16
leave
xchg
lods
sbb
sbb
mov
stc
add
aas
push
dec
fadds
pop
mov
push
adc
addb
and
stos
xor
add
clc
rcrb
clc
and
xchg
fs
mov
ficoms
jo
jmp
mov
faddl
xchg
icebp
scas
jo
movsb
add
nop
inc
lcall
enter
and
inc
push
push
stos
jne
or
mov
and
call
repnz
js
and
pop
adc
insb
cmp
imul
pop
add
xor
pop
add
mov
divl
add
rolb
cmp
decl
aad
imul
or
clc
or
dec
sbb
rorl
jmp
sbbb
push
add
cmc
pop
pop
mov
mov
int3
les
jmp
xor
dec
loopne
lock
and
mov
and
pop
mov
xor
pop
sbb
pop
outsl
xchg
push
shrb
cmpl
int
addb
add
rcl
pusha
and
mov
xor
jmp
mov
js
or
push
cld
pop
orb
mov
jp
pushf
or
adc
push
sub
adcb
or
imul
mov
dec
push
pop
inc
scas
jle
lock
nop
ss
inc
mov
mov
sub
lock
lock
rolb
mov
pop
mov
cmp
aam
push
adc
pop
add
xchg
push
movsb
loop
pop
arpl
add
pop
mov
sbb
ficoms
lea
je
decb
int
aas
je
loopne
ret
rorb
xor
jl
mov
cmc
push
jmp
es
inc
inc
inc
sti
inc
adc
or
push
movb
lretw
scas
mov
mov
ficoml
inc
sbb
mov
xor
jecxz
push
imull
push
mov
xor
xor
push
xlat
pop
mov
rol
inc
push
cmp
orb
or
cmp
mov
dec
push
aad
ficoml
push
cld
xchg
ret
nop
lock
cwtl
and
dec
jp
push
push
call
add
pop
mov
and
gs
ss
pop
lock
orb
adc
push
pushf
negl
dec
inc
popaw
xor
jp
test
xchg
push
shrl
ds
xor
mov
movsl
mov
adc
cld
mov
mov
jge
mov
mov
test
pushf
mov
cld
xor
mov
jne
adc
je
or
add
and
sub
movl
mov
lock
xor
aaa
or
hlt
hlt
and
jae
mov
in
xchg
xor
lcall
mov
loope
xor
inc
ss
retw
loope
xor
push
or
push
push
jb
mov
adc
push
sbb
aam
sarb
rolb
fwait
je
fidivrs
adc
sub
inc
movsb
aaa
daa
rorb
adc
push
fbld
in
jle
push
lret
push
cs
mov
cmp
fmulp
fld1
dec
mov
push
sbb
test
mov
nop
lods
push
jle
ss
ret
mov
fcom
fidivl
enter
or
lock
cli
and
mov
sti
mov
or
add
or
call
out
mov
xorb
inc
inc
insl
jg
clc
adc
jmp
insb
hlt
fmuls
loopne
cmpsb
push
fs
push
data16
lret
adc
fs
enter
mov
jne
lea
mov
xchg
enter
mov
ja
push
out
xor
mov
cmc
jo
rol
pop
mov
pusha
push
xlat
aad
scas
in
fimull
sub
std
fiaddl
das
add
out
icebp
add
sub
push
or
jne
mov
xor
add
adc
push
xor
arpl
push
dec
mull
jb
inc
adc
add
daa
push
pop
xor
pop
cmp
add
and
xor
add
out
daa
loope
mov
gs
test
jl
rolb
push
push
mov
enter
cmp
mov
sub
dec
notb
mov
mov
xor
in
and
inc
ja
pop
in
insb
in
fdivr
jbe
bound
jmp
into
jp
jecxz
sbb
add
cs
fdiv
enter
andb
pop
pushl
icebp
enter
xor
mov
inc
sahf
sub
and
fiadds
pusha
loopne
mov
pop
insb
std
and
sbb
sub
sbb
cld
push
push
xchg
and
mov
sbb
insb
or
fistpl
sbb
popa
bswap
push
jb
add
dec
orb
dec
loope
or
inc
pavgb
addl
fcmovb
iret
mov
scas
push
jbe
bound
add
mov
inc
add
and
cmpsb
pop
cmp
add
or
repnz
lcall
in
push
push
add
ss
and
dec
lock
mov
mov
lock
mov
mov
add
mov
cld
adc
xchg
pop
adc
lods
lret
pop
or
test
push
nop
decb
dec
sub
cmp
push
subl
pop
scas
out
sub
inc
data16
scas
clc
sbb
xor
pushf
shl
popa
mov
sbb
out
loopne
add
cmc
ss
xchg
test
lea
mov
add
out
jbe
stc
cld
cld
test
mov
mov
in
push
sub
pop
ja
sbb
icebp
push
cs
or
sbb
cmp
pop
or
xchg
adc
cwtl
std
xchg
js
subb
mov
push
jo
cli
cmp
cmp
jnp
ds
lea
xor
ljmp
rorl
imull
dec
shlb
dec
enter
adc
jns
inc
mov
hlt
scas
incb
push
xchg
jne
or
cmp
pop
aaa
cli
imul
push
mov
jge
cltd
cmpl
xor
sbb
add
jmp
dec
sub
sub
xchg
xor
mov
mov
sub
syscall
jge
inc
push
sub
test
nop
mov
cmovbe
bound
xchg
mov
sub
mov
inc
rcrb
pusha
add
mov
inc
add
cmp
punpckldq
cld
xor
cld
mov
pop
in
and
sti
jg
mov
adc
call
pop
cld
loope
loop
cmp
push
jmp
je
insl
pop
push
cmp
mov
mov
ret
xor
mov
das
inc
insl
movsl
data16
push
xor
ja
rcr
cmp
ret
or
cltd
lock
out
pop
call
jnp
and
test
mov
or
jne
pop
push
jnp
sbb
clc
test
gs
mov
inc
shrl
dec
adc
das
push
mov
test
jno
call
push
stc
sub
push
retw
xorb
dec
push
or
push
in
and
enter
loope
jg
enter
roll
in
inc
xlat
lods
out
mov
es
push
adc
jle
add
out
mov
inc
adc
cmpsl
or
xor
imul
test
aam
mov
jle
lahf
xchg
sub
mov
push
insb
push
lahf
pop
add
aad
add
sub
inc
jl
popf
pushf
or
mov
xor
jg
mov
les
push
mov
js
add
add
add
shrb
movzwl
or
cmp
cmp
inc
aad
repz
in
lret
ret
mov
or
js
ret
lock
mov
push
push
mov
xor
push
inc
lret
movsl
incl
aam
push
rclb
xor
inc
cmp
mov
call
or
cmp
lahf
xchg
call
jb
push
subl
mov
mov
cmp
pop
cmp
pushf
mov
inc
xchg
add
adc
push
xorb
cmpb
loop
roll
imul
in
mov
or
fs
lds
pop
lahf
sub
add
pop
icebp
adc
loop
ja
jo
rol
mov
jp
aam
pop
ss
out
xchg
pop
add
mov
clc
es
stos
cmp
and
fwait
adc
or
add
lea
lods
fs
data16
in
fdivrs
adc
xchg
sbb
in
push
and
xchg
jbe
lock
mov
stos
dec
scas
mov
or
mov
loop
imul
test
push
je
cwtl
test
ror
or
in
lea
data16
mov
xorb
jbe
addl
mov
dec
es
aas
xor
fs
subl
repnz
add
add
xchg
add
lea
or
nop
adc
lods
sbb
jns
mov
mov
in
sbb
dec
pop
lret
inc
xchg
ljmp
and
mov
ljmp
xchg
jg
mov
mov
pushf
push
aad
adc
pop
xor
add
adc
test
shrb
pusha
cld
and
jp
sbb
xor
js
mov
push
jo
cmp
stc
mov
cli
inc
movsb
aam
jmp
pop
and
arpl
data16
adc
aas
imul
mov
jmp
pop
jle
pop
stos
ret
mov
push
adc
inc
mov
adcl
loop
data16
ss
add
cmp
push
cwtl
rol
and
inc
orl
ds
adcl
mov
mov
add
adc
inc
mov
dec
pop
lahf
mov
and
cwtl
je
sahf
jb
stos
sub
mov
xor
ret
mov
mov
enter
outsl
xor
inc
shlb
or
jne
mov
popa
and
pop
xor
cmp
sbb
lret
fnstenv
and
adc
je
adc
xchg
dec
or
lock
dec
rclb
ret
xorl
xor
mov
shlb
leave
or
xor
xchg
cwtl
movsb
and
andb
fs
pop
mov
outsl
rorl
out
jmp
push
and
pop
lahf
loope
popw
mov
pop
je
lcall
and
shll
jne
add
int3
inc
aaa
mov
adc
call
in
mov
or
into
mov
cmp
movsl
mov
insb
dec
cmp
mov
xor
orl
inc
push
cmp
add
je
in
push
test
sub
rorb
mov
mov
dec
or
add
insb
mov
adc
dec
lods
mov
mov
xor
or
test
in
rorb
xchg
cs
enter
sbb
add
cmpsb
or
mov
sar
mov
push
lds
push
inc
aad
insb
insb
pusha
cmp
mov
cld
mov
aam
push
add
add
inc
out
mov
mov
sahf
arpl
shld
adc
mov
shlb
imul
or
sbb
cmp
mov
insb
test
jg
or
mov
fs
loop
sbb
add
call
push
nop
lods
pop
imul
add
push
pop
mov
faddp
push
or
das
rol
inc
add
clc
pop
xor
pop
add
test
mov
mov
push
insl
mov
mov
mov
sub
repz
mov
dec
in
or
fidivl
inc
lock
lock
inc
dec
mov
stos
mov
pop
dec
outsb
push
sar
test
sub
fsubs
push
adc
aas
dec
mov
ret
jl
sub
shrb
push
xor
daa
jbe
lock
ds
aaa
push
fcoms
inc
mov
jbe
mov
int3
shlb
decl
sub
sub
pop
pop
add
nopl
xor
fwait
xchg
jl
xor
sarb
mov
js
das
add
mov
adc
or
cs
jbe
decl
insl
adc
in
shll
les
push
xor
jbe
pop
sahf
fldl
adc
data16
sub
jmp
mov
add
in
or
lods
call
inc
cwtl
js
mov
hlt
fistps
inc
popf
add
sbb
out
mov
cmpsb
aad
scas
fs
data16
or
pop
test
fdivs
fcomps
loopne
fbld
decl
jmp
xchg
push
sbb
add
std
outsl
dec
dec
xor
or
sbb
outsb
jge
mov
push
loop
and
fcomi
inc
push
aaa
mov
jmp
cwtl
rorb
push
ret
or
dec
sbb
xchg
push
and
clc
mov
fsubrs
mov
push
xor
push
mov
mov
or
scas
test
push
jmp
nop
dec
mov
sbb
or
dec
lea
ljmp
je
mov
leave
mov
inc
icebp
pop
lock
sub
je
sbb
mov
sbb
subl
mov
les
push
add
push
push
call
cld
fisubl
cmp
mov
imul
cmp
adc
test
or
add
pop
mov
push
add
sbb
push
push
fmuls
inc
outsb
rolb
pop
mov
lea
mov
shlb
rorb
loope
inc
lock
ljmp
push
cmp
add
int3
dec
lcall
add
sbb
stc
mov
jae
shrl
lea
ret
jge
dec
fadd
cmp
sbb
dec
sub
movsb
fisttpl
aam
or
push
in
cmp
test
scas
mov
cvtpi2ps
push
add
sbb
add
adc
test
push
je
lret
neg
rcrl
push
mov
out
push
xchg
push
mov
mov
stc
cmp
dec
cmpsb
leave
lock
push
dec
mov
jp
pusha
pop
sub
add
xor
push
lret
test
dec
xchg
js
xchg
cwtl
jno
dec
aam
push
inc
xchg
pop
inc
pop
and
push
ss
rolb
scas
jne
mov
insb
imulb
mov
adc
cmp
mov
mov
les
lods
jae
je
xchg
or
cld
xor
nop
sahf
push
lods
mov
rorb
fdivr
rorl
push
add
add
ds
inc
call
addb
shll
xchg
mov
inc
add
mov
loopne
ljmp
cmpsb
xor
clc
aas
test
pop
psllw
aas
add
lock
pop
lcall
jmp
and
inc
adc
pop
icebp
mov
pop
cmp
call
cmc
adc
push
ret
fadds
sub
repz
xlat
sub
cs
mov
jle
mov
mov
push
shrb
cli
mov
push
mov
testb
sarl
push
push
clc
sub
sbb
loopne
add
scas
xchg
outsb
ds
sti
jmp
mov
add
adc
outsb
pop
icebp
outsl
xor
xor
mov
jg
test
outsb
sbb
arpl
push
pop
mov
call
ret
add
push
add
sbbb
mov
add
xchg
sub
or
add
xorb
insb
shll
or
push
jge
sbb
std
pushf
mov
repz
xor
vmread
je
rolb
pop
mov
test
js
ret
or
inc
mov
mov
dec
mov
fmuls
mov
add
add
inc
test
repnz
mov
dec
lods
push
pop
fnsave
dec
icebp
es
je
imul
mov
sbb
pusha
shlb
dec
inc
lock
in
dec
sub
sbb
sbb
or
jns
xchg
mov
subb
shrb
lock
aam
ss
std
xchg
movsl
sbb
push
ja
cmp
adc
or
jne
dec
pop
xor
data16
adc
outsb
push
fmul
adc
jmp
add
into
clc
das
mov
icebp
mov
inc
pushf
inc
push
incb
cmp
idiv
into
std
mov
fwait
shrl
insl
jl
cwtl
jne
dec
sbb
int
lods
shrb
inc
testl
movsb
xorl
add
sti
or
add
adc
mov
pop
sub
sub
mulb
imul
mov
movsb
push
fcompl
adc
dec
popa
pop
ficompl
mov
mov
or
push
and
cmp
outsl
sub
jmp
cmp
rclb
cwtl
mov
fiadds
dec
loop
sub
pop
cmp
xchg
pop
mov
adc
lahf
idiv
push
mov
rolb
sahf
add
push
mov
popf
adc
movups
inc
or
cs
add
jne
ret
aad
fwait
inc
shr
ss
popa
dec
push
lock
sbb
fisubl
pop
pop
cmp
ja
adc
loope
or
add
or
adc
leave
cli
movsb
jmp
and
push
or
les
rclb
pop
je
push
aam
dec
pop
add
or
push
add
cwtl
in
test
mov
das
incb
mov
mov
add
in
pop
inc
pop
inc
clc
pushf
lret
xchg
mov
ret
addb
je
inc
mov
or
jnp
jp
rdpmc
push
loop
daa
rorb
inc
cs
push
mov
push
fistl
fistps
ljmp
push
ret
pop
sub
fisubs
push
sbb
xchg
jne
pop
cmp
sub
lret
push
mov
jge
fwait
lock
inc
iret
xor
push
mov
icebp
add
or
sub
cmp
adc
dec
push
inc
xor
loop
aad
lret
in
cld
fs
shlb
xor
lahf
xor
pop
pusha
add
movsb
pop
fiadds
ret
movsb
sti
iret
mov
xor
or
nop
pop
push
data16
dec
or
pminsw
jbe
lds
lcall
inc
test
adc
xor
or
je
adc
lock
jne
cwtl
test
std
sub
int
lret
pushf
push
mov
addl
adc
push
dec
pop
jo
insb
push
orb
rolb
xorb
push
mov
dec
ljmp
scas
cmp
cmp
and
icebp
aad
in
dec
lock
or
or
inc
dec
add
mov
add
pop
cwtl
push
xchg
and
xor
fidivrl
jne
ss
daa
sar
mov
jnp
ret
inc
inc
xchg
lock
mov
pop
mov
pop
fidivl
push
cld
ljmpw
dec
js
in
popf
rolb
repz
test
mov
rcr
ror
test
jge
bnd
nop
rolb
lock
mov
push
push
add
or
callw
std
inc
pushf
fdiv
add
xor
and
mov
mov
test
push
cld
std
pop
mov
adcl
repnz
mov
lods
je
fs
loope
jge
inc
ljmp
jle
aaa
imul
push
adc
in
cs
sub
adc
or
into
mov
push
add
pop
dec
outsl
or
inc
pop
sub
mov
test
loopne
int3
sbb
mov
adc
sub
xchg
adc
sbb
data16
xor
add
loopne
loopne
inc
cmp
fildl
or
jae
insl
loopne
mov
mov
inc
insl
ss
or
arpl
rcrl
pop
fcoml
or
bound
mov
or
xchg
sbb
or
shr
push
clc
or
mov
mov
xor
stos
mov
sarl
xchg
mov
inc
push
popa
into
adc
std
and
dec
mov
in
push
add
xor
loopne
push
sub
and
push
pop
leave
cmp
fsubs
add
lock
ja
imul
loope
in
mov
test
jne
cld
or
je
je
aam
mov
lods
int
mov
adc
adc
nop
outsb
rclb
loop
push
xor
xchg
loopne
std
jo
or
pusha
add
data16
pop
rcrb
aaa
fidivs
movsb
pop
and
jae
addb
mov
mov
add
das
enter
or
jb
lds
sbb
mov
adc
jno
push
insb
arpl
cmpsb
daa
dec
loop
mov
xor
rorb
push
adc
adc
xor
cmpsb
fsts
pop
aaa
cltd
mov
jmp
xor
and
frstor
mov
xor
cli
cs
cmp
xchg
sti
sti
push
xchg
insb
mov
shl
pop
mov
sub
xor
mov
adcl
call
pop
loope
xchg
cmp
rol
cmp
inc
std
outsl
ret
pop
cmp
adc
std
push
adc
add
orl
or
add
lods
std
xor
cmp
std
pop
pushf
xchg
rolb
cwtl
enter
xor
add
sub
xchg
loopne
mov
cmp
adc
cmpsb
rclb
cld
fs
jae
jg
dec
jmp
add
idiv
les
out
clc
or
add
pusha
cmp
push
cld
xchg
push
or
mov
outsl
inc
mov
mov
cmpb
push
mov
inc
movsb
fchs
mov
cli
push
push
mov
rcrb
sarl
sub
mov
sbb
or
lea
jmp
insb
test
adc
sub
aam
sbb
and
incb
jmp
mov
loopne
and
add
aad
jge
mov
inc
icebp
not
aas
cmp
xchg
xor
mov
adc
sbb
inc
lret
or
and
fistpl
pop
or
outsl
fmull
pop
pop
pusha
adcl
dec
mov
inc
out
cmp
gs
mov
test
iret
shll
stos
dec
push
clc
mov
adc
je
push
sti
push
mov
push
push
and
call
mov
ja
out
adc
push
inc
fsubrl
xor
mov
sub
add
cmpsb
inc
sti
es
or
std
pushf
sbb
flds
xchg
mov
mov
mov
and
out
push
jl
dec
pop
push
dec
pusha
mov
add
cmp
mov
sbb
xchg
xchg
cmpl
xor
mov
add
push
sbb
stos
mov
push
repz
pop
sub
pop
xor
dec
movsl
mov
push
inc
mov
clc
lods
ror
jp
inc
add
fiaddl
jmp
or
mov
call
xor
adc
clc
and
mov
leave
xchg
add
mov
add
movsb
jo
push
mov
push
aam
mov
or
add
jle
movsl
sub
or
mov
inc
ficompl
mov
cld
cmc
jge
mov
xor
xchg
je
cmpl
mov
push
jno
cltd
call
mov
lret
ret
mov
scas
imul
or
mov
aam
psubsb
and
inc
mov
out
aaa
push
lods
xor
fadd
ror
mov
pusha
mov
nop
aam
out
mov
int
popf
aam
pop
jp
push
call
mov
mov
push
cmpsb
cmp
subl
add
push
inc
xchg
dec
sbb
stos
push
je
rcr
shr
inc
call
or
adc
sub
push
jecxz
loope
xor
call
int3
dec
and
enter
sbb
lods
sub
cmp
std
das
sar
cmp
mov
cmp
xchg
fldl
xchg
xchg
fisubrl
enter
jl
pop
cmp
push
add
and
mov
dec
pop
mov
or
xorl
int3
ljmp
clc
or
jmp
stos
jge
mov
mul
shrb
int3
rcl
add
add
test
jl
sahf
inc
stos
sbb
les
adcb
pushf
loope
ljmp
mov
pop
sti
shlb
adc
push
jle
fisttpl
les
scas
push
jmp
add
jns
jmp
cmp
mov
fcoml
movaps
xchg
add
aad
and
pop
push
and
rol
add
loopne
nop
jae
jbe
lods
push
popf
lods
lret
mov
xchg
mov
jbe
push
mov
jge
and
adc
adc
mov
std
cmp
mov
test
fs
mov
lods
pop
mov
aaa
sbb
je
mulb
pusha
sbb
inc
cmp
roll
loopne
ds
jne
stos
cmp
jl
outsb
xor
mov
mov
pusha
push
test
outsb
jbe
mov
jb
pop
mov
push
xor
mov
std
and
ljmp
test
lea
jge
pop
inc
imulb
xchg
push
ret
ret
out
inc
xor
push
jle
mov
fcomip
push
lea
adcl
pop
push
call
push
adc
clc
aaa
sahf
mov
pop
insb
shl
sahf
pop
mov
push
sub
inc
cmp
adc
stc
add
into
aam
jl
stc
add
jo
add
loopne
inc
pop
or
fstl
jl
mov
cmp
adc
dec
divl
mov
mov
inc
incb
inc
negl
adc
xor
in
and
and
cmc
add
fwait
sub
xchg
xor
out
in
shlb
out
xchg
test
jmp
cmp
nop
inc
nop
insb
xor
js
mov
sub
inc
or
incb
jne
dec
mov
cmpsb
clc
cmp
sub
adc
int3
or
mov
pop
stos
cs
add
pop
mov
push
sbb
or
mov
ds
sbb
mov
mov
lods
mov
sahf
inc
aaa
cld
out
in
inc
mov
repnz
pop
pushl
add
mov
outsl
notb
imul
cmp
adc
adc
jno
inc
xlat
or
mull
mov
xchg
enter
nop
add
adc
insb
or
test
add
adc
xchg
pop
lods
cmpsb
pop
test
jg
mov
mov
loop
subb
inc
je
pop
les
lds
inc
mov
mov
rclb
push
xor
dec
jmp
and
call
pushf
xor
mov
and
mov
adc
xchg
dec
mov
push
and
inc
in
jo
pop
ret
dec
mov
adc
pop
sub
and
push
xchg
aas
fnstcw
stos
jne
adc
mov
sbb
jae
pop
add
push
jp
adc
test
mov
add
out
hlt
mov
jbe
fidivrs
or
call
jb
loopne
aas
and
mov
fdivrs
xor
jno
loope
xlat
nop
xor
and
add
movsl
lock
mov
call
dec
cld
repnz
push
enter
push
mov
xor
insb
shl
pop
ret
pop
inc
add
dec
adc
aam
enter
add
pop
mov
push
pop
mov
jo
aad
mov
jb
popa
mov
cli
aas
call
push
sbb
or
mov
addl
test
xchg
pushf
rclb
xchg
mov
xchg
rcrb
frstor
jle
lea
sbb
cmp
ffreep
xchg
mov
sbb
inc
fdivp
xor
pop
fistpll
mov
call
jb
test
mov
or
add
dec
pop
ficoms
xorb
xor
cli
stos
xchg
aam
movsb
in
ljmp
inc
pop
or
mov
cld
cmp
in
clc
cs
pop
xor
lcall
add
cmpsl
loopne
or
push
inc
mov
enter
pop
cli
xchg
test
jbe
or
xor
adc
or
mov
out
push
rol
or
mov
das
and
cs
pop
adc
xor
cmp
imul
add
leave
rorb
xchg
je
mov
push
ljmp
push
stos
shlb
cmp
aaa
inc
icebp
scas
adcb
gs
adc
push
jbe
adc
push
inc
push
aaa
add
mov
and
dec
outsl
xor
or
cmp
push
jae
add
mov
inc
push
ret
loop
jl
aaa
fiaddl
push
js
dec
mov
and
dec
jl
fiadds
xor
test
call
aam
cli
leave
xor
cmp
mov
dec
xchg
test
scas
xor
pop
lahf
mov
enter
mov
js
jb
push
daa
push
in
sub
rol
aam
test
ljmp
mov
cmp
icebp
jg
nop
jbe
gs
call
js
and
stos
mov
sub
hlt
jne
mov
mov
mov
add
ficomps
push
add
dec
movsb
insb
xor
inc
mov
sbb
mov
into
test
je
dec
xchg
jl
shlb
cmp
dec
jb
push
cmpsb
xchg
fs
xchg
sub
sarb
repnz
fwait
sub
pop
xor
or
mov
add
sub
imul
and
xchg
pop
mov
mov
and
lods
sub
mov
pop
cmc
add
or
cmp
and
test
mov
add
pop
cli
adc
ret
test
mov
sbb
fistl
push
push
call
dec
xor
out
loopne
or
add
mov
int
adc
nop
adc
jl
add
ret
loop
cld
call
out
les
dec
movl
sub
call
pushf
loop
sub
stos
fs
sbb
hlt
jae
mov
rorb
mov
inc
cld
and
in
stc
mov
adc
je
sub
loop
xor
jg
adc
sub
insb
add
mov
cmp
push
shlb
adc
fwait
imul
insl
mov
push
adc
inc
pusha
fadd
test
or
jmp
mov
dec
stos
or
int3
push
movsb
or
movsb
ret
pop
jl
cmc
shlb
test
notb
and
pusha
jecxz
add
enter
inc
dec
or
xor
dec
or
lea
scas
push
iret
cld
mov
faddl
ds
popa
je
hlt
fs
test
ret
push
mov
test
push
push
sbb
xchg
push
mov
xor
dec
pop
les
push
add
mov
sbb
and
pop
cs
insb
mov
aad
add
nop
mov
add
add
or
push
dec
pop
stos
cs
pop
icebp
sub
in
dec
adc
inc
xor
mov
mov
pop
sub
xchg
cmp
or
mov
mov
mov
jne
rolb
xor
add
jp
mov
and
dec
add
dec
fwait
sub
adc
xlat
pop
lahf
and
cmp
jnp
enter
incb
sbbb
push
sbb
lcall
dec
addb
mov
scas
out
int3
setns
movsb
sahf
jb
add
mov
mov
es
jb
xchg
dec
or
incl
mov
call
sub
call
outsb
dec
push
cli
push
enter
test
sbb
call
clc
in
pop
inc
and
adc
cli
testb
bound
inc
ret
incb
inc
jle
xor
add
sbb
scas
inc
outsl
add
cld
mov
or
test
and
cmpsb
pop
pop
mov
cmp
out
jp
jne
aaa
je
push
jns
mov
xchg
int3
bound
loope
sbb
xor
add
xor
mov
jg
gs
add
clc
mov
repnz
sbb
in
cli
pushl
ljmp
add
cmp
push
aam
lock
mov
in
das
out
fdiv
ds
call
sub
nop
or
mov
cmp
inc
sbb
inc
dec
jp
sub
pop
mov
xor
dec
orl
fcoms
adc
cld
push
or
push
mov
adc
subl
or
inc
and
insb
mov
data16
fmuls
inc
test
mulb
xchg
inc
call
jmp
mov
adc
and
sbb
mov
cmp
add
loop
jbe
adc
enter
loopne
pusha
outsb
push
push
fs
or
pop
sub
jb
push
xchg
mov
or
push
sahf
es
in
inc
mov
or
xchg
call
movsb
mov
pop
mov
sub
cltd
sub
daa
or
jae
xchg
add
and
jno
test
adc
mov
add
std
fsubs
ja
or
mov
movsb
fmuls
mov
and
orl
and
inc
fnstcw
cmp
pop
sbb
cwtl
mov
jne
movsl
das
mov
inc
insl
dec
js
mov
cltd
adc
loope
pusha
je
add
push
adc
jmp
jb
rorl
sub
or
stos
sub
push
mov
hlt
adc
pop
sub
cs
test
cli
mov
sub
xchg
decl
ds
push
cmp
rcrl
jb
add
test
nop
cmp
dec
out
add
testb
or
in
pop
in
add
mov
cmp
mov
cmpsb
aam
repnz
gs
rclb
inc
repnz
inc
add
jecxz
adc
out
mov
test
sahf
cwtl
aad
roll
inc
and
lock
imul
inc
cmp
adc
cmp
es
cld
mov
xor
scas
push
add
sahf
lret
das
cs
je
test
mov
cmp
and
pop
rolb
mov
es
outsl
sbb
aaa
or
enter
test
xchg
fsqrt
rclb
push
adc
testb
add
or
fbld
and
push
movsb
jne
sbb
inc
ja
cmp
xor
outsb
add
push
mov
fdivl
inc
lcall
lods
insl
lds
aam
outsb
outsb
add
and
mov
push
sub
mov
cs
fdivr
xchg
sbb
or
pop
gs
push
mov
loopne
pop
or
adc
add
inc
jle
pop
adc
fcomip
jmp
out
jne
fbstp
sbb
dec
jbe
inc
out
mov
mov
dec
mov
or
jle
xor
jb
test
jp
in
mov
mov
ret
xchg
sbb
mov
xchg
xor
call
mov
push
jno
pop
or
iret
in
push
xor
mov
paddusb
dec
es
test
and
jecxz
rolb
push
dec
pop
mov
jne
xchg
cs
cmp
jle
jo
shlb
mov
push
inc
stos
mov
das
sbb
popf
add
inc
push
inc
push
shrl
insb
sarb
mov
lcall
incb
cmp
jb
mov
call
mov
ret
or
xchg
popf
inc
mov
push
mov
mov
adc
jne
adc
insb
mov
adc
and
jae
jo
aad
push
inc
rclb
roll
or
push
dec
test
fsts
jge
pop
or
or
pop
adc
add
out
jne
pop
inc
add
push
orb
insl
pop
or
xor
mov
das
sub
cmp
cmp
inc
repz
mov
add
lcall
cld
test
push
mov
lcall
mov
jne
aas
xchg
fucomp
sbb
mov
cmp
mov
xchg
sbb
pop
in
lock
inc
xor
cld
jne
fwait
movsl
imul
shll
sbb
jge
mov
dec
dec
ljmp
and
cmp
test
pop
cmp
pop
jp
movsl
jbe,pt
fsubr
xor
call
cmp
xor
mov
mov
mov
xchg
rol
shrb
popa
and
fdivs
adc
ja
das
jl
xor
inc
mov
out
aas
and
decb
mov
cmp
add
xor
push
push
xor
stos
inc
add
fsubl
sbb
in
mov
ss
push
mov
mov
mov
xadd
clc
pusha
mov
insb
and
cmp
loopne
jmp
adc
jo
mov
mov
pop
add
cmp
cmp
add
push
sub
add
jmp
test
xlat
cmpsb
inc
mov
aas
sbb
cmp
rcl
add
rolb
lea
out
jp
movsb
and
add
fdivrs
add
popa
push
mov
ret
dec
arpl
xchg
pop
inc
add
sbb
mov
inc
adc
push
movsl
test
movsb
ret
cmp
jno
jns
and
js
aam
jecxz
mov
mov
pop
push
mov
cs
fidivl
test
pop
clc
les
xor
bound
dec
sub
fneni(8087
out
cmp
push
nop
mov
pop
es
ds
inc
add
dec
xor
rorb
xor
outsb
pop
sar
das
call
jae
rclb
mov
lahf
dec
test
lea
adc
cltd
ficomps
mov
xchg
gs
aam
mov
dec
and
mov
fiadds
subl
scas
push
xor
add
mov
push
adc
ret
stos
mov
add
push
cmp
add
add
fnstenv
test
lcall
dec
insl
push
cwtl
push
mov
dec
mov
push
mov
xor
scas
push
lods
es
lds
rorb
pop
sbb
fmuls
sub
orb
fsubl
mov
in
mov
lock
in
pusha
adc
test
pop
mov
std
scas
dec
cld
bound
rcrl
enter
dec
dec
adc
push
sbb
imul
pop
aam
les
loopne
test
imul
ret
adc
data16
outsl
cmp
adc
test
or
mov
pop
popa
mov
inc
jp
pop
or
pop
push
loope
adc
push
mov
incl
or
lea
das
mov
xchg
sarb
movsl
shlb
mov
jp
lock
lret
sbb
test
jg
idivl
jecxz
ret
enter
popa
rcll
jmp
xchg
jnp
pop
push
add
test
xchg
dec
cwtl
xchg
mov
hlt
mov
jge
dec
or
into
fdivrl
add
cmp
ljmp
cmp
fistpll
gs
insb
cmc
mov
lret
push
lret
loop
lods
adc
xlat
jle
mov
mov
and
inc
loop
xor
in
and
lret
mov
pusha
popa
in
add
addl
or
cs
aaa
pop
pop
lcall
add
cmp
hlt
ret
idivb
ljmp
adc
test
shlb
cmc
sbb
adc
add
test
stos
push
adcl
add
call
scas
inc
movsb
rclb
in
xor
mov
jbe
pop
incl
fmull
dec
add
xchg
push
and
mov
add
cmp
je
pop
test
ljmp
fs
add
and
add
mov
xchg
aam
xchg
xor
lock
mov
in
inc
insl
sub
stos
or
cmc
xchg
cmp
or
sub
loope
jmp
ja
mov
dec
add
push
jmp
decb
push
movb
xor
ljmp
xchg
or
ror
adc
test
lahf
cmp
push
outsl
mov
adc
mov
add
mov
xchg
fistl
and
pop
push
inc
hlt
outsb
mov
adc
jo
xchg
mov
xor
std
lret
out
sbb
nopl
sub
in
mov
fistl
xor
faddp
rcrb
mov
mov
rolb
das
incb
and
pop
pop
clc
nop
sub
push
sbb
inc
cmpl
loopne
jp
mov
pop
adc
inc
jmp
fcomip
or
les
in
pop
and
pop
pop
sub
sub
lock
enter
sub
sbb
movsb
hlt
movsb
out
aas
inc
pop
sbb
or
shl
mov
lods
ljmp
jmp
sbb
loop
push
xor
lea
xlat
data16
inc
and
mov
mov
das
ss
dec
inc
aam
daa
pushf
sarl
push
cmp
push
addb
or
mov
push
loopne
mov
jp
mov
push
inc
pop
lods
dec
insb
adc
stos
jnp
std
sbb
dec
pop
test
mov
les
ss
push
inc
daa
imulb
and
shll
mov
push
lock
sbb
xor
mov
mov
ljmp
rcrl
outsb
lock
nop
nop
ja
clc
xchg
xor
inc
in
pop
xor
mov
rolb
fbstp
jge,pn
cld
adc
idivl
aaa
aad
roll
and
ss
pop
add
add
test
daa
push
add
je
es
sbbb
jns
mov
xor
pop
and
popa
dec
mov
aam
call
dec
jne
sub
mov
call
outsb
jge
cmc
lcall
jl
cmp
cli
xor
inc
push
arpl
mov
add
mov
push
fbstp
inc
cmp
add
or
rorb
int3
lret
out
mov
jbe
push
insb
mov
outsb
push
push
adc
or
ss
jno
push
xor
int3
sub
rol
and
inc
adc
push
inc
shlb
fdivr
mov
jmp
cltd
iret
addb
pop
in
jmp
push
icebp
je
sub
popl
lea
push
aaa
inc
ss
pop
and
pop
push
push
jp
lret
lcall
loope
in
test
xor
xor
mov
jne
aas
inc
pop
xchg
enter
xor
mov
dec
cmp
clc
mov
inc
dec
inc
push
fwait
adc
dec
sbb
shll
xor
fcom
sub
mov
cmc
ss
lock
xchg
dec
push
add
cmp
fmull
cld
mov
mov
mov
aam
popa
test
push
dec
rorb
push
lahf
popa
call
cmp
negl
loopne
add
pop
call
imul
jnp
xchg
je
scas
mov
jns
ret
dec
push
mov
push
xchg
mov
cli
hlt
rcrb
push
in
pushf
shrb
inc
lea
xchg
cld
sub
jmp
rorl
sbb
xchg
mov
dec
or
dec
shr
inc
in
loop
test
xor
cmp
or
and
mov
or
shr
clc
adc
sbb
mov
fidivrl
shl
bound
in
sbbb
js
insb
jp
pop
mov
add
jmp
push
scas
clc
inc
xchg
clc
fmull
int3
hlt
sub
cmp
push
push
push
test
or
ja
stc
orb
test
cmp
inc
les
mov
clc
or
stc
xchg
ffree
cmp
mov
push
rorb
fdivl
inc
xchg
jne
push
in
call
cmp
inc
mov
jb
add
cmp
inc
dec
xchg
fisubs
mov
filds
mov
pop
int3
push
cmp
xor
mov
xor
pop
xor
add
xorl
pop
movb
jp
lods
mov
mov
mov
lea
lock
mov
je
clc
cmp
idiv
ret
mov
rcrl
andl
cmp
inc
push
gs
inc
or
sub
xor
xor
aad
nop
fdivl
cmp
cmp
fists
incl
inc
or
fimuls
inc
adc
mov
es
jae
outsb
mov
into
insb
inc
test
push
cld
or
sub
scas
push
xchg
cmp
xchg
inc
xchg
sub
sub
loop
enter
orb
dec
sti
out
cmp
push
gs
in
in
mov
jmp
inc
adc
sub
cli
mov
ja
add
hlt
test
cmp
fmuls
lcall
add
dec
inc
sub
sbb
movsl
ja
in
iret
sbb
cli
xchg
dec
jo
lock
xorl
lods
inc
jnp
adcl
clc
dec
xor
out
add
add
js
push
je
pop
xchg
add
or
lret
pop
test
lods
sub
call
into
cmp
je
movsb
fstl
cmp
pop
or
pop
add
xchg
call
push
lods
pushf
std
sbb
jo
xchg
hlt
call
je
jl
clts
mov
dec
dec
cmpsl
or
push
gs
in
sub
lock
int3
cmp
test
inc
push
xchg
add
xor
ja
adc
pop
sub
sbbl
adc
js
mov
notl
mov
pop
sbb
rcll
ljmp
and
or
pop
push
dec
and
pop
imul
dec
js
fsub
adc
std
cwtl
xchg
fcmovnb
cmp
shrb
sbb
sbb
adc
decb
sbb
cmp
xor
xchg
sbb
mov
insl
jmp
sbb
fmull
push
mov
mov
push
cmp
cmp
ja
loopne
shr
jle
gs
cmp
inc
inc
shrb
xchg
cmp
cmp
inc
popf
push
scas
aas
mov
aaa
cmp
ret
mov
add
sub
jne
inc
xchg
or
push
enter
hlt
cld
cld
mov
ljmp
ret
pop
fdivrs
jmp
push
shll
push
sbb
into
or
mov
sbb
inc
push
pop
les
adc
loope
and
test
and
outsb
fadds
push
pcmpeqb
xchg
pop
fs
roll
arpl
jns
add
cmp
add
mov
jl
pop
inc
std
sbb
mov
pop
fs
rolb
pop
negb
push
mov
or
sbb
pop
pop
clc
jmp
inc
sub
sbb
rclb
aad
xchg
es
ret
ljmp
push
mov
je
stc
push
ret
ret
adc
sbb
test
sarb
int3
icebp
inc
xor
cmpsb
sub
sub
xor
into
add
mov
in
dec
push
in
nop
icebp
mov
data16
aaa
mov
xlat
jb
add
rcll
push
inc
pop
aaa
sbb
clc
dec
cmp
push
and
sub
stos
pop
push
nop
inc
sub
test
fstl
leave
push
sub
fistpl
xchg
mov
lock
add
lea
inc
es
rol
mov
fsubs
and
hlt
lret
and
mov
push
inc
and
fsubrs
inc
jl
cs
mov
dec
xchg
dec
rolb
clc
push
test
pop
int3
mov
sbb
fistl
in
lcall
add
mov
push
dec
aam
das
sarl
and
fsubr
inc
fs
call
jg
inc
xor
movsb
lcall
push
fiaddl
movmskps
mov
jo
out
loop
pop
or
and
cwtl
xor
mov
fldl
cld
test
inc
imul
out
dec
mov
push
xor
pop
js
push
out
mov
cs
test
dec
dec
lahf
add
and
jg
push
dec
jne
addr16
push
aad
inc
mov
sub
test
test
test
movsb
inc
enter
fldt
adc
fmuls
js
daa
add
dec
lods
nop
and
mov
pop
xchg
test
jmp
sbb
nop
lea
loopne
fcmovb
add
les
pop
imul
insl
enter
dec
dec
outsl
fbld
call
mov
in
pop
js
push
or
popfw
pusha
xchg
add
add
mov
mov
gs
ret
mov
and
add
pop
aad
cltd
call
xabort
push
popa
xor
mov
les
clc
add
bound
lret
inc
std
repnz
pop
decl
call
mov
dec
sbb
adc
cmp
das
call
gs
mov
add
fdivs
inc
add
loopne
add
inc
dec
push
push
adc
xor
mov
clc
add
es
lcall
les
adc
adc
aam
js
dec
inc
movsb
inc
nop
movsb
sbb
fnstsw
rolb
push
or
push
xchg
ljmp
xchg
pop
add
sbb
push
and
dec
inc
sbb
cmp
pop
jl
cmp
push
adc
leave
push
dec
push
insb
fs
adc
pop
pop
sar
adc
adc
push
or
mov
and
lret
enter
into
push
int3
add
inc
mov
aaa
xor
es
dec
loop
or
into
push
and
imul
sub
add
movsb
and
push
push
ljmp
jp
lock
and
or
int3
outsl
sub
inc
pop
stc
subb
cs
push
push
das
jge
jmp
jne
sbb
or
cld
int3
xchg
mov
fsubrp
xor
sub
adc
push
outsb
pop
fstl
adc
push
cmp
add
or
rcrb
call
das
add
push
int3
scas
xor
dec
fstpl
inc
loopne
add
adc
andb
push
or
adcb
or
mov
mov
aas
pop
and
fsubs
pop
js
nop
push
mov
test
xor
push
loopne
xchg
test
cmp
jne
mov
dec
js
inc
jmp
push
icebp
adc
mov
in
lock
lea
out
cli
xor
fwait
mov
sbb
dec
cmp
pop
shrl
loopne
and
jle
push
test
push
popa
add
or
add
sub
inc
jne
call
not
adc
cmp
mov
loop
enter
add
add
rol
sbb
inc
and
int3
aas
xchg
add
push
or
xor
roll
sbb
dec
fcoml
inc
push
sbb
mov
push
fwait
push
and
pop
jne
enter
mov
fcmovnb
inc
push
pop
pop
sub
bound
xchg
popf
or
jg
leave
xor
pop
call
push
xchg
push
hlt
ffreep
popf
adc
ret
fwait
out
call
dec
pop
or
ret
jae
ljmp
dec
inc
call
mov
push
aam
push
pushf
sbb
call
jo
inc
loopne
xor
data16
ds
inc
sub
push
lock
pop
clc
cmp
and
nop
cmp
ret
in
mov
push
ret
or
sbb
fldt
xchg
nop
js
jle
mov
faddl
mov
adc
add
in
add
add
xchg
push
mov
dec
filds
push
mov
jbe
push
push
mov
and
jmp
xchg
add
cmpb
cld
xlat
sub
add
or
addb
rcrb
and
in
sbb
mov
dec
mov
movsb
cwtl
mov
stos
rclb
movsb
xchg
orb
jns
pop
cli
pop
lcall
sub
insb
xchg
test
or
adc
pushf
loopne
mov
mov
test
jne
fidivrl
add
add
ss
hlt
mov
push
enter
in
push
mov
jb
add
int
mov
jne
lods
pop
aam
and
aam
xor
and
cmp
push
test
cmpsl
out
repnz
cmp
add
mov
pop
dec
push
jecxz
adc
in
adc
out
shlb
push
pop
and
lcall
ljmp
cli
jge
jle
sbb
enter
mov
pop
push
add
imul
fsts
lea
sub
jbe
mov
mov
fidivrs
and
aaa
cmp
mov
fcom
push
test
fistpl
pmaxsw
pop
inc
dec
stos
mov
dec
cmp
jl
sub
mov
js
ficoml
adc
sub
sbb
cmp
shll
mov
jl
icebp
fs
fiadds
mov
call
cmp
loopne
ret
adc
push
jg
or
pop
xor
mov
adc
orb
jo
push
and
imul
out
add
sub
sti
les
insl
adc
andb
cmp
add
or
and
xchg
into
xor
enter
mov
xchg
inc
pushl
or
mov
inc
test
fbstp
xchg
inc
fidivl
push
decl
stos
arpl
fadd
push
je
ficoms
add
pop
fs
and
dec
push
xor
out
xor
lock
add
xchg
movsb
inc
jb
cmpsb
add
pop
cmpsb
sbb
lea
jne
inc
cmp
mov
aam
mov
add
cltd
aam
cmpsb
sbb
mov
adc
add
adc
cltd
inc
lahf
js
cmp
xchg
and
push
pop
add
hlt
nop
stos
test
fld
push
test
sarb
ret
mov
shlb
roll
or
jo
iret
das
sub
clc
mov
sbb
add
pop
mov
adc
adc
adc
ret
cmc
cli
sbb
sbb
adc
mov
push
aas
into
jno
clc
and
mov
mov
or
or
leave
out
mov
out
test
inc
aam
adc
pop
jbe
mov
add
cmp
nop
pop
pop
and
test
cmp
call
adc
test
cmp
scas
imul
fwait
ja
add
fstpl
mov
out
push
cmp
sbbb
push
sub
push
adc
ds
ret
sub
pop
pushf
dec
adc
jecxz
aam
inc
xor
adc
hlt
cltd
into
mov
das
fst
or
mov
int3
nop
imul
inc
std
out
fisubs
jg
adc
push
push
in
jmp
cmp
push
pop
cltd
adc
xchg
pushf
inc
in
bound
enter
ret
add
arpl
push
ret
mov
jbe
aaa
pop
movsb
pop
or
or
mov
movsb
ljmp
add
inc
testb
les
adc
repz
mov
pop
xor
or
cmpsl
jb
inc
add
mov
adc
sub
lcall
add
push
ja
int3
sbb
push
or
orb
andb
dec
shrl
fsts
aas
add
cmp
in
scas
pop
and
or
xor
inc
mov
sub
push
sti
sbb
adc
xorl
sub
jne
mov
sub
dec
dec
ja
dec
js
lock
sti
movl
fmuls
mov
jmp
adc
mov
cmp
mov
push
aad
jle
push
inc
mov
fs
dec
cmp
imul
enter
mov
adc
push
inc
jle
mov
xlat
fcmovnbe
jge
adc
jl
dec
mov
xor
mov
mov
xorb
test
sub
pop
insb
pusha
sbb
adc
xchg
mov
test
pop
les
and
and
call
test
mov
xorb
jmp
repnz
add
push
cwtl
or
dec
mov
dec
inc
je
call
push
push
outsb
repnz
xor
shr
sub
imul
rorb
fdivrs
cmp
sub
push
xlat
loop
mov
or
add
xchg
mov
data16
mov
fisubrl
sub
sub
pop
shlb
enter
adc
pushf
ret
cmp
adc
sbb
cs
inc
or
or
mov
inc
mov
push
mov
ds
stos
dec
adc
push
push
mov
lret
filds
jbe
shlb
ffreep
inc
lods
add
or
push
push
roll
adc
mov
rclb
shlb
pusha
add
sub
add
cs
add
push
lahf
push
push
and
xchg
mov
push
jmp
test
jo
rcrl
push
negb
mov
imul
push
and
lcall
sbb
add
pop
sbb
cmp
test
and
aas
cld
imul
cmp
dec
std
mov
push
push
imul
addl
repnz
ljmp
ret
jne
adc
std
sbb
mov
adc
add
or
xor
jb
dec
mov
lea
testb
or
cli
xor
fimull
adc
jo
or
mov
push
jbe
out
pshufw
lcall
scas
xchg
push
and
add
push
push
dec
cmpsb
xchg
jne
cmp
or
ljmp
mov
pop
inc
les
push
pop
je
and
sahf
es
call
cld
fisubs
and
hlt
cld
dec
inc
int3
imulb
xchg
outsb
rorl
rorb
push
in
xor
das
and
mov
out
jne
adc
loope
or
pop
sub
jo
mov
and
into
jge
add
mov
push
sub
cli
imul
and
in
xor
jle
xchg
push
push
imul
mov
mov
inc
jmp
jmp
cli
gs
aas
adc
lods
xor
je
orl
mov
push
lods
int3
cmp
test
xchg
mov
or
pop
and
sub
lea
adc
add
cs
or
adc
ret
insb
popa
in
sbbl
pusha
int
push
out
push
ss
xchg
xor
push
ret
popf
test
loopne
mov
push
std
and
sbb
sub
icebp
mov
xor
mov
mov
pop
adc
xchg
dec
mov
sub
ret
les
adc
pushf
aam
mov
movsb
push
pop
and
inc
mov
ljmp
ljmp
sub
xor
jmp
lock
sub
mov
loopne
push
mov
cmpsb
sbb
pop
adc
test
inc
xor
jbe
movsb
lock
dec
mov
jmp
loopne
pop
out
adc
por
loope
lods
daa
add
stos
push
fwait
popa
shr
push
adc
rolb
sub
xchg
jecxz
mov
jl
mov
icebp
aad
inc
test
mov
lret
pop
push
gs
leave
nop
push
cld
pop
mov
sub
xor
enter
cmc
dec
fimuls
stos
jge
mov
lock
push
lea
hlt
shlb
push
sbb
xor
lock
pop
xor
out
lds
cli
lock
out
test
stos
pop
dec
es
lcall
pop
jo
jbe
sbb
pop
std
loopne
fstpt
xchg
fs
jge
ret
psllw
rcrb
inc
mov
fxtract
in
jo
adc
fstpt
push
test
insb
cmp
sub
add
push
xor
jb
out
cmp
push
je
pop
movsb
decb
out
xor
mov
rorb
ret
or
xor
cmp
jecxz
ret
dec
adc
pop
jo
sub
pop
push
std
dec
adc
outsb
adc
insl
mov
push
lahf
imul
jp
jle
hlt
incb
outsl
or
movsl
insb
sbb
cmp
sub
adcb
std
iret
push
xor
sub
mov
push
add
and
aas
sub
push
xor
movsb
aam
sbb
jo
push
fisttpll
xor
or
repz
or
jge
cmp
leave
push
inc
pop
pop
cld
stos
icebp
jecxz
inc
loopne
sar
mov
xlat
pop
sub
add
adc
adc
jmp
das
pushf
and
add
rcr
pop
jo
adc
or
push
int3
imul
cmp
cmp
sub
sub
insb
bound
inc
imul
push
pop
dec
inc
push
sbb
adc
in
or
jne
mov
popa
inc
aaa
call
xchg
dec
inc
loop
dec
filds
arpl
fs
jg
adcb
push
push
cli
popa
inc
mov
fs
repnz
mov
sbb
es
push
cmp
mov
int3
mov
sub
and
mov
adcl
xor
pop
and
ret
or
jge
pop
and
and
gs
loopne
lock
xor
push
and
mov
jbe
decb
ret
mov
add
std
push
push
js
jne
inc
retw
pop
or
ja
xor
inc
test
mov
fsubr
adc
cmpsl
popa
sbb
mov
xor
ret
in
out
loopne
aam
jmp
jne
je
or
sub
xchg
pop
sahf
jg
mov
dec
mov
jne
xor
add
clc
je
add
movq
test
cld
mov
mov
lea
lock
push
mov
test
adc
cmp
clc
stos
lods
lods
rol
adc
cli
icebp
mov
decl
xor
punpckhwd
mov
pop
cmc
ljmp
stos
lcall
push
std
dec
lahf
popf
adc
jle
inc
push
xchg
add
mov
push
sub
call
add
mov
imul
hlt
and
and
sbb
dec
lock
xchg
repz
inc
leave
dec
or
mov
mov
xor
xor
inc
mov
pop
dec
inc
push
add
inc
mov
xlat
pop
jle
pusha
cltd
dec
loop
sub
cmpb
xor
int3
insl
iret
pop
dec
jle
mov
mov
stos
cmp
out
into
lods
mov
adc
adc
add
push
imull
sub
and
lret
dec
mov
stos
insb
inc
loope
or
jmp
movl
cwtl
lret
and
cwtl
push
int
mov
pop
jp
ss
adc
sar
adc
inc
mov
pusha
fcomp
je
cld
sbb
mov
cld
call
int3
pop
in
jge
and
aam
pop
add
dec
jecxz
mov
dec
mov
cmp
jmp
in
push
dec
xchg
adc
dec
ret
add
aam
iret
dec
repnz
jmp
fs
aas
xchg
mov
mov
adc
dec
loopne
andl
inc
push
xchg
rol
sbb
cld
cmpsb
ret
add
jo
jo
cmp
aaa
sub
or
xor
inc
and
mov
fldl
jge
pushf
mov
mov
xor
xchg
das
dec
jg
add
je
mov
shll
aam
jb
add
shll
mov
sub
cmp
add
sbb
push
les
push
mov
jecxz
rclb
loop
add
in
jbe
and
xchg
dec
mov
js
leave
call
fidivl
xchg
lcall
ds
mov
rsm
sub
shrb
or
clc
sbb
pop
or
jbe
es
pop
dec
call
push
push
int3
push
or
roll
cmpsb
cltd
stos
std
popf
sub
cs
lret
enter
inc
dec
xor
std
push
dec
sar
push
aaa
subl
incl
xchg
mov
movsl
sub
add
adc
das
dec
js
push
ret
push
cmpsb
pop
hlt
mov
sub
add
sub
mov
nop
adc
mov
xchg
pushf
push
lock
jnp
aam
and
fiaddl
shll
pop
adc
sbb
rorl
or
jae
mov
mov
lret
inc
add
dec
inc
ss
push
pushf
inc
pusha
xchg
fmuls
dec
insl
mov
stos
push
dec
ret
movsl
mov
mov
inc
mov
xchg
push
stos
fimull
cmp
sub
jecxz
ret
aam
popa
push
and
push
aad
sbb
fdivr
push
nop
test
insb
pop
dec
inc
insb
cmp
xor
and
andb
mov
sub
fmul
lcall
js
xchg
cmpsb
push
mov
xorl
insl
or
in
testb
lea
clc
shll
add
inc
jne
cld
js
inc
mov
mov
lret
leave
xor
xchg
sbb
lods
adc
cwtl
inc
aaa
jae
or
outsl
and
rorb
adc
jg
xchg
mov
add
andl
adc
shl
call
movsb
inc
cli
lahf
aas
gs
dec
push
mov
ja
enter
hlt
popf
ljmp
adc
cmp
addb
incl
lock
sub
push
loopne
push
and
cmp
lods
jl
mov
pop
loope
fwait
inc
cmp
push
add
daa
or
loopne
loopne
inc
push
in
das
sbb
mov
add
nop
add
mov
mov
push
sbb
insb
dec
mov
sub
notb
or
call
mov
jb
xor
pop
out
cmpsl
test
or
pop
add
pop
adc
test
add
jp
inc
mov
mov
pop
shrb
xchg
addb
add
dec
cmpsb
mov
out
addr16
sub
add
inc
push
mov
outsl
lods
sbb
xor
mov
or
fsubrl
dec
and
xchg
rclb
xchg
lea
add
xor
pop
xchg
pop
push
jo
or
stos
test
les
xor
ja
in
pop
sbb
pop
ret
aam
mov
test
push
push
cmpb
sub
adc
mov
inc
iret
pop
and
or
mov
pop
cmp
inc
stos
jb
jb
dec
sbb
jo
mov
ret
stos
and
inc
push
cmp
sub
inc
lcall
xor
std
adc
mov
subb
sub
sub
adc
outsb
fmull
jl
inc
jmp
fs
jo
push
hlt
clc
mov
sahf
adc
in
rorb
cs
push
or
and
mov
mov
inc
mov
ret
pop
fcoml
mov
mov
aad
mov
nop
arpl
rclb
mov
sub
push
mov
aam
xor
mov
dec
orb
sub
loopne
push
subl
sbb
xchg
clc
cmp
ret
sub
or
lods
xchg
enter
xchg
adc
push
movsl
mov
dec
add
aaa
pusha
push
mov
xchg
cmp
push
mov
rep
call
mov
jb
pushf
mov
aaa
hlt
aad
or
insb
fcomp
insb
aad
hlt
inc
add
mov
in
inc
rcrb
or
mov
inc
incb
push
cld
push
mov
xor
sub
mov
push
push
aam
aaa
data16
sbb
stos
in
xor
xchg
mov
sub
jecxz
inc
mov
jae
add
test
and
push
adc
push
cmpb
mov
mov
test
ds
mov
sbb
call
rolb
jno
sub
incl
flds
push
sub
inc
outsb
in
mov
loope
jg
cmp
cwtl
adc
cltd
sub
or
sub
mov
repnz
sbb
js
pusha
mov
sahf
mov
and
add
mul
in
cmp
int3
sbb
je
lea
add
lea
xchg
pop
mov
std
les
mov
jb
ljmp
push
out
idiv
pop
aam
xor
jmp
inc
fmull
orl
clc
add
add
notb
xchg
sub
jo
add
xor
lods
movsl
lahf
mov
cwtl
mov
test
add
pop
xor
sbb
nop
add
loop
dec
sbb
fistpll
push
fcmove
sbb
mov
push
cs
mov
addr16
shl
push
pushl
pop
sub
adc
xor
add
sub
push
add
cli
mov
outsb
shr
push
jo
movsb
bound
add
jae
dec
lea
test
xchg
pop
mov
hlt
xor
pop
je
adcl
sub
fisttpll
xor
sbb
cmp
pop
je
dec
push
add
ja
pop
jo
nop
rol
mov
cmp
ret
rclb
pop
clc
sub
sbb
cmc
xor
jbe
mov
sbb
jmp
xchg
insb
ret
cmpsl
jg
jge
or
ficoms
call
and
pop
xor
dec
ror
fmull
cld
and
or
add
xchg
jae
out
subl
mov
push
jp
loop
add
fisubs
add
mov
jno
sbbb
push
dec
pop
push
aam
decb
nop
cmpsb
in
adc
xor
subl
test
mov
je
shr
push
inc
std
dec
push
add
arpl
and
adcb
inc
dec
push
insb
push
punpckhwd
sbb
push
dec
dec
cli
cmpsb
xchg
in
bound
mov
sub
xchg
cmpsb
xchg
js
push
mov
mov
inc
js
data16
gs
adc
fadds
xchg
loopne
mov
scas
xor
sbb
push
movb
in
shlb
jne
ds
or
mov
mov
or
addb
mov
pop
incl
loop
push
std
mov
fsubs
xlat
rclb
inc
stos
xor
add
data16
std
sbb
pop
and
cmpsb
je
inc
lcall
pop
icebp
mov
or
inc
stos
mov
mov
fiadds
or
call
sarb
add
push
adc
push
adc
push
ljmp
mov
andl
mov
clc
popf
and
push
int3
lods
cli
imul
lods
xor
mov
es
mov
into
add
mov
in
pop
dec
mov
jb
subb
repz
insb
negl
movsb
lods
js
mov
pcmpeqw
rol
fwait
pop
mov
xor
rcl
aam
nop
popa
xor
jp
stos
push
mov
int3
lock
and
addl
jne
movsb
adc
xchg
push
xchg
mov
xchg
sub
pusha
pushf
std
push
mov
ret
mov
push
sub
je
mov
add
push
loopne
mov
add
ret
adc
adc
inc
dec
sub
xchg
cmp
pop
popa
mov
mov
add
mov
stos
mov
sbb
cwtl
jb
imul
enter
ret
cmc
enter
nop
adc
nop
fisubs
push
mov
shll
test
add
cld
ja
xor
cmp
jmp
jae
mov
loopne
add
push
call
adc
add
fcmovb
fadd
aam
inc
jg
sub
test
adc
jbe
mov
mov
xchg
push
pop
cwtl
adcb
std
or
inc
mov
dec
lea
adcl
xchg
mov
ja
sahf
ffree
xchg
jnp
add
jg
push
adc
push
repnz
mov
rorb
xchg
or
les
push
mov
push
ret
popa
arpl
add
enter
jecxz
sbb
sbb
or
sahf
rolb
and
push
pop
cmp
cmp
lock
mov
test
xchg
lock
jle
loope
movsl
adc
lcall
jecxz
adc
incb
cli
sbb
sub
pop
mov
shr
push
xchg
sahf
and
lock
decl
adc
das
paddsb
test
or
fmuls
andl
xchg
test
mov
pslld
shl
outsb
mov
dec
fldpi
data16
mov
cli
std
add
dec
mov
int3
push
ljmp
jmp
xchg
inc
imul
cs
cmp
sbb
cmp
fcomps
jae
push
pushf
mov
jo
push
sub
pushf
lea
sahf
outsl
mov
loopne
adc
into
adc
or
mov
adc
push
movsl
in
enter
sti
invd
mov
mov
lods
call
xchg
out
sub
shr
pushf
movsl
mov
push
pop
js
rclb
add
jle
stos
sub
mov
repnz
subl
adc
adc
idiv
adc
fdivl
in
xchg
daa
dec
push
mov
mov
or
movsb
jo
scas
fcoms
xchg
nop
mov
add
sbb
repnz
xchg
lret
cmp
in
pop
adc
test
add
incl
das
loopne
push
cmp
decl
divl
sarb
jne
dec
add
and
dec
inc
data16
loopne
cmp
jne
mov
jp
and
xchg
clc
xchg
push
sahf
jmp
test
js
stos
loop
int3
aam
mov
add
mov
lock
inc
cwtl
pop
loope
mov
jbe
xchg
mov
movsb
adc
clc
enter
shl
inc
xchg
jge
cld
xor
into
sahf
js
mov
push
movb
roll
adc
push
in
push
xorl
incl
push
adc
dec
adc
dec
inc
jne
push
and
add
inc
xchg
lods
dec
jp
sahf
jmp
jle
stos
pop
imul
inc
lea
fidivs
notb
orb
jge
mov
and
fimuls
lods
fimuls
or
cld
or
adc
jns
fimull
or
lock
sub
in
xchg
jbe
add
xor
mov
sbb
inc
iret
call
adc
push
sub
mov
rcrb
aad
push
stos
add
sbb
dec
fdiv
xchg
sub
or
jns
rcr
xlat
fdivrs
pop
mov
push
adc
inc
sbb
dec
jecxz
xchg
push
mov
mov
loopne
sahf
mov
mov
pop
cli
cmp
rol
sbb
sub
int
mov
push
cld
inc
test
add
sar
shlb
cmp
xchg
or
lea
test
sub
je
ss
daa
les
jnp
or
data16
cmp
fwait
mov
mov
test
int3
cli
dec
cmc
sub
xchg
xor
push
sub
adc
lea
cmp
add
jge
sbb
adc
lret
dec
lods
jbe
add
add
fisttpll
and
or
xchg
shlb
pop
rolb
hlt
add
push
cmp
or
test
jo
mov
mov
cmp
fsubs
and
clc
lar
mov
mov
lea
adc
inc
inc
call
push
cmpsl
add
rorl
rcl
push
dec
loopne
test
scas
pop
pop
sar
loope
add
cmpsb
sub
int3
inc
loopne
jne
ret
inc
inc
clc
cmp
stos
inc
jp
mov
ror
pusha
push
cli
and
add
mov
dec
loop
or
and
mov
xor
mov
mov
icebp
fimuls
dec
rcr
shll
mov
hlt
nop
pop
mov
sbb
add
mov
dec
pop
adc
test
dec
jne
mov
dec
dec
or
jecxz
movsb
call
or
aas
aaa
jo
cmp
cmp
dec
dec
lret
xchg
xchg
mov
cmp
outsl
out
inc
xchg
inc
dec
pop
push
push
or
in
pop
dec
pop
ret
jmp
mov
pop
adc
ret
ljmp
mov
sub
push
loope
push
nop
adc
loopw
mov
sub
push
addl
xchg
sbb
pushf
pushl
shrb
cmp
add
into
push
outsl
pop
jnp
out
add
data16
ret
pop
mov
popa
sub
add
pop
sarl
cvtdq2ps
mov
add
insb
outsb
or
or
cmp
sub
mov
into
divb
cmp
adc
je
xchg
les
adc
test
loope
sbb
jge
decl
or
push
mov
sub
mov
and
mov
dec
dec
or
cmp
push
je
mov
call
fcoms
and
cld
mov
push
repnz
adc
test
jmp
lret
ja
stos
ljmp
rcrb
lock
pop
in
test
inc
jo
mov
cli
or
inc
shlb
fs
dec
dec
mov
test
test
nop
sbb
test
aaa
add
xor
icebp
pop
push
ds
mov
mov
ss
nop
mov
jno
push
push
cmp
mov
or
les
sub
mov
or
pop
outsl
fstpt
ret
push
rcrl
pop
push
sahf
js
aam
push
les
add
in
mov
ret
push
xor
in
rorb
std
lock
test
jo
sbb
call
ss
and
add
cli
xchg
pop
xor
push
ds
ljmp
lock
mov
jne
rol
xchg
ljmp
inc
pop
addr16
xor
int3
bound
mov
xor
imul
test
lock
sub
mov
jns
adc
stos
add
inc
xor
mov
ljmp
jbe
clc
fadd
sbb
inc
xchg
nop
add
shl
sahf
test
inc
dec
inc
fists
adc
mov
mov
notl
cld
inc
ds
cmp
and
sub
push
adc
or
push
or
mov
add
inc
sub
shlb
loopne
inc
add
add
add
into
test
push
jecxz
icebp
je
or
iret
cmp
loope
ja
inc
inc
jnp
jne
push
mov
inc
int3
fsubrl
hlt
mov
mov
inc
mov
jl
insl
cwtl
fdivrs
lea
push
dec
es
mulb
and
mov
in
cld
jl
xchg
cmp
mov
push
xchg
cmpb
andl
pop
xchg
pusha
push
loop
cmp
xor
add
dec
call
fs
xchg
daa
inc
loop
jo
repnz
incl
pop
jmp
orb
xorl
xchg
adc
mov
outsb
adc
adc
add
jle
push
adc
mov
xor
cpuid
loopne
adc
xor
cmpsb
cld
sub
mov
xor
adc
cs
pop
pop
lock
inc
iret
pop
adc
and
adc
add
insb
pop
cs
leave
xor
sbb
je
rcr
nop
scas
out
hlt
mov
gs
and
std
or
scas
mov
inc
mov
xor
inc
movsb
mov
jmp
sub
iret
pop
mov
inc
insl
pop
rolb
aaa
xor
inc
pop
lret
or
xor
and
jg
or
mov
xchg
pop
xor
out
mov
cmp
and
pop
cmc
and
mov
mov
push
mov
hlt
clc
cmp
dec
cli
mov
scas
test
cmp
js
mov
dec
mov
push
icebp
xor
pop
push
xchg
sbb
adc
cmp
aas
aam
shlb
pushf
int3
cmpsb
shrl
push
or
push
es
jl
mov
cmc
insl
inc
push
outsb
outsb
outsb
xchg
jmp
dec
fwait
mov
mov
cmp
xchg
or
adcb
xor
mov
dec
fistpl
mov
sub
mov
or
push
fdivs
mov
je
daa
mov
inc
cmpsb
imul
sub
jne
ds
aad
add
ret
jb
mov
mov
out
push
pop
pop
adc
sbb
jmp
add
xchg
movsb
and
loop
cltd
dec
ljmp
add
test
mov
popa
aad
dec
int3
dec
mov
adc
dec
inc
inc
push
xor
lret
jmp
aad
cld
loopne
push
pop
push
movl
xor
scas
mov
clc
xor
adc
lock
push
insb
sti
inc
jl
nop
dec
cmp
mov
dec
push
out
jecxz
in
xor
ret
xchg
bound
push
push
add
lock
sub
icebp
xor
js
add
xlat
add
hlt
push
xchg
inc
dec
fdivrs
push
incb
movsb
clc
push
shll
and
shrl
inc
push
inc
das
pop
add
inc
sub
shr
jae
jecxz
inc
cli
push
pushf
push
cld
jmp
repz
aaa
sub
mov
shl
adc
add
xchg
inc
jp
pop
push
sahf
dec
xor
mov
les
and
test
push
mov
orb
and
call
scas
test
nop
jg
dec
fdivrs
or
addr16
das
test
rol
cmpsb
inc
xor
std
inc
ljmp
aas
rol
and
stos
movd
or
xlat
mov
call
adc
add
int3
dec
or
push
into
hlt
gs
inc
and
inc
hlt
push
jge
pop
rorb
mov
je
mov
sbbb
push
push
fs
mov
adc
les
jbe
add
mov
cwtl
test
fsubrs
shlb
cli
lock
clc
mov
icebp
out
inc
jo
adc
cmc
cmpsb
or
mov
jge
xor
aad
decb
or
faddl
add
push
mov
subb
and
movd
add
es
dec
movsb
mov
jle
nop
arpl
push
and
dec
clc
mov
adc
out
ret
ja
jne
lock
adc
stos
movq
outsb
push
mov
pop
sbb
mov
das
nop
in
jne
dec
dec
mov
cmp
aam
adc
aaa
insl
imul
or
cmp
stc
add
icebp
mov
and
test
add
xchg
lock
jl
test
mov
fcomp
and
gs
xor
add
add
loopne
xchg
or
push
ret
mov
add
mov
sub
nop
or
insl
cmp
dec
aam
xor
ret
sahf
mov
fstps
rcrb
inc
leave
mov
push
cmp
sti
mov
movq
mov
or
or
adc
mov
mov
in
lret
inc
sarl
sub
pop
out
mov
jl
jge
jb
inc
rclb
adc
inc
fcmovb
jmp
fstpl
or
add
inc
and
pop
loopne
ret
pop
test
dec
sbb
add
sti
mov
add
jl
mov
call
sbb
jo
shl
flds
pop
lea
cmp
syscall
pop
in
adc
push
lcall
xlat
idivb
fwait
add
inc
insb
inc
xchg
adc
rorb
cs
or
push
call
cmp
stc
jns
out
push
lret
aaa
adc
or
xchg
jl
sbb
inc
cmp
jb
clc
out
fcoms
fimull
ret
push
mov
mov
pop
in
sub
xchg
and
cs
sub
xchg
sub
add
ds
test
dec
inc
jmp
push
gs
sub
and
add
xorb
push
hlt
push
adc
dec
loopne
cmp
popf
js
fidivs
aam
jnp
lods
mov
or
jmp
ficoms
pushf
cld
push
push
int3
test
lock
push
loop
gs
incl
jmp
jo
push
jmp
push
or
mov
or
scas
mov
dec
popf
push
out
rcr
cmc
or
mov
inc
aam
test
ds
repnz
push
mov
mov
outsl
sbb
mov
aad
xchg
cmpsb
es
push
push
xor
adc
nop
jne
and
fcomps
es
mov
shll
fdivs
push
ret
rclb
mov
js
hlt
or
and
cmpsb
std
ret
movsb
mov
jne
mov
jg
aas
rorb
shl
mov
pushf
and
fadds
adc
cmp
pop
add
add
pop
sub
mov
add
push
fisubrs
mov
or
adcl
je
es
xor
jle
jmp
fdivl
mov
mov
std
cli
or
jbe
mov
sub
aaa
pop
sarb
idiv
cld
xchg
push
into
dec
imul
or
sub
sub
in
les
lcall
adc
xchg
xor
inc
mov
jno
pusha
lods
xor
push
xor
pop
xchg
cmpb
je
sub
das
clc
outsl
and
jmp
mov
cmpsb
je
cld
mov
pop
push
and
repz
add
nop
mov
daa
pushf
inc
mov
cmp
jmp
pop
or
or
and
fs
add
in
dec
add
mov
xor
push
push
lods
repnz
data16
xchg
les
lods
cmp
mov
ret
add
mov
lock
push
mov
xor
inc
mov
js
inc
mov
test
push
dec
scas
push
test
jmp
fs
hlt
frstor
mov
cld
sub
jl
mov
cmp
test
outsb
xchg
adc
pop
hlt
addb
xchg
jb
aaa
inc
scas
in
pushf
clc
je
outsb
pop
or
scas
add
push
xor
ret
mov
call
push
jmp
sbbb
mov
shlb
xorb
or
mov
and
sbb
push
rolb
dec
mov
mov
jge
repz
std
pop
nop
call
scas
mov
add
jne
adc
pop
cmp
add
ret
ret
imul
ficomps
mov
xlat
push
xor
ret
jno
add
ss
rorb
jg
lock
mov
xchg
movsl
xor
mov
jo
jl
ljmp
cmp
loop
aaa
fstl
or
pop
mov
mov
inc
mov
in
or
adc
xor
imul
addb
lea
push
push
inc
js
cs
xchg
mov
aad
in
or
clc
pop
xchg
dec
rclb
fadds
push
pop
xor
inc
test
mov
xchg
inc
xor
cld
push
aam
mov
mov
and
movsl
add
pop
sahf
cli
pop
bound
sbb
lcall
bound
mov
jne
mov
ja
popa
sbb
fsubs
adc
stos
ljmp
push
adc
push
dec
lods
adc
mov
adc
sbb
roll
adc
xchg
sarl
sbb
pop
ret
lock
jl
pop
add
push
dec
jne
sbb
add
lret
ret
push
jbe
or
out
pop
lods
std
adc
sub
sub
adc
mov
js
jmp
cmp
decl
je
xchg
adcl
testl
sub
cmp
xorl
inc
shrb
push
push
rcll
sarb
adc
sbbl
test
adc
and
fcmove
test
inc
mov
jmp
clc
mov
cmpsb
push
incl
lret
leave
lock
or
enter
insl
lods
add
int
mov
inc
jl
push
popf
or
mov
push
jg
clc
int
push
pop
incl
fnclex
jne
xor
push
dec
outsl
sbb
xorb
sbb
into
decl
lcall
or
adc
mov
loopne
loopne
pushf
adc
lret
addb
sbb
add
mov
push
inc
jbe
adc
mov
loopne
lea
pop
add
outsb
and
ficomps
dec
jb
cmpsb
mov
inc
das
scas
pop
ror
mov
push
sub
jmp
lods
mov
add
inc
cwtl
mov
mov
outsb
inc
clc
clc
fbstp
movsl
fs
in
adc
ja
and
out
inc
adc
mov
push
rorb
lea
add
push
dec
xchg
jb
pop
adc
adc
fmull
mov
or
add
jle
imulb
xor
sbb
dec
push
sbb
fcomps
loopne
adc
mov
cmc
jg
add
shlb
cmp
push
int3
sub
mov
andb
mov
inc
push
sbb
adc
test
mov
les
pop
pushf
dec
mov
pop
add
or
xor
idivl
or
mov
cmp
or
sbb
jno
mov
push
rcrl
rcrl
mov
sti
or
enter
dec
push
notb
adc
cmp
or
cli
jge
mov
dec
sub
gs
push
ret
jg
push
leave
aaa
roll
rorb
cmp
mov
popa
popa
mov
fwait
les
adc
push
sbb
adc
xor
add
and
push
enter
pop
andb
mov
shll
icebp
jmp
mov
pop
scas
dec
je
or
push
arpl
mov
fsubl
aam
jo
mov
rdpmc
and
hlt
xor
pusha
popf
dec
xor
cmp
push
add
repnz
jo
ret
jnp
lds
inc
mov
cld
adc
rolb
jae
push
ljmp
movl
push
ret
push
inc
mov
adc
lods
fsin
cmp
int3
mov
dec
or
cmp
adc
cmp
mov
push
inc
dec
test
adc
into
sub
int3
jne
movsb
pop
sub
pop
cmp
clc
jbe
js
adc
and
cwtl
sub
in
push
push
hlt
insb
rcrl
push
mov
jg
cmp
add
stc
pop
xor
imul
js
rclb
push
fs
or
or
or
mov
adc
xor
or
hlt
jp
into
in
mov
add
mov
jno
shlb
popw
es
or
mov
xlat
shll
clc
mov
cs
mov
repnz
add
sbbl
mov
in
test
sbb
bound
imul
call
adc
int3
scas
push
xor
sarb
add
mov
jg
test
push
enter
mov
aaa
ljmp
xorps
mov
and
outsb
jecxz
and
int3
imulb
cmpsb
test
mov
movsb
pop
push
lahf
and
mov
push
ret
js
push
or
gs
stos
or
test
stc
push
repnz
pop
out
jecxz
gs
inc
repz
iret
std
and
push
xchg
and
mov
call
jmp
dec
jbe
add
dec
out
test
in
push
movsl
dec
mov
mov
in
sbb
out
mov
and
jnp
push
push
push
std
popf
lret
inc
ret
mov
push
push
cmp
pop
inc
adc
mov
popa
daa
xor
cltd
outsb
xor
cmp
dec
je
loopne
push
pushl
cli
mov
fidivrs
push
fistl
ret
xor
imul
imul
and
insl
imul
xchg
cmp
call
xor
hlt
frstor
std
stos
jae
mov
lods
jmp
cmc
jg
mov
cwtl
vhaddps
pop
lds
mov
ja
add
aas
pop
push
cld
gs
xchg
add
gs
imul
es
cmp
push
aas
pusha
add
aam
popa
pop
mov
aam
inc
fwait
int
in
adc
fwait
push
stos
push
mov
int
jnp
and
test
nop
push
push
insb
mov
fistpl
cmp
jne
adc
scas
push
int
mov
and
sbb
adc
lods
hlt
pop
ss
dec
hlt
outsb
fldcw
fildll
aas
lods
fists
push
or
gs
je
sub
push
jno
dec
jb
gs
fists
enter
dec
outsl
je
dec
roll
bound
inc
repz
dec
inc
rclb
xchg
add
xor
in
push
insb
int3
add
andb
ret
ja
sbb
cmp
pop
je
inc
cmp
inc
fsub
jns
cmpsl
push
or
or
adc
sarl
adc
repz
cmp
sbb
jns
out
sbb
repnz
mov
push
jns
cmp
dec
push
cld
scas
push
incl
test
push
iret
and
add
lea
jb
and
leave
and
xchg
daa
iret
repz
incb
or
sbb
lahf
pop
mov
fists
add
jns
and
cmpsb
mov
pop
movsl
sbbl
ja
pop
shll
jb
cmp
inc
jge
icebp
jae
iret
mov
call
ja
mov
add
mov
cmpsl
in
fidivl
rcr
fsubp
jle
jle
enter
stc
jle
push
test
mov
nop
inc
adc
test
push
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
mov
xor
and
rcrb
push
cmc
push
add
int
int
daa
xchg
lret
dec
add
add
push
pop
ret
cwtl
dec
ftst
push
mov
or
pop
cmp
imul
push
movsl
shr
pop
repz
or
mov
mov
or
call
push
mov
add
sub
fisubrl
addr16
adc
add
je
outsl
fs
gs
imul
insl
gs
es
jb
gs
fistpl
add
jb
outsb
inc
add
push
imul
jae
jne
arpl
repnz
dec
outsl
popa
sbb
outsb
push
xlat
pop
sti
xchg
cmp
dec
popa
dec
insb
inc
xchg
push
mov
sub
insb
jne
sbb
adc
in
outsl
insl
jo
gs
lock
addr16
fisttpl
popaw
xorb
inc
es
dec
xor
outsb
push
jo
jbe
add
xchg
xor
ja
dec
add
popa
jo
insl
out
xorl
add
sti
popa
imul
jo
loopne
jnp
xchg
push
inc
xor
sbb
arpl
jno
jl
insb
dec
sbb
jnp
mov
adc
push
jp
inc
loopne
mov
outsb
int3
jne
dec
addb
inc
cmp
ds
insl
pushf
push
and
lds
jns
xor
imul
mov
dec
sub
add
popa
mov
push
lret
push
addr16
outsb
sub
sbb
or
ret
adcb
ja
push
addr16
add
in
mov
fsubs
mov
lds
push
jns
out
pop
xchg
sub
pusha
dec
lock
inc
jns
push
outsl
push
imul
xchg
loop
arpl
jne
or
in
outsb
sarl
inc
mov
push
jne
clc
mov
inc
pop
arpl
imul
cmp
lea
mov
data16
test
xor
ss
xor
adc
dec
inc
dec
sbb
inc
psllq
fs
std
notb
insb
sbb
add
xor
push
pusha
js
dec
test
jno
sbb
and
pop
push
inc
fs
gs
push
les
xor
roll
xor
bound
bound
mov
outsl
pop
sbb
and
dec
popa
int
loopne
andb
mov
sub
or
cmp
cmpsb
mov
adc
jne
inc
jns
mov
push
nop
loop
ja
gs
lret
inc
imul
add
jp
out
push
or
out
jl
loope
inc
pop
xchg
sbb
or
mov
lret
push
scas
imul
nop
not
mov
and
adc
xor
icebp
cmp
mov
je
xor
cmpsl
clc
mov
jbe
xchg
pop
jae
add
jo
or
dec
and
push
mov
jo
push
insb
mov
stos
sarb
add
or
dec
add
movq
orl
adc
pop
fldcw
lods
lock
pop
adc
dec
std
int
or
pop
movsl
push
std
sbb
movsl
popf
not
movlps
pop
std
movsb
fs
add
cmp
xchg
jo
je,pn
push
clc
aad
or
and
inc
adc
cli
insb
arpl
cmpsb
ret
scas
mov
inc
cs
mov
popf
fisttpl
and
out
jbe
sahf
jae
arpl
add
ret
outsb
mov
lahf
aaa
xor
repz
or
dec
xchg
and
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
