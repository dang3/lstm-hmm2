adc
adc
push
push
pusha
add
push
rolb
or
add
lock
or
add
push
jo
jb
and
or
jo
clc
add
pop
mov
imul
adc
or
add
xadd
or
add
sbb
jo
es
nop
add
inc
add
or
addr16
add
rolb
push
jo
xor
add
add
add
mov
pusha
add
or
add
add
add
loopne
bound
addb
or
jle
mov
add
add
add
add
enter
wbinvd
lock
add
mov
or
inc
add
pop
mov
add
or
or
jo
dec
or
add
add
add
pavgb
inc
or
add
or
add
or
add
or
inc
or
add
push
pusha
add
add
inc
add
inc
add
push
add
push
jo
sub
rolb
push
add
add
add
fildl
addb
or
push
add
or
add
pop
xor
mov
adc
addb
add
addb
push
mov
add
or
add
pop
addb
or
add
or
add
push
loopne
popf
add
add
add
adc
add
add
push
add
push
bound
add
mov
add
add
add
xor
push
or
add
add
dec
add
add
add
arpl
xor
repz
add
add
nop
add
add
rolb
add
add
add
add
add
rolb
or
add
or
push
or
push
add
add
add
addb
or
fs
push
add
or
add
pop
rolb
add
add
rolb
add
add
rolb
pop
xor
orl
add
xor
pusha
add
add
add
lock
or
add
or
add
add
mov
and
cmp
nop
add
add
add
or
pusha
add
pusha
add
or
add
add
add
or
add
add
add
push
rolb
push
and
orb
add
or
push
add
add
rolb
cwtl
add
add
in
movl
mov
mov
movl
mov
movw
call
movl
cmp
jne
movb
ret
movb
push
add
push
add
mov
orl
push
popl
pusha
movb
call
subl
push
popl
mov
push
popl
push
push
popl
xorl
movb
push
popl
addl
xorw
push
subl
sbbb
call
push
popl
movb
cmpl
jne
orb
call
push
popl
sbbw
ret
push
popl
xorl
jmp
sbbb
push
popl
xor
add
push
popl
mov
xorb
movb
shl
addw
mov
push
popl
shl
orb
mov
orb
cmp
jne
andw
mov
push
popl
sub
push
popl
orb
call
sbbb
push
popl
popa
push
popl
orl
pusha
orl
call
andb
mov
push
popl
push
addw
xorl
push
popl
addl
andw
push
orl
call
movw
subw
push
orw
push
popl
xorl
sub
andb
addl
sbbl
and
pop
orb
push
popl
cmp
jne
push
popl
ret
mov
xorb
popa
push
popl
push
popl
call
movl
push
xorl
xorl
push
popl
subl
addl
push
popl
push
addw
push
popl
call
push
popl
push
push
add
lea
mov
mov
inc
mov
sub
xchg
orw
mov
push
popl
addb
shl
addl
push
sbbb
push
popl
xor
andb
orb
push
push
popl
call
xorl
push
movl
sub
mov
push
popl
push
popl
push
sbbl
jmp
sbbw
pop
addl
mov
add
push
push
popl
push
popl
push
movw
push
popl
push
movl
mov
sbbw
xor
mov
push
popl
push
popl
rep
movb
pop
or
andw
pop
push
dec
add
not
shr
mov
sub
xchg
push
add
shl
ror
inc
mov
add
xchg
push
popl
xor
andl
push
popl
jmp
xorw
push
popl
sub
movl
push
popl
mov
subb
xorw
sub
addw
addb
sub
xor
push
popl
mov
andb
sub
subl
push
popl
or
jne
sub
and
add
addl
addb
jmp
push
popl
mov
addl
push
popl
shr
sbbb
push
popl
shl
subw
mov
push
popl
addw
add
addb
orw
jmp
push
popl
sub
andl
mov
sbbb
push
popl
add
push
popl
or
cmp
jne
movw
push
popl
mov
xorl
and
add
andb
andl
mov
addb
subl
add
push
popl
push
popl
cmp
jne
push
popl
orw
ret
orw
push
push
popl
push
popl
xor
sub
addl
pushl
xor
xorb
pop
andl
lea
push
popl
or
push
popl
mov
push
popl
addw
mov
and
lods
andb
and
mov
push
popl
pop
push
popl
movl
ret
push
popl
push
push
popl
push
popl
mov
xorb
add
mov
and
push
sbbb
xorb
push
sbbb
subb
push
andw
xorw
push
movb
andw
push
sbbl
mov
addl
mov
push
popl
add
movl
pushl
push
popl
andl
mov
xorl
xorl
add
movl
orb
add
push
popl
mov
orl
push
popl
add
push
popl
xor
push
popl
addb
lea
xorw
push
popl
mov
push
popl
add
xorw
add
mov
andb
xor
xorl
movl
rol
sub
xor
or
xorb
inc
xorw
cmpb
jne
sbbl
push
popl
cmp
je
movl
inc
push
popl
xorb
cmp
jb
addb
mov
xorb
add
push
popl
movzwl
sub
addw
mov
subw
add
push
popl
mov
addb
add
push
popl
pop
mov
xor
cmp
jbe
push
popl
push
popl
cmp
jae
andb
pushl
sub
pushl
xorl
push
andb
xorl
addw
addl
addl
pushl
push
popl
sbbb
call
sub
call
push
popl
push
popl
pop
andb
pop
add
pop
subb
push
popl
pop
addl
pop
addl
leave
xorb
ret
push
popl
sbbb
call
mov
mov
sub
imul
mov
aam
or
or
in
xchg
sub
cmp
aam
aas
pushf
stc
ret
push
loopne
push
xlat
add
lods
testb
cltd
pop
pop
stos
shl
in
sub
pop
bound
jge
fcmove
insl
std
jb
cmp
iret
adc
int3
scas
inc
fstpl
outsl
cs
loope
dec
je
push
dec
and
sti
xchg
test
and
push
out
fwait
push
lods
fidivrl
pop
pop
pop
cmp
add
adc
jp
xor
fistps
and
fisubrs
out
pop
das
push
inc
cs
andw
cs
push
mov
inc
dec
icebp
pop
push
inc
sbb
into
mov
xchg
je
sbb
xor
clc
xchg
pop
ss
dec
outsl
lret
loope
fidivrl
test
or
push
iret
cld
jg
pop
sub
xchg
mov
pop
pop
aaa
lods
clc
and
clc
in
ret
or
mul
push
xchg
or
or
ficompl
cmc
fdivs
add
jmp
jnp
sbb
decb
mov
enter
int3
xor
pop
push
mov
loop
xabort
sbb
dec
xor
cmp
fs
inc
push
push
xor
fidivs
jns
xor
inc
mov
sbb
into
out
pop
call
mov
mov
mul
sub
mov
inc
in
or
enter
mov
pop
insl
int
add
clc
sub
insb
aas
pushf
cmp
xlat
pop
mov
notb
jp
decb
dec
xchg
xchg
es
lock
cmc
add
xchg
mov
fstpt
mov
fidivrl
daa
mov
lcall
jns
xor
daa
sub
mov
push
lcall
stc
inc
loope
fidivrl
test
push
aaa
and
adc
and
lahf
test
test
inc
fidivrl
push
fucom
clc
inc
fisubrl
mov
dec
mov
movsb
out
jo
mov
hlt
push
nop
mov
push
push
aad
mov
jmp
sbb
mov
movsb
dec
sbb
or
and
insl
lret
mov
push
inc
push
cltd
xor
addr16
mov
mov
mov
push
inc
push
xchg
pop
aaa
mov
dec
fidivrl
test
or
iret
lahf
cmpsl
mov
add
loope
pop
pop
lcall
and
call
in
icebp
inc
cld
jbe
xor
jecxz
xor
mov
stc
sahf
jl
push
xor
jmp
dec
rclb
adc
and
lock
mul
push
or
jecxz
push
fstpl
outsb
push
mov
adc
sahf
aaa
mov
test
cs
xchg
xchg
fiaddl
popa
push
repz
dec
push
mov
scas
inc
and
jecxz
mov
dec
aaa
mov
iret
or
hlt
movsl
aam
pop
adc
aas
inc
add
pop
xchg
add
dec
int3
into
jae
cmp
push
fsub
insl
mov
push
stos
das
cmpsb
mov
dec
sbb
lods
test
lods
imul
mov
pop
inc
fistps
sbb
pop
jo
mov
fnstenv
orl
mov
cltd
fadds
sub
stos
dec
xchg
xchg
and
push
cmc
add
pop
mov
push
faddl
sub
les
leave
lret
insb
aas
pushf
sub
fcomip
das
adc
in
push
inc
cld
mov
mov
clc
int
inc
cli
push
repnz
int
and
push
mov
iret
jne
iret
pop
pushf
lds
mov
inc
rcrl
fnstcw
movsb
or
and
loope
test
xor
push
push
mov
dec
iret
xor
addr16
sarb
jae
rclb
inc
fidivrl
daa
mov
xchg
adc
lods
movsl
xchg
mov
mov
sbb
mul
pusha
xchg
fdivrl
test
inc
sub
clc
mov
and
push
jnp
inc
rclb
pop
adc
cmp
loop
mov
ja
pop
imul
and
pop
enter
mov
data16
ja
insb
mov
fnstenv
inc
pushf
or
mov
jne
and
pop
jmp
cmp
inc
mov
loop
xchg
inc
mov
in
xor
sbb
dec
les
pop
jnp
or
sub
push
xchg
and
faddl
int3
call
jecxz
fadd
push
scas
and
lock
dec
fldcw
cmpsb
xchg
jno
insb
sub
dec
mov
in
jecxz
rorl
pop
add
decb
xchg
in
nop
movsb
repz
cmc
add
bound
mov
fistl
sub
gs
outsb
xor
cmc
adc
les
sysexit
fcoms
lcall
sbb
inc
imul
xor
jb
dec
and
push
in
addb
scas
add
int
sub
push
in
add
test
lcall
loope
fidivrl
test
xor
in
sbb
int3
cmp
mov
xchg
rcrl
pop
movsb
xor
cmpsl
xor
cmp
repnz
xchg
fcomp
xchg
jne
mov
inc
daa
into
aam
jnp
lcall
jns
inc
push
loopne
xchg
fdiv
in
stos
mov
iret
add
push
out
xor
cmp
xlat
test
add
inc
fimull
dec
sti
jge
jp
imul
sub
xor
and
inc
ficomps
sub
scas
jp
add
cmp
inc
hlt
movsl
iret
rcrl
sub
inc
jb
jbe
xchg
pop
lea
stc
inc
sub
call
dec
xor
mov
or
sub
inc
or
stc
push
pusha
push
dec
cmpsl
pop
pop
out
xchg
rcl
pop
push
subb
cwtl
dec
fs
rcrb
stos
mov
inc
icebp
cmpsb
sahf
xor
mov
daa
mov
pop
aam
faddl
mov
push
cltd
movsb
mov
dec
cltd
pop
xor
stos
jmp
loope
fidivrl
test
pop
cmp
adc
adc
cltd
sti
iret
std
cwtl
ljmp
sbb
cmp
add
jp
imul
inc
jnp
jle
inc
push
pop
push
xor
dec
cld
mov
jp
imul
adc
mov
les
add
ss
add
mov
sti
sub
cmp
xor
sti
or
cmpsl
clc
xchg
mov
pop
mov
cld
xchg
xchg
in
or
aam
inc
fidivrl
test
fldenv
enter
fidivrl
jno
andb
cld
mov
lcallw
jmp
xchg
rcr
aas
dec
xchg
sub
inc
inc
leave
scas
insb
aas
pushf
sbb
push
ljmp
notb
loope
and
test
cmp
nop
stc
push
loopne
clc
inc
ficoml
cwtl
push
push
iret
or
lds
inc
aam
push
push
rcrl
mov
ficompl
add
lahf
or
sbb
xor
outsb
repz
push
xor
scas
cmp
arpl
inc
and
fcom
stos
loope
inc
enter
mov
mov
push
push
sbb
jne
push
mov
daa
push
pop
shrb
test
cmc
push
test
add
jo
cld
aam
iret
or
lds
jmp
jnp
sub
std
adc
mov
push
loope
push
je
push
pop
lcall
fldt
pop
ljmp
sbb
scas
aas
dec
push
aad
dec
les
test
jb
add
pop
loop
push
adc
xor
push
and
pop
mov
ret
pop
push
jecxz
cltd
xor
xchg
insb
leave
lret
pushf
ljmp
push
out
add
mov
push
inc
arpl
insl
int
cmp
nop
jecxz
inc
add
enter
adc
ret
push
sub
mov
cmp
call
int
jle
ja
push
out
mov
cld
insb
sub
dec
xchg
mov
dec
loopne
popl
je
shll
push
ficomps
sub
xchg
sub
xlat
dec
leave
aam
aas
pushf
sbb
jns
cmp
mov
jns
lock
in
push
xchg
nop
mov
lcall
sub
xchg
and
fstpt
add
popa
cwtl
jg
scas
shl
in
in
lds
mov
frstor
outsb
test
divps
mov
scas
cmp
test
lods
nop
rclb
mov
insb
pop
mov
scas
gs
cwtl
sub
mov
mov
jnp
jecxz
decb
dec
xor
mov
aam
or
xor
push
dec
xor
mov
aam
or
pop
in
shl
xor
sti
inc
mov
lret
imul
and
xchg
adc
add
dec
out
xchg
sub
cmp
pushf
sbb
loop
jns
lret
cmp
xchg
sub
dec
sbb
and
push
movsb
pop
sub
pop
ljmp
jb
adc
cmp
repnz
pushf
mov
movsb
test
jne
lahf
dec
fbstp
insl
sub
xor
add
xchg
std
sbb
pusha
in
test
stc
sub
jbe
push
subl
dec
add
cltd
es
test
hlt
cmp
insb
sub
int
enter
mov
test
xchg
xchg
out
in
fwait
xor
pop
sub
cmp
dec
pop
xchg
jecxz
iret
cli
pop
pop
add
gs
push
test
push
test
sub
clc
pop
push
cs
loop
pop
lret
mov
js
xchg
push
dec
adc
mov
mov
mov
sarb
imul
push
push
jae
jmp
mov
movsb
mov
dec
mov
push
add
or
pushf
jp
dec
push
je
scas
jne
adc
in
pop
int
mov
lods
in
cmp
popa
inc
lcall
xchg
xor
mov
repz
mov
lods
popa
jns
xor
bound
or
pop
repnz
jb
mov
dec
sub
cmp
dec
mov
clc
push
loope,pn
or
shr
mov
mov
or
pop
testl
push
inc
xor
test
or
dec
mov
inc
sub
push
imul
stos
cmp
aad
sti
cmp
subl
loopne
fldenv
mov
xor
push
dec
sbb
xchg
dec
mov
xor
xchg
mov
sub
ljmp
movsl
or
ficomps
cmp
add
mov
jae
mov
movsl
xchg
out
lock
sbb
daa
jnp
stc
mov
and
mov
add
pop
mov
shrl
push
push
movsl
testl
test
std
sbb
inc
adc
push
push
mov
fidivl
dec
and
sti
jns
sbb
jl
addl
insb
jmp
inc
xchg
xchg
sahf
adc
clc
ret
mov
cmp
cmp
jnp
imul
sub
mov
call
xor
std
xchg
xor
and
cmp
shl
and
scas
adcb
xchg
fdivs
test
lods
shl
aas
dec
aad
xor
jne
incb
cmp
mov
jl
fisubs
sub
and
clc
in
push
fiadds
mov
in
inc
inc
fmul
cltd
push
push
in
cmp
ljmp
js
lods
cmp
xchg
cmp
inc
fidivrl
ljmp
mov
and
xchg
out
mov
lods
stc
sbb
and
call
iret
mov
adc
data16
push
fs
xchg
fdiv
in
lahf
pop
dec
xchg
jecxz
iret
cld
mov
iret
cld
inc
cwtl
sub
dec
fidivrl
xor
dec
faddl
cmp
addr16
inc
stc
lds
cmpsl
shrl
dec
fstps
repz
pop
inc
push
push
mov
jl
jp
jb
xor
mov
mov
xor
mov
movsb
sub
cltd
les
movsb
xor
and
cwtl
pop
xor
loope
fidivrl
test
faddl
add
cld
jae
or
movl
cmp
inc
hlt
movsl
testl
xor
jbe
xchg
pop
and
dec
xchg
xchg
sbb
rclb
mov
sub
fstpt
in
pusha
fidivrl
daa
mov
imul
mov
rcrb
stc
adc
mov
and
out
fucomip
clc
inc
fiaddl
or
sti
sub
lds
mov
pop
add
inc
ret
out
cmp
clc
lods
fidivrl
mov
adc
jecxz
test
push
xor
iret
add
cmp
or
and
sarl
xor
rcr
inc
jp
decb
loope
sbb
lret
mov
cs
fbld
sub
dec
es
outsb
scas
push
push
insl
push
sti
test
pop
cmpsl
jl
cs
push
jno
jno
dec
and
mov
dec
cmc
inc
cmpsb
add
fisttps
mov
fsubs
inc
pop
pop
int3
incl
cmp
fs
outsl
in
xor
add
and
ret
mul
ficompl
faddl
jecxz
add
mov
fisubrl
outsl
push
push
mov
and
in
pop
mul
aad
inc
sbb
cld
dec
test
push
ds
mov
sahf
jecxz
cmp
xchg
dec
fstpl
pop
mov
aas
push
mov
insl
mov
mov
shll
jbe
scas
pop
dec
sbb
cmp
pop
sub
data16
fisubs
out
jge
psadbw
add
fadd
jne
mov
pop
dec
sbb
xchg
push
push
pop
lret
push
decl
ljmp
test
lcall
cmc
add
jnp
stos
insl
or
jne
xor
dec
xchg
pop
xor
dec
fidivrl
test
push
xor
scas
lds
int3
inc
pop
sti
lods
mov
mov
rorb
mov
xor
sbbl
mov
insb
xor
mov
addr16
pop
mov
push
out
rorb
mov
dec
and
jp
mov
test
pushf
mov
add
loope
xor
dec
iret
sub
push
jb
sti
repz
or
pop
jle
add
lahf
jnp
fwait
imulb
in
fistps
mov
sbb
mov
test
pop
cmc
dec
xor
ljmp
xor
push
lcall
jns
in
and
cs
xchg
xchg
fsubr
fsubrl
sub
out
xchg
lcall
xchg
sub
roll
movsb
insb
aas
pushf
sbb
fcomps
lods
testb
mov
mov
lea
movsl
lret
xor
hlt
std
mov
dec
aam
or
jle
pop
cmp
jo
insl
into
int3
add
cmp
cs
xchg
fyl2x
enter
sti
sub
std
iret
add
xchg
mov
inc
mov
outsl
outsb
dec
das
mov
loop
loop
test
xchg
fisubl
das
jecxz
das
mov
scas
mov
cmp
test
cmc
aas
test
call
hlt
movsl
idivb
sahf
cli
outsb
xchg
push
shrb
cmp
movsl
fdivrl
loopne
clc
inc
fisubl
push
lds
mov
lds
add
mov
mov
mov
mov
in
je
stos
lods
xor
and
clc
xchg
jge
std
inc
fmulp
adc
push
adc
jno
cmpsb
push
push
mov
dec
inc
xchg
jb
dec
and
inc
out
into
shlb
addr16
xchg
cmp
lock
dec
mov
fistl
xor
or
pop
inc
jb
jbe
push
dec
fisubs
inc
jecxz
dec
stc
xchg
out
aaa
jns
adc
stos
iret
dec
fcmovnb
inc
in
pop
ficomps
mov
inc
add
cld
adc
stc
and
stc
jmp
das
rcrb
sub
jp
enter
loopne
clc
inc
fidivrl
jbe
and
sub
lcall
dec
mov
sahf
fstps
arpl
pop
loopne
clc
inc
fcmovb
add
cmc
cmpsl
jne
fmul
jl
frstor
push
test
cli
and
lods
movsl
xchg
loopne
jns
xchg
pusha
outsl
adc
call
outsl
xlat
dec
ss
dec
or
pop
xor
sub
xchg
add
jae,pn
das
pop
ljmp
loop
cmp
clc
hlt
sbbb
push
iret
add
test
xchg
aam
jecxz
mov
jns
sub
mul
clc
push
cmp
imul
lds
add
add
push
loop
movsb
in
in
test
push
out
dec
inc
cmp
aas
xor
addr16
cmp
out
jmp
iret
cli
movsl
pop
ljmp
dec
int3
xchg
test
push
int3
ret
inc
fidivrl
stc
sub
mov
fisttpl
xchg
inc
hlt
movsl
mov
jl
in
stc
push
xchg
add
sub
fidivl
jns
and
adc
stos
ficomps
cmp
stos
loope
xchg
sti
inc
ficoml
mov
mul
jns
aad
push
mov
inc
push
xchg
loopne
sub
aad
sti
scas
mov
mov
mov
sbb
mov
sub
add
sub
cmp
clc
inc
dec
sub
pop
cmp
test
and
sub
mov
imul
jp
dec
push
mov
insl
xchg
or
in
jecxz
pusha
inc
dec
rorl
cld
inc
fidivrl
test
les
xchg
sbb
xchg
pop
pop
cli
stos
mov
pop
xor
pushf
gs
xchg
fsubr
dec
aam
frstor
fidivrl
js
aad
sub
xchg
and
sub
popf
inc
xchg
aam
jecxz
sahf
inc
cmp
clc
xchg
sub
mov
insb
pop
in
sub
cmp
pop
lret
mov
cmc
movsb
mov
dec
adc
insb
inc
and
push
leave
mov
xor
fdiv
outsl
or
rorl
popf
inc
cmp
and
and
adc
lods
movsl
xchg
mov
insb
scas
sbb
clc
sbb
xor
fs
in
cmp
mov
mov
lret
xor
jmp
out
or
push
popf
xor
arpl
clc
in
mov
clc
in
inc
dec
outsl
xchg
mull
xchg
fmuls
insl
pop
jae
mov
int3
subb
jg
outsb
xchg
imul
and
lret
jb
dec
and
mov
std
daa
jb
negl
push
imul
mov
mov
cmp
loopne
clc
inc
test
xor
addr16
sub
cmp
inc
pop
inc
sti
push
idiv
cmp
sbb
scas
shl
in
rol
dec
add
jg
fldcw
cmpsb
sti
sub
pop
jecxz
popf
sub
test
add
sub
push
push
xchg
decb
popf
push
or
add
cmp
loopne
and
jns
and
addr16
pusha
adc
mov
lods
push
mov
ret
push
int3
pop
push
fidivrl
adc
ja
clc
lods
fimull
lret
xor
sarl
dec
lahf
aam
or
xor
sub
mul
dec
sarb
shl
pop
xchg
cs
push
push
sub
pop
adc
arpl
jg
push
or
mov
push
and
push
dec
sub
and
mov
inc
loope
stc
dec
test
fildl
xorl
cmp
mov
fwait
insl
mul
jb
je
dec
mov
wbinvd
push
add
pop
jb
pop
adc
push
mov
testb
stos
pushl
inc
or
mov
pop
or
adc
sub
xchg
lcall
sub
cmp
imul
es
xor
dec
xchg
sbb
stc
sbb
and
ret
inc
test
insb
xorb
sub
mov
in
jns
and
push
inc
push
xor
outsb
push
pop
xchg
iret
shl
sub
icebp
and
mov
mov
xchg
in
and
scas
inc
ret
pop
loopne
adc
mov
cmp
adcb
push
or
cmp
jmp
out
clc
inc
fisubrl
sbb
out
mov
jecxz
fadd
mov
jecxz
mov
inc
int3
dec
flds
inc
fidivrl
scas
and
mov
cs
xchg
xchg
fdivs
push
inc
sub
loop
cmp
fstps
pop
pop
inc
int3
add
ljmp
les
pop
popf
or
pop
xor
stc
movl
mov
xchg
cmp
test
and
scas
leave
outsl
cmp
mov
jno
insb
sub
xor
mov
gs
and
xchg
or
dec
xor
xchg
cmp
mov
movsl
rcll
scas
inc
xchg
add
pop
stos
inc
add
sbb
add
xor
pop
pop
push
xchg
inc
mov
jae
fidivrs
sub
int3
add
sbb
fcompl
pusha
fwait
mov
dec
xor
jp
imul
cmp
mov
addb
sub
rorb
fcoms
inc
cmp
incl
cmp
mov
data16
xor
xchg
jb
lcall
inc
mov
in
adcl
sbb
add
int3
repz
sti
rorl
or
and
lret
xor
roll
mov
sti
or
mov
xchg
xchg
shll
mov
xor
cld
fisttpl
sub
cmp
jle
jecxz
cmc
add
fisubrl
into
arpl
int
push
lods
mov
sti
in
mov
add
out
or
push
pop
dec
jnp
hlt
xchg
mov
mov
push
test
jp
mov
or
adc
fs
out
mov
or
icebp
iret
aaa
les
mov
push
sbb
les
in
addr16
xchg
sub
in
xor
add
xchg
add
cmpsl
mov
sbb
add
insl
sub
push
lret
and
roll
enter
push
push
push
jae
scas
mov
and
or
insb
inc
push
test
imul
pop
xor
inc
cmpxchg
inc
fidivrl
test
loopne,pn
pop
sahf
fdivr
jnp
fsubl
sbb
les
sub
arpl
xlat
mov
mov
cli
mov
jns
adc
bound
xchg
xor
xlat
mov
cli
lahf
pop
jns
mov
inc
push
into
dec
inc
xor
add
ljmp
ret
insb
aas
pushf
add
insl
outsb
loop
cmp
notb
test
push
or
xor
imul
sbb
or
pop
stc
mov
inc
das
mov
jp
out
cli
xchg
jns
test
dec
inc
pushf
mov
mov
in
inc
dec
aad
stc
push
mov
imulb
pop
aam
inc
mov
gs
aaa
call
or
cmp
mov
push
dec
sbb
xor
mov
jae
lret
lret
push
into
mov
sub
push
inc
add
inc
test
repnz
sub
or
inc
insl
mov
lcall
pop
jecxz
mov
leave
or
mov
aad
aam
or
inc
cmp
sub
lods
movsl
xchg
xlat
cmpb
stos
out
stc
and
testb
int
dec
pop
add
dec
sti
push
lock
mull
mov
mul
add
lods
xchg
ror
or
ljmp
jae
sub
and
jmp
subl
fimull
ds
xor
int3
lods
test
push
aam
or
or
xchg
pop
imul
push
fucom
insl
lcall
pop
es
es
pop
jb
pushf
push
test
mov
mov
scas
dec
xor
rcll
fsubrl
sahf
cmc
ret
fbstp
idiv
mov
jp
inc
dec
xchg
sub
test
enter
pushf
xor
mov
cmp
inc
pop
insl
int
and
ficomps
sub
insb
fldcw
mov
mov
icebp
sub
cld
and
xchg
cmp
fisubrs
aaa
push
push
sub
cld
adc
in
imul
inc
popa
pop
adc
or
call
pop
xor
jb
jl
cwtl
stos
fwait
xor
pop
or
xchg
outsb
test
shl
test
movsl
hlt
movsl
sar
cld
scas
push
xchg
add
enter
sbb
jmp
xor
jecxz
push
fbstp
fwait
insl
addr16
pusha
and
adc
and
mov
pop
xor
mov
jo
inc
fidivrl
test
mov
jnp
sti
sub
test
stos
shl
in
cwtl
out
decb
dec
xor
out
pusha
clc
adc
shll
or
gs
add
jno
mov
mov
mul
mov
cmp
notb
fcompl
aaa
mov
inc
jge
clc
sub
mov
stc
inc
fcmovb
out
loop
gs
cs
inc
cld
mov
mov
iret
pop
popf
lds
xchg
fidivrs
sub
fidivrl
cld
add
jle
and
loop
addr16
xchg
in
mov
cmp
adc
notb
fiadds
sub
jne
clc
and
vpcmpeqd
sti
cmp
mov
in
xorb
push
push
cmp
clc
inc
mov
imul
stc
icebp
xlat
dec
jb
inc
inc
pop
fmuls
jbe
cmpl
mov
inc
fsub
insl
mov
ficoms
or
pusha
clc
aaa
xor
jne
pusha
adc
push
lcall
shl
fs
or
test
dec
cmp
mov
movsl
mov
lock
mov
jbe
xchg
pop
sarl
dec
add
pop
jp
imul
or
xor
pop
stos
cmp
pop
xor
daa
dec
cwtl
das
negb
leave
shrl
push
mov
mov
cmp
notb
fidivrl
test
arpl
in
inc
popa
dec
mov
movsl
in
aaa
and
cmpsl
jnp
ljmp
fldl
inc
push
xor
out
std
and
dec
lds
mov
frstor
int3
xchg
out
jno
inc
cmp
ja
sarl
data16
sbb
inc
dec
loope
add
inc
or
pop
daa
jb
mov
push
js
adc
push
gs
jl
sbb
jno
xchg
and
sub
lods
mov
dec
movl
andl
push
mov
mov
inc
cld
and
fisttps
mov
movsl
xchg
repnz
jp
sub
sbb
xor
cs
pop
imul
xchg
clc
in
ret
sbb
mul
dec
les
pop
subl
lcall
or
inc
jb
loope
insl
dec
outsl
out
push
sub
gs
lea
sti
insb
xor
xor
inc
icebp
enter
stc
and
loope
push
dec
aas
sub
cs
pop
sub
cmp
fldenv
sub
add
push
push
aaa
xor
push
les
outsl
jle
fidivrs
test
inc
fidivrl
push
fwait
jecxz
ja
pusha
movsl
xorb
add
lret
std
sbb
iret
rdpmc
lods
add
mov
fistps
mov
out
pop
xchg
push
outsl
ret
aas
mov
sarl
mov
hlt
repz
fstpt
test
mov
sbb
hlt
add
cmp
add
and
pusha
scas
jbe
scas
arpl
lret
subb
pop
push
sbb
cwtl
flds
cmp
fsubs
ljmp
dec
sbb
add
imul
xor
pop
sub
fildl
mov
mov
lret
mov
cli
jae
jns
scas
or
ds
into
aaa
xor
dec
add
jnp
imul
cmp
adc
inc
push
pop
push
xor
xchg
enter
icebp
mov
add
clc
inc
dec
xchg
mov
movsl
lds
cld
xchg
xchg
js
mov
and
addr16
fnstcw
out
into
dec
repz
mov
scas
fs
popf
lds
mov
jl
pop
sub
xchg
test
pusha
mov
cwtl
xchg
sar
in
xchg
sub
and
leave
aam
aas
pushf
xor
push
loopne
aam
push
cmp
add
nop
sub
mov
mov
shl
fildll
mov
cmpsl
xor
jnp
cld
sub
jmp
loopne
cmp
cltd
cs
push
jno
mov
add
stc
repz
out
fcoml
sti
dec
mov
mov
fstl
test
mov
loope
push
inc
sbb
jle
les
fidivrs
jmp
add
push
repz
sbb
lods
shl
in
cs
xchg
mov
xor
jecxz
pop
dec
mov
inc
ret
fcomip
cmp
push
jge
sti
xor
and
scas
xchg
dec
adc
pop
negl
lds
or
popa
dec
iret
and
sbb
ljmp
inc
mov
outsl
clc
mov
and
push
xor
ds
sub
mov
sub
cmp
push
xor
shlb
mov
shl
push
xchg
inc
cmp
fildl
in
xchg
add
aas
ret
pop
lret
mov
inc
fldt
jno
sbb
cwtl
iret
push
push
out
xchg
inc
fldt
jb
iret
pop
push
jl
pop
or
inc
and
jecxz
leave
or
loopne
lock
icebp
mov
add
dec
gs
addl
inc
out
mov
cs
xchg
sbb
mov
popf
inc
xchg
loop
mov
mov
gs
push
adc
mov
inc
push
pusha
mov
mov
xchg
xchg
fsqrt
enter
shrl
cmc
int
fidivrl
jl
ffreep
lods
testb
and
cmp
imul
ss
rcrl
notl
repz
pusha
push
mov
pop
outsl
mov
leave
mov
cmpsb
jb
dec
sbb
daa
cmp
sub
lret
xorl
pop
call
mov
leave
push
cmc
add
xchg
sub
pop
jo
faddl
sub
loope
fstpt
test
mov
push
pop
jecxz
sub
push
dec
sbb
xchg
incb
in
mov
and
repnz
and
and
mov
dec
jno
insb
sub
push
sbb
test
fnop
cmpsb
add
mov
pop
push
addr16
and
int3
mul
dec
fnstcw
push
sub
std
inc
fidivrl
cmc
ret
push
fildll
inc
lds
mov
inc
rclb
dec
ret
sub
cmp
jmp
outsb
test
cmc
push
fisttps
rolb
movsb
js
jecxz
mov
mov
pop
adc
lods
movsl
xchg
ljmp
pushf
stc
clc
sbb
xor
jb
dec
lahf
sbb
stos
xor
iret
mov
adc
int3
popf
in
addr16
xor
inc
lea
clc
inc
fidivrl
mov
dec
call
xchg
aam
addr16
adc
inc
pop
test
push
cmp
push
dec
imul
cmp
cmpsb
aas
push
aam
jecxz
push
cs
sbb
sub
cmp
fnstcw
test
loopnew
adc
notl
sbb
mov
mov
movsbl
inc
in
mov
call
test
push
gs
data16
sbb
jo
cmp
push
cmc
cmp
fbld
scas
shl
in
lds
mov
pop
ljmp
lock
jecxz
mov
insl
hlt
dec
outsb
mov
stc
mov
pop
sbb
xor
jbe
scas
sub
mov
push
aam
sbb
mov
and
sub
imul
push
or
push
imul
sbb
push
adc
sub
outsb
xchg
jae
xor
pop
add
mov
rclb
or
mov
cmp
shl
and
push
xor
xor
jecxz
addl
std
cmp
cmp
inc
das
nop
sub
clc
pop
mov
add
pop
pop
jae
inc
push
mov
push
rcl
ds
ljmp
and
stos
inc
xchg
cmp
adc
sti
aam
pop
in
adc
jne
iret
cmpsl
pop
js
mov
insl
mov
popa
fldenv
jmp
fsubl
dec
and
iret
push
in
mov
imul
and
xor
mov
add
mov
test
inc
fisubl
mov
push
divb
out
inc
popa
and
mov
and
xor
in
jae
imul
insl
inc
jl
fisubs
xchg
clc
adc
xchg
mov
cs
sbb
inc
dec
aaa
xchg
clc
fadd
mov
imulb
dec
nop
pop
adc
push
daa
push
xchg
sub
outsl
dec
cmp
mov
mov
rcll
mov
mov
mov
mov
pop
or
cs
inc
dec
sub
gs
es
ds
and
add
cli
pop
xchg
add
insl
clc
idivl
clc
pop
mov
add
fwait
incb
cmpsl
in
es
mov
mov
stc
in
ja
jge
pop
add
icebp
leave
mov
mov
scas
inc
nop
popl
sbb
out
pop
loope
jmp
icebp
add
jns
cmp
mov
clc
test
xor
lock
push
mov
mov
adc
dec
cld
push
cmc
leave
push
sbb
scas
shl
in
add
dec
add
andb
mov
cmp
sub
gs
cmp
fld
push
add
mov
addr16
mov
mov
push
cmp
divl
and
push
xchg
cld
push
push
clc
scas
aad
fisubrl
test
cmp
push
jl
xor
test
outsb
cli
mov
stos
dec
or
and
mov
aam
ret
inc
imul
stc
mov
and
push
adc
imul
xchg
xchg
js
push
inc
and
xchg
bound
test
sub
sbb
adc
cmc
and
in
les
fsubrl
mov
adc
push
les
pop
mov
mov
mov
add
int3
add
cmp
call
lds
mov
adc
in
inc
ret
xlat
sbb
dec
mov
mov
xchg
add
or
nop
or
add
hlt
das
negl
push
sbb
iret
or
loopne
sub
xchg
in
fsubs
out
xchg
xlat
lahf
aad
cs
inc
push
dec
test
add
and
push
push
xchg
add
ja
push
sub
outsb
popf
push
push
cmpsb
pusha
jl
dec
push
dec
or
jl
add
or
add
mov
sub
push
addr16
push
sbb
mov
jmp
push
dec
jmp
ret
mov
push
shrb
dec
fldcw
fcomp
incb
cmp
lods
fcmove
or
lds
nop
lret
repz
loopne
cwtl
sti
iret
cli
cmp
enter
cld
mov
out
inc
xchg
in
iret
pushl
or
add
lds
das
mov
les
popf
inc
test
stos
or
les
in
xor
in
mov
dec
ror
sbb
out
pop
loope
sbb
sub
add
sbb
cmp
dec
mov
int3
mov
sub
push
jb
dec
es
jb
mov
dec
loop
mov
ss
push
mov
sbbb
sub
and
aas
pushf
sbb
push
ret
mov
push
ds
mov
dec
mov
sbb
les
in
cmp
hlt
aaa
dec
rclb
mov
mov
negb
cs
dec
std
stos
fidivrl
fildl
cmp
adc
sti
xor
push
or
push
jb
jecxz
add
mov
lds
lods
mov
imul
rorl
jb
push
pushf
arpl
and
push
and
shrb
gs
mov
mul
push
xchg
sub
cmpsl
insb
aas
pushf
add
lret
out
sbb
vrsqrtss
push
stos
sarb
test
sti
or
movsl
aam
pop
sbb
lret
cli
pop
xchg
add
dec
xor
jg
or
fwait
pop
add
xchg
add
loopne
cmovae
mov
mov
lret
xor
jecxz
mov
or
inc
add
mov
adc
sub
pop
shrl
mov
push
into
jb
pop
pop
xchg
sub
mov
icebp
push
repz
push
jno
inc
mov
jl
push
int3
outsb
push
inc
sbb
int3
mov
mov
mov
ud1
nop
cmp
push
pop
sbb
popa
test
mov
shll
clc
in
jmp
aam
sbb
loop
push
jb
cltd
jo
jle
and
lock
inc
fdivrl
jmp
add
jle
push
nop
sub
clc
pop
shrl
jb
popf
sub
outsb
or
in
adcl
inc
popl
mov
fsubrs
inc
popa
fidivs
dec
and
jl
add
mov
lret
xor
jmp
xor
orb
sbb
les
in
cmp
add
pcmpeqd
sbb
inc
dec
xor
out
cmp
enter
push
mov
xchg
clc
inc
gs
mov
jne
dec
movsb
in
cmp
add
cmp
inc
sub
cs
xchg
aam
rorb
xchg
rcr
inc
test
repnz
jae
push
and
sbb
and
sub
ljmp
jnp
cld
sub
out
jecxz
pushf
aad
xor
jnp
imul
add
mov
fadds
add
movsb
cli
xchg
sub
xlat
insb
aas
pushf
and
push
ret
mov
add
aas
xor
ljmp
mov
frndint
sub
cmp
sbb
out
pop
inc
in
and
sub
adc
inc
ret
cmp
push
icebp
mov
scas
shl
in
mov
and
das
jecxz
popa
repnz
inc
jl
fisubs
push
jg
jl
sub
mov
xor
mov
loop
test
xor
out
sbb
mov
xor
fisubl
or
andl
pop
jne
push
negb
cmp
mov
aam
addr16
jns
jecxz
es
lock
push
lods
dec
aad
fs
int3
incb
cmp
mov
fisubrs
ss
sti
iret
add
cld
mov
inc
rclb
cltd
cwtl
lret
push
cmc
add
jle
test
fldt
xor
in
xor
ss
inc
test
xchg
inc
xlat
mov
sarb
cmpsl
inc
test
push
dec
lcall
movsb
outsb
loopne
pusha
punpcklbw
scas
dec
sahf
lcall
pop
les
jl
mov
ficoms
imul
and
std
orl
mov
xorb
fmul
cmp
and
and
dec
mull
add
clc
inc
xchg
aas
mov
pop
aaa
and
les
fdiv
and
jecxz
and
sbb
or
sub
out
fimull
mov
rorb
inc
hlt
movsl
mov
aaa
sub
cli
dec
xchg
add
mov
in
mov
xor
cmp
je
scas
push
dec
sbb
addr16
xchg
punpckhwd
and
scas
cmp
aam
mov
push
mov
and
jecxz
ds
movzwl
jb
or
jb
push
inc
fwait
or
aas
push
inc
test
jl
clc
inc
fcmovb
out
fimuls
fildl
cmp
idivb
push
add
pop
add
jmp
clc
push
sbb
in
divb
int3
shll
test
dec
add
rcrl
or
mov
xchg
xor
lock
push
aaa
dec
pop
mov
imul
idivl
cmp
add
push
lods
dec
fadd
je
jecxz
add
cmp
loop
mov
jo
mov
popf
inc
xchg
xlat
call
sbb
xchg
add
dec
xchg
xchg
xchg
push
movsb
jecxz
cmc
add
pop
sub
jo
sub
push
int
push
cmp
jo
sub
cmp
rorb
mov
jecxz
push
jge
iret
push
jg
or
dec
xchg
lock
inc
and
sub
xchg
fdivs
insb
sub
dec
icebp
stos
in
jge
ret
fildl
repnz
jnp
pop
std
movsl
and
fildl
cmp
sarl
fsubl
mov
adc
push
in
pop
or
cwtl
xorl
das
daa
pop
sbbb
and
sti
test
add
loopne
sbb
mov
mov
in
inc
dec
bound
rcr
mov
add
and
notl
xchg
icebp
sub
or
pop
fmuls
addr16
fcomps
in
aaa
cld
push
or
aam
xor
shlb
cmp
dec
mov
ja
aas
ret
gs
data16
sbb
call
add
clc
inc
test
push
in
cmp
dec
test
xlat
stos
pop
ljmp
outsb
call
inc
dec
sub
test
dec
mov
test
hlt
movsl
dec
pop
das
cli
dec
inc
sbb
jbe
xchg
pop
pop
cmp
mov
rol
imul
pop
shl
negl
mov
outsb
pop
push
outsb
loop
or
test
push
jb
sub
or
cltd
push
dec
sbb
into
test
mov
add
test
xor
test
lcall
insl
xchg
imul
push
pop
dec
inc
fisubrs
jecxz
aam
push
lock
mov
pop
repnz
and
inc
dec
cmp
mov
mov
sbb
add
aaa
cmpl
sub
dec
pushf
inc
xor
lret
clc
inc
sbb
mul
clc
lds
in
ret
fcmovbe
mul
dec
cwtl
xchg
push
add
enter
shr
das
push
roll
arpl
cli
mov
aad
xchg
stos
out
ds
rorb
push
inc
in
inc
xchg
dec
test
xor
xchg
cli
xchg
in
dec
adc
xchg
das
jg
sti
inc
iret
adc
pop
ljmp
stos
mov
pop
push
mov
inc
fdivp
lods
arpl
test
and
inc
loop
or
stc
push
sub
cmp
push
pop
iret
test
cmp
add
loopne
clc
inc
fidivl
fisubrs
dec
dec
in
aaa
and
adc
dec
cmp
mov
jmp
xor
mov
mov
lret
xor
loop
aas
add
roll
or
ret
daa
stos
shl
cmp
fstpt
test
outsl
lahf
pop
outsb
imul
enter
iret
mov
and
mov
push
cmp
push
jb
stos
pop
inc
mov
mov
lds
mov
loope
das
add
arpl
and
add
xor
push
lock
pop
enter
shlb
and
shl
in
cwtl
xchg
push
add
pop
sub
in
ret
gs
push
addr16
inc
jmp
in
xchg
xchg
in
movsb
lock
cmc
add
xchg
sub
fstpt
sti
inc
fidivrl
stc
and
lods
movsl
xchg
lock
jp
mov
sbb
xor
mul
jnp
loope
cs
in
cld
fidivrs
test
jae
jp
mov
data16
das
jecxz
enter
ficoms
in
dec
es
fstps
pop
push
in
test
mov
daa
mov
lcall
insb
jp
out
xor
adc
dec
add
jp
fstpt
test
push
pop
push
mov
mov
adc
imul
test
jecxz
mov
mov
pop
imul
sbb
cmp
pop
add
imul
push
xor
pop
add
xor
jp
fstpt
test
jno
cmp
pop
hlt
adc
lret
scas
aaa
loop
cmp
iret
push
mov
idiv
mov
dec
fdiv
push
fnstcw
imull
inc
int
andl
sub
inc
dec
test
divl
sti
in
inc
pop
and
sub
push
pop
test
inc
lds
clc
es
jb
add
dec
bound
inc
fidivrl
cmp
and
jbe
push
aaa
xor
loop
movsb
pop
mov
cmp
sarb
ret
shl
jle
into
dec
mov
jo
loopne
jnp
stos
sub
mov
in
imul
jp
add
push
out
clc
inc
fidivrl
jno
and
sub
pop
cld
mov
cld
pop
into
fsubs
cmp
inc
lret
in
clc
inc
fisubrl
jecxz
iret
gs
sub
push
pop
mov
push
repnz
cmp
mov
mul
cmp
pop
mov
mov
jecxz
mov
mov
mov
dec
inc
ret
push
add
mov
fwait
inc
mov
test
pop
xor
lret
jne
aas
add
mov
push
mov
loope
rcr
cmp
pushf
mov
mov
push
dec
les
pushf
cmp
fisttpll
sub
aaa
pop
lock
in
stc
stos
mov
and
xlat
cwtl
mov
push
push
clc
add
enter
adc
xor
jg
out
add
lret
or
cmpsl
ljmp
fisubl
sbb
push
push
lcall
aas
test
mov
jno
insb
es
push
loope
xchg
imul
push
cwtl
gs
and
push
xlat
xchg
clc
push
flds
lcall
ret
dec
rcll
push
add
xorl
push
push
ficoml
in
lods
mov
sbb
lock
mov
fnstsw
push
cmp
sub
imul
push
mov
aam
or
push
int
test
rcll
and
mov
or
pop
movsl
mov
push
dec
sbb
orb
push
in
mov
loope
idivb
test
cmp
out
inc
fcmove
xchg
in
iret
cld
and
stc
iret
std
in
jle
rcr
jp,pt
aas
ret
cmp
fstpt
test
outsl
mov
imull
pop
out
mov
jge
xchg
and
aaa
iret
pop
sbb
imul
dec
call
sti
pop
rolb
out
leave
test
movsb
xchg
mov
inc
or
testb
dec
sub
add
mul
dec
outsb
lods
scas
mov
adc
jb
idivb
push
inc
or
cwtl
scas
fmull
pop
out
mov
pop
negl
das
inc
or
cli
jecxz
dec
jmp
insl
in
dec
fadds
incb
cmp
mov
pop
repnz
sti
iret
cli
pop
fldenv
or
insl
and
add
aas
sub
sub
iret
and
or
lods
insl
ret
arpl
sbb
adc
mov
inc
enter
add
lea
imul
ja
mov
xchg
push
lea
ss
xorl
sub
adc
inc
test
fistpll
lret
pop
cmp
inc
push
fidivrs
pushf
into
test
push
pop
lret
sub
cmp
jl
or
pop
sub
clc
xchg
cli
push
xchg
add
inc
in
dec
les
pop
add
dec
lcall
add
pop
addr16
adcb
aad
sbb
jecxz
jo
jl
pop
lret
adc
mov
push
mov
xchg
pop
fdivl
mov
test
push
sbb
sub
popa
inc
ljmp
inc
ficoml
lret
xor
loopne
sti
aaa
adc
xor
pop
mov
and
push
shlb
add
cmp
lock
and
xor
jmp
push
mov
add
xor
mov
or
dec
loopne
lds
cmp
push
fidivrl
cld
push
repz
shll
mul
xchg
rol
dec
add
cld
or
aad
call
test
push
outsl
outsb
dec
sub
dec
push
mov
xor
or
or
jmp
dec
lcall
dec
and
and
and
stos
and
mov
xchg
cmp
lods
testb
add
jnp
imul
or
xchg
aaa
repnz
inc
push
pop
push
xor
dec
xchg
pop
sbb
sub
sub
imul
out
movsb
insl
int
pop
orb
fsubs
in
mov
xchg
xor
int
push
push
sbb
jnp
lret
xchg
cmp
insl
lret
mov
add
add
idivl
cld
lea
lret
xor
in
scas
pop
es
or
mov
shlb
inc
test
out
inc
lahf
inc
data16
push
cs
sub
dec
cld
inc
jle
test
push
cmp
inc
in
out
loope
fidivrl
test
push
cmp
sub
cld
sub
icebp
shlb
and
xor
xor
sti
lock
jnp
imul
cmp
cmpsl
xchg
stos
rolb
add
mov
and
rcll
jp,pn
dec
push
fs
clc
sbb
xor
incl
out
pop
dec
cs
pop
cmp
push
push
arpl
pop
push
push
stc
dec
mov
roll
dec
dec
fucomip
fwait
push
cmp
imul
fnstenv
dec
xchg
mov
xorb
aaa
dec
les
pop
mov
mov
movsl
aaa
pop
or
fisubrl
jo
fildll
gs
and
inc
scas
fldt
push
and
push
call
inc
dec
mov
adc
sti
mov
xor
repz
inc
popf
call
popf
gs
sub
jecxz
dec
lds
and
shlb
pop
adc
xchg
in
cwtl
rclb
dec
ja
mov
ficoms
or
cmp
pop
adc
mov
cmpsb
movsl
pop
cmp
push
filds
flds
jg
sti
test
jo
outsb
xor
adc
rcrb
lods
out
dec
imul
inc
or
into
sbb
out
int3
pusha
push
cmp
xchg
arpl
mov
cmp
fwait
xchg
pop
loopne
mov
xchg
jp
imul
sbb
mov
mov
sub
mov
dec
gs
clc
inc
outsl
dec
push
in
notb
loop
in
mov
lret
pop
pop
sti
lods
mov
xor
gs
cmc
adc
mov
inc
cmc
cmp
ss
push
fstpl
push
mov
and
andl
push
pop
pop
push
add
cmp
test
and
push
rcrl
mov
lods
loopne
xorl
mov
lods
jg
lret
mov
dec
mov
mov
xchg
ss
aas
or
mov
inc
fsubl
loop
ljmp
into
mov
sbb
sub
sub
fisttps
inc
inc
ret
shl
les
mov
out
mov
outsl
in
mov
push
outsl
dec
pop
fstl
dec
aaa
mov
call
movsl
les
pop
add
leave
dec
cli
pop
xchg
add
adc
sub
mov
mov
mov
cli
mov
jns
divl
repnz
out
sbb
push
outsb
rol
cmpsl
xchg
out
dec
jbe
scas
jae
sub
enter
sbb
scas
inc
dec
pop
jbe
ds
popa
mov
out
adc
sbb
jno
in
cld
and
loop
hlt
insb
daa
adc
push
scas
or
iret
jnp
cmc
push
into
aaa
dec
sti
in
pop
jecxz
add
outsb
repz
push
mov
push
mov
fnstsw
dec
dec
and
in
mov
dec
pop
or
xorl
ret
lock
cmp
pop
cmp
repnz
call
out
adc
dec
dec
fcompl
add
pushl
lret
test
xor
or
rcrb
jecxz
push
xchg
add
sub
outsb
mov
dec
pop
es
imul
xchg
test
das
cmc
pop
mov
and
sbbb
and
xchg
cmp
or
repz
push
xor
jmp
sarb
adc
push
pop
mov
aam
push
push
mov
out
sti
adc
sub
int
imull
pop
mov
rcl
lret
mov
cs
dec
lds
clc
es
mov
xchg
cli
and
lods
movsl
xchg
roll
and
stc
lock
xor
clc
inc
xor
call
sarb
dec
or
pop
add
jns
xor
filds
sbb
mov
in
int
loope
sbb
mov
xor
mov
push
call
push
or
mov
jno
insb
xor
xchg
pop
fcompl
nop
xchg
ficompl
sahf
sub
dec
daa
iret
and
add
sbb
pop
cltd
mov
jb
fistpl
inc
mov
inc
inc
iret
adc
insl
shll
jo
inc
xor
dec
push
jb
dec
and
or
xchg
pop
aam
cmp
lods
outsb
int
gs
mov
dec
stos
xchg
add
push
sub
leave
or
and
mov
popa
push
jge
loopne
push
mov
jo
insb
sub
addl
and
or
rcll
repz
sub
mov
fdiv
in
enter
xchg
fistl
push
cmp
jmp
stos
add
loopne
mov
dec
sahf
clc
sub
les
jg
daa
mov
xor
or
and
pop
xor
push
loop
sbb
sar
test
push
cmp
cltd
rolb
xlat
push
cmc
add
cmp
pop
jne
xor
test
dec
popf
mov
stos
sbb
les
in
xor
sti
pushf
add
cmp
push
fsub
insl
fld
bound
imul
push
jae
lock
imul
insl
inc
mov
mov
jno
mov
add
xor
add
mov
inc
ficoms
jae
or
andl
xchg
push
cmp
sub
inc
fimull
xchg
popf
ret
shl
lods
sub
test
sub
push
mov
out
enter
fstps
add
mov
js
mov
movb
jg
loope
fistl
sub
dec
inc
add
mov
mul
dec
mov
push
or
push
stos
sti
sub
rorb
cmpsb
inc
ret
rorl
repnz
mov
dec
and
jl
hlt
push
loopne,pn
movsb
mov
jl
fbld
mov
les
push
push
test
adc
dec
add
push
jnp
imul
adc
xchg
test
pop
xor
pop
or
push
test
scas
shl
in
iret
lds
mov
sti
push
je
mov
cli
test
push
and
cmp
add
jecxz
je
and
lret
mul
dec
xlat
rorl
push
int3
add
cmp
pushf
setne
push
iret
mov
jnp
add
loop
jmp
or
sbb
cmp
cmc
xchg
sub
cmpsl
insb
aas
pushf
and
lret
push
aas
adcb
repz
fnstcw
test
or
or
mov
pop
shl
push
cmc
stc
jbe
xchg
pop
xor
icebp
fstp
insb
daa
mov
pop
pop
fwait
push
lds
sub
lahf
ds
fsub
mov
xor
dec
rorb
pop
adc
incb
cmp
lods
iret
adc
jecxz
mov
sti
iret
sub
test
and
fidivrl
push
aas
jecxz
cmp
hlt
fisubrl
loopne
dec
xchg
fsubrl
icebp
pop
mov
mov
mov
mov
dec
sbb
into
mov
sbb
inc
jbe
and
xchg
nop
aas
test
sub
cli
push
testl
shl
in
cs
inc
lds
mull
cld
and
sahf
lods
movsl
xchg
lret
mov
mov
xor
paddq
pop
jns
js
cld
fisubrl
push
mov
fadd
enter
adc
lret
pushf
xchg
cmp
jmp
push
pop
in
push
fldcw
mov
inc
fdivl
cltd
les
shl
mov
push
inc
push
fucom
insl
xchg
lds
cmc
cmp
pop
std
mov
push
xor
ljmp
push
inc
xor
pop
and
imul
sub
icebp
orl
les
filds
mov
fwait
push
cmpsb
sub
push
dec
and
cmp
gs
js
sbb
jecxz
icebp
mov
cmpsb
or
and
fwait
lahf
dec
xchg
mov
mov
in
mov
inc
fucom
xor
inc
aam
sbb
dec
mov
out
mov
ds
cmp
into
mov
icebp
push
cs
sub
add
sti
jbe
cmp
fstpt
test
imul
hlt
shl
push
xor
xchg
fisubrl
mov
mov
pop
mov
inc
jle
in
imulb
int
pop
jb
dec
and
xchg
lods
rcll
jb
out
bound
add
sub
cmpsb
and
cmp
jbe
jo
xor
cld
push
loope,pn
call
pushf
inc
xchg
jnp
sub
push
or
inc
test
js
sub
les
in
data16
dec
inc
sub
jb
mov
cwtl
mov
pop
pop
pop
scas
push
jnp
mov
push
sub
or
repz
or
and
das
jnp
dec
lods
cmc
ret
xor
cli
fidivrs
enter
rorb
neg
in
outsl
sbb
jl
mov
call
mov
add
daa
inc
inc
mov
cmp
inc
hlt
movsl
fadds
or
clc
xor
jle
cwtl
or
lods
hlt
cmp
push
fidivrl
test
mov
dec
add
pop
stc
scas
mov
mov
xor
and
cmp
imul
mov
and
leave
aam
dec
in
xchg
out
hlt
aam
aas
mov
sub
sbb
push
ja
sti
insb
sub
inc
push
push
xor
lock
and
adc
aaa
push
cmp
inc
mov
in
cwtl
pop
pop
stos
shl
in
es
pop
dec
cmpsb
sub
cmp
and
in
or
addr16
pop
sbb
std
xchg
push
sub
mov
cmp
or
int3
lcall
pop
fdiv
test
into
pushf
cli
xchg
fimull
negl
testl
clc
inc
or
ds
lock
inc
sbb
sub
push
pop
sti
lods
mov
xor
pushf
icebp
cmp
mov
insb
rcll
xor
dec
dec
popf
mov
lea
push
dec
xor
fcompl
hlt
into
rcll
or
insb
lahf
and
fidivs
fildll
and
jmp
push
iret
cli
or
lods
mov
mov
cmp
test
or
filds
inc
addr16
jecxz
or
sti
fidivs
rolb
mov
xchg
xor
sub
push
xlat
fisubrs
fidivrl
mov
mov
add
decl
fadds
rorb
pop
mov
fldenv
or
sub
mov
sub
cmp
xor
negl
es
push
loopne,pn
pushf
aaa
fsubs
jl
jecxz
stos
shl
push
enter
inc
mul
clc
into
mov
or
jb
popl
es
pusha
fwait
sub
enter
pusha
dec
inc
inc
inc
xor
sbb
addr16
dec
push
and
ljmp
mov
lret
es
mov
mov
mov
fidivrs
je
push
inc
mov
dec
push
iret
daa
or
push
adc
pop
jbe
scas
jns
push
adc
scas
pop
push
push
cmp
and
jnp
or
sbb
pop
add
fisubrs
in
push
dec
fstpl
xor
jnp
or
mov
fidivrl
test
fcomps
xchg
out
iret
add
push
jl
loop
lods
repz
jecxz
mov
add
sub
push
xchg
testl
cld
fmul
push
data16
repz
mov
js
imul
pop
stc
rcr
jb
dec
and
cmp
jp
test
test
imul
xor
push
mov
dec
repz
xor
inc
repz
dec
mov
lret
mov
dec
add
pop
cli
mov
jmp
push
sbb
lds
gs
mov
jns
push
fcomps
mul
clc
pop
dec
or
mov
in
mov
push
cmp
xchg
inc
mov
popf
cmp
mov
fisttpl
sub
pop
out
fs
xor
mov
sub
jl
hlt
movsl
jecxz
pop
adc
adc
xchg
add
in
lcall
push
sub
cmp
gs
mov
jecxz
sub
lahf
ds
aam
jecxz
mov
cmp
mov
lret
mov
test
push
dec
add
cld
xor
push
mov
mov
push
int3
xchg
fidivrl
jmp
mov
cmp
lods
movsl
xchg
int
jp
addr16
int3
stc
adc
loop
dec
add
and
into
mul
jle
ljmp
cltd
cwtl
inc
inc
movsb
out
cmc
add
mov
out
pop
fldt
xor
dec
fidivrl
das
xchg
pop
push
add
mov
and
mov
mul
in
mov
mov
dec
jmp
jbe
stos
aam
or
and
xchg
inc
jae
inc
ret
xlat
sub
dec
mov
cld
inc
fidivrl
lahf
mov
mov
sbb
mov
pop
jg
rcll
or
nop
les
or
xor
ss
int3
sarl
push
scas
cli
mov
or
lods
sub
outsb
jns
push
mov
mov
sti
sbb
cmp
lret
or
pop
ficoms
mov
in
inc
out
pushf
mov
js
mov
dec
fisubs
loope
gs
xchg
mov
dec
shl
jecxz
je
scas
xchg
mov
pusha
fdivrs
mov
push
jmp
mov
aas
inc
outsb
xchg
inc
sub
adc
mov
js
sub
mov
jno
insb
test
into
lods
mov
rolb
out
ret
or
mov
ss
mov
movsl
jmp
pop
xor
outsl
pop
xor
add
aam
mov
or
pop
or
sahf
push
sub
mov
dec
dec
xor
iret
adc
jne
inc
lea
loop
and
scas
jno
insb
cs
fmulp
flds
lock
mov
sub
push
dec
xor
int3
loope
movsl
fcmovnbe
adc
push
sahf
cmp
aam
pop
stc
inc
fimull
cs
xor
push
push
dec
mov
sbb
cmp
fnstenv
push
pushf
out
add
mov
in
fwait
mov
scas
or
pushf
rorl
jb
mov
xchg
push
stos
stc
inc
das
mov
fsubrs
loope
test
add
dec
push
mov
jns
sub
cld
iret
mov
iret
push
in
test
inc
and
cli
and
lods
movsl
xchg
rcrb
vpsubsb
xor
sbb
in
xchg
xchg
push
movsb
jecxz
cmc
add
adc
xchg
mov
push
int
push
outsl
ds
ljmp
inc
stos
sbb
les
in
cmp
in
dec
std
imul
mov
les
add
mov
in
inc
dec
dec
xchg
stc
stos
out
jne
adc
out
add
icebp
cmc
jo
push
shrl
bnd
call
imul
adc
dec
sbb
lcall
xchg
push
mov
lcall
xchg
fwait
dec
mov
into
pushw
or
incb
mov
dec
push
in
das
cmp
jb
push
ss
push
sbb
in
fwait
stos
xchg
inc
push
sbb
hlt
das
imul
mov
fstpt
test
or
jnp
stc
mov
and
jae
push
test
insl
fstl
fcmovnu
into
mov
lds
fisttpll
sbb
enter
adc
sub
nop
sub
outsl
out
mov
and
test
mov
ror
sub
clc
pop
add
pop
cld
pushf
inc
dec
mov
push
sbb
xor
mov
cmc
push
ds
popa
int3
xor
xorb
jg
stos
dec
adc
dec
or
jno
inc
mov
out
pop
loope
sbb
cli
cli
fs
jmp
ret
mov
fmuls
inc
imul
add
cmp
lcall
mov
xchg
sub
push
mov
xor
ret
fdivl
sub
jp
and
lods
movsl
xchg
sbb
lock
xor
rcrb
imul
sti
in
cwtl
xor
adc
pushf
aaa
xchg
push
into
andl
adcb
in
and
cmp
and
fs
lods
hlt
mov
add
pop
mov
pop
mov
rcr
clc
xor
add
sbb
jno
cmovne
cmp
inc
cmp
xor
ret
lcall
das
mov
inc
xor
ljmp
iret
or
mov
cwtl
pop
gs
jecxz
mov
jl
cli
inc
fcmovb
idivb
fimull
in
test
and
pop
ds
orl
dec
adcb
mov
inc
dec
pop
fnstsw
pop
or
rcl
dec
cmpl
jl
ror
jecxz
out
pop
mov
cmp
stos
es
xlat
ds
jae
in
addr16
xchg
xor
call
leave
mov
inc
fidivl
push
filds
rolb
rcr
inc
and
loop
push
ret
dec
imulb
std
jg
sti
in
inc
dec
and
sub
in
adc
imul
clc
and
ret
mov
xchg
pop
xor
fidivrl
test
int
lds
jns
xchg
adc
cmp
or
jecxz
popf
bound
daa
mov
adc
lods
movsl
xchg
lds
shlb
aaa
cmpl
sub
cli
outsl
xor
adc
xor
stos
push
sbb
push
sub
cmp
sub
cmp
inc
fidivrl
test
and
xchg
lods
jne
repz
push
dec
lcall
pop
xchg
add
ljmp
js
xlat
jns
das
fbld
in
into
lcall
pop
loope
fsubrs
pop
mov
idivb
cwtl
or
sar
lods
cmp
cli
push
xchg
add
lods
in
mov
sub
ret
and
mov
mov
xor
cmp
inc
das
sub
bound
push
mov
mov
cli
jb
jns
adc
or
ficomps
cmp
cmp
mul
dec
cltd
cwtl
mov
cmc
add
mov
testl
testl
cld
clc
inc
fidivrl
and
jp
adc
lods
movsl
xchg
bnd
cld
rclb
xor
cmpsl
sar
in
push
pop
test
and
aam
popa
or
cmp
mov
jecxz
xchg
call
test
sub
add
add
scas
mov
push
inc
ret
sarl
clc
inc
jmp
in
subl
imul
fs
sub
aad
or
push
lcall
repz
and
mov
cld
or
dec
sbb
push
jb
or
das
fstpl
aam
push
sbb
stc
dec
push
or
arpl
xorl
sbb
pusha
pop
xchg
cs
pop
push
cld
and
lods
movsl
xchg
fldt
cs
mov
sahf
xor
mov
rolb
add
cmp
pop
lds
mov
out
das
jp
cmpsl
ljmp
cs
es
ret
xor
mov
sub
push
ret
shl
repz
cmp
or
and
xchg
loope
inc
pop
loope
nop
xor
insb
adc
mul
dec
cltd
cwtl
jp
movsb
out
cmc
add
jno
mov
fsubrl
xor
outsb
dec
or
in
in
fs
sbb
das
pop
jne
add
xor
in
outsl
leave
sbb
xor
and
pop
jbe
dec
push
pop
fimuls
adc
mov
test
and
enter
xor
int
inc
fidivrl
xor
in
jp
mov
ljmp
xchg
iret
or
cmpb
sub
push
mov
mov
fimull
xchg
add
and
push
call
movsb
lock
mov
push
push
mov
pop
loopne
icebp
mov
insb
sub
jbe
xor
xchg
imul
sti
xor
jb
out
dec
ja
or
je
outsb
xor
out
ret
in
fisttpl
in
cmpl
outsl
xor
fldcw
jae
adc
int3
pop
data16
and
jge
out
mov
mov
mov
es
movsl
adcb
arpl
and
push
push
pop
mov
shlb
sub
arpl
sbb
fsubl
movsb
aaa
sub
mov
push
sbb
sub
pop
jno
outsl
adc
jne
shrb
mov
push
test
or
and
adc
push
jne
stc
push
pop
push
shl
cmp
scas
ds
jb
and
scas
nop
dec
push
dec
and
push
jno
addr16
fnstsw
mov
mov
fstl
or
pop
insl
stos
pop
negl
hlt
lods
push
pop
cmp
mov
mov
rclb
xchg
ja
je
cli
mov
in
adc
ja
cli
mov
cld
je
and
mov
cmpsl
push
or
mov
jecxz
loop
test
adc
and
sub
in
mov
sbb
add
and
call
jecxz
ljmp
jns
sahf
std
push
fwait
xchg
mul
clc
ss
push
or
mov
rolb
or
jb
ret
xchg
pop
outsl
cmp
fs
dec
and
and
and
int
out
pop
mov
mov
adc
pop
rcrb
aam
push
lods
mov
inc
test
cmpsb
insb
in
pop
xchg
mov
stos
mov
jecxz
les
mov
setb
mov
dec
push
rclb
icebp
inc
pusha
add
pop
les
inc
push
push
cmovo
mov
push
dec
sbb
mov
subl
push
into
dec
push
push
sub
ret
adc
pop
leave
adc
es
in
cmp
dec
sahf
out
lods
sbb
int
into
pop
in
addr16
xor
add
pop
xlat
cmp
fidivrl
test
push
lds
mov
add
jo
jp
sub
test
sub
clc
pop
add
scas
stos
sahf
cmp
dec
or
inc
xchg
jmp
and
inc
mov
inc
pop
loope
xchg
js
call
fxch
in
sub
dec
lret
add
mov
out
fwait
inc
hlt
movsl
rcrb
or
cli
dec
xchg
add
loopne
xchg
sub
clc
mov
and
call
or
add
and
and
lret
cli
cmp
mov
pushf
jno
xor
ljmp
mov
fs
push
js
jne
mov
test
sarl
or
cmp
pop
sbb
mov
jmp
ljmp
leave
push
mov
xchg
cmc
lods
xchg
jl
add
dec
jl
imul
sbb
xchg
mov
adc
fimull
ret
sbb
dec
daa
cwtl
xorb
sbb
movsl
addb
push
sub
sbb
sarb
mov
add
xor
dec
sbb
loop
push
and
jmp
cmp
dec
cld
popf
push
dec
sbb
xchg
lret
les
fiadds
pop
pop
cmpsl
cmpsb
fimull
les
jecxz
repnz
mov
and
dec
push
mov
mov
sahf
stos
mov
loop
jno
push
fisttps
aad
insb
stc
int
fcmove
lods
mov
fistl
sbb
imul
lcall
jne
inc
mov
mov
mov
cmpsl
aam
dec
in
or
mov
sbb
ret
shlb
in
pop
jno
insb
daa
push
repz
or
imul
and
bound
lcall
sub
cmp
mov
rorb
in
addb
fcomp
mov
dec
xlat
sub
sbb
out
sbb
mov
testb
mov
hlt
movsl
in
pop
and
mov
xchg
add
jae
push
insb
fldcw
sbb
cmp
fcmovbe
insl
inc
jae
js
pop
outsl
cmpsl
jns
test
test
hlt
mov
pop
fsubl
or
mov
int3
mov
into
mov
sbb
jnp
fnsave
dec
cmp
inc
hlt
movsl
out
pop
push
push
ret
cli
outsb
xchg
push
pusha
or
dec
cwtl
xchg
shrl
cmc
push
cmc
add
iret
sub
shrb
int
push
outsl
or
ret
dec
faddl
cmp
lods
xlat
es
cmp
push
push
gs
xchg
add
mov
or
mov
mov
mov
loop
mov
or
cmp
push
lea
stos
ljmp
mov
repz
fidivrl
or
out
stos
subl
jecxz
stc
jne
outsl
in
mov
enter
push
clc
sub
imul
fidivrl
test
sub
xor
idivl
mov
xchg
dec
sub
adc
sbb
scas
xor
into
test
inc
push
mov
mov
mov
sbb
mov
mov
push
test
push
push
jnp
scas
pop
icebp
cmp
jb
fidivrl
in
add
jl
fidivrl
test
lock
in
mov
dec
pop
cmp
pusha
jns
push
xor
stos
dec
jnp
ljmp
ja
neg
fidivrs
mov
pop
push
shl
xor
jp
imul
sub
mov
jp
out
add
aaa
sbb
out
xor
add
xchg
add
push
clc
mov
outsb
sub
push
leave
and
and
sub
addr16
jecxz
cmpsl
adcb
ljmp
jno
cmp
imul
sti
subl
test
daa
adc
mov
mov
imul
pop
aam
or
gs
push
lcall
cmc
add
shll
fdivl
xor
mov
shl
pop
mov
shl
jecxz
aas
xor
clc
mov
and
and
rcrl
pop
mov
cmp
dec
mov
shlb
pop
je
loopew
push
dec
es
es
loope
call
test
dec
mov
adc
push
dec
lods
jbe
scas
xor
jl
aam
hlt
adc
add
mov
inc
jge
int
and
mov
inc
fcmovne
pop
cmp
inc
add
outsl
clc
mov
sbb
or
std
icebp
sub
outsb
test
and
stc
mov
and
es
mov
jbe
scas
orb
jl
dec
xor
mov
mov
scas
ja
sub
jae
jae
fs
jb
mov
dec
gs
data16
sbb
xchg
pop
cmp
adc
jmp
inc
fidivrl
test
fwait
lds
insb
sbb
les
mov
xor
rcr
cmp
rcl
test
rcrl
add
cmp
push
and
sub
out
outsb
push
mov
mov
cs
xor
add
xchg
add
fwait
addr16
mov
push
lret
push
outsb
and
inc
sbb
aas
in
xor
pop
push
xlat
aaa
sbb
jne
cmp
push
jb
push
fisttpl
dec
or
mov
jl
xchg
mov
test
das
push
or
inc
test
inc
.byte
