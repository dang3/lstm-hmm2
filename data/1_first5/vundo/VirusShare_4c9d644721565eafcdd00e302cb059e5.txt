add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rorb
sbb
sub
cmp
dec
popf
js
mov
mov
and
and
cmpsl
or
sbb
dec
xchg
pop
mov
mov
add
adc
and
and
jno
sub
popf
dec
repz
mov
and
or
push
mov
ja
outsl
clc
lods
or
imul
push
pusha
nop
cmp
cmp
daa
loopne
cmp
pop
das
cwtl
arpl
lods
lret
adc
mov
daa
addr16
xor
and
xchg
or
stos
sub
addr16
jae
adc
push
sbb
pop
pop
sbb
pop
cmp
pop
pop
out
xchg
push
hlt
out
call
and
xor
call
outsb
jg
sbb
jge
sti
arpl
arpl
js
fcoms
and
pop
aas
jne
sahf
dec
out
dec
or
aad
sbb
push
cwtl
ljmp
pop
and
xor
cwtl
or
cmp
jmp
mov
mov
cwtl
adc
enter
call
mov
push
in
and
pop
xlat
es
inc
in
add
push
rclb
jno
jge
dec
ljmp
xchg
sub
cmp
pop
out
and
add
arpl
or
jp
jl
dec
lea
scas
inc
mov
pop
rorb
pop
mov
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
push
cwtl
arpl
adc
and
xor
ret
or
and
pushl
fstp
add
mov
push
sub
scas
cmp
jmp
test
sub
or
mov
mov
add
dec
add
cli
mov
pop
pop
leave
push
cmpsl
mov
xchg
xlat
mov
dec
shrb
aam
push
lods
gs
jge
and
pop
and
rorl
and
imulb
sbb
cmc
movsb
fnstenv
dec
cmp
mov
dec
push
fldt
out
jmp
daa
dec
push
mov
addr16
sbb
pop
cmpsb
fisubrs
xchg
jb
lcall
shlb
imul
dec
pop
fstpt
sub
ja
scas
add
sbb
and
imull
aam
jb
cmpsb
jnp
pop
jae
push
xchg
xchg
hlt
std
mov
add
repnz
rorl
frstor
pop
push
pop
add
imul
add
cltd
sbb
in
scas
add
push
xchg
add
push
sub
sub
pop
xchg
mov
sbb
popf
jbe
clc
loopne
xor
jge
fxch
outsl
cmp
jl
adc
cmp
loopne
jp
mov
fdivrp
cmc
mov
rorb
unpcklps
popl
ffreep
mov
ja
cmp
dec
addr16
popa
mov
cmp
cmpsb
inc
rcll
je
stos
fildl
nop
add
mov
xorl
rolb
fcmovne
dec
pop
mov
pop
stos
ss
lret
push
in
loope
out
mov
cmpl
or
ss
pop
mov
xor
and
rcrl
or
addr16
push
loop
push
daa
xor
sub
xchg
add
pushf
leave
test
mov
push
mov
sbb
pop
das
lret
das
push
sbb
xor
sbb
and
inc
daa
xchg
and
mov
adc
inc
push
dec
mov
jo
xchg
popw
add
rolb
add
scas
dec
into
inc
inc
jmp
xchg
xor
ljmp
dec
push
mov
out
mov
fyl2x
mov
vcvtsd2ss
daa
inc
sbb
fisttpll
shrl
aad
ja
jg
xchg
pop
pop
movsl
lret
mul
jno
sti
pushf
mov
or
sub
jmp
les
cmpsl
push
imul
ds
push
movsb
sbb
and
pop
lret
sbb
fsub
sbb
push
loope
or
mov
je
sarl
in
mov
inc
sarl
js
jbe
lret
lret
lea
cmp
add
and
add
lock
inc
sti
mov
daa
xchg
mov
mov
cmp
sbb
and
movsb
fsubrl
cmpsl
mov
clc
mov
jbe
jo
ja
inc
cmp
call
push
add
dec
mov
jbe
es
mov
mov
fwait
mov
inc
stc
mov
or
adc
jbe
fcom
fcompl
pushf
cmp
arpl
jbe
mov
inc
mov
pop
mov
jnp
addl
rcl
adc
adc
mov
bound
loope
and
xor
cmpsb
mov
jns
gs
int
add
jle
add
outsl
ret
rol
jg
lahf
jno
dec
jle
pinsrw
ja
fadds
push
movsl
andb
movsb
xlat
loopne
subb
fdivl
movsl
adc
decl
je
mov
dec
faddl
dec
mov
add
or
fidivrs
ss
aad
mov
xchg
leave
cmp
adc
stc
xchg
loope
ficoml
fwait
cmp
or
out
xchg
xor
sar
jge
data16
and
aad
leave
lock
xchg
popf
sbb
in
mov
jg
sbbl
add
jae
inc
lods
scas
mov
stc
loopne
or
push
aad
dec
je
test
and
cmpsb
dec
xor
das
xlat
push
push
in
and
imul
add
xor
shlb
lret
ljmp
fadds
enter
mov
andnps
jg
ja
cs
cwtl
or
mov
add
pushf
sub
cmp
andb
pop
mov
insb
je
lret
cmp
pop
mov
xchg
scas
sbb
gs
adc
loope
icebp
pop
test
xchg
imul
or
out
sbb
pushf
iret
je
int
in
sbb
js
sbb
cli
out
adcb
jp
pop
jne
outsl
lds
aad
adc
mov
mov
push
push
xchg
pop
imul
inc
mov
cwtl
xchg
mov
push
adc
aaa
insl
cmc
in
jg
lcall
mov
add
pop
aaa
lods
test
mov
xchg
mov
mov
add
rorl
xchg
iret
xor
mov
inc
scas
xor
xlat
xchg
movsl
dec
cltd
mov
adc
inc
out
sub
leave
jl
std
add
and
mov
xor
inc
fsts
dec
dec
orl
cmp
sbb
decl
cmp
xchg
jmp
incl
addr16
cli
jle
pop
rclb
xor
adc
test
adc
mov
push
jae
or
nopl
cltd
jbe
push
movsb
movsb
jns
leave
shrb
ja
lahf
into
fcompl
add
inc
popa
loopne
cmpsl
pop
dec
mov
adc
je
ljmp
scas
sahf
mov
popl
out
cmp
je
xor
and
jg
lea
popf
inc
pop
mov
nop
or
jmp
jb
lea
imulb
test
repz
push
xchg
sahf
add
hlt
and
hlt
pop
roll
ret
cwtl
and
xchg
pop
add
jo
mov
mov
mov
push
xchg
xor
or
int
push
cmp
fisubrs
cltd
dec
cltd
fistps
jmp
shl
xchg
and
stc
or
mov
and
jae
push
mov
add
and
aaa
xor
fisttpll
adcl
cvttps2pi
pop
adc
mov
loope
sub
add
dec
xchg
stos
pop
dec
inc
or
test
jae
and
add
push
push
fpatan
ja
popf
jp
sub
addr16
ja
out
add
stos
dec
lods
add
or
fldl
xchg
mov
mov
xchg
adc
in
mov
sub
pushf
ja
sbb
loope
jp
jb
cli
add
adc
or
xchg
jnp
sub
mov
rcll
iret
add
and
mov
jbe
test
ds
jae
jne
xor
xorl
and
mov
mov
or
sub
cmp
sub
mov
mov
loopne
cs
lret
test
sub
dec
sub
rcrl
inc
and
bound
adc
cld
sbb
out
or
sbb
aas
fstl
cs
push
xchg
pop
jno
xchg
xor
outsb
push
mov
in
rcll
push
mov
cmp
xor
cwtl
out
int
jmp
lahf
popa
add
ja
add
ljmp
or
mov
clc
shll
popa
sbb
inc
fimuls
std
insl
dec
jnp
jns
or
addr16
inc
fwait
xor
movsl
cltd
and
jl
sub
subl
mov
out
clts
sub
pop
dec
and
and
mov
mov
sbb
mov
in
ret
cmpsb
push
cwtl
sbb
mov
loopne
leave
mov
xor
dec
jnp
jo
pop
sbb
mov
cmp
js
jb
insl
icebp
pop
cmpsb
push
xchg
xchg
or
and
lret
gs
xor
shrb
xchg
pop
shll
out
mov
ds
adcb
dec
cmp
int
lret
aaa
dec
movsb
jo
jne
loope
xchg
push
mov
fstps
xor
sbb
push
push
cltd
push
jl
push
data16
inc
js
pop
jge
sub
sbb
jl
lods
xchg
adc
jnp
sub
fdivs
loope
pop
mov
sahf
lock
xor
int
out
scas
xchg
or
movsl
mov
inc
dec
fmuls
test
adc
test
dec
test
cmp
adc
fcomps
sbb
pop
jmp
and
loopne
dec
ret
into
aaa
xchg
sbb
dec
xchg
dec
and
fisubl
inc
pop
xchg
mov
movsb
cli
xchg
jb
mov
ja
ds
movsl
and
and
push
js
lcall
gs
outsb
xlat
adc
cmp
inc
fs
sub
push
push
je
leave
aad
xchg
pop
cmp
jbe
dec
dec
scas
xchg
xchg
adc
in
ret
lcall
sub
dec
sahf
les
in
and
leave
or
mov
movsl
cmc
test
cmp
leave
push
sbb
push
or
mov
xor
shr
lret
jo
popa
and
adc
adc
out
mov
leave
std
xor
jp
stc
cltd
imul
xor
jbe
test
fdivl
jne
mov
ret
mov
enter
xchg
cmp
jl
mov
sbbb
jp
mov
sahf
xor
dec
pop
xchg
dec
loope
jecxz
stos
or
xor
ror
gs
repnz
cmp
xchg
pop
lahf
xlat
or
iret
sbb
mov
aaa
lahf
pop
and
dec
or
mov
orl
movsb
cs
add
pop
jmp
movsl
push
xchg
and
icebp
out
in
jno
sub
sub
std
je
and
cmp
daa
aaa
sub
int
pop
inc
out
mov
nop
jp
lret
cli
push
cmp
out
inc
mov
lcall
mov
sbb
dec
xor
dec
sub
dec
inc
into
test
gs
xchg
cmove
test
test
adc
push
enter
ljmp
cmp
inc
mov
pop
lret
pop
mov
or
loop
leave
repnz
mov
ja
sbb
mov
inc
cltd
das
int3
mov
mov
sbb
mov
sbbb
dec
adc
mov
call
pop
out
and
cmpsl
jp
mov
lret
push
sub
mov
and
stos
movsl
mov
ret
dec
ret
inc
sub
cmp
add
mov
add
xchg
pop
jb
out
popf
scas
fmull
cwtl
xorl
incb
int
dec
jp
nop
jb
jno
cwtl
dec
pusha
and
lods
mov
fstpt
mov
add
lcall
mov
or
jnp
mov
je
into
add
mov
sarb
cli
push
xchg
jbe
or
add
push
pop
and
arpl
mov
mov
sahf
lock
movsb
mov
int
mov
jno
insl
dec
insb
or
and
push
cmp
fcompp
lods
inc
xchg
cmp
sbb
xchg
pop
cltd
lcall
popa
bound
pop
pop
test
ficompl
ret
add
add
lcall
fimull
inc
mov
sbb
fistpll
sti
cld
lahf
shll
movsl
pop
xor
in
lret
mov
ljmp
pop
insb
aad
jo
add
cmp
mov
sti
sahf
inc
cmpsb
cli
add
sbb
fdivs
xor
loop
lods
cmp
ffreep
push
cmpsl
daa
sub
fs
xor
sub
add
stos
and
testl
mov
xor
loop
insl
scas
out
add
divw
in
hlt
mov
mov
scas
imul
or
mov
push
into
xor
jle
sti
pop
repnz
cmp
lods
or
cmp
jp
mov
and
mov
mov
fidivs
jmp
pusha
sbb
jmp
xchg
lcall
sbb
popf
dec
jno
push
or
scas
or
imul
sti
in
xchg
cmp
or
sbb
inc
mov
pop
push
add
xor
in
mov
xlat
or
mov
lcall
mov
adc
mov
mov
xchg
or
subb
arpl
pop
cmpsb
add
fcmovu
pop
pop
shll
jne
sbb
sbb
sahf
xor
imul
stc
jnp
lds
xchg
mov
out
pop
inc
stc
fwait
fs
jns
xchg
and
push
movb
jmp
pop
push
xchg
mov
mov
flds
mov
sub
jmp
fdivs
dec
and
idivb
mov
cld
je
stos
bound
aas
sbb
push
ljmp
adc
mov
xorb
or
xor
mull
out
ss
stos
jl
loopne
js
dec
or
xchg
shl
inc
sbb
ljmp
jl
int3
xor
stos
xchg
or
jmp
xor
jl
push
xrelease
cmp
jnp
mulb
repnz
add
out
adc
xchg
jg
fs
add
xchg
arpl
and
jg
sbb
mov
pop
adc
push
int3
imull
repnz
push
mov
xchg
lock
enter
push
repnz
mov
stos
pop
dec
add
mov
xor
movb
sub
fdiv
mov
jbe
xchg
pusha
pusha
ret
icebp
les
pushf
pop
or
data16
or
sbb
std
xor
jb
xor
inc
lods
data16
cli
lea
lret
jns
pop
or
mov
into
jmp
lret
rol
sbb
push
xor
jnp
pop
pushf
xchg
mov
inc
es
test
mov
xor
cmp
pusha
dec
out
adc
push
pop
jne
scas
dec
push
cs
and
es
jns
and
add
nop
and
out
push
jbe
cmp
push
testb
and
lock
test
cs
push
sub
sti
sub
mov
shrb
rcr
cmp
or
outsl
je
sub
and
out
wrmsr
sub
sub
clc
repnz
or
scas
mov
repz
sti
ret
mov
call
lahf
sub
pushf
dec
sbb
ljmp
pop
mov
jmp
ja
movsb
cmc
syscall
cmp
cltd
shrb
pop
lcall
mov
dec
hlt
pop
add
lods
xor
addr16
pop
jno
push
jns
leave
insb
cs
mov
xor
cmp
xlat
sbb
dec
cltd
jg
arpl
sahf
popa
neg
push
fwait
out
jb
movl
hlt
lds
lret
cltd
jne
out
into
das
pop
decl
divb
and
fwait
popf
sbb
inc
popa
pop
xchg
lods
push
or
in
push
adc
mov
adc
int
subl
movsb
mov
ja
xlat
jl
or
mov
repnz
dec
sub
mov
inc
lds
rorb
adc
addr16
add
bound
adc
inc
icebp
rclb
inc
out
jmp
mov
imul
daa
jb
jno
mov
lea
lods
mov
xor
pop
or
scas
hlt
lea
push
dec
pop
ficoms
iret
adc
push
xchg
push
jae
mov
jbe
lods
mov
lods
sbb
fcomip
adc
out
in
filds
pusha
sbb
fsubl
shr
mov
mov
mov
cmpsb
dec
jg
rcrb
mov
inc
movsl
mov
scas
push
sbb
xor
mov
xchg
data16
mov
mov
or
xchg
push
mov
jle
push
int3
ret
repnz
test
mov
arpl
fstpt
shlb
mov
imull
cmp
xchg
mov
sbb
inc
decl
cmpsb
jge
adc
add
out
mov
arpl
dec
hlt
adc
pop
add
lock
and
add
lods
pop
cmp
dec
ja
cmpsl
dec
hlt
mov
fisttpl
xchg
sub
rorl
push
jnp
mov
mov
in
out
and
fsubs
push
cld
push
xorb
mov
pop
jecxz
mov
inc
decb
les
mov
pop
xor
fildll
mov
test
popf
lcall
pop
xchg
cmp
inc
iret
jge
cmp
adc
rcr
repnz
pop
test
pop
xor
cltd
pop
mov
into
lcall
arpl
ret
js
mulb
clc
inc
mov
cmp
inc
pop
or
cmp
fs
jge
sbb
mov
cltd
out
and
sbb
and
mov
cmp
push
add
test
fmulp
dec
xchg
xlat
mov
int3
sub
pop
out
lret
jae
enter
cwtl
mov
inc
aas
or
scas
aad
lea
mov
je
mov
addr16
scas
push
jbe
mov
xorl
mov
idivb
subb
loop
inc
mov
scas
fisubrs
imul
cmc
add
loopne
lcall
popa
pop
cld
mov
push
cmp
rcrb
fisubs
ds
push
mov
adc
xchg
imul
adcb
rcrb
lea
push
enter
fs
rorl
inc
pop
cmp
sub
in
jae
lds
or
mov
lds
jg
push
jecxz
sbb
adc
into
hlt
push
push
fstl
xchg
dec
push
xlat
push
pop
mov
adc
ljmp
mov
xchg
add
movsl
lret
or
ljmp
pusha
mov
cs
rcl
stc
and
jecxz
aad
sub
push
fsincos
dec
mov
cs
jmp
jecxz
sbb
xchg
mov
sbb
xchg
cmp
fldl
test
mov
enter
add
jae
sti
in
outsb
jmp
int
aaa
pop
movsl
dec
push
lock
xchg
mov
test
jg
xchg
dec
adc
cmpl
mov
pop
roll
lods
xchg
sti
jle
adc
cmp
cmp
inc
xor
in
dec
dec
jbe
arpl
add
test
add
test
in
inc
or
push
xchg
int
xor
dec
add
xor
shrb
cmp
cmp
pop
sbb
cmp
data16
push
lea
cmp
mov
jle
add
mov
out
les
punpckhbw
sbb
fisttpll
cmpsl
repz
lods
xor
outsb
jb
lret
ss
pop
in
cmp
xchg
nop
hlt
das
loop
neg
dec
fstps
test
fisubrs
pop
mov
or
mov
pop
lahf
lret
subl
and
xor
adc
je
or
pop
int
xlat
shrl
or
adc
loopne
add
stos
subb
xchg
mov
sub
lods
jno
mov
aaa
xor
test
fisubs
rcll
clc
loope
jo
imul
or
out
lock
adc
fstpl
into
ja
dec
loop
sahf
cld
push
int3
aaa
lods
push
shll
cli
inc
jbe
arpl
out
mov
cmc
cmp
xor
outsb
andl
cwtl
xchg
aad
iret
das
or
leave
aam
enter
inc
dec
leave
icebp
lahf
outsl
into
mov
push
mov
inc
mov
es
sbb
pop
mov
xchg
movsb
cmpsl
in
mov
jmp
adc
stos
add
rcl
and
xchg
mov
and
sbb
jl
out
rcrl
adc
sbb
add
mov
fisubl
sub
sub
aam
test
sbb
sbb
push
xchg
sbb
sub
movsb
pop
jmp
sub
test
mov
sub
insb
mov
outsb
loope
cmp
lods
movaps
inc
or
sub
outsb
shrb
cmp
or
lock
in
cmp
jecxz
sub
shll
jle
mov
mov
dec
sub
jne
testb
enter
push
mov
xchg
unpcklps
push
sahf
jbe
add
mov
shl
push
pop
neg
xor
es
imul
jbe
popf
imul
js
mov
push
arpl
sbb
and
stos
jne
lea
imul
sub
mov
repz
enter
xor
pop
pusha
jle
xor
cmp
mov
rorb
mov
data16
dec
sbb
jecxz
sbb
fisttpll
and
movsb
sub
cmp
push
push
cwtl
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
push
cwtl
arpl
adc
and
xor
ret
or
cwtl
subl
fsubs
or
xchg
test
mov
and
xlat
or
cmp
push
lods
xor
test
iret
je
fwait
daa
fcoml
int3
pop
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
xlat
inc
jbe
out
push
xchg
inc
cmpsl
sbb
inc
divb
addr16
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
push
movb
out
xchg
jnp
pop
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
test
in
clc
pop
enter
inc
mov
mov
cmpb
sbb
ds
xchg
pop
cmp
dec
subl
add
and
mov
imul
pop
jbe
xlat
int
mov
lahf
pop
pop
dec
inc
enter
lods
lret
mov
add
pop
shll
inc
jecxz
mov
xor
xchg
fisttpll
test
mov
push
cmp
xor
lods
pop
or
xchg
test
or
mov
sbb
push
aaa
mov
test
out
cmpsl
out
xchg
dec
leave
mov
lods
adc
mov
push
mov
into
xor
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
dec
adc
das
xchg
testl
out
push
icebp
addr16
cs
adc
push
mov
mov
push
sti
push
fisubs
ret
mov
les
mov
mov
push
les
dec
aas
xchg
and
push
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
jecxz
int
inc
and
inc
lea
fwait
xor
pop
dec
ss
insb
pop
jmp
sub
cmp
pop
pop
ret
mov
loop
inc
hlt
jecxz
xor
iret
mov
and
bound
lcall
and
andl
addb
negb
lret
jle
repz
stos
xor
pop
or
adc
jnp
repz
mov
cs
cmpsl
stos
mov
dec
jae
outsl
and
inc
mov
std
pop
push
inc
mov
adc
mov
addps
stos
aad
sub
nop
sub
mov
jno
fs
test
jmp
nop
movsl
push
testl
ds
lahf
imul
add
ret
inc
mov
xchg
pop
out
xchg
mov
ret
push
cmp
sti
jnp
insl
jge
jae
int
mov
scas
aam
sbb
adc
je
mov
mov
jne
mov
pop
pusha
or
xchg
xchg
out
jb
dec
jne
cmp
fadds
jb
enter
add
lahf
out
sub
and
icebp
rclb
xchg
pop
or
xor
inc
or
or
sub
push
leave
int
call
cmp
subb
adc
ffreep
repz
movb
in
repnz
loope
mov
xchg
jmp
movsb
xchg
into
xchg
sub
mov
xchg
inc
movsl
mov
inc
add
sub
cmc
popa
or
loopne
ds
jge
xchg
sub
pop
inc
out
rcrb
xchg
mov
out
mov
or
fstl
add
mov
xlat
mov
cltd
cwtl
imul
sbb
test
jge
in
xchg
push
aaa
adc
adc
lcall
or
loope
data16
scas
inc
arpl
pop
jns
dec
sbb
push
and
xchg
fistpl
mov
xor
daa
pop
xchg
leave
fbld
pop
fst
add
insb
fsubrs
lock
jae
dec
ja
cmp
pop
inc
push
push
cmp
notl
addr16
mov
push
les
roll
xchg
push
pop
mov
loop
adc
xor
outsb
pop
add
movaps
mov
adcb
or
and
push
add
or
or
cli
and
mov
sbb
and
and
or
dec
sbb
int
jmp
stos
ss
cmc
les
push
adc
xor
xchg
or
cltd
scas
jmp
mov
fstp
lds
dec
ss
jno
and
pusha
xor
movsl
jle
pop
xchg
inc
jae
pop
sub
mov
mov
cmp
sahf
in
ds
int3
xchg
out
inc
mov
dec
rorb
xor
mov
jge
push
inc
je
test
mov
sbb
je
jecxz
stos
mov
loope
pop
fidivrs
in
sbb
in
lods
std
mov
and
je
insb
sub
jb
sub
ret
mov
stc
jmp
sub
fstl
xchg
out
mov
imul
repnz
hlt
aaa
in
stos
mov
xor
xor
aas
out
cmp
cs
popf
xor
cld
mov
jnp
add
cmp
xchg
stc
sbb
push
push
cld
mov
or
cltd
shll
aam
jge
mov
cmp
push
hlt
pop
inc
jecxz
mov
and
xchg
jo
nop
pop
adc
lock
lock
add
xor
xor
mov
or
mov
rcrl
fcoml
rolb
rol
jle
dec
mov
mov
stc
or
pushf
jbe
push
or
and
pop
jno
sbb
sub
in
dec
mov
inc
adc
shrl
xchg
jns
sub
sbb
enter
pop
push
addr16
jae
aad
jmp
popa
fldl
pop
or
stc
fldt
push
int3
mov
sub
mov
fisubrs
enter
andb
push
xchg
mov
cmpsb
insb
mov
mov
sub
or
jmp
mov
orl
movsl
sbb
mov
xor
aaa
stos
and
nop
repz
fnstcw
fistl
loope
outsb
adc
lcall
jbe
push
and
xchg
repnz
leave
add
in
push
inc
mov
sbb
outsb
cld
insb
fists
arpl
or
mov
movw
mov
push
cmp
fcmovne
pop
xor
inc
xchg
xchg
add
mov
jb
xor
mov
fisubl
cld
mov
cli
mov
xchg
shlb
fmul
jnp
mov
shlb
shrb
mov
xchg
out
mov
js
rcll
rcll
fcomp
adc
movsb
cmp
mov
out
lds
fildll
out
xchg
xchg
cmc
int
inc
out
pop
popf
lea
pushf
cmpsl
dec
inc
pop
roll
lods
or
gs
fldl
push
out
adc
or
lcall
xchg
cmc
movsl
adc
inc
push
adc
adc
dec
mov
fcomps
mov
ljmp
add
insb
xchg
sub
jmp
in
xor
jae
std
mov
lret
popf
dec
loopne
jecxz
cmpsb
jb
les
sbb
in
mov
cmp
xchg
je
icebp
xor
in
es
mov
fisttpll
mov
push
xchg
fstl
lds
addb
fldcw
js
dec
push
or
call
addr16
push
shl
rcrb
cmpsl
mov
mov
cmp
in
sub
inc
and
cmp
scas
movb
or
push
push
dec
int
xchg
add
shl
fst
out
movsl
enter
std
scas
call
out
dec
fiaddl
and
inc
mov
cmp
inc
sub
dec
cmpsl
push
jg
cmp
cmp
cmp
nop
sbb
and
popa
sub
movsl
lods
mov
sbb
out
mov
cmp
xor
or
ret
sahf
mov
shrl
inc
cli
mov
xchg
add
dec
rcrb
imul
imull
push
mov
nop
stos
sub
test
mov
and
cmp
jecxz
adc
ss
pop
cmp
divl
and
or
and
add
in
push
sbb
adc
push
dec
dec
iret
jne
pop
rorb
icebp
out
repnz
outsl
xor
xor
test
xchg
popa
inc
addb
test
mov
inc
push
rcll
les
data16
xchg
add
adc
orl
sub
sti
or
shlb
addb
mov
pop
sub
jg
sti
pushf
jle
dec
cltd
in
and
lcall
or
jp
sub
cmp
fbld
jns
or
push
aaa
cltd
dec
in
pop
ret
cmp
add
or
test
jb
in
sub
jno
cmp
test
push
in
lds
xchg
idivb
and
cmp
and
adc
loope
xor
add
jl
adc
mov
mov
adc
adc
push
scas
mov
lods
lret
or
lcall
mov
jbe
inc
leave
mov
insb
pop
sub
std
inc
int
int3
lcall
push
jg
fmul
mov
add
xorl
mov
push
and
push
pop
push
aam
cld
sub
and
sub
xor
fwait
scas
pop
pop
nop
sub
push
pop
shlb
test
pop
add
push
test
lret
lock
jne
or
in
adc
mov
push
out
les
sub
and
add
pushf
clc
loope
shrl
inc
adc
int
out
dec
or
loop
das
or
add
enter
pop
loope
dec
popf
sbb
int
jp
adc
jg
sub
loopne
inc
jl
dec
fsts
push
or
mov
push
out
add
push
insb
or
inc
cmp
push
rorb
gs
jecxz
sbb
pop
int
bound
repz
dec
and
mov
add
push
mov
mov
mov
sbb
jns
xorb
fsubrs
cmp
sub
insl
mov
out
cmp
mov
mov
adc
push
das
rcr
pop
bound
adc
fistpll
xlat
pop
sub
and
test
sbbb
mov
and
push
push
shrl
dec
jecxz
cmp
pop
mov
sbb
popa
out
ss
inc
adc
mov
addr16
loop
pop
int3
aam
xor
adc
sarl
icebp
and
push
mov
and
popa
jg
mov
jns
stos
outsl
int
fnstenv
not
push
rorb
gs
mov
dec
pop
push
sub
daa
cmp
aas
adc
shl
fcmovnbe
cli
mov
in
inc
imul
movsl
movsb
mov
mov
imul
mov
pop
test
push
lcall
insl
lret
inc
sub
mov
clc
js
addb
xchg
jbe
jecxz
inc
inc
cmp
ret
ret
push
cmp
mov
jo
in
clc
lods
mov
js
out
xchg
test
mov
cmpb
jge
mov
adc
sarl
jne
jl
add
xchg
sarb
fidivl
jl
sub
imul
xlat
dec
lcall
fnstsw
shrl
or
cmpsl
test
stos
xor
add
push
in
dec
gs
push
inc
fistl
mov
ret
mov
mov
adc
negl
push
cli
mov
mov
ja
jecxz
mov
push
fstl
and
insb
cmp
cmp
push
lret
les
xchg
cmc
or
pop
cmpsl
add
hlt
adc
out
dec
push
inc
clc
rorb
lea
xchg
fisubl
decl
stos
mov
in
insl
lock
test
xchg
xchg
mov
fcoml
cmp
jnp
vaddsd
xor
sub
lcall
xor
jne
cmpsb
push
mov
push
add
es
xor
lahf
jg
dec
mov
out
xchg
sbb
cmp
mov
fmuls
mov
pop
add
ljmp
jb
sbb
fmuls
adc
lds
sub
cmp
cmp
inc
mov
adc
cmp
ret
mov
adc
or
repnz
pusha
pop
gs
test
aad
and
xchg
inc
lahf
jl
clc
data16
repnz
dec
pop
test
gs
shlb
hlt
scas
xor
sbb
popa
and
sbb
push
mov
dec
std
dec
dec
push
lds
and
lock
mov
fsubl
adc
mov
and
mov
rcr
icebp
jbe
jb
jnp
in
dec
jbe
mov
pop
xlat
jnp
sarb
daa
or
adc
cmpl
outsb
enter
ret
shll
adc
xchg
repz
sub
rcr
mov
sub
rclb
and
into
insl
xlat
repnz
jle
pusha
shlb
pop
in
outsb
fsubrs
cmp
mov
call
inc
xchg
jne
and
cmp
jl
ja
xchg
outsl
adc
push
add
inc
xchg
mov
inc
fcom
jl
in
xchg
cmc
lret
jno
pop
dec
adc
int3
lahf
pop
adc
add
mov
push
push
scas
cmp
xor
int3
fcmove
xor
aaa
fidivrl
jne
push
and
and
mov
lret
cmpsl
subb
add
cmpsl
adc
sub
lea
sub
xor
test
jno
adc
sbb
jns
xchg
test
mov
cs
ljmp
mov
aas
mov
popf
movsb
aaa
das
add
adc
orl
lcall
xor
dec
fucom
aaa
sbb
loope
shl
int
add
xchg
out
jne
sub
xchg
pop
push
mov
lods
cmpsb
jp
sbb
xchg
stos
cmp
pop
pushl
sbb
or
xchg
add
mov
mov
in
rcll
dec
pushf
loope
mov
movsl
mulb
pop
sub
movsl
std
xlat
cmp
jne
notl
lret
aaa
sbb
cltd
dec
in
pop
test
sbbl
adc
mov
lods
jmp
sub
lock
arpl
pop
mov
in
stos
adc
pop
inc
inc
stc
in
add
divb
cs
pop
inc
scas
aam
imul
in
mov
in
jp
mov
movsb
add
repz
adc
inc
ud1
xchg
outsb
mov
inc
xlat
mov
or
ss
pop
adc
lret
and
hlt
cld
xchg
test
pop
pop
or
xor
ds
xchg
lea
dec
xor
sbb
daa
mov
sub
aas
popa
and
jo
jbe
cli
xchg
fs
mov
ds
mov
push
shll
rcr
adc
pushf
mov
ja
jle
mov
int
dec
xor
xchg
add
push
or
insl
add
adc
cld
mov
loopne
xchg
cmp
cmp
addr16
pop
popf
fstpl
jle
pop
xor
rorl
mov
mov
ror
cmpsb
sbb
mov
sub
loope
mov
test
mov
loop
inc
cli
sub
inc
push
pop
test
lahf
jbe
rorl
andl
ss
addl
mov
pushf
jecxz
shll
sarb
lds
sbb
idivl
push
aas
adc
push
jmp
inc
addr16
bound
and
movsb
scas
jne,pt
xor
fcoms
shrl
jo
push
gs
xor
or
or
push
mov
xchg
jnp
and
jae
push
inc
push
xor
mov
stos
out
xor
cwtl
aad
add
cmp
mov
inc
xchg
call
or
jg
pop
jae
or
cmpsb
jle
lods
adc
jge
jbe
adc
sub
jne
test
xchg
mov
mov
rcrl
and
inc
inc
push
mov
imul
insl
jo
out
arpl
and
in
sub
int
adc
inc
pop
sbb
adc
inc
inc
cmc
and
mov
push
mov
jbe
out
sub
in
and
push
call
sub
push
enter
mov
pop
mov
mov
sbb
push
mov
lret
and
je
and
lods
push
cmp
jae
mov
int3
push
movsl
adc
lea
loop
mov
adc
push
push
movsl
lret
imul
mov
cwtl
decb
xchg
xlat
popa
stos
scas
mov
push
into
xor
push
xchg
push
fstps
add
mov
roll
fcoml
std
pop
xor
sahf
or
jb
out
rcrl
dec
imul
add
inc
inc
jbe
mov
idivb
adc
lea
xor
divl
sub
in
mov
and
or
mov
pop
sub
cmp
int
leave
daa
out
mov
or
mov
insb
xchg
push
and
xchg
or
jmp
add
clc
pusha
test
xor
cmp
pusha
fisttpll
inc
mov
inc
or
mov
aas
outsb
jae
jp
insl
dec
es
stos
pop
ljmp
xchg
idivb
pop
shl
rolb
repz
call
mov
adc
imul
dec
lret
cs
inc
pusha
fstpt
jns
sub
shll
pop
cmpl
adcl
aad
cmp
inc
imul
mov
in
out
mov
mov
push
cmpsl
sbb
inc
and
cmp
fildl
mov
mull
xchg
push
mov
in
je
test
jmp
xor
add
or
mov
mov
mov
pop
or
mov
jg
popf
aas
das
ds
stos
xor
mov
out
and
and
sub
push
addl
das
stc
dec
push
mov
add
lods
cmp
mov
mov
adc
dec
loop
push
pop
inc
push
jle
cld
add
call
mov
dec
or
xor
or
xchg
in
sub
or
outsb
ja
mov
adc
adc
pop
mov
dec
fsts
and
rorb
add
push
out
daa
dec
mov
jp
test
lcall
mov
pop
mov
dec
cld
cmp
pop
add
inc
and
lods
faddl
mov
mov
pusha
sub
mov
sbb
fstpl
daa
cmp
pop
push
mov
and
dec
popf
adc
inc
les
hlt
mov
fstpl
cmp
inc
push
pop
jl
scas
invd
mov
sub
cmp
add
rol
mov
cs
mov
pop
push
pop
push
bound
out
pop
xchg
mov
pushf
sub
mov
aas
stos
sbb
jmp
add
cwtl
int3
push
in
push
and
push
stc
cmc
repnz
xlat
sbb
fsts
mov
lahf
fs
fidivrl
mov
test
pop
xorb
sub
test
es
fstl
loop
stc
jbe
test
out
pop
lds
jae
into
mov
data16
lods
lret
or
push
push
sbb
sub
pop
enter
add
enter
mov
mov
mov
dec
test
lahf
leave
pop
fidivrl
xchg
sub
mov
outsb
xor
jl
fwait
mov
out
cwtl
loop
out
enter
pop
ret
cmp
cmpsb
push
jno
jmp
add
xchg
mov
shrl
push
push
nop
push
cltd
popa
cmp
rolb
xor
cld
rolb
xor
xchg
jp
cld
cltd
imul
outsb
jmp
nop
pushf
inc
mov
das
bound
scas
test
sti
dec
nop
je
mov
aam
xchg
out
sbb
pop
cmp
mov
daa
push
std
les
inc
lret
mov
into
xchg
inc
nop
cltd
ds
ja
jae
sbb
push
adc
int3
dec
cld
aaa
ficoml
imul
call
cmpsl
inc
or
xchg
add
push
dec
cmpb
lahf
dec
xor
mov
xchg
pushf
dec
fldenv
mov
xchg
std
dec
adc
dec
lahf
jle
scas
mov
jmp
jle
xor
inc
or
fistpll
enter
scas
jecxz
aam
iret
ss
mov
or
inc
popf
jo
lods
daa
cld
stos
mov
out
mov
cmpl
pop
jae
inc
hlt
lock
mov
xor
pop
addl
stos
sub
cmpsl
push
cwtl
mov
sbb
and
sbb
ljmp
pop
adc
mov
jns
or
in
cli
dec
mov
mov
shll
sbb
push
mov
and
sbb
mov
icebp
dec
inc
cmp
adc
sub
cmp
push
mov
jbe
inc
rorb
sbb
sub
scas
jl
ficomps
leave
fs
in
or
test
push
or
push
aam
mov
mov
stc
dec
loope
aaa
jge
mov
cltd
mov
and
cld
cmp
mov
repz
sbb
mov
out
push
nop
jmp
dec
pop
sub
and
or
cmc
mov
cli
std
or
add
mov
pop
sahf
aaa
inc
xor
dec
sub
inc
cmpsb
sbbb
cmpsl
bound
cmp
mov
and
cmp
shrb
mov
pop
lods
pop
enter
or
loop
jp
mov
rol
aam
std
mov
mov
mov
sbb
push
or
add
mov
data16
sub
mov
jecxz
or
imul
in
mov
push
inc
adc
mov
push
mov
jno
aad
int3
in
sbb
mov
mov
mov
rcrl
out
inc
dec
pop
and
pop
in
cs
adc
pusha
xor
sbb
cmp
jns
mov
inc
add
jno
xor
push
add
ja
mov
sbb
mov
daa
into
sti
xchg
mov
fwait
repnz
dec
dec
ds
mov
xor
dec
pop
ss
out
imul
pop
and
cmp
add
pop
add
aam
cwtl
mov
jmp
push
loop
cs
cltd
and
mov
lea
jle
lret
ror
icebp
lods
jl
shl
mov
aam
mov
mov
stc
sbb
sub
repnz
adc
dec
inc
repnz
cmp
or
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
in
pop
ja
adc
lahf
push
clc
dec
enter
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
mov
jg
clc
mov
and
pop
inc
sub
bound
jb
sub
mov
scas
sarb
add
jle
inc
xor
add
bound
jb
orb
mov
sahf
shl
loop
repnz
add
pop
dec
das
xor
jge
pop
pop
jl
jp
stos
idivb
or
or
in
subl
icebp
jbe
lret
cmp
cmp
jno
popa
call
int
mov
test
push
rolb
cs
inc
cmpsl
inc
imul
outsb
and
mov
pop
fidivl
sub
dec
lret
in
mov
repnz
mov
pop
mov
icebp
inc
bound
jb
inc
xor
fwait
popf
sarb
ljmp
scas
adc
xor
xchg
jg
insl
add
cmp
add
and
repnz
push
cmp
sbb
inc
fistpll
loop
je
bound
faddp
scas
sarb
add
and
inc
adc
bound
jb
ret
out
out
lret
mov
mov
flds
sub
dec
cmp
add
ja
test
mov
ret
in
lcall
or
sbb
outsb
inc
popa
cmp
push
imul
out
xchg
push
int
fidivs
loop
repnz
add
jle
dec
xor
cs
bound
jb
sub
mov
scas
sarb
add
jle
dec
xor
cs
bound
jb
sub
test
mov
xor
ja
mov
push
fldt
cli
pop
nop
into
mov
or
push
add
pop
cs
adc
mov
mov
cld
push
call
lods
test
mov
mov
xchg
loope
sbb
fwait
sahf
ret
ds
shrb
test
jae
sub
mov
mov
int3
in
sbb
push
xchg
out
cld
dec
dec
adc
sbb
and
push
outsb
icebp
jp
js
into
fidivl
cs
add
bsf
dec
push
out
cmc
mov
insl
push
add
push
orl
cmpsl
ja
inc
lods
ret
cmp
insl
jmp
push
add
pop
xchg
gs
aad
inc
sub
int
sub
idivl
fdivrl
xor
mov
daa
ss
jns
or
fldl
xor
cmc
movnti
stos
jle
jp
inc
pop
fwait
hlt
cld
inc
inc
xor
inc
cmpsl
adc
jnp
or
cltd
lcall
push
dec
push
mov
inc
lret
mov
or
fwait
sahf
cmp
cmp
xor
mov
cltd
mov
fsubrl
push
xchg
mov
jo
adc
or
dec
aas
push
sub
jmp
inc
mov
and
pop
loope
sub
packssdw
movsl
pop
cmp
popa
cmp
cmp
jne
aad
mov
fdiv
cmc
mov
call
call
mov
dec
jp
and
fistps
cmc
sbb
or
out
shrl
mov
mov
popf
in
out
xlat
jg
mov
imul
cmp
adc
pop
mov
pop
jl
adc
in
jo
sub
jg
addr16
pusha
arpl
xchg
sbb
or
ret
fstp
mov
outsl
sub
loopne
fidivl
sti
ss
cmp
sbb
fsubl
aad
inc
xor
loope
mov
ss
xchg
std
pushf
cmp
mov
jge
jnp
out
aaa
push
mov
cmp
out
in
jg
jo
pushf
xchg
sahf
or
sub
add
sub
jbe
dec
insb
jp
aaa
add
std
inc
inc
idiv
nop
addr16
mov
dec
lods
cwtl
aaa
rorl
pop
out
shlb
xlat
subl
faddp
push
fcoml
mov
jae
and
push
pop
adc
call
movsl
sbb
jp
xor
ret
mov
imul
cmp
jmp
push
jmp
sub
push
popf
jge
test
lea
cmp
pop
inc
call
sbb
and
push
mov
shlb
lret
and
jg
test
add
cmp
mov
or
in
mov
bound
movsl
mov
mov
or
mov
mov
iret
xor
adc
sahf
mov
addr16
pop
inc
cmp
in
in
idiv
add
pop
cmp
push
rcrl
mov
movsb
cmpb
mov
rclb
das
lret
call
inc
lds
dec
sbb
aas
ds
mov
inc
fsubrl
ror
lods
pop
ds
andl
push
mov
inc
fcoms
mov
test
mov
adc
std
push
fisubrl
xchg
and
sub
sahf
hlt
dec
mov
sti
bound
and
push
pop
sbb
jmp
or
or
sub
xchg
sahf
rcl
jns
pop
lods
pop
lock
push
pusha
in
pop
lea
repnz
xor
aam
jae
fld
movsl
push
mov
mov
mov
mov
mov
dec
sub
insb
shr
pop
fimuls
push
add
stos
les
jnp
inc
rep
out
in
add
or
lods
jmp
lds
imul
push
mov
loop
xor
enter
jle
int3
aam
out
gs
push
sahf
fs
popf
mov
and
add
dec
into
push
mov
sarl
in
add
sub
pop
scas
adc
jno
mov
xor
gs
dec
and
cmp
and
cmp
addr16
icebp
cwtl
pop
or
data16
xchg
inc
pusha
ret
lcall
scas
xor
lock
repz
in
ljmp
test
lods
jbe
mov
test
pop
xor
cmp
cmp
mov
mov
jp
call
cmp
inc
push
jp
rcrb
adc
adc
xchg
inc
xchg
or
test
push
fdivl
filds
or
aad
pop
push
push
fisttps
mov
lahf
sbb
push
hlt
leave
sub
push
cmp
cs
dec
cmc
mov
std
xor
xchg
loopne
ljmp
mov
outsl
jge
lods
add
xlat
ljmp
xor
outsb
xor
movsb
rcl
mov
and
jbe
rcll
mov
inc
or
pusha
sbb
loop
popa
mov
mov
jnp
je
rolb
aaa
and
pop
adc
add
sub
mov
dec
jne
pop
sbb
cmc
mov
add
pop
mov
sbb
and
popf
mov
push
in
sub
div
imul
push
loop
pop
mov
fisubrs
mov
repz
fisttps
inc
loop
ss
dec
sbb
test
push
ss
sub
mov
sub
in
outsl
mov
mov
pop
mov
add
pop
dec
lahf
fsubr
xchg
outsb
push
and
movd
mov
cmp
cmc
ficompl
jno
xchg
jne
mov
js
pushf
cmpsl
jae
int
push
shll
inc
inc
mov
xlat
in
lods
or
xchg
pusha
jmp
cmp
sub
fdivs
test
push
adc
andb
daa
cmpsl
or
xor
pusha
jle
ret
sahf
mov
push
or
rolb
inc
movl
cwtl
popa
jne
loope
add
jge
jl
iret
sub
in
shrb
dec
xor
mov
or
jl
ret
lds
fdiv
daa
mov
shr
pushl
cmp
sub
jmp
mov
stc
roll
xchg
pop
adc
sahf
pop
and
mov
bound
lds
fsubrl
cmp
out
xor
mov
out
aas
xchg
fldt
mov
shrb
dec
mov
push
jmp
mov
cmc
dec
repz
cmc
inc
sahf
in
mov
nop
pop
pop
dec
sub
or
add
xchg
sbb
push
sti
mov
mov
loop
movsl
pushf
sub
mov
insl
pop
adc
dec
push
xorl
mov
sub
mov
xor
rcl
lcall
xchg
lock
stos
jmp
xor
mov
mov
jmp
insb
mov
dec
cmp
jne
insb
gs
mov
rclb
fwait
adc
xchg
sbb
jp
mov
movsb
sub
mov
sub
fs
push
inc
divb
sahf
mov
int3
mov
fisttps
stos
or
add
sub
and
call
pop
inc
sub
jbe
ja
adc
ret
ret
dec
dec
mov
es
in
pop
adc
popf
pop
and
adc
push
bound
jne
cmpsl
pop
cmp
or
sbb
adc
add
cmp
ror
sbbl
mov
test
and
fiadds
stos
xor
pushf
cmp
inc
movsb
and
mov
fxch
xor
jno
mov
jae
iret
sub
add
rcl
test
jne
ret
sub
repz
or
lahf
arpl
dec
pop
pop
ret
dec
pop
jecxz
clc
mov
push
pusha
fnsetpm(287
mulb
addb
ljmp
aas
shlb
mov
inc
les
mov
push
inc
out
scas
mov
jno
jl
inc
hlt
test
mov
stos
push
mov
hlt
push
out
xchg
fs
jle
and
push
dec
popa
jg
mov
xor
jmp
jp
fs
pop
xor
and
scas
jne
xlat
ljmp
mull
mov
sub
xor
insb
push
not
and
lahf
test
movsl
add
dec
jo
cli
das
xor
lods
mov
ret
xchg
mov
jo
mov
mov
in
mov
mov
sub
mov
das
pop
mov
icebp
mov
roll
inc
nop
cmp
push
repnz
addr16
fadds
cmp
stc
loope
inc
movsl
inc
insl
mov
jne
push
mov
adc
jp
popl
lret
fs
mov
sub
adc
fsubs
inc
fisubrl
loop
fisubl
hlt
or
scas
andb
inc
cmp
das
test
popa
inc
xor
push
dec
rcr
repnz
outsb
jbe
sti
inc
insl
push
dec
jae
jmp
cmpsl
test
enter
imul
adc
shll
out
mov
xor
inc
aam
ds
mov
aas
pop
bound
fadd
xchg
fcomps
pop
cmp
loopne
inc
inc
add
clc
lret
roll
jno
js
aas
sar
ds
das
mov
pop
mov
or
xor
jge
ss
jbe
push
loopne
mov
fwait
or
adc
xchg
loop
jp
test
dec
sub
adc
fwait
jp
out
or
shl
fstps
sub
ljmp
push
mov
xlat
sub
movsl
sbbb
cltd
popf
or
out
jns
in
lods
sub
test
adc
dec
cmpsb
jl
scas
je
repnz
add
adc
pop
inc
mov
int
push
sub
xlat
loope
sbbb
and
inc
scas
jp
sbb
xor
test
mov
popf
or
cld
cli
ficompl
sub
decl
ror
test
dec
sbb
dec
cmp
rolb
addr16
test
and
xchg
test
push
adc
cmpsw
loope
frstor
cli
cmp
mov
push
xchg
mov
stos
or
outsb
inc
daa
xchg
out
fwait
iret
mov
xor
xor
xor
lock
xor
mov
jge
incb
sbb
sti
mov
and
sahf
outsb
test
adc
push
lret
leave
mov
dec
pop
push
ret
sahf
pop
cmpsb
dec
rorb
in
jns
and
jp
mov
push
mov
add
mov
pop
ffree
addl
lock
lods
jge
cwtl
or
insl
int3
cmp
dec
cs
ss
or
pop
cli
pop
mov
sti
shlb
dec
mov
lods
lods
pop
movsb
stc
push
inc
fstpt
lea
sbb
inc
xlat
cmp
or
push
mov
cmc
test
shlb
in
and
dec
dec
pusha
mov
cmp
shl
mov
mov
ret
movsl
shr
mov
ret
mov
sbb
icebp
addb
adc
push
in
jns
scas
pop
xlat
push
scas
xor
sub
popa
xchg
xchg
xor
popa
movsl
shrb
push
ss
lods
push
popf
popa
lret
bound
fstpl
push
dec
xchg
les
jno
xchg
inc
testb
xchg
jg
rcr
jnp
jne
cmpb
sbb
loopne
cmp
sub
and
data16
jl
aaa
clc
or
cwtl
and
enter
cmp
push
repnz
sub
mov
mov
xchg
mov
imulb
sub
je
pop
ss
ror
xchg
cmpb
mov
aaa
lahf
add
in
fistpl
xor
es
pop
xchg
lds
loopne
dec
cs
push
insl
dec
jmp
loopne
inc
pop
orl
into
and
inc
mov
cmp
mov
inc
pop
outsl
push
jp
xor
js
xor
inc
lods
rcl
cmp
mov
sub
mov
fisubrs
lret
shr
pop
sbb
sub
clc
sar
mov
dec
mov
ret
xchg
out
lret
aaa
std
scas
xchg
scas
in
push
mov
xor
negb
imul
mov
cmp
mov
mov
jbe
xchg
das
repnz
in
push
xchg
je
sub
add
popf
adc
inc
pop
or
out
sub
aas
and
xor
daa
repz
xor
shl
mov
test
pop
sbb
cmpsb
jecxz
mov
xlat
xor
push
aam
and
ljmp
flds
ret
mov
into
adc
hlt
cli
adcb
push
adcb
and
cltd
shll
inc
sti
cld
sbb
pop
movsl
xor
inc
popa
adc
lock
sbb
ljmp
lahf
test
xor
or
shrl
cmpsb
lret
cmp
add
mov
addl
mov
jns
mov
mov
setb
insb
pushf
imul
in
out
out
addb
test
pop
inc
pushf
scas
add
push
adc
or
push
inc
lret
sbb
and
ss
jge
mulb
clc
shll
mov
jne
dec
dec
pop
pop
insl
sahf
std
repnz
das
jne
sub
jmp
or
sub
lahf
push
addr16
test
fldl
pop
jb
fcoml
sub
int
xchg
pop
fistpl
scas
lock
mov
inc
cld
and
mov
enter
push
idivl
sub
mov
shrl
lret
pop
aaa
mov
in
jmp
fisubs
push
sbb
orb
jmp
cli
fnop
nop
mov
pop
push
mov
std
lahf
es
mov
push
sbb
cwtl
xor
out
fsubrl
xorb
bndldx
xchg
inc
dec
imul
add
xchg
popa
mull
lock
js
pop
insb
mov
stos
lret
fcoms
ljmp
test
lea
rcrl
in
fwait
outsb
icebp
inc
popa
sbb
in
or
lahf
shrb
hlt
mov
fidivs
pop
mov
outsb
or
shlb
jne
jb
xor
xchg
sbb
sti
adc
xchg
sbb
pop
cmp
mov
lret
push
sub
cmpl
pop
xor
arpl
dec
mov
enter
stos
push
stc
out
idivb
adc
sub
test
xchg
jp
sbbb
mov
clc
mov
inc
jecxz
cwtl
mov
stc
or
cmpsl
and
outsb
mov
inc
out
fwait
in
mov
mov
and
inc
sub
in
sti
sbb
test
jl
repnz
adc
mov
sbb
shrl
scas
inc
pop
insl
daa
aas
adc
xor
rorl
bound
rorl
ss
fldl
mov
push
clc
jecxz
or
insb
ret
sub
xchg
or
inc
loope
mov
leave
or
mov
xchg
repz
dec
lret
xchg
das
cmp
and
lods
leave
mov
bound
sub
or
call
aam
popa
adc
mov
cli
aad
pop
mov
jecxz
cmp
mov
pop
scas
sub
push
dec
or
push
push
into
jecxz
mov
popa
mov
movsl
cmpl
stos
inc
call
lods
cmp
push
adc
fistpl
adc
xchg
ljmp
cmpsl
xor
pop
sti
adc
test
xor
fwait
insb
mov
int
lret
push
mov
dec
leave
into
jle
xchg
sarb
mov
cmp
jne
adc
test
add
out
mov
jg
movsb
negb
cwtl
sarl
and
add
rcl
or
sub
xor
in
repz
das
ds
sbb
or
push
xor
aaa
jmp
bndldx
bound
jne
sub
icebp
adc
mov
xor
inc
xchg
sub
xchg
jmp
ffreep
adcl
lahf
push
push
bound
faddl
andb
adc
or
lea
adc
ret
mov
stc
mov
fidivrs
jmp
repnz
jg
xchg
xor
adc
lock
hlt
shrl
icebp
scas
fildll
mov
rep
sub
shll
out
icebp
rorl
or
aam
ljmp
fbstp
cli
xor
or
fistpl
and
in
ficoms
mov
shrl
or
mov
and
sub
aas
push
push
or
aaa
xchg
lds
and
ds
mov
adc
lds
push
add
and
push
fs
adc
and
test
sub
jae
dec
cli
sub
rorb
xchg
xchg
mov
ret
cmp
enter
jl
neg
add
insl
mov
inc
fsubrs
repnz
jp
cltd
add
sbb
cwtl
sbb
fimull
sub
push
jge
stc
fwait
jmp
out
ljmp
inc
jge
push
inc
mov
and
pop
ljmp
jecxz
add
sub
push
aas
sub
mov
push
arpl
out
add
push
fistpl
mov
icebp
out
xchg
lret
lret
or
jmp
es
mov
mov
rorb
fmul
int3
xlat
inc
add
pop
push
test
pop
mov
sti
or
sbb
mov
addr16
dec
shl
jmp
fistl
movsb
insl
or
cmpb
xor
sbb
xchg
xlat
popf
sub
mov
insl
jne
pop
lods
jb
cld
xchg
mov
das
dec
mov
mov
gs
movl
fdivr
pop
ds
ret
jb
call
inc
jge
int
mov
push
lea
and
enter
mov
imul
loope
inc
out
pop
inc
fs
out
mov
mov
and
lock
xchg
pop
xchg
adc
xlat
cmp
or
sbb
hlt
repnz
rcr
int3
push
jle
xlat
sbb
icebp
cwtl
mov
cmp
xchg
mov
push
push
jp
popa
insb
or
leave
test
rcrb
cli
sbb
rcrl
and
and
jbe
mov
adc
push
out
nop
adc
fsubs
outsb
sbb
or
test
mov
cmp
dec
and
dec
jge
add
mov
clc
out
loopne
pusha
mov
les
adc
sub
aam
lret
popf
or
mov
repz
stc
sub
dec
mov
inc
xor
out
mov
push
dec
xchg
add
repz
xor
sbb
adc
fisttps
cmp
test
dec
out
lds
xchg
xor
add
or
dec
xchg
call
shrl
mov
adc
mov
mov
aaa
ljmp
jp
sbb
mov
xchg
shr
test
mov
dec
rorb
jg
jle
enter
lods
mov
divl
and
fwait
in
push
mov
push
push
imul
lahf
repnz
rclb
adc
imul
jecxz
fdivl
fbstp
sahf
push
jnp
mov
adc
lods
dec
mov
mov
shrb
cltd
and
pop
pop
loopne
push
pop
mov
jbe
movsb
xchg
lods
and
jbe
orl
adc
add
je
psrld
icebp
mov
pop
pop
fnstenv
movsl
das
add
sti
jns
ss
add
dec
shlb
mov
lock
lea
dec
lahf
push
out
xor
push
js
ss
loopne
ret
cmp
pop
stc
shl
movsb
mov
gs
inc
push
mov
jne
stc
push
sbb
dec
aam
sbb
data16
mov
leave
and
or
mov
ds
call
jmp
sbb
ljmp
aad
lret
cli
mov
mov
add
iret
ljmp
adc
idivb
sub
xchg
push
mov
pop
pop
mov
or
push
dec
adc
mov
test
push
in
sbb
push
pop
jl
push
add
insb
fsubp
test
or
fwait
sbb
and
push
lods
aaa
inc
popa
lret
enter
xchg
mov
dec
adc
mov
scas
jo
lcall
inc
xor
ror
mov
mov
and
aam
or
adc
sahf
xor
hlt
xor
gs
bsf
in
cs
adc
and
ret
cmovb
push
dec
gs
xor
les
or
mov
scas
sarb
add
jle
dec
xor
cs
bound
jb
sub
mov
scas
sarb
add
jle
dec
xor
cs
bound
jb
sub
lock
mov
inc
scas
rcl
loop
jb
add
jp
dec
xor
sub
bound
jb
orb
sbb
scas
sarb
add
xor
xor
inc
adc
addr16
ja
inc
mov
pop
in
jne
sbb
out
testl
cmpsl
pop
mov
xchg
insb
xchg
insb
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
mov
sbb
or
cmp
xchg
xchg
insb
jle
outsb
mov
dec
lods
fsubrl
int3
pop
cld
pop
in
sbb
das
cwtl
pop
scas
inc
cmpsl
sbb
adc
sbb
sbb
rcrb
cld
inc
out
and
je
aaa
and
call
jmp
dec
addr16
scas
aad
cmp
cmpsb
test
pushf
mov
int3
aaa
inc
xorb
or
repz
sub
testl
cwtl
mov
imul
mov
mov
xlat
das
mov
or
cmpsl
mov
xchg
mov
mov
ss
clc
hlt
push
or
loopne
repz
sub
or
xchg
insb
aaa
pop
cli
jae
inc
mov
fcoms
and
out
out
xor
mov
sub
movzwl
xchg
add
inc
hlt
jbe
sbb
or
dec
in
xchg
scas
pushf
outsb
mov
push
lods
xor
daa
int3
pop
cld
push
in
sbb
or
cmp
sub
pop
scas
dec
popf
jl
sub
pushf
adc
and
and
push
fwait
push
mov
out
fwait
adc
cmpsl
sub
or
push
cli
or
lock
loopne
hlt
daa
iret
dec
lahf
aaa
mov
stos
inc
ret
xchg
jle
pop
xchg
jle
cmp
sbb
cmp
fstpl
fildll
fnstcw
aam
out
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
pop
movsb
clc
shll
dec
sub
arpl
leave
sbb
xchg
lea
fimull
pop
push
mov
test
adc
jnp
out
jns
imul
das
mov
insl
dec
cmp
jg
lds
into
es
iret
xor
rcr
mov
push
lcall
cmp
add
inc
adc
gs
dec
in
push
jle
xor
outsb
ret
pop
nop
mov
inc
pop
aaa
lahf
mov
inc
add
fildll
repz
xchg
sbb
mov
out
or
inc
clc
jecxz
rolb
aas
mov
test
into
pop
movsl
int
test
movb
jno
push
fsub
div
loope
or
decb
roll
iret
mov
push
or
je
mov
nop
xor
xchg
jl
push
add
dec
mov
sbb
mov
out
mov
xchg
adc
stos
scas
mov
in
aad
les
movsl
xor
push
int3
adc
add
lea
loop
lods
ficomps
jbe
adc
sbb
dec
fbstp
jmp
sbb
insb
fnstenv
pop
jnp
inc
push
filds
mov
adc
mov
lock
test
arpl
fs
and
mov
dec
fildll
loop
leave
xor
pop
mov
pop
xchg
inc
dec
pop
cmp
mov
fsts
or
mov
std
pop
shrb
aas
push
mov
aam
jno
ja
dec
xchg
and
cmpsb
mov
mov
xor
adc
xchg
push
lcall
add
fucomi
inc
mov
dec
gs
cmpsl
xor
cmp
movb
out
mov
dec
adc
in
jg
fwait
inc
mov
stc
rorb
mov
add
jecxz
loope
inc
lahf
xchg
lods
mov
and
mov
aad
ret
lret
cmpsb
lcall
mov
out
loop
push
mov
mov
in
loope
in
aaa
sar
divb
jp
sahf
cld
jbe
sbb
frstor
cs
out
imul
push
fcmovnbe
inc
pop
pop
mov
cmp
mov
ja
call
js
push
add
adc
out
ret
mov
jecxz
out
inc
dec
jnp
lea
aad
xchg
das
or
stos
sub
stos
ja
mov
sbb
pop
mov
xor
pop
push
sub
lea
mov
aaa
push
push
sub
mov
pop
ret
mov
mov
cmc
cmp
xchg
test
mov
jbe
sbb
add
movsl
mov
adcl
rorl
cmp
mov
idiv
pop
mov
mov
cmp
push
stc
mov
pop
push
fdivs
and
lcall
mov
aas
sub
pop
into
mov
test
xchg
rcrb
negl
insl
mov
out
sub
pop
repnz
in
xor
lret
mov
outsb
push
push
or
stos
inc
lret
sub
lret
les
sbb
push
daa
xchg
insl
clc
jb
fwait
loopne
xor
rcll
dec
inc
movsb
pop
je
dec
dec
sub
pop
cmp
in
push
fisttpl
pop
xor
cmc
push
rcll
xchg
xchg
xor
push
int3
lods
leave
insb
lea
xorl
lret
imul
test
xchg
push
out
shrb
adc
loopne
inc
pop
mov
cmc
and
out
stos
clc
mov
sub
in
mov
lea
test
int3
xchg
mov
dec
mov
sbb
jae
inc
std
shrl
rcr
rcl
mov
sti
jmp
mov
fcmovb
mov
int
mov
jo
jge
sbb
pop
jno,pn
add
in
stc
lods
fwait
rclb
mov
test
sti
data16
jo
jno
mov
cmp
xor
dec
xor
fldl
xor
cmpsb
pop
dec
xor
xor
push
out
sbb
repnz
stc
ja
mov
cmp
outsl
fidivs
stos
push
sub
cmpsl
sbb
sub
push
scas
insl
ret
xor
nop
fs
cld
out
sub
pop
call
pop
arpl
xor
and
shll
add
inc
popf
out
notb
arpl
cmp
bound
in
mov
call
jbe
mov
fstpl
imull
cld
jmp
sub
adcb
or
roll
add
in
lods
aas
xchg
cmp
inc
mov
mov
xchg
sbb
rcl
iret
xorb
ja
mov
jle
pop
xchg
cmp
aad
mov
xchg
lcall
shr
mov
imul
dec
imul
dec
mov
icebp
sbb
das
inc
adc
cltd
test
mov
mov
arpl
call
push
lret
jo
rclb
sbb
or
mov
push
rol
sahf
add
mov
scas
loope
lods
xchg
aam
lahf
pop
jae
int3
bound
add
in
mov
ds
rorb
cwtl
xchg
xor
iret
lahf
fisubl
lar
je
aad
repz
popf
adc
pop
scas
mulb
pusha
push
push
inc
mov
in
and
push
outsb
sbb
push
sub
jge
push
ds
push
mov
nop
int3
or
xor
add
cltd
out
incb
mov
jl
lcall
mov
add
mov
jl
pushf
pop
lds
jmp
add
jbe
in
pop
scas
mov
mov
mov
fldl
shlb
dec
jmp
daa
adc
xorl
popf
mov
rolb
xchg
dec
dec
add
stc
aas
xchg
add
scas
fstpt
out
fstps
push
pop
mov
shlb
sbb
pushf
sub
and
push
mov
inc
ret
cltd
pusha
clc
xchg
adc
daa
dec
xor
jmp
out
cmpsl
ret
pop
mov
dec
push
ss
inc
lea
and
gs
inc
sbb
ljmp
jns
mov
xor
mov
rorb
ja
ficoml
pop
lods
adc
inc
pop
testl
pop
loop
dec
xor
adc
mov
cli
sbb
cmc
scas
xchg
push
hlt
or
idivb
jl
and
pop
and
pop
cmp
mov
lods
xorl
push
xchg
movsl
push
icebp
loop
mov
pop
rorl
pushf
mov
pop
jno
inc
ja
sbb
push
add
add
sbb
dec
cmp
into
movsb
xchg
push
out
call
cmpsl
bound
xor
push
ret
out
and
jo
jne
dec
in
shlb
shll
decl
jae
push
xchg
data16
jno
mov
je
sub
lcall
inc
push
popa
in
jle
ds
push
inc
xchg
scas
jbe
sub
mov
fmull
xor
or
xor
inc
cli
bound
add
jbe
mov
mov
mov
and
push
push
std
dec
cmpsb
divl
xchg
mov
fsts
sub
jge
test
mov
sbb
dec
in
repz
push
push
pop
data16
movsb
out
jns
rcl
inc
push
xor
pop
push
xchg
inc
xchg
fucomp
sbb
cs
mov
add
push
dec
and
aam
in
fisttps
out
add
mov
ret
or
stc
or
shlb
mov
jl
aas
loope
ret
sub
fdivp
lea
cmp
or
movsl
xchg
lods
test
mov
stc
loope
pusha
sub
insb
inc
sub
dec
insl
jae
sbb
jg
in
fidivs
xchg
jbe
test
loop
pop
cmp
lcall
outsl
js
push
lods
mov
outsb
mov
jns
mov
subl
inc
in
lahf
addl
and
pop
out
mov
out
inc
xor
push
mov
vmovdqa
dec
ficoml
fcoml
xchg
push
xchg
nop
cs
xor
or
add
cmp
out
das
mov
push
add
sti
lea
mov
iret
rclb
rol
rorb
jns
outsl
jp
jns
or
call
leave
in
xchg
inc
mov
mov
adc
xchg
add
and
mov
or
and
mov
jno
leave
dec
ja
inc
fwait
sti
mov
sub
dec
iret
dec
mov
xor
aaa
cmp
xor
mov
push
je
inc
mov
dec
arpl
sub
cmp
cmc
testb
mov
lock
jge
cmp
sub
ds
jno
xor
mov
jnp
adc
stos
mov
dec
mov
stc
add
lcall
fwait
roll
push
xchg
sbb
push
jp
and
fmull
or
movlps
stos
dec
data16
pop
mov
in
js
jo
jnp
sub
sub
dec
loop
cmc
xor
pushf
mov
lret
and
and
push
dec
sbb
push
and
adc
mov
sub
pop
lods
popf
push
scas
inc
sbb
lock
iret
int
cmp
in
push
aaa
shrb
hlt
jp
dec
movsb
test
dec
popa
pop
stc
pop
inc
push
testb
mov
xor
hlt
popa
lods
add
jg
xor
cmp
stc
dec
inc
mov
test
loopne
adc
lds
paddusw
mov
cltd
das
adc
add
mov
mov
cmp
jbe
cwtl
and
jb
xchg
movsl
mov
shll
xchg
inc
adc
pop
push
jno
xchg
adc
test
add
sbb
int3
sahf
out
cmpsb
stos
bound
cs
and
int
in
jnp
ss
notl
lret
sbb
icebp
mov
add
adc
cltd
mov
stc
sub
mov
in
inc
sbb
sbb
mov
out
xchg
cmp
fsubrs
in
sub
movsb
hlt
sbb
mov
xor
sbb
lods
inc
lods
lahf
lods
das
imul
into
xchg
pop
adc
stos
jns
rclb
lock
test
shlb
dec
repnz
movsb
mov
jl
mov
out
fcom
sti
cmp
xor
and
test
xchg
andl
sub
rolb
pop
and
push
rcrb
push
ret
and
dec
push
inc
push
lcall
mov
test
das
adc
ret
movsb
lret
pop
das
pop
in
outsl
ror
inc
jp
sbb
add
jb
fcmove
subl
cltd
out
fsub
std
in
out
das
js
and
push
pop
out
int3
fisubrl
jp
cmc
das
out
test
shlb
dec
jb
jmp
push
mov
sbb
leave
stos
into
jg
or
push
fisubrs
pop
mov
jae
mov
scas
mov
cmpsl
jae
mov
iret
inc
push
push
xor
dec
hlt
push
jbe
sub
jecxz
decb
or
push
aad
in
sub
ss
pusha
test
nop
faddp
mov
scas
mov
sbb
dec
xchg
movsl
sbb
xor
shlb
pushl
in
adc
lret
jmp
xor
xor
inc
sbb
sub
add
mov
and
test
add
inc
inc
mov
or
sub
or
int3
sbbl
ret
inc
jb
test
fldl
dec
push
les
sbb
mov
fs
add
or
testb
cmpsb
aas
push
mov
bnd
push
clc
stos
loop
sbbb
xor
sub
cmp
inc
mov
js
insl
inc
lret
aad
icebp
stos
std
pop
push
jle
jg
and
pop
cli
fwait
daa
jmp
jp
test
cmp
pop
pop
cmp
pusha
mov
bound
clc
jbe
cmp
or
cmpsb
fwait
adc
push
mov
in
in
xor
lcall
rcrb
out
fs
xchg
adc
out
sbb
or
gs
add
cmp
enter
cmpsb
sbb
ja
stc
insl
jge
sub
call
pop
pushf
dec
daa
cli
pop
lock
mov
pushf
rcl
pop
or
mov
mov
pusha
fimull
iret
pop
je
xchg
adc
test
inc
sbb
mov
call
pop
adc
push
out
or
subb
xchg
inc
jle
stc
dec
fsubrs
cwtl
sbb
scas
sub
jne
adc
xor
je
aaa
pop
pop
mov
cmpb
adcl
out
mov
data16
aad
out
stos
jnp
pop
mov
test
or
xor
in
testl
stos
mull
xchg
xchg
sub
push
data16
out
jecxz
test
inc
or
xor
jno
cmpb
fwait
inc
imul
test
rclb
pop
push
mov
and
xchg
inc
stos
xorl
fistpll
shlb
dec
imul
aam
xlat
add
xchg
mov
int3
xchg
mov
xor
lcall
insl
jg
cmc
and
inc
js
aaa
mov
jle
rol
pop
pop
rcll
inc
push
cmpsb
outsl
test
imulb
jae
and
sbb
ret
rcll
add
rcll
adc
mov
xchg
outsb
dec
jae
notl
fst
push
ret
sbbb
mov
test
jg
xchg
adc
dec
popf
outsl
mov
scas
mov
mov
or
movsl
movsl
xor
push
leave
int
test
roll
mov
push
inc
cmp
and
add
mov
repz
lea
push
sbb
dec
adc
fstpl
dec
cmp
ljmp
jo
addr16
js
pushf
out
mov
into
adc
sub
test
daa
mov
push
sub
ds
push
lea
dec
adc
gs
movsb
js
or
lods
mov
sbb
cmp
cwtl
cmc
cld
movsl
xor
imulb
mov
pop
dec
test
mov
jae
fistps
cmp
ja
ss
cltd
addb
int3
cmp
inc
push
jne
xchg
fs
pop
out
ret
inc
je
mov
xchg
and
lahf
mov
ficoms
add
and
sub
lods
jge
dec
xchg
pop
push
std
jns
sbb
lds
ret
push
mov
add
fildl
popa
clc
sub
push
mov
cmp
mov
rcll
stc
inc
pop
addr16
imul
rcrb
loopne
add
ss
in
mov
push
aas
int3
add
fiaddl
inc
scas
adc
movb
sbb
xchg
iret
push
mov
dec
lahf
mov
mov
cmpsl
dec
dec
sub
push
leave
ds
clc
dec
ja
jmp
sub
dec
and
jg
sbb
xchg
inc
dec
shll
int
push
dec
dec
cmpb
popa
sahf
push
in
xor
cmpsl
inc
xchg
pop
add
ja
lea
stos
and
and
sbb
mov
ja
fcmovnu
push
and
mov
or
cli
mov
sbb
movsl
out
add
xlat
jo
push
in
sub
cmp
scas
pop
dec
fimuls
insl
mov
imul
aaa
hlt
or
or
leave
sbb
jbe
repz
mov
mov
push
in
push
aaa
dec
ret
push
xchg
pushf
sbb
mov
lds
mov
push
aaa
pop
lret
out
add
lret
push
outsb
pop
pusha
jg
mov
inc
and
fs
leave
repz
rolb
add
xchg
adc
jecxz
adc
dec
fimull
test
cwtl
cmpsb
jge
aaa
xchg
adc
add
sarl
pop
cmp
imul
sbb
cmp
nop
lret
cmpsb
cmp
js
cmp
lret
dec
das
test
je
add
lock
pop
dec
ja
push
enter
sbb
jp
loope
lcall
sub
mov
sub
dec
push
mov
repnz
das
inc
dec
adc
idivb
nop
je
inc
std
push
push
push
sub
push
mov
movsl
dec
mov
xor
dec
out
xchg
je
popf
mov
addr16
add
iret
inc
jge
mov
mov
nop
dec
sub
dec
cmp
dec
sbb
jnp
sbb
mov
and
int3
inc
and
test
xchg
pop
or
jno
repz
cmpsb
js
add
in
into
sub
in
out
xchg
loope
lret
dec
ss
inc
stc
mov
loopne
clc
add
or
cld
dec
jno
jno
add
dec
mov
enter
jno
in
push
ffreep
xchg
enter
in
popa
or
dec
and
xchg
or
push
loope
adc
outsb
out
pop
inc
mov
or
rolb
mov
lds
xlat
test
es
sbb
inc
scas
jge
push
mov
pop
cmp
ds
xor
loope
cmpsb
sub
inc
jae
push
test
pop
mov
sbb
sub
pop
lods
or
in
ret
rcrl
xchg
or
fmull
sbb
sbb
shl
push
pop
xchg
cli
xchg
inc
out
and
out
pop
fdivl
bound
fwait
test
cmpsl
cltd
fisubl
scas
sbb
xor
inc
test
inc
lock
in
shlb
lret
pop
mov
insl
cli
mov
test
cmp
mov
add
push
fisttpll
movsl
mov
cmp
in
lods
ss
repz
cld
fstpt
test
bound
aad
enter
xor
bound
jae
xor
lcall
push
add
lds
mov
mov
adc
push
lretw
xchg
dec
ficomps
or
mov
adc
sti
push
push
jbe
lock
out
sub
sub
xor
mov
dec
std
pop
cmpsl
xchg
lret
test
sti
lea
leave
ret
fwait
ljmp
arpl
insl
pop
loop
mov
cmp
out
inc
sahf
int3
jns
outsb
inc
push
ret
mov
adc
shl
inc
mov
das
sbb
insb
outsb
cmp
movsb
daa
mov
fisttps
adcb
dec
sub
sub
push
test
xchg
ss
je
addr16
nop
fisttpl
enter
add
je
test
repnz
out
loopne
inc
dec
out
xor
cmpsl
fdivr
cmpsb
dec
sub
cs
mov
push
or
jmp
shlb
cmp
xor
xor
inc
icebp
and
adc
mov
fcomps
sbb
dec
pusha
hlt
xlat
mov
cli
fwait
mov
psubusw
mov
fbld
dec
sti
mov
lret
outsl
mov
xchg
jge
push
jecxz
repz
fwait
xchg
mul
es
push
rcrb
outsl
and
loope
pop
dec
mov
out
dec
insb
outsl
ret
test
repz
imul
sbb
sti
inc
add
lahf
and
xor
fadds
xchg
fisubrl
out
jno
cmp
adc
xchg
jne
inc
lahf
fisttpl
xchg
push
mov
sub
dec
push
out
push
jnp
pusha
hlt
fldt
mov
and
sub
jmp
push
je
xchg
xor
sub
xchg
xchg
ljmp
cmp
ljmp
in
xor
fisubrs
int3
mov
mov
popf
mov
xor
bound
fwait
xchg
sub
adc
shlb
push
or
mov
iret
cmp
pop
mov
xchg
adc
pop
push
daa
fldcw
sub
das
andl
and
jg
jle
or
sbb
adc
stos
dec
addl
sbb
outsb
ljmp
xchg
jne
negb
mov
or
mov
rcl
sbb
fmull
insl
pop
dec
add
push
shll
xchg
cmp
pop
pop
push
lgs
rolb
enter
fwait
mov
sbb
pop
lea
sub
mov
jo
loop
mov
shlb
xchg
out
aaa
rorl
call
dec
loope
ds
enter
cmpsl
cltd
cmpsl
mov
add
cmp
dec
lret
loop
into
fwait
pop
lahf
cltd
lods
jecxz
repz
inc
roll
lds
or
add
xchg
mov
jne
jb
xchg
push
xchg
in
ret
push
mov
fs
lds
push
sbb
and
jbe
sub
mov
mov
pusha
sarl
pop
jecxz
fsubrl
ljmp
inc
bound
push
xchg
cs
stos
inc
cmp
loope
pop
and
fsubl
xlat
test
pop
cmp
test
repnz
fmulp
push
push
push
and
arpl
popf
jp
adc
pop
add
out
xchg
jne
mov
nop
pop
je
xchg
test
fwait
cmp
ja
cld
std
or
pop
ret
adc
mov
ret
ret
jno
and
fdiv
rcrl
data16
test
pop
cmp
leave
mov
push
lods
daa
fdivl
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
ja
inc
mov
aaa
int3
pop
cld
pop
in
out
testl
pop
mov
xchg
addr16
jne
inc
mov
aaa
int3
xchg
xchg
sub
sbb
cmpsb
insl
cmp
pop
rcl
aas
mov
subl
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ja
xchg
inc
daa
sbb
bound
in
xlat
aaa
daa
mov
cmpsl
inc
xchg
ja
addr16
xchg
inc
cmpsl
aaa
xlat
daa
dec
pop
testl
daa
xlat
aaa
daa
mov
cmpsb
inc
xchg
aaa
xchg
add
inc
movsl
aaa
jmp
sti
pop
sbb
push
enter
push
aam
aam
out
add
push
ret
cmp
jo
cld
jmp
aas
aas
adc
mov
cmp
sarb
sbb
xchg
test
mov
cmp
mov
movsl
dec
xor
sub
aaa
loopne
cmpsl
test
jbe
ljmp
push
mov
cmc
fstl
insb
dec
lcall
mov
sub
adc
xchg
push
inc
xchg
xchg
cmpsl
inc
pop
pop
xlat
fsubrs
pop
call
cmp
out
cmpsl
mov
and
loop
shl
mov
sub
mov
testb
lock
daa
out
daa
inc
push
push
lahf
cmp
mov
inc
mov
pop
sbb
enter
push
hlt
mov
mov
addr16
xor
aaa
xlat
daa
pop
sub
out
xlat
daa
outsl
mov
cmpsl
mov
adc
add
adc
add
js
addl
inc
orb
out
repnz
xor
push
adcb
hlt
push
cltd
inc
mov
push
movl
push
in
or
shll
out
les
daa
pop
testl
pop
xlat
aaa
daa
mov
cmpsl
inc
xchg
ja
addr16
xchg
inc
cmpsl
aaa
xlat
daa
pop
testl
pop
xlat
aaa
daa
mov
cmpsl
inc
xchg
ja
addr16
push
push
lret
mov
dec
es
add
push
sbb
fdivs
ljmp
dec
outsl
inc
sbbb
pop
pop
fnstenv
xchg
pop
sbb
in
mov
pusha
fmul
stos
pop
clc
lea
adc
inc
outsl
lods
xchg
andl
mov
cs
outsb
cmp
mov
cltd
loope
jmp
add
xor
daa
ss
fprem
xchg
sbb
push
mov
cmpsl
shrl
add
bound
lods
jg
lds
jns
aaa
arpl
add
mov
ds
mov
mov
into
push
add
and
in
fs
js
push
pop
jle
xor
xlat
and
popa
sub
fistl
cmp
testl
imul
into
shrb
mov
jmp
cmp
ds
clc
mov
add
inc
call
mov
hlt
aam
pusha
pop
jle
rolb
push
lock
sub
icebp
insl
outsl
dec
adc
scas
mov
jg
lahf
fiadds
fs
sub
mov
pop
or
leave
add
mov
jle
push
test
jge
jbe
jg
lods
loopne
jno
pusha
cmp
mov
cmp
scas
andl
sbb
mov
repnz
dec
movsl
mov
data16
fstpt
push
imul
push
xor
add
push
xchg
popf
sbb
cmp
ror
pushf
scas
sub
jp
aam
fcompl
xchg
xor
addr16
add
xchg
lds
pop
nop
cmp
subl
lock
das
push
cmpsl
cmp
inc
jo
xchg
xor
into
inc
popa
cs
sti
lret
fsubl
pop
pop
push
mov
adc
rol
or
test
call
repz
pop
jl
in
mov
dec
jg
and
les
mov
pushf
shl
xchg
fistpll
shlb
push
stc
mov
into
andl
push
jbe
pop
xchg
inc
mov
lret
nop
iret
insl
ss
push
imul
xor
cs
out
mov
xchg
and
sahf
push
addr16
sbb
sub
out
xchg
call
mov
pop
ja
push
mov
inc
outsl
lahf
enter
pushf
dec
mov
cmpb
xor
xor
pusha
out
inc
jb
mov
push
and
lea
push
xor
mov
jge
adc
imul
iret
dec
pop
add
fdiv
call
push
and
icebp
scas
les
push
outsl
test
ss
movhps
sbb
adc
daa
insb
pop
fcomps
and
int
dec
ljmp
imul
test
fmul
lret
push
cwtl
ds
out
clc
jp,pn
lds
ficomps
sahf
icebp
aaa
jb
jns
popa
icebp
negb
xchg
pavgw
fcmovnb
mov
dec
xchg
in
divl
popa
mov
rolb
test
push
jbe
iret
xlat
bound
xor
cmpsl
xor
addr16
xchg
mov
jbe
sbb
cmpsl
adc
mov
daa
inc
add
popf
mov
inc
pusha
xor
pop
fld
sbb
ficompl
mov
loope
pop
nop
adc
sub
out
cld
mov
and
aam
sbb
push
ja
push
subb
fsubrl
popf
mov
movsb
jb
dec
or
ret
popa
sarl
add
mov
inc
cwtl
scas
dec
insb
nop
adc
and
pop
cli
jmp
cmp
cmp
int
push
cmpsb
aam
inc
pop
adc
add
sub
fmul
pushf
clc
adc
cmp
test
push
in
xchg
pushf
mov
push
dec
mov
add
sbb
ds
jp
lret
mov
sbb
adc
pop
jle
cli
popa
cmp
fs
xchg
jmp
movsb
adc
es
out
cld
shlb
jno
mov
fmul
pop
fwait
mov
jbe
cmp
out
sbb
imull
mov
mov
cmp
and
pop
orb
lods
mov
jmp
inc
xchg
lea
or
xor
cld
mov
sub
add
adc
sub
call
mov
fldl
lock
jae
bound
clc
pop
and
jns
int
and
or
frstor
fistps
inc
dec
movsb
jl
fwait
add
jno
or
in
in
into
mov
ret
mov
call
in
xor
lahf
daa
leave
lcall
inc
lcall
test
mov
lret
push
xchg
xchg
iret
jecxz
and
in
aad
fidivl
insl
in
and
jp
popa
aaa
xor
sbbb
int
mov
data16
nop
push
andb
push
mov
mov
arpl
pusha
stos
and
push
cmpl
in
shll
or
sbb
push
push
dec
das
shll
out
aam
mov
imul
lock
mov
stos
out
leave
repz
loopne
mov
sarl
in
in
rcr
lock
hlt
jle
les
or
fildl
test
loope
ss
inc
or
aas
mov
mov
mov
mov
add
adc
mov
mov
jns
out
aaa
orb
mov
adc
inc
fdivs
pop
je
popa
pop
lds
jmp
lock
or
aas
inc
mov
pushf
shlb
xor
mov
shll
add
push
leave
push
outsl
cmp
jae
loopne
mulb
add
jb
xchg
cmpb
mov
xor
idivb
sti
jge
cmp
sbb
in
int3
mov
mov
sub
aad
and
and
sbb
imul
shr
cltd
cld
test
imul
mov
in
ret
add
mov
loope
xchg
fiaddl
out
xor
in
shll
mov
mov
mov
xor
popa
cli
icebp
test
mov
testl
xor
cmp
mov
jns
stc
addr16
leave
mov
movsb
cmpl
ds
jns
repz
cmp
adc
sbb
xchg
fists
loopne
mov
mov
jle
mov
fiaddl
int
push
cmp
jb
ss
ret
divb
iret
fidivrl
cmpsl
out
in
add
and
jnp
push
mov
mov
mov
cmp
and
push
mov
iret
in
pop
out
lods
add
cmpsb
jno
movsb
or
jo
notb
out
adc
inc
dec
push
dec
cmp
cmp
sahf
mov
sarb
js
push
sbb
sti
jg
int
loopne
lcall
push
sbb
inc
std
lahf
sbb
into
sahf
add
push
arpl
sbb
pop
cmp
pop
into
mov
je
and
cli
data16
into
jb
pop
lcall
cs
mov
xorl
insl
or
out
jle
and
js
in
imul
rcrl
in
dec
popa
sub
add
lahf
jle
dec
or
push
loope
add
sub
jge
test
push
hlt
dec
jle
cmp
jns
mov
in
popa
sub
subb
sbb
pusha
push
xchg
dec
mov
and
push
jbe
dec
sbb
push
cmpsl
icebp
fs
mov
sub
rclb
xor
jge
inc
adc
jno
cmp
mov
in
mov
sbb
pop
push
sbb
mov
add
loopne
jno
jbe
mov
movsb
xor
insb
mov
xor
mov
fildll
aam
push
sbb
sub
jnp
cmpl
dec
mov
adc
lea
push
jo
push
es
dec
pop
neg
addl
xchg
loop
jg
lock
bound
out
in
xor
mov
lret
mov
outsb
or
xchg
out
push
mov
jecxz
ljmp
mov
std
mov
ljmp
nop
or
cli
xor
and
icebp
sbb
into
dec
push
ret
xor
xchg
adc
movsl
cmpsl
loop
ret
iret
and
int3
into
jle
leave
jmp
jle
push
sbb
mov
push
push
cmp
or
jle
pop
leave
xor
push
idivb
jl
fistpll
and
and
push
stos
hlt
adc
test
sbb
jns
jbe
adc
mov
mov
or
stos
hlt
push
pusha
pop
xor
loopne
sahf
jns
insb
loopne
or
dec
stos
add
fwait
sub
jmp
lahf
xlat
je
sub
dec
ss
rolb
inc
pop
incb
add
sub
push
mov
cmp
xchg
add
fnstcw
data16
ljmp
js
mov
int3
jge
xor
sub
leave
fisttpll
lds
pop
lret
jo
or
xchg
test
pop
jnp
lods
ss
rcll
xchg
mov
fs
add
xor
in
ljmp
inc
mov
mov
adc
lds
imul
fdivp
orl
ficompl
ja
add
dec
push
adc
mov
int3
mov
repz
push
lret
stos
shll
mov
mov
push
dec
xor
scas
sub
push
inc
adc
dec
out
arpl
gs
adc
idivl
stc
jl
ret
notl
movsb
lods
cld
popf
shrl
jg
in
pop
push
inc
jns
jae
test
and
dec
movsb
lret
adc
sub
scas
icebp
push
sahf
je
or
pop
or
fs
mov
test
cmp
sti
mov
push
movsl
cmc
pop
adc
mov
insl
pusha
stos
inc
push
pop
stos
cli
popf
imul
fldcw
adc
lods
cmc
movlps
stos
gs
pop
call
sub
scas
or
adc
fdivrs
adc
sbb
mov
mov
jg
mov
adc
jecxz
ret
jne
sbb
mov
mov
mov
push
rcl
push
cld
popa
int3
mov
fs
jg
and
and
mov
dec
xchg
push
inc
insb
adc
ret
ds
in
jle
add
jnp
ja
and
sbbb
insb
data16
sbb
inc
imul
pop
out
in
rcll
js
fstpl
xchg
or
xchg
cwtl
in
addb
xchg
aas
lret
mov
sahf
test
xor
dec
sets
in
lock
xor
mov
pushf
add
arpl
push
fwait
pop
scas
sub
es
sbb
popf
loopne
inc
mov
test
jmp
xor
scas
inc
add
push
imul
addr16
sbb
rcll
or
jo
cmp
xchg
and
adc
push
rolb
xchg
jp
sub
lods
sub
arpl
adc
or
enter
dec
sbb
cmc
int
std
pop
subb
xor
xchg
jp
inc
push
in
mov
xchg
test
pop
jge
nop
cs
outsl
or
inc
ret
cltd
lahf
push
mov
icebp
xor
lods
push
or
outsb
ja
js
cmp
adc
inc
push
jns
ja
adc
shrb
mov
xchg
fldcw
sub
pop
xchg
lds
sbb
or
movsl
call
fxch
jl
cltd
ljmp
inc
jl
test
sbb
mov
mov
shll
push
out
jnp
mov
cmpsb
in
iret
repz
jae
lahf
fdivrs
and
xchg
bound
jb
sahf
jmp
push
xor
mov
in
dec
les
inc
fdivp
test
pop
shl
or
cmpsl
jmp
push
roll
jbe
cs
cmp
aaa
mov
adc
lret
imul
xchg
in
movsl
fsubrl
xchg
mov
xchg
mov
cmp
add
mov
lds
add
int
xlat
jae
xor
cwtl
pop
out
test
adc
leave
xchg
add
test
jge
dec
dec
pop
lcall
jo
test
cmp
frstor
ss
xor
js
inc
add
inc
notl
jnp,pn
fcomip
xchg
inc
pushf
mov
lcall
mov
xchg
aad
test
jns
sbb
cwtl
fs
loopne
xchg
fsubr
test
push
in
out
push
popa
cli
push
dec
cmp
cs
mov
ds
add
mov
imul
roll
mov
out
pop
iret
push
cmp
xor
jnp
jle
push
sbb
std
test
and
add
inc
shl
movsl
enter
enter
les
mov
imul
cmp
add
xchg
jb
mov
aas
shrl
ljmp
enter
lahf
inc
adc
cmp
sbb
es
xchg
jp
pop
sbb
mov
aam
int
lea
mov
outsl
les
cmpsl
hlt
pop
dec
mov
xchg
jp
mov
pop
in
popa
stc
in
in
stos
cwtl
sbbl
mov
sbb
std
pop
xor
nop
cmp
xchg
pop
mov
mov
add
and
jb
cmp
pop
icebp
je
or
push
lds
dec
sbb
push
sbb
jle
mov
jmp
shll
or
mov
mov
call
jge
out
shlb
push
pop
es
mov
icebp
rorb
iret
insb
pushl
int3
gs
je
mov
stos
push
out
push
xlat
xor
sarb
add
bound
aas
dec
push
cwtl
jae
cmp
scas
sub
cld
jp
in
jl
xor
push
mov
test
in
and
mov
cmp
or
inc
xchg
adc
frstor
push
xchg
ja
mov
jg
or
cmpsl
popf
cmp
scas
cmp
cltd
aas
in
push
inc
movsl
filds
mov
or
popa
ljmp
cli
ffreep
les
xor
or
add
pushf
gs
pop
adc
mov
lods
bound
push
aaa
addr16
or
mov
xor
jmp
inc
fnsave
aad
mov
jns
lods
inc
jp
xchg
mov
mov
push
pop
pushf
sub
xchg
pop
repz
inc
imul
decb
mov
xor
sbb
sbb
lock
push
in
inc
test
cmp
int
pop
fidivrs
xchg
insb
sub
add
ja
test
cmc
xchg
sub
call
add
mov
jo
cs
cmp
into
ja
test
mov
sbb
loope
mov
cltd
xchg
sti
jnp
call
cwtl
pop
xor
out
pusha
push
sahf
lds
fnsave
jg
js
lock
jp
sbb
sahf
cmp
cli
sbb
pushf
hlt
in
fsub
sbbb
adc
test
mov
scas
fstpl
adc
repz
in
mov
ds
mov
int3
dec
mov
mov
mov
hlt
dec
pop
pusha
cmp
cltd
pop
xchg
leave
xchg
int3
inc
pop
mov
subl
fwait
iret
mov
or
mov
pop
test
jne
std
or
dec
adc
adc
mov
mov
or
add
mov
mov
loop
stos
fsubrl
and
xchg
mov
imulb
or
and
ss
mov
andl
loopne
and
mov
arpl
xchg
xchg
sub
aaa
mov
mov
mov
jge
jae
jl
adc
push
out
mov
jbe
clc
cmp
cs
nop
inc
aaa
xchg
shrl
cmc
das
ja
or
push
in
xor
push
ja
divb
dec
scas
leave
xchg
xor
jp
leave
ja
mov
loop
add
ret
shll
cmpsl
jnp
cmpsl
sub
pop
in
shrl
out
dec
mov
daa
int3
or
repnz
mov
test
mov
cs
jmp
inc
xchg
or
ds
xor
adc
scas
icebp
mov
incl
push
cmp
jl
xchg
or
mov
dec
add
cwtl
push
mov
xchg
xor
js
add
imul
orl
xchg
in
mov
sbb
pop
lret
mov
adc
and
mov
push
jmp
popf
adc
cmp
dec
xor
dec
add
adc
inc
lock
int3
into
xor
jns
in
fldt
or
xor
xchg
pop
dec
inc
into
push
outsl
or
add
mov
mov
dec
pop
adcl
hlt
iret
pop
ficoml
fwait
int3
mov
lea
daa
mov
mov
ljmp
fmull
jg
pminub
mov
inc
adc
or
jae
sub
mov
mov
fs
es
cli
cmp
gs
in
fistpll
sub
loop
and
pop
jecxz
or
fcomps
nop
sbb
or
and
cmp
dec
imul
pop
imul
fs
add
aaa
xor
and
mov
fcoms
pop
lods
cld
gs
push
rorl
cmp
cwtl
push
or
jmp
mov
pop
ss
push
mov
adc
or
adc
sbb
xchg
mov
lods
nop
shlb
jl
es
addl
mov
mov
not
lock
roll
cltd
mov
fcomi
cmp
gs
rcrb
sub
adc
xchg
outsb
lahf
sbb
push
out
jg
rorl
xor
or
dec
loope
inc
mov
or
mov
iret
js
sarl
pop
jbe
dec
xchg
cwtl
sbb
pop
scas
lret
push
dec
push
int3
cmp
or
adc
imul
adc
cmc
jae
mov
in
mov
mov
mov
aam
pop
inc
jg
cwtl
pushf
pushf
or
push
add
sub
push
mov
adc
pushaw
push
into
xchg
and
aas
loop
xchg
cmpsb
and
stc
cmp
sahf
sub
test
lea
xor
inc
sub
rol
inc
push
es
jl
cmp
fucomi
outsb
mov
int3
xchg
mov
icebp
lahf
leave
pop
mov
in
inc
and
push
adc
mov
jnp
cld
xchg
popa
xchg
mov
mov
nop
cld
repz
mov
out
or
xchg
adc
ss
xchg
sub
inc
push
and
mov
in
in
dec
xchg
stos
pop
xchg
jle
jae
jle
hlt
scas
sti
aaa
rcl
mov
das
insl
xchg
add
xor
outsw
in
ret
ds
leave
jp
dec
js
rcll
sbb
pop
outsl
pop
fldcw
pushl
stos
and
lods
push
ficoml
repz
mov
sti
adc
adc
push
sbb
in
dec
rolb
xchg
cmpsb
xor
mov
fwait
inc
dec
imul
push
das
sub
pop
loope
sbb
add
and
cmp
jp
int
movb
pop
bound
outsb
lea
lret
jae
cmp
dec
cmp
clc
push
inc
ficomps
cmpsl
mov
jb
sbb
jl
mov
imul
shlb
sbb
fs
dec
sbb
sbb
push
xor
push
sub
pop
repnz
push
mov
jnp
imul
jmp
lods
mov
loope
cmp
sbb
out
jg
jle
mov
push
sub
cltd
test
mov
cmp
js
jl
push
dec
stos
or
jno
insl
fisubl
push
cwtl
jecxz
arpl
mov
and
shrl
out
sbbl
popa
dec
arpl
mov
pop
lods
rcrl
es
push
lods
insb
ret
fwait
cmp
cmp
in
cltd
cmp
lcall
sbb
push
jmp
push
cmp
mul
dec
pop
or
cmp
addr16
rcr
add
iret
adc
sub
mov
cli
fmull
repz
icebp
push
or
and
leave
in
les
fwait
ror
or
cltd
xlat
pusha
rcrb
jnp
dec
cltd
sub
fmul
imul
cmp
cmpsb
mov
je
arpl
dec
mov
int3
es
lret
xor
inc
das
mov
ljmp
cmpsl
das
adc
call
dec
aam
pop
ror
arpl
cli
jb
add
ret
addr16
mov
fmull
ss
pop
cmp
out
lock
mov
dec
das
mov
aaa
sti
and
cld
adc
push
jae
fimull
repz
pop
mov
int3
call
mov
scas
cld
pinsrw
insb
ljmp
mov
outsb
repnz
or
push
xchg
cmp
aas
jns
xchg
daa
sbb
int3
insl
xorl
cmp
mov
xchg
arpl
aad
xor
aas
or
sub
xor
fisttpl
and
mov
iret
adcb
mov
xlat
pop
stos
vmwrite
aaa
xlat
daa
pop
testl
pop
xlat
aaa
daa
mov
cmpsl
inc
xchg
ja
addr16
xchg
inc
cmpsl
aaa
xlat
daa
pop
testl
pop
xlat
aaa
daa
mov
cmpsl
inc
xchg
ja
addr16
addr16
push
iret
inc
cmpsl
aaa
xlat
outsl
pop
testl
pop
xlat
aaa
daa
mov
cmpsl
inc
xchg
push
xchg
xchg
xchg
inc
cmpsb
aaa
xlat
daa
xchg
ja
out
call
push
rcr
mov
jo
xchg
sbb
sub
cmp
sbb
sub
and
lods
pushf
popf
lods
lea
in
int
xor
sub
cmp
dec
insl
pop
pop
insb
dec
jl
mov
mov
fucomp
int
out
lods
sbb
sub
cmp
dec
and
jl
mov
sar
in
mov
stos
mov
push
testb
lahf
mov
push
jmp
lret
test
cwtl
addr16
xor
and
mov
mov
cmp
push
cld
bound
push
pop
in
inc
add
cmp
push
cmc
sbb
sub
std
std
dec
push
bound
jae
add
pusha
out
adc
sbb
jl
xchg
dec
pop
test
test
decb
jo
out
mov
adc
fnstsw
cli
int
orb
xchg
add
popf
bound
push
add
cltd
in
mov
in
sub
xchg
pop
fsubs
push
lea
in
sub
or
sbb
sub
cmp
dec
sub
cmc
jl
mov
pushf
inc
lods
xchg
mov
fucomp
test
iret
pop
push
jp
and
sbb
fsub
in
cmc
int
in
rclb
mov
pop
sub
imul
jb
add
jl
leave
in
lock
cli
loope
mov
mov
insl
pop
dec
dec
cmp
insl
pop
pop
insb
dec
jl
mov
mov
fucomp
int
cmp
sub
cmp
dec
insl
pop
pop
insb
dec
jl
mov
mov
fucomp
int
cmp
ficoms
xor
push
mov
fistpl
xor
call
push
int3
xchg
out
add
jecxz
xorl
leave
mov
rcr
push
cmpsb
sbb
imul
sub
je
cmp
loope
repnz
push
and
insl
mov
adc
pushf
pslld
cmp
subl
ficompl
xlat
js
in
das
in
hlt
sbb
pop
sub
cmp
icebp
leave
aas
jbe,pt
in
cltd
notb
cmc
or
push
movsb
mov
inc
leave
fwait
aam
pushf
iret
and
sbb
add
push
xchg
arpl
cmpl
and
out
sbb
sarl
mov
xor
fdivrs
mov
ret
xlat
call
or
stc
dec
stos
jg
xor
outsb
mov
mov
xchg
hlt
pop
and
jno
push
jo
inc
sbb
cmp
push
push
push
stc
ljmp
mov
cltd
cmp
pop
cmp
add
mov
jo
sbb
push
xchg
je
dec
icebp
inc
cmp
xchg
dec
jno
inc
push
insl
xchg
mov
fmuls
idivl
cmpb
test
es
loopne
xchg
or
leave
sbb
xor
sub
int
jge
gs
iret
or
sahf
sti
fidivrl
xor
xorb
in
add
lods
fdivl
ret
fsubrl
stos
jmp
push
imul
pop
push
shl
xor
mov
push
push
mov
dec
mov
xorl
add
and
pop
inc
imul
mov
ljmp
mov
adc
ficomps
rcll
cmc
mov
ljmp
pop
lahf
sbbb
xchg
sbb
or
mov
js
ficompl
insb
jno
sbb
ss
imul
jecxz
stos
cmp
push
mov
adc
or
fwait
mov
jl
dec
shlb
add
js
jnp
adc
test
mov
popf
push
inc
sbb
scas
daa
std
mov
ret
fdiv
xchg
rolb
aam
fildll
push
mov
xchg
test
or
xchg
or
mov
xchg
aad
sbb
pop
sub
sub
sbb
push
imul
xor
jp
xchg
call
mov
mov
pop
jae
inc
dec
gs
sar
add
sar
int3
push
scas
sbb
dec
dec
push
jmp
and
push
xor
rorb
das
xor
ret
push
inc
cltd
pusha
dec
add
mov
jl,pt
ret
mov
pushf
inc
pop
mov
sub
jbe
or
or
shrl
aaa
fldl
insb
aaa
push
shlb
xchg
cld
jb
and
cmp
push
subb
dec
sbb
sub
sbb
push
int
aam
insl
jle
outsb
imul
xor
or
add
jns
sbb
jae
jno
jge
xor
bound
flds
pop
addb
lock
and
nop
lahf
xor
xor
enter
push
add
jb
sbb
mov
jge
ds
aas
aaa
lea
insl
mov
repnz
in
adc
test
xchg
mov
sbb
inc
push
or
cld
mulb
jno
xor
ret
xchg
daa
adc
pmaxsw
or
lods
lret
jb
inc
inc
fwait
push
mov
mov
jg
pop
fdivrp
gs
push
pushf
sub
add
sub
fwait
sbb
stc
es
sti
sbb
cltd
js
loop
sbb
push
and
ror
pop
mov
repz
and
ja
loope
shrl
lahf
in
dec
lret
stos
in
ss
sbb
pop
add
jae
cltd
fcoml
aas
lcall
pop
call
xor
dec
shll
sbb
inc
pop
push
pop
rcrb
pause
dec
ja
jns
pop
pop
fistl
in
mov
sub
orps
xchg
icebp
sahf
aad
loop
mov
test
lock
mov
jg
and
arpl
sbb
mov
jp
dec
cmpsl
repz
push
test
ljmp
lret
mov
das
mov
lret
add
xor
adc
iret
xchg
inc
mov
adcl
dec
pop
and
sub
aas
rol
fisubl
lods
lds
pop
add
dec
in
es
fsubrp
jnp
xchg
adc
jno
sahf
pop
rcr
es
jge
and
lods
imul
shl
add
data16
or
frstor
mov
sahf
test
and
xor
push
int3
in
ljmp
out
push
bound
sti
sbb
subl
push
pop
pop
push
pavgb
jo
add
cwtl
out
adc
sbb
push
cli
scas
push
pop
daa
in
sub
lret
adcl
jle
enter
sub
inc
sbb
sbb
or
jp
xor
gs
sahf
movsb
inc
jl
lock
push
movsb
push
pusha
in
repz
rorb
xchg
scas
das
dec
aas
mov
cmp
divl
mov
cltd
bound
shr
sbb
adc
xchg
add
pop
inc
mov
cmpsb
in
add
jp
rorb
loopne
pop
inc
push
mov
inc
add
addl
std
in
jmp
and
test
and
ds
setle
imul
in
call
xchg
dec
mov
sti
fdiv
cltd
jmp
mov
xchg
sub
inc
sub
sub
pushf
imul
in
rclb
and
lea
mov
call
mov
iret
xchg
pop
mov
movlps
adc
sbb
imul
jne
sub
ja
add
jmp
pop
in
xor
fiaddl
enter
aas
lds
xor
jle
movsb
add
loope
cmp
mov
stos
inc
aas
out
lods
mov
lods
jp
xchg
rcr
cli
movl
lcall
fildll
sbb
das
mov
stos
faddl
jnp
mov
jle
mov
mov
inc
loope
leave
mov
insb
cmc
dec
mov
jbe
popa
add
inc
add
lret
xchg
mov
rolb
sub
mov
leave
xchg
push
dec
cld
sub
push
mov
sahf
lock
inc
dec
inc
clc
dec
mov
out
cmp
jae
fs
pop
loop
test
std
dec
int
push
xchg
fmull
rcl
clc
scas
jnp
push
ret
notb
sub
dec
xor
addb
lds
sbb
mov
fistpll
in
cli
xor
mov
repnz
cmpsl
mov
inc
mov
jae
mul
es
or
jecxz
stos
mul
add
pop
inc
fnstsw
mov
sub
outsb
xor
dec
sub
or
mov
jg
decb
lret
adc
dec
loopne
cmpsb
push
inc
push
inc
dec
xchg
cmpsl
jb
ss
mov
pop
mov
aas
mov
sub
je
or
hlt
mov
mov
fstpl
or
adcb
xchg
gs
jae
inc
scas
dec
inc
pusha
sub
sbb
pushf
fs
sub
xchg
pop
repz
add
and
repz
mov
fidivs
insb
loop
push
dec
lods
cmp
pop
repz
fldt
fisttpll
negb
xor
std
cmp
sub
inc
xor
jns
xor
lods
subb
and
push
pop
lods
test
dec
mov
push
rclb
ficoml
sbb
movb
jo
rcll
adcb
stos
inc
sub
jo
ficompl
pop
sbb
mov
rorb
out
scas
ds
sub
das
aas
cmp
dec
mov
adcb
fidivs
pop
adc
xor
scas
popf
fwait
cmp
imul
lds
iret
mov
loopne
and
mov
add
mov
lock
pusha
repz
mov
out
inc
pop
cld
cmp
pop
insb
repz
mov
sti
inc
jl
sub
inc
imul
pop
xchg
or
aam
arpl
mov
sbb
mov
push
rcrb
jmp
xchg
mov
call
data16
add
ss
pop
pop
out
sarl
jbe
test
mov
push
cmp
or
mov
pop
pop
daa
stos
jge
xor
dec
adc
mov
popa
push
fsubrp
add
mov
inc
sahf
xor
sbb
rolb
sbbl
rolb
es
adc
fsts
mov
imul
ja
sarl
pop
je
or
xchg
inc
and
and
sarb
aad
lahf
jbe
aaa
inc
cmp
and
sahf
sbb
leave
pop
and
ja
xor
sbb
ds
mov
and
add
xor
push
xor
fadd
jg
insb
xcrypt-ofb
cmpsl
push
test
es
mov
inc
push
fwait
or
pop
sub
push
mov
in
shlb
pop
adc
adc
inc
sbb
pop
mov
push
sub
xor
es
add
add
popa
inc
pop
inc
imul
cs
push
xchg
int3
mov
imul
or
xchg
aas
pusha
ficoml
outsb
pop
rcl
gs
je
jne
outsl
out
xor
xchg
cmpsl
repz
sub
mov
test
jmp
dec
jl
lret
push
cmp
popa
divb
jg
outsb
fmul
mov
imul
orl
pusha
es
cs
sbb
das
ds
inc
ret
test
add
mov
adcb
and
fstps
add
stc
mov
mov
push
sbbl
mov
lods
movsb
add
rcr
jle
add
xor
lahf
and
adc
add
aaa
test
lcall
les
jae
push
dec
jl
and
fcmovne
in
fbld
sub
ss
sbb
pusha
ja
cmpsb
adc
or
jb
out
pop
jo
mov
mov
out
rcl
decb
test
shll
jbe
dec
sarb
dec
insl
jo
in
or
pop
out
test
dec
test
aam
mov
sbb
xorb
dec
adc
addr16
lods
xlat
cltd
mov
push
stos
add
xor
nop
or
mov
push
xor
frstor
stos
jmp
gs
jo
pop
nop
aaa
fwait
jecxz
pop
dec
lret
sti
inc
and
pop
sub
mov
push
out
push
mov
mov
dec
ljmp
push
fimuls
sub
and
and
das
test
stos
jno
adc
ja
push
stos
xor
push
mov
nop
mov
mov
in
sbbl
cmpsb
mov
xchg
lret
cmp
pop
movsb
nop
outsl
xor
movsb
fnstsw
rolb
inc
jge
cltd
adc
sub
xor
push
xor
adc
push
pop
lods
or
popa
mov
pop
push
scas
jmp
je
mov
mov
jb
nop
hlt
jp
pop
cltd
loop
mov
ss
mov
xchg
mov
sti
jae
push
gs
lods
shrb
mov
mov
inc
vmovlpd
fldcw
mov
test
add
out
aas
scas
mov
mov
push
mov
sub
jge
push
inc
outsb
mov
bound
jb
lcall
xchg
mov
inc
sahf
nop
xor
fwait
outsb
mov
aam
jno
daa
mov
leave
or
sub
jno
xor
xchg
sti
jbe
push
mov
push
das
adc
sub
jmp
lock
imul
mov
sbb
or
pop
bound
pop
cmpsb
shrb
test
mov
dec
push
lods
fst
incb
cmp
cltd
mov
sbb
dec
push
notb
pop
jmp
push
mov
xchg
sub
xchg
jge
xor
fs
rcrb
pop
or
or
lahf
aam
push
cmpsb
into
nop
xchg
sahf
dec
and
and
mov
je
movsb
fst
scas
xor
and
cmc
test
jno
dec
cmp
xor
add
mov
popf
xchg
fisttps
pop
popf
cwtl
mov
mov
add
dec
mov
sub
add
in
push
cmp
shlw
or
ret
cmp
stos
push
sbb
pop
int3
sub
pop
clc
dec
insb
push
inc
cld
push
inc
and
lods
inc
inc
popa
mov
adc
out
stc
daa
fnstenv
cwtl
test
adc
jecxz
dec
pushf
jmp
cltd
xor
mov
fidivrl
push
iret
outsb
cmp
daa
fistpl
cld
cltd
add
mov
mov
jmp
and
ds
shrb
pushf
nop
loop
ret
or
insb
jae
xor
mov
mov
sbb
jb
andl
repz
adc
cmpsb
xchg
jnp
pop
mov
and
mov
aaa
iret
fimull
jns
loope
pop
icebp
xor
jge
in
ss
lret
inc
mov
adc
mov
add
sbb
movsb
adc
cs
jne
and
ljmp
cmpsb
imul
and
xlat
and
adc
inc
push
outsb
repz
ror
jl
adc
sub
lret
and
dec
mov
push
push
push
lds
data16
lds
dec
loop
fildll
push
dec
outsl
loop
dec
dec
xchg
jp
lods
fnstcw
lea
cmp
xchg
jo
pop
je
ficomps
dec
fdivrl
in
and
mov
jg
adc
fdivrl
sub
sbb
pop
dec
cwtl
cmc
flds
xchg
push
cmp
cmc
decb
sbbb
imul
pop
xchg
aas
lock
jg
sarb
add
xor
std
dec
and
das
jp
fisubrs
jg
inc
mov
mov
sbb
clc
pop
mov
cli
mov
in
lcall
jp
sub
imul
icebp
pushf
xchg
popa
aad
lods
sub
lea
ss
icebp
das
in
jp
adc
pop
imul
or
call
add
mov
es
sub
jns
or
stos
icebp
mov
push
jecxz
imul
sub
notl
imul
sub
adc
sub
adc
cltd
pop
mov
sub
imul
hlt
cmp
mov
leave
adc
cli
arpl
stc
or
subps
jnp
lret
test
in
aam
scas
fbstp
pusha
push
shll
and
aad
pop
dec
shlb
lea
mul
std
xor
pop
push
daa
add
repz
lret
test
mov
xor
xlat
jle
into
push
scas
sti
insb
sahf
mov
jg
mov
xlat
es
adc
jb
add
mov
sub
mov
inc
mov
lods
lcall
xchg
lock
jns
rcrl
pushf
dec
out
push
sbb
sub
inc
aam
inc
jecxz
mov
mov
outsl
xor
cwtl
fsubrl
pop
imul
imull
sub
push
inc
enter
cmp
mov
repz
loop
and
xor
lea
or
mov
out
mov
and
scas
mov
jge
mov
add
push
aad
cltd
adc
inc
xor
mov
and
popa
and
push
subl
in
outsb
jecxz
or
or
lret
dec
pop
add
push
pop
mov
sahf
stc
in
lods
sub
add
lcall
sub
jmp
xor
pop
mov
dec
mov
mov
loope
pop
or
inc
xchg
push
iret
xor
mov
or
mov
mov
cmp
cmp
adc
jns
jno
add
imul
add
das
je
push
js
jne
clc
pop
dec
adc
icebp
xchg
es
mov
in
or
cmpsb
lahf
pop
push
push
iret
add
in
stos
pop
mov
and
imul
icebp
push
test
mov
lret
cs
jbe
xchg
cmpsb
cmpsb
andb
dec
fcmovu
jle
int3
mov
inc
adc
sbb
xchg
or
ja
out
sbb
dec
sarl
daa
test
jle
pushf
lods
stc
jmp
jge
inc
lds
push
fisttpl
pop
xchg
or
imul
clc
outsl
pop
or
or
imull
imul
rcrl
std
or
into
sub
lcall
cli
and
mov
fwait
jne
movsb
sbb
lods
or
jp
xchg
push
lahf
rorb
mov
jl
pop
or
mov
stos
cmp
flds
jg
cwtl
add
fbstp
inc
arpl
push
stc
pop
sti
inc
fistl
and
flds
daa
mov
or
rep
sbb
out
ss
icebp
mov
jne
xchg
fdivs
faddl
and
das
clc
push
lea
or
inc
call
lret
sbb
sti
sub
lret
xchg
inc
fisubrl
pop
clc
out
out
inc
inc
jne
mov
sbb
out
in
cmp
inc
sarl
mov
pop
loop
pop
push
gs
mov
je
sbb
xor
xor
stos
lahf
xchg
pusha
mov
xor
lods
out
scas
mov
fimull
or
adc
fidivs
fstpl
imulb
pushf
xchg
lods
enter
lds
icebp
inc
enter
jg
push
lock
hlt
fisttpl
dec
arpl
testl
in
sbb
sbb
orl
mov
dec
roll
mov
sub
mov
add
xor
jl
ljmp
enter
inc
inc
icebp
loop
bound
mov
jnp
push
scas
aas
ret
jns
cmpsl
sub
mov
pushf
mov
xchg
or
gs
mov
mov
movsl
imul
cmp
inc
cmp
cmc
jbe
movsl
test
cmp
sbb
adc
lds
or
fsubrl
mov
daa
inc
es
pop
or
push
push
icebp
in
jmp
mov
imul
repnz
xchg
push
popa
sub
cld
jmp
inc
cmp
aam
push
pop
dec
gs
push
ds
jb
movsb
sbb
movsb
je
sub
test
fisubrs
adc
or
jb
sub
outsb
jnp
ret
in
push
cld
in
sbb
mov
arpl
xlat
jg
and
inc
out
xor
xchg
cmpl
adc
mov
int
call
push
lahf
popf
jno
outsb
jp
pop
sbb
jge
push
or
loopne
dec
idivl
sub
inc
popf
cli
subl
lods
mov
add
div
adc
scas
sub
or
cmp
push
pushf
sub
xchg
pop
mov
call
fwait
mov
sub
test
inc
and
and
movsl
std
stc
push
dec
dec
cmp
pop
dec
jl
sub
scas
mov
jge
jge
mov
cmp
pop
popl
jg
pop
lahf
inc
testl
jb,pn
lret
sub
or
xchg
adc
jmp
icebp
scas
mov
mov
scas
jne
inc
mov
test
hlt
push
add
test
xchg
ja
or
fcmovnb
push
mov
call
inc
subl
pop
dec
mov
stos
stc
sarb
repz
int
add
outsl
pop
xchg
fs
shl
add
adc
xor
stos
lods
or
outsb
fisubrl
cmp
lock
sbb
dec
test
push
pop
lret
rcr
cmpsl
shlb
mov
cmpsl
xchg
fistpll
push
mov
and
dec
or
inc
sti
mov
test
fcmovbe
daa
mov
jnp
sbb
push
stos
xchg
jne
sub
xchg
insb
je
or
or
sub
dec
pop
push
subb
outsl
insl
sub
adc
daa
shll
and
pop
mov
mov
push
mov
ret
mov
movl
into
outsb
sub
repz
push
mov
arpl
inc
stos
inc
add
dec
gs
jae
jp
fbstp
ds
mov
mov
fidivrs
stc
jno
and
and
dec
mov
mov
pop
les
das
push
push
pop
das
jnp
pop
cwtl
fadd
mov
and
aam
xchg
adc
mov
call
pop
mov
mov
and
mov
fldpi
dec
or
mov
inc
fistps
popf
xorb
and
rcrb
pop
push
add
cmp
sub
lcall
xchg
shll
andb
movsl
nop
pop
int
sbb
ror
cmp
outsb
xchg
in
call
pop
and
xor
add
ljmp
push
arpl
jne
sbb
sub
insl
pop
pop
insb
dec
jl
mov
mov
fucomp
int
cmp
sub
cmp
dec
insl
pop
pop
insb
dec
jl
mov
mov
fucomp
int
cmp
sub
cmp
pop
insl
dec
jl
mov
mov
fldlg2
std
cld
and
sub
cmp
jge
pop
in
int
mov
lods
lret
mov
and
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fisttpll
pop
out
xlat
jge
mov
cmp
xchg
ja
imul
std
inc
mov
pushf
daa
mov
negl
insb
xlat
jge
or
xchg
cmp
mov
inc
lea
lods
pop
mov
out
iret
jge
or
cmp
pop
mov
cwtl
inc
out
jbe
dec
lea
pop
cmp
mov
cmp
inc
dec
cld
fsubrp
loop
lods
adc
jmp
pop
sbb
cmp
or
adc
sbb
and
jo
bound
pop
inc
dec
enter
bound
xchg
cmpsl
cmpsb
jecxz
imul
lea
xor
pop
daa
cs
pop
out
xlat
xchg
testl
daa
sbb
insl
fs
fdivrs
iret
mov
daa
in
adc
xchg
adc
inc
ficomps
stos
sub
inc
clc
mov
pop
pop
out
clc
or
aad
aad
sti
or
jbe
jae
inc
jo
stc
fs
push
lods
call
pop
lock
jge
or
mov
jg
dec
std
pop
lea
popf
xor
xchg
sbb
add
xor
dec
loope
leave
push
pop
ljmp
cltd
sub
pop
shll
leave
push
push
out
cmpsl
xor
xchg
sub
push
mov
xchg
and
dec
std
jnp
bound
mov
orb
pop
mov
fistpl
xchg
ja
addr16
push
std
inc
lea
popf
daa
lods
pop
mov
out
xlat
jge
or
xchg
cmp
addr16
push
std
inc
lea
popf
daa
lods
pop
mov
pusha
loopne
das
aam
mov
das
leave
sahf
sar
ja
pop
gs
fisubs
imulb
mov
imul
iret
aaa
ret
fistps
mov
lcall
sbb
adc
loopne
cmp
fistpll
test
pusha
and
xchg
xchg
out
js
mov
ja
mov
xchg
push
imul
push
mov
sti
dec
dec
adc
clc
jg
ret
adc
and
inc
stos
adc
jecxz
cld
icebp
push
repz
movsl
mov
sub
jo
xor
inc
andb
lret
out
mov
inc
pop
jmp
ljmp
shrl
and
scas
mov
je
cld
pop
mov
pushf
test
xchg
mov
pop
pop
in
mov
test
mov
cmp
stos
sub
adc
cmp
push
pushf
dec
jb
aam
movsl
call
pop
jle
and
mov
and
jb
das
gs
inc
mov
push
adc
es
daa
add
inc
mov
xchg
push
mov
mov
cld
rol
push
xorl
outsb
push
sbb
mov
jae
and
nop
mov
inc
pop
sbb
mov
mov
ret
inc
dec
jle
xchg
adc
arpl
push
enter
push
push
mov
cmpsl
adc
imul
adc
cmpsl
jb
stc
lea
xlat
xor
incl
stc
adc
xor
fistpl
mov
mov
push
lods
xor
push
inc
sub
sub
dec
jl
mov
mov
mov
push
mov
jns
cld
cs
mov
xchg
out
imul
cld
push
jecxz
rolb
xlat
pop
pop
or
xchg
int
ret
sahf
shrl
adc
imul
out
ds
ss
cmp
lret
xchg
leave
push
cwtl
cmc
jle
mov
into
inc
dec
ljmp
mov
es
sbb
repnz
cmpl
idivl
jg
into
inc
adc
and
fnsave
or
andl
pushf
and
scas
aam
cmp
dec
pop
inc
mov
jle
adc
sahf
xor
lret
in
and
pop
xorl
int
in
fidivrs
addr16
jecxz
cmpsb
add
enter
test
bound
ds
in
outsb
sbb
push
insb
rcrl
sub
jmp
std
shl
aas
das
mov
add
jmp
jp
sub
mov
cmp
dec
sub
dec
jnp
or
cs
cmp
je
out
mov
pop
aad
mov
pop
in
fucomp
and
iret
add
pop
add
js
cmp
adc
insl
imul
jecxz
outsb
rcrb
and
test
jnp
xlat
push
adc
inc
sti
lret
add
fcmove
pop
dec
sub
test
or
in
mov
mov
and
pop
mov
sbb
loope
ja
cmp
js
or
xchg
daa
or
cli
push
iret
icebp
mov
stc
sbb
mov
mov
adc
outsl
daa
in
aad
rorb
lcall
mov
sbb
or
sub
insb
cli
xor
es
nop
addr16
popf
xor
cs
test
push
mov
out
cmc
sub
or
xchg
inc
sahf
push
movsb
lahf
mov
gs
hlt
pop
pushf
gs
dec
pusha
pop
out
lea
sahf
bound
subl
imul
loope
mov
mov
std
dec
adc
sbb
adc
or
mov
inc
sbb
lret
lret
add
pop
stos
insl
mov
mov
out
pop
pop
int
xchg
lods
arpl
and
dec
adc
lods
mov
dec
cmp
ret
mov
lods
xor
leave
stos
push
push
lods
shll
movsb
mov
aas
jmp
sbb
mov
mov
jecxz
sub
gs
ds
jnp
addr16
mov
add
lahf
lea
push
pop
jae
dec
les
sub
push
inc
sub
or
pop
cld
in
add
aad
cmpsl
dec
mul
sub
out
pop
fdivrl
aad
aaa
sbb
lret
cmpsb
sbb
jns
roll
xchg
enter
lret
out
sub
mov
cmpb
pop
imul
icebp
jge
mov
movsb
fimull
ja
xchg
sti
xor
jae
in
jle
jno
jmp
int3
push
push
mov
ficoms
std
insb
rolb
loope
fidivrs
rcl
in
enter
adc
push
pop
jl
and
call
xchg
add
mov
push
pushw
mov
imul
xchg
mov
mov
ljmp
pop
pusha
jp
enter
movsl
aad
jb
out
push
and
xchg
inc
rcll
dec
outsl
mov
dec
cwtl
jo
aad
mov
int
push
into
outsb
idivb
ja
mov
loop
sarl
mov
int3
push
pop
wbinvd
pop
cs
jl
mov
push
or
sahf
lds
loope
ljmp
fsubrl
inc
pop
repnz
fmuls
pop
fidivrs
test
xor
push
adc
pop
add
cltd
cmpsl
gs
adc
cmp
arpl
xchg
lret
mov
and
mov
fs
mov
add
bound
dec
test
int
xchg
adc
jp
inc
xchg
enter
ret
shlb
std
jl
pop
lahf
push
mov
xlat
dec
gs
jnp
movsb
insl
xchg
jo
sub
pop
out
test
mov
push
scas
pop
repnz
imul
lsl
cs
mov
jmp
std
lods
cmp
mov
and
mov
cmpsb
nop
sub
les
and
insl
stc
shll
jo
sub
push
test
popf
sbb
ds
std
fucomi
popf
jns
bt
jnp
fisubrl
lcall
lret
mov
imul
cmp
mov
lds
push
xchg
push
push
push
insb
pushf
cmp
sub
or
aas
pushf
xor
imul
and
imul
dec
xorb
push
sbb
jno
out
repnz
mov
sub
xchg
fisttps
js
xlat
lods
das
adc
loop,pn
jg
mov
mov
scas
dec
pop
pop
xchg
lods
jge
inc
cld
push
sti
pop
mov
mov
insb
cmpsb
sti
or
xchg
cld
mov
xchg
out
sub
xor
clc
xchg
inc
adc
cmpl
push
mov
test
mov
xchg
ficomps
mov
sub
jge
inc
sub
pop
dec
lock
cmc
fisubrl
mov
int
sbb
mov
push
dec
out
jle
pop
pop
push
inc
and
mov
mov
mov
stos
cmpsb
loope
lcall
add
sub
fs
cli
push
sbb
mov
test
pop
les
or
aad
out
and
pop
movsb
ss
aam
lds
gs
je
test
mov
mov
scas
lret
mov
inc
push
movsl
jl
and
lret
sbb
adc
mov
xor
fstpl
sbb
scas
je
and
sub
lret
lcall
emms
shr
loope
lret
jge
insb
stos
add
aaa
insb
addl
hlt
adc
andb
push
cli
lahf
enter
mov
das
sbb
jbe
add
cwtl
insb
fildl
sbb
arpl
cmpsl
in
mov
je
imul
fadds
pop
aam
xchg
push
lods
fsin
dec
hlt
mov
std
sti
jbe
sahf
xlat
lock
ljmp
gs
xlat
adc
testb
sub
jnp
iret
js
leave
jecxz
pop
divl
repnz
lods
stos
pop
arpl
adcb
in
fsub
push
sub
das
pop
hlt
iret
push
mov
jmp
xchg
mov
enter
jbe
push
dec
push
pop
push
es
xchg
les
sub
icebp
leave
rclb
jl
sbb
fbstp
mov
movb
pop
inc
hlt
inc
sub
loop
push
shr
xor
xchg
mov
push
mov
jg
adc
lahf
andl
lret
lea
nop
test
xor
add
lods
xchg
inc
add
add
fs
loop
pop
test
or
je
dec
in
lock
or
adc
sbb
outsb
les
cltd
push
movsb
push
jae
sub
mov
sub
aas
mov
mov
nop
push
push
sbb
sub
gs
out
inc
lock
out
cmp
mov
pop
inc
clc
fs
in
sub
pusha
lea
sbb
cmp
aaa
out
jecxz
adc
lods
popa
outsl
addr16
and
and
sub
jo
sub
xchg
jb
xchg
ljmp
dec
and
lods
add
lods
repnz
and
push
add
push
pop
ljmp
out
shrl
jns
xor
jb
fs
dec
sub
fs
loop
xor
adc
scas
fnstsw
popa
add
xor
imul
mov
mov
mov
and
sub
cmc
pushw
pop
jns
pop
pop
stc
xor
dec
cmp
pop
ficompl
push
mov
inc
mov
mulb
and
sub
clc
lcall
mov
jbe
xchg
scas
mov
pop
fwait
stos
push
push
ret
xor
cld
push
loop
aas
fs
cmp
add
int
push
push
adcb
or
inc
add
and
or
add
sbb
xchg
mov
loopne
add
call
arpl
inc
lret
cmp
push
stos
inc
mov
outsb
inc
push
jae
fistpl
sti
inc
pop
fists
pop
std
or
inc
pusha
ja
mov
and
clc
sbb
popa
pop
stos
adcl
nop
repnz
loope
jae
add
out
jecxz
out
sahf
and
int
ljmp
repz
shll
inc
and
push
popa
lods
sbb
xor
mov
mov
xchg
inc
mov
or
xchg
and
jbe
popa
in
in
scas
mul
add
jp
clc
test
add
lods
mov
jns
jecxz
mov
lods
daa
adc
adc
clc
ljmp
in
jno
sub
add
jge
aas
push
xchg
xor
adc
sbb
popa
xchg
es
jl
jmp
xor
sti
inc
aad
xchg
add
fs
iret
and
fcompp
mov
imul
push
bound
call
push
orl
clc
in
and
hlt
fs
inc
std
sub
dec
dec
cmp
jmp
mov
jle
shrl
cs
insl
cmpsb
adc
fiadds
in
mov
fwait
lds
les
mov
test
xor
mov
sbb
xchg
test
je
jg
int
out
ret
stos
dec
mov
aas
xor
dec
mov
cs
jp
mov
inc
mov
lret
data16
enter
inc
repz
hlt
mov
adc
jno
js
scas
sub
std
lret
mov
and
mov
dec
mov
fsubs
push
das
fildl
push
push
adc
int
jp
stc
sbb
call
mov
stos
loopne
negb
lds
iret
sahf
push
pop
int3
bswap
cmc
lret
movsl
jecxz
jns
popa
popa
xchg
repnz
mov
mov
mov
add
test
outsb
xor
idivl
sahf
outsb
testb
shlb
bswap
je
and
pop
inc
cltd
rcll
aas
arpl
cmp
cmp
xlat
test
movl
hlt
pop
mov
pop
pop
mov
pop
std
movsl
daa
push
das
loopne
push
sbb
xlat
stos
xchg
mov
outsb
out
mov
test
aad
pop
push
bound
jle
popf
in
and
ret
sbb
sti
ljmp
inc
addr16
mov
repz
stos
mov
add
sub
and
idiv
sahf
std
repnz
idivb
jl
mov
repnz
xchg
mov
addr16
fstp
dec
cmp
movsb
xor
fwait
loopne
fisubl
mov
sbb
sub
dec
cmp
inc
push
inc
aam
scas
adc
or
in
sbb
es
stos
sti
data16
enter
test
mov
call
adc
inc
dec
dec
lock
or
dec
test
mov
pop
cmc
jl
xor
stos
dec
and
xchg
in
mov
jmp
cmpsb
mov
mov
pop
push
or
ss
and
lret
stos
iret
fstpt
jp
pop
popf
jmp
dec
and
jo
div
and
inc
pushf
aad
cltd
push
call
ret
iret
cmp
call
jmp
in
iret
and
filds
je
outsb
test
ret
push
inc
lods
jge
clc
push
xor
in
adc
lock
fdivs
je
push
pop
daa
pushf
sbb
shll
pop
ja
rcrl
push
orb
shll
xor
dec
jae
clc
adc
lret
xchg
fistpll
mov
sbb
pop
pop
jecxz
fistpll
sti
nop
idivb
mov
cmp
test
push
adc
movnti
push
adc
sar
cmc
and
mov
fbstp
dec
sbb
shrl
or
rcr
out
sub
stc
mov
ja
shl
out
jae
cmp
inc
dec
jb
in
xor
es
inc
int3
push
sub
je
mov
mov
push
mov
pop
cmpsl
inc
lret
pushf
cli
ljmp
jp
adc
test
pop
iret
mov
cmpb
stos
stos
mov
add
xchg
clc
loop
ret
or
jmp
xchg
loop
rolb
bnd
pop
add
movsl
xchg
pop
push
cmpsl
movsl
cmp
cmpb
jl
mov
mov
adc
leave
mov
mov
inc
cmp
or
mov
dec
adcb
negl
mov
dec
pop
cltd
inc
mov
xor
or
or
pop
loope
out
out
out
mov
or
mov
ljmp
stos
or
dec
push
or
cltd
mov
mov
lret
ficoml
and
and
int3
and
push
cltd
jp
mov
dec
add
stc
and
stc
fcmovne
stos
ror
les
jno
mov
mov
and
add
inc
inc
js
jb
push
scas
inc
lock
push
movb
in
xchg
inc
add
rolb
sub
cmp
jae
add
cld
lahf
hlt
outsl
gs
fisttps
adc
xchg
mov
out
in
lahf
push
mov
jecxz
or
arpl
mov
fbstp
xchg
test
pop
sub
lahf
inc
cmp
leave
das
test
jb
out
stos
jae
and
mov
mov
das
arpl
and
mov
test
and
movsb
push
inc
mov
pop
jecxz
cltd
call
incb
inc
fmuls
ret
push
jns
mov
out
nop
dec
shrb
jb
adc
mov
mov
jb
jge
dec
or
push
aad
out
push
addb
cwtl
dec
ljmp
lret
cmpsb
outsb
jl
sbb
push
and
fldenv
pusha
ret
and
jg
scas
xchg
push
mov
inc
fmull
push
aam
pop
std
pop
jge
lret
xchg
loop
ljmp
pop
shll
les
dec
je
gs
push
std
popf
or
dec
or
pop
ljmp
les
cld
lret
shrb
scas
push
xchg
jne
jge
jle
mov
rorl
or
xor
movsl
mov
mull
add
imul
jp
mov
cmp
cmpsb
ja
mov
fisttpl
js
xor
mov
xchg
or
push
out
shlb
sbb
std
outsb
pop
outsb
mov
xor
in
mov
iret
pop
mov
enter
push
out
sbb
test
jno
add
add
cld
inc
cmpb
out
push
xor
lods
popf
scas
cmp
lahf
dec
push
pusha
and
pop
cmp
lcall
or
daa
imul
lods
add
or
idivl
and
adc
icebp
lahf
mov
pop
aas
lea
aad
in
mov
pop
scas
in
idivl
imul
dec
fidivrs
lcall
add
enter
or
jge
lock
dec
xor
jmp
xchg
mov
stc
scas
loope
test
test
fmuls
xor
scas
movsb
and
sahf
push
fs
stc
cltd
leave
push
cmc
inc
divb
pop
sub
adc
shlb
pop
rcll
xor
ja
pop
xchg
in
pop
sub
pop
dec
pop
outsb
jl
test
push
cwtl
push
or
push
jmp
xor
cmp
aam
hlt
adc
sub
inc
xor
je
mov
inc
add
mov
lods
test
insl
insb
outsb
negb
je
bound
daa
adc
bound
aam
and
clc
daa
xlat
push
lahf
jbe
sbb
mov
sahf
pop
jne
loop
and
mov
cmp
xor
dec
repnz
pop
mov
outsb
daa
or
lock
cwtl
dec
push
loop
sub
scas
xchg
cwtl
mov
xchg
inc
out
push
out
lock
sub
fcoml
xchg
in
jne
inc
cmpsb
in
mov
mov
lret
sbb
push
dec
sahf
bound
adc
sbb
or
bnd
xor
xor
dec
mov
sbb
roll
in
push
daa
jbe
dec
adc
ja
cld
cmp
adc
add
mov
fsubs
or
cmpsb
imul
push
sub
imul
adc
sbb
push
ds
dec
cli
add
hlt
adc
arpl
mov
pop
jp
inc
or
into
mov
xor
insb
xor
aas
out
hlt
faddp
inc
jns
jle
sbb
insl
sub
pushf
dec
aam
mov
cld
or
and
cwtl
pop
pop
mov
push
push
les
lock
mov
adc
mov
mov
vfnmsub132pd
or
and
icebp
es
push
rcr
adc
loope
pop
jbe
cld
sti
orb
call
push
xor
push
and
push
inc
daa
push
inc
xor
je
js
into
lret
push
jo
jbe
movsb
call
xor
or
mov
daa
dec
lcall
sub
mov
jl
repnz
dec
sbb
pop
lcall
sbb
cmc
popa
bound
mov
scas
ds
inc
and
test
ljmp
and
xchg
mov
call
sarl
push
aas
xchg
add
aas
lock
cmc
das
xchg
std
pop
mov
sub
sahf
add
jb
jg
and
stos
nop
push
jno
in
or
push
adc
or
int
inc
or
jnp
ss
test
mov
lret
dec
sbb
xlat
push
xor
arpl
in
jne
jmp
mov
adc
push
mov
aas
loopne
lcall
int
xchg
enter
mov
shrl
fucom
push
xchg
pop
fsubl
imul
mov
aas
pop
lcall
mov
jb
std
ljmp
sub
sub
xor
maxps
shlb
mov
loopne
push
imul
mov
pop
ret
cmp
jmp
ljmp
push
inc
sub
or
cwtl
leave
pop
mov
pop
repnz
mov
imul
lret
in
ficompl
dec
andl
mov
outsb
clc
dec
adc
sti
pop
fucomi
or
mov
add
xor
push
push
out
or
and
out
or
mov
inc
daa
jb
push
add
mov
cmp
mov
xor
mov
xlat
cld
inc
mov
lea
addr16
sbb
or
mov
add
je
imul
cmpsb
sbb
jmp
ret
fdivl
push
mov
inc
cld
imul
fs
xor
mov
xchg
jecxz
add
sub
sbb
xor
ja
mov
bnd
sub
adc
jns
aad
aam
in
xor
and
sub
mov
jb
or
and
loope
adc
mov
pop
adc
pop
and
jo
and
repnz
dec
in
push
fldl
loopne
mov
rcll
push
add
xlat
or
cmp
lcall
ret
add
push
imul
mov
mov
js
mov
out
cmp
or
xchg
cmp
addr16
push
std
inc
lea
popf
daa
lods
pop
mov
out
xlat
jge
or
xchg
cmp
addr16
push
std
inc
lea
popf
daa
lods
pop
mov
out
xlat
jge
or
xchg
cmp
addr16
push
std
inc
lea
popf
daa
lods
push
mov
out
xlat
jge
or
xchg
cmp
int
push
std
xor
mov
inc
clc
lret
mov
mov
sahf
shrl
add
xor
add
push
arpl
cld
jno
popa
push
xchg
mov
jecxz
ret
loope
sbb
add
push
add
adc
inc
jno
inc
popa
push
mov
mov
jmp
fcomi
leave
adc
or
pop
jp
data16
or
add
or
out
add
fldcw
cmp
cmp
stc
stc
jle
pop
int
and
mov
or
mov
mov
push
xchg
add
cmp
sub
fdivr
int
push
sub
in
add
sub
sbb
sbb
lahf
push
stc
mov
and
xor
fsubrp
scas
movb
inc
cmpsb
push
inc
std
xchg
dec
push
jl
shl
aam
sbb
imul
aam
adc
xor
dec
call
and
xchg
lret
icebp
mov
and
and
cld
adc
jnp
sbb
push
adc
lret
dec
pop
into
cld
and
xchg
dec
push
xchg
xchg
inc
popa
push
push
mov
mov
shl
repz
ret
clc
lret
sbb
sub
cmp
dec
jnp
imul
push
loop
in
aam
loope
xchg
repz
mov
inc
pop
dec
jbe
push
and
aas
xchg
lret
aam
mov
mov
adc
push
je
push
adc
xor
and
daa
clc
mov
mov
repz
ret
loope
adc
add
xor
and
push
arpl
jno
popa
push
xchg
mov
mov
repz
ret
loope
adc
add
xor
and
push
arpl
jno
popa
push
xchg
mov
leave
xchg
push
in
push
decl
fdivs
adc
sub
outsl
sbb
mov
ffree
sbb
lcall
std
push
push
aad
outsl
je
inc
orw
push
loope
xlat
cli
dec
jle
cmp
div
xor
mov
arpl
xchg
mov
sub
loopne
jp
mov
hlt
cli
jp
popa
std
or
mov
cmc
sub
or
call
adc
sub
fadd
xor
mov
lret
scas
pop
cwtl
jle
sub
xlat
xorb
aas
and
lods
push
add
cmp
push
jge
and
je
bound
push
pop
sbb
sub
movsl
mov
cld
insl
xchg
fwait
lcall
sub
jg
jg
push
xlat
push
movb
ss
mov
cmp
mov
mov
adc
aaa
inc
sub
mov
or
stos
pop
xor
sub
pushf
std
jmp
jmp
and
lock
pop
pushf
jns
push
addr16
add
mov
jbe
sub
in
cmp
xchg
xor
xor
push
jg
adc
jmp
cwtl
adc
sub
in
cld
daa
jmp
sub
ss
xor
push
sub
mov
cltd
or
sub
mov
sub
addr16
jmp
adc
je
add
ja
ret
xchg
sbb
lods
repz
push
xorl
pop
cld
jmp
lahf
ja
fisubl
push
pop
shl
loop
testb
inc
and
or
pop
lods
hlt
and
out
pop
and
sahf
push
add
mov
sub
mov
sbbl
iret
and
sub
xchg
pop
ficoml
pop
cmpb
add
pusha
popf
cmp
test
cmp
fildl
sarl
insb
imul
scas
aaa
loope
pop
push
fmull
mov
pushl
sub
ud1
jle
stos
and
xchg
sbb
outsb
or
inc
fsubrl
call
dec
add
pop
pop
push
xchg
mov
imul
push
iret
lret
mov
sub
nop
in
lock
xor
xchg
jl
mov
mov
cs
fwait
repz
dec
fdivrp
aam
dec
imull
mov
dec
sar
aam
push
cmp
xor
jnp
pop
mov
aaa
mov
or
scas
xchg
les
or
jl
rcr
outsb
inc
jmp
sbb
and
shlb
mov
shl
movsb
addr16
jb
out
imul
jo
popfw
iret
aam
scas
jmp
xor
mov
and
push
divb
jge
push
outsb
inc
xchg
sti
push
iret
xor
dec
push
andl
call
cmc
aam
push
popa
jp
pop
outsl
popa
rol
adc
or
imul
loopne
sti
lret
pop
adc
and
push
mov
scas
add
add
push
and
out
mulb
adc
fs
add
mov
jns
mov
out
loopne
mov
jae
push
mov
mov
popa
mov
push
lret
mov
jne
mov
rolb
sbb
push
hlt
lret
cmp
sub
scas
cmp
sbb
adc
daa
sbb
or
add
jg
sub
push
xor
loopne
imul
pop
shrb
jne
sbb
in
pusha
xor
pop
xchg
cmp
pop
adc
in
adc
ds
nop
ljmp
scas
xorb
pop
je
adc
divl
aaa
lahf
pop
lahf
cwtl
shll
cs
movsb
fisubs
shll
fsubrs
inc
mov
shr
jge
jo
mov
test
test
movsb
push
dec
mov
hlt
adc
scas
andl
and
jbe
imul
hlt
xorl
loope
mov
or
pusha
add
push
orb
scas
add
xchg
aad
dec
mov
aam
testb
jl
xor
stos
add
pop
js
inc
cmp
sbb
inc
icebp
dec
dec
pop
lcall
cmp
mov
out
aam
das
xchg
xor
sbb
or
jne
mov
xor
mov
ret
cmp
or
into
sarb
lret
inc
mov
das
ret
test
movsb
dec
jge
es
push
jns
and
cmp
jae
inc
xlat
jae
in
jg
sbb
mov
pop
sbb
and
rcl
in
mov
lea
loope
xchg
int
cmc
sbb
shrl
mov
jmp
movsb
or
popa
loope
sbb
jb
rep
push
js
add
xchg
mov
sbb
nop
popa
pop
sahf
cmp
leave
gs
lock
test
xchg
ds
xor
js
test
hlt
pop
pop
arpl
test
or
cwtl
pushf
add
inc
mov
clc
stos
stos
or
scas
aaa
lcall
sbb
lods
in
or
ret
fdivr
ja
pop
icebp
push
sti
in
aaa
cmc
stos
mov
jb
mov
out
jecxz
nop
rorb
movsl
pop
push
jp
cmpl
in
jmp
int
daa
dec
cwtl
adc
pop
fisubs
fwait
xchg
xchg
sbb
aam
or
and
sbb
das
xchg
push
xchg
inc
sub
sti
jne
test
sub
mov
cmp
sbb
enter
mov
out
sarl
cmp
fwait
sbb
mov
inc
add
mov
les
into
mov
mov
ret
lret
in
xchg
adc
test
in
data16
shrl
mov
or
ret
mov
jbe
enter
mov
addl
pop
fsubrl
clc
and
popf
inc
inc
enter
movsl
or
enter
mov
dec
int3
icebp
movsl
fistl
jbe
push
orb
push
mov
pop
push
mov
ja
dec
rcr
loop
fs
mov
push
push
call
test
pop
ja
lods
jg
fcomps
jmp
popa
sub
mov
jge
jns
fldenv
cmp
sub
gs
jmp
das
lret
xor
pop
pop
idiv
mov
xchg
je
push
pusha
inc
insb
push
push
mov
call
inc
in
icebp
mov
pop
push
loopne
in
lods
cmc
testb
xor
addr16
scas
xor
out
fldcw
ret
mov
push
test
jge
inc
fs
pop
push
lock
mov
sbbb
mov
mov
imull
xor
add
and
pop
jo
pop
and
pop
test
mov
iret
sub
imul
pop
add
es
int3
cmpsb
test
dec
popf
mov
adcl
ljmp
mov
call
loopne
jge
cmp
cmc
mov
lcall
mov
and
adc
sbb
shl
cs
inc
icebp
pop
sub
jns,pn
push
push
hlt
dec
scas
push
clc
adc
cmp
sbb
insl
shlb
mov
loopne
in
popf
push
dec
adc
js
inc
and
push
mov
enter
dec
es
xor
mov
ljmp
stos
repz
es
pop
std
insl
cmp
ljmp
and
mov
js
mov
cmp
xchg
fs
xchg
and
dec
add
pop
cli
sahf
xor
add
call
sbb
notl
pop
dec
cld
jl
jecxz
aam
sbb
lds
jb
sbb
movsl
data16
mov
jbe
lea
lds
imul
mov
mov
imul
movsb
hlt
mov
jo
cwtl
cmp
push
clc
in
out
fisubrs
test
mov
out
dec
jno
inc
inc
and
dec
adc
xchg
add
ffree
lea
neg
mov
loopne
ss
or
insb
xchg
idivl
mov
jmp
in
dec
mov
mov
jne
sub
sub
rorl
push
xor
int
xchg
imull
push
push
xor
fwait
jecxz
xchg
fwait
mov
or
cld
xchg
pop
pusha
push
pop
popa
ret
xor
sbb
into
dec
loope
cmp
shll
loop
fwait
adc
add
iret
outsl
sbb
sbb
push
mov
xchg
push
cmp
imul
inc
ret
gs
pusha
jno
cwtl
dec
mov
jnp
lcall
and
es
ja
movsb
push
inc
into
or
mov
fwait
xor
sarl
or
pop
jno
out
xchg
lods
sar
pop
pop
rolb
dec
int
test
testl
mov
jmp
arpl
enter
mov
addr16
adc
mov
push
nop
inc
inc
adc
ret
jl
xor
push
int3
cmp
fmuls
scas
ljmp
xor
shlb
in
jle
in
shr
leave
xorb
daa
mov
xor
add
sub
sub
jp
lods
mov
test
test
in
pop
out
je
add
lahf
movsl
enter
fmull
xchg
iret
jbe
rorb
cwtl
sahf
insl
adc
pop
dec
jnp
std
insl
sbb
xchg
sbb
push
ja
test
xorb
sub
and
push
sbb
sub
adc
lcall
mov
mov
ffreep
popf
add
lret
lds
xchg
mov
fs
test
incl
int
inc
pop
seto
dec
sbb
into
pop
inc
lret
fs
and
inc
mov
mov
push
sbb
lea
ss
fs
leave
lcall
movsb
adc
add
mov
daa
dec
andl
jmp
push
xor
cltd
lods
jl
movsl
or
sub
xchg
mov
ret
mov
inc
ret
fdivrl
jle
mov
cmp
inc
std
aas
pop
inc
popf
loopne
jge
scas
jae
mov
xchg
daa
jo
xor
cmp
jne
jno
push
in
call
pop
mov
adc
or
push
xchg
cmp
popa
inc
inc
sarl
jge
sbb
xor
pop
cli
or
ljmp
das
insl
jae
adc
add
inc
iret
push
lods
jnp
xchg
lds
jmp
sti
and
or
and
adc
push
mull
movsl
sbb
insb
int3
ret
sbb
mov
dec
xlat
inc
and
cli
add
out
mov
xlat
add
jg
jmp
repnz
xchg
xor
sbb
dec
jo
pop
dec
xor
xor
or
inc
rcr
adc
outsb
mov
sahf
mov
ljmp
insb
sahf
dec
jg
test
mov
mov
outsl
mov
or
ret
lods
movlps
addr16
and
mov
shr
xchg
iret
nop
test
lds
into
arpl
pop
mov
in
push
cmpsl
dec
aad
cmp
dec
jno
pop
mov
pop
cmpsb
mov
mov
test
test
adc
xchg
stos
test
aad
cwtl
hlt
pmulhw
dec
dec
fsubl
pop
cmp
mov
cmp
xor
sub
xor
arpl
and
add
sbbl
inc
fdivs
addb
mov
adc
fnstcw
loope
mov
lods
in
scas
mov
xor
mov
dec
inc
fstpt
iret
mov
mov
fcmovne
aas
pop
outsl
test
or
repz
push
hlt
jle
xor
jge
sub
xchg
mov
xor
hlt
push
pop
movsb
push
cmc
jmp
ja
xchg
les
in
inc
or
inc
sbb
push
mov
sbb
inc
mov
sti
and
sub
inc
xlat
sbb
testb
repz
aad
dec
mov
inc
je
dec
adc
jnp
adcl
xlat
mov
int
int
icebp
xchg
dec
cmpsb
hlt
xor
mov
inc
push
je
xor
mov
hlt
and
xchg
adc
in
jne
lret
mov
frstor
push
sbb
repnz
xchg
push
das
cmp
das
mov
mov
jge
or
push
cmc
push
or
jbe
mov
add
add
mov
ret
daa
inc
jle
xor
outsb
push
or
data16
push
daa
xor
dec
out
dec
inc
inc
dec
and
jo
aaa
inc
in
push
mov
imul
xor
mov
int3
ret
ss
pusha
in
pop
out
cmpsl
test
out
sbb
inc
push
jmp
adc
inc
inc
xchg
cwtl
jmp
push
mov
inc
pop
loope
jbe
dec
leave
jno
popf
lcall
sbb
push
sbb
pop
daa
pop
sbb
sbb
mov
imul
and
ss
imul
lods
test
loopne
dec
jne
xor
shrb
clc
stos
inc
sbb
cmpsb
mov
outsl
xor
mov
fisttps
ss
rcrb
mov
fisubrs
push
lret
ret
stos
or
mov
sub
xchg
scas
or
shrl
and
push
int
stos
loopne
mov
jmp
xchg
scas
xor
pushf
fadds
mov
cwtl
das
xor
sbb
lcall
cmp
int
stos
leave
in
movsl
enter
jbe
add
lock
pop
xor
mov
movsl
sub
and
insl
xchg
lods
adc
sub
popa
inc
sbbl
rolb
addr16
neg
and
sub
xchg
sti
inc
fstpl
mov
xchg
insw
scas
shrl
lcall
dec
ljmp
mov
lgs
icebp
jo
pop
sarb
mov
xor
mov
sub
aad
inc
push
and
mov
xor
addr16
add
bound
mov
or
sbb
mov
fidivrl
ret
popf
and
imull
stos
dec
sbb
lcall
jl
push
pop
cmpb
dec
jbe
xlat
and
or
jne
test
fadds
cs
cwtl
ret
jmp
repnz
jge
xchg
icebp
lea
xor
cmc
dec
mov
fmuls
or
into
orl
or
push
hlt
mov
push
or
sahf
mov
pop
test
lahf
outsl
les
jl
add
adc
mov
outsl
movsb
mov
in
sahf
clc
push
dec
lods
push
xchg
outsl
sbb
pusha
call
shr
xlat
pop
fwait
lock
js
lcall
pop
mov
mov
mov
jne
js
subl
xchg
pop
sahf
insl
jnp
xor
addl
mov
push
pop
hlt
add
movsl
adc
loop
divb
stos
fadd
enter
mov
dec
add
sub
push
repnz
push
inc
rcr
mov
dec
jno
fisubs
cwtl
inc
aam
cmp
adc
lret
cmp
dec
repz
sub
sub
mov
addr16
push
lret
dec
push
mov
in
push
mov
hlt
sbb
repz
xor
icebp
je
jmp
sbb
mov
or
into
sub
jle
insl
inc
sahf
adc
pop
loope
lahf
add
sub
leave
or
stos
mov
push
fnstcw
repnz
pop
lret
fdivl
fucomp
mov
lock
xchg
fldenv
aad
enter
add
mov
dec
inc
cmpsl
fisubrs
sbb
test
data16
cs
loope
insl
lock
jle
orb
ljmp
xchg
xchg
or
test
imull
xchg
fcomps
data16
jle
movsl
mov
add
xchg
push
enter
sub
emms
mov
les
cld
xor
lods
and
pop
repz
aaa
push
fisttps
xor
dec
pop
iret
xchg
push
negb
cmp
pusha
in
sti
repnz
lcall
inc
and
mov
pushf
mov
in
fdivrs
xchg
mov
ret
cmp
cmpsb
xchg
cltd
insl
mov
loopne
les
addr16
dec
push
xchg
in
add
mov
sbb
push
lods
repnz
jl
push
lea
adc
xchg
testb
inc
test
cltd
jle
out
sub
ss
daa
insl
jnp
xor
mov
stos
sbb
jnp
std
ds
stos
and
inc
add
orb
in
inc
lahf
movsl
rcrb
or
push
cmpsl
dec
and
inc
sub
push
mov
cmc
addr16
ja
popa
clc
loopne
and
mov
mov
sub
lods
sbb
mov
sub
pop
pushf
push
dec
daa
and
in
js
push
iret
rclb
or
push
loope
or
jmp
inc
push
dec
sub
mov
negl
out
inc
adc
sbb
cmp
pop
xchg
xchg
pxor
xchg
lret
cmp
or
dec
push
pop
xchg
cmpl
gs
popf
cmp
sbb
sbb
inc
out
aad
xor
cmpsl
and
mov
les
mov
fidivrs
pushf
scas
test
and
dec
fstpl
js
inc
bound
cmpsb
push
cmp
out
cltd
jb
cwtl
add
lcall
push
out
mov
inc
dec
sub
and
pop
sub
sub
xchg
push
je
cmp
ss
sti
scas
dec
mov
jns
in
nop
mov
or
add
add
jbe
push
mov
movsb
xchg
filds
xor
lods
test
add
xor
mov
test
test
xor
inc
and
and
pop
ret
xlat
inc
add
or
sbb
and
jnp
push
add
push
mov
lods
sbb
sti
xor
xor
mov
decb
mov
ja
mov
ret
and
sub
jne
push
mov
xchg
jae
mov
dec
cmpsb
dec
icebp
enter
stc
test
sub
cmpsb
cmpsb
scas
popf
xchg
xor
cmp
icebp
push
push
and
repz
sub
int
sub
pop
mov
popf
fistl
mov
hlt
mov
faddl
mov
xor
arpl
mov
imul
inc
jae
push
and
push
pop
mov
enter
imul
imul
lret
test
in
sbb
sub
repz
mov
fidivrl
fninit
aam
lds
stc
sub
sbb
mov
mov
je
gs
sub
cmp
aam
add
push
test
imul
pop
jg
mov
in
jnp
cmp
add
xchg
xchg
mov
ss
pop
sub
xchg
or
adc
push
jo
lret
dec
mov
sub
sub
jmp
in
adc
xor
mov
push
mov
jbe
push
lods
jg
jge
sub
xor
dec
pop
idivl
cmp
jns
shlb
into
and
mov
out
ret
xor
push
cmp
daa
sahf
repz
les
cli
test
or
mov
imul
nop
shlb
jg
outsb
cmovg
adc
or
xchg
test
scas
fldl
or
test
xor
push
int3
ss
leave
mov
sarl
pushf
xchg
sub
dec
imul
xchg
scas
sbb
xchg
pop
lahf
loopne
iret
insl
outsb
adc
mov
negb
and
je
mov
add
dec
data16
xor
mov
adc
int
jge
push
ss
jmp
nop
mov
mov
insl
mov
mov
mov
rcll
stc
gs
notl
pop
cltd
mov
jbe
ss
roll
and
test
and
cmpsl
jno
rcl
xchg
sbb
adcb
pusha
pushfw
into
outsb
sub
sub
or
pop
mov
lahf
jl
and
notb
scas
or
mov
mov
in
ret
adc
iretw
push
cld
jb
cltd
pop
les
sahf
or
ljmp
pusha
or
loopne
sbb
icebp
and
addr16
imul
mov
mov
mov
cmpsl
jae
jp
mov
jle
out
outsb
sub
test
mov
aas
mov
cmp
dec
gs
cmpsl
ja
std
mov
pop
xor
sub
xchg
sbb
mov
mov
aas
js
cld
das
mov
cli
inc
push
mov
inc
ja
or
dec
icebp
pop
adc
inc
std
xor
fsubs
mov
sti
mov
xchg
pop
add
and
xchg
push
adc
xor
inc
inc
orb
xchg
add
pushf
in
mov
ret
pop
lods
cmc
lods
movsb
insl
ret
rclb
push
out
xchg
ljmp
add
and
jne
adc
push
call
dec
loopne
fcomi
mov
mov
repz
ret
loope
adc
add
xor
and
push
arpl
jno
popa
push
xchg
mov
mov
repz
ret
loope
adc
add
xor
and
push
arpl
jno
popa
push
xchg
mov
mov
repz
ret
loope
adc
add
xor
arpl
jno
push
push
movsl
cmpsl
mov
xchg
shl
ret
popa
adc
and
cltd
fwait
add
fs
or
cmp
sub
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
bound
out
xchg
fcompl
or
add
add
add
or
add
add
add
add
outsb
add
add
add
add
add
add
add
add
xchg
mov
xchg
add
or
push
add
hlt
add
add
jl
mov
mov
add
add
add
add
add
add
add
inc
add
xchg
add
test
insl
add
add
add
add
add
xchg
add
add
add
add
add
add
add
push
add
enter
sbb
and
sub
clc
add
push
inc
add
add
add
mov
xchg
add
enter
sbb
push
add
add
add
add
sbb
data16
add
xchg
add
add
out
add
add
add
add
xchg
add
xor
test
enter
sbb
add
or
dec
add
add
add
add
xchg
add
add
add
add
add
or
dec
add
add
add
add
add
roll
add
or
xchg
add
add
xchg
add
add
add
add
popf
add
or
enter
jp
outsl
add
fwait
add
or
push
add
add
add
add
xor
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
out
add
dec
add
enter
xor
flds
add
adc
xchg
add
add
add
jle
test
or
or
add
lret
add
push
aas
add
clc
add
add
add
add
add
add
add
addl
enter
and
pop
add
add
xchg
add
add
add
add
icebp
add
add
add
ljmp
add
add
fildl
xchg
add
add
add
mov
push
add
add
ljmp
add
add
aas
add
add
add
testl
jb
hlt
or
add
add
add
add
add
add
add
add
add
add
add
adc
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
mov
add
add
add
jp
das
add
mov
roll
mov
xchg
movsb
add
add
add
add
inc
add
add
add
add
flds
xor
lods
add
add
add
add
add
add
add
xchg
add
cltd
add
xor
popa
add
hlt
add
add
movl
ljmp
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
inc
add
icebp
add
add
add
ljmp
sbb
loop
lret
testl
inc
push
cli
dec
mov
inc
or
addr16
cmc
inc
push
or
loope
or
cmpsl
mov
out
nop
mov
xchg
fstpt
xor
cltd
ja
popa
and
jg
or
sub
dec
loop
or
jb
gs
jge
fstl
cmp
pop
pop
mov
pop
or
jo
sbb
pop
fcoml
add
std
stos
jmp
mov
add
aaa
and
addr16
aad
mov
fldt
pop
mov
mov
loopne
xor
dec
sbb
imul
jl
lret
pop
movsl
cld
pushf
insl
lret
jnp
sub
fdivrl
mov
pushf
or
mov
add
xor
push
xchg
int
mov
push
pop
mov
adc
mov
inc
loope
nop
push
cmp
mov
fnstenv
cmpsb
imul
pop
lahf
pop
adc
pop
or
mov
je
mov
push
xchg
in
xor
push
add
and
iret
lret
xor
and
push
push
sbb
lea
les
jns
cmp
test
lods
cmp
xchg
call
js
rorl
jb
xor
xchg
xchg
popa
push
stos
cmp
pop
pop
imul
xchg
mov
xor
ds
fiaddl
push
out
repz
mov
shl
out
jle
repz
ljmp
adc
out
mov
arpl
cli
clc
mov
icebp
fidivs
and
lods
add
xor
pushf
jge
ret
loopne
sbb
dec
mov
inc
jmp
sahf
repnz
cmpb
inc
scas
cltd
rclb
sub
lods
movsb
mov
cld
pop
in
lcall
jle
adc
sub
sti
mov
sbb
pop
stos
testl
pop
loopne
sbb
xor
jge
movsb
cmp
jmp
pop
adc
sar
pop
push
mov
mov
pop
cs
insl
xchg
int3
cmc
rclb
insb
xchg
inc
ljmp
test
lahf
das
mov
xchg
pop
lock
dec
scas
dec
inc
push
nop
push
pop
sti
incl
lret
sub
fstpl
pop
pop
cli
int3
xchg
insb
addl
rcrb
clc
or
push
je
in
out
mov
mov
fists
xor
fwait
stos
je
push
xchg
mov
pop
adc
cmp
pop
dec
mov
imul
pop
mov
inc
adc
enter
jmp
jbe
fildl
inc
rdpmc
je
popa
movsl
mov
push
ds
and
imul
bound
push
pop
adc
mov
sar
sbb
push
dec
add
mov
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
