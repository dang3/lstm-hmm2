inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
in
lods
and
or
add
pop
add
push
or
add
push
add
sbb
das
add
add
popf
add
add
mov
add
add
inc
add
cmp
add
inc
add
mov
addr16
add
inc
add
add
cmp
add
add
xor
xchg
add
rolb
add
add
add
add
add
add
add
add
add
or
inc
add
dec
add
add
add
mov
add
int
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
roll
inc
add
dec
add
add
add
add
add
inc
add
aad
imul
pop
add
add
dec
add
flds
dec
add
or
cltd
add
flds
clc
add
inc
add
inc
add
add
add
add
jl
mov
add
add
add
add
push
add
inc
add
clc
add
add
inc
add
mov
jl
inc
add
rolb
add
add
or
inc
add
popf
add
dec
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
fildl
add
add
int
or
add
outsl
add
add
add
add
out
add
add
add
add
mov
cmp
pop
inc
add
lods
add
cmp
test
add
add
sub
pop
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
dec
add
add
add
add
add
add
inc
add
push
and
inc
add
inc
add
add
mov
add
add
pop
aad
movl
or
stos
add
add
add
sub
xor
add
cmp
add
add
add
add
add
add
sub
add
add
add
add
jp
xor
mov
add
imul
add
sub
add
add
add
add
mov
add
add
and
inc
add
add
imul
add
cmp
ret
add
add
add
add
xor
pop
add
add
out
add
add
add
cmp
or
push
add
mov
add
add
lea
push
add
add
add
add
daa
add
sbb
dec
add
add
clc
add
add
inc
add
add
add
jl
rolb
add
js
filds
inc
add
inc
add
mov
add
add
add
add
cmp
add
jle
or
or
int
pop
add
add
add
add
add
pop
add
js
filds
mov
inc
add
add
mov
add
add
flds
mov
add
add
add
add
add
pop
add
add
add
push
add
add
testb
add
add
or
pop
add
add
pop
add
add
add
cmpsl
add
cli
pop
pop
sbb
xchg
loope
or
inc
imul
pop
movsl
cmpsl
pop
jle
dec
imul
jp
leave
lcall
xchg
pop
lahf
hlt
pushf
and
sub
pop
sub
mov
mov
mov
mov
xchg
fsubrp
test
mov
fimull
test
aaa
hlt
pop
and
mov
fiaddl
push
mov
and
pop
and
mov
mov
bound
sbb
movsl
loope
movsb
repnz
pop
sbb
fcos
push
in
out
arpl
and
out
pop
insb
dec
dec
and
mov
mov
daa
jmp
insb
xchg
clc
add
jb
cmp
cld
sub
xchg
xor
stc
fcompl
negb
pcmpeqw
inc
divl
lods
sbb
mov
rcr
or
into
xchg
ret
test
pushf
sbb
in
scas
pop
cmp
iret
mov
shll
in
or
call
add
xlat
cld
insl
cwtl
fidivs
outsl
in
lcall
sub
fistps
stos
test
pop
out
xchg
xor
bnd
sub
incl
test
fisubrs
lahf
add
mov
lret
mov
mov
lret
mov
loope
push
pop
dec
mov
loop
adc
sbb
mov
cs
insb
enter
lret
out
testl
fists
roll
pop
push
sbb
mov
mov
sub
pusha
cli
mov
sbb
push
movzwl
cmp
push
cmp
data16
lret
stc
imul
sub
push
data16
jmp
cmp
add
push
out
add
fmuls
mov
cmc
je
sti
roll
jmp
push
jmp
mov
or
push
xorl
mov
xchg
adc
addl
add
es
push
dec
sbb
fldt
cmp
inc
push
cld
cmc
or
rcrl
mov
addb
sub
hlt
fisubl
cwtl
insb
adc
push
mov
push
mov
lds
stos
repnz
cmpsb
scas
data16
das
into
push
out
lahf
and
pop
sti
jle
jg
push
adc
cmp
sub
hlt
cmpl
mov
aam
loopne
push
cli
std
mov
sbbl
fidivl
inc
jnp
xor
add
xor
pop
mov
jnp
in
push
fstpt
jge
cs
dec
push
movsb
test
sbb
jno
es
pop
nop
aam
or
cmp
or
mov
inc
js
xchg
andb
pop
test
scas
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
loop
pop
pop
daa
lahf
aaa
loope
xchg
xor
inc
mov
jg
aas
xchg
xcrypt-ctr
cmpsl
pop
mov
jg
dec
out
mull
daa
lahf
aaa
out
inc
call
fisttps
jg
aas
xchg
and
sbb
dec
out
divl
aas
pop
or
pop
aaa
incl
push
jecxz
daa
ja
xchg
imul
and
out
je
pop
lret
dec
call
push
lret
in
fdivr
sbb
cmp
add
iret
mov
cmp
or
mov
jnp
mov
inc
add
in
pop
jge
repz
mov
shr
out
push
into
out
cmpsb
incl
scas
sbb
dec
mov
mov
rol
sbb
loope
nop
shl
xlat
mov
inc
xor
bswap
pusha
out
in
push
into
or
insb
push
loop
jge
pop
in
mov
inc
jo
pop
mov
mov
outsl
fcomi
pop
sbb
pushf
xchg
jg
pop
out
or
cmpb
bound
lahf
dec
outsl
es
xchg
mov
ljmp
loop
pop
mov
aaa
out
inc
mov
ja
xchg
mov
popa
xlat
dec
out
sahf
fldl
leave
push
lret
daa
icebp
aaa
andl
mov
xchg
pop
ret
push
test
mov
sahf
sbb
enter
xchg
sahf
sbb
int3
jle
push
jae
sbb
sbb
cmp
mov
push
ficoms
imul
ja
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
jg
dec
out
imull
daa
lahf
aaa
out
inc
call
fbstp
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
jg
dec
out
imull
lret
mov
sahf
inc
sbb
test
sbb
mov
lahf
add
sbb
cmp
jo
push
negl
xchg
and
dec
add
in
dec
cli
mov
pop
jne
jb
cld
and
mov
inc
mov
mov
cltd
movsb
sahf
movsl
movsl
rorb
push
pushf
repz
lcall
cmp
mov
out
sbb
jmp
lods
push
fldcw
xlat
addr16
or
push
sub
sub
in
out
xor
int
cmpb
addr16
inc
xchg
pusha
fbstp
pop
xor
mov
inc
enter
push
negl
xchg
push
mov
insb
or
call
pop
scas
movsb
xchg
add
scas
inc
ret
dec
hlt
cmp
fisubrs
repz
pop
sub
ds
mov
push
mov
loopne
jg
scas
adc
test
push
jecxz
pop
jle
sub
cmp
push
fnsave
pop
adc
jecxz
add
ficompl
cmp
mov
in
mov
add
dec
sub
aaa
push
arpl
sub
xchg
movsb
sarb
or
push
add
push
mov
std
cmp
cmpsb
push
test
pushf
push
xlat
pop
dec
push
pushf
mov
lods
inc
dec
roll
pop
jmp
psubb
or
and
iret
ss
movsl
push
fstps
insb
ret
add
sti
filds
test
xchg
aad
outsb
pop
push
scas
out
adc
in
or
add
mov
sbb
lahf
fldl
sar
repnz
jo
mov
cltd
int3
aam
adc
ds
pop
cmp
jg
les
imul
xchg
dec
or
jne
mov
pop
mov
xchg
cmpsl
or
adc
cmpl
insl
stos
sahf
pop
inc
aaa
jns
ja
mov
xchg
sbb
xor
pop
inc
mov
sbb
addr16
cwtl
mov
cmpsb
negl
and
in
or
cmp
mov
mov
ret
cmp
sbb
add
mov
test
int
ror
stc
cld
jg
out
pop
push
xchg
adc
cmp
pop
xchg
and
mov
and
jmp
add
lahf
xchg
mov
jmp
mov
iret
xchg
loope
insb
filds
and
add
xchg
stos
xchg
mov
scas
rol
out
push
mov
pop
sti
dec
test
iret
sar
push
lret
pop
sti
sub
pop
out
loop
ljmp
jno
lret
or
shlb
sub
loop
clc
pop
arpl
jno
lds
pop
and
pusha
sbb
lock
outsl
mov
in
inc
divl
push
imul
inc
adc
ljmp
dec
adc
jbe
fisttpl
xor
test
inc
cmp
xchg
jecxz
xor
je
lcall
shr
iret
ds
cmc
dec
out
inc
xor
adc
and
out
lods
mov
and
sarl
lret
sub
sbb
and
inc
cmp
or
pop
jge
pop
cld
cmpsb
mov
cs
mov
cmp
cmpsl
pop
inc
cmp
xor
addl
int
cwtl
test
sub
insl
inc
push
inc
xor
pop
hlt
jl
add
hlt
clc
jl
hlt
sbb
out
sarb
rcl
test
mov
ljmp
pop
mov
leave
scas
dec
add
mov
cvtps2pd
mov
xor
cmpsl
push
dec
leave
mov
sbb
xor
daa
imul
orb
stos
in
rcll
imull
dec
aaa
push
sub
pop
adc
xchg
int3
inc
outsl
inc
pop
aas
pusha
sahf
mov
movsl
xchg
repz
fwait
pop
es
sti
mov
push
xchg
push
inc
mov
out
pop
data16
lods
out
sbbl
ret
addb
adc
and
inc
jl
fs
cmp
and
or
outsl
cmpb
sbb
sbb
xor
or
pop
dec
inc
les
fs
mov
loopne
sbb
cmp
xchg
rcll
push
mov
mov
inc
shll
lock
xchg
push
mov
pop
xchg
add
imul
mov
outsb
xchg
add
repnz
imul
je
push
jmp
cwtl
mov
lea
insl
mov
jl
mov
iret
popf
mov
or
xchg
test
mov
xchg
mov
xor
mov
lock
fidivs
sbb
out
mov
test
lret
repnz
push
loop
stc
movsb
test
dec
nop
sti
pop
lahf
cmp
and
ficoml
sbbb
dec
je
pop
or
data16
and
popa
jg
fldcw
aam
loope
int
rcl
mov
mov
clc
sub
outsl
es
aad
lcall
sarl
frstor
pushf
cmc
pop
and
sbb
xorb
inc
cmp
jmp
sub
in
sbb
rolb
fistpl
and
test
ja
fdivrs
hlt
icebp
es
add
clc
xchg
rclb
pusha
pusha
sbb
outsl
shrb
inc
pop
xchg
outsb
and
sub
mov
lcall
sar
loopne
les
cmp
pop
je
loope
jno
xor
cmpsb
jb
clc
cmp
push
xchg
jo
push
out
out
daa
adc
pop
push
mov
or
push
add
test
and
mov
outsb
adc
pushf
stc
mov
pop
adc
loope
push
repnz
adcl
lret
movsb
insb
mov
and
cli
cltd
loop
pop
fsubp
add
inc
lods
pop
and
lods
and
mov
movsw
in
cmp
mov
pop
out
in
ss
aam
inc
mov
shlb
push
sub
insl
cltd
mov
dec
in
mov
test
jp
aad
test
call
aas
adc
fnstenv
rcrl
jns
jne
push
pusha
jp
or
push
out
push
mov
xchg
jnp
sub
mov
lods
fcompp
adc
popa
mov
mov
mov
pop
or
jmp
mov
and
fldenv
jne
jge
xchg
mov
push
scas
lret
imul
adc
scas
aad
das
or
les
ret
push
mov
out
xor
outsl
mov
jns
pop
cmc
ljmp
jg
inc
pushf
inc
js
outsb
popf
data16
sbb
cmp
es
repnz
add
xor
jge
nop
cmp
push
inc
inc
in
aaa
add
enter
mov
test
adc
pop
out
add
leave
xchg
xchg
test
inc
fsubrp
jbe
xor
out
inc
inc
decl
bound
inc
lock
inc
push
fsub
ss
add
cmp
sbb
into
insl
xchg
xchg
mov
ret
cld
push
fldl
push
cli
lods
in
push
or
pop
fidivrl
add
and
mov
jbe
mov
push
dec
dec
lds
fldl
or
mov
daa
pop
xchg
addr16
cmp
push
push
cmc
aad
or
sbb
int3
add
inc
sti
lahf
repnz
ja
inc
call
aaa
pop
and
mov
mov
or
xlat
pop
js
sbb
push
les
sbb
xorl
movsb
jl
xchg
inc
pop
mov
pop
add
lods
jmp
rorb
mov
std
cli
hlt
aad
push
negb
push
data16
sub
es
ljmp
insb
xchg
mov
stc
push
pop
ret
enter
mov
cmc
sar
xor
inc
cwtl
daa
or
add
sti
nop
into
inc
pop
fcompl
ret
dec
xchg
lock
push
fs
icebp
int
adc
in
sarl
cmp
les
push
adc
fs
test
ss
xchg
jb
cmp
aam
js
in
cmp
mov
inc
pop
aaa
out
mov
mov
cmp
aas
sarb
fcoms
sub
outsb
mov
iret
dec
jb
pop
inc
cmpsl
pop
enter
jl
shr
mov
jle
test
stos
mov
movsb
add
sbb
das
leave
in
mov
mov
cmp
mov
xchg
jno
adc
call
pop
movhps
mov
das
ds
xor
sub
push
xchg
filds
sbb
es
sbbb
rcrl
les
fwait
push
daa
mov
ja
scas
movsb
aas
push
xor
xlat
shr
daa
ljmp
or
dec
lock
jae
hlt
jp
or
icebp
cmp
or
dec
xor
adc
sti
mov
jle
adc
sub
add
xor
in
cmp
enter
movsl
movsb
add
xchg
rcl
xchg
in
cmp
mov
outsb
in
fildll
cmp
adc
mov
mov
fidivl
or
cmp
iret
out
call
jl
in
sbb
mov
ja
push
or
dec
aaa
cwtl
add
ret
mov
adc
mov
popf
mov
jo
pushf
inc
mov
cli
cmp
jl
xor
mov
out
sbb
mov
stc
js
or
inc
mov
dec
push
sbb
hlt
cmc
dec
idiv
mov
jp
mov
sub
popa
lods
xchg
jnp
push
inc
or
cmpsb
mov
xor
out
adc
adc
cwtl
fbstp
cs
ret
stos
xor
lret
sbb
sub
adc
test
mov
sub
iret
mov
dec
sbb
mov
insl
out
popa
xchg
aaa
mov
pop
mov
jl
aas
int
add
rolb
ret
pushf
mov
pusha
mov
push
jo
xchg
test
iret
jle
jb
adc
jecxz
fisubrs
imul
cmpb
out
in
and
xchg
push
pop
and
popf
sbb
mov
stos
pop
jg
pop
test
dec
push
sub
or
aam
xchg
jg
adc
hlt
mov
pushf
rorb
jp
hlt
or
pop
lret
mov
mov
mov
fadd
into
adc
pop
stos
push
shll
sub
out
mov
pop
mov
fcomps
lds
jnp
arpl
inc
mov
sub
arpl
movsb
gs
inc
addr16
adc
jg
andl
adc
ds
sbb
loopne
pushf
pop
pop
in
sbb
sti
call
fisubrl
dec
in
int3
jle
push
pop
xorl
mov
sbb
mov
push
pusha
daa
sub
inc
loope
lock
ljmp
inc
movsb
in
cmp
sub
mov
pop
dec
xchg
jle
sub
ret
jne
loop
xor
outsb
xor
mov
jno
stos
mov
cwtl
icebp
ud1
push
and
sub
aad
xor
lock
push
lcall
scas
in
push
aaa
clc
in
dec
stc
sti
loope
push
dec
movsl
aas
adc
jmp
into
xchg
ret
and
mov
xor
pop
sti
shl
inc
sahf
and
dec
filds
add
pop
fstl
adcb
or
xor
push
push
cmp
in
fbld
mov
and
add
mov
dec
sti
cmp
fiadds
aas
xor
cmpb
or
sbb
bound
int3
sti
in
pop
sbb
inc
xchg
jle
sbb
daa
add
addr16
pop
and
cld
jl
sub
push
mov
pop
sbb
stos
shll
pop
fisubrl
or
xor
push
jb
mov
rorl
movsb
inc
aad
mov
jge
mov
inc
rorl
shr
arpl
out
mov
and
push
mov
pop
push
add
out
fistpll
enter
adcl
xchg
sub
pop
ret
inc
add
sbb
mov
jmp
mov
pop
out
pop
push
insb
les
call
cli
or
lret
sbb
in
or
adc
cmp
cmp
mov
add
imul
xchg
clc
enter
cmp
adc
or
push
dec
sub
sbb
pop
jae
insb
lahf
xchg
addb
pop
lds
das
cmp
js
inc
xor
jg
mov
stos
lcall
push
lock
jno
ljmp
into
cmp
mov
subl
aam
xlat
call
es
int
repnz
icebp
sbb
push
jne
movsl
mov
ror
ficoms
pushl
into
pop
inc
adc
daa
out
sbb
add
dec
fsubrl
arpl
inc
mov
push
bound
mov
popf
ljmp
ficoms
sub
or
pop
adc
rcl
in
ljmp
adc
xor
add
out
sar
std
push
or
das
inc
aam
mov
jge
pop
pop
fildl
adc
out
test
mov
add
sub
cmpl
enter
notb
scas
cmp
ja
jge
push
mov
pushf
mov
icebp
call
cmp
pusha
mov
xchg
test
push
ds
lret
je
mov
adc
addl
and
aad
or
in
cmc
xchg
fsubrs
jmp
mov
xchg
lds
push
or
xchg
cltd
or
cwtl
mov
nop
inc
out
adc
xchg
out
stos
mov
inc
jge
or
pop
fstpt
pop
repz
subl
mov
xor
je
pop
jle
lahf
into
add
test
addr16
dec
sbb
mov
push
int
add
push
fmulp
or
pop
test
rorl
jnp
pop
popf
pop
shrb
in
mov
sub
into
jmp
cmp
xlat
stos
ret
cltd
dec
fildll
loopne
stos
xchg
mov
retw
sbb
mov
pop
xor
xchg
push
hlt
loop
je
xchg
fidivl
push
xor
fs
xor
xor
jno
adc
popf
sbb
loope
test
push
fcomip
sbb
out
sbb
push
dec
lret
or
jae
mov
jl
ds
xor
das
mov
in
jne
jnp
pop
test
jle
int
pop
ret
popf
and
cmpsb
dec
sar
dec
lea
pop
adc
ljmp
daa
call
push
mov
dec
sub
jo
into
pop
les
sahf
scas
jns
inc
mov
cmp
pop
rcll
mov
outsl
sub
test
cmpsl
xor
add
loope
inc
insl
push
xchg
pop
repz
or
adc
popl
andb
ret
into
aas
lcall
mov
or
cmp
jnp
in
cmpsl
sub
dec
push
vxorps
imul
pop
les
mov
call
fcomps
mov
iret
push
pop
jae
jbe
or
cmpsb
pop
test
movsl
pop
iret
lods
push
jne
cmc
mov
test
xor
push
clc
scas
sub
sub
jmp
or
dec
mov
andb
jo
iret
rcr
xor
push
nop
jecxz
dec
call
lret
sub
inc
xchg
jge
loopne
movsl
xchg
mov
dec
dec
out
into
and
push
and
mov
sbb
adc
adc
les
xchg
mov
in
adc
xchg
mov
cmp
sub
push
lahf
cltd
in
jbe
mov
addr16
lods
push
push
inc
mov
incl
idivl
js
cmpsl
pop
dec
jge
sub
int
aas
jo
jb
call
jmp
pushf
leave
jle
test
adc
int
rcr
test
push
pop
icebp
out
shll
xchg
sbb
inc
test
jo
xchg
xchg
lods
data16
cmc
not
mov
js
xchg
loope
inc
adc
cmp
sti
inc
jmp
clc
mov
pop
sbb
xchg
xchg
mov
repz
or
imull
mov
outsl
and
add
lods
pop
pop
pushf
push
lods
movsb
stos
mov
xor
dec
dec
mov
mov
push
adc
adc
push
pop
imul
dec
mov
xchg
es
jg
xor
divl
or
push
mov
or
insb
and
jb
sti
mov
gs
popf
jg
push
and
jno
popf
loopne
outsl
gs
pop
jle
mov
sbb
sti
xchg
hlt
rcrl
aas
sub
dec
jnp
lods
pop
adc
sub
xlat
dec
xchg
ret
lods
adc
mov
mov
mov
and
xor
iret
mov
and
sub
inc
mov
add
ret
inc
xor
xor
cs
jno
movl
rorb
pop
loopne
hlt
sbb
enter
fstpl
sti
push
dec
in
cmp
and
je
iret
and
repnz
xor
popa
push
lahf
mov
or
cmp
cmp
sub
dec
movsl
xorb
movsb
sbb
pushf
dec
sbb
sbb
mov
mov
mov
xchg
inc
xlat
push
jae
aaa
cmp
push
dec
inc
aaa
lods
ficoms
jns
daa
hlt
and
push
dec
pop
xlat
lcall
jle
addr16
sbb
rcll
dec
jnp
call
lahf
adc
push
cmp
xchg
sbb
push
fiadds
dec
arpl
or
test
sub
sub
mov
or
or
sub
cmp
jb
test
fisubs
fs
push
stos
cltd
adc
in
repz
lock
mov
mov
les
sub
lcall
push
adc
inc
inc
or
shll
mov
push
lock
ret
pop
std
andl
push
xchg
scas
adc
xor
mov
lods
popf
sub
lret
testl
ljmp
mov
lods
imul
cmpsl
adc
xor
mov
popf
pop
jae
adc
pop
mov
sub
fisttps
mov
push
sub
sub
cmp
or
sbb
pop
dec
xor
cwtl
push
mov
stos
push
shrb
xor
dec
cmp
loopne
push
mov
pop
cltd
nop
scas
fldenv
fstpl
ds
cmpl
jecxz
inc
outsl
cld
xor
pop
add
mov
mov
lods
jno
xchg
add
int3
push
jbe
cltd
and
sub
loopne
rorl
mov
imul
jns
jg
imul
mov
aad
adc
popl
adc
xor
iret
jle
fsin
loopne
adc
push
cmp
sbb
je
int3
jo
in
scas
scas
jnp
lea
mov
ret
jecxz
clc
out
cwtl
cmpsl
or
pop
add
inc
push
pop
push
xchg
orl
out
call
sub
sub
pop
jl
out
cmpsl
fisttpl
inc
orl
pop
adc
in
scas
jmp
dec
in
icebp
inc
inc
cmp
cltd
shlb
sub
inc
jb
lods
in
sbb
in
pop
ret
loope
add
lcall
lret
fcomps
sbbl
mov
ja
leave
lods
adc
xor
negl
and
fs
and
adc
imul
fwait
mov
xchg
or
jb
in
ret
shld
mov
adc
movsb
pop
xchg
gs
push
cmpsb
xor
jp
jl
pop
sbb
flds
insb
jae
dec
es
xchg
icebp
clc
push
xor
inc
fs
xchg
imul
dec
pop
mov
mov
out
sbb
stos
movsb
cmp
outsl
sub
jo
pop
mulb
jecxz
mov
cmp
outsl
aaa
lock
lods
inc
aaa
mov
mov
cwtl
cmpsl
inc
xor
shr
filds
jg
or
cmp
into
test
dec
pop
pushw
call
je
imulb
sub
cmp
pop
ds
sub
or
pop
cmp
sub
xchg
out
lds
or
jmp
jge
ds
loope
rcrl
lret
daa
movsl
xlat
fdivr
push
adc
xchg
fnstsw
lods
mov
jle
and
and
sbb
stos
mov
add
lcall
mov
lret
leave
clc
fwait
pushf
dec
jo
aaa
lds
loopne
mov
jo
aas
sub
pusha
jnp
pop
enter
out
loopne
insb
lds
pop
add
add
movq
sub
or
cli
jmp
or
mov
mov
push
nop
mov
les
adc
movsl
rcrl
adc
cmp
sbb
jp
mov
in
pusha
cld
je
xchg
stos
lret
pop
fwait
daa
xorl
inc
call
fbstp
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
jg
dec
out
imull
daa
lahf
aaa
out
inc
call
fbstp
xchg
xchg
xcrypt-ctr
cmpsl
pop
mov
jg
dec
out
imull
daa
lahf
aaa
out
inc
sti
push
iret
fidivs
xchg
xchg
push
cmpsl
sbb
dec
out
divl
daa
mov
out
inc
out
push
iret
addr16
ja
xchg
cmp
sbb
sub
les
hlt
jecxz
popf
stc
mov
jno
push
or
fs
jp
dec
and
xor
les
hlt
ljmp
shrb
cmp
sbb
jnp
dec
and
xor
fnstsw
in
ljmp
scas
sub
jp
jg
push
or
push
xor
mov
movsb
mov
lods
push
and
pop
loop
adc
add
ja
cld
icebp
lahf
mov
les
jne
movsb
ljmp
dec
xchg
mov
in
cmp
aam
int3
push
pop
sarb
mov
xchg
test
xchg
inc
das
push
sbb
lahf
mov
icebp
lods
leave
and
jno
lcall
addb
fisubl
stc
cmp
jp
mov
shll
inc
aas
sub
sbb
adc
lods
push
fsubrl
mov
xchg
int
push
cli
add
ja
mov
cmp
mov
gs
push
jno
outsb
movsl
lret
sub
ds
fwait
jo
mov
hlt
lea
pop
xor
mov
hlt
ljmp
lods
sub
or
insl
push
jp
dec
ds
xor
int3
sbb
cmc
movsl
enter
sub
jns
pop
adc
popa
cmp
das
dec
sub
lods
into
mov
popl
xchg
pop
xor
sbb
je
adc
inc
xor
les
mov
mov
xchg
lret
mov
inc
cmp
sbb
jp
dec
and
xor
les
hlt
ljmp
mov
inc
cmp
sbb
jp
dec
and
xor
fcmovnb
pop
arpl
idivb
push
sub
adc
enter
dec
in
sub
xor
in
cltd
imul
xor
inc
hlt
mov
and
sub
pop
mov
movsl
mov
jp
pop
fwait
and
or
sbb
sbb
mov
mov
js
mov
dec
xchg
adc
imull
roll
or
push
scas
adcl
test
xchg
pop
xchg
xor
ss
mov
and
dec
lods
xor
pop
cmp
adc
js
and
sbb
fsubr
jnp
cmp
outsl
jle
std
sbb
mul
mov
adc
ljmp
jg
test
push
and
stos
aaa
into
popa
stos
scas
rorl
insl
arpl
int
dec
dec
out
popa
pop
cs
mov
adc
add
lret
ss
stos
sub
push
stc
in
mov
xchg
jbe
mov
inc
insb
mov
loopne
ror
mov
mov
mov
test
mov
and
push
je
push
mov
or
fisubrs
outsb
mov
jmp
inc
or
cmova
push
sub
fsts
push
and
xor
out
pop
rolb
push
xor
popf
mov
cmp
pusha
test
mov
scas
inc
mov
mov
lea
pop
int3
popf
mov
sahf
mov
push
repz
push
mov
pop
jg
cmp
push
push
inc
inc
pop
adc
xlat
pop
sub
push
mov
jo
ror
mov
jp
test
insb
icebp
lods
mov
aad
dec
iret
cs
pop
jl
dec
add
mov
push
icebp
push
std
mov
mov
fnstsw
push
outsl
adc
pop
add
imul
sbb
dec
cs
es
jnp
bswap
enter
xorb
cmpsl
test
mov
inc
movb
pop
xchg
dec
xor
or
pop
pop
clc
sub
or
jg
push
xchg
xchg
mov
xor
xor
aam
les
mov
mov
scas
jns
and
lods
leave
mov
cmovle
cmp
inc
mov
jno
into
out
pushf
clc
mov
test
mov
loopne
xchg
iret
fnstenv
and
fbld
sbbl
push
pusha
xchg
mov
mov
movsl
adc
leave
out
sbb
pop
sub
movsb
insl
or
mov
dec
mov
xor
inc
cmp
and
xchg
into
shlw
push
add
xchg
sub
push
daa
jecxz
pop
adc
test
add
and
outsl
and
cmp
cld
out
or
inc
xchg
mov
daa
into
mov
adc
fwait
jg
pop
add
inc
jne
dec
mov
add
push
mov
in
xchg
and
test
pop
lcall
lret
movsb
mov
push
xchg
test
add
mov
add
outsl
stos
rorb
adc
jecxz
cmp
and
cli
repnz
insb
and
les
scas
add
scas
ljmp
subl
rcl
pop
pop
jbe
sti
push
les
or
andl
popf
mov
int3
shll
mov
mov
lret
sub
outsl
mov
push
lahf
cmp
xchg
mov
sub
or
push
negb
pop
sbb
arpl
rorl
shlb
dec
add
lret
jno
sub
mov
cmpsb
add
inc
adc
pop
rdtsc
outsb
mov
lcall
in
subb
loop
inc
out
fisttpl
or
mov
popa
adc
jmp
mov
mov
sbb
mov
xchg
cwtl
ja
insl
pop
dec
cmpsw
sub
divb
mov
les
shrl
in
adc
adcl
lret
leave
adc
fadd
mov
fstpl
mov
jp
push
mov
fists
sub
sub
xchg
cmp
sbb
cmp
ror
mov
push
mov
ficoml
test
or
cmpsl
xchg
mov
xor
subl
mov
jge
cli
xor
jge
not
jmp
leave
movsl
jle
repnz
push
sub
and
sub
divl
sub
std
stos
and
push
sub
xor
ja
lock
xor
rclb
mov
mov
push
test
mov
testl
pusha
cmp
cs
dec
inc
stc
push
inc
pop
dec
stos
mov
xor
movl
adc
mov
fmull
nop
ret
int3
cli
push
sub
lret
mov
sub
aad
inc
daa
in
ja
lret
test
push
mov
loope
mov
or
ret
pusha
call
add
pop
pop
cmp
inc
rorl
ret
push
mov
add
in
xorl
push
lret
repz
adc
jne
inc
cmc
out
icebp
push
sbb
fucom
mov
loope
jg
xor
or
imul
inc
iret
dec
sahf
cmc
out
push
push
mov
ret
aad
test
xchg
ret
sbb
loopne
pop
insb
add
stos
adc
mov
sarb
setnp
cwtl
testb
pop
xchg
imul
mov
jmp
arpl
bound
orl
mov
imul
inc
push
popa
sbb
ljmp
pop
sbb
mov
cmpsl
pop
jmp
ja
inc
imul
push
mov
je
test
ja
iret
add
cld
repnz
inc
or
fdiv
je
add
movsb
pop
inc
mov
test
adc
xchg
sub
adc
ja
repnz
lahf
in
push
scas
jecxz
cmp
xchg
mov
fs
jmp
das
cld
out
xor
lods
xor
xor
inc
stos
xor
out
std
xor
and
sub
inc
push
push
jecxz
push
sbb
stos
jne
sbb
sarl
inc
or
inc
in
lahf
cwtl
aaa
jns
xchg
push
aas
mov
fadd
scas
enter
inc
and
aas
clc
out
pop
push
xchg
inc
popa
shr
cmp
call
dec
dec
ja
xchg
insl
ficomps
test
push
stos
jae
fnstcw
xchg
inc
add
jp
cmp
stos
cmp
iret
clc
add
lcall
jle
xchg
fs
xor
ficompl
dec
std
and
push
nop
and
pop
adc
sbb
rcll
loop
or
out
jle
rol
movswl
sbb
adc
mov
inc
cltd
outsl
jnp
jecxz
jb
mov
jmp
dec
mov
insl
and
ss
dec
into
aad
push
in
in
jl
cwtl
xor
mov
adc
mov
inc
popa
sbb
out
push
test
notl
shlb
pop
cwtl
daa
stos
lahf
sub
mov
mov
jg
push
pop
aam
pop
pop
in
lods
xchg
xlat
data16
cld
push
push
jne
cmc
sbb
dec
lds
out
jp
lret
sbb
nop
sbb
add
jl
imul
and
push
mov
mov
loop
mov
movsl
and
mov
or
daa
gs
add
pop
pop
in
in
shll
test
movsb
leave
mov
sub
lret
loop
add
imul
js
fnsave
adc
mov
sbb
movsb
add
pop
mov
movsb
push
pusha
xchg
jne
clc
and
pop
cmc
and
mov
mov
mov
out
adc
pop
stos
imul
add
repnz
dec
lcall
pop
mov
push
and
xchg
sub
daa
inc
xor
push
cmp
jno
ss
or
mov
mov
mov
cmp
ret
ljmp
mov
push
sbb
insl
test
and
mov
xchg
xchg
ss
dec
cmp
aas
icebp
xor
pop
fidivs
mov
push
dec
mov
ficompl
movsb
mov
ret
inc
push
cwtl
in
xchg
mov
mov
cli
int
push
and
dec
and
jo
frstor
shlb
imul
cld
add
cmp
add
cmp
or
test
pop
je
sbb
or
add
xchg
loopne
hlt
ficoml
les
pusha
dec
xchg
loope
lcall
xchg
bound
pop
stos
sbb
mov
jmp
pusha
stc
mov
cmp
loopne
test
dec
mov
push
jnp
inc
std
and
addr16
pop
lahf
mov
mov
adc
daa
mov
arpl
inc
icebp
cmc
dec
cmp
out
dec
inc
test
pop
push
xor
and
leave
push
int
lea
mov
shr
inc
sbb
mov
movsl
rorl
fistpll
repnz
inc
push
or
iret
insl
inc
enter
pop
add
outsb
adc
nop
cwtl
mov
fsubs
push
jns
cli
lcall
cmp
ret
sub
decb
mov
hlt
ret
dec
into
cmp
xchg
int3
out
or
push
js
push
call
xchg
enter
or
or
jp
imul
out
xchg
pop
inc
xchg
cmp
jnp
sbb
xor
call
or
xchg
adc
dec
pushf
xchg
lods
lock
ficoml
xor
incb
loop
nop
arpl
dec
pop
fwait
jmp
push
sahf
popf
dec
hlt
adc
sub
add
fcoml
jns
imul
inc
scas
and
xor
ficompl
stc
add
pop
sbb
or
rcr
lcall
sbb
addr16
sbbl
mov
out
mov
xchg
arpl
pop
insl
rep
ljmp
jg
pop
rcrb
fisttps
sbb
jecxz
iret
scas
push
or
xchg
dec
fistpll
push
inc
cmp
insl
mov
enter
test
pop
mov
cmp
fdivrp
pop
lods
leave
sets
dec
test
scas
pop
pusha
aad
or
jns
xchg
ror
jmp
aam
mov
push
out
inc
adc
jne
xlat
imul
adc
inc
mov
and
je
popf
out
scas
ss
cld
xchg
and
inc
adc
push
test
adc
addr16
mov
cli
pop
adc
bnd
pop
sub
xorb
rcrl
inc
lods
aam
mov
cmpsb
test
daa
into
xchg
push
mov
dec
add
out
test
push
xor
add
and
test
dec
cmp
or
jp
or
dec
fstps
insl
xor
add
xchg
sbb
fisttpll
pop
arpl
test
mov
or
fisubs
pop
les
or
inc
xor
add
xor
movsb
popa
dec
je
call
ffreep
push
push
push
mov
stos
not
scas
mov
pop
jl
data16
ja
push
lahf
or
push
out
mov
lret
cmp
cli
xor
jle
mov
mov
sti
mov
pop
and
xchg
fsub
or
ja
sti
pop
jnp
mov
jp
sub
mov
adc
aaa
adc
pusha
mov
jbe
or
mov
adc
int3
mov
cmp
xchg
mov
int
lcall
xchg
cmp
pop
push
jmp
les
data16
frstor
dec
jo
rcpps
adc
nop
sub
insb
pop
in
lock
imul
push
mov
jp
and
jle
sahf
fldl2t
cmp
pop
dec
cmp
loop
out
test
fisubs
cmp
pop
cmp
daa
mov
std
inc
add
stos
stos
cmc
adc
shl
xlat
inc
and
add
cmp
jae
push
push
mov
std
movsb
add
fstpt
xor
xor
les
rolb
add
inc
mov
xor
sbb
hlt
dec
repz
call
pop
fs
lods
outsl
add
mov
ss
mov
repz
rorl
movsl
loop
pop
lcall
xchg
push
or
pop
jmp
lret
sub
outsb
cmp
out
mov
cmp
aad
add
daa
xchg
cmc
negb
push
add
mov
shrb
push
data16
pusha
mov
js
mov
fistpll
sbb
xchg
pop
push
idivb
adc
and
mov
ret
push
adc
adc
iret
ljmp
push
aas
and
popa
xchg
mov
push
stos
inc
fldenv
ljmp
or
mov
xchg
pop
pop
push
aad
test
shrb
fdivs
das
shr
or
dec
inc
xor
mov
inc
fnstenv
mov
in
mov
lock
cmp
mov
mov
lahf
psllq
in
xchg
mov
add
push
pop
sbb
dec
add
add
imul
lds
ficoms
mov
jbe
sbb
lret
int
mov
sub
mov
rorb
fs
popa
adc
sahf
imul
out
in
jo
mov
jecxz
sub
dec
fildll
pop
push
sub
mov
subb
repnz
orl
into
xorl
rorb
shll
and
out
dec
mov
lock
pop
or
adc
lret
push
add
and
das
inc
lods
enter
sub
or
sti
sahf
jns
add
fidivs
and
xchg
int3
testl
xchg
nop
push
rcll
ret
loop
repz
xchg
scas
pusha
mov
xchg
imul
dec
ljmp
pop
mov
movsb
mov
fimull
cmpsb
iret
inc
and
gs
add
jecxz
adc
in
enter
inc
push
sbb
stos
inc
jbe
pop
cmp
xchg
adc
lock
adc
pop
sbb
xchg
or
add
shr
xor
test
popf
xlat
pop
ja
popa
xlat
sti
xchg
mov
cli
jl
cvtpi2ps
mov
rorb
jae
add
mov
inc
out
cld
out
cmpsb
roll
and
adc
popf
ja
push
sbb
je
push
popf
push
inc
cwtl
test
mov
jne
sti
stos
push
ret
hlt
call
movsl
out
enter
push
decb
outsb
cli
push
inc
jl
sub
sub
dec
frstor
xchg
xor
test
or
xchg
xchg
pop
lea
aas
rcrl
insl
lahf
cmpsl
or
lods
and
add
in
rclb
cs
cltd
js
and
mov
mov
aad
aad
lock
mov
xorb
jae
jne
dec
xchg
mov
bound
cmp
xchg
adc
sub
push
cmpsl
cmp
and
ss
pop
mov
push
or
int3
insb
adc
pop
push
lea
dec
stos
mov
hlt
xchg
jnp
mov
aas
fld
xlat
out
sbb
lea
call
es
roll
jae
jecxz
dec
push
mov
mov
popa
pop
or
inc
adc
in
mov
mov
popa
out
cmpsl
rorl
rcrl
or
cmp
lret
jg
outsb
mov
sbb
xor
aaa
adc
sub
cmp
daa
inc
xchg
and
test
mov
push
hlt
pop
fwait
pop
nop
sbb
push
pop
imul
xor
lods
sbb
test
test
add
pop
inc
inc
mov
jmp
loopne
cli
aaa
ja
cs
aaa
cld
outsl
mov
or
out
xchg
mov
test
test
mov
ds
shll
push
pop
pop
sbb
ja
cmc
sbbb
mov
mov
adc
add
bnd
aaa
cmove
sub
push
inc
out
jne
jnp
arpl
mov
pop
pop
xchg
adc
xor
test
cmp
inc
mov
in
ljmp
push
add
stos
and
mov
sbb
mov
and
jle
enter
jns
add
mov
adc
aas
sub
sbb
sub
pushf
pop
inc
sub
mov
or
es
mov
fcompl
cmp
sub
in
in
xor
mov
test
in
mov
and
pop
push
mov
mov
imul
out
xor
negb
mov
rclb
das
lahf
fidivrs
ss
lds
mov
dec
mov
fcoml
lcall
push
scas
das
fidivrl
add
mov
fs
sbb
or
ss
adc
push
ret
movsl
pop
fucom
push
icebp
and
pop
pop
dec
push
dec
xlat
fcmovnbe
mov
stc
pop
insl
or
xchg
lods
mov
jge
stc
ds
or
xchg
sub
outsb
iret
shrl
jmp
ljmp
adc
mov
es
mov
test
mov
push
int
jb
inc
orl
push
jg
fisubrl
xchg
mov
movsl
scas
insb
popf
popf
loopne
mov
int3
cmp
lret
cmp
fcoms
imul
fisubl
jno
cmp
adc
popf
mov
xchg
inc
fldt
adc
add
ja
insb
in
lods
mov
ja
inc
outsl
xchg
fs
mov
adc
push
push
das
test
lcall
or
arpl
cmovne
xchg
add
or
pop
add
orb
aaa
push
inc
repnz
stc
test
mov
push
int3
pop
inc
sbbb
sarb
loope
rcl
pusha
imul
in
aaa
dec
cltd
inc
sub
clc
fwait
dec
mov
nop
loop
mov
add
xchg
mov
mov
inc
inc
pop
fimull
mov
mov
add
inc
popa
fldpi
jnp
mov
in
push
out
fcoms
in
mov
inc
push
mov
sbb
fsubrp
and
scas
jecxz
and
aas
out
iret
jl
in
lar
mov
mov
hlt
add
fwait
popf
dec
mov
inc
add
push
sub
lock
push
push
roll
cltd
pop
sbb
fdivrs
sbb
hlt
imul
and
inc
sbb
xchg
ss
mov
and
subb
mov
pop
in
mul
lods
inc
test
pop
lods
mov
xor
jg
and
adcl
cmp
dec
das
adc
push
nop
popa
bound
mov
fiaddl
scas
popw
mov
or
lahf
add
sbb
xor
cmp
imul
lahf
mov
inc
aas
xchg
mov
out
inc
mov
xchg
push
loope
cmp
stos
pushf
xor
xor
lcall
add
push
lret
cmp
cmp
add
inc
aaa
pop
mov
test
dec
sub
imul
xorb
enter
shl
insb
mov
scas
sbbb
xchg
adc
mov
cmp
out
sub
flds
stc
jge
fwait
sub
icebp
dec
imul
rdmsr
repz
jnp
repz
cmpsl
cli
ja
and
es
or
loope
mov
push
test
lret
pop
mov
jmp
dec
jmp
sbb
mov
cmpl
jle
push
sub
xchg
xor
mov
into
pop
push
clc
loopne
movsb
loop
leave
cwtl
push
adc
insl
rorl
xchg
and
ds
movsb
pushf
inc
insb
inc
inc
outsl
pushf
aaa
cwtl
pop
sub
jbe
mov
cmpps
add
pop
xor
and
fcmovne
test
in
xchg
jno
inc
in
and
add
out
fildll
sbbb
das
jg
hlt
mov
aaa
sub
repnz
xchg
jae
lods
cmp
xor
and
sub
inc
pop
xchg
or
xlat
push
dec
nop
adc
dec
sahf
lods
in
pop
imul
mov
push
inc
pop
jmp
out
outsl
loope
inc
inc
xchg
xor
xor
flds
cmp
xchg
aad
rorl
xlat
mov
jae
fiaddl
das
scas
scas
dec
push
sub
push
icebp
les
mov
inc
insb
mov
je
xchg
popa
add
push
scas
testl
jl
sbb
mov
add
sbb
outsl
push
test
bound
adc
jmp
push
hlt
add
dec
jae
mov
jg
dec
jns
mov
mov
not
mov
lcall
movsb
fidivl
sbb
jp
dec
and
xor
les
hlt
ljmp
mov
inc
cmp
sbb
jp
dec
and
xor
les
hlt
ljmp
mov
inc
cmp
sbb
add
adc
and
stos
sarb
ljmp
je
inc
sbb
sbb
pop
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
jmp
xchg
flds
sti
mov
jns
dec
pop
pop
pop
sub
sbb
inc
jmp
xchg
flds
mov
cltd
mov
dec
push
push
pop
sub
or
push
sbb
mov
cmpsl
rcll
mov
jo
pop
add
jb
imul
xor
cmp
xlat
leave
les
or
pop
ret
sbb
dec
add
cmp
shrl
push
mov
std
or
pop
or
in
daa
push
fdivs
sub
or
out
push
cmpsl
add
inc
push
cmp
add
aaa
xchg
jno
aam
sub
sbb
add
mov
daa
loop
js
jl
cmpsb
adc
cmp
mov
push
mov
imul
test
ja
aas
or
mov
es
push
mov
xchg
dec
xchg
aaa
hlt
and
or
insb
pushw
or
mov
leave
xchg
flds
mov
add
aaa
popa
daa
push
pop
inc
pop
xor
adc
add
lods
fidivl
cltd
mov
inc
adc
ja
add
and
cwtl
lret
cmpsb
fildll
mov
sub
push
dec
jo
push
sub
push
icebp
jg
jge
mov
xchg
hlt
movsl
repnz
loope
mov
imul
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
clc
stos
inc
lds
int
jmp
mov
push
es
roll
jb
lahf
adc
cmpsl
pop
mov
jns
fcoms
movsl
mov
fistpll
pop
loope
lcall
fimull
cmp
inc
test
call
ljmp
rol
add
pop
sbb
xchg
jns
fsub
xchg
push
dec
ljmp
imul
xchg
int
jp
and
jns
ja
inc
pusha
test
in
xchg
clc
mov
mov
aad
sub
cld
adc
stos
inc
aam
cltd
daa
mov
jne
push
pop
push
nop
adc
je
ljmp
add
ffreep
js
pushf
xchg
mov
lret
xchg
inc
negb
adcl
dec
ficoml
pusha
inc
xor
cmp
push
fistps
orb
or
daa
rcr
test
sbb
jae
cs
sti
sbb
movsl
fs
or
dec
stc
lods
pop
jne
fildll
aaa
shlb
lds
mov
push
jl
test
scas
mov
and
jge
xchg
icebp
cwtl
add
add
jmp
frstor
inc
push
push
addl
push
ja
sbbb
jg
push
push
xor
clc
fs
dec
test
int
adc
fwait
inc
pop
mov
mov
mov
xor
dec
dec
hlt
lods
mov
leave
xor
repz
ret
imul
mov
jg
add
shlb
leave
mov
xchg
mov
sub
lahf
pop
inc
adc
xchg
push
jb
outsl
sbb
inc
outsl
mov
arpl
sbb
mov
xchg
js
cwtl
lret
add
repnz
ficoml
cmpsb
in
outsl
sub
pop
cmpsl
xor
mov
jl
adc
sti
les
fistpll
push
cmp
cld
arpl
adc
adc
out
xchg
mov
jb
push
hlt
repz
push
lock
aad
or
scas
jne
xchg
arpl
sarl
mov
shll
xor
pop
sub
or
pop
sbb
daa
fnsave
adc
or
jbe
push
cmp
mov
test
cmp
inc
js
add
dec
test
aad
lds
scas
ret
pop
inc
data16
add
stos
ljmp
jns
lock
and
rorb
jl,pn
and
mov
cmpsb
pop
inc
jecxz
add
xchg
imull
push
sbb
test
fwait
jno
idivl
and
cwtl
cwtl
fldcw
roll
dec
fs
dec
in
add
mov
and
sbb
daa
mov
add
mov
lea
xchg
lds
dec
imul
cmpsb
stos
xor
out
adc
sub
jae
push
leave
out
es
mov
cmp
push
mov
or
push
cs
jbe
rolb
popa
lcall
outsl
je
pop
dec
jb
dec
or
dec
pop
aaa
pop
dec
jns
sbb
repnz
je
das
std
es
mov
pop
out
push
ret
jmp
rcr
adc
cmc
out
add
add
mov
pop
sbb
pop
inc
cmp
fistl
cmp
mull
inc
je
mov
mov
fstl
ss
inc
jl
mov
push
cmpl
jmp
lock
dec
cmpsb
mov
les
pop
pop
nop
ja
icebp
enter
cmpsb
xor
cwtl
fcoml
pushf
mov
xchg
mov
mov
xchg
or
mov
hlt
movsl
test
sbb
pusha
add
mov
scas
add
les
mov
aaa
and
fcmovbe
add
lcall
movsb
xchg
xorb
jnp
push
dec
das
cmpsl
xor
inc
add
sbb
imul
mov
sub
leave
aam
sbb
sub
dec
in
or
xchg
pop
movsl
push
adc
stos
cld
rorl
enter
shll
subl
inc
stos
sub
add
cmp
cmp
mov
xchg
xchg
sub
lds
xchg
cmpsb
fmuls
push
jle
ret
aas
jmp
rcll
dec
fnstenv
inc
jbe
int
stos
pop
in
inc
sub
rorl
cmpsb
cld
imul
cld
push
les
xor
lcall
adcl
int3
mov
xor
jno
ss
adc
push
icebp
mov
shl
lret
sub
movsl
test
xchg
mov
push
mov
sbb
out
add
data16
insb
cld
lahf
xor
sub
psubq
out
arpl
inc
fwait
sbb
fidivs
xchg
loopne
pop
jp
mov
jae
clc
pop
int3
in
sti
data16
ficoms
jne
jg
and
add
jecxz
push
dec
call
ss
cmp
xchg
in
sub
mov
and
jae,pn
shll
cmp
or
or
xchg
xor
add
addr16
lret
xorl
cmpsl
jae
push
sub
sub
cmc
sbb
sti
mov
mov
mov
or
loop
pop
cmp
xchg
lret
insb
sbb
sub
push
imul
incl
lret
test
adc
cld
cmpsl
pushf
stos
xchg
ljmp
jl
sbb
clc
inc
add
lret
mov
and
fistl
mov
jns
inc
stos
push
pop
fsub
or
ficomps
shld
dec
sbb
repnz
or
movsb
sub
cmp
cli
fs
pop
movsl
jle
hlt
cwtl
ss
aad
fs
xor
je
xchg
sbbl
orps
inc
and
gs
aam
sarl
sub
push
insl
cmpps
fcmovu
sbb
je
loop
push
scas
dec
add
fcmovnbe
jnp
daa
adc
aaa
and
subl
out
cli
and
sbb
and
sti
mov
in
xor
fstps
xchg
fcmovnbe
popf
xchg
jge
cmpsl
push
rorl
fdivrp
jle
dec
stos
scas
sti
jbe
lds
xchg
xorb
out
xor
mov
aam
jne
push
orb
sbb
xlat
push
sarl
insb
and
pop
aad
mov
jns
out
aad
mov
jnp
add
add
int
xor
cmpsl
jbe
out
movb
icebp
mov
lods
addl
dec
push
inc
lcall
sbb
pop
jns
pop
or
icebp
cmp
addr16
push
jle
mov
ja
cmp
orl
jecxz
xchg
add
jae
fsubs
iret
scas
aaa
in
ja
and
dec
mov
loopne
xor
int
push
ss
pop
lods
mov
xor
test
sub
push
aas
jbe
push
and
mov
jo
push
shll
add
test
int
jl
scas
push
inc
lahf
inc
push
loope
out
push
idivb
pusha
out
outsb
sbb
lahf
cmp
popf
dec
out
mov
and
push
and
adc
or
aam
xchg
pop
jge
xor
mov
pop
sub
pusha
pop
out
and
push
mov
push
aad
scas
and
ss
rorl
test
mov
cmp
xchg
bound
pop
stc
sub
cmpsl
movsb
fnstcw
xchg
daa
test
mov
cmc
inc
insl
push
jae
sub
or
jle
lock
push
je
inc
jmp
mov
add
jns
pop
push
adc
push
push
cmp
mov
in
out
js
sbb
ljmp
sti
mov
xchg
pushf
fmuls
sahf
rcrl
fwait
jmp
stos
pop
mov
jo
xchg
mov
movsl
in
mov
inc
out
inc
inc
aam
fldcw
lcall
push
and
cwtl
test
cmpsb
push
jns
repnz
push
push
mov
add
cmp
in
mov
sub
fbstp
incb
jl
adc
ja
or
sub
cmpsb
aaa
adc
jmp
adc
jmp
popa
mov
sbb
imul
add
inc
sbb
aaa
mov
xor
inc
cld
and
cld
in
jno
cmpsb
das
jae
xchg
mov
push
xlat
in
dec
lcall
daa
outsb
sub
inc
sub
int3
lds
jb
cld
dec
xor
pop
aas
xor
daa
gs
add
lret
xor
push
cmp
icebp
insb
dec
std
adc
xchg
push
mov
push
inc
or
pusha
jg
call
mov
in
into
dec
je
out
cltd
ss
loope
fs
adc
mov
out
sbb
call
outsl
and
xchg
ja
sbb
pop
cmp
call
jb
push
pop
pop
jge
or
xor
pop
push
sbb
xchg
mov
push
in
fcmovb
sub
xor
in
or
adc
insb
sbb
ficoml
cmp
xchg
xchg
pop
or
xor
in
das
out
mov
fwait
hlt
sub
fisubs
shlb
inc
cli
xor
shlb
test
xor
push
test
inc
fndisi(8087
push
rcll
loope
clc
pop
jbe
fisubrl
lahf
mov
jnp
jmp
in
mov
bound
push
ja
sbb
mov
lea
xchg
std
fwait
lock
adc
sub
jle
dec
adc
cli
mov
jge
lds
adc
mov
outsl
or
xchg
push
and
cmp
or
test
sahf
subl
sub
fstl
jnp
fisubrl
inc
mov
sub
dec
stc
int3
jmp
fldenv
mov
les
and
unpcklps
inc
cmpsl
dec
mov
mov
inc
xor
mov
push
shrb
popf
adc
aas
xchg
mov
or
xor
mov
mov
sbb
icebp
sbb
cmpsb
mov
mov
fs
pop
xchg
inc
mov
movsl
sarl
fsubl
cmpsb
pop
insb
lret
mov
mov
shll
adc
jle
fdivrs
loopne
mov
push
je
mov
scas
jae
sbb
test
inc
sub
paddsw
int
lds
aaa
xchg
dec
rcll
push
test
out
loope
push
das
popf
jns
leave
aas
adc
xor
aad
push
mov
ja
cmp
dec
push
scas
movsl
std
test
push
shl
outsb
rcrb
push
inc
es
shrb
push
pop
scas
mov
shrl
scas
xor
sub
sarl
scas
pop
dec
cltd
adcb
dec
dec
xchg
mov
sub
dec
jle
jle
or
fdivrl
icebp
repz
mov
sarl
out
fs
pop
jmp
mov
insb
out
mov
shrb
xor
or
push
xor
lcall
cmp
js
push
int
push
decb
pop
lock
mov
push
enter
popa
shrb
pop
addr16
in
addb
sahf
inc
xchg
mov
mov
popf
push
or
in
cwtl
pusha
decb
jns
iret
and
jecxz
in
fcoml
xor
or
sbb
bound
sahf
xchg
push
pusha
enter
stc
sbb
test
in
shll
and
mov
lret
mov
jae
jnp
pop
into
icebp
fcompl
xor
xchg
or
stos
pop
aad
cmpsb
lds
popa
sub
jnp
test
shl
fisubrs
lahf
bound
fistl
mov
xchg
data16
gs
lds
cs
cmp
or
lret
orl
cwtl
push
fdivs
push
xchg
add
push
jns
sub
xor
hlt
and
addr16
ljmp
pop
cmc
pop
aam
push
repnz
out
cli
or
loopne
insb
stos
flds
out
insl
sbbb
rcl
adc
push
enter
mov
sub
fmull
int
dec
cmp
add
push
or
hlt
movb
xor
aaa
xor
jno
mov
inc
and
jne
in
sub
mov
xchg
dec
jnp
movsl
cli
add
mov
aaa
inc
add
mov
adc
jno
xchg
xchg
sub
mov
or
fs
test
rcrb
loop
xchg
decb
or
xlat
pop
cmp
out
mov
mov
push
hlt
push
cmpb
xor
jle
xchg
or
leave
jl
ficoml
ret
repz
or
xchg
subl
mov
push
xor
cmp
test
add
jnp
jle
mov
mov
push
dec
push
sbb
mov
lock
mov
icebp
lods
jno
lods
xchg
and
lods
mov
xchg
sti
and
outsl
xchg
fs
xor
cmp
push
loope
fisubrl
sub
in
fstpl
dec
daa
in
repnz
inc
in
pop
popa
cmc
or
lock
add
jnp
outsl
enter
pop
adc
dec
and
adcl
pushf
cmc
xchg
test
push
add
sarl
mov
ds
mov
xchg
seto
enter
and
inc
mov
aaa
movsl
dec
out
cs
push
adcl
arpl
xchg
scas
and
out
sub
test
andb
gs
out
and
adcl
cmpsb
pop
pushf
mov
cmp
jecxz
xor
jae
rorl
insb
push
insl
xchg
ljmp
jns
les
sbb
jmp
jbe
outsb
cltd
movsb
or
or
test
jae
cmp
les
insb
mov
mov
sub
cmp
push
or
pop
gs
pop
stc
sahf
lahf
cwtl
and
shrb
rol
imul
and
jecxz
test
mov
sbb
cli
fwait
loope
ljmp
jp
mov
rclb
shlb
mov
xchg
and
dec
mov
lea
insb
pushf
push
mov
xchg
test
mov
xchg
in
imul
xchg
shll
jecxz
aaa
push
imul
xor
add
push
sbb
add
test
inc
jmp
dec
sub
dec
and
fdivrs
push
and
out
inc
adc
and
dec
repnz
popa
aas
cmc
mov
scas
leave
push
rol
mov
outsl
fs
mov
and
ds
stos
fcmovnb
loopne
sbb
mov
out
mov
jl
into
gs
lods
and
data16
mov
out
clc
jbe
xchg
dec
and
jle
cmpsl
sbb
dec
jmp
dec
cmp
lcall
mov
mov
jp
mov
mov
xor
fidivl
mov
adc
fucomp
scas
sub
xor
ret
cmp
mov
sub
fwait
sarl
lods
iret
mov
das
xchg
mov
addl
adc
push
hlt
ret
xor
pop
sti
mov
cwtl
aaa
mov
jae
scas
xchg
jo
cmpb
loopne
jge
cmc
aad
inc
pop
cmp
xchg
push
ds
test
cltd
xchg
das
jno
js
inc
ja
pop
rolb
jp
sbb
jb
push
loop
mov
or
jecxz
cld
hlt
mov
cmp
push
inc
jne
iret
jp
or
dec
pop
subl
in
stos
ret
loopne
rcll
ds
popf
xor
ss
lea
push
jnp
or
cmpsl
dec
inc
loopne
pop
fisttpl
sbb
sahf
inc
lds
bound
ds
repz
add
sahf
mov
jne
xchg
ja
scas
insb
or
negb
aas
sub
xchg
xchg
add
xchg
inc
std
lcall
mov
mov
adc
push
and
imul
adc
in
hlt
cmp
cli
sbb
inc
jl
daa
pop
push
divl
dec
cmp
mov
sbb
cmc
out
rcrb
sub
xchg
divb
cmp
cli
dec
mov
int
mov
pop
inc
das
fisubrl
jnp
cmp
pop
ljmp
addr16
std
test
pop
xchg
cmc
jo
rcrl
push
fwait
out
out
pop
shlb
mov
mov
dec
je
add
pop
pop
dec
mov
ljmp
and
jae
cmpsl
push
popa
and
dec
jo
in
aaa
clc
repnz
scas
popl
je
xlat
mov
mov
and
pop
mov
mov
mov
in
sbb
add
sbb
and
push
stos
cwtl
inc
or
ror
and
fs
dec
dec
add
and
add
repz
pop
sbb
lods
adcl
int3
or
popa
mov
pushf
dec
jl
cmpsb
mov
insb
ret
jecxz
mov
test
lcall
dec
ljmp
imul
lods
xchg
stos
popf
aas
adc
or
dec
fisttps
mov
repz
dec
push
lods
jb
stc
mov
xchg
xchg
not
test
push
inc
dec
ljmp
int
lret
out
lret
inc
dec
ja,pn
shr
jge
addr16
fcoms
enter
add
mov
inc
push
rorl
sti
mov
and
dec
or
data16
or
movb
out
mov
outsl
push
cmp
sbb
shlb
add
pop
sahf
aaa
lods
dec
inc
push
pop
rcrl
cmpsb
bound
sahf
fdivs
sbb
in
outsb
mov
jecxz
subl
and
push
sbb
push
jp
imul
pusha
pop
lahf
add
sti
xchg
mov
jns
mov
adc
fisttpll
pop
lret
jge
dec
dec
loopne
or
push
fnsave
mov
lret
or
sub
sub
add
xchg
mov
xchg
jo
shlb
cmp
cmpsl
mov
jecxz
into
nop
jge
shrb
mov
cli
and
sbb
les
pop
out
pop
out
mov
ret
jg
cmpsl
pop
hlt
xor
cmpsw
loope
sbb
sbb
inc
pop
dec
iret
dec
in
dec
adc
cltd
fld
cmpsl
add
scas
sti
pop
test
pop
cmpsl
sbb
sti
adc
sbb
aaa
xchg
xlat
pop
aas
mov
sahf
mov
push
mov
cmc
cmpsb
jg
push
lock
jmp
mov
inc
push
ficompl
mov
push
fwait
std
dec
add
cmc
pop
xchg
jg
mov
mov
fmuls
aad
int3
xchg
lea
sub
hlt
ret
push
sbb
and
add
push
nop
jecxz
and
xchg
inc
lods
cmp
and
adc
aad
clc
out
repz
pushf
mov
or
movsl
cmp
push
test
pop
mov
push
jnp
sbb
jnp
pop
jnp
jnp
in
and
pop
adc
jne
pop
call
push
rolb
out
rolb
outsb
dec
aaa
mov
push
and
add
inc
mov
mov
pop
cmp
ja
pop
mov
or
inc
add
add
ret
idivl
or
mov
dec
push
cs
addr16
addr16
and
testb
push
inc
pop
add
push
xchg
cmpsb
ja
mov
in
push
jns
or
and
add
aam
sub
xor
inc
inc
adc
ret
into
inc
push
mov
aaa
mov
shr
addr16
lea
test
sti
outsb
outsl
sub
aad
mov
jmp
cmpsl
cs
or
cmpsb
push
xor
aas
out
cmp
dec
push
mov
scas
jecxz
test
jg
ja
cmp
and
add
mov
pop
lods
dec
sub
jno
push
add
jg
call
lea
outsl
jb
xor
adc
cli
loop
jmp
test
push
jmp
fnstsw
repz
sub
int3
or
iret
xchg
call
js
cwtl
in
dec
push
cwtl
leave
or
xor
out
mov
movsb
imull
sbb
pop
int
sub
scas
sub
cmpsl
xchg
nop
push
sbb
xchg
xor
add
out
test
insb
idivb
pop
xor
dec
xor
adc
sub
loop
sub
cmp
and
inc
mov
cmp
add
sbb
sub
dec
je
jb
jecxz
cmp
cmpsb
push
mov
or
xchg
sbb
and
and
leave
dec
pop
out
loop
and
lock
mov
call
mul
lds
dec
jg
and
popa
pop
adc
movsb
add
add
mov
push
or
mov
ds
jbe
jp
inc
xor
test
cmpsb
xchg
mov
inc
fwait
push
cld
push
les
sub
shl
sub
setge
mov
test
inc
and
sub
sub
jmp
subb
mov
cli
and
lcall
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
xchg
flds
or
sbb
xchg
aaa
xchg
pop
pushl
mov
fisttpl
pop
add
push
stc
sub
sbb
imul
lret
dec
fstpt
stos
sub
or
jmp
fimull
pop
mov
or
fwait
cmp
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
sti
cmp
inc
aam
stc
fs
mov
and
and
or
in
mov
pusha
sarl
repz
sahf
sbb
insb
mov
pop
scas
cmp
mov
or
xchg
add
lret
push
adc
repz
ljmp
cmpsb
and
adc
idivl
cmp
stos
jmp
cwtl
je
adc
jmp
sti
xchg
pop
mov
test
xchg
pop
xor
mov
sarl
je
push
push
mov
mov
fisubs
push
mov
or
sbb
inc
inc
sahf
je
push
add
jmp
push
sub
arpl
test
fimull
sub
or
fisttpl
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
popl
jnp
and
cmp
inc
out
dec
adc
das
popf
dec
lret
jbe
jg
movsb
imul
fisubs
pop
fwait
jl
sbb
xchg
push
mov
stos
cs
enter
out
adc
lea
lds
mov
sub
sbb
imul
lret
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
sti
imul
push
stc
cltd
sbb
out
lret
pop
mov
xor
jnp
pop
lds
movsb
sbb
xor
dec
cwtl
mov
aaa
data16
test
fwait
lds
cs
adc
or
sbb
mov
or
shrl
fbstp
jae
mov
dec
jbe
test
and
lea
in
lea
xchg
mov
out
and
cs
add
nop
adc
xor
cltd
fcoms
pop
rclb
xchg
cmpsl
mov
xlat
mov
inc
out
cltd
xor
rcrl
leave
mov
or
xor
test
lahf
pusha
cltd
pusha
xchg
cmp
dec
sbb
stc
frstor
mov
xor
daa
aaa
das
insb
adc
repnz
imul
jae
add
fcoml
adc
mov
dec
mov
outsb
xchg
jle,pn
xor
rcrb
mov
jb
icebp
clc
rol
ljmp
push
insb
shll
out
ds
sub
or
dec
std
cmp
out
clc
scas
jb
cmp
and
stc
xchg
sahf
fidivrs
ror
add
scas
mov
cmpsb
fldl
sahf
jp
mov
jmp
insl
xor
loope
or
out
out
cmpsl
jno
and
sbb
subb
sbb
add
cmp
or
clc
outsl
loope
andb
flds
xor
incl
add
sub
ficompl
mov
lods
lret
cld
out
fistpl
xchg
int3
xor
or
mov
notl
stc
clc
aaa
cmp
ljmp
fimull
add
fwait
insb
nop
add
push
stos
push
das
lds
mov
sbb
es
xor
or
mov
add
adc
daa
out
imul
pusha
dec
xchg
movsb
xchg
js
jbe
clc
insl
xor
icebp
pop
int
adc
or
or
cmp
xor
frstor
cwtl
jb
shrb
sbb
out
or
ds
movsl
xor
fucomi
mov
int
repz
pop
mov
fwait
enter
repnz
or
adc
andl
call
cmpsl
ret
nop
fadds
loop
cmp
insl
incl
mov
dec
cmp
inc
jae
repz
xlat
add
aam
xor
pop
cltd
xorl
fdivp
push
fstp
push
and
sahf
and
sub
imul
js
cltd
and
call
in
and
mov
nop
movsb
push
popa
push
test
adc
jbe
leave
and
jnp
sar
jnp
in
add
or
sbb
je
xchg
out
arpl
pop
pusha
xchg
loop
flds
dec
pusha
xchg
add
cmpsb
fwait
mov
mov
sub
sub
jge
shrb
adc
lock
mov
pop
cmp
cltd
lds
outsb
jl
cmp
add
fimuls
out
out
mov
in
loop
shrb
push
inc
out
das
dec
stos
test
leave
dec
scas
scas
pop
push
shlb
lds
pop
xlat
adc
outsl
sbb
out
sub
mov
out
repz
and
les
jle
outsl
sahf
mov
push
daa
xchg
jge
dec
adc
out
imul
add
icebp
fdivrs
jns
pop
aaa
cmc
adc
xchg
xchg
std
cli
jne
xchg
or
outsl
add
out
jo
repnz
add
adc
out
jmp
cli
leave
rcll
adc
es
mov
pop
fsubrl
add
sub
movsl
es
shll
test
inc
jae
rorl
fidivl
test
adc
cmp
cmp
fiaddl
out
adc
cmp
jb
add
sbb
pop
stc
shlb
adcb
push
fcmovbe
popa
mov
nop
fucomi
lret
test
fsubs
rcll
repnz
call
push
loop
xchg
iret
ss
in
or
and
loopne
jno
lea
lds
mov
loop
test
cltd
outsb
inc
decb
cmp
fimuls
adc
push
xlat
movsl
sbb
mov
xchg
rclb
ret
adc
mov
add
in
les
movsl
cmp
jb
add
ss
mov
test
in
xchg
ljmp
or
xchg
and
fucompp
xor
pop
add
shrl
call
dec
pop
ds
jbe
or
fdivrs
xor
xchg
jae
les
or
mov
cli
jbe
clc
jle
mov
mov
stos
mov
add
pop
mov
inc
sbb
fmull
mov
js
stc
js
cmovg
fdivr
and
inc
and
mov
mov
pushf
movsb
and
mov
mov
fadd
call
aad
lcall
or
ret
xchg
xor
and
pop
loopne
inc
dec
mov
dec
push
sar
lods
mov
mov
mov
push
jle
xchg
xchg
mov
repnz
icebp
in
mov
or
jecxz
aaa
imul
push
leave
aad
lea
hlt
inc
loop
outsb
in
pop
mov
imul
push
adc
sub
stos
leave
out
inc
lea
push
les
out
xor
mov
and
cmpsl
cltd
scas
aaa
jo
mov
or
mov
push
and
push
enter
outsb
or
movsb
movsb
pop
sbb
adc
inc
lcall
fldl
or
adc
out
dec
lcall
mov
adc
jnp
mov
sahf
add
into
ret
jne
mov
or
and
mov
lcall
xlat
fnsave
add
xor
dec
inc
cmp
jge
push
sub
xor
das
lahf
jl
fists
in
enter
mov
jg
pop
xor
xchg
xchg
add
jg
inc
jmp
jns
jl
sbb
jae
ss
add
clc
repnz
test
ds
sub
xor
add
push
pop
mov
mov
rorl
dec
xor
fmull
loop
sahf
jbe
ss
pop
cmp
dec
and
mov
xor
xlat
mov
jl
add
push
test
imul
pushf
jmp
out
inc
aaa
adc
cli
push
in
push
inc
mul
sbb
test
movsl
jecxz
or
rcl
push
push
inc
pop
outsl
mov
das
mov
or
sub
pop
xchg
cs
cmp
push
dec
adc
xchg
push
lods
stos
jle
imul
icebp
ljmp
data16
mov
mov
in
dec
aad
dec
xor
ss
in
push
push
add
push
dec
jmp
cmp
in
in
jge
dec
jmp
mov
add
xorb
xchg
xchg
lret
enter
hlt
fildl
mov
mov
in
ljmp
adc
mov
hlt
fcoml
daa
sbb
rcrl
mov
mov
testl
add
jmp
inc
cli
sub
fdiv
aad
xchg
shrb
aaa
scas
fbstp
mov
jl
mov
fimull
data16
je
adc
push
mov
jg
mov
out
xor
inc
mov
adc
ficoml
ret
shlb
stc
aam
xor
dec
and
mov
mov
montmul
dec
adc
mov
in
leave
sbb
mov
push
loop
adc
popf
ret
sahf
mov
mov
cmp
sub
loope
aad
cmpsb
loope
push
test
je
cmpsl
push
pop
in
fwait
pusha
icebp
pushf
movsl
xchg
fnsave
push
in
pop
jbe
and
mov
mov
clc
and
ret
icebp
popa
nop
in
xchg
sbb
cmp
test
pop
pop
idivb
mov
scas
fnstsw
xchg
mov
jp
pop
dec
adcb
mov
push
jg
test
push
mov
ret
or
jp
lds
adc
loopne
sub
adc
add
outsb
jmp
inc
and
jl
jb
in
test
mov
stos
ja
jae
shlb
fildl
pop
test
icebp
mov
push
push
and
and
movsl
cmpsb
test
rorl
mov
dec
popf
cmc
sub
mov
jb
adc
mov
gs
out
in
xchg
inc
repz
stc
jecxz
and
add
inc
xor
cmpsb
mov
pop
sub
rcrb
int3
pop
dec
xlat
pop
fsubrp
out
jmp
rorl
hlt
jae
dec
test
movsl
xor
mov
neg
xor
jae
mov
fs
xlat
cmp
sbb
sub
mov
push
sar
fadd
lret
push
ret
out
mov
add
jle
xchg
cld
popa
xor
dec
mov
popa
sbb
repz
or
mov
push
push
mov
repnz
sbb
jae
push
sbb
mov
pop
or
mov
push
jle
fistpll
iret
imul
daa
repz
mov
hlt
fcomps
repnz
addr16
jge
pushf
stos
idivl
lock
in
sub
lret
inc
dec
jmpw
mov
ret
insl
hlt
mov
jae
jno
jle
push
xchg
xlat
jge
scas
and
in
add
adc
sbb
out
sub
inc
nop
jge
mov
push
xchg
aaa
xchg
lea
jmp
adc
mov
sti
mov
pop
pop
mov
adc
sbb
shr
xor
pop
mov
loop
mov
add
nop
leave
mov
dec
fiadds
cmc
mov
jae
sub
adcl
rorb
sbb
pop
loop
sbb
pop
pop
xchg
pop
mov
in
callw
repz
js
pop
cmpsl
cli
mov
cwtl
outsb
leave
mov
xchg
mov
cmpb
add
loopne
or
sub
push
cltd
and
stos
loope
mov
pop
stos
mov
and
and
hlt
and
data16
mov
inc
hlt
popf
pop
inc
shrl
mov
loope
mov
add
xor
adc
mov
jmp
loopne
out
cmp
ja
inc
sub
shl
adc
mov
in
or
adc
xchg
sub
or
icebp
xor
and
arpl
push
sbb
sbb
aas
pushf
sub
push
lock
dec
call
dec
push
int
sbb
ds
jg
sub
mov
sbb
cld
pop
push
and
enter
idiv
or
fists
push
js
std
xchg
and
mov
ret
pop
jne
ja
push
cmp
cmp
and
sbb
sub
jp
fldt
ror
adc
mul
mov
lcall
sub
cmpsl
loopne
xlat
out
sbb
scas
loopne
mov
push
mov
jo
out
ljmp
jmp
or
out
data16
sti
ljmp
mov
insl
mov
stc
lods
add
pop
cmp
pop
ret
cmpsl
sbb
or
cmp
add
outsl
sbb
inc
pop
mov
mov
xchg
or
aaa
cmp
lcall
paddw
jmp
lods
sub
push
ds
lods
insl
cmc
pop
mov
les
jno
int3
int3
test
stos
nop
aad
dec
dec
pop
mov
inc
shrl
xchg
inc
add
dec
ror
add
xor
adc
dec
mov
push
jns
movsl
push
or
xor
into
cwtl
in
out
inc
and
push
jecxz
nop
test
push
jmp
es
loope
or
push
cmp
add
test
pop
xor
insb
sbb
lods
sbb
and
push
imul
fimuls
mov
pop
inc
xor
jo
xlat
cwtl
mov
sar
or
mov
shrb
pop
ss
fs
dec
cmp
mov
ss
sub
xchg
jl
dec
or
cmp
mov
push
jne
xchg
leave
jmp
ds
rcll
arpl
aam
ljmp
out
cli
xchg
rolb
out
bound
push
out
mov
mov
rclb
enter
loope
je
mov
cmp
fwait
movl
cwtl
lds
aas
fsubrl
aam
sub
sbb
lock
sahf
and
xchg
mov
addb
push
rcr
sbb
sub
addr16
cld
outsb
nop
sub
xchg
xor
scas
into
incb
pop
or
jbe
jp
xchg
add
lret
sub
addr16
inc
xlat
and
mov
orb
leave
sub
and
jecxz,pt
cmc
or
mov
sub
je
fistpll
jne
fistps
jnp
mov
movsb
xor
pop
in
jno
pop
clc
push
mov
mov
mov
cmp
push
je
imulb
dec
and
out
mov
test
sarb
lods
cwtl
mov
in
inc
mov
cmp
inc
aaa
push
xchg
dec
das
add
das
xor
stc
pusha
push
jmp
cld
lods
push
cmp
push
out
out
sub
fnsave
mov
scas
aas
daa
cmpsb
into
dec
hlt
outsb
insb
add
js
dec
gs
mov
mov
cld
pusha
scas
rcrb
inc
rcrl
mov
cmp
mov
data16
es
popa
cmp
cmp
jge
xor
inc
fsubl
mov
push
push
jno
out
insl
cs
dec
movsl
add
mov
popf
or
stc
hlt
lods
imul
jl
cmp
mov
add
jle
push
pop
ficoms
std
xchg
inc
aam
stc
add
idiv
add
add
data16
xor
stos
dec
sub
mov
adc
clc
test
test
enter
dec
dec
sbb
test
scas
repz
popf
stc
mov
fwait
jmp
inc
add
das
fcmovne
jge
jno
lret
popa
mov
fs
ljmp
adc
and
and
or
push
push
lods
lahf
mov
adc
mov
fstpt
jne
outsb
xchg
lds
shrl
jle
mov
adc
rcrl
jns
jne
js
nop
xchg
pop
fmull
out
loop
or
faddl
jp
inc
mov
jle
lds
inc
mov
insl
aam
in
sub
fidivs
test
push
lahf
je
fimull
push
fdivs
lds
adc
adc
xor
arpl
movsb
push
or
push
sub
lret
pushw
jb
pop
adc
lret
enter
mov
adc
js
arpl
mov
sub
cld
lds
mov
jns
push
sbb
push
das
out
mov
ds
sbb
frndint
imul
jb
pop
xor
hlt
lret
push
xchg
scas
insb
push
inc
and
popa
ds
inc
inc
fs
outsl
outsl
xor
xor
pop
cmc
ljmp
stc
push
movups
insl
push
inc
loope
mov
lahf
test
aaa
cmp
nop
jb
leave
jo
test
xchg
sbb
enter
mov
stos
mov
jbe
xorb
dec
scas
mov
dec
shlb
sub
xor
adc
rclb
repnz
mov
inc
jmp
imul
movsb
fnstenv
sub
mov
and
repnz
cld
jp
push
scas
mov
mov
ja
int3
inc
sub
and
push
inc
mov
jb
and
dec
out
leave
sbb
dec
push
pop
pop
pop
inc
cwtl
xor
lret
lret
cmc
mov
das
push
mov
cmpsl
adc
cmovp
cmc
out
shrb
and
cmpsl
sub
pushl
mov
xchg
cmpsb
xor
loop
dec
sti
out
rclb
mov
xchg
push
xchg
movsl
aaa
or
into
dec
call
xchg
mov
mov
lcall
push
cmpsl
fildll
mov
mov
aad
jae
cmc
sub
scas
mov
es
adc
in
rcll
pop
loop
mov
loop
test
fidivrs
inc
cli
fsubs
or
xor
push
int
bound
sub
and
xchg
loopne
movsb
dec
inc
cli
in
insb
dec
aad
xchg
loop
xchg
add
scas
adc
add
idivl
aaa
and
adc
clc
or
add
adc
sub
pop
iret
mov
jge
stos
aaa
stos
scas
cmp
cmp
in
and
test
fldz
push
mov
cmp
lock
mov
mov
ds
sbb
mov
ss
mov
mov
adc
cmp
xchg
js
sahf
lods
test
cmpsl
mov
inc
daa
jg
das
sbb
or
xchg
cvttps2pi
loop
push
mov
ficoms
push
mov
aad
loope
sbb
mov
out
add
scas
in
insb
nop
pop
scas
pop
movsb
pop
out
cmp
add
mov
dec
mov
mov
push
imul
mov
mov
push
scas
cs
mov
jae
cmpb
pop
mov
outsb
imulb
or
dec
push
pop
jae
movsb
dec
call
jno
in
pop
fadd
js
cmp
sub
in
nop
icebp
leave
hlt
fisubl
paddd
mov
mov
sbb
lds
inc
mov
into
into
mov
inc
jne
hlt
stos
cwtl
cmp
jns
adc
lahf
sbb
mov
sub
adc
adc
roll
and
inc
pop
jge
mov
sar
xrelease
jo
or
inc
mov
fidivs
call
ret
cmp
mov
mov
sti
insl
push
dec
add
negb
in
push
es
stos
sbb
into
adc
inc
out
cmp
jno
mov
ss
or
mov
fwait
pop
mov
push
imul
sbb
mov
mov
push
push
add
test
jo
cmp
sbb
mov
js
cs
fsts
cmpb
cmp
lcall
fsubr
cmpsb
cmp
sub
fimull
stos
push
dec
ja
inc
cwtl
mov
or
lret
je
mov
ss
inc
repnz
ret
sbb
inc
dec
mov
lahf
inc
xor
scas
lods
jle
shrd
mov
test
add
lret
add
xchg
adc
gs
andl
pop
cwtl
ss
sub
enter
lcall
dec
cmp
imul
mov
daa
xchg
test
outsb
adc
or
js
adc
enter
add
cmpsl
imul
std
adc
popf
mov
lods
sbb
hlt
scas
sub
mov
jle
xor
aad
pop
hlt
sub
ss
aas
stos
push
jg
mov
sbb
push
jl
std
bound
and
bound
rol
fwait
imul
hlt
and
outsl
jle
push
rcl
dec
cmp
sbb
mov
ss
out
xor
or
ljmp
shrl
outsl
call
pop
sti
notl
xlat
pushf
bound
insb
xor
call
into
jecxz
and
std
decb
sbb
out
iret
test
es
fbld
jns
out
lods
sub
adc
xchg
mov
fadd
jp
adc
cmp
pop
pop
and
call
test
push
or
les
push
push
fisubl
sbb
cmpsl
cmp
bswap
push
cld
pop
das
data16
pop
add
movsb
push
scas
shrb
xor
jne
pop
push
decl
shll
push
adcl
aam
jbe
loope
sbb
mov
and
bnd
mov
and
scas
mov
rorb
sub
int3
daa
repnz
inc
mov
pop
decb
inc
add
nop
inc
lods
adc
jo
dec
fstpt
addr16
cld
inc
fldl
ds
je
out
and
and
movsl
addr16
cmp
fistpll
insb
push
xor
pop
out
aam
in
pop
or
sub
imul
mov
popl
sbb
rolb
shl
arpl
repz
es
jb
jns
cmp
lods
mov
aam
addr16
jle
repz
and
mov
adc
adc
cmp
cmpsl
sub
das
push
cmp
mov
sub
ror
fwait
daa
jmp
xchg
cmpsl
dec
push
jbe
xor
push
push
je
stos
in
aas
mov
cmp
int3
adc
fwait
mov
cmc
icebp
add
cmpb
mov
mov
and
push
push
pop
fsubs
pop
out
imul
or
pop
push
das
sub
data16
or
inc
mov
rcll
mov
sbb
mov
dec
shll
push
fs
pop
imul
xchg
decb
out
out
mov
cmp
mov
mov
push
push
or
mov
jge
cli
jnp
lret
cmp
jne
icebp
push
bound
xor
shl
dec
cli
out
insl
into
das
inc
sti
das
xchg
icebp
pop
cwtl
popa
inc
scas
cmp
stos
fstpl
xor
xchg
add
mov
bound
jmp
lock
add
loopne
call
sti
xor
jo
int3
dec
ljmp
jnp
dec
lret
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
sti
imul
fcmovne
lret
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
cli
imul
fimull
pop
mov
or
push
icebp
lret
dec
lods
dec
and
fs
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lcall
call
scas
mov
mov
cmp
jge
cmovp
jp
push
lcall
fimull
ljmp
dec
sub
insb
dec
iret
jp
push
lcall
out
xchg
lret
mov
movsl
sbb
jg
dec
sub
jns
aas
ror
mov
lcall
jle
rcl
repnz
in
and
shrl
adc
daa
add
add
popa
icebp
and
and
mov
scas
jg
mov
jnp
xchg
jb
xor
pop
jb
and
xchg
add
sbb
pusha
lahf
cli
cli
pop
ret
pop
pop
shrl
out
sub
fisubrl
addb
sbb
movsb
pop
and
jp
push
rclb
xchg
pop
popa
scas
shll
jmp
or
negb
sub
xchg
lcall
aas
std
out
dec
xor
mov
jle
xchg
popa
xor
pusha
dec
ret
outsl
pop
dec
push
rolb
das
iret
mov
mov
mov
cmpsb
sbb
inc
cmp
pop
pop
dec
or
push
fsubrl
iret
mov
xor
ret
stos
rcrb
push
daa
pop
cmp
aas
bound
dec
ds
ds
cltd
mov
fucomip
lahf
iret
cli
pushf
cld
cmpsb
lods
cli
lret
ljmp
sbb
aas
jge
jo
inc
push
repz
mov
lret
scas
ljmp
outsl
sub
cmovp
jp
push
lcall
fimull
ljmp
outsl
sub
cmovp
jp
push
lcall
in
add
enter
ljmp
sub
adc
cmpsl
lock
xchg
inc
mov
mov
add
xchg
daa
lcall
sub
out
pop
push
jge
enter
jmp
push
and
bsr
cmpsb
xlat
arpl
jg
xor
call
fistpl
iret
imul
add
movd
movsl
dec
mov
adc
pop
out
out
filds
rcrb
adc
mov
icebp
jl
xchg
je
fwait
mov
and
mov
ss
xor
xor
inc
cmpsb
lret
mov
pop
mov
adc
mov
loopnew
aas
call
and
cmp
fisttpll
pop
adc
xchg
sub
mov
jle
repz
jp
sahf
stos
xchg
adc
pop
pop
mull
adc
jmp
test
imull
push
clc
movsl
adc
ret
jbe
mov
add
or
push
cmp
jbe
inc
mov
fmull
aam
daa
pop
pop
mov
outsl
in
lret
in
xchg
cli
mov
cwtl
sahf
pop
fbld
adc
cmpsl
jg
sbb
lcall
add
mov
leave
sub
cmp
cmp
push
mov
jno
mov
in
mov
add
mov
add
sbb
lcall
cs
lea
sbbb
cmp
add
arpl
popa
shlb
mov
add
sub
insb
std
sub
dec
cmc
gs
enter
inc
inc
jle
movsl
adc
hlt
scas
out
in
movsb
fstpt
cmp
fiaddl
subl
jmp
fwait
in
sub
lea
or
iret
inc
dec
and
ljmp
lcall
mov
pop
or
push
push
mov
xor
inc
and
fsub
and
pop
and
add
xlat
test
std
xlat
mov
pushf
push
loopne
inc
inc
pop
or
mov
push
fnstcw
lock
lods
incl
dec
cld
mov
clc
push
lret
adc
rorl
ljmp
fstpl
nop
inc
packssdw
ret
pop
mov
shr
pop
movsl
cmp
mov
out
pop
pop
pop
nop
push
pop
movsb
xorl
inc
pop
popa
mov
sbb
int
jmp
rorl
ror
notl
inc
rclb
sbb
test
cmp
pop
xor
push
call
pop
dec
lahf
test
shll
jle
push
sbb
add
add
add
cmp
rorl
mov
ret
mov
into
ja
sarl
js
cltd
xor
xlat
push
out
sti
push
adc
std
enter
or
test
fistl
lock
cmpl
and
dec
jbe
cwtl
int3
popf
fadd
xchg
jecxz
inc
lods
shlb
push
push
divl
cmp
adc
mov
ja
hlt
in
dec
adc
stc
movsb
lret
lods
sub
cmpsl
jmp
std
pop
push
jecxz
push
loope,pn
int
push
testl
outsb
push
dec
mov
stos
lret
ja
scas
icebp
movsb
outsl
or
out
jmp
pop
mov
ljmp
sub
stos
sbb
inc
cwtl
xor
rorb
pop
movsl
repz
lret
add
xor
jb
shlb
and
inc
stos
push
mov
mov
dec
xor
xor
cmp
jl
jnp
and
loope
jno
adc
cmp
sbb
iret
jp
xchg
popf
cmp
int3
pop
xor
rcrb
int3
ds
ja
sbb
push
test
out
xchg
enter
pop
lahf
push
lcall
or
push
mov
sbb
xchg
jb
rcrl
lahf
notw
xlat
push
xchg
mov
inc
mov
xor
int3
icebp
inc
lds
pop
jne
pop
leave
std
cmc
ficomps
inc
testb
inc
sbb
fwait
pop
adc
adc
mov
sub
jmp
sarb
pop
mov
mov
sub
loop
leave
xor
shrb
xchg
repz
js
rcll
cmpb
adc
mov
adc
shlb
fcoms
in
in
ljmp
dec
inc
adc
xchg
sub
shlb
insb
clc
sub
mov
jmp
xor
mov
push
or
mov
and
shll
xchg
pop
inc
test
xchg
mov
adc
sbb
pop
push
mov
cmpsb
and
xor
sbb
add
cwtl
cltd
or
stos
leave
gs
ds
sbb
clc
in
jo
sbb
sbb
add
jmp
lahf
xlat
push
pop
push
shrw
jnp
lea
pop
push
out
dec
push
scas
movsl
in
jle
dec
fdivs
xchg
sahf
addr16
setb
shrl
in
or
push
aaa
xor
cmpsl
addl
fiadds
pop
jge
in
mov
lret
test
imul
push
pop
add
das
cmp
test
add
and
or
lds
pop
mov
adc
mov
sbbl
add
movl
stos
lods
xchg
imul
cmp
sbbl
xchg
mov
sub
xor
mov
inc
jecxz
and
dec
sub
mov
jo
leave
dec
push
imul
pusha
lods
stos
mov
jle
rorb
insb
mov
cwtl
cmp
xchg
icebp
rorb
push
or
aam
mov
bound
mov
loopne
xor
cmp
sub
ret
pop
out
xchg
inc
mov
cmp
mov
jg
push
cmp
jnp
sub
push
sub
jle
push
aas
into
jo
adc
xchg
into
cmp
scas
xchg
leave
sub
inc
loope
popa
jl
inc
mov
pop
cltd
xor
add
or
ja
jnp
push
mov
xlat
movsb
adc
adc
and
inc
daa
sarb
inc
mov
inc
dec
dec
clc
mov
lret
imul
loopne
sbb
xor
repnz
popa
loopne
add
and
add
jbe
cmp
pop
into
mov
jecxz
inc
cltd
push
shrl
addr16
pop
cli
into
inc
mov
mov
repnz
and
mov
xlat
in
and
or
pop
or
aad
iret
addr16
xor
imul
adc
lret
push
mov
xlat
adc
in
mov
dec
mov
inc
xor
cs
push
xchg
pop
push
out
scas
cli
xchg
jecxz
jg
shl
lds
jge
mov
xchg
sub
adc
mov
jmp
sub
sub
dec
mov
jp
sbb
es
dec
dec
jmp
test
cld
idivb
rorl
sbb
lret
out
jmp
sbb
sbbb
call
or
sub
out
mov
jno
push
dec
call
push
xor
loopne
out
mov
xor
mov
pop
or
dec
add
test
test
push
adc
fwait
shrb
aas
jne
jnp
mov
push
out
ds
mov
push
cmpl
rcrb
jp
test
aad
add
das
dec
dec
mov
mov
xchg
mov
fldl
inc
ret
jg
lea
and
nop
pop
out
pop
adc
push
inc
or
xchg
sahf
mov
lods
test
lock
lock
sbb
mov
add
xchg
mov
mov
xchg
out
mov
imul
cmp
push
sbb
jne
hlt
jae
adc
cld
inc
and
sub
or
jnp
xor
scas
int
or
jb
fwait
inc
pop
test
or
rcll
pop
mov
or
jp
sahf
mov
jns,pt
dec
hlt
adc
into
aad
push
adc
mov
jp
dec
andb
lods
pop
out
addr16
jge
rcr
inc
or
dec
into
mov
mov
pop
insl
test
cmpsl
mov
test
cmp
ds
adc
popf
pop
imul
mov
sub
enter
xor
xor
jmp
movsl
hlt
push
pop
repz
getsec
pop
push
cltd
mov
xchg
shrl
pop
push
adc
xor
mov
lahf
and
xchg
scas
and
sbbb
jecxz
call
push
fistpl
shll
cs
loope
push
js
mov
scas
es
cmpsl
mov
hlt
mov
dec
xor
orb
divb
shlb
inc
js
shrb
fwait
jne
jns
push
in
or
je
divps
mov
loopne,pn
mov
dec
cmp
int
dec
xchg
dec
mov
push
xchg
mov
les
xchg
lcall
mov
dec
sub
jne
pop
stos
mov
push
mov
xor
mov
jmp
xorl
pop
add
in
mov
das
pop
lahf
lds
lretw
fisttpll
cli
pop
xchg
lret
sub
les
addr16
mov
std
pop
mov
into
inc
and
cmpsb
jecxz
std
cmc
mov
pop
mov
add
and
or
mov
imul
je
dec
dec
lret
cli
adc
loope
shll
pop
int3
mov
in
add
inc
dec
mov
xchg
mov
mov
inc
pop
mov
ja
ds
and
jl
test
pop
les
xchg
leave
mov
sbb
xchg
data16
aad
xchg
xorl
idivb
jl
sub
and
push
mov
fucomi
sub
jmp
inc
xor
scas
movsl
dec
push
adc
push
mov
inc
cltd
lcall
lea
aam
mov
loope
jbe
pop
scas
mov
cs
daa
aam
test
sub
nop
xchg
int
cmp
xchg
or
inc
ret
shl
shl
mov
mov
popf
mov
sbb
loopne
jp
push
mov
adc
and
call
dec
push
lock
bound
mov
das
add
lods
mov
sbb
dec
jl
add
dec
orps
jnp
push
jecxz
dec
pushf
push
addr16
adc
xchg
test
jne
xlat
int
mov
out
insb
aam
push
xor
and
xor
sbb
adc
xor
dec
js
pop
pusha
pusha
stc
hlt
aad
scas
and
lahf
stc
insb
fnsave
lds
jns
mov
fmul
addr16
fistl
shrl
fidivl
test
fwait
sub
iret
sti
or
shll
jp
mov
mov
rclb
sbb
fchs
jmp
les
fcoms
jb
pop
lods
cli
and
sub
popf
mov
xor
inc
inc
cmpsl
inc
lea
push
ficoms
fmull
or
jg
popa
xchg
or
and
data16
push
test
push
adc
cmp
pop
adc
sbb
xor
popa
sub
and
mov
cmp
sub
cmp
lods
popf
and
insb
and
mov
push
popa
push
cmp
push
or
movsb
rorb
sub
sbb
and
sub
xor
adc
lock
dec
push
cs
cmovb
dec
and
sahf
mov
std
div
into
push
mov
dec
mov
sbb
cmp
or
aam
xchg
xchg
sarl
dec
hlt
mov
mov
jno
cltd
cld
je
popa
or
push
inc
jmp
pop
ret
xchg
pop
js
fbld
sti
and
jnp
sbb
rolb
pop
xchg
insl
cmp
adc
mov
int3
jne,pn
sbb
movsb
sub
xlat
push
leave
mov
sub
std
dec
lods
rorl
dec
insb
xchg
insl
mov
shll
push
lods
clc
out
call
jns
pop
jo
movsl
pop
roll
mov
inc
sub
adc
cmp
sub
inc
sub
adc
ja
test
aam
call
rorl
xchg
push
loope
sbb
lods
dec
mov
xchg
cmpsl
dec
push
roll
call
mov
into
loopne
add
sbb
in
mul
jmp
cltd
out
xor
lcall
dec
das
leave
dec
call
sahf
push
push
adc
push
or
lods
test
xor
std
cltd
aas
aas
cmpsl
jne
lock
jns
imul
xor
xlat
bound
adc
inc
js
ret
push
nop
sub
and
push
lods
push
inc
int3
repz
in
push
push
push
xchg
fadds
inc
clc
fdiv
cltd
cmpsb
jg
xchg
jge
idivb
mov
out
xchg
pop
in
outsl
decb
roll
mov
add
xor
mov
jb
lret
mov
loop
fnstenv
pop
xchg
ret
add
int3
or
xchg
push
cmp
adc
add
test
popa
call
pop
xor
xchg
push
movsl
repz
sub
xor
xchg
dec
rcrl
pop
xor
and
mov
int3
dec
sbb
inc
dec
leave
mov
fidivl
push
jnp
dec
fstl
dec
adc
stc
in
nop
pop
cmc
es
inc
cmp
cmpsb
int3
xor
push
adc
in
mov
dec
and
imul
mov
sub
inc
stc
cwtl
daa
push
inc
jge
fidivrs
mov
js
sahf
xchg
inc
sub
pop
ja
and
icebp
xchg
fisttpll
mov
mov
repnz
iret
jnp
mov
lock
sbb
and
push
fistps
jge
in
call
push
dec
and
out
loope
lods
add
subb
add
pop
add
xor
cmp
out
leave
cwtl
pusha
inc
fcompl
mov
and
mov
clc
testl
out
in
lock
xchg
js
ja
loopne
add
arpl
rclb
inc
mov
aad
cmp
jl
mov
movsb
ret
pop
cli
xchg
sbb
cmp
outsb
fimuls
adc
jl
xor
nop
push
xchg
shlb
sbb
or
int
int
sarb
or
cld
loope
jmp
adc
sub
leave
push
jge
cmp
icebp
jae
mov
adc
addr16
andb
add
jg
imul
or
push
roll
les
inc
inc
cld
outsb
and
data16
pop
cmovb
iret
inc
push
hlt
pop
cltd
inc
xchg
cmp
es
add
push
sub
repz
add
rcl
test
sub
inc
loopne
cmp
repnz
lret
xchg
jbe
daa
shll
clc
push
jle
idiv
dec
outsb
xchg
push
xchg
fnstsw
mov
stos
aas
and
test
push
scas
mov
shrl
cmpl
out
loopne
fs
inc
pushf
lcall
mov
lcall
shll
test
stos
enter
loop
sub
int3
fcmovne
or
cmpsl
cmp
mov
ret
in
les
cmp
jmp
sahf
les
test
push
jecxz
xchg
repz
cmp
aas
mov
aad
push
mov
or
adc
test
cmp
add
test
pushf
out
gs
pop
add
cmp
stos
add
dec
jne
mov
and
lock
xor
scas
cmp
movsb
fsubr
loop
test
insl
inc
fnsave
data16
pop
jne
push
or
jle
in
out
lods
xlat
jge
in
xchg
aaa
fdiv
pop
xchg
stc
jnp
stos
int
mov
outsb
das
cmp
cmp
cwtl
and
sub
rcll
or
subl
xor
cmpsb
cltd
test
idivb
lahf
add
sub
xchg
ficoml
mov
out
adc
movsl
int3
fwait
nop
mov
sti
add
and
cld
out
repnz
insb
pop
hlt
mov
add
pop
pop
pop
jo
ljmp
mov
add
in
push
sbb
add
ss
adc
mov
mov
push
mov
pop
or
mov
inc
scas
xchg
andb
icebp
push
data16
rol
lds
inc
ds
push
adc
push
mov
dec
das
clc
xlat
outsl
lods
xchg
sbb
lahf
mov
mov
add
fdivrl
dec
and
dec
fldl
xchg
addr16
outsl
sub
push
push
push
push
pushf
add
or
jne
lods
stos
lcall
or
iret
idivb
and
mov
dec
mov
fstps
cmp
xorl
loope
jge
jle
mov
mov
push
mov
icebp
sarl
shl
xor
sub
lods
rorb
fsts
mov
push
fists
pop
outsb
fidivrs
nop
arpl
dec
cmp
popf
int3
pop
xchg
push
ret
inc
iret
xchg
dec
xchg
std
or
dec
inc
lret
add
jg
cld
call
cmp
fistps
jg
gs
jns
scas
xchg
orl
scas
mov
dec
mov
push
push
dec
psllq
jae
mov
mov
jno
push
std
out
test
cwtl
jge
push
mov
in
jg
fs
mov
xor
pop
jno
push
fwait
xchg
nop
mov
insl
imul
sub
jb
jp
out
fisttps
mov
jle
push
adc
dec
loopne
xor
and
mov
test
sub
inc
pop
xchg
push
lahf
pop
mov
imul
xorl
sub
movsb
mov
jl
mov
movsb
pop
cltd
stc
lret
sub
cmc
stos
inc
cmc
enter
push
jbe
cmp
insb
hlt
mov
add
lea
idivl
cmp
pop
dec
cmp
hlt
daa
incl
cmp
aam
mov
mov
testb
decb
jl
ficompl
push
lcall
ja
mov
test
stos
in
scas
fnstsw
cltd
lret
mov
sti
xor
mov
sbb
out
ficoms
mov
daa
int3
fwait
cmc
ficoml
push
push
or
jmp
outsb
scas
mov
adc
dec
fisubl
dec
mov
mov
ret
inc
inc
jo
dec
mov
adc
es
mov
xchg
icebp
xchg
ljmp
add
and
outsl
cmpsb
rcll
sbb
xor
sahf
cli
sub
inc
sub
inc
les
dec
int3
loope
into
push
cmp
and
and
arpl
jge
call
pop
sbb
ret
inc
inc
dec
scas
push
and
ljmp
sub
jno
inc
out
push
jo
jp
hlt
add
addb
cmp
ds
push
cld
das
cmp
and
into
daa
nop
movl
adc
add
or
push
adc
data16
movsb
mov
inc
mov
adc
xchg
rolb
jecxz
cld
or
push
jle
cmp
jecxz
test
xchg
stos
clc
pop
out
test
push
dec
jl
cs
loopne
mov
adc
stos
test
lahf
jp
push
in
in
into
xchg
inc
add
pop
sub
mov
fcomps
cmp
mov
imul
fsubl
ftst
adc
icebp
movsl
lret
mov
enter
faddl
push
cmp
cli
cltd
cwtl
movq
outsb
insb
out
out
cmpb
cmp
xchg
mov
xchg
or
cmp
fimuls
nop
jo
mov
sub
insl
add
repz
stos
mov
dec
jo
bound
pop
jecxz
out
and
push
pop
sbb
jge
mov
mov
and
loope
jecxz
xchg
mov
sbb
push
fcomp
jle
inc
push
dec
popf
jnp
mov
jmp
movsl
call
faddp
xchg
lret
jge
mov
test
push
loopne
je
cmp
mov
scas
or
jne
xor
xchg
pop
push
pop
icebp
icebp
xchg
inc
loope
gs
dec
cmpl
aaa
lock
dec
test
mov
adc
pop
clc
xchg
jmp
inc
shlb
movsl
shrb
jle
jae
add
add
jns
repnz
dec
or
xor
insb
mov
pop
loope
outsb
popa
iret
out
std
xlat
or
ret
scas
jmp
aaa
jle
mov
rcrl
lea
xchg
test
subb
push
loop
mov
loope
fisttpl
mov
jo
leave
repz
outsl
in
inc
dec
and
ret
punpckhbw
push
arpl
jecxz
cld
dec
in
jge
pop
jge
mov
mov
or
push
mov
movsb
je
sub
adc
sbb
lea
mov
std
cmpsl
fdivrs
pop
imul
cmp
jge
xchg
dec
add
adc
jl
sbb
sbb
add
cltd
aad
hlt
mov
pop
push
xchg
jmp
cld
mov
fxch
pop
stos
sahf
hlt
in
jb
mov
or
cmp
cmp
jmp
daa
add
std
loop
outsb
pop
movsl
int3
add
iret
dec
push
dec
sbb
aad
cwtl
dec
sbb
xchg
add
lahf
cli
scas
ljmp
outsl
sub
cmovp
jp
push
lcall
fimull
ljmp
outsl
sub
cmovp
jp
push
lcall
fimull
ljmp
outsl
sub
cmovp
jp
push
lcall
fimull
ljmp
outsl
sub
sub
rclb
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
and
sbb
or
sbb
mov
test
cmc
jmp
leave
and
sbb
in
pop
push
cmp
test
cmc
jmp
and
mov
or
jne
inc
mov
push
movsl
xchg
lret
xchg
cli
in
lcall
cmp
add
dec
loop
inc
lods
xchg
les
push
leave
mov
pushf
rcll
pop
inc
ljmp
sbb
stc
jp
push
sbb
hlt
sub
cmp
daa
out
sub
push
into
decl
ret
loope
test
jmp
and
or
add
mov
xor
jnp
pushl
clc
mov
inc
xor
lcall
ljmp
push
adc
ljmp
mov
or
xchg
enter
stc
lret
or
ljmp
inc
sarl
xchg
mov
js
sbb
dec
jmp
popf
adc
imul
mov
test
cmc
adc
cmpsl
imul
pop
jl
gs
push
sub
call
in
test
in
loopne
xchg
cmc
popf
cmpsb
cwtl
xchg
test
jl
push
gs
xor
aaa
pop
and
xchg
xchg
out
in
fwait
movsl
test
outsl
xor
push
sbb
push
dec
movsl
mov
xchg
mov
stc
cmc
jmp
and
sbb
imul
mov
test
cmc
jmp
and
mov
pop
mov
sbb
mov
adc
pop
pushf
dec
sub
mov
adc
inc
jb
in
loopne
sbb
dec
adc
inc
dec
insl
movsb
cmp
insb
sbb
jne
sbb
mov
sub
pop
leave
fmull
jl
les
movsb
cmp
cld
jo
movsl
sahf
xchg
sbb
add
lret
mov
ja
or
sub
lods
pop
mov
jmp
gs
lods
mov
fs
push
inc
mov
pop
or
push
iret
xlat
xor
rcrl
jae
shrb
sbb
sub
adc
bound
add
sbb
cmp
hlt
mov
xor
sbb
push
inc
pop
pusha
push
inc
mov
or
pop
lods
adc
mov
into
push
aad
test
pop
sub
xor
fiaddl
mov
adc
mov
sub
daa
in
xchg
clc
movsl
leave
fs
ds
xchg
outsb
sub
daa
movsl
cmp
aaa
fstl
jmp
mov
mov
or
aaa
and
loopne
cmp
pop
xlat
mov
pop
aas
clc
xor
pusha
sti
jg
test
pop
cli
mov
jb
mov
pop
adc
sahf
rol
ljmp
popa
inc
inc
movsb
sub
adc
inc
repz
add
jecxz
adc
imul
push
ja
popf
pop
lods
test
test
dec
icebp
mov
cmp
lret
pop
mov
mov
add
pop
outsl
or
aaa
fsubr
outsb
in
insl
shll
rcrl
jge
sbb
sbb
mov
stos
enter
mov
push
fcomip
lcall
adc
xchg
sbb
inc
hlt
imul
pusha
popf
cmp
xchg
sub
cmc
and
mov
cmp
test
insb
and
push
mov
and
pop
sti
push
insb
pop
cmpsl
in
push
xor
pop
sbb
mov
fisttpll
lret
adc
decb
fstps
adcb
mov
out
dec
out
jo
clc
sti
sub
call
mov
xchg
add
pushl
cmpsb
pop
popa
scas
xor
xor
fdivs
scas
push
sti
test
jmp
popf
cmp
shrl
test
jo
pushf
xchg
imul
mov
repz
daa
aaa
pushw
pop
xor
or
fucom
inc
enter
xchg
mov
pop
arpl
mov
lahf
pop
aam
ret
mulb
out
fimull
cmpsb
shr
sbb
and
ds
cmpsb
cmp
movsb
scas
lret
ficomps
mov
cmpb
inc
insl
rorl
sahf
popa
inc
lret
stos
fs
mov
hlt
sub
sahf
in
fadd
loope
inc
mov
lea
adc
or
in
inc
daa
mov
push
jnp
jl
stos
sbb
fwait
xchg
push
xchg
and
xchg
aaa
rcll
pop
xchg
xchg
sub
or
sub
pop
lock
fdivrl
divb
and
lods
inc
insl
call
dec
bound
mov
xchg
icebp
push
ret
lret
xchg
xor
ret
lret
rcrl
inc
rorb
cmp
mov
jno
mov
cli
mov
stos
sar
enterw
sbb
nop
mov
cmp
xchg
push
pop
fisttpl
push
into
mov
sub
push
inc
mov
test
mov
scas
ret
addl
push
loop
aam
jno
push
jo
cmp
imul
in
loopne
stos
and
cmp
je
mov
cmp
addr16
jo
test
scas
sub
jne
dec
cmp
fidivrs
fbld
stos
movsl
loope
pop
cmp
nop
or
fldenv
push
mov
cmp
or
dec
cmpsl
imul
mov
out
insb
fmull
idivl
cltd
cli
push
mov
leave
mov
movsb
push
xchg
mov
int
xchg
popa
stos
arpl
push
xchg
inc
push
hlt
xchg
push
sbb
cltd
add
movsl
mov
add
hlt
add
sub
cmp
jb
test
pop
in
and
pushf
xor
repnz
call
and
icebp
xor
adc
ret
xlat
xor
idiv
or
pop
lds
and
sarl
scas
mov
pop
andl
flds
sub
jl
pop
popf
xor
mov
mov
pop
dec
les
popa
sbbb
mov
pop
ficompl
or
mov
xchg
mov
lahf
lcall
lret
push
stc
xchg
dec
sub
loopne
and
adc
add
adcl
mov
cltd
clc
cmp
call
stos
sbb
mov
inc
cmpsl
in
push
push
scas
inc
test
popf
and
js
inc
jns
ja
mov
pop
sub
stc
sbb
stos
ds
or
movsb
mov
in
add
cmp
lods
cwtl
ret
push
icebp
dec
scas
stc
adc
mov
ret
inc
rcrl
loope
in
sub
xchg
pusha
les
dec
xchg
sub
insb
add
xchg
test
cmp
push
mov
cld
enter
fnstcw
out
xchg
add
cli
dec
adc
es
mov
cmp
cmp
cld
xchg
movb
xor
mov
sbb
and
jp
pop
mov
sbb
test
shrb
mov
xor
mull
push
ss
and
fdiv
loop
push
ret
repz
mov
loop
nop
push
sbb
dec
mov
push
pop
pop
dec
sahf
pushf
cwtl
mov
out
add
out
ds
dec
shll
les
dec
cmp
sub
mov
xchg
shll
cli
mov
lods
hlt
jae
out
inc
out
adc
and
mov
shrb
xchg
in
sub
mov
lods
stos
sti
fsubrs
add
nop
sbb
sub
xchg
fidivs
jb
pop
adc
jbe
decl
mov
mov
add
pushf
fsub
ret
mov
mov
xchg
push
mov
xorl
cli
popa
outsb
jne
fidivrl
icebp
jecxz
inc
iret
jmp
jae
xor
enter
mov
push
and
fidivrl
test
xor
orb
clc
sub
xor
nop
sbb
dec
lock
or
movsl
test
xor
popa
aas
int
call
and
dec
sub
xchg
or
push
fsubrs
pop
std
imul
inc
xchg
test
aaa
cmp
jmp
add
fdivrs
push
idivb
rorb
add
jmp
adcb
pop
gs
popf
adc
push
lods
cmp
orl
pop
dec
outsl
and
test
push
xchg
mov
sub
add
add
push
jo
stos
jg
mov
aad
dec
outsl
inc
pusha
scas
repz
fcomps
push
imul
cwtl
add
jge
jnp
js
fdiv
cli
cli
xor
testl
xlat
imul
mov
aas
in
or
addr16
pop
fnstsw
mov
fwait
sbb
lds
xlat
clc
xorb
mov
leave
inc
jle
sub
pop
add
and
push
aam
dec
gs
dec
jb
sub
iret
dec
mov
xchg
cmpsl
xchg
ret
ds
fisttpll
add
popf
mov
dec
inc
in
jne
mov
mov
repnz
cmp
loopne
repnz
sbb
in
jno
jae
std
push
adc
fidivl
jg
push
aad
ljmp
add
jno
repz
xchg
or
inc
cmpsl
das
js
or
enter
and
pop
js
insb
jp
mul
in
xchg
out
mov
jns
cmpl
cmpb
push
or
mov
scas
outsb
outsl
dec
out
test
xor
fsts
sub
sbb
js
movd
decl
popf
test
sti
cmpsb
cmp
pop
out
and
xchg
fcmovb
incl
stos
adc
add
or
mov
cmpsl
lock
inc
movsl
mov
ss
xor
adc
decb
iret
jle
sti
push
mov
out
insl
enter
mov
test
repnz
add
add
mov
xor
xchg
ret
jp
sbb
and
lods
gs
sahf
and
cmp
out
jnp
push
xchg
jnp
daa
les
or
cwtl
je
push
shrl
cwtl
scas
push
jno
mov
mulb
adc
xor
mov
xor
in
mov
int3
cwtl
es
push
pop
sbbl
sbb
int
cmp
sbb
sbb
or
out
iret
in
je
mov
clc
insl
mov
sub
mov
mov
and
xchg
or
aas
sbb
out
push
cs
idiv
das
or
push
cld
incb
bound
ss
cltd
shl
mov
repz
iret
das
daa
adc
test
inc
mov
adc
mov
pop
gs
in
loopne
pop
daa
cld
std
test
pop
fldz
movsb
cmp
movsl
movsl
xor
cs
iret
in
mov
into
hlt
xor
icebp
cmp
adc
xchg
sbb
inc
push
mov
lods
jbe
xor
je
add
test
xchg
dec
dec
pop
and
cmp
adc
out
cmpsl
xchg
ds
xchg
pop
mov
in
jnp
lods
xor
inc
adc
cs
adc
dec
rcll
lahf
call
insb
arpl
sub
shrl
insl
mov
arpl
das
mov
inc
cld
mov
or
and
pop
rorb
cmp
arpl
fwait
mov
add
aas
jb
mov
sbb
rcl
pop
cmp
outsb
inc
out
mov
inc
sub
jbe
dec
xlat
lock
in
and
clc
pop
hlt
insb
sbb
mov
pop
mov
mov
fsubrs
dec
mov
mov
cmp
xor
mov
push
fstpl
adc
push
push
add
loop
lock
jmp
mov
ficoml
sbb
out
out
push
fdivrl
sbb
loop
or
cmpb
lods
cmp
jmp
icebp
fists
mov
inc
adc
addr16
test
jg
loop
je
xchg
mov
or
pop
add
sub
mov
mov
jecxz
addr16
dec
ficoms
push
cvtps2pd
push
in
dec
repnz
repz
out
sbb
into
jne
fneni(8087
cmp
arpl
mov
sub
adc
inc
inc
rolb
inc
push
mov
or
sub
mov
mov
je
inc
movsb
mov
lret
hlt
lahf
insb
mov
call
lods
sti
ret
faddl
cmp
sub
mov
push
das
shrl
pusha
ret
imul
cs
hlt
hlt
xchg
int3
jbe
or
mul
cwtl
xchg
sbbb
push
repnz
out
idivb
dec
dec
insl
jg
enter
ja
mul
jl
fidivrs
sbb
mov
sti
lret
lods
or
dec
bound
cmp
ret
jbe
push
sub
nop
repz
push
sti
xor
shr
lahf
inc
cld
ss
lods
lcall
inc
aam
xchg
pop
loop
aas
cmpsl
sbb
and
leave
mov
mov
adc
sbb
mov
fsubrp
mov
xor
ljmp
push
imul
dec
mov
sub
stc
addr16
push
dec
cld
jae
jp
jnp
push
or
xchg
mov
andb
es
loop
outsb
or
movsl
jg
rclb
ret
adcl
int3
subb
dec
and
mov
pop
add
jne,pt
out
addr16
jno
insl
mov
xor
hlt
cmp
daa
xchg
pop
hlt
aaa
pop
das
pop
rol
enter
cmp
mov
xor
data16
push
sbbl
loopne
aaa
or
pop
mov
ret
mov
push
popa
push
pop
or
cmp
repz
mov
xor
sbb
inc
inc
mov
mov
movsb
sub
mov
push
xor
mov
inc
lret
cmp
shll
sub
mov
or
or
pop
add
dec
push
mov
imul
stos
cwtl
test
mov
fucomip
sub
jno
jne
in
push
call
pop
mov
stos
xor
fwait
int3
and
pop
fisttps
ret
lods
xchg
loope
test
fs
cmpsl
stc
ss
pop
xor
test
jnp
pop
outsb
dec
ja
mov
or
push
or
xor
cmp
leave
cli
or
xor
sbb
icebp
in
or
loop
scas
nop
mov
mov
xor
cmc
test
stc
ret
jg
popa
inc
cwtl
sub
push
fidivrl
adcb
inc
int3
pop
push
sbb
lcall
mov
movsl
sbb
cli
stos
test
push
das
pop
pop
mov
adc
dec
ja
rcl
imul
jbe
xchg
jne
scas
and
sbb
xorl
xchg
movsl
dec
es
adc
xor
jae,pt
pop
ljmp
imul
mov
loope
div
jmp
cld
cmp
jmp
and
inc
add
test
jno
ljmp
sbb
pop
mov
and
pop
pop
sub
mov
lock
daa
ficoms
xchg
push
sbb
dec
repnz
fiaddl
imulb
pop
sub
je
cmp
mov
adc
test
mov
jl
dec
call
imulb
mov
mov
lcall
mov
dec
lds
jo
out
inc
js
push
pop
ret
pusha
scas
and
fsubrs
xor
mov
sub
lret
mov
push
and
xor
sub
addl
push
jnp
mov
add
xlat
aam
cmp
dec
mov
std
das
iret
popa
xchg
cmc
out
push
xchg
sub
cld
dec
jbe
and
icebp
pop
imul
and
adc
jl
mov
pop
xchg
stc
fs
mov
or
mov
cmp
test
or
xchg
add
mov
xor
push
stos
into
in
mov
or
pop
addl
xor
outsb
mov
popa
xchg
jno
lret
fmulp
lock
loop
subb
sbbb
push
push
insl
movsb
movsb
fisttps
das
sahf
cmp
add
push
outsl
mov
adc
call
ret
adc
stos
sbb
inc
or
enterw
sub
push
pop
pop
daa
push
jmp
mov
ljmp
push
lcall
cmp
fisttpll
push
dec
mov
callw
in
ret
push
lds
xchg
rol
pop
dec
icebp
and
add
pop
dec
add
inc
sub
fisubrl
loopne
cmc
xor
push
aas
add
and
fildll
inc
pop
adc
test
jb
xchg
or
fdecstp
xchg
mov
lret
test
testb
cmp
xchg
pop
jo
outsl
inc
lret
in
push
cmp
rorl
or
mov
scas
and
cmp
ja
mov
xor
icebp
sahf
mov
es
inc
ljmp
nop
xor
jns
mov
jb
adc
fadds
cmpb
enter
es
outsb
adc
out
xor
icebp
and
out
outsb
scas
arpl
push
xchg
mov
js
sub
loope
sti
add
and
or
enter
xor
add
in
push
mov
mov
pop
adc
or
sbb
test
shrl
and
jb
test
dec
mov
movsl
int
push
jle
xor
mov
xlat
push
aas
inc
dec
insb
cmpsb
xchg
cwtl
movsb
jle
ja
jns
mov
sbb
aad
xor
xlat
sarb
mov
dec
xchg
mov
ja
or
cmp
sub
mov
movsl
pop
into
addl
push
jno
test
adc
lret
in
jae
add
jae
cmp
jp
jbe
js
sbb
jb
jp
stos
es
dec
insl
sbb
inc
cmpsb
cmpsb
mov
inc
pop
je
sub
mov
jae
dec
call
push
loopne
ds
inc
mov
loope
in
sti
or
pop
cmovs
fisttps
and
insl
dec
lods
jbe
inc
push
cwtl
xor
fimuls
xorb
lahf
aas
pop
hlt
movsl
mov
xchg
lea
inc
adc
je
jg
or
ss
adc
jnp
mov
mov
cmp
xor
ret
inc
into
cmp
and
mov
lods
jnp
gs
mov
or
inc
mov
push
scas
loop
mov
jbe
push
lds
jb
pop
cltd
cwtl
ljmp
enter
lods
jmp
stos
cmp
outsb
lods
gs
addr16
and
add
sub
mov
ljmp
xlat
mov
pusha
xchg
mov
sbb
inc
das
scas
mov
outsb
inc
push
cmp
cwtl
lds
sbb
out
inc
push
inc
lea
ljmp
mov
pop
pushw
or
arpl
into
mov
je
loope
sub
cmpsb
pop
xchg
inc
pop
aaa
mov
push
xchg
jl
adc
aam
mov
mov
dec
mov
cltd
int3
fwait
mov
gs
cmpl
mov
jb
xor
inc
push
jo
fldcw
mov
push
push
out
popf
inc
fbld
push
mov
paddsb
push
adc
fsubrs
inc
fisttpll
pop
test
fidivl
mov
addr16
dec
movsl
xchg
jecxz
ffree
inc
and
loope
loope
sub
mov
pop
inc
pop
insl
insl
pop
test
push
lret
sbb
sbb
hlt
dec
sbb
in
push
xor
inc
push
pop
or
dec
aad
fucom
shll
adc
inc
dec
inc
call
icebp
adc
gs
xorl
fildl
out
and
ret
dec
sbb
stc
dec
int
movsl
push
ret
inc
pop
fldt
outsl
adc
rolb
popl
stos
xchg
in
cmp
mov
sbb
sbb
push
repnz
mov
xchg
loopne
scas
lcall
lret
fs
lock
or
add
pushw
push
adc
pop
scas
sbb
int3
ja
add
aad
nop
bound
sub
xchg
push
and
add
push
or
mov
jno
loopne
mov
pusha
or
test
cmp
jb
mov
rolb
outsb
cmp
out
xchg
add
sub
stos
fwait
mov
int3
fnstsw
not
mov
mov
sbb
xor
mov
ficompl
xchg
pop
cltd
jecxz
sbb
jae
add
ret
repz
ja
shll
mov
mov
lret
int3
mov
bnd
cmp
adc
inc
jno
popf
jns
jge
jp
data16
sub
int3
sbb
fxch
sub
sub
mov
xchg
jno
and
xchg
cmp
pusha
shrl
fistpll
xchg
smsw
in
sbb
in
mov
mov
scas
cmp
jno,pn
lods
mov
sub
aas
fwait
push
sti
aam
int3
addr16
cmp
sub
lds
cmpsb
adc
adc
add
int
out
add
clc
sbb
sbb
sub
test
sub
mov
xor
pop
or
subl
ret
add
out
sub
jmp
rolb
pop
in
or
mov
movl
inc
dec
mov
idivb
rorb
aad
mov
mov
stos
icebp
push
or
outsb
out
xchg
cwtl
mov
pushf
subl
mov
js
imul
pusha
sbb
ret
orb
inc
xor
or
std
insb
pusha
cmp
add
pop
bound
inc
nop
jp
pop
icebp
jmp
pop
add
fbstp
arpl
fstpt
rol
cld
or
movsb
test
dec
xor
mov
mov
or
roll
outsl
sub
jae
inc
loopne
dec
out
inc
xchg
roll
fdivrl
jne
add
leave
pop
dec
cmc
cmpsb
mov
cmpsw
push
rolb
sti
add
jg
cmp
gs
rclb
sub
inc
or
xchg
pop
test
mov
popa
leave
add
inc
out
xor
test
outsl
mov
dec
xchg
addl
xchg
pop
push
cmpsb
or
add
bound
int
cmp
push
fsts
outsl
dec
es
push
movsb
lcall
inc
ret
pop
loop
inc
push
inc
das
lret
sbb
pop
mov
outsl
and
test
or
jae
pop
shrl
add
adc
imul
mov
test
cmc
jmp
and
sbb
imul
mov
test
cmc
jmp
and
popa
adc
roll
dec
movsl
popa
mov
test
cmc
jmp
and
sbb
imul
mov
das
cltd
xchg
xchg
jno
push
mov
movsl
ss
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
jne
pushw
push
es
ss
xor
push
xchg
cmpsb
mov
cmpsb
xchg
xchg
out
notb
push
pushw
cmp
inc
ss
es
push
pushw
jbe
xchg
xchg
mov
mov
cmpsb
xchg
out
test
xchg
push
les
sahf
sub
push
or
jbe
mov
mov
mov
sbb
sbb
sub
inc
das
fidivl
andb
int3
gs
ret
mov
cmpsb
push
xchg
insl
cmpb
push
lcall
mov
mov
cmp
mov
push
cli
pop
xchg
out
or
rcll
call
fstpl
mull
mov
jecxz
pop
sbb
pop
mov
stos
and
inc
es
jmp
mov
adcl
dec
dec
xchg
cmpsb
xchg
fwait
imul
lock
lret
test
ret
gs
pop
addl
out
cmpsb
mov
mov
push
jmp
jns
xchg
xor
xchg
repz
sub
es
rolb
push
push
data16
xchg
mov
lods
movsb
out
mov
imul
sub
bound
push
push
imul
mov
mov
mov
scas
jmp
cmp
pop
and
daa
popa
pop
and
jecxz
push
jbe
ret
mov
lock
mov
sbb
bound
push
adc
push
push
pushw
jbe
xchg
xchg
cmpsb
mov
cmpsb
xchg
out
divb
pushw
push
es
ss
es
push
pushw
jbe
xchg
xchg
cmpsb
mov
cmpsb
xchg
out
divb
rolb
aam
out
sbbl
or
repnz
or
lcall
push
pop
cmp
push
mov
sbbl
lods
jge
fistl
push
add
test
cmp
iret
fimull
xor
idivb
cld
mov
out
test
push
sub
nop
jnp
ret
and
jo
cmp
push
shlb
mov
mov
dec
jle
addl
test
cmp
rcr
jne
sbb
imul
inc
sbb
push
jb
push
sti
test
mov
push
popa
cmc
xchg
rcr
lock
int3
in
ret
push
or
dec
hlt
jnp
lods
mov
pushf
test
shlb
roll
mov
dec
gs
ja
jge
lods
out
push
xchg
mov
mov
xorl
sar
xor
lcall
leave
cmp
mov
stos
mov
push
enter
test
sub
xchg
push
scas
mov
cmp
cltd
jne
adc
into
fucom
dec
mov
fnsave
dec
add
push
jge
push
push
pop
pop
loopne
lahf
into
sub
mov
xor
insl
loope
repz
jp
jecxz
out
adc
std
cltd
mov
rcl
into
push
sub
int
ljmp
icebp
popf
shrl
dec
les
bound
lea
aaa
inc
xor
add
xchg
mov
das
adc
outsl
arpl
mov
push
cmp
inc
mov
rcll
pushf
push
daa
mov
push
loope
xchg
mov
xor
add
fstpl
cmp
ret
popf
test
mov
inc
pop
mov
int3
decb
rorl
subl
fwait
mov
test
jo
adc
dec
clc
inc
lcall
fwait
pop
jmp
repz
aaa
repnz
lea
loope
fbld
es
lock
sub
xchg
mov
hlt
repnz
adc
cwtl
out
pop
leave
aad
jae
xchg
cmp
int3
jb
pop
sbb
test
popf
cmp
jae
mov
sti
and
test
push
jl
sub
fisubs
into
sbb
xchg
inc
insl
jle
scas
fstpl
jne
mov
cmpsb
lds
inc
divb
mov
int3
popa
cs
cmc
push
dec
cmp
pop
testl
mov
fistpll
neg
dec
jg
cmp
outsl
sub
pushf
enter
cs
or
outsl
add
ss
inc
push
outsl
fisubrs
or
push
imul
or
push
adc
dec
pop
inc
adc
xchg
fwait
jmp
loop
xchg
mov
les
movsl
pop
pushf
js
jbe
lods
xorb
dec
and
mov
andb
pop
outsl
and
mov
push
mov
push
call
push
jb
add
inc
mov
test
fcomps
cld
push
scas
push
mov
es
inc
test
cld
daa
movsb
fcompl
adc
jp
mov
movsb
cmp
mov
dec
loope
iret
push
pop
loope
add
orb
int
call
push
popa
adc
or
cmp
repz
jne
mov
xchg
pop
rcl
in
xchg
dec
test
nop
arpl
pop
data16
iret
adc
mov
mov
xor
jbe
int3
xorl
pop
mov
adcl
xchg
sbb
jmp
mov
mov
xor
sbbb
das
push
ret
mov
sbb
mov
mov
lds
jnp
fwait
push
xlat
add
jmp
pop
mov
outsb
je
js
mov
enter
pop
ljmp
pusha
jb
or
jmp
jge
lcall
fdivrs
xchg
pop
clc
gs
imul
lcall
test
or
inc
push
repz
mov
cmc
xor
lcall
dec
xchg
dec
mov
and
jae
cmp
incb
mov
add
in
mov
push
mov
jecxz
out
sbb
pop
shlb
xchg
dec
fwait
and
das
pop
lret
ljmp
iret
xchg
pushf
and
xor
and
push
test
stc
call
fs
jo
cmp
mov
inc
and
insb
movsl
pop
test
mov
push
fcomi
sbb
adc
and
shlb
shrb
lods
lar
cwtl
sub
xchg
xchg
imull
push
clc
in
push
bound
inc
cmpsl
mov
dec
cmp
lret
loop
mov
sbb
lret
or
rcrb
mov
adc
insb
mov
inc
mov
push
jne
dec
cmpsl
ja
rorl
std
dec
jae
dec
arpl
es
cli
adc
cwtl
pop
aad
adc
adc
jno
jg
push
addl
mov
insl
fidivrs
push
mov
pop
xor
jge
cmpsb
pop
pushf
cmp
ret
cmpsb
loopne
inc
icebp
jecxz
jecxz
inc
sub
xlat
sbb
lea
lret
mov
dec
mov
shll
daa
sub
sahf
andl
aam
out
push
mov
addr16
and
sbb
mov
adc
dec
icebp
jmp
mov
jp
sahf
idiv
xchg
movsl
scas
fwait
or
mov
or
je
add
pusha
jmp
adc
sahf
inc
lods
lahf
lret
pop
sub
lods
test
jns
mov
lds
adc
xlat
cwtl
mov
sbb
push
or
jg
fs
stos
pop
mov
mov
dec
push
jecxz
add
mov
jge
sub
out
jge
jno
inc
pop
mov
jnp
pop
jle
hlt
mov
fists
aaa
push
in
shlb
xor
pop
ds
push
push
xor
into
ja
aaa
inc
xor
mov
xchg
in
enter
add
int3
fs
je
cltd
or
mov
cli
mov
cmp
xor
fbstp
out
dec
dec
and
hlt
lea
rolb
fisttpll
jb
cmpsl
repnz
shll
xchg
fwait
mov
iret
ret
xchg
cmp
movsl
mov
dec
push
fsubrs
mov
ret
adc
je
mov
inc
fnsetpm(287
bound
inc
add
icebp
lock
aad
or
ret
push
sti
imul
mov
xchg
push
insb
mov
pop
fistpll
pushl
pushf
sub
cmp
xor
push
mov
inc
xor
mov
in
mov
cmpsb
pop
xchg
pop
daa
and
inc
test
push
ljmp
push
in
inc
mov
or
xchg
icebp
decl
sub
push
lds
and
dec
jmp
nop
in
adc
fdivr
aad
mov
xchg
enter
pop
push
sub
xchg
data16
push
dec
cltd
mov
fcoml
jns
adc
cld
sbb
iret
mov
and
popa
sbb
fidivrl
jmp
mov
mov
cmp
test
or
rorb
test
push
inc
fwait
popa
sti
aam
lahf
pop
scas
pop
push
mov
outsl
jmp
les
sub
testl
xchg
push
mov
jecxz
lds
in
inc
dec
dec
sbb
jnp
repnz
xchg
adc
dec
rorl
sbb
push
out
inc
pop
clc
xchg
fs
jbe
lock
fadds
mov
jmp
test
mov
enter
orl
cmp
sub
loope
dec
inc
cmpsl
push
add
cmpsb
xor
sahf
out
inc
rorb
addl
inc
mov
pop
lahf
pop
test
cmc
mov
js
push
sbb
sub
xchg
xchg
lret
sub
mov
test
and
fstpt
lahf
push
mov
jg
dec
pop
xchg
loopne
cmp
inc
mov
inc
cmpsl
sub
setp
jg
sub
or
mov
stos
sahf
pop
in
mov
cmp
sub
fs
stos
inc
mov
int3
xchg
pop
fcomp
insb
push
mov
cmpsl
inc
adc
movsl
mov
cli
xor
xor
orb
pushl
stos
adc
mov
std
add
inc
pop
push
mov
fildl
mov
xor
pop
insb
pop
shl
sub
mov
stos
push
dec
pop
push
mov
shrb
and
addl
pop
pop
cli
cmp
sbb
js
ja
cmpsl
sbb
push
divl
xchg
adc
fildll
pop
mov
and
jp
pop
sahf
and
cs
fsubl
xchg
cmc
cmp
pop
add
dec
xchg
nop
imulb
and
mov
add
sbb
popa
das
add
sbb
cs
adc
cmp
in
nop
pop
repz
jl
lahf
or
inc
push
clc
inc
xor
stc
adc
or
sub
addr16
cmp
xchg
inc
sbb
aad
sub
mov
stos
add
mov
xor
stos
sub
dec
pop
push
lock
add
jns
xchg
fs
sbb
andb
sbb
jl
outsb
inc
ret
es
mov
cmc
xor
je
adcb
jg
aam
xchg
cmp
pop
inc
insb
popa
fdivp
cmpsl
or
pop
push
movsb
fnsave
insl
sbb
and
and
stc
daa
mov
sub
mov
or
push
les
xor
inc
mov
push
das
xchg
sti
leave
inc
mov
add
push
bound
dec
inc
cmp
cltd
cmp
xchg
test
and
popf
push
lea
or
das
incl
xchg
dec
fisttpl
sbb
cmp
xor
push
jnp
xor
push
inc
rorb
jns
xchg
ret
jmp
or
mov
xor
comiss
mov
adc
cltd
int3
inc
push
mov
mov
lds
mov
rorb
mov
or
jbe
test
sti
movsb
enter
mov
jns
lret
pop
test
loope
pop
out
enter
xor
sbb
notl
lahf
add
dec
push
rolb
push
and
mov
mov
or
xor
mov
inc
dec
adc
dec
test
loope
test
pushf
push
pop
cwtl
mov
sub
insl
insl
inc
mov
mov
test
mov
xchg
scas
rorb
data16
in
pop
cmpb
sti
scas
insl
fs
cmc
fbld
dec
or
scas
pop
dec
dec
cmp
cli
daa
xchg
sbb
gs
or
cld
xchg
pop
loopne
and
in
jae
movsl
outsb
mov
mov
cmp
out
ljmp
lret
xchg
xchg
push
jbe
not
jle
mov
into
in
ja
cmp
mov
adc
xor
popf
rorb
leave
mov
sub
movb
mov
jge
into
int
push
ret
mov
push
outsl
adc
lahf
and
cli
mov
iret
inc
cmpsl
adc
adc
repnz
arpl
mov
cmp
fcmovnbe
add
bound
push
testl
cltd
popa
call
lret
sahf
mov
mov
cltd
jne
pop
addr16
add
and
pop
add
shlb
rclb
jmp
cli
gs
mov
dec
movsb
sub
dec
or
and
loope
jle
mov
ret
or
xchg
dec
xor
rcrl
inc
jo
iret
outsb
and
adc
fimull
cmp
js
hlt
movsb
and
insl
test
int
or
sbb
imul
fiaddl
push
out
pusha
xor
jne
or
cltd
dec
mov
arpl
je
ficoml
adc
out
push
inc
jns
cmp
stos
jmp
sahf
imul
xchg
mull
stos
push
ja,pt
adc
mov
cmpsl
xchg
mov
test
loope
adc
add
out
inc
loop
pop
jno
lret
xchg
sbb
js
out
dec
aad
mov
cwtl
adc
data16
push
xchg
jl
insl
repnz
stos
mov
push
pop
cmp
mov
in
outsb
mov
xchg
scas
aas
push
pop
push
stos
shrl
mov
jg
xchg
out
xlat
sub
jmp
push
or
sbb
xchg
daa
dec
pop
push
cmp
mov
mov
xlat
xchg
xchg
and
es
xchg
daa
cltd
jle
stc
enter
cli
movl
sub
loopne
jge
push
mov
add
mov
push
flds
sbb
xchg
js
in
insl
sbb
pop
adc
mov
mov
cmpsb
out
iret
mov
pop
inc
inc
sub
sub
jo
pop
push
call
jl
pop
inc
mov
std
cmpsl
and
add
mov
fmul
and
lds
mov
out
jmp
xchg
mov
mov
jnp
and
aas
popf
fcomip
cwtl
imul
stos
outsb
leave
xor
push
adcl
out
orb
fwait
pop
mov
dec
std
fcomps
call
movsb
push
movsl
enter
fwait
mov
push
aam
add
push
imul
rcll
int
dec
push
ror
mov
push
lods
loopne
dec
cmpsb
test
pop
pusha
dec
hlt
frndint
popa
mov
mov
ss
imul
bnd
out
inc
scas
pop
jg
insl
and
sbb
cmpsl
mov
push
inc
cmp
sub
jl
xchg
inc
stos
mov
stc
es
dec
jae
jg
into
mov
lea
mov
lret
js
cltd
enter
mov
push
xchg
push
add
fnstsw
cld
sbb
shr
xchg
aam
adc
inc
add
mov
aas
xor
mov
out
cmp
aam
push
cmc
fwait
decb
jl
js
mov
mov
dec
push
xchg
mov
subl
cmp
sbb
push
inc
add
xlat
xchg
shufps
addl
inc
pop
cmp
xlat
mov
pop
stc
outsl
loopne
xchg
leave
cld
fdivl
lret
in
mov
mov
xchg
js
pop
outsb
imul
data16
mov
popa
ror
xor
sarl
xchg
sub
mov
sub
scas
xor
in
sarb
or
cmp
icebp
test
je,pt
lret
adc
jle
fmull
lock
aad
xchg
clc
xchg
push
inc
mov
mov
mov
arpl
pop
jg
bound
fstpl
sub
cmp
push
aad
pop
pusha
mov
sbb
sbbb
pop
in
pop
outsl
in
jmp
ret
mov
mov
loopne
pop
or
shrb
into
mov
ret
adc
dec
or
bound
jnp
xchg
in
jg
iret
mov
adc
jg
jp
jecxz
mov
fisttpl
rcl
mov
push
lret
sahf
pop
push
xlat
rcr
mov
adc
sti
or
scas
xor
cmp
adc
sub
adc
loope
cwtl
insl
mov
pop
rorb
fstpl
jbe
and
inc
test
push
das
lods
cltd
dec
and
jae
mov
lahf
cmc
lds
scas
popl
xchg
mov
lret
stos
pop
xor
xor
lods
mov
arpl
pop
out
or
add
and
pop
sbb
push
test
dec
push
gs
outsb
jae
or
jle
mov
mov
or
push
mov
int
dec
push
push
mov
loop
dec
repz
lods
fadds
lods
dec
ja
ja
movsb
sub
mov
jle
or
inc
xchg
adcb
dec
adcb
sbb
jnp
cs
push
and
sti
mov
cli
scas
fxtract
sbb
aas
cs
cmpsb
repnz
adc
sbb
sub
je
sahf
mov
ja
sarb
jg
mov
mov
hlt
ret
sub
push
xchg
pop
jmp
mov
xchg
sbb
pop
push
mov
and
repz
and
cmp
adc
loop
push
mov
dec
dec
jo
andb
pop
or
std
sahf
repz
cmp
push
pushf
fdiv
and
jecxz
mov
out
outsb
add
pop
jmp
sahf
icebp
mov
jo
loope
cmp
inc
and
xchg
xchg
scas
clc
mov
sbb
gs
cli
call
es
scas
or
push
imul
and
rclb
test
rorl
daa
mov
movsl
adc
movsb
cld
push
cmp
daa
jl
push
or
rol
xor
sbb
cltd
jno
add
cmc
fsubp
xor
int
mov
mov
lods
pop
jnp
lds
lcall
imul
push
int
pop
pop
insl
push
js
addl
add
cltd
pop
test
leave
sub
rcrb
xor
insl
mov
fidivrl
inc
movsl
jnp
out
insl
jg
add
push
arpl
mov
insb
mov
or
sbb
in
movsl
rol
mov
in
or
stc
mov
jg
aam
test
dec
lahf
push
mov
mov
jmp
jbe
and
ret
jno
sbb
add
add
jp
mov
push
rcrl
or
testb
jbe
sbb
sbb
xchg
fs
jmp
push
pop
push
dec
scas
jp
in
xor
pop
mov
int
fdivrl
shll
ret
adc
adc
push
mov
es
arpl
sar
scas
push
jg
adc
arpl
ret
shl
in
jg
xor
adc
cmp
xor
add
adc
sbb
shr
mov
not
shrb
adc
push
mov
sbb
add
inc
hlt
and
fmull
jecxz
sub
pushf
jmp
sahf
jno
dec
xchg
pop
pop
repz
dec
inc
dec
test
faddl
mov
in
and
cwtl
sbb
out
scas
ret
test
pusha
test
mov
pop
mov
sub
xchg
inc
mov
xor
int
lods
mov
std
sub
sbb
sbb
cmpsb
imul
loop
and
rcrb
jo
and
jae
test
mov
lods
lret
push
and
enter
push
into
jno
aam
mov
mov
rorl
bound
xchg
enter
in
xlat
push
dec
mov
cmpl
pop
pop
xorb
rcr
sub
shll
mov
xor
das
pop
xchg
lret
fsubr
pop
sbb
jae
insl
fcompl
xor
cmp
mov
or
outsb
movsl
jg
pop
push
lcall
jbe
pop
fs
nop
push
cmc
adc
cvtpi2ps
orb
popa
jae
pusha
fxtract
out
into
clc
lds
mov
or
xor
nop
es
dec
out
in
jp
push
pop
mov
lcall
jbe
fwait
adc
mov
hlt
push
jno
fmuls
ret
jo
jno
pushf
mov
sahf
into
mov
sbb
cmp
pushl
push
add
int3
pop
pop
add
fimuls
test
pop
aas
movsb
ja
add
xor
jl
adc
aaa
mov
daa
xor
mov
or
movsb
insb
pop
inc
andb
xchg
xchg
stos
push
push
in
xor
into
ret
out
sahf
out
lahf
sbb
repnz
imul
sub
sub
push
mov
out
pop
or
jno
movsl
xchg
cli
dec
test
push
push
mov
hlt
sar
sub
movsl
inc
push
das
test
lahf
das
mov
nopl
std
leave
cmp
dec
dec
int
lahf
or
mov
inc
push
and
mov
loopne
push
iret
hlt
adc
cld
pop
iret
sbb
rol
push
movsl
outsb
clc
fisubrs
cs
mov
push
addr16
push
addr16
fwait
xchg
shll
je
lahf
mov
dec
aaa
in
popa
imul
outsb
jmp
adc
sub
adc
jo
lds
add
push
subl
xchg
cmpsl
sub
out
mov
push
push
push
inc
inc
lock
pop
stos
jb
test
push
cmpsl
stc
or
jecxz
mov
adc
mov
push
inc
sbb
in
mov
roll
fcoml
movsb
popa
jb
popl
in
mov
lcall
jl
pop
xchg
psubb
sbb
faddl
mov
xor
fs
xchg
mov
aaa
pushf
cltd
fcmove
fnsave
sub
sub
dec
push
jo
sbb
cmp
into
or
jg
lret
cmp
add
jb
push
rolb
aaa
push
out
cmp
pop
cmp
mov
outsl
ds
pop
xlat
popa
pop
ja
bound
rorb
ret
rcrl
shlb
dec
out
cmpsl
xchg
out
dec
nop
neg
adc
xchg
nop
xor
push
xlat
pop
xor
or
sbb
xor
loopne
add
xchg
jle
push
inc
or
fisubs
fstpt
inc
iret
rclb
push
mov
cld
aad
xor
inc
jp
sub
shrb
push
inc
pop
and
movsl
cmp
aas
or
add
mov
cwtl
mov
idiv
or
jns
adc
inc
ss
es
push
pushw
jbe
xchg
xchg
cmpsb
mov
cmpsb
xchg
out
divb
pushw
push
es
ss
es
push
pushw
jbe
xchg
xchg
cmpsb
mov
cmpsb
xchg
out
divb
push
push
ss
aaa
cmpsb
inc
es
push
addr16
jbe
xchg
xchg
cmpsb
mov
mov
xchg
out
mulb
cmp
or
data16
inc
ss
push
out
mov
jns
cmp
cmpsb
mov
dec
sub
jns
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
les
in
mov
xor
adc
lahf
jbe
inc
mov
roll
and
ret
add
adc
and
xor
inc
test
movsb
pop
pop
test
lods
cmpsb
mov
ljmp
int
fst
in
mov
popf
sbb
outsb
mov
push
test
sbb
adc
cmp
dec
nop
movsb
inc
les
ja
push
pushf
dec
js
xchg
pop
mov
bsf
out
pop
pusha
sbb
fdivrs
sub
hlt
push
hlt
lret
push
push
jnp
inc
fwait
insl
mov
pop
imul
fsubrs
mov
mov
test
lods
cmpsb
xchg
mov
test
inc
sub
add
adc
and
mov
xchg
fs
movsb
movsb
stc
pusha
add
je
cmp
je
int
xor
cmp
lods
fsts
push
movsb
movsl
mov
pop
cmpsl
mov
inc
mov
mov
jns
sti
jmp
push
imul
push
adc
jne
xlat
mov
lods
adc
aam
and
adc
les
push
repz
inc
sahf
push
mov
mov
cmp
cmpsb
jge
or
sbb
xor
cmp
jnp
dec
sbbb
jmp
xor
movl
andl
nop
inc
popf
aam
les
push
out
loopne
ljmp
in
loope
notb
test
ja
inc
andl
xchg
dec
in
in
or
push
test
movsb
fs
les
xor
and
aam
les
and
xor
inc
test
movsb
je
test
movsb
fs
les
xor
and
aam
pop
inc
lods
pop
mov
mov
movsb
mov
cwtl
push
xchg
imul
cwtl
mov
xchg
movsl
xchg
add
pop
add
xlat
jnp
cltd
add
dec
pusha
movsl
adc
xorl
pop
aas
sbb
jns
xlat
mov
nop
daa
std
jl
adc
and
pusha
mov
gs
xchg
xchg
or
stc
stc
pop
cltd
inc
or
jne
push
scas
enter
scas
xor
and
pop
fnsave
stos
and
dec
dec
jge
cmpsl
sub
xchg
push
pop
jle
push
xchg
adc
xor
sbb
and
imul
in
mov
add
mov
push
stos
cmpsb
test
rol
cmp
inc
cwtl
stc
mov
into
out
adc
fidivrl
dec
leave
adc
mov
adc
or
aam
mov
test
icebp
int3
setb
mov
data16
xlat
add
test
mov
jecxz
fiaddl
dec
xor
push
sbb
fildl
add
sub
out
inc
in
cmpsb
andl
dec
sbb
add
ss
out
jnp
shlb
pop
nopl
xor
mov
xlat
push
pop
xchg
and
sbb
xchg
and
and
into
cmp
xor
cmp
push
mov
push
adc
mov
sti
xchg
add
mov
fsubl
mov
mov
xchg
dec
inc
daa
add
stc
sbb
gs
push
fbstp
in
icebp
xchg
lods
movsb
into
cmp
mov
push
in
fwait
push
adc
push
dec
int3
out
add
outsb
in
and
fisttps
mov
movsb
add
sbb
cld
imul
sub
inc
aas
push
imull
rclb
inc
jle
mov
pop
jecxz
loopne
xchg
fnstsw
fisttpll
add
xor
jmp
clc
mov
test
ret
dec
dec
bound
jno
ljmp
pusha
mov
xor
in
in
repnz
jle
cmp
adc
mov
adc
test
clc
push
adc
repz
sti
cmp
movsb
adc
rorb
aaa
pop
pop
xchg
and
addr16
inc
pushf
jns
cli
mov
add
inc
xor
adc
cmc
jb
addr16
lahf
pop
push
or
dec
jae
cmp
xchg
pop
add
movsb
jae
nop
sbb
xor
jmp
lret
push
pop
sub
aad
fs
jb
inc
jae
sarl
bound
mov
xchg
mov
add
jb
imul
addb
mov
popf
xchg
xchg
lock
cli
xor
push
add
sub
push
sbb
cld
inc
cmp
jb
sahf
mov
fwait
ds
cmp
sti
test
mov
ja
sub
jnp
push
adc
push
lret
mov
lods
loopne
cmp
push
insl
xchg
fildll
push
jge
dec
scas
in
mov
jecxz
jge
adc
adc
clc
jne
test
int3
aam
icebp
jae
int3
mov
mov
sub
sti
idivb
addb
xchg
inc
lahf
jns
jae
sbb
mov
sahf
lock
dec
nop
incb
fildll
repz
lcall
push
dec
or
cld
cmpsl
enter
sub
scas
stc
outsb
mov
dec
mov
xchg
pop
ret
fimuls
pop
xchg
scas
sahf
std
cs
dec
and
adc
add
test
sbb
jo
mov
pop
xchg
popa
lods
mov
xor
je
test
mov
clc
loop
or
gs
movsl
sub
mov
lahf
dec
pop
rol
xor
inc
fsubrp
in
push
cmp
imul
testb
or
repz
shl
xchg
fmuls
inc
loopne
inc
stc
into
mov
or
cwtl
lods
ljmp
xchg
out
mov
adc
pushl
sahf
mov
mov
in
dec
adc
insb
jmp
mov
or
inc
xchg
lret
mov
les
shrb
fwait
and
cmpsb
prefetchw
or
inc
clc
fmul
fimuls
pusha
div
inc
rol
sub
mov
movsb
mov
xchg
daa
and
int3
jnp
xor
gs
mov
and
lds
imul
pushf
adc
jbe
cltd
jb
cmp
push
test
mov
lahf
test
xor
outsl
mov
sub
loope
gs
fidivs
fmulp
aaa
mov
enter
out
jl
int
cltd
iret
and
dec
dec
xchg
cmp
dec
jl
xchg
fistl
fwait
and
mov
adc
push
shlb
in
and
movsb
aam
rcrb
mov
leavew
sub
mul
mov
ret
or
sub
popa
movsl
push
mov
shrl
fisubrs
push
add
fistpll
stos
xor
fisubl
mov
push
es
ja
mov
cmpl
pop
push
pop
in
insb
mov
icebp
rcll
push
xor
lds
in
mov
fildll
daa
sub
notl
or
cmpsb
dec
jmp
shlb
mulb
adc
scas
pop
mov
mov
fldcw
mov
outsb
into
enter
js
mov
fsubs
mov
and
rol
stc
and
inc
fsubr
pusha
in
jbe
xchg
push
dec
push
mov
sahf
in
pop
pushf
arpl
pop
cmp
test
sbb
cltd
push
push
mov
idivb
pusha
dec
gs
add
cmpl
mov
mov
popa
lcall
pushf
sbb
lods
mov
mov
xchg
fnstcw
adc
push
push
mov
decl
loop
insl
mov
in
dec
jns
sbb
xor
mov
mov
sti
into
roll
jbe
fwait
push
mov
aam
adc
repz
hlt
repz
pop
cwtl
xchg
shll
pop
inc
push
idivl
lcall
push
repnz
pusha
ja
subl
das
push
nop
popa
enter
xor
into
jo
mov
push
test
cmp
mov
rcll
cmc
imul
jp
out
mov
pop
enter
adc
mov
push
fistps
mov
cltd
lds
add
daa
arpl
pop
xor
pop
hlt
push
mov
lret
test
xchg
orl
inc
rol
test
aas
cmpsl
es
lds
inc
and
or
fwait
repnz
rorb
sub
adcl
mov
cmpsb
sbb
fmull
push
mov
pop
dec
rcrl
cs
cld
jle
neg
xor
outsl
data16
dec
lahf
adc
push
xor
or
or
pop
dec
es
divb
and
push
and
fists
test
jge
imul
out
sub
push
subb
and
loope
outsb
ficompl
shll
ret
push
cmp
mov
pushf
inc
jno
pop
pop
aam
jle
test
xchg
push
pop
fs
mov
jecxz
popa
mov
jmp
push
jp
imul
cmpsb
jne
lcall
mov
lret
lahf
mov
loope
inc
sub
fnstcw
add
sub
push
mov
xor
stos
add
push
cld
jb
mov
mov
inc
popf
jb
mov
push
out
inc
jnp
jle
aad
imul
ss
add
and
lock
push
add
sub
add
out
aas
cmpsl
xor
adc
rcl
sbb
leave
in
dec
and
les
cs
xor
sub
test
jne
and
dec
push
adc
push
sbb
jno
add
shrl
adc
je
or
mulb
push
ljmp
push
ja
mov
adc
pop
mov
dec
mov
jns
lods
dec
testl
dec
das
pop
pop
mov
lahf
add
fcmovu
out
mov
xchg
sbb
dec
shl
addl
mov
or
stos
pop
push
roll
imul
lods
jmp
pop
dec
test
sub
cmpsl
push
mov
in
add
sbb
lods
xchg
cmpsl
loope
xchg
psubd
out
mov
lods
push
iret
jnp
sub
insb
add
rorb
cmp
push
mov
xor
xorl
mov
popf
out
and
lods
add
mov
mov
fisttpl
rolb
sub
stos
pop
sbb
gs
adc
sarl
cmp
pop
fdivl
sahf
cmp
ret
mov
inc
aam
mov
push
pop
inc
xor
xchg
aad
jle
inc
pop
lcall
xor
xchg
or
out
dec
push
rorb
cmp
xchg
icebp
insb
and
lock
aaa
cld
es
es
ds
lret
test
fists
fistpl
xor
mov
mov
sbbb
stc
xchg
or
in
xor
lcall
adc
push
pop
decl
pop
ret
mov
and
mov
and
jno
pop
leave
push
dec
or
sahf
loop
insb
lock
hlt
mov
in
xchg
jb
ja
arpl
mov
push
inc
mov
jo
cli
xor
cmp
clc
push
lods
mov
inc
lds
ret
inc
xchg
mov
xchg
xchg
xor
and
push
mov
xor
pushf
pushf
sbb
and
pop
cmpsb
cmovo
loope
movsb
or
sbb
dec
push
or
cs
xchg
adc
fwait
push
jle
fs
shrb
adc
pop
daa
movsb
test
in
fidivrs
in
rorb
adc
jo
push
hlt
loope
insb
in
and
sub
ss
fildll
rorb
pop
cmpsb
push
enter
dec
inc
sub
hlt
push
sarb
in
into
push
aam
add
insl
lcall
hlt
sbb
into
pop
inc
or
int
addb
push
inc
jae
mov
cmpsl
mull
and
mov
xchg
into
iret
shl
out
dec
arpl
arpl
fistpl
mov
jne
add
test
enter
loopne
fnstcw
pop
das
mov
jle
dec
xchg
pop
mov
xor
pop
repnz
dec
jmp
push
shl
push
into
inc
push
push
pop
popf
and
add
mov
sbb
or
mov
imul
push
xchg
jge
rorb
sbb
daa
pop
xorb
add
inc
jmp
xor
cmp
enter
scas
adc
ss
cli
loop
outsl
int
sub
mov
nopl
and
sub
adc
cli
movb
ficoml
mov
mov
mov
gs
outsl
add
sar
mov
pop
xlat
das
pushf
sbb
ffreep
pop
repz
dec
icebp
push
and
mov
sahf
sbb
cmpsl
lods
ds
or
aad
movsl
mov
mov
or
cwtl
adc
loop
fisubrs
xchg
or
sub
jp
imul
push
daa
lret
cmp
in
hlt
outsb
fs
das
sahf
stc
and
shrb
fimull
lahf
sbb
inc
adc
js
hlt
add
not
fsubrl
push
xchg
fcmovb
pop
mov
imul
pop
in
inc
push
add
push
and
and
xchg
mov
lock
mov
xchg
leave
in
mov
sbb
ds
rorl
push
adc
xor
adc
jo
lds
dec
aad
loope
mov
xor
cli
out
rclb
les
das
fldl
loopne
or
ss
test
fstl
lea
dec
jmp
push
xchg
jo
shrb
lahf
pop
xor
add
xchg
mov
adc
mull
and
stos
ret
loope
push
jns
add
pop
repz
jnp
sub
daa
mov
ljmp
push
dec
mov
call
jnp
inc
mov
fistpl
or
imul
andb
lea
adc
jecxz
call
call
sbb
inc
dec
mov
popf
enter
cltd
and
adc
pop
cs
cmp
in
mov
rcll
scas
shlb
scas
imul
pop
lock
xchg
push
repz
movsl
ja
push
stos
add
xorb
les
sbb
xchg
leave
lods
mov
sub
mov
lret
mov
inc
sbb
sbb
insb
dec
fwait
sbb
ljmp
fnstcw
test
mov
inc
jnp
adc
clc
sahf
popf
sub
loopne
int3
pusha
adc
das
cltd
mov
xchg
or
clc
shl
xor
dec
jge
xlat
jb
mov
mov
dec
sbb
mov
pop
push
cmp
enter
fdivl
or
fldenv
mov
jg
xchg
mov
test
dec
movsl
adc
rcll
es
pop
push
fisubs
mov
lret
sub
and
mov
stos
mov
enter
in
cmpsb
std
or
scas
sub
sahf
div
adc
mov
cltd
xchg
out
in
fsubrs
les
mov
cmpl
and
hlt
pop
inc
xchg
aas
sub
dec
in
mov
push
mov
xor
loop
fdivrs
inc
sub
out
stos
popf
lcall
sarb
pop
leave
mov
inc
movsb
mov
add
ret
andb
or
inc
jge
loopne
fnsetpm(287
js
xlat
daa
add
sub
jmp
inc
pop
ss
movsb
bound
mov
xor
push
outsl
push
xchg
mov
ja
push
leave
in
fwait
inc
pop
enter
add
jl
xchg
shl
pop
push
lahf
ficoms
xchg
fmull
xor
js
ljmp
jne
push
aam
adc
jmp
xor
jmp
and
loope
adc
movsb
cmp
aam
sub
jg
int3
jge
xchg
push
mov
hlt
cmpsb
jge
dec
jno
icebp
xor
sub
aaa
xchg
aas
push
ret
movsb
add
or
stc
aad
imul
pop
jl
jle
jge
cld
call
or
lods
dec
dec
hlt
sbb
pusha
xchg
adc
movl
bound
mov
sub
xchg
cmpsl
cmp
jno
mov
call
fistps
es
call
pop
inc
xor
sbb
pop
mov
ja
lods
fcompl
add
mov
jae
xchg
les
xchg
cmp
loope
xchg
sti
mov
rolb
out
pop
push
cli
fs
flds
mov
loope
into
inc
fcoms
popa
xorb
sbb
mov
es
btc
dec
or
inc
dec
pop
xchg
mov
mov
pop
dec
xor
stc
mov
pushw
and
fwait
test
sub
call
cwtl
mov
iret
ret
mov
sub
push
js
fs
aaa
sbb
inc
jmp
out
pop
cld
in
int
arpl
mov
sub
in
mov
fmul
add
mov
adc
cmp
mov
pop
push
push
xor
add
sub
mov
scas
ret
addr16
js
aaa
lret
mov
mov
pop
popf
std
fwait
push
cmc
shll
stos
xorb
aas
mov
jne
ja
mov
loopne
decl
jecxz
jecxz
movsb
dec
into
mov
out
cmp
inc
pop
mov
loopne
out
mov
add
mov
sbb
loopne
hlt
fs
mov
hlt
fmuls
xor
or
loopne
pop
adc
or
cltd
push
sbb
lock
and
sbb
cmpsl
rcrl
add
fsts
popa
js
or
jle
cmc
push
gs
cmp
cmc
in
fidivrs
adc
sbb
das
sub
std
inc
out
hlt
mov
repz
movsl
cmp
shrd
scas
sbbl
inc
jbe
cmpb
sbb
out
mov
add
add
inc
push
add
mov
out
push
xchg
jb
in
mov
dec
test
inc
dec
insb
jb
dec
jmp
repz
mov
sti
cmc
inc
cmpsb
push
pop
jo
ret
ljmp
dec
dec
sbb
scas
mov
sub
cmp
sbb
dec
mov
fstpt
sub
in
sahf
aaa
jg
jns
fildl
add
fdivr
push
xchg
cli
lds
fisttps
movsb
xor
adc
aad
push
imul
lret
push
gs
cmpsb
push
mov
inc
add
out
fs
pushf
std
and
lds
data16
adc
es
jg
in
jns
mov
aad
inc
movsb
roll
and
xor
sbb
sub
mov
or
mov
ret
aas
inc
jne
mov
sub
fs
aas
sbb
gs
dec
adc
rcrb
push
shlb
leave
ja
or
lcall
les
cmp
popf
push
cmpb
xor
dec
rcrb
pop
test
add
ds
jno
test
mov
sub
je
jmp
gs
mov
or
cmp
sub
and
xchg
xor
pop
insb
sarb
lret
pop
ljmp
add
push
and
ror
flds
js
sub
rorb
cmp
jge
and
clc
aas
cld
sbb
clc
pop
mov
adc
sbb
movsb
jno
insb
push
scas
call
cmp
sub
jo
int
stos
and
mov
daa
jb
jne
outsl
je
pop
pushf
xor
popa
ret
cmp
out
sbb
jg
xlat
inc
inc
sbb
bound
cmp
pusha
pop
mov
ret
xchg
sub
lret
mov
jecxz
bound
ret
pop
fldl
imul
lcall
mov
sub
or
sub
mov
xchg
popa
push
mov
adc
pause
inc
mov
loop
ret
pop
movsl
xor
arpl
mov
cld
cmpsl
jno
neg
fisubl
xlat
mov
hlt
and
xor
sbb
arpl
mov
iret
push
inc
pop
iret
lcall
mov
leave
dec
xorb
or
or
popa
push
inc
sub
mov
jns
jg
and
cmpsl
add
sub
loopne
incl
iret
mov
cmpsb
inc
fiadds
les
mov
imul
sti
dec
mov
cmp
int3
push
sbb
mov
stos
mov
fsubl
mov
or
dec
fistpl
mov
push
sbb
mov
cltd
outsl
or
add
stc
and
enter
push
adc
push
push
inc
xor
mov
out
rorb
sahf
iret
cmp
push
push
nop
jbe
adc
sbb
stos
sbb
xchg
lock
xchg
out
pop
inc
aam
cmp
pop
bound
aam
js
js
rorb
loope
cmp
mov
shlb
sbb
push
stos
movsb
mov
repnz
clc
pop
push
push
mov
sub
out
mov
inc
movsl
push
outsl
hlt
fiadds
sbb
xchg
jnp
xor
jbe
sub
rolb
insl
push
xchg
mov
pushf
pop
je
cwtl
xor
add
mov
cltd
jne
testb
test
test
mov
inc
repnz
pop
mov
pop
cmp
out
mov
lea
mov
into
decb
push
push
pop
xchg
push
aad
in
mov
sub
pop
cmp
ljmp
mov
cmp
inc
pop
icebp
push
in
sbb
sub
scas
or
dec
pop
int3
pushf
sbb
repnz
pop
sub
inc
daa
sbb
test
test
push
pop
jne
dec
and
popa
imul
testb
out
sub
test
icebp
out
inc
inc
jecxz
pop
inc
and
jmp
les
mov
ds
je
mov
push
ja
scas
sbb
jmp
rclb
stc
pop
sbb
lret
mov
clc
test
mov
jb
imul
call
xchg
push
fmuls
cmpsl
popa
mov
push
divl
mov
mov
sub
sbb
xchg
or
add
jo
mov
inc
in
test
mov
pop
xor
jl
out
ja
or
testb
rcrl
jnp
cmp
aaa
iret
outsl
xchg
aaa
or
adc
push
in
jno
adc
inc
jnp
in
xchg
inc
test
movsb
je
test
movsb
fs
les
xor
and
aam
les
and
xor
inc
test
movsb
je
test
movsb
fs
les
xor
and
aam
les
hlt
cmp
xor
movsb
je
test
movsb
fs
xor
adc
lock
je
inc
test
and
stos
jnp
fisubs
lods
lret
pushf
fisttpl
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
