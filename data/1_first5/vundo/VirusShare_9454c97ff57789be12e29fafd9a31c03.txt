inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
fildll
movsl
mov
mov
add
add
add
pop
add
mov
add
add
stos
add
add
add
push
pop
popa
add
add
add
add
add
add
add
add
dec
add
aaa
add
dec
add
add
add
add
and
lcall
add
add
add
add
add
add
add
add
add
add
xchg
add
push
add
lcall
add
add
dec
add
add
add
add
add
roll
add
add
add
add
add
rolb
mov
add
add
add
add
add
jl
push
add
add
add
add
add
add
add
lcall
add
dec
add
add
sub
lcall
add
aaa
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
nop
push
adc
dec
add
add
add
add
add
add
flds
dec
add
add
mov
leave
add
add
add
add
add
add
add
add
add
add
flds
dec
add
add
test
xchg
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
mov
add
add
ja
in
add
add
push
add
popf
add
mov
filds
inc
add
mov
filds
push
add
dec
add
add
push
add
add
add
add
add
add
jo
push
add
add
add
xchg
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
xchg
add
fldl
sub
out
add
movsl
add
add
in
add
add
add
add
daa
add
add
add
add
push
add
cmpsl
add
add
add
jb
xchg
add
add
add
add
add
add
add
add
add
jb
push
add
add
mov
or
add
inc
add
add
add
add
add
add
add
dec
add
add
out
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
lcall
add
out
add
dec
add
out
add
add
dec
add
add
add
add
or
add
add
xchg
add
or
add
add
add
pop
add
sub
mov
adc
loopne
inc
add
add
add
add
add
add
add
add
ja
push
add
add
dec
cli
or
mov
xchg
stos
add
decl
or
jl
lret
or
outsb
jge
pop
xor
mov
xor
sbb
mov
lock
jbe
js
cmpsb
jmp
jb
and
add
mov
xchg
push
mov
data16
push
andb
and
mov
sahf
mov
decb
stos
sbb
mov
jecxz
or
out
jnp
dec
iret
xorl
gs
clc
sub
or
lock
lds
jg
loopne
lock
in
jecxz
loopne
shr
nop
mov
cs
std
mov
ja
in
pop
negl
roll
jbe
cmp
xlat
add
add
cltd
jne
icebp
pop
sub
sahf
bound
adcl
hlt
hlt
repz
xor
adc
mov
fwait
imul
sub
insb
into
lock
outsl
dec
pmaxsw
data16
push
scas
aaa
mov
jae
cmp
sbb
bound
aas
sahf
das
rol
and
in
pop
add
push
adc
xor
shll
rolb
and
enter
ret
mov
jne
in
cmpsb
xor
jb
std
test
in
mov
xchg
imulb
daa
cmp
mov
nop
lea
adc
inc
add
es
jo
out
push
pop
dec
cld
mov
hlt
mov
outsl
bound
lahf
sbb
inc
fs
sbb
out
mov
ss
das
aam
mov
pmaddubsw
gs
and
cmp
dec
dec
xor
adc
dec
and
ret
arpl
sub
fsts
mov
ja
cmp
push
xor
push
mov
pop
sbb
jns
push
xchg
inc
lods
shrl
push
inc
cwtl
fmull
push
insl
mov
lea
mov
mov
xchg
push
pushf
in
sbb
shlb
add
pop
roll
inc
add
into
sbb
les
dec
mov
inc
das
mov
sub
in
cmp
or
lods
jecxz
and
or
xchg
jno
mov
or
das
push
push
addr16
lahf
or
rcl
ja
xor
mov
imul
sbb
mul
cltd
jae
adc
and
dec
mov
mov
inc
pop
inc
das
mov
outsb
movsb
cmp
jnp
les
pop
ret
and
mov
bound
lock
shll
cmp
push
mov
inc
test
out
cmp
sarb
decb
adc
or
sub
out
sbb
xchg
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
popf
test
negl
xchg
fdivr
add
push
ss
push
nop
daa
dec
aaa
pop
shrb
negl
cmpsl
int
repz
sub
mov
pop
inc
push
jge
dec
aaa
pop
fimuls
into
jnp
pop
out
jmp
fisttpll
out
inc
sub
add
ds
sbb
cmp
ficomps
add
dec
dec
sbb
cmpsb
scas
ret
fwait
divb
jmp
das
mov
push
scas
pop
jle
stc
out
inc
clc
push
and
bnd
mov
mov
in
aam
insl
leave
add
xchg
test
aaa
or
jecxz
sahf
push
orl
mov
stc
or
or
aas
frstor
sub
js
lock
and
jnp
inc
mov
ficoms
mov
cmpsl
and
test
jb
ja
lods
pop
push
push
daa
push
xlat
inc
test
jp
cmp
pushf
fdivrl
movl
xlat
popf
out
loopne
xchg
in
std
cmpsl
int
dec
pop
sub
outsb
and
push
setae
push
outsl
mov
mov
and
icebp
jecxz
cli
nop
movsl
mov
push
dec
adc
sub
inc
cmp
jmp
sti
cmp
icebp
repz
repnz
inc
dec
push
dec
and
sub
push
sub
cs
fsubp
pop
and
icebp
jmp
mov
inc
sub
ja
pop
insl
pop
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
push
cmp
pop
insl
pop
jge
dec
aaa
pop
lods
adc
mov
mov
lods
inc
cltd
adc
mov
popf
push
mov
add
add
jno
loopne
mov
add
sbb
ljmp
fstpl
ret
xor
sbb
int
je
stc
jns
adc
lods
jno
rclb
lea
or
xchg
cmc
mov
into
aam
xor
ret
xchg
push
dec
ret
std
inc
mov
les
popf
adc
rol
push
and
lret
xor
jle
cltd
in
push
pop
xor
pop
sbb
addr16
jmp
ss
cld
sbbb
in
loope
xchg
fmull
adc
pusha
repnz
add
mov
call
xor
rorb
jb
sbb
xchg
adcl
dec
out
dec
mov
sub
shr
push
fs
push
or
mov
pushf
sarl
repnz
loope
push
mov
push
push
hlt
xchg
shl
mov
stos
leave
pusha
push
mov
pop
scas
mov
jl
xchg
mov
dec
xchg
cmp
mov
das
jnp
repnz
mov
outsb
imul
out
inc
or
out
icebp
addr16
dec
mov
out
shrl
js
test
iret
xor
pop
in
and
mov
add
push
shl
mov
jo
rclb
jl
cmpsb
jp
mov
inc
imul
mov
test
xor
loope
add
xor
or
push
or
jbe
push
jl
fldcw
cmp
adc
insl
sub
add
sti
test
fcoml
sbb
xor
pop
addr16
das
xchg
jle
pop
add
in
cmpsl
sub
ret
pop
pop
xorb
filds
into
test
jl
je
stc
in
push
int
fstpt
dec
loope
pusha
jo
andl
stc
subb
dec
push
sub
sbb
inc
sub
mov
clc
xchg
scas
out
fsubrs
loopne
clc
xor
in
xchg
loop
das
xor
icebp
and
mov
sub
mov
pop
out
xor
dec
cltd
jle
and
addl
mov
sahf
sahf
push
mov
cmpsl
scas
je
lcall
out
subb
hlt
lret
decl
test
and
pushfw
pop
cmp
call
xor
call
fistps
sub
sub
adc
or
add
cs
and
or
pop
lock
test
mov
movsl
loope
das
dec
inc
cmp
movsb
in
mov
and
mov
mov
and
push
and
scas
jne
mov
leave
mov
out
ret
aam
repz
cmp
jae
das
stos
sub
add
mov
aas
mov
jno
pop
icebp
mov
or
xchg
jp
pop
out
adc
add
adc
mov
loop
cmpsl
imul
clc
test
xor
pop
lods
iret
adc
mov
mov
sti
insb
xchg
outsb
xor
in
or
inc
pop
ljmp
lds
pop
pop
inc
aad
dec
jg
testb
ljmp
pop
iret
test
stos
pop
std
push
or
xchg
mov
dec
push
negb
in
ja
inc
cmp
xchg
sahf
clc
out
scas
fwait
push
pop
mov
shrb
xchg
pop
dec
inc
fnstenv
ja
cmp
and
and
loop
test
pop
js
dec
aad
mov
jbe
inc
sub
mov
arpl
nop
stc
add
dec
push
mov
fsubr
mov
push
lods
mov
scas
pushf
repz
enter
cmp
pop
cwtl
pusha
rorb
xor
pushf
jl
mov
ss
pop
lds
push
aas
fwait
xchg
adc
sub
sti
lods
jne
mov
stc
movsb
adc
cmpsl
leave
mov
mov
les
cmp
sbb
push
or
fldenv
dec
sbb
pop
sahf
or
mov
add
mov
mov
xchg
sbb
addr16
in
mov
outsb
fwait
cmc
mov
pop
push
or
mov
fists
xchg
cltd
sub
test
out
std
adc
and
jae
or
pmaxsw
andb
sub
add
dec
xchg
mov
sbb
bound
lahf
jg
or
add
icebp
or
pop
push
jae
cmp
fistl
pop
and
stos
pop
out
jmp
mov
fdivl
insb
jno
xchg
mov
jecxz
les
leave
mul
dec
cld
data16
fs
sti
fisubrl
mov
arpl
xchg
inc
push
xor
add
add
roll
ljmp
jp
into
xchg
pop
pop
push
lcall
or
out
push
popa
sub
fsubrs
aad
rcl
inc
pop
mov
push
jmp
inc
push
outsb
insb
sub
xchg
int3
add
add
js
sahf
cmp
dec
mov
popf
dec
add
aaa
xchg
in
sub
insb
lcall
iret
xchg
jbe
test
xchg
cmp
inc
cmp
ret
cmp
cmc
imul
adc
add
test
xor
inc
dec
mov
int
dec
leave
inc
gs
fistpll
jne
movsl
add
dec
and
jl
test
mov
pop
cmp
test
xchg
scas
enter
hlt
mov
ret
dec
sub
xchg
ss
push
stos
test
dec
mov
fisubs
push
jecxz
dec
xchg
gs
dec
inc
loope
add
ja
scas
aaa
dec
dec
enter
push
pop
jae
add
xchg
push
pop
insb
sbb
xor
das
mov
les
mov
and
add
pop
add
inc
daa
adc
mov
insb
fmul
andl
aaa
lcall
jmp
ds
jae
ja
sbbl
jno
inc
test
nop
lea
inc
mov
sub
movsl
and
ja
lahf
addr16
xchg
adc
push
cmp
divb
stc
rclb
xor
pop
cmpsl
loop,pt
sbb
in
fmuls
faddl
xchg
bnd
mov
xorl
mov
xor
xchg
aaa
cwtl
fbstp
subl
push
sub
fbstp
jl
cmp
sbb
sbb
adc
repz
hlt
imul
ja
sbb
movsl
and
pop
sbb
xchg
jbe
int3
cltd
add
xor
jns
fistpll
mov
in
jo
jns
lods
incl
mov
enter
enter
pop
pop
mov
xor
add
jmp
pop
pop
out
push
jp
push
out
push
stos
add
fwait
mov
je
in
out
jnp
out
pop
test
ss
outsb
sti
mov
loope
ret
push
jb
fucomp
rolb
ret
dec
sarl
push
push
hlt
iret
cmp
xor
mov
adcb
dec
inc
cmp
es
mov
or
pop
sar
push
test
push
mov
pop
lret
ret
jne
aam
cmpsb
xorb
idiv
dec
insl
out
sbbl
jbe
mov
mov
arpl
or
mov
xor
lret
sbb
lods
ret
sbbl
fs
out
movsl
in
out
adc
push
xor
mov
stos
pop
dec
mov
gs
xchg
mov
push
scas
popa
test
and
inc
cmpsl
xchg
inc
stc
aad
pop
or
xchg
fsubl
fdivrp
inc
scas
mov
pop
stos
and
push
cmpsb
push
mov
dec
in
dec
sbb
mov
push
xor
gs
jo
clc
setg
xor
movsb
cltd
jmp
and
dec
xchg
fisttpll
cmpsb
mov
rcrl
mov
iret
mov
add
sub
dec
xor
scas
and
or
stos
lods
cmp
fisttps
xor
adc
inc
pop
aam
cltd
mov
addl
lret
mov
mov
fsubs
fildll
mov
clc
inc
int
fs
sbb
int3
inc
and
fisttpl
push
testb
xchg
adc
sahf
mov
cmpl
or
into
clc
insb
mov
cmpsl
loop
inc
and
stos
inc
mov
pop
cltd
scas
mov
inc
and
mov
mov
lret
push
out
ljmp
xor
in
mov
push
mov
inc
and
nop
inc
push
mov
jle
jbe
fstpl
inc
cvtpd2dq
mov
leave
sub
jg
fidivrs
push
fdivrs
or
fdivl
ds
jne
fbstp
cmp
mov
mov
push
lret
cmp
mov
jg
sbb
negb
pop
cmp
push
scas
sbb
jmp
jl
jo
inc
repnz
xchg
es
insb
fld1
das
inc
xor
fisubl
dec
cmpsb
xor
jecxz
mov
xchg
shrl
filds
adc
addr16
jbe
push
outsl
jne
test
push
and
mov
int
add
jae
shlb
das
push
dec
dec
sbb
das
mov
cmp
pop
fmul
out
dec
jnp
in
imul
jle
in
ret
repnz
push
gs
ret
inc
mov
mov
loop
cmpsl
leave
mov
out
arpl
and
lcall
fcoms
and
jle
pop
adc
neg
int3
aas
inc
mov
mov
stos
fwait
dec
int
stos
add
sub
add
ret
shlb
or
ds
icebp
push
jl
adc
insl
fistl
pop
test
xor
mov
jb
in
imul
xor
mov
jle
fucom
pop
jb
dec
mov
cmp
xchg
test
stc
jns
or
xor
inc
dec
add
sti
mov
in
mov
xor
jl,pn
pop
cs
leave
dec
notl
out
cs
lret
xor
pop
and
addl
sbbl
xchg
push
lret
mov
xchg
idiv
jle
rcrb
test
ljmp
sbb
into
lds
addb
sub
pop
push
out
jnp
push
daa
inc
add
jnp
dec
pop
in
imul
into
cld
orl
addl
pop
repz
shrl
mov
push
aas
lods
push
adc
xor
js
cltd
imul
aam
mov
add
xchg
xor
adcl
cld
aad
cmp
test
mov
mov
gs
dec
pop
jge
push
cld
sahf
mov
cmpsb
sub
and
test
std
xchg
ja
mov
mov
aas
arpl
xchg
push
dec
sub
dec
jb
data16
movsb
jmp
and
js
repnz
repnz
fs
jecxz
inc
add
sbb
mov
adc
xor
cmpsb
stos
pop
xor
push
and
pop
lods
sahf
or
pop
jns
xchg
gs
pop
into
iret
fcomp
fistl
and
mov
xor
pushf
or
inc
testb
scas
xchg
xchg
sti
jns
in
pop
shl
mov
and
aas
inc
les
dec
mov
ljmp
dec
jg
pop
insl
ss
insl
imul
and
xlat
imul
or
add
inc
xchg
movsl
or
mov
dec
lcall
lret
pop
mov
xchg
push
stos
dec
mov
cmpsl
push
xor
or
fidivs
adc
push
shlb
pop
inc
rcrl
mov
jo
into
lret
pop
out
sbb
or
sbb
jb
loope
lock
shrl
cmc
addr16
sub
mov
pop
sub
cmp
out
rcrl
ret
adc
inc
mov
mov
xchg
jb
sub
pop
movsl
or
std
mov
cmc
jmp
jl
or
iret
cltd
mov
jmp
mov
popf
data16
mov
jp
push
xchg
lret
pusha
pushl
in
outsl
adc
sub
mov
add
pusha
or
stos
inc
iret
push
fldl2t
testl
out
jne
push
in
push
mov
cmp
mov
test
ss
mov
adc
inc
inc
adc
mov
nop
push
stc
aad
inc
sarb
aad
sti
out
cmpb
daa
mov
cwtl
or
aad
or
andb
jg
ljmp
and
mov
pop
stos
xchg
fstl
dec
sbb
jb
add
cmpsl
xor
aas
push
cli
add
test
jo
roll
mov
fists
jb
add
sub
inc
popf
std
nop
lods
jge
xor
mov
dec
mov
aam
cmp
es
push
fildll
and
jne
shll
or
loop
movsb
popf
mov
in
add
loop
jmp
push
sub
inc
repz
jnp
in
lea
decb
or
xchg
je
pop
and
insb
mov
mov
scas
enter
adc
test
xchg
testb
in
stc
in
fsubr
push
les
sbb
mov
icebp
aas
loop
mov
adc
or
xor
cmpsb
cmp
mov
int
out
dec
pop
not
jmp
xor
andb
mov
test
out
int3
xlat
test
sti
pop
pop
dec
push
xchg
cmp
rorb
out
sti
sbb
outsl
rcll
hlt
fwait
mov
insl
or
mov
pushf
repz
pop
icebp
cmp
or
add
lods
sarl
pusha
lahf
mov
pop
add
cmp
sub
sub
lods
jg
pop
sbb
xchg
aaa
mov
inc
movsb
cmpsl
adc
les
notb
or
test
in
jecxz
fisttpl
out
xor
jge
insb
cltd
insb
subb
in
mov
and
out
icebp
xor
gs
test
add
pop
mov
pop
cwtl
jge
pop
push
stos
push
es
fwait
mov
notl
mov
push
and
mov
test
or
jno
push
int
out
mov
dec
push
ds
add
mov
xlat
push
out
cltd
cs
inc
fwait
or
or
aam
shl
jl
xchg
pop
aas
in
out
mov
sbb
test
iret
lods
pop
or
mov
jmp
mov
mov
nop
pop
ds
and
popf
mov
icebp
cld
ss
aam
into
pop
dec
ret
popf
mov
mov
xchg
imul
ja
pop
sbb
ljmp
sti
add
outsb
add
mov
std
pop
mov
sbb
pop
push
mov
sbb
adc
test
out
push
fdivs
nop
mov
rolb
xchg
lea
add
mov
cmc
aad
mov
push
cwtl
pushf
sub
inc
popf
mov
sub
inc
lcall
xlat
imul
sub
sbb
clc
scas
out
sahf
dec
xor
sub
nop
daa
dec
lock
das
push
das
mov
mov
adc
outsb
sub
mov
xchg
dec
icebp
push
lock
cmp
cmc
incb
adc
push
xchg
aad
cmp
jne
das
in
insl
loope
cltd
sbbl
mov
adc
add
pop
push
stc
jg
xor
mov
push
cmp
mov
xor
mov
into
jno
lahf
test
bound
dec
mov
and
in
icebp
xor
or
ja
sub
imul
sub
sub
lret
scas
xor
push
clc
adc
dec
idivb
cltd
es
int
clc
push
hlt
in
mov
xor
dec
fs
jno
mov
dec
mov
repnz
popf
jp
test
and
push
outsl
lcall
jns
sub
enter
jae
scas
stc
fs
xchg
sbb
add
into
xchg
imul
and
pushf
enter
push
movsl
lcall
cmp
jle
jnp
enter
inc
xchg
xchg
es
int3
lret
jne
mov
es
aaa
sbb
jge
cmpsl
xchg
inc
push
and
and
icebp
jle,pt
scas
pop
sbb
fs
in
inc
xor
mov
or
das
orl
cmp
mov
adc
pop
sbb
inc
xchg
and
testb
stos
xchg
es
lea
fsubs
and
aam
pop
xchg
xor
mov
ja
inc
push
mov
add
dec
and
lret
cltd
or
lods
ret
cli
pop
sahf
and
iret
mov
das
jmp
mov
sbb
add
imul
mov
pop
ffreep
pop
mov
shl
test
popa
mov
push
mov
pop
mulb
mov
leave
cmp
imul
push
fnstcw
lods
inc
xchg
fldl
add
inc
aad
pop
inc
pop
lods
xor
mov
dec
setle
jmp
dec
jnp
ljmp
jnp
cmp
mov
jge
or
mov
imul
call
cmc
sub
or
mov
loopne
orb
out
cmovno
mov
lock
xchg
adc
stos
mov
sub
lods
lret
xchg
lock
mov
push
inc
out
mov
aam
and
dec
xor
mov
push
xchg
iret
les
test
cld
out
test
or
and
and
mov
xor
js
fwait
mov
xor
fsubrl
xchg
into
pop
dec
stos
pushl
sub
ljmp
div
lahf
sarl
sbb
out
mov
add
int3
xor
mov
jp
vpsubusw
pushf
xchg
insb
sti
cwtl
xlat
addr16
add
push
and
test
shlb
push
add
or
or
imul
ljmp
or
fstp
dec
sbb
lods
push
jb
ljmp
test
mov
outsb
cmp
loop
fst
push
fimull
int
jnp
push
fildll
cs
jmp
int3
fmull
cmpl
fcoms
leave
jae
and
mov
lock
jns,pn
mov
jle
xchg
inc
jmp
push
aad
cmpsb
arpl
dec
jo
mull
add
scas
add
dec
jge
push
dec
sub
cmp
sub
push
addr16
cwtl
adc
clc
and
cmp
inc
lds
inc
push
or
ljmp
or
dec
push
jnp
adc
jbe
mov
aas
popf
add
inc
insl
addr16
or
mov
enter
idivb
pop
jo
push
cmp
xchg
jnp
outsl
fdivrl
or
push
dec
int3
inc
gs
xchg
pop
mov
lret
jnp
pop
xor
pop
mov
cli
xchg
xorl
push
lea
test
notl
push
mov
bound
popa
mov
jg
push
push
repnz
cwtl
mov
cmp
cmp
cmp
sbb
rcrb
test
xchg
or
rcrl
or
add
mov
mov
js
xchg
mov
mov
pop
push
loopne
notb
jg
ret
jg
fisubs
lahf
bound
xor
lahf
sub
arpl
daa
out
pushf
repz
jmp
je
out
cmpsb
cmpsl
push
aam
loopne
cmpsb
outsl
sub
adc
rcr
pop
daa
pop
jae
inc
mov
mov
mov
mov
cmpsl
push
sub
push
lahf
in
inc
sahf
push
loopne
ret
fcmovne
lret
inc
mov
mov
ss
int3
or
add
push
testl
adc
pusha
jl
xor
fimuls
dec
add
dec
mov
rcrl
ds
jnp
pushf
loopne
mov
ljmp
stos
mov
leave
scas
pop
push
scas
xchg
sahf
add
and
mov
insl
test
shl
addr16
inc
jb
mov
dec
add
lret
mov
xchg
mov
push
or
ljmp
rclb
adc
cmp
pop
jecxz
int
adc
push
or
mov
xorb
dec
xchg
leave
std
pop
std
movsb
dec
xor
shl
dec
xor
sbb
and
or
pop
repz
in
inc
and
dec
lods
add
sahf
enter
xchg
push
call
and
imul
xorl
cmpsb
lods
int3
xchg
dec
push
aaa
dec
sub
sbb
repnz
div
mov
fiadds
outsb
jb
mov
mov
insb
movsb
pop
fsts
insl
cwtl
sub
cwtl
fdivrl
push
fisubrs
mov
ret
das
mov
dec
dec
xchg
inc
jns
inc
add
sbb
out
mov
ljmp
jo
xor
mov
dec
cmp
in
mov
aaa
dec
push
das
fdivs
cmp
mov
or
std
lods
das
jp
xor
add
aaa
lcall
mov
pop
jmp
sbb
les
cwtl
xchg
enter
in
ss
push
mov
and
sbb
call
cmp
repnz
lcall
test
mov
xchg
xchg
std
cmpsl
int
fldl
push
cmp
pop
insl
pop
jge
dec
aaa
pop
lods
xlat
mov
xchg
xchg
std
cmpsl
int
fldl
push
cmp
pop
insl
pop
jge
dec
aaa
pop
test
negl
cmpsl
leave
mov
inc
sub
cmp
ja
pop
imul
mov
shrl
fldl
dec
aaa
sbb
int
ja
jo
lahf
add
mov
scas
dec
mov
sbb
bound
imulb
int3
fmull
pop
mov
mov
scas
dec
mov
cmp
or
jns
in
push
cld
pop
int
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
fistps
adc
and
adc
and
cmp
syscall
sbb
outsl
les
out
insl
xchg
lds
ds
add
es
in
pop
mov
test
xchg
clc
cld
xor
mov
mov
or
jl
mov
nop
popa
iret
repnz
xlat
adc
push
in
je
ror
push
and
push
xlat
orb
mov
imul
sub
xchg
cld
push
adc
add
mov
jl
jno
ljmp
cmpsl
aad
out
pop
lcall
adc
jmp
ret
lcall
in
jl
xor
pop
push
arpl
mov
xchg
pop
in
je
mov
pop
in
outsb
mov
arpl
insb
sahf
jl
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
enter
lret
or
xchg
dec
mov
push
dec
lahf
push
lods
sub
aaa
sti
sub
sub
lea
in
adc
add
aas
mov
jns
pop
xor
sbb
outsl
stos
jnp
sub
or
sbb
jle
out
cli
das
sub
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
adc
flds
sar
fsubl
push
pop
aad
sti
cwtl
inc
test
cmpl
jno
lds
stos
xchg
lret
jge
cmp
popf
sbb
adc
aas
mov
cmp
ja
jg
cltd
mov
push
inc
jb
cmp
adc
int
jmp
jno
cwtl
call
cmp
push
aad
dec
sub
jb
lods
mov
and
stos
adc
xchg
mov
movsl
lock
fimull
test
cmp
add
cwtl
xchg
call
inc
jne
adc
test
shlb
es
js
iret
mov
cmp
stc
mov
inc
out
out
mulb
fistpl
mov
outsb
pop
jbe
dec
out
xchg
daa
push
cwtl
clc
push
mov
add
xor
into
jo
aam
imul
add
jmp
cmpb
adc
repz
push
rorb
lahf
cmp
sbbb
lea
mov
sub
inc
fnstcw
xor
aas
stos
popa
cmpsl
xor
mov
and
add
shll
inc
sbb
test
xchg
mov
ljmp
ss
xchg
mov
mov
testb
imul
sub
addps
pushf
iret
jge
mov
and
test
jmp
das
int
cmp
pop
sahf
mov
nop
xlat
xlat
mov
dec
or
inc
xor
mov
jne
jmp
pop
dec
push
gs
fsubr
mov
xor
dec
in
lret
int
fdivrl
xchg
cltd
insb
das
ret
mov
fs
xchg
xor
mov
popf
sub
stos
in
xor
mov
enter
xchg
xlat
stc
mov
gs
and
mov
mov
mov
ljmp
pop
pop
xchg
cs
mov
cmp
pushf
shr
mov
into
call
adc
sbb
test
movsb
xor
iret
mov
mov
mov
push
push
push
mov
adc
inc
and
lcall
pop
loope
in
and
sbb
out
mov
leave
dec
or
inc
adc
inc
or
push
out
xchg
mov
aaa
mov
jecxz
mov
push
lahf
shrb
call
shl
dec
fwait
sar
stc
cmpsb
adc
add
inc
cmp
push
dec
clc
mov
or
add
dec
aaa
fdiv
stc
cmp
std
lock
outsl
mov
adc
subl
repz
add
cmc
adc
or
fiadds
pop
and
mov
xchg
mov
push
mov
fcoms
aaa
nop
push
cmc
stos
sbb
sbb
rcrb
cmpsl
xchg
mov
scas
push
sbb
clc
sub
test
add
jae
sub
scas
rclb
repz
pop
or
xchg
xchg
leave
adc
arpl
clc
mov
scas
mov
ljmp
subl
and
push
outsl
int3
jne
xchg
push
pop
hlt
push
fs
decb
mov
enter
sub
prefetch
jnp
fidivrs
xchg
aam
push
addr16
xchg
les
lods
adc
es
add
out
mov
mov
and
sbb
xor
hlt
xor
add
iret
sbb
xor
sbb
and
fs
dec
and
insb
mov
and
adcl
jno
filds
or
stos
bound
mov
out
sbb
fwait
dec
js
in
out
or
pushf
pop
adc
dec
aam
rcrl
fcmovnb
loope
inc
or
ror
out
pusha
fwait
pop
push
scas
cmpsl
out
adc
popf
ret
mov
dec
movsb
mov
dec
mov
xchg
pop
pop
jg
aad
adc
sbb
xchg
xchg
jnp
loopne
fdivrs
mov
push
repz
adcl
cmp
out
imul
sub
pop
test
push
lret
push
jne
add
mov
sub
icebp
pop
cmp
in
mov
std
int3
out
sbb
bswap
rclb
fs
insb
imul
xchg
daa
adc
out
orb
out
vpavgw
push
movsb
mov
mulb
mov
inc
insl
or
cltd
imul
addr16
mov
nop
fildll
sub
fcom
mov
cmc
xchg
push
sbb
jp
rcll
mov
mov
addb
jmp
xchg
xlat
outsb
je
mov
push
sti
jmp
lea
ss
mov
loope
cmpb
xor
mov
jnp
push
fwait
or
push
popl
lods
int3
jne
cmp
jb
sbb
inc
cs
xchg
xchg
and
xlat
inc
adc
cwtl
test
jbe
lods
adc
jp
pushf
mov
mov
data16
cmpb
mov
imul
mov
xor
test
cmpsb
js
add
xchg
movsl
jo
adc
daa
jecxz
xchg
cmpsl
push
bound
jmp
cs
add
or
scas
shrl
popf
pop
fcompl
adc
xor
sbb
dec
cmp
sub
jno
test
icebp
fstpl
inc
sub
dec
sbb
mov
sub
inc
dec
orl
jb
dec
scas
out
xchg
neg
aas
test
xchg
test
jne
push
add
scas
cld
adc
mov
frstor
out
pop
rcrl
or
and
cmp
mov
aam
es
test
sbb
divl
aas
add
icebp
andb
scas
fiaddl
and
or
in
je
add
dec
hlt
lcall
xchg
std
movsb
mov
cmc
cmpb
ret
xchg
xchg
cmp
ret
mov
xchg
loopne
cwtl
icebp
outsl
test
in
shrl
pop
mov
ljmp
mov
jb
xor
call
pop
pop
push
shlb
stos
pusha
insl
lahf
or
cmp
lret
push
xor
lcall
jo
sub
mov
lcall
dec
fisubs
xor
movsl
iret
rol
aam
es
xchg
and
out
xor
incb
jg
lods
stos
mov
lock
data16
in
movsl
jge
push
xor
cltd
stos
or
add
jae
or
repnz
inc
and
mov
scas
jle
cli
xchg
dec
sub
arpl
dec
dec
and
inc
icebp
sbb
mov
and
dec
out
lahf
xor
inc
es
mov
pop
int
subb
mov
aam
push
mov
mov
and
jo
lahf
cmp
dec
clc
mov
sbb
sbb
inc
inc
hlt
jl
sub
pop
or
mov
mov
in
fisttps
clc
mov
push
fsubrs
js
lods
adc
pop
or
call
and
sub
jl
imul
mov
mov
sbb
add
fmull
sti
lea
fs
inc
inc
jge
inc
mov
popf
sbb
jbe
push
mov
jne
add
aam
scas
mov
push
add
sti
jge
pop
cmp
mov
mov
dec
xlat
or
pop
jbe
jae
adc
jo
lock
inc
xchg
add
fdivr
xchg
iret
mov
fildll
call
push
shrd
ljmp
add
clc
sbb
stos
push
and
adcl
shrb
bound
ficoms
iret
outsl
aad
arpl
xchg
lcall
xchg
mov
iret
add
adc
das
dec
pop
mov
data16
xchg
pushf
cltd
jnp
incl
test
movsb
or
popf
pop
inc
mov
mov
stos
mov
inc
mov
or
out
pop
ror
nop
pop
sub
stc
mov
xor
xchg
mov
inc
pushf
jae
jno
das
mov
push
ds
sbb
insb
mov
je
gs
mov
lods
fimull
in
out
out
lea
push
jne
xchg
rorl
xchg
les
mov
rcll
xchg
or
mov
dec
add
lahf
mov
insl
xchg
sub
call
cltd
mov
mov
insl
out
mov
shr
out
jecxz
xchg
rolb
out
clc
xor
call
adc
pushf
ljmp
aas
test
or
push
cmp
insb
in
data16
mov
shlb
jmp
or
sub
cmp
push
inc
das
fwait
test
test
scas
mov
loopne
cmp
jnp
inc
sbb
pop
cmp
or
adc
lea
cmp
cmp
mov
aam
jne
xor
push
xor
icebp
xchg
sbb
loopne
cmp
jb
mov
ror
jae
out
scas
mov
dec
leave
and
aam
mov
adc
pusha
lret
fldenv
lea
in
and
lret
fbstp
cmpsb
fcompl
push
mov
out
imul
loope
sbb
jg
mov
mov
movsb
cmp
mov
ret
es
dec
adc
orl
xchg
push
sbb
test
test
add
inc
inc
out
jp
sub
icebp
nop
cld
out
cmp
mov
outsl
pop
inc
sarl
xor
jo
pop
add
lahf
test
cmpsl
mov
mov
inc
or
xchg
insl
mov
test
push
lods
jmp
jae
loop
inc
fdivrl
addr16
ficomps
lods
dec
int
pop
mov
andb
adc
addr16
xchg
inc
inc
jb
lahf
arpl
sbb
inc
or
push
inc
outsl
call
push
dec
xchg
adc
dec
jge
lcall
jge
sbb
lea
mov
sti
cmpsl
xor
mov
orl
and
sub
icebp
sbb
popa
mov
add
ret
ds
daa
shlb
loope
or
popa
add
xor
dec
add
ljmp
fwait
mov
cmc
push
jb
push
sbb
sbb
mov
loop
mov
imul
sbb
or
es
aad
in
jns
xchg
adc
nop
cmp
hlt
repz
into
mov
stos
das
add
mov
pop
fstpl
dec
dec
jne
in
pop
in
test
daa
inc
out
in
loopne
test
mov
aas
push
xor
jbe
es
push
test
push
dec
adc
and
inc
jae
aam
pop
xchg
adc
cmp
punpckhwd
mov
xor
push
in
lret
sbb
sub
adc
into
mov
sbb
jno
xchg
scas
dec
ja
cmp
mov
mov
cltd
test
fnstcw
add
jge
adc
sti
xchg
inc
into
das
inc
cmp
mov
cmp
shll
mov
rorb
jae
adc
ret
adc
scas
je
mov
xor
jo
hlt
pop
and
and
js
lcall
lods
pop
push
stos
xlat
out
push
movsb
out
mov
pop
pop
inc
and
push
xchg
lods
sub
sbb
add
fs
xchg
and
push
hlt
shl
inc
daa
call
and
mov
and
or
mov
fisubs
ficomps
test
mov
pop
sub
push
add
leave
jle,pt
scas
jg
mov
xchg
sub
mov
and
pushf
push
dec
clc
ret
sbb
pop
lcall
mov
or
ret
std
push
cmc
cmc
andb
out
inc
loope
hlt
cmp
loop
loope
cmp
dec
loopne
cmp
mov
nop
rcll
inc
lcall
sub
jl
jnp
cmp
ljmp
fnstcw
inc
mov
mov
mov
inc
cmc
dec
jp
dec
fwait
mov
ja
filds
sti
push
push
ret
repnz
push
sub
filds
mov
or
lahf
out
outsb
nop
dec
ret
test
dec
shrb
or
ljmp
push
xchg
push
in
mov
ret
mov
push
leave
ret
mov
and
test
adc
jg
test
das
les
aad
dec
sub
enter
xchg
rcll
sub
xchg
dec
push
or
out
and
scas
xor
loop
repz
push
ja
add
iret
mov
and
outsl
mov
push
push
add
push
dec
mov
sub
cmovle
test
push
and
iret
xchg
add
push
push
dec
mov
aaa
mov
daa
rolb
stos
inc
jne
mov
scas
jae
adc
mov
cwtl
push
out
rcrl
sbb
inc
mov
or
cmp
xchg
lahf
pop
lcall
cmp
setne
cmp
nop
or
inc
lods
xor
iret
int
push
adc
xchg
fwait
cmp
cs
mov
sti
lcall
pushf
xor
cmp
mov
pop
inc
sti
xchg
loop
xlat
call
popa
xchg
ja
xchg
sub
add
in
or
pop
add
dec
arpl
sub
iret
in
out
cmpb
xor
leave
or
jnp
xchg
pop
mov
pop
aam
outsb
push
sbb
xor
scas
dec
mov
pop
jg
mov
adc
mov
pop
ret
int
test
arpl
fnsave
and
sub
xor
ljmp
pop
aad
lods
fstps
adc
les
int
mov
cwtl
shll
push
mov
dec
sarl
jg
or
enter
jb
add
pop
xchg
out
adc
pop
lahf
call
pop
fnstsw
mov
shll
inc
jae
inc
cmp
cmp
xor
enter
push
mov
push
aam
push
ds
pop
adc
dec
mov
mov
xor
rcr
push
call
lea
xor
cwtl
push
jo,pt
insb
fldenv
jne
mov
lods
cli
hlt
icebp
sbb
movsb
jecxz
push
sub
lahf
mov
jo
cmp
pop
icebp
icebp
ret
int
stos
or
loopne
out
stc
pop
testb
sahf
pop
jae
adc
sbb
leave
lods
ret
push
pop
fidivrl
push
jmp
inc
and
or
jne
sub
idivb
mov
cld
mov
sbb
test
and
and
pusha
mov
pop
cmp
cli
and
movsb
mull
pop
xor
dec
lcall
lods
lret
pop
and
test
sub
pop
jb
push
icebp
or
sbb
ja
popf
xor
xchg
adc
aaa
inc
out
inc
mov
and
push
mov
sahf
jbe
pop
push
mov
scas
test
ja
or
or
pop
push
jg
inc
adc
and
pop
imul
sbb
in
jl
dec
fisttpl
sbb
repz
aam
pushf
mov
imul
imul
loop
or
cld
jae
scas
call
mov
ss
fwait
ret
leave
shrb
pop
add
push
pop
inc
mov
jb
and
outsl
js
pop
mov
inc
jo
sarl
push
outsb
lahf
cld
cmp
scas
mov
jb
int
xchg
sub
cmp
xchg
pop
jl
pop
or
inc
je
ja
sub
mov
stc
ds
popa
arpl
mov
lods
inc
scas
test
dec
cmp
cmpb
dec
cmc
dec
cmp
sahf
test
cwtl
loope
cmp
out
js
adc
mov
out
dec
rclb
test
in
fsubr
sti
fldt
inc
aad
stos
fndisi(8087
fwait
out
mov
xor
xchg
pop
loop
cmp
data16
mov
roll
rep
mov
ficomps
in
dec
mov
xchg
pop
cwtl
cmpsl
bound
mov
adc
pushf
lret
mov
mov
mov
pop
adc
fsubrs
and
pop
xchg
movsb
fwait
xlat
fidivrs
push
dec
push
popf
xchg
addr16
leave
mov
fisttps
jp
jo
repz
out
fstps
in
stc
inc
push
inc
stos
sub
inc
jge
ret
rorb
loope
rcl
adc
imul
push
mov
loopne
adc
add
cmp
sbb
mov
sub
and
jge
adc
xchg
stos
js
mov
lock
lea
add
sti
addr16
test
xchg
add
jnp
movsb
pop
stos
xchg
int3
sub
push
sub
pop
sbb
mov
mov
add
dec
lret
xchg
movsb
dec
or
inc
mov
xchg
clc
or
mov
insb
xchg
jae
push
mov
scas
je
adc
in
jle
jmp
sub
and
mov
sbb
addr16
addr16
mov
pop
outsb
cmp
ret
push
aad
popf
pusha
add
sub
cmpsb
or
adc
mov
jno
adc
xchg
gs
stos
out
out
cmpsl
inc
in
addr16
push
cs
out
in
hlt
or
jbe
adcb
jmp
mov
in
add
dec
xchg
adc
mov
out
push
cmp
lret
push
jb
push
cmp
lock
dec
xor
cld
into
scas
mov
ljmp
ljmp
mov
mov
inc
int3
xor
je
xchg
arpl
fstps
call
xchg
bound
scas
cmpsl
out
pop
adc
adc
int
icebp
cwtl
subb
dec
dec
or
fstpt
xchg
inc
ja
jnp
fdivs
adc
test
enter
push
sbb
xchg
mov
jle
insb
in
or
addb
pop
test
push
aam
push
or
popf
stos
insb
mov
push
xchg
movsb
push
subl
scas
out
test
pushf
push
movsb
lcall
or
xchg
das
or
sub
movsb
cmp
mov
out
xor
pop
ret
dec
leave
jge,pn
sbbl
and
fnsave
nop
sub
inc
inc
call
mov
dec
jbe
and
jge
ret
sub
bound
sti
sbb
sub
or
scas
ret
shlb
jnp
push
cmp
js
test
repnz
sbb
movsb
jle
add
dec
enter
in
push
xor
jmp
into
cmpl
mov
pop
jo
mov
mov
leave
pop
dec
je
mov
and
dec
loopne
lret
xor
sbb
in
stos
or
ffreep
enter
add
lock
das
push
ljmp
andl
or
mov
loope
pushf
test
push
loop
and
shlb
sarl
push
cmp
sub
adc
add
xor
xchg
mov
fbld
pop
push
cmpb
or
mov
icebp
rorl
daa
mov
push
dec
xchg
fs
push
sbb
movsb
mull
shlb
out
sub
jb
imul
or
and
dec
dec
mov
xchg
repz
scas
adc
das
std
and
aam
lods
xchg
xchg
xchg
clc
jmp
ss
repnz
inc
mov
lods
or
notl
aaa
and
ljmp
sbb
cmp
sbb
jmp
push
fisubrl
sbb
repnz
inc
mov
dec
in
je
pop
std
inc
sub
and
lods
shrl
in
mov
or
sub
dec
mov
and
in
mov
daa
movsl
add
pop
jge
nop
int3
dec
icebp
pop
das
int3
ss
mov
jne
repnz
dec
mov
cli
lret
lret
cltd
mov
sub
inc
jmp
adc
js
push
jns
daa
sbb
push
jne
test
add
sbb
or
dec
mov
mov
push
out
mov
test
jno
add
sub
scas
add
insb
jmp
fdivs
inc
aam
mov
loopne
mov
dec
int3
xchg
out
push
jmp
data16
xchg
ret
cmp
jo
sub
fsubrl
fwait
sahf
fsubs
add
fsubrl
incb
mov
mov
scas
stc
add
sbb
push
popa
xchg
xchg
orb
pop
mov
jns
mov
in
cmp
inc
neg
int
out
aaa
and
mov
xchg
xchg
cmp
ljmp
dec
cwtl
je
jecxz
push
push
mov
popa
fmulp
add
mov
les
out
jns
fs
xor
inc
push
lcall
sbb
jecxz
mulps
push
clc
aas
insl
xchg
sbb
arpl
push
xor
xor
popf
call
dec
in
decl
add
xor
addl
cld
lds
adc
enter
imul
fnstenv
xor
jae
pop
lods
xchg
or
sub
icebp
jmp
lret
dec
scas
lret
sbb
inc
and
sbb
mov
or
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
fmull
in
push
push
test
ds
cmp
inc
xchg
jae
arpl
in
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
xchg
push
sti
ss
es
jmp
adc
add
mov
cmpsb
pop
xlat
sub
jnp
or
sbb
jmp
sti
aaa
lret
fistl
inc
mov
xchg
imul
sub
cmp
or
sbb
jmp
sti
ss
fistl
inc
mov
xchg
push
xchg
xlat
cmp
pop
mov
scas
pop
outsb
mov
data16
jp
jbe
jp
mov
pop
ja
cs
sub
jecxz
subb
jecxz
mov
push
push
dec
inc
cld
xchg
xchg
jecxz
jns
out
dec
sub
jmp
mov
or
out
incb
sub
push
cld
int3
xor
mov
sbb
dec
pop
fwait
push
hlt
mov
cli
push
lret
push
stos
push
xchg
bound
xchg
outsb
mov
dec
movsb
ss
imul
in
cmp
jbe
pop
gs
dec
inc
jbe
data16
repz
mov
push
jae
sbb
outsb
push
add
mov
imul
iret
negl
out
dec
jmp
sti
ss
fistl
inc
mov
xchg
imul
sub
cmp
or
pop
bound
push
cli
xor
add
incb
xor
fldenv
mov
mov
mov
lret
outsb
mov
into
and
les
jmp
into
sbb
mov
cmpsb
jle
jne
mov
push
scas
pop
movl
xchg
imul
sub
cmp
or
sbb
jmp
sti
ss
fistl
inc
mov
xchg
imul
sub
cmp
or
sbb
jmp
out
mov
outsb
xor
in
pop
ja
shl
xchg
ja
pop
fdiv
xor
push
mov
xchg
and
mov
mov
push
in
inc
dec
cmpb
insb
adc
les
inc
or
or
mov
lock
cs
sbb
enter
shlb
movsb
fwait
inc
jmp
lret
mov
pop
loop
jmp
pushf
xchg
popf
rolb
mov
dec
push
fmulp
arpl
idivl
out
into
cmpsb
iret
add
mov
in
push
dec
out
and
les
xor
out
and
add
mov
bsf
mov
push
xchg
insl
push
cmp
pop
sbb
push
enter
xchg
jecxz
lods
insl
sbbb
mov
sbb
jo
sti
fildl
test
mov
test
mov
xor
and
pop
mov
sarb
mov
in
les
and
mov
fistps
arpl
cmp
insb
imul
iret
std
sti
dec
in
in
xchg
cmpsl
add
jne
in
inc
jge
jnp
jns
lea
rol
xlat
lds
aaa
scas
imul
pop
add
jb
push
jae
aas
jnp
xchg
sub
cmp
lcall
dec
cld
std
add
pop
xor
cmp
push
pushw
shlb
jb
repnz
stos
in
push
lea
loop
stc
lret
cmc
xchg
push
es
sub
pop
push
mov
lahf
lea
inc
in
sub
dec
sub
xchg
fcomp
lcall
adc
push
cmp
cs
jbe
sahf
stc
jnp
pusha
call
cmp
adc
movsb
sub
or
jae
mov
cmp
cmp
ss
fcompl
add
js
add
ret
imul
or
push
mov
sub
stos
mov
or
or
push
sar
aaa
outsl
lock
data16
fwait
sbb
pop
sti
clc
dec
push
stos
dec
dec
arpl
cmp
ds
in
add
inc
sub
pop
hlt
mov
lcall
sbb
sub
fmull
mov
test
xchg
sub
out
sbb
mov
cmp
into
fs
adc
mov
mov
gs
mov
gs
fnstsw
jge
movsl
popa
and
jnp
add
sbb
iret
add
inc
push
std
push
cmc
add
dec
gs
adc
jbe
hlt
xchg
lods
bound
leave
pop
pop
sbb
or
ret
aam
mov
and
dec
aam
cltd
addr16
pop
mov
jne
mov
jbe
add
negl
dec
stc
test
lret
ds
mov
xchg
imul
int
fs
outsb
je
test
fnstenv
inc
push
jb
test
hlt
stc
cs
mov
dec
test
in
movsl
inc
xchg
and
loopne
dec
stos
xchg
pop
dec
lods
inc
xchg
mov
inc
ja
or
mov
int3
js
or
cld
out
sbbb
jno
pop
vmread
fsubl
push
ret
jg
adc
pop
add
pop
add
mov
sub
movsl
insb
hlt
ja
and
stos
dec
fisttpl
aaa
mov
jp
in
fldcw
cwtl
sbb
daa
and
cmp
sub
je
lods
or
test
add
pop
xchg
movsb
loope
cs
push
mov
inc
mov
cmc
pop
iret
push
xlat
movb
pusha
inc
mov
test
sbb
insl
fidivl
dec
jl
pop
jge
jo
pop
out
dec
lods
push
outsl
sub
cmp
pop
mov
pop
test
xchg
fwait
add
jg
cmp
push
push
int3
lahf
add
pop
ret
jns
int3
enter
movb
movsl
ret
loop
mov
inc
cmpsl
adc
mov
push
or
inc
and
cmp
sub
xorl
imul
clc
ja
ljmp
stos
popa
add
lock
dec
push
in
repnz
shll
std
cmp
xor
and
mov
aad
jle
adc
leave
xor
jno
cltd
xor
addr16
fisttps
sbbb
dec
xchg
push
and
pushf
clc
shll
scas
dec
fimull
cwtl
aad
xchg
mov
iret
nop
in
lahf
fimuls
sub
lret
adc
inc
jb
testl
pusha
sbb
frstor
ret
push
int3
mov
xor
inc
pop
inc
pop
jmp
imul
xchg
rorl
stc
dec
andb
ret
pop
jae
sub
aad
sbb
pop
movl
stos
jg
sub
idivb
dec
clc
inc
inc
cwtl
lcall
mov
mov
dec
pop
call
out
jmp
fimuls
or
pusha
xorl
push
fidivrl
shl
in
call
test
lds
mov
dec
mov
pop
inc
inc
and
test
mov
sti
dec
cs
and
mov
in
or
scas
xchg
lcall
jge
xlat
xchg
jle
mov
fwait
mov
arpl
push
and
xchg
adc
sbb
push
xor
mov
pop
push
mov
cmp
inc
jge
mov
jne
dec
add
fdivr
gs
mov
jns
push
popf
mov
lods
roll
mov
pop
pop
and
xlat
adc
add
enter
dec
cmpsb
jb
pop
repnz
pop
cvtdq2ps
cmova
leave
cld
repnz
pushf
imul
call
in
pop
je
rcrb
dec
and
fildl
test
cltd
cmp
jb
mov
repnz
enter
fidivl
clc
mov
out
pop
add
cmc
negl
mov
cmp
lahf
pop
mov
mov
mov
mov
imul
movsl
push
push
ja
subl
xchg
dec
push
in
and
xchg
mov
push
fdiv
sbb
dec
xor
or
cmpsl
adc
xchg
push
out
adc
lret
leave
iret
jae
sub
adc
sub
mov
pushf
sub
dec
adc
push
roll
cli
ds
popa
jge
inc
fmull
outsl
into
in
into
fcomi
lods
into
jecxz
lcall
mov
lret
xor
sbb
jns
sarb
jmp
ja
sub
stc
jns
test
mov
jnp
movsl
xchg
stc
outsl
xor
jno
xchg
xor
mov
and
add
pop
cmp
mov
loope
fldenv
jg
xchg
push
aaa
loope
sub
pop
sub
insb
cltd
pop
roll
add
add
push
pop
mov
std
mov
dec
xchg
mov
push
push
pop
push
int
mov
xlat
out
add
push
int
dec
out
mov
jae
sarl
pusha
xchg
fists
adc
cmp
mov
in
mov
cmp
arpl
sub
int
or
je
into
int
insl
bound
fildl
out
push
lds
pushf
xor
mov
cmp
fwait
andb
pop
sub
fsub
inc
push
add
orb
adc
in
sbb
mov
cmp
jecxz
out
insl
hlt
push
push
xor
dec
push
mov
adc
mov
push
jbe
and
xchg
cli
out
out
mov
cmp
mov
pop
shll
dec
mov
or
push
pusha
sbb
inc
adc
scas
divl
mov
in
lds
mov
shll
dec
adcb
ljmp
mov
mov
mov
subl
push
adcl
pop
in
jne
jecxz
dec
adc
ds
enter
hlt
or
pop
mov
mov
mov
mov
outsb
mov
aam
aas
push
mov
mov
icebp
bound
mov
mov
mov
inc
mov
or
sbb
xchg
fs
xchg
push
popa
pop
or
sbb
dec
je
jle
pop
cs
lahf
inc
jae
cltd
imul
lret
dec
adc
mov
hlt
arpl
pusha
push
ror
or
lcall
loope
xchg
aad
add
jno
add
icebp
add
loop
mov
inc
out
mov
pop
fisttpll
out
hlt
leave
dec
cmp
not
add
jle
cmc
gs
jbe
jbe
add
jae
call
sbb
and
xor
cmp
cmp
cmpsb
mov
fwait
mov
inc
jmp
inc
push
adc
orb
mov
adc
xchg
jl
int
jl
lret
or
add
outsb
mov
ljmp
fbstp
sbb
inc
sbb
and
nop
pusha
cmpsb
cwtl
jb
and
sub
mov
imull
iret
repnz
pop
mov
jae
jecxz
and
lods
mov
movsb
push
lret
insb
movsl
xor
inc
cmp
ret
push
into
lods
scas
cs
adc
in
jg
in
add
jp
xchg
clc
lea
sbb
pop
dec
pop
dec
dec
jae
rcrl
or
mov
xor
sub
ja
mov
or
push
dec
xchg
jge
das
mov
adc
je
xchg
cmpb
and
xchg
ja
mov
inc
cltd
pusha
xchg
cmp
mov
call
sbb
xor
scas
int3
stc
ljmp
jno
inc
ljmp
sti
push
push
push
mov
cmp
mov
and
ja
xchg
add
stos
and
fnstsw
out
jb
out
iret
adc
xor
outsl
add
xor
xor
movsb
lret
inc
aad
in
orb
xchg
inc
mov
cmp
sahf
dec
lds
mov
cmp
mov
in
roll
jg
insb
pop
cmp
pop
fs
adc
in
mov
xor
pusha
xchg
adc
ja
jl
push
and
loopne
inc
and
xchg
ret
and
mov
cmp
jbe
aad
sbb
xchg
test
dec
jmp
and
mov
jbe
cmpsb
test
inc
test
and
jno
push
insb
test
sub
fwait
daa
lret
push
pop
mov
mov
sub
sahf
out
aaa
sbb
scas
push
popa
imul
int
je
dec
jb
add
repnz
pop
sbb
lahf
sub
movsl
jmp
xlat
sti
inc
sbb
dec
mov
movsl
cmp
inc
jns
ss
ret
xchg
jnp
leave
popa
mov
jmp
insb
fdivr
rcrb
xor
pop
test
mov
roll
jle
clc
jb
sarl
hlt
cmp
sub
push
xchg
std
sbb
jg
cmpsl
adcb
je
add
dec
cltd
mov
aas
arpl
xchg
pop
shll
dec
push
push
jns
stos
test
call
lods
jp
add
loope
mov
movsl
insb
cmp
das
pop
pop
and
sbb
sbb
in
lahf
sub
pop
lock
inc
xchg
mov
or
cld
inc
mov
leave
cwtl
push
mov
shlb
pop
pop
xor
push
pop
shll
sbb
mov
dec
daa
call
je
dec
cmc
hlt
in
mov
in
push
rcr
cmpl
adc
sbb
decb
repz
inc
aaa
ret
push
push
dec
sbb
jbe
ret
jns
insb
sub
add
or
and
insb
mov
jg
loop
xor
jmp
pop
xchg
pop
push
fsubrl
mov
cld
data16
push
movsb
mov
mov
and
leave
iret
sbb
outsl
sbb
push
cmp
jno
hlt
dec
add
adc
sbb
push
hlt
shr
lds
fbstp
fs
test
and
sbb
out
adc
inc
lea
add
xor
or
leave
es
test
jae
fnstsw
inc
in
cmp
inc
gs
iret
ret
xchg
and
dec
adc
and
and
dec
movsb
and
xor
into
sbb
bound
pop
sbb
cltd
jmp
xor
and
sahf
mov
xlat
dec
sbb
subl
add
cmp
fcomp
jg
inc
jns
fdiv
fimuls
gs
daa
jne
and
pop
sub
push
aas
scas
cltd
ret
jb
pop
lods
shlb
ss
clc
aaa
ss
push
cld
xlat
icebp
outsl
add
sub
xchg
addr16
sub
mov
adc
insl
loopne
add
out
call
mov
fdivs
unpckhps
sub
fucom
add
gs
xchg
iret
xor
sbb
add
jmp
sub
inc
into
ss
pop
mov
insb
pop
scas
push
mov
std
sub
out
lret
and
jg
pop
rcll
cs
aas
int
jmp
lds
sbbb
test
adc
fcomp
sbb
add
inc
notl
fnsave
out
out
mov
add
push
sub
add
xchg
fnstenv
lock
push
stos
test
shrb
movsb
cmp
insl
cmp
xchg
jecxz
scas
and
and
sarl
jnp
push
pop
out
aas
cmpsl
cli
xor
sbb
mov
dec
cmp
inc
stos
mov
sub
adc
sbb
sbb
cmp
call
push
mov
addb
frstor
addps
mov
int
add
cli
scas
xchg
insb
test
fimull
mov
adc
xchg
push
dec
xchg
xor
mov
fsts
int
movsb
fisubl
lds
pusha
adcl
adc
lahf
cmp
push
movsb
and
fimull
mov
jmp
push
cmp
xchg
or
sbb
push
push
imul
xchg
in
xor
ss
and
test
xor
push
out
mov
movsb
cli
ja
aas
push
mov
and
lahf
xchg
sbb
jns
repz
repnz
mov
push
mov
cwtl
mov
shrd
inc
loop
jb
lret
stc
jb
test
or
movsl
push
mov
pop
das
fwait
dec
mov
popl
jle
lods
push
inc
lahf
dec
js
aad
insb
pop
sub
cmc
sbb
mov
sbb
loop
shrl
test
mov
mov
fstl
lods
stos
fisttpll
clc
pmulhw
xchg
jmp
sub
leave
repz
xor
sub
push
dec
or
xchg
mov
inc
mov
scas
fisubrs
mov
xor
lret
sbb
jg
imul
repnz
out
xor
cmp
mov
arpl
out
pop
or
xchg
outsb
movsl
out
aaa
test
mov
clc
and
adc
push
xor
daa
mov
or
sub
adc
add
push
loope
push
sti
out
dec
not
fcmovb
mov
pushf
pop
insl
jo
add
cld
jbe
test
lret
and
jecxz
fstpl
data16
pop
shll
stos
fbld
int3
js
leave
fistpl
cmp
pusha
out
cmp
iret
lods
outsb
test
xor
rorb
imul
stos
out
push
pusha
xchg
lret
repz
mov
add
in
mov
push
mov
inc
icebp
xor
xor
int3
iret
add
test
push
xor
stc
movsb
pop
daa
cmp
mov
lret
outsl
fisubrl
jb
popf
or
movsl
mov
pusha
dec
lret
and
sbbb
call
lret
sub
jo
imul
xchg
mov
repz
hlt
mov
movsl
add
repnz
fbld
or
cmp
je
iret
push
lahf
xchg
jmp
jbe
je
stos
loop
mov
cld
xchg
stos
imul
inc
hlt
movsb
xchg
inc
dec
jne
aam
dec
loop
or
push
daa
ljmp
mov
xchg
pop
jnp
or
adc
xchg
lods
jle
dec
inc
mov
mov
mov
lahf
dec
cltd
js
jg
adc
xchg
jno
push
loopne
pop
adc
mov
out
jbe
lods
out
push
pop
insb
sub
js
movsl
scas
push
iret
jp
repnz
nop
imull
loope
sbb
jne
add
sub
mov
push
mov
xchg
daa
sub
xor
sbb
cwtl
jmp
int
int3
inc
andb
jmp
loop
lods
mov
and
ds
push
jns
movsl
jle,pn
mov
js
mov
int
sti
jnp
mov
daa
mov
incl
adc
clc
cmpsl
mov
mov
fucomi
mov
and
and
or
bound
cmp
imul
push
pusha
sahf
dec
adc
cs
xlat
idiv
jp
shll
sbbb
mov
xchg
and
pop
cltd
les
call
dec
adc
xchg
mov
fcompl
mov
jle
lret
jmp
rclb
add
icebp
sbb
mov
jmp
pop
adcb
test
push
push
push
mov
outsl
adc
popa
insb
lcall
out
aam
out
pop
lret
sub
cwtl
dec
xor
ss
stc
push
clc
mov
mov
arpl
xchg
jecxz
inc
push
jae
jmp
aam
mov
enter
push
xchg
push
xor
xchg
jb
lock
dec
push
add
push
xchg
and
xor
pop
inc
mov
cmpsl
ss
dec
lahf
pusha
loopne
ljmp
add
cmp
inc
push
mov
pusha
cmpsl
xorb
bound
andl
cmp
xor
jo
scas
jbe
sbb
and
inc
and
mov
pop
xchg
dec
xchg
dec
pop
pop
les
dec
jnp
inc
into
jbe
movsb
sbb
imul
adc
mov
xor
ljmp
jnp
push
je
fldenv
out
roll
fwait
ljmp
insb
xor
cwtl
or
es
nop
cmp
and
push
ret
and
push
xchg
stos
adc
inc
nop
mov
sahf
loopne
or
nop
push
notb
arpl
sbb
mov
or
push
pop
push
pop
mov
jmp
test
inc
push
and
xchg
insl
xchg
jmp
xchg
adc
push
mov
pop
cs
push
fisttpll
pop
sub
mov
ja
out
xchg
fst
jbe
dec
cmpsb
mov
jne
xor
je
pushf
fiaddl
pop
data16
out
cmp
sbb
cwtl
mov
andb
sbb
inc
jo
insl
mov
lds
das
shlb
cld
jbe
popa
push
test
clc
fstpt
fildll
and
jecxz
stos
push
repz
jo
test
sbb
fsqrt
xchg
ds
mov
hlt
filds
movsb
arpl
sub
fstpt
push
dec
int
adc
mov
sbb
test
add
fisttpl
jno
lcall
or
lods
mov
test
add
jbe
gs
in
nop
jp
out
lcall
dec
xchg
and
jne
mov
inc
adc
pop
xchg
pop
or
xchg
push
push
dec
sub
mov
leave
mov
hlt
mov
in
sub
inc
cltd
xlat
je
dec
stos
adc
gs
and
xor
jle
jge
pop
xor
sarb
cli
fwait
and
in
js
sub
fwait
xor
or
or
adc
in
scas
add
sub
mov
shrl
and
out
repz
cs
push
cmp
xlat
pop
xchg
rcr
mov
adc
lea
data16
push
jo
sub
inc
cmp
dec
aaa
dec
inc
mov
sbb
sbb
mov
call
insb
ds
sbb
test
idivl
xchg
insb
xchg
inc
jl
or
pop
cmp
fwait
in
fidivrl
rolb
ljmp
ja
inc
mov
and
enter
jne
xchg
sub
xchg
stos
ret
xchg
xchg
xchg
cmp
xor
jo
mov
xor
mov
inc
mov
loop
pop
fidivs
mov
xlat
jg
ljmp
lds
mov
icebp
add
and
inc
xor
mov
and
movsl
int
jb
insb
jl
fiaddl
xor
or
pop
icebp
sbb
stc
mov
inc
inc
cmp
dec
and
jb
xor
mov
enter
lret
test
loopne
and
popa
sbb
cli
je
cmpsl
xor
sub
mov
out
sub
test
inc
cmp
cmp
aaa
mov
dec
or
mov
push
push
imul
imul
mov
sub
and
pop
insb
pop
test
cmc
sub
inc
sbbl
cld
dec
leave
cli
repnz
add
sahf
sub
mov
xchg
jne
dec
hlt
movsl
lods
fs
iret
lret
push
stos
inc
mov
xchg
imul
sub
cmp
or
sbb
jmp
sti
ss
fistl
inc
mov
xchg
imul
sub
cmp
or
sbb
out
push
sti
ss
ficoml
inc
mov
xchg
imul
sub
cmp
or
sbb
jmp
sti
aaa
lret
fists
inc
cmp
fs
xchg
xchg
sbb
cmpsb
sub
mov
sbb
dec
add
outsl
and
movntps
cmovae
jae
cmpl
out
mov
lahf
push
scas
jecxz
repz
pop
adc
and
cmovae
push
das
arpl
jae
sbb
mov
lahf
shrl
add
xor
inc
jg
xor
jae
sub
xchg
xchg
lcall
xchg
jecxz
and
adc
push
bound
test
mov
mov
in
fwait
mov
jb
lret
pop
stos
jmp
xor
inc
cli
int3
and
lahf
lods
mov
imul
jo
ret
aas
scas
mov
mov
sbb
imul
and
cltd
jle
insb
cli
arpl
dec
lahf
ret
addr16
jp
push
aaa
nop
mov
xchg
xor
inc
pop
push
shr
aas
mov
pop
imul
test
mov
in
dec
cmpsb
loop
repz
xchg
inc
movsb
jbe
lock
jg
out
pop
mov
das
push
sbb
jle
xchg
ret
inc
or
rclb
or
data16
mov
int3
adc
idivl
outsl
and
jmp
addr16
das
arpl
xchg
cltd
mov
xchg
rcrl
insb
sub
pop
pusha
das
jno
pop
sub
mov
mov
lcall
loope
mov
add
adc
or
ficoml
jae
sti
out
ret
mulb
mov
push
dec
sub
pop
inc
pop
push
das
arpl
jae
sbb
out
mov
lahf
shrl
add
outsl
and
cmovae
push
das
arpl
jae
sbb
out
mov
lahf
shrl
add
pop
lods
xchg
mov
mov
xchg
pop
loop
ds
outsb
int3
add
add
inc
dec
xchg
push
pop
push
test
pop
push
fnstenv
mov
ret
mov
pop
loop
push
arpl
add
ljmp
lret
scas
sbb
outsl
test
sbb
rsqrtps
addr16
cwtl
jns
xchg
adc
dec
inc
std
xchg
adc
xchg
adc
or
pop
push
jbe
push
sbb
mov
push
dec
mov
xchg
es
mov
and
repnz
mov
movsl
lea
out
insl
jge
push
xchg
test
pop
arpl
nop
push
dec
add
push
mov
ds
sti
inc
mov
shrl
dec
roll
movsb
popf
pushf
adc
in
movsl
ja
sub
dec
gs
outsl
jno
adc
add
jle
adc
jne
sbb
stc
shlb
mov
icebp
jmp
sbb
ss
lock
add
int3
mov
mov
ret
pop
test
jp
push
push
mov
adcl
xchg
cmp
xchg
mov
fwait
and
pop
insb
fisubs
mov
jmp
fistpl
jl
mov
jbe
mov
ja
flds
push
mov
sbb
push
push
add
jmp
dec
mov
lods
mov
mov
cmpsb
xchg
fwait
cmp
pop
mov
popa
push
or
cmp
cmpsl
sahf
sbb
mov
pop
inc
imul
imul
sbb
dec
xchg
mov
in
in
adc
dec
mov
fwait
mov
fiaddl
fists
add
mov
icebp
stos
lret
mov
test
out
mov
pop
test
mov
clc
push
xchg
cli
mov
push
mov
popf
stc
xlat
fiadds
add
xor
imul
push
loop
ret
rcrl
or
push
jno
arpl
sub
rcll
add
sub
insl
stos
mov
les
vmovlpd
les
leave
loop
jle
push
inc
xchg
out
push
and
add
daa
adc
aad
movsbl
imul
jne
loop
xchg
and
test
xchg
mov
cmp
rcrb
test
inc
mov
lea
mov
outsb
adc
add
mov
cmp
inc
cmp
xor
nop
cmp
shl
xabort
add
adc
xchg
xor
pop
push
ja
les
and
dec
inc
dec
jno
pop
push
jge
loop
sub
cltd
jl
mov
push
add
test
mov
std
and
aaa
sarl
imul
sarb
test
jo
cmp
push
icebp
xchg
test
add
int
xchg
stc
push
sub
movsl
mov
cmpsl
cltd
aaa
repnz
loopne
std
adc
in
je
iret
sti
fistpl
fadds
stos
mov
mov
fwait
rcl
lods
xchg
jbe
insb
mov
les
jns
ror
cld
cli
stos
arpl
ficoms
in
xchg
mov
loop
pop
rclb
mov
imul
pop
js
pop
dec
fisubl
cltd
or
cmovbe
adc
sbb
std
leave
push
jl
sub
pop
icebp
adc
adc
jnp
int
int3
lahf
xor
out
sbb
das
inc
mov
js
xchg
stc
stc
mov
insb
xchg
mov
test
mov
out
test
call
adc
cmpsb
pop
or
xchg
movsl
mov
pop
jno
adc
add
lock
jnp
iret
rorb
xchg
adc
fidivrl
fxch
xchg
cmp
cwtl
iret
stc
rorl
ficoms
cld
sti
mov
repnz
jl
mov
jns
dec
popl
jle
ret
ja
dec
adc
les
stos
push
inc
add
imul
ret
das
push
and
dec
jno
outsl
fdivp
mov
mov
add
and
sbb
mov
ret
jge
jle
xor
cmp
xor
adc
nop
inc
lock
push
dec
outsl
mov
cltd
push
leave
jnp
dec
jecxz
jnp
jne
aaa
jmp
stos
xlat
sbb
movsb
sbb
cltd
stos
cli
jbe
xchg
pushf
fs
sub
push
outsl
ror
cmp
lahf
outsb
nop
cld
sbb
and
mov
sti
xchg
shl
mov
out
adc
xchg
in
pusha
xor
pushf
out
lock
sub
inc
mov
aad
sbb
push
into
xor
jo
test
adc
dec
cmp
js
int
mov
sti
mov
div
lock
rolb
push
das
fidivs
pusha
pop
out
test
xor
cmp
xchg
in
mov
dec
dec
xchg
sub
mov
icebp
test
mov
sbb
jns
push
shlb
repnz
sti
gs
popa
repz
pop
popa
icebp
mov
dec
push
popa
push
mov
inc
sbb
push
sbb
push
or
and
lock
jo
mov
les
xchg
add
adc
das
es
ret
dec
lcall
aaa
outsb
ja
ret
jae
jne
insl
xor
shrb
inc
inc
jb
adc
pop
xchg
leave
inc
outsl
jbe
mov
test
int
mov
add
cmpb
cltd
xchg
cmpsb
ja
mov
das
sbb
in
sahf
jl
dec
xchg
push
ss
cmp
jl
mov
xor
mov
dec
into
aaa
inc
push
xchg
and
shll
fdiv
lcall
ja
and
adc
out
inc
stos
cmp
pop
loop
mov
fsubr
sub
xchg
cmp
int3
scas
cs
sbb
xor
hlt
into
xchg
push
xor
xchg
sbb
mov
add
mov
sbb
inc
cmp
push
aas
dec
mov
fsubrl
arpl
ds
out
push
xchg
mov
inc
sbb
leave
pop
movsb
sub
incb
ret
sub
sub
es
add
loopne
mov
pop
xchg
sub
sbb
cmpsl
jb
pushl
mov
xor
push
fnsave
arpl
mov
and
inc
inc
dec
repnz
out
testb
jle
mov
push
pop
jo
pop
jecxz
out
imul
popa
daa
out
push
lock
push
cmpb
cs
push
shll
movsl
cmpsb
adc
push
lea
and
out
push
loope
dec
jge
sub
xorb
ja
mov
mov
aam
dec
sti
mov
mov
andb
pop
dec
jecxz
jno,pt
cmp
mov
xor
mov
clc
nop
push
push
pop
je
jbe
push
cmp
xchg
out
sbb
add
mov
outsb
sahf
xor
inc
pushl
lcall
movsb
jmp
jne
cmp
push
hlt
mov
xchg
out
insb
xorb
sbbl
or
pop
sub
mov
stos
dec
jb
nop
ljmp
shr
std
shlb
int3
push
movsb
jl
addr16
lea
es
push
pop
pop
jle
jo
cs
adc
pop
daa
push
fisubrs
lret
sahf
cmp
dec
stc
or
cmp
adc
je
es
scas
out
dec
and
sub
aam
pop
dec
adc
xorb
out
icebp
mov
pop
scas
inc
and
les
adc
fs
fnstenv
test
jecxz
iret
stc
dec
popf
xchg
and
in
push
aaa
pop
fistpll
in
push
pusha
mov
movsl
lods
adc
push
mov
movsb
lods
jns
pop
and
dec
ret
aaa
popf
push
and
inc
jp
fnsave
lret
sbb
inc
scas
rcrl
rclb
cld
or
mov
inc
sbb
dec
in
in
mov
adc
or
mov
or
lcall
inc
jge
adc
add
push
sub
fwait
scas
jl
nop
lock
outsl
shl
test
sub
lahf
xor
jmp
mov
adc
mov
int
outsb
lock
js
sbb
cs
scas
and
jo
ds
jge
mov
ret
data16
pop
mov
fildll
pop
stos
jp
mov
daa
lcall
stos
in
imul
cmp
call
push
pop
cmc
jecxz
sub
xchg
sbb
or
iret
xchg
in
les
addb
loopne
rolb
fisubl
cmp
addr16
sbb
stc
inc
mov
shr
movsb
or
pop
das
mov
lock
mov
xor
jbe
in
scas
cld
pop
imul
adc
xchg
adc
sub
push
in
ficoms
inc
call
mov
in
lahf
xchg
movb
fldenv
stos
out
adc
or
inc
ret
adc
call
sarb
loop
push
mov
in
fcoms
mov
mov
ret
pop
cmc
gs
xor
popa
cmp
lea
dec
add
repnz
mov
sub
int
out
mov
repz
das
xchg
lods
dec
mov
stc
jge
push
push
adc
aas
cmpsb
mov
loopne
sub
xor
pop
push
aad
pop
xor
mov
push
je
fs
clc
stos
std
les
mov
fistpl
add
inc
mov
adc
inc
xchg
dec
sub
mov
push
call
cltd
sbb
sbb
add
sbb
repz
mov
enter
mov
jae
pushf
adc
dec
call
mov
jns
xchg
stc
dec
aaa
in
mov
std
add
sbb
sbb
shlb
mov
and
mov
jnp
jecxz
sbb
movb
jne
out
mov
scas
sub
push
jo
sub
je
jl
dec
add
xchg
jae
stos
dec
or
fwait
mov
aas
sbb
xor
in
xchg
frstor
or
aam
fsqrt
rcll
pusha
imul
fdivl
xchg
jmp
faddl
xchg
aam
xor
out
leave
ret
addr16
call
sbbl
push
incl
add
lods
repz
adc
shll
imul
mov
popf
rcrb
test
sbb
push
popa
mov
mov
mov
cmp
lahf
xchg
inc
dec
in
sbb
push
out
adc
test
pop
xor
or
out
inc
adc
fimull
or
mov
fstl
push
xor
rorb
mov
fisttpll
pop
xor
dec
push
and
daa
test
test
dec
addr16
mov
jge
ret
outsb
clc
mov
in
std
inc
jbe
and
addr16
mov
arpl
mov
xor
push
mov
push
add
cmp
call
std
mov
cmp
or
fs
pop
xor
call
add
shl
sub
push
pushf
mov
push
push
mov
je,pn
and
repnz
fs
mov
iret
shr
xchg
inc
adc
mov
and
out
xor
xchg
subb
lret
sti
enter
or
add
std
dec
ja
inc
dec
xchg
ret
or
or
mov
xchg
or
mov
xchg
addr16
mov
pop
xchg
jmp
and
popf
sahf
faddl
test
xor
mov
hlt
mov
jno
xor
in
addb
mov
inc
cmp
int
dec
xchg
push
stos
aas
sbb
xchg
xchg
jge
movsl
or
inc
and
outsb
mov
mov
add
dec
icebp
mov
mov
pop
dec
jge
std
adc
dec
inc
mov
fs
mov
dec
add
stc
cmp
push
scas
lcall
out
in
das
jbe
xchg
jge
lods
hlt
sbb
jno
adc
sbb
cld
into
test
or
xor
data16
push
jmp
mov
int3
mov
call
and
rolb
fdivl
cmp
or
jae
xchg
xchg
jbe
cmpsb
mov
mov
fcomps
inc
jb
sbb
xor
mov
inc
outsb
dec
mov
mov
out
std
test
mov
or
xchg
pushl
movsl
push
sbb
mov
test
push
popf
mov
mov
mov
lret
lds
lods
jnp
int3
sub
lock
loop
jmp
loope
inc
sti
movsl
inc
mov
aas
mov
popa
sub
lret
push
cmp
test
cli
pop
fidivrl
xor
lret
xorl
jp
push
pop
fldt
xor
cmp
pop
dec
lcall
ret
out
jb
movsb
jb
ret
ljmp
mov
pop
fcmove
or
sub
sub
ret
lock
and
dec
mov
movsl
jmp
test
aaa
les
push
dec
movsl
scas
loopne
add
jno
arpl
imulb
frstor
test
xchg
and
js
mov
shr
in
xchg
repz
inc
jecxz
cmp
aas
es
idivb
leave
jg
sub
sbb
sti
push
pusha
lods
cmc
popa
lea
je
push
je
push
ds
iret
stos
rcll
mov
mov
push
aad
cmp
push
xlat
pop
fwait
jne
outsb
scas
enter
jl
sub
adc
pop
sti
adcb
fnstcw
clc
or
mov
or
mov
or
push
pop
lcall
cmc
shrl
mov
cltd
in
add
add
mov
loop
add
mov
sbb
dec
mov
xchg
push
cmpsb
jo
repnz
xchg
mov
and
sub
clc
ficoml
cmp
add
mov
push
icebp
mov
rcr
push
adc
movsb
sbbl
xor
rorb
mov
addb
xchg
mov
pop
cltd
push
mull
dec
jmp
inc
mov
push
loop
div
mov
mov
into
xchg
jge
mov
jno
stc
dec
inc
xor
cmp
xor
add
cmp
punpcklbw
cwtl
fimuls
enter
sbbl
dec
cmp
clc
xchg
in
sti
pop
sbb
mov
stc
imul
push
cli
jmp
pop
cmc
leave
sub
and
jno
shlb
inc
aaa
add
fstpt
or
sbb
xchg
mov
mov
add
icebp
movsb
idiv
mov
mov
or
test
mov
push
jbe
jg
push
popa
int
mov
pop
imul
pop
addr16
mov
adc
leave
sub
and
fsts
mulb
xchg
inc
bound
addl
push
dec
inc
and
jmp
addr16
hlt
clc
xchg
sub
lret
and
push
lret
insl
pushf
aaa
jle
in
loopne
fcompl
sub
cmp
ljmp
pop
in
decl
fsubl
jo
push
jecxz
call
fcmovbe
dec
dec
mov
mov
and
imul
in
je
popa
scas
in
cmc
hlt
js
jecxz
adc
push
stc
mov
jne
inc
pusha
ret
pop
sbb
jl
pop
and
jge
pop
sub
pop
ficompl
jns
mov
pop
xchg
inc
repnz
shlb
lret
push
lret
lds
push
daa
jb
fbstp
cmp
bound
jecxz
xlat
test
scas
cli
sbb
ret
mov
mov
mov
or
add
fldl
mov
pop
xchg
aas
inc
leave
std
and
fwait
cmp
mov
jns
and
cmp
lret
jo
jnp
adc
leave
jae
pop
and
xchg
cld
push
fwait
mov
jle
push
xchg
xchg
notl
lret
or
popf
xchg
lcall
add
dec
xchg
test
dec
or
rcll
ret
sti
push
fnstcw
inc
jae
fwait
adc
cmc
xchg
in
sbb
cvtdq2ps
add
mov
mov
mov
or
pop
mov
stc
inc
jmp
mov
inc
test
mov
loop
rorl
xchg
add
loopne
testb
stos
ficomps
mov
fsubrp
mov
test
jne
xor
jecxz
add
adc
jmp
xchg
cmc
cmp
nopl
fbld
add
mov
test
and
jge
ds
and
sub
fldenv
stos
jmp
loop
stos
ds
cltd
xor
push
or
inc
repz
pop
push
mov
pusha
or
rcrb
cmp
in
test
jl
jecxz
enter
and
mov
outsb
cmpsl
andb
sti
lds
mov
add
dec
aam
adc
pushf
arpl
fnsave
pop
pop
daa
mov
lahf
addr16
push
xchg
pusha
cwtl
jl
mov
subl
shll
xchg
mov
dec
dec
lods
or
ja
mov
pop
pop
imul
xor
jbe
sbb
push
cmp
daa
push
lret
jae
call
mov
bswap
and
arpl
and
andl
or
test
int3
jp
and
pop
or
mov
xor
sahf
push
jne
int
dec
mov
pop
push
loop
loope
sub
dec
and
mov
insb
xor
scas
lock
into
adcb
xor
mov
add
jnp
or
stc
or
rcl
jae
arpl
or
or
popf
ret
addr16
pop
scas
jecxz
jno
xor
cmp
ret
push
push
jo
iret
movsb
popf
stos
repnz
pop
in
cmpb
lds
shll
into
mov
push
cmpsl
xchg
jo
imul
dec
in
loope
fisubs
fnstsw
into
and
stos
fidivl
jp
fmull
xor
mov
mov
mov
fcoms
addr16
mov
mov
clc
push
add
in
enter
mov
mov
stos
jb
das
mov
ljmp
jp
mov
mov
push
imul
int
cwtl
push
jno
xor
mov
or
add
add
pop
xchg
push
adc
push
roll
mov
jnp
pushf
vpmovmskb
xor
xor
jg
idivb
rolb
push
push
xchg
fcoms
je
pop
push
pop
mov
xchg
pusha
outsl
test
xchg
mov
in
sub
mov
lcall
ljmp
outsl
sbb
daa
in
xlat
loop
call
ss
cltd
pop
movsl
add
jle
imul
aad
xchg
sbb
add
push
dec
push
loopne
int
mov
xchg
sti
pop
in
cmp
ret
and
mov
add
sti
cli
test
pop
test
jl
push
leave
jo
f2xm1
pop
ret
fildl
add
mov
notb
cmp
test
sbb
fcomp
or
adc
gs
jnp
push
mov
stc
lods
dec
xchg
push
jmp
push
in
out
pop
fmull
and
lock
fs
push
mov
jae
push
pop
jb
sbb
jmp
aas
pop
mov
lahf
fists
cs
mov
dec
lods
pop
in
cld
mov
lahf
fstl
movlps
cld
sub
lock
mov
call
call
inc
cmp
divb
leave
inc
and
addr16
or
add
or
fmuls
sbb
lods
fs
mov
mov
push
jbe
loop
stos
js
dec
in
lret
in
pop
mov
jl
lret
sub
inc
dec
pop
mov
ja
adc
lods
mov
arpl
aam
mov
sub
call
pop
jle
repz
jno
std
xchg
or
mov
hlt
sbb
ror
xchg
ss
lret
dec
std
mov
jl
push
fs
add
add
push
in
fisttpll
insl
in
sub
mov
jae
ss
cmp
int
add
incl
das
aad
cmc
das
or
scas
movsb
pusha
dec
push
mov
dec
lea
jne
dec
push
xchg
jg
lret
sbb
shlb
test
xchg
imul
push
and
sbb
negb
insb
lea
sbb
int3
sub
xchg
iret
or
sarb
ja
adc
outsb
and
outsl
cmpsb
mov
and
mov
xor
xor
cwtl
pusha
mov
jns
add
or
add
inc
cmc
and
test
mov
mov
lods
sub
and
sub
push
dec
pop
jo
lds
mov
xor
dec
scas
sti
scas
jmp
add
outsl
lret
es
push
xchg
xor
sub
pop
xchg
out
movsl
xchg
cmpsb
movsl
leave
fdivp
add
outsb
xchg
mov
rcr
out
pop
jg
ds
adc
sbb
xchg
in
cltd
push
mov
in
cmp
xchg
inc
hlt
out
or
and
sub
pushf
mov
dec
push
insl
adc
push
mov
imul
mov
aas
test
stos
shrb
in
andl
jg
cmovae
push
das
arpl
jae
sbb
out
mov
lahf
shrl
add
outsl
and
cmovae
push
das
arpl
jae
sbb
out
mov
lahf
shrl
add
bt
lahf
inc
pop
shrl
arpl
jae
add
xchg
pop
mov
shrl
add
adc
inc
rcpps
arpl
cmp
inc
clc
dec
pop
sub
sbb
or
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
fisubrl
xchg
mov
cmpsl
cs
test
pop
pop
dec
or
push
sbb
inc
sub
ficoml
cli
mov
cmpsl
lcall
out
adc
fs
sbb
xchg
cmp
addr16
mov
xchg
scas
repnz
mov
hlt
imul
and
mov
movsl
out
cli
ret
pushf
sub
cmp
fcompl
jno
mov
sbb
lret
cmpb
pop
mov
mov
aas
jge
outsl
fists
xchg
daa
dec
rcrb
adc
ja
sub
call
push
xor
mov
inc
mov
mov
cmp
fiaddl
testl
clc
dec
xlat
xchg
fsub
add
mov
mov
or
notl
out
lcall
loop
or
lds
cwtl
xor
adc
es
int
push
push
adc
and
aaa
pop
add
xor
mov
ja
xchg
rcll
xlat
lcall
rsqrtps
bound
jae
add
push
and
add
mov
cmpsb
jmp
fwait
stos
mov
es
bound
dec
sbb
outsl
adc
ja
or
lcall
xchg
stc
mov
outsb
das
data16
sub
popa
sub
add
adc
mov
stos
out
pop
dec
pop
jp
push
sbb
inc
cmp
ficoml
cli
mov
cmpsl
lcall
out
pop
dec
pop
jp
push
sbb
inc
cmp
ficoml
inc
xchg
cltd
mov
ljmp
xchg
call
loop
loopne
add
fldenv
test
inc
repnz
inc
inc
sub
mov
rcll
das
jno
popf
sbb
aad
in
xchg
dec
push
cmp
push
mov
add
add
mov
and
xchg
scas
and
push
jl
and
ret
jno
xchg
js
lret
mov
mov
dec
pop
std
js
dec
adc
js
out
addr16
call
add
ret
sarb
rcrb
or
or
or
jnp
xchg
mov
insb
fnstenv
fwait
out
movsl
pop
je
cli
sbb
dec
int3
add
inc
inc
sub
add
jmp
push
in
sbb
aam
test
mov
xor
and
movb
subl
fimull
jnp
mov
or
mov
mov
ret
xchg
jecxz
and
push
cltd
push
in
and
ficoms
mov
xorl
mov
jne
gs
add
or
jnp
pop
mov
lret
push
xchg
mov
or
out
sub
lods
jnp
fsubrl
outsl
nop
jne
in
aad
repz
sub
ss
jmp
or
fs
push
pop
pop
xor
inc
cmp
in
pushf
dec
push
popa
mov
or
in
push
xor
dec
and
mov
sbb
fs
rcl
cmp
in
leave
adc
jmp
sub
cmpsb
mov
insl
push
out
add
leave
arpl
jno
jnp
sbb
or
push
sbb
bound
loop
xchg
push
gs
insb
push
stos
cmp
imul
shlb
rcr
sbb
js
xor
das
stc
loopne
rclb
imul
jge
adc
adc
loop
sarb
fyl2x
mov
add
dec
cmp
pop
daa
test
dec
test
aad
je
xchg
lds
je
imul
insb
pusha
loop
repnz
loop
daa
clc
ds
es
ror
cmp
daa
adc
scas
div
dec
into
jns
xchg
cmc
movsl
test
adc
cmp
stos
jne
out
aad
idivl
pop
jle
cmpsb
mov
movb
ret
test
xchg
ficompl
mov
dec
fcmove
mov
add
sbbl
fs
jp
mov
mov
enter
mov
mov
jns
fistpll
aad
mull
lock
shl
cmpsb
repnz
dec
sub
dec
insl
jmp
lods
mov
sub
test
fildl
push
inc
fbstp
push
xor
cmpsl
xor
xchg
add
mov
fdivl
push
sbb
mov
scas
lods
outsl
push
addl
sbb
dec
or
sub
repz
inc
xor
fists
add
inc
push
idivb
add
int
pop
insb
jecxz
adc
in
dec
lock
jno
pop
push
fwait
mov
and
outsl
es
sub
adc
in
mov
inc
pushf
sub
sbb
mov
jae
adc
sbb
roll
stos
imul
in
das
mov
setg
jp
ret
fdivp
add
jg
xor
enter
mov
sbb
ret
inc
and
jl
movsb
insb
outsl
xchg
cld
aam
sbb
clc
fdivp
movsl
sub
dec
pop
fdivl
nop
dec
aas
xchg
or
pop
call
rclb
cmc
adc
fcoms
xor
push
shlb
orb
and
xorl
insb
int3
es
sub
jo
add
pop
mov
sub
and
jae
sti
subl
mov
gs
inc
adc
in
stc
jbe,pt
push
cmp
add
aad
in
ljmp
sti
xor
push
or
roll
lods
inc
test
iret
dec
lret
jnp
nop
adc
mov
cmpsl
scas
mov
mov
test
and
xchg
add
repz
rcrl
imull
sti
adc
adc
and
test
mul
cmpsl
and
je
inc
jge
lea
push
arpl
inc
ja
fwait
inc
jmp
push
or
add
icebp
mov
mov
shlb
dec
dec
mov
mov
inc
push
mov
movsl
jg
xor
cmp
cmp
adc
sbbl
lret
lds
outsb
divps
cmpsb
cmp
adc
sub
push
mov
add
adc
data16
andl
fidivs
jo
insl
es
sbb
xor
or
cld
das
das
add
daa
inc
dec
movsl
or
dec
loopne
adc
jmp
add
popa
sub
sbb
shll
lods
rorb
and
push
xchg
fisubrs
cmp
outsl
mov
fcompl
pop
arpl
fimull
inc
cmpsb
sub
repnz
iret
jae
lds
pop
sbb
fnsave
push
vmovd
scas
mov
enter
enter
rorl
pop
outsl
pop
data16
rorl
pop
xchg
neg
push
xchg
cmp
sbb
mov
dec
inc
and
xchg
mov
push
mov
repnz
mov
add
lret
dec
je
pop
sub
mov
fwait
sbb
push
inc
jl
inc
stos
stos
pop
adc
pop
std
je
out
cmpsb
sub
lods
and
sbb
push
pop
sbb
and
ficoms
shl
push
mov
adc
pusha
hlt
xor
xor
mov
imul
and
xor
or
xor
cmp
pop
dec
xchg
dec
mov
subb
clc
call
push
inc
mov
imul
jne
aad
pop
loope
imul
loopne
jle
xor
push
jp
in
inc
out
and
sbb
rcrl
pushf
mov
rcll
jno
movsb
fisubs
out
outsl
cmp
in
jne
lea
std
sti
lcall
aaa
mov
mov
jno
aas
jmp
jne
ljmp
xchg
cmpsl
decl
or
mov
pop
out
xchg
cmp
repnz
inc
sarl
xor
dec
data16
call
mov
test
sub
mov
mov
faddl
into
dec
and
mov
outsl
adc
insb
and
lea
std
jge
mov
mov
xor
add
sar
ret
out
inc
fwait
push
scas
add
jmp
lock
popa
jb
outsl
cmp
mov
mov
dec
hlt
push
mov
xchg
mov
jmp
sti
adc
and
mov
mov
bound
mov
push
mov
sti
cmp
push
jmp
dec
pop
inc
fisubl
add
adc
or
inc
jmp
inc
push
in
rcrb
cmc
and
push
mov
jae
xor
leave
sbb
jg
out
cmp
cs
and
push
bnd
arpl
mov
cld
fst
out
imul
pop
push
or
popf
push
add
jo
movsl
in
ja
and
or
lods
je
xchg
adc
mov
int
sbb
cmp
or
sbb
cwtl
mov
add
test
push
insl
or
and
pop
mov
test
sbb
push
insl
gs
repnz
xchg
push
mov
sub
jne
lods
insb
xor
sbb
sahf
jle
sub
inc
stos
roll
fldcw
jne
cmc
sub
xor
gs
pop
lcall
pop
loop
cld
adc
enter
shll
movsl
push
xchg
jecxz
in
mov
mov
inc
das
movsl
ss
arpl
and
fimull
repnz
scas
mov
cld
loope
or
or
test
and
dec
push
shll
ffreep
mov
inc
into
and
cwtl
es
idivb
inc
adc
aas
and
inc
mov
xor
jb
jb
and
mov
loopne
aam
daa
mov
sub
fldenv
mov
icebp
mov
lock
xchg
cltd
mov
loopne
negb
or
push
jne
jno
outsb
lods
sub
sub
push
repnz
adc
mov
loopne
or
rorb
ret
outsb
div
mov
mov
mov
push
mov
roll
cmp
add
mov
jo
rcll
fs
mov
sub
push
jmp
sbbl
push
sbb
dec
faddl
das
xchg
inc
fsubl
mov
xor
pmaddwd
cmc
pop
push
jle
cmp
out
dec
pop
inc
adc
mul
push
lret
loope
xchg
xor
jmp
xor
lds
pusha
sbb
xchg
pop
xchg
addl
sbb
movsl
jae
data16
mov
aam
mov
das
iret
movsl
xor
or
repz
mov
lea
stc
pop
bound
fcompl
xor
lcall
cmp
push
or
pop
add
add
xor
jg
or
adc
in
mov
inc
lods
push
mov
int3
mov
data16
sub
push
jnp
lcall
inc
je
mov
insl
mov
jl
push
stos
mov
ret
push
cmp
or
test
xchg
push
push
loop
leave
icebp
insl
mov
dec
imul
mov
lahf
test
sub
filds
ret
or
ljmp
cld
sbb
daa
push
xchg
dec
movsl
ftst
cmpsb
ret
dec
cwtl
inc
ljmp
loop
mov
sbb
mov
sub
out
xchg
push
pop
mov
cmp
push
andl
mov
aam
jmp
fwait
jno
add
testb
and
push
shll
adc
or
cmp
test
shlb
loopne
popa
xchg
mov
shr
mov
shl
sub
sbb
loopne
xchg
ret
jno
loop
shrl
rorb
cmc
lret
xor
loop
cwtl
outsl
dec
insl
cmpsb
add
pop
jno
cmp
pop
mov
mov
push
es
sub
adc
add
mov
pop
and
xorb
mov
cmpb
or
movsl
jecxz
adc
jmp
xor
ret
jecxz
push
jno
or
lahf
jecxz
xchg
scas
in
insl
in
push
adc
push
or
pop
and
jl
stos
fistps
push
sub
pop
pop
jb
push
push
mov
sbb
mov
mov
and
sbb
es
mov
test
cmc
push
jmp
popf
jo,pn
dec
stos
aaa
pop
push
loopne
mov
dec
popf
push
add
mov
or
cmpsb
ss
xchg
mov
jns
loope
int3
lret
sub
pop
push
mov
add
mov
mov
xor
repz
clc
std
mov
mov
push
mov
jb
jne
sbb
inc
imul
add
cmp
pushf
xchg
lock
cmp
out
rorb
rol
imul
ficoms
mov
sub
mov
repz
sbb
sbb
mov
fwait
hlt
xchg
negl
xor
aam
pop
stos
xchg
pop
lods
mov
shlb
add
pop
push
int
dec
mov
pop
lret
sbbl
sub
loope
cmp
xchg
pop
push
pop
mov
adc
movsl
lahf
mov
js
push
pop
addr16
inc
cmp
fadd
rclb
nop
andb
adc
mov
pusha
aam
out
inc
rcrl
stc
js
sub
jbe
push
mov
ss
shl
and
mov
bound
mov
xor
fstpl
push
rcrl
cli
mov
test
pop
mov
stc
add
jp
dec
pop
fidivs
mov
jnp
xlat
push
fmul
adc
add
push
stc
add
ljmp
xchg
mov
push
pop
mov
inc
testl
cmpsl
push
inc
std
insb
pop
loop
xchg
push
addl
or
out
fwait
or
or
dec
pop
mov
xor
mov
add
out
mov
inc
into
popf
repnz
in
ret
shr
fwait
aaa
inc
push
enter
ror
repnz
mov
jo
inc
int3
outsl
aaa
enter
jle
fisubl
sub
out
test
cltd
std
out
push
xchg
in
adc
jl
dec
stc
push
sar
or
cmp
hlt
outsb
dec
leave
test
js
lcall
mov
stos
inc
mov
icebp
std
sub
xor
xchg
xchg
and
dec
arpl
or
leave
cltd
mov
andl
mov
test
or
sti
lds
ss
paddsb
ljmp
lret
movsb
es
add
fs
sub
xchg
gs
and
lret
fldl
xor
mov
pop
xchg
sbb
push
sub
push
in
out
out
dec
mov
or
mov
mov
iret
dec
jno
iret
rorb
leave
xchg
dec
filds
mov
repnz
test
push
int
push
cmp
pop
and
out
shr
mov
test
mov
fstpl
hlt
iret
push
add
xchg
cmpsl
mov
jae
cmp
sarb
cwtl
adc
inc
popa
dec
cmpsb
xor
mov
lret
testb
xor
shrl
das
push
les
sub
daa
cmovno
clc
xlat
clc
xor
jno
jo
xchg
jl
xchg
xchg
push
xchg
xchg
or
and
dec
push
lcall
divl
mov
popf
fadd
es
mov
test
xor
jno
xor
sub
movsb
sub
and
and
or
lret
lock
jle
mov
pop
push
sub
jns
add
repz
xor
pop
dec
push
inc
movsb
or
sbb
mov
xor
imul
add
cmp
jmp
hlt
dec
cmp
push
cli
aaa
ficoms
xor
add
lret
cld
lods
fsin
jl
adc
adc
mov
imul
mov
push
pop
mov
shl
jmp
or
sub
insl
in
imul
lahf
lcall
pop
and
sti
leave
xchg
jae
and
cmp
adc
into
rcll
fstp
or
test
push
adc
test
aaa
mov
cmp
xchg
in
and
add
testl
rolb
ja
sbb
stc
xchg
push
cld
dec
mov
sbb
movsb
mov
std
neg
bound
cmp
cwtl
jbe
sti
pop
fidivs
sbb
lahf
jno
jl
test
out
pop
xor
jp
push
add
insb
jb
mov
push
imul
cmp
jmp
imul
add
fdivrs
aad
push
sub
fidivl
cmp
push
pop
test
mov
popa
lret
jmp
dec
sar
movsl
outsb
adc
xchg
jp
in
leave
pop
add
mov
popa
sub
scas
sbb
cmp
cli
movsb
or
adc
cmpsl
fwait
sti
sbb
daa
mov
into
stc
mov
or
sub
out
repz
sarl
dec
mov
push
mov
mov
leave
jle
sar
mov
mov
stos
push
xor
notl
sbb
in
pop
inc
lods
nop
int3
ja
add
mov
mov
stos
xlat
js
cmp
loope
pushf
dec
cmpsl
pop
ror
cmp
lcall
adc
xor
dec
pop
stc
test
loope
mov
lea
mov
adc
test
xor
dec
pop
in
aad
push
mov
sub
jp
add
push
jge
mov
arpl
and
sub
cmc
insb
push
jmp
pop
cmp
ljmp
sahf
mov
and
pop
in
mov
push
lock
push
and
les
jae
jp
insl
mov
add
sbb
pusha
inc
into
mov
xor
mov
cmpsl
iret
sti
and
fidivs
stos
in
int
ret
nop
lods
lds
push
popf
test
scas
and
inc
jmp
sbb
in
xchg
movsb
jl
rcrl
adc
es
mov
dec
test
xor
lock
cmp
gs
out
clc
xor
sbb
sub
lea
cs
js
sbb
fadd
xchg
movsl
mov
cmc
int3
and
pop
test
mov
lret
cmpl
insb
call
xor
testb
les
xchg
aas
pop
jmp
inc
into
dec
cwtl
jge
jp
and
push
cmp
mov
mov
inc
insl
stos
push
xor
loope
push
movsb
push
pushf
cld
xor
loope
push
cmp
enter
scas
xor
push
imul
mov
pushf
dec
cmp
out
mov
outsl
mov
push
mov
je
aad
fistpl
add
lods
in
jne
js
xlat
dec
mov
inc
jnp
jo
mov
jnp
push
pop
pop
push
jecxz
mov
cld
cmc
popf
mov
enter
lcall
cmp
je
mov
inc
and
xor
pop
and
jecxz
into
leave
ret
clc
roll
cli
push
shl
fsubl
nop
mov
ds
outsl
fcoms
adc
icebp
fnsave
lret
aaa
dec
adc
jl
aaa
int3
push
out
jae
cli
imul
add
scas
push
cltd
jmp
fcoms
lahf
clc
sbb
sbb
ljmp
sub
mov
scas
ret
xlat
in
jnp
ljmp
loop
pop
mov
ljmp
shll
imulb
pop
xorb
dec
lahf
ja
rcrl
mov
sbb
pop
shll
pusha
sbb
inc
and
or
rcl
out
xor
fcoms
enter
xor
xor
xchg
popa
aas
pop
push
push
xor
repz
mov
xor
sbb
push
jp
mov
sbb
inc
inc
in
bound
push
mov
hlt
outsb
outsb
adc
mov
lods
push
loope
les
adc
into
lock
paddsb
lods
add
inc
push
aaa
dec
jnp
cwtl
repnz
push
test
cmp
jmp
ja
xchg
mov
loop
cmp
fcompl
add
call
add
xchg
xchg
call
sub
sub
out
fistpl
dec
or
lock
inc
and
sbb
mov
mov
in
pop
aas
in
loop
retw
int
mov
dec
loopne
shrl
pop
cmp
ljmp
cmp
out
mov
mov
xlat
fldenv
and
push
cmp
ret
rclb
into
lahf
xor
out
push
pop
imul
out
adc
mov
mov
mov
jg
xor
out
sbb
jge
int3
jg
iret
push
clc
mov
clc
fldcw
sbb
push
in
add
xor
mov
lret
in
mov
in
hlt
cmp
cltd
inc
cmp
test
popa
pop
je
fdivrp
mov
sub
incb
pusha
push
xor
mov
and
pushf
fs
mov
popf
adcl
dec
lret
cmp
mov
adc
insl
or
pop
xchg
mov
jnp
adc
push
outsl
and
rclb
es
ja
pop
add
cmc
jg
jo
mov
aas
repz
inc
cmp
lods
test
sub
mov
fwait
call
pop
aam
mov
xor
dec
mov
aas
adcl
ljmp
arpl
imul
es
nop
je
jno
inc
aad
mov
jmp
hlt
mov
cs
or
test
and
or
pop
movsb
gs
roll
outsl
icebp
andb
jp
xor
and
xchg
jmp
arpl
popf
movsb
or
sbb
cmp
loop
leave
jle
add
lods
sbbb
stos
sub
setne
xchg
les
inc
add
sbb
aam
inc
adc
call
out
pusha
in
cmp
daa
pop
test
fmul
jbe
ds
dec
stos
push
jmp
sarl
dec
out
sahf
xor
stc
dec
movl
std
xlat
mov
mov
sbb
test
mov
sbb
cmp
push
jb
arpl
dec
xchg
je
gs
rclb
sub
adc
dec
push
jecxz
fsts
lcall
cli
movsl
aad
push
pop
testb
aas
xchg
in
push
shrl
out
cmp
mov
cmc
movsb
inc
push
sarb
fwait
adc
mov
sbb
or
inc
push
loopne
adc
and
pop
pop
pop
stos
jp
out
xor
xchg
push
sub
aam
or
sub
rcrb
bound
outsb
jmp
cmp
std
fneni(8087
mov
arpl
xchg
pop
ljmp
imull
pop
jp
push
sbb
inc
cmp
ficoml
cli
mov
cmpsl
lcall
out
pop
dec
pop
jp
push
sbb
inc
cmp
ficoml
cli
mov
cmpsl
lcall
out
pop
dec
pop
jp
push
sbb
inc
cmp
ficoml
sti
mov
cmpsl
cwtl
xlat
mov
cmp
sub
movsl
pop
mov
shlb
push
insl
filds
cwtl
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
inc
mov
jne
enter
dec
mov
lret
lds
aam
in
hlt
sbb
pop
mov
inc
mov
jne
add
sub
sbb
or
xchg
imul
xorl
loop
repz
cmp
or
xor
pop
shrb
divl
sbb
int3
xor
and
loope
data16
pop
xor
roll
xor
xchg
mov
cli
mov
xor
les
sbb
hlt
jp
xchg
xor
adc
test
aam
jo
shrb
subl
aad
call
push
inc
in
push
pcmpgtb
and
add
mov
fistl
sbb
lahf
xchg
aad
movsb
sbbb
mov
test
pop
cmp
mov
pusha
jecxz
mov
jns
jnp
or
cmpsb
arpl
add
jno
dec
test
xor
inc
sbb
aad
sbb
mov
mov
xor
add
adc
inc
mov
add
and
or
sbb
add
mov
scas
lds
in
lea
push
xchg
imul
shlb
ret
sbb
add
scas
addr16
mov
jle
or
sarb
mov
sbb
dec
enter
sub
sbb
or
pop
mov
inc
mov
jne
add
sub
sbb
or
pop
mov
inc
mov
pop
mov
jo
sub
sar
xor
cmc
dec
cld
scas
dec
xchg
sub
aas
jno
sbbl
cmpsl
loope
pop
sar
dec
jg
popa
xor
inc
sub
push
sbb
pusha
mov
seta
into
in
rorb
ds
aad
jae
adc
or
ds
xchg
jae
inc
mov
jp
aam
or
inc
lcall
adc
insb
movb
jecxz
outsl
cmp
inc
or
dec
push
lahf
and
and
mov
jae
xor
test
out
shr
fistpl
notb
or
dec
cli
movsl
and
add
in
mov
mov
sbb
icebp
sti
fisubrs
jae
test
ret
stos
addr16
and
rcll
add
mov
xchg
xor
nop
scas
out
mov
inc
cmpsl
jb
loop
ja
lock
in
xchg
mov
popf
jo
sbb
out
std
loop
pop
dec
inc
shl
aad
dec
cmp
or
add
call
popa
mov
sbb
or
shl
cmpsb
int
pop
dec
cmp
bound
or
fisttpll
xchg
adc
ret
add
sbb
cmp
push
cmp
jmp
js
sbb
fwait
iret
movsl
cmpsb
dec
adc
jbe
out
sbb
mov
in
faddl
loope
jg
sbb
cltd
addr16
lret
je
insb
inc
add
mov
pop
out
adc
and
push
lock
mov
jl
les
push
sbb
push
mov
mov
or
adc
jmp
sub
clc
jmp
xor
push
pop
ret
mov
fst
xor
adc
xchg
xchg
xchg
xchg
rol
ss
xchg
dec
mov
pop
movsb
aad
mov
popf
mov
xor
add
lea
sub
outsb
and
pop
icebp
inc
sub
clc
pusha
jo
inc
inc
jnp
imul
dec
push
rorb
stos
pop
inc
pop
scas
insb
lock
and
aaa
and
repnz
bsr
clc
jns
gs
mov
mov
jno
or
hlt
xchg
xchg
mov
not
xlat
cmp
fcoml
stc
mov
xor
ja
mov
sbb
out
mov
into
add
push
jbe
cmpsb
call
cmpsb
lret
dec
sub
adc
jge
in
scas
xor
in
lds
sub
leave
out
or
jge
xchg
das
fisttpll
jecxz
lcall
roll
push
and
cmp
lea
mov
fadds
pop
test
mov
push
mulb
stc
les
lcall
mov
dec
and
pusha
inc
movsl
adc
or
std
out
das
add
sarl
or
push
xor
call
and
pusha
mov
push
popa
ds
mov
scas
mov
aam
pop
and
push
inc
push
cs
popa
ret
leave
nop
dec
xchg
jecxz
mov
test
xchg
or
dec
lods
cld
mov
cmpsl
rcrl
mov
test
lahf
pop
push
in
inc
xchg
adc
and
mov
fdivp
cli
out
mov
loopne
dec
and
test
cmp
cmpl
mov
jmp
and
sub
push
sbb
int3
sbb
add
inc
fdivr
jne
fadds
sub
add
cmp
dec
aas
cmc
mov
push
imul
lea
loop
mov
adc
sbb
lods
rorb
sub
lds
jl
add
cmp
dec
lods
hlt
adc
add
out
in
mov
into
push
mov
and
jne
jmp
jbe
je
add
jp
mov
sbb
mov
jg
or
ljmp
add
or
xchg
adc
xorl
lahf
mov
adc
cmpsb
lds
jg
inc
popf
leave
mov
mov
mov
pop
and
out
or
push
adc
mov
or
loop
outsl
mov
ret
nop
inc
add
xor
dec
movsb
dec
jae
xor
xchg
cmc
ja
push
mov
mov
cmp
cmp
ficomps
mov
jle
scas
popa
sbb
adc
xchg
cmp
jae
imul
add
jno
jmp
cwtl
loope
ret
out
xchg
out
lods
jnp
push
push
push
push
shll
cmp
and
push
enter
ja
mov
and
gs
dec
addr16
das
pop
les
add
inc
pop
add
mov
fwait
test
sub
and
push
pop
xchg
pop
xchg
in
loopne
inc
mov
shl
inc
repz
add
and
ret
mov
push
xlat
lods
xchg
in
push
jmp
add
jge
push
test
in
ret
push
jge
iret
add
sub
hlt
xlat
xchg
mov
ljmp
mov
cs
mov
pusha
ret
sahf
push
mov
pusha
mov
cltd
hlt
cmpsl
or
push
sti
or
icebp
ror
addl
or
xor
mov
jnp
loop
mov
imul
jecxz
jne
scas
mov
test
gs
mov
jns
jg
push
push
sbb
and
and
dec
sarb
inc
mov
sub
cmp
popa
repnz
inc
lods
sub
push
mov
hlt
lods
arpl
mov
jge
imul
jecxz
push
fisubrl
jecxz
ljmp
sbb
sbb
loope
inc
mov
pusha
repz
mov
shll
testl
stos
test
jnp
jp
pop
pop
sub
decl
cmc
popf
pop
js
dec
push
in
sbb
movsl
int3
divl
rcrl
sti
repz
div
mov
lds
daa
xor
outsl
repz
or
cltd
in
out
aam
push
sarl
dec
dec
pop
push
push
mov
popa
icebp
addr16
xor
add
push
jnp
rol
insl
mov
ljmp
mov
add
les
leave
cmc
mov
mov
sub
or
aas
clc
nop
int
fldenv
mov
sub
cmp
xchg
sbb
xchg
push
clc
xlat
scas
gs
or
stos
jp
sub
dec
dec
mov
movsb
jne
mov
cwtl
mov
jne
stc
fs
into
in
and
test
pop
cmp
xor
pop
or
or
jnp
inc
cmp
xchg
test
push
inc
jne
dec
xor
mov
pop
lcall
xchg
sti
pop
jp
fs
call
js
xchg
dec
int
and
mov
repz
shr
push
inc
or
fsts
movsb
mov
lds
mov
aaa
fcmovb
inc
js
inc
jg
cli
mov
pop
sbb
xchg
shlb
jno
jne
adc
in
xchg
adc
pop
adc
jcxz
test
add
ds
push
lock
stos
jge
in
mov
or
mov
fidivrs
adc
xor
pop
inc
adcb
xchg
push
jp
das
mov
out
or
add
or
push
inc
push
push
dec
mov
adc
fs
adc
imul
cli
inc
mov
clc
mov
and
xorb
pop
dec
daa
lcall
mov
loopne
push
or
or
aas
mov
jge
rcl
test
sahf
fwait
int3
push
cmc
lds
icebp
sub
add
mov
fdivl
jecxz
cmpsb
lret
test
or
cmpsl
fdivs
test
pop
xorb
and
inc
divl
insl
dec
add
enter
jno
inc
pop
and
add
mov
outsl
lods
inc
sbb
inc
dec
mov
outsl
popf
sub
fildl
add
sbb
sbb
mov
iret
xor
cwtl
lret
pusha
imul
popa
sub
sti
lahf
out
ss
jo
push
repz
and
cmc
xchg
roll
xchg
pop
aad
mov
inc
cmp
cvtdq2ps
scas
xor
out
mov
jmp
jnp
not
push
aaa
stos
bound
mov
mov
andl
repnz
mov
cmpsb
lds
inc
test
test
push
xchg
faddp
sub
mov
fsubrl
pop
sbb
inc
das
std
sbb
test
mov
mov
or
jl
insb
push
sbb
ljmp
inc
add
pop
add
xor
loopne
imul
push
mov
or
inc
add
cmp
addr16
ret
pop
push
lock
xor
push
cltd
adc
imul
push
mov
pop
iret
outsl
add
stc
cmpsl
mov
push
add
mov
fisubrs
inc
mov
out
mov
imul
mov
xchg
call
jb
pusha
lods
into
adc
mov
adc
sub
or
or
fidivs
mov
ffreep
adc
mov
cmp
aaa
jnp
mov
out
mov
mov
aaa
mov
push
cmpsb
popf
pop
inc
fdivrp
cwtl
fmul
lods
shl
wbinvd
dec
xchg
dec
cmp
in
dec
push
mov
xchg
xchg
mov
out
pop
inc
inc
jmp
inc
lock
outsb
sub
push
adcb
or
pop
cmp
mov
push
push
adc
xor
add
rol
es
lahf
add
jge
mov
add
lret
ficoml
fwait
int3
ret
mov
or
jno
mov
dec
cmpl
xchg
mov
lea
inc
jecxz
push
inc
aas
leave
data16
cltd
int3
dec
test
push
lcall
in
jnp
adc
mov
jle
adc
adc
lock
repnz
dec
jb
fcoml
lods
or
jnp
cwtl
pop
fsubrs
fcoml
jg
xchg
mov
or
jns
sbb
stos
and
fbld
fwait
pop
pop
lods
mov
mov
xchg
movsl
or
pop
or
test
jb
mov
repz
cmp
cmp
shl
clc
mov
in
cmp
pop
sbb
push
pushf
les
lret
dec
push
push
insl
adc
push
ss
jae
push
xchg
pop
les
jnp
sub
lods
mov
add
sahf
xorl
jb
sbb
add
addr16
popa
pop
pushf
loop
mov
and
cmp
mov
mov
or
iret
sbb
pop
dec
andb
xchg
or
pop
xchg
outsb
aam
or
cmp
repz
or
rclb
fidivrl
dec
inc
into
mov
outsl
lds
mov
lcall
add
xchg
add
test
adcb
or
lock
add
scas
mov
xchg
test
in
int3
xchg
pusha
fwait
mov
or
dec
jl
cmp
fistpll
sbb
call
mov
sbb
mov
add
fcmovbe
cmp
pop
enter
pop
mov
lret
adc
das
or
stc
lods
push
or
in
mov
nop
sbbl
xor
fnstsw
or
mov
andb
sbb
notb
xchg
shll
enter
or
jecxz
lods
mov
fdivp
pop
xchg
push
loopne
hlt
cmp
jmp
mov
mov
insb
shll
or
sahf
aad
aad
jmp
and
xor
popf
rcrb
mov
xor
dec
mov
sbb
push
pop
jge
mov
int
out
xor
xchg
cli
and
adc
negl
cmp
out
and
imul
cmovae
movsl
int
shlb
and
xchg
jnp
xor
out
loopne
test
xor
mov
inc
mov
dec
fisttpll
adc
jae
bound
cli
insb
and
sub
pop
out
cmp
pop
dec
or
cmp
dec
in
xchg
das
xor
and
adc
dec
addb
shrl
jmp
cmp
inc
idivb
adc
adc
in
sub
rclb
in
das
sub
data16
jns
outsb
mov
rcrw
ret
sarb
es
inc
xchg
das
xchg
in
sbb
xchg
incl
xlat
dec
popa
inc
xlat
cmpsb
test
ficoml
push
shrl
inc
sbb
cmp
add
iret
orb
mov
push
shl
inc
int
adc
jns
xchg
insb
or
mov
push
jnp
repnz
ss
data16
icebp
daa
cs
jnp
imul
test
int3
jmp
adc
cs
or
xchg
stos
add
es
or
popf
into
mov
std
fcoms
jge
pop
mov
jo
xchg
fmul
arpl
xchg
pop
out
je
dec
call
adc
outsl
lock
fbld
inc
pop
fbld
daa
xor
xor
mov
mov
mov
aam
xchg
repnz
adc
pusha
addr16
push
sbb
outsl
mov
push
js
xchg
lcall
inc
lock
je
jg
movsl
sahf
sbb
pop
ficompl
dec
inc
cmp
and
sub
inc
adc
in
movsb
fwait
mov
pop
push
rcl
loopne
dec
jg
sbb
add
jae
in
add
pop
xchg
add
aas
jnp
rolb
xchg
pop
dec
into
cmp
xlat
enter
repnz
pop
lods
lret
xor
popf
popf
pop
xor
xchg
int3
fdivl
adc
lea
mov
shll
jp
xor
adc
pop
mov
jmp
jns
mov
pop
jno
jns
jne
pop
xchg
popf
ss
jl
and
inc
pop
pop
sbb
mov
aaa
push
push
mov
notb
int
jbe
add
lahf
push
ret
mov
xor
pop
push
fstps
iret
sub
divb
lret
out
cwtl
push
sub
adc
pop
inc
cmp
inc
cld
xchg
insl
cmpsl
mov
or
lea
mov
jo
fdiv
xor
mov
or
dec
mov
andb
inc
jbe
push
pusha
fmul
mov
hlt
add
xchg
fucomi
inc
gs
nop
dec
jb
into
movl
mov
loop
inc
xchg
lahf
in
mov
loope
cmp
std
loop
imull
repz
sahf
xchg
mov
je
vpand
sub
int
jo
mov
call
cmp
lcall
add
add
in
add
mov
fs
jbe
dec
cli
mov
sub
and
or
loope
imul
aam
jecxz
stos
and
or
pusha
fwait
out
dec
adc
pop
sahf
mov
add
jg
and
add
and
sub
repnz
push
pop
adc
bswap
mov
mov
shrl
nop
xchg
sbb
clc
mov
fnsave
rorl
ret
and
lahf
sti
pop
imul
xchg
adc
das
outsl
test
adc
scas
leave
stos
sbb
and
imulb
mov
into
test
cmp
push
std
addb
out
xchg
lods
cmp
ss
xchg
cli
mov
pop
jl
jg
mov
imul
cld
adc
cmp
jbe
and
hlt
cmp
mov
fidivrl
roll
mov
ja
pop
pop
mov
sti
mov
repz
test
cltd
in
imul
fidivrs
mov
repz
cli
push
imul
mov
imul
shlb
sub
add
pop
fisttpll
in
lahf
cwtl
aad
shlb
idiv
mov
add
sbb
add
jg
scas
mov
pushl
in
push
inc
jo
mov
lret
mov
sbb
mov
fldt
hlt
or
rcl
mov
loope
mov
dec
pop
jmp
jnp
insb
sbb
mov
lock
sbb
add
sbb
scas
filds
dec
sub
loopne
fisttpll
out
popf
xor
call
inc
leave
into
or
and
add
pop
adc
cwtl
inc
lcall
ljmp
fmull
fnstenv
xor
push
ljmp
int
repnz
cmpsl
scas
dec
mov
punpcklwd
call
or
leave
or
xchg
lods
pushf
and
cs
or
dec
push
es
gs
mov
add
push
dec
leave
nop
stos
stos
div
xor
mov
cmpsb
cli
int
mov
xchg
add
push
inc
hlt
push
movl
push
mov
hlt
out
das
lcall
pop
repz
pushf
int3
in
or
in
mov
idivl
les
xchg
push
ror
ss
rorl
lds
jp
and
add
out
js
nop
cltd
pop
jle
orl
ficoml
cmp
mov
jl
dec
and
pop
sahf
imul
jmp
mov
pushf
add
xchg
xchg
cmp
out
shlb
call
fdivrl
lods
xchg
jbe
cmp
sti
mul
mov
pusha
pop
dec
xchg
sbb
add
sub
pop
inc
fstpl
into
push
push
jo
repz
jns
outsl
xor
stos
fildll
mov
and
sub
adc
or
sub
add
imul
daa
in
dec
pop
adc
push
orl
bound
mov
dec
sbb
mov
xchg
pop
or
pop
or
mov
dec
ret
aad
lahf
in
outsb
mov
add
aaa
andb
and
or
xchg
in
mov
push
jl
cmp
fs
shl
cmp
xor
fwait
aad
cli
fisttpll
ret
pusha
test
call
outsb
or
sbb
add
hlt
cmc
mov
jp
cmc
sbb
mov
add
mov
jle
rclb
cmp
sbb
in
test
jmp
pop
xchg
cmc
pop
jg
mov
adc
mov
adc
loop
popf
pushf
push
popa
lock
mov
mov
jl
add
sub
shlb
scas
incb
dec
pavgb
mov
and
mov
adc
mov
xchg
mov
adc
sti
lret
mov
adc
pop
push
jg
cmp
xchg
movsb
stos
jp
in
inc
mov
shlb
lret
pop
sub
mov
ds
jbe
and
repz
arpl
fdiv
dec
jge
hlt
and
push
sub
addr16
fs
mov
sub
pop
xchg
xchg
pop
cmovp
call
xchg
ficomps
dec
shld
cli
in
out
pusha
lret
and
mov
push
fldt
out
xchg
stc
stos
xlat
cmpsl
push
inc
pop
jmp
sti
push
add
xchg
leave
cmpl
gs
pop
or
icebp
cmp
loopne
mov
sbb
pusha
call
std
insl
sbb
mov
mov
pop
cli
into
test
sbb
insl
cmp
cli
pop
cmp
sub
jnp
nop
loop
cmc
xlat
popa
ljmp
dec
aas
enter
subb
les
sub
imul
xchg
push
jb
mov
repz
adc
push
jmp
xor
rol
mov
sbb
sbb
insb
adc
jle
mov
dec
pusha
stos
jl
mov
mov
push
addr16
test
adc
pop
nop
jne
or
sub
sbb
jb
pop
lcall
test
negb
add
fnsave
xlat
pop
add
out
adc
daa
in
push
pop
cmovae
or
into
std
loop
mov
jo
cmpsl
hlt
add
ret
cltd
dec
mov
cmc
clc
je
cmp
sbb
fucomp
call
scas
aaa
mov
cltd
push
ret
shrb
pop
and
mov
mov
jno
les
cmp
push
ficoms
xchg
mull
mov
xchg
loope
stc
mov
cmp
and
sahf
ss
sub
outsb
pop
xchg
sbb
mov
dec
aad
mov
jmp
inc
hlt
pop
push
mov
mov
movsb
push
in
rorl
into
leave
stos
loopnew
mov
shrl
lods
ss
pop
int3
jno
icebp
ss
lahf
outsb
frstor
mov
pop
mov
cwtl
and
popl
test
or
pop
add
pop
cmp
ret
lahf
test
xchg
pop
or
mov
xchg
jae
jmp
add
mov
sub
sbb
or
pop
mov
inc
mov
jne
add
sub
sbb
or
pop
mov
inc
mov
jne
test
adc
lret
lds
aad
in
cmc
jne
pop
mov
inc
mov
jne
add
orl
in
aad
lds
or
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
insb
jae
pushf
dec
lods
pop
cmp
add
jns
adc
out
or
sbb
sub
cmp
dec
mov
jl
mov
lods
pop
mov
or
sbb
in
or
cmp
sub
cmp
and
jl
push
jl
dec
add
mov
or
sbb
in
rcr
jg
jae
dec
lods
sbb
xor
sbb
jmp
out
xchg
and
cmpsb
out
fstpt
aaa
shll
and
mulb
and
lods
hlt
mov
xor
sti
dec
mov
icebp
xchg
lea
cltd
es
xchg
jns
out
in
dec
inc
ja
sub
mov
insb
aaa
pop
shrd
mov
ret
mov
pop
sbb
sbb
jno
sub
dec
mov
das
aas
cltd
stc
je
jmp
cltd
lock
cld
in
pop
hlt
or
jmp
cmp
pop
cmp
jae
pushf
adcl
and
mov
pop
test
or
stos
or
je
shll
mov
scas
mov
sub
int3
cmp
or
sbb
in
mov
fcmove
cmp
je
pusha
mov
adc
ficomps
pushf
or
sbb
arpl
cltd
pop
mov
and
sub
sub
or
das
int
cltd
dec
mov
pop
nop
sahf
imul
adc
or
jl
or
cmp
imul
cld
sbb
sub
cmp
dec
mov
jl
mov
lods
pop
mov
or
sbb
in
or
sbb
sub
cmp
dec
mov
jl
mov
nop
cld
push
add
out
cltd
mov
out
aaa
sub
imul
mov
mov
aam
dec
jle
jns
mov
sbbb
mov
orw
xchg
xlat
fwait
mov
mov
mov
add
pop
cmp
scas
std
cmp
mulb
fstpt
jmp
das
test
js
aaa
cmp
pushw
xor
push
mov
xchg
faddl
pop
ficompl
lods
mov
lea
push
push
ss
jb
in
jl
or
inc
jg
gs
jmp
sbb
add
int
aad
int
cmpsl
shll
sub
cwtl
lods
mov
fwait
test
fwait
jne
pop
loopne
pop
in
insl
pop
xlat
and
enter
push
jle
movsb
mov
neg
loopne
cwtl
dec
inc
jmp
into
aaa
pop
push
hlt
push
outsb
push
xchg
inc
lahf
fsubrs
loop
xor
rcll
call
pop
mov
adc
dec
cmp
mov
jae
aaa
stos
add
mov
mov
mov
into
sub
mov
dec
pop
in
and
sub
xchg
rclb
xchg
cmpsb
xchg
adc
aas
inc
add
xor
jns
shrb
test
sbb
aas
jno
adc
clc
int3
sti
cmpsb
and
adc
daa
iret
popa
enter
mov
xor
mov
insl
cs
stos
push
ret
lcall
xor
ja
sbb
pop
jg
xchg
push
pushf
fwait
mov
cmp
je
out
aad
cs
push
sti
lret
pop
faddl
cmc
push
add
mov
testb
sahf
or
lods
jmp
xchg
insl
and
in
push
iret
push
int3
pop
inc
cli
dec
mov
daa
shl
movsb
mov
dec
mov
add
xor
mov
lret
jae
pop
clc
xor
cld
mov
cmp
xchg
sbb
and
pop
push
sub
hlt
mov
rol
and
out
ret
pop
imul
dec
scas
insb
or
popf
cmp
cmp
ret
lahf
jecxz
jl
jle
mov
sub
ds
xor
ret
and
dec
popa
pop
jmp
cmc
rcr
dec
jo
imul
pop
push
mov
andl
mov
lds
fwait
ljmp
xchg
mov
mov
push
sti
inc
xor
fsubl
dec
mov
mov
mov
xchg
push
jne
lea
and
mov
or
jb
and
mov
leave
testl
push
sbb
pop
pop
test
shrl
arpl
jo
adc
mov
push
std
jbe
in
xchg
mov
clc
jg
loope
lahf
repnz
sbb
inc
pop
mov
mov
dec
lods
mov
movsb
rolb
mov
push
dec
addr16
inc
xor
xchg
mov
icebp
mov
sbb
je
sub
pusha
jecxz
pusha
adc
mov
mov
xorl
and
sub
add
add
mov
addl
les
cmp
inc
mov
mov
and
rcrl
xor
enter
add
popf
lock
cli
xchg
and
xchg
and
xchg
lock
jb
xchg
std
loope
pop
pop
xor
jnp
sub
or
jp
enter
xlat
and
push
fs
inc
ds
mov
mov
mov
nop
ret
and
fists
loopne
cwtl
or
push
adc
adc
popa
imul
fsubrl
cmp
inc
xchg
in
ljmp
lock
push
rolb
repnz
jne
cmpsb
loopne
bnd
rcrl
lret
pop
push
jns
insb
pop
ficompl
cmp
xchg
xlat
clc
add
out
and
pop
xor
cltd
xchg
loop
add
xchg
insl
insl
jl
out
cltd
popf
aas
ds
mov
fiadds
das
sub
rcll
enter
aaa
gs
push
ficoml
incl
dec
inc
jg
mov
rorb
fsubrl
lahf
jno
mov
or
shll
push
xlat
aam
orb
and
push
mov
xchg
wbinvd
test
jle
outsl
mov
hlt
loopne
movsl
mov
mov
movsb
fldenv
scas
push
sub
jecxz
add
sub
pop
movsl
adc
imul
insl
pop
mov
idivb
sar
fadds
add
dec
lahf
negb
and
shll
pusha
cs
push
xchg
mov
mov
movsb
pop
mov
arpl
add
arpl
icebp
pop
mov
bound
mov
dec
jg
lret
mov
cli
add
lock
hlt
add
mov
in
mov
mov
mov
lret
jbe
jl
dec
imul
cmp
adc
fisubs
das
roll
pushf
movsl
sub
mov
fcomps
adcb
xchg
jle
or
leave
stos
ret
daa
cli
pop
nop
xor
aas
or
aas
push
lds
sbb
mov
sub
jp
lods
and
loop
jo
mov
cmp
gs
in
outsb
push
test
cmpsb
dec
cwtl
inc
dec
inc
sbb
in
mov
xor
cli
loope
pop
sub
inc
sahf
in
repnz
sbb
cwtl
rcrl
sar
push
fxtract
outsb
out
adc
add
add
aaa
subb
or
call
jne
or
xor
or
stc
push
inc
js
or
mov
jge
aad
andl
aaa
scas
dec
rclb
mov
add
and
xchg
cmpsl
cli
xor
js
movsl
inc
outsb
pop
clc
gs
fisubrs
xchg
xor
stc
pop
mov
mov
lock
sbb
pop
ds
adc
sbb
inc
fsub
inc
jbe
cmc
jl
pop
popf
or
push
loope
inc
push
pop
lahf
xor
xor
outsb
xchg
adc
in
sub
lcall
xchg
iret
jl
jne
iret
mov
dec
sub
sub
call
xchg
fwait
lahf
push
push
stos
xchg
lret
repz
loopne
repz
jge
rcr
enter
in
push
lcallw
inc
repz
aas
rorb
fdivl
mov
enter
in
in
and
pop
xchg
hlt
subb
and
movsb
in
mov
mov
and
fwait
cmp
add
mov
inc
or
jno
mov
stos
push
cmpsl
xchg
iret
mov
dec
dec
dec
test
inc
fsubs
rclb
sbb
jle
push
ljmp
inc
popf
movsl
mov
or
xor
test
es
mov
mov
dec
es
movd
sar
pop
and
stos
add
les
cs
xchg
add
jno
sti
cmp
jne
stc
xchg
rcrl
cmovns
mov
rorl
mov
rcrl
dec
imul
fdivrs
push
ret
insb
in
cmc
pop
jb
cli
cmpsb
pop
cmp
shl
movsl
test
adc
xchg
repnz
sub
test
lock
jb
xor
jmp
xchg
addr16
fisubrs
icebp
mov
sub
scas
jge
popa
ret
call
dec
stos
movsb
cmp
push
and
out
movsl
sti
shll
push
inc
inc
add
adc
outsl
or
fdivs
in
idivb
in
iret
test
fisubs
out
ds
pusha
mov
pop
push
rolb
pop
xchg
sub
lret
mov
jp
imul
inc
jnp
ja
aas
cmp
or
pop
sbb
cmp
jmp
xchg
pusha
outsb
aaa
fisttps
lret
cmc
fwait
mov
fcoms
jmp
xchg
lds
scas
repz
and
loope
mov
pop
flds
jno
cltd
jg
sbb
or
and
xchg
dec
ficompl
sub
xor
sahf
loope
mov
jl
inc
dec
arpl
jae
rcl
scas
nop
and
xor
aad
fldl
sbb
jno
jb
xchg
sti
dec
sbb
mov
hlt
outsl
mov
push
or
repz
ljmp
sub
ret
int3
dec
inc
jmp
lret
inc
xor
mov
mov
pop
in
in
mov
std
sub
mov
jp
out
push
repz
jo
fldl
aad
jg
call
ret
mov
test
inc
jl
pop
inc
cwtl
cmp
xchg
mov
popa
jecxz
out
aam
enter
out
push
mov
enter
inc
negl
sbb
lock
and
jg
jns
mov
pop
xorb
lods
ret
mov
lock
fs
mov
fsubrl
cmp
lods
dec
jb
or
jae
xor
mov
cmp
mov
stos
adc
mov
cmpsb
sahf
xchg
data16
push
movsb
shrl
mov
push
enter
dec
test
scas
cltd
andb
adc
jmp
sbb
push
dec
or
pop
push
jge
imul
mov
gs
push
sbb
add
testl
repnz
insb
sub
mov
decb
xchg
cmpsl
xchg
jne
aad
xchg
dec
xor
bound
repnz
scas
lcall
mov
in
jge
rorb
out
sub
or
filds
xor
mov
mov
aaa
inc
cmp
pop
lds
lock
rol
clc
into
cmc
lcall
pop
rorb
jmp
outsl
xchg
jmp
icebp
sbb
pop
lcall
mov
inc
hlt
mov
mov
add
or
xchg
mov
gs
scas
adc
add
movsl
or
sub
popf
fisubrs
inc
jb
xchg
fdivl
mov
and
in
pop
dec
and
sub
sub
fsts
lea
jno
adc
es
sub
popf
and
and
cltd
and
stc
adc
aaa
testl
in
cltd
inc
cmp
repz
adc
test
and
xor
xor
sub
addr16
insb
gs
mov
add
add
add
sti
xor
push
cli
jl
in
sub
mov
add
xrelease
sbb
xlat
stos
nopl
pop
xchg
fcmove
push
pop
lock
test
xor
inc
imul
fs
mov
sbb
xchg
jecxz
pop
into
lret
sahf
lds
xchg
push
dec
pop
mov
cmp
push
shll
inc
dec
test
and
iret
shl
dec
mov
adc
out
cmc
js
pop
lret
pop
call
lret
dec
stc
pop
xchg
aas
rol
test
addr16
xchg
sub
repz
push
pop
fstpt
push
dec
mov
jmp
dec
and
adcb
push
fwait
int
xchg
jbe
out
ret
dec
lock
inc
int3
mov
xor
pop
push
outsl
add
push
repnz
jecxz
pop
mov
fldcw
add
jle
cmp
jg
inc
jbe
repz
mov
push
mov
fsts
rcrb
insl
add
outsl
int3
rcrl
cmp
jae
jge
lods
nop
out
xchg
aas
bound
xor
lahf
imul
out
adc
lret
dec
stos
sub
mov
dec
icebp
jbe
jmp
sub
out
loop
add
jae
or
and
fs
fsubrp
xchg
das
inc
pop
dec
outsl
jl
jl
xchg
insl
roll
add
scas
divl
or
sub
lods
xchg
int3
shr
nop
ret
xor
rcrl
xor
mov
test
xchg
or
and
mov
jae
pop
sub
mov
dec
inc
sbb
adc
fisubs
nop
dec
sub
shl
fildl
rcll
push
or
call
xchg
test
adc
arpl
jns
aas
jno
xchg
rorl
pop
outsb
mov
pop
ror
fsubr
sub
dec
sbb
out
leave
cmp
into
sbbb
not
in
pop
aas
fs
xchg
faddl
imul
xor
cld
xor
and
mov
inc
push
out
sahf
aaa
xchg
push
pop
add
pop
int3
pop
mov
sub
in
xor
cmp
rolb
inc
sub
add
jmp
sub
xchg
xor
inc
push
jge
repz
stc
fbstp
or
lret
mov
jae
mov
fadds
in
sub
shl
dec
iret
int3
fldcw
lds
rcll
push
xchg
scas
xchg
jns
ret
sbb
add
fldl
aas
sub
iret
mov
mov
xchg
loope
ret
ljmp
and
sti
aad
popa
test
sub
movsl
shrl
mov
mov
add
or
xor
adc
xor
cmp
pusha
xchg
adc
bound
nop
mov
into
js
sbb
mov
and
or
lea
out
dec
mov
push
xlat
lds
fwait
rorl
insl
fwait
cltd
scas
and
adc
sahf
jmp
push
pop
dec
int3
lods
pop
sub
and
into
aad
cmp
adc
hlt
xor
movsb
xchg
cmp
cmc
leave
jo
popa
hlt
mov
pop
adc
ret
push
jo
test
test
mov
lahf
sub
pop
sub
xchg
xchg
mov
lret
pop
jno
ljmp
scas
mov
cmp
fldt
jmp
hlt
cmove
mov
mov
dec
push
in
mov
push
jae
in
xchg
data16
mov
iret
jno
rcll
add
in
xchg
mov
inc
adc
push
pop
mov
and
xchg
outsl
add
mov
jnp
cmp
cmpsl
rcrl
cmp
push
push
cmpsl
mov
add
fsubp
or
sbb
inc
sub
pop
cmp
lods
xchg
inc
jae
mull
mov
jb
mov
or
test
loopne
xchg
clc
add
aam
ja
add
inc
pop
sahf
pop
aas
cmp
in
sbb
inc
aaa
push
fs
pop
jl
test
dec
adc
daa
nop
fisubl
lret
jne
enter
cltd
mov
mov
neg
lahf
insb
arpl
ret
sub
dec
or
or
sbb
xorl
add
es
notb
adc
mov
adc
cld
cmpsl
inc
inc
xchg
inc
roll
pop
pop
or
aas
fwait
sti
in
cs
lret
jle
sub
out
dec
adc
pop
and
cmpsl
lea
sti
imul
jecxz
clc
sbb
sbb
test
mov
imul
lahf
xor
cwtl
push
jae
lahf
js
or
jb
sbb
out
out
ss
adc
das
and
pop
mov
mov
popa
lahf
xlat
imul
imul
lods
rolb
or
mov
xor
bound
je
mov
xchg
push
js
lahf
lret
push
push
popa
int
test
pusha
mov
mov
shlb
pop
insl
adc
sbb
pop
mov
or
enter
movsl
out
xchg
stos
outsl
das
aam
andb
shl
movsb
je
cwtl
sbb
cltd
xor
test
rcll
imul
dec
je
shrb
aad
pop
ret
inc
leave
sub
dec
jno
notb
iret
pop
lock
xchg
inc
pushf
xchg
inc
lds
adc
dec
test
cmp
aas
xlat
cmp
jb
pop
shll
lods
jne
and
xchg
pop
mov
aaa
or
lcall
xor
mov
ljmp
lock
flds
repz
popf
mov
notb
lret
mov
clc
aaa
mov
pop
jmp
inc
push
adc
lds
dec
xchg
xor
add
xlat
xchg
mov
leave
sti
jge
into
push
push
gs
mov
pusha
xor
enter
mov
add
adc
je
jl
hlt
or
loop
mov
mov
sbb
and
mov
repnz
jg
fs
and
cmp
mov
xchg
out
shl
out
mov
es
add
push
fmuls
decb
push
andl
sub
xchg
in
loop
sarl
and
clc
xchg
push
fcompl
pop
in
mov
in
fwait
or
ret
pop
out
iret
inc
pop
adc
lea
in
lcall
sbb
xor
shll
vshufps
std
in
repnz
push
or
loop
ret
or
movsb
sub
leave
fildll
cmp
les
jbe
xor
in
int3
xchg
mov
push
fidivrl
mov
pushf
imul
jns
sbb
pushf
ljmp
xor
add
enter
jecxz
adc
mov
shl
roll
cmpsb
and
or
shlb
insl
or
in
and
stc
xchg
xchg
lea
pop
cmpb
sub
pop
orl
and
cld
out
test
jnp
cltd
jbe
cmp
push
lret
and
iret
jo
dec
scas
lcall
add
fcoms
or
jns
cmp
xchg
pop
ss
pop
sbb
jns
and
adc
hlt
push
mov
fwait
xchg
and
sub
ds
test
fidivs
pop
mov
xchg
adc
jge
ss
scas
cmp
xchg
test
hlt
and
imul
imul
jp
pushf
push
push
stos
mov
test
inc
push
sahf
jg
mov
dec
loopne
ss
rcrl
sahf
lock
ss
mov
out
xchg
xchg
cmp
std
cmpsl
movsb
pop
imul
sbb
clc
mov
fdivl
repz
cld
inc
sbb
sbb
loope
je
mov
jns
arpl
icebp
cmc
pusha
fldenv
scas
les
push
mov
movsb
inc
mov
loopne
ss
dec
inc
xchg
push
sbb
jle
sbb
jno
xlat
xchg
sub
scas
cltd
imul
inc
mov
je
dec
cmpsb
sub
sbb
popa
cld
xlat
inc
push
jg
rcl
pop
inc
hlt
loope
rorl
rcl
xor
outsb
adc
add
lds
and
sbb
fbstp
addr16
mov
and
call
ja
cmpl
mov
pop
out
rol
xor
ss
das
inc
and
cmp
pop
int3
scas
and
bnd
mov
repnz
pusha
pop
push
inc
mov
mov
dec
push
xchg
push
mov
fidivl
mov
pop
stos
int3
and
add
leave
mov
fadd
test
or
out
xor
mov
push
push
hlt
push
mov
fs
cmp
cmpl
xchg
xchg
test
ret
mov
in
jecxz
stos
inc
inc
sbb
cmp
cmp
pop
in
outsl
pop
in
mov
jns
incl
rsqrtps
std
jno
flds
popa
push
mov
call
adcl
pop
aas
daa
jne
call
mov
movsb
out
jmp
addb
call
push
push
pop
or
imul
sbb
or
adc
or
loopne
and
popf
sbb
xchg
jo
call
ret
test
add
cld
stc
xchg
sbb
jo
pop
mov
int3
jg
xchg
cld
jae
int3
jl
push
je
dec
subl
dec
pop
test
aaa
mov
dec
ss
je,pt
fxch
adc
clc
mov
sbb
aas
adc
rolb
insb
jp
int
fcomi
jp
push
je
ret
rcl
mov
mov
and
inc
jo
push
fs
jno
xor
push
cmp
andl
mov
aam
loope
add
daa
bnd
xor
test
cmp
xchg
sub
add
test
in
hlt
insb
push
decb
jl
or
pop
xchg
push
pop
cmp
arpl
mov
lods
dec
loope
lret
jns
jno
xchg
aaa
mov
cmpsb
mov
in
inc
orl
dec
push
xchg
adc
xor
sarl
mov
pop
mov
push
sbbl
mov
adc
mov
setg
repz
fwait
pushf
or
jns
mov
adc
outsl
inc
shrl
and
ror
cs
sub
int
inc
push
loopne
xchg
dec
dec
addr16
mov
xor
out
pushf
mov
or
lret
push
movsl
js
sub
xchg
xchg
inc
inc
and
cmp
out
inc
jl
rolb
stos
inc
xor
fadd
mov
add
push
cmp
addr16
jl
fnstenv
xlat
push
jbe
sbb
inc
shrb
sahf
aad
test
inc
loopne
fsubrl
sub
sub
sub
xor
leave
mov
jp
or
push
int
mov
cmp
adc
inc
negb
mov
aaa
push
and
mov
and
jne
pop
add
cli
pop
xchg
sub
repz
imul
out
mov
sbb
or
jno
and
fisubs
popf
mov
clc
xor
dec
add
das
imul
jle
pop
sbb
and
movsb
lods
fdivrp
sbb
loop
ljmp
mov
and
xor
jecxz
fidivl
and
sub
outsb
inc
add
daa
mov
fwait
cmp
mov
xchg
mov
adc
push
and
leave
add
pushf
jae
pop
mov
or
sbb
in
or
sbb
sub
cmp
dec
mov
jl
mov
lods
pop
mov
or
sbb
in
or
sbb
sub
cmp
dec
mov
jl
mov
aam
mov
or
sbb
in
aam
sbb
sub
cmp
dec
mov
jl
mov
lods
pop
mov
mov
adc
add
fcmovnb
xor
je
adcl
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
filds
mov
mov
ret
inc
dec
add
xor
and
push
inc
inc
push
jb
bound
addb
rol
ret
loop
mov
add
sbb
and
push
cs
jb
bound
addb
xor
fs
ret
fsubp
sbb
adc
outsb
xor
push
jb
push
add
shl
mov
mov
loop
xlat
imulb
jns
loope
addr16
pop
pop
inc
aaa
jmp
aad
mov
sub
add
push
fldl2e
data16
xchg
jbe
in
int
leave
push
xlat
inc
rcrl
ret
lahf
mov
and
adc
cmpsl
push
push
std
lahf
int
fsubl
push
iret
push
and
cli
mov
mov
in
popa
cmp
or
std
push
in
and
inc
lods
addr16
jg
dec
repnz
sub
mov
pop
int
and
mov
bound
mov
pop
sbbb
mov
repnz
ret
cmp
ja
sbb
xor
and
xlat
inc
inc
add
bound
mov
mov
xchg
repnz
repnz
nop
adc
and
xor
push
jb
push
sbb
xchg
shl
mov
mov
loope
andl
inc
inc
inc
cmp
sub
push
sbb
div
imul
sub
imul
push
and
push
pop
xor
sbb
ret
xlat
xchg
in
ret
loop
repnz
add
xor
and
push
inc
inc
push
jb
bound
addb
rol
ret
loop
repnz
add
xor
and
push
inc
inc
push
jb
bound
addb
dec
std
jo
mov
dec
sbb
mov
inc
mov
test
repz
scas
scas
sbb
cwtl
xchg
in
pop
out
pop
pusha
in
daa
inc
adc
jae
xchg
xlat
mov
dec
bnd
cwtl
mov
mov
mov
mov
or
popa
and
sub
mov
xlat
insb
cli
adc
les
cli
int3
xchg
outsb
inc
mov
movsl
and
inc
testb
jo
mov
mov
xchg
rorb
fs
lods
add
cmp
adc
add
dec
mov
xor
xor
add
inc
add
lcall
adc
cwtl
nop
ret
dec
xor
rolb
stos
aad
xor
xor
pop
aaa
addr16
imul
in
lea
ds
jmp
fisubrl
xor
inc
dec
sbb
inc
jge
pushf
ss
and
pop
mov
mov
mov
xchg
out
mov
xor
cmp
test
jnp
rcl
and
out
jnp
dec
push
test
test
mov
xchg
incb
or
fcoml
lods
loopne
mov
inc
out
insb
pop
cmp
les
sub
movsb
xchg
insl
scas
into
daa
dec
vmread
lcall
cli
sbb
xchg
sub
push
adc
dec
cmc
push
dec
mov
sub
out
jecxz
jb
jno
in
mov
lea
dec
pop
xor
xchg
mov
in
xor
and
mov
rcll
add
mov
jmp
out
pop
int3
pushf
mov
cmp
or
sbb
scas
pop
cld
cld
psubd
ljmp
cmpsl
sti
or
adc
xor
mov
stc
inc
fadds
mov
xorl
mov
mov
push
mov
add
mov
add
mov
enter
aas
cmp
into
inc
lret
ljmp
das
clc
jle
popa
inc
js
mov
div
push
or
decb
sub
idiv
aam
mov
pop
and
test
mov
xchg
adc
enter
sub
sub
sti
jno
xor
sub
aad
dec
sub
pop
aam
fcmovnu
pop
gs
popf
lret
rclb
or
sbb
es
and
push
push
movsl
cmc
mov
push
inc
xchg
int3
leave
mov
jle
cs
mov
test
push
mov
dec
and
dec
cmpsb
cmp
scas
mov
adc
add
nop
dec
pop
pop
call
fsubrl
sbb
dec
dec
sbb
inc
dec
xor
cmpsb
ret
sbb
mov
das
call
adc
or
je
movsb
scas
pandn
pusha
imull
add
push
add
jne
cs
je
int3
lds
pop
fisubl
fstps
lea
loop
movsb
or
in
ficoml
xorl
outsb
cmp
sub
inc
ret
jo
push
in
inc
je
into
dec
stos
dec
sarl
sub
inc
cltd
xor
xorb
and
jle
aad
inc
xor
lahf
jle
testb
push
adc
fwait
mov
pop
popf
or
or
aam
loope
sub
jne
or
inc
je
add
loopne
inc
mov
icebp
mulb
or
adc
test
stos
jbe
repz
icebp
cmp
jp
orb
lock
xor
dec
inc
aaa
sub
in
stos
push
aas
push
sahf
ja
enter
scas
test
jl
cmp
aad
or
mov
pop
mov
and
jnp
mov
or
mov
adc
adc
mov
lods
and
and
dec
jae
idivl
fdivl
loopne
ljmp
cmp
xchg
dec
insb
cli
push
jnp
sbb
fcomps
js
xor
jle
popa
cmp
aam
xchg
mov
mov
mov
dec
insb
ja
xor
mov
bound
in
out
addl
xor
cmp
xor
dec
and
cmp
mov
sbbl
dec
sbb
cmc
and
adc
sub
in
inc
dec
mov
xor
add
mov
xchg
nop
xor
mov
out
out
or
jmp
cs
stc
dec
divb
push
sbb
stos
cli
je
push
mov
add
lock
lahf
push
cmp
fnstenv
das
ja
out
pop
aas
aaa
jo
fcoms
add
daa
sbb
ds
addr16
xor
movsb
int
sbb
rcrl
and
ficoml
ds
repz
add
pop
pop
out
std
add
and
test
je
nop
cmc
add
cmp
cmpsl
addr16
mov
mov
adc
cmp
cmp
jnp
popa
adc
jno
rorl
aas
push
call
fwait
adc
mov
repz
lds
mov
lahf
adc
out
fisttpll
mov
xchg
push
xchg
outsb
adc
jp
mov
and
in
jns
push
pop
adcl
push
enter
cltd
jae
pop
cmp
mov
test
les
in
mov
cmpsb
or
outsb
push
data16
das
mov
dec
mov
dec
test
mov
adc
icebp
arpl
jbe
mov
movsb
pop
loope
push
popf
outsb
scas
sahf
mov
call
ja
inc
insb
repz
jl
sub
or
sti
xor
pusha
sub
aad
mov
xor
inc
lret
push
lods
push
add
daa
divl
jae
push
sub
mov
jecxz
push
or
fistpll
xchg
pop
mov
mov
jbe
rclb
and
xchg
or
scas
cli
arpl
push
cltd
imul
sub
out
cwtl
fwait
rclb
sti
xchg
and
and
out
ret
mov
jmp
mov
pop
int3
js
shll
ljmp
clc
leave
adc
lock
jno
in
in
out
call
sub
mov
mov
gs
movsl
idiv
pop
push
push
mov
or
lds
sub
popf
cmpb
pop
inc
push
jecxz
loopne
test
push
jae
xor
jne
adc
inc
fistpl
stc
cmp
jnp
add
stc
push
mov
ret
push
lods
mov
nop
lret
add
cmc
cmpsb
bound
inc
outsl
aam
lods
cwtl
mov
and
nop
push
push
ljmp
lcall
cs
mov
inc
das
or
add
pop
movsl
xchg
dec
add
adc
out
aad
and
or
mov
mov
jle
cltd
add
imul
mov
add
movsl
dec
add
outsl
ficoms
ds
mov
rcrl
popl
loopne
popa
js
stos
out
leave
sti
clc
icebp
cltd
mov
movsb
shlb
mov
adc
pushf
dec
cmp
scas
push
mov
xor
jp
xchg
pcmpgtb
and
inc
fs
out
cmpsb
scas
and
cld
jae
mov
lret
testl
cli
lds
add
xchg
negb
cmpsl
xor
xlat
push
or
adc
scas
movsb
stc
sub
aam
cmc
xchg
xor
push
sbb
inc
xor
mov
imull
scas
mov
mov
stos
adc
jge
aad
daa
into
loopne
mov
rcrb
movswl
mov
push
mov
mov
mov
cli
out
adc
inc
or
dec
stos
xlat
add
sbb
aam
mov
loopne
ss
jl
or
pop
popf
push
scas
xchg
inc
lahf
mov
mov
push
mov
mov
fists
out
sbb
loop
loopne
xchg
repnz
fmul
xchg
or
cmp
pop
xchg
mov
mov
inc
push
cld
push
dec
loopne
lods
and
out
int3
rorb
mov
cli
pop
jno
loope
in
xor
out
insb
lcall
pop
sbb
adc
jge
ror
ljmp
int3
mov
inc
lods
sbb
rcrb
daa
mov
outsb
aas
mov
or
xchg
call
jbe
lock
jp
jg
mov
add
mov
cltd
int
and
pusha
mov
push
sti
add
inc
mov
jmp
cmpsb
push
jne
and
in
mov
test
or
mov
adc
xor
hlt
mov
decb
lock
fs
jbe
imul
aad
push
jno
bound
mov
sarl
rclb
push
xchg
pop
sbb
mov
mov
in
mov
pushf
lds
jmp
jo
repnz
adc
fdivl
imul
es
cwtl
push
stos
insb
mov
jge
fcmove
out
adc
add
mov
push
sub
cmp
iret
pop
rcll
hlt
or
call
pushl
inc
inc
int
sub
and
xlat
cld
jle
mov
jae
cmp
ss
out
pop
dec
mov
pop
pop
inc
jle
cmp
and
outsl
rorl
jo,pt
cmp
jb
jne
bound
and
shll
fwait
inc
scas
xchg
mov
stc
nop
sub
loopne
sub
fists
inc
pushf
rolb
test
mov
pushl
or
sti
inc
lods
and
sub
xor
or
stos
mov
push
testl
inc
out
or
out
int
gs
mov
adc
sbb
dec
repz
into
add
inc
cli
add
iret
push
jge
add
jp
test
push
pop
imul
add
add
sbb
mov
int
push
int3
add
incb
scas
push
arpl
fildll
ret
sbb
or
ljmp
out
std
shll
aam
xchg
adc
cmc
mov
orl
dec
pop
push
mov
inc
pop
push
push
out
hlt
push
inc
xor
pushf
pushf
shrb
cmp
push
daa
add
sbb
mov
cmpsl
or
sub
sbb
shr
repnz
mov
rorl
mov
loope
xchg
push
sub
xchg
loopne
mov
cmp
das
push
rcr
or
pop
iret
sbbl
loope
sbb
pop
xchg
orb
insl
push
je
rcrb
mov
and
sti
gs
jo
shlb
pop
mov
sub
out
jb
out
mov
mov
rcll
or
out
jns
xchg
sub
add
test
jnp
mov
jns
jmp
in
xchg
pushf
aad
add
inc
mov
pop
fs
xchg
pop
ja
adc
mov
mov
cltd
roll
jnp
mov
mov
mov
adc
adc
in
sub
jb
call
fwait
sarb
dec
sbb
inc
mov
xchg
jae
sbb
mull
xchg
pop
sub
dec
fimuls
mov
mov
in
cmp
imul
sub
add
ret
mov
out
dec
xlat
push
jl
je
aaa
inc
gs
jb
dec
test
mov
inc
or
mov
fisubl
sahf
lds
mov
push
and
add
pop
mov
mov
lock
and
fisubl
inc
movsb
push
cli
aam
jbe
fwait
loope
push
aas
sub
mov
stos
adc
and
shrb
mov
pop
lret
mov
and
inc
push
out
mov
pusha
mov
sbb
lock
cld
pop
push
ja
mov
imul
test
cmp
call
imul
add
fsts
cmp
sub
sbb
dec
pop
mov
adc
sbb
aas
pop
test
int3
mov
jle
ljmp
lcall
mov
movsl
cld
pushf
subb
ljmp
sbb
mov
sahf
mov
sub
sbb
repz
cld
mov
jmp
std
inc
mov
rorb
mov
lcall
adc
out
test
xchg
inc
stos
and
sti
dec
add
leave
sub
out
rolb
mov
dec
xor
pushf
mov
add
push
fbld
iret
fimull
jmpw
call
dec
or
aam
enter
sbb
or
mov
pop
fistpl
push
cld
adc
jb
push
lock
nop
outsb
clc
pop
xor
or
xchg
movsl
sub
xchg
cmp
shlb
in
popf
cmp
sub
lock
fistl
mulb
mov
fnstcw
scas
jle
push
sub
xor
xor
mov
daa
add
cli
xchg
test
dec
push
add
cmp
ljmp
rcl
in
push
cld
test
jecxz
lea
ja
stos
orb
add
lahf
sbb
pop
js
data16
divb
ss
xor
pop
js
or
aaa
or
jmp
xor
xchg
xchg
cli
jo
cmp
popa
dec
fmuls
jmp
ret
xlat
inc
cmpsb
ret
cld
dec
mov
pop
cmc
lds
fisubl
or
movsb
movsl
inc
adcl
cmp
mov
call
gs
stos
push
jl
adc
ljmp
xor
stos
mov
push
sbb
int
inc
lock
dec
test
repz
pusha
hlt
loop
add
push
outsb
arpl
scas
xchg
pop
je
xor
js
ret
ss
mov
clc
mov
push
imul
xchg
jno
inc
sbb
lret
movsb
insb
mov
sbb
addr16
inc
push
inc
pop
into
sbb
in
mov
or
lea
mov
jmp
dec
pop
ljmp
daa
sbb
xchg
dec
push
movsl
iret
sub
mov
repnz
lock
sti
jae
mov
roll
jmp
fsubrp
test
aad
adc
jmp
lds
push
mov
fbld
ret
adc
mov
xor
xchg
call
popf
pop
or
dec
cmp
mov
mov
in
mov
cmp
lret
mov
ss
jne
dec
adc
mov
call
lock
cmpsl
adc
sahf
pop
cltd
push
fdivs
mov
xchg
xor
dec
dec
lods
popa
mov
mov
jecxz
out
mov
cmp
adc
out
clc
mov
mov
push
fsubs
mov
int
xchg
jg
jnp
outsb
push
addr16
cmc
jnp
mov
inc
insb
mov
xor
mov
cmp
xchg
mov
nop
out
adc
add
pop
mov
notl
lods
sti
dec
xor
xorl
lock
test
mov
out
pop
pop
mov
fidivrs
adc
mov
add
jmp
test
adc
sarl
mov
out
scas
jbe
or
dec
inc
lret
into
pop
lcall
push
movsl
or
ret
fisubrs
addr16
data16
mov
ja
mov
scas
push
jns
push
mov
and
lret
push
xor
jg
push
jo
push
movl
popa
sbb
aam
je
into
sbb
aas
or
loopne
pop
fsub
jl
leave
add
sub
shrb
push
stc
addb
imul
lods
das
mov
pop
fidivrl
adcb
and
das
rcrb
xor
je
lods
nop
mov
ret
push
jmp
outsl
inc
push
in
sbb
sub
sub
adc
aaa
cs
jno
xor
je
mov
jmp
fadds
cmc
mov
je
imul
mov
lret
idiv
mov
sub
push
adc
ljmp
mov
shl
pop
test
xor
iret
in
pop
std
lcall
mov
jbe
lcall
xchg
mov
mov
dec
mov
inc
pop
mov
fldl
dec
inc
sahf
push
setl
dec
xchg
and
movsl
dec
sahf
or
loope
lock
jmp
mov
ds
push
and
fdivrs
jbe
movsb
iret
mov
jp
arpl
adc
jb
cmpsb
fld1
movsl
inc
call
mov
es
pop
rorb
mov
pop
sub
aam
pop
jecxz
mov
pop
lcall
out
lret
sbb
ss
or
cld
les
sahf
sbb
sub
push
sets
sbb
das
dec
movsb
loop
jo
add
in
mov
xor
xor
pop
xchg
mov
mov
cltd
in
setp
ror
and
es
jb
imul
aam
mov
xor
dec
jp
xor
adcb
lret
jbe
or
rorl
sbb
xchg
mov
cmp
fistpl
xchg
mov
pop
out
std
sbb
pop
jl
les
les
ds
sub
test
ja
mov
jb
inc
sbb
imul
bsr
insb
mov
test
orl
inc
mov
jbe
testb
add
imul
imul
dec
in
ljmp
add
in
or
or
aaa
das
adc
loop
in
addr16
mov
add
cltd
sar
iret
mov
addr16
mov
lret
pop
push
and
push
or
xchg
rcll
pop
repnz
fstpl
repnz
insb
loopne
sbb
add
rcrl
in
pop
add
jecxz
cwtl
aas
aam
pusha
mov
or
rolb
pop
or
subb
jl
dec
push
xorb
and
icebp
repz
inc
mov
sbb
xchg
or
aam
stos
mov
xor
loope
inc
add
pop
mov
mov
shlb
out
rclb
push
xor
xlat
pusha
pop
aam
adc
adc
hlt
sub
lret
mov
pop
js
fisubs
push
mov
fisubl
push
push
sbb
push
and
js
cltd
mov
out
dec
call
mov
pushf
mov
jecxz
movsb
scas
shrl
cmp
jg
add
test
ret
push
or
xchg
dec
jecxz
imul
lock
shll
fildll
dec
clc
lds
mov
cmp
mov
and
and
jmp
shl
jnp
fstl
xchg
dec
ret
add
in
mov
test
sub
cmp
leave
sub
add
rcrb
mov
mov
inc
and
loope
mov
lea
dec
pop
int
mov
lds
jmp
movsb
jns
pop
xchg
xchg
sbb
mov
inc
aam
inc
in
out
pop
out
mov
xchg
mov
sub
cmp
sub
rol
sub
jp
jecxz
hlt
push
cwtl
das
test
mov
dec
lock
inc
adc
lahf
sbb
stos
cltd
or
fisubs
idiv
pop
fstpt
cli
lods
stc
jne
xchg
add
push
das
jl
jb
xor
rcll
fwait
sub
push
inc
jae
ficoms
dec
jno
jecxz
push
push
mov
rcl
push
stc
sbb
inc
lahf
cmp
xadd
and
fisttps
call
add
mov
lret
cmpsb
jnp
sbb
adc
stos
mov
imul
subb
ret
scas
stos
cmpxchg
push
mov
call
cmp
cmpsl
dec
cmc
sub
cltd
jmp
lock
gs
ljmp
rcll
movsl
sbb
cwtl
sbb
es
dec
sub
dec
dec
div
or
icebp
sbb
and
or
push
mov
cmpsb
in
mov
xchg
test
and
jge
push
aas
jb
es
outsb
out
ficoml
adcl
sub
sub
mov
mov
je
push
popf
jnp
test
adc
lods
icebp
and
or
das
fisubl
in
icebp
cmp
adc
inc
sbb
jno
bound
add
adc
jno
out
es
and
xor
mov
aam
sbb
mov
mov
loope
xchg
test
stos
pop
movsl
rorb
sbb
mov
add
in
xchg
dec
dec
cmp
inc
sub
push
leave
stos
lret
idivl
and
call
lods
ret
fisubl
rcll
insl
test
orb
std
sub
fsubl
fsubl
sub
add
xor
sbb
mov
mov
shl
loop
repnz
add
xor
and
push
inc
inc
push
jb
bound
addb
rol
ret
loop
repnz
add
xor
and
push
inc
inc
push
jb
bound
addb
rol
shl
loop
repnz
add
adc
and
xor
pop
push
jbe
push
jb
subb
rol
rcl
repnz
repnz
std
mov
and
popf
popf
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
