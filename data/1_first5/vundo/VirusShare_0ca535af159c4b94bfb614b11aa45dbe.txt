jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
ljmp
es
push
das
cbtw
lock
pop
add
or
push
add
add
jne
xchg
daa
add
add
add
add
dec
add
fadds
inc
add
add
and
daa
add
push
add
add
add
add
xor
add
add
add
fadds
jo
flds
leave
add
add
add
push
daa
add
rolb
icebp
add
add
add
add
push
add
add
add
add
add
mov
add
add
push
add
jle
daa
add
add
add
add
outsl
add
add
add
add
add
add
add
add
adc
adc
or
daa
add
add
add
add
add
in
mov
add
add
add
add
push
add
incl
scas
add
rolb
pop
add
adc
cmp
mov
add
add
add
add
sub
push
add
add
mov
add
dec
add
add
add
add
add
add
add
add
add
mov
daa
add
add
add
add
add
add
add
add
add
add
add
add
jne
xchg
fadds
daa
add
add
lret
add
add
add
add
add
add
dec
add
add
add
add
add
jp
dec
add
add
add
pop
add
add
mov
inc
add
add
add
add
add
add
add
sbb
mov
add
add
add
mov
in
rolb
add
or
add
add
add
add
add
add
sbb
daa
add
add
inc
add
add
add
lock
mov
daa
add
add
push
add
add
add
add
mov
sbb
mov
movsb
add
add
add
add
add
add
fadds
sub
jne
sbb
inc
add
daa
add
add
adc
sbb
in
daa
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
aad
dec
add
addb
add
add
add
add
cmp
daa
add
add
cmpsl
add
std
add
add
add
add
add
fadds
daa
add
es
add
dec
add
add
sbb
add
xchg
fadds
daa
add
add
inc
add
sub
add
pop
add
add
faddl
addl
add
add
add
push
add
or
rolb
add
mov
sbb
dec
add
pop
add
add
faddl
inc
add
adc
cmp
add
push
add
add
add
add
add
add
add
aad
std
add
add
add
xchg
add
lret
add
jo
or
add
add
add
add
addb
add
daa
add
add
add
dec
push
faddl
dec
add
add
add
sbb
pop
add
add
add
add
add
inc
add
add
in
add
add
add
lret
add
add
add
imul
push
add
xchg
pop
add
add
add
dec
add
add
push
add
add
add
add
jge
adc
dec
add
add
ljmp
add
add
add
add
xchg
add
add
add
add
add
dec
add
add
add
xchg
add
add
add
add
add
add
adc
add
or
adc
daa
add
mov
push
xor
out
std
addr16
cmp
icebp
adc
insl
shll
xchg
adc
push
loope
jmp
mov
pop
mov
mov
mov
pop
mov
sahf
repnz
ret
inc
mov
jno
xchg
and
sub
xor
and
mov
xchg
rorl
xchg
lahf
loop
out
mov
jnp
int3
dec
or
adc
lock
rclb
stos
dec
adc
and
add
or
sti
and
test
inc
js
pop
adc
pop
mov
clc
insl
cmp
pop
push
and
jnp
adc
mov
lret
stos
out
ja
in
nop
outsb
mov
jbe
inc
stc
pop
push
jmp
movsb
push
fbstp
add
xor
in
nop
add
sbb
push
and
repz
inc
testl
mov
lods
pop
push
filds
sub
xor
and
mov
jae
mov
dec
dec
xlat
test
rcrb
add
mov
iret
inc
lret
lock
aaa
mov
xchg
lcall
shrl
pop
mov
cmp
scas
pushf
push
in
insl
push
inc
rcl
idivl
cwtl
test
jge
lds
aaa
enter
lret
into
push
add
sub
lods
add
outsl
shrb
mov
psllq
sbb
or
xor
movsb
cs
fwait
dec
test
loopne
jmp
mov
std
add
dec
jle
pop
push
mov
shll
add
or
in
push
dec
iret
mov
sbb
cmp
ja
mov
hlt
mov
adcl
mov
call
in
dec
jo
subb
pop
xchg
jle
rolb
mov
xor
outsl
cmc
fildl
xor
shl
rol
cs
or
sahf
add
dec
mov
jb
pop
xor
xchg
nop
pusha
add
sub
into
aam
push
imul
fistl
cs
cli
ja
jns
fsubp
xchg
push
clc
pop
pop
js
es
dec
push
faddp
pop
xor
repnz
in
dec
inc
xor
imul
and
stos
loope
sub
pop
jmpw
stos
add
daa
jmp
mov
cli
inc
js
into
jmp
add
adc
fsubr
cltd
lcall
test
cli
test
jl
arpl
popa
xchg
adc
push
imul
inc
xchg
or
popa
sahf
xor
jne
sbb
pop
mov
and
ss
pop
push
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
jge
dec
adc
popa
add
sub
mov
or
icebp
mov
and
jge
dec
adc
sub
push
mov
int
frstor
shl
rorl
jge
dec
adc
sub
push
sbb
in
mov
sahf
ljmp
push
xor
and
cli
cmp
test
mov
add
movsl
movsl
call
aad
imul
out
fcomps
add
xor
jle
outsb
mov
xchg
lea
insl
cmp
daa
fs
ljmp
dec
mov
xchg
push
lea
or
and
imul
inc
mov
addr16
jecxz
adc
jg
sti
cmp
inc
xchg
pushf
ficomps
shrl
cmp
adc
dec
adc
mov
xor
fnstenv
shlb
call
lcall
add
inc
scas
jle
mov
out
test
xor
dec
adc
sub
push
sbb
or
icebp
mov
pusha
imul
popa
dec
add
push
dec
mov
test
test
mov
or
sub
popa
inc
xor
cmp
les
xchg
mov
lods
outsb
aas
jge
sub
or
mov
or
icebp
mov
and
jge
dec
adc
sub
push
sbb
or
icebp
mov
and
adc
lahf
pop
aam
pop
aaa
jg
iret
mov
cmp
push
mov
das
sarb
jo
cs
mov
and
cmp
pop
and
inc
dec
and
xchg
fwait
sbb
mov
xchg
aaa
divl
add
jbe
pop
rep
pop
mov
xchg
xorb
adc
repz
shrb
xchg
xor
jo
push
jle
mov
cwtl
and
mov
subb
pop
in
inc
sbb
pop
adc
cli
pop
mov
popf
popa
lds
cmpsl
pop
and
push
mov
ret
dec
out
test
jg
shlb
jecxz
inc
jl
jne
in
aad
mov
jmp
mov
popa
aas
scas
mov
movsl
sbb
int3
outsb
lods
push
popf
or
stos
push
testl
xchg
pop
mov
popa
hlt
mov
lods
lea
mov
sbb
jb
call
push
jl
dec
dec
incl
pop
xor
jne
push
bnd
cmp
js
or
cld
lret
xchg
xchg
sbb
das
dec
lret
jmp
push
shl
stos
clc
mov
pop
pmullw
mov
push
cmp
addr16
scas
lea
mov
enter
mov
jns
fucomi
pop
jb
into
out
cld
aam
jo
jl
jecxz
imul
sahf
setb
mov
ss
cmpl
cmp
mov
stc
sbb
dec
ja
push
movsb
pop
cmp
icebp
adc
jl
jge
add
stos
shlb
and
movsl
mov
int
addb
daa
dec
xchg
push
in
jmp
and
inc
and
mov
rcrl
imul
mov
jg
pop
loop
test
mov
xchg
movsl
inc
push
and
mov
adc
divl
xor
or
in
jb
movsb
insb
jmp
push
enter
xchg
add
add
in
pop
or
lock
mov
cmp
hlt
xor
jnp
and
or
mov
lahf
cltd
stc
dec
imul
or
clc
xchg
shlb
in
sub
push
mov
cmp
inc
cmc
in
arpl
arpl
addr16
jbe
jp
aas
dec
aad
scas
xchg
ja
sbb
stos
fucomi
and
loopne
ljmp
cmpb
pop
lea
add
movsl
addl
hlt
xchg
fsts
sbb
fisubrs
inc
adc
imul
xchg
mov
sub
or
push
jg
fwait
push
cs
ljmp
push
jl
push
adc
fsubl
mov
xor
xchg
pop
test
into
mov
jl
push
jnp
cli
and
or
xchg
add
push
pop
loopne
pop
les
out
jne
dec
movsl
call
bound
xchg
add
loope
ljmp
fbstp
dec
sbb
mov
push
mov
aas
or
int3
push
cmpb
lcall
sti
cltd
loope
js
mov
cmovl
data16
lahf
adc
pushf
imul
jle
ret
aam
icebp
jl
and
repz
sub
cmpsl
xchg
insb
mov
dec
push
jle
gs
out
call
cld
push
inc
dec
pop
shr
pop
and
fistpl
mov
sbb
xchg
push
xor
pusha
add
xor
jo
repz
pop
fidivs
dec
jmp
imul
in
add
ljmp
in
ret
sti
jns
dec
mov
es
lock
dec
cmpsb
xchg
popa
icebp
lret
stc
dec
cmpsl
sbbb
xor
leave
in
mov
mov
mov
ret
jp
sub
jg
xchg
lcall
out
mov
sbb
dec
dec
fs
ret
roll
cmp
out
addl
push
call
repz
push
shufps
les
stc
jmp
mov
xchg
lods
adc
mov
add
add
std
push
int
or
es
fiadds
lahf
cld
in
sub
and
outsb
pushf
cmpsl
jg
test
je
xor
notb
pop
repz
lods
dec
int3
add
sbb
mov
sub
movups
pop
pop
or
lods
sub
cli
sarl
mov
fdivrs
cltd
int3
xor
add
adc
sar
daa
fimuls
mov
jmp
das
dec
xor
jo
pop
leave
test
or
or
mov
and
xchg
xor
push
imul
jo
add
pop
xorb
or
scas
inc
iret
popf
jmp
mov
pop
mov
stos
add
cld
push
testb
mov
fstpl
mov
push
fs
push
mov
int
push
mov
adc
rorb
insl
lret
mov
call
out
or
call
push
test
dec
mov
or
nop
push
scas
cmp
push
icebp
fisttps
cmp
xchg
xchg
xchg
shll
shlb
sarb
es
lds
mov
pop
nop
push
test
cli
push
sub
pop
and
xchg
jp
repnz
xchg
dec
fwait
arpl
inc
cmovnp
sub
mov
xchg
sub
out
loop
pusha
mov
or
inc
inc
push
xchg
pushf
ljmp
or
imul
adc
and
daa
pop
or
cmp
mov
outsb
shrb
addr16
pop
inc
pop
cmp
cmp
add
lods
cmc
push
xstore-rng
cmpsl
les
loope
popf
or
sbb
sub
andl
mov
lods
pop
push
aam
ljmp
addr16
sarl
stos
enter
push
pop
pop
xchg
push
fsubl
mov
pop
xchg
adc
jle
mov
jae
mov
adc
and
and
jle
fistl
add
dec
push
repnz
cmp
loop
dec
sub
adc
pusha
hlt
outsl
and
mov
and
mov
stos
test
clc
loope
repz
mov
lock
jnp
sbb
lea
lcall
les
sbb
ja
adcl
jle
sbb
lret
aad
push
lahf
imul
pop
rcl
mov
or
loope
mov
in
into
add
ljmp
xor
xchg
sbb
fucomip
insl
subb
cmp
sub
mov
arpl
pushf
jae
cmp
daa
mov
jle
mov
jnp
sbb
push
ja
aas
push
mov
out
xlat
cld
sahf
adc
mov
xlat
lods
ljmp
xlat
gs
and
xchg
aaa
es
push
dec
adc
jp
dec
and
jp
mov
into
aad
rorl
sbb
ss
in
nop
and
lds
stc
mov
cs
adc
aad
ja
pusha
push
push
ss
movsb
jbe
cwtl
push
je
adc
dec
and
add
gs
xchg
sti
cltd
push
mov
or
push
inc
dec
sbb
cld
mov
jbe
inc
xor
dec
push
mov
fidivrs
idiv
push
ret
imul
fidivrs
sbbl
ficompl
jns
push
mov
lahf
jno
add
and
lds
repz
notl
mov
mov
add
pop
cmp
and
arpl
cmp
mov
push
addb
pop
dec
loopne
and
dec
mov
xor
test
pop
shrl
adc
leave
mov
dec
cltd
sbb
mov
mov
ret
mov
scas
out
sbb
orb
scas
add
fsubs
clc
xchg
ror
lcall
in
aas
shr
arpl
jl
stos
test
push
imul
mov
jge
ljmp
jp
in
adc
popa
imul
cmp
push
test
data16
push
push
hlt
dec
das
test
push
outsb
xchg
in
push
xchg
cmp
adc
dec
xlat
xchg
push
jae
test
enter
stc
mov
xor
fistpll
jbe
in
std
or
inc
xchg
daa
jp
pop
sub
jl
ja
cmp
fcoms
hlt
inc
pusha
sub
pop
mov
push
imull
std
popf
in
addb
xor
ss
push
push
mov
mov
push
pop
mov
sbb
rcrb
sbb
add
adc
scas
shrl
rcrl
stc
xchg
lret
mov
jae
xchg
jbe
cmp
ja
mov
mov
inc
xchg
push
xchg
ret
out
fcomps
and
out
lea
les
pop
sub
push
mov
cmovb
shll
push
dec
cmp
out
and
sbb
pop
lret
insl
and
adc
cwtl
popf
ret
fnstenv
jge
pusha
mov
hlt
jno
sti
out
push
imull
and
add
stos
push
xor
add
jle
scas
into
mov
dec
cmpsb
insl
negb
push
mov
push
or
cmpsl
loop
lcall
mov
movl
inc
dec
scas
pop
test
xor
fs
push
sti
or
divl
mov
gs
jnp
add
mov
test
fbld
push
lods
inc
xchg
repz
mov
xchg
jne
xchg
cmp
lds
xchg
icebp
push
dec
rclb
add
mov
into
adc
mov
je
mov
mov
adc
rcrl
into
xchg
pop
push
test
sbb
repnz
mov
pop
outsb
xchg
push
outsb
xchg
mov
mov
mov
xchg
negb
pushf
push
rcll
cmp
dec
stos
test
mov
ja
scas
pop
jecxz
rcrl
cmpsb
add
ss
cli
int
test
sbbb
repnz
xchg
sbb
push
push
mov
icebp
rolb
pop
jae
sub
and
push
mov
lcall
lods
mov
pushf
adc
pop
mov
mov
aad
iret
int
jge
jno
movsb
sub
mov
lret
xor
in
jge
jp
outsl
daa
lret
out
clc
ficompl
and
sbb
sbb
test
jae
lea
mov
testl
or
and
nop
xor
cmp
jecxz
pop
cmc
mov
addr16
jmp
and
jl
xchg
xor
cmp
cmpsb
aaa
adc
xor
in
mov
cmp
outsl
push
xor
test
mov
jno
xor
leave
ds
fadds
jge
xchg
ds
add
popf
push
loopne
add
sbb
mov
addr16
push
cmp
mov
lds
lcall
out
xchg
loop
cmp
data16
dec
aaa
aad
scas
pushf
ret
fsubl
enter
sbb
js
push
test
mov
inc
xor
cmp
adc
mov
lods
sbb
ficoms
loope
push
lock
inc
and
pusha
xor
test
loopne
cld
and
pop
pop
inc
andl
fdivrl
mov
js
js
jle
sub
out
repnz
test
aad
cmp
mov
or
add
mov
dec
push
adc
in
rcll
inc
cmpsl
jge
iret
push
adc
xlat
jnp
in
xor
stos
jno
mov
fbld
and
mov
sub
scas
lret
clc
mov
repnz
inc
ds
rolb
pop
ss
jo
fcomps
imul
aad
lods
push
or
fcmovne
cmpb
jge
dec
dec
jp
sub
push
inc
adc
and
jnp
jbe
pop
aaa
dec
insb
push
pmulhuw
imul
mov
mov
adc
jne
or
pop
cld
xchg
mov
pop
je
and
addr16
ss
nop
in
mov
jne
xchg
out
sbb
sbb
test
jle
in
jecxz
inc
adc
fistpl
adc
dec
dec
push
int
inc
lock
lret
fstpl
aam
inc
mov
aad
and
clc
push
mov
push
mov
imul
xchg
cmpsb
push
fwait
dec
xor
jp
xchg
mov
pop
bound
arpl
jae
lods
popf
lret
xchg
mov
mov
jmp
sbb
fmull
mov
scas
cmpsl
ficomps
mov
inc
and
orb
lods
fs
imul
pop
leave
loop
inc
pop
mov
xor
inc
call
jbe
movsl
xchg
mov
repz
mov
and
mov
mov
sub
adc
fs
and
lock
xor
xchg
and
mov
jns
pop
add
arpl
ret
push
jo
stos
xor
test
xchg
add
testb
cmp
or
and
or
enter
mov
pop
gs
mov
mov
pop
mov
shl
rcl
frstor
or
andl
cli
mov
je
int
and
pop
hlt
push
mov
push
pop
ss
adc
and
xor
test
xchg
test
jg
jge
insb
cld
aam
pop
cwtl
jne
jb
xor
pop
pop
in
in
xchg
ds
push
jne
adc
pop
lret
adc
lahf
and
xor
ret
lods
push
enter
xchg
and
xorl
jne
rorl
sbb
xchg
fstl
stos
mov
cld
mov
add
mov
mov
mov
in
jns
mov
lret
push
popf
dec
test
jge
loope
sub
jnp
pop
arpl
xor
pop
xchg
lcall
cmp
sub
jno
or
in
js
push
or
and
or
shr
pop
push
inc
xor
push
or
out
mov
xchg
lcall
imul
iret
inc
clc
aad
and
jmp
inc
inc
mov
lahf
or
xchg
sub
ja
mov
or
hlt
inc
xchg
xchg
adc
jl
shlb
push
lea
cmp
cmp
sbb
mov
sbb
ljmp
stc
js
insb
sti
dec
adc
je
mov
andl
xchg
or
loope
push
dec
dec
lahf
or
int3
sbb
lcall
es
mov
shll
test
stc
dec
leave
insw
sti
push
test
inc
and
out
sub
mov
cs
and
out
aam
rclb
mov
out
push
gs
jmp
insb
jle
and
fldcw
dec
inc
test
ja
mov
pop
adc
and
lcall
cmp
inc
outsl
xor
adcl
pop
sahf
sub
sbb
pop
in
int
dec
outsl
aam
add
dec
push
jmp
xchg
add
mov
scas
mov
push
roll
mov
dec
andl
mov
in
adc
xchg
pop
loop
incb
bound
mov
or
xorl
imul
dec
outsb
loopne
adc
ja
push
push
sbb
jns
ljmp
or
push
inc
lahf
jl
notb
ret
add
xchg
int
xchg
sahf
jmp
pop
mov
lods
mov
inc
cmp
cmpsl
sarb
inc
sbb
int3
movsl
jl
mov
xchg
gs
in
test
xor
cmp
push
mov
xchg
ss
shr
mov
popf
cltd
xchg
imul
mov
into
xchg
jne
mov
clc
xchg
mov
hlt
scas
xor
hlt
mov
pop
and
fstpl
cmpsb
sbbl
sbbb
mov
mov
clc
lret
and
ss
mov
mov
into
idivl
add
jecxz
mov
mov
lret
or
push
adc
jl
xchg
hlt
xlat
lods
mov
adc
fucomip
or
cld
jne
xor
sub
scas
mov
xchg
cwtl
inc
dec
pop
aas
xlat
insl
xor
ret
dec
xchg
or
cmpsb
dec
xor
pop
daa
fcmovnbe
push
inc
les
mov
push
rol
cs
negb
xchg
inc
inc
inc
dec
pushf
adc
lods
xchg
cmp
push
nop
add
add
in
jae
lock
dec
mov
es
and
mov
mov
fsts
pushf
mov
xchg
xchg
bswap
push
loope
stc
fsubl
sbb
sbb
lock
vpmulhuw
scas
xchg
out
add
add
xor
xlat
cs
ja
fcomps
js
adcl
outsl
filds
movsl
sti
pop
cmp
inc
mov
and
test
mov
inc
loopne
push
xor
sti
mov
enter
les
int
xchg
movsl
lods
fdivrs
and
sti
popf
aad
mov
xchg
jg
jne
bound
and
ja
sbb
f2xm1
paddusw
push
scas
or
mov
pop
xchg
fdivrl
xor
jae
jns
xor
adc
dec
ss
sub
loope
mov
add
bound
and
inc
mov
mov
test
jmp
xor
mov
add
daa
mov
mov
dec
push
xor
mov
mov
pop
xchg
xchg
repnz
xchg
push
cmp
adc
cmpl
out
fidivl
xlat
xchg
add
push
popf
and
inc
out
xor
xchg
out
mov
repz
adc
clc
sbb
cltd
mov
xchg
push
and
jb
inc
add
loop
mov
fnstcw
lock
data16
hlt
jb
mov
mov
jne
push
jge
lock
and
push
push
cmp
dec
arpl
sti
data16
pop
loopne
and
int3
sbb
mov
lods
mov
lahf
mov
and
cmpb
jno
mov
stc
frstor
fcoml
in
fs
push
or
rcrl
push
lcall
inc
pop
or
ja
sbb
jge
jp
fisubl
inc
into
ss
cmpsl
icebp
lahf
jle
test
in
xor
imul
mov
data16
fldl
daa
repz
adc
std
sub
aam
cld
pop
jbe
dec
mov
das
jae
mov
xor
pop
addr16
sbb
pop
push
iret
add
sub
sub
lret
cltd
gs
call
pop
jle
aad
mov
sbb
jg
xchg
ret
xor
test
cmp
sub
aad
add
lret
push
xor
rcrl
in
js
sarb
cmp
mov
sub
lds
push
ret
test
pop
cld
dec
test
outsl
insl
out
pop
or
cmp
mov
in
xchg
aam
aad
push
add
sbb
mov
in
outsb
jne
jecxz
mov
push
rolb
in
cmp
aam
sbb
insl
push
mov
das
iret
inc
imul
jne
sub
dec
jge
cmp
push
xchg
pop
mov
fidivrl
pusha
xor
sti
lahf
push
mov
mov
sti
or
xor
and
xchg
push
sbb
loopne
movsl
push
cmp
or
mov
pop
mov
cmp
push
gs
push
cmc
xchg
insb
inc
sbb
mov
sbb
cli
xlat
push
imull
out
mov
out
sti
es
xor
mov
mov
fnstenv
clc
in
movsb
mov
sub
inc
sahf
cmp
xchg
jae
lea
push
je
xor
add
stc
and
jae
adc
ret
fists
and
xchg
test
cmp
cwtl
mov
fldt
mov
int3
loope
popf
xchg
inc
test
sbb
mov
push
xchg
sbb
push
add
popf
cmpsl
inc
out
dec
daa
and
xchg
xor
nop
filds
ja
jl
pop
and
push
mov
push
xchg
cli
xchg
cmp
fwait
mov
jne
aas
push
lahf
push
std
fldenv
repnz
pop
out
cmpl
and
aad
sub
mov
mov
xchg
cmc
pop
fcompl
clc
xor
cwtl
movsl
dec
adc
in
into
in
jle
lds
dec
les
scas
cmpsb
and
cli
mov
cmp
mov
leave
jle
insb
dec
adc
pushf
pop
mov
gs
lret
cmp
jle
sub
sbb
add
into
out
data16
add
push
pop
sbb
dec
push
or
push
cmpsl
imul
es
or
cltd
cmp
ljmp
test
mov
dec
ljmp
ja
xchg
aad
scas
xchg
add
xor
mov
xchg
adc
sbb
sbb
inc
adc
cltd
movsb
nop
jmp
sbbb
in
outsb
ficoml
in
cmp
movsb
and
out
jle
inc
or
dec
push
jnp
jl
mov
enter
fwait
stc
fidivrl
dec
adc
sub
push
sbb
or
icebp
mov
and
jge
dec
adc
sub
push
sbb
or
icebp
mov
and
jge
dec
adc
sub
rcrl
or
icebp
mov
and
jge
dec
adc
sub
push
sbb
sub
xchg
stos
xchg
and
mov
aaa
pop
pop
dec
pop
and
pop
sbb
arpl
cmpsl
in
mov
xchg
xchg
mov
mov
imul
aaa
insb
pop
dec
pop
cmp
sub
sbb
or
mulb
push
xchg
mov
mov
gs
jne
inc
pop
push
pop
and
inc
sbb
cltd
out
mov
mov
xchg
out
mov
insb
inc
adc
sti
xor
shlb
pop
mov
and
enter
xchg
dec
sbbl
das
loope
pop
push
pop
call
in
dec
lds
sbb
xlat
and
sti
jl
movl
loope
lock
xor
adc
xorb
inc
out
les
cmp
lods
fdivrs
push
movl
hlt
scas
or
enter
fdivrl
push
fdivrl
negb
cmp
insb
addr16
mov
sbb
hlt
loop
mov
jnp
movsb
push
das
lods
mov
je
pushf
mov
shll
cmpsl
je
mov
rolb
pop
adc
jl
mov
xlat
mov
pop
pop
pop
sub
ss
inc
adc
mov
xchg
xchg
movsb
out
negl
or
cmp
push
pop
or
push
and
mov
in
fisubrs
mov
mov
inc
jmp
jge
pop
dec
inc
dec
add
jo
dec
push
loop
fistpl
mov
cwtl
in
mov
mov
cmp
arpl
ja
inc
or
cld
cmpsl
in
mov
xchg
xchg
mov
mov
jl
insb
aaa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
cmpsl
in
mov
xchg
xchg
mov
mov
jl
scas
and
mov
add
orl
inc
sahf
neg
sbb
jbe
inc
mov
add
lock
ja
cmp
mov
pop
in
push
sub
roll
dec
shlb
lods
mov
xchg
sbb
out
mov
inc
aaa
rolb
lods
pop
imul
in
ret
and
mov
xor
subl
jle
inc
nop
sti
add
out
in
lock
jne
idivl
iret
outsb
sbb
cs
xor
jno
push
xchg
or
adcl
enter
outsb
dec
pop
xchg
lea
nop
xor
pop
iret
xchg
jb
lea
clc
mov
std
dec
lret
mov
and
or
sub
cwtl
cmpsl
inc
inc
sub
xor
cmp
cltd
hlt
stos
lods
mov
ss
bound
jae
outsl
cmp
sub
lods
jb
bound
cmp
mov
loope
out
xchg
repz
sub
inc
xor
pusha
xchg
mov
mov
jno
imul
cmp
jmp
cld
sbb
push
xor
ja
loop
test
jle
mov
jns
cmp
and
push
mov
mov
cli
push
in
push
shlb
fbld
or
fidivs
xor
inc
aas
fsubrs
test
xor
jo
outsb
mov
add
and
dec
std
xlat
loopne
push
adc
outsl
and
mov
cld
into
add
mov
xor
pop
push
and
addr16
mov
std
push
mov
pop
jne
jg
inc
and
dec
data16
sahf
xchg
loop
mov
pop
cltd
push
fsubrl
pusha
mov
jae
mov
xlat
cli
pushf
dec
xor
fs
fs
inc
push
push
mov
fisubrs
daa
mov
lods
fstps
iret
int3
sub
mov
leave
xchg
add
aas
ja
cli
xchg
mov
jecxz
dec
mov
sub
jp
cmp
inc
dec
push
sub
mov
sbb
scas
mov
aas
les
stc
ljmp
mov
mov
mov
dec
test
movsb
lahf
or
nop
ljmp
mov
imul
test
jge
xchg
cmp
push
fistpl
jmp
pop
loop
push
mov
aam
hlt
xlat
lahf
lea
mov
test
mov
push
push
aad
shlb
pop
fmuls
sbb
or
cmc
inc
imul
scas
ret
sub
mov
aaa
data16
aaa
std
pop
stos
pop
sbb
aad
outsl
arpl
fildl
fiaddl
insl
imul
loope
fmull
lret
addr16
or
sub
sub
je,pt
lods
ljmp
in
imul
fsubl
inc
testb
int3
push
cmp
mov
leave
shrl
out
lds
cmpsb
call
xor
imul
gs
mov
inc
fsts
adc
fcmovnbe
roll
cmp
inc
pop
inc
dec
mov
ja
inc
xchg
mov
dec
or
push
mov
testl
aam
lods
and
fidivrl
repz
mov
sarl
fcomp
cmpsb
lahf
mov
inc
jecxz
int3
loop
xchg
fs
int3
mov
dec
ja
dec
adc
mov
jnp
adc
jae
fwait
movsl
test
pushf
outsl
mov
aam
pop
mov
dec
sub
sbb
movsb
scas
dec
sub
or
clc
push
cmp
mov
mov
pop
test
push
pop
js
ja
cld
or
loope
inc
notb
scas
mov
popa
cmpsl
xor
mov
outsb
pop
aam
lret
jge
pop
xor
xor
xor
decb
jbe
fildll
sub
mov
xchg
sub
adc
mov
je
mov
in
sarl
out
mov
stos
mov
cmpsl
mov
sub
cmp
adc
in
adc
cmp
roll
jg
arpl
addl
sbb
rcrl
sub
push
dec
jmp
cmc
add
cmp
sbb
ja
insl
adc
sbb
fucom
cmc
shl
fwait
sarl
and
loope
test
xor
pop
dec
mov
fisubrl
pop
loopne
inc
lahf
aad
jp
adcb
sbb
movsb
fnstcw
pop
dec
ja
mov
dec
test
jp
xor
sbb
lret
push
mov
mov
mov
fpatan
test
fsubl
je
xor
aaa
sahf
fisubrs
aam
dec
in
mov
push
dec
push
sbb
xlat
sub
mov
pop
jnp
mov
test
and
test
xor
icebp
aam
lds
nop
inc
cld
jg
mov
bound
jnp
mov
xor
push
or
scas
pop
ss
fadds
ljmp
jg
dec
mov
mov
scas
cmp
mov
cmp
fdivl
ret
inc
clc
sub
std
jl
mov
in
daa
or
mov
into
sub
cmp
xor
das
lea
pop
fwait
cmp
cmp
dec
ja
mov
xchg
test
adc
sbb
inc
ja
in
lret
and
xchg
sbb
and
imul
int3
daa
jge
fsubs
jo
test
ret
mov
hlt
sbb
xchg
sarb
xchg
sub
mov
sar
and
xor
cmp
sarb
dec
incb
mov
inc
xchg
sub
or
mulb
sti
rcll
out
inc
dec
and
adc
das
ss
inc
and
filds
add
test
jbe
mov
adc
xchg
or
je
add
fadds
shl
jmp
pop
push
fs
call
jbe
jecxz
inc
movsb
inc
cmp
xor
sbb
outsl
push
cmpsl
inc
ficompl
pop
cmp
cltd
jg
insl
pop
and
shr
jnp
fs
pop
pop
pop
mov
sbb
push
push
fsubrl
sub
add
addb
sti
cli
shlb
movsl
xor
push
mov
sub
das
rclb
loop
arpl
das
aam
sbb
or
xchg
mov
mov
mov
push
mov
and
mov
cli
sub
out
test
xor
mov
insb
mov
rorb
sub
sub
jle
or
sbb
sbb
xor
pushf
ljmp
cwtl
mov
sub
sub
dec
mov
push
inc
xor
mov
int3
dec
mov
sahf
lds
dec
xor
push
mov
sbb
adc
or
jg
jo
jle
xchg
adcb
mov
jnp
out
dec
and
test
mov
fidivrs
adc
sub
cmp
sub
outsl
mov
rcll
ja
push
xor
fnstenv
subl
imul
jge
js
imul
sub
hlt
add
loope
sbb
pushf
dec
fisubl
gs
leave
push
jb
mov
xorb
rcr
inc
dec
sbb
aad
or
adc
adc
js
cmp
fisubs
stos
fwait
and
out
mov
scas
pop
jb
in
mov
pop
xor
mov
mov
cmp
icebp
xor
shl
pushf
push
leave
inc
rorl
sbb
mov
mov
cmp
arpl
push
mov
xchg
ljmp
es
popf
mov
jbe
push
lahf
inc
mov
shlb
mov
fsubl
and
pop
sub
stos
pop
add
adc
sbb
jo
or
xor
movsl
and
shrb
inc
sbb
cmp
test
push
or
fldl
push
leave
xor
shlb
push
xchg
jp
push
addr16
inc
inc
movsb
push
sub
mov
repnz
push
std
mov
adc
aad
fwait
mov
gs
mov
or
mov
lods
inc
pop
loope
adc
out
hlt
sub
cwtl
and
loop
fs
imul
outsl
scas
rol
push
out
jbe
sbbb
lea
add
jb
aas
or
dec
outsb
mov
repnz
add
popa
or
aam
add
aad
mov
jne
in
cwtl
cs
js
js
push
adc
sti
ret
mov
cmp
xorl
ret
sub
xchg
addl
fstps
pop
nop
cli
shlb
faddl
shl
aam
ret
sbb
sub
loopne
pop
in
out
jno
cld
mov
add
inc
sub
jo
xchg
or
jno
or
mov
cwtl
call
rep
mov
adc
and
lods
addb
dec
inc
sub
ret
or
push
inc
lret
adc
sbb
mov
push
push
xchg
scas
push
adc
int3
mov
insb
add
adc
bound
mov
call
sar
data16
inc
lahf
dec
pop
into
xchg
cmp
test
pop
cmp
jg
mov
rcl
mov
xchg
mov
mov
or
jnp
xor
pushf
inc
test
mov
sub
enter
das
jp
shr
xchg
push
std
lret
push
mov
fwait
push
jp
and
rorl
mov
cmpsb
std
mov
enter
das
lret
jo
aam
mov
sahf
pop
scas
das
mov
stos
inc
and
addr16
inc
lahf
iret
push
into
out
and
jns
cld
mov
adc
sub
testl
mov
test
dec
push
sub
sbb
insl
je
xchg
jno
xchg
cli
or
jg
add
mov
add
clc
or
lea
sbb
leave
jno
lods
je
inc
addr16
pop
jae
int
testl
aas
stc
xlat
or
stos
fldenv
out
cmpsl
push
movsl
fdiv
or
aam
xor
xor
sbb
push
in
jne
inc
fwait
hlt
les
leave
dec
push
jnp
add
xchg
mov
fst
stos
xchg
roll
inc
mov
push
fsubrs
scas
fistl
sub
sbb
scas
or
sbb
and
push
push
in
ds
add
or
dec
xchg
push
sahf
fisubrl
adc
cmpsl
sahf
inc
lods
sbb
sub
sub
test
fsubs
and
mov
mov
js
cmc
push
std
int
out
mov
xchg
push
or
fstpl
mov
xchg
ds
repz
pop
dec
repz
stos
cmpsl
cmpsb
pushf
aas
mov
shrl
or
push
inc
cmpsl
jnp
cmpsb
or
call
cmp
fs
xor
mov
fld1
cld
sti
shrl
inc
fisttps
lcall
sahf
pop
daa
mov
cmpsb
pop
out
mov
adc
aaa
jg
push
outsl
rcll
lods
scas
push
repz
dec
jb
mov
jge
and
mov
push
xchg
xchg
stos
repnz
lods
pop
mov
stos
xchg
and
lock
lea
nop
push
inc
jnp
cmp
ds
std
pop
cltd
cmp
jl
mov
dec
xor
repnz
les
dec
mov
or
or
rdpmc
stos
pop
loope
loop
dec
outsl
xor
mov
arpl
imul
imul
in
lods
imul
sub
cmp
fmulp
pop
mov
mov
andb
jecxz
int
and
stc
fldcw
test
test
mov
and
mov
push
xor
shrl
or
xor
adc
sub
or
sahf
xor
adc
add
or
lret
imul
test
sbbb
pop
vucomisd
sub
dec
mov
mov
add
mov
enter
test
dec
push
fnsave
addr16
dec
push
sub
mov
enter
dec
mov
pop
sub
xchg
mov
dec
xchg
jns
subb
cmp
xchg
xchg
jecxz
sub
inc
adc
or
dec
repnz
loope
xchg
xorl
push
push
pusha
pop
cmp
push
or
pop
xchg
cmp
sbb
add
xor
outsl
lock
jle
and
jg
adc
pusha
mov
or
xchg
hlt
or
and
outsl
insl
push
divl
inc
bound
sbb
mov
shll
mov
out
push
mov
sbb
sbbl
lret
push
dec
lret
rcr
test
iret
add
mov
dec
jns
rcr
xor
mov
movsl
xlat
inc
xchg
push
add
std
push
push
fxch
aas
cld
jnp
xchg
xchg
push
xchg
inc
pop
xlat
jne
cmp
aas
fisubrl
push
mov
sbb
es
cld
mov
jg
xchg
and
mov
sbbb
push
lock
enter
ja
mov
cmp
mov
pop
imul
hlt
cmp
xor
repnz
insl
inc
dec
icebp
iret
ret
subl
mov
bound
pushf
fistps
out
jno
in
mov
inc
inc
pop
mov
shrl
adc
outsb
stc
xor
inc
lahf
and
push
add
mov
das
insl
sbb
out
mov
adc
movsb
ret
std
and
enter
or
jl
xchg
cltd
mov
pop
push
loope
mov
xor
iret
adc
imul
cmpsb
lods
or
fistpl
inc
pop
jecxz
cwtl
sbb
sti
mov
cmp
pop
sub
push
jne
pop
and
dec
inc
xor
data16
mov
push
pop
gs
icebp
daa
or
mov
mov
fbld
fadds
jmp
arpl
add
test
sbb
add
push
adc
mov
sub
pop
inc
adc
jmp
pop
push
sbb
test
add
jp,pn
gs
test
jb
push
es
lock
push
xor
rep
or
out
adc
jnp
pop
icebp
in
mov
and
cmpsb
js
pop
cmpl
xlat
imul
nop
jbe
push
lcall
out
push
and
or
push
xor
stos
adc
or
inc
inc
push
inc
mov
push
scas
xor
loope
xorb
jb
fidivs
lods
xlat
mov
pop
mov
xorl
push
bound
ficoml
cmp
inc
fldenv
test
inc
repz
dec
push
in
inc
fsubp
and
stc
cltd
pop
dec
loopne
ds
subb
int
mov
je
xchg
outsb
sub
ss
mov
bound
call
xchg
sbb
outsb
stos
jp,pt
inc
push
mov
mov
scas
icebp
rolb
push
arpl
fs
dec
cmpsb
mov
jns
out
jno
paddq
mov
dec
or
mov
mov
xor
mov
aaa
sbbb
lods
lret
adc
popa
push
mov
ss
add
mov
addr16
add
cmp
mov
lock
jl
cmp
jae
add
movsb
mov
movsb
and
loopne
lods
fsubl
push
adc
mov
push
xor
jo
in
pop
mov
and
xor
mov
clc
xchg
out
pop
jno
stc
jl
sub
insl
sbb
add
xlat
cltd
inc
dec
fldl
lcall
adc
xchg
push
push
mov
xlat
mov
lcall
xor
jmp
outsb
push
loope
jb
jmp
xlat
mov
xchg
loopne
iret
add
xorl
je
je
dec
mov
cmp
outsb
and
insb
push
adc
mov
out
lahf
lret
ja
idivl
inc
push
in
or
mov
mov
call
push
xchg
mov
rorl
xchg
adc
dec
xchg
push
mov
shll
push
in
sub
add
cmpsl
call
xor
pop
testb
jecxz
pop
dec
lea
add
test
ss
gs
jns
adc
test
mov
mov
cmc
lds
push
cmova
push
xor
or
leave
loopne
mov
and
into
jp
int3
cmp
pop
sub
bound
out
scas
pusha
shl
inc
cmpb
scas
sti
mov
and
loope
cmp
pop
sub
fs
push
maskmovq
notl
data16
xchg
fisubl
imul
les
cld
mov
cmp
je
testb
add
inc
cltd
dec
sub
lock
add
ret
inc
or
adc
inc
pop
dec
xor
adc
cmp
ss
jae
pop
outsb
fwait
sti
fiaddl
jo
cmp
cmp
fdiv
adc
jbe
std
push
mov
push
popa
into
pop
pop
pop
cmp
push
aam
mov
push
push
popf
xchg
jecxz
add
in
andb
int
iret
stc
and
cmp
enter
int
pop
push
mov
or
out
aaa
adc
pop
ss
push
jmp
push
xchg
les
push
fwait
cmpb
mov
or
lcall
jno
ljmp
les
xchg
fstl
adc
jp
movsb
cmp
inc
and
dec
xchg
cmp
iret
mov
fwait
xchg
daa
mov
mov
cmp
clc
scas
sub
mov
xor
cmp
icebp
outsl
xor
cmc
sbb
negb
popf
and
in
inc
jmp
push
dec
sti
fildll
cmpsb
out
cld
pop
pop
movsb
stos
repz
lcall
pop
xchg
push
inc
inc
push
fisubrs
cmpsb
jnp
lcall
dec
jbe
jmp
mov
insl
test
pop
andl
mov
lea
imul
in
imul
aaa
jmp
xor
add
inc
cmp
sub
in
jecxz
dec
loopne
rcll
jg
push
push
ljmp
cmpl
cs
cmp
add
jmp
mov
inc
outsl
mov
int
dec
aas
mov
fiadds
rorb
lcall
cwtl
cmp
jmp
sub
and
or
pop
mov
fsubrs
nop
mov
inc
setg
push
mov
and
lods
or
add
ljmp
pusha
rcrl
lret
jl
mov
or
adc
xor
repz
rclb
cmp
add
xchg
bound
xchg
pop
scas
jbe
lcall
enter
cmp
in
in
jl
cli
and
jg
and
rcr
add
mov
lahf
lds
out
shrl
xchg
pop
loop
nop
insl
gs
cmp
mov
pusha
jb
popa
into
es
inc
lods
stos
insb
mov
out
sar
fwait
adc
push
data16
cwtl
test
jl
mov
stos
push
jno
rcrl
andl
lcall
mov
or
in
ljmp
push
sti
insl
mov
jae
push
arpl
out
add
ret
mov
dec
cwtl
daa
xor
imul
add
pop
aas
fisttpl
push
ss
and
cmp
xchg
xor
xor
mov
adcl
inc
int
repz
mov
pushl
or
lret
js
ret
leave
outsl
aam
lods
call
fnstcw
push
jns
add
add
mov
xchg
out
daa
sub
ss
pop
push
loop
cmc
mov
sbb
js
imul
scas
pop
fs
aas
test
mov
outsl
mov
or
inc
inc
fisubrl
mov
mov
stc
stos
xor
and
cld
cld
xor
int3
loope
test
ljmp
mov
add
mov
jb
jmp
in
je
pop
jns
sti
cmc
adc
mov
sub
test
sub
in
push
inc
jmp
mov
ficomps
fiaddl
mov
shlb
push
mov
jle
imul
mov
cmpsb
icebp
imul
outsb
sub
jbe
xor
adc
sahf
pop
test
lahf
sub
mov
push
mov
jae
in
fsubl
sbb
ret
pop
out
add
jge
outsb
cmp
sbb
cmpb
out
push
pushf
cmp
add
movb
nop
pop
aad
fucom
xor
int
mov
mov
mov
cld
lods
push
pop
imul
mov
ss
pop
insb
dec
inc
jp
jl
jp
icebp
jnp
jmp
es
sahf
scas
push
sub
loop
lock
push
add
mov
sahf
outsl
ficompl
test
pushf
cmp
aaa
sub
das
stos
mov
in
aaa
mov
push
mov
mov
inc
cmp
xchg
iret
test
lahf
arpl
pop
add
pop
or
outsb
pop
sub
in
xlat
sarw
jo
test
dec
pop
cmp
sub
sbb
or
cld
cmpsl
in
mov
xchg
xchg
mov
mov
jl
insb
aaa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
cmpsl
in
mov
xchg
xchg
mov
mov
jl
insb
aaa
pop
pop
dec
push
cmp
sub
sbb
or
cld
cmpsl
in
mov
xchg
xchg
mov
mov
aaa
push
dec
adc
sub
pushf
mov
jbe
int3
loopne
outsl
and
arpl
jae
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
cmpsl
mov
stos
mov
pop
push
daa
push
aaa
jle
outsb
rcrb
dec
ja
xchg
mov
out
xlat
fsubp
into
idivl
pop
ja,pn
daa
push
aaa
jle
outsl
push
pop
and
scas
xchg
sahf
cmpsl
mov
fsubp
into
idivl
scas
or
aaa
jle
sbb
ja
xchg
enter
out
add
repz
or
mov
or
popa
shll
inc
out
sub
loope
mov
out
mov
mov
or
pop
es
ffreep
test
push
fldt
cmpsl
xchg
sbb
out
lret
in
fstpl
mov
adc
xchg
or
fsubl
addr16
sub
and
add
into
ret
inc
je
sti
es
xchg
fadds
stos
mov
adc
movsb
shll
mov
pop
jp
ficoms
jns
imul
aaa
fs
jbe
xchg
mov
out
xlat
fsubp
into
idivl
pop
cs
push
daa
push
aaa
jle
outsb
push
pop
addr16
push
fucomi
int
fmul
enter
adc
dec
bound
insl
dec
dec
jno
es
and
gs
std
cmpsl
iret
lds
nop
mov
dec
jg
bound
push
pop
mov
cmp
add
fxch
scas
fmul
jmp
mov
out
idivl
pop
cs
push
daa
push
aaa
jle
outsb
push
pop
addr16
ja
xchg
mov
out
xlat
fsubp
into
idivl
pop
cs
push
daa
push
aaa
jle
outsb
push
pop
addr16
ja
xchg
fiadds
adc
out
cmp
adc
pop
ret
dec
and
sti
sub
outsl
adc
sbb
loope
lea
jmp
addr16
push
in
pop
roll
loopne
and
xor
jnp
dec
call
stos
cmpsl
or
sar
cmp
test
aaa
sub
push
jp
sbb
sub
inc
fs
scas
daa
pop
jmp
mov
loope
or
aas
aam
ds
cmpsl
sub
or
fcoms
fcoml
adc
jae,pn
mov
mov
mov
leave
js
lods
dec
jne
inc
xchg
push
scas
xor
ja
aas
pop
mov
fcompl
dec
leave
push
or
stc
lods
cmpsl
gs
sub
dec
scas
sbbl
js
lahf
xor
and
in
xchg
repnz
popa
sub
pop
leave
mov
rcrl
push
jg
mov
sub
sub
xor
inc
xchg
es
lret
mov
je
push
sub
add
xor
xchg
js
and
fdivs
pop
xchg
xchg
daa
sbb
nop
sub
inc
xchg
testb
popf
inc
and
imul
jb
loopne
rcl
cmpsl
sbb
inc
shr
mov
sbb
xchg
insb
sbb
in
jbe
int3
xor
xlat
mov
xchg
pop
jb
int3
xor
lcall
lret
jo
les
mov
xchg
enter
lahf
mov
cmp
push
xchg
loope
push
ljmp
inc
xchg
cmp
int3
popf
fisttpll
dec
insb
or
mov
or
inc
cs
cld
rolb
cmp
cli
lret
mov
xor
cmp
xor
xchg
adc
dec
and
test
test
dec
addr16
and
cmc
sbb
add
add
and
fdivrl
push
cmp
int3
push
jle
add
mov
es
pusha
pop
icebp
and
nop
mov
fcomip
cmp
into
mov
pop
fadd
pop
xor
dec
cmp
repz
or
aam
fisttpll
daa
sbb
push
hlt
addr16
sbb
fs
or
les
cld
mulb
mov
add
int
jnp
js
dec
pop
xchg
add
or
add
cmc
mov
lods
pop
add
mov
out
mov
ret
shll
shlb
insl
add
fdivs
dec
outsl
pop
enter
mul
rcrb
aas
test
mov
in
movsb
cmp
cmpsl
bound
leave
mov
adc
sub
pusha
into
add
jns
and
lcall
pop
gs
cs
popf
fiaddl
push
pop
into
mov
filds
and
out
push
xor
lock
int3
and
jnp
jg
daa
mov
shr
sub
inc
mov
cmp
rcr
jae
jae
xor
lret
aas
cmp
jo
pop
inc
fsubs
adc
shlb
inc
jl
outsl
dec
add
pop
sahf
test
and
sbb
insb
adc
xor
and
rcrb
out
mov
mov
bound
fwait
insb
cmp
mov
faddl
daa
sbb
jmp
jb
mov
xchg
push
clc
sub
mov
mov
das
pop
xchg
sbb
pop
ljmp
ss
add
ljmp
cmp
push
xchg
mov
pop
fsts
push
pop
scas
xchg
enter
movsb
popa
mov
out
sub
sub
pop
and
fdiv
mov
adc
out
addb
adc
push
inc
xchg
icebp
lock
lods
pop
push
lock
jns
xchg
mov
out
aam
mov
stos
sub
mov
jp
mov
xchg
push
xchg
adc
dec
mov
fisttpll
iret
clc
pop
addb
pop
sahf
sbb
insl
push
lret
push
lret
movsb
lods
sbb
ja
enter
push
push
sub
insl
mov
inc
iret
ss
aas
or
push
imul
lds
rep
loope
in
aaa
sti
pop
dec
dec
ja
fwait
popa
sub
pop
fisubrl
ret
mov
lds
xor
dec
out
inc
repnz
xchg
test
ja
pop
xlat
call
loopne
stos
jne
lret
ror
imul
inc
mov
ret
scas
shl
arpl
loope,pn
or
imul
outsl
adc
and
mov
dec
cmp
xchg
pop
fstp
adc
lea
add
dec
sub
popf
fistl
dec
std
jae
or
xlat
adc
mov
dec
addr16
jbe
mov
out
xchg
int
and
mov
shl
lea
dec
movsl
aam
lods
fs
stos
test
push
pop
xor
fadd
push
xor
pop
daa
xlat
push
pop
xchg
lods
sahf
push
sahf
mov
test
loope
fwait
test
cmpsb
inc
sub
pop
lods
mov
mov
mov
pop
shr
jmp
xchg
subl
push
lret
adc
dec
xchg
into
movsl
add
mov
aam
xchg
xor
inc
sti
lret
lahf
dec
jmp
ret
jb
hlt
jae
sarl
movsl
dec
scas
insl
adc
adc
xlat
fs
dec
ljmp
cmp
push
xor
out
xor
shlb
mov
jae
out
push
lods
sbb
cmp
insl
sbb
sahf
mov
pop
inc
rclb
stos
pop
mov
xchg
jae
push
mov
fistl
nop
mov
ja
in
cltd
mov
xor
and
incb
cld
popf
adc
and
outsl
xlat
dec
outsl
push
stc
cltd
cmpsb
fbld
xor
shl
xchg
jmp
clc
in
sbb
out
mov
jns
sbb
pop
roll
inc
mov
jnp
pop
orb
cmp
aas
xchg
mov
xchg
lods
repz
sbb
jle
push
fwait
cmp
push
cld
mov
adc
mov
fcmovb
mov
ficoml
je
adc
dec
push
pcmpgtd
out
mov
insl
pusha
ja
fldenv
fs
adc
sbb
int
inc
mov
rcll
inc
dec
into
xchg
test
lock
cmc
shl
movsb
aam
testb
push
enter
sbb
sub
in
inc
enter
iret
push
sbb
mov
daa
dec
sbb
pop
outsl
sbb
pop
jp
jb
mov
daa
or
jnp
js
mov
call
fistps
adc
mov
xchg
jp
sbb
outsb
rorb
cmp
test
call
sub
dec
inc
inc
jo
loopne
arpl
xchg
pop
int3
sbb
add
ret
std
in
aam
xor
add
cmpsb
jae
jmp
mov
les
jle
outsl
flds
sbb
push
mov
addr16
cmp
loope
ljmp
mov
ds
orl
clc
inc
pop
mov
mov
repz
xchg
mov
sub
xlat
or
addl
jp
and
iret
dec
jns
mov
lcall
clc
testl
addb
in
mov
lahf
cmpsl
jl
es
enter
jae
das
inc
ds
rorb
mov
adc
sbbb
aas
bswap
jbe
pusha
sub
mov
add
insb
xchg
arpl
shll
xchg
push
xor
outsl
aam
ret
mov
lock
mov
leave
inc
mov
xchg
jl
add
and
and
ret
sub
adc
jg
dec
cmp
cld
insl
push
bound
gs
shll
aas
out
lods
adcb
xchg
sbb
ret
adc
jo
je
xor
mov
aad
lcall
iret
sar
and
mov
mov
push
insb
pushf
mov
jnp
xor
jns
repnz
lret
cwtl
pusha
mov
lcall
ja
or
lea
loop
or
ror
mov
push
mov
adc
jecxz
jle
pop
fisubrl
rorl
shrl
mov
es
mov
sbb
outsb
add
adc
adc
push
lods
inc
push
inc
inc
scas
stos
ret
inc
inc
inc
xor
mov
pop
rolb
push
dec
scas
pop
cmpl
mov
inc
pushf
ja
rcll
aaa
xchg
daa
add
mov
fcompl
nop
inc
dec
cmp
sub
vpunpcklwd
stc
addr16
jl
adc
jno,pn
jb
jae
dec
mov
dec
mov
fbstp
lret
stc
add
pop
push
call
mov
movsl
loopne
push
xchg
fs
lock
je
mov
cmp
ret
push
push
aad
inc
add
push
mov
popf
outsb
aam
and
es
sbb
jnp
mov
add
ficompl
loope
adc
cmc
fcoml
mov
xchg
cmp
push
mov
cmp
mov
xor
xchg
mov
dec
icebp
daa
inc
mov
addr16
or
sbb
loope
out
imul
and
sbb
orl
and
xor
repnz
outsb
subb
and
cli
arpl
xchg
fisubs
pop
sbb
push
cwtl
aad
push
push
push
mov
test
adc
mov
jb
and
cmp
jae
jmp
filds
out
out
jb
cli
and
xor
lock
inc
leave
fucomi
out
pop
adc
out
jl
js
and
movsb
jb
dec
ss
mov
mov
pop
mov
mov
jge
aam
lret
xchg
out
sub
push
and
call
movsl
cmpsl
pop
cmp
mov
sbb
sbb
push
repz
ss
adc
shrb
int
xchg
cmpl
call
jb
scas
outsb
test
adc
lahf
or
negl
in
mov
and
dec
test
stos
dec
lret
popa
dec
pusha
jle
xchg
mov
inc
shll
pop
das
push
scas
and
jb
call
cltd
jo
adcl
mov
jle
loop
push
push
addr16
ret
shld
inc
sahf
xor
test
sbb
mov
dec
pop
jne
es
cli
xchg
lods
enter
xchg
loop
js
jp
int3
div
iret
inc
movsb
lcall
xchg
push
mov
push
sti
fcompl
ret
int3
xchg
mov
cmp
sti
or
dec
jae
fldenv
aad
test
pop
je
cmp
dec
outsl
and
sarb
mov
outsl
sub
pop
lock
lock
enter
xor
lds
mov
ret
nop
cmp
ss
rcrb
into
push
xor
xchg
jecxz
call
inc
pop
jle
out
mov
addr16
cs
push
mov
ficoml
jge
jo
jl
push
call
decb
fsubs
mov
inc
lret
and
jp
pop
inc
sub
adcb
loop
mov
mov
daa
gs
inc
imul
in
sbb
ficompl
or
adc
dec
adc
rcll
cmc
nop
add
jmp
sbb
xor
mov
mov
int
popf
test
idivb
dec
xlat
lods
scas
test
mov
out
and
pop
test
clc
cmp
shll
xor
adc
xchg
shll
dec
je
out
mov
icebp
jmp
push
sbb
fmul
aad
sbb
mov
je
or
fdivl
xor
pop
ror
sti
movsl
dec
pop
shrl
enter
dec
or
fs
jecxz
mov
enter
mov
push
mov
call
into
inc
insl
jge
cmpl
push
mov
outsl
imul
sbb
mov
xor
out
inc
xchg
cmp
lahf
inc
mov
mov
cmp
and
loopne
push
xchg
jg
lret
fistl
or
sbb
in
pop
sub
inc
pushf
rorl
out
mov
xor
int3
push
add
gs
cmpl
cmp
add
iret
pop
add
mov
push
jl
dec
mov
mov
rcrb
cmp
push
xlat
push
xchg
out
dec
enter
add
mov
push
mov
and
push
dec
outsb
mov
mov
aas
add
psubsw
cs
inc
jns
jne
add
sbbl
fs
push
jo
clc
call
push
xor
sahf
gs
mov
movsl
mov
xor
push
xchg
scas
push
cmp
test
dec
jae
add
add
scas
add
mov
movsb
fs
mov
outsb
push
clc
fimuls
push
pop
loopne
jno
mov
mov
adc
mov
stc
pop
sarl
test
iret
ds
incl
pop
lods
lods
and
inc
jg
jge
jns
xchg
insb
pushf
add
inc
pop
sahf
sbb
inc
add
push
lods
push
in
movsb
stos
scas
sub
adc
fwait
sbb
mov
and
addr16
sub
jne
adc
movsb
xor
sub
test
sbb
pop
in
push
cltd
icebp
inc
inc
daa
addb
enter
dec
lock
xor
daa
jl
pop
and
push
out
adc
hlt
mov
cli
adc
mov
pop
sahf
fsubr
fildl
add
fnstcw
sti
loop
inc
dec
stc
dec
in
dec
cmpsb
or
jns
sub
xor
adc
push
test
movsb
stc
jl
xchg
mov
mov
inc
sub
xchg
dec
dec
mov
dec
adc
xor
sbb
dec
std
mov
out
dec
xchg
iret
lsl
mov
in
mov
mov
and
cmp
imul
mov
pop
in
push
pushf
adc
mov
dec
mov
jl
cmp
adc
jmp
fs
mov
push
dec
shll
adc
cmp
add
xchg
push
loop
jb
leave
lea
xorb
movsl
xor
add
sub
mov
mov
stos
or
xchg
jbe
jnp
out
adc
pushf
lcall
xor
and
pusha
cmp
jmp
sbbb
push
nop
ficoml
mov
iret
orl
loopne
mov
push
add
mov
jns
jns
pop
xorps
push
add
adc
mov
test
jecxz
ss
jl
mov
xchg
iret
adc
leave
jae
ljmp
fdivs
mov
inc
mov
les
outsl
mov
popa
xchg
sbb
test
mov
cmp
mov
pop
aad
lea
mov
dec
dec
call
iret
cmpsl
jle
cmpsl
push
scas
and
aam
mov
mov
ss
cld
mov
push
adc
or
push
jns
lock
dec
inc
xchg
repnz
or
lds
cli
outsl
outsb
fidivrs
adc
mov
scas
faddl
pop
pop
mov
cmp
int
ret
mov
jb
fs
je
aad
jbe
movsl
clc
out
sub
sbb
mov
jp
dec
pushf
enterw
adc
dec
lcall
mov
shlb
cmp
test
adc
cmp
mov
mov
xchg
mov
fnsave
push
and
or
repz
cmp
movsl
mov
outsb
insl
or
pop
mov
jmp
lds
sub
dec
iret
or
insl
xchg
add
push
clc
inc
fmuls
jp
pop
call
sbb
loopne
adc
xchg
push
mov
ss
call
cmp
jge
xor
fwait
jae
adc
scas
mov
in
jmp
fimuls
pop
fiaddl
dec
popf
dec
scas
inc
xchg
test
rorb
data16
mulb
popf
rcrb
leave
cli
in
mov
xor
sahf
pushl
xor
push
scas
or
xchg
js
mov
shrl
inc
mov
sub
shll
adc
pop
jg
imul
repz
pop
mov
xor
repnz
or
in
cwtl
dec
jno
xor
insl
cltd
or
fdivp
xor
mov
dec
and
in
adc
push
mov
arpl
push
push
fbld
lret
sbb
sub
icebp
adc
out
ja
fstps
lods
mov
dec
shl
mov
xchg
ds
mov
and
out
pop
sbb
sti
repz
fstpt
imul
addr16
xor
into
cmp
addl
and
iret
pop
mov
decb
imul
dec
xchg
dec
shll
in
in
or
and
repz
sub
mov
ds
mov
mov
mov
jg
fwait
pusha
bnd
fidivrl
enter
js
cmp
sub
mov
lcall
movq
push
pop
or
imul
cld
jo
in
jo
push
and
jg
test
les
push
pop
aam
into
sahf
scas
add
sahf
insl
xchg
test
movsl
adc
insl
icebp
xchg
push
in
cmc
dec
fadds
add
cmpb
icebp
stos
jmp
mov
popf
cmpsl
ror
lods
sbb
inc
clc
xchg
shlb
sub
lret
dec
sbb
mov
nop
or
insl
shlb
popf
inc
pushf
mov
das
iret
sub
sub
sub
jl
stc
pop
xlat
sahf
jl
loopne
cmc
or
sbb
inc
jmp
ljmp
cmp
daa
aas
cli
rcl
flds
mov
cmc
test
adc
fisttpl
roll
stos
in
jo
mov
into
xchg
dec
jp
iret
add
push
push
rcll
lods
mov
addb
fcmovnu
xor
push
cmp
fsubrs
lds
adc
in
or
and
inc
mov
orl
in
jb
or
fmul
sbb
xchg
xchg
std
mov
sti
mov
pop
xchg
pop
cmp
mov
dec
sub
jmp
mov
mov
jge
xchg
mov
jns
int
push
sub
adc
sbb
push
cld
in
mov
mov
repz
cli
xchg
lods
inc
loopne
loop
imul
dec
xchg
cmpb
mov
rolb
pop
popa
repz
pop
je
outsl
out
addr16
bswap
mov
fmul
mov
adc
ljmp
cld
and
leave
mov
fst
test
dec
xor
jle
fdivr
inc
pop
xor
sbb
or
jmp
nop
jg
loope
jno
imul
dec
jmp
jnp
adc
std
call
test
add
inc
clc
or
add
mov
pushf
jl
fs
or
adc
and
rorb
jae
jae
xor
es
in
stos
fs
dec
xlat
mov
das
push
mov
sbb
jmp
sub
push
daa
repz
je
sbb
cli
scas
pop
call
bound
fcoml
push
add
mov
jge
pop
and
aas
or
xor
stos
std
popa
int
shrl
jl
cmp
pop
aam
sub
mov
test
divps
mov
mov
popa
jae
sbb
imull
xchg
xchg
mov
sbb
mov
xchg
xor
cltd
stos
imul
fisubl
movsb
fwait
imul
jae
mov
es
mov
call
nop
out
std
stos
jne
mov
xor
inc
daa
out
enter
xor
dec
es
ljmp
jns
cmpsl
stc
mov
xchg
lods
xor
xorl
scas
sbb
cmp
fildl
pop
dec
dec
lock
add
shll
inc
mov
and
icebp
cli
lret
shl
cwtl
lea
mov
in
push
jb
pop
mov
call
arpl
cmc
or
mov
dec
sbb
sbb
in
cmpsl
dec
sarl
scas
loopne
popf
movsb
clc
aam
ja
pop
cmp
dec
sbb
repnz
xchg
sub
popf
out
out
jge
cli
dec
sub
mov
in
orl
mov
out
lock
or
fsubrp
xor
popf
or
sti
cltd
pop
stc
inc
adc
push
xchg
xchg
mov
inc
negl
sbb
mov
pop
stc
inc
js
dec
add
push
jnp
jns
scas
or
inc
gs
pop
push
add
popf
or
out
test
sbb
mov
mov
ret
push
pop
pop
addr16
cmp
loope
in
ljmp
pop
sub
popa
add
cld
or
dec
push
jne
adc
add
inc
jns
sti
cli
mov
push
lret
in
fidivs
dec
mov
daa
cli
out
and
inc
stos
inc
jbe
int
and
inc
mov
adc
test
mov
mov
xchg
xchg
stos
push
mov
out
xlat
fsubp
into
idivl
pop
cs
push
daa
push
aaa
jle
outsb
push
pop
addr16
ja
xchg
mov
out
xlat
fsubp
into
idivl
pop
cs
push
daa
push
aaa
jle
outsb
push
pop
addr16
ja
xchg
mov
out
push
fsubp
into
idivl
xchg
pop
push
daa
getsec
jle
outsb
push
pop
addr16
ja
xchg
mov
out
xlat
pop
out
test
daa
push
inc
or
out
cmpsb
cwtl
mov
inc
add
in
icebp
fucom
int
pushf
mov
lea
inc
popa
jo
popa
dec
adc
and
lock
int
mov
mov
insl
adc
dec
adc
std
xor
shr
vpaddq
test
push
adc
add
jb
push
or
mov
push
mov
dec
shl
inc
out
pop
xor
sbb
loope
push
test
mov
push
cmp
aam
and
mov
dec
in
mov
flds
add
push
addb
cmp
aam
push
clc
adc
scas
sub
fs
rcr
or
insl
push
lds
xchg
jo
mov
and
ds
and
sub
mov
mov
insl
and
popa
dec
inc
push
imul
jnp
fs
jno
dec
dec
dec
cmpsl
add
jns
dec
in
pop
outsb
add
loop
sbb
icebp
int
xlat
xchg
mov
mov
jne
inc
popa
push
adc
and
cwtl
test
popf
fsubrl
ret
div
loopne
adc
adc
gs
dec
jle
sbb
sub
lods
test
lahf
mov
fabs
add
or
sub
pop
dec
jb
popa
jno
push
xchg
mov
subl
jno
popa
dec
adc
and
icebp
fucom
int
mov
mov
insl
jno
popa
dec
adc
and
jl
mov
loop
mov
bnd
shr
mov
and
push
fst
xchg
pop
sbb
xor
ror
test
xchg
mov
mov
test
jmp
sahf
xorb
movsb
bnd
sub
lea
rolb
jl
aaa
dec
mov
dec
loop
lea
stos
hlt
shrl
hlt
mov
jo
cmpsb
pusha
push
push
ljmp
hlt
mov
or
push
stc
testb
sub
or
in
sub
dec
xorb
pop
ds
and
cmpl
mov
push
cmpsb
mov
adc
push
out
sbbl
fnstsw
mov
clc
cmp
push
test
in
into
add
xchg
je
mov
mov
outsb
jmp
cmp
das
cmp
push
or
mov
shlb
cmp
dec
cmp
sar
dec
nop
movsb
outsb
pop
sbb
aam
add
into
inc
ljmp
fs
cmp
mov
stos
adc
mov
pop
adc
adc
mov
aam
mov
push
push
loop
sarl
xor
lcall
lcall
std
mov
pusha
mov
loope
or
sti
stc
in
outsb
mov
sub
loop
divl
cmpb
rol
jecxz
icebp
scas
inc
and
dec
iret
inc
adc
ss
testl
adc
stos
stos
in
mov
xchg
fldenv
lret
xchg
les
push
mul
mov
inc
xchg
inc
mulb
jmp
testl
mov
cs
ficoml
add
pop
xchg
shrb
push
and
sti
out
push
aaa
push
jno
mov
outsl
inc
xchg
pop
shlb
test
iret
inc
cld
cwtl
sub
mov
imul
and
insb
mov
jecxz
push
dec
lods
push
jns
nop
cmc
sub
jae
mov
add
jl
cmpsb
xchg
sbbl
push
mov
std
sub
js
jge
lods
pop
mov
and
xchg
push
xchg
lods
popa
dec
imul
cmc
xchg
inc
xor
loopne
jecxz
adc
mov
std
push
mov
or
mov
push
and
jo
call
jbe
inc
pusha
test
ret
jge
push
lock
mov
call
mov
loop
add
test
xchg
add
xchg
or
or
cmp
shr
jl
stc
or
popa
bound
fistpl
xchg
pop
stos
fcompl
test
insl
repnz
jmp
mov
cmp
mov
add
in
movsb
mov
inc
push
lret
cli
add
jle
jae
stos
fwait
sbb
sbb
movsb
loop
pop
xchg
xlat
fs
test
lock
inc
and
dec
pushf
loope
les
or
testb
and
add
mov
or
test
fcmovne
iret
mov
nop
shl
cmp
sub
dec
lods
mov
outsl
jp
inc
push
xor
leave
jmp
sbb
aas
aad
push
addr16
jae
addl
cmp
and
out
loopne
jb
adc
jns
push
subl
xchg
scas
or
mov
gs
add
mov
mov
orb
and
cld
std
sub
lahf
neg
sbb
mov
xlat
xchg
shl
adc
addr16
outsb
jb
stos
sbb
int3
daa
lods
add
jmp
lret
or
mov
sub
cmc
pop
aad
rcr
push
loop
sub
jno
jo
loop
push
cmc
dec
lret
xchg
jmp
mov
imul
inc
ret
outsb
es
nop
icebp
jge
xlat
mov
and
leave
dec
mov
ror
out
outsl
loopne
sbbb
int3
cli
sbb
cwtl
jecxz
leave
fs
cwtl
or
ja
out
iret
and
fsubl
aam
jo
sbb
lret
jns
sbb
loopne
cli
movsl
mov
ffreep
nop
xchg
or
jo
adc
dec
cwtl
xor
sbb
jmp
mov
mov
mov
xor
idiv
push
jb
ds
jno
test
testl
mov
neg
lods
test
aam
inc
mov
mov
pop
or
cmp
nop
jl
jnp
out
push
scas
cmp
add
iret
xchg
cmpsb
mov
insb
jl
push
xchg
or
push
enter
movsb
push
cwtl
cvtps2pd
arpl
pop
bound
cmp
fcomps
aad
cmpsl
adc
sbb
xor
aam
mov
movsl
xchg
jno
sub
mov
insl
pop
xchg
enter
hlt
sub
inc
pop
xlat
sbb
lods
xchg
jns
jg
cltd
repnz
fdivrs
lret
call
or
jns
pop
cmc
push
mov
inc
movsl
xor
cltd
add
mov
pop
dec
mov
push
pop
int
cmc
int
adcl
add
sbb
xchg
xchg
push
jb
jne
mov
dec
dec
lret
add
adc
shrl
repnz
fs
push
in
sbb
push
in
add
dec
add
push
sub
lcall
insl
sbb
sub
dec
xor
cmpsl
mov
jmp
insl
dec
or
push
sbbl
enter
out
push
xchg
mov
call
cmp
iret
adc
jns
pushf
mov
pop
adc
sub
or
in
mov
cmpsb
pop
xchg
ja
in
push
and
inc
push
mov
adc
cwtl
lds
inc
cmp
jbe
negl
das
xor
sub
mov
or
sbb
mov
out
test
lret
jae
sbb
mov
mov
sar
test
insl
xor
repz
sbb
fnsave
pop
fsubrl
push
jle
mov
pop
xor
mov
sarb
repz
icebp
pop
aam
sbb
adc
push
in
and
pop
int
and
xlat
mov
and
or
add
das
ja
imul
shrb
mov
inc
mov
cmpsl
loopne
enter
popf
imul
mov
push
fiadds
mov
out
imul
das
inc
fldt
push
cmpb
sti
jne
inc
enter
dec
inc
jp
mov
mov
out
loope
sub
jle
fldcw
paddb
pop
pop
xchg
shlb
pop
mov
cltd
xor
pop
outsl
dec
inc
rcrl
loop
adc
and
jne
outsl
cli
shr
sbb
insl
dec
jbe
mov
enter
mov
movb
out
outsl
outsl
movsl
outsl
inc
xor
pop
adc
xchg
cwtl
mov
ret
sub
lock
loope
popa
pop
mov
sahf
jns
mov
in
daa
jp
fisubrl
mov
push
jmp
jl
xor
cmp
jp
sbb
popf
dec
scas
adc
lods
mov
out
outsl
mov
cli
lods
mov
sti
jae
adc
std
imul
jbe
inc
push
and
mov
mov
loopne
sbb
dec
cs
pop
xchg
push
and
or
sbb
enter
cmp
dec
call
and
les
icebp
outsl
das
cmp
in
pop
call
xlat
jne
in
xchg
mov
loop
sarl
das
cmp
sbb
pusha
scas
cli
xor
lahf
pushf
icebp
push
mov
icebp
ret
js
cld
js
inc
insb
dec
and
int
ret
push
push
out
movsl
hlt
stos
push
movsl
inc
ljmp
xlat
mov
dec
add
push
cltd
dec
in
das
ss
cmp
std
jb
shlb
cwtl
mov
sbb
vcmpgess
mov
cltd
jno
cmp
xor
mov
fisubs
xlat
add
push
jg
jne
int3
lock
pop
ret
js
out
mov
sbb
mov
cld
popa
jae
xchg
mov
das
in
sbb
stos
hlt
cmp
xor
outsl
xchg
out
mov
jp
dec
in
push
jmp
clc
outsb
mov
mov
js
aam
es
pop
int
pop
push
repz
rclb
gs
fs
jns
pushf
insb
mov
cs
stc
jne
aad
leave
in
clc
adc
mov
sbb
loop
push
mov
dec
mov
sbb
lods
xchg
jo
fidivs
imul
add
cmp
addr16
pop
lahf
ret
lahf
dec
add
add
aas
icebp
in
sbb
mov
mov
adc
bswap
mov
loope
cmp
insb
jns
xchg
ficompl
std
sbb
lahf
lock
sub
popa
mov
pop
cld
aam
data16
call
mov
sub
jnp
jp
add
lock
add
mov
ss
mov
mov
cmpsl
pusha
pop
or
sahf
or
inc
mov
sub
mov
dec
jno
push
nop
push
mov
pop
xor
mov
sbb
and
xchg
pop
cmc
aam
sbb
inc
cmpsb
mov
xchg
adc
mov
jmp
jge
xchg
and
xchg
cmp
test
addl
not
das
xor
dec
outsl
add
into
jne
or
xor
or
daa
push
aad
sub
cmpsl
shrb
mov
nop
pop
int
sbb
and
sarb
mov
pavgw
sarl
xchg
sub
fdivrs
cwtl
push
jbe
addr16
adc
or
adc
shlb
cli
repz
mov
popf
rorl
push
add
xorb
push
sqrtps
inc
and
push
dec
call
rclb
fnsave
adc
mov
push
repnz
dec
dec
sbb
jb
nop
pop
mov
xchg
dec
push
lret
ja
cmpsl
fadd
in
mov
das
je
data16
rcr
add
and
int3
dec
lret
loopne
lea
loop
inc
dec
rolb
stos
xchg
adc
into
mov
mov
push
je
dec
jl
rorl
cmp
mov
out
adc
sbb
in
das
pop
imul
cltd
jns
xchg
popa
and
push
sbb
daa
push
negb
lods
xchg
jbe
cmp
sbb
lds
lret
and
adc
add
in
cltd
ret
ret
loop
mov
les
jne
sbb
pop
sub
lahf
ds
inc
jae
push
loopne
subb
aaa
mov
sub
fs
jge
cmp
jne
in
mov
sub
fldt
sbb
add
call
adc
int
icebp
cmp
push
mov
adc
pop
mov
jno
outsb
mov
int3
push
inc
sbbb
cmp
push
inc
lret
sarb
div
pop
cmpb
mov
push
testl
lea
push
mov
rcr
xchg
mov
iret
xchg
pushf
jae
push
movsl
push
daa
cwtl
pop
mov
pop
in
lock
aas
popa
push
mov
cmp
or
mov
fwait
mov
mov
lods
fimull
pandn
xchg
mov
add
loope
cmp
fisubrs
int3
fisttps
xchg
jmp
lret
jge
xchg
aam
lret
jae
add
les
add
dec
pop
aas
orb
jmp
push
add
lods
jle
inc
clc
in
inc
adc
sub
stos
mov
jg
adc
mov
inc
es
stc
cmp
or
fsubrl
inc
es
lahf
std
add
add
jnp
lret
jmp
cli
xlat
sub
or
mov
icebp
pop
pop
push
mov
add
mov
imul
lods
leave
out
cmpl
fldt
jae
dec
aad
and
leave
icebp
ja
or
jl
dec
mov
mov
es
dec
mov
adc
adc
insl
inc
adc
mov
push
dec
rolb
jle
fidivl
icebp
fst
mov
test
mov
mov
mov
xlat
pusha
je
xor
addl
ds
std
pop
sbb
scas
mov
loopne
jl
data16
iret
mov
insb
aad
outsb
sbb
leave
in
mov
stc
stos
movsl
int
xorl
rolb
aam
rcrb
imul
push
adc
add
cmpsl
stc
movsl
xor
sub
outsb
imul
imul
lds
andl
dec
mov
mov
or
push
icebp
sub
lret
lret
xor
cmp
inc
and
fsubr
mov
insb
mov
scas
test
or
jno
and
xor
bound
inc
sbb
hlt
inc
lahf
in
fcoml
mov
jns
cmp
arpl
fimuls
call
xchg
pop
pop
mov
push
in
xchg
lret
jb
push
inc
ljmp
divb
xchg
data16
andl
in
les
pop
lock
inc
mov
shl
push
add
pop
popf
add
js
int3
icebp
push
cmp
push
addr16
movsb
das
dec
loope
mov
pop
icebp
jl
daa
xor
xlat
add
mov
sub
lds
call
cmp
mov
pop
fnstenv
jne
loope
out
lock
into
dec
in
mov
shll
aaa
hlt
dec
test
pop
xchg
add
jl
pop
loope
xchg
scas
int
lock
cli
sub
fyl2xp1
jns
cmp
or
arpl
fildll
imul
fcomp
mov
xchg
sti
out
loopne
mov
cmp
xor
pop
imul
mov
jns
push
aas
push
aam
div
push
out
and
cwtl
xchg
stos
add
xchg
scas
test
in
xor
fcompp
sub
or
add
pop
push
sbb
xchg
rolb
mov
in
jo
je
jnp
jecxz
outsl
mov
loop
shr
mov
iret
int
sbb
lds
rorb
mov
into
call
mov
popf
mov
adc
stos
xlat
cmpsb
das
mov
xchg
orl
les
aas
cld
push
add
shrl
mov
leave
jae
popa
pop
cld
and
out
fstpt
pop
cmp
fucomip
loop,pn
loop
shll
cld
cwtl
mov
in
xchg
or
sti
ljmp
idivb
or
mov
mov
sahf
sti
movntps
or
inc
pop
add
dec
pop
jg
push
push
mov
inc
inc
loope
cmp
fisubl
cmpsb
lahf
cmp
stos
jecxz
sbb
fidivrs
sbb
clc
inc
enter
mov
out
es
mov
cmpsl
popa
sbb
call
dec
aam
loop
sbb
push
lock
xchg
ss
fmul
cmp
mov
loop
xchg
pop
add
cmp
aaa
pop
aas
push
pop
inc
push
clc
jae
push
std
sbb
loop
xchg
sbb
mov
or
ljmp
lahf
xlat
mov
fisubrl
int3
mov
fs
pop
aam
inc
adc
sarl
adc
adc
inc
lods
jnp
loopne
push
mov
push
mov
shl
dec
adc
mov
data16
and
in
lods
pusha
pop
lds
dec
stc
jno
jle
cmp
and
push
inc
jle
cmpsl
in
arpl
ja
jo
and
sub
adc
and
dec
imul
fidivs
add
loop
inc
jbe
cs
or
in
mov
push
std
jg
cmpsl
xchg
pop
adc
cmp
add
rorb
es
pop
push
imul
dec
add
dec
jne
push
ja
mov
std
in
stc
addr16
stos
not
jecxz
push
xchg
cltd
xor
inc
les
popa
mov
mov
fldz
divl
cmpsl
lock
xor
cmp
push
inc
push
insl
imulb
adc
jge
into
xor
divl
testb
outsb
cmp
pop
pop
sub
cmp
sub
ds
sub
cmc
add
add
pop
cwtl
test
mov
stos
lock
and
out
call
pop
or
xchg
and
out
fs
negl
cli
sbb
and
icebp
mov
int3
pop
mov
out
aam
fistpll
gs
repnz
dec
rorb
fwait
mov
xor
test
pop
inc
cmp
mov
jmp
test
inc
ret
and
push
inc
das
adcl
sub
aaa
and
mov
rcrb
or
jg
adc
lret
inc
inc
sar
pop
in
gs
xor
dec
push
inc
rcll
stc
lahf
imull
fidivrl
or
adc
testl
into
lahf
arpl
das
fdivl
lahf
add
out
pop
jecxz
mov
xor
mov
mov
arpl
loopne
rorl
call
int3
orb
iret
stos
stos
stc
test
rolb
mov
ja
pushf
hlt
pop
sti
movsb
add
jb
aam
ja
cmp
js
fdivs
fstpt
scas
lods
insb
xchg
stos
mov
insl
and
push
subb
stos
into
inc
mov
jae
push
inc
enter
mulb
xchg
enter
push
int
mov
andl
lock
fdivl
xchg
ja
push
mov
je
add
out
push
jne
cli
xor
lcall
inc
xor
les
sbb
lock
mov
in
ficomps
popf
jb
add
scas
jb
lods
hlt
mov
mov
pop
jp
fildl
xchg
mov
daa
xor
xchg
sub
inc
nop
push
in
lods
pop
inc
mov
push
and
mov
or
and
faddl
stos
xor
stos
jbe
sbb
movd
sbb
sub
pop
sub
repz
jmp
int3
mov
mulps
clc
lahf
addr16
sarl
mov
adc
imul
mov
hlt
imul
sarl
jle
jo
fsubp
push
xchg
pop
mov
or
xchg
insb
mov
xchg
outsl
add
stos
push
mov
test
and
fstl
jg
or
xchg
scas
cld
push
icebp
mov
mov
sub
inc
mov
jb
push
in
aas
notl
push
mov
or
int
push
fstpl
or
lods
rcr
stos
or
xchg
leave
push
test
in
lret
fimuls
ljmp
mov
pop
adcl
jae
fs
or
push
xchg
adc
movsl
mov
sarb
sbbl
test
fcoms
repz
pusha
or
test
inc
out
xor
add
xor
mov
int3
lea
call
cltd
aad
cli
shll
stc
lahf
add
mov
les
in
call
ja
and
push
or
xchg
adc
fcoml
es
imulb
mov
cmpsl
outsl
sbb
int
and
push
sub
inc
jo
jle
stos
jns
rclb
iret
cld
cmc
daa
loope
out
cli
pop
aas
pop
divb
stos
push
push
pop
mov
dec
hlt
ret
sbb
xor
cmp
js
mov
imul
std
jbe
ficomps
insb
pop
fildl
je
dec
lods
call
subl
xchg
push
pop
popa
movsb
and
std
xchg
aas
aam
xor
stos
dec
push
cs
sbb
push
and
xor
push
dec
inc
jbe
xchg
push
mov
popf
mov
scas
sti
xchg
in
push
clc
xlat
out
jl
shr
jns
subb
popa
push
ljmp
add
jo
data16
mov
in
outsl
fidivrl
jns
ss
lods
jmp
mov
pop
jbe
les
les
mov
push
mov
push
pop
sub
mov
call
jae
icebp
mov
lods
lahf
fwait
scas
xor
mov
jg
xchg
and
loopne
xchg
jle
pusha
inc
pushf
rorl
test
jae
mov
pop
jne
sti
mov
mov
sbb
pusha
mov
ja
mov
out
lea
divb
daa
es
push
inc
cmp
fbstp
aad
xchg
fadds
pop
scas
xchg
mov
out
lods
add
cmpsl
mov
cwtl
add
rcrb
sbb
insb
jae
je
inc
int
outsb
jne
out
push
sub
imul
aad
call
dec
or
add
movsl
jmp
add
notl
sub
and
mov
loop
push
push
jmp
data16
lahf
add
push
cmpxchg
or
lcall
ja
pushf
test
jge
ljmp
pop
pop
mov
adc
js
loopne
and
loop
inc
aad
jmp
mov
sbbb
and
imul
mov
out
mov
add
pop
push
inc
sub
jbe
sub
jecxz
cld
push
push
sub
or
test
stos
jecxz
loopne
aam
xor
in
xlat
xor
int
mov
mov
insl
jno
popa
dec
adc
and
icebp
fucom
int
mov
mov
insl
jno
popa
dec
adc
and
icebp
fucom
int
mov
mov
insl
jno
popa
dec
adc
and
lock
int
mov
mov
fistpl
cmp
mov
into
loop
repnz
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
and
adc
add
shlb
sub
out
test
hlt
fwait
out
les
and
adc
add
je
sbb
pop
movsb
xlat
movsb
lret
xchg
sti
mov
hlt
jmp
les
or
sbb
insl
add
and
fildl
sahf
hlt
aam
decl
pop
dec
cmp
jb
daa
shll
fadds
xchg
arpl
add
cmc
shlb
jb
cmp
fs
rol
rcl
xor
adc
sti
hlt
aad
dec
cmp
fsubs
out
inc
xor
nop
loopne
fisttps
test
fistpl
lods
xchg
or
sbb
aam
out
xor
test
cmp
dec
inc
scas
aas
cmp
or
les
cltd
test
pop
mov
jl
sbb
mov
mov
bound
cltd
in
sub
aam
fsubl
loope
xchg
data16
cmpsl
cmp
mov
mov
mov
mov
aam
les
adc
add
arpl
je
push
cmp
lods
fstpt
in
cmp
into
mov
inc
cmp
jo
pop
sbb
push
push
inc
dec
mov
enter
loopne
hlt
incb
pop
xor
jnp
je
sbb
fs
push
dec
pop
sbb
scas
shrl
jmp
mov
pop
dec
dec
js
insb
cs
or
sub
test
hlt
fwait
in
aam
les
adc
add
je
or
sub
test
hlt
fwait
in
aam
les
stos
cld
ja
sbb
lcall
fmull
or
mov
sbb
jns
mov
push
jns
mov
lcall
fmull
mov
out
sub
sbb
cli
les
push
outsb
adc
dec
mov
cld
data16
test
std
rorl
lret
sti
ss
ljmp
jnp
xchg
repz
stc
test
les
ret
loopne
add
jge
mov
loopne
jns
jns
ljmp
dec
out
lret
sbb
in
xor
adc
out
push
jg
adc
xor
jb
fidivrs
fwait
pop
daa
jp
iret
cmc
xchg
push
xor
test
jno
mov
dec
ds
mov
ret
cwtl
sub
or
int3
mov
jge
ficoml
or
add
pop
ret
cmp
mov
sti
adc
rol
xchg
push
sbb
jg
push
fistpll
push
pop
or
test
xchg
test
xor
fisubs
xor
stos
xchg
xchg
sbb
cwtl
pop
push
sarl
or
push
xor
mov
cmp
inc
xchg
xchg
cmp
inc
inc
pop
js
outsl
xor
sbb
sbb
lock
mov
outsl
mov
fisttpll
inc
xchg
data16
dec
xchg
nop
mov
fisttpll
or
xor
jle
add
fbld
cmp
gs
popa
pusha
adc
fsub
jecxz
and
rcrl
fwait
pop
das
sub
add
pusha
outsb
mov
jecxz
jmp
pop
inc
mov
dec
mov
pushf
adc
adc
outsl
jo
xchg
mov
jg
arpl
mov
nop
xchg
icebp
jp
aad
inc
xlat
fsubr
mov
adc
push
std
pop
mov
lods
jp
js
into
andl
mov
pop
nop
dec
pop
mov
add
xchg
pop
insl
and
out
loope
cmpl
daa
jne
test
daa
jge
xchg
repz
inc
out
cmc
xor
sahf
test
pop
sub
push
mov
mov
xor
in
aas
sbb
sub
push
add
push
cs
sti
xor
std
stc
add
pop
scas
jo
dec
mov
xchg
leave
lret
lret
push
and
inc
mov
or
cmp
out
xchg
jno
jle
jnp
sub
jle
push
pop
in
enter
push
sbb
pusha
adcb
cmp
mov
and
ret
adc
inc
mov
sbb
add
std
xchg
out
ret
xchg
push
inc
mov
mov
jmp
fs
pop
loope
mov
daa
mov
cmp
sub
mov
xchg
pop
push
jge
rclb
loopne
jbe
push
scas
add
xchg
and
out
sbb
mov
fwait
add
pop
xchg
leave
push
and
mov
sub
jbe
fs
xchg
das
imul
jg
imul
mov
jbe
pop
sub
push
add
xor
jb
leave
and
sar
push
sub
ficoms
mov
mov
addb
repz
clc
jg
add
or
cli
mov
mov
and
or
add
mov
mulb
push
and
fldlg2
pop
js
hlt
sub
cmp
js
jle
aas
out
int3
and
cwtl
out
aaa
xchg
xchg
add
mov
rorb
push
jl
push
cmp
jmp
lods
jo
sar
jle
add
adc
sbb
mov
shrb
inc
mov
and
jle
push
mov
ljmp
or
jle
rcrl
lods
in
in
in
jmp
jle
xchg
xchg
lret
int
lret
cmp
xorb
mov
cmc
mov
cmp
mov
xchg
xlat
mov
dec
sbb
push
rcl
es
mov
sub
or
mov
xor
dec
xor
push
enter
pop
inc
mov
pop
outsl
push
arpl
cmp
pop
hlt
out
nop
xchg
or
sbb
repz
movntps
fdivs
jge
xchg
xchg
push
leave
fs
mov
jne
add
add
mov
mov
sbb
lahf
or
stos
jo
icebp
loopne
loop
push
ljmp
and
stos
adc
cmp
ds
shl
xor
xchg
mov
jnp
xchg
add
lcall
aaa
cmpl
jae
aam
sbb
mov
test
gs
cld
xchg
xor
rcr
sbb
sbb
mov
shll
ja
lret
test
mov
shlb
xchg
dec
adc
les
lock
addr16
jmp
mov
call
ss
stos
mov
xor
fucom
scas
outsl
call
dec
js
jne
sub
cmp
mov
hlt
push
scas
insl
add
pushl
mov
ds
and
repz
aas
mov
sub
or
mov
mov
cmp
fistpl
stos
es
insl
insl
int3
dec
int
mov
cld
aas
sbb
mov
icebp
fldl
loope
mov
push
push
inc
ret
out
movsb
sub
pushf
mov
sarl
sub
clc
xor
dec
push
fistl
cmp
jecxz
call
xorb
negb
neg
in
pop
dec
adc
mov
mov
cmp
xchg
pusha
fnsave
inc
cld
sub
xchg
sub
negl
jp
cmpsl
adc
lods
inc
dec
loop
mov
out
and
sbb
mov
lock
sbb
cltd
fabs
push
fsubp
loope
lcall
imul
jae
enter
adc
mov
pop
xchg
add
cmp
xor
lret
mov
mov
mov
mov
lock
fldt
aaa
mov
into
dec
xchg
mov
bound
inc
push
enter
jecxz
xchg
inc
or
jb
inc
xchg
test
dec
adc
push
in
mov
pop
sbb
fbstp
roll
mov
and
xchg
inc
out
sbb
mov
dec
dec
es
adc
notl
mov
ss
div
clc
vorpd
pop
dec
xor
dec
fsubrl
xchg
or
push
loop
fdivp
sbb
out
test
fwait
aaa
xchg
int3
push
jge
imul
inc
jmp
mov
xchg
stos
test
jp
hlt
fisubrs
jb
sbb
or
sub
pop
mov
aam
shrl
mov
sbb
add
flds
push
mov
xor
sarb
in
shlb
enter
adc
jecxz
inc
or
cmpsb
xchg
cld
xchg
sub
cmpsb
test
cltd
mov
pusha
clc
sti
in
jnp
lods
sub
jmp
xchg
add
hlt
mov
cli
xlat
pop
addr16
push
adc
pop
adc
inc
xchg
mov
test
hlt
push
das
cmp
push
jno
inc
cmpsl
dec
mov
mov
gs
into
xchg
pop
rcll
movsl
add
stos
repnz
xor
arpl
dec
lds
lahf
popa
fidivs
cmpsl
jp
add
cli
cld
jb
pushf
xchg
stos
aam
pop
push
adc
imull
popa
pop
push
mov
cltd
pop
aad
xchg
fcmove
sub
ja
mov
inc
sti
xchg
data16
adc
js
popf
aas
aad
imul
andb
fcomps
xchg
lods
faddl
dec
pop
inc
jbe
mov
daa
mov
pop
push
xor
push
bound
int3
xchg
jns
sbb
mov
cmpl
xchg
loop
into
aas
inc
dec
mov
inc
jno
fnsave
pop
lea
cmc
add
lcall
inc
repnz
gs
cmpsl
add
ja,pt
xor
cmp
xlat
scas
xor
or
jbe
jecxz
mov
dec
mov
out
sub
lds
fcmovne
mov
icebp
lea
jge
and
or
add
push
and
cltd
push
add
push
mov
mov
sbb
das
mov
lcall
imul
adc
sbb
push
ret
mov
es
push
pushf
cli
add
inc
out
fld
adc
mov
mov
fnsave
or
sbb
mov
fnstenv
lret
cltd
cmp
ljmp
xor
push
xor
shrl
testl
sysexit
push
and
mov
fildl
mov
jae
sub
mov
push
ss
cwtl
mov
stos
xor
jns
stos
sbb
xorb
jp
mov
push
outsb
lds
imul
push
or
das
mov
dec
add
sbb
cmp
sbb
pop
mov
insl
imul
dec
aam
loope
dec
fsubrp
pop
or
add
cltd
shlb
rcrb
and
xor
jmp
gs
sbb
shr
push
cmpsl
cmpsb
inc
xchg
aad
sub
lret
loopne
xlat
sbb
loopne
xchg
daa
add
xor
mov
jmp
jp
push
mov
or
add
mov
push
and
inc
dec
call
adc
jne
inc
jb
mov
cld
mov
imull
jne
nop
lea
les
lret
subb
inc
fadds
sub
xor
iret
ret
cmpsb
sbb
cli
or
mov
enter
xchg
sbb
adc
add
cmp
mov
mov
dec
int3
sub
mov
sbb
movsl
imul
dec
push
cmpsb
xchg
popa
pop
add
pop
xchg
ret
rcr
cli
fidivs
mov
in
clc
xor
and
xor
in
lret
cmp
inc
pop
mov
sbb
imul
adc
pop
cmp
lret
jmp
adcl
je
fldt
cmp
das
idivl
dec
imul
mov
add
out
sub
mov
push
loopne
cmc
xor
cld
cmp
xor
fnstcw
xchg
enter
movsb
push
dec
in
notb
sbb
enter
jecxz
add
mov
ljmp
pop
push
sub
rcrb
bound
enter
fdiv
fildl
cmovg
mov
jae
or
andl
leave
fidivl
xor
jb
push
mov
add
mov
push
repnz
aam
or
xor
js
push
fstpt
cmp
jns
push
or
pcmpeqd
or
mov
aad
popf
jb
mov
js
pop
rorl
imul
dec
cmp
jg
inc
rep
xor
repnz
mov
roll
add
mov
jl
ds
andl
bound
push
fmulp
mov
dec
inc
inc
and
jbe
je
into
sarl
ljmp
xlat
jb
in
jecxz
shll
push
mov
stc
dec
push
inc
rcrl
dec
push
inc
mov
xor
shl
testb
push
mov
ret
sub
mov
xchg
xor
leave
and
mov
sbb
mov
rcl
nop
push
nop
in
stc
addb
imul
leave
dec
mov
mov
sbb
jae
push
outsb
mov
pop
out
icebp
sbbl
xchg
jecxz
sti
dec
ret
mov
mov
frstor
mov
jl
rcr
ficoml
pop
xor
inc
xor
lahf
mov
lret
sub
sub
lods
stos
xchg
shlb
mov
sbb
mov
arpl
addr16
mov
test
lcall
cmp
pop
andb
sub
push
in
pushf
jp
dec
push
les
leave
sbb
out
push
loopne
inc
bound
sub
xorb
int3
nop
mov
jecxz
bound
scas
cmpsb
test
adc
xor
sub
xchg
movsl
shrl
je
xor
sbb
pop
pushf
pop
inc
cmp
jge
pop
cltd
std
xchg
outsb
popf
mov
repz
bswap
mov
push
mov
xor
xchg
or
ret
pop
xor
movsb
sbb
inc
cmp
pop
ljmp
es
push
add
test
fsubs
pop
pop
or
fwait
and
ret
test
jmp
push
popf
pop
push
loop
rolb
test
adc
sub
repz
mov
dec
cmp
mov
sti
add
jl
adc
enter
cmpsl
rorb
pusha
test
hlt
mov
movb
add
and
or
stc
stos
mov
fisttpl
stos
pop
mov
jp
std
xor
cltd
cmp
mov
pop
pop
adc
push
dec
jecxz
jge
and
adc
sbb
loop
jp
hlt
popa
jbe
sub
aam
pusha
mov
mov
and
loop
ficomps
and
mov
in
xor
hlt
jns
stos
mov
jne
arpl
icebp
sub
cwtl
and
dec
roll
jb
adc
ds
notl
cmp
out
pop
lods
sbb
subb
std
push
in
push
cmpsl
enter
stos
lea
ss
xchg
xor
insb
cmp
jmp
fwait
jg
or
sbb
in
pop
or
jo
mov
inc
mov
inc
xchg
icebp
and
fisubl
insl
aam
push
test
je
cs
push
addr16
stos
clc
shlb
pop
sahf
scas
mov
sub
dec
or
clc
push
push
and
repz
loope
pop
cmp
lret
jns
mov
outsl
pop
shlb
xor
adc
sbb
xor
dec
les
or
xchg
adc
cwtl
jl
jl
dec
mov
out
jbe
mov
jge
push
inc
jnp
scas
push
and
lcall
mov
jp
dec
fdivrl
dec
stc
cltd
mov
cmp
testl
adc
iret
in
jl,pn
sarl
loop
dec
jle
sbb
cmc
sub
pop
loop
add
pop
sbb
subb
pop
cmpsl
push
jmp
mov
lods
mov
inc
and
xor
sub
mov
loope
scas
loopne
aas
xchg
push
cs
jecxz
repnz
dec
sub
lock
cmpsb
pop
or
gs
cs
add
mov
out
mov
jle
loope
mov
jbe
fisttps
je
dec
scas
pushf
cmc
lret
lcall
insl
adc
int
out
imul
xchg
test
into
das
pushf
sarb
dec
add
bound
add
sub
xchg
push
inc
pop
ret
loope
test
jno,pn
inc
push
xor
xlat
movsb
mov
rcrl
jbe
stc
jle
pop
mov
sub
mov
sbb
jle
mov
push
repnz
pop
aas
jp
add
popa
xchg
addr16
jmp
jmp
in
cld
adc
jb
lret
xor
or
leave
in
lret
test
test
push
call
in
mov
xchg
push
out
ficoml
fstl
cwtl
inc
adc
ret
notb
fs
jmp
dec
pop
push
mov
inc
nop
mov
pop
xlat
xchg
imul
stc
jb
ja
fs
lods
inc
testb
cwtl
add
sub
xchg
push
fsubrs
mov
je
ss
subb
xchg
add
add
iret
pop
scas
ljmp
data16
stc
pop
aad
inc
xchg
push
shrb
rcpps
add
bound
inc
fisubrs
fistl
sub
in
adc
cmp
pop
int3
test
bound
loop
mov
daa
adc
ret
in
dec
loop
std
inc
mov
sbb
dec
outsl
adc
clc
inc
loop
jmp
mov
adc
cmpsb
in
xchg
jns
andb
test
pop
gs
add
rcrl
xchg
fwait
jle
adc
xor
mov
add
adc
iret
subb
pop
sbb
push
ja
push
xor
pop
cmp
push
in
jae
dec
adc
imul
rcrb
inc
hlt
inc
or
in
lret
fisubs
jb
fcoms
or
test
xchg
aaa
inc
adc
push
or
mov
std
testl
push
int3
in
leave
and
hlt
aad
cld
lock
inc
pop
adc
inc
pop
pop
imul
push
fists
and
cmpsb
aam
popa
testb
loop
into
movsb
mov
dec
jb
adc
mov
push
pop
aaa
outsb
mov
jo
push
in
js
popf
add
std
mov
gs
icebp
sahf
jl
jmp
xlat
push
imul
es
ja
lea
xor
pop
fsts
dec
push
mov
scas
mov
lcall
out
popf
bound
in
fs
mov
lret
mov
push
js
mov
adc
mov
addl
div
mov
test
sub
push
sti
test
data16
sub
ret
repnz
out
repnz
ret
roll
and
mov
dec
cld
or
mov
sbb
cltd
push
push
jg
pop
or
jno
addl
popf
adc
outsb
dec
or
mov
mov
fimull
nop
push
xchg
mov
pop
jecxz
xchg
mov
mov
stos
enter
mov
shrl
push
out
mov
xor
out
push
or
rcr
out
fdivp
mov
mov
js
ficoml
mov
test
insb
push
push
sahf
xlat
insl
rcrl
push
pop
lea
loop
mov
mov
xchg
outsl
scas
sti
or
repnz
rcl
jbe
dec
popl
sub
mov
imul
sbb
push
cli
movsb
xor
call
imulb
push
dec
adcl
cmpsb
or
fstpt
ret
fsubrs
les
sti
rol
movsb
rcll
call
icebp
push
xchg
scas
xchg
sub
xor
shl
sarl
cwtl
jae
popf
loope
gs
daa
or
sbb
ja
push
jmp
test
std
pop
mov
push
rcr
jne
iret
loop
pop
leave
mov
ss
and
rol
call
call
mov
or
or
sub
jo
shll
mov
sti
aad
fistpll
pop
rcl
xchg
pushf
call
movsb
mov
lret
lret
push
movsl
dec
in
sbb
inc
xchg
je
mov
or
je
jp
and
lret
or
rorb
cmp
cmp
shll
sub
inc
cmpsb
outsl
mov
fimuls
pop
and
addr16
test
arpl
cmp
sub
jno
xlat
mov
adc
cmp
orl
fbld
in
sub
int3
mov
out
aad
out
add
pushl
mov
stos
sbb
int3
pushf
xchg
push
jl
jecxz
xor
ja
daa
add
sbb
test
cmp
mov
dec
sub
cmp
lods
test
mov
push
push
ja
push
xor
dec
cmp
jmp
cmpsb
in
loope
or
mov
xchg
jp
cmp
rcrl
lcall
mov
test
hlt
mov
and
int
jb
dec
cmc
jmp
stc
out
in
xchg
test
iret
addr16
iret
outsl
jne
in
fisubl
push
dec
adcl
xchg
dec
push
mov
fsub
push
das
dec
jne
out
cmp
rcrb
xor
mov
in
mov
imul
mov
sub
call
lret
enter
ds
push
in
mov
jmp
movsb
inc
xchg
notb
sbb
jecxz
push
mov
es
cmp
into
jmp
mov
test
leave
push
lock
lret
cli
les
out
push
sub
pop
shrb
enter
lds
mov
shlb
inc
dec
pop
sbb
pop
add
jg
mov
out
dec
rorb
sbb
out
adc
xchg
addb
not
lret
cs
xor
mov
pop
mov
add
jle
mov
cmp
shrb
lea
inc
out
jb
fldcw
mov
pushf
mov
jge
mov
scas
test
sbb
jnp
jle
pop
jnp
leave
lods
test
jns
push
outsb
lret
add
jmp
inc
inc
clc
or
pop
xchg
jne
add
nop
mov
push
jp
into
mov
xchg
stos
inc
popa
scas
les
movsl
pop
and
sub
test
repz
xor
and
sbb
faddp
aad
xor
push
push
divb
jmp
and
dec
push
jnp
imul
push
cmp
hlt
fwait
in
aam
les
adc
add
je
or
sub
test
hlt
fwait
in
aam
les
adc
add
je
or
sub
test
hlt
fwait
in
aam
scas
xor
es
adc
sbb
cmp
jmp
fistpl
ds
test
les
aam
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
mov
and
sbb
in
adc
add
xor
and
push
jb
inc
je
mov
mov
movsb
loop
repnz
ret
nop
and
and
xor
and
cmp
inc
xor
mov
sbb
cmpsb
loop
repnz
ret
cld
and
xor
imul
add
sub
jmp
mov
icebp
shl
mov
call
call
fs
xor
cmp
pop
push
xchg
ja
pop
sbb
aad
cmp
mov
cmpsb
aam
sbb
pop
xchg
xor
push
xchg
lods
jmp
dec
scas
sbb
mov
cltd
pop
cmp
je
inc
daa
mov
je
push
mov
hlt
movsb
adc
aam
lods
cmp
mov
push
popl
xor
pushf
push
sbb
pop
add
and
stc
add
inc
into
adc
repz
and
pop
jo
mov
push
mov
lds
xor
mov
sbb
pop
insb
cli
lret
push
cmp
push
jae
inc
je
loopne
xchg
mov
xorb
scas
loop
repnz
and
adc
jb
inc
je
or
fildl
mov
xchg
andl
jle
pop
cmp
xor
xor
rol
aad
andl
xor
push
push
inc
pop
add
or
adc
ret
jmp
xchg
loop
repnz
in
adc
add
xor
and
push
jb
inc
je
mov
mov
movsb
loop
repnz
in
adc
add
xor
and
push
jb
inc
je
mov
pop
mov
cmp
xlat
mov
cwtl
les
test
jmp
loope
hlt
stos
jno
xor
mov
dec
cmp
mov
stos
aas
mov
test
fwait
aaa
or
add
jb
cmp
insb
and
rcrl
lods
fsubrl
jl
rorb
stos
push
hlt
rorb
pop
sbb
int3
scas
and
clc
push
es
inc
xchg
test
push
arpl
pop
fstl
add
cmp
mov
or
das
mov
jge
pop
cmpl
movsl
icebp
push
fdivs
sbb
lcall
gs
js
shlb
addr16
and
mov
adc
adc
out
icebp
lret
popf
mov
push
mov
mov
mov
leave
mov
test
sbb
fs
dec
mov
jbe
insb
shlb
mov
mov
js
ret
test
rcr
ljmp
xor
psubsw
xor
punpcklwd
push
mov
pop
inc
imul
sti
pop
xchg
aam
adc
mov
and
aas
les
dec
jnp
ret
cli
fsubs
rcr
xchg
rorl
out
and
cmpl
scas
add
dec
test
int3
mov
in
in
dec
cwtl
mov
fprem1
xchg
cmp
cmp
repnz
push
add
mov
lea
add
mov
out
lahf
push
or
loopne
jecxz
cmpsl
ret
cmp
js
es
adc
cli
sbb
add
sahf
pop
ds
rolb
test
pop
addb
xchg
jmp
and
and
mov
test
jnp
idivb
or
les
xor
add
mov
mov
sbb
jg
jbe
cmpb
mov
xchg
and
cmp
xchg
jne
in
test
jmp
int3
insl
aaa
and
insl
or
lsl
cmp
inc
sub
lcall
jl
push
fisttpl
add
xchg
pop
repnz
push
cmp
mull
or
mov
test
imull
leave
mov
push
jno
add
mov
sbb
daa
fdivrl
and
xchg
cmc
push
jge
aas
cmpb
loopne
aas
sub
fmul
jo
lods
stc
jnp
fwait
hlt
idiv
mov
mov
inc
pop
scas
cld
jmp
xchg
adc
sarl
ss
scas
rcl
call
loop
ret
ret
jae
xchg
push
out
stos
mov
dec
scas
mov
out
sub
sub
mov
hlt
mov
xor
loopne
xor
orl
stc
inc
fistpl
or
push
ds
xlat
pop
lock
nop
insb
loope
pop
pop
mov
cmpsb
add
test
aam
lret
inc
cmp
repz
xorb
cltd
mov
inc
in
sub
pop
hlt
lods
ficoml
imul
mov
mov
lret
ljmp
mulb
dec
inc
mov
cwtl
sbb
xor
mov
push
fistpl
sbb
scas
sbb
idivl
stos
dec
sbb
inc
notl
lret
xchg
jmp
or
mov
insl
aam
lods
mov
and
mov
sub
fstps
jg
mov
inc
cwtl
popa
or
mov
xchg
push
data16
push
and
pushf
inc
loope
inc
test
es
outsb
mov
dec
sub
sbb
xchg
lcall
in
mov
push
or
sub
movsl
sarb
inc
xchg
sbb
clc
add
pop
js
adc
sbb
mov
xchg
popl
jecxz
mov
int3
xchg
fldcw
fildl
adc
inc
push
into
xlat
mov
lods
adc
rorl
subb
leave
mov
mov
and
add
sbb
popa
pop
xchg
cmpsb
bound
push
cmp
mov
repnz
in
and
fcmovu
dec
popf
add
in
and
stc
adc
adc
xchg
mov
jp
jb
mov
pop
push
cmc
sbb
add
pop
enter
mov
push
es
int3
push
pop
dec
mov
out
push
lahf
xchg
cmpsb
cmp
push
fldenv
aad
push
xor
xchg
int
daa
cmpsb
in
pop
mov
pop
nop
jbe
iret
mov
sub
cmp
mov
xor
insl
mov
xchg
lret
lret
out
dec
pop
add
je
sub
rclb
mov
in
cld
and
scas
cmpb
aaa
ljmp
loop
adc
sub
cmpsl
push
lods
xor
cwtl
sub
jnp
ds
mov
xorb
xchg
dec
outsb
jge
mov
or
lahf
int3
popf
std
ljmp
in
dec
in
out
xchg
pop
in
jnp
sub
clc
lret
iret
and
test
ds
ljmp
daa
loope
push
js
mov
sub
sbb
inc
repz
dec
mov
cmp
lcall
lcall
dec
jbe
movsl
mov
jno
jle
mov
aad
lea
inc
cmp
add
fisttpl
std
and
inc
mov
outsb
ss
js
inc
mov
mov
jecxz
sub
int3
pop
shrl
mov
lcall
outsb
gs
aaa
stc
sbb
push
push
arpl
adc
lea
xor
sbb
mov
xor
jne
test
pop
inc
sbb
cmp
icebp
mov
xor
arpl
push
jno
popa
mov
lods
mov
dec
inc
iret
fdivs
pop
sbb
imul
dec
insl
pop
jbe
dec
mov
inc
int
fdivs
cmp
sbb
or
leave
int3
iret
test
in
push
mov
xor
nop
xchg
mov
push
stc
enter
and
stos
sub
icebp
aam
jle
mov
aad
pop
add
daa
mov
je
mov
cltd
pop
push
mov
inc
jne
xlat
xchg
xchg
mov
scas
dec
jno
ss
cmpsb
bound
mov
std
mov
cltd
bound
mov
mov
cltd
xchg
fs
jbe
stos
pop
mov
rcll
add
fs
in
and
xchg
push
mov
in
stos
cld
push
nop
dec
and
cld
pusha
lcall
push
lahf
cmovp
mov
shrl
or
mov
ja
sbb
mov
int3
mov
into
mov
clc
ds
push
fxrstor
cs
pop
mov
xchg
add
push
jp
mov
push
or
adcl
cmp
mov
pusha
mov
add
mov
xor
mov
ja
rorb
adc
push
mov
sbb
in
arpl
mov
xchg
mov
clc
lea
enter
sbb
pusha
fdivl
in
xchg
clc
push
ja
in
hlt
faddl
jmp
out
outsb
iret
mov
pop
iret
jge
push
popa
loop
xor
push
sub
jnp
fadds
loop
popa
call
xchg
jle
lods
insb
ficompl
gs
cmpsl
lock
fsubs
stos
cli
and
scas
arpl
add
sbb
and
xchg
push
jle
jns
fisubrl
push
xchg
dec
xorl
test
jns
push
xchg
cmp
bound
jne
mov
xor
ret
and
adc
shrl
add
add
push
into
insb
ljmp
in
adc
imul
fadd
xor
popf
mov
aad
push
ret
inc
outsb
xchg
dec
jb
add
push
pop
stos
jb
scas
aad
notb
cmp
adc
xchg
dec
call
push
arpl
jl
dec
jns
sti
jns
cs
mov
lds
mov
jecxz
lret
lods
push
xor
adc
mov
push
adc
aam
mov
mov
xchg
ret
add
jnp
push
xchg
mov
mov
sub
pop
push
mov
dec
call
ss
mov
stos
rcll
adc
push
fcmove
jno
mov
adc
xor
les
jge
cmovne
nop
out
fbstp
xor
push
xchg
scas
mov
popa
xor
arpl
shrl
pop
xchg
fldcw
pop
add
fwait
ljmp
addr16
and
xchg
xor
and
jnp
cmc
dec
xor
push
pop
bound
mov
pop
rolb
lret
loope
les
mov
push
xchg
and
aam
xor
bound
mov
test
loop
out
xchg
inc
imul
int
push
bsf
clc
jmp
leave
cmp
push
mov
test
dec
out
mov
xchg
loopne
and
sub
and
xchg
ret
pop
or
sub
sub
faddl
mov
ds
mov
mov
sbb
ret
mov
dec
call
movsl
clc
inc
sbb
ficomps
add
xchg
daa
testl
roll
push
push
dec
jle
jnp
gs
mov
adc
jns
and
pcmpgtb
sub
loopne
sti
xor
and
and
add
pop
cmpsl
leave
lcall
mov
std
mov
mov
and
mov
outsl
dec
add
push
out
lea
ja
insl
jnp
pop
dec
ja
lcall
xor
push
mov
flds
sbb
ja
xorb
jmp
popa
stos
loope
lcall
sub
dec
adc
sbb
fidivrs
clc
mov
xor
xchg
dec
xor
pop
out
dec
xchg
popf
cmpsb
jle
jmp
pop
xchg
cltd
push
fwait
imul
sub
inc
sub
jge
imull
sti
push
popf
mov
out
mov
sbb
mov
inc
cmpsb
int3
jnp
ja
mov
mov
adc
testb
xor
xchg
divb
rolb
lahf
jl
push
gs
lret
or
insl
push
in
stos
pop
shll
testb
sub
loop
mov
aad
sub
sbb
jb
mov
lahf
dec
aaa
cmp
js
andl
cmp
std
test
lahf
push
adc
jbe
out
push
je
cmc
lret
iret
push
shl
repnz
test
shrl
in
jg
jecxz
mov
inc
mov
insl
jnp
sbb
mov
xchg
mov
jbe
cmp
into
or
push
cmpsl
mov
xor
rcrl
dec
in
fdivp
aam
xchg
pop
movsl
and
fistpll
or
movsb
adcb
inc
push
stos
cld
cmp
cld
das
fcoml
xorb
vmwrite
pop
mov
mov
inc
inc
dec
sub
imul
cld
sbb
in
jns
cwtl
pavgb
shll
jbe
dec
call
int
xchg
cmp
loope
jmp
rcrb
push
fldt
push
lahf
adc
sbb
test
data16
cmpps
xor
loope
lret
mov
sti
je
inc
mov
repnz
call
ficoms
cmp
dec
js
jbe
dec
out
int
ljmp
inc
in
hlt
in
cld
scas
mov
lods
sahf
inc
xor
mov
sbb
daa
inc
mov
addr16
repz
cmp
lea
jp
cmp
pop
repz
xchg
popf
lock
sbbl
jb
enter
pop
inc
sub
xchg
data16
pusha
inc
mov
arpl
sbb
repz
and
iret
pop
dec
fmulp
push
js
mov
fs
adc
pop
pop
pop
stc
lea
add
inc
pop
push
cltd
cwtl
push
mov
aad
push
lods
dec
push
pop
push
jbe
mov
dec
std
dec
cwtl
stos
push
jge
sbb
xchg
popa
mov
movsb
add
rcrb
xchg
xchg
sbb
cmc
xorb
arpl
adc
loopne
push
in
sub
mov
cmp
pop
mov
and
mov
aam
pop
xchg
lea
out
stc
mov
call
xor
hlt
loope
insb
mov
sbb
mov
jae
popa
cwtl
mov
sub
mov
int3
in
sbb
jecxz
shrb
mov
jae
sub
clc
or
pop
jp
xchg
arpl
rcrb
push
ljmp
mov
inc
push
push
xor
stc
pop
sbb
outsb
imul
mov
ret
jbe
dec
push
cmp
sbb
jecxz
sbb
cs
or
jecxz
cmp
push
popf
inc
popa
pop
aaa
je
push
movsl
add
xchg
inc
insl
clc
add
mov
push
mov
cmp
push
xchg
sbbl
push
ds
outsb
stos
rcl
mov
mov
jp
dec
cmp
add
cld
inc
add
sbb
adc
gs
outsb
xchg
or
divl
and
popa
and
mov
push
and
dec
pushl
imul
dec
shr
pop
mov
jge
lret
and
xor
sbb
pop
insl
push
mov
add
int
test
idivl
cmp
into
jmp
daa
cmp
add
mov
xchg
out
loopne
pop
enter
test
aad
dec
cmp
scas
mov
out
cmp
mulb
sti
cmp
and
inc
fwait
lret
cmp
outsl
in
xchg
xor
inc
push
lods
ficomps
jb
cmpsl
sbb
jo
dec
lock
rcrl
jle
pop
cli
jmp
jbe
sbbb
sub
adc
sub
xor
notb
inc
js
inc
lods
sub
mov
or
jp
cmpsl
jnp
movsb
sbb
sub
mov
aam
or
or
rorl
sbb
adcl
hlt
sub
repnz
inc
popa
nop
jb
out
mov
out
xchg
mov
aad
stos
call
cmpl
insb
add
jp
xor
cmpsb
and
pop
ds
int3
fs
div
push
mov
test
xor
test
push
mov
clc
pop
lcall
jo
xchg
and
push
test
xor
mov
push
pop
iret
lea
sub
vorpd
shlb
mov
pop
xchg
scas
dec
or
xchg
push
outsl
popa
mov
orb
inc
push
inc
mov
iret
shlb
xchg
clc
or
xor
hlt
mov
loopne
sbb
pop
ret
xchg
and
repz
mov
inc
sbb
sbb
jl
call
or
setle
cmpxchg
mov
out
inc
rcr
mov
adc
xchg
push
add
adc
pop
icebp
jecxz
test
xchg
loop
jecxz
sbb
sarb
xchg
inc
fcomi
mov
xchg
add
xchg
ljmp
pop
mov
pop
enter
pop
lock
push
sahf
in
xchg
inc
sbb
fisubrs
xor
out
add
popa
lock
pop
push
dec
inc
jmp
int3
cld
xchg
repz
clc
push
inc
cmp
push
mov
mov
mov
rclb
adc
or
mov
jns
ja
mov
mov
xor
add
in
xlat
inc
push
test
cmpsb
test
pop
mov
or
out
lahf
pop
les
in
push
pop
repnz
pop
pop
mov
test
inc
pushf
sti
inc
orl
pop
je
rcl
xchg
xchg
fistpl
cmpl
stos
sub
jnp
sub
es
bound
cld
add
aam
xchg
outsl
in
push
add
hlt
xchg
lods
lds
push
daa
arpl
subl
or
push
lock
ss
mov
dec
sub
mov
ret
leave
mov
popa
cmp
push
xchg
xor
add
sahf
imul
call
sub
or
inc
mov
jne
adc
push
and
insl
int3
mov
pushl
and
mov
cmp
sbb
xchg
mov
fdivl
out
shll
fistl
xchg
xlat
clc
stos
imul
jp
pushl
out
pop
jmp
sub
mov
in
xchg
push
pop
pop
shrb
jns
push
outsl
in
sti
jns
cmp
loopne
xor
pop
add
xor
xchg
aaa
cs
xchg
sub
or
and
mov
fwait
stos
sbb
mov
push
lret
es
mov
data16
mov
into
fsubs
push
fcmovnu
pop
movsb
xor
fwait
hlt
enter
addr16
jae
mov
ljmp
push
jne
pop
outsb
push
rcrl
xchg
add
cmp
data16
push
pop
stos
mov
or
mov
lods
aam
inc
in
sub
xor
in
and
lret
lds
fisubrl
lcall
jg
add
sbb
ds
jge
fs
dec
pop
es
es
sub
add
jge
mov
mov
jecxz
scas
bound
loope
push
add
lret
dec
gs
push
add
call
pop
dec
pushf
jns
sub
call
dec
in
ret
mov
roll
lret
int3
sub
xchg
cli
movsb
push
ljmp
fistl
js
jnp
mov
pop
mov
cltd
mov
add
add
in
push
sbb
pop
ret
vmread
cld
xchg
mov
jl
fstpl
daa
andl
push
mov
les
or
test
das
jmp
pop
dec
push
adc
out
call
gs
popf
mov
sbb
cmp
out
xor
shrl
ret
out
mov
cmp
jne
hlt
pusha
cwtl
inc
adc
test
dec
xchg
cs
sbb
pop
into
roll
mov
cmc
or
or
adc
fldl
push
cltd
pop
dec
pushf
fwait
repz
or
mov
lds
out
inc
fiadds
push
ficomps
xor
ja
mov
sti
pop
int
cmpsl
out
add
mov
adc
xchg
mov
movsb
movsb
pop
sub
mov
test
mulb
mov
add
aam
cmp
jns
mov
push
insl
xchg
adc
dec
cltd
xchg
into
ret
mov
decb
shrb
sub
frstor
xchg
xor
cli
in
mov
ficomps
aas
out
jecxz
mov
or
fildl
pop
loopne,pt
xchg
sbb
iret
cld
pop
pop
daa
jns
comiss
mov
fs
test
xor
ret
lods
or
leave
ret
mov
aad
mov
sbb
lret
pop
dec
sbb
inc
outsl
mov
adc
clc
repz
test
into
push
push
dec
pop
xchg
cs
xchg
adc
rcl
in
loop
dec
lods
dec
inc
mov
jae
call
imul
push
and
cmp
or
je
rorb
les
ret
sub
jmp
pop
lods
pushf
in
pop
arpl
mov
xor
inc
inc
test
cmp
aad
jb
jae
outsb
test
adc
jmp
xchg
cmp
inc
jl
adc
lock
stos
jno
xchg
shl
cmc
lods
sub
xor
or
jae,pn
adc
ljmp
out
push
mull
mov
cmpl
push
adc
add
outsl
xchg
outsl
dec
fisubs
sub
addb
test
mov
enter
notl
pop
cmp
jo
sbb
sti
imul
fwait
loopne
faddl
mov
ficompl
loope
lcall
cld
or
lods
xchg
push
arpl
mov
in
cwtl
lcall
push
mov
out
sar
fs
xchg
inc
std
xor
shr
das
jge
lcall
sti
adc
jo
xor
mov
dec
jae
ret
xchg
cmp
into
adc
adcb
out
cwtl
fsubr
mov
sub
push
xchg
call
dec
dec
lods
lea
add
pop
and
aad
inc
dec
repnz
std
testl
testb
mov
fimull
pop
aaa
sbb
pop
sub
lret
mov
lret
xor
nop
mov
mov
gs
fs
std
pop
movsb
cmp
or
mov
push
pop
dec
loopne
inc
nop
orl
xchg
test
jns
repz
loopne
mov
popa
sahf
inc
or
scas
testb
push
sub
xor
aaa
flds
stc
rol
ret
inc
ljmp
pop
and
and
pushf
push
iret
jmp
cmp
icebp
push
aaa
sbbl
xchg
movsb
loop
repnz
in
adc
add
xor
and
push
jb
inc
je
mov
mov
movsb
loop
repnz
in
adc
add
xor
and
push
jb
inc
je
mov
int3
xchg
movsb
loop
repnz
ret
in
int3
xor
xor
and
push
jb
inc
push
push
mov
mov
movsl
loop
repnz
in
jmp
scas
test
adc
fdivr
mov
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xlat
dec
les
hlt
push
idivb
or
shll
clc
adc
add
xor
xor
mov
les
push
test
mov
movsb
push
push
enter
loopne
clc
push
cmpsb
add
xor
and
insb
out
ss
data16
mov
in
stos
and
sbb
add
pusha
fidivrl
mov
cmp
loope
stos
stc
adc
daa
sub
add
xor
repz
fwait
je
popa
xchg
xlat
sub
mov
pop
cwtl
test
popf
pop
xor
fcomi
sub
addl
pop
in
loope
fcoms
enter
push
add
inc
fs
jl
jg
dec
lods
pop
adc
imul
dec
call
inc
cmp
pop
lcall
push
and
sub
jns
push
jmp
je
and
push
loop
int3
sti
sub
cmc
sbb
insl
jmp
pop
xchg
cmp
inc
mov
ds
xchg
cltd
loopne
fnsave
daa
rorb
sbb
js
or
sbb
fidivs
ljmp
push
mov
mov
add
adc
lods
ljmp
mov
test
dec
add
pop
faddl
cltd
push
mov
adc
pop
loope
inc
inc
icebp
or
test
sbb
insl
imul
cmp
adc
inc
test
mov
movsb
cmp
fdivs
clc
adc
add
xor
and
aam
les
push
test
mov
movsb
cmp
fdivs
clc
adc
add
xor
and
aam
bound
ss
call
push
lret
test
das
pop
mov
test
or
pop
or
loop
outsb
imul
iret
cltd
dec
stos
xchg
fs
unpckhps
adc
push
cmpsb
jecxz
xor
adc
scas
out
test
xlat
add
int
mov
and
repnz
mov
call
test
into
js
iret
fldt
mov
mov
test
cmp
mov
scas
shrl
test
mov
push
sbb
fidivs
add
in
push
mov
test
mull
xor
push
std
pushl
or
jb
sub
jmp
loop
iret
lock
mov
jae
mov
cmp
sub
inc
jmp
loop
int3
aaa
add
in
out
lcall
or
sub
push
sbb
push
jge
fisubrs
push
int3
js
test
jmp
movsb
mull
enter
xorb
push
cld
push
insl
mov
fdivrp
mov
insl
push
shlb
popf
sbb
xchg
cmpsl
jmp
mov
adc
jo
gs
dec
mov
ret
fcomps
mov
push
into
and
imull
sub
pop
movsb
jmp
dec
pushf
shrl
subl
sar
and
dec
push
jecxz
push
push
sub
xchg
js
or
test
jae
push
mov
inc
jp
push
dec
dec
inc
inc
dec
xor
cmp
insl
sbb
mov
sub
push
xchg
cmpsl
mov
pop
pusha
xor
add
mov
arpl
or
xchg
mov
rcr
xchg
cltd
jbe
pop
mov
data16
inc
and
pop
jl
scas
push
pop
jae
loope
ret
movsb
mov
ds
dec
inc
or
dec
lret
mov
enter
fidivrl
or
jge
adc
push
jecxz
cmpsl
lahf
mov
dec
icebp
mov
movsl
cs
pop
jmp
lcall
pop
loopne
das
popa
sbb
js
pop
or
aad
out
int
pop
dec
jecxz
or
aaa
shll
scas
nop
rol
ror
jns
insb
add
sbb
ja
lret
test
cld
mov
ja
icebp
aaa
xlat
mov
fnstcw
xchg
dec
sub
sub
loopne
push
fdivr
mov
adc
scas
nop
fwait
out
pop
cmp
pop
fdiv
insl
xor
adc
push
std
push
repz
cmc
mov
pusha
mov
scas
icebp
jmp
mov
or
mov
cmp
cmpb
lahf
outsb
cmpsb
shrb
cmp
hlt
mov
or
popa
xchg
movsl
push
fisttpl
movsl
sbb
xor
mulb
aam
push
mov
sub
or
es
lods
call
rclb
push
adc
pushf
mov
xchg
pop
shl
mov
mov
adc
cmp
in
popf
ss
fwait
cltd
sbb
aaa
dec
mov
pop
rorb
sti
jge
outsb
loop
in
insb
shrl
inc
sbb
adc
out
cmc
sarb
jp
lret
in
jecxz
lahf
add
imul
notb
jge
pop
rcrb
jg
or
enter
fwait
mov
xlat
loopne
push
and
test
jno
inc
fmul
sahf
jnp
arpl
mov
add
leave
test
dec
push
pop
stc
fdivrs
iret
dec
cmp
push
scas
fsubrp
ds
arpl
pop
lods
mov
icebp
ljmp
push
jmp
xchg
cltd
cli
lea
in
repnz
lods
data16
lret
loope
pop
push
pop
outsl
and
in
into
es
xor
int3
test
data16
in
mov
sub
add
pop
pop
sbbl
jmp
lds
xchg
and
sub
movsb
orl
cmp
popl
scas
jl
addr16
pop
push
icebp
jge
dec
push
or
push
push
int3
jnp
pusha
xor
aas
inc
clc
arpl
call
inc
sub
hlt
inc
pop
data16
push
scas
add
mov
fisttpll
pop
sbb
lea
mov
jne
incb
imul
adc
cmp
mov
cmp
jp
jno
mov
loope
jno
push
js
jmp
clc
clc
clc
inc
and
cld
fisubrl
gs
fadd
jmp
stos
cmp
mov
jge
cmc
cmp
jne
add
das
inc
xchg
rcr
shlb
or
xchg
repnz
shll
repnz
sub
cmp
push
add
push
imul
lds
insl
push
movsb
dec
sbb
out
mov
test
int
xlat
sbb
daa
enter
inc
shrb
pop
fcomps
int
jbe
fstpt
push
cmp
sbb
mov
pop
inc
mov
ja
cmp
in
ret
jno
loope
xchg
or
shll
add
or
push
dec
in
add
xor
or
mov
cld
into
jae
or
mov
pop
mov
lods
int3
cmp
pop
push
ret
pop
cmp
xchg
push
std
mov
xor
jb
out
scas
pop
loopne
and
sbb
addl
pushf
les
mov
hlt
xor
pop
add
repz
cltd
mov
sub
mov
cmp
sbb
sbb
push
and
inc
jno
into
lret
cld
sbb
mov
mov
call
cli
adc
sbb
or
jg
xchg
or
mov
addr16
lock
pusha
clc
aaa
dec
xchg
cld
aaa
mov
and
jl
stc
sbb
inc
ljmp
push
cmp
push
fadd
mov
add
cmp
sbb
sbb
add
mul
shll
sarb
mov
add
xchg
insb
jge
ljmp
fdivs
push
cmpsb
ds
pop
push
mov
mov
mov
dec
mov
xor
and
sbb
sbb
mov
push
cmp
ss
xchg
adc
ficompl
sti
inc
cmpb
mov
dec
cmp
inc
loope
dec
stos
int3
daa
pop
mov
ss
popf
fimull
arpl
adc
pop
cmp
das
nop
dec
pop
lret
sbb
ljmp
sub
sbbb
or
inc
mov
inc
cwtl
sbb
mov
mov
insl
cmp
pop
int3
scas
adc
xor
mov
testb
ffree
leave
cwtl
inc
xchg
pop
push
push
xchg
mov
push
push
incb
aam
lret
add
mov
fcompl
xchg
xlat
pop
mov
inc
lea
push
cmp
inc
lock
out
pop
inc
push
in
sub
mov
iret
sbb
stos
shll
stos
out
aaa
ja
dec
inc
xor
sbb
mov
adc
fwait
inc
cwtl
in
and
test
mov
pop
jg
and
or
jp
mov
js
push
add
into
leave
imul
out
pushf
dec
sbb
pop
dec
mov
inc
arpl
lea
cmp
and
pop
and
or
fmulp
xchg
scas
pop
inc
and
cmp
dec
incb
daa
fdivrl
stc
filds
xchg
je
mov
out
mov
and
in
or
dec
mov
adc
dec
adc
pop
pop
sbb
arpl
test
pop
insl
sahf
ds
adcb
pop
adc
out
out
mov
lcall
mov
std
cmc
pop
iret
or
push
dec
mov
cmp
or
cmc
cld
jp
jb
sti
add
add
test
aam
clc
xchg
movhps
out
xchg
int
sub
mov
addr16
test
fs
test
mov
push
dec
lea
or
aas
sbbb
sbb
mov
mov
fucomi
fsubl
pop
cs
inc
mov
shlb
outsl
dec
push
push
sub
std
push
pop
push
scas
in
sub
aad
sbb
mov
or
addr16
daa
push
inc
xchg
dec
loopne
repnz
or
insl
push
inc
movsl
cmp
inc
lds
xchg
movsb
sub
mov
push
ljmp
sub
frstor
in
pop
loop
cmp
pushl
mov
or
jno
cli
leave
jne
jno
dec
dec
pop
vpacksswb
mov
das
fisubrs
ret
cmp
fidivrs
movsl
jmp
jge
xor
jo
mov
push
cltd
pop
out
sti
int3
jge
sbb
in
jo
inc
pusha
decb
mov
lea
popf
test
inc
sarl
fsubl
shlb
xchg
jle
add
jo
or
jecxz
loope
mov
mov
pop
jae
mov
lea
jnp
push
fdivrs
xor
pop
scas
jl
bnd
lds
pop
shlb
inc
cli
fbstp
cmp
xchg
push
arpl
fisttps
fldenv
cmp
xchg
fimuls
xchg
add
lea
jl
outsl
push
movb
int3
sub
jmp
xchg
out
je
iret
cmp
repz
les
shll
xchg
mov
test
xchg
mov
push
lea
gs
test
ds
sub
and
inc
fcompl
out
icebp
ja
addb
roll
xchg
popa
das
nop
sbb
jns
adc
cmpsl
ss
and
ds
xor
mov
test
pop
icebp
sub
and
and
inc
inc
hlt
fsubs
cld
repnz
test
bnd
cli
pop
dec
jae,pt
mov
xchg
xchg
xchg
push
mov
sti
pextrw
push
lret
mov
sub
aad
fisubrl
push
out
loopne
adc
inc
push
cmp
js
push
arpl
ret
adc
push
sub
aas
movsb
xchg
add
inc
adc
shrl
sub
mov
test
sahf
and
lret
dec
fdivrs
cmc
repnz
push
dec
mov
cmpsl
mov
mov
fidivrs
mov
lret
ficompl
in
pop
mov
xchg
fists
aad
xchg
in
movsl
out
pop
addb
nop
rcr
in
imul
mov
aad
out
or
cmpsl
mov
pop
test
fcoms
jbe
pushf
int3
into
ljmp
sub
cltd
hlt
jo
add
icebp
cmp
add
aam
pop
push
sbb
adc
xchg
sub
add
xchg
pop
test
rcll
in
jl
es
fstpl
div
ds
dec
ret
in
jp
arpl
popf
mov
xchg
push
xor
add
int
icebp
data16
std
dec
das
add
adc
inc
ljmp
shrl
dec
adc
adc
pop
enter
pop
popa
add
and
xchg
xor
dec
cmp
int3
jecxz
iret
sti
xchg
xchg
into
fsub
mov
dec
add
fcom
xor
pop
inc
out
mov
inc
arpl
or
repnz
xchg
xchg
outsl
cmp
test
sub
mov
pop
dec
sbb
jl
or
add
sbb
mov
in
cmp
jne
mov
cwtl
adc
ja
xor
fwait
out
out
stc
inc
icebp
xlat
jno
mov
out
arpl
sbb
call
scas
xchg
mov
das
out
cmc
pop
dec
add
xchg
lahf
lods
sbb
dec
pop
insb
adc
out
cmp
fldl
cltd
inc
rcrl
hlt
aad
push
out
cmp
mov
je
push
testl
stc
inc
stos
cs
dec
shr
loope
inc
cld
pop
das
jne
xchg
enter
sbb
cmovs
jge
push
push
xor
out
aaa
cltd
mov
mov
fcmove
push
dec
repz
inc
in
fs
popa
ficoml
popf
aas
mov
xor
mov
test
mov
sub
pextrw
lcall
mov
add
in
lcall
cmp
xor
ds
popa
push
imul
fstpt
xor
ljmp
stc
ljmp
daa
cmpsb
sbb
into
bound
std
aaa
sbb
dec
lea
ss
imul
lds
nop
push
test
fldl
lret
ja
sub
add
mov
add
or
imul
repz
sbb
ljmp
push
jb
or
cmc
xchg
mov
rclb
daa
xchg
pop
dec
add
xchg
xchg
jle
or
or
movsb
in
xchg
fsts
scas
test
jmp
push
mov
inc
push
fcmovu
repz
dec
sbb
ljmp
lcall
repz
cmp
pop
pop
mov
stos
in
dec
xchg
in
mov
sbb
outsb
loop
jo
xchg
lods
xchg
lret
xor
or
jno
jo
test
sub
sahf
in
cld
repz
pop
xlat
mov
mov
inc
or
and
ss
int3
cmp
add
or
xchg
mov
push
jb
jo
mov
rorb
add
out
dec
into
or
rcll
data16
icebp
fistpll
fldcw
xor
enter
adc
outsb
addr16
outsb
mov
mov
jg
xchg
test
jns
sub
mov
into
adc
or
add
fiadds
xchg
jp
ret
xchg
cmpl
jl
sbb
test
icebp
sub
fstpl
push
nop
xchg
mov
loope
imul
and
sub
insw
mov
jle
loope
cmp
mov
gs
push
xor
rcll
cmpl
sbb
and
fstpt
test
pop
push
lock
loope
xor
push
repz
jae
sub
pop
orl
mov
int3
mov
lret
dec
movsl
xor
aam
lods
shlb
je
mov
jmp
pusha
xor
aas
inc
jl
addr16
dec
and
aas
inc
dec
or
xchg
add
pop
push
cmp
adc
cmp
movsl
sbb
sub
pop
rcrb
sbb
lret
fadds
push
cmp
out
outsb
lods
xor
loope
mov
decl
jbe
pop
pop
js
push
ja
addr16
nop
adcl
test
jae
cmpb
hlt
inc
shlb
sbb
xlat
out
sbb
cmpl
sbb
out
scas
lods
xor
and
xchg
or
leave
mov
dec
nop
std
xchg
xor
pusha
cli
mov
ret
loope
fs
mov
adc
jo
std
stos
adc
xchg
stos
push
outsb
and
mov
pop
sub
fldt
test
mov
out
std
push
out
repnz
shl
insb
and
leave
xchg
and
out
mov
outsb
add
outsb
xchg
aam
cmc
cmp
cmp
mov
nop
leave
repnz
gs
pop
or
sub
ljmp
es
mov
ss
mov
aad
js
sbb
sahf
xchg
cld
jmp
pop
insb
mov
pop
fxam
adc
mov
sbb
mov
data16
arpl
sub
out
fdivl
test
dec
setbe
jns
into
jnp
sub
sbb
imul
orl
lods
sub
xchg
lret
dec
decl
xor
inc
mov
lods
pop
leave
and
dec
scas
imul
cmc
iret
and
jo
addb
xlat
or
fisttpll
out
pop
subb
mov
adc
in
jbe
dec
pop
and
or
cltd
push
aam
test
sahf
pusha
mov
lock
mov
adc
jp
inc
jge
rcl
cli
lahf
sub
jno
pop
sub
movsb
and
push
adc
mov
mov
add
cmpl
pushf
mov
cmp
mov
aam
shll
loopne
clc
push
movsl
es
mov
push
orl
nop
stos
sbb
mov
mov
sbb
call
xor
outsb
cmp
into
adc
jge
aaa
jb
test
pop
inc
pop
clc
jp
cmpsb
sub
pop
in
test
lea
push
push
icebp
jb
cmc
xor
sbbb
pop
xor
inc
jae
fs
jb
fsts
add
cmp
inc
push
sub
sti
cld
or
cmp
ss
push
dec
jl
jnp
popf
push
dec
mov
sti
call
sti
dec
sub
outsb
jge
push
cmc
sub
test
repnz
insb
push
pusha
iret
xor
bswap
nop
mov
cltd
ds
bound
cwtl
icebp
loop
je
jmp
mov
bound
jg
push
pop
and
dec
mov
ljmp
jmp
and
pop
xor
push
std
push
push
aam
adc
xor
ret
rolb
mov
lea
stos
adc
or
mov
int3
dec
sarb
jnp
push
or
pop
gs
es
mov
mov
jle
xchg
fisubrs
mov
push
inc
lcall
push
data16
fisubrl
outsl
jne
and
inc
nop
movsl
pop
xor
add
leave
jp
shll
outsb
sahf
mov
lahf
insl
mov
push
inc
xchg
sub
push
ret
mov
cmc
pop
cltd
fimuls
jg
dec
lea
mov
mov
or
sub
cmp
sahf
push
lods
xor
imulb
mov
sti
xchg
dec
daa
dec
sub
cmpsb
push
repz
jecxz
mov
leave
lret
pusha
leave
mov
add
pop
inc
fistps
sbb
imul
pop
sub
clc
test
add
rcll
add
movsb
int
xor
in
dec
mov
adcl
loope
lods
cmc
mov
mulb
xchg
inc
sbb
imul
stos
scas
jno
out
lea
stos
xor
ficoms
cld
and
and
dec
stos
add
bound
fstenv
into
scas
ss
aam
add
push
sbb
out
jae
mov
sub
shll
lret
test
les
test
scas
pushf
mov
jae
cmc
mov
aaa
es
dec
sbb
call
and
jb
adc
stos
je
insl
jge
dec
jg
mov
cwtl
cli
add
movsb
gs
dec
nop
xor
imulb
std
or
movsl
dec
xchg
mov
scas
ljmp
loope
sub
push
sbb
sbb
enter
test
push
arpl
aad
call
les
lret
or
push
into
sub
or
lret
xor
lahf
lods
in
imul
or
pop
inc
scas
ljmp
mov
xchg
imul
cmp
push
cmpsb
xchg
call
inc
aaa
loopne
fisttps
insl
imul
sahf
mov
ss
or
pop
inc
mov
loopne
fistl
ret
shll
cmpsb
jle
cmp
lods
decb
cmp
mov
insl
int
fildll
data16
imul
or
jne
or
test
js
leave
out
mov
mov
push
mov
jecxz
gs
mov
jmp
sub
jmp
inc
arpl
fwait
jge
adc
leave
sub
jp
push
push
cmp
dec
xchg
loope
xchg
push
jl
dec
xchg
adc
fmuls
mov
xor
pop
add
add
in
icebp
mov
mov
dec
shlb
lahf
cmp
mov
adc
into
sub
add
sarl
dec
mov
xor
jno
jne
push
sti
jne
aaa
out
mov
jb
and
in
push
pop
xor
pop
mov
mov
xchg
or
mov
or
add
cltd
push
cmp
dec
jmp
xlat
bound
aas
jg
dec
icebp
int3
jl
pop
jmp
mov
imul
xorl
inc
repz
sub
dec
adc
mov
xchg
add
and
jbe
insl
jle
xor
stos
mov
out
mov
ficompl
or
add
test
test
dec
pushf
stos
enter
mov
ss
jp
fwait
lock
stos
sbb
and
testb
hlt
xor
fcoml
icebp
xchg
push
lds
adc
pop
xor
insb
sbb
aaa
or
or
test
les
push
mov
inc
mov
mov
shrb
cmp
popa
into
cmp
lret
icebp
and
or
aam
loop
mov
scas
cs
mov
or
cmp
cmp
unpcklps
and
xchg
das
push
repnz
fs
dec
in
or
in
jecxz
popa
xor
bound
stos
and
test
jg
add
fldenv
fidivl
dec
or
sbb
test
push
sbb
pop
sahf
jmp
ja
js
xor
inc
sbb
cmp
push
imul
push
das
mov
mov
sbb
jns
shl
cs
or
jmp
sub
push
cmp
jo
push
cmc
insb
inc
or
lret
les
jne
mov
in
xchg
or
push
enter
call
add
xor
and
aam
les
push
test
mov
movsb
cmp
fdivs
clc
adc
add
xor
and
aam
hlt
push
xchg
jo
jl
or
push
leave
inc
faddl
adc
xor
int3
pop
shrb
xchg
or
push
aaa
mov
arpl
mov
lret
rcr
rclb
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsl
and
ficoml
sub
push
cmp
jp
dec
test
das
in
hlt
or
sbb
loop
cli
xor
stos
gs
xor
movsl
jp
test
sub
sbb
xor
sbb
mov
inc
bound
movsl
push
xchg
sub
cmp
or
imul
and
lcall
pop
es
inc
fdivp
insb
jg
dec
cmp
adc
and
push
cwtl
cli
jne
clc
mov
mov
dec
mov
mov
scas
cmc
stos
scas
mov
test
xlat
pop
shlb
sub
mov
sub
movsb
push
sbb
sbb
adc
jne
dec
cwtl
mov
pop
sub
inc
movsl
adc
mov
aad
in
lret
sbb
push
out
cmp
stos
pop
sub
fnstenv
outsl
xor
xor
sub
bswap
arpl
xchg
movsl
xorb
hlt
cmp
fldenv
mov
stos
gs
jne
inc
and
movsl
call
xchg
dec
in
cmc
or
jle
cwtl
and
mov
les
iret
add
aad
lods
sbb
cmp
inc
xchg
push
mov
mov
mov
dec
jb
lea
jbe
out
jmp
das
loop
pop
sbbb
mov
leave
mov
insl
out
push
mov
push
push
jp
dec
test
sub
cmp
or
sbb
ljmp
adc
mov
push
push
jp
dec
test
sub
cmp
or
sbb
ljmp
shl
nop
fcmovnu
inc
jns
mov
out
loopne
and
add
push
test
out
jmp
mov
cltd
shlb
xchg
fdivl
dec
sbb
xor
mov
cmp
sbb
test
addb
mov
jge
fwait
jnp
fidivrl
jp
das
mov
shlb
add
enter
xor
jmp
gs
outsb
dec
fsubl
mov
ja
dec
mov
in
icebp
rcll
imul
ret
dec
shlb
fimuls
out
push
dec
lods
pushf
call
lods
dec
adc
sub
push
cld
scas
shll
xor
stos
cmp
add
ret
test
jb
lret
jae
iret
enter
lret
aad
lods
lods
loopne
movsl
repz
in
inc
cmp
ss
sarb
sahf
ja
repz
jle
push
outsb
addb
or
pop
push
je
adc
out
rclb
xchg
pop
bound
cmp
out
lods
push
jle
sti
cltd
and
xchg
inc
inc
mov
clc
sub
ljmp
pop
fcmovb
lcall
lret
xor
mov
add
and
add
mov
mov
mov
fcoml
cwtl
fidivrl
stos
xor
sbbb
outsl
adc
xchg
out
loopne
push
push
dec
mov
dec
not
xchg
fmull
push
inc
push
dec
in
loope
popa
inc
or
mov
xchg
adc
lret
stc
sbb
stos
adc
or
jmp
rcrb
std
hlt
cs
xchg
mov
out
ret
cltd
out
sub
push
xor
or
std
stos
in
scas
in
add
mov
xor
and
jb
push
lock
adc
jno
fnstsw
std
mov
test
lahf
jecxz
mov
hlt
push
push
sub
adc
xor
jb
out
push
imul
and
sbb
sub
cmp
repnz
ds
pop
cltd
xchg
movsl
xor
repz
ficompl
fdivp
mov
xchg
jae
pusha
repz
push
pop
mov
rolb
bound
adc
imul
aas
sub
shrl
pop
out
aaa
lret
jno
push
sahf
pop
or
or
pusha
jnp
stos
or
daa
shl
lods
lret
xchg
aam
repnz
out
mulb
sub
je
mov
rol
pop
loopne
xchg
xor
lods
push
mov
xchg
es
pop
xchg
jne
xchg
mov
cltd
cmp
aaa
push
in
pop
ror
scas
jns
mov
out
lret
scas
insl
pop
jg
out
dec
in
dec
adc
rcll
and
mov
jns
loop
icebp
dec
sahf
aam
pop
pop
imul
dec
roll
mov
inc
mov
jge
dec
jl
sbb
imul
or
es
int
push
les
sbbb
push
pop
loope
push
or
push
xchg
jecxz
jg
stos
out
in
sub
jl
and
movsb
add
dec
add
mov
xor
xor
fwait
ss
idivb
sbb
adc
loope
in
jo
mov
pop
fcmove
cmp
pop
sub
sub
pushf
mov
jno
loopne
lret
mov
std
movsb
leave
mov
outsl
mov
xor
xchg
mov
cmp
push
rolb
push
test
cmc
pop
in
sub
test
sub
mov
aaa
xor
sbb
xor
sbb
in
lcall
daa
insl
mov
jno
cli
dec
xlat
in
ja
lcall
jle
mov
cwtl
inc
cmp
repz
adc
cmp
pop
ljmp
push
cmp
and
orb
nop
scas
sub
movsb
lcall
gs
fcomi
out
mov
gs
sbb
jae
jg
jl
fisubrl
dec
push
cmpb
pop
jno
ja
in
and
add
lock
cmp
xchg
mov
mov
aas
mov
xlat
jne
mov
push
gs
inc
shrb
mov
inc
jl
aam
add
je
mov
adc
test
loopne
popf
inc
add
loope
outsb
adc
xor
jbe
push
imul
out
dec
jae
cmp
xor
mov
bound
bound
pop
mov
inc
mov
insb
out
mov
hlt
cmp
adc
pop
mov
test
push
inc
cmp
sub
dec
subl
sub
jle
in
arpl
popa
xorl
mov
pop
xchg
enter
mov
push
out
dec
pop
mov
inc
stos
das
in
aaa
dec
dec
cmp
ds
aam
pop
sti
pop
pop
xor
lock
and
movsl
stos
outsl
mov
dec
jl
adc
out
dec
pop
xlat
les
sbb
imul
xor
hlt
stos
cli
out
aas
pop
sbb
push
gs
js
sbb
cmp
test
sbb
pop
pop
aam
push
sti
lahf
push
xchg
and
mov
rolb
lret
dec
lock
inc
mov
cld
aam
cli
mov
popf
in
loope
mov
out
mov
paddsw
lea
or
adc
xchg
push
xor
mov
gs
and
popf
cltd
imul
repnz
test
stos
rorl
js
adc
in
adc
mov
sbb
push
sar
dec
ja
and
repz
inc
inc
dec
and
or
mov
push
lahf
popf
and
negb
and
lahf
shrl
gs
ds
sbbl
roll
push
clc
mov
jno
loope
test
cmp
stos
lcall
std
lods
insb
fisttps
scas
inc
jae
std
xor
sbb
jmp
pushf
jecxz
out
and
popa
bswap
adc
cmp
mov
cmc
nop
enter
aaa
inc
push
mov
cwtl
adc
cld
data16
ljmp
sbb
mov
xchg
pusha
mov
imul
push
xchg
add
stos
fs
inc
test
ret
xor
adc
pop
xchg
rolb
pushf
test
pop
mov
imul
rep
mov
jp
addb
jl
out
and
add
jmp
rclb
cmpsl
jl
mov
jae
sub
mov
std
mov
outsb
fists
xchg
imul
jmp
mov
int
mov
aad
jo
outsl
test
cmc
mov
push
aam
out
xor
and
scas
inc
push
push
clc
pop
cltd
call
fistl
repz
adc
mov
dec
cmpl
orl
xchg
in
mov
bnd
pop
adc
dec
add
mov
sub
add
or
jge
stc
in
inc
lret
xchg
loopne
popa
mov
int
divb
stos
les
pop
lods
arpl
in
xor
cmc
fistps
cli
rcrb
test
adc
orl
add
cld
adc
add
sub
loopne
dec
xor
popa
ljmp
add
or
cli
mov
mov
filds
mov
pop
or
xchg
cmp
rcl
movsb
sti
cltd
popf
out
jo
imul
mov
pop
mov
mov
lods
out
sbbb
sbb
test
out
mov
icebp
push
cmp
sub
js
fdiv
cmp
cld
jmp
sub
jbe
cmp
mov
pop
jl
cmp
roll
stos
or
inc
xchg
dec
rol
xchg
add
ja
jp
int3
mov
shlb
push
jl
lret
jno
pushf
sbb
movsl
dec
fsubp
ljmp
cmp
or
sub
adc
mov
decl
mov
adc
jns
xchg
cmp
ror
push
push
inc
orl
jp
dec
mov
lret
rcll
or
adc
adc
or
sahf
sbb
jle
jmp
mov
pop
mov
cmp
add
xchg
inc
cmp
or
xchg
daa
andb
jae
leave
sbb
test
sti
and
cs
pusha
ljmp
call
sbb
add
mov
xor
push
fsubs
add
test
stc
aam
and
outsb
mull
xor
dec
xor
ffreep
nop
hlt
lock
popa
mov
pushw
pop
dec
mov
call
popf
jnp
aas
imull
jle
mov
hlt
cmp
cs
sbb
pop
insl
mov
sbbl
shrl
es
sti
mov
pop
cmovb
mov
mov
jmp
cmp
ficoml
lea
arpl
cmpsl
cmpsb
jl
gs
testb
push
jecxz
pop
je
sub
sbb
xchg
push
mov
add
xchg
fidivl
rep
scas
rclb
icebp
cli
bound
push
push
jge
imul
jb
pop
mov
icebp
xor
jns
lret
mov
dec
icebp
pop
adc
bound
sbb
fs
roll
fwait
cmp
adc
jecxz
add
stc
test
test
push
in
add
aas
std
xchg
xchg
fsubr
clc
jne
test
mov
xor
pusha
stos
in
mov
insl
xlat
mov
inc
sbb
lahf
cmpsl
loop
mov
xor
or
pop
pop
inc
lock
iret
mov
test
ja
inc
inc
push
fucomp
mov
sub
lret
xchg
pop
je
sub
in
push
cs
aam
push
out
lcall
pop
sub
or
add
in
mov
movb
cmpsl
lea
movsb
fcomi
repz
popa
je
int3
rorl
rclb
xchg
pop
mov
movsb
mov
dec
pop
lret
mov
or
nop
rolb
daa
jne
mov
insb
jae
pop
pop
pop
mov
ja
je
inc
adc
and
pop
out
xor
lock
arpl
adc
pop
loope
in
data16
shl
xchg
jo
push
push
addr16
pop
adc
xor
rorb
sarb
imul
and
jbe
cmp
lret
movsl
push
or
lcall
mov
cmpsl
lds
sbb
mov
mov
shlb
imul
mov
sbb
in
push
cmpsb
jno
daa
rcrb
cmpsb
ret
jge
test
mov
arpl
ret
in
jp
cmpsl
xor
pop
and
cs
push
sbb
xor
pushf
fistpl
sub
cld
icebp
sbb
xlat
int
pop
pop
es
xor
aam
es
jle
sub
cld
mov
outsl
rorb
mov
jbe
sub
push
push
data16
or
stc
adc
not
dec
mov
pop
dec
in
cmp
aaa
add
subl
ja
mov
xor
lods
sbb
mov
add
dec
mov
subl
add
dec
xchg
mov
mov
sub
out
and
push
jns
fcomip
cmp
jge
in
adc
scas
inc
notb
hlt
mov
xchg
in
xchg
mov
dec
xor
jmp
xchg
arpl
lea
or
les
cmp
loope
icebp
lods
jns
push
fmull
aaa
push
or
movsb
xor
shlb
lds
pop
data16
hlt
cmpsl
push
sbbl
sub
por
ret
jmp
lods
adc
mov
ss
repz
ficomps
cmpsl
sub
dec
lcall
adc
jge
lods
sub
lods
dec
and
dec
fstpl
scas
stos
mov
fadd
push
fdiv
or
es
sti
adc
pop
rolb
fidivrs
and
es
test
push
lahf
xchg
add
adc
jmp
sbb
jl
or
add
pop
lcallw
xorb
xchg
scas
lods
into
adc
movsl
sub
and
mov
adc
aaa
ret
push
mov
mov
bound
out
xchg
xor
xor
jg
lahf
push
xchg
pop
inc
les
pop
fidivrl
test
bound
ja
rcl
shlb
lock
jo
lds
hlt
call
sbb
push
mov
addr16
xchg
popf
gs
jnp
cli
mov
pushf
or
or
popa
insl
fdiv
cmp
cmc
push
adc
pop
aaa
test
scas
imul
jne,pt
cmp
dec
mov
xlat
imul
fisttpl
xchg
fisubs
loope
mov
scas
sbb
mov
xor
dec
insb
ja
adc
push
daa
lock
xor
fstl
mov
push
enter
fdivrs
popf
pop
inc
adc
add
jp
int
mov
sub
sbb
pop
xor
lods
pushf
xchg
pop
add
mov
popf
jp
adc
imul
clc
fidivl
dec
daa
mov
pop
rolb
or
mov
mov
mov
adc
add
jg
jbe
xor
lods
jo
into
out
sub
inc
push
jmp
mov
pop
or
inc
movb
inc
mov
xor
fsubs
aam
pop
pop
in
lret
jno
fdivrs
bound
adc
hlt
mov
xor
lods
jge
stos
call
stc
xchg
dec
repnz
gs
adc
and
or
add
rclb
adc
pop
inc
xchg
cmp
out
mov
add
cmp
jecxz
xor
out
or
xor
cmp
loope
dec
inc
je
cmp
cwtl
pop
popf
jo
or
mov
fstl
dec
icebp
lds
mov
out
xor
repz
pop
jb
aaa
xchg
mov
xchg
jecxz
push
xor
sbb
stc
cmpl
in
popa
cmp
popa
sub
inc
adc
add
divl
sbb
jae
push
in
mov
push
out
and
je
jo
icebp
xchg
arpl
jle
jnp
mov
dec
or
lcall
enter
sub
push
je
push
push
ret
ja
pop
ss
popf
hlt
xor
dec
orb
mov
mov
stos
lods
inc
mov
mov
loop
mov
sub
mov
or
or
nop
or
out
fsubs
or
mov
int3
xor
sub
and
push
jmp
sub
shll
mov
sbb
cmpb
int3
test
mov
push
out
sub
jmp
std
xchg
ret
jne
cmp
jl
inc
stc
xor
mov
or
or
xchg
sub
dec
xlat
hlt
lcall
hlt
test
pusha
sub
cmp
mov
cmpsb
inc
xchg
add
repz
push
adc
dec
out
mov
sbb
xchg
push
jp
pushf
adc
lock
cmp
sbb
loopne
cltd
push
sbb
lea
mov
inc
xchg
fdivs
mov
cli
movsl
lock
pop
sbb
into
pop
in
xchg
fsubrl
sub
pop
sbb
test
in
enter
xchg
ret
pop
idivl
popf
andb
nop
fsubl
in
jbe
or
rcrb
inc
pop
lods
xor
push
test
sbb
push
sub
loop
pusha
mov
adc
cmpsb
lahf
mov
push
addr16
stos
push
jmp
mov
or
mov
xchg
adc
sbb
jno
add
stos
mov
xchg
cs
cmpsb
rdtsc
mov
add
fcomp
add
mov
or
pop
ret
jge
jge
jge
pop
fiaddl
cmp
movd
mov
jp
pop
sbb
push
lods
cmpxchg
ds
in
xor
push
in
movsb
ss
testb
xchg
cmp
lret
fstpt
jg
outsl
jae
push
dec
aam
ss
sbb
mov
sub
imulb
lea
and
daa
leave
add
je
popf
repz
mov
inc
mov
add
into
jbe
push
xchg
pop
lcall
inc
jl
imul
mov
adc
lahf
add
mov
push
adc
scas
in
jae
mov
lea
pop
lds
dec
arpl
repnz
dec
fs
cmp
fld
jo
test
int3
adc
xor
lock
outsl
stc
adc
jge
mov
pop
and
ja
in
repz
dec
sub
cs
xor
add
push
mov
add
orb
and
in
jp
insl
mov
fwait
mov
cmp
cmp
xor
sarl
pop
sbb
jmp
xor
popf
negl
add
stos
int3
sub
outsb
fwait
lret
adc
inc
mov
ja
cmp
or
xchg
cwtl
pop
mov
pop
mov
loopne
xlat
cmp
xor
stc
jg
lods
clc
sub
dec
inc
pop
pop
dec
mov
out
out
fdivrl
testb
lods
dec
sbb
ret
mov
outsl
stos
rcrl
out
adcl
in
das
and
push
call
inc
movsl
in
pop
popf
and
stos
mov
sub
sahf
js
adc
push
test
faddl
push
cmc
inc
aas
scas
ja
or
add
movsb
cmpsb
add
inc
push
mov
mov
fldl
mov
test
ljmp
adc
push
cmc
negb
dec
aaa
movsb
or
adcb
and
push
inc
mov
and
push
fdivl
push
mov
cmp
imul
out
cwtl
test
or
inc
mov
in
cmp
jns
fs
mov
pusha
fistl
mov
adc
aas
insl
jle
add
and
cmp
mov
in
sub
sar
in
dec
cmp
sbb
sbb
insl
add
or
int3
push
xor
loop
mov
sub
call
sbb
mov
mov
mov
push
push
xor
cmp
movsb
mov
call
test
and
sbb
push
add
clc
arpl
mov
cmc
fldt
lock
sti
and
adc
aas
mov
dec
mov
or
scas
inc
ret
sbb
push
or
sub
cmp
xor
inc
stos
mov
cmp
out
addr16
sahf
xor
mull
xchg
sub
or
pushf
ret
and
cmpl
add
movsl
scas
shlb
mov
cmp
xchg
fstl
popf
or
les
icebp
fs
push
int
pop
rcrl
sub
xchg
jmp
pushf
push
jl
jge
mov
int
pusha
mov
outsb
data16
dec
stos
jae
dec
inc
loopne
cmpl
fiaddl
lock
orl
shrl
mov
insl
cmp
mov
rclb
lods
daa
jmp
and
popl
xchg
dec
pop
mov
jg
lods
mov
pop
fsubs
test
jbe
dec
inc
in
fwait
in
nop
cld
insl
int
iret
popa
ds
ds
out
scas
popf
xchg
add
fwait
ret
sbb
mov
mov
pop
negb
iret
sbb
and
inc
fnsave
mov
inc
sbb
mov
cwtl
cmp
roll
popa
jmp
pop
sti
popa
jg
adc
mov
fdivr
fisubrl
add
aad
xor
leave
add
sub
cmp
addr16
loopne
pop
xor
stos
mov
lahf
jg
popa
mov
outsb
mov
icebp
out
roll
xchg
push
jge
sub
push
or
add
dec
mov
inc
push
xchg
fisubrs
pop
sahf
lcall
or
arpl
mov
sti
test
imul
je
xchg
xor
icebp
stos
add
mov
psadbw
cmpb
push
fldt
js
sbb
rcrb
mov
and
mov
or
mov
and
mov
mov
push
sahf
push
xchg
scas
jge
or
lds
jg
popf
dec
aam
xchg
mov
lds
popf
loop
mov
jecxz
jns
rcl
add
lret
aaa
and
mov
xchg
xchg
push
or
mov
shlb
in
dec
sbb
add
ss
ds
dec
cmpsb
inc
mov
mov
push
xlat
lods
jl
cmp
int
push
out
or
lods
mov
sbb
stos
mov
fwait
adc
sbb
out
js
jmp
fmuls
mov
in
xor
xchg
fsubs
cmp
inc
push
dec
mov
inc
or
or
ret
inc
hlt
out
jg
and
inc
cmc
repz
sub
fcoms
jns
sbbl
adc
mov
push
push
jp
dec
test
sub
cmp
or
sbb
ljmp
adc
mov
push
push
jp
dec
test
sub
cmp
or
sbb
ljmp
adc
mov
push
outsb
movsl
jp
inc
test
sub
and
push
lds
aad
and
repnz
mov
xchg
push
test
loopne
pop
loop
insl
mov
cmc
cmp
sub
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
