add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
lcall
sbb
lcall
or
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
les
mov
jmp
add
add
add
add
jmp
add
or
mov
pop
test
lea
mov
xchg
add
mov
cmc
add
add
add
add
and
push
add
add
add
add
sub
test
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
hlt
add
add
add
add
add
loop
add
add
hlt
add
add
add
add
add
lea
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
in
cmp
jmp
add
add
add
jmp
add
jmp
add
add
add
add
daa
add
add
loop
jmp
add
add
popl
xor
add
cmc
add
add
add
or
lods
add
add
add
add
add
add
daa
add
add
add
cmp
or
add
lea
fiaddl
cmp
and
add
add
add
leave
add
faddl
inc
add
add
add
add
add
and
cmp
push
add
add
add
les
add
add
add
add
add
add
add
add
ds
add
add
les
scas
add
add
sti
add
add
add
add
mov
or
pop
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
lea
fildl
lret
add
jmp
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
jmp
add
add
add
add
add
les
jmp
add
add
add
add
out
addb
add
add
add
add
or
mov
or
flds
cmc
add
jmp
add
add
add
pop
add
cmc
add
add
add
push
add
add
add
add
add
add
testb
add
dec
add
add
add
or
lea
jmp
add
add
add
jge
or
aas
add
mov
dec
add
add
dec
add
or
lea
dec
add
add
add
add
pop
add
fildl
dec
add
add
add
or
dec
add
add
xchg
add
add
add
lea
dec
add
add
dec
add
add
inc
add
test
lea
rolb
add
add
add
add
cmp
xor
mov
jmp
add
lea
pop
add
add
jmp
add
xchg
add
add
add
xchg
add
add
rolb
lcall
add
or
xor
jmp
add
jmp
add
hlt
add
xor
test
jmp
add
add
add
add
add
add
add
add
pop
add
add
adc
add
add
add
cmp
add
gs
add
add
add
add
jmp
and
sub
pop
sub
popa
daa
xor
daa
jbe
shrb
xchg
je
inc
xchg
xchg
inc
outsl
xchg
push
idiv
jae
inc
rcr
stos
inc
mov
sti
jg
adc
cwtl
xor
dec
mov
in
xor
or
lahf
adc
fdivs
cltd
movsb
sub
adc
fstps
in
ja
ljmp
mov
or
adc
shll
jecxz
mov
call
xlat
cmp
arpl
ja
aas
push
out
enter
and
insb
cltd
daa
xor
dec
sub
pop
pop
or
sbb
rol
xchg
pop
jg
int
sub
rcr
rclb
xchg
lret
push
lret
push
mov
sbbl
dec
or
adc
stos
jae
shll
or
iret
xchg
in
cmpsl
push
sbb
ss
fsub
sub
cmp
add
in
nop
inc
movsb
xchg
jp
xor
xorl
cld
addr16
dec
outsb
lods
lahf
idivb
adc
cmc
rorb
cmp
dec
adc
test
jns
pop
dec
cs
add
and
scas
mov
movsl
inc
xchg
popf
lret
cltd
movsl
loopne
mov
push
push
test
leave
xchg
das
notb
neg
xchg
xchg
push
pop
decb
and
lea
bound
and
xchg
lods
scas
pop
mov
pusha
cmp
mov
and
in
xor
mov
pop
imul
cmp
and
sbb
hlt
and
sbb
xor
pop
outsb
pop
pop
sbb
fcom
or
pop
dec
in
scas
scas
or
xchg
pusha
shrb
cmp
inc
dec
dec
out
rclb
xor
arpl
mov
xchg
mov
loope
and
ljmp
stos
popf
dec
and
daa
stc
aaa
push
xor
imul
mov
cmovae
adc
or
test
pop
sub
sub
stc
xchg
mov
pop
push
es
call
and
pop
outsl
pop
loop
add
lret
push
insb
scas
or
or
xor
in
mov
cmp
xchg
das
std
xor
jb
lahf
imul
cmp
xchg
test
or
pop
sub
mov
je
add
mov
loope
ret
pop
repz
pop
xchg
sub
mov
int3
repnz
pop
adc
xlat
jl
ret
test
popa
xor
call
pop
or
imul
out
or
lahf
xchg
pop
lds
arpl
adc
mov
test
loope
cmp
cwtl
mov
movsl
and
cmc
pop
and
xor
outsb
lcall
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
movsb
lods
mov
test
lahf
mov
daa
bound
cmp
or
sbb
insb
je
inc
dec
push
pop
movsb
lods
mov
test
cld
int3
aam
and
xor
add
adc
add
inc
dec
push
pop
movsb
lods
mov
test
cld
int3
aam
and
pop
pop
je
jno
cmp
sub
and
cmc
test
std
pushf
jmp
mov
push
in
iret
pop
dec
push
lds
fs
adc
dec
decl
jnp
imul
cmp
cmp
cwtl
pop
mov
js
insb
je
adc
pop
lods
fidivs
mov
es
aas
mov
adc
xchg
dec
gs
jl
leave
push
in
jmp
xchg
lret
mov
std
popf
cmpsb
aam
aam
mov
cld
xor
je
mov
fdivs
in
add
imul
cmp
cmp
mov
lahf
sbb
hlt
jl
dec
push
mov
mov
in
jg
pusha
les
hlt
hlt
jle
subb
dec
push
dec
lods
mov
test
cld
int3
aam
and
xor
add
adc
fs
je
inc
dec
push
xor
ret
pushf
orl
push
cmp
loop
xor
adc
leave
rcr
jmp
mov
mov
jns
adc
xchg
add
jge
sbb
xor
call
icebp
stc
mov
int3
aam
and
xor
add
adc
fs
je
inc
dec
push
pop
movsb
lods
mov
test
cld
int3
aam
and
xor
add
adc
fs
je
inc
dec
push
pop
movsb
lods
aad
sbb
pop
xor
leave
popa
es
cld
daa
or
leave
es
daa
jmp
sub
mov
push
sub
in
test
push
leave
repnz
arpl
cmc
movsb
and
or
and
popf
pinsrw
jp
lods
jg
in
adc
ja
jae
lahf
lahf
or
sti
fucomp
or
jp
inc
stos
xchg
fwait
dec
inc
jmp
out
and
mov
roll
je
xchg
cltd
movsl
outsb
cmpsb
shl
fsubs
jnp
push
inc
mov
xchg
xchg
pop
out
jno
mov
push
fwait
rorb
sbb
out
lret
push
in
push
ss
lret
mov
mov
inc
leave
in
pop
mov
stc
addr16
andl
call
dec
or
mov
aas
ss
xor
cmc
push
std
mov
stos
cmp
lock
pop
and
jae
fs
fimull
mov
movsb
jb
mov
jae
bts
repz
mov
dec
repnz
loope
sbb
ret
pop
sbb
push
popf
jge
test
repnz
aad
jg
jle
mov
xor
jg
roll
inc
mov
paddd
xchg
dec
pop
push
add
jae
imul
fistl
jecxz
ret
and
jmp
nop
lea
and
shlb
outsl
sbb
addr16
pop
movsl
sbb
fs
mov
mov
popf
mov
xor
push
ret
inc
in
sbb
mov
hlt
and
cmp
aas
clc
shrb
jmp
cmp
lock
xor
movsb
sbb
cmp
inc
sbb
mov
lahf
mov
mov
es
xor
addb
push
stos
sub
aam
push
lods
sbb
test
xchg
adc
std
or
loope
cmpb
push
xchg
sti
dec
xor
and
icebp
push
pop
push
in
adc
jno
hlt
mov
pop
ds
inc
insl
pusha
rorb
enterw
add
dec
and
sub
inc
and
mov
cmp
inc
je
mov
sub
push
scas
bound
pop
leave
push
mov
cmpsb
repnz
dec
inc
mov
inc
xor
xchg
mov
mov
or
and
andl
xor
hlt
daa
in
or
out
sarb
mov
ret
insl
hlt
out
cmc
pop
xor
pop
pop
xor
sbb
xor
aam
cmp
imul
mov
inc
stc
cmp
movzwl
imul
xchg
xor
sub
push
mov
fldcw
fmul
xchg
and
pop
jge
fmul
sbb
push
dec
ret
sub
pop
loop
movsl
ret
sarl
jno
fdivr
or
addl
test
aad
inc
xor
pop
insb
push
dec
cmc
popf
dec
xor
scas
daa
jns
inc
mov
mov
mov
lock
cltd
xchg
popf
xor
cmp
icebp
iret
loop
sbb
loope
imul
jo
mov
adc
lahf
xchg
push
add
push
mov
mov
das
lock
outsl
mov
push
jo
js
pop
pop
add
xor
mov
xchg
data16
push
pop
fwait
push
jnp
mov
pop
mov
sub
ja
mov
adc
mov
data16
test
cltd
pop
mov
jb
or
xchg
mov
out
sub
jo
adc
aam
xchg
add
xchg
mov
inc
lret
push
jg
adc
adc
movsl
cmpb
jge
pop
hlt
jge
fwait
loopne
lods
aas
mov
dec
pop
adcb
pushf
lret
idiv
add
sub
scas
lahf
rolb
adc
sbb
dec
cmp
add
je
int
fisttpl
aas
xor
sub
jg
push
jmp
inc
jl
xor
stc
jl
jge
orb
pusha
call
test
sbb
mov
pusha
stos
pop
pop
sbb
sahf
ss
mov
or
mov
cmc
out
cltd
cmp
out
xor
leave
daa
pushf
fsubs
mov
pop
or
mov
es
mov
shlb
xchg
dec
test
add
inc
mov
loopne
aas
inc
dec
sbb
xchg
pop
push
push
das
and
mov
scas
in
loopne
or
xor
cmp
test
mov
iret
sbb
push
sub
pop
sub
jl
sbb
fdivl
add
mov
jle
pop
cmp
scas
sahf
jg
ja
repnz
es
mov
mov
jno
sbb
add
mov
mov
adc
add
call
rorl
enter
pop
pop
sub
cmc
ljmp
repnz
int
loope
or
dec
leave
je
inc
outsb
cmp
add
nop
rol
or
adc
xchg
mov
sbb
mov
jb
leave
cmp
fs
jg
sub
fisubs
xor
sub
std
sbb
in
out
xor
inc
push
leave
xchg
cmp
push
push
jecxz
mov
pop
ss
roll
dec
stc
sub
add
jp
inc
js
lret
inc
scas
inc
mov
pop
add
aam
mov
icebp
imul
loopne
movsb
leave
adc
pop
sti
adc
sbb
sub
push
and
aad
dec
push
test
pop
fdivs
mov
inc
mov
pushf
sbb
jp
out
hlt
and
xchg
fstpt
out
insb
xchg
ja
and
sbb
sub
aad
cmp
stos
cltd
pushf
aad
mov
push
clc
mov
ret
xor
fimuls
xlat
cld
repz
jecxz
jmp
test
mov
btr
bound
movsl
jns
testb
aam
das
imul
push
in
addr16
ret
mov
data16
sub
jl
jge
sub
add
in
xchg
js
loope
mov
sub
pop
psubsw
repnz
je
jo
xchg
mov
sub
stos
rcr
mov
fmuls
and
push
testl
in
pop
mov
ss
clc
repz
je
cmpsb
movsl
sbb
cmp
loop
mov
ret
fstpl
es
cmpsl
daa
xor
pop
or
sub
mov
push
cmp
cmpsb
fsts
jbe
cltd
call
test
jnp
lcall
loopne
iret
insb
bound
add
push
pop
push
sbb
clc
adcb
adc
mov
rclb
fwait
or
xor
sub
sub
test
push
inc
and
fwait
sarl
and
fdivrs
cmp
xchg
mov
ja
or
call
out
in
and
mov
mov
sub
aad
push
call
rcr
xor
mov
sahf
std
pop
adc
repnz
or
lods
sub
push
imul
add
out
and
and
push
pop
in
mov
and
inc
xchg
cltd
jne
push
mov
test
xor
adc
jmp
out
mov
sbb
jbe
add
scas
xchg
and
and
ds
pop
lock
orl
adc
cli
mov
shlb
ficoml
xor
push
addr16
into
sub
popa
movsl
imul
jb
cld
fadd
or
adc
mov
or
lret
jnp
test
and
dec
in
mov
pop
ds
jnp
out
or
fstpl
jno
sub
aas
test
orl
xchg
inc
mov
xlat
in
sub
mov
sub
push
nop
push
cmovne
or
insb
and
ds
aas
dec
mov
sub
fisubl
sbb
add
mov
jmp
mov
and
xor
test
sub
and
cmp
add
js
fidivrl
call
add
jle
xor
icebp
pop
gs
imul
pop
out
cmpsl
gs
fs
xor
and
dec
mov
mov
jmp
fildll
rcll
lods
scas
inc
mov
xchg
push
cmp
std
movsb
cmp
pop
jle
sbb
shll
dec
int
iret
movsb
cmp
cld
mov
clc
jb
and
xchg
dec
mov
xor
popf
bound
cs
and
pop
shrb
xor
jae
add
dec
push
jl
and
jno
mov
mov
pop
int3
leave
in
roll
aaa
jnp
adc
inc
stc
and
adc
popf
ja
jae
xor
push
inc
sub
mov
inc
or
loop
loop
and
test
push
push
mov
or
adc
push
jle
bound
sub
mov
inc
and
mov
loopne
fcoml
int3
mov
fs
hlt
das
insb
xor
push
cmp
mov
ds
add
xchg
ret
dec
aaa
mov
movsl
push
and
mov
add
inc
js
cmp
test
jl
das
mov
out
jle
sub
sbb
test
cmc
adc
xchg
fucomip
scas
cwtl
js
cmp
xchg
int3
hlt
iret
cmp
adc
jnp
ja
loop
xor
scas
mov
add
ret
sbb
ror
nop
outsl
aad
jo
insl
sub
mov
sbb
rorb
stc
pop
lcall
jl
call
xchg
adc
clc
mov
shlb
jmp
lock
push
jge
pop
insl
movsb
movsl
cli
mov
jo
cwtl
push
lods
mov
or
enter
add
paddsw
xor
out
pop
fdivrl
sbbl
or
fcmovnbe
jge
jg
inc
repz
jo
mov
pop
popa
jmp
insb
lods
fistpll
and
mov
mov
aam
push
cmpb
ret
pop
stos
jbe
inc
pop
js
outsb
mov
loopne
cs
aaa
adc
out
je
popa
jae
push
dec
add
movsl
xchg
into
jg
hlt
push
mov
dec
mov
lea
in
mov
testl
xor
sub
adc
jg
add
mov
mov
push
das
repz
aaa
fdiv
inc
mov
adc
jb
int3
lock
fcomip
or
adc
mov
inc
inc
scas
pop
and
push
cmp
mov
les
push
xor
lock
xchg
cmp
mov
or
sti
xchg
hlt
fwait
out
dec
fwait
adc
jae
or
adc
ss
mov
rorb
mov
shll
rclb
in
insb
ds
or
cmp
bound
rorb
stc
addb
xchg
cmp
pop
imul
mov
test
xchg
nop
test
clc
cmp
js
xchg
push
add
or
data16
dec
jl
or
sbb
rcll
xor
dec
aas
pushf
xor
jne
cmp
loop
loop
imul
dec
stc
pop
ret
dec
xchg
scas
nop
ds
cmp
xchg
push
cmpsl
cli
mov
or
cmp
push
inc
lahf
mov
stos
pop
fcmovnu
outsb
cltd
pop
cmp
bswap
adc
and
mov
pop
xchg
lret
dec
fimull
add
sti
pop
cmpsb
orb
push
add
sub
sbb
cmpl
inc
jns
mov
test
xchg
add
ret
lahf
in
les
jae
jp
xchg
mov
sub
addr16
sub
lret
xchg
mov
out
sbb
aaa
stos
shll
inc
add
jae
mov
jl
test
insb
leave
imul
cmp
pushf
lods
lea
pop
loopne
and
data16
sbb
popa
cmp
pop
jae
hlt
clc
push
lock
lods
cld
in
inc
mov
negb
mov
sbb
or
loopne
push
mov
mov
movsb
cmp
inc
cld
sbb
bound
outsl
sub
push
orb
cltd
or
repz
loopne
jne
sbb
inc
aam
movsw
jg
imul
ljmp
xchg
sbb
mov
mov
xchg
lods
xchg
mov
pop
in
push
shl
add
or
and
out
shll
push
jle
test
pop
mov
rep
rorb
fs
jecxz
lcall
xor
pop
add
or
in
shll
in
std
lret
mov
adc
and
adc
push
cs
cmp
movsl
xchg
nop
lods
mov
jge
mov
cmp
sbb
sub
icebp
rorb
and
inc
cmpsl
push
cmc
aam
jecxz
in
sbb
orb
sub
cmpsb
enter
sub
outsl
rcr
xchg
xlat
or
popa
icebp
hlt
mov
adcb
adcb
mov
imull
out
cld
xchg
ja
aaa
bound
mov
xor
sub
mov
shlb
sarl
mov
adc
xor
or
xor
das
xchg
push
xor
and
xor
pop
insl
push
ja
int
push
xchg
cs
pop
pop
shll
push
pop
pop
pop
ret
bound
mov
jl
jl
mov
test
loopne
push
icebp
stc
adcl
pushf
push
cmp
std
movsl
out
adc
cmc
cltd
xchg
insb
mov
or
aaa
add
loop
mov
lods
pop
aaa
mov
add
cli
adc
imul
mov
jge
mov
in
or
mov
jp
add
cld
mov
and
mov
sbb
or
cmp
decl
sbb
add
sub
enter
xlat
das
out
pushf
stos
xchg
cmp
leave
rcl
outsb
mov
inc
add
insb
or
pop
scas
das
fcoms
xor
pushf
mov
or
aad
add
push
xchg
mov
xchg
fsubl
dec
dec
int3
jg
insb
push
jle
fs
xchg
sbb
add
sub
mov
call
pop
ss
movsl
leave
sbb
xlat
pop
push
xchg
add
push
cmp
jb
addl
popa
xor
fwait
push
dec
pop
movsb
gs
daa
js
mov
stos
xor
repnz
mov
in
and
mov
push
pop
ja
jno
fsubrl
xchg
fcompl
dec
sahf
ljmp
insb
add
pop
gs
jl
add
adc
roll
fsubr
sbb
roll
push
leave
cmpsl
lock
int
pushf
scas
cmp
ret
and
sarl
push
xchg
daa
sbb
outsb
adc
and
inc
popa
mov
pusha
mov
lret
dec
pop
or
shlb
xchg
jl
jp
jo
inc
repz
pop
mov
sub
iret
pop
push
into
or
cli
mov
lds
push
lret
fmull
pop
sbb
repz
mov
jbe
xlat
lea
addr16
jnp
fcomps
pop
adc
xor
nop
movl
add
hlt
mov
cmp
xchg
jo
lret
lret
rclb
xchg
xor
or
in
data16
adc
repz
push
rcrb
lret
icebp
orl
fldenv
sub
nop
pop
cltd
int
inc
dec
mov
jns
jb
mov
shll
cmc
pop
movsl
lea
test
adcb
mov
push
adc
rcll
arpl
sbb
scas
cmp
mov
adc
shll
addl
jecxz
sub
mov
mov
add
sbb
data16
inc
mov
in
in
shlb
mov
gs
and
pop
xchg
testl
movsl
movsb
imull
xor
out
or
and
push
sub
cs
cmpsl
das
lock
xor
push
dec
cmp
inc
push
xor
fwait
or
mov
sbb
pop
sub
mov
mov
cli
dec
insl
xlat
popf
lds
test
pusha
movsb
testl
popl
into
mov
ss
inc
sub
push
ret
or
mov
mov
pushf
push
mov
in
cmp
sub
lret
fnsave
stos
pushl
repz
pushaw
in
lahf
sbb
arpl
xchg
inc
cmpl
cmp
push
inc
pop
jne
ret
xchg
dec
adc
outsb
rorl
std
xchg
shr
cmp
mov
out
sbb
imulb
xchg
data16
mov
xchg
loopne
and
jmp
test
mov
adc
insl
int
lea
dec
jo
cli
loopne
inc
dec
and
in
in
aas
leave
push
mov
iret
add
subl
lods
gs
std
gs
cli
and
f2xm1
pop
aad
push
cmp
ljmp
pop
xchg
iret
pop
pop
sub
and
push
mov
mov
xchg
pop
push
rcll
and
fdivs
retw
call
add
and
imul
sub
jns
pop
fisttps
aaa
or
cltd
jnp
out
add
aad
das
into
ds
mov
push
inc
or
mov
stos
pusha
loopne
shrb
add
sti
xchg
repz
sbb
add
scas
adc
mov
leave
fcoms
in
pop
mov
aaa
scas
es
insb
fistps
insl
cli
and
sub
dec
add
fidivrs
xchg
int
mov
out
dec
push
mov
jmp
mov
push
pmulhw
addb
xchg
call
aad
mov
xchg
push
pop
jecxz
pop
fidivl
gs
jmp
in
outsl
inc
dec
popa
sarb
adc
js
jbe
outsl
jns
sbb
lock
insl
push
push
fsubrl
xchg
fcos
cli
sarb
jg
dec
loope
sbb
push
repnz
pop
call
push
insl
pop
aad
sbb
movsb
popf
cltd
clc
mov
push
and
fwait
enter
cwtl
push
mov
into
das
and
sti
adcl
lods
push
xchg
test
jb
xchg
cwtl
imul
stos
fistps
loope
add
jle
sbb
fisttpl
mov
pop
scas
pushf
pop
push
cmp
pop
leave
ds
leave
lods
jge
pop
adc
mov
les
add
test
fbld
lcall
xor
daa
fwait
xchg
pop
sub
pop
pusha
outsb
and
addr16
popf
jo
fstpl
sahf
xorb
call
ljmp
and
jb
lcall
mov
inc
test
sbb
and
pusha
pop
sub
adc
sbb
scas
aam
clc
aad
aaa
sti
ficomps
jne
inc
hlt
in
push
imul
and
dec
lcall
test
push
or
fbstp
adc
cmp
fsubrl
jnp
add
mov
mov
adc
lret
mov
add
push
jmp
inc
xchg
push
xlat
cmp
fiadds
test
push
dec
xchg
setne
es
adc
jmp
int3
mov
xor
cmp
mov
out
or
outsl
outsb
scas
xor
lods
add
jns
outsl
mov
mov
pushl
mov
gs
adc
roll
jne
mov
and
outsb
cmp
in
xor
or
add
xchg
jl
addr16
jmp
pop
das
jbe
loopne
mov
dec
int3
pusha
push
shl
jae
scas
mov
sub
sub
ret
xchg
inc
mov
and
jmp
xor
xchg
leave
push
andb
bound
xor
fcompl
aad
in
pop
adc
pop
jle
mov
add
nop
aaa
xchg
in
loope
rcr
fcos
ja
shll
rclb
call
fdivrl
movsl
mov
fcompl
push
pop
mov
imul
or
lcall
xor
push
mov
pop
jae
sub
data16
in
fs
lret
inc
repz
fstpl
subl
mov
shr
aaa
mov
inc
stos
in
mov
sbb
lret
scas
adc
insl
sti
cmp
and
sub
and
mov
ret
adc
push
cmp
hlt
cs
push
cmp
mov
loop
mov
mov
add
mov
sbb
lea
rorb
les
jno
cmp
dec
pop
cltd
arpl
jg
sbb
scas
inc
jmp
sub
cmpsl
adc
shrl
in
jb
sbb
js
testb
and
mov
bextr
in
leave
cmp
cld
push
popa
cmp
mov
xor
out
popf
stos
fcmovne
push
and
jle
mov
fcoml
cmp
sub
push
ret
add
test
inc
test
push
ds
cmp
adc
xor
mov
dec
shlb
mov
shll
sub
cs
push
repnz
pop
mov
in
pop
dec
mov
leave
lea
cmp
inc
cmp
xchg
xor
mov
in
hlt
cld
int3
aam
and
xor
add
adc
fs
je
inc
dec
push
pop
movsb
lods
mov
test
cld
int3
aam
and
xor
add
adc
fs
je
inc
dec
push
pop
movsb
lods
mov
test
cld
int3
aam
and
or
sbb
insb
je
inc
dec
push
pop
movsb
lods
mov
test
cld
inc
int3
push
sub
xchg
scas
or
imul
cld
cmpl
cmpl
aas
scas
adc
mov
mov
push
int
std
jae
arpl
mov
mov
jge
insl
xchg
popf
pop
lea
mov
and
inc
std
jae
arpl
stos
sub
fstpt
insl
stc
popf
adc
push
fstpl
aaa
mov
orl
imul
xchg
sbb
add
xchg
or
leave
inc
dec
xor
insb
and
mov
sbb
xchg
popa
mov
dec
xor
in
or
inc
arpl
and
int3
sbb
dec
syscall
call
pop
cmp
test
mov
mov
divb
es
dec
sub
sar
xchg
adc
or
inc
int3
scas
and
jle
fdivs
push
in
jl
dec
rcl
add
dec
mov
sti
sub
cmp
rcrb
lods
and
out
insb
repnz
dec
cmpsb
sub
repnz
mov
jnp
imul
inc
mov
roll
mov
jge
insl
cli
popf
adc
cmp
dec
int
std
imul
icebp
push
inc
pop
sarl
mov
popf
jl
add
ss
sahf
sbb
vmread
push
int3
pop
rorl
lea
fsubl
push
lods
and
and
pop
js
or
out
loopne
ret
jge
insl
jecxz
adc
and
push
int
std
jae
arpl
mov
mov
jge
insl
jecxz
adc
and
push
int
std
jae
arpl
xor
mov
int3
adc
inc
and
cvtdq2ps
sbb
scas
push
jae
pop
pop
sub
mov
sbb
js
and
movb
xchg
cmpb
jecxz
mov
mov
cmp
jne
xor
cmp
ret
adcb
lock
gs
test
cmp
data16
xchg
movsb
pop
mov
push
pop
fs
xlat
in
pusha
xorl
add
push
add
pop
inc
pushf
sbb
rorb
lret
rcrl
shll
mov
orps
adc
scas
sub
jmp
fildl
jp
mov
ja
cmp
fcmovu
clc
shl
push
dec
in
ds
lea
mov
fbld
mov
sub
mov
xlat
loop
lahf
pop
jl
add
idivl
je
icebp
fmuls
inc
inc
ja
andb
jl
iret
push
inc
xchg
test
add
sub
cmp
sbb
mov
pop
jecxz
cmpsl
sub
adc
leave
iret
pop
jp
mov
push
fdivr
in
mov
mov
adc
scas
mov
pop
mov
jmp
mov
shll
dec
sarb
push
push
cmc
pusha
subb
ljmp
sub
das
push
adc
jns
cwtl
mov
int
shrb
or
adc
mov
mov
rolb
inc
xchg
dec
rol
subl
aad
jb
aam
push
inc
cmpsl
sbb
ja
std
icebp
arpl
mov
lcall
mov
cwtl
jle
adc
and
imul
sbb
movl
inc
mov
cli
xor
fst
and
pop
jae
rorl
mov
cmpsb
jge
xchg
or
jnp
mov
sub
jno
les
divb
es
inc
lods
mov
enter
or
je
call
je
fdivl
mov
jno
pop
sub
add
pop
aam
inc
push
pop
mov
pop
fdivr
in
sbb
xchg
add
idivl
sbb
test
clc
sbb
jae
insb
movsl
test
mov
add
mov
cmc
stos
int
jno
mov
orl
xchg
aad
mov
ja
mov
data16
cwtl
push
insb
push
inc
push
test
lret
out
sub
loop
push
pop
scas
mov
push
mov
and
push
gs
xchg
mov
in
clc
arpl
push
test
ljmp
adc
outsl
lret
aam
cmp
mov
lock
cmpsl
sub
sub
mov
or
adc
jne
pop
mov
fmull
mov
push
nop
into
cmp
lock
mov
jb
clc
sbb
cltd
mov
mov
leave
inc
call
pop
xor
shlb
add
sbb
push
int3
sbb
rclb
pop
ljmp
in
xchg
xlat
imul
push
std
fwait
jmp
cwtl
out
icebp
aas
and
test
pop
in
aad
into
sbbb
sub
or
lea
sub
fcoms
mov
sub
pop
and
pop
xchg
or
or
hlt
push
cmpb
leave
lcall
pop
push
push
popf
jl
pop
rolb
xchg
rorw
pop
rcll
pop
dec
pop
xor
mov
mov
push
shlb
jle
add
popa
mov
mov
pop
in
aad
stos
xchg
sti
cmp
into
repnz
lea
andb
in
ljmp
or
divl
cs
iret
xchg
inc
rol
mov
dec
jmp
ds
mov
xchg
lock
js
out
add
fs
fidivrl
push
out
jg
mov
dec
pop
add
mov
pop
add
xchg
lea
cmc
add
mov
stos
popf
and
mov
xchg
cmp
and
adc
inc
or
jecxz
mov
adc
lcall
cli
adc
xchg
dec
or
lret
push
fdivr
aaa
jb
inc
test
pop
test
mov
mov
and
insl
hlt
cmpsb
outsl
or
stos
inc
sahf
test
data16
pop
push
fwait
bound
push
mov
xchg
add
fidivrl
std
out
div
jmp
fcmovnu
sbb
and
sub
mov
inc
or
adc
dec
test
test
jg
repnz
scas
dec
arpl
pop
cmp
sbb
mov
sub
in
aas
push
sbb
jnp
ljmp
mov
stos
int3
cmp
dec
lcall
pusha
adcl
sub
xchg
rcrb
aaa
or
test
xchg
inc
dec
gs
pop
or
int3
xor
xchg
sbb
cmpsb
aaa
ds
mov
negb
or
enter
aad
mov
fst
std
mov
dec
nop
ficompl
clc
int3
fnstenv
adcl
cltd
cmp
and
mov
dec
fdivs
std
mov
aam
add
mov
out
inc
test
mov
cwtl
lcall
jg
push
add
cwtl
mov
nop
repnz
addl
dec
sbb
test
mov
adc
dec
jp
into
pop
xchg
lret
loope
bound
cltd
xor
in
or
shrb
or
xor
call
sbb
inc
mov
cmp
aad
jb
into
sarb
arpl
inc
es
stos
sub
test
cmp
ret
dec
push
xlat
and
jle
sbb
jnp
and
cwtl
sbb
orl
cmp
push
lret
jne
jle
std
out
mov
and
jmp
test
mov
arpl
ss
out
xlat
or
imul
call
pop
adc
sub
mov
stc
in
or
add
lock
and
jecxz
cwtl
sbb
jecxz
add
pop
dec
sbb
in
arpl
sbb
out
out
mov
or
call
jl
int
sbb
jmp
mov
and
repz
add
cmp
dec
fnstenv
popl
mov
repnz
scas
xchg
push
aam
je
icebp
out
das
data16
mov
test
sub
adcb
pop
xor
jno
cmc
push
shrb
xchg
jne
rolb
int3
or
mov
pop
mov
lret
inc
adc
pop
ds
jmp
xchg
aam
aam
mov
jnp
ljmp
xor
je
lods
sub
jbe
add
jp
cmpsb
pop
or
pop
in
dec
lods
imul
test
jge
xor
cmp
xchg
dec
push
and
outsb
lds
add
rcrl
loope
std
in
dec
lret
repz
in
testb
inc
call
cmpl
inc
fisttps
push
imul
ficoml
lods
mov
insb
icebp
fists
rorb
lret
sbb
lret
ret
and
mov
clc
jo
insb
fbld
shr
xor
nop
imul
out
out
mov
pop
push
add
push
jle
dec
cmc
imul
push
or
inc
push
adc
cs
sub
shll
in
adc
pusha
push
clc
repnz
sti
fisubs
cmp
add
cwtl
xlat
push
in
aam
test
pop
in
and
sbb
cmpsl
cwtl
sbb
cld
dec
mov
pop
pop
in
push
test
gs
fdivs
mov
movsl
ljmp
test
orb
xchg
mov
dec
int
rcrb
mov
cli
mov
sbb
mov
clc
rolb
mov
xchg
fisttps
mov
rcrl
sti
addb
orl
fcmovb
pop
push
lock
outsl
inc
call
test
in
fidivs
fistps
inc
push
enter
fbld
repz
mov
dec
fildll
dec
stos
pushf
aam
lods
insb
fs
in
nop
pop
mov
decl
mov
clc
sub
ds
add
xor
stc
sbb
adc
mov
sub
outsl
or
movsb
sub
fisubrs
stc
aaa
mov
sbb
or
sti
mov
out
loop
xor
dec
jns
add
movsb
push
jp
cmp
xchg
leave
testl
cwtl
cmpsb
ss
push
lcall
repz
les
out
fnstsw
test
xchg
dec
push
into
rclb
les
in
xchg
in
jmp
mov
int3
out
je
arpl
popa
clc
push
pop
rorb
pop
stc
lcall
fisubs
pop
cwtl
adc
into
mov
testw
push
push
sub
incb
aas
cmp
xchg
add
cmp
js
out
sti
pop
jmp
scas
jmp
hlt
dec
lods
fsubl
pop
push
adc
dec
gs
sbb
xlat
mov
inc
ljmp
and
jl
push
mov
ds
push
jns
fdivrs
loopne
jl
inc
push
jle
sub
subl
scas
cmp
xlat
nop
rcl
ss
int
xchg
andb
frstor
xlat
lea
cmc
push
imull
mov
add
pushf
or
in
gs
pop
repz
stc
call
cvtps2pd
out
mov
cld
lock
iret
adc
add
in
inc
adc
dec
or
mov
mov
xchg
nop
cmc
xlat
shll
dec
cs
cmc
mov
scas
push
xchg
dec
xchg
filds
jge
mov
pushf
cmpsw
cltd
fnclex
inc
push
inc
jg
imul
pop
jp
in
inc
out
icebp
xlat
xor
mov
arpl
mov
leave
push
mov
sbb
mov
mov
pusha
fsub
jns
push
mov
out
mov
xchg
xor
test
sahf
or
mov
push
bnd
int
divl
push
mov
mov
mov
aam
enter
addr16
pop
pop
mov
imul
ljmp
gs
dec
notb
sahf
lahf
scas
cwtl
jmp
jo
inc
mov
sbb
xor
adc
sbb
pushf
xlat
push
std
fsubrl
clc
loop,pt
mov
mov
xchg
push
xor
sbb
pop
lcall
lea
push
add
popa
mov
xchg
mov
fisubrs
and
mov
inc
shlb
in
outsb
mov
pop
orb
jno
adc
dec
fldl
pop
nop
mov
mov
in
jecxz
adc
mov
cltd
adcb
test
add
lret
mov
lcall
icebp
xor
imul
push
sub
mov
add
iret
xchg
sarl
xchg
les
in
fdivl
cmp
pop
and
lahf
cmp
mov
je
xchg
inc
xor
stos
leave
mov
cmp
adc
cmpsl
inc
js
or
mov
cld
cmp
sahf
icebp
add
pop
pushf
imul
inc
in
push
int
lcall
mov
and
dec
inc
push
xor
push
jle
dec
in
stc
sub
mov
bound
fnstcw
aam
xor
dec
dec
lods
clc
popa
lds
mov
and
cltd
lods
inc
test
jecxz
xchg
mov
daa
movsl
cld
mov
lret
mov
iretw
je
inc
xchg
pop
adc
or
dec
pop
cld
lock
xchg
fcomip
lods
push
mov
xor
imul
lret
inc
pop
bound
shr
test
xor
rcrb
imul
mov
imul
std
sub
pop
pop
inc
popf
ficompl
testl
ljmp
iret
jnp
pushf
test
in
sbb
push
popf
jnp
xchg
ret
inc
mov
pop
fiadds
or
cmp
fnstsw
out
xchg
popl
or
ret
xchg
aaa
enter
sub
loope
pop
je
lods
lods
lret
loopne
mov
pop
clc
inc
push
sbb
aam
lods
out
in
adc
mov
test
mov
cmpb
stos
mov
stos
rcl
imul
stc
pop
ret
movsb
in
xor
inc
add
lret
sub
or
cmp
jb
loop
fsts
lcall
lods
xorl
notb
fisttpl
push
fstl
jno
pop
mov
stos
push
jmp
and
repnz
xlat
mov
push
pop
outsl
cmp
dec
mov
pop
movsb
adc
xor
pop
icebp
xor
push
test
stos
in
gs
cmp
inc
or
cmp
mov
adc
push
jne
call
inc
scas
sub
jl
setne
mov
pusha
dec
nop
xchg
in
int3
dec
jge
sbb
add
or
inc
out
pop
jg
push
push
and
jno
pop
dec
dec
arpl
movsl
inc
data16
cmpsl
stos
sub
xchg
pop
rol
xor
cmp
decl
rorb
mov
pop
in
pop
sbb
stos
mov
int3
ljmp
adc
pop
fs
leave
xor
out
mov
imul
out
fisubrs
sbb
sub
jmp
mov
jecxz
adc
cmp
cmp
scas
dec
inc
push
add
push
sbb
mov
jbe
xor
push
or
mov
cmc
mov
pop
cs
repnz
push
lock
pop
cmc
xchg
into
mov
pop
fsubl
mov
pop
sarl
ljmp
sub
jnp
mov
dec
aas
rorl
sub
push
shr
stos
add
test
jb
lea
mov
aad
popa
mov
popf
loope
les
xchg
sbb
push
das
dec
cmp
in
sub
jg
lods
arpl
push
add
arpl
adc
rorb
push
mov
xchg
leave
mov
and
xchg
out
lahf
jnp
pop
sub
xor
xchg
jle
les
lcall
ficomps
repnz
loop
arpl
in
sbb
insb
out
lods
cmc
orb
jb
jmp
gs
sub
sub
into
mov
cltd
mov
sub
or
mov
cli
add
sbb
inc
cmp
insb
out
fcoml
stc
mov
mov
rorl
push
out
xor
sbb
test
filds
inc
mov
sbb
fwait
in
jno
fbstp
stos
adc
jno
adc
rcr
aam
fisubl
xchg
in
mov
cmc
inc
and
clc
jo
xor
sbb
inc
mov
andl
mov
sub
ljmp
leave
rcrb
lret
sub
cmp
mov
mov
loop
int
adc
inc
mov
xchg
add
leave
adc
jnp
jns
aas
stos
cmp
sahf
push
jge
sbb
ret
mov
inc
push
fs
and
imul
int3
sbb
push
inc
pop
pop
aad
jmp
or
ja
ret
adc
les
mov
push
cltd
sbb
sti
jecxz
aam
sub
into
scas
nop
push
xchg
rclb
push
ret
int
add
jnp
add
lods
and
dec
shrl
mov
stc
sub
jns
lahf
dec
sub
bound
out
sub
sub
stos
mov
mov
iret
xchg
aam
les
imulb
push
dec
and
flds
test
xor
fbld
aaa
adc
add
cmpsl
cwtl
mov
jecxz
mov
cmp
popf
subl
jmp
cmpsb
dec
xchg
mov
or
push
jg
mov
mov
dec
dec
insb
fst
gs
xor
pushl
xchg
leave
movsb
in
repnz
dec
ss
movsl
pushl
int
mov
sub
inc
or
dec
clc
mov
movsl
outsl
xor
stc
xor
ja
or
in
ret
jno
cld
sbb
sub
push
lcall
pop
testl
xor
xor
decl
dec
push
mov
mov
fwait
js
xorb
mov
insl
xor
push
std
dec
and
mov
mov
sahf
popa
call
mov
iret
pop
sub
pop
test
cld
push
jbe
test
daa
cmp
aad
lret
push
daa
lods
and
adc
fadds
div
hlt
push
jmp
negb
sarl
mov
mov
test
add
jo
imul
pop
push
push
pop
es
inc
inc
fsubp
es
mov
aad
cmp
jbe
fcomps
rcrb
sbb
push
aas
mov
mov
or
adc
inc
adc
scas
cmp
push
popa
push
rcll
mov
pop
dec
push
dec
loopne
imul
dec
call
mov
cmp
adc
inc
jle
jbe
data16
movsl
je
add
repnz
add
mov
adc
cwtl
cli
cwtl
xor
stos
orb
jge
sub
sbb
add
sbb
mov
push
movsb
jbe
jecxz
pop
cmp
sti
ljmp
inc
data16
xchg
or
or
test
push
jg
loopne
adc
inc
mov
repnz
xor
aad
repz
add
xchg
jb
pop
movsl
adc
imul
xor
sbb
jg
fs
xchg
ljmp
push
pusha
mov
push
das
cmpsb
loopne
sarb
adc
ds
iret
roll
out
loopne
pop
popa
add
dec
cmpsb
mov
imul
repnz
push
pop
xchg
iret
enter
adc
pop
lcall
jbe
sub
xchg
inc
iret
cmpsl
ret
cmp
xor
mov
paddq
pop
mov
popa
pop
ds
mov
sbb
stos
shll
lret
imul
mov
push
je
out
mov
sarb
ljmp
mov
push
adc
and
pop
sbb
push
rol
dec
icebp
or
sbbl
mov
orb
aad
mov
sbb
or
mov
out
xor
imul
mov
icebp
mov
jbe
mov
adc
adc
pushl
es
outsb
les
jecxz
jns
scas
xorl
jp
dec
in
adc
sbb
inc
data16
push
lds
mov
mov
dec
push
pop
adcl
jecxz
jo
stos
inc
or
es
cmp
pop
push
pop
push
pop
and
push
sbb
push
je
test
adc
sub
jecxz
jmp
push
mov
scas
jb
dec
in
dec
pop
enter
out
ret
xchg
sbb
pop
fs
xchg
and
fidivs
ljmp
add
sbbb
adc
mov
movsb
jnp
ss
pop
push
enter
sbb
imul
addr16
and
and
xlat
cmp
cs
pushf
sub
cmp
and
shll
mov
test
and
jbe
adc
mov
cmc
adc
repnz
jno
cmpsb
push
mov
clc
cmp
push
mov
inc
and
adc
mov
or
adcl
pushf
xor
jmp
mov
xor
or
repz
addr16
in
ja
push
or
add
and
adc
and
rolb
fwait
les
ds
mov
jecxz
daa
ret
lods
shlb
dec
xchg
das
stos
mov
mov
in
inc
sbb
or
add
shrl
xchg
mov
cmp
mov
fcomps
call
rorb
jns
cmp
test
dec
jno
movsl
or
das
aam
out
dec
cmp
int
push
fistps
adc
push
addl
add
mov
add
fildl
imul
in
ss
mov
loop
xor
bound
mov
outsl
int
test
movsl
lret
mov
mov
test
adc
or
stc
in
test
loope
imul
popa
inc
mov
inc
push
mov
adc
fisubrs
cmp
push
sub
cmp
inc
call
cmp
sub
aas
jl
jbe
lret
pop
mov
mov
filds
js
mov
jp
or
das
aad
dec
and
xchg
and
xor
and
mov
fists
jae
lahf
pop
pop
in
loopne
aas
nop
mov
sarl
out
sbb
adc
and
and
pop
mov
mov
jle
dec
add
or
inc
test
jb
mov
enter
enter
inc
cmp
pop
rorl
jge
insl
jecxz
adc
and
push
int
std
jae
arpl
mov
mov
jge
insl
jecxz
adc
and
push
int
std
jae
arpl
mov
mov
jge
in
jecxz
adc
daa
fstl
inc
std
ja
addr16
mov
mov
jge
insl
and
xor
cmp
or
sbb
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmp
sub
sbb
or
sub
and
jg
movsl
mov
lock
fcoml
sub
sbb
or
jl
insb
add
ljmp
mov
fcoml
sub
sbb
or
jl
insb
sbb
loopne
sti
lock
in
movsb
mov
mov
jo
or
loopne,pt
mov
jmp
stc
or
xor
push
lahf
add
inc
or
iret
xchg
lock
flds
bswap
aas
pushf
fisttpll
insb
fcompl
cli
or
xchg
pusha
outsb
sub
out
pop
or
loop
rsqrtps
cld
cmc
fildll
and
mov
pusha
sub
add
mov
sbb
cwtl
mov
and
and
andb
icebp
jo
lock
adc
shrd
pusha
sarb
or
mov
fnstsw
mov
outsl
loopne
cmp
pop
inc
bsr
cwtl
rorl
leave
nop
int3
mov
sbb
or
jl
insb
add
stc
mov
leave
mov
fmull
jmp
adc
add
jge
xchg
shl
lds
xchg
aam
in
cmc
test
and
sbb
insb
xor
loop
lock
ret
xor
nop
mov
and
adc
insb
add
loopne
lock
rcrb
sbb
int3
pusha
cmp
sub
sbb
or
jl
insb
add
loopne
lock
rcrb
sbb
int3
pusha
cmp
cmp
out
cmp
ud1
xorb
enter
test
out
fsubs
and
fildll
jb
push
test
push
jecxz
nop
fwait
rol
pop
fdivs
test
cmp
sub
lcall
outsb
xchg
enter
ds
xor
aad
popf
push
aas
or
mov
xchg
push
add
inc
sub
insl
data16
pop
jl
mov
icebp
and
movsl
fsubrs
mov
add
rorb
cs
int
adc
fiaddl
gs
xchg
jg
sbb
sbb
cmpsl
std
pop
int
ja
fistpll
cvtpi2ps
test
mov
inc
rcrb
adc
xchg
cmp
out
push
popa
xlat
ficoms
int3
and
push
sub
stos
or
ret
outsb
out
jne
orl
mov
popa
lock
sub
mov
mov
outsb
pop
mov
push
cmc
aaa
push
cs
repnz
cltd
cmp
nop
es
xchg
xchg
stc
mov
jmp
fildll
lock
rcr
xor
ljmp
cmp
mov
pop
cmp
jle
int3
sbb
adc
test
xlat
aad
xorw
cmp
xchg
jle
in
push
jle
push
out
xorb
std
or
es
stos
push
adc
dec
sbb
rorb
lahf
xor
mov
xchg
cmpsb
and
loope
cmc
dec
sbb
cmp
imulb
pop
shl
lods
fstpl
sti
or
push
pop
cltd
push
jns
in
jge
mov
mov
cwtl
adc
divl
aaa
fdivs
sub
mov
sahf
ss
out
pop
lods
push
lcall
push
mov
adc
lret
pop
cmpsl
cmp
loopne
stc
in
mov
mov
sbb
cwtl
outsl
decl
ja
push
sbb
gs
lcall
outsl
mov
subb
es
sub
and
sbb
cli
je
fsts
pop
sub
pushf
dec
mov
adc
in
cmp
loopne
inc
pop
jecxz
cmpl
jg
jo
data16
loopne
test
int3
hlt
fisubl
inc
sub
sarl
jp
gs
aas
iret
in
push
clc
loop
adc
adc
ljmp
jne
jecxz
jg
fneni(8087
jg
dec
stc
inc
and
push
dec
ja
rorb
mov
jb
jle
jns
or
addr16
ja
mov
shll
pusha
lret
fdivrl
lds
jo
inc
mov
adc
dec
test
mov
adc
cmp
sub
pop
push
mov
mov
call
idivb
les
lahf
cltd
shrb
sub
in
and
sti
add
and
lds
pop
cmp
xor
flds
dec
into
jp
movsl
cmp
cwtl
aad
or
sbb
sub
sbb
jns
sub
ja
cmpsl
lahf
pop
out
jb
lret
leave
add
mov
mov
in
and
cmp
loop
sub
das
sub
mov
scas
adc
in
jbe
add
add
pop
je
stos
jno
xchg
cmpl
pop
xchg
clc
sti
mov
movsb
adc
insb
lahf
jne
pop
adc
mov
and
mov
daa
cs
lret
dec
arpl
repnz
sbb
cs
jb
and
nop
shl
push
jge
or
lock
test
push
cwtl
lock
mov
out
mov
cmc
or
add
and
mov
or
xor
and
jle
sub
and
clc
mov
iret
jne
cmp
pop
jg
aam
rclb
cld
sbb
mov
sub
hlt
xchg
shl
test
fistpll
outsb
dec
fcomps
add
and
aad
dec
mov
add
adc
rorl
dec
popl
jg
cmpl
jb
adc
mov
jmp
cmp
mov
push
inc
inc
or
jo
ljmp
mov
shl
and
lahf
cmc
fsub
mov
or
clc
push
mov
pop
repnz
ljmp
data16
test
clc
insb
stos
pusha
lods
pop
mov
sub
fsubrs
mov
arpl
mov
push
xchg
mov
or
add
stos
add
push
iret
sub
shlb
jne
enter
ret
and
shll
xchg
clc
inc
dec
pushf
mov
mov
sub
mov
stos
add
lret
mov
pop
inc
or
loop
cmc
rolb
and
sub
out
mov
jl
inc
aas
mov
sub
das
dec
scas
ftst
jmp
mov
cmp
js
fdivl
cs
pop
jns
sbb
fcomip
mov
inc
hlt
scas
mov
test
mov
stos
mov
out
push
jb
pop
icebp
bound
mov
aad
in
sahf
push
and
add
push
test
aam
orl
test
pop
fcmovnbe
movsl
jne
mov
fmull
insl
xor
ds
xchg
cmp
pop
jmp
inc
xor
ds
xor
out
jg
jns
pop
je
xchg
sub
imul
mov
lret
lods
mov
inc
jg
je
fnstsw
push
jg
pusha
jb
lret
xorb
adc
sub
cmp
pop
je
xor
mov
xor
cmc
jno
adc
ret
mov
lods
sub
out
pop
jno
in
push
leave
std
mov
jns
or
loopne
das
les
mov
mov
loop
pop
cmc
jo
stos
jge
aad
lret
loopne
mov
adc
daa
push
adc
pusha
in
das
pop
movsb
cmpsl
mov
or
test
es
mov
scas
out
jl
into
jle
es
movsl
lock
imul
pop
outsb
xor
push
adc
add
xor
cmp
xchg
test
stos
out
sbb
or
lcall
add
cmp
das
movb
mov
mov
lods
jae
pop
and
push
rcrl
fists
js,pn
pop
loope
inc
fisttpl
mov
out
clc
pop
jg
sar
jbe
ds
and
pop
dec
or
cltd
xchg
xchg
sbb
push
call
pop
sbb
and
mov
or
jb
pop
pushf
sub
lahf
cmp
lea
negb
jl
and
sub
jns
sahf
repz
jecxz
add
xor
xor
mov
mov
hlt
pushl
sbb
repnz
mov
aas
push
mov
outsl
les
dec
fldcw
sbb
test
or
shll
fildl
or
dec
and
lcall
mov
shrl
lea
int
into
cmp
imull
add
pop
mov
inc
pop
imul
mov
stos
push
out
test
xor
addr16
jl
lea
jmpw
pusha
out
dec
out
not
in
ret
test
fisttpl
pop
out
push
repz
or
insl
and
dec
adc
outsb
ds
xlat
cs
aam
cltd
pop
ja
push
loopne
cmp
dec
cld
paddusb
ljmp
and
icebp
add
and
int3
scas
cwtl
sub
push
std
mov
lods
mov
push
popa
fisubrl
pop
jmp
cmc
fnstenv
lahf
mov
mov
cmp
pusha
test
pushf
xchg
jge
lods
or
push
mov
add
ret
not
insl
push
pop
out
addb
cmp
fisubl
fisubrl
repnz
push
daa
rcrb
popa
ret
addl
add
das
xor
or
enter
inc
rorb
dec
push
loopne
pop
fs
jnp
lods
cs
fldt
mov
xor
enter
shrl
push
sbb
lods
jne
add
adc
cltd
jmp
sub
xor
pop
or
hlt
stos
and
pushf
and
cmp
adcl
fbstp
or
jne
mov
add
mov
iret
sub
movsl
fisubrs
mul
popa
data16
movsb
push
jns
gs
test
xor
vmovapd
ret
pushf
cwtl
testl
std
or
and
rol
stc
lahf
xchg
jb
mov
stc
cltd
cltd
leave
gs
dec
fisubrs
mov
ds
xorb
cmp
cwtl
popf
push
faddp
jmp
aad
stos
or
in
sbb
out
xchg
filds
inc
popf
inc
push
pop
add
inc
sbb
cld
push
xchg
pusha
iret
test
and
stos
sbb
lret
decl
lods
adcb
sub
jbe
clc
pop
repz
mov
vmovapd
inc
jae
xchg
fldcw
push
add
test
or
mov
int3
fucom
cvttps2pi
push
adc
push
vmovaps
push
sub
jae
jle
cmpsl
roll
ret
ret
mov
shlb
aas
sub
and
push
xor
push
mov
outsl
mov
cmp
aad
inc
mov
jmp
xchg
mov
nop
xchg
xorl
insl
sbbb
flds
and
mov
xchg
fcoms
loop
jmp
mov
stos
addr16
cwtl
das
sti
xchg
ja
aam
sbb
ljmp
daa
call
test
movsb
mov
lahf
mov
dec
mov
js
sahf
test
push
or
pop
push
int
or
cltd
lea
std
mov
pop
popf
icebp
fs
xor
push
in
mov
test
mov
idivl
add
mov
outsl
das
mov
push
push
push
shlb
std
mov
out
dec
jecxz
xchg
mov
or
push
arpl
inc
cmc
or
movsl
adc
xlat
aad
adc
push
repz
push
mov
xchg
leave
push
or
sbb
pop
push
addr16
out
jne
sub
mov
cmp
adc
mov
push
lds
mov
xchg
mov
mov
push
xchg
imul
rclb
fcoml
jl
inc
adc
cltd
inc
push
iret
mov
jbe
mov
dec
dec
or
xchg
adc
and
sub
lret
or
cmp
iret
pushf
or
test
add
cmpsl
and
and
inc
adc
sti
lret
lods
popa
test
mov
sbb
shr
aaa
sub
mov
je
sbb
repz
cld
xor
inc
mov
dec
mov
xchg
fwait
mov
f2xm1
inc
adc
orl
xor
inc
push
mov
cmpsl
out
cmpsb
test
cmc
xor
fsts
mov
cmpb
arpl
fmull
jge
lods
add
xchg
mov
nop
loope
outsl
push
pop
call
push
ljmp
pop
std
test
xor
sub
and
xchg
enter
adc
inc
push
cmpsl
data16
jno
xor
std
test
out
and
pushw
ljmp
xorl
into
dec
call
inc
push
lock
stos
dec
aam
outsl
or
inc
jnp
cmc
xchg
mov
jmp
xchg
mov
jecxz
push
shl
push
push
mov
sub
xchg
or
xchg
xor
jae
cmpsb
rolb
push
inc
inc
rcr
jno
imulb
fdivl
enter
xchg
xchg
scas
pop
mov
xchg
data16
ffree
jae
shll
ljmp
das
push
out
cmp
lret
fidivl
push
mov
stc
xchg
daa
mov
sbb
aad
jbe
cld
jmp
and
mov
sub
sub
or
data16
insl
and
add
cmp
xchg
in
cmp
in
inc
fdivrl
gs
push
xor
jne
gs
aad
dec
and
loopne
sub
aas
push
ss
mov
mov
or
add
loopne
shll
add
push
cmp
test
ret
mov
mov
enter
fcomps
jne
mov
push
pop
or
cltd
pop
idivl
inc
and
icebp
sbb
mov
inc
push
add
or
push
ret
nop
mov
mov
out
lods
icebp
mov
xchg
rcll
cmpb
mov
rcr
push
call
movb
pop
rcll
addr16
fadd
sub
inc
in
loopne
push
cwtl
push
mov
pcmpgtw
shlb
cli
jo
shr
push
cmp
add
xchg
fnstenv
push
dec
loope
adc
xchg
push
sbb
fidivrs
orl
ror
xchg
call
or
sub
or
pusha
mov
jbe
cmp
out
xor
stos
cmpsl
adc
imul
mov
xchg
mov
lret
and
sti
adc
scas
xor
or
push
stos
jns
andb
ja
ss
push
pop
dec
inc
repz
ret
pop
inc
rcll
xchg
inc
mov
push
sbb
aad
dec
ror
add
aas
cmpsb
int
ds
sbb
repnz
mov
xchg
sub
push
xchg
dec
jo
stc
cmp
jl
mov
sbb
in
dec
push
daa
fsubl
sbbl
fiaddl
sahf
in
jns
xchg
jo
push
cli
xor
dec
lret
xchg
mov
push
shr
or
inc
adc
sahf
mov
mov
mul
fldl
mov
rep
xchg
out
fiaddl
xor
adc
dec
inc
lea
imul
push
adc
and
xor
imul
sub
dec
mov
lea
xchg
stos
inc
sub
sahf
fs
out
dec
sahf
fwait
mov
out
dec
test
and
ss
rcrb
or
adc
leave
stos
adc
push
cs
jp
xor
sub
sbb
addr16
imul
xchg
leave
mov
inc
xor
xor
and
sbb
dec
cmp
inc
pushf
leave
sbb
fsubp
mov
push
ret
adcb
mov
lahf
sbb
lret
jno
dec
pop
lret
jb
cld
jmp
and
mov
in
push
xchg
aad
add
jne
push
cmpsl
imul
jbe
add
and
les
leave
jne
sbb
popf
out
cmp
aaa
mov
jg
popa
jp,pt
int
cmc
filds
xor
jg
inc
cltd
fs
or
in
bound
lods
cmp
or
adc
push
cli
mov
mov
sub
imul
sub
fidivs
mov
addr16
outsb
jo
outsb
loopne
gs
jbe
xchg
pop
add
sub
mov
std
push
cmpl
push
iret
push
and
shlb
sbb
in
aas
lcall
aam
sahf
loop
or
xchg
xor
mull
gs
test
fsubrs
stos
sbb
push
mov
push
loope
inc
sub
fs
mov
lcall
clc
test
sti
clc
jp
jle
lss
cli
sbb
sysenter
mov
ficoml
bound
outsl
add
paddd
arpl
push
pop
inc
xorl
push
in
xchg
hlt
push
mov
fildll
pop
xchg
pusha
mov
xchg
fisttps
into
jnp
dec
add
xchg
popf
mov
ds
jle
mov
mov
inc
adc
sbb
pop
xchg
jo
in
movsb
movsl
add
xlat
popf
jnp
jae
push
lret
imul
sbb
gs
cmpsb
jl
leave
or
ret
ja
imulb
pop
aaa
test
fmuls
sbb
add
add
add
mov
sbb
in
stc
cmp
data16
or
push
mov
ja
pop
iret
out
cmpsb
mov
into
test
les
sbb
mov
fadds
test
push
pop
lret
scas
mov
mov
jns
mov
in
xchg
adc
movsb
lods
shll
sbb
lret
pop
xor
lahf
insl
iret
in
jle
xchg
mov
dec
fmull
inc
roll
mov
mov
repz
pushf
pop
xchg
jo
push
adc
repnz
cld
pusha
test
cmp
jnp
jge
sbb
into
mov
addr16
dec
test
pushf
sub
jle
dec
decb
cmpsb
dec
mov
xchg
jnp
leave
xchg
test
push
aam
movsb
push
rclb
xor
and
or
enter
mov
dec
cmpsl
cmpsb
mov
and
xchg
or
xchg
dec
popa
bound
inc
sbb
mov
mov
pop
push
repz
aaa
dec
out
fstl
ret
cld
rolb
adc
das
lds
stc
dec
mov
fstps
mov
repnz
push
xor
mov
clc
cmp
or
inc
shll
xor
movsl
pop
out
cwtl
es
movsb
stc
mov
cmp
cmp
mov
insb
into
and
add
inc
test
out
sbb
test
and
int
out
pop
or
dec
insw
push
adc
mov
enter
in
imul
sbb
inc
scas
cmove
in
add
nop
xchg
ss
jg
push
and
push
cld
sbb
lds
push
dec
pop
idiv
and
cmp
addr16
ss
pop
ljmp
arpl
lret
lret
mov
es
imul
movsl
push
mov
cmp
or
outsl
sub
lds
push
lods
and
es
test
dec
push
sti
pop
add
xor
ss
xchg
aad
out
push
outsb
and
sub
cmp
scas
cmp
jno
icebp
jmp
popa
xlat
daa
jbe
in
mov
dec
xchg
sbbb
aaa
int3
in
out
pop
and
nop
loop
cmpsb
nop
jg
ja
rcll
xor
sub
jnp
scas
or
jg
test
imul
add
ja
shlb
pop
lock
mov
add
test
jae
cmp
mov
mov
inc
es
popf
fwait
and
lcall
lret
xchg
test
add
mov
inc
push
stos
mov
rorl
aad
idiv
stos
sub
or
lret
fmuls
lods
insl
mov
mov
push
and
ljmp
mov
movb
out
bnd
adc
aam
add
push
ja
xchg
xor
jae
daa
xor
ljmp
pop
inc
stos
scas
inc
sahf
fistl
cmp
sbb
and
sbb
adc
jb
lds
data16
js
inc
ljmp
aaa
aaa
mov
mov
out
push
dec
mov
mov
adc
cmpl
xchg
das
mov
aas
jns
jns
loopne
dec
xchg
jge
xcrypt-cfb
cmpsl
mov
fwait
ss
cmc
xchg
fildll
fcmovu
dec
ja
mov
or
data16
inc
jecxz
je
cmp
int
sti
adcb
adc
lods
mov
sub
loope
fwait
mov
pop
xchg
ret
or
js
xorl
mov
jb
or
mov
inc
outsl
pop
jge
mov
dec
in
rcll
push
inc
and
dec
jo
add
iret
ror
or
pop
outsl
sub
mov
xchg
test
jmp
les
sbb
fsub
push
xorl
lret
and
or
cs
push
dec
sub
xor
repnz
xchg
flds
mov
test
push
xchg
dec
jmp
jmp
enter
sbb
add
lret
nop
loopne
rolb
sub
ja
xchg
fsubrl
pop
dec
push
cmp
icebp
lock
ds
lds
addb
cmc
pop
shll
push
mov
pushf
cwtl
mov
loop
cmp
stc
dec
push
bound
jmp
loope,pt
mov
enter
jne
add
testl
mov
and
push
es
xchg
push
inc
sub
or
cwtl
or
stos
maxps
arpl
mov
gs
lea
adcb
imul
push
neg
leave
xor
push
cmp
xor
mov
mov
daa
sub
mov
push
cli
imul
aam
or
pop
mov
xor
lea
mov
stc
dec
jl
sub
imul
mov
in
inc
cmpsb
or
inc
adc
rorb
jecxz
daa
xchg
mov
out
jmp
mov
repz
fwait
adc
or
jl
insb
add
loopne
lock
rcrb
sbb
int3
pusha
cmp
sub
sbb
or
jl
insb
add
loopne
lock
rcrb
sbb
int3
pusha
cmp
inc
sbb
or
add
dec
loopne
lock
les
in
sbb
int3
push
cmp
sub
sbb
or
jl
in
sbb
mov
inc
clts
push
sar
xlat
je
adc
outsl
xor
leave
std
stc
int
frstor
lds
popf
pop
insl
dec
jge
dec
imul
or
leave
std
clc
int
fstpl
lea
sbb
sbb
sub
stc
int
fstpl
lea
jge
sub
sbb
sbb
mov
mov
pop
inc
push
lcall
sbb
fcoms
add
inc
jge
stos
test
cwtl
xchg
mov
in
in
not
xor
dec
pop
mov
out
idivb
mov
xor
fdivl
nop
sbb
cmpsl
sub
std
mov
clc
leave
jle
add
mov
dec
mov
adc
orl
and
add
lods
subl
sub
popa
sarl
add
insb
and
fadds
inc
clc
outsl
jge
sbb
pop
insl
cmp
cli
cmp
sub
in
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
std
xchg
movsb
cmpsl
mov
shr
inc
int3
int
or
or
and
inc
dec
push
minps
mov
int
scas
cld
in
fnstcw
adc
or
push
dec
jp
imul
scas
lcall
mov
pop
insl
dec
jge
dec
imul
or
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
int3
mov
jg
lcall
jle
mov
mov
and
cmp
sti
sbb
adc
jmp
sub
loope
icebp
lahf
xchg
pop
pop
mov
mov
test
cmp
or
clc
sahf
xlat
outsb
je
xchg
sbb
popa
mov
addr16
sbb
insb
add
xchg
mov
js
sub
pop
in
mov
cltd
adc
subb
inc
sbb
push
mov
ds
xchg
in
cmp
lcall
xchg
in
push
fs
sbb
mov
mov
pop
data16
sbb
xchg
scas
and
xor
mov
inc
scas
andb
sbb
cmp
sub
sbb
jg
sub
cmc
jne
in
movsl
add
mov
jno
jb
lods
xchg
clc
and
mov
cmp
or
shlb
cltd
mov
push
mov
and
jae
cmpsb
outsb
mov
xchg
adc
call
addr16
loope
sub
sti
movsb
mov
adc
test
xlat
bound
mov
ret
sub
test
in
pop
and
cmpsl
lret
cmpsl
pop
mov
mov
dec
pop
sub
jecxz
clc
movsl
mov
inc
pop
outsl
cmp
xor
push
sbb
mov
adc
mov
data16
push
jno
add
out
test
shll
lahf
sub
call
add
loope
imul
mov
outsb
mov
sbb
push
mov
inc
mov
mov
mov
scas
jo
sub
sarl
aaa
push
mov
js
stos
jp
dec
fnstenv
cmp
or
push
push
cld
add
lods
loop
push
mov
push
xor
adc
pop
push
fadds
jo
loope
push
in
xchg
sub
cmpsb
sarb
stos
mov
movsl
vpshld
jno
sub
aas
inc
sahf
outsb
iret
sub
push
dec
push
fsubr
add
scas
lea
sub
add
mov
jge
push
ss
movsb
dec
loop
fbstp
push
sbb
jns
adc
or
fisttpl
ss
jp
push
lcall
mov
in
int3
lods
cmp
out
jl
mov
xchg
sub
outsb
in
push
mov
and
dec
add
jae
or
repnz
adc
add
adc
icebp
inc
mov
sub
aam
mov
push
lods
jns
loop
and
lods
or
xchg
test
sbb
outsl
loop
mov
hlt
pop
cmp
outsl
enter
ret
mov
jecxz
pop
mov
push
fsubl
clc
and
pop
fdivrp
int
jecxz
push
lret
or
lahf
cwtl
icebp
xor
pushl
fnsaves
add
lock
mov
cli
add
lods
mov
cmovs
sbb
xor
sahf
mov
and
sub
adc
repnz
cld
xor
in
out
iret
lcall
dec
jb
arpl
push
jmp
sub
adc
aam
pusha
fwait
xor
int
stos
pop
outsb
fildl
repz
jno
and
pop
cmp
adc
and
mov
shl
mov
xor
sbb
das
pop
cmp
xchg
sbb
mov
jecxz
mov
jge
mov
push
orl
hlt
ss
dec
in
pop
jno
mov
fnstenv
sarl
jle
and
cwtl
mov
jo
fistl
das
ret
lret
test
adc
aam
int
mov
fidivs
aas
dec
loope
or
and
sbb
call
xlat
inc
sub
add
and
xchg
call
jo
push
aad
les
icebp
mov
int
dec
xchg
pop
xor
rcr
aad
imul
mov
stos
inc
loopne
dec
lahf
inc
cld
hlt
add
out
addr16
sub
fs
lods
adc
jb
sub
add
bound
jp
mov
lods
idivb
cmpsl
lods
jp
add
or
icebp
cli
in
lea
in
add
gs
sbb
add
lea
lcall
aam
lods
insb
adc
sbb
adc
daa
and
or
das
sahf
aam
movsl
out
inc
out
lock
push
aam
jg
mov
sbb
cld
lock
je
sbb
mov
imul
ret
xor
lds
xchg
dec
ror
bound
in
orl
loop
insb
xchg
jle
aas
repz
test
les
inc
insb
jge
mov
xchg
cltd
stos
mov
add
lcall
adc
das
sub
add
stos
imul
mov
push
mov
popa
jbe
mov
adc
dec
enter
xchg
sbb
popf
insb
outsb
fists
mov
cmpsl
jns
subb
es
insl
xchg
mov
sub
mov
fdivl
cli
aaa
jns
repz
subl
fucomip
push
pop
ds
jo
movsl
and
or
xchg
jno
push
pusha
mov
pop
push
jnp
aas
aas
sbb
sub
mov
fcmovnu
mov
dec
cmp
or
aad
fcoml
jne
push
mov
sahf
loope
out
push
sub
mov
in
addr16
and
push
cld
push
js
in
das
cmpsb
pop
adc
jne
mov
dec
push
icebp
gs
dec
lock
out
les
mov
pop
jae
gs
dec
xchg
xor
jl
sahf
cmp
out
add
and
xchg
shll
add
rorb
js
lea
lods
mov
into
popa
sahf
subl
jmp
shr
xchg
pop
jae
fadd
cld
dec
cmp
sbbl
insb
xchg
adcl
iret
jge
popf
call
fs
movsl
xchg
inc
arpl
inc
scas
mov
pop
insb
jbe
notb
sub
aas
sub
in
scas
sub
aaa
stc
popf
mov
cmp
bound
ds
push
lock
cli
mov
test
imul
inc
jns
aas
cmpsl
dec
xor
lret
inc
pop
inc
pop
pop
pop
jl
addr16
call
pushf
pop
rclb
cmpsl
jne
dec
cs
pop
sub
mov
test
das
popf
dec
pop
cs
cwtd
dec
xchg
add
ds
sbb
push
inc
push
mov
push
xor
out
lds
dec
dec
movsl
fists
mov
inc
inc
jno
aam
push
scas
add
xor
or
xchg
shrb
mull
sub
hlt
xor
mov
lahf
push
fidivrs
inc
inc
fcmovu
mov
in
xchg
outsb
aas
dec
xor
enter
js
mov
hlt
imul
xchg
aaa
mov
add
fsub
outsl
in
lcall
int3
jecxz
cmp
jnp
rorl
out
popf
fwait
int
xor
out
sub
jns
lods
dec
sub
call
add
or
in
sti
add
inc
lds
test
cmpsb
mull
adcl
outsl
push
lea
shll
pushl
mov
sbb
lods
and
dec
jb
adc
icebp
xchg
xor
cmp
lock
push
loope
jno
pop
gs
mov
add
xlat
aas
iret
xchg
iret
mov
push
pop
icebp
fwait
or
adc
fcoml
mov
xchg
imul
sti
leave
mov
imul
std
insl
add
icebp
or
orb
xchg
mov
sbb
ja
pop
js
or
push
aam
out
in
mov
pop
in
pop
push
out
jecxz
xor
popa
sub
out
ljmp
push
mov
mov
dec
xchg
push
test
xor
int3
lahf
push
out
mov
int3
std
sti
in
scas
mov
inc
call
push
out
and
daa
repnz
cli
sub
sub
mov
inc
iret
sub
or
dec
cmp
ss
leave
fldl
fsubr
ret
adc
push
popf
pop
cmp
mov
arpl
pop
adc
or
std
jno
sbb
adc
pop
and
lods
pop
adc
sub
stos
push
lret
cmp
jp
adc
cs
roll
or
movsb
push
popf
clc
cltd
fisttpl
jae
out
out
mov
inc
daa
adc
push
mov
std
in
jmp
cltd
ret
rclb
clc
decb
mov
push
leave
or
jne
dec
mov
and
or
in
mov
das
sbb
adc
clc
data16
jo
add
js
inc
jnp
push
mov
pop
xorb
pop
dec
mov
rcll
xchg
out
xchg
lods
imul
sbb
mov
push
push
test
pop
push
sub
push
sbb
testl
aad
in
int3
jne
outsl
dec
pop
or
addr16
cmpsb
jo
aad
xchg
mov
rorb
mov
lds
mov
pop
bound
test
std
insb
or
int
mov
mov
xor
push
push
arpl
sbb
out
xor
mov
int3
adc
pop
mov
aad
push
stc
mov
mov
adc
add
inc
jge
out
adc
pop
movsl
inc
or
arpl
and
mov
adc
clc
aam
sub
cmp
sub
mov
sbb
pop
xor
dec
or
out
or
std
cmpsl
sti
or
sub
inc
lods
in
repnz
dec
out
test
sub
mov
movsl
jb
push
out
push
cwtl
mov
rclb
scas
arpl
out
sub
leave
inc
in
pushf
adc
test
xchg
jmp
cmp
jo
dec
lock
popa
aam
lods
jg
dec
fstpt
jne
sti
clc
mov
outsb
add
xchg
dec
sub
push
mov
fs
mov
jg
arpl
inc
adc
xor
les
ja
or
gs
sbb
xor
scas
stos
cmp
je
mov
mov
ss
dec
add
mov
push
mov
pop
pop
popa
mov
push
insb
xchg
lcall
inc
inc
ret
sahf
jns
loopne
sbb
cmpsb
outsb
loopne
dec
dec
mov
arpl
xor
prefetcht0
subb
ret
xchg
sbb
lcall
cli
loop
pop
lock
push
rcll
loopne
in
cmp
xchg
inc
test
xor
test
cmp
pop
aaa
and
cmp
ret
nop
add
push
ja
adc
jl
hlt
fisttpll
push
outsl
in
xor
mov
sbb
test
xor
mov
jb
mov
sbb
jl
mov
jl
mov
insb
insb
or
sahf
and
bound
imul
pushf
sarl
inc
mov
xor
mov
mov
xlat
or
adc
lret
xchg
jne
daa
fwait
xor
movsb
cwtl
clc
jne
shlb
inc
test
jle
faddl
mov
or
push
fcmovnbe
push
pop
sub
daa
jb
imul
clc
test
leave
das
stos
into
jne
test
add
adc
inc
enter
jle,pn
into
fs
fldt
sub
pop
pop
jno
or
rorl
push
iret
pushf
cli
pop
push
fadds
dec
dec
stc
push
adc
xchg
or
sub
adc
shl
das
and
call
out
mov
pop
imul
cmp
push
fildll
bound
jno
cmpsl
xchg
testl
fdivrl
cwtl
bound
ss
cs
js
push
insl
mov
and
jns
add
mov
out
jae
mov
mov
imul
cmp
jae
push
cmp
xor
scas
neg
gs
sbb
fdivl
cs
pop
cmp
subb
cmc
dec
clc
in
jne
push
iret
cmp
jge
inc
add
pop
adc
xchg
pop
test
lods
roll
imul
jp
cmpsl
mov
out
cmp
dec
jno
xchg
dec
pop
in
sub
daa
xchg
xchg
push
daa
ja
add
sub
mov
icebp
data16
mov
scas
xor
sarb
add
dec
in
cwtl
in
push
pop
mov
lods
cmp
scas
data16
ffree
int
loopne
lods
push
xor
pop
and
ja
inc
pop
pushf
jle
out
in
push
into
mov
rcr
pop
pop
ret
push
mov
xchg
out
xchg
xchg
sbb
dec
cmp
in
dec
xchg
add
lret
imull
test
push
outsl
aad
out
push
shrb
and
ds
push
xchg
aaa
or
or
scas
lock
inc
repnz
adc
mov
and
cmp
in
adc
int
in
push
and
sub
jns
daa
sbbb
pop
mov
clc
enter
adc
lods
jno
in
jle
lahf
xchg
addr16
mov
pop
cmpsb
push
xchg
lods
adc
cwtl
xchg
ljmp
mov
jnp
fcmovne
adc
cmp
push
pushf
pop
jb
mov
mov
flds
sarl
stc
dec
test
icebp
mov
xor
push
jo
adc
les
or
sub
clc
mov
pop
add
icebp
dec
mov
xor
int3
xchg
ss
inc
jl
clc
in
sub
add
ds
mov
mov
pop
lcall
jl
test
lods
pop
add
leave
or
mov
in
xchg
xor
or
imul
xchg
das
adc
mov
or
push
adc
call
xchg
mov
jns
add
mov
add
adc
fadds
test
or
aas
rorl
mov
out
lds
mov
sub
andl
dec
repnz
xor
mov
ret
repnz
test
nop
out
pushf
xor
jbe
xor
loop
or
es
push
dec
shrl
pop
in
aaa
sub
push
stc
jle
cs
jle
out
stc
imul
mov
cltd
lahf
mov
sbb
xor
inc
cmp
pop
sti
test
fisubrl
es
dec
push
in
test
pop
jmp
add
ljmp
xor
fdiv
fisttps
testl
in
flds
stos
jmp
cmpl
mov
xchg
jp
mov
ficompl
pop
dec
and
aam
aam
out
pop
and
subl
ds
inc
in
enter
andl
push
adc
inc
xchg
leave
cmp
ja
or
mov
fiadds
hlt
les
cmp
fs
mov
sbb
jge
mov
xor
das
pop
jb
pop
outsb
clc
stc
in
mov
test
std
and
loope
out
cmc
stos
ljmp
inc
movsl
fstl
lds
mov
push
pusha
xchg
in
sub
arpl
push
cmp
popa
loop
stos
jns
mov
es
aaa
es
imul
jge
adc
aas
jl
adc
fcmovnbe
or
cmp
popa
es
test
cmc
das
mov
fildll
inc
pop
fcomip
xchg
sbb
add
ss
jg
frstor
hlt
push
push
ljmp
shlb
in
dec
sbb
pop
sbb
enter
or
enter
adc
repnz
add
arpl
xchg
inc
xor
fiadds
adc
jge
test
scas
nop
cltd
sub
sti
and
outsb
lahf
jge
or
xor
cmp
xchg
fs
je
xchg
dec
sbb
arpl
out
std
daa
cmp
lods
cmp
pop
sub
in
sub
push
fisttpl
cmp
mov
insb
push
sub
push
xor
gs
outsb
fwait
in
cs
xchg
sub
stos
inc
sti
int
dec
cmp
pop
shlb
rorl
push
mov
push
ret
adc
xchg
lea
xor
jecxz
int
lcall
mov
lcall
daa
punpckldq
ljmp
adc
xor
stc
xor
sbb
int
dec
mov
out
push
shr
arpl
movsb
inc
sub
adc
addr16
lahf
out
pop
lods
nop
icebp
add
scas
sahf
cmpsl
push
push
ret
cli
ret
push
popa
xchg
jb
cwtl
jb
dec
inc
pop
out
sar
pusha
xor
cmp
scas
test
out
adc
les
sub
fdivl
jmp
mov
cmpsl
call
mov
jmp
add
adcl
mov
imul
es
je
daa
xchg
es
dec
std
adc
stos
ror
sbb
pop
inc
sbb
cvtps2pi
call
imulw
push
xchg
pop
test
adc
fcompl
enter
out
dec
movsl
roll
push
rorl
mov
sub
pop
in
xor
xchg
pop
rcrb
scas
ret
sbb
fldl
cmc
xchg
adc
mov
cld
sub
adc
jle
out
lahf
arpl
sub
mov
jns
lret
loop
or
jle
pop
insb
cmp
xor
pop
mov
and
mov
ja
add
aas
sbb
loopne
jmp
out
orb
xchg
out
sbb
fsts
add
das
xor
addl
ss
imul
add
mov
cmp
imul
cltd
insb
jne
div
mov
push
das
lea
push
cmp
xchg
cli
ds
lahf
add
inc
xlat
sub
loope
mov
daa
xor
cli
jge
out
adc
ljmp
fistl
dec
insb
cmpsb
in
adc
js
icebp
xchg
scas
inc
mov
test
cmpsb
push
mov
mov
call
mov
aas
lods
das
sbb
or
cmp
jl
jmp
sub
and
sbb
andb
sbb
imul
jmp
dec
out
sub
fistpl
mov
out
and
addb
sub
rolb
enter
xchg
sub
ja
and
push
js
loope
and
push
nop
decb
or
mov
ret
mov
pop
cmc
bound
push
and
gs
jo
dec
dec
inc
test
iret
fsubs
mov
aaa
dec
loopne
pop
mov
mov
nop
push
sti
or
clc
rclb
lahf
shll
jmp
inc
lock
shrl
pmaxsw
and
sbb
decl
out
shlb
outsl
dec
les
subb
lcall
arpl
mov
inc
push
mov
aad
dec
das
mov
ljmp
lcall
push
out
adc
aam
inc
xorb
fs
mov
xchg
test
mov
jle
dec
or
int
shl
jno
fs
out
add
fisttpll
aas
or
repnz
je
xor
cmc
xor
or
addr16
aam
and
or
addb
ret
cmp
ja
adc
push
test
adc
andb
int
data16
jl
ret
cld
out
jle
mov
lret
dec
out
daa
sub
les
pop
xor
incl
jp
mov
add
xchg
xor
cmp
push
lret
subb
das
dec
loop
sti
stc
add
pusha
push
and
les
ret
mov
into
push
pop
out
ficoml
cmp
pop
and
incb
mov
insb
shlb
or
and
lods
pop
in
inc
rcr
bnd
cltd
push
sbb
mov
dec
imul
lahf
pusha
xor
out
dec
xchg
fmuls
mov
call
push
pop
popa
add
cld
in
into
mov
in
ret
nop
es
adc
sbb
test
cltd
movb
mov
sahf
arpl
jl
dec
out
push
scas
jns
mov
xchg
imul
sub
adc
mov
popf
adc
pop
in
stos
pusha
lcall
sbb
add
insb
add
or
jne
es
xor
xor
pop
rol
inc
add
and
insb
das
pop
inc
jo
movsb
adc
adc
mov
inc
mov
and
or
cmc
cmp
das
insl
ret
lock
call
sbb
jecxz
mov
inc
ret
adc
dec
inc
lahf
and
cmp
jp
xor
sub
push
inc
ret
add
adc
loop
jmp
adc
cmpsb
xchg
push
push
cmp
inc
cmp
rclb
sub
dec
dec
inc
ljmp
arpl
mov
jecxz
xlat
ljmp
loopne
scas
popa
or
mov
cmp
mov
add
pop
mov
pop
or
mov
xor
xchg
insb
fldcw
outsl
int
fstpl
lea
jge
dec
imul
or
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
leave
jge
dec
jmp
cmp
pop
in
dec
jge
dec
imul
or
enter
jmp
mov
pop
insl
dec
xlat
rorl
sub
add
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
aaa
pop
daa
outsl
pop
jg
mov
cmp
inc
into
or
lods
out
xchg
incl
mov
aaa
pop
daa
outsl
pop
jg
emms
pop
addr16
push
aas
and
mov
cmpsl
out
xchg
icebp
xchg
xlat
mov
daa
ja
addr16
push
ja
addr16
push
aas
inc
mov
test
mov
mov
es
push
outsl
inc
or
int
mov
push
clc
inc
dec
xor
pop
data16
cmpsl
int3
xchg
xchg
ja
mov
into
aaa
mov
mov
fildll
pop
adc
xchg
mov
mov
mov
ror
fwait
test
cwtl
mov
cmpsb
xlat
xchg
jb
scas
pop
mov
xor
jbe
rcrb
cmpsl
inc
dec
ficomps
push
add
jo
lahf
pop
and
mov
fsub
call
pop
mov
iret
inc
iret
dec
sbb
ja
lahf
notl
scas
daa
cmpsl
outsb
mov
cmp
into
xor
scas
js
out
mov
xlat
mov
daa
outsl
pop
jg
sbb
addr16
push
es
mov
cmpsl
notl
xchg
mov
mov
pop
or
inc
jl
jns
bound
aas
xor
mov
pushf
les
mov
and
dec
add
arpl
and
add
sarb
aad
xchg
hlt
jno
mov
xchg
sub
je
jb
jg
inc
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
js
shlb
scas
dec
movsb
push
cld
pop
sbb
mov
in
pop
cmpsb
outsb
dec
bound
inc
sbb
pop
scas
pop
insb
inc
fwait
cmp
mov
enter
sarl
ret
nop
out
mov
ret
mov
xchg
test
aam
xchg
rcll
in
mov
and
loop
fucomip
mov
ljmp
pop
push
or
push
jl
mov
into
mov
mov
xor
stc
mov
jne
sbb
inc
mov
mov
xchg
xchg
shlb
fdivl
das
in
rclb
cltd
ja
int3
loope
and
das
das
mov
cli
or
data16
mov
mov
in
dec
mov
push
mov
dec
sbbb
inc
incb
lods
cmpsl
stos
pop
fldl
adc
std
cltd
jge
inc
push
push
mov
leave
sbb
xor
mov
jmp
in
or
mov
sub
aad
mov
mov
push
or
add
out
cmc
xor
imul
mov
jmp
jg
dec
fstl
add
pop
jb
mov
imul
scas
notl
jecxz
push
in
icebp
jb
inc
jecxz
cmp
adc
stos
loopne
nop
jnp
mov
insl
ret
stos
mov
aam
cmpsl
ret
std
inc
push
stos
pop
pop
in
xor
inc
cmp
or
out
pop
mov
sahf
add
scas
and
dec
jp
push
adc
lea
mov
add
xchg
fmull
push
adc
push
sub
adc
lock
les
shr
scas
subb
test
sarb
int
sbb
ret
mov
in
aas
adc
mov
pop
xchg
mov
add
mov
mov
std
pop
jge
jg
lret
aaa
stos
in
int3
aaa
xor
cwtl
popf
daa
cmpsl
lock
inc
mov
in
pop
pop
shlb
in
and
push
aaa
cmp
push
xchg
imul
push
inc
mov
mov
scas
fiaddl
xchg
sbb
mov
inc
sbb
test
push
lods
jmp
ss
daa
xor
loope
stc
negb
fwait
sub
shrl
cmp
sbb
test
fcmovne
mov
jg
movsl
mov
fidivs
push
fwait
jno
push
jge
out
sahf
stos
les
pushf
pop
inc
push
cmpsb
loop
adc
mov
push
push
ss
pop
ret
and
bound
notl
ficomps
xchg
insl
in
nop
or
jno
inc
icebp
xor
sbb
addr16
punpckldq
or
sbb
pop
cwtl
stos
leave
or
sarl
arpl
cmpsl
mov
hlt
dec
push
dec
dec
mov
arpl
adc
xor
mov
mov
jle
ficoml
js
lcall
ret
xchg
adc
ficoms
and
rcr
popl
sti
out
out
xor
sbb
iret
push
popf
xor
out
inc
cmpsb
or
adc
and
mov
lock
add
xchg
inc
test
loope
mov
lahf
test
add
mov
int
xchg
loopne
mov
adc
scas
mov
lea
or
repz
in
test
test
xlat
xor
and
movl
sub
mov
dec
stos
out
xor
cmp
jnp
mov
mov
mov
loop
call
nop
out
sbb
pushf
and
icebp
aaa
out
ds
inc
xorb
fdivrl
mull
or
iret
aaa
xchg
in
js
inc
or
idiv
test
movb
adc
jo
mov
sbb
jo
sbb
jl
jnp
mov
cwtl
aas
ror
sar
sbb
mov
ret
cmp
add
inc
ror
dec
mov
icebp
cmpsl
mov
pop
lret
arpl
fdivp
xchg
push
xchg
pop
pop
xlat
cmp
sub
test
inc
clc
loopne
aad
jl
xor
outsl
mov
sti
cmp
or
shll
mov
or
mov
mov
roll
sbb
add
sbb
mov
ja
mov
mov
repz
add
je
mov
lahf
incb
cld
sbb
or
cmp
stc
lds
and
mov
fwait
adc
shl
cmpl
aas
mov
mov
cltd
mov
dec
clc
dec
inc
insb
iret
mov
hlt
js
xchg
push
push
addr16
loopne
imul
add
pop
test
lcall
cltd
add
les
lock
mov
and
cltd
movsb
gs
loopne
sbb
ret
xlat
add
sti
lcall
lret
xor
sti
stos
xchg
cmp
cli
outsb
hlt
aas
xchg
test
cmpsl
inc
cmp
aaa
mov
bound
rolb
push
xor
mov
in
movsl
lds
lods
fbstp
pop
xchg
imul
das
in
pop
and
adc
jge
dec
jno
jbe
push
addr16
and
lods
sub
into
push
std
push
cmp
adc
pop
mov
cmc
or
clc
iret
cmp
adc
repz
sub
subl
mov
inc
call
jbe
and
pusha
test
and
push
fstl
pop
or
cli
mov
movb
add
jmp
push
and
inc
scas
insb
push
cmc
xlat
add
dec
sbb
notl
popf
add
sbb
jae
aam
jb
mov
cmpsl
popf
mov
pop
inc
ds
or
pop
mov
test
mov
sub
cs
push
cmpsb
adc
jg
xchg
rorb
sbbl
shll
pop
and
sub
icebp
les
jecxz
mov
fcmovnbe
fisttpll
mov
cmc
ljmp
sbb
add
dec
xor
sahf
xchg
stc
xor
pop
pusha
int
mov
mov
adc
lcall
pop
cmp
dec
adc
jl
xchg
call
bound
xchg
or
sub
sbb
cmp
add
stos
sub
adc
sub
fdivl
xchg
out
stos
bound
fwait
xor
sbbb
mov
pusha
or
and
movsb
icebp
cltd
scas
or
and
sti
sub
not
sub
jno
sbb
inc
sahf
shlb
fwait
push
fdivrs
pop
dec
pop
pusha
push
sbb
mov
jle
sbb
pushf
or
stos
push
jp
and
mov
and
push
fcoml
dec
fbld
dec
scas
jle
adc
dec
cmp
adc
cmpsb
fidivrl
xchg
lret
daa
xchg
or
jnp
mov
mov
fcoml
jno
repz
xchg
mov
sub
imul
jne
jae
out
lcallw
push
mov
jp
adc
data16
cmp
sub
adc
or
ljmp
icebp
shr
call
test
pop
sbb
aam
mov
mov
out
insl
fldcw
addr16
xchg
notb
xor
out
shl
lcall
pop
xlat
add
or
mov
les
jl
jbe
scas
loop
xor
mov
mov
push
sbb
loope
test
jae
enter
xor
in
stos
push
pushf
pusha
inc
loopne
jbe
adc
cwtl
out
pop
iret
out
pop
stos
popf
test
hlt
add
or
mov
cmpsb
mov
fs
or
rcrl
popa
cmc
loope
sbb
add
fbstp
mov
mov
movsb
fnstcw
and
and
adc
aas
sub
adc
ficompl
dec
outsb
mov
loopne
adc
rcll
push
jecxz
jnp
mov
jle
xchg
dec
call
inc
addr16
fmull
inc
in
enter
pop
cmpsl
and
jecxz
inc
mov
arpl
out
movsb
or
movsb
push
insb
inc
bound
fidivrl
ljmp
shrl
xchg
in
sub
rol
mov
addr16
or
or
loope
ss
xchg
xchg
shl
adcl
mov
add
pop
in
je
je
add
xchg
loopne
add
mov
mov
rcrb
andl
inc
loope
ret
or
cmp
mov
test
mov
loopne
movsl
inc
and
in
xchg
xor
dec
xor
aam
sbb
enter
xchg
adc
sbb
xchg
dec
cmp
xchg
xchg
stos
mov
pop
mov
xchg
jae
sub
aad
popf
push
fwait
iret
jno
shl
lcall
add
insl
lods
sbb
hlt
lock
or
std
sub
add
fwait
jecxz
loop
scas
push
sbb
or
jle
cmp
shll
dec
inc
cmpsb
loop
shrb
scas
xchg
daa
jl
pop
mov
adc
add
lods
jns
mov
divl
shll
mov
sub
inc
add
mov
xchg
mov
mov
adc
fadd
and
sub
fisubs
sbb
dec
pop
pop
xor
pop
xor
popa
jnp
inc
outsb
lret
mov
sbb
fiaddl
pop
ds
mov
outsl
mov
sbb
xor
call
out
imul
mov
cmp
subb
hlt
shll
inc
out
ljmp
mov
push
mov
mov
pop
cmp
sarl
mov
negb
in
push
shrl
mov
mov
mov
mull
clc
imul
jo
inc
or
out
jle
popa
jae
and
movsl
popa
idivb
dec
mov
popf
lret
or
dec
jmp
orl
cmpsb
loope
xor
and
fld
inc
inc
jnp
mov
js
inc
mov
push
sbb
mov
repnz
jbe
pop
add
adc
mov
movsb
adc
arpl
arpl
mov
andl
sbb
loopne
inc
rclb
shrb
notl
mov
mov
push
pop
sbb
xchg
push
out
sbb
pop
sbb
popa
int3
lret
add
push
mov
pop
pusha
call
xchg
xchg
movb
ret
adc
std
fildll
inc
shll
and
xchg
adc
pmaddwd
jmp
pop
out
out
add
or
ss
add
movsb
add
test
or
loop
push
inc
insl
mov
dec
cmp
and
popf
test
inc
std
fwait
adc
out
jnp
loop
cmpsb
dec
cld
rcr
js
and
nop
fdivrl
in
out
sbb
ljmp
out
ljmp
jmp
and
cmp
push
roll
mov
cmc
std
ljmpw
pop
xchg
jl
lret
mov
or
push
enter
imul
adc
or
push
sub
cld
int
daa
pop
call
jnp
lret
popf
pop
lret
sub
idiv
fwait
out
orl
popf
bound
pop
inc
and
loope
pushf
mov
xor
popa
mov
xchg
arpl
out
mov
js
inc
cmp
dec
fcoml
mov
scas
adc
dec
or
sub
cmpsl
in
adc
sbb
js
mov
outsb
movsl
fimuls
sbb
pop
out
jo
mov
in
jecxz
jge
dec
inc
mul
mov
repz
faddp
cli
xor
mov
addr16
push
xor
adc
mov
inc
into
pushf
rclb
xor
inc
loop
daa
popa
cvttps2pi
ds
loop
fsubrs
es
and
mov
call
cli
mov
pop
dec
test
jmp
pop
mov
cs
stc
stos
adc
rcr
mov
pop
inc
dec
and
enter
push
or
xor
out
adc
sbb
dec
xchg
popa
add
mov
dec
jnp
fnstenv
mov
mull
in
adc
pusha
sbb
adc
mov
xor
imul
addr16
fs
pop
jb
ret
mov
adc
enter
ficompl
xor
dec
stc
ja
addl
dec
mov
add
cwtl
push
jg
ret
das
rcrl
sti
outsb
or
daa
push
add
mov
out
jb
lea
inc
push
jl
jmp
ret
clc
sbb
aam
cmpsl
xor
repz
cs
movsl
or
cmpsl
mov
rolb
mov
push
mov
sbb
pop
lds
jae
aaa
shl
jecxz
ret
push
sbb
push
shl
jnp
or
divb
pop
sub
adc
notb
enter
adc
stos
pop
test
adc
cmp
add
sbbb
add
push
inc
jle
jae
or
jecxz
movsb
popa
push
fnstenv
fs
add
aaa
sub
shrl
out
xor
fisubrs
pop
inc
xchg
addl
inc
xchg
out
loopne
loop
pop
jge
into
sbb
xchg
pop
and
push
fs
insb
dec
jo
ds
mov
mov
mov
scas
outsb
xchg
adc
lods
js
mov
mov
cmpsl
jl
inc
es
jns
test
lcall
into
adc
cmpsl
outsl
cmp
and
dec
in
arpl
jmp
pop
shrb
mov
mov
ret
and
cmp
std
pop
ret
sbb
daa
aas
aas
xor
lahf
xchg
xor
shrb
daa
sub
lcall
lea
add
lds
outsl
lods
pop
xor
cltd
pop
mov
dec
icebp
nop
clc
mov
repnz
xchg
in
imul
out
in
ss
jae
jo
fnstcw
pop
mov
es
adc
enter
sarb
fwait
fdivrs
lret
jbe
call
cmp
or
out
notl
add
add
push
or
push
nop
cmpsb
adc
push
adc
loopne
cmp
mov
sti
stos
imul
outsb
xchg
hlt
fidivl
sbb
xchg
mov
sti
jp
ret
leave
mov
add
pushf
lret
dec
push
outsb
or
sub
repnz
push
ja
jb
push
push
xor
scas
rclb
fistpl
sar
and
pop
fimuls
sbb
push
and
popf
sbb
xor
sub
rcrb
test
jecxz
dec
mov
lods
jne
xchg
or
push
jp
mov
lcall
cltd
ljmp
sarl
sub
test
push
test
sub
shll
and
lds
aas
popa
inc
xor
or
in
cwtl
sti
jno
jl
loop
cli
jnp
stos
jmp
dec
and
jg
lret
fcomp
lods
push
xchg
in
mov
inc
add
stos
pop
iret
pop
inc
ret
jo
sbbl
add
out
shlb
mov
shll
or
add
or
cmp
adc
neg
insl
pop
std
movsb
aas
xchg
mov
bound
sarb
cmp
sti
loopne
sbb
jbe
pop
push
xlat
jge
cli
sbb
arpl
scas
sahf
fstpl
mov
shrl
xlat
roll
dec
shlb
sub
jae
push
loop
adc
bound
mov
inc
pop
push
push
je
add
push
jnp
push
sahf
out
jbe
adc
mov
xchg
jbe
cmp
mov
rcrb
mov
jg
cmp
fisttpl
add
xlat
lahf
outsl
ret
mov
cmp
sub
in
sub
daa
dec
sarb
mov
int3
push
xlat
fbld
sub
rcr
lods
dec
fstpt
push
lds
clc
mov
clc
imul
rcr
or
or
data16
call
insl
mov
out
mov
push
enter
adc
fstpt
mov
cli
inc
fwait
lcall
sub
and
jnp
pop
fstpt
dec
mov
cmpl
push
and
imul
or
push
push
inc
adcb
test
js
mov
jbe
daa
xchg
push
cs
cmp
jecxz
cmpsl
push
orb
loope
jl
mov
dec
aas
cmp
xor
mov
negb
push
stos
add
js
add
and
cli
jg
or
add
in
sahf
inc
fldcw
fcoml
mov
or
jl
adc
fdivrl
test
loop
push
push
jle
lret
jge
std
addr16
cmp
cmpsl
xor
inc
mov
hlt
push
pop
jbe
inc
rorl
repz
xlat
rcl
mov
sahf
xchg
adc
inc
out
nop
push
inc
cwtl
std
or
pop
mov
cmp
pushf
and
xor
loop
out
xlat
into
mov
cmc
adc
mov
adc
lods
subb
and
adc
inc
xor
push
mov
fldenv
aaa
icebp
aas
mov
dec
call
push
loopne
rcl
inc
repz
clc
sti
das
ret
push
cmp
daa
aad
xchg
movsl
cmc
insl
fstl
xlat
cmp
sbb
jbe
lcall
mov
mov
mov
call
loopne
xor
xlat
je
testl
clc
pop
hlt
clc
clc
xlat
push
xor
cs
push
sarl
cmp
fildl
cmpsl
mov
clc
arpl
jmp
movsb
test
jp
bound
popa
xchg
sbb
repnz
mov
inc
mov
leavew
ss
pop
inc
xchg
ja
movsl
push
cmovae
mov
pop
pop
jbe
lahf
cmpsl
leave
loop
imul
xchg
subb
loope
sarb
repz
out
dec
xchg
inc
push
out
aad
lods
mov
stos
jp
xor
lcall
sbb
fwait
mov
add
loopne
les
push
pusha
xor
inc
dec
jbe
test
mov
push
or
outsb
scas
xchg
adc
xlat
jno
or
es
std
inc
movsl
xchg
jge
lock
pop
jae
mov
ds
push
out
pop
mov
fiaddl
test
mov
adc
pusha
dec
fdivl
jmp
sbb
dec
stos
outsb
mov
ret
mov
pop
sbb
test
aad
add
mov
pop
or
call
lea
int
jle,pn
mov
aaa
or
and
sub
lock
xor
pushf
xor
adc
jle
leave
push
mov
in
jge
add
hlt
mov
cld
jns
popf
call
push
stos
add
shrb
out
fs
add
push
pop
jno
arpl
push
nop
pop
mov
xor
dec
adc
xor
lods
stos
mov
jo
cld
fstpl
push
insb
fdivs
popf
cld
movsb
mov
cltd
xlat
push
dec
pop
hlt
mov
jns
or
xchg
cmpsl
xchg
outsb
sbb
insb
mov
lea
subl
lret
jo
mov
jno
fisttpll
dec
cmpsb
fnstsw
mov
es
add
pop
stc
jbe
pusha
fwait
inc
xchg
iret
add
inc
dec
sti
sti
adc
imul
cwtl
xchg
roll
les
push
mov
nop
lcall
test
mov
push
push
out
rorb
add
int
jo
stos
repz
ret
xor
es
in
sbb
psllq
inc
xor
push
sbb
inc
loopne
or
daa
or
or
push
in
jne
ds
mov
or
xchg
aas
int
mov
ds
and
stc
or
std
faddl
arpl
ljmp
jb
shll
pop
xchg
dec
mov
lods
stc
test
cs
fucomip
or
cltd
jmp
loop
inc
loope
mov
mov
dec
les
stos
fs
mov
lock
jo
push
lods
std
xchg
xor
pop
add
xorps
inc
fs
jae
inc
cmp
cli
aaa
and
incl
jb
or
ds
sub
das
cli
jp
adc
push
fistl
mov
outsl
mov
mov
inc
es
rcl
and
mov
ja
jnp
mov
or
imul
or
dec
inc
stos
mov
cmpsl
cs
mov
pop
imul
jmp
add
mul
dec
sbb
pop
add
pop
int3
push
xchg
xor
jnp,pt
sbb
mov
test
mov
movsb
rep
sub
ror
lea
movsl
jnp
inc
js
in
je
lahf
fdivl
int
in
cmp
jne
movsb
clc
idivb
sbb
imul
push
testl
push
lcall
or
adc
sar
movsb
bound
movsl
lret
shlb
and
lds
mov
push
aas
aas
ret
roll
daa
gs
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
daa
outsb
pop
jg
or
push
mov
or
clc
jg
sbb
inc
cmp
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
div
in
aad
lds
mov
xlat
aaa
mov
stos
jns
mov
mov
adc
or
sbb
dec
movsl
pop
xchg
imul
mov
adc
adc
sbb
sbb
inc
mov
arpl
push
mov
pop
mov
inc
mov
test
mov
cmpsb
movsl
orb
mov
or
and
mov
push
mov
and
icebp
orl
jno
mov
jns
adc
mulb
pop
jl
in
popf
sbb
gs
inc
adc
pusha
pop
cmp
sub
sbb
sub
or
movsl
cltd
push
test
rorl
inc
lret
es
add
clc
cmc
pop
sub
js
add
cltd
push
in
add
in
jmp
js
aam
cmp
dec
jae
mov
inc
mov
fdivrl
lods
adc
or
and
fstpl
jo
pusha
mov
incl
jge
das
into
daa
jmp
xchg
sbb
pop
lret
aaa
loope
test
cld
and
inc
movsb
dec
mov
xchg
mov
pop
movsb
cmp
cmp
imul
adc
push
fnstsw
mov
test
dec
mov
xchg
dec
out
movsl
pop
xchg
imul
mov
adc
or
sbb
sub
cmp
imul
mov
adc
or
pop
or
outsl
insl
lea
sub
adc
cmp
loop
into
and
pop
mov
lcall
and
into
movsl
popf
mov
dec
xchg
pop
cmp
mov
or
lock
daa
repnz
ficoml
orl
add
cmp
mov
in
pop
mov
dec
sub
ret
int3
cs
sub
sbb
push
insb
mov
lret
stos
lods
sar
dec
shr
adc
adc
rcll
stos
mov
jae
lret
jg
pusha
iret
push
int
mov
out
adc
aam
jle
lods
push
ficomps
xchg
cmp
cwtl
daa
ret
popl
push
mov
repz
jno
mov
cltd
and
in
push
inc
inc
mov
mov
notb
adc
sub
faddl
enter
daa
xchg
mov
mov
mov
aad
and
xor
cwtl
outsb
or
inc
pop
loope
fs
sub
icebp
mov
test
sbb
cmp
mov
lcall
xchg
mov
adc
xchg
mov
dec
test
sti
push
cmp
mov
adc
testb
push
bound
lcall
mov
xchg
jecxz
in
pop
dec
jo
adc
fwait
mov
or
imul
or
orb
ror
outsl
rolb
lds
sbb
jae
lods
es
jl
test
or
sbbb
cmp
jo
dec
lods
ljmp
xchg
loopne
push
mov
fstpt
push
or
dec
fucomp
call
shlb
into
add
pop
mov
inc
bound
mov
sub
stos
lods
loope
add
inc
push
dec
xor
ss
mov
xor
or
adc
push
and
mov
adc
and
inc
mov
popf
push
dec
push
or
xchg
inc
push
arpl
add
ja
inc
mov
mov
push
push
push
test
sbb
aas
shlb
lret
aaa
and
xorps
js
pop
ss
jl
or
lret
xor
dec
push
mov
test
add
mov
stos
popa
pop
sub
iret
jecxz
jl
jg
mov
and
ja
loopne
add
sahf
insl
lret
mov
mov
inc
lods
ds
idiv
loopne
imul
mov
lahf
sarb
inc
jecxz
adc
cmp
push
aas
hlt
sbb
leave
mov
mov
lods
sub
sub
or
lods
shll
xchg
xchg
addr16
repz
mov
jg
iret
or
sub
roll
jns
jecxz
mov
mov
sbb
mov
arpl
cmp
push
aad
jo
mov
or
addr16
shll
lods
ss
out
pusha
inc
rcr
xchg
cld
clc
push
pop
in
jle
or
mov
inc
inc
add
filds
into
gs
into
pop
and
testb
mov
xor
inc
pop
fstps
inc
lret
xchg
ret
fnstsw
or
cmp
cmc
or
cmp
das
inc
add
cli
cmp
xchg
mov
cmpsl
pop
pop
cltd
jmp
aad
cmp
inc
outsl
cwtl
push
push
stc
xor
out
adc
sti
fdivs
xlat
testl
sti
lret
lret
stos
loopne
in
loope
sbb
inc
fs
cld
push
imul
fneni(8087
push
xchg
push
repnz
aam
stos
scas
idivb
sbb
mov
dec
movsl
daa
mov
ret
jge,pt
xchg
inc
push
scas
mov
arpl
enter
dec
leave
icebp
pop
out
lret
push
jae
andb
out
mov
ret
and
or
int3
dec
push
xchg
add
insb
lret
jns
jge
fldt
enter
in
mov
addr16
imull
adc
sbb
aas
test
popf
cmp
pop
add
je
mov
int
sub
ds
add
ljmp
repnz
pop
sti
pop
pop
xor
xchg
loope
push
xchg
ss
out
sub
mov
pop
repz
imul
out
setg
into
jns
aam
and
mov
mov
xchg
fidivs
out
stos
in
mov
bound
loopne
mov
movsl
cmp
xchg
pop
test
dec
rcr
add
sbb
imul
aaa
scas
mov
adc
mov
cs
mov
ss
or
push
jg
imul
fdiv
pushf
dec
in
cmp
xchg
sub
mov
mov
pop
push
roll
mov
ss
in
je
xor
gs
cmp
aas
test
out
sbb
nop
arpl
stos
pop
sar
fisttpl
or
adc
add
xor
inc
addl
fisubrl
pop
push
mov
and
insb
xchg
xchg
dec
dec
and
mov
fdiv
fmulp
xchg
jns
add
cmpsl
lea
mov
push
push
inc
addb
inc
mov
cmpsb
insb
cmp
ret
sub
and
fimuls
jns
jnp
or
adc
mov
push
xchg
ret
int
out
cmpsl
pushf
jp
xor
and
push
add
icebp
or
xor
lods
outsb
cmpsb
dec
gs
fisubl
add
mov
jbe
ret
sub
ss
lret
leave
add
sub
inc
pop
push
data16
sarl
out
adcl
test
test
push
dec
and
lods
loope
aas
andb
stc
ret
aaa
xchg
xor
lock
pop
insl
test
push
pop
dec
add
jle
mov
sub
or
rclb
xor
cmp
dec
stc
and
addr16
xor
shrb
mov
xor
and
das
icebp
xchg
xchg
mov
sbb
rcr
push
dec
std
aad
xor
mov
or
pop
xor
adc
imul
jecxz
sub
lcall
dec
mov
pop
pop
ja
mov
cmc
or
mov
adc
and
insl
stos
fidivrs
mov
add
push
mov
and
ficoml
mov
repnz
in
pop
mov
aaa
hlt
test
mov
adc
icebp
jbe
decl
jp
addb
ficomps
lahf
lods
and
sahf
cmpsl
inc
cmp
popf
cmp
icebp
xor
dec
into
out
or
push
inc
pop
dec
les
jnp
mov
dec
hlt
jne
add
lea
lcall
fistps
inc
in
fsubs
mov
lret
mov
orl
int3
pop
scas
inc
mov
sbb
push
xchg
das
adc
dec
sub
out
int
iret
or
cmc
or
cmp
js
cmp
insl
adc
or
loopne
mov
cwtl
cmp
repz
sti
iret
sarl
mov
shl
push
lret
jl
mov
cli
test
or
sub
daa
dec
out
or
push
icebp
cld
mov
icebp
pop
sbb
xor
clc
je
sub
push
xchg
jo
jl
sbb
add
jbe
adcl
ror
adc
in
hlt
outsb
jo
or
xor
mov
and
fwait
sahf
push
insl
mov
repz
dec
rorb
dec
mov
roll
add
mov
xorl
bound
push
cmpsl
lods
fwait
ss
cltd
xchg
inc
dec
fisubs
stos
popf
inc
loopne
nop
lcall
fstps
not
cld
dec
adc
hlt
je
jge
adc
add
mov
mov
jecxz
ds
ja
pop
js
repnz
sub
push
bound
icebp
jno
movsl
lods
cltd
cmp
xchg
repz
xor
stos
adc
shlb
mov
jne
cmp
outsl
xor
adc
jle
dec
mov
mov
push
push
daa
data16
enter
dec
mov
inc
fnstenv
sti
or
fwait
insl
and
test
rcrl
xchg
jae
sub
ja
xor
or
cmc
loop
je
jg
mov
dec
in
mov
test
dec
cmpw
mov
outsb
pop
lahf
ja
pop
mov
cmp
arpl
xchg
mov
mov
inc
adc
jl
cmp
dec
fcmovnu
xor
sbb
lock
repnz
lods
jno
dec
stos
pop
push
add
test
fwait
ja
nop
mov
sub
lock
lret
outsb
test
jns
popa
stos
push
out
movsb
cmp
popa
sbb
push
inc
or
pop
mov
push
cmpsb
push
imul
jbe
cmpsl
dec
filds
dec
jge
call
aam
dec
imul
fcomp
lds
stos
outsl
imul
fcoml
test
jmp
jo
out
xor
test
xor
cmpsb
pop
aam
frstor
xchg
mov
and
nop
push
cli
xchg
stos
inc
imull
pop
pop
enter
add
xor
pushf
cmpl
xor
pop
jo
loop
int
jb
mov
jl
imul
or
inc
xchg
lcall
xchg
add
arpl
push
insb
sub
adc
jno
mov
test
or
push
int
add
shlb
js
push
outsb
xchg
loop
inc
out
and
mov
adc
sub
fiadds
sub
mov
out
dec
incl
xor
stc
fwait
inc
lods
push
xor
xchg
stos
cmp
sti
arpl
clc
jb
xor
lea
leave
cmpsb
pop
and
call
lds
inc
divb
mov
add
popa
mov
xadd
ljmp
jb
push
loop
sbbb
adc
clc
mov
out
jno
loope
ds
dec
rcrb
stos
rcl
data16
fneni(8087
push
inc
popf
clc
lret
out
or
pushf
sbb
add
mov
pop
dec
push
ja
jae
sub
jmp
aad
xchg
ret
push
test
int
adc
cmp
cs
inc
hlt
xor
mov
or
cmc
jb
push
xorl
jne
lds
call
lods
inc
xor
sysexit
jns
mov
pop
outsb
pop
jo
cli
lcall
sbb
dec
push
jbe
ljmp
sub
sbb
xchg
inc
add
pop
loop
and
shll
adc
sbb
fisubrl
sbb
xchg
insb
push
xorb
test
fmuls
sbbb
mov
std
adc
pop
mov
ret
xchg
lret
xor
ljmp
sub
sbb
and
cmpsl
mov
adc
subl
sbb
popa
dec
cmc
dec
imul
das
pop
mov
push
ss
mov
int3
ret
es
ret
out
ret
in
mov
mov
push
mov
ja
jae
out
sbb
mov
or
pop
stos
mov
mov
jno
mov
and
xchg
movsl
inc
sbb
mov
pop
jo
daa
sbb
enter
jmp
jne
mov
pop
aad
xor
sbb
into
nop
ficoml
mov
mov
jp
dec
mov
cmp
sti
int3
sbb
add
mov
fidivs
mov
mov
mov
pop
xor
push
cli
mov
mov
sub
pop
scas
fdivs
push
loope
xor
std
pop
aaa
jmp
cmp
subb
stos
imul
sub
sarb
lock
cmp
fsubl
sbb
sarb
insb
adc
dec
xchg
dec
mov
repnz
adc
sahf
aaa
js
insb
jg
cmc
mov
ds
fcmovnb
out
stc
stc
mov
movsb
lcall
cmp
pop
dec
pushl
cmp
fdivrp
scas
push
mov
xor
mov
arpl
sbb
push
rcrb
aam
mov
xor
imul
test
in
cwtl
enter
push
jge
adc
mov
lds
mov
add
or
hlt
imul
or
outsb
test
jle
loope
mov
and
sbb
xor
jge
js
inc
push
aaa
sbb
dec
aas
fcoml
or
push
cmc
mov
push
icebp
aad
inc
sub
bnd
pop
js
lret
bound
loop
push
jecxz
ja
dec
in
xchg
mov
rcll
jne
popf
in
cli
out
aaa
ret
mov
sub
lahf
push
adcb
mov
ss
dec
into
push
pusha
xchg
and
adcb
cmp
dec
fdivl
push
lock
mov
cmp
addr16
fnstsw
loope
ret
into
pushf
inc
or
pop
pop
push
mov
xchg
repnz
sub
aam
and
sbb
repnz
fnstenv
call
es
mov
adc
adc
add
nop
jge
xchg
mov
jecxz
in
lock
pushf
repz
je
mov
outsl
jb
push
push
out
dec
jnp
dec
in
mov
mov
scas
fwait
hlt
push
and
mov
push
or
jle
out
fwait
jmp
jns
mov
or
ret
push
loope
cmp
sbb
sarb
sahf
push
xchg
scas
cmp
int
fwait
xchg
cwtl
sub
out
mov
jmp
scas
mov
pushf
cltd
pop
mov
test
mov
push
or
sub
cmp
mov
fcmovbe
shll
enter
mov
rcll
xchg
out
mov
lea
xchg
mov
ja
sub
ds
loop
mov
out
pop
pusha
jp
in
imul
xchg
jle
mov
jno
mov
rorb
js
mov
fdivl
inc
dec
sbb
jg
lock
jno
cmp
movsl
sbb
cli
cmp
sub
or
loope
in
dec
sbb
int3
lods
out
aas
decb
leave
sbb
fwait
rcrb
out
out
xchg
jnp
repz
orl
push
cwtl
fwait
cltd
xchg
clc
mov
mov
andb
cmp
add
lock
outsb
int3
lods
addr16
clc
and
xor
cmpsb
sbb
xchg
xchg
pusha
sbb
in
loop
movsl
inc
cltd
jb
and
jle
add
and
xchg
pop
test
push
aad
js
push
subb
push
mov
xlat
xchg
adc
fdivr
les
cli
shlb
fs
push
std
dec
ret
lret
movsb
pop
inc
and
pop
jne
push
int3
mov
or
inc
cmp
push
sub
test
repz
jmp
das
imul
rcrb
fildll
xchg
pop
subl
mov
incl
in
mov
sub
xchg
call
pop
lods
mov
push
movsl
out
mov
rclb
cmp
and
cs
fwait
dec
jb
jb
data16
dec
les
call
rcl
icebp
aas
test
push
and
mov
imul
stos
mov
xor
mov
sbb
mov
cmp
xchg
sub
xor
or
mul
xchg
aas
std
cmovl
aas
inc
js
fistl
test
sub
dec
sbb
mov
nop
dec
jp
inc
inc
and
frstor
bound
mov
sbb
add
fdivs
pop
out
add
xchg
adc
test
pop
dec
enter
sbb
lods
push
fidivs
sti
fdivrl
repz
fiaddl
int
push
pop
xor
xor
sbbl
mov
out
orb
repnz
inc
test
cmp
or
jne
sbb
jg
out
mov
ljmp
arpl
sub
clc
and
in
out
adc
lods
push
inc
fmul
rcrl
movsl
sahf
pop
cld
xorl
add
les
mov
cmp
hlt
arpl
fdiv
hlt
stc
inc
inc
jle
push
cmpb
testb
pop
dec
push
mov
cmpsl
das
sub
adc
rorl
lret
ucomiss
test
loope
cmc
pop
adc
in
stc
out
add
inc
insl
jge
sbb
sbb
or
fwait
stc
mov
xchg
fsubs
gs
loope
mov
lock
test
out
jle
push
outsl
pushf
js
pop
js
movsl
and
sti
dec
jae
lret
sbb
xor
lret
sarl
adc
xchg
mov
pop
jo
sbb
adc
pop
mov
pop
inc
pop
fs
fcompl
mov
add
aad
mov
data16
push
pop
les
into
inc
xor
jle
sub
mov
lods
lahf
xlat
ja
aad
fsubrs
out
popl
xor
hlt
adc
dec
shrd
push
and
addr16
fdivrp
dec
push
fwait
mov
sbbl
adc
js
stos
mov
mov
xchg
test
int3
adc
mov
imul
cmpsl
divb
stos
imul
dec
mov
aaa
sbbl
xchg
fistl
jg
movsl
in
xlat
pop
add
shrb
pop
clc
dec
sub
loop
inc
rcr
fdivrl
sahf
mov
out
imul
int
xchg
or
rep
pop
mov
mov
mov
scas
roll
jns
push
data16
xor
orl
loope
std
rcrb
mov
lods
jg
push
push
outsl
cli
in
fwait
jo
ja
popf
stos
mov
scas
loop
dec
cmp
mov
jno
out
cld
scas
mov
xchg
sub
and
out
movsl
in
cmc
and
mov
mov
push
dec
out
pop
cmp
inc
inc
sbbl
push
icebp
add
out
cmpsb
inc
loop,pn
push
add
shrl
mov
aas
repz
es
test
xchg
mov
mov
iret
lret
lds
adc
mov
scas
aam
sub
leave
add
adc
jecxz
aam
repz
out
loope
xchg
cmp
pop
nop
and
cmp
ds
test
popa
add
stc
xchg
ret
faddl
out
pop
jnp
in
sbb
jp
cli
out
ficompl
pop
push
xchg
push
xor
cmpsb
mov
cs
or
mov
or
inc
xchg
pop
test
sbb
fmull
mov
and
add
jge
xchg
aam
inc
stc
pop
and
test
and
xor
sub
mov
mov
mov
sub
ljmp
jns
xor
shl
aaa
sub
and
and
cmp
sub
iret
sarb
js
sbb
pop
in
lret
mov
pop
imul
add
xchg
xor
sub
xor
jecxz
mov
sti
pop
out
xchg
lahf
ret
in
mov
test
xchg
push
mov
ret
adc
inc
into
sbb
add
inc
xchg
fwait
outsl
scas
divl
cmp
lock
sub
pop
mov
mov
rcl
cmpsl
lahf
ret
push
xchg
js
dec
and
xor
sub
and
mov
sbb
inc
jnp
xchg
iret
fs
cs
dec
and
jbe
or
or
stc
sbb
xchg
xchg
cmp
pop
in
mov
sti
xchg
sbb
dec
paddusb
int
xchg
scas
xchg
addb
ljmp
cmp
jo
jae
ret
push
push
pop
push
push
mov
sub
lahf
xchg
sahf
xchg
outsb
jnp
iret
or
dec
imul
cmp
adc
sbb
add
push
push
cwtl
mov
or
fldcw
fs
mov
sbb
movsl
dec
in
gs
ret
repnz
insb
cmp
ljmp
mov
inc
pop
xchg
cmpsl
pop
sub
push
es
dec
test
lock
lret
inc
pop
cmc
or
jo
dec
adc
add
fimuls
inc
cltd
adc
lret
popa
mov
lds
movsl
push
lods
lods
add
sub
adc
cli
or
icebp
xchg
aaa
sub
arpl
adc
cli
and
mov
cmp
sbb
scas
dec
jb
mov
xchg
and
shlb
adc
jmp
adcb
inc
pop
mov
movsl
lock
dec
cmp
add
sub
or
pop
js
or
cmp
aam
cmp
xor
xchg
cld
gs
aas
inc
nop
mov
lock
mov
push
adc
mov
sahf
fwait
push
imul
adc
inc
inc
cltd
outsb
jg
and
fbstp
adc
out
xchg
mov
sub
sahf
xchg
pop
cld
fwait
jnp
icebp
mov
sub
cmp
fbld
aaa
pop
sbb
lods
inc
pop
lock
loop
insl
mov
insb
mov
mov
data16
mov
lds
mov
movsl
pop
xchg
imul
mov
adc
or
sbb
sub
cmp
imul
mov
adc
or
sbb
dec
movsl
pop
xchg
imul
movsl
test
xor
stc
loope
mov
cmp
imul
into
inc
inc
lods
es
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
pop
xchg
pop
in
inc
adcl
addr16
and
mov
arpl
jae
inc
push
xlat
mov
pop
xchg
pop
jecxz
repz
inc
sarl
cmpsl
xor
arpl
jae
inc
push
xlat
mov
popf
xchg
popa
jecxz
repz
ret
dec
shll
cmpsl
xor
mov
xchg
or
arpl
jb
push
sub
lret
lds
call
cmp
pushf
sub
hlt
jbe
push
call
enter
aad
sbb
pushf
repnz
dec
lods
lcall
sbb
mov
mov
or
cmpsb
pop
cmpsl
cld
xchg
ret
adc
or
adc
aaa
cmc
add
pop
jecxz
jecxz
cmp
and
push
mov
xchg
popf
repnz
cmp
pop
icebp
lret
stos
call
ret
stos
xor
addr16
lea
mov
fmuls
sbb
xor
hlt
pop
out
push
push
std
pop
jb
inc
sub
mov
xorl
jecxz
repz
inc
rol
and
adc
inc
fists
in
ficompl
imul
pop
mov
adc
aaa
pusha
and
push
mov
pop
mov
shll
movsl
xor
shll
xor
inc
aad
cmpsl
push
test
divl
mov
xlat
xlat
ljmp
ja
inc
rcll
cmpsl
xor
arpl
jae
inc
push
xlat
mov
pop
xchg
pop
jecxz
repz
inc
rcll
cmpsl
xor
arpl
jae
inc
push
xlat
mov
jp
stc
cmp
imul
shrl
and
jb
dec
bound
add
or
loope
in
es
mov
jecxz
jecxz
cld
add
fistpl
lahf
dec
add
decb
movsb
stos
fcos
sbb
cwtl
ja
mov
mov
sti
cmpsl
out
repnz
jne
cmp
movsl
int3
mov
insb
jb
imul
jbe
xchg
adc
stos
pop
xchg
ret
xchg
jg
inc
sbb
pusha
stos
fst
leave
imul
mov
sahf
loop
jge
jecxz
out
out
fsubrs
jbe
add
imul
push
test
cmp
jnp
pop
push
inc
sarl
sahf
cmpsl
loopne
insb
sub
and
inc
sub
icebp
cli
cli
stos
inc
sbb
mov
std
add
adc
test
jbe
mov
das
subb
pop
div
mov
les
roll
mov
es
pop
mov
rcrl
cmp
xchg
rcrl
or
push
inc
or
pop
aaa
and
push
cmp
pop
sbb
xchg
in
scas
mov
push
mov
pop
or
xor
lds
test
add
outsl
adcb
mov
jl
sub
cmp
fs
xchg
iret
or
dec
int
add
mov
push
jb
sub
fidivl
and
ss
adcb
sub
push
mov
in
ja
jge
add
inc
cld
insl
and
movsl
lahf
sahf
cmpsl
xchg
jns
mov
pop
add
mov
jmp
cltd
loope
aas
addr16
jns
sbb
clc
pop
enter
pusha
mov
cli
enter
or
mov
mov
mov
push
pop
gs
mov
mov
sahf
jnp
jbe
xchg
adc
scas
mov
rorb
mov
out
or
lcall
xorb
pop
push
push
fisttpll
mov
inc
push
dec
cmp
dec
mov
push
inc
leave
std
adc
mov
xor
dec
loope
mov
sub
sub
pop
xchg
orl
inc
xor
test
das
test
dec
ficomps
xor
pop
movsb
pushf
fsubp
xchg
cs
aam
lea
sub
inc
push
xchg
or
pop
lahf
mov
jmp
rcrl
and
lea
add
je
pop
push
cmp
xchg
ss
sub
xorl
mov
stos
pop
in
and
pop
sbb
sbb
dec
loopne
xchg
sub
cwtl
mov
dec
and
inc
and
test
pcmpgtd
lods
int
xchg
mov
outsl
out
jmp
in
mov
jnp
clc
cmpsl
inc
movsb
cmp
push
or
fscale
mov
shl
fwait
out
xchg
xchg
cmp
mov
adc
add
int3
sbb
mov
insl
sbb
pusha
ror
loope
inc
or
cmp
add
inc
sub
jns
xchg
mov
sbb
cld
lea
push
icebp
imul
pop
cmpb
jg
sbb
xchg
xor
and
inc
dec
mov
pop
cwtl
xchg
mov
xchg
push
aas
cmpsl
or
fs
push
out
data16
aad
mov
je
mov
mov
push
mov
sahf
xchg
xor
ds
roll
icebp
xchg
xchg
mov
nop
sbb
jg
xlat
mov
mov
xchg
or
out
push
sbb
gs
pop
stos
add
jb
cmpsl
das
daa
imul
mov
es
adc
aad
pop
leave
dec
xor
push
push
push
mov
fwait
adc
jg
in
add
cmp
jmp
sahf
pop
adc
fsubs
dec
cmp
stc
push
sub
loop
adc
mov
fcoml
jne
lock
cmp
arpl
push
out
cld
xor
xlat
mov
out
sbb
adc
and
popa
jecxz
popf
sahf
mov
inc
fimull
inc
fistpll
mov
jae
jge
fdivrl
xchg
fstps
add
enter
pop
jecxz
jg
insb
lds
in
xor
and
mov
and
cld
push
lret
mov
mov
inc
pop
faddl
jne
sub
dec
adc
mov
fidivrl
jl
out
xchg
out
jmp
or
adc
ret
jb
push
xchg
out
mul
sbb
call
mov
sbb
xchg
rcll
jmp
jp
xor
jle
in
negl
cmp
pop
psraw
dec
cmp
dec
pop
pop
mov
jg
popf
mov
pusha
cmp
push
and
push
or
lods
fdivs
push
mov
stos
aam
fidivs
in
ss
push
movsl
pop
bndstx
push
test
or
or
lret
sbb
add
sbb
adc
inc
mov
adc
cmp
popf
add
imul
sub
xchg
stc
and
jne
les
in
mov
mov
mov
push
gs
repnz
xor
je
shrl
ljmp
cmp
adc
dec
cmp
lea
outsl
sbbb
pushw
xorl
cmc
bndstx
jle
pop
clc
int3
inc
xor
ja
shll
push
pop
ljmp
outsb
jp
dec
fidivs
fwait
push
or
cltd
lea
pop
cmp
stos
das
icebp
in
pop
and
out
repnz
ss
hlt
jl
push
fs
mov
inc
insl
sub
filds
lds
jno
add
dec
das
push
out
or
icebp
stos
jmp
jge
js
cltd
dec
lahf
and
xchg
sbb
mov
icebp
push
fdivrl
adc
aaa
arpl
xor
pop
and
dec
leave
add
sub
out
mov
push
pop
inc
sbb
xchg
test
jp
mov
or
inc
rclb
jo
mov
imul
jg
test
sbb
insl
pop
sub
mov
push
push
sbb
cmp
sti
sub
test
jmp
imul
ret
lret
iret
pop
add
pop
mov
cltd
in
test
mov
testl
scas
insl
cmp
pop
scas
sub
xor
cld
mov
aam
bound
xchg
imul
and
mov
into
in
movsl
mov
pop
push
repz
push
sub
adc
repz
jmp
jecxz
xor
aad
jbe
scas
ja
ds
ret
nop
and
xchg
into
test
dec
jg
mov
scas
cmp
pop
movsb
lea
stos
push
dec
je
out
dec
mov
cmp
inc
ja,pt
pop
hlt
test
call
ss
cmp
dec
icebp
out
mov
gs
call
adc
out
cmpsl
nop
and
jbe
push
daa
sub
jae
sub
cmp
inc
push
push
arpl
movsl
add
mov
mov
inc
xchg
cwtl
push
mov
cmpl
jbe
mov
jp
repnz
fsubrs
sbb
lods
cld
cmp
and
outsl
sbb
dec
test
pop
or
and
vmread
imul
pop
pop
rcrb
cwtl
dec
cmpsl
and
mov
pop
popf
adc
mov
mov
mov
lcall
pop
inc
push
xchg
push
push
push
mov
scas
jno
in
sub
dec
jecxz
sub
insl
sbb
mov
mov
mov
insl
or
repz
add
cmp
stos
push
xor
adc
inc
aaa
loope
jnp
cli
fwait
jmp
adc
cmc
push
mov
jmp
xor
pushf
movsb
cwtl
cmp
andb
xchg
pop
adc
out
push
pushf
dec
out
jmp
into
lret
pop
add
aam
cltd
imul
push
shl
inc
jp
and
in
mov
imul
dec
daa
mov
popa
inc
lods
mov
push
xor
loope
pop
dec
mov
xor
sbb
fstps
add
int
push
arpl
out
sahf
in
jmp
fldenv
mov
aad
or
mov
xor
scas
movsl
mov
loopne
jo
clc
sbb
mov
cmp
inc
add
inc
lahf
xor
das
ja
aas
xor
sbb
mov
in
and
dec
in
mov
arpl
bound
jge
lret
jle
mov
fs
push
aad
arpl
or
mov
inc
flds
pop
ret
mov
hlt
cmp
addr16
in
mov
into
test
mov
js
dec
mov
xor
mov
loopne
or
sarb
pop
out
lods
mov
mov
enter
mov
mov
cwtl
mov
mul
lret
pop
push
iret
dec
arpl
shrl
gs
lret
xor
ljmp
xchg
sub
mov
mov
pushaw
popf
call
shlb
lret
insb
in
inc
pop
rorb
cmp
cwtl
lods
mov
push
inc
sti
je
xchg
test
xchg
pop
scas
sbb
or
sub
stos
lret
iret
shr
sbb
cmp
sub
sbb
stc
xchg
mov
loop
popa
cld
jb
pop
jecxz
clc
mov
repz
aam
lea
fcomi
xor
xchg
and
stos
inc
mov
dec
inc
iret
in
push
inc
sbb
dec
sahf
jecxz
fdivrs
mov
stos
or
out
ds
test
mov
xor
flds
das
mov
and
add
rolb
sbb
popf
adc
fistl
add
fadds
mov
in
bound
iret
xchg
cmp
xor
lds
sbb
and
jecxz
aad
loop
or
mov
mov
inc
popa
mov
int
out
push
popa
mov
sar
insl
in
dec
and
jae
scas
js
xchg
xchg
lret
lcall
imul
imul
jae
sbb
push
je
jnp
mov
test
call
lds
inc
stos
orl
push
repz
nop
push
arpl
adc
stos
cmp
xchg
mov
mov
loopne
mov
stos
movsl
ret
and
push
or
dec
xchg
inc
repnz
jb
cmp
test
xor
push
aad
dec
and
mov
in
cmpsb
leave
mov
or
sub
mov
pusha
pusha
xor
loopne
faddp
dec
adc
xor
cmpsb
xchg
in
add
dec
jp
mov
sub
or
inc
cmp
test
pushf
adcb
sahf
loope
insl
lcall
repz
or
mov
stos
stos
pop
mov
sti
mov
jmp
incb
fisubl
cmp
adc
mov
test
push
mov
cmp
clc
in
loop
lods
inc
pop
bts
ja
cmp
lcall
mov
pop
cli
outsb
push
sub
pusha
xorb
test
sub
cmp
mov
pop
fmull
ffreep
outsl
jbe
mov
mov
ficompl
rcl
and
js
xchg
jge
fcoms
push
es
push
jle
js
dec
lods
jecxz
and
jg
lret
cmp
das
inc
pop
stos
lret
loop
vprotw
aas
and
insl
sti
lock
fldl
ret
repnz
addr16
xchg
cmp
mov
js
jmp
sub
push
popf
and
xchg
or
xchg
insb
pusha
aam
hlt
dec
loopne
xor
mov
xchg
mov
mov
mov
mov
pushf
ret
cmc
adc
dec
or
jb
cmp
addr16
pop
mov
test
or
xor
dec
cld
imul
xchg
mov
insb
fildl
ret
push
lahf
repnz
push
and
jmp
sub
sti
xlat
test
mov
sbb
sbb
fs
testl
dec
repnz
sbb
add
in
fists
mov
mov
mov
or
mov
pop
popa
test
aam
push
adc
cld
mov
in
fimuls
mov
cmp
jns
sbbl
lds
pop
rcll
mov
lods
jne
cwtl
lds
mov
push
clc
adc
mov
jmp
jge
mov
vmwrite
lahf
pop
mov
test
mov
fwait
adc
paddsb
jo
inc
movsb
inc
inc
es
xchg
sub
fisttpl
fwait
pusha
mov
mov
ja
stos
fdivrl
ret
lcall
adc
or
mov
or
and
aam
mov
dec
lahf
daa
xor
rorb
xchg
mov
pop
ss
test
adc
mov
inc
outsb
stos
inc
adc
and
add
cmp
push
push
mov
std
mov
lcall
xor
sub
sub
mov
sarl
fcmovbe
jbe
lods
popa
pusha
push
pushf
pop
gs
addb
mov
cmc
push
dec
addr16
lahf
popf
or
inc
fldenv
push
repz
jb
ss
jne
adc
or
fs
fsubrl
inc
int3
pushf
sub
out
mov
jns
test
sbb
inc
lahf
jnp
inc
inc
pop
dec
sub
jmp
xor
in
and
push
fdiv
cli
dec
test
outsl
mov
aad
popf
scas
dec
fistpl
lods
jo
icebp
cmp
ret
das
icebp
push
dec
jae
lret
pushf
xlat
pop
pop
push
ficoms
pop
push
in
dec
hlt
lret
pop
mov
out
divb
inc
xor
dec
fisttpl
inc
mov
sub
imul
loop
pop
jp
cmp
jecxz
fsub
outsb
rclb
fnsave
iret
inc
lahf
lret
notl
movsb
scas
xchg
xchg
ljmp
cmc
std
inc
dec
fsubl
repz
movsb
ds
out
pushf
ss
mov
xchg
jae
test
outsb
pop
add
jge
mov
int
add
add
adc
loopne
decb
outsb
or
add
in
jno
push
push
inc
les
int3
pushw
cmpl
cltd
leave
pop
cmp
imul
mov
push
and
aam
pop
mov
and
mov
jns
ja
ret
movsl
push
je
rorb
or
push
sub
into
xor
leave
xchg
in
mov
lock
and
jmp
sub
out
sbb
loop
testl
dec
xchg
mov
mov
dec
into
sarl
dec
mov
mov
lock
jae
aam
sub
clc
and
and
icebp
stc
push
movswl
scas
int
jecxz
pushf
cmp
nop
push
sbb
movsl
or
daa
arpl
sbb
movsb
cwtl
iret
xor
in
push
mov
dec
pop
sbb
pop
and
addl
lock
push
pop
ret
leave
cld
popa
mov
xchg
hlt
push
lahf
add
cmc
ret
jmp
xor
repnz
pusha
movsl
dec
dec
and
out
fnsave
xor
mov
mov
popl
jne
je
dec
out
mov
rcr
mov
test
in
cmpsl
add
aas
ja
mov
push
cmpl
push
cmp
les
cmc
jnp
lods
sbb
test
daa
sbbb
xchg
hlt
dec
fcom
int3
aas
add
das
roll
outsb
xchg
xchg
xor
lret
push
dec
pop
out
mov
jge
push
enter
mov
divl
test
or
jb
cmp
jmp
inc
mov
dec
add
outsl
add
mov
add
add
sub
sbb
mov
push
pop
iret
sbb
adc
and
pop
mov
mov
adc
mulb
push
stos
sbb
fsubrl
clc
xchg
gs
mov
cwtl
out
inc
jb
loope
jbe
inc
sub
sub
filds
xchg
xor
xchg
aaa
in
adc
jle
es
or
mov
ret
repnz
inc
jp
xlat
mov
iret
sbb
adc
xlat
lock
lret
dec
push
cmp
add
lret
mov
dec
inc
sub
fildl
hlt
pop
xor
bnd
pop
push
fwait
sbb
rclb
call
shll
out
bound
outsb
xchg
mov
fstp
orb
cli
iret
sar
dec
adc
mov
into
dec
lret
jge
add
adc
int3
xor
push
and
adc
jl
mov
imul
mov
insb
jl
mov
lods
js
lret
in
xor
xor
mov
shll
pop
jne
out
mov
xchg
push
addr16
add
mov
outsb
jns
rcll
add
push
es
pop
pop
jo
jno
aam
and
mov
xchg
or
ficoms
sub
or
lret
mov
sub
adcb
adcb
cmp
mov
sub
notb
lret
fildll
cld
aad
popf
bswap
dec
xchg
cmpsb
and
mov
sti
aaa
adc
dec
loopne
stos
cmp
clc
andb
sub
call
push
cmpsl
mov
jp
sub
fldt
push
into
cmp
pop
dec
cmpsl
ss
pusha
jae
and
dec
mov
jge
shrb
inc
lahf
stos
daa
pop
gs
push
test
call
mov
pusha
push
aam
shll
shlb
fdivrs
fs
call
mov
xor
xor
or
icebp
push
add
lods
xchg
int
adc
fldcw
sbb
fucomip
fsts
pop
mov
xlat
nop
cmpl
inc
cmp
lock
popf
fisubl
xorl
mov
mov
inc
mov
and
pop
jp
and
std
stc
ret
mov
lods
lds
out
push
leave
lods
adc
ja
pop
mov
ret
xchg
loope
orl
cltd
mov
in
lock
and
jno
movsb
mov
inc
imull
loope
fstpl
in
xchg
cs
and
xor
popf
sub
mov
call
sbb
rorb
iret
mov
je
mov
shll
shll
and
lahf
arpl
inc
insb
aad
pushl
cmp
xlat
push
mov
or
mov
outsl
insl
int3
out
mov
stc
jbe
lods
rcll
in
or
pop
sahf
pushf
add
ret
push
and
mov
xchg
adc
mov
jp
mov
inc
add
and
lock
in
imul
and
sahf
xor
push
ljmp
stos
pusha
out
nop
movb
push
jl
fnstcw
enter
in
sub
ljmp
xchg
push
pop
in
and
sbb
leave
push
mov
loope
js
out
rcrb
out
or
cs
fsub
lea
jb
dec
jbe
test
lcall
outsl
pop
cltd
xlat
stos
scas
mov
mov
add
lret
lods
out
jmp
adc
sbbl
ss
stos
fs
test
addr16
mov
in
xchg
js
dec
int3
leave
xor
mov
orb
mov
enter
icebp
pop
je
sar
in
gs
push
fiaddl
mov
sub
cld
xor
pop
ja
xor
jae
push
mov
daa
adc
test
in
jle
das
jns
popa
mov
or
shrl
sub
mov
call
push
push
jns
pop
mov
lods
push
lret
shlb
mov
xor
in
mov
incb
mov
fidivrs
stos
jmp
enter
pusha
jecxz
jno
lock
jne
push
sub
iret
icebp
iret
pop
imul
mov
out
fsubrs
sbb
pop
les
hlt
adc
out
data16
ds
dec
es
aas
dec
or
fnstcw
test
call
jno
jg,pn
push
jge
aas
sbb
outsb
cmpsb
hlt
stc
in
out
xchg
pop
lcall
mov
xor
adc
stos
stos
fs
je
cltd
mov
gs
jo
mov
mov
cmc
cltd
adc
push
stos
pop
imul
jne
sbb
out
jp
mov
push
pop
fcmovnb
out
inc
mov
mov
or
xchg
je
sub
push
mov
gs
jns
push
ret
vmwrite
mov
or
shl
add
and
xor
das
sti
jmp
jne
out
fmull
cmp
mov
mov
mov
lret
xchg
mov
jge
popf
fprem1
je
je
je
clc
jae
pop
xlat
jp
dec
sbb
int
inc
stos
pop
push
or
mov
lret
fisubrl
xor
xor
int
imul
hlt
jecxz
xchg
jo
xchg
jl
fadd
mov
scas
sbb
sub
and
jmp
or
mov
sub
mov
jns
sub
cmp
rorl
pusha
or
or
cmp
cwtl
mov
sbb
push
cwtl
fldenv
and
insb
inc
push
addr16
sub
das
jl
or
jmp
data16
sub
enter
jge
cmpl
gs
mov
call
jb
inc
sub
mov
movsb
add
ja
inc
rcll
cmpsl
xor
arpl
jae
inc
push
xlat
mov
pop
xchg
pop
jecxz
repz
inc
rcll
cmpsl
xor
arpl
jae
inc
push
xlat
mov
pop
xchg
adc
addr16
inc
rcll
cmpsb
xor
arpl
jae
inc
into
push
xor
jecxz
push
jecxz
repz
rcll
test
lahf
sti
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xlat
pushl
adc
lea
jo
orb
cmp
dec
sarb
push
xchg
add
xor
inc
lret
pusha
ljmp
mov
sarb
push
inc
xchg
or
cmp
insb
xor
jl
insb
mov
push
pop
decl
jp
push
mov
fildl
stos
jle
push
frstor
ja
jl
test
orl
xor
cmp
pop
aas
movsl
pop
scas
xchg
mov
add
inc
xor
xor
enter
rcr
sti
loope
jge
add
push
push
adc
sti
pop
or
aam
movsl
loopne
rorb
shl
xor
mov
inc
xor
movq
sub
dec
das
outsl
or
clc
inc
jae
mov
fs
adc
fcmovbe
pop
add
sub
sub
pop
nop
mov
push
pop
xor
jg
adc
pop
sub
aas
loopne
je
add
cmp
inc
mov
mov
cwtl
push
loop
xor
cmp
push
sub
push
sahf
call
arpl
push
mov
mov
adc
push
dec
fnstenv
scas
and
push
mov
add
inc
popa
adc
xchg
push
cltd
sbb
in
pop
lds
sub
sub
lret
push
lahf
and
push
cli
pusha
ljmp
mov
dec
sarb
push
lcall
xor
inc
lret
pusha
ljmp
mov
dec
sarb
push
lcall
sbb
fldl2t
test
adc
sbb
or
or
push
lahf
sahf
dec
mov
mov
je
into
pop
ss
sbb
inc
inc
cmp
js
jmp
std
jle
ret
jle
mov
mov
cltd
xor
pop
mov
imul
mov
mov
das
clc
popf
dec
cli
push
cld
pusha
mov
push
jae
int
in
test
sbb
repnz
xchg
je
int
mov
add
aas
lret
mov
jg
out
in
sarl
movsl
test
mov
call
bound
push
jle
mov
cmp
xor
mov
cmc
fadds
mov
stos
mov
int3
test
pop
and
in
movsb
test
sti
out
cmp
out
sub
sub
test
pop
imul
mov
push
xor
pop
push
insb
addl
jnp
jp
ret
mov
jbe
enter
sub
sub
mulb
sbb
add
gs
push
pop
test
test
pop
xchg
mov
xor
xchg
inc
je
scas
lods
daa
inc
push
lret
je
pop
in
dec
push
shrl
push
push
jmp
negl
repnz
fs
in
das
repnz
popa
xlat
dec
outsl
sti
sbb
test
test
mov
jb
mov
push
iret
pop
and
jl
ficomps
arpl
nop
xchg
push
sbbb
and
enter
test
dec
cmpsl
adc
cmp
adcl
sbb
ja
pop
push
pop
shlb
lret
cmp
cwtl
movsb
adc
lods
mov
aam
in
out
sti
mov
subl
add
pop
xchg
add
xchg
and
fidivrs
push
sahf
fst
fistl
mov
repz
js
cmc
jno
outsl
xchg
and
cltd
lahf
dec
pop
inc
fisttps
in
cli
jns
les
lahf
fcompl
aas
test
shr
inc
add
mov
pop
fisubs
jecxz
ja
jge
ret
dec
dec
sbb
lock
adc
sub
ds
mull
mov
push
iret
sbb
pushf
pop
aad
aaa
mov
jg
xchg
xchg
add
xor
pop
lahf
dec
mov
push
bound
xor
movsl
push
and
mov
sti
adc
add
mov
jnp
scas
adc
popa
test
outsb
mov
movsb
aad
sbbb
or
insb
sahf
ds
sub
sub
popa
out
pop
inc
mov
or
push
jle
std
out
jmp
pop
mov
iret
adc
mov
outsl
jecxz
and
shlb
inc
imul
in
adc
adc
mov
mov
out
lods
or
inc
pop
int3
xchg
cmp
add
ds
sub
pop
jb
add
int
mov
in
pop
cmc
lcall
xchg
je
outsl
cmp
test
mov
jb
test
inc
lret
mov
ret
nop
sbbl
loopne
inc
icebp
or
in
and
push
lods
jb
lea
dec
popf
aas
cmpb
jmp
mov
xor
pushf
jl
int3
mov
mov
add
cwtl
negl
xor
pusha
rcr
fwait
outsb
scas
pop
sbbl
xchg
outsb
lcall
push
pop
adc
sbb
cmp
roll
xchg
pop
xor
movsb
mov
add
outsb
add
and
push
mov
aaa
cmp
test
sarl
mov
cmp
push
jo
push
pop
in
mov
imul
data16
nop
inc
mov
mov
outsb
sti
sbb
jle
pop
push
addr16
fistps
dec
pop
push
sub
nop
aam
cmp
dec
cmp
cmpsb
je
rcrl
shlb
inc
adc
outsl
mov
mov
mov
jg
rclb
pop
inc
movsl
and
aas
out
jge
mov
mov
dec
shlb
mov
aas
dec
fistpl
add
cltd
in
in
sbb
rcrb
mov
xchg
cmpsb
repz
sbb
mull
xchg
xor
xor
mov
mov
mov
or
mov
mov
push
in
mov
jne
leave
lcall
pop
mov
jnp
in
xchg
sbb
pop
lods
or
sub
mov
scas
cwtl
test
fimull
inc
out
gs
je
sbb
or
inc
imul
gs
fsubrp
imul
and
and
sub
and
shlb
add
scas
inc
test
mov
cmpsb
aad
stc
jns
adc
mul
cld
add
xor
xchg
inc
scas
out
inc
shlb
cwtl
fadds
std
rcrb
aad
mov
das
mov
mov
dec
insb
or
jb
dec
inc
cmp
test
movsb
mov
push
push
ljmp
xor
xchg
cwtl
adc
mov
into
xor
sub
movsl
push
jmp
mov
call
mov
dec
add
lock
fisttpl
sub
fmuls
fdivr
add
cs
imul
jb
xor
mov
into
hlt
mov
and
out
in
or
push
mov
scas
in
xor
mov
xor
inc
fisubrl
or
adc
loope
stos
adc
lcall
loopne
ret
adc
lret
mov
jmp
leave
inc
enter
fdivs
xor
or
lcall
push
scas
adc
in
mov
or
adc
dec
mov
inc
ret
push
jbe
mov
adc
xchg
repz
mov
test
je
mov
sub
repnz
mov
sbb
and
cvttps2pi
aad
enter
lods
pusha
dec
ret
ret
mov
fldenv
xchg
push
dec
call
pop
jno
loopne
test
ss
dec
movsl
mov
mov
inc
mov
mov
mov
int3
fists
jns
fcompl
mov
push
jg
lret
sub
push
dec
test
mov
les
popf
lret
cmp
inc
shll
sub
lods
push
adc
inc
cmpb
sahf
test
push
out
fldl
push
xor
repz
loop
cmp
sbb
ret
pop
scas
lret
enter
xchg
mov
decb
pop
pop
ret
in
adc
push
inc
sbb
mov
sub
leave
or
xchg
mov
andb
push
lea
mov
cmpl
popf
ret
xchg
inc
jecxz
out
cmp
lods
adc
pop
jp
int
cltd
loopne
iret
and
mov
rorl
ss
dec
jo
cmc
scas
in
jg
in
jb
or
jge
arpl
pop
mov
and
cli
lods
push
orb
out
mov
and
pushf
push
daa
lods
adc
xchg
popf
add
push
movsl
cli
fbld
sub
jg
xchg
nop
fsubr
fwait
mov
xlat
push
insl
push
cs
push
mov
xchg
or
out
mov
out
sbb
les
mov
aaa
mov
cwtl
add
xchg
lret
xor
sbb
outsl
jne
push
or
shl
pop
imul
fcoml
lods
jp
lahf
or
inc
test
fsubl
or
sub
cld
nop
and
jmp
jbe
mov
inc
adc
adc
pop
sub
sbb
jecxz
jge
xchg
out
cmp
jge
leave
jae
bound
inc
test
jnp
bound
inc
hlt
pop
adc
push
or
pop
push
cs
sub
jmp
sarl
and
xchg
aas
xor
xor
rol
push
mov
fstpl
jmp
insb
cwtl
xor
jns
sti
jae
push
jle
sub
fmull
push
fistl
stc
sarb
or
lods
in
mov
jge
add
in
sub
ja
jno
sbb
cmp
xchg
in
mov
push
idiv
loop
adc
int3
inc
inc
dec
mov
adc
or
mov
out
mov
push
sarb
out
add
adc
fs
ja
call
xchg
dec
cmp
push
in
and
iret
or
push
add
xchg
dec
lret
lods
jge
sahf
pushw
adc
notb
xchg
icebp
xor
cltd
insl
sbb
or
out
pop
subl
cmpsl
fwait
jbe
adc
pop
movl
inc
sub
and
dec
loopne
ljmp
out
jnp
ret
sub
loopne
push
data16
loop
lods
sub
xchg
jmp
cld
mov
pop
adc
sub
or
mov
mov
xchg
push
mov
xchg
and
dec
or
mov
addr16
mov
jne
cmpsl
addr16
adc
gs
add
rcll
pushf
adc
dec
dec
sub
jbe
push
in
nop
cmp
aam
out
xor
sbb
and
or
aad
lcall
in
mov
out
mov
clc
fisubs
xchg
nop
imul
add
cli
sbb
mov
xchg
dec
dec
push
or
sub
xor
es
push
push
cltd
mov
rdmsr
push
mov
cmpsl
fldenv
das
insl
ficoml
pop
jge
out
inc
stos
and
fbstp
enter
xchg
push
lock
bound
lods
lcall
mov
mov
dec
push
lea
inc
adc
decb
add
adc
mov
test
lret
mov
enter
int3
lock
xor
rol
in
mov
mov
xchg
xchg
push
scas
xchg
nop
push
cld
cli
mov
lret
shrb
sbb
xor
adc
lods
jle
aad
and
mov
nop
je
cwtd
pushf
xor
dec
shll
inc
loopne
call
and
pop
leave
jbe
out
lock
movsb
sbb
imul
hlt
ret
cmp
sub
ficoms
xor
std
xchg
and
xor
xchg
fbld
xchg
js
cmpsl
in
nop
scas
loope
add
inc
push
sub
xchg
xchg
int3
adc
inc
jbe
rcrb
lret
sub
jb
xor
jge
pop
push
pop
in
jge
lret
mov
lock
stos
push
in
pop
push
lret
fidivl
loop
xor
movsl
lock
movsl
push
fldcw
loopne
lahf
xlat
xorb
ljmp
jb
xchg
inc
mov
std
xchg
add
mov
lock
cmp
xor
pop
lret
inc
pop
cwtl
js
cli
mov
jno
mov
sahf
adc
cmp
mov
lret
pop
mov
inc
ds
int3
ffree
cmp
mov
xchg
adc
xchg
dec
loopne
or
or
cmp
out
out
jbe
test
outsb
mov
pop
sub
test
loope
sbb
loope
and
and
push
lahf
push
popa
push
sbb
shll
in
shlb
push
xor
mov
mov
outsb
out
add
inc
inc
mov
notl
test
lret
icebp
pop
push
arpl
mov
es
dec
sahf
cmc
jp
scas
shld
imul
dec
gs
test
inc
in
loope
fwait
mov
adc
mov
into
out
daa
mov
into
ret
nop
push
stc
imul
je
prefetcht0
nop
out
call
push
and
push
cmpsb
inc
xchg
shll
les
das
xchg
inc
xchg
cld
jo
sbbl
movsb
cmp
rolb
sbb
xor
int3
jno
ficompl
push
mov
pop
popa
xchg
aaa
jl
add
push
mov
jle
sub
pop
sub
fwait
stc
fildl
xchg
pop
adc
imul
dec
sub
cmp
pop
addl
jmp
sti
xchg
mov
shlb
fs
dec
cwtl
add
push
cmp
mov
push
add
fidivs
inc
arpl
mov
cld
cmc
popa
fsubrl
scas
loopne
in
lds
sbb
jbe
ret
sub
test
in
jno
faddl
lcall
mov
icebp
sbb
insl
sub
push
pop
mov
mov
fildll
mov
imul
lds
mov
addr16
jmp
sbbl
in
dec
gs
mov
insl
mov
xchg
jecxz
jae
pop
orb
test
ljmp
data16
jbe
rcrb
fmul
jmp
or
xor
dec
das
inc
shll
jo
insl
in
lahf
mov
and
pusha
test
shlb
icebp
sbb
ds
cltd
push
flds
sbb
xchg
push
or
int3
mov
push
xor
iret
and
dec
mov
iret
jg
inc
jbe
mov
sub
xchg
sub
mov
jns
push
jne
loop
js
jge
mov
mov
int3
js
loop
mov
repz
inc
notl
aas
dec
jo
faddl
mov
lds
push
sahf
xchg
lret
adc
push
ret
inc
xor
or
cmp
enter
cs
leave
aam
cmpl
sub
jp
mov
ret
es
mov
shlb
bound
or
sarb
mov
sub
icebp
xchg
pop
pop
int3
aam
into
aam
dec
adc
push
bound
dec
push
dec
inc
adc
jae
nop
sub
add
andl
mov
popf
mov
fbld
xchg
std
jle
cli
fisubrl
or
pushf
xchg
mov
push
mov
dec
adc
inc
mov
sub
sub
mov
cli
pop
push
sub
xchg
lock
push
jbe
push
push
mov
lds
shl
sbb
sahf
sub
adc
dec
andb
jge
loop
push
pop
rcl
lds
into
xor
bound
mov
cmp
adc
mov
scas
dec
xchg
xchg
dec
pop
xchg
xor
clc
or
pop
and
lahf
lods
jmp
xor
cld
imulb
add
mov
aam
std
shll
test
cmp
sub
divb
mov
add
repz
push
and
and
bound
pusha
pop
aam
jo
sub
icebp
mov
in
cmp
xlat
imul
and
push
test
mov
xor
sbb
xchg
aam
shll
xchg
jae
push
arpl
push
adc
in
adc
pop
fsts
test
aam
xchg
add
push
add
insl
out
test
stos
push
mov
pop
shll
mov
add
sbb
sub
dec
testb
movlps
outsb
xor
pushw
nop
icebp
pop
cmc
pop
ret
adcl
adc
cs
mov
loopne
movsl
clc
fisttpll
pop
dec
aad
push
xor
lds
ret
sbb
xor
jmp
imul
or
xchg
push
dec
add
inc
push
mov
adc
cmpsl
sbb
inc
scas
sub
pop
push
push
lea
je
dec
clc
sbb
pop
mov
addr16
sti
stos
xor
call
cmp
shll
adcb
ret
daa
les
rorb
sahf
fldl
in
sbb
aad
xor
pop
daa
nop
xor
std
adc
xor
inc
and
xor
xchg
push
cmp
insb
outsl
cmp
inc
xor
loope
or
cmp
adc
aad
adc
cmc
push
sub
fucomi
and
xchg
movsl
push
rolb
mov
cmp
je
xchg
fisubrs
sub
ret
sub
sti
sbbl
push
adc
rclb
or
dec
xchg
test
gs
pushf
jbe
xchg
push
mov
cli
xchg
sub
xor
mov
xchg
out
enter
aad
js
and
adc
fcompl
js
das
xchg
aas
lcall
push
xchg
lock
push
stos
add
xor
sahf
or
bound
or
push
push
js
cmp
jg
lret
aas
dec
cmpsl
cli
xchg
fadds
icebp
xchg
mov
in
dec
cmc
and
mov
and
das
fsts
mov
inc
sub
ljmp
shll
mov
mov
ljmp
je
cmp
or
or
daa
cmpl
push
stc
lods
mov
pop
cmc
mov
testl
out
jae
out
mov
jnp
pop
test
stos
fistps
inc
sub
or
out
or
pop
dec
inc
pop
sbb
mov
icebp
stos
pop
cltd
xchg
stc
jge
lock
fidivrl
jne
push
test
add
aaa
mov
out
sahf
outsb
jp
pusha
jno
in
cli
pop
and
insb
addb
pop
in
add
add
cli
inc
cmp
cli
fsubrl
mov
cs
in
push
xor
pop
pop
dec
sbb
pop
jns
rorb
pusha
andl
popa
rolb
push
adc
or
xlat
pop
imul
push
and
xor
xchg
mov
sbb
testl
sub
ror
push
mov
xchg
push
lock
and
sub
xor
mov
pop
push
mov
lods
shrb
jnp
mov
mov
fs
lds
pop
mov
jnp
push
adc
or
sbb
and
jae
pushf
decl
nop
lock
sbb
es
arpl
arpl
mov
rolb
mov
in
out
mov
and
popf
xor
mov
jg
xrelease
mov
fbld
xor
icebp
cmpsl
xchg
hlt
mov
jo
ss
inc
insl
cmpsb
cwtl
and
sbb
sub
cmp
pop
sub
mov
sub
cltd
pop
dec
cwtl
decb
add
fldl
add
insb
push
mov
jae
jae
xchg
cli
aaa
test
or
xchg
scas
jmp
inc
xchg
cmc
mov
cmc
insb
cmp
mov
jge
inc
or
xor
pop
inc
sbb
sub
mov
mov
shll
bound
lock
repz
sbb
cmp
xchg
enter
mov
mov
fistl
addr16
sbb
or
js
dec
out
xor
or
pop
mov
mov
dec
int3
mov
add
outsl
xchg
pop
iret
push
fldcw
mov
out
dec
ficomps
push
mov
mov
cmp
movb
mov
aam
jmp
cmpsb
jecxz
iret
cmp
jecxz
pop
sub
jecxz
pop
dec
and
test
lahf
and
in
inc
add
mov
pop
or
imul
movsl
and
xor
popf
cmpsb
shrb
outsl
ja
sbb
dec
fists
dec
adc
stos
imul
test
cmpb
jbe
mov
add
addr16
lds
lds
mov
pop
add
int3
gs
jmp
jmp
pushf
xchg
mov
mov
adcl
jl
xchg
inc
arpl
cmp
xchg
jne
and
ja
mov
inc
adc
fdivl
shl
mov
fsave
ds
pop
arpl
or
push
call
or
mov
icebp
aaa
lret
xchg
push
sub
sbb
cwtl
mov
xchg
push
mov
cmc
or
xor
pusha
aad
jne
mov
stos
inc
stos
repz
test
iret
in
mov
push
cmp
in
popf
jbe
jae
mov
fs
test
into
mov
sub
mov
pop
pop
lea
push
aad
repz
pusha
pop
stc
jae
dec
cltd
mov
pushf
push
pushf
inc
shrl
orl
rorl
sbb
ljmp
and
or
cmp
cltd
addr16
js
xchg
sahf
inc
xchg
push
inc
lods
or
xor
arpl
aas
add
jb
fildl
jnp
xor
xlat
inc
ss
xchg
outsl
xchg
mov
insl
or
push
sbb
ljmp
jb
sarb
orb
inc
mov
mov
add
clc
xchg
xlat
cmp
int3
push
shlb
mov
mov
mov
lods
les
aaa
xchg
mov
push
mov
adc
shrb
cmpsl
and
lock
dec
pop
mov
and
sbb
sbb
jp
push
jl
testl
adc
aaa
imul
mov
movsb
mov
jmp
fmull
or
mov
mov
hlt
stc
inc
sub
movsb
mov
lea
into
add
dec
stos
jbe
push
xchg
lods
pop
insl
stos
pop
imul
xchg
in
adc
dec
mov
fiaddl
push
cli
pusha
ljmp
mov
dec
sarb
push
lcall
xor
inc
lret
pusha
ljmp
mov
dec
sarb
push
lcall
xor
inc
into
clc
cli
pusha
jmp
push
pop
or
pop
rclb
rcrb
add
xor
inc
ficoml
loopne
jo
jg
cmp
dec
ret
pop
xchg
bswap
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
