std
ljmp
sub
add
std
add
push
push
push
push
call
mov
gs
jnp
int
outsl
loope
mov
xchg
push
lret
sub
mov
xor
loopne
cmp
nopl
insb
mov
imul
lcall
push
cmp
mov
add
ds
jecxz
jne
push
or
decl
pop
xor
sbb
fldenv
pop
jp
fs
pop
shr
adcb
stos
mov
lcall
xchg
in
inc
idivb
sti
lcall
and
dec
rorb
sbb
aas
mov
cwtl
jae
test
sbb
mov
add
ret
ret
aaa
es
xor
fildll
and
cmpb
les
mov
cmc
or
inc
mov
mov
pop
push
jg
jno
mov
lds
cli
sub
push
ja
sub
sub
std
je
decl
movups
push
push
add
pop
push
push
push
call
dec
push
push
push
lahf
gs
push
shr
mov
je
add
push
pop
pop
xor
cmp
je
or
jmp
lcall
cmp
shlb
out
xchg
fisttpl
and
cmpl
jno
add
divl
fdivr
push
dec
inc
pop
pop
pop
add
mov
insb
and
sbb
add
pop
mov
or
mov
add
add
pop
mov
push
xchg
ljmp
inc
jbe
push
push
call
lods
dec
or
inc
jb
ljmp
push
push
push
call
add
mov
mov
cmpsb
cs
cmp
cmp
jmp
sbb
jmp
xchg
jmp
pop
lret
cwtl
jmp
and
xor
outsl
add
jo
jmp
sub
xor
sub
push
das
aaa
outsb
inc
jmp
xor
fidivrs
jecxz
jmp
lea
mov
sub
xchg
jmp
inc
test
pusha
sbb
ss
jmp
xor
clc
incl
inc
pop
mov
push
call
adc
iret
mov
inc
and
pop
dec
pop
push
movsb
pusha
fsubl
mov
inc
fs
pop
call
cmp
add
pop
jmp
pop
clc
add
out
enter
jg
jmp
xchg
xchg
sti
pop
cwtl
pop
cmp
popf
call
dec
push
add
add
and
insb
movsb
movsb
test
outsb
outsl
xor
add
jmp
or
out
push
push
call
add
pop
add
cs
jmp
mov
sub
jg
nop
push
push
sub
shr
sbb
stc
decl
cmp
add
add
pop
cmp
jne
fists
push
push
push
call
adc
xor
ljmp
rclb
push
not
rol
mov
or
jbe
dec
repz
push
dec
inc
pop
pop
push
push
mov
and
mov
cmp
mov
add
sar
ljmp
nop
push
sub
shl
pop
pop
inc
sub
mov
add
xchg
pop
push
pusha
push
ss
xchg
decb
movsl
jne
sbb
dec
lea
or
outsl
rcrl
loope
call
push
call
adc
scas
push
movsb
ret
jge
nop
pop
ja
das
mov
nop
in
mov
fidivs
jp
mov
sub
pop
cmpsl
incb
nop
pop
nop
push
dec
not
xor
push
test
inc
push
pop
ret
push
add
dec
fidivrs
shr
mov
mov
push
out
pop
push
call
sub
cmpsl
sbb
mov
sub
xor
push
and
jmp
cs
fisttpll
mov
mov
aam
push
jb
add
jbe
push
test
cmpsl
adc
sahf
adc
rolb
incl
dec
int3
push
jmp
mov
add
lret
ret
pop
lds
add
sbbl
and
inc
xorl
cmpsl
jmp
shll
cld
nop
jb
rorb
inc
inc
insb
push
and
jnp
hlt
in
xchg
xlat
add
cmp
mov
jl
add
inc
push
jno
decl
push
and
push
xor
sub
dec
pop
call
out
mov
mov
int
sub
add
call
inc
sub
xor
lea
jb
xor
sub
xchg
xchg
js
icebp
push
sub
pop
add
jle
or
shlb
loopne,pn
mov
xchg
sub
xor
pop
sub
or
lcall
sbb
xor
or
pushl
cmp
adc
add
lea
mov
loope
ret
sahf
inc
test
lret
and
in
push
push
push
push
call
pusha
mov
je
jecxz
sbb
call
cli
add
js
mov
xor
push
push
jmp
cmp
pop
sbb
jmp
ds
mov
jmp
and
arpl
push
pusha
shr
push
jmp
je
push
adc
es
std
add
pop
nop
sub
pop
inc
mov
push
fidivl
sbb
push
icebp
push
xchg
xchg
dec
pop
mov
and
decl
jg
lret
push
push
push
call
sub
adc
and
jle
or
add
mov
or
add
ja
pusha
adc
cmp
push
sbb
sbb
push
call
movsb
xor
mov
cmp
cmp
add
aam
rep
xchg
outsb
lock
not
repnz
pop
fdivl
mov
jmp
inc
jmp
mov
sub
xchg
add
shlb
and
adc
pop
or
outsl
pop
test
sbb
fdivrs
xor
and
sbb
adc
or
pop
cmp
or
jne
add
cltd
mov
pop
xor
jmp
or
push
mov
adc
push
push
pop
cmp
fsts
inc
sahf
mov
mov
push
push
push
call
shll
xlat
or
cmp
out
mov
mov
push
push
push
dec
push
call
test
and
icebp
push
andb
sbb
inc
sub
hlt
pop
sahf
adc
aas
push
push
add
push
movsb
insl
bound
lods
sub
cmp
mov
loope
call
and
jb
sbb
fwait
imul
xor
shrl
add
push
ffree
jmp
cmp
shlb
mov
and
sarb
add
or
sbbl
push
push
push
push
push
call
add
sbb
pop
or
push
push
or
inc
xor
and
xor
dec
test
std
mov
mov
shrb
inc
xor
shlb
jg
call
push
inc
sub
pop
mov
sub
jg
xor
cmp
add
push
jmp
push
sub
ret
or
out
outsb
jmp
lods
push
shl
in
ficompl
sbb
push
jmp
movlps
in
add
mov
outsl
inc
sub
jmp
movsl
or
sbb
jmp
pop
add
out
in
clc
jg
push
push
push
push
push
pop
and
dec
push
add
aam
cli
aas
lods
inc
mov
mov
add
test
sub
cld
in
mov
decl
aas
lea
fsts
push
lea
shl
dec
pop
ljmp
adc
sbb
inc
pop
xor
dec
scas
and
sub
fdiv
call
popl
mov
push
push
inc
xor
add
mov
or
stc
test
pop
jo
adc
ss
inc
push
lods
test
mov
inc
lock
sbb
mov
add
xchg
push
add
jmp
push
jmp
leave
stos
cmc
insb
xchg
and
rep
mov
and
loope
inc
mov
rolb
add
rol
sub
sub
pop
nop
nop
xor
nop
push
push
and
ds
daa
mov
mov
xor
xor
std
call
pop
inc
push
shl
lea
pop
leave
push
lea
lea
jbe
xchg
jge
cmp
add
incl
push
and
test
test
or
in
or
inc
or
test
nop
mov
dec
jne
loopne
jno
push
or
jmp
test
jecxz
pop
jmp
popa
dec
sbb
push
movb
push
push
push
roll
jl
lods
xor
xor
mov
push
xchg
xor
jmp
jle
inc
add
cld
jb
jmp
and
pop
sbb
mov
jb
inc
sbb
rcll
pop
pop
push
xor
add
pop
pop
je
add
inc
je
incl
movsb
mov
mov
sti
cmp
mov
lcall
aas
mov
ret
js
mov
add
ret
adc
add
adcl
or
or
push
adc
shrb
aaa
out
push
call
push
push
rol
xor
shl
mov
xor
filds
push
push
rol
add
pop
call
jg
xor
jp
inc
sub
xchg
mov
aaa
fcmovnb
test
sub
xor
push
push
push
adc
jle
add
cmpsl
xor
mov
scas
fadds
or
cmc
mov
xor
mov
add
out
mov
rorb
and
adc
es
xchg
mov
push
nop
cmp
add
push
jmp
mov
repz
rol
lea
add
add
mov
incl
add
lea
loop
les
xor
cmpsb
cmp
repz
xor
push
sub
mov
aad
imul
xor
adc
mov
add
or
mov
push
push
shll
popf
sbb
sub
sbb
call
add
push
mov
push
push
sbb
add
push
lret
dec
std
ret
call
imul
or
sub
sub
add
pop
add
push
push
push
push
dec
xor
movsb
test
sar
xor
shrb
pop
dec
insl
sub
daa
mov
add
pop
adc
mov
cli
aaa
add
insl
or
inc
pop
push
push
adc
rcl
mov
and
cli
xor
or
mov
and
cmp
push
sub
jmp
adc
mov
jmp
inc
and
enter
adc
addl
add
mov
adc
sub
shll
mov
pop
or
and
call
ret
aaa
shr
add
je
add
cmpl
cwtl
insb
inc
stos
pop
xlat
lods
call
jmp
xchg
clc
adc
stos
push
call
shr
testb
fiadds
sbb
mov
xchg
sti
lea
mov
mov
xchg
and
add
mov
ljmp
jl
push
cld
loopne
mov
imull
ret
lret
call
and
jp
add
pop
in
loopne
fsubp
xor
add
not
xor
xor
call
push
or
test
gs
das
lock
xor
push
push
lea
adc
lods
cmp
iret
push
cmp
add
loop
push
cld
mov
lcall
fs
mov
adc
mov
mov
out
xchg
push
icebp
pop
mov
add
pop
jmp
in
xchg
jae
test
ljmp
add
jmp
mov
vphaddubw
jno
in
mov
mov
inc
xchg
and
jecxz
adc
mov
test
cld
push
xchg
cmp
roll
add
sbb
ja
aas
inc
push
push
push
push
push
adc
and
cmp
arpl
mov
add
or
mov
cmp
push
push
push
in
ss
push
mov
or
loope
pop
push
push
add
stos
popf
or
adc
or
mov
hlt
sub
pop
push
call
popa
int
clc
mov
loop
mov
push
outsb
mov
push
pop
mov
or
roll
aaa
cli
rcll
add
add
sub
sub
mov
rolb
mov
jmp
cmp
lock
xor
add
and
lods
fstpt
push
push
push
push
jle
push
mov
dec
pop
add
pusha
and
hlt
lea
mov
mov
push
mov
adc
lods
repz
add
loope
fsub
std
pop
mov
inc
inc
push
push
add
mov
leave
push
lds
sub
add
sub
jle
xchg
ljmp
into
and
xchg
outsb
mov
pop
xchg
push
lea
push
insb
inc
push
jno
dec
xchg
push
inc
movsb
jp
movsb
test
jecxz
push
dec
mov
or
shl
pop
push
push
or
push
jg
mov
pop
push
mov
push
xchg
ret
hlt
das
pop
dec
vunpckhps
push
not
rol
pop
mov
out
or
repz
push
rolb
addr16
or
push
cmpsl
inc
mov
jmp
pop
jmp
addb
and
out
or
addr16
hlt
test
mov
mov
js
inc
enter
pop
pop
clc
jno
push
inc
and
push
push
fs
xlat
sub
ja
add
push
cmc
pop
aas
or
xor
clc
push
sub
mov
lcall
push
stos
in
sbb
jne
dec
mov
pop
mov
add
scas
jmp
cmp
rcl
daa
pop
aam
cmp
in
aam
das
or
dec
or
jmp
js
ja
ret
cmp
lods
push
lea
mov
pop
pop
cmp
jmp
dec
adc
mov
xor
out
jno
xchg
in
inc
jno
outsb
push
les
mov
ss
mov
push
hlt
mov
jbe
inc
xor
incl
xor
adc
pop
push
mov
push
adc
sbb
or
filds
loop
imul
inc
pop
cli
dec
add
not
adc
imul
das
cld
aaa
cli
xchg
xor
push
cmp
scas
cmp
dec
xor
das
je
lods
mov
sub
sbb
mov
jbe
dec
arpl
adc
enter
mov
lock
xor
and
inc
xchg
cmp
add
ret
lds
fists
push
mov
or
outsl
pushf
or
sbb
pop
mov
jmp
mov
fdivs
push
pusha
add
cwtl
mov
push
adc
xorl
test
jecxz
aam
and
push
mov
push
mov
cmpl
push
push
push
xchg
in
andl
adc
fdivr
jg
shl
pop
push
lock
sub
push
add
daa
mov
push
fldt
roll
push
cltd
dec
push
ficoms
pusha
push
sub
aas
adc
xchg
pushf
push
cmp
loop
jg
push
das
pop
lods
lods
ljmp
imul
adcb
mov
rcr
sbb
mov
adc
push
add
or
int
out
and
cwtl
ret
jg
jecxz
lcall
xchg
les
add
xor
and
mov
jmp
dec
bnd
push
push
push
add
test
repz
push
push
call
and
add
js
decl
std
rep
pop
push
push
mov
fcoms
adc
aas
inc
add
ret
push
mov
and
mov
or
leave
jne
mov
xor
loopne
dec
clc
inc
xor
mov
xor
push
sub
gs
jno
mov
jmp
add
popa
shlb
sub
decl
mov
push
pop
addb
cmp
shll
pop
sub
sub
sub
mov
loopne
mov
adcb
push
push
push
call
popl
or
jg
inc
cmp
push
push
call
test
push
shr
add
add
pop
call
cmp
mov
repnz
mov
call
gs
aaa
es
stos
add
jbe
sub
mov
cmpsl
bnd
and
push
pop
inc
sub
dec
pop
pop
inc
popa
xor
inc
add
dec
sbb
jmp
sbb
pop
push
call
inc
xchg
pop
daa
cmp
pop
pop
pop
push
stos
mov
and
and
add
cmp
test
fsubl
add
mov
dec
ret
mov
ja
add
push
push
xor
add
loope
insb
mov
mov
call
xor
shl
add
imul
add
cmpsl
or
pop
shrl
inc
hlt
ret
mov
mov
outsl
cmc
add
add
push
shr
lret
pop
add
lcall
or
push
push
push
call
mov
jecxz
fistpll
mov
push
add
not
pop
mov
push
ror
pop
test
mov
xor
lea
inc
pop
or
adc
inc
push
add
push
push
call
dec
popa
fsubs
add
and
sbb
mov
in
fsubr
inc
pop
add
adc
xchg
and
push
add
clc
iret
push
arpl
cli
dec
syscall
xor
pop
mov
insl
rol
add
ror
pop
mov
ss
jmp
adc
pop
cli
jne
iret
add
push
mov
gs
jns
push
or
xor
or
out
mov
pop
mov
jmp
mov
xor
adc
aam
das
scas
adc
mov
repnz
jmp
ja
push
call
mov
mov
mov
add
loopne
xchg
call
lret
pop
push
push
push
and
pop
dec
fimull
xor
or
pop
push
pushl
mov
add
push
sub
and
adc
jmp
adc
jns
jbe
push
add
sbb
aas
xorb
push
push
sub
dec
mov
inc
dec
lds
pop
es
shll
mov
xlat
cs
in
push
and
or
fldt
cs
call
dec
push
inc
mov
mov
jle
mov
int3
dec
andl
jle
imul
push
and
adcl
incl
jge
push
push
push
and
gs
inc
clc
mov
dec
push
adc
inc
add
enter
xor
repnz
mov
cmp
mov
push
cmp
push
andl
jle
loop
push
sub
ljmp
jmp
or
push
in
add
add
jne
add
pop
adc
inc
lds
sbb
leave
sub
dec
fildl
dec
mov
popl
jmp
pop
bound
rorb
lods
sub
pop
mov
cmp
push
pminsw
in
push
push
mov
rorb
and
push
call
adc
in
xchg
shrb
fucomp
mov
mov
and
rorl
mov
push
sub
sub
pop
pop
push
call
pop
ds
je
test
sub
jg
loopne
pusha
ss
mov
adc
mov
dec
add
les
sub
mov
in
lret
and
pop
sbb
test
or
inc
aam
adc
sbb
push
fbld
jmp
push
ror
pop
mov
loope
pop
bound
mov
fldt
addr16
adc
aad
scas
cmc
scas
pusha
inc
nop
in
push
push
pusha
lods
dec
call
not
stos
and
inc
or
loope
out
ljmp
icebp
add
repz
mov
sub
lahf
add
inc
jne,pn
cmp
push
xchg
jmp
dec
push
mov
repnz
fs
nop
pop
outsb
adc
cmpl
addl
and
or
and
or
fs
sbb
mov
shr
mov
add
or
orl
adc
ds
inc
dec
inc
mov
or
sbb
push
jle
pop
mov
in
mov
fistps
fldl
adc
cmp
cmp
mov
scas
mov
inc
sbb
rcl
pop
pop
pusha
xchg
or
jmp
rcl
xor
pop
fxch
mov
xchg
or
js
in
pusha
jbe
jmp
dec
pop
rorb
jne
jno
jecxz
cpuid
sub
ss
mov
add
xlat
add
cmp
add
jmp
int3
insb
inc
and
lcall
out
aas
rclb
stos
or
xchg
mov
cmp
mov
push
not
lea
dec
in
jg
mov
jl
add
xor
lea
pop
popa
pop
pop
pop
adcb
mov
inc
daa
movsb
lea
loope
xchg
out
adc
add
adc
in
leave
into
ljmp
push
enter
pop
icebp
mov
sub
xor
adc
mov
pop
clc
push
push
push
push
mov
loopne
rcrl
sbb
or
and
push
inc
sub
test
pop
xor
add
mov
xor
adc
inc
sbb
rcrl
jo
mov
rolb
inc
and
and
mov
mov
xchg
add
dec
push
call
mov
add
push
pop
fcoms
mov
jg
call
jg
xchg
jecxz
fildll
fidivrs
jmp
mov
leave
fsubs
lret
push
call
push
test
fsubrs
pushl
iret
shl
lea
pop
call
xchg
test
stc
push
call
adc
sbb
sbb
push
add
dec
mov
pop
jg
mov
out
fs
rcll
adc
pop
or
dec
add
sub
arpl
or
rclb
test
mov
jge
xor
pop
pop
pop
push
push
and
call
out
lidtl
push
call
sub
xor
cmp
inc
mov
push
aam
lcall
pop
mov
push
pop
arpl
loopne,pn
inc
clc
aam
mov
push
shrl
addl
cmp
jmp
bswap
sbb
cmp
repz
inc
xor
xchg
or
dec
adc
mov
add
xor
inc
add
jecxz
mov
and
jle
out
pop
add
add
test
inc
add
jb
xor
mov
jmp
push
das
and
into
gs
repnz
sub
scas
test
jmp
and
ret
add
cmp
lock
call
xor
sub
push
hlt
inc
add
jo
aas
xor
shlb
add
nop
sub
lock
cld
push
push
inc
mov
mov
mov
jg
ds
jp
test
daa
aaa
dec
stos
mov
mov
movsb
cmp
in
call
jge
icebp
pop
mov
sub
outsb
inc
jo
pop
xorl
jne
mov
mov
xorl
and
mov
mov
xchg
lock
adc
ja
or
sub
pop
cmp
out
hlt
push
add
pop
add
pop
push
call
add
xchg
test
jg
outsl
cmp
push
sahf
out
xchg
ds
or
pop
jg
push
std
mov
add
push
push
repz
or
jl
das
mov
add
outsl
fbstp
fsubl
add
pop
push
push
push
inc
mov
movsb
pop
add
std
push
aad
lret
push
sub
lea
pop
pop
dec
mov
flds
xchg
inc
mov
push
call
adc
in
insb
mov
inc
aad
and
xor
add
push
push
call
jno
adc
sub
sub
sub
sbb
adc
shrb
inc
nop
sub
nop
nop
push
push
shll
testb
dec
xchg
or
push
or
mov
dec
mov
inc
or
lahf
sbb
inc
push
push
push
push
pop
and
adc
andb
enter
add
inc
shrl
xchg
or
sbb
sbbb
stos
inc
pop
stos
fs
sub
ss
xlat
mov
imul
mov
arpl
jno
sub
inc
pop
add
shrl
cmp
repnz
sbb
pop
mov
pop
mov
or
mov
sti
fistps
fildl
movsb
lods
push
call
adc
xlat
mov
sbb
inc
mov
out
xor
mov
push
push
push
push
push
ss
lcall
push
push
mov
mov
bswap
popa
mov
sub
orb
out
ljmp
pop
pop
in
push
and
sbb
call
mov
shr
add
sbb
cmpsl
push
frstor
lock
inc
sbb
or
pop
aad
push
and
jecxz
lock
mov
push
push
push
call
push
add
test
sub
push
jg
mov
add
ds
stos
ljmp
or
std
into
in
push
call
test
add
call
es
sub
mov
call
in
inc
pop
cmpsb
nop
ret
mov
jmp
test
and
mov
sub
nop
pop
or
cmp
push
or
and
and
in
test
sbb
add
adc
xchg
test
sbb
cmp
sub
test
sbb
add
add
or
xchg
jne
push
dec
adc
pop
mov
push
leave
jne
lods
hlt
mov
pop
jnp
das
and
jp
pop
push
add
add
mov
inc
lds
shll
das
test
call
popa
xor
lods
sub
inc
sbb
ljmp
add
clc
xor
pop
add
pop
dec
or
stc
push
push
pop
sbb
lahf
mov
pop
pop
pop
push
xor
shl
mov
ljmp
push
gs
stos
push
push
daa
roll
push
nop
adc
xchg
sbb
xor
cmpsb
adc
adc
mov
lret
insb
push
mov
mov
loope
jp
adc
or
add
add
call
hlt
add
lret
shr
adc
out
outsb
pop
mov
cmp
je
jp
add
sbb
enter
jne
push
adc
mov
fsubl
dec
and
sub
xchg
fisubrs
pop
inc
push
data16
inc
loopne
push
pusha
mov
adc
pop
mov
sbb
xor
fists
sbb
jb
add
call
loop
sarl
mov
push
std
push
out
dec
push
call
inc
sbb
inc
and
cmp
pusha
add
xor
idivb
inc
jmp
loopne
add
mov
mov
adc
mov
insl
mov
sti
sahf
call
dec
test
pop
insl
mov
imul
dec
and
cmp
or
bound
push
or
xchg
sub
icebp
insl
ljmp
push
ss
sbb
mov
scas
dec
jge
imul
pushf
dec
pushf
or
decl
icebp
sbb
stos
sbb
stos
call
ljmp
mov
cs
push
sar
ljmp
fdivr
push
dec
hlt
mov
adc
loop
dec
mov
and
sub
pop
fs
sar
cmp
test
lods
sarl
out
cmp
sbbb
adc
cmp
nop
sub
call
pusha
insb
out
jmp
lods
push
ljmp
sahf
mov
fnstsw
call
xchg
sub
sub
test
ja
fnsave
lock
cmp
loopne
and
inc
ljmp
pop
clc
imul
cwtl
push
lods
out
sbb
mov
jbe
stos
or
stc
mov
in
decl
inc
fadds
jnp
xor
mov
mov
add
lods
or
inc
decl
xor
jmp
std
cmp
jg
sub
loop
jl
clc
call
loope
nop
or
cmpsl
jmp
push
lret
push
cmp
xor
sub
xchg
adc
imul
std
mov
mov
aaa
adc
in
xor
cld
mov
jbe
clc
ljmp
push
test
push
or
sti
cltd
inc
shrb
mov
decl
rorl
outsl
fsubl
out
lea
in
pop
test
mov
lret
push
movsb
push
jmp
insb
mov
je
jle
into
aas
push
sbb
xchg
out
jns
inc
mov
sbb
movsl
lock
and
mov
movsl
adc
ret
jno
icebp
movb
dec
jg
or
lods
fucomp
test
negb
int
jno,pt
add
enter
adc
inc
adc
jle
addr16
pop
addl
sahf
inc
mov
lahf
jl
and
xor
lcall
test
mov
mov
dec
out
and
or
or
add
clc
or
pop
cmp
adc
in
push
test
ja
push
daa
movsl
mov
push
inc
jmp
pusha
mov
inc
inc
jle
jecxz
je
jbe
je,pt
jle
add
fsubl
test
push
pushf
xlat
adc
int
sbb
mov
xchg
out
lcall
nop
mov
jae
pop
and
pop
or
call
in
sti
popa
pop
sbb
jne
jb
lock
cld
aad
sub
lods
pop
sti
adc
incl
inc
mov
inc
shlb
ror
sbb
xor
cs
dec
call
sahf
adc
push
cli
call
push
dec
push
inc
cmp
mov
mov
call
push
add
jb
xrelease
or
or
insl
adc
inc
insb
jg
pop
es
or
lods
movsl
out
mov
es
fs
jmp
mov
sbb
lock
les
leave
mov
or
out
push
notl
mov
mov
mov
ja
mov
mov
jle
inc
mov
mov
mov
call
sub
sti
daa
sub
jle
sub
push
clc
pop
pop
ficoml
sub
scas
movsb
gs
lcall
lret
insb
adc
mov
jo
lcall
clc
out
mov
and
xor
call
push
fcmovnu
inc
push
dec
mov
in
add
cmc
notw
and
pop
pop
sbb
jmp
dec
mov
fidivrl
and
lds
jp
ficoms
fdivl
jg
push
cmp
jnp
out
cmp
movsl
sbb
add
xchg
push
pop
popa
mov
mov
cmc
sbb
decl
xchg
test
cltd
dec
add
xchg
mov
icebp
push
sarl
imul
out
sub
mov
les
outsl
lock
or
xor
cmp
jg
pushl
pushf
adc
fs
jmp
cmp
bound
dec
jg
push
sbb
mov
jl
pop
mov
loopne
les
mov
out
inc
into
xor
jo
ret
scas
cmp
addr16
mov
adc
pusha
xchg
incl
movsb
mov
in
push
inc
or
arpl
pop
stos
es
gs
or
shlb
adc
inc
fdivr
ljmp
jno
bound
nop
sbb
aam
stos
jle
ja
jmp
mov
push
and
shlb
scas
mov
push
cmpsl
xchg
aam
jle
out
ret
lods
pushl
rcr
pop
dec
push
es
mov
inc
ljmp
dec
xchg
xchg
xchg
stos
sti
out
and
dec
stos
xchg
movsl
push
mov
dec
loop
jg
aad
clc
dec
inc
popa
pop
inc
fisttps
je
dec
inc
push
cmp
insl
jp
mov
pushl
es
stos
frstor
imul
das
xorl
test
cs
test
jg
out
mov
push
andl
and
pop
cli
and
insl
xchg
sbb
fwait
xchg
inc
loop
inc
mov
decl
or
out
lds
dec
icebp
repnz
dec
in
dec
cwtl
or
movsb
incl
incl
movl
jle
fisttpll
inc
lahf
or
jmp
ret
rep
test
sub
frstor
mov
cmp
xchg
jb
cmc
push
mov
enter
gs
adc
sub
sub
push
ds
jmp
rclb
or
scas
jg
jge
inc
outsb
out
fldt
fcomp
daa
push
ljmp
jge
xor
xor
xor
enter
add
mov
jmp
fcoms
ds
iret
out
int3
nop
mov
or
jno
testl
add
mov
sbbb
push
cltd
cmpsl
dec
push
loope
lock
cmp
int
test
push
sub
ret
loopne
jle
es
call
sbb
ja
repnz
sbb
rol
jae
dec
push
sbb
mov
push
popa
aaa
xchg
sarl
aad
push
add
and
and
cmp
cmp
push
lds
ret
jle
add
addr16
pop
push
incl
sti
dec
xchg
xor
ret
imul
cli
decl
inc
pop
pop
stos
add
cmp
add
call
jg
mov
push
adc
inc
imul
xchg
add
jmp
lods
andl
mov
fiaddl
adc
jp
fwait
add
ljmp
push
bound
btr
xchg
jg
mov
mov
mov
pop
push
bound
lret
cwtl
mov
aad
idiv
scas
stos
sub
add
lcall
pop
decb
push
jb
dec
push
push
jae
pop
not
fs
bswap
mov
inc
jmp
xor
inc
sti
pusha
inc
pop
add
sbb
movsb
leave
cli
cmpb
dec
sbb
pushl
ret
ret
cmpsl
mov
and
push
subb
adc
insb
jge
incl
dec
jg
push
nop
std
mov
stos
lret
fstpt
ja
dec
lret
inc
ljmp
sbb
push
adcl
pop
push
mov
pop
mov
fmull
int3
lea
mov
inc
jle
and
cmpsl
xchg
lea
fmuls
fisubrs
mov
push
cmp
push
push
sahf
xchg
ljmp
and
xlat
aas
out
push
enter
sub
popf
jno
es
push
popf
jne
stos
push
in
inc
cmp
dec
mov
mov
ss
shlb
std
je
adc
repz
movsb
jp
cwtl
adc
sar
call
fadd
sbb
sbb
sbb
sbb
push
mov
pop
cli
sbb
mov
pushl
and
xchg
jae
ret
call
mov
testb
insb
jne
and
cmp
jmp
ljmp
jno
ss
fwait
jbe
ds
stc
xchg
mov
xchg
les
decl
mov
popa
jns
xchg
xchg
in
and
movsb
cmp
pushl
das
hlt
sbb
out
in
sub
out
out
push
je
mov
or
pop
adc
call
dec
mov
jge
pop
mov
add
adc
in
xchg
mov
mov
cmp
push
sbb
inc
xor
or
xchg
loope
adc
loope
adc
jmp
ret
shrl
pusha
addl
inc
std
or
or
sub
fs
out
sub
dec
lock
dec
jno
out
fs
js
push
sub
shl
mov
arpl
add
mov
outsl
cld
cmp
jae
je
jle
mov
add
in
xor
jmp
mov
jo
xor
mov
rclb
cmpsb
pop
rclb
orl
incl
adc
push
adc
sub
jle
jmp
cmp
or
ljmp
add
pop
and
gs
sbb
ljmp
inc
negb
push
jg
fstpl
dec
xchg
roll
or
jns
fsubrp
out
loope
in
pushl
test
and
js
or
jne
mov
lods
cli
cli
push
rcl
sub
int3
ljmp
sub
rcrb
stos
jnp
push
mov
aad
movsl
pop
sbb
decl
xor
dec
loop,pn
push
hlt
enter
or
dec
ja
mov
imul
push
jno
pop
xchg
pop
in
movsl
jno
xor
sti
fs
sub
dec
sub
dec
shl
or
push
add
cmp
lods
jmp
iret
xchg
fstl
mov
in
pusha
or
push
and
decl
rcrb
sbb
jecxz
hlt
inc
push
mov
dec
lds
sti
out
lock
call
sbbb
out
daa
sub
inc
arpl
cmp
mov
into
and
incl
push
inc
popf
xor
shrl
sub
aaa
test
mov
fbld
jmp
and
mov
int
and
xchg
shlb
pushf
out
out
call
cmp
and
add
jp
lcall
aaa
movsb
pop
push
insl
test
ja
jg
lcall
pop
sbb
add
inc
popa
fldl
jp
push
mov
in
jg
or
jg
test
lds
loope
push
int
add
imul
out
mov
jmp
mov
inc
adc
and
cmp
out
mov
int3
or
sub
ljmp
shlb
or
pop
adc
xlat
in
jbe
fbstp
fcmovne
sub
jae
push
cltd
sbb
jl
cli
addr16
int
mov
pusha
sar
lods
cs
sub
insb
sti
lret
mov
or
decl
jmp
cli
push
adc
or
leave
inc
insb
pop
mov
jl
int3
xchg
fwait
jge
mov
jmp
nop
cmp
mov
lods
add
add
xor
loop
and
xor
popa
xor
pop
sub
mulb
mov
ret
push
add
cmp
jp
pop
repz
jl
inc
ljmp
cld
dec
add
aam
and
idivb
or
adc
das
cld
jmp
jno
int3
jl
out
dec
js
inc
mov
mov
int
push
jmp
sbb
mov
jne
in
push
cwtl
repz
pop
call
jg
mov
fidivrs
int
insl
insb
insl
out
ds
cltd
rcr
ret
imul
cmp
xor
push
dec
ret
fdivrl
loop
sahf
into
mov
jle
inc
aaa
jle
mov
add
aas
lret
in
ljmp
cld
add
mov
dec
call
mov
pop
lahf
jmp
aad
push
lcall
xor
fildll
mov
shll
or
pop
adc
imul
cmp
xorb
mov
push
cwtl
cmc
cmova
inc
incl
in
inc
or
stos
mov
jl
jge
or
decl
jl
mov
aad
pushf
cmp
aas
sub
sub
dec
and
cld
ds
mov
enter
stos
adcb
lcall
add
or
cli
mov
push
xchg
scas
iret
add
mov
test
test
and
loopne
fcoml
jle
dec
lcall
lock
insl
adc
fadds
cmp
es
jp
aam
outsl
xchg
cmp
movlps
jns
pop
dec
sti
add
pop
or
dec
fwait
hlt
stc
lret
add
adc
addr16
pushl
mov
shld
cmpsl
cmpb
inc
call
jno
jne
jmp
cmp
popa
sbb
lret
stc
cmpsb
lds
add
popf
dec
in
sub
push
xor
faddl
decl
int
cmp
push
or
push
xorb
jecxz
pop
es
ss
mov
cmp
call
and
push
or
cwtl
mov
std
sub
and
gs
enter
jmp
in
and
ret
add
lret
insb
sub
cmpsb
repnz
and
neg
cmp
and
adc
and
lahf
pop
mov
or
pop
test
call
or
pusha
add
sbbb
in
outsl
adc
mov
loopne
mov
fsubr
inc
call
push
in
cs
lcall
pushf
dec
adcb
test
or
stos
push
test
imul
orl
ljmp
ljmp
pop
pop
dec
push
mov
out
push
mov
fimuls
daa
cltd
fsubl
cld
repz
push
mov
dec
icebp
mov
adc
add
call
mov
fs
add
sub
out
cmpsl
cmc
nop
inc
enter
gs
sub
call
pushl
mov
sahf
fwait
scas
pop
mov
mov
out
or
movsl
decl
sbb
shr
lret
aam
pop
pop
and
cmp
gs
sbb
lcall
and
adc
mov
incb
push
fnstsw
inc
mov
loopne
das
dec
push
sbb
out
movsb
jo
dec
xorl
pushl
lock
mov
in
mov
mov
lods
sub
fidivl
ljmp
adc
inc
sbbb
aaa
xchg
xchg
mov
sarb
into
into
sahf
and
pushl
jns
or
or
aad
mov
lret
sub
icebp
jmp
mov
cmpsb
inc
icebp
add
xor
or
rolb
dec
ljmp
iret
pop
cmpsb
cmp
push
sbb
mov
jmp
or
inc
test
mulb
aas
in
push
mov
lcall
dec
outsl
and
rolb
push
out
ret
sub
es
popa
popa
jb
xchg
mov
adc
adc
mov
repnz
push
imul
aam
cmp
sub
jns,pt
sar
sti
out
add
scas
out
pop
push
lahf
sbb
out
mov
das
lock
sub
cli
incl
in
je
xor
or
xchg
add
inc
adc
jmp
pusha
test
rcrl
cmp
lods
sbb
pop
push
push
mov
popf
lret
pop
andl
mov
push
repnz
int
adc
fdivp
call
ss
xchg
and
xchg
mov
dec
cmp
adc
pop
packssdw
mov
jle
pop
pop
clc
push
jns
lret
cmp
in
cmp
hlt
jo
adc
jo
cmpl
incl
jecxz
enter
mov
push
adc
rcr
push
and
jmp
dec
mov
into
cmpb
nop
jge
out
lcall
sbb
call
pushl
bound
mov
nop
lea
pop
clc
mov
lcall
out
jmp
adc
in
into
outsb
mov
dec
sub
inc
and
add
dec
call
dec
test
mov
adc
outsl
mov
popa
mov
lcall
aad
dec
or
aad
jns
cmp
popf
call
lods
mov
push
ljmp
sub
adc
pop
mov
xor
aad
fcomp
shll
out
vmovd
incl
rorb
loope
or
mov
pop
pop
mov
or
mov
incl
dec
das
cmp
cmpsl
mov
xchg
xchg
cli
pop
inc
mov
pop
xchg
jb
les
insl
rcr
lea
and
add
cli
fadd
scas
adc
movl
out
sub
cld
idiv
lcall
or
sbb
add
sbb
dec
adcb
mov
sub
incl
mov
loope
pop
scas
enter
mov
rolb
cmp
mov
incl
xor
cmp
ja
push
push
xor
lea
aam
rolb
test
jne
cmpsb
jmp
jae
pop
dec
cmp
adc
sbb
mov
cmp
fucomip
lods
or
or
sbb
jp
jno
lret
and
pop
cli
ljmp
bswap
pop
add
lods
inc
das
pusha
popa
and
xchg
jnp
adc
lods
inc
pop
mov
movsb
punpckhwd
andl
fldl
jb
dec
out
das
push
test
fsubrp
pop
inc
pusha
fs
js
pop
aaa
dec
or
jmp
mov
or
xchg
bound
xor
lods
shrl
imul
mov
sub
aam
sbb
stos
xor
sub
in
sub
in
xchg
ljmp
loope
adc
jg
add
cs
imul
pop
push
cmc
jle
ret
or
sahf
adc
mov
adc
cmpsb
jmp
daa
and
lcall
xor
push
lret
xchg
mov
call
nop
xor
push
in
pushl
xchg
mov
cs
rorl
fcoms
inc
lea
outsb
hlt
push
cmp
push
and
ljmp
ljmp
sbb
arpl
test
repnz
roll
add
jnp
cmpl
mov
das
insb
hlt
incl
jmp
das
pop
aad
ja
jle
das
std
mov
sbb
mov
pusha
sub
icebp
das
jbe
decl
std
mov
mov
sub
sub
test
pop
das
cmc
jl
int
addl
ja
lods
fwait
fwait
push
test
mov
cld
jns
mov
testl
dec
jl
inc
mov
lcall
imull
mov
imul
mov
jns
push
push
stos
faddl
mov
jg
call
popf
aas
loop
andl
mov
ja
call
xchg
adc
push
or
xor
dec
xchg
fs
lds
cli
push
pushl
cld
sbb
add
nop
mov
adc
cmp
inc
loop
xchg
sbb
or
pushf
out
or
ss
sbb
lcall
inc
loop
lret
fadd
xor
inc
jge
or
in
jmp
push
or
sub
sbb
shrl
subb
ss
mov
bound
cmp
decl
popf
mov
cmp
dec
pop
jle
add
pop
push
jl
in
xchg
aaa
mov
inc
add
lods
jle
jl
lcall
inc
icebp
shll
fwait
inc
jg
pushl
loop
sbb
mov
inc
dec
sarb
out
push
xor
inc
jmp
dec
mov
add
xchg
pop
or
imul
mull
or
mov
adc
fldt
cmp
nop
and
sahf
or
cli
loop
iret
cld
fisttpl
ficomps
sbb
xor
pop
mov
fdivrp
mov
shrl
movsl
nop
push
jmp
in
hlt
lods
jmp
push
jg
lods
movsl
aam
pop
stos
adc
test
loop
outsl
jle
push
xlat
outsb
push
or
nop
push
jb,pt
mov
outsl
sub
inc
iret
sbb
or
jl
xor
push
lods
outsb
rcrl
mov
test
sub
nop
sbb
cwtl
arpl
movsl
inc
jg
clc
loope
mov
rorl
and
inc
insl
aad
dec
lods
addr16
xchg
or
gs
sbb
sub
xchg
sahf
sub
push
negb
push
aas
incl
mov
in
mov
aaa
and
dec
jg
scas
dec
cs
fists
pop
pop
or
daa
nop
xchg
mov
mov
sar
call
mov
mov
insb
or
stos
sbb
mov
xor
stos
adcl
aaa
cmpsb
jne
das
icebp
jmp
cld
jecxz
pop
sub
in
cmp
xor
in
inc
aad
lcall
clc
test
fistpll
in
mov
lahf
push
idivb
nop
in
lcall
xor
lret
mov
mov
xor
faddp
test
mov
lods
cmp
into
jns
and
mov
cmc
dec
adc
in
aaa
add
xchg
outsl
scas
in
es
push
mov
fucomip
pop
jns
mov
cmpsb
call
sti
js
inc
cmp
into
hlt
and
xor
call
iret
or
sub
shll
push
lea
lcall
pop
pop
mov
mov
adc
pop
xchg
inc
jmp
or
jg
pop
xchg
or
xor
movsb
push
outsb
mov
or
mov
fcomps
sub
das
mov
pop
jmp
aad
and
pop
pop
mov
aad
adc
and
stos
fidivrl
cmpsl
jg
cmpsl
jo
popf
shr
push
mov
xor
scas
aad
mov
jp
in
addr16
incl
fbld
insl
xorl
fcom
xchg
rorl
mov
add
mov
shll
dec
sub
xchg
dec
xchg
stc
subb
inc
sbb
aaa
cli
fists
inc
dec
jp
stc
cld
inc
jl
imul
in
fstpt
lcall
mov
in
push
push
inc
cs
mov
jo
inc
inc
out
imul
call
dec
notl
mov
ja
ljmp
icebp
ljmp
or
sbb
clc
adc
dec
push
in
add
movsl
xchg
in
push
lahf
sub
clc
xchg
stc
lods
jns
inc
xor
enter
xchg
jmp
inc
out
sti
repnz
add
fcomp
pop
sbb
scas
mov
pop
movsb
call
mov
mov
dec
mov
insb
ljmpw
mov
jb
lcall
jno
mov
arpl
xor
pop
int
in
or
push
inc
scas
lds
outsb
mov
push
push
adc
aad
add
pop
lcall
or
and
std
dec
aad
sub
add
xchg
sub
aaa
js
hlt
xor
sbb
inc
and
incl
xor
jae
sti
dec
sub
popf
das
xchg
dec
push
loope
inc
aad
mov
dec
add
mov
mov
sub
jg
mov
stc
push
xchg
out
push
rcrl
ret
pop
cli
pushl
rol
outsb
insb
dec
aad
jns
ja
gs
insb
out
lcall
mov
out
adc
addr16
in
loopne
clc
scas
cmp
mov
add
pop
fcmovnb
sahf
pop
lock
pop
fdivr
pushl
cmp
lcall
nop
shl
fiaddl
jns
dec
sahf
mov
mov
mov
lcall
fisttps
dec
jmp
dec
or
sub
adc
xchg
jns
inc
sbb
rcl
or
push
pushl
sti
sub
inc
jne
pop
ss
mov
mov
inc
shl
cmp
jno
cmp
sbb
mov
cwtl
icebp
cmp
fdivs
or
call
outsl
imul
or
sbb
jmp
mov
xchg
xor
push
mov
sub
pop
mov
sbb
pop
or
dec
aam
int3
ljmp
aam
fisubl
sbb
cmp
test
mov
insb
add
stos
lcall
and
cmpsb
movsb
ljmp
fildll
fsubrl
dec
jge
jnp
loop,pt
push
clc
xchg
cli
pushl
ja
and
arpl
stc
push
into
out
lock
popa
sub
call
addl
xchg
push
cmc
xchg
testl
mov
std
incl
andl
addr16
cmp
sbb
adc
pop
shlb
ret
pop
outsb
and
pop
mov
jnp
test
fcoml
jge
hlt
sbb
out
push
stc
arpl
lea
sbbl
add
int3
jbe
and
ljmp
adc
lea
lahf
and
mov
jno
mov
hlt
hlt
call
mov
movb
out
aas
inc
insl
adc
and
shll
mov
lds
push
lcall
outsl
mov
mov
mov
jge
jmp
enter
fstps
pop
mov
scas
ret
movsl
jb
repnz
inc
clc
push
fs
jmp
and
testl
mov
sub
dec
outsb
xchg
xchg
sbb
js
or
fisubs
xor
cwtl
mov
data16
sub
idivb
andb
sti
leave
out
sar
xor
push
adc
loope
ss
xor
xlat
lret
dec
popa
scas
bound
xor
sub
xchg
xor
test
cltd
rclb
punpcklbw
mov
mov
sar
pop
inc
sbb
adc
sarl
das
and
inc
inc
pop
call
test
inc
jg
sub
push
fcomps
and
std
inc
cmp
push
ret
popa
sbb
cld
mov
fdiv
ret
rol
mov
sub
mov
adc
ficomps
fcomip
in
ljmp
bound
xchg
je
hlt
movsb
std
jl
ret
xchg
mov
mov
call
cwtl
dec
mov
mov
xor
in
cmpb
cmp
call
xchg
sub
fwait
jae
mov
js
in
adc
cmp
shlb
das
or
xchg
fcoml
add
xor
lock
jmp
mov
mov
jnp
stos
fcoml
jle
pop
inc
ret
dec
outsb
sbb
xchg
pop
cmp
push
subb
xchg
mov
cmpsl
mov
loope
mov
leave
icebp
fs
jle
sbb
clc
pop
cli
lds
test
pop
fcompp
bound
incl
rol
add
lds
pop
xchg
out
xlat
cmp
imul
ficoms
jno
add
jecxz
add
jmp
ljmp
adc
lods
jle
push
or
test
xor
aam
fstpl
ljmp
inc
daa
mov
rcl
pop
pop
mov
mov
addr16
insl
icebp
call
enter
nop
fwait
jns
push
add
repz
sbb
inc
or
and
out
pop
ljmp
adc
test
loopne
jle
das
pop
cmp
adcl
sti
ret
call
xchg
jne
push
push
xor
add
xor
and
jno
sti
push
imul
clc
xchg
clc
xchg
movsb
mov
stos
sub
movsl
pushl
pop
adc
ret
pop
enter
lret
iret
inc
and
jmp
add
adc
in
cmpsb
lods
cld
pop
in
sarb
push
jle
jp
mov
push
lahf
pushf
cmp
and
pop
and
xchg
fstl
adc
push
pop
ds
lcall
nop
dec
cwtl
pop
xor
or
out
mov
mov
sbb
adc
sbb
test
jp
mul
dec
xor
pop
xchg
imul
add
sbb
pushl
adc
sub
add
sub
xchg
xlat
movsl
outsl
xrelease
push
fcomps
inc
sub
mov
dec
into
test
inc
js
test
movl
call
mov
mov
sub
jbe
imul
adc
mov
inc
and
xchg
std
test
pop
into
sbb
test
jne
ds
cmp
sarl
dec
pop
clc
mulb
rorb
jg
jg
xor
movsl
mov
mov
je
pop
pop
adc
icebp
je
imul
repz
incl
mov
test
jmp
pop
push
xchg
sbbl
xchg
lcall
std
fistpll
call
push
je
cwtl
sbb
push
mov
or
filds
test
xchg
hlt
pop
mov
sbb
clc
pop
aam
leave
call
jmp
unpcklps
lds
insl
inc
adc
pop
and
int3
lea
and
in
clc
inc
adc
movsb
cmp
je
jle
mov
sub
imul
push
inc
sar
pushl
sub
xor
clc
dec
adc
xchg
dec
testb
fsubrl
jne
jmp
add
inc
and
out
cli
mov
and
push
and
decl
sbb
xchg
xlat
stc
jecxz
adc
adc
xlat
and
pushl
fsubp
mov
scas
cmp
arpl
push
fisubrs
xchg
outsl
mov
cmc
or
mov
push
xor
idiv
xor
lods
push
cmpsb
cmpsb
mov
arpl
push
inc
pop
xchg
push
adc
xchg
les
std
incl
fsub
sbbb
fiadds
flds
addr16
xor
mov
xor
dec
enter
test
dec
fidivs
lcall
ja
movsl
or
inc
and
sar
sahf
addl
xor
popf
jle
xchg
call
push
test
xor
pop
mov
add
repz
mov
push
cli
push
insl
or
jno
inc
js
dec
inc
and
cmp
cmc
ljmp
cmp
movsb
cmc
mov
mov
or
loopne
das
lock
fnsave
fwait
cltd
push
sub
ljmp
xchg
sbb
test
pop
pop
test
adc
stc
sar
pop
jae
inc
cmpsl
jmp
xchg
pop
ja
pop
jb
loope
repnz
xor
xor
pop
cltd
push
xor
pop
xchg
lret
movsb
call
in
test
aas
enter
mov
les
lods
or
push
jecxz
mov
push
cs
jmp
std
sbb
xor
jae
scas
add
mov
outsl
push
inc
dec
std
adc
cmp
jg
jo
sbbb
xchg
jbe
filds
mov
jbe
cmpsl
xchg
imul
push
ljmp
inc
mov
mov
lods
andl
sbb
mov
push
stc
incl
lods
cmp
dec
sub
test
inc
push
xchg
call
test
mov
sub
sahf
xchg
cli
lcall
inc
insl
add
ljmp
and
jo
loop
adc
jge
inc
jmp
cli
aaa
push
jno
iret
aad
in
push
dec
mov
stc
and
mov
mov
bound
jo
push
mov
jns
les
scas
rcl
lods
orl
xchg
mov
in
mov
das
cmp
or
ret
adc
or
les
loopne
int
std
dec
xchg
inc
pop
push
mov
inc
daa
mov
jle
add
dec
sti
inc
lcall
loop
inc
xor
xchg
push
pop
loop
jp
jecxz
int
mov
inc
or
and
outsl
cli
incl
sbb
mov
cmpsb
orb
loope
inc
jb
mov
call
sbb
je
xchg
add
decl
jg
mov
insb
andl
js
pop
stos
cld
mov
jle
aaa
clc
mov
fistps
xchg
js
push
daa
sub
mov
cmp
outsl
popf
call
pop
repz
std
sub
and
push
ljmp
xor
imul
leave
jg
icebp
movsl
stos
jg
call
dec
push
push
rolb
cmpsb
dec
inc
jmp
dec
loopne
push
jle
sbb
cltd
mov
sti
lcall
cs
inc
icebp
jns
iret
sbb
mov
popa
aaa
pop
clc
shlb
jle
jb
sbb
xor
les
call
fisubrl
pop
adc
fldcw
insb
dec
and
sbbb
pushl
cli
enter
stos
shrb
popf
inc
dec
inc
pop
mov
xlat
dec
inc
fldt
mov
jbe
movsb
nop
push
imul
xor
push
das
popf
aad
push
cli
jbe
jp
mov
std
dec
cwtl
test
xor
mov
imul
push
cmpsb
xchg
clc
pushl
add
cwtl
cli
cltd
mov
popf
mov
sbb
mov
andl
sti
mov
pop
cli
sarl
cmp
insl
xchg
pop
leave
sbb
xchg
xchg
imul
pop
lret
push
call
rorb
and
sub
inc
mov
lret
call
test
or
inc
pop
notl
jo
adc
cs
mov
mov
jg
add
sbb
jmp
xorb
jg
adc
ss
fmul
mov
sbb
stos
pop
ljmp
scas
aas
adc
loope,pn
dec
mov
cmp
loopne
sbb
js
testl
sub
lods
sub
fmull
imul
lods
add
fbld
imul
pop
stos
shrb
fimull
icebp
adc
adc
pop
cli
jl
push
jae
xorl
mov
out
outsl
cmc
mull
push
adc
dec
cwtl
dec
and
push
leave
push
lret
inc
loope
adc
cwtl
scas
mov
lea
push
call
das
ret
push
inc
xchg
add
cs
sbbl
hlt
mov
jmp
inc
fadds
sti
sub
jge
into
cltd
xor
mov
jnp
sub
lcall
mov
hlt
lods
cmp
dec
aas
repnz
call
into
sbb
add
inc
mov
add
push
iret
loopne
das
pop
faddl
cmc
push
mov
ret
scas
mov
sub
adc
mov
cmp
add
out
out
cld
loope
into
mov
xor
mov
lock
sub
adcb
push
das
cmc
lcall
pusha
repz
jge
fstl
cli
inc
jae
jno
sub
fidivrl
sub
cmpsb
pop
fucom
cmp
cmp
stc
inc
mov
movsb
push
xor
inc
cmc
lea
jmp
sarb
mov
sbb
sti
or
xlat
daa
addr16
call
dec
adc
and
fwait
movsl
popa
sub
shrb
mov
pop
push
in
insl
dec
daa
outsl
jg
dec
inc
hlt
pushl
mov
aaa
xor
cmpsl
xor
pop
push
lock
cmp
pushf
pushf
mov
mov
stos
and
adc
push
sbb
adc
faddl
and
stc
adc
jbe
inc
xor
jle
jbe
stos
das
iret
push
pop
cmp
xlat
scas
test
aaa
xchg
dec
inc
pushl
inc
mov
call
sahf
test
xchg
cli
notb
ljmp
inc
xor
mov
mov
mov
or
js
mov
inc
incl
sarb
je
jl
cmpsb
daa
xchg
jnp
dec
jg
jmp
xchg
pusha
in
xchg
xchg
repnz
fistpl
pop
gs
out
lret
out
sub
dec
lret
mov
jl
mov
or
mov
and
ret
fiaddl
ret
sti
shrb
iret
inc
sarl
lods
mov
pop
dec
fimuls
cmc
inc
mov
sbb
xchg
mov
out
sbbb
pop
rcll
and
loopne
das
lock
subb
mov
rcrl
lcall
jnp
scas
xchg
aas
std
cmpsb
mov
jnp
and
mov
dec
add
test
incl
incb
xor
pop
jae
push
fistl
imul
cmp
ficoml
fmul
outsl
cmc
das
std
mov
lds
testl
jg
je
or
sub
std
das
sub
negb
jnp
les
cld
inc
lcall
pop
fucomi
sbb
fstpl
jg
incl
in
adcl
cltd
mov
push
mov
hlt
decl
mov
inc
sbb
call
inc
nop
mull
dec
fcmove
mov
mov
aas
mov
pop
in
jo
jmp
clc
sub
sub
lock
push
xlat
dec
push
enter
ljmp
mov
fcoml
xchg
xchg
and
pusha
mov
and
into
in
sub
sbb
ror
push
adc
int
pop
add
pop
outsl
jmp
movsl
aas
xlat
clc
inc
adc
enter
jmp
and
in
mov
or
aaa
mov
out
inc
in
sti
fwait
nop
push
push
clc
pushl
sahf
inc
fldenv
data16
andb
rcll
pushl
in
jns
hlt
jge
mov
add
repnz
xchg
jl
pop
add
bound
and
pop
iret
jnp
fldl
mov
fistl
fidivs
mov
or
add
mov
push
mov
dec
pop
outsl
fsubrp
aaa
lods
dec
imul
ljmp
test
ja
out
lea
cmp
mov
lcall
pusha
sti
in
mov
shll
sbb
fucomip
mov
addr16
ret
pop
mov
xlat
jne
sbb
jp
repz
inc
jne
mov
call
mov
mov
jp
or
in
xchg
cli
and
sbb
inc
push
xor
cmp
loopne
xchg
sarb
add
cmpsb
xor
cmp
sbb
mov
scas
xchg
fistpll
xor
xor
shlb
lcall
aaa
mov
cwtl
cmp
pop
xchg
aas
ljmp
mov
sti
rcrb
pmullw
pushf
dec
xchg
daa
push
xor
push
clc
jmp
in
mov
cs
inc
sbb
cmp
mov
gs
jg
xor
adc
mov
add
loopne
imul
fmull
aam
push
incl
les
push
sub
ljmp
sub
mov
dec
pop
jmp
std
shll
xchg
sarl
sbb
ljmp
lret
jmp
xlat
push
lock
iret
push
and
xor
fdivl
shlb
jge
xor
mov
jmp
dec
mov
mov
loopne
icebp
lcall
fimull
sbb
es
out
jns
test
mov
cmp
xchg
inc
shlb
and
add
pushl
jno
in
rolb
scas
pop
push
xlat
in
jbe
adcb
fnstsw
mov
jmp
shll
pop
push
pop
pop
sbb
lods
sub
call
pushl
shrl
dec
adc
mov
leave
add
lret
or
std
incl
out
daa
in
inc
das
xchg
mov
push
hlt
andl
mov
inc
incb
decl
std
dec
cmpsb
dec
mov
jmp
sti
lds
rolb
mov
xor
xor
ret
pop
test
push
jecxz
xchg
xor
adc
inc
mov
push
in
or
add
lds
jl
in
jle
inc
adc
cmpsl
mov
mov
fadds
loope
enter
push
xchg
push
out
push
das
icebp
test
push
push
std
jp
test
inc
mov
mov
jmp
inc
or
pop
jns
xor
incl
add
cmpb
into
push
not
call
in
sbb
sbb
cmp
dec
add
xchg
xlat
ret
mov
notb
lea
dec
mov
pop
inc
pushl
inc
fsubs
jnp
xchg
mov
push
int
jmp
daa
push
movsl
pop
fmulp
xchg
ss
mov
scas
jecxz
incl
pushl
sbb
test
sub
outsl
pop
lahf
jno
cld
ljmp
call
and
adc
jae
pop
inc
or
bound
test
adc
incl
mov
ja
ss
push
imul
clc
lcall
jnp
or
dec
inc
stc
jmp
push
inc
in
cmp
pushl
popf
lock
lcall
mov
mov
dec
arpl
je
call
jmp
out
cli
xor
pusha
xchg
fwait
inc
out
rcrl
ljmp
aam
dec
mov
nop
mov
xor
jmp
sub
sbb
ja
outsl
gs
addb
push
outsl
stos
or
test
inc
lods
fbld
adc
mov
int3
inc
insl
push
aad
mov
fnstcw
aad
sti
fadds
sub
jl
data16
xorl
and
inc
push
repz
out
mov
xorl
and
incl
lods
dec
mov
mov
scas
scas
push
les
scas
decl
jbe
mov
jge
clc
and
fs
mov
sbb
pushl
pop
out
pop
in
inc
pop
pop
popa
lds
js
mov
mov
xor
cwtl
lock
test
or
test
mov
inc
dec
xor
mov
mov
test
addb
jle
pop
push
inc
fs
es
mov
incl
xchg
mov
int
es
xor
addr16
rcl
mov
lods
mov
scas
push
or
mov
adc
xchg
sbb
add
fisubrl
mov
mov
fcompl
je
jnp
push
mov
mov
xchg
in
inc
inc
ja
adc
or
inc
mov
pop
out
or
sub
inc
and
call
jecxz
scas
lods
int3
out
rcll
jns
and
insl
cmp
call
jb
prefetch
testl
rcrl
mov
and
das
mov
mov
cli
fidivrs
push
mov
jno
fistpl
stc
sub
sub
pop
jg
lcall
pop
loopne
mov
test
pop
xor
dec
sbb
dec
xchg
sbb
pushl
sbb
cmpb
sbb
rolb
xchg
ljmp
incl
lods
add
fsubs
stc
scas
lret
mov
mov
leave
and
popa
cli
bound
lock
call
lods
cltd
sbb
inc
stc
mov
inc
pop
adc
jp
jb
sbb
incl
imul
sub
adc
jl
dec
pop
call
ja
push
sub
int
hlt
fmuls
xchg
lds
jmp
outsl
pushl
inc
inc
or
or
es
mov
test
jp
xor
out
mov
clc
test
repz
mov
push
mov
adc
mov
sbb
xchg
lds
sahf
add
sbb
outsb
push
xchg
call
mov
stos
or
sub
hlt
data16
scas
stos
xor
jmp
mov
movsl
mov
mov
aaa
insb
add
adc
sbb
pop
jno
inc
sbb
iret
into
push
adc
and
mulb
mov
clc
mov
rorb
pop
cmp
lods
mov
xchg
mov
cmp
pushl
outsb
arpl
jns
mov
mov
mov
fwait
mov
xor
add
aaa
sub
mov
mov
lock
lcall
or
ret
imul
or
lock
in
xchg
ljmp
or
sbb
lcall
ljmp
jecxz
xor
jno
int3
and
mov
lahf
adc
stc
and
movsl
jne
jle
jg
push
outsl
gs
filds
les
or
les
lcall
xor
jmp
in
sbb
mov
mov
add
fildll
inc
jecxz
xchg
cltd
mov
mov
xchg
push
mov
pop
sbb
cld
int
ljmp
cmc
ret
mov
mov
pop
xor
cmpsb
mov
inc
andl
sarb
outsb
hlt
mov
mov
mull
imul
rorl
decl
sub
sbb
xor
fadds
jl
pop
aam
push
jo
or
ds
mov
decl
mov
lods
cmp
outsb
imul
in
adc
lahf
movsl
dec
adc
jmp
jp
movsl
test
shrb
cmc
sbb
mov
outsl
jo
mov
decl
std
incl
insb
sbb
lea
adc
shrb
add
call
stc
movsl
and
dec
mov
fiaddl
enter
add
mov
lods
fucomip
call
or
adc
or
and
js
decl
out
mov
cmp
shl
ljmp
jmp
sub
mov
or
pusha
mov
adc
leave
mov
das
mov
dec
jns
scas
in
jae
pop
dec
push
or
aad
inc
fs
xchg
ja
insl
mov
mov
lea
or
loop
insl
inc
mov
add
cmpsl
or
mov
xchg
or
mov
pop
movsw
cwtl
xor
lock
inc
pop
pop
mov
xchg
cmc
lcall
mov
xor
gs
es
in
lock
mov
add
jp
out
mov
int3
ficomps
push
dec
dec
or
inc
xchg
mov
cmp
hlt
ljmp
rcr
gs
push
add
ret
add
pop
scas
imul
imul
sbb
cmp
and
sbb
mov
sbbl
xor
xor
pop
les
outsl
lock
pushl
pop
sbb
mov
xor
and
xlat
aad
jp
mov
outsl
icebp
pushl
mov
cwtl
jno
js
and
fsubs
aaa
mov
jno
clc
data16
jp
inc
js
scas
ds
cli
push
jge
dec
jno
repz
ja
rcrb
and
pusha
adc
call
pop
das
popa
pop
test
aam
pusha
xchg
push
xlat
sub
arpl
pop
mov
mov
sub
ss
sbb
sbbl
pushl
decl
in
out
fiaddl
testl
xchg
clc
imul
jmp
repz
sub
stc
jg
iret
pop
xor
sbb
sti
arpl
or
fistpll
add
jge
adc
in
dec
ret
test
cltd
pop
add
jg
pushl
mov
out
popa
sub
adc
sub
pusha
or
rcl
aaa
cli
incl
clc
popa
pop
mov
cmp
mov
cwtl
xor
xchg
cli
aaa
xchg
or
ds
jnp
out
mov
pop
cmc
and
test
lcall
inc
cwtl
shrb
inc
inc
mov
sub
orl
mov
add
sbb
push
leave
pop
imull
sub
bound
fistpll
push
dec
dec
mov
xchg
addr16
xchg
or
lahf
test
push
or
hlt
incl
hlt
cmp
cmpsb
loope
mov
mov
xor
mul
stos
mov
in
cmp
jnp
sbb
aam
mov
in
push
test
ja
mov
aaa
clc
ljmp
out
jns
test
mov
movsl
loope
push
add
mov
mov
xchg
push
push
call
inc
mov
ret
inc
pop
aaa
or
lahf
stc
mov
sub
jg
sbb
sbb
push
sbb
adc
test
pusha
jp,pt
xchg
pop
fdivrs
aad
push
inc
push
gs
sbb
andl
fdivl
fidivrs
pop
daa
xor
dec
jnp
repz
fldenv
add
bound
std
sbb
jmp
inc
or
mov
cmp
jg
mov
pop
or
mov
xor
shlb
arpl
jge
int3
jb
roll
cs
cmp
popa
jnp
mov
lods
pusha
addr16
sbb
dec
xor
sbb
lcall
adc
dec
lds
push
hlt
cld
test
and
cwtl
inc
cmp
xchg
pop
mov
decb
add
std
stos
pop
cmp
jl
jp
cwtl
ja
adc
jo
daa
sbb
ljmp
loop
sub
jns
aaa
adc
jbe
fdivr
ds
pop
ljmp
andb
fisubl
fs
mov
mov
decl
cwtl
lea
push
fidivrs
aas
and
and
inc
mov
pop
mov
pop
sub
inc
pop
out
push
add
aam
xchg
xlat
or
mov
movsb
cld
or
ret
push
fucomip
shrl
xor
out
movsl
dec
inc
outsb
ret
or
lcall
adc
data16
and
cwtl
fstps
or
popf
and
icebp
shlb
push
notl
lock
loop
decl
rcll
dec
xor
lret
add
in
jb
add
out
insl
mov
fidivrs
or
pop
cli
xor
in
fiaddl
pop
dec
push
cltd
mov
dec
xor
xchg
and
outsl
pop
aas
sarl
fistpll
lods
push
and
out
test
loope
jmp
inc
in
jo
sub
push
and
pop
lcall
lods
fs
arpl
jmp
iret
outsb
xchg
xor
add
mov
ret
adc
movsl
stc
mov
mov
inc
decl
test
pop
int3
sahf
push
push
ljmp
hlt
aaa
and
testb
inc
dec
and
test
jne
push
sub
decl
cld
jmp
add
scas
popa
aad
out
movsl
stos
or
mov
movsb
gs
lock
cli
dec
mov
push
cs
ss
adc
dec
test
ljmp
fisttps
inc
nop
or
call
addr16
mov
incl
inc
mov
loopne
dec
loop
mov
xlat
mov
fmuls
pop
fdiv
and
cmpb
dec
xor
mov
push
fsubl
sub
cmpl
and
xchg
iret
jne
popa
jno
lds
ret
jne
bound
test
and
pop
add
push
into
data16
push
mov
lea
clc
call
cli
inc
pushf
inc
imul
sub
inc
iret
cld
call
dec
push
pop
sbb
cmp
aas
cltd
insl
push
jo
daa
jle
add
ljmp
cmp
inc
adcb
push
sub
jmp
sbb
or
inc
bound
in
inc
pop
cli
jmp
and
xchg
nop
cld
scas
cltd
inc
adc
out
mov
or
cs
flds
jg
pop
pop
imul
jp
mov
movsl
les
pusha
cmc
adcb
lock
xor
in
dec
adc
jnp
adc
call
pop
mov
sub
hlt
sbb
test
cld
gs
xchg
mov
stos
jmp
push
dec
sbb
jne
push
fsubs
inc
shlb
mov
mov
test
mov
jg
and
push
repz
cltd
idiv
popf
stos
inc
cmp
in
fcos
mov
push
jne
enter
xchg
mov
sbb
dec
pop
xor
add
mov
cli
lods
mov
ljmp
ljmp
lcall
push
pop
insl
pop
xchg
adc
jne
dec
lcall
call
lods
mov
ret
or
das
xchg
xchg
xchg
add
decl
lcall
dec
sub
mov
out
call
mov
loopne
cld
mov
pop
int
sbb
aaa
pop
push
xchg
inc
stos
lods
arpl
jg
call
mov
sarl
pop
push
xor
and
imul
or
aaa
ds
inc
push
fistps
xchg
and
imul
das
loopne
sahf
add
std
inc
mov
mov
cltd
subl
bound
lahf
call
cwtl
setae
and
mov
dec
or
inc
cmpsl
mov
xchg
outsl
push
clc
scas
in
das
sub
mov
mov
repz
das
mov
fisubrl
sarl
jmp
mov
xchg
xchg
jmp
push
fdivl
bound
ljmp
loopne
and
cmpsb
arpl
mov
call
fisubrs
xchg
push
push
cmp
popa
mov
jp
sbb
ljmp
push
decb
lock
les
decl
inc
add
shrb
loopne
sub
pop
sbbl
aam
fwait
sbb
clc
jg
loope
arpl
out
les
fistl
lahf
cmp
push
jg
pushl
clc
mov
lods
loop
adc
mov
jae
mov
pop
cli
outsl
cmp
out
push
jno
repz
sbb
pop
cmc
dec
outsl
ljmp
push
cmp
adc
and
mov
xchg
test
and
xchg
mov
popa
xlat
sub
mov
push
pop
push
test
ljmp
or
sub
jne
ret
popa
adc
mov
dec
sbb
mov
push
pop
ljmp
mov
mov
xchg
ds
pop
dec
psubb
inc
cmp
out
hlt
lret
adc
push
mov
sahf
fisubrl
pushl
add
into
jge
adc
jmp
mov
decl
jl
pusha
stos
or
loope
andl
pop
add
stos
loopne
jbe
imul
ljmp
jbe
jl
aaa
sarb
cmp
mov
outsb
sti
sub
pushl
sbb
mov
inc
fbld
mov
pop
out
xor
rol
decl
pop
inc
inc
adcl
adc
sbb
push
xchg
mov
jnp
xchg
incb
lock
and
loope
cmp
lcall
and
jmp
stc
jo
add
sbb
fs
inc
mov
fcos
cmp
out
mov
rclb
or
push
mov
addr16
and
mov
mov
nop
popf
mov
or
aaa
test
add
jp
iret
jmp
mov
arpl
scas
mov
lahf
cmpsl
sbb
add
jmp
lcall
jo
mov
mov
add
dec
and
aaa
fildl
out
and
rcrl
iret
pusha
sub
mov
dec
adc
lahf
pop
mov
mov
lds
ljmp
mov
insl
inc
adc
aas
jb
or
repnz
lods
ljmp
pushl
mov
mov
in
call
call
adc
inc
xchg
and
mov
test
or
dec
shrb
fistl
test
mov
mov
shlb
decl
mov
dec
or
cmc
pop
loop
adc
or
mov
scas
decl
sarl
xor
scas
and
inc
fisttpll
dec
out
pop
or
out
sbb
mov
xorl
xor
cwtl
cmpsb
add
sub
pop
mov
movsl
mov
imul
in
int3
mov
and
daa
cmp
fnsave
cmp
out
pop
mov
or
adc
push
mov
or
sar
jmp
pushf
dec
add
xchg
adc
mov
ret
nop
push
mov
cs
xchg
dec
dec
mov
cli
test
ljmp
imul
lret
xor
inc
xchg
loop
cli
pushl
mov
pop
scas
xor
xchg
push
loopne
jle
push
pop
rcrb
mov
xor
fwait
stc
pop
mov
test
sub
push
pushl
mov
shll
test
movsb
cwtl
stos
pop
data16
inc
aad
ljmp
cmc
fucom
jne
sub
cmpsb
and
andb
dec
pop
push
testb
xchg
lcall
pop
stos
add
dec
call
decb
cmp
jnp
stos
or
test
clc
incl
sub
mov
adc
sbb
mov
imul
xchg
xchg
xor
cmp
add
adc
sti
outsb
dec
fiaddl
xor
adc
inc
popa
cmp
fs
inc
xor
call
decl
mov
push
or
cmp
outsl
dec
cmp
mov
inc
in
bound
or
hlt
int3
in
mov
ljmp
mov
lods
sub
jns
in
xchg
inc
or
popa
jp
repnz
incl
mov
mov
sub
ret
outsb
testb
std
incl
test
adcl
sbb
dec
xchg
push
fcmovnb
incl
mov
sti
js
mov
jne
inc
and
shl
push
sub
cmp
jl
adcl
fcoms
xchg
add
xchg
in
push
lds
in
or
outsb
push
xchg
dec
or
pushl
sbb
and
int
das
jp
imul
sub
jge
sbb
pushl
lods
dec
xchg
xchg
xchg
push
das
push
mov
nop
mov
pusha
pusha
add
mov
mov
push
lret
cmp
adc
xchg
jmp
inc
test
ret
test
or
xchg
popf
imul
ficoml
adc
cs
loop
call
jmp
sub
test
jns
inc
imul
mov
sbb
pop
std
jg
mov
inc
cmp
test
sar
decl
cld
pushl
or
ret
jmp
cmc
mull
add
repnz
cmp
and
jmp
push
dec
and
nop
push
lcall
ja
push
jle
push
xchg
lock
jnp
insl
pop
mov
into
sub
mov
or
ficompl
cld
movsl
out
std
add
jecxz
cmpsb
rorl
cmpsb
xchg
ds
dec
sbb
pop
inc
mov
inc
loopne
cmp
sub
mov
jle
inc
into
dec
pop
dec
pushl
push
sar
pop
std
mov
pop
sub
out
cwtl
les
loop
lea
rcr
lret
das
repz
dec
push
cli
push
js
push
out
sub
push
lcall
cmp
adc
stos
daa
xchg
das
or
ja
jg
sbb
loope
repz
mov
data16
adc
ljmp
sub
mov
mov
or
jo
inc
mov
cmpsl
stos
xor
jb
rclb
mov
lahf
cmp
inc
fcoml
test
xor
mov
lret
dec
push
imul
call
call
pop
xor
mov
cmp
jns
dec
pushf
pusha
in
stos
mov
lcall
or
or
out
and
mov
cwtl
rol
repz
lahf
dec
jle
inc
push
lods
and
daa
mov
rorb
sbb
lcall
imul
mov
fcmovnbe
inc
and
pop
fld
add
inc
push
loopne
pop
and
shlb
pop
mov
mov
out
xchg
jnp
mov
hlt
xchg
mov
lahf
dec
mov
push
out
movsl
call
loop
imul
test
insb
idivb
dec
push
fs
jge
incl
pop
pop
sbb
fwait
jecxz
data16
in
sarb
lods
xchg
xor
mov
sti
rcrb
pop
fistl
push
pusha
outsl
cld
or
adc
inc
gs
std
sub
dec
jecxz
loopne
outsl
hlt
jmp
movups
mov
in
pushf
lods
ds
or
jb
mov
enter
decl
or
sbb
movsb
push
cs
sbb
pop
sub
inc
fsubl
std
inc
or
or
aad
leave
push
sbb
lcall
push
adc
fistl
addr16
icebp
mov
imul
sar
pushl
arpl
dec
pop
lret
icebp
std
ja
mov
jmp
and
mov
and
inc
jmp
scas
fstps
mov
sti
mov
dec
popf
inc
push
and
mov
daa
pushl
mov
aas
jl
clc
sbbl
jg
xor
leave
scas
jns
dec
cmp
push
aad
pop
out
jmp
outsl
push
sbb
shlb
pop
lods
mov
cmpb
outsl
mov
icebp
ja
dec
adc
push
pusha
push
mov
ret
sbb
mov
addl
jle
mov
icebp
add
sarb
ss
pop
inc
jmp
xchg
clc
jp
sub
ja
push
lret
lcall
sti
call
aas
sbb
ficoms
gs
pop
cli
and
call
movsb
imul
shr
inc
insb
pop
in
insl
loope
and
xor
adc
decl
sarl
xchg
imul
push
sub
dec
push
sar
jmp
xor
imul
xor
and
out
xchg
jne
cltd
adc
mov
pop
dec
jge
jo
mov
dec
bound
js
jl
add
nop
mov
sbb
adc
push
add
inc
mov
imulb
sbb
push
in
sbb
jbe
mov
cli
ljmp
adc
cmp
dec
dec
add
lcall
in
add
incl
add
xor
pop
lret
push
and
and
mov
mov
push
and
outsl
cmc
jg
mov
jb
jge
add
jnp
in
push
jg
lcall
ret
imul
pop
roll
push
add
cmp
jg
dec
cmp
lret
mov
pop
fxch
sahf
mov
loope
sbb
jmp
fstl
mov
aas
lcall
add
and
call
cmp
jo
xchg
and
sub
outsb
lcall
ljmp
sub
jp
mov
sub
xchg
mov
mov
or
dec
outsl
mov
outsb
pop
and
int
call
add
repnz
mov
lds
lret
stc
push
cmp
cmpsb
adc
push
sbb
lcall
test
pop
xchg
mov
clc
or
push
cmpsl
cmp
pushl
gs
hlt
jbe
mov
repnz
sbb
dec
in
sahf
add
sub
sub
das
cld
ds
loope
push
repz
dec
icebp
decl
std
push
push
jne
divl
in
jg
mov
jl
rcrl
or
outsl
lock
push
xor
xchg
movsb
sub
dec
std
decl
scas
ljmp
movsb
xchg
sub
imul
xchg
jnp
movsl
fildll
push
mov
push
pushf
jmp
jne
mov
mov
or
in
lock
pop
frstor
mov
jmp
lcall
sahf
call
js
addr16
xchg
imul
outsl
pushf
xor
jle
sub
mov
test
nop
pusha
jbe
mov
or
rolb
pop
jo
movsl
pop
aam
push
sbb
lods
mov
out
jb
sub
insl
xor
call
les
cmp
push
and
mov
inc
int
push
or
cmpl
xchg
mov
push
sti
gs
push
mov
pushl
sbb
stc
dec
std
popa
sbb
push
push
sub
sarb
out
scas
fildl
push
pop
mov
dec
dec
jmp
add
sub
bound
loop
das
jne
ljmp
out
decl
xchg
mov
lds
push
mov
pop
push
lret
test
mov
inc
gs
shl
jg
inc
js
aam
xchg
aas
dec
inc
add
loop
add
dec
sbb
ljmp
inc
repz
cmp
jmp
test
add
subl
pop
lds
imul
fdiv
std
sbb
decl
aas
test
adc
mov
sbb
mov
mov
push
outsl
lock
fsubrl
sbb
aad
sub
inc
clc
fcoml
fstl
js
leave
pop
dec
stos
ficoml
stos
jle
mov
jbe
and
pop
ljmp
mov
pop
int
shl
mov
mov
pop
push
mov
iret
mov
and
xchg
push
xorl
inc
fnstsw
push
sub
jmp
call
fiadds
cmpsl
jne
add
adc
int
or
call
enter
add
mov
hlt
retw
mov
mov
xlat
roll
iret
lock
in
adc
movsb
mov
sbb
daa
and
xor
cmpsb
jbe
jg
decl
push
xchg
inc
pusha
mov
xor
pushf
push
iret
xchg
aad
push
sbb
je
ljmp
js
cmc
jg
shll
test
shrl
mov
sub
clc
xchg
mov
ljmp
mov
lea
mov
and
pop
or
imul
stos
outsb
mov
dec
cmp
push
xchg
xchg
rcll
ja
mov
cld
imul
sub
sahf
xor
out
outsb
inc
ficompl
or
loopne
mov
push
test
cld
xchg
mov
addr16
xor
loopne
ljmp
pop
mov
mov
and
mov
jge
cmp
ja
pop
push
mov
idivl
inc
decl
fsubl
push
mov
mov
mov
pop
mov
lcall
in
mov
mov
cmpsl
jb
ja
dec
cmp
adc
mov
add
and
push
or
inc
out
mov
pop
xor
and
cmp
sbb
or
xor
sub
lcall
push
and
mov
stos
xchg
gs
adc
jl
ds
ljmp
js
adc
mov
js
jecxz
cmp
cwtl
haddps
mov
cwtl
add
mov
nop
mov
cmp
out
and
ud0
call
inc
sti
inc
jp
jl
add
mov
pop
gs
insl
sarl
sbb
js
lea
jg
psubd
inc
xchg
je
mov
stos
loopne
jg
or
mov
cmpsl
push
mov
sbb
sub
mov
jge
nop
inc
pop
dec
jl
popa
push
in
sub
dec
mov
call
push
mov
andb
push
fsubr
cmp
mov
out
xlat
or
mov
bnd
je
vaddss
clc
stc
daa
push
inc
outsl
xor
dec
sahf
pop
pop
clc
lcall
jne
loopne
std
jne
ja
je
out
inc
adcb
pop
popf
jle
mov
adc
pop
add
inc
xchg
dec
push
xorb
dec
flds
jle
mov
lea
jb
add
lret
imul
clc
decl
adc
sahf
sbb
adc
ljmp
adc
rcrl
sbb
mov
and
mov
add
and
movsl
jo
jecxz
push
inc
stc
mov
or
xchg
push
or
mov
dec
std
shll
inc
cmp
pop
popf
cmp
mov
aas
ret
in
mov
call
mov
addr16
jecxz
shlb
mov
nop
mov
test
les
dec
rclb
test
add
lock
lcall
add
call
mov
insl
xor
fadd
lcall
cld
aaa
fsubrs
filds
xchg
push
push
fidivrl
pop
pop
clc
div
push
or
and
fisubrs
pop
pop
cmc
out
incl
fsubl
mov
sbb
fdivrl
fdecstp
pop
ds
xlat
jg
fnstsw
pop
xchg
jnp
jmp
mov
inc
ret
push
mov
xor
jge
xchg
jb
es
push
loope
jnp
rcrb
pop
call
adc
addr16
or
ljmp
int
xor
cmc
pushl
ret
rcr
fs
lret
lock
in
jbe
pushl
push
mov
mov
repnz
hlt
mov
xchg
push
imul
lcall
adc
xchg
test
inc
xor
mov
add
cmc
sbb
push
mov
xchg
push
sti
imul
pop
loopne
add
rcrl
mov
mov
lcall
cld
popf
in
sub
sarb
push
leave
xchg
jmp
movsl
orb
dec
xor
enter
loopne
scas
clc
fsubrl
dec
gs
loope
mov
test
mov
lahf
mov
ljmp
pusha
pop
jo
je
ss
fisubrl
mov
cltd
lret
cmovle
mov
push
repz
test
and
cmpsl
pop
in
pushf
pop
pop
and
ret
pop
insl
cmp
jg
das
mov
sbb
imul
push
out
cmp
cld
out
xor
incl
pop
cmc
outsb
mov
int3
mov
cs
les
pop
loop
sti
pop
xchg
subl
mov
cld
inc
roll
and
mov
push
push
xchg
outsl
xchg
enter
inc
adc
xor
stos
cs
ljmp
adc
dec
loope
popa
aas
movsb
aad
imul
and
loopne
insb
add
cmc
mov
jmp
lds
xor
or
cmp
mov
mov
lds
jbe
add
inc
into
and
jg
mov
fxch
jmp
and
test
test
or
sbb
fisubs
add
sbb
ljmp
les
movsb
xchg
orb
xor
pop
leave
ret
dec
lcall
pushl
push
cmp
je
in
je
inc
sub
sub
stc
adc
dec
stos
sbb
inc
daa
xor
jle
mov
ljmp
loop
fwait
lock
pop
mov
sar
push
mov
std
in
or
rclb
incl
dec
addr16
cmc
cmp
jo
out
movsb
dec
adc
jbe
arpl
jmp
xor
out
xor
sbbb
cmpsl
sub
or
mov
pusha
and
cld
mov
outsl
inc
sbb
fmull
das
mov
adc
sahf
popa
cmp
ja
dec
stos
fxsave
mov
xchg
push
mov
and
cmp
out
adc
ror
ljmp
xor
fcompp
pop
stc
outsb
pop
jno
les
push
sub
shll
mov
test
xlat
dec
cmp
lret
jmp
jmp
fdivrs
jo
jg
dec
mov
call
inc
int
mov
jle
imul
cmc
decl
pop
mov
mov
dec
xchg
js
in
and
pop
xchg
mov
xchg
cli
ds
loopne
dec
push
push
jb
and
or
in
ret
push
jecxz
iret
pushl
push
lahf
fisttpl
jno
inc
add
in
xlat
xchg
loope
xchg
inc
and
daa
fcmovu
sti
pushf
das
hlt
fistpll
inc
addr16
ret
cmp
mov
mov
push
mov
lock
mov
push
rcrb
popa
inc
jle
and
iret
xchg
leave
dec
sub
xchg
inc
adc
dec
sbb
push
and
xchg
jg
push
int
push
shlb
mov
ret
mov
xchg
call
fwait
aam
call
ljmp
push
or
not
sub
fcompl
xor
dec
pop
aaa
lcall
andb
pop
jnp
fdivs
inc
adc
test
mov
ret
xchg
or
xor
sub
pop
popa
outsb
ficompl
push
adc
rcrb
les
cwtl
fdivs
lods
fmuls
icebp
test
lock
les
cmpsl
std
mov
xlat
mov
cmc
dec
out
xor
out
dec
push
data16
test
test
cwtl
rclb
jne
jnp
jg
icebp
int
mov
ret
add
cmpsb
dec
mov
mov
mov
lcall
sub
or
push
jae
mov
push
cmc
in
pop
mov
ljmp
xchg
xor
adc
loopne
imul
aam
pop
leave
movsb
pop
daa
ror
test
popf
frstor
mov
xchg
add
in
xor
add
out
cli
int3
stos
adc
and
xchg
pop
repz
insl
imul
mov
push
inc
jne
aas
out
lret
stos
ror
mov
inc
icebp
xor
inc
out
test
dec
hlt
add
lret
pop
jle
jmp
popa
or
call
ds
mov
aam
decl
mov
ja
push
jnp
pop
mov
push
out
fcmovnu
jle
xor
mov
icebp
jnp
inc
sub
ret
sahf
call
movsl
sub
jns
cmp
gs
out
mov
xor
jmp
fiaddl
subb
mov
lods
xor
aas
pop
hlt
cwtl
sbb
rcrl
jecxz
mov
icebp
pop
mov
outsl
sub
push
out
lret
or
ljmp
gs
mov
cwtl
push
sbb
push
movsb
or
mov
jge
ljmp
lods
aad
xor
fdivs
jecxz
xor
arpl
jle
lock
movsb
hlt
incl
test
push
lods
push
hlt
adc
aas
jns
ds
insl
adc
xchg
xchg
mov
movsb
fimuls
mov
popf
pop
jno
lock
stc
ficoms
orl
mov
cli
dec
call
nop
les
mov
clc
cmp
aaa
xchg
out
inc
hlt
mov
push
xchg
inc
cld
jb
push
adc
rorb
sub
int3
dec
jecxz
cmpl
mov
ss
inc
je
sbb
dec
cmpsl
adc
rol
pusha
pop
pop
call
xor
push
dec
scas
in
decl
push
aas
adc
std
and
cmpsb
jne
add
in
jne
mov
outsl
jmp
push
call
sub
js
scas
enter
jnp
sarb
call
shlb
or
xor
lock
pop
sbb
ljmp
add
sbb
xchg
cs
cli
mov
add
jg
sbb
out
cmpsl
mov
aas
mov
loope
or
and
imul
push
sbb
push
aaa
cli
or
cmp
cld
dec
jb
ror
mov
mov
jmp
push
cmp
inc
daa
mov
pop
mov
pop
in
jne
lcall
testb
push
xchg
iret
and
or
aas
sbbb
das
cld
scas
ret
nop
movsb
cmpsb
mov
mov
pop
aaa
sub
fcmovnb
or
in
cmp
xor
ljmp
sub
cmp
mov
inc
pop
push
jb
fdivl
sti
lcall
mov
dec
lock
cltd
int
lods
stc
mov
sbb
out
xchg
repz
lret
ss
pushl
test
icebp
pop
mov
xchg
sarb
sbb
test
mov
dec
imul
pop
fsubr
aaa
mov
into
inc
fadds
mov
inc
mov
lds
lods
sbb
push
loopne
stos
dec
mulb
push
mov
mov
mov
stos
lcall
mov
jbe
push
popf
mov
mov
decl
mov
xchg
push
sti
jl
mov
adc
lcall
or
xchg
roll
mov
outsl
inc
cwtl
xor
rolb
mov
test
loope
loopne
call
in
sbb
add
data16
mov
pop
mov
dec
jo
xchg
mov
fistpll
mov
cltd
aas
les
push
incl
int3
aaa
subl
or
push
sub
shl
jl
fisubs
inc
out
ficoml
rorb
sbb
pushl
mov
dec
xchg
scas
mov
inc
xchg
jns
or
cmpsl
sbb
ds
stos
jge
lcall
das
je
aad
and
scas
movsl
aam
jmp
xchg
mov
or
mov
jecxz
in
movsl
sub
clc
mov
push
push
push
or
pop
jg
dec
mov
shrl
xchg
jo
adc
sti
sub
movsl
push
inc
xchg
sahf
ljmp
push
test
push
test
push
add
inc
push
lea
scas
es
sti
in
fs
mov
insl
mov
pop
add
xor
fadd
jo
incl
out
add
jp
dec
jl
je
xchg
xor
rcrl
in
jne,pt
fs
decl
jmp
mov
jmp
mov
cmp
push
sub
rcrb
push
push
jg
dec
call
loope
int
loop
mov
call
sar
fwait
xchg
test
inc
jnp
jl
sbb
sub
jno
cmp
mov
call
mov
notl
das
insl
mov
popf
movsl
cmp
sbb
bound
inc
out
popf
xor
xlat
dec
clc
cmp
mov
mov
dec
ds
mov
cmpsb
mov
and
jg
jmp
xor
jmp
xchg
mov
inc
les
stc
insl
fdivr
fwait
mov
loop
lock
mov
add
jo
and
cs
ljmp
mov
cmpsb
push
rol
xchg
dec
inc
addr16
clc
dec
push
out
xchg
sahf
or
call
clc
lcall
hlt
inc
inc
dec
push
insb
outsl
test
cmp
clc
mov
dec
sub
loopne
jp
sub
dec
and
gs
cli
ljmp
cmpsb
or
les
std
movsb
test
pop
jecxz
push
dec
add
xchg
push
shll
adc
add
mov
icebp
pop
loopne
mov
mov
cmp
mov
sti
jmp
xor
mov
adc
fldenv
dec
in
test
push
xor
out
outsb
icebp
fcmovnu
hlt
mov
cmp
adc
fwait
iret
in
mov
mov
incl
jo
orb
mov
mov
out
xor
in
cmp
jnp
mov
addl
and
cmpsb
push
out
xchg
pop
cwtl
scas
adc
jmp
mov
and
add
inc
push
sarb
sbb
in
iret
icebp
mov
jecxz
out
fisubs
cli
adc
mov
mov
int
mov
inc
cld
jg
cmpsl
lret
inc
aas
rcll
aaa
xorb
std
call
arpl
pop
hlt
call
stos
es
cld
jp
in
mov
inc
addr16
jno
lock
add
cmc
jg,pn
enter
inc
fst
sbb
and
fstpt
xlat
pop
push
mov
stos
cltd
xchg
stos
aaa
mov
ja
aam
cmp
scas
cmp
decl
hlt
in
fs
sub
inc
jge
push
movsb
sar
pushl
mov
push
into
hlt
push
ret
sbb
fwait
icebp
stos
jg
mov
pop
js
cmp
jle
jmp
aam
call
movsl
mov
outsb
jge
push
mov
hlt
ret
psllw
pop
inc
outsl
jmp
mov
xor
adc
jb
jmp
inc
cmp
fld
jmp
test
mov
xchg
cmp
xorb
pusha
lcall
mov
aam
push
decl
xchg
fwait
cltd
cmp
test
arpl
ljmp
je
and
jbe
jp
mov
xor
and
xorl
cld
dec
nop
into
mov
inc
rsm
out
jne
clc
push
pop
mov
xchg
lcall
pop
xchg
test
push
xor
pop
push
hlt
aam
mov
scas
pop
pushl
aaa
dec
out
cmc
jae
push
or
sbb
mov
sub
test
dec
lcall
mov
dec
es
cmc
sub
cmp
push
dec
lret
mov
data16
ljmp
and
mov
imul
mov
jnp
aaa
cli
decl
jo
or
call
imul
xor
mov
icebp
dec
fldcw
dec
push
pop
dec
cmp
mov
push
sar
jne
and
mov
pop
rcrb
mov
dec
pop
pop
xlat
repnz
std
pop
push
das
xchg
test
das
pop
loopne
pushl
in
mov
mov
jl
push
movsl
pop
nop
lret
inc
jno
xor
push
mov
and
ds
jg
in
ljmp
decl
jbe
dec
hlt
mov
inc
mov
mov
add
ret
adc
mov
or
xchg
or
jmp
cmc
loop
adc
inc
sub
rcrb
xorb
mov
js
pop
push
adc
aas
and
dec
and
enter
outsb
cltd
std
lea
adc
icebp
push
testl
or
mov
leave
int3
or
ficomps
loope
mov
xor
jmp
enter
xor
jnp
in
mov
jmp
fnsave
and
jnp
add
das
dec
xchg
arpl
lcall
incl
push
xor
add
popf
call
jae
data16
or
jl
gs
adc
mov
and
sub
ret
ja
pusha
bnd
lcall
jmp
xchg
push
mov
jmp
xor
cmp
xchg
mov
call
jo
test
out
mov
dec
add
or
sub
mov
mov
cld
fsubs
pop
sub
inc
mov
xlat
fstl
decl
or
push
out
mov
mov
mov
jae
ljmp
cmp
adcl
mov
negl
xchg
ja
mov
icebp
sbb
xchg
das
sti
jg
jg
insl
mov
pop
mov
daa
call
xchg
jge
mov
cmpb
push
inc
lret
std
dec
pop
cmp
incl
xor
sub
lret
mov
mov
push
popa
sub
loopne
ffreep
fmull
rclb
jnp
jle
ret
and
cmc
add
incl
push
jecxz
mov
jbe
std
in
arpl
mov
jg
sub
sahf
dec
int3
in
jbe
mov
and
les
dec
decl
mov
jle
lea
lock
outsl
dec
dec
fnstsw
stc
sub
and
push
dec
adc
mov
inc
xchg
or
pop
into
sbb
cwtl
inc
aam
jae
decl
sbb
add
jle
aaa
push
cmp
dec
mov
decl
mov
push
es
dec
jecxz
jmp
outsl
cld
pop
mov
push
shll
inc
fldcw
fldcw
in
lcall
lea
in
xchg
inc
pop
sub
jno
jnp
sub
lock
movsb
lahf
sbb
lcall
loopne
cmpsl
push
jg
js
aaa
ljmp
or
lcall
cld
pusha
xchg
data16
mov
sbb
int
mov
clc
xchg
int
inc
cmp
mov
and
push
call
addr16
add
inc
lock
aaa
inc
lcall
add
lcall
pop
dec
imul
fs
outsl
jg
add
clc
sbb
xlat
pop
or
rclb
call
fstpl
scas
pcmpgtw
adc
popa
mov
aas
and
mov
bound
lods
call
add
test
cmp
out
push
xchg
movsb
ds
cli
or
imul
xor
out
push
adc
movsl
mov
aad
cmp
repz
sbb
insl
push
push
pop
jo
jno
sub
pushf
std
movsl
pop
call
push
mov
and
lock
or
insb
jbe
mov
xor
cli
sub
adc
outsb
cmp
into
jno
pop
jp
fists
std
xchg
cli
jno
in
or
jge
hlt
xchg
mov
cld
decl
xchg
jae
pushf
cmp
daa
xchg
clc
dec
jnp
lods
in
decl
adc
push
add
in
cmp
in
cwtl
fwait
daa
aas
aaa
cmc
push
icebp
xor
inc
inc
mov
sub
pop
icebp
mov
inc
das
mov
lahf
sbb
popf
ss
clc
cmp
inc
int3
inc
cld
out
outsl
mov
cltd
in
sahf
sub
adcb
push
push
pop
lret
stos
loope
int
dec
cmp
call
aas
dec
scas
repz
push
mov
jne
sti
rcr
inc
jge
or
lcall
push
jecxz
lds
xchg
mov
fdiv
jne
call
push
bound
mov
cmp
sub
rcrl
cmpsl
add
lcall
cmc
xlat
jle
inc
push
aam
movsb
fldl
cmp
add
push
push
jo
cmp
out
pop
shlb
testb
xor
push
fildl
dec
addr16
test
jbe
into
jo
ljmp
ljmp
adc
aaa
push
stos
xchg
stc
inc
loop
xchg
or
mov
dec
cmpb
mov
test
bound
dec
sbb
in
fsubr
dec
imul
push
mov
add
inc
fistpll
sbbb
cmp
das
cmc
xchg
repz
jp
ds
jae
mov
dec
mov
dec
lds
clc
lcall
adc
loop
fldcw
int
adc
sbb
push
pop
pop
aaa
jge
repz
out
mov
fiaddl
adc
sub
jbe
scas
jno
mov
leave
in
jno
jecxz
mov
shrl
mov
into
mov
subb
ds
mov
jno
cwtl
pop
es
sub
jg
jne
outsl
ljmp
out
fdivrl
push
ljmp
inc
lcall
jbe
inc
jnp
jns
mov
enter
mov
outsl
pop
pushf
std
gs
mov
fnstcw
lahf
out
inc
jecxz
jle
lods
mov
pop
pop
nop
ds
decl
cmpsb
popa
loop
orb
out
movsb
jne
sub
dec
movsl
mov
xlat
adc
adc
dec
cld
ljmp
push
adc
jp
filds
loop
or
mov
incl
test
cmp
jns
lahf
repnz
or
jle
shrb
sbb
jns
pushl
cmc
ljmp
hlt
test
cwtl
in
cmp
adc
repnz
movsb
xor
aaa
xchg
pushl
in
int3
lods
mov
adcl
outsl
cld
incl
inc
lods
adc
int3
call
jp
dec
mov
jno
decl
test
add
jbe
sahf
mov
fdivrs
mov
ljmp
mov
and
movsb
mov
or
aam
xchg
mov
push
shr
in
les
adcb
frstor
pop
int3
cli
subl
mov
imul
aad
sbb
and
sbb
mov
stos
shlb
inc
cmp
jmp
inc
rcl
cmc
sbb
jb
or
pop
cli
cmp
dec
fs
cmp
mov
cmp
loopne
ds
shl
adcl
and
dec
test
lcall
adc
addr16
incl
jmp
fiadds
addr16
or
andb
jg
inc
jae
jp
mov
add
or
and
stos
mov
add
insb
dec
cmpsb
lds
sbb
pop
lds
hlt
sub
stos
push
or
ljmp
std
or
fstl
clc
jge
push
loopne
or
cmp
ja
mov
ljmp
fistpll
lds
sub
insb
mov
dec
addr16
jmp
clc
jmp
ret
enter
jne
or
sbb
lret
cmp
cld
pop
cli
fistpll
jecxz
push
out
dec
cmp
in
shl
mov
leave
adc
jge
decl
pop
orb
ds
test
jns
cli
jbe
jge
push
incl
pop
out
loopne
loopne
and
pop
sbb
pushl
bound
hlt
ljmp
push
mov
mov
ds
adc
addr16
lcall
fdiv
jo
out
mov
cwtl
leave
fwait
xchg
test
or
jb
jmp
pop
leave
ret
push
stos
cs
xchg
aam
test
xorb
cmp
sub
hlt
dec
cmpsb
lock
dec
xor
repz
adc
cmp
dec
lret
sti
adc
add
mov
push
xchg
jno
mov
jmp
dec
push
js
and
xor
call
mov
aad
imul
ds
lea
and
push
in
adc
xor
or
popf
fsub
cmp
bswap
loopne
pop
clc
decl
or
ret
mov
or
mov
jecxz
ljmp
pop
out
dec
jns
outsb
out
sti
cmp
insl
gs
iret
mov
fistpll
je
imul
fists
jl
cmc
ljmp
xchg
popa
popf
cwtl
sub
aaa
call
in
push
test
mov
xor
jbe
loopne
sbb
inc
out
mov
or
mov
pushl
aaa
pop
dec
and
inc
push
sbb
jmp
loop
out
cmpsl
add
incl
cmp
aaa
fidivl
loopne
fistps
movsb
ljmp
sbb
push
decl
std
mov
repz
xlat
xchg
dec
pop
lcall
jg
mov
popl
movsl
mov
sbb
xor
loop
into
aaa
push
xor
ljmp
gs
cwtl
adc
inc
lds
mov
and
inc
mov
rcll
xchg
int3
imul
jmp
sub
xor
enter
mov
adc
insb
push
cmp
sbb
jg
mov
out
xchg
jmp
idivl
cmp
ficoms
loopne
dec
xchg
das
sbb
xchg
and
outsb
lds
push
sub
and
aaa
pop
das
cmp
pop
cmpsb
mov
jo
adc
cld
and
incl
pop
shlb
push
int
ljmp
mov
test
rolb
rolb
loopne
call
mov
mov
out
and
lcall
add
andl
add
cmpsb
into
mov
xchg
add
test
mov
dec
mov
or
cltd
adcb
cwtl
lcall
incl
mov
add
addr16
push
incl
pop
mov
out
push
aaa
out
xchg
mov
jnp
dec
ja
or
mov
jge
ja
pusha
sbb
in
dec
cld
or
cmpl
test
xchg
movl
xor
mov
repnz
sub
insl
push
cli
push
adc
mov
lea
rcl
in
push
push
aam
sbb
stc
push
cmpsb
dec
or
ljmp
xchg
inc
cmp
out
mov
cli
fimull
or
sarb
dec
mov
sar
fidivrs
and
jle
les
sub
add
mov
int3
sti
xchg
sub
push
xchg
pop
xchg
xchg
in
jne
stos
fcomps
cltd
loopne
dec
cmp
jle
mov
std
push
pop
jne
popf
clc
mov
in
stc
addb
dec
clc
inc
sahf
fistl
icebp
in
dec
push
cwtl
xlat
pop
jnp
mov
mov
icebp
daa
jne
dec
stos
je
test
das
std
jg
push
ljmp
fwait
mov
lret
add
ljmp
pop
sub
push
imul
lahf
dec
das
mov
xchg
shll
jg
mov
jg
push
ja
xor
sahf
pop
nop
rorl
dec
jns
test
lock
ljmp
int
sar
daa
sub
clc
clc
int
cmp
xor
mov
ss
inc
add
jns
push
adc
sbb
lods
inc
popa
aaa
push
pop
popa
rclb
pop
jp
sbb
xor
sbb
fstps
mov
test
pop
push
sbbl
inc
loopne
sahf
mov
lcall
fs
add
nop
mov
pop
mov
nop
lods
hlt
leave
push
or
aas
inc
aad
subl
push
pop
cmp
ret
pushf
and
push
cmp
imul
xor
aaa
adc
arpl
call
js
xchg
inc
lods
ljmp
hlt
pop
ds
sub
js
cmpsl
mov
jb
xchg
push
adc
sar
push
add
in
push
pushf
js
outsb
adc
js
jmp
jp
push
mov
lods
or
xor
xchg
les
xlat
loopne
je
mov
dec
leave
cmp
arpl
jbe
rorb
fs
cmp
outsl
cmc
call
jmp
scas
clc
jne
adc
cmp
lcall
jmp
in
dec
mov
cmc
cmpsl
pusha
sti
in
cmp
pop
sub
gs
mov
ss
lock
arpl
js
mov
fdivrs
orl
lods
jmp
jl
inc
sahf
inc
imul
xor
xchg
fucomip
outsl
jecxz
stos
out
mov
sbb
and
ds
lcall
or
movsb
cmpsl
int
push
or
inc
pop
mov
jne
sbb
cmp
rorb
jbe
jmp
fmul
or
bound
and
mov
jecxz
iret
and
outsb
movb
decl
pop
pop
sbb
add
dec
lock
jmp
xchg
incl
pop
or
imul
lods
notb
dec
xchg
jmp
jmp
in
xor
or
dec
dec
out
xor
xor
je
sbb
insl
imulb
mov
cltd
jp
pop
shr
imul
mov
fucomip
inc
mov
cmpsb
inc
add
sbb
xchg
push
pop
mov
incl
fnstsw
call
fildll
insl
aaa
xchg
mov
shll
aad
lods
sub
cld
push
sti
rorl
jl
test
xor
xchg
jmp
mov
in
sub
clc
mov
rclb
mov
stos
mov
or
pushl
mov
ja
imul
push
and
mov
popa
hlt
adc
pop
adc
cmc
mov
xchg
jne
mov
mov
es
inc
sub
pushl
push
data16
bnd
in
adc
loop
push
and
frstor
pop
hlt
inc
lcall
test
sti
jmp
sahf
inc
scas
sbb
push
jg
and
mov
mov
mulb
xor
leave
aad
stc
add
inc
dec
adc
dec
xor
incl
sbb
cltd
and
int
push
ds
pop
add
subl
sub
xchg
stos
mov
arpl
hlt
add
or
decl
push
lods
pop
sbb
shr
repnz
mov
mov
test
loopne
fwait
adc
je
fidivs
mov
cmp
mov
xchg
imul
xchg
cwtl
and
mov
jbe
cwtl
mov
scas
cmpsb
stos
mov
inc
imul
mov
push
xor
icebp
rcrb
push
mov
aad
mov
loope
push
fbld
xor
and
sub
scas
mov
lahf
mov
pop
enter
clc
jmp
lcall
jnp
add
stos
call
test
aam
push
xchg
dec
xor
sub
aad
mov
jg
aas
mov
movsb
push
or
orl
movsb
pop
ret
arpl
movsl
lock
jle
jg
arpl
shrl
lret
mov
lock
pushl
insb
cld
int3
dec
cmp
rcrb
mov
push
jbe
ret
aas
mov
jmp
adc
xchg
mov
mov
xchg
sti
jnp
in
lcall
daa
pop
adc
sub
add
dec
rcr
dec
insl
das
call
jmp
stos
sub
mov
enter
mov
js
inc
outsl
jne
inc
pop
mov
pushl
dec
jl
jle
adc
scas
stos
and
in
pop
aam
call
or
and
push
cmp
lock
adc
mov
rcrb
sbb
xlat
add
or
dec
bound
add
test
lcall
je
nop
hlt
mov
and
mov
iret
aaa
sub
xchg
push
ljmp
mov
sti
mov
mov
mov
mov
add
mov
cmc
incl
rcll
and
icebp
call
jae
mov
push
dec
loop
sub
cs
pushf
jle
mov
xchg
sbb
pusha
cmp
std
pushl
idivl
fucomi
mov
cli
jg
xchg
cli
jmp
sahf
stos
dec
push
mov
push
mov
sbb
ret
jg
inc
cmp
das
data16
mov
in
fs
and
call
lea
xchg
fstps
add
jb
sbb
cmpsb
sub
and
inc
jns
xor
xor
loopne
add
decl
sarb
xchg
xchg
iret
cmpsb
insb
call
data16
decl
jnp
flds
in
and
js
fistl
roll
ljmp
enter
jbe
popf
loop
lret
inc
mov
faddl
mov
add
push
test
cmpsl
mov
pop
lcall
add
jns
fisttpll
aaa
sarb
jle
or
xor
enter
adc
stos
jnp
sub
add
fistps
pop
mull
rcrb
in
adc
arpl
std
jg
call
xchg
in
insb
or
loope
dec
mov
into
jae
enter
xchg
jbe
mov
push
fidivrl
es
push
sbb
and
decb
xchg
inc
lods
loope
in
pop
imul
std
icebp
xor
int3
out
in
ljmp
shrb
push
cltd
inc
adc
jb
or
dec
pop
popa
mov
xor
decl
xchg
sarb
dec
repz
movsl
sbb
popf
cmp
cmp
jae
sarb
add
enter
lods
out
and
out
xchg
enter
ljmp
pusha
popa
push
aad
push
lods
dec
mov
or
xchg
cltd
inc
mov
das
xor
insb
inc
mov
pop
shrb
push
sub
and
mov
loop
jp
push
mov
aas
pop
test
sbb
pop
imulb
and
mov
decl
das
fidivrs
push
imul
jne
xor
or
add
push
mov
pop
inc
cmp
in
sbb
mov
pop
pop
mov
nop
pop
dec
pop
mov
cli
notb
ljmp
xlat
push
cmp
and
hlt
ljmp
jecxz
sbb
pop
repz
mov
jl
mov
ljmp
push
mov
mov
inc
mov
cmp
outsl
jb
test
lods
sbb
jg
mov
inc
stos
notl
inc
mov
aam
inc
lcall
mov
outsl
adc
int3
sub
stos
fistpl
sbb
inc
and
jmp
jp
iret
dec
scas
or
mov
dec
xor
rcrb
iret
scas
xor
icebp
cmc
iret
dec
mov
xchg
fs
pop
icebp
cmp
jb
daa
and
inc
push
push
sbb
repnz
jge
test
std
bound
pop
mov
mov
xchg
das
fadd
into
aad
fs
dec
dec
sbb
cmpsb
adc
call
daa
test
sub
rcrl
imul
icebp
jo
xchg
test
mov
pop
fdivr
call
cli
jg
jg
test
in
cmp
inc
cld
leave
sub
sar
mov
mov
adc
out
aas
popa
jmp
xor
sub
jg
mov
pop
sub
cwtl
arpl
sbbl
fidivrl
cmc
and
xchg
mov
cwtl
out
dec
adc
repnz
push
cld
xor
jmp
loope
mov
mov
les
mov
shlb
movsb
dec
out
or
incl
cmpsb
jl
lret
loop
cmpsb
mov
stos
stc
xchg
jecxz
decl
das
aaa
pop
insl
pop
cmp
cld
mov
jo
call
cwtl
inc
movsl
scas
cmp
jg
call
lods
cmpsl
dec
cli
mov
iret
cwtl
mov
or
lcall
mov
jg
insb
mov
push
sbb
xor
push
jnp
jb
hlt
sar
jg
lcall
data16
out
jno
sub
imul
stc
lea
sar
mov
stc
inc
jp
pop
push
dec
ds
push
imul
ss
aam
jb
inc
mov
push
fnsave
push
fldenv
popf
sbb
cmp
sahf
and
xor
push
test
cmpsb
mov
call
jne
xchg
dec
cltd
aam
mov
incl
lret
push
fdivl
xchg
cmp
pop
stos
addr16
pop
lcall
cld
incl
jge
or
add
pop
or
aam
dec
repnz
xor
sub
cmpl
adc
fidivrl
scas
pop
repz
xor
call
cmc
shr
mov
and
jle
cmpsl
or
xchg
and
and
xor
push
mov
jb
inc
inc
jo
negl
arpl
jle
xchg
call
mov
push
stos
lcall
mov
xchg
das
roll
mov
outsb
outsb
pop
shrl
in
rclb
enter
add
lea
pushf
lods
fidivrs
push
lods
mov
mov
hlt
jg
lcall
aad
mov
aaa
mov
xchg
mov
and
add
xlat
xchg
pop
pop
push
lcall
dec
imul
sti
push
fidivrs
push
lret
mov
js
loop
jmp
fcoms
pop
mov
inc
add
ljmp
push
push
pop
lfence
cmp
cs
test
arpl
xor
jae
and
dec
dec
call
mov
cmp
pop
jmp
rclb
and
sbb
mov
call
cli
jl
add
push
daa
or
xchg
sbb
or
paddd
sub
jnp
mov
lea
xor
imulb
stc
dec
loope
or
xchg
out
in
mov
dec
mov
lock
or
push
jmp
and
es
fisubl
rolb
mov
aaa
adc
add
jmp
negb
fwait
rolb
stos
ret
mov
xor
inc
xor
sub
jg
movsl
jmp
pop
xchg
cmp
addl
jmp
std
dec
fsubr
scas
dec
pop
xlat
jae
insl
push
test
loope
jnp
decl
jp
clc
sahf
jnp
mov
sti
repz
jae
mov
adc
xorl
inc
push
pop
sub
fmull
mov
es
pop
jno
dec
add
xchg
in
call
mov
hlt
jo
mov
dec
stos
pusha
cmpsl
xor
lock
pushl
pop
aaa
jecxz
add
adc
add
cli
ljmp
xchg
out
pop
cmp
jl
and
mov
imul
lcall
and
push
negb
cmp
mov
negl
fisttpll
fcomps
dec
out
cmpsl
mov
sub
out
test
push
pushl
xor
repz
mov
mov
inc
sti
fnstsw
lcall
jmp
or
jmp
aam
jl
incl
xchg
and
inc
xlat
push
add
mov
nop
pop
adc
sub
repz
decl
push
repnz
rorl
pop
lret
cmp
jecxz
call
mov
nop
or
stos
sbb
mov
dec
jnp
sahf
inc
in
push
jnp
push
xchg
dec
sub
pushl
lock
add
cmovbe
sbb
xchg
push
xchg
pop
inc
jae
int
ljmp
pop
fwait
testl
cwtl
or
stc
xlat
enter
in
test
call
xor
mov
out
cwtl
push
movsl
or
sbb
jmp
das
push
inc
inc
mov
outsb
sbb
and
stos
dec
mov
lret
push
pop
or
mov
mov
hlt
fsts
sbb
lea
aam
movsl
mov
mov
dec
lock
lock
jmp
or
repnz
data16
pop
addr16
addr16
data16
shl
fnstsw
push
mov
xchg
jno
stos
jne
mov
lea
hlt
adc
mov
clc
sub
ds
adc
movsl
adc
push
cmpb
pop
pop
cmp
fstpl
xchg
push
shlb
dec
sbb
cmp
mov
out
jmp
xchg
clc
inc
mov
xchg
xchg
ljmp
xor
add
jp
test
mov
es
aaa
and
pop
xchg
adc
or
sbb
imulb
mov
sub
divb
cmp
sub
dec
adc
fiaddl
mov
mov
jg
jg
pushf
lods
ret
adc
popf
xchg
and
ljmp
stos
addr16
cmovae
sbb
cmp
xor
lcall
ret
jbe
repz
xor
fs
scas
lods
lods
lcall
adc
popf
xchg
jns
icebp
decl
in
aaa
mov
loopne
mov
or
add
insb
xchg
pop
mov
jg
sbb
jl
lds
fsubrp
mov
not
push
pusha
dec
pop
lcall
and
shrb
ljmp
and
ficompl
mov
decl
je
lcall
adc
or
or
shrl
shl
mov
pop
push
and
or
mov
fiaddl
mov
jbe
movsl
mov
pop
lods
call
pushl
mov
out
push
mov
mov
loopne
lock
iret
mov
add
lods
pop
pushl
jbe
gs
pop
subl
es
xor
int3
pushf
cmp
call
lock
mov
cmp
xorb
mov
mov
clc
inc
ret
clc
adc
imul
xor
jns
cltd
stos
mov
mov
or
hlt
ljmp
sub
mov
ret
jb
jg
lcall
sbb
jg
enter
movl
clc
incl
sbb
jbe
jnp
sub
mov
pop
bnd
push
clc
outsl
icebp
aaa
mov
inc
push
es
mov
incl
sub
pushf
mov
call
push
jno
shll
gs
test
mov
mov
push
mov
movsb
cmp
jge
mov
ret
cld
fs
mov
adc
testb
popa
insb
loop
jnp
imul
inc
popf
and
push
jmp
cli
jg
stc
fs
mov
cmp
pop
ss
lcall
ja
cmp
pop
push
mov
jno
sbb
iret
out
add
incl
lds
mov
pop
add
and
adc
loope
fnstcw
mov
icebp
jmp
out
cmp
mov
inc
dec
fcmovnu
lods
push
pushf
loopne
sub
pop
mov
sbb
mov
dec
movsl
movsb
lock
push
out
cltd
push
insb
xchg
add
jge
add
adc
xchg
adcb
imul
add
loope
repz
sbb
fimuls
mov
add
xchg
dec
xchg
test
pop
call
mov
mov
fcmovnu
lods
es
cmp
incl
dec
test
dec
mov
mov
into
nop
jnp
xlat
sahf
into
push
sub
incl
sub
mov
cmp
lcall
push
add
mov
pop
pushf
inc
lods
mov
ss
sub
push
fidivrs
stos
add
pop
jg
call
sbb
scas
cmp
adc
pinsrw
lcall
imul
int
adc
ja
mov
mov
addr16
movsb
add
pop
decl
xchg
push
cld
mov
mov
pop
push
push
jmp
cmp
xchg
xor
xor
sub
ss
mov
loopne
jne
xchg
sub
jle
mov
pop
std
das
ljmp
adc
addr16
ror
fs
fs
mov
jmp
xchg
and
cmpsl
inc
sub
cld
aas
or
gs
rep
cld
shlb
lahf
xchg
jno
xor
inc
adc
cmp
test
mov
out
popf
and
call
pop
pop
xchg
mov
add
imul
lods
cmp
dec
rcll
mov
subl
mov
into
mov
aaa
or
and
out
clc
test
dec
call
mov
push
sbb
cltd
test
and
mov
fwait
test
movsl
add
xor
xor
cmp
pop
cltd
sbb
push
sbb
lock
movsb
fucomp
mov
xchg
outsb
jmp
outsl
push
add
popa
call
int
mov
jp
popa
jmp
push
inc
mov
push
call
repnz
mov
loopne
call
stc
xchg
xor
mov
orl
loop
fstpt
push
pop
xor
repnz
clc
mov
scas
jnp
adc
jl
and
jne
or
out
pop
and
mov
inc
push
pop
movsb
and
mov
addl
and
sarl
mov
nop
sub
adc
cmc
aad
out
fisttpll
loope
loopne
or
subl
dec
xor
jns
jmp
aam
and
push
mov
pop
xchg
mov
in
fstp
jmp
pop
clc
ret
add
fucomip
enter
and
fnstenv
mov
ds
out
call
sti
push
lahf
or
repz
pop
loope
xor
mov
enter
pop
ds
mov
push
in
cmp
jmp
push
sbb
add
adc
sub
lahf
rcr
dec
test
mov
scas
xchg
sub
ret
xchg
idivl
xor
call
jae
repnz
add
cmp
mov
call
sbb
add
dec
mov
fstp
cltd
leave
push
or
mov
sahf
mov
dec
outsl
add
push
daa
fwait
inc
call
lcall
cli
aad
scas
mov
out
cmp
jb
scas
jbe
dec
inc
jb
jns
push
shlb
sbb
lcall
inc
iret
arpl
adc
inc
fildll
mov
pushl
jno
jbe
sub
adc
mov
push
inc
cli
in
sub
leave
fwait
movsb
push
xchg
push
add
jmp
inc
fwait
sub
into
sbb
pushf
shrl
sub
fistpll
jnp
loopne
jno
and
xchg
dec
xorb
std
pop
decb
in
das
jne,pt
push
aad
push
cmp
jmp
mov
pop
aas
push
insl
sbb
test
test
or
arpl
sub
pop
std
dec
shrl
adc
adc
int
popa
push
cmpsb
in
lcall
insb
dec
lock
sub
pand
xor
cmp
sub
das
hlt
and
mov
cmpsl
clc
lcall
pop
out
movsl
xor
popf
nop
and
inc
adc
or
lret
int
sahf
mov
scas
ja
mov
movb
out
inc
pop
cltd
outsl
lahf
bound
sbb
decl
cmc
inc
je
dec
dec
repz
insb
nop
cltd
mov
leave
sti
jmp
or
outsb
fwait
outsb
pshufd
aaa
bound
mov
repnz
ljmp
pop
xchg
xchg
rcrb
add
cmp
and
lcall
inc
imulb
ja
sub
push
xchg
push
in
insl
xchg
dec
cmp
in
push
xchg
jmp
bound
push
mov
mov
imul
aaa
fistps
sub
lds
pop
push
pop
je
mov
lds
arpl
push
sub
incl
iret
inc
out
xchg
pop
or
push
dec
repnz
cwtl
mov
jecxz
xor
pushl
cli
xor
mov
pop
sbb
pop
fidivs
daa
js
or
mov
ljmp
fsubs
mov
mov
xchg
cmpsl
jbe
setg
icebp
push
in
push
push
inc
test
fnstcw
push
jg
cmp
fcompl
lea
adc
movsb
scas
sahf
jge,pt
lods
insb
dec
and
or
pushl
mov
sbb
movsb
insl
cmpsb
push
mov
add
push
mov
add
outsl
pop
ljmp
mov
ljmp
stos
lret
fsubrp
icebp
call
cmpsl
rorb
out
repz
jg
pop
out
sbb
outsl
and
mov
mov
jle
roll
cmp
fwait
out
out
sub
inc
int
shlb
cs
push
pop
jno
pop
adcl
mov
jle
mov
imul
outsl
push
jae
ljmp
ret
leave
mov
jg
fsin
pop
aaa
mulb
dec
cmp
xchg
adc
adc
sub
aad
call
fxtract
cmp
xchg
push
inc
iret
loope
inc
or
mov
hlt
incl
mulb
inc
data16
cltd
pop
push
test
imul
jl
rep
and
test
pop
dec
fcomip
fcmovbe
cwtl
dec
idivl
lds
or
fildll
mov
pop
jg
sbb
push
mov
cmp
ljmp
repz
sub
ljmp
mov
stos
dec
lds
cmp
xor
push
mov
cld
and
jg
lock
cmp
cmp
pop
pop
lds
jne
xor
sub
inc
int
xor
pop
jecxz
pop
clc
clc
in
mov
hlt
ljmp
jp
out
stos
dec
leave
inc
dec
inc
hlt
add
mov
push
test
decl
outsl
int
sbb
and
cmp
ljmp
je
sbb
cmpsb
pop
arpl
ljmp
pop
loopne
lret
inc
and
sub
in
adc
aam
push
jmp
clc
inc
test
or
cmpsb
jnp
sbb
loop
test
outsl
cmc
pop
sub
int3
inc
xchg
inc
pop
jbe
sub
dec
mov
mov
dec
cli
mov
loope
xchg
lods
mov
stc
jno
inc
rcrl
dec
mov
fldcw
leave
into
lret
cmc
mov
mov
std
mov
push
inc
hlt
in
subb
add
jp
lcall
or
icebp
fmuls
loope
add
dec
lret
mov
and
pop
mov
cwtl
or
gs
mov
jge
lea
push
stc
lods
mov
lock
shll
pop
lret
add
dec
addr16
insb
xor
dec
faddp
add
aad
movsl
pop
sub
pop
mov
jl
mov
sub
inc
cwtl
es
jg
fsub
mov
jbe
subl
pop
lahf
xor
icebp
in
fdivr
mov
dec
sahf
test
mov
inc
in
cmova
or
inc
arpl
xlat
in
aad
in
push
cmp
sahf
mov
mov
push
mov
mov
add
rorb
lcall
stos
push
mov
add
cmp
jmp
pop
sbb
xchg
mov
test
cmp
or
ffreep
std
movsl
cmp
jno
pop
cmp
aam
adc
mov
rolb
jns
incl
repnz
and
cmp
push
push
or
mov
push
or
and
cmp
ljmp
decl
in
push
mov
adc
les
fsubr
cs
mov
rolb
hlt
dec
jp
adc
mov
inc
mov
and
pushf
xchg
dec
add
aas
cmc
and
dec
mov
dec
decl
push
shll
iret
cmpsb
fsubs
dec
cld
cmp
pop
scas
popa
push
mov
jo
test
pushl
out
cmpsb
lret
ljmp
jae
push
in
ja
scas
adc
mov
cwtl
fiaddl
popa
jbe
pusha
ljmp
aas
pop
adcb
push
xchg
fs
sahf
out
fucomip
push
pop
dec
mov
adc
mov
js
sub
mov
lret
in
in
mov
into
cmp
call
stc
loope
pop
and
and
lret
jle
sbb
pop
ficomps
mov
jp
rcpps
js
in
call
cli
mov
jg
mov
ja
add
mov
pop
pusha
out
repz
sub
adc
enter
adc
cmp
adc
loopne
push
enter
lcall
jg
test
mov
in
pop
push
in
xlat
sti
pop
test
mov
loop
sub
cmp
and
in
jecxz
push
push
loopne
sbb
pop
test
adc
notl
mov
loopne
lcall
movsb
pop
inc
jno
mov
aam
adc
pop
xchg
lods
mov
adc
fbld
dec
bound
xor
mov
cld
jne
fnstsw
mov
imul
xor
test
mov
adc
incb
out
jp
cmpl
int3
xchg
andb
cltd
call
pop
aaa
xor
xchg
sbb
out
stc
divl
push
fwait
add
inc
cltd
cmc
adc
sbb
xchg
cmp
pushl
mov
cltd
push
sbb
popf
mov
into
loope
cmp
sahf
sub
mov
pop
xchg
and
add
call
inc
insb
aam
stos
int3
inc
leave
push
aas
addr16
fnstenv
push
push
or
incl
scas
cmc
cmp
dec
push
jne
movsb
or
xchg
ss
fbstp
jae
sbb
ret
cs
dec
std
ljmp
hlt
push
jmp
cmpsl
fisubs
adc
dec
inc
jg
daa
push
clc
mov
pop
sub
cwtl
pushf
out
out
pop
jg
aam
jecxz
or
add
imul
sbbb
lds
adc
data16
jecxz
lcall
fcos
add
xor
inc
nop
test
cmp
or
ret
repnz
fsubl
add
ds
jmp
lcall
mov
mov
loopne
idivb
int3
rcrl
js
mov
int3
loop
test
sar
mov
es
lcall
insb
leave
aam
loope
sub
xchg
jg
incl
je
and
inc
or
cwtl
jp
enter
sti
es
jg
adc
and
push
out
xlat
add
push
and
sbb
lcall
shl
mov
pop
mov
adc
xchg
cltd
lods
or
int
sar
filds
into
mov
push
mov
hlt
pop
lea
mov
pushf
aas
push
xor
out
dec
lcall
std
lcall
imul
pop
dec
mov
pushf
push
jl
stos
mov
js
rolb
push
incl
test
sub
mov
stos
xor
lret
pushf
mov
xchg
jns
mov
dec
sbb
lock
xorl
loope
call
push
mov
jns
jecxz
loop
shll
adc
notb
decl
out
xchg
and
xchg
push
jno
cmpsl
test
stos
arpl
in
add
jae
icebp
call
sarl
subb
xchg
insl
stos
nop
mov
call
mov
fisubrs
pushf
mov
mov
cltd
jb
or
lods
iret
aam
xor
call
cli
popf
add
mov
sub
repnz
fimuls
hlt
lahf
xchg
loopne
out
fnstsw
ljmp
mov
xchg
jno
rolb
nop
je
or
cld
js
pop
das
test
mov
mov
push
call
fldt
cld
cmpsl
std
andl
xor
popf
icebp
cwtl
shll
idivl
les
outsb
aam
push
xchg
outsl
std
call
in
test
pop
out
popa
nop
sub
andl
jg
mov
add
lods
shl
divb
out
jecxz
mov
pop
jmp
mov
rcrb
xor
das
aas
arpl
mov
lock
xchg
push
adc
adc
pushl
inc
mov
int
and
jl
shrl
mov
push
sbb
sbb
movsl
cmp
mov
pop
rolb
or
inc
lods
jg
mov
mov
fwait
jecxz
sub
or
mov
mov
movsl
lods
xchg
pop
arpl
or
rcl
xor
and
ljmp
sti
adcb
lcall
loope
stos
jb
xchg
es
loop
mov
push
and
and
push
xor
out
gs
and
mov
adc
call
cmp
cmp
cs
add
jl
sub
imul
dec
cmp
in
setle
xchg
daa
dec
inc
out
fsubr
push
mov
inc
jg
decl
adc
fsub
sub
mov
mov
mov
jmp
inc
add
xor
cmp
cli
in
imul
jmp
stos
lret
sub
in
ljmp
rorw
icebp
or
rclb
xchg
cmp
ljmp
push
and
cld
jnp
cmp
cmpsl
mov
movsb
xor
in
mov
jbe
mov
mov
scas
lds
mov
adc
incl
sbb
loopne
scas
pop
sbb
shll
inc
pushl
pop
pop
jp
lret
xlat
jle
mov
sub
vunpcklpd
mov
rorl
stos
xchg
ret
lcall
lahf
imul
cmpsl
push
ret
mov
movsl
outsl
or
push
inc
mov
cltd
adc
cmc
divb
xlat
arpl
push
pushl
lret
enter
adc
dec
mov
enter
insb
add
add
mov
jg
jle
adc
cli
dec
lock
mov
imul
inc
inc
lcall
std
lcall
pop
leave
pop
stos
scas
pushf
movsl
mov
wbinvd
cmp
sbb
das
mov
daa
jae
outsl
push
mov
xor
lret
add
dec
aaa
clc
jg
xchg
leave
mov
movsb
jae
jg
fisttps
sub
idiv
jns
sarb
leave
call
shrb
arpl
aas
imul
out
mov
jbe
adc
and
cltd
loope
gs
add
nop
push
jne
lods
ljmp
push
ljmp
fimuls
fwait
jbe
push
orb
pushl
clc
flds
dec
xchg
call
xor
push
ja
loope
call
call
cli
fcmovbe
jae
dec
std
xchg
stos
inc
fistpl
sub
pusha
mov
or
pusha
ljmp
out
cmc
push
add
mov
stc
cmp
mov
xchg
pop
les
jmp
in
fbld
xchg
fidivrl
ret
rclb
jge
cmp
mov
mov
mov
enter
hlt
test
call
iret
xchg
mov
out
lock
hlt
je
mov
aaa
out
mov
add
in
movsb
out
jb
and
pushf
inc
in
jo
inc
jb
loop
sbb
mov
ds
int
xchg
out
dec
inc
inc
fildl
leave
sbb
cmpsl
pop
pop
xchg
cmp
push
popf
mov
pushl
das
shrl
fwait
imul
xorb
adc
je
pushl
sub
push
pop
jl
or
ljmp
mov
rcrl
xor
adc
fisubl
mov
decl
cld
dec
shl
jne
pop
fcoml
add
jge
push
lret
jmp
jnp
ret
dec
add
pop
shl
mov
push
or
or
dec
outsb
cmp
imul
dec
das
lock
ret
pop
and
mov
clc
dec
rdpmc
cmp
call
clc
shl
xchg
push
in
inc
pop
mov
pop
ljmp
xchg
push
sbbb
fcomp
daa
jg
loopne
mov
mov
sub
push
hlt
jnp
outsl
std
jg
mov
cmpsl
and
add
ja
movsb
mov
jno
test
loopne
scas
sub
hlt
push
jge
out
or
jne
pop
adc
push
adc
call
jno
inc
cmp
mov
aas
ds
cmp
cmp
ljmp
adc
xor
mov
dec
pop
hlt
mov
mov
mov
jo
ljmp
outsl
adc
mov
xor
xchg
movsl
xchg
int
sub
jg
or
cld
xlat
mov
lcall
adc
arpl
or
stc
sub
push
jg
clc
pop
leave
sbb
outsb
fcoml
decb
jnp
mov
pushf
in
dec
js
jmp
xorb
loopne
pushl
orl
pop
pop
sbb
enter
lods
xor
push
push
or
xor
fists
xor
and
xor
adc
ljmp
cmc
das
lods
loopne
out
adc
std
adc
and
mov
insl
mov
dec
dec
xor
xchg
mov
daa
jp
xchg
into
or
sbb
decl
shll
addl
cld
pop
sbb
ljmp
cmpsl
pop
pop
pop
mov
mov
sub
jle
sbb
dec
pusha
add
jg
adc
xor
jmp
loopne
leave
test
je
cmpsb
sti
dec
adc
xchg
jg
inc
mov
enter
cld
psrlq
mov
hlt
pop
mov
mov
popa
fstpt
iret
push
xor
in
js
ljmp
icebp
jmp
xchg
inc
leave
pop
es
pop
mov
outsl
mov
push
pop
push
mov
idivb
or
xchg
mov
popf
and
sub
jmp
int3
and
or
pusha
outsb
or
jg
fistl
scas
aam
out
incl
aad
bound
dec
xchg
je
fsub
sbb
sbb
fcoml
out
jbe
pop
push
cmp
mov
jnp
in
aam
xchg
inc
out
outsl
cmpsb
jge
dec
shll
mov
mov
push
adc
test
sbbb
movsl
mov
fiaddl
xchg
movsb
imul
add
push
into
cmp
or
mov
pop
sub
int3
add
shlb
das
cmp
outsl
icebp
xchg
add
xchg
bound
test
decl
mov
aam
xchg
rorb
mov
sbb
popf
pop
outsl
je
pushl
mov
jbe
or
aaa
pop
cli
cmp
call
decl
xlat
cmpsb
pusha
mov
sahf
cmp
cwtl
cmpl
stc
cs
or
rcrl
call
lods
pushf
pop
lret
adc
jge
sbb
lahf
mov
int3
mov
pop
xor
lcall
jp
insl
or
lahf
fcoms
push
xchg
mov
sbb
in
mov
pushl
cmp
pop
lods
repnz
lea
nop
call
rcll
sub
cmpl
ljmp
and
sbbb
fs
test
sbb
aas
push
fmull
adc
mov
sarb
pop
adc
fs
mov
roll
lock
incl
push
cmpsb
in
popl
mov
cmp
out
fsubl
repz
sbb
mov
mov
mov
pusha
sbb
sar
test
xchg
mov
pop
loop
imul
das
icebp
imul
testl
jmp
mov
or
fisubs
cltd
add
mov
adc
mov
push
and
xchg
cmp
inc
xor
add
cli
into
jae
fs
imul
mov
pushl
popf
lret
jne
cltd
lret
fs
lea
int3
pop
call
or
aaa
and
pop
xchg
int
sbb
fnstsw
call
sbb
dec
xchg
shrl
pop
mov
add
sub
cmpsb
pop
sbb
mov
mov
jp
sar
loop
into
mov
mov
or
lods
notl
jmp
add
dec
ficompl
mov
cli
dec
sub
or
aas
packsswb
loop
data16
fnstsw
in
fidivrs
pushf
sbb
stos
mov
mov
jae
fcomip
pop
loop
sarl
pop
and
inc
addr16
jg
xchg
xlat
or
xor
pop
call
lcall
sbb
lods
dec
sub
lcall
jmp
push
pusha
or
xor
mov
adc
subl
decl
fsubr
push
cmp
sub
cmpsb
or
ss
fs
neg
pop
or
incl
ret
cwtl
dec
cmp
cwtl
and
movsl
xor
dec
pusha
stos
pop
sub
rcr
loopne
fisubrs
out
arpl
bnd
in
aad
push
sub
add
aaa
lret
decl
add
push
cmp
insb
out
scas
mov
int3
xor
lcall
ret
or
test
enter
dec
dec
xor
sbb
sbb
push
leave
sub
incl
dec
mov
divb
std
or
push
push
in
sti
dec
jb
adc
dec
enter
sbb
fdivl
sti
mov
mov
lcall
inc
add
scas
mov
push
test
dec
and
popa
lods
fldcw
flds
lea
fistps
adc
jne
pop
imulb
addr16
dec
dec
xchg
mov
jnp
mov
pushl
jl
xchg
jmp
adc
outsl
repnz
and
mov
xor
call
mov
mov
es
dec
or
js
add
repz
in
mov
dec
sbb
push
fisttpl
add
adc
cmpsl
dec
outsl
daa
mov
inc
push
cmp
jecxz
mov
popf
mov
lods
sub
imul
adcb
cmp
int3
inc
mov
clc
jmp
mov
rorb
push
faddp
jmp
jmp
popa
and
sar
incl
adc
xchg
xor
cmp
addr16
pop
cmp
push
sub
or
mov
push
xor
sbb
dec
sahf
jns
adc
stos
push
lcall
cs
pop
mov
pop
jnp
enter
and
push
sbb
mov
mov
dec
xor
dec
push
inc
mov
loop
push
decl
loope
and
mov
imulb
push
rorl
jo
aaa
cli
pop
jmp
adc
mov
ds
lock
andl
sahf
adc
mov
mov
mov
bound
dec
mov
jbe
jle
test
cwtl
mov
push
push
or
enter
xor
loope
pop
dec
cmp
call
in
dec
mov
ret
fbld
popa
gs
arpl
ljmp
pop
mov
xor
xor
ja
push
cmp
xchg
push
pop
aaa
call
je
repz
stc
popf
aas
push
sub
icebp
sub
movsb
outsb
inc
mov
mov
jae
in
movsb
and
mov
pusha
stos
or
cmp
jmp
int
fs
mov
adc
aam
add
jo
cmp
fistpll
jae
sub
push
inc
sbb
dec
dec
lods
push
inc
xchg
inc
enter
jg
ljmp
out
dec
aaa
mov
rorb
jo
cs
icebp
mov
incl
and
ja
and
faddl
aaa
and
out
pusha
or
or
inc
xchg
je
mov
sub
adc
sub
dec
sbb
insl
jmp
outsl
and
out
lahf
out
xchg
notb
add
sub
mov
jmp
mov
sub
add
dec
jg
mov
cmp
fstl
rorl
enter
push
jae
cwtl
dec
ljmp
cmp
add
xchg
leave
ds
sarb
adc
lcall
pop
es
scas
xchg
cmpsl
mull
inc
or
jg
sahf
or
mov
mov
jmp
repz
inc
jmp
stos
repnz
pop
sti
in
ljmp
sub
cld
dec
xchg
jge
add
xlat
sar
mov
loopne
push
bound
scas
jp
pop
cs
mov
popf
inc
mov
nop
imul
dec
mov
ljmp
ja
outsb
xchg
lock
and
mov
insl
into
leave
jo
mov
adc
out
mov
repz
jg
push
xchg
popa
push
xchg
out
sub
mov
mov
lcall
jge
and
test
in
outsb
add
cmp
cmc
int
cmp
mov
cmp
add
lret
enter
mov
repnz
lcall
lcall
mov
leave
sti
stos
arpl
pusha
dec
jmp
lods
xor
fstpl
aaa
dec
jb
iret
mov
inc
lret
sub
pusha
xor
and
jge
or
jg
fldenv
gs
push
mov
jns
imul
sub
outsb
inc
jge
lret
add
fnsave
push
mov
or
ret
insl
jl
fisttps
mov
sub
ljmp
xchg
push
lods
xchg
ret
mov
daa
stc
jno
add
test
pushf
orl
call
stos
icebp
inc
int
aas
stos
pusha
mov
das
cmp
icebp
jg
and
pop
das
fnsave
lods
jns
gs
arpl
das
add
lahf
mov
icebp
int
add
mov
ffreep
sahf
jmp
insb
sbb
push
call
xor
decl
fstpl
push
inc
je
mov
and
js
xor
lods
and
push
out
xor
cmpsb
hlt
mov
inc
in
jbe
pcmpgtw
jne
pushf
call
pop
insl
xor
adc
mov
push
jae
push
jae
dec
sbbl
jp
test
or
sub
movsb
pop
les
incl
leave
ficoml
xor
dec
ret
decl
adc
incl
cmp
es
and
add
xchg
dec
lods
dec
lock
xor
push
fnstsw
std
pop
cmp
in
inc
dec
jo
lcall
cli
xor
and
gs
lret
shlb
push
sbb
adc
lret
mov
ljmp
orl
sub
pop
add
jmp
test
adc
pushl
add
xchg
fsubrs
adc
shrb
aaa
iret
repz
pop
cmp
cmp
fadd
and
ljmp
std
fistpll
call
mov
mov
pop
out
cwtl
out
xchg
or
mov
mov
mov
outsl
cmc
call
dec
pop
xor
adc
mov
loope
out
std
ljmp
sub
add
std
add
push
push
push
push
call
mov
gs
jnp
int
outsl
loope
mov
xchg
push
lret
sub
mov
xor
loopne
cmp
nopl
insb
mov
imul
lcall
push
cmp
mov
add
ds
jecxz
jne
push
or
decl
pop
xor
sbb
fldenv
pop
jp
fs
pop
shr
adcb
stos
mov
lcall
xchg
in
inc
idivb
sti
lcall
and
dec
rorb
sbb
aas
mov
cwtl
jae
test
sbb
mov
add
ret
ret
aaa
es
xor
fildll
and
cmpb
les
mov
cmc
or
inc
mov
mov
pop
push
jg
jno
mov
lds
cli
sub
push
ja
sub
sub
std
je
decl
movups
push
push
add
pop
push
push
push
call
dec
push
push
push
lahf
gs
push
shr
mov
je
add
push
pop
pop
xor
cmp
je
or
jmp
lcall
cmp
shlb
out
xchg
fisttpl
and
cmpl
jno
add
divl
fdivr
push
dec
inc
pop
pop
pop
add
mov
insb
and
sbb
add
pop
mov
or
mov
add
add
pop
mov
push
xchg
ljmp
inc
jbe
push
push
call
lods
dec
or
inc
jb
ljmp
push
push
push
call
add
mov
mov
cmpsb
cs
cmp
cmp
jmp
sbb
jmp
xchg
jmp
pop
lret
cwtl
jmp
and
xor
outsl
add
jo
jmp
sub
xor
sub
push
das
aaa
outsb
inc
jmp
xor
fidivrs
jecxz
jmp
lea
mov
sub
xchg
jmp
inc
test
pusha
sbb
ss
jmp
xor
clc
incl
inc
pop
mov
push
call
adc
iret
mov
inc
and
pop
dec
pop
push
movsb
pusha
fsubl
mov
inc
fs
pop
call
cmp
add
pop
jmp
pop
clc
add
out
enter
jg
jmp
xchg
xchg
sti
pop
cwtl
pop
cmp
popf
call
dec
push
add
add
and
insb
movsb
movsb
test
outsb
outsl
xor
add
jmp
or
out
push
push
call
add
pop
add
cs
jmp
mov
sub
jg
nop
push
push
sub
shr
sbb
stc
decl
cmp
add
add
pop
cmp
jne
fists
push
push
push
call
adc
xor
ljmp
rclb
push
not
rol
mov
or
jbe
dec
repz
push
dec
inc
pop
pop
push
push
mov
and
mov
cmp
mov
add
sar
ljmp
nop
push
sub
shl
pop
pop
inc
sub
mov
add
xchg
pop
push
pusha
push
ss
xchg
decb
movsl
jne
sbb
dec
lea
or
outsl
rcrl
loope
call
push
call
adc
scas
push
movsb
ret
jge
nop
pop
ja
das
mov
nop
in
mov
fidivs
jp
mov
sub
pop
cmpsl
incb
nop
pop
nop
push
dec
not
xor
push
test
inc
push
pop
ret
push
add
dec
fidivrs
shr
mov
mov
push
out
pop
push
call
sub
cmpsl
sbb
mov
sub
xor
push
and
jmp
cs
fisttpll
mov
mov
aam
push
jb
add
jbe
push
test
cmpsl
adc
sahf
adc
rolb
incl
dec
int3
push
jmp
mov
add
lret
ret
pop
lds
add
sbbl
and
inc
xorl
cmpsl
jmp
shll
cld
nop
jb
rorb
inc
inc
insb
push
and
jnp
hlt
in
xchg
xlat
add
cmp
mov
jl
add
inc
push
jno
decl
push
and
push
xor
sub
dec
pop
call
out
mov
mov
int
sub
add
call
inc
sub
xor
lea
jb
xor
sub
xchg
xchg
js
icebp
push
sub
pop
add
jle
or
shlb
loopne,pn
mov
xchg
sub
xor
pop
sub
or
lcall
sbb
xor
or
pushl
cmp
adc
add
lea
mov
loope
ret
sahf
inc
test
lret
and
in
push
push
push
push
call
pusha
mov
je
jecxz
sbb
call
cli
add
js
mov
xor
push
push
jmp
cmp
pop
sbb
jmp
ds
mov
jmp
and
arpl
push
pusha
shr
push
jmp
je
push
adc
es
std
add
pop
nop
sub
pop
inc
mov
push
fidivl
sbb
push
icebp
push
xchg
xchg
dec
pop
mov
and
decl
jg
lret
push
push
push
call
sub
adc
and
jle
or
add
mov
or
add
ja
pusha
adc
cmp
push
sbb
sbb
push
call
movsb
xor
mov
cmp
cmp
add
aam
rep
xchg
outsb
lock
not
repnz
pop
fdivl
mov
jmp
inc
jmp
mov
sub
xchg
add
shlb
and
adc
pop
or
outsl
pop
test
sbb
fdivrs
xor
and
sbb
adc
or
pop
cmp
or
jne
add
cltd
mov
pop
xor
jmp
or
push
mov
adc
push
push
pop
cmp
fsts
inc
sahf
mov
mov
push
push
push
call
shll
xlat
or
cmp
out
mov
mov
push
push
push
dec
push
call
test
and
icebp
push
andb
sbb
inc
sub
hlt
pop
sahf
adc
aas
push
push
add
push
movsb
insl
bound
lods
sub
cmp
mov
loope
call
and
jb
sbb
fwait
imul
xor
shrl
add
push
ffree
jmp
cmp
shlb
mov
and
sarb
add
or
sbbl
push
push
push
push
push
call
add
sbb
pop
or
push
push
or
inc
xor
and
xor
dec
test
std
mov
mov
shrb
inc
xor
shlb
jg
call
push
inc
sub
pop
mov
sub
jg
xor
cmp
add
push
jmp
push
sub
ret
or
out
outsb
jmp
lods
push
shl
in
ficompl
sbb
push
jmp
movlps
in
add
mov
outsl
inc
sub
jmp
movsl
or
sbb
jmp
pop
add
out
in
clc
jg
push
push
push
push
push
pop
and
dec
push
add
aam
cli
aas
lods
inc
mov
mov
add
test
sub
cld
in
mov
decl
aas
lea
fsts
push
lea
shl
dec
pop
ljmp
adc
sbb
inc
pop
xor
dec
scas
and
sub
fdiv
call
popl
mov
push
push
inc
xor
add
mov
or
stc
test
pop
jo
adc
ss
inc
push
lods
test
mov
inc
lock
sbb
mov
add
xchg
push
add
jmp
push
jmp
leave
stos
cmc
insb
xchg
and
rep
mov
and
loope
inc
mov
rolb
add
rol
sub
sub
pop
nop
nop
xor
nop
push
push
and
ds
daa
mov
mov
xor
xor
std
call
pop
inc
push
shl
lea
pop
leave
push
lea
lea
jbe
xchg
jge
cmp
add
incl
push
and
test
test
or
in
or
inc
or
test
nop
mov
dec
jne
loopne
jno
push
or
jmp
test
jecxz
pop
jmp
popa
dec
sbb
push
movb
push
push
push
roll
jl
lods
xor
xor
mov
push
xchg
xor
jmp
jle
inc
add
cld
jb
jmp
and
pop
sbb
mov
jb
inc
sbb
rcll
pop
pop
push
xor
add
pop
pop
je
add
inc
je
incl
movsb
mov
mov
sti
cmp
mov
lcall
aas
mov
ret
js
mov
add
ret
adc
add
adcl
or
or
push
adc
shrb
aaa
out
push
call
push
push
rol
xor
shl
mov
xor
filds
push
push
rol
add
pop
call
jg
xor
jp
inc
sub
xchg
mov
aaa
fcmovnb
test
sub
xor
push
push
push
adc
jle
add
cmpsl
xor
mov
scas
fadds
or
cmc
mov
xor
mov
add
out
mov
rorb
and
adc
es
xchg
mov
push
nop
cmp
add
push
jmp
mov
repz
rol
lea
add
add
mov
incl
add
lea
loop
les
xor
cmpsb
cmp
repz
xor
push
sub
mov
aad
imul
xor
adc
mov
add
or
mov
push
push
shll
popf
sbb
sub
sbb
call
add
push
mov
push
push
sbb
add
push
lret
dec
std
ret
call
imul
or
sub
sub
add
pop
add
push
push
push
push
dec
xor
movsb
test
sar
xor
shrb
pop
dec
insl
sub
daa
mov
add
pop
adc
mov
cli
aaa
add
insl
or
inc
pop
push
push
adc
rcl
mov
and
cli
xor
or
mov
and
cmp
push
sub
jmp
adc
mov
jmp
inc
and
enter
adc
addl
add
mov
adc
sub
shll
mov
pop
or
and
call
ret
aaa
shr
add
je
add
cmpl
cwtl
insb
inc
stos
pop
xlat
lods
call
jmp
xchg
clc
adc
stos
push
call
shr
testb
fiadds
sbb
mov
xchg
sti
lea
mov
mov
xchg
and
add
mov
ljmp
jl
push
cld
loopne
mov
imull
ret
lret
call
and
jp
add
pop
in
loopne
fsubp
xor
add
not
xor
xor
call
push
or
test
gs
das
lock
xor
push
push
lea
adc
lods
cmp
iret
push
cmp
add
loop
push
cld
mov
lcall
fs
mov
adc
mov
mov
out
xchg
push
icebp
pop
mov
add
pop
jmp
in
xchg
jae
test
ljmp
add
jmp
mov
vphaddubw
jno
in
mov
mov
inc
xchg
and
jecxz
adc
mov
test
cld
push
xchg
cmp
roll
add
sbb
ja
aas
inc
push
push
push
push
push
adc
and
cmp
arpl
mov
add
or
mov
cmp
push
push
push
in
ss
push
mov
or
loope
pop
push
push
add
stos
popf
or
adc
or
mov
hlt
sub
pop
push
call
popa
int
clc
mov
loop
mov
push
outsb
mov
push
pop
mov
or
roll
aaa
cli
rcll
add
add
sub
sub
mov
rolb
mov
jmp
cmp
lock
xor
add
and
lods
fstpt
push
push
push
push
jle
push
mov
dec
pop
add
pusha
and
hlt
lea
mov
mov
push
mov
adc
lods
repz
add
loope
fsub
std
pop
mov
inc
inc
push
push
add
mov
leave
push
lds
sub
add
sub
jle
xchg
ljmp
into
and
xchg
outsb
mov
pop
xchg
push
lea
push
insb
inc
push
jno
dec
xchg
push
inc
movsb
jp
movsb
test
jecxz
push
dec
mov
or
shl
pop
push
push
or
push
jg
mov
pop
push
mov
push
xchg
ret
hlt
das
pop
dec
vunpckhps
push
not
rol
pop
mov
out
or
repz
push
rolb
addr16
or
push
cmpsl
inc
mov
jmp
pop
jmp
addb
and
out
or
addr16
hlt
test
mov
mov
js
inc
enter
pop
pop
clc
jno
push
inc
and
push
push
fs
xlat
sub
ja
add
push
cmc
pop
aas
or
xor
clc
push
sub
mov
lcall
push
stos
in
sbb
jne
dec
mov
pop
mov
add
scas
jmp
cmp
rcl
daa
pop
aam
cmp
in
aam
das
or
dec
or
jmp
js
ja
ret
cmp
lods
push
lea
mov
pop
pop
cmp
jmp
dec
adc
mov
xor
out
jno
xchg
in
inc
jno
outsb
push
les
mov
ss
mov
push
hlt
mov
jbe
inc
xor
incl
xor
adc
pop
push
mov
push
adc
sbb
or
filds
loop
imul
inc
pop
cli
dec
add
not
adc
imul
das
cld
aaa
cli
xchg
xor
push
cmp
scas
cmp
dec
xor
das
je
lods
mov
sub
sbb
mov
jbe
dec
arpl
adc
enter
mov
lock
xor
and
inc
xchg
cmp
add
ret
lds
fists
push
mov
or
outsl
pushf
or
sbb
pop
mov
jmp
mov
fdivs
push
pusha
add
cwtl
mov
push
adc
xorl
test
jecxz
aam
and
push
mov
push
mov
cmpl
push
push
push
xchg
in
andl
adc
fdivr
jg
shl
pop
push
lock
sub
push
add
daa
mov
push
fldt
roll
push
cltd
dec
push
ficoms
pusha
push
sub
aas
adc
xchg
pushf
push
cmp
loop
jg
push
das
pop
lods
lods
ljmp
imul
adcb
mov
rcr
sbb
mov
adc
push
add
or
int
out
and
cwtl
ret
jg
jecxz
lcall
xchg
les
add
xor
and
mov
jmp
dec
bnd
push
push
push
add
test
repz
push
push
call
and
add
js
decl
std
rep
pop
push
push
mov
fcoms
adc
aas
inc
add
ret
push
mov
and
mov
or
leave
jne
mov
xor
loopne
dec
clc
inc
xor
mov
xor
push
sub
gs
jno
mov
jmp
add
popa
shlb
sub
decl
mov
push
pop
addb
cmp
shll
pop
sub
sub
sub
mov
loopne
mov
adcb
push
push
push
call
popl
or
jg
inc
cmp
push
push
call
test
push
shr
add
add
pop
call
cmp
mov
repnz
mov
call
gs
aaa
es
stos
add
jbe
sub
mov
cmpsl
bnd
and
push
pop
inc
sub
dec
pop
pop
inc
popa
xor
inc
add
dec
sbb
jmp
sbb
pop
push
call
inc
xchg
pop
daa
cmp
pop
pop
pop
push
stos
mov
and
and
add
cmp
test
fsubl
add
mov
dec
ret
mov
ja
add
push
push
xor
add
loope
insb
mov
mov
call
xor
shl
add
imul
add
cmpsl
or
pop
shrl
inc
hlt
ret
mov
mov
outsl
cmc
add
add
push
shr
lret
pop
add
lcall
or
push
push
push
call
mov
jecxz
fistpll
mov
push
add
not
pop
mov
push
ror
pop
test
mov
xor
lea
inc
pop
or
adc
inc
push
add
push
push
call
dec
popa
fsubs
add
and
sbb
mov
in
fsubr
inc
pop
add
adc
xchg
and
push
add
clc
iret
push
arpl
cli
dec
syscall
xor
pop
mov
insl
rol
add
ror
pop
mov
ss
jmp
adc
pop
cli
jne
iret
add
push
mov
gs
jns
push
or
xor
or
out
mov
pop
mov
jmp
mov
xor
adc
aam
das
scas
adc
mov
repnz
jmp
ja
push
call
mov
mov
mov
add
loopne
xchg
call
lret
pop
push
push
push
and
pop
dec
fimull
xor
or
pop
push
pushl
mov
add
push
sub
and
adc
jmp
adc
jns
jbe
push
add
sbb
aas
xorb
push
push
sub
dec
mov
inc
dec
lds
pop
es
shll
mov
xlat
cs
in
push
and
or
fldt
cs
call
dec
push
inc
mov
mov
jle
mov
int3
dec
andl
jle
imul
push
and
adcl
incl
jge
push
push
push
and
gs
inc
clc
mov
dec
push
adc
inc
add
enter
xor
repnz
mov
cmp
mov
push
cmp
push
andl
jle
loop
push
sub
ljmp
jmp
or
push
in
add
add
jne
add
pop
adc
inc
lds
sbb
leave
sub
dec
fildl
dec
mov
popl
jmp
pop
bound
rorb
lods
sub
pop
mov
cmp
push
pminsw
in
push
push
mov
rorb
and
push
call
adc
in
xchg
shrb
fucomp
mov
mov
and
rorl
mov
push
sub
sub
pop
pop
push
call
pop
ds
je
test
sub
jg
loopne
pusha
ss
mov
adc
mov
dec
add
les
sub
mov
in
lret
and
pop
sbb
test
or
inc
aam
adc
sbb
push
fbld
jmp
push
ror
pop
mov
loope
pop
bound
mov
fldt
addr16
adc
aad
scas
cmc
scas
pusha
inc
nop
in
push
push
pusha
lods
dec
call
not
stos
and
inc
or
loope
out
ljmp
icebp
add
repz
mov
sub
lahf
add
inc
jne,pn
cmp
push
xchg
jmp
dec
push
mov
repnz
fs
nop
pop
outsb
adc
cmpl
addl
and
or
and
or
fs
sbb
mov
shr
mov
add
or
orl
adc
ds
inc
dec
inc
mov
or
sbb
push
jle
pop
mov
in
mov
fistps
fldl
adc
cmp
cmp
mov
scas
mov
inc
sbb
rcl
pop
pop
pusha
xchg
or
jmp
rcl
xor
pop
fxch
mov
xchg
or
js
in
pusha
jbe
jmp
dec
pop
rorb
jne
jno
jecxz
cpuid
sub
ss
mov
add
xlat
add
cmp
add
jmp
int3
insb
inc
and
lcall
out
aas
rclb
stos
or
xchg
mov
cmp
mov
push
not
lea
dec
in
jg
mov
jl
add
xor
lea
pop
popa
pop
pop
pop
adcb
mov
inc
daa
movsb
lea
loope
xchg
out
adc
add
adc
in
leave
into
ljmp
push
enter
pop
icebp
mov
sub
xor
adc
mov
pop
clc
push
push
push
push
mov
loopne
rcrl
sbb
or
and
push
inc
sub
test
pop
xor
add
mov
xor
adc
inc
sbb
rcrl
jo
mov
rolb
inc
and
and
mov
mov
xchg
add
dec
push
call
mov
add
push
pop
fcoms
mov
jg
call
jg
xchg
jecxz
fildll
fidivrs
jmp
mov
leave
fsubs
lret
push
call
push
test
fsubrs
pushl
iret
shl
lea
pop
call
xchg
test
stc
push
call
adc
sbb
sbb
push
add
dec
mov
pop
jg
mov
out
fs
rcll
adc
pop
or
dec
add
sub
arpl
or
rclb
test
mov
jge
xor
pop
pop
pop
push
push
and
call
out
lidtl
push
call
sub
xor
cmp
inc
mov
push
aam
lcall
pop
mov
push
pop
arpl
loopne,pn
inc
clc
aam
mov
push
shrl
addl
cmp
jmp
bswap
sbb
cmp
repz
inc
xor
xchg
or
dec
adc
mov
add
xor
inc
add
jecxz
mov
and
jle
out
pop
add
add
test
inc
add
jb
xor
mov
jmp
push
das
and
into
gs
repnz
sub
scas
test
jmp
and
ret
add
cmp
lock
call
xor
sub
push
hlt
inc
add
jo
aas
xor
shlb
add
nop
sub
lock
cld
push
push
inc
mov
mov
mov
jg
ds
jp
test
daa
aaa
dec
stos
mov
mov
movsb
cmp
in
call
jge
icebp
pop
mov
sub
outsb
inc
jo
pop
xorl
jne
mov
mov
xorl
and
mov
mov
xchg
lock
adc
ja
or
sub
pop
cmp
out
hlt
push
add
pop
add
pop
push
call
add
xchg
test
jg
outsl
cmp
push
sahf
out
xchg
ds
or
pop
jg
push
std
mov
add
push
push
repz
or
jl
das
mov
add
outsl
fbstp
fsubl
add
pop
push
push
push
inc
mov
movsb
pop
add
std
push
aad
lret
push
sub
lea
pop
pop
dec
mov
flds
xchg
inc
mov
push
call
adc
in
insb
mov
inc
aad
and
xor
add
push
push
call
jno
adc
sub
sub
sub
sbb
adc
shrb
inc
nop
sub
nop
nop
push
push
shll
testb
dec
xchg
or
push
or
mov
dec
mov
inc
or
lahf
sbb
inc
push
push
push
push
pop
and
adc
andb
enter
add
inc
shrl
xchg
or
sbb
sbbb
stos
inc
pop
stos
fs
sub
ss
xlat
mov
imul
mov
arpl
jno
sub
inc
pop
add
shrl
cmp
repnz
sbb
pop
mov
pop
mov
or
mov
sti
fistps
fildl
movsb
lods
push
call
adc
xlat
mov
sbb
inc
mov
out
xor
mov
push
push
push
push
push
ss
lcall
push
push
mov
mov
bswap
popa
mov
sub
orb
out
ljmp
pop
pop
in
push
and
sbb
call
mov
shr
add
sbb
cmpsl
push
frstor
lock
inc
sbb
or
pop
aad
push
and
jecxz
lock
mov
push
push
push
call
push
add
test
sub
push
jg
mov
add
ds
stos
ljmp
or
std
into
in
push
call
test
add
call
es
sub
mov
call
in
inc
pop
cmpsb
nop
ret
mov
jmp
test
and
mov
sub
nop
pop
or
cmp
push
or
and
and
in
test
sbb
add
adc
xchg
test
sbb
cmp
sub
test
sbb
add
add
or
xchg
jne
push
dec
adc
pop
mov
push
leave
jne
lods
hlt
mov
pop
jnp
das
and
jp
pop
push
add
add
mov
inc
lds
shll
das
test
call
popa
xor
lods
sub
inc
sbb
ljmp
add
clc
xor
pop
add
pop
dec
or
stc
push
push
pop
sbb
lahf
mov
pop
pop
pop
push
xor
shl
mov
ljmp
push
gs
stos
push
push
daa
roll
push
nop
adc
xchg
sbb
xor
cmpsb
adc
adc
mov
lret
insb
push
mov
mov
loope
jp
adc
or
add
add
call
hlt
add
lret
shr
adc
out
outsb
pop
mov
cmp
je
jp
add
sbb
enter
jne
push
adc
mov
fsubl
dec
and
sub
xchg
fisubrs
pop
inc
push
data16
inc
loopne
push
pusha
mov
adc
pop
mov
sbb
xor
fists
sbb
jb
add
call
loop
sarl
mov
push
std
push
out
dec
push
call
inc
sbb
inc
and
cmp
pusha
add
xor
idivb
inc
jmp
loopne
add
mov
mov
adc
mov
insl
mov
sti
sahf
call
dec
test
pop
insl
mov
imul
dec
and
cmp
or
bound
push
or
xchg
sub
icebp
insl
ljmp
push
ss
sbb
mov
scas
dec
jge
imul
pushf
dec
pushf
or
decl
icebp
sbb
stos
sbb
stos
call
ljmp
mov
cs
push
sar
ljmp
fdivr
push
dec
hlt
mov
adc
loop
dec
mov
and
sub
pop
fs
sar
cmp
test
lods
sarl
out
cmp
sbbb
adc
cmp
nop
sub
call
pusha
insb
out
jmp
lods
push
ljmp
sahf
mov
fnstsw
call
xchg
sub
sub
test
ja
fnsave
lock
cmp
loopne
and
inc
ljmp
pop
clc
imul
cwtl
push
lods
out
sbb
mov
jbe
stos
or
stc
mov
in
decl
inc
fadds
jnp
xor
mov
mov
add
lods
or
inc
decl
xor
jmp
std
cmp
jg
sub
loop
jl
clc
call
loope
nop
or
cmpsl
jmp
push
lret
push
cmp
xor
sub
xchg
adc
imul
std
mov
mov
aaa
adc
in
xor
cld
mov
jbe
clc
ljmp
push
test
push
or
sti
cltd
inc
shrb
mov
decl
rorl
outsl
fsubl
out
lea
in
pop
test
mov
lret
push
movsb
push
jmp
insb
mov
je
jle
into
aas
push
sbb
xchg
out
jns
inc
mov
sbb
movsl
lock
and
mov
movsl
adc
ret
jno
icebp
movb
dec
jg
or
lods
fucomp
test
negb
int
jno,pt
add
enter
adc
inc
adc
jle
addr16
pop
addl
sahf
inc
mov
lahf
jl
and
xor
lcall
test
mov
mov
dec
out
and
or
or
add
clc
or
pop
cmp
adc
in
push
test
ja
push
daa
movsl
mov
push
inc
jmp
pusha
mov
inc
inc
jle
jecxz
je
jbe
je,pt
jle
add
fsubl
test
push
pushf
xlat
adc
int
sbb
mov
xchg
out
lcall
nop
mov
jae
pop
and
pop
or
call
in
sti
popa
pop
sbb
jne
jb
lock
cld
aad
sub
lods
pop
sti
adc
incl
inc
mov
inc
shlb
ror
sbb
xor
cs
dec
call
sahf
adc
push
cli
call
push
dec
push
inc
cmp
mov
mov
call
push
add
jb
xrelease
or
or
insl
adc
inc
insb
jg
pop
es
or
lods
movsl
out
mov
es
fs
jmp
mov
sbb
lock
les
leave
mov
or
out
push
notl
mov
mov
mov
ja
mov
mov
jle
inc
mov
mov
mov
call
sub
sti
daa
sub
jle
sub
push
clc
pop
pop
ficoml
sub
scas
movsb
gs
lcall
lret
insb
adc
mov
jo
lcall
clc
out
mov
and
xor
call
push
fcmovnu
inc
push
dec
mov
in
add
cmc
notw
and
pop
pop
sbb
jmp
dec
mov
fidivrl
and
lds
jp
ficoms
fdivl
jg
push
cmp
jnp
out
cmp
movsl
sbb
add
xchg
push
pop
popa
mov
mov
cmc
sbb
decl
xchg
test
cltd
dec
add
xchg
mov
icebp
push
sarl
imul
out
sub
mov
les
outsl
lock
or
xor
cmp
jg
pushl
pushf
adc
fs
jmp
cmp
bound
dec
jg
push
sbb
mov
jl
pop
mov
loopne
les
mov
out
inc
into
xor
jo
ret
scas
cmp
addr16
mov
adc
pusha
xchg
incl
movsb
mov
in
push
inc
or
arpl
pop
stos
es
gs
or
shlb
adc
inc
fdivr
ljmp
jno
bound
nop
sbb
aam
stos
jle
ja
jmp
mov
push
and
shlb
scas
mov
push
cmpsl
xchg
aam
jle
out
ret
lods
pushl
rcr
pop
dec
push
es
mov
inc
ljmp
dec
xchg
xchg
xchg
stos
sti
out
and
dec
stos
xchg
movsl
push
mov
dec
loop
jg
aad
clc
dec
inc
popa
pop
inc
fisttps
je
dec
inc
push
cmp
insl
jp
mov
pushl
es
stos
frstor
imul
das
xorl
test
cs
test
jg
out
mov
push
andl
and
pop
cli
and
insl
xchg
sbb
fwait
xchg
inc
loop
inc
mov
decl
or
out
lds
dec
icebp
repnz
dec
in
dec
cwtl
or
movsb
incl
incl
movl
jle
fisttpll
inc
lahf
or
jmp
ret
rep
test
sub
frstor
mov
cmp
xchg
jb
cmc
push
mov
enter
gs
adc
sub
sub
push
ds
jmp
rclb
or
scas
jg
jge
inc
outsb
out
fldt
fcomp
daa
push
ljmp
jge
xor
xor
xor
enter
add
mov
jmp
fcoms
ds
iret
out
int3
nop
mov
or
jno
testl
add
mov
sbbb
push
cltd
cmpsl
dec
push
loope
lock
cmp
int
test
push
sub
ret
loopne
jle
es
call
sbb
ja
repnz
sbb
rol
jae
dec
push
sbb
mov
push
popa
aaa
xchg
sarl
aad
push
add
and
and
cmp
cmp
push
lds
ret
jle
add
addr16
pop
push
incl
sti
dec
xchg
xor
ret
imul
cli
decl
inc
pop
pop
stos
add
cmp
add
call
jg
mov
push
adc
inc
imul
xchg
add
jmp
lods
andl
mov
fiaddl
adc
jp
fwait
add
ljmp
push
bound
btr
xchg
jg
mov
mov
mov
pop
push
bound
lret
cwtl
mov
aad
idiv
scas
stos
sub
add
lcall
pop
decb
push
jb
dec
push
push
jae
pop
not
fs
bswap
mov
inc
jmp
xor
inc
sti
pusha
inc
pop
add
sbb
movsb
leave
cli
cmpb
dec
sbb
pushl
ret
ret
cmpsl
mov
and
push
subb
adc
insb
jge
incl
dec
jg
push
nop
std
mov
stos
lret
fstpt
ja
dec
lret
inc
ljmp
sbb
push
adcl
pop
push
mov
pop
mov
fmull
int3
lea
mov
inc
jle
and
cmpsl
xchg
lea
fmuls
fisubrs
mov
push
cmp
push
push
sahf
xchg
ljmp
and
xlat
aas
out
push
enter
sub
popf
jno
es
push
popf
jne
stos
push
in
inc
cmp
dec
mov
mov
ss
shlb
std
je
adc
repz
movsb
jp
cwtl
adc
sar
call
fadd
sbb
sbb
sbb
sbb
push
mov
pop
cli
sbb
mov
pushl
and
xchg
jae
ret
call
mov
testb
insb
jne
and
cmp
jmp
ljmp
jno
ss
fwait
jbe
ds
stc
xchg
mov
xchg
les
decl
mov
popa
jns
xchg
xchg
in
and
movsb
cmp
pushl
das
hlt
sbb
out
in
sub
out
out
push
je
mov
or
pop
adc
call
dec
mov
jge
pop
mov
add
adc
in
xchg
mov
mov
cmp
push
sbb
inc
xor
or
xchg
loope
adc
loope
adc
jmp
ret
shrl
pusha
addl
inc
std
or
or
sub
fs
out
sub
dec
lock
dec
jno
out
fs
js
push
sub
shl
mov
arpl
add
mov
outsl
cld
cmp
jae
je
jle
mov
add
in
xor
jmp
mov
jo
xor
mov
rclb
cmpsb
pop
rclb
orl
incl
adc
push
adc
sub
jle
jmp
cmp
or
ljmp
add
pop
and
gs
sbb
ljmp
inc
negb
push
jg
fstpl
dec
xchg
roll
or
jns
fsubrp
out
loope
in
pushl
test
and
js
or
jne
mov
lods
cli
cli
push
rcl
sub
int3
ljmp
sub
rcrb
stos
jnp
push
mov
aad
movsl
pop
sbb
decl
xor
dec
loop,pn
push
hlt
enter
or
dec
ja
mov
imul
push
jno
pop
xchg
pop
in
movsl
jno
xor
sti
fs
sub
dec
sub
dec
shl
or
push
add
cmp
lods
jmp
iret
xchg
fstl
mov
in
pusha
or
push
and
decl
rcrb
sbb
jecxz
hlt
inc
push
mov
dec
lds
sti
out
lock
call
sbbb
out
daa
sub
inc
arpl
cmp
mov
into
and
incl
push
inc
popf
xor
shrl
sub
aaa
test
mov
fbld
jmp
and
mov
int
and
xchg
shlb
pushf
out
out
call
cmp
and
add
jp
lcall
aaa
movsb
pop
push
insl
test
ja
jg
lcall
pop
sbb
add
inc
popa
fldl
jp
push
mov
in
jg
or
jg
test
lds
loope
push
int
add
imul
out
mov
jmp
mov
inc
adc
and
cmp
out
mov
int3
or
sub
ljmp
shlb
or
pop
adc
xlat
in
jbe
fbstp
fcmovne
sub
jae
push
cltd
sbb
jl
cli
addr16
int
mov
pusha
sar
lods
cs
sub
insb
sti
lret
mov
or
decl
jmp
cli
push
adc
or
leave
inc
insb
pop
mov
jl
int3
xchg
fwait
jge
mov
jmp
nop
cmp
mov
lods
add
add
xor
loop
and
xor
popa
xor
pop
sub
mulb
mov
ret
push
add
cmp
jp
pop
repz
jl
inc
ljmp
cld
dec
add
aam
and
idivb
or
adc
das
cld
jmp
jno
int3
jl
out
dec
js
inc
mov
mov
int
push
jmp
sbb
mov
jne
in
push
cwtl
repz
pop
call
jg
mov
fidivrs
int
insl
insb
insl
out
ds
cltd
rcr
ret
imul
cmp
xor
push
dec
ret
fdivrl
loop
sahf
into
mov
jle
inc
aaa
jle
mov
add
aas
lret
in
ljmp
cld
add
mov
dec
call
mov
pop
lahf
jmp
aad
push
lcall
xor
fildll
mov
shll
or
pop
adc
imul
cmp
xorb
mov
push
cwtl
cmc
cmova
inc
incl
in
inc
or
stos
mov
jl
jge
or
decl
jl
mov
aad
pushf
cmp
aas
sub
sub
dec
and
cld
ds
mov
enter
stos
adcb
lcall
add
or
cli
mov
push
xchg
scas
iret
add
mov
test
test
and
loopne
fcoml
jle
dec
lcall
lock
insl
adc
fadds
cmp
es
jp
aam
outsl
xchg
cmp
movlps
jns
pop
dec
sti
add
pop
or
dec
fwait
hlt
stc
lret
add
adc
addr16
pushl
mov
shld
cmpsl
cmpb
inc
call
jno
jne
jmp
cmp
popa
sbb
lret
stc
cmpsb
lds
add
popf
dec
in
sub
push
xor
faddl
decl
int
cmp
push
or
push
xorb
jecxz
pop
es
ss
mov
cmp
call
and
push
or
cwtl
mov
std
sub
and
gs
enter
jmp
in
and
ret
add
lret
insb
sub
cmpsb
repnz
and
neg
cmp
and
adc
and
lahf
pop
mov
or
pop
test
call
or
pusha
add
sbbb
in
outsl
adc
mov
loopne
mov
fsubr
inc
call
push
in
cs
lcall
pushf
dec
adcb
test
or
stos
push
test
imul
orl
ljmp
ljmp
pop
pop
dec
push
mov
out
push
mov
fimuls
daa
cltd
fsubl
cld
repz
push
mov
dec
icebp
mov
adc
add
call
mov
fs
add
sub
out
cmpsl
cmc
nop
inc
enter
gs
sub
call
pushl
mov
sahf
fwait
scas
pop
mov
mov
out
or
movsl
decl
sbb
shr
lret
aam
pop
pop
and
cmp
gs
sbb
lcall
and
adc
mov
incb
push
fnstsw
inc
mov
loopne
das
dec
push
sbb
out
movsb
jo
dec
xorl
pushl
lock
mov
in
mov
mov
lods
sub
fidivl
ljmp
adc
inc
sbbb
aaa
xchg
xchg
mov
sarb
into
into
sahf
and
pushl
jns
or
or
aad
mov
lret
sub
icebp
jmp
mov
cmpsb
inc
icebp
add
xor
or
rolb
dec
ljmp
iret
pop
cmpsb
cmp
push
sbb
mov
jmp
or
inc
test
mulb
aas
in
push
mov
lcall
dec
outsl
and
rolb
push
out
ret
sub
es
popa
popa
jb
xchg
mov
adc
adc
mov
repnz
push
imul
aam
cmp
sub
jns,pt
sar
sti
out
add
scas
out
pop
push
lahf
sbb
out
mov
das
lock
sub
cli
incl
in
je
xor
or
xchg
add
inc
adc
jmp
pusha
test
rcrl
cmp
lods
sbb
pop
push
push
mov
popf
lret
pop
andl
mov
push
repnz
int
adc
fdivp
call
ss
xchg
and
xchg
mov
dec
cmp
adc
pop
packssdw
mov
jle
pop
pop
clc
push
jns
lret
cmp
in
cmp
hlt
jo
adc
jo
cmpl
incl
jecxz
enter
mov
push
adc
rcr
push
and
jmp
dec
mov
into
cmpb
nop
jge
out
lcall
sbb
call
pushl
bound
mov
nop
lea
pop
clc
mov
lcall
out
jmp
adc
in
into
outsb
mov
dec
sub
inc
and
add
dec
call
dec
test
mov
adc
outsl
mov
popa
mov
lcall
aad
dec
or
aad
jns
cmp
popf
call
lods
mov
push
ljmp
sub
adc
pop
mov
xor
aad
fcomp
shll
out
vmovd
incl
rorb
loope
or
mov
pop
pop
mov
or
mov
incl
dec
das
cmp
cmpsl
mov
xchg
xchg
cli
pop
inc
mov
pop
xchg
jb
les
insl
rcr
lea
and
add
cli
fadd
scas
adc
movl
out
sub
cld
idiv
lcall
or
sbb
add
sbb
dec
adcb
mov
sub
incl
mov
loope
pop
scas
enter
mov
rolb
cmp
mov
incl
xor
cmp
ja
push
push
xor
lea
aam
rolb
test
jne
cmpsb
jmp
jae
pop
dec
cmp
adc
sbb
mov
cmp
fucomip
lods
or
or
sbb
jp
jno
lret
and
pop
cli
ljmp
bswap
pop
add
lods
inc
das
pusha
popa
and
xchg
jnp
adc
lods
inc
pop
mov
movsb
punpckhwd
andl
fldl
jb
dec
out
das
push
test
fsubrp
pop
inc
pusha
fs
js
pop
aaa
dec
or
jmp
mov
or
xchg
bound
xor
lods
shrl
imul
mov
sub
aam
sbb
stos
xor
sub
in
sub
in
xchg
ljmp
loope
adc
jg
add
cs
imul
pop
push
cmc
jle
ret
or
sahf
adc
mov
adc
cmpsb
jmp
daa
and
lcall
xor
push
lret
xchg
mov
call
nop
xor
push
in
pushl
xchg
mov
cs
rorl
fcoms
inc
lea
outsb
hlt
push
cmp
push
and
ljmp
ljmp
sbb
arpl
test
repnz
roll
add
jnp
cmpl
mov
das
insb
hlt
incl
jmp
das
pop
aad
ja
jle
das
std
mov
sbb
mov
pusha
sub
icebp
das
jbe
decl
std
mov
mov
sub
sub
test
pop
das
cmc
jl
int
addl
ja
lods
fwait
fwait
push
test
mov
cld
jns
mov
testl
dec
jl
inc
mov
lcall
imull
mov
imul
mov
jns
push
push
stos
faddl
mov
jg
call
popf
aas
loop
andl
mov
ja
call
xchg
adc
push
or
xor
dec
xchg
fs
lds
cli
push
pushl
cld
sbb
add
nop
mov
adc
cmp
inc
loop
xchg
sbb
or
pushf
out
or
ss
sbb
lcall
inc
loop
lret
fadd
xor
inc
jge
or
in
jmp
push
or
sub
sbb
shrl
subb
ss
mov
bound
cmp
decl
popf
mov
cmp
dec
pop
jle
add
pop
push
jl
in
xchg
aaa
mov
inc
add
lods
jle
jl
lcall
inc
icebp
shll
fwait
inc
jg
pushl
loop
sbb
mov
inc
dec
sarb
out
push
xor
inc
jmp
dec
mov
add
xchg
pop
or
imul
mull
or
mov
adc
fldt
cmp
nop
and
sahf
or
cli
loop
iret
cld
fisttpl
ficomps
sbb
xor
pop
mov
fdivrp
mov
shrl
movsl
nop
push
jmp
in
hlt
lods
jmp
push
jg
lods
movsl
aam
pop
stos
adc
test
loop
outsl
jle
push
xlat
outsb
push
or
nop
push
jb,pt
mov
outsl
sub
inc
iret
sbb
or
jl
xor
push
lods
outsb
rcrl
mov
test
sub
nop
sbb
cwtl
arpl
movsl
inc
jg
clc
loope
mov
rorl
and
inc
insl
aad
dec
lods
addr16
xchg
or
gs
sbb
sub
xchg
sahf
sub
push
negb
push
aas
incl
mov
in
mov
aaa
and
dec
jg
scas
dec
cs
fists
pop
pop
or
daa
nop
xchg
mov
mov
sar
call
mov
mov
insb
or
stos
sbb
mov
xor
stos
adcl
aaa
cmpsb
jne
das
icebp
jmp
cld
jecxz
pop
sub
in
cmp
xor
in
inc
aad
lcall
clc
test
fistpll
in
mov
lahf
push
idivb
nop
in
lcall
xor
lret
mov
mov
xor
faddp
test
mov
lods
cmp
into
jns
and
mov
cmc
dec
adc
in
aaa
add
xchg
outsl
scas
in
es
push
mov
fucomip
pop
jns
mov
cmpsb
call
sti
js
inc
cmp
into
hlt
and
xor
call
iret
or
sub
shll
push
lea
lcall
pop
pop
mov
mov
adc
pop
xchg
inc
jmp
or
jg
pop
xchg
or
xor
movsb
push
outsb
mov
or
mov
fcomps
sub
das
mov
pop
jmp
aad
and
pop
pop
mov
aad
adc
and
stos
fidivrl
cmpsl
jg
cmpsl
jo
popf
shr
push
mov
xor
scas
aad
mov
jp
in
addr16
incl
fbld
insl
xorl
fcom
xchg
rorl
mov
add
mov
shll
dec
sub
xchg
dec
xchg
stc
subb
inc
sbb
aaa
cli
fists
inc
dec
jp
stc
cld
inc
jl
imul
in
fstpt
lcall
mov
in
push
push
inc
cs
mov
jo
inc
inc
out
imul
call
dec
notl
mov
ja
ljmp
icebp
ljmp
or
sbb
clc
adc
dec
push
in
add
movsl
xchg
in
push
lahf
sub
clc
xchg
stc
lods
jns
inc
xor
enter
xchg
jmp
inc
out
sti
repnz
add
fcomp
pop
sbb
scas
mov
pop
movsb
call
mov
mov
dec
mov
insb
ljmpw
mov
jb
lcall
jno
mov
arpl
xor
pop
int
in
or
push
inc
scas
lds
outsb
mov
push
push
adc
aad
add
pop
lcall
or
and
std
dec
aad
sub
add
xchg
sub
aaa
js
hlt
xor
sbb
inc
and
incl
xor
jae
sti
dec
sub
popf
das
xchg
dec
push
loope
inc
aad
mov
dec
add
mov
mov
sub
jg
mov
stc
push
xchg
out
push
rcrl
ret
pop
cli
pushl
rol
outsb
insb
dec
aad
jns
ja
gs
insb
out
lcall
mov
out
adc
addr16
in
loopne
clc
scas
cmp
mov
add
pop
fcmovnb
sahf
pop
lock
pop
fdivr
pushl
cmp
lcall
nop
shl
fiaddl
jns
dec
sahf
mov
mov
mov
lcall
fisttps
dec
jmp
dec
or
sub
adc
xchg
jns
inc
sbb
rcl
or
push
pushl
sti
sub
inc
jne
pop
ss
mov
mov
inc
shl
cmp
jno
cmp
sbb
mov
cwtl
icebp
cmp
fdivs
or
call
outsl
imul
or
sbb
jmp
mov
xchg
xor
push
mov
sub
pop
mov
sbb
pop
or
dec
aam
int3
ljmp
aam
fisubl
sbb
cmp
test
mov
insb
add
stos
lcall
and
cmpsb
movsb
ljmp
fildll
fsubrl
dec
jge
jnp
loop,pt
push
clc
xchg
cli
pushl
ja
and
arpl
stc
push
into
out
lock
popa
sub
call
addl
xchg
push
cmc
xchg
testl
mov
std
incl
andl
addr16
cmp
sbb
adc
pop
shlb
ret
pop
outsb
and
pop
mov
jnp
test
fcoml
jge
hlt
sbb
out
push
stc
arpl
lea
sbbl
add
int3
jbe
and
ljmp
adc
lea
lahf
and
mov
jno
mov
hlt
hlt
call
mov
movb
out
aas
inc
insl
adc
and
shll
mov
lds
push
lcall
outsl
mov
mov
mov
jge
jmp
enter
fstps
pop
mov
scas
ret
movsl
jb
repnz
inc
clc
push
fs
jmp
and
testl
mov
sub
dec
outsb
xchg
xchg
sbb
js
or
fisubs
xor
cwtl
mov
data16
sub
idivb
andb
sti
leave
out
sar
xor
push
adc
loope
ss
xor
xlat
lret
dec
popa
scas
bound
xor
sub
xchg
xor
test
cltd
rclb
punpcklbw
mov
mov
sar
pop
inc
sbb
adc
sarl
das
and
inc
inc
pop
call
test
inc
jg
sub
push
fcomps
and
std
inc
cmp
push
ret
popa
sbb
cld
mov
fdiv
ret
rol
mov
sub
mov
adc
ficomps
fcomip
in
ljmp
bound
xchg
je
hlt
movsb
std
jl
ret
xchg
mov
mov
call
cwtl
dec
mov
mov
xor
in
cmpb
cmp
call
xchg
sub
fwait
jae
mov
js
in
adc
cmp
shlb
das
or
xchg
fcoml
add
xor
lock
jmp
mov
mov
jnp
stos
fcoml
jle
pop
inc
ret
dec
outsb
sbb
xchg
pop
cmp
push
subb
xchg
mov
cmpsl
mov
loope
mov
leave
icebp
fs
jle
sbb
clc
pop
cli
lds
test
pop
fcompp
bound
incl
rol
add
lds
pop
xchg
out
xlat
cmp
imul
ficoms
jno
add
jecxz
add
jmp
ljmp
adc
lods
jle
push
or
test
xor
aam
fstpl
ljmp
inc
daa
mov
rcl
pop
pop
mov
mov
addr16
insl
icebp
call
enter
nop
fwait
jns
push
add
repz
sbb
inc
or
and
out
pop
ljmp
adc
test
loopne
jle
das
pop
cmp
adcl
sti
ret
call
xchg
jne
push
push
xor
add
xor
and
jno
sti
push
imul
clc
xchg
clc
xchg
movsb
mov
stos
sub
movsl
pushl
pop
adc
ret
pop
enter
lret
iret
inc
and
jmp
add
adc
in
cmpsb
lods
cld
pop
in
sarb
push
jle
jp
mov
push
lahf
pushf
cmp
and
pop
and
xchg
fstl
adc
push
pop
ds
lcall
nop
dec
cwtl
pop
xor
or
out
mov
mov
sbb
adc
sbb
test
jp
mul
dec
xor
pop
xchg
imul
add
sbb
pushl
adc
sub
add
sub
xchg
xlat
movsl
outsl
xrelease
push
fcomps
inc
sub
mov
dec
into
test
inc
js
test
movl
call
mov
mov
sub
jbe
imul
adc
mov
inc
and
xchg
std
test
pop
into
sbb
test
jne
ds
cmp
sarl
dec
pop
clc
mulb
rorb
jg
jg
xor
movsl
mov
mov
je
pop
pop
adc
icebp
je
imul
repz
incl
mov
test
jmp
pop
push
xchg
sbbl
xchg
lcall
std
fistpll
call
push
je
cwtl
sbb
push
mov
or
filds
test
xchg
hlt
pop
mov
sbb
clc
pop
aam
leave
call
jmp
unpcklps
lds
insl
inc
adc
pop
and
int3
lea
and
in
clc
inc
adc
movsb
cmp
je
jle
mov
sub
imul
push
inc
sar
pushl
sub
xor
clc
dec
adc
xchg
dec
testb
fsubrl
jne
jmp
add
inc
and
out
cli
mov
and
push
and
decl
sbb
xchg
xlat
stc
jecxz
adc
adc
xlat
and
pushl
fsubp
mov
scas
cmp
arpl
push
fisubrs
xchg
outsl
mov
cmc
or
mov
push
xor
idiv
xor
lods
push
cmpsb
cmpsb
mov
arpl
push
inc
pop
xchg
push
adc
xchg
les
std
incl
fsub
sbbb
fiadds
flds
addr16
xor
mov
xor
dec
enter
test
dec
fidivs
lcall
ja
movsl
or
inc
and
sar
sahf
addl
xor
popf
jle
xchg
call
push
test
xor
pop
mov
add
repz
mov
push
cli
push
insl
or
jno
inc
js
dec
inc
and
cmp
cmc
ljmp
cmp
movsb
cmc
mov
mov
or
loopne
das
lock
fnsave
fwait
cltd
push
sub
ljmp
xchg
sbb
test
pop
pop
test
adc
stc
sar
pop
jae
inc
cmpsl
jmp
xchg
pop
ja
pop
jb
loope
repnz
xor
xor
pop
cltd
push
xor
pop
xchg
lret
movsb
call
in
test
aas
enter
mov
les
lods
or
push
jecxz
mov
push
cs
jmp
std
sbb
xor
jae
scas
add
mov
outsl
push
inc
dec
std
adc
cmp
jg
jo
sbbb
xchg
jbe
filds
mov
jbe
cmpsl
xchg
imul
push
ljmp
inc
mov
mov
lods
andl
sbb
mov
push
stc
incl
lods
cmp
dec
sub
test
inc
push
xchg
call
test
mov
sub
sahf
xchg
cli
lcall
inc
insl
add
ljmp
and
jo
loop
adc
jge
inc
jmp
cli
aaa
push
jno
iret
aad
in
push
dec
mov
stc
and
mov
mov
bound
jo
push
mov
jns
les
scas
rcl
lods
orl
xchg
mov
in
mov
das
cmp
or
ret
adc
or
les
loopne
int
std
dec
xchg
inc
pop
push
mov
inc
daa
mov
jle
add
dec
sti
inc
lcall
loop
inc
xor
xchg
push
pop
loop
jp
jecxz
int
mov
inc
or
and
outsl
cli
incl
sbb
mov
cmpsb
orb
loope
inc
jb
mov
call
sbb
je
xchg
add
decl
jg
mov
insb
andl
js
pop
stos
cld
mov
jle
aaa
clc
mov
fistps
xchg
js
push
daa
sub
mov
cmp
outsl
popf
call
pop
repz
std
sub
and
push
ljmp
xor
imul
leave
jg
icebp
movsl
stos
jg
call
dec
push
push
rolb
cmpsb
dec
inc
jmp
dec
loopne
push
jle
sbb
cltd
mov
sti
lcall
cs
inc
icebp
jns
iret
sbb
mov
popa
aaa
pop
clc
shlb
jle
jb
sbb
xor
les
call
fisubrl
pop
adc
fldcw
insb
dec
and
sbbb
pushl
cli
enter
stos
shrb
popf
inc
dec
inc
pop
mov
xlat
dec
inc
fldt
mov
jbe
movsb
nop
push
imul
xor
push
das
popf
aad
push
cli
jbe
jp
mov
std
dec
cwtl
test
xor
mov
imul
push
cmpsb
xchg
clc
pushl
add
cwtl
cli
cltd
mov
popf
mov
sbb
mov
andl
sti
mov
pop
cli
sarl
cmp
insl
xchg
pop
leave
sbb
xchg
xchg
imul
pop
lret
push
call
rorb
and
sub
inc
mov
lret
call
test
or
inc
pop
notl
jo
adc
cs
mov
mov
jg
add
sbb
jmp
xorb
jg
adc
ss
fmul
mov
sbb
stos
pop
ljmp
scas
aas
adc
loope,pn
dec
mov
cmp
loopne
sbb
js
testl
sub
lods
sub
fmull
imul
lods
add
fbld
imul
pop
stos
shrb
fimull
icebp
adc
adc
pop
cli
jl
push
jae
xorl
mov
out
outsl
cmc
mull
push
adc
dec
cwtl
dec
and
push
leave
push
lret
inc
loope
adc
cwtl
scas
mov
lea
push
call
das
ret
push
inc
xchg
add
cs
sbbl
hlt
mov
jmp
inc
fadds
sti
sub
jge
into
cltd
xor
mov
jnp
sub
lcall
mov
hlt
lods
cmp
dec
aas
repnz
call
into
sbb
add
inc
mov
add
push
iret
loopne
das
pop
faddl
cmc
push
mov
ret
scas
mov
sub
adc
mov
cmp
add
out
out
cld
loope
into
mov
xor
mov
lock
sub
adcb
push
das
cmc
lcall
pusha
repz
jge
fstl
cli
inc
jae
jno
sub
fidivrl
sub
cmpsb
pop
fucom
cmp
cmp
stc
inc
mov
movsb
push
xor
inc
cmc
lea
jmp
sarb
mov
sbb
sti
or
xlat
daa
addr16
call
dec
adc
and
fwait
movsl
popa
sub
shrb
mov
pop
push
in
insl
dec
daa
outsl
jg
dec
inc
hlt
pushl
mov
aaa
xor
cmpsl
xor
pop
push
lock
cmp
pushf
pushf
mov
mov
stos
and
adc
push
sbb
adc
faddl
and
stc
adc
jbe
inc
xor
jle
jbe
stos
das
iret
push
pop
cmp
xlat
scas
test
aaa
xchg
dec
inc
pushl
inc
mov
call
sahf
test
xchg
cli
notb
ljmp
inc
xor
mov
mov
mov
or
js
mov
inc
incl
sarb
je
jl
cmpsb
daa
xchg
jnp
dec
jg
jmp
xchg
pusha
in
xchg
xchg
repnz
fistpl
pop
gs
out
lret
out
sub
dec
lret
mov
jl
mov
or
mov
and
ret
fiaddl
ret
sti
shrb
iret
inc
sarl
lods
mov
pop
dec
fimuls
cmc
inc
mov
sbb
xchg
mov
out
sbbb
pop
rcll
and
loopne
das
lock
subb
mov
rcrl
lcall
jnp
scas
xchg
aas
std
cmpsb
mov
jnp
and
mov
dec
add
test
incl
incb
xor
pop
jae
push
fistl
imul
cmp
ficoml
fmul
outsl
cmc
das
std
mov
lds
testl
jg
je
or
sub
std
das
sub
negb
jnp
les
cld
inc
lcall
pop
fucomi
sbb
fstpl
jg
incl
in
adcl
cltd
mov
push
mov
hlt
decl
mov
inc
sbb
call
inc
nop
mull
dec
fcmove
mov
mov
aas
mov
pop
in
jo
jmp
clc
sub
sub
lock
push
xlat
dec
push
enter
ljmp
mov
fcoml
xchg
xchg
and
pusha
mov
and
into
in
sub
sbb
ror
push
adc
int
pop
add
pop
outsl
jmp
movsl
aas
xlat
clc
inc
adc
enter
jmp
and
in
mov
or
aaa
mov
out
inc
in
sti
fwait
nop
push
push
clc
pushl
sahf
inc
fldenv
data16
andb
rcll
pushl
in
jns
hlt
jge
mov
add
repnz
xchg
jl
pop
add
bound
and
pop
iret
jnp
fldl
mov
fistl
fidivs
mov
or
add
mov
push
mov
dec
pop
outsl
fsubrp
aaa
lods
dec
imul
ljmp
test
ja
out
lea
cmp
mov
lcall
pusha
sti
in
mov
shll
sbb
fucomip
mov
addr16
ret
pop
mov
xlat
jne
sbb
jp
repz
inc
jne
mov
call
mov
mov
jp
or
in
xchg
cli
and
sbb
inc
push
xor
cmp
loopne
xchg
sarb
add
cmpsb
xor
cmp
sbb
mov
scas
xchg
fistpll
xor
xor
shlb
lcall
aaa
mov
cwtl
cmp
pop
xchg
aas
ljmp
mov
sti
rcrb
pmullw
pushf
dec
xchg
daa
push
xor
push
clc
jmp
in
mov
cs
inc
sbb
cmp
mov
gs
jg
xor
adc
mov
add
loopne
imul
fmull
aam
push
incl
les
push
sub
ljmp
sub
mov
dec
pop
jmp
std
shll
xchg
sarl
sbb
ljmp
lret
jmp
xlat
push
lock
iret
push
and
xor
fdivl
shlb
jge
xor
mov
jmp
dec
mov
mov
loopne
icebp
lcall
fimull
sbb
es
out
jns
test
mov
cmp
xchg
inc
shlb
and
add
pushl
jno
in
rolb
scas
pop
push
xlat
in
jbe
adcb
fnstsw
mov
jmp
shll
pop
push
pop
pop
sbb
lods
sub
call
pushl
shrl
dec
adc
mov
leave
add
lret
or
std
incl
out
daa
in
inc
das
xchg
mov
push
hlt
andl
mov
inc
incb
decl
std
dec
cmpsb
dec
mov
jmp
sti
lds
rolb
mov
xor
xor
ret
pop
test
push
jecxz
xchg
xor
adc
inc
mov
push
in
or
add
lds
jl
in
jle
inc
adc
cmpsl
mov
mov
fadds
loope
enter
push
xchg
push
out
push
das
icebp
test
push
push
std
jp
test
inc
mov
mov
jmp
inc
or
pop
jns
xor
incl
add
cmpb
into
push
not
call
in
sbb
sbb
cmp
dec
add
xchg
xlat
ret
mov
notb
lea
dec
mov
pop
inc
pushl
inc
fsubs
jnp
xchg
mov
push
int
jmp
daa
push
movsl
pop
fmulp
xchg
ss
mov
scas
jecxz
incl
pushl
sbb
test
sub
outsl
pop
lahf
jno
cld
ljmp
call
and
adc
jae
pop
inc
or
bound
test
adc
incl
mov
ja
ss
push
imul
clc
lcall
jnp
or
dec
inc
stc
jmp
push
inc
in
cmp
pushl
popf
lock
lcall
mov
mov
dec
arpl
je
call
jmp
out
cli
xor
pusha
xchg
fwait
inc
out
rcrl
ljmp
aam
dec
mov
nop
mov
xor
jmp
sub
sbb
ja
outsl
gs
addb
push
outsl
stos
or
test
inc
lods
fbld
adc
mov
int3
inc
insl
push
aad
mov
fnstcw
aad
sti
fadds
sub
jl
data16
xorl
and
inc
push
repz
out
mov
xorl
and
incl
lods
dec
mov
mov
scas
scas
push
les
scas
decl
jbe
mov
jge
clc
and
fs
mov
sbb
pushl
pop
out
pop
in
inc
pop
pop
popa
lds
js
mov
mov
xor
cwtl
lock
test
or
test
mov
inc
dec
xor
mov
mov
test
addb
jle
pop
push
inc
fs
es
mov
incl
xchg
mov
int
es
xor
addr16
rcl
mov
lods
mov
scas
push
or
mov
adc
xchg
sbb
add
fisubrl
mov
mov
fcompl
je
jnp
push
mov
mov
xchg
in
inc
inc
ja
adc
or
inc
mov
pop
out
or
sub
inc
and
call
jecxz
scas
lods
int3
out
rcll
jns
and
insl
cmp
call
jb
prefetch
testl
rcrl
mov
and
das
mov
mov
cli
fidivrs
push
mov
jno
fistpl
stc
sub
sub
pop
jg
lcall
pop
loopne
mov
test
pop
xor
dec
sbb
dec
xchg
sbb
pushl
sbb
cmpb
sbb
rolb
xchg
ljmp
incl
lods
add
fsubs
stc
scas
lret
mov
mov
leave
and
popa
cli
bound
lock
call
lods
cltd
sbb
inc
stc
mov
inc
pop
adc
jp
jb
sbb
incl
imul
sub
adc
jl
dec
pop
call
ja
push
sub
int
hlt
fmuls
xchg
lds
jmp
outsl
pushl
inc
inc
or
or
es
mov
test
jp
xor
out
mov
clc
test
repz
mov
push
mov
adc
mov
sbb
xchg
lds
sahf
add
sbb
outsb
push
xchg
call
mov
stos
or
sub
hlt
data16
scas
stos
xor
jmp
mov
movsl
mov
mov
aaa
insb
add
adc
sbb
pop
jno
inc
sbb
iret
into
push
adc
and
mulb
mov
clc
mov
rorb
pop
cmp
lods
mov
xchg
mov
cmp
pushl
outsb
arpl
jns
mov
mov
mov
fwait
mov
xor
add
aaa
sub
mov
mov
lock
lcall
or
ret
imul
or
lock
in
xchg
ljmp
or
sbb
lcall
ljmp
jecxz
xor
jno
int3
and
mov
lahf
adc
stc
and
movsl
jne
jle
jg
push
outsl
gs
filds
les
or
les
lcall
xor
jmp
in
sbb
mov
mov
add
fildll
inc
jecxz
xchg
cltd
mov
mov
xchg
push
mov
pop
sbb
cld
int
ljmp
cmc
ret
mov
mov
pop
xor
cmpsb
mov
inc
andl
sarb
outsb
hlt
mov
mov
mull
imul
rorl
decl
sub
sbb
xor
fadds
jl
pop
aam
push
jo
or
ds
mov
decl
mov
lods
cmp
outsb
imul
in
adc
lahf
movsl
dec
adc
jmp
jp
movsl
test
shrb
cmc
sbb
mov
outsl
jo
mov
decl
std
incl
insb
sbb
lea
adc
shrb
add
call
stc
movsl
and
dec
mov
fiaddl
enter
add
mov
lods
fucomip
call
or
adc
or
and
js
decl
out
mov
cmp
shl
ljmp
jmp
sub
mov
or
pusha
mov
adc
leave
mov
das
mov
dec
jns
scas
in
jae
pop
dec
push
or
aad
inc
fs
xchg
ja
insl
mov
mov
lea
or
loop
insl
inc
mov
add
cmpsl
or
mov
xchg
or
mov
pop
movsw
cwtl
xor
lock
inc
pop
pop
mov
xchg
cmc
lcall
mov
xor
gs
es
in
lock
mov
add
jp
out
mov
int3
ficomps
push
dec
dec
or
inc
xchg
mov
cmp
hlt
ljmp
rcr
gs
push
add
ret
add
pop
scas
imul
imul
sbb
cmp
and
sbb
mov
sbbl
xor
xor
pop
les
outsl
lock
pushl
pop
sbb
mov
xor
and
xlat
aad
jp
mov
outsl
icebp
pushl
mov
cwtl
jno
js
and
fsubs
aaa
mov
jno
clc
data16
jp
inc
js
scas
ds
cli
push
jge
dec
jno
repz
ja
rcrb
and
pusha
adc
call
pop
das
popa
pop
test
aam
pusha
xchg
push
xlat
sub
arpl
pop
mov
mov
sub
ss
sbb
sbbl
pushl
decl
in
out
fiaddl
testl
xchg
clc
imul
jmp
repz
sub
stc
jg
iret
pop
xor
sbb
sti
arpl
or
fistpll
add
jge
adc
in
dec
ret
test
cltd
pop
add
jg
pushl
mov
out
popa
sub
adc
sub
pusha
or
rcl
aaa
cli
incl
clc
popa
pop
mov
cmp
mov
cwtl
xor
xchg
cli
aaa
xchg
or
ds
jnp
out
mov
pop
cmc
and
test
lcall
inc
cwtl
shrb
inc
inc
mov
sub
orl
mov
add
sbb
push
leave
pop
imull
sub
bound
fistpll
push
dec
dec
mov
xchg
addr16
xchg
or
lahf
test
push
or
hlt
incl
hlt
cmp
cmpsb
loope
mov
mov
xor
mul
stos
mov
in
cmp
jnp
sbb
aam
mov
in
push
test
ja
mov
aaa
clc
ljmp
out
jns
test
mov
movsl
loope
push
add
mov
mov
xchg
push
push
call
inc
mov
ret
inc
pop
aaa
or
lahf
stc
mov
sub
jg
sbb
sbb
push
sbb
adc
test
pusha
jp,pt
xchg
pop
fdivrs
aad
push
inc
push
gs
sbb
andl
fdivl
fidivrs
pop
daa
xor
dec
jnp
repz
fldenv
add
bound
std
sbb
jmp
inc
or
mov
cmp
jg
mov
pop
or
mov
xor
shlb
arpl
jge
int3
jb
roll
cs
cmp
popa
jnp
mov
lods
pusha
addr16
sbb
dec
xor
sbb
lcall
adc
dec
lds
push
hlt
cld
test
and
cwtl
inc
cmp
xchg
pop
mov
decb
add
std
stos
pop
cmp
jl
jp
cwtl
ja
adc
jo
daa
sbb
ljmp
loop
sub
jns
aaa
adc
jbe
fdivr
ds
pop
ljmp
andb
fisubl
fs
mov
mov
decl
cwtl
lea
push
fidivrs
aas
and
and
inc
mov
pop
mov
pop
sub
inc
pop
out
push
add
aam
xchg
xlat
or
mov
movsb
cld
or
ret
push
fucomip
shrl
xor
out
movsl
dec
inc
outsb
ret
or
lcall
adc
data16
and
cwtl
fstps
or
popf
and
icebp
shlb
push
notl
lock
loop
decl
rcll
dec
xor
lret
add
in
jb
add
out
insl
mov
fidivrs
or
pop
cli
xor
in
fiaddl
pop
dec
push
cltd
mov
dec
xor
xchg
and
outsl
pop
aas
sarl
fistpll
lods
push
and
out
test
loope
jmp
inc
in
jo
sub
push
and
pop
lcall
lods
fs
arpl
jmp
iret
outsb
xchg
xor
add
mov
ret
adc
movsl
stc
mov
mov
inc
decl
test
pop
int3
sahf
push
push
ljmp
hlt
aaa
and
testb
inc
dec
and
test
jne
push
sub
decl
cld
jmp
add
scas
popa
aad
out
movsl
stos
or
mov
movsb
gs
lock
cli
dec
mov
push
cs
ss
adc
dec
test
ljmp
fisttps
inc
nop
or
call
addr16
mov
incl
inc
mov
loopne
dec
loop
mov
xlat
mov
fmuls
pop
fdiv
and
cmpb
dec
xor
mov
push
fsubl
sub
cmpl
and
xchg
iret
jne
popa
jno
lds
ret
jne
bound
test
and
pop
add
push
into
data16
push
mov
lea
clc
call
cli
inc
pushf
inc
imul
sub
inc
iret
cld
call
dec
push
pop
sbb
cmp
aas
cltd
insl
push
jo
daa
jle
add
ljmp
cmp
inc
adcb
push
sub
jmp
sbb
or
inc
bound
in
inc
pop
cli
jmp
and
xchg
nop
cld
scas
cltd
inc
adc
out
mov
or
cs
flds
jg
pop
pop
imul
jp
mov
movsl
les
pusha
cmc
adcb
lock
xor
in
dec
adc
jnp
adc
call
pop
mov
sub
hlt
sbb
test
cld
gs
xchg
mov
stos
jmp
push
dec
sbb
jne
push
fsubs
inc
shlb
mov
mov
test
mov
jg
and
push
repz
cltd
idiv
popf
stos
inc
cmp
in
fcos
mov
push
jne
enter
xchg
mov
sbb
dec
pop
xor
add
mov
cli
lods
mov
ljmp
ljmp
lcall
push
pop
insl
pop
xchg
adc
jne
dec
lcall
call
lods
mov
ret
or
das
xchg
xchg
xchg
add
decl
lcall
dec
sub
mov
out
call
mov
loopne
cld
mov
pop
int
sbb
aaa
pop
push
xchg
inc
stos
lods
arpl
jg
call
mov
sarl
pop
push
xor
and
imul
or
aaa
ds
inc
push
fistps
xchg
and
imul
das
loopne
sahf
add
std
inc
mov
mov
cltd
subl
bound
lahf
call
cwtl
setae
and
mov
dec
or
inc
cmpsl
mov
xchg
outsl
push
clc
scas
in
das
sub
mov
mov
repz
das
mov
fisubrl
sarl
jmp
mov
xchg
xchg
jmp
push
fdivl
bound
ljmp
loopne
and
cmpsb
arpl
mov
call
fisubrs
xchg
push
push
cmp
popa
mov
jp
sbb
ljmp
push
decb
lock
les
decl
inc
add
shrb
loopne
sub
pop
sbbl
aam
fwait
sbb
clc
jg
loope
arpl
out
les
fistl
lahf
cmp
push
jg
pushl
clc
mov
lods
loop
adc
mov
jae
mov
pop
cli
outsl
cmp
out
push
jno
repz
sbb
pop
cmc
dec
outsl
ljmp
push
cmp
adc
and
mov
xchg
test
and
xchg
mov
popa
xlat
sub
mov
push
pop
push
test
ljmp
or
sub
jne
ret
popa
adc
mov
dec
sbb
mov
push
pop
ljmp
mov
mov
xchg
ds
pop
dec
psubb
inc
cmp
out
hlt
lret
adc
push
mov
sahf
fisubrl
pushl
add
into
jge
adc
jmp
mov
decl
jl
pusha
stos
or
loope
andl
pop
add
stos
loopne
jbe
imul
ljmp
jbe
jl
aaa
sarb
cmp
mov
outsb
sti
sub
pushl
sbb
mov
inc
fbld
mov
pop
out
xor
rol
decl
pop
inc
inc
adcl
adc
sbb
push
xchg
mov
jnp
xchg
incb
lock
and
loope
cmp
lcall
and
jmp
stc
jo
add
sbb
fs
inc
mov
fcos
cmp
out
mov
rclb
or
push
mov
addr16
and
mov
mov
nop
popf
mov
or
aaa
test
add
jp
iret
jmp
mov
arpl
scas
mov
lahf
cmpsl
sbb
add
jmp
lcall
jo
mov
mov
add
dec
and
aaa
fildl
out
and
rcrl
iret
pusha
sub
mov
dec
adc
lahf
pop
mov
mov
lds
ljmp
mov
insl
inc
adc
aas
jb
or
repnz
lods
ljmp
pushl
mov
mov
in
call
call
adc
inc
xchg
and
mov
test
or
dec
shrb
fistl
test
mov
mov
shlb
decl
mov
dec
or
cmc
pop
loop
adc
or
mov
scas
decl
sarl
xor
scas
and
inc
fisttpll
dec
out
pop
or
out
sbb
mov
xorl
xor
cwtl
cmpsb
add
sub
pop
mov
movsl
mov
imul
in
int3
mov
and
daa
cmp
fnsave
cmp
out
pop
mov
or
adc
push
mov
or
sar
jmp
pushf
dec
add
xchg
adc
mov
ret
nop
push
mov
cs
xchg
dec
dec
mov
cli
test
ljmp
imul
lret
xor
inc
xchg
loop
cli
pushl
mov
pop
scas
xor
xchg
push
loopne
jle
push
pop
rcrb
mov
xor
fwait
stc
pop
mov
test
sub
push
pushl
mov
shll
test
movsb
cwtl
stos
pop
data16
inc
aad
ljmp
cmc
fucom
jne
sub
cmpsb
and
andb
dec
pop
push
testb
xchg
lcall
pop
stos
add
dec
call
decb
cmp
jnp
stos
or
test
clc
incl
sub
mov
adc
sbb
mov
imul
xchg
xchg
xor
cmp
add
adc
sti
outsb
dec
fiaddl
xor
adc
inc
popa
cmp
fs
inc
xor
call
decl
mov
push
or
cmp
outsl
dec
cmp
mov
inc
in
bound
or
hlt
int3
in
mov
ljmp
mov
lods
sub
jns
in
xchg
inc
or
popa
jp
repnz
incl
mov
mov
sub
ret
outsb
testb
std
incl
test
adcl
sbb
dec
xchg
push
fcmovnb
incl
mov
sti
js
mov
jne
inc
and
shl
push
sub
cmp
jl
adcl
fcoms
xchg
add
xchg
in
push
lds
in
or
outsb
push
xchg
dec
or
pushl
sbb
and
int
das
jp
imul
sub
jge
sbb
pushl
lods
dec
xchg
xchg
xchg
push
das
push
mov
nop
mov
pusha
pusha
add
mov
mov
push
lret
cmp
adc
xchg
jmp
inc
test
ret
test
or
xchg
popf
imul
ficoml
adc
cs
loop
call
jmp
sub
test
jns
inc
imul
mov
sbb
pop
std
jg
mov
inc
cmp
test
sar
decl
cld
pushl
or
ret
jmp
cmc
mull
add
repnz
cmp
and
jmp
push
dec
and
nop
push
lcall
ja
push
jle
push
xchg
lock
jnp
insl
pop
mov
into
sub
mov
or
ficompl
cld
movsl
out
std
add
jecxz
cmpsb
rorl
cmpsb
xchg
ds
dec
sbb
pop
inc
mov
inc
loopne
cmp
sub
mov
jle
inc
into
dec
pop
dec
pushl
push
sar
pop
std
mov
pop
sub
out
cwtl
les
loop
lea
rcr
lret
das
repz
dec
push
cli
push
js
push
out
sub
push
lcall
cmp
adc
stos
daa
xchg
das
or
ja
jg
sbb
loope
repz
mov
data16
adc
ljmp
sub
mov
mov
or
jo
inc
mov
cmpsl
stos
xor
jb
rclb
mov
lahf
cmp
inc
fcoml
test
xor
mov
lret
dec
push
imul
call
call
pop
xor
mov
cmp
jns
dec
pushf
pusha
in
stos
mov
lcall
or
or
out
and
mov
cwtl
rol
repz
lahf
dec
jle
inc
push
lods
and
daa
mov
rorb
sbb
lcall
imul
mov
fcmovnbe
inc
and
pop
fld
add
inc
push
loopne
pop
and
shlb
pop
mov
mov
out
xchg
jnp
mov
hlt
xchg
mov
lahf
dec
mov
push
out
movsl
call
loop
imul
test
insb
idivb
dec
push
fs
jge
incl
pop
pop
sbb
fwait
jecxz
data16
in
sarb
lods
xchg
xor
mov
sti
rcrb
pop
fistl
push
pusha
outsl
cld
or
adc
inc
gs
std
sub
dec
jecxz
loopne
outsl
hlt
jmp
movups
mov
in
pushf
lods
ds
or
jb
mov
enter
decl
or
sbb
movsb
push
cs
sbb
pop
sub
inc
fsubl
std
inc
or
or
aad
leave
push
sbb
lcall
push
adc
fistl
addr16
icebp
mov
imul
sar
pushl
arpl
dec
pop
lret
icebp
std
ja
mov
jmp
and
mov
and
inc
jmp
scas
fstps
mov
sti
mov
dec
popf
inc
push
and
mov
daa
pushl
mov
aas
jl
clc
sbbl
jg
xor
leave
scas
jns
dec
cmp
push
aad
pop
out
jmp
outsl
push
sbb
shlb
pop
lods
mov
cmpb
outsl
mov
icebp
ja
dec
adc
push
pusha
push
mov
ret
sbb
mov
addl
jle
mov
icebp
add
sarb
ss
pop
inc
jmp
xchg
clc
jp
sub
ja
push
lret
lcall
sti
call
aas
sbb
ficoms
gs
pop
cli
and
call
movsb
imul
shr
inc
insb
pop
in
insl
loope
and
xor
adc
decl
sarl
xchg
imul
push
sub
dec
push
sar
jmp
xor
imul
xor
and
out
xchg
jne
cltd
adc
mov
pop
dec
jge
jo
mov
dec
bound
js
jl
add
nop
mov
sbb
adc
push
add
inc
mov
imulb
sbb
push
in
sbb
jbe
mov
cli
ljmp
adc
cmp
dec
dec
add
lcall
in
add
incl
add
xor
pop
lret
push
and
and
mov
mov
push
and
outsl
cmc
jg
mov
jb
jge
add
jnp
in
push
jg
lcall
ret
imul
pop
roll
push
add
cmp
jg
dec
cmp
lret
mov
pop
fxch
sahf
mov
loope
sbb
jmp
fstl
mov
aas
lcall
add
and
call
cmp
jo
xchg
and
sub
outsb
lcall
ljmp
sub
jp
mov
sub
xchg
mov
mov
or
dec
outsl
mov
outsb
pop
and
int
call
add
repnz
mov
lds
lret
stc
push
cmp
cmpsb
adc
push
sbb
lcall
test
pop
xchg
mov
clc
or
push
cmpsl
cmp
pushl
gs
hlt
jbe
mov
repnz
sbb
dec
in
sahf
add
sub
sub
das
cld
ds
loope
push
repz
dec
icebp
decl
std
push
push
jne
divl
in
jg
mov
jl
rcrl
or
outsl
lock
push
xor
xchg
movsb
sub
dec
std
decl
scas
ljmp
movsb
xchg
sub
imul
xchg
jnp
movsl
fildll
push
mov
push
pushf
jmp
jne
mov
mov
or
in
lock
pop
frstor
mov
jmp
lcall
sahf
call
js
addr16
xchg
imul
outsl
pushf
xor
jle
sub
mov
test
nop
pusha
jbe
mov
or
rolb
pop
jo
movsl
pop
aam
push
sbb
lods
mov
out
jb
sub
insl
xor
call
les
cmp
push
and
mov
inc
int
push
or
cmpl
xchg
mov
push
sti
gs
push
mov
pushl
sbb
stc
dec
std
popa
sbb
push
push
sub
sarb
out
scas
fildl
push
pop
mov
dec
dec
jmp
add
sub
bound
loop
das
jne
ljmp
out
decl
xchg
mov
lds
push
mov
pop
push
lret
test
mov
inc
gs
shl
jg
inc
js
aam
xchg
aas
dec
inc
add
loop
add
dec
sbb
ljmp
inc
repz
cmp
jmp
test
add
subl
pop
lds
imul
fdiv
std
sbb
decl
aas
test
adc
mov
sbb
mov
mov
push
outsl
lock
fsubrl
sbb
aad
sub
inc
clc
fcoml
fstl
js
leave
pop
dec
stos
ficoml
stos
jle
mov
jbe
and
pop
ljmp
mov
pop
int
shl
mov
mov
pop
push
mov
iret
mov
and
xchg
push
xorl
inc
fnstsw
push
sub
jmp
call
fiadds
cmpsl
jne
add
adc
int
or
call
enter
add
mov
hlt
retw
mov
mov
xlat
roll
iret
lock
in
adc
movsb
mov
sbb
daa
and
xor
cmpsb
jbe
jg
decl
push
xchg
inc
pusha
mov
xor
pushf
push
iret
xchg
aad
push
sbb
je
ljmp
js
cmc
jg
shll
test
shrl
mov
sub
clc
xchg
mov
ljmp
mov
lea
mov
and
pop
or
imul
stos
outsb
mov
dec
cmp
push
xchg
xchg
rcll
ja
mov
cld
imul
sub
sahf
xor
out
outsb
inc
ficompl
or
loopne
mov
push
test
cld
xchg
mov
addr16
xor
loopne
ljmp
pop
mov
mov
and
mov
jge
cmp
ja
pop
push
mov
idivl
inc
decl
fsubl
push
mov
mov
mov
pop
mov
lcall
in
mov
mov
cmpsl
jb
ja
dec
cmp
adc
mov
add
and
push
or
inc
out
mov
pop
xor
and
cmp
sbb
or
xor
sub
lcall
push
and
mov
stos
xchg
gs
adc
jl
ds
ljmp
js
adc
mov
js
jecxz
cmp
cwtl
haddps
mov
cwtl
add
mov
nop
mov
cmp
out
and
ud0
call
inc
sti
inc
jp
jl
add
mov
pop
gs
insl
sarl
sbb
js
lea
jg
psubd
inc
xchg
je
mov
stos
loopne
jg
or
mov
cmpsl
push
mov
sbb
sub
mov
jge
nop
inc
pop
dec
jl
popa
push
in
sub
dec
mov
call
push
mov
andb
push
fsubr
cmp
mov
out
xlat
or
mov
bnd
je
vaddss
clc
stc
daa
push
inc
outsl
xor
dec
sahf
pop
pop
clc
lcall
jne
loopne
std
jne
ja
je
out
inc
adcb
pop
popf
jle
mov
adc
pop
add
inc
xchg
dec
push
xorb
dec
flds
jle
mov
lea
jb
add
lret
imul
clc
decl
adc
sahf
sbb
adc
ljmp
adc
rcrl
sbb
mov
and
mov
add
and
movsl
jo
jecxz
push
inc
stc
mov
or
xchg
push
or
mov
dec
std
shll
inc
cmp
pop
popf
cmp
mov
aas
ret
in
mov
call
mov
addr16
jecxz
shlb
mov
nop
mov
test
les
dec
rclb
test
add
lock
lcall
add
call
mov
insl
xor
fadd
lcall
cld
aaa
fsubrs
filds
xchg
push
push
fidivrl
pop
pop
clc
div
push
or
and
fisubrs
pop
pop
cmc
out
incl
fsubl
mov
sbb
fdivrl
fdecstp
pop
ds
xlat
jg
fnstsw
pop
xchg
jnp
jmp
mov
inc
ret
push
mov
xor
jge
xchg
jb
es
push
loope
jnp
rcrb
pop
call
adc
addr16
or
ljmp
int
xor
cmc
pushl
ret
rcr
fs
lret
lock
in
jbe
pushl
push
mov
mov
repnz
hlt
mov
xchg
push
imul
lcall
adc
xchg
test
inc
xor
mov
add
cmc
sbb
push
mov
xchg
push
sti
imul
pop
loopne
add
rcrl
mov
mov
lcall
cld
popf
in
sub
sarb
push
leave
xchg
jmp
movsl
orb
dec
xor
enter
loopne
scas
clc
fsubrl
dec
gs
loope
mov
test
mov
lahf
mov
ljmp
pusha
pop
jo
je
ss
fisubrl
mov
cltd
lret
cmovle
mov
push
repz
test
and
cmpsl
pop
in
pushf
pop
pop
and
ret
pop
insl
cmp
jg
das
mov
sbb
imul
push
out
cmp
cld
out
xor
incl
pop
cmc
outsb
mov
int3
mov
cs
les
pop
loop
sti
pop
xchg
subl
mov
cld
inc
roll
and
mov
push
push
xchg
outsl
xchg
enter
inc
adc
xor
stos
cs
ljmp
adc
dec
loope
popa
aas
movsb
aad
imul
and
loopne
insb
add
cmc
mov
jmp
lds
xor
or
cmp
mov
mov
lds
jbe
add
inc
into
and
jg
mov
fxch
jmp
and
test
test
or
sbb
fisubs
add
sbb
ljmp
les
movsb
xchg
orb
xor
pop
leave
ret
dec
lcall
pushl
push
cmp
je
in
je
inc
sub
sub
stc
adc
dec
stos
sbb
inc
daa
xor
jle
mov
ljmp
loop
fwait
lock
pop
mov
sar
push
mov
std
in
or
rclb
incl
dec
addr16
cmc
cmp
jo
out
movsb
dec
adc
jbe
arpl
jmp
xor
out
xor
sbbb
cmpsl
sub
or
mov
pusha
and
cld
mov
outsl
inc
sbb
fmull
das
mov
adc
sahf
popa
cmp
ja
dec
stos
fxsave
mov
xchg
push
mov
and
cmp
out
adc
ror
ljmp
xor
fcompp
pop
stc
outsb
pop
jno
les
push
sub
shll
mov
test
xlat
dec
cmp
lret
jmp
jmp
fdivrs
jo
jg
dec
mov
call
inc
int
mov
jle
imul
cmc
decl
pop
mov
mov
dec
xchg
js
in
and
pop
xchg
mov
xchg
cli
ds
loopne
dec
push
push
jb
and
or
in
ret
push
jecxz
iret
pushl
push
lahf
fisttpl
jno
inc
add
in
xlat
xchg
loope
xchg
inc
and
daa
fcmovu
sti
pushf
das
hlt
fistpll
inc
addr16
ret
cmp
mov
mov
push
mov
lock
mov
push
rcrb
popa
inc
jle
and
iret
xchg
leave
dec
sub
xchg
inc
adc
dec
sbb
push
and
xchg
jg
push
int
push
shlb
mov
ret
mov
xchg
call
fwait
aam
call
ljmp
push
or
not
sub
fcompl
xor
dec
pop
aaa
lcall
andb
pop
jnp
fdivs
inc
adc
test
mov
ret
xchg
or
xor
sub
pop
popa
outsb
ficompl
push
adc
rcrb
les
cwtl
fdivs
lods
fmuls
icebp
test
lock
les
cmpsl
std
mov
xlat
mov
cmc
dec
out
xor
out
dec
push
data16
test
test
cwtl
rclb
jne
jnp
jg
icebp
int
mov
ret
add
cmpsb
dec
mov
mov
mov
lcall
sub
or
push
jae
mov
push
cmc
in
pop
mov
ljmp
xchg
xor
adc
loopne
imul
aam
pop
leave
movsb
pop
daa
ror
test
popf
frstor
mov
xchg
add
in
xor
add
out
cli
int3
stos
adc
and
xchg
pop
repz
insl
imul
mov
push
inc
jne
aas
out
lret
stos
ror
mov
inc
icebp
xor
inc
out
test
dec
hlt
add
lret
pop
jle
jmp
popa
or
call
ds
mov
aam
decl
mov
ja
push
jnp
pop
mov
push
out
fcmovnu
jle
xor
mov
icebp
jnp
inc
sub
ret
sahf
call
movsl
sub
jns
cmp
gs
out
mov
xor
jmp
fiaddl
subb
mov
lods
xor
aas
pop
hlt
cwtl
sbb
rcrl
jecxz
mov
icebp
pop
mov
outsl
sub
push
out
lret
or
ljmp
gs
mov
cwtl
push
sbb
push
movsb
or
mov
jge
ljmp
lods
aad
xor
fdivs
jecxz
xor
arpl
jle
lock
movsb
hlt
incl
test
push
lods
push
hlt
adc
aas
jns
ds
insl
adc
xchg
xchg
mov
movsb
fimuls
mov
popf
pop
jno
lock
stc
ficoms
orl
mov
cli
dec
call
nop
les
mov
clc
cmp
aaa
xchg
out
inc
hlt
mov
push
xchg
inc
cld
jb
push
adc
rorb
sub
int3
dec
jecxz
cmpl
mov
ss
inc
je
sbb
dec
cmpsl
adc
rol
pusha
pop
pop
call
xor
push
dec
scas
in
decl
push
aas
adc
std
and
cmpsb
jne
add
in
jne
mov
outsl
jmp
push
call
sub
js
scas
enter
jnp
sarb
call
shlb
or
xor
lock
pop
sbb
ljmp
add
sbb
xchg
cs
cli
mov
add
jg
sbb
out
cmpsl
mov
aas
mov
loope
or
and
imul
push
sbb
push
aaa
cli
or
cmp
cld
dec
jb
ror
mov
mov
jmp
push
cmp
inc
daa
mov
pop
mov
pop
in
jne
lcall
testb
push
xchg
iret
and
or
aas
sbbb
das
cld
scas
ret
nop
movsb
cmpsb
mov
mov
pop
aaa
sub
fcmovnb
or
in
cmp
xor
ljmp
sub
cmp
mov
inc
pop
push
jb
fdivl
sti
lcall
mov
dec
lock
cltd
int
lods
stc
mov
sbb
out
xchg
repz
lret
ss
pushl
test
icebp
pop
mov
xchg
sarb
sbb
test
mov
dec
imul
pop
fsubr
aaa
mov
into
inc
fadds
mov
inc
mov
lds
lods
sbb
push
loopne
stos
dec
mulb
push
mov
mov
mov
stos
lcall
mov
jbe
push
popf
mov
mov
decl
mov
xchg
push
sti
jl
mov
adc
lcall
or
xchg
roll
mov
outsl
inc
cwtl
xor
rolb
mov
test
loope
loopne
call
in
sbb
add
data16
mov
pop
mov
dec
jo
xchg
mov
fistpll
mov
cltd
aas
les
push
incl
int3
aaa
subl
or
push
sub
shl
jl
fisubs
inc
out
ficoml
rorb
sbb
pushl
mov
dec
xchg
scas
mov
inc
xchg
jns
or
cmpsl
sbb
ds
stos
jge
lcall
das
je
aad
and
scas
movsl
aam
jmp
xchg
mov
or
mov
jecxz
in
movsl
sub
clc
mov
push
push
push
or
pop
jg
dec
mov
shrl
xchg
jo
adc
sti
sub
movsl
push
inc
xchg
sahf
ljmp
push
test
push
test
push
add
inc
push
lea
scas
es
sti
in
fs
mov
insl
mov
pop
add
xor
fadd
jo
incl
out
add
jp
dec
jl
je
xchg
xor
rcrl
in
jne,pt
fs
decl
jmp
mov
jmp
mov
cmp
push
sub
rcrb
push
push
jg
dec
call
loope
int
loop
mov
call
sar
fwait
xchg
test
inc
jnp
jl
sbb
sub
jno
cmp
mov
call
mov
notl
das
insl
mov
popf
movsl
cmp
sbb
bound
inc
out
popf
xor
xlat
dec
clc
cmp
mov
mov
dec
ds
mov
cmpsb
mov
and
jg
jmp
xor
jmp
xchg
mov
inc
les
stc
insl
fdivr
fwait
mov
loop
lock
mov
add
jo
and
cs
ljmp
mov
cmpsb
push
rol
xchg
dec
inc
addr16
clc
dec
push
out
xchg
sahf
or
call
clc
lcall
hlt
inc
inc
dec
push
insb
outsl
test
cmp
clc
mov
dec
sub
loopne
jp
sub
dec
and
gs
cli
ljmp
cmpsb
or
les
std
movsb
test
pop
jecxz
push
dec
add
xchg
push
shll
adc
add
mov
icebp
pop
loopne
mov
mov
cmp
mov
sti
jmp
xor
mov
adc
fldenv
dec
in
test
push
xor
out
outsb
icebp
fcmovnu
hlt
mov
cmp
adc
fwait
iret
in
mov
mov
incl
jo
orb
mov
mov
out
xor
in
cmp
jnp
mov
addl
and
cmpsb
push
out
xchg
pop
cwtl
scas
adc
jmp
mov
and
add
inc
push
sarb
sbb
in
iret
icebp
mov
jecxz
out
fisubs
cli
adc
mov
mov
int
mov
inc
cld
jg
cmpsl
lret
inc
aas
rcll
aaa
xorb
std
call
arpl
pop
hlt
call
stos
es
cld
jp
in
mov
inc
addr16
jno
lock
add
cmc
jg,pn
enter
inc
fst
sbb
and
fstpt
xlat
pop
push
mov
stos
cltd
xchg
stos
aaa
mov
ja
aam
cmp
scas
cmp
decl
hlt
in
fs
sub
inc
jge
push
movsb
sar
pushl
mov
push
into
hlt
push
ret
sbb
fwait
icebp
stos
jg
mov
pop
js
cmp
jle
jmp
aam
call
movsl
mov
outsb
jge
push
mov
hlt
ret
psllw
pop
inc
outsl
jmp
mov
xor
adc
jb
jmp
inc
cmp
fld
jmp
test
mov
xchg
cmp
xorb
pusha
lcall
mov
aam
push
decl
xchg
fwait
cltd
cmp
test
arpl
ljmp
je
and
jbe
jp
mov
xor
and
xorl
cld
dec
nop
into
mov
inc
rsm
out
jne
clc
push
pop
mov
xchg
lcall
pop
xchg
test
push
xor
pop
push
hlt
aam
mov
scas
pop
pushl
aaa
dec
out
cmc
jae
push
or
sbb
mov
sub
test
dec
lcall
mov
dec
es
cmc
sub
cmp
push
dec
lret
mov
data16
ljmp
and
mov
imul
mov
jnp
aaa
cli
decl
jo
or
call
imul
xor
mov
icebp
dec
fldcw
dec
push
pop
dec
cmp
mov
push
sar
jne
and
mov
pop
rcrb
mov
dec
pop
pop
xlat
repnz
std
pop
push
das
xchg
test
das
pop
loopne
pushl
in
mov
mov
jl
push
movsl
pop
nop
lret
inc
jno
xor
push
mov
and
ds
jg
in
ljmp
decl
jbe
dec
hlt
mov
inc
mov
mov
add
ret
adc
mov
or
xchg
or
jmp
cmc
loop
adc
inc
sub
rcrb
xorb
mov
js
pop
push
adc
aas
and
dec
and
enter
outsb
cltd
std
lea
adc
icebp
push
testl
or
mov
leave
int3
or
ficomps
loope
mov
xor
jmp
enter
xor
jnp
in
mov
jmp
fnsave
and
jnp
add
das
dec
xchg
arpl
lcall
incl
push
xor
add
popf
call
jae
data16
or
jl
gs
adc
mov
and
sub
ret
ja
pusha
bnd
lcall
jmp
xchg
push
mov
jmp
xor
cmp
xchg
mov
call
jo
test
out
mov
dec
add
or
sub
mov
mov
cld
fsubs
pop
sub
inc
mov
xlat
fstl
decl
or
push
out
mov
mov
mov
jae
ljmp
cmp
adcl
mov
negl
xchg
ja
mov
icebp
sbb
xchg
das
sti
jg
jg
insl
mov
pop
mov
daa
call
xchg
jge
mov
cmpb
push
inc
lret
std
dec
pop
cmp
incl
xor
sub
lret
mov
mov
push
popa
sub
loopne
ffreep
fmull
rclb
jnp
jle
ret
and
cmc
add
incl
push
jecxz
mov
jbe
std
in
arpl
mov
jg
sub
sahf
dec
int3
in
jbe
mov
and
les
dec
decl
mov
jle
lea
lock
outsl
dec
dec
fnstsw
stc
sub
and
push
dec
adc
mov
inc
xchg
or
pop
into
sbb
cwtl
inc
aam
jae
decl
sbb
add
jle
aaa
push
cmp
dec
mov
decl
mov
push
es
dec
jecxz
jmp
outsl
cld
pop
mov
push
shll
inc
fldcw
fldcw
in
lcall
lea
in
xchg
inc
pop
sub
jno
jnp
sub
lock
movsb
lahf
sbb
lcall
loopne
cmpsl
push
jg
js
aaa
ljmp
or
lcall
cld
pusha
xchg
data16
mov
sbb
int
mov
clc
xchg
int
inc
cmp
mov
and
push
call
addr16
add
inc
lock
aaa
inc
lcall
add
lcall
pop
dec
imul
fs
outsl
jg
add
clc
sbb
xlat
pop
or
rclb
call
fstpl
scas
pcmpgtw
adc
popa
mov
aas
and
mov
bound
lods
call
add
test
cmp
out
push
xchg
movsb
ds
cli
or
imul
xor
out
push
adc
movsl
mov
aad
cmp
repz
sbb
insl
push
push
pop
jo
jno
sub
pushf
std
movsl
pop
call
push
mov
and
lock
or
insb
jbe
mov
xor
cli
sub
adc
outsb
cmp
into
jno
pop
jp
fists
std
xchg
cli
jno
in
or
jge
hlt
xchg
mov
cld
decl
xchg
jae
pushf
cmp
daa
xchg
clc
dec
jnp
lods
in
decl
adc
push
add
in
cmp
in
cwtl
fwait
daa
aas
aaa
cmc
push
icebp
xor
inc
inc
mov
sub
pop
icebp
mov
inc
das
mov
lahf
sbb
popf
ss
clc
cmp
inc
int3
inc
cld
out
outsl
mov
cltd
in
sahf
sub
adcb
push
push
pop
lret
stos
loope
int
dec
cmp
call
aas
dec
scas
repz
push
mov
jne
sti
rcr
inc
jge
or
lcall
push
jecxz
lds
xchg
mov
fdiv
jne
call
push
bound
mov
cmp
sub
rcrl
cmpsl
add
lcall
cmc
xlat
jle
inc
push
aam
movsb
fldl
cmp
add
push
push
jo
cmp
out
pop
shlb
testb
xor
push
fildl
dec
addr16
test
jbe
into
jo
ljmp
ljmp
adc
aaa
push
stos
xchg
stc
inc
loop
xchg
or
mov
dec
cmpb
mov
test
bound
dec
sbb
in
fsubr
dec
imul
push
mov
add
inc
fistpll
sbbb
cmp
das
cmc
xchg
repz
jp
ds
jae
mov
dec
mov
dec
lds
clc
lcall
adc
loop
fldcw
int
adc
sbb
push
pop
pop
aaa
jge
repz
out
mov
fiaddl
adc
sub
jbe
scas
jno
mov
leave
in
jno
jecxz
mov
shrl
mov
into
mov
subb
ds
mov
jno
cwtl
pop
es
sub
jg
jne
outsl
ljmp
out
fdivrl
push
ljmp
inc
lcall
jbe
inc
jnp
jns
mov
enter
mov
outsl
pop
pushf
std
gs
mov
fnstcw
lahf
out
inc
jecxz
jle
lods
mov
pop
pop
nop
ds
decl
cmpsb
popa
loop
orb
out
movsb
jne
sub
dec
movsl
mov
xlat
adc
adc
dec
cld
ljmp
push
adc
jp
filds
loop
or
mov
incl
test
cmp
jns
lahf
repnz
or
jle
shrb
sbb
jns
pushl
cmc
ljmp
hlt
test
cwtl
in
cmp
adc
repnz
movsb
xor
aaa
xchg
pushl
in
int3
lods
mov
adcl
outsl
cld
incl
inc
lods
adc
int3
call
jp
dec
mov
jno
decl
test
add
jbe
sahf
mov
fdivrs
mov
ljmp
mov
and
movsb
mov
or
aam
xchg
mov
push
shr
in
les
adcb
frstor
pop
int3
cli
subl
mov
imul
aad
sbb
and
sbb
mov
stos
shlb
inc
cmp
jmp
inc
rcl
cmc
sbb
jb
or
pop
cli
cmp
dec
fs
cmp
mov
cmp
loopne
ds
shl
adcl
and
dec
test
lcall
adc
addr16
incl
jmp
fiadds
addr16
or
andb
jg
inc
jae
jp
mov
add
or
and
stos
mov
add
insb
dec
cmpsb
lds
sbb
pop
lds
hlt
sub
stos
push
or
ljmp
std
or
fstl
clc
jge
push
loopne
or
cmp
ja
mov
ljmp
fistpll
lds
sub
insb
mov
dec
addr16
jmp
clc
jmp
ret
enter
jne
or
sbb
lret
cmp
cld
pop
cli
fistpll
jecxz
push
out
dec
cmp
in
shl
mov
leave
adc
jge
decl
pop
orb
ds
test
jns
cli
jbe
jge
push
incl
pop
out
loopne
loopne
and
pop
sbb
pushl
bound
hlt
ljmp
push
mov
mov
ds
adc
addr16
lcall
fdiv
jo
out
mov
cwtl
leave
fwait
xchg
test
or
jb
jmp
pop
leave
ret
push
stos
cs
xchg
aam
test
xorb
cmp
sub
hlt
dec
cmpsb
lock
dec
xor
repz
adc
cmp
dec
lret
sti
adc
add
mov
push
xchg
jno
mov
jmp
dec
push
js
and
xor
call
mov
aad
imul
ds
lea
and
push
in
adc
xor
or
popf
fsub
cmp
bswap
loopne
pop
clc
decl
or
ret
mov
or
mov
jecxz
ljmp
pop
out
dec
jns
outsb
out
sti
cmp
insl
gs
iret
mov
fistpll
je
imul
fists
jl
cmc
ljmp
xchg
popa
popf
cwtl
sub
aaa
call
in
push
test
mov
xor
jbe
loopne
sbb
inc
out
mov
or
mov
pushl
aaa
pop
dec
and
inc
push
sbb
jmp
loop
out
cmpsl
add
incl
cmp
aaa
fidivl
loopne
fistps
movsb
ljmp
sbb
push
decl
std
mov
repz
xlat
xchg
dec
pop
lcall
jg
mov
popl
movsl
mov
sbb
xor
loop
into
aaa
push
xor
ljmp
gs
cwtl
adc
inc
lds
mov
and
inc
mov
rcll
xchg
int3
imul
jmp
sub
xor
enter
mov
adc
insb
push
cmp
sbb
jg
mov
out
xchg
jmp
idivl
cmp
ficoms
loopne
dec
xchg
das
sbb
xchg
and
outsb
lds
push
sub
and
aaa
pop
das
cmp
pop
cmpsb
mov
jo
adc
cld
and
incl
pop
shlb
push
int
ljmp
mov
test
rolb
rolb
loopne
call
mov
mov
out
and
lcall
add
andl
add
cmpsb
into
mov
xchg
add
test
mov
dec
mov
or
cltd
adcb
cwtl
lcall
incl
mov
add
addr16
push
incl
pop
mov
out
push
aaa
out
xchg
mov
jnp
dec
ja
or
mov
jge
ja
pusha
sbb
in
dec
cld
or
cmpl
test
xchg
movl
xor
mov
repnz
sub
insl
push
cli
push
adc
mov
lea
rcl
in
push
push
aam
sbb
stc
push
cmpsb
dec
or
ljmp
xchg
inc
cmp
out
mov
cli
fimull
or
sarb
dec
mov
sar
fidivrs
and
jle
les
sub
add
mov
int3
sti
xchg
sub
push
xchg
pop
xchg
xchg
in
jne
stos
fcomps
cltd
loopne
dec
cmp
jle
mov
std
push
pop
jne
popf
clc
mov
in
stc
addb
dec
clc
inc
sahf
fistl
icebp
in
dec
push
cwtl
xlat
pop
jnp
mov
mov
icebp
daa
jne
dec
stos
je
test
das
std
jg
push
ljmp
fwait
mov
lret
add
ljmp
pop
sub
push
imul
lahf
dec
das
mov
xchg
shll
jg
mov
jg
push
ja
xor
sahf
pop
nop
rorl
dec
jns
test
lock
ljmp
int
sar
daa
sub
clc
clc
int
cmp
xor
mov
ss
inc
add
jns
push
adc
sbb
lods
inc
popa
aaa
push
pop
popa
rclb
pop
jp
sbb
xor
sbb
fstps
mov
test
pop
push
sbbl
inc
loopne
sahf
mov
lcall
fs
add
nop
mov
pop
mov
nop
lods
hlt
leave
push
or
aas
inc
aad
subl
push
pop
cmp
ret
pushf
and
push
cmp
imul
xor
aaa
adc
arpl
call
js
xchg
inc
lods
ljmp
hlt
pop
ds
sub
js
cmpsl
mov
jb
xchg
push
adc
sar
push
add
in
push
pushf
js
outsb
adc
js
jmp
jp
push
mov
lods
or
xor
xchg
les
xlat
loopne
je
mov
dec
leave
cmp
arpl
jbe
rorb
fs
cmp
outsl
cmc
call
jmp
scas
clc
jne
adc
cmp
lcall
jmp
in
dec
mov
cmc
cmpsl
pusha
sti
in
cmp
pop
sub
gs
mov
ss
lock
arpl
js
mov
fdivrs
orl
lods
jmp
jl
inc
sahf
inc
imul
xor
xchg
fucomip
outsl
jecxz
stos
out
mov
sbb
and
ds
lcall
or
movsb
cmpsl
int
push
or
inc
pop
mov
jne
sbb
cmp
rorb
jbe
jmp
fmul
or
bound
and
mov
jecxz
iret
and
outsb
movb
decl
pop
pop
sbb
add
dec
lock
jmp
xchg
incl
pop
or
imul
lods
notb
dec
xchg
jmp
jmp
in
xor
or
dec
dec
out
xor
xor
je
sbb
insl
imulb
mov
cltd
jp
pop
shr
imul
mov
fucomip
inc
mov
cmpsb
inc
add
sbb
xchg
push
pop
mov
incl
fnstsw
call
fildll
insl
aaa
xchg
mov
shll
aad
lods
sub
cld
push
sti
rorl
jl
test
xor
xchg
jmp
mov
in
sub
clc
mov
rclb
mov
stos
mov
or
pushl
mov
ja
imul
push
and
mov
popa
hlt
adc
pop
adc
cmc
mov
xchg
jne
mov
mov
es
inc
sub
pushl
push
data16
bnd
in
adc
loop
push
and
frstor
pop
hlt
inc
lcall
test
sti
jmp
sahf
inc
scas
sbb
push
jg
and
mov
mov
mulb
xor
leave
aad
stc
add
inc
dec
adc
dec
xor
incl
sbb
cltd
and
int
push
ds
pop
add
subl
sub
xchg
stos
mov
arpl
hlt
add
or
decl
push
lods
pop
sbb
shr
repnz
mov
mov
test
loopne
fwait
adc
je
fidivs
mov
cmp
mov
xchg
imul
xchg
cwtl
and
mov
jbe
cwtl
mov
scas
cmpsb
stos
mov
inc
imul
mov
push
xor
icebp
rcrb
push
mov
aad
mov
loope
push
fbld
xor
and
sub
scas
mov
lahf
mov
pop
enter
clc
jmp
lcall
jnp
add
stos
call
test
aam
push
xchg
dec
xor
sub
aad
mov
jg
aas
mov
movsb
push
or
orl
movsb
pop
ret
arpl
movsl
lock
jle
jg
arpl
shrl
lret
mov
lock
pushl
insb
cld
int3
dec
cmp
rcrb
mov
push
jbe
ret
aas
mov
jmp
adc
xchg
mov
mov
xchg
sti
jnp
in
lcall
daa
pop
adc
sub
add
dec
rcr
dec
insl
das
call
jmp
stos
sub
mov
enter
mov
js
inc
outsl
jne
inc
pop
mov
pushl
dec
jl
jle
adc
scas
stos
and
in
pop
aam
call
or
and
push
cmp
lock
adc
mov
rcrb
sbb
xlat
add
or
dec
bound
add
test
lcall
je
nop
hlt
mov
and
mov
iret
aaa
sub
xchg
push
ljmp
mov
sti
mov
mov
mov
mov
add
mov
cmc
incl
rcll
and
icebp
call
jae
mov
push
dec
loop
sub
cs
pushf
jle
mov
xchg
sbb
pusha
cmp
std
pushl
idivl
fucomi
mov
cli
jg
xchg
cli
jmp
sahf
stos
dec
push
mov
push
mov
sbb
ret
jg
inc
cmp
das
data16
mov
in
fs
and
call
lea
xchg
fstps
add
jb
sbb
cmpsb
sub
and
inc
jns
xor
xor
loopne
add
decl
sarb
xchg
xchg
iret
cmpsb
insb
call
data16
decl
jnp
flds
in
and
js
fistl
roll
ljmp
enter
jbe
popf
loop
lret
inc
mov
faddl
mov
add
push
test
cmpsl
mov
pop
lcall
add
jns
fisttpll
aaa
sarb
jle
or
xor
enter
adc
stos
jnp
sub
add
fistps
pop
mull
rcrb
in
adc
arpl
std
jg
call
xchg
in
insb
or
loope
dec
mov
into
jae
enter
xchg
jbe
mov
push
fidivrl
es
push
sbb
and
decb
xchg
inc
lods
loope
in
pop
imul
std
icebp
xor
int3
out
in
ljmp
shrb
push
cltd
inc
adc
jb
or
dec
pop
popa
mov
xor
decl
xchg
sarb
dec
repz
movsl
sbb
popf
cmp
cmp
jae
sarb
add
enter
lods
out
and
out
xchg
enter
ljmp
pusha
popa
push
aad
push
lods
dec
mov
or
xchg
cltd
inc
mov
das
xor
insb
inc
mov
pop
shrb
push
sub
and
mov
loop
jp
push
mov
aas
pop
test
sbb
pop
imulb
and
mov
decl
das
fidivrs
push
imul
jne
xor
or
add
push
mov
pop
inc
cmp
in
sbb
mov
pop
pop
mov
nop
pop
dec
pop
mov
cli
notb
ljmp
xlat
push
cmp
and
hlt
ljmp
jecxz
sbb
pop
repz
mov
jl
mov
ljmp
push
mov
mov
inc
mov
cmp
outsl
jb
test
lods
sbb
jg
mov
inc
stos
notl
inc
mov
aam
inc
lcall
mov
outsl
adc
int3
sub
stos
fistpl
sbb
inc
and
jmp
jp
iret
dec
scas
or
mov
dec
xor
rcrb
iret
scas
xor
icebp
cmc
iret
dec
mov
xchg
fs
pop
icebp
cmp
jb
daa
and
inc
push
push
sbb
repnz
jge
test
std
bound
pop
mov
mov
xchg
das
fadd
into
aad
fs
dec
dec
sbb
cmpsb
adc
call
daa
test
sub
rcrl
imul
icebp
jo
xchg
test
mov
pop
fdivr
call
cli
jg
jg
test
in
cmp
inc
cld
leave
sub
sar
mov
mov
adc
out
aas
popa
jmp
xor
sub
jg
mov
pop
sub
cwtl
arpl
sbbl
fidivrl
cmc
and
xchg
mov
cwtl
out
dec
adc
repnz
push
cld
xor
jmp
loope
mov
mov
les
mov
shlb
movsb
dec
out
or
incl
cmpsb
jl
lret
loop
cmpsb
mov
stos
stc
xchg
jecxz
decl
das
aaa
pop
insl
pop
cmp
cld
mov
jo
call
cwtl
inc
movsl
scas
cmp
jg
call
lods
cmpsl
dec
cli
mov
iret
cwtl
mov
or
lcall
mov
jg
insb
mov
push
sbb
xor
push
jnp
jb
hlt
sar
jg
lcall
data16
out
jno
sub
imul
stc
lea
sar
mov
stc
inc
jp
pop
push
dec
ds
push
imul
ss
aam
jb
inc
mov
push
fnsave
push
fldenv
popf
sbb
cmp
sahf
and
xor
push
test
cmpsb
mov
call
jne
xchg
dec
cltd
aam
mov
incl
lret
push
fdivl
xchg
cmp
pop
stos
addr16
pop
lcall
cld
incl
jge
or
add
pop
or
aam
dec
repnz
xor
sub
cmpl
adc
fidivrl
scas
pop
repz
xor
call
cmc
shr
mov
and
jle
cmpsl
or
xchg
and
and
xor
push
mov
jb
inc
inc
jo
negl
arpl
jle
xchg
call
mov
push
stos
lcall
mov
xchg
das
roll
mov
outsb
outsb
pop
shrl
in
rclb
enter
add
lea
pushf
lods
fidivrs
push
lods
mov
mov
hlt
jg
lcall
aad
mov
aaa
mov
xchg
mov
and
add
xlat
xchg
pop
pop
push
lcall
dec
imul
sti
push
fidivrs
push
lret
mov
js
loop
jmp
fcoms
pop
mov
inc
add
ljmp
push
push
pop
lfence
cmp
cs
test
arpl
xor
jae
and
dec
dec
call
mov
cmp
pop
jmp
rclb
and
sbb
mov
call
cli
jl
add
push
daa
or
xchg
sbb
or
paddd
sub
jnp
mov
lea
xor
imulb
stc
dec
loope
or
xchg
out
in
mov
dec
mov
lock
or
push
jmp
and
es
fisubl
rolb
mov
aaa
adc
add
jmp
negb
fwait
rolb
stos
ret
mov
xor
inc
xor
sub
jg
movsl
jmp
pop
xchg
cmp
addl
jmp
std
dec
fsubr
scas
dec
pop
xlat
jae
insl
push
test
loope
jnp
decl
jp
clc
sahf
jnp
mov
sti
repz
jae
mov
adc
xorl
inc
push
pop
sub
fmull
mov
es
pop
jno
dec
add
xchg
in
call
mov
hlt
jo
mov
dec
stos
pusha
cmpsl
xor
lock
pushl
pop
aaa
jecxz
add
adc
add
cli
ljmp
xchg
out
pop
cmp
jl
and
mov
imul
lcall
and
push
negb
cmp
mov
negl
fisttpll
fcomps
dec
out
cmpsl
mov
sub
out
test
push
pushl
xor
repz
mov
mov
inc
sti
fnstsw
lcall
jmp
or
jmp
aam
jl
incl
xchg
and
inc
xlat
push
add
mov
nop
pop
adc
sub
repz
decl
push
repnz
rorl
pop
lret
cmp
jecxz
call
mov
nop
or
stos
sbb
mov
dec
jnp
sahf
inc
in
push
jnp
push
xchg
dec
sub
pushl
lock
add
cmovbe
sbb
xchg
push
xchg
pop
inc
jae
int
ljmp
pop
fwait
testl
cwtl
or
stc
xlat
enter
in
test
call
xor
mov
out
cwtl
push
movsl
or
sbb
jmp
das
push
inc
inc
mov
outsb
sbb
and
stos
dec
mov
lret
push
pop
or
mov
mov
hlt
fsts
sbb
lea
aam
movsl
mov
mov
dec
lock
lock
jmp
or
repnz
data16
pop
addr16
addr16
data16
shl
fnstsw
push
mov
xchg
jno
stos
jne
mov
lea
hlt
adc
mov
clc
sub
ds
adc
movsl
adc
push
cmpb
pop
pop
cmp
fstpl
xchg
push
shlb
dec
sbb
cmp
mov
out
jmp
xchg
clc
inc
mov
xchg
xchg
ljmp
xor
add
jp
test
mov
es
aaa
and
pop
xchg
adc
or
sbb
imulb
mov
sub
divb
cmp
sub
dec
adc
fiaddl
mov
mov
jg
jg
pushf
lods
ret
adc
popf
xchg
and
ljmp
stos
addr16
cmovae
sbb
cmp
xor
lcall
ret
jbe
repz
xor
fs
scas
lods
lods
lcall
adc
popf
xchg
jns
icebp
decl
in
aaa
mov
loopne
mov
or
add
insb
xchg
pop
mov
jg
sbb
jl
lds
fsubrp
mov
not
push
pusha
dec
pop
lcall
and
shrb
ljmp
and
ficompl
mov
decl
je
lcall
adc
or
or
shrl
shl
mov
pop
push
and
or
mov
fiaddl
mov
jbe
movsl
mov
pop
lods
call
pushl
mov
out
push
mov
mov
loopne
lock
iret
mov
add
lods
pop
pushl
jbe
gs
pop
subl
es
xor
int3
pushf
cmp
call
lock
mov
cmp
xorb
mov
mov
clc
inc
ret
clc
adc
imul
xor
jns
cltd
stos
mov
mov
or
hlt
ljmp
sub
mov
ret
jb
jg
lcall
sbb
jg
enter
movl
clc
incl
sbb
jbe
jnp
sub
mov
pop
bnd
push
clc
outsl
icebp
aaa
mov
inc
push
es
mov
incl
sub
pushf
mov
call
push
jno
shll
gs
test
mov
mov
push
mov
movsb
cmp
jge
mov
ret
cld
fs
mov
adc
testb
popa
insb
loop
jnp
imul
inc
popf
and
push
jmp
cli
jg
stc
fs
mov
cmp
pop
ss
lcall
ja
cmp
pop
push
mov
jno
sbb
iret
out
add
incl
lds
mov
pop
add
and
adc
loope
fnstcw
mov
icebp
jmp
out
cmp
mov
inc
dec
fcmovnu
lods
push
pushf
loopne
sub
pop
mov
sbb
mov
dec
movsl
movsb
lock
push
out
cltd
push
insb
xchg
add
jge
add
adc
xchg
adcb
imul
add
loope
repz
sbb
fimuls
mov
add
xchg
dec
xchg
test
pop
call
mov
mov
fcmovnu
lods
es
cmp
incl
dec
test
dec
mov
mov
into
nop
jnp
xlat
sahf
into
push
sub
incl
sub
mov
cmp
lcall
push
add
mov
pop
pushf
inc
lods
mov
ss
sub
push
fidivrs
stos
add
pop
jg
call
sbb
scas
cmp
adc
pinsrw
lcall
imul
int
adc
ja
mov
mov
addr16
movsb
add
pop
decl
xchg
push
cld
mov
mov
pop
push
push
jmp
cmp
xchg
xor
xor
sub
ss
mov
loopne
jne
xchg
sub
jle
mov
pop
std
das
ljmp
adc
addr16
ror
fs
fs
mov
jmp
xchg
and
cmpsl
inc
sub
cld
aas
or
gs
rep
cld
shlb
lahf
xchg
jno
xor
inc
adc
cmp
test
mov
out
popf
and
call
pop
pop
xchg
mov
add
imul
lods
cmp
dec
rcll
mov
subl
mov
into
mov
aaa
or
and
out
clc
test
dec
call
mov
push
sbb
cltd
test
and
mov
fwait
test
movsl
add
xor
xor
cmp
pop
cltd
sbb
push
sbb
lock
movsb
fucomp
mov
xchg
outsb
jmp
outsl
push
add
popa
call
int
mov
jp
popa
jmp
push
inc
mov
push
call
repnz
mov
loopne
call
stc
xchg
xor
mov
orl
loop
fstpt
push
pop
xor
repnz
clc
mov
scas
jnp
adc
jl
and
jne
or
out
pop
and
mov
inc
push
pop
movsb
and
mov
addl
and
sarl
mov
nop
sub
adc
cmc
aad
out
fisttpll
loope
loopne
or
subl
dec
xor
jns
jmp
aam
and
push
mov
pop
xchg
mov
in
fstp
jmp
pop
clc
ret
add
fucomip
enter
and
fnstenv
mov
ds
out
call
sti
push
lahf
or
repz
pop
loope
xor
mov
enter
pop
ds
mov
push
in
cmp
jmp
push
sbb
add
adc
sub
lahf
rcr
dec
test
mov
scas
xchg
sub
ret
xchg
idivl
xor
call
jae
repnz
add
cmp
mov
call
sbb
add
dec
mov
fstp
cltd
leave
push
or
mov
sahf
mov
dec
outsl
add
push
daa
fwait
inc
call
lcall
cli
aad
scas
mov
out
cmp
jb
scas
jbe
dec
inc
jb
jns
push
shlb
sbb
lcall
inc
iret
arpl
adc
inc
fildll
mov
pushl
jno
jbe
sub
adc
mov
push
inc
cli
in
sub
leave
fwait
movsb
push
xchg
push
add
jmp
inc
fwait
sub
into
sbb
pushf
shrl
sub
fistpll
jnp
loopne
jno
and
xchg
dec
xorb
std
pop
decb
in
das
jne,pt
push
aad
push
cmp
jmp
mov
pop
aas
push
insl
sbb
test
test
or
arpl
sub
pop
std
dec
shrl
adc
adc
int
popa
push
cmpsb
in
lcall
insb
dec
lock
sub
pand
xor
cmp
sub
das
hlt
and
mov
cmpsl
clc
lcall
pop
out
movsl
xor
popf
nop
and
inc
adc
or
lret
int
sahf
mov
scas
ja
mov
movb
out
inc
pop
cltd
outsl
lahf
bound
sbb
decl
cmc
inc
je
dec
dec
repz
insb
nop
cltd
mov
leave
sti
jmp
or
outsb
fwait
outsb
pshufd
aaa
bound
mov
repnz
ljmp
pop
xchg
xchg
rcrb
add
cmp
and
lcall
inc
imulb
ja
sub
push
xchg
push
in
insl
xchg
dec
cmp
in
push
xchg
jmp
bound
push
mov
mov
imul
aaa
fistps
sub
lds
pop
push
pop
je
mov
lds
arpl
push
sub
incl
iret
inc
out
xchg
pop
or
push
dec
repnz
cwtl
mov
jecxz
xor
pushl
cli
xor
mov
pop
sbb
pop
fidivs
daa
js
or
mov
ljmp
fsubs
mov
mov
xchg
cmpsl
jbe
setg
icebp
push
in
push
push
inc
test
fnstcw
push
jg
cmp
fcompl
lea
adc
movsb
scas
sahf
jge,pt
lods
insb
dec
and
or
pushl
mov
sbb
movsb
insl
cmpsb
push
mov
add
push
mov
add
outsl
pop
ljmp
mov
ljmp
stos
lret
fsubrp
icebp
call
cmpsl
rorb
out
repz
jg
pop
out
sbb
outsl
and
mov
mov
jle
roll
cmp
fwait
out
out
sub
inc
int
shlb
cs
push
pop
jno
pop
adcl
mov
jle
mov
imul
outsl
push
jae
ljmp
ret
leave
mov
jg
fsin
pop
aaa
mulb
dec
cmp
xchg
adc
adc
sub
aad
call
fxtract
cmp
xchg
push
inc
iret
loope
inc
or
mov
hlt
incl
mulb
inc
data16
cltd
pop
push
test
imul
jl
rep
and
test
pop
dec
fcomip
fcmovbe
cwtl
dec
idivl
lds
or
fildll
mov
pop
jg
sbb
push
mov
cmp
ljmp
repz
sub
ljmp
mov
stos
dec
lds
cmp
xor
push
mov
cld
and
jg
lock
cmp
cmp
pop
pop
lds
jne
xor
sub
inc
int
xor
pop
jecxz
pop
clc
clc
in
mov
hlt
ljmp
jp
out
stos
dec
leave
inc
dec
inc
hlt
add
mov
push
test
decl
outsl
int
sbb
and
cmp
ljmp
je
sbb
cmpsb
pop
arpl
ljmp
pop
loopne
lret
inc
and
sub
in
adc
aam
push
jmp
clc
inc
test
or
cmpsb
jnp
sbb
loop
test
outsl
cmc
pop
sub
int3
inc
xchg
inc
pop
jbe
sub
dec
mov
mov
dec
cli
mov
loope
xchg
lods
mov
stc
jno
inc
rcrl
dec
mov
fldcw
leave
into
lret
cmc
mov
mov
std
mov
push
inc
hlt
in
subb
add
jp
lcall
or
icebp
fmuls
loope
add
dec
lret
mov
and
pop
mov
cwtl
or
gs
mov
jge
lea
push
stc
lods
mov
lock
shll
pop
lret
add
dec
addr16
insb
xor
dec
faddp
add
aad
movsl
pop
sub
pop
mov
jl
mov
sub
inc
cwtl
es
jg
fsub
mov
jbe
subl
pop
lahf
xor
icebp
in
fdivr
mov
dec
sahf
test
mov
inc
in
cmova
or
inc
arpl
xlat
in
aad
in
push
cmp
sahf
mov
mov
push
mov
mov
add
rorb
lcall
stos
push
mov
add
cmp
jmp
pop
sbb
xchg
mov
test
cmp
or
ffreep
std
movsl
cmp
jno
pop
cmp
aam
adc
mov
rolb
jns
incl
repnz
and
cmp
push
push
or
mov
push
or
and
cmp
ljmp
decl
in
push
mov
adc
les
fsubr
cs
mov
rolb
hlt
dec
jp
adc
mov
inc
mov
and
pushf
xchg
dec
add
aas
cmc
and
dec
mov
dec
decl
push
shll
iret
cmpsb
fsubs
dec
cld
cmp
pop
scas
popa
push
mov
jo
test
pushl
out
cmpsb
lret
ljmp
jae
push
in
ja
scas
adc
mov
cwtl
fiaddl
popa
jbe
pusha
ljmp
aas
pop
adcb
push
xchg
fs
sahf
out
fucomip
push
pop
dec
mov
adc
mov
js
sub
mov
lret
in
in
mov
into
cmp
call
stc
loope
pop
and
and
lret
jle
sbb
pop
ficomps
mov
jp
rcpps
js
in
call
cli
mov
jg
mov
ja
add
mov
pop
pusha
out
repz
sub
adc
enter
adc
cmp
adc
loopne
push
enter
lcall
jg
test
mov
in
pop
push
in
xlat
sti
pop
test
mov
loop
sub
cmp
and
in
jecxz
push
push
loopne
sbb
pop
test
adc
notl
mov
loopne
lcall
movsb
pop
inc
jno
mov
aam
adc
pop
xchg
lods
mov
adc
fbld
dec
bound
xor
mov
cld
jne
fnstsw
mov
imul
xor
test
mov
adc
incb
out
jp
cmpl
int3
xchg
andb
cltd
call
pop
aaa
xor
xchg
sbb
out
stc
divl
push
fwait
add
inc
cltd
cmc
adc
sbb
xchg
cmp
pushl
mov
cltd
push
sbb
popf
mov
into
loope
cmp
sahf
sub
mov
pop
xchg
and
add
call
inc
insb
aam
stos
int3
inc
leave
push
aas
addr16
fnstenv
push
push
or
incl
scas
cmc
cmp
dec
push
jne
movsb
or
xchg
ss
fbstp
jae
sbb
ret
cs
dec
std
ljmp
hlt
push
jmp
cmpsl
fisubs
adc
dec
inc
jg
daa
push
clc
mov
pop
sub
cwtl
pushf
out
out
pop
jg
aam
jecxz
or
add
imul
sbbb
lds
adc
data16
jecxz
lcall
fcos
add
xor
inc
nop
test
cmp
or
ret
repnz
fsubl
add
ds
jmp
lcall
mov
mov
loopne
idivb
int3
rcrl
js
mov
int3
loop
test
sar
mov
es
lcall
insb
leave
aam
loope
sub
xchg
jg
incl
je
and
inc
or
cwtl
jp
enter
sti
es
jg
adc
and
push
out
xlat
add
push
and
sbb
lcall
shl
mov
pop
mov
adc
xchg
cltd
lods
or
int
sar
filds
into
mov
push
mov
hlt
pop
lea
mov
pushf
aas
push
xor
out
dec
lcall
std
lcall
imul
pop
dec
mov
pushf
push
jl
stos
mov
js
rolb
push
incl
test
sub
mov
stos
xor
lret
pushf
mov
xchg
jns
mov
dec
sbb
lock
xorl
loope
call
push
mov
jns
jecxz
loop
shll
adc
notb
decl
out
xchg
and
xchg
push
jno
cmpsl
test
stos
arpl
in
add
jae
icebp
call
sarl
subb
xchg
insl
stos
nop
mov
call
mov
fisubrs
pushf
mov
mov
cltd
jb
or
lods
iret
aam
xor
call
cli
popf
add
mov
sub
repnz
fimuls
hlt
lahf
xchg
loopne
out
fnstsw
ljmp
mov
xchg
jno
rolb
nop
je
or
cld
js
pop
das
test
mov
mov
push
call
fldt
cld
cmpsl
std
andl
xor
popf
icebp
cwtl
shll
idivl
les
outsb
aam
push
xchg
outsl
std
call
in
test
pop
out
popa
nop
sub
andl
jg
mov
add
lods
shl
divb
out
jecxz
mov
pop
jmp
mov
rcrb
xor
das
aas
arpl
mov
lock
xchg
push
adc
adc
pushl
inc
mov
int
and
jl
shrl
mov
push
sbb
sbb
movsl
cmp
mov
pop
rolb
or
inc
lods
jg
mov
mov
fwait
jecxz
sub
or
mov
mov
movsl
lods
xchg
pop
arpl
or
rcl
xor
and
ljmp
sti
adcb
lcall
loope
stos
jb
xchg
es
loop
mov
push
and
and
push
xor
out
gs
and
mov
adc
call
cmp
cmp
cs
add
jl
sub
imul
dec
cmp
in
setle
xchg
daa
dec
inc
out
fsubr
push
mov
inc
jg
decl
adc
fsub
sub
mov
mov
mov
jmp
inc
add
xor
cmp
cli
in
imul
jmp
stos
lret
sub
in
ljmp
rorw
icebp
or
rclb
xchg
cmp
ljmp
push
and
cld
jnp
cmp
cmpsl
mov
movsb
xor
in
mov
jbe
mov
mov
scas
lds
mov
adc
incl
sbb
loopne
scas
pop
sbb
shll
inc
pushl
pop
pop
jp
lret
xlat
jle
mov
sub
vunpcklpd
mov
rorl
stos
xchg
ret
lcall
lahf
imul
cmpsl
push
ret
mov
movsl
outsl
or
push
inc
mov
cltd
adc
cmc
divb
xlat
arpl
push
pushl
lret
enter
adc
dec
mov
enter
insb
add
add
mov
jg
jle
adc
cli
dec
lock
mov
imul
inc
inc
lcall
std
lcall
pop
leave
pop
stos
scas
pushf
movsl
mov
wbinvd
cmp
sbb
das
mov
daa
jae
outsl
push
mov
xor
lret
add
dec
aaa
clc
jg
xchg
leave
mov
movsb
jae
jg
fisttps
sub
idiv
jns
sarb
leave
call
shrb
arpl
aas
imul
out
mov
jbe
adc
and
cltd
loope
gs
add
nop
push
jne
lods
ljmp
push
ljmp
fimuls
fwait
jbe
push
orb
pushl
clc
flds
dec
xchg
call
xor
push
ja
loope
call
call
cli
fcmovbe
jae
dec
std
xchg
stos
inc
fistpl
sub
pusha
mov
or
pusha
ljmp
out
cmc
push
add
mov
stc
cmp
mov
xchg
pop
les
jmp
in
fbld
xchg
fidivrl
ret
rclb
jge
cmp
mov
mov
mov
enter
hlt
test
call
iret
xchg
mov
out
lock
hlt
je
mov
aaa
out
mov
add
in
movsb
out
jb
and
pushf
inc
in
jo
inc
jb
loop
sbb
mov
ds
int
xchg
out
dec
inc
inc
fildl
leave
sbb
cmpsl
pop
pop
xchg
cmp
push
popf
mov
pushl
das
shrl
fwait
imul
xorb
adc
je
pushl
sub
push
pop
jl
or
ljmp
mov
rcrl
xor
adc
fisubl
mov
decl
cld
dec
shl
jne
pop
fcoml
add
jge
push
lret
jmp
jnp
ret
dec
add
pop
shl
mov
push
or
or
dec
outsb
cmp
imul
dec
das
lock
ret
pop
and
mov
clc
dec
rdpmc
cmp
call
clc
shl
xchg
push
in
inc
pop
mov
pop
ljmp
xchg
push
sbbb
fcomp
daa
jg
loopne
mov
mov
sub
push
hlt
jnp
outsl
std
jg
mov
cmpsl
and
add
ja
movsb
mov
jno
test
loopne
scas
sub
hlt
push
jge
out
or
jne
pop
adc
push
adc
call
jno
inc
cmp
mov
aas
ds
cmp
cmp
ljmp
adc
xor
mov
dec
pop
hlt
mov
mov
mov
jo
ljmp
outsl
adc
mov
xor
xchg
movsl
xchg
int
sub
jg
or
cld
xlat
mov
lcall
adc
arpl
or
stc
sub
push
jg
clc
pop
leave
sbb
outsb
fcoml
decb
jnp
mov
pushf
in
dec
js
jmp
xorb
loopne
pushl
orl
pop
pop
sbb
enter
lods
xor
push
push
or
xor
fists
xor
and
xor
adc
ljmp
cmc
das
lods
loopne
out
adc
std
adc
and
mov
insl
mov
dec
dec
xor
xchg
mov
daa
jp
xchg
into
or
sbb
decl
shll
addl
cld
pop
sbb
ljmp
cmpsl
pop
pop
pop
mov
mov
sub
jle
sbb
dec
pusha
add
jg
adc
xor
jmp
loopne
leave
test
je
cmpsb
sti
dec
adc
xchg
jg
inc
mov
enter
cld
psrlq
mov
hlt
pop
mov
mov
popa
fstpt
iret
push
xor
in
js
ljmp
icebp
jmp
xchg
inc
leave
pop
es
pop
mov
outsl
mov
push
pop
push
mov
idivb
or
xchg
mov
popf
and
sub
jmp
int3
and
or
pusha
outsb
or
jg
fistl
scas
aam
out
incl
aad
bound
dec
xchg
je
fsub
sbb
sbb
fcoml
out
jbe
pop
push
cmp
mov
jnp
in
aam
xchg
inc
out
outsl
cmpsb
jge
dec
shll
mov
mov
push
adc
test
sbbb
movsl
mov
fiaddl
xchg
movsb
imul
add
push
into
cmp
or
mov
pop
sub
int3
add
shlb
das
cmp
outsl
icebp
xchg
add
xchg
bound
test
decl
mov
aam
xchg
rorb
mov
sbb
popf
pop
outsl
je
pushl
mov
jbe
or
aaa
pop
cli
cmp
call
decl
xlat
cmpsb
pusha
mov
sahf
cmp
cwtl
cmpl
stc
cs
or
rcrl
call
lods
pushf
pop
lret
adc
jge
sbb
lahf
mov
int3
mov
pop
xor
lcall
jp
insl
or
lahf
fcoms
push
xchg
mov
sbb
in
mov
pushl
cmp
pop
lods
repnz
lea
nop
call
rcll
sub
cmpl
ljmp
and
sbbb
fs
test
sbb
aas
push
fmull
adc
mov
sarb
pop
adc
fs
mov
roll
lock
incl
push
cmpsb
in
popl
mov
cmp
out
fsubl
repz
sbb
mov
mov
mov
pusha
sbb
sar
test
xchg
mov
pop
loop
imul
das
icebp
imul
testl
jmp
mov
or
fisubs
cltd
add
mov
adc
mov
push
and
xchg
cmp
inc
xor
add
cli
into
jae
fs
imul
mov
pushl
popf
lret
jne
cltd
lret
fs
lea
int3
pop
call
or
aaa
and
pop
xchg
int
sbb
fnstsw
call
sbb
dec
xchg
shrl
pop
mov
add
sub
cmpsb
pop
sbb
mov
mov
jp
sar
loop
into
mov
mov
or
lods
notl
jmp
add
dec
ficompl
mov
cli
dec
sub
or
aas
packsswb
loop
data16
fnstsw
in
fidivrs
pushf
sbb
stos
mov
mov
jae
fcomip
pop
loop
sarl
pop
and
inc
addr16
jg
xchg
xlat
or
xor
pop
call
lcall
sbb
lods
dec
sub
lcall
jmp
push
pusha
or
xor
mov
adc
subl
decl
fsubr
push
cmp
sub
cmpsb
or
ss
fs
neg
pop
or
incl
ret
cwtl
dec
cmp
cwtl
and
movsl
xor
dec
pusha
stos
pop
sub
rcr
loopne
fisubrs
out
arpl
bnd
in
aad
push
sub
add
aaa
lret
decl
add
push
cmp
insb
out
scas
mov
int3
xor
lcall
ret
or
test
enter
dec
dec
xor
sbb
sbb
push
leave
sub
incl
dec
mov
divb
std
or
push
push
in
sti
dec
jb
adc
dec
enter
sbb
fdivl
sti
mov
mov
lcall
inc
add
scas
mov
push
test
dec
and
popa
lods
fldcw
flds
lea
fistps
adc
jne
pop
imulb
addr16
dec
dec
xchg
mov
jnp
mov
pushl
jl
xchg
jmp
adc
outsl
repnz
and
mov
xor
call
mov
mov
es
dec
or
js
add
repz
in
mov
dec
sbb
push
fisttpl
add
adc
cmpsl
dec
outsl
daa
mov
inc
push
cmp
jecxz
mov
popf
mov
lods
sub
imul
adcb
cmp
int3
inc
mov
clc
jmp
mov
rorb
push
faddp
jmp
jmp
popa
and
sar
incl
adc
xchg
xor
cmp
addr16
pop
cmp
push
sub
or
mov
push
xor
sbb
dec
sahf
jns
adc
stos
push
lcall
cs
pop
mov
pop
jnp
enter
and
push
sbb
mov
mov
dec
xor
dec
push
inc
mov
loop
push
decl
loope
and
mov
imulb
push
rorl
jo
aaa
cli
pop
jmp
adc
mov
ds
lock
andl
sahf
adc
mov
mov
mov
bound
dec
mov
jbe
jle
test
cwtl
mov
push
push
or
enter
xor
loope
pop
dec
cmp
call
in
dec
mov
ret
fbld
popa
gs
arpl
ljmp
pop
mov
xor
xor
ja
push
cmp
xchg
push
pop
aaa
call
je
repz
stc
popf
aas
push
sub
icebp
sub
movsb
outsb
inc
mov
mov
jae
in
movsb
and
mov
pusha
stos
or
cmp
jmp
int
fs
mov
adc
aam
add
jo
cmp
fistpll
jae
sub
push
inc
sbb
dec
dec
lods
push
inc
xchg
inc
enter
jg
ljmp
out
dec
aaa
mov
rorb
jo
cs
icebp
mov
incl
and
ja
and
faddl
aaa
and
out
pusha
or
or
inc
xchg
je
mov
sub
adc
sub
dec
sbb
insl
jmp
outsl
and
out
lahf
out
xchg
notb
add
sub
mov
jmp
mov
sub
add
dec
jg
mov
cmp
fstl
rorl
enter
push
jae
cwtl
dec
ljmp
cmp
add
xchg
leave
ds
sarb
adc
lcall
pop
es
scas
xchg
cmpsl
mull
inc
or
jg
sahf
or
mov
mov
jmp
repz
inc
jmp
stos
repnz
pop
sti
in
ljmp
sub
cld
dec
xchg
jge
add
xlat
sar
mov
loopne
push
bound
scas
jp
pop
cs
mov
popf
inc
mov
nop
imul
dec
mov
ljmp
ja
outsb
xchg
lock
and
mov
insl
into
leave
jo
mov
adc
out
mov
repz
jg
push
xchg
popa
push
xchg
out
sub
mov
mov
lcall
jge
and
test
in
outsb
add
cmp
cmc
int
cmp
mov
cmp
add
lret
enter
mov
repnz
lcall
lcall
mov
leave
sti
stos
arpl
pusha
dec
jmp
lods
xor
fstpl
aaa
dec
jb
iret
mov
inc
lret
sub
pusha
xor
and
jge
or
jg
fldenv
gs
push
mov
jns
imul
sub
outsb
inc
jge
lret
add
fnsave
push
mov
or
ret
insl
jl
fisttps
mov
sub
ljmp
xchg
push
lods
xchg
ret
mov
daa
stc
jno
add
test
pushf
orl
call
stos
icebp
inc
int
aas
stos
pusha
mov
das
cmp
icebp
jg
and
pop
das
fnsave
lods
jns
gs
arpl
das
add
lahf
mov
icebp
int
add
mov
ffreep
sahf
jmp
insb
sbb
push
call
xor
decl
fstpl
push
inc
je
mov
and
js
xor
lods
and
push
out
xor
cmpsb
hlt
mov
inc
in
jbe
pcmpgtw
jne
pushf
call
pop
insl
xor
adc
mov
push
jae
push
jae
dec
sbbl
jp
test
or
sub
movsb
pop
les
incl
leave
ficoml
xor
dec
ret
decl
adc
incl
cmp
es
and
add
xchg
dec
lods
dec
lock
xor
push
fnstsw
std
pop
cmp
in
inc
dec
jo
lcall
cli
xor
and
gs
lret
shlb
push
sbb
adc
lret
mov
ljmp
orl
sub
pop
add
jmp
test
adc
pushl
add
xchg
fsubrs
adc
shrb
aaa
iret
repz
pop
cmp
cmp
fadd
and
ljmp
std
fistpll
call
mov
mov
pop
out
cwtl
out
xchg
or
mov
mov
mov
outsl
cmc
call
dec
pop
xor
adc
mov
loope
out
mov
pushl
cmpl
pop
xor
mov
repz
enter
adc
push
lcall
ljmp
arpl
adc
jne
and
sbb
inc
xchg
pop
and
movsb
xor
loopne
jmp
mov
out
lds
push
pop
fistps
orb
sbb
decl
loope
std
xchg
adc
sub
insb
mov
and
cmp
pop
lcall
or
push
xchg
jmp
xor
jp
mov
add
cmc
ja
push
mov
xchg
loopne
outsb
xchg
jmp
mov
fnstsw
push
jle
and
dec
test
loope
jecxz
in
sub
inc
pushl
mov
fimuls
inc
add
xchg
repz
push
and
fiadds
call
and
mov
fs
sub
add
in
and
ljmp
dec
aaa
data16
pushl
aam
xor
jp
int
xor
idivb
repnz
fldl
pop
inc
pop
add
std
ljmp
aas
dec
lock
mov
jp
fldt
ljmp
in
sbb
and
sti
or
dec
push
jmp
jae
icebp
jnp
scas
sub
jmp
add
mov
ss
in
clc
jg
inc
inc
jg
mov
sub
add
fisubrs
imulb
in
popa
mov
and
call
into
xchg
fnstsw
jae
scas
lret
inc
test
aam
mov
insl
outsl
jmp
inc
xchg
lods
movsl
hlt
repz
sub
jns
push
ljmp
pop
incl
fists
xchg
fisttpl
loope
enter
sub
ljmp
bound
jmp
jbe
out
divb
mov
scas
jne
pop
cli
mov
jne
call
hlt
ror
int3
xchg
iret
aam
jle
push
add
loop
mov
out
idiv
add
add
shll
jnp
sbb
inc
loope
xor
cmp
xchg
mov
mov
call
inc
jae
sub
in
call
mov
hlt
pusha
pop
cltd
fimull
pop
movsb
ljmp
out
mov
loopne
jne
sti
push
add
das
hlt
fmuls
lret
mov
xchg
cmpsb
aad
mov
push
ret
mov
xor
ret
sub
push
andl
fimull
jl
mov
stos
xchg
jmp
inc
or
hlt
adc
pusha
jge
xor
push
stc
mov
inc
shrb
push
incl
jl
jmp
inc
lcall
sbb
inc
jnp
pop
das
hlt
incl
adc
nop
jmp
movnti
scas
shll
call
sti
mov
push
pop
mov
sub
repz
test
xchg
cli
ljmp
jecxz
or
cmpsb
jo
jmp
hlt
mov
aaa
xchg
lock
mov
mov
mov
shrb
jg
mov
in
popa
sub
loop
and
popf
out
and
push
fdivs
sbb
ljmp
push
in
js
out
pop
xor
decl
fistps
push
stc
aas
pop
sbb
into
cs
mov
sub
lcall
gs
aam
orb
inc
pop
aam
inc
sub
inc
and
cmp
jmp
in
je
adc
mov
sbb
mov
out
sub
add
outsb
outsl
inc
incl
or
lods
cmp
mov
stos
insl
hlt
lds
pop
pushl
sbb
add
gs
push
xlat
xchg
mov
xor
xchg
lea
call
push
mov
mov
push
ret
ror
jp
loop
xchg
in
loope
incl
or
fcomps
enter
jne
pop
mov
sub
mov
sar
ljmp
shrl
cmp
sbb
mov
sahf
sbb
mov
testl
jne
incl
in
pop
mov
pop
lcall
out
in
dec
fcoms
jmp
adc
mov
inc
pop
and
sbb
sub
lret
dec
jno
mov
xor
incl
mov
cmpsl
sar
sbb
mov
push
cmpsl
je
jb
iret
cmpsb
aas
jae
movhps
sub
lcall
decl
xchg
aas
shrb
ja
push
add
mov
call
xor
sub
stos
out
push
clc
ret
push
xchg
imul
push
xchg
incl
inc
int
cmp
fstpl
pushf
xor
push
cli
lods
mov
sti
jo
pop
call
mov
mov
mov
sub
sbb
data16
dec
xchg
dec
jg
out
push
jnp
daa
daa
in
shll
push
xor
stc
sub
pop
or
and
xlat
cli
jl
sub
cmp
test
push
in
lcall
jge
ss
sbbb
xchg
cmp
rcl
enter
dec
rcrb
mov
inc
mov
add
nop
sbb
out
movsb
inc
gs
popa
jge
jl
inc
mov
dec
js
negb
mov
lods
pop
jle
lcall
pop
xor
mov
or
aaa
popa
rcll
jg
call
inc
sbb
or
pop
repz
mov
and
add
dec
enter
mov
inc
enter
mov
or
fwait
ljmp
add
dec
add
aas
push
jns
mov
enter
sub
dec
mov
lret
mov
add
ljmp
jne
fcmovnb
out
pusha
mov
push
outsb
push
push
push
mov
je
lcall
ret
push
push
pop
push
imul
jecxz
dec
xor
add
push
stos
mov
push
incb
xor
fbstp
test
cmpsl
pop
jnp
inc
lods
data16
decl
stos
pop
jo
add
mov
fadds
mov
or
es
lods
out
or
jne
and
cmp
or
mov
or
sbb
pop
std
cmp
ret
jae
outsb
add
xor
lock
fstp
shrb
jecxz
fs
orb
jp
push
push
xor
jge
ret
shl
xlat
scas
imul
push
fimuls
fdivrs
test
das
cmc
xchg
sub
mov
push
testl
fwait
push
and
lock
ret
icebp
push
mov
xor
daa
jb
aam
lock
push
pop
loope
xor
cltd
hlt
lret
add
pop
push
mov
pushf
mov
decl
stos
outsl
jne
add
sbb
ljmp
stos
std
or
cli
pop
or
jecxz
enter
mov
rclb
ja
pop
or
jg
outsl
sbb
pop
cmpsl
push
inc
xor
add
jo
mov
xor
repz
push
jnp
adc
mov
add
loop
jmp
icebp
in
in
inc
idivl
arpl
jmp
test
outsl
cld
mov
add
jp
or
mov
stos
out
add
decl
fcomps
cmp
adcl
outsb
push
push
sti
inc
mov
lea
fisttps
dec
in
xchg
xor
icebp
insl
or
ljmp
add
inc
xchg
and
in
fnclex
sub
mov
movsl
push
or
int3
mov
push
dec
rcr
push
popf
out
shl
stc
sbb
push
inc
out
arpl
inc
ljmp
popa
clc
xor
add
fdivs
cld
jg
ljmp
int
mov
add
adc
mov
hlt
clc
jle
push
and
cmp
aaa
dec
adc
or
fstps
fistl
sbb
loope
cmp
adc
xor
ja
push
movsl
fildll
cmp
sahf
notb
repnz
sub
push
mov
lahf
sbb
dec
xchg
cmp
ljmp
jl
mov
dec
mov
dec
in
insb
add
imul
aaa
pop
popf
or
shll
incl
in
incb
jne
cmp
pop
pop
clc
push
cs
cld
jl
dec
push
and
add
ljmp
xor
enter
aad
call
cmp
cmp
pusha
and
je
fs
out
sbbb
mov
imul
pop
mov
loopne
aad
mov
xor
scas
mov
test
add
add
addb
push
jl
add
add
pop
ljmp
push
inc
jne
data16
inc
gs
popa
jae
inc
jb
outsl
jb
in
arpl
pop
dec
popa
outsb
fs
gs
dec
outsl
popa
fs
inc
decb
jb
jb
or
jne
arpl
outsb
jne
insl
sti
nop
insl
push
jns
or
mov
addr16
jne
jns
popa
jae
out
int
cmovg
outsb
dec
gs
js
dec
push
fmull
data16
or
insb
outsl
jae
or
dec
xchg
xor
cltd
inc
addr16
popa
mov
imul
gs
je
sbb
mov
in
inc
push
jb
lret
inc
outsl
arpl
enter
cwtl
push
inc
dec
add
dec
jae
stc
jg
add
add
add
add
jb
sti
xadd
lar
add
ret
es
pop
add
sbb
ss
pop
push
das
dec
pusha
addb
popf
mov
je
nop
sub
jg
xchg
mov
cs
je
testb
mov
daa
push
shrb
sub
jmp
xchg
daa
movsb
mul
pop
in
imul
ret
add
sub
jg
xchg
pop
cmp
inc
sbb
inc
add
jno
add
rolb
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
