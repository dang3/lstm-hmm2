add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
ror
fs
inc
cmp
mov
inc
jae
imul
add
add
pop
add
in
inc
add
bound
inc
add
add
add
add
add
jnp
inc
add
insb
add
cwtl
add
add
add
add
add
add
add
add
js
test
jnp
mov
add
inc
add
add
add
add
add
faddl
outsl
add
add
and
inc
add
insb
add
add
push
add
add
add
add
add
add
inc
add
inc
add
add
outsl
add
add
add
add
add
add
sbb
inc
add
add
add
inc
add
add
dec
add
add
sbb
inc
add
add
add
cmp
inc
add
add
add
inc
add
insb
add
add
add
roll
add
add
inc
add
add
add
add
add
add
add
xor
add
add
add
add
add
jns
inc
add
or
add
add
or
adc
and
cwtl
add
add
add
inc
add
add
iret
add
dec
add
mov
add
pop
fildl
xchg
add
add
add
cmp
add
add
add
mov
add
add
add
add
add
add
add
mov
add
sbb
sub
inc
add
add
pop
fildl
inc
add
add
sub
push
add
add
add
inc
add
add
add
add
add
add
add
sbb
jbe
inc
add
add
add
add
cmp
sub
sbb
inc
add
add
add
add
add
mov
roll
add
add
add
add
add
add
inc
add
insb
add
add
inc
add
add
pop
add
inc
add
add
dec
add
outsl
add
add
add
add
mov
add
add
sub
inc
add
test
and
inc
add
add
add
add
add
or
add
mov
enter
lcall
add
add
cltd
add
add
addb
add
add
add
int
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
and
data16
js
mov
add
add
fildl
add
add
mov
aas
add
pop
add
add
add
outsl
add
add
add
add
add
mov
outsl
add
add
add
add
inc
add
add
add
add
add
mov
add
outsl
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
cwtl
add
inc
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
roll
sbb
rolb
add
add
add
aas
add
add
pop
repnz
das
push
out
push
rorb
je
pop
dec
imul
cmp
test
push
sub
cmp
in
add
xor
sahf
push
cmpsb
movsl
pop
xor
or
popa
out
adc
jmp
jo
mov
cwtl
sub
sbb
mov
das
push
jp
or
int
nop
and
jns
or
jle
add
xchg
in
mulb
in
jae
cmp
mov
xor
adc
pop
aas
mov
cmp
icebp
or
shll
xchg
adc
pop
lods
sub
lcall
popf
fscale
or
mov
sarl
mov
imul
imul
out
adc
loope
outsb
es
fcmovnb
cs
cmpsb
sub
cs
push
movsl
inc
sbbb
dec
icebp
stc
jne
enter
pop
test
and
push
cmp
lahf
and
mov
std
mov
fs
pop
jmp
cli
out
or
dec
das
pop
dec
and
sbb
mov
xor
pfrsqrt
icebp
add
fsubrs
aas
xchg
mov
ja
jp
cs
ss
pushf
addr16
xchg
push
adc
test
addr16
pop
xor
sub
in
cmpsb
sahf
sub
cld
roll
jno
add
dec
test
push
shr
mov
fsts
rorl
push
rcrl
xchg
xchg
leave
mov
loop
int
push
mov
sub
fadd
mov
adc
mov
rorl
fmul
movsl
inc
xor
sbb
sbb
aam
mov
add
repz
dec
sahf
gs
xchg
imul
cld
add
sub
and
cmp
mov
es
push
sbb
out
imul
shrb
insl
fwait
inc
jmp
cli
pop
pop
sahf
sti
loop
cltd
jno
fisubrs
cmpsl
jp
and
popa
addl
insl
ljmp
aad
outsb
insl
fld
addb
cmp
dec
inc
scas
loope
dec
inc
pop
imul
jmp
mov
sub
ljmp
test
dec
fidivrs
cwtl
rorb
jl
mov
sarl
xor
andb
mov
sub
test
rcr
jne
pop
aaa
pusha
dec
lods
in
and
adc
mov
cld
subb
cmpsb
shlb
aam
hlt
cwtl
std
xor
cmpsl
movsl
jo
mov
xlat
fwait
in
cs
mov
jp
mov
loopne
divb
push
jmp
out
repnz
in
mov
fldcw
jp
sti
fwait
divb
rolb
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
idivb
imul
push
or
or
inc
mul
leave
cmpsl
mov
xchg
mov
jbe
inc
pop
push
dec
cmp
sub
sbb
insb
out
imul
cmpsl
fcom
leave
cmpsb
fdivl
mov
jbe
inc
pop
push
dec
cmp
sub
sbb
or
stc
test
mov
fcomip
cmpsb
cld
stc
push
xor
push
sub
adcl
std
sbb
adc
stos
xor
sbb
jns
jns
xor
les
sub
movsb
mov
or
lahf
es
fcompl
dec
repnz
outsb
fsub
imul
and
ret
out
cmpsb
call
sbb
xchg
add
hlt
jbe
dec
mov
sub
adc
jmp
pop
ds
inc
test
pushf
mov
cmpsb
inc
inc
into
mov
movb
push
or
es
leave
cmc
ljmp
sahf
and
int3
out
inc
jbe
mov
sbb
and
mov
pop
shrb
xchg
jbe
jns
imul
sub
sbb
or
stc
imul
leave
cmpsb
mov
xchg
iret
adc
adc
sbb
or
push
pop
inc
jl
jge
mov
mov
out
jmp
loop
cmp
push
sub
push
insb
push
dec
outsb
daa
mov
fwait
fwait
mov
fadd
aas
cld
mov
adc
pop
cmp
or
sub
sbb
or
stc
imul
leave
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
cmp
sub
sbb
or
stc
imul
leave
cmpsb
mov
xchg
mov
jae
lret
ss
push
int3
adc
loop
stc
std
pop
jo
dec
push
mov
loop
or
test
cwtl
sbb
cmc
jl
aaa
icebp
cmp
cmp
repz
stc
iret
stc
jno
int3
adc
inc
fsubs
xor
sbb
movsb
xchg
push
sbb
loopne
hlt
mov
sahf
dec
in
out
clc
jae
or
jecxz
roll
push
test
pushf
inc
pop
inc
dec
jo
popf
mov
rcl
popf
xchg
popl
sbb
arpl
dec
aaa
cli
dec
cmpsb
dec
xchg
pop
fadd
dec
jo
sti
in
cmpl
dec
imulb
mov
rep
push
pusha
pop
xchg
lea
mov
cli
out
pop
jp
mov
sbb
sahf
std
fs
xor
push
mov
cmp
push
fdiv
int3
ja
cld
cmpsb
lods
test
lret
mov
add
push
jne
mov
pushf
test
mov
sti
lock
mov
lea
push
lcall
in
clc
out
in
inc
mov
or
xorl
push
inc
mov
and
clc
push
xor
out
in
mov
andl
dec
xchg
std
push
stos
and
sbb
jge
inc
adc
push
xchg
pop
pop
ficompl
clc
call
add
push
pop
mov
inc
popf
or
test
popa
ret
hlt
adc
mov
mov
inc
mov
and
imul
inc
lcall
cmp
test
out
mulb
jecxz
nop
jle
and
pop
mov
push
cmc
fs
in
pop
push
lret
insb
mov
dec
mov
mov
dec
out
jne
sbb
mov
xor
add
cmpsb
pop
repnz
pop
mov
loopne
mov
cmp
dec
iret
hlt
jl
or
mov
lds
push
lods
mov
fdivs
jge
mov
je
pushf
sarb
push
loop
call
cmp
loope
push
xor
cld
push
notb
bswap
ret
leave
jne
test
shlb
xchg
iret
ret
rclb
lgs
mov
inc
mov
pop
test
adc
sub
shrb
mov
push
cmp
in
lret
out
stc
add
pushf
pushf
lods
lcall
push
repnz
enter
xchg
stc
adc
in
push
lret
pop
mov
xlat
jge
repz
jae
pusha
mov
xor
fucomi
dec
xor
or
sbb
fisubs
cmp
and
pop
mov
pop
sub
ret
add
sub
fnsave
nop
jns
xor
sbb
push
out
arpl
jns
add
daa
loope
rcll
or
push
in
pop
sbb
popa
and
push
add
mov
enter
mov
cmp
mov
xor
push
shll
jp
sub
aam
int3
jg
flds
aaa
inc
adc
or
mov
push
dec
mov
and
in
out
test
aaa
ret
and
jno
imul
enter
jge
inc
rol
sub
add
and
add
add
sti
pop
sarb
push
and
pushf
jno
rol
insb
sub
sbb
mov
pop
arpl
imul
add
or
movb
andl
inc
addl
mov
pop
hlt
dec
and
aam
sbb
in
pop
aam
xchg
mov
lds
or
les
std
inc
popl
orl
or
xchg
cld
and
jns
gs
stos
shlb
pop
aad
mov
inc
add
iret
stos
xchg
dec
stos
mov
xor
testl
xchg
mov
or
test
xchg
push
imul
jle
ja
aam
leave
inc
lds
ljmp
and
fsub
mov
pusha
aas
or
or
mov
daa
rclb
aaa
shlb
and
pop
fs
je
and
push
dec
mulb
or
xchg
adc
insb
lcall
mov
push
in
push
testb
jb
inc
or
jno
shlb
jno
icebp
and
xor
std
fidivrs
dec
insb
adc
sbb
faddp
adc
pop
ljmp
rcl
mov
call
push
mov
fucompp
clc
loop
insl
mov
sar
add
std
and
push
test
push
cmp
rorb
stos
inc
jns
jnp
jmp
push
js
jbe
sub
fcoms
inc
pop
or
dec
push
out
nopl
inc
arpl
shrb
xchg
inc
out
lds
adc
mov
test
shl
mov
cmpsb
and
mov
mov
mov
push
sbb
imul
fisttpll
sub
mov
daa
mov
mov
jecxz
or
sbb
jl
in
xchg
mov
pop
xor
dec
lds
sbb
push
or
leave
add
test
lret
das
out
jmp
scas
pop
aas
jno
in
out
enter
es
cmp
mov
add
shll
jae
inc
inc
in
push
clc
or
adc
push
jno
push
imul
cld
in
mov
xor
sti
xor
in
pop
xchg
dec
push
xchg
movsb
or
call
and
adc
in
mov
push
cmc
test
push
jo
movsl
or
daa
pop
aas
pusha
sbb
jl
inc
je
xchg
mov
ljmp
scas
cmp
nop
jo
pop
ljmp
lret
aad
and
cmp
sti
fistps
incb
mov
dec
lods
push
cmp
xchg
aad
inc
inc
pop
add
mov
dec
push
fwait
xlat
mov
rcr
mov
lcall
adc
mov
mov
inc
and
lods
add
popa
ret
dec
dec
sbb
les
or
es
shrl
popa
xchg
daa
inc
jp
inc
cs
xchg
or
or
ret
jp
movsb
xchg
mov
js
xchg
lahf
in
pop
mov
cltd
mov
movsl
mov
pop
lahf
mov
mov
mov
inc
out
lods
fsts
iret
fnstcw
sbb
xchg
vshufps
xchg
xchg
cmp
ret
push
loop
mov
es
testb
mov
mov
adc
sarb
popf
push
mov
xchg
adc
mov
dec
xchg
pop
sbb
orl
divb
sbb
adc
push
adcb
insb
ja
lret
pushf
rclb
jl
in
les
mov
pop
enter
push
mov
loop
test
lea
divb
xor
mov
add
inc
add
ret
mov
sub
cli
and
inc
mov
jbe
jne
scas
jl
inc
xor
ljmp
xor
adc
outsb
mov
aaa
mov
adc
pop
xchg
pop
loope
out
mov
dec
out
mov
shlb
jo
push
stos
add
icebp
xor
xor
les
clc
push
test
out
fsubl
lock
loopne
fwait
mov
lahf
cmp
mov
pop
mov
jnp
mov
fisttps
sbb
cmp
lds
mov
aad
fcomi
add
xor
cmp
dec
rol
cwtl
in
das
mov
xor
mov
mov
test
mov
inc
ret
mov
push
cmp
adc
in
jg
in
xor
mov
out
mov
sbb
xchg
out
sbb
shl
mov
test
xchg
lock
push
push
es
push
mov
mov
aaa
push
icebp
hlt
out
xor
mov
int3
xchg
inc
mov
push
lods
das
arpl
push
mov
mov
int3
loopw
hlt
mov
fnsave
orl
pusha
sub
test
ss
push
dec
add
jp
cmp
inc
push
cmpb
xchg
icebp
sbb
outsb
jae
push
sarl
inc
popf
dec
sbb
pop
pop
xor
sbb
inc
pop
shlb
adc
xchg
loope
xchg
or
outsl
jne
xor
or
sub
lds
jecxz
cmp
test
pushf
xlat
in
mov
adcl
data16
mov
fsubr
repnz
pop
hlt
daa
jo
stos
scas
dec
push
pop
lds
loop
jae
in
aaa
rep
test
xorl
fs
fcmovne
je
xor
push
or
out
and
push
sbb
xchg
icebp
push
out
sub
dec
jne
loope
push
andb
pop
xchg
cmp
fmul
xchg
dec
and
arpl
cli
insb
ret
rorl
aad
mov
ljmp
add
lcall
popa
inc
loop
cmc
xor
test
dec
jp
mov
pop
mov
sub
in
mov
or
mov
xchg
cmp
pop
adc
xor
repnz
fisubs
mov
int3
mov
negb
sbb
push
jle
inc
in
loope
jo
xchg
scas
stos
push
xchg
mov
out
add
sub
cmc
gs
scas
js
sub
pushf
testb
xor
ja
scas
add
adc
out
mov
add
imul
lret
add
in
rcrb
dec
pop
dec
xchg
xrelease
xchg
in
pop
cmpsb
shlb
jo
xlat
xchg
mov
cmp
popf
mov
je
scas
cwtl
lcall
orl
xor
and
out
aaa
or
dec
add
jbe
test
or
in
mov
test
ret
push
sarl
dec
in
mov
mov
jg
imul
ret
int3
std
or
or
in
jmp
mov
cmp
jecxz
iret
sti
push
or
mov
pop
add
cli
js
lahf
test
and
sti
repz
cmp
pop
fstps
push
jge
scas
ljmp
lahf
lahf
add
mov
xor
or
sbb
pop
mov
jp
shlb
rcll
lcall
push
andl
mov
bound
cmc
out
mov
incb
leave
push
mov
xor
pop
add
inc
mov
ds
or
push
xchg
ja
clc
andl
roll
stos
dec
push
int3
sbb
bound
or
out
fimuls
inc
int3
imul
jmp
in
pop
pop
jmp
adc
adc
xlat
rolb
xchg
xchg
hlt
loopne
ds
insl
fwait
push
add
sbb
lods
addr16
gs
pop
jecxz
xchg
cmpsl
outsb
inc
xor
jnp
and
sarl
icebp
sbb
push
pop
mov
out
les
in
test
sbb
mov
test
aad
push
push
jnp
xor
mov
inc
inc
jp
add
in
movsb
xchg
pop
inc
pop
sbb
xor
iret
mov
pop
dec
ret
xor
popa
fwait
fs
test
jmp
adc
incb
jae
push
ss
xor
cmp
sarl
rolb
or
aad
add
fistpl
cmc
push
pusha
shrl
dec
in
fistps
inc
repz
mov
hlt
fnstenv
sub
add
mov
stos
jae
pop
mov
stos
xchg
jecxz
xor
sub
mov
sbb
pop
rclb
or
mov
push
jb
fs
sahf
xlat
mov
xor
or
lret
lahf
lret
jmp
pusha
mov
rorl
inc
dec
mov
lret
pop
cwtl
mov
ds
popa
ljmp
sub
sbb
test
scas
cmp
mov
xor
add
mov
cmp
inc
std
and
insl
lcall
xchg
ljmp
stos
sub
sbb
dec
inc
push
mov
orb
push
push
in
dec
loopne
pop
das
xchg
aad
jge
sbb
pop
sbb
push
filds
sarl
insb
repz
popf
mov
mov
fcmovu
mov
shll
out
mov
imul
jl
in
push
leave
push
cmp
xor
shll
data16
lcall
addr16
andps
out
mov
mov
cmpsl
cmpl
mov
push
mov
aad
cmp
sbb
popa
movsb
cmp
cmp
and
add
call
shrl
sub
sbbl
shrb
decb
push
xchg
jbe
iret
xlat
mov
and
notb
je
xor
add
sub
rorl
push
mov
mov
mov
movb
inc
sahf
popf
xorb
sub
xchg
mov
pop
xor
and
mov
test
es
bound
mov
shrb
mov
je
jo
jnp
xor
sbb
mov
or
sahf
movb
imul
jl
xchg
data16
insl
xor
dec
or
movsb
negb
call
mov
xchg
cmc
iret
ds
mov
sar
mov
jecxz
pop
pop
in
stc
daa
js
sub
inc
subb
outsb
adc
sub
mov
lahf
roll
and
mov
je
and
adc
sub
cs
add
and
cmp
int
mov
mov
imul
xchg
jecxz
ret
dec
lret
stos
sub
mov
or
add
push
scas
loopne
mov
xchg
nopl
test
dec
xchg
xor
adc
or
mov
xor
movsl
add
dec
les
arpl
shrb
jmp
mov
rcrl
test
push
mov
pop
lods
dec
jg
leave
mov
bound
push
xchg
add
mov
iret
jmp
out
ret
int
fmull
pop
sbb
adc
add
and
mov
shrb
mov
mov
xchg
lret
sbb
fcomp
inc
sbb
mov
movsl
scas
out
adc
inc
mov
dec
and
inc
bound
pop
test
cs
pop
ret
mov
decb
imul
std
stos
inc
jbe
dec
add
leave
lret
jg
adc
outsb
lret
std
hlt
scas
adc
js
and
fnstenv
pop
push
fdivrp
jecxz
insb
fstpl
inc
jp
out
jno
cmpsb
js
repz
js
xor
dec
cmc
es
sub
sub
lret
add
pop
out
mov
or
lret
lods
jge
inc
je
pop
repz
shlb
inc
mov
notl
bound
aaa
pop
stos
sub
orl
cmp
fdivl
imul
dec
in
cs
insb
icebp
mov
mov
fnsave
fcmove
cltd
sub
cld
and
gs
ljmp
int3
lahf
inc
clc
jno
adc
xchg
arpl
imul
cltd
xchg
xchg
or
lret
repz
shr
mov
fwait
mov
pushf
sbb
jg,pn
sti
xchg
xor
leave
mov
adc
cmp
dec
clc
push
mov
inc
lahf
pop
addr16
jbe
out
cmp
insl
mov
hlt
xchg
imul
mov
cmc
xchg
mov
je
hlt
push
in
jno
xor
xchg
add
jo
fnstenv
push
lds
mov
xchg
and
stos
mov
insl
add
fs
lcall
movsl
out
sub
pop
xchg
add
push
and
mov
cli
test
sub
pop
jno
mov
adc
cmp
js
jle
mov
cmp
lret
or
sub
insl
xor
dec
cmp
jnp
test
push
sbb
pop
mov
lods
push
lret
and
pop
push
std
jle
sub
ror
popf
adcb
jno
mov
dec
rcl
mov
cmpsb
push
xchg
arpl
add
mov
jmp
jnp
out
jbe
xor
and
fisubl
add
jbe
push
repnz
and
inc
insl
rorl
nop
cmp
lea
ja
idivb
int3
or
mov
jb
aas
ret
das
scas
es
jae
adc
cld
mov
fdiv
push
std
decl
into
roll
dec
or
pop
sub
lea
nop
or
sti
and
push
rolb
inc
mov
add
gs
jg
mov
mov
fadd
incl
int3
mov
and
pop
cmp
clc
cltd
jle
mov
test
out
or
jge
aam
push
adc
mov
inc
movsl
mov
dec
and
dec
scas
pop
cmpsb
xchg
adc
int3
xchg
ficoml
hlt
adc
or
daa
jge
xor
sub
fnstcw
out
cmpsl
stos
add
jae
ret
ret
mov
xchg
pop
jb
out
cmc
xor
ror
outsl
xchg
xchg
add
mov
adc
lret
test
inc
lahf
pop
jae
aam
add
pop
inc
mov
fidivs
xorl
insb
sub
xchg
repnz
jp,pn
mov
int
shrl
imul
in
inc
and
ret
mov
xchg
add
imul
pop
in
cmpsb
jmp
sbb
fidivrs
sar
cs
and
sbb
aad
mov
pop
pop
addr16
movsb
lock
lret
or
pop
cmpsl
fcoms
les
ret
repz
xchg
sub
xor
add
int
movsl
mov
pop
mov
movsl
loopne
mov
insl
cmp
mov
xor
fildl
dec
push
add
mov
std
adc
lcall
inc
dec
cmpsl
das
je
loopne
xchg
sbb
test
xchg
cltd
jns
aad
xchg
lods
sahf
jmp
mov
or
and
jge
bound
add
xchg
sbb
lret
addr16
cmp
mov
xchg
ret
adcb
mov
fnsave
movsb
mov
inc
add
mov
test
push
jle
jno
xchg
or
jge
sbb
mov
push
sbb
rcl
enter
jl
nop
scas
fnsave
push
sub
or
jo
iret
dec
add
and
lret
movsl
les
pop
cmp
mov
in
sbb
sbb
aad
faddl
vmovapd
gs
pusha
testb
popf
mov
jl
aad
inc
mov
lret
cmp
dec
mov
lcall
cltd
mov
pushfw
notb
push
inc
pop
inc
pushl
scas
jbe
sub
dec
sbb
xchg
mulb
mov
mov
mov
fwait
lea
sub
sbb
fsubr
dec
push
js
mov
repz
mov
mov
jge
xor
test
xchg
push
and
dec
push
mov
push
push
out
ficompl
in
push
jg
fbstp
ret
and
push
xchg
adc
daa
jnp
jge
outsb
sbb
out
sbb
movsb
sub
bound
sbb
and
mov
addb
iret
pusha
movsl
loope
movsb
inc
adc
mov
xchg
test
dec
sbb
loopne
push
out
jae
sarl
frstor
add
dec
jg
xor
into
inc
mov
sub
dec
fildll
orb
inc
outsb
mov
lahf
inc
push
pop
lret
lahf
push
sub
dec
ds
xor
jnp
or
xchg
or
xchg
push
cmpsl
jo
stos
sbb
test
and
cltd
adc
je
or
pop
out
push
dec
sbb
mov
mov
and
mov
lock
addl
in
hlt
mov
fs
sub
push
sbb
jecxz
out
jmp
in
jbe
sahf
push
enter
fstp
jg
je
xor
ret
push
cmp
les
outsl
and
ja
push
xor
push
sbb
sbb
xchg
jo
push
gs
sbb
insb
aam
sub
loop
dec
test
push
and
jp
in
adc
in
dec
aas
jb
ja
out
sub
dec
jl
mov
shrl
inc
clc
push
sbb
popf
test
jbe
shrl
imul
or
test
pushf
jno
dec
xchg
stos
aaa
and
out
aad
das
pusha
xor
das
mov
jg
mov
dec
and
shrb
lcall
pop
pop
sarb
cmp
lcall
jg
jl
daa
mov
pushf
loop
xchg
dec
packssdw
mov
sahf
add
sub
outsl
cwtl
sbbl
adc
test
pop
cli
inc
stos
int3
shr
xlat
jns
mov
adc
add
lahf
bound
in
or
es
repnz
jl
das
cmp
sbb
aam
mov
sub
in
jno
and
mov
adc
data16
push
pop
sub
sarl
adc
mov
test
aam
arpl
in
pushf
lods
xor
xchg
sbbb
loop
and
xchg
and
jmp
insb
gs
add
xchg
ja
dec
data16
in
divb
stos
loopne
sub
lds
sbb
fsts
push
jno
aas
mov
inc
leave
inc
mov
xor
push
fucomip
add
mov
jl
jns
clc
cmpsl
mov
sbb
ret
xor
mov
sbb
outsb
cmp
rcr
ret
dec
int3
add
dec
inc
lahf
std
pusha
fs
mov
push
cmp
mov
arpl
popa
push
dec
xor
aaa
jb
xchg
mov
mov
imul
xchg
and
aad
mov
les
pop
push
or
pushf
pop
push
cwtl
psubd
mov
and
or
cmp
stos
hlt
or
lods
jbe
in
bound
dec
pop
out
lcall
mov
int3
cs
into
insl
add
inc
dec
test
xchg
rcll
pushf
xchg
cwtl
cmpsb
ret
sti
rcl
fstl
loopne
pop
sub
in
lods
adc
sub
sub
repnz
jne
mov
sbb
sub
ret
fcoms
mov
jl
dec
add
adc
hlt
sti
gs
xchg
lret
cltd
or
dec
in
bound
xchg
outsb
in
je
or
dec
mov
cmpl
scas
aam
xor
data16
leave
insb
into
mov
aas
jbe
ror
ds
pop
and
loop
inc
rcll
sub
in
rcrb
add
cmc
sbb
mov
iret
cmc
iret
mov
insb
orl
lods
imul
out
adc
or
mov
test
inc
insl
xor
cli
enter
mov
mov
scas
mov
test
mov
sub
nop
pop
outsl
lods
mov
outsl
ret
addr16
lea
popf
cmpsl
mov
call
sub
cmp
imul
sbb
or
stc
imul
leave
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
cmp
sub
sbb
or
stc
imul
leave
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
cmp
sub
sbb
or
stc
imul
leave
cmpsb
mov
xchg
mov
ja
inc
pop
push
dec
cmp
sub
sbb
leave
out
testb
mov
jns
imul
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
inc
add
adc
and
xor
or
add
lret
loope
icebp
mov
les
hlt
and
and
xor
inc
adc
xor
test
xchg
andb
mov
add
adc
and
xor
inc
jno
aas
xor
repnz
xchg
aad
nop
jecxz
cmc
mov
xchg
ja
pop
popa
dec
sbb
out
sbb
xchg
loope
insl
jl
les
mov
lods
push
lods
pushf
loope
hlt
mov
inc
xchg
shrl
movsl
imul
jle
int
mov
add
sbb
addr16
dec
push
aam
xchg
add
xchg
rcl
sbb
std
icebp
in
rcl
aam
popa
lea
cmp
test
push
fimuls
xor
and
push
jle
xchg
sub
jo
inc
inc
je
mov
stos
push
mov
fsub
pop
mov
les
mov
cltd
pusha
xor
je
inc
clc
pushf
fisubrs
repnz
aad
push
in
loope
add
adc
and
xor
inc
imul
dec
xchg
xchg
movsb
shll
mov
sub
and
and
xor
and
push
and
and
std
adcb
xchg
mov
popf
aam
or
xor
adc
xor
sub
or
sub
testl
fwait
sub
push
and
push
push
and
roll
add
mov
inc
add
adc
and
xor
inc
adc
xor
rcll
les
hlt
inc
add
jl
leave
mov
into
xor
test
mov
cmp
sbb
push
movsb
repnz
push
adcl
mov
push
lcall
mov
mov
and
loopne
jbe
lret
cmp
ds
mov
movsl
adc
mov
mov
sarl
pavgb
push
pop
push
push
arpl
repnz
mov
loop
push
in
int3
scas
sbb
imul
push
in
fstps
add
jge
jp
jae
mov
or
mov
push
insb
es
or
out
push
inc
dec
mov
mov
jg
out
test
cltd
cli
sbb
aad
adc
jno
xchg
jecxz
push
movsw
cli
and
add
sub
xchg
xor
xchg
adc
rcl
and
xor
inc
push
jns
imul
jle
dec
in
scas
push
mov
aam
dec
cmpsl
addb
frstor
bnd
add
add
jns
jmp
cmp
xor
or
imul
mov
iret
negl
add
jg
xchg
sbb
outsl
bnd
mov
add
dec
mov
jecxz
rcrb
dec
int3
into
loopne,pt
sbb
mov
xchg
lods
mov
pop
mov
sbb
adc
nop
sub
lahf
stc
cmp
push
adc
ret
hlt
and
lods
jne
add
add
mov
aas
in
mov
lahf
sub
jbe
fimuls
cmp
test
ret
and
cmp
cmp
popa
test
enter
test
gs
lods
lret
pop
and
push
push
frstor
loop
gs
jmp
jg
push
mov
aam
orl
mov
mov
pop
xlat
sarl
jae
xor
ljmp
pop
sub
xlat
jecxz
mov
sub
lret
insl
inc
mov
loope
lret
or
aam
mov
jg
inc
lods
push
loopne
mov
mov
fistpll
lock
lret
popa
jp
push
mov
push
addl
test
pop
jb
test
mov
mov
dec
cwtl
cmc
jl
cmpsl
divl
ret
mov
cmpsl
jo
pop
jmp
lods
ret
fldenv
push
ja
stos
imul
movsb
sbb
divb
mulb
jne
inc
xchg
inc
and
ja
in
push
mov
cmp
pop
iret
test
ljmp
add
xchg
movsb
cmp
lcall
cmp
jg
data16
outsl
add
push
add
jle
pop
mov
stos
loop
inc
mov
fcmovnb
pop
push
jmp
loopne
pop
dec
fstpl
test
out
push
and
stos
imulb
cwtl
push
jp
sub
pop
inc
and
inc
sub
jb
pop
xlat
aas
movsl
insl
mov
sbb
out
in
jmp
cmp
fldcw
pop
stos
push
mov
push
sub
dec
cmp
xchg
jg
sub
ret
mov
pop
sbb
cwtl
out
iret
out
mov
pop
xor
sub
in
jns
dec
psllq
imul
or
or
in
loopne
in
mov
inc
mov
inc
cli
adc
mov
ret
push
insb
sbb
sub
lock
sbb
orb
push
jbe,pt
sub
or
adc
adc
dec
sbb
jp
sub
inc
jmp
pop
push
fidivrs
push
jns
push
jl
dec
inc
mov
xchg
adc
dec
pushf
in
sbb
dec
frstor
pop
es
fstps
dec
push
mov
testb
or
dec
push
mov
fcmovnu
lahf
and
cmp
jmp
in
xchg
xchg
jmp
jo
call
pusha
enter
pop
sbb
cmp
lds
push
xor
xor
jno
adc
push
xchg
sar
sub
adc
sub
jne
addl
push
push
cld
je
icebp
lods
sub
jmp
dec
xchg
iret
call
cmp
out
mov
xchg
or
add
mov
lcall
mov
push
jae
mov
mov
pop
repnz
addr16
jae
daa
mov
ja
inc
mov
adc
ljmp
js
ret
jecxz
lods
lcall
mov
addr16
add
les
fcomps
add
les
and
pop
fmuls
and
fcomip
jecxz
pop
mov
js
rcrb
scas
scas
or
push
ljmp
mov
sbb
ja
daa
xchg
mov
mov
lret
sub
das
pop
fisubrs
imul
xorl
mov
sahf
inc
adc
and
and
and
incl
add
mov
sbb
mov
lods
popa
stc
jmp
xor
or
icebp
lock
adc
cmp
fwait
and
xor
in
jno
ret
fwait
adc
cli
mov
lock
inc
cmpsl
lahf
lret
dec
outsb
adc
sbb
mov
movsb
clc
and
mov
mov
jl
add
lds
fsub
jle
aam
and
cmpsl
push
adcb
jae
pop
jmp
add
test
cmpsl
enter
inc
sarb
lods
xor
scas
and
jb
mov
arpl
jmp
xchg
hlt
test
sarl
repz
xchg
enter
jnp
xlat
mov
stos
add
cld
push
dec
adc
xchg
js
fwait
test
fnstcw
cmpsl
mulps
pop
adc
call
push
dec
bndldx
stc
mov
xchg
push
es
jae
les
sahf
leave
xchg
data16
ja
sbb
addr16
lea
xchg
adc
jl
xlat
repz
lret
mov
in
inc
adc
or
rcl
ja
jo
insb
and
and
mov
imul
fldcw
pop
cmpsb
test
xlat
pmulhw
out
dec
movsb
sub
mov
in
xlat
push
stos
repz
sub
test
ds
push
jne
mov
add
jg
pop
icebp
es
mov
lods
stos
dec
cltd
ljmp
sbb
sbb
int3
fwait
mov
or
mov
jg
sub
jae
jb
sbb
movsl
aam
push
loopne
pop
mov
movsl
outsl
cmpsl
in
mov
jae
insb
xchg
adcb
mov
cltd
call
sbb
stc
inc
jne
in
leave
inc
insl
sub
orb
mov
lret
xchg
jns
repnz
cmpsb
mov
mov
mov
stos
dec
icebp
xchg
sub
xor
std
shll
xchg
push
in
mov
shll
mov
addb
scas
lds
cli
push
push
sbb
out
push
mov
cs
add
pop
stos
lret
sbb
aad
adc
imul
flds
jecxz
dec
sarb
pop
mov
sti
lcall
inc
lods
add
inc
mull
dec
and
pop
repnz
dec
sbb
jmp
out
dec
push
lcall
in
inc
aas
sub
jp
faddl
jo
inc
cmp
ror
push
push
jmp
cmp
mov
lods
jmp
xor
das
daa
es
or
movsl
add
adc
lret
test
lock
and
fmul
sahf
jne
mov
es
and
push
push
mov
fcompl
and
sub
xchg
mov
cmp
mov
push
cwtl
test
cmp
push
out
push
add
sbb
js
mov
data16
inc
jecxz
xor
hlt
xor
sbb
leave
insl
and
loop
sbb
bound
pop
sub
jmp
dec
xchg
xor
cwtl
or
rolb
cmc
popl
cli
push
test
adc
subb
lock
mov
cmp
or
data16
mov
stos
int
and
ds
stos
cmp
jae
xchg
mov
aad
loop
mov
rorb
fsub
mov
scas
cmp
in
ret
and
adc
sbb
dec
fbstp
test
push
mov
and
mov
adc
sbb
jge
xor
push
push
shlb
lret
lret
mov
icebp
mov
sub
idivl
dec
xchg
loop
mov
cmp
adc
mov
dec
mov
insl
adc
or
movsb
mov
jns
pop
loop
fstps
shlb
sub
and
popa
add
clts
jnp
lret
popf
cmp
sti
out
add
int
ret
cmp
js
imul
lcall
repz
push
ret
inc
xchg
sahf
jbe
xchg
and
inc
pop
push
cmp
mov
xor
adc
and
mov
xlat
adc
xor
xor
out
adc
js
sub
js
xchg
daa
cmp
ja
call
int
testb
mov
out
sti
add
mov
inc
mov
je
outsl
enter
add
mov
ret
fidivs
and
push
mov
insb
adcl
out
mov
cmp
add
push
popf
or
outsb
dec
and
iret
orl
and
dec
jbe
orb
orl
sbb
cmp
cmpsl
push
mov
fwait
and
sbb
add
push
push
mov
lret
mov
rcll
cmp
lods
hlt
jle
cs
in
movsl
rorl
call
sub
jl
jne
pop
aad
xor
add
mov
nop
pop
imul
jl
push
fisubrs
fwait
lcall
mov
nop
inc
mov
sarb
lods
cmc
sbb
into
fsubs
mov
mov
cmp
jno
sub
or
pop
inc
lahf
out
stos
push
sbb
mov
lahf
or
popa
test
shr
sub
dec
push
or
je
imul
push
insb
loopne
in
in
add
bnd
sbb
mov
pop
sub
pop
and
push
cmc
dec
push
out
inc
addr16
aam
shrd
mov
call
jno
jg
cmp
cmp
push
cmpb
leave
hlt
stos
dec
iret
pop
mov
ret
sbb
lds
inc
popa
mov
pop
popf
shll
mov
sbb
xchg
stc
in
mov
pop
sub
mov
icebp
sahf
adc
push
or
push
in
popa
fistpl
inc
cld
or
add
pop
xor
adc
sti
or
fists
mov
aad
fnstcw
fcomps
enter
push
add
xchg
push
pop
pop
inc
jp
cmp
or
adc
fbstp
add
rorl
add
mov
scas
pop
or
cld
add
jb
test
stc
lock
sbb
mov
and
enter
fbld
dec
sub
push
mov
jo
mov
insl
in
mov
sbbb
loope
adc
add
insb
mov
insl
xchg
movsb
ds
sbb
xchg
jp
xchg
ljmp
xor
or
gs
int3
mov
xor
pushl
popf
mov
ja
jmp
aad
add
dec
ja
imul
jl
jb
ret
rorb
inc
mov
iret
mov
pop
and
sti
push
xchg
pushl
les
sub
ret
ret
xchg
loopne
xchg
in
outsl
inc
push
out
aaa
test
inc
dec
aad
test
push
lods
xor
es
or
imul
movsl
jb
pushf
or
lret
pop
mov
xor
mov
pop
inc
loopne
mov
jge
imul
mov
scas
xchg
outsb
adc
jb
mov
adc
mov
pusha
arpl
and
pop
jecxz
in
pop
leave
insl
mov
and
bswap
lret
ret
ss
mov
and
and
inc
mov
push
inc
leave
jp
xchg
sarb
clc
cmpsb
jbe
jg
jb
sub
cmp
imul
pop
xlat
jbe
popa
mov
stc
push
xor
inc
or
xor
hlt
xchg
cmp
inc
sbb
aam
enter
push
in
push
sbb
push
or
mov
inc
mov
rcll
inc
loope
jmp
in
in
pop
es
pop
cmp
add
push
jo
cld
lcall
mov
mov
push
jmp
stos
das
add
mov
pop
int
dec
mov
jle
push
inc
divb
rorb
es
sarb
sub
call
ror
cmp
lahf
adc
push
sub
mov
das
jle
xor
aam
mov
cwtl
push
or
negl
mov
pop
leave
outsl
lcall
popf
fisttps
out
aas
cli
sub
and
scas
and
push
push
imul
pop
lods
sbb
clc
sbb
shlb
popf
inc
aas
jge
popf
cmc
lods
jecxz
sti
aas
lahf
adc
mov
mov
push
ljmp
out
sub
clc
add
pop
xlat
fisubs
ret
push
cmp
mov
mov
hlt
sbb
push
inc
mov
inc
loop
inc
mov
pop
test
add
cmp
fcomps
dec
ficoml
xchg
nop
mov
cmp
mov
decl
xor
sub
and
fistpl
pop
scas
lods
les
sarl
cmp
in
loopne
cmp
gs
xchg
mov
push
adc
daa
clc
xchg
fadds
cmp
lss
pop
mov
rcll
es
sti
fs
lret
inc
cmpsb
xchg
mov
cld
sbb
xchg
lds
lds
cmp
sbb
aad
or
jno
out
xchg
movsl
mov
mov
movsl
loope
sti
or
hlt
xchg
rcrl
add
lcall
lret
lret
lcall
shll
mov
outsb
pusha
push
popf
insl
call
pop
mov
stos
xchg
pop
xor
das
sub
adc
push
hlt
add
lds
inc
push
scas
in
or
push
cwtl
sbb
dec
pop
mov
call
loopne
es
push
inc
mov
pop
jge
lret
dec
cmp
push
lcall
cltd
mov
sbb
insl
mov
cmp
xchg
inc
dec
and
fwait
sbb
aas
pop
mov
nop
xchg
and
mov
sub
sbb
in
inc
in
lds
imulb
call
cmpsl
pop
and
es
mov
outsb
jp
movsb
mov
imul
and
shll
xchg
sub
cli
leave
sbb
out
inc
jb
adc
dec
loop
push
mov
pop
pop
in
popa
shl
aas
icebp
movsb
xor
out
lods
mov
lcall
push
sbb
arpl
adc
cmp
outsb
ret
dec
pop
sub
fs
push
ret
int
scas
xchg
testl
lahf
mov
into
stos
sub
rolb
mov
outsl
or
out
sti
adc
jb
dec
mov
dec
adc
sbb
lahf
sbbb
or
or
out
lcall
in
imul
js
and
sbb
sbb
imul
cmp
in
std
adc
dec
jmp
push
aas
cmc
andb
es
jns
add
pop
outsl
lds
inc
enter
mov
jno
sti
push
jnp
push
sbb
ja
push
add
mov
fldenv
inc
je
adc
push
testl
jne
dec
mov
pop
gs
add
cs
iret
adc
xchg
pop
xor
pop
jb
aas
mov
push
mov
imul
pop
and
cli
popa
and
push
pop
data16
cmpsb
dec
cli
insb
xchg
push
outsl
outsb
sbb
pop
mov
rcll
xchg
dec
iret
and
sti
dec
sub
xor
adc
ss
pop
aam
ficoms
loope
mulb
adc
and
ja
movsb
sub
xchg
lods
int3
xor
scas
cmp
mov
jmp
mov
cmpsl
fistl
mov
js
fldt
dec
pop
inc
pop
aam
call
jle
dec
cmc
call
test
aam
loopne
scas
daa
jne
lea
xchg
add
das
pop
pop
std
jge
sub
scas
pop
mov
ljmp
imul
mov
mov
rcrl
sub
or
pop
out
mov
jne
orb
mov
pop
sub
add
outsb
mov
popa
pushf
jmp
fs
cmpsl
xchg
sub
fwait
test
sarl
imul
mov
push
add
js
cmpsl
dec
xchg
bound
inc
pop
cmp
sub
imul
ret
ja
xchg
pop
cmc
pop
or
push
dec
cmpsb
jl
xchg
dec
leave
insb
adc
lock
jno
mov
jnp
jmp
sbb
mov
add
and
jg,pt
or
mov
push
sub
inc
pop
jg
mov
lret
lods
cmp
inc
sbb
sbb
mov
xchg
sub
xchg
pop
fdivs
mov
xchg
bound
push
xchg
pop
ljmp
js
ds
std
push
or
or
pop
jp
xchg
inc
ret
dec
rcl
aam
iret
into
or
lahf
push
fs
pop
inc
jmp
and
jnp
add
and
push
push
lcall
mov
inc
lret
pop
or
cmp
mov
mov
push
cld
inc
mov
mov
adc
lret
icebp
mov
inc
fdivp
stos
test
nop
mov
sbb
push
and
and
rcl
cmp
or
fmul
push
cmp
dec
pop
jno
rcrl
sarl
pop
add
adc
movsb
cmp
or
lcall
jo
mov
test
and
mov
pop
cwtl
mov
lods
xchg
or
jo
mov
pop
inc
shl
push
loope
mov
cmp
pop
lcall
repz
pushf
xchg
and
cs
sub
push
cld
adc
hlt
ficompl
add
popa
inc
pop
mov
dec
jns
sub
daa
pushf
pop
test
ljmp
jo
lahf
jns
xor
bound
lcall
or
mov
jge
ret
test
push
mov
int3
orl
data16
imul
ds
mov
or
lods
out
lret
shrb
aas
mov
lds
dec
cli
mov
xchg
icebp
mov
loope
xor
xchg
dec
xchg
pop
mov
dec
sub
sbbl
frstor
xchg
xchg
inc
pop
ja
loope
lret
rcrl
test
js
push
fbstp
rol
rol
jl
jbe
cmp
push
in
scas
subb
add
out
sbb
pop
add
outsl
xor
mov
mov
aad
xlat
lods
arpl
xchg
outsb
leave
xor
lahf
stos
mov
dec
jmp
sub
hlt
cwtl
movsb
sub
sub
push
push
adc
insb
hlt
sbb
jmp
out
dec
fisubrl
shrb
ljmp
sub
jl
lods
sub
sbb
jns
xor
loop
loope
and
sarl
push
arpl
mov
movsb
add
bound
pop
or
push
sub
xor
push
outsl
xchg
mov
and
adc
cltd
jb
xchg
pop
mov
ret
mov
push
lcall
inc
fucomi
xor
outsb
call
mov
shlb
aad
mov
or
xchg
lods
mov
movsl
lods
xchg
xlat
jne
or
inc
shrb
jbe
jge
inc
lock
lahf
mov
iret
sti
sbbl
add
sbb
orl
mov
out
pop
mov
fistpl
pop
cmp
xor
lods
movsl
pop
not
jmp
stos
pusha
stos
jnp
in
inc
dec
sub
aaa
cmpsl
cmp
mov
xor
int3
or
into
sbb
push
push
inc
cld
fidivl
cltd
mov
jns
daa
test
arpl
mov
loopne
adc
push
ljmp
adc
xor
add
arpl
fistl
adc
das
movsb
xorb
pop
int3
lcall
lock
pop
mov
xchg
push
rol
mul
adc
or
cmp
flds
ud0
add
fdivrs
imul
sub
xchg
mov
and
sub
fs
push
sbb
add
or
dec
push
pop
aaa
stos
inc
push
mov
pop
scas
cmp
rcrb
out
fwait
mov
jle
sub
lahf
sbb
repz
mov
lahf
jp
xor
push
cmp
lods
xchg
cwtl
outsb
in
test
dec
adc
sub
pop
jmp
adc
pop
pop
in
pop
adc
jbe
add
fisttpl
push
dec
xlat
pop
xlat
mov
sbb
pop
jmp
test
cmpsb
mov
and
sbb
movsb
jl
test
sub
cmc
dec
cld
fwait
sub
or
push
repz
adc
push
clc
jno
test
std
fidivrs
fists
aad
int3
ds
js
int3
mov
repnz
xor
pop
outsl
jns
dec
mov
or
int3
cmp
push
int
fwait
lock
int
mov
shll
dec
mulb
mov
push
cmp
adc
ds
xchg
movsb
stos
pop
add
adc
shll
leave
pop
dec
outsl
jl
jmp
std
jno
push
addr16
loop
xchg
sub
jmp
inc
cld
in
int
pop
divb
dec
push
lret
jno
pop
enter
pop
mov
mov
pmullw
pop
call
in
jne
adc
fcmovnbe
repz
mov
push
mov
mov
cmp
sbb
pop
sti
gs
cmpb
out
loope
or
xchg
popf
nop
orb
push
push
pop
loop
shlb
sbb
fisubrl
xor
pop
xchg
repnz
leave
scas
insb
test
inc
mov
jae
dec
xchg
push
inc
rorb
popa
and
out
aam
insl
sub
push
test
lcall
adc
fs
inc
in
jo
pop
mov
cmpsb
xchg
out
pop
dec
adc
cmp
xorl
ffreep
dec
pop
and
call
lret
cmp
push
dec
jbe
lods
gs
pop
mov
xchg
cld
jle
pop
pop
push
loop
cmpsl
inc
repnz
movsb
push
int3
cli
faddl
mov
rcrb
aaa
loope
pop
adc
pop
sbb
xor
jae
xor
in
or
xor
inc
adc
xor
rcll
les
hlt
inc
add
adc
and
xor
inc
adc
xor
rcll
les
hlt
inc
add
adc
and
xor
inc
adc
icebp
je
test
xchg
adc
aam
in
hlt
push
add
adc
and
xor
inc
add
mov
roll
testb
sbb
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
cmp
sbb
inc
int
push
dec
sub
push
mov
mov
stc
mov
out
xchg
leave
xchg
jbe
sbb
inc
jns
imul
test
xchg
stc
mov
cmpsb
fsts
xor
push
adc
ss
inc
push
dec
push
mov
cmpsb
icebp
stc
in
ret
sahf
xchg
inc
adc
xor
sub
imul
aas
ljmp
icebp
mov
jle
sbb
es
inc
mov
push
into
imul
cmp
addb
jbe
sub
arpl
mov
mov
in
lods
rclb
mov
mov
mov
xchg
fldcw
xchg
mov
rclb
push
xchg
push
push
xor
test
lods
sub
push
in
notb
leave
cmpsl
imul
jmp
fsts
mov
out
sub
add
jecxz
xchg
shl
leave
sahf
pop
push
divb
xchg
imul
or
in
fld
mov
or
lock
sbb
inc
outsb
ss
pop
push
push
push
mov
nop
loope
icebp
cmpsb
ret
xchg
leave
rclb
mov
adc
or
addr16
dec
jbe
lcall
stc
fisttpl
push
aaa
dec
sub
push
jns
adc
jns
push
cli
mov
mov
flds
call
jne
popa
xor
pop
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
push
jae
movsb
jp
adc
xchg
lea
rcll
repnz
mov
jmp
push
inc
lea
xor
xor
mov
xor
jge
mov
pop
xchg
sbb
push
dec
fsubr
outsb
lcall
pop
int3
rcl
push
ljmp
hlt
je
addb
int
out
xchg
ljmp
into
fs
ljmp
xor
mov
inc
mov
cld
lahf
hlt
push
pop
fwait
jl
xchg
mov
enter
pop
aam
mov
ljmp
ljmp
sbb
cmp
push
inc
and
hlt
mov
jecxz
pop
pop
ss
loop
lret
fmuls
xchg
xor
sbb
out
dec
cli
fcmovu
iret
push
call
or
inc
mov
sbb
adc
aad
fwait
and
pop
fnsave
lock
sub
cwtl
insb
xor
cmp
mov
jg
cmpb
addr16
ret
push
jo
int3
in
jle
aam
cmp
or
js
add
dec
add
inc
dec
ja
jle
xchg
andb
fnstenv
inc
rcrb
cwtl
and
push
divb
popaw
movsb
cmp
vpmaxub
cmpb
fimull
xchg
das
jns
or
jae
dec
mov
mov
lea
out
lahf
xchg
jp
popa
dec
mov
mov
into
inc
inc
mov
incl
adc
mov
fs
rclb
jmp
call
xor
insl
movb
movsb
cmp
sub
jmp
fstpl
mov
jae
inc
lods
inc
cs
imul
and
leave
push
dec
pop
daa
imul
add
mov
add
jne
xchg
rcr
rcl
in
fmulp
cmpl
fistl
fs
or
pushw
leave
sbb
les
dec
add
xchg
add
lret
rclb
add
mul
pop
outsb
cmp
mov
mov
push
outsl
pop
mov
pop
add
fimull
push
jnp
cmp
xlat
ljmp
popa
jmp
in
mov
scas
push
lret
and
fwait
add
dec
inc
jg
xchg
xchg
icebp
and
adc
popf
add
insb
mov
lcall
andb
dec
aam
or
insl
sar
lods
xchg
mov
lock
mov
rorl
xor
fsts
aas
mov
jns
je
mov
add
xchg
cmpsb
in
mov
jne
je
cmp
outsb
cmpsb
inc
xor
ss
or
js
xchg
call
cs
add
loop
pop
pop
call
outsl
outsb
loope
fidivrs
add
ss
enter
pop
rolb
inc
insb
aas
lcall
push
mov
nop
xchg
insb
imul
jo
xchg
add
push
popf
pop
stc
inc
add
lret
xchg
jo
mov
ss
mov
fistl
sti
iret
aas
and
dec
jno
sbb
pop
or
inc
leave
outsb
and
fs
cmove
sub
ret
xor
daa
inc
inc
and
loope
cld
mov
jnp
sbb
inc
or
adc
adc
mov
mov
sbb
cmp
and
gs
mov
jo
addl
jne
aam
mov
and
dec
in
testl
inc
jge
sqrtps
cmpsl
mov
inc
sub
out
sub
or
and
rcll
nop
pop
pop
sbb
dec
mov
leave
push
adc
jle
lahf
and
ja
lds
outsb
xor
mov
iret
or
xchg
lea
aas
nop
pmulhw
sbb
aas
mov
ret
inc
and
mov
sbb
or
arpl
xchg
adc
cmp
xchg
insb
rclb
sub
cmp
test
adc
and
inc
outsb
mov
push
mov
arpl
in
dec
lods
lahf
xchg
subl
lea
mov
nop
mov
xor
in
push
adc
in
outsl
pop
and
icebp
cmp
jg
sbb
jbe
hlt
lcall
clc
adc
fs
sbb
sub
xchg
xchg
adc
sub
sbb
fsub
jb
push
xchg
cmp
flds
xchg
mov
js
mov
cli
xor
out
gs
mov
push
mov
popl
inc
mov
loopne
fldcw
cmp
loope
adc
cmp
arpl
mov
push
mov
or
in
ret
mov
mov
in
mov
out
and
jb
je
shrb
mov
test
jbe
sbb
sbb
jl
andb
jb
xchg
pop
sbb
imul
pop
jmp
dec
lahf
test
and
enter
cmp
imul
sbb
sub
pop
and
inc
and
rclb
jno
daa
pop
cmp
dec
inc
cmpsl
mov
idiv
pop
pop
lret
xor
mov
and
ficomps
jge
add
rcll
sar
fisttpll
fs
sub
out
jp
add
movsl
and
movsl
sub
rolb
dec
fsubs
pop
adc
aas
xchg
adc
pop
cmovs
insb
cmp
jae
push
cld
mov
add
pop
mov
aam
popa
cwtl
je
hlt
sbb
ja
pusha
int3
push
pop
jno
in
fwait
mov
loopne
pop
int3
std
sub
dec
mov
sub
mov
aaa
loopne
aas
out
jmp
lret
and
ds
lcall
in
xor
mov
outsb
loopne
or
test
push
aad
jge
cmp
out
subb
mov
fldcw
int
ja
mov
dec
or
adc
popf
loope
mov
push
icebp
jecxz
xor
push
or
push
aam
mov
clc
insb
mov
xlat
mov
in
xor
cs
xchg
sub
into
stos
out
add
ror
adc
and
xchg
push
clc
push
push
lea
push
cmp
ljmp
xchg
ret
loope
cmp
sbb
leave
imul
push
sub
and
test
out
pop
xchg
jg
addl
lods
jne
sbb
lds
ds
xor
and
and
inc
imul
pop
lea
pop
add
std
inc
pusha
movb
lds
out
stos
fimull
pop
xor
lods
add
push
les
dec
sub
cmp
push
mov
insl
jg
adc
movsl
mov
pop
jle
pushf
imul
ja
jbe
cmpsl
roll
sub
ret
js
stos
jp
and
mov
testb
xchg
ja
push
pop
jge
mov
pop
pop
insb
xor
imul
jmp
repz
les
or
sub
lods
neg
push
xchg
rclb
lock
push
fisttps
xchg
or
add
jnp
mov
hlt
push
fsubrp
adc
into
clc
and
add
aaa
add
loop
inc
xchg
cmp
push
inc
clc
or
pop
jo
sub
fcomps
and
mov
mov
imul
cmp
sub
pop
iret
call
dec
xor
jbe
and
jns
jne
adc
xchg
lret
xlat
push
xchg
fs
flds
cltd
adc
sub
sub
iret
push
in
sub
shll
cltd
xchg
sbb
push
fldcw
dec
out
jle
loop
ljmp
jecxz
popf
sbb
mov
xchg
push
jmp
aaa
sahf
je
mov
push
push
jmp
movsl
dec
xor
lock
mov
aas
std
pop
sub
imul
inc
xorl
mov
addb
pop
cmp
test
adc
cmpsl
dec
mov
test
fldenv
dec
fwait
adc
cmpsb
movsl
rcrl
stos
pop
inc
dec
cmpsl
xlat
mov
jle
sbb
dec
pushf
jb
cli
cmp
push
sahf
push
call
je
popa
imul
mov
in
daa
gs
lahf
inc
inc
mov
add
xchg
push
jg
xor
icebp
in
enter
sub
addr16
sub
mov
jbe
lods
push
out
cmp
or
iret
mov
xor
out
cli
xor
daa
add
cld
cmp
aam
xchg
adc
movsb
mov
ds
ds
cmp
mov
xor
test
aaa
or
lea
comiss
adc
lods
test
mov
pop
ja
ret
js
pop
fldl
mov
push
sub
icebp
das
dec
fistl
and
push
jle
cmp
pushf
in
add
mov
xchg
test
jle
sbb
popa
sub
fiadds
xor
push
call
sub
cmp
push
xor
xchg
cmpsb
add
jae
cmpsl
sbb
jp
mov
aad
xor
out
pop
sti
pop
or
and
adc
popa
jmp
push
std
xlat
inc
dec
das
lret
pop
mov
mov
cmp
add
loop
int3
add
jae
loop
shll
push
xchg
lock
ljmp
movsl
test
loope
test
xchg
xchg
inc
in
jb
mov
ret
repnz
xor
xor
fisttpll
in
shlb
jne
mov
data16
aam
xor
aaa
test
scas
int
rcl
imul
out
out
push
sub
scas
mov
mov
xchg
cmpsb
dec
adc
jge
enter
pop
mov
daa
jb
popa
lret
pop
inc
jns
xor
sti
or
inc
subl
bound
cli
fidivl
cmp
aaa
out
mov
out
lahf
pop
pop
jo
jo
scas
test
test
add
movb
sbb
sarb
fwait
daa
daa
lock
lahf
cltd
dec
inc
in
imul
and
pop
movsl
arpl
mov
lcall
jge
mov
les
mov
mov
jns
test
test
xchg
jne
push
test
pop
adc
ret
inc
seto
mov
and
sbb
pop
push
lods
pop
cmpsl
daa
xchg
mov
aaa
or
movsb
mov
push
jnp
push
outsl
mov
cld
out
gs
div
xchg
add
nop
push
in
cmp
add
int
ret
dec
jg
stc
pushf
and
mov
cmc
cli
xor
jmp
fs
sub
add
outsl
adc
xor
lds
xor
es
pop
lcall
shl
cwtl
jno
idiv
test
sbb
mov
lret
lock
ja
mov
or
shlb
in
loop
xor
in
xchg
push
jp
pop
inc
sub
stos
inc
mov
fbstp
mov
lahf
lods
rol
mov
push
xor
lea
jne
xchg
xor
push
jns
in
ficomps
and
jge
jnp
pushf
movsb
nop
sbb
aad
add
loop
mov
mov
lret
dec
lods
jne
fistpll
dec
inc
or
sahf
std
mull
jbe
mov
aad
mov
mov
sub
mov
push
push
mov
jns
jmp
mov
mov
in
imul
int3
sbb
outsb
cmp
test
and
clc
pop
sbb
or
adc
mov
xor
scas
repz
add
mov
cmpsl
xor
add
outsb
daa
inc
cltd
cwtl
jle
xor
xlat
mov
lcall
add
sub
mov
push
jecxz
sbb
ljmp
mov
inc
jle
cmp
testl
mov
stos
outsl
in
test
push
js
pushl
ss
fistpll
lea
cltd
daa
add
add
jno
or
popf
inc
sbb
bound
mov
add
insl
out
aam
jecxz
in
cmp
jne
lahf
sti
out
push
xchg
inc
lds
jns
push
adc
mov
and
inc
scas
setle
ja
or
hlt
and
dec
pop
addr16
inc
out
dec
dec
les
repz
dec
sub
jge
mov
enter
pop
or
dec
hlt
mov
call
add
stos
int3
bound
xchg
fs
inc
and
aam
lods
xchg
nop
cmp
xchg
adc
icebp
stos
mov
sub
cmp
subl
dec
insl
rclb
mov
or
inc
push
or
add
imul
sbb
jmp
mov
push
mov
and
ss
mov
jge
repz
addb
out
inc
test
jmp
inc
hlt
out
movb
and
jae
bound
mov
xchg
add
scas
mov
mov
fidivrs
jmp
insb
mov
scas
inc
cmp
sbb
inc
insb
cs
xor
addb
lds
test
in
inc
pushf
sbb
daa
sti
xchg
cmc
adc
and
xchg
aas
hlt
push
in
adc
push
ljmp
clc
cs
adc
sub
fs
je
add
adc
sub
and
call
xchg
mov
sub
cmp
lds
fldt
gs
pop
xlat
outsl
lahf
sbbb
andb
ss
or
je
jbe
in
jae
lods
and
lea
and
lahf
cs
loopne
iret
outsb
sbbl
bound
and
inc
sti
adc
lahf
jb
sbb
mov
adc
xor
imul
inc
je
mov
jmp
or
stc
xchg
push
test
idivb
dec
cmp
sub
into
pop
jbe
pushf
or
jb
jnp
mov
pop
add
subl
std
or
popf
inc
inc
mov
lea
gs
aam
mov
testb
sarb
fnstcw
hlt
je
scas
sbb
cli
rcrb
jecxz
lret
or
pop
dec
jno
sbb
mov
push
dec
testl
add
or
shlb
mov
jmp
cmc
xor
mov
in
aaa
into
mov
xchg
mov
cli
repnz
ds
stc
mov
adc
or
cmp
ja
sub
or
ret
enter
ret
imul
xchg
cmp
sbb
jg
push
add
jg
sub
imul
call
dec
xchg
outsb
leave
addr16
icebp
bnd
mov
shlb
fstl
sub
push
or
mov
pop
cmp
add
mov
imul
out
jecxz
inc
cmp
loop
xor
daa
aaa
hlt
adc
jnp
dec
es
pop
xchg
cmovg
inc
inc
xor
adc
scas
adc
faddl
aam
and
bound
inc
pusha
mov
adcl
mov
sahf
in
sbb
mov
adc
faddl
jno
test
xor
push
sub
loop
inc
rcrl
adc
mov
fsubrs
sbb
movsb
or
and
mov
pop
bound
shl
and
adc
inc
inc
movsb
sbb
das
lret
adc
outsl
and
xchg
aaa
cmp
xchg
jmp
sti
cmp
ret
outsb
cltd
iret
push
ja
cli
xor
sarw
fnstenv
sub
in
push
add
lock
aad
incb
pop
lock
mov
pop
out
stos
sub
hlt
jge
jb
insb
xor
dec
add
jle
and
xchg
roll
les
call
ja
xor
pop
outsb
jle
insl
imul
rdpmc
push
stos
xchg
bt
jecxz
iret
dec
loop
out
push
aam
lock
or
mov
repz
pop
test
mov
insb
push
xlat
and
pop
lea
jbe
leave
push
mov
and
sub
lahf
sub
push
rclb
xchg
les
push
js
jge
pusha
push
pop
hlt
xor
pop
mov
fistps
ret
cmp
or
mov
fldlg2
and
xlat
dec
dec
pop
lods
adc
imulb
adc
mov
xchg
adc
loopne
push
sub
sub
mov
add
cli
adc
hlt
xchg
aaa
inc
push
push
mov
xor
divl
mov
lods
js
xchg
sbb
inc
test
scas
xchg
loop
dec
pop
shll
add
push
mov
cwtl
sub
sub
mov
adc
push
adc
lds
stos
push
add
push
mov
js
mov
leave
mov
shl
leave
popl
iret
orl
lock
jnp
lcall
addr16
or
mov
push
jg
pop
adc
test
adc
xchg
add
dec
mov
insl
sahf
sub
push
jecxz
cwtl
jbe
adc
movsb
lret
dec
xor
inc
aaa
mov
mov
aam
movsb
xor
movsl
and
stos
ds
lods
pop
pop
cmp
and
mov
lods
es
or
mov
jl
lods
add
pop
mov
sbb
stc
call
js
test
les
dec
fwait
bound
xchg
jnp
push
out
dec
repz
and
pop
and
xor
pop
imul
jecxz
lcall
sbb
les
out
es
xchg
sbb
das
mov
push
mov
stos
jecxz
mov
int
sbb
ja
int
pop
xchg
push
mov
push
add
scas
and
je
sahf
adc
addr16
into
int3
shlb
mov
adc
cmpsl
mov
inc
mov
lods
pop
jp
dec
pop
mov
fisttpll
lahf
daa
dec
push
sbb
cwtl
call
sub
sbb
js
rcl
inc
pop
cmpb
jge
mov
lcall
push
sub
jl
insl
sbb
mov
sahf
push
lds
repz
push
xchg
xlat
in
ret
mov
mov
push
and
rclb
out
cli
je
ret
fwait
pop
xor
pop
jl
inc
pop
dec
ds
push
or
ja
sti
xor
cmp
in
dec
clc
cld
fadd
jb
leave
adc
sub
mov
adc
testb
xchg
pop
imul
xchg
jp
xor
jl
push
fcmovne
jno
icebp
pop
iret
mov
in
test
es
and
nop
scas
cmpsl
bt
mov
int3
js
mov
mov
shlb
or
and
bound
push
push
push
jae
int
sub
xchg
lahf
mov
jmp
lret
fisubs
xchg
lock
pop
pop
js
sbb
mov
and
outsl
cs
mov
mov
inc
cmp
dec
add
loop
xchg
into
arpl
adc
pop
faddl
dec
adc
mov
add
ss
xor
add
in
scas
or
seto
pop
mov
std
adc
cmp
sbb
popa
es
movsl
sub
test
adc
jb
add
pop
mov
add
je
pop
fcomps
xchg
xchg
fistpll
mov
inc
add
aam
push
in
add
xlat
into
lcall
inc
xor
repnz
mov
mov
mov
popf
jl
jno
aas
push
out
iret
xlat
pop
adc
or
push
sbb
push
mov
jle
mov
mov
ja
jne
int
aaa
ret
incl
lock
or
and
pop
les
dec
inc
cmp
test
ds
sbb
leave
xor
jmp
sub
popf
sbb
rcll
movb
pop
dec
test
mov
adc
push
sub
mov
ljmp
imul
inc
push
mov
or
mov
xlat
cli
insb
dec
std
imul
outsb
mov
jmp
mov
sub
adc
pusha
popf
or
mov
les
dec
adc
mov
out
or
aad
test
popf
and
test
push
inc
mov
enter
cmc
cs
cmp
push
fisubs
sti
test
cmp
arpl
stos
xchg
movsl
sbb
adc
sbbl
dec
pop
xlat
adc
ret
push
cmp
jnp
cmc
cmp
xchg
dec
push
or
push
dec
repz
sub
insl
mov
sbbl
xchg
repz
sub
push
rcll
dec
adc
and
imul
test
loope
and
sub
arpl
mov
xchg
mov
sahf
xchg
jmp
jle
adc
stos
lahf
xchg
sub
mov
adc
mov
int3
in
jl
inc
out
test
pop
cmp
fldl
je
shrb
test
frstor
sub
dec
cmp
popa
push
inc
repz
jle
cmpsl
movb
rcll
test
inc
fisttps
lods
int3
inc
in
ret
test
add
jge
cmp
or
sti
popa
push
sub
iret
fidivl
add
dec
loope
enter
orl
test
or
out
push
xchg
popa
icebp
ljmp
mov
cli
enter
or
es
arpl
stos
and
dec
add
sub
push
sub
xorl
jge
iret
movsl
mov
out
inc
mov
mov
daa
shrb
adc
mov
add
xor
xchg
lea
lock
insl
and
inc
push
jo
lcall
or
ret
lahf
stc
ret
fcmovnb
lods
push
fmuls
fadds
nop
xlat
push
and
icebp
popf
into
adc
loop
jne
add
push
and
aad
cmpsl
mov
add
aas
mov
push
ficoms
cmp
add
mov
sub
scas
push
jae
rorb
cltd
scas
daa
stc
repz
clc
rcl
repnz
xchg
out
push
out
cmp
or
dec
std
int
ror
xor
push
mov
es
mov
movsb
xchg
pop
adc
push
push
inc
cmpsb
pop
mov
or
adc
sub
pop
out
aas
jnp
cmp
mov
dec
out
cmp
decl
mov
cmp
xchg
cmp
ds
or
xchg
pop
sub
xchg
adc
push
lahf
imul
dec
xor
pop
test
bound
pushf
mov
mov
das
push
jo
or
call
jle
xlat
xor
mov
jbe
add
mov
stos
push
outsl
aad
push
stos
add
push
lcall
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
xor
mov
imul
int3
int3
push
lcall
sbb
push
inc
inc
sub
shl
ret
cmc
icebp
vpmullw
test
jne
inc
popa
push
adc
and
in
aad
vpmullw
lds
jne
in
popa
push
adc
add
xor
and
sbbl
enter
and
jno
or
push
adc
ficompl
stos
int
out
dec
sti
pop
out
sbb
or
pop
shl
mov
pop
pushf
jmp
int
leave
push
insl
rorb
push
xorl
sub
pop
sub
jbe
or
outsl
push
fs
nop
test
mov
inc
mov
gs
in
jns
pop
push
sbb
lock
sub
movsb
orl
jo
popf
hlt
push
pushf
shr
add
jo
or
leave
in
add
shl
mov
xchg
mov
enter
outsl
cmp
mov
inc
xor
xchg
in
popf
add
mov
jne
rorb
test
test
popa
pop
adc
and
icebp
aad
popf
xchg
mov
sti
xor
and
push
daa
jnp
push
outsb
pop
pop
insb
movsl
jo
mov
movsb
mov
aam
shl
daa
and
jo
dec
dec
push
je
fs
andb
data16
in
fsub
lret
xor
aaa
adc
add
shl
shl
vpmullw
test
jne
inc
popa
push
adc
and
icebp
vpmullw
test
mov
sarl
sti
ret
lock
mov
cmpb
jle
in
pop
push
mov
imul
mov
loope
call
dec
int3
xchg
pop
iret
mov
imul
cmc
jo
test
fdivrl
pop
sahf
inc
mov
mov
mull
xchg
push
push
add
mov
dec
repz
sub
inc
mov
xor
lcall
sbb
dec
lcall
cmp
dec
xorb
push
xor
adc
xor
cltd
dec
xlat
add
in
mov
cmp
cmp
addl
adc
sar
lcall
pop
pop
or
sahf
xor
aam
pop
inc
xor
xor
iret
sub
iret
movsb
mov
lea
mov
and
repz
mov
push
or
outsb
ret
lahf
xor
mov
fcmovu
inc
sub
bound
and
andl
mov
lds
out
dec
xor
xor
inc
cmc
fidivs
cmp
xchg
or
es
add
dec
cli
movsb
sbb
jae
loope
out
push
push
adc
lock
adc
xchg
jbe
int
dec
xchg
add
sbb
inc
das
mov
xchg
mov
daa
pop
pop
insb
jg
mov
dec
gs
mov
mov
aaa
loop
repz
test
pop
xchg
sahf
stc
push
xor
lods
mov
push
je
or
cwtl
or
mov
stc
mov
out
jmp
or
and
sbb
std
sub
shll
int3
addl
jg
rep
xlat
scas
je
nop
add
inc
inc
xchg
push
mov
cmp
mov
inc
jle
jp
or
addr16
cmpl
rorb
push
jne
mov
movsl
xchg
or
pop
sub
arpl
add
adc
jae
movsb
push
pusha
rolb
or
mov
repnz
sbb
stos
rcll
jae
sub
lods
mov
xchg
mov
movb
cmp
out
movl
cld
mov
cmc
xchg
dec
push
daa
fbstp
mov
lock
cwtl
mov
lahf
cmp
mov
js
jmp
ds
sar
scas
repnz
orl
stos
sbb
mov
bound
aaa
pop
aad
adc
pop
mov
cmpl
mov
lcall
jo
jecxz
pop
andb
cmpsb
jnp
adc
movsl
xor
ret
into
jo
test
or
mov
fcoml
stc
lretw
add
outsb
sub
cli
inc
inc
iret
push
hlt
std
dec
lret
add
mov
mov
jmp
notl
push
add
push
push
imul
movsl
jo
and
test
adc
sbb
xchg
mov
mov
sub
into
mov
popf
adc
mov
mov
bound
mov
jg
sbb
mov
pusha
in
sti
in
outsb
call
xchg
lret
hlt
mov
fs
xchg
sub
iret
pushf
xchg
cmp
pop
arpl
daa
push
test
or
xchg
out
fsubrs
rcrb
std
outsb
sbbb
scas
push
xchg
filds
cmp
cmp
mov
inc
jns
js
xchg
addr16
scas
out
push
data16
leave
jl
inc
dec
inc
ljmp
lcall
xor
adc
push
xor
mov
cmc
mov
xchg
dec
push
cwtl
lahf
push
pop
dec
jmp
dec
fdivl
dec
jl
mov
ret
pop
push
test
sbb
and
lret
cmc
loopne
sahf
call
iret
push
mov
and
inc
dec
scas
movsl
inc
fsts
cmpsb
jge
mov
jmp
mov
jno
push
arpl
pop
sub
xchg
addr16
fldcw
sbb
aad
mov
sbb
inc
mov
loopne
es
les
out
mov
pop
data16
push
mov
sbb
fsub
pusha
bound
clc
and
xor
mov
mov
hlt
or
and
sbb
je
or
xchg
jo
insl
ds
shrl
call
xor
sahf
push
push
aaa
sbb
shll
pop
lahf
fwait
dec
gs
xchg
or
in
out
imul
sub
in
stc
popf
push
cmp
xor
stos
fiadds
mov
test
sub
notb
cs
add
cmp
and
popl
aam
and
or
outsb
xorl
cmp
lods
pop
fisubl
mov
fdivr
and
xor
and
jp
jns
adc
push
popf
push
cmc
sub
rclb
or
fwait
or
mov
lret
imul
push
push
ja
xor
adc
push
mov
xchg
loope
add
icebp
mov
cmpsl
mov
cmp
mov
cmpxchg
js
sbb
rcrl
pop
xchg
mov
lret
scas
pop
mov
pop
and
adc
push
inc
push
jns
cmp
testl
xchg
ljmp
out
mov
lds
mov
cmp
xor
cltd
cmpsb
add
adc
call
inc
enter
cmp
push
ffreep
out
xor
xchg
lock
ret
shlb
xchg
mov
push
es
dec
por
fildl
mov
push
bound
cmp
rcrb
icebp
lods
add
push
xor
inc
pushf
mov
inc
push
int
add
stos
lret
xor
and
mov
movsl
lcall
outsb
das
in
mov
repnz
addr16
sbb
xor
xchg
fsincos
pusha
lea
dec
xchg
push
pop
out
es
jo
fbstp
popf
retw
xchg
cmp
ds
push
xchg
adc
jg
cltd
adc
movsb
sti
shll
loop
lahf
ds
mov
ficomps
push
sub
sbb
adc
xor
dec
das
sbb
mov
lock
cwtl
pop
js
dec
xchg
mov
in
jns
rolb
std
sti
lock
or
mov
jge
xor
flds
repnz
mov
int3
jno
lahf
and
leave
adc
jge
fcom
mov
inc
cmpsl
xchg
jb
call
dec
pop
or
stos
iret
mov
cmpsl
out
leave
jbe
push
mov
fidivrs
or
clc
shll
xchg
bound
adc
jl
dec
jo
push
hlt
cmpsl
add
inc
sbb
dec
test
std
fnsave
pop
js
cmp
cld
jmp
xchg
mov
shrb
jge
test
lea
ret
lds
outsb
mov
mov
lret
xchg
lret
fistpl
lret
push
push
inc
aas
mov
vmread
push
out
mov
dec
jnp
adc
and
jno
pushf
jae
sbb
test
cmp
sbb
int3
xchg
sbbb
jns
mov
inc
pop
rcll
cmpsb
and
lret
inc
xor
xchg
and
dec
mov
or
mov
lods
pop
push
dec
lahf
addr16
jbe
mov
jb
and
int3
push
fs
int
inc
stos
jbe
rcl
daa
call
mov
test
fadds
mov
out
pusha
test
mov
inc
and
pop
scas
int
dec
or
cmpsb
sbb
inc
mov
and
jbe
icebp
adc
in
loope
jmp
mov
adc
lods
dec
dec
enter
dec
loopne
sbb
outsl
bound
xlat
outsb
xchg
xor
mov
sbb
mov
ret
dec
pop
adc
fcoms
aad
cwtl
xor
xlat
loop
xchg
js
int3
sbb
jge
cmp
pop
jp
pop
les
xor
dec
cmp
scas
div
and
gs
mov
imul
pop
pop
add
pop
lahf
outsb
out
fcompl
test
dec
outsb
mov
mov
jb
and
fcompl
xor
mov
sbb
enter
push
push
popa
sub
test
or
stos
fdecstp
iret
sub
sti
test
int3
inc
xchg
jecxz
mov
jno
decb
mov
mov
cmpsl
repnz
xchg
cmp
mov
or
loop
cltd
into
push
jmp
sub
cmp
les
inc
mov
sub
push
or
gs
idivb
push
push
or
sub
sahf
xor
adc
cmp
dec
pushf
test
out
mov
fnstcw
or
mov
xor
jmp
sbb
ss
jle
jle
xchg
inc
popf
es
adc
xchg
dec
hlt
add
pop
dec
bound
mov
aas
inc
mov
cmp
test
xor
leave
fisttpll
mull
in
cli
inc
jo
mov
dec
fs
leave
rol
test
sti
stos
jo
test
sbb
stc
jno
sub
fs
mov
inc
sub
mov
das
shrb
mov
test
std
pop
xor
sub
adc
xchg
fstps
mov
push
jne
shll
jg
cs
shrl
scas
xor
jl
test
fdivrl
js
dec
sbbb
dec
arpl
loopne
imul
fcmovbe
mov
mov
sbb
test
scas
sub
in
mov
test
sbb
shl
mov
fmulp
pop
xchg
cmp
adc
mov
push
cmc
outsl
js
xorl
mov
in
xor
ds
ljmp
mov
cltd
xchg
jle
cmc
xchg
nop
add
bnd
xchg
lods
nop
enter
dec
adc
adc
sub
xor
and
adc
xchg
xchg
sbb
cmp
mov
jb
mov
notl
and
pop
movl
dec
push
sub
mov
rorl
loope
mov
push
gs
and
in
inc
bound
frstor
iret
mov
or
imul
pop
imul
jmp
dec
dec
sbb
mov
push
jns
in
pop
cmp
mov
fwait
negb
jl
xchg
mov
mov
es
pop
adc
fcomps
xor
sti
xchg
sub
ljmp
movsl
xor
lret
cmp
je
sbb
aad
enter
lcall
in
push
pop
mov
adc
sbb
cmp
cs
mov
add
cli
mov
std
xchg
mov
lods
hlt
lret
fwait
xor
call
imul
sbb
sbb
mov
fisttps
xor
cmp
clc
scas
xor
es
mov
sub
loopne
push
xor
aad
fisubs
movsb
std
dec
mov
out
and
sub
mov
jle
and
fistl
adc
mov
cmp
fnsave
mov
xchg
jp
bound
rol
dec
pop
imul
add
sarl
mov
test
in
push
mov
and
mov
xchg
and
imul
mov
call
mov
scas
cmp
sbb
rsqrtps
or
add
or
inc
sti
gs
pusha
jne
or
mov
jae
mov
or
mov
or
call
out
cwtl
mov
fsts
and
xchg
adc
xor
sbb
xchg
imul
sbb
loop
rcrb
pop
mov
cltd
mov
xchg
addr16
mov
xlat
in
mov
ret
adc
cmp
stos
rclb
mov
lahf
leave
loop
shl
sub
outsl
bound
adc
rcr
cli
xchg
in
add
sarl
cli
in
jl
sti
loop
xchg
mov
pop
out
cmp
orb
push
xchg
scas
mov
jp
pop
jecxz
jo
or
adc
xor
ret
add
fidivl
ret
mov
ljmp
inc
or
mov
ret
imul
je
fistpl
iret
sub
sub
pop
pop
jge
loope
aam
mov
out
iret
xor
mov
inc
insb
dec
mov
rcrl
mov
sbb
test
xorb
mov
xchg
add
mov
jecxz
xor
cmc
dec
dec
in
imul
stc
mov
aam
dec
ljmp
repnz
sbb
call
xor
testb
sub
xchg
jns
bnd
fwait
shll
or
dec
enter
pusha
push
pop
faddl
push
jae
ficomps
cs
cmp
dec
or
popa
aaa
sbb
insl
mov
sbb
xor
das
and
mov
inc
mov
mov
jnp
jp
sub
mov
sbb
rcrb
pop
mov
loopne
into
mov
pop
test
or
jg
in
sub
in
mov
mov
js
pop
dec
or
mov
leave
clc
negl
mov
lahf
test
cltd
adc
push
or
mov
jne
push
mov
sub
data16
gs
lahf
js
rol
fistps
pop
lret
xor
mov
dec
fwait
lods
xchg
loopne
push
test
loopne
sbb
in
mov
inc
imul
cmp
mov
mov
lds
and
fistpl
sahf
cmp
scas
movsb
orb
inc
sub
add
cmpsb
subb
and
mov
mov
nop
inc
mov
mov
dec
dec
stos
clc
inc
in
faddl
imul
loope
push
cmp
lds
add
pop
add
call
jmp
mov
movsb
xor
int3
or
into
jno
nop
andl
inc
movsb
loopne
movl
je
popf
daa
lret
xchg
jo
jno
gs
repz
icebp
or
imul
push
adc
cmc
xlat
adc
loopne
or
imul
dec
call
nop
pop
ljmp
outsl
sub
loope
mov
and
pcmpgtd
fidivrl
in
sti
jp
mov
es
push
fsubl
mov
int3
fsubr
roll
mov
mov
iret
lods
movl
pop
or
mov
pushf
mov
inc
in
pop
adc
sbb
xor
gs
popa
xchg
pop
mov
ret
sub
cld
cwtl
js
movsl
ljmp
or
mov
lret
out
ljmp
insl
ss
jmp
test
mov
out
out
inc
jle
or
lret
xor
cmp
sbb
xchg
sub
aas
mov
aad
pop
cmp
in
sub
fdivrp
popa
sub
jg
sahf
mov
iret
sub
jecxz
and
mov
xchg
outsb
inc
xchg
ds
or
adc
mov
sbb
gs
leave
sub
fmull
xor
movsl
jmp
or
shll
insb
dec
or
es
fcomip
xor
andl
ret
pop
sub
call
push
or
test
bound
mov
push
and
push
pop
push
push
lea
or
aas
mov
dec
shlb
push
movsl
and
outsb
stos
aaa
scas
ja
scas
add
push
inc
xchg
inc
hlt
dec
jno
cmpsb
xor
mov
jp
adc
inc
xor
pusha
fdiv
xor
movsl
hlt
dec
icebp
mov
jmp
lea
mov
inc
pusha
push
outsl
mov
xchg
mov
pop
addb
push
imul
cmp
xchg
out
movb
loop
inc
lcall
push
clc
and
xor
sahf
lock
aam
jae
mov
adc
jo
pop
fwait
mov
stos
cwtl
rol
xor
mov
cmp
push
mov
fidivrl
outsl
inc
popa
into
cmp
mov
cli
and
leave
xchg
adc
popa
mov
into
add
les
lea
jb
mov
dec
push
pop
mov
mov
sbb
stc
or
mov
movsb
or
lret
mov
ret
add
xor
sbb
stos
lret
xlat
outsl
clc
in
adc
push
pop
aas
shl
dec
cmpsl
and
leave
or
adc
or
cltd
mov
push
mov
popa
push
loopne
roll
jbe
or
mov
xor
out
dec
cmp
push
xor
cmp
in
cmp
push
sbb
inc
adc
cmp
ret
in
shll
add
lds
mov
shl
and
loopne
mov
ljmp
xchg
mov
jecxz
push
int
dec
cmp
aas
mov
cmp
mov
lret
inc
inc
jg
and
mov
dec
add
ljmp
outsl
std
xlat
jne
push
out
in
loopne
insl
sti
insb
pushf
mov
mov
inc
dec
shrb
adc
xchg
cmp
fisubrs
sub
push
shr
test
popa
mov
fnsave
lods
idivl
mov
arpl
outsl
pusha
xchg
adc
dec
out
je
pop
add
cli
inc
xchg
sub
push
daa
mov
mov
xor
insl
adc
adc
pop
pop
adc
xor
cli
dec
out
sahf
add
jp
xorb
jnp
fiaddl
mov
sbb
xchg
imull
pusha
pusha
insl
dec
push
cmpsl
out
andl
jecxz
js
test
jnp
outsb
imul
dec
lods
sti
inc
jbe
pop
sub
jmp
pop
jno
inc
cmc
cmp
das
mov
pop
sbb
xor
add
icebp
les
dec
stos
out
jbe
mov
mov
clc
sar
push
test
scas
cwtl
lahf
sub
scas
fcoml
js
inc
jle
mov
push
pop
rcl
fildll
hlt
xlat
loopne
cmpl
out
imul
xor
adc
sbb
in
scas
jecxz
dec
aam
movsl
xchg
xor
mov
movsl
test
push
ss
xor
mov
test
adc
enter
mov
std
xor
mov
xor
mov
cmp
roll
jl
sti
jo
or
push
dec
int
lret
sbb
cmp
sti
test
outsl
xchg
sub
enter
notb
movsl
lea
and
cmp
mov
push
dec
rcrb
adc
outsb
fnstcw
aas
xor
mov
leave
pop
add
jae
lret
ja
pusha
sbb
movsb
das
cltd
cli
sub
push
cmp
fstpl
popf
maskmovq
testl
mov
cmp
push
or
cmpsl
cld
push
mov
dec
cmp
sahf
icebp
or
push
shlb
sbbl
mov
mov
add
arpl
clc
outsb
jmp
in
sub
dec
push
hlt
mov
iret
mov
fs
addl
pop
dec
mov
sar
ja
mov
and
jne
ret
add
lock
mov
push
test
mov
inc
repz
inc
pop
imul
pop
mov
icebp
aam
mov
lret
popf
sbb
mov
out
je
dec
mov
sahf
or
decb
or
cmp
inc
repnz
imul
sub
in
jo
dec
mov
jecxz
xor
cmp
push
lahf
xor
lret
addb
loop
xchg
les
pop
inc
sbb
popf
push
mov
dec
xor
mov
shll
arpl
jo
cmpsl
cltd
pop
clc
and
cld
imul
mov
dec
and
cmp
mov
xlat
or
dec
xchg
add
out
cmp
jg
xchg
mov
sbb
xchg
mov
sub
cmp
cmp
xchg
inc
lret
xor
fisubl
rclb
ret
add
aad
mov
mov
ret
test
out
adc
repz
call
addr16
mov
dec
icebp
out
push
xchg
test
testl
dec
pop
pop
rol
xlat
push
inc
push
movsl
add
mov
test
and
xchg
dec
add
cmc
imul
nop
xor
push
add
jle
movsl
aam
and
sub
mov
cli
enter
push
or
aaa
loop
aad
inc
rcrl
rclb
sub
mov
sbb
pusha
xor
jo
faddl
adc
mov
lret
je
mov
inc
jo
sbb
dec
inc
adc
mov
clc
sub
sub
xchg
push
in
inc
nop
cmp
xchg
cmpsl
or
or
repz
ja
xchg
sub
inc
pop
lret
arpl
in
cmc
shrb
inc
jno
pushf
daa
xchg
outsl
add
add
sub
sbb
sub
cld
xchg
cmc
jb
js
in
ss
mov
in
xor
jae
push
or
push
mov
inc
or
add
imul
push
and
xchg
in
arpl
adc
adc
mov
int3
mov
inc
add
adc
jae
movq
xor
push
cmp
daa
lret
mov
adc
cmp
dec
dec
mov
mov
add
dec
cmp
mov
aam
lret
xor
xchg
out
mov
xor
out
lret
push
repz
dec
cli
ret
sbb
test
cmp
mov
jns
in
ret
cmp
fdivrl
push
pop
and
and
mov
cmp
fnstenv
shlb
fsubrp
test
or
inc
and
ja
mov
cmp
leave
jecxz
mov
es
fadd
mov
orl
adc
and
int3
outsl
stc
loop
pop
lods
nop
mov
lods
jb
push
in
push
and
lret
int3
iret
aaa
mov
stos
cmpsl
jmp
aam
lea
iret
popf
ds
repz
test
adc
push
out
sub
mov
faddp
outsl
sub
lods
push
jnp
push
xor
sub
insl
jmp
sub
sub
or
ror
in
std
je
clc
inc
stos
mov
stos
push
jae
xchg
mov
dec
int3
inc
and
imul
test
pop
pop
cmc
inc
cwtl
pop
xchg
xchg
pop
cmp
out
pop
enter
cmp
xchg
dec
sbb
inc
fisubl
inc
mov
xor
jmp
sub
sbb
sub
xchg
fistpll
insl
xchg
cs
xor
dec
push
sub
int
mov
mov
pop
call
roll
ss
adc
and
jnp
cmp
cmp
xchg
pop
cmp
lods
dec
push
xor
js
mov
adc
cwtl
sub
int3
or
outsl
xor
sahf
and
xor
jne
sub
adc
and
icebp
vpmullw
test
jne
inc
popa
push
adc
and
icebp
vpmullw
test
cmp
adc
and
icebp
xchg
movsl
xorl
jno
popa
push
adc
mov
pop
pop
out
or
jp
push
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
cli
pop
scas
imul
imul
leave
mov
stc
dec
mov
cltd
ret
test
pop
out
imul
sbb
leave
jle
outsb
popf
push
stc
dec
mov
cltd
cs
pop
pop
sub
jns
or
cmp
aas
xlat
cmp
insl
cli
dec
out
xlat
push
mov
or
mov
cmc
add
add
mov
and
stc
inc
ret
sub
and
iret
jno
xor
push
jbe
mov
xchg
inc
inc
mov
shlb
push
push
or
outsb
xlat
aad
jg
jle
pop
xchg
mov
int
ror
lret
or
pop
out
pop
into
or
push
add
sti
leave
mov
dec
ja
icebp
mov
mov
sub
xor
pop
cmp
pop
and
mov
dec
dec
lods
xorl
cltd
push
icebp
icebp
fcomps
out
mov
cltd
sub
mov
imul
pop
into
imul
cmp
jle
jmp
add
cmp
xor
sbb
dec
jmp
leave
mov
xchg
sub
in
push
addr16
mov
sbb
dec
in
jne
sub
cmp
test
mov
fstpt
jge
lea
mov
sub
fldcw
pop
stc
dec
mov
cltd
cs
pop
out
imul
sbb
leave
jle
outsb
jmp
ds
cs
cld
mov
rcr
out
pop
shrb
push
test
inc
lcall
and
loope
rcrl
les
aad
hlt
jle
test
dec
enter
cld
mov
out
cmpl
les
lret
or
jl
gs
rcrl
push
leave
fs
inc
xor
mov
mov
fidivrl
xchg
dec
sbb
cmpsl
cmp
enter
cmc
sbb
jmp
insl
scas
and
test
jmp
push
dec
push
loope
je
test
aad
mov
xor
addr16
sub
adc
imul
fwait
inc
in
mov
add
mov
lods
xchg
xorl
inc
rolb
push
sub
adc
lods
les
out
cltd
mov
repnz
sub
mov
mov
mov
mov
icebp
mov
mov
sarl
outsl
push
add
jmp
inc
sub
mov
ljmp
ss
mov
push
adc
xorl
dec
out
mov
gs
pop
ljmp
mull
push
sahf
pop
push
popf
jmp
mov
push
push
dec
push
jae
sbb
fsubs
mov
pop
pop
dec
enter
lret
jne
ja
fldl
pop
inc
inc
mov
cld
faddp
inc
ret
push
daa
or
or
adc
shll
outsb
clc
mov
int3
push
decl
sbb
mov
add
movl
jg
push
xchg
repnz
xor
xchg
xor
es
imul
xchg
aad
mov
rdmsr
cli
add
cmp
imul
in
hlt
aam
mov
xor
jge
mov
rolb
mov
push
pop
int
add
lcall
inc
call
mov
and
cli
mov
jg
inc
divb
repnz
test
push
jae
and
fimuls
add
mov
jg
stos
faddp
mov
pop
mov
mov
jns
or
jno
dec
ss
mov
dec
xchg
jecxz
xchg
shr
adc
xchg
int3
sub
mov
adc
fwait
adc
out
popa
pop
testb
aas
lds
xor
sbb
xchg
daa
mov
js
mov
mov
push
out
pop
movl
fisubrs
jo
shlb
mov
popf
jno
loopne
aas
add
test
lods
cmp
add
inc
mov
adc
fwait
push
mov
mov
push
cmp
xor
cmpsl
mov
adc
lcall
sbb
inc
xchg
or
add
fildl
inc
adc
iret
mov
jno
in
xchg
adc
adc
xlat
insb
xor
push
enter
ja
adc
call
push
inc
arpl
inc
mov
jnp
js
dec
loopne
cmc
push
int3
cmpsb
xor
lock
dec
or
jge
cmp
je
fmulp
int
xor
add
adc
sahf
cmp
stos
mov
test
and
arpl
fnop
lret
dec
sbb
incb
cmp
and
iret
lret
cmp
in
pop
out
popa
sbb
adc
pop
out
pop
pop
inc
sbb
int3
jb
or
movsl
adc
cltd
aaa
push
rep
out
push
mov
and
stos
sub
shrl
test
stc
xor
xchg
sti
mov
pop
ljmp
add
or
test
test
pop
subl
inc
mov
mov
sub
pushf
or
movsb
imul
cmc
push
and
jg
movsb
arpl
ljmp
cmp
xor
ret
sar
push
pushf
jecxz
mov
iret
jmp
icebp
xchg
cld
mov
popa
std
pop
daa
aam
pop
sub
rcll
mov
sbb
mov
xor
dec
dec
push
lahf
leave
imul
or
dec
sbb
aaa
inc
mov
xchg
shll
clc
mov
fsubl
inc
jp
fcomi
inc
or
jae
jae
push
inc
xlat
jae,pn
or
push
mov
xchg
inc
mov
mov
pop
cmc
jne
pop
push
xchg
mov
sub
pop
ret
xchg
jns
aaa
push
enter
scas
arpl
mov
lods
add
fucomip
xor
pop
and
pop
sbb
xor
scas
xor
pop
cmc
adc
xchg
in
je
test
fnstsw
ljmp
dec
out
sbb
repz
mov
pushf
movsb
ss
cmp
pop
jecxz
stos
popf
xchg
push
aam
in
inc
cmpsl
enter
add
hlt
cs
lret
idiv
or
out
xchg
loopne
insb
inc
in
repz
fistpl
mov
xor
test
adc
shll
rolb
mov
jbe
pop
xor
inc
sbb
fsubrs
xchg
sbb
mov
lock
imul
xchg
mov
push
pop
jp
xchg
mov
int3
pop
orl
mov
out
or
out
into
scas
mov
cltd
lahf
inc
jo
fldl
insl
xor
dec
dec
test
xlat
ss
scas
stos
push
push
mov
fbld
aaa
loopne
mov
lock
cli
loop
std
mov
es
or
js
xchg
adc
cmc
sbb
int
aam
js
pop
fisubl
das
jo
int
fucomi
push
push
scas
adc
fidivrs
push
mov
ret
daa
movsb
in
inc
jnp
out
mov
dec
test
filds
and
cs
mov
add
sub
or
pop
icebp
xchg
pusha
pusha
mov
add
addr16
mov
jl
xlat
lret
inc
loopne
aad
out
rcll
fs
add
lret
push
xor
jge
add
sub
and
test
stos
sub
fisubl
dec
push
push
ss
scas
mov
loopne
movsb
mov
jae
xchg
xchg
adc
cmpsl
cmpsl
push
cmp
adc
and
roll
enter
pop
inc
ret
or
test
rcrl
in
mov
scas
jne
or
xchg
cmp
sbb
js
aam
mov
aas
sahf
fadds
push
cmpsl
cmp
xor
cmp
cmpsl
arpl
ret
dec
inc
sti
dec
or
stc
lods
push
jbe
adc
out
adc
add
ljmp
test
subb
cmp
xor
mov
mov
dec
add
arpl
adc
inc
fmuls
shll
sub
aam
inc
lods
mov
add
imul
jp
xchg
pop
cmp
mov
lahf
pop
sbb
dec
test
subl
xchg
lds
movsb
call
bnd
fucomi
adc
xor
mov
and
iret
rcrl
outsb
ficoms
out
pop
lock
mov
addr16
or
mov
mov
inc
test
ret
jl
pop
loopne
adc
dec
fidivs
push
inc
popa
jge
das
repnz
jg
and
clc
cltd
aad
push
rcll
jns
add
int3
arpl
adc
jl
sub
sub
mov
popf
xor
into
ljmp
push
jle
leave
jle
out
iret
cmc
cmp
das
push
inc
int
scas
cmp
or
in
aas
sub
push
gs
in
sub
outsb
scas
push
aam
sbb
pop
sub
xor
jmp
or
jb
xchg
cmp
cmpsl
push
mov
fwait
jge
fstpt
sbb
loopne
push
adc
ret
mov
push
or
lret
data16
dec
add
fs
lahf
clc
dec
outsl
xchg
push
or
in
insb
mov
cmp
xor
jnp
xchg
imul
repnz
dec
lods
rcl
pushf
pop
dec
arpl
xor
sahf
aaa
imul
jg
jb
mov
sahf
lods
xchg
pop
adc
stos
fmulp
mul
or
imul
in
cmpsb
mov
lcall
jb
inc
mov
mov
int
pop
add
fs
sbb
jno
inc
xchg
dec
ret
lock
mov
push
xchg
cmp
lock
ret
cmp
test
or
push
cmp
shrl
fidivs
adc
jbe
jno
xchg
inc
inc
fidivl
cltd
dec
push
cld
or
add
insb
lahf
mov
lret
stos
imul
or
fdivr
movsb
mov
xlat
addr16
or
mov
push
daa
clc
push
aas
ljmp
and
sti
gs
mov
fs
mov
jae
xchg
and
or
sbb
mov
jl
rcrb
cmp
mov
push
jnp
sbb
dec
xchg
cmp
add
xchg
movsb
ret
or
fsubs
add
out
movsl
cmpsb
inc
xchg
push
rolb
mov
lock
jno
lcall
shll
movsl
mov
ss
scas
std
nop
sub
sbb
sbb
adc
jbe
cs
mov
data16
out
dec
sbb
push
pop
insl
mov
ja
mov
sbb
cmpsb
adc
rclb
xor
cmp
stos
xchg
and
aaa
sub
push
out
out
pop
inc
popf
sahf
add
dec
bnd
jae
lret
dec
sbb
pop
loope
adc
jp
pop
xor
adc
fdivs
jg
jae
dec
or
fs
add
inc
scas
inc
xlat
lcall
add
pushf
xchg
inc
cmc
les
mov
pop
loope,pt
push
inc
inc
call
data16
mov
ljmp
jg
jae
sbb
jno
xor
cmp
and
dec
or
or
jns
inc
push
pop
lods
dec
sub
cmp
testb
and
mov
in
push
mov
mov
std
pushf
test
jns
push
and
jecxz
lret
fcmovu
frstor
xchg
jp
mov
inc
popa
fbld
xlat
mov
movsl
addl
cmpl
in
jge
pop
lcall
xchg
add
mov
mov
inc
cmpsb
mov
jl
xor
inc
ja
and
sub
inc
mov
dec
sti
push
cs
jae
ret
pop
movsb
data16
cmovns
test
repnz
sbb
mov
jmp
loopne
scas
lods
in
int3
das
lods
arpl
jae
mov
lds
aaa
rorw
xlat
inc
ljmp
shll
les
mov
clc
push
jo
jl
enter
jle
fcoml
in
outsl
call
scas
aas
sbb
push
pop
push
jnp
push
pop
and
dec
lods
fs
sti
jp
push
ret
sbb
gs
push
fs
mov
jp
push
sbb
cwtl
stos
and
inc
dec
and
push
stc
scas
cmp
adc
scas
daa
push
mov
test
dec
sub
jnp
mov
inc
adc
sarl
loopne
add
mov
inc
popf
sub
stc
ds
gs
jmp
adc
and
pop
fisubl
inc
mov
jl
movsb
mov
pop
fndisi(8087
add
fdivl
lret
jns
in
dec
mov
lcall
pop
insb
in
imul
xchg
loop
jo
in
and
aad
add
lret
leave
pop
fiaddl
movsb
das
xchg
je
mov
push
data16
mov
push
pop
fidivrl
xchg
inc
insb
jge
hlt
mov
sbb
adc
xlat
out
roll
out
jl
fwait
mov
adc
shl
xor
hlt
pushl
subl
mov
adc
sbb
add
out
shrb
pop
mov
mov
cmp
aam
lret
cli
pop
push
test
jns
push
mov
insl
je
pop
aaa
arpl
mov
je
push
xchg
cmp
sbb
std
pop
js
adc
out
mov
ret
jno
mov
xor
sub
mov
out
sub
and
sbb
adc
jecxz
jnp
cmp
adc
inc
ret
jmp
inc
mov
test
inc
mov
cld
scas
sbb
xor
mov
addr16
inc
or
mov
jb
movsl
jo
dec
loopne
jecxz
push
pop
repz
into
idivb
push
xchg
mov
fs
fidivrs
in
xchg
data16
and
dec
fstpt
or
sbb
or
push
mov
push
inc
and
js
jmp
stc
pop
pop
cmpsl
in
fs
sbb
popl
sti
fldcw
repz
sbb
xor
mov
cmp
mov
outsl
push
pop
sbb
aam
lahf
cli
push
loop
sti
aas
pop
pop
fs
sub
insb
pusha
insb
fsubrs
mov
fldl
inc
fists
adc
or
or
push
lcall
sub
cmpl
mov
std
aam
inc
cmpsb
pop
mov
test
test
pop
dec
cmpb
push
jge
pop
out
pop
push
jl
pop
mov
inc
inc
test
movsl
mov
adc
and
arpl
push
sub
jle
xor
movswl
lds
sub
add
daa
out
adc
cmpsl
inc
or
jne
pop
cmp
hlt
adc
outsl
adc
pushl
adc
xor
push
mov
mov
mov
push
lock
ljmp
cs
jb
incb
jmp
xchg
aaa
push
lcall
outsb
test
je
insl
dec
dec
aas
mov
push
add
sub
test
stc
lahf
rcrw
bound
push
repnz
fisubrs
dec
pop
iret
pop
out
xchg
inc
rclb
sti
ret
and
out
jbe
mov
clc
inc
adc
aaa
sub
cmc
orl
lcall
push
int3
mov
inc
pop
aas
dec
mov
pusha
cmc
lock
mov
jb
jecxz
in
test
jno
jne
popf
scas
mov
xlat
fcoms
fidivrs
adcl
or
insb
outsl
popf
mov
in
cmp
lret
jbe
inc
cmp
fwait
cwtl
cmpsl
fs
cmp
add
xor
xor
loop
popa
scas
mov
sub
aad
or
pop
fs
sub
xchg
jle
pop
push
sub
pop
lods
mov
ljmp
cmp
cbtw
scas
mov
inc
lea
mov
pop
cmpsl
mov
out
mov
jb
sbb
cmp
data16
orb
mov
test
xor
mov
xor
sahf
pminub
inc
push
mov
repz
mov
jnp
stc
mul
cmp
push
icebp
fcompl
dec
leave
jmp
mov
cmp
cli
dec
stos
push
pop
jle
lahf
daa
sbb
loope
pop
loope
cmp
stos
sahf
xchg
sbb
cmp
fmul
lret
mov
out
gs
sbb
leave
sbb
nop
addl
test
scas
cmpsb
cld
xor
outsb
jno
loope
lods
cld
mov
lcall
cmpsb
sbb
xlat
rorl
dec
aad
cmp
scas
subl
test
sub
cld
xchg
or
or
scas
mov
cltd
adc
mov
icebp
cmp
cmp
jns
adc
fsubrl
sarl
mov
lret
adc
int3
repnz
xchg
sbb
sbb
push
xchg
lcall
sub
fs
movsb
in
dec
pop
inc
inc
sbb
sbb
jnp
pop
lock
xchg
fstpl
iret
lret
mov
mov
outsb
test
mov
jg
fadd
test
or
adc
inc
cmp
cmpsb
sbb
fcmovbe
das
pop
fmul
xor
sbb
add
xlat
fldcw
xchg
nop
push
push
mov
pop
js
or
inc
outsl
loope
adc
pop
ljmp
mov
mov
test
loopne
ret
pop
xchg
or
xor
pushl
ss
mov
push
push
push
mov
stos
adc
and
int
sub
fists
dec
mov
sbb
in
push
mov
scas
pop
rorb
rcrl
fs
mov
and
pop
dec
rcrb
movsl
loop
aas
and
push
mov
cmovb
popf
mov
adc
pop
cmp
jmp
sub
repnz
push
inc
int3
int
pusha
push
fmuls
shl
inc
lods
fldcw
sbb
cli
testl
jmp
mov
shl
push
bound
mov
adc
stos
ffreep
xor
sahf
adc
push
ljmp
das
mov
ljmp
add
lahf
inc
loop
gs
cmp
dec
jns
sbb
jge
sahf
pop
fld
dec
or
mov
clc
icebp
jmp
add
shll
pop
or
lret
aas
mov
mov
sub
outsb
lock
push
jp
les
pop
jns
mov
push
fucomi
ss
mov
or
jno
xor
cli
dec
push
and
ret
in
setp
call
cmp
rcr
inc
dec
stc
iret
loop
or
repnz
daa
or
sub
fwait
adc
or
sahf
push
aaa
pop
test
mov
shrb
add
cmp
subl
outsl
js
popf
popa
in
roll
pop
les
adc
inc
inc
add
mov
arpl
inc
mov
in
pusha
out
daa
divb
enter
ret
lods
lods
or
repz
adc
add
lea
je
push
popf
fcompl
dec
popf
pop
pop
xor
xor
or
pop
push
insb
xor
push
sahf
fbstp
sti
push
and
out
push
or
ds
cli
cmp
pop
adc
std
push
cmp
xor
stos
lds
aaa
mov
jmp
outsb
adc
sub
lods
push
cmpsl
adc
mov
and
xor
call
xorb
lahf
out
rcrl
movsl
or
xchg
cmp
mov
pop
mov
mov
gs
pop
pop
outsb
sub
push
push
les
loop
pop
fstl
push
jnp
push
cmp
add
mov
jo
or
or
insb
test
sub
cmc
cmp
xlat
rorb
xchg
repz
and
addr16
xchg
ljmp
mov
icebp
cmp
mov
cmp
adc
xor
or
jle
repnz
xor
inc
dec
add
push
pop
xchg
insb
push
clc
xor
imul
cmp
cmp
xchg
leave
imul
cmpsb
and
and
imul
jo
sub
ja
mov
mov
ljmp
mov
test
stos
push
stos
xor
test
ljmp
lods
mov
xchg
adc
mov
test
loope
push
sub
out
insb
imul
pop
jae
cmpsl
mov
movsw
loop
sahf
push
in
inc
iret
adc
push
push
cld
movsb
and
push
setle
fnstsw
jne
or
lds
adc
xor
sub
pop
int
xor
stos
push
fs
testl
out
jp
fs
gs
mov
cwtl
pop
icebp
sbb
cmpsl
lret
mov
or
inc
repnz
pop
cmp
sub
mov
cs
inc
bound
sti
mov
mov
cmpsb
push
mov
pop
push
sub
adc
fwait
loopne
pop
std
imul
jo
outsb
ja
icebp
adc
lret
and
icebp
add
inc
add
push
push
iret
lea
and
sti
test
bnd
leave
mov
into
stos
cmc
pop
add
jp
push
dec
and
cwtl
popa
xor
and
leave
popa
cmc
lds
mov
cmpl
mov
pop
fsubs
fstpt
pushf
dec
lock
pcmpgtd
outsb
imul
xchg
mov
inc
sub
inc
xchg
mull
jmp
stos
pop
mov
and
sbb
sub
jge
and
cmc
xchg
sbb
adc
inc
out
cmp
lcall
adc
aas
and
sub
mov
fcmovu
rcrb
or
sarl
mov
movsl
jne
out
mov
mov
fadd
jb
repz
ljmp
xchg
cmp
mov
dec
push
add
inc
xchg
pop
adc
loopne
shl
dec
pop
in
cli
jb
mov
push
int3
mov
or
stc
mov
sbb
push
inc
mov
jge
loope
test
jge
mov
xor
inc
inc
sti
shl
orl
push
pop
scas
push
or
and
pop
sti
ja
sbb
cmp
pop
sub
mov
xor
xchg
cli
bound
test
addr16
mov
cmpb
mov
jmp
arpl
cmp
cli
add
mov
xor
inc
ret
jmp
mov
jae
push
xchg
test
or
std
in
pop
adc
and
mov
loope
cmp
imul
pop
addb
push
and
dec
sub
loope
mov
scas
lret
jno
ret
mov
dec
add
mov
scas
cmp
frstor
or
inc
or
test
fiadds
mov
loopne
test
cltd
push
gs
sub
xchg
ss
jne
orb
xor
nop
sbb
jl
sub
in
call
movsb
pop
jnp
mov
cmpsl
idiv
add
loopne
push
pop
mov
rcrl
xchg
out
stos
mov
insl
fnstcw
stos
adc
mov
movsl
ret
sub
loopne
mov
es
mov
test
pop
push
cmp
fcmovnu
mov
inc
jge
in
andb
fstps
add
jmp
cs
inc
jbe
xchg
or
out
mov
pop
movsl
fiaddl
cld
outsb
sbb
lahf
push
or
mov
pop
notb
daa
mov
aaa
mov
jl
fcomps
push
loope
jns
ss
aad
adc
psubw
fnop
push
jmp
mov
iret
mov
and
mov
mov
popa
mov
add
shrb
mov
sub
add
xchg
pop
mov
xchg
aam
in
mov
std
arpl
pop
clc
leave
clc
movl
push
mov
and
fbld
aas
repz
inc
cwtl
call
xchg
jp
lock
adc
lock
call
fidivrl
and
mov
test
push
aas
inc
pop
or
dec
adc
jne
inc
bound
mov
push
stos
loopne
inc
cmp
jnp
cld
cmp
sub
inc
push
iret
sub
mov
les
out
pop
fstpt
or
cmp
jmp
ds
cs
pop
out
imul
sbb
leave
jle
outsb
jmp
ds
cs
cli
pop
loopne
jns
or
cmp
jmp
cmp
ljmp
jns
or
cmp
sbb
cmp
inc
adc
inc
jbe
int3
int3
int3
int3
mov
mov
jl
mov
jno
inc
enter
and
adc
add
jb
bound
push
lods
inc
mov
xchg
insb
cmpb
or
sub
dec
xor
and
adc
add
mov
bound
mov
mov
fs
ret
int3
add
jle
add
daa
fisubrs
in
add
sub
or
sbb
les
fxch
cmp
push
push
in
xchg
fwait
call
daa
pop
add
sub
into
gs
or
sarl
ret
iret
xor
add
pop
iret
inc
loop
stos
aaa
xchg
pop
mull
jns
xchg
aaa
pop
pop
pushf
popa
xor
jbe
adc
pop
and
mov
mov
das
aad
testl
sub
and
adc
lea
ja
dec
leave
inc
mov
stos
int3
loop
push
and
push
fidivl
je
xchg
adc
inc
and
inc
cmp
pop
sub
or
xor
ret
movsb
shlb
and
mov
xchg
jne
jl
or
sbb
sub
and
adc
add
jb
bound
dec
cs
or
sbb
push
nop
jge
inc
rcrb
inc
fcoml
call
bound
xlat
and
out
adc
or
push
stos
pop
nop
push
push
mov
add
jae
or
ds
aaa
enter
pop
std
or
cmp
sub
cmp
int3
and
adc
add
jb
bound
dec
mov
jl
or
sbb
sub
cmp
int3
and
adc
add
jb
bound
dec
xchg
jmp
jle
xchg
mov
jmp
outsb
scas
jbe
daa
sub
lahf
cmc
jno
out
sub
jg
scas
cmp
push
addl
mov
cs
xchg
adcb
sub
dec
push
xchg
sub
int3
test
and
ficompl
out
stc
sub
int
arpl
cli
mov
pop
test
sbb
sti
pop
pop
mov
inc
je
lahf
pop
fwait
imul
aas
add
mov
add
ss
out
jne
test
inc
cltd
adc
fs
repz
mov
mov
push
mov
mov
sbb
xor
or
daa
mov
adc
fldcw
mov
ret
addr16
daa
xchg
ljmp
mov
ret
ret
mov
inc
sbb
outsb
or
add
jecxz
flds
cwtl
loop
testl
js
lret
xchg
lods
aas
stc
les
pushl
rcr
inc
out
mov
fcompl
or
fldenv
scas
dec
jne
jp
rol
jl
pop
mov
push
movsl
ds
dec
jno
xchg
push
cmp
push
xlat
and
mov
xor
scas
les
push
mov
xchg
fcompl
cmpsb
call
pop
cmc
push
add
int
out
outsb
sti
cmp
fdivl
mov
dec
adc
addb
nop
xchg
dec
imul
jmp
xor
inc
sahf
jne
scas
sbb
inc
roll
xor
push
lods
ds
cltd
mov
xor
dec
fs
ljmp
mov
push
pop
sbb
inc
sbb
lahf
adc
ret
and
xor
jns
lahf
dec
jb
mov
pop
mov
icebp
jl
vpshlb
and
negb
mov
and
mov
jecxz
mov
shlb
and
mov
cmpsb
loope
mov
jns
pop
mov
pop
call
mov
fidivl
or
loop
andb
dec
jp
or
jmp
sbb
or
stos
sbb
out
nop
sahf
adcl
lahf
and
insb
sbb
rorl
push
xchg
adc
push
push
fstl
push
mov
int3
dec
inc
push
push
addl
inc
mov
lea
adc
in
je
repz
out
stos
and
rcrb
jle
jnp
scas
sti
neg
pop
dec
xchg
repz
pushf
cld
cld
test
mov
cs
scas
inc
add
daa
cmp
rol
loop
push
sti
icebp
std
fnstsw
xchg
iret
xchg
jae
push
sub
xor
cmp
push
mov
js
inc
push
sub
cmp
sbb
xor
lcall
aad
enter
mov
jns
xchg
fucomi
popf
sub
mov
jns
mov
call
gs
cmp
sbb
inc
int3
je
cmpsb
fwait
push
mov
xor
aam
movsbl
or
adc
jb
jle
pop
pushf
push
xchg
push
movsb
push
xor
int3
mov
lds
or
repnz
dec
dec
jbe
cmpb
mov
mov
pop
sub
and
pop
jge
in
outsl
mov
jno
movsl
gs
dec
ficompl
cltd
or
rcrb
pop
dec
xor
and
lret
data16
mov
cmp
cwtl
adcl
fistl
mov
mov
xchg
bswap
cwtl
cli
adc
loopne
out
test
adc
pop
aad
stos
mov
inc
mov
fndisi(8087
or
push
popa
cmp
lcall
add
arpl
mov
add
add
and
xor
subb
add
aaa
xlat
imul
cmp
sbb
in
or
call
add
mov
adc
cmpsb
mov
aaa
sbb
xchg
push
xchg
outsl
or
push
adc
pop
fisubs
mov
adc
sub
lods
ja
scas
jle
outsb
sbb
cmpsb
push
add
shlb
lret
iret
sbb
adc
lea
mov
lahf
bound
xchg
aas
loopne
sub
push
sbb
out
cmc
gs
xor
inc
jne
xchg
lret
orb
mov
mov
rorl
pop
in
loope
push
jne
aam
mov
fnsave
cmp
movsl
or
cli
ret
inc
clc
push
push
les
enter
mov
cmp
test
add
pop
js
add
leave
stc
mov
sti
xchg
je
sbb
mov
xchg
nop
outsl
mov
std
inc
movsb
xor
mov
out
push
das
push
push
inc
sbb
and
adc
add
cltd
sbb
flds
inc
call
xor
jbe
rclb
pop
lcall
ret
nop
fdivrs
dec
mov
xchg
mov
lret
outsl
inc
mov
sahf
pop
mov
bound
xadd
loope
push
and
mov
cmp
xchg
xor
push
sub
xor
mov
mov
les
ret
xor
ss
enter
jnp
jae
movsb
pop
and
sbb
ljmp
sbb
fisubrl
jecxz
xchg
popf
aad
lret
shlb
mov
or
mov
xchg
or
add
fs
sub
arpl
and
and
cwtl
jbe
int
cmpsl
push
fisttpll
repnz
je,pt
ret
or
mov
and
rorl
mov
pop
insb
repnz
mov
sbb
test
adc
or
cmp
lret
js
retw
pop
loope
sub
movsl
call
cltd
aam
jbe
cmpsb
subb
mov
xchg
scas
fistpl
mov
mov
jp
in
fiadds
loope
lret
imul
and
xor
ja
cmp
sub
add
xchg
bound
test
cwtl
and
xchg
sub
testl
jmp
cmp
xor
fmul
out
mov
push
jo,pt
scas
fsubrs
clc
les
ret
insb
iret
sub
jae
popf
lcall
test
adc
aam
lahf
xchg
scas
xor
sbb
mov
ret
hlt
subb
bound
pusha
push
and
cs
cltd
je
dec
push
add
pop
lret
xchg
mov
imulb
or
push
cmp
cltd
fcmovu
repnz
or
icebp
cmp
es
addr16
or
and
les
ja
rcrl
std
add
clc
sub
imul
pusha
and
push
call
push
bound
cltd
and
aad
stc
loope
imul
add
xorb
sub
ret
out
fsubs
stos
mov
int
test
push
cmp
or
insb
xchg
lods
mov
lods
push
dec
mov
test
loop
jne
and
mov
icebp
pop
pop
or
sub
xor
or
sub
lret
and
nop
sbb
arpl
cmpsb
arpl
cmpl
das
sahf
or
into
mov
xor
hlt
xor
jl
and
inc
test
cmc
mov
rcr
pop
popf
pop
arpl
sbb
and
xor
adc
add
jae
pop
push
inc
push
add
arpl
push
inc
push
je
inc
out
in
movsl
cmc
dec
popf
addr16
data16
std
inc
push
fcomps
pusha
mov
sti
or
test
cltd
mov
stos
ret
out
jne
stc
inc
xlat
pusha
scas
xor
pop
sar
jecxz
sub
pushf
dec
jo
adc
loopne
adc
jl
adc
add
enter
or
mov
lods
sub
cmpsl
sub
cmpb
call
ss
aad
push
enter
fnsave
jnp
inc
push
mov
dec
mov
popf
mov
jb
add
sbb
nop
out
sub
cmp
pusha
sub
shr
push
and
adc
pop
bound
jmp
je
adc
mov
clc
push
sti
ret
stc
ror
mov
mov
ja
iret
xchg
aad
push
aaa
mov
xchg
add
jle
jns
icebp
nop
ljmp
dec
fimuls
pushf
nop
loope
push
mov
and
cmp
popa
jne
sti
inc
adc
mov
lock
push
test
imul
mov
jmp
dec
test
jae
push
dec
pop
pop
sub
imul
arpl
xchg
in
dec
pop
clc
shlb
inc
inc
push
xor
jg
sub
je
pop
mov
repnz
aam
push
lods
bswap
repnz
call
out
ss
in
cmp
adc
dec
sub
test
lret
jns
mov
cmp
out
sub
ret
push
fisttps
cli
inc
movsb
xor
mov
mov
mov
inc
xor
inc
mov
cmp
cmp
or
sti
xlat
mov
addb
jmp
iret
sbb
push
in
mov
xor
and
test
xor
orb
bound
sub
sti
push
mov
inc
xchg
mov
adc
stos
mov
inc
sbb
xor
adcb
dec
stos
pusha
lcall
pusha
popf
dec
in
jno
push
addl
mov
pop
jnp
mov
lret
movsb
stos
push
test
mov
pop
xor
es
xchg
dec
mov
int
and
gs
loop
aas
mov
in
into
jl
xchg
divb
dec
aas
jb
outsl
cmp
cmp
arpl
mov
cmp
testl
adc
push
jo
insb
mov
js
std
jns
mov
pusha
add
sub
pop
jo
fs
and
scas
add
and
lds
loop
in
sub
cmp
lahf
pop
popa
into
xor
repz
mov
mov
jns
fcomps
sub
fs
notb
iret
aam
popf
cwtl
das
aaa
mov
adc
fisttps
mulw
daa
aaa
ret
ret
ds
testl
dec
mov
sbb
inc
mov
push
lea
xchg
cld
out
nop
mov
jp
xchg
pop
adcb
jns
push
js
push
fldcw
fwait
xchg
xor
sub
enter
lahf
adc
mov
cmp
mov
xchg
mov
sub
sub
pop
push
add
pop
dec
dec
stc
aas
mov
mov
xchg
insl
sbb
jl
test
inc
stos
lcall
movb
int3
or
inc
arpl
stc
push
fldenv
mov
push
mov
mov
and
sbb
call
andl
test
inc
pop
mov
repz
xlat
cmp
sti
lock
in
mov
xor
mov
mov
les
sbb
add
push
xchg
pop
scas
or
repz
in
xchg
push
jnp
insl
orl
add
push
cld
adc
and
xchg
xor
push
repz
es
shrb
repnz
mov
jae
inc
adc
stos
cmp
daa
adc
pop
xchg
pop
or
jns
sbb
lcall
pop
shll
in
stos
dec
push
fwait
push
and
adc
push
mov
ret
lock
and
sbb
mov
daa
and
into
stc
push
mov
popf
imul
cld
sbb
push
rclb
and
sub
outsl
jno
sbb
stc
pushf
dec
mov
inc
les
and
jecxz
lock
pop
lret
push
jno
add
mov
sub
addb
sub
push
out
outsb
fwait
cs
test
xlat
aas
inc
ficoml
adc
sbb
xchg
call
dec
lods
in
mov
xor
shll
dec
mov
pop
in
mov
test
das
loop
nop
xlat
lods
ljmp
cmp
fs
push
mov
outsb
mov
add
pushf
fidivrl
adc
push
dec
mov
mov
sti
inc
or
push
or
aad
pop
loope
jmp
mov
hlt
cmovb
cmc
int
fidivrl
popa
nop
repz
in
jecxz
push
inc
mov
and
mov
fmuls
test
mov
or
sbb
mov
inc
stc
and
cmp
in
je,pt
test
dec
ja
ret
fmull
rorl
cltd
push
cmp
inc
fmuls
ret
mov
shll
xchg
int3
xchg
pop
sbb
pop
dec
push
outsb
jno
into
in
pop
pop
lods
hlt
dec
dec
test
ficompl
mov
xor
add
movl
sahf
sti
inc
shlb
push
nop
js
push
sbb
jno
inc
test
bound
pop
cld
fidivrs
sbb
and
push
xchg
xor
dec
iret
out
xor
out
pop
es
jmp
rcrl
aaa
jb
xlat
outsb
jp
mov
je
je
and
add
stc
test
inc
mov
inc
mov
lret
jge
add
ret
cmp
jb
repz
iret
xchg
cmp
mov
push
clc
div
adc
pop
dec
xchg
daa
xor
ret
or
jge
into
mov
mov
shlb
or
mov
pop
sub
add
inc
jle
or
jns
bound
cmp
ret
sbb
stos
jp
je
in
ror
push
xchg
fidivrs
jo
add
sbb
cli
and
mov
fcomi
jne
xor
cwtl
lcall
jno
shl
fwait
aam
adc
jo
jmp
cld
jmp
lock
mov
push
adcb
xor
icebp
ret
xor
out
or
rcll
enter
lret
test
pushf
lock
push
pop
dec
xor
in
sar
repnz
fiadds
nop
pushl
and
mov
and
stc
xor
mov
jns
cld
sub
popa
ja
cs
shl
mov
data16
test
push
es
adc
xchg
push
fimuls
sub
arpl
fucomip
enter
jle
cmp
and
jns
jno
pushf
mov
cmp
push
jns
mov
imul
int
inc
add
cli
loop
inc
and
mov
ljmp
xchg
and
rdmsr
sub
add
sbb
lods
rolb
outsl
add
push
stos
cmp
jp
sarl
lods
and
pop
xchg
dec
out
movsl
cmpsb
sti
pop
dec
ss
jp
adc
dec
cwtl
adc
jp
out
xor
test
mov
pop
cmp
pop
les
mov
je
or
adc
jg
jl
pop
int
shrb
mov
mov
test
mov
add
push
push
pop
movsl
pop
and
int3
dec
pop
mov
notl
mov
aam
or
jb
ficompl
test
scas
mov
nop
xchg
mov
cwtl
and
scas
andb
and
xor
icebp
cwtl
dec
pop
xor
sbb
jp
out
push
cmp
dec
lcall
or
ljmp
neg
pop
mov
push
xchg
in
pusha
jp
testb
adc
in
decl
pop
movsl
stc
loope
sahf
xchg
sti
scas
mov
sahf
inc
jno
test
ja
mov
pop
jp
push
mov
or
sbb
sti
jg
add
ja
add
inc
sbb
scas
push
leave
shll
fstpl
inc
adcl
in
les
mov
mov
push
push
dec
imul
and
or
cmp
lea
dec
call
xchg
call
jl
pop
lcall
movsl
stc
outsb
notb
pop
fsubrl
fidivl
stc
insl
nop
pop
xor
or
ljmp
addb
test
out
sub
hlt
jo
mov
repz
daa
cmpsl
pushl
insl
scas
fsubrl
xor
es
popa
ja
repnz
les
arpl
mov
jl
inc
jo
lret
aam
mov
cmp
xchg
aas
push
out
inc
lods
icebp
stos
lcall
fdivrl
mov
xor
fiaddl
repz
and
pop
mov
mov
cmp
push
cwtl
inc
or
aas
repz
cmp
mov
jmp
jb
adc
aas
sbb
shrl
mov
inc
xor
bound
sbb
inc
xchg
rorl
xor
imul
lock
or
pushf
jb
xor
shll
lret
fwait
inc
shrb
push
roll
jg
add
sahf
loope
add
int3
mov
movsl
in
dec
cld
popf
push
cmc
sbb
aaa
or
into
pop
and
stos
es
test
ja
fs
je
movsl
or
jae
nopl
add
addr16
sub
es
cmpsw
push
jecxz
ret
or
fwait
push
aam
lock
pop
mov
lds
xchg
mov
xor
mov
sahf
clc
stos
jnp
jecxz
nop
ret
push
xor
jne
jno
lock
jmp
sub
aam
loopne
pushf
push
iret
daa
xor
aad
into
inc
incl
inc
in
jnp
xchg
lds
daa
push
int
sbb
push
icebp
sbb
in
push
and
inc
adc
loop
and
les
and
jns
les
lock
push
js
sbb
pop
cmp
xlat
jns
cmpsl
and
inc
hlt
mov
cmp
mov
jecxz
aaa
cmc
add
call
dec
push
test
add
inc
push
int
jnp
mov
outsl
sahf
hlt
lret
lods
fldl
je
pop
aas
xor
and
ljmp
inc
jbe
push
jecxz
dec
lea
push
mov
add
mov
test
xor
cmp
adc
and
movsb
push
outsb
xor
ret
cltd
xlat
cmc
clc
pop
jne
mov
stc
and
sbb
mov
nop
xchg
in
int3
pop
test
ret
dec
lcall
cld
cwtl
mov
lods
stos
jb
aad
sti
in
pop
adc
ljmp
jne
ds
dec
push
pop
sahf
in
pop
dec
push
in
xchg
xlat
aad
dec
cld
je
adc
adc
push
rorl
sub
lods
inc
jl
mov
fldenv
repnz
or
mov
loop
mov
mov
inc
call
dec
mov
inc
jo
leave
mov
test
cmpb
cld
or
lock
repnz
test
jg
xchg
add
sub
jne
push
test
cli
add
add
lds
pop
dec
leave
push
test
sbb
mov
push
sbb
cmpsb
fisubl
push
movsb
pusha
mov
pop
jmp
and
sbb
lock
inc
andb
les
mov
pop
mov
xor
dec
mov
test
leave
adc
add
cld
loop
out
xor
xor
and
ret
xchg
xchg
jle
in
jno
adc
rol
jle
xor
imul
pop
popa
ljmp
xor
and
xchg
push
into
or
cmp
movsb
mov
out
jecxz
int3
into
adc
push
or
ret
insb
cmc
or
cltd
and
ret
arpl
ljmp
and
cmc
movsl
and
sahf
cli
mov
mov
pop
mov
jbe
xchg
movsl
loopne
int3
pop
mov
scas
mov
test
or
adc
push
call
pop
mov
loopne
jbe
mov
dec
adc
inc
mov
mov
mov
aam
sub
mov
and
pop
stc
es
or
or
push
fsubs
das
cmp
add
sub
and
or
es
insl
jmp
int3
add
scas
xchg
loopne
mov
dec
push
inc
mov
les
or
mov
xor
add
bound
mov
cmpsb
jbe
jle
bound
adc
sub
add
frstor
inc
fdiv
mov
out
pop
cmp
sti
mov
sbb
out
mov
xchg
cmpsl
add
in
pop
mov
lods
push
cmp
test
sub
jno
pop
in
cmp
out
in
adc
dec
add
js
ds
inc
sbb
mov
mov
insl
fcomip
push
xchg
mov
aad
dec
sbb
and
out
mov
daa
std
adc
ret
fwait
xor
push
sahf
nop
imul
fisubs
je
push
mov
push
sbb
daa
cmc
mov
mov
xchg
and
adc
rcrb
pop
jnp
out
xor
or
xchg
enter
mov
pop
mov
or
vxorps
mov
mov
inc
mov
push
xchg
add
mov
push
push
push
shr
out
cmp
xchg
iret
inc
pusha
imul
fcompl
cmpl
rorl
mov
mov
repz
dec
pop
ljmp
dec
ret
out
xchg
inc
es
cmp
rcr
clc
xchg
repnz
int3
repz
cmp
in
cmp
imul
jp
leave
dec
movsl
dec
and
add
mov
fyl2xp1
adc
repnz
mul
aam
mov
push
pop
fisttps
inc
fwait
jge
test
scas
pop
inc
das
add
add
idivw
mov
or
add
jns
cmp
imul
inc
mov
arpl
xlat
sahf
fs
call
or
test
stc
xchg
xchg
sub
sub
int
jbe
shrl
adc
push
in
cltd
dec
popf
ss
sbb
popa
mov
jo
ja
sub
sub
xorb
or
outsb
popa
dec
das
lret
es
daa
jns
sub
add
stos
inc
ss
xchg
sti
sti
mov
lods
xchg
pop
dec
sub
insb
push
lcall
bound
insb
lret
push
movl
jae
stos
pop
out
dec
mov
movups
mov
stos
mov
jg
inc
jge
mov
jns
out
mov
popa
cli
xor
jb
mov
cmc
scas
stos
inc
inc
rcrl
jmp
jae
pop
xchg
mov
sbb
mov
ss
push
mov
dec
cmp
cmpsb
jmp
jp
jg
mov
jae
repnz
das
nop
add
ds
shlb
sub
scas
insl
in
mov
jp
mov
or
call
or
jle
enter
sbb
pop
xchg
insb
cmpb
sbb
sub
cmp
int3
and
adc
add
jb
bound
dec
mov
jl
or
sbb
sub
cmp
int3
and
adc
add
jb
bound
dec
and
cmpb
sbb
sub
cmp
int3
and
adc
add
jb
bound
dec
mov
jl
or
sbb
sub
cld
xor
and
in
add
and
xor
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
lahf
sbb
repnz
loop
pushf
xchg
fadd
leave
iret
xchg
add
jp
push
bound
add
xor
and
ret
loop
xchg
cmpsb
xorb
fs
jbe
bound
inc
data16
xor
and
or
inc
divb
iret
cmpb
mov
cs
adc
add
addr16
pop
inc
push
push
push
xchg
out
lahf
mov
xchg
pop
sbb
outsl
mov
mov
std
jge
jmp
or
adc
mov
imul
sub
es
out
sahf
lea
push
xchg
mov
scas
pop
sbbb
jno
cltd
bound
repnz
cli
pushf
shr
ss
ss
push
xchg
mov
testb
jge
mov
mov
mov
popf
test
daa
mov
jl
fidivrs
pop
or
xchg
dec
not
ljmp
add
loope
add
push
jmp
inc
sbb
aaa
mov
mov
inc
xchg
jne
inc
ja
xor
loope
ret
mov
xchg
cmpsb
mov
lahf
sbb
stos
pop
jl
jb
sbb
xor
inc
jb
xorl
lock
mov
lsl
and
add
jnp
insb
gs
push
gs
sahf
dec
divb
aad
test
loop
cli
push
add
pop
xor
adc
inc
push
jae
cmpsl
icebp
xchg
andb
mov
xchg
jbe
inc
bound
add
xor
and
shl
ret
loop
xchg
cmpsb
xorb
inc
jbe
inc
bound
add
xor
and
shl
push
jno
out
jecxz
js
mov
sub
out
pop
lret
or
mov
xchg
adcb
mov
enter
lcall
pop
xorb
stos
nop
dec
sub
jmp
loopne
scas
in
push
in
mov
dec
push
fs
xchg
jp
cmp
fadd
test
aaa
lds
scas
outsb
pop
mov
pop
xchg
and
fs
and
adc
sub
jne
adc
add
sbb
rolb
es
dec
int
pushf
mov
pushf
es
mov
jg
add
icebp
test
mov
fdivs
or
jmp
sub
pslld
repz
stos
jmp
mov
adc
movsl
lret
xor
mov
cmpsb
or
fs
fdiv
pop
mov
es
inc
iret
xorb
pushf
shll
subl
jno,pn
aad
insb
sub
stos
or
dec
sbb
test
or
lock
and
lahf
add
xor
mov
test
ds
dec
cs
jo
cwtl
sarl
push
push
cmpl
lock
je
push
jg
sar
dec
lock
jbe
psadbw
jb
and
and
stos
dec
jp
loop
xchg
xchg
or
lcall
dec
sub
mov
add
jbe
lret
pop
jae
mov
jbe
push
push
jne
mov
inc
add
repnz
mov
sub
or
add
sub
push
sub
xchg
jp
adc
cwtl
sbb
ljmp
push
cli
adc
cmp
push
fnstsw
xor
ficomps
lret
fcoms
dec
sbb
pop
enter
rol
xchg
fincstp
jp
aam
out
jne
xor
adc
mov
mov
fs
push
test
pop
rcrb
mov
cmp
arpl
mov
sub
adc
sbb
mov
scas
popf
pop
rclb
cmp
test
jb
and
int
rcrb
adc
test
mov
add
mov
or
das
jne
lock
add
in
sub
dec
ljmp
sbb
xchg
mov
mov
orb
imul
add
test
mov
and
lods
movsl
push
sbb
sbb
leave
jae
clc
push
or
lods
in
push
push
fistpll
add
adc
je
cmp
cmp
jmp
lret
notl
test
inc
mov
test
cmp
lret
jp
mov
cmp
test
adc
push
lret
or
jecxz
add
pop
jecxz
pop
lahf
iret
sub
jo
leave
inc
jne
out
test
jl
xor
divl
sub
in
test
ljmp
pop
sahf
pushf
jl
sbb
xchg
sbb
mov
push
and
stos
inc
cmp
cltd
lods
ret
sub
test
in
mov
add
jnp
or
idivb
jnp
and
sti
shl
or
out
rolb
data16
xor
sub
call
daa
std
jle
cmp
and
inc
add
adc
push
push
adc
popa
cli
in
and
dec
jne
mov
loope
hlt
lret
icebp
jnp
or
rclb
mov
xor
repnz
mov
ficoms
and
inc
mov
fcmovnu
adc
add
std
xlat
pop
in
repz
iret
sbb
jae
fmul
insl
mov
cmp
xchg
push
sub
push
inc
push
push
mov
outsl
fs
mov
enter
pop
out
inc
shl
cmp
xchg
call
mov
mov
or
imul
or
stos
inc
adc
push
push
rcrl
mov
add
mov
test
xchg
push
pop
movl
and
and
pusha
add
sub
aas
out
clc
sarl
add
dec
jg
cmp
jo
cmp
mov
ja
push
jbe
or
in
ja
push
push
inc
in
out
and
xlat
mov
push
fcmovb
lcall
das
stos
inc
mov
or
mov
and
push
aad
aaa
mov
fcmovbe
pop
cltd
xchg
mov
mulb
jns
mov
cwtl
pop
xor
mov
xor
dec
and
mull
je
or
pslld
xor
loopne
std
xorl
outsb
or
xor
lret
subl
add
push
jge
jae
out
dec
or
pop
jnp
adc
xor
imul
cmp
fucomp
psrad
sti
push
sbb
dec
mov
push
subb
inc
in
add
push
loop
mov
mov
or
mov
imul
xchg
dec
inc
sbb
test
cld
mov
mov
mov
xchg
loop
push
cld
mov
add
popf
push
xchg
add
add
rdtsc
mov
into
push
aas
lock
shlb
mov
out
push
or
xor
push
in
push
xchg
jl
sub
sbb
test
lret
mov
rcll
dec
test
sub
es
ljmp
stos
mov
fisttps
js
jns
dec
mov
xchg
movl
outsl
roll
inc
pop
movsb
mov
leave
cmp
xor
imul
mov
sti
push
or
imul
xor
cmp
inc
jns
mov
mov
add
cmp
mov
add
fildll
jnp
aas
test
cmp
stos
das
test
ja
call
mulb
out
cmpb
pop
mov
dec
icebp
out
adc
xchg
jmp
shrb
imul
in
rcrb
fisttpll
jmp
push
imul
adc
popf
incb
imul
insb
xchg
daa
pushf
jg
inc
out
in
sub
outsl
lods
jp
cs
mov
adc
pop
and
lcall
sub
sub
xchg
aaa
add
cmc
rcr
shlb
rorb
shr
outsb
mov
sbb
stos
jg
cmp
icebp
xchg
fs
mov
cmp
lds
clc
hlt
fldcw
pusha
in
mov
or
icebp
dec
lcall
shl
mov
out
add
cli
dec
mov
cmpb
sub
adc
jbe
mov
adc
mov
pop
inc
sub
sarb
xor
adc
out
movsl
adc
mov
jl
mov
xlat
dec
sub
mov
mov
pop
xchg
out
clc
push
scas
jge
jl
pop
push
jg
mov
mov
negb
addb
movsl
movsb
leave
push
aam
jb
add
adcb
out
mov
xlat
mov
dec
pop
mov
shrb
xor
cmp
movsl
and
xorb
imul
mov
loopne
lods
test
ret
jecxz
jo
mov
nop
and
rcr
in
movsl
test
mov
aad
repnz
inc
mov
testb
aam
das
arpl
or
insl
shrl
enter
inc
sqrtps
push
bound
adcl
stos
fidivrs
jo
sub
sub
je
fiadds
nop
jb
or
mov
or
aam
movsl
test
scas
cli
pop
cmpsl
lcall
aad
arpl
and
mov
and
push
sub
daa
adc
gs
das
in
cmp
aam
flds
sbb
inc
dec
pushw
shr
mov
mov
jg
and
outsl
lret
lods
mov
out
mov
test
mov
mov
push
cmp
nop
scas
insl
or
jge
adc
mov
mov
pushf
aad
in
insl
arpl
sti
mov
add
push
in
xor
ja
in
inc
lods
cld
std
jne
into
dec
dec
jp
add
test
aam
clc
mov
test
arpl
sub
sbb
jo
bnd
cmp
roll
jg
and
imulb
cmpsl
stos
mov
lret
pop
fildl
adc
pop
dec
js
xchg
lock
bound
mov
dec
daa
test
inc
push
mov
sbb
pop
loop
push
bound
mov
adc
mov
push
push
xchg
aas
sbb
inc
jo
xchg
pop
fnclex
or
jnp
jnp
sub
rorb
mov
lds
and
mov
cmp
sahf
cmpsl
arpl
add
inc
jl
outsb
push
add
push
pop
adc
push
popa
lahf
and
nop
test
jg
stos
mov
out
es
and
xchg
mov
inc
aam
xchg
arpl
jl
repnz
sbb
in
dec
cmc
push
inc
nop
push
outsb
push
orl
add
add
in
les
arpl
sub
sti
adc
and
call
aas
xchg
mov
mov
icebp
mov
add
adc
sbb
subl
scas
mov
inc
call
or
xor
cmc
xchg
ds
cmc
push
or
out
jecxz
dec
and
inc
ret
fwait
cmpl
pop
shr
shrl
inc
loop
xor
xor
inc
lret
mov
cli
aam
lock
test
mov
rcll
repz
popf
scas
inc
sbb
sbb
inc
add
sbb
xchg
cmpsb
in
outsb
xor
andl
add
push
adc
popf
xor
mov
pop
std
mov
rclb
ficoml
inc
mov
and
lods
jnp
lock
xlat
inc
data16
mov
push
cld
pop
leave
andb
adc
mov
mov
scas
push
in
in
call
decl
mov
inc
adc
or
and
inc
and
mov
xchg
cs
xchg
jne
mov
jno
das
movsl
cmpsb
clc
sub
cs
add
cmp
push
in
loopne
mov
fdivrl
push
pop
inc
inc
js
mov
mov
jbe
lret
sbb
fs
icebp
es
je
mov
ret
mov
rolb
add
push
jp
and
mov
mov
add
test
jnp
inc
daa
sub
iret
sbb
loope
lahf
xor
dec
push
pop
cld
js
add
int
leave
mov
jbe
jg
dec
sbb
add
cld
mov
add
rcr
mov
pop
mov
or
jmp
repz
stc
scas
jo
mov
mov
sub
add
cmc
lcall
pop
mov
mov
shlb
fsubs
jg
shr
mov
sbb
jp
push
inc
push
dec
pop
ja
xchg
ret
pop
icebp
sbb
dec
jl
xchg
inc
int3
filds
mov
mov
jno
inc
arpl
mov
add
in
movsl
lea
dec
xor
xchg
dec
imul
xchg
adc
xor
shrl
mov
xchg
and
aas
push
sub
repz
dec
iret
xchg
ds
inc
inc
cmp
je
dec
or
lret
or
sahf
sbb
mov
xchg
xor
jae
dec
cmp
movsb
and
aaa
push
jnp
lret
mov
sbb
dec
aam
jae
jne
push
add
sub
jmp
out
dec
fisubrs
sub
mov
push
and
rcll
les
sbb
sti
sbb
cmp
push
xchg
and
jno
pop
adcl
jae
inc
lcall
xchg
sar
outsb
add
sub
mov
inc
es
rcl
dec
fdivl
push
cli
mov
ror
xchg
cli
xchg
mov
inc
inc
imul
es
fidivl
pushl
loope
scas
outsb
ljmp
jge
cwtl
push
sbb
clc
repnz
lret
xchg
es
mov
xor
xchg
mov
cli
cltd
es
sti
pop
lret
pop
dec
aad
pop
iret
jo
xchg
push
and
jmp
add
or
push
movsb
sbb
andb
adc
dec
mov
and
jecxz
mov
jecxz
and
pushf
movsl
ds
ror
cmp
adc
mov
std
inc
and
sti
lods
mov
rcrb
xor
mov
lds
jmp
xchg
enter
adcb
in
xchg
inc
xchg
lahf
push
cmp
mov
push
or
cmp
mov
mov
xor
cmc
mov
push
xchg
jl
mov
jnp
mov
sti
test
fwait
or
jne
into
dec
pushf
shlb
mov
ficomps
push
xor
pusha
bound
test
popf
mov
add
jge
mov
pop
jp
mov
test
mov
out
lcall
mov
sbb
xchg
push
xchg
lahf
inc
repnz
ret
rolb
mov
ret
push
jg
bound
test
push
cltd
cmp
cmpsl
or
enter
loop
pop
ret
cmp
adc
insb
test
cld
xchg
out
testl
inc
pop
cmp
and
jnp
in
and
adc
rcrl
cmpsl
arpl
sub
mov
es
adc
loope
ror
aam
xor
fisttps
filds
push
andl
insl
orl
pop
push
adc
and
sbb
into
push
mov
sbb
cltd
mov
jno
movsb
add
cmc
sarl
lcall
dec
in
lret
jno
popa
loope
mov
ss
and
test
mov
fistps
insb
std
xor
sbb
icebp
jne
pop
jg
or
adc
sti
imul
jns
mov
movsw
cmc
dec
fwait
jnp
xor
adc
mov
lea
insb
mov
push
adc
lret
pop
mov
mov
mov
mov
lds
or
mov
pop
push
dec
jb
mov
out
dec
inc
ret
push
and
out
dec
and
or
xchg
add
iret
jb
mov
lods
inc
sub
aas
das
mov
dec
cmp
adc
jl
xor
aaa
clc
mov
adc
add
in
cmp
iret
das
in
arpl
pop
pop
jae
jns
mov
hlt
push
jnp
xor
cmp
daa
jle
loope
int3
push
pop
cmp
jle
lret
imul
mov
addr16
mov
add
sub
mov
xchg
or
hlt
dec
and
mov
ret
and
icebp
mov
push
out
flds
jmp
data16
adcl
push
hlt
fildll
xchg
sbb
hlt
iret
enter
fsubr
lds
scas
sub
cmp
lcall
in
jno
add
movsl
dec
test
xchg
or
repz
idivl
lds
cmp
adc
add
jnp
inc
mov
or
mov
inc
sub
icebp
cmp
cmp
mov
cmp
and
mov
mov
push
pushf
aaa
push
in
or
mov
lret
sub
aas
pusha
adc
sbb
subb
inc
cmp
out
cli
ja
adc
loop
jecxz
js
pop
fmul
insb
fsts
or
lcall
push
push
scas
test
mov
es
add
test
mov
mov
mov
cmc
adc
jmp
dec
lcall
inc
xor
or
lods
and
cs
aas
cmp
scas
pop
sti
mov
adc
test
es
pop
sbb
outsl
jb
mov
mov
mov
mov
sub
insl
fs
and
insb
cmp
movsb
inc
sbb
mov
out
or
cltd
pop
in
mov
nop
jl
icebp
adc
inc
pop
cmpsb
js
fldt
pop
mov
xchg
jb
lcall
and
dec
repnz
jg
xchg
mov
mov
mov
mov
inc
mov
pop
sub
dec
push
mov
sub
mov
enter
in
aad
arpl
and
xor
int
orb
sbbl
and
or
jne
sti
test
lahf
out
inc
add
std
sti
mov
ljmp
cmpsb
adc
xor
frndint
sti
cmpsl
hlt
inc
cmpsb
lods
pop
push
sub
lcall
idivb
pop
cltd
enter
cmp
lret
inc
cmp
in
mov
cmc
dec
jns
stos
cmp
push
dec
ja
sbb
xor
jnp
mov
out
xlat
push
leave
fdivrl
cld
push
int
xor
inc
mov
outsb
jmp
inc
xchg
out
scas
mov
out
out
aaa
add
fisubl
adc
les
cmp
popa
jb
xor
sub
dec
lods
add
mov
mov
mov
add
pushf
add
sbb
dec
cmp
cmp
xchg
mov
fs
aam
mov
jne
adc
and
arpl
sbb
and
add
xchg
fcoml
cltd
imull
daa
sub
mov
cmpsb
or
mov
cld
or
imul
xchg
ja
data16
xchg
mov
mov
adc
into
test
cs
jbe
ljmp
lock
mov
jge
mov
dec
mov
inc
arpl
xchg
lds
gs
xor
int3
ret
andb
jp
sub
push
imul
jp
arpl
js
sub
mov
jp
aaa
div
cli
mov
das
xchg
call
xor
pop
inc
fidivrl
or
xor
outsl
sub
outsb
push
xor
mov
aam
sahf
scas
ficompl
pop
adc
and
jge
jl
xchg
cmpb
stos
inc
faddl
sar
sahf
xor
sbb
push
xor
inc
lret
popf
in
aaa
dec
add
sbb
xchg
push
lods
stc
ficomps
jnp
xchg
lods
push
jge
add
dec
push
out
dec
sbb
test
imul
mov
stos
sub
cli
push
out
imul
nop
out
aas
hlt
mov
mov
aad
xchg
xor
adc
inc
out
push
ds
js
mov
movsl
arpl
mov
mov
jecxz
out
or
mov
mov
stos
rcrl
icebp
fistl
mov
ja
lcall
pusha
and
aaa
push
cmpsb
mov
xorl
mov
loopne
cltd
popa
adc
jecxz
xor
adc
xchg
push
out
mov
arpl
clc
adc
out
pop
roll
decl
dec
xor
xchg
cltd
adc
mov
xchg
push
and
jl
sub
loope
xchg
sbb
push
sbbl
mov
cmp
inc
cwtl
pop
jge
xchg
push
mov
add
pushf
mov
cmp
scas
jmp
fs
ds
fdivrp
push
popa
mov
adc
daa
mov
in
cwtl
movsb
sub
pop
jmp
cwtl
or
cli
jns
lret
sbb
mov
imul
pop
out
pop
pop
fldenv
dec
adc
jmp
out
push
cmp
fcmove
pushf
cmp
xchg
iret
mov
js
jbe
mov
fisubl
adc
insl
push
pop
sbb
rorb
push
xchg
aas
lods
call
ljmp
mov
in
push
fdivs
scas
adc
add
in
mov
popf
xchg
aaa
in
pushf
ja
inc
inc
jmp
jp
sub
or
add
adc
push
mov
lcall
btc
xchg
popf
clc
andb
push
jp
adc
inc
mov
repnz
insb
push
dec
mov
xchg
jp
or
std
pop
or
cwtl
jp
subb
mov
decb
loope
aam
or
aam
pop
sbb
insl
loopne
loop
in
gs
jne
out
stos
pop
inc
mov
add
pop
ret
or
into
push
cltd
xchg
cwtl
jb
adc
push
js
les
test
test
aad
cmc
bound
mov
jno
dec
adc
ret
mov
adc
inc
lock
sbb
push
pop
push
fbstp
pop
fildll
xchg
ret
mov
sbb
jne
add
in
cs
into
lods
xchg
push
lods
test
mov
and
mov
xchg
sub
stc
fsin
sbb
pop
add
stc
in
daa
cmpsb
loope
call
test
dec
das
jbe
push
das
mov
out
push
loope
int3
sbb
pop
jno
icebp
fisubl
mov
inc
fcom
jbe
scas
mov
push
fwait
movsb
divb
scas
xor
sbb
stos
data16
jne
das
sbb
xorl
cmp
insl
xor
or
xchg
xor
ror
pusha
popa
adc
sbb
out
pop
inc
jmp
push
fdivs
jo
idivb
inc
outsb
jp
cld
loop
jno
cmp
repnz
cmp
mov
mov
push
int3
pop
movb
adc
mov
xor
mov
out
xchg
ror
in
fldl
mov
cmp
imul
or
cltd
xchg
xchg
cld
repnz
push
xor
xlat
pop
xchg
dec
fneni(8087
nop
mov
test
ljmp
sub
cmp
and
push
jb
sub
hlt
pusha
mov
jns
cmpsb
jmp
cwtl
int3
inc
cmp
clc
sub
mov
ret
mov
loopne
add
lods
aaa
fiadds
daa
pop
and
sub
or
iret
bnd
sub
movsb
flds
mov
push
stc
iret
inc
inc
leave
xor
mov
xor
mov
or
imul
jl
jno
dec
push
and
mov
mov
sbb
and
testb
xchg
and
daa
dec
xor
mov
movsb
push
cli
pop
sub
xor
addr16
push
mov
push
imul
lock
cmpsl
out
jbe
leave
xor
push
mov
jbe
or
mov
lcall
rcll
imul
leave
or
sub
mov
pushf
sub
fmull
ljmp
imulb
imul
cld
lcall
pop
pop
push
out
jge
in
sarl
outsb
std
fsubrl
jle
sub
fadd
js
fdivr
sti
cmpsl
es
daa
aad
push
ljmp
mov
test
xor
xchg
cmpsb
xorb
inc
jbe
inc
bound
add
xor
and
shl
ret
loop
xchg
cmpsb
xorb
inc
jbe
inc
bound
add
xor
and
shl
shl
loop
xchg
cmpsb
xchg
push
inc
jbe
inc
push
adc
sbb
ss
adc
lret
idivb
lret
cmpsb
xchg
mov
xchg
xchg
push
mov
inc
bound
gs
mov
int
fucomp
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
push
fcompl
in
cs
ds
es
xor
pop
sahf
outsb
scas
pop
mov
sub
cmp
fisttpl
fcompl
fsubrl
cld
mov
pop
lods
outsb
mov
decb
scas
scas
mov
sub
cmp
aad
lds
hlt
cs
xchg
dec
test
outsb
stos
jle
es
sahf
add
or
pop
pushf
push
mov
inc
xchg
outsl
test
inc
jp
adc
js
loopne
and
xor
pop
push
sahf
in
dec
in
rorl
mov
test
popa
xchg
scas
jno
mov
dec
xor
mov
fmull
ret
popf
mov
jae
popa
cmp
addl
pop
push
xchg
sti
ja
sbb
popf
or
ja
test
loope
cmpl
and
mov
jae
out
and
mov
mov
fmull
dec
mov
jb
leave
jns
jl
cmpsb
ficomps
jae
cwtl
fsub
mov
cmp
rorl
sahf
mov
mov
mov
int3
cli
cmp
or
fcompl
in
cs
pushf
dec
xchg
outsb
movsl
jle
mov
scas
gs
sub
and
push
mov
push
call
and
cs
pop
ljmp
js
dec
in
pop
mov
mov
decb
repnz
sbb
jle
negb
iret
or
imul
out
dec
mov
pop
hlt
dec
pushf
pop
lods
outsb
mov
sahf
insb
scas
jl
or
sbb
sub
cmp
int3
push
fcompl
in
cs
mov
pop
lods
outsb
mov
sahf
insb
scas
jl
or
sbb
sub
cmp
int3
push
pop
push
mov
xchg
jns
orb
imul
mov
mov
outsl
xor
das
sarl
push
sub
mov
lds
inc
imul
push
mov
add
jge
lock
push
and
das
outsl
addr16
sarl
adc
adc
loope
mov
orb
icebp
adc
dec
subb
mov
loopne
push
jns
mov
and
mov
out
rorl
jl
dec
icebp
and
repz
lcall
ret
xchg
sbb
pop
gs
movl
dec
sub
pop
mov
movsl
repz
jl
roll
adc
imul
shlb
adc
movsl
dec
mov
testb
mov
inc
int3
sahf
imul
mov
pop
cmp
or
aaa
in
int3
xor
test
inc
outsb
roll
pop
push
cli
mov
outsl
aas
bsf
stc
sbb
xchg
cs
sbb
fs
cs
jbe
mov
xor
sbb
fstpl
mov
and
aam
movsl
iret
cmp
jb
fldt
cmp
das
ds
jae
fwait
outsb
mov
adc
lret
push
mov
aad
add
xchg
sbb
add
ljmp
mov
cld
xor
roll
add
mov
out
cmp
jecxz
sbb
int3
sbb
pop
pop
ds
mov
out
mulb
aam
xchg
cmp
js
cmp
lret
sarw
test
insb
xor
clc
sar
lock
add
mov
sbb
cmp
mov
and
adc
insl
jl
test
push
and
addl
ret
adc
xor
sub
jae
outsb
jl
jae
imul
or
por
jg
dec
cmpsb
clc
mov
jp
push
enter
sub
jae
mov
mov
xchg
sbbb
icebp
adc
mov
aam
lea
out
in
xchg
insb
imul
lcall
stos
jne
fs
xchg
mov
jmp
flds
push
aam
rdtsc
jg
call
and
mov
push
std
movsl
ljmp
xchg
dec
jmp
mov
pop
xchg
cmp
ds
gs
cltd
push
cmp
rcr
fs
mov
mov
std
scas
test
push
cmp
dec
pop
adc
popa
dec
jmp
imul
jne
push
ret
dec
sbb
dec
out
faddl
je
and
int3
add
jnp
adc
call
xchg
add
scas
or
push
add
je
mov
out
cli
popf
add
mov
cmp
test
popf
jle
sbb
aam
mov
adcl
das
sub
cmp
jecxz
lods
pop
shr
mov
push
loopne
xor
dec
and
sti
jge
cmp
and
cmc
xchg
push
add
std
out
movsb
mov
jecxz
repnz
sbb
mov
add
pop
push
stc
loop
xor
test
es
outsl
divl
cli
dec
aas
shr
out
add
stos
jl
outsb
ja
mov
ja
popa
inc
xchg
xor
and
xor
lea
and
and
sub
std
xor
and
sub
dec
jne
inc
popf
sarb
mov
xor
and
sti
repnz
push
test
jmp
xor
push
cwtl
xchg
and
movsb
mov
repz
cmpsl
stc
lcall
addr16
push
rcr
inc
cli
xor
nop
pop
fwait
and
mov
jge
push
dec
mov
pop
les
and
or
insb
jmp
test
xor
cli
mov
sub
andb
and
cmc
jge
pop
ljmp
lds
stc
test
cli
std
cmp
mov
es
jle
jle
cld
push
fidivrs
jmp
imul
lret
dec
in
subl
dec
dec
sbb
or
cmp
sbb
cmp
fsubr
pop
xchg
xchg
mov
test
sub
cmp
out
add
jno
dec
pop
das
leave
pop
xchg
push
lds
cmp
test
out
xor
aas
cwtl
sti
jge
lret
pusha
jmp
aaa
shrl
orb
ljmp
jecxz
pop
xor
and
into
roll
int3
sbb
xchg
pop
mov
scas
popf
les
and
sbb
cmp
outsb
sub
push
mov
aaa
aaa
int3
stos
sub
or
inc
cmc
outsl
mov
mov
mov
xchg
or
clc
insl
mov
sbbl
out
add
mov
mov
sahf
pusha
add
inc
stos
in
mov
adc
lahf
push
test
and
cmp
cli
les
xchg
jne
pusha
in
in
push
dec
mov
push
ljmp
aam
xor
repz
scas
imul
pop
pop
aaa
roll
mov
rcr
repz
add
cmp
js
bound
mov
mov
andb
cs
push
sub
into
xchg
mov
add
push
aaa
or
daa
lahf
push
mov
roll
loop
sbb
inc
daa
jns
mov
call
sbb
adc
pop
dec
clc
or
rcl
sbb
fwait
and
mov
mov
mov
inc
or
test
jbe
insb
pop
push
inc
lds
int
aaa
fcompl
js
pusha
and
adc
and
popa
repnz
jecxz
icebp
in
stos
fdivrs
ds
sbb
xchg
stos
andb
xor
rclb
rorb
sub
in
fs
push
and
sbb
jl
cmc
jb
or
movsl
stc
aas
mov
insl
inc
addl
sbb
jg
rorl
fcoms
xchg
cmc
sahf
dec
or
rorb
bound
and
sbb
mov
mov
cmp
adc
add
jnp
and
lret
stos
sub
repnz
or
aad
lret
mov
mov
enter
into
xchg
xchg
lret
outsl
cmp
int3
mov
mov
std
shll
jbe
in
jns
mov
or
lahf
mov
jb
inc
mov
mov
mov
data16
pop
xchg
sbb
shrb
adc
xor
icebp
cmpsb
mov
jecxz
mov
loope
and
lods
enter
pop
jne
push
lret
add
sbb
mov
data16
cmp
xor
out
add
jne
mov
int
fsubl
or
out
pusha
iret
in
sub
outsl
imul
jnp
sbb
xor
arpl
sarb
push
inc
iret
adc
xor
push
je
jo
fs
jnp
popa
imul
or
sbbb
mov
inc
adc
xor
hlt
dec
pop
ret
mov
jp
lret
fwait
xchg
ret
mov
jno
insb
push
jge
lds
cltd
jl
movsb
incl
std
jae
xor
cmpsb
xorb
jle
lods
cwtl
add
inc
fists
out
xchg
cmpsl
mov
lods
mov
loope
popa
cmp
loopne
sbb
pop
mov
popa
xor
lds
enter
or
pop
pop
ret
cmp
inc
sbb
mov
xchg
test
enter
lds
mov
sbb
jae
popf
mov
sub
loopne
or
aaa
jle
nop
fnstenv
testb
cmc
sub
pop
cmp
ljmp
test
movsl
dec
or
xchg
jno
jmp
pop
mov
and
and
ja
ret
inc
sbb
cmpl
dec
mov
aaa
movsl
popf
leave
xor
cmp
cs
or
rcr
push
cs
cmp
jg
ret
sti
dec
insl
jbe
jge
mov
add
aad
fbstp
ret
pop
les
dec
insl
add
mov
lock
mov
lahf
lods
orb
dec
jo
mov
sub
sbb
sbb
push
xor
mov
jne
rcrb
cld
jmp
sahf
jle
mov
push
mov
lahf
jo
shll
mov
pop
popa
cmpsb
xchg
js
sbb
inc
repnz
fidivrs
adc
pushf
imul
lods
inc
fldt
fs
adc
imul
addr16
or
push
cmp
xorb
fwait
and
push
imul
orl
mov
les
xlat
sbb
out
movsb
add
in
fwait
mov
fs
jne
pop
notl
lahf
xchg
jo
xor
clc
data16
ret
rclb
fstpl
and
stos
outsb
and
xor
mov
add
test
dec
out
mov
fists
cltd
notb
orl
aas
pop
fldt
xor
inc
push
and
cmp
and
xchg
idiv
loop
jmp
pop
in
loope
adc
cltd
hlt
adc
cld
cmp
or
sbb
jns
xchg
popf
add
xchg
fwait
pop
loope
sti
aaa
lods
inc
mov
pop
jbe
out
jg
jnp
mov
dec
xor
and
inc
fwait
jle
dec
andb
sarl
jmp
sti
lret
imul
adc
jbe
push
cld
and
sub
lock
xor
xchg
mov
xchg
subl
push
in
push
je
andl
loop
addr16
cmp
das
stos
xchg
cmp
scas
fwait
subb
cltd
js
or
mov
mov
rclb
out
stos
cmpsb
jbe
mov
and
and
mov
or
xchg
lods
adc
iret
push
test
out
sub
addb
inc
xchg
sti
ds
in
xor
lds
daa
mov
stos
xor
ret
lods
sbb
mov
cmp
jno
push
xchg
loop
test
xor
push
jp
dec
cli
and
xor
push
daa
xchg
addr16
xchg
sbb
xchg
or
xchg
roll
sbb
out
push
jecxz
xchg
inc
int
aam
enter
xchg
pop
stos
scas
or
xchg
xchg
aaa
orb
int
movsl
sub
xchg
jmp
and
outsb
dec
sbb
lret
sbbb
pusha
negb
outsb
lods
mov
mov
mov
repnz
xor
jnp
imul
fwait
mov
inc
push
mov
xor
xchg
adc
xor
jmp
push
inc
sarl
test
fcmove
pop
data16
inc
sbb
mov
push
mov
cltd
ja
push
sub
pusha
int
and
lret
xchg
lret
ds
push
cmpsl
pushf
or
or
xor
jns
sbb
pop
fisttpl
xchg
cmp
jno
or
stos
ss
in
sbb
pop
xor
cltd
pop
dec
jg
or
cltd
push
dec
movsl
add
push
outsb
sub
aas
es
fs
sarl
shrl
push
cmovo
sbb
std
fmuls
test
lret
jns
les
dec
lahf
dec
orl
test
or
stos
roll
stos
lods
sub
repz
xor
daa
aas
lcall
mov
dec
daa
jg
iret
cltd
sub
inc
mov
ljmp
pop
std
fsubrl
stos
sti
cwtl
mov
out
jo
jns
lret
sbb
loope
or
sbb
sub
int
loope
dec
in
sbb
pop
fnsave
pop
jb
sub
dec
jb
or
pop
xchg
mov
push
jl
stos
decl
cltd
jno
cmpsl
insb
imul
into
pop
test
insl
icebp
addb
scas
bound
and
push
cmp
loop
fld
popf
pop
push
clc
cmp
push
icebp
jmp
jne
dec
add
stc
in
inc
cmp
push
and
jne
push
mov
inc
dec
mov
in
adc
in
mov
lret
dec
xchg
ljmp
pop
dec
cltd
cmp
fwait
push
sub
inc
or
dec
inc
in
pop
lds
xor
mov
push
sub
in
xor
out
xor
cltd
idivb
add
nop
fimuls
sub
cmpsb
and
jecxz
push
daa
arpl
lods
adc
scas
inc
inc
andb
mov
mov
call
and
ljmp
xor
clc
mov
xchg
loope
clc
std
cmp
mov
fdivrl
daa
cmpsl
in
adc
je
inc
or
fmuls
popf
imul
inc
aad
cs
dec
shrb
mov
inc
mov
movsl
jl
test
mov
fs
adc
mov
int
das
cwtl
cs
inc
int
sub
lods
dec
ds
dec
sbb
jns
jno
test
int
and
mov
fldcw
sbb
ret
mov
jl
sbb
inc
fwait
lret
or
dec
mov
scas
loop
adc
jle
xchg
cld
daa
xchg
jo
add
iret
inc
mov
push
out
fs
sbb
rcrb
pop
adc
xchg
mov
out
mov
rcrl
jmp
lods
xchg
xor
arpl
sub
xchg
notl
push
fbstp
dec
pop
leave
pop
push
cli
mov
movsb
sbbb
push
js
dec
dec
daa
loop
cmp
int
xchg
imul
fcmovne
fiaddl
iret
mov
adc
lods
repnz
adc
mov
push
inc
lret
xchg
rol
enter
mov
adc
imul
out
mov
fildll
scas
cwtl
xchg
inc
ss
test
sub
jle
mov
sbb
jmp
inc
imull
inc
aam
mov
cmpsl
out
adc
push
mov
shl
sub
inc
mov
sub
dec
and
pop
cmpsl
mov
xor
jmp
lret
mov
cmp
push
sarl
lahf
cmp
loopne
jae
hlt
stc
ret
push
and
in
jge
push
scas
sahf
mov
push
jae
xchg
inc
and
xchg
jl
sbb
adc
mov
scas
sahf
pop
adc
jb
mov
xor
ds
xchg
fwait
jb
pop
mov
push
jg
xchg
lret
push
scas
enter
or
fisttps
xor
dec
dec
movsb
in
in
xchg
and
xlat
mov
das
mov
inc
stos
inc
sbb
jge
xor
mov
cmp
mov
jge
mov
jae
inc
repnz
jo
mov
aas
sbb
int3
les
jecxz
xchg
adc
andb
or
jge
add
aam
lods
enter
xchg
jg
xchg
push
and
lods
mov
pop
add
mov
iret
xor
jl
xchg
out
ficoms
pop
cld
js
mov
dec
xchg
mov
lods
jbe
jne
dec
adc
es
ja
sarl
xorw
mov
rol
subb
mov
xor
cmp
aaa
je
xor
jecxz
mov
ficoms
inc
push
add
pop
sbb
pop
or
xchg
adc
int
mov
es
nop
add
jbe
push
mov
dec
pop
lret
xchg
loop
fcmovu
es
das
push
xor
fabs
nop
stc
push
cs
xchg
icebp
cmpsb
outsb
je
lahf
cld
mov
out
fdivl
cwtl
test
fidivs
in
hlt
jmp
movsl
shrl
or
repnz
inc
leave
xchg
pop
rorb
imul
mov
fcmovnb
loopne
jo
sbb
or
add
inc
cmp
cmp
jne
xor
or
adcl
pop
hlt
es
out
sbb
mov
inc
scas
imul
cmpsl
push
jp
xor
add
into
lock
xlat
sbb
cmpl
rcrl
jae
insl
into
jmp
pop
enter
cltd
xchg
push
test
rorb
and
xor
cwtl
mov
xchg
dec
rcrl
jb
jmp
out
jg
icebp
fstp
out
sbbb
xchg
dec
rcrb
push
cmp
outsl
inc
popf
and
in
stos
push
mov
jno
sbb
rorl
dec
xchg
adc
incl
sub
fisubrs
sbb
dec
cmc
test
loope
push
mov
test
sti
sti
xchg
lock
jno
icebp
mov
mov
pushf
sbb
mov
pushf
jp
dec
scas
aad
fiaddl
pushf
mov
lea
push
inc
xchg
cmp
lcall
enter
ljmp
dec
jl
xchg
cmp
std
dec
pop
arpl
dec
cmp
push
test
or
jo
cmpsl
sti
lcall
cmpsb
dec
pop
jg
jecxz
cmp
xlat
jecxz
cmp
cmp
dec
out
mov
jle
neg
aas
jle
dec
test
test
stc
nop
xchg
pop
cmpsb
jbe
loopne
or
dec
pop
les
inc
mov
cs
and
and
mov
mov
push
cmpsl
adcl
push
and
jns
stc
push
sbb
mov
insl
push
jecxz
sbb
mov
or
pop
ss
bound
push
jb
inc
push
fisubs
fsubl
mov
stos
call
arpl
sar
call
inc
sbb
pop
arpl
movsb
sub
into
or
movsl
ds
imul
out
or
enter
pop
jg
inc
enter
jo
push
testb
pop
push
cwtl
aaa
int3
jae
imul
lahf
inc
ret
sarl
jp
mov
push
ret
test
sbb
cmpsl
mov
jecxz
push
sub
outsb
movsl
or
scas
jecxz
arpl
cli
pop
dec
shll
sti
cmp
cmp
push
cmp
bound
daa
test
movsb
inc
cvtps2pi
ja
pop
and
jo
adc
inc
imul
cmp
mov
cli
add
cltd
outsl
fsubp
lret
mov
add
mov
adc
mov
mov
push
sub
ss
mov
mov
mov
inc
shlb
js
push
cli
xchg
or
xchg
xor
pop
stos
sbb
fidivl
cli
jmp
or
fwait
stos
mov
daa
adc
sbb
fimuls
stos
int
movsb
dec
pop
mov
bnd
sahf
sub
test
cs
hlt
xchg
cmp
fdivrl
sbb
aas
and
sub
xchg
sub
fs
jae
cli
fcompl
jo
in
push
sbb
mov
insl
push
lds
int
clc
jge
sbb
or
loope
jb
jmp
or
imulb
lahf
sub
mov
sub
in
mov
scas
jne
cmp
pop
jnp
daa
pop
test
pop
adc
cmp
mov
ja
mov
add
gs
ljmp
nop
push
push
int
xchg
pop
dec
add
test
cltd
push
jge
scas
aas
jne
bound
pop
sbb
sub
or
sub
sbb
js
jae
mov
lea
pushf
ret
cmp
cmp
sub
add
es
arpl
jg
push
rclb
bound
rol
nop
ljmp
sahf
mov
or
aad
push
insb
sti
jle
int
test
jae
dec
ljmp
mov
mov
dec
push
xchg
cwtl
cmp
mov
push
loope
mov
sbb
mov
bound
or
jmp
pop
aaa
mov
fmulp
mov
sahf
stc
pop
mov
jecxz
fwait
stc
ljmp
je
and
add
add
or
repnz
fwait
or
and
xor
mov
jmp
icebp
inc
arpl
lock
ror
push
imul
cmpsl
pop
jmp
xor
in
outsb
dec
and
mov
sbb
loopnew
ds
bound
and
sbb
sahf
movsb
iret
jne
pop
jmp
lcall
or
sbb
aas
jno
xor
lods
repnz
jb
mov
popf
lahf
pop
dec
jmp
push
cmpsb
push
sete
mov
fcomps
test
nop
mov
add
xchg
push
pop
and
loopne
ds
int3
pop
jno
mov
pop
fsubrs
fcomi
lret
push
jmp
or
cs
pop
and
fwait
cmpsl
out
lock
ficompl
xor
jg
sub
pop
xor
call
cmp
jl
in
pop
mov
push
xor
outsb
pusha
jl
pusha
inc
out
xchg
ret
jle
sti
in
es
mov
adc
rorl
mov
sti
rcr
lock
add
data16
push
and
fbld
xchg
mov
pop
pop
aad
enter
sub
inc
iret
mov
adc
cmp
or
lds
push
cmc
or
std
jno
pop
icebp
addl
repnz
mov
jl
push
push
sbb
mov
jge
ljmp
imul
scas
xchg
dec
inc
fidivs
sub
mov
add
jns
shll
mov
pop
int3
ds
movd
pop
std
sbb
sub
xchg
clc
sub
in
repz
mov
or
fwait
jl
mov
mov
cmp
or
lret
adc
pop
in
or
push
arpl
repnz
loope
outsl
add
ljmp
bound
mov
sbb
or
in
inc
jns
xor
mov
xchg
jbe
aaa
push
mov
dec
int
adc
mov
mov
sub
pop
and
sbb
pop
sbb
or
jecxz
inc
mov
shl
sbb
xchg
jbe
lock
in
sarb
mov
stc
imul
mov
subl
cmp
pushf
inc
out
lret
dec
add
sbb
ficomps
iret
aas
jae
lock
dec
xchg
dec
cmp
jecxz
mov
aad
pop
and
inc
out
je
xor
xor
and
jle
cmp
daa
mov
outsb
aaa
imul
mov
aas
out
ss
ljmp
in
jg
pop
in
inc
stc
push
and
add
xor
outsb
or
hlt
xor
pop
jmp
out
outsl
test
movsl
pushf
sub
popl
mov
ljmp
xlat
or
out
shlb
inc
xor
cmp
sahf
outsl
pop
testw
jae
inc
fldcw
mov
pop
rcrb
iret
pop
sub
inc
test
data16
jp
rorl
dec
sub
stos
push
ds
or
lcall
xchg
in
inc
dec
int3
ljmp
out
pusha
ficompl
pop
mov
push
adcb
jno
mov
cmp
mov
mov
das
lea
mov
add
aam
mov
xchg
cld
mov
pop
lods
outsb
mov
sahf
insb
scas
jl
or
sbb
sub
cmp
int3
push
fcompl
in
cs
mov
pop
lods
outsb
mov
sahf
insb
scas
jl
or
sbb
sub
cmp
int3
push
fcompl
mov
fisubrs
pop
sahf
push
into
sbb
sub
or
push
fisubrl
cld
mov
pop
sub
cmp
mov
mov
leave
jnp
xchg
and
adc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
