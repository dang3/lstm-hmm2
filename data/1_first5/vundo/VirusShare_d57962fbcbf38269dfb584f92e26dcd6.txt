jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
int3
in
inc
jbe
stos
fdivl
pop
jae
aad
add
push
add
pop
add
push
add
das
add
xor
jae
mov
add
add
testl
and
jp
pop
add
add
inc
add
add
add
add
jge
int
adc
inc
add
sub
push
push
outsb
add
add
ja
dec
add
push
add
add
add
test
add
add
add
push
add
clc
add
cmp
xchg
add
mov
insl
add
add
jp
clc
add
js
cmp
jp
sub
add
push
add
add
add
add
add
add
iret
add
push
add
clc
add
insl
add
jp
push
popl
nop
add
dec
add
add
sub
xchg
add
mov
mov
push
add
jp
clc
add
mov
iret
add
jge
testl
fwait
add
add
sub
xchg
add
mov
cmp
add
sbb
clc
add
mov
add
popl
pop
add
jge
adc
in
mov
cmp
jp
sbb
push
add
add
add
xor
add
push
adc
add
add
add
jl
adc
add
add
add
jle
mov
xchg
xor
and
insl
add
push
add
add
add
push
mov
add
pop
add
add
add
adc
inc
add
cmp
ja
push
add
add
add
add
mov
add
add
add
push
add
add
and
push
add
push
add
add
add
add
xchg
add
and
fiaddl
mov
or
cmc
add
xchg
add
jge
pop
add
add
add
add
add
mov
add
add
add
add
sbb
jo
pop
add
iret
add
lock
jmp
dec
add
mov
jp
jp
and
or
testl
xlat
add
add
xchg
add
add
imul
jp
mov
adc
jnp
jnp
and
jp
pop
add
stc
add
mov
jp
jle
mov
add
jp
adc
out
and
insl
add
add
add
add
add
add
add
insl
add
add
push
add
add
add
jle
mov
add
add
jl
or
filds
pop
add
add
add
call
add
sub
add
nop
add
add
add
add
lret
add
push
add
add
add
add
add
jl
add
push
add
adc
add
or
add
xchg
es
add
xchg
add
push
add
add
add
mov
add
or
xchg
pop
add
add
pusha
add
add
ja
jl
test
add
add
add
addl
add
add
mov
addl
mov
aaa
add
add
add
add
add
dec
add
cmpsb
add
add
add
or
mov
add
addl
add
jp
jge
ja
inc
add
add
add
add
add
sub
mov
jge
jp
push
add
add
cmp
pop
add
add
push
add
add
fwait
add
add
sub
loope
insb
add
adc
add
add
add
jnp
loope
push
add
add
outsl
add
add
add
cltd
add
add
inc
add
sahf
mov
inc
xchg
dec
pop
fwait
push
sahf
mov
push
clc
mov
cmp
cmpsl
cmpsb
inc
std
popf
lods
aad
fadd
mov
fs
in
mov
pop
sbb
ss
js
and
jb
outsb
aam
in
mov
adc
popf
scas
inc
stos
enter
push
or
jae
fdivl
out
cmpsl
sti
dec
mov
out
fiaddl
data16
fwait
cmp
in
je,pn
ss
loope
dec
negb
pop
jae
or
popa
xor
pop
cltd
sbb
rorb
lret
add
mov
aaa
jnp
testl
mov
jecxz
xchg
nop
xchg
lea
std
mov
es
jmp
xchg
out
int
sbb
rorl
lret
outsb
cmpsl
sbb
leave
xchg
fdivrs
sbb
sub
mov
aad
jae
sbb
rclb
pop
push
test
lds
shrl
aam
data16
push
clc
lret
jmp
lea
repz
inc
push
xor
lods
fcompl
jbe
push
mov
popf
adc
xchg
jecxz
fimuls
loop
cmc
mov
fwait
es
popf
out
jl
jb
jnp
xchg
dec
lds
jl
aas
icebp
mov
int
dec
in
jmp
jmp
push
cli
cmpsl
pop
and
in
out
jle
out
scas
test
push
sub
push
sub
cmp
imul
cmpsb
push
fidivrl
bound
and
dec
jnp
pop
add
cmp
nopl
aas
cli
mov
es
push
test
sbb
aas
insl
or
lods
bound
cmpsl
imul
cwtl
call
das
dec
loope
adc
int3
scas
inc
dec
mov
and
sti
sbb
xor
or
daa
lea
insb
loopne
aam
aam
inc
stos
dec
sbb
sub
jecxz
loopne
mov
loope
mov
out
pop
sub
sub
repnz
jge
sti
pop
stos
iret
mov
sub
mov
lods
inc
cmp
pop
pop
sub
ss
dec
ja
pushfw
mov
sbb
push
and
add
or
les
adc
push
and
mov
ret
and
sub
mov
into
or
mov
jl
push
shl
xchg
hlt
mov
into
cli
pop
pop
mov
lret
mov
popa
les
daa
loope
and
aas
in
sub
test
dec
lret
fsubrs
fs
repnz
jl
pop
shlb
jb
cmp
cli
in
sbb
adc
in
dec
jge
sarl
xchg
sbb
insb
lds
sub
aad
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fistl
add
xor
and
push
stc
fs
mov
mov
push
sbb
or
cmp
sub
fistl
add
xor
and
push
mov
stos
add
dec
test
imul
sub
fistl
add
xor
and
push
mov
stos
fs
xchg
push
lret
fs
dec
xchg
inc
xchg
test
je
xchg
out
add
cmp
test
out
stos
out
pop
pop
dec
mov
or
and
pop
adc
fs
mov
inc
cld
push
out
cmpsb
test
jnp
dec
xchg
mov
les
lahf
insb
dec
cmpsb
mov
add
cld
out
jecxz
sbb
mov
scas
cmc
cmpsl
pop
xchg
pop
test
stos
pop
dec
sub
pop
jns
sub
cltd
lret
adc
push
sahf
inc
jl,pt
test
push
add
in
dec
and
sbbl
sti
sbb
adc
ret
stos
cmp
sbb
movsb
dec
xchg
aam
pushf
sub
dec
xor
cmp
jns
ss
stos
in
or
mov
pop
dec
lds
sbb
adc
add
xor
and
push
mov
stos
fs
xchg
dec
test
imul
sub
xchg
jne
gs
adc
xor
adc
popf
jnp
adc
sbb
insl
cmpl
pop
into
add
and
dec
ds
sbb
jns
imul
mov
push
push
xchg
pop
mov
push
lret
push
xchg
push
xchg
mov
stos
fs
xchg
dec
test
imul
sub
fistl
add
xor
and
push
mov
stos
fs
xchg
dec
test
imul
sub
fistl
sub
pop
stc
lea
xchg
fists
call
inc
mov
sarb
and
xor
repnz
pop
stc
testl
out
aas
test
aam
out
add
cmp
sbbl
xchg
test
pop
push
test
xor
add
test
pop
mov
jg
inc
adc
xchg
or
lret
mov
repz
sahf
xor
jae
add
call
add
pusha
jmp
out
sbb
das
fimull
shl
scas
push
or
shlb
push
andb
arpl
cmp
cmp
sbb
je
repnz
bswap
sub
inc
jno
inc
inc
fs
cmp
add
iret
arpl
cmp
or
or
fildl
dec
jmp
add
cmp
jle
push
mov
inc
into
and
std
jb
test
fildl
out
jnp
mov
mov
add
sub
push
xchg
jns
pop
dec
std
loopne
inc
insl
les
into
fbld
xchg
sub
inc
jb
jmp
dec
outsb
xor
or
aad
jge
xchg
insb
sbb
mov
mov
sbb
popa
divb
dec
lods
inc
adc
xorb
in
and
fstpl
xchg
xor
xor
insl
shll
push
xlat
add
cltd
xor
std
sub
jecxz
jge
and
jbe
js
lret
jp
inc
cwtl
addr16
mov
cmp
push
pop
ljmp
cmp
pusha
jle
pop
pop
rcrl
adc
or
fisttpl
jg
jp
pop
push
sub
imul
push
jmp
xor
push
psubsb
sbb
mov
mov
ret
jae
inc
push
sub
inc
add
and
ja
movsbl
push
and
jmp
jne
sub
fsubl
lds
mov
je
mov
lcall
mov
and
or
fmull
pop
shlb
test
lcall
rcr
jg
stos
jo
mov
mov
adc
loope
jbe
cltd
arpl
push
cmpsl
mov
inc
test
fstpt
or
jae
pop
aam
rcl
push
enter
cs
sarl
inc
cmp
fs
insl
jge
lods
cld
mov
push
icebp
insl
adc
mov
sub
lock
dec
inc
out
pop
adcb
pop
push
jge
stos
scas
sarb
imul
xorb
andl
pop
cmp
lahf
popa
xor
push
mov
jbe
mov
dec
cmp
jge
mov
shll
scas
scas
cli
sub
inc
andl
dec
sbb
daa
fldcw
xchg
popf
pop
sahf
aaa
and
ljmp
orb
shl
insb
mov
inc
in
in
leave
jle
push
dec
inc
inc
mov
or
add
clc
lahf
xor
mov
mov
dec
fildl
dec
sbb
mov
mov
ss
cmc
aam
mov
jnp
sbb
test
sbb
test
xchg
and
leave
jb
in
das
inc
dec
mov
loope
push
js
push
and
and
mov
andb
push
lcall
push
pop
jmp
adc
sbb
and
shll
insb
aas
adc
ret
adc
stos
cmp
inc
lret
adc
adc
pusha
push
leave
les
mov
out
or
push
sub
sbbb
addr16
xchg
jle
xor
lret
pop
sub
arpl
jecxz
adc
mov
and
cmp
xchg
popa
das
sub
sub
daa
pop
dec
jo
iret
dec
ljmp
mov
repnz
cmpsb
and
test
sbb
cmpsl
cmp
push
gs
and
jmp
mov
push
lea
mov
ss
adc
roll
or
sub
daa
inc
mov
ljmp
push
sub
subl
cmpsb
or
cmc
mov
hlt
mov
scas
or
jne
mov
repz
push
push
xchg
push
in
addr16
in
xchg
cmpsl
inc
lret
xor
sub
xor
inc
in
cli
loope
lcall
xor
fsubr
setg
or
mov
aam
sti
sub
pop
mov
dec
mov
jecxz
push
dec
mov
shlb
jle
push
mov
push
rclb
data16
fs
pop
cmc
xchg
add
ss
lods
mov
push
pop
inc
xchg
ss
mov
mov
in
notb
popa
into
push
mov
mov
fmull
int3
ss
add
or
cmpsl
test
xchg
lahf
jp
xlat
push
not
ret
hlt
imul
fstps
out
fimull
mov
out
shlb
and
fisubl
jnp
ficomps
fwait
mov
add
repz
lods
lret
hlt
fmul
lret
add
xchg
mov
arpl
mov
pop
cmp
pop
ja
popf
out
mov
test
iret
cmc
cli
mov
cwtl
push
add
pop
ror
sub
sub
nop
lods
cltd
and
cmpsb
sarb
outsl
scas
mov
pop
stc
mov
mov
lock
and
in
sbb
jb
or
jae
clc
dec
mov
fwait
add
xor
jge
push
pop
mov
add
add
dec
mov
push
mov
push
mov
fidivrl
inc
jno
jb
xchg
aas
pushf
ret
ljmp
dec
cmp
sbb
mov
stos
test
es
pop
roll
js
mov
xor
lcall
jb,pn
fiaddl
call
push
fisubrs
aad
sbb
adc
mov
aaa
push
shlb
insl
sub
mov
outsl
sarb
mov
sbb
adc
xchg
pop
jae
mov
xor
dec
negb
mov
out
or
mov
mov
cmp
cwtl
popa
jge
movsl
sub
mov
test
shlb
sbb
sbb
cmp
add
mov
shl
movsb
or
sbb
or
mov
or
ljmp
pop
xchg
push
push
xchg
fidivrs
repnz
ret
out
push
lea
inc
adc
data16
xlat
sbb
lret
cmp
adc
fistl
out
add
jns
test
scas
into
or
sar
xor
sub
fldcw
xor
pop
or
push
movsb
negb
ds
inc
dec
dec
lret
xor
ljmp
mov
insl
xchg
dec
mov
adc
decb
pusha
call
xchg
lock
cltd
mov
lods
add
or
push
dec
dec
or
pop
cmp
mov
or
aam
scas
push
loopne
cltd
shrb
jns
or
lahf
daa
lret
jmp
movsl
pop
or
xor
add
cmp
adc
scas
les
push
adc
jp
mov
mov
stc
sub
mov
aad
sub
jmp
dec
cmp
mov
push
enter
popf
je
dec
std
mov
pusha
mov
dec
sbb
movsb
movsl
jb
jo
and
jecxz
rcll
add
test
rorl
jl
or
and
hlt
push
inc
fdivl
mov
stos
mov
add
insb
or
push
jae
fwait
lcall
or
mov
cmovnp
mov
pop
xchg
cmp
repnz
mov
jnp
cs
addr16
loopne
xchg
aad
in
and
sub
fstps
pop
mov
fstl
pop
mov
xchg
test
mov
xorl
ret
popf
mov
dec
fstps
mov
div
ds
cld
lock
add
ret
cmpsb
ss
ret
mov
mov
test
repnz
push
cmp
xor
sbb
xchg
cli
stos
lcall
jns
xor
fwait
outsb
push
cli
jns
inc
push
fs
mov
dec
sar
dec
cmp
sbb
test
sub
popl
int
mov
aam
clc
inc
mov
rclb
sub
sub
or
mov
jns
mov
js
mov
jns
loope
test
ret
xchg
ja
out
and
adc
roll
mov
out
call
pop
push
lret
add
mov
mov
pop
pusha
insl
je
bnd
xor
cmova
pop
push
xchg
xchg
clc
addl
mov
test
daa
in
sbb
das
fidivl
pushf
xchg
cmpsl
dec
add
add
jl
repz
sub
xor
repz
fs
lock
nop
addr16
mov
sbb
dec
aam
nop
pop
add
mov
fs
cmpsl
cmp
push
jb
lahf
mov
js
xor
ljmp
ss
jns
inc
and
jae
hlt
shll
nop
push
sub
xor
add
mov
cmp
ret
jnp
jbe
popa
in
sti
dec
sub
xor
mov
aam
mov
mov
sbb
inc
stos
adc
and
mov
iret
mov
cli
imul
rclb
or
sub
mov
jbe
std
shlb
dec
cltd
das
bound
cmp
inc
pop
adc
dec
repnz
sub
xor
out
or
pop
out
jne
add
data16
xorl
push
fstpl
cmp
addb
inc
outsl
xchg
rcrl
idiv
sti
or
inc
fcmovnbe
lahf
lea
testb
sti
adc
inc
cmpsl
pusha
loop
and
test
jbe
arpl
gs
or
sbb
repz
mov
push
dec
mov
xor
daa
pop
test
call
rcl
jns
dec
scas
cld
out
sub
dec
mov
add
sub
ja
cld
nopl
jnp
cmp
jne
fwait
mov
pop
jle
or
push
pop
das
sub
cmp
jo
mov
popa
repnz
push
js
mov
xchg
mov
movsl
cmp
fadds
mov
insb
push
minps
inc
jp
sbb
cwtl
cmp
dec
xor
popa
nop
add
roll
rclb
lock
pop
ja
addr16
call
popl
mov
add
push
mov
fldt
stc
frstor
sti
mov
pslld
fwait
mov
sub
mov
ja
test
or
jg
push
or
sbb
imul
inc
jae
fidivs
push
jmp
inc
sub
sarb
mov
dec
orb
mov
aaa
pop
jg
in
push
xorl
mov
in
xchg
pushf
sub
xchg
or
or
cmp
adc
mov
and
test
add
cmp
xchg
rolb
shrb
inc
pop
scas
in
dec
jnp
scas
dec
jg
lea
iret
ljmp
push
dec
repnz
movsl
lea
sbb
dec
ret
pop
stc
nop
xor
and
cld
stos
enter
xor
or
push
add
lock
pop
cmp
jle
adc
xchg
lahf
push
push
mov
push
inc
inc
or
insb
jmp
sbb
das
lret
addr16
push
add
adc
loopne
push
push
outsl
inc
dec
mov
dec
rcrb
fbstp
out
cmc
mov
jae
adc
test
add
lret
sbb
rclb
paddusw
data16
inc
pop
xor
mov
pop
pop
imul
xor
in
xor
out
xor
mov
fbstp
inc
pop
add
lcall
xchg
cmp
jb
les
scas
in
cld
pop
mov
dec
scas
cwtl
nop
out
fidivl
loop
pop
sub
cmpsb
clc
inc
iret
add
clc
xor
sbb
or
pop
add
add
cmpsl
cs
cmpsb
cmc
fbld
mov
adc
data16
ljmp
pop
inc
push
adc
imul
daa
adc
mov
lret
out
dec
subl
push
fs
data16
fstpt
xor
movb
and
test
scas
adc
mov
inc
outsl
aad
test
shl
jno
repz
lods
xor
mov
mov
push
outsl
inc
xor
leave
push
sbb
and
xor
mov
stos
or
and
xor
pushf
inc
xor
in
insl
inc
clc
ljmp
mov
jp
sbb
push
ljmp
jg
inc
or
cmp
lret
mov
repz
ficoms
mov
aad
jecxz
xor
imul
push
inc
inc
shrb
stos
sub
dec
shll
xchg
pop
xor
sub
subl
cwtl
dec
outsb
fstp
dec
mov
mov
int
aaa
test
sbb
test
or
into
shl
xchg
xor
pushf
xlat
sub
dec
dec
inc
pop
cmp
pop
stos
mov
je
bound
xchg
and
pmaxsw
dec
scas
xor
add
adc
jge
or
fmulp
or
and
mov
mov
sub
sub
pop
out
or
fadd
js
repz
imul
fsubs
sarl
js
mov
cltd
jbe
inc
imul
lods
stc
aad
loopne
fiadds
imul
add
stc
adc
into
cmp
add
fimuls
push
mov
mov
cs
push
sbb
xchg
gs
mov
push
adc
or
mov
adcl
inc
sbb
imulb
dec
enter
mov
hlt
sub
sub
out
sbb
xchg
cmp
fimuls
sub
das
ss
push
jp
jmp
leave
add
movsb
mov
in
orb
lcall
call
mov
ljmp
ds
movsb
fdivrl
imul
or
push
jmp
push
xor
mov
push
pop
rcrb
mov
xchg
faddp
xchg
jae
daa
cli
push
sti
in
xlat
push
rcl
pusha
mov
in
xor
and
sbb
jecxz
xor
out
add
pop
xorb
ds
push
jl
mov
pop
adc
hlt
int
cmp
aad
sbb
mov
cli
cmp
shrl
adc
sbb
xchg
movsl
lds
rclb
mov
fnsave
or
or
adc
push
add
push
xchg
or
add
fcoms
inc
push
xchg
mov
icebp
mov
xor
ret
sahf
cmp
fxtract
test
push
movsl
and
pop
adc
int
mov
loopne
xor
pop
xor
inc
std
xchg
nop
adc
and
dec
xchg
movsb
ds
mov
test
sahf
mov
cmp
adc
xchg
dec
cmc
or
add
inc
push
pop
sbb
cmp
sub
push
and
shrb
cmp
test
push
lahf
add
lcall
or
std
sti
in
and
cmpsb
data16
mov
add
sbb
push
push
fwait
rclb
dec
outsb
inc
stc
push
jbe
sbb
subb
pushf
mov
pop
into
addr16
outsb
lea
mov
outsl
loope
sub
shlb
mov
pop
rol
stos
xchg
jb
lahf
sbb
test
jl
fdivl
cmpsl
and
inc
jl
lret
outsl
add
rclb
lcall
lcall
fs
and
cmp
movsl
jmp
sbb
addb
push
mov
popf
data16
inc
mov
fdivrl
lret
push
stos
loope
fcompl
shll
adc
sbb
xchg
cld
in
mov
popf
adc
xor
enter
add
scas
jns
xchg
jge
inc
or
call
xchg
mov
icebp
sbb
bound
icebp
jno,pt
inc
test
push
nop
pop
jo
test
fcomi
mov
lret
addb
dec
lods
fs
push
mov
add
push
or
pop
push
sub
idiv
push
rcrb
dec
pop
mov
sbb
mov
andl
mov
inc
aam
icebp
ret
sahf
fs
mov
stc
notl
sbb
mov
lea
or
or
stc
dec
pmullw
mov
js
lret
dec
sbb
cmpsl
scas
lret
fcmove
dec
push
aas
jns
stc
adc
test
mov
push
mov
xor
cmc
jmp
cmp
repz
inc
popa
mov
fisubs
in
cmp
push
lret
fisubl
mov
mov
push
mov
sbb
xor
jmp
hlt
lret
push
push
or
cmpl
jnp
cmpsb
in
cmp
lcall
xchg
or
orl
xchg
inc
insl
mov
jmp
mov
shrb
add
inc
aam
subl
jge
mov
scas
adc
pop
push
insl
frstor
fiaddl
push
sbb
das
mov
imul
push
push
fildl
pushf
push
mov
sar
pop
dec
jnp
scas
outsb
scas
in
sbb
sbb
stc
popa
ret
push
out
xor
push
int3
inc
push
add
xchg
inc
xlat
movsb
stos
sbb
addl
or
lods
ja
lods
xor
ds
and
mov
aam
movsb
or
xlat
jb
sbb
add
gs
jnp
jl
sbb
mov
arpl
dec
jg
mov
imul
push
push
or
jcxz
mov
push
inc
add
out
adc
and
movsb
in
dec
dec
jo
inc
inc
jg
mov
fmull
rclb
add
jns
sub
sbb
addr16
jle
sarb
xchg
mov
mov
hlt
xchg
sub
cli
fsts
push
and
adc
push
lock
hlt
movsb
mov
lods
lock
out
shlb
cltd
mov
push
cld
inc
cwtl
gs
mov
xor
sbb
dec
daa
cbtw
jbe
loop
pop
dec
test
xchg
pusha
mov
fidivl
stc
push
dec
ja
mov
lods
xchg
fiaddl
mov
and
fs
push
pop
mov
mov
outsb
pop
dec
and
bnd
xor
in
js
add
push
in
cmp
pop
cmp
leave
xchg
popa
jmp
addr16
mov
sub
push
cwtl
xchg
or
and
test
fsubr
fs
mov
into
lret
cld
int
adc
sbb
in
and
mov
mov
icebp
mov
inc
jp
cmc
fwait
jne
test
mov
hlt
gs
sbb
ret
pop
loope
cmp
sti
xchg
sbb
xchg
out
pushf
or
push
cmp
popf
xor
shlb
popa
add
and
adc
iret
lods
inc
sub
mov
dec
adc
xchg
out
push
mov
clc
adc
popf
xchg
fsubp
push
roll
mov
clc
rcrl
stos
cmpsb
sbb
pop
sub
pushf
sub
lods
or
mov
movl
loop
mov
jbe
adc
or
fiadds
adc
jne
addb
dec
push
movsl
sub
loop
sub
jp
rclb
lret
lret
sti
dec
or
fsubrl
insl
cmp
stc
ds
jp
js
add
out
sbb
repnz
idivl
repz
dec
jbe
mov
out
push
lcall
subb
mov
pop
jecxz
daa
sbb
cmp
fistpll
or
stos
inc
pop
lret
inc
stos
cmp
xchg
or
icebp
cmc
popl
pop
bound
cmp
mov
mov
jns
das
cmp
jecxz
pop
inc
cmpsb
mov
inc
loopne
or
mov
ljmp
jne
cmpl
xchg
inc
je
push
jno
shll
lahf
fnstsw
lds
mov
fs
push
xchg
pop
xchg
inc
xchg
xor
loopne
bound
mov
icebp
mov
mov
jg
cld
cmp
stos
movntq
imul
shll
insl
mov
test
pop
or
and
mov
xor
lret
xor
fimuls
fistl
xor
insl
xorb
adc
sbb
inc
push
ljmp
dec
addr16
xlat
inc
xor
jecxz
xor
incb
cmc
jbe
pop
fld
mov
sahf
ja
fsubl
mov
popf
cmpsb
bound
lret
inc
jmp
add
popf
clc
test
cwtl
add
insb
mov
outsb
and
cmp
jnp
sub
mov
cltd
outsb
mov
xor
ror
test
adc
enter
push
mov
decl
clc
hlt
rolb
dec
cwtl
lock
push
cmp
cmc
idivb
push
xor
sbb
js
movsb
mov
ret
mov
mov
and
jbe
bound
and
mov
mov
mov
add
cmpsb
jbe
add
xor
and
push
mov
stos
fs
xchg
dec
test
imul
sub
fistl
add
xor
and
push
mov
stos
fs
xchg
dec
test
imul
sub
fistl
add
xor
and
push
mov
sub
dec
test
imul
sub
fistl
add
xor
and
push
mov
stos
movsb
pop
xchg
dec
shll
cmp
pop
sbb
sbb
or
cmp
sub
adc
insb
dec
rorb
mov
mov
dec
int3
jle
outsb
in
xchg
sbb
or
cmp
sub
pop
into
dec
jl
adc
pushf
push
mov
mov
sub
jle
outsb
in
inc
sbb
or
cmp
sub
pop
xchg
push
insb
push
pushf
bound
jle
adc
fildll
inc
cli
push
fldcw
imul
out
jg
stc
xor
aam
cltd
or
cmp
mov
dec
flds
pop
xor
aad
push
lcall
enter
add
into
sbb
add
push
mov
cmp
icebp
add
in
cld
mov
jns
push
fistpl
sub
adc
jnp
pushl
dec
call
in
xchg
or
jae
cmp
dec
rcr
dec
xor
xchg
in
sbb
pop
inc
insb
outsb
mov
mov
arpl
roll
lods
dec
int3
cs
sbb
sbb
or
test
pop
sub
neg
aas
inc
cs
cmp
jle
lods
sbb
or
cmp
sub
pop
mov
push
insb
in
pushf
pushf
mov
mov
push
int3
jle
or
cli
cmp
sub
cmp
cmp
dec
lea
dec
fdivs
lahf
and
sahf
jns
imul
xor
or
xlat
dec
cmc
pop
out
inc
leave
sub
stos
das
sub
mov
dec
fwait
jb
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
fs
shl
out
xchg
sub
rcr
test
mov
sbb
jns
enter
dec
dec
cltd
xor
lods
popf
push
jno
or
sti
subb
mov
rcl
into
jg
outsl
push
popa
sbbl
xlat
aam
xor
ja
mov
xchg
lock
xor
mov
jge
daa
ss
pop
clc
js
push
pop
and
cmp
mov
mov
mov
sub
xchg
cmpsb
sahf
jmp
lods
cmpsl
sub
inc
outsb
mov
lahf
or
jmp
jmp
enter
lret
inc
xor
xchg
fildl
xorb
fistpl
cltd
adc
jp
and
mov
and
xor
fwait
mov
daa
rolb
and
push
inc
cwtl
jmp
add
cmp
and
inc
jmp
rcrb
ret
cmp
pop
repnz
repz
iret
inc
jbe
mov
mov
das
jae
jns
sub
cltd
or
arpl
cltd
jmp
dec
inc
in
aas
xlat
sbb
push
and
sub
js
adc
ljmp
dec
mov
mov
mov
shrb
inc
push
fistl
inc
out
std
ljmp
and
call
or
sti
and
sbb
sarb
cmpsb
lock
pop
jo
adc
sub
mov
roll
dec
mov
loopne
xor
xor
xchg
je
aad
es
repz
cltd
psrad
and
pop
push
mov
int3
mov
pop
sbb
arpl
fistpl
xor
fs
cmp
sub
lret
push
cli
xlat
scas
xchg
sub
jmp
fs
sbb
fwait
int
aas
outsb
ss
lods
sbb
arpl
and
lcall
or
out
movsb
pop
cmpsb
mov
std
dec
xchg
pushf
fdivs
push
push
xchg
andl
lret
cmc
and
cld
stc
inc
pop
or
mov
mov
push
ljmp
int3
and
jmp
push
test
fcmovbe
jns
push
jmp
sbb
fwait
adc
mov
pop
mov
sbbb
pop
xchg
test
fwait
pop
jnp,pn
mov
es
pop
inc
or
mov
and
inc
shll
imul
mov
movsb
imul
push
lahf
push
jle
insl
cmp
mov
loopne
jo
inc
push
add
and
stc
adc
js
inc
xchg
mov
cwtl
out
sub
push
push
sub
dec
mov
sar
mov
and
jae
dec
out
mov
pop
out
cmpsl
pop
push
jne
jp
jns
ror
leave
xchg
pop
xorb
xor
push
jle
gs
add
cwtl
sbb
xor
sahf
std
es
testl
stos
in
rcl
jno
xchg
std
ja
aaa
pop
insl
mov
bound
cmp
xchg
push
mov
pusha
insb
xchg
movsl
jl
fiadds
jecxz,pn
fwait
dec
cmp
and
lods
sbb
pop
mov
lea
cmpsl
fsts
in
in
adc
sbb
clc
out
add
and
push
and
jbe
out
cmc
fs
mov
outsl
and
loopne
mov
in
lcall
rorb
mov
orb
or
fistpll
lods
mov
arpl
mov
mov
jle
leave
sahf
inc
movsl
jbe
je
push
popa
popa
and
scas
push
push
jns
repz
fisttpll
into
sub
jns
or
int
jne
mov
rclb
push
mov
fs
sbbl
jne
jmp
ret
lahf
in
dec
out
add
dec
das
cmp
jle
inc
inc
aad
pop
je
xchg
mov
test
andb
jae
pop
jne
cmp
lods
adc
push
out
std
xchg
fists
sbb
add
stos
fcmovu
mov
push
subb
fcos
and
cmp
stos
stos
fcmove
loopne
bound
je
arpl
mov
outsl
out
dec
pop
jb
mov
iret
std
jnp
pop
fs
xor
push
or
adc
inc
xchg
or
test
xchg
push
loop
xchg
icebp
or
pushw
jl
cmp
repnz
enter
cmpsl
and
and
call
pop
in
xor
stos
xchg
jno
arpl
icebp
or
lea
mov
into
fndisi(8087
bound
mov
sub
scas
dec
cmpsl
add
mov
jecxz
cmpsl
cmp
lcall
xor
cmp
icebp
inc
ljmp
dec
or
inc
test
adc
xchg
les
rcrb
push
hlt
push
scas
aaa
mov
fs
clc
lahf
mov
dec
je
jae
xchg
push
outsb
mov
out
adc
cmp
jne
in
xor
sub
mov
enter
mov
out
subb
divl
sub
sti
dec
cmpsl
inc
lcall
mov
mov
inc
test
aas
jnp
push
mov
pop
iret
sub
xchg
push
add
jp
xor
and
int
mov
jbe
adc
mov
pop
cmp
xlat
fdivl
aaa
sahf
add
daa
lea
fucomi
insb
cs
mov
lcall
add
clc
xchg
xchg
and
xchg
nop
push
mov
stos
push
sbb
cli
pop
and
jmp
inc
and
pop
shrb
stos
mov
sbb
ja
out
dec
sbb
push
cmpsb
or
popa
cmp
add
push
aaa
pop
xchg
imull
jge
mov
xchg
clc
fcoms
mov
test
push
inc
addr16
add
xchg
ljmp
xorl
adc
and
test
pop
cmp
or
in
or
jg
cs
test
mov
cmc
iret
dec
aas
xchg
xchg
imul
ja
gs
lcall
mov
fprem
adc
pop
adc
push
sbb
xchg
mov
daa
in
inc
mov
jne
dec
aaa
enter
adc
push
push
fs
gs
in
or
addr16
rclb
sbb
xor
jne
mov
push
aas
inc
rorb
fwait
pop
and
dec
xorl
cmp
push
push
xchg
add
aam
loopne
leave
adc
push
sbb
rcrb
daa
mov
lret
mov
and
xchg
mov
mov
fwait
inc
cmp
pop
pushf
icebp
xlat
call
out
ret
rorl
jp
sti
and
pop
fldenv
mov
fildll
xor
jl
adc
and
rorb
in
lock
rorb
repnz
add
adc
call
vpunpcklwd
movsl
aad
fwait
jne
xchg
push
dec
adc
sub
adc
out
pusha
push
lcall
mov
mov
xorb
rolb
xlat
add
lods
cmp
inc
xchg
xchg
xor
mov
cmp
addr16
mov
in
mov
popa
push
mov
shrb
in
sarb
leave
sub
dec
outsl
je
testb
ret
or
jle
into
imul
lds
fsubl
rol
aam
cmpsb
pop
jne
jne
mov
dec
nop
sbb
mov
stos
fsubrp
shlb
out
lock
and
xor
test
shrl
out
adc
notb
sbb
ss
lods
ja
loopne
in
mov
in
sub
popa
sti
jmp
fldt
or
pop
sbb
jl
mov
mov
mov
pop
mov
sbb
sub
xchg
cmpsl
or
add
lret
into
nop
inc
inc
lods
outsl
dec
xor
aas
std
pop
movsb
les
mov
inc
clc
xchg
iret
jae
stc
fidivs
mov
test
adc
negl
sbb
fwait
cmpsb
jge
mov
adc
inc
hlt
pop
loop
mov
and
lret
xchg
sarb
xchg
and
cltd
cmp
icebp
ds
sub
dec
mov
imulb
sbb
push
sbb
inc
xchg
jg
aam
ret
sbb
scas
jns
ja
xchg
mov
xlat
jmp
xchg
xchg
mov
lods
imul
xorb
or
lea
roll
sub
std
lret
dec
xor
cmp
xorb
dec
jno
mov
jmp
punpckhdq
push
pop
and
pop
jl
insb
sub
push
shlb
mov
or
xor
xor
out
rol
aaa
cmp
int
mov
enter
add
out
nop
std
in
leave
pop
mov
imul
or
cld
testb
push
dec
inc
fmuls
test
repnz
cmpsl
mov
lods
cmp
aaa
xlat
pop
mov
dec
rorb
test
mov
mov
mov
andl
mov
lods
fcoml
push
roll
repnz
sahf
call
adc
xchg
push
sbb
rcll
fsubrs
iret
jl
in
xchg
jbe
pop
movsl
imul
add
push
or
fistps
pop
rcrb
and
stc
sti
pop
sub
sub
into
test
xchg
sbb
push
outsb
call
mov
and
push
jb
mov
sub
outsb
dec
mov
aas
and
push
sbb
clc
mov
inc
js
push
and
imul
out
push
jl
sbb
sub
pushf
mov
loope
cmp
cmp
xor
loopne
int
movsl
dec
or
or
lock
jp
int3
data16
loope
scas
rcr
push
dec
sub
lds
imul
insb
cwtl
dec
mov
cwtl
xor
dec
xchg
inc
paddw
xchg
dec
cmp
push
rolb
push
xchg
mov
pop
mov
cmpsl
dec
in
fwait
jge
fisubs
or
out
rol
xchg
addr16
and
push
mov
pop
xchg
xchg
inc
push
out
insl
jne
or
and
adc
je
and
xchg
cmc
cmc
xchg
inc
movsl
mov
stos
lods
mov
mov
jo
cmp
jle
pop
pop
sbb
ss
sbb
repnz
lods
sar
cmp
int
add
mov
xchg
dec
push
in
cli
scas
pop
cmp
dec
xlat
mov
push
dec
imul
sbb
test
shr
xlat
clc
cmp
lds
insb
push
out
stos
pop
jg
and
jae
ljmp
sbb
sub
and
lcall
xor
adc
xor
push
icebp
xchg
mov
bound
dec
je
aaa
xchg
frstor
imul
jns
out
cmp
imul
xchg
xchg
xor
jecxz
xchg
lock
lods
fs
negl
stos
int3
jbe
jp
iret
xor
ret
and
cmpsb
fsubr
jle
pop
int3
hlt
out
and
fidivl
mov
stos
or
push
and
or
cli
xor
stos
xchg
dec
adc
orl
adc
dec
sbb
fmuls
fcomip
inc
ja
inc
fwait
daa
xchg
aas
mov
pop
mov
push
add
cmp
in
outsl
loope
ret
mov
and
sbb
pop
lret
test
ja
mov
xor
sahf
loopne
movsl
ss
inc
inc
xchg
jg
sub
xchg
push
int
dec
popf
xor
aas
clc
xchg
test
push
or
xchg
es
movsb
in
icebp
lcall
jne
shl
jbe
mov
andl
sub
and
xchg
pushf
test
rolb
sti
add
sbb
hlt
mov
sbb
adc
mov
inc
cmp
out
pop
add
inc
shlb
jmp
xchg
mov
jl
pop
and
lods
rclb
mov
test
sbb
sub
cmpsl
cli
clc
testl
push
mov
inc
loop
add
fistps
xor
xchg
nop
or
sub
out
sarl
ljmp
mov
inc
sti
jp
je
xor
mov
shll
into
pop
push
pop
stos
lret
xchg
dec
negl
testl
pop
dec
int
ficoml
call
pop
outsb
mov
jno
pop
insb
shr
mov
arpl
dec
jle
push
xchg
pusha
adc
add
mov
push
pop
dec
sbb
sbb
jp
push
lods
mov
dec
xchg
sub
and
push
neg
lods
movsl
sarl
icebp
sarl
scas
lret
ret
xchg
and
aam
clc
mov
mov
dec
and
dec
clc
decl
lahf
inc
rcl
add
aaa
and
or
pop
sti
rcrb
popa
mov
push
inc
pop
test
arpl
lret
pop
divb
popf
add
std
dec
adc
pop
arpl
dec
push
push
and
fnstenv
push
out
cmp
jno
test
pop
mov
dec
sub
arpl
pop
and
dec
inc
iret
adc
ja
lods
and
icebp
cmp
pop
xchg
in
fxch
das
lret
cmp
mov
sbb
adc
and
inc
add
jb
in
push
push
or
mov
addr16
ret
pop
add
cmpsl
inc
stos
scas
and
test
addl
in
lret
cltd
sti
pusha
outsb
icebp
mov
jge
and
fwait
out
bound
je
test
int3
hlt
cmp
ret
fs
add
insl
jnp
xlat
negl
icebp
sub
rcl
xlat
gs
push
pop
iret
xchg
xor
ljmp
pop
insb
add
mov
lea
fnstenv
add
test
cmp
andl
jae
es
sti
pop
or
andl
add
mov
or
inc
mov
shlb
scas
int3
dec
or
icebp
rcl
orl
test
add
orb
mov
in
outsl
fwait
mov
pop
repz
test
xchg
cmp
aad
mov
cmp
testb
push
pop
clc
add
test
pop
addr16
scas
push
jno
pop
pop
mov
dec
or
bnd
fcomi
dec
jge
dec
jne
xor
mov
and
jmp
jo
inc
mov
lahf
mov
cmp
mov
mov
mov
adc
js
push
mov
pop
fdiv
or
add
popf
in
dec
lret
add
shlb
or
jae
cld
in
fs
pushf
and
sbb
and
icebp
je
sti
fimuls
out
das
in
pop
daa
xchg
out
pop
repz
in
ret
jno
push
pusha
jecxz
jmp
popf
cltd
hlt
xchg
sbb
push
push
and
testl
movsb
push
repz
xchg
push
pop
rcrb
cs
adc
mov
or
jmp
add
mov
pop
and
push
jl
adc
pop
xchg
push
ljmp
dec
clc
add
fcomi
jle
jnp
pop
jge
jecxz
imull
and
dec
imul
out
mov
push
cmp
xor
inc
hlt
jge
jecxz
mov
leave
movsl
cltd
lcall
das
movl
fldcw
add
adc
sub
flds
mov
jbe
adc
cmp
sahf
mov
xchg
std
cli
inc
adc
dec
pop
push
pop
adc
push
mov
adc
js
jne
pop
out
loopne
loop
jbe
jmp
jmp
pop
sbb
mov
dec
mov
leave
inc
adc
pop
dec
or
popa
mov
int3
rep
pop
cwtl
mov
or
lahf
xor
push
out
push
xchg
and
adc
pop
outsl
sub
cmp
call
mov
xor
dec
pop
dec
jae
loop
dec
test
pop
adc
iret
stos
outsl
inc
nop
mov
sbb
int3
ljmp
enter
xchg
das
stc
sbbl
outsl
shll
in
in
jne
mov
add
out
mov
imul
push
xor
mov
in
mulb
gs
mov
add
xor
push
jo
mov
mov
pop
dec
xor
jno
dec
sbb
jmp
lds
sti
out
sbb
mov
adc
mov
dec
hlt
out
fisubrl
and
fwait
sti
sahf
out
add
fdivs
vphaddubq
inc
shrb
test
lcall
cmp
mov
loope
adc
daa
popf
test
das
inc
xchg
popf
push
add
call
mov
sbb
rcl
popf
pop
jl
push
sub
jbe
into
xchg
dec
mov
dec
lea
test
adc
hlt
xchg
xor
in
mov
hlt
lock
scas
xor
inc
js
xor
dec
sahf
xchg
xchg
outsl
setle
xchg
jle
dec
jno
cli
fidivrl
test
pop
or
sbb
scas
inc
mov
pop
loop
fcompl
sbb
ss
leave
cmp
jo
push
sub
flds
lock
jmp
sbb
adc
add
aaa
xchg
jae
and
xorl
mov
int
cmc
rcrb
jmp
mov
lcall
sub
mov
cmp
lahf
fisubrs
xchg
mov
mov
insl
pop
push
iret
jo
cmp
les
ss
pop
mov
lock
xchg
push
arpl
mov
std
jb
and
mov
jbe
inc
in
lock
rcrl
and
call
jl
rcrb
sub
mov
cmpsb
pop
outsb
mov
popa
es
mov
xchg
add
xchg
inc
jp
mov
sub
cmp
xchg
cmpb
ljmp
lds
jns
insb
or
in
lret
fdivrl
jge
iret
jmp
push
ds
xorl
div
sbb
jl
test
rolw
idivl
adc
pop
fsubs
add
into
popf
ds
add
and
and
dec
cld
rol
scas
mov
lods
fcompl
imul
pusha
call
pop
mov
or
push
pop
push
in
push
movsb
into
js
mov
xlat
xchg
aas
inc
je
adc
push
jmp
and
lods
dec
sub
lret
data16
sbb
mov
lret
pop
xchg
dec
adc
scas
jno
ret
mov
movsb
fcompl
lahf
lods
mov
out
jo
add
lods
adc
inc
ljmp
sub
outsb
xlat
xchg
jp
xchg
xor
cmp
out
or
stos
lret
mov
push
ljmp
push
jp
lret
sbb
mov
dec
pop
add
push
sti
xchg
xchg
leave
sbb
lods
inc
jp
jo
out
dec
dec
sbbb
mov
jl
movsl
adc
lds
and
adc
jo,pt
push
xor
aas
mov
adc
movsb
pop
test
xchg
or
push
je
shll
dec
pop
je
sbb
mov
out
hlt
inc
fwait
add
clc
adc
sahf
addr16
push
lds
cli
xchg
jbe
lds
mov
lahf
dec
mov
add
xchg
fldcw
loope
jge
sub
cmpsl
aas
sbb
inc
add
shl
mov
xchg
loopne
or
stos
pushf
mov
aad
pop
mov
fbstp
pop
and
add
cli
mov
and
mov
nop
repz
dec
dec
iret
xor
push
sbb
js
test
rolb
aam
or
mov
fildll
pop
sub
push
sbbb
jge
mov
mov
dec
and
mov
sub
xlat
mov
gs
xchg
push
fld
inc
mov
imul
inc
add
push
in
mov
dec
pop
cmp
add
in
inc
jecxz
test
lods
imul
mov
lahf
lods
push
shll
cmp
or
cmp
addr16
es
repnz
jge
cmp
jp
scas
adcb
std
xor
and
xchg
movsb
shrl
test
xchg
cmpsb
push
mov
lods
adc
jo
and
fwait
sub
pop
loope
int3
push
loopne
mov
dec
lods
nop
pop
repz
int3
xorb
pop
aas
pop
cmp
lods
dec
cmp
test
stc
lea
stc
jmp
imulb
imul
adc
inc
inc
js
fcmovne
ds
into
xchg
jecxz
inc
xchg
cmp
ds
je
lods
xchg
adc
aam
jp
pop
mov
mov
lahf
or
pop
mov
pop
movsl
or
out
push
cmp
cld
mov
mov
test
cmp
lahf
mov
lods
pushf
mov
push
push
jge
movsl
mov
orl
push
daa
mov
or
in
test
mov
push
sub
add
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
lret
jl
insb
sbb
lods
pop
fcoml
jp
pop
in
xchg
or
cmp
sub
pop
fimuls
outsb
insb
push
pushf
icebp
es
mov
xor
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
loopne
pcmpgtd
jbe
or
and
push
outsl
lahf
and
imulb
cmpsb
out
mov
inc
pop
push
pcmpgtd
jbe
push
pop
push
dec
es
outsl
popf
xchg
lahf
imulb
cmpsb
pushl
pcmpgtd
jbe
push
inc
push
push
es
jl
mov
lret
out
sahf
cmc
mov
nopl
adc
mov
xchg
lods
loope
scas
add
or
cs
xchg
sub
divb
mov
shrl
xchg
mov
cmc
shl
pop
clc
imul
pop
sbbl
loopne
mov
or
dec
pop
or
add
mov
sub
iret
pop
iret
ret
add
add
movups
negl
push
jg
fsubs
pop
nop
iret
jo
pop
rclb
mov
xor
daa
and
or
dec
iret
mov
das
aaa
outsb
adc
idiv
jg
or
mov
out
and
xchg
in
xlat
scas
flds
loop
sahf
mov
mov
cmpsb
add
lcall
pop
push
sbb
jbe
push
pop
push
dec
es
xchg
xchg
out
divb
cmpsb
pushl
lsl
adc
push
pop
and
ja
xchg
shl
test
lcall
jmp
addb
dec
adc
inc
sub
jge
sbb
add
lret
mov
jecxz
ret
xchg
mov
das
pop
xor
pop
ja
push
xor
dec
es
outsl
lahf
out
imulb
cmpsb
pushl
pcmpgtd
jbe
push
pop
push
dec
es
outsl
lahf
out
imulb
cmpsb
pushl
mov
push
push
cmp
bound
and
cs
hlt
lods
fsubs
inc
mov
je
outsb
mov
mov
test
mov
jl
int3
js
loopne
add
pop
and
xor
xchg
sahf
mov
sbb
adc
cli
mov
adc
pop
push
aaa
sbb
xchg
fisttps
jecxz
shl
xor
dec
xor
jg
stos
mulb
inc
jg
mov
mov
adc
inc
mov
xchg
rcll
jmp
adc
jo
xchg
dec
push
xor
les
dec
or
scas
mov
pop
adc
mov
mov
divb
cld
jl
test
jae
rdtsc
hlt
xorb
and
out
test
push
jbe
jecxz
js
out
das
pop
cmp
cld
sbb
xor
gs
push
test
cmp
cmp
lods
push
push
dec
popf
das
lret
lret
dec
mov
lods
enter
pop
dec
ficompl
cli
jns
push
test
loop
or
push
inc
inc
in
and
add
mov
or
lcall
cs
dec
dec
mov
repnz
dec
and
lret
cmp
nop
loop
xchg
pop
hlt
adc
sbb
cmpl
idivb
dec
shl
inc
daa
push
sbb
push
adc
out
push
jle
ret
lds
out
mov
cmc
inc
xchg
mov
dec
cmc
pop
data16
add
cltd
cwtl
stc
jnp
push
out
add
ret
push
fists
frstor
pop
testb
out
fs
push
xchg
out
arpl
clc
sbb
enter
mov
adc
in
pop
fidivs
faddp
shll
pop
mov
or
in
lahf
pusha
add
sub
mov
pop
pop
addl
das
pop
mov
xor
test
inc
cmpsl
les
loope
cmc
xchg
mov
pushf
loop
stos
sub
pop
cmp
xor
jle
add
rorb
add
mov
mov
mov
aam
add
imul
aad
dec
pop
scas
lds
mov
inc
xor
test
sub
pop
aad
cwtl
cltd
stos
bound
mov
push
fisttps
mov
cmpsb
sbb
dec
jo
in
lock
rorl
mov
mov
mov
jne
cmp
inc
loop
jmp
jns
jmp
lcall
inc
xchg
xchg
test
xchg
xor
pop
push
jg
xor
or
adc
fsubs
add
fnstenv
aad
xchg
or
lcall
addl
test
sbb
push
subb
pop
xchg
into
push
sub
and
mov
or
sbb
clc
mov
mov
fs
imul
pop
ljmp
pop
aad
pop
lret
sub
mov
sbb
jge
mov
ficoml
popf
adc
in
lods
xchg
jo
outsl
jl
andb
adc
inc
and
fidivl
mov
fistpl
xor
xor
sbb
adc
rorb
clc
push
push
mov
and
mov
jp
test
int
fdivrl
stos
jnp
push
fldcw
imul
mull
out
pop
jp
xor
jno
push
les
adcb
sbb
cmp
idivl
mov
incl
out
iret
mov
adc
mov
xchg
add
push
adc
or
cli
jecxz
pop
lds
xor
jne
push
inc
push
ja,pt
sub
mov
add
insb
dec
fwait
push
mov
subb
cltd
cmp
pop
cmp
lock
int3
fwait
aad
jo,pt
jnp
jb
out
lods
jle
insl
mov
sbb
repnz
stos
call
test
lret
aad
aam
cmc
sbb
stos
pop
lea
aad
into
push
mov
fwait
int
jp
ret
sbb
in
aam
cmp
inc
sub
xchg
jmp
xor
sub
bound
xor
scas
mov
inc
jmp
gs
popa
cmp
xchg
lea
xor
pop
mov
dec
test
les
fstpt
and
dec
mov
mov
inc
je
daa
imul
fdiv
mov
mov
cmp
out
push
fidivs
icebp
xchg
push
repz
mov
mov
push
pop
das
mov
push
mov
xor
xchg
dec
js
cmpsb
mov
iret
mov
mov
or
mov
dec
add
and
sub
mov
sbb
sub
push
subl
jge
arpl
ret
and
adc
or
pop
pushf
out
add
jmp
push
pop
jecxz
shrl
dec
test
sbb
dec
xor
adc
in
xor
or
mov
enter
fs
movsb
stc
mov
ja
stos
or
cmc
inc
push
shrb
lods
pusha
xor
mov
add
test
inc
or
imul
call
pushf
adc
repnz
adc
popa
stc
cwtl
fwait
or
into
mov
sarl
or
cmpsl
out
pusha
mov
repz
mov
hlt
lea
scas
rorb
ss
fs
xchg
test
push
and
push
adc
cmp
inc
xchg
xchg
mov
addb
sub
fxch
xlat
orb
std
cmpsl
out
cld
jnp
int3
dec
mov
push
pop
or
loope
arpl
inc
jmp
sbb
icebp
inc
sbb
push
mov
sbbl
mov
insb
cmp
fpatan
mov
lret
sub
popa
inc
and
outsl
arpl
aad
flds
inc
fistpll
cs
ds
out
dec
pop
mov
stos
lret
push
fmull
push
mov
push
xor
add
pop
insb
inc
jbe
adcb
pop
add
bound
cmp
out
mov
xchg
cmpsl
int
imulb
dec
pop
cmp
neg
cwtl
adc
sub
cmp
mov
into
scas
inc
sbb
xlat
jl
adc
decb
js
and
mov
sbbl
cmp
adc
ds
in
add
xchg
cmp
ss
sbb
xchg
mov
popf
mov
push
pop
pop
add
call
or
adc
pushf
sbb
in
pushf
scas
lret
mov
je
inc
je
mov
push
gs
sbb
jecxz
in
xor
dec
push
insb
jo
xor
sbb
loope
jns
xchg
cmp
ret
inc
shrb
jb
orl
ret
int3
push
pop
jno
iret
scas
xor
pop
push
xor
scas
dec
cmp
ljmp
cmp
adc
pop
cs
and
sarl
stos
lcall
aad
jg
sbb
jb
adc
pop
lock
mov
hlt
test
inc
adc
mov
cmpsb
jle
mov
inc
aaa
rep
pop
and
xchg
jl
ret
aam
lock
jns
adc
xor
cmc
popf
inc
mov
adcb
int
outsl
test
add
jmp
jbe
add
cmp
push
sbb
into
ljmp
loope
jo
call
jmp
jle
push
inc
mov
pop
mov
mov
dec
imul
add
jmp
dec
inc
sub
in
fs
inc
inc
movsb
int3
push
add
push
fnstcw
sbb
ljmp
inc
pusha
sub
sahf
and
out
popa
mov
sub
jge
fistps
add
adc
popl
adc
push
push
push
mov
lret
arpl
shll
fnstcw
icebp
fwait
popf
push
xor
mov
or
fmull
adc
sahf
idivb
out
mov
outsb
mov
rclb
mov
cmpsl
lock
inc
inc
rcrb
pusha
and
aam
cmpsb
sbb
adcl
outsl
lea
add
cmp
int
clc
sbb
scas
aaa
jecxz
xchg
popa
enter
pop
xlat
xchg
popa
insb
es
mov
mov
inc
iret
xchg
cmp
scas
and
or
xchg
cmp
push
pop
lret
pop
mov
push
stos
and
pop
pop
dec
fcmovne
call
cmp
push
std
xchg
mov
fwait
loope
nop
fcompl
aas
mov
and
fwait
lahf
push
pusha
scas
leave
stc
mov
mov
pop
xchg
ss
cmp
pop
mov
sqrtps
sbb
jle
scas
pop
dec
ja
int
pop
jb
call
test
jnp
movsb
cmp
sbb
mov
aad
add
loop
movl
lea
dec
daa
dec
mov
sbb
out
iret
xchg
adc
pusha
inc
in
push
pop
lods
inc
out
push
dec
mull
stos
jae
in
sub
or
push
push
xchg
cmp
fildll
jmp
mov
out
or
dec
add
jecxz
dec
sub
xchg
outsl
lods
lods
jle
lods
mov
std
out
subl
xor
jo
and
ret
sbb
leave
sbb
push
dec
or
pop
fwait
xchg
mov
fisubrl
std
fcom
cmp
and
xchg
jno
add
adc
jmp
ljmp
lcall
outsl
sbbl
xchg
mulb
fwait
push
scas
xchg
mov
fmul
jecxz
sub
xchg
subb
nop
test
decb
aam
cltd
mov
mov
mov
rcrb
cmpl
cwtl
push
or
mov
mov
pop
dec
leave
sahf
std
loope
mov
jae
imul
mov
mov
pop
dec
xchg
out
lea
rcrl
inc
jno
out
ljmp
xor
sahf
stos
inc
lods
std
out
cs
push
inc
jle
in
add
cmp
xchg
fimull
cmp
mov
test
and
and
jb
or
fsubr
mov
bound
inc
stos
aad
sti
xchg
mov
mov
stos
leave
in
sti
mov
mov
aam
call
mov
adc
jg
sahf
push
sti
loope
dec
fs
fadd
cmp
sub
out
popf
js
sbb
cli
pop
scas
movsb
insb
fs
jp
mov
outsl
in
push
push
mov
das
inc
arpl
movsb
inc
cld
mull
xchg
std
sub
mov
cmpsl
in
dec
and
paddd
mov
addb
cltd
mov
and
repnz
cmp
mov
push
sbb
push
adc
mov
xchg
sub
xchg
and
jmp
fadds
or
inc
inc
in
pop
in
xchg
fldt
push
mov
mov
das
lret
mov
fwait
or
sbb
mov
sub
pop
xchg
jno
sub
xor
call
xchg
jae
jg
mov
dec
mov
xlat
insl
dec
enter
jns
or
sbb
jmp
xor
sbb
xor
add
cli
and
and
cmpb
ljmp
push
xchg
mov
jl
dec
adc
add
lea
in
lret
mov
out
mov
scas
mov
or
aaa
fsubrl
in
sub
dec
fdivs
jge
mov
sbb
and
clc
push
mov
iret
out
jle
mov
nop
repnz
lods
les
sub
xlat
mov
movsb
adc
add
and
mov
out
sbb
ficompl
adc
sti
ds
je
test
or
add
aas
stos
insb
sahf
mov
add
mov
mov
sub
mov
ud0
jmpw
std
dec
cmp
mov
mov
mov
mov
rcll
nop
adc
sub
push
out
sbb
rorl
mov
jb
mov
push
sub
mov
push
fidivrl
pmaxub
pushf
adc
test
add
mov
rol
pushf
jno
xchg
out
dec
or
and
adc
call
stc
jg
int3
aad
mov
ja
clc
aam
xchg
icebp
sub
dec
int3
int
xchg
mov
int3
cmc
jg
adc
clc
sti
hlt
aas
pop
push
xor
xchg
jne
dec
nop
subb
scas
scas
movl
repz
or
and
test
dec
aam
adc
and
mov
jg
incb
sub
mov
mov
out
loopne
pop
dec
push
add
sub
test
bound
lods
addr16
mov
jno
in
pop
mov
cmp
movsl
xchg
lahf
popa
cmp
ret
adc
push
sar
test
dec
dec
jae
test
ret
mov
std
aaa
ret
subl
stos
mov
xchg
pop
pop
and
into
repnz
or
test
dec
mov
insl
xchg
jg
test
push
rorb
pushf
mov
int
ret
jns
and
jno
or
mov
mov
sub
lds
and
aad
faddl
fwait
out
loope
in
xchg
ds
fsubrl
test
loopne
fmull
xor
jg
mov
inc
pop
dec
push
pop
rol
dec
js
movsl
jg
dec
xchg
add
fists
cmp
dec
js
lret
aam
movsb
dec
cmp
sub
mov
fstl
inc
jge
jo
adc
jp
outsb
cwtl
inc
fmull
std
fidivl
std
or
pusha
push
dec
add
int
lods
xchg
cmovge
daa
insb
orb
mov
jl
jmp
add
pop
test
jmp
or
es
pop
ds
pop
mov
mov
stos
jo
jp
popf
adc
sub
sbbl
jae
jne
and
outsl
xchg
nop
cmp
lret
pop
push
pop
jns
ja
rep
lock
push
sbb
pop
inc
inc
lcall
sub
negl
dec
mov
lret
cmp
lret
clc
loope
cmp
and
movaps
test
and
fs
push
test
jmp
dec
in
push
out
mov
and
xchg
popl
add
cmc
mov
cmpsl
arpl
xchg
in
into
ret
cmpl
stos
cmp
fsub
sbb
js
inc
mov
or
pop
cmp
add
xchg
inc
sub
push
into
adc
fbstp
out
mov
je
inc
jno
sub
sub
or
jmp
ret
fistpl
mov
out
jbe
mov
dec
imul
dec
mov
pop
aas
add
xor
cmp
mov
fmuls
call
adc
pusha
cs
aad
jbe
sbb
cmp
dec
in
and
add
mov
in
icebp
cmpsb
dec
lock
std
repz
mov
cmp
in
and
mov
ficomps
or
out
shl
push
in
mov
pop
sbb
sub
aam
bound
js
jl
and
fdivl
shlb
xchg
sti
popa
jecxz
std
push
lret
push
push
mov
js
ljmp
lock
fmull
mov
mov
push
stos
call
sti
jno
bnd
xchg
pop
outsl
mov
mov
aam
cs
lret
ja
and
imul
inc
fs
cwtl
mov
clc
and
shlb
mov
fstpt
dec
dec
nop
fs
addr16
dec
sub
das
jno
xchg
mov
sbbl
gs
inc
xor
inc
cmpl
xchg
lahf
mov
push
pusha
jbe
test
shll
xor
mov
pop
std
imul
adc
mov
pusha
xor
cli
inc
xchg
lret
push
outsl
pop
out
into
xchg
test
xor
test
cmc
inc
lret
jns
adc
cmp
ror
stos
mov
or
add
out
xlat
in
vaddps
cmp
dec
mov
inc
imul
andb
sub
push
cmp
adc
xchg
ss
sub
or
rcrl
fs
xchg
sbb
mov
or
jb
lea
inc
test
xlat
cmpsb
push
sbb
cltd
push
lds
and
jecxz
negb
dec
jnp
stos
xlat
mov
adcl
mov
jb
pop
mov
clc
cmp
bnd
cmp
fstps
test
inc
repz
xchg
sub
xlat
mov
jmp
xchg
mov
push
add
clc
pop
lea
int
insl
stos
in
inc
jo
xchg
jb
inc
push
jbe
push
push
fstpt
test
push
lret
cmp
ret
xor
xor
dec
adc
pop
push
add
push
pop
mov
aas
pop
stc
push
sub
hlt
mov
dec
adcl
jo
add
or
mov
push
xor
pusha
ja
enter
add
repnz
xor
aad
mov
stos
cltd
imulb
test
mov
push
inc
and
jmp
dec
arpl
jbe
jg
mov
xor
mov
outsb
dec
test
in
xchg
cmp
xor
mov
xorl
stos
lret
jae
bnd
or
ret
lcall
mov
repz
fidivl
in
jo
pop
stos
pop
cmp
inc
sbb
fbld
inc
push
mov
inc
test
jne
ja
je
mov
jb
ror
clc
xchg
pop
sub
fisubl
mov
pop
xchg
stos
adc
fdivs
jns
flds
lods
and
in
das
jns
mov
jmp
int3
loop
mov
cmp
inc
cld
or
xor
rcrl
jae
mov
sbbl
mov
mov
xchg
pop
int
cmp
mov
lahf
jmp
pop
call
xchg
mov
add
xorl
pop
cmc
jbe
mov
mov
pop
inc
inc
lods
ljmp
lahf
add
inc
clc
xor
xlat
pop
idivb
pop
stos
mov
xor
xchg
test
ret
mov
daa
push
iret
push
push
push
and
movsl
adc
push
xor
icebp
imul
gs
lods
push
ret
push
mov
dec
mov
std
scas
pop
sub
pop
inc
mov
addr16
add
into
mov
ljmp
adc
nop
dec
mov
stos
fs
jns
push
pop
mov
test
lods
das
jg
inc
cld
push
sub
jbe
jne
aad
inc
sarb
icebp
sbb
mov
xor
arpl
adc
mov
adc
addr16
mov
les
cmp
stos
cmp
push
stos
repz
adc
or
pushf
ljmp
push
int3
and
xchg
or
jae
jl
jo
into
cmp
mov
jb
lcall
lahf
adc
sbb
rcl
frstor
mov
fcoml
pop
es
imul
cmpsb
mov
dec
loopne
inc
mov
andl
call
fisttpll
jp
adc
xchg
test
aaa
lods
stos
xchg
ja
xor
mov
inc
pop
in
stos
cmc
movsl
popf
fldt
les
cmp
pop
cmp
js
inc
dec
std
pop
dec
mov
out
push
test
sub
jge
cmpsb
push
xchg
pop
mov
adc
lods
sub
mov
cltd
adc
push
jle
xchg
les
fisubl
pop
test
xor
daa
mov
add
movsl
inc
jns
sbb
pop
lahf
ret
cmp
cli
mov
dec
fbld
in
push
daa
fsubrl
clc
xor
mov
add
sub
mov
lock
xor
subl
sbb
add
mov
scas
and
and
sbb
sti
lea
mov
popa
jbe
inc
xbegin
mov
movsb
mov
orl
xchg
sub
lcall
repnz
jle
ret
std
outsb
push
mov
or
mov
lea
dec
es
pop
sahf
or
lret
sub
jne
out
out
push
sbb
jle
add
in
lcall
dec
mov
inc
push
jl
inc
andb
inc
lods
into
sti
out
shlb
pop
mov
dec
adc
jg
mov
aad
mov
push
lcall
out
cmpsl
pop
out
mov
jle
movsl
inc
ss
mov
sub
push
ss
mov
mov
mov
add
inc
lea
lcall
ret
mov
xchg
and
pop
insl
jb
add
jle
jg
cld
and
sub
or
adc
or
add
ret
mov
inc
fsubs
rcrl
add
xor
adc
sub
xchg
test
mov
shl
jns
jecxz
mov
mov
addr16
and
jmp
push
xchg
sbb
inc
sub
in
xor
mov
sbb
popf
outsl
je
rorb
xor
jbe
push
pop
push
dec
es
outsl
lahf
out
imulb
cmpsb
pushl
pcmpgtd
jbe
push
pop
push
dec
es
outsl
lahf
out
imulb
cmpsb
pushl
pcmpgtd
jbe
push
pop
push
dec
es
outsl
lahf
out
imulb
cmpsb
mov
inc
pop
push
pcmpgtd
jbe
push
pop
push
dec
es
outsl
lahf
and
icebp
push
push
xor
dec
adc
sti
popf
jmp
iret
lcall
pop
aas
dec
or
sbb
dec
cmp
lods
fstpt
jmp
fwait
std
mov
mov
cmp
imul
or
pop
sub
sti
popf
jmp
fwait
std
mov
mov
push
pop
jge
js
insl
dec
push
outsl
push
pop
xor
fdivrl
loop
stos
dec
es
push
push
pop
jnp
cmp
sbb
shll
roll
jb
pusha
adc
arpl
je
mov
mov
repz
push
fstpt
sbb
or
push
into
xlat
sbb
mov
mov
sub
insb
sbb
cmp
les
lods
and
lret
lcall
push
pop
in
test
xchg
cmp
incb
aaa
or
fnsave
push
std
sub
xor
pop
cmp
cmp
xchg
pop
inc
xor
push
jbe
imul
pop
std
jg
imul
pop
sub
mov
jmp
fwait
std
mov
mov
cmp
imul
or
pop
insl
enter
lret
mov
xchg
lret
pop
fistpl
pop
and
pop
add
sub
leave
sub
mov
mov
cwtl
stos
pop
push
pop
daa
jo
sbb
fs
aaa
inc
lret
mov
test
std
mov
mov
cmp
imul
or
pop
sub
sti
popf
jmp
fwait
std
mov
mov
cmp
imul
or
pop
sub
or
cmp
aad
das
xor
cmc
arpl
decb
das
cmp
dec
imul
adc
out
lods
pushf
cmp
xor
adc
cmp
lcall
inc
lcall
gs
adc
dec
and
ja
fwait
bound
outsb
fidivl
push
push
mov
loop
sbbl
cs
sbb
dec
jae
jns
jbe
pop
sbb
imul
rcrl
arpl
scas
fisttpll
hlt
in
loope
negb
cmp
cwtl
or
adc
sbb
jle
mov
arpl
sbb
xor
or
lret
mov
mov
jmp
push
imul
cmp
iret
cmp
xor
out
enter
subl
enter
test
scas
sbb
fidivrl
pusha
inc
mov
push
dec
jbe
dec
jb
sarb
xchg
inc
sbb
cwtl
int3
and
xchg
add
sbb
xor
setnp
cltd
sbb
sub
and
icebp
out
js
mov
sub
aam
xchg
imul
sub
test
and
movsl
jbe
mov
xchg
mov
js
out
ret
fucom
aad
pop
pop
aad
inc
ret
gs
sahf
mov
enter
add
rcl
push
sub
imul
das
iret
dec
xor
bound
cmc
mov
jne
in
popa
scas
and
inc
mov
mov
pop
push
mov
add
mov
inc
jno
cltd
fldt
daa
int3
stos
rclb
and
push
pop
pushf
dec
mov
out
jb
add
or
outsl
cmp
out
ret
jnp
mov
daa
jnp
xchg
lcall
dec
icebp
stos
inc
enter
jo
in
mov
cmp
cmp
jp
shlb
mov
pop
scas
gs
leave
je
adc
cmp
xor
shll
add
xor
or
movsb
daa
jg
scas
push
jo
pop
outsb
and
iret
add
movsb
sbb
fsin
xchg
or
jg
pop
loope
or
lcall
fimull
pop
and
rclb
mov
mov
mov
and
xchg
ds
push
xor
mov
or
push
push
mov
pop
subl
jne
pop
inc
sahf
xchg
pusha
inc
add
sub
in
jmp
loop
addr16
pop
imul
sub
dec
mov
lock
or
xor
jge
sti
insb
mov
and
and
lret
sbb
fdivrs
aaa
adc
mov
dec
or
call
in
mov
push
shlb
scas
jno
fsubl
pop
jo
and
int
arpl
mov
jge
movsl
mov
ret
dec
in
xor
js
dec
jmp
sub
adc
mov
lock
and
in
mov
cmp
aaa
rcll
ret
sbb
mov
ret
movsl
jl
ret
jo
cmpsl
pop
mov
push
jne
testl
and
mov
inc
pop
ljmp
pop
push
or
mov
repnz
push
ljmp
cmp
stc
inc
mov
leave
mov
stos
fwait
or
mov
in
mov
shll
incl
pop
inc
loop
sub
sub
test
push
scas
mov
or
rcll
movsl
dec
loop
popf
insb
mov
sti
outsb
in
inc
repz
cmp
movb
int
popf
lret
push
aas
cmp
lods
dec
xchg
fucomip
in
mov
cwtl
add
lds
addl
inc
dec
into
push
and
push
and
dec
xchg
jge
sahf
dec
mov
movsl
movsl
aad
fistpll
xlat
xlat
shll
or
mov
push
lods
movsl
jo
lods
call
jno
les
outsb
insb
jmp
and
push
sbb
lret
popa
fwait
push
add
popa
mov
or
rcrb
pop
inc
test
test
lahf
mov
je
pop
cmp
sbb
int3
mov
jp
or
loope
jne
push
mov
mov
xor
cmp
adcb
cmpsb
push
leave
insl
stos
lods
mov
mov
in
mov
ljmp
jp
shrb
and
xchg
push
repnz
sbb
cmc
test
push
pop
ret
cld
jg
stos
fiadds
dec
call
aaa
das
mov
in
push
mov
shrl
out
cmp
outsl
jg
add
je
xor
xchg
fldcw
push
int3
mov
pushf
in
mov
lods
outsl
jp
mov
clc
lret
mov
nop
testl
dec
je
mov
jge
push
pop
lret
pushf
ss
dec
pop
or
ficomps
xchg
mov
pop
ljmp
sub
aas
dec
dec
sub
add
fsubrl
cmp
syscall
jg
mov
stc
sbb
cmp
cmpsl
and
cmpsl
popa
cmpsl
in
inc
inc
sbb
mov
mov
in
lds
notb
int3
mov
les
xchg
addr16
mov
cs
popf
mov
mov
or
push
xorb
insl
fwait
test
xchg
lea
lahf
pop
pushf
fdivrl
cmp
inc
mov
sub
out
cmp
push
sbb
add
mov
rcrb
jg
jae
xchg
adc
xchg
sbb
std
sub
cltd
mov
dec
sub
fwait
call
repz
daa
dec
xchg
mov
pop
inc
enter
out
mov
dec
jl
jge
and
test
xchg
test
sub
jbe
loope
or
adc
imull
mov
add
jmp
mov
sbb
and
pop
mov
cmp
pop
or
pop
and
jae
clc
outsb
shlb
jnp
into
push
pop
inc
int
cmp
cmp
jmp
shr
popf
push
jbe
fs
imul
cli
xchg
mov
aaa
xlat
sbbb
lock
pop
enter
jns
mov
aam
enter
inc
aam
lcall
imul
add
nop
sbb
hlt
push
dec
stos
cmpsl
sub
xchg
mov
push
adc
shrl
mov
lahf
pop
cwtl
rol
mov
sbb
stos
ret
mov
mov
mov
shl
stos
add
sarb
stos
or
jo
and
lahf
mov
popf
fcoms
jo
shlb
roll
push
jbe
fildll
and
dec
and
popf
inc
sarl
in
jp
imul
sub
into
dec
mov
sub
into
adc
pop
xchg
fsubp
or
popa
in
pop
jo
aaa
mov
inc
xor
pop
inc
add
jmp
dec
fcoml
adc
repnz
jmp
or
push
inc
sub
fwait
lahf
jb
arpl
iret
jo
cmp
dec
inc
jp
jge,pt
vpsubq
jne
arpl
mov
test
int
andb
mov
or
call
cmp
push
push
shrl
loopne
pop
lea
inc
dec
add
xchg
out
xchg
pop
in
nop
pushf
data16
nop
vpand
pop
push
adc
movsl
add
add
imul
jecxz
ficoms
pop
aaa
dec
dec
call
jmp
ret
test
cwtl
cmp
cmp
movsl
add
out
xor
into
push
mov
cwtl
lods
cwtl
ret
xchg
gs
inc
lea
mov
mov
add
mov
dec
push
stos
inc
cltd
xorl
lock
iret
mov
outsb
fisttpll
push
sub
dec
mov
call
mov
shl
adc
insb
push
daa
mov
hlt
xor
rorl
call
adcl
dec
mov
lret
gs
shrl
int3
xchg
cmp
pop
dec
jns
dec
call
ja
das
mov
cwtl
sbb
in
iret
inc
push
mov
mov
pop
push
rcrb
mov
or
popa
mov
daa
mov
mov
jl
test
cmp
push
push
fsub
test
cmp
push
orl
cs
cli
aam
push
lods
fmuls
shl
jle
mov
inc
cmp
or
outsl
loope
push
add
aad
cmc
xlat
sti
sbb
inc
cmpl
inc
fwait
mov
add
xor
sbb
lods
cmp
mov
or
rcr
cmp
pop
les
fidivl
ficomps
add
adc
push
jmp
mov
sub
dec
xchg
cli
adc
lea
add
xchg
movb
lret
xor
mov
cmp
sbb
cwtl
sub
int
mov
int
mov
scas
ljmp
jmp
xchg
jnp
iret
pop
jnp
insb
test
push
or
adc
sub
int
cmp
cmpsl
dec
out
dec
lcall
pop
dec
push
cmp
cmp
cmp
addr16
das
aad
sbb
jo
ss
pushf
jl
lods
in
dec
mov
mov
repz
icebp
aam
loope
jp
push
sarb
inc
xor
pusha
lods
adc
iret
ds
xchg
mov
mov
shlb
rclb
mov
cmpsb
or
cmp
in
dec
jb
mov
les
fnstcw
fnstcw
sbb
stos
mov
cs
dec
sbbb
gs
or
fst
mov
mov
shrl
or
mov
push
jmp
leave
fwait
insl
jne
imul
pop
push
and
cld
sub
and
imul
mov
aam
out
dec
addr16
jecxz
into
cmp
cs
adc
push
aas
mov
cmpsl
dec
sbb
fwait
jae
mov
mov
pop
clc
mov
cli
fsts
mov
xchg
jecxz
jne
cmp
imul
cmpsl
fisubrs
jb
xor
xchg
insb
jmp
movsb
push
pushf
jecxz
rcll
push
adc
jl
xor
push
pop
movsl
fmul
jp
popf
xchg
xchg
mov
jecxz
adc
arpl
loopne
inc
inc
cmc
cmc
adc
pop
dec
mov
mov
gs
push
add
xor
pop
push
push
inc
fidivl
add
dec
xor
and
xor
and
mov
lret
stos
adc
clc
bound
add
inc
xor
lea
sub
cmp
dec
sub
mov
push
jae
mov
test
jns
mov
pushf
lret
push
push
push
cs
fs
stos
fldcw
dec
pop
jnp
test
jo
nop
sub
jg
ret
fists
ficoml
adc
inc
std
push
push
cmp
or
es
scas
push
mov
stos
adc
insb
push
cwtl
imul
dec
dec
pop
sub
push
adc
out
jecxz
je
mov
mov
loope
or
rorl
insb
pusha
adc
mov
loopne
icebp
pop
in
sbbl
xor
pop
out
lea
scas
cmpsb
cmpsb
mov
loope
scas
add
test
repz
fdivrp
daa
pop
in
je
fdivrp
stos
ret
fwait
cmpsl
mov
into
sti
push
mov
fisubrl
mov
jnp
inc
in
xor
adcb
js
add
push
mov
xchg
push
cld
push
push
inc
ljmp
push
cmp
repz
cmp
adc
insb
xchg
push
xor
jecxz
inc
rcll
or
sti
mov
push
push
push
and
repnz
cltd
jno
mov
pop
adc
mov
test
lods
in
imul
jne
xchg
outsl
jp
mov
adc
fwait
jge
sub
jp
mov
xchg
pop
jp
add
mov
pop
daa
dec
rorl
inc
mov
xchg
xor
xchg
fldl
xor
sub
test
inc
imul
sbb
mov
mov
insb
mov
mov
negb
pop
and
insb
icebp
add
data16
add
mov
push
cmp
adc
ss
cmp
inc
pushf
mov
insb
aad
xchg
fisttps
sub
jno
scas
dec
pop
enter
add
stc
adc
xor
dec
jae
xor
call
into
inc
push
pop
pop
inc
pop
in
dec
inc
cmpsb
adc
and
lods
add
cs
stos
test
aaa
in
push
add
jne
and
lea
jns
popa
lods
hlt
popf
int
push
push
leave
adc
shr
sti
and
xor
jp
mov
outsl
and
sqrtps
in
inc
adc
fsin
pop
add
mov
out
xchg
mov
mov
sub
add
and
mov
iret
aas
cwtl
out
mov
int3
outsb
orb
or
push
fiadds
cmc
iret
jbe
fwait
mov
paddsb
out
inc
inc
cli
xchg
jae
enter
jnp
mull
insl
cmp
mov
adc
or
push
dec
xchg
movsl
sub
jge
cmpsl
enter
inc
jg
divl
push
pop
add
ljmp
jne
adc
gs
adc
mov
cmp
iret
rolb
sub
pop
pusha
jmp
loopne
mov
cli
sbb
in
bound
iret
daa
pop
dec
lahf
out
lcall
and
dec
into
and
jmp
lretw
cmp
inc
jnp
mov
pop
dec
popa
mov
incb
pop
cli
shr
push
fwait
lods
add
or
es
adc
pop
dec
sarb
adc
mov
lds
adc
imul
test
pop
sbb
inc
xor
xchg
or
dec
idiv
adc
ficompl
arpl
daa
clc
inc
cmovno
xchg
xchg
cmpsl
in
or
inc
lock
mov
cmp
sbb
push
jbe
adc
sub
add
data16
gs
inc
cmpsb
pop
jns
sbb
xor
aam
push
lcall
pusha
mov
lods
sbb
loope
ret
and
ja
ret
mov
add
pusha
add
stos
cmp
mov
mov
fsubs
cmp
or
les
ljmp
ja
dec
call
orl
jo
adc
xor
inc
ret
cli
cmovbe
lds
xlat
cmpsl
movsb
jo
in
sub
pop
cmpsl
adc
test
aas
or
sub
inc
xor
fmuls
popf
sub
lods
xlat
ret
in
push
mov
mov
insb
decl
andb
sbb
loop
ret
and
xor
mov
leave
or
mov
cs
dec
pop
mov
jecxz
icebp
jmp
add
sbb
adcl
jp
pusha
aas
xchg
fwait
mov
pop
out
loopne
icebp
pop
insb
mov
xor
aad
pop
addr16
sahf
dec
xchg
arpl
hlt
movsb
pop
mov
cmpsl
in
adc
mov
mov
test
hlt
jnp
or
out
loope
jmp
js
xor
push
dec
sti
lods
add
or
lcall
push
jmp
pop
dec
xchg
sti
sub
or
jecxz
mov
cmp
test
push
inc
jno
mov
push
cmp
mov
dec
jg
and
inc
inc
aad
jmp
insl
jle
add
sbb
jle
mov
adc
imul
fucompp
pop
and
sahf
inc
fwait
enter
sahf
push
adc
xlat
sbb
sub
fadds
insl
sub
jmp
les
lods
mov
jb
loopne
nop
mov
mov
cmpsb
in
dec
and
jnp
mov
or
repnz
pop
mov
mov
nop
in
jmp
xor
cmp
push
adc
iret
jnp
in
loope
xor
pop
pop
clc
fucom
mov
aam
icebp
jno
popf
pop
loopne
lods
jb
stc
test
inc
xchg
sub
imull
jle
pop
jge
in
movsl
stc
in
xchg
mov
xor
push
sti
and
jmp
mov
pop
mov
xchg
sbb
enter
in
pop
addr16
dec
mov
jno
wbinvd
les
jle
adc
cltd
mov
out
icebp
das
es
sub
pop
notb
mov
mov
mov
pushf
or
dec
cmp
insb
in
into
ror
or
jne
adc
sub
sbb
es
ja
push
sub
pop
out
mov
pop
mov
or
push
cli
cltd
dec
into
dec
in
cmpsl
mov
adc
ss
jmp
mov
rclb
fidivs
ret
repz
xor
pop
es
cmp
sahf
mov
jns
xor
mov
and
mov
in
iret
or
fcoml
xor
cmp
out
lret
gs
outsl
xchg
mov
test
push
sub
mov
iret
outsl
push
sbb
leave
push
ja
xchg
xchg
sub
hlt
jg
mov
out
das
out
cld
cmp
and
loop
inc
mov
xchg
sahf
in
icebp
aaa
add
stos
cltd
imul
imul
dec
pop
cmpsb
hlt
and
ds
or
testl
fimull
movsb
pop
aam
pusha
push
cmovo
push
pop
fwait
add
out
rcrb
add
push
arpl
dec
mov
adc
movb
gs
xchg
addr16
stc
jno
ret
dec
xchg
jae
loope
pushf
outsb
push
cmp
stos
push
sbb
cltd
hlt
iret
mov
sub
int3
xor
sbb
dec
jo
lret
and
in
sub
data16
mov
nop
imul
jge
stc
jmp
mov
scas
or
icebp
xchg
in
sbb
in
cmp
cmp
sub
xlat
lock
cmp
mov
sub
mov
in
mov
mov
cld
adc
stos
shlb
xchg
enter
in
xorb
xor
cmp
rorl
dec
add
push
lods
sbbb
jle
push
cmp
aad
jg
inc
jne
mov
push
loopne
mov
mov
inc
jmp
lea
push
mov
xchg
or
dec
lret
mov
jbe
mov
int
cmpsl
mov
add
stos
jmp
pop
push
into
aad
cs
sbb
out
push
sub
xchg
push
mov
mov
pop
cpuid
pop
gs
jno
jae
cmp
sbb
xchg
test
popa
lods
aaa
scas
pop
mov
sarl
cmp
add
mov
mov
addr16
daa
insl
push
add
jmp
leave
jns
xor
pop
out
fsts
sub
xor
sub
jl
lods
mov
jae
push
scas
xor
outsb
jae
bound
xor
xchg
rcrb
mov
mov
inc
xor
rcr
mov
imul
call
sarb
scas
lahf
pusha
in
jge,pt
jge
pop
xor
cmp
sbb
cmp
sbb
and
cmp
les
scas
pop
ljmp
mov
cmpsb
push
xchg
int
sub
mov
pop
pushf
xor
addr16
loope
adc
or
enter
inc
push
push
nop
push
or
rcrl
sbb
vpcomq
mov
bound
int3
mov
dec
pop
sub
out
dec
cmpsb
loop
fsubrl
fcmovnbe
lea
cmp
push
insl
mov
lock
push
and
xor
jmp
and
xchg
lods
mov
sbb
add
xor
pop
pusha
les
mov
movsl
shlb
inc
or
push
mov
and
mov
int
dec
in
fwait
aaa
scas
sbb
cmp
pop
mov
cmp
insb
stos
shrl
movsl
lods
push
lret
and
mov
js
mov
icebp
int3
inc
outsb
aad
mov
or
sbb
mov
mov
add
push
popa
loop
pop
pushf
mov
dec
jge
dec
rcr
jb
loopne
cmp
call
jno
pop
sahf
adc
inc
pop
shll
aad
add
rcl
jb
jl
movsb
jne
jo
out
pop
leave
mov
call
pop
xchg
adc
fwait
push
pop
outsl
std
sbb
mov
push
popa
bound
into
add
cmp
fs
insl
lods
test
stos
bnd
mov
mov
test
mov
xor
inc
aad
sbb
pop
addr16
lret
daa
fisttps
xchg
sarl
shl
add
lods
mov
shll
sub
xor
sbb
push
sbb
cwtl
mov
adc
call
aam
test
dec
sbb
and
bound
or
pop
cli
pop
subl
xchg
fwait
fwait
mov
shll
mov
adc
call
inc
xlat
test
fisttpl
ss
loop
push
xchg
dec
in
xlat
cld
cmp
jmp
fwait
std
mov
mov
cmp
imul
or
pop
sub
sti
popf
jmp
fwait
std
mov
mov
cmp
imul
or
pop
sub
sti
popf
ljmp
or
sbb
dec
cmp
lods
fstpt
out
in
fwait
std
or
pop
push
shlb
sbb
xchg
cmc
hlt
mov
movsl
aam
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jno
bound
jbe
data16
imul
add
shl
ret
xchg
mov
cmpsb
push
push
bound
jbe
data16
and
adc
add
repnz
loop
mov
ret
xchg
mov
cmpsb
lret
inc
shlb
sub
inc
push
or
add
xchg
jle
mov
rcl
jmp
sbb
sbb
sub
shll
in
in
sub
mov
ror
lea
mov
fs
add
cltd
sbb
mov
data16
xchg
cmp
imul
push
out
testl
arpl
sbb
lret
loop
ss
xchg
out
pop
dec
mov
lds
pop
and
in
mov
loop
push
or
dec
cld
mov
sub
repz
cltd
and
xchg
rorb
xchg
testl
mov
int
lret
mov
inc
aaa
mov
out
pop
out
out
xor
xchg
mov
xor
push
jbe
data16
push
pop
push
adc
movsb
es
js
movsb
div
out
xchg
test
mov
cmp
inc
es
cmp
pop
jp
push
data16
jbe
mov
mov
sahf
cmpsl
mov
sti
mov
out
push
pop
inc
and
adc
pop
inc
out
push
es
scas
mov
rclb
int
sti
rol
negb
pop
push
adc
popa
push
and
adc
add
repnz
loop
shl
ret
xchg
mov
cmpsb
jb
bound
jbe
data16
and
adc
add
repnz
loop
shl
ret
xchg
mov
cmpsb
jb
les
nop
les
imul
xor
scas
or
jp
jl
mov
in
inc
stc
repnz
mov
out
pmovmskb
lods
add
inc
add
fcmovnb
test
pop
jo
psubusw
add
outsb
sbb
fildl
div
add
or
sbb
negb
dec
dec
mov
or
dec
cmp
in
addr16
sub
out
push
fsts
shlb
mul
rolb
popf
repz
push
cmpsb
dec
aaa
scas
mov
popa
aad
rcrb
mov
sub
xor
sbb
cmp
dec
xor
lods
fcoml
test
imull
xor
shrl
fidivrs
movsb
jmp
aam
mov
jns
sbb
rorl
or
iret
or
sti
cmpsb
imul
daa
aas
jnp
pop
in
jnp
ljmp
inc
lahf
test
fcomps
lret
xor
mov
gs
adc
mov
ret
and
jne
test
dec
sub
add
and
imul
mov
jg
pop
ljmp
gs
xchg
je
xor
and
xor
mov
sub
in
movsl
divl
test
pop
add
and
aam
and
jno
inc
jle
mov
cmpsl
and
mov
xor
aas
jl,pn
jecxz
std
test
push
enter
mov
push
test
sbb
sarl
and
into
ja
pop
iret
pushf
jns
shlb
fldt
or
clc
andb
push
cmp
orl
or
jno
lods
ljmp
adc
sub
icebp
add
movsb
jle
icebp
mov
lock
test
leave
ds
add
pop
mov
insb
push
decl
xchg
sarb
mov
mov
cmpsl
test
shrl
xchg
int3
repnz
rclb
xchg
cmp
gs
or
add
mov
or
inc
mov
cmp
inc
in
mov
js
sub
cmc
adc
repz
shrb
xor
jnp
jb
push
scas
pop
mov
add
imul
mov
out
das
rorb
or
dec
jo
aas
xchg
dec
mov
mov
cs
aaa
xor
filds
sbb
jle
sub
pop
loop
dec
cmc
cwtl
xchg
or
mov
xchg
out
pushf
mov
mov
scas
mov
and
dec
inc
adc
lods
mov
clc
ficompl
ja
adc
enter
mov
cltd
sbb
fildl
hlt
mov
push
xor
rcr
mov
outsl
or
mov
daa
out
push
clc
mov
in
dec
adc
lret
mov
pop
push
add
mov
mov
mov
fisttpl
jmp
pop
cmpb
dec
sbb
mov
aam
xlat
dec
popa
jbe
mov
xor
xor
sub
in
imul
jecxz
push
xlat
fbstp
cmp
mov
sbb
pop
mov
int
call
pop
and
mov
shll
mov
aad
int
cmp
insl
mov
sub
je
fists
rcl
dec
out
sbb
dec
mov
out
add
sub
cmp
cmp
pop
out
xchg
pop
push
dec
ds
xor
dec
cmp
push
add
jge
adc
cmpsb
sbb
arpl
out
xor
gs
xchg
test
cs
xor
cmp
in
inc
xchg
pop
cs
and
push
sbb
sbb
fildll
into
or
pop
and
and
cli
jp
dec
cmpsl
je
lock
mov
mov
adc
cld
shl
mov
xor
dec
jle
inc
cmp
daa
arpl
out
inc
inc
mov
push
add
test
add
scas
mov
jecxz
push
sbb
mov
loopne
xor
arpl
mov
push
loop
xchg
sub
das
insb
call
push
sbb
arpl
and
stos
das
dec
mov
push
imul
data16
inc
js
mov
lahf
sbb
and
iret
push
or
xchg
loopne
mov
sahf
xlat
push
pop
sahf
adc
stc
cmpsl
jno
push
clc
xor
lret
movsb
aaa
mov
nop
inc
shlb
sbb
xor
mov
lock
insl
cmpb
vcvtdq2pd
xchg
in
pop
sub
ja
adc
xchg
cs
push
push
inc
sub
ror
jne
in
jg
push
je
mov
mov
adc
and
dec
push
lods
insl
or
mov
dec
loop
fadds
cmp
add
outsb
fs
cld
scas
jbe
ljmp
sbb
mov
insl
int
imul
test
sbb
pop
ret
xchg
pop
mov
sbb
ds
sbb
push
loop
and
jmp
mov
out
pop
lea
enter
scas
pop
mov
dec
int
add
cmpsb
lds
gs
push
inc
xchg
cwtl
out
jo
lcall
push
hlt
mov
lret
push
das
dec
lret
pop
cmp
push
icebp
and
pop
les
pop
je
subl
pop
push
and
and
add
sub
je
jg
xchg
sub
push
push
pusha
int
sub
outsw
pushl
mov
xor
push
movsl
repnz
push
xchg
jl
sub
rorb
lods
mov
sbb
jecxz
mov
daa
inc
lds
adc
mov
mov
lcall
stos
jl
stc
in
scas
or
mov
aas
dec
jmp
aaa
push
mov
xchg
or
jp
and
pop
jb
xor
push
adc
push
insl
loop
mov
ljmp
dec
and
mov
out
inc
hlt
jne
xor
or
dec
xor
mov
test
out
js
and
or
and
inc
cs
adc
js
nop
mov
stc
adc
cwtl
or
push
jno
cmp
cwtl
test
testl
popa
dec
repz
push
xchg
std
rorl
push
mov
jmp
test
cmpsb
jg
imulb
nop
sub
xor
mov
mov
pushl
lret
sarb
cwtl
mov
add
jecxz
or
dec
fildll
out
rcr
in
xchg
pop
xor
jnp
fistpll
inc
cs
jnp
dec
je
xchg
roll
push
mov
sti
mov
push
dec
cmp
adc
out
add
jae
jae
mov
in
mov
ret
jp
dec
insb
bound
call
xchg
out
fadds
js
in
lcall
dec
call
inc
mov
cli
sbb
fwait
add
add
ficompl
popf
xor
loope
mov
jp
mov
pop
inc
in
mov
adc
stos
cmpsb
adc
adc
push
push
popa
es
inc
push
inc
dec
inc
mov
sub
pop
jnp
or
mov
jl
insl
xchg
ja
imul
cmp
insb
pop
lea
daa
push
cmc
dec
sbb
sbb
leave
jl
mov
les
or
lods
out
cmpsl
sbb
pop
scas
or
sub
fldcw
jo
inc
fwait
jmp
lahf
shrb
sub
aas
lds
push
stos
flds
mov
filds
pop
jmp
sub
enter
mov
scas
cmpsl
jbe
jmp
clc
movsl
xor
lret
mov
adc
addb
cltd
daa
sbb
fistpl
xchg
inc
xchg
xchg
push
and
std
call
arpl
sub
or
fsubl
xor
mov
icebp
pop
lock
mov
pop
lahf
push
adc
inc
into
mov
lock
or
cld
clc
cmp
hlt
imul
and
cmp
ficomps
iret
cld
mov
push
inc
in
inc
lcall
arpl
outsb
add
push
xor
out
sbb
cmpsl
sub
dec
and
adc
mov
rclb
mov
fwait
fs
and
push
fisubl
adc
in
pop
jecxz
xor
sbb
sub
push
aaa
push
mov
std
add
pop
sub
imul
fmuls
xor
pop
sub
int3
or
and
push
xchg
add
mov
addr16
js
stos
mov
pop
xor
repnz
push
mov
rorl
fcomps
mov
jg
cmp
jne
sub
gs
por
mov
push
adc
pushl
data16
jno
sub
jo
jl
jp
jp
fimull
pop
dec
jge
clc
lea
mov
inc
loop
inc
into
std
cmp
xchg
mov
ja
adc
mov
jno
adc
lret
cmpl
sub
test
push
mov
lea
mov
push
jne
dec
xorl
mov
dec
ret
jns
and
or
mov
movb
mov
mov
aad
mov
cmp
add
aad
xchg
les
cld
xlat
das
shll
mov
sarb
push
lcall
cmp
dec
into
popf
pop
push
pop
xchg
pop
cmp
inc
cltd
shl
mov
lea
pop
iret
adc
sbb
jge
jne
adc
mov
add
mov
test
xor
loop
and
xor
imul
mov
push
sub
jns
lock
mov
pop
sub
jne
iret
pop
js
push
inc
xor
icebp
xor
aaa
das
sub
int
iret
outsb
mov
fldenv
cmp
pop
rorl
mov
push
ljmp
in
mov
fisubs
repnz
jmp
sbb
mov
jge
orb
cld
cld
xor
js
loope
sbb
fists
fbld
dec
mov
mov
push
lea
stc
sub
scas
inc
jno
sahf
jle
mov
pop
aas
jb
repnz
popa
cmp
loopne
clc
mov
mov
sbb
movsl
loop
fidivl
mov
sub
mov
pop
xchg
push
idivb
enter
and
adc
inc
cli
xchg
enter
inc
cmp
pushf
add
push
loopne
lea
jge
mov
fs
outsb
mov
adc
push
scas
addr16
xor
fcmovnb
cs
pushf
js
xchg
jb
xlat
cmpsb
add
repz
popf
aad
push
cmp
adc
jl
insl
jg
cmpsb
cmp
and
pushf
or
adc
test
mov
lds
push
lea
xchg
mull
lods
pop
inc
mov
test
in
cmp
std
xor
loopne
in
ret
stos
pop
loop
aad
cmc
dec
lret
gs
mov
add
cli
shr
jne
or
dec
add
enter
xchg
jae
pop
daa
sbb
push
push
loop
icebp
aad
pop
pushf
iret
cmp
shr
sbb
movsb
sbb
push
xlat
sub
pop
outsl
fucomip
mov
inc
mov
xorb
aaa
in
lods
cmp
xchg
out
mov
cmp
adc
je,pt
sbb
dec
push
fsubrs
add
push
mov
xor
and
nop
es
jne
out
popa
clc
xchg
mov
add
or
inc
daa
cwtl
call
cmp
xchg
mov
xchg
xchg
cli
jne
mov
and
mov
mov
mov
sub
out
adc
inc
mov
add
das
dec
enter
scas
pop
cmc
or
stos
jnp
in
ret
shrl
mov
test
cmpsb
xlat
jl
push
out
insl
test
hlt
orl
or
cld
xor
sub
mov
and
ret
jns
loopne
add
cmp
xlat
mov
dec
lea
outsb
iret
lsl
addr16
xchg
mov
js
push
dec
lods
jns
sbb
mov
jnp
stos
test
xor
cmpsl
xor
out
dec
cmp
negl
mov
fs
fwait
idivb
gs
scas
push
xchg
hlt
pop
lds
inc
jge
push
sub
jo
outsb
mov
clc
sti
mov
loop
mov
xor
xchg
and
frstor
or
and
out
mov
mov
scas
inc
andb
scas
mov
xchg
ja
or
mov
push
cmp
mov
mov
dec
mov
addr16
push
jae
or
sbb
xchg
stos
lods
pop
outsl
les
xchg
and
cwtl
xchg
cmpsb
dec
dec
flds
cli
addb
cmpsb
lods
sbb
push
inc
insl
mov
lret
jmp
cmp
jb
out
call
cmpsb
lock
dec
rorb
jno
push
inc
mov
adc
ljmp
jb
cmp
mov
movsb
mov
push
mov
sub
xchg
je
push
xchg
push
adc
sahf
lods
ljmp
jmp
xchg
fisubrs
icebp
sub
inc
lcall
cmp
in
gs
stc
pop
jg
cmp
mov
inc
cld
lods
and
and
cmp
cs
ret
pop
ljmp
scas
jl
xor
xchg
mov
mov
xor
mov
sbb
or
dec
sbb
movsl
fcom
les
ss
imul
sti
inc
out
mov
dec
pop
or
cmp
sbb
lock
dec
pop
xor
xchg
clc
in
stc
sti
insb
packssdw
daa
sbb
jmp
inc
lock
add
hlt
cs
cmp
xor
dec
jp
mov
test
aad
adc
punpckhwd
je
inc
add
ficoms
pop
outsb
xor
and
leave
cmp
jecxz
adc
adc
dec
pop
ret
pushl
xchg
xchg
lods
lds
pusha
arpl
xor
or
lds
sbb
dec
es
cmp
cmp
sub
sub
mov
mov
orb
and
mov
scas
xchg
jo
stos
dec
jg
xchg
jecxz
jmp
push
pop
not
cs
cltd
icebp
test
xor
or
lcall
adc
in
sub
stos
arpl
adc
pushf
rclb
out
and
movsl
pop
lret
test
xlat
sub
mulb
sub
in
mov
pusha
cmpsb
mov
mov
bound
shrl
jb
ret
dec
lods
mov
sbb
mov
sub
and
mov
lock
call
fwait
or
sbb
sbb
add
push
mov
mov
pop
or
jecxz
mov
sub
fidivrs
pop
fiaddl
cmp
lods
into
pushw
xor
test
shr
outsb
mov
adc
imulb
icebp
outsb
xor
lds
mov
or
ja
xor
lods
inc
jmp
jne
dec
jp
and
pop
add
mov
mov
inc
out
jb
inc
lds
inc
testl
jmp
push
ljmp
scas
xchg
cmp
inc
hlt
sbb
loope
sub
and
inc
decl
lds
inc
pop
inc
jg
pop
aad
or
sub
adcb
inc
push
popf
cmp
cwtl
cmc
hlt
popa
pushf
jbe
xor
and
inc
adc
scas
jno
insl
sub
andb
jae
stos
pop
inc
sub
mov
push
pusha
sub
outsl
mov
ret
in
fnsave
ret
push
jecxz
jno
lahf
or
sbb
xchg
nop
inc
mov
push
adc
pop
mov
popa
xor
jle
outsl
imul
idivb
push
push
mov
pop
int3
fimuls
fdivr
outsl
inc
repnz
jp
cmp
push
aas
adc
inc
aaa
call
bound
mov
jmp
and
mov
xorb
mov
mov
jb
sbbl
clc
xor
shl
into
push
adc
icebp
xlat
mov
mov
pop
and
mov
cltd
and
or
call
shl
fwait
rclb
insb
mov
je
mov
aaa
mov
scas
lea
clc
xlat
rol
out
pop
in
jle
and
orl
jne
sbb
and
or
pop
mov
fsubl
enter
sti
jge
dec
push
sbb
pop
test
scas
ljmp
push
lahf
cmp
mov
xchg
mov
sbb
rcll
in
sub
jno
push
pushf
in
and
fisubrl
push
jge
shlb
rcl
mov
inc
sub
shl
jae
ficoml
mov
hlt
fmul
ds
pusha
imul
bound
icebp
xchg
push
lcall
mov
push
cmp
adc
mov
dec
stos
sbb
adc
xlat
sub
add
jmp
movsb
mov
jno
push
fnstenv
pop
lods
test
inc
dec
test
add
lods
sbb
ror
lock
add
mov
loop
add
cmp
mov
daa
mov
xlat
fidivrl
cmp
cmc
inc
hlt
jne
ret
jno
sbb
stos
jle
xchg
arpl
adc
in
addr16
aad
inc
loop
sub
sbb
aad
and
pop
fsubrs
inc
imul
pop
repnz
jecxz
aam
sub
mov
dec
ffreep
popf
in
cltd
aad
sbb
xchg
push
loope
inc
dec
scas
stos
out
nop
ljmp
aas
mov
mov
add
push
and
mov
es
mov
xchg
adc
popa
mov
je
movsb
inc
pushf
jg
xchg
imul
xlat
adc
js
xor
into
xor
push
xchg
cmp
rcr
xchg
popa
inc
negl
lds
stos
dec
pop
mov
and
xchg
add
xchg
and
loopne
int
je
fwait
jl
imul
ja
aas
stos
pop
mov
pushf
clc
test
inc
stc
dec
mov
xor
xchg
in
loope
mov
or
test
stc
inc
inc
adc
sbb
sbb
jle
jbe
aam
lea
cltd
insb
lahf
dec
inc
push
into
cld
repnz
xchg
sbb
loop
push
mov
loope
dec
andb
push
pusha
mov
test
xor
lret
add
mov
ja
and
sbb
pop
test
pop
lock
sbb
pop
sti
test
cltd
and
add
push
lea
adc
jae
or
test
clc
mov
add
or
add
adcb
jo
clc
hlt
cmp
pop
add
stos
mov
je
or
xor
fs
and
ss
int3
adc
sub
adc
and
jmp
test
push
stos
ja
dec
xchg
stos
push
xchg
fldl
in
out
or
push
sub
add
inc
fwait
cmp
or
aas
cmp
shrl
xor
idiv
xor
mov
add
jnp
xor
in
or
xchg
mov
jg
out
mov
cmc
ja
mov
add
adc
fldpi
scas
icebp
and
sbb
fbld
sbb
pusha
inc
int
into
scas
std
flds
cltd
arpl
in
lret
push
ljmp
pop
fldl
inc
insb
cmc
mov
inc
push
test
je
fimuls
das
out
ret
call
push
pushf
mov
jns
jnp
dec
testb
ret
fdivl
imul
pusha
sbb
mov
sub
popl
jmp
add
inc
dec
push
inc
pop
push
ret
popf
sahf
cmp
xchg
insb
shl
cli
fwait
mov
sub
add
outsl
mov
stc
push
repnz
xchg
adc
lret
sub
js
adc
in
push
push
insb
data16
lea
outsl
popa
lds
lahf
mov
xchg
or
mov
lcall
cs
mov
cld
jnp
roll
stos
dec
outsl
addr16
pushf
aam
pop
out
out
pop
scas
mov
inc
cwtl
roll
je
mov
push
sub
adc
pop
xor
lea
inc
lcall
adc
jmp
pop
scas
in
jbe
cmpsb
or
lea
ret
shl
and
sbb
test
call
mov
dec
inc
jmp
pop
inc
or
sub
test
sub
pop
inc
push
dec
inc
dec
outsl
std
pop
jns
fsubrs
in
cmp
mov
repnz
loopne
lahf
dec
sbb
cmp
pop
or
sbb
unpcklps
jno
scas
sbb
cli
shlb
call
dec
cmp
adc
inc
data16
and
adc
add
repnz
loop
shl
ret
xchg
mov
cmpsb
jb
bound
jbe
data16
and
adc
add
repnz
loop
shl
ret
xchg
mov
cmpsb
jb
push
xor
inc
data16
ss
push
loop
and
ret
xchg
mov
xchg
mov
cmpsb
push
ds
or
data16
xor
adc
andb
sbb
xchg
lds
sub
dec
jge
jg
ljmp
pop
adc
pop
sti
movq
jg
dec
fistps
cs
pop
out
jg
outsl
into
pop
fisttps
aas
mov
jnp
jg
fistps
das
sarb
scas
pandn
out
in
ljmp
neg
dec
scas
add
pop
outsl
and
cmpb
dec
call
jo
lahf
jg
add
or
xlat
out
cld
jl
inc
sbb
stos
and
xchg
sarl
add
mov
add
fiaddl
mov
out
push
push
inc
mov
pop
add
ljmp
push
mov
scas
mov
lahf
sub
xor
scas
aas
xchg
inc
outsl
in
lock
mov
xor
mov
adc
xchg
mov
pop
lahf
sysret
lods
or
pop
sbb
jl
push
scas
mov
call
inc
dec
pop
jne
js
lods
ja
pop
pause
ljmp
xlat
pop
mov
push
or
fcmovnu
inc
scas
aas
mov
outsl
jns
sub
pop
xchg
xchg
aas
push
setg
loope
sub
xchg
popa
in
dec
fiaddl
jbe
push
mov
cmp
fisubrs
mov
mov
push
push
fistpl
jno
arpl
mov
dec
jecxz
incb
in
sub
sub
mov
movq
jg
dec
fistps
das
mov
pop
out
jg
outsl
iret
pop
fisttps
aas
mov
movq
jg
dec
fistps
das
mov
pop
out
jg
mov
fsubl
dec
rorl
addb
pop
or
int
adc
and
mov
repz
sub
or
mov
jns
cmp
push
stos
scas
or
add
pop
fwait
and
mov
mov
int
push
in
lahf
mov
mov
bnd
scas
bound
jl
lcall
sbbb
mov
jne
aam
add
shl
dec
fisttpl
fwait
sub
imul
dec
xchg
rcrb
push
sar
jb
int3
fildl
out
inc
insb
inc
xchg
fldl
fldcw
push
or
and
outsb
mov
rorb
mov
inc
jb
jbe
jae
mov
inc
ss
cltd
out
push
shlb
js
into
adc
cli
out
andl
xchg
xor
sbb
leave
int3
mov
push
ja
out
mov
push
xchg
mov
repz
test
js
mov
ret
jbe
repz
xchg
es
push
insb
ss
popf
add
and
add
mov
xchg
daa
push
aas
fdivrs
in
inc
xchg
jns
ret
cmp
frstor
jae
jo
nop
dec
ljmp
scas
imul
jp
scas
push
std
or
repnz
cmpsb
sbb
pop
lcall
sub
icebp
mov
mov
inc
inc
hlt
mov
dec
mov
sti
rclb
dec
push
cmp
mov
out
mov
add
xchg
stos
mov
loop
test
cmp
and
ljmp
push
cmc
cmpb
add
mov
or
in
mov
mov
jmp
xbegin
jle
decl
pop
imul
imull
sbb
notl
mov
xor
insl
aam
clc
jne
cmp
ljmp
cmp
inc
xor
jecxz
xor
imul
mov
outsl
iret
pop
out
xor
lcall
add
mov
js
insl
cld
dec
add
mov
addr16
pop
dec
jge
xchg
lods
es
lea
pop
lea
arpl
fsubl
ret
test
gs
cmp
mov
lods
mov
ret
loope
and
bound
or
in
cld
pop
inc
inc
repz
clc
and
jne
outsl
pop
fisubrl
test
stos
cmpsb
xchg
dec
sub
mov
lret
jg
dec
pop
jo
or
insb
or
push
inc
ja
inc
cltd
sub
lcall
notb
imul
mov
pop
push
sub
addb
outsb
cld
pushf
xor
jns
cmp
outsl
pop
mov
repnz
outsl
and
and
int
cmpsl
adc
sar
mov
sub
dec
pop
faddl
or
test
mov
rcrb
iret
ja
mov
insl
sahf
lock
and
test
pop
fidivl
repnz
or
fstpl
push
mov
iret
ds
push
dec
imul
xlat
popa
jae
jle
pop
push
in
hlt
dec
test
mov
mov
int
xchg
add
sti
push
pop
mov
outsl
or
arpl
adc
mov
sbb
jns
jns
xor
dec
mov
jns
in
cmp
mov
ret
mov
repz
lahf
lods
int
scas
jno
cmpsb
pop
and
jo
jl
adc
inc
shlb
mov
mov
lods
inc
insl
mov
xchg
fiaddl
cmpsb
xor
into
in
outsl
out
into
mov
imul
adc
jmp
push
shrl
clc
xchg
lds
testl
add
jae
std
dec
mov
lea
fildl
stos
and
pop
xchg
sub
js
test
sub
xchg
push
mov
xchg
gs
jno
movl
mov
cwtl
xor
es
in
std
test
sub
movsb
mov
outsb
arpl
sub
or
cwtl
or
inc
jb
jecxz
sti
mov
pop
cmp
and
pusha
xchg
idivb
add
addl
mov
ror
lret
inc
lock
sub
xchg
ret
push
dec
sub
daa
gs
adc
mov
sbb
clc
sbb
loop
mov
sbb
mov
out
adc
into
cmp
cli
rorl
movsl
xchg
sub
adc
outsl
sub
cmpsl
jno,pt
inc
fisttps
xchg
repz
enter
icebp
imul
sbb
inc
xor
jle
andnps
sbb
jg
imul
and
outsl
pusha
in
aam
push
jmp
ss
and
mov
sub
mov
stc
popa
push
int
into
sahf
mov
gs
aam
out
stc
cld
ja
mov
jecxz
xchg
sti
pop
mov
xor
xlat
dec
and
or
adc
mov
xor
in
outsb
mov
add
cmp
pusha
jle
jbe
xor
in
and
inc
test
orb
and
sbb
mov
leave
hlt
add
bound
out
sbb
push
push
sar
pop
mov
adc
inc
sarl
mov
adc
cmp
inc
or
mov
lods
sbbb
xlat
scas
movsb
iret
xor
push
mov
cmpsb
in
and
lcall
sbb
outsl
dec
xchg
or
inc
push
and
cmp
lds
or
xor
push
inc
aaa
add
sub
pop
mov
mov
ja
xlat
pop
jbe
jp
ret
inc
jae
cmpsl
push
mov
xchg
loop
flds
inc
addr16
cld
cmp
push
aas
jecxz
add
jmp
popf
jp
fisubrs
out
test
iret
fnstenv
pop
or
pmaddwd
adc
fcompl
pop
pop
push
int
icebp
lret
mov
xor
jecxz
xchg
sti
adc
pop
sbb
push
push
lods
ds
and
jp
jmp
es
pop
std
retw
push
nop
mov
frndint
setns
cwtl
pop
add
dec
imull
sbb
pop
pop
and
cmp
inc
idiv
or
aad
fwait
pop
jae
aas
into
inc
mov
rcr
lahf
push
jo
xor
mov
inc
test
ss
ss
in
cmp
fdivrs
and
mov
sbb
pushf
jae
mov
ret
mov
mov
and
push
pop
sub
ss
or
push
sbb
ds
insb
dec
mov
xchg
cmp
adc
sar
or
add
shl
fistl
and
xor
lcall
adc
bndstx
aaa
jle
sahf
aam
in
je
incb
jb
out
testb
scas
scas
mov
mov
pop
adc
cmpsl
repz
dec
and
or
mov
mov
adc
mov
ss
ret
mov
hlt
mov
or
inc
sub
daa
nop
jmp
pop
pop
mov
ss
mov
das
ljmp
sbb
nop
inc
xor
mov
mov
lods
loope,pn
loop
push
sub
pop
cli
icebp
push
sbb
cmc
mov
jns
push
fdivp
push
fs
rorl
int
imul
jp
dec
sarl
and
jo
or
loop
pop
icebp
jge
jb
xchg
out
fcoml
js
sub
mov
iret
push
ja
mov
mov
fdivp
outsl
inc
sbb
ret
push
std
jnp
fisubrl
mull
jg
xchg
cmpb
lcall
mov
or
fldenv
xor
leave
sbb
jae
and
xor
adc
js
ret
jno
sub
fcomp
xor
sub
pushl
mov
mov
xchg
sub
pop
jae
lahf
xchg
cld
lret
fs
adc
iret
repz
lds
orl
lods
jb
mov
push
out
jns
pop
ljmp
pop
loopne
jnp
cmc
fistps
mov
mov
mov
mov
rcrl
daa
cmpsb
mov
fimull
or
mov
inc
data16
jmp
repz
idivl
ja
shlb
inc
sub
in
add
leave
out
arpl
js
add
xchg
cmpsl
fs
jp
mov
dec
icebp
arpl
out
cmpsb
sub
xchg
push
adc
push
loop
loope
pop
xchg
leave
cld
adc
insl
mov
jg
xor
gs
cmc
jmp
rclb
push
pop
mov
popf
je
popa
aaa
mov
xor
jb
jp
adc
pop
add
sub
mov
aam
push
sub
testb
mov
jle
jg,pn
shlb
jle,pt
mov
xchg
mov
jmp
mov
sub
dec
pop
jmp
in
es
cmp
fistpll
mov
aaa
aaa
jae
xor
dec
cld
xchg
xchg
sbb
cld
mov
insb
sbb
and
jge
sbb
push
aas
fstp
mov
inc
sbb
fs
bound
imull
mov
jb
in
pop
mov
or
out
dec
fsubrp
daa
int3
stos
scas
adc
xor
push
mov
addl
and
mov
cmovge
gs
popa
xor
mov
popa
sub
xor
andb
or
push
pop
lea
imull
daa
inc
inc
mov
or
pop
add
cmc
inc
adc
adc
ljmp
fidivl
mov
lods
dec
adc
popf
add
and
enter
push
in
mov
jo
sbb
push
rcrl
mov
js
adc
mov
es
aad
push
shrl
jnp
xchg
rcrb
sub
and
mov
push
movsl
lods
inc
repnz
aad
and
adc
jmp
mov
add
into
fsts
popf
or
clc
fstpt
add
idiv
idivl
shlb
mov
xchg
push
outsb
and
dec
mov
dec
test
inc
mov
mov
dec
mov
rcll
mov
sub
dec
cmp
add
dec
mov
mov
cmp
jge
cmp
pop
stc
insb
jo
sbb
or
outsb
mov
pop
xor
clc
pop
mov
fldl
xor
mov
addr16
mov
ss
setne
aam
jnp
push
lock
add
inc
xorb
mov
pop
popf
jmp
or
rclb
outsb
cmp
xor
sahf
aas
pop
and
cmp
fcom
jecxz
test
and
mov
cmp
stos
shrb
push
daa
outsb
mov
or
sub
sar
fsubrl
mov
jp
jb
repz
jmp
push
or
pushl
mov
ljmp
mov
jnp
out
push
inc
aam
xchg
ja
mov
xchg
pop
subl
push
and
sbb
mov
cltd
adc
add
sarl
out
fnstcw
arpl
adc
scas
sbb
sarb
cmp
or
push
test
xor
mov
xchg
inc
sbb
cli
mov
cli
mov
dec
out
inc
sub
mov
pop
adc
mov
shlb
mov
fsubrs
movsl
sub
push
shrl
sbb
xchg
sarl
lahf
and
ja
notb
xchg
xchg
shrl
icebp
mov
add
xorl
adc
dec
mov
fcmovnu
jge
fiaddl
test
push
rorb
scas
lcall
and
jl
push
dec
xchg
sub
lods
daa
xchg
xchg
pop
bnd
push
mov
mov
sub
cltd
mov
adc
inc
mov
sbb
gs
mov
sub
sbb
sub
ret
in
mov
sti
xor
es
mov
sbb
mov
mov
cmpsb
cwtl
in
or
push
cmc
cli
or
loope
add
test
mulw
lods
jecxz
or
cmp
mov
aaa
cltd
xlat
cs
adc
push
mov
and
pop
sti
nop
scas
cmp
cmpsl
xchg
inc
xor
jno
and
aad
rorl
iret
mov
ror
loope
inc
or
enter
aas
dec
test
rorl
jp
push
incb
sarb
add
cmp
leave
inc
test
test
aad
dec
mov
cmp
xor
loopne
or
mov
popf
addr16
mov
dec
inc
shr
aam
push
inc
sbb
iret
cmc
outsb
arpl
loopne
mov
insb
leave
adc
dec
or
fnstenv
cltd
mov
push
jge
cmpsl
into
clc
mov
xchg
add
lret
jnp
cmp
xor
mov
out
dec
popa
fstpl
or
push
ja
or
je
adc
jns
sbbw
loop
sbb
mov
sub
repz
add
jae
addb
hlt
or
push
jg
dec
mov
push
pop
jmp
mov
and
xchg
mov
ret
test
dec
mov
ror
mov
enter
out
sbb
popl
aam
xchg
cmp
ficoms
xchg
insb
pop
dec
cmp
int3
out
inc
or
add
or
or
mov
outsl
imul
insb
loop
mov
cwtl
popa
mov
enter
xlat
hlt
cmc
shl
movsb
icebp
or
xor
lock
pop
and
shll
sub
cmp
sbb
scas
xchg
bound
dec
ljmp
mov
inc
cltd
sub
lret
mov
dec
inc
movsl
imulb
je
inc
aaa
vpsubusb
mov
or
bound
arpl
loop
insb
movsl
in
mov
mov
decb
es
adc
int
pop
subl
push
enter
mov
idivb
lahf
sub
sub
add
clc
mov
aam
int
mov
dec
int
cmpsb
pop
adc
ljmp
jbe
dec
ja
fldt
out
outsb
test
ljmp
xor
push
ror
ficomps
xlat
test
xchg
ret
in
pop
mov
shrd
xchg
rcll
in
xchg
cmpl
xor
sub
call
mov
icebp
adc
mov
js
mov
xorl
inc
lret
cmp
outsb
ljmp
leave
test
jle
inc
jmp
sahf
cld
add
inc
call
aam
jl
in
fcmovnbe
pusha
push
imul
in
mov
ret
in
int
ljmpw
inc
test
push
push
mov
add
sahf
cmp
into
movsl
stos
and
or
fisttpll
mov
fsub
rcl
leave
cs
call
jl
aam
nop
cld
push
xchg
xor
pop
incl
xchg
out
imul
in
sub
addr16
lret
andb
jg
xchg
add
inc
repz
subb
jno
push
pop
or
sub
add
mov
push
xchg
jmp
insl
cmpsl
repz
shl
adc
pop
or
shl
cltd
sub
inc
push
sbb
pop
sbb
adc
aas
xlat
adc
push
out
loop
add
add
pop
push
push
fstpl
daa
adc
dec
sbb
adc
fisubs
mov
popa
adc
ret
pop
adc
call
dec
jno
mov
jmp
test
adc
insl
stos
push
pop
insl
push
test
movsb
add
lods
lds
fisubrl
out
and
mov
mov
pushf
out
ret
cmp
cmpsb
test
jbe
jmp
mov
xchg
inc
ljmp
fnstcw
bound
mov
test
dec
inc
mov
das
sarb
pop
imul
sub
add
addr16
fwait
xchg
movsb
test
scas
out
test
mov
mov
sub
rcrb
mov
mov
mov
lods
repz
aam
jbe
aam
test
nop
sahf
inc
jle
sbb
dec
mov
dec
roll
sbb
ja
shrb
adc
out
jne
mov
mov
mov
icebp
icebp
jmp
loope
cmp
cli
jo
mov
lock
sahf
cmp
leave
cmp
call
mov
shll
dec
dec
sbb
stc
dec
imul
cld
push
in
jecxz
mov
pushf
cmc
cli
out
stos
xor
jge
push
repz
cli
jbe
mov
pop
mov
xor
jbe
stos
sahf
js
mov
adc
scas
mov
sub
das
fildll
test
mov
popa
mov
sbb
xchg
es
pop
call
test
enter
daa
inc
push
test
mov
sarb
rorb
inc
jno
and
inc
ret
pop
loop
ja
and
cmp
shlb
or
ja
dec
aam
ficomps
aam
fistl
ret
mov
adc
lret
mov
mov
stos
mov
push
xor
mov
add
repz
ffreep
jecxz
ret
into
sub
sarb
xchg
cmpb
push
mov
pop
aaa
push
loope
dec
jmp
inc
jbe
in
mov
out
scas
stos
cmp
xor
int
js
inc
scas
adc
push
cli
loop
dec
daa
jnp
cmp
adc
int
lds
jns
add
ficompl
lret
sbb
cmp
push
pop
leave
mov
int
sub
sarl
cmp
pop
fdivr
jmp
mov
js
sti
dec
daa
pop
xlat
push
jg
xlat
and
cmpsl
adc
jnp
sti
jns
scas
push
pop
sub
insl
xor
iret
scas
int3
jecxz
inc
mov
push
in
out
jbe
enter
jnp
fsubp
dec
jne
aaa
adc
aaa
mov
test
mov
shll
int
mov
mov
rcrl
pusha
and
and
nop
inc
add
inc
gs
pusha
movsl
data16
xor
add
popf
and
jb
mov
pop
dec
in
loope
add
dec
and
xor
sub
mov
arpl
inc
gs
mov
lods
or
or
sti
add
mov
and
jmp
movsb
and
mov
int3
adc
mov
lock
insl
xor
sahf
xchg
std
fdivs
rorb
push
cmp
gs
ja
aaa
pop
js
pop
addr16
nop
rolb
repz
mov
imul
test
dec
push
out
mov
mov
out
mov
push
nop
rcll
addl
in
jb
pop
inc
mov
cmpl
cltd
aam
lea
rcr
fistps
add
cmp
push
mov
mov
xor
shld
lahf
addr16
xchg
push
mov
mov
mov
aas
cli
hlt
into
loop
pop
lret
fs
mov
fst
push
dec
jno
sub
xchg
dec
in
iret
push
jb
aaa
je
mov
jl
jmp
or
and
outsl
xchg
dec
sbb
loope
movups
in
js
or
out
mov
jg
lods
fildll
ja
fbstp
or
pop
sub
dec
pop
cmc
inc
fildl
mov
xchg
cmp
lods
loope
cmp
add
mov
inc
std
flds
or
jnp
lods
push
and
xchg
ret
stos
mov
cli
mov
outsl
cmp
mov
sti
gs
xchg
adc
jb
lcall
mov
cmp
jae
add
push
push
insb
inc
mov
mov
jno
fldenv
popa
xlat
or
loopne
std
fisubs
out
test
add
dec
pop
jnp
subb
mov
pop
jecxz
cltd
mov
or
xlat
mov
jle
inc
mov
int
sbb
cltd
in
imul
and
sahf
pop
mov
loopne
dec
mov
cli
je
inc
out
jge
dec
mov
push
mov
ret
xor
push
mov
loopne
mov
and
mov
sbb
add
lds
pop
jmp
adc
or
stos
iret
jne
inc
or
lock
shll
ljmp
sub
icebp
jge
mov
cmp
andl
test
mov
xor
aas
subb
mov
pusha
dec
jle
loopne
cwtl
dec
mov
jg
ret
hlt
pop
loop
mov
enter
lods
data16
je
ja
ficoms
test
cmp
mov
sti
pushf
mov
fstpl
or
inc
pop
jg
rcrb
push
std
inc
lock
mov
ja
sbb
lock
adc
fstl
inc
aam
cli
aaa
xor
mov
out
enter
cmc
sub
insb
mov
xchg
sarl
mov
and
xor
push
xor
inc
xor
cmc
jne
mov
add
fcomps
push
push
ja
dec
movd
ljmp
negb
imul
jb
fimuls
cld
push
mov
dec
repz
adc
xchg
jbe
or
and
xor
dec
scas
aas
mov
movq
jg
dec
fistps
das
mov
pop
out
jg
outsl
iret
pop
fisttps
aas
mov
movq
jg
dec
fistps
das
mov
pop
out
jg
daa
iret
daa
fisttps
aas
mov
movq
jg
dec
fistps
das
mov
push
out
jg
outsl
into
pop
fisttps
aas
mov
movq
jg
in
pop
mov
lock
loopne
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
mov
cltd
in
test
out
mov
adc
or
sub
imul
mov
lods
jmp
pop
sbb
sub
pop
sub
nop
les
xchg
rolb
dec
or
add
dec
and
push
sub
mov
int3
xchg
fiadds
or
shll
cmp
loope
and
mov
in
mov
bound
pop
push
je
test
mov
mov
dec
pop
rcrl
repnz
lcall
mov
or
repnz
pop
loopne
imul
or
ljmp
mov
out
and
xchg
aam
sub
push
mov
fisttpll
pop
lods
mov
cmc
mov
andb
jbe
in
mov
inc
push
jl
call
mov
int
or
jg
sahf
fisttpll
popf
leave
xchg
lods
jmp
inc
add
and
jae
js
mov
fsubr
lret
lock
cmp
sbb
sub
jns
dec
push
pop
adc
mov
call
stc
leave
repz
rcrl
jl
dec
or
push
push
cmp
cltd
mov
std
cld
cmc
cli
popf
fldcw
or
insl
sub
or
imul
mov
lods
jmp
pop
sbb
jge
or
imul
mov
sub
test
xor
push
inc
adc
or
push
icebp
push
orl
cmp
bound
xor
movsb
imull
adc
push
add
or
xchg
sarb
fnsave
xor
or
xchg
sbb
aaa
fdivrl
call
cmp
and
lret
pop
int3
jo
ljmp
mov
rclb
push
in
xchg
dec
sub
pop
fdivrs
inc
jns
ret
sti
pop
mov
adc
or
pop
insl
inc
nop
mov
jo
pop
iret
jg
mov
in
mov
dec
pop
lods
and
imul
fdivs
and
incb
aas
mov
sbb
std
and
clc
pop
or
out
pop
rcr
add
sbb
sbb
push
jae
test
jp
aas
popa
push
pop
and
lds
call
daa
dec
in
fwait
mov
or
jge
and
shll
or
mov
push
cltd
in
lods
in
cmp
pop
mov
xor
inc
push
clc
in
sub
shr
mov
loopne
dec
and
fnstsw
fdivrl
sub
daa
sahf
mov
adc
jns
mov
scas
mov
enter
ret
adc
mov
cmpsl
mov
dec
and
sbb
push
lock
mull
clc
sub
dec
mov
fldl
dec
add
and
aas
movb
pop
adc
ljmp
xchg
ficomps
cmp
cs
pop
adc
or
pop
je
bound
inc
ljmp
lock
cmpsb
incl
lea
xchg
pop
outsl
or
rcll
sbb
pop
push
clc
push
cmpb
movsb
in
pop
mov
ret
repz
divl
adc
mov
adc
fcmovu
xor
sub
add
mov
dec
dec
push
ret
dec
jmp
inc
mov
decb
jb
push
jns
test
push
fucomip
mov
lcall
data16
or
pop
jno
xor
sahf
inc
cmp
xor
pop
imul
scas
jecxz
adc
dec
cmp
js
cmp
inc
fwait
jge
mov
sahf
xchg
sti
pop
add
push
sub
popf
sub
jmp
and
mov
adc
push
sub
jge
mov
rcrl
shrb
leave
movsb
es
out
cmp
mov
in
push
insb
rcrb
push
fsub
stc
mov
stos
or
shlb
loope
movb
negb
mov
jg
sbb
fdivrs
imul
or
aad
xchg
mov
insl
cmpsb
xchg
pushf
and
ret
lcall
pusha
sbb
xchg
test
fisttps
xchg
idivb
clc
jmp
xor
pop
lods
pop
repz
or
mov
decl
loope
jae
push
jmp
adc
cmp
mov
adc
lods
dec
cmp
mov
outsb
fdivrs
push
fsubs
test
xor
dec
ret
mov
sub
jb
xchg
adc
call
test
adc
xchg
js
shlb
mov
sbb
sbb
mov
lds
inc
jbe,pt
pop
jnp
push
mov
andb
orl
paddb
shlb
sbb
dec
aam
fstpl
mov
icebp
call
pop
cltd
dec
lods
idivl
add
dec
rolb
and
xchg
cmc
add
stos
push
scas
push
lahf
push
call
sbb
xchg
outsb
push
in
mov
test
adc
pop
loopne
fs
or
loop
aaa
pusha
mul
aas
clc
addb
sbb
mov
rorb
or
pop
or
popf
pop
xchg
inc
stos
pop
sahf
push
call
mov
pop
xchg
cmpsl
or
test
les
sbb
mov
sbbb
mov
sbb
insl
mov
xor
iret
imul
aam
pop
add
outsl
xchg
xchg
sub
xchg
repnz
shll
sub
outsb
cli
scas
fs
inc
jns
adc
or
jne
mov
popa
jne
imul
sbb
cmp
imul
in
fs
ljmp
out
jl
fisttpll
jp
pop
aam
push
cmp
cmp
sub
pop
nop
or
pusha
inc
cmovs
cmc
inc
pushf
xchg
rclb
arpl
imul
mov
and
fistl
lea
sub
cmpsb
adc
or
jmp
sub
cld
push
pop
loop
cwtl
and
sbb
push
cmpsl
pop
iret
sbb
popa
xor
cmp
push
aam
pop
das
in
mov
xchg
dec
push
sarb
push
ret
mov
movb
mov
in
cmpb
mov
cmpsl
mov
stos
jecxz
ja
pop
stos
xor
fwait
mov
mov
mov
push
out
pusha
test
loope
xchg
stc
inc
movsl
movsb
inc
test
shlb
mov
scas
dec
push
leave
mov
and
pop
adc
add
push
or
shrl
stos
and
and
dec
add
add
mov
out
jno
stos
jne
and
nop
mov
xor
xchg
inc
xor
je
out
leave
sub
rorl
mov
cmp
xor
ret
lea
jle
iret
add
stc
es
pop
pop
xchg
xchg
popa
push
aas
lods
loope
xchg
dec
xchg
sbb
fistpll
or
or
out
push
fdivrs
mov
mov
dec
loope
push
push
lahf
adc
sub
mov
cmp
es
inc
in
fxam
push
mov
cmp
inc
mov
imul
jge
and
out
imul
outsl
je
mov
stos
fwait
or
jecxz
jle
lods
add
ror
add
aaa
xchg
in
adc
mov
cltd
sub
jp
adc
scas
sbb
test
jmp
std
aad
mov
int
jp
mov
mov
test
into
les
inc
repz
adc
pop
inc
pusha
addr16
mov
push
jae
mov
adc
add
aaa
sbb
imul
adc
adc
popa
or
jge
and
movsb
js
dec
lea
push
xchg
cli
add
sarb
ss
push
adc
mov
and
sbb
in
dec
mov
sub
test
movsl
mov
pusha
testb
outsl
and
insl
push
mov
xchg
mov
mov
jg
scas
inc
pop
xchg
sahf
into
push
add
xchg
pushf
push
mov
pushf
jb
jnp
je
jb
fistpll
adc
ljmp
sub
in
mov
imul
jne
cli
xchg
dec
mov
icebp
or
jo
pop
dec
adc
xchg
in
mov
popf
push
pushf
sub
cltd
lods
icebp
jge
outsb
cs
aas
mov
mov
or
mov
outsl
cli
xchg
mov
inc
shrl
adc
out
cmp
jo
dec
or
mov
dec
sbb
int3
pop
test
adc
xchg
lods
pop
adc
xchg
lret
movsl
or
xchg
pop
stos
or
adc
xchg
int
ja,pn
push
cmc
sub
in
scas
lock
loop
xor
or
or
xor
jmp
call
ds
movsb
fstpt
xor
addr16
xchg
or
and
and
sub
in
sub
mov
mov
rcll
mov
jnp
push
sbb
pop
push
sarl
lcall
jne
cmpsb
push
mov
dec
add
push
and
or
add
or
cmpsl
int3
push
jg
shrl
aaa
movsb
lea
scas
push
call
xchg
adc
int3
popf
shrl
xor
push
sub
xlat
out
in
lock
mov
lea
pop
sbb
arpl
mov
adc
or
or
sbb
and
cltd
add
lahf
pop
scas
fcmovb
out
jp
and
lock
mov
loope
fucomi
lods
mov
call
xor
push
and
push
insl
test
loope
mov
call
xchg
cld
addl
mov
cmp
or
sub
sti
and
pusha
or
pop
push
add
dec
jecxz
cmp
out
add
addl
or
pop
neg
inc
int
les
das
push
push
pop
cld
repz
jl
jmp
xor
push
cmp
cld
cmp
mov
xor
mov
inc
adc
sub
sub
cmpsb
adc
push
mov
adc
push
jge
movl
adc
clc
stos
and
mov
jg
fildl
xlat
sbb
fwait
sti
jle
jp
loop
cli
ss
adc
scas
xor
jmp
je
sub
jno
out
and
and
mov
sti
jmp
xchg
imull
mov
mov
push
je
in
inc
adc
pop
mov
sbb
mov
data16
lea
or
arpl
xor
in
inc
push
push
and
push
imul
add
and
push
out
mov
fmuls
popf
out
inc
outsb
xchg
pop
and
jmp
add
mov
lods
jle
sbb
or
repz
gs
pop
addr16
push
pop
out
cli
call
leave
mov
rcll
cmpsl
mov
cwtl
push
fsubrs
pop
fwait
inc
inc
andb
insb
xchg
mov
loop
ss
shrb
ret
jno
cs
imul
dec
loope
xor
dec
adc
mov
lcall
inc
add
mov
or
inc
addr16
les
in
add
ffree
mov
popa
inc
int3
fldcw
jg
insl
sub
movsl
inc
push
jmp
add
insl
out
xlat
or
push
adc
and
or
cmp
icebp
lods
sbb
inc
movsb
ret
sub
push
in
add
and
mov
add
cltd
nop
mov
lock
cs
add
and
cmpsb
jmp
push
test
shr
mov
mov
and
jnp
or
insb
call
int
xor
mov
jo
adc
pusha
mov
cs
sub
and
aam
shll
js
sub
adc
orl
pop
inc
ja
jg
sbb
inc
shlb
push
add
test
scas
jbe
push
jg,pn
cli
push
fdivr
scas
adc
add
pop
movsb
sbb
stos
jle
pop
pop
bnd
js
fwait
outsb
xor
sbb
pop
jae
in
out
movsl
pop
pop
mov
or
push
out
test
jno
xchg
push
adc
push
popf
out
dec
into
pop
in
dec
add
xorl
into
je
jb
xor
push
filds
pop
jbe
and
lahf
lcall
dec
mov
popf
stos
movsl
cmp
lcall
daa
and
movsl
mov
cmp
pop
lret
and
jge
or
out
jl
sbbl
ljmp
pop
xlat
sub
stos
fwait
gs
pop
pop
fst
scas
push
and
fs
xor
add
cmp
pop
dec
push
sub
xlat
and
cwtl
pop
push
shl
push
lahf
mov
jnp
cltd
fildl
cmp
pop
testb
ret
mov
push
ja
pop
loopne
lock
mov
inc
push
dec
lds
add
pop
iret
jo
xor
addl
dec
test
mov
insb
mov
mov
mov
int
push
mov
and
fidivrs
dec
push
and
push
les
js
int3
lret
sbb
xor
push
mov
sub
push
cmc
dec
xor
xchg
mov
sub
add
scas
jnp
cmp
sbb
and
loopne
add
lock
sti
aad
jp
sbb
lds
and
jecxz
push
fsts
cli
mov
clc
in
lds
pop
add
sbb
add
mov
adc
nop
fwait
andb
outsl
je
pop
jno
shrb
daa
xlat
scas
xchg
jns
or
fadds
in
out
add
in
and
ret
adc
test
les
enter
and
cltd
mov
int
pop
ret
adc
pop
push
mov
pop
cmp
ljmp
sbb
enter
mov
push
cmp
mov
cmp
push
sub
fbld
scas
inc
movsl
mov
pop
dec
fnstcw
mov
scas
cs
cmc
jmp
xchg
mov
mov
mov
xlat
pop
cltd
cmc
adc
ret
addr16
mov
aam
into
scas
xor
mov
fdivp
add
xchg
cmp
or
stos
and
push
add
jle
into
and
sbb
std
inc
test
or
cmp
and
clc
aad
rcl
cs
loop
lea
xor
jecxz
dec
sub
stc
fwait
lret
test
push
imul
jecxz
ficomps
repz
add
into
push
xlat
test
sbb
popa
mov
subl
xchg
dec
cmp
dec
pop
sbb
push
ret
pop
mov
push
pushf
out
xorl
outsl
cmc
data16
sbb
push
sbb
xchg
and
bound
fldln2
jnp
mov
outsb
or
hlt
insb
iret
repz
movsb
fidivl
xor
data16
fisubrs
movsl
pop
dec
pop
bound
jo
shlb
jbe
out
cwtl
xchg
sbb
push
in
in
mov
fidivl
cmp
inc
repnz
mov
push
in
inc
lods
inc
stos
pop
push
mov
imul
push
test
mov
mov
xchg
jbe
adc
adc
mov
clc
popf
lret
mov
lahf
xchg
js
outsb
mov
pop
and
pop
repnz
or
push
int
dec
mov
pmaddwd
insl
sub
icebp
mov
jo
psubq
lret
adc
fnstenv
cmpsl
scas
pushf
push
add
cltd
nop
mov
mov
add
dec
and
add
mov
pop
inc
aad
add
roll
into
xchg
les
jmp
push
adc
cmc
push
cmpsl
inc
add
enter
scas
mov
stc
fnstcw
cmp
pop
or
aaa
inc
lds
add
shll
or
lods
das
jp
dec
fsubs
gs
ret
adc
test
mov
add
movsl
cmp
pop
inc
popa
and
xor
and
daa
mov
gs
popa
rorl
inc
fdivl
push
mov
fsub
icebp
js
into
sarl
inc
jno
xchg
movsb
mov
push
cmpsb
or
xor
pop
dec
pop
push
fs
fdivrl
cld
out
cmpsl
lret
xor
ss
xchg
cmp
pop
cmpsl
sarb
jno
ja
dec
ljmp
in
lret
in
gs
add
enter
mov
imul
mov
dec
mov
and
aad
mov
rorb
pop
rcrl
out
shlb
adc
mov
leave
repz
xor
shlb
adc
fsubs
mov
pop
cwtl
sub
in
jo
mov
mov
xchg
cld
add
mov
mov
or
fcomps
sbb
lcall
lcall
lock
push
outsl
int
out
cwtl
in
adc
jmp
data16
sub
aas
out
mov
insb
sbb
dec
and
rorl
rorl
xchg
test
rorb
in
nop
add
add
sbb
pop
xor
cmpsl
inc
sbb
andb
icebp
icebp
sub
xchg
pop
or
enter
xchg
or
iret
lock
dec
add
and
fmull
iret
es
pop
pop
mov
xchg
add
es
inc
stos
sub
inc
adc
xor
ljmp
mov
adc
lds
push
insl
push
jmp
sti
repz
pop
jp
scas
ficompl
nop
ret
stos
mov
dec
imul
cld
push
lods
jae
inc
out
or
push
adc
mov
dec
mov
xor
mov
in
pop
hlt
or
xor
loop
andl
jge
imull
and
jp
inc
loop
ret
mov
pop
popa
and
sub
or
push
inc
adc
je
pop
mov
lds
pop
mov
out
movsb
sub
inc
xchg
imul
out
xchg
push
and
testl
mov
into
fisttpl
aam
jae
loop
test
xchg
push
les
xchg
mov
inc
test
scas
pop
div
dec
stos
mov
and
aas
lret
fidivrs
and
add
or
add
out
ret
outsl
or
and
dec
inc
popf
lock
xlat
dec
cli
jo
lret
mov
pusha
sbb
pop
jge
lods
jns
adc
pop
es
imul
cmp
push
test
adc
sub
std
repz
loop
jno
mov
fwait
test
rclb
cmp
rcl
int3
xor
mov
int
mov
push
xchg
dec
gs
dec
jp
jge
mov
jns
jecxz
mov
mov
ds
inc
cmc
rolb
dec
mov
cltd
xchg
dec
jl
mov
xorb
and
pop
and
or
lods
xchg
adc
and
jae
stos
outsl
pshufw
mov
movsb
cmp
and
xchg
imul
cs
and
push
inc
inc
fildl
loope
imul
js
les
lods
mov
ret
adc
mov
scas
lahf
jb
stc
cmpsb
jle
inc
es
inc
dec
mov
clc
repz
xchg
cmc
push
pop
bound
sub
mov
cmpsl
mov
rolb
and
mov
mov
ljmp
into
aas
mov
lret
js
xchg
sub
data16
push
mov
or
jae
outsb
push
or
lea
shl
xor
and
ja
xor
inc
fstl
cmp
lretw
add
jp
jb
mov
xchg
cltd
int3
and
inc
mov
faddl
pop
addr16
sbb
xchg
mov
sub
pop
mov
dec
xchg
in
ficoml
sub
xor
iret
inc
dec
daa
repnz
jle
lock
mov
in
inc
xchg
jns
repz
xlat
sub
hlt
adc
and
rdpmc
jle
mov
mov
dec
or
xor
and
cmp
je
shrl
pop
lahf
jb
aam
push
sbb
cmp
add
jo
cmpb
sbb
mov
dec
fwait
pop
arpl
inc
repz
inc
push
mov
jp
lock
pop
mov
test
xor
aas
xor
rorl
lret
sbb
inc
add
in
mov
xor
dec
lea
adc
pop
inc
cli
lock
movsl
loop
out
ret
cmp
fsub
subb
push
cli
sti
xchg
out
outsb
inc
pop
or
cmp
je
mov
aas
lret
lds
cmp
outsb
pop
pusha
sbb
out
movsl
outsb
in
xchg
mov
bnd
sub
lahf
lods
adc
jecxz
outsl
add
addr16
stc
shll
jnp
inc
ret
ljmp
mov
aaa
movsl
mov
sub
xlat
xchg
jae
call
imul
fidivl
js
pop
popf
xchg
dec
loope
mov
jb
and
xor
cmpsb
inc
setp
mov
push
leave
cmp
insl
mov
insb
lock
push
fcom
and
add
adc
or
sub
dec
push
lahf
cld
jge
dec
mov
cli
add
lret
or
mov
lahf
gs
xor
test
pop
int3
pop
or
mov
fists
imul
dec
adc
pop
push
pop
or
lods
mov
daa
pusha
sub
cmc
inc
cltd
jns
hlt
inc
push
bnd
movsb
out
adc
xchg
int3
js
and
add
in
shlb
mov
inc
push
jmp
and
sbb
pop
fnstsw
sbb
add
mov
jne
mov
mov
pop
jl
insb
in
gs
sbb
outsb
mov
dec
add
repnz
bound
or
cli
mov
cmpsl
sub
fldl
adc
and
cmpsl
ja
jnp
and
or
xor
sbb
mov
loopne
lret
fwait
push
outsb
and
popa
hlt
mov
clc
or
fidivl
push
jmp
icebp
loopne
je
fs
or
pop
divb
and
inc
mov
pop
lcall
mov
mov
or
ljmp
adc
add
scas
push
out
push
ds
ret
nop
xor
inc
out
fwait
push
mov
mov
lods
jmp
pop
sbb
jge
or
imul
mov
lods
jmp
pop
sbb
jge
or
imul
mov
lods
jmp
pop
sbb
jge
or
insl
or
stc
jmp
mov
sub
or
dec
jp
xchg
rclb
ret
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fnstsw
sub
pop
in
dec
sub
mov
out
in
insl
int3
sbb
pushf
sub
insb
std
pop
in
dec
popf
cmp
sub
sbb
and
dec
in
jge
arpl
sbb
pushf
sub
stos
in
cmc
cmp
lods
ds
cld
outsb
iret
and
lret
jp
mov
mov
sub
xor
int
ja
adc
sahf
xor
mov
pop
jg
scas
test
push
mov
sub
repz
adc
test
rol
and
xor
pop
rorb
aad
in
insl
push
or
mov
inc
fucom
xor
dec
sub
insb
xor
leave
dec
bound
mov
fsubrl
dec
and
and
stos
inc
xchg
jo
or
sub
pop
fisttps
cmp
or
add
sub
pushf
bound
fisttps
movsl
or
add
cmp
jmp
adc
aam
std
sub
dec
mov
sahf
inc
cld
push
inc
fidivs
adcb
mov
test
cwtl
xor
inc
lock
scas
sbb
call
lods
sub
outsb
lea
jne
aas
push
popf
sub
sbb
stc
dec
mov
xor
sub
sbb
or
cld
dec
in
jge
insl
int3
sbb
pushf
sub
insb
std
pop
in
dec
popf
cmp
sub
sbb
or
cld
dec
in
jge
insl
int3
sbb
pushf
sub
cmp
sahf
mov
xchg
jge
dec
in
jne
push
jle
xor
fbstp
outsl
xchg
cmpsl
xchg
cmp
push
mov
hlt
mov
aam
and
jp
push
arpl
and
int
mov
mov
cmpsl
mov
mulb
pop
mov
cli
push
mov
pop
fsubrl
sbb
scas
or
pop
adc
mov
mov
fmulp
xchg
stos
push
inc
sub
aaa
cmc
test
adc
gs
cmp
jp
jecxz
lods
popf
stc
imul
dec
adc
dec
add
imul
mov
fwait
mov
mov
int
hlt
mov
push
imul
sbb
jmp
add
cli
dec
jmp
jae
insb
xor
pop
add
inc
in
xor
sbb
js
adc
xor
rcll
iret
repnz
mov
xchg
call
cli
out
jns
pop
mov
out
ret
xor
repz
mov
mov
jmp
out
ljmp
mulb
jecxz
jno
xlat
push
loopne
popf
jl
jmp
je
int
je
jecxz
jne
add
into
pushf
mov
decl
cld
inc
arpl
bound
sub
stos
cmp
mov
jp
insb
xchg
sub
mov
ror
jns
sbb
xorb
push
js
sub
sbb
mov
enter
or
pop
pop
arpl
inc
ss
dec
movb
stos
notb
or
mov
jmp
in
jno
jecxz
sbb
test
push
mov
lds
xor
xor
lret
jo
fs
mov
repz
je
dec
inc
sub
jno
or
cmc
cmp
cmpsl
cwtl
pop
mov
out
aad
std
mov
sarb
gs
push
jp
or
ficompl
fistps
xchg
xlat
xor
inc
mov
mov
gs
xorb
sbb
sarl
mov
sub
shlb
dec
aam
pop
adc
mov
daa
aas
nop
pop
jbe
sub
outsb
mov
iret
repnz
mov
lds
outsl
xorb
push
mov
jle
and
es
lods
xchg
push
lods
adc
lods
popl
ret
fcoms
xchg
sub
stos
in
xchg
pop
inc
test
hlt
test
movsb
fsubp
pop
cmpsl
adc
jae
xchg
adc
dec
add
sbb
mov
outsb
dec
shlb
sub
aaa
std
sti
mov
fsts
sahf
adc
out
inc
adc
out
mov
jp
xor
or
pop
xchg
adc
ds
andl
xor
mov
lret
dec
sbb
inc
shlb
xor
pop
fnstsw
xchg
mov
add
dec
xchg
shll
les
mov
lock
and
inc
add
dec
loope
sti
std
ret
test
xlat
insb
imul
in
mov
lea
adc
addb
xchg
out
popf
stos
add
pushf
inc
lods
pop
pop
sub
sbb
push
cmpsl
insl
add
aam
nop
mov
bound
scas
fsubs
js
inc
cmc
push
mov
sbb
fidivrl
clc
cmp
adc
outsl
xchg
and
leave
push
xchg
mov
xlat
jnp
test
push
imul
test
xchg
stc
cld
adc
mov
aaa
bound
fs
outsl
pop
sbb
cmp
movsl
mov
inc
push
cmp
cmpsl
push
add
push
jb
inc
push
leave
pop
inc
xor
mov
mov
push
cmp
fnstsw
push
js
xor
jp
mov
lea
notl
or
test
adc
mov
pop
xlat
out
lcall
das
lods
cmp
inc
cmp
push
adc
outsl
push
pop
cmc
mov
push
sti
sbb
loop
ds
push
mov
fmulp
in
mov
dec
fs
notb
xchg
adc
push
sbb
inc
lods
push
fxtract
adc
inc
mov
push
fnstcw
xchg
push
loope
scas
sbb
iret
jle
stos
mov
sbb
xor
cmp
xchg
inc
dec
push
mov
ljmp
outsb
aam
mov
sbb
pop
imul
out
leave
into
cmp
or
mov
sti
sbb
dec
and
mov
adc
lods
sbb
xchg
pop
int
inc
repz
pop
imul
pop
test
adc
inc
or
daa
sub
js
lea
pop
jno
mov
and
sti
bound
lret
pop
insb
add
inc
mov
xor
dec
cmp
decl
mov
or
mov
loope
inc
insl
xchg
sbb
xor
jge
outsb
xchg
out
mov
adc
sbb
test
mov
xor
pop
imulb
lods
xor
lods
push
xor
mov
fmull
int
pop
bound
xchg
mov
in
scas
jnp
iret
jno
mov
les
inc
xchg
push
or
inc
jg
mov
push
and
mov
lea
add
xor
mov
ljmp
or
bnd
mov
sahf
sub
lds
call
lock
adc
push
mov
mov
push
js
pop
rolb
add
and
xor
shl
in
popa
xor
mov
addr16
lods
xor
xor
rcll
call
mov
shl
enter
repnz
out
or
pop
xchg
cmpsb
int
cmp
mov
pop
mov
into
jne
mov
push
movsl
pop
fisttpll
cmpsl
adc
inc
pusha
orb
mov
sarb
imul
cmp
int3
jge
cmpsl
test
popa
rcrl
cmc
lea
imul
adc
lcall
mov
cmp
popa
jae
rcrb
add
cs
xor
in
int3
pop
bound
mov
stos
pop
insl
cmp
mov
adc
cmp
fnstenv
cmp
stos
stc
lods
sbb
add
jp
rcr
out
mov
sbb
dec
and
sub
inc
sbb
mov
out
cmp
push
aad
fucomp
stos
mov
mov
clc
mov
lea
mov
dec
lods
js
pop
add
jmp
fwait
rcrl
decl
push
mov
aas
jb
fs
pop
inc
pop
shr
in
mov
into
pop
sbb
xchg
mov
test
in
xor
shrb
jnp
mov
mov
inc
fldt
mov
mov
cli
jecxz
push
scas
xchg
mov
int
das
inc
aam
xor
jnp
addl
mov
in
mov
inc
fidivl
fcomp
mov
cld
lret
push
push
jg
sub
aas
pop
outsl
rclb
rorb
rcl
cmc
push
jno
out
inc
cld
stc
ret
xchg
out
cwtl
xor
cmp
pusha
cmpsb
mov
push
xchg
mov
insl
jo
cmp
jbe
xor
xorb
cmp
xchg
xchg
jns
lret
fistps
es
add
fs
cmp
add
hlt
sbb
mov
dec
aas
out
xor
inc
jle
fisubl
and
jg
mov
lret
movsb
jl
loopne
addr16
push
adc
dec
std
in
dec
stos
repz
mov
mov
sub
popa
jb
andl
iret
and
xor
xchg
addl
adc
jnp
pop
jl
sbb
cwtl
push
mov
mov
mov
dec
pushf
loop
lock
jl
int3
cmp
out
jmp
and
xor
cmp
dec
in
sub
movsl
sbb
cli
icebp
xor
add
mov
cwtl
inc
rcll
and
lret
jno
inc
mov
push
adc
and
xor
cmpsl
xchg
pop
push
mov
movsl
xorl
mov
pop
clc
or
push
jbe
lods
xor
bound
mov
in
negl
jns
leave
hlt
dec
cmpsb
mov
notb
test
shrb
aaa
dec
xor
lock
jg
add
xchg
cmp
and
ficompl
adc
mov
xlat
jns
inc
fsubs
out
scas
mov
ds
lock
cmp
inc
outsb
mov
ljmp
pop
pop
or
scas
mov
ja
test
lret
mov
mov
dec
insb
iret
jne
stos
push
ret
sarl
jbe
stc
pop
jl
push
push
ljmp
mov
nop
sub
mov
sbb
mov
push
mov
test
enter
sub
lret
insb
cli
stc
outsb
stos
adc
loope
mov
xchg
and
movb
xchg
outsl
scas
pop
push
in
pop
test
mov
mov
ficompl
sbb
test
ds
cmp
mov
imul
out
jmp
xor
je
addr16
popf
int
loop
xor
sbb
mov
insb
cs
in
mov
mov
fisubl
or
mov
cmp
adc
xor
cmpsb
js
mov
rcll
or
in
pop
arpl
add
sbb
mov
sbb
mov
test
aam
sub
push
sbb
cmpsb
ret
sbb
cmpsl
push
negb
pop
roll
iret
jno
pop
fnstcw
pop
cmp
adc
ja
dec
xor
jno
cld
lcall
movsb
loope
dec
rorb
add
out
pop
ja
mov
jecxz
repz
and
js
data16
or
sub
and
bound
sub
xchg
xchg
pop
jmp
ss
push
xchg
lods
cmp
repnz
out
out
cmp
fbld
js
and
pop
dec
fisttps
sub
cmp
sub
xor
mov
jl
jmp
out
ficoml
sbb
test
mov
mov
fwait
jg
mov
divl
and
int3
add
mov
push
addl
jae
dec
dec
clc
orl
mov
push
ss
push
in
mov
inc
std
insb
adc
fcoms
dec
call
add
lahf
sub
in
jg
stos
push
mov
insb
push
inc
decl
daa
enter
push
xor
dec
ficoms
mov
ja
jmp
fcoms
jecxz
ja
add
imul
dec
shll
clc
addr16
int
lods
pop
mov
cmpsb
cmp
movsl
stos
or
jnp
mov
push
in
add
mov
mov
cmp
mov
fidivs
xchg
insb
enter
xchg
outsl
mov
test
pop
dec
or
mov
sub
insb
adc
out
movsl
test
shll
lods
jno
pop
mov
cmc
jle
mov
jg
gs
mov
or
sub
sahf
stos
push
mov
jno
call
outsl
inc
adc
push
in
mov
lret
xchg
dec
leave
std
mulb
cmpsl
adc
int3
bound
xchg
andl
adc
cmc
and
mov
bound
test
adc
xchg
sub
xchg
pusha
jmp
cli
prefetchw
jp
out
push
mov
jg
pop
lcall
or
xchg
mov
lea
cmc
adc
and
jbe
in
push
les
aas
and
xchg
cwtl
pop
ljmp
enter
into
mov
mov
xor
or
xor
jae
rcll
icebp
or
mov
test
sbb
lret
pusha
push
mov
pop
pop
cmpl
es
mov
and
sbb
jns
fwait
ds
stc
or
xchg
stc
and
mov
leave
sbb
cmpsl
cwtl
jle
sbb
iret
lds
lret
pop
mov
cmpsl
vpcmpgtd
aas
lock
sbb
fstpt
or
fstp
pop
inc
push
cli
mov
sub
loopne
cs
sbb
mov
cmpsb
push
xchg
lahf
sub
sbb
pop
fisttpl
inc
fs
pop
popa
push
fdivl
cli
adc
add
jb
push
int3
push
adc
mov
or
cmp
push
xchg
imul
es
add
ret
outsb
jp
mov
addr16
push
sti
cmpsb
adc
sarb
dec
push
test
pop
enter
movsl
cmp
push
ds
xlat
inc
je
jo
sahf
cmp
popf
adc
jnp
sahf
in
scas
push
lret
ds
gs
and
testb
bound
sub
adc
sub
aam
fidivrs
xchg
mov
cmpsb
xchg
push
and
aaa
sub
xchg
cmc
pop
enter
bnd
pop
adc
pop
push
cmp
pop
sbb
sub
inc
addl
or
js
flds
xlat
jg
mov
clc
cmp
push
xor
enter
mov
or
sti
rcrb
xor
mov
lds
lcall
push
or
pop
push
std
test
fisttps
inc
mov
sub
jmp
mov
js
push
jb
adc
mov
pop
fsub
test
dec
clc
scas
rcrl
or
mov
jg
inc
pop
shlb
fistl
std
fninit
idivb
dec
orb
mov
or
xchg
sub
mov
mov
test
sub
jnp
sbb
fdivl
xchg
sbb
push
lcall
jae
sub
data16
dec
loope
mov
decb
in
gs
js
pop
cmp
mov
aam
mov
rclb
xchg
inc
or
mov
inc
bound
lods
and
push
jecxz
push
jae
and
mov
loopne
in
popa
pushf
test
clc
xchg
pop
add
mov
or
xchg
loopne
push
lods
outsl
addr16
mov
popa
mov
mov
xor
loopne
sbb
cld
out
and
jg
cmp
add
jmp
mov
add
xor
push
dec
incb
push
test
sbb
adc
mov
loopne
test
sub
mov
cmc
inc
cmp
cmpsb
outsb
pop
int
les
pop
outsb
jge
loope
movb
mov
mov
adc
in
sbb
icebp
call
dec
aam
int
int3
mov
cmp
xchg
xchg
pop
mov
sarl
sar
and
pop
inc
xlat
aam
pop
sbb
xor
in
cmp
test
dec
push
dec
es
dec
pop
daa
cwtl
into
aam
and
test
pop
jecxz
fwait
orl
inc
push
mov
loopne
into
jge
mov
pop
mov
shl
arpl
pop
loope
ja
out
mov
shr
insl
gs
cs
mov
cmpsl
sub
cltd
sub
sahf
cs
and
mov
rorb
fadds
pop
ss
outsb
xchg
push
cmp
push
dec
js
insl
pop
mov
push
mov
jb
mov
into
sti
push
or
xchg
add
fisubl
loop
sub
jo
cmp
mov
popa
add
push
je
jecxz
addl
mov
jecxz
pop
adc
pop
adc
cli
outsl
stos
cmp
dec
in
lods
cmp
je
add
adc
push
dec
fistps
cmp
xchg
sub
lock
sbb
inc
jae
cmp
dec
insb
pop
pop
jne
shlb
cmpsb
jge
pushf
sbb
into
push
mov
push
pop
dec
fcoms
stos
call
js
xor
xlat
inc
mov
shll
into
inc
sbb
int
jmp
out
ror
inc
icebp
xlat
inc
lahf
sbb
rorb
xchg
pop
addb
andl
movlps
fcomi
sub
and
sbb
inc
scas
mov
add
popa
jl
mov
jnp
pop
mov
xor
push
add
int3
stos
jl
mov
sbb
and
or
fdivp
lds
rorb
xchg
jle
js
movsl
cmpsb
cmp
clc
out
out
loopne
mov
clc
ds
in
jns
bound
pop
or
aaa
insl
mov
cmpsb
jne
out
cmp
bound
je
jmp
dec
es
das
fisubrs
push
inc
addb
js
mov
in
add
flds
pop
repz
pop
pop
fmulp
pop
add
mov
test
jnp
js
push
js
insl
jp
xor
sub
mov
nop
add
lds
push
lahf
jne
pop
pop
mov
xorl
pop
ja
test
push
inc
xchg
ffree
les
pop
push
dec
outsb
mov
lret
dec
mov
and
sahf
hlt
insl
aad
and
jle
xchg
paddw
mov
nop
jmp
out
cmp
ljmp
add
push
std
je
jb
jg
cmpsl
nop
fildll
cld
adc
and
movzwl
out
sbb
icebp
sub
in
pop
mov
icebp
aas
lret
ror
inc
lret
outsb
sub
in
mov
inc
popf
inc
cmp
jmp
out
jp
and
lret
cmp
lock
sbb
int
mov
pop
add
shr
dec
mov
movsb
lods
push
and
jbe
aam
push
inc
loop
test
repnz
xchg
xor
inc
cmp
sbbl
xchg
push
push
out
mov
stos
mov
cmp
filds
div
stc
mov
inc
pop
adc
mov
lret
loopne
push
sbb
popa
sub
mov
in
out
mov
sub
ficomps
mov
notb
mov
cmp
ret
adc
aaa
les
xlat
push
ss
pop
adc
cmp
xor
lcall
xor
scas
push
jnp
mov
jb
jno
or
mov
sub
insl
in
sahf
daa
cmpsl
xor
pop
pop
int
cmp
add
xchg
in
mov
and
lods
stos
mov
pop
outsl
xor
adc
adc
imul
and
test
lods
call
pop
ret
mov
fisttpl
lret
sahf
fs
fucomip
mov
in
stos
jmp
push
jb
js
or
jle
in
insb
xor
sar
rorl
and
fbstp
imul
sub
in
xchg
jg
movl
js
aaa
xlat
pop
add
mov
loopne
mov
mov
inc
gs
fmuls
pushl
lods
popf
pop
addr16
inc
or
test
or
imul
pop
fistpll
dec
notl
fldenv
pop
roll
test
pop
mov
in
cmpsb
mov
adc
sarb
call
data16
sub
sti
xchg
cli
lock
mov
test
push
add
out
jne
fdiv
outsb
and
sub
in
cmp
jl
in
lea
lds
jnp
insb
adc
cmp
dec
xchg
insl
sbb
mov
fsubl
shlb
and
fdivrl
xor
add
cmp
push
aaa
push
lahf
xchg
les
xchg
push
lret
loopne
test
jb
sub
sbb
sbb
and
repz
mov
dec
shl
inc
xchg
andb
and
inc
sti
mov
pop
repz
shll
incl
test
xor
je
stos
and
xchg
mov
nop
pop
mov
shrl
leave
adc
movsb
jae
out
mov
inc
ja,pn
sahf
sti
test
dec
repz
in
scas
cmpsb
in
lds
jecxz
int3
push
movsb
xchg
cmpsl
mov
mov
xor
insl
aam
mov
adcl
mov
push
xor
push
repz
ds
out
fisubrs
add
dec
js
int3
jmp
js
xor
loope
fs
xchg
mov
mov
popa
xorl
and
pop
adc
mov
test
into
dec
dec
hlt
inc
cmp
mov
push
fstl
or
sbb
dec
mov
iret
adc
and
xor
call
gs
adc
add
fisttpl
in
mov
jecxz
add
mov
fbld
in
cmpsb
scas
xlat
or
ret
sub
push
in
push
fisubs
nop
ret
adc
cmp
push
cs
push
popa
push
or
lcall
lea
pop
int3
je
scas
cld
or
pop
mov
repnz
and
push
std
pop
sbb
in
sahf
jg
shr
push
jns
mov
jae
sbb
push
mov
jbe
rcll
add
xor
daa
mov
in
sub
sbb
loopne
int3
add
pop
inc
pop
adcl
lods
insb
negl
dec
popf
cmp
sub
sbb
or
cld
dec
in
jge
insl
int3
sbb
pushf
sub
insb
std
pop
in
dec
popf
cmp
sub
sbb
or
cld
dec
in
jge
insl
int3
sbb
pushf
sub
std
inc
in
dec
popf
cmp
inc
mov
std
dec
call
sbb
xchg
das
push
cld
mov
lea
add
mov
ret
hlt
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
