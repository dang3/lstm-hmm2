add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
gs
inc
inc
push
lahf
add
pop
cmc
shl
not
rol
mov
movsb
cmp
addr16
inc
inc
push
xor
pop
add
divl
movsl
mov
xchg
outsb
push
pop
inc
dec
xor
pop
add
aam
mov
int3
ret
mov
ljmp
and
imul
in
clc
je
out
fcmovb
xchg
aam
pop
xor
js
out
and
std
and
pop
xor
sub
lahf
clc
jo
sbbb
or
pop
jmp
lock
fs
je
or
lods
scas
sbb
xor
dec
cmc
out
testl
xchg
shlb
mov
or
cmc
jae
xchg
in
and
aam
sub
xor
loop
mov
mov
sub
jg
sbb
outsb
out
int
adc
jp
lea
rcr
lods
in
xchg
in
push
ret
inc
or
dec
sub
movsl
push
xchg
test
push
pop
inc
push
xor
pop
add
out
aad
mov
test
cmp
or
jbe
inc
push
push
imul
mov
mov
ret
clc
call
es
and
jns
jae
and
lods
mov
mov
loopne
jecxz
addr16
ja
and
je
and
pop
cmc
out
not
mov
mov
xchg
ja
inc
inc
push
xor
pop
add
not
mov
mov
xchg
fs
pop
push
inc
lods
pop
sub
dec
mov
mov
sbb
aad
in
sbb
js
sub
daa
mov
mov
loopne
xor
inc
sbb
lahf
dec
imul
sbb
subl
inc
xchg
test
pushf
push
les
loopne
cmpsb
cmpb
adc
mov
pop
sti
lds
pop
leave
les
adc
in
xor
cmc
inc
mov
dec
cmpsl
cltd
sbb
popa
jnp
std
add
fadd
cmp
adc
add
out
jns
ss
cmp
fisubrl
lods
pop
aad
and
mov
aas
or
push
push
aam
pop
sbb
ret
lds
test
mov
addr16
inc
int3
and
jp
jae
jle
xchg
ljmp
cltd
sub
xchg
ja
faddl
pushf
mov
pop
das
sub
dec
das
enter
aad
add
xlat
into
fbstp
mov
adc
ffreep
xchg
lods
sub
lods
adc
dec
pop
loope
push
mov
and
daa
xchg
xchg
jns
in
pop
es
inc
gs
jbe
fisubl
sub
or
lahf
push
clc
xchg
jne
jne
ret
xlat
sti
in
cmp
mov
sti
popl
and
pusha
in
sub
push
sub
dec
fs
pushf
test
add
sub
add
popf
outsl
xchg
bnd
lea
lret
mov
sbbl
in
push
xchg
inc
out
lret
push
jmp
leave
iret
mov
in
mov
lds
cmpsl
cmp
or
xchg
ret
mov
imul
adcb
test
cs
enter
pop
in
stc
rorb
loop
fildl
insb
cmp
aas
into
xchg
js
sbb
orl
jbe
xchg
xchg
rclb
sbb
hlt
inc
xor
pop
sbb
filds
scas
mov
xchg
in
mov
mul
fildll
jecxz
adc
pop
movsl
iret
insl
sahf
enter
cld
add
sub
insb
sbb
mov
add
inc
or
sbb
xchg
or
mov
jmp
sub
jp
dec
xchg
inc
sarl
pop
mov
fwait
mov
or
lea
imul
cmp
cmp
pop
fsubs
push
mov
fisttpll
dec
xor
mov
shll
cmp
mov
pop
cmp
cmc
xchg
and
cmc
mov
push
lods
adc
jno
lods
std
ljmp
fwait
dec
inc
xor
icebp
mov
sub
and
outsb
add
fldenv
out
stc
hlt
fcomps
dec
fwait
xchg
and
outsl
je
mov
add
test
jmp
sub
pop
xchg
in
in
in
lds
lock
adc
mov
jnp
cmp
and
jmp
sar
xor
cmc
andl
pop
addb
cli
std
push
adc
inc
mov
out
mov
das
mov
mov
insl
mov
push
rcrl
sub
jb
sbb
xchg
loope
lcall
nop
xlat
lods
dec
or
mov
or
std
dec
inc
inc
inc
jnp
out
scas
inc
shlb
adc
lret
insl
addr16
pop
dec
loope
fbstp
imul
mov
pop
icebp
xor
in
mov
es
arpl
xor
inc
in
xchg
lahf
dec
xor
mov
sub
repnz
adc
lret
int
test
push
and
es
loopne
mov
movsl
sub
inc
lcall
test
pop
fnstenv
mov
push
sub
popf
jo
add
lahf
push
pushf
mov
inc
inc
adc
ja
jno
mov
mov
aad
iret
call
int3
sbb
idivb
sar
push
xchg
or
lcall
fcoms
mov
add
fadd
pop
js
pop
lret
push
roll
jge
std
dec
sbb
or
and
xchg
pop
adc
adc
cs
inc
mov
pusha
cli
push
add
pushf
dec
in
fcomps
enter
xchg
subb
shll
pop
add
std
cmp
fcoml
sbb
movsl
push
cmp
js
lret
cmc
inc
popa
adc
int
pop
ficompl
cmc
mov
std
xlat
iret
inc
cmp
jmp
loopne
test
pop
jp
sub
test
xor
sub
int3
pop
fnstcw
pop
std
mov
sarl
inc
adc
mov
subl
jl
sbb
out
sbb
mov
outsb
jno
fidivrs
shll
lcall
cmp
decl
jb
rorb
cmp
dec
leave
sub
cs
cmpl
xor
daa
frstor
or
out
jmp
jg
mov
cs
pop
xor
movsl
sarb
push
ret
stc
and
add
mov
dec
pop
in
sbbl
mov
xchg
and
enter
xchg
imul
daa
fmul
inc
or
fcomps
lea
jnp
push
cmpsl
insl
sti
mov
push
sahf
repnz
sbb
arpl
push
call
movsl
int3
and
fmuls
dec
es
and
xor
rcrb
push
fidivl
xor
inc
pushf
dec
in
scas
in
sub
mov
push
adc
test
fisttps
mov
sbb
inc
lret
xrelease
mov
int
sbb
aam
movsl
mov
cmp
mov
ffreep
loope
pusha
leave
mov
loop
sbb
fimull
mov
pop
lds
dec
pop
xor
mov
popa
mov
lret
fcomi
push
popa
push
cmpsl
out
fadds
jle
shlb
or
sti
sbb
mov
cmp
lea
xchg
mov
fldcw
push
nop
dec
shrl
rcr
push
imul
ljmp
lcall
into
mov
jl
xchg
fldenv
adc
xlat
lcall
fsubrs
push
mov
or
test
mov
sbb
in
xchg
add
mov
imul
or
xchg
adc
aam
mov
add
jae
mov
out
mul
cmp
js
hlt
out
or
sub
cltd
lock
mov
adc
cmp
adc
lods
or
movb
stc
cmpb
xor
sbb
add
test
lret
adc
mov
test
push
or
or
mov
fldenv
je
and
movsb
lock
mov
int
les
leave
in
pusha
add
inc
sbbl
ret
and
lret
ret
and
loop
cmp
outsl
pop
adc
pop
ret
js
seta
and
hlt
push
push
in
test
fucomp
mov
mov
imul
fisttps
push
add
xchg
fists
push
inc
fs
mov
test
xchg
xchg
mov
cmp
cmp
andl
cmp
daa
cld
ljmp
je
mov
leave
in
lcall
loop
into
mov
rolb
in
test
pop
sub
clc
dec
das
int3
lret
ljmp
pop
lret
repz
imul
pop
sbbb
push
pop
imul
outsl
scas
mov
and
int
xchg
aad
testl
and
iret
xchg
aaa
call
in
ja
aaa
add
dec
and
pop
push
stos
lret
roll
sbb
cmp
faddp
imul
sub
pop
scas
test
pushf
testl
jp
jns
or
stc
nop
push
addr16
mov
jge
ja
push
mov
lods
jl
sub
mov
mov
mov
sbb
fsubrl
lahf
pop
mov
sub
movsb
test
or
pushf
xor
out
mov
sbb
push
lahf
pop
lock
outsb
rcl
xor
add
mov
stos
dec
stc
add
mov
iret
dec
cld
out
rcl
test
pop
sbb
mov
lcall
mov
mov
mov
jmp
inc
cltd
pop
fnstenv
mov
mov
cmp
out
data16
mov
mov
pushf
push
iret
xor
push
in
cld
cli
outsl
mov
mov
cmpsb
pushf
mov
scas
dec
pushw
dec
push
enter
arpl
xchg
mov
or
cs
imul
or
or
ret
in
jno
scas
sbb
xchg
xorb
inc
lcall
push
mov
jmp
cmpsb
sbb
push
jg
je
bound
mov
imul
or
xchg
aad
popf
nop
cmp
push
filds
lret
cmp
inc
xlat
add
ss
sub
lret
dec
and
lock
movsl
xchg
xchg
jae
cmp
jg
cli
out
xor
push
mov
xchg
test
pop
mov
xor
jmp
in
push
sti
lods
sbb
dec
dec
push
repnz
fucomp
xor
iret
mov
flds
rorb
les
and
and
dec
xor
mov
xor
jmp
xchg
mov
iret
jo
mov
popa
jmp
ret
lea
sarl
inc
cltd
inc
in
jb
frstor
stos
mov
icebp
std
xchg
lods
sahf
pop
xor
push
subb
push
loopne
jmp
ljmp
in
xchg
inc
ret
lahf
push
and
dec
or
sub
cmp
adc
cmp
inc
mov
mov
push
or
adc
cwtl
pushf
cmp
add
or
cmpl
clc
add
sbb
adc
xchg
cld
add
jmp
dec
adc
outsl
insl
in
push
addl
lea
jp
mov
pop
cmp
mov
out
adc
fstpt
cmc
sbb
jb
cmp
test
lret
lea
pop
adc
out
pop
mov
xchg
ja
pusha
mov
insb
lea
inc
stos
aad
dec
add
sub
or
shl
xchg
mov
loopne
xchg
adc
dec
ja
test
stc
fwait
inc
sbb
ret
sbb
jge
push
test
jg
xchg
adc
push
jl
jp
and
das
push
mov
pop
sub
jge
xchg
push
adc
xchg
cmp
cmp
and
jmp
sti
fisttpll
add
outsl
and
jge
rcll
sub
push
jp
aas
outsl
inc
imul
or
fimuls
xor
inc
repz
cmp
das
movsl
xlat
daa
rorb
push
cwtl
fstpl
das
mov
mov
sub
xchg
fnstenv
cli
fadds
push
arpl
pop
enter
movsl
dec
out
pop
cmp
mov
mov
xchg
fistps
loope
int3
test
cmp
jns
notb
push
aaa
or
leave
push
call
in
push
jmp
push
outsb
test
xchg
aad
adc
jmp
xchg
and
mov
dec
xchg
push
cmp
std
loope
jl
in
xor
pop
add
out
jo
rcll
inc
or
or
pop
mov
inc
adc
pushf
lret
inc
push
add
xchg
leave
leave
jl
mov
dec
adc
adcb
call
into
outsl
mov
push
jb
push
bound
mov
insb
inc
sub
lcall
scas
push
iret
mov
loopne
push
sahf
cmp
inc
addr16
iret
push
push
or
or
jb
pushf
fmuls
aam
cmp
addl
roll
inc
dec
mov
cmp
adc
sub
or
lahf
xlat
sub
or
les
push
test
movsb
cld
and
jb
jno
mov
pop
xorb
popa
push
int3
test
mov
in
addr16
and
cmp
aad
aad
out
adc
pop
add
xor
push
xor
inc
js
or
lds
popa
add
outsl
jg
jo
lods
ret
aaa
dec
dec
aas
xchg
mov
cli
adc
and
xchg
adcl
inc
data16
adc
and
pushf
ja
cmpsb
sti
data16
iret
test
and
lods
ljmp
rolb
bound
je
xor
fimull
in
sbb
jns
enter
hlt
movsb
es
into
pop
stc
into
xor
adc
fcomps
pop
test
loop
fisubl
outsb
xchg
xlat
fistpl
push
mov
popa
push
push
push
lret
mov
out
iret
xchg
xor
and
repnz
add
mov
inc
or
adc
loope
cmpl
mov
sarb
sbb
inc
aam
push
mov
xchg
mov
ljmp
sub
jp
in
or
cltd
inc
movsl
call
cld
sbb
nop
mov
ss
mov
lods
mov
dec
sbb
sub
icebp
jle
pop
dec
test
mov
jecxz
pop
mov
mov
lods
loope
mov
insb
dec
jl
in
or
rcl
pop
dec
jae
push
push
inc
push
cltd
sbb
aam
mov
add
push
mov
add
inc
push
into
mov
adc
in
sbb
out
aaa
mov
insl
mov
and
stc
xor
jnp
and
push
inc
lcall
test
mov
cltd
int
imul
repnz
nop
add
les
mov
jnp
out
je
pop
repnz
sbb
fbstp
in
add
daa
aad
xor
std
cwtl
inc
les
movsb
lahf
add
lds
in
push
cltd
mov
cld
push
addr16
push
mov
jmp
dec
insl
les
adc
ja
add
xchg
lcall
mov
pusha
adc
dec
lret
arpl
xor
mov
mov
mov
loop
mov
cmp
mov
lods
repz
xchg
lock
out
inc
push
pushf
xor
and
xlat
inc
jecxz
fdivrs
inc
cmp
xor
icebp
in
dec
mov
in
jb
jbe
push
adc
ret
and
mov
mov
xchg
cmp
gs
rcll
mov
mov
aas
sbb
inc
clc
push
cmp
and
enter
insb
shrb
sbb
add
mov
push
jl
jmp
adc
xchg
mov
jo
mov
xchg
jp
scas
jmp
jbe
call
push
loopne
lea
ja
push
sbbb
jmp
cltd
sarb
xor
out
mov
adc
fisttpl
dec
sub
xor
lea
xor
push
or
mov
fwait
pop
aad
enter
or
push
scas
and
push
mov
inc
jg
xchg
cmp
outsb
ss
adc
fyl2x
xchg
mov
mov
ds
and
or
mov
xchg
xchg
inc
mov
mov
push
push
mov
mov
sbb
xorb
mov
sarl
xchg
int3
and
std
icebp
add
dec
into
mov
dec
fmul
inc
data16
out
nop
mov
sub
xchg
xchg
mov
mov
test
mov
sbb
mov
xor
dec
subl
fisubrs
lret
and
xchg
cmp
push
sub
mov
scas
xchg
shlb
aad
iret
aam
in
mov
cwtl
xor
push
pop
mov
aaa
mov
bound
xchg
int3
sti
push
push
inc
adc
insl
fidivrl
inc
fs
outsb
addr16
outsl
xor
enter
cmp
xor
cmpsb
gs
jb
jle
xchg
xchg
add
push
cmp
fadds
inc
mov
push
sti
mov
and
out
dec
into
add
or
negl
xor
sub
in
dec
pop
in
out
out
sti
mov
ror
xor
mov
mov
stos
add
adc
and
add
cs
int
loope
sub
jns
test
mov
inc
sub
push
loopne
xor
fmull
mov
and
movsb
ret
nop
jo
scas
jb
mov
clc
mov
mov
aas
add
mov
test
and
es
lods
test
pusha
add
push
mov
mov
jle
std
add
sbb
notb
lds
es
mov
test
jmp
xor
arpl
in
popf
scas
cwtl
sbb
das
sub
push
sbb
dec
je
inc
aas
mov
shll
ret
fildll
in
scas
mov
jg
push
dec
lods
ss
addb
mov
mov
loope
loopne
sbb
xchg
mov
xlat
loope
negb
sub
leave
stos
movsl
add
int3
sub
sarb
jge
adc
pushf
popl
or
pop
bound
lahf
adc
cbtw
push
aam
or
jp
fldcw
fwait
or
jl
shrb
cmpsl
mov
filds
fdivs
cmp
or
xor
xchg
lret
aas
ret
push
and
push
pusha
sbb
nop
xor
cmp
pushf
or
cmp
je
push
mov
fldcw
ja
push
jo
sbb
cwtl
mov
pop
and
loop
mov
std
sbb
inc
in
andl
pop
incb
mov
sub
jne
fs
icebp
test
insl
xor
pusha
push
in
pushf
add
inc
scas
push
mov
add
dec
xor
stc
into
cmpsl
dec
test
je
rcll
add
fs
jo,pn
pop
push
jno
movsb
in
fistpll
cmc
addr16
mov
cli
call
hlt
inc
and
int
mov
dec
mov
mov
fidivrs
add
xor
mov
nop
xchg
dec
repnz
addr16
sbb
mov
push
push
mov
push
cmp
cmpsb
je
icebp
testb
je
sbb
sbb
sub
cld
subl
lret
jge
sub
mov
andl
xor
loop
xchg
inc
cld
jno
fbld
xchg
mov
lods
sbb
iret
outsb
stos
jmp
jle
adc
sbb
je
adc
add
mov
or
mov
popf
push
std
mov
push
fwait
cmp
jge
cld
stos
dec
sub
imul
fisttps
pop
nop
ja
pop
int
mov
add
mov
inc
insl
outsl
push
and
jge
mov
xor
xor
jnp
push
ss
jg
sbb
mov
sub
fwait
fwait
out
daa
cs
punpcklbw
jne
jns
or
xor
je
aas
cld
lcall
push
out
repnz
inc
mov
inc
repz
xor
rorb
or
sti
subb
cld
in
xchg
jnp
push
out
and
inc
fucomp
fbstp
call
push
push
add
cmp
inc
ss
jno
cmovp
push
aam
xlat
outsl
call
int3
sbb
mov
cmp
bound
sub
or
js,pt
mov
hlt
add
mov
sahf
out
cmp
mov
inc
repnz
mov
repnz
stos
stos
rcl
dec
add
cmp
inc
imul
jg
icebp
push
loop
push
dec
xor
test
push
lock
scas
pop
es
shrb
mov
bound
jb
jmp
mov
push
jo
cmpl
cmp
xchg
xlat
dec
addr16
or
lods
popa
mov
fdivs
mov
add
mov
icebp
push
dec
sarl
cmc
es
mov
test
roll
push
mov
mov
ret
ss
sub
jae
and
stos
mov
popl
jno
aad
nop
jo
cmp
push
mov
lret
xchg
mov
mov
clc
int
and
or
js
jmp
xlat
stos
enter
jecxz
ficompl
mov
pop
test
inc
jmp
cli
or
jne
add
add
cmpsl
clc
or
fidivl
mov
mov
xchg
neg
cmp
cli
mov
imul
outsl
add
mov
mov
mov
rorb
repnz
insb
dec
mov
fildll
cmp
mov
pop
leave
ficoml
in
mov
pushf
out
pusha
int3
sub
jbe
stc
lcall
ss
xor
inc
mov
jnp
add
and
add
pop
test
ret
sarl
aaa
test
mov
pop
xchg
imul
sub
mov
mov
push
or
sbb
pop
orl
mov
jnp
int3
pop
push
and
mov
pop
std
out
iret
xchg
cwtl
add
inc
push
jns
push
mov
jl
fs
mov
and
push
xor
pop
add
not
mov
mov
xchg
ja
inc
inc
push
xor
pop
add
not
mov
mov
xchg
ja
inc
inc
push
xor
pop
add
not
mov
mov
addl
inc
inc
push
xor
pop
add
pop
jg
lds
push
jp
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xor
adc
xor
adc
int3
cmc
mov
movsl
mov
pop
gs
jne
add
or
lods
repnz
int3
cmc
mov
movsl
mov
mov
sub
fs
xor
hlt
pop
cld
lds
xchg
call
cmp
cmp
mov
imul
iret
dec
out
sub
cmpsl
inc
push
addr16
jmp
jo
cmp
insb
adc
sahf
aaa
fimull
sub
sbb
movsl
cmp
add
sub
jl
pop
cmp
test
xor
mov
in
or
and
jno
jb
inc
adc
and
jne
adc
and
jmp
sbb
hlt
xor
jae
stc
xchg
xchg
test
cwtl
mov
pop
in
leave
cmp
mov
add
int3
idiv
cmp
mov
jmp
out
push
cmc
xor
xchg
adc
fnsave
int3
lahf
cmp
lods
rcr
dec
pushf
fisttps
insb
jne
adc
jne
add
mov
push
lds
add
ror
fdivrl
call
cmp
or
sbb
pop
js
push
insl
jb
xchg
xchg
aad
ret
ror
fdivrl
adc
push
xchg
push
push
dec
inc
jo
jg
les
leave
xchg
jmp
ss
mov
or
adc
cld
fsub
int3
cmc
mov
movsl
mov
pop
gs
jne
add
or
cld
fsub
int3
cmc
mov
movsl
mov
hlt
sbb
fwait
jo
dec
xchg
imul
dec
jnp
test
adcb
inc
mov
rcl
sbb
add
out
imul
mov
fs
and
cli
scas
movsb
sub
imul
mov
rcr
mov
xor
pusha
mov
dec
clc
daa
es
mov
push
mov
xchg
or
cmp
inc
pop
inc
test
mov
inc
mov
inc
int3
adc
cmc
sbbb
cld
or
in
and
test
scas
cli
mov
iret
pop
pop
hlt
cmc
sub
inc
jg
dec
add
idivb
sti
sbb
sub
xor
or
jo
push
jo
pop
popf
test
and
test
roll
stos
xchg
idiv
add
sbbb
movsb
scas
cwtl
xor
push
jg
ljmp
cwtl
stc
outsl
adc
pop
ret
nop
sub
push
xchg
cs
rcll
push
pop
mov
ficompl
mov
inc
cmp
jne
test
movsb
mov
mov
mov
lret
adc
aad
fdivrp
or
ret
lods
cmpsl
int
dec
mov
leave
les
pop
dec
andl
push
andps
mov
pop
mov
pushf
push
jge
xor
imul
inc
inc
sahf
pop
mov
imul
mov
inc
xor
int3
sbb
in
add
inc
mov
in
push
aas
pop
mov
or
pop
in
and
movzbl
push
pop
sub
pusha
jnp
les
rcll
into
inc
pop
or
dec
stos
pop
mov
lea
mov
pop
mov
ljmp
movsl
enter
fidivrs
push
out
aas
test
mov
or
cmp
push
dec
mov
in
mov
ja
cmp
int
jg
mov
pop
sub
outsl
test
les
mov
mov
ja
sub
jnp
cmpsb
sub
je
cltd
pop
cs
jg
shrl
jae
mov
jg
enter
sbb
popf
push
jmp
dec
test
fstps
mov
iret
fcompl
pop
mov
fldl
mov
xchg
data16
pop
inc
loope
repz
bsf
js
in
scas
test
jge
std
in
lret
cwtl
push
jno
sub
and
xchg
sbb
pop
outsb
mov
add
xchg
mov
mov
xchg
mov
fcoms
sbb
mov
addr16
mov
loop
pop
adc
inc
cmp
test
or
rorl
sarl
std
fsubl
aas
in
sub
or
add
arpl
xchg
pushf
leave
mov
and
sbb
in
in
data16
out
lock
test
pop
jae
ret
cwtl
sbb
lds
fsts
imul
pusha
lods
cmp
aam
insl
mov
add
push
das
add
int3
jge
insl
adc
mov
lcall
in
loopne
sub
shlb
and
ss
inc
mov
or
dec
mov
cmp
ret
pop
icebp
mov
inc
push
adcl
or
je
mov
stos
dec
nop
cmp
mov
mov
lahf
push
xorb
daa
xor
xor
lret
cmpsb
repz
mov
sbb
pop
add
icebp
lcall
push
sub
mov
lods
jns
and
mov
push
mov
add
jo
arpl
cwtl
ljmp
ds
mov
jecxz
out
aam
fnstcw
xor
fmull
mulps
aad
dec
faddp
cmp
sbb
fidivs
fisubrs
test
cmp
orl
inc
inc
xor
xchg
aad
sbb
jae
fnstenv
push
xor
stc
mov
ss
dec
movsb
sbb
std
cmpsb
mov
jbe
xlat
pop
decb
loope
push
fimull
xchg
push
in
shll
ret
cld
nop
iret
cmp
lods
and
movaps
jne
and
incb
imul
pop
xor
sbb
sbb
pop
fsubl
addr16
les
leave
scas
out
mov
nop
and
leave
jp
popf
test
xchg
cmp
xchg
leave
cmc
push
add
sbb
xchg
sbb
mov
fs
push
cmp
adc
or
cltd
sarb
or
lret
fbstp
sbb
mov
jl
jb
popa
daa
sub
mov
jp
rcr
dec
xchg
fcoml
mov
fimuls
mov
stos
and
scas
cmp
ds
xchg
sub
add
jb
sbb
dec
inc
in
xchg
out
jmp
or
mov
outsl
sahf
lcall
repz
dec
fbld
shl
dec
adc
mov
out
mov
out
int3
cmpsl
xchg
add
pop
rcll
andb
std
das
sti
shl
sbb
or
adc
cmp
mov
and
cmp
icebp
or
push
jmp
jns
popa
repnz
or
sti
jp
add
push
add
mov
xorb
mov
inc
aam
add
seta
test
in
int
sbb
das
movsl
repnz
bound
mov
das
dec
and
push
cmc
ss
in
loop
xor
ret
inc
jecxz
dec
xor
pop
adc
inc
scas
dec
and
stc
mov
adc
mov
sbb
cmp
ret
ficoml
cltd
push
arpl
fs
mov
jl
inc
sub
mov
mov
pop
mov
sar
das
decl
cli
sarl
jp
mov
cwtl
mov
push
jecxz
fiaddl
add
xor
lcall
pop
mov
inc
xchg
jne
outsb
lcall
andl
into
and
push
pop
sbb
sti
push
scas
arpl
out
std
push
or
bound
addr16
push
add
xchg
jae
lods
adc
adc
cli
jae
insb
and
call
sub
dec
lods
outsb
movsb
outsb
sbb
jo
sbb
fidivrl
stos
lea
or
mov
scas
mov
enter
mov
test
std
mov
mov
xchg
mov
out
xor
inc
ret
shlb
push
inc
loop
mov
mov
out
test
ror
hlt
cmp
pop
popf
pop
push
inc
xchg
andl
add
dec
imul
sahf
jl
cmp
and
lcall
icebp
aaa
push
dec
nop
and
lods
cli
test
xor
cmpsb
mov
out
enter
push
dec
jp
dec
inc
fidivl
or
xor
enter
ficompl
add
push
int
inc
shrl
ss
int3
sub
sti
arpl
sbb
sbb
arpl
fistps
mov
mov
mov
xor
aad
daa
push
add
aas
sbb
scas
pop
test
js
lcall
loopne
jbe
xor
pop
push
addr16
stos
sbb
in
notl
pop
sub
ja
fwait
in
popa
sub
xchg
pop
flds
pop
js
pop
rcll
and
out
dec
and
aas
test
jl
enter
inc
addl
gs
loopne
cmp
or
iret
sbb
in
in
mov
insl
and
lods
mov
inc
rcll
hlt
in
xchg
push
stc
push
xor
imul
xchg
stos
cmc
cmp
mov
daa
add
push
mov
test
xchg
imul
adc
fwait
mov
cli
cli
mov
pop
push
push
push
mov
inc
rcrl
stos
das
inc
mov
jns
xchg
and
jecxz
xchg
xlat
jmp
cwtl
aaa
mov
push
push
in
push
mov
inc
ja
and
movsl
jb
and
jecxz
push
adc
imul
cmp
std
enter
jnp
push
cmp
mov
test
mov
rolb
or
mov
pop
jle
mov
mov
adc
sti
cltd
jns
inc
mov
jl
inc
dec
mov
mov
movsb
mov
xchg
xchg
gs
push
mov
test
cmpsb
xchg
add
dec
push
adc
dec
jmp
mov
movups
dec
insw
test
mov
outsl
xor
subb
cltd
test
mov
fwait
les
jo
xchg
rcl
xchg
xor
rolb
push
and
jbe
cwtl
mov
shr
xchg
push
faddl
jns
popl
lock
pop
sub
lea
dec
je
mov
fistl
daa
dec
lds
inc
fwait
cmp
sub
sub
or
out
fldt
dec
mov
dec
add
dec
pop
adc
pop
in
jecxz
ljmp
int3
and
andl
insb
xchg
pop
or
inc
xchg
gs
jns
adc
ss
mov
inc
add
xchg
sub
in
mov
sbbl
sbb
cmp
jecxz
fdivrl
rcrb
lock
pop
outsb
scas
dec
or
fwait
push
outsl
into
inc
cmp
sbb
outsb
inc
in
push
sbb
frstor
in
daa
mov
inc
cmp
sub
dec
mov
mov
daa
pop
cmp
push
aam
enter
xor
sahf
mov
and
cmp
adcb
push
mov
lods
pop
add
aas
mov
sub
add
jne
pop
mov
jbe
out
js
jne
lea
cmp
cmovae
push
lods
xchg
sub
repz
jle
dec
cmpb
and
aaa
xor
jne
mov
hlt
xor
movsl
xor
push
fucom
loope
aaa
pop
ret
lret
shr
imul
je
or
cmpsl
jmp
mov
mov
sarb
pushf
leave
loopne
pop
mov
decl
sbb
stos
jle
pop
scas
shlb
mov
test
and
mov
shll
negl
sti
bound
in
fs
lods
imul
sbb
repnz
out
push
and
xchg
iret
ret
dec
pushf
and
xchg
pop
and
jmp
addl
add
sahf
loop
js
out
je
stc
push
mov
add
xor
pop
dec
mov
push
xchg
push
pop
subb
cs
aad
jg
negb
test
bound
mov
arpl
sti
test
pop
xor
ja
sub
shrl
xchg
rolb
aaa
shll
ret
and
cmp
repz
add
push
addr16
add
icebp
shr
ss
mov
and
xor
and
repnz
int
repz
jge
out
outsb
dec
push
push
dec
add
lds
dec
pop
sbb
lret
enter
in
sub
subl
xor
jmp
mov
enter
pop
adc
add
or
add
cmp
fsub
test
out
scas
out
jns
adc
mov
fcomps
push
pop
xchg
adc
dec
int
adc
sbb
outsl
pop
inc
rol
xor
insl
imul
das
or
push
cmp
in
dec
sahf
jbe
enter
mov
adc
repnz
mov
movsb
xor
xor
push
movsb
xor
inc
insl
movsb
and
cmpsl
aam
daa
ds
insl
mov
call
pop
add
pop
scas
packssdw
lahf
out
test
cmp
xor
add
push
rorl
jmp
ret
sbbb
push
repnz
lock
lods
roll
and
jp
mov
les
loopne
jo
xchg
roll
out
push
mov
das
jne
dec
cmp
lods
mov
sti
popf
and
aam
rcrb
es
sbb
mov
fmuls
inc
icebp
push
test
adc
adc
jo
mov
std
xor
imul
add
mov
movl
pop
and
test
inc
icebp
ljmp
into
nop
cmpsl
dec
inc
xchg
xor
test
aas
fcoml
sarb
sbb
out
movsl
mov
push
scas
xchg
sahf
inc
sbb
xchg
xor
lods
stos
popf
iret
pop
push
rorb
mov
jo
pop
cmpb
js
into
aas
mov
mov
or
mov
xlat
icebp
imul
xchg
mov
pop
lahf
repz
out
sbb
jne
xchg
ds
rcrb
jno
insl
mov
xrelease
lock
iret
cmp
bound
jp
adc
sub
add
gs
loopne
cld
fcompl
adc
sbb
xchg
fldcw
cmp
cmp
mov
cli
fsubrl
stos
push
xchg
nop
sub
into
push
adc
and
cmp
cld
push
lds
cmp
push
mov
popf
sbb
aam
rep
xor
lret
pop
out
xor
push
pop
inc
sti
cld
mov
outsb
or
jp
loop
sbb
insb
jbe
adc
faddl
cmpl
jg
jnp
ja
jmp
int
rcll
jmp
dec
out
sbb
mov
pop
sub
push
pop
pusha
xor
inc
loopne
adc
insb
xchg
shl
xor
cmp
add
mov
and
addr16
jne
rcl
jb
dec
lret
or
push
add
in
gs
mov
das
sahf
arpl
inc
pop
jno
lea
in
sbb
push
xchg
or
xchg
cmp
popa
jbe
outsb
outsb
dec
xor
stc
jmp
mov
or
ss
loope
je
movsl
mov
rclb
xchg
sub
out
and
or
jns
popa
inc
inc
pop
adc
adc
ret
push
inc
or
movsb
mov
mov
jmp
insl
mov
push
xor
std
and
push
out
add
divb
sbb
jp
outsl
pop
pop
xchg
loope
aam
pop
call
out
mov
fstpl
dec
and
xchg
sbb
mov
dec
call
mov
roll
sub
nop
loopne
std
int
es
das
dec
out
pminub
enter
int
test
in
mov
out
adc
xchg
push
dec
in
mov
xor
xorl
idivl
pop
shll
cmp
pop
dec
push
jmp
or
lods
and
outsl
dec
jg
data16
mov
xor
ds
arpl
push
jne
outsb
inc
ficoms
cmpsb
pushf
jbe
or
hlt
lret
stos
mov
ret
sbb
mov
dec
insl
and
xchg
cli
adc
xor
fwait
outsb
test
inc
push
out
jne
fbstp
test
iret
jge
mov
leave
into
mov
mov
popf
jle
sub
push
movsl
mov
movsl
cmp
pop
xchg
add
pusha
push
jbe
sbb
out
sub
mov
inc
sbb
sbb
fs
aad
mov
fs
pop
rcrl
pushf
das
enter
inc
mov
loop
sub
into
lahf
xchg
bound
cmp
or
dec
jnp
imul
movsl
or
or
jle
xlat
int3
mov
jp
stc
adc
mov
dec
adc
dec
push
outsb
push
cmpsb
sarl
mov
push
das
popa
js
cltd
xor
mov
lods
inc
imul
cltd
fcomp
in
int3
jo
xor
jge
lret
cli
bnd
and
lods
cmp
ss
punpckhdq
test
dec
xchg
mov
rorl
pop
lods
nop
xchg
ds
shl
mov
mov
xor
jmp
rcr
pop
jns
cs
ljmp
push
test
fwait
stos
add
mov
in
ljmp
sbb
call
sahf
popa
xchg
sti
pop
test
jge
xlat
or
pop
dec
dec
cwtl
outsb
sbb
imul
xchg
xor
js
sbb
data16
les
add
shll
mov
cmp
outsl
fnsave
adc
mov
cs
jns
lea
sub
insl
fidivs
iret
in
movsb
sub
or
lea
mov
cs
imull
push
fldl
in
sarb
lret
mov
rcr
arpl
cmp
aad
sub
testb
aaa
imul
jb
imul
aam
mov
aaa
imul
out
add
inc
lods
inc
mov
js
mov
imul
aaa
lods
gs
scas
jne
push
rcl
cmp
cwtl
bound
xchg
lods
pop
mov
dec
or
aaa
pop
or
mov
lea
stos
mov
cmp
mov
mov
cs
arpl
xchg
cmp
or
ljmp
mov
jle
cmpsl
add
jmp
xor
push
dec
lret
jno
lea
cmpsb
scas
out
sbb
mov
inc
cmp
aad
pop
push
push
pushf
movsl
nop
fs
dec
mov
mov
loope
lock
jmp
jle
arpl
lret
lret
xchg
lds
cmpsb
or
pushf
stc
scas
in
dec
add
and
data16
and
hlt
cmpsb
add
arpl
aad
mov
aam
fistps
testb
fdivl
sbb
push
movsl
les
sbb
dec
sarb
pop
hlt
mov
mov
ds
sub
imul
xchg
enter
repz
mov
fstl
sub
shlb
lds
and
push
in
insb
dec
push
and
xchg
les
orl
sub
xor
sti
adc
jno
mov
pop
stos
xchg
fcomps
jnp
pop
imulb
add
xchg
aad
iret
mov
out
cmpsl
add
cmp
mov
rclb
lret
mov
push
dec
inc
leave
pop
xchg
pop
into
aas
outsb
mov
bound
aas
leave
imul
int3
jne
pop
jmp
adcb
movsl
test
stos
dec
mov
or
das
inc
adc
cmc
lods
mov
ret
inc
das
pop
mov
add
lods
jl
xor
inc
std
pop
mov
push
flds
incb
aaa
cwtl
loopne
mov
outsl
mov
cmc
jnp
sbb
mov
lods
sub
loopne
aam
inc
adc
andl
jmp
xchg
arpl
scas
jae
adc
aam
push
xchg
arpl
lods
subb
or
loopne
fsts
int3
jl
das
imul
cmp
mov
fstpl
pop
adc
xchg
pop
adc
xor
mov
jle
add
out
jle
inc
or
into
jle
pop
leave
es
dec
push
push
xchg
xchg
inc
xor
mov
sub
or
mov
adc
cmp
lods
ret
out
jb
or
pop
mov
rolb
in
xchg
dec
jae
imul
cltd
mov
in
jle
jne
addl
aam
xlat
inc
xchg
cmp
sub
pop
and
pop
pop
push
pop
dec
or
mov
adcl
sub
mov
jge
fisubrl
or
sub
setnp
je
mov
or
pop
adc
or
cmpsl
mov
or
mov
ds
xchg
lahf
in
stos
mov
mov
xlat
outsb
xor
push
dec
test
pop
icebp
fidivrs
mov
cmc
xor
mov
shll
into
xchg
or
fcomps
std
fisttps
add
loopne
jno
fcomps
mov
cld
jns
push
ficomps
loop
adc
jno
mov
cmp
rolb
das
jo
scas
lahf
enter
stc
sti
jecxz
addr16
sub
push
or
popa
and
loop
es
xor
push
in
fucomp
inc
pop
jne
dec
scas
mov
inc
ret
jae
pop
push
sbb
cltd
adc
jnp
push
adc
ret
mov
mov
gs
ret
stos
fisubs
mov
pop
and
sub
and
sub
stos
jns
sub
dec
push
pop
and
fnstcw
mov
push
sub
inc
insl
dec
pop
outsb
inc
mov
imul
sbb
jecxz
imul
rcll
pop
int3
or
push
cld
loopne
pop
leave
adc
add
add
mov
jns
clc
movsb
aas
add
loop
xor
mov
push
xor
cmp
adc
and
movsl
int
sbb
jb
js
pop
out
or
fildll
sarb
in
add
out
add
push
addr16
insb
fdivl
out
push
push
inc
test
dec
shrl
and
daa
fsubs
jmp
inc
pop
cmp
dec
vzeroall
xor
scas
icebp
xor
mov
mov
mov
sti
push
imulb
cmpl
cmp
pusha
push
jne
add
or
cld
fsub
int3
cmc
mov
movsl
mov
pop
gs
jne
add
or
cld
fsub
int3
cmc
mov
movsl
mov
dec
jge
jno
add
or
rcl
in
cld
mov
lods
mov
mov
andl
movsl
mov
cld
cmp
jg
in
or
and
arpl
jae
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
adcb
mov
gs
mov
aaa
adc
and
xor
bound
xchg
or
pop
shlb
loop
repnz
divl
movl
jb
andb
sbb
ja
cmp
aaa
repnz
inc
xchg
xor
pop
in
repz
jb
sbbb
addr16
jecxz
add
sbb
sbbb
ret
fldenv
aam
adc
repnz
sub
sub
xor
mov
mov
cmpsl
xor
mov
push
popa
fmulp
dec
push
add
mov
xlat
in
repnz
iret
xchg
inc
rclb
fwait
xchg
aas
adc
ret
pop
rcr
insl
aaa
or
arpl
or
sub
mov
daa
ljmp
idivl
out
mov
ret
scas
pop
popf
mov
insl
les
pop
fcoms
rcll
outsb
xor
xor
push
les
sbb
add
jecxz
outsl
shlb
loop
repnz
dec
adc
inc
popf
push
xchg
bound
xchg
adc
pand
jns
push
lods
aaa
mov
orb
cmc
and
and
pusha
shlb
or
push
shrb
mov
xchg
mov
inc
pop
and
cmp
pop
mulb
sub
cmp
push
lret
push
ret
daa
loop
repnz
divl
xchg
push
cmpsl
bound
xchg
addr16
pop
ret
daa
loop
repnz
divl
xchg
push
cmpsl
bound
push
jnp
scas
insb
movsb
add
test
int3
add
test
mov
push
call
int3
jae
sbb
lods
jno
mov
mov
das
test
outsb
fisttpll
or
inc
dec
call
lods
ret
cmpsb
les
xchg
add
pusha
lahf
lds
aad
mov
push
scas
sti
inc
shlb
xchg
or
mov
je
lcall
nop
lret
push
jg
xchg
addr16
outsl
nop
pop
adc
ret
push
jle
push
xchg
popa
pop
jno
outsb
xor
add
xchg
ds
push
xor
xor
in
je
loopne
pop
insb
enter
mov
insb
cmpsl
push
xchg
xchg
and
data16
and
xchg
xchg
nop
pusha
jle
imul
mulb
sarl
and
in
push
mov
cwtl
and
scas
add
push
jae
push
insl
mov
incb
pusha
lock
pop
stc
insl
cs
pushf
sbb
test
aad
push
xchg
test
scas
dec
stos
push
jns
addr16
aas
lds
pop
mov
jns
sbb
aam
xor
mov
inc
test
repz
jecxz
mov
hlt
lods
fsubl
ljmp
out
aas
sub
imul
lcall
loop
outsl
and
cmp
sti
lret
mov
cmpsb
leave
xchg
xchg
adc
xchg
mov
int
push
mov
xorl
cmp
ss
xor
xchg
scas
lret
and
jae
jb
outsw
data16
mov
ret
jbe
sbb
mov
jmp
mov
mov
fs
sti
pop
movsl
loop
sub
mov
dec
les
dec
icebp
test
clc
dec
pop
add
dec
or
pop
lahf
inc
das
adc
mov
js
dec
call
mov
pop
inc
pop
jo
scas
jmp
nop
call
aam
out
jmp
addr16
pop
movl
push
inc
mov
cld
lods
push
pop
cmp
shlb
scas
jle
enter
jg
ret
or
iret
inc
cmp
in
lahf
repz
fcmovne
bound
pop
cmp
insl
fs
dec
leave
inc
xchg
sbb
push
out
lods
jo
jno
movsl
inc
jbe
pop
pop
cmp
jp
and
adc
push
aam
mov
enter
xor
or
sti
pop
cmp
loope
dec
hlt
imul
inc
dec
xor
sbb
or
xchg
lcall
js
stc
sub
pushl
dec
fwait
and
je
inc
mov
jp
divl
mov
loop
xorl
push
sub
in
adcb
movsl
shlb
clc
lock
or
cmp
inc
jbe
jnp
push
test
test
clc
jl
sbb
or
out
mov
loope
rcrb
ljmp
imul
ds
inc
ret
lods
je
xchg
xor
cmpsl
adc
xchg
stos
int3
mov
mov
mov
ret
test
sbb
dec
inc
push
cs
fldcw
iret
jp
or
pop
mov
xor
divb
lea
jl
out
xchg
jo
jge
add
mov
inc
pop
enter
pop
fcomps
pop
std
jle
mov
xchg
add
ja
or
add
repz
mov
aaa
aaa
mov
cmp
xchg
lcall
jae
clc
in
mov
subb
out
push
cli
cmp
adc
inc
roll
mov
xchg
sysenter
dec
icebp
mov
jmp
pop
imul
sbb
scas
gs
fadd
inc
pop
and
or
push
setno
xor
shrl
in
sbb
rorl
mov
out
cs
ljmp
mov
jl
sub
std
es
or
mov
dec
or
fnstcw
xchg
divl
add
movsl
outsl
adc
pop
sub
mov
decb
jge
pop
daa
aam
scas
js
pop
mov
mov
test
adc
out
and
add
leave
pop
nop
insb
cmpsb
fs
dec
cwtl
mov
popa
push
inc
iret
test
fadds
sub
jl
pop
daa
pop
scas
movb
add
icebp
subl
jp
outsl
in
aam
jno
das
mov
in
jp
push
adc
imul
into
iret
pop
cmp
mov
inc
stc
xchg
mov
cli
xchg
imul
sbb
mov
inc
jp
mov
cmp
mov
xor
out
cld
add
mov
push
jecxz
push
test
insb
pop
xchg
push
scas
insb
jmp
push
sbbl
dec
and
repz
inc
int
push
mov
xchg
jne
mov
gs
mov
jae
rolb
mov
dec
dec
clc
cmp
sub
imul
fucom
adc
inc
icebp
add
inc
or
mov
inc
pop
add
ja
mov
movsb
andb
lods
rcll
inc
mov
ljmp
into
mov
mov
or
inc
stos
mulb
shrl
add
adc
push
or
out
movsl
fsub
xchg
pop
sub
lods
les
arpl
stc
in
jo
cmpl
mov
or
rol
loopne
mov
rclb
sti
sbb
jecxz
movsl
pop
ljmp
popf
cltd
xchg
shlb
xchg
cmpsb
adc
cmp
cmovbe
mov
std
and
andb
and
les
in
nop
lods
scas
xor
xchg
mov
push
or
lods
repz
add
and
arpl
int3
or
mov
call
leave
sub
sahf
lcall
or
repz
jns
dec
push
in
sbb
push
adc
incb
mov
push
sar
jmp
dec
push
outsb
inc
and
mov
jle
in
or
push
pop
adc
mov
push
adc
shl
nop
push
lods
out
aad
lahf
dec
push
or
leave
leave
insb
aam
dec
lds
xchg
loop
mov
inc
ljmp
fidivrs
das
add
pop
scas
int
push
mov
pop
imul
push
cmp
imul
lods
push
dec
mov
scas
dec
decb
xor
mov
in
xchg
hlt
loope
jns
inc
sti
andb
jne
or
xchg
ds
cltd
dec
xor
push
dec
inc
cwtl
cmp
dec
daa
jbe
mov
mov
pop
or
stc
and
and
mov
repnz
or
into
bound
fisubrs
les
pop
shrl
cmpsl
sarl
pop
imulb
out
push
fstl
movl
pop
or
and
arpl
fldl
outsb
dec
xchg
test
mov
inc
shlb
pop
sub
into
ret
push
cmc
addr16
andb
mov
lret
ja
call
cmp
js
cmp
inc
lock
mov
mov
or
stc
int
fstpt
dec
mov
mov
push
mov
fisttpl
scas
add
pop
push
pushf
std
aaa
mov
sahf
push
bnd
movsl
outsb
jns
jns
push
dec
cmp
xchg
fbstp
in
xor
jl
jns
xor
lds
sub
dec
sbb
mov
inc
test
addb
lret
pop
lret
out
and
ljmp
icebp
push
jecxz
sbb
jnp
enter
add
lcall
xchg
xchg
or
aas
xchg
lds
stc
inc
mov
jae
pop
pop
fmuls
pop
and
mov
clc
add
imulb
minps
fidivrs
out
sar
in
adc
mov
jno
pop
and
or
sbb
repz
pop
out
push
add
loop
test
popa
inc
sahf
jmp
jecxz
push
jns
popf
jns
mov
nop
lcall
fstl
jbe
mov
and
mov
push
iret
test
mov
sub
xchg
sub
out
iret
ret
outsb
sub
pop
cmp
jecxz
sbb
in
outsl
gs
xlat
mov
aad
loopne
clc
mov
dec
imul
int3
mov
sub
jne
pop
cmpsb
xrelease
mov
jp
sub
je
orl
loop
pop
fistl
pop
or
jl
jne
repnz
and
mov
call
outsb
cmpsb
add
out
std
mov
mov
fcompl
sub
xchg
andl
repnz
and
or
push
and
and
sub
xor
lea
xor
cmp
imul
xor
inc
sbb
nop
fcoml
pop
mov
insb
in
loope
outsl
int3
add
out
outsl
sbb
inc
mov
lods
push
mov
add
push
sbbb
cmp
sub
jne
push
insl
out
pop
shr
je
pop
dec
shrb
fsubrp
jns
nop
sbbl
inc
pusha
dec
les
jmp
jae
jbe
andl
mov
aam
int
cltd
aas
hlt
test
cld
js
rcll
mov
pop
das
push
add
and
jl
mov
jge
jmp
shll
popf
sbb
clc
nop
lret
js
inc
xor
idivb
pop
xchg
dec
xchg
push
sub
sbbl
sub
aaa
dec
mov
sub
xor
hlt
jp
push
les
stos
mov
movsb
aas
mov
add
and
mov
xor
and
inc
sbb
jb
arpl
pop
add
jnp
cmp
pop
pop
adc
loope
lock
cli
or
adc
lcall
push
sub
pop
scas
out
in
mov
into
test
cmc
inc
ja
stos
orb
mov
xchg
movsl
add
sbbb
or
and
int3
sub
jp
ffree
repnz
imul
push
push
adc
mov
xchg
lods
and
mov
mov
icebp
xchg
decl
xor
mov
and
test
dec
cmpsl
xor
rolb
test
aaa
outsb
sbb
stc
mov
inc
fs
inc
ud2
enter
lahf
push
sbb
jbe
lret
daa
ret
jb
pushl
and
inc
in
out
inc
cld
int3
out
jg
cmc
dec
jno
sbb
xorb
sbb
ficoms
inc
lcall
jo
dec
xchg
pop
push
lock
push
push
pushf
cli
adc
add
xchg
jp
lds
imul
mov
lret
aad
test
stos
inc
mov
xchg
lock
popf
add
pop
pop
stc
sbb
cmp
xor
cmp
mov
test
mov
insb
and
sahf
ret
fdivs
jne
pop
pop
push
test
adc
mov
push
jb
mov
mov
jmp
sbb
call
pop
push
mov
sub
jne
nop
mov
mov
mov
mov
iret
jb
mov
xchg
repz
out
repz
mov
inc
fcomps
xor
jb
inc
sub
js
pop
jb
lret
sbb
mov
out
les
jnp
xor
pushf
dec
test
mov
dec
pop
and
jb
cmp
pop
xor
stc
mov
push
mov
sarl
aam
sub
lods
and
test
fwait
xchg
call
movsb
xchg
xchg
inc
sub
cmp
jns
int
ret
adc
fdivs
jb
inc
pop
insl
lret
repz
xor
rclb
push
and
inc
mov
dec
in
mov
jmp
rcr
xchg
rcr
inc
sub
or
pop
pop
stos
fwait
push
sub
cmpsl
in
xor
inc
nop
lock
out
jbe
dec
into
les
sub
in
ret
sahf
das
mov
xor
sbb
cmp
or
mov
xchg
inc
lods
or
jb
into
inc
aaa
adc
jb
scas
cmpsb
jl
mov
xor
mov
mov
cvttps2pi
mov
mov
cmpl
ret
jecxz
rcll
or
mov
scas
mov
cvtps2pd
ret
mov
xchg
sbb
push
ret
out
adc
stos
sbb
pop
sub
scas
aam
je
push
and
jae
test
into
popf
ret
mov
popa
js
pushf
sbb
add
dec
out
lock
lds
mov
fwait
mov
adc
ret
or
lock
fs
cmc
cmpb
stc
xlat
stos
in
out
das
xor
dec
lea
in
call
xlat
push
mov
add
daa
sbb
cmpsb
mov
lea
imul
test
imul
test
add
mov
mov
add
outsb
aas
push
add
push
mov
mov
cli
mov
movzbl
xor
add
pop
dec
pop
adc
mov
sbb
mov
int3
pop
pop
testl
or
push
mov
mov
shlb
pop
mov
jp
loopne
test
add
jae
movsl
mov
inc
mov
fbld
jle
jo
inc
jbe
pop
in
inc
sbb
ret
mov
sar
fidivs
ja
push
push
jno
lock
and
std
push
pusha
mov
pop
pop
mov
lret
jp
hlt
cmp
int
daa
cmp
xor
xchg
lret
cmp
fidivrl
pop
pop
adc
pop
mov
push
add
rcll
loop
int3
out
sub
fisubrl
rorl
leave
mov
adc
sbb
pop
and
adc
push
loope
mov
out
dec
jmp
jmp
xchg
pop
push
cmp
repz
stos
jno
push
cmp
shrl
fcmovbe
xchg
fsubrs
jle
pop
cmp
imul
pushf
or
rolb
cmc
xor
xlat
mov
pop
push
test
dec
dec
rclb
sub
ss
sub
add
repnz
xor
mov
mov
pop
test
pop
stc
sub
xchg
iret
push
push
test
insb
fists
test
sbb
inc
ds
adc
jae
cs
movsb
mov
push
ds
cwtl
das
xlat
xchg
dec
out
out
icebp
ss
sub
mov
jae
daa
and
dec
sub
xchg
inc
and
pop
push
and
insb
clc
xchg
add
or
inc
xor
in
jmp
push
rcrl
jge
scas
inc
add
dec
lret
mov
fimuls
movl
inc
call
sub
xor
add
sub
shrl
jns
cmp
inc
push
push
xor
dec
scas
push
xor
inc
mov
pop
es
xor
in
or
adc
inc
in
inc
inc
cmpsb
in
jnp
jmp
or
aad
mov
mov
fdivs
jnp
loop
loopne
jb
daa
jne
inc
pop
xchg
pop
and
xor
dec
push
sub
clc
rorb
cmpsb
push
hlt
lret
jg
and
jb
push
loope
gs
pop
xchg
mov
daa
jbe
stc
inc
ja
add
sub
imulb
stos
and
sbb
stos
push
mov
fmull
stos
lods
dec
icebp
int3
stos
cmp
jae
lods
inc
jno
jne
aas
mov
popa
sub
push
or
mov
test
loop
lods
mov
adc
xchg
pop
nop
in
inc
pop
cli
jne
stc
cmp
xchg
add
inc
jo
or
dec
sub
push
mov
and
nop
pop
andl
fmull
enter
sbb
xchg
xor
out
pop
and
push
iret
mov
push
addr16
xchg
or
pop
pop
dec
inc
testb
mov
cwtl
jnp
sub
int3
out
aaa
sti
mov
inc
shr
les
ljmp
faddl
jb
mov
xchg
addb
xor
fistl
pop
jmp
pop
xor
xchg
mov
xchg
xchg
imul
xor
stos
data16
push
or
dec
cmpsl
sub
orb
jae
push
lods
cmc
mov
cwtl
pushf
stos
leave
mov
shrl
not
test
lret
leave
lea
pushf
inc
fadds
fstl
into
arpl
sbb
xor
mov
call
cwtl
cmp
pop
hlt
test
mov
in
andl
push
int
and
pop
xchg
mov
xchg
pop
neg
push
ret
xor
xchg
xchg
jae
cmp
mov
arpl
adc
ljmp
out
xor
lret
mov
sub
lods
cltd
dec
sub
and
sub
int
jl
cmc
clc
adc
es
jg
movsb
pop
push
xchg
or
jae
sbb
push
shll
lret
xlat
es
jl
test
repnz
or
push
or
outsb
inc
fmull
imulb
sti
cmpsb
xor
jo
xor
lds
inc
pop
in
jo
cmp
pop
xchg
cli
pop
iret
adc
add
lea
lcall
cld
pop
inc
xchg
sti
inc
fists
and
sbb
lret
outsl
lret
sarl
xlat
pop
iret
xchg
and
cmp
stos
push
mov
es
fucomi
stc
addr16
cld
cmp
ret
loopne
in
mov
insb
scas
mov
sbb
negb
or
sbb
push
pop
loope
dec
push
inc
inc
jmp
test
leave
sub
lahf
je
sub
jne
inc
push
jecxz
and
les
jb
mov
daa
test
adc
lret
scas
push
push
sub
cs
and
ss
int
pop
cmpl
cmc
mov
dec
loope
aaa
jmp
or
cmp
leave
mov
std
leave
bound
add
ss
out
cltd
and
ds
in
lahf
test
jmp
dec
fwait
lea
sbb
cwtl
lahf
mov
shrl
xor
jo
fiaddl
jb
inc
sbb
mov
arpl
lods
sub
or
inc
push
fwait
addr16
jb
imul
pop
mov
sahf
dec
mov
pop
and
cli
xchg
cmp
xchg
ret
leave
xor
adc
adc
sahf
lret
or
inc
mov
dec
cmp
lret
mov
fwait
adc
mov
lds
leave
scas
sbb
pop
and
daa
mov
scas
push
mov
cwtl
mov
mov
mov
jle
xor
xchg
mov
loop
test
mov
jg
inc
cmp
lods
mov
jo
pusha
push
and
dec
xlat
aad
inc
ret
mulb
repnz
inc
cmp
pop
sub
push
sbb
leave
mov
int
addb
xor
xor
add
sbb
into
fnstsw
lret
add
and
add
fsts
stc
out
mov
fidivrs
mov
bound
mov
jno
xor
jo
aas
jne
lret
push
js
or
push
jmp
adc
and
mov
xchg
std
hlt
push
in
push
mov
pop
ss
or
das
pop
sbb
popa
out
rorl
jnp
arpl
pop
lock
mov
imul
addb
mov
inc
lret
inc
jnp
fs
fstps
repz
jo
ja
jp
xchg
sbb
les
sar
in
pop
push
jge
push
cmp
pop
pop
test
jae
cmp
stos
mov
push
cs
xor
mov
fimull
stos
push
mov
cmp
imul
dec
es
xor
mov
push
xchg
imul
aad
inc
les
dec
push
xchg
and
and
jp
adc
inc
repz
mov
jmp
inc
lea
fwait
sub
lods
ficomps
into
test
in
xchg
int
mov
pusha
clc
ficompl
jb
jbe
movsl
jle
lock
fnstcw
es
cmpsb
or
imul
jno
jne
sub
lret
or
lahf
iret
sbb
pop
insb
pop
push
and
push
push
gs
mov
mov
je
cmp
and
fwait
out
xorb
cmc
arpl
loop
mov
sub
xchg
inc
inc
cli
jle
xor
jecxz
int
testl
aaa
daa
pop
lods
ror
in
loope
push
je
jmp
imul
adc
movsl
lahf
xlat
sti
sub
jo
loope
jge
mov
mov
xchg
pusha
movsl
mov
xlat
jmp
fs
push
mov
stos
nop
dec
mov
and
pop
shlb
loop
repnz
divl
xchg
push
cmpsl
bound
xchg
addr16
pop
ret
daa
loop
repnz
divl
xchg
push
cmpsl
bound
adc
and
xchg
ret
daa
loop
repnz
xchg
bound
push
orb
cmp
ret
daa
loop
repnz
testl
popf
dec
lea
jnp
dec
ret
pop
shll
sbbb
push
xchg
call
push
fistl
and
adc
jnp
dec
ret
pop
shrl
mov
sbb
lret
arpl
push
stos
inc
mov
adc
jnp
dec
fistpl
sub
sbb
mov
enter
repnz
jecxz
lcall
insb
push
sbb
sar
roll
es
fmull
mov
cmpsb
das
sub
cmp
or
sbb
jbe
xor
cmpsb
mov
pop
xchg
sbb
je
pushf
adc
shl
jg
out
mov
lcall
stos
xor
xor
std
fwait
adc
pop
repz
pop
jecxz
add
push
fistpl
insb
sbb
jbe
sub
mov
jns
adc
cmp
xor
sbbl
not
nop
xchg
ljmp
push
sti
dec
cmp
push
in
adcl
ret
movsb
sbb
cltd
mov
scas
mov
mov
inc
dec
jo
inc
dec
cld
cltd
add
rcrl
sub
sbb
lret
pop
fisttpl
cmp
ja
xchg
repz
cmc
push
frstor
fwait
or
cmp
dec
cli
pusha
out
add
jle
fwait
psllq
mov
dec
shlb
dec
out
lcall
aaa
fistl
pop
push
ficomps
icebp
jbe
mov
cmpsb
outsb
iret
cmp
jmp
sti
jae
inc
fistl
and
adc
jnp
dec
ret
pop
shrl
mov
sbb
lret
inc
fistl
and
adc
sbb
and
sti
sahf
cmp
adc
lret
lret
insb
push
jb
loop
cmpsl
bnd
sti
lock
mov
shlb
mov
cmp
bound
push
pop
dec
sub
ja
jge
cltd
sub
mov
enter
push
lds
aam
lret
cmpsl
out
cmp
jno
cld
sbb
xor
cmp
inc
fiadds
test
inc
fnstsw
jnp
mov
sub
cmp
pop
mov
xchg
dec
pop
ja
in
jg
inc
cmpsb
cmc
shlb
lahf
jg
push
cmp
xchg
push
jb
mov
enter
push
sbb
inc
xor
cld
pop
out
fldenv
mov
out
into
out
insb
inc
cmpsl
push
cltd
pusha
dec
push
fs
and
and
xor
pop
mov
imul
pop
pop
xor
rclb
out
aaa
rol
jno
sub
fstl
idivl
mov
lea
movsb
orl
inc
dec
inc
mov
adc
clc
xchg
dec
mov
dec
inc
xchg
popa
test
repz
loop
jae
sub
adc
cmpsb
xor
push
xchg
imul
cli
popf
adc
repz
pop
and
pop
cmp
and
rclb
add
ret
or
js
cmpsb
and
add
xor
mov
arpl
push
jp
jnp
pop
mov
inc
std
push
sbb
xor
lret
fdivrl
pop
test
add
fnsave
outsl
xchg
jecxz
mov
imul
push
test
gs
and
imul
push
pop
sbb
cmp
stc
popa
cli
xlat
fsub
and
out
jmp
sbb
sub
jmp
js
pusha
xchg
ret
roll
dec
pop
mov
xor
lods
pop
jecxz
mov
scas
sbb
adc
inc
dec
loop
testb
inc
inc
add
adc
cmp
mov
cmp
push
push
push
fsubrs
dec
xchg
divl
mov
aad
loope
gs
dec
push
in
gs
adc
pop
pop
insb
pushf
jbe
sub
adc
movsl
test
icebp
adc
shlb
je
pop
or
mov
jl
dec
lahf
das
scas
mov
lret
lret
dec
lods
dec
enter
jl
cmpsl
test
jno
mov
add
icebp
xchg
pop
aas
test
jp
push
loopne
mov
sbb
inc
sbb
inc
rcll
roll
inc
insl
xchg
lea
test
popf
loopne
ja
pop
jecxz
rcrb
out
aad
call
ss
xor
add
shl
test
sub
arpl
push
xchg
cmp
inc
xor
xchg
loope
xor
into
and
and
dec
sarl
dec
cmpsb
outsb
movsb
stos
push
jmp
subb
jle
aam
xor
mov
and
fstpl
lods
xchg
jl
into
mov
or
lds
stos
ss
imul
and
or
pop
xor
xlat
push
push
push
mov
loopne
popl
imul
push
int
jo
or
dec
nop
jnp
cmpsb
lods
xor
test
shll
mov
je
push
sahf
movsl
js
fdivrl
aas
xchg
hlt
movsl
and
xchg
add
leave
dec
push
repnz
repz
out
in
inc
sub
xorb
out
nop
lcall
outsb
sarb
leave
xlat
xlat
or
loopne
lahf
xchg
push
cmp
incb
or
out
and
test
inc
xchg
xchg
or
mov
in
fidivrs
pop
sub
es
mov
test
jae
jg
pop
inc
cmp
sbbb
daa
loope
dec
les
adc
inc
dec
jmp
outsb
and
test
stc
ficoms
xchg
into
add
mov
add
rcll
fldt
and
xchg
jae
pushf
cmpb
sti
pop
adc
sahf
scas
lret
xchg
les
adc
dec
mov
xor
imul
jb
test
pop
rolb
loopne
adc
fcmovbe
imul
fs
stos
lods
test
sub
cmp
stos
mov
testl
sub
sub
push
xor
pop
repnz
cmpsl
push
add
push
adc
movsb
push
fwait
mov
movsl
pop
add
xor
xor
loop
xchg
setg
cmp
lds
in
ds
sub
inc
add
push
test
cmp
push
adc
arpl
xchg
popf
mov
mov
rol
sub
mov
daa
insl
cs
push
sbb
popa
pop
lret
xor
stos
cmp
jno
lods
lret
mov
inc
adc
and
test
call
adc
movl
fbld
out
loop
testl
nop
adc
jno
jle
mov
sahf
dec
jnp
shll
push
push
imul
test
xchg
xor
popf
faddl
fs
lret
dec
mov
add
cmp
cmp
sbb
sub
push
pop
dec
mov
cld
mov
ljmp
int
mov
pop
sbb
dec
jb
pop
inc
shlb
mov
mov
sbb
je
loopew
pop
mov
pusha
push
sub
cs
push
dec
sbb
mov
cmp
idivb
xor
push
sub
shr
sub
adc
imul
xchg
inc
and
and
stc
and
fs
shlb
scas
mov
insl
sbb
cmp
xor
xchg
xor
dec
xlat
das
jg
fstpt
push
sahf
imul
push
jmp
pop
cmpsb
jno
mov
shll
fnstsw
sti
jae
push
mov
ret
mov
lods
mov
shr
sbb
cmp
mov
cmpsb
sbb
rorb
bound
in
ret
addr16
rorl
mov
push
or
add
mov
mov
aaa
roll
aaa
shrb
mov
scas
jbe
push
rcrl
jne
lea
sahf
sub
imul
bswap
cmp
leave
mov
je
and
stos
imull
push
loop
jae
add
and
lea
out
xchg
jg
xchg
fsubrp
aad
cmp
call
das
sub
xlat
jg
inc
push
xchg
movsb
std
push
pop
nop
sub
add
cmp
mov
call
js
stos
inc
xor
add
or
sbb
inc
mov
mov
or
mov
shlb
rorl
mov
and
push
lret
mov
daa
push
das
lock
test
jp
loopne
sub
xor
add
lods
add
adc
out
fists
shll
movsl
mov
cmp
fnsave
icebp
es
mov
add
in
pop
dec
mov
jno
in
loop
fistpl
mov
notb
cmp
jl
inc
insl
adc
sbb
xchg
out
mov
jle
gs
mov
sti
rorl
mov
cli
loopne
sub
in
test
pop
lea
enter
pop
aaa
fsubrl
xchg
testb
sub
out
popf
in
push
push
ret
push
push
pop
in
jmp
je
ljmp
inc
jge
shl
xchg
cltd
iret
dec
stos
push
fcom
xor
imul
cmp
cmp
outsb
sub
push
push
sbb
insl
inc
pop
xchg
movsb
mov
loop
repz
lret
cltd
aaa
aaa
xor
jge
test
push
ja
add
nop
jno
in
dec
scas
sub
int3
loop
ror
xlat
insl
xor
les
aam
call
jmp
xor
loopne
xchg
in
inc
lret
mov
fdivrs
call
out
xchg
or
mov
ss
sub
adc
icebp
je
xor
insb
fldcw
dec
cwtl
cmp
jg
cld
mov
ret
xor
dec
stc
sbb
xchg
sub
std
cmpsl
out
insl
pop
fldl
clc
jge
xlat
jo
clc
mov
shrb
mov
lahf
push
sub
mov
js
mov
insb
sbb
pop
fdivrs
mov
inc
das
insl
inc
insl
fildll
push
sahf
sub
jge
gs
aas
cwtl
pop
mov
je
pop
or
test
fldcw
jne
fwait
push
popf
ret
add
insl
ja
daa
shl
rcrb
xchg
std
mov
ljmp
sbb
or
adc
cmpsb
mov
rcrb
add
sbb
inc
rcr
lea
int
or
xchg
les
dec
lods
ret
cmp
outsb
mov
int
sbb
testb
sti
pop
lea
mov
push
aad
imul
inc
lock
movsb
and
push
pop
cmp
sbb
mov
addr16
and
jecxz
push
push
lret
mov
push
lret
jns
pop
movsl
cmp
movsl
sbb
fwait
sub
into
mov
adc
fwait
push
sub
stos
loope
fidivrs
dec
shrb
repz
jb
xchg
add
in
jns
cmp
push
loopne
daa
inc
add
outsb
push
loope
outsb
jns
negb
sbb
mov
xchg
lods
stos
out
stos
rcrb
sbb
out
insl
pushf
cmpsb
mov
lsl
cmp
loope
jl
fisttps
cmc
cmp
jne
jecxz
scas
hlt
test
push
sub
leave
xlat
mov
es
js
int
sbb
mov
lea
mov
imul
inc
jb
mov
mov
sub
pop
jb
mov
ljmp
sub
xchg
inc
clc
fcoml
rol
inc
lcall
sub
mov
or
push
or
popa
mov
mov
pop
push
into
add
popf
or
or
mov
or
ja
inc
adc
stc
imul
mov
push
sbbb
xchg
hlt
dec
insl
mov
mov
mov
inc
jb
in
xchg
lcall
jbe
loope
mov
jnp
test
sbb
push
das
sub
je
inc
mov
fnstcw
gs
fsubrs
lcall
push
lret
dec
push
ret
cs
mov
and
imul
mov
add
je
mov
cmp
inc
cmc
sbb
xchg
cwtl
bound
inc
iret
lahf
mov
stc
int3
adc
loop
add
pop
or
imul
dec
xchg
pusha
push
sub
inc
fsub
rcr
inc
cmp
mov
dec
xlat
xchg
fwait
inc
ss
jns
jae
loop
imul
scas
int
leave
add
xacquire
sti
leave
int
mov
and
rorb
inc
jecxz
jns
inc
ljmp
movsl
cmp
push
test
outsb
add
popf
dec
dec
jbe
sub
jp
push
rol
test
pop
nop
ds
sbb
data16
push
jns
mov
inc
jecxz
xchg
inc
test
jge
push
scas
clc
cmp
loope
mov
in
daa
mov
stos
mov
int
jge
outsb
std
add
fidivrs
push
inc
adc
adc
dec
lahf
cmp
pushl
dec
xchg
pop
bound
test
mov
arpl
repz
or
loopne
addb
ja
movsl
jo
ret
cmp
repnz
jmp
mov
mov
cli
cmp
xlat
mov
les
pop
stos
jmp
data16
ja
jmp
mov
arpl
xor
outsb
and
in
inc
jp
add
test
clc
add
mov
jmp
lock
lods
mov
mov
inc
int
add
mov
scas
stos
aaa
add
icebp
mov
popa
add
jbe
pop
sub
mov
pusha
xchg
daa
mov
int3
sub
mov
push
stc
aad
sub
int3
xor
xor
mov
arpl
push
mov
out
add
les
sarl
aas
xchg
pop
mov
sub
insb
sahf
fdivp
shlb
push
sbb
mov
stc
stos
and
xchg
aas
adc
shrb
jp
addr16
add
and
test
movsl
jb
cmp
adc
sub
xchg
call
push
mov
pop
lock
mov
push
cmc
lahf
adc
cli
mov
sbb
bound
sub
xor
mov
inc
push
orb
sbb
fsubrl
fsubr
xchg
adc
cmp
mov
dec
inc
add
mov
fwait
push
adc
sti
mov
cltd
mov
inc
ds
xrelease
fsubl
rcll
mov
sub
jbe
fcomp
add
jge
loope
outsb
call
jl
hlt
pushf
test
mov
pop
mov
js
jne
push
test
pop
les
and
mov
mov
xor
out
nop
push
lret
cmpsl
xchg
push
adc
and
test
int
jl
jge
dec
fnsave
gs
popa
push
inc
xor
ficomps
sbb
xchg
cmp
test
jmp
ljmp
ret
test
and
sti
inc
loop
hlt
insb
ja
adc
test
sub
mov
imul
test
loopne
inc
cmp
repnz
xchg
mov
sbb
mov
cltd
cmp
push
cmp
cmp
cltd
sbb
pop
lcall
mov
inc
inc
mov
add
sbb
rcrl
mov
sub
int
repz
fiadds
pop
lret
mov
pop
push
add
sub
out
mov
imul
cld
shrb
mov
enter
cmp
popf
and
dec
xchg
aam
fnstcw
jns
add
mov
jbe
jns
inc
test
pop
cmc
sub
adc
push
and
push
fadd
and
cli
sbb
adc
jp
cmp
rorl
push
hlt
mov
and
push
mov
inc
add
imul
faddp
or
int
xlat
test
rorb
cmp
jae
jmp
sahf
std
imul
int3
sbb
je
lea
ret
lods
mov
in
jo
loop
out
dec
mov
pop
out
push
push
push
pop
push
pop
push
xor
scas
xchg
jns
sbb
push
imul
dec
std
leave
jnp
mov
pushf
dec
pusha
pop
dec
in
jmp
adc
mov
add
push
dec
lret
xchg
adc
aaa
call
and
lcall
adc
push
test
fidivl
popa
or
pop
adc
iret
ljmp
push
sbb
fwait
jb
stos
loop
movsb
inc
mov
mov
adc
or
fstpl
loopne
sbb
cmc
lock
arpl
pop
ficomps
dec
jge
adc
je
in
roll
jne
into
repnz
movsb
movb
xchg
sub
orl
idivb
shlb
inc
fdivr
stos
mov
cmpsl
imul
lret
ss
fidivrl
das
fadds
js
lahf
lahf
jge
repnz
lods
int3
test
push
push
inc
iret
pop
ja
out
lock
sbb
push
aas
cmc
xchg
mov
xchg
sbb
inc
mov
push
and
push
stos
pop
shlb
pop
push
std
cmpsl
loop
xor
adc
mov
cmp
test
sbb
cmc
je
pop
push
addr16
push
and
pop
in
inc
rclb
mov
fmuls
mov
cmp
xchg
and
mov
pop
sbb
and
repnz
stos
jmp
cld
cmp
iret
cmpb
sarl
lock
addr16
sbb
mov
sbb
insl
outsl
xor
rorb
and
insl
pushf
cmp
pop
test
imul
inc
lret
mov
or
shl
repz
cmp
sarb
cmpsl
daa
clc
ret
mov
add
xor
pop
pop
sbb
add
xlat
in
lds
loopne
fldt
dec
push
imul
test
mov
mov
pop
fistl
pushf
or
pusha
xchg
daa
pop
lods
adc
dec
aad
mov
adc
xchg
jmp
inc
ret
jmp
mov
nop
loope
test
int3
dec
lea
xchg
or
aam
sti
cmp
sbb
xor
jmp
jae
fucomi
dec
inc
int
rcl
cmp
sbb
pop
sahf
ja
and
andb
out
dec
orb
nop
dec
push
pop
aad
sbb
hlt
ja
das
movsl
fcompl
scas
xchg
adc
xchg
dec
mov
dec
fnstenv
pop
and
std
sbb
or
lea
mov
and
mov
aaa
jnp
pushf
xchg
xchg
dec
ret
ds
fildl
mov
mov
push
imul
divl
adc
lcall
rolb
pop
or
in
ror
mov
sbb
pop
sub
and
sti
dec
hlt
hlt
mov
push
outsl
pop
insl
jle
lock
ja
add
rcrb
sbb
scas
mov
movsb
fstp
or
je
cmp
jp
xchg
rcrb
fiadds
cli
cwtl
pop
addr16
in
shll
ret
ljmp
xchg
scas
mov
push
popf
and
push
jne
scas
push
pop
mov
xchg
pop
push
mov
jge
mov
mov
pop
loope
movsb
cmp
movsl
lahf
and
cwtl
aas
sti
pop
icebp
sub
jbe
js
xchg
or
fmuls
lods
jl
jae
aad
sbb
pusha
fsts
cmp
dec
sub
push
cmp
and
lods
inc
add
stc
aas
stos
xchg
mov
jp
loope
leave
ret
testl
sahf
repz
ror
lcall
lret
rolb
jnp
dec
mov
jl
cwtl
mov
fstpl
ds
in
shlb
mov
ljmp
enter
inc
push
lds
pop
jo
xor
lret
lea
lcall
je
outsb
imul
iret
shrl
call
cltd
mov
mov
mov
mov
add
add
dec
mov
test
mulb
jbe
inc
lods
sarl
dec
adc
sbb
push
clc
pop
or
out
ret
movsl
insl
scas
xlat
cmp
adc
xchg
push
insl
jbe
mov
stos
inc
adc
testl
mov
jns
or
jb
in
cs
pop
mov
pushf
sti
mov
idivl
inc
dec
or
fsubrl
jae
or
mov
xchg
mov
xor
int
pop
mov
inc
inc
push
popf
add
rorl
daa
hlt
mov
pop
and
mov
jae
pop
cmp
adcb
fisubrs
push
stos
imul
lret
jecxz
fisttps
jno
addb
je
dec
popa
jo
fcomp
xor
addr16
mov
jp
and
sahf
adc
jmp
test
sub
es
aaa
inc
div
out
and
inc
adc
xchg
lahf
lret
cmp
bound
adc
arpl
ja
inc
adc
and
ja
cld
mov
loope
mov
int
add
loope
shll
and
add
jmp
cwtl
jl
jl
ja
inc
std
jae
in
mov
jae
pop
add
stc
jl
jae
test
mov
adc
hlt
test
clc
sub
pop
loope
sub
jne
repz
xchg
mov
daa
lahf
sub
incl
out
add
mov
inc
mov
lret
notl
dec
in
mov
push
mov
mov
scas
add
out
andb
jmp
sub
jno
dec
pop
je
sbb
mov
clc
inc
ficompl
push
aam
mov
fnsave
stc
fsub
dec
clc
rolb
int3
jno
leave
out
jecxz
enter
cmp
push
es
rcrl
jae
xchg
fcmove
orb
adc
rcl
int
shll
jecxz
jl
out
insb
cli
add
nop
mov
push
cmp
sbb
sbb
adc
pushf
fsts
cmp
mov
aad
ja
dec
pop
fmull
pusha
arpl
or
pop
jo
mov
mov
insl
dec
ljmp
cmpsb
das
xor
xchg
das
dec
add
andl
iret
jbe
cmp
jo
in
sub
test
test
fmuls
out
sub
push
fsubrl
fs
pop
imul
xor
mov
icebp
into
cli
loope
dec
mov
loope
xor
xchg
imul
mov
lret
sbb
bound
stos
mov
scas
sbb
cmp
int3
js
push
out
jp
inc
ficompl
ret
nop
int3
out
stos
pusha
jg
pop
dec
rolb
adc
dec
mov
sarb
mov
fcmovb
pop
push
xchg
or
sub
hlt
mov
movsl
pusha
xchg
mov
inc
mov
fwait
sbbb
daa
jne
lret
dec
out
adc
pop
shrl
mov
sbb
lret
inc
fistl
and
adc
jnp
dec
ret
pop
shrl
mov
sbb
lret
inc
fistl
and
adc
jnp
dec
ret
pop
shrl
mov
sbb
lret
inc
ficoml
and
adc
jnp
dec
ret
pop
shrl
mov
fwait
xchg
adc
add
popa
inc
stos
xor
jae
arpl
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
notb
call
and
inc
add
popaw
push
jno
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
mov
ss
mov
notb
xchg
mov
cmpsb
and
sbb
adc
inc
push
bound
aas
es
aad
adcl
sub
dec
adc
adc
adc
cmp
push
outsb
icebp
jns
mov
mov
jbe
addr16
jo
push
ss
icebp
ret
mov
mov
test
and
shll
and
push
daa
mov
notl
xchg
inc
pop
shl
lods
gs
decl
xor
enter
dec
push
cmp
outsb
sbb
dec
xchg
lock
adc
test
mov
aaa
push
jbe
push
dec
ds
negl
xchg
and
test
and
rcll
cmp
jmp
shll
insl
mov
xor
icebp
xchg
mov
cmpsb
and
inc
add
popaw
push
jno
inc
ss
pusha
loopne
lds
loope
add
rcl
and
push
das
add
imul
and
mov
idiv
mov
repz
mov
adc
add
adc
pusha
jns
imul
cmp
lods
cli
icebp
xchg
mov
cmpsb
and
inc
add
popaw
push
jno
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
popaw
push
jno
inc
ss
mov
add
aaa
pop
push
push
dec
lahf
das
jmp
xchg
clc
or
mov
cwtl
sti
rol
xor
es
mov
dec
sub
add
pop
xchg
or
es
sbbb
xchg
mov
xor
sbb
andl
loope
cmpsb
stos
daa
jmp
or
movsb
cmp
in
inc
and
divb
mov
jge
fs
int3
stc
xchg
dec
sub
mov
int3
and
or
scas
stos
push
imul
dec
popa
jne
arpl
push
pop
mov
and
cmp
mov
inc
bound
shrb
mov
fbstp
or
and
ljmp
mov
sbb
aas
into
sub
out
xchg
jo
mov
push
lret
loopne
sub
stc
repnz
mov
loopne
pop
iret
cmpsl
xor
cmp
fldcw
mov
js
and
aaa
aaa
and
add
lods
inc
movsl
inc
jp
test
xlat
xor
inc
inc
frstor
sbb
subb
in
clc
out
icebp
aas
jmp
in
xchg
push
es
movsl
inc
stc
adc
dec
jo
shl
ds
and
test
das
out
lods
dec
cmpsl
mov
and
add
inc
or
dec
pushf
inc
sbb
pop
scas
pop
rorl
cvtdq2ps
and
xchg
xor
fwait
push
push
daa
inc
adc
cwtl
jo
pushf
mov
ja
add
dec
push
das
pop
cmp
or
mov
push
icebp
mov
xor
adc
and
mov
push
enter
inc
sahf
mov
arpl
inc
xchg
cmp
sbb
test
test
and
sub
insb
sbb
ret
push
rcll
jae
imul
idivb
sarl
adcl
loopne
mov
mov
ror
call
dec
jp
fsubrs
ss
add
andb
or
cmpsb
mov
test
xchg
mov
sub
in
fistps
daa
mov
outsl
cmpl
arpl
pop
mov
inc
cmpsb
adc
js
bound
lods
xchg
popf
xchg
sub
test
ficompl
aaa
stos
mov
out
mov
jp
shl
ret
sbb
pop
gs
adc
push
mov
inc
push
test
dec
cltd
in
addr16
insl
xchg
pop
sub
cmpsb
popa
int
pushf
sub
test
jg
sbb
rcll
lods
lret
jne
js
popf
xchg
jg
and
test
std
mov
insb
dec
cmpb
pop
mov
cmp
inc
or
cmpsl
lcall
ficoml
fldcw
sahf
daa
lahf
out
ss
xchg
xor
fistl
ja
push
jl
ss
adc
in
mov
add
cmp
push
loopne
call
xchg
jp
adcb
movsb
insb
and
sub
adc
or
mov
call
lahf
lret
and
xor
adc
rcrb
movsb
push
jno
insb
enter
sarb
xchg
jp
mov
xlat
arpl
nop
in
dec
daa
xchg
xchg
dec
cmpsl
orl
cmp
mov
dec
and
jp
pushf
lods
movsl
daa
xchg
mov
std
inc
push
xor
inc
aas
pop
sbb
sub
int
mov
icebp
cmp
xorb
push
sub
mov
je
inc
les
loop
sub
xchg
jae
xor
fsubrs
fidivrl
inc
cmpsb
inc
dec
pop
sarl
imul
or
punpckhbw
jmp
movsb
por
ret
lret
cmp
lods
sub
rcrb
or
dec
jcxz
leave
or
cmp
scas
daa
cwtl
mov
jp
or
shlb
add
pop
mov
outsl
adc
inc
cmpsl
subl
je
and
jge
addr16
xchg
les
orb
shrb
mov
push
mov
jl
loopne
roll
outsb
ret
adc
jecxz
sub
sbb
xchg
popa
loope
or
bound
mov
inc
lods
inc
stos
hlt
xchg
dec
imul
jmp
jo
idivl
sbb
rcl
test
jmp
lods
cmpsl
adc
inc
pushf
mov
xor
mov
inc
xchg
and
in
mov
adc
xor
scas
sbb
in
xor
xorl
jecxz
mov
xor
mov
xor
pushf
pop
pushf
sub
mov
push
imul
sbb
pop
fs
cmp
pop
testb
cmp
mov
fiadds
mov
push
test
cld
sbb
sbb
arpl
add
movsl
or
je
shlb
test
test
movsl
xchg
dec
in
stos
test
sahf
pop
xor
push
xchg
push
sbb
or
pop
orb
jno
fwait
xlat
mov
add
icebp
sub
add
push
sbb
push
pop
ljmp
pop
mov
in
icebp
mov
aas
aam
xchg
into
xchg
cs
cld
lods
sub
jle
or
push
or
pop
xor
jae
mov
push
outsl
xor
jmp
jmp
hlt
inc
imul
mov
xor
mov
pop
and
jno
iret
pop
test
adc
mov
js
dec
inc
pop
bnd
repnz
fdivl
pop
mov
and
jmp
pop
mov
jmp
inc
notl
pop
lock
les
into
mov
xchg
and
idivb
aam
jnp
imul
rcl
mov
popf
sub
dec
ret
fwait
mov
or
in
lds
in
xchg
mov
jb
movsb
mov
and
jbe
jecxz
xor
fwait
sub
cld
gs
and
cmp
mov
stos
jo
inc
xchg
inc
xor
push
iret
push
icebp
cmpsb
cs
mov
mov
repz
adc
ret
sbb
out
lods
inc
jecxz
sarl
mov
sbb
add
mov
cmp
cmp
fcomps
testl
insb
add
icebp
mov
mov
cmpsl
cmp
pop
cli
xchg
inc
jl
adc
aam
imul
dec
jge
in
cmp
rol
push
ds
mov
movsb
sub
jae
hlt
mov
pusha
sub
add
and
aam
insl
sbb
mov
dec
out
adc
adc
inc
mov
mull
add
repz
mov
dec
ds
jne,pt
jmp
cli
je
mov
movsb
adc
push
clc
outsb
out
cmpsb
es
sbb
int3
outsl
cli
jge
mov
ss
aas
jo
mov
aas
repnz
and
adc
lret
leave
adc
lods
sub
lahf
ljmp
mov
fistps
adc
jmp
add
test
jbe
push
sbb
lds
into
inc
stos
push
xchg
cmpsl
mov
dec
and
neg
jo
jnp
ret
pop
lods
shlb
push
std
push
xor
add
lret
mov
add
test
push
sub
mov
outsl
call
mov
sub
inc
enter
xchg
add
push
not
inc
jg
xor
fcoms
les
ret
arpl
cwtl
daa
xchg
adc
jae
jbe
and
dec
push
jbe
jl
test
xchg
imul
test
cmp
sahf
shrb
out
scas
adc
fxch
sub
or
mov
sub
repz
dec
push
mov
dec
daa
mov
lret
inc
lret
arpl
xchg
sbb
insb
cmp
push
or
ret
cmp
ret
pop
cli
mov
add
jmp
sahf
cmp
xlat
inc
mov
pusha
push
and
scas
adc
mov
call
imul
xor
jns
add
cli
mov
popf
mov
mov
dec
iret
movsl
mov
adcb
inc
xlat
fimuls
pop
nop
or
pop
cmp
cmpsl
fsubrs
idiv
dec
xchg
call
cmp
lock
xor
in
add
add
sahf
insl
test
xor
daa
add
icebp
pop
insb
mov
je
inc
popa
push
mov
adc
lea
aam
lret
mov
cmp
xchg
and
xor
das
jae
call
cmpsl
lret
cmp
enter
add
sarl
xchg
sbb
mov
out
gs
into
jb
outsb
and
mov
mov
push
mov
gs
xchg
stos
adc
lock
das
dec
sub
xor
xlat
sti
and
xchg
xchg
imul
aaa
dec
notb
in
mov
cmpsb
or
pusha
and
push
aad
adc
mov
pop
jl
or
inc
sbbb
fwait
and
stos
out
rclb
sar
inc
inc
sub
hlt
in
jl
int
xor
loope
push
push
mov
sub
sti
shr
sbb
in
or
mov
cmpsl
mov
mov
dec
notl
xor
jo
push
push
dec
out
sub
push
cmpsb
push
push
lcall
pop
inc
and
mov
fwait
mov
jmp
xchg
sub
pop
leave
cmp
inc
mov
mov
sub
aad
jecxz
shl
jbe
cmpsl
int3
or
jle
ds
inc
jno
mov
add
sub
mov
dec
pop
xor
xchg
push
lahf
xchg
sarb
mov
xchg
jnp
push
cld
cltd
daa
xchg
jbe
jg
out
imul
push
jns
mov
out
push
sbb
xchg
jno
jae
loope
roll
mov
xor
cmpsl
or
mov
cmpsb
test
pop
xor
cli
sub
mov
sbb
and
add
dec
jns
cmp
xchg
dec
mov
xchg
mov
jnp
aaa
push
xlat
xchg
cmp
dec
sbb
jp
sbb
jge
jns
addr16
or
adc
mov
jle
and
test
outsb
fbstp
sbb
inc
push
jbe,pt
stos
adc
outsl
inc
mov
call
mov
jg
hlt
shrb
fsubl
dec
push
push
push
test
imulb
inc
mov
pop
in
pop
cli
xor
cmp
roll
aam
inc
outsb
aaa
xchg
push
lret
and
inc
xor
sub
repnz
movsb
dec
add
add
aad
daa
aam
gs
jecxz
jmp
loop
inc
jmp
shrl
mov
popf
dec
sti
sahf
lods
scas
and
cltd
xor
cmp
mov
mov
lea
in
fiaddl
mov
jb
or
data16
jb
or
or
sbb
ficoms
mov
mov
repz
dec
mov
push
clc
imul
ljmp
or
ds
cltd
in
fbld
int3
sahf
in
inc
dec
jne
xchg
inc
divps
bound
cld
aas
stos
cld
mov
aaa
sub
imull
packssdw
inc
aam
dec
add
clc
fisubrl
loope
iret
inc
xchg
adc
jle
cmp
adc
push
sub
or
push
xchg
push
roll
add
adc
insl
xchg
sbb
stc
jg
fsubrp
leave
lret
mov
cltd
ret
and
imul
inc
test
insb
bnd
mov
mov
xor
stos
es
sbb
mov
mov
repz
shll
subb
outsb
dec
adc
fistpl
mov
cmc
out
push
mov
int3
mov
fs
adc
sahf
das
std
jg
lds
xchg
adc
mov
outsb
lret
cmp
adc
xor
add
or
vhsubpd
test
arpl
lds
xor
ja
out
adc
mov
test
div
sbb
push
inc
inc
daa
add
test
nop
jg
xor
cmpsl
loopne
aaa
add
and
insl
pop
ds
mov
aaa
loop
lret
cmpsb
xor
pop
arpl
repnz
mov
rcll
push
pop
movsb
push
mov
out
out
outsb
insl
clc
imul
xor
das
inc
sub
mov
adc
mov
data16
rorl
dec
cmpsl
jno
xchg
ja
mov
movsbl
icebp
adc
push
xchg
test
iret
subb
out
add
int
and
in
aam
sarb
rorb
mov
fstpt
mov
cmp
sbb
es
inc
cmpsl
out
gs
mov
pop
daa
pop
hlt
ljmp
repnz
into
mov
cmp
cmp
cmp
sub
hlt
jp
je
addr16
leave
mov
or
xchg
movsb
add
and
push
mov
sub
add
repz
ja
jo
add
jecxz
lods
call
lahf
cld
ret
mov
loop
or
clc
bndldx
mov
push
lock
push
and
popf
mov
lahf
scas
mov
out
sbb
and
pusha
push
cmp
pop
add
ljmp
or
xor
dec
inc
out
mov
pop
cli
sarl
sub
sub
test
sub
mov
ljmp
outsb
mov
mov
je
stos
cmp
int
or
daa
rcrb
jns
and
or
ret
mov
and
sub
mov
loope
lahf
xor
ret
aas
mov
dec
lret
test
test
sub
shl
mov
jne
xchg
ret
jg
call
pop
xchg
cmp
aaa
cmpsb
xor
mov
mov
mov
sub
icebp
pop
and
jae
add
xchg
and
cmpsl
js
lods
fidivrs
std
pop
lock
es
xor
repnz
ror
push
lods
pop
rolb
in
xlat
jb
js
push
fisttpll
aam
fsubr
int
jmp
sbb
lret
lock
and
jecxz
dec
xchg
shlb
push
dec
scas
in
xchg
insb
nop
shrl
pusha
mov
fdivrs
js
dec
sub
inc
mov
sub
fs
cltd
test
fs
xchg
movsl
adc
insb
bound
leave
push
ret
std
mov
fstl
pop
fldl
rolb
or
test
mov
out
cmp
jge
bound
lret
cmc
and
mov
out
cmpsb
inc
into
push
inc
jge
mov
and
cwtl
xlat
js
lods
idivb
movsb
in
mov
sbb
mov
mov
je
and
pop
xchg
pop
xchg
stos
dec
imul
lahf
imull
stc
in
out
stc
incb
xlat
ljmp
xor
ss
out
cwtl
aam
xchg
pop
inc
je
and
js
push
inc
out
jbe
add
mov
xchg
xchg
xor
mov
rclb
push
icebp
xor
and
jo
jp
out
cmpsl
mov
sar
popa
cld
add
stos
or
add
lret
call
lock
mov
popa
or
jbe
push
add
dec
lds
ljmp
bound
movups
mov
mov
push
mov
lock
hlt
jb
mov
xor
cmpsb
aaa
push
and
inc
dec
insb
repnz
shl
xor
xchg
adc
sbb
ljmp
icebp
ja
addr16
in
mov
mov
adc
add
imull
sahf
jae
sbb
lcall
jge
cmpl
jecxz
pop
dec
or
jo
or
in
fsubs
pusha
cltd
pop
lods
xlat
mov
mov
dec
ljmp
pop
in
pop
mov
cs
jmp
cmp
xchg
out
shlb
pop
lahf
cmp
mov
dec
xchg
and
cmp
rcll
int3
xor
clc
sub
jbe
push
in
jae
sbb
xor
jbe
gs
out
stc
sahf
add
mov
jg
dec
mov
cmp
or
shll
repz
sbb
or
mov
imul
sahf
dec
or
jmp
or
cmpsl
sbbl
sub
inc
and
outsl
mov
jge
jne
sub
call
sub
sub
aaa
mov
or
jmp
shll
orl
dec
es
lcall
leave
outsb
sahf
pop
int
push
and
mov
jmp
lock
ja
pop
push
cs
in
pop
mov
in
push
inc
out
add
and
mov
insl
cmp
adc
out
jl
dec
rol
stos
push
xchg
or
movsl
push
dec
adc
ljmp
call
cmp
stc
pop
push
push
push
and
push
mov
out
mov
mov
ja
inc
mov
or
inc
cwtl
jmp
movsl
dec
add
loopne
sub
adc
dec
pop
negb
pop
add
dec
dec
call
stc
mov
ror
add
lcall
test
fistpll
mov
repz
and
xorb
in
cmp
dec
inc
idivb
push
pop
dec
cmp
movsb
inc
pop
cmp
jmp
pop
dec
into
inc
xchg
dec
roll
sbb
dec
lods
add
add
sar
imul
movsl
push
sbb
iret
xchg
sbb
add
outsb
movsl
call
arpl
adc
inc
mov
imull
mov
jae
jb
jae
lock
mov
cmp
cmc
pop
out
shr
pop
cmpsb
test
jne
shrb
inc
jbe
jg
xchg
in
lea
xor
adc
push
test
jne
push
mov
push
subl
sbb
lock
dec
mov
stos
sti
xchg
test
inc
std
and
jo
cmp
adc
mov
stos
es
add
loopne
jae
scas
or
out
inc
pop
cltd
push
push
into
aas
ret
mov
mov
rcrb
pusha
sub
mov
xor
cmp
adc
cmp
shlb
fnstenv
dec
rcll
mov
pop
jae
aad
les
mov
inc
add
outsb
std
dec
sbb
xor
shl
sbb
movsl
add
aas
stos
sbb
loope
cmpsb
mov
adc
loop
sbb
rcrl
cmp
lcall
je
dec
je
mov
iret
and
movsb
mov
imul
dec
arpl
enter
push
dec
inc
movl
dec
stos
push
sbb
in
dec
lods
push
test
dec
scas
sbb
mov
outsb
push
fdivrp
jns
and
and
fisubl
popa
in
nop
pushf
sub
je
ficomps
das
movb
stos
and
outsb
fsubrp
adc
ret
aaa
fisttps
ret
test
add
pop
daa
cwtl
inc
std
adc
mov
xchg
test
cld
jno
in
repz
dec
ss
xor
fsubp
adc
ret
pop
sahf
iret
jnp
sub
test
cs
xor
xchg
cmc
mov
pop
sbb
jae
sbb
mov
pop
iret
out
pop
lret
cwtl
roll
cld
push
subb
inc
xor
mov
rolb
add
xor
subl
xchg
or
fs
mov
lret
cmpsl
lcall
movsl
cmp
mov
stos
xchg
add
mov
jge
pop
popa
ret
mov
or
in
leave
decb
movsl
xchg
outsb
sbb
adc
test
mov
popf
test
je
dec
daa
loop
aaa
xor
xor
xlat
enter
jecxz
inc
out
push
imulb
pop
xor
cmc
adc
repz
pop
sarb
leave
sahf
pop
ja
cmpsb
and
out
in
pop
mov
mov
xchg
iret
rorl
xor
mov
jo
daa
lods
push
pop
out
add
xchg
adcl
aas
dec
lcall
notl
movsl
std
mov
mov
addr16
mov
inc
and
mov
push
xor
ret
pop
loope
inc
mov
add
cmp
std
add
jp
jne
push
dec
sar
xchg
jg
cmp
test
notb
outsl
mov
adc
add
ficompl
jg
xor
dec
and
pop
jmp
sub
sbb
pop
pop
je
repnz
ss
std
mov
sbb
cld
bound
jno
mulb
outsl
jae
outsl
mov
mov
mov
mov
arpl
rcrb
push
leave
int3
popa
repnz
sahf
insb
ret
pushf
lods
jnp
adc
push
leave
or
imul
dec
stc
xchg
icebp
aaa
je
je
out
popa
mov
gs
out
mov
cltd
outsl
xchg
or
mov
out
jne
mov
int
movb
icebp
xchg
mov
cmpsb
and
inc
add
popaw
push
jno
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
popaw
push
jno
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
popaw
pop
jno
inc
ss
mov
notb
push
shll
pop
and
adc
adc
and
ret
dec
mov
cmp
xchg
pop
xor
and
adc
add
or
push
imul
nop
test
insb
stc
shr
mov
xor
add
jmp
pop
pop
dec
pusha
jns
imul
cmp
fsub
ds
fcomps
out
add
dec
pop
jae
daa
add
or
inc
jmp
in
aad
xor
sbb
xor
lcall
mov
jno
pushw
cltd
cmp
mov
icebp
ss
nop
and
js
adc
jno
mov
adc
mov
xchg
mov
icebp
dec
sbb
lea
nop
scas
push
dec
jo
mov
andb
cld
lock
sub
and
sbb
jns
jbe
loopne
fldl
jmp
arpl
xor
sub
repz
hlt
inc
xchg
mov
testb
arpl
nop
ret
xor
dec
out
sub
cltd
jno
lahf
cltd
push
imul
mov
lock
stc
or
inc
add
xor
pop
push
cwtl
jns
jo
ljmp
scas
mov
mov
or
fs
imul
cmc
mov
fdiv
stos
movsl
lods
lahf
cmpsl
rcll
push
or
jne
addr16
cmp
xor
lock
out
shrb
stc
shr
rcrb
or
cmp
sub
pop
jo
pusha
jns
imul
nop
test
loopne
shr
rcrb
or
cmp
sub
pop
jo
pusha
jns
imul
xor
lods
imulb
repz
notl
daa
dec
mov
insl
cmp
push
addr16
sbb
or
aam
repz
sarl
test
cmp
ret
mov
nop
aas
mov
add
outsb
jmp
sbb
jp
cmp
cs
cmp
aas
jns
mov
imul
call
jo
mov
pop
fimuls
push
jecxz
and
and
or
fisubrl
adc
icebp
in
mov
mov
es
sub
dec
pop
and
fistpll
hlt
dec
adc
sarb
movsl
push
clc
sbbb
dec
leave
in
push
sahf
cmova
dec
xchg
es
cmp
data16
std
or
xchg
inc
dec
sbbb
and
shl
xchg
push
and
pop
mov
mov
mov
mov
lahf
test
cmp
xor
sbbb
aam
arpl
popf
jecxz
pop
ja
or
jno
stos
dec
mov
and
rcl
jne
ret
les
adc
stos
xchg
push
push
inc
adc
mov
lcall
clc
std
jmp
fdiv
xchg
hlt
gs
jmp
into
inc
movsb
xchg
pop
insb
dec
xor
push
daa
in
inc
adc
outsb
loop
outsb
imul
inc
xchg
or
out
insb
push
adc
nop
out
push
je
outsb
or
cld
ja
sti
add
adc
repz
add
loope
jle
out
pop
insb
sbb
movb
lahf
es
mov
sbb
mov
mov
cmpsb
shll
movd
leave
outsb
mov
fs
inc
test
jle
xor
mov
lods
dec
scas
out
aam
or
lret
orb
pop
iret
rorl
dec
mov
jge
and
and
jo
dec
add
pop
pop
pop
gs
shrl
pop
fnclex
imul
dec
push
pop
push
cmpb
cmp
pop
adc
shll
pop
les
cmp
roll
or
loop
in
lahf
add
clc
iret
mov
repnz
push
add
rorl
cmp
xchg
and
push
sub
pop
frstor
pusha
sub
xor
xchg
mov
nop
shlb
mov
jmp
xchg
cmpsb
call
or
jns
cmp
movb
cli
sub
add
js
and
jno
and
push
lret
mov
cli
sahf
rcll
xchg
sar
sub
arpl
xor
push
pop
sbb
stc
scas
pop
out
scas
mov
add
test
arpl
push
pop
mov
or
lods
in
movsl
jae
pop
mov
addr16
ret
xchg
lea
ficompl
test
sbb
mov
jp
mov
cld
loope
fwait
jns
leave
xchg
ret
nop
cli
aad
jmp
stos
test
mov
in
xor
jmp
mov
mov
mov
inc
test
adc
push
stc
xchg
sarb
rorl
jg
in
push
or
jmp
sbb
add
sbb
adc
js
sti
in
inc
test
repnz
or
in
lret
cmp
sub
jg
sahf
mov
int3
pusha
cmp
jno
fwait
cmp
jb
jl
stos
cld
pop
fwait
iret
shll
leave
xor
xchg
popa
mov
pop
pop
mov
jg
mov
test
in
jae
in
push
jle
sarb
lea
adc
lock
fidivl
mov
popf
jmp
fdivrl
in
das
mov
pop
cwtl
push
imul
pusha
mov
cmp
and
inc
sub
fcompl
xor
enter
push
iret
mov
call
inc
pop
mov
in
sarb
fistps
shll
xor
jae
std
pop
mov
adc
leave
mov
push
je
loop
sahf
mov
push
push
cmp
imul
sub
add
jbe
gs
sbb
loop
out
pop
mov
popf
imul
outsb
sti
cmp
jb
rclb
adc
sbbb
outsb
pushf
incl
sbbl
popa
ss
call
xchg
das
push
jnp
rcrb
push
inc
push
insb
insb
rcll
dec
lods
jno
or
push
or
js
out
inc
mov
mov
scas
cmp
and
push
fistl
push
dec
fs
mov
das
or
cmp
push
cwtl
icebp
add
outsb
sub
mov
push
sahf
mov
inc
fucomi
lock
imul
mov
dec
fs
xor
adc
stc
addr16
cmp
xchg
add
lcall
das
push
sub
cli
repz
lcall
into
adc
and
sbb
out
cwtl
adc
adc
lock
cmp
icebp
sbb
icebp
pushf
andl
push
sub
cmp
imul
mov
jg
mov
xchg
mov
bound
movl
jp
mov
ljmp
xchg
sub
pop
sbb
test
jl
fcomps
stc
out
or
aam
jmp
mov
dec
fidivrs
enter
sbb
test
das
ljmp
sti
bound
cmp
js
ljmp
sti
mov
call
sbb
test
pushf
xchg
and
and
pop
mov
rorl
dec
xchg
cli
xor
jne
jp
addr16
movsl
adc
mov
or
sbb
loope
data16
add
xchg
and
jl
add
mov
pop
mov
out
dec
mov
mov
enter
jb
pop
lcall
mov
cwtl
and
clc
fbstp
pop
xor
rcrl
loope
lock
dec
enter
les
sbb
inc
jg
test
jge
jnp
nop
mov
and
fdivl
pop
hlt
sub
jne
sub
lock
pop
pop
jecxz
cwtl
xchg
lds
js
loope
jecxz
cmpsb
les
movsb
iret
jno
pop
loope
jmp
mov
outsb
and
loopne
ds
fldenv
pushf
xchg
mov
hlt
mov
push
jle
cmc
pop
jb
mov
sub
nop
adc
dec
mov
push
repnz
cmpsb
dec
mov
inc
das
or
cmc
cmpsb
jo
scas
dec
gs
jns
cmc
sbb
push
les
repnz
scas
mov
jecxz
fbstp
xor
test
dec
cs
scas
lcall
dec
ret
sub
test
pop
in
bound
or
sbb
xchg
add
xchg
in
cmp
lcall
add
add
stc
push
sub
lock
inc
adc
sub
pusha
data16
push
and
movsb
dec
aas
mov
iret
mov
adc
lds
aaa
outsl
bnd
cltd
dec
bound
sbb
jnp
push
xchg
adc
cli
fstl
scas
push
and
sbb
clc
xchg
mov
stos
cmc
mov
outsb
jmp
pop
std
insl
into
pop
inc
hlt
mov
jb
shlb
inc
fcmovne
inc
jle
sti
out
lret
into
fs
push
jge
mov
pop
add
inc
push
imul
mov
xchg
jnp
shrb
dec
and
push
jp
adc
xor
loop
fsub
cmp
inc
and
sbb
cld
inc
dec
mov
movsb
outsb
or
mov
lods
mov
sub
into
add
or
push
mov
insb
mov
sahf
outsb
adc
repnz
mov
push
clc
pop
aaa
add
jns
aas
jg
push
notl
lret
imulb
popa
ss
dec
int
mov
into
out
testl
adc
push
adc
movsl
pop
or
sahf
adc
push
xchg
jl
inc
push
adc
xor
cli
mov
jb
jge
fsubl
mov
in
lds
sbbb
sbb
ret
lds
jecxz
or
jns
jb
sub
sub
xorb
lods
cmpsl
jmp
xchg
xchg
stos
ljmp
xchg
gs
pop
fiadds
adc
xchg
push
mov
or
jp
leave
das
gs
mov
and
ss
into
out
push
dec
fld
cltd
sbb
pop
pushf
mov
mov
mov
mov
mov
push
inc
test
jmp
push
jg
and
sbb
mov
mov
push
cli
ret
repz
jnp
popf
cmp
jbe
adc
add
sbb
adc
aaa
adc
call
faddl
dec
aaa
sub
cmpb
mov
aas
jnp
fstl
into
pop
mov
daa
loope
das
add
loopne
addr16
cmp
jl
add
cwtl
sub
xor
sarl
loope
mov
mov
out
in
lcall
sub
jg
pop
xchg
in
dec
popf
add
push
adc
sub
shl
lods
push
aad
lret
dec
loope
rclb
pop
iret
adc
int3
dec
xor
cmpsb
add
call
sbb
or
inc
cmpsl
push
pop
lods
jo
xchg
imul
icebp
ret
add
cwtl
mov
sbb
fists
xchg
mov
ss
stos
movsb
pop
int
hlt
dec
mov
mov
push
jne
fsubrl
fs
loop
stc
push
mov
pop
pushf
push
lcall
hlt
sbb
fcomp
shrl
lea
mov
or
out
xor
pop
or
adc
out
test
lret
fneni(8087
aaa
inc
inc
mov
add
and
pop
mov
cmpsl
pop
mov
cmc
push
cmp
xor
fld
mov
dec
idivl
aaa
xor
pop
mov
das
loope
pop
stc
jo
pusha
outsl
push
roll
scas
or
xorl
xchg
sub
mov
outsl
mov
jae
xor
jns
ja
lds
das
jno
stos
mov
pusha
sarb
inc
xchg
fistpl
lret
test
cmpsl
js
jmp
dec
es
jno
xchg
outsl
lds
adc
lcall
jae
cmp
push
ficoml
aas
lcall
aas
xor
andl
mov
dec
sbb
adc
insb
mov
mov
andps
or
jp
jo
push
and
sbb
in
or
push
lods
aad
jge
jge
sub
mov
das
cs
scas
les
xchg
rcrl
cmp
mov
xchg
jae
sarl
cmp
in
adc
dec
sarb
mov
inc
popa
loope
sub
xchg
xor
dec
xchg
inc
ds
fld
mov
sahf
push
inc
and
ss
ss
std
dec
mov
jmp
jge
inc
sbb
pop
add
dec
out
lret
jae
mov
fldt
mov
mov
shlb
nop
sub
adc
into
nop
loop
mov
aad
leave
jmp
sbb
aas
out
mov
sub
jb
andl
add
push
test
sbb
mov
shl
jecxz
jns
xorb
inc
pop
test
test
or
out
cli
pusha
stos
dec
stos
xchg
sbb
dec
push
cmp
ss
imul
ljmp
pop
minps
push
sub
cmpb
sbb
popa
es
xadd
jg
shll
fdivr
cmpsl
test
sarb
pop
pop
push
mov
push
or
cmp
cmpl
fwait
lahf
out
fmuls
sbb
cmp
lret
cltd
mov
and
pop
loope
inc
adc
es
inc
out
xlat
out
into
push
mov
cmp
test
cmp
adcl
movsb
or
insl
lock
arpl
testl
sbb
aaa
pop
lea
sbb
shlb
pop
adc
fnsave
pop
xor
les
mov
cmp
and
aam
in
add
mov
lds
out
push
xor
or
or
or
xlat
push
xlat
adc
fcom
pop
add
jbe
mov
ja
repnz
xor
xor
cmc
push
notl
adc
jno
andb
mov
ljmp
pop
rcll
dec
xchg
mov
incb
rcl
pushf
sahf
imul
into
push
sarl
ret
lea
cmp
dec
mov
xchg
mov
push
repnz
movsb
or
dec
xor
dec
mov
add
xchg
and
push
mov
pop
aaa
inc
mov
sub
jecxz
mov
fcoms
mov
sti
enter
cmp
sti
lret
aas
je
push
data16
jnp
fwait
in
or
mov
mov
in
fs
adc
inc
arpl
push
jg
sub
out
push
or
or
push
je
xor
movsb
fstl
mov
add
push
xchg
shll
jg
or
push
jnp
mul
push
ljmp
addb
ds
adc
fs
adc
int
xchg
xchg
cmc
mov
xorb
add
lret
addr16
sub
sbb
mov
cs
subb
movsl
fcomps
fistl
fistl
adc
and
sahf
clc
adc
xchg
test
xchg
lret
les
push
popa
mov
dec
sbb
pusha
xchg
add
lods
xor
out
xchg
cmp
es
sarb
xchg
sbb
stc
movl
pop
cwtl
mov
or
lods
mov
mov
xchg
fldt
or
push
xchg
jecxz
das
fsubrl
dec
pop
push
jp
mov
test
aad
shll
pop
mov
or
daa
sbb
jb
or
sbb
lods
jns
or
stc
xchg
adc
or
lock
jbe
and
mov
jae
iret
lret
rclb
and
icebp
les
sub
cs
lcall
dec
dec
mov
sarl
xchg
inc
leave
lahf
subb
in
orl
and
push
orl
mov
jnp
pop
sub
lcall
mov
pop
cmp
loopne
sbb
sub
movsb
insb
cmpsb
cltd
cmp
ret
or
mov
inc
inc
mov
or
push
cmp
add
cmpsb
mov
test
mov
repnz
xchg
pop
xchg
jge
call
mov
xchg
lods
bound
fidivl
xorl
jp
cltd
insb
loopne
outsb
xor
stos
ret
ds
sub
sub
stc
js,pn
cmc
fcomip
pop
cmc
adc
dec
lock
xlat
jne
jmp
push
inc
xchg
clc
dec
fcomi
cmp
mov
daa
adc
jg
pop
push
push
aam
repnz
or
fidivrs
ja
cmp
add
or
test
jg
mov
mov
or
rolb
sarl
out
push
adc
outsb
push
and
outsb
mov
xchg
sub
nop
call
outsl
cmp
xor
mov
adc
pop
push
dec
dec
lret
xor
sar
or
push
push
gs
sub
add
inc
repz
dec
mov
sahf
fwait
pusha
fadds
mov
aam
fisubrs
mov
inc
jne
dec
push
pop
mov
scas
jp
icebp
imul
insl
loop
mov
test
push
sbb
mov
out
pop
int
add
addr16
pop
mov
or
imul
xchg
jbe
or
pop
pop
pop
add
lret
fsubr
xorb
sub
ret
int
in
xchg
or
push
add
stos
outsl
push
cmpsl
icebp
bound
sti
addr16
scas
xchg
or
in
sub
mov
int
mov
cmc
and
repnz
add
loop
and
xlat
setbe
pop
lcall
cwtl
stos
add
adc
xor
test
xchg
dec
sahf
pop
orb
pop
fadd
cmovne
icebp
jnp
ss
pop
jbe
test
jmp
outsl
je
cld
cmpb
insl
outsl
mov
test
jg
add
cs
je
outsb
sahf
pop
ja
int3
out
adc
inc
jbe
and
rolb
popa
fisubrl
mov
gs
push
jae
mov
inc
mov
jle
inc
push
icebp
movsl
lret
in
dec
arpl
cmc
push
cmp
add
ds
xchg
cmp
into
cmpsl
loopne
cmpsl
les
test
push
jge
enter
jae
sub
mov
inc
in
inc
add
dec
push
test
fnstsw
and
in
in
mov
inc
xchg
hlt
adc
cmp
add
int3
add
out
test
pop
add
int3
hlt
ret
cld
das
adc
push
es
bound
fcoms
clc
out
cmp
sbb
or
pop
das
mov
or
mov
push
std
cltd
push
clc
sub
push
xor
sbb
lea
movsl
lods
mov
call
cmpsl
int
cmpsl
std
push
mov
call
lret
add
xor
cld
xchg
std
sbb
jecxz
test
out
mov
cs
mov
ret
stc
repnz
faddp
fs
jp
lret
mov
xor
fs
xor
je
pop
pop
sbb
mov
repnz
inc
xchg
inc
mov
dec
inc
das
loop
lods
mov
cmp
popa
jbe
inc
push
es
fmul
xchg
arpl
int3
mov
sbb
daa
push
jne
jg
add
pop
shrb
jp
cmpxchg
push
cmpsb
movsb
mov
je
push
js
mov
push
lods
mov
aam
shlb
mov
xchg
insl
mov
jns
aad
pop
add
adc
lods
stc
loop,pt
dec
mov
mov
inc
cmc
in
cmpsl
mov
inc
in
mov
lret
pop
clc
js
or
and
scas
sub
sahf
pop
fisubrs
cli
push
jo
jno
loop
in
mov
enter
pop
mov
dec
iret
jg
adc
inc
ret
pop
jo
js
adc
stos
inc
xor
aas
lods
outsl
mov
roll
jae
xor
lret
sbb
setb
cmp
shlb
arpl
fcmovnu
push
mov
add
ja
adc
sub
data16
fcmovnbe
dec
mov
cmpsb
cmpsb
daa
push
sub
call
sahf
cmovbe
pop
cmpb
loope
pop
mov
xchg
xchg
in
imul
arpl
push
mov
push
mov
daa
pop
loopne
mov
lcall
jp
fidivrl
or
lods
ret
insl
bound
ret
insl
ds
add
jg
orb
dec
add
xor
add
and
cmp
adc
ja
mov
jge
inc
mov
lahf
fwait
dec
dec
jne
sub
mov
jmp
pop
in
lcall
fs
lret
adc
mov
xchg
adc
test
mov
cltd
bound
sbb
imul
push
inc
dec
js
or
mov
add
test
insb
loope
jmp
cmpsl
ds
sarb
mov
xchg
add
jmp
mov
or
dec
in
aas
jnp
jecxz
dec
xchg
shll
lret
sub
das
mov
or
inc
dec
push
cmpsb
fidivrs
sarb
or
ret
daa
or
negb
push
loope
outsb
rorl
inc
sbb
aad
ror
dec
xor
cmp
fiaddl
pop
out
fwait
fwait
sbb
inc
leave
push
addb
adc
inc
adc
push
andl
add
jge
jae
jg
dec
std
test
xor
rclb
mov
and
popa
shr
xor
adc
lcall
jnp
mov
push
insb
clc
int3
push
and
enter
dec
dec
or
fisubrs
test
jle
roll
jg
cmp
cmc
mov
and
push
or
push
sti
sbb
pop
cmpsb
icebp
and
push
fadds
jbe
sbb
not
cmp
jae
push
imul
lds
jae,pn
xchg
lock
xchg
xlat
sarl
inc
sahf
and
mov
lods
adc
cmc
sub
dec
sbb
pop
in
xchg
or
cmpsb
adc
dec
imul
bound
adc
mov
fidivl
dec
aaa
addb
jbe
fsubrs
lods
andb
jecxz
cltd
cmp
push
push
inc
out
adc
pushf
out
fiadds
insb
xchg
inc
inc
or
add
inc
jno
xchg
fisubrs
adcb
insl
mov
popa
and
and
int
das
xchg
jmp
movlps
jmp
add
loope
in
sub
std
adc
popf
les
lret
out
or
out
pop
cmc
test
fadds
mov
lods
lods
cmp
scas
cltd
repz
push
sub
add
lods
fcoml
shlb
f2xm1
leave
loopne
shr
rcrb
or
cmp
sub
pop
jo
pusha
jns
imul
nop
test
loopne
shr
rcrb
or
cmp
sub
pop
jo
pusha
jns
imul
call
leave
dec
stc
shr
rcrb
or
cmp
jo
pusha
jns
pop
inc
lods
mov
mov
f2xm1
leave
loopne
push
imul
xchg
adc
ja
clc
rcrl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jl
insb
addr16
push
dec
inc
mov
inc
outsb
aaa
add
std
mov
int3
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
in
imul
out
xlat
ret
fistpl
gs
addr16
push
push
inc
and
pop
or
in
iret
les
jecxz
lock
hlt
adc
aas
cmp
pop
sub
fstpl
xchg
push
push
xchg
mov
inc
sbb
fdivr
and
out
and
lock
sub
cltd
pop
cltd
or
and
xor
pushf
xchg
jae
xorl
scas
cmp
test
xchg
in
push
stos
mov
inc
xchg
mov
adc
xchg
jg
adc
xchg
sub
stc
ja
in
sbb
push
xor
inc
mov
pop
pop
popf
mov
roll
lods
lret
xor
push
jge
daa
cld
or
stos
cmp
inc
in
cmpsl
arpl
mov
sbb
pop
ret
ss
out
pop
add
add
popa
mov
das
pushf
sar
mov
hlt
pushf
xchg
mov
pop
push
dec
inc
sub
cmp
sbb
adc
out
xlat
aad
movsb
mov
cmpsl
xchg
or
cmp
inc
dec
push
dec
dec
push
push
or
cld
mov
mov
hlt
leave
ret
loope
adc
or
inc
push
pop
sub
sbb
pop
arpl
test
cmpsb
ljmp
das
xor
sub
sbb
or
cld
imul
out
xlat
int3
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
imul
out
xlat
int3
mov
xchg
mov
jecxz
aas
test
sub
sarb
enter
enter
sbbl
in
sub
fs
mov
imul
test
mov
jo
dec
sbb
add
ljmp
or
out
cld
decb
rcr
out
xchg
loope
loop
mov
in
aaa
mov
dec
imul
xchg
mov
xchg
adc
iret
sti
sub
lea
inc
push
adcb
ja
sahf
cmp
push
push
imul
lret
ss
movl
ja
sub
scas
or
notl
call
in
xor
cmp
cli
shlb
leave
in
mov
aaa
rcrb
or
xorb
mov
dec
adc
sbb
jnp
and
jb
push
jne
mov
negb
stos
sar
jnp
lds
fistl
sbb
mov
mov
push
ja
pop
aas
or
fbld
int3
out
jecxz
insl
jecxz
xchg
or
lods
inc
add
testb
xchg
inc
arpl
cmpsl
mov
mov
cmpsb
add
adc
lock
xor
cli
cmpsb
ret
mov
inc
rcll
xlat
and
fstl
loopne
fldl
xor
xchg
xadd
sub
push
sbb
inc
pop
lret
ja
dec
fdivrl
pop
test
cmp
add
dec
shll
cwtl
stc
sub
repnz
cltd
xchg
or
push
xchg
push
push
cmp
sub
fbld
fimull
mov
test
pop
and
out
pop
push
shlb
int3
xor
stos
test
mov
in
xorb
xchg
fistpl
dec
mov
lret
das
mov
adc
sbb
or
shlb
jecxz
nop
cmpl
iret
lds
inc
fimuls
out
aas
out
movsb
sbb
out
jne
repz
hlt
pop
lahf
outsl
mov
cmc
test
pop
pop
movsb
xchg
mov
fmuls
inc
cmpsl
inc
loopne
pusha
xchg
ljmp
clc
pop
test
lahf
pop
adc
das
xchg
dec
xor
enter
adc
cs
xor
sub
mov
bound
rcr
psrad
add
sbb
push
scas
push
xchg
dec
xor
cmp
call
ret
out
xchg
dec
nop
mov
clc
cld
fcmovu
sub
sub
xlat
add
stos
mov
sub
and
jp
repz
or
sbb
add
out
cs
xchg
pushf
icebp
add
sbb
inc
pop
outsl
and
push
sbb
aas
pop
imul
sub
pop
mov
lock
jl
cmpsb
je
dec
je
mov
jecxz
not
push
or
out
add
jp
dec
sbb
mul
out
and
fcoms
adc
mov
sub
jmp
cmp
pop
inc
loope
cmp
jo
jae
mov
enter
and
mov
repz
xlat
js
inc
inc
push
lret
sub
int
test
scas
inc
cwtl
push
in
sub
dec
clc
push
inc
mov
jge
inc
push
xor
rorb
inc
test
das
sbb
mov
aam
dec
cmp
aad
icebp
mov
ja
and
xor
mov
adc
scas
push
aas
mov
inc
sub
mov
sub
and
cmp
js
outsl
scas
lods
stos
mov
adc
add
mov
les
inc
dec
xor
in
push
xor
pop
mov
inc
or
dec
xchg
add
xchg
jns
mov
xlat
je
aas
fwait
lods
add
jae
iret
fldenv
jp
cli
adc
jnp
in
lret
shrl
jae
xadd
loope
arpl
sub
ret
jmp
jg
xlat
cmp
push
sub
iret
loopne
inc
and
aam
dec
and
movsb
in
xchg
mov
mov
fimuls
xchg
into
pusha
ds
and
hlt
xchg
sub
in
popa
jnp
cmpsb
or
ret
and
pop
push
sbb
fidivrs
sbbl
mov
call
das
pop
jmp
xor
pusha
frstor
cmp
adc
stos
ss
popa
inc
sbb
scas
call
push
mov
dec
jl
and
xchg
fidivrs
cwtl
outsb
push
xchg
push
or
cmp
divb
cmpsl
xor
ljmp
stos
enter
mulb
lds
jle
sub
inc
out
and
mov
jne
ss
xor
xadd
lods
fwait
push
jbe
push
in
cmp
or
fisubrl
sub
lret
xchg
imul
int3
inc
add
ret
and
lcall
push
xor
ret
andl
repnz
dec
lahf
xchg
jp
jmp
inc
sbb
cli
pop
pop
push
mov
xor
cmpsb
dec
sbb
popa
jmp
push
gs
mov
push
inc
jmp
jmp
push
aaa
adc
sub
pusha
jb
les
inc
ret
xchg
mov
or
fistps
les
cmpsl
xlat
mov
lahf
mov
mov
lds
mov
loope
js,pn
int3
adc
js
enter
nop
mov
add
movsb
inc
fnstsw
mov
pop
cltd
push
sub
jp
mov
leave
aaa
lods
cmpb
das
roll
test
sbb
in
pop
shlb
sub
push
jl
push
scas
mov
push
push
lock
xor
dec
and
pushf
lahf
dec
mov
popa
sub
outsb
xchg
sbb
jbe
sar
or
xlat
xchg
psubusw
pop
or
mov
pop
mov
pop
push
xchg
aad
je
xor
mov
mov
mov
mov
popf
jp
jns
add
push
mov
in
cmpsl
lock
mov
psubusb
mov
lds
push
push
test
lds
jmp
cs
repz
dec
xchg
cli
mov
insl
in
fdivl
push
loopne
outsb
mov
jne
sti
and
mov
mov
loop
outsb
push
and
push
pop
rcr
add
repz
mov
xor
inc
int
fnstcw
rcr
sahf
xchg
popf
bound
enter
and
clc
dec
lods
loopne
insl
in
cmp
je
leave
push
cwtl
or
jno
inc
push
rolb
js
dec
popa
sub
cmp
dec
mov
sti
js
psubb
movsb
or
xchg
add
call
pushf
negb
jecxz
sbb
add
pop
jno
jns
mov
cmp
xchg
pop
xor
sub
lods
add
pop
aaa
mov
mov
inc
stos
loop
out
in
stc
inc
bound
sti
mov
cmc
sub
cmp
xor
mov
addr16
in
lcall
jp
enter
push
jns
or
xchg
xchg
shlb
aaa
xchg
stos
push
rcrb
inc
pop
pushl
dec
rcrb
cmc
pop
mov
icebp
or
adc
mov
js
pop
xor
je
inc
into
jns
dec
int
jg
iret
js
adc
in
popf
cld
loopne
add
cmp
rorb
out
pop
jge
fistpl
lcall
cmp
dec
pushf
jg
and
pop
sbb
loopne
pop
dec
lcall
sar
into
popa
pop
mov
leave
xlat
cmp
subb
pushf
int
pop
rclb
jb
and
mov
aam
imul
lock
or
in
cmp
arpl
mov
fdivr
mov
pushf
or
pop
mov
lods
push
loope
mov
mov
mov
fisttpll
mov
js
or
mov
jnp
cmc
jp
hlt
les
pop
out
leave
outsl
out
or
sbbb
ja
cmp
jg
fimull
jns
and
mov
add
mov
push
fadds
andb
sub
hlt
mov
in
jns
repz
ja
loope
add
push
fwait
scas
mov
or
or
arpl
stos
insb
adc
mov
repnz
lea
sbbb
push
and
add
inc
cmpl
jg
xor
and
add
jne
ret
xchg
xor
insb
insl
adc
xchg
loope
sahf
test
int3
push
jbe
mov
and
jmp
adc
and
ret
inc
adc
xor
add
shll
lcall
mov
negl
mov
icebp
jge
mov
je
jle
push
cs
movsl
fnstenv
sub
pop
xchg
mov
gs
push
outsl
jbe
push
rcrl
sbb
inc
idiv
push
dec
sbb
lahf
mov
iret
mov
mov
rolb
cmp
push
ret
pusha
mov
not
push
fsts
cmp
repz
fstl
inc
jp
pop
insl
push
cwtl
and
xchg
stos
adc
push
insl
cmp
fidivl
xchg
cmp
pop
inc
mov
push
leave
cmp
mov
test
icebp
sbb
sbb
xchg
sub
dec
cmp
imul
invd
inc
mov
sbb
in
inc
lea
in
jae
jmp
xor
sbb
jecxz
adc
xor
mov
cmp
notb
mov
std
dec
pusha
scas
lahf
push
pop
pop
popa
ds
push
enter
mov
and
xor
rorl
xchg
mov
mov
scas
sbb
out
mov
cltd
mov
sub
inc
add
pop
lcall
ret
jge
xchg
inc
push
push
sub
stc
xchg
dec
inc
call
cmp
insl
in
xchg
and
stos
fmul
lcall
insb
js
push
aaa
xlat
cmc
mov
inc
xor
adc
adc
ret
dec
sub
clc
sub
lret
mov
lea
dec
jbe
mov
cmp
cmp
and
and
xchg
scas
les
xchg
rcll
ljmp
inc
divb
push
add
out
cmc
pop
pop
ss
cmp
lahf
js
cmpb
clc
cmc
in
out
iret
cmp
dec
jne
stos
add
mov
jbe
jp
pop
pop
imul
mov
mov
sub
xor
push
mov
ja
push
xchg
loope
jnp
adc
xor
mov
xchg
divl
dec
dec
add
jmp
jl
cmc
insb
imul
out
shll
loopne
stc
imul
and
shrl
out
mov
mov
add
rorb
decb
imul
cmp
xchg
sub
pop
adc
mov
clc
sub
lods
das
test
push
shrl
testl
add
lock
mov
xchg
add
mov
sti
and
popa
inc
xchg
push
push
cmpsl
add
iret
in
jno
lret
sub
or
jp
cmp
sbb
adc
mov
mov
mov
inc
and
paddsb
stc
mov
xor
mov
aaa
xchg
call
fnsave
test
cmpl
push
loopne
lcall
dec
daa
push
push
sbb
lds
int
scas
call
stos
and
adc
addr16
push
cs
dec
lods
or
mov
mov
push
mov
pusha
mov
js
shlb
insb
cld
inc
mov
add
mov
call
push
incl
mov
fnsave
pop
mov
mov
ror
das
out
cmpsb
rcll
xor
mov
xchg
xchg
lods
dec
mov
sub
test
std
arpl
iret
lock
lret
mov
sbb
inc
mov
dec
pop
xor
mov
jns
sarb
or
jae
and
stc
cmp
les
adc
or
jg
cmp
or
pop
lret
push
test
xor
mov
ret
or
out
add
mov
and
adc
push
and
das
add
or
mov
daa
sub
popl
test
aad
fadds
stc
cs
xchg
pusha
fidivrl
gs
add
add
lahf
sbb
test
xchg
xchg
pop
stc
cmp
fsub
mov
push
repz
mov
mov
inc
je
sbb
push
ss
inc
jne
arpl
adc
mov
out
std
push
imul
movsb
les
ss
leave
js
pop
andb
lahf
dec
enter
inc
sbb
shrl
daa
subl
xchg
icebp
lods
test
icebp
ret
push
cwtl
xchg
imul
cli
mov
add
dec
sbb
push
and
sbb
out
cwtl
arpl
les
mov
xor
dec
and
inc
push
lods
aaa
scas
push
or
loopne
int
repz
outsl
imul
out
hlt
add
mov
push
gs
outsb
data16
inc
loopne
sbb
cmc
push
pop
xchg
in
pop
mov
push
imul
iret
xchg
fdivr
fisttpll
xchg
out
bound
mov
jo
sub
mov
sub
pusha
js
jo
mov
lahf
ret
cmp
sbb
and
pop
ja
gs
aas
enter
cmpsl
pop
scas
mov
rcl
cmp
das
imul
or
stos
daa
add
cs
xor
enter
shrb
arpl
adc
lahf
adc
jnp
clc
adc
inc
pop
jo
pop
fcmovnbe
test
movsb
div
xor
in
sub
jo
and
push
in
or
test
imul
sub
jns
ror
aas
xchg
in
sub
cmp
mov
cmpsb
out
adc
push
out
data16
jp
adc
push
int
inc
jecxz
scas
lret
pop
imul
aas
push
sbb
and
test
fstps
push
ficompl
or
xchg
push
sbb
xchg
sub
add
push
dec
push
fs
jbe
inc
mov
jbe
mov
repz
loope
adc
fildll
inc
mov
jb
pop
ljmp
test
in
fcmovnb
movsb
and
lea
push
iret
aad
push
aad
and
dec
or
cli
stc
xlat
or
xchg
mov
js
jmp
por
xchg
sub
shlb
xor
mov
and
leave
ret
data16
xor
mov
mov
dec
daa
dec
fsub
int
sub
shlb
mov
add
mov
adc
add
insb
push
and
xor
int
jnp
shll
in
or
stos
and
repnz
and
mov
rorl
xchg
loope
ljmp
sub
jns
mov
inc
jmp
adc
push
loope
scas
mov
push
dec
imul
add
mov
mov
scas
je
outsb
pop
pushf
popf
mov
lret
lea
dec
daa
push
pusha
lods
frstor
mov
add
mov
add
or
movsl
dec
sarb
inc
hlt
repz
ret
and
push
sbb
xor
inc
repnz
cbtw
and
ds
fpatan
jecxz
xor
pop
fimull
lcall
inc
push
sub
das
push
in
xchg
push
sub
test
mov
push
aam
outsl
dec
pushf
push
fcmovu
xchg
cmp
cmp
push
into
xlat
testb
repz
mov
mov
push
ret
add
lock
outsl
jno
sbbb
rcrb
dec
xor
xor
mov
in
sub
add
sub
mov
fadds
inc
ds
xchg
test
xor
xchg
and
or
jns
int
xchg
pop
add
jae
adc
mov
add
dec
repz
add
sub
shrl
sub
jae
lds
es
imul
add
hlt
mov
call
push
mov
lret
mov
mov
sub
fsubr
cmp
lds
sbb
add
hlt
lods
aaa
push
xor
popf
jns
jp
mov
cmp
or
loop
out
cmpsb
mov
or
enter
xor
or
and
sub
and
shlb
int3
or
dec
xchg
bound
outsl
test
dec
call
push
adcb
into
or
iret
xor
sarl
mov
lcall
test
jae
cmc
push
pop
dec
adc
mov
sti
pop
add
jg
lcall
fwait
icebp
out
sbb
sbb
out
dec
into
lock
mov
cmp
cwtl
das
sbb
cmp
cmp
ror
add
push
mov
and
pop
push
insl
ja
lods
ficoml
imul
dec
lea
push
inc
int3
idivl
repz
mov
cmc
mov
ret
lock
or
mov
xchg
mov
mov
dec
call
fnstcw
sbb
sarl
sub
mov
jp
jno
sub
dec
fisubrl
mov
cwtl
jb
mov
fwait
repnz
push
mov
push
leave
mov
fidivs
pop
xchg
sub
xchg
mov
fidivrs
popf
pop
leave
dec
mov
dec
aas
sbb
movsb
fadds
pop
arpl
imul
jecxz
add
jg
dec
stos
push
sbb
and
aad
adc
cltd
adc
outsl
dec
mov
shll
dec
loop
lods
mov
dec
inc
mov
xchg
xchg
fstpt
addr16
lret
in
jmp
data16
lds
insl
inc
aaa
insl
inc
mov
into
jecxz
push
stos
lea
xor
fs
adc
ss
rorb
popa
je
xchg
pop
lea
mov
mov
jno
stc
movsl
or
rorl
cmp
loope
mov
shlb
add
dec
pop
rclb
jne
test
mov
adc
bound
cmp
mov
cmp
pop
addl
cmp
cmp
sub
int
mov
fwait
rcl
adcl
imul
xlat
sahf
aam
neg
test
mov
mov
sbb
pop
shr
cmp
rep
inc
fcoml
sub
in
inc
xchg
orb
mov
xchg
cmpsb
lods
pop
insl
pop
push
xor
or
inc
lret
dec
shl
ds
add
xchg
aas
and
in
ds
lret
aad
inc
movsb
cld
lahf
sbb
xchg
mov
stos
or
ds
aam
lds
ds
xchg
adc
dec
popa
mov
ret
push
push
or
lret
int3
test
stc
jne
jecxz
out
insb
out
and
rcll
add
and
jbe
adc
dec
addb
xchg
mov
dec
mov
repz
scas
scas
mov
xchg
and
mov
enter
sbb
js
push
pop
popa
rcll
cmp
cmc
mov
bound
cmpsb
mov
add
jmp
in
popf
add
push
add
mov
sub
mov
enter
or
jno
jnp
xchg
int3
out
cmpsb
aas
clc
mov
push
jo
mov
ljmp
inc
or
jge
scas
fisubl
rolb
dec
fistpll
pop
daa
dec
jmp
lahf
xor
scas
jg
into
loopne
dec
pop
mov
out
sub
lret
mov
jb
or
outsb
add
cltd
sahf
bswap
sbb
stos
mov
inc
add
pop
xchg
mov
push
jae
pushf
jns
fsubrs
mov
dec
jb
push
xor
mov
fmull
mov
sub
test
fdivrs
lcall
adc
int
fidivrs
iret
ds
negl
sub
add
insl
sub
inc
inc
jmp
incl
aad
loopne
loopne
jp
andb
outsb
dec
pop
mov
add
aad
add
jecxz
dec
or
push
dec
sbb
inc
pop
jmp
xlat
sbb
jbe,pn
inc
and
fs
outsl
test
daa
enter
dec
movsb
stos
push
insb
int
xor
pop
in
mov
arpl
dec
aad
inc
or
ret
jge
and
pop
or
stos
adc
mov
pop
lea
mov
mov
les
addr16
pop
repnz
clc
fisubrl
pushf
cld
jge
sbb
pop
or
aam
movsb
dec
andl
gs
cmp
outsb
cmp
mov
cwtl
lock
je
lea
mov
cmpsb
imul
stos
das
xchg
mov
push
outsl
xlat
fcomi
out
xchg
movsl
test
push
mov
addb
mov
lock
ja
popf
xchg
imul
adc
cmp
jecxz
in
cmpsb
or
repz
lods
bnd
rclb
test
and
jge
or
push
movsl
nop
fs
xor
mov
push
push
mov
push
push
dec
inc
cmp
sub
sbb
or
cld
imul
out
xlat
int3
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
imul
out
xlat
int3
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
imul
out
xlat
int3
mov
xchg
mov
pop
push
dec
inc
ds
sub
pushf
pop
mov
add
adc
xlat
int3
mov
aas
and
arpl
js
imul
pop
xchg
sub
sbb
addr16
sbb
dec
repz
imul
cmp
leave
jns
dec
jmp
cmp
jmp
imul
cmp
leave
jns
dec
jmp
cmp
jmp
inc
mov
out
push
ja
inc
out
nop
and
fwait
cmp
xchg
mov
xor
push
sbb
push
add
xchg
and
int3
mov
imul
and
cmp
xchg
scas
stc
addr16
hlt
ss
int3
out
sbb
cmp
xlat
enter
mov
fs
test
jmp
add
mov
add
push
pushf
in
insb
pop
push
cmp
sar
adc
dec
pop
out
popa
pop
cmp
sub
xchg
mov
push
and
test
dec
push
mov
imul
or
es
outsl
mov
dec
mov
andl
or
and
cmpl
xchg
jns
dec
jmp
cmp
jmp
imul
cmp
mov
sbb
outsb
rorb
call
loopne
lcall
jge
jge
fiaddl
mov
fildll
jl
pop
test
mov
scas
sub
jl
pop
das
dec
in
sub
mov
lods
sub
sbb
sbb
dec
stc
jns
imul
cmp
leave
jns
dec
jmp
cmp
jmp
imul
cmp
insb
push
inc
es
inc
fdivl
int3
xor
rorb
lret
data16
jbe
jne
or
dec
sbb
fisubs
insb
push
lods
and
mov
std
sbb
push
inc
fcom
mov
sub
mov
jecxz
jp
cmc
fisttpl
pop
in
jle
sarb
das
lea
and
jmp
mov
dec
movsb
jae
cmp
out
loop
add
jp
and
push
jecxz
and
adc
pop
movsl
ljmp
call
lock
call
adc
push
shrb
adc
or
test
jbe
cmp
push
cmpl
xor
inc
gs
push
aam
or
ja
shll
jno
inc
gs
jp
testl
stc
jmp
es
in
sub
mov
pop
call
outsb
xchg
lds
dec
call
push
mov
incb
sbbl
xchg
loope,pt
into
jae
inc
sbb
mov
push
mov
je
mov
cltd
or
jo
jl
sub
mov
jne
inc
fisubs
pop
cmp
sarl
or
addb
das
outsb
fbstp
stc
arpl
jle
pop
mov
wrmsr
adc
push
hlt
aam
cmc
adcb
and
lcall
lock
lcall
mov
shll
sub
jmp
xor
inc
jb
fisubrs
stos
stc
outsb
mov
loop
clc
das
xor
mov
test
cmp
scas
clc
xchg
adc
fstpl
in
lock
cmp
dec
mov
push
xchg
dec
adc
test
xchg
xchg
pop
ja
xchg
aaa
jmp
nop
push
jb
dec
cmp
imul
mov
push
scas
add
push
add
inc
rolb
xor
fnsave
frstor
dec
push
fwait
cmp
inc
lcall
jno
movsl
out
pop
xor
pop
loopne
pusha
or
imull
add
push
arpl
jbe
mov
andl
push
pop
push
mov
in
aad
sbb
out
sti
push
fs
cmp
iret
or
lahf
or
mov
stc
push
sub
push
fdivrl
push
xchg
xchg
pop
imul
sbb
mov
mov
push
out
jbe
and
sbb
xchg
aam
subl
jno
outsb
jns
xchg
fisttpl
in
push
mov
shlb
dec
dec
xchg
jno
hlt
sub
mov
popa
dec
adc
push
mov
inc
and
gs
shrb
mov
jmp
in
test
lret
aas
call
lds
stos
rsm
int3
adc
sbb
sbb
pop
es
sub
xor
aad
and
sbb
movsl
mov
mov
sbb
cwtl
xor
inc
xchg
insb
mov
enter
iret
jecxz
jb
movsl
mov
xchg
or
shl
mov
clc
and
imul
sub
jne
and
push
dec
xor
xchg
jbe
scas
mov
pop
ficomps
mov
mov
in
std
jge
cltd
dec
cmp
cld
outsb
and
daa
add
int
cwtl
imul
pusha
jge
or
insb
cmc
rcl
out
dec
adc
into
xor
xlat
mov
repz
mov
add
pop
mov
and
fidivrs
cmp
and
push
cmc
cmp
out
inc
pop
cmpsb
sbb
push
sbb
pushf
dec
dec
int
in
cmp
je
adc
pop
pop
cwtl
xchg
push
mov
div
in
ljmp
testb
xchg
in
fdivrl
repnz
pop
pop
sbb
in
fbstp
xchg
cs
push
popa
pop
or
test
leave
test
hlt
mov
push
popf
xor
dec
jmp
mov
out
adc
adc
sbb
out
mov
rcll
lods
dec
mov
test
pop
mov
arpl
cld
fidivrl
mov
adc
mov
pop
gs
and
pushf
mov
pop
int
mov
fidivs
dec
mov
loop
sbb
adc
jmp
and
dec
hlt
popa
add
pop
pop
into
lcall
rorb
stos
xor
test
in
test
imul
pop
insl
test
flds
je
add
xchg
dec
adc
xor
int3
fwait
daa
sub
outsb
mov
push
aam
mov
cmp
pop
push
adc
mov
cmp
and
mov
inc
test
daa
ljmp
or
mov
lahf
push
loope
mov
pushf
cltd
adcl
jge
gs
xchg
dec
push
pop
jge
jp
sbb
dec
daa
lret
mov
cli
repz
sub
pop
scas
rolb
es
lods
cmp
shlb
jp
or
adc
hlt
out
imul
jle
sbbb
mov
adc
cmpsl
popf
pop
punpckhbw
test
cwtl
pusha
lret
or
loope
push
pop
xlat
mov
das
aam
mov
mov
out
sbb
and
jbe
dec
jmp
and
mov
fstl
aam
test
fsubrl
ret
xchg
sub
pop
jae
fcmovbe
prefetchwt1
mov
and
adc
inc
jge
sub
fisubl
cmp
adc
lods
sbb
xchg
insl
jb
or
test
pop
scas
dec
vpunpckhwd
sti
leave
xchg
nop
lret
mov
cmpsb
push
pop
lcall
loopne
cwtl
jge
inc
out
pop
arpl
mov
push
jecxz
mov
fsubp
nop
das
test
fwait
ja
adc
jb
gs
jg
pop
bound
popa
push
mov
imul
out
inc
call
add
bound
sbb
push
cmpsl
es
jo
push
daa
in
mov
aam
adc
push
jnp
or
insb
das
sbb
dec
outsb
rorb
ret
mov
ret
and
test
dec
push
mov
pusha
cmp
stos
js
jmp
stc
pop
xor
mov
xor
iret
scas
pop
jmp
push
leave
mov
mov
mov
jp
notl
sbb
mov
lods
stc
adc
loop
mov
sbb
loope
jo
push
out
test
pop
icebp
cmp
cmpl
sbb
out
fiadds
add
jne
rcr
dec
pop
cmp
in
stc
into
fwait
outsb
jl
pop
test
jl
fdivrs
cmpsl
xor
pushf
sbb
js
in
adc
or
pop
mov
pop
mov
push
mov
pop
cmp
xor
stos
cmp
popf
rorb
sbb
cmp
xchg
aad
test
dec
ljmp
aad
mov
jmp
xchg
js
movsb
pusha
and
cmp
or
test
sahf
popa
xchg
movsb
jae
outsb
int
add
lds
or
psubsb
xchg
push
or
push
push
inc
test
scas
xchg
jne
push
fldenv
jmp
stos
dec
pop
outsl
sbb
jmp
xchg
adc
xorb
or
cmp
aaa
push
pop
jp
adc
subl
push
xchg
sub
xchg
sub
mov
cmpb
sub
aam
dec
push
push
insb
rcrl
call
push
fcoml
mov
mov
hlt
xchg
jns
adc
ffreep
jo
lods
cmc
mov
or
ds
popa
bound
adc
mov
or
push
push
ss
ffree
xor
test
ret
test
pop
repz
mov
adc
into
lret
push
and
mov
je
and
insb
mov
sbb
stos
inc
loop
pop
test
addr16
cmc
mov
test
and
mov
sbb
push
decl
shlb
js
lahf
cld
mov
xor
fcomps
mov
test
shl
repnz
fisubrl
ss
lds
stos
scas
mov
jp
bound
test
xor
hlt
out
push
scas
mov
jmp
mov
xor
test
inc
inc
pop
push
push
rcrl
popf
out
inc
push
dec
jl
test
incb
sbb
cmp
dec
loopne
cmc
outsb
fcmovb
lcall
fs
pusha
jne
inc
subb
pushfw
mov
and
sarl
mov
add
ds
push
jns
adc
out
insl
mov
pop
dec
jecxz
cmp
cmp
and
dec
clc
cmpl
cli
xor
mov
xor
out
mov
jl
mov
sub
pop
mov
scas
pushl
out
loope
jg
xor
and
mov
dec
or
push
or
sbb
roll
jecxz
mov
or
push
mov
fstpt
jno
rorb
inc
hlt
bound
dec
popf
jp
adc
cmp
mov
xor
sbb
repz
daa
ficompl
jg
shrb
ljmp
insb
cmc
icebp
sbbl
les
loope
test
push
jb
repnz
stc
mov
pop
out
movsl
fcmovnb
lock
call
fmull
mov
test
sub
fstpl
and
ds
in
fldt
add
cltd
loope
das
xchg
out
lret
lcall
mov
mov
cmp
push
or
jne
dec
lea
dec
pop
or
push
jge
imul
mov
cmp
dec
mov
xor
xchg
addr16
shll
and
jnp
lret
mov
jg
xor
or
xchg
das
push
add
ss
test
ret
adc
cwtl
push
inc
andb
roll
nop
stc
psrld
fwait
popa
fildll
sbb
je
test
sub
push
adc
and
xchg
pop
xor
leave
repz
aaa
mov
mov
lea
fbstp
leave
iret
jle
xchg
jp
popf
dec
sbb
push
pop
or
cld
mov
test
pop
and
into
sbb
gs
movsb
push
out
repnz
and
lret
pop
push
push
or
in
in
fcmove
fnstenv
insb
insb
roll
insb
dec
cmc
scas
mov
inc
stc
dec
jle
mov
jg
jae
test
mov
jg
jae
out
xor
lret
pop
pop
fs
into
sbb
das
push
test
mov
lock
scas
inc
push
into
sub
mov
pop
cmp
jp
inc
inc
inc
ja
lock
sub
inc
loopne
inc
add
les
mov
add
stos
mov
push
pop
push
jmp
test
xor
mov
insb
insl
pop
cmp
pop
jne
sub
mov
sub
jl
cmp
hlt
ljmp
xchg
fisttps
ljmp
mov
jo
mov
jns
or
and
pop
xchg
mov
jle
sub
sub
or
shlb
mov
add
lds
xchg
hlt
iret
mov
dec
fnstenv
jns
test
adc
div
sbb
aaa
xor
ljmp
in
inc
inc
bound
out
or
push
cld
push
cmpsl
mov
mov
dec
or
test
xor
sbb
mov
jmp
and
or
or
jno
cmpsl
mov
push
repz
ret
adc
add
sub
movl
int3
inc
push
in
out
es
jnp
xor
push
mov
mov
lcall
jg,pn
repnz
or
adc
pop
inc
lcall
mov
pop
push
inc
mov
scas
mov
test
xchg
sbb
xor
cmp
fcoms
out
data16
shll
outsl
push
xchg
lods
mov
test
fwait
push
mov
push
inc
mov
shl
lods
jle
nop
int
pop
dec
cli
in
mov
dec
push
add
enter
mov
lds
test
adc
decb
pop
push
cmpl
out
adc
mov
inc
std
cmc
xor
dec
inc
insb
mov
cli
int3
fs
xlat
sti
jge
and
fiaddl
pusha
ret
add
mov
xchg
testl
inc
sub
clc
pop
add
mov
or
push
into
and
sbb
adc
aam
into
mov
ficomps
or
or
nop
pop
adc
push
dec
arpl
clc
ja
xor
mov
xor
out
push
cmpsb
jbe
and
jb
testl
icebp
jne
pop
les
in
inc
icebp
nop
xchg
into
pop
sub
jb
add
pop
gs
xor
cmc
rcrl
dec
lcall
mov
sub
pop
hlt
lods
sbb
popa
adc
cmc
push
xchg
in
test
dec
lahf
out
fisubl
fxsave
mov
lret
cmpsl
imul
test
mov
js
push
rcrb
jle
loopne
mov
and
pop
mov
enter
icebp
sbb
lret
mov
das
and
push
jne
sbb
sbb
outsb
scas
add
arpl
xchg
mov
dec
mov
add
or
arpl
popf
test
lea
js
push
cmp
sbb
mov
testl
dec
jmp
out
scas
mov
mov
shlb
in
int
pusha
ss
cmc
shrl
or
inc
cmp
and
rorb
insl
push
push
popf
stc
add
mov
pop
cmp
or
xor
push
in
pop
pop
mov
sbb
call
ljmp
jle
xchg
xchg
pop
mov
arpl
lret
jae
cmp
or
ret
fisubs
and
adc
rclb
dec
test
add
into
xor
mov
jg
lea
lock
das
adc
loopnew
das
cmp
adc
xchg
stos
mov
into
mov
dec
adc
insb
xchg
cli
shl
mov
lds
cmp
fwait
test
dec
or
cmp
f2xm1
scas
loope
movsb
jnp
xchg
sub
jae
pop
cwtl
aaa
cmp
lret
lock
pusha
mov
ljmp
cld
js
xchg
pop
mov
roll
push
jmp
bound
loopne
out
aas
icebp
jmp
fdivrl
fimuls
jmp
icebp
push
movsl
push
mov
insb
mov
stc
out
lods
cli
xchg
pop
gs
ret
and
mov
arpl
push
push
add
and
or
lock
cmc
imul
mov
lds
jo
in
xor
jecxz
test
and
pshufw
outsb
mov
jl
loope
mov
ja
std
inc
mov
push
lret
push
cmp
and
lock
push
mov
popf
adc
add
sahf
dec
mov
fisttpl
sahf
push
mov
push
fistl
mov
aaa
mov
leave
jmp
loopne
pop
fs
dec
mov
fwait
mov
sub
xchg
in
repz
movsl
cmp
out
adc
fxtract
pminsw
xchg
sub
imul
in
adc
cltd
jl
shll
xor
jno
fisttpl
leave
test
and
push
mov
inc
push
pop
push
mov
mov
fnstsw
sbbb
and
mov
iret
jnp
adc
mov
push
test
fistps
jmp
xor
lea
int
push
fidivrs
mov
push
cmp
mov
inc
and
jecxz
in
shll
orl
pop
sub
mov
push
cmp
jle
sti
das
xorl
repnz
in
pop
es
mov
fwait
shrl
cmp
pop
lahf
cmp
loopne
stos
sub
mov
lds
int
xchg
cmpl
or
xchg
jns
rcrb
pop
and
pop
pop
adc
cmpsb
clc
dec
mov
jl
lret
cmpsl
jl,pn
out
or
push
add
std
mov
dec
jnp
dec
adc
pop
aad
int
nop
pop
push
insb
mov
rorl
lock
dec
add
cmp
ss
sub
add
add
ljmp
mov
fistl
inc
cmp
cmpsl
loope
cmp
lock
push
nop
fstl
sahf
fwait
sbb
jmp
pop
mov
cmp
jl
cli
mov
sarb
or
jmp
mov
aas
push
lock
mov
sbb
mov
mov
mov
push
loope
xor
sub
mov
xchg
subb
xor
ret
ss
or
lcall
nop
gs
add
pop
aaa
js
pop
lock
pop
les
push
sahf
fiadds
arpl
out
mov
js
scas
dec
fstps
fbstp
ds
scas
cmpsl
jge
or
ret
xor
or
test
insl
das
sub
pop
or
loopne
jmp
test
icebp
mov
and
lret
data16
ret
xchg
fldl2e
scas
pop
or
dec
lods
and
loop
mov
std
out
push
mov
xchg
outsl
int3
imul
movb
lret
mov
mov
repz
add
nop
pop
mov
adcb
sbb
push
in
add
ret
sub
mov
inc
pushf
xorb
and
inc
xor
test
mov
push
pop
sbb
cmpsb
sti
out
jle
mov
pop
push
inc
repz
or
out
or
fsubs
icebp
or
sbbb
push
dec
xchg
adc
shl
sub
pop
push
out
mov
mov
sub
adc
nop
iret
xchg
jmp
fs
imul
arpl
mov
ret
sub
arpl
inc
test
pop
pushl
inc
sub
and
gs
fldt
mov
insl
sub
sahf
mov
outsl
scas
xor
mov
mov
out
or
mov
add
push
cmc
out
mov
dec
shrl
iret
test
gs
in
test
inc
aam
ds
mov
icebp
and
push
in
fisubs
inc
and
cmpb
jp
and
call
test
mov
fistl
lcall
pop
cmp
repz
cs
jl
jge
out
pop
pop
rcrb
xchg
sti
cs
clc
sbb
pop
push
xchg
inc
push
popa
add
or
pop
sbb
jb
dec
sub
xor
push
rcll
pop
cmc
cli
dec
xor
outsb
sub
stc
aam
cld
es
dec
lret
into
test
add
fisubl
call
es
sub
jae
sub
push
stc
jg
out
lods
div
and
and
mov
inc
push
loope
mul
arpl
mov
dec
dec
add
mov
outsb
icebp
int3
mov
dec
adc
xchg
mov
xor
jbe
les
test
bound
inc
pop
cltd
pop
cmp
add
iret
test
jbe
sbb
enter
test
ret
push
call
mov
enter
outsb
fildll
je
mov
xchg
test
scas
dec
push
insb
cltd
test
scas
push
mov
push
sbb
lcallw
sti
cmp
in
push
clc
sbb
mov
pop
push
jne
ss
sbb
jno
mov
pusha
imulb
in
pop
xchg
enter
adc
mov
and
jb
pop
jne
sahf
mov
out
adc
push
mov
or
outsb
inc
xor
mov
pop
imul
ljmp
je
out
mov
xchg
dec
lret
subb
arpl
xor
ss
test
and
pop
add
pop
push
decl
dec
inc
sub
cmpsb
inc
jmp
sub
jbe
mov
xor
adc
pop
push
adc
sbb
fidivrl
call
sub
sub
lahf
mov
fistl
inc
or
cwtl
mov
cs
les
xor
push
xchg
pop
and
mov
push
mov
in
shrl
test
and
jmp
jo
sbb
mov
test
cwtl
hlt
test
push
dec
adc
and
out
inc
mov
push
cli
cmpsl
ficoml
push
sbb
test
sub
mov
psrlq
xchg
stos
push
insl
in
mov
adc
test
clc
rcll
orl
std
mov
fsts
pusha
add
push
jns
cmpsb
inc
ret
xor
ljmp
adc
std
std
mov
xor
scas
shrl
mov
enterw
sarl
push
xchg
gs
dec
jmp
cmp
jmp
imul
cmp
leave
jns
dec
jmp
cmp
jmp
imul
cmp
leave
jns
dec
jmp
cmp
jmp
imul
cmp
leave
jns
dec
jmp
cmp
jmp
imul
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jl
ja
inc
jns
cmpsb
dec
outsb
arpl
fmuls
add
add
add
or
push
add
add
add
add
mov
lods
add
add
jo
outsb
add
inc
add
add
add
incl
in
add
jo
add
cmp
dec
add
dec
add
jne
jo
cmp
pop
add
add
add
add
add
add
pop
add
add
adc
cmp
sub
adc
cmp
cmp
incl
pop
add
dec
add
add
add
add
mov
add
add
jne
jne
int
in
add
mov
mov
add
add
adc
sbb
cld
add
scas
add
add
add
filds
ljmp
add
add
jne
faddl
add
jbe
cmp
adc
mov
add
jne
cmpsl
add
add
popf
add
add
add
dec
add
add
add
add
jne
xor
mov
add
add
add
popf
add
jle
cmp
or
add
sbb
dec
add
test
filds
push
add
add
xor
js
inc
add
inc
add
and
dec
add
add
add
add
add
add
add
add
push
add
add
add
push
add
imul
inc
add
add
push
add
repnz
mov
mov
add
add
add
inc
add
jne
test
or
mov
inc
add
add
mov
add
cmp
in
add
pop
add
add
add
fwait
add
add
add
add
add
add
filds
dec
add
inc
add
add
and
ljmp
add
xlat
add
add
add
add
cmpsl
add
mov
cmp
and
push
add
add
add
add
and
inc
add
add
cli
add
add
add
add
add
lahf
add
add
mov
add
add
jne
add
roll
add
add
test
fadds
sub
or
jne
faddl
cld
add
adc
add
add
add
add
cmp
incl
mov
pusha
add
add
add
pop
add
add
add
add
push
add
dec
add
add
sbb
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
and
cli
add
ret
add
add
add
sahf
add
add
add
add
pop
add
add
add
add
popl
sub
cmp
xchg
add
add
add
add
add
adc
adc
dec
add
and
jno
ret
add
add
add
add
push
add
pop
add
add
adc
addb
add
add
add
testb
add
add
mov
in
add
add
faddl
fiadds
add
push
add
inc
add
nop
add
add
inc
add
add
push
add
add
add
add
jne
js
pop
add
dec
add
add
inc
add
add
add
inc
add
add
fiadds
add
add
add
sub
in
add
add
add
add
add
insb
add
add
add
add
add
adc
mov
add
add
add
or
push
add
cmp
jo
adc
add
add
adc
in
xor
cld
test
xchg
cmpb
bound
ftst
gs
idivl
andb
pop
in
add
mov
mov
movsb
inc
sbb
test
aam
jecxz
loope
sub
push
scas
insb
xlat
pcmpeqw
aaa
ds
xor
push
ret
mov
pop
adcl
popa
xorl
jecxz
in
insl
test
pop
pop
out
xor
sar
xchg
adc
negb
pusha
mov
pop
mov
push
xchg
pop
and
jae
pop
enter
call
dec
mov
scas
jo
shrl
jg
jecxz
mov
sahf
dec
xor
inc
outsl
push
sub
jno
rcrb
cmp
ljmp
movsb
xor
aas
hlt
test
sub
ss
jnp
pop
pop
or
stc
imul
dec
shlb
sbb
rorl
and
sub
lahf
push
xor
out
xor
lahf
push
dec
fbld
cwtl
in
dec
test
in
pop
mov
mov
cmp
cmpsb
cli
mov
or
out
ficoml
or
fnstcw
int3
push
sbb
repnz
je
pop
shrl
sahf
jp
scas
loope
dec
jmp
notb
dec
jb
orb
addr16
aas
dec
and
inc
cli
xchg
les
pop
std
dec
push
repz
iret
push
mov
pop
sbb
sahf
mov
sti
pop
aad
push
mov
incb
out
mov
xchg
sub
inc
enter
loopne
mov
jne
rol
mov
hlt
xor
popa
adc
int3
mov
stos
dec
roll
jmp
mov
pop
pop
jbe
lock
incl
fistl
adc
xlat
adc
xchg
adc
shrl
jl
mov
sbbb
arpl
and
aam
jae
mov
cwtl
in
call
push
lret
call
andl
andl
rcl
jns
cltd
xor
shlb
adc
mov
xor
in
shr
jp
adc
ret
js
cmp
push
fmull
or
or
das
xorl
fimuls
in
lret
decl
scas
lock
out
push
cmp
sub
mov
pop
push
pop
shrl
outsl
cmp
data16
or
fwait
cltd
xor
sbb
cmp
movq
movsl
movsl
mov
xor
xor
xor
insl
repnz
and
lret
aam
jne
xor
cmp
gs
ficoms
jg
xor
sbb
inc
out
int3
and
xlat
sti
clc
xor
push
decb
pop
mov
jecxz
rol
call
jl
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
