ss
add
or
add
add
adc
push
mov
fmuls
push
add
add
add
add
add
or
pusha
add
push
inc
add
cmovo
sbb
add
or
add
add
add
push
addb
push
mov
add
add
nop
add
rolb
cmc
pop
add
nop
push
jo
or
add
push
loopne
leave
add
inc
add
add
or
or
and
mov
pop
and
lret
add
or
add
jo
mov
add
lock
add
inc
add
add
add
mov
add
pop
push
add
pop
adc
jg
lock
add
jo
xchg
add
add
or
xchg
add
addb
or
add
add
add
add
push
add
add
add
rolb
add
add
xor
push
pshufw
or
add
or
add
add
add
add
add
add
add
nop
add
wrmsr
add
push
nop
add
add
mov
nop
add
loopne
mov
add
add
add
add
adc
add
inc
add
stos
addl
sti
xchg
add
stos
mov
inc
add
or
add
adc
and
loopne
pop
or
movsl
or
add
or
add
or
add
or
add
xor
push
push
add
or
add
add
add
or
mov
or
jle
xor
pop
or
add
add
add
nop
add
add
add
or
add
add
add
push
rolb
or
push
add
push
nop
add
in
push
sub
sub
popl
mov
push
and
add
popl
mov
movw
xor
push
popl
push
popl
call
addb
push
popl
test
jne
push
popl
pushl
popl
ret
push
popl
sbbb
push
pushl
popl
push
orw
mov
push
popl
push
sub
sub
popl
mov
pusha
addb
push
popl
call
push
popl
mov
push
popl
push
push
mov
or
popl
mov
push
popl
nop
push
popl
movl
movl
movw
nop
addb
addl
pushl
popl
subl
push
push
popl
sbbw
call
push
popl
andl
cmpl
je
push
popl
cmpl
je
push
popl
addl
cmpl
je
push
sub
xor
popl
mov
sbbw
cmpl
jne
orb
andl
call
push
popl
xorl
ret
push
popl
jmp
andl
xor
movw
orw
mov
addb
pushl
popl
shl
andl
mov
orl
push
mov
mov
popl
mov
cmp
jne
push
popl
sbbb
call
push
popl
popa
pushl
popl
pushl
popl
call
push
popl
push
addw
nop
andl
orl
movl
addl
nop
xorl
orl
addl
push
popl
push
push
popl
movl
call
push
popl
push
sub
add
popl
mov
push
push
xor
lea
add
add
mov
add
xchg
push
popl
mov
movw
shl
push
xor
or
popl
mov
addw
push
pushl
popl
xor
pushl
popl
andl
push
orb
push
sub
and
popl
mov
call
push
popl
push
add
add
popl
mov
push
push
popl
mov
subl
push
popl
push
sbbb
pushl
popl
jmp
subw
andl
pop
xorw
movw
mov
push
popl
pushl
popl
push
push
sub
mov
popl
mov
push
addl
push
push
sub
or
popl
mov
pushl
popl
mov
push
popl
xorw
mov
movb
pushl
popl
rep
orb
subl
pop
xorb
pop
push
sub
shr
ror
mov
xor
xchg
push
sub
shl
mov
xor
xchg
sbbl
subl
xor
push
or
and
popl
mov
jmp
andb
andl
sub
push
popl
push
popl
mov
pushl
popl
sbbl
sub
push
popl
movw
sub
push
popl
push
sub
add
popl
mov
mov
push
mov
sub
popl
mov
xorl
sub
orw
or
jne
andl
sbbw
add
addl
subl
jmp
xorw
mov
push
mov
and
popl
mov
shr
push
popl
shl
subb
sbbl
mov
movl
movw
jmp
xorw
pushl
popl
sub
push
mov
xor
popl
mov
subl
mov
xorl
cmp
jne
push
or
mov
popl
mov
push
popl
mov
push
popl
add
movl
cmpw
jne
push
add
and
popl
mov
push
popl
ret
push
popl
andb
push
push
popl
movw
xor
xorw
movl
and
push
popl
mov
push
or
and
popl
mov
push
mov
or
popl
mov
and
orw
mov
subb
and
push
or
sub
popl
mov
subl
mov
sbbw
pushl
popl
and
push
popl
lods
push
or
xor
popl
mov
orl
and
push
popl
mov
xorl
push
popl
pop
subl
push
sub
xor
popl
mov
ret
subb
push
push
popl
push
and
or
popl
mov
mov
push
popl
add
push
popl
push
add
xor
popl
mov
push
push
mov
or
popl
mov
push
push
or
mov
popl
mov
push
push
add
add
popl
mov
push
movw
orw
push
push
sub
and
popl
mov
mov
xorl
mov
push
sub
sub
popl
mov
add
movl
push
popl
pushl
push
add
mov
popl
mov
movl
mov
orl
add
push
popl
sbbl
add
pushl
popl
mov
xorl
pushl
popl
add
push
popl
xor
push
or
add
popl
mov
subb
lea
andl
push
popl
mov
push
popl
movl
add
addb
pushl
popl
mov
push
or
sub
popl
mov
pushl
popl
xor
orw
rol
addb
push
and
and
popl
mov
xor
push
popl
inc
addb
push
and
add
popl
mov
cmpb
jne
xorb
push
popl
cmp
je
push
or
sub
popl
mov
orl
inc
orb
andw
cmp
jb
push
popl
mov
push
mov
add
popl
mov
push
popl
add
push
add
and
popl
mov
subl
movzwl
andl
andw
mov
addl
andl
add
pushl
popl
orb
mov
push
popl
sbbb
add
movw
push
xor
add
popl
mov
pop
pushl
popl
orb
cmp
jbe
push
and
add
popl
mov
cmp
jae
movl
pushl
addb
andb
pushl
push
popl
movl
push
movb
nop
pushl
popl
movl
andl
pushl
popl
nop
orl
andl
addl
addl
pushl
pushl
popl
call
addw
sbbl
call
addl
pop
push
popl
push
and
xor
popl
mov
pop
pushl
popl
xorb
pop
movw
pop
push
and
sub
popl
mov
addw
pop
push
add
xor
popl
mov
pushl
popl
leave
push
popl
ret
xorl
pushl
popl
call
jo
sub
mov
notb
test
jp
push
je
or
test
cmp
std
call
fsubl
mov
push
std
call
dec
mov
mov
andl
mov
xor
pop
xchg
outsb
daa
jge
stos
xor
ror
dec
inc
mov
movsl
jmp
inc
xchg
sub
lds
mov
cmpsl
outsl
lahf
sar
repz
arpl
sbb
iret
xchg
inc
jns
ret
pop
loopne
shlb
std
sbb
fucom
mov
lret
adc
mov
js
and
hlt
out
inc
dec
stc
gs
xor
sub
mov
mov
fisubl
pop
cmpsl
mov
cmp
lods
lock
outsb
fistpll
pop
in
gs
shlb
mov
mov
mov
cs
lds
cmpsl
add
mov
pop
xor
in
insl
or
jmp
mov
sub
xor
jb
clc
pop
repnz
cmpsl
jne
jno
xor
rol
jmp
inc
dec
xorl
push
push
pop
jecxz
mov
pop
repnz
cmpsl
js
icebp
xor
push
jbe
and
les
into
push
jb
jle
xchg
cmp
cmp
pop
mov
mov
adc
es
in
in
pop
rcr
sbbb
sub
pop
dec
lods
push
in
cmc
jb
cli
imul
aas
and
add
push
jg
je
scas
push
in
and
cs
xor
mov
shrb
lea
or
jnp
jmp
cmpsb
enter
aaa
push
mov
or
or
add
ss
dec
cmp
inc
push
push
in
adc
stos
cmp
inc
mov
mov
jb
mov
dec
in
pop
pop
sarb
cmp
sti
fistpll
xor
push
cli
cmpsb
mov
push
cltd
jno
sbb
stos
push
pop
pop
in
leave
sbb
fstpl
inc
xchg
jecxz
or
and
add
xchg
lahf
in
rolb
in
stos
das
scas
loop
xor
mov
or
loopne
fnsave
sub
mov
das
dec
icebp
jge
pop
idivl
mov
ret
pop
mov
ror
fistl
jo
push
adc
sub
cmp
mov
sub
lods
test
push
jle
in
mov
fidivs
sbb
mov
lret
sub
pop
divl
out
divb
jae
aaa
cmp
movsb
jb
rdmsr
pop
out
aas
cmpsl
js
and
jne
and
inc
jns
movsb
rcrl
push
sarb
es
movsl
insb
pop
lcall
xchg
xchg
int3
dec
push
movsl
lods
pop
jmp
into
mov
sub
out
arpl
cwtl
inc
out
xchg
and
xchg
mov
ljmp
rorl
test
xchg
xchg
inc
int
xor
xchg
inc
sbb
inc
jl
jg
dec
adc
jecxz
mov
jb
pop
inc
xchg
or
and
dec
shrl
jbe
and
loope
into
sbb
ds
xchg
test
out
les
mov
xor
sub
int3
ss
mov
lret
cmp
xor
hlt
hlt
fisubs
loopne
dec
and
xor
fdivrp
mov
mov
add
pop
jnp
sti
mov
or
mulb
shll
cmp
imul
xor
es
insb
sbb
enter
ja
pop
xor
inc
ror
int3
and
push
stos
push
jne
and
jbe
outsl
mov
fsubp
mov
pushf
push
pop
mov
addb
xor
lea
lahf
lahf
pop
mov
idivb
sbb
cmpsb
dec
push
lret
adc
iret
sbb
mov
mov
stc
addr16
or
movsb
inc
mov
mov
jae
xchg
mov
jo
roll
jae
mov
mov
roll
subb
orl
sub
adc
xor
sub
push
outsl
lahf
iret
ss
mov
push
test
ja
pop
loop
add
xor
mov
pop
out
mov
pop
mov
or
subb
pop
js
cmp
test
inc
ja
push
cmp
sahf
xchg
pop
pop
in
mov
pop
leave
notl
pop
out
mov
rcrb
sbb
pop
jle
cs
ds
mov
shrb
outsl
lods
cli
inc
hlt
enter
adc
inc
aas
aaa
hlt
je
imul
mov
and
out
imul
popf
push
outsl
in
pop
jecxz
dec
ds
pop
cmp
hlt
out
xchg
lret
cltd
iret
ret
pop
push
mov
into
pop
mov
xor
or
xorb
adc
repz
mov
adc
pop
xor
sbb
jl
mov
aad
icebp
inc
cmpsl
js
mov
cmpl
jbe
fsubrl
pop
dec
jo
mov
insb
add
mov
dec
sbb
ljmp
into
dec
mov
cmp
cmpsl
xchg
clc
jg
pop
lret
mov
sbb
dec
ljmp
push
sbb
jns
mov
icebp
scas
push
stos
rcrl
adc
push
hlt
lods
popa
xor
frstor
xchg
pop
int
jb
pop
test
push
imul
jmp
out
cltd
push
jnp
rol
js
out
sub
push
or
or
int3
jnp
dec
adc
xchg
pusha
lcall
ljmp
pop
stos
or
mov
test
in
ret
adc
fistps
sbb
cmp
out
out
or
mov
push
push
jmp
or
in
sbb
lahf
pop
or
sub
xchg
iret
mov
and
std
das
pop
jns
stc
sbb
and
add
lcall
or
hlt
cltd
movsb
js
pop
xor
enter
inc
or
mov
cmpsl
int3
cmc
stos
and
jbe
sbb
insb
sbb
mov
xchg
add
sbb
xor
int
outsl
mov
fdivr
pusha
lret
push
pop
cmp
mov
leave
clc
sbb
mov
pusha
fldenv
test
mov
leave
pop
fists
mov
out
or
enter
rol
in
and
xor
mov
sub
jbe
xchg
rcrb
pop
aas
jae
out
or
cmpsl
mov
mov
xor
xor
rol
hlt
in
push
mov
mov
jb
repz
mov
sbb
pop
xor
and
insb
mov
inc
cmpsl
je
mov
arpl
jle
lret
mov
imul
push
stos
mov
add
xchg
mov
lahf
jl
in
pop
mov
add
push
pop
add
das
push
fninit
jge
mov
inc
pusha
add
imul
leave
adc
xor
ja
mov
aad
dec
jo
jbe
mov
xor
ja
loope
push
imul
das
pop
push
aas
loope
les
in
xlat
jmp
mov
jmp
xchg
fisubl
cmp
out
push
xlat
xor
aaa
outsl
xorl
into
movsb
jmp
ja
movl
or
test
xchg
sahf
and
xchg
jns
hlt
loope
sar
jae
xchg
xor
sbb
push
test
lahf
out
hlt
ret
pop
popa
call
sbb
sub
mov
jbe
test
outsl
lods
loopne
hlt
mov
sbb
xchg
ss
dec
hlt
and
add
inc
pop
xor
pusha
int3
mov
xor
popa
pop
scas
nop
mov
fistps
add
in
rcrl
rcrb
cmp
cwtl
inc
out
scas
scas
iret
jbe
scas
pop
je
outsb
stos
jnp
xor
mov
adc
xchg
pop
out
mov
and
sti
cmpsb
test
xor
xor
cmc
jns
call
sahf
jae
aaa
cmp
push
out
mov
xchg
sub
addb
push
rcl
xor
or
sbb
and
out
mov
in
mov
out
or
pop
cmpsl
adc
sbb
xor
hlt
out
inc
dec
stc
gs
xor
das
push
or
mov
jl
hlt
adc
negb
push
pop
into
addr16
jl
hlt
outsl
test
stos
int
dec
pop
sbb
cmp
test
je
or
jne
cmp
mull
xor
test
mov
xchg
sbb
test
addr16
pushf
lods
adc
aas
scas
nop
daa
adc
sub
rcr
aaa
loop
sbb
sub
add
add
cwtl
dec
out
mov
sub
and
jmp
call
sahf
xchg
jb
js
ret
pop
mov
cmp
adc
jl
aad
and
jl
dec
cltd
push
movsl
jmp
inc
push
imul
mov
jmp
cwtl
pop
subl
pop
jae
pop
or
stos
sbb
enter
jge
inc
and
loop
faddl
inc
jbe
pop
xor
leave
out
adc
outsb
add
in
mov
push
cmp
out
movsl
loope
std
in
std
rorb
dec
leave
or
cmpsl
push
or
push
fidivl
inc
sahf
inc
inc
repz
es
int
int3
aas
push
jae
mov
stos
cltd
sbb
jg
dec
fdivs
cmpsl
fucom
or
insb
sbb
test
jmp
xor
or
jns
ja
or
pop
js
sbb
mov
mov
inc
pop
popf
xor
movsb
pop
movsb
fcompl
add
out
cmpsb
xchg
mov
pop
data16
aad
sbb
into
jecxz
in
repnz
mov
mov
data16
mov
xchg
les
sha256rnds2
les
pop
mov
ss
cmp
xor
jecxz
in
pop
jecxz
push
add
dec
lods
jmp
mov
pop
rcrl
inc
in
pop
popa
fwait
scas
xchg
lods
xor
pop
lahf
jne
pop
jbe
mov
mov
dec
push
cmpsb
sbb
mov
add
lods
adcb
lcall
and
lret
shlb
aaa
cmp
ss
icebp
mov
outsb
pop
ror
ljmp
inc
lret
enter
stos
daa
pop
jbe
popf
mov
cmpsl
add
cmp
outsb
icebp
mov
lods
push
out
es
dec
int
jmp
dec
scas
sahf
mov
out
ret
inc
movsb
add
jmp
sbb
mov
xor
lods
jecxz
out
adc
iret
dec
xchg
test
push
and
xor
dec
ljmp
test
fcmovnbe
lods
and
sbb
lahf
add
mov
loope
das
cmp
pop
in
pop
xor
push
repz
movsl
bound
in
sbb
rcll
mov
push
in
pop
adc
outsb
push
fldcw
repnz
push
jnp
sbb
stos
pop
jecxz
dec
lcall
cmp
outsb
dec
sub
cmp
add
mov
xor
popf
jnp
dec
rcrb
or
push
add
dec
xor
fisubrl
movsl
sbb
xchg
sub
sbb
inc
in
mov
dec
push
out
repnz
mov
aaa
jp
mov
lea
adc
mov
lret
scas
jbe
or
pop
hlt
mov
out
jae
call
test
xor
mov
sahf
jae
int
cmpsl
jns
movsl
fcompl
push
test
pop
jecxz
or
aam
ds
cwtl
sbb
jge
xor
jg
mov
cmc
das
pop
sub
and
addr16
pop
data16
iret
sbb
out
jb
jo
xchg
arpl
adc
addr16
divl
divb
adc
rcl
mov
outsl
pop
cli
rol
orl
jl
add
aad
cwtl
inc
out
sbbl
icebp
stos
pmaxsw
std
bnd
sahf
push
push
cld
push
rcll
montmul
cmpsb
xchg
sbbb
int3
sbb
sbb
cltd
push
dec
jbe
sbb
pop
fistps
xchg
push
sub
fists
inc
es
mov
sub
pop
xor
scas
xchg
mov
pop
movsl
nop
mov
mov
outsb
fcomps
pop
lret
mov
out
push
xor
xlat
ds
call
scas
mov
inc
pop
xchg
pop
xchg
cwtl
push
das
pop
lods
dec
in
cld
xchg
and
data16
add
mov
xchg
addr16
outsl
xchg
pop
loopne
jecxz
mov
mov
mov
ror
xchg
inc
mov
mov
pop
jns
or
shrl
iret
pop
sub
mov
call
inc
mov
sbb
add
fs
lea
xor
cmpb
pusha
cs
fs
aaa
das
xchg
sub
xchg
push
cld
das
pop
divl
das
mov
stos
sub
mov
mov
into
loopne
clc
std
sub
hlt
shl
jb
xchg
or
xor
mov
adc
xchg
inc
in
cli
xchg
and
and
push
add
pop
or
mov
mov
xchg
mov
add
lods
xchg
nop
shlb
ja
std
stos
cltd
sbb
inc
and
les
mov
test
lahf
shrb
mov
pop
sub
xchg
inc
js
ret
xor
and
mov
jmp
cmp
rcrb
int
sub
into
xchg
xchg
inc
std
cmpsb
rcll
popf
out
shll
lock
mov
xchg
mulb
push
popf
fidivs
daa
dec
pop
repnz
fucom
or
in
ja
inc
iret
shlb
data16
adc
sbb
mov
std
mov
sbb
mov
jno
sub
pop
sbb
push
mov
mov
push
xor
icebp
or
int
pop
or
inc
mov
mov
rorb
out
lds
jmp
aad
lret
ror
loope
and
xor
outsb
lea
call
mov
jecxz
jnp
sbb
mov
sarb
mov
add
jae
jae
xchg
ss
popa
scas
mov
das
inc
repz
sbb
sbb
movsb
jmp
mov
pop
in
leave
jl
sbb
je
or
enter
dec
jno
pop
mov
cmp
sub
xor
fldcw
xor
ja
hlt
rcrb
xor
fstpl
push
fyl2x
pop
aaa
cmpsb
sarl
push
add
jg
clc
shrb
jne
mov
sarb
mov
cbtw
inc
out
jnp
push
inc
mov
dec
push
adc
jno
aam
hlt
out
inc
dec
stc
gs
add
cltd
sub
jmp
or
dec
pop
cmpsl
stc
mov
and
sarl
out
cmp
dec
add
cmpsb
mov
fnsave
pop
pop
or
pop
mov
andb
test
sub
cmpsl
loop
inc
pop
sbb
dec
push
push
mov
shll
xchg
les
mov
cmpsl
outsl
lahf
rorb
aam
in
push
call
xchg
into
cmp
out
popa
mov
mov
fimull
jl
ret
gs
sub
xlat
inc
popf
add
pop
cmpsl
mov
int
mov
les
xor
es
jbe
dec
imul
mov
sahf
cmpsb
pop
pop
sbb
shrl
addr16
int
mov
rcr
data16
inc
repz
mov
push
in
ret
pop
out
ret
ljmp
std
mov
dec
fstp
cmp
not
pop
test
test
and
stos
cmp
sar
fldln2
jge
lahf
cmp
rcrl
test
xchg
add
rolb
pop
sar
jno
pusha
shl
ror
stos
adc
mov
mov
add
inc
push
ret
scas
jno
sub
pop
sbb
inc
aad
xchg
or
int
jno
sub
pop
sbb
dec
gs
pop
je
or
int
or
hlt
call
iret
jb
pop
inc
insl
fdivl
test
push
cld
xchg
pusha
cmpsl
les
fdivs
push
ss
test
mov
stos
pop
mov
pusha
jge
jecxz
in
dec
pop
sarb
sbb
sbb
add
xor
jge
pop
xor
idiv
push
pop
out
inc
cmpsl
jne
mov
xor
rol
mov
adc
mov
test
or
out
mov
cmp
add
jl
int
ror
dec
xchg
je
lods
ret
dec
out
int3
pop
and
jl
mov
push
push
add
dec
add
hlt
mov
ds
lret
data16
ret
insb
push
js
lcall
inc
leave
clc
adc
popf
call
hlt
in
out
lret
je
and
push
repz
ljmp
jb
pop
pop
fs
xor
or
enter
mov
pop
jbe
aad
pop
dec
stos
subb
movsb
pop
in
xor
das
push
xor
pop
rcr
xchg
outsl
int
movsb
scas
pop
loop
add
arpl
xor
pop
push
movsb
cmp
xor
pop
and
xor
pop
ja
scas
pusha
repnz
fcompl
gs
push
jb
mov
repz
pop
leave
je
addr16
push
gs
test
jecxz
or
and
pop
in
cwtl
sbb
idivb
hlt
pop
movsb
ds
shrb
mov
test
out
mov
jmp
cmp
push
ja
push
test
xchg
lahf
loop
int
xor
and
movsb
fdivp
inc
scas
jns
popa
lods
ror
fucomp
ljmp
push
push
ja
aas
pop
and
cmp
test
mov
push
sbb
iret
ret
jb
pop
push
aam
mov
pop
add
jnp
xor
jl
mov
js
push
mov
mov
pushf
mov
sub
xor
mull
mov
pop
inc
mov
pop
add
aaa
jmp
gs
lcall
push
and
je
scas
pop
pop
jno
mov
popa
lods
shlb
test
outsl
out
imul
cmp
push
int3
je
or
jp
and
mov
je
outsb
stc
test
xor
fstp
add
leave
clc
sbb
push
mulb
mov
mov
fcmovnu
idivl
lret
push
stos
in
mov
mov
xchg
enter
repnz
divb
out
rcl
lret
cmp
cmp
jae
mov
xor
mov
sahf
in
add
xchg
test
or
pop
pop
cmp
popa
add
xor
adc
cwtl
inc
out
bound
sahf
stos
sub
les
cmp
pop
rcll
int3
pop
test
mov
push
gs
jae
mov
hlt
popa
cltd
fists
cltd
pop
lahf
pop
lea
xor
xorl
cmp
push
repz
in
rolb
sbb
sbb
outsb
pushf
sub
mov
jmp
mov
xor
cmpsl
outsl
lahf
lret
scas
scas
push
pop
sub
xlat
xchg
inc
jp
pop
insl
sbb
pop
loopne
mov
sbb
fucom
mov
pop
loopne
cmc
stos
and
js
sub
dec
jmp
mov
pop
sarl
fldl
mov
push
lahf
cmpsl
mov
push
in
in
inc
popa
pop
scas
xchg
repz
iret
pop
mov
jp
add
adc
dec
push
jecxz
in
cwtl
pop
out
mov
xchg
ror
into
add
pusha
shl
lret
or
sbb
fsubl
pop
std
lds
ja
mov
cmpsl
mov
into
sahf
sbb
xor
push
mov
mov
daa
dec
and
xchg
pop
or
pop
xlat
lcall
pusha
lahf
and
sbb
movsb
jb
add
std
mov
shlb
sahf
adc
push
and
inc
jbe
lret
mov
out
sti
popa
pop
into
js
imul
scas
add
fucomp
jne
pop
fsubp
mov
movsl
or
cmpl
shr
push
cmpl
in
enter
hlt
shrl
daa
fisubs
xlat
fnstcw
push
mov
adc
cmc
pop
lahf
or
mov
das
test
mov
loopw
in
inc
movsb
in
std
pop
xor
pop
in
mov
and
fucom
mov
ror
out
call
sbb
cmp
or
roll
aam
fstps
sbb
push
xchg
addr16
or
outsb
add
in
gs
push
add
xchg
cmp
es
add
inc
stos
add
test
out
pop
push
loopne
push
jge
cmp
lds
dec
out
push
ljmp
jb
in
into
cmc
cmp
add
into
xor
movsb
aas
sbb
xor
pop
fbld
jnp
out
dec
ret
add
pop
in
test
rep
adc
mov
jnp
test
jb
jne
imul
out
xchg
sbb
sbb
inc
or
nop
scas
cmpsl
xchg
xor
cmpsb
adc
dec
test
dec
rorb
imul
xchg
sbb
int3
mov
pop
fcomps
push
dec
aas
add
roll
inc
das
adc
sub
xchg
fs
xchg
push
xchg
push
mov
outsb
shlw
lret
jecxz
or
dec
xchg
xor
dec
lods
insl
jbe
dec
out
cmpsb
int3
stc
jns
inc
mov
sub
inc
leave
insl
and
mov
sub
xchg
fs
push
dec
je
or
pop
ficomps
adc
mov
lret
adc
adc
gs
push
nop
lods
cmpb
loope
call
mov
sbb
mov
loope
add
and
shrl
pop
js
dec
pop
icebp
test
popf
mov
dec
not
movsb
jge
pop
xor
pop
xchg
out
es
pop
in
inc
cmpsl
ja
add
or
les
enter
iret
testb
out
ret
xor
fucom
xor
xlat
dec
xchg
pop
cmpsb
loop
popf
pop
ss
push
rcrl
jecxz
or
xor
or
inc
hlt
pop
fsubr
int
test
pop
jb
xor
scas
popa
stos
mov
ss
mov
jae
cmp
mov
jmp
jb
push
outsl
pop
icebp
inc
cmpsl
je
mov
or
loopne
pusha
dec
test
mov
cmpsb
lret
pop
sbb
imull
jecxz
dec
movsb
fcoms
adc
xor
sbb
or
ret
mov
stc
dec
add
popf
pop
mov
fucomi
jmp
xchg
sbb
ja
scas
pop
popf
mov
mov
imul
cmp
pop
fildll
jl
out
sub
inc
ror
rcl
and
pop
icebp
lcall
dec
push
stos
arpl
pop
mov
rcll
pop
xor
mov
cmp
icebp
inc
cmpsl
jns
xor
repz
jle
push
mov
mov
out
out
jo
sub
test
push
cmpsb
push
divb
adc
ljmp
iret
or
mov
pop
mov
cmp
lret
push
ds
and
xor
pop
sub
xor
jecxz
push
mov
inc
xchg
sarb
xor
fstpl
pop
leave
mov
mov
lret
in
add
xchg
mov
call
sbbl
or
cli
outsb
jbe
mov
out
push
gs
ja
scas
push
loop
insb
cwtl
mov
mov
jnp
je
movsb
rcrl
pop
pop
in
pop
mov
sub
andb
xchg
inc
mov
andnps
aaa
push
nop
pop
sti
call
out
lahf
addl
lret
adcl
mov
inc
fstpl
dec
aaa
cmp
xchg
jb
mov
or
rcl
lret
mov
pop
lahf
aad
jne
hlt
ja
jmp
xchg
lret
xorb
cmp
rep
cmpl
push
and
mov
aas
ja
add
iret
jecxz
rcl
in
inc
sbb
xchg
pusha
xor
fs
or
loope
sbb
lds
dec
and
mov
lock
fldcw
sbb
rolb
mov
jp
jbe
fimuls
inc
fmuls
jl
pop
xor
xor
ror
test
ret
sbb
movsl
subb
and
lds
xor
repnz
and
loopne
lea
pop
xchg
cmpsl
add
int3
mov
mov
dec
clc
dec
out
shll
xor
cmpsb
test
cmp
sub
pop
js
jmp
insl
jmp
xchg
xor
jecxz
mov
jb
pop
sbb
inc
cmpsl
jne
pushl
adc
add
mov
std
dec
inc
pop
loop
mov
xorl
loope
pop
loopne
test
pop
popa
stos
mov
cmp
mov
lods
cld
ds
xchg
stos
lahf
mov
xor
push
sti
loop
or
xor
or
push
or
out
loop
mov
cltd
pop
push
xor
xchg
lret
mov
push
xlat
fcom
scas
fildll
outsl
lods
fistps
mov
cmp
mull
es
insl
mov
lahf
int
push
fistps
dec
call
mov
subb
jae
ljmp
scas
fldcw
outsl
lods
add
push
fidivs
outsl
and
aaa
inc
inc
dec
cmp
xor
pop
jecxz
and
xor
fucom
mov
pop
loope
jae
outsb
loopne
pop
filds
mov
hlt
fprem1
sub
pop
cmp
fucom
jmp
out
inc
cmpsl
jbe
aas
xchg
mulb
sbb
cmp
inc
adcb
hlt
out
inc
dec
stc
gs
loope
fstpl
xor
repnz
adc
shr
pop
pop
sarb
xor
lea
push
clc
pop
rorl
inc
jnp
xor
pop
inc
push
xor
fdivl
mov
xor
mov
pop
repz
cmpsl
js
cmp
je
and
std
popa
jmp
clc
popf
testb
pop
xor
pop
in
jmp
fucom
mov
pop
in
inc
cmpsl
je
mov
outsl
scas
jecxz
push
aaa
cmp
jae
je
test
out
or
pop
in
add
inc
sbb
mov
pop
test
or
je
out
out
or
add
push
call
cmp
dec
or
fisubrl
cmp
in
shl
fildl
and
test
mov
mov
arpl
in
iret
and
cmp
mov
dec
stc
gs
push
rcrl
xor
fdivl
mov
cmp
cmp
xor
fnstsw
out
dec
popa
mov
clc
clc
and
dec
push
sahf
lea
add
mov
adc
or
lds
dec
mov
test
scas
inc
inc
popw
push
mov
adc
cmp
mov
insb
sbb
movsb
jns
pop
xor
inc
jnp
pop
add
cmp
cld
inc
js
or
scas
rcrb
loope
lods
aam
popa
jmp
xchg
cld
and
adc
rcrl
xor
fstpl
adc
mov
popa
xchg
scas
lea
jecxz
jae
jecxz
rcr
adc
push
inc
nop
xor
in
shlb
xchg
mov
pop
or
dec
out
nop
arpl
daa
je
cmpsl
ss
mov
scas
add
pop
xor
push
jb
dec
push
lds
mov
jbe
vrsqrtps
jmp
jge
mov
jae
repnz
loopne
xchg
or
mov
icebp
pop
add
mov
mov
dec
push
rcll
push
sbb
leave
push
int
sti
jo
inc
xor
movsb
dec
jae
out
mov
nop
js
xor
mulb
push
lods
je
or
out
loope
mov
cmp
cmp
lods
call
and
xchg
ss
inc
icebp
sti
jno
sub
pop
sbb
inc
fisubrl
or
xor
je
or
int
sbb
lock
xchg
subb
jae
cmp
insl
push
jecxz
dec
arpl
push
je
inc
int3
aam
mov
clc
dec
out
jb
stc
mov
fsubl
jae,pt
out
mov
pop
mov
rcl
daa
movb
push
adc
in
shlb
sbb
inc
dec
inc
fstl
lods
das
outsl
lods
in
inc
hlt
stos
jmp
les
push
insb
sbb
dec
je
movsb
ja
pop
xor
mov
and
pop
popa
lods
mov
dec
mov
scas
cmp
push
sbb
xor
jb
push
mov
pusha
int
out
or
push
adc
movsb
rcrl
add
sbb
push
xchg
es
mov
int3
in
jl
outsb
in
negb
mov
out
dec
fldcw
jne
scas
pop
lahf
jo
mov
insb
lea
inc
jne
xchg
lahf
mov
adc
pop
mov
inc
xchg
test
jb
sbb
add
out
mov
xchg
or
or
or
ds
or
stos
pop
push
std
jbe
push
xchg
add
sbb
sbb
mov
and
inc
popa
fsubs
imul
jmp
movsl
add
mov
cmc
out
sbb
lods
in
shll
fsubs
fsubr
icebp
pop
cmpsb
inc
out
push
mov
inc
dec
jl
ja
shll
or
fadds
xchg
xor
loopne
leave
loope
repz
inc
mov
inc
jne
push
psubsw
out
jae
push
nop
lods
mov
inc
pop
cli
test
pop
int
pusha
xor
dec
adc
xor
in
pop
and
jmp
xchg
and
stos
popw
shrl
mov
adc
or
cmp
xor
fcoms
pop
repz
xor
mov
dec
into
enter
lock
pop
cs
fidivrs
ss
or
aam
jl
push
inc
pop
and
inc
jo
push
fsubp
mov
lahf
ss
mov
mov
or
inc
std
stos
push
jecxz
or
mov
mov
mov
push
orb
mov
lret
jne
lea
mov
aaa
insb
leave
flds
xor
movsb
mov
cmpsb
sbbb
pop
mov
dec
sub
cmp
cmp
jg
jmp
mov
jmp
hlt
hlt
shl
jb
je
pop
ficomps
sbb
pop
fbstp
mov
fcoms
sbb
sub
jecxz
or
and
lret
in
rclb
sub
inc
in
push
stc
das
pop
jne
fisttpl
in
aam
push
lret
enter
dec
stos
mov
stos
xor
inc
clc
inc
call
mov
clc
outsl
lea
sbb
jb
push
outsb
je
or
shlb
jle
mov
cmpsl
outsl
lahf
test
hlt
les
sub
cmc
push
loopne
cmp
sbb
ljmp
xor
xchg
je
and
jb
aas
inc
shl
jo
cmp
push
cmpsl
lcall
xor
cmp
jecxz
or
scas
flds
mov
xchg
scas
in
les
mov
shl
ror
std
in
jo
in
ror
xlat
out
inc
lock
sbb
push
int3
push
call
jne
jecxz
gs
adc
mov
pop
push
inc
pop
or
into
cmp
in
fadds
and
xor
lock
pushf
cmpsb
je
scas
pop
mov
inc
push
add
inc
inc
out
or
inc
ja
jb
push
ficomps
adc
mov
or
cmp
jle
jge
cmp
dec
sub
add
bound
call
in
call
sti
popa
jl
mov
lret
and
cmpsl
ljmp
hlt
fistpl
cmpsb
pop
mov
out
inc
push
lods
inc
dec
pop
icebp
cmpsb
orb
inc
ds
aas
cmp
or
jle
out
rcl
movsb
xor
fstpl
jl
insb
add
sub
inc
insl
push
lret
cmpsb
mov
inc
in
cmc
fdivp
scas
jg
inc
pop
cld
insb
jns
pop
add
data16
fcom
outsl
pusha
shl
rorl
les
call
popa
popf
add
dec
das
adc
jb
stos
add
jae
push
ljmp
push
jne
and
inc
je
shrb
mov
and
sbb
xor
xor
and
or
call
iret
les
pop
or
xor
repnz
mov
sbb
sub
jo
cmp
jp
popf
das
rcrl
xor
fsts
call
xor
jecxz
rcl
inc
mov
sarb
orl
test
jb
clc
cmp
inc
sbb
scas
test
movsb
sahf
in
pop
xor
or
cmpsb
jge
dec
cmpsb
out
mov
adc
pop
mov
push
int
or
pop
cmp
mov
pop
enter
push
int
loope
mov
cmc
push
clc
das
pop
xchg
pop
cmp
inc
add
popw
test
jp
mov
inc
jno
sub
pop
sbb
dec
ds
and
icebp
or
int
es
loop
rclb
mov
sbb
pop
scas
jno
stos
sub
ret
mov
pop
cmc
pop
xor
xchg
xchg
mov
and
xor
jbe
lcall
dec
xor
out
addr16
and
shrb
sbb
fucom
mov
mov
ret
mov
iret
cmpsb
adc
aas
cmp
or
rclb
lea
or
pop
or
stc
loop
aad
ljmp
mov
sub
inc
sub
movsb
pop
daa
rcrl
popf
xchg
nop
pop
or
xchg
sbb
fildll
xorl
bound
adc
test
test
mov
pop
pop
cmpsb
scas
pop
aam
or
adc
mov
jnp
push
leave
pop
xchg
stos
fdivrl
push
pop
in
int
sub
lahf
dec
shrl
lods
mov
aad
adc
insl
sbb
inc
inc
data16
sarb
mov
aad
movsb
add
push
xor
mov
push
mov
xor
or
jecxz
in
push
pop
sarl
jb
jg
xor
jae
inc
pmuludq
stc
mov
jb
pop
ror
sti
push
pop
icebp
jle
scas
int
aas
ss
or
fwait
dec
aas
push
enter
sarb
cmp
push
in
xchg
ficomps
les
or
popa
popa
scas
nop
sub
std
mov
mul
jne
aas
out
add
idivb
pop
jl
push
movsb
into
lret
cwtl
dec
out
pop
push
or
push
imul
ret
push
sbb
cmp
repz
adc
add
cmc
mov
inc
fldcw
and
ss
adc
outsb
add
jmp
cmp
or
push
ljmp
pop
dec
push
push
xchg
pop
add
pop
scas
in
shlb
mov
test
xchg
testb
adc
dec
sbb
xlat
pop
dec
lahf
fucom
and
jmp
or
mov
call
shlb
in
dec
bound
mov
aas
and
xchg
mov
int
push
jns
jns
jne
xor
jnp
incb
mov
adc
or
arpl
sub
aas
xor
cmpsb
popf
pop
fucomi
or
fistl
fisubs
shrb
pusha
push
cmc
in
cwtl
adc
add
xor
pop
pop
stos
push
test
inc
fsubrs
out
inc
popa
movsb
ljmp
mov
ja
sub
xchg
inc
and
xlat
push
psubsw
popa
fdivl
xlat
test
xor
pop
rcrl
xchg
mov
push
sub
jmp
sbb
inc
icebp
jmp
xchg
sbb
outsb
insb
outsl
outsl
scas
aaa
cld
popf
popa
mov
hlt
loope
sar
jae
mov
out
jb
xchg
pushf
pop
or
fwait
lods
shrl
mov
mov
push
jo
add
fisubl
sti
fs
test
insl
jg
add
pop
in
mov
ror
mov
das
fildl
pop
loope
xor
das
push
xor
not
call
cmpsb
fucomp
jge
mov
xchg
cmc
stc
aas
inc
xchg
cmpsb
push
mov
add
add
fstpl
lods
push
adc
cwtl
inc
out
loope
mov
pop
sarl
inc
xchg
into
das
add
out
xchg
xchg
inc
enter
add
rcrb
fucom
mov
test
rol
xor
xchg
insb
add
mov
jb
inc
mov
jnp
mov
hlt
ljmp
jb
pop
arpl
mov
loope
or
enter
mov
pop
jp
out
es
lds
pop
cmp
jno
jo
into
in
shll
inc
and
inc
int
call
pop
jns
sbb
pusha
ds
pop
into
xor
pop
in
dec
xor
das
sbb
icebp
aaa
push
andb
cmpsb
ds
mov
mov
jl
loope
inc
jns
or
lcall
out
pop
inc
movsl
dec
hlt
and
cwtl
dec
out
sbb
scas
add
mov
cli
loope
sbb
jmp
jns
jae
cmp
jo
outsl
inc
repz
jb
xchg
aaa
adc
xor
shrl
cmp
cmp
mov
ja
or
gs
ja
pushf
stos
xchg
mov
push
in
xchg
ljmp
stos
xchg
push
in
repz
push
dec
lret
pushf
pushw
jmp
and
lock
test
push
push
cld
mov
fisubrs
mov
icebp
insl
inc
jne
outsl
test
and
mulb
push
stos
je
or
rcrl
jae
adc
cltd
mov
dec
push
jecxz
push
mov
inc
je
inc
xchg
rcr
pop
shlb
das
xor
jmp
insl
add
ss
mov
xorb
into
fcompl
mov
out
mov
aam
xor
fisttpll
bound
sub
pop
ds
jbe
sahf
int
loope
jae
cmp
dec
popa
mov
aam
mov
psubsw
fsubl
pmaxub
pop
push
in
rcrl
iret
out
xor
in
xlat
or
subl
in
dec
cmp
sub
push
jecxz
insl
mulb
cmp
mov
lds
jb
mov
xor
call
pop
loope
mov
int
in
lahf
mov
popa
test
aas
movsl
sub
sahf
int
and
xchg
repz
repnz
mov
cli
pop
aad
sbb
fbstp
xor
hlt
out
inc
dec
stc
gs
gs
jmp
and
pop
repnz
mov
jnp
push
divb
ret
push
mov
sbb
cmp
mov
jae
cmpsl
push
cs
or
enter
cmp
mov
jecxz
shr
repz
push
adc
xor
push
notl
hlt
out
dec
fsubrl
iret
les
pop
mov
lret
out
xor
pop
in
and
push
in
dec
push
popa
lods
ret
rcrb
pop
out
shr
xchg
inc
jb
out
adc
add
inc
je
mov
test
test
cmp
data16
xchg
in
lds
push
xlat
ljmp
mov
pop
aas
cld
je
scas
pop
jmp
and
sbb
sbb
call
sub
xchg
mov
sub
push
das
ja
or
cmpsb
pop
jnp
or
into
push
test
mov
xor
rcrl
in
int
or
std
xchg
sbb
std
movnti
pop
lock
xor
push
mov
lahf
repz
xchg
fistps
pop
out
pop
xor
ss
lret
and
sahf
call
push
int
sarl
aaa
call
cmpsb
lea
sbb
outsb
movsb
push
xor
or
into
inc
jno
inc
push
je
pushf
js
rolb
xchg
in
inc
popa
add
push
add
movsb
mov
add
jecxz
test
test
cli
jmp
xchg
sbb
andl
bound
inc
stos
cmpl
cwtl
ficomps
out
jb
and
cmpsb
enter
repz
jle
add
pop
loopne
ja
call
cmp
xchg
pop
sbb
cmp
sahf
dec
leave
je
or
int
lods
jns
cs
cmp
rol
out
mov
rorl
cmp
insb
mov
stos
and
js
add
add
loope
mov
hlt
shl
jb
xchg
adc
and
jo
mov
ss
push
out
push
aas
xchg
fwait
cmc
jno
call
movsl
pop
xchg
iret
frstor
int
add
pop
insl
lods
adc
mov
loop
pusha
pop
lret
push
imul
add
int
xchg
cmp
pop
jecxz
scas
mov
out
xchg
and
push
cmpsl
mov
loope
ret
adc
mov
dec
insb
fucom
sbb
insb
sbb
dec
aas
out
jge
pop
xor
lock
les
repz
cmpsl
jp
xor
mov
mov
pop
js
xchg
push
jmp
xchg
int3
sub
packssdw
out
jb
inc
sbb
lret
popa
negb
adc
cltd
fadd
adc
jecxz
xor
cs
xor
fstpl
sbb
clc
insb
cmc
aaa
in
push
mov
push
push
mov
pop
cmpsl
xchg
lock
dec
into
xchg
out
mov
in
stos
xchg
test
push
mov
je
jl
sbb
xor
ret
jne
jo
test
shrl
xor
fisttpll
inc
xchg
loopne
inc
rcl
rcl
and
test
push
aas
cmp
or
push
test
push
pop
xchg
xor
inc
push
hlt
jmp
iret
jb
pop
das
scas
sbb
jmp
or
pop
xchg
rol
pop
movsb
das
lahf
mov
push
jnp
and
dec
push
out
int
loope
jae
cmp
inc
popa
hlt
pop
mov
aas
push
push
jmp
dec
movsb
jecxz,pt
rcr
inc
xor
and
notb
jle
or
in
add
rcrb
ja
pusha
pop
lret
sub
pop
movl
push
bsr
cmpsl
outsl
lahf
aam
hlt
call
call
mov
xor
or
cmp
cltd
push
idiv
xlat
fldl
int3
push
jb
outsb
sub
and
rcrb
jp
ja
cmp
pop
jbe
ds
clc
scas
testb
pop
xor
pusha
enter
or
and
jmp
fistl
cld
movsb
cmpsb
pop
imul
ret
pop
cmpsb
cmpb
pop
cltd
fmuls
sub
dec
outsb
divb
xchg
lea
lock
xor
push
push
push
push
stc
das
push
pop
movsb
pop
clc
and
xchg
stos
push
out
mov
stos
xchg
jnp
cmp
and
fldcw
mov
cmpsb
xchg
pop
testl
call
pop
add
push
push
mov
lea
xchg
shl
mov
xor
je
jo
lcall
fldl
cmp
sbb
jns
movsb
out
cmpl
subb
mov
xor
cmp
jle
insl
enter
inc
psadbw
pop
test
add
jge
xchg
sbb
test
and
mov
adc
pop
dec
pop
cltd
pop
xchg
stos
addr16
loop
dec
scas
xchg
mov
lock
mov
aad
rol
lahf
inc
lea
push
and
dec
mov
cmp
inc
dec
sub
mov
ret
jb
xchg
lea
ret
sbb
popa
shlb
dec
add
in
pusha
cmpsb
xlat
add
in
fsubs
out
imul
stos
repnz
cld
lret
push
hlt
iret
call
xor
ret
jb
xchg
maxps
test
sti
dec
mov
outsb
jg
pop
popa
popa
scas
nop
test
clc
loop
or
pop
js
out
sub
ret
in
pusha
mov
daa
lret
mov
dec
out
aaa
ds
dec
cmp
xorb
int
call
jb
mov
leave
ds
inc
mov
mov
push
pop
in
sub
ss
jnp
jno
popf
mov
out
divb
cmp
push
jbe
pop
test
mov
dec
add
popa
mov
xchg
andb
testb
lret
rcr
fstpt
sub
sar
test
mov
fisttps
fsubr
jecxz
push
outsb
imul
repz
jb
cmpsl
dec
call
faddl
xchg
xor
jne
jmp
filds
loopne
inc
loope
jae
jnp,pt
fwait
lock
fldcw
or
movd
insb
pop
add
dec
mov
xor
enter
lock
jg
and
adc
insl
mov
adc
out
jb
mov
cmp
pop
xor
test
cmpsl
test
cmp
jp
xchg
inc
das
mov
loopne
mov
sbb
stos
jns
xor
jnp
mov
test
and
out
jmp
movd
jb
pop
outsl
mov
jmp
xor
xor
test
lahf
fidivrl
hlt
mov
call
mov
popl
repz
mov
and
sbb
inc
sbb
cmp
out
out
or
jne
imul
aas
pop
cld
out
repnz
xor
imul
sbb
out
pop
mov
fsubl
add
cmp
or
test
mov
dec
cmp
sub
xor
aaa
test
pop
dec
push
pop
cmpsl
cwtl
cmp
gs
cmpps
cmp
sahf
push
test
or
jb
and
in
cwtl
sbb
push
inc
jne
in
out
pop
mov
out
fdivl
in
roll
mulb
fwait
dec
pop
xlat
mov
cmp
xor
jmp
push
xor
sti
daa
xlat
xor
divb
xor
enter
sbb
inc
pop
or
mov
pop
mov
xor
xchg
sub
lret
xor
and
cmp
enter
cli
std
dec
movsb
jnp
pop
xor
enter
xchg
or
enter
outsb
in
pop
loopne
fwait
jb
jl
hlt
loope
sar
jae
test
sub
push
outsl
lahf
iret
outsb
hlt
stos
xchg
push
call
sbb
out
sti
xor
mov
ret
out
jb
xchg
lods
pop
add
xor
mov
fnsave
fbld
popa
sub
push
jp
push
jno
out
add
aad
or
jne
subl
imull
xchg
shll
adc
cmpsl
inc
enter
cs
lea
pop
sbb
inc
aaa
push
cmp
into
loop
xor
fldl
lret
divb
pop
xor
sub
cmp
fwait
insb
sahf
xchg
sub
popa
push
inc
dec
mov
mov
adc
ja
paddsb
fnstcw
rcrl
call
push
scas
pop
dec
movsl
sub
xchg
adc
mov
sub
fsubp
mov
jae
out
lds
pop
mov
dec
jnp
mov
int
push
jne
loope
jae
addr16
divb
pop
xor
pusha
scas
ror
push
xor
lcall
hlt
leave
inc
cmpsb
fcompl
add
mov
outsl
shlb
popl
pop
hlt
push
pusha
jmp
xchg
sbb
fs
pusha
mov
imul
add
loope
out
sub
shrl
inc
andb
jb
flds
out
mov
pop
int3
mov
enter
fs
out
pop
popa
mov
cmp
enter
mov
cs
popf
test
mov
adc
pop
pop
cld
loope
pop
not
inc
stc
iret
outsb
pop
inc
andb
jb
jb
jo
mov
int3
shll
xor
fstp
cwtl
xchg
pop
mov
test
sarb
pop
in
inc
jecxz
cmp
roll
jmp
xor
stos
out
jb
pop
dec
andb
jb
jbe
pop
ficomps
adc
fidivl
cmpsb
sub
je
xor
sub
jne
arpl
pop
add
repnz
xor
repnz
xor
fnstcw
fldt
xchg
adc
stos
std
in
loopne
addr16
jle
mov
out
pop
gs
xor
das
cmp
xor
push
out
test
popf
insb
sbb
push
lahf
sbb
not
jmp
xor
xchg
jmp
mov
stc
stc
cmp
aam
xor
fisttpll
adc
ror
rcl
and
mulb
and
hlt
cmp
pop
add
mov
andb
jb
jb
jle,pn
lea
pop
sbb
add
mov
daa
shlb
into
movsl
and
ja
mov
mov
xchg
cmp
fsubl
push
out
xor
fldl
repnz
push
dec
cmp
dec
jae
push
xchg
inc
arpl
imulb
pop
jmp
int
addr16
pop
les
cmc
jl
dec
ja
outsl
xchg
pop
in
mov
fucom
mov
imul
pop
jnp
lcall
sarl
mulb
movsl
inc
push
cmp
push
inc
push
stos
jg
push
sbbb
mov
sahf
sub
aam
and
nop
cli
outsb
loope
pop
out
stos
xor
mov
sahf
int
xchg
cmp
xor
or
stos
xchg
mov
lret
xor
ss
mov
pusha
popf
adc
inc
movd
pop
cmp
icebp
out
in
pusha
lahf
jle
xor
gs
mov
or
clc
fnsaves
push
pop
loop
dec
mov
dec
mov
mov
je
fdivrl
sub
cmp
xor
int3
mov
mov
push
lods
lea
sbb
popa
or
xor
lods
xor
or
shrl
mov
test
lahf
enter
xor
mov
inc
js
dec
cmp
pop
icebp
mov
mov
xchg
or
enter
sbb
popa
stos
les
pop
or
inc
or
dec
push
inc
cmpsl
lcall
jb
xchg
mov
cmc
aaa
sbb
mov
outsl
cmp
in
pusha
movsb
repz
in
enter
aad
mov
pop
pop
test
in
ret
jbe
push
out
xor
enter
mov
fistl
cmp
fucom
ja
cmp
mov
jnp
leave
mov
ja
shrl
cmp
sti
ja
ljmp
ret
cmp
movsb
scas
iret
das
outsl
lods
idivl
hlt
lds
cmp
sbb
stos
jp
or
gs
push
inc
lea
lret
xor
or
sub
dec
lods
pop
int3
adc
lods
xchg
cmp
jae
ljmp
shlb
cmp
jae
lret
cmpsl
mov
cltd
adc
movsb
xchg
in
cld
mov
dec
in
push
in
pop
push
jns
addr16
pusha
es
and
dec
push
pushf
stos
es
stc
das
pop
fstps
movsl
fnstenv
les
mov
mull
outsl
lods
icebp
adc
mov
and
aaa
inc
adc
cmp
jecxz
push
pop
sbb
xor
sub
in
je
or
int
es
jae
push
mov
fcomp
xor
pop
xor
cmp
or
mov
xorl
pop
andl
jle
ja
sub
mov
add
inc
sti
in
jb
jo
xor
aam
xor
ficompl
inc
cmpsl
je
mov
jb
mov
xor
pop
ret
cmp
je
lcall
push
in
pop
inc
in
into
test
push
pop
xor
mov
xchg
pop
in
ret
xor
mov
out
inc
pop
mov
lahf
add
and
jns
xor
push
sbb
mov
ss
and
lods
sbb
cmp
cmp
jnp
xchg
jo
xor
cmpsl
outsl
lahf
mov
dec
cmpl
in
cmp
in
xor
data16
lds
test
push
movsb
jns
pop
xor
je
lds
jns
jne
push
ja
and
cmp
out
int
call
xchg
call
sub
mov
dec
push
cmp
cmpsb
jnp
sub
cmp
aad
mov
pop
das
xor
and
pop
mov
pusha
xlat
jo
in
rcrb
movsl
sub
sub
and
pop
xor
xor
outsl
lahf
fdivrl
pop
outsb
call
test
mov
je
jp
sahf
outsl
mov
mov
cwtd
push
mov
xchg
xchg
or
xor
ss
mov
cmp
cwtl
dec
out
rcrb
or
cli
cld
lock
ss
jge
jbe
mov
push
sub
sahf
fcoms
stos
push
or
xchg
stos
outsl
mov
cmpsl
adc
or
mov
xchg
sti
in
shlb
out
mov
int
lret
pusha
pushw
test
lcall
adc
mov
cmp
jae
sbb
push
mov
loop
loope
inc
in
lock
adc
pop
jle
sti
mov
in
cwtl
and
idivl
test
shlb
push
mov
jb
in
sarl
jge
sbb
pusha
daa
mov
fwait
into
mov
xor
fstps
fistps
loopne
dec
mov
inc
frstor
outsl
lods
adc
into
shlb
push
jo
les
xchg
xor
xchg
push
cli
jae
repz
inc
jne
dec
popa
stos
ror
sbb
and
cmp
jns
pop
xor
dec
out
pop
add
pop
jl
pop
sti
int
pop
fxch
pusha
scas
rcrb
imulb
dec
sub
lret
mov
or
or
jle
adc
xor
gs
adc
pushf
pop
divl
lods
pop
in
jno
jbe
lods
xchg
movsb
dec
mov
inc
inc
add
fwait
sahf
pusha
mov
xchg
shrl
push
leave
pop
in
mov
sahf
enter
icebp
test
aas
xor
or
adc
mov
leave
pop
int
jb
pop
test
xor
fstps
gs
sbb
subb
cmp
xlat
sub
mov
xor
mov
in
icebp
pop
mov
popf
popa
test
push
dec
mov
add
inc
xchg
lock
ja
cmp
or
jge
xchg
mov
jne
pop
inc
into
xor
cmp
xor
out
mov
inc
enter
add
push
outsb
out
sbb
pusha
test
pop
repz
push
stos
mov
add
sub
push
jecxz
inc
cmp
stc
jae
inc
mov
xor
pmuludq
and
ret
jb
pop
sbb
add
jnp
push
mov
mulb
fdivl
inc
pinsrw
lds
inc
pop
jb
sbb
fucom
mov
rcrb
mov
xor
mov
fldenv
mov
in
mov
into
push
fnstsw
outsl
lods
add
inc
dec
stos
and
cmp
xchg
and
sti
sub
cmp
mov
push
movhps
gs
push
xchg
lea
sbb
pusha
mov
int
mov
rclb
loopne
lahf
sub
lods
mov
or
dec
jb
in
aad
xor
mov
aad
stos
js
jl
ret
pop
in
rorb
mov
pop
in
mov
lcall
ja
cmp
push
ffree
adc
out
or
pop
in
aam
lods
sbb
fucom
mov
aas
leave
sti
sbb
push
pop
mull
movsb
add
push
jmp
xchg
xor
jmp
enter
lds
xor
pop
sbb
cmp
or
enter
lods
sbb
jle
xchg
xor
sbb
sahf
popf
pop
jo
adc
xor
cmp
in
sub
gs
sti
call
repz
push
xchg
sub
sbb
adc
xchg
pop
sbb
int
int3
adc
xor
sbb
jbe
jge
ja
pop
xor
jns
aam
and
sbb
out
inc
and
mov
mov
sahf
int
push
shlb
ror
push
xor
xor
cmp
rolb
daa
push
xor
xchg
popa
xlat
pushf
int3
aas
movsb
adc
or
test
lods
hlt
insl
insl
pop
cs
sub
icebp
popf
out
cmpsl
lods
mov
addb
inc
mov
add
xor
ljmp
ror
outsb
add
ljmp
xchg
xor
sti
les
aaa
aaa
dec
push
flds
mov
cmp
out
add
shlb
jmp
mov
aad
jle
cmp
add
in
dec
mov
cltd
jge
outsb
xor
or
sbb
jmp
loop
gs
hlt
xor
imul
dec
sbb
lahf
cmpsb
xor
mov
scas
jp
rclb
das
pop
sahf
lret
dec
adc
in
aam
xchg
lea
sbb
leave
loopne
js
cmp
enter
xchg
enter
cli
lahf
imul
iret
cmp
les
jecxz
or
ret
fldt
int
pop
mul
jge
mov
mov
stc
das
pop
mov
lahf
xlat
and
pop
je
push
push
lret
mov
push
add
adc
cltd
mov
and
adc
jns
and
push
arpl
add
cmp
or
icebp
mov
or
push
testl
ljmp
enter
lahf
and
mov
xorl
or
jns
jge
pushf
ds
movsb
clc
sbb
aad
insl
mov
pop
add
mov
adc
cwtl
push
inc
jae
out
mov
lret
xlat
fs
cmp
and
push
cmp
icebp
arpl
scas
xor
sbb
mov
cmpsl
outsl
lahf
shrb
int3
outsl
xchg
cmpsl
call
mov
and
imul
aas
jb
xor
daa
cltd
pop
shlb
xor
inc
jo
cmp
icebp
cmpsb
mov
insl
mov
scas
xchg
push
sbb
leave
shll
pop
or
arpl
das
in
cwtl
pop
cmp
mov
pop
ret
out
push
cli
das
pop
and
push
jnp
sub
push
fwait
outsb
aas
inc
inc
js
into
sub
or
xor
mov
add
push
pop
pop
push
xor
pop
sub
sub
push
add
mov
std
shll
into
scas
inc
in
aaa
test
idivb
push
xchg
pop
cltd
pop
xor
ss
gs
dec
push
cmpsb
pop
std
js
lods
push
hlt
xchg
loop
sbb
dec
pop
aad
cmp
push
lret
add
sub
mov
sub
filds
shlb
mov
pop
in
mov
adc
ror
rcl
and
popa
scas
rcrl
xor
enter
pushf
mov
mov
pusha
fucomi
std
dec
xchg
cs
pop
mov
call
xlat
or
test
xchg
aas
sub
cmpl
fimuls
orl
pop
insb
add
or
test
out
rcll
pop
cmp
adc
test
roll
mov
push
in
dec
pop
sarb
cmp
jmp
jmp
dec
sbb
fdivrl
sub
pop
loopne
xor
lods
and
sahf
int
stos
xchg
jg
push
jo
loope
mov
ror
out
lahf
cmp
adc
aas
cmp
or
imul
xor
jl
ds
sarb
loop
adc
dec
outsb
test
movsb
stos
xchg
sub
mov
das
leave
add
imulb
scas
and
lods
push
inc
add
lret
out
pop
jns
or
das
cmp
xlat
cmp
fucom
mov
daa
loopne
testl
mov
lds
pop
xor
into
add
je
inc
pop
mov
les
lds
pop
jns
test
push
sbb
pusha
cmpsl
std
mov
test
xor
lock
out
test
jbe
cli
adc
mov
jp
xor
mov
loopne
jl
in
adc
outsl
xor
jb
aaa
xor
icebp
adc
loopne
add
push
mov
cld
jae
inc
xchg
rcr
pop
int3
jno
push
sub
das
mov
test
lahf
loope
hlt
lods
hlt
xor
test
jns
call
rcrb
test
xchg
add
jb
push
ss
jne
out
hlt
jne
cmpsb
pop
ficomps
xchg
nop
mov
into
in
ret
or
mov
xor
pop
add
xchg
pop
sahf
lods
and
ss
movsb
inc
ss
orb
dec
pop
or
inc
mov
sbb
inc
xchg
xor
inc
push
out
fdivrp
inc
test
lods
aad
movsl
jnp
movsb
arpl
out
lret
test
mov
iret
mov
cmp
sbb
cmp
int3
subb
shl
sahf
sbb
call
inc
sbb
cmp
test
mov
cmpsl
lods
sub
repz
aaa
inc
test
xlat
mov
cmp
cmp
out
dec
imul
pop
pop
loop
mov
loope
shll
leave
push
enter
pop
loop
push
inc
ja
ja
out
add
xor
fcoms
call
sbb
xor
or
inc
xlat
pop
mov
inc
ja
ds
in
sub
ss
addl
movq
mov
jae
cs
inc
js
gs
enter
out
pushf
inc
adc
out
jmp
inc
lock
test
hlt
jecxz
jae
mov
les
pop
dec
ljmp
pop
xchg
xchg
xor
pop
in
push
add
out
inc
xor
ret
sbb
sahf
int
jle
lds
mov
cmpsl
outsl
lahf
test
mov
jne
iret
xchg
inc
jns
xor
divl
inc
push
pushf
cmpsl
mov
mov
int3
gs
push
adc
popl
push
cmp
lahf
jmp
pop
push
xor
xchg
stos
in
ret
cmp
test
jne
cli
das
pop
jl
xchg
outsl
imul
lret
aam
or
ret
fdivl
jg
filds
stos
out
jb
push
push
jmp
push
push
jge
push
icebp
test
hlt
dec
pop
jmp
test
xchg
xchg
sub
test
push
and
add
aaa
sub
dec
repz
adc
cld
loope
adc
xchg
mov
int
call
mov
ret
xor
mov
out
xacquire
aam
clc
gs
imul
jle
sbb
add
sbb
insb
jb
mov
mov
fs
test
in
js
inc
test
mov
scas
mov
add
add
xchg
cld
cs
inc
je
jne
movsb
lret
mov
sub
cltd
cs
cmp
out
repz
outsb
and
and
jae
mov
xchg
pop
filds
cmp
mov
divb
out
or
mov
pop
mov
push
ret
jb
and
xor
add
clc
dec
ljmp
icebp
test
orl
inc
add
adc
ljmp
fwait
xchg
cltd
divb
push
lock
pop
pop
imul
clc
or
ror
enter
aaa
push
je
mov
pop
pop
cmc
pop
xor
jge
cltd
repz
sub
pop
in
inc
cmpsl
jne
pop
mov
in
mov
into
data16
xor
push
mov
testb
gs
mov
jmp
adc
mov
je
shlb
data16
push
ret
mov
xor
mov
pop
mov
sub
xlat
ss
inc
mov
xchg
push
in
ret
or
test
fwait
scas
cmc
ret
xor
leave
shll
mov
rcl
xor
insb
jl
jo
xor
cmp
sub
ljmp
cmp
ret
mov
adc
aas
ss
or
jl
xor
jb
sarl
mov
notb
ftst
daa
push
pop
xchg
inc
push
ss
je
orb
out
loopne
rcrl
cs
and
enter
lds
xchg
xor
dec
adc
rcr
sti
inc
mov
cld
repz
push
fsubp
mov
popf
mov
lret
hlt
adc
cmp
scas
mov
fistpl
sarb
in
imul
pop
cmpsb
rcr
sahf
lcall
rolb
cmp
inc
ret
iret
mov
jae
jo
jne
mov
adc
int3
and
jbe
inc
push
ret
push
dec
imul
sub
ret
gs
push
mov
and
ljmp
cld
jne
jae
in
cwtl
adc
or
mov
clc
sbb
add
into
lds
cmpsb
loope
test
or
fucomp
pop
loope
mov
int
out
sbb
incb
je
and
mov
into
jns
jle
xor
cmp
ds
lock
xor
xor
cmp
cld
inc
rcr
mov
out
sbb
push
sbb
xor
or
fs
xor
test
lahf
mov
test
xchg
dec
jge
ror
mov
xor
imul
jmp
mov
fsubrs
rorb
jae
out
sub
xor
divb
loop
mov
cmp
mov
push
mov
fmuls
mov
fucom
cmpsl
cmp
inc
or
test
cmp
dec
xchg
scas
daa
pop
ja
rcrl
jp
xor
imul
pop
sbb
mov
xchg
fsubp
mov
daa
scas
lret
lods
or
cmc
mov
and
cmp
ja
adc
cmp
jae
out
mov
gs
pop
out
inc
cmpsl
je
mov
push
cmpsb
sub
inc
sbb
cmp
sbb
lret
mov
ja
pop
xor
lods
ror
rcl
and
jne
and
gs
sbbb
dec
ss
divl
push
jae
sub
or
xchg
repnz
add
dec
pop
or
xor
rclb
jp
push
xor
ss
fildll
jb
in
into
call
adc
xor
mov
jb
pop
mov
xor
jecxz
pop
add
xor
xchg
rorl
lods
inc
jae
and
inc
leave
xchg
xor
sub
inc
loop
adc
iret
dec
or
jae
out
jae
push
jp
xor
ja
mov
test
mov
shrb
mov
pop
jg
mov
adcl
xor
fstpl
pop
divl
push
xchg
ja
cli
hlt
js
mov
adc
mov
dec
mov
fstpl
cmpsb
pusha
mov
lods
adcl
sbb
sub
mov
lods
xor
mov
mov
and
imul
inc
popa
inc
scas
mov
pop
push
les
mov
push
out
pusha
mov
mov
into
out
test
cli
mov
push
cmp
cmp
xor
fldcw
out
mov
mov
mov
sbb
sub
push
stos
ss
push
arpl
xchg
hlt
lods
loop
pop
xlat
cmp
out
lret
mov
push
xchg
lock
mov
mov
out
fs
jmp
ss
mov
pop
dec
jae
xor
cli
xchg
sahf
daa
adc
jecxz
xchg
jbe
iret
ret
pop
inc
jg
jl
mov
cmp
test
lock
mov
sahf
push
out
push
pop
call
dec
pop
mov
out
pop
xchg
mov
scas
xchg
xchg
cmpsb
gs
cmp
scas
mov
mov
fsubrs
dec
add
dec
xchg
in
jmp
sahf
add
shll
mov
push
shrl
pop
xor
bound
xor
push
pop
scas
fisubrl
outsl
lods
repnz
hlt
mov
dec
xlat
or
push
xchg
cmp
inc
ja
and
out
cmp
pop
in
xchg
es
adc
inc
out
add
outsl
pop
cmp
pop
popa
in
scas
xchg
pop
mov
mov
dec
push
aaa
pop
or
add
pop
xchg
imul
mov
push
outsb
jae
xchg
xor
out
sbb
sbb
cmc
call
std
cli
add
sub
pop
sbb
push
fsubrs
pop
sub
or
int
cs
pop
sub
xor
data16
les
sbb
scas
enter
lock
hlt
mov
and
ss
movsl
xchg
out
pop
xor
xor
cmpsl
outsl
lahf
lods
mov
leave
sub
out
xchg
dec
jge
jge
out
enter
lods
scas
lods
das
outsl
lods
sbb
cmc
lret
lahf
shll
xchg
cmp
sti
movsb
lret
out
movsb
mov
inc
mov
jmp
pop
shrl
cmc
or
nop
xor
xlat
pop
cmc
mov
cmp
cs
gs
jo
hlt
xchg
in
cld
xchg
sbb
or
push
ja
scas
pop
and
es
jl
not
jmp
xor
push
test
sbbb
jae
push
pop
pop
out
mov
fwait
jecxz
gs
jns
jl
and
jnp
test
xor
insb
jl
outsl
mov
or
outsl
in
jb
mov
adc
pop
cmpsl
add
push
xor
sahf
cmp
mov
fcomp
fadd
daa
pop
cmp
mov
jae
mov
hlt
into
imul
xor
jmp
out
xchg
xor
jb
arpl
mov
mov
iret
out
push
xchg
push
add
or
cli
jmp
in
in
in
pusha
mov
sarl
sbb
xor
pop
fnsave
push
add
dec
push
jp
xor
sbb
out
jb
js
out
pop
sti
pop
cld
jns
jbe
or
xor
add
cli
jno
jns
sti
repz
mov
jmp
dec
stc
mull
pop
js
pop
outsl
loop
pop
fisttps
push
inc
addr16
clc
cmp
mov
jae
push
jbe
jo
sbb
out
std
insl
pop
shlb
push
xor
pop
cmp
xor
and
pop
test
add
adc
int3
or
add
ret
cwtl
call
sub
xlat
cmp
pop
mov
dec
lods
push
adc
stc
loopne
mov
or
and
jbe
adc
sub
ja
scas
push
repz
loop
fxch
push
sub
push
out
cmp
and
out
mov
repz
orl
cmpb
mov
lods
push
jp
cs
in
in
mov
addr16
std
adc
rorb
imul
and
stos
and
jp
cmp
into
mov
xor
or
nopl
fiaddl
push
scas
stos
das
outsl
lods
cli
hlt
shlb
push
xchg
cmp
jno
pushf
xor
in
imul
hlt
xlat
mov
cmp
out
pop
cld
ja
js
xor
outsb
fbstp
jb
ja
hlt
shlb
mov
fucom
mov
jmp
andl
pushf
push
fildll
lret
loope
pop
mov
fildll
inc
or
cmp
inc
addr16
int
sub
jo
xor
mov
adc
cmp
jno
out
jb
mov
sti
ret
cmp
mov
scas
shrb
outsl
lods
call
or
ss
cld
imull
out
std
cmp
mov
aad
mov
scas
lods
clc
jg
stos
movsb
rcrl
or
aam
inc
push
jecxz
or
or
dec
aad
push
push
xor
test
add
mov
stos
cltd
sbb
jecxz
jge
inc
imul
or
sbb
inc
stos
push
pushf
je
or
shr
fs
pop
in
test
negb
fucom
mov
pop
loopne
and
ja
icebp
jp
iret
jp
sti
hlt
ds
popa
pop
and
cld
cmp
xor
cmp
push
scas
lds
ljmp
das
jns
add
or
xchg
cwtl
adc
push
cs
add
out
in
dec
dec
inc
jle
andb
jb
test
jnp
push
push
pop
loop
mov
mov
rol
es
xor
sbb
and
jbe
mov
mov
jmp
mov
lods
lods
dec
pop
aam
xor
fisttpll
jmp
divl
pop
out
inc
push
xchg
pusha
test
pop
repnz
sbb
mov
dec
jb
js
mov
popa
rcrl
movsl
mov
sbb
xor
jno
les
test
and
pop
add
hlt
fnsave
pop
add
mov
sub
in
pop
mov
xor
mov
mov
ret
jb
arpl
xor
in
xchg
je
or
xor
mov
imul
in
cmc
fs
pop
jns
mov
push
sbb
dec
xchg
xor
aam
pusha
int
shlb
ss
mov
call
push
inc
push
jp
das
sbb
inc
dec
dec
xchg
mov
push
mov
loopne
cmp
ja
pop
pop
pop
xchg
jne
mov
in
pusha
mov
inc
inc
dec
mov
push
add
mov
repnz
push
data16
int3
jae
mov
lcall
xor
andl
aas
fists
loopne
dec
push
sub
pop
jecxz
subl
add
mov
rcrl
pop
xor
ljmp
mov
rol
add
insl
mulb
sub
push
shlb
jno
jge
rorl
stos
push
cmpsb
mov
dec
out
jg
jno
movsl
scas
pop
dec
in
push
loopne
ret
loopne
xchg
movsl
mov
je
push
inc
adc
bound
insl
xchg
nop
push
cmp
jb
lcall
jb
arpl
xchg
fisubrs
daa
mov
mov
pop
loop
mov
mov
sarb
jne
out
leave
adc
movsb
pusha
mov
jae
sbb
fnstsw
scas
lds
outsl
lods
cmc
popa
hlt
lret
mov
out
and
cmp
sub
sbb
enter
iret
lds
pop
push
inc
xor
rol
or
enter
xor
js
ret
mov
add
leave
push
add
jb
mov
mov
negl
out
xor
pop
cmp
lret
mov
cmp
adc
cmp
pop
xlat
adc
push
push
stos
sbb
idivb
pop
and
cmpsl
mov
arpl
lret
mov
add
shl
ficoms
gs
or
push
scas
pop
and
leave
add
aas
rclb
rcrb
add
cmp
xor
mov
pop
mov
mov
jmp
and
mulb
out
jae
inc
sbb
cmp
leave
cmpsl
mov
add
push
std
call
mov
xor
and
mov
faddp
mov
sbb
jmp
inc
fists
pop
add
mov
ljmp
rolb
pop
xor
pop
sub
sbb
fldcw
divb
mov
mulb
adc
dec
jle
fsubs
push
js
xchg
fistl
pop
mov
sub
xchg
jno
ret
sbb
push
push
mov
outsb
cs
xchg
ss
xchg
jb
adc
in
lret
push
aas
fimuls
bswap
inc
jno
jno
out
xchg
shll
xchg
sub
dec
int
in
and
pusha
test
mov
cmpsl
jb
jns
shl
cmp
add
in
mov
mov
ror
daa
cltd
cmp
mov
cmpsb
clc
mov
loop
shl
je
jb
inc
inc
ds
or
pop
out
pop
xor
pop
ror
lret
and
pop
jbe
jge
and
or
add
out
outsl
test
lds
xor
notb
push
int3
je
or
jbe
lods
jbe
cmp
dec
popa
xor
mov
jnp
iret
movsb
mov
push
jne
jbe
sub
cmp
lahf
sbb
lock
daa
add
add
jnp
les
and
loope
cltd
sbb
outsb
jb
dec
inc
jp
popl
cmp
inc
popa
xchg
pop
lahf
inc
hlt
mov
mov
push
adc
out
cmp
adc
lret
pop
cli
cmp
iret
xor
and
scas
add
test
dec
xchg
push
add
test
movb
mov
or
sub
iret
jae
sbb
fucom
mov
lret
enter
dec
bound
push
jne
and
pop
ffree
adc
loope
dec
sub
adc
test
aaa
inc
mov
pop
mov
inc
fdivs
sarb
ljmp
outsl
shl
mov
or
psubsw
fwait
mov
pop
and
nop
or
shl
aad
test
adc
into
xor
sbb
push
mov
enter
stos
hlt
in
les
icebp
jo
cld
xor
push
hlt
int
xor
fstpl
insl
out
sbb
and
mov
hlt
imul
imul
lds
addr16
lods
adcb
aam
stos
pmaxsw
shl
push
jl
adc
inc
inc
pop
mov
push
and
mov
in
sub
ss
jp
and
inc
mov
xor
push
mov
int
popa
mov
inc
dec
jmp
xor
and
lret
pop
xor
xor
jae
pop
xor
or
mov
pop
imul
add
repnz
mov
jle
xor
rol
ret
in
pusha
movsb
test
cmp
jp
stos
sbb
lret
and
fstpt
aaa
inc
add
sahf
in
jb
jb
lret
or
shr
sbb
fucom
mov
ror
in
ja
mov
adc
popa
scas
mov
pop
cltd
dec
clc
in
push
xchg
jbe
aaa
cmp
add
inc
pop
imul
adc
adc
sti
push
jbe
daa
push
mov
xor
jb
pop
stos
ja
loopne
adc
rcrb
test
adc
sub
stos
mov
out
jno
pop
scas
test
inc
cmp
pop
jb
nop
xor
push
jb
in
fldcw
shrl
xchg
loope
mov
ljmp
xor
pop
mov
xchg
cmp
jmp
mov
jno
hlt
popa
xor
inc
adc
out
stc
pop
test
jb
pop
and
sbb
pushf
cld
xchg
pusha
scas
mov
pop
pop
xchg
or
adc
sbb
sbb
xor
sbb
xor
fcompl
insb
sbb
jge
pop
xor
xor
imul
jbe
xlat
jecxz
popf
out
cmpsb
jbe
movsb
mov
mov
mov
das
cmp
out
sbb
cli
insb
adc
aad
mov
cmp
or
les
mov
jp
out
xchg
pop
push
pop
in
inc
cmpsl
jne
aas
mov
loop
mov
int
jmp
xchg
ss
xchg
mov
les
hlt
call
call
xor
in
in
popa
lahf
pop
lahf
or
packuswb
inc
adc
js
or
sbb
mov
scas
pop
adc
roll
pusha
shl
sarl
enter
scas
push
aad
out
push
aas
movsb
cltd
out
xor
xor
outsl
lahf
mov
hlt
shlb
insb
pop
call
xor
push
sub
push
jecxz
pop
lahf
mov
xchg
je
inc
mov
cmp
lret
add
scas
das
outsl
lods
pop
push
test
movsb
and
cmp
test
fucom
.byte
jb
