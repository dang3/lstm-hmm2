add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
sub
xor
pop
inc
xchg
xor
rolb
or
add
or
add
add
add
add
add
add
add
sub
add
mov
xor
out
js
pop
add
add
je
xchg
add
add
js
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
xor
popf
add
add
add
inc
add
add
xor
and
stos
add
add
add
add
add
add
add
js
inc
add
add
add
mov
jbe
xor
mov
add
add
xor
add
add
add
push
add
add
xor
xor
cmpsb
add
add
mov
add
add
mov
push
add
add
add
add
xor
movb
add
add
add
ljmp
add
add
ljmp
add
add
add
add
add
clc
add
add
xor
add
push
add
add
add
add
add
int3
add
add
out
int3
add
add
add
loopne
sbb
ljmp
add
push
add
add
add
add
xor
xor
mov
add
test
js
out
add
add
int3
add
mov
jnp
jge
cwtl
add
add
add
and
and
js
xor
jbe
push
add
add
and
xor
insl
add
or
xor
loope
pop
add
add
aas
add
push
add
add
add
add
add
add
add
bound
add
add
cmp
add
dec
add
add
add
add
add
and
dec
add
pusha
add
add
add
xchg
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
add
add
cmp
xor
js
pop
add
add
add
add
add
add
add
mov
add
and
add
add
add
add
loopne
push
add
add
mov
pop
add
add
int3
add
add
cltd
add
add
add
add
add
add
insl
add
int3
add
add
xchg
add
push
add
add
add
add
insl
add
int3
add
add
in
pop
add
add
flds
int3
add
mov
add
add
add
add
add
mov
add
add
sub
add
add
add
xor
inc
add
add
add
add
cmp
or
add
add
add
add
push
add
add
add
add
add
inc
add
add
fwait
add
xor
jbe
test
add
add
add
add
add
cmp
xor
inc
add
push
jl
cmp
inc
add
add
add
add
xor
add
fwait
add
add
mov
xor
clc
add
pusha
add
add
push
add
mov
mov
sbb
add
add
add
add
add
add
add
add
shll
pop
sbb
or
frstor
insl
adcb
and
jnp
cmpsb
fsubl
cwtl
sti
xor
push
imul
push
or
fistps
lret
mov
add
mov
mov
dec
cmp
jp
ss
mov
jle
push
xor
ja
fmul
leave
push
add
movsb
mov
cmp
xor
sti
loop
ret
cltd
jmp
int3
mov
ja
dec
jno
pop
dec
fnstenv
mov
lcall
xchg
add
insl
add
and
add
sub
mov
xchg
jg
xchg
or
jmp
aas
ret
push
xchg
insl
xor
insb
ja
rcrb
add
insb
dec
add
and
inc
cltd
stos
mov
inc
shlb
dec
adc
sub
imul
inc
push
xchg
outsb
insb
loope
bound
mov
xlat
add
movsl
testb
sbb
fnstenv
cmp
xor
push
imul
push
mov
jo
aaa
movsl
push
test
jmp
xor
xchg
mov
xor
in
in
pushw
cmp
adc
jno
cmp
jbe
sub
cli
je
js
adc
mov
inc
lret
pop
lret
mov
cmpsb
movsl
test
pop
aaa
inc
inc
aad
shr
dec
cmpsl
cli
xchg
mov
dec
data16
outsl
push
sbb
cmpsb
xor
push
les
aad
mov
into
and
jg
mov
loopne
outsb
jl
testl
movsl
push
mov
outsb
js
stos
enter
pop
xchg
or
mov
lods
fidivrl
dec
call
arpl
cli
mov
xchg
pushf
dec
in
cmp
dec
lds
cmp
xlat
clc
popf
daa
fldt
iret
push
mov
ficoms
shll
jle
or
sbb
mov
test
clc
fs
addr16
mov
daa
cmp
jne
imul
lcall
xchg
cmp
inc
mov
add
mov
fcoml
mov
scas
xchg
iret
lahf
cmp
gs
jno
lods
add
push
xchg
lea
mov
clc
lret
cmp
popa
or
mov
rcrl
mov
lods
mov
cmc
jo
rcll
notb
mov
jnp
push
sbb
cmpsl
bound
jb
cld
ret
pop
orl
dec
test
mov
aam
test
push
mov
mov
int3
hlt
rep
push
aad
sbb
xchg
pop
jmp
sbbl
push
mov
inc
outsl
orb
insl
sub
push
outsl
mov
mov
pop
insb
mov
push
movsb
mov
mov
scas
iret
pop
scas
imull
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
cs
xor
pop
cmp
mov
popf
scas
in
into
cld
push
fucomp
sub
cs
dec
dec
outsb
pop
or
scas
popf
mov
int
sub
ss
inc
dec
jbe
lods
mov
lret
mov
mov
pop
inc
cmp
pop
out
pop
lahf
mov
outsb
xchg
sub
mov
mov
lcall
xchg
js
pop
outsb
insb
jb,pt
xchg
sub
aam
adc
scas
add
test
cmp
add
divl
pop
sub
lods
mov
sahf
fcmovnb
bound
imul
ljmp
insl
insl
dec
push
dec
lods
sbb
mov
push
jne
or
adc
out
rorb
or
mov
dec
pop
push
lds
popa
fstl
pop
mov
mov
cmp
mov
les
cs
out
hlt
clc
push
adc
out
ds
in
fdivr
jb
cmp
ds
dec
jge
dec
outsb
pop
lods
mov
cmpsl
in
std
int
pop
push
jns
popa
dec
push
pop
cs
sbb
or
cmp
sahf
loop
stc
fistpl
subl
push
or
adc
and
sti
cmc
lret
clc
mov
popf
mov
mov
adc
outsb
dec
cmp
pop
dec
outsb
pop
jle
mov
mov
int
sub
cs
pop
dec
outsb
pop
jle
mov
mov
int
sub
test
or
dec
add
mov
roll
sbb
and
sub
xchg
pushf
jb
xor
sbbl
ja
loope
cmp
mov
xchg
jg
adc
loopne
fadds
push
lds
nop
cmp
jbe
scas
mov
xchg
cmp
xchg
push
icebp
inc
imul
xor
cmc
mov
xor
add
cmpsl
adcb
int
subb
outsl
xor
arpl
add
adcb
lods
dec
test
icebp
add
fsubs
popf
mov
pop
add
jae
mov
pop
leave
popf
xchg
add
mov
testb
jl
pop
test
fcoms
shrb
sahf
aas
mov
ret
cld
mov
ret
loope
jg
mov
divl
pop
or
out
daa
jnp
cwtl
pop
jp
sbbl
xchg
sbb
inc
subl
xchg
cs
gs
fcomp
mov
int
dec
data16
mov
fwait
fwait
pop
mov
test
je
call
sub
out
bound
js
dec
out
in
lret
inc
jae
xchg
cmpsb
cmpsl
mov
inc
dec
fildll
lods
push
clc
xchg
stc
fdivs
or
mov
sub
popf
fstpl
jge
mov
adc
frndint
fwait
les
fdivrs
mov
jg
add
aad
fwait
pop
fiaddl
cmp
testl
fs
stos
jmp
aad
xchg
stc
js
mov
jbe
add
sbb
xchg
movsl
or
xchg
movsb
adc
xlat
jmp
xchg
mov
mov
cmp
sub
ret
cmp
add
dec
repz
ret
cmc
add
mov
in
adc
jae
mov
lock
cmp
mov
pop
sub
or
xchg
sbb
cmp
mov
add
dec
sbb
cmpsb
ret
xchg
sub
lea
stos
fimull
clc
mov
jmp
cmp
jnp
mov
xor
or
call
cmc
dec
je
ret
js
out
icebp
push
dec
jp
sbb
iret
jo
jae
xor
daa
adcb
cmc
and
push
out
pop
pop
mov
add
and
pop
icebp
xor
lret
mov
insl
sarb
sbbl
stos
rorb
hlt
outsl
popf
add
dec
cwtl
add
outsl
cmp
clc
nop
sbb
dec
daa
test
push
sbb
out
cld
pop
fistl
or
cmp
inc
push
inc
mov
inc
inc
stos
and
push
sbb
pushf
sub
or
lahf
adc
push
lret
jp
cmc
addr16
out
cli
stos
test
add
call
mov
dec
pop
push
mov
into
mov
pusha
mov
mov
hlt
lock
and
sub
cmp
orl
stos
ffreep
imul
loop
call
lods
movsl
clc
aad
les
mov
mov
push
jno
jns
mov
dec
dec
sbb
mov
adc
and
xlat
call
pop
xchg
push
mov
add
test
test
mov
pop
jb
ror
dec
out
add
fsubs
or
or
jp
shr
sbb
add
pop
test
push
sbb
push
mov
mov
int
loopne
sbb
mov
cmpsl
ljmp
add
inc
imul
das
lret
sti
mov
dec
repnz
mov
rcll
jbe
mov
mov
or
adc
fwait
jecxz
mov
mov
xchg
orl
mov
fadds
popf
outsb
xor
andb
fbld
stos
sbb
cmovle
in
cwtl
lret
push
sub
rcll
jmp
or
dec
sub
add
and
inc
mov
mov
inc
sub
push
pop
add
xor
mov
sub
xor
jo
imul
insb
lods
push
sub
dec
test
jmp
push
cwtl
cmpsl
push
dec
push
and
or
cmp
or
inc
arpl
es
dec
scas
repz
inc
adc
adc
int3
mov
xchg
xor
and
sbb
add
push
loopne
and
jle
or
scas
fisubrs
cmpsl
cld
push
jmp
test
xor
repz
in
pcmpeqw
testl
or
hlt
sub
mov
lea
mov
cld
and
xchg
decl
sbb
leave
push
lret
cmp
sub
popf
mov
or
mov
dec
lahf
test
lahf
into
loop
in
mov
fbld
sub
test
into
dec
cmpsl
dec
mov
sub
sub
push
cmp
push
dec
mov
xor
mov
test
push
popf
ret
js
iret
push
push
jnp
repnz
xchg
jecxz
mov
out
jecxz
stc
stos
jne
cmpsl
stos
addr16
ret
testl
push
mov
mov
nop
sbb
daa
in
pop
into
das
jnp
pop
cwtl
jp
inc
iret
gs
xchg
sbb
leave
pop
jo
outsl
loop
enter
clc
clc
imul
jle
jmp
inc
ljmp
and
scas
aad
cmp
pop
add
pushf
sub
sub
cli
mov
inc
outsl
cld
data16
sub
fcompl
idivl
movsb
mov
pop
pop
call
stos
cmp
pop
lock
je
or
inc
xor
ljmp
push
nop
repnz
mov
and
stos
mov
xor
pop
mov
notb
add
sbb
aas
adcb
add
add
adc
test
clc
or
push
mov
jnp
mov
adc
nop
fiadds
loop
jmp
add
xor
inc
adc
insb
xchg
das
outsb
stos
pop
or
je
adc
sub
inc
jbe
clc
test
xchg
pop
mov
fisttpll
push
mov
aaa
hlt
fmuls
mov
ret
cmpsb
mov
jno
pusha
lahf
hlt
outsb
adc
rorl
ljmp
out
push
orl
fcoml
repz
inc
int3
sub
sahf
push
icebp
lcall
clc
rcrb
pop
mov
mov
outsl
pop
out
ss
mov
in
loopne
push
lock
pushf
pushf
push
pop
inc
xchg
scas
push
dec
cmp
cmpsb
inc
mov
cmpsl
loope
sub
arpl
mov
sbb
sbb
fcomps
lea
xchg
push
dec
in
lea
movups
sarb
xor
lock
push
mov
sahf
push
add
jnp
and
jae,pn
mov
push
cmp
add
xor
repnz
lret
lahf
mov
in
jl
sub
popa
jne
inc
cmc
xchg
fwait
sbb
mov
cmpsl
lods
mov
ficoml
fisttps
aas
or
jecxz
jmp
loope
mov
ja
mov
fldcw
xor
mov
adc
push
repnz
fwait
xor
cmp
jle
sub
xor
push
cmc
pop
mov
jne
pop
jbe
arpl
cmpsl
dec
call
pop
cvtps2pi
dec
adc
addb
add
cmp
and
mov
sub
outsb
mov
in
lcall
inc
jle
inc
lret
insb
aad
adc
xchg
cltd
pushf
sbb
out
dec
pop
enter
in
xor
jbe
xsetbv
inc
push
mov
xorl
std
stos
fucomip
pop
lock
xchg
pop
cli
mov
cmpsb
outsb
data16
sbb
daa
adc
js
jge
shl
fwait
shlb
xor
movsb
call
stos
sub
aad
and
inc
sub
pop
mov
popa
push
out
mov
jle
lds
mov
add
cmp
leave
out
sbb
shll
ss
sub
scas
xor
js
cmpsb
outsl
jnp
cmc
sahf
mov
imul
js
lahf
xorb
and
adc
push
xor
data16
mov
jl
hlt
rorb
loope
push
movsl
fcmovnbe
call
xchg
pop
data16
pop
ds
leave
pop
xchg
dec
lret
sarl
adc
sbbl
mov
in
and
das
lea
jl
push
pop
add
loop
jl
xchg
jne
mov
xorl
fsubrp
repz
std
jne
jge
or
xor
cltd
sub
push
or
js
jae
inc
arpl
push
xchg
xchg
fldcw
add
testb
xlat
sti
out
mov
roll
mov
xchg
in
call
fmuls
xchg
mov
sub
push
jl
or
das
adcl
xchg
scas
loop
inc
xchg
cmpsb
pop
xchg
inc
ficoml
sub
cmp
popa
pushf
adc
test
xchg
rcrb
and
das
ret
mov
push
xchg
cld
psubsb
cs
aaa
fstps
ljmp
ds
push
push
mov
lock
add
fsts
enter
cmp
push
xor
std
sbbl
test
fsubrl
mov
or
adc
push
push
xor
out
mov
pop
mov
mov
sbb
add
popa
sub
cmp
sarb
cmp
std
mov
xchg
push
sub
rol
inc
jbe
jle
push
fimull
pop
push
movsl
rcll
fsub
mov
imul
pop
call
cli
out
sarl
mov
xchg
push
repnz
shlb
sbb
int
xor
repnz
je
sub
lock
sub
into
pop
push
jl
xchg
mov
imul
imul
insl
ljmp
cmp
mov
mov
dec
inc
lds
negb
in
mov
sub
jge
push
pop
arpl
add
dec
js
inc
push
add
daa
jecxz
pop
adc
add
inc
leave
mov
jbe
loopne
mov
and
push
xchg
imulb
jp
push
push
mov
test
sub
cmpsb
lods
rcrb
jmp
ds
rclb
bound
cwtl
mov
aam
stc
out
out
fnstcw
ret
mov
xchg
movl
inc
sub
ljmp
sti
inc
ljmp
js
or
mov
push
out
and
sub
lds
cs
loope
mov
fsubrl
adc
into
xlat
hlt
or
nop
shlb
pop
dec
in
decl
xlat
sbbl
lret
divl
pop
out
shrb
sti
xchg
xchg
cwtl
arpl
mov
add
mov
mov
aaa
push
cmp
js
lds
jp
cwtl
frstor
pop
cmc
mov
xor
and
add
fprem1
adc
outsb
rcrl
idivl
hlt
cwtl
lcall
imul
clc
sahf
les
arpl
outsb
movsb
push
adc
and
mov
f2xm1
lods
mov
mov
jg
jne
movsb
xchg
in
fcmovnbe
dec
sbb
mov
mov
ds
xlat
inc
pop
push
ljmp
loope
cs
or
cmp
pop
jo
mov
mov
fcomps
sub
or
push
sbb
out
push
out
leave
adc
mov
je
dec
cltd
aas
scas
xor
adc
fnstsw
pop
outsl
xor
decl
ret
out
xchg
or
xchg
jle
loop
cmp
lahf
in
mov
aaa
cmp
mov
dec
lock
add
mov
stc
ret
or
pxor
xchg
xlat
jae
iret
mov
adc
adc
test
in
lea
mov
mov
mov
ds
xchg
or
jne
jmp
js
cmp
jge
rcrl
dec
fwait
xchg
xor
jno
xor
mov
in
xchg
adc
out
pop
ljmp
nop
xchg
arpl
roll
mov
add
sbb
add
adc
mov
jbe
leave
ret
dec
out
fildll
adc
push
jmp
pushf
xchg
pop
mov
and
dec
push
adc
sub
addr16
jge
gs
cltd
adc
jl
loopne
scas
push
sbb
xor
dec
xchg
jmp
mov
xchg
loop
imul
pusha
sub
fs
sti
shrb
adc
pushf
sub
in
aam
or
sahf
inc
xor
add
int3
inc
sub
les
divb
jb
push
pop
inc
stos
xchg
clc
inc
gs
adc
dec
cmpsb
and
icebp
jnp
mov
sbb
xor
unpcklps
mov
or
xchg
mov
shll
arpl
xorb
sahf
sub
mov
push
repz
movsb
sbb
mov
and
inc
movsl
stos
push
xorb
call
cltd
mov
mov
imul
int
sbb
js
sbb
push
jmp
mov
mov
mov
popa
jno
stos
ret
and
cltd
repnz
push
jno
scas
call
in
ret
mov
pop
aad
push
dec
mov
and
insl
das
mov
xchg
lods
loopne
imul
incl
add
inc
stos
mov
addl
popf
lds
addr16
mov
push
stos
jp
repz
gs
loope
hlt
jo
mov
dec
jl
inc
iret
data16
fcmovb
imul
cmp
pop
and
add
jb
movhps
pop
jno
dec
aaa
mov
leave
and
xchg
sub
and
int3
jne
or
sub
stc
cli
pop
jnp
inc
add
cmp
and
loop
mov
xor
mov
data16
jno
lahf
xor
int3
dec
fwait
mov
xchg
jmp
outsb
jecxz
jno
jo
scas
clc
adc
jmp
aaa
mov
pop
dec
sbb
andb
ljmp
jge
je
in
cmpl
out
inc
push
pushf
inc
sub
ds
cmpsl
sub
push
xchg
out
fmull
or
sbb
push
push
adc
mov
push
inc
or
stos
sbb
adc
leave
xlat
jne
mov
cmc
aam
mov
sub
pusha
inc
mov
and
xor
xor
pop
in
sub
jle
clc
fcom
mov
stos
inc
sub
inc
mov
sti
pop
mov
aaa
scas
test
push
adc
fwait
inc
imul
inc
sub
int3
push
lret
testl
dec
sbbb
or
add
and
fildl
rclb
jg
push
and
push
pop
shl
xchg
clc
stos
repnz
xchg
pop
pop
mov
cmp
mov
orb
xchg
and
popf
jbe
pop
sbb
fisubl
clc
movsl
in
dec
cwtl
dec
pop
neg
dec
mov
inc
jl
mov
es
dec
jle
pop
rorb
lds
inc
xor
mov
push
insl
xchg
sub
fucomip
aaa
in
test
mov
mov
ret
xor
mov
dec
lds
mov
and
or
cltd
outsb
in
mov
mov
into
test
daa
push
push
fdivrl
cli
pop
jae
mov
test
enter
shlb
jp
aaa
dec
lock
ror
cmp
sub
xor
push
sub
aam
dec
aad
add
ss
xor
sub
adc
cmp
rcll
loop
jae
in
pop
fcomi
into
loop
xor
mov
shll
ret
lret
push
shll
incl
clc
mov
cli
aam
aam
adc
or
pop
hlt
cmp
rcrl
mov
test
mov
sahf
dec
pushf
jbe
jne
nop
jg
inc
dec
xlat
popa
inc
xor
and
shll
cli
loopne
shl
push
or
xchg
jne
fwait
rorl
aaa
andl
pop
decb
pop
sub
loopne
mov
mov
xchg
push
push
insb
inc
shlb
push
mov
sti
bound
fsubrp
mov
pop
dec
aad
pop
xchg
xor
lahf
js
xchg
inc
mov
scas
gs
pop
or
fstpl
jp
sbb
insb
shlb
loopne
cmp
movsb
loopne
mov
popa
sub
test
ret
mov
add
jnp
leave
es
rcrl
xor
je
sarb
push
sahf
popa
mov
test
sub
out
sbb
adc
scas
jle
dec
mov
jbe
xchg
push
shl
or
sahf
cmp
jecxz
lods
rcll
xchg
sbb
or
push
mov
xchg
lods
div
push
leave
popf
adc
adc
lds
rolb
mov
push
sahf
mov
or
fisttpl
outsl
add
stos
out
cs
pop
add
stc
addr16
out
icebp
jl
adc
in
mov
jne
pop
push
jp
clc
pop
test
fstpl
call
out
cmpsl
int
aas
repnz
or
push
and
and
pop
loop
pop
les
and
adc
xor
adc
cmp
pop
in
pushf
sbb
in
mov
sbb
clc
ficomps
cmp
in
push
inc
cmpsb
test
inc
aaa
call
dec
loopne
dec
mov
sbb
jmp
cmp
sub
fidivrs
inc
xor
pop
pop
xchg
add
inc
ja
dec
icebp
test
sbb
and
ret
stc
mov
js
sub
lock
out
fwait
repz
cltd
shrl
and
fidivs
std
dec
and
aas
jp
fistpl
push
and
stos
inc
jmp
insl
mov
lret
out
push
shlb
lahf
fcoml
repz
mov
push
pop
push
pop
inc
lea
mov
ret
or
call
inc
ljmp
and
mov
xchg
cwtl
lahf
push
rol
hlt
jae
dec
insl
hlt
pop
jp
xchg
push
cmp
fwait
lock
push
jbe
dec
arpl
inc
in
nop
rcrl
xchg
ret
stc
jge
test
fcmovnbe
sbb
test
sbb
nop
mov
cmpsl
lds
ljmp
aaa
dec
in
inc
sbb
adc
and
cli
cvtpi2ps
fwait
and
ljmp
jp
insl
mov
cs
dec
out
jne
rol
dec
stos
iret
cmp
scas
inc
leave
in
dec
xchg
loop
mov
in
insb
pop
add
fsts
repnz
cmp
mov
sbb
lods
or
pop
cwtl
or
movsb
xchg
ficoml
movsb
cmpsb
fs
cmp
adc
dec
mov
xor
mov
rcrl
xor
add
xor
pop
int3
lcall
push
adc
rcl
jmp
aam
adc
adc
cmp
ljmp
stc
dec
push
dec
cmp
shrl
mov
push
or
daa
push
mov
and
push
push
shrb
sti
sahf
loope
xor
pop
add
scas
outsl
sbb
jae
movsl
stos
int3
cwtl
push
and
or
imul
xchg
xor
push
and
pop
mov
pop
and
std
popa
jno
pop
iret
pop
mov
lods
push
loop
pushf
andb
or
addr16
lahf
sbb
pop
aam
xchg
dec
mov
out
mov
jae
jp
pop
sub
mov
fisubs
sbb
inc
cld
pop
sti
jl
maskmovq
adc
rcll
mov
daa
add
fwait
adc
add
push
inc
push
test
lret
mov
lcall
xor
xlat
mov
add
sti
out
add
scas
lret
mov
push
pop
test
xchg
xor
out
pop
movsb
lahf
push
pop
mov
fcoml
outsl
fistpl
addr16
fidivrs
dec
sbb
xchg
sbb
xchg
imul
call
scas
mov
dec
sti
add
mov
ja
in
add
popa
shll
aam
movsl
cmp
out
mov
inc
or
mov
repz
mov
notb
clc
stos
jg
adc
add
inc
dec
jae
pop
in
mov
mov
pop
ss
inc
and
mov
mov
outsb
call
mov
aas
xor
mov
cltd
mov
mov
ror
xchg
loop
push
add
dec
pop
mov
push
add
lds
adc
das
adc
mov
sub
jl
sub
imul
mov
xchg
add
cmp
jns
fsts
sahf
inc
mov
mov
into
arpl
and
popa
jnp
pop
inc
and
mov
fs
or
or
and
and
sub
pop
sbb
push
lret
rorb
xchg
pushf
scas
fidivrl
cmp
mov
inc
sbb
outsl
or
nop
and
xchg
xor
mov
fsts
push
mov
mov
and
ffreep
or
into
in
lods
insl
xchg
fidivs
mov
in
cmp
aas
popa
mov
push
xor
adc
repz
inc
fwait
incl
and
inc
mov
jge
jb
lea
jae
jmp
mov
push
nop
cs
pop
dec
outsb
pop
jle
mov
mov
int
sub
cs
pop
dec
outsb
pop
jle
mov
mov
int
sub
cs
pop
dec
outsb
pop
jle
mov
mov
int
fdivr
sub
cmp
or
sbb
pop
dec
outsb
pop
mov
daa
scas
popf
leave
lcall
subl
or
cmp
data16
xlat
or
sbb
push
jp
dec
mov
mov
jge
or
ficompl
int
sbb
sub
jp
dec
lods
pop
mov
sbb
jge
or
fidivrl
bound
or
push
enter
add
sub
out
mov
repnz
icebp
cmp
or
push
mov
mov
add
call
inc
dec
inc
dec
or
pop
lock
push
mov
fisttpll
adc
call
dec
adc
lcall
and
rol
imul
jl
cmp
pop
jmp
add
aas
mov
jbe
rorb
js
sub
and
cmp
mov
in
xchg
popf
jp
dec
fcomps
push
lea
jo
xchg
inc
jl
cmp
or
pop
std
das
fidivrs
mov
push
pop
push
adc
dec
mov
fs
inc
adc
sbb
flds
pushf
sub
dec
lods
pop
inc
icebp
dec
in
pop
mov
jge
or
jl
in
int
fnstsw
std
and
pop
sti
ret
dec
enter
loop
test
imul
mov
adc
and
aas
fsub
and
xor
and
lahf
pop
aas
jp
adc
push
scas
adc
adc
jmp
jmp
leave
add
lret
cmp
or
sbb
push
jp
dec
lods
pop
mov
mov
jge
or
fidivrl
or
sbb
push
jp
dec
lods
pop
mov
dec
add
and
fimuls
xchg
adc
sbb
mov
inc
shrl
or
sub
stos
mov
xor
push
dec
lock
mov
sbb
imul
sub
mov
jno
fxch
xor
jecxz
out
mov
loopne
mov
gs
aam
cwtl
mov
popf
loop
pop
cwtl
rorb
sbb
mov
inc
and
lock
xor
cld
add
fdivrs
mov
xchg
push
jb
mov
pushf
ds
xchg
inc
dec
and
jb
adc
and
cmp
mov
sbb
dec
add
and
lahf
psubsw
lock
pop
or
lret
mov
pop
pop
mov
sub
jecxz
adc
and
jnp
xchg
push
and
cmp
imul
fcmovb
cs
inc
push
jecxz
loope
fdivrl
insb
jp
nop
stos
fwait
scas
pop
jle
sub
and
int3
outsl
push
dec
mov
scas
mov
xchg
xor
loopne
xchg
mov
jns
pushf
mov
shl
jnp
push
jp
pushw
daa
xchg
sub
or
adc
sbb
jno
push
sahf
xchg
insb
test
sti
stos
mov
mov
hlt
jae
inc
sub
push
push
arpl
cmpsb
push
fwait
ss
and
or
sahf
mov
cmp
adc
shlb
test
push
pop
cmp
xchg
jo
sbb
add
xlat
sbb
add
fistpl
fwait
mov
cmp
xchg
jp
lock
je
imul
jne
scas
adc
shlb
mov
push
in
add
addr16
fadd
decb
mov
test
ja
xchg
imul
and
pop
mov
push
mov
stos
sahf
add
jns
mov
inc
mov
lcall
daa
jmp
dec
orl
add
bound
sub
or
dec
dec
mov
mov
out
lcall
arpl
add
sub
push
xor
cmpsl
into
fistpll
aas
clc
fwait
and
xchg
mov
push
xchg
imul
js
std
das
pop
push
fstpt
add
xor
push
es
out
ja
ret
dec
jp
lods
push
push
xchg
dec
sbb
pop
mov
imul
xor
mov
pop
push
repnz
mov
lock
hlt
imul
icebp
push
movsl
lret
out
mov
jp
in
gs
repz
pop
in
jmp
das
scas
sub
je
testb
adc
popf
mov
pop
popa
out
test
je
cmp
rclb
in
jp
call
mov
xor
sbb
push
in
testl
fs
divb
sub
inc
adc
in
arpl
leave
mov
cmp
addl
xchg
mov
call
sbb
mov
sub
jp
mov
addr16
out
cmp
and
dec
mov
lock
dec
lret
jmp
fucomi
mov
jne
jb
loope
gs
popa
cs
add
ja
in
or
mov
notb
sbb
cwtl
or
outsl
add
mov
and
inc
mov
push
cmpsb
mov
push
push
mov
sbbl
push
pop
fwait
adc
inc
inc
pop
pop
push
push
rorb
mov
loope
or
xor
sti
fwait
mov
jmp
xchg
adc
cwtl
or
stc
sub
sti
jne
mov
jg
insl
push
mov
outsl
pop
cmp
out
shrb
cmp
es
les
shrl
push
adc
pop
push
mov
les
rcrl
sahf
jg
dec
mov
inc
add
and
mov
xchg
mov
xor
ss
rolb
jmp
fisttps
push
sub
dec
int3
xor
sub
mov
sub
mov
jnp
das
mov
inc
test
test
push
fidivrl
aas
scas
or
imul
mov
mov
test
fmulp
repnz
mov
mov
mov
out
adc
push
cwtl
aaa
push
push
cmp
or
stc
jg
sbb
movsl
push
and
push
out
jl
mov
lret
ljmp
mov
ret
sub
mov
adc
lea
cmp
inc
xor
es
sbb
cmp
xor
popa
in
mov
inc
jl
inc
ficomps
sub
xor
lahf
adc
or
outsb
lods
adc
cmp
and
or
filds
shl
lods
in
xor
lods
xor
mov
mov
mov
adc
stos
jmp
pop
inc
in
and
adc
pop
fnstenv
leave
int
frstor
lret
or
out
jbe
push
mov
mov
mov
xor
jp
arpl
imul
aas
fwait
jbe
mov
push
shrd
sbb
xor
orb
jl
adc
repz
and
sbb
out
xchg
sub
js
mov
les
es
lds
out
lret
test
jnp
mov
pop
sub
in
mov
cmp
lahf
rol
mov
adc
inc
les
add
and
and
dec
ss
add
mov
fimuls
cmp
ficompl
stos
add
pop
int
jle
and
test
test
push
sti
xchg
in
push
jp
dec
movsl
in
lret
sub
adc
lret
sub
cmp
cs
cld
incb
sub
jo
insl
mov
add
push
xchg
or
js
pop
mov
in
adc
imul
push
icebp
sbb
inc
push
aaa
jns
mov
mov
test
stos
dec
insl
arpl
mov
pop
lock
pop
aam
daa
add
int3
popa
stos
jb
test
iret
leave
enter
xor
push
or
lock
in
and
pop
adc
xchg
in
mov
push
xchg
inc
movsl
push
sub
add
xchg
stos
daa
pop
cmp
xchg
xchg
xor
mov
pop
xor
push
xor
inc
or
push
mov
pop
insl
xor
mov
sti
pop
daa
mov
sub
insb
mov
aas
icebp
cmp
in
sub
mov
dec
ficoml
inc
xchg
jnp
add
add
add
mov
mov
cmpsb
addr16
xor
mov
push
outsl
hlt
jle
aad
adc
test
or
fisubrs
in
push
inc
aaa
daa
pop
pmaxub
xchg
test
mov
test
mov
fldenv
xor
sarl
adc
jns
mov
add
jecxz
jnp
loope
pushf
cmpsb
cltd
mov
cmp
or
and
jbe
cmp
loopne
mov
jl
mov
lret
inc
out
cmp
cmp
fildll
xchg
push
push
ret
subb
push
leave
adc
imul
ljmp
mov
and
pushf
jl
mov
loope
jo
jl
pop
pop
adc
push
xlat
sub
sub
jl
insl
mov
lods
inc
or
cmp
add
xchg
outsl
sahf
std
add
lahf
jle
cwtl
xchg
dec
cwtl
sub
push
jle
push
inc
test
pop
add
mov
inc
enter
test
add
jo
push
outsl
imul
out
pop
or
gs
lods
lock
cmp
and
fdivrl
pop
nop
test
jnp
xchg
mov
lods
movsb
lods
xchg
clc
and
sub
rolb
adc
int3
scas
outsb
vcmpsd
mov
inc
loopne
nop
cwtl
mov
fidivrs
cwtl
outsb
test
rcrb
jmp
jae
and
dec
stos
int
pop
ficoms
cmc
ret
mov
xchg
cmp
shll
xchg
dec
js
sub
and
jne
cmp
sub
loop
shll
fisubrl
sbb
and
pop
aas
adc
add
insl
cmpsb
pop
xchg
inc
sbbb
aaa
fdiv
std
cmc
xchg
into
mov
xchg
adc
xchg
sbb
xor
jle
aam
addr16
stc
pop
lret
out
inc
sarl
in
cmpsl
test
call
xor
and
xor
sbb
cs
addr16
mov
jb
xchg
daa
mov
inc
jmp
jle,pn
cli
xchg
movzbl
into
xor
inc
outsb
rcrl
jecxz
adc
and
imul
andl
inc
les
sbb
push
je
aaa
lea
jnp
xlat
adc
mov
cltd
mov
outsl
fists
mov
push
add
mov
in
ljmp
loopne
push
dec
shrl
mov
dec
sbb
mov
xor
fldenv
pop
and
xchg
inc
or
sub
arpl
aad
cld
lock
push
dec
loope
je
js
xor
cmp
adc
and
lcall
into
xchg
iret
adc
rol
out
adc
movsl
add
std
nop
into
push
cmc
cs
mov
aam
inc
or
xchg
fstps
fsts
call
into
jp
sti
lcall
dec
push
add
test
fisttpl
fsubp
pushf
in
add
lret
lods
ficompl
cld
test
sub
imul
adc
sbb
std
xchg
popa
jns
mov
lahf
loop
mov
insl
jne
adc
sbb
lds
cmp
inc
packsswb
mov
or
mul
lcall
mov
pop
mov
lea
sub
adc
jg
out
aad
cltd
ffree
mov
pop
sub
ret
fiaddl
sub
xchg
pop
icebp
test
add
adc
imul
test
movsb
in
rolb
jmp
mov
dec
push
and
jne
jbe
mov
sahf
ja
inc
out
xor
and
inc
add
mov
mov
push
mov
loope
mov
mov
sub
sti
sti
or
inc
pop
out
mov
or
sbbl
sahf
cs
mov
ret
les
in
adc
iret
push
dec
pop
sahf
mov
fmul
cmp
xor
bound
cs
or
adc
dec
and
cld
dec
mov
lret
lahf
movsl
adc
or
idivl
adc
mov
mov
xchg
popf
ret
adc
mov
dec
dec
jns
imul
inc
add
pop
mov
fdivp
xchg
mov
pop
popf
rcrb
cwtl
outsl
push
and
outsb
loopne
lgdtl
sbbb
pushf
sub
add
mov
mov
mov
jp
sbb
test
rclb
push
nop
mov
mov
add
xchg
lock
into
addr16
inc
or
dec
pop
cmpsb
xor
addb
call
fisttpll
int3
lods
xor
xchg
add
sarb
loope
int3
inc
add
jmp
mov
fidivrs
mov
sysenter
fs
mov
cwtl
xlat
stc
ret
test
dec
xor
xchg
in
pop
inc
mov
mov
fstpt
add
jp
pop
arpl
clc
lea
incl
insb
jo
ret
dec
adc
cmc
aaa
adc
vxorpd
push
or
pop
or
adc
test
fistpll
int3
out
jge
mov
push
aad
mov
mov
sahf
roll
cltd
sbb
add
cmp
pop
int
mov
test
cmp
mov
stos
mov
inc
ds
cltd
push
cmpsb
mov
xor
test
jmp
call
sub
cmp
mov
adc
fildl
inc
mov
mov
xor
fistpl
sbbb
jle
xlat
mov
js
int
dec
pop
test
cmpsl
xchg
inc
push
fwait
sub
int3
stc
adc
sub
pop
ficomps
popa
pop
pushf
cld
fucomp
xorl
add
add
es
mov
enter
xchg
cmpsl
repnz
and
lea
dec
xlat
pop
scas
adc
mov
and
lds
cmp
lock
push
xor
movsb
dec
inc
inc
pop
fwait
push
es
pop
pop
cmpsl
cmp
loope
xchg
sub
mov
push
push
and
flds
jmp
adc
or
out
cli
add
push
inc
push
test
das
xchg
fistpl
lea
sub
arpl
movsbl
loope
into
xchg
aaa
and
jbe
xchg
repz
and
add
fwait
mov
bound
pop
mov
hlt
and
leave
adc
das
popf
andps
imul
je
add
dec
or
aad
repz
outsb
flds
clc
leave
and
add
rorb
inc
aas
cltd
divb
xchg
pop
das
dec
and
lret
sbb
add
or
jb
data16
popa
out
xchg
inc
pop
add
adc
mov
cmpsl
loopne
mov
push
mov
mov
jecxz
lods
fisttpl
aam
popf
jne
jno
ss
lret
js
cmpb
into
ljmp
push
pop
lods
into
dec
loop
imul
cld
sbb
rcrl
fiadds
mov
int
mov
pop
inc
sub
mov
add
jb
adc
and
inc
or
je
and
sub
mov
push
push
dec
sub
jp
int3
fisubs
cmc
and
inc
mov
mov
andl
scas
fwait
adc
xchg
gs
scas
and
ljmp
dec
sub
leave
hlt
adc
inc
js
mov
and
data16
lret
lock
mov
fsubr
mov
dec
push
push
push
mov
ror
cmp
sub
pop
pop
pop
mov
pop
aas
lret
fists
movl
stc
jp
outsl
loope
inc
mov
enter
fisubrs
scas
sti
cs
cmp
push
sub
mov
shlb
xor
mov
push
add
loop
xor
dec
idivb
lock
pop
mov
mov
out
je
in
and
leave
adc
pop
int
dec
jbe
xchg
mov
cmp
addb
aam
daa
movsl
inc
and
stos
mov
mov
xchg
push
inc
jae
stos
mov
mov
push
pop
push
pop
addr16
xchg
add
bswap
rcll
ds
xchg
popf
push
call
adc
lods
popa
movb
leave
mov
in
cmp
mov
mov
xor
jp
pop
and
rorb
leave
or
add
xor
push
subb
jl
sub
push
push
jmp
mov
shlb
dec
mov
lds
mov
xor
mov
roll
mov
push
xor
bsf
scas
jmp
adc
mov
or
jnp
xchg
sub
mov
arpl
pop
push
imul
or
pop
sbb
in
push
call
and
fs
mov
mov
cmp
adc
out
adc
loopne
push
xchg
push
aaa
push
xor
cmp
mov
pop
sbb
popa
daa
jae
bound
mov
roll
jg
out
inc
push
lahf
and
adc
movsl
inc
ds
mov
cmp
dec
mov
popa
shlb
sub
xchg
nop
add
sahf
and
adc
dec
jae
push
add
lock
lcall
cmc
je
enter
clc
sbb
xchg
cmp
push
out
lret
lds
lahf
dec
inc
ljmp
adc
adc
aam
mov
jmp
pop
std
loopne
push
push
pop
imul
std
adcl
or
outsl
es
out
push
xor
and
xchg
jno
aaa
dec
cmp
xchg
shrl
in
hlt
push
sbb
sti
fdivrs
and
mov
dec
and
out
mov
xor
mov
pusha
js
fistpll
stos
add
adc
pop
xor
mov
sub
fwait
les
xchg
in
fadds
icebp
pop
insl
insl
fstp
loope
addl
pop
ret
les
jo
dec
dec
insb
cmp
int3
add
and
mov
cmp
cs
add
pop
daa
jge
insb
inc
sub
xor
dec
pushf
lds
xchg
add
sub
and
shr
je
mov
into
adc
ret
lcall
sub
std
pop
ljmp
inc
mov
push
mov
fs
int3
inc
popf
fs
mov
testb
jb
pushf
jnp
aam
shl
jnp
mov
stos
insl
mov
js
bound
dec
add
cmp
mov
xor
mov
ja
lret
mov
mov
jp
cmp
sub
ja
mov
je
xor
adc
nop
fwait
push
cmp
cmp
jmp
jg
inc
cmp
shr
pop
std
test
lods
pop
in
repnz
sahf
mov
push
iret
pusha
prefetch
jo
shl
xor
mov
jecxz
pop
cmpsl
cmp
xor
mov
cwtl
jo
test
inc
icebp
outsl
sbb
xchg
pop
inc
movsb
in
xchg
dec
cmp
inc
and
ficomps
ja
sub
cwtl
push
jnp
push
imul
sti
xchg
ficompl
cld
pop
pop
jge
scas
add
and
lcall
mov
int3
pop
or
rcrl
loope
fldl
push
es
mov
mov
fs
add
jae
fdiv
bound
hlt
mov
add
das
and
add
jecxz
testl
cld
dec
inc
shlb
jmp
fwait
dec
shrl
sub
push
pop
cmpsl
aad
dec
jle
sbb
int3
pop
sbb
adc
inc
test
jb
push
adc
push
adc
push
into
pop
mov
cmpl
mov
xor
inc
lods
adc
idivl
stos
push
in
mov
sarb
or
pushaw
xchg
cmpsl
call
fimuls
jl
add
inc
icebp
dec
dec
call
inc
jmp
fxch
jp
dec
fstl
pop
add
push
sti
js
lcall
loopne
sbb
dec
mov
in
rcrl
addr16
mov
sub
pop
lret
jmp
pop
or
dec
sbb
cmpsb
test
mov
aam
loop
mov
mov
lahf
mov
mov
pop
test
xor
mov
push
out
leave
hlt
mov
scas
std
pop
lcall
idivl
dec
mov
mov
out
xor
inc
int3
dec
dec
fisttpll
dec
and
ret
out
xchg
leave
jmp
jp
xchg
sbb
xchg
std
xor
adc
push
sbb
sub
jne
ja
in
cmpsb
sbb
dec
and
or
lea
out
test
or
fnsave
jnp
mov
rcrl
pop
clc
pop
cmpsl
adc
xor
jae
outsl
and
dec
dec
movsl
sahf
loope
dec
imul
jmp
je
cmp
fs
ja
movsb
icebp
jmp
push
inc
int3
scas
pusha
stos
je
outsl
mov
cmc
lret
pop
add
rcrl
mov
mov
jo
add
xor
mov
scas
inc
add
cmp
push
or
movsb
add
inc
addl
xorl
inc
roll
dec
ret
push
xor
sub
jmp
sti
test
mov
pop
cwtl
shrl
invd
and
and
cmp
mov
push
dec
xchg
daa
mov
test
xor
xchg
jmp
mov
rcll
stos
add
mov
cmp
sub
mov
nop
jl
jne
cld
arpl
sub
fsts
mov
in
and
sbb
rcr
push
mov
ss
adc
push
adc
das
sar
dec
cwtl
push
movsl
int3
daa
cmp
pusha
cltd
js
jmp
js
sub
inc
ds
dec
cmpb
push
popa
hlt
mov
imul
scas
sbb
cwtl
cmp
lods
subl
mov
out
ljmp
das
cmp
cli
inc
adc
sbb
loope
push
mov
push
add
mov
fcoml
adc
jmp
add
fs
push
cmpsb
xor
mov
xchg
and
sub
repz
pop
or
bound
and
int3
mov
sbb
xchg
loopne
ja
int
jae
pop
jno
push
pop
ja
mov
jnp
mov
das
shlb
sets
fucomi
inc
imul
inc
inc
jl
sub
sub
pop
mov
incl
lcall
sub
cmp
or
sbb
push
jp
dec
lods
pop
mov
mov
jge
or
fidivrl
or
sbb
push
jp
dec
lods
pop
mov
ljmp
sbb
sub
cmp
cli
in
sbb
push
push
dec
lods
mov
mov
insl
mov
sbb
sub
lds
in
sbb
mov
movsl
inc
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
imul
push
push
dec
cmp
mul
mov
xchg
xchg
shl
mov
xchg
bound
jb
inc
push
push
data16
inc
add
mul
mov
test
xchg
shl
rcll
cld
jnp
jb
pop
rorb
cmp
sub
scas
or
mov
rol
jecxz
fdivl
bound
sbb
popa
fldln2
int
jmp
pushf
push
rcll
sbb
mov
aas
popa
xor
lret
ss
rcrb
jns
jge
arpl
addr16
sbbb
popf
es
push
sbb
pop
xor
jbe
out
dec
xor
push
mov
jl
xchg
arpl
dec
jb
inc
inc
bound
mov
inc
pop
push
in
mov
in
xchg
and
imul
dec
rorl
sub
mov
mov
cmc
into
add
adc
out
jns
xchg
rclb
andb
stc
inc
mov
jmp
mov
ret
cmp
out
xlat
xchg
ret
test
jge
adcb
jp
data16
xor
out
or
ljmp
call
notb
jb
inc
js
or
push
outsb
aaa
jg
mov
mov
xchg
idivl
mov
xchg
jmp
sbb
push
sqrtps
add
and
fwait
notl
xchg
rclb
notl
pop
jbe
push
daa
and
xor
push
adc
ret
out
divb
bound
jb
inc
push
push
data16
inc
add
cmpsb
loop
repnz
xchg
shl
mov
xchg
vpcompressw
sub
push
add
out
pop
or
push
mov
mov
lods
icebp
mov
adc
sbbb
pushf
push
sahf
dec
dec
cltd
or
sbb
adc
mov
fsubl
xchg
loope
hlt
sub
lods
xchg
inc
movsl
cmpsl
loopne
mov
adc
out
mov
dec
jmp
xchg
pop
xchg
jb
mov
mov
and
fdivrs
add
loope
cmpb
cmp
fidivrs
sub
xor
rorb
fsubr
outsl
mov
rcrl
xorb
cli
test
rcr
xor
cmp
orl
fildl
sbb
das
add
push
shl
jns
je
push
jmp
cmp
test
push
outsl
sub
dec
inc
cmp
dec
xor
jb,pt
dec
mov
addb
fisubl
and
sub
cmc
sahf
scas
fcomps
fsubrl
xchg
dec
popa
loop
call
lahf
icebp
in
dec
aad
lds
sbb
push
jecxz
sub
cli
into
dec
nop
popf
shll
fwait
data16
ds
pop
xchg
pop
add
test
push
push
jb
rolb
notb
mov
nop
movsb
and
scas
sti
negb
in
mov
test
cmp
cmp
ret
push
loop
mov
sub
adc
mov
mov
cs
out
or
cmp
mov
xchg
stos
cli
leave
jg
pop
lcall
xor
sub
add
inc
sarl
sbb
inc
js
sahf
mov
sbb
mov
and
lret
and
sbb
push
pop
lods
mov
in
mov
jp
and
jne
popa
adc
cmp
shl
bound
pop
sbb
pop
mov
pusha
xor
push
call
xor
push
repz
push
pop
into
add
fstps
mov
sbb
adc
std
test
js
cwtl
sub
mov
movsl
out
inc
jmp
sub
test
call
dec
xor
out
mov
stc
xchg
adc
cli
aaa
xchg
shrl
mulb
fcmovbe
mov
cmp
sbb
fs
mov
cmp
addl
adc
lcall
pop
pusha
test
loope
add
pop
stos
fisubrs
push
mov
mov
mov
popf
xor
jo
clc
in
xor
cmpsb
dec
sub
pop
inc
push
push
jle
push
cmp
xor
gs
push
cmpsb
js
dec
sub
adc
push
add
lods
loope
arpl
fldcw
aam
cmpsb
sub
mov
dec
aas
lahf
lock
je
push
aad
cmp
jae
sub
or
xor
mov
insb
mov
xchg
push
sbb
in
into
adc
xlat
insl
pop
ljmp
cmpb
cwtl
fwait
repz
mov
dec
adc
cmpsb
mov
cmc
in
test
pop
mul
test
cmp
mov
push
testl
sub
xchg
int
cmp
push
fwait
daa
ljmp
mov
push
ret
inc
jg
fcompl
or
mov
cmpsl
cmc
mov
xor
sub
and
outsl
mov
mov
pop
insb
call
repz
aas
mov
fidivl
xor
cmp
pop
pop
inc
xlat
bound
mov
push
fstps
mov
mov
ljmp
push
jmp
lds
and
les
add
call
push
ret
stos
pop
inc
mov
outsl
in
cmp
je
cli
or
lahf
xor
push
mov
mov
sub
mov
addr16
pop
shlb
jmp
fists
aas
mov
les
iret
les
movhps
adc
mov
aaa
xchg
mov
sbb
xor
movsb
mov
imul
jo
hlt
fsubs
add
and
in
adc
mov
out
sbb
or
cmp
std
loopne
pop
fsubr
ret
ret
push
repz
ds
push
fimull
dec
shrl
fdiv
arpl
mov
sbb
sbb
cltd
cmpsl
shll
mov
mov
fld
inc
or
mov
pop
sub
xchg
ret
mov
mov
dec
xchg
outsb
pop
std
or
loop
adc
xor
in
jecxz
mov
dec
mov
ss
jbe
popa
scas
icebp
and
fnstsw
add
out
mov
pop
out
jle
jno
pop
push
pop
or
stc
pop
jg
out
aam
hlt
ljmp
loop
pushf
jmp
icebp
jns
shll
mov
pop
fs
xchg
mov
push
or
cmp
inc
mov
jns
fwait
jge
dec
sbb
stos
push
inc
pusha
xchg
popf
filds
xchg
or
xor
cmp
pop
int
inc
stos
test
sbb
inc
cmp
fstl
sub
push
push
cmpsb
sbb
sub
aam
add
imul
int
add
mov
std
dec
fs
dec
add
inc
lods
inc
jmp
xchg
cmp
pop
mov
les
pop
mov
dec
icebp
mov
mov
fsubrs
inc
loopne
ja
or
stos
lock
add
out
inc
mov
dec
cmp
stos
cltd
loope
gs
out
sbb
popf
out
sub
cli
ja
lcall
and
out
jnp
xor
sar
iret
inc
mov
dec
jns
xchg
mov
pop
loope
cs
jne
movsl
cmpsb
fnsave
mov
aaa
out
adc
adc
xor
gs
and
adc
cld
fistpll
jl
adcb
int3
enter
mov
scas
add
xchg
sub
add
addr16
dec
fwait
mov
mov
pop
inc
fwait
jnp
jns
out
adc
test
sbb
pop
mov
pusha
or
add
and
mov
xchg
push
dec
xor
add
mov
xchg
popa
mov
mov
mov
out
mov
push
scas
adc
xchg
mov
cmp
jmp
lds
shll
or
push
and
add
dec
push
pop
fcomi
negb
test
xor
sbb
loopne
std
das
cwtl
sti
cmpsb
push
lret
cs
xchg
and
cmp
sbb
incl
adc
pusha
aad
addr16
mov
mov
into
aad
mov
xor
imul
xor
push
out
lcall
in
push
xor
fistpll
inc
in
sbb
jo
icebp
arpl
push
sar
mov
out
lret
xor
clc
or
icebp
mov
jnp
sbb
inc
push
cs
femms
testb
xor
inc
loopne
or
and
ljmp
and
scas
ljmp
mov
dec
adc
pop
lods
add
clc
xlat
and
dec
or
fwait
cltd
dec
mov
inc
mov
mov
push
dec
aam
outsl
jo
lahf
outsb
push
test
inc
xchg
push
sbb
imul
rorb
loope
mov
addr16
mov
mov
call
xchg
fmuls
jl
into
jge
adc
or
shl
scas
jne
and
cmp
stc
leave
adc
lds
es
lahf
iret
jp
xlat
stos
mov
mov
inc
out
jns
test
mov
out
repnz
lret
push
clc
aad
sbb
jb
xchg
inc
sub
test
cmp
sub
sbb
rclb
in
push
xor
lret
movsb
roll
pop
push
ret
dec
cld
jae
aaa
push
cmp
cmc
adc
jmp
pop
dec
pop
fildl
lods
ret
es
add
push
push
lcall
or
arpl
and
or
xchg
das
mov
cmp
push
jp
inc
sbb
xchg
xchg
shlb
fsubrl
ss
inc
pslld
jb
fistpll
insb
mov
pop
xor
jle
leave
mov
rcrb
or
pop
pusha
pop
les
bound
loop
cs
out
in
out
enter
into
jns
aas
cltd
pop
cwtl
pop
xlat
pop
data16
mov
push
sti
sbb
mov
imul
ljmp
xchg
sub
mov
cmc
insl
xchg
fs
outsl
dec
in
cmp
loop
data16
les
xchg
mov
aam
lock
xor
movsb
push
jge
aas
dec
jnp
and
fwait
xchg
or
jbe
dec
out
call
cli
loop
add
in
sub
cmp
loope
push
jb
cmpsl
adc
subl
test
inc
jo
or
out
jl
dec
lahf
pusha
dec
xor
jnp
jmp
pop
inc
sbb
fldcw
aas
cld
mov
xchg
movsl
enter
mov
push
in
pop
aam
popf
mov
inc
jae
mov
lods
mov
daa
js
cmp
xchg
pop
pop
dec
fcomps
xchg
into
xor
pop
dec
push
ret
outsl
mov
jg
cmpsb
mov
sub
push
cwtl
pop
mov
in
insb
mov
xor
sub
fmuls
mov
jbe
lock
xlat
adc
test
lret
js
push
add
sti
mov
data16
out
int
xchg
mov
mov
dec
cmpb
pop
sbb
gs
push
jecxz
dec
pusha
lock
movl
inc
lret
idivb
das
repz
push
cltd
cmp
push
xchg
push
xor
div
sub
out
push
stc
mov
cmpsl
inc
mov
dec
andl
cmpsl
ljmp
jno
sbb
icebp
aaa
jbe
repnz
inc
push
fildl
stc
fdivrs
popf
popf
and
imulb
int3
ds
pop
jmp
js
sub
sahf
repnz
jb
call
mov
xlat
in
sti
mov
sub
test
jbe
jb
mov
cmp
adc
stos
mov
mov
pop
push
cld
mov
adc
or
enter
mov
test
mov
out
lcall
adc
imul
push
sub
lcall
ss
dec
ja
test
fstl
push
inc
lock
lret
mov
arpl
xor
repnz
testl
subb
in
xchg
cmpsl
mov
and
lcall
xorb
call
mov
mov
cmp
xor
call
xchg
jle
fistps
aad
push
mov
xchg
push
mov
dec
or
insb
cs
loop
push
sub
xchg
inc
sub
inc
mov
cmpsb
inc
fs
mov
pop
cmp
popa
inc
pop
push
ret
test
mov
mov
sub
outsb
and
xor
int3
mov
in
mov
xchg
mov
mov
jmp
les
pop
jl
push
jo
fmuls
xor
mov
fisttpll
lea
dec
xlat
jns
jnp
mov
mov
rclb
add
stos
rcll
mov
aam
mov
push
iret
add
mov
add
lea
call
xor
push
add
js
test
data16
push
cmpsl
cmp
sahf
sub
adc
shlb
rorb
pop
jmp
pusha
outsb
mov
out
int
int
mov
jae
adc
hlt
aad
data16
shll
xchg
sbbl
push
mov
flds
jg
lds
or
sub
add
mov
adc
int
test
inc
mov
ja,pt
jl
loopne
xchg
push
xlat
outsb
and
xchg
gs
inc
cli
fwait
lret
fistl
out
sub
xchg
and
sbb
mov
pop
les
xchg
lcall
clc
xor
nop
jp
jno
xor
and
mov
fcmovb
cmpsb
mov
mov
nop
pop
sub
mov
in
cmp
in
dec
rclb
jbe
insl
lahf
fmuls
and
pop
rolb
adc
iret
iret
add
mov
push
sub
lahf
jns
mov
ret
sbb
loope
in
xor
mov
ss
pop
add
sub
jecxz
cli
and
xlat
repz
movsl
ja
imul
out
ret
adc
mov
xchg
jge
mov
aam
pop
push
fsubrl
pop
adc
push
dec
xchg
sbb
fpatan
mov
cld
jbe
cli
repz
imul
xlat
and
xchg
add
cmp
adc
iret
daa
pop
sub
ret
fmul
test
push
and
adc
xor
out
push
dec
cmpsb
xor
cs
xor
inc
sub
into
roll
fsubp
adc
outsb
rcr
jp
cmp
mov
iret
mov
mov
insl
sbb
lcall
jns
mov
lahf
pop
les
push
inc
push
insl
cmp
aad
out
dec
cld
lret
in
pop
and
mov
popf
xchg
rcl
ret
jbe
jecxz
shl
sbb
xchg
jl
dec
mov
and
xchg
and
rcll
xor
adc
sub
rcrl
fidivrs
xor
loope
jmp
add
repz
adc
aad
addl
bound
pop
dec
and
fcoms
fwait
lods
push
clc
dec
cmc
shl
mov
orl
dec
mov
pop
push
das
mov
out
movsl
push
fstpl
cmpsb
incb
or
or
sub
pop
faddl
insl
cmp
scas
fwait
mov
movsb
outsb
in
and
xor
insl
inc
sub
sbb
mov
mov
test
lock
mov
xchg
cmp
dec
aam
shrl
into
ds
mov
int
daa
repnz
cmp
dec
pop
pusha
loopne
ss
fadd
stos
pop
test
jl
cmovo
out
or
and
dec
dec
cmpsl
fwait
jno
mov
jmp
add
fdivl
mov
popa
call
jmp
pop
decl
adc
jl
sarb
fnstcw
cmp
and
sub
iret
xchg
je
push
ret
mov
cmp
sub
hlt
dec
jg
movsl
xchg
sbb
xchg
imul
ret
add
mull
imulb
and
cmp
sub
mov
ljmp
jo
and
push
out
and
es
xor
jecxz
adc
andb
cmpsb
sub
cld
das
push
dec
mov
lds
inc
dec
cmp
push
push
pop
in
mov
imul
pop
sti
in
xor
stos
mov
cmp
xorb
adc
pop
out
pop
dec
mov
fistpl
xchg
pop
arpl
insb
call
call
sti
lea
sbb
lahf
jl
mov
jae
pop
jg
xchg
ret
cmpb
in
dec
pushf
inc
fadd
iret
ljmp
push
mov
push
outsl
dec
sub
and
loope
insb
mov
ret
insl
aaa
insl
cmpsb
jg
das
movsb
test
lock
jmp
dec
and
pushl
test
data16
aaa
out
out
adc
stos
and
les
dec
mov
mov
xorl
adc
sbb
fldt
jecxz
lods
aaa
xchg
les
ret
aad
or
sub
insl
add
fwait
out
inc
pop
lcall
sub
cmp
and
adc
push
mov
insb
mov
mov
or
cmp
repnz
pop
mov
jnp
mov
sub
xor
insb
test
je
jne
les
fnstenv
xor
mov
or
jecxz
mov
lret
mov
inc
ja
xchg
mov
adc
and
xchg
xchg
jge
push
fbld
pushf
push
arpl
movsb
jnp
adc
les
push
fildll
xchg
int3
lea
out
mov
dec
pop
pop
decb
xchg
add
ret
sbb
mov
repnz
orb
repnz
jmp
movsb
mov
push
scas
mov
jl
loopne
sti
jo
cmp
rclb
sub
cltd
scas
cwtl
jbe
into
loop
mov
fs
enter
decb
mov
adc
fistps
mov
sub
jbe
cmc
imul
and
loope
cli
sub
pop
dec
mov
add
fstps
or
mov
mov
dec
adc
cmp
lods
jmp
mov
test
mov
movsb
push
bound
xchg
push
mov
push
add
push
pop
push
mov
rcll
mov
add
xor
and
pushf
xor
xor
fisttps
mov
std
and
push
jno
int3
pop
xor
pop
jns
mov
mov
imul
movsb
or
and
xchg
call
xchg
adc
mov
repz
loope
push
sub
cltd
mov
jp
adc
adc
jge
lds
inc
pop
test
sub
lret
or
sbb
inc
mov
iret
push
push
js
ss
push
adc
mov
insl
pop
out
icebp
rclb
aam
fs
in
testl
jle
mov
scas
mov
icebp
shll
jp
dec
out
xchg
push
cmp
mov
roll
sahf
cmovp
cltd
pop
rcr
fnstenv
mov
mov
fsub
cs
nop
mov
pushf
pop
cwtl
pop
xchg
xchg
push
adc
xor
jne
cmp
xor
mov
adc
xchg
sub
add
nop
shll
add
inc
mov
gs
fistpll
ss
xor
mov
pop
stos
sub
mov
inc
test
rclb
mov
dec
lods
cli
incb
mov
cmp
es
dec
jp
xor
xchg
push
mov
mov
xchg
and
jo
cld
pop
popf
pushf
mov
cmp
iret
scas
lds
mov
aad
movsl
pop
aas
xor
push
cwtl
cmpsl
rcl
sbb
or
sbb
bound
or
ficoml
xchg
in
enter
test
xchg
jnp
add
test
jle
in
dec
ss
mov
ficoml
adc
or
lea
ret
dec
dec
xor
pop
dec
repnz
cs
insl
pop
cmp
into
mov
out
repz
sub
pop
xchg
mov
rcrb
and
icebp
fs
add
dec
loope
out
mov
bound
xchg
arpl
jno
sbb
mov
cmp
fcompl
push
mov
lret
addr16
mov
xlat
test
mov
add
lock
xchg
bound
stos
xor
es
enter
loop
pop
repz
addl
mov
sbb
sub
aam
and
or
jb
xchg
sub
insb
js
orb
xor
jno
clc
es
leave
nop
cmp
mov
subl
sub
imul
mov
and
xchg
push
loope
push
sub
das
and
push
stos
movsl
inc
aas
jns
cli
cmc
shl
cmc
add
repz
mov
xchg
push
inc
into
fisubl
pop
mov
js
mov
in
mov
adc
negl
xor
inc
add
jb
mov
and
add
rorb
sbb
outsl
jl
js
sub
push
jp
sbb
xlat
popa
aaa
clc
fs
push
adc
xor
stos
shll
xchg
push
fimull
xchg
xor
lcall
pushf
call
xchg
mul
ss
mov
cmp
mov
mov
subb
cmp
lret
add
leave
andl
cmp
sbb
jg
push
in
add
outsb
add
adc
add
push
insl
and
adc
test
inc
jmp
dec
inc
sbb
bound
stos
ja
cs
pop
sbb
pusha
call
cld
call
push
xor
stos
sbb
dec
ljmp
pop
movsl
cmp
in
fisttps
test
loopne
stos
mov
mov
jb
roll
and
cld
mov
jno
addb
bound
lcall
call
push
out
cmp
add
es
imul
push
cli
pop
cmp
fsubs
addb
pop
pop
sub
out
or
fiaddl
punpckhwd
mov
stc
mov
mov
jb
lods
or
and
inc
add
cmpsb
loop
repnz
xchg
shl
mov
xchg
bound
jb
inc
push
push
data16
inc
add
cmpsb
loop
repnz
xchg
shl
mov
xchg
bound
push
and
inc
add
mov
ret
out
out
mov
and
bound
jb
inc
ds
data16
inc
add
adc
ret
xchg
sub
cmp
insl
fcmovnu
lret
int
std
jmp
das
cmc
in
leave
popf
cmpsb
lods
pop
pop
dec
dec
jnp
imul
or
fcmovnu
lret
int
std
jmp
fwait
popf
mov
dec
pop
dec
sub
sbb
sub
jecxz
repz
sbbb
lods
inc
cmc
push
insl
sbb
bound
jl
mov
movsb
xchg
sti
xchg
popf
mov
jp
insb
test
repnz
call
jecxz
sbb
pop
mov
mov
mov
mov
bound
dec
push
aam
and
aaa
fisttps
or
pop
xor
imul
mov
inc
mov
test
fcmove
fisttpl
xor
in
fs
mov
rolb
xchg
cmp
mov
sub
jbe
or
fs
xchg
cwtl
imulb
lea
jp
fwait
lods
jecxz
or
xor
xor
mov
dec
enter
sub
dec
push
insl
cmp
pop
lret
sub
fst
int
std
jmp
mov
mov
inc
pop
push
dec
arpl
insl
add
sub
scas
int
xchg
lahf
test
icebp
in
div
stos
std
pop
cmp
cmp
adc
outsb
jle
aas
inc
insb
mov
stos
iret
xchg
std
fwait
lahf
not
mov
mov
and
sub
sbb
dec
pop
dec
jge
xchg
cmpsl
sahf
xchg
xchg
orl
mov
dec
dec
jnp
imul
or
fcmovnu
lret
int
std
jmp
fwait
popf
mov
pop
pop
dec
dec
jnp
imul
or
fcmovnu
in
inc
dec
cwtl
stos
notl
jl
mov
jmp
pop
mov
fxch
sub
out
out
mov
mov
dec
bnd
mov
cmc
aam
stos
and
add
adc
dec
popf
aas
jae
cmc
jle
rcrb
cmp
orb
push
cmp
pop
jge
jge
sbb
cmp
sbbb
cmpsb
push
lods
jno
push
cs
mov
or
rcrb
xchg
scas
sub
iret
fs
jns
or
mov
cmp
pop
or
fwait
imul
sub
mov
dec
push
rcll
sbb
xor
lods
mov
insl
jns
lods
adcb
mov
sbb
cmp
xorl
loop
outsl
adc
adc
loope
cmp
pop
jge
sarb
jmp
stos
push
rclb
cmp
jmp
push
push
lods
jb
loopne
or
out
mov
pop
fcoms
fbstp
lods
inc
xchg
jmp
xorl
xor
pop
sbb
cli
lcall
adc
aaa
inc
outsb
pop
jecxz
jmp
add
mov
sarb
sbb
cld
mov
and
insl
xorl
jo
and
or
mov
mov
incb
cmc
mov
xchg
adc
fildl
and
test
mov
cmp
cli
fisubs
inc
movl
hlt
xor
stc
mov
in
xor
push
xchg
jg,pt
jns
ret
icebp
sbb
stos
push
pop
add
cmp
mov
xor
xchg
lret
in
sub
inc
pop
pop
xchg
sub
ljmp
adc
jl
mov
adc
add
cmp
or
add
nop
sub
mov
scas
sbb
test
gs
aas
ret
jg
push
xor
test
shl
fmul
push
inc
fldenv
mov
xchg
inc
movsb
roll
and
cwtl
pop
out
aam
jle
shll
inc
push
enter
and
jl
pushf
lahf
dec
cmp
fwait
ret
mov
cmp
sub
int
sarb
loope
cmp
or
adc
push
sbb
push
gs
aam
xchg
aaa
ds
xchg
jge
lds
sbb
in
shll
adc
push
jl
fcomp
mov
mov
xchg
lods
jecxz
sbb
aad
mov
xor
jne
mov
xlat
movsb
pop
xor
ret
movsl
or
stos
rcr
repz
mov
out
cmpl
sbb
or
call
xor
dec
cmp
jns
xorb
nop
xchg
aad
fdiv
inc
enter
addr16
movsb
xor
dec
ja
xor
or
add
cmpsl
push
fists
jmp
mov
xchg
lock
mov
scas
inc
imul
clc
cli
sub
xchg
mov
jnp
adc
dec
mov
cmp
cmp
pop
dec
in
test
loopew
mov
mov
pop
push
insl
loop
lret
jecxz
mov
int
xor
popa
cmpsb
popf
shll
inc
add
addr16
push
mov
sbbl
push
out
imul
jb
test
ret
adc
nop
and
mov
lcall
pop
in
sbbb
mov
rcll
cmc
rcrl
mov
mov
loop
and
push
std
in
idivb
cld
loopne
adc
jmp
shll
leave
ficompl
add
cwtl
sbb
pop
cmp
ss
test
sub
pushf
xchg
mov
test
dec
inc
dec
cld
pusha
pop
dec
ret
pop
lods
cli
adc
inc
fst
aad
clc
pop
push
xor
in
cmp
xchg
outsb
or
push
std
inc
and
xchg
daa
pop
xor
leave
xor
ret
adc
add
shl
cli
stos
int
adc
leave
hlt
leave
leave
inc
sub
aaa
mov
push
mov
nop
mov
loop
mov
aad
fmuls
test
aad
push
sbb
xlat
push
xchg
ljmp
xchg
jmp
stos
pop
jo
aad
jg
sub
les
in
stos
pop
sbb
inc
lock
mov
sub
iret
inc
popa
popf
sarb
push
cmp
js
mov
mov
loopne
adc
sbb
dec
jecxz
push
mov
lret
adc
imul
mov
ror
xor
jb
push
out
inc
lods
pop
inc
mov
jp
in
out
mov
dec
or
pop
mov
pop
pop
out
roll
iretw
dec
ja
inc
sub
mov
pushf
xchg
xor
xor
jmp
in
cmp
jbe
inc
dec
adc
fbstp
addl
sbb
pop
jge
dec
adc
or
insb
lods
js
or
jle
fstl
in
pop
sbb
add
or
mov
mov
push
jno
lods
aaa
test
arpl
cltd
leave
jecxz
add
pop
fmull
xchg
adc
scas
leave
stc
xchg
in
jo
lds
lahf
push
mov
lock
cmp
or
push
sub
pop
insl
pushf
ja
and
fwait
sub
and
lea
jecxz
iret
mov
inc
dec
fsubrs
popa
arpl
cli
jnp
sub
push
je
push
dec
jge
cmp
mov
fmul
hlt
sbb
enter
repz
mov
testb
push
add
xchg
loopne
out
into
jnp
cmp
pop
sub
clc
jle
cli
rorb
fistl
dec
inc
push
jp
sub
adc
xor
lret
lahf
pushf
push
xor
sti
lret
faddl
les
mov
pushl
bound
jno
push
std
leave
xchg
mov
xor
in
and
mov
sub
int
in
or
push
push
outsb
aad
pop
cltd
jbe
repz
push
pusha
addr16
cltd
into
pop
xor
mov
jge
enter
mov
pop
jbe
fs
sarl
int3
aas
push
jp
int
lcall
aas
stos
sub
push
or
das
or
outsb
ja
in
cmp
mov
hlt
iret
and
ja
mov
popf
fisubrl
sub
stc
gs
xor
daa
imul
push
dec
mov
in
addb
sub
sub
fsubrl
and
mov
loop
cmp
loopne
and
lds
sbb
lds
dec
mov
pushf
xchg
xor
xchg
jne
gs
or
adc
loope
pusha
out
std
and
cwtl
inc
pop
sub
jns
add
mov
mov
jg
mov
push
aad
inc
push
inc
lret
mov
and
das
repnz
push
xor
sti
js
leave
jnp
push
int3
out
adc
stc
in
aam
xlat
adc
push
aad
sub
mov
dec
out
dec
lods
push
loop
lret
stos
push
aam
movsl
clc
loop
sub
lcall
inc
out
adc
pop
push
sub
arpl
cld
out
scas
sbb
mov
mov
xchg
adc
rolb
test
mov
add
push
mov
xchg
subb
fildl
test
sbb
pusha
aam
inc
out
enter
ror
push
scas
jno
out
mov
cmp
jmp
icebp
dec
add
pop
jg
pop
sub
aas
push
xchg
lret
orb
adc
roll
cmpsl
sbb
sbb
mov
pop
cmp
add
in
subb
lods
xchg
or
fcomps
negb
jb
mov
pop
mov
jmp
out
insl
lock
mov
mov
scas
pop
mov
dec
imul
inc
push
in
aad
daa
cmpsb
pushf
xchg
mov
lahf
add
arpl
and
xchg
bound
loop
roll
fnstenv
outsb
outsb
mov
mov
xor
dec
pop
movsb
add
sahf
mov
les
dec
dec
into
cmc
jae
sbb
popa
add
lods
mov
call
test
adc
popa
clc
jge
ljmp
cmpsb
out
js
push
scas
sbb
ret
mov
lds
stos
mov
mov
dec
shll
cmp
flds
lret
sub
mov
mov
sti
and
data16
pop
xchg
inc
ss
and
cmp
rcl
pop
imul
adc
loopne
rcrb
inc
and
push
adc
dec
mov
cmp
roll
flds
mov
mov
push
jb
sbb
mov
or
jl
mov
lret
pop
sbb
mov
add
sbb
fistl
add
jp
add
add
pop
jl
push
daa
loope
dec
pop
daa
das
push
loop
pop
cmp
fld
dec
inc
or
jnp
outsb
jg
push
mov
xor
sti
push
lea
mov
and
jnp
push
je
pop
xor
jne
pusha
xlat
leave
data16
mov
mov
je
dec
push
int
dec
fsubs
enter
sub
xchg
sub
pop
cli
jmp
mov
add
out
test
rorb
cwtl
push
add
pop
push
pop
sbb
xor
and
hlt
dec
mov
cmp
and
push
bound
mov
lods
std
and
xchg
cltd
fimuls
cli
icebp
jo
xor
push
daa
adc
push
jno
push
in
mov
push
dec
jne
mov
sbb
inc
jle
lret
add
xchg
mov
sahf
jp
and
fnstenv
pop
cs
popa
jne
add
adc
inc
mov
addr16
lods
inc
inc
iret
or
sbb
loop
and
sub
in
sub
lret
aas
mov
xor
push
das
stos
cmpsb
pop
cmp
ret
mov
std
sbb
pushf
pop
out
out
push
insl
cmp
call
push
cmp
add
jl
into
int
ds
xchg
movsl
xor
jl
repnz
fcmovnu
and
insb
cmpl
push
test
cmp
les
out
pop
jo
push
outsb
xchg
mov
leave
cltd
incl
leave
iret
mov
icebp
jno
lods
jp
push
scas
sub
test
xchg
rolb
adc
outsl
adc
call
scas
out
dec
imull
adc
push
out
rcr
jo
mov
data16
mov
jno
push
dec
and
mov
cltd
or
mov
popa
jno
pop
mov
mov
or
mov
pop
pop
add
jmp
and
add
lock
ret
sbb
lock
mov
xor
or
arpl
dec
leave
xor
repnz
lods
ret
dec
pop
daa
mov
xchg
cltd
incl
pushf
or
add
jmp
mov
push
cmp
xor
jne
xchg
cmp
push
sub
dec
in
test
mov
inc
addr16
cli
xchg
sbb
in
ds
sub
rcrb
push
pushf
sub
lods
hlt
jno
test
pop
cs
hlt
push
jle
sysexit
mov
jmp
xchg
adc
cmp
mov
ret
lds
scas
push
adc
adc
jne
loope
add
in
adc
lahf
push
mov
xor
pusha
or
sub
push
ss
mov
fs
decb
inc
adc
call
mov
std
ds
mov
dec
mov
in
in
cmpb
sbb
mov
stc
add
adc
adc
jo
pop
push
adc
push
es
js
insl
lcall
ss
out
jg
lret
sbb
sub
mov
es
mov
arpl
addr16
inc
cmp
in
test
xchg
movsb
xchg
fistpl
sahf
xchg
out
mov
push
int3
cmp
sarb
out
out
and
ljmp
in
imul
popa
lret
jmp
sub
pop
xor
insb
aad
mov
cld
jmp
pop
ja
push
jge
jp
mov
mov
out
jecxz
scas
inc
mov
outsl
sbb
mov
and
cmpsl
xchg
mov
aas
cmp
jge
mov
adcb
or
cli
pop
test
bnd
or
add
jae
sub
iret
xlat
cwtl
xor
dec
jnp
mov
stc
add
int3
faddp
cmc
cli
aad
jae
in
sub
xchg
add
cmp
pop
add
mov
push
aad
pop
ja
mov
cmp
rcl
inc
inc
outsb
jns
insb
dec
pop
dec
sub
mov
jmp
or
xlat
cmp
jl
mov
idivb
call
cmc
cmp
or
pop
cwtl
push
repnz
les
out
sbb
mov
rclb
lea
stc
mov
mov
inc
and
stos
xor
fnsave
aad
outsl
cmp
lock
pop
lods
out
mov
es
sub
call
neg
enter
lds
sub
inc
xchg
push
sub
sbb
xchg
inc
xor
mov
push
push
jb
mov
or
mov
mov
call
xor
add
out
mov
int3
adc
aam
or
add
push
mov
test
cli
or
outsl
sub
sbb
pop
sahf
fcomps
loop
jmp
fdivrs
jmp
cli
dec
inc
jp
insl
lods
fisubl
outsl
inc
jle
adc
mov
lcall
sub
mov
enter
or
repnz
lods
sub
xchg
dec
mov
push
nop
leave
insb
cmp
mov
sub
xchg
enter
stos
mov
das
in
lea
aad
stc
popf
adc
mov
dec
rol
jnp
int
lret
xor
jnp
aad
mov
inc
int
lret
jb
mov
shlb
push
sbb
push
fsts
cmp
or
adc
dec
xchg
jnp
pop
shlb
das
sub
int
bound
sbbl
push
subb
mov
push
xor
int
pop
xchg
subb
ret
push
nop
sti
or
jo
les
out
out
bound
xor
and
push
push
jle
fwait
ss
add
mov
push
lds
push
adc
or
sbb
arpl
cwtl
je
cmc
clc
stos
mov
std
loope
loope
mov
lahf
loop
sbb
sub
xchg
aas
lcall
movsl
mov
ds
fistl
sub
filds
test
jbe
lret
loop
sub
cmp
popf
adc
dec
inc
test
dec
fadds
push
repnz
mov
fcomi
pop
sbb
jle
fmuls
adc
xor
cs
mov
mov
pushf
addb
cmp
cltd
mov
out
add
xor
inc
stos
xor
sub
iret
sub
xor
gs
dec
jnp
add
test
cmp
shlb
popf
gs
and
mov
popf
mov
insb
sbbb
out
cmp
cmp
mov
in
add
or
int
and
aas
mov
bound
lret
cwtl
outsl
dec
mov
mov
pushf
stc
outsb
sub
or
mov
dec
hlt
lea
jno
xor
pop
push
push
and
outsb
clc
repz
sub
ror
inc
push
push
imul
es
inc
out
or
jne
jle
inc
mov
loope
or
in
jae
dec
or
nop
jnp
arpl
les
fildl
jl
iret
dec
bound
js
das
js
push
jo
dec
mov
pop
push
repz
imul
pushw
enter
xor
jae
rclb
addb
sbb
pop
push
fisttpl
das
movsb
bound
mov
or
and
xchg
xchg
sub
xor
mov
into
xor
push
lea
pop
das
mov
sbb
pop
adc
rorb
aam
in
sbb
in
mov
jle
jg
data16
xor
iret
fisubs
and
dec
push
or
xchg
push
imul
sub
jo
pop
push
mov
cmp
call
cli
rcrb
sub
xchg
test
or
dec
mov
cmp
or
xor
outsl
ret
je
pop
push
fmull
mov
jmp
std
mov
sub
cmpb
rcl
mov
sbb
ror
mov
adc
arpl
cmp
ljmp
shll
adc
inc
xchg
std
int3
sbb
mov
divl
out
jge
out
popa
inc
enter
int3
add
pop
call
xor
test
fwait
inc
mov
in
loopne
mov
or
and
test
mov
leave
add
dec
push
ret
repnz
inc
daa
addr16
loope
mov
pop
push
adc
out
mov
test
adc
jns
mov
push
mov
xchg
or
inc
xor
sub
mov
in
xchg
outsb
add
sub
lods
jns
ffree
test
fwait
xchg
sahf
push
iret
push
lock
addb
mov
xchg
imul
enter
cmp
std
stc
xchg
dec
sti
inc
pop
std
cmpsb
ja
ret
shr
adc
jle
mov
sbb
mov
out
in
ret
dec
jl
je
frstor
aad
xor
lea
adc
stos
cmp
cmc
inc
sahf
jno
pop
arpl
and
inc
ja
cwtl
gs
in
out
jb
jns
cmp
cmp
mov
imul
push
cmp
das
fnstcw
xchg
jge
stos
mov
push
add
mov
sub
sti
lea
push
in
out
push
lret
mov
cmp
rorb
jmp
pop
add
outsb
cwtl
push
lods
push
orb
and
xchg
xor
ss
mov
loopne
movsb
inc
call
or
xchg
mov
negl
and
jae
cmpsb
arpl
jbe
leave
into
test
mov
push
inc
mov
in
andb
mov
dec
insb
xchg
xor
xor
xchg
sub
pushf
push
jnp
roll
cmpsb
mov
jnp
and
out
xor
xchg
adc
inc
ja
rorb
xor
add
bound
cmp
out
test
xor
je
xor
aad
notl
jns
in
dec
adc
fs
loop
movsb
cmp
inc
add
pop
pop
dec
sarb
inc
inc
xor
xchg
and
jne
insb
in
xchg
bound
scas
sbb
insb
cmc
xchg
or
and
dec
adc
aaa
push
int3
ret
divb
mov
test
sub
repnz
and
mov
fwait
sbb
adc
pop
jne
xor
lret
in
xor
push
sub
sti
jge
in
in
inc
mov
pop
ljmp
mov
aad
pusha
add
fldcw
inc
test
push
xchg
add
loopne
mov
lret
mov
xchg
fwait
cmp
adcl
call
jp
in
push
daa
adc
arpl
std
std
xchg
arpl
popa
repnz
das
push
outsb
ss
inc
add
shl
andb
jns
in
cmpsb
push
and
xlat
addr16
sub
cmp
push
mov
in
xchg
mov
pextrw
js
jmp
xchg
lahf
inc
push
add
mov
mov
arpl
xor
dec
fildll
mov
addb
lcall
jmp
jb
push
push
daa
dec
sub
inc
jecxz
dec
std
cwtl
push
mov
call
or
pop
xchg
or
or
push
inc
inc
push
test
cmp
sbb
dec
std
jno
and
mov
ret
dec
jmp
lcall
cli
jae
sarb
fidivl
pop
adc
scas
rorb
test
sbb
push
das
testl
or
or
mov
xor
or
loop
or
rclb
repz
add
mov
sahf
push
scas
rcrl
sarb
movsb
add
outsb
pop
enter
sbb
cmpsb
sbb
xchg
mov
sar
push
add
ret
aaa
fst
dec
mov
stc
and
psllq
adc
cmp
nop
mov
mov
adc
dec
jl
lcall
aad
sbbl
ja
aad
xchg
jo
and
lret
divl
sub
in
mov
xchg
sub
dec
cli
inc
dec
aad
mov
pop
mov
dec
push
xchg
or
mov
cmc
gs
jg
mov
cmp
cmovbe
mov
sub
ret
or
scas
fs
rcrb
imul
adc
ss
jl
out
aas
cmp
adc
test
rolb
hlt
and
pop
aam
cmpb
dec
cs
popa
push
push
mov
imul
out
jnp
outsb
inc
int
fnstcw
jb
jnp
and
std
jmp
fwait
popf
mov
pop
pop
dec
dec
jnp
imul
or
fcmovnu
lret
int
std
jmp
fwait
popf
mov
pop
pop
dec
dec
jnp
imul
or
fcmovnu
lret
dec
sti
jge
in
fwait
popf
mov
pop
fisttpll
jnp
imul
or
fcmovnu
leave
int
std
jmp
cltd
popf
mov
movsb
pop
mov
sarl
sbb
repnz
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
and
sbb
mov
adc
mov
mov
mov
cld
loope
rcr
ror
cmp
sub
sbb
or
jl
loopne
pop
inc
cmp
pushf
orl
scas
and
mov
push
jno
popa
push
push
mov
push
mov
mov
lcall
test
int3
js
and
imul
fiaddl
xchg
jae
jnp
pop
pop
ror
jp
icebp
popa
pop
cltd
adcl
pop
jge
nop
pop
sbb
push
inc
cltd
cld
sbb
add
push
std
hlt
das
rcr
aas
inc
leave
cmp
mov
das
das
jo
sub
scas
mov
lret
sub
jmp
push
fsubrl
mov
add
je
and
or
mov
jl
add
cmpsl
sub
sbb
cmpsl
jo
std
mov
shll
lahf
into
sub
jnp
cmp
push
push
inc
dec
mov
pop
or
int
xor
cld
sbb
mov
mov
mov
mov
les
fsubrl
fcoml
cwtl
add
jno
popa
insb
push
xchg
mov
mov
icebp
shl
adc
fadd
mov
je
and
xor
movsl
jmp
xchg
xchg
mov
xor
insl
inc
jge
sub
adc
and
fldenv
jmp
lods
mov
mov
push
imul
outsl
jno
popa
insb
push
pop
inc
dec
mov
mov
mov
cld
loope
rcr
ror
cmp
sub
sbb
or
jl
insb
push
pop
inc
dec
mov
mov
mov
cld
loope
rcr
ror
cmp
sti
stos
mov
stc
mov
cmp
inc
out
mov
loopne
fistl
nop
mov
scas
jno
aam
mov
jo
outsl
cwtl
into
std
fcmovnu
out
je
xchg
cs
adc
cltd
xchg
lock
dec
mov
mov
inc
fidivs
inc
xor
sarl
sbb
div
pop
xchg
push
adc
ja
sub
sub
push
pop
push
sub
mov
inc
fsubrp
sub
xchg
xchg
jle
jbe
hlt
cld
int3
stos
lods
aaa
mov
lret
pop
push
fisttpll
ljmp
push
outsl
das
sub
xor
rcl
add
jg
inc
jno
sub
inc
andl
xchg
jae
popa
push
cli
lret
insl
pop
xchg
lods
cmc
add
popa
mov
stc
jo
test
and
ror
filds
repnz
aad
div
imul
adc
xchg
testb
xor
pop
pushf
test
inc
mov
ja
push
sbb
and
addr16
and
mov
and
pop
mov
loopne
hlt
adc
aas
mov
out
sub
mov
ret
popl
mov
cmp
xchg
popa
jmp
cli
imul
or
popa
xchg
sub
mov
lret
popf
fisubs
mov
fwait
fwait
adc
out
jp
xchg
push
mov
repz
xchg
adc
stc
jne
cmc
sbb
push
sahf
movsb
xor
out
fisubl
sahf
hlt
xchg
mov
flds
inc
clc
pop
cmp
sbb
outsl
mov
mov
push
lret
arpl
lret
andb
mov
push
xchg
shrb
push
loop
pop
sbb
stos
shr
mov
pop
sarb
xchg
jl
add
sbb
lahf
mov
fldenv
sti
jnp
and
mov
push
popa
mov
sahf
test
mov
pushl
aad
push
sahf
and
jmp
stos
dec
fnstenv
lret
shr
out
cmp
repz
decl
test
mov
scas
adc
enter
fld
mov
inc
mov
xchg
inc
adc
mov
aam
and
movsb
cmpsl
cmpsb
or
xchg
inc
scas
jnp
mov
test
not
mov
mov
scas
in
xor
mov
sub
push
mov
adc
shr
lahf
add
int3
mov
xlat
call
insb
lcall
pusha
inc
je
ds
mov
fbld
test
cmpsb
out
pop
ss
imul
add
add
jmp
adcb
sbb
sahf
push
mov
sub
push
ja
mov
mov
mov
sbb
imul
cmp
jl
aaa
cwtl
jne
push
clc
js
ret
lds
push
test
cmp
ret
push
jle
popf
dec
hlt
sbbb
xchg
mov
in
xor
sbb
stc
dec
notrack
rorl
mov
sahf
pop
adc
ret
icebp
mov
and
mov
cmp
sti
push
outsb
in
aam
pop
cwtl
pop
rorb
mulb
lret
fiadds
mov
jo
int3
in
nop
shr
cltd
adc
stc
cmp
jp
xchg
insl
insb
ucomiss
std
xchg
mov
xlat
inc
fdivrs
fxam
mov
jl
mov
pop
push
rcll
std
daa
inc
es
dec
xchg
insl
mov
jge
add
sbb
icebp
stc
ret
insl
cmp
sbb
mov
xchg
jbe
cwtl
xchg
add
adc
or
scas
xchg
sub
out
mov
push
imul
add
mov
repnz
insb
xor
push
jle
push
pop
xchg
jl
mov
jl
int3
jmp
call
xor
mov
cld
rcll
mov
cmp
cwtl
orb
or
cli
xadd
inc
je
push
nop
xor
sbb
lcall
and
test
adc
dec
insl
lods
fwait
enter
jnp
loop
fnsave
cwtl
std
jbe
movsb
dec
addr16
mov
pushf
repz
fidivrl
or
inc
stc
sbb
in
lods
xchg
mov
sbb
lds
loopne
stc
arpl
and
adc
lock
push
push
adc
insb
mov
and
adc
xchg
bound
or
cmp
out
cmp
mov
outsl
mov
mov
movsb
xchg
movsb
arpl
sub
push
xor
rol
pop
pop
or
xchg
roll
push
lods
lret
jbe
test
sbb
adc
icebp
lret
fdivs
lea
push
mov
sub
sub
jns
mov
add
xor
inc
mov
jns
fiadds
lds
stc
jecxz
cmc
and
dec
call
enter
lods
xchg
cmp
popa
push
mov
dec
iret
andl
push
jne
cwtl
enter
insl
and
or
sub
add
mov
hlt
je
and
pop
xor
push
fs
decb
inc
ret
mov
fistl
cld
test
sar
pop
aas
pop
imul
call
insl
dec
jmp
xor
xor
mov
add
mov
push
mov
sub
ss
adc
xor
mov
sbb
cmp
mov
mov
inc
icebp
negb
adc
dec
scas
divl
or
ss
mov
cmp
jmp
adc
cmp
outsl
xor
jns
cmpsb
lret
add
test
mov
dec
cmpsb
ja
lods
les
mov
arpl
clc
out
inc
and
add
add
loope
jb
xchg
adc
or
call
ja
inc
dec
sub
sbbb
inc
ja
jae
icebp
icebp
dec
out
mov
pop
mov
or
pop
sub
dec
add
adc
mov
ret
js
out
xchg
xchg
ljmp
xlat
and
out
call
xor
inc
lahf
mov
paddusb
push
lret
loop
xlat
imul
imul
addr16
lcall
inc
inc
cmp
bound
rcl
mov
mov
jno
ljmp
cmpsb
iret
mov
data16
fisubrs
or
or
dec
ds
jns
lcall
push
adc
sub
out
in
mov
mov
xor
cmp
jns
stc
out
in
es
insl
icebp
and
sub
insb
adc
push
stc
lea
xchg
aad
into
into
jnp
sbb
mov
jno
sar
std
js
pop
aad
bound
sub
nop
xor
lea
jb
jno
mov
jp
push
and
ljmp
inc
roll
repnz
std
jo
fsubl
jne
mov
lods
idivb
aam
dec
jnp
outsl
sbb
push
int3
out
fistl
lock
adc
rcr
arpl
cmpsb
leave
or
and
mov
push
cld
mov
push
inc
imul
mov
inc
lea
movsl
pop
and
push
sahf
pop
outsl
idiv
lea
sbb
mov
mov
and
aam
xor
or
mov
jo
outsl
pop
lods
and
in
add
gs
cli
lea
adc
imull
dec
xor
add
add
hlt
mov
lods
push
cmp
add
in
fists
popf
pop
ja
pushf
mov
and
adc
ljmp
adc
rcll
mov
adc
cmpsb
jmp
cld
lock
sbb
lahf
sub
cmpsl
xorb
push
bound
push
dec
fwait
hlt
jge
ret
mov
xchg
jbe
sbb
gs
push
push
cmp
hlt
xlat
push
fisubrs
cmpsl
mov
adc
and
xor
pop
or
dec
fisubl
ja
sub
xchg
enter
inc
inc
sahf
mov
andb
fildll
cwtl
imul
push
adc
sarb
hlt
daa
sbb
insl
sub
call
push
fstpt
out
lret
sub
jecxz
sub
call
pusha
mov
test
aam
mov
das
lret
fadds
loop
cwtl
out
cmp
sarb
daa
pop
test
sbb
pop
push
adc
add
sarl
pushf
cwtl
sub
pop
xchg
paddsb
adc
lahf
jmp
push
leave
pop
icebp
stos
loope
test
mov
loope
insb
mov
mov
or
pop
sbb
push
fcoms
call
popf
popf
fstpl
sbb
lods
sbbb
add
mov
clc
mov
bound
xchg
mov
dec
lret
or
cmc
cmp
out
dec
xchg
mov
imul
or
inc
cmp
and
mov
sbb
fstp
mov
testb
jae
lock
lea
cltd
mov
popa
and
and
imul
popa
ss
loop
mov
sub
icebp
xchg
mov
bound
xchg
repnz
xchg
pop
mov
into
add
jbe
inc
pop
or
xlat
pop
std
fnsave
adc
jno
sbb
cmc
adc
scas
stos
loope
sub
js
sbb
push
cs
bound
js
clc
push
cmp
out
sbb
mov
dec
or
dec
mov
push
dec
rcll
scas
shlb
add
xchg
pop
adc
mov
ds
add
sbb
mov
pop
ds
ja
icebp
pop
pop
popa
scas
push
and
mov
xor
xchg
js
cwtl
lods
ds
loop
popa
or
mov
sysenter
or
xchg
sub
outsb
arpl
add
outsl
outsb
outsb
movsl
int3
mov
mov
fsubs
in
adc
enter
out
jmp
cmp
push
mov
and
sub
cltd
loopne
mov
popf
shr
aad
stos
and
mov
or
jge
insl
pop
push
imul
mov
test
cmp
das
es
test
es
lahf
lea
mov
ds
fs
sbb
roll
xlat
mov
sub
add
push
pop
jmp
inc
adc
js
loopne
test
hlt
adc
loop
sti
movsb
test
into
or
inc
adc
andb
movsl
bound
fnstenv
jecxz
or
mov
xchg
adc
pop
cmp
jl
cmp
daa
popa
movsl
mov
iret
testb
and
adc
and
imul
sub
jno
cmp
sar
sub
mov
movsb
pop
add
mov
ljmp
cmp
jge
push
out
pop
iret
repnz
pop
cmp
mov
and
int3
xor
dec
dec
fwait
xor
jo
lret
mov
lods
sbb
daa
gs
shlb
push
loop
cmc
xor
je
jmp
inc
mov
test
int3
inc
push
and
cs
cmp
pop
cmp
cmp
repnz
mov
fisttpl
xchg
jmp
xchg
xchg
pop
jmp
mov
mov
xor
mov
popf
lods
stc
rclb
in
stc
mov
imul
int
daa
fsubrs
dec
xchg
cld
push
sub
movsb
movsb
xor
pop
jg
cs
sbb
popf
dec
scas
jle
daa
js
aad
test
arpl
xchg
mov
sahf
fisubrl
pop
icebp
repnz
xor
ja
sbb
clc
loopne
repnz
inc
dec
push
xlat
cmp
fisubrl
jle
bound
scas
and
push
adc
inc
sahf
out
aaa
clc
ds
in
xchg
jge
push
lods
popa
pop
mov
adc
repz
sbb
ror
int
cmp
loope
xor
je
icebp
loopne
dec
mov
jb
pop
outsb
jp
jl
clc
pop
xor
jmp
dec
iret
jle
mov
push
out
push
in
add
mov
jge
adc
popf
add
loopne
push
pop
xchg
test
lods
loope
mov
xorl
popf
xor
movsl
sub
aaa
inc
jae
fstps
xchg
movsb
ds
sub
mov
sbb
mov
adc
jns
mov
mov
out
jbe
imul
xchg
push
mov
bound
xchg
cwtl
cmp
or
imul
or
xchg
call
sub
push
fcoms
jnp
xor
jae
xchg
mov
xchg
ret
fwait
mov
pusha
lret
and
fisubs
out
ret
lds
dec
cmp
mov
scas
inc
data16
in
mov
adc
inc
pop
mov
fsts
push
push
out
or
call
adc
clc
movsb
inc
testl
push
popl
lcall
adc
xor
push
jg
enter
jns
or
and
into
add
loopne
xchg
sub
jle
cltd
jno
fbld
cmp
jns
shrd
stc
push
xlat
mov
aam
mov
mov
lcall
shrb
fistpll
push
cwtl
xchg
mov
xor
fstpt
push
loope
cld
mov
fsub
repz
repz
cwtl
or
jne
es
jne
and
jge
ljmp
aam
das
and
add
pop
fwait
and
jmp
dec
data16
mov
rcr
xor
or
test
cmp
inc
mov
imul
add
daa
sub
pop
adc
mov
fucomp
popf
popa
mov
and
mov
xchg
lds
inc
and
mov
mov
out
push
arpl
xchg
outsb
push
xor
inc
fdivs
sub
mov
push
or
xor
shrb
push
movsl
hlt
xchg
inc
ljmp
pop
mov
sbb
je
loop
cli
outsl
std
aas
mov
hlt
inc
xchg
or
mov
mov
pop
inc
mov
data16
movl
cmp
rcll
cmp
add
mov
sbb
mov
repnz
sub
add
cwtl
movsl
ds
pop
and
not
add
mov
mov
in
ja
cwtl
es
call
jp
adcb
mov
lock
xchg
clc
cmp
mov
push
repnz
pop
xor
and
lock
fwait
mov
mov
mov
repz
push
clc
mov
inc
xlat
cs
mov
mov
pop
sub
dec
rep
mov
adc
shr
push
cld
or
xchg
hlt
jecxz
stos
std
enter
out
call
imul
into
imul
xor
push
xor
add
mov
cmp
cmpsl
add
mov
in
aaa
cmp
sarb
out
or
je
cmp
xor
inc
js
ljmp
out
xchg
jo
xor
stos
rorl
stos
imul
test
xor
ret
jnp
cmp
mov
mov
sub
decb
les
pop
pop
lahf
sbb
cmc
testb
mov
mov
testl
movsb
bound
shll
and
cli
sbb
dec
jp
in
push
mov
cmp
insb
xor
xchg
dec
mov
push
or
fimuls
pop
lock
add
pop
inc
push
divl
cmp
sbb
pop
xchg
lahf
loope
sub
inc
jbe
jmp
outsb
adcl
cmp
mov
cs
mov
mov
xchg
pop
fcmovne
push
inc
aam
test
js
push
jns
scas
mov
mov
fldl
dec
inc
and
rcll
ret
cmpsb
shlb
stos
and
jecxz
out
mov
or
mov
rcll
mov
cwtl
sbb
mov
and
scas
jb
bound
mov
cmp
mov
sub
rcrl
add
mov
push
jne
push
fisubrs
or
cmpsl
test
sbb
lds
je
cwtl
mov
dec
jo
or
adc
sub
imul
daa
xchg
pusha
pop
outsl
mov
fucomip
in
add
xchg
aas
fisubrs
push
xor
inc
je
xchg
cmp
andl
dec
dec
das
fwait
stos
sub
jo
push
xor
rolb
leave
lret
pop
fs
jbe
push
sarb
xor
xor
pushf
data16
cltd
shlb
inc
das
sub
movsb
and
jle
mov
add
popf
movsb
xchg
and
mov
sub
aam
imul
test
jge
lods
sbb
and
inc
imul
lock
mov
into
lahf
aaa
sbb
std
or
cmp
fmuls
mov
arpl
push
inc
outsb
jno
mov
pop
nop
je
and
aas
cmpsb
mov
out
ss
mov
mov
adc
imul
sti
sub
out
push
sub
fcompl
or
mov
add
dec
addr16
rorb
out
sbb
iret
mov
and
ja
sarb
lods
sbb
jge
out
mov
mov
int3
mov
loope
mov
pop
les
or
dec
xor
into
fdivp
idivb
xchg
loopne
pop
shrb
insl
loope
inc
stos
and
lcall
add
jmp
add
in
sbb
idivb
js
pop
cli
add
inc
mov
ficompl
xorb
insb
and
cmp
sub
aam
int3
fcom
stc
jnp
xchg
pop
les
es
scas
es
inc
aam
and
not
aaa
std
or
shrl
cwtl
out
scas
aas
dec
jle
pushf
pop
insb
loop
loopne
rorb
mov
jecxz
mov
mov
fwait
cmp
lret
scas
imul
xlat
jg
pop
bound
push
xor
test
pop
out
repz
arpl
mov
adc
pushf
outsl
sar
push
in
xor
push
sbb
lea
jnp
cmp
imul
xchg
pop
jns
jnp
jnp
sarb
inc
fcoml
int3
je
inc
stc
fnstcw
adc
cmpsl
enter
rolb
stos
jo
cltd
adc
nop
or
in
ss
add
nop
clc
xchg
xchg
insb
into
addr16
cmp
rclb
pop
stos
es
imul
cmpsb
out
jmp
pop
addr16
cs
nop
daa
mov
push
movsl
out
pop
push
pushf
aas
cld
imull
add
aas
cmp
add
rcl
adc
shlb
add
add
repnz
in
clc
mov
xor
bound
cmpsl
in
sub
in
or
hlt
xor
and
scas
shrb
mov
cltd
or
push
in
add
and
add
pop
lea
xor
mov
jnp
rorl
push
fcomip
inc
stos
shll
or
ds
fimuls
lret
int3
dec
jnp
ljmp
hlt
lock
pop
out
inc
mov
fistpl
aas
lds
and
inc
pop
aad
sbb
dec
and
sub
outsb
fstpt
jl
aas
xchg
xchg
mov
outsl
addr16
mov
in
push
dec
add
sub
arpl
push
adc
gs
arpl
mov
std
dec
dec
lcall
lcall
cli
lds
jne
pop
ljmp
addr16
repz
in
aam
dec
cmpsl
cmc
adc
fwait
movsb
sub
in
mov
sub
cld
or
dec
out
dec
jns
mov
nop
in
popf
sub
jns
or
mov
gs
into
lods
das
push
aas
jl
push
sub
shlb
jmp
stos
loop
xchg
push
shl
lods
jo
outsb
ror
mov
pop
jne
aad
movsl
loop
mov
fabs
adc
sahf
fstpt
mov
addl
pop
inc
pop
push
jbe
pop
pop
je
test
xor
and
xchg
cmp
push
cmp
sbb
inc
subb
and
xor
sub
js
jg
sti
cwtl
jg
mov
inc
jle
das
andb
adc
sbb
outsl
xchg
les
fbstp
and
pop
inc
pop
mov
mov
nop
sbb
or
lret
shlb
in
adc
in
es
add
js
push
pop
or
das
je
cmp
shlb
andl
in
popa
mov
movsb
sub
dec
cmp
or
or
and
xchg
pop
and
fcompl
cmc
adc
adc
fstl
adc
mov
ret
sbb
jnp
mov
sbb
bsf
loop
or
clc
pop
cmp
fisttpll
movsl
adc
incb
and
ret
fdiv
push
jbe
xchg
sbb
js
pop
outsl
adc
jle
mov
pop
scas
or
orl
xchg
jecxz
dec
xor
out
scas
outsl
inc
stos
imul
repnz
mov
xor
repnz
adc
dec
dec
jmp
jo
or
jl
insb
push
pop
inc
dec
mov
mov
mov
cld
loope
rcr
ror
cmp
sub
sbb
or
jl
insb
push
pop
inc
dec
mov
mov
mov
cld
loope
rcr
ror
cmp
adc
jno
popa
les
inc
dec
mov
mov
mov
cld
loope
sar
ror
cmp
sub
sbb
or
push
faddl
mov
mov
sti
xchg
and
xor
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fcomps
call
stos
fsubs
or
imul
cmp
push
clc
mov
mov
mov
sbb
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
adc
push
pop
dec
push
inc
sbb
rolb
mov
push
arpl
sti
xchg
icebp
test
pop
imul
inc
add
mov
lock
loop
insb
int
xchg
or
mov
popf
scas
adc
std
dec
xor
idivb
js
test
dec
dec
jne
pop
std
sub
fcomp
enter
call
leave
cmp
out
testl
jb
imul
call
mov
xchg
in
enter
inc
std
adc
dec
push
sbb
arpl
pop
fnstcw
xor
or
cmp
jge
test
adc
enter
call
enter
call
js
push
dec
cmp
add
mov
cli
mov
pop
popa
sub
pop
sbb
or
mov
fldl
rclb
jno
imul
ss
push
cs
pop
mov
lret
aam
mov
mov
sbb
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
js
push
dec
cmp
push
gs
push
lods
cli
push
or
mov
adc
jmp
sahf
dec
fists
mov
cmp
aas
mov
xchg
outsb
fnstenv
loopne
lret
fsts
push
jmp
dec
cmpsb
mov
add
movsl
repnz
movsb
mov
fwait
add
stos
xchg
scas
inc
add
push
lret
cmpsl
loope
inc
add
or
xor
call
ret
mov
rclb
xor
push
movsb
adc
pop
mov
push
test
mov
movsl
pushf
fmuls
mov
lret
in
shll
out
ds
inc
sub
jbe
push
movsb
in
push
xchg
lods
jns
sub
movsb
push
shll
pop
loope
out
hlt
outsb
xor
int
in
mov
lret
and
and
in
xchg
push
sub
fmuls
int
pop
sbb
imul
pop
loope
popf
cmc
imul
sahf
jmp
jbe
loopne
ds
lahf
inc
and
push
cmp
nop
rcr
das
fisubs
jecxz
and
ds
push
popf
in
aas
div
lods
cs
popf
push
jp
in
xchg
outsb
mov
pop
xor
insl
add
popa
xlat
bound
cmpsl
dec
jo
outsb
mov
ss
das
mov
pop
mov
shlb
dec
sub
clc
dec
js
mov
sbb
je
inc
adc
stc
inc
inc
pop
push
mov
sti
cmp
js
lods
lock
push
in
jge
gs
pushf
mov
mov
push
and
jmp
mov
adc
jl
sahf
sbb
or
pop
mov
xchg
ss
mov
adc
xlat
xchg
mov
push
out
out
or
mov
push
push
dec
add
sti
outsl
pop
cmp
aad
mov
push
mov
jae
cmp
in
mov
mov
or
pop
mov
xor
shl
sub
push
jnp
sub
dec
jbe
call
sub
jne
lea
mov
pop
pop
push
or
decb
sti
ljmp
jmp
daa
xchg
call
xor
aaa
mov
popf
xchg
push
xchg
push
and
xorl
lds
int
popa
mov
push
repnz
ja
xchg
mov
repnz
inc
out
rcr
addr16
ret
dec
in
mov
xchg
jecxz
sbb
xor
push
stos
into
xor
xor
lahf
cmp
push
in
adc
add
inc
cmp
pop
insb
sub
lahf
sbb
rcl
xchg
and
pop
int
pushf
lods
lods
popf
xor
out
xor
jmp
cmc
inc
dec
mov
nop
push
adc
xor
out
pop
xchg
sbb
lahf
sub
sbb
dec
icebp
adc
xchg
jo
cmp
jecxz
pop
cwtl
es
lcall
shll
xchg
xchg
pop
mov
jnp
cld
xchg
adc
and
fcomps
pop
and
insl
xchg
jo
add
inc
scas
sbb
cltd
repnz
sbb
pop
sub
and
shl
and
decb
pop
sti
popf
scas
mov
movsl
adc
dec
push
aaa
fidivrs
ret
fucomp
pop
int
adc
fstps
add
mov
loopne
ficompl
adc
and
sti
push
mov
clc
shll
sti
aad
test
mov
pusha
aam
rolb
loopne
std
dec
pop
xor
mov
jecxz
or
insb
push
and
movsl
lahf
shlb
mov
rolb
mov
stos
aam
pusha
pop
sub
mov
dec
loopne
mov
cmp
mov
pop
bound
push
enter
add
xor
or
stc
insl
pop
sarl
idiv
add
in
sub
xor
xor
xor
stc
mov
rcll
push
mov
andb
scas
ret
sbb
xor
adc
test
and
insl
add
ficoml
cld
add
gs
inc
sbb
scas
inc
loopne
mov
cmp
leave
mov
xlat
mov
aam
test
mov
push
dec
or
popa
repnz
or
gs
imul
jmp
or
insb
dec
pop
cmpl
jbe
cmpsb
icebp
sub
orl
adc
ja
fs
jns
mov
mov
dec
in
push
jge
push
jae
stos
mov
adc
jns
out
xchg
or
xchg
add
ror
or
mov
xchg
sbb
movl
jmp
gs
push
xorl
dec
xorl
push
lahf
aam
jp
push
push
mov
fsubl
adc
cmpsb
xor
and
dec
sbb
pop
adc
lahf
push
pop
pop
push
pop
int3
out
in
xlat
pop
adc
das
movsb
pop
dec
bound
pop
push
stc
shll
pop
xchg
sbb
inc
mov
xor
adc
stc
std
mov
jno
or
cmpsb
xchg
fwait
add
bound
sti
jb
test
lods
push
sbb
icebp
xor
dec
mov
stos
out
movsl
popa
int
push
sbb
jmp
lcall
repnz
fneni(8087
ljmp
or
ss
and
iret
adc
cli
loopne
jmp
push
xchg
divl
push
lcall
fxch
cmpb
loopne
or
xor
xchg
in
pop
lods
daa
sub
jmp
xor
lods
lret
cmp
push
pop
fwait
sahf
cmp
cmpsb
test
mov
cs
inc
dec
testl
push
popf
mov
sti
xchg
jbe
into
inc
cmp
les
out
mov
cltd
lret
pop
je
jmp
shrl
cltd
mov
scas
jb
cld
mov
and
push
in
sti
cmp
loope
pop
dec
or
jno
lret
fucomip
adc
icebp
lods
incl
js
movsl
stos
jg
and
or
mov
test
lahf
cmpsl
xor
test
shl
mov
and
rorl
ror
xor
cmpsl
inc
xchg
ret
scas
scas
mov
rcll
call
jno
cmovns
sub
cli
sbb
mov
mov
lock
pop
jg
cli
ljmp
jge
xor
rclb
shll
pop
call
in
fidivs
cmp
mov
push
mov
cmp
aam
jg
nop
imul
enter
lods
stos
push
das
movsl
push
idivl
cmc
add
rorb
inc
pop
sub
mov
push
arpl
daa
enter
orl
imul
fisubrs
insl
nop
xor
testl
sub
hlt
aad
leave
in
mov
mov
cli
jecxz
jnp
cli
xchg
push
lret
cmpsb
aam
pop
xchg
addr16
sbbl
cs
mov
jmp
stc
test
mov
test
cmpsl
inc
pop
test
cld
inc
jnp
jno
dec
cmp
xor
mov
mov
cmp
push
sbb
lods
popl
imul
mov
int
lods
xchg
mov
sahf
pop
mov
sub
sub
mov
les
pop
popa
dec
push
loop
adc
adc
xorb
xor
mov
movsl
cwtl
push
inc
inc
dec
and
fimuls
xlat
into
xchg
jmp
xor
and
ss
pushf
es
aaa
mov
imul
int3
push
movsl
testl
sbb
mov
sbbb
jl
xor
int
xchg
fildl
fwait
pop
lret
push
mov
adc
mov
ljmp
push
mov
sub
es
inc
in
nop
mov
into
cmp
das
mov
cli
mov
pop
fwait
shll
push
or
ds
pushf
xlat
std
test
jecxz
into
push
adc
enter
xor
in
daa
mov
sbb
xchg
int3
jle
inc
cmp
mov
mov
fsubrs
movb
daa
pop
push
fsincos
inc
dec
push
stc
in
push
sub
je
imul
out
leave
mov
enter
dec
loopne
pop
lock
sub
push
sti
pop
jg
or
mov
add
adcl
insb
dec
test
imull
xchg
pushf
outsl
xor
imul
addr16
jge
push
jge
decb
stc
xlat
lods
gs
inc
jmp
lods
cmp
mov
adc
adc
aas
test
dec
inc
insl
push
lret
pop
cmc
dec
pop
loopne
repnz
pop
mov
add
lds
mov
dec
js
mov
xchg
add
or
popa
lret
jle
or
jle,pn
push
push
and
jbe
stos
mov
inc
in
sub
jg
push
or
pop
sub
pusha
pusha
stc
adc
sbb
test
dec
arpl
mov
shl
dec
outsl
mov
lock
and
pop
and
shll
xor
push
cwtl
mov
inc
out
push
test
mov
rorl
fmul
jns
mov
insb
jmp
addl
lds
std
sbb
xor
fwait
cltd
inc
imul
test
in
iret
hlt
pop
lods
xorb
insb
and
roll
jge
sar
gs
daa
insl
mov
lock
adc
js
cmp
or
ja
iret
mov
cmp
icebp
outsb
jge
push
movsl
mov
add
mov
int
cmpb
out
and
out
int
mov
cmpsl
cld
xchg
cmp
les
fdivrs
dec
cmpsb
jg
shl
lds
mov
jnp
and
ds
call
add
push
rcrb
call
mov
xchg
scas
pop
xor
add
es
or
sbb
xchg
loopne
xchg
mov
ret
lods
out
jp
mov
clc
mov
pop
sbb
xor
cs
rclb
scas
pop
daa
clc
aam
lahf
jo
push
sub
pop
or
stos
jo
clc
int3
dec
mov
adc
add
mov
sub
push
leave
or
fnsave
mov
xchg
outsb
and
lsl
xchg
pop
lret
je
dec
push
dec
push
adc
pop
ds
fcmove
lea
cmp
jne
int
push
rcr
cmp
sbb
inc
jle
sbb
and
xchg
ljmp
jae
outsb
insl
xchg
push
ret
insl
push
push
in
jle
adc
pusha
push
iret
jne
lahf
sbb
mov
add
mov
xor
cs
push
clc
mov
ret
aam
jmp
in
rol
mov
addr16
push
les
iret
aaa
mov
cmp
cmp
hlt
mov
jb
adc
stc
ret
adc
ret
inc
ffreep
iret
sub
push
or
cs
inc
pusha
cmp
adc
sub
movsl
and
adc
dec
cmpl
or
pop
add
xlat
xor
mov
mov
push
mov
iret
jno
nop
outsb
jnp
cmp
in
cltd
jp
mov
call
add
lea
lods
out
ds
dec
pop
sub
iret
push
cmpb
lahf
ljmp
ret
loop
ret
out
or
repnz
dec
cmp
or
cmp
frstor
adc
xchg
cmp
jmp
xor
call
test
mov
shl
push
repz
sahf
ret
pop
bound
mov
inc
jae
add
pop
sbb
daa
outsl
xchg
pushf
loopne
lret
lods
sub
ja
pop
dec
inc
and
mov
cwtl
sub
cmc
stos
xchg
aam
cmp
xor
fcmovnb
adc
rcrl
outsl
sbb
push
aas
jb
rcl
push
psadbw
cs
mov
repnz
ljmp
into
adc
in
xchg
test
jb
daa
fcoms
add
xchg
mov
pushf
mov
out
sub
mov
push
mov
mov
stc
sub
or
xor
fcoms
clc
test
xor
mov
mov
jno
out
push
xor
push
jno
jae
or
or
add
shll
in
fdivs
test
outsb
pop
xchg
jecxz
and
fnstcw
push
or
sbb
scas
jo
push
lahf
lods
cmp
sub
aaa
lods
sbb
cmp
mov
lods
sti
xor
lcall
mov
cld
fwait
mov
out
out
outsl
nop
xchg
outsb
jl
out
inc
or
mov
stc
mov
jno
cmc
movsl
cmc
ret
push
cmp
push
push
call
xchg
xchg
mov
fildl
insl
jecxz
movsl
aas
lods
push
adc
jecxz
sub
mov
xchg
jae
pop
adc
in
stos
dec
neg
xor
fldz
inc
clc
adc
mull
and
sub
test
xlat
mov
push
push
sbb
sub
lret
dec
iret
or
hlt
ss
jns
str
movsb
fmuls
fs
fnsave
xchg
sbb
sbb
xchg
sahf
rcr
mov
add
push
inc
jecxz
negl
enter
fs
xor
pop
fucomi
pusha
cs
mov
pop
lahf
dec
inc
nop
cmpsl
cmpsl
or
sbb
inc
mov
adc
sub
mov
fcomps
call
xchg
jns
or
mov
mov
mov
outsl
adc
push
outsl
xlat
xchg
into
xchg
rolb
das
in
jle
xchg
xor
inc
test
xchg
mov
sub
cmp
pop
jmp
loope
jne
jne
mov
add
cmp
xchg
push
scas
xchg
add
in
nop
sbb
or
scas
sbbl
stos
sbb
push
or
pusha
popa
inc
xchg
std
loop
jmp
out
arpl
fmull
enter
test
xchg
aaa
ficoml
lock
insl
imul
sbb
fdivp
sub
std
pop
loop
xor
and
mov
adc
jl
aad
pop
sarl
out
mov
jge
lcall
int3
lret
jmp
or
mov
ja
cmp
std
mov
inc
fmul
mov
push
rorl
out
or
mov
pop
loopne
xchg
movsl
jno
jb
pop
notb
popa
or
into
adc
insb
mov
sarb
and
inc
out
sub
inc
loopne
mov
sbb
sub
sbb
sbb
pop
pusha
cld
xchg
jae
call
jmp
push
dec
les
push
mov
jp
cmc
mov
leave
push
fs
pop
cmp
popa
sbb
aad
out
addr16
add
arpl
pop
stc
xor
or
out
dec
xchg
or
xchg
loop
lods
stos
jle
lea
mov
mov
mov
les
movsl
pop
loope
add
gs
lahf
fsubs
cmc
pop
add
mov
loop
and
pop
jns
push
cltd
mov
jmp
cmp
imul
pop
lret
ja
xor
gs
push
push
dec
jp
insb
lods
dec
cmp
mov
xlat
sbb
shlb
jo
fbstp
dec
out
add
fisubl
faddp
pop
or
inc
lcall
fiaddl
inc
int3
lds
push
cmp
ss
sarb
sub
pushf
aas
jnp
inc
cwtl
insb
rolb
addb
lahf
sub
sub
xor
mov
push
leave
lods
aam
jmp
cs
adcl
sbb
sbb
stc
jp
mov
inc
xchg
sar
pop
mov
push
adc
daa
pop
int3
sahf
les
data16
scas
lea
scas
and
fnstsw
and
test
in
adcl
jg
inc
pop
push
jmp
push
mov
fcmovb
notl
fildll
push
push
inc
sub
xor
mov
out
jle
xor
xchg
cltd
popa
cmp
test
push
wbinvd
jb
mov
cmp
call
addl
insb
out
fcoms
into
ljmp
int
negl
subb
sub
jmp
or
adcb
pop
pop
leave
ds
popa
xchg
xor
mov
hlt
jo
xor
sbb
outsl
inc
lret
mov
jns
jns
push
into
pushf
push
insb
xlat
addr16
push
scas
imul
subb
in
cli
push
outsb
jnp
mov
adc
dec
cmp
or
cwtl
xchg
mov
xchg
inc
mov
stc
xorb
sarb
pusha
push
and
jecxz
sub
mov
test
les
xor
push
fstps
call
lea
cmp
jnp
lret
sahf
popa
pop
hlt
mov
xchg
and
jmp
mov
in
test
jecxz
xchg
jle
mov
sbb
adc
mull
mov
cli
sbb
orb
loopne
aad
rclb
aam
pop
loopne
sbb
ror
subb
out
cli
sti
js
ret
or
inc
in
movsb
mov
scas
add
jle
sbb
sub
pop
dec
push
scas
adc
push
icebp
leave
push
lds
cmp
mov
xor
sub
clc
xchg
cltd
andb
mov
inc
xor
push
mov
xor
dec
jb
js
scas
sarl
subl
lea
clc
mov
insl
jae
shrb
add
insl
stc
lcall
sub
clc
xor
mov
lea
add
push
cli
ss
mov
ss
orl
pop
pop
push
popf
pop
lock
lea
inc
data16
mov
fstl
aad
or
in
test
mov
mov
and
mov
scas
pop
mov
lcall
aas
scas
mov
je
mov
mov
mov
add
mov
cmc
out
mov
mov
push
ja
inc
loop
in
cmp
mov
out
faddl
jg
sbb
xchg
push
xchg
or
andl
popa
dec
out
sbb
movsb
cmp
push
lds
and
push
shrb
sub
add
mov
notb
cld
fstp
jns
movsl
fdivrp
xchg
xchg
outsl
adc
xor
pop
cs
adc
push
push
daa
movsl
or
lcall
or
mov
je
mov
aas
loope
hlt
xor
adc
mov
sbb
jne
aad
repnz
sub
pop
adc
cwtl
pop
test
lea
enter
gs
loope
in
rolb
lahf
mov
ja
std
ljmp
mov
sbb
cmp
mov
or
xchg
mov
cmp
test
sbb
or
mov
mov
idivl
ret
ror
inc
arpl
or
loop
and
andl
out
cli
xchg
dec
cwtl
sbb
pop
push
add
imul
pop
xchg
jbe
pop
pop
and
insb
dec
daa
push
xor
mov
les
xchg
and
push
sti
mov
jb
out
scas
addl
in
les
pop
jge
jae
jmp
les
pop
dec
lock
pushf
in
push
adc
scas
out
ss
dec
cwtl
fwait
daa
and
cli
dec
loopne
nop
dec
xor
roll
hlt
imul
les
in
cmc
dec
lahf
jo
add
xchg
lods
vcvtss2sd
xor
roll
rcrl
int3
cmpsb
and
inc
mov
mov
mov
lock
mov
mov
pop
insl
cmpsl
nop
and
test
scas
mov
adc
mulb
jmp
das
mov
pushf
jo
aam
sti
and
or
inc
push
or
pop
shrl
jne
push
cmc
notb
inc
jmp
cmp
sub
and
arpl
imul
outsb
mov
mov
fwait
or
pop
gs
cwtl
sti
lods
sbb
mov
mov
cli
dec
jb
in
xchg
xor
sbb
and
sahf
or
or
mov
clc
dec
out
sbbb
sbb
iret
std
nop
cmp
idiv
enter
lret
inc
scas
pop
push
in
jmp
jnp
xchg
js
cmp
dec
ds
nop
jle
push
add
mov
mov
xchg
sti
dec
lea
xchg
inc
push
mov
cs
in
pop
push
pop
or
mov
adcb
fld
fldcw
inc
push
pop
xchg
mov
and
pop
out
outsl
in
dec
cmp
fsubrs
fnstsw
mov
cmpb
lods
or
jl
movsl
pop
lock
jns
out
rcll
add
das
int3
mov
ret
inc
add
sahf
in
aaa
dec
pop
dec
xchg
mov
leave
je
sub
mov
dec
sbb
inc
sbb
pop
icebp
xchg
xchg
lea
or
or
jl
cmp
inc
or
movsb
out
insl
fiaddl
js
add
adc
lahf
xchg
mov
les
enter
fnstcw
ljmp
cmpsb
sbb
sub
or
jno
dec
subl
cmp
scas
lock
cmp
sub
icebp
out
out
sarb
pop
adc
pop
loopne
fnstcw
mov
mov
or
cmp
fs
es
mov
mov
or
test
push
addr16
mov
mov
mov
sbb
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
js
push
dec
cmp
push
js
call
enter
call
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
sarb
push
mov
xchg
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
adc
and
xor
dec
cli
xor
adc
jns
xchg
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aad
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
and
rcrl
jl
pop
cmpsl
imul
and
pop
xor
add
jge
jb
sub
sub
or
mov
call
and
inc
cwtl
sbbb
dec
dec
pop
xchg
out
aam
mov
movsl
loop
sti
jle
dec
cmp
adc
xchg
cmp
xor
addr16
hlt
pop
add
xor
out
xor
sub
stos
scas
cmp
pop
sbb
mov
mov
sbb
jg
push
jae
add
scas
je
cwtl
jno
enter
jg
mov
insl
xchg
out
jnp
pmuludq
imul
push
iret
lret
stos
outsl
fistpll
ret
xchg
shrl
dec
ficomps
roll
push
out
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
pop
popa
xorl
mov
and
cmp
or
lock
hlt
add
pop
xlat
and
xor
xchg
inc
orl
mov
lret
pop
nop
and
xor
fstps
mov
xor
push
lea
jo
mov
push
stos
add
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
jne
mov
imul
loopne
sbb
lret
loope
xchg
sub
lea
shlb
outsb
lock
lea
mov
jae
movsb
mov
xor
jp
call
add
subl
xchg
cmova
sbbl
testb
in
mov
mov
popw
repnz
jmp
leave
sbb
jmp
and
out
in
cmp
ficoml
mov
icebp
cmc
xchg
adc
ds
ss
mov
push
dec
ret
imul
cmpsb
stos
lret
iret
jns
cmp
pop
jl
pushf
leave
test
loope
or
fisubs
popf
add
cmpsl
and
cmpsb
ja
adc
push
xor
jl
repz
lahf
jb
stos
popf
push
jecxz
jle
push
dec
out
pop
in
push
je
inc
fmulp
je
addb
jp
pop
adc
sub
pop
sub
add
out
sub
jmp
aas
mov
add
push
xor
add
xlat
add
dec
leave
hlt
push
sbbb
lock
sub
push
mov
mov
cmpl
adc
inc
pop
jp
int3
lcall
movsb
sti
in
outsb
inc
xlat
data16
jecxz
pusha
mov
jge
cmp
sahf
lods
call
outsl
paddusb
lcall
sti
clc
jg
add
repz
xchg
or
jg
sbb
cmpsb
jmp
lds
mov
jno
mov
cmpsl
movsl
std
outsl
imul
inc
xchg
sbb
or
dec
aam
jmp
xor
mov
lods
mov
xchg
adc
movsl
stos
mov
xchg
pop
add
and
fwait
insb
xlat
fisttpll
cmpsl
in
lahf
mov
je
insb
test
cmp
adc
mov
dec
rcrb
add
movsl
inc
pushw
add
push
shlb
mov
or
clc
mov
fiadds
dec
cmp
pop
rcr
test
mov
xor
rcrl
dec
cmp
mov
jns
and
mov
sub
xor
and
lahf
jb
push
push
add
lcall
jnp
inc
and
add
mov
pop
fadds
pop
xlat
imul
jl
addr16
inc
cmpsl
mov
pushaw
dec
jo
add
xor
enter
jge
cmpl
mov
xchg
in
and
mov
inc
sbb
call
testb
or
jge
sbb
push
cwtl
hlt
in
les
mov
mov
mov
in
pop
adc
int
xchg
cli
out
xchg
nop
mov
mov
xchg
mov
and
cmpsl
sub
cmp
dec
rorl
dec
stos
inc
cli
stos
inc
lods
test
inc
dec
push
adc
popf
divl
adc
gs
mov
sub
lea
fs
aas
insb
pop
and
xchg
es
fisubs
rcll
sub
pop
sub
mov
in
sub
mov
lock
dec
mov
add
testb
adc
mov
mov
lahf
or
aaa
inc
cmpsl
mov
mov
ucomiss
xor
xor
ss
pop
sub
int
sbb
lock
xor
jl
insb
ljmp
jns
push
xchg
push
idivb
and
pop
sar
shrb
add
mov
push
mov
sbb
lds
fldt
xlat
bound
cmc
fstpl
pusha
dec
jno
insl
out
test
sub
jmp
jp
loop
sbb
lock
pop
sti
pushf
push
cmpl
jge
les
ja
inc
enter
imul
std
out
and
loopne
push
aaa
mov
pushl
jbe
jg
ja
fcmovnb
mov
xchg
and
dec
sbb
xor
dec
mov
rorl
arpl
shl
add
cld
bound
lods
test
out
imul
ss
dec
push
dec
daa
pop
jge
repz
sbb
cmp
pop
repnz
mov
int
jbe
add
push
shll
or
sti
bound
rcr
or
lods
test
aam
push
push
pop
ret
pop
mov
push
cld
push
outsl
inc
dec
add
pop
fidivs
xor
push
fstpl
stos
mov
xchg
mov
add
mov
scas
enter
hlt
adc
inc
bound
mov
mov
and
xor
adc
mov
bswap
mov
adc
sbb
adc
pop
aaa
addb
repnz
cmpsb
fisubrs
fldl
or
data16
and
push
ds
jge
rcll
mov
mov
mov
rcll
out
mov
outsl
cld
dec
sub
or
inc
out
add
jmp
inc
outsl
xor
rcll
jmp
subl
rorb
sub
mov
shlb
inc
lcall
sub
push
je
and
cmp
xor
sbb
test
mov
sub
scas
push
pop
push
addb
roll
xor
jge
aam
mov
ja
inc
outsb
ret
je
test
xchg
or
movsl
addb
push
bound
adcl
xchg
out
hlt
cs
inc
adc
jmp
inc
into
inc
sub
arpl
xor
jnp
ret
cwtl
call
xor
inc
int3
adc
cmp
sbb
sti
mov
ljmp
sarl
sbb
imul
mov
rorb
dec
xor
mov
mov
mov
or
dec
jp
jp
push
cwtl
fnstsw
push
push
and
iret
jns
sbb
lock
dec
repnz
fcoms
jle
cmp
and
aad
ret
data16
add
out
dec
push
bound
ficoms
mov
add
mov
push
clc
in
xor
test
sarb
call
gs
fildll
mov
out
jae
mov
dec
adc
dec
pop
clc
xchg
jecxz
gs
adc
and
cmp
push
mov
pop
add
cmpsb
int3
pop
stos
or
popl
arpl
mov
pop
dec
pop
cmp
xchg
pop
adc
mov
dec
xchg
xlat
inc
jno
add
cmpsb
mov
cmc
push
mov
mov
stos
addr16
adc
xchg
mov
int
mov
cltd
testl
add
scas
or
and
cs
test
push
cld
enter
push
outsb
xorl
xor
push
add
cs
dec
and
mov
in
mov
dec
push
mov
pop
cmp
stc
push
lds
in
stos
jbe
jns
lcall
sub
push
jl
add
and
mov
xor
ja
cmp
sbb
lcall
cmpb
adc
fidivl
pop
pop
lahf
add
sbb
pop
xchg
sub
testb
scas
jbe
push
cmp
xor
jp
fwait
adc
and
in
push
dec
xchg
mov
std
inc
ss
xor
data16
ret
and
cltd
fstpt
ja
push
push
xchg
popa
arpl
and
push
cs
jmp
rcll
push
sarb
mov
out
sub
outsb
ds
aaa
cmp
mov
scas
repz
fmul
push
jae
imul
and
movsb
jb
adc
mov
jbe
xlat
cli
in
adc
pop
lods
fcoms
pushf
popa
pushf
dec
cmp
sahf
mov
push
mov
push
sbb
sbb
mov
mov
cmpl
movsl
and
ret
int3
sbb
push
mov
dec
popf
dec
add
dec
adc
cld
mov
lea
cmpsb
jae
cld
fistpl
push
lcall
popf
push
xchg
aaa
jge
ljmp
pop
pop
pop
xchg
cmpsb
pop
scas
or
jl
mov
lea
push
vpsadbw
inc
sbb
xchg
es
mov
adc
pop
pusha
sbb
mov
ljmp
xor
mov
cmc
jne
cmp
jle
adc
dec
sbb
in
adc
imul
cmpsl
fsubrp
cmp
mov
mov
dec
subb
pop
shlb
cld
mov
les
xor
scas
or
xchg
mov
jle
push
mov
gs
xor
cwtl
sbb
sbb
cltd
sbb
es
inc
jae
cmp
or
xor
into
xchg
lods
mov
sub
adc
int3
and
add
inc
xchg
sbbb
notl
movsl
inc
push
mov
dec
test
mov
mov
dec
mov
jmp
imul
test
mov
das
fbstp
xchg
in
pop
add
mov
loop
mov
aas
mov
aaa
xor
mov
jnp
cmc
xor
jge
outsb
inc
sub
cli
fmulp
cmp
iret
jle
pop
lret
fildll
adcl
inc
mov
pop
mov
test
mov
push
cmp
mov
mov
aam
out
cmp
add
or
pop
mov
aas
push
jae
push
sti
sub
xor
or
dec
pushf
inc
flds
data16
cmp
xlat
xlat
xchg
stos
xchg
out
mov
pop
cmp
and
sub
cmp
cmp
sbb
pushf
mov
test
sbb
ss
fimull
and
mov
ret
outsb
adc
cs
mov
dec
cmpsl
enter
pushf
or
popf
inc
iret
outsb
push
insb
idivl
test
add
mov
inc
xchg
cltd
jle
mov
cmpsb
test
std
push
push
daa
mov
mov
out
mov
jno
outsl
stos
hlt
js
nop
inc
push
xchg
cltd
xchg
lahf
push
jo
scas
or
mov
push
mov
pop
adc
fmul
outsl
in
inc
jnp
pop
and
jmp
push
mov
mov
sub
push
rol
movsb
push
jl
cwtl
push
rcrl
ljmp
pop
adc
cmp
inc
jae
daa
add
iret
xchg
out
sbb
inc
sbb
daa
es
out
xor
stos
adc
scas
lcall
mov
add
jmp
jb
sub
add
pop
adc
lahf
rolb
out
pop
xchg
push
out
lods
dec
mov
inc
stos
sbb
stos
cmc
mov
mov
push
fisttpl
xchg
dec
cs
pop
sub
sbb
clc
je
xchg
sbb
jle
inc
and
add
call
dec
jl
dec
daa
xchg
lods
pop
js
jno
mov
idivb
or
push
pop
into
adc
stc
inc
add
lods
mov
fwait
sub
sub
push
mov
mov
xchg
jmp
pop
mov
mov
stos
push
jle
in
sbb
pop
mov
rcll
std
cli
jno
ja
sbb
push
mov
out
xor
les
enter
push
push
add
cs
nop
lcall
aad
icebp
xchg
imul
mov
fiadds
sub
dec
outsl
cli
imul
push
jge
sub
cmp
mov
jmp
push
push
add
mov
imul
js
inc
mov
add
inc
xchg
fistl
out
push
xchg
lcall
jle
into
xorb
arpl
xchg
enter
fwait
cmpsb
push
mov
pop
testl
cmpsb
pushf
dec
cmp
ret
inc
jbe
inc
fwait
outsl
and
sahf
mov
subb
sbb
cmp
std
popf
mov
sub
adcb
ficomps
in
popf
jae
daa
cmp
cmp
push
clc
negb
nop
pop
daa
sub
adc
push
xor
jae
mov
pushf
lss
jb
jp
mov
or
int
push
pop
cli
addr16
adc
adc
aaa
popf
xor
cld
jge
mov
add
adc
or
sti
and
mov
inc
ret
adc
lcall
insb
mov
daa
in
pop
mov
jno
push
pusha
inc
aaa
sub
or
push
pop
sbb
lahf
dec
inc
xchg
xchg
movsb
nop
dec
jecxz
push
fnsave
fcomi
dec
std
sbb
ret
push
mov
pusha
test
bound
inc
jp
xchg
pop
mov
pop
ss
rclb
ret
lock
mov
push
jl
dec
push
imul
mov
mov
xor
cmp
and
in
pop
adc
xor
out
mov
mov
inc
mov
xor
es
out
dec
mov
ret
inc
cld
adc
jo
std
and
and
cld
push
cli
and
cmc
mov
xor
mov
test
sub
ret
das
mov
sub
ja
test
fwait
js
or
lds
dec
adc
and
mov
mov
xor
lock
mov
pop
xchg
dec
inc
cmc
hlt
xor
jo
adc
xor
pop
icebp
ret
jbe
mov
pop
andb
test
xor
add
xorl
push
ljmp
pop
adc
ret
cmp
imul
jns
cmp
in
xor
mov
lods
mov
xchg
lret
stos
test
bnd
jae
pushf
daa
test
push
push
fisttpll
into
mov
cltd
push
cwtl
lds
test
cmp
scas
clc
lret
adc
adc
fadd
scas
push
mov
xchg
jnp
mov
mov
add
mov
inc
repz
loope
mov
inc
mov
push
hlt
sub
decb
or
ror
or
stc
es
scas
mov
aas
xlat
repz
mov
xchg
jnp
in
shrl
sbb
push
mov
stc
xlat
cmpl
pop
adc
cmpsl
fwait
imul
inc
inc
dec
rorl
cld
inc
addr16
test
fbld
dec
push
pusha
test
xchg
lret
lods
mov
cli
popf
int3
jl
cmp
shlb
push
inc
dec
es
and
iret
mov
cmp
cmp
lds
jmp
rcll
mov
sub
cmpsb
out
pop
lret
push
xorl
je
pusha
scas
and
xor
adc
ss
pinsrw
mov
xchg
mov
push
lock
mov
mov
inc
icebp
adc
mov
inc
pushf
stos
mov
mov
inc
bnd
mov
and
fstpl
imul
push
je
lds
dec
jo
xor
mov
rcll
test
adc
xchg
popf
dec
cmp
xchg
lods
adc
dec
xchg
addr16
sbb
xor
shll
adc
cmc
ret
cltd
je
mov
dec
xor
cs
fdivrs
call
inc
mov
outsb
mov
popf
cs
imul
pusha
and
jnp
add
lahf
or
xor
sbb
xor
and
ljmp
cmpsb
push
push
in
repz
std
cmp
bswap
mov
lret
mov
ja
xor
mov
xchg
addr16
fisttps
rolb
scas
push
push
xor
xor
inc
xchg
push
dec
ds
movsb
cs
xchg
pop
push
mov
mov
sbbb
or
aam
jno
jle
ds
lahf
adc
orl
push
fsts
or
add
fistl
cltd
insb
xchg
pop
das
dec
push
inc
andb
mov
movsb
dec
out
mov
sti
adc
mov
push
xchg
popf
push
jge
xor
pop
fucomi
movsb
add
push
das
out
mov
icebp
sub
or
sbb
pop
xor
insl
outsb
jae
rolb
lahf
push
pop
bound
inc
xor
rcrb
mov
inc
mov
lahf
out
add
idivl
popf
mov
cmp
push
cmp
sub
inc
js,pn
add
add
out
iret
fistpl
add
rcll
push
xchg
xlat
push
leave
cwtl
and
sbb
outsl
cwtl
das
adc
push
fs
pop
imul
lds
in
adc
jp
js
fsubl
push
lcall
call
fisubrl
mov
sbb
pop
jne
outsl
sub
stos
cs
bound
and
fstpl
inc
int
test
loope
test
push
jbe
lea
test
sub
rorb
ja
and
outsb
add
xor
xlat
cs
rcr
or
xor
cli
aas
je
test
movsb
inc
and
and
xorl
jmp
jbe
mov
sarl
mov
dec
push
aam
add
shr
or
add
sub
outsl
inc
sahf
outsl
gs
test
add
hlt
sbb
push
push
orb
mov
mov
xor
inc
xor
bound
dec
shl
sub
adc
cmc
shl
dec
insl
xchg
add
jle
cmp
bound
mov
mov
add
sub
out
xchg
mov
or
sub
or
dec
sbb
pushw
mov
jb
ja
sbb
mov
jge
sub
add
and
pop
mov
or
mul
xchg
xchg
hlt
fcoml
push
sbb
loopne
cmp
clc
test
dec
adcb
xchg
xchg
mov
push
jbe
movsb
push
popa
rorl
xchg
mov
push
jmp
push
mov
pusha
test
xor
stc
pop
inc
cld
jmp
mov
adc
pop
lcall
mov
cmpsl
jecxz
out
stos
iret
ret
add
js
mov
cmpsb
rclb
lret
fldl
int3
aad
jno
push
leave
inc
out
xchg
and
sbb
push
stos
jg
xor
xor
outsb
dec
pop
xor
inc
out
mov
out
loope
sbb
adc
outsb
or
insb
xchg
jns
aaa
sbb
inc
mov
fdivrs
dec
data16
mov
push
jp
cld
mov
jnp
enter
pop
mov
inc
or
push
or
add
popf
repz
jno
lcall
repz
xchg
sahf
and
xchg
adc
dec
out
and
push
sahf
add
pop
mov
sahf
aas
mov
mov
pop
cltd
enter
aaa
and
lods
dec
pusha
decb
sti
imul
inc
lea
cltd
push
sbb
adc
adc
lds
rclb
stos
jbe
ret
jge
and
mov
jns
and
pop
add
pop
in
cmp
push
pop
push
dec
pop
icebp
hlt
pop
mov
movsb
sbbb
pop
adc
aad
and
enter
cmc
addr16
jb
pop
inc
fs
loop
lods
mov
xor
shrl
fisttps
cmp
pop
vpunpckhbw
xorb
inc
push
scas
sarl
xchg
into
mov
cmp
test
add
push
pop
enter
cmp
mov
ljmp
mov
test
cmp
pop
add
add
adc
inc
imul
add
fldcw
imul
cmpsl
mov
and
fs
sti
and
mov
test
push
repz
and
push
inc
shl
je
mov
mov
mov
mov
inc
rcrb
icebp
ja
mov
xor
dec
outsb
icebp
js
stc
mov
rcll
jne
mov
outsl
movsb
cwtl
push
push
lock
and
mov
pop
dec
dec
fdiv
jbe
call
cmp
gs
shlb
jge
inc
xchg
in
lock
sub
cmp
xor
mov
jecxz
dec
sbb
outsl
sbb
shl
dec
sti
les
scas
in
call
hlt
pop
adc
push
aaa
andb
add
imul
sarl
rcl
out
test
fildl
cmp
cwtl
dec
sub
add
add
sub
ret
or
scas
lds
cltd
cmc
mov
aad
jno
sub
ficomps
or
jns
test
add
in
xchg
mov
xchg
push
sahf
shlb
cmp
add
add
inc
rcl
mov
or
rol
jp
mov
ljmp
icebp
inc
ret
pushf
outsl
iret
std
or
enter
xchg
xchg
adc
sub
mov
adc
lods
iret
imul
fsubl
lcall
pop
aam
lahf
sbb
pushf
push
ret
pop
dec
aad
push
sub
das
ficomps
inc
or
fcmovnb
fnsave
sub
sbb
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jg
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
ds
hlt
popa
jnp
imul
dec
mov
mov
pop
rcrl
loope
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jo
cmp
jne
or
push
xor
arpl
cmp
fimull
cmp
fcomps
enter
test
cwtl
pop
cmpsb
mov
push
pop
dec
ljmp
or
pop
and
adc
mov
push
xchg
dec
mov
out
out
cmp
imul
pop
mov
je
bound
mov
xchg
inc
sbb
sahf
loopne
and
out
inc
sub
mov
or
and
xchg
jne
xchg
sbb
lods
ja
xchg
push
inc
cmpsl
nop
cmp
and
jnp
pop
push
inc
js
pop
gs
lret
mov
iret
cli
clc
sub
ljmp
cwtl
mov
std
rorb
outsl
sub
xor
lds
cmp
dec
je
pop
inc
aas
lahf
mov
sti
cmp
lret
pop
inc
lods
xchg
sbb
div
pop
stos
call
inc
cmp
fwait
and
push
ljmp
je
enter
enter
test
cwtl
inc
sbb
pop
xorl
lret
cmp
pop
xchg
jle
push
sbb
aaa
iret
fidivrs
mov
sub
insb
mov
scas
outsl
stos
sbb
icebp
pop
mov
iret
or
js
ja
sub
mov
or
sbb
cwtl
pop
mov
pop
lcall
sbb
or
clc
cmp
or
sbb
push
jp
dec
cwtl
pop
mov
pop
lcall
sbb
or
clc
stc
mov
inc
fbld
lret
stc
test
stc
icebp
or
movsb
cmp
loope
in
imul
scas
paddw
xchg
and
hlt
cltd
xor
mov
decl
pushf
jae
pop
roll
negb
jp
mov
gs
sbb
pop
and
js
imul
cmp
mov
aaa
insb
pusha
pop
mov
rcl
icebp
and
xchg
es
pop
mov
mov
into
data16
fcompl
push
mov
out
push
popf
fmull
aas
mov
add
out
dec
push
movaps
loopne
dec
fnstenv
jp
int
jecxz
sub
iret
xlat
sbb
scas
or
pusha
dec
daa
outsb
ret
push
add
aam
daa
mov
jg
pop
sub
adc
adc
xor
rcrl
out
lea
icebp
or
lods
test
test
mov
cmc
dec
push
test
jo
mov
nop
iret
or
pop
cmp
mov
aaa
cmp
test
or
push
les
jo
jmp
fiadds
or
sub
repnz
lret
push
fmull
jp
mov
mov
mov
xchg
out
idivl
sub
ja
lock
cmp
cmp
mov
jmp
aad
mov
pop
mov
call
ja
xlat
jg
in
repz
mov
mov
icebp
jp
or
fildll
xor
xchg
les
adc
cli
jecxz
inc
xor
cli
sbb
decb
or
xchg
lea
rorl
mov
jae
int3
jno
ja
shl
dec
inc
push
orb
pop
decl
xchg
mov
pop
cltd
dec
push
xchg
xlat
inc
outsb
cmp
scas
test
mov
test
enter
sbb
movups
out
stc
pop
mov
jae
and
cmp
aad
loop
or
mov
sti
test
loope
add
not
push
cmpsb
dec
aaa
ljmp
or
inc
dec
rcrl
shlb
lea
xchg
pop
cmp
cld
subb
lret
cwtl
dec
ja
fbstp
jg
xchg
cltd
mov
mov
in
dec
ds
mov
and
fmulp
sub
in
inc
jbe
lcall
lock
mov
lcall
cld
jbe
fsubl
or
add
mov
mov
jle
and
jecxz
imul
lea
sahf
je
lea
xlat
pop
dec
sbb
int3
mov
ja
fsubrs
sbb
aam
mov
inc
and
arpl
pusha
das
mov
xor
test
fstps
jle
adc
int3
add
jecxz
push
sbb
cmpsb
lods
subb
mov
jo
mov
ds
inc
dec
out
inc
jo
and
inc
shlb
insb
clc
ror
ja
or
inc
shll
ljmp
dec
iret
mov
test
push
mov
pop
in
sbb
cltd
pop
fiaddl
jbe
cld
inc
jne
in
outsb
shrl
jecxz
dec
lcall
inc
pop
and
push
inc
jg
cmpsl
je
enter
cmp
rcll
pop
xor
out
cmp
pop
xor
push
repz
push
insl
lds
insb
push
arpl
xor
int
or
jle
add
mov
cmp
inc
movsb
ret
xchg
ljmp
or
push
mov
pushf
outsl
mov
push
mov
pop
outsl
jno
dec
sub
call
dec
iret
jge
icebp
sahf
add
pop
mov
mov
ds
fsubs
das
lret
mov
sbb
decl
mov
push
adc
fdivr
and
fdivr
add
dec
inc
pop
adc
sbb
adc
inc
pop
sbbb
push
rorl
push
in
and
push
fdivp
pop
stos
sub
lcall
add
or
mov
out
outsb
push
popl
jmp
inc
fldl
outsb
cmp
jle
push
call
insb
jno
xchg
push
cmp
inc
inc
pop
outsb
or
and
adc
push
adc
sub
cmp
push
pop
or
lock
pop
fistps
sub
add
lcall
mov
jp
add
dec
lret
mov
sbb
ret
cltd
mov
ss
jle
jnp
push
into
test
shrb
call
fdivrl
xchg
fsubl
decb
xor
jno
mov
imull
mov
pop
mov
mov
int
insl
vmwrite
xchg
mov
jno
cmpsl
ret
aaa
sbb
jg
jo
xchg
add
jmp
into
add
lret
and
jl
nop
push
mov
sbb
mov
aam
insb
jmp
je
fistpll
xor
clc
test
cltd
jmp
ret
add
fsubrs
mov
inc
testl
loopne
cmpsb
mov
cli
pop
sbb
push
dec
add
fs
lds
fucomip
dec
bound
shr
aam
xor
pop
sub
sub
sbb
gs
mov
idivl
fbstp
ret
add
push
pop
and
fsts
mov
adc
lcall
das
mov
mov
je
jns
jecxz
arpl
adc
out
inc
pop
fcmovne
dec
jns
rcll
ret
inc
mov
and
cld
lea
xor
fisttpll
xchg
shll
cld
mov
add
mov
lret
xor
adc
lea
andl
mov
subb
popf
mov
and
stos
pop
setb
pop
sbb
xchg
push
mov
mov
iret
adc
mov
test
pop
out
scas
or
mov
loop
or
fsubrp
dec
and
std
pusha
adc
movsl
xchg
ss
dec
mov
xor
push
js
xor
loope
add
in
fcmovne
in
jo
push
push
dec
fsubl
adc
insb
insl
cmp
clc
sahf
jle
xchg
into
repnz
addr16
xlat
inc
cmp
je
or
lods
pop
xchg
leave
sub
dec
push
test
xchg
jmp
repnz
cmpsb
cmpsb
into
jmp
pop
mov
clc
adc
fwait
mov
pop
sub
bound
jno
jle
pop
or
sub
push
dec
jl
xor
xchg
push
or
scas
mov
xorb
cmc
pusha
aad
out
sub
fstpl
pop
jb
push
mov
dec
xchg
ja
stos
mov
shlb
jns
jecxz
shlb
dec
arpl
fisubrl
cmp
ss
repz
rorb
push
add
lret
roll
adc
rcrl
mov
outsb
das
xchg
ljmp
and
pushf
push
lea
push
movsl
es
xor
cli
pop
sub
xchg
daa
jl
mov
add
mov
mov
into
fsubrs
cld
xchg
shll
imul
pop
sub
enter
addr16
outsb
jge
incb
cmpsb
cmp
repnz
sub
mov
out
divb
lods
pop
insl
insb
pop
adc
mov
repz
fdecstp
fcoms
cltd
ret
mov
in
fisubrl
pop
test
mov
mov
xchg
push
sbb
in
ds
or
mov
fisttps
pop
fsubs
out
dec
cwtl
cwtl
sti
adc
les
mov
add
andb
lods
mov
mov
pop
pop
clc
jae
lods
je
fiaddl
push
xor
icebp
sahf
sbb
ljmp
sbb
cmp
mov
js
adc
xor
jno
insb
in
inc
adc
lcall
jl
mov
xchg
jae
push
jl
imul
xor
sbb
ficoms
in
pop
jmp
cld
inc
lods
mov
aas
out
mov
adc
mov
and
mov
stc
addr16
and
pushf
jno
data16
dec
inc
lds
add
dec
cmp
jae
shlb
loope
pop
cli
mov
mov
jl
xchg
in
ffree
jne
je
lock
adc
outsl
xor
sahf
cmpsw
cmp
out
push
push
pop
jl
cmc
lcall
fldenv
out
cmp
inc
mov
sub
mov
and
clc
ret
cli
ja
movsb
enter
arpl
pop
out
ret
and
fistpll
loopne
pop
mov
xlat
in
int3
clc
mov
lcall
call
je
lret
adc
jge
sar
xchg
lea
or
std
jmp
or
addr16
outsl
pop
imul
mov
jecxz
push
push
lods
ret
mov
sub
shlb
js
orb
adcb
xchg
lahf
movsb
rcrl
cmp
daa
scas
push
mov
dec
push
mov
rcrl
rcr
fucomi
sub
dec
clc
lds
add
mov
xchg
lods
lods
arpl
jp
mov
call
xchg
in
jnp
jg
aaa
dec
xor
pushf
pop
mov
scas
push
push
test
ds
data16
mov
std
pop
jl
sub
daa
xor
pop
test
jg
push
movsl
sbb
inc
loop
dec
pop
shll
dec
push
lea
mov
scas
adc
adc
in
shrl
enter
movsb
and
lock
aad
cmp
fwait
mov
das
decb
enter
lahf
mov
inc
scas
sub
cmp
mov
mov
loope
repnz
ret
int
into
test
adc
xchg
es
rcrl
es
jbe
popa
repz
out
mov
jmp
and
jb
negl
or
pop
inc
jb
outsb
xchg
adc
test
xlat
stos
test
mov
xor
jae
add
or
outsb
cld
mov
nop
inc
jmp
pop
rcrb
icebp
jbe
lar
jp
loope
xchg
out
adc
cmpsb
or
cmp
pop
dec
lret
shll
pop
pop
sub
inc
and
push
jne
xor
jns
xchg
adc
je
inc
push
gs
and
dec
cmpsb
inc
sbb
fdivr
and
iret
jno
icebp
pop
xor
test
mov
lock
add
cmp
cmp
arpl
pop
cli
push
dec
imul
lret
jle
cmp
jmp
sub
test
test
rorb
stos
push
ret
cmovae
jecxz
lret
mov
imul
addr16
stos
xor
inc
or
mov
daa
aaa
stos
adc
js
push
mov
out
cwtl
cmc
loope
ss
jmp
push
sub
push
jo
popa
test
xchg
push
cwtl
push
jae
jl
dec
push
loopne
std
aas
or
fdivrl
push
imul
mov
add
insb
jle
lret
cmpsl
dec
mov
in
lock
mov
scas
mov
cmp
inc
loop
enter
sbb
or
adc
pop
xchg
xchg
movsl
stc
stos
out
mov
testb
cmp
inc
mov
in
inc
xor
cmp
daa
in
aam
mov
xchg
insl
xchg
and
jle
imul
sub
test
sub
clc
mov
cld
mov
lea
lret
pop
pop
xor
cwtl
out
cmp
mov
and
in
push
xchg
loopne
push
dec
call
sbb
ds
push
das
fistps
sub
mov
loope
imul
insl
jmp
stos
das
pop
mov
fcmovne
repz
xor
adcl
sahf
shrb
rorb
mov
add
mov
cld
sbb
into
sbb
jge
mov
push
inc
int3
mov
fcom
inc
cmp
rcrb
pop
cli
mov
jb
inc
pop
pop
xchg
mov
xor
arpl
ret
lcall
test
mov
or
das
xorb
jge
dec
rcr
adc
add
test
mov
pop
push
inc
sbb
sbb
push
mov
inc
call
push
rcrb
jnp
std
test
fnsave
iret
jbe
add
outsb
sbb
cmp
push
push
pushf
push
jbe
inc
mov
push
add
and
pop
sub
stos
sub
stos
lock
inc
pop
ret
pop
jne
ja
pop
sbb
hlt
and
mov
clc
lcall
iret
jnp
int3
fadds
mov
in
mov
fwait
jmp
push
ss
lods
jmp
xor
sti
sub
adc
lods
xorb
aad
pusha
movsl
cs
pop
cmp
cmpsb
popa
mov
fdivrs
insl
cmpsb
scas
and
popf
and
push
shll
std
xor
mov
in
out
push
popa
cs
outsl
fiaddl
bound
jbe
cmp
fadds
lcall
and
pop
dec
mov
aas
adc
insb
mov
sarb
jecxz
pop
inc
movsb
das
daa
push
scas
jnp
xor
rclb
mov
pop
mov
sti
pushf
pop
sbb
pop
and
fdivrl
mov
push
into
xchg
lahf
sub
outsb
into
adc
jb
jno
loope
sbb
into
test
jno
hlt
in
jne
fmul
js
insl
out
and
add
fisttpl
cwtl
jg
mov
stos
jecxz
mov
push
imul
pop
pop
shrb
pop
or
out
lret
lret
out
pusha
sbb
fs
rcll
shrl
mov
and
sarl
fnstcw
sar
adc
push
mov
aam
xchg
sbb
hlt
jmp
loop
aam
ljmp
jo
and
pop
mov
std
xor
cmp
or
incl
rorl
mov
add
roll
cmp
shlb
jae
cmp
and
adc
cmp
bound
xchg
push
mov
outsl
pop
or
dec
addr16
in
outsb
lcall
aad
dec
xchg
sub
outsb
jbe
dec
push
xchg
dec
pop
or
xchg
aam
jp
jnp
jae
mov
add
lock
xor
cli
icebp
mov
out
push
rcrb
daa
cmpb
sbb
cmp
cmp
xchg
jmp
lea
cmp
mov
cmp
int
in
test
outsl
xchg
xor
fildl
sbb
add
pop
loopne
mov
or
fwait
or
mov
pop
dec
push
cltd
sub
mov
mov
add
scas
push
pusha
cli
pcmpgtw
cwtl
test
roll
jae
nop
test
out
push
sbb
sbb
cmc
cli
out
sbb
fcmove
pushf
sub
cmpsl
inc
daa
aad
pop
dec
xor
cltd
fisubl
dec
test
cmc
popa
insb
jg
cwtl
add
jo
js
mov
sbb
int3
pop
gs
sti
fs
push
fstpt
bound
repz
push
cmp
mov
or
and
shr
gs
insb
sbb
cs
lcall
or
in
jmp
test
outsb
xchg
adc
and
inc
mov
stc
inc
fnstenv
or
nop
and
dec
sti
sub
mov
xchg
sbb
fisttpl
dec
push
jns
jmp
jge
popa
pusha
xchg
sub
test
jne
shlb
std
aas
jo
and
lahf
pop
out
xchg
lret
ljmp
ja
and
mov
ss
xchg
dec
xorl
mov
mov
or
dec
cmp
pop
shll
dec
sti
sahf
and
ja
pop
call
dec
mov
fdiv
sub
mov
xlat
lods
or
or
popa
pop
mov
es
out
fdivr
inc
mov
dec
or
jns
fisubrs
stos
fisubrl
pop
popa
hlt
inc
and
xlat
loope
movsb
xor
sbb
sbb
test
fcomip
ja
movsb
push
xchg
or
inc
gs
cmp
push
sub
cmp
xchg
mov
scas
insl
mov
add
adc
iret
aaa
xor
pop
mov
push
popa
fistl
add
movsl
xor
addb
mov
hlt
lret
pop
sahf
arpl
fs
in
sbb
or
inc
popa
orb
push
fs
jmp
leave
mov
stc
lcall
mov
jle
daa
xlat
lret
push
push
loope
xlat
mov
and
imul
mov
inc
push
adc
rcrb
xor
loop
xchg
movsl
insl
xor
sub
xchg
lock
or
mov
sub
les
roll
add
adc
jno
and
xchg
push
push
arpl
xor
xchg
pop
or
js
push
out
cmc
mov
fisubl
push
cmpb
dec
and
xchg
sub
jp
roll
or
jmp
fstpl
push
movsl
test
into
jb
dec
add
jge
xlat
addr16
fwait
xor
sub
ret
sti
les
jg
cmc
sub
fldcw
into
shll
or
mov
faddl
cmp
into
in
dec
adc
call
int
aaa
jg
daa
aam
xchg
test
mov
out
aad
lds
inc
jns
mov
inc
lods
and
xor
cmp
add
mov
dec
pusha
mov
jmp
push
jp
mov
or
mulb
push
cmp
jno
jns
pop
dec
hlt
push
mov
divb
test
stos
add
jbe,pt
bound
push
pop
jbe
sbb
push
jecxz
out
inc
sbb
mov
fistl
mov
das
cmpb
stos
subl
sub
mov
lret
lock
adc
inc
jbe
mov
cmp
cmp
shr
jecxz
test
pop
cmp
shlb
adc
shrl
xor
mov
out
add
call
add
imulb
sub
jle
add
addr16
adc
push
mov
cmp
cmpsl
inc
adc
xor
pop
aas
inc
add
clc
sbb
mov
les
mov
ret
sti
test
mov
shll
push
mov
mov
adc
add
dec
jmp
jle
dec
jnp
es
sbb
pop
stc
bound
pop
loope
jge
loopne
movsw
jge
pop
enter
sahf
sub
call
enter
xchg
dec
fidivrs
mov
pop
mulb
dec
fnsave
clc
sahf
mov
fsubrl
push
jne,pt
and
incb
or
jae
cmp
lods
pop
jb
xor
mov
imul
test
sbb
xchg
push
jecxz
call
repz
lcall
push
mov
int3
jp
cmp
add
fwait
xor
aaa
in
ss
pop
jbe
sbb
popl
test
jmp
and
mov
cmp
std
pop
aam
pushf
mov
xchg
xchg
jae
std
scas
mov
jle
popf
mov
adc
push
clc
clc
push
pop
mov
jmp
and
in
xor
ret
mul
dec
push
das
jno
add
adc
shrb
mov
xor
or
popf
cmp
jno
push
mov
mov
clc
outsl
add
fdivs
pop
push
call
xchg
fdivrl
or
mov
push
lret
mov
and
das
insl
repnz
xchg
jno
adc
fs
mov
jle
xchg
jecxz
mov
divl
xchg
imul
sbb
add
jecxz
cmp
fiadds
add
xor
mull
shr
xor
imul
mov
repnz
adc
fdivrl
mov
and
mov
andl
sub
sub
ljmp
inc
sub
addl
out
and
fisttpl
in
cmpsb
js
jns
out
adc
out
or
std
data16
shrl
cltd
jne
shll
sub
add
cwtl
mov
mov
sbb
sub
mov
scas
cmc
je
xchg
cmc
ja
sbb
out
mov
out
insl
jno
test
fsubl
fxch
scas
dec
and
lea
ljmp
sahf
nop
sar
cld
mov
call
bound
popa
jns
mov
mov
outsl
fs
cmp
inc
jmp
loope
lods
ror
xor
or
movsb
lret
in
inc
fldt
movsb
adc
sbb
push
xchg
aaa
aaa
adc
push
andl
push
jne
jo
popf
and
mull
aaa
and
mov
imul
pop
adc
negb
xchg
xor
jmp
pusha
sub
xchg
outsl
out
call
lret
outsb
sub
movsl
inc
cwtl
mov
out
sub
xchg
xor
mov
das
mov
inc
xor
xchg
movsl
push
iret
add
xor
push
adc
jl
bound
inc
imul
sbb
push
jp
dec
cwtl
pop
mov
pop
lcall
sbb
or
clc
cmp
or
sbb
push
jp
dec
cwtl
pop
mov
pop
lcall
sbb
or
cld
cmp
or
sbb
push
jp
dec
pushf
pop
mov
pop
lcall
adc
in
push
sbb
or
cmp
mov
jp
lret
dec
push
xchg
and
aas
popf
inc
jb
xor
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
