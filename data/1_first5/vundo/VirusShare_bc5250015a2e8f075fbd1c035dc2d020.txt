add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
inc
movhps
data16
jbe
daa
aas
ja
push
or
lahf
add
neg
or
jmp
orps
data16
jbe
push
dec
push
jg
outsl
sbb
out
scas
neg
test
xchg
jmp
seto
cld
das
add
dec
pop
jg
outsl
add
cmc
int3
xchg
lock
adc
dec
xor
dec
out
hlt
movsl
xchg
negl
push
sub
cld
sbb
jb
scas
std
xchg
inc
mov
lret
mov
lret
popf
je
cltd
leave
imul
sub
sub
test
idivl
cmpsl
xchg
ljmp
lahf
in
inc
out
or
inc
push
jb
jno
inc
push
push
dec
bound
es
lahf
xor
mov
and
in
lret
jnp
push
fwait
pop
mov
xor
outsb
lret
jae
scas
push
es
push
in
int
pop
cmc
cli
cmp
mov
iret
cmpsb
cmpsl
dec
mov
adcb
iret
xchg
in
inc
xor
pushf
jecxz
into
sar
dec
xchg
inc
lret
aas
adc
jbe
push
dec
push
jg
outsl
movsb
lahf
jle
in
lret
iret
js
mov
cmp
dec
sbb
mov
jno,pn
test
xchg
mov
sarb
adc
dec
sbb
push
and
outsl
add
mov
mov
ret
out
lds
imul
dec
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
stos
add
mov
or
pop
jns
adc
jg
and
data16
iret
andl
popf
daa
push
or
fisttpll
fcoms
push
jecxz
mov
mov
fidivs
adc
pop
mov
icebp
ret
dec
fldl
aas
jmp
or
outsl
adc
lahf
jp
mov
pop
stos
xor
inc
push
fwait
add
jb
aad
add
and
lds
fstl
icebp
cmp
xor
dec
into
hlt
mov
scas
ja
xchg
fsts
xchg
mov
xor
dec
in
inc
sbb
push
dec
sbb
mov
jecxz
cld
pop
pop
pushf
addr16
push
inc
es
inc
aam
xchg
push
and
add
dec
sub
int3
xchg
fbstp
out
jg
jecxz
std
mov
stos
sahf
and
lods
out
dec
dec
cli
lds
and
pop
rorl
movl
pushf
aam
out
inc
lock
mov
leave
insb
add
aam
ret
push
mov
xor
jg
sub
hlt
movl
pop
insl
cld
out
jecxz
adc
jp
out
movsl
xchg
mov
sbb
fstpt
ds
pop
cmp
fiaddl
push
cmc
cmp
jl
jecxz
insb
int3
std
dec
push
incb
mov
or
loop
insl
jp
loop
xlat
je
mov
lods
sarb
add
leave
xchg
xor
and
movsl
adc
or
push
xlat
cmc
shll
sbb
mov
mov
lods
xchg
sbb
mov
loop
loop
ficompl
popf
dec
nop
mov
stc
inc
xor
fwait
das
bound
or
cmp
sub
add
fdivs
cmp
or
jbe
lock
push
scas
mov
push
push
inc
int3
into
imulb
adc
xchg
test
inc
aas
lahf
dec
jno
jg
sti
pop
adc
push
js
xchg
pop
aam
mov
add
jge
sub
cmp
jle
pusha
sub
mov
add
insl
or
and
xchg
lds
pushf
mov
xlat
sub
inc
pop
jmp
cmp
add
call
mov
dec
jo
lods
push
cmp
cmp
inc
ss
push
dec
test
dec
pop
cs
and
pop
in
hlt
jmp
shrb
js
lcall
inc
xor
xor
dec
cmp
cltd
xchg
mov
fstpl
jbe
mov
push
or
pop
pushf
push
jp
mov
adc
mov
out
iret
add
movsb
sub
xor
shll
out
pusha
and
fists
scas
pop
fisubrl
dec
sti
and
out
cmp
pop
addb
call
and
mov
xlat
pop
int3
jge
iret
xchg
add
ss
daa
je
iret
inc
imul
and
cmp
movsl
popf
rcrl
dec
xor
jge
daa
and
fidivs
scas
rcll
lock
xchg
mov
xor
pop
mov
inc
les
sti
xor
jo
xor
leave
stos
gs
push
pusha
icebp
or
inc
sbb
xor
inc
test
test
popf
push
test
push
ret
and
movsl
mov
fcoms
addb
enter
or
pop
mov
ds
pop
fucomi
mov
repz
arpl
outsb
mov
mov
gs
adc
lcall
popa
out
sbb
dec
push
mov
cmp
iret
ss
nop
push
bnd
pop
sbb
inc
adc
pop
dec
rcll
sub
push
or
mov
popa
or
mov
aas
pop
dec
inc
and
add
push
xchg
ficoml
sbb
xchg
mov
iret
out
fucomi
fwait
pop
and
pop
mov
xchg
xor
clc
adc
pop
mov
inc
out
insl
mov
and
add
push
push
movsb
cs
push
fcmovnbe
inc
adc
mov
mov
or
mov
gs
mov
popf
and
add
or
dec
insb
push
cmc
mov
cmp
test
pop
and
pop
dec
std
jle
mov
int
out
xchg
clc
mov
sbb
ljmp
inc
dec
fimuls
movsb
cs
cmp
insl
mov
push
sub
icebp
add
roll
fildl
iret
popa
sbbl
scas
mov
data16
mov
in
or
addl
xchg
mov
dec
dec
push
dec
aam
test
ret
fwait
or
jmp
arpl
add
xor
ret
out
dec
orb
dec
push
dec
insl
cmp
outsb
jg
lds
pop
lcall
js
sub
xor
adc
mov
cmpsb
push
pop
int
and
sub
pop
stos
push
jle
aad
aas
pusha
out
jbe
adcb
cmp
and
adc
sub
push
adc
shll
sbb
mull
js
pop
sbb
jp
lods
mov
lcall
ss
scas
aas
mov
sahf
mov
mov
outsb
cs
out
pop
icebp
mov
inc
into
cmp
adc
rclb
lcall
or
dec
enter
or
clc
cmpsb
sbb
jbe
jle
and
test
gs
shrd
pop
imul
inc
aaa
mov
into
cli
imul
into
insl
add
mov
xlat
add
popa
and
xor
or
test
or
aam
adc
aas
jecxz
mov
xor
push
mov
rcll
sbb
mov
in
das
ficomps
rol
cmp
fnstenv
or
cli
inc
scas
arpl
dec
clc
jmp
out
xchg
adc
rorb
cmpsb
xchg
inc
pusha
sarb
call
shrb
dec
adc
inc
cmpsb
jb
xchg
out
add
shrl
sub
push
add
pusha
jge
lods
pop
push
cmp
mov
gs
dec
xor
insb
call
ret
or
jbe
shrb
call
and
fdivs
or
mov
sub
push
mov
sbb
dec
or
and
ret
and
out
in
stc
leave
aaa
daa
jns
jge
push
or
fisttpl
clc
dec
sbbl
out
or
pop
mov
pusha
xchg
and
inc
test
jo
mov
adc
call
data16
xchg
push
ljmp
in
jne
jb
xor
inc
popw
push
jl
push
js
push
leave
push
jge
xor
mov
dec
sbb
gs
loope
lcall
mov
rorl
lahf
cmp
xor
pop
pop
cmp
loope
decl
jp
push
cmp
adc
call
mov
lcall
xorb
pusha
into
dec
movsl
xchg
mov
imul
bound
mov
xchg
push
daa
xor
mov
cmc
pusha
or
xor
outsl
jbe
sarb
std
ljmp
arpl
adc
jnp
jo
xor
add
mov
fistl
in
pop
aas
addr16
inc
sub
push
das
mov
add
frstor
aas
cmp
mov
int
std
dec
shrb
push
mov
inc
mov
xchg
xchg
jl
pop
pop
clc
and
adcl
or
in
fs
nop
pop
lahf
mov
cld
or
xchg
add
cmc
cmp
mov
pop
test
scas
xchg
nop
mov
mov
mov
bound
dec
cmp
enter
xchg
mov
adc
or
pusha
adc
jp
les
ror
xlat
or
push
push
mov
inc
int
mov
ret
adc
dec
call
mov
inc
inc
mov
sub
scas
jbe
ficomps
pusha
stos
jns
inc
shlb
xchg
leave
xchg
lea
dec
jmp
xchg
inc
lods
push
mov
lahf
pop
movsl
test
cmpsb
mov
xchg
sub
je
inc
and
jo
loope
sbb
ja
popa
pop
out
pushf
inc
aam
lea
fsubr
js
ret
push
pusha
or
xchg
xchg
pop
stc
push
cmp
lods
adc
add
jmp
cmpsl
ljmp
bound
cs
jne
mov
push
xor
pop
jno
add
hlt
lds
pop
or
in
or
inc
adc
pop
jp
arpl
in
lods
xchg
xchg
xlat
fstpt
xor
inc
fbstp
hlt
mov
std
mov
dec
ds
rcrb
mov
fdivs
mov
xchg
pop
lea
fiaddl
adc
bnd
and
or
xor
adc
cmpsb
insl
int
pop
jae
imul
mov
dec
fwait
mov
imull
cmp
arpl
mov
inc
sbb
push
movsl
mov
push
push
xchg
cwtl
xor
sub
fnstenv
jns
push
inc
fldenv
repz
pop
jge
push
adc
js
sub
mov
cmc
andps
sub
mov
mov
icebp
sub
jge
cld
push
cmp
mov
cltd
sbb
add
cmpsl
pop
cmpsl
jne
sbb
lret
xchg
push
call
dec
ficomps
jne
stos
addr16
dec
adc
cwtl
jle
call
fistpll
fs
popf
pop
leave
pusha
cmpsb
in
je
cmc
push
test
mov
shrb
adc
fsubrl
out
and
push
fstpt
test
xchg
adc
dec
dec
mov
dec
xchg
inc
stos
nop
sub
pusha
push
add
mov
sbb
mov
out
dec
push
loop
subl
mov
mov
cli
mov
jle
mov
pop
out
dec
mov
les
out
lods
popf
loop
and
mov
cmp
sahf
sbb
jecxz
insb
mov
fwait
out
insb
xor
les
call
idivb
adc
sbb
or
add
adc
sti
pop
add
xchg
and
frstor
and
mov
es
pop
xchg
push
sbb
jo
lret
sub
add
dec
js
adc
pushl
inc
jecxz
mov
movsb
aad
mov
jg
pushfw
xor
movsl
push
sahf
icebp
mull
leave
inc
sub
jne
dec
or
outsb
pop
xchg
push
mov
mov
jo
mov
xchg
xchg
int3
adc
incb
xchg
or
pop
sub
jbe
jmp
or
movsb
mov
xchg
fsubl
sub
cli
xor
vphsubwd
repz
clc
adc
enter
ss
mov
in
popf
dec
in
ljmp
cmpsl
ljmp
adc
pushf
sub
and
out
xlat
dec
and
mov
add
xor
pop
xor
aad
scas
ja
push
cmc
rol
lods
dec
sbb
bound
insb
int
mov
adc
cmpsl
jle
pop
in
push
xor
mov
test
push
lea
jae
cwtl
mov
sub
inc
xchg
xchg
std
das
mov
pushf
fwait
mov
call
adc
aad
std
dec
sti
in
ja
cli
xor
dec
xor
cmp
inc
xchg
sti
mov
call
out
push
subb
lods
and
shlb
fwait
jmp
je
xchg
rorb
push
mulps
sub
pop
loopne
mov
jne
mov
cmpsb
enter
xor
cmp
sub
jmp
in
push
repz
shlb
dec
fwait
pusha
rcl
or
and
inc
jle
in
aad
mov
mov
sahf
aam
std
sti
and
repnz
in
xor
mov
dec
push
scas
jmp
scas
xchg
cmp
insb
scas
les
mov
push
pusha
movsl
roll
into
outsb
xchg
sub
dec
iret
push
jns
xchg
cmpl
and
mov
push
aad
xor
add
iret
lcall
sarl
jecxz
mov
fisubrl
and
into
jg
cmc
cmpsl
out
imul
add
mov
inc
sti
cmp
adc
sbb
push
dec
mov
out
and
stos
pop
adc
pop
imul
adc
mov
mov
sahf
inc
sahf
loopne
and
pop
adc
or
pop
push
cs
lret
or
or
and
adc
lcall
outsb
xor
pushl
mov
ret
adc
outsl
fcompl
mov
jns
push
lret
add
clc
sbb
fstl
adc
loope
fwait
jecxz
ljmp
xchg
pop
push
xchg
mov
xor
inc
mov
adc
cmp
adc
push
fnstsw
or
and
or
mov
cmc
fisttps
jb
inc
xchg
and
test
mov
lods
xchg
pop
jmp
in
aad
loopne
inc
lea
mov
xchg
gs
mov
cmp
xchg
or
and
xor
lods
adc
lods
push
jnp
jnp
adc
push
xchg
sbb
fs
xor
xchg
or
jae
inc
fwait
cmp
sub
pop
dec
stos
bound
add
mov
data16
int
out
xor
jge
cltd
push
push
mov
or
push
cmp
call
jmp
dec
int3
push
adc
pop
stc
je
dec
pop
pop
stc
inc
cmpsb
imulb
mov
push
mov
add
shrl
lods
scas
in
inc
ja
xor
leave
mov
jmp
pop
je
push
push
lret
or
mov
or
sub
sbb
sbb
jbe
fdivs
and
sub
mov
in
jbe
shll
adc
inc
pop
lret
dec
pop
mov
es
iret
xor
or
cmpsb
aas
or
mov
test
jge
aam
pop
cs
pop
daa
lcall
sbb
arpl
roll
xchg
int3
stc
int
add
pop
fisttps
clc
mov
je
outsb
leave
xchg
inc
aaa
mov
inc
aas
int
sub
sbb
imul
add
pusha
xor
stc
push
jne
sarl
int
shlb
inc
ja
mov
dec
ret
popa
push
or
dec
mov
cmpsl
mov
cmp
push
jmp
mov
cmpsb
fisubrl
mov
nop
lock
movsl
xchg
mov
sbb
cwtl
js
enter
cmp
add
and
lret
jl
lods
js
movsb
mov
sbb
test
xchg
and
adc
sub
xor
push
push
jecxz,pt
js
loopne
jg
aaa
cmpb
hlt
cld
jae
pop
outsb
xchg
mull
gs
jnp
cmp
lods
cmc
xchg
das
and
and
int
bound
xchg
jmp
repz
sbb
stos
mov
mov
leave
aaa
les
mov
leave
push
jnp
add
lret
jge
shlb
jae
das
loope
ret
shl
scas
push
sub
aaa
jg
jno
push
mov
jb
xchg
cwtl
bound
test
mov
mov
out
ror
mov
add
mov
lea
cli
fld
lods
aaa
shl
dec
push
pop
push
fcmovnu
jl
mov
pop
pop
or
add
rcrb
stos
push
inc
icebp
mov
and
jmp
cmp
fs
dec
pop
jbe
ret
lock
sbb
mov
fisubl
cmc
pushf
jns
data16
test
cmp
cs
xchg
loopne
mov
jbe
stos
pop
mov
dec
push
shr
mov
pop
dec
jecxz
push
loop
or
sub
popa
fadds
add
stos
mov
es
clc
sub
push
mov
xor
arpl
es
out
sub
lcall
test
xchg
jp
loop
addb
sti
xor
xor
cmc
fdivs
mov
cli
inc
add
dec
xchg
mov
int3
fucomip
shl
mov
add
xlat
sahf
jg
jnp
insl
inc
shlb
neg
dec
das
xlat
sub
aad
cmp
mov
jle
cmp
sub
mov
push
sub
cmpsl
dec
push
stc
in
dec
sbb
fwait
jecxz
push
lret
xor
jg
jno
xor
jb
sub
xchg
sbb
rcr
test
jb
sbb
xor
or
mov
lea
adc
mov
movsl
std
mov
pusha
adc
adc
repz
mov
adc
push
scas
jne
ret
daa
xchg
test
inc
cmp
sbb
test
decl
inc
lret
sti
clc
and
dec
and
push
mov
jnp
mov
es
inc
pop
cs
xchg
adc
push
out
popf
mov
dec
push
xor
fsubrl
outsb
xor
bound
xor
push
cmpsl
aam
int
iret
mov
subl
xor
test
test
pushf
nop
jge
sbbb
mov
shl
xchg
cmp
mov
push
shll
and
aas
push
mov
inc
arpl
outsl
out
iret
add
and
out
cltd
movsl
push
add
mov
sbb
int3
shrb
cld
loop
popf
sub
push
xor
jl
inc
push
cwtl
jg
push
inc
inc
jb
iret
sahf
js
push
jno
negb
clc
jne
popf
js
add
mov
cltd
stc
fdivrs
push
mov
jno
lret
sub
and
adc
xchg
push
mov
dec
adc
or
movsb
sub
movsl
jle
mov
inc
imul
enter
lds
mov
subb
sbb
shr
insl
or
and
ljmp
fwait
ret
pop
pop
jge
sahf
pop
pop
xchg
mov
mov
sub
stc
repz
inc
test
test
int
and
and
mov
sub
pop
pop
cli
or
arpl
cmpb
push
xor
mov
or
push
lcall
nop
decl
mov
lods
pop
and
lods
lcall
push
add
mov
or
outsl
sub
pop
mov
jmp
adc
mov
fdiv
popa
mov
xchg
cmp
daa
push
popa
xchg
mov
pushf
mov
cmc
ret
adc
icebp
fisttps
push
aas
inc
cwtl
cld
push
int3
jmp
icebp
ss
fdivl
loopne
cltd
ror
pop
lahf
subps
mov
cmp
pop
mov
das
and
adc
pushf
cmp
xchg
sti
or
lahf
jle
jmp
push
xor
shrb
xchg
jnp
inc
aad
fisttpll
icebp
xchg
push
inc
rcl
lret
out
and
mov
mov
add
lods
das
testb
iret
insb
jo
dec
pushl
jg
repz
lods
pop
pop
subl
test
add
jb
jbe
pushf
andb
cs
xchg
rorl
addr16
or
mov
sub
xchg
adc
xlat
cmp
das
pop
mov
adc
repnz
ljmp
mov
in
cwtl
cmp
jne
fxch
push
sub
fdivrs
sbb
sub
inc
lcall
inc
pop
xchg
iret
sbb
jnp
call
push
lret
insb
and
in
out
insl
and
cmp
xchg
jmp
inc
cmp
pop
dec
jnp
inc
fmuls
rclb
fisubrl
and
ljmp
and
mov
mov
xchg
cmc
orb
lods
jbe
pop
mov
fcmovb
jle
imul
insl
push
mov
mov
cli
jl
gs
shl
mov
pop
jge
shl
leave
adc
stc
stc
and
xor
and
repz
ja
pop
fisubrl
adc
and
xchg
imul
repnz
jle
aam
loopne
sbb
int3
xor
pop
jl,pn
xchg
xchg
lods
pop
xchg
sub
xor
lods
dec
loopew
jecxz
nop
repnz
adc
inc
push
in
pop
sahf
aam
or
aas
sti
btc
test
mov
test
cmp
arpl
mov
call
stc
xchg
movsl
jmp
fidivrs
pop
pop
pop
insb
ror
xchg
fs
pop
outsb
mov
or
hlt
aad
jnp
mov
add
pushf
sub
mov
dec
div
mov
ljmp
xchg
fucomip
xchg
cmp
lret
mov
push
insb
fsubrl
mov
and
das
hlt
loopne
ficoml
xor
sub
fisubrl
mov
push
lea
dec
mov
cmp
push
inc
cmpsl
movsb
faddl
test
mov
adc
test
mov
mov
outsb
loop,pt
fs
cmp
les
jl
jne
pop
pushf
rcrb
out
fs
sub
lods
movsl
dec
push
mov
xor
or
cmpsb
shlb
mov
clc
push
insb
xor
lret
or
dec
sarb
arpl
sub
movsl
inc
ds
add
push
or
es
std
jle
leave
mov
mov
push
dec
sarb
push
sahf
xchg
aas
movsb
shrl
cmc
std
and
pop
insl
jmp
data16
mov
popa
leave
pop
ret
jl
mov
les
or
fcoms
nop
cltd
xchg
sbb
arpl
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
addps
jle
jb
push
dec
jge
and
lahf
sarb
or
ljmp
lss
subb
pop
push
dec
push
jg
outsl
negb
out
subl
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
js
popf
add
xor
and
in
or
and
movsl
test
aam
dec
aad
adc
add
xor
and
push
gs
push
je
adc
cwtl
movsl
test
cmpsb
add
out
or
ret
cmp
dec
sub
jle
xchg
leave
cmpsl
repz
rcl
fwait
mov
mov
je
push
jb
pushf
and
xchg
leave
lcall
dec
nop
or
popf
cmp
mov
and
mov
mov
fwait
xor
jp
in
pop
jo
je
push
add
sbb
mov
jnp
fists
and
cmp
xchg
pop
test
jnp
or
jge
hlt
lcall
lret
push
ja
push
lcall
je
jp
dec
jp
js
out
rorb
hlt
mov
fdivr
ljmp
xor
jl
or
push
xchg
test
and
scas
clc
ficomps
xor
cld
pop
out
xchg
dec
test
cld
in
nop
not
loop
add
and
push
and
std
jge
xchg
aaa
pushf
dec
lods
fwait
mov
aad
mov
jbe
push
imul
adc
aam
in
lds
mov
mov
jge
insl
push
inc
into
dec
sbb
add
cmp
ss
loopne
loope
shr
cmpsb
xchg
nop
inc
adc
add
push
inc
popa
xor
inc
push
je
fs
movsl
test
aam
aad
adc
add
xor
and
push
gs
push
je
fs
movsl
test
aam
aad
adc
pop
mov
filds
lahf
icebp
pop
mov
rol
in
xor
outsl
scas
daa
inc
lea
mov
push
outsb
pop
ljmp
test
shlb
sbb
add
lock
cmp
hlt
mov
gs
pop
lods
sbb
xor
cmp
ret
and
mov
mov
idivl
cmpsb
jl
adc
sarb
icebp
insb
jle
mov
lods
xchg
nop
cld
cmpsb
cmc
cs
in
add
fisttpl
mov
mov
sti
dec
pusha
inc
inc
pop
xlat
cmp
cwtl
out
jae
and
pop
sti
bound
dec
mov
out
jp
movsl
clc
lea
push
in
or
or
dec
push
mov
lahf
inc
sarl
xor
stc
jns
iret
mov
test
sub
jge
xlat
fs
out
loope
xchg
sub
mov
and
xchg
icebp
jb
popa
stos
mov
mov
jb
stos
jle,pn
add
aas
sahf
dec
pop
shlb
add
push
pushf
mov
adc
fdivrl
pusha
dec
sub
fcoms
jp
pop
ds
or
sub
adc
pushl
addr16
cmp
leave
stc
mov
and
push
xor
jge
dec
addl
mov
jg
pop
and
adcl
jbe
fsubr
rcrl
xchg
or
pop
enter
fcoms
aaa
int3
sti
test
cmp
inc
test
mov
sub
clc
fmull
lock
fwait
sarb
loop
mov
inc
lods
cmc
pop
push
sub
cltd
add
xchg
shlb
and
push
mov
mov
ror
and
cmc
sub
inc
inc
and
and
dec
data16
dec
out
sbb
adc
lock
fs
test
iret
dec
scas
add
das
movsl
clc
sahf
and
adc
cmp
and
mov
pop
sbb
pusha
push
mov
pop
ret
cmp
fisubrs
test
mov
pop
lret
leave
std
push
ljmp
movsb
outsl
scas
shlb
sbbl
lds
mov
in
and
lcall
lret
dec
fstps
cmp
jb
mov
pushf
pop
bound
leave
mov
in
add
inc
mov
pop
pop
jns
test
sub
sbb
dec
pop
inc
cmp
and
add
mov
mov
int3
pusha
pop
shlb
xchg
jg
add
jmp
out
hlt
and
push
sbb
mov
stos
js
cmp
cmp
insb
out
test
push
inc
mov
xchg
mov
lret
pushf
xchg
call
mov
sub
mov
dec
mov
stos
lods
fidivrs
in
dec
fimuls
leave
les
sub
adc
mov
xor
mov
or
fwait
scas
xor
push
test
mov
sarb
lock
mov
push
sahf
xor
nop
cli
stos
adc
sbb
mov
nop
xchg
int
loope
pop
jle
jb
icebp
jle
mov
cmpsl
ja
add
sub
pop
jmp
scas
lcall
lds
into
stc
mov
and
mov
fs
pop
dec
stos
jae
cld
outsl
mov
ljmp
cmp
test
js
das
jle
in
stc
shl
xor
pop
icebp
push
mov
fcmovu
jl
cmc
xchg
adc
lods
mov
cmpsb
add
icebp
lock
sub
lret
xor
add
and
pop
or
sub
add
cmp
xlat
loop
or
push
cmpsl
mov
cwtl
arpl
cmp
xor
rorb
lea
mov
push
testb
jmp
jmp
jmp
adc
enter
jl
mov
repnz
popf
outsl
shr
into
lahf
mov
cwtl
out
dec
cmp
adc
inc
xchg
pop
adc
ret
push
cmc
insb
cmpb
lcall
lahf
int
dec
lahf
sbbb
xor
pop
or
push
mov
cltd
outsl
pop
push
pop
test
jnp
lock
les
data16
xchg
ret
testl
pop
ret
adc
mov
sub
pop
pop
inc
xchg
mov
pop
clc
pop
outsl
daa
cli
jnp
or
imul
dec
es
aaa
lahf
jno
dec
or
xchg
inc
outsl
sub
inc
mov
pop
loope
and
bound
and
jno
fwait
add
loop
push
mov
mov
and
hlt
jae
mov
aam
iret
test
and
out
cmp
rcrb
test
mov
adc
es
xchg
dec
add
aaa
mov
mov
fbstp
loopne
mov
ret
sbb
adc
cmpsl
sub
cmp
outsb
sub
adc
dec
push
nop
out
imul
and
fbld
pop
dec
orl
mov
sub
and
cmc
jg
dec
jb
xor
sti
pop
mov
mov
lds
mov
and
mul
stc
pushf
jecxz
jbe
int3
inc
push
dec
aam
jge
mov
adc
sbb
idivb
push
leave
xor
subb
dec
xor
xor
mov
shlb
jmp
daa
pop
ss
adc
jmp
pop
xor
ret
sti
call
inc
cmp
lret
and
mov
orb
mov
pop
adc
mov
daa
mov
fucomp
adc
fsubs
adc
add
je
imul
sbb
ss
hlt
cmpsb
jg
addr16
ja
js
iret
add
xor
in
adc
out
movsl
and
pop
push
inc
push
call
and
xor
loop
sbb
ds
cmp
loopne
dec
jbe
adc
xchg
mov
xorb
lret
decb
jmp
adc
into
pop
adc
rcl
hlt
jbe
dec
mov
cmpsb
icebp
cmc
ret
cmp
sbbb
rorl
mov
call
sub
aaa
sbb
scas
cmpl
sub
jne
loopne
xchg
outsb
adc
jg
mov
out
iret
repnz
or
sub
test
lret
mov
test
mov
and
inc
dec
push
mov
into
pushf
mov
and
adc
mov
push
mov
pop
jg
mov
cmp
mov
mov
cmp
add
sub
inc
leave
lsl
sub
mov
stos
std
ret
popa
jno
inc
cwtl
sbb
jo
jmp
sbb
mov
mov
int3
mov
mov
xor
call
pop
jmp
push
add
push
cld
push
adc
sub
aad
fs
sub
xchg
sbb
push
int
push
jecxz
adc
shrl
mov
sbb
rcr
loop
dec
lods
mov
les
imul
movsl
sbb
outsb
outsb
inc
inc
jp
outsl
cmp
fs
mov
fnstcw
pop
sub
adc
add
inc
adc
add
adc
loope
test
push
jle
push
or
es
fdivrs
jecxz
outsb
scas
sahf
js
into
lcall
iret
adc
mov
in
add
add
jne
lret
aam
pop
fistl
push
and
dec
fnstsw
lock
cmp
popa
xor
clc
or
adc
cmp
arpl
daa
sahf
push
and
inc
out
push
jne
mov
test
push
inc
sub
adc
sarl
mov
leave
movsl
mov
test
js
arpl
xor
and
xchg
and
std
dec
dec
and
scas
add
push
xor
mov
cmp
or
arpl
repz
ds
ret
clc
mov
mov
test
jno
prefetch
mov
and
xchg
jl
or
pop
sahf
or
mov
into
adc
movsb
imul
lea
je
imul
cmp
add
ds
loop
pop
push
or
jecxz
idivb
pop
push
mov
sarb
jecxz
mov
lods
adc
das
addr16
xchg
sub
mov
jnp
into
adc
rcll
insb
aaa
lds
popa
cmp
mov
js
test
mov
cmc
das
mov
or
sti
cmp
push
insl
pushl
std
mov
jo
xchg
vfmaddsub231pd
pushf
ds
shl
push
out
cmp
or
inc
ret
aam
sti
cmp
sub
loop
inc
jae
rcrl
fnstcw
test
or
adc
insl
jbe
inc
and
lds
sub
insb
pop
shl
fdivrs
add
jmp
lock
jbe
icebp
add
lcall
xor
xchg
cmp
mov
jg
rcr
mov
pushf
out
call
xchg
and
fs
push
insb
dec
lcall
push
lock
and
dec
lcall
cmp
sar
fstps
mov
pop
mov
imul
lahf
mov
mov
ds
pop
outsb
xor
std
shl
fwait
test
lods
xchg
jne
aad
cmp
leave
shrb
push
sbb
xlat
jge
mov
or
lcall
fcomps
cmp
insl
outsb
call
ljmp
xchg
pop
or
negb
roll
daa
add
and
cwtl
add
inc
into
and
mov
loopne
mov
inc
and
in
pop
call
add
xchg
mov
lds
pop
or
dec
or
lds
mov
fdivrl
xor
pusha
jle
in
or
jecxz
inc
and
sub
aaa
push
out
pop
inc
test
outsb
jl
pop
pop
mov
adc
in
cmpsl
int
cmp
jnp
mov
jne
push
jmp
pop
out
cmp
ficomps
jecxz
scas
cmp
dec
fstp
lds
enter
pusha
lods
sbb
in
fnsave
repz
mov
lret
jp
repz
in
outsb
imul
mov
ja
stos
sub
mov
xchg
in
inc
scas
clc
int3
outsb
jo
insb
xor
push
inc
or
dec
jmp
xor
xchg
pop
ret
sub
dec
mov
mov
sbbb
clc
push
test
jp
sub
aaa
mov
jp
in
pop
ret
mov
insb
mov
lods
jl
cld
jmp
repnz
loop
bound
push
stc
aad
sbbb
jo
cmp
iret
les
test
push
or
clc
mov
dec
inc
stos
dec
js
and
mov
shll
jbe
ret
xchg
pushf
mov
in
or
jno
mov
ss
mov
enter
test
xchg
out
mov
pop
mov
lea
das
ljmp
lock
cmp
xor
inc
pop
in
or
lret
mov
mov
lret
dec
and
xor
outsl
mov
xor
adc
xchg
fwait
xchg
arpl
cmp
push
jp
fsubrp
das
pushf
imul
lods
in
and
out
stos
sahf
je
mov
outsb
add
jmp
jmp
pusha
mov
or
cwtl
push
in
out
inc
cmp
mov
dec
mov
cmpsl
and
mov
popf
mov
and
cmpsb
call
aam
sbb
sbb
push
xchg
or
out
scas
cmpsl
mov
es
repz
dec
lret
fsubl
aaa
or
adc
pop
mov
inc
ret
cmc
sub
leave
fnsave
add
pop
out
xor
mov
inc
mov
sub
xchg
mov
mov
mov
daa
jle
daa
addr16
in
imul
xor
jbe
mov
push
jecxz
adc
mov
je
and
imul
xchg
push
sti
nop
imul
push
and
leave
pop
inc
push
xlat
negb
sub
cmp
mov
sbb
les
or
push
dec
test
pop
lahf
pushf
sahf
int3
lods
lea
dec
and
pushf
push
jns
xor
adc
add
fsubs
shrb
cmp
idivb
adc
push
pcmpeqd
xor
mov
adc
jg
inc
push
xlat
sahf
shrl
rorb
jne
rcr
test
sbb
cmc
mov
ds
sbb
adc
xchg
mov
pop
sbb
and
hlt
mov
inc
inc
dec
data16
in
inc
lea
fisubl
loop
cld
test
xchg
jmp
sarl
inc
add
sub
and
add
fsts
inc
cmp
stos
hlt
test
push
add
dec
sub
arpl
mov
rclb
out
mov
ret
inc
adc
arpl
or
int3
fisubs
jl
subb
or
std
mov
bnd
mov
jae
and
movsb
cwtl
sbb
sub
sbb
pop
mov
jnp
inc
mov
cwtl
or
ds
les
jge
lret
adc
test
pop
sbbb
leave
dec
ss
andl
xchg
clc
ljmp
inc
dec
rcr
or
xchg
fdivrl
push
cmp
mov
je
out
loopne
sub
xchg
stos
nop
xchg
insl
mov
cmp
mov
fmulp
or
test
clc
lret
cld
jnp
cmp
addr16
sub
ljmp
jnp
mov
pop
pop
dec
aam
xor
cmp
push
fdivs
inc
rcr
xor
aas
neg
insb
push
pop
inc
jae
cltd
jno
adc
pop
out
mov
lods
fsubs
adc
cmovb
pop
fcompl
imul
pop
jl
mov
xorl
adcl
hlt
push
loop
int3
outsl
mov
daa
mov
cwtl
in
and
test
sbb
test
rclb
fsave
dec
test
pop
imul
push
and
mov
cmp
enter
movsb
lret
mov
sbbb
fimuls
jns
in
cmp
hlt
xchg
mov
loope
stos
mov
inc
frstor
cmpsl
mov
xor
sub
mov
test
ja
into
shlb
pop
mov
addl
insb
cmp
loop
pop
push
cmp
inc
std
aad
inc
jne
ret
imul
jmp
cs
into
test
adc
outsl
add
xchg
cmp
imul
adc
push
pop
cmpl
inc
xor
xor
loop
pop
push
mov
out
jo
add
pop
test
popf
xchg
push
int3
push
add
not
test
outsb
adc
adc
dec
stos
lods
pop
sub
stc
mov
sub
mov
ljmp
xchg
jns
mov
mov
aaa
scas
repz
in
mov
insl
sub
rcll
cmp
xchg
jno
jae
repnz
jne
arpl
pop
pop
sbb
adc
repz
in
out
fistps
repz
push
lret
pop
inc
cmp
xchg
ja
or
push
sbb
les
mov
lea
ret
sbb
scas
mov
pop
dec
xchg
mov
in
pusha
test
iret
xor
and
pop
shlb
sbb
lods
or
nop
gs
xchg
xchg
jae
add
shl
mov
xchg
cmp
enter
push
dec
jno
mov
leave
call
js
loope
push
jne
test
lods
pop
je
mov
ds
ret
data16
cld
fists
aad
hlt
xchg
xchg
inc
arpl
dec
daa
xor
test
fmull
test
sub
lock
xchg
repnz
adc
mov
imul
lods
xchg
mov
add
call
faddl
jle
popa
cld
cwtl
sbb
lock
imul
leave
nop
mov
adc
jno
adc
pop
adc
lock
aam
cltd
cmpsb
ja
std
les
sbb
mov
mov
pop
mov
xor
repz
sarl
inc
and
shrl
dec
or
cmc
aad
sarb
shll
xor
subl
sub
or
push
or
xor
jmp
mov
mov
xor
sub
loope
mov
rolb
es
xrelease
mov
push
push
bound
adc
aam
test
cld
out
and
jg
cmp
popl
push
daa
popa
adc
pusha
mov
je
sets
jge
jp
test
andb
into
and
sbb
xchg
gs
xchg
xchg
pushf
sub
ret
jne
ja
mov
stos
push
xor
add
lret
in
test
lock
sysret
mov
aad
inc
xor
subl
adc
push
mov
and
mov
loope
imul
xor
mov
fwait
cwtl
add
js
shrb
js
outsl
xor
sbb
sahf
mov
or
daa
in
sub
test
jle
jo
lock
cmp
push
jo
push
mov
add
cli
push
pop
adc
mov
adc
jp
cmp
stos
inc
fs
or
jne
adc
rorl
push
lock
jmp
adc
sbb
sarb
push
jl
sqrtps
push
or
fnstenv
sub
nop
shrl
push
sarb
rcll
jno
outsb
cmpsb
nop
movsl
add
dec
cltd
lea
sbb
jge
rcr
pop
lret
xchg
fstps
cmpsb
shll
ja
sbb
divl
jae
jle
xor
aas
je
mov
mov
mov
push
ja
dec
leave
out
mov
mov
leave
hlt
cmp
jmp
imulb
in
sahf
in
xchg
pop
pop
sub
dec
push
lret
or
pop
fsubrl
mov
outsl
jge
dec
sbb
dec
out
in
bound
push
sbb
inc
fsubrl
jp
ficoml
in
mov
and
jg
stos
xor
push
es
sbb
icebp
popf
sub
test
cli
aam
rolb
orl
fnsave
pop
or
xchg
mov
sbb
sahf
sbb
add
nop
cmp
rolb
mov
int3
in
sbb
cmpsl
mov
dec
mov
loopne
jp
out
ljmp
in
inc
icebp
cld
rol
add
arpl
js
pop
movsl
add
lea
testl
cmp
mov
cmpl
pushf
fnstcw
into
sbb
out
sahf
cmpsb
jb
pop
lock
or
and
sbb
mov
imul
cli
jge
loopne
sbb
mov
orl
sub
cmp
lret
add
jb
xor
pop
mov
pop
test
lcall
fldt
cmp
cmp
push
sub
mov
inc
ret
mov
dec
dec
jge
mov
xchg
mov
sbb
shrl
inc
jno
sbb
cmp
pop
xchg
cmp
ror
lcall
inc
jecxz
mov
mov
mov
lcall
nop
dec
dec
add
pop
jge
xor
dec
pop
xchg
sbb
ret
test
mov
jnp
jbe
out
xlat
or
insl
mov
mov
dec
negb
mov
jge
or
aad
ja
add
adc
test
loopne
ret
fbstp
push
pop
rcl
bound
rcrl
push
adc
jmp
outsb
xchg
xchg
adc
test
or
dec
inc
xor
and
test
sub
add
or
mov
or
pop
punpckldq
push
jg
jp
idiv
dec
es
mov
mov
xor
int
popf
add
js
cmp
xor
fwait
add
scas
inc
jbe
repnz
mov
xor
dec
dec
push
mov
inc
xchg
call
repnz
sub
xchg
sub
mov
outsb
or
pop
mov
in
xchg
int3
mov
in
xor
subl
mov
mov
cmpb
and
das
shlb
mov
fcoml
andb
leave
movsb
adc
cld
lods
jle
les
sbb
mov
aaa
sbb
add
sarl
shll
mov
loopne
inc
aad
xchg
dec
sub
imul
mov
je
fcom
adc
repz
cmpsb
adc
stos
xchg
inc
sbb
das
je
mov
lds
lea
pop
or
xchg
cwtl
jae
mov
std
cmp
ljmp
orl
sub
add
add
xor
and
push
gs
push
je
fs
movsl
test
aam
aad
adc
add
xor
and
push
gs
push
je
fs
movsl
test
aam
aad
adc
add
xor
and
push
popa
inc
push
je
fs
movsl
test
cld
shl
cmc
loopne
adc
add
push
jne
push
je
movsb
mov
pop
cs
mov
roll
mov
fwait
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
iret
mov
outsl
xchg
movsl
scas
das
xchg
pop
loop
rcr
insb
iret
xor
add
adc
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
xor
push
jb
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
adc
ss
lahf
sub
and
rorl
xor
aas
xchg
xchg
ret
les
pop
pop
ror
lock
mov
call
icebp
ret
fisubrs
pop
push
loop
ja
lret
stos
push
xor
cmpsb
pop
bound
bound
mov
push
add
mov
push
xchg
sbb
test
xor
fbstp
test
ja
jb
ljmp
stos
add
inc
and
fildll
or
incb
fmull
mov
sub
jp
imull
jnp
test
repnz
mov
push
int3
xor
jb
inc
push
lods
cmpsl
daa
dec
aas
cmc
xchg
ljmp
lret
and
sbb
cli
bound
jmp
and
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
xor
add
adc
inc
scas
cmp
cmpsb
or
adc
push
js
dec
xchg
mov
and
pop
sarb
fistpl
or
or
daa
xchg
jp
imul
imul
jae
adc
cmp
sbb
dec
negl
pslld
ret
fbld
iret
xor
add
adc
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
xor
add
adc
inc
scas
push
pop
mov
cmp
sbb
inc
dec
ds
das
addr16
call
ror
fsubrp
lock
xchg
pop
clc
xchg
fs
aaa
loope
adc
cmp
into
sbb
lea
jge
pop
jg
insb
jne
in
stc
cmc
add
stos
dec
sub
sbb
daa
add
fs
mov
sub
outsb
pushf
mov
stc
stos
rolb
loopne
negl
cmp
je
mov
pop
les
cmpsb
loopne
add
test
push
into
gs
mov
mov
out
stos
mov
or
xor
dec
xchg
mov
or
rep
push
mov
sti
shl
jge
and
fcmovu
or
stc
xlat
es
ret
or
icebp
xchg
incl
loope
mov
cmc
xor
sahf
dec
jb
fwait
pop
int
xorb
mov
xchg
loop
mov
and
shrd
inc
mov
sub
ljmp
xchg
cld
aad
mov
out
ret
lds
repz
imul
imul
pop
inc
dec
filds
adc
repnz
leave
lds
mov
ds
cmp
jl
outsl
xchg
mov
call
repnz
mov
inc
cmp
call
add
shrl
mov
push
hlt
mov
mov
add
sahf
sbb
adcl
stc
ror
dec
cld
cs
mov
lcall
pop
in
xchg
leave
jo
mov
or
and
je
aad
jo
xor
mov
in
les
cs
aas
outsl
add
mov
cmpsb
addr16
cmp
in
mov
lret
xchg
lahf
jecxz
adc
cltd
xchg
je
popa
mov
out
movsb
adc
mov
outsl
in
aaa
sub
mov
sbb
popa
adc
pop
push
or
jae
fneni(8087
icebp
adc
jb
jae
sti
push
cmpsl
comiss
fs
jae
push
cld
inc
mov
sti
xor
push
cmp
or
jae
pop
rcrb
iret
add
outsb
ds
sub
cmpl
cmp
stos
push
xchg
xchg
adcb
test
lcall
or
jle
fdivrp
cmp
dec
xchg
mov
in
pusha
xchg
sbb
jecxz
jmp
insl
test
repz
lcall
call
jecxz
adc
mov
in
or
jne
cltd
xchg
loopne
or
call
arpl
aaa
mov
inc
sub
and
cltd
pusha
in
movb
in
shlb
add
jge
cmp
std
cmp
movl
in
jne
pop
ja
push
decl
int
ficompl
push
sub
sarl
dec
dec
ss
dec
xor
int3
inc
mov
in
hlt
mov
dec
loopne
push
gs
test
lock
xchg
lret
jge
mov
add
rcll
xchg
mov
push
lods
andb
mov
xchg
jbe
test
xor
pop
push
mov
or
and
iret
bt
sbb
xchg
cltd
xchg
jnp
mov
mov
imull
xchg
sbb
and
dec
add
shrb
mov
pop
xor
push
ss
ret
cld
and
sub
and
les
and
sahf
cs
cmp
movsl
mov
faddl
gs
or
pushf
xor
and
cltd
ss
pop
jbe
sbb
movsb
int
faddl
and
push
ret
aam
and
inc
int3
pop
aas
cmp
mov
pop
dec
sub
jbe
cs
loop
std
std
movsb
xor
add
jle
adc
in
lock
pop
nop
addr16
mov
popl
pop
hlt
test
or
inc
mov
mov
repz
popa
fld
xchg
xchg
xchg
add
sbb
std
inc
arpl
mov
xor
shlb
loop
sti
mov
lret
fnstenv
test
gs
ds
pop
into
test
gs
and
insl
mulb
stos
adc
lahf
mov
xor
mov
ljmp
push
fdivl
call
lret
rcll
add
inc
nop
fucomp
pop
inc
dec
ror
loope
push
xorl
jp
dec
test
cmp
add
jmp
and
aas
push
pusha
icebp
cld
mov
add
xlat
jo
fnsave
xchg
mov
int
call
sub
mov
rcr
adc
xchg
cs
jne
sub
fimuls
outsb
lock
call
fistps
mov
inc
ja
out
int3
adc
mov
push
pop
or
jecxz
lret
test
pop
xor
mov
loopne
ja
jge
cld
push
fs
cwtl
loope
push
cld
cmpsb
scas
out
popf
cld
sub
stos
cmp
sar
mov
cmp
sub
scas
inc
out
xor
orl
lock
outsl
xorl
mov
mov
sbb
sub
decl
ror
into
adc
dec
fcomi
shr
jecxz
dec
add
hlt
stos
pop
mov
mov
lods
cmpsl
inc
rcrb
mov
lods
push
sarl
sbb
fstl
jo
nop
dec
mov
lahf
cli
and
std
daa
testl
sbb
shr
mov
sub
aam
stos
pushl
js
adc
dec
pop
push
cs
movsl
push
pusha
push
fsubrs
js
rolb
or
push
cmp
arpl
lret
adc
ficoms
adc
call
sub
jno
xchg
test
pop
adc
sbb
pop
stos
cmc
xor
lcall
cld
or
sub
cmpsb
push
mov
hlt
fiaddl
mov
push
fisubs
test
lods
add
sub
cwtl
jo
mov
jae
lods
or
test
mov
xchg
bound
jle
adcb
xorl
sahf
jo
sub
and
inc
gs
jl
pop
push
mov
xchg
ret
orb
inc
icebp
sub
jle
jle
and
inc
dec
repnz
test
out
mov
push
inc
xor
call
pushf
scas
inc
dec
popf
loopne
imul
rcl
sub
add
div
std
lret
push
sub
pop
cmp
lcall
or
cmovp
add
shrb
aas
add
sbb
bound
mov
ret
or
mov
movsl
and
pop
sub
sbb
lea
sahf
push
cmp
js
nop
inc
mov
lcall
mov
xchg
inc
in
or
pop
int
out
test
sub
and
mov
adc
orl
test
mov
pop
xchg
cmp
mov
rclb
xadd
ja
sahf
inc
sti
js,pt
loop
push
or
push
shl
or
fistpl
and
inc
xchg
pop
sbb
lret
push
fs
mov
ja
mov
imul
movsb
scas
out
nop
inc
arpl
in
jo
mov
jmp
sub
adc
xchg
dec
push
insl
loopne
push
jp
fcomip
add
mov
xchg
ljmp
in
lock
lods
in
and
jge
inc
mov
aaa
push
adc
shrl
mov
push
sahf
fisubs
push
js
and
jno
popf
sbb
sbb
mov
icebp
adc
outsl
sahf
lahf
js
sbb
mov
stos
lahf
fstl
mov
xchg
xchg
fmull
ffree
ret
fdivrl
jnp
jge
jp
test
xchg
stc
pop
jle
in
and
shrl
dec
cmp
adc
mov
nop
out
mov
mov
mov
decb
lret
shl
cmp
es
ret
outsl
mov
imul
mov
jecxz
mov
std
out
mov
push
cmpsl
xor
xor
ljmp
outsl
mov
insb
outsl
add
ret
lret
fstpt
jo
dec
dec
mov
addr16
cmp
pop
sbb
imul
fbld
add
out
adc
out
sbb
mov
ret
cmpsl
hlt
imul
cmpsl
dec
pop
and
loopne
clc
int
cmc
in
stos
jmp
rol
rcll
sbb
cltd
mov
jg
xor
test
dec
push
imul
cmpxchg
loopne
inc
loope
pop
cld
aad
int
lds
add
xchg
std
pop
dec
loopne
fimuls
adc
fs
mov
out
inc
xor
mov
sbbb
mov
adc
sub
daa
push
orb
shlb
mov
adc
mov
push
rclb
fisubrl
jmp
xor
dec
push
xchg
push
test
popl
and
mov
insl
xor
mov
cli
in
hlt
test
cmp
scas
mov
dec
mov
sbb
rolb
add
sarb
fs
sub
push
lock
add
mov
or
lahf
repz
sarl
aas
pushf
pop
or
cmp
fs
pop
dec
ds
mov
data16
js
daa
test
mov
clc
push
lcall
fcomp
repz
jl
dec
movsb
jb
nop
jle
inc
add
sub
lods
insb
divb
rcll
mov
jbe
or
inc
and
fnstcw
dec
pop
and
push
inc
daa
in
test
pop
xchg
aaa
leave
cmpsb
sarb
mov
in
or
ja
pop
xlat
jb
dec
frstor
add
jecxz
sub
xor
hlt
out
in
sub
push
jg
js
sbb
mov
fsts
lret
mov
pop
scas
aas
mov
xchg
push
xor
rorb
sub
cmp
je
mov
pop
nop
cli
mov
xchg
sbb
std
jnp
adc
mov
sbb
test
pop
cmp
xor
cs
sbb
push
cli
and
xor
pop
popa
jl
movl
fcoml
jb
jbe
dec
test
xchg
mov
fisttpll
stc
mov
sahf
xchg
pop
addr16
xor
dec
lcall
mov
mov
shlb
mov
xlat
loope
sub
mov
jl
push
je
push
mov
loopne
pop
addl
scas
inc
jecxz
mov
into
shrl
dec
jne
out
mov
push
les
sub
faddp
pushf
or
addr16
jnp
out
aam
fmull
dec
mov
mov
add
notl
jno
and
enter
sub
test
pop
mov
mov
lret
addr16
jp
clc
repz
mov
int
test
lcall
adc
fisttps
rorl
push
daa
add
xchg
loope
inc
in
in
ret
pop
cwtl
mov
lods
sub
repnz
sysret
sub
lcall
clc
push
shll
lcall
loop
cwtl
xchg
or
xchg
xlat
sbb
jns
mov
iret
in
shll
pop
push
add
adc
call
and
jno
outsb
fmull
push
cpuid
mov
pop
jbe
sbb
sub
add
sar
push
xchg
shrb
mov
jl
xchg
test
add
mov
jmp
popa
mov
push
push
sahf
cwtl
and
push
and
mov
insb
outsb
call
xchg
push
mov
pop
aad
iret
mov
xor
mov
xor
subl
mov
xchg
fidivl
adc
mov
dec
sbb
out
jne
sahf
nop
dec
das
out
insb
or
subb
in
adc
ljmp
push
cmp
lds
pushl
push
testb
push
repz
into
dec
into
cmc
mov
mov
ret
sbbl
repnz
xchg
mov
jo
add
loop
and
cli
xchg
lods
jmp
mov
or
sbb
pushf
gs
in
out
mov
lcall
jne
sbb
cwtl
mov
notl
int3
push
mov
xchg
xchg
push
push
adc
mov
loop
push
stc
imul
xchg
cmc
popf
push
outsb
cmp
pop
sbb
fimull
fisttpl
sti
push
clc
ja
add
ret
imul
ret
in
insl
xchg
cli
cmc
add
call
adc
clc
in
movl
cmp
in
push
cs
sub
mov
aas
into
xor
fbstp
push
pop
xchg
outsb
push
mov
out
cmp
push
aaa
ret
xor
les
sar
or
cld
aaa
in
lock
push
popa
loopne
push
mov
pushf
pop
adc
mov
mov
fwait
aam
dec
adc
inc
mov
pop
in
push
sti
and
dec
in
sub
sbb
pop
cmpsl
mov
or
jbe
hlt
cmova
rcl
dec
cmc
pop
lods
add
xchg
sub
movsb
mov
sbb
fs
dec
add
mov
test
insl
jae
adc
xlat
or
inc
scas
add
xor
sub
xor
jmp
ss
pusha
pop
fildll
push
outsl
sbb
cmp
jns
ss
fwait
ret
sarl
xchg
inc
lret
or
cmc
jmp
arpl
pop
cmpsb
pop
sub
dec
adc
sbb
pushf
cmp
ss
jne
pop
icebp
xchg
lods
cmpsl
push
and
adc
outsl
adc
push
test
jb
mov
scas
in
xchg
mov
sub
mov
jb
sbb
jmp
mov
mov
je
outsb
push
mov
sub
mov
into
lea
jecxz
adc
aas
or
in
push
imul
xchg
jle
mov
add
das
enter
sahf
addb
push
mov
add
adc
xor
int
loopne
dec
jno
xchg
push
cwtl
push
iret
or
dec
jne
hlt
fimuls
cmpsl
adc
mov
adc
rorl
push
ds
push
fwait
or
data16
cmp
popf
sbb
lods
out
adc
stos
dec
sbb
mov
lock
sub
pop
movd
lods
bound
push
jecxz
cmc
inc
cld
xchg
mov
sbb
pop
mov
cmp
lds
mov
rcrb
iret
inc
and
add
insl
ss
inc
lret
lea
jne
xor
mov
outsl
mov
mov
mov
jp
stc
push
cs
sbb
cmpsl
jae
imul
fdivp
iret
loop
inc
dec
insl
sbb
data16
dec
aas
scas
and
cmp
sub
sbb
cld
push
and
scas
lods
jl
dec
lods
and
aad
bound
and
lcall
mov
movsb
mov
push
shlb
outsl
gs
cmp
inc
push
and
sbb
mov
out
jbe
xchg
add
pushf
push
push
test
push
pop
nop
ds
nop
rolb
cmp
jns
cmp
cmp
push
sub
scas
test
int3
mov
leave
fcmovnu
test
scas
mov
inc
adc
lea
addl
push
jbe
push
loop
mov
pop
sbb
inc
sbb
mov
cmpsb
mov
cmp
outsb
scas
enter
xlat
inc
and
cmp
enter
sbb
int3
iret
adc
fs
push
cs
in
loopne
and
sbb
lock
adc
loopw
stos
pop
xchg
push
xchg
test
or
ljmp
or
ret
iret
les
or
xor
popa
pop
fstpl
jae
sarb
dec
test
jecxz
mov
cmpb
cmp
pop
pop
jae
shl
sub
fstl
jns
mov
dec
aam
lds
ucomiss
jp
xchg
sti
sbbb
sbb
loop
inc
rolb
data16
rorl
das
or
inc
mov
mov
add
js
push
xchg
push
pop
mov
inc
add
cmpsb
lods
dec
lcall
adc
inc
jg
sbb
adc
aaa
sub
inc
scas
pop
cwtl
xchg
clc
push
xchg
add
mov
fdivs
xchg
fldl
aad
pop
leave
sbb
stc
xor
clc
xor
in
out
leave
ret
add
dec
mov
mull
je
jle
or
mov
aam
decb
or
movsl
push
dec
insl
je
andl
int3
aad
xchg
mov
mov
cmpl
dec
or
orb
imul
xor
jmp
scas
clc
fstpt
daa
clc
push
or
adc
int3
cmp
inc
add
pop
rclb
push
dec
cmp
mov
ja
push
outsb
rorb
xchg
add
push
adc
xchg
xor
mov
pop
std
rol
into
lds
xchg
lcall
push
add
cmp
and
fnstcw
dec
or
mov
fldl
call
jge
dec
jb
xor
xor
pop
cmp
ja
ljmp
xor
cmp
sbb
or
std
add
or
mov
ja
outsb
xchg
out
inc
mov
notl
cltd
pop
gs
fisttpll
jge
sub
push
cmp
jae
mov
and
add
push
aam
cli
daa
sbb
or
fistpl
clc
mov
push
stos
add
daa
stos
sub
ret
sbb
cmc
jns
jae
push
lods
cmp
jns
lret
pop
sarl
adc
mov
shrb
pushf
and
and
or
ljmp
call
and
mov
mov
insl
inc
in
cmpsl
je
mov
xchg
and
fisubrs
sbb
shlb
or
aaa
mov
int
les
movntq
adc
mov
mov
or
stos
jp
dec
scas
jmp
push
add
or
xchg
xchg
rcrb
inc
push
sub
popa
imul
pop
jne
fldcw
or
dec
mov
pop
push
imul
cmp
orl
pop
xchg
adc
in
sti
jne
sub
stos
dec
sbb
sbb
jge
scas
inc
inc
xor
dec
lcall
jno
leave
in
mov
fstpt
int
fisttps
out
push
mov
ds
fwait
adc
sbb
xchg
dec
add
push
xor
daa
fcompl
jne
arpl
mov
addr16
mov
mov
add
inc
inc
lret
lods
and
xor
movsb
mov
dec
pop
sbb
mov
xchg
in
push
aaa
jge
xor
pop
inc
sbb
fsubr
bound
pop
pop
jo
andb
jmp
insb
dec
idivb
mov
cmp
and
lcall
scas
cmp
adcl
jecxz
adc
fisubl
mov
pop
mov
stos
std
and
fisttps
push
repnz
and
fadd
shll
jns
sub
inc
loope
xchg
jg
div
xchg
scas
aad
inc
cwtl
movsb
xor
divl
frndint
adc
sbb
shl
fimull
pushf
xchg
stos
mov
iret
cmp
cmpsb
int3
inc
nop
addr16
je
fs
or
imul
fildll
bound
nop
mov
mov
xor
mov
cmc
pushf
push
call
mov
xchg
scas
dec
jne
mov
pop
add
fisttpl
sub
lahf
sahf
add
xchg
nop
xchg
je
lahf
ss
ja
dec
pusha
pop
in
sub
jbe
hlt
repz
lahf
sbb
pop
push
mov
lret
jg
shrl
je
addb
in
loop
pop
out
pop
rclb
and
jnp
nop
dec
and
push
test
stos
jns
rcrb
or
sbb
pop
jb
adc
divb
cli
mov
sbb
and
push
lret
or
movsb
sub
inc
xchg
fcmovbe
es
out
shll
js
jne
loope
cmpb
out
xor
insb
xlat
mov
adc
sub
nop
add
hlt
mov
aas
dec
xchg
notl
stc
mov
lds
jg
sub
ficoml
fistpll
fisttps
jno
xor
pop
cmpb
cmp
or
popa
adc
shlb
insl
mov
test
lods
mov
loope
sbb
lods
fmuls
int
cs
ljmp
push
inc
es
mov
xor
push
mov
and
cmpsl
std
jb
mov
sbb
in
xor
fildll
sub
pop
out
repz
lahf
and
push
sbb
add
sahf
mov
iret
lods
or
mov
lods
loop
push
jnp
int3
xor
mov
dec
pop
shlb
xor
mov
pop
aad
or
stos
fiadds
in
push
lods
and
subb
loop
repnz
ret
fbld
iret
xor
add
adc
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
xor
add
adc
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
xor
add
adc
inc
scas
push
pop
mov
outsl
xchg
pop
loop
repnz
ret
fbld
iret
cwtl
push
add
gs
mov
stos
add
jb
sub
ja
lret
sbb
imul
jecxz
jecxz
adc
and
push
jmp
arpl
xchg
sub
cmp
dec
jecxz
or
or
push
cmp
dec
mov
imul
pop
jo
mov
adc
pop
jecxz
adc
push
inc
loop
mov
loopne
jl
sbb
inc
mov
cmc
cmp
pop
cmovg
sbb
imul
adc
sahf
mov
aaa
xchg
pop
repz
inc
in
out
test
insb
popf
inc
xor
clc
insl
push
sub
ud2
es
ret
xchg
or
ret
add
adc
jae
andl
pushf
cmp
sub
cmc
pop
test
dec
mov
loop
int3
push
ret
pop
jae
mov
sbb
test
sbb
dec
mov
mov
sbb
jecxz
xor
add
add
or
pushl
pop
or
repz
std
adc
and
inc
fldt
jp
mov
mov
imul
flds
out
xor
and
lret
push
cmp
js
jle
outsb
int3
or
cs
imul
jmp
and
subps
jns
sbb
jae
add
or
cli
push
fcoms
aas
jmp
arpl
xchg
sub
jnp
imul
repz
jecxz
adc
and
push
jmp
arpl
xchg
sub
jnp
imul
repz
jecxz
adc
xor
xchg
push
jp
sbb
cmp
xor
push
push
popl
xor
inc
repnz
add
add
mov
scas
out
jecxz
xor
jns
icebp
sar
sti
and
divb
loop
loop
lds
popa
xor
jle
mov
pop
and
adc
lret
push
xchg
loopne
mov
jns
adc
pmaxsw
loopne
aad
testb
push
stos
inc
les
fldenv
push
lods
fwait
pop
jbe
pop
outsl
movsl
test
adc
leave
js
mov
dec
or
jo
mov
fildl
xor
aad
sbb
sahf
lds
aam
xchg
fmull
repz
fs
xchg
loopne
push
mov
pop
jb
jno
add
ds
jbe
loope
jne
lea
mov
pop
jnp
mov
cmc
pusha
flds
orl
nop
fidivrl
lahf
cmp
push
je
repz
es
cmp
xor
dec
jo
mov
in
adc
dec
rolb
push
out
pop
cmp
jbe
lret
mov
adc
sbb
imul
stos
rcr
out
cmp
in
aad
xor
enter
popf
mov
mov
and
loope
mov
shrl
int
jp
mov
push
mov
ds
sub
rorl
or
fcmovnu
jl
sbb
leave
adc
or
cmp
xchg
and
xchg
in
dec
or
push
jl
pop
dec
rcr
sub
dec
imul
pop
push
addr16
adc
loope
or
loope
mov
loopne
fnstcw
or
fmulp
fcmove
out
or
push
inc
sub
xor
pop
stos
test
jmp
mov
ret
sti
mov
mov
jmp
aam
fsubs
dec
call
push
movl
xor
mov
sarb
inc
xchg
xor
stos
jae
jl
arpl
and
pop
push
xor
adc
daa
and
jnp
pop
fwait
mov
dec
es
mov
sbb
cltd
adc
dec
jno
outsl
xchg
mov
add
js
test
and
xor
xor
inc
mov
mov
shl
mov
add
fistpl
inc
test
fistpll
jne
jge
pop
fcoml
cmpsl
cmp
pop
cmp
inc
testb
call
mov
xchg
cmp
sub
inc
ret
sbb
stos
pushf
and
inc
pop
pushl
jle
mov
xor
dec
jecxz
mov
leave
iret
rolb
jbe
fdivrl
outsl
push
cmpb
aam
xchg
jne
pop
mov
les
xchg
cli
dec
stos
xchg
int3
repnz
cmp
scas
lahf
or
add
aas
idiv
out
pop
dec
and
xor
ret
jbe
add
adc
imul
lock
xchg
xchg
loope
sub
or
mov
pop
js
xor
sub
leave
mov
jbe
addl
adc
adc
lret
pop
loope
cs
mov
fists
pop
lds
xor
and
mov
lea
aad
cli
xlat
jns
cld
or
jle
test
xor
add
sub
call
sbb
out
mov
mov
mov
lahf
adc
pop
fs
pop
adc
push
imul
lret
rclb
push
mov
push
out
push
and
or
sub
xchg
cmpsl
xor
int
adc
insb
inc
add
arpl
test
test
clc
shl
mov
cld
cld
jno
ljmp
xchg
outsl
inc
stos
pushf
and
sbb
cmpb
and
sbb
mov
pop
push
ror
mov
cmp
imul
jl
and
out
pop
dec
sarb
or
aas
xor
test
and
jge
dec
mov
cld
mov
or
cmp
jl
mov
aaa
js
lods
lock
mov
popa
lcall
fnstcw
adc
cmp
push
xor
sub
mov
dec
loope
pop
ja
and
xor
mov
sbb
lahf
mov
cwtl
xchg
and
enter
iret
push
and
les
pop
xor
es
shlb
es
pop
or
outsb
inc
gs
cmc
mov
sub
nop
mov
dec
out
jge
sub
or
push
sbb
push
jno
leave
aam
pop
or
mov
add
mov
pop
xor
cmc
lea
jle
sub
aad
push
dec
xchg
imul
mov
imul
sarl
cmp
or
scas
sbbb
outsb
mov
mov
adc
inc
sti
aaa
mov
repnz
fstpl
fsubp
shlb
dec
stc
cld
fisubs
fsubrl
add
cmpl
js
mov
mov
inc
clc
pop
jne
pop
divl
aad
cmpsb
pop
movsl
addr16
sbb
rcll
adcl
dec
cmp
cwtl
test
leave
mov
mov
test
arpl
or
sub
jnp
out
inc
adc
lret
jl
scas
es
inc
mov
fdivl
xchg
mov
inc
inc
push
or
ds
ret
out
mov
mov
and
fcomps
fmull
mov
gs
adc
fs
add
and
push
sub
xchg
aam
sbb
sub
fsubs
arpl
int
lds
adc
outsb
popf
jae
ljmp
fsubrs
xchg
jno
jecxz
movsb
mov
xchg
cmpsl
mov
scas
aam
into
dec
jnp
add
or
in
mov
nop
fmuls
rol
enter
mov
push
pop
jns
js
adcl
inc
into
pop
adc
out
push
jecxz
mov
or
cltd
lock
cmp
or
xchg
add
add
xchg
int3
out
sbbb
js
addr16
rorl
cmp
cmp
imul
dec
xchg
xchg
adc
shll
pop
sub
xlat
clc
mov
stos
mov
cmp
xor
adc
test
lret
loope
js
addr16
fistpl
xor
outsb
push
stos
inc
inc
or
push
push
mov
lods
fs
popf
mov
or
lock
inc
sbb
cmp
pop
push
inc
call
lcall
das
push
ret
inc
cmp
or
push
icebp
xchg
inc
imul
push
pop
aas
xchg
cmp
push
ljmp
add
sub
inc
xchg
scas
outsl
inc
loop
mov
jl
jo
inc
cmp
adc
sub
lock
stos
pop
or
data16
inc
pop
mulb
je
dec
adc
aam
or
push
mov
push
nop
sub
dec
or
out
push
mov
std
mov
pop
sub
lock
jmp
fstpt
sub
mov
fwait
popa
cs
xor
or
bound
mov
inc
push
cmc
ss
jg
repnz
sahf
clc
sbb
hlt
sbb
or
adc
jmp
push
aam
test
outsb
in
push
shlb
xchg
xor
jo
notl
lods
pop
shl
push
jge
loope
data16
inc
aaa
dec
ret
push
and
aaa
mov
adc
mov
repz
scas
sbb
jl
inc
out
or
cs
ret
aas
jmp
and
scas
pop
xchg
cwtl
xor
inc
lods
ret
nop
fcomip
lcall
sbb
sub
mov
outsb
and
cwtl
or
lret
sub
leave
pop
dec
bt
xchg
jo
mov
sbb
and
fdivs
add
inc
mov
add
cmpsb
mov
mov
sub
dec
hlt
mov
in
nop
hlt
push
mov
jl
les
test
push
dec
and
mov
clc
or
fwait
inc
cmp
pop
mov
pop
jmp
xchg
mov
gs
lcall
pop
jge
out
adc
pop
cltd
xor
gs
or
mov
enter
or
mov
jge
jb
mov
jno
in
dec
outsb
pop
inc
into
jmp
mov
dec
fsubrl
push
xlat
xchg
add
ds
xchg
cld
rorl
out
cmp
ret
jae
shll
xchg
inc
addr16
xchg
ja
dec
aas
push
pop
mov
push
aaa
inc
aam
imull
cmp
fwait
cmpsl
out
cmp
push
or
test
mov
out
xchg
gs
cmpsb
push
movsb
xor
jbe
jno
pusha
mov
push
jnp
cmp
or
nop
or
add
dec
mov
adc
xchg
adc
mov
adc
push
cmc
ret
and
sbb
jo
xor
das
jg
adc
jnp
js
les
pop
xchg
xor
adc
and
xor
dec
or
pop
and
test
sbb
data16
jl
xor
scas
push
adc
xor
inc
scas
mov
xchg
iret
cld
test
pusha
cmp
ljmp
xchg
push
push
mov
test
popa
dec
mov
push
adc
pop
out
inc
in
mov
daa
push
stos
loope
jle
or
pop
iret
arpl
enterw
inc
dec
adc
in
fisubrl
cmp
aas
in
add
pop
dec
pop
sub
aas
aas
ds
pop
dec
enter
mov
dec
push
lahf
leave
cld
lods
mov
xchg
add
int3
push
sarl
popf
imul
sub
push
repnz
pushf
sbb
aam
jne
les
mov
shlb
cli
jns
js
mov
out
push
xor
add
xor
cmc
xchg
icebp
push
jmp
and
fidivrl
cmpsl
test
sbb
neg
xchg
cmpsl
fadds
or
scas
jle
push
int3
out
sub
xor
dec
mov
or
call
push
adc
ret
jp
jg
insb
mov
test
data16
cmp
stos
pusha
sti
xor
popf
mov
rorb
test
cwtl
hlt
mov
adc
dec
mov
scas
out
leave
sbb
mov
xor
jno
mov
daa
dec
jne
rclb
inc
and
cmp
sbb
andb
mov
mov
repnz
pop
add
roll
loope
inc
int3
addr16
fcmovnu
pop
jno
dec
into
inc
cmpl
test
pushf
cld
rcll
lods
dec
aad
pop
sbb
mov
loopne
fidivl
lds
dec
movsl
push
add
add
mov
mov
out
jae
dec
dec
mov
cld
mov
inc
cmp
fldt
sbb
es
cmp
or
inc
mov
adc
gs
mov
mov
mov
and
fidivs
ljmp
lods
into
movb
sahf
pop
out
mov
lds
icebp
cmpsl
xchg
push
fmul
in
xchg
adc
mov
cmpsl
stos
cmp
mov
test
dec
fucomp
outsl
cmp
out
cmpsb
cmp
mov
sbb
push
pop
divb
stos
xor
fidivrs
add
loop
pop
push
add
fiadds
cld
movsl
out
rcll
cmp
imul
dec
xlat
out
mov
cmp
imul
inc
mov
int3
outsb
xchg
mov
mov
das
loop
stos
fsub
lds
divl
inc
mov
stos
jbe
aad
jno
adc
sub
and
sbb
test
mov
push
pusha
or
and
data16
push
sar
fimull
pop
xchg
in
rol
xor
add
or
and
es
in
sub
adcl
push
in
inc
inc
out
in
rorb
repnz
xor
jl
xchg
mov
popl
push
std
pop
adc
aas
test
mov
imul
adc
fs
ficoml
pop
and
push
ljmp
test
ret
cmc
test
inc
mov
pop
cmp
pop
loop
aaa
fdivrl
arpl
or
rorb
mov
lcall
dec
xor
shrb
jl
xchg
shl
fs
js
pop
add
sbb
pushf
les
mov
and
sbb
cmp
xor
movsb
adc
cmp
mov
sbb
lcall
aaa
cmp
in
loopne
call
jne
xor
daa
add
sbb
push
fbstp
into
int
mov
int
scas
cltd
mov
fs
idivb
cmpsb
lahf
inc
mov
inc
xor
test
jp
arpl
xchg
test
cmp
std
scas
ja
fisttpll
scas
movl
std
cld
rcll
out
pop
and
ljmp
incl
jmp
and
lds
xchg
and
orb
lea
popa
add
add
outsl
xorb
xor
pop
call
loopne
inc
sub
sbb
mov
pop
dec
sbb
movsb
pop
sub
and
rolb
jne
mov
popa
sbb
sarb
int3
push
adc
insl
jnp
negl
xchg
aad
and
in
fs
unpcklps
mov
push
adc
jecxz
test
shrb
mov
lea
repz
enter
adc
in
cmp
mov
mov
out
addr16
js
mov
lret
stos
dec
mov
subb
call
lret
cmp
pop
repnz
sub
inc
insl
fwait
inc
inc
xchg
or
add
aam
mov
ss
sarb
loope
inc
clc
sarb
xor
add
pop
jp
mov
pop
xor
jbe
mov
push
sahf
xor
cs
gs
cmp
adc
insb
pop
imul
into
jo
cmp
push
sbb
push
mov
mov
leave
mov
adc
aad
repnz
out
sti
fcompl
sub
xchg
stc
pop
xor
lods
int
jmp
mov
xchg
fbld
adc
sahf
add
scas
mov
daa
push
test
xor
arpl
addr16
into
jp
adc
popa
sbb
sub
sbb
sbb
mov
out
out
mov
xchg
cmpsb
fdiv
adc
adc
shrl
inc
mov
adc
and
mov
push
push
jne
test
cld
sub
ud2
loope
xchg
movsb
jecxz
js
leave
psubusb
ret
out
pushf
lods
ret
xchg
cmp
adc
std
stos
mov
lock
xchg
push
mov
jecxz
rcrb
add
loopne
push
mov
jp
sbb
inc
jl
mov
dec
xchg
ret
shrb
mov
mov
push
das
mov
out
cld
xor
push
xor
fsubl
movl
mov
lcall
repnz
jmp
xchg
gs
push
hlt
addr16
push
xor
lods
push
addr16
inc
pushl
testb
xchg
mov
inc
popf
mov
nop
lock
insl
push
repnz
adc
sub
ljmp
xor
sbb
gs
push
mov
xor
push
xchg
sub
push
adc
or
and
dec
stos
std
popa
stos
dec
xchg
mov
mov
jne
shrd
inc
and
test
xchg
insl
cmp
push
cmp
pop
or
inc
and
mov
ret
test
pop
ljmp
add
les
xorb
cvtdq2ps
sahf
subb
or
insb
push
cmp
sar
cmpsb
push
xchg
inc
jne
sbb
cmp
inc
in
sbb
enter
dec
negl
push
jbe
inc
mov
pop
sub
in
out
lds
ljmp
test
mov
add
cmp
not
xor
cmp
pop
xchg
or
ret
aam
divl
cmpsl
lret
xchg
xor
ret
mov
insb
and
pop
add
or
or
fbstp
pop
ja
lahf
rcrb
cmp
fdivrl
sub
mov
aam
gs
dec
inc
aaa
push
push
cmp
pop
jno
loope
test
pop
or
sbb
cwtl
push
fptan
test
shr
mov
mov
dec
cmp
push
sub
inc
ficompl
es
shrl
mov
fs
pop
out
in
popa
test
fadd
popa
dec
mov
jb
in
jge
out
lds
add
mov
popa
je
loop
and
in
ja
mov
mov
ja
adc
mov
sbb
adc
fisubl
adc
lahf
imul
aam
std
mov
gs
sbb
jne
fcompl
sub
lea
lret
push
or
dec
dec
inc
fisubrs
jecxz
mov
es
xor
push
in
jno
push
lods
repnz
push
jg
mov
cltd
outsb
jge
add
popa
pop
and
and
xchg
imul
jp
lds
call
rcll
test
ret
ja
sbb
sbb
and
pop
lods
cmc
sbb
mov
scas
cmp
movsl
push
dec
mov
insl
jns
jp
jne
out
mov
cmp
xchg
or
jle
rcrl
or
lret
jge
mov
jmp
xor
mov
out
int
lea
sbb
cwtl
push
sub
push
push
adc
ret
ret
inc
jo
andb
xchg
and
sub
push
lret
mov
test
sti
push
mov
jg
add
or
das
dec
inc
out
xchg
mov
gs
push
movsb
mov
xchg
xor
push
mov
xchg
add
xlat
jnp
shll
daa
into
dec
movsb
aas
sub
mov
or
xor
adc
xchg
jp
jnp
sarl
pop
movsb
mov
or
fbld
imul
or
pop
movsb
sub
and
cmpsl
cli
push
loope
addl
jae
xlat
pop
cli
popa
cltd
xchg
aam
xchg
xor
mov
sbb
test
shll
scas
push
xchg
ret
and
jo
or
aam
fstp
xchg
dec
sub
int3
cltd
scas
cmpsb
mov
pop
and
inc
jecxz
mov
push
push
dec
push
fdivl
add
rcrl
mov
push
mov
xor
push
jns
aad
lret
add
cwtl
cmp
adc
fstpt
sahf
push
cmp
test
ljmp
test
or
mov
pushf
les
sub
ret
aas
mov
cld
pop
das
cld
xchg
xor
leave
aaa
adc
and
imul
xor
inc
test
popa
dec
aaa
outsl
popa
pop
int3
or
jmp
or
cmp
mov
push
add
loope
popf
pop
mov
pop
xor
icebp
mov
cmp
inc
ror
test
sbb
lods
xchg
orb
aas
push
lock
int3
sub
fs
sti
and
shl
sbb
push
ficoml
repz
subl
pop
xor
cmpsb
pop
push
lock
pop
push
add
push
jne
fistpl
push
lahf
int3
inc
ja
sbb
push
mov
lock
pop
popf
int
cli
flds
pop
lret
push
ss
mov
jns
xchg
jnp
daa
repz
sbb
mov
mov
insl
push
pop
push
insl
add
mov
and
jnp
aam
popa
rclb
gs
add
push
movsb
or
frstor
shrl
outsl
and
aaa
into
scas
out
push
scas
test
inc
popa
outsl
ljmp
push
push
fcmovnbe
jl
addr16
fidivrl
inc
xor
in
scas
jmp
dec
jb
sarl
and
out
lret
push
mov
lret
cmp
stos
int3
jmp
ret
lods
mov
sahf
mov
test
inc
das
push
cltd
pushf
lods
add
cmp
arpl
jnp
cmpsb
out
inc
push
test
pop
jo
add
lock
jae
pushf
setae
or
mov
dec
dec
aad
bound
aad
shrb
or
pop
cmpb
jmp
adc
sbb
push
fildll
add
inc
test
sub
sahf
sbb
imul
mov
stos
pop
lahf
daa
shll
xchg
lods
xchg
nop
cwtl
adc
dec
mov
pusha
gs
idivl
sub
jne
sarl
rep
stos
xchg
scas
lcall
sub
sti
nop
sti
push
sahf
lahf
mov
xchg
push
sbb
sub
push
xchg
into
popf
cltd
faddl
stos
sub
dec
xchg
mov
sub
jnp
push
inc
in
ds
mov
mov
sub
xchg
movsb
cli
insb
aaa
push
xor
and
push
and
cmpb
dec
add
in
sub
adcb
pop
fildl
sub
je
cmp
test
mov
fisubrs
jns
mov
test
adc
outsl
sbb
test
inc
fucomi
and
sti
push
jmp
arpl
xchg
sub
jnp
imul
repz
jecxz
adc
and
push
jmp
arpl
xchg
sub
jnp
imul
repz
jecxz
adc
and
jmp
arpl
xchg
sub
jnp
jnp
pop
repnz
add
xor
inc
arpl
xchg
aam
mov
or
or
jecxz
movsb
or
sbb
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
mov
ret
push
mov
popf
push
jmp
jecxz
shll
ret
push
mov
mov
xchg
jae
arpl
xor
scas
repz
ja
repz
xor
and
xchg
faddl
jae
arpl
mov
mov
pop
repz
jecxz
adc
sbbb
mov
in
lret
or
or
sbb
test
nop
jb
int3
pop
mov
dec
push
cs
addr16
clc
or
or
xor
fisttps
xchg
lods
mov
pusha
and
out
push
ret
jb
data16
insl
pop
pusha
mov
js
mov
xor
dec
add
arpl
flds
sti
hlt
xor
dec
jbe
jecxz
sahf
or
mov
out
aas
lods
mov
pop
lock
shrb
mov
pop
mov
ret
data16
cmpsb
add
mov
pop
ret
add
mov
jl
mov
fidivs
sub
je
mov
inc
repz
sub
fildl
mov
pop
ss
jecxz
pop
jae
xchg
mov
mov
and
leave
jecxz
adc
and
push
lahf
inc
pop
jae
arpl
shlb
mull
adc
insl
roll
dec
xchg
jp
adc
pop
stos
push
faddl
adc
and
and
xor
rcrw
mov
outsl
jbe
push
mov
mov
movsb
push
jecxz
out
pop
repnz
call
faddl
iret
and
adc
add
repz
xor
and
push
mov
mov
xchg
jae
arpl
xor
and
adc
add
repz
xor
and
push
mov
mov
xchg
jae
mov
lock
stos
data16
aad
mov
scas
addl
in
pop
jae
mov
pushf
cmc
repnz
mov
xlat
jmp
je
nop
loop
xchg
push
xlat
sub
dec
sbb
call
popa
xchg
jp
aas
or
inc
outsb
mov
popf
into
notl
imul
pop
mov
push
out
lods
add
fistpl
jmp
pop
add
rorl
mov
mov
fwait
pop
add
ja
out
dec
call
stos
push
and
test
stos
dec
xchg
cmpsb
popf
ret
mov
inc
mov
dec
cld
jb
insb
ja
cmp
pop
sbb
sbb
jno
loopne
dec
and
pop
int
jno
out
xchg
push
pop
jno
stos
cli
addr16
loope
pop
outsl
inc
adc
es
lret
xchg
lret
faddp
cmp
shrb
pop
imull
sahf
lock
pop
pop
jmp
jp
and
aaa
xor
insl
je
stos
mov
hlt
sbb
fs
push
or
cmpsl
and
ja
cwtl
pop
insb
jle
jecxz
or
xor
add
fcmovu
jns
pop
push
icebp
fdivrl
lcall
and
stos
and
idivl
xor
jl
jmp
mov
xchg
out
or
push
mov
sbb
mov
inc
mov
cwtl
std
aaa
xchg
test
lea
lahf
pop
cmp
jmp
and
cmp
in
add
fs
mov
jno
pusha
test
fnstenv
lea
mov
add
frstor
loop
leave
xchg
pop
data16
pop
cmp
dec
ss
pop
test
jns
ds
jle
addr16
sarl
mov
add
ljmp
rcrb
adc
pop
psubsb
inc
repz
xlat
cmc
inc
mov
ret
lahf
mov
je
leave
mov
sbb
repz
je
xor
sub
adc
push
mov
pop
cmpsb
dec
pop
xor
aam
pop
jl
ret
mov
xchg
cltd
push
sarl
test
xchg
cwtl
test
js
add
sub
xchg
fisubrs
adc
ror
mov
mov
and
cmp
inc
in
inc
jp
dec
pop
fwait
push
or
iret
mov
ja
dec
and
pop
push
sub
dec
pop
jne
or
pop
movsb
pop
es
mov
and
add
out
fsubr
rol
adc
int
mov
jo
sti
addr16
dec
sub
in
sbb
lods
mov
test
jle
push
dec
jno
xchg
ljmp
call
xchg
push
push
dec
lock
rcl
mov
pushf
xchg
mov
or
out
das
dec
sbb
sub
loopne
cmp
add
mov
and
jno
cwtl
push
mov
jge
popa
cmp
xchg
repnz
or
push
lods
and
add
aas
jnp
aas
in
pop
movsl
pop
icebp
sub
out
pop
aad
cmp
push
lds
cli
dec
fwait
out
push
jo
fildl
test
jae
test
dec
fwait
lods
and
int
shlb
in
sbbl
pop
sbb
in
pusha
push
adc
push
pop
and
inc
aad
aam
iret
xor
push
pop
push
lahf
sub
adc
cmp
mov
stos
sbb
mov
stc
aam
xchg
inc
int3
insl
repnz
ss
cmpsb
mov
push
adc
ds
xchg
je
mov
fdivl
sbb
push
xor
addl
or
push
add
mov
lcall
imul
and
lds
inc
popa
rorb
xchg
movsb
pop
rorl
mov
adc
insl
or
bound
out
mov
jge
cli
insl
or
inc
das
testb
mov
mov
movsb
icebp
jae
jl
and
lret
out
sti
out
pop
mov
cmp
cmpsb
decl
mov
mov
sub
mov
xor
gs
sub
clc
lahf
out
push
cmp
add
pop
pop
fcom
lds
subb
rcrb
jg
push
cs
pop
repz
cmp
mov
adc
xlat
outsl
mov
sub
repz
dec
push
sahf
adc
loop
cmpsl
int
xor
inc
enter
and
pusha
dec
mov
jne
outsl
dec
xor
fldl2e
adc
pop
and
xchg
cmpl
mov
mov
mov
out
push
or
mov
add
sbb
mov
lds
rolb
bound
cld
xor
lcall
outsb
pop
sub
int
inc
mov
adc
inc
add
out
dec
loopne
ret
and
push
gs
adc
cmp
xchg
leave
or
aam
and
and
xor
faddl
dec
cmc
jl
cmp
push
stc
sbb
popf
push
cmp
nop
mov
push
and
lods
sub
xchg
int
adc
cmc
jmp
or
fcoml
push
cltd
fs
cmp
pop
icebp
xor
lcall
mov
jns
ss
jnp
fs
cwtl
nop
ss
xchg
fsub
push
faddl
sub
subb
jp
test
xlat
lods
stos
inc
sub
fidivl
inc
and
fcomp
push
add
add
dec
fldt
call
mov
leave
int
popa
dec
jge
xlat
fiaddl
mov
incl
call
inc
in
push
cwtl
arpl
jbe
loop
pop
jg
shll
arpl
test
pushf
daa
add
out
cltd
jnp
mov
push
or
add
or
ret
sbb
push
sbb
in
push
test
pop
mov
sbb
and
test
sub
fbld
jnp
sbb
lds
inc
jno
fst
jo
cmp
arpl
xor
lock
lods
and
rcl
neg
inc
cmp
mov
sbb
jmp
flds
push
imul
sbb
mov
lahf
enter
fisttps
xor
xchg
push
mov
mov
decb
repz
jb
in
sub
decl
sbb
pop
aam
test
mov
add
sysenter
das
push
dec
outsb
dec
bound
insb
xchg
inc
lds
sub
and
and
and
movsb
sub
icebp
adc
xor
and
inc
mov
outsl
pop
xchg
mov
into
adc
stos
arpl
or
add
adc
jmp
loop
mov
sbb
hlt
jnp
lods
test
xchg
pop
aaa
lock
ss
repnz
jge,pn
xchg
sahf
pop
cmpsl
inc
push
add
hlt
shll
add
xchg
inc
mov
mov
ss
fisubrl
icebp
in
jle
push
xor
pushf
mov
test
ja
repz
rdpmc
out
sbb
into
dec
push
cmpsl
push
or
mov
sub
mov
cwtl
mov
pop
ret
push
jmp
xor
pop
iret
les
jl
out
stos
mov
arpl
in
pusha
or
xchg
mov
or
xor
mov
gs
fstps
or
shrl
inc
aad
cli
std
adc
add
mov
sbb
xorb
xlat
leave
call
dec
into
inc
ficoml
xchg
ljmp
cld
sahf
gs
push
push
cmp
dec
lods
push
and
int
ss
aad
test
lds
add
inc
popf
mov
sub
push
loope
mov
pop
aad
movsl
out
pop
dec
cld
pushf
push
push
jmp
inc
push
enter
cwtl
insb
clc
jns
stc
mov
aam
mov
sbb
shr
xchg
xorl
aas
xchg
mov
repz
mov
inc
xchg
lret
enter
cmp
and
je
into
mov
icebp
inc
mov
xlat
aas
jl
or
mov
in
add
mov
sub
xlat
xchg
clc
sti
push
inc
ret
jns
sar
xor
inc
mov
xlat
insb
and
ret
mov
in
cmp
xchg
stos
lds
or
add
repz
push
popf
sub
add
cs
pop
inc
dec
add
rcrb
loop
lods
add
rolb
fnstsw
ja
les
or
loopne
xchg
int3
lret
sti
es
sub
es
stos
fs
add
xor
stc
inc
outsb
jnp
shlb
mov
divb
data16
xchg
mov
loopne
cli
dec
insl
aam
in
dec
mov
add
or
nop
pop
scas
mov
cld
gs
xchg
mov
sbb
cwtl
jl
les
mov
or
add
shll
scas
aaa
pushf
das
add
imul
or
mov
shl
sahf
addl
sti
push
jne
mov
lahf
cltd
push
jo,pn
mov
int
test
and
xchg
or
fsubl
xor
hlt
testl
loopne
mov
push
xor
das
mov
rol
or
outsb
xor
sub
ljmp
scas
cld
xor
push
push
popl
jp
xchg
or
push
bound
pop
xchg
cwtl
pusha
inc
pushf
adcl
inc
pop
shlb
lret
outsl
das
push
mov
pop
jns
daa
cmc
fsubrl
mov
mov
loop
into
ret
jge
and
pop
sub
or
add
inc
cmp
cmp
jnp
imul
loop
dec
out
fcomi
out
sahf
fiaddl
mov
scas
xchg
dec
xor
jp
jmp
adc
ds
ja
sti
call
out
sub
call
cmp
repz
rolb
pop
adc
jns
nop
jecxz
adc
in
mov
and
jns
sbb
and
movsl
scas
sbb
push
push
add
subb
adc
push
sub
pop
insb
inc
mov
adc
jno
iret
xchg
adc
cmp
xor
loopne
dec
das
inc
or
ja
int3
adc
test
addb
inc
stos
and
sub
pop
sub
into
lock
sbb
pop
aam
maskmovq
mull
lahf
xchg
mov
or
lea
xor
std
daa
push
nop
out
xchg
pop
mov
pop
in
mov
or
jl
mov
dec
popa
pop
mov
pop
mov
clc
xchg
jno
xchg
add
or
outsb
subb
mov
cmp
ja
sub
dec
and
or
inc
mov
jl
lea
mov
pop
cli
mov
fmuls
subb
push
jecxz
cmc
mov
ss
mov
or
sub
insl
loop
out
lret
pop
pop
in
lahf
lea
in
mov
int3
cli
cmpsb
sub
jbe
push
mov
pop
pop
mov
add
sbbb
xor
mov
or
xchg
mov
xor
mov
lcall
pop
sbb
cmp
mov
add
aaa
xor
clc
jecxz
jnp
push
scas
xchg
jg
xor
gs
sub
and
scas
divb
cmp
idivb
cmpsb
in
sub
push
xchg
in
add
pop
mov
cltd
sbb
or
mov
mov
push
jns
jno
mov
divb
mov
ja
call
or
shlb
outsl
aad
daa
out
add
pushf
mov
andl
mov
lcall
cwtl
ja
fs
add
xchg
jl
lret
jl
xchg
fmull
rclb
push
imul
push
sub
sub
roll
lcall
ret
stos
jp
jl
ds
xchg
fisubl
clc
scas
sbb
inc
das
cmp
push
pop
stos
pop
mov
jl
pop
popf
out
incb
test
cmpsl
dec
jns
dec
mov
ret
inc
pop
jg
jno
xor
data16
pop
rorl
inc
adc
mov
mov
jo
lods
sbb
mov
scas
cmpsb
dec
fadd
mov
or
adc
enter
clc
adc
ret
stc
inc
sbb
xchg
sub
push
lock
cmp
int
jecxz
ret
mov
jmp
pop
push
into
shr
test
int
or
pop
std
stos
stos
inc
sub
xchg
sub
data16
jae
push
movsb
imul
test
sbb
pmaxsw
inc
shrb
add
pop
sub
jge
jno
lea
fidivs
ljmp
jg
push
or
jnp
add
ret
jecxz
pop
adc
mov
xchg
out
popf
data16
pop
jb
ret
ljmp
dec
pop
sbb
out
xchg
mov
jl
mov
mov
aas
dec
push
jns
jge
sarb
jmp
outsb
jg
fucom
std
sbb
inc
lret
mov
pushf
fisttpl
jno
jle
adc
jp
mov
mov
push
aas
push
adc
push
stc
mov
orb
shll
sti
cli
inc
dec
and
test
sub
mov
leave
leave
xor
lcall
and
push
mov
test
pop
xor
dec
popf
mov
jmp
iret
into
sbb
pop
cwtl
cmp
or
and
sbb
cltd
decl
int
sub
cmp
jl
roll
mov
mov
push
mov
mov
dec
mov
sbb
xor
stc
hlt
lods
inc
add
movsb
dec
push
xor
add
pusha
lcall
int
mov
fistpll
sbb
hlt
fmuls
jl
inc
ret
add
test
push
dec
mov
roll
inc
xchg
xor
shrl
lret
lahf
mov
jns
add
inc
mov
cwtl
jg
add
int
xchg
mov
flds
pop
cmpsb
add
pop
dec
sbb
lods
lret
mov
outsb
rcrb
add
rorl
push
rcr
enter
jg
add
push
mov
fldcw
pop
dec
mov
fadd
jo
mov
xchg
push
sbb
in
out
jno
adc
adc
pop
push
insl
ficoms
dec
or
add
xchg
jo
imull
xor
les
add
adc
inc
and
adc
dec
sbb
xchg
mov
inc
xor
or
jne
orl
xchg
hlt
in
mov
movsl
fists
mov
ret
add
ja
mov
adc
mov
xchg
or
adc
push
cmp
jp
mov
rcl
das
mov
jb
jae
ljmp
imul
sbbb
mov
push
leave
mov
add
cs
add
jge
mov
and
test
sub
clc
add
shlb
addr16
or
pop
push
test
mov
dec
js
sbb
mov
cli
xor
in
repnz
test
fisttps
fisttpll
fwait
pop
into
mov
add
cmp
ds
push
and
or
cmp
rep
push
aas
sub
mov
push
adc
fwait
dec
cmp
push
mov
mov
arpl
mov
pop
mov
sub
aas
cmp
imul
pop
ficompl
jo
in
lock
dec
adc
cmp
jl,pn
shrl
fists
test
push
adc
pop
cmp
stc
pop
xchg
adc
test
dec
dec
imul
mov
push
jne
xor
jg
in
or
incb
ret
xor
rcll
lods
fcmovnu
add
push
fdivs
lret
mov
lds
roll
or
xchg
imul
sahf
imul
arpl
in
adcb
repz
in
jne
divl
pop
jns
mov
inc
clc
mov
out
mov
pop
jmp
in
imulb
add
cld
imul
stos
cli
jns
fsub
cmp
into
add
pop
out
push
push
and
bound
iret
cwtl
xlat
popf
cmp
outsl
xor
jno
std
mov
adc
add
insl
adc
mov
sahf
sbb
and
mov
fldcw
dec
mov
push
fs
lods
push
xor
dec
shlb
lods
sbb
and
idivb
add
push
pop
and
ds
mov
lahf
cmp
test
jmp
jbe
cld
pop
jl
loopne
push
xchg
jmp
lods
cmp
xchg
sarl
xchg
dec
sbb
add
xchg
inc
stos
lods
std
fnsave
inc
lods
xor
scas
add
sub
pushf
mov
mov
inc
call
xor
push
pop
outsl
xor
pop
in
inc
mov
fsubrl
mov
mov
adc
insb
call
cld
ret
push
and
fsubr
mov
mov
fdiv
and
popa
das
or
sbb
pop
mov
push
aas
dec
loope
iret
push
jbe
andl
mov
mov
lock
lcall
daa
fsubrl
pop
ss
cmc
sub
out
sub
sbb
push
out
xor
scas
test
lods
enter
jo
into
xor
mov
popa
sbb
pmaxsw
repnz
dec
jbe
inc
pop
push
inc
in
dec
pop
add
push
pop
or
call
push
loop
gs
push
jnp
sahf
and
or
jge
mov
dec
sti
cwtl
jle
adc
call
xor
inc
fdivrp
mov
int
movb
out
cmp
divl
or
jbe
js
outsb
and
or
clc
addr16
push
pop
jne
movsl
std
jl
imul
ds
push
push
das
out
adcb
pop
enter
inc
pop
sbbl
aam
or
in
fnclex
insb
mov
pop
cld
aad
movsb
iret
sub
cmp
xor
hlt
ficompl
je
inc
inc
pushl
sub
lret
inc
mov
fldl
sbb
inc
cltd
enter
or
cmp
pushf
cmp
sbb
or
mov
out
inc
mov
mov
add
jle
mov
jl
std
std
dec
stc
div
mov
sti
into
cli
add
dec
jbe
gs
in
into
outsl
into
push
push
out
xor
ror
leave
orl
xlat
enter
out
jbe
aaa
mov
push
pusha
mov
xadd
mov
lret
pop
add
pop
sbb
xor
push
mov
repnz
ficomps
cwtl
dec
inc
shlb
and
clc
frstor
test
mov
ss
testb
mov
sub
int3
shrb
les
cmp
out
das
xlat
aad
adc
iret
je
jae
and
mov
fistps
sbb
lret
pop
mov
mov
imul
cwtl
and
call
cmp
or
xorl
jns
adc
nop
jnp
mov
insl
sub
ja
jnp
imul
ljmp
pusha
rorb
fidivrl
adcl
out
or
mov
out
arpl
dec
dec
jb
inc
inc
jecxz
adc
loopne
dec
ret
nop
push
test
sub
add
out
fisttpl
or
cmc
loope
dec
stos
dec
outsl
push
mov
cmp
test
mov
or
adc
sub
xchg
mov
xor
pop
pop
mov
mov
add
ficoml
repz
loop
or
jmp
jg
pop
das
push
hlt
jl
mov
ljmp
popa
das
mov
mov
stos
push
enter
int
xor
inc
inc
and
lods
jno
and
hlt
jmp
mov
rolb
stc
loop
and
sub
mov
mov
andnps
das
test
loope
loope
cmp
or
insl
pop
lret
sahf
sub
insl
lret
sti
shr
loopne
or
sbbl
sti
pop
adc
pop
push
mov
mov
jp
and
dec
fnstsw
or
dec
xor
daa
pusha
cwtl
push
mov
shlb
sub
adc
pushf
push
subl
mov
clc
je
jae
cmpb
repnz
std
mov
ret
jae
repnz
dec
add
lcall
cmp
int3
fadd
movsb
stos
stc
loopne
mov
sbb
fmull
or
sub
push
xchg
jnp
and
mov
pop
into
cmc
xchg
pushf
mov
push
mov
sbb
fdivl
cmpb
test
js
loope
daa
adc
in
rcrl
xor
push
shrl
sbb
es
jnp
int3
jge
inc
sti
cld
sbb
int3
sub
adc
jae
sub
push
clc
int3
popa
ja
mov
imul
push
cmp
inc
ret
pop
or
test
mov
movsl
xor
lcall
inc
icebp
inc
call
xor
jp
bound
push
int
and
arpl
fmuls
mov
pop
das
js
dec
imul
or
push
mov
mov
scas
fs
sub
mov
hlt
cmc
mov
sbb
xchg
arpl
xor
and
adc
add
repz
xor
and
push
mov
mov
xchg
jae
arpl
xor
and
adc
add
repz
xor
and
push
mov
mov
xchg
jae
sub
sub
mov
adc
adc
add
xor
and
push
mov
mov
xchg
jae
arpl
xor
and
xchg
jecxz
adc
dec
cltd
shll
mov
cmp
pop
add
aas
mov
cltd
pop
test
or
mov
sub
imul
cltd
pop
test
outsl
fstps
dec
stc
mov
sub
pop
fildll
iret
jns
mov
cltd
pop
test
outsl
fstps
dec
stc
mov
dec
ljmp
sbb
pop
callw
cmp
mov
std
ja
test
xchg
jl
mov
aaa
popa
mov
loopne
repnz
jg
outsl
mov
loope
out
sub
test
out
mov
cmp
mov
inc
aad
inc
mov
adc
decb
cltd
pop
xchg
iret
lock
pushf
or
fsubl
mov
push
dec
push
dec
shlb
jne
jo
scas
and
cmpsb
daa
xchg
inc
hlt
insb
imul
int3
mov
cmc
cmpsl
dec
adc
add
scas
pop
outsl
movsl
and
xlat
and
inc
push
mov
pop
sbb
jl
sbb
in
sbb
sbb
js
mov
cltd
pop
test
outsl
fstps
dec
stc
mov
sub
pop
fildll
adc
dec
cltd
pop
rorb
movsl
add
xor
lret
inc
lret
sub
cmp
pop
fwait
jl
dec
lret
sbb
or
int
enter
push
or
mov
mov
movsl
sub
das
lret
push
cmp
outsl
fstps
dec
stc
mov
sub
pop
fildll
jns
mov
cltd
pop
test
outsl
fstps
dec
stc
mov
sub
pop
fildll
jns
mov
sbbb
scas
add
cli
or
or
cmp
das
fisubs
lret
inc
popf
jb
ret
cmpsb
daa
imul
sahf
out
les
mov
fs
sub
jecxz
arpl
jno
sbb
cmpsl
push
push
jne
dec
insl
sahf
fisttps
adc
aad
inc
mov
jbe
jo
sub
or
jecxz
lcall
orb
xor
xchg
fcomps
ss
dec
sub
push
fsubl
imul
xor
jle
jne
cltd
mov
push
push
xorl
rorb
bound
subb
mov
bswap
sbb
test
adc
sbb
mov
fcom
adc
dec
or
push
aad
movl
lds
mov
sbb
mov
pop
je
mov
mov
inc
cmp
jle
adc
ljmp
mov
cld
jae
mov
adc
ret
arpl
inc
sbb
lcall
ror
mov
lcall
or
sub
mov
mov
pop
test
push
jmp
cmpsl
in
sbb
and
xchg
jno
ja
into
fwait
and
push
scas
icebp
pop
pop
mov
xchg
stos
sbb
pop
bound
and
pop
jns
push
push
jecxz
in
test
and
daa
pop
arpl
movsb
aaa
sub
inc
out
sbb
add
push
push
dec
daa
insl
cmpsb
fnstenv
ljmp
je
imul
xor
cld
mov
cmpsl
pop
leave
mov
test
jne
mov
ficomps
lcall
push
adc
outsb
ljmp
sbb
in
jns
lcall
add
add
adc
jo
outsb
fbstp
jo
jbe
cmp
sar
inc
jae
loopne
and
ffreep
jns
mov
cmp
xchg
sub
jo
loope
mov
jg
pop
fisubrl
jle
cmc
test
push
mov
shll
int
pop
aad
push
test
aam
addr16
std
pop
es
in
pop
mov
xchg
sahf
mov
add
jp
jbe
adc
mov
push
ss
or
aaa
jb
movsl
loope
je
test
stc
decb
pushf
sub
lret
popf
sbb
fstp
imulb
dec
cmp
sahf
jno
jbe
ljmp
xchg
xor
mov
adc
punpcklwd
jecxz
rcrb
je
lea
xor
out
lret
xor
inc
add
fstps
adcl
sbb
lret
inc
mov
in
ror
mov
mov
xchg
rclb
aam
pushf
loopne
cmp
ss
mov
out
testl
sti
adc
in
or
aam
pop
mov
je
nop
mov
popa
inc
inc
ficompl
xchg
and
loopne
repnz
adc
dec
int3
stc
or
xor
pop
mov
lods
aam
arpl
mov
pop
sbb
jg
aas
jbe
adc
sub
or
pop
push
popf
pop
mov
testl
mov
fisttpll
scas
aaa
sahf
or
mov
adc
movb
cmp
iret
adc
or
pop
push
xchg
or
cli
sbb
sub
inc
xor
aas
test
adc
arpl
adc
xlat
adc
add
or
xchg
adc
nop
fiadds
dec
in
push
daa
jg
mov
or
in
out
jle
push
ss
cmp
sub
hlt
fcom
pop
sub
iret
push
insb
mov
jle
dec
sub
xchg
in
push
mov
jecxz
push
push
xor
enter
cmp
sahf
je
aam
sbb
pop
mov
aam
fsubrl
shlb
fnstenv
icebp
loopne
test
cmc
sarb
ret
js
fisubs
inc
push
int3
xor
or
inc
sbb
stos
pop
loopne
mov
in
testb
sbb
stc
rol
loopne
or
andl
jmp
sbb
and
lods
test
inc
mov
mov
jae
in
inc
leave
mov
aad
fwait
add
leave
ljmp
out
and
push
mov
or
orl
xor
jge
pop
jno
popa
lret
xchg
or
cmp
stos
mov
xorl
and
mov
jg
or
mov
mov
mov
repnz
or
mov
std
jg
rcll
jecxz
mov
push
addr16
shll
dec
data16
inc
mov
and
or
dec
lret
sbbb
inc
xlat
and
push
push
ss
es
mov
jge
into
outsl
ja
inc
adc
inc
sbb
and
kxorb
fisttpl
ds
dec
dec
mov
dec
ljmp
mov
sbb
inc
jg
mov
pop
fisttpl
jo
lds
dec
aaa
pop
mov
lret
xlat
xchg
or
mov
sarl
xor
cmc
fisttps
fcoml
hlt
rorl
out
push
or
mov
pop
icebp
mov
jmp
call
or
xchg
popf
xchg
mov
cmp
negl
xchg
and
add
sub
hlt
pop
mov
out
addl
js
pop
mov
out
cmp
sbb
mov
sub
and
iret
test
cmpb
xor
mov
cmp
lcall
arpl
mov
pop
lahf
cmc
pop
dec
call
sarb
stc
hlt
jle
icebp
cmc
adc
xor
pop
cmpsl
aad
xor
xchg
adc
mov
mov
ds
mov
push
cmp
cmpsl
fildll
jo
add
je
in
xor
mov
jo
popf
push
mov
xlat
cmp
add
mov
addl
ljmp
add
cmpsb
sbb
out
and
sbb
push
or
sbb
lock
scas
sahf
inc
cmp
jecxz
test
adc
xchg
jns
or
sub
inc
mov
push
jl
iret
lcall
adc
or
inc
shll
dec
nop
xor
push
xor
filds
mov
add
filds
in
push
loopne
mov
pop
pop
es
pop
jb
adc
faddl
or
cmc
addr16
fwait
loope
adc
cmp
sub
fimull
es
sbb
out
push
andb
stos
xor
lea
jns
cli
pop
xchg
arpl
call
mov
clc
sbbb
push
pop
xlat
fcmove
daa
add
push
inc
aaa
xlat
icebp
je
push
cwtl
jbe
jmp
xchg
data16
mov
fisubl
stc
or
enter
enter
aam
cmp
mov
cmp
mov
adc
leave
mov
mov
lods
mov
and
pop
daa
ss
cli
pop
insb
push
shll
mov
lock
sbb
lock
pop
dec
dec
lods
or
repnz
shl
loopne
jnp
pop
dec
mov
push
mov
push
ljmp
inc
rcl
sbb
sahf
adc
pop
cli
mov
sub
push
or
mov
add
mov
mov
ffreep
clc
mov
hlt
mov
mov
cmp
test
mov
loopne
xchg
and
xchg
push
bound
out
sbb
cmpsb
cmp
out
mov
ljmp
stos
jp
or
test
mov
gs
adc
sti
xor
mov
fs
out
jns
mov
mov
mov
dec
rclb
sub
adc
fld1
aad
fstps
dec
xlat
and
movsl
xchg
mov
lds
mov
in
pop
mov
jnp
hlt
mov
lret
mov
push
lds
outsl
jecxz
push
iret
fimull
stc
popa
arpl
mov
repz
dec
mov
stc
xor
adc
lahf
std
lock
outsb
call
adc
or
xor
sub
and
and
movsb
arpl
sub
mov
dec
jp
mov
push
dec
pop
pop
dec
aad
icebp
lcall
idivl
in
mov
mov
mov
xchg
push
pop
sbb
inc
outsb
sbb
add
ds
sarl
mov
lcall
xor
call
lret
jg
cs
jno
divl
stos
add
xchg
rorl
jno
cwtl
aam
mov
xor
orl
jp
xorb
mov
mov
iret
xchg
sub
aam
xchg
call
xchg
sbb
ja
repz
mov
aad
inc
test
jnp
xor
fiadds
shl
icebp
out
out
lds
and
adc
in
xchg
jle
ja
out
lret
mov
xchg
movsl
inc
add
jmp
insl
mov
imul
add
pop
pop
dec
jbe
leave
push
rorb
cmpsl
sbb
mov
xchg
sub
nop
out
icebp
pop
xor
pop
jb
add
stos
ljmp
jle
adc
mov
adc
mov
xor
xchg
dec
fs
fs
adc
xchg
push
lods
jl
sub
inc
jbe
and
out
xadd
in
fnstsw
cmpsl
push
jl
repnz
dec
shrl
mov
mov
jp
mov
or
jno
cld
movb
dec
jb
out
mov
leave
xor
pushw
loopne
pop
lock
sub
xor
jbe
cmp
dec
push
xchg
inc
and
mov
and
jg
pop
idivb
popa
test
xor
aad
sarb
and
rcrl
xor
sbb
push
lret
mov
xchg
insl
in
movsb
push
pop
je
inc
rorl
push
xor
arpl
xchg
and
into
cs
jl
addr16
jmp
lock
jge
nop
int
push
adc
sbb
push
pop
adc
push
add
cli
jg
push
repz
and
outsb
or
movsb
pop
out
and
cmp
fistl
fwait
aam
sub
icebp
inc
daa
mov
adc
and
scas
push
js
pushf
pop
mov
aam
loope
xlat
loope
cltd
mov
jg
or
xchg
inc
enter
loope
pushf
pop
cmp
flds
pop
xor
or
gs
jno
lea
data16
sahf
leave
and
xor
in
and
fstps
movsl
sbb
lahf
pop
sbb
add
insb
push
dec
in
das
or
roll
gs
add
push
insl
jl
and
and
ja
icebp
push
xchg
inc
add
call
stos
es
mov
cli
adc
imul
out
xor
adc
jle
mov
ret
popf
jns
mov
cmpsb
pushf
lret
bound
cmp
es
sub
add
stos
cmp
popa
inc
xor
xor
pop
inc
test
jnp
imul
or
pop
mov
jl
pop
xchg
inc
sub
rcl
out
lcall
push
loopne
addr16
xorl
cmpsb
int
mov
mov
fiadds
add
cmc
xchg
sarl
out
push
lds
pop
fistps
xchg
cld
or
cltd
sub
movsb
mov
repnz
push
rclb
mov
sbb
pop
fcoms
sahf
xor
jg
dec
push
add
fcomip
cmp
out
mov
nop
leave
pop
aas
test
jmp
xchg
dec
jb
push
sbb
je
sub
inc
insb
lret
push
dec
xchg
and
push
mov
xchg
sbb
pop
loop
jb
jno
inc
pop
call
mov
pop
and
cmp
sbb
scas
insl
jb
cmp
scas
inc
mov
pop
stos
sub
jno
out
inc
mul
ss
fcmove
adc
inc
add
sub
adc
mov
or
push
out
mov
push
ret
mov
push
loope
mov
push
inc
loope
and
nop
inc
cwtl
sbb
aam
dec
jle
aam
icebp
cmp
and
adc
js
daa
mov
fwait
jmp
fnstenv
cmc
ljmp
rcr
in
aad
daa
or
lahf
push
pop
push
lret
dec
xchg
cld
int
dec
scas
shll
and
lret
sbb
pop
fstpt
adc
scas
mov
sbb
mov
lock
cmp
mov
test
movsb
xlat
in
cli
ja
cmpsb
cmp
xchg
outsb
add
adc
mov
xchg
xor
push
push
lds
adc
and
dec
sbb
xchg
call
mov
test
adcl
pop
cmp
jle
adc
fs
and
add
cli
cltd
and
jmp
fdivs
inc
ljmp
lret
imul
cmp
enter
shl
inc
cmpb
mov
inc
inc
inc
or
and
lret
ljmp
ss
jge
adc
and
cltd
mulb
dec
gs
jmp
pop
mov
mov
adc
pop
inc
dec
ja
lock
rolb
aas
xor
icebp
pop
andb
dec
xor
inc
push
adc
fcmovnu
es
mov
repnz
or
adc
jl
and
ljmp
adc
push
add
mov
jbe
test
push
mov
pop
pop
repnz
int3
mov
movsl
xchg
cmp
int3
dec
adc
pop
iret
mov
or
push
int3
cmpb
xor
sub
out
push
mov
jp
sbb
or
shrl
out
sbb
pop
dec
insl
or
ficomps
add
out
divb
xchg
inc
adc
and
rcrb
push
cld
mov
inc
loope
mov
pop
mov
xchg
xchg
or
cmc
mov
adc
es
test
dec
test
imul
js
mov
popa
inc
cmpl
shl
das
xor
add
shr
adc
jl
push
adc
je
jb
cmpsb
repz
cmp
xor
xchg
scas
iret
inc
cli
push
pop
push
lds
shrl
pop
mov
pop
add
mov
sub
mov
rolb
mov
sbb
jne
mov
pop
dec
adc
icebp
pop
mov
rcrl
cmp
mov
cmp
shll
test
stc
loop
lret
mov
pop
or
sti
inc
mov
sbb
add
fst
bound
imul
popa
es
adcl
mov
ja
repnz
ficoml
xchg
test
pushf
popf
dec
mov
subl
aam
adc
pop
movsl
iret
cli
shll
fstpl
add
cld
test
push
sbb
stos
js
push
loope
cld
xorl
das
mov
addr16
into
lea
sbb
cmp
je
jge
mov
ret
fistl
inc
mov
cmpsl
fstpt
sbbl
enter
dec
jmp
das
jo
loope
xchg
jno
call
add
pop
sub
test
pop
pop
inc
ds
and
add
add
lea
push
push
cmpsb
push
fsubrl
mov
mov
push
aaa
mov
fisttps
mov
mov
inc
ss
jl
rcl
or
mulb
or
push
loop
xor
test
into
cmpsl
es
das
pop
and
aad
mov
popf
adc
addr16
scas
cmpsb
add
movsl
adc
dec
vpscatterqd
fsubs
popf
mov
push
insb
lods
mov
lret
cltd
stos
xor
or
cld
addr16
xlat
jmp
cmp
stos
xchg
xchg
mov
movsb
mov
sub
dec
into
aam
aad
outsb
fildl
cs
adc
sti
inc
fisttps
sub
dec
roll
stos
popa
pushf
shr
es
or
mov
lea
lods
std
push
mov
cmpsb
push
dec
mov
test
pop
mov
mov
into
xlat
pop
push
fiadds
ret
stos
jae
out
xchg
cli
sub
push
push
sar
or
imul
jg
xchg
push
push
sti
std
push
cmc
imul
icebp
dec
mov
adc
adc
cmc
cli
pop
mov
movsl
add
jge
jle
inc
add
out
popa
jae
pop
in
dec
out
in
sbb
dec
fwait
incb
sbb
add
mov
call
sbb
sti
dec
rclb
mov
lds
push
push
aaa
je
orb
mov
popf
xchg
mov
js
lret
dec
test
mov
mov
outsl
sbb
flds
iret
into
pop
mov
icebp
outsl
lds
inc
sarl
pop
loop
rclb
shrl
adc
jmp
jo
test
push
aaa
xor
mov
jo
mov
shlw
mov
push
sub
add
or
sub
mov
stos
fwait
lea
popa
jbe
xor
xchg
xchg
icebp
rorl
mov
jmp
xor
cli
out
xchg
stc
int
fcompl
mov
arpl
loop,pt
dec
bound
mov
inc
mov
les
cmpsl
ficoms
popf
mov
jge
in
loop
out
pop
daa
call
cmp
adc
loopne
test
mov
inc
pop
and
mov
js
mov
leave
push
sub
stos
mov
push
push
es
roll
imul
or
fadds
nop
pop
sub
pop
cmp
xor
and
sub
push
xor
rclb
dec
adc
mov
ret
addr16
imul
testb
lods
pop
jno
mov
sub
xchg
jnp
pop
out
cmp
daa
mov
shl
cmp
push
aad
test
lret
lcall
and
adc
push
mov
dec
push
out
frstor
xor
inc
jns
lods
sub
test
sub
adc
imul
lods
loope
out
lcall
or
push
rcl
xor
cmp
mov
repnz
or
out
mov
mov
push
les
jge
cltd
ja
stc
mov
rorb
ret
pop
jge
mov
xchg
jns
cmp
dec
adc
lods
imul
repz
imul
and
push
xor
scas
repz
fcomp
insb
ds
fstpt
xchg
popf
sbb
pop
jae
mov
adc
xor
dec
xor
addr16
lock
push
inc
jl
loopne
adc
push
andb
sbb
data16
inc
mov
test
data16
cli
dec
shlb
jmp
aad
divb
fisubl
sub
cmpsl
je
addl
mov
out
cwtl
aaa
out
jae
mov
ret
int
aam
stos
sub
insb
dec
mov
sahf
xchg
add
out
das
xchg
add
fwait
inc
outsb
push
xchg
xor
test
mov
int3
test
pop
cmp
sbb
js
int3
cmp
ss
mov
sub
mov
or
divl
insl
testl
xor
xor
xchg
pop
les
cmp
pop
imul
out
sub
mov
mov
jle
xor
pop
jbe
push
adc
xchg
imul
ja
jp
jmp
sti
pop
lods
loopne
in
pop
jo
sub
cwtl
decb
jo
mov
xchg
cmpsb
fildl
stc
add
insl
fs
push
mov
mov
fiadds
test
inc
ret
mov
xchg
mov
xchg
pop
pop
cld
jg
jp
dec
mov
mov
dec
dec
mov
xor
iret
ss
stos
js
xchg
lods
test
sub
inc
popf
push
sbb
imul
cmpsl
xor
inc
mov
jmp
sti
clc
cmp
outsb
push
out
mov
test
mov
jge
fistps
icebp
push
loopne
cmp
lret
insl
and
lcall
out
jb
lock
or
aad
mov
je
int
jb
inc
pop
cmp
das
push
rol
add
cmp
vmovdqa
push
jbe
test
or
mov
loope
fisubl
mov
xchg
arpl
adc
push
scas
mov
imul
fs
ss
mov
outsb
test
jb
inc
cmp
mov
scas
fimull
jecxz
aaa
sti
icebp
and
fnstcw
sbb
imul
pop
jmp
scas
sbb
dec
out
pop
fildll
jns
mov
cltd
pop
test
outsl
fstps
dec
stc
mov
sub
pop
fildll
jns
mov
sbb
sub
mov
pop
jmp
scas
sbb
dec
out
pop
fisubrs
jns
mov
cltd
pop
test
outsl
jmp
push
mov
sub
cmpsb
daa
xchg
aaa
xchg
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lods
mov
cmpsb
lea
xchg
mov
ss
push
insl
jbe
es
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
cmp
push
adc
insl
jbe
dec
push
pop
inc
mov
movsb
cmpsb
xchg
xchg
test
aad
ffree
xor
push
jp
gs
insl
and
add
xor
inc
les
jmp
mov
aad
and
test
inc
push
gs
mov
sub
inc
out
xchg
jns
push
std
sbb
dec
into
test
adc
icebp
push
jecxz
cmp
push
mov
jo
popa
fucomi
mov
sbb
fdivs
jbe
push
dec
test
lods
cmpsl
inc
xchg
mov
divb
aas
fcoml
cmp
loop
xchg
and
pop
addr16
sub
pop
add
jnp
mul
sbb
jae
daa
or
in
xor
mov
dec
push
inc
xor
lret
repz
aad
ror
mov
jo
dec
push
sub
pop
inc
fs
cmpsb
lea
in
out
xor
and
push
jne
gs
push
pop
add
fcmovnu
jne
shr
rcrb
fnsave
jle
jns
insl
sbb
pop
aas
aam
and
neg
in
loop
in
roll
mov
pop
dec
or
sbb
or
and
sub
out
shl
loop
repnz
lcall
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
mov
fs
push
xorl
add
sbb
inc
push
cmpsb
iret
mov
mov
fwait
xor
fcmovb
imul
sub
les
push
mov
std
in
add
dec
rclb
push
insl
addr16
push
imul
loop
sarb
sbb
orb
add
sbb
popf
jl
pop
lods
add
inc
in
iret
mov
mov
sub
pop
push
nop
test
mov
and
pop
prefetchwt1
or
and
xor
movsl
mov
and
add
mov
cwtl
in
mov
add
mov
aam
ret
jge
bound
call
dec
iret
stc
push
leave
stos
lcall
popf
mul
std
fsubs
and
push
add
popa
cmp
jmp
fmul
loope
cmpl
xor
cmp
inc
out
dec
jns
pop
jl
sarb
push
pop
stc
fs
jl
cmpsl
mov
push
inc
fiaddl
fdivrs
lods
loop
and
mov
mov
in
cltd
or
xchg
mov
addb
push
adc
stos
lahf
es
subb
repz
int3
imul
mov
popa
subl
in
or
out
mov
std
inc
jl
orb
inc
lret
mov
sub
jo
aas
insb
dec
cmp
nop
xor
aad
mov
push
fsub
shll
push
xor
imul
jmp
dec
mov
adc
ja
pop
adc
jecxz
repz
xrelease
lcall
xchg
dec
nop
add
mov
js
lret
addl
xchg
and
cmp
jmp
ds
inc
push
pop
push
inc
xor
cli
adc
gs
jno
popa
loop
or
or
dec
mov
test
push
cltd
add
in
jmp
popf
push
ss
push
dec
loope
subl
leave
adc
jno
pop
int3
mov
je
push
and
clc
dec
lret
inc
sub
mov
lods
fs
test
sbb
into
int3
xor
or
sub
cmp
push
les
push
xchg
mov
sbb
or
popf
push
dec
mov
in
xor
xlat
adc
addr16
cld
xor
or
cmp
or
lahf
xor
xor
push
test
pop
mov
push
push
in
xor
mov
jl
push
jle
lea
enter
or
leave
dec
dec
aam
jno
push
rcll
mov
sbb
jmp
jae
mov
jb
jns
cmpsb
fsubr
xor
subl
gs
xlat
lock
cmp
sbb
and
mov
daa
ja
push
pop
cmpsb
sarb
mov
ljmp
jnp
adc
sbb
and
sbb
into
loopne
loope
or
mov
aad
add
ljmp
xor
test
inc
dec
decb
dec
xor
jae
call
std
jbe
xlat
adc
inc
pushf
push
repz
adc
pop
clc
lret
stos
mov
in
cwtl
shr
adcl
dec
mov
or
sbbl
loopne
dec
inc
test
les
xor
adc
loopne
sub
and
movsl
cs
rclb
ja
mov
int3
push
dec
inc
xchg
sub
sub
push
and
leave
pop
or
adcb
ja
push
and
dec
test
cmp
adc
je
je
inc
pop
in
cmp
inc
jg
enter
cld
pop
sub
or
out
adc
mov
daa
int
aam
pop
mov
lock
jb
pop
fwait
call
aam
das
lcall
and
mov
or
add
fistps
xchg
loop
xor
aas
push
scas
push
movsb
aas
stos
lcall
js
popa
push
negl
aad
outsl
lea
jb
mov
mov
ljmp
loope
mov
cmp
outsl
mov
xchg
mov
sub
sbb
test
enter
push
xchg
ds
test
lods
dec
in
sub
xchg
jae
mov
xlat
cltd
insb
fisttps
cmp
lret
cmp
xchg
cltd
xlat
cld
in
jnp
xor
adc
inc
pop
add
cmp
inc
mov
add
shlb
out
inc
dec
mov
inc
mov
sub
popa
mov
lcall
movsl
or
pop
push
and
lea
mov
cmp
mov
and
push
lds
inc
mov
fsts
pusha
enter
and
sarl
push
inc
jbe
rcll
scas
add
jg
mov
out
imul
adc
and
sbb
xchg
pop
push
xchg
dec
dec
push
pop
in
jg
insl
add
dec
push
aas
test
es
push
in
pop
js
std
int3
fcomi
addr16
cmp
or
loop
mov
pop
movsb
add
arpl
ret
or
das
aam
dec
loope
mov
and
bound
hlt
or
jae
daa
jnp
ja
push
cld
push
or
fs
xlat
cmc
stos
mov
lret
movsb
push
mov
mov
addr16
pop
fdivp
les
imul
aam
test
test
sub
popf
mov
pop
push
stos
movsb
and
shr
push
sti
push
jl
sahf
push
int
scas
inc
ljmp
nop
xchg
int3
icebp
adc
js
or
imul
imul
or
add
add
mov
lret
repz
xchg
push
ljmp
or
cmc
xchg
sub
shl
push
push
jb
push
sbb
nop
in
push
inc
cmp
push
pusha
dec
montmul
cmpsb
inc
inc
inc
and
adc
add
mov
les
and
mov
push
mov
aas
xor
push
popf
cmp
push
iret
xor
mov
pop
std
add
pop
adc
pop
or
cli
xchg
push
outsl
push
sub
lahf
cli
cmp
sahf
push
in
jno
dec
dec
add
fdivrp
add
fst
xchg
xchg
leave
or
in
and
je
mov
iret
xchg
arpl
or
aaa
outsl
adc
mov
adc
jmp
sub
jns
xchg
pop
lret
addr16
add
add
aad
repz
sahf
mov
mov
inc
fcom
xor
mov
jle
jecxz
inc
cmpsb
fdivrs
inc
in
dec
clc
aas
push
mov
mov
xchg
jno
neg
sbb
push
std
or
xchg
aas
outsl
lods
push
aas
arpl
lahf
jnp
push
fdivrp
shlb
shrl
push
pop
mov
xlat
xchg
fs
mov
or
cld
bound
call
dec
or
mov
sub
xlat
mov
mov
pop
and
cmp
push
push
test
ret
mov
and
mov
xor
cmp
loopne
and
jle
mov
mov
test
fimuls
aad
mov
fcomps
les
or
xor
fwait
clc
ret
jae
cmp
test
push
shlb
xlat
dec
aas
cltd
stos
push
sti
sahf
or
movsb
and
filds
mov
mov
inc
out
scas
xor
stos
in
notb
int
imul
mov
jae
adcl
xchg
ss
cmpsb
or
sbb
adc
pop
ds
pop
rolb
mov
sti
lods
mov
shl
push
push
jp
jge
inc
mov
mov
out
cmp
frstor
xchg
xlat
sbbb
push
sub
arpl
push
int3
xchg
mov
xor
out
jmp
jb
in
repnz
shr
addr16
push
jnp
sbb
xchg
addb
sbb
fidivs
sub
mov
jne
std
pop
cld
lods
sbb
fwait
iret
jp
inc
xchg
sub
test
das
fwait
mov
outsb
mov
pop
mov
enter
dec
mov
data16
nop
hlt
jg
dec
xor
jmp
jo
test
sbb
sbb
addr16
sbb
cli
sbb
pop
and
andl
scas
inc
scas
adc
dec
mov
aas
mov
sbb
jle
imul
insb
jnp
mov
xchg
add
sub
decl
xor
stc
ror
daa
sub
xlat
jmp
cld
scas
js
xchg
mov
push
cld
mov
rcr
daa
aad
push
sub
inc
and
mov
add
scas
and
jo
inc
push
xchg
jl
aas
jns
cmp
rcrl
sbbl
pop
hlt
add
mov
xchg
fistps
std
sub
xor
xchg
mov
adc
loopne
lock
cmp
xchg
pop
mov
pop
gs
fistps
fiadds
movsl
adc
je
data16
mov
lods
inc
sbb
insl
fcomi
mov
fimuls
sbb
mov
cld
arpl
pop
mul
sahf
repz
hlt
ljmp
mov
mov
mov
cli
push
jno
and
ret
push
or
mov
add
xchg
movsb
jl
push
js
outsl
sbb
mov
or
aad
push
sub
jecxz
fstpt
sarl
stos
jl
xor
scas
jno
loop
inc
test
mov
nop
push
push
rorl
dec
lcall
xor
aam
xchg
xor
mov
xchg
jb
test
loop
hlt
imul
mov
push
in
fs
xlat
mov
inc
xchg
stc
jmp
rcrb
dec
inc
int
test
pop
or
mov
and
fwait
mov
pop
insb
inc
aam
mov
scas
cli
dec
das
or
je
idivb
lret
push
mov
les
xchg
cmpsl
push
sbb
and
mov
xchg
push
movaps
and
add
mov
jae
jmp
leave
in
sbb
sahf
mov
lahf
daa
orl
outsl
lret
push
js
in
imul
idivb
jmp
test
andb
pop
jb
sahf
push
pop
pop
dec
pop
repz
push
sub
sbb
int
inc
add
mov
inc
cltd
xorl
add
sub
loop
mov
adc
mov
test
push
adc
jecxz
and
xchg
shrl
bound
inc
sti
sbb
pop
popf
jecxz
cmp
aam
add
and
cmp
sbb
xchg
dec
push
shr
jmp
pop
mov
and
mov
and
pop
xchg
add
shrb
sbb
jle
xor
mov
pop
movl
int
pusha
sub
mov
pop
loop
into
fcomps
pop
sub
pop
lret
push
mov
and
dec
mov
outsl
orb
pop
jnp
dec
dec
scas
or
test
addr16
notb
inc
fsubrl
testb
mov
pop
inc
sbb
adc
mov
out
insb
js
or
ret
mov
cmpsl
xor
jb
les
push
outsl
mov
mov
dec
sbb
orl
movsb
pushf
mov
fldl
xor
test
pop
lea
push
pop
add
add
fnstsw
fdivr
aad
cmpsl
lods
shr
or
enter
popf
out
leave
mov
cmp
mov
aad
pop
icebp
push
sub
repnz
sbb
pushf
pop
int
or
or
aad
pop
ds
lret
dec
dec
xchg
out
in
sub
push
imul
popl
inc
jge
fsubl
sti
shlb
test
add
les
test
adc
push
fldcw
xchg
js
pop
jl
push
in
mov
ss
nop
mov
decl
and
jle,pt
ds
push
dec
xchg
push
xchg
add
dec
mov
sub
repz
js
fwait
add
inc
lcall
js
sub
cmpsl
push
cltd
insb
adc
orb
jae
dec
xor
bound
add
mov
icebp
mov
call
fdivrl
rcl
dec
adc
mov
pusha
or
xor
push
xchg
ds
cmpsl
out
mov
xor
sub
dec
mov
xchg
imul
fnop
jb
add
out
xor
test
pusha
dec
dec
fdivl
movsb
sub
in
add
mov
faddp
repz
into
pop
test
adc
pop
pop
cmp
pop
and
xlat
mov
mov
inc
int3
mov
fstps
pusha
mov
call
lret
fistpl
rcr
scas
mov
psrld
outsl
pop
push
imulb
imul
dec
jno
xchg
sti
lods
pop
sbb
mov
je
out
or
and
sbb
jmp
mov
inc
add
fiadds
in
pop
fstpt
push
sahf
addr16
lret
int3
arpl
lea
adc
or
cwtl
ljmp
xor
add
ljmp
inc
sbb
jb
mov
sub
mov
xchg
in
adc
pop
fcomip
adc
fsubl
stos
add
or
sub
mov
add
mov
fsubrs
dec
loop
lea
ja
mov
adc
pusha
ds
mov
fwait
jae
out
mov
jle
fstps
adc
mov
xor
int
pop
xchg
mov
add
int3
clc
nop
mov
cltd
loope
xchg
ljmp
push
in
push
xor
cmp
test
xchg
mov
test
push
pop
xor
cmp
fs
pop
lret
mov
dec
mov
mov
inc
insb
movsl
adc
out
xor
ret
dec
xor
std
rorl
mov
test
mov
cli
rcrl
mov
fmull
mov
insl
movsb
sti
rcl
call
das
mov
test
movsb
push
pop
scas
fisttpll
cmpsb
loope
jle
in
movsb
lret
stos
enter
js
or
fldcw
mov
loopne
inc
mov
adc
fs
lds
cmp
mov
jecxz
inc
push
addb
hlt
test
sub
ret
lret
jnp
leave
mov
scas
cmp
lcall
mov
fbstp
inc
push
pop
mov
cmp
out
sub
jb
mov
jns
mov
aad
hlt
mov
cld
xchg
mov
inc
ss
nop
dec
ficomps
fstpt
lock
lock
gs
jecxz
add
fstpl
fcmovu
and
and
out
in
sub
jno
and
jno
jno
rep
fsubp
push
call
xchg
dec
cli
and
xchg
outsb
enter
fs
dec
inc
jl
out
pop
mov
and
cmp
mov
notb
clc
imul
or
aas
and
sahf
xchg
push
hlt
jp
aam
sets
sub
push
lcall
cmp
fcompl
mov
pusha
mov
in
mov
cld
jge
cmp
mov
fiadds
xchg
ja
cvtps2pi
in
sub
add
lret
dec
dec
xchg
push
subb
ret
je
pushf
sub
out
fldenv
inc
lahf
dec
fisubrs
and
adc
fists
xlat
popa
stos
jb
aaa
orb
inc
addb
aad
pop
lcall
test
sbb
cmp
add
ret
in
fstps
aaa
jecxz
flds
fldl
jno
popf
aam
adc
mov
xchg
mov
loop
sbb
nop
test
jb
cmpsl
mov
es
xchg
out
add
xchg
ljmp
scas
dec
data16
dec
rcrl
sub
pusha
pusha
jge,pn
in
popf
sub
neg
dec
xchg
imul
jge
sub
or
daa
test
inc
push
out
divb
xor
insl
xorl
mov
dec
jae
fwait
or
or
repnz
dec
jo
aam
add
dec
out
gs
add
and
xchg
mov
push
or
add
jle
ret
push
rorl
mov
ret
adc
and
mov
adc
add
fisttpll
inc
pop
jb
popa
ds
daa
push
add
mov
movb
cmpsl
cs
xlat
cld
mov
ja
les
lock
or
or
negl
dec
das
fcmovu
inc
xchg
and
lahf
cmp
dec
push
int3
xor
pop
fistpll
mov
aas
sbb
fcompl
js
test
adcl
jb
push
lods
xor
pop
xchg
and
mov
adc
sbb
add
icebp
push
mov
hlt
push
mov
push
dec
xchg
sub
cmpsb
out
or
push
pop
mov
mov
inc
cld
mov
ja
das
pop
adc
push
adc
mov
mov
xchg
in
int3
pop
jno
jge
insb
cmc
xor
add
rol
sub
lret
adc
jmp
add
sub
pusha
bound
push
shlb
jmp
call
icebp
dec
loopne
inc
out
sbb
push
and
push
mov
or
ja
outsl
pop
jecxz
outsb
ds
arpl
cmpsl
push
pop
jno
jl
in
nop
xor
dec
mov
test
aas
hlt
leave
cld
or
outsb
cltd
mov
mov
sbb
xor
fwait
popa
pop
lret
inc
das
adc
dec
cltd
aaa
nop
xor
xor
cmp
xchg
inc
into
stos
bound
int3
bound
jmp
xchg
test
insb
aas
and
mov
scas
sbb
arpl
xchg
out
inc
icebp
daa
out
push
data16
pop
stos
stos
pop
push
repnz
sbb
pusha
call
sub
popa
lret
lock
aaa
lret
mov
test
inc
xchg
stos
jl
push
lcall
push
sbb
ja
push
sub
lret
imul
xorb
rorb
stos
sahf
push
mov
loope
sbb
dec
xchg
xor
mov
add
mov
mov
test
mov
arpl
sub
xchg
fldt
sub
bound
push
sub
mov
mov
adcb
dec
and
sbb
dec
test
jne
insl
mov
pop
push
cmp
push
rcr
mov
cmp
add
xchg
pusha
mov
dec
aas
push
sub
gs
xor
jb
and
push
imul
inc
jl
inc
adcb
adc
js
je
mov
push
lock
call
push
mov
push
movsl
inc
ds
dec
lods
jp
cmp
loope
pop
mov
daa
xor
out
pop
out
inc
sub
mov
pop
lcall
jbe
dec
int3
dec
test
enter
fisubrl
ds
add
jmp
fwait
cltd
scas
and
mov
inc
mov
jno
or
cmc
stos
arpl
test
or
in
or
loope
or
xor
push
jae
fmulp
imull
push
ret
jne
ss
dec
jmp
mov
cmpsb
sbb
and
sub
mov
ret
and
adc
in
sbb
movsl
aaa
dec
test
pop
add
xchg
dec
fcmovu
cwtl
movsl
inc
lret
inc
hlt
push
lods
test
cmp
pop
nop
data16
sbb
jl
dec
sbb
or
mov
mov
mov
jle
push
mov
jg
cmp
inc
enter
mov
sbbb
cmp
aam
mov
pusha
imul
jg
iret
and
sub
loopne
out
xchg
xchg
mov
loope
leave
fimuls
shl
lods
dec
pop
jns
xchg
sbb
dec
int3
dec
push
icebp
xchg
sbb
mov
sbb
jb
ret
jb
mull
sbb
lcall
ret
pop
loopne
pop
push
jnp
ret
les
jle
clc
pop
pop
daa
sbb
push
ret
adc
inc
mov
test
or
jmp
push
mov
jb
inc
jns
sub
jbe
repnz
jnp
jecxz
adc
dec
lods
mov
bound
fildl
dec
cs
aaa
lods
decb
and
push
lcall
insl
int3
mov
hlt
cli
lcall
fdivs
sub
jne
scas
sahf
or
jp
mov
mov
xor
popa
outsb
rcrb
test
inc
sbb
imul
and
gs
pop
or
js
sbb
int
mov
stos
call
test
adc
add
dec
jmp
fcomi
push
out
jl
cmp
mov
test
dec
push
xchg
fwait
sbb
shll
lock
cmp
icebp
int3
test
mov
jmp
pushf
out
xchg
or
xchg
cmpsb
xchg
std
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
xlat
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
mov
std
dec
push
pop
cmp
leave
ret
push
sbb
cltd
mov
mov
test
cwtl
enter
fcmovne
mov
xchg
pop
sbb
cmp
imul
mov
enter
test
cwtl
fmuls
sub
mov
cmp
or
mov
rorb
sbb
enter
or
gs
cmp
call
in
mov
push
pop
stos
cmpl
inc
dec
icebp
aam
adc
gs
jg
push
gs
sub
sbb
hlt
loopne
sbb
call
dec
divb
nop
or
xchg
sub
push
mov
movl
clc
mov
popf
stc
mov
sub
xlat
pop
ficoms
pop
sub
pop
push
andl
pop
mov
xchg
cmp
xchg
sub
js
xor
test
loope
mov
add
push
mov
sub
insl
dec
idiv
imul
mov
mov
fisttps
cwtl
fcoms
sub
push
or
js
push
mov
lods
leave
fdivrl
in
or
push
js
or
das
jge
insl
sub
mov
mov
int
jp
push
pop
pop
sbb
or
stc
mov
lret
cwtl
fmuls
sub
dec
or
js
push
clc
mov
enter
test
cwtl
fmuls
sub
dec
or
js
push
clc
mov
mov
inc
pop
in
cmp
mov
cwtl
ficompl
jns
xchg
pop
orl
scas
iret
or
leave
call
dec
fidivl
testl
mov
mov
xchg
pop
stc
mov
inc
xchg
mov
stc
cld
insb
or
sub
roll
nop
int
xchg
lret
pop
test
xor
sub
add
insb
inc
icebp
enter
mov
in
inc
xchg
sahf
jne
pop
add
adc
scas
inc
sarl
scas
lret
pushaw
in
pop
daa
push
stos
xor
insl
add
mov
and
insb
xchg
es
pop
xor
je
add
and
lret
rol
out
add
xchg
test
xor
pusha
lea
int
add
dec
lahf
and
pop
ljmp
xchg
in
in
pop
adc
adc
std
pusha
dec
dec
cs
xchg
insl
scas
cmp
imul
ror
mov
dec
outsb
mov
sahf
sub
jmp
pop
mov
addr16
bound
jg
movsl
int3
add
push
dec
je
jp
movsl
cli
stos
ljmp
rol
push
fstl
xchg
and
jecxz
fstl
jns
ss
dec
mov
cmp
jb
into
out
mov
jp
out
jae
arpl
mov
push
decl
xchg
fstpt
mov
jns
repnz
stos
sbb
mov
xchg
insl
add
xchg
fidivs
scas
test
cwtl
cmp
js
dec
mov
push
add
adc
xor
rolb
lret
test
nop
negb
mov
fstpl
aaa
fsubs
gs
and
dec
xchg
cmpl
xchg
or
les
lret
ljmp
mov
pop
leave
arpl
aam
lods
sub
dec
testl
dec
mov
xchg
add
pop
cmpsl
or
iret
arpl
xor
adc
xchg
out
add
data16
lods
fcomps
inc
icebp
and
lret
aaa
mov
loop
pop
jecxz
fwait
sub
push
scas
mov
inc
jae
nop
push
xor
xor
test
adc
mov
mov
in
and
sub
mov
sahf
mov
cmpsb
mov
sbb
lret
rolb
negl
cmp
xor
mov
lods
in
loopne
pop
mov
push
outsb
inc
dec
loop
sbb
xchg
lds
cltd
cmp
bound
add
push
mov
gs
or
out
mov
mov
test
loop
mov
movsl
cltd
fcmovnu
sub
or
roll
inc
incb
ret
and
shrl
mov
jle
setno
cmc
mov
cltd
push
repz
rorb
ror
cld
bnd
xchg
sbb
loop
xor
rcr
insl
stc
das
in
inc
add
mov
loopne
int
movsl
cmp
push
xchg
add
pushf
add
stos
clc
lods
xchg
into
push
xor
stos
inc
sub
cmp
cwtl
xchg
dec
mov
lods
test
pop
icebp
in
xlat
lret
dec
jae
cwtl
add
cltd
jg
cmpl
insl
bound
add
and
les
stos
cmpsb
dec
mov
mov
sub
mov
addr16
jae
out
inc
scas
push
xchg
sub
inc
dec
adc
mov
fwait
mov
add
pop
inc
add
and
rcr
sbb
mov
cwtl
push
jae
cwtl
outsl
test
sbb
pop
das
and
in
jmp
fdivl
or
lea
jmp
cwtl
popf
addl
xlat
filds
mov
ljmp
sti
mov
pop
out
sbb
cmp
xlat
and
arpl
push
sbb
xor
add
sbb
push
fadds
fistps
test
faddp
stos
sahf
fwait
push
mov
xlat
hlt
popa
or
fldl
rcrl
sbbb
sbb
pop
push
mov
outsl
outsl
sbbl
pop
in
or
out
xchg
sub
addr16
xor
dec
clc
repnz
mov
push
xchg
int
push
test
adcb
ficomps
orl
enter
xchg
mov
stc
ret
repz
push
scas
cmp
in
inc
mov
push
scas
and
inc
js
mov
mov
cmpsl
icebp
sub
pushf
push
jae
js
pop
testl
loop
push
out
aaa
mov
lret
and
mov
jns
fsubrs
es
mov
pop
push
pushf
jl
xor
insl
adc
imul
idiv
or
lret
add
jnp
and
fs
cmp
add
lods
scas
je
repz
rorb
test
pop
ss
mov
sbb
pop
xchg
mov
xor
scas
and
push
add
test
push
scas
popf
aad
cmpsl
cwtl
pop
add
ljmp
mov
iret
sub
xchg
jae
mov
cmp
xor
sub
enter
adc
jmp
lcall
jno
flds
jbe
adc
cmpsb
xor
pop
shll
jl
sbb
cmp
or
test
dec
call
push
adc
or
fdivrs
aas
xchg
pop
mov
insl
mov
cmpsl
shll
sbb
push
push
inc
inc
adc
dec
adcl
negl
pop
mov
rolb
sbb
jmp
je
mov
jbe
push
xor
mov
xor
rcrb
adc
sbb
xchg
int
sub
push
or
inc
test
adc
cs
ret
push
pop
mov
push
aam
shl
cwtl
repz
lea
shlb
add
lahf
adc
xor
jl
fcmovnbe
sbb
dec
mov
push
iret
jmp
sbb
sub
and
das
adc
rorl
pop
jbe
inc
out
out
mull
fwait
push
out
mov
rorl
jo
leave
and
pop
add
and
out
out
inc
dec
mov
dec
xchg
hlt
adc
lds
adc
sub
ljmp
vmovsldup
ljmp
outsl
mov
clc
movsb
shlb
fadds
insb
dec
lea
ret
and
xchg
xchg
icebp
je
clc
mov
mov
add
mov
cli
cmp
or
das
sub
push
mov
outsl
repnz
inc
ss
iret
cmp
mov
adc
orl
imul
push
into
enter
jecxz
inc
insl
cltd
mov
insl
dec
fimull
push
sbb
test
push
sub
insl
or
hlt
push
pop
push
test
mov
inc
sub
call
and
mov
adc
sub
mov
xor
jp
std
or
push
shll
sahf
js
pusha
test
sbb
test
neg
pop
lret
cmp
fdivrl
dec
push
int
mov
mov
or
pop
outsl
sub
test
int3
add
and
add
notl
subl
sub
push
pop
sbb
jne
push
icebp
loop
ret
and
pop
or
loop
lds
jp
xchg
lret
cltd
scas
test
jne
loop
jnp
push
popl
sub
xchg
in
lahf
xchg
movsl
es
jb
call
lcall
add
lret
enter
push
sub
push
push
adc
cmp
mov
jns
or
and
sbb
test
and
add
sbbl
aad
aaa
adc
mov
cmpsl
ret
leave
push
fwait
imul
insb
lret
popa
fmull
bound
dec
pop
cltd
sahf
dec
lods
pushf
ja
jb
popl
pop
push
sub
lahf
outsb
mov
movsl
pop
cmpsl
adc
mov
sub
lock
xor
testl
mov
outsb
leave
jl
cli
outsb
dec
cwtl
cmc
inc
loopne
jo
cmp
fistpl
mov
adc
lods
inc
call
mov
fwait
inc
lret
push
push
cmp
mov
cmp
in
int
mov
or
cltd
mov
ret
xchg
repnz
mov
call
test
loope
dec
adc
mov
rolb
mov
sbb
fwait
js
mov
out
mov
jno
sub
xor
mov
in
or
jo
fisttpll
sti
sbb
bound
cmpsb
sahf
xor
jle
das
cmp
cmp
mov
rorl
shll
test
loop
pop
rol
das
scas
idiv
je
adc
push
pop
mov
lock
adc
pop
dec
adc
lcall
mov
cmpsb
jns
inc
loop
lahf
test
addr16
mov
sahf
mov
test
in
add
push
mov
pop
sub
lcall
mov
push
sub
xchg
jp
ret
inc
adcb
xchg
xchg
clc
or
mov
sarb
push
adc
jae
jbe
dec
mov
or
out
fbld
pop
pop
fxch
pop
sub
push
loopne
jns
into
lods
mov
stc
cmp
jnp
or
imul
movsb
stos
ja
mov
mull
pop
jno
xor
mov
xor
aas
jb
add
cmp
sbb
sbb
andb
mov
lods
push
lret
cmp
ficoms
ret
enter
xchg
pop
cmc
jge
loopne
jge
inc
hlt
xchg
je
loopne
sub
imul
scas
dec
pushl
push
mov
fcoml
ljmp
sti
add
add
xchg
sbb
popf
push
mov
insb
xchg
loop
inc
shr
pop
rcrb
inc
fwait
popl
insb
popl
clc
cmpsb
push
sbb
xchg
mov
mov
xor
dec
dec
and
loop
push
and
or
loope
pop
and
lret
push
in
fldl
mov
mov
xchg
daa
stos
arpl
gs
cwtl
ret
mov
mov
dec
mov
pop
xchg
mov
pop
mov
xor
ljmp
mov
insl
pop
scas
das
and
ljmp
mov
aad
les
inc
push
push
std
add
push
ffree
in
repz
mov
sub
sbb
xchg
lahf
sarb
out
or
push
sbb
jecxz
pop
inc
cmp
pop
jae
dec
pop
orl
fs
sti
or
cs
js
punpckhwd
hlt
jle
cmpsl
addb
xor
pushf
or
es
mov
out
ret
sub
pop
mov
mov
int3
dec
into
inc
sahf
fnstsw
jno
pusha
test
enter
sbb
pop
xchg
pop
mov
call
aas
sub
dec
jecxz
pop
insb
aam
dec
cmp
adc
jnp,pt
adc
sub
xor
hlt
aaa
sbb
lds
aas
scas
xchg
lock
mov
jp
pop
fildll
xchg
ss
out
out
sub
push
jo
mov
packsswb
xor
dec
or
jge
daa
xchg
divb
addb
and
sub
lret
inc
cmp
cmpsb
lods
xchg
and
das
xchg
mov
dec
imul
pusha
mov
lods
push
sti
xor
pop
pop
pop
in
inc
jo
adc
inc
lods
cmp
jb
repnz
cmpsb
push
xor
pusha
cmpsl
mov
stc
iret
loop
jnp
shrb
xorb
dec
push
push
or
push
ss
push
add
mov
xlat
nop
aaa
mov
rorb
jmp
add
jb
or
push
pop
test
push
jmp
bound
dec
cld
inc
aad
iret
cmpsl
lea
mov
stos
add
aaa
pop
mov
or
mov
fistpll
cld
ds
xor
jno
aad
mov
shrl
addb
add
nop
jmp
out
and
mov
out
sub
enter
fs
and
ret
repnz
clc
pop
pop
push
cwtl
mov
insb
aad
scas
sarl
repz
cmp
scas
jbe
cmp
sbb
adc
mov
bound
inc
pop
decb
jp
add
jb
mov
and
xor
xchg
pusha
push
cld
lock
sbb
sbb
fcoms
iret
xchg
packssdw
push
shll
lcall
ja
add
pushf
xchg
fisubl
int
mov
cltd
pop
push
xchg
mov
data16
in
xchg
push
mov
lods
fsubrl
ljmp
dec
mov
dec
fstps
push
sub
stos
ss
jle
or
mov
loope
movsl
dec
push
inc
les
out
pop
add
xchg
mov
cmpsb
jle
and
xchg
xor
pop
aas
xorb
stos
stos
push
mov
cld
mov
cmp
loope
adcb
fidivs
lret
out
clc
es
and
add
test
pushl
test
mov
call
mov
in
icebp
mov
mov
mov
mov
dec
xchg
fsts
mov
cwtl
cs
mov
adc
adc
xchg
ret
adc
sbb
out
flds
jge
pmaxub
xor
lcall
das
xor
cmp
hlt
inc
arpl
in
xor
or
jge
cmp
jb
aad
sti
mov
sbb
insb
jbe
add
jb
mov
pop
in
mov
jge
xor
aas
sbb
stos
in
inc
mov
inc
jns
addr16
xchg
jmp
outsb
cltd
adc
mov
sbb
scas
movsl
add
adc
push
jecxz
cmpsb
mov
push
xchg
mov
in
popa
or
push
dec
sbb
push
nop
cltd
xor
lea
call
jl
bswap
outsl
pusha
xchg
out
fldcw
mov
jmp
inc
mov
and
mov
pop
xor
xchg
xchg
cld
flds
out
push
xchg
cmc
orb
loopne
pusha
push
push
cs
jae
ljmp
push
lods
or
push
insb
sbb
ljmp
notl
fsubs
cltd
jns
sbb
test
lock
and
dec
mov
out
push
iret
mov
xorl
decl
mov
jnp
addr16
mov
sub
or
insb
add
lods
xlat
add
add
xchg
inc
ds
aas
cmp
mov
or
jle
xchg
sbb
xchg
aas
imul
push
pop
sahf
pushf
test
sbb
mov
jg
pusha
add
sub
xor
lea
adc
pop
and
iret
jg
pop
mov
xchg
pop
inc
out
iret
andb
mov
fstp
lahf
stos
adc
in
mov
movl
and
ffreep
pop
and
push
push
lods
pop
stos
jmp
fs
es
sahf
outsl
xlat
inc
and
dec
xor
sti
repz
hlt
pushf
jae
jmp
cmpsb
out
std
mov
inc
xor
push
cmp
sbb
scas
and
lcall
sub
loopne
mov
bnd
ret
mov
das
repz
dec
das
xor
lahf
inc
clc
lock
or
fwait
in
loop
jp
call
dec
push
xorb
mov
cmpb
je
adc
push
xor
pop
xchg
insl
int
add
sub
and
push
enter
sbb
xor
cwtd
lods
ja
add
pop
test
loopne
lret
push
mov
lret
daa
inc
jmp
out
out
sbb
ljmp
and
add
add
mov
xchg
push
popf
lahf
jmp
push
sub
test
imul
add
popa
insl
xor
and
lods
test
popf
jle
leave
pop
sub
daa
mov
mov
pop
mov
xor
popf
inc
mov
popf
popf
out
cmpl
sbb
test
or
ficoms
jno
mov
ror
fildl
arpl
and
mov
cli
ljmp
mov
cmp
pop
shll
stc
into
dec
or
push
sub
inc
or
push
out
add
ret
and
mov
daa
sbb
nop
imul
jl
stc
clc
sbb
fisttpll
std
sahf
nop
shll
repz
lret
scas
sub
ja
inc
adc
add
inc
jbe
icebp
inc
mov
cmc
fwait
arpl
aas
pop
inc
push
mov
jg
sti
mov
cli
aaa
jl
stc
sub
fstpt
stos
push
jl
push
addr16
cltd
mov
out
mov
aam
movsl
and
sbb
xor
push
adc
mov
sbb
adc
push
lds
ret
icebp
jmp
push
mov
lcall
cmc
cld
test
xor
sub
loopne
int3
lods
inc
test
inc
mov
dec
test
xlat
and
jl
add
jbe
test
daa
sbb
in
cmpsl
push
sub
xor
lods
add
fs
and
rcrl
cmp
push
cmp
adc
clc
push
add
mov
in
sbb
or
add
leave
jnp
and
fldcw
pusha
push
pop
cmp
mov
fiadds
jmp
repz
dec
in
sahf
call
pop
jno
sub
mov
dec
fstpl
sub
jl
lcall
inc
fs
adc
xchg
mov
in
xchg
cltd
cltd
test
push
mov
cmp
in
sti
or
push
cwtl
in
in
mov
addr16
clc
inc
sub
inc
xchg
rorb
and
push
test
adc
mov
push
pop
mov
cwtl
xorl
cmpsl
push
icebp
pop
jl
and
sbbl
inc
inc
fsts
pop
push
add
fidivrl
rcrb
push
xchg
repz
cwtl
lea
mov
enter
movsb
and
ret
add
push
lea
mov
dec
sbbl
pop
cmp
leave
stos
pop
idivl
mov
cld
push
pop
mov
js
xchg
and
out
scas
pop
jmp
mov
mov
push
aas
test
push
cli
in
xchg
je
popf
pop
pop
ljmp
je
ffree
fsubs
lods
xor
push
sub
jns
test
push
or
pop
cmpsb
mov
dec
mov
fwait
inc
ja
invd
pop
insb
lods
ss
imul
inc
xchg
jecxz
cmp
aaa
in
mov
vorps
sbb
shlb
mov
stc
sti
faddl
aaa
cs
inc
fcmovb
outsb
js
fsubrs
cmp
aas
cmc
mov
les
dec
dec
inc
cmp
out
add
adc
or
add
mov
insl
pop
pop
filds
mov
imul
xor
in
int
add
xchg
cmp
lea
lods
enter
repnz
sbb
mov
xorb
stc
mov
sbb
sub
lock
lea
mov
xchg
or
leave
mov
aad
mov
popf
xchg
dec
adc
adc
sarb
lock
out
das
mov
sbb
cwtl
dec
or
xor
std
mov
fsubs
or
testb
stos
aad
and
mov
push
es
stos
enter
fsubrs
jle
test
scas
cmp
test
lods
fbld
jo
inc
sub
cmp
addr16
scas
sbb
fdivrl
out
fwait
xor
mov
cmp
push
sub
lea
insl
and
mov
jbe
mov
enter
fwait
mov
cli
sahf
xchg
pop
into
or
sbb
sbb
inc
ds
stc
into
pop
fsubrp
mov
pop
push
push
or
mov
mov
mov
pop
pop
addr16
dec
arpl
dec
inc
adc
jp
clc
sbbl
repnz
push
int
sbb
push
lret
push
push
sbb
sub
or
jle
push
jmp
sbb
adc
mov
xchg
ret
push
repz
inc
adc
insb
xor
int3
push
cmp
push
in
dec
push
je
pop
das
mov
arpl
rorb
loopne
es
comiss
movsl
sbb
cltd
data16
test
outsb
xlat
adcb
dec
add
int
inc
adc
out
mov
pop
and
push
inc
push
lea
and
mov
les
mov
lods
pop
mov
popf
adc
xor
into
mov
in
rorl
sahf
add
jne
mov
xchg
mov
fcoml
std
mov
repnz
imul
aaa
fstps
mov
xor
jbe
xor
jge
loopne
dec
sbb
inc
fistps
cld
out
xchg
adc
in
rcl
ds
movsb
adc
jae
loop
shlb
mov
fwait
or
mov
enter
leave
jne
mov
push
add
mov
inc
fninit
jle
cmp
mov
adc
mov
mov
mov
test
cwtl
enter
test
cwtl
fmuls
sub
dec
or
js
push
clc
mov
enter
test
cwtl
fmuls
sub
dec
or
js
push
clc
mov
enter
test
cwtl
fmuls
sub
or
js
push
int3
mov
enter
test
sbb
or
xchg
xchg
xor
dec
jg
lock
mov
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
test
xchg
dec
sbb
mov
add
push
add
add
add
add
add
push
add
add
add
xchg
add
add
add
add
aaa
add
add
add
add
add
ret
add
add
addb
ja
add
cmp
sbb
outsl
add
cmp
dec
add
adc
lret
add
add
popl
push
add
cmp
sub
inc
add
add
add
add
add
add
add
mov
add
push
add
test
add
add
cmp
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
cmp
out
inc
add
add
add
add
add
add
cmp
add
xor
mov
add
add
add
cmp
pusha
add
out
add
in
fs
add
add
add
add
add
add
add
add
add
sti
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
sbb
add
add
imul
verw
add
pop
add
add
push
add
add
out
movb
add
test
dec
add
add
add
add
pop
add
add
add
add
pop
add
add
add
xor
adc
cmpsl
add
add
cmp
jno
movsl
add
add
add
add
add
add
add
sti
add
add
add
add
add
pop
add
add
sub
cmp
inc
add
pop
add
add
add
add
dec
add
add
add
lds
cmp
jno
imul
ljmp
add
add
add
jae
icebp
add
add
add
push
add
add
add
add
xor
xor
add
sbb
pop
add
add
add
sub
add
add
fiaddl
cmp
inc
add
and
xchg
add
dec
add
add
add
add
add
add
add
add
lret
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
jb
cmp
mov
str
stos
add
add
add
add
add
add
add
add
add
verr
rolb
add
add
mov
sub
add
add
add
add
add
add
jo
movsb
add
add
add
add
incb
sahf
add
mov
lret
add
add
add
jle
fwait
add
sub
dec
add
add
add
add
add
add
push
and
fs
add
add
movsl
add
add
add
add
add
insl
add
or
cmp
test
mov
cmp
add
dec
add
lret
add
add
insl
add
add
add
add
inc
add
add
add
add
add
mov
add
add
add
add
movb
add
add
add
add
add
add
test
sub
add
mov
push
add
add
add
inc
add
add
add
add
mov
push
leave
mov
dec
inc
out
sub
testb
mov
jmp
push
test
xor
decb
mov
je
test
mov
into
insl
lock
std
lcall
inc
leave
aaa
sbb
fnstsw
cmp
test
sbb
mov
leave
movsl
push
stos
push
cmp
mov
push
xchg
mov
outsl
sti
fisttpll
pop
fs
xchg
call
xchg
inc
xchg
dec
mov
imul
fcoms
adc
subl
adc
xchg
cmp
ds
movsb
cmp
stc
jmp
mov
dec
fwait
repnz
std
dec
or
test
fcmovbe
sub
push
cmp
mov
jne
dec
sahf
dec
and
adc
xchg
stos
lock
rolb
or
aam
test
adc
inc
insl
dec
mov
xor
mov
mov
mov
mov
mull
dec
add
fcoml
lahf
dec
ucomiss
mov
mov
lcall
fwait
pmullw
test
mov
repz
iret
and
mov
cmp
stc
gs
and
popf
or
jnp
jo
loopne
xchg
mov
js
jo
lahf
out
pop
arpl
cmpsl
jnp
pushf
je
inc
mov
mov
testb
fstps
and
ljmp
xlat
imul
push
arpl
lds
mov
int3
mov
xchg
inc
xchg
inc
jns
add
loopne
addb
dec
in
mov
push
xor
outsb
mov
cmc
aaa
jecxz
stc
and
jae
sub
imul
pop
cmp
sub
cmp
pop
loop
hlt
lods
aas
rclb
movsb
rcrb
inc
or
jae
pop
shrl
mov
popa
sub
or
clc
daa
xchg
ret
orb
lahf
fcompl
stos
ret
or
arpl
insb
xor
scas
xchg
test
jp
dec
out
and
mov
call
mov
xchg
loope
adc
lret
push
pop
call
dec
arpl
xchg
in
adc
fcmovne
pop
jae
jnp
cmp
dec
add
and
mov
leave
out
test
mov
into
sti
in
stos
xchg
les
lcall
cmp
sarl
mov
nop
rclb
pop
repnz
pop
sbb
in
dec
loopne
push
xchg
jg
out
dec
cmpsb
data16
shlb
push
in
stos
push
or
adc
mov
pop
cmp
jp
adc
cmpsl
jns
xchg
dec
cwtl
push
shlb
or
dec
sbb
cmp
xor
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
