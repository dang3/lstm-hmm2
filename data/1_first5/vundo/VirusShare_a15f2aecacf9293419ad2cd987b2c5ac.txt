mov
push
fsts
jb
jne
and
cwtl
es
sti
jg
ret
in
push
mov
sarb
roll
push
loopne
mov
lods
cli
fwait
call
pop
mov
pop
jb
testl
add
jns
cmp
jp
outsb
pop
adcl
dec
es
movsb
push
cmp
cwtl
mov
mov
push
xchg
sub
xchg
sub
cmpxchg
mov
push
inc
sahf
lret
movsl
cmpsl
jb
cld
or
test
imul
pop
and
mov
sub
ds
lock
out
or
xor
mov
cmp
push
xchg
or
push
sbb
push
test
pushf
sub
or
hlt
shrl
sub
sbb
sub
jo
adc
mov
sti
stos
mov
mov
cli
xchg
mov
xor
jns
xor
insb
mov
je
sti
fldl
pop
mov
sbb
mov
lret
movsb
subb
and
sbb
subb
adc
mov
repz
xlat
sub
add
cmp
mov
jae
pop
mov
loope
mov
ficoml
into
call
loope
shlb
jl
jae
out
and
neg
cld
daa
icebp
repnz
sbb
nop
inc
sub
sub
mov
jns
jae
and
addr16
sub
xorl
repnz
dec
std
iret
sarb
mov
cmp
or
mov
inc
xlat
les
add
cltd
shll
pop
xchg
imul
cmp
test
push
aad
or
sahf
les
das
pop
sti
adc
or
mov
mov
cmp
and
inc
jnp
mov
sbb
les
jnp
repz
sub
jae
and
inc
inc
xchg
dec
dec
xor
add
stc
push
outsl
inc
jo
iret
cmp
inc
movsl
fwait
pop
mov
mov
mov
sbb
fldcw
das
pop
add
mov
cvtdq2ps
adc
lods
inc
inc
xor
enter
mov
jnp
inc
shl
movsb
xchg
fidivrl
push
fistl
cwtl
fisubrs
fsts
fcomip
sahf
jg
adc
lret
fcomp
sbb
sbb
adc
adc
ss
cmp
push
xor
vpmovsxwd
cmp
inc
cmp
iret
and
mov
or
jbe
jae
sarb
xchg
or
xor
mov
popa
icebp
push
jle
std
adc
orl
icebp
pop
push
pop
pop
rorb
stos
mov
imul
aad
mov
or
jle
xchg
sub
mov
add
shll
sbb
rorb
lret
pop
imul
cmp
lret
mov
pop
popf
shr
mov
mov
ljmp
add
jmp
or
jne
adc
aam
loopne
push
push
dec
loope
jecxz
push
dec
xchg
das
xlat
out
ss
or
mov
ret
scas
cmp
bsr
insl
movsb
mov
mov
ss
cmp
les
mov
cli
pop
sti
lcall
negb
popa
call
push
data16
mov
mov
test
jne
iret
andl
pusha
mov
mov
les
out
adc
je
aas
cli
cltd
xor
out
mov
push
xchg
xchg
dec
jno,pt
out
insl
insl
cmp
cmp
iret
pushf
mov
addb
fisubrl
pop
xchg
mov
icebp
outsb
daa
jmp
adc
stc
pop
into
out
fstps
mov
xchg
sbb
insb
inc
cmp
push
inc
mov
or
lea
hlt
xchg
lret
jmp
pushf
adc
mov
lret
mov
cmp
xchg
add
push
lahf
and
frstor
sub
pop
in
test
add
adc
call
arpl
frstor
into
arpl
cmp
mov
sub
mov
or
sti
mov
xor
add
rcrb
xchg
dec
insl
mov
adc
in
enter
xor
inc
push
jge
or
inc
xchg
fstl
dec
mov
pop
and
dec
mov
mov
sbb
fstpl
mov
sbb
sub
add
inc
rolb
test
and
aad
pusha
xor
pop
push
lods
lahf
pusha
xor
scas
scas
jbe
hlt
in
fucomip
jge
mov
daa
fsubrl
sub
dec
in
fidivl
lods
sahf
mov
jnp
push
scas
xor
xchg
mov
imul
push
scas
sbb
das
sti
xor
hlt
int3
lods
shr
adc
shll
jo
test
inc
add
jns
iret
je
sub
jno
jl
daa
mov
push
pop
cmp
inc
lahf
push
mov
jl
lods
scas
add
push
clc
mov
pop
mov
cwtl
sbb
loope
jl
mov
push
enter
cltd
jle
bound
mov
mov
int
cwtl
in
add
or
lcall
shl
xor
jl
cli
loop
dec
out
cmp
cmp
jge
jns
cmc
mov
mov
push
mov
adc
dec
sub
mov
into
std
mov
std
mov
xor
sarb
cmp
cmp
adc
leave
sub
pop
push
mov
cmp
test
pop
filds
lret
arpl
mov
jne
jnp
cmpsb
xlat
xor
aaa
jl
cmp
xor
pop
divl
xchg
int
pop
shll
push
ja
mov
push
ficoml
scas
rol
xor
rcr
sbb
shll
xchg
lahf
in
add
nop
pop
fistpll
sub
sbb
enter
fdivl
jge
pushf
sub
add
jo
mov
lret
mov
dec
xchg
mov
or
jmp
idivb
aaa
sub
mov
addl
shll
push
mov
fldenv
inc
pop
ss
mov
push
jbe
cwtl
add
mov
xchg
andnps
adc
jmp
jnp
sub
push
in
insb
movsb
xor
jge
mov
in
ss
sbb
int
das
and
daa
inc
mov
fwait
push
pop
bound
ret
scas
loop
frstor
push
cmpb
ss
das
jg
rcr
jg
push
xchg
scas
xchg
fiadds
insb
jmp
icebp
push
add
xor
stos
mov
mov
xorl
ds
pop
sub
les
js
lock
mov
dec
lea
movl
pop
mov
cmpsl
or
jmp
inc
adc
nop
push
jl
aad
imul
dec
movsl
shl
mov
jo
dec
int3
roll
int3
inc
jb
cmp
enter
fwait
inc
adc
mov
xlat
jnp
sbb
fisttpll
stos
popf
dec
push
xchg
sub
xor
mov
movsl
sub
push
mov
cltd
jmp
aam
mov
mov
lods
jo
xchg
or
mov
mov
pop
fs
add
sahf
push
push
adc
aam
cld
jne
pop
loope
pop
arpl
nop
mov
jp
add
dec
fisttpl
lcall
iret
jns
test
fwait
push
pop
insl
popf
push
adc
sub
mov
mov
xor
in
mov
stc
sub
es
fdivl
jo
xor
outsb
mov
sub
cmp
int
add
jbe
mov
or
scas
or
insl
lock
sub
rcrl
lds
mov
xchg
inc
or
dec
jo
fistpl
jae
mov
and
sti
js
call
add
inc
dec
mul
in
jns
jle
mov
pop
cmp
stos
jmp
xlat
std
dec
sub
fisttpll
scas
jmp
cmp
xor
lcall
cmc
cmc
lods
test
add
addr16
lds
pop
sub
mov
test
inc
xor
mov
pop
test
out
loope
push
into
sbb
sahf
jbe
dec
push
cs
pop
sub
mov
mov
ret
mov
push
cmp
fwait
and
cmp
sub
stc
addr16
out
mov
call
cwtl
je
rcrb
adc
addr16
loopne
or
mov
dec
cmp
mov
std
cli
incb
sub
jmp
cmpsb
repnz
push
and
repnz
out
xor
fadd
fs
nop
xchg
notl
mov
fnstcw
cmpsb
cmp
test
iret
dec
sub
push
add
cwtl
push
stc
xor
movsb
es
inc
jns
push
or
mov
cmp
and
mov
and
loopne
push
hlt
pop
bound
add
gs
shrb
pop
mov
adc
in
jb
scas
maskmovq
idivl
cmovl
das
ret
fdivrp
outsb
add
test
insl
pop
icebp
dec
jg
push
mov
in
push
subb
dec
icebp
ds
or
cmp
jo
aas
aaa
icebp
out
fnstcw
shlb
cwtl
inc
inc
or
jbe
mov
outsb
daa
mov
xchg
lods
or
dec
iret
xor
sub
je
sub
sahf
ret
push
mov
add
fcomps
pop
ret
jle
mov
repz
sub
adc
inc
mov
lds
inc
dec
sbb
xor
std
pop
pop
mov
pop
data16
sbb
test
push
divl
push
adc
enter
mov
out
call
sbb
cmp
std
push
dec
xor
dec
mov
movsl
cmpsb
mov
cmpsb
adc
push
fwait
fidivrl
pushf
adc
fwait
jle
or
sbb
xor
xlat
cs
ja
push
ljmp
inc
leave
popf
pop
popf
loop
xor
adc
shll
adc
mov
cwtl
loopne
in
pop
test
or
fstpl
imul
sbb
loopne
jne
cmp
out
and
inc
mov
xor
mov
sub
jo
or
push
xor
lock
ds
jae
pop
test
popf
pusha
hlt
jbe
dec
fidivl
data16
fnstsw
and
js
fldl
fcomps
fst
xor
mov
pop
dec
dec
je
pop
dec
xor
mov
cltd
mov
gs
xor
jle
xchg
sbb
sbb
add
out
jp
jno
lea
add
dec
or
push
mov
adc
jmp
cltd
ss
ss
mov
pop
add
pop
stc
sub
sub
jecxz
inc
test
out
inc
divl
sub
dec
loope
xchg
xchg
jnp
stc
add
scas
out
call
mov
jb
xadd
enter
cmc
into
sahf
iret
mov
orl
adc
xlat
or
push
and
push
jl
fwait
add
push
faddl
popa
mov
and
shll
mov
shll
std
nop
gs
lds
jge
lea
es
popa
ret
ret
dec
xchg
mov
jae
movsb
iret
xchg
frstor
pop
dec
and
inc
mov
nop
cmp
into
les
lock
cmp
bound
cs
aaa
xor
negb
inc
lret
cmp
jmp
repnz
jo
or
jb
xor
mov
mov
pop
mov
sub
rcrb
jae
mov
cmp
xchg
add
nop
hlt
popf
loop
mov
repnz
aam
popf
dec
pop
jle
ljmp
push
jle
push
pop
push
or
fbstp
pushf
mov
cmp
xor
lods
jb
pop
or
sub
filds
mov
pop
hlt
xor
and
jo
jnp
inc
inc
je
sub
mov
jmp
mov
jmp
mov
jno
sbb
xor
push
out
add
jnp
frstor
sbb
aad
xchg
loop
pop
stos
mov
jb
mov
cwtl
xchg
loop
jo
cli
testb
cwtl
mov
mov
in
push
add
xchg
inc
scas
in
or
add
out
lods
out
pop
sti
insb
jge
rol
rcl
sbb
movsl
mov
int3
or
les
addb
xchg
pop
bound
lcall
out
shll
loope
dec
orb
int3
sbb
mov
mov
pushf
sbb
outsb
ja
js
gs
sub
data16
or
pop
loope
cmpsb
mov
shrb
mov
dec
pop
xor
jl
mov
imul
out
stos
inc
out
mov
cmp
pop
jge
mov
movsb
mov
adc
andb
mov
scas
test
or
sub
ss
lods
xchg
and
add
sub
stos
aad
dec
pop
aaa
aaa
pop
push
xchg
pop
push
shl
addr16
add
cmpsb
jecxz
add
push
testl
dec
cmpsl
loopne
pop
mov
jns
dec
rorb
pop
xchg
es
pushl
cmp
das
sub
inc
xchg
ret
lods
mov
lahf
push
ljmp
xor
pop
cmp
int
mov
dec
mov
test
outsb
jle
icebp
push
adc
popf
stos
mov
inc
js
mov
push
mov
mov
ljmp
adc
stos
mov
fldcw
push
mov
test
xor
outsb
push
inc
insl
and
icebp
in
enter
loop
mov
cmp
add
aad
push
punpcklwd
call
cmp
lcall
fcoml
imul
std
inc
inc
mov
xor
lret
jae
mov
mov
cmp
cld
loope
and
es
nop
and
push
jne
add
insb
ss
shrl
sub
push
and
mov
mov
mov
mov
insl
jecxz
cmpsb
js
dec
lret
add
and
pushf
pop
or
pop
lock
gs
gs
and
dec
jg
addb
in
test
lahf
les
popa
cmp
ret
mov
and
incb
jns
pop
jge
pop
mov
and
mov
dec
aas
mov
pop
fisttps
loopne
mov
mov
sbb
js
pcmpeqd
rcl
push
fsubrs
xchg
lret
jb
push
push
mov
mov
sbb
shlb
xor
shrl
loopne
jnp
dec
jmp
sbb
xor
mov
sbb
add
xlat
xor
test
ret
lods
mov
cmp
arpl
and
sub
cltd
pop
and
mov
xchg
repz
cmpsl
or
fadd
mov
or
lds
push
lret
mov
mov
xchg
cmc
push
mov
popf
std
inc
out
imul
clc
pop
out
hlt
push
les
push
jecxz
push
xor
bnd
cld
pusha
sub
leave
mov
inc
mov
mov
inc
insl
test
push
lods
pop
jno
cmpsb
insl
add
sub
push
dec
movb
jae
cli
or
movsb
fdivl
sbb
mov
sbb
fistl
cli
pop
aas
and
sub
cmpsb
mov
ja
sbb
pop
andb
push
loope
lods
call
movsl
in
scas
xlat
jne
jo
pop
push
in
sbb
cld
sbb
cmc
cmpsb
dec
test
cli
or
mov
push
daa
loopne
push
mov
mov
fists
and
subl
loope
data16
xchg
and
lods
xchg
jecxz
xchg
jecxz
cli
das
lret
push
in
imul
sub
jne
push
nop
pop
sbb
push
lcall
insb
fidivl
push
pop
sbb
push
mov
dec
ljmp
es
push
ret
leave
and
imul
movsb
jmp
into
outsb
fisubl
xlat
inc
jnp
push
clc
jae
sbb
jg
cmp
stos
sub
inc
insb
or
mov
jmp
sbb
jb
and
mov
adc
mov
test
adc
fiadds
jmp
and
js
inc
nopl
jo
inc
add
sub
dec
mov
js
les
scas
mov
iret
add
push
std
cmpsl
cmpsl
jb
insb
jmp
ja
xchg
cli
mov
out
insb
addr16
int
pop
testl
lods
in
icebp
jg
sbb
aad
or
cmp
imul
movsb
mov
imul
lds
mov
cmpsl
push
aad
outsb
fs
popf
and
int3
call
cwtl
nop
jge
cs
cmpsl
repnz
dec
sub
mov
pop
cmc
inc
sbb
pusha
fs
rorl
pop
gs
and
pop
outsb
cli
jne
pusha
lret
jb
cmp
aad
ret
mov
inc
and
out
mov
and
outsb
sahf
in
xchg
cmp
jg
xchg
mulb
dec
lock
mov
inc
mov
outsl
adc
add
jb
sub
stos
popf
test
outsb
rorb
mov
outsl
xchg
dec
cmp
inc
jl
in
and
nop
fidivl
pop
xchg
sbb
loope
mov
dec
inc
push
iret
push
jge
stc
movsl
lods
mov
nop
mov
lods
mov
push
jbe
bound
add
sub
movl
xchg
pop
sbbl
and
mov
mov
mov
out
jbe
xor
daa
fdivs
jae
fnstsw
cs
adc
cmpl
push
scas
mov
mov
and
xchg
mov
dec
outsb
lcall
fwait
and
and
jo
stos
or
mov
adc
int3
dec
andl
and
dec
inc
addl
jne
xchg
add
js
and
test
aam
mov
es
push
inc
fsts
cmp
adc
xor
push
mov
hlt
movsb
out
lcall
movsl
inc
imul
aas
xchg
sub
inc
jg
sbb
dec
fisttpll
sbb
xchg
xchg
nop
cmp
dec
int3
fs
fsubrp
cmpsb
mov
std
jecxz
adc
je
xor
lcall
mov
emms
and
inc
xor
pop
and
and
xchg
dec
das
loopne
jecxz
test
pop
xor
inc
xor
pusha
sar
jecxz
cmc
mov
loopne
add
xor
mov
or
inc
xchg
adc
xchg
cld
scas
dec
inc
xlat
fnstcw
stos
insl
xchg
pushf
dec
adc
xchg
enter
daa
repz
in
mov
jo
jl
fstpl
popa
cmp
je
addb
lret
sbbb
dec
mov
mov
xor
lahf
hlt
mov
data16
loopne
cmpsb
mov
ja
rclb
shrl
out
xchg
sbb
and
jbe
jle
xcrypt-cfb
cmpsl
mov
shrl
cmpsb
xor
cmp
je
add
pushf
push
inc
lea
mov
lahf
jge
je
out
mov
lcall
xchg
jp
fcmovu
nop
fdiv
add
mov
lock
pop
idivl
arpl
rorl
int
and
leave
push
cltd
clc
loopne
stos
jg
cmp
mov
fdivl
gs
call
mov
scas
add
lret
stos
pop
mov
sub
test
sbb
dec
lret
mov
sbb
repnz
stos
xchg
mov
adc
nop
inc
les
mov
dec
lret
mov
repnz
xchg
cmp
sub
cmp
test
xchg
ffree
popf
stc
dec
sub
imul
mull
adc
iret
lods
les
dec
inc
jb
lret
into
and
out
lock
lods
cmp
add
xor
test
mov
pop
cmc
jle
data16
inc
in
sub
call
cmpb
adc
mov
push
lods
repnz
xor
cli
push
bnd
orb
mov
jbe
pop
gs
jg
lods
dec
test
inc
scas
or
pop
ja
xchg
outsb
outsl
jae
mov
jmp
cltd
mov
sub
fcmovu
ret
test
xor
cli
mov
outsl
imul
dec
cltd
ret
sbb
ds
adc
outsb
fildl
out
fs
in
daa
movsb
subl
and
sub
push
cmp
xchg
notb
insl
push
fsubl
jo
pop
jl
sbb
divb
add
pop
fstpt
stc
fstpt
aas
popf
xor
jle
ljmp
nop
xor
inc
push
scas
pushf
mov
sti
cld
iret
jge
xchg
cmp
xchg
test
push
lahf
nop
push
ljmp
pop
add
or
lods
lock
xlat
mov
and
aam
jmp
jbe
jle
mov
fisubrl
mov
dec
jbe
test
test
out
push
iret
stc
shrl
pop
mov
pop
mov
or
aas
jmp
aad
or
jp
repz
lds
mov
popf
mov
mov
or
outsb
sbb
in
fstps
push
dec
push
pop
xlat
dec
outsb
es
mov
fs
out
sbb
dec
loopne
subps
cs
xchg
sub
subl
dec
popa
test
adc
sub
cmpsl
jb
cmc
xchg
pop
addr16
sarb
neg
and
sub
xor
push
sbb
mov
sub
aad
mov
sbb
sub
fwait
sbb
scas
xor
mov
repnz
xchg
adc
cmpsb
jl
pusha
add
jne
xlat
subl
adc
jnp
dec
mov
sbb
rcl
xchg
into
dec
insl
dec
or
fdiv
or
outsb
fidivrl
cmpsl
ret
pop
add
add
pushf
test
mov
mov
lds
cld
adc
mov
pop
imul
mov
inc
add
mov
sbbl
shlb
pop
and
test
cmp
shlb
and
ljmp
pop
xchg
cmp
pop
xchg
mov
pop
pop
gs
push
cwtl
sbb
orb
into
in
repz
loop
bound
add
cmp
xchg
xchg
mov
xlat
push
loop
stc
movsb
in
dec
xchg
or
out
js
int3
mov
mov
stos
and
mov
int
jge
addr16
xchg
dec
dec
outsb
outsb
loop
cmp
aad
mov
sbb
divl
mov
sahf
outsb
dec
adc
jg
mov
push
xor
insl
repz
or
sub
mov
xchg
pop
jbe
jle
xchg
mov
repz
xor
xchg
jge
in
xor
sbb
sbb
cli
ret
push
jp
jle
add
arpl
adc
roll
jl
daa
fs
lds
or
mov
sbb
sub
inc
imul
mov
xor
mov
lret
jnp
jno
mov
dec
stc
insb
test
push
sub
adc
gs
rclb
push
xor
jae
or
inc
push
movb
imul
dec
cmp
mov
xor
mov
pop
inc
arpl
repz
pop
or
mov
testb
shrb
and
push
pop
out
loope
or
cmp
mov
insb
xchg
cld
push
jne
jmp
aas
enter
lock
add
inc
mov
into
out
lcall
or
adc
sbb
xor
xchg
sub
fs
outsb
scas
push
sbb
subb
inc
add
mov
sub
div
jmp
xor
aas
out
scas
popf
mov
insb
int
and
push
cmp
adc
sub
les
imul
cs
out
insb
cltd
das
jmp
mov
xchg
xchg
pushf
scas
mov
sub
popf
inc
push
bound
mov
test
in
popa
cmp
mov
in
fisubl
stos
insl
lret
cmpsl
jle,pt
sbb
jnp
std
mov
and
fstpt
scas
xor
test
mov
push
jb
cltd
xchg
cld
and
inc
sbb
push
clc
lods
imul
sti
mov
or
jp
movsb
add
addr16
pop
icebp
in
dec
adc
bound
imul
out
mov
int3
push
dec
in
dec
pop
aad
shl
and
in
or
xchg
or
lods
test
fsubl
jle
lret
add
jno
jnp
push
cmpsl
mov
pop
das
push
fstpt
mov
xchg
in
lahf
jle
test
lods
psubusb
inc
pop
cli
xchg
mov
inc
cmp
jb
and
mov
inc
mov
xchg
mov
idivb
xchg
faddl
pushf
pop
loop
mov
movb
loop
insb
out
pop
mov
sbbb
nop
pop
stos
dec
cmp
mov
aaa
cmp
lret
fstpl
mov
aad
cmp
inc
jae
sub
sbb
mov
inc
test
dec
sub
rorb
pop
mov
sub
mov
jg
call
das
mov
out
fcomip
xchg
pop
pop
mov
sbb
mov
mov
dec
jp
dec
mov
mov
or
sbb
sbb
mov
add
andb
jb
inc
sub
add
std
es
sarl
std
insl
rcl
cmp
mov
and
out
jo
test
int
sbb
inc
in
pop
ficompl
inc
pop
nop
push
fisubrs
lods
lods
loope
sub
movsl
adc
aad
inc
jbe
fst
ret
ja
mov
mov
aas
fdivr
faddl
sahf
outsb
shlb
jno
sbbb
sbb
shll
ror
js
scas
stos
mov
fadds
add
cs
mov
scas
mov
int
gs
xchg
out
pop
rcrb
roll
or
adc
mov
or
add
pop
push
jns
fiaddl
xor
fimuls
stos
rcrb
pop
js
cltd
sub
ds
inc
jg
mov
pop
pop
cmp
test
pop
fstp
xchg
test
push
jl
xchg
inc
ret
jbe
add
movsl
shll
jae
dec
iret
jmp
mov
fsubrl
clc
gs
fistpll
pop
fstps
push
aaa
test
xrelease
and
or
or
or
inc
aad
pop
mov
shll
data16
mov
xor
daa
sub
in
aas
mov
adc
mov
testb
mov
xchg
mov
stc
sbb
scas
pop
dec
leave
or
data16
test
sub
mov
push
mov
imul
cmpsl
adc
jmp
mov
xchg
insl
mov
xchg
scas
push
mull
sbb
push
daa
or
bound
je
stos
out
cli
cmp
rdmsr
out
xchg
cmp
imul
mov
call
pop
cld
and
lods
push
xchg
jge
jbe
mov
add
movsl
loop
sub
push
sbb
push
xchg
adc
addr16
pop
cs
mov
call
pop
cs
outsb
or
sub
xor
repz
repz
cltd
movb
xor
jecxz
in
and
pop
pop
jge
inc
push
lret
adc
int
into
push
add
out
gs
jnp
inc
pop
aam
pop
mov
out
or
movsl
dec
jb
mov
test
xor
inc
cmp
xorb
inc
imulb
mov
mov
mov
pop
mov
and
lret
ficompl
mov
mov
aas
test
mov
jmp
inc
pop
jle
sbb
outsl
cli
cmp
scas
jnp
pop
xor
fidivrs
pushf
jb
xchg
jo
ss
and
adc
frstor
jecxz
dec
bound
xlat
mov
sti
adc
and
xchg
jp
rol
inc
fsubrs
ds
movl
insl
cmp
pop
test
ret
inc
fnstsw
and
mov
inc
xchg
std
stc
sub
lods
xchg
mov
push
dec
imul
xchg
jno
push
xchg
and
jne
dec
cmpb
insb
pop
mov
dec
push
out
pop
das
mov
inc
or
mov
xlat
mov
cld
pop
inc
outsl
push
fsts
push
icebp
cs
jns
sub
xchg
and
jp
xlat
lods
bound
add
imul
mov
pop
icebp
cmc
cmpsl
cmp
xor
xor
push
jp
sub
sahf
shlw
cmpsb
mov
push
clc
xor
test
push
sub
cmpsb
shlb
test
push
jle
add
outsl
mov
repnz
xlat
dec
out
xor
cmc
adc
and
pop
imul
lahf
lods
mov
jp
in
dec
loope
flds
add
mov
add
loopne,pt
scas
cmp
cmpsb
rcrb
dec
xor
ljmp
cmp
test
add
mov
cmp
mov
insl
sbb
dec
xor
xchg
shr
and
push
cwtl
add
gs
jae
or
test
fdiv
cmp
cmp
sub
and
in
test
mov
outsl
imul
dec
add
cs
cld
je
jnp
insb
pop
inc
fstpl
and
in
frstor
xchg
push
stos
add
jns
imul
aas
mov
lret
rorl
fnstenv
fstpl
mov
dec
mov
lds
xor
sbb
sub
xor
imulb
rolb
imul
mov
dec
mov
mov
nop
mov
pop
aad
or
scas
inc
jecxz
iret
imul
mov
xchg
inc
movsb
jmp
adc
sbb
int
fstpt
mov
idiv
stc
mov
xchg
jl
arpl
movsl
jns
push
xor
fisttpl
enter
push
lahf
mov
movsb
in
push
int
lret
inc
cli
clc
ss
inc
or
test
fwait
testl
cmpsb
nopl
jnp
mov
enter
call
or
push
mov
inc
jl
dec
pop
pop
push
je
inc
rcl
fcoml
sbb
out
pop
xchg
lcall
call
mov
daa
out
pop
jns
fnstenv
pop
sub
sub
ja
loopne
or
inc
insl
mov
xchg
iret
pop
int3
xor
stos
and
inc
push
in
and
pop
nop
nop
iret
test
pop
rclb
push
add
insb
cli
orb
dec
pop
push
es
sub
movsb
jl
test
sub
adc
dec
mov
je
ret
fwait
and
pop
arpl
jae
lret
or
push
insb
subl
sbbb
cmp
or
lock
gs
sti
add
shll
fwait
gs
push
jne
inc
sub
shrl
mov
nop
and
lock
movsb
push
mov
add
inc
pop
in
in
test
and
js
loope
movsl
mov
cmp
mov
cmpsl
mov
add
pop
xlat
mov
fs
mov
jb
ljmp
out
dec
xor
mov
das
push
push
dec
mov
dec
jle
cmpsb
add
out
out
mov
dec
in
fwait
or
sub
incb
pop
xchg
push
outsb
mov
imul
push
mov
pop
mov
aad
push
dec
jl
data16
jge
scas
stos
cmp
add
loope
test
inc
scas
sbb
fcoml
inc
and
jge
pusha
xchg
fisubrl
fwait
in
je
mov
mov
dec
hlt
je
mov
pusha
mov
in
ret
jnp
xchg
sub
in
test
mov
fdivs
pop
or
insl
test
bound
cmp
push
stos
push
enter
out
dec
xchg
gs
test
mov
jb
mov
loop
inc
adc
inc
ret
stc
andl
call
pushf
lret
xchg
sar
add
sbb
repz
push
mov
pushf
mov
outsl
xor
insl
cld
mov
push
je
add
push
push
fcoms
xchg
test
jge
add
std
jne
adc
xchg
mov
sbb
aam
dec
add
or
shr
andb
add
sub
pop
cld
std
lahf
inc
jb
mov
sub
inc
call
stos
pop
jge
scas
mov
pushf
jecxz
leave
jbe
lds
mov
sbb
mov
test
loop
in
jg
sub
rol
cmp
cmp
cmp
lret
rcll
mov
jecxz
data16
sahf
inc
adc
insl
arpl
jo
js
xchg
adc
in
insl
ljmp
mov
inc
mov
into
cld
pop
setno
add
jns
xchg
test
or
subb
shrb
push
xor
cld
es
sbb
int3
pop
sbb
lock
fidivrl
adc
dec
pop
or
in
adc
jl
fisttpl
mov
jp
pushf
cmp
out
sub
ds
cmp
fcmovne
hlt
xchg
sub
and
leave
imul
jmp
loopne
lret
xchg
dec
scas
sbb
push
xor
daa
xor
shl
popf
cs
cwtl
push
jno
push
inc
iret
loopne
or
cmp
stc
das
adc
int
xor
dec
ljmp
add
ret
cld
repz
iret
insb
fs
cmpsb
mov
popf
xor
icebp
xlat
sub
les
dec
pop
cli
dec
cmp
das
sbb
sub
out
outsb
int3
dec
mov
icebp
or
std
shrb
pop
cmp
arpl
mov
scas
sub
js
jl
push
aaa
adc
add
pop
fidivl
sahf
mov
fyl2xp1
imul
sbb
push
data16
jne
mov
jno
fcom
adc
mov
test
daa
out
iret
pop
imul
rcrl
mov
outsb
dec
adc
imul
inc
cltd
xchg
mov
add
push
arpl
and
xchg
popa
add
dec
cmp
push
fldl
jge
inc
das
insl
jl
add
xchg
push
sti
xor
dec
sti
test
je
pop
xchg
test
add
lea
xor
out
adc
cli
push
and
out
lcall
out
inc
sub
push
repnz
mov
mov
cmp
lcall
fidivl
and
push
in
cwtl
push
mov
into
clc
jbe
add
jo
add
cltd
dec
inc
jno
lods
decl
push
jl
loopne
test
or
stos
je
out
dec
xor
and
ljmp
jmp
sbb
pop
mov
shl
add
add
inc
fwait
enter
xorb
mov
sbb
push
ja
xadd
ds
sbb
mov
sub
adcb
and
cmp
add
mov
xor
xchg
in
jbe
mov
sub
loope
or
jbe
mov
push
sbb
lock
dec
add
xchg
inc
nop
pop
or
pop
mov
sub
cs
inc
and
add
pushf
cmpsl
pop
pop
cld
mov
stc
or
and
push
loop
adc
mov
lds
hlt
jg
mov
negb
or
mov
push
testb
aam
cli
push
mov
push
dec
jne
outsl
cli
dec
inc
jbe
adc
ss
js
pusha
lahf
aam
cmpsl
jne
enter
pop
inc
cmp
or
inc
mov
or
ss
inc
aaa
shlb
push
push
sbb
fistps
and
int3
cmpsb
inc
mov
addr16
shll
gs
ss
jl
adc
cmc
rcrb
test
sub
sub
std
cltd
insb
es
incb
mov
push
mov
or
inc
enter
add
ret
hlt
jge
in
xor
fwait
dec
stos
fidivrl
fdivs
sbb
leave
aaa
es
ficoms
mov
js
jmp
mov
dec
pushf
mov
addr16
repnz
gs
mov
jl
mov
cs
test
or
fs
sub
ds
loop
in
insb
es
fcmovnb
mov
push
jecxz
add
enter
add
ret
hlt
jge
in
xor
fwait
dec
stos
fidivrl
fdivs
sbb
leave
aaa
es
ficoms
mov
js
jmp
mov
dec
pushf
mov
addr16
repnz
gs
mov
jl
mov
cs
test
or
fs
sub
ds
loop
in
insb
es
fcmovnb
mov
push
jecxz
add
enter
add
ret
hlt
jge
in
xor
fwait
dec
stos
fidivrl
fdivs
sbb
leave
aaa
es
ficoms
mov
js
jmp
mov
dec
pushf
mov
addr16
repnz
gs
mov
jl
mov
cs
test
or
fs
sub
ds
mov
.byte
push
sub
mov
jmp
push
mov
xor
jmp
push
jmp
pop
push
pop
cmpl
jne
push
pop
cmpb
jmp
add
jmp
mov
mov
mov
jmp
push
pushl
call
leave
jmp
push
subl
pushl
push
call
jmp
mov
xor
mov
jmp
testb
mov
je
jmp
ret
and
leave
ret
nop
nop
nop
nop
nop
test
jle
mov
jmp
incl
incl
jmp
mov
jmp
push
xorl
push
subl
pushl
and
jmp
movzwl
or
mov
jmp
xor
mov
mov
jmp
test
je
call
call
jmp
push
pop
test
jle
jmp
push
lea
jmp
add
push
xorl
call
xor
mov
jmp
nop
nop
nop
nop
mov
jmp
andl
nop
nop
nop
nop
nop
lea
push
jmp
push
jmp
je
mov
jmp
nop
nop
nop
push
push
pop
jmp
or
mov
jmp
test
jmp
nop
nop
nop
nop
nop
nop
push
push
push
jmp
sub
mov
andl
jmp
call
pushl
jmp
push
jmp
jne
mov
jmp
je
mov
mov
add
jmp
sub
mov
jmp
mov
jmp
movl
mov
sub
mov
jmp
lea
push
jmp
jne
jmp
lea
push
jmp
nop
nop
nop
push
andl
push
jmp
je
lea
jmp
call
pop
test
jmp
push
call
push
pop
cmp
mov
jmp
push
pop
cmpl
jmp
je
lea
jmp
mov
mov
add
jmp
cltd
jmp
mov
mov
jmp
mov
mov
pop
pop
jmp
pushl
call
add
jmp
and
jmp
mov
jmp
leave
ret
nop
nop
nop
nop
nop
pusha
call
mov
xor
jmp
xor
mov
mov
jmp
add
lea
jmp
mov
jmp
push
jmp
nop
push
add
mov
sub
push
pop
cmpl
jmp
mov
add
mov
push
shr
jmp
mov
push
jmp
nop
nop
nop
nop
push
jmp
push
add
push
pop
cmpl
jmp
call
push
jmp
push
call
push
jmp
pushl
call
jmp
movzbl
add
mov
mov
jmp
pop
ret
nop
nop
nop
nop
nop
mov
lea
sub
shr
jmp
nop
nop
nop
push
xor
mov
push
push
jmp
pushl
jmp
mov
test
lea
mov
jmp
push
and
mov
sub
add
jmp
nop
nop
nop
nop
nop
nop
pushl
jmp
push
addl
push
subl
pushl
call
jmp
push
jmp
lea
jmp
call
test
pop
jmp
test
je
jmp
lea
mov
jmp
shr
and
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
add
mov
push
jmp
pushl
jmp
push
call
mov
jmp
pushl
pop
pop
jmp
mov
jmp
pop
jne
sub
mov
jmp
mov
test
jne
mov
jmp
pushl
jmp
jmp
idiv
jmp
nop
push
xor
mov
push
jmp
push
push
push
jmp
mov
jmp
push
mov
mov
xor
jmp
mov
jmp
mov
lea
push
jmp
je
jmp
je
push
push
jmp
pop
mov
jmp
push
jmp
nop
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
push
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
push
add
faddl
add
aam
add
int3
push
add
les
add
mov
push
add
lods
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
or
adc
adc
adc
adc
adc
adc
adc
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
or
adc
or
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
jecxz
lock
pop
cmp
jne
and
jmp
xor
mov
leave
ret
nop
nop
nop
nop
nop
mov
mov
test
jmp
mov
jmp
test
je
lea
push
jmp
add
add
add
jmp
xor
jmp
jle
mov
sub
sub
jmp
call
test
pop
je
jmp
test
jmp
push
xorl
pushl
jmp
mov
sub
add
nop
nop
nop
nop
nop
sub
add
decl
jmp
mov
mov
add
mov
jmp
sub
jmp
lea
push
call
test
jmp
je
test
je
nop
nop
nop
nop
nop
movzwl
jmp
call
pushl
jmp
jne
jmp
popa
jmp
nop
nop
nop
nop
nop
mov
jmp
pop
lea
push
jmp
jne
jmp
je
call
test
pop
jmp
jmp
mov
jmp
mov
jmp
add
push
pop
cmpl
jne
jmp
add
jmp
sub
pushl
jmp
pop
pop
push
pop
jmp
sub
decl
jne
jmp
je
push
xorl
and
pop
jmp
mov
test
jle
jmp
lea
jmp
add
push
pushl
jmp
push
push
call
jmp
pop
leave
ret
nop
nop
nop
nop
nop
call
jmp
push
push
jmp
and
mov
add
add
dec
jmp
push
jmp
test
je
mov
jmp
call
push
push
push
jmp
jne
mov
test
jle
jmp
call
sub
add
pop
nop
nop
nop
nop
nop
lea
jne
jmp
add
add
jmp
jmp
call
add
jmp
and
mov
nop
nop
nop
nop
nop
shl
shr
jmp
mov
test
jmp
add
push
pop
cmpl
jmp
push
subl
push
xorl
push
call
jmp
or
jmp
je
and
mov
jmp
jne
jmp
jmp
lea
jmp
xor
add
dec
jmp
sub
mov
jmp
push
pop
pop
pop
jmp
and
jmp
jne
jmp
mov
jmp
andb
jmp
pop
jmp
add
push
jmp
pop
pop
jmp
push
xorl
pushl
push
jmp
pop
pop
jmp
incl
jmp
jmp
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
jmp
ret
mov
jmp
nop
nop
nop
nop
nop
call
jmp
pop
movzbl
jmp
mov
test
nop
nop
nop
nop
nop
je
pushl
jmp
incl
xor
mov
and
jmp
add
pushl
push
push
jmp
sub
add
nop
nop
nop
nop
nop
sub
add
shr
je
test
jmp
call
add
add
jmp
je
mov
xor
mov
sub
jmp
test
lea
jne
jmp
mov
mov
incl
dec
jmp
call
push
pop
nop
nop
nop
nop
nop
pop
pop
pop
jmp
jne
jmp
jmp
pop
pop
ret
jmp
mov
mov
push
pop
nop
nop
nop
nop
nop
jmp
call
test
pop
jmp
push
pop
jmp
nop
nop
nop
nop
nop
jne
push
pop
cmp
jne
lea
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
call
test
pop
nop
nop
nop
nop
nop
je
mov
and
mov
nop
nop
nop
nop
nop
sub
mov
mov
nop
nop
nop
nop
nop
incl
dec
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
jmp
sub
nop
nop
nop
nop
nop
jmp
sub
add
nop
nop
nop
nop
nop
sub
add
mov
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
movzbl
add
incl
add
mov
nop
nop
nop
nop
nop
lea
push
nop
nop
nop
nop
nop
call
push
pop
cmp
pop
nop
nop
nop
nop
nop
jb
nop
nop
nop
nop
nop
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
nop
nop
nop
nop
nop
jb
nop
nop
nop
nop
nop
sub
add
push
pop
cmp
jae
sub
add
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
test
je
nop
nop
nop
nop
nop
mov
sub
mov
sub
mov
nop
nop
nop
nop
nop
mov
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
incl
incl
mov
nop
nop
nop
nop
nop
push
pop
cmpl
je
mov
nop
nop
nop
nop
nop
pop
sub
pop
nop
nop
nop
nop
nop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
add
add
add
insb
adc
add
add
add
add
mov
add
sahf
adc
add
adc
add
adc
add
adc
add
add
add
add
jl
add
mov
adc
add
adc
add
add
dec
adc
add
add
insb
adc
add
add
add
add
mov
add
sahf
adc
add
adc
add
adc
add
adc
add
add
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
dec
xchg
sbb
push
leave
sbb
xor
add
adc
adc
addb
add
add
add
sbb
cmpsl
icebp
mov
add
add
add
inc
add
add
add
add
add
dec
das
add
add
add
add
add
sub
xchg
xor
add
loopne
addb
add
add
add
push
push
ja
xchg
xor
add
lock
add
add
xor
add
add
jnp
fldlg2
fwait
xor
add
add
sbb
add
sbb
xor
push
sbb
jb
imul
jb
je
arpl
imul
gs
xor
cs
insb
nop
std
add
fadds
add
jge
xorl
ss
xorl
jle
loope
sbb
xor
into
xor
ds
aas
inc
ss
xor
aaa
shlb
aaa
cmpsl
or
ss
push
aaa
loope
push
xor
mov
xor
xchg
xor
sarl
cmp
cmp
cmp
cmp
cmp
ss
loope
sub
jb
jle
cmpsb
xor
pop
cmp
ja
jg
test
mov
mov
mov
fstpt
cmc
cmp
cmp
cmp
or
or
adc
adc
sbb
bound
push
cmp
cmp
cmp
cmp
cmp
adc
adc
xor
pop
cmp
cmp
test
lods
cmp
cmp
or
or
add
pop
sub
push
push
dec
dec
ja
jl
dec
jnp
jne
outsl
cmp
bound
push
addl
jb
insb
aaa
xor
pop
and
push
cmp
invd
or
or
pusha
orb
inc
cwtl
.byte
