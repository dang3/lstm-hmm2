jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jb
xor
popa
popa
xlat
mov
sub
or
add
push
add
push
add
add
dec
add
fwait
add
add
pop
add
add
add
pusha
add
add
add
or
mov
cmp
add
or
mov
push
add
add
add
add
popa
add
add
xor
xchg
add
add
adc
sub
add
addb
add
add
add
add
or
in
fadds
add
add
sbb
xor
pop
add
mov
add
addl
xor
add
xor
mov
add
add
add
add
roll
ret
add
add
mov
add
add
or
pop
add
add
clc
add
cmp
xor
pop
add
mov
add
addl
xor
add
push
add
add
add
add
push
add
add
add
add
fldl
add
or
push
add
add
add
add
add
add
add
and
mov
pop
add
mov
add
add
add
add
add
add
sbb
popa
add
add
roll
add
add
add
add
add
rolb
roll
xchg
faddl
xor
pop
add
add
add
add
add
add
adc
lods
add
add
add
add
add
xchg
mov
xor
or
adc
roll
xor
jo
jecxz
jo
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
movl
pop
add
add
aaa
add
add
add
roll
mov
add
add
add
add
or
add
add
add
add
add
sub
add
add
add
jge
bound
mov
add
add
aaa
add
mov
fldl
add
mov
push
add
add
add
add
or
push
add
add
add
add
xor
faddl
xchg
add
add
add
add
into
add
or
add
add
roll
aaa
add
mov
add
add
add
add
push
or
adc
jecxz
dec
add
add
push
add
add
add
ja
pop
add
add
add
add
add
add
add
xor
rolb
pop
add
pop
add
add
add
add
add
rolb
add
or
add
add
add
add
add
xchg
add
add
push
add
add
add
cltd
add
add
add
add
add
or
adc
sbb
dec
add
add
pop
add
add
add
push
and
adc
lock
add
add
add
add
add
faddl
add
add
sbb
add
add
add
add
add
add
add
add
inc
add
add
xchg
mov
add
and
add
add
add
dec
add
add
add
add
add
jecxz
adc
incb
roll
or
add
pop
add
add
enter
dec
add
add
add
fldl
add
add
or
jge
xchg
add
add
mov
xchg
add
add
add
add
add
add
pop
add
add
add
add
or
add
and
xor
add
cmp
push
jb
lahf
xchg
mov
push
fdivr
out
push
lods
pop
js
mov
mov
add
leave
and
mov
icebp
or
filds
popf
arpl
pop
cmpsb
cwtl
and
outsb
jl
in
or
xor
jo
pop
fidivrs
mov
mov
jo
outsl
test
lahf
dec
add
mov
cmp
in
lcall
cli
ds
sbb
stc
cmp
and
and
mov
xor
bound
enter
lahf
or
cld
js
shr
aas
lret
movb
mov
inc
mov
cmp
xchg
inc
mov
and
in
icebp
outsl
aam
pop
and
xor
sub
negl
xchg
and
rol
pop
xor
add
mov
mov
gs
xor
sbb
cmp
negl
mov
mov
addr16
stc
loopne
xor
mov
aas
add
adc
stos
pop
pop
sub
xor
mov
fstpl
lahf
mov
cmp
pop
aas
or
inc
imul
std
mov
jo
hlt
sbb
xor
stc
mov
push
pop
pop
idiv
push
fs
xor
pop
jne
add
sbb
stos
ljmp
sbb
aam
cli
shll
nop
outsl
inc
push
lods
imul
push
push
rol
sbb
ret
jmp
and
add
les
jp
shr
push
cmp
jb
inc
cmp
shl
icebp
shrl
outsb
mov
shrl
shrb
xor
adc
test
js
das
fstps
inc
jmp
and
cltd
adc
pop
cmp
xlat
xlat
int3
jge
movsb
ret
nop
pushl
lock
fcoms
and
rcll
lret
or
mov
data16
pop
sahf
xchg
or
push
xor
or
cli
lods
sbb
imul
mov
out
add
xor
fstpl
jbe
mov
inc
pop
inc
call
je
loope
aas
lock
and
xchg
xor
leave
loopne
je
sarb
std
xchg
pop
cs
and
inc
popf
or
mov
push
push
inc
dec
pop
mov
push
out
adc
imul
mov
lock
fcomp
cltd
cld
imul
xchg
add
push
sub
mov
add
jb
push
pop
shll
sbb
loopne
in
addb
es
sub
les
in
lea
imul
insl
or
popf
movsb
loopne
mov
cwtl
adc
stc
push
aas
xor
test
enter
out
cmpsl
xchg
jb
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lret
int3
jmp
sti
in
aas
shl
out
fstps
dec
imul
sbb
or
cmp
sub
int3
jmp
sti
in
mov
aam
pop
pop
dec
imul
jo
or
cmp
sub
fadd
int3
repz
jecxz
xchg
pushf
orl
js
xor
add
ja
insb
pop
mov
xchg
in
fdivrs
daa
int
mov
adc
pop
sbb
mov
jae
and
xchg
mov
fwait
or
mov
cmpsb
into
sub
xchg
imul
jge
fsubl
rcrl
mov
or
dec
jnp
sbb
movsb
rcll
cmp
or
or
mov
lret
call
je
lcall
mov
test
cmp
data16
sbb
adc
add
dec
mov
mov
dec
sbb
cmp
shlb
pop
cmp
in
add
je
cltd
inc
pop
mov
jmp
push
test
jns
sbb
pop
sub
cmp
fadd
int3
jmp
sti
in
pushf
pushf
mov
pop
inc
dec
jae
bound
add
cmp
inc
cmpsl
fdivrs
in
clc
stc
std
in
cli
mov
dec
sbb
pop
sbb
pop
jle
pop
inc
push
bound
mov
out
fwait
shrb
ds
or
or
scas
cwtl
mov
xchg
fwait
mov
pop
pop
dec
imul
sbb
or
cmp
sub
int3
jmp
sti
in
mov
lods
dec
pop
pop
dec
imul
sbb
or
cmp
sub
fdiv
movsb
push
adc
decl
cmp
mov
ret
or
sbb
cmp
mov
fstpl
int3
aad
mov
cltd
ret
cmp
jp
jno
xchg
mov
clc
add
push
test
or
push
ja
jg
dec
in
nop
ret
inc
and
dec
std
add
sarl
xchg
or
mov
sar
popf
add
cmc
negl
enter
pusha
stos
inc
imul
push
sub
add
push
jl
jmp
xchg
outsl
push
xor
movsb
cmp
notl
sub
pop
xchg
out
fadds
jno
xor
sub
test
sub
popf
outsl
pop
jb
xchg
push
mov
push
daa
and
lret
daa
fstp
inc
leave
dec
xchg
movsb
outsl
xor
lock
sub
jno
cmp
or
xchg
and
and
mov
push
or
xchg
xor
adc
insb
cmp
adc
lods
rolb
popa
pop
add
xor
or
dec
mov
jbe
std
cltd
push
stc
push
and
sub
lcall
and
mov
or
push
push
lret
sbb
data16
fucom
sbb
sbb
test
dec
and
jno
std
or
popa
fstpt
jp
jmp
sbb
or
imul
adc
dec
and
mov
sub
fidivrs
imulb
xchg
inc
jecxz
fcompl
insl
loope
cmpsb
clts
popf
cmc
adc
fcmovnbe
add
xchg
jbe
xlat
cltd
inc
mov
jbe
adc
addr16
lds
movsb
loopne
lahf
push
sbb
in
mov
sbb
lahf
int3
lea
in
popa
in
push
lds
cmp
push
push
sub
or
cltd
and
dec
addr16
jmp
mov
aam
imul
push
add
or
mov
xlat
mov
cltd
hlt
mov
ret
bound
lahf
sbb
push
jp
movsl
push
pop
dec
lahf
lret
call
data16
shlb
loopne
dec
or
sub
xor
aas
inc
inc
or
jno
mov
dec
clc
pop
push
xrelease
das
enter
push
cmp
imul
mov
out
push
lcall
sub
mov
pop
xchg
lock
push
adc
inc
mov
xor
je
cs
jle
pop
xchg
out
push
or
inc
cmp
mov
shl
repnz
imul
fdivrl
xor
mov
loope
push
cmp
into
sbb
adc
and
popf
mov
pop
cmp
fsubs
fiaddl
mov
andb
in
jp
test
xor
xchg
jge
test
mov
iret
xor
daa
fs
jno
fiadds
pop
stos
call
mov
test
jb
xor
fcmovne
add
inc
inc
aad
push
jno
lret
inc
mov
leave
andps
dec
push
daa
mov
lret
cli
push
icebp
cltd
imul
lret
or
into
sub
dec
xchg
mov
cmp
mov
xor
mov
nop
repnz
add
out
mov
pop
iret
lock
nop
mov
xchg
mov
jno
int3
lods
and
insl
in
or
add
in
xor
pop
ja
jg
cmp
aas
mov
cmpsb
fld
sbb
out
add
adc
xchg
push
mov
inc
push
mov
leave
mov
aas
mov
xor
xor
mov
data16
call
or
loop
push
xlat
pop
movsl
nop
push
xor
mov
mov
xchg
mov
pop
shl
int
or
xor
adc
and
std
rcr
xchg
push
repnz
push
pop
adc
cld
sar
in
xchg
fidivs
push
push
mov
out
cmpsl
cmc
mov
aad
lods
jp
mov
je
jae
xor
setne
in
pop
jp
ficompl
jg
mov
jae
pop
or
repnz
adc
leave
sahf
xor
mov
inc
hlt
mov
mov
xchg
jle
mov
in
scas
movsb
mov
fwait
stc
add
lods
shl
in
push
loopne
push
lds
and
xor
pop
arpl
sahf
or
icebp
ja
arpl
sub
cmp
xchg
mov
test
in
push
jp
cmpl
xlat
xor
mov
mov
fisttpl
fcompl
stos
loopne
xchg
scas
cmc
jns
pop
idivb
aad
push
shl
cmp
cmp
add
in
xchg
lock
hlt
leave
movsb
jne
xor
rcrb
jle
dec
fstpl
jae
lea
scas
pop
repnz
cmovb
jns
leave
iret
mov
mov
cmpsl
dec
clc
and
leave
enter
cmp
clc
pop
adc
cmpsl
jmp
add
fidivrl
xor
loop
pop
jl
iret
lds
lds
pop
leave
out
sub
loopne
cmp
mov
test
sub
sub
adc
push
ljmp
insl
int
sub
mov
xor
call
fidivrl
lret
out
test
repnz
sbb
xchg
mov
scas
ret
notl
imulb
scas
push
sahf
cmc
fdivrs
in
data16
cmp
mov
pop
les
pop
fisttpl
cmp
cmpsb
stc
aad
dec
jae
into
sbb
dec
pop
in
pop
adc
notl
int3
sub
mov
shll
andl
sbb
test
or
dec
inc
lret
xchg
push
fsts
inc
mov
lcall
lods
jb
pop
aad
or
mov
dec
sar
xor
push
jbe
shlb
gs
add
imul
les
mov
movsl
xor
shlb
xor
or
jb
aad
or
movsb
arpl
cmp
psrld
mov
hlt
daa
rolb
jb
sbb
lods
fildll
ret
subl
test
lea
mov
push
out
adc
insb
sarl
je
into
pop
ret
neg
jle
inc
fs
cld
xchg
pushf
inc
mov
int3
into
xor
shll
mov
outsl
int
outsb
mov
xchg
in
mov
and
mov
or
inc
in
jl
je
mov
mov
fdiv
jp
je
push
jne
push
xor
push
loope
mov
xchg
jo
lds
lret
mov
or
jo
or
fdivrl
pop
hlt
push
lret
rclb
test
and
cmp
pusha
cltd
or
or
cmp
pop
cmp
loop
push
or
lcall
pop
loopne
subl
dec
mov
es
mov
push
test
cmp
mov
lcall
adc
xchg
std
dec
pop
push
pop
lret
out
daa
adc
lock
mov
inc
xlat
cltd
pushf
cmpl
fcomp
jle
xor
loopne
pop
push
clc
stc
loopne
imul
lock
imul
mov
sbb
pop
scas
jmp
imul
push
pusha
jle
stc
pusha
inc
mov
push
aad
mul
or
xor
push
iret
ljmp
ja
xchg
mov
ja
and
out
xor
pop
bound
sub
ss
add
scas
dec
xchg
cwtl
mov
pop
adc
subl
ja
jle
decb
sub
adc
out
push
sub
inc
add
ds
jbe
ss
ds
lock
adc
xor
inc
scas
cmp
fiaddl
mov
movsb
je
xchg
call
or
mov
stos
fwait
aas
push
or
lea
lret
mov
rcll
aad
xchg
lcall
das
jle
pop
or
xchg
dec
mov
dec
push
push
pushf
aad
vmulps
rsm
aaa
fdivrs
xchg
sub
mov
add
test
loope
inc
adc
add
inc
mov
scas
push
mov
fs
insb
pop
fwait
push
cmp
inc
cmp
fsts
ret
nop
cmpsl
lock
mov
setg
pop
mov
aaa
or
nop
inc
cmc
insl
add
lcall
jns
aas
cwtl
scas
aam
aaa
stos
cli
imul
lcall
xchg
mov
or
int
imul
add
int
int
mov
inc
mov
in
cmpsl
sub
test
in
incl
call
xor
inc
dec
rclb
daa
lea
mov
in
data16
jmp
dec
adc
push
sub
mov
lods
and
sbb
xor
jmp
inc
loopne
adc
or
lock
or
out
sti
fstl
gs
and
fmull
mov
cltd
lret
test
mov
jo
int3
shll
jns
mov
xchg
sub
lds
jno
xchg
filds
test
mov
mov
test
hlt
rclb
add
in
inc
out
push
jp
inc
mov
cwtl
adc
jmp
aam
loop
sbb
mov
mov
xor
sahf
xor
jbe
in
jne
xadd
adc
sar
sbb
or
mov
lock
std
cltd
test
testb
push
cmpsb
insb
mov
dec
jmp
addl
in
mov
sub
xor
pop
push
sub
fabs
divb
mov
cmp
mov
push
out
xor
addr16
mov
add
mov
or
dec
cltd
int3
imul
mov
lcall
add
pop
sub
jecxz
pop
sub
xorb
pop
jmp
incl
pop
add
int3
ss
aam
mov
jns
jg
and
imul
jmp
or
notb
imul
add
mov
add
dec
ret
push
and
aam
negb
pop
cmpsl
rcll
insl
or
mov
sbb
rorl
leave
cmp
xchg
pop
mov
lret
aaa
or
das
sbb
pushf
sbb
jecxz
mov
xor
ljmp
cmpsb
jmp
lret
xlat
insl
rcrb
sbb
pop
js
inc
mov
adc
mov
jg
std
out
dec
aad
das
push
stc
cmp
or
ds
adc
inc
popa
daa
negl
lahf
jl
sub
xor
xor
enter
sbb
icebp
xchg
mov
add
cld
insl
int3
mov
xchg
es
or
inc
sbb
mov
lcall
jmp
call
loop
sub
cwtl
push
push
adc
ret
jmp
repnz
in
ret
mov
cwtl
jge
inc
adc
jle
or
sbb
xchg
movsb
sbb
mov
daa
add
pop
inc
inc
lock
adc
mov
mov
cmp
inc
jnp
aas
push
mov
fninit
outsl
sub
shrl
imul
pusha
push
daa
mov
and
mov
dec
cmp
mov
std
std
loope
mov
pop
xchg
add
adcb
sti
mov
cmp
nop
int3
mov
and
cwtl
mov
add
pop
loope
insb
repz
xchg
inc
je
mov
mov
pop
std
sarl
cmp
mov
push
adc
fcompl
fs
xor
xor
std
add
inc
xor
outsl
fsub
cwtl
loope
pop
aad
into
mov
test
sahf
ss
sbb
test
ja
mov
mov
mov
adc
std
lock
shlb
in
mulb
xchg
xchg
lock
mov
aad
mov
aam
dec
mov
fidivs
xchg
jle
cmpsb
or
and
call
js
call
xor
les
xor
call
inc
sbb
out
sbb
ss
cltd
loopne
enter
mov
aad
sbb
xchg
push
push
push
stos
mov
fcmovb
subb
pusha
test
sbb
fiadds
iret
and
sub
push
sahf
mov
pop
pop
shrb
fcmovnb
loopne
mov
test
push
mov
inc
mov
jbe
and
daa
fcmovb
addb
ss
cmp
addps
dec
out
jmp
hlt
jl
stc
cwtl
orl
pusha
mov
sub
fs
jnp
xchg
or
mov
pop
mov
push
xchg
add
inc
mov
lds
cmpsl
out
lret
fstps
ljmp
jge
sahf
cmp
jg
dec
mov
jo
push
fcmovnbe
cmc
jp
push
frstor
jle
inc
push
lcall
lcall
xor
cmp
rcrb
jae
outsl
mov
inc
push
pop
movb
mov
push
test
imul
mov
dec
aad
repz
icebp
cmpb
mov
movsl
push
mov
adc
add
mov
sbb
movsl
test
dec
dec
stc
push
gs
add
stos
sub
inc
mov
shr
pop
popf
data16
loopne
dec
push
hlt
or
addl
dec
fldcw
sbbl
mov
popf
fnstsw
cmp
in
test
mov
test
lret
add
fldl
jnp
sahf
and
mov
inc
les
pop
dec
cwtl
jl
addr16
cld
push
sbb
in
sahf
jle
push
pop
nop
dec
mov
imul
adc
push
idivb
jbe
jp
dec
push
dec
cmp
add
jnp
test
pop
cwtl
ljmp
dec
es
xchg
jno
add
in
xchg
mov
push
cmp
incb
mov
sub
out
mov
jo
sbb
pop
cmp
xor
xlat
aaa
and
inc
sbb
mov
sbb
cs
mov
add
mov
push
fldcw
aaa
sbb
push
cmp
call
fwait
jmp
xchg
push
dec
outsb
push
sarb
push
mov
imull
insb
cltd
insl
add
fisttps
add
sub
enter
bswap
fmull
loope
push
mov
imul
stos
outsb
pop
ss
cwtl
or
ja
dec
sub
addr16
push
xchg
cmp
scas
jb
pop
lret
cmp
fadds
jns
mov
sub
fldenv
add
sub
push
sar
ja
or
pop
or
lcall
aas
repz
lret
test
fidivrl
dec
lcall
xor
mov
int
inc
inc
dec
bound
in
call
cmpl
mov
mov
pop
inc
outsb
fdivr
loopne
and
inc
mov
dec
adc
mov
sbb
jmp
jb
push
xor
push
cmp
leave
and
pusha
jg
jmp
dec
mov
sbb
insb
pop
push
adc
pushl
pop
int
jmp
push
dec
ss
pushf
push
mov
ret
dec
pop
mov
mov
jb
jp
mov
out
dec
inc
mov
movd
mov
pop
fyl2xp1
add
nop
mov
test
in
cmpsl
mov
or
jbe
pop
mov
xchg
xchg
inc
mov
sub
pop
sbb
inc
mov
orb
ss
jnp
popa
lock
stos
dec
pop
push
mov
and
sub
mov
rcrb
jmp
sub
pop
sub
das
test
iret
jg
xchg
stos
loopne
mov
jae
imul
inc
sub
dec
jl
rcr
sti
test
pop
cmp
mov
popf
imull
push
fimuls
loopne
pusha
adc
mov
xchg
and
add
and
fcomps
js
pushf
mov
int3
xstore-rng
cmpsl
inc
int
or
pop
loope
cld
insb
lods
add
fs
and
mov
xchg
test
xor
pop
imul
insb
push
adc
in
pushl
aas
out
pop
fdivl
xchg
nop
cmpsl
xchg
rclw
mov
push
dec
mov
testb
ja
sbbl
fwait
sbb
pop
mov
and
pop
popf
jge
outsl
inc
fsubp
xchg
sbb
iret
hlt
enter
lret
cmp
sbb
cmp
pop
push
cmp
cmpsl
xchg
sub
les
pop
outsb
jnp
xor
mov
icebp
repz
push
clc
in
mov
mov
add
xor
jns
pop
mov
rclb
clc
loopne
sar
fwait
imul
and
ss
fldenv
xorl
das
lds
pop
ja
lcall
mov
test
jp
pop
fs
lret
cmp
loopne
lcall
inc
and
sbb
cli
dec
stos
xchg
jge
mov
cmc
pop
mov
inc
mov
ficoms
mov
insb
lcall
out
mov
mov
popf
push
stc
popa
xchg
out
xchg
test
das
or
sbb
sbb
sbb
push
cltd
cwtl
lcall
mov
jo
sahf
mov
aas
shlb
rcl
rcrb
xchg
out
aam
mov
jge
in
sbb
mov
mov
movsl
mov
sub
mov
mov
xchg
cmp
stos
call
jne
mov
stos
mov
and
mov
paddusw
sbbb
adc
inc
inc
mov
mov
push
mov
jecxz
adc
mov
mov
jle
test
mov
sbb
mov
mov
mov
mov
dec
sahf
adc
nop
les
cwtl
sub
sub
mov
sub
icebp
dec
sbb
test
aas
and
popf
xchg
mov
push
loop
or
outsb
mov
ds
sub
sbb
sub
xor
sub
sahf
xchg
stos
push
cld
das
dec
push
mov
inc
enter
pop
fldl
mov
gs
sub
adc
subb
push
popf
leave
stos
add
sub
les
movsb
cwtl
xor
xchg
popa
out
jge
leave
insb
hlt
mov
clc
jbe
mov
dec
pushf
je
sbb
jmp
lahf
push
xor
pop
scas
xor
bound
lret
dec
xchg
sub
mov
ret
inc
mov
and
cmp
js
dec
les
int3
mov
cwtl
push
subl
test
or
nop
cmp
and
pop
arpl
test
sbb
imul
mov
outsl
adc
mov
cwtl
cli
jl
subb
inc
sbb
enter
mov
aam
pop
mov
jb
mov
jnp
jb
mov
stos
jo
push
cmp
push
pop
xor
pop
cld
mov
aad
jl
xchg
addr16
mov
push
sbb
loopne
ret
js
insb
ret
pop
mov
sbb
lret
mov
xchg
jge
shlb
dec
lods
push
dec
cmpl
mov
xchg
in
sarb
mov
test
pop
js
xor
rol
pop
popf
imul
dec
js
hlt
aaa
jl
in
scas
xlat
nop
scas
lcall
and
test
rcll
inc
jae
and
dec
stc
xor
fidivrl
cmp
out
jne
data16
mov
mov
test
push
scas
jne
bound
and
aaa
dec
and
fsubs
into
cwtl
dec
mov
cmc
sub
mov
xor
inc
cmp
adc
xlat
adc
add
or
gs
and
icebp
dec
jnp
fldcw
inc
es
in
cmp
pop
adc
aas
cmpsl
outsb
mov
adc
stos
adc
or
mov
insl
mov
add
jo
test
mov
pcmpgtw
pushf
sbb
xorb
or
mov
dec
and
adc
jbe
fdivl
mov
xchg
fdivr
adc
jecxz
pop
dec
push
daa
mov
mov
pop
push
sbb
adcl
jns
les
jle
add
into
fsubrs
loopne
leave
jl
sub
dec
mov
push
pop
rcrb
pop
mov
loopne
adc
pusha
mov
sub
xchg
scas
xor
xor
jne
leave
mov
test
pop
frstor
aad
cmc
pop
int
ret
addr16
int
dec
jne
mov
repz
cmp
es
cs
loop
mov
cwtl
lret
into
xchg
ret
inc
aaa
or
ja
pop
adc
test
xor
xor
jg
nop
cli
pop
pop
stos
xlat
aad
scas
pmuludq
in
scas
push
xor
mov
inc
inc
in
or
gs
xor
lahf
insl
cld
repnz
das
fisubl
fdivs
outsb
fldz
scas
lret
je
bswap
loope
sti
in
mov
lods
dec
pop
pop
dec
imul
sbb
or
cmp
sub
int3
jmp
sti
in
mov
lods
dec
pop
pop
dec
imul
sbb
or
cmp
sub
int3
jmp
sti
in
mov
lods
dec
pop
pop
dec
imul
sbb
or
cmp
sub
int3
ljmp
mov
mov
movsb
out
jl
sbb
repz
rorl
pop
mov
inc
lahf
push
testl
sub
cmp
dec
mov
jp
mov
push
pop
mov
sub
sbb
or
clc
sbb
sub
cmp
dec
fstps
push
jp
mov
push
inc
mov
xor
add
adc
sbb
rcrb
pop
lret
sub
sub
adc
stos
cs
repz
popa
and
cmp
xchg
andb
data16
sub
inc
mov
mov
aam
nop
adc
aam
aas
pop
cmp
sub
jne
lock
rolb
sub
outsb
movsl
out
jg
sub
mov
stos
shrl
mov
mov
jp
sbb
cmc
cli
stos
xchg
adc
sbb
pop
push
xchg
adc
loopne
inc
pop
mov
movsl
inc
stos
xor
dec
jno
or
ljmp
fisubl
xchg
lcall
nop
pop
inc
and
and
xchg
pop
fcmove
push
fisubrl
gs
dec
jp
jge
dec
mov
sub
add
adc
loop
repnz
cmp
dec
mov
jp
out
pop
stc
push
pop
cld
dec
scas
insb
mov
test
addr16
jg
pop
jg
int3
xlat
sbb
setp
out
add
push
sub
dec
scas
dec
xchg
sbb
cmpl
scas
cmp
add
adc
in
cmp
aas
push
fisubrl
ljmp
ljmp
pop
stos
push
jp
mov
push
pop
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jp
mov
in
aaa
jnp
pop
sbb
and
outsb
jns
lock
daa
pop
adc
sti
mov
mov
lods
iret
or
fbld
int3
pushf
popa
test
xchg
inc
jmp
mov
mov
adc
inc
pusha
ljmp
add
pushf
add
into
fs
mov
insl
pop
push
enter
dec
rclb
into
out
jge
sbb
push
in
cmp
cli
xchg
call
pop
xor
jbe
movl
mov
fimuls
outsb
imul
scas
addr16
ret
jno
add
scas
and
pop
cmp
movsb
testb
sbb
fsub
sahf
mov
sbb
push
in
mov
insl
ljmp
jno
clc
into
lods
nop
jo
aaa
dec
insb
pop
lret
xchg
loop
cld
test
shl
aas
sbbl
clc
les
or
fs
clc
movsb
mov
mov
les
adc
addr16
sbb
jmp
insl
add
pop
jge
out
push
cltd
popa
dec
cmp
call
mov
jb
push
leave
adc
dec
into
mov
mov
mov
mov
subb
adc
mov
pop
pop
out
loop
popf
dec
mov
dec
mov
pmaxub
pop
cmc
lahf
xlat
stos
sar
jp
or
lods
add
in
adc
xor
fidivrl
pop
pop
sarl
insb
cmp
cwtl
xor
les
into
cmp
xor
mov
inc
repnz
cltd
mov
add
fisubl
aad
adc
je
jbe
inc
das
jl
mov
sbb
lds
insl
ja
filds
sbb
push
arpl
pushf
and
sbb
pushf
sbb
lods
or
je
and
cld
call
push
dec
xor
adc
js
dec
shll
addr16
mov
xchg
movsb
scas
push
icebp
inc
popa
enter
cltd
xor
call
es
mov
cmpsl
outsl
sbb
jg
and
jns
popa
cmp
scas
outsb
pop
push
lret
aaa
sbbb
enter
call
xor
fs
addr16
test
out
ja
and
mov
scas
dec
mov
mov
test
gs
sub
clc
sbb
lahf
mov
divl
or
dec
mov
lods
xchg
jmp
sbb
mov
mov
ljmp
cs
imul
add
inc
xchg
rcr
push
je
mov
adc
adc
into
lds
nop
jmp
std
std
pushf
cmpsl
loop
shl
add
into
xchg
leave
add
mov
in
loopne
psrad
call
jmp
icebp
pop
loope
movl
fisubl
loopne
inc
and
sahf
adc
dec
pop
xchg
in
test
pop
subl
jmp
jnp
mov
and
pop
test
pop
jno
sahf
and
imul
push
bound
icebp
pop
jmp
jecxz
pop
imul
fwait
stc
mov
int3
enter
xor
adc
aas
or
mov
addr16
rorl
mov
xchg
jle
pop
in
lods
pop
sub
xchg
cmpsb
mov
loopne
incl
jp
mov
sbb
std
mov
scas
push
and
mov
insl
insl
test
lock
push
insl
inc
out
lcall
and
out
and
arpl
xor
ja
inc
cmp
jne
pop
push
test
insl
data16
pop
xor
pushf
push
inc
jp
add
stc
xchg
dec
fstl
insb
iret
loopne
lods
lahf
das
ret
fistl
clc
enter
sub
push
mov
mov
dec
push
mov
test
add
xor
cwtl
loop
nop
mov
aad
popa
push
adc
xrelease
push
push
notl
dec
dec
cli
outsb
adc
addr16
push
gs
add
or
repz
ret
mov
rcrb
push
mov
mov
clc
stc
add
jg
dec
test
mov
sbb
sti
lods
fcomps
push
stos
push
mov
jb
das
mov
mov
arpl
xlat
cmp
imul
insb
enter
lods
filds
loope
mov
jp
scas
scas
mov
lods
nop
push
mov
or
lea
idiv
cltd
das
jmp
insb
addl
pop
push
shll
mov
lret
pop
push
out
pop
cmp
pop
mov
insl
push
xor
lret
mov
cmpsb
fnop
in
mov
daa
or
popf
or
push
xchg
mov
out
stos
cmp
mov
push
push
add
and
add
jle
add
mov
jg
jmp
pop
out
pushf
pop
mov
cmp
cmp
xchg
jbe
mov
cli
cwtl
push
mov
inc
stos
xor
sub
dec
inc
and
rcrl
jae
sbb
jl
gs
push
jae
xor
in
mov
sub
les
jbe
inc
subb
xchg
jne
and
jo
cmp
cltd
adc
jno
pop
movl
cmp
push
adc
inc
inc
pop
xchg
or
push
and
ja
add
lcall
arpl
repz
pop
imul
add
filds
out
imul
push
mov
lret
mov
aam
sub
cli
in
pop
in
push
adc
adc
pop
call
cmc
mov
or
icebp
imul
sysret
pop
sub
cwtl
inc
mov
mov
out
cwtl
lods
lahf
pushf
sbb
adc
insl
out
ss
ljmp
daa
add
mov
test
jg
sbb
xlat
std
xor
out
movsb
sbb
adc
hlt
push
lret
push
adc
xchg
sub
mov
xchg
mov
mov
or
sbb
add
je
cmpb
ljmp
xchg
fsubrs
jo
pop
int3
mov
fs
xchg
mov
loopne
xchg
mov
inc
push
or
lcall
popa
adc
int3
fs
sbb
or
cmp
int3
add
push
mov
sub
fsubl
push
xchg
and
sbb
jl
dec
and
mov
pop
fmulp
jns
call
ljmp
pop
push
jge
xor
rcrb
add
jge
cmpsb
jb
fbstp
dec
jb
inc
cmpsl
xchg
pop
push
test
lods
roll
fcompl
adc
pop
arpl
mov
xchg
popa
or
pop
mov
ss
fdivrs
sbb
cmc
sub
pop
aas
sbb
push
loop
mov
fwait
repnz
and
xor
pop
clc
xchg
mov
pushf
aad
xor
sub
xchg
pop
push
in
sbb
jno
lahf
or
mov
mov
mov
cmp
mov
cmp
push
ss
push
xchg
mov
sub
adc
cmpsb
pop
call
std
cltd
jb
lret
int
test
xchg
in
and
or
or
pop
or
mov
mov
jl
outsl
xor
je
test
pop
jno
test
mov
jp
test
adc
add
xchg
fcoml
push
aam
sahf
mov
and
mov
mov
ret
les
aaa
pop
xor
mov
and
test
sahf
into
addr16
pop
sbb
pop
repz
and
daa
out
ds
xor
out
ficompl
addl
movsl
fisubrl
out
xchg
ret
scas
and
or
outsb
das
adc
add
xchg
call
push
or
in
pop
push
inc
jno
stos
sub
xchg
sub
mov
test
mov
mov
sbb
cmpsl
lds
rcr
in
cmp
add
rolb
stos
add
aaa
in
ja
push
dec
aas
ret
aaa
or
ljmp
mov
jnp
push
out
adcl
xor
add
fldln2
sub
sbb
sub
dec
and
cltd
sub
xchg
out
pop
rcrl
lods
pusha
addr16
cmpsb
xor
xchg
lea
cmp
and
jmp
out
sbb
les
mov
or
out
mov
cmp
push
mov
inc
adc
in
mov
mov
pop
pop
arpl
jae
push
int3
mov
mov
or
sahf
outsl
test
rdmsr
hlt
jmp
insl
push
stos
ja
dec
adc
pushf
mov
pop
shr
push
mov
add
jp
dec
pop
push
pop
int
flds
sbb
test
ficoms
test
addr16
or
xchg
jle
xchg
mov
push
fnstcw
popa
mov
std
sub
inc
shll
mov
pop
inc
cmp
inc
out
cmp
add
ucomiss
cmp
enterw
hlt
arpl
adc
and
and
jle
mov
add
jnp
imul
mov
dec
leave
inc
jae
pop
js
mov
dec
clc
mov
inc
adc
sub
or
mov
push
mov
pop
cwtl
and
mov
adc
push
out
xor
dec
jnp
rorl
shrb
shlb
hlt
push
pop
inc
scas
or
mov
inc
in
mov
push
jmp
mov
pop
jecxz
xor
mov
int3
fdivrl
daa
iret
xor
movsb
daa
sarb
sahf
iret
xchg
or
mov
loope
xchg
int
sub
xor
pop
fcomps
or
adc
bound
sub
push
call
pop
out
hlt
xchg
dec
mov
sub
nop
push
add
fistl
dec
xchg
dec
inc
push
lods
dec
sbb
pop
dec
int
pop
fcomps
lahf
inc
imul
mov
lahf
mov
pop
sub
adc
dec
and
xchg
mov
mov
cmp
pop
jo
leave
inc
fdivrl
mov
lahf
and
mulb
loop
inc
push
nop
rcrb
xchg
int3
mov
dec
jnp
and
fmuls
mov
mov
fildl
lret
jo
int
sbb
fistl
fisubrl
lods
sub
out
mov
fs
xor
loope
push
xchg
inc
dec
lret
mov
fistpll
dec
jp
mov
mov
das
pop
loop
xor
jbe
inc
mov
xor
sub
fs
cmpb
rorb
or
ror
icebp
test
pushf
pop
add
add
into
es
mov
mov
rcr
addl
xchg
sub
push
add
mov
lret
jp
inc
leave
imull
ljmp
and
jecxz
mov
scas
fldl
hlt
dec
mov
xchg
stos
sbb
rcrl
aas
push
fsubr
das
mul
rcl
sbb
ja
dec
lcall
pop
xchg
xchg
or
mov
mov
filds
sbb
jno
pop
jne
mov
jno
cmpsb
jae
rcr
sbbb
mov
popf
add
mov
outsb
jb
orb
dec
int3
mov
push
movb
fxam
mov
lahf
adc
xor
push
xchg
int3
jecxz
call
adcl
pop
or
sbb
push
jb
mov
push
call
test
mov
imul
sub
and
lods
ljmp
pop
push
add
scas
jle
sbb
jp
rclb
jle
clc
ret
cmpsl
mov
fisubl
and
outsb
mov
mov
addl
cmc
mov
xor
icebp
loope
xchg
test
mov
pusha
and
jnp
xchg
add
jne
cwtl
inc
mov
icebp
pop
lds
rorb
sub
xor
add
mov
add
mov
or
loop
push
incl
xchg
arpl
std
into
xchg
stos
rorl
ja
xor
icebp
nop
imulb
lret
call
rcrl
pop
jbe
nop
out
mov
pop
xchg
jmp
inc
jns
add
fs
sbb
mov
mov
loope
call
int
shrl
shufps
push
testl
xor
ss
pop
arpl
and
xor
mov
sbb
cmp
add
ja
mov
and
lret
stos
mov
lock
fxam
daa
out
decl
cmc
mov
out
inc
leave
test
ror
xchg
mov
fcomps
int
and
xor
stos
xchg
push
jno
mov
nop
mov
std
es
cli
paddd
adc
orb
jmp
ffree
pop
pusha
xor
push
mov
lret
mov
dec
cwtl
insl
mov
xor
daa
movsl
rorb
jb
mov
dec
insl
adc
je
leave
icebp
inc
in
xor
popa
stos
inc
add
cli
addr16
jae
dec
xlat
or
shr
lea
mov
jle
lods
cmpsb
mov
arpl
das
sti
aas
stos
inc
push
push
dec
insl
sbb
add
cmp
mov
inc
lret
sub
loopne
mov
xchg
dec
test
icebp
lds
negl
adc
add
fwait
jge
dec
or
sbb
loopne
ljmp
pusha
jb
xchg
jbe
jo
sub
cmpl
movsb
cs
popf
ror
ds
in
xchg
mov
xor
push
pop
pop
mov
ss
and
xor
dec
jno
in
in
lods
adc
out
cmp
aad
sub
adc
push
dec
movl
cmc
add
push
sbb
mov
mov
jns
sub
js
je
mov
adc
inc
push
popa
jne
mov
xor
and
fsubs
sub
rol
ds
dec
push
add
out
or
cmp
pop
cs
mov
in
jno
scas
sbb
sub
mov
hlt
adc
mov
in
inc
lods
pop
and
push
push
or
push
xor
int
into
dec
fmuls
cmpsb
scas
lret
xlat
adcl
ret
xchg
xchg
pop
push
add
or
push
subl
xchg
push
inc
pop
in
sub
xor
cld
leave
cmpsl
jl
ljmp
dec
cmp
add
push
lcall
mov
push
aam
jae
lret
jb
iret
enter
imul
cmp
pop
addr16
jl
mov
mov
aas
or
in
rcl
fidivl
jnp
push
ja
filds
push
imul
call
rolb
xchg
movsl
cltd
leave
fcompl
or
data16
mov
jb
in
inc
xchg
jp
addr16
pop
lahf
sub
sbb
lret
in
cmpl
pusha
ret
xchg
pop
and
and
sub
mov
movsl
xchg
dec
daa
add
out
pop
call
and
iret
aas
movsl
movsl
cmp
shlb
adc
mov
sub
jnp
push
add
cmpsb
push
aaa
or
rcrb
jo
imul
int
push
int3
push
xor
inc
mov
test
xor
push
jbe
mov
or
stos
repnz
movsl
cmpsb
mov
sub
sbb
fsts
mov
inc
lds
mov
aas
gs
dec
pop
fsts
inc
push
scas
add
stos
pop
adc
mov
pop
fwait
inc
dec
sahf
cwtl
inc
psllq
fnstenv
push
pop
xor
adcl
aad
sbb
xchg
popf
adc
xor
jmp
xor
cli
mov
stos
sti
movq
lock
outsl
push
mov
jnp
fdivs
push
jno
xchg
sbb
stos
mov
dec
add
jb
out
inc
das
arpl
bound
aad
rol
mov
push
cmp
push
cmp
mov
enter
insb
inc
popf
and
call
sbb
lcall
add
jl
gs
fsubrs
inc
fidivrl
adc
shlb
cltd
lock
mov
fcoml
das
dec
dec
sub
mov
pop
scas
mov
orb
and
add
xchg
sbb
mov
repnz
mov
gs
cmp
jno
outsl
scas
jbe
xchg
adc
mov
icebp
lret
sbb
lret
jge
push
cmp
dec
loope
sti
mov
lods
adc
jno
mov
into
cs
loopne
pop
and
ficoms
dec
addr16
push
subb
aas
sub
pop
adc
pop
or
and
not
movsl
mov
pop
jbe
pushl
iret
sbbb
dec
lcall
sbb
sarl
dec
mov
insb
daa
inc
jo
push
lcall
dec
and
mov
xchg
dec
lods
fstl
xlat
add
sub
xor
rcrl
lret
pushf
cli
push
push
xchg
pop
ffreep
mov
icebp
add
movl
dec
hlt
pop
sbb
dec
push
aam
push
stos
fucom
enter
mov
js
mov
cmpsl
xlat
mov
xor
inc
xchg
incb
cmp
inc
jge
mulb
cmp
push
jle
push
push
mov
out
clc
ss
mov
sti
scas
mov
xchg
jp
mov
ret
test
lret
dec
lods
push
push
inc
mov
dec
fldenv
cmp
ret
mov
stos
fs
cltd
jb
mov
cmp
inc
lock
inc
mov
addr16
icebp
gs
mov
xor
mov
push
pushf
and
rclb
pop
jae
xchg
aas
push
inc
xor
mov
call
pushf
mov
cmp
lcall
out
mov
sbb
push
sub
pop
cmc
aaa
mov
dec
popa
and
adcl
push
add
cmp
xorl
lret
outsl
out
xor
mov
push
adc
push
jge
xchg
mov
push
inc
lahf
faddl
stos
cmp
sub
and
mov
mov
pop
pop
pop
inc
fisttpl
lahf
lahf
daa
dec
mov
sbb
pop
leave
icebp
movsb
fcoms
push
stc
and
stos
enter
es
lods
jmp
pop
add
outsl
push
push
push
ret
adc
mov
sbb
mov
sub
push
sub
mov
nop
xlat
mov
lahf
fs
fdivs
jne
rolb
xor
mov
enter
call
mov
push
ss
shlb
stos
lea
xchg
pop
jge
stos
xchg
and
mov
pop
into
mov
dec
sbb
adc
popf
std
mov
fldenv
mov
adc
nop
fidivrs
cld
pop
push
inc
cmp
sarl
dec
stc
int3
xor
pop
dec
lea
mov
dec
loope
push
jae
pop
dec
imul
pop
ja
mov
jge
xchg
ljmp
pop
std
mov
jns
ljmp
adc
shll
idivl
ljmp
push
mov
cmp
rorl
or
ss
movsl
mov
loop
adc
aas
push
stos
xchg
in
jp
push
cmp
cwtl
mov
mov
addb
ror
cs
addl
pop
dec
mov
push
mov
and
cmp
lods
out
add
cmp
mov
dec
rcll
push
rolb
inc
cmp
ret
addr16
pop
mov
enter
jle
movsb
shlb
sti
data16
lock
xchg
lock
data16
push
xor
lcall
pusha
pushf
orl
push
int
ror
ret
mov
push
adc
rclb
and
pusha
outsb
lods
repz
ss
mov
push
jge
mov
jne
and
dec
pop
jl
fcmovnbe
stos
arpl
xchg
js
xor
cmp
test
push
test
test
iret
fadds
int3
push
add
scas
add
into
and
xlat
lock
imul
jg
inc
ds
out
xor
and
scas
insb
cwtl
or
pop
ret
hlt
xchg
shlb
inc
jb
in
push
adc
mov
stos
sub
mov
sbb
int3
or
mov
pop
pop
or
rcrl
inc
mov
cmpsl
mov
sub
outsl
pushf
xlat
stc
add
mov
add
dec
mov
dec
adc
sbb
sbb
not
pop
jnp
mov
adc
sar
xchg
mov
in
fwait
sbb
sbb
mov
ret
or
adc
push
arpl
add
cmp
mov
lahf
int3
dec
pop
mov
cmpsl
in
fistl
adc
cmp
or
pushf
outsl
push
cld
and
xor
loopne
inc
wrmsr
test
pop
in
adc
xor
js
cs
mov
inc
in
cmp
rolb
mov
mov
stos
in
cli
call
test
jecxz
lock
jmp
pop
aaa
cwtl
ja
mov
out
ja
push
pushf
or
dec
cld
out
inc
or
inc
sahf
outsb
int3
add
shl
movl
popf
sub
loopne
adc
pop
mov
push
in
repz
in
mov
xor
cmp
sahf
scas
sbb
fisubrl
daa
enter
push
mov
dec
lret
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jp
mov
push
pop
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jp
mov
push
pop
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jp
mov
push
pop
mov
sub
jp
cmc
cli
in
sbb
mov
xchg
xorb
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
repnz
mul
mov
insl
ret
cmp
pop
cmp
push
addr16
ja
xchg
mov
xbegin
fldenv
pop
cmp
insb
das
fidivl
push
addr16
ja
and
shl
loope
shr
iret
lds
pop
xor
inc
insb
inc
inc
adc
xor
adc
mov
shl
enter
and
rorl
fcompl
test
cwtl
push
cmp
test
dec
das
rolb
pop
cmp
adc
loope
jmp
fcoms
or
mov
inc
cmpsb
sub
ficoml
shrb
out
xchg
mov
stos
loop
lahf
mov
xchg
mov
shr
out
daa
fdivrs
adcb
fadds
push
sub
or
inc
push
pop
in
dec
mov
es
movl
sub
mov
push
push
mov
sub
movl
das
push
sbb
mov
mov
loop
enter
xor
and
jo
pusha
mov
fildl
cld
fisttpl
mov
pop
inc
cmp
xorb
add
sub
sarl
pushf
xchg
xchg
test
cmp
jne
pop
or
add
shl
ja
lret
cwtl
fistl
out
imull
pop
cmp
or
sbb
push
addr16
ja
xchg
mov
xbegin
imull
pop
cmp
or
sbb
push
addr16
ja
xchg
rcr
lock
mov
aad
aas
push
addr16
loopne
jl
dec
and
leave
xchg
sub
adc
clc
cmp
fwait
cmp
cmp
pop
xchg
mov
mov
push
cld
call
jo
pop
sbb
lea
data16
roll
fdivrl
call
mov
dec
pop
imul
ja
ja
or
add
insl
loopne
ffree
dec
mov
pop
push
mov
xchg
ja
imul
rorl
scas
cs
sarl
pop
rcll
and
in
ficoml
or
es
pop
in
test
xor
xor
adc
test
mov
mov
popa
and
xchg
jmp
sub
cld
or
fildl
loop
jg
or
cmp
push
repnz
sub
ja,pt
das
push
sbb
fisttps
test
dec
push
inc
in
adcl
stos
arpl
daa
sahf
lret
and
and
cmp
std
inc
pop
jp
mov
neg
xorl
adc
andl
lods
repz
xor
outsl
leave
cmpsl
jg
dec
aam
and
dec
and
pop
dec
lock
sbb
fwait
or
jg
int
icebp
push
nop
jecxz
test
push
cmc
xchg
xchg
cmc
mov
mov
adc
cmpsb
hlt
xor
nop
mov
cltd
add
sbb
clc
inc
push
cmp
lods
loop
out
pusha
jp
mov
test
mov
fcmovb
es
sbb
inc
jo
jge
scas
xor
or
lods
cmp
push
xchg
sbb
test
xor
scas
xor
mov
nop
and
sti
es
adc
sbb
bound
xchg
popf
dec
pop
xchg
pop
mov
aaa
dec
inc
leave
push
push
popa
loop
xorl
xchg
enter
push
dec
cmp
or
pop
pushf
in
sti
inc
xlat
filds
insl
and
lret
mov
jae
test
xchg
sbb
cmovl
mov
shlb
mov
pop
repnz
push
push
arpl
sahf
into
dec
xchg
inc
ret
adc
js
xchg
ja
mov
jno
mov
fidivrl
cmc
mov
and
lods
pop
test
bound
shll
xchg
iret
ja
cmp
push
lcall
or
xlat
adcl
mov
mov
shlb
test
cmp
lods
mov
cmp
es
sbb
inc
in
rorl
repz
sahf
mov
pusha
sarl
ret
xor
mov
mov
and
out
inc
dec
or
mov
mov
or
jbe
std
into
loope
fcoms
in
call
pushf
adc
insb
inc
adc
jmp
push
sub
adc
arpl
sbb
sub
mov
repz
jecxz
cltd
xor
push
cmpb
push
insb
sar
inc
stos
and
stos
jge
lods
pop
cltd
sbb
push
repnz
pop
insl
or
mov
fwait
pusha
outsl
mov
insb
icebp
mov
and
cld
sub
xchg
jns
mov
xchg
into
mov
arpl
mov
jne
out
xchg
mov
mov
push
dec
cs
cmpsl
cmp
push
adc
stc
sub
fisttps
arpl
xchg
sti
stos
in
cmpsl
mov
xor
lock
mov
lgs
andb
jbe
popf
sub
outsl
shrl
sub
push
jge
xlat
pusha
aaa
std
mov
pop
inc
xchg
mov
sub
mov
mov
sbb
in
adc
icebp
cli
lea
cld
mov
push
mov
pop
int3
rcrb
cmp
adcl
aas
push
fmuls
dec
push
mov
push
sbb
bound
testl
jmp
out
ret
roll
gs
bound
cwtl
add
adc
test
sub
stos
outsb
push
into
and
jecxz
adc
xor
fs
repnz
sahf
mov
stc
mov
pop
std
test
adc
jecxz
push
sub
adc
mov
jg
out
lret
jmp
pop
test
push
clc
cmpsb
cmc
leave
jns
mov
push
sbbl
mov
lcall
xchg
sub
cmpsl
scas
inc
bnd
mov
adc
insl
mov
fiaddl
enter
pop
sub
inc
add
xor
popa
sub
mov
or
loop
aaa
inc
lea
dec
out
into
leave
mov
fs
cmp
mov
add
pop
add
xchg
push
loope,pn
sbb
cli
out
mov
inc
nop
daa
ret
in
test
cmpsb
mov
lods
dec
sub
xchg
push
jl
in
mov
inc
rcrl
push
jl
mov
iret
mov
push
sub
movsl
pushf
mov
sub
sub
push
nop
fistl
xor
cmp
jmp
dec
pop
xchg
push
cmp
xlat
xchg
pop
fs
aas
xchg
and
jmp
jp
test
sub
call
push
adc
into
into
mov
mov
inc
rcrl
test
enter
mov
lods
mul
pop
je
movsl
pop
dec
adc
scas
scas
push
pop
and
add
push
clc
aaa
mov
mov
cmpsl
sub
sub
dec
std
mov
xchg
xor
lods
pop
icebp
or
daa
dec
cs
pop
jae
popf
jns
jmp
stos
ss
movlps
hlt
cwtl
sub
ret
rolb
and
testb
leave
push
or
in
push
ds
add
fldt
dec
fsubrs
aaa
cmpb
ret
arpl
push
and
cmp
and
movsb
adc
in
add
sbb
ficompl
cmp
cmc
loopne
pop
pop
loopne
imul
mov
pushf
nop
mov
inc
dec
sbb
imul
in
fsubrl
add
repnz
leave
mov
xchg
add
sarb
and
add
jbe
stos
jecxz
rorl
test
int3
cwtl
add
lea
sbb
hlt
mov
jl
movsb
pop
or
inc
push
push
mov
pushl
pop
outsb
sar
push
pop
jo
je
into
add
dec
push
gs
mov
aaa
ret
fidivrs
cs
mov
or
cmpsb
and
mov
ja
xchg
movsb
int3
popa
push
div
or
jl
mov
push
push
imul
out
faddl
adc
and
cmc
les
int3
repnz
jae
leave
pop
jg
jno
mov
push
cmp
mov
fcomps
push
pop
xor
fimull
arpl
push
cmpsl
or
test
in
mov
sub
or
aam
stc
xchg
repnz
test
pop
arpl
addr16
dec
jp
cmp
enter
add
and
xor
cmpsb
enter
out
cmp
arpl
icebp
push
fsts
js
cmp
call
lods
dec
xor
push
repz
xor
loope
add
and
mov
ret
lock
arpl
and
jmp
mov
adc
lret
add
push
les
test
stos
subl
sbb
dec
sahf
mov
mov
rcll
xor
into
dec
lea
jmp
add
rolb
or
js
popf
and
sub
push
pop
daa
arpl
xchg
int3
adc
std
gs
xlat
add
sahf
fnsave
pop
push
cld
jmp
imulb
ficoms
xor
jmp
cvtps2pd
or
addr16
sub
in
mov
idivb
out
push
mov
pop
mov
arpl
fdivs
insl
mov
pop
fwait
mov
mov
pop
inc
jno
fcoml
jmp
xchg
pop
sti
gs
into
pop
mov
std
mov
ret
testl
insl
push
pop
add
insl
cwtl
xor
pop
es
iret
pop
fwait
adc
sbb
lahf
and
loopne
divps
pushf
and
ss
insl
inc
mov
decl
push
imul
xchg
std
popa
dec
jp
add
dec
movsb
mov
mov
jae
mov
cwtl
mov
jnp
aam
mov
clc
mov
push
int3
dec
mov
sub
or
ret
xchg
sub
or
or
fcoms
cmp
jne
inc
dec
iret
sbb
popf
bound
sub
and
test
dec
cmp
dec
testl
rol
and
sub
out
ret
push
inc
xor
andl
clc
ror
lock
lahf
push
cld
fcoms
jecxz
sub
or
inc
push
jl
mov
mov
jmp
popf
add
inc
mov
jl
repnz
cmp
bound
xchg
push
ret
push
pop
je
stos
enter
ss
stc
aam
inc
sub
pop
mov
outsl
dec
std
cmpl
cmpsl
xor
lds
rcl
loope
sub
dec
pusha
push
adc
pop
push
sbb
scas
push
mov
loopne
fisubl
cmp
dec
ja
and
adc
rorb
adc
fiaddl
pop
pushf
mov
dec
mov
mov
inc
or
jl
pop
add
out
sub
push
hlt
pop
fimuls
test
out
adc
in
mov
adcl
cmc
push
sub
sbb
aas
das
out
mov
loope
fidivl
arpl
adc
push
aas
pop
mov
mov
ja
arpl
inc
sub
jne
popa
xchg
out
adc
popf
inc
clc
sti
mov
cld
bound
mov
xchg
test
jae
cmp
mov
adc
sbb
cmpb
inc
or
je
jge
fbld
pop
inc
sub
popf
mov
out
xor
and
xor
mov
out
ja
ret
aas
mov
cld
sbb
gs
loopne
xor
lods
xchg
mov
repz
inc
shll
mov
mov
xchg
push
inc
outsl
dec
jne
adc
jge
xchg
lock
inc
xchg
mov
xchg
jae
enter
insb
mov
inc
jp
shrl
insb
dec
push
push
pusha
or
inc
sbb
aas
mov
push
inc
pop
and
mov
inc
mov
mov
xchg
lds
call
lret
imul
push
mov
jae
mov
push
mov
mov
jb
pop
pushf
sub
sub
rolb
adc
xor
add
or
into
outsb
lret
push
idiv
in
sarl
cmp
jo
call
mov
xchg
or
mov
imul
pop
outsb
or
inc
add
or
sub
je
mov
mov
sub
dec
mov
cwtl
pop
mov
sbb
mov
or
jle
mov
jmp
or
sbb
inc
mov
xor
aam
add
lret
and
pop
or
sarl
or
pop
aas
xchg
push
mov
push
sbb
aaa
mov
adc
enter
or
xchg
pop
mov
push
fiaddl
ret
hlt
imul
xchg
xchg
push
push
fs
mov
pop
rolb
into
mov
pop
sub
xchg
ljmp
xchg
in
loopne
dec
daa
into
out
mov
pop
xor
mov
xor
mov
mov
test
pop
mov
pop
dec
aad
nop
mov
mov
and
sbb
pusha
xlat
dec
cmpsb
out
xchg
cs
inc
pop
in
imul
shr
xor
inc
lcall
fwait
xchg
insb
sbb
xor
jmp
inc
icebp
add
adc
rcr
cmp
add
lret
fsts
mov
push
push
repz
fisubrs
pop
adc
pop
sarb
cmpsl
fnstenv
fs
test
xor
xchg
xor
ljmp
sub
sbb
add
es
or
dec
aas
mov
add
rcl
adc
and
shll
aam
mov
cmp
pusha
lret
andl
adc
aaa
or
sti
mov
data16
cld
pop
cmc
hlt
mov
jns
push
adc
test
stc
leave
mov
arpl
in
fucomi
add
in
test
orl
sti
mov
push
jle
cmp
rcll
imul
jg
in
sub
push
cwtl
sub
aaa
lods
dec
push
sub
jp
lock
push
gs
sbb
jbe
dec
mov
dec
xor
pop
and
orl
push
cmp
push
pop
shl
popa
mov
push
mov
add
arpl
dec
ret
push
adcb
in
push
mov
stc
inc
test
test
stos
dec
mov
ret
jg
imulb
sub
insl
lret
jb
into
add
nop
in
aaa
push
lahf
gs
int
xor
pop
ja
leave
cmpsl
xor
xlat
out
sahf
ret
dec
xchg
push
sub
cmp
cltd
out
aaa
enter
adc
push
add
mov
into
cmp
sarb
dec
push
mov
inc
push
insl
mov
mov
add
adc
push
in
sahf
mov
lahf
fldenv
sbb
push
xchg
mov
dec
cwtl
out
inc
divl
cmp
cwtl
jo
mov
or
push
mov
sbb
cmp
adc
jae
jbe
sbb
daa
dec
xor
lods
stos
xchg
push
ja
sbb
pop
fimuls
dec
adc
lea
and
cmp
insl
enter
call
das
fwait
movsb
fs
mov
rcrl
adc
std
clc
add
xor
insl
push
add
cmp
cmp
repz
pop
imul
sbb
adc
inc
mov
push
or
fists
mov
mov
mov
dec
repz
cmp
das
and
xor
shrb
mov
mov
hlt
mov
movsl
notl
bound
sbbb
mov
std
and
push
imul
or
fnstcw
bound
lret
lock
dec
push
mov
cmp
cmpl
fwait
das
outsl
and
fcmovnu
fst
into
ss
stc
and
adc
lahf
aaa
clc
and
int
adc
xchg
xor
sbb
in
mov
mov
cmp
fs
cmpsb
fcomip
sbb
xor
mov
xor
pop
imul
adc
and
mov
insb
mov
cmc
aad
imul
push
lret
adc
jle
xor
rcl
push
jge
sarb
sub
lods
add
scas
inc
in
xor
xor
ljmp
xchg
pusha
arpl
nop
push
and
imul
out
jbe
push
shll
mov
fiadds
in
adc
fwait
lcall
ljmp
and
lcall
loope
jmp
adc
cmp
ret
cmpl
sbb
xchg
movsl
mov
mov
cmp
push
dec
pop
inc
popf
push
call
daa
dec
push
cmp
add
add
adc
adc
mov
enter
rorl
jo
inc
dec
and
sub
scas
or
cmp
insb
cmp
out
enter
push
and
mov
addr16
and
lret
inc
cmp
mov
and
int3
xor
in
loopne
lods
cmp
sub
xchg
movsb
or
shll
lahf
cmp
jmp
insl
repz
sbb
cs
ret
iret
mov
jmp
jmp
sub
ds
rep
es
faddl
int3
sub
adc
in
jns
inc
add
sbb
je
mov
or
xchg
dec
xor
add
popf
jmp
mov
lahf
jns
lahf
xor
xchg
lock
movsl
adc
stos
lahf
loopne
mov
mov
jbe
dec
jb
push
push
push
out
mov
scas
or
aas
pop
adc
mov
mov
shlb
mov
cld
js
pop
xor
and
xchg
cli
push
sub
subps
or
imul
dec
mov
pop
shrl
xor
pusha
lcall
mov
faddl
scas
pop
inc
repnz
xchg
loopne
lods
push
xchg
cmp
jmp
stos
and
jp
pop
sahf
enter
dec
dec
xor
lea
in
mov
push
adc
stc
adc
jbe
and
push
add
dec
adc
fists
add
fmul
testb
fsubrl
cmp
adcb
lahf
lahf
sub
imul
aaa
xchg
and
ffreep
jp
je
aad
xor
xchg
sar
movsl
sarb
mov
leave
stc
adc
in
xlat
loopne
cmp
scas
fidivrs
lcall
cmpsb
mov
es
pop
mov
jnp
xchg
nop
push
mov
jbe
sub
out
mov
out
and
sbb
adc
push
and
popf
mov
popf
mov
idivl
ja
sbb
hlt
lahf
mov
inc
dec
cmp
fcmovbe
adc
outsb
nop
cwtl
dec
ds
stos
add
cmp
sub
notl
lret
iret
mov
mov
push
or
push
leave
jecxz
push
into
movsl
cmp
mov
aam
loop
outsl
and
sbb
jno
scas
mov
sub
mov
sbb
mov
jl
repnz
add
xchg
imul
movsb
jne
int
mov
mov
out
jmp
pop
sbb
lcall
shlb
call
push
jl
movsb
jle
aam
push
xchg
cmp
pop
loope
jnp
shl
outsl
jg
pushf
fcompl
cmp
test
sbb
cmp
cmpsl
mov
pop
lret
sub
add
mov
repnz
cmp
push
rcl
lret
jecxz
test
arpl
or
ss
call
mov
testb
sub
adc
loop
movsl
imul
in
popf
fisttpl
and
imul
ss
js
inc
lods
adc
js
cmp
mov
icebp
sub
cmc
mov
xchg
andb
int
inc
dec
jo
imul
inc
pop
push
mov
ljmp
hlt
inc
add
and
pop
jns
test
outsl
xchg
sub
fbld
mov
outsl
pop
std
movsb
shl
dec
lods
push
ret
mov
adc
sbb
push
addl
pushf
adc
fwait
dec
and
bound
das
mov
mov
push
aam
mov
out
or
fcomp
push
push
pop
pusha
lahf
xor
adc
out
push
sub
mov
mov
cmp
fidivrs
mov
inc
cmp
std
es
adc
ret
int
mov
or
lret
cvtdq2ps
pop
mov
sarl
pop
leave
or
xchg
sbb
and
jns
mov
pop
addr16
icebp
xchg
mov
mov
xchg
test
pop
adc
pop
scas
fidivrl
pop
cs
hlt
mov
hlt
movsl
fsubrp
inc
jp
jno
rcrl
and
repz
sahf
jns
mov
mov
out
lds
je
xchg
or
pop
push
jp
rorl
out
int3
dec
pop
or
test
lahf
dec
fcmovne
loope
test
dec
jg
jnp
or
das
movl
loopne
popa
repnz
xor
outsl
test
mov
and
jp
imull
add
push
mov
xor
push
outsl
mov
test
push
insb
ja
xor
cmp
lahf
add
and
addr16
ret
rolb
and
mov
xchg
fimull
mov
jnp
push
int
push
in
data16
jl
xchg
cmp
mov
mov
aaa
fisubrl
xchg
adcb
or
out
fs
jns
and
xchg
and
jno
pop
dec
fldt
pop
lods
sbb
in
inc
bound
dec
adc
iret
adc
mov
dec
shr
adc
filds
add
sarl
cmpsb
sbb
dec
lea
xchg
into
cltd
pop
or
out
rorb
push
sbbl
pop
mov
mov
push
adc
mov
and
mov
cmpsl
enter
xor
sarb
pop
sbb
pop
insb
xchg
lret
add
addr16
inc
mov
stc
pop
imul
add
out
xor
sub
lret
rcr
or
lcall
mov
std
and
adc
cmp
add
adc
mov
sub
pop
sbb
and
add
xor
and
xlat
out
arpl
std
pop
stos
out
popf
loope
cwtl
cmp
not
movsl
sub
adc
aas
ret
cli
jae
out
insb
sbb
mov
pop
add
sub
test
sbb
xchg
in
mov
clc
xlat
enter
sub
cmp
or
sbb
push
addr16
ja
xchg
mov
xbegin
imull
pop
cmp
or
sbb
push
addr16
ja
cmpl
call
jecxz
imull
push
cmp
or
sbb
push
outsb
imul
call
addr16
aaa
xlat
clc
mov
pop
aas
lock
mov
cmpsl
cmpxchg
xor
add
adc
xor
push
xor
xchg
jo
pusha
mov
les
mov
mov
adc
fs
rolb
xor
xchg
jo
pusha
hlt
push
les
mov
mov
adc
fs
rolb
xor
cs
sbb
cs
and
inc
jecxz
repnz
mov
loopne
pop
inc
cmp
fadds
sub
dec
add
gs
fs
dec
ss
sbb
aam
test
jg
les
loop
repz
xor
ljmp
fs
dec
out
subl
xor
add
gs
test
xor
imul
inc
cmc
dec
mov
mov
mov
mov
fdivl
std
sub
mov
lds
dec
mov
pusha
popa
or
dec
shll
dec
movsl
call
sbb
push
shrl
aam
and
xor
add
adc
fs
rolb
xor
xchg
jo
pusha
hlt
push
les
testb
cmc
inc
in
pushf
or
and
enter
ljmp
adc
adc
mov
sarb
add
inc
mov
mov
sub
push
push
loope
fcoms
inc
clc
adc
mov
mov
stc
jo
pusha
lock
je
inc
rclb
mov
test
xchg
jo
pusha
hlt
push
les
mov
mov
adc
fs
rolb
xor
xchg
jo
pusha
hlt
push
les
mov
add
lds
mov
aam
popa
mov
imul
fpatan
sbb
pop
lods
mov
daa
stc
ret
adc
iret
mov
fs
jbe
das
xchg
sahf
cmp
fwait
shlb
das
jne
xor
jle
outsl
mov
rorb
push
stos
xchg
xorb
in
adc
out
jg
pop
in
aad
dec
sarl
ror
pusha
pop
divl
cli
out
fwait
pop
jge
gs
test
pusha
fidivl
adc
jno
shlb
jae
popa
outsb
jb
mov
xchg
xor
or
cld
es
sbb
mov
cmp
cmc
icebp
push
shrw
pushf
mov
cmp
pop
lcall
dec
push
shr
movsb
stc
sbb
imul
repnz
adc
jg
push
inc
mov
pop
mov
cmp
and
scas
cmc
sub
into
jns
cmp
mov
les
mov
cmpsb
in
pop
bound
mov
mov
sub
push
cmp
mov
jl
outsl
pop
cmc
add
xlat
inc
insl
int
aad
call
cltd
stc
cmp
xor
adc
ret
fistl
pop
adc
push
rcl
fadd
push
icebp
or
fdivs
imul
dec
jmp
rcr
outsl
sub
xor
mov
mov
stos
sub
sbb
sub
jmp
sbb
lcall
and
insb
mov
bound
mov
mov
lret
loopne
and
and
imul
sbb
and
fbstp
and
imul
jae
push
or
insb
insl
js
mov
jne
cmp
and
loopne
sbb
mov
adc
fildll
jecxz
popa
adc
mov
sub
mulb
pop
addr16
cmp
lret
test
inc
or
add
dec
cmp
xchg
in
pop
push
adc
sub
mov
es
xor
sub
xchg
loop
gs
aad
jg
jge
inc
sub
xchg
rcl
imul
dec
inc
in
fucom
cmp
ds
mov
jnp
sub
inc
test
out
scas
xchg
ret
mov
lds
out
icebp
outsl
push
lcall
and
xlat
enter
sub
cmp
sbb
push
push
sub
inc
and
jge
sbb
adc
mov
xlat
add
xchg
inc
ror
add
xor
std
lcall
ud1
icebp
decb
lahf
fisubrs
fwait
jl
cltd
mov
jecxz
std
mull
stos
test
cmc
loopne
and
mov
push
cmp
dec
sbb
fmull
gs
cmp
int
adc
or
pop
outsb
xchg
rcrb
fidivrl
push
xor
sub
pop
and
int
mov
loope
out
enter
and
cwtl
pop
or
push
push
xchg
std
mov
test
ret
adc
jnp
arpl
sub
into
or
lcall
fcoml
mov
pop
lahf
outsb
cmpsb
push
in
gs
sahf
jo
xor
stc
mov
or
sbb
lcall
xor
cmp
or
mov
mov
int3
xchg
sahf
inc
and
cld
mov
mov
inc
pop
js
lret
jne
sbb
dec
out
xor
xchg
inc
sub
out
outsb
jle
push
or
inc
jns
ss
xor
mov
js
jnp
jl
cli
scas
insb
movsb
adc
inc
jmp
push
dec
popa
loop
push
test
lahf
sbb
insl
jnp
adcb
mov
dec
xor
ret
jmp
sub
imul
addb
hlt
mov
mov
lods
dec
and
jecxz
in
orb
sbb
mov
pop
popf
push
dec
xor
pop
push
andb
lds
cs
std
test
dec
in
sahf
or
xor
pop
jl
adc
push
xor
hlt
sub
cli
push
mov
lret
cmp
mov
test
sbb
hlt
dec
jl
add
mov
or
loope
pushf
pop
sbb
in
jb
mov
xor
int
mull
dec
stc
fldl
stos
hlt
flds
inc
adc
mov
pop
popf
sbb
mov
jae
dec
add
mov
xchg
jae
addr16
adc
add
mov
sbb
mov
imul
and
addr16
sbb
incl
cld
insl
pop
inc
sub
fldl
cmp
scas
or
add
or
test
das
mov
xchg
cwtl
push
pop
xor
mov
cmp
push
jmp
ffreep
imul
lcall
dec
in
shl
repz
pop
cmc
cmpsl
bound
dec
fldt
pop
lret
sbb
push
mov
add
scas
push
mov
sti
push
pop
mov
les
mov
pop
sti
testb
in
mov
xor
rclb
inc
jle
xor
mov
sbb
xor
add
nop
test
xchg
rcrl
adc
movsl
push
adc
pop
add
rclb
push
fnstsw
sahf
mov
pop
bound
mov
ret
into
dec
or
fadd
dec
mov
mov
das
ljmp
shll
sbb
mov
ret
aaa
roll
out
arpl
inc
adc
jns
adc
sub
in
jo
xor
add
shll
mov
and
ret
rclb
adc
stc
inc
or
dec
decl
cltd
gs
and
adc
mov
pop
ja
mov
add
sbb
test
inc
testb
ljmp
fwait
inc
push
inc
pop
and
aam
dec
bound
push
xchg
in
or
push
push
into
xchg
jno
dec
mov
push
or
mov
push
sub
pop
aas
popa
aaa
lock
addr16
jge
add
movb
add
int3
push
popa
sub
mov
pop
stos
dec
ds
ds
mov
imul
sub
out
or
roll
add
aaa
sub
dec
pop
sbb
cmp
push
mov
pop
cmc
lods
mov
push
mov
or
dec
mov
push
icebp
sbb
cli
or
adc
mov
out
cmpsb
pop
xchg
test
fistpll
inc
sbb
fisttpll
mov
dec
jnp
cmp
mov
xchg
xor
cmp
push
fiadds
lods
mov
push
iret
nop
jae
roll
push
sbb
dec
xchg
in
add
cld
jo
shrl
jmp
insb
inc
sub
and
mov
sbb
mov
jp
in
or
xor
cmp
sub
and
mov
mov
jmp
pusha
mov
mov
cmp
popf
push
nop
mov
inc
adc
add
dec
test
adc
jp
lock
loop
addr16
aam
and
and
das
int3
push
pop
mov
repnz
cmp
fisttpl
loope
push
shlb
popf
mov
mov
jecxz
mov
fisttpl
mov
cld
cmp
shlb
movsb
and
xchg
cs
pop
daa
ljmp
push
mov
xchg
inc
jo
add
dec
int
pop
push
sub
or
aaa
cmp
inc
xchg
mov
int3
leave
mov
rolb
and
add
orl
test
stc
add
stc
sub
jb
rol
ljmp
adc
andl
push
hlt
jmp
int
outsb
xor
mov
and
mov
push
mov
cmp
inc
loopne
and
mov
repnz
adc
in
stos
lods
sbb
jb
jne
addl
nop
mov
xchg
loop
cmc
pop
fidivs
dec
add
push
les
lds
sbb
sbb
or
bound
in
adc
add
or
adc
push
aas
xor
cld
leave
imull
out
ds
pusha
or
sbb
out
test
sbb
mov
lds
xorb
addr16
fwait
push
xor
fmul
pop
fistps
out
popf
jp
mov
in
mov
insl
mov
pop
xor
popl
jb
inc
jbe
and
mov
hlt
loope
mov
and
sbb
cmp
xchg
adc
mov
out
sbb
rolb
fcomps
inc
adc
jp
cltd
cld
cltd
mov
into
pop
nop
lock
xchg
aam
clc
js
sti
mov
mov
push
push
pop
jmp
sub
and
or
jmp
ret
cwtl
decl
outsb
in
rcr
and
sbb
or
adc
pop
lods
mov
fucomip
int3
push
jg
push
popa
lret
xchg
jecxz
dec
popa
mov
rcrb
pop
ret
mov
into
fs
pop
mov
jae
jno
mov
lcall
scas
mov
mov
int
or
je
test
push
push
inc
pushl
stc
jo
or
dec
das
pop
push
jbe
gs
xor
pusha
repnz
stos
insb
lret
pop
dec
test
push
stos
mov
xor
dec
xor
cmpsl
inc
movsb
mov
imul
cltd
mov
sub
outsl
aad
lods
mov
pop
mov
sbb
dec
data16
sbb
gs
test
inc
add
cmpsl
pop
dec
add
jo
js
vucomiss
add
xchg
cmpb
and
push
push
out
mov
xor
add
mov
push
push
aas
imul
mov
dec
je
xrelease
cwtl
xchg
dec
lods
movsl
imul
and
shll
cmp
jle
loope
ds
insb
test
sub
add
icebp
out
mov
sub
mov
pushf
dec
jb
jnp
cltd
or
sti
mov
nop
dec
sub
ljmp
xchg
nop
dec
stos
or
push
fcoml
shll
cmp
add
ds
xchg
mov
adc
xor
popf
mov
and
sub
xchg
xchg
adc
loop
dec
mov
js
mov
mov
js
lret
aas
inc
inc
mov
pop
mov
add
push
popa
dec
outsb
inc
mov
cmp
enter
sub
and
popl
mov
ret
or
mov
xlat
sbb
fdivs
imul
into
loop
or
ja
adc
push
lock
inc
mov
sub
lods
in
mov
out
jmp
mov
pop
dec
jge
pusha
test
pop
add
inc
sub
push
cmpl
test
add
out
xor
xchg
mov
add
inc
mov
push
xchg
xor
test
xchg
inc
nop
addr16
repnz
inc
js
jnp
sub
xor
lea
cmpsb
add
dec
insb
jno
dec
inc
mov
push
ret
jmp
cmp
pop
pop
mov
inc
mov
je
push
fidivrl
pushf
mov
shlb
fcmovnb
es
push
add
addb
rcrb
es
dec
adc
js
mov
insl
add
cmp
jno
xchg
into
aad
sub
test
lds
xchg
outsb
sahf
pop
les
std
fs
cmp
outsl
das
fmuls
fcoms
lahf
add
pop
sub
sub
jo
or
push
test
iret
loopne
jns
rolb
in
movsl
cli
sarl
fdivl
lret
rcr
je
xor
mov
push
loope
inc
jle
lahf
xchg
pop
std
ret
adc
ss
sub
xlat
fisttpl
pusha
cmp
pop
mov
lret
arpl
stos
sbb
stc
stos
mov
enter
mov
xor
leave
mov
pop
cwtl
and
arpl
and
xchg
shl
fstps
pop
jo
sub
cmc
loope
sbb
add
ljmp
outsl
dec
jno
loopne
in
sub
ret
mov
std
xchg
aaa
mov
cmpsb
jb
outsb
or
adc
jnp
cltd
push
inc
cmpsl
icebp
pop
es
scas
aaa
cmp
inc
nop
fs
cmp
sahf
orl
push
mull
sub
sti
ja
into
add
dec
cmpsb
sbb
mov
stc
mov
mov
das
insl
adc
mov
jne
mov
push
mov
test
push
jae
movsl
and
lcall
xor
push
cmp
movsb
lret
repnz
jecxz
xor
sbb
mov
xchg
and
inc
mov
leave
mov
shlb
jl
gs
enter
jmp
inc
cmp
mov
jb
sub
and
ret
xchg
lods
or
push
mov
stc
call
inc
jb
and
xor
push
add
sbb
xor
das
fdivs
cmp
fcmovu
fidivrl
out
mov
push
sahf
inc
xchg
or
sub
or
jecxz
out
or
out
or
movsl
ficompl
loop
xorl
mov
syscall
cmc
fstps
sbbl
jnp
xor
loope
lods
cmp
pop
cs
pop
xchg
inc
mov
mov
lods
push
in
movsb
fcomps
jl
pushf
mov
push
xlat
fcoms
pop
test
mov
xchg
inc
cmp
nop
outsl
pop
mov
dec
pop
lahf
mul
sub
sti
add
xchg
insl
aaa
xor
inc
rcll
pop
ficoml
mov
aam
insb
test
ret
or
xchg
pop
cltd
pop
add
cwtl
xchg
fldenv
jo
ja
mov
inc
pop
nop
sbb
stc
or
push
sarl
dec
pusha
jae
je
or
jg
test
push
add
mov
sbb
test
fistl
xor
outsl
xlat
push
inc
sub
dec
xor
jns
xchg
pusha
and
xchg
adc
sbb
xor
push
das
dec
scas
pop
rorb
add
popf
cmp
les
lock
mov
pop
pop
aas
xor
stos
lods
push
ret
addr16
fists
mov
lea
into
std
test
hlt
es
out
cli
sarl
xchg
lock
push
mov
push
pop
push
gs
movsl
in
in
stc
mov
and
or
xorb
clc
test
test
pushf
lret
popa
pop
inc
movsb
repz
dec
test
stos
xchg
ds
rol
lods
sbb
xlat
lods
jne
dec
jb
pop
mov
mov
not
mov
dec
lea
mov
repz
xchg
sbb
mov
or
je
bswap
pop
xchg
add
fstpl
sub
std
xor
jmp
add
es
loop
cmpsl
imul
cmp
incl
loope
sub
or
pushf
jbe
stos
sub
adc
jnp
sub
mov
or
mov
xchg
iret
mov
ret
inc
bound
arpl
sub
push
repz
sahf
es
ds
popa
xchg
xchg
xchg
pop
mov
xchg
cmpl
sbb
jns
push
imul
inc
jnp
movsl
sbb
fildl
cltd
xor
ja
and
pop
hlt
jecxz
inc
hlt
mov
mov
sbb
cmp
lock
fwait
ja
sub
xor
icebp
arpl
pushf
xor
shlb
mov
pop
enter
sti
out
ss
cmp
add
pop
mov
insl
into
push
jae
xor
inc
dec
sbb
jne
xor
test
add
ds
rol
adc
adc
pop
aaa
dec
push
jge
sar
bound
mov
sub
cmpsl
dec
bnd
add
mov
arpl
mov
leave
rcrb
lds
pusha
xchg
cmp
call
loopne
cmp
mov
jnp
adc
sub
jno
scas
les
and
scas
movl
xor
mov
pop
sbb
inc
push
adc
pop
adc
incb
lods
lret
scas
lea
movsl
inc
sub
cmpsl
push
jb
sbb
xchg
jne
stos
test
popf
and
push
decb
sub
mov
les
xchg
add
pop
xor
mov
jns
xchg
xchg
aaa
add
and
out
rcrb
iret
dec
xor
pusha
push
mov
push
pop
mov
insb
clc
repnz
xorl
adc
fists
xor
or
decl
idivb
xchg
xor
ds
fsubl
push
dec
inc
xorb
stos
xor
aaa
imul
les
jb
popa
stos
ret
mov
add
cmp
dec
jae
dec
mov
mov
into
ss
or
jg
hlt
rcll
dec
jno
decl
or
cli
outsb
mov
jae,pt
mov
shlb
push
fimull
add
lcall
bound
sbb
inc
loop
add
gs
or
adc
push
loopne
aam
push
ja
sub
inc
fnstenv
xchg
leave
push
mov
outsb
jnp
sbb
lcall
mov
lea
fdivs
shrl
leave
inc
jge
mov
pushf
xchg
sti
sbb
pop
jno
int3
lcall
bound
pop
sbb
inc
cs
sti
pop
cmp
adc
ss
test
or
cmpsl
in
cs
das
cmpsl
lea
cmpsb
fstps
bound
les
push
xor
push
hlt
scas
adc
xchg
iret
fisttpl
jp
xlat
mov
cld
inc
sub
push
adc
lds
jbe
cmp
push
es
scas
fidivl
mov
pop
vcvtss2si
xchg
movsl
cmp
pop
ret
sbb
xchg
push
dec
outsb
mov
and
xor
ror
push
lret
mov
jp
xor
mov
or
jne
push
loopne
pop
sti
mov
cltd
sbb
daa
andb
push
sub
std
fisttpl
outsb
call
rclb
stos
mov
jo
loopne
jbe
fcmovu
dec
outsl
or
cmp
inc
lods
add
roll
mov
leave
cmp
cmp
out
cwtl
loop
mov
dec
fisubs
sahf
fdivr
mov
add
int
scas
dec
mov
rol
adc
flds
mov
shlb
sti
fdivr
push
pop
mov
pop
stc
jns
and
cmpsl
lahf
cmp
cmp
push
sti
clc
pop
mov
mov
push
outsb
cmp
sub
jbe
andb
ljmp
adc
scas
xchg
dec
cmp
stos
cmp
cwtl
dec
rolb
mov
ret
cmp
fists
or
outsb
dec
adc
and
add
push
adc
jb
ds
rorl
pop
add
jns
scas
addps
dec
pushf
arpl
jmp
or
stos
add
cs
xchg
ljmp
dec
and
cwtl
adc
das
sbbl
movl
cmp
inc
or
outsb
lock
xor
dec
pop
jle
xchg
xchg
aaa
movsb
bswap
popa
xchg
rol
jmp
push
loopne
push
aam
ljmp
imul
mov
outsb
out
add
repnz
or
flds
fisubrs
bound
sahf
xlat
aad
fcmovnbe
adc
test
shlb
rcll
lods
ds
cmpsl
cli
push
rol
pusha
fsubs
push
adc
ret
cld
inc
or
std
pop
jae
sub
adc
push
cmp
mov
ret
sbb
leave
addr16
xor
out
pop
inc
ja
adc
inc
dec
sbb
jg
les
sub
xor
xchg
lea
aam
cli
lock
adc
xchg
dec
jo
jle
xor
push
lds
cltd
imul
pop
daa
into
push
cmp
test
sbb
cmc
xor
push
mov
repz
push
mov
mov
xchg
jb
popl
mov
and
addb
adc
iret
das
cmpsl
mov
loopne
mov
out
push
mov
add
pop
out
repz
pop
sub
gs
sub
in
les
adcb
lods
dec
sub
push
xchg
xlat
rcrl
outsb
add
incb
mov
ret
fsubs
mov
push
out
fwait
in
mov
and
in
mov
add
in
sbb
pop
pushf
pop
data16
inc
sub
mov
data16
jo
xchg
fwait
sbb
bound
mov
sbb
jb
dec
add
test
xchg
adc
js
xor
add
test
jmp
inc
lods
mov
enter
js
pop
adc
cmpsl
mov
pop
push
scas
mov
ret
xchg
std
adc
inc
hlt
shlb
mov
add
addb
and
push
add
loopne
rolb
xor
xchg
jo
pusha
hlt
push
les
mov
mov
adc
fs
rolb
xor
xchg
jo
pusha
hlt
push
les
mov
mov
adc
rolb
push
xor
xchg
jo
pusha
hlt
push
les
mov
mov
adc
fs
rol
shrb
test
jecxz
insb
call
sub
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
pushf
add
xor
xor
mov
or
jl
outsb
rcrb
mov
add
faddl
mov
mov
or
adc
insb
rcrb
dec
xor
and
shlb
xor
mov
mov
jg
sub
dec
inc
mov
push
fsincos
lret
inc
stos
shlb
aas
mov
dec
cld
xorb
dec
adc
lods
mov
jno
outsl
adc
pushf
xor
jl
je
sbb
jge
scas
fcomps
shll
popa
mov
fstpt
inc
mov
lock
dec
pop
and
test
and
cld
dec
test
ret
data16
sub
adc
xchg
shlb
inc
iret
adc
test
fsubrs
cmp
fildl
insl
push
dec
aas
mov
jl
adc
mov
xchg
dec
cmp
inc
in
or
xchg
rcrl
outsl
mov
add
push
push
inc
dec
mov
mov
inc
lock
loopne
rcrb
inc
out
lods
jl
dec
mov
pop
mov
test
ljmp
test
lods
sbb
stc
arpl
fs
dec
test
push
mov
mov
call
sub
and
ljmp
xor
inc
int3
mov
mov
or
jl
insb
rcrb
xor
mov
pusha
in
push
faddl
mov
mov
or
jl
insb
rcrb
xor
mov
mov
scas
mov
sbb
shl
and
iret
inc
xchg
xchg
or
loop
sbb
or
and
cld
jnp
lcall
outsl
mov
mov
pop
cwtl
pop
ja
lahf
movsl
sbb
mov
rcrb
mov
inc
std
fsubr
cmpsb
xor
and
sbb
cmp
mov
and
push
jecxz
push
add
dec
dec
lods
cmpsb
and
lahf
outsb
mov
sti
es
add
stos
dec
pop
push
iret
nop
dec
dec
icebp
mov
adc
lahf
adc
fnstsw
mov
ljmp
inc
add
or
daa
add
cmpsb
fisubrl
xchg
mov
push
movsl
dec
adc
and
sbb
or
clc
lcall
jno
gs
mov
mov
jns
arpl
insb
jmp
jp
out
pop
mov
daa
icebp
pop
adc
dec
mov
pop
push
hlt
std
fildl
cli
dec
dec
jge
fistpl
mov
pop
sbb
into
push
xor
stos
pop
sub
fsts
add
clc
popa
mov
jno
pop
fwait
cmp
frstor
or
jne
fs
imul
jae
push
int
fcoml
idivl
orl
xchg
and
mov
out
mov
xor
push
jp
dec
dec
addr16
jnp
iret
push
pop
or
pop
or
fcmovbe
push
push
add
xor
icebp
shlb
outsl
stos
sub
nop
dec
ljmp
mov
adc
xchg
mov
je
fsubr
jns
jmp
mov
scas
jne
pop
push
aam
mov
add
outsl
pop
push
mov
leave
and
ret
aaa
mov
aam
nop
mov
xlat
movsl
pop
aad
repnz
mov
or
out
mov
cmc
dec
int3
repnz
or
movsb
xor
sbb
shrl
popa
imul
xor
xchg
xchg
enter
out
dec
cmc
inc
sub
mov
push
je
or
shlb
clc
rclb
and
sahf
inc
mov
inc
xor
jnp
insl
push
mov
inc
adc
fidivl
lahf
shlb
shlb
inc
sub
adc
fiadds
testl
xchg
iret
mov
shlb
es
xchg
mov
in
xchg
inc
add
xchg
inc
push
dec
pop
ja
adc
fstpl
into
jae
sbb
push
dec
inc
xchg
mov
push
cmc
inc
inc
pop
sbb
ljmp
movsb
arpl
mov
jae
jge
lds
jne
pop
mov
dec
repnz
idivl
ds
push
nop
test
int3
cmp
and
inc
jo
into
or
test
test
dec
in
push
dec
jle
int3
and
or
imul
in
push
push
inc
push
inc
fwait
aaa
mov
fxch
or
sbb
jns
lods
outsl
incb
fisubs
adcl
cmp
sub
cwtl
jb
jge
shll
fwait
ljmp
iret
je
pop
stc
sub
rcll
cli
mov
iret
in
daa
and
add
outsb
arpl
das
ds
adc
out
inc
shrb
stos
clc
inc
sub
pushw
dec
push
adc
in
loope
lret
mov
xchg
ret
shll
ret
cmp
mov
xor
mov
scas
mov
jl
jmp
ljmp
fwait
or
xor
sbb
mov
rcrl
fisubrs
repz
pop
test
xchg
push
test
add
and
fnsetpm(287
insl
jp
sbb
aas
push
dec
inc
dec
es
sbb
adc
jl
xchg
repz
icebp
in
js
enter
push
mov
cmp
enter
pop
popf
in
dec
dec
xor
mov
sahf
aam
cli
sub
lods
jp
add
pop
inc
push
sbb
divb
inc
cmp
fstpl
push
rorl
cmp
jg
push
icebp
dec
stc
out
js
jg
mov
test
mov
frstor
mov
inc
pop
cmp
popa
in
sbb
inc
jnp
mov
sbb
mov
faddl
and
push
xchg
mov
sub
jecxz
adc
jge,pt
ljmp
adc
test
sbb
jl,pn
testb
lahf
scas
inc
sbb
aad
jb
insl
fisttpl
xor
movb
fldl
in
mov
insl
cmpsb
imul
les
xor
out
inc
aaa
loop
and
push
mov
xor
loope
subl
sub
lea
mov
leave
xor
or
imul
cmp
sub
pop
jp
cmp
cs
pop
imul
fmuls
lea
lea
inc
mov
push
ljmp
int
mov
leave
ja
mov
movsl
mov
jnp
xor
loopne
sub
push
mov
or
jnp
icebp
jmp
push
inc
and
lock
cmp
shl
rcrl
mov
scas
add
xchg
xchg
aad
sub
movsb
xor
push
mov
jb
jmp
cli
xlat
mov
mov
inc
aam
test
push
pushf
orb
xorl
xchg
sub
pusha
cwtl
push
lods
lods
insb
shll
dec
out
in
es
clc
scas
cltd
mov
int
pop
loope
outsb
ret
and
popl
repnz
stos
pop
sbb
loopne
or
mov
data16
mov
sub
push
pop
aas
pop
outsb
mov
cs
iret
mov
jne
dec
inc
cli
test
mov
mov
fidivs
xor
fs
mov
jecxz
mov
repnz
jmp
mov
mov
int3
shlb
and
daa
bound
int3
shlb
inc
mov
push
push
add
js
xchg
stos
pop
out
cltd
xor
dec
addb
cmp
lds
movsl
cmp
repnz
push
in
daa
jmp
in
mov
xor
insl
fidivrs
sarb
mov
in
out
int3
mov
mov
and
repz
insb
addb
sbb
mov
add
in
push
pop
pop
dec
rol
mov
lods
iret
mov
and
dec
dec
push
je
sub
pop
pandn
out
mov
nop
cmpsl
jbe
mov
std
daa
repnz
insl
arpl
lret
mov
pop
ja
arpl
leave
movaps
or
enter
out
mull
mov
or
cmc
std
or
imul
and
addr16
addr16
rclb
orb
sub
mov
scas
das
push
fs
push
jns
jo
leave
inc
push
xchg
pop
in
sbb
xor
aam
ret
mov
arpl
out
lds
sahf
stos
adc
pop
or
mov
push
lods
fbld
jo
aas
test
mov
out
sbb
fistl
sbb
loope
mov
out
bound
lahf
fldz
cmpsl
mov
fistl
roll
dec
push
or
push
jecxz
mov
scas
xor
push
pop
mov
mov
stos
int3
xchg
jmp
in
sbb
mov
std
sub
push
dec
jge
sub
or
mov
xor
mov
jg
mov
cli
insl
pop
pop
dec
mov
test
rcll
ret
dec
and
jmp
xchg
xor
xlat
cmp
in
mov
dec
out
jl
out
inc
outsb
loope
dec
imul
mov
sub
cmpb
test
insb
or
jo
aaa
mov
in
pop
stos
mov
loop
push
fsubl
sub
aaa
arpl
repz
aam
cmp
sbb
cli
jae
hlt
inc
das
bound
pop
and
jnp
cltd
in
lds
push
stos
aaa
loopne
or
pushf
mov
dec
xchg
das
sub
xor
cld
or
ljmp
jns
dec
loopne
fisttpl
movl
movsb
mov
add
dec
fcomps
dec
movsl
clc
push
cmpsl
sbb
jnp
adc
aas
xor
in
add
cmp
lds
js
or
jecxz
xlat
enter
xchg
pop
and
or
lock
xor
scas
inc
mov
mov
repnz
push
lahf
pop
fstpl
int
jno
adc
push
mov
mov
enter
inc
cld
cli
inc
loope
cwtl
lds
div
lret
cmpsl
cmp
and
divl
or
or
lods
daa
lods
xchg
call
cmpsb
gs
mov
sbb
xor
xorl
cmpl
jle
aam
sbb
rorb
or
cmp
add
lcall
xchg
push
cmc
push
push
or
dec
adc
xor
or
and
shll
lret
xchg
sbb
pop
inc
outsb
loopne
jae
mov
push
icebp
test
or
adc
mov
int3
orl
push
mov
sub
aas
andb
clc
add
mov
jmp
and
jge
cmp
sbb
cs
add
ljmp
fldl2t
stos
push
mov
fst
orb
mov
pushf
xchg
pop
xor
adcl
mov
add
or
mov
jmp
sub
dec
and
dec
popa
push
cmp
jno
call
daa
or
in
mov
paddq
dec
aad
mov
hlt
pop
loope
sbb
add
jae
cmp
adc
stc
cmc
cmp
or
test
jp
js
mov
loope
pop
adc
jle
inc
push
inc
lods
test
pop
notl
jp
arpl
lds
andb
imul
dec
push
ret
jl
sub
cmp
mov
stc
adc
cwtl
xor
adc
xor
jg
cmp
sti
jecxz
dec
aad
sar
adc
mov
add
sub
dec
add
cmp
stc
lret
dec
mov
dec
pop
fidivl
pop
fdivl
cmp
jne
push
hlt
xchg
mov
add
outsb
push
jbe
or
icebp
stos
and
xor
inc
pop
in
dec
mov
fmull
enter
pop
mov
mov
ja
and
mull
in
lds
loop
lret
mov
inc
ds
dec
dec
mov
and
mov
pop
inc
push
mov
mov
rcll
pop
and
sahf
push
repz
xlat
inc
xchg
stos
enter
lock
sbb
jge
test
inc
cmp
jg
ja
std
xchg
jmp
xchg
test
out
std
lock
push
les
push
movsb
stc
out
dec
dec
lock
sub
cld
mov
pop
int
cmpsl
jge
sbb
bound
mov
cs
pop
mov
lds
mov
push
and
push
sbb
sti
adc
ja
cmp
shlb
test
pop
inc
xlat
add
pop
stos
inc
push
mov
sub
ficompl
push
pushl
push
aam
mov
push
cmp
ja
nop
out
inc
int
cwtl
mov
mov
and
xor
or
push
pop
iret
push
dec
cwtl
xor
xchg
inc
out
xchg
adc
mov
xor
ret
popa
outsb
pop
mov
popl
ds
sub
negb
aam
rorl
loop
outsl
mov
push
xor
and
cltd
mov
push
sub
push
sub
arpl
fwait
jae
aam
fwait
negl
in
adc
loop
lahf
cmp
dec
repz
xor
repz
push
mov
je
aam
jl
loop
ss
sti
ficompl
inc
mov
ficomps
in
xor
sbb
mul
inc
pop
xorb
push
lea
sub
outsl
or
les
xor
push
andl
and
test
jne
add
in
jecxz
xlat
out
aad
mov
adc
imul
int3
cld
or
pusha
pop
xor
pop
and
into
lret
xchg
mov
pop
mov
lods
cltd
xor
and
fwait
mov
sub
mov
jge
xchg
daa
push
adc
into
sbb
in
or
sub
in
cmpsb
popf
dec
lea
repnz
fstps
jae
jle
or
dec
sbb
stos
in
jae
jg
adc
loope
add
fisubl
pushf
mov
aas
imul
push
sub
xor
push
sbb
and
test
faddp
jbe
jge
xlat
push
cmpsl
and
adc
das
inc
xor
mov
mov
xchg
add
jae
iret
pop
imul
ret
std
aam
sub
rorb
cmp
test
movsb
cmp
fadds
push
out
sahf
out
testl
xlat
mov
mov
mov
xor
arpl
xor
aam
shlb
jno
xor
and
jbe
ret
or
mov
mov
cwtl
mov
pop
or
and
ret
and
sbb
and
shl
testl
daa
mov
adc
adc
js
imulb
int
inc
dec
pop
ss
mov
sub
mov
gs
iret
insb
mov
and
and
fwait
sbb
outsl
insb
mov
rcr
lods
pop
hlt
mov
les
xor
jl
mov
inc
lret
in
insb
push
or
cmpsb
xor
gs
mov
mov
pop
mov
add
inc
insb
adc
stos
lock
add
sahf
push
enter
test
jo
test
in
xchg
jmp
addr16
dec
fsubrs
xor
iret
jp
popf
mov
int3
sbb
and
sbb
and
testb
push
jbe
rorb
adc
lret
movsb
mov
push
in
cli
data16
jmp
pop
incb
mov
mov
xchg
fisttps
mov
pop
push
cmpsb
insl
sbb
stos
push
pop
jnp
xchg
mov
ja
cs
lods
mov
xor
call
jns
gs
mov
push
push
jb
je
inc
jmp
and
gs
mov
popl
rcll
pop
or
test
fbld
dec
cmp
arpl
dec
lds
sarb
int3
mov
repz
push
popa
out
lods
dec
div
out
int
mov
movsb
ss
sarl
xchg
fistps
lods
shrb
push
pop
les
push
stc
out
stos
aas
sub
xor
xor
jmp
stos
int3
push
es
imul
mov
pop
cmpsb
xchg
or
mov
ja
movl
adc
je
in
dec
or
orl
mov
cmp
mov
jae
adc
out
mov
sbb
in
bound
imul
addr16
fistps
cli
stos
xor
lods
loopne
fwait
bound
xchg
rol
aam
dec
mov
xchg
jp
push
ret
jg
fs
mov
pop
jb
push
es
inc
mov
push
jb
rsm
dec
inc
xchg
pop
pusha
pop
inc
jle
test
imul
faddl
movsb
sbb
insl
push
push
bound
jb
sub
nop
fwait
sarb
push
popa
mov
fst
ja
in
ret
xchg
cmpsb
or
jae
fst
xchg
jne
leave
icebp
pusha
push
push
decl
dec
cmc
jmp
lods
rcr
adc
arpl
scas
and
sbb
loope
ficoml
mov
aad
cs
mov
mov
sti
dec
dec
pop
pop
cmpb
popf
xor
outsb
lretw
ror
jg
mov
movsb
mov
pop
mov
push
out
and
pop
or
test
sbb
adc
pop
sarb
jle
scas
fisttps
or
inc
and
fistpll
jecxz
and
push
pop
and
fbstp
xorl
push
inc
xor
cs
or
xchg
dec
out
ljmp
hlt
push
fs
or
push
pop
push
pop
mov
xchg
push
jge
ffreep
ljmp
jecxz
sub
in
xchg
xchg
jge
pop
les
arpl
xor
inc
pop
roll
push
pushf
fdivl
loope
and
adc
jo
inc
xor
loopne
movsb
stos
adc
sbb
xchg
add
ljmp
mov
lea
xchg
test
pop
aaa
in
jge
nop
push
push
jb
xor
int3
lods
lahf
fistps
cmc
sbb
jmp
bound
sti
mov
and
repnz
loop
xchg
cmp
xorl
fld
and
sub
incb
jmp
test
jne
in
sahf
outsl
movsl
out
and
mov
push
xor
inc
adc
cwtl
repz
pop
jmp
les
sbb
mov
mov
rol
push
sbb
dec
dec
dec
or
or
xchg
vpmaddwd
sub
rolb
pushf
push
movsb
push
push
xchg
out
push
call
add
scas
pop
mov
pop
adc
pop
negb
pusha
lock
addb
pushf
xchg
lahf
and
inc
fcmovnu
pop
bound
jecxz
orb
push
pop
sbb
aam
jle
pop
mov
nop
sarl
push
cmp
jo
cltd
outsb
out
inc
insb
sbb
loopne
shll
loope
inc
pop
gs
jb
sbb
push
js
arpl
fwait
gs
pop
outsb
xchg
cmp
mov
mov
push
sub
add
lret
adc
mov
sub
pop
push
mov
mov
add
in
movswl
clc
push
dec
pop
repz
outsl
les
mov
mov
and
pop
aad
movsl
test
jmpw
dec
and
and
insl
or
cli
mov
imul
sbb
inc
mov
fnstcw
cld
pop
clc
xor
mov
jecxz
cmp
dec
sarb
adc
addr16
into
or
mov
jmp
int
int
xlat
sti
jmp
clc
ror
clc
int
adc
js
ljmp
hlt
add
mov
mov
inc
pop
push
pusha
das
popf
rorb
fists
hlt
pop
loop
or
stos
jp
and
cmp
push
fwait
ss
nop
add
rol
dec
ljmp
sbb
nop
dec
mov
test
je
sub
aaa
hlt
pop
lds
jl
pop
lret
pop
les
jb
add
popa
insl
push
mov
jo
lahf
sarl
cmp
cltd
test
inc
cmp
cmp
add
fisttps
lret
popa
testb
pop
jns
in
inc
mov
mov
fs
xchg
mov
out
insl
rclb
mov
sarb
pop
cld
cmp
cltd
cmpsb
inc
adcb
jnp
repnz
out
xor
adc
mov
or
adc
fs
scas
mov
pop
lods
or
jmp
cmc
push
jge
sub
out
movsl
stc
ja
in
ret
push
cltd
pop
ffreep
mov
xchg
jp
fiadds
cmp
shll
push
and
lods
add
movl
aam
aad
and
jg
fucomi
pop
xchg
shlb
test
jb
out
loop
ret
xchg
and
jo
sbb
mov
inc
and
sub
lahf
dec
daa
lods
and
sub
icebp
in
sti
pop
xor
dec
jmp
fdivl
pop
in
mov
ss
or
fwait
sbb
mov
iret
sbb
rolb
mov
or
pop
enter
inc
icebp
movsl
xchg
sbb
cmp
mov
push
pop
mov
jl
pop
and
mov
pop
mov
push
scas
mov
or
cmpl
in
imull
jecxz
das
fsubl
pop
loop
nop
lea
xor
mov
ret
mov
pushf
in
add
call
sub
push
call
movb
sbb
pmuludq
shlb
jecxz
call
jg
ljmpw
add
cmp
mov
shlb
jo
jg
mov
xchg
and
fcomps
jne
jmp
push
in
xchg
pop
pop
pop
sub
sar
jmp
cmpb
icebp
rcl
in
xchg
decl
sub
pop
les
nop
std
filds
or
sub
sbb
jne
lds
loope
xor
loopne
repz
movsb
rcrb
jae
int
xor
int3
sbb
ja
arpl
mov
mov
pop
pop
in
cli
sbb
and
scas
dec
mov
sub
mov
test
xchg
push
cwtl
mov
test
aad
adc
mov
jle
shlb
sub
rorb
pusha
mov
das
outsb
pop
jge
test
sub
inc
insl
push
shlb
outsl
in
jne
mov
add
or
gs
bound
add
lahf
lea
incb
test
popf
xchg
mov
push
or
jb
sbb
mov
mov
pusha
in
push
faddl
mov
mov
or
jl
insb
rcrb
xor
mov
pusha
in
push
faddl
mov
mov
or
jl
insb
rcrb
xor
mov
pusha
inc
push
faddl
mov
mov
or
jl
insb
sarb
xor
lea
pusha
in
push
pop
inc
int3
mov
mov
jnp
hlt
push
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sbb
dec
sub
sbb
sbb
icebp
mov
stos
int
std
fwait
in
fwait
sbb
dec
sub
cmp
insl
jle
jmp
sti
mov
into
int
std
mov
fwait
sbb
dec
sub
cmp
insl
sbb
scas
lods
mov
in
mov
in
inc
daa
imul
xchg
xchg
aam
or
pop
xor
insb
nop
cltd
and
pop
push
imul
mov
adcl
inc
xor
into
and
pusha
lret
add
pushf
data16
not
xor
popf
jmp
cli
mov
push
mov
cwtl
push
in
push
sbb
pop
sub
cmp
add
adc
or
or
lea
fcomps
fnsave
aam
pop
sub
jne
fucomi
cmp
fisttpl
jecxz
jnp
xor
insl
cmc
cmpsb
push
lahf
fs
xchg
lret
incl
test
mov
shrl
jnp
dec
sub
cmp
insl
sbb
lret
lods
fcmovnu
stos
int
std
mov
fstpl
add
sbb
aas
dec
sbb
outsl
popf
fwait
call
stos
int
sahf
stc
stos
js
push
cmp
or
pop
aas
xor
mov
into
mov
iret
js
or
and
sbb
jge
insl
sbb
lret
lods
fcmovnu
stos
int
std
mov
fwait
sbb
dec
sub
cmp
insl
sbb
lret
lods
fcmovnu
stos
int
std
mov
fwait
sbb
and
pushf
mov
aaa
inc
out
repz
ljmp
adc
lret
cwtl
aam
enter
pop
adc
imulb
insb
and
mov
stos
mov
shlb
popa
test
cmp
loopne
jb
jb
jmp
mov
in
dec
cmp
mov
pop
xchg
cltd
push
dec
jbe
dec
ds
rorb
xchg
repz
adc
call
jnp,pt
daa
jg
pop
fwait
mov
pop
imul
repz
or
lcall
push
addr16
sbb
mov
test
mov
dec
xchg
icebp
ljmp
sti
bound
mov
sub
inc
add
cmp
lods
jb
stc
add
or
inc
fsubr
lock
xchg
jmp
mov
mov
ss
sbb
pop
rcrl
loopne
ljmp
or
jle
insl
lcall
cmp
test
jecxz
aas
sbb
xchg
mov
jecxz
xor
test
lods
shll
cwtl
pop
movsb
aad
sub
shll
leave
aas
mov
or
jmp
js
nop
add
ret
arpl
rolb
jbe
in
mov
je
jo
push
imul
in
mov
inc
cwtl
cmpsl
mov
shlb
cmp
das
xor
xor
inc
ret
sub
mov
int
cmp
push
push
jecxz
cmc
push
inc
movsl
add
mov
mov
jmp
pavgb
and
mov
push
int
call
popa
dec
insb
inc
lods
call
enter
or
fbld
addl
sub
mov
jae
cmovbe
cli
divb
bound
lret
adc
sub
rcrl
cmp
push
pop
jns
xlat
scas
ds
mov
scas
jg
fildll
lds
cmp
mov
mov
cltd
pop
or
subb
push
insl
push
adc
jp
pop
mov
inc
mov
jecxz
xor
pusha
mov
adc
cmp
cmp
sub
cmpsl
pop
aad
aaa
mov
adc
je
adc
icebp
push
mov
xor
cld
cmp
sub
ja
gs
and
ret
dec
adc
fdivs
inc
outsl
xor
mov
push
xchg
or
push
lahf
push
out
mov
xchg
adc
cmp
loopne
subb
addb
jne
adc
mov
imul
push
aad
cmpsl
out
add
and
shll
outsl
pop
xor
or
jg
repnz
hlt
pop
jne
inc
repz
mov
push
mov
add
and
sbb
xchg
cwtl
pop
call
addr16
aad
pusha
js
fidivs
jne
mov
mov
push
stc
rcrb
lock
pop
popf
dec
bound
pop
gs
or
inc
jge
jp
out
nop
xor
addr16
mov
out
data16
fsubrs
dec
sbb
mov
lds
hlt
pop
fidivs
negl
xchg
inc
xchg
imul
lcall
in
jae
jne
dec
pop
cmp
in
and
mov
mov
jecxz
icebp
outsb
or
adc
daa
jne
cmp
in
lock
mov
sbb
add
aam
dec
insb
cmpsl
sbb
cmc
orb
xchg
addr16
repnz
jno
cmp
lods
pop
add
sbb
xor
push
js
addps
js
cmc
jp
inc
sbb
stc
pop
cmp
ds
enter
and
mov
push
ss
xchg
jl
bnd
pop
mov
stc
sti
sub
in
jnp
ljmp
mov
inc
cltd
jp
mov
mov
or
and
mov
mov
mov
adcb
fnstcw
or
xchg
movsb
mov
adc
push
mov
mov
sbb
push
loope
mov
add
lods
jnp
aaa
or
pop
popf
push
or
mov
push
or
push
lcall
loope
sub
cmp
movb
cmpsl
pop
fstl
clc
mov
inc
sub
stc
lahf
mov
and
jo
adc
jecxz
insl
jp
push
sub
mov
or
pop
mov
fadds
jge
push
xchg
inc
iret
push
enter
int3
jo
cmpsb
lret
repz
mov
in
add
popa
gs
sub
mov
sbb
adc
add
jnp
lahf
jae
mov
mov
jg
lods
inc
imul
mov
in
std
ror
out
xor
cmc
sub
inc
sbb
pop
shl
repz
and
adc
cmp
pop
lods
leave
adc
push
loope
push
push
out
loop
sbb
leave
in
fcomps
dec
xor
mov
in
mov
mov
fisubs
xchg
cmp
mov
pop
xor
jecxz
dec
data16
stos
sub
push
shll
out
cmpsb
aas
rclb
inc
sbb
and
xlat
mov
or
in
in
insl
sub
repz
addr16
les
cmp
push
jl
jbe
leave
fistps
and
insb
iret
pop
cmp
lods
out
fdivrl
loopne
mov
or
pop
sub
xchg
mov
movsb
in
push
mov
movsl
fldenv
in
lods
dec
pusha
in
js
mov
leave
in
sub
sbb
dec
stos
sbb
mov
cmp
dec
pop
imul
icebp
fbstp
bound
cmp
loopne
sub
push
mov
or
inc
sub
vmovdqu
push
dec
jo
testl
mov
dec
cltd
loop
inc
test
addr16
sub
jle
pop
sbb
inc
iret
into
sub
jnp
push
jo
sub
dec
or
fists
test
nop
or
xchg
cmpsl
loope
icebp
mov
insl
lahf
fbstp
scas
mov
mov
and
ret
inc
xchg
xor
mov
loope
pop
push
adc
mov
stos
jle
adc
dec
push
cmp
adc
mov
movsl
mov
imul
das
inc
push
adc
adc
rorl
push
sub
mov
mov
into
dec
fistl
leave
inc
les
mov
sbb
ret
ret
and
bound
or
xchg
mov
ret
pop
in
in
mov
push
lahf
stos
clc
pop
push
pop
hlt
adc
or
xchg
icebp
es
mov
das
dec
mov
insl
inc
jno
mov
dec
dec
jle
lock
xor
xor
mov
cld
xchg
push
push
nop
sbb
jg
add
mov
push
mov
sti
adc
imul
cli
mov
imul
sub
add
dec
push
icebp
lret
push
sub
adc
out
aas
test
mov
std
or
filds
inc
push
lea
stos
fnstsw
repnz
daa
maskmovq
notl
sub
cmp
fwait
push
xor
and
add
pop
add
fwait
dec
outsl
xor
loopne
and
cmp
roll
repnz
pop
jnp
aaa
test
es
sub
lret
fcomi
adc
pop
ret
push
jecxz
jmp
not
int3
repz
push
mov
in
leave
and
out
lods
loopne
ss
pop
mov
ljmp
aam
mov
popf
into
jecxz
jns
xchg
lea
adc
mov
repz
loopne
adc
xchg
inc
clc
adc
adc
out
xor
ds
jno
sub
mov
mov
sbb
mov
test
mov
call
test
test
fistps
adc
dec
mov
fdiv
mov
jo
adc
imul
and
rorl
iret
add
adc
mov
addr16
mov
mov
dec
mov
xor
call
or
and
divl
ret
aad
leave
sbbl
push
inc
test
or
fsubl
mov
pop
pop
jne
out
lahf
dec
pop
cmp
or
adc
jl
jns
inc
pop
or
popa
ja
mov
xchg
pop
cmp
andb
out
jnp
in
dec
lahf
cmp
sbb
cmp
or
push
test
pop
adc
mov
sti
or
incl
xchg
test
testl
xlat
pop
sub
mov
addr16
add
imul
mov
fisubs
sbb
imul
push
mov
cmc
sbb
fs
push
and
lds
jbe
mov
std
push
push
add
ficoms
mov
jg
xchg
xchg
mov
mov
cmp
lcall
push
mov
jmp
or
pop
loope
punpcklbw
and
mov
or
adc
lock
xchg
dec
das
out
jmp
insl
or
shll
data16
pop
ficoml
push
lahf
and
insl
sbb
xchg
sub
gs
jno
leave
das
imul
mov
inc
push
test
mov
imul
sbb
mov
push
inc
or
jp
out
xchg
mov
arpl
or
lds
out
jbe
push
inc
add
mov
lock
sbb
mov
push
and
cmc
mov
lods
inc
sbb
repz
lret
movsb
sub
jge
jl
icebp
jmp
xlat
out
mov
iret
fstpl
jmp
and
sbb
mov
mov
dec
fsts
loopne
pop
adc
sbb
lahf
dec
test
xor
mov
pop
fwait
pop
sub
or
insb
repz
push
ds
xor
fwait
push
mov
mov
push
sub
scas
mov
add
and
sbb
xchg
popa
adc
inc
jecxz
outsb
ret
addb
sbb
dec
lods
lahf
popf
aam
loopne
push
mov
xor
xor
cli
push
jecxz
jb
xchg
mov
inc
lock
mov
ret
cmp
xor
push
loopne
insl
and
sbb
ja
fldlg2
faddl
gs
lea
imul
arpl
adc
cmpsb
es
adc
and
dec
movsb
add
adc
out
or
dec
and
bnd
xchg
sbb
cmpsl
daa
sbb
notl
fsts
pop
insl
rorb
sbb
cld
scas
mov
mov
mov
in
push
lock
pusha
add
movsl
lcall
sub
imul
hlt
sbb
inc
mov
repnz
push
sub
sbb
out
ret
pop
paddw
cmc
push
into
or
test
shl
mov
js
sub
insl
movl
das
loopne
dec
clc
data16
rol
sti
loopne
pusha
xor
add
cmp
mov
and
jno
out
in
cmp
aad
and
fstl
cmp
mov
mov
inc
out
movsl
add
push
or
xor
inc
call
movsb
lahf
pushf
fistpll
dec
add
or
push
aam
nop
mov
nop
hlt
jno
sbb
cs
popf
add
adc
imul
and
shll
shl
adc
mov
lods
xor
jae
popf
pop
loopne
pop
push
mov
ja
mov
jns
lods
shll
pop
scas
xchg
mov
popa
cld
int3
jne
mov
sbb
sub
shll
mov
or
xlat
decb
push
sub
repz
xor
daa
fs
imul
inc
cmp
mov
in
adc
fidivl
jmp
fmull
xor
xchg
mov
push
sub
inc
mov
or
fcmovu
out
and
mov
push
enter
insl
inc
sbb
int
xchg
mov
ret
sub
jo
push
test
xchg
or
mov
icebp
and
lret
inc
cmpsb
cmpsl
inc
fs
sbb
add
movsb
add
sbb
data16
fwait
mov
push
in
cmp
jnp
sub
pop
sbb
incb
adc
leave
mov
or
fstps
xchg
pop
push
clc
and
mov
int
mov
int
mov
lret
mov
sub
pop
cmp
xlat
and
testb
fisttps
sbb
cld
lods
xchg
xchg
adc
adc
jbe
loop
cmpl
add
inc
test
jno
dec
push
mov
jg
leave
sbb
xlat
pusha
shlb
pop
dec
iret
outsb
xchg
fimull
or
stc
aad
fwait
sbb
add
fdivs
mov
enter
xor
clc
xchg
loopne
in
rcrb
cmpsb
sbb
into
cltd
subb
xor
jbe
adc
lods
sbb
andl
push
out
jmp
jp
aad
push
movsb
mov
mov
mov
adc
push
repnz
pop
jbe
aam
mov
mov
xor
xchg
clc
push
rcl
imul
lea
shll
ljmp
sub
or
pop
fnstenv
movsb
movsb
xchg
push
aaa
ljmp
and
push
test
or
inc
negl
idivb
push
adc
mov
mov
push
mov
inc
xor
popa
outsl
sbb
xor
and
mov
and
add
lods
or
pop
xor
loop
pop
dec
ljmp
jl
aad
xor
loopne
jmp
fdivrp
rclb
jle
pushf
pop
mov
inc
xchg
jbe
je
jno
pop
call
mov
push
jecxz
aam
fadd
jmp
ljmp
xchg
in
dec
mov
push
fidivrs
add
mov
mov
xor
shl
adc
mov
out
shlb
in
pop
jnp
jb
lcall
subl
pop
fwait
sbb
out
adc
fmull
bnd
pop
jb
sahf
xchg
dec
das
fiadds
mov
jmp
and
or
gs
mov
mov
sar
lea
in
aad
repnz
jmp
nop
dec
pop
xor
leave
je
lds
xchg
push
xor
mov
and
je
adc
inc
lds
sub
pushf
sti
mov
shll
mov
leave
sbbl
or
ss
push
mov
lret
cmpsb
cmpsl
xchg
test
mov
cwtl
xchg
enter
inc
adc
fiadds
loopne
adc
dec
js
aas
sub
sub
lea
jo
mov
sarl
mov
adc
cwtl
jp
rcrb
aam
fucomip
fs
into
lcall
loopne
into
cmpsl
inc
jbe
jp
cmp
inc
testb
repnz
sbb
mov
jb
jge
loop
mov
cmpsl
mov
mov
cli
xchg
imul
adc
in
add
std
cwtl
dec
sub
cmp
fwait
repnz
jbe
mov
cmp
cmp
les
xorb
inc
add
mov
rorl
imul
sbb
add
lret
das
js
push
movsb
dec
push
xchg
pop
dec
xchg
in
mov
mov
je
adc
or
outsl
data16
imul
in
mov
pop
pop
pop
and
jp
aaa
das
mov
xor
cltd
sub
cmpsl
andb
in
xor
out
imul
loop
dec
mov
loope
mov
mov
cmc
outsb
mov
int3
jno
mov
pop
pop
pop
mov
roll
mov
cmpsl
andb
ljmp
rcl
mov
pushf
pop
sbbb
inc
aam
nop
inc
shll
nop
or
ds
mov
cs
out
insb
mov
jg
push
mov
dec
cwtl
pushf
incb
adc
push
lahf
pop
add
dec
xchg
inc
int
jno
lret
pop
ja
xor
test
push
cwtl
enter
mov
cwtl
negl
popa
inc
adc
cmp
xchg
cmp
pop
ja
mov
icebp
popf
scas
fidivs
cmp
dec
mov
mov
jmp
ret
leave
rcrl
jbe
fbstp
rcr
mov
sbb
sub
add
sub
fisubrs
leave
sub
lahf
xchg
ljmp
movsb
mov
iret
popf
add
push
add
adc
icebp
lcall
mov
mov
pusha
xchg
cltd
loopne
cmp
dec
fwait
push
or
fwait
lods
xor
mov
jmp
and
mov
addr16
jns
ret
imul
call
repz
ficompl
mov
dec
movsl
push
int
push
cli
mov
call
push
jns
xchg
jns
pop
mov
lock
push
popf
mov
out
std
pop
and
fisubrl
stc
mov
ret
jae
scas
addr16
or
mov
inc
and
xchg
into
adc
outsl
sub
in
ret
fldt
out
movsb
push
dec
std
sbb
and
cltd
arpl
loop
sub
iret
les
test
mov
jge
sub
push
movsb
clc
scas
xchg
add
sbb
xchg
add
cmp
dec
int3
cmpsb
mov
adc
jb
pop
test
out
sbbl
mov
xchg
sbb
jb
mov
in
cmp
pop
pop
fcomi
push
and
xchg
aad
in
dec
cmpsl
out
mov
jle
xchg
pop
and
push
addb
mov
jmp
shll
and
jo
mov
or
xchg
and
lret
out
nop
mov
imul
hlt
sbb
pop
sub
xor
mov
xchg
mov
cmp
inc
mov
lds
dec
fcompl
xor
bound
ja
jnp
sbbb
sbb
test
mov
fildll
jne
add
sarl
mov
xchg
lds
cld
outsb
jne
fld
push
sub
xor
fstpl
xchg
push
or
into
cld
inc
outsl
push
das
sbbb
pop
int3
push
jne
mov
add
pop
pop
mov
shll
push
mov
mov
adc
jecxz
cmc
jecxz
movsl
fcomi
in
or
sbb
adc
pop
out
inc
adc
cwtl
cwtl
mov
movsl
lods
dec
nop
repnz
fs
dec
roll
idivb
lock
sub
pop
aas
xchg
rcl
fchs
pop
sub
arpl
xchg
and
adc
jbe
cmp
and
cs
cltd
pop
insb
mov
lfs
push
lcall
mov
push
sbb
or
int
mov
test
lret
hlt
lret
dec
push
mov
xchg
or
xlat
shlb
or
ret
mov
mov
dec
dec
push
and
xchg
insl
xchg
mov
mov
int3
add
ja
lock
repz
daa
repnz
sti
fcoms
jecxz
cmp
fldcw
push
push
clc
push
cltd
ret
mov
movsb
cwtl
jmp
and
xchg
pop
sbb
out
mov
aaa
clc
adc
pop
cwtl
out
dec
xor
cmp
fisttpl
xlat
test
mov
call
pop
mov
mov
aam
pop
pop
js
fs
incb
adc
pop
jo
mov
add
aas
cmp
push
addl
scas
push
xor
inc
mov
fimuls
jne
out
test
les
popa
popa
xor
dec
dec
sub
jecxz
adcb
repz
test
mov
out
fwait
and
out
jns
rorb
mov
and
cld
ret
js
push
insb
sub
test
hlt
outsb
or
gs
push
mov
shrl
out
pop
cmpb
inc
jle
mov
dec
ds
and
adc
and
sbb
lods
pop
mov
mov
push
or
loop
ret
cmp
sarl
popf
in
popa
adc
adc
push
add
jg
inc
and
pusha
jno
psubd
sbb
mov
test
push
daa
jne
push
movsl
call
fs
mov
movsb
in
ret
cli
pop
inc
lods
dec
shll
repnz
cmc
inc
in
mov
sub
je
lcall
add
cmp
mov
addb
sbb
out
jbe
pushf
pusha
imul
out
or
dec
cli
das
push
mov
ljmp
jge
mov
xor
cmp
sbb
mov
jnp
dec
jmp
inc
xchg
cld
je
push
dec
hlt
cmp
and
sbb
xor
inc
das
sbb
pushw
pusha
test
jb
and
aam
or
js
mov
dec
sub
outsl
rorb
pop
add
in
hlt
leave
inc
movsb
les
xor
sub
adc
daa
test
test
adc
sub
imul
xlat
loop
sub
pop
jmp
sbbl
adc
shl
stos
pop
rcr
adc
ss
mov
idivl
sub
cmp
insl
sbb
lret
lods
fcmovnu
stos
int
std
mov
fwait
sbb
dec
sub
cmp
insl
sbb
lret
lods
fcmovnu
stos
int
std
mov
fwait
sbb
dec
sub
cmp
in
sbb
lret
lods
fcmovnu
stos
int
std
mov
fwait
sbb
dec
sub
cmp
insl
fistpl
lret
lods
lods
lods
and
fs
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
xchg
push
movsb
ss
les
cmpsb
sub
push
fisubl
xchg
hlt
xchg
xor
inc
push
inc
mulb
push
xchg
push
enter
les
inc
in
hlt
data16
adc
inc
mov
cmpsb
add
push
fs
out
push
pushw
ss
ficoml
inc
cli
jbe
pushaw
ds
xchg
cmpsb
das
xchg
es
ljmp
ja
xchg
aam
lods
fbld
or
mov
mov
dec
pusha
jo
push
push
xor
ljmp
es
jns
mov
sub
cmpsb
mov
rol
mov
xchg
in
ss
mov
adc
xor
pop
push
xlat
adc
lods
or
pop
add
test
pop
cmp
inc
sbb
hlt
cltd
add
dec
lret
mov
je
jnp
cltd
stc
test
pop
push
outsl
arpl
and
xchg
shll
jno
add
push
cmp
or
movsl
push
dec
fistpll
and
xchg
jecxz
xchg
ret
pop
add
out
push
ret
ss
and
inc
in
push
retw
xchg
add
or
pop
push
divb
jns
push
rcrb
dec
stos
cmp
ss
inc
repnz
ficoms
ss
mov
hlt
adc
ss
lods
push
mov
adc
mov
repz
dec
leave
cmp
xchg
xor
push
lds
inc
xchg
push
aam
in
hlt
data16
adc
and
xor
inc
push
divb
push
xchg
push
movsb
ss
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
xor
test
lcall
lcall
push
divb
mov
mov
jno
pop
cmp
sub
fwait
or
mov
jmp
lret
inc
mov
and
pusha
adc
jmp
cmpsb
cmp
adc
pushf
lods
cmp
test
int
aaa
pop
clc
mov
insl
mov
fbstp
dec
mov
push
add
jno
mov
mov
sbb
and
add
fisubrs
cmpsl
pop
xlat
sub
jmp
test
xchg
pop
dec
mov
test
lret
test
jno
pop
aas
xor
xor
sub
call
push
incb
push
in
mov
jnp
sbb
test
gs
pop
hlt
cmc
cmp
mov
cmpl
jnp
aad
or
push
inc
popf
mov
loopne
cltd
add
pop
popa
ljmp
inc
lret
mov
lcall
jp
mov
add
mov
jl
sbb
jns
add
loop
mov
lods
insb
dec
imul
adc
mov
sub
and
lahf
push
dec
sub
imull
mov
dec
pop
push
or
or
push
movsb
aad
mov
aaa
mov
insl
push
decb
iret
sbb
in
es
subb
add
sbb
mov
push
data16
ret
lret
jle
inc
hlt
loop
or
xorb
int
and
cmp
push
jg
jbe
cli
and
or
es
xchg
aaa
dec
scas
fidivl
sub
ret
pop
cmpl
mov
jl
mov
and
js
sbb
lcall
addr16
popa
imul
cmpsb
shll
lea
bound
lods
adc
mov
mov
sbb
int
movsl
in
rcll
jecxz
loopne
pop
add
push
or
pop
shrl
into
loopne
push
mov
sub
lods
jns
out
in
rcr
sbb
xor
ret
mov
insl
ja
hlt
jnp
aaa
pop
in
jae
xlat
adc
jmp
gs
push
leave
and
addl
and
sbb
daa
jmp
cmpb
fldenv
test
mov
jecxz
movsb
insl
cmp
rorb
in
in
adc
jl
and
sub
mov
mov
inc
adc
dec
insb
jb
js
decl
mov
adc
xor
sbb
xchg
test
ficoml
cltd
jmp
fucomip
pop
jge
inc
jle
jge
out
pusha
jl
in
xor
mov
fwait
lcall
dec
sub
test
and
pop
scas
scas
insb
aas
fdivr
pop
in
cli
mov
lea
hlt
scas
push
push
popl
xchg
jmp
dec
dec
sbb
sub
scas
push
mov
je
xor
sub
mov
fnstcw
rclb
jae
movsb
in
xchg
xor
mov
mov
movsb
add
and
das
jne
fdivr
roll
pop
scas
bnd
scas
xlat
xor
iret
test
mov
mov
lret
lcall
push
paddsb
orl
in
add
jnp
fwait
aad
imul
fisttpl
sbb
ret
ret
xchg
imul
loop
shll
add
jae
jbe
test
inc
call
ja
stc
inc
xor
es
inc
and
jne
repnz
pop
ss
or
push
mov
mov
add
or
mov
push
mov
pop
cmpsl
dec
push
jmp
roll
cmc
sbb
jp
or
cs
je
push
sbb
fadds
aad
mov
inc
rcrb
rcrl
mov
sbb
fwait
jg
frstor
mov
psadbw
jb
and
or
fdivl
inc
outsl
je
subb
mov
loopne
and
adc
shl
movsb
xchg
jbe
std
cmpsl
mov
inc
in
outsl
mov
movsl
fdivrl
mov
lods
jb
addl
shlb
or
or
ficompl
and
ret
movsl
ss
pusha
mov
sub
mov
add
sbb
jb
call
mov
dec
sub
in
sahf
adc
loopne
ficoms
mov
lret
mov
daa
fcomps
jno
ret
sahf
mov
addl
jnp
clc
int3
test
mov
test
xor
adc
es
int3
in
iret
aam
adc
scas
inc
xor
cmc
inc
pop
out
or
ficoml
lret
into
fidivs
mov
test
sub
popa
arpl
adc
push
cld
cmp
in
fwait
dec
jle,pn
sub
in
pushf
sbb
test
jecxz
sub
cmp
out
mov
enter
mov
xchg
mov
cwtl
pop
push
fsubs
mov
sahf
lea
dec
imul
addl
and
add
repz
and
jbe
push
jmp
popf
leave
mov
inc
adc
repz
pusha
icebp
shlb
outsl
insb
in
aaa
int3
in
sub
fbstp
mov
sbb
jo
sbb
lds
int3
scas
push
xchg
sbbb
jbe
js
xor
push
adc
push
inc
das
sbb
das
push
mov
sahf
lcall
xchg
and
dec
popf
push
enter
js
daa
mov
mov
cli
add
mov
pop
shrb
pop
pop
in
ret
or
lcall
movsl
push
daa
out
daa
in
sub
loop
pop
add
or
loope
add
cli
lock
insl
adc
xorl
push
loope
lea
mov
rorb
stos
inc
data16
pop
mov
sti
sbbl
clc
xchg
adc
imulb
inc
pushf
mov
xor
call
and
je
mov
subb
adc
stos
cmp
jecxz
inc
pop
int3
iret
or
mov
mov
pop
sbb
lods
lret
cli
outsb
mov
leave
ja
rcr
inc
mov
mov
and
pop
push
or
sbb
push
loope
das
mov
cmc
xor
jp
hlt
jge
jae
shl
cmpb
lods
dec
sbb
jle
daa
dec
lret
xchg
lods
inc
maskmovq
testl
push
scas
mov
jbe
data16
sub
out
imul
inc
and
sarl
mov
lock
loop
test
mov
imul
sub
movsl
sub
lock
gs
mov
cli
std
fdiv
out
pop
xor
cmp
and
hlt
and
mov
push
or
fdivp
mov
lock
pop
iret
mov
xlat
mov
lds
dec
adc
sub
pusha
xorl
adc
call
mov
jo
push
or
out
js
sbb
rcrl
mov
fldt
adc
jns
and
ja
mov
add
mov
int
shlb
test
sub
and
arpl
xor
into
js
iret
push
mov
loope
pop
xor
push
dec
loopne
scas
out
cmp
or
cwtl
xor
pop
dec
sub
xchg
mov
sbb
test
mov
aam
pop
jbe
loopne
insb
mov
and
add
fucomp
mov
js
xor
in
mov
dec
scas
xor
xlat
or
xor
pusha
iret
mov
jns
sub
and
xorb
mov
pop
xlat
mov
pop
leave
xchg
mov
jmp
or
push
fidivl
xchg
mov
iret
push
sub
lods
sarb
sub
sub
ret
in
inc
imull
shlb
inc
cmp
fstpl
dec
in
pop
aam
xor
andl
shlb
mov
jnp
in
push
nop
add
dec
mov
scas
pop
mov
mov
pushf
inc
int3
pop
mov
add
mov
scas
inc
orb
ljmp
ret
jnp
or
mov
rcl
pop
in
into
iret
inc
sbb
dec
pop
fucomip
mov
push
fiadds
cltd
inc
ret
sbb
mov
test
in
xchg
dec
andb
insl
adc
and
push
and
and
addl
jno
sub
add
rsm
insl
aam
xchg
xor
jae
aad
jmp
pop
pop
pop
xchg
mov
aaa
int3
cmp
sbb
mov
and
sub
mov
sbb
ret
das
or
jno
rcrl
jl
addl
jmp
and
mov
popl
fisubs
and
sbb
scas
std
movsb
jmp
sbb
mov
adc
xor
ss
std
and
bound
fucomp
aaa
cmp
cmp
or
loop
mov
dec
repz
arpl
cmpsl
mov
pop
and
dec
sar
sbb
arpl
jb
mov
dec
clc
out
pop
inc
push
push
and
mov
fsubrp
scas
mov
sub
ret
aas
inc
insl
out
mov
repnz
imull
popf
mov
xorl
add
xchg
or
pop
jns
xchg
jecxz
filds
cmc
popf
pusha
imul
xchg
pop
xchg
aaa
xor
pop
lock
sbb
out
mov
lods
xor
mov
fwait
push
adc
enter
jp
adc
pop
lods
mov
inc
lds
repnz
dec
mov
cmp
or
outsb
dec
imul
sbb
aad
push
popf
cld
loope
mov
mov
ret
es
xor
sub
inc
cmp
xor
in
mov
cltd
rcrl
mov
daa
lret
and
pop
adc
hlt
dec
loop
xchg
mov
pop
and
pushf
or
dec
fcmovu
xchg
int3
mov
fmull
cmpsb
lahf
test
xchg
push
sbbb
data16
ret
insb
mov
lret
mov
xchg
fbstp
push
gs
and
shlb
pop
and
inc
dec
mov
inc
arpl
cltd
inc
into
add
adc
mov
mov
jno
mov
data16
or
jns
mov
mov
ds
ficomps
mov
cld
add
loop
shlb
jb
into
fwait
or
pop
pop
mov
subb
xchg
gs
ret
xlat
xchg
ljmp
xchg
push
push
icebp
enter
lds
icebp
sarb
movsb
andl
shl
or
imul
gs
xlat
loope
mov
leave
inc
in
xchg
xor
cmp
xor
mov
dec
lds
pusha
loop
cmc
pop
repnz
outsb
or
mov
popl
xor
iret
out
in
sub
jp
mov
aaa
or
imul
pop
xor
xor
shrb
rcl
imul
pop
lret
jae
cmp
jp
xor
iret
gs
sbb
xor
mov
xor
xor
xor
mov
sub
scas
nop
cmpsb
jnp
sub
aaa
ljmp
xlat
jbe
sub
pop
fstpt
lods
xchg
xor
stc
xor
aam
mov
push
loopne
xchg
jecxz
push
popa
add
jmp
ljmp
add
call
jns
outsl
cmc
add
cmp
pop
hlt
mov
jno
mov
xchg
ret
arpl
fidivl
ret
clc
jo
and
sarb
into
in
push
jl
xor
arpl
aad
adc
ficomps
xor
cmp
cmpsl
xchg
sub
xorb
xchg
pop
jnp
xchg
push
es
dec
lock
enter
gs
out
ret
jmp
add
pushl
in
xchg
daa
aam
and
pop
repnz
icebp
stos
push
mov
lret
lret
iret
popa
in
arpl
fwait
stos
ljmp
jno
xchg
inc
sub
adc
call
loop
mov
dec
jbe
cmpsb
xlat
and
mov
lret
sub
mov
cli
outsl
roll
adc
xor
pop
imul
sub
loope
arpl
inc
fwait
aam
inc
pop
test
test
cmp
cmp
mov
jle
dec
lds
cmp
ss
fistpl
jno
lea
sti
jno
mov
push
jns
sbb
hlt
inc
iret
push
xor
add
shll
jmp
test
jno
arpl
dec
dec
imulb
push
sbb
xchg
inc
push
aaa
cmp
ret
sub
ret
call
cmp
jne
mov
inc
gs
jb
cltd
mull
cmc
popa
jno
cmp
jno
dec
or
and
vmovss
sti
leave
test
mov
jae
sub
mov
xchg
xor
cltd
test
andl
dec
addr16
cmp
repnz
mov
jae
jns
ret
fisubrs
jg
sub
test
or
faddl
adc
dec
rorb
lods
and
xchg
sub
into
push
mov
out
ffreep
das
push
xor
mov
jno
jg
mov
adc
xchg
loope,pn
pop
shl
cmp
mov
dec
in
pushf
lods
mov
ljmp
push
mov
es
xor
dec
jmp
xorl
sub
dec
xor
or
call
jns
push
into
push
pop
mov
or
arpl
insb
inc
daa
nop
sub
push
mov
insl
rorb
mov
arpl
cmp
bound
dec
jge
fsubl
inc
mov
call
jl
sti
out
xchg
orb
insb
xchg
pop
jl
sbb
jnp
out
mov
mov
cmp
mov
adcl
sar
pop
int3
mov
xor
leave
mov
fsubrl
fimuls
sub
outsl
bound
sbb
xchg
mov
test
fisttpl
xrelease
mov
xor
inc
add
push
ds
lds
jns
sub
aaa
mov
push
jl
sbbl
pop
jae
insl
jle
pop
fisttps
adc
lcall
insb
or
mov
jo
jl
xchg
fstpt
inc
adc
lahf
xchg
sbb
test
call
fcoml
sub
mov
popf
lods
rorl
mov
jp
lods
adc
sub
or
dec
sahf
inc
inc
loop
sub
daa
and
pop
ret
jmp
push
add
xchg
sbb
add
lret
cmp
cmp
push
xchg
ljmp
and
mov
test
adc
lea
loope
movsl
add
jg
sbb
sahf
subl
cmp
pop
jb
dec
mov
shll
hlt
xor
mul
insb
std
les
jo
or
add
xor
lea
push
cmp
call
divl
and
jns
repz
mov
mov
mov
xchg
cmpsl
pushf
jecxz
out
jp
fcmovnbe
int3
roll
enter
sahf
lret
sub
push
mov
loopne
push
pop
fs
sub
pop
or
or
and
xor
mov
adc
sbb
fwait
addr16
lahf
cli
aad
je
jecxz
mov
in
icebp
ret
roll
test
sub
mov
adc
outsl
push
mov
lret
movsl
mov
fdivrl
and
mov
inc
push
lcall
jns
mov
mov
pop
outsl
ljmp
or
insb
cmp
movb
mov
test
cmpsl
push
inc
mov
inc
pop
imul
subl
ja
add
or
dec
lea
jae
add
mov
lock
jmp
icebp
addr16
and
push
outsb
pop
mov
jne
sbb
test
xor
jbe
pop
sub
push
dec
mov
test
mov
faddp
mov
add
testb
lret
pop
xchg
mov
cmp
dec
push
daa
pushf
inc
xchg
orb
jl
shll
xor
std
xchg
inc
jno
sub
test
mov
cmpsb
lock
xchg
daa
cs
inc
mov
jns
xor
int
or
out
xor
cmp
call
lret
add
std
jb
xchg
sbb
movsb
nop
pop
push
mov
shrl
sbb
mov
subb
jnp
sahf
dec
push
pusha
push
mov
adc
sbb
mov
pusha
mov
cmp
xlat
jle
addr16
pop
sarb
pop
or
xor
xor
dec
cmpsl
mov
lods
fldl2e
mov
jbe
adc
cmp
popa
into
mov
ss
or
mov
test
mov
ror
and
dec
mov
add
sbb
imul
mov
call
imul
sub
cmp
cld
sbb
add
xor
fisubs
inc
lahf
add
xor
call
lods
pop
ja
adc
or
pushf
pop
or
sub
or
mov
jns
mov
adc
mov
lahf
inc
mov
int3
or
and
insl
int3
bound
add
cwtl
push
push
pop
cmpxchg
sbb
emms
rcr
sbb
repz
dec
xor
fsub
jl
push
es
repz
je
pop
and
scas
push
jecxz
mov
cmp
inc
mov
dec
rcrb
jo
mov
and
test
mov
jmp
pusha
mov
ljmp
sbb
popf
dec
out
leave
enter
mov
sarl
push
lea
fwait
mov
or
xlat
les
push
ds
xchg
fxtract
shrl
jae
or
xchg
cmpsb
push
stos
xor
es
push
mov
dec
push
faddl
dec
loope
enter
push
jno
or
dec
sub
pop
shll
rcll
mov
not
dec
in
sbb
leave
pop
inc
sbb
in
adc
outsb
sahf
push
jns
sub
in
cmp
sub
pop
jg
cwtl
pop
mov
jle
popf
pop
sub
mov
xchg
mov
adc
and
mov
sarl
cmp
fwait
ret
mov
repnz
call
pop
test
js
xor
and
stc
pop
jae
or
nop
lret
roll
test
jl
adc
pop
mov
push
popa
scas
loopne
inc
iret
lret
loope
pop
and
inc
or
mov
cwtl
lods
add
iret
add
sbb
xchg
fucomp
lret
jle
fcmovnu
sub
and
mov
jmp
push
pop
or
add
push
out
add
add
jbe
movsb
add
test
ds
pop
sub
fiadds
and
mov
xchg
or
or
pop
test
dec
outsl
rcl
pusha
into
xchg
lret
lock
stos
cmp
adc
or
cmpsb
scas
cltd
rorl
in
xor
cmp
mov
mov
imul
jle
sbb
mov
cmpsb
jno
jmp
xchg
int
sti
fsts
imul
repz
cmpsb
stc
jecxz
bound
inc
ret
push
into
mov
cld
clc
xchg
mov
jl
loop
sti
dec
sub
lret
dec
adcl
and
xorl
lahf
add
jmp
pop
sbb
shrl
cld
lods
pop
and
mov
scas
adc
fistps
xchg
ficoms
dec
loopne
cmp
add
into
rcr
and
sub
pop
insl
sti
test
enter
sahf
stos
iret
stos
sub
add
lcall
hlt
adc
jecxz
sahf
bound
cltd
insb
dec
mov
gs
cmp
cmp
jp
inc
in
stos
scas
les
repnz
mov
sub
cli
ds
fldcw
mov
jmp
pop
iret
jge
rcrb
mov
in
loop,pt
mov
pop
pop
cld
dec
mov
push
andl
sahf
pop
or
sbb
nop
mov
scas
std
clc
cmp
sbb
mov
dec
pusha
repz
sbb
out
sbb
sub
mov
lret
xchg
inc
jl
inc
cltd
fisubl
cmp
fbld
sbb
jp
adc
test
adc
jnp
out
push
xchg
jg
mov
outsb
mov
call
out
loope
int3
add
push
fcomps
add
js
lea
cmc
mov
sahf
out
repnz
pop
mov
mov
and
cmc
cmpsl
stc
mov
iret
lcall
bound
inc
xchg
ds
cwtl
ja
loop
fstl
adc
dec
mulb
fistpl
mov
fistpl
jl
cmp
mov
je
xor
jecxz
or
push
das
stos
xchg
clc
scas
ljmp
pop
dec
mov
rcrl
mov
dec
mov
push
jb
dec
xor
dec
cmp
loope
mov
fs
fdivrl
jo
stos
push
or
call
xchg
jecxz
mov
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
xchg
push
movsb
ss
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
movsb
xchg
mov
es
push
aam
in
xor
add
adc
aam
xor
inc
inc
negb
ss
les
inc
in
je
add
jmp
mov
fdivrl
fwait
or
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
aas
push
inc
pop
cmp
dec
push
popaw
outsl
sbb
fadd
enter
aaa
xchg
mov
js
dec
inc
pop
xor
and
adc
add
loop
cld
enter
fcmovb
mov
test
loop
aam
test
xor
ds
add
call
mov
int3
in
icebp
divl
and
or
sub
addr16
push
jmp
test
int3
dec
fldt
out
xlat
ja
loope
push
lret
or
cmp
xchg
jbe
pop
push
sub
enter
js
pusha
and
jb
push
jnp
pop
mov
cmp
inc
mov
sbb
daa
dec
or
fstp
aaa
sbb
xor
adc
out
mov
ret
push
aas
xchg
mov
mov
in
lahf
xchg
call
dec
jo
adc
pop
sub
stos
mov
sbb
lods
mov
sarb
or
dec
or
ret
andb
inc
jg
push
xor
data16
or
loopne
rcr
rcl
mov
cltd
add
or
sub
push
pop
add
xchg
xchg
mov
out
add
adc
sub
jle
jno
lret
popf
mov
scas
fcmovb
fadd
mov
add
js
sub
sbb
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
cmpsb
imul
sbb
aad
lea
fnstsw
addl
push
mov
mov
sub
mov
jb
and
int
cmpsl
dec
insl
shll
mov
xchg
cmp
fsubrs
mov
repz
xor
outsb
mov
shl
mov
cmpsb
push
and
xchg
sub
jecxz
xor
dec
inc
mov
aaa
xor
in
aad
enter
lods
adc
cmp
int
jnp
cmp
lret
insb
in
icebp
cmp
mov
or
push
test
xchg
or
lcall
rcrb
rclb
pop
jnp
sbbl
pop
inc
mov
test
clc
dec
or
popa
xchg
and
shlb
cmc
xor
mov
in
xor
fiadds
xchg
ljmp
push
notb
mov
inc
js
xchg
adc
inc
mov
jae
mov
hlt
or
nop
in
out
xchg
cmp
dec
jo
mov
jmp
push
sub
cmp
imul
mov
xchg
inc
gs
loope
mov
outsl
jmp
xchg
sbbl
movsl
xchg
movsb
and
mov
in
jp
inc
clc
iret
lods
cmp
mov
and
sbbb
rclb
shll
sub
push
jbe
pusha
sub
jbe,pt
popa
sub
xlat
dec
into
popa
adc
adc
out
fldl
ds
into
ret
sub
into
sub
mov
in
sub
xor
jae
mov
xchg
mov
dec
jae
je
lods
addr16
test
cmp
jle
sbb
in
sti
outsl
xor
push
int3
lcall
popa
jb
mov
xor
xor
or
pusha
movsl
lods
icebp
xchg
ds
insb
lcall
or
pop
jnp
mov
fs
roll
cld
adc
adc
out
mov
sbb
push
adc
sub
mov
push
and
cltd
fucomip
cld
sti
into
mov
xchg
mov
stos
sarl
sarb
mov
mov
pop
inc
out
je
xchg
push
sbb
addb
xor
pusha
or
mov
shrb
jbe
fdivrl
sbb
insb
mov
jp
xchg
fiadds
push
add
and
mov
jo
mov
cmp
mov
pop
mov
cmovb
outsl
xchg
pop
hlt
out
mov
sahf
push
dec
es
rol
into
popa
repnz
pop
out
mov
insb
jno
sbb
mov
cmp
test
cltd
shlb
mov
dec
pop
add
jmp
sub
sti
push
xchg
cmc
repnz
dec
mov
out
push
stos
testl
jne
sbb
stos
stos
loope
std
pop
add
jb
push
and
fsubrp
add
ja
adc
shlb
adc
scas
imul
xchg
fmul
shrl
jnp
mov
scas
fildl
add
outsb
xor
cmp
pop
idiv
mov
dec
popf
es
dec
pop
cmp
cltd
popl
sbb
in
aam
loope
sbbl
icebp
cwtl
mov
cwtl
insl
cmpsb
das
adc
xchg
add
fisttps
adc
add
roll
loope
lret
faddl
sbb
insl
fincstp
aad
xlat
sub
call
nop
aas
iret
adc
imul
sub
pusha
sbb
jnp
arpl
sub
xchg
iret
mov
xor
aad
jns
daa
cltd
leave
sbb
js
or
jle
dec
cmp
mov
rorb
sbb
mov
dec
in
jp
pop
pop
jne
jp
inc
push
inc
add
sbb
sbbl
iret
sbb
loopne
mov
mov
push
loope
mov
jnp
adc
jbe
lret
adc
insb
test
les
cmp
sahf
lods
push
outsl
jecxz
jle
into
dec
fists
push
ss
in
shrl
test
adc
sbb
in
scas
jbe
fidivl
cwtl
mov
xor
cmpl
pushf
push
cmpsb
lahf
dec
xchg
and
jmp
pushf
divl
bound
jbe
aaa
push
testl
jle
icebp
or
insl
pop
loope
cwtl
xchg
shll
sub
loope
ret
push
adc
lea
xor
sub
call
pop
cmp
loopne
dec
mov
and
aad
cmp
jb
mov
xchg
cmp
sbb
js
push
sbb
and
dec
cs
mov
out
cld
mov
push
loopne
stos
cmpsb
lret
inc
inc
loopne
pushf
cmp
sub
into
into
movsb
outsl
fsubr
aam
in
jmp
ljmp
sbb
or
jae
js
sbb
jg
in
rcrl
push
jo
fwait
nop
mov
mov
jnp
sub
clc
push
jne
jae
mov
push
jecxz
jecxz
shll
repz
loopne
or
clc
pop
cmpsb
rcll
xor
in
sub
dec
mov
dec
pop
das
lahf
mov
pop
arpl
xchg
out
movsb
ss
in
test
cmpsl
stos
inc
and
fisubrl
out
sub
or
test
lret
inc
or
lds
rorb
lods
pop
das
loopne
jne
icebp
mov
xchg
push
add
add
or
lods
adc
add
mov
outsb
sub
mov
je
pop
sti
push
dec
push
pop
jne
push
push
cmpsl
ljmp
adc
scas
rorb
add
lcall
mov
in
cmp
enter
fcomps
xchg
pop
cld
ss
jne
or
leave
lret
mov
dec
pop
scas
lea
cmpsl
movl
cs
xlat
add
out
rclb
mov
je
inc
add
push
test
xor
call
dec
mov
push
daa
lds
mov
jbe
mov
push
dec
inc
enter
xchg
and
fisttpll
push
cmp
sub
or
mov
je
pop
push
aam
mov
vpunpckhbw
jnp
jmp
or
je
and
scas
mov
fimull
mov
and
stc
mov
subb
popf
movsb
jl
and
cld
xor
fstps
xchg
xlat
mov
notb
rcl
push
hlt
in
xchg
push
shll
fisttpl
jle
dec
xchg
into
ds
test
test
leave
clc
mov
mov
xchg
cltd
lahf
add
cld
bound
stos
mov
insl
sub
std
sbb
lcall
in
sbb
in
inc
add
xchg
adcb
or
cmp
jge
arpl
lods
pop
mov
fstps
lahf
lds
or
cltd
jl
shlb
add
mov
cltd
and
push
ja
pop
and
add
ljmp
or
mov
inc
mov
cmp
mov
jne
jno
jge
cltd
sbb
cmpb
lcall
std
mov
jl
popa
scas
jno,pn
inc
push
pushf
push
fwait
mov
xlat
es
setae
out
pop
and
repnz
xchg
aam
shlb
sbb
iret
arpl
inc
and
call
stc
push
nop
dec
mov
or
xchg
in
aad
scas
push
pop
xchg
adc
xchg
mov
and
andl
shrb
pusha
aas
jbe
fldl
daa
xchg
sub
outsb
test
imul
aaa
jle
xor
mov
fcomps
cwtl
mov
roll
sarb
mov
jmp
addb
dec
cld
jne
inc
out
cltd
mov
mov
or
inc
out
fldl
mov
clc
cmp
js
mov
sub
hlt
testb
in
jle
into
mov
push
push
fidivl
and
popa
gs
adc
push
imul
out
push
add
ss
push
in
fcom
imul
scas
add
and
ficompl
aam
das
and
sub
and
jl
mov
pushfw
popf
lcall
adc
imul
mov
sub
mov
jge
jp
jl
sub
imul
jecxz
cmpsb
std
cmp
mov
adc
lods
push
sbb
dec
cli
jnp
jne
bound
rcl
cltd
dec
add
xchg
lret
mov
cmp
shll
ret
xor
jl
inc
ret
or
and
scas
xchg
push
and
repnz
jle
roll
jecxz
mov
insl
enter
std
addl
and
xor
icebp
inc
gs
add
inc
sub
and
mov
shrb
add
inc
mov
cld
mov
incl
mov
mov
jl
dec
jbe
xor
pop
cmp
pushf
inc
les
jp
adc
sub
mov
rcrb
push
jecxz
sbb
push
xchg
das
dec
test
jbe
or
push
sahf
xlat
imul
or
adc
rclb
fists
neg
lahf
sub
popf
sub
xchg
sarb
pop
lods
lret
push
outsb
orl
in
xchg
rcr
les
xchg
fwait
and
xchg
rclb
lds
push
test
shl
fiadds
push
fwait
mov
xor
dec
jb
sahf
jp
sub
fstl
fmul
dec
pop
movsl
pmulhuw
int
and
nop
mov
sub
rolb
scas
sub
jne
aaa
pop
ret
sbb
jae
mov
aaa
movb
dec
imul
mov
in
fcomi
pop
or
data16
repnz
mov
pop
out
add
rclb
stos
xchg
clc
push
shll
scas
aad
lods
dec
mov
jmp
stos
sbb
in
mov
popf
movsb
mov
xchg
lea
adc
ja
push
imul
nop
mov
cwtl
insl
xor
and
mov
popf
fistl
insl
lret
rorb
les
jmp
pop
shrb
sbb
jp
outsb
inc
push
int
orb
outsb
sub
roll
dec
inc
jb
mov
stos
xchg
push
rorl
leave
push
sub
and
imul
pop
sbbl
cmp
or
or
xchg
adcb
add
aad
clc
cli
pop
pop
jbe
mov
packsswb
xlat
cli
jns
add
sbb
jg
add
and
lahf
jae
ss
in
test
test
outsb
mov
mov
testl
sbb
mov
out
adc
push
cmc
and
bound
imul
outsl
add
push
or
inc
mov
adcb
cs
orb
pop
xchg
push
mov
daa
imul
add
out
pop
sbbl
pushl
sub
cld
mov
out
sbb
cmp
test
bound
mov
hlt
push
push
insb
ret
xchg
mov
xchg
in
push
pop
rcrb
nop
sbb
test
cmpb
jo
sub
test
lds
pop
xchg
push
xor
lods
loop
xchg
jno
aad
mov
and
cwtl
inc
les
sbb
pop
insl
lahf
cmp
sbb
lods
and
scas
jp
or
sub
out
push
add
bound
xchg
mov
mov
dec
cltd
mov
xchg
lods
mov
dec
push
repnz
push
cmc
sbb
dec
shrl
mov
xor
mov
fidivl
xor
daa
pop
pop
negl
insl
inc
pop
mull
imul
pop
lea
cmp
mov
pop
dec
into
xor
movsb
sbb
mov
dec
jp
mov
rcrl
pop
les
repnz
add
icebp
xchg
mov
xor
in
sti
inc
dec
xchg
out
mov
cmp
aad
mov
push
jl
fldl
loop
dec
incl
pop
and
adc
mov
fdivrs
filds
or
jbe
aam
repz
int3
adc
cmp
mov
outsb
ss
xchg
es
cmpsl
stc
add
xchg
or
dec
test
addr16
icebp
mov
lods
stos
inc
sub
mov
mov
add
into
xor
sahf
mov
pop
mov
push
push
stos
jno
and
roll
pusha
or
lcall
xchg
push
in
sub
mov
xchg
jp
stos
push
popf
nop
lret
mov
fists
stos
push
jnp
and
cwtl
cmc
inc
cmp
fwait
mov
sub
adc
mov
mov
std
scas
or
push
push
cmpl
insb
push
mov
rol
xlat
xor
fs
inc
ljmp
scas
push
lret
dec
or
cmp
sbb
add
jg
in
std
jg
negb
push
xchg
ss
cmp
pop
jb
jne
or
stc
push
lret
scas
add
cmp
mov
out
lock
or
or
out
mov
adc
mov
stos
fsubs
icebp
and
loope
jl
and
jae
mov
lret
xchg
bound
xor
sub
test
push
data16
sarl
fcoms
in
xor
mov
xor
jns
inc
cld
popa
inc
cs
push
and
mov
xlat
mov
loop
sub
dec
inc
cmp
mov
das
out
es
push
mov
lea
insb
push
ss
lods
or
mov
pop
jne
sub
jg
outsl
adc
add
popl
sub
push
cltd
rorl
xor
sbb
pushf
mov
nop
mov
jl
ret
cmp
out
arpl
cmc
and
daa
popa
adc
les
in
jnp
push
push
jb
cltd
lahf
pop
rclb
ffreep
out
sahf
mov
shlb
push
rorb
jae
cmp
mov
inc
mov
jp
jno
mov
push
repnz
sub
xchg
and
mov
int3
push
cmp
mov
lods
lahf
lock
xchg
sbb
adc
mov
push
in
in
es
jg
xchg
js
xchg
xorl
push
out
push
sbb
adc
stos
enter
inc
jbe
pop
jae
sub
enter
sbb
mov
test
dec
dec
mov
das
xchg
push
adc
sbb
or
pop
insl
and
loop
xchg
adc
dec
ljmp
test
sub
pop
out
data16
xor
and
sub
scas
sub
cltd
xor
inc
inc
out
sub
sti
pusha
mov
push
stc
loopne
push
fsubr
pop
imul
sbb
jno
and
insb
or
mov
mov
nop
or
inc
insl
inc
inc
sti
push
aas
jge
inc
and
in
inc
add
movsl
dec
mov
test
fstpl
mov
adc
mov
scas
outsb
jae
lds
push
mov
sbb
test
dec
iret
das
enter
and
xor
filds
jmp
jle
sbb
mov
arpl
ret
pop
xchg
pop
sbb
cmp
data16
cmp
outsb
sub
scas
ljmp
lods
loope
sub
cld
and
fwait
adc
dec
push
mov
inc
ja
sub
mov
mov
imul
cmp
outsl
mov
insb
test
jno
mov
repz
imul
push
or
sub
pop
cwtl
repz
fildl
inc
mov
gs
rcr
adc
and
orb
lods
insl
inc
pop
sbb
rclb
out
push
xor
arpl
sub
pop
push
imul
add
rcrb
decb
imull
jecxz
lods
cmpb
jecxz
adc
bound
push
and
bswap
fistps
sbb
push
or
daa
int3
xor
cmp
frstor
shl
jecxz
neg
cli
fistl
mov
sub
inc
dec
js
adc
mov
daa
ljmp
jns
in
cmpsb
lods
shll
mov
mov
jae
dec
xchg
out
fsts
je
push
hlt
or
xchg
sub
mov
sub
clc
push
sti
sbb
add
loope
js
mov
bnd
bound
pop
hlt
hlt
fldenv
bound
add
jne
fcmovne
shrl
push
call
in
pusha
cmpsl
push
test
mov
pushf
insl
shll
testb
sbb
sub
cmp
mov
pop
jmp
inc
or
aas
pushf
aaa
aas
or
test
push
xchg
loopne
aas
ret
sbbb
sub
cmp
cmp
push
cmp
or
addl
mov
adc
sbb
popf
push
sbb
fsubrs
mov
fisubrs
mov
scas
ret
gs
enter
in
loope
leave
cld
cmpsb
cs
loopne
or
lea
xor
sbb
or
jmp
lds
mov
dec
cmc
jb
out
ss
ds
mov
dec
dec
out
xor
or
imul
sbb
xchg
sub
mov
mov
sbb
out
inc
popf
sarl
pop
mov
rorb
mov
push
sub
and
jae
ss
test
mov
add
inc
jne
or
adc
cwtl
inc
lock
sbb
dec
out
out
cmpsl
jns
es
pop
push
pop
lret
and
test
dec
shrl
inc
nop
das
inc
loop
jno
dec
inc
mov
insl
inc
ds
jns
mov
fwait
out
or
stos
push
or
test
mov
clc
inc
inc
pop
sbb
jl
xchg
fstl
into
mov
mov
jb
jp
fnstcw
rorb
mov
jbe
and
push
int3
jae
mov
sbb
jl
dec
jl
sub
je
or
pop
daa
inc
ss
xlat
enter
rorb
sub
popa
cmp
js
pop
imul
rclb
cmp
mov
arpl
mov
lret
fildll
ljmp
in
add
sbbb
mov
sti
xchg
imulb
sti
lret
jbe
fldt
cmc
add
push
clc
sbb
dec
out
xor
bnd
cmpb
inc
ret
push
outsb
xor
fimull
aaa
rolb
xchg
pop
addb
cmpsl
call
stos
push
mov
jle
add
cmc
inc
mov
pop
xchg
mov
xor
ljmp
jp
sbb
call
lods
imul
adc
add
mov
fcompl
adc
bound
ror
enter
push
inc
rclb
push
out
dec
sub
icebp
inc
mov
jmp
xchg
push
xchg
or
sbb
lods
lahf
pop
jnp
mov
popf
in
xor
enter
pop
mov
sbb
add
inc
jbe
js
out
xchg
jp
push
scas
ret
dec
lahf
push
adcl
leave
hlt
icebp
out
aam
push
aam
test
sbb
mov
fcoms
addl
subl
add
xor
cmp
add
dec
inc
or
movsl
mov
xchg
xlat
das
pop
imul
out
mov
inc
xchg
daa
loope
cmpsb
dec
test
out
cmp
mov
mov
clc
pop
or
scas
mov
repnz
adc
pushf
mov
std
andb
frstor
addl
dec
nop
xchg
add
stc
cwtl
js
push
inc
in
out
stc
mov
outsb
cmpsb
cmpsl
push
and
ret
out
xor
mov
add
pushf
xor
push
xchg
mov
mov
cmp
xor
sbb
jle
jno
dec
jp
js
jbe
xchg
insb
adc
dec
imul
mov
xchg
mov
add
insl
pop
inc
cmp
xor
push
repz
cmp
sbb
lds
jg
jmp
fs
lds
push
js
or
lahf
jns
mov
clc
jno
pop
inc
outsb
adc
xchg
and
and
sub
loope
ss
push
ds
pop
push
jbe
shl
inc
mov
xchg
pop
push
inc
out
push
ror
push
adc
insb
or
shrl
icebp
or
push
cwtl
gs
xor
hlt
rcr
xor
std
cld
mov
jnp
cmc
inc
mov
inc
xor
mov
cmc
mov
mov
mov
xor
outsb
mov
lock
iret
sbb
mov
or
scas
or
mov
int3
sub
aad
mov
movsb
cmpl
insl
xor
add
cli
add
cwtl
xor
or
jne
fsubs
xor
and
bound
push
incb
or
jmp
adc
mov
sbb
daa
addl
fimull
xor
mov
push
cs
fs
out
into
xchg
dec
pop
pop
movsb
xor
negb
inc
jl
pusha
int3
xchg
xlat
stc
dec
mov
ss
jmp
loopne
test
cmpb
pop
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
popa
js
dec
inc
pop
xor
cmp
or
sbb
call
fdivl
mov
jl
dec
push
xor
xor
adc
sbb
call
ret
and
insl
idivl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
