shlb
bound
jb
inc
mov
push
out
lea
pop
jl
pop
push
fstps
out
in
inc
jno
jne
push
xchg
mov
add
add
fcoms
bound
data16
clc
mov
test
lret
cmp
cmp
mov
jge
fwait
sbb
add
dec
dec
outsb
mov
or
dec
test
jmp
xlat
aaa
push
xor
fucomp
mov
daa
or
andb
daa
dec
pusha
push
aaa
cwtl
lcall
add
mov
out
add
outsb
dec
fldcw
add
push
push
cmpsl
cs
out
pop
jno
in
pop
mov
mov
out
aas
leave
mov
sub
mov
push
adc
hlt
cs
sub
jnp
outsl
sub
jmp
add
lea
sbb
test
movsb
xor
push
pop
cwtl
daa
adc
nop
aas
imul
pop
push
add
dec
jecxz
add
fnstenv
cmp
push
mov
lds
repz
add
lods
test
hlt
mov
and
jmp
jg
mov
mov
jp
mov
in
dec
int
clc
stos
fwait
std
mov
repz
adc
add
jp
inc
push
push
mov
mov
sbb
dec
cmp
mov
repz
xor
scas
lret
cmpsl
test
sub
adcb
lret
sub
lea
and
lea
stc
inc
ret
subl
cmp
outsl
test
jns
cmp
push
jmp
ljmp
sbb
xchg
adc
jmp
sub
xchg
push
sti
sbb
les
inc
cltd
mov
xor
inc
rcrl
in
or
and
jp
push
push
xchg
pop
movsb
inc
mov
shll
fldenv
cmp
ljmp
xchg
fistpll
fldcw
lods
lods
dec
xor
cmp
mov
cmp
mov
rolb
cmp
cwtl
lock
je
or
imul
clc
cmp
int
and
test
mov
lock
cmp
pop
inc
mov
outsb
cmpb
cmp
jmp
hlt
dec
cli
or
mov
std
inc
adc
jge
mov
add
mov
cmp
fists
add
jnp
stos
sahf
rorb
push
sub
gs
and
sbb
mov
fcompl
sahf
jp
jl
sub
sub
jp
mov
shl
pop
pop
sub
shl
repnz
mov
pop
jbe
enter
pop
test
mov
mov
sub
pop
xor
inc
add
cmp
je
xchg
xchg
xchg
and
outsb
mov
mov
pop
in
sub
loop
jnp
adc
jl
icebp
pop
aam
xor
xchg
mov
mov
xchg
xor
or
push
and
xlat
sub
xorb
lcall
push
mov
pop
lock
outsb
pop
lcall
xor
fisubs
xor
insb
lcall
fs
xchg
push
sarl
mov
hlt
fidivs
adc
bswap
mov
adc
insb
cltd
pop
stos
mov
adc
insl
repnz
and
mov
xor
or
mov
lcall
xchg
add
je
jle
adc
ds
leave
cmp
cmpb
icebp
out
inc
insl
ds
cmp
xor
push
add
jge
adc
popf
fiaddl
add
fsubl
ficoml
xchg
lahf
jnp
or
cmp
mov
pop
enter
dec
or
mov
scas
jp
in
mov
jne
push
jne
xor
test
adc
inc
lret
in
fnstsw
lods
push
mov
fdivl
or
movsb
or
loope
jno
inc
test
mov
cli
mov
mov
insl
push
test
mov
inc
rcll
icebp
jbe
sahf
sar
mov
mov
or
xchg
lret
mov
push
sub
jnp
mov
push
lock
scas
enter
adc
push
pop
int3
ljmp
mov
xchg
cmc
loopne
jmp
mov
int3
aam
imul
in
inc
jl
add
cmp
popa
cmp
in
roll
cmpsb
out
hlt
mov
in
icebp
jae,pt
arpl
or
mov
jge
loop
sti
pop
test
loope
ret
aas
jecxz
popa
inc
call
lods
inc
fsubrs
lods
stc
add
mov
arpl
mov
mov
rcrb
into
pop
cmp
cld
popa
fldl
jo
aas
ljmp
mov
js
popf
xor
scas
sbb
dec
mov
sub
cltd
aam
mov
jb
jle
lahf
push
pushl
mov
push
mov
sbb
dec
fimuls
insb
in
jmp
adc
add
and
aam
mov
in
out
arpl
sbb
mov
xchg
push
insb
add
test
clc
xchg
add
push
mov
mov
mov
test
dec
outsb
enter
jl
sti
xchg
stos
xchg
outsb
sbb
push
pushf
pop
cmp
loopne
call
fcmovbe
mov
lods
push
into
mov
jl
loopne
lea
push
dec
test
scas
cmp
daa
fwait
jns
ds
inc
pop
shr
adc
fwait
sbb
mov
xchg
xor
push
stc
arpl
jmp
xor
cmp
jmp
test
jne
lret
data16
push
paddsw
push
rolb
ret
test
in
cwtl
mov
test
pop
loopne
mov
vmovntps
mov
xchg
roll
adc
jbe
sbb
sub
lret
in
decl
jbe
sub
push
je
mov
lret
ja
sub
dec
shlb
test
jne
std
cmp
lret
inc
bound
jb
dec
push
add
sahf
cli
jl
and
aas
inc
xor
sbb
lock
out
sarl
push
jle
test
loope
les
mov
add
xor
mov
sti
cld
fimuls
outsl
aam
pop
or
dec
out
decb
jnp
and
xor
xchg
leave
imul
les
out
and
jle
xor
ds
mov
das
pusha
dec
pop
sub
xlat
xorb
rclb
cs
xor
dec
sub
cmp
into
leave
mov
sub
mov
and
enter
punpcklwd
adc
jo
jmp
jl
mov
lods
inc
clc
jl
jge
sub
cwtl
clc
out
dec
data16
jo
cmp
and
outsb
add
sbb
js
movsl
and
fadd
mov
pop
push
push
ret
sub
pop
test
sarb
sbb
lret
xor
sahf
imul
and
jle
jle
cmp
xlat
jg
aaa
jbe
outsb
scas
jg
inc
cli
enter
mov
insl
int3
dec
pop
xchg
test
mov
push
sbb
loope
mov
gs
mov
xchg
mov
xchg
jbe
loope
sub
lcall
in
out
pop
mov
jl
scas
test
mov
fcmovne
sbb
inc
push
jg
aam
addl
jecxz
and
xchg
cmpsl
pop
repnz
lahf
mov
shll
shl
sub
xchg
shr
popl
mov
sahf
xorl
mov
adc
dec
je
popa
xor
push
nop
in
fisubl
xlat
out
shll
jne
fcmovbe
mov
cmp
pop
ret
mov
jle,pn
sub
clc
andps
xchg
imul
fidivl
dec
dec
pop
cltd
cmp
mov
fldenv
cli
fcoms
jg
sbb
mov
xor
rcll
push
pop
adc
lds
setb
lods
mov
aad
in
dec
or
aad
sbb
ss
and
imul
loopne
inc
inc
imul
xor
mov
fcmovu
cltd
dec
pop
lea
fldcw
add
test
loop
rcr
ret
ja
fmul
ja
push
mov
inc
in
jae
test
insb
subl
mov
lods
cmp
inc
and
in
decl
cmp
fistpll
xchg
mov
popf
inc
adc
inc
xchg
and
push
js
fwait
imul
cmpl
jae
inc
cmp
nop
dec
in
sbb
mov
loopne
lret
xchg
inc
insb
fmull
xor
sub
jecxz
add
xchg
aam
fisubrs
dec
cmp
mov
pop
call
ljmp
mov
sbb
xchg
addl
popl
ficoml
test
lcall
mov
mov
jg
arpl
jb
mov
lahf
arpl
mov
inc
push
aam
mov
adc
xchg
les
sub
fiaddl
sub
js
mov
inc
dec
sub
mov
dec
rcl
jl
cli
jg
test
dec
add
cld
ja
das
mov
cmp
aam
rorl
push
push
dec
shrl
dec
jle
mov
pop
mov
jmp
jno
mov
stc
push
cmc
fmuls
xchg
rorb
movsb
and
mov
jmp
ss
movsl
pop
in
scas
andl
mov
lock
in
xlat
movsl
sub
je
dec
inc
aad
loop
adc
push
jp
or
sub
add
jne,pt
leave
ss
adc
out
int3
arpl
into
inc
push
lods
cmpsl
or
hlt
std
add
mov
scas
call
sub
mov
adc
add
into
je
pop
sbb
inc
iret
data16
mov
in
ret
push
stc
add
add
enter
iret
mov
xor
fildl
aas
in
in
dec
call
mov
iret
lahf
dec
std
push
push
push
test
xor
ret
pop
mov
jmp
cmp
dec
mov
sbb
rcrl
je
add
push
imul
das
scas
cmp
and
jl
insl
ret
lock
repnz
mov
jbe
test
mov
mov
mov
scas
pop
ds
dec
or
and
roll
cmp
jge
sub
push
sbb
add
adc
lock
add
or
cmpsl
add
jge
hlt
lock
xchg
add
pop
ret
pushf
jg
xor
ret
stos
popf
pop
jp
and
jmp
lock
fstl
push
push
les
iret
cmp
leave
or
sbb
or
rol
cmpsb
jo
test
fists
xchg
loop
imulb
leave
pop
jg
loopne
push
push
lods
mov
cltd
bnd
push
sbb
dec
mov
neg
push
mov
sub
mov
loope
and
mov
mov
ret
sbb
mov
stos
jo
xchg
popa
divl
dec
cmp
fcoms
pop
js
adc
add
pop
stos
inc
push
call
jo
mov
std
or
or
imul
jno
int
xchg
inc
sbb
xor
and
add
ja
mov
into
push
mov
orb
cld
out
lret
icebp
ret
pop
jg
cmc
loop
mov
aaa
push
in
hlt
xlat
xchg
movsb
pushf
add
jae
xchg
cmp
js
leave
xor
imul
in
cmp
xor
mov
cli
subl
sub
or
mov
inc
popa
adc
jl
daa
aas
outsl
jnp
aad
cltd
sbb
xchg
shrb
lea
ret
int
arpl
mov
mov
faddl
xchg
sbb
mov
dec
cmp
adc
sub
inc
sbb
test
pushf
cmp
call
int
test
std
sahf
add
inc
xchg
movsb
rol
adc
sti
in
test
ret
adc
icebp
loop
mov
mov
repz
int
mov
mov
pop
out
ficompl
sahf
xor
cmp
call
and
fstpl
sbb
repnz
xor
ret
mov
mov
push
das
pop
fucomi
insb
daa
xlat
or
or
call
cs
je
sahf
push
into
pop
in
mov
ret
push
mov
push
add
xchg
sarb
inc
sbb
test
mov
lret
test
mov
mov
cld
xor
sbb
popf
sub
arpl
shrl
jnp
sbb
xchg
jns
lret
pop
mov
xchg
je
lods
ret
lds
and
incb
dec
xchg
sahf
daa
mov
add
push
dec
push
and
cmp
sarb
adc
shl
adc
aam
mov
xchg
leave
lea
ret
dec
pop
inc
xchg
pop
xchg
lods
push
std
out
cli
inc
ljmp
fidivl
pushf
xor
mov
mov
dec
cmc
mov
insb
lcall
mov
jbe
inc
dec
aaa
inc
jmp
xchg
or
stos
stc
push
divb
fisttpl
sbb
iret
xor
cmp
daa
popf
repnz
cmp
xlat
roll
mov
out
ja
add
pop
shrb
pop
lods
aad
nop
jg
imul
push
rcrl
pushf
call
mov
or
mov
bound
movsl
sub
sub
mov
add
les
cs
inc
push
mov
add
dec
adc
mov
adc
adc
and
xchg
push
cld
mov
jge
ret
sti
push
mov
or
push
pushf
fnstcw
popf
mov
sbb
xchg
jl
push
mov
pop
outsb
cmp
dec
inc
inc
inc
push
arpl
push
js
int
leave
jge
pop
ss
pop
sahf
fistl
mov
dec
add
ljmp
aad
push
jg
mov
sbb
push
inc
adc
lock
insb
mov
scas
popf
lods
data16
pop
je
loopne
push
pavgw
testb
mov
scas
push
inc
push
adc
hlt
cld
xlat
imul
fcoms
movb
fdivrs
xchg
and
test
pusha
or
mov
icebp
inc
jp
pop
jnp
in
add
bnd
sarb
mov
and
in
jo
into
movsb
jp
dec
data16
mov
pop
ds
cmp
jmp
xchg
cmpsl
roll
lock
fcompl
mov
dec
clc
push
cli
sti
sbb
sbb
mov
ds
adc
sti
movsl
fmull
pop
push
mov
cwtl
sbb
push
sbb
jp
push
inc
add
cli
iret
adc
sub
mov
sbb
pusha
outsl
jmp
lret
test
lret
pop
idivl
lds
xor
and
xchg
test
push
push
aas
inc
add
fdivl
adc
xchg
mov
iret
sarb
xchg
cmp
xchg
or
push
jbe
push
mov
mov
mov
xor
add
fcmovb
aad
lcall
iret
test
push
and
in
test
divb
cmc
or
imul
sti
imul
jle
or
mov
adc
popa
pop
sub
lcall
jne
or
mov
inc
pop
dec
imul
add
pop
iret
aad
xchg
pop
out
inc
daa
xorl
out
lock
pop
sub
hlt
stc
mov
mov
and
ret
mov
dec
add
adc
test
mov
clc
orb
cmp
sbb
sub
popa
push
testl
mov
jbe
cmp
fisttpl
and
mov
fmulp
shr
sub
call
sbb
shr
cmpsl
outsb
sbb
sarb
lcall
jno
jge
sahf
mov
xchg
daa
loop
mov
icebp
orl
int3
cmpsl
mov
aam
enter
pop
jno
or
mov
daa
popf
inc
xor
jp
mov
test
jg
xchg
insl
shlb
hlt
or
sbb
push
dec
or
out
sbb
shr
sti
pop
push
xor
mov
mov
mov
mov
sbb
daa
sbb
adc
ljmp
jmp
lret
push
jge
rorb
sub
call
pushf
adc
xchg
scas
jne
xor
addb
sbb
jbe
lret
inc
fdivs
gs
ret
mov
clc
xchg
fcmovu
int
orb
sbb
imul
jmp
roll
cmp
add
xchg
mov
fxch
and
scas
fdiv
xchg
fs
mov
lcall
cmp
xor
add
testb
test
es
mov
movups
loop
lea
dec
sbb
sbb
lahf
pop
rclb
sti
int3
sub
mov
fildl
mov
push
push
addr16
cmc
fbld
jmp
pop
popf
mov
shll
fwait
daa
lahf
and
sub
adc
push
sbb
shl
mov
pop
push
inc
cmp
mov
pop
and
jge
int
pop
jmp
jecxz
lods
cmpsl
xchg
sbb
and
adc
ret
ljmp
push
jge
mov
imul
stos
testl
daa
xlat
cmp
and
add
pop
lahf
in
xor
popf
push
rol
xor
mov
pusha
mov
adc
sub
outsb
cmp
push
sti
nop
lret
push
adc
lods
inc
push
mov
push
pop
out
xchg
jbe
and
sub
jmp
test
dec
push
pop
cld
pop
dec
cmp
adc
sub
inc
xchg
jg
aam
dec
mov
xchg
dec
xchg
mov
nop
lea
mov
sbb
pop
aas
adc
and
sub
fmul
sbb
scas
mov
pop
mov
inc
in
xchg
inc
in
outsl
jae
lods
or
sub
mov
inc
push
adc
jge
mov
push
cmp
outsb
cli
cmp
xor
pusha
jl
xor
popf
fisttpl
mov
in
jnp
imul
mov
sub
pop
jae
xor
xchg
iret
cmpsb
xor
mov
pop
pop
add
or
sub
fbstp
cmp
inc
adc
xchg
ret
into
mov
mov
call
jmp
inc
cwtl
xchg
stos
les
gs
cld
loope
scas
push
add
or
sbb
jecxz
add
inc
pop
xchg
sbb
inc
lcall
push
out
pop
xchg
out
xchg
adc
xor
outsb
dec
jg
lret
xchg
add
pop
dec
sbb
push
inc
sbb
jge
sub
cmp
iret
inc
out
test
jg
xchg
lock
mov
in
xor
jae
and
xchg
mov
lods
imul
jns
orl
dec
xchg
dec
jmp
mov
push
arpl
pop
mov
cmp
pop
xchg
cmpsb
packsswb
leave
push
mov
pop
xor
es
inc
sub
data16
loopne
testl
push
xchg
repz
lods
push
xchg
adc
xchg
fildl
jbe
jno
jl
shll
ljmp
les
mov
lock
push
lods
add
lods
outsb
cmp
push
xchg
jg
jns
pushf
jno
cmpsb
test
les
ss
jo
push
sub
cs
xor
and
es
dec
push
adc
push
cmpsb
movsl
fcoml
ja
sbb
clc
in
mov
push
test
imul
daa
mov
imul
nop
jae
ja
mov
inc
fs
idivb
push
inc
cmp
ss
inc
inc
rcll
or
sbb
mov
xor
dec
xchg
mov
aad
out
imul
push
pop
fisubrs
and
sti
dec
jle
mov
xor
mov
out
add
shl
add
xchg
mov
andl
enter
sahf
pop
and
loop
lock
fmull
push
or
fdivrp
cli
cmc
movsb
inc
mov
shl
push
add
lcall
pusha
xchg
loope
dec
dec
and
xchg
xchg
sbb
mov
push
popf
pop
ficoml
inc
xor
dec
xor
mov
jg
inc
add
movb
sti
jl
cmpsl
fiadds
lcall
outsb
mov
adc
push
enter
dec
xlat
mov
or
mov
or
xor
mov
mov
ds
test
pop
int3
das
in
mov
int3
mov
add
subl
into
loopne
xchg
movsb
movsb
xchg
adc
push
cwtl
sub
or
out
test
push
dec
fcmovb
or
in
es
outsl
nop
push
sti
inc
setnp
cmpsb
sbb
xor
mov
addl
inc
sub
mov
or
std
lahf
icebp
out
mov
cs
das
hlt
je
rorb
lods
inc
mov
mov
add
sbb
and
pop
pop
out
and
pop
xchg
loope
dec
push
outsl
lds
and
and
sahf
push
movsl
lock
cmpl
dec
frstor
adc
lods
jns
inc
pop
mov
dec
fimuls
add
and
das
inc
popf
repnz
in
aam
jle
cmp
and
int
fwait
mov
ret
xor
push
pop
nop
mov
push
or
mov
shll
int
ret
xor
xor
xchg
mov
insl
jecxz
push
lret
pushf
mov
movl
imul
sbb
sub
xor
icebp
sbb
loop
fisubl
mov
jnp
mov
andnps
push
clc
dec
jae
mov
push
dec
xlat
adc
lds
cmpsb
aad
add
and
jle
je
cwtl
gs
mov
cmp
cwtl
cwtl
sub
fidivrs
in
sbb
mov
cmp
sbb
add
mov
rclb
int
mov
movsl
test
test
inc
testb
outsb
jle
xor
xor
ja
pop
in
inc
cmp
test
mov
fwait
aas
lea
jae
add
xor
lea
xor
sub
in
mov
mov
jge
in
arpl
push
subb
ret
push
imul
cmpb
pop
push
ja
lods
inc
xorl
or
add
inc
inc
popf
or
cmp
jns
jns
xor
adc
lret
xchg
sbb
mov
pop
push
cwtl
mov
xlat
iret
xor
int3
dec
das
mov
icebp
out
das
push
mov
xor
jns
jno
jbe
jnp
jmp
or
mov
xchg
imul
jmp
les
rcrl
mov
ret
faddl
shl
data16
xchg
jmp
leave
or
dec
and
dec
dec
jne
jecxz
cmpl
mov
lret
je
jo
stos
in
stos
jo
or
outsl
jne
push
push
stos
loope
sbb
mov
mov
ror
repz
mov
or
or
jns
push
divl
nop
inc
les
inc
and
dec
mov
in
push
sub
xor
push
call
cld
jbe
lret
cltd
xor
icebp
lret
loopne
fistpl
jo
movsb
jnp
andl
mov
in
test
in
fisttpll
stos
scas
pushfw
pushf
inc
cmp
push
jo
scas
or
in
xchg
xor
adc
loope
push
sbb
mov
push
sbb
mov
loopne
ss
jg
lcall
int
addr16
and
push
add
cmp
test
in
xchg
fwait
lret
add
pusha
sub
movsb
jns
sub
imul
push
sbb
add
stos
dec
movsb
mov
fsubrp
pop
ss
cs
insl
ror
jne
call
in
cmpsl
jle
mov
out
cld
pop
sub
nop
loopne
clc
ds
inc
add
fdivr
sbb
xchg
adc
divl
adc
adc
pop
repz
mov
je
or
mov
inc
mov
pop
sar
xchg
std
aam
cmp
mov
mov
int3
outsl
mov
dec
xor
xor
cmp
mov
adc
sub
or
icebp
push
xor
jno
es
pop
lods
repz
lds
xor
stc
mov
cli
fstps
test
adc
push
aad
rcll
lds
decl
mov
lret
je
sbb
stc
outsb
mov
data16
sbb
stos
xlat
ja
xchg
mov
adc
xchg
cmp
push
adc
imul
ret
ljmp
sbb
gs
cs
push
mov
movsb
lea
arpl
or
pop
dec
add
rclb
orb
xor
pop
mov
mov
ss
data16
sub
mov
sub
jp
xor
push
in
xchg
ds
jae
test
jmp
pop
cs
xor
rcr
mov
xor
notb
bound
outsb
aas
jo
out
mov
push
mov
jl
adc
gs
scas
xlat
cwtl
jp
mov
data16
cmp
ss
iret
jle
inc
arpl
add
and
enter
sbb
and
js
sbb
imul
add
dec
mov
cmp
pop
testb
dec
shl
rol
jg
xor
sub
popf
in
jne
out
push
xor
inc
jb
fs
repz
or
sub
mov
dec
iret
loopne
loopne
ljmp
push
jle
or
sub
mulb
loope
cmp
dec
in
idiv
out
mov
test
cmp
pop
mov
dec
mov
repz
xor
mov
sbb
xchg
repnz
es
loopne
icebp
mov
push
hlt
inc
testl
ffree
mov
dec
push
pop
adc
fwait
rcr
push
mov
sti
adc
out
adcl
mov
test
int
xchg
adc
inc
es
push
insl
dec
outsl
or
dec
cmpsl
sahf
jl
in
cmp
pop
sbb
outsl
mov
cmp
cmp
adc
xlat
sub
int
sbb
cli
mov
ret
inc
mov
sub
mov
pop
data16
sbb
and
mov
jg
sub
mov
push
shrb
lret
imul
leave
pop
xor
nop
sbb
xor
aam
jmp
es
xchg
dec
jg
movsl
test
adc
imul
aas
adc
jp
lar
je
xchg
mov
insl
mov
outsb
dec
inc
push
daa
push
xchg
cmp
mov
inc
xchg
cltd
dec
loope
enter
clc
scas
xor
fidivl
es
mov
and
fs
push
adc
or
mov
push
lods
add
and
jns
pop
sbb
fcomps
in
push
clc
mov
adc
das
lret
xorl
mov
cmpl
xor
int3
sahf
movsl
divb
stos
dec
pop
jl
cmpsl
and
imul
aam
lret
and
int3
enter
mov
jl
push
mov
stc
mov
xor
lods
mov
jnp
lret
loope
add
mov
and
fldenv
push
ja
xor
xchg
dec
aam
add
dec
scas
inc
dec
enter
xor
jns
xor
push
pop
add
aam
jne
loope
stos
cmpsl
adc
test
mov
sub
xor
js
shlb
sub
pop
xchg
pop
xor
inc
mov
jb
xchg
sbb
pmaxsw
jge
jmp
stc
lea
loope
or
data16
scas
in
clc
fdivrs
dec
xlat
and
cmp
pop
xlat
imul
push
repz
inc
aam
out
xor
cmp
jg
mov
js,pn
or
aad
xchg
mov
aad
cvtps2pd
mov
js
loop
mov
sub
inc
or
jg
iret
int
jb
iret
lret
aam
fisubrl
and
ret
xchg
cld
and
stc
push
das
std
jmp
sbb
cs
jb
sub
js
inc
push
adc
repnz
test
or
fmull
mov
ds
popa
sbb
xor
mov
cbtw
push
sbb
iret
cmpsl
jecxz
xchg
mov
adc
jo
hlt
fstpt
push
aas
in
decl
push
bound
add
stos
mov
lods
add
test
lds
stc
adc
cmpsl
mov
mov
aad
lcall
js
add
xchg
xorl
dec
test
dec
xchg
mov
ret
add
and
das
mov
dec
push
loopne
mov
call
das
outsb
cltd
mov
push
xchg
outsb
xorl
xchg
dec
gs
push
fs
testb
dec
pop
sbb
or
sbb
aam
test
mov
dec
xchg
mov
adc
pop
adc
sub
das
cld
xor
negb
adc
lods
xchg
pop
in
fstpl
adc
aad
test
push
jle
push
dec
aaa
ds
mov
push
rorb
or
enter
xchg
xor
mov
jns
sar
adc
out
js
test
jmp
aad
adc
inc
fnsave
adc
loopne
aas
std
cli
iret
gs
pop
xor
int
jnp
add
mov
xor
mov
aas
xchg
cld
jmp
cli
lret
dec
cmc
mov
fwait
mov
and
lds
xchg
fldt
add
in
imul
push
dec
outsl
xor
addb
outsb
mov
enter
pop
dec
aas
aaa
xchg
inc
pop
pop
mov
dec
xchg
adc
jbe
addb
pop
icebp
cmp
sbb
mov
jg
data16
lods
js
pusha
std
pop
in
push
addb
inc
lods
mov
lret
outsl
mov
adc
fisttpll
push
jecxz
es
mov
jbe
lahf
xor
jl
bound
inc
jl
pop
jle
fcmovnbe
push
jbe
add
sbb
addr16
cmpsb
and
insb
idivb
bound
pop
mov
movsb
mov
mov
fildl
out
inc
push
test
xor
push
dec
add
rorl
mov
fwait
cwtl
imul
and
lea
in
aas
mov
pop
push
cmp
mov
fadd
loope
stos
loope
dec
mov
mov
enter
xchg
sbb
push
dec
std
inc
mov
int
into
jne
ja
jl
cld
xor
imul
or
jecxz
psllw
sub
jnp
test
jne
pop
pop
out
aas
adc
outsb
mov
andl
fstpl
xor
cltd
push
xor
lret
imul
xchg
insb
lods
xchg
sbb
or
adc
hlt
dec
mov
pop
inc
xorb
push
jecxz
jg
mov
clc
or
mov
xor
nop
fmul
enter
ret
pandn
xchg
lods
lret
mov
and
mov
sbb
mov
sbb
outsb
ss
jnp
mov
pop
pop
xchg
test
cmp
insl
sub
das
and
mov
fsubp
lods
sub
xor
int
sahf
xchg
xor
pop
sub
in
sbbb
mov
push
das
xchg
or
adc
movsb
stos
leave
mov
mov
or
sti
in
ljmp
ds
arpl
xchg
shl
popl
xchg
mov
sub
cwtl
jne
sub
mov
jne
loope
add
hlt
int
fs
dec
mov
mov
outsl
sbb
mov
jb
cmpb
lods
adc
jp
aaa
add
add
sub
adc
mov
dec
jbe
arpl
push
mov
xchg
push
enter
pop
mov
mov
cmp
cmpb
idiv
in
pop
or
or
pop
in
ds
adc
mov
jl
popf
mov
ds
xor
imul
call
push
div
lods
and
pop
add
out
push
push
lea
xor
and
adc
or
push
pop
push
aad
call
pop
popa
or
lea
dec
rorb
rolb
mov
in
adc
js
sbb
repnz
jl
cmpsl
jle
mov
sti
add
push
inc
pop
dec
add
sbb
jb
ds
jecxz
and
inc
out
xchg
loope
clc
inc
gs
lods
outsb
mov
jg
pop
lahf
clc
out
cmp
fs
or
pop
mov
add
pop
xor
into
xchg
jae
movsb
add
mov
xchg
mov
fwait
mov
adc
mov
pop
dec
call
cmp
stos
or
out
add
xchg
nop
lret
sbb
cmc
lock
push
insb
xchg
add
push
daa
mov
push
or
bnd
popf
and
std
and
lock
inc
adc
pop
push
adc
cs
cmp
cmpsl
sub
mov
and
es
lret
lds
jmp
xlat
stos
cmp
dec
push
or
jae
sub
lret
push
jb
or
out
xor
notl
jl
insl
add
push
cmp
in
popa
cmpsb
xchg
test
sub
decb
pop
mov
stc
aad
sub
mov
je
dec
mov
fildll
jnp
aam
dec
push
push
push
adc
cld
add
xor
or
lahf
xchg
ret
test
xchg
sbb
or
push
xor
lahf
sbb
movsb
mov
cmp
push
test
adc
and
sbb
in
cld
mov
mov
mov
pusha
pop
xor
stos
xchg
outsl
into
or
lock
xchg
subb
mov
repz
adc
outsb
popa
adc
cmp
aaa
jns
sbb
cmp
rcrb
in
test
jns
push
movsb
push
push
jae
mov
pushf
jecxz
mov
loopne
in
je
dec
inc
int
adc
adc
sub
stos
add
pushf
stos
ret
out
imul
ja
les
out
in
xor
cmp
mov
jne
cmpsl
mov
and
outsl
fs
xchg
push
in
adc
test
fistpl
or
jne
mov
add
and
mov
in
jbe
lea
lahf
fstpt
xchg
bound
aad
nop
cwtl
and
pop
mov
sbb
xorb
jg
pop
adc
sbb
xor
fidivrl
mov
mov
vpmaxsw
rol
mov
enter
repnz
sub
mov
cmpsl
mov
bnd
adc
jecxz
nop
push
adc
sbb
stc
inc
dec
cmpsl
pop
sbb
adc
xchg
in
rcl
mov
sbbb
loopne
mov
in
fs
inc
je
sbb
dec
mov
outsb
data16
enter
sbb
mov
movsw
mov
out
mov
in
daa
mov
xchg
xor
mov
jge
mov
dec
ss
or
or
mov
sub
lds
je
jle
dec
inc
iret
sarb
cmpsb
jo
cmp
or
lcall
in
movsl
ljmp
mov
cs
jmp
or
mov
into
adc
lret
data16
rolb
shl
pop
pop
dec
xor
xor
imul
jp
loopne
aam
xchg
xchg
and
mov
sub
je
push
xor
sbb
and
pop
jns
or
mov
cld
lcall
jae
sub
sub
sbb
dec
add
stos
test
fcoms
repz
test
and
add
and
sahf
sbb
lahf
mov
pop
pop
jae
push
pop
and
loopne
inc
ret
mov
mov
mov
push
mov
and
mov
or
rclb
mov
cmp
pop
mov
mov
cltd
inc
test
mov
mov
out
dec
push
dec
inc
jl
enter
xchg
daa
jmp
jbe
xchg
lds
inc
xor
mov
inc
pop
in
sub
stc
lods
xchg
adc
or
roll
and
mov
pop
aaa
jge
mov
out
inc
out
fwait
out
xor
sbb
add
push
xor
movsb
aas
jno
mov
in
popf
fisttpll
dec
mov
fisubs
or
mov
jmp
lret
add
mov
or
and
mov
insl
data16
test
xor
sti
dec
rolb
or
push
sbb
push
movsl
push
add
xor
mov
sub
lods
push
xchg
cwtl
icebp
aaa
fcom
mov
pop
xchg
leave
jle
hlt
xor
mov
icebp
add
inc
rorl
imul
popf
push
add
inc
testl
arpl
enter
fs
in
sbb
xlat
adcl
push
mov
scas
mov
das
lods
test
fnstsw
test
int
push
jecxz
shlb
push
in
add
fs
pop
out
int3
divl
inc
cli
mov
jno
adc
lret
ret
mov
push
mov
call
sub
cmp
lcall
xchg
lock
add
mov
jns
mov
add
jge
es
imul
lcall
inc
and
xchg
aaa
in
mov
mov
icebp
xchg
bnd
dec
push
jo
or
jp
stos
mov
mov
add
inc
jecxz
aaa
inc
loopne
and
xor
pop
mov
xchg
popa
mov
fwait
push
xor
insb
sahf
adc
test
loop
xchg
xorb
cwtl
es
ret
push
dec
loopne
repnz
cmc
test
xchg
negb
fldt
adc
dec
clc
push
pop
or
sbb
or
cld
stos
ret
dec
jg
xchg
add
clc
dec
ror
insl
stos
adc
jns
push
sub
decl
stc
addr16
ret
inc
push
andl
ss
jg
cmpb
xchg
pusha
pop
adcl
or
push
dec
leave
jg
icebp
mov
or
push
pop
pop
sub
mov
jl
int
pop
jne
add
mov
or
fldcw
pop
sbb
cmc
out
cmp
jae
dec
mov
add
xchg
or
xor
xlat
sub
in
fisubs
stos
ljmp
dec
mov
cwtl
lds
dec
enter
ljmp
movb
jb
adc
jbe
out
lock
jns
insl
cli
sub
cmpsl
inc
mov
mov
addr16
je
adc
pushf
push
or
mov
dec
data16
shr
ljmp
xor
fimull
ds
outsb
ds
loope
and
or
jbe
jne
jp
xchg
mov
lcall
fdivrl
insl
dec
std
inc
xchg
mov
jecxz
inc
dec
sbb
lea
fmuls
cli
jnp
ss
lods
xor
in
add
insb
movsb
in
pusha
dec
cmp
xor
add
mov
in
mov
sbb
jns
mov
shrb
jb
mov
jnp
cld
out
fnstcw
push
or
or
cmp
jae
clc
out
decl
cmova
mov
mov
cmp
push
into
inc
cmp
pop
cmp
xchg
iret
add
ljmp
push
movsl
roll
sub
mov
push
dec
dec
out
xchg
daa
xor
add
adc
fisttpll
push
or
repz
pop
cmp
popf
mov
popa
cmp
dec
sbb
mov
icebp
push
cmp
xchg
push
and
pushf
dec
xor
pop
leave
cmc
mov
sbb
sbb
and
mov
out
repnz
cwtl
adc
movsl
jnp
cwtl
pop
xor
insb
jno
jb
jle
loop
punpckldq
xor
cmp
mov
inc
push
push
push
sub
pop
sbb
dec
fsubrl
or
sar
push
fsubr
in
addr16
leave
fisttps
xchg
mov
cmc
nop
adcl
xor
jl
mov
fidivl
mov
aad
cs
loop
mov
push
fdivrp
test
daa
dec
mov
test
rol
inc
jbe
inc
mov
mov
adc
ss
leave
sti
cmpsb
cltd
negb
xchg
or
xchg
push
decb
inc
mov
or
arpl
pop
dec
mov
int
push
xchg
cmpsb
and
xchg
xor
cmpsl
sbb
lds
mov
mov
jb
xchg
xor
insb
faddl
mov
decl
jp
popa
mov
rcl
xor
les
xor
and
jecxz
out
psrld
fstpl
stos
push
lret
adc
cmp
icebp
mov
lret
push
or
cli
push
mov
dec
sbb
xor
push
jo
leave
in
and
jmp
push
test
jnp
and
pop
xor
inc
scas
cltd
rclb
ljmp
mov
xor
shll
mov
add
mov
xchg
cmp
subb
sbb
jge
jne
xchg
mov
sbb
andl
rorb
jo
sub
mov
adc
leave
cli
in
jmp
mov
push
inc
stc
repz
aad
loop
add
cmp
and
daa
jge
add
aad
mov
scas
add
insl
lods
ret
xor
scas
sub
sub
inc
addr16
test
lret
or
mov
pop
adc
lods
sub
aam
push
shr
pop
jge
leave
cld
push
or
ljmp
lock
jo
add
shlb
cwtl
fcompl
lcallw
sti
inc
scas
adc
sbb
mov
sub
push
or
sbb
push
imull
jge
js
and
lods
pusha
sub
add
jbe
push
mov
ds
jo
into
or
lods
lods
cmp
imul
mov
and
dec
rclb
je
xchg
sar
dec
jmp
clc
cmpsl
aas
movsb
test
addr16
mov
js
call
mov
pop
sbb
bound
push
and
mov
ficoms
mov
adc
aad
in
popa
inc
insb
gs
repz
sti
push
shr
orb
push
and
fs
lret
adc
mov
xor
jne
ljmp
cmovle
add
cmpsb
fsubrs
or
xchg
lret
add
cmp
cltd
jecxz
or
fimull
sahf
fcompl
sbb
das
mov
add
gs
rep
push
loop
test
and
mov
fwait
lcall
cwtl
outsb
adc
pop
dec
frstor
imul
pop
push
leave
ret
es
or
repnz
xchg
shll
imul
mov
mov
sub
push
fwait
repz
sahf
adc
dec
mov
xchg
inc
test
adcl
or
aaa
sub
in
mov
cli
js
mov
call
test
dec
or
xchg
daa
and
pop
shrb
movsl
in
icebp
add
push
xor
mov
divl
outsl
jecxz
popf
out
xchg
ss
lods
inc
dec
adc
and
ficompl
test
jg
in
sub
or
int
testb
adc
aam
push
cmp
addr16
aam
add
xor
mov
arpl
adc
push
pop
adc
mov
or
xchg
repnz
shrb
xor
mov
and
aaa
aaa
push
push
arpl
hlt
push
jbe
gs
rol
xor
adc
dec
inc
gs
pop
adc
push
aam
iret
add
sub
pop
sbb
fucomp
filds
push
inc
andl
outsl
inc
adc
fnstsw
jle
fldenv
or
add
out
push
insb
adc
mov
cltd
xchg
mov
lret
loop
or
cld
mov
mov
mov
fwait
pop
stc
xchg
hlt
mov
jbe
mov
jns
shll
mov
and
bound
adc
mov
lahf
mov
adc
pop
xchg
in
mov
or
pop
push
mov
insl
or
add
inc
inc
jge
int3
and
pop
sbb
int
mov
jne
ds
mov
jb
ljmp
pop
ret
popf
push
xchg
and
pop
xchg
addr16
scas
test
and
out
jmp
movsb
idivl
mov
ret
movsb
xchg
push
add
out
in
neg
decl
adc
repz
mov
fdivrs
xchg
cmp
mov
into
into
sbb
adc
mov
xchg
test
jge
xor
ret
jns
pushf
add
xchg
cmp
sub
or
insl
mov
call
daa
movsb
imul
ret
push
andb
xchg
pop
or
add
sub
push
scas
dec
sub
push
data16
cmp
mov
cltd
cli
test
cmp
dec
ffree
mov
movl
xor
adc
sbb
lods
sub
xchg
jmp
and
push
mov
je
jecxz
and
icebp
push
push
cmp
lods
mov
leave
lea
cmp
push
pop
mov
stc
inc
insb
ja
mov
sub
shrb
and
jo
sbb
pop
push
push
xchg
icebp
sub
inc
xor
dec
cwtl
cmpsl
pop
hlt
nop
lcall
imul
mov
pop
jle
aaa
xor
pop
sbbb
sahf
and
pop
lea
push
pusha
mov
out
ss
pushf
and
out
push
push
fs
jecxz
push
insl
dec
popa
jae
sbb
cmp
fnstsw
or
gs
push
icebp
enter
dec
nop
lods
dec
push
gs
js
sub
insl
into
fldt
mov
fstpt
loope
xchg
push
mov
scas
aaa
cmpsb
aam
xchg
sbb
or
ret
imul
mov
sub
jge
in
lock
ffree
mov
sub
push
cmc
mov
mov
idivl
lea
lcall
cmp
mov
push
repnz
lahf
paddb
fwait
mov
jmp
sub
and
aas
scas
xor
fsubl
push
out
loopne
sahf
bound
test
shlb
mov
and
mov
inc
sbb
jl
mov
ss
clc
out
add
xlat
fnstenv
mov
test
xchg
or
sarl
or
std
lods
push
inc
test
in
mov
and
mov
fists
in
and
push
dec
jo
loop
ja
push
pop
sbb
clc
and
loope
adc
out
mov
cli
sbb
adc
or
cwtl
mov
push
in
or
inc
and
pop
sub
xchg
xor
adc
xor
xor
cs
in
jnp
cs
adc
jmp
xchg
mov
or
cltd
out
push
int3
clc
pop
cmp
int
out
popf
adc
subb
fcompl
dec
aam
mov
or
adc
sbb
dec
dec
addr16
pop
xchg
sbb
ficoml
jno
push
shlb
std
aad
repnz
push
mov
cld
xchg
dec
in
pop
pop
lock
jmp
mov
jno
int
jg
or
test
jg
negb
das
sub
outsl
loopne
outsb
pop
pusha
in
and
jb
and
insl
jle
jp
jns
aas
das
inc
xchg
xor
cwtl
jne
inc
sahf
xchg
rorl
mov
xor
mov
mov
xchg
test
xor
cld
pushf
jb
in
insl
ds
xlat
ficompl
cmp
push
int3
pop
cmp
jns
lahf
sbb
popl
fs
std
sbb
test
xchg
in
and
push
pop
cli
jp
arpl
int3
das
mov
imul
sub
xor
fwait
pop
fstpl
pushl
dec
or
aad
test
lsl
or
mov
push
pop
ret
stc
jp
fdivp
pop
fadds
aaa
sub
fmuls
out
push
mulb
sbb
je
imul
dec
dec
inc
mov
and
imul
and
mov
lods
adc
leave
movsl
inc
addb
fwait
xor
sub
push
out
sbb
outsb
or
arpl
sbb
andb
and
push
fildll
inc
and
popa
ret
mov
mov
aam
jecxz
or
jecxz
aam
shlb
cld
lods
rcrl
imul
inc
repnz
enter
mov
add
dec
xor
sti
pop
or
sahf
ficoml
aas
fadds
pop
pop
add
xor
add
adc
pushf
inc
xor
dec
push
jl
stos
jb
mov
out
rol
out
loop
in
nop
mov
and
shlb
cwtl
adc
mov
jne
cmp
push
mov
xchg
mov
jno
mov
and
fsubrs
xor
repnz
pop
rclb
dec
jb
int3
pop
mov
inc
inc
add
cmpsb
push
add
push
test
push
ds
inc
in
sbb
lret
lods
hlt
inc
mov
sbb
test
and
push
dec
decb
pop
and
mov
push
sbb
push
test
bswap
daa
dec
inc
adc
aas
daa
push
jbe
xor
pop
cli
lcall
xchg
pusha
adc
xchg
jecxz
loopne
adc
test
in
in
ss
ret
aaa
das
aam
mov
aaa
inc
sbb
push
pushf
shl
into
shll
sbb
data16
or
jno
or
sti
shrl
pop
adc
mov
inc
mov
mov
fsubs
jmp
rcrl
stos
insl
pop
dec
scas
std
sub
aad
mov
pop
decl
xor
cld
icebp
pop
andb
mov
sti
lcall
adc
pop
divb
lret
dec
jbe
mov
int
fldl
xchg
repz
xor
xchg
sub
js
mov
cmp
mov
cmp
fs
icebp
inc
cmp
lret
shl
test
enter
icebp
loope
pop
loope
add
push
mov
hlt
leave
cmp
or
bound
adc
or
clc
mov
add
xchg
mov
sbb
jbe
in
sbb
popf
test
sub
mov
clc
jns
fsubrl
fadd
push
push
scas
jno
sbb
mov
fstpl
loop
mov
add
mov
xchg
mov
and
mov
lcall
jns
sti
add
mov
insb
popa
lret
xor
adcb
fisubrl
int
dec
adc
or
int
xchg
add
xor
fs
sbb
adc
sub
testl
sarb
mov
daa
je
ret
out
fcmovne
rcl
stos
inc
lea
or
pop
inc
insl
pop
xchg
cmp
jo
imul
jmp
rol
mov
mov
in
pop
sub
xor
mov
ds
shll
xchg
add
in
in
dec
mov
in
xchg
dec
cmpsb
imul
sahf
xor
insb
clc
cmp
mov
sbb
fimuls
adc
shlb
shr
jge
daa
sub
jno
add
lret
adc
sbb
jo
add
out
xor
ret
lods
sub
test
lds
xor
cltd
pop
insl
dec
call
jmp
mov
pop
inc
in
push
adc
hlt
sub
pushl
push
mov
enter
pop
sbb
xchg
popa
mov
mov
push
mov
cmpsb
stos
or
stc
jbe
hlt
cmpsl
jae
ss
arpl
push
xchg
shrb
fstp
dec
mov
jl
sub
xor
and
sub
div
imul
jae
inc
std
or
loope
xchg
fcompl
mov
push
add
out
dec
sbb
mov
dec
inc
es
int3
xchg
cli
adc
out
scas
js
dec
cmp
flds
ret
dec
orb
inc
push
adc
jb
pop
add
jp
mov
mov
sbb
xchg
xor
mov
mov
divl
adc
test
daa
mov
cmpsb
aam
jl
data16
inc
aam
add
fidivrl
dec
lods
sub
jle
or
add
push
mov
lods
inc
shll
push
sahf
push
sbbl
sbb
dec
hlt
dec
add
xor
xor
or
push
lret
popa
call
cmc
fnstenv
add
imul
mov
shrb
jne
and
lock
xor
fcoml
mov
divl
inc
lock
dec
push
cltd
push
inc
pushl
jecxz
xchg
shll
fisubrl
gs
cmp
ret
or
push
sub
inc
mov
jge
addr16
add
scas
rcll
pusha
lds
std
and
dec
bound
adcl
in
jne
fimull
stos
js
or
in
aas
mov
dec
add
cmc
aam
ret
ljmp
ljmp
movsb
sbb
add
mov
mov
or
out
js
fwait
aaa
lret
dec
adc
mov
scas
ljmp
clc
jge
outsl
push
dec
int
mov
adc
fwait
mov
jne
insb
lds
daa
cmc
pop
pop
out
inc
test
dec
and
clc
mov
cltd
fidivrs
xchg
sub
and
ja
cmp
cwtl
insl
or
sbb
sbb
clc
out
dec
pop
jbe
fidivs
inc
sub
sbb
push
outsb
or
jo
jge
lds
hlt
sbb
aam
jnp
in
cmp
inc
ret
aam
fsubs
pop
xchg
sub
or
mov
es
std
lods
sub
clc
or
push
xor
lahf
mov
sub
xchg
repnz
ss
dec
or
mov
scas
jo
loop
cmp
push
mov
dec
sbb
cmp
es
popa
sub
int3
add
rcll
nop
adc
push
lahf
imul
dec
sub
cmpsl
decb
mov
sti
push
jecxz
mov
arpl
stos
ficoms
jmp
sbb
mov
lods
cmp
inc
sbb
push
scas
roll
stos
cmc
nop
lods
cmp
mov
add
pop
sbb
add
dec
loopne
push
cmp
dec
es
add
jne
pop
lahf
sbb
sub
sub
or
cmp
pop
sti
push
jb,pt
std
imul
loopne
pop
rcr
and
popf
enter
or
mov
mov
sbb
lock
cmp
repz
sub
pop
mov
addb
subb
outsl
jb
cld
add
pop
mov
test
jmp
sbb
or
push
sub
cmpb
leave
jae
int
mov
mov
xor
les
cmc
dec
xorl
adc
shr
stos
in
pop
je
jnp
cs
sub
bound
dec
repnz
out
and
loope
xor
push
xchg
or
adc
jge
xchg
fdivr
test
xchg
mov
xor
add
cmp
imul
ds
cli
data16
icebp
cmp
push
adc
aam
test
dec
sbb
adc
rcrb
adc
sub
xor
rcr
ljmp
mov
add
leave
xor
pushf
jns
es
mov
clc
xchg
inc
and
or
jl
fimuls
gs
jno
repz
add
nop
imul
ret
mov
repnz
aad
push
cmp
fs
repz
movsb
pushf
outsl
cwtl
xchg
or
or
mov
mov
andb
lock
mov
push
or
push
mov
js
in
sbb
adc
inc
mov
add
dec
xor
push
lahf
ljmp
test
das
dec
pop
fisttpll
test
mov
cwtl
lods
push
mov
aaa
lret
leave
cmp
test
add
out
mov
ja
pop
and
mov
std
aaa
push
pop
sub
cltd
movsl
sbb
sti
dec
hlt
jmp
addr16
fs
jae
loopne
stc
dec
or
stc
cwtl
push
dec
pop
sub
test
push
pop
repz
ljmp
imul
adc
lcall
lcall
mov
jecxz
lock
loope
inc
insb
sub
cmp
mov
sti
loop
mov
rorb
ss
add
push
push
inc
mov
addl
shrb
aam
js
hlt
sahf
adc
mov
mov
int
pusha
push
mov
cmpsb
iret
test
test
and
lock
out
or
loop
push
idiv
xchg
es
ljmpw
outsb
jecxz
push
movsl
mov
loope
sub
push
shlb
aaa
jb
bndldx
add
dec
adc
mov
mov
cmpsl
sarb
scas
mov
push
jp
cmp
mov
sub
fwait
mov
push
inc
in
scas
dec
cld
mov
popl
dec
pop
push
lahf
inc
jnp
cli
jge
loop
cmc
pusha
dec
call
pop
adc
push
loope
or
fisubrl
pushf
fstp
sbb
ds
sub
lds
fisubrs
adc
mov
int3
push
icebp
inc
jmp
push
push
fdivr
push
jecxz
sar
mov
mov
or
pop
cmpsb
and
fcomps
pusha
xor
adcl
and
mov
xchg
push
jl
xchg
xor
jle
push
xlat
mov
jmp
mov
pop
pop
fists
push
fmuls
into
das
mov
adc
add
cmc
inc
lret
xchg
es
sarl
mov
in
fists
test
inc
jae
mov
mov
inc
mov
faddl
lcall
stos
mov
cmp
stos
jl
sti
clc
dec
es
subl
fdivr
mov
cmpl
jne
gs
stos
lret
push
push
mov
movsl
mov
aaa
mov
pop
push
cmc
sub
xchg
jne
jb
call
jle
inc
bound
sbb
xchg
push
loop
mov
or
insl
sbb
lcall
xlat
jnp
xor
adc
xchg
into
or
mov
pop
dec
movsl
ret
ret
call
dec
sti
xchg
shr
sub
adc
loope
inc
hlt
outsl
xchg
adc
stos
sbb
jae
mov
gs
scas
add
inc
movsl
fucomp
pusha
push
aam
scas
popa
cmp
aad
push
pop
dec
cwtl
movsb
xor
jbe
cltd
sub
cmp
adc
add
adc
fldl
int3
std
sub
cmp
or
loopne
xchg
icebp
leave
sub
dec
push
jle
les
out
jo
mov
mov
push
popf
add
cli
movsl
pop
or
jmp
lods
imul
les
push
xchg
lea
rorb
mov
dec
js
xchg
mov
lock
shlb
inc
push
fbstp
sbb
imul
shrb
or
xchg
sub
sub
add
nop
mov
iret
into
std
sbb
add
in
rcrl
jae
and
push
sub
dec
push
xchg
subl
int3
xchg
pushf
dec
xchg
or
push
outsb
xchg
pusha
mov
fcmovnbe
sahf
add
les
cmp
stc
ljmp
les
sahf
push
push
sahf
adc
sub
loop
xlat
ja
movb
mov
jne
sbb
cltd
call
or
sbb
test
ljmp
mov
arpl
or
mov
push
lods
jae
nop
shll
mov
repnz
movsb
dec
loopne
aas
mov
int3
repz
lcall
or
pop
shlb
std
fs
les
popf
sub
lods
and
sbb
jecxz
inc
mov
gs
shrl
or
inc
jb
add
cmp
and
stc
jne
xchg
cmpsl
into
mov
mov
outsl
arpl
inc
lea
mov
push
xchg
ficoml
out
dec
cwtl
inc
adc
and
inc
ds
insb
mov
ds
inc
sub
ds
fbld
pop
sbb
int
or
xor
lret
sbb
dec
add
pop
sti
adc
cmc
and
mov
mov
push
stos
inc
ds
leave
sti
mov
aam
movsb
jmp
mov
int
test
lock
mov
outsl
mov
adc
jb
je
daa
mov
test
sbb
fnstsw
gs
cmpsl
push
lea
jne
jle
cmp
dec
scas
jnp
stc
sub
inc
clc
test
les
and
sbb
lahf
add
aaa
movsb
in
imul
sbb
xchg
stos
jmp
hlt
test
loope
jp
push
sub
aas
subb
loop
sub
fisubl
test
cmp
popl
int
and
pushf
add
push
movsl
andl
mov
in
push
cmpsl
jbe
mov
stos
adc
clc
int3
int3
cmpxchg
jns
pop
mov
jmp
in
and
movsb
je
push
js
mov
pop
pusha
dec
ret
pushf
mov
adc
mov
push
or
cmc
adc
insl
adc
enter
jo
das
sahf
cli
and
mov
movl
inc
add
push
jns
fcmovu
mov
sahf
es
or
mov
stc
pop
jecxz
dec
cld
mov
in
jp
sbb
outsb
int3
mov
or
dec
jnp
aas
mov
inc
dec
leave
mov
cmp
insl
add
gs
aas
aas
or
lahf
and
push
jo
cltd
lods
fnstcw
or
dec
adc
test
nop
adc
out
les
push
ds
pop
mov
orb
mull
scas
pcmpgtw
stc
jno
add
vcmpps
inc
dec
fxch
sbb
jno
cmp
xchg
adc
jp
loop
leave
inc
cmp
xchg
sub
jno
sbb
dec
mov
push
stos
divb
pop
push
and
cmp
xchg
adc
insl
mov
out
loope
ja
ret
ficoms
add
sbbb
jg
mov
dec
aas
ret
hlt
iret
mov
lock
cmp
mov
pop
xchg
loopne
xchg
cli
clc
imul
aas
popf
fistpll
xor
loope
out
xor
loop
mov
mov
push
xorl
add
sub
jge
sbb
mov
je
pop
and
mov
xor
push
out
out
xchg
pop
adc
loop
iret
lret
imul
and
push
aam
lea
mov
mov
pop
add
loop
into
and
sub
xchg
mov
jnp
inc
push
clc
jnp
mov
inc
and
jno
mov
out
jns
stc
les
jl
outsl
jb
xor
fisttpll
scas
test
fmull
inc
lods
je
mov
rolb
insl
aad
popa
mov
movsl
adc
cmp
mov
jns
lret
movsb
fadds
dec
insl
mov
imul
ret
pop
fcompl
push
inc
or
ret
mov
pop
sub
movsl
pop
daa
xorb
mov
orb
or
shl
repz
clc
xor
call
dec
lods
cli
push
jnp
xchg
aas
adc
inc
andb
ds
test
push
sarb
cmp
aad
add
call
add
push
hlt
rclb
or
outsb
jae
jo
insl
jmp
sub
jne
or
mov
in
sub
push
push
xchg
repz
mov
pushf
hlt
sub
cld
sub
mov
in
adc
lods
xor
mov
lret
cmpsl
jo
sbb
adc
sub
rorb
lcall
dec
jb
mov
lods
cli
pop
jg
bound
pop
cmp
mov
aas
pop
xor
out
push
sub
out
jmp
mov
cmc
jne
test
int
cmpsl
pop
push
dec
scas
dec
adc
inc
outsl
cmp
vpmulhuw
push
aaa
stos
pop
daa
jge
mov
add
cmc
in
and
call
push
xchg
test
movsb
sub
push
leave
js
icebp
enter
xor
push
mov
out
adc
ss
inc
inc
jbe
loope
stos
or
loope
pop
test
xchg
pop
in
jg
push
or
xchg
inc
and
js
sub
add
call
fists
es
iret
aas
jp
push
movswl
sahf
int
mov
push
mov
sub
test
cld
aas
fsubl
xchg
fiaddl
push
mov
jmp
popa
das
mov
inc
jns
inc
daa
cmp
push
sbb
xchg
test
cwtl
mov
and
loopne
fmulp
push
push
xchg
and
sbb
cmp
cmp
std
jbe
mov
movb
jae
jmp
mov
fwait
add
js
dec
cmp
inc
pop
sbb
in
pop
cmp
inc
popf
jmp
push
dec
mov
push
cwtl
cmpsb
mov
push
les
and
sub
lock
int
mov
shlb
mov
xor
test
pop
pop
adc
je
mov
add
cmp
pop
lea
scas
push
cmp
call
bound
xor
fmull
inc
popf
lea
iret
lods
icebp
push
jnp
jno
outsb
loope
push
jne
mov
pop
imul
mov
ja
setae
addr16
mov
mov
or
xor
cmp
popl
add
mov
mov
fidivs
out
leave
stos
pop
cli
fstpt
and
cmc
add
or
push
nop
sti
mov
sbb
cmc
dec
in
or
pop
mov
jmp
lods
jmp
outsb
sarb
sub
ljmp
sti
sbb
xchg
call
sbb
loopne
xor
repnz
orb
xor
popf
sbb
mov
int
pop
jge
push
in
and
sbbl
or
ljmp
fnstenv
xchg
jge
int3
pop
enter
or
pushf
adc
mov
jb
xor
add
jecxz
loop
xlat
into
cmp
loop
sarl
add
and
aaa
outsb
pop
loopne
pop
shrl
test
pop
mov
cmp
mov
pop
mov
sbb
mov
lods
mov
call
jbe
or
lods
mov
xlat
push
insl
sub
sub
xchg
or
cwtl
xchg
cmp
push
ljmp
ljmp
xor
xchg
or
sti
xchg
pop
das
movl
pmulhuw
pop
and
dec
ret
dec
sub
in
mov
sbb
lret
rorb
xchg
sub
int
rorl
scas
mov
xor
stc
sub
les
aaa
pop
pop
xchg
and
test
out
pop
bound
and
pop
xchg
loope
pop
xor
jns
rorl
into
cmpsl
cmpsl
add
push
sbb
jnp
imul
xor
mov
jle
in
sub
cld
pop
paddb
adc
pop
int3
dec
aaa
cmp
jae
jnp
xor
jmp
outsb
pusha
push
sub
pushl
xor
stos
imul
jnp
ret
adc
sub
sub
jmp
cmp
adc
test
push
add
cmpsl
adc
or
loope
sbb
dec
sub
jl
lock
insl
or
or
add
pushf
js
sub
push
cmp
pushf
pop
shl
fnstcw
mov
pop
jo
bound
mov
pop
movsl
cmp
inc
cmpsb
in
xor
fwait
sbb
pop
inc
leave
lcall
lods
sbb
xchg
fdivrs
xchg
ljmp
loopne
flds
mov
sbb
pop
jge
and
cmpsb
jbe
mov
jle
int
xchg
push
jmp
jecxz
repz
adc
mov
sar
xchg
out
mov
fnstcw
enter
sbb
movsl
add
mov
aam
dec
shlb
jno
sub
xchg
sub
xchg
orl
jge
repz
or
add
inc
mov
push
or
test
cmp
inc
push
xor
cltd
push
lahf
jecxz
and
pop
popf
push
add
and
jae
push
pop
fldt
jge
xorb
sahf
aaa
je
sub
xchg
rcrl
and
sub
dec
aas
push
das
dec
cs
ds
leave
jno
mov
jp
lods
mov
hlt
sarl
cmp
add
inc
lahf
and
cmc
aad
cli
add
lds
fmull
sbb
mov
inc
ret
inc
pop
popa
mov
cmpsl
cmc
xchg
sbb
pop
in
ds
fmul
mov
push
fmul
fildll
adc
lret
mov
inc
sbb
loopne
and
cmp
test
jne
cmp
mov
sbb
scas
sahf
movsl
dec
notb
or
mov
out
push
adc
xchg
mov
loop
test
push
lods
subl
repnz
sub
sub
int
call
ret
jbe
xor
dec
xchg
popa
jle
mov
xchg
jne
rolb
mov
imulb
test
and
xor
dec
add
xchg
ja
dec
cmp
fnsave
fstpt
cs
or
sti
xchg
aad
ja
ja
movsl
imul
lea
mov
push
jp
push
jl
icebp
sahf
add
sub
jp
repz
xchg
aaa
stos
xor
mov
push
outsb
inc
pushf
pop
lods
clc
andl
mov
cli
lods
out
arpl
pop
xor
roll
lods
call
fimuls
sub
inc
filds
jnp
mov
mov
mov
xor
cmpsl
add
inc
pop
push
xchg
sbb
pushf
loope
dec
neg
cwtl
fisttpll
or
mov
inc
movsl
roll
add
nop
sub
movsb
add
jg
sbb
movsl
pop
pop
bnd
pop
dec
jl
or
popf
jl
jge
dec
mov
jp
rorl
jmp
sub
out
pop
outsl
arpl
mov
xchg
xor
popl
fildll
mov
rcrb
repnz
fsubl
repnz
and
sbb
and
dec
cld
loopne
out
out
pop
les
jle
push
xchg
jecxz
or
add
push
aad
cmpsb
adc
sub
in
cmp
rolb
sahf
in
xlat
movsl
mov
test
sbb
daa
xor
mov
rcrl
out
add
xchg
pop
pop
xor
cli
push
insb
je
push
cmp
dec
ss
inc
test
adc
pusha
inc
pop
jmp
clc
mov
out
outsb
fs
mov
fidivrs
and
das
rcl
icebp
fwait
jo
xor
popa
sbb
outsl
mov
mov
in
mov
nop
movsb
inc
cwtl
out
fistps
adc
dec
jne
xchg
mov
push
pop
mov
mov
add
xlat
lret
or
or
das
clc
jnp
pop
or
pop
lret
cmpb
adc
arpl
dec
inc
lea
pushf
push
mov
orb
test
jo
pop
imul
ljmp
rcll
cmp
out
dec
aaa
jno
xchg
jg
mov
std
in
sub
test
stc
dec
cmp
ljmp
popf
pusha
fadd
push
movsl
shll
inc
cmp
cmpsb
inc
pop
mov
mov
adc
int
je
dec
push
cli
sbb
stos
push
jecxz
leave
fs
int3
dec
mov
fadds
stos
sbb
outsl
daa
test
xor
sbb
add
into
cmc
inc
mov
pop
inc
dec
jns
sub
test
lods
mov
or
inc
mov
cltd
arpl
rorl
mov
mov
popa
inc
fldenv
mov
jbe
cmp
push
aam
dec
insl
jae
fsubrl
rorb
jns
stos
adc
add
stos
das
dec
aam
mov
imul
sbb
lea
int
jo
push
lea
fcmovu
loopne
mov
pop
jmp
daa
ret
sub
jge
fdivrs
mov
cli
outsl
lret
dec
in
icebp
mov
or
mov
jnp
and
push
rcll
in
cmc
xchg
out
or
sbb
lret
jle
pop
addr16
mov
rcll
cmpsl
int3
sbb
call
mov
push
test
and
cmp
cmp
sbb
mov
fildll
add
popa
cmovns
mov
mov
std
push
xchg
lret
sahf
es
push
xchg
add
mov
mov
push
nop
cmp
xor
sub
mov
jmp
in
push
pop
out
inc
mov
lea
xor
in
sahf
mov
shr
jecxz
sub
jl
adc
aad
fs
inc
test
adc
dec
or
sarb
stc
test
sub
loop
mov
xlat
in
addl
sbb
in
iret
outsl
ljmp
movsl
loopne
jle
repnz
xchg
dec
pop
inc
pop
nop
cld
xlat
xchg
ret
rcrl
adc
or
fcmovu
fstpl
es
lea
inc
hlt
xchg
mov
sub
sbbb
js
gs
push
xchg
push
cmp
in
push
add
aam
lahf
insb
jnp
stc
jb
sbb
in
fbld
enter
jmp
in
clc
outsl
cmpsl
out
jge
xchg
push
in
int
sbb
pop
mov
mov
dec
stos
aad
lcall
pop
or
popa
jge
mov
mov
lock
xchg
sub
notl
in
xor
mov
enter
stos
dec
add
mov
lcall
pop
or
sub
and
mov
insl
in
cs
lods
cmpsb
dec
outsb
inc
adc
inc
daa
xchg
subb
jne
xor
mov
jnp
insl
adc
out
sbb
jmp
pop
mov
pop
xlat
jl
adcb
popa
push
jbe
pop
aad
add
adc
sub
cwtl
xchg
ss
in
cld
jmp
test
and
adc
cmpl
inc
xorb
sub
iret
dec
adc
pusha
shll
cltd
add
add
push
arpl
sbb
fcoms
or
int
cmp
xchg
in
xor
jb
xlat
aam
shlb
adc
xor
faddl
dec
inc
stos
insl
std
daa
shrb
mov
dec
mov
push
sub
mov
dec
mov
push
fdivl
das
ds
int
sti
push
push
and
nop
dec
jecxz
repnz
gs
aas
enter
or
jo
adc
gs
cmp
inc
stos
test
lcall
leave
aas
fists
arpl
js
lcall
cmc
popa
adc
cmp
js
xchg
mov
std
lret
jnp
call
aaa
mov
rcrl
shrl
out
inc
cs
jo
cmpsb
popf
mov
ret
xor
in
push
in
call
lcall
jp
inc
out
jno
and
mov
sub
rep
or
xchg
mov
mov
jno
fiaddl
inc
mov
cmp
test
das
mov
xchg
out
es
jge
jecxz
adcb
xchg
or
int3
mov
sti
std
cmp
stc
cmp
cmpsl
data16
loop
mov
cmp
stos
push
mov
pop
xor
repz
add
fs
pop
xor
mov
iret
xor
aad
push
xor
das
or
push
mov
ret
push
aam
sti
mov
clc
inc
fucom
xchg
push
add
stos
push
jmp
sub
pop
divl
xchg
xchg
js
pop
bound
mov
cmp
lret
jp
sub
mov
repz
pushf
and
jge
divl
lcall
div
fildl
lock
out
mov
aad
mov
flds
xchg
lret
icebp
mov
mov
aam
loopne
mov
push
jle
out
sti
cmp
inc
jbe
xor
enter
push
js
jb
das
xor
clc
in
xchg
inc
gs
push
inc
addr16
jmp
and
jbe
je
nop
fmull
xchg
test
xor
mov
push
or
cwtl
lret
push
inc
cltd
cltd
jae
rcrb
pop
sahf
pop
aas
call
dec
jecxz
dec
shl
pop
dec
xor
mov
clc
mov
jo
xorps
fsubrs
push
or
pushl
mov
dec
jae
cmp
sahf
add
xlat
add
xchg
and
pop
gs
xlat
push
sub
or
pop
sub
out
cld
xchg
lock
mov
shl
xchg
mov
mov
pusha
add
movsl
push
lds
lahf
cmp
call
jns
out
push
push
jnp
sub
add
dec
rol
mov
jp
mulb
sbb
sbb
mov
loopne
stc
or
adc
bound
loop
cmp
add
int
push
sti
or
xchg
loop
aaa
adc
and
sub
xchg
fildl
divb
fstpl
push
pop
mov
jnp
imul
jmp
mov
jmp
jecxz
jp
pushf
aas
jnp
movsl
add
xlat
xor
mov
mov
xor
mov
sbb
xchg
mov
bound
add
js
and
ror
cltd
enter
or
dec
jg
gs
ret
pop
sahf
fldt
cmp
inc
cmpsb
mov
movsb
jmp
movsl
adc
cmp
sub
mov
dec
jl
aad
imul
ret
mov
xchg
fdivl
sub
pop
popa
xchg
insb
or
clc
data16
sbb
pusha
mov
addb
pop
dec
sti
pusha
jnp
mov
pop
mov
mov
enter
and
cmp
fdivs
xor
add
movsb
adc
int
ret
push
dec
ja
popf
call
ret
cmpsl
nop
sahf
mov
adc
rcrl
sub
js
sub
mov
ja
test
add
fistpll
xchg
mov
mov
ljmp
fdivrl
xchg
push
sbb
jnp
and
lahf
jns
neg
inc
jno,pn
aam
scas
jns
outsl
mov
adc
xchg
sbb
lret
movsb
mov
lods
imul
mov
inc
out
shll
inc
pop
bound
pushfw
pop
push
dec
mov
mov
loopne
bnd
cmp
test
sub
ja
jle
gs
xchg
mov
lods
jns
shll
insl
lcall
add
sbb
ss
ds
scas
xor
push
push
lret
jg
rcr
dec
data16
dec
push
mov
xor
ja
repz
mov
adc
pop
in
scas
mov
cwtl
mov
mov
aad
sbb
lcall
pop
mov
xor
insb
rclb
or
mov
jb
cmp
fwait
add
pop
mov
lret
repnz
repz
out
sahf
movsl
flds
and
in
sbbb
test
movb
pop
jge
adc
loop
enter
adcb
hlt
jg
inc
jae,pt
int
invd
add
fcoml
jg
lahf
cmp
mov
int
mov
jle
loop
or
mov
pop
outsb
cmp
notb
mov
and
hlt
jbe
sub
aad
out
rclb
sub
test
add
cwtl
popa
int3
inc
adc
jecxz
sbb
mov
adc
enter
or
cld
add
mov
mov
dec
ja
repz
sub
into
dec
push
jge
mov
out
mov
test
lcall
call
stc
out
dec
xor
jg
jecxz
push
push
into
es
call
orb
push
mov
into
add
jno
push
mov
mov
jp
scas
inc
lcall
or
cmp
sbb
xlat
xchg
and
lcall
pushf
mov
out
xchg
jg
mov
rcrb
dec
mov
jbe
test
xchg
ljmp
mov
mov
inc
sbb
xlat
dec
enter
or
push
fwait
pop
push
push
mov
and
out
add
add
out
jl
stos
push
jecxz
adc
jmp
dec
inc
outsb
push
movsl
push
shlb
fwait
testb
adc
sub
into
cmc
pusha
call
notl
xchg
cld
mov
call
dec
outsb
add
sub
mov
les
popf
hlt
add
fistps
scas
adc
ja
sub
jl
xor
cli
xor
outsl
lods
and
out
sub
outsb
out
jmp
inc
or
xchg
xor
imul
and
sbb
jl
xchg
leave
js
daa
or
mov
mov
push
das
stc
inc
cmp
mov
in
xchg
movb
test
in
mov
cmp
sbb
push
sub
xrelease
ficomps
mov
filds
sahf
or
movsl
mov
sub
addl
fdivrs
stos
je
push
aad
addr16
call
xor
sub
sub
push
testl
xchg
xchg
push
mov
mov
push
pop
inc
ret
adc
xor
das
mov
mov
sbb
lock
pushf
leave
aam
pushf
cwtl
mov
int
add
lea
lret
sbb
jno
inc
insl
pop
jnp
adc
or
mov
pop
mov
push
sub
mov
cmp
stos
or
lods
push
loopne
pusha
divl
imul
cmp
imul
and
sub
pop
repz
push
movsb
push
ret
add
lds
mov
or
std
pop
cmpsb
xchg
lahf
insb
dec
cmpsb
mov
push
insl
popf
pusha
jg
fdivrl
test
repnz
cmp
and
mov
in
sub
push
cli
lcall
xchg
lock
mov
sbb
inc
push
xchg
mov
jg
pop
sub
mov
dec
imul
ja
popa
jns
jp
loope
sub
call
negl
mov
lods
cld
add
adc
fs
out
push
fldenv
mull
outsb
mov
in
out
arpl
shrl
imul
jns
and
aam
mov
xor
shrb
cmpl
adc
popa
outsl
lcall
xlat
js
loopne
pop
sbb
pop
pop
in
enter
div
nop
movsb
sub
sub
mov
cld
repnz
cmp
out
cmp
fsubs
xlat
ficompl
jmp
dec
rcr
notl
scas
pop
mov
cmp
in
jae
push
pop
and
mov
lock
and
pop
sarl
jnp
loop
or
rorb
xor
push
pop
popf
push
and
dec
jne
ljmp
dec
clc
ret
div
mov
jle
xchg
shlb
insb
jp
cmp
adc
dec
in
insl
inc
mov
fsubrl
sbb
and
int3
push
cmp
mov
bound
dec
jb
xchg
adc
scas
out
lods
fmull
mov
loope
push
add
sbb
lea
dec
xchg
push
shll
jae
aaa
mov
adc
adc
adc
dec
push
or
aad
scas
lahf
sti
sbb
stos
and
das
divl
imul
push
insl
cmp
mov
das
push
lods
fdiv
cmpl
push
and
xchg
in
cmpsb
cmp
das
stos
in
dec
push
push
push
sub
dec
xchg
fisubrl
sub
cmp
aaa
pop
jle
jecxz
xchg
sub
mov
push
or
mov
xchg
je
xor
or
pop
ltr
js
xor
fst
ljmp
sarl
nop
lret
stos
scas
mov
pusha
mov
lahf
mov
out
test
insb
jmp
cmp
das
addr16
or
jo
pop
movsl
inc
jle
fisttpll
inc
jne
pop
rolb
call
and
hlt
mov
adc
mov
xchg
inc
call
dec
jg
lods
dec
movsb
push
in
clc
or
mov
dec
fldl
outsb
leave
test
daa
sub
lcall
mov
or
sbb
and
inc
imul
in
scas
and
fyl2x
sbb
dec
shll
inc
insl
icebp
imul
in
cld
xor
lret
mov
int
xor
lods
gs
mov
dec
pop
test
inc
mov
sub
in
daa
xchg
imul
pop
jae
enter
cmp
int3
mov
sub
loop
lods
sbb
xchg
adc
jnp
mov
imul
loop
insb
push
jecxz
xor
loopne
jb
push
fwait
or
inc
push
push
dec
push
pop
mov
icebp
sahf
mov
cmp
js
ret
inc
shrb
jl
lret
fisubrs
loopne
or
mov
inc
shrb
mov
test
push
mul
pop
pop
dec
jnp
jp
loopne
ret
rorb
scas
and
fstl
jecxz
push
fildll
enter
lods
push
mov
xor
ljmp
fcoms
mov
out
adc
cltd
xchg
movsl
inc
fists
jnp
stos
add
xor
fnstcw
mov
adc
mov
adc
out
mov
xchg
mov
add
out
jle
pop
gs
shlb
push
push
fcmovbe
inc
push
aas
mov
add
mov
pop
loopne
mov
mov
ljmp
ja
fs
cmp
jecxz
out
or
mov
inc
imul
or
dec
in
dec
imul
enter
addr16
jge
pushf
enter
lea
add
inc
xor
pusha
and
mov
dec
adc
dec
loop
inc
adc
imul
mov
lock
aam
dec
cltd
pop
push
loop
rcr
mov
mov
std
in
repz
xor
xchg
push
inc
mov
mov
les
scas
and
adcb
hlt
pop
pop
or
out
aam
fisubrs
loope
stc
pop
cld
push
pop
fcomps
ljmp
xor
andb
dec
mov
js
dec
sub
jne
icebp
lcall
stos
push
repz
and
push
fwait
aaa
adc
iret
test
fistpll
mov
and
lods
pop
addr16
mov
insl
add
adc
xchg
mov
enter
pop
xor
mov
mov
lahf
mov
xor
mov
push
mov
imul
mov
shlb
sub
or
nop
cld
inc
leave
jecxz
lcall
shlb
xchg
mov
mov
xor
mov
rcll
testb
popl
popa
mov
mov
jmp
xor
xchg
es
push
jbe
cs
ret
push
loope
sbb
aaa
fdiv
sbb
inc
mov
push
int
add
mov
xchg
inc
mov
ljmp
sub
dec
and
mov
xor
ret
xchg
iret
jns
lret
sti
les
sub
xchg
cli
sbb
pop
inc
inc
or
cs
ret
fidivs
pop
popf
icebp
add
orb
in
js
mov
je
icebp
test
xor
test
xchg
xchg
dec
push
pop
and
inc
call
in
leave
cmp
push
test
clc
add
rclb
out
aam
or
out
icebp
outsb
rol
lret
or
mov
sub
mov
fdiv
andb
fstp
lahf
fldcw
pop
jecxz
popa
jae
lahf
imul
mov
jp
mov
filds
inc
sub
sbb
adc
sub
inc
mov
cli
or
not
lds
lret
test
mov
ljmp
outsl
add
popf
xchg
add
add
frstor
xor
pop
or
es
in
pop
and
movsb
test
mov
insl
test
outsb
adc
dec
enter
aam
pop
dec
adc
dec
mov
mov
scas
rclb
pop
lcall
and
xchg
test
inc
inc
fisubl
add
ljmp
shl
lret
jb
mov
add
or
mov
enter
dec
add
dec
sbb
filds
daa
int3
lea
pop
loopne
fdivp
stos
xor
xor
xchg
inc
imul
pop
mov
mov
lahf
je
xchg
cwtl
ja
fwait
dec
aam
ss
hlt
mov
fcompl
lds
dec
jle
jmp
pushf
or
sbb
and
cltd
pop
and
jg
leave
cmp
les
jo
mov
mov
repz
outsb
mov
adc
je
jl
sub
mov
or
push
inc
dec
or
mov
incb
jmp
cmc
mov
sbb
xor
bound
cwtl
call
sub
inc
pop
in
daa
cmc
popf
out
out
jmp
movsb
pop
lahf
lods
xchg
popa
hlt
push
xchg
pusha
sti
add
jae
idivb
movsl
ficomps
mov
sub
aaa
lret
mov
clc
jns
mov
pop
cltd
cmp
repz
or
jle
push
inc
test
add
in
ja
cmp
push
adc
mov
aaa
cmp
cmpsb
in
roll
xor
cld
mov
mov
rclb
pop
jp
in
xor
ss
push
int
mov
sbbl
cmpsb
xchg
dec
adcb
arpl
xchg
sbb
aad
je
hlt
insb
arpl
inc
dec
aas
fisubrl
addb
inc
shlb
push
adc
pop
xchg
pop
xor
jne
arpl
stos
scas
add
arpl
cmpsl
jecxz
mov
cmp
pop
mov
in
cmp
iret
adc
jecxz
dec
jno
ret
les
nop
xor
xchg
dec
pushf
sbb
sbb
sbb
xchg
insb
sub
lds
or
repz
add
outsb
test
push
lret
mov
xchg
push
rcll
adc
arpl
pop
sub
pop
ljmp
icebp
cmp
jae
mov
into
ret
ficoms
test
je
add
inc
or
call
int3
inc
and
mov
in
pop
xchg
jae
mov
push
xchg
imul
inc
inc
add
inc
jo
std
jmp
mov
arpl
jno
inc
test
inc
mov
push
xchg
jge
fmulp
dec
test
stos
call
addr16
popa
imul
pop
in
jmp
rcrb
push
in
mov
mov
mov
addr16
mov
adc
inc
sub
repnz
pushf
loopne
xchg
gs
push
xchg
dec
sti
lret
movsb
cmc
or
jne
and
xchg
cmpsl
push
xchg
in
mov
jns,pt
mov
xchg
sbb
or
cmp
movsl
fcoml
mov
mov
dec
hlt
lods
xchg
jmp
xchg
or
adc
inc
lret
xchg
aam
sub
outsl
bound
vpaddb
xchg
imulb
lahf
xchg
dec
add
scas
add
dec
dec
dec
idivb
xor
mov
push
std
repz
aaa
xor
pop
imul
jb
lret
pop
cmp
and
mov
aaa
cmp
lea
out
jnp
pop
mov
xor
adc
lods
lods
push
lods
inc
xor
ret
inc
loopne
call
notb
addr16
lock
sbb
popf
mov
push
aaa
cmc
in
or
jp
jp
scas
dec
out
lahf
out
dec
inc
les
pop
mov
jl
addr16
xor
pushw
fidivl
mov
pop
gs
stc
inc
jno
rcll
add
in
in
rcr
outsl
sbb
xor
dec
mov
push
lods
out
fcomps
ljmpw
mov
scas
and
pop
pop
xchg
adc
bound
mov
icebp
xor
aas
cmp
dec
mov
jg
pop
xchg
xchg
divb
lea
cmp
and
jb
inc
push
cltd
and
dec
scas
add
popf
sbb
dec
daa
add
repnz
pop
adc
shrl
push
add
movsb
and
jmp
jno
icebp
push
jne
fdivrs
xchg
push
add
mov
mov
insl
sti
xchg
mov
xchg
lahf
sbb
push
dec
loop
or
mov
xor
sub
add
push
das
test
fcmovb
repz
inc
sbb
jo
xabort
push
mov
adc
mov
out
lock
fs
adc
clc
mov
adc
loop
mov
add
pop
adc
xchg
mov
int
mov
mov
jp
or
xor
push
je
adcl
into
jge
sub
push
out
mov
mov
mov
insl
leave
dec
out
push
fisubrl
pop
push
pop
aam
movsl
sub
fdivrs
and
push
ljmp
das
cmc
js
or
push
loopne
push
xor
mov
jecxz
mov
in
arpl
into
mov
or
clc
fwait
sub
sub
jb
sbb
sar
sbb
pop
cwtl
shl
push
push
mov
cmpsb
inc
cmp
cwtl
lret
imul
cmpsb
je
movsb
add
cmp
jo
inc
aaa
mov
add
dec
jge
cmc
enter
sahf
pushf
pop
andb
or
sub
punpckhwd
cld
push
sti
xchg
sbb
xchg
adc
jnp
push
mov
dec
ljmp
lahf
sub
add
cmp
push
pop
leave
add
cld
jb
popf
fsts
outsl
inc
mov
mov
xor
xor
in
rcll
fcoml
mov
pop
test
jo
mov
pop
fsts
pop
sub
shrb
test
out
js
daa
xor
jg
arpl
inc
iret
add
and
push
in
xchg
xchg
add
pop
fs
scas
daa
jle,pt
add
les
pushf
cwtl
mov
and
mov
fcmovnu
jo
cwtl
sub
inc
push
sbb
pop
aam
jnp
in
les
test
or
xorl
xchg
ds
jno
les
sbbb
es
int
dec
adc
mov
out
pop
mov
bound
call
ret
popa
push
pop
testl
mov
in
flds
lcall
ljmp
mov
push
pop
in
add
shrl
xlat
sbb
xor
and
jne
scas
sub
or
jbe
mov
lret
iret
xchg
je
popa
jnp
out
ja
inc
cmp
add
in
push
and
pusha
mov
jns
xor
push
sub
push
sub
xor
jg
adc
sub
sub
xor
mov
cld
push
loope
adc
mov
or
xchg
pop
cld
jb
lea
in
xorb
jp
add
sarl
xor
aad
test
add
arpl
decb
addr16
adc
cmc
and
cmp
inc
mov
dec
inc
dec
sub
xlat
les
xor
repnz
xchg
jne
and
inc
daa
or
pop
insb
push
sbb
push
loop
push
sti
scas
jbe
and
push
mov
sbb
add
mov
lea
les
call
aad
int3
insb
xlat
stc
mov
jno
movsl
mov
cmp
in
repz
jl
push
cmpl
lret
or
scas
add
sub
mov
stos
push
push
lock
sbb
mov
imul
fistpl
and
lock
ss
dec
or
jg
inc
incl
sbb
idivb
mov
ja
pop
jae
mov
and
pushf
lds
das
lods
add
lret
mov
mov
imul
inc
lahf
fdivr
adc
pop
push
xchg
std
scas
fwait
pop
cmp
ljmp
mov
dec
out
xchg
imul
inc
stos
imul
not
pop
mov
pop
mov
pop
cli
mov
pop
and
push
inc
ret
stos
pusha
in
adc
xchg
icebp
mov
aad
push
cwtl
push
hlt
fcmovu
cld
push
dec
xor
aaa
jns
repnz
jno
stos
sbb
lock
pop
dec
xor
mov
mov
gs
mov
lcall
sub
gs
adcl
gs
in
lds
arpl
and
push
dec
in
pop
add
cmpb
sbb
dec
push
mov
movsb
lds
addr16
adc
sub
push
push
stos
in
int3
or
pop
sub
mov
mov
fidivrl
and
clc
xchg
loopne
shr
arpl
jae
int3
insw
sbb
loop
das
loope
xor
nop
lock
add
jns
cmp
pop
dec
cmp
in
and
xor
pop
repnz
cmc
cmp
out
mov
shr
lea
and
lcall
jl
dec
cmp
scas
xor
arpl
fdivs
xchg
mov
sub
outsb
and
cmp
loopne
cwtl
mull
andl
dec
jmp
mov
les
pop
adc
cmc
imul
aas
cmp
mov
lods
adc
jmp
sbb
cmp
jmp
mov
xchg
popa
xchg
jmp
cmc
idivl
call
sub
or
lret
lea
mov
popa
out
jle
cmp
xchg
test
adc
cld
adc
dec
cwtl
flds
xchg
fs
les
pop
mov
outsl
inc
adc
int3
loope
push
inc
test
fs
inc
insb
push
mov
xor
test
xor
adc
shrb
daa
mov
sub
lret
ficomps
dec
add
in
jb
ret
push
shlb
push
push
cs
push
inc
inc
and
dec
ret
in
push
sub
lret
in
sahf
mov
cmpb
sbbb
repnz
cwtl
out
mov
mov
adc
into
jmp
je
xor
inc
addr16
frstor
aam
mov
pop
jnp
int
in
aaa
movsl
faddp
or
int
loope
imul
push
sbb
mov
les
sbb
dec
repz
int
dec
mov
dec
shll
mov
push
mov
push
hlt
fdivr
mov
dec
inc
pop
xchg
mov
jb
daa
add
in
sub
popw
imul
xor
loop
or
shlb
xchg
push
or
js
fldcw
es
ljmp
nop
stos
scas
and
fsubrs
sahf
jo
mov
add
push
xchg
cltd
ja
in
sbb
ss
hlt
cmpsb
dec
mov
int3
push
jnp
gs
and
adc
cmp
jne
mov
sub
loopne
subl
mov
shll
pop
ja
or
push
dec
pop
push
out
fstpl
mov
add
int3
and
add
lds
movsl
imul
pop
sub
pusha
lahf
lcall
xchg
scas
mov
aaa
pusha
mov
in
cltd
arpl
cmpsb
pop
push
popf
dec
jg
mov
cmp
popf
int
adc
iret
addr16
lret
pushf
or
mov
lock
leave
add
push
jge
pushf
xor
add
dec
jo
mov
es
lret
sbb
mov
mov
es
xchg
push
dec
xchg
pop
clc
inc
or
and
xor
inc
inc
insl
xor
jns
cmc
cmp
into
test
jae
in
movsb
push
sbb
push
fwait
ret
in
push
lret
repnz
aas
jl
ss
jle
dec
out
sahf
les
inc
out
dec
mov
out
push
repnz
mov
jb
cmp
dec
into
push
and
or
sahf
rsm
int
mov
movsl
rcrl
mov
fadds
lcall
movsl
mov
test
push
mov
rorb
sub
add
mov
push
jno
cmp
out
jo
stc
loopne
icebp
jno
iret
push
cmp
xlat
push
mov
sub
fdivs
mov
fidivl
fcomps
or
and
imul
fadds
pop
rorb
shl
jno
dec
mov
insl
dec
mov
iret
scas
pop
inc
std
cmpsb
mov
roll
cmp
xlat
jp
pop
idivl
xchg
jge
cmpsl
push
cmc
fnstenv
push
pop
and
and
repz
inc
mov
cmp
pop
sbb
jnp
xchg
and
dec
mov
jge
xchg
mov
ljmp
mov
out
popa
xchg
inc
jp
mov
lods
or
popa
psrad
mov
mov
pop
out
mov
jmp
sbb
shll
push
adc
xchg
xchg
pop
xor
fsubrl
or
cmc
hlt
fisttpll
loopne
mov
or
jns
mov
mov
mov
xor
inc
ja
aad
pushf
ljmp
mov
mov
shll
jmp
adc
addr16
pop
dec
repnz
inc
addr16
in
mov
xchg
xlat
dec
sbb
jmp
pop
xchg
psubq
cld
outsl
cmpsb
add
adc
scas
bound
push
int3
arpl
xchg
lods
adc
sahf
aad
pop
mov
lds
into
xor
and
jne
test
arpl
add
jnp
pop
xlat
dec
es
popf
jl
data16
cmp
loop
subb
lahf
and
sbb
cmp
sar
out
lret
faddp
or
call
or
xchg
jecxz
push
int3
mov
xchg
aad
or
push
orl
xlat
loop
aam
and
lret
ljmp
leave
psrad
xorb
comiss
add
push
push
andb
push
or
scas
jne
cltd
jns
in
scas
scas
sub
push
adc
mov
cld
jo
out
hlt
inc
and
cmp
xchg
push
inc
xor
ret
test
mov
adc
or
push
add
les
mov
xor
int
cld
and
sub
cwtl
sbb
imul
pop
out
out
shll
jbe
pop
and
xchg
loopne
lret
mov
xor
icebp
mov
aam
mov
pop
xlat
xchg
shll
cltd
outsb
jg
cs
xor
repz
ljmp
lcall
add
in
pusha
pop
int
ds
mov
inc
sahf
fsub
xor
aam
or
mov
ret
pop
fldcw
mov
add
ds
dec
add
ret
je
xchg
decb
sub
outsl
popf
xor
dec
sar
stos
xchg
je
inc
sub
cmc
cmp
jae
mov
xor
and
into
call
and
sbbb
imul
pushf
ds
jg
fstl
pop
ja
sbb
sbb
push
mov
test
and
loop
shrl
js
pop
ret
shr
and
into
loope
lcall
jmp
punpcklbw
mov
and
pop
ja
stc
or
and
dec
pop
test
in
sub
fcoml
loopne
push
cmp
or
mov
pusha
scas
in
jae
sbb
or
jg
mov
sbb
notl
adc
arpl
repz
jle
icebp
jb
mov
sahf
mov
ljmp
xchg
loop
pop
xor
aam
aad
out
mov
adc
cmp
aas
inc
je
cmp
cmp
dec
xchg
xchg
imul
aas
shll
adc
fwait
popf
aas
sbb
push
dec
and
mov
lahf
jmp
daa
std
xchg
push
push
adc
fwait
jmp
loope
scas
outsb
xor
xor
xchg
xchg
jle
jns
cmpsb
sbb
sbb
fdivs
sub
enter
mov
sub
dec
mov
fcompl
std
in
mov
ja
jo
movsb
or
je
in
xor
int
jl
or
loopne
adc
pop
es
sub
out
xor
cli
loope
and
and
jl
imul
push
hlt
test
jmp
jae
scas
faddp
lea
xchg
das
sahf
adc
insb
mov
cwtl
mov
imul
sub
sarb
sbb
popa
rclb
lahf
adc
std
and
inc
lcall
arpl
jecxz
adc
sub
sub
std
orl
mov
sbb
cmp
adc
cmc
push
pop
pop
and
fsubrs
xchg
mov
lcall
push
cmp
or
xor
adc
add
add
xchg
lea
inc
xor
cwtl
fadds
loop
and
mov
sbb
cmp
pop
fs
int3
cmovg
jns
jp
mov
xchg
data16
cltd
sbb
movsb
and
sub
mov
ljmp
and
and
xor
aam
movsl
fbld
mov
shr
cs
scas
les
cmc
mov
sahf
ret
jb
fldcw
cli
imul
add
out
or
xor
ds
dec
add
cli
adc
repz
daa
inc
out
inc
dec
mov
cmp
inc
lcall
add
bound
mov
cs
xor
cwtl
push
dec
mov
ja
int3
dec
sbb
sub
pop
rol
int
leave
mov
cmp
in
sbb
bnd
inc
add
mov
sub
push
cmpsl
pop
and
xchg
pusha
loop
mov
insl
inc
hlt
ljmp
xchg
testl
mov
add
push
lret
pushf
rcll
lods
popa
arpl
mov
dec
ja
dec
addl
rol
xor
cmp
mov
test
pop
add
pushf
mov
fwait
bound
in
jl
sub
sti
movsb
push
iret
pop
insl
pop
insb
mov
sahf
ret
mov
aas
inc
lods
sbb
sub
testl
call
scas
jns
call
pop
fimull
adcb
into
shrb
enter
leave
jae
pop
pop
add
aaa
cwtl
andl
xor
aaa
adc
loope
pop
scas
cmp
sub
push
sbb
xchg
sbb
rclb
or
inc
gs
xor
shl
movsl
mov
lcall
inc
push
xchg
pop
push
aad
repz
mov
xor
add
sti
mov
aas
fistpl
cmp
out
shlb
insb
lods
cld
lock
xchg
adc
mov
daa
mov
xchg
inc
add
add
addl
pop
cmp
into
das
dec
cmp
out
sub
cs
pop
push
hlt
and
lock
rcl
mov
cmp
fnstenv
packsswb
push
xor
mov
sbb
ds
mov
fsubr
je
cmpsb
jl
sbb
xlat
lahf
or
movsb
shrl
lods
roll
das
inc
pop
or
jp
stc
clc
fcmovb
das
mov
test
neg
cmp
dec
xor
sahf
mov
bound
xchg
mov
add
or
daa
or
sti
sbb
cmpsb
shrb
in
rcll
sarl
aas
cmp
ja
imul
faddl
mov
add
xor
sti
push
das
jmp
jge
notl
push
mov
clc
nop
jne
mov
pop
fs
xchg
ret
frstor
int3
push
popa
pop
or
movsb
mov
jmp
sbb
sti
clc
imul
in
inc
pop
xlat
add
xchg
mov
add
mov
dec
xchg
sbb
cmp
aaa
loop
lods
outsb
es
add
js
mov
aaa
mov
jle
loop
rcrb
loope
rolb
loop
push
sub
sarl
mov
daa
mov
sub
dec
cmp
mov
cmc
sbb
sbb
aaa
cmp
je
ret
and
stos
xor
push
test
mov
pusha
mov
dec
jmp
fxch
lea
or
mov
or
or
mov
adc
movsl
adc
jno
pushf
std
cmovle
and
outsb
sub
cwtl
lcall
nop
sbb
mov
mov
push
mov
repz
push
cmp
fndisi(8087
inc
adc
sti
and
add
std
mov
jbe,pt
xor
dec
sbb
push
bound
pop
add
cmp
pop
cmpsb
clc
or
mov
sbb
mov
cld
dec
xor
fcmovnu
mov
jno
cs
pop
insb
and
rcrb
dec
js
lds
enter
insl
pop
push
or
sbb
int3
cs
pop
gs
lret
fimuls
je
sbbb
dec
and
loope
and
fwait
and
stos
fdivl
in
or
jecxz
xlat
enter
xchg
xor
adc
sbb
push
mov
test
aam
sbb
subb
loop
movsl
mov
and
in
cmp
idiv
inc
mov
into
jne
je
lret
cmp
sar
insl
jae
jns
mov
pop
jge
dec
out
dec
sub
cmpsl
adcl
aaa
test
push
fnstenv
sub
inc
pop
push
mov
xor
lahf
movl
int
out
pop
loope
dec
bound
sarb
sbb
mov
jg
mov
movsl
pop
sbb
int3
pop
push
cmp
das
mov
je
sub
pop
jno
mov
mov
mov
dec
arpl
push
push
xchg
cmp
cmp
xchg
mov
arpl
xchg
arpl
mov
or
push
jl
jne
outsb
aas
adc
mov
imul
sbb
inc
test
jg
int3
xor
xlat
dec
mov
push
sbb
xor
stos
add
xor
mov
movaps
mov
mov
loope
into
push
int
inc
inc
mov
lret
push
jb
push
imul
lret
jp
dec
mov
and
and
sub
mov
adc
sub
mov
cltd
mov
mov
mov
sbb
push
and
call
mov
stos
out
addb
jnp
inc
mov
outsl
jne
fcomp
popl
or
mov
xlat
repnz
push
pusha
int3
pop
fstp
leave
inc
mov
out
mov
mov
repnz
mov
sub
ljmp
push
aad
sbbb
xchg
gs
or
in
xchg
cld
sti
xchg
repz
jo
cwtl
insl
inc
lock
mov
jle
jmp
xlat
popa
cmpsl
inc
in
adc
aas
sbb
cmpsb
ficomps
adc
int
ljmp
pop
fs
out
jae
xchg
ja
rorb
add
sarb
pop
jbe
lcall
js
add
jge
cmp
push
test
out
es
test
lahf
lds
sahf
ds
outsb
cmp
aam
or
cltd
mov
sub
aam
jmp
sbb
xor
loop
dec
xchg
sub
mov
sbb
push
jmp
shll
add
mov
test
es
pop
call
sahf
sti
cltd
mov
push
daa
xor
neg
inc
scas
out
pop
popa
push
or
mov
aad
out
push
arpl
setno
inc
pop
cmp
movsl
push
mov
cmpsb
cmpsb
sbb
jns
mov
movsb
push
and
cmp
loopne
aas
adc
adc
lahf
add
sbb
push
iret
leave
hlt
insb
push
adc
fsubl
adc
fistpl
sub
push
outsl
popf
es
sbb
lods
xchg
out
push
push
inc
jb
push
or
aam
pop
adc
jle
or
mov
popf
mov
and
inc
pop
sahf
faddl
adc
jge
ds
cmp
test
mov
shlb
pop
mov
dec
cmp
pop
dec
and
sahf
pop
xchg
jl
stc
popf
ss
sbb
movl
push
jp
addl
sub
or
imul
xorl
insb
icebp
mov
add
icebp
jne
mov
mov
cmpb
sub
push
cmp
push
or
and
test
add
cs
or
adc
ljmp
xchg
out
jb
fbld
jmp
add
and
icebp
sub
inc
add
jns
add
xor
hlt
xchg
sbb
push
data16
subl
xor
mov
subl
pop
rorb
mov
lock
adc
pop
pop
xor
inc
mov
ds
aad
imul
cli
and
pushf
fstl
push
js
insl
mov
fcmove
sbb
mov
lds
bound
cltd
lret
das
call
push
cmp
and
mov
xchg
push
daa
aad
jae
cli
test
mov
sub
data16
cmp
xchg
inc
mov
cld
push
mov
js
cmpl
fdivl
jg
sub
mov
lahf
xchg
rorl
add
cltd
inc
cmp
mov
mov
xor
into
mov
dec
inc
push
cli
cmp
mov
sub
icebp
or
cmp
xchg
inc
mov
test
cli
pop
nop
xor
lret
mov
sti
adc
jne
xor
mov
add
pop
dec
stc
popf
aaa
sub
jp
and
inc
mov
xor
inc
les
dec
push
cmc
insl
add
call
inc
aas
loopne
fisubrs
fdivr
inc
out
aam
mov
sbb
dec
scas
add
dec
cmp
mov
dec
cmp
aas
in
int3
push
add
add
insb
and
in
cld
lahf
sahf
sub
sbb
pop
in
pop
pushf
rcrl
addr16
outsl
or
add
cmp
es
jb
les
pop
ss
mov
add
sub
rclb
cmp
push
xor
xor
jecxz
data16
or
xchg
dec
fcoml
mov
xchg
add
cld
sbb
or
outsb
adc
rorb
test
data16
out
in
mov
insl
push
inc
dec
jae
aad
lret
push
push
xorl
xchg
sbb
enter
fs
cltd
pushf
ja
adc
push
into
or
or
ret
jb
add
sahf
jnp
xchg
jl
popa
xchg
jne
xchg
adc
rol
xor
xor
dec
mov
jb
fs
xchg
fsubrs
push
mov
and
icebp
idivb
xchg
mov
xchg
jp
mov
pop
rolb
fisttpll
sti
and
repnz
fdivrs
ficompl
or
sbb
xchg
pop
shl
xorb
mov
mov
add
out
enter
enter
stc
out
add
das
std
movsl
add
loopne
sub
mov
xor
aam
xchg
repz
jns
mov
rcll
inc
xchg
and
xchg
dec
add
mov
aaa
iret
pushf
std
mov
cmc
pusha
mov
push
sub
pop
mov
lret
jecxz
sbb
jecxz
loope
rorl
aas
mov
in
xchg
add
cld
xor
fsubs
mov
mov
inc
mov
pop
or
das
push
jne
in
call
and
dec
dec
out
mov
imul
call
sti
add
or
xlat
mov
pop
icebp
push
rcrb
icebp
inc
mov
pop
sbb
mov
mov
jne
lea
dec
fucomip
xor
xchg
ret
jae
leave
hlt
call
roll
xchg
sbb
inc
pop
jb
add
addl
movsl
das
sub
jmp
ja
cld
mov
xlat
incl
and
adc
pop
or
icebp
xor
and
mov
lea
cmp
xchg
sub
add
loop
inc
enter
xor
imul
sbb
mov
ss
lcall
sub
lea
popl
imul
mov
cmp
sbb
fidivl
hlt
sub
jl
incl
xchg
fs
xlat
out
lret
adc
ret
cmp
cmp
xor
mov
xchg
out
pop
mov
push
xchg
or
pop
addr16
xchg
pop
gs
bound
jmp
cmc
inc
push
mov
pusha
pop
call
mov
sub
add
sbb
stos
inc
pop
outsb
mov
mov
mov
or
lods
or
xor
inc
xchg
cltd
add
cmp
pop
lahf
xchg
jg
mov
jecxz
push
notl
incb
xchg
stos
fcoms
mov
xor
pop
xorl
call
orw
jbe
lock
inc
jb
scas
int3
cmp
mov
sbb
xor
stos
dec
gs
jp
jle
jl
push
adc
xchg
mov
repnz
sub
clc
push
adc
cmpsl
pop
incb
sbb
add
in
gs
xor
xorl
pop
loope
movsb
stc
arpl
jae
dec
pop
cmp
ja
jmp
popf
sub
jmp
daa
fmuls
lods
jg
sub
push
das
xor
lea
int3
inc
jecxz
xchg
jbe
js
insb
mov
sar
add
jb
xchg
xchg
mov
clc
mov
daa
out
aad
adc
add
jo
dec
mov
fsts
lods
ret
repz
lock
sbb
add
stc
stos
inc
mov
push
add
scas
mov
mov
ret
mov
out
loopne
sbb
mov
jmp
jo
out
and
fimull
shlb
push
inc
jp
test
fcoms
cltd
addl
test
sbb
and
cmc
out
aam
jle
fidivrs
xchg
add
xchg
fwait
shll
or
xor
test
push
xor
inc
sub
in
xchg
or
int3
add
rorb
mov
mov
jo
shlb
adc
cmp
movsl
push
and
mov
in
jo
aas
xlat
sub
sbb
cld
clc
sbb
mov
and
add
fwait
into
or
out
lret
pop
and
cmp
scas
in
add
or
nop
sub
mov
sar
leave
dec
dec
inc
mov
or
jmp
inc
bnd
sbb
and
jb
outsl
or
mov
sub
dec
lret
xlat
xor
lcall
xor
push
icebp
gs
jne
push
in
jg
insl
jg
nop
adc
push
rcll
add
pop
xchg
mov
sub
add
outsl
leave
cmp
mov
push
outsl
xchg
hlt
in
out
or
add
mov
repnz
nop
call
shrl
out
roll
xor
sbb
and
and
mov
xchg
jne
mov
bound
push
in
fsubl
adc
inc
pop
push
xchg
stc
shll
and
mov
jbe
adc
and
lcall
cmp
das
dec
dec
out
scas
sbb
insb
cmp
jecxz
push
cwtl
repz
jb
lret
or
aad
mov
inc
lea
dec
mov
loop
test
mov
add
mov
leave
dec
push
pushf
jne
sbb
mov
push
inc
inc
lea
dec
jnp
cltd
repnz
aad
cld
jge
xchg
nop
dec
xchg
mov
loope
add
out
aas
in
insl
test
xchg
das
adc
mov
xchg
pop
mov
lcall
loopne
cmp
fsts
xchg
std
add
loope
pop
data16
xorl
ljmp
or
fcmovnbe
jg
adc
and
push
minps
jp
pop
push
jge
cmp
out
test
lcall
xchg
mov
jle
pop
dec
je
ffree
ret
inc
gs
jmp
jmp
add
sub
hlt
jns
push
ss
inc
inc
cld
dec
fiadds
rcrb
mov
mov
jne
out
adc
sarl
shll
xor
xlat
loope
mov
adcl
int
cmc
je
shll
rcrl
mov
mov
fsubr
mov
push
mov
sub
shlb
fs
div
pushl
lds
pop
incl
popf
cwtl
jnp
cli
pop
fiadds
call
xlat
sbb
add
xor
add
mov
shll
das
jl
sahf
xlat
aam
and
xchg
xchg
mov
fsubrl
stos
dec
cmp
fistps
xchg
dec
inc
dec
fwait
jae
fdiv
inc
sbb
nop
cmp
cmp
sbb
clc
fsubs
or
insb
es
mov
testl
out
xor
dec
or
aaa
lret
addb
mov
pop
cltd
lods
int3
in
fucom
adc
leave
jbe
or
jnp
dec
add
mov
dec
sbb
xorl
cmpsl
sahf
sub
pop
jbe
sarb
std
push
lock
aam
pop
adc
pushf
jg
lds
cmp
shll
push
inc
js
mov
inc
gs
sahf
movsb
push
rorb
fwait
subb
or
mov
dec
adc
out
sub
push
sbb
push
mov
jecxz
xor
jo
add
mov
add
cmc
jb
lahf
mov
je
aaa
mov
jg
adc
dec
sahf
or
lods
inc
dec
mov
or
fdivs
push
and
xchg
pushf
mov
cmp
clc
or
pop
xchg
int
rcll
movsl
in
scas
out
mov
push
add
aam
sbb
call
in
lea
fxch
sarb
mov
lea
or
mov
sbb
inc
and
jle
popf
sti
dec
nop
push
adc
mov
mov
sbb
fsubrl
int
sub
and
add
bound
repz
push
adcl
add
out
mov
adc
sbb
ds
jno
jle
insl
jecxz
cmp
rol
fidivrl
push
push
pop
addr16
ljmp
and
fsubr
mov
aad
mov
dec
mov
adc
lret
js
mov
mov
ja
mov
mov
test
fldl
jg
enter
icebp
jp
vcvtss2si
nop
or
sbb
jmp
imul
fsubs
jae
pop
rolb
mov
movsb
xor
dec
dec
xor
dec
or
fisubrl
inc
movsl
sub
or
cmp
mov
sbbb
cld
int3
cmp
jo
push
nop
sbb
dec
or
fincstp
push
mov
std
rorb
pusha
aad
aad
xlat
imul
js
mov
xor
push
lret
sub
int3
or
mov
test
pushf
shrb
stos
mov
movsb
mov
jne
cmc
test
stos
pop
xor
in
arpl
mov
or
leave
mov
lods
push
jbe
movsb
enter
dec
and
xchg
mov
add
dec
and
addr16
mov
jmp
jecxz
mov
pushf
add
test
fs
and
fmull
int3
pop
push
fsub
or
imul
mov
das
iret
mov
sahf
mov
pop
and
in
and
mov
mov
mov
leave
ljmp
xor
jnp
stc
xchg
push
in
cld
and
orb
cmpsl
outsl
push
sub
cmp
push
aam
xor
ljmp
sub
xor
mov
adc
movsb
movsb
cli
add
and
mov
mov
push
fisttps
jo
and
outsb
repz
int3
das
stc
das
pop
xchg
popa
or
bound
out
fs
call
xor
jbe
mov
jle
enter
jae
outsb
mov
mov
mov
outsb
sbb
push
push
mov
and
fstl
pop
mov
icebp
jo
sbb
push
outsl
xchg
xchg
sbb
ja
mov
jg
add
jns
imul
into
jmp
out
hlt
add
adc
movsb
lea
ss
sbb
xor
mov
push
ja
sarl
inc
push
ret
xor
out
mov
sahf
mov
sub
pop
dec
cmp
mov
dec
stos
lcall
inc
imul
pop
adc
add
adc
cmpsl
andps
out
pop
jae
pop
dec
pop
lahf
xor
test
stos
inc
lret
les
outsb
sbb
fiaddl
mov
sub
test
pop
or
cld
daa
aam
rclb
pusha
fwait
push
cmpsb
shlb
lret
out
pop
stc
add
sub
xchg
ja
cmp
push
fstl
hlt
sbb
mov
loop
jge
enter
sarb
xchg
into
dec
or
mov
movsl
mov
sahf
or
cmp
adc
mov
ret
xor
test
jmp
loopne
into
int3
nop
add
adc
jl
scas
and
push
sti
in
mov
mov
mov
mov
pop
in
cmp
shrl
pop
int3
lea
sbb
incb
fldl
ret
sub
iret
inc
ret
mov
leave
aad
aas
fisttps
or
or
loope
mov
mov
test
adcb
imul
mov
inc
pop
mov
mov
jbe
stc
xor
inc
imul
push
add
aam
lahf
jge
loopne
or
mov
in
bound
mov
jo
push
push
arpl
icebp
and
dec
pop
out
inc
adc
movsb
push
dec
mov
mov
outsb
sub
jns
outsl
lock
cmp
mov
mov
sub
call
out
data16
mov
repnz
xchg
or
push
cmp
sbbb
mov
rcrl
fwait
mov
mov
mov
xor
push
loop
jnp
ds
inc
fs
stos
adc
xor
cltd
and
test
inc
scas
push
cmp
dec
loope
cmp
sub
out
in
jno
sub
std
imul
jp
scas
test
es
adc
movswl
push
push
mov
sbbl
nop
or
sub
negl
cld
mov
mov
outsl
rorb
push
in
cmp
push
lret
mov
dec
push
pusha
cmp
cmpsb
inc
inc
sub
xchg
fs
es
fwait
add
adc
mov
dec
inc
imul
push
jle
xchg
xorb
or
mov
jno
add
int3
mov
mov
fnstsw
bnd
push
mov
jmp
push
xchg
fdiv
mov
jbe
mov
cwtl
dec
cli
xchg
or
dec
inc
cwtl
jp
pop
add
adc
push
jno
call
sub
jl
or
and
scas
mov
test
xchg
add
aas
mov
lock
mov
int3
cmp
in
mov
sbb
jne
xchg
ja
and
mov
xchg
sub
cmp
fisubl
add
ja
mov
adc
imul
sbb
ds
in
in
pop
and
lret
jge
enter
aam
inc
lcall
mov
jo
lds
rclb
inc
ja
clc
aam
or
cmp
cmp
iret
pushf
cmp
pop
dec
push
cmpsb
xchg
pop
test
mov
popf
and
in
fcomp
shll
imul
xor
mov
int
mov
jo
pop
xchg
mov
pop
test
add
insl
dec
xor
movsl
insl
push
test
mov
movl
shlb
sbb
pushf
data16
das
addr16
fwait
mov
fnstcw
or
popf
out
mov
ret
pop
into
or
mov
pop
lret
push
lret
cltd
cwtl
popf
leave
jge
stc
add
in
xor
xchg
cmp
nop
inc
mov
les
fnstenv
mov
or
push
sub
pusha
in
or
xchg
push
pop
aaa
lcall
mov
mov
movsl
daa
cmc
hlt
in
imul
adc
in
outsl
rcrb
aas
mov
or
bound
xchg
pop
pop
outsb
cmp
js
lock
lahf
xchg
je
cmp
inc
rorb
mov
ss
mov
popa
push
sbb
sbb
daa
jb
push
in
mov
mov
push
push
adc
out
sahf
push
dec
jmp
sbb
adc
and
in
pop
dec
pop
jbe
ficoml
ret
jle
imul
mov
mov
sbb
push
xor
js
dec
sbb
notb
aad
test
pop
pop
jae
mov
or
mov
push
adc
jl
dec
add
sbb
cmc
mov
int3
into
sbb
cmp
out
aaa
sbb
jae
out
imulb
push
mov
sbb
imul
mov
mov
lret
jbe
inc
int
test
cmp
xor
xchg
insl
nop
mov
sub
jecxz
and
xchg
pop
sahf
out
daa
push
sarl
xchg
jg
xchg
ds
push
pushf
shlb
pushf
ret
cmc
xchg
in
cmp
es
push
xchg
or
jno
icebp
test
daa
mov
pop
ss
int3
sub
in
xor
xchg
int
shrb
out
dec
int
cmpsl
popa
mov
test
pop
dec
inc
in
ret
or
test
inc
test
and
test
ljmp
mov
push
pop
imul
pop
pop
ffree
scas
int3
popa
clc
leave
sub
repz
xor
or
bound
lcall
sti
sti
sub
jmp
notb
rorl
sbb
push
push
imul
cmpsl
rclb
mov
sti
xor
icebp
sub
sbb
in
sarl
scas
adc
adc
push
aad
ret
jle
sub
jnp
sub
int3
pmaxsw
pop
lock
sti
push
loope
sbbl
stos
jnp
or
movsb
jp
loope
xor
dec
jb
cmpsb
sbb
dec
push
lret
dec
shll
sbb
adc
inc
pop
popa
dec
add
dec
push
mov
mov
cmp
stos
sarb
add
adc
bound
aad
pop
push
inc
mov
fsubs
dec
ficoml
mov
in
inc
ficoms
jmp
mov
gs
push
out
mov
inc
pop
jb
pop
push
aaa
fidivs
jbe
adc
mov
lods
xor
dec
xchg
pop
int
test
mov
movsb
adc
mov
insl
mov
lock
push
add
pop
and
mov
cmpsb
mov
push
je
mov
cmp
out
lds
daa
shufps
shlb
add
sub
pop
jle
sbb
outsl
lods
hlt
push
lahf
cmpsb
icebp
add
repnz
or
pop
iret
mov
ja
test
lahf
js
test
call
push
mov
decl
xor
js
push
out
test
sbb
aaa
jge
stc
std
testb
sahf
fcmovnb
push
mov
cli
push
in
cmp
sbb
dec
add
ds
jl
xor
arpl
sub
pushl
mov
and
cmp
shrb
sti
add
sahf
dec
mov
jl
mov
xchg
fcoml
or
aad
xor
sbb
test
jp
push
stos
mov
int
imul
sub
add
ret
test
mov
mov
leave
mov
repz
arpl
jp
cmpsb
dec
pop
call
std
ret
pop
adc
push
stos
inc
sub
lock
mov
mov
sbb
hlt
cli
jne
cld
lret
cmpsb
cwtl
adc
push
mov
shll
je
sbb
es
int3
fcompl
loope
add
in
sbb
cmp
push
xchg
sub
jbe
sbb
leave
sub
xchg
loop
xchg
fsubl
testl
pop
xchg
int3
ljmp
add
lahf
mov
loopne
jne
ljmp
jno
arpl
ss
push
inc
or
jo
adc
frstor
scas
push
imul
bound
std
fcomps
les
repnz
mov
mov
stc
xor
fnsave
cld
push
push
adc
pop
jge
outsb
dec
add
xor
inc
call
xor
push
xor
iret
or
inc
mov
hlt
or
loope
dec
andb
xchg
loope
loop
jnp
jmp
adc
jns
mov
push
mov
mov
adc
cmpsb
xchg
sbb
ret
ja
mov
das
lret
xchg
xor
shll
outsl
pop
mov
loop
cmpsl
daa
sub
push
pop
mov
sahf
or
gs
cmp
mov
movsb
mov
mov
into
or
fisttps
xchg
push
mov
mov
xchg
movsb
lea
enter
pop
mov
sbb
iret
mov
cli
mov
jmp
je
lret
fisttpll
sbb
xor
jbe
and
sahf
in
xor
js
subl
pop
push
or
inc
jbe
xor
dec
xor
fadds
xor
sahf
push
jbe
xchg
xor
sub
cmpsl
ss
jb
imul
pop
imul
cmpl
mov
or
mov
fadd
sbb
popf
cltd
sub
xor
and
pop
inc
call
in
lods
test
int3
lock
adc
mov
pop
dec
sub
jg
sbb
xchg
push
dec
jle
into
sbb
lret
mov
fdivrl
or
mov
mov
lcall
mov
and
xor
leave
add
sbb
jmp
fld
pop
mov
fwait
movsl
fistpl
stc
pop
mov
push
or
jo
call
cmp
les
xchg
xchg
inc
ds
pusha
dec
inc
mov
daa
iret
out
insl
dec
xchg
out
push
fcomip
jne,pn
sub
pop
jg
cmp
cmp
insb
outsb
adc
xlat
out
in
test
icebp
xchg
sar
imul
add
dec
mov
je
jae
and
jecxz
and
out
test
pop
or
jbe
in
adc
inc
lock
orl
iret
xor
fiadds
jg
test
adc
jp
cmpsl
pushf
ljmp
test
dec
mov
enter
dec
cs
jbe
dec
xchg
pop
pusha
sub
movsb
cmp
dec
fsubr
fisttpll
int3
sti
rcr
or
andb
leave
dec
inc
lock
popa
jns
in
push
xchg
adc
vmaxpd
sbb
jae
mov
sbb
or
lret
into
stos
stos
lods
mov
test
cwtl
ds
imul
mov
pushf
mov
mov
or
fisubs
pop
adc
and
dec
aam
sbb
out
or
hlt
dec
lds
mov
mov
xchg
mov
repnz
jb
or
jp
in
fadds
push
inc
jns
flds
test
aad
inc
and
nop
ljmp
push
dec
jns
data16
lahf
push
lods
mov
icebp
scas
lcall
cltd
sbb
mov
sbbl
out
xlat
in
mulb
lcall
xor
ret
inc
out
jge
fldt
mov
jne
aaa
or
or
adc
mov
jg
popa
mov
xchg
in
dec
push
cmp
xchg
and
inc
pop
sbb
es
pop
sub
pop
std
and
movb
pop
jecxz
loop
lea
js
mov
loop
mov
sub
xchg
push
pop
ljmp
jb
cmp
sbb
mov
cwtl
add
cmp
in
xchg
jmp
mov
mov
in
xchg
dec
lock
std
xchg
mov
xor
clc
imul
sub
fsubrl
mov
nop
jns
sub
pop
jp
lods
pusha
call
shl
fnstenvs
inc
rorl
xor
sub
jbe
pop
jne
sub
xor
dec
rclb
add
xchg
push
push
aam
lods
mov
dec
in
rcl
popf
mov
ret
jno
testl
imul
cli
lods
movsb
mov
sbbl
or
faddl
or
jb
mov
jb
hlt
shlb
pop
jbe
out
out
fldcw
mov
pop
or
push
mov
mov
lods
fisubl
and
fwait
inc
ret
pop
ror
mov
jle
mov
jecxz
add
sbb
fidivrl
mov
xor
cmp
xchg
out
insl
lea
inc
rsm
mov
mov
cltd
jnp
sbb
xchg
push
pop
add
repz
movsl
mov
in
add
push
xorl
push
ficomps
pop
mov
mov
lods
nop
push
push
cmp
psubusw
push
fsubrs
test
scas
sbb
xchg
jle
popf
push
dec
int
or
xchg
fisubl
lods
push
cmp
sbb
jecxz
insl
jbe
loope
out
rcrl
shlb
lds
jns
outsb
inc
xchg
push
rcrb
sub
sysexit
mov
xchg
mov
pop
outsb
fadds
in
pop
inc
jo
stos
subb
jo
test
imul
jl
sub
inc
mov
popa
and
push
and
adc
jmp
sbb
outsb
pop
jmp
ret
popf
add
xor
push
pop
out
cmp
test
in
js
or
xchg
outsl
or
movsb
xor
pop
mov
mov
ss
fwait
mov
andl
adc
lods
xor
push
or
fs
sbb
sbb
adc
add
and
insl
inc
outsl
loop
cmp
mov
jnp
xor
inc
in
jge
dec
sar
in
lods
xor
imul
jp
push
ret
loop
in
dec
mov
dec
mov
cli
and
xchg
dec
or
push
sbb
gs
lret
jae
or
mov
test
inc
sbb
mov
fistps
and
aad
fmuls
rorb
lret
nop
mov
cmc
xor
jnp
orb
mov
iret
out
or
dec
je
inc
iret
adc
fstl
cli
push
roll
xchg
repnz
out
aas
es
xor
call
inc
or
fnsave
dec
nop
stos
xor
push
test
inc
incl
ja
xchg
movsl
xor
push
fmul
mov
add
clc
mov
xorl
fs
mov
xchg
lods
sti
imul
push
cld
mov
adc
pop
lods
inc
mov
leave
jl
jle
cmp
out
inc
jns
je
mov
int3
nop
sub
mov
push
jge
int3
sub
sti
lea
mov
in
push
pop
or
xchg
int3
or
jno
std
mov
mov
lahf
pop
mov
ss
std
shlb
dec
scas
ficompl
das
sbb
mov
jo
cs
and
sbb
jb
jp
xor
mov
or
inc
mov
xchg
adc
and
fs
clc
psubusb
jge
add
decl
add
and
mov
in
sub
stos
sahf
jge
push
scas
adc
sbb
sub
cmp
mov
and
xor
mov
seta
aaa
adc
fcompl
fwait
and
pusha
pushf
stos
mov
int
dec
push
dec
lret
ret
std
push
shrl
cmpsl
dec
out
movsb
rolb
mov
cmpl
sub
icebp
ss
in
je
iret
lods
xchg
nop
push
lds
cmp
loope
loop
or
mov
retw
mov
and
lock
sbbl
and
sub
push
in
or
dec
sbb
sub
in
push
addr16
add
mov
mov
lods
push
clc
xlat
inc
jbe
lods
jg
insb
bound
lea
and
loopne
clc
or
mov
pop
mov
xchg
mov
ljmp
mov
rcrb
or
mov
lahf
rorl
addr16
hlt
rorl
sahf
jmp
mov
jns
leave
and
sbb
arpl
mov
xor
andb
push
push
inc
in
test
jne
jecxz
adc
mov
xchg
hlt
rcrl
and
imul
jle
les
cs
mov
cmp
mov
xchg
and
xchg
rcl
pop
or
in
movb
hlt
mov
aam
bound
sub
addr16
xor
jae
call
shll
jne
hlt
fyl2xp1
push
or
aad
loop
mov
and
mov
dec
cmp
stos
inc
addl
mov
sub
pop
popa
sub
dec
dec
pop
or
adc
repnz
pop
loope
sub
lret
cmp
shl
imul
outsl
inc
pmuludq
out
inc
pop
add
mov
dec
add
sub
shll
test
sbb
movsl
enter
es
dec
loope
mov
adc
cmc
adc
sub
sbb
int
push
mov
jle
sbb
popa
sub
mov
sahf
xor
pop
addr16
mov
adc
into
xor
cmp
xor
rol
ljmp
repnz
sub
jecxz
dec
dec
outsb
idivb
pop
dec
xor
sub
es
clc
stos
jno
jp
sbb
mov
insl
adc
xchg
hlt
into
mov
sbb
pop
hlt
out
sub
bt
inc
icebp
and
and
daa
or
std
jns
inc
in
inc
mov
pop
inc
or
fildll
push
mov
pop
inc
ds
lret
icebp
and
flds
inc
pop
andl
push
and
inc
xchg
stos
mov
jae
dec
je
push
int3
aad
fs
xchg
push
inc
dec
mov
mov
cmpsb
mov
dec
fdivs
cmp
mov
outsl
adc
popa
clc
add
or
es
test
cmp
in
push
test
mov
in
jg
fdivrl
icebp
or
xor
add
scas
adc
xor
out
rolb
sub
jge
mov
cmp
test
into
xor
add
das
out
imul
cmc
in
fldcw
inc
clc
aad
shrl
mov
adc
mov
and
bound
xor
cmp
sbb
jle
sti
jp
and
xchg
push
movsb
add
cmpsb
cmp
mov
pop
xor
or
cmp
mov
movb
xchg
iret
adc
stc
xor
and
ret
lea
ljmp
mov
add
cld
iret
mov
out
adc
movaps
das
sbb
hlt
mov
pop
shr
aas
stc
mov
in
scas
popa
xchg
cmpsl
sub
and
das
inc
imul
pop
xor
cmpsl
out
hlt
xor
jge
es
mov
mov
xor
gs
idivb
ljmp
popa
pop
sbb
sub
fs
cmp
lods
cmp
sub
pop
xchg
cmpsb
das
push
mov
js
jl
mov
pop
scas
mov
sahf
ss
iret
in
outsl
or
or
xlat
fidivrl
shl
lret
pop
mov
push
daa
inc
cmp
sub
push
fisubrs
cmc
lock
scas
or
icebp
divb
inc
ret
pop
iret
inc
push
aam
sbb
xor
adc
xchg
aam
xor
fwait
mov
mov
sahf
inc
adc
mov
sbb
add
sti
add
clc
cmp
loope
scas
movsl
adc
mov
pop
inc
push
mov
dec
loope
push
stos
pop
dec
std
xchg
jmp
add
push
mov
xchg
pop
les
jbe
jno
es
xchg
addr16
cmp
fsubp
sar
shl
outsb
outsb
push
pop
jbe
xor
into
ficomps
inc
or
into
add
gs
mov
xchg
int
addl
xchg
push
dec
out
scas
addr16
inc
push
xchg
xchg
push
fistl
add
stos
les
divb
mov
sarb
mov
stos
lock
dec
pop
in
mov
mov
xchg
sbb
insb
lods
dec
cli
sbbb
lea
fnstcw
insb
out
shll
repz
les
es
pusha
fistpll
lods
or
push
insl
mov
arpl
dec
sub
loope
adc
ret
sub
push
adc
aad
shlb
lret
imul
cmpl
jp
bound
fisubs
mov
and
hlt
jle
jl
jp
jg
jmp
test
pop
ds
lret
and
iret
mov
iret
les
push
pop
or
mov
jbe
cmpb
cmpsl
lds
movsl
mov
int3
adc
adc
test
cmp
pushf
sahf
nop
push
mov
or
arpl
or
int3
jns
sub
dec
bound
xchg
xor
xchg
inc
popf
js
pop
rorb
adc
frstor
or
in
fdivr
dec
sub
pop
sbb
xor
test
ljmp
in
jg
outsb
adc
ljmp
imul
push
adc
in
cwtl
out
push
shlb
add
xchg
sbb
sub
inc
add
in
sbb
pop
orl
cs
sarl
inc
rolb
pusha
into
rorl
xor
lds
and
mov
mov
ds
add
data16
jg
push
loop
dec
clc
pushf
xor
rcl
dec
loop
adc
push
out
xchg
xchg
inc
mov
mov
cmp
sahf
aad
xchg
pop
jle
call
jecxz
jl
cmp
ja
push
ror
int3
xlat
push
mov
cmp
mov
out
out
mov
cltd
les
test
mov
stos
add
and
xor
mov
inc
xchg
adc
push
gs
pop
pop
clc
cmp
sub
mov
enter
sub
cs
fldt
cwtl
adc
xchg
dec
shll
jp
dec
cltd
std
sti
cli
or
sti
cmpsl
dec
inc
adc
jb
inc
jge
mov
xchg
je
mov
mov
add
pusha
sarb
mov
mov
mov
lcall
sbb
imul
out
cmp
sbbl
push
jge
lea
stc
fisubl
imul
xor
clc
das
jno
into
mov
lods
sbb
sub
pop
std
push
inc
inc
in
pushf
pop
and
loope
into
mov
dec
jmp
cmp
ret
fsub
dec
add
jne
orb
push
gs
std
add
movsl
ret
sbb
fbld
scas
insl
fwait
jno
cmp
fistpl
loopne
dec
insb
jo,pn
jbe
stos
sub
lret
mov
inc
outsb
nop
cltd
arpl
pop
push
push
xor
pop
aad
scas
enter
fcompl
inc
dec
shr
fists
jns
push
in
flds
push
popf
hlt
lret
test
in
adc
add
aas
sbb
mov
xchg
dec
push
pop
sbb
popa
or
test
push
xchg
mov
or
sarb
jle
int
mov
movsb
in
sub
inc
and
pop
jnp
sub
or
icebp
xchg
xor
cmp
mov
fisttps
outsl
mov
jns
push
mov
outsb
xor
cmpsl
mov
aad
mov
jae
pop
or
std
gs
push
sahf
les
stos
jne
pop
nop
out
xchg
sub
and
iret
push
cli
push
call
xor
xchg
sbb
loop
popf
mov
pop
sbb
mov
adc
out
jmp
nop
xor
das
cmc
fmul
jecxz
lods
sbb
mov
sbb
mov
movsb
shll
sub
popf
pop
push
sarb
iret
or
lods
sub
dec
jg
jno
pop
pop
fstpt
stc
xchg
lahf
push
repnz
or
push
lock
xor
lock
aaa
ljmp
mov
push
push
mov
adc
xor
in
fcoml
sub
lret
sbbb
mov
fwait
sbb
mov
mov
sbb
and
ljmp
or
jecxz
lods
dec
cmpsl
add
idivb
mov
scas
into
fcomi
pop
adc
add
xor
nop
out
je
sbb
jp
aas
sti
cmp
jae
mov
and
stc
xor
push
movsb
outsl
jmp
mov
dec
leave
push
shr
xor
mov
pop
mov
into
push
out
repnz
dec
push
clc
nop
cmp
cmc
lods
mov
pushf
scas
cld
or
ficoml
clc
sub
push
mov
or
and
xchg
sbb
inc
or
mov
mov
sbb
fists
jp
int
ffreep
mov
pusha
into
inc
mov
imul
pop
jae
mov
sub
jo
ss
scas
or
and
lods
lret
int3
scas
aam
aaa
dec
out
out
sub
add
and
test
sbb
into
dec
and
ss
test
xorb
cli
aaa
ror
cs
rcr
popf
mov
pop
movsb
mov
add
push
inc
icebp
ret
dec
sub
jne
push
aam
mov
fld1
and
addr16
dec
js
addr16
mov
loope
leave
mov
and
leave
pop
pop
mov
lock
cmp
movsb
xchg
and
sbb
pop
inc
add
lahf
enter
inc
adc
dec
test
pop
adc
adc
pop
sub
cmp
cld
xor
hlt
or
push
jbe
daa
mov
mov
sub
js
sub
imul
pop
mov
lret
lds
adcb
adc
and
jmp
ret
sub
cmp
lods
xchg
cmp
mov
mov
mov
xor
add
outsb
ret
imul
jb
les
in
sbb
xchg
add
mov
in
and
mov
movsl
mov
aaa
insb
or
loop
repnz
pop
jle
nop
sub
test
js
nop
adcb
sub
out
push
lret
push
les
and
gs
fldcw
jbe
mov
mov
mov
in
dec
dec
add
icebp
arpl
jae
and
lock
adc
jg
cwtl
sub
idivb
push
out
add
icebp
xchg
cld
outsb
jl
jge
aam
mov
xor
stos
ret
inc
cmp
cld
pop
adc
pop
xchg
mov
pushf
loope
jle
subb
add
mov
mov
cmp
push
test
xor
jno
loop
into
sub
and
fwait
adc
add
ja
cwtl
cmc
or
push
add
push
fidivl
insl
adc
outsb
lds
or
rorl
xchg
xor
sbb
sti
addr16
ja
inc
bound
lcall
xor
jo
push
mov
int3
movb
push
pop
loopne
sbb
test
xchg
loope
ret
cli
sub
insl
data16
and
sete
sbbb
push
or
mov
cmp
data16
add
adc
and
arpl
lea
xor
scas
mov
fsubrs
mov
lods
stos
icebp
add
mov
push
ds
cli
mov
insb
ja
in
or
dec
ds
lea
sub
xchg
inc
xchg
push
adc
jns
mov
pop
xchg
pop
mov
add
ret
push
cltd
mov
pop
out
mov
pop
in
dec
pop
mov
mov
das
rorl
int3
ss
or
clc
bswap
sbb
dec
jp
xchg
mov
mov
shll
iret
inc
push
mov
fwait
adc
push
pop
sbb
sub
push
xchg
and
jecxz
and
pop
dec
push
cmpsl
out
cmp
pop
aaa
add
insl
stos
push
sub
xor
or
cwtl
cli
push
mov
sbb
cmp
addr16
divb
out
xor
pushl
ss
stos
inc
mov
mov
mov
mov
std
ljmp
jne
cltd
test
ja
sahf
das
xor
mov
jge
pop
into
int
iret
out
dec
push
inc
or
add
aam
rcll
in
dec
add
sti
and
push
push
fwait
mov
mov
js
or
out
push
xor
xchg
fisubs
out
inc
out
stos
inc
pop
mov
test
pusha
aad
lret
sahf
adc
les
in
lods
shll
ljmp
lock
leave
jge
xchg
mov
out
adc
in
push
andb
not
add
jmp
clc
pop
lock
inc
sbb
clc
fs
fnstsw
mov
cmp
testb
mov
cmp
cs
sbb
pop
mov
in
movsb
fidivrl
mov
jnp
pushf
adc
sub
jmp
out
jae
mov
movsb
xor
mov
sub
sti
insl
fs
push
mov
into
dec
cmp
dec
dec
dec
lds
aam
or
in
pop
or
or
in
mov
test
clc
xchg
cmp
mov
jge
mov
hlt
cmp
adc
pushf
clc
pushf
xchg
loop
enter
jo
push
jo
aad
mov
inc
out
add
fstps
movb
inc
jle
rorl
ds
mov
data16
call
mov
andl
cmp
and
outsb
inc
inc
fdivp
shll
cmpsb
mov
adc
shrl
push
sti
in
inc
icebp
mov
das
enter
mov
ret
mov
push
shlb
xchg
xchg
mov
loop
sub
rcrl
mov
cli
add
jnp
pop
out
enter
add
add
xchg
fs
add
aas
mov
in
sub
push
sbb
movlps
daa
ljmp
sbb
pop
add
out
or
cmp
push
lods
or
add
xor
call
call
mov
jmp
arpl
lods
shl
dec
in
mov
nop
pop
mov
loopne
mov
add
xchg
pop
add
pop
pusha
jae
lret
push
jb
stc
and
lds
cmp
aad
orl
in
or
or
cld
pop
jbe
xor
scas
add
dec
les
sbb
dec
mov
sub
loop
sbb
cmc
out
add
push
mov
jnp
popf
test
lds
hlt
cmp
jge
dec
sbb
mov
subb
cmpsb
ds
movsl
aad
cmp
jne
addl
stos
mov
lds
pop
inc
je
ljmp
fstps
or
dec
mov
xor
stos
popf
or
xor
shrl
jl
mov
cmp
lret
sbb
pusha
and
push
pop
ja,pt
pop
int
jnp
xor
or
rclb
nop
push
cltd
sbb
add
push
jb
sub
out
xlat
cmpsl
pop
mov
and
jl
cmpsb
inc
ja
test
mov
mov
pop
mov
bound
sbb
aas
lret
xor
fnstcw
sbb
scas
lods
idivl
insl
lahf
pop
scas
sbb
lods
addl
cmpsb
outsb
lock
lods
mov
mov
jp
movlps
xchg
xlat
jae
or
movsl
fs
enter
push
add
divb
jmp
enter
shlb
xchg
pop
pop
loopne
add
add
inc
clc
rcrb
pop
xor
inc
add
pushf
insl
in
jb
mov
sahf
cwtl
test
xor
xchg
repz
incb
outsl
aam
cmpb
stos
dec
xchg
adc
scas
mov
mov
fiaddl
icebp
mov
dec
imul
adcl
lret
xor
cmp
and
jl
or
pushf
xor
mov
xor
sub
ret
sbb
add
jbe
ja
imul
out
fisttpl
jnp
mov
nop
jge
cs
xor
or
xor
add
out
add
dec
js
call
inc
aas
addb
out
pop
mov
rep
cltd
sub
adc
inc
mov
or
dec
hlt
mov
pusha
outsl
xchg
repnz
sub
jmp
mov
jo
mov
mov
xchg
mov
arpl
repz
rclb
ror
lods
jmp
xchg
push
xchg
sub
inc
sbb
xchg
cmpsl
lret
sti
mov
int3
and
mov
xor
lret
jge
jbe
cmp
or
jnp
sub
mov
pop
pop
inc
sub
dec
cmpsb
push
xchg
mov
add
jo
sub
mov
push
lret
mov
icebp
enter
ja
mov
iret
mov
negl
adc
imul
sbb
xchg
lods
mov
jl
out
dec
xchg
dec
fcomps
xchg
add
add
inc
pop
inc
jns
repnz
mov
or
mov
fs
adc
inc
insl
xchg
jnp
or
fs
out
sub
lret
arpl
andb
add
mov
jns
frstor
movsl
aad
in
adc
and
or
call
stos
fldt
push
call
inc
sbb
daa
cmp
imul
gs
push
cmpsl
icebp
aaa
mov
notl
adc
mov
jnp
jne
call
aas
xor
loope
pop
lcall
jb
xchg
mov
popa
pop
movsb
lods
test
lock
jae
or
ljmp
pop
inc
fildl
sbb
int3
lods
and
adc
nop
sahf
xchg
pop
stos
aaa
jp
ja
sbb
popa
xchg
inc
out
mov
push
jmp
setnp
xchg
es
testb
jge
ja
inc
test
pop
jo
icebp
sbb
loop
mov
inc
notb
jb
sbb
pop
inc
mov
loope
pop
adc
outsb
pop
pop
inc
push
jae
notl
push
mov
js
adc
xor
jo
and
icebp
orl
adc
cmp
je
mov
xor
cmp
inc
sbb
cmpsb
mov
inc
negl
shlb
pop
mov
or
push
cmpsb
inc
sub
inc
int
popa
into
xchg
mov
stos
xlat
pop
push
xchg
mov
cmpsb
popw
xchg
pop
outsb
fcoml
add
xchg
out
mov
jl
or
popa
notb
nop
push
sub
push
lret
pop
fsts
lret
out
sub
adc
pushf
mov
cmp
jl
loopne
sub
lods
xchg
adc
sbb
ljmp
pop
leave
fdivrp
hlt
jb
shll
cs
cmp
xchg
push
lods
xor
aaa
add
xchg
cmpsb
ljmp
jp
aad
mov
lock
sarl
push
mov
jne
cwtl
nop
test
inc
and
roll
scas
xchg
or
test
sbb
push
or
lret
leave
cld
adc
cmpsb
mov
push
lcall
fiadds
movsl
fisubrl
shl
jnp
jecxz
data16
dec
mov
xchg
jmp
shrl
out
mov
rcrl
adc
jne
ljmp
xchg
adcb
dec
cltd
test
hlt
sbbl
or
mov
lcall
icebp
repnz
sti
mov
or
push
sub
sbb
add
jnp
sbb
or
gs
outsb
in
ret
sbb
dec
repz
jmp
sbb
add
push
stc
movsb
ret
fnstcw
push
imul
lods
or
cmpsb
cs
xor
cmp
mov
bound
test
lcall
in
xor
stos
aad
sub
sub
add
fucom
mov
xchg
test
pop
cmp
push
mov
inc
inc
rcr
shlb
repz
push
sub
sbb
cmpsb
and
add
insl
aas
pop
xchg
data16
mov
leave
adc
sub
repz
orb
les
sahf
fsqrt
xchg
push
xor
cli
cli
mov
inc
xor
and
fs
pop
pop
shl
push
mov
cmpps
es
repnz
mov
gs
call
mov
mov
push
in
add
mov
jl
inc
mov
mov
or
and
scas
leave
xor
shlb
jp
adc
dec
sahf
emms
xor
repnz
ja
jp
sub
sbb
pop
push
jl
xchg
mov
pop
mov
xchg
int
repnz
push
lods
loopne
jnp
and
addl
pop
stc
lret
lea
notb
in
or
lods
cmc
ljmp
adc
jne
push
jae
hlt
xor
pop
push
add
lds
scas
mov
lret
mov
cltd
dec
mov
push
or
push
xor
cmpsb
push
clc
out
mov
add
movsb
xor
sub
scas
loop
pop
les
inc
movsl
sub
repz
cmpsb
bound
push
aas
ret
call
mov
les
add
cmp
jnp
mov
movsl
cmpsb
inc
adc
loop
in
cld
shrl
inc
out
cmp
or
movsl
inc
add
scas
cmpsl
or
dec
aam
dec
or
pop
cmpb
mov
jmp
xchg
add
xchg
imul
fldt
push
rolb
das
outsl
aam
xor
or
mov
stos
js
enter
dec
ret
daa
out
out
xchg
ja
xchg
pop
xlat
repnz
adc
inc
imul
js
pop
mov
xlat
fucomip
jne
cmp
fnstcw
jle
sahf
clc
adc
pop
mov
sbb
mov
repz
roll
jp
lcall
xchg
sub
roll
scas
fldcw
fcoml
xor
fmuls
push
repz
jmp
adcb
xor
mov
arpl
sub
or
inc
int3
push
push
jns
lret
jmp
lahf
and
and
and
stc
test
subb
les
push
out
mov
inc
or
out
loope
pop
sbb
in
dec
dec
adc
cmp
jmp
sbb
out
jns
out
adc
test
test
mov
jo
hlt
aas
in
lcall
in
inc
or
pop
aas
lods
sbb
sbb
and
lahf
or
data16
fistpl
int3
and
inc
pop
jmp
lret
loop
fs
jmp
push
cli
xor
cld
stos
mov
push
sbb
outsl
cmc
fcmovne
fdivs
and
jl
adc
adc
ret
push
sar
dec
push
or
xchg
mov
xchg
pop
test
mov
sub
popa
xchg
sbb
cmp
xchg
cwtl
test
out
sub
lds
xorl
fcomps
mov
outsl
cld
sub
push
cmp
aaa
dec
jnp
incl
xchg
sub
scas
inc
add
out
popa
ret
fstpt
cmp
int
call
mov
mulb
xlat
cmp
fisubs
pop
jge
lods
adc
jbe
lahf
ss
je
xchg
cli
iret
orl
xchg
jb
pop
sub
movsl
pop
scas
inc
pop
inc
ds
pop
dec
out
mov
and
pop
sub
mov
cmpsb
insb
jmp
add
adc
sahf
xor
push
in
adc
mov
js
mov
lret
test
cmpsl
imul
nop
sahf
fcompl
push
test
stc
or
je
leave
std
cmp
int
add
xor
push
imulb
dec
jno
cwtl
hlt
test
or
mov
or
fdiv
or
add
and
dec
mov
add
or
js
dec
stos
sbb
nop
aam
cmp
sbb
fcmovnu
aas
ficomps
cmpsl
cmpsb
push
imul
in
mov
jle
push
leave
std
sub
inc
jo
jbe
in
fsubrs
dec
cli
push
bound
cs
adc
pushf
repnz
and
xchg
xor
dec
lcall
pop
adc
fnsave
loopne
jae
xchg
or
or
inc
mov
mov
out
mov
dec
sarl
and
cmc
push
scas
icebp
dec
jle
mov
insl
gs
jae
mov
mov
std
mov
sti
pop
movl
xchg
popa
inc
jecxz
push
subw
insl
mov
adc
xchg
mov
ljmp
scas
int
cmp
nop/reserved
mov
incl
fwait
inc
sti
mov
lret
fimuls
mov
push
mov
int3
pusha
mov
ss
loopne
lods
mov
in
xorb
add
in
xor
cmpsl
nop
lcall
roll
or
jnp
or
mov
sub
cmp
aad
push
dec
sub
scas
mov
test
mov
addr16
lock
daa
lock
int
pop
repz
call
and
cmp
cli
mov
lods
imul
inc
pop
lret
loopne
cld
sub
xchg
pop
or
pop
mov
mov
loope
sahf
mov
jmp
mov
rol
vmcall
bound
pushf
jb
clc
hlt
xchg
pop
fwait
dec
sub
sub
mov
sbb
push
mov
inc
cld
stos
popa
fcoms
mov
lock
js
js
enter
dec
jae
xor
push
cwtl
fisttpll
orl
add
and
push
inc
add
mov
add
lds
jne
daa
inc
lahf
in
hlt
mov
add
syscall
dec
iret
pop
ficoml
jno
test
cmpsl
sbb
xchg
jmp
jo
inc
add
enter
ret
pushf
mov
mov
es
cltd
pop
or
test
xchg
push
addr16
insb
aas
xlat
fs
cmp
mov
jne
std
sub
std
push
jo
sub
out
iret
stc
push
mov
add
fldenv
xchg
in
popa
fisttpll
in
sbb
nop
and
mov
sub
jmp
mov
ror
and
cmpsl
or
jp
sahf
es
enter
sbb
sbb
mov
leave
push
into
jnp
leave
or
mov
pop
jo
adc
cmp
in
into
dec
ljmp
jae
loopne
das
dec
jge
mov
sub
popf
jbe
lahf
add
cwtl
pop
push
jmp
mov
inc
fdivs
pop
ljmp
inc
das
addr16
ret
imul
mov
adc
repz
pop
daa
pop
pop
shlb
dec
jbe
out
dec
jmp
mov
xor
jbe
clc
ss
add
mov
loop
push
xor
jno
jbe
in
fucomi
push
jle
jg
mov
cltd
xchg
lods
jbe
adc
and
push
insb
xlat
mov
mov
outsl
add
mov
sbb
sbb
stc
cli
inc
sbb
not
pop
lret
rolb
jge
xor
sahf
jbe
sbb
xor
mov
xor
pop
int3
lods
dec
xchg
es
inc
dec
xchg
int
jb
sub
dec
push
jb
xchg
in
adc
xor
xchg
xor
rcrb
push
and
pop
out
xchg
sbb
cmc
fcomps
ljmp
ficoml
data16
int
or
xchg
shlb
stc
sbb
clc
daa
sbb
int
pop
sub
lret
mov
int3
leave
xchg
rcl
popf
jmp
cli
scas
into
mov
xor
in
lahf
scas
xor
or
xchg
push
shll
lods
call
pop
cmpsl
addr16
add
lods
pop
test
sbb
add
push
xchg
dec
outsl
out
adc
pop
cmp
xchg
int
pop
pusha
adc
and
mov
cmp
in
add
sahf
aaa
adc
add
jecxz
inc
push
data16
cwtl
rclb
adc
mov
fs
sbb
sti
jp
hlt
fstps
je,pn
cmp
aad
repnz
movl
loopw
aaa
jmp
sub
aas
mov
sub
lahf
cli
cmp
pop
in
popl
dec
mov
sbb
adc
cmp
mov
incl
and
push
pushfw
mov
dec
inc
outsb
or
xlat
inc
xor
icebp
mov
test
jb
or
testl
or
cwtl
cmp
mov
sbb
out
sub
dec
push
pop
mov
out
nop
lods
cwtl
sbb
jae
jne
lock
fwait
sahf
enter
mov
jno
mov
sub
fcoml
mov
xchg
lea
leave
sbb
sub
cmp
cmc
rcrl
stos
push
or
test
scas
loope
ljmp
add
inc
in
inc
adc
sub
sbb
push
sti
std
inc
push
shll
and
cmpsb
popa
nop
cld
in
bound
sbb
mov
imulb
and
fsubrs
fstpt
rcll
aad
mov
out
cwtl
inc
ds
addr16
outsl
aas
and
js
mov
xchg
mov
pslld
xchg
pop
subl
cwtl
push
mov
dec
mov
cmp
push
mov
pusha
inc
popl
xchg
sub
nop
pop
or
aas
pop
xchg
ret
push
aam
cmp
push
and
mov
dec
mov
iret
mov
repz
icebp
xlat
bound
test
lret
push
out
lea
xchg
push
or
and
bound
lods
mov
call
outsb
or
mov
mov
call
xor
or
mov
mov
stos
mov
das
push
inc
sbb
push
test
addb
bound
insl
push
lahf
das
sbb
mov
add
loop
inc
sbb
in
inc
cmp
mov
pop
xchg
pop
out
nop
enter
push
das
pushf
es
loop
test
jl
sub
shl
inc
pop
and
or
and
mov
sbb
jmp
test
mov
cmp
inc
in
pop
stos
rcll
nop
or
mov
dec
xor
lret
or
clc
arpl
jge
add
mov
mov
push
or
popf
jo
dec
pop
sub
jbe
mov
aad
call
inc
ret
add
xor
int3
rorl
cmp
lret
adc
inc
add
addr16
movl
sub
dec
cmp
jge
jg
mov
adc
js
out
jb
out
jecxz
mov
fwait
jmp
inc
fmull
divb
jle
lret
repnz
cmp
iret
sub
jg
sub
mov
mov
adc
outsl
ret
jg
je
imul
filds
ljmp
leave
push
les
std
dec
arpl
dec
lds
inc
sbb
xchg
pushf
and
aad
mov
test
or
sbb
xchg
negl
imul
mov
leave
mov
aad
ffreep
int
scas
ja
ds
mov
loopne
and
jnp
aad
cli
lcall
mov
cwtl
cmp
xor
inc
xor
pop
out
ljmp
test
xchg
inc
mov
push
ficoms
pop
add
cmpsb
aad
fwait
cmc
fidivrl
xor
pop
cmp
das
jno
cltd
ficoml
xchg
lcall
and
cmp
mov
lock
subl
rorb
lcall
or
lds
push
inc
shrb
push
dec
mov
mov
xor
outsl
cld
mov
scas
cmp
mov
adcb
les
mov
mov
and
inc
ret
cmc
xchg
dec
sbb
lods
iret
insl
repz
sbb
cmpsb
xlat
popa
or
dec
inc
mov
mov
mov
inc
xlat
sarl
push
pop
cmpsb
dec
jns
mov
mov
jg
fisubrs
mov
fwait
push
mov
inc
int
arpl
cli
inc
jae
mov
gs
push
aaa
stos
shrl
and
iret
mov
test
xor
pop
repnz
ss
out
or
pop
jg
in
and
es
or
adc
test
adc
sarl
movsb
sbb
cmpsl
push
pop
adc
inc
jbe
sub
mov
addr16
popf
inc
sbbb
dec
fisttpll
popa
pop
repnz
inc
je
cmc
jb
mov
push
stc
xchg
lret
enter
or
popa
addl
pop
push
sbb
cmp
fisubrs
mov
and
or
cwtl
rorl
cmpsl
add
inc
in
jbe
loopne
cwtl
jns
and
in
push
popf
mov
icebp
outsb
mov
cmpsb
sbb
les
popa
fnstsw
xor
repnz
mov
wrmsr
jg
jns
lock
mov
es
push
push
fnsave
xor
jbe
in
incb
insl
cmp
cmpsb
lret
lods
xor
mov
add
lods
ret
int
push
sub
push
fidivrl
in
into
pop
mov
sub
xchg
les
add
add
xchg
stos
and
lret
outsl
out
xlat
pop
stos
mov
arpl
jo
push
and
movsb
cld
xchg
add
fstps
testb
mov
addr16
fistl
mov
jbe
cmc
mov
pop
push
sub
inc
jnp
mov
cltd
je
xor
xchg
pop
inc
mov
outsl
sub
or
xchg
adc
cmp
xchg
or
mov
ret
outsb
out
imul
out
inc
loope
adc
mov
inc
mov
jns
fwait
outsl
pop
jo
xchg
and
call
rcl
or
dec
lds
lock
shrl
sbb
mov
pop
mov
fwait
jne
pop
lcall
ret
fisttps
pushf
and
stc
mov
pop
inc
shrb
out
xor
jl
std
mull
cmp
lock
sbb
sbb
inc
rorb
mov
add
imul
lret
push
push
dec
add
pusha
and
jge
inc
and
mov
push
xchg
xchg
clc
leave
jmp
aam
sub
pop
icebp
scas
fstps
adc
xchg
dec
sub
shll
fcom
shl
cmp
fnstenv
js
mov
pop
cmp
je
shlb
and
push
test
inc
pop
pop
sarl
push
push
dec
push
mov
xor
jo
mov
pusha
out
sub
xlat
aad
movsl
sbb
aas
icebp
pop
fsubs
popa
and
or
inc
pop
in
aaa
pop
shrb
xchg
andl
xchg
icebp
jg
dec
aas
mov
in
pop
push
jge
dec
loope
out
sbb
int3
inc
popf
adc
aaa
lods
stc
andl
ficoml
adc
cmc
mov
xchg
jb
mov
in
and
ret
push
cmp
imul
leave
pop
mov
sub
cmp
cmp
imul
not
mov
in
les
push
ljmp
xchg
cwtl
cs
xor
js
mov
movsl
data16
push
aas
add
xchg
inc
xor
dec
jnp
fistl
mov
insl
and
clc
scas
rep
push
cmp
inc
in
mov
xor
mov
push
xor
jp
lret
ret
lcall
in
mov
mov
jb
mov
lods
or
arpl
stos
push
xchg
inc
sub
cmp
adc
pop
rorb
mov
mov
add
jns
push
xchg
stc
hlt
xor
pop
xchg
sub
and
pusha
add
bound
sub
pop
mov
mov
jle
pop
mov
adc
dec
push
cmp
lret
mov
arpl
mov
scas
adc
js
pop
outsl
scas
and
pusha
dec
fwait
lret
out
inc
scas
pop
movsl
cli
xor
js
leave
adc
repnz
imul
mov
dec
data16
jb
cld
cmp
fcmovne
daa
jbe
stos
jnp
lds
test
pop
sub
and
loopne
pop
addps
and
aad
mov
mov
sarl
sti
mov
inc
lcall
push
adc
push
cmp
sub
out
aad
jo
mov
sbb
sbb
loopne
test
add
mov
push
in
loop
adcb
test
sbb
mov
shlb
fcoms
mov
les
lcall
mov
jmp
inc
call
sub
in
lret
or
into
pop
pop
mov
cmp
inc
sbb
and
andb
popf
xor
cmpsl
push
iret
imull
or
or
lret
dec
rolb
cli
test
int3
xor
pusha
adc
and
orb
cmove
cmp
out
int3
xchg
stos
daa
cmpsl
xchg
sti
sarl
fwait
or
add
lock
add
and
stc
jp
aam
inc
subl
push
or
out
pop
ret
add
mov
stc
adc
mov
lahf
mov
mov
jmp
int3
fisubs
dec
repnz
ret
or
add
add
fcmovb
cld
inc
dec
mov
adc
stos
dec
jg
pushf
mov
mov
adc
js
mov
int3
xor
cmpsl
or
jmp
mov
ljmp
icebp
dec
fs
cmc
popf
jae
add
scas
movsl
jmp
dec
xchg
sub
inc
cwtl
mov
sub
repz
adc
add
inc
enter
scas
push
mov
pop
loopne
or
mov
xchg
movsl
std
fstpt
sbb
cmp
dec
lret
or
ss
or
or
scas
fistps
loop
subl
push
ret
cmp
sahf
sti
insl
imul
popf
divl
dec
test
adc
mov
addr16
pop
hlt
sbb
in
lahf
mov
jp
shrb
cmpsl
aas
jg
push
gs
and
pop
mov
jnp
mov
sub
xor
pop
mov
clc
jbe
mov
mov
cmp
cli
fwait
cmp
or
cmp
sub
aaa
dec
xchg
cmpsl
mov
mov
pop
mov
fucom
repz
lea
stc
mov
pop
out
int3
push
sub
cs
fstl
or
lcall
lea
xchg
lahf
sbb
add
dec
pop
or
add
mov
lock
call
mov
mov
leave
jp
icebp
or
push
fcompl
adc
rorb
sub
cmpsl
mov
lret
test
les
arpl
sub
jmp
jbe
xchg
aas
into
sub
cld
and
pop
cmpsl
stos
mov
push
inc
mov
rorl
mov
mov
ret
jnp
aaa
incl
lods
jno
pop
push
xchg
inc
sbb
mov
add
push
data16
add
cmp
xor
cmpsb
mov
and
stos
fwait
cs
nop
mov
sub
push
repnz
decb
jle
add
cmpsb
sbb
repnz
std
jno
mov
clc
lahf
fs
push
adc
xchg
aam
xor
jno
jb
adc
imul
ljmp
ss
ss
xlat
push
jle
push
imul
jns
jnp
adc
xchg
jecxz
and
pop
or
mov
insb
out
push
repnz
or
sub
and
inc
adc
cld
nop
leave
xor
inc
add
adc
mov
pop
jecxz
mov
mov
sbb
popa
outsb
into
int3
jge
inc
ds
push
push
test
pop
dec
or
lahf
push
rcrl
sub
jl
sub
fistpll
xchg
xchg
divl
mov
xchg
or
mov
mov
sub
std
push
inc
and
rolb
xor
shufps
dec
and
xchg
dec
mov
aas
fxch
enter
cwtl
adc
imul
mov
ficoml
lret
cwtl
adc
adc
jp
movsl
sbb
dec
ljmp
push
jns
pusha
inc
cmp
xchg
jmp
ficompl
mov
cmp
test
xchg
leave
les
xchg
mov
test
in
mov
sahf
sbb
pop
mov
icebp
rcrl
adc
sbb
outsl
movsb
ds
push
add
ds
adc
or
shlb
or
push
cmp
cmp
outsl
adc
xor
adc
push
mov
scas
leave
scas
sti
mov
aam
cli
orl
sub
cmpb
shrb
add
xchg
test
adc
fs
xchg
dec
sbb
mov
cld
inc
adc
push
shlb
movl
sbb
lods
sub
andl
mov
push
repz
into
mov
ljmp
pop
fwait
sahf
push
fnsave
xor
repz
jo
xchg
das
pushf
mov
and
adc
dec
sbb
and
call
mov
and
push
dec
movsl
inc
xchg
add
pop
jno
cmp
mov
mov
stos
sbb
scas
xor
sbb
hlt
mov
or
addr16
xchg
xchg
ror
xchg
in
mov
jnp
mov
mov
jno
mov
loope
clc
clc
jle
sar
out
int
xchg
psraw
addb
fldcw
inc
outsb
pusha
insl
sahf
adc
and
push
or
or
inc
int
add
push
movsl
sub
popa
fs
xor
push
dec
pop
jge
xchg
pop
repz
scas
jb
xchg
pop
inc
adc
xor
xchg
inc
adc
xchg
pop
dec
adc
adc
jle
mov
and
out
outsl
mov
push
mov
mov
imul
cmp
ss
inc
in
jo
aas
xchg
ljmp
jg
daa
out
and
icebp
dec
stos
lret
shll
mov
lea
mov
icebp
and
out
nop
cltd
cmp
push
rcrb
jg
adc
xchg
sub
add
push
out
pusha
mov
xorl
jge
divl
stos
les
jno
jp
lock
stos
jne
jae
and
pop
pop
mov
ficoml
inc
into
push
mov
mov
js
stos
mov
fcoms
cmp
pusha
leave
loopne
adc
dec
das
xchg
cmp
ret
jmp
sub
mov
movsb
jle
test
mov
and
pop
and
icebp
jae
inc
out
push
add
jle
test
or
inc
adc
frstor
icebp
stc
or
xchg
cltd
pop
push
jno
inc
and
repz
pop
aad
xor
hlt
dec
cltd
cmp
cmpb
mov
inc
fnstenv
sarl
cld
add
call
mov
jb
bound
xchg
popa
out
enter
jp
in
dec
fwait
sarl
push
jmp
dec
inc
push
or
sarb
rol
fld
shl
rcr
mov
jecxz
outsl
dec
xchg
dec
cli
aam
sub
ds
dec
imul
pusha
adc
pop
or
stos
popf
sbb
or
test
jns
adc
out
insl
dec
mov
in
in
nop
fcmovu
inc
pusha
cmc
inc
and
cli
push
sbb
rcrb
incl
push
je
inc
xchg
push
ds
cmp
add
mov
jnp
inc
mov
adc
mov
sub
cmc
sub
mov
pop
mov
ds
cs
stc
jae
sub
sbb
imul
xchg
repnz
pop
mov
mov
lret
fcompl
je
mov
clc
mov
mov
dec
inc
add
cwtl
and
imul
pop
movsb
insb
cmc
subb
popa
in
gs
jg
adc
sbb
lock
lret
cmp
jb
sbb
dec
imul
push
or
cmp
imul
pop
in
pop
inc
mov
and
pop
fidivs
jns
stc
add
repnz
or
pop
leave
enter
pop
dec
cmp
pop
sub
jnp
das
mov
loopne
dec
inc
inc
imul
xchg
in
enter
pop
xchg
xchg
int3
adc
pop
rcrl
lods
xchg
adc
aam
add
sub
jecxz
mov
mov
jp
das
insl
push
add
inc
daa
and
lahf
and
fwait
xor
rol
outsl
or
xchg
frstor
adcl
nop
loopne
dec
dec
fcoms
pop
jle
adc
cli
xor
and
adc
lods
push
mov
ret
dec
xchg
inc
dec
add
sti
aad
xchg
mov
and
lock
adc
into
fwait
mov
stos
pop
add
push
sbb
scas
stos
push
pop
sbb
mov
in
popf
fcomi
incb
in
les
jns
inc
fwait
popa
or
pop
sbb
imul
out
mov
mov
pop
sbbb
mov
ss
cmpsl
cmp
cmp
out
push
lock
push
adc
sbb
add
mov
sbb
add
in
es
push
cmp
into
cmp
int3
mov
hlt
rcrb
pop
adc
pop
movsb
sub
xor
jne
mov
push
push
fiadds
loop
dec
sbb
fld
xchg
jne
mov
inc
test
jne
loope
nop
scas
sbb
aam
call
outsl
fwait
dec
out
fstpl
imul
roll
xchg
stc
std
adc
inc
in
and
in
daa
mov
sub
das
aad
mov
bound
iret
je
inc
ret
push
loop
dec
mov
xor
popa
xchg
lahf
sbb
bnd
scas
movsb
repz
xchg
push
mov
xchg
push
in
orl
divb
outsl
jge
adc
inc
cmp
test
and
sbb
loopne
cld
mov
jmp
sbb
or
movl
stos
test
sub
mov
dec
cmpl
jbe
enter
mov
sti
je
cmp
cmp
pop
push
aam
push
jo
lcall
pop
pop
in
fwait
sbb
addr16
filds
dec
call
out
aas
push
iret
test
inc
test
or
xchg
adc
pop
ss
inc
jae
sahf
inc
xchg
imul
cwtl
cmpsb
lcall
stos
ret
jne
in
ljmp
cmp
mov
std
shrb
push
aam
pushf
shll
fcmovb
mov
push
sub
adc
push
lds
subb
fbstp
mov
push
in
add
or
adc
les
or
cmc
cltd
push
pop
pusha
lods
and
das
adc
sbb
push
xor
cmpsb
push
and
pop
fsubrs
push
adc
repnz
sahf
jp
add
dec
add
jl
out
cmp
mov
mov
dec
or
xchg
jmp
and
adc
sbb
inc
pop
push
jnp
push
imul
mov
shlb
test
fs
test
add
xor
ja
cmp
dec
sarl
mov
xor
or
mov
cmp
xchg
jge
push
push
aas
test
fstl
lahf
or
fwait
std
pop
gs
fmull
int
and
and
addr16
dec
mov
inc
je
lods
jp
fnstenv
call
pop
cld
adc
xor
and
mov
push
and
int3
mov
jecxz
mov
in
aas
inc
nop
lahf
mov
fidivrs
fidivrl
pusha
xor
js
mov
aas
cmpsl
shl
call
sbb
inc
mov
mov
mov
cmp
sub
test
fadds
sub
cmp
mov
lods
lods
mov
mov
loop
popf
adc
pop
jecxz
stos
lods
out
pop
aad
pop
cmpsb
push
ljmp
out
and
cwtl
sbb
hlt
aas
out
jb
dec
nop
scas
pushf
pop
fs
jg
movsl
pop
ret
xchg
dec
cmp
or
pop
or
xorl
push
add
repnz
call
or
cli
insl
loopne
data16
sub
cmpsb
push
pop
lods
adc
push
push
adc
mov
cmpsb
mov
xchg
jne
mov
cmpsb
or
imul
and
xor
ljmp
adc
out
shlb
aad
sahf
fstpl
dec
xchg
cmc
cwtl
fsubs
adc
test
dec
push
cmpsb
mov
cs
mov
inc
idivl
push
xchg
mov
inc
inc
sbb
mov
movsb
jp
out
mov
ljmp
stos
cmp
testb
in
push
jne
daa
lretw
insl
xor
cmp
insb
lcall
inc
pusha
pop
adc
mov
mov
adc
enter
mov
mov
popf
das
jo
xchg
test
lods
mov
mov
sub
jae
jg
add
out
push
insl
repz
leave
mov
jg
nop
xchg
mov
insb
inc
loope
adc
insb
adc
cli
jmp
jmp
pop
ret
cltd
xor
push
pop
mov
cs
push
icebp
fcomps
orb
pop
mov
mov
jb
addr16
mov
jns
mov
jo
push
rorl
adc
mov
cli
add
xor
pop
das
mov
xchg
pop
mov
or
aaa
les
cmpsl
out
enter
and
xlat
sub
sub
cmp
ds
orb
ret
cmpl
push
pop
pushl
and
insl
pop
xor
jo
xor
cli
jo
or
adc
iret
js
jge
add
lret
mov
xchg
push
insl
jae
xlat
or
movsl
mov
lock
pop
pop
xchg
xchg
das
mov
sub
jle
leave
inc
mov
mov
in
aad
dec
xor
and
test
inc
pushf
pop
dec
imul
or
xchg
xchg
mov
in
or
jae
mov
ss
cmp
sub
outsl
js
addr16
mov
out
mov
sub
mov
xor
adc
into
inc
outsb
inc
lock
loopne
leave
sbb
outsb
sbb
bound
lods
andl
pop
dec
sbb
popa
mov
mov
add
and
add
push
pop
dec
cmp
push
lahf
mov
push
xchg
inc
mov
inc
sub
xchg
cwtl
mov
out
xor
addps
mov
call
mov
js
out
dec
mov
loope
aam
shlb
js
fcomps
pop
aam
adc
cltd
jle
out
lahf
push
dec
push
out
push
in
pop
pop
cmp
dec
add
andb
imul
movsb
test
mov
jmp
fyl2xp1
out
mov
push
and
jmp
mov
push
pushf
fsub
int
push
sti
push
repz
inc
in
mov
sub
xlat
xchg
xchg
sbb
adc
ds
mov
inc
stos
int3
nop
mov
in
loope
xor
lret
aam
test
and
jg
lret
mov
je
inc
mov
mov
inc
movsl
and
cmp
int
pop
aas
ss
jne
push
inc
aam
mov
test
mov
push
adc
add
xchg
push
loopne
and
movsl
mov
adc
dec
or
mov
mov
mov
nop
pop
movsb
cmp
dec
mov
popf
lcall
je
add
jae
mov
das
mov
test
fists
dec
push
pop
fimull
dec
int3
pop
push
ds
xchg
sub
sti
sbb
push
mov
and
mov
jg
push
jmp
pop
arpl
inc
imul
push
xor
popa
mov
push
push
pop
call
clc
inc
mov
in
lds
mov
sbb
mov
mov
cmp
adc
in
dec
add
shr
ljmp
fadds
and
mov
sub
mov
out
loopne
cmp
stos
std
add
sbb
cmp
or
ret
jnp
sbb
lahf
lahf
filds
jb
repz
lds
and
ret
cmp
imul
inc
test
adc
movsb
dec
fstpt
int
adc
repnz
andl
fisubrs
add
xchg
ljmp
mov
add
loope
loop
jp
aad
xchg
mov
int
inc
xchg
test
je
leave
ds
and
mov
lock
into
push
adc
sbb
ja
hlt
imul
and
aad
popa
xchg
sub
pop
pop
cmp
pusha
idivl
push
pop
fwait
jmp
mov
daa
es
lahf
mov
jp
xor
insl
add
jg
adc
call
gs
and
inc
aad
jle
or
getsec
sub
jbe
sbb
xchg
mov
cmpsb
cmc
imul
pop
push
inc
leave
insb
lea
call
sahf
lods
pop
add
inc
movsl
and
stc
out
mov
jne
mov
sub
int
sarl
insl
xchg
mov
lods
cmp
push
faddl
das
out
or
lret
xlat
mov
cmp
adc
icebp
push
cli
andb
or
mov
xchg
mov
and
sbbb
fnsave
arpl
bound
push
xchg
std
xor
outsb
add
mov
fildl
push
fwait
jns
roll
mov
insb
ss
jbe
inc
les
add
repz
in
add
stc
adc
loop
lds
and
and
in
gs
aas
and
cmp
inc
icebp
xorb
testb
and
cwtl
adc
rcll
cmp
adcb
mov
test
outsl
inc
jae
ret
popf
test
aas
cmpsl
pop
daa
xchg
dec
lfs
lds
jle
clc
adc
add
adc
add
adc
or
mov
loope
fistpl
xor
mov
insl
and
adc
in
rcll
cltd
lock
mov
lcall
fsubrs
popa
push
inc
jb
pop
jg
fadd
bound
sub
subl
pop
mov
jb
mov
add
cmpsl
push
jp
pop
jge
mov
ljmp
push
fstps
fnsave
outsb
and
pusha
loop
nop
dec
icebp
push
in
andl
out
jns
mov
lret
jge
mov
daa
ret
ljmp
pop
mov
inc
xchg
iret
sbb
shrb
punpcklwd
add
test
add
pop
inc
aas
pop
cltd
fsubrl
popa
mov
add
jecxz
cmc
inc
jmp
data16
dec
inc
loope
adc
or
mov
jno
out
loope
ret
pop
or
mov
les
insb
xchg
test
inc
test
mov
sub
mov
inc
stc
sbb
andl
stos
lret
adc
cmpsb
cltd
pop
cmc
sub
andl
inc
or
imul
jmp
pop
into
add
clc
dec
xchg
movsl
aad
test
mov
mov
dec
lahf
lock
inc
mov
cwtl
mov
movsb
jne
lea
mov
pop
jns
xor
ffreep
lock
sbb
mov
jecxz
push
in
inc
jp
sub
xchg
cmpsl
in
cmp
inc
ljmp
lods
mov
push
adc
repz
dec
imul
sbb
mov
xchg
xor
push
ljmp
jne
xor
inc
sub
jb
imul
lret
cmp
or
mov
std
push
arpl
cmpsb
in
data16
movb
nop
cmpsl
or
mov
shlb
scas
and
and
inc
sbb
mov
adc
adc
mov
sub
fadds
cld
pusha
sbb
call
jbe
scas
mov
or
pop
call
sub
fdivrs
pop
addl
xor
jno
mov
lods
fildl
lock
or
jae
clc
mov
pop
outsl
sbb
xchg
fisttpl
dec
cmp
cmp
sub
dec
mov
dec
adc
fcompl
fstpt
arpl
nop
sub
and
dec
mov
loop
and
mov
mov
and
mov
jo
stos
js
cmovae
cmpsl
lea
cld
insl
mov
sbb
push
dec
lcall
fisubrl
inc
lcall
push
push
bnd
cmpsl
cld
push
push
or
pop
in
mov
sarb
loope
or
or
and
sub
jle
ret
stos
sub
push
jb
pop
pop
mov
in
adc
ret
mov
xchg
loopne
and
daa
loop
lcall
dec
xor
pop
or
xchg
push
cmp
sub
adc
pop
cmp
gs
push
loop
stos
int3
inc
sbb
out
int3
int3
push
mov
ret
pusha
lahf
out
loope
cmpsl
push
jmp
popf
call
std
jge
insb
out
int3
xchg
xor
jle
or
adc
cltd
loop
mov
adc
sub
inc
push
dec
insl
dec
clc
dec
mov
cli
daa
orl
jbe
mov
add
sub
clc
pusha
enter
cltd
jl
shrl
inc
jne
iret
dec
or
repz
xchg
sub
repz
and
les
jg
push
fimull
xor
and
popf
adcb
push
stc
clc
out
dec
adc
ret
mov
out
jl
lods
arpl
shlb
xchg
xchg
sarb
int
inc
mov
rclb
lea
xchg
push
xchg
fldt
sbb
scas
and
mov
mov
adc
mov
inc
adc
mov
xchg
jecxz
lahf
inc
fdivrs
inc
lods
xchg
sbb
mov
adc
sbb
popa
mov
mov
fbld
sbb
push
mov
add
mov
xchg
mov
lcall
int
inc
mov
jae
enter
enter
xchg
sbb
fdivs
cmp
cmp
push
jns
add
mov
cmp
xchg
mov
cmp
jg
xchg
pop
mov
inc
fcoml
cmp
sbbb
push
int
jo
repnz
das
and
leave
out
decb
pop
lret
xor
call
testl
and
stos
aas
pushf
xchg
adc
movsb
push
xchg
inc
inc
mov
mov
jns
xchg
shrb
mov
ss
movb
pop
xor
in
jl
fildll
or
popf
fdivrl
mov
insb
push
xchg
xor
sub
movsw
sbb
cmp
imul
pop
xchg
sti
or
push
or
inc
sbb
xchg
inc
rcr
sub
mov
xchg
jmp
dec
outsl
ljmp
sbb
out
outsl
fs
orl
xlat
inc
dec
pop
test
sub
pop
push
jbe
or
cltd
mov
mulb
and
jo
out
push
or
leave
das
dec
xchg
dec
jl
sbb
cmpsl
xchg
adcb
bound
jl
jle
pop
es
dec
sbbl
lods
pop
jae
mov
jecxz
into
mov
fwait
test
mov
sahf
repz
jl
ss
cmp
fsubs
repz
imul
xchg
addr16
bound
rorl
fldcw
push
cs
les
jmp
fadd
jecxz
push
cmp
lods
adc
xor
sbb
cs
je
out
add
pop
jmp
jmp
and
rolb
mov
out
add
pusha
addr16
dec
cmp
addr16
push
pop
lret
adc
jmp
push
ja
cmp
mov
icebp
lahf
pushf
cltd
enter
fisttps
ss
pop
test
rcrl
pop
jae
xor
push
jbe
cmp
cmp
out
pusha
push
sahf
and
hlt
nop
inc
jnp
xchg
movsb
jno
jno
imul
popa
imull
call
jp
lcall
jbe
push
inc
mov
out
add
or
sub
xor
sub
scas
in
mov
mov
xor
insb
pop
lock
dec
pause
bound
aas
or
mov
ss
scas
js
pop
fsts
or
mov
pop
ja
sub
push
cmc
sbb
cmp
out
int3
cmp
mov
xchg
fisubrl
xlat
sbb
inc
mov
shrl
mov
shl
inc
add
fidivrl
jl
mov
jl
jae
dec
je
pop
ret
mov
mov
mov
mov
call
mov
xlat
mov
not
push
bound
xor
push
jge
cli
mov
dec
jmp
popf
mov
inc
dec
jbe
out
jbe
fcmovbe
cli
cmp
aam
lahf
testl
jo
and
pop
jo
xor
push
pop
in
jp
out
js
pusha
fists
hlt
pop
sub
popa
cwtd
and
fstps
sbb
test
ss
sbb
push
cmp
lds
fimuls
ljmp
mov
xor
xlat
xchg
push
imul
xlat
out
cmp
sti
fmull
out
lock
scas
aam
inc
pop
fdivl
pushf
push
inc
jbe
repnz
loopne
stc
test
sub
pop
cs
aas
mov
xchg
sti
pushf
cmp
sub
shr
jle
jle
repz
xchg
xlat
sub
fisubs
and
js
pop
mov
popa
andl
jne
mov
push
and
test
loop
imul
and
adc
mov
in
out
popa
pop
inc
jb
jns
pop
cltd
loope
sbb
mov
js
jmp
or
bound
mov
and
fs
jg
jle
inc
cmp
ja
lods
or
lcall
inc
adc
test
xor
pop
sahf
ss
mov
dec
addr16
push
iret
mov
out
cmp
add
jecxz
fstpt
pop
mov
add
xchg
sbb
push
imul
mov
xor
push
push
jo
inc
hlt
pop
or
add
aaa
push
cltd
or
sub
insb
cmp
and
gs
push
cmp
xchg
cmpsl
int
jno
lret
cmc
lea
pop
loopne
jmp
dec
daa
scas
fwait
out
notb
push
cmp
lods
pop
xor
mov
or
and
mov
sub
je
popf
lods
int
mov
negb
and
je
pop
dec
add
cld
or
jo
or
fadds
xchg
insl
insb
out
in
subl
aas
jne
push
pop
into
fwait
lea
cmpb
mov
lahf
icebp
pop
xchg
test
clc
out
lds
xchg
jl
add
sbb
out
subl
stos
loop
aad
jb
jne
sbb
inc
cmp
sub
scas
mov
xorb
pop
mov
sub
sub
mov
dec
sub
sahf
int3
ret
xor
sub
and
push
outsb
das
mov
sub
and
movsl
ret
faddl
mov
test
clc
dec
fdivrp
andb
cmp
inc
xor
out
aas
outsb
sub
in
lock
ljmp
mov
lods
ds
mov
imul
cmp
xchg
cltd
and
outsb
mov
cmpsb
add
into
data16
mov
push
mov
cli
xchg
subl
mov
pop
das
mov
mov
unpcklps
insl
insb
out
ja
mov
cmp
xor
and
fsubs
fmul
push
ds
xlat
dec
call
cmp
push
xlat
mov
pop
xchg
mov
mov
movsb
mov
mov
in
mov
rcll
ss
pop
add
push
pushf
lds
push
mov
pusha
pop
popa
sti
sbb
jecxz
insb
jae
sbb
xor
icebp
cwtl
push
ljmp
dec
bound
js
mov
push
dec
dec
push
mov
int
mov
aam
xchg
sbb
repz
jg
jge
shlb
test
and
imul
mov
popa
loope
xchg
push
and
les
lods
mov
push
lock
in
xchg
repnz
repz
ds
or
jo
sbb
call
into
xchg
xor
xor
cwtl
movsl
and
test
call
adcl
push
mov
out
rol
or
xor
jne
push
stc
or
movsl
sbb
push
pop
push
mov
xchg
rcrl
ret
sbb
test
xchg
lea
mov
sub
rorl
fcmovne
sbb
inc
nop
dec
lcall
cltd
test
xor
sub
adc
aad
mov
pop
cli
shll
les
sbb
mov
test
push
push
call
mov
clc
lods
out
add
pop
adc
test
shr
aas
mov
in
mov
rcrl
mov
in
into
inc
outsb
fcomip
out
push
inc
adc
cltd
aas
fcmovu
fstps
xchg
adc
cwtl
lock
cwtl
mov
cmpsb
xrelease
in
and
scas
mov
rorl
lea
testb
xor
scas
and
mov
dec
jg
mov
loope
dec
xchg
jl
test
and
gs
repz
in
cs
mov
lret
mov
insb
stc
add
jns
pop
fidivrs
clc
les
mov
out
pop
xchg
mov
or
shrb
adc
lea
cmp
rorb
lret
shrl
xchg
filds
insb
std
sbb
dec
sbb
icebp
xchg
sbb
pop
mov
ljmp
cmp
mov
je
lcall
xchg
cmpsb
xor
mov
xor
sub
xchg
fadds
adc
sbb
insb
pop
ret
dec
jl
rcrb
test
in
mov
stc
xchg
mov
sbb
shlb
dec
outsl
scas
lahf
idivl
out
add
adc
add
push
imul
bound
aaa
int
mov
and
pop
mov
xchg
inc
nop
vmovups
xor
sbb
jle
cmpsb
pop
and
add
sbb
xor
adc
pop
test
fistl
cmp
test
pop
inc
insl
jmp
loop
shll
pusha
fwait
es
dec
or
sarb
daa
clc
sbb
or
xor
rcll
jg
test
sbb
aas
and
fldt
sbb
jbe
or
or
out
push
push
dec
icebp
lock
push
mov
rcrl
lcall
pop
imul
xchg
fs
pushf
jns
or
sub
in
js
leave
cmp
mov
mov
cltd
sbbl
mov
cmpsb
dec
mov
push
dec
sarb
xchg
add
lea
mov
sbb
jmp
adc
mov
inc
pop
outsl
cmp
ret
scas
mov
xchg
cld
mov
fwait
leave
fwait
es
sbb
ficoml
pushf
imul
and
add
rorb
notb
mov
xchg
cs
sbb
push
xchg
mov
and
in
call
xor
mull
push
in
lock
sub
dec
jo
mov
add
push
and
jle
xchg
subl
fstpl
aad
loop
cmp
sbb
mov
pop
js
add
mov
pusha
xchg
jne
jne
sbb
sub
xchg
add
ficoml
add
test
xor
les
fildll
aad
fcomps
ja
sub
xchg
addb
push
scas
rcrb
lds
lret
adc
add
ret
mov
aam
jp
adc
stc
inc
cmpsl
mov
lahf
out
adc
aad
in
imulb
mov
xchg
add
lds
push
test
subb
or
sbb
mov
sbb
lock
andb
out
add
mov
push
sub
pop
pop
stos
mov
scas
ret
gs
push
fmuls
repz
iret
fcomip
cmp
xor
ljmp
les
dec
sub
orb
in
lret
movsb
test
lock
in
sbb
cmp
stos
sbb
scas
inc
and
xchg
shrl
adc
mov
jae
jecxz
xor
xor
sub
fstl
arpl
sub
sbb
fsubrs
pop
xchg
pop
cmp
mov
sbb
mov
inc
call
add
icebp
pop
push
xchg
push
cmp
std
outsl
push
loope
addr16
loopne
stos
popa
fisttpl
fstpl
xchg
mov
cmp
cmc
pop
dec
or
cmp
sub
std
push
lods
imul
xor
ja
ss
xor
fisttpl
cmc
mov
push
xchg
pop
lret
sbb
dec
jne
or
in
sti
outsl
fucomi
adc
push
imul
mov
int
jg
adc
lock
sub
outsb
jne
movsl
adc
aam
mov
rcrl
inc
jbe
add
lods
and
call
in
inc
cmpsl
mov
lods
loop
sbb
mov
xchg
jp
das
jmp
scas
je
stos
subb
in
scas
in
jecxz
hlt
xor
out
mov
push
out
jmp
movsl
aam
fisubrs
sbb
xor
adc
xlat
stc
cwtl
imul
je
mov
test
push
and
test
jp
mov
in
pop
sbb
sarl
mov
lret
and
cwtl
push
jecxz
sub
and
cmpsl
into
or
jnp
jg
mov
clc
xchg
pop
pop
fsubrl
push
or
ret
jnp,pt
mov
daa
xor
mov
or
inc
dec
mov
cmp
stos
inc
push
cs
das
lea
or
mov
cmp
aam
mov
insl
mov
jbe
stos
hlt
cmp
std
std
ja
movsb
mov
push
icebp
mov
sub
jl
insl
jmp
adc
mov
push
mov
out
test
push
push
hlt
stc
bound
in
pop
ljmp
testl
jg
pushf
xor
sub
mov
mov
inc
daa
pop
incl
lcall
outsb
inc
andb
xchg
pop
jmp
fiaddl
inc
jge
jle
ficoms
adc
push
in
stos
lea
mov
stc
mov
fidivl
in
mov
fs
gs
out
dec
inc
jae
and
ja
xchg
pusha
push
andl
in
daa
mov
decl
push
cld
jb
or
jo
add
mov
in
mov
xchg
sub
adc
jne
push
adc
imul
mov
mov
mov
mov
and
sub
jge
pop
dec
fdivrs
mov
push
ds
sub
outsl
push
out
test
lods
hlt
pop
push
fs
or
xchg
mov
mov
dec
push
lods
inc
je
xor
mov
mov
jecxz
movsb
lods
and
xchg
cmp
xchg
add
xchg
adc
xchg
push
jb
ret
sub
push
and
outsb
jle
outsl
test
xchg
jns
and
adc
jne
sub
cs
ljmp
inc
or
imul
push
xchg
lock
xchg
je
mov
jmp
stc
mov
push
test
cmp
adc
jnp
push
ss
lea
dec
dec
loope
dec
mov
sub
mov
pop
mov
adc
adc
decb
pop
pop
lahf
mov
in
or
movsb
in
std
sahf
sbbl
dec
or
xchg
hlt
icebp
test
das
or
jmp
sarl
mov
call
mov
xchg
mov
sub
xchg
mov
fs
jae
xchg
lret
adc
test
icebp
movsl
adc
ret
adc
mov
xor
push
pop
or
out
rorb
nop
hlt
cmp
pusha
es
cltd
xor
int3
ss
cmp
xchg
ficoms
cld
shlb
add
add
sub
jno
cmp
add
test
xchg
mov
leave
xor
and
cmp
inc
inc
inc
pop
dec
and
imul
mov
or
mov
or
xchg
es
mov
jecxz
cmp
cmpsl
cli
pop
repnz
mov
test
pop
rcl
int3
mov
mov
inc
sahf
jae
stos
scas
rolb
loop
ds
lahf
aaa
fdivrl
push
push
sbb
inc
sbb
xchg
mov
mov
cld
je
leave
gs
clc
in
movsl
pop
inc
leave
and
adc
je
xor
push
lods
repnz
add
xor
xchg
rorb
push
push
adc
cmp
mov
pop
jne
inc
xchg
jb
cmpsl
fsubl
sbb
ret
pop
dec
and
iret
xchg
mov
jmp
test
cld
mov
add
pusha
sbb
lds
mov
fldenv
popf
mov
push
sbb
js
leavew
push
and
or
les
or
mov
rorl
push
je
dec
push
daa
test
icebp
enter
ret
mov
in
dec
daa
cmp
add
sbb
push
in
push
push
into
ss
les
data16
xor
pop
lcall
sub
out
addr16
imul
sub
xchg
mov
popa
add
loope
or
addr16
cmpsb
xchg
js
out
xchg
push
out
test
pop
mov
cli
ljmp
push
inc
sbb
sub
add
adc
xor
dec
mov
test
mov
cmp
sti
fstpl
pop
add
adc
jne
popa
sub
out
jbe
loop
push
pop
add
jne
jne
cmc
jp
loope
mov
into
mov
cmp
push
cmp
add
jle
mov
mov
icebp
data16
push
aaa
push
pop
addl
int
stos
xchg
and
pop
movsl
out
cli
scas
mov
cmpsl
mov
sbb
stos
xor
dec
pop
ljmp
leave
inc
sub
cli
bound
les
pop
mov
shll
dec
cltd
std
cmp
add
mov
jns
ja
xchg
std
adcl
inc
repz
test
mov
mov
gs
add
mov
lock
push
in
fmuls
insb
adc
xlat
das
stos
pop
inc
lods
mov
test
push
imul
int
cs
cli
das
stos
xor
push
andb
pop
mov
ficompl
and
mov
dec
pop
xchg
xor
enter
push
repz
mov
push
mov
inc
push
or
xor
pushw
or
fdivl
and
and
test
or
xchg
sbb
in
and
std
xchg
cmpsb
pusha
mov
dec
jg
mov
aaa
test
cmp
je
dec
outsb
movsb
mov
fcom
pop
cld
add
leave
push
imul
push
mov
mov
jnp
in
aaa
gs
mov
and
xchg
sbb
mov
into
shll
leave
call
outsb
and
push
push
cmp
out
inc
cmp
lock
add
dec
add
jo
xchg
jge
jmp
cmpsb
inc
leave
mov
xor
cmp
nop
push
and
mov
in
pop
ror
test
ja
ja
xlat
loop
inc
sbb
sbb
int
cmpsb
jle
popa
pop
lret
prefetcht2
xor
movsb
sbb
pop
jne
xor
sbbl
adc
repnz
cltd
push
movsb
sub
dec
jmp
out
shll
mov
ljmp
lods
mov
enter
dec
jmp
cmp
aam
mov
cli
loopne
sbb
int
pusha
mov
inc
xor
outsb
pop
inc
notb
aad
push
repnz
js
jle
fisttpl
xor
xchg
sbb
cmpl
push
mov
rcr
js
xor
loopne
subb
push
icebp
popf
iret
push
xchg
xlat
movsl
xor
jo
cs
mov
cmp
push
xor
out
jbe
xchg
jmp
push
incb
movsb
or
ss
push
nop
cmp
sbb
jne
daa
push
bound
into
inc
or
or
mov
xor
in
ljmp
mov
cmpsb
xchg
mov
jle
addr16
add
xchg
mov
icebp
sbb
sbb
cmc
add
dec
pop
push
icebp
push
int
pusha
scas
xor
es
mov
jns
clc
cmc
sub
aaa
lahf
mov
mov
rorl
je
addl
sbb
dec
int3
call
cmp
out
adc
jbe
in
subb
and
fs
add
pop
inc
dec
cmp
jge
jle
out
stos
ss
xor
jge
inc
sub
fs
jl,pn
fcoms
jnp
iret
andl
cmp
imul
inc
or
sbb
test
jmp
add
jno
jg
cmc
arpl
add
jne
gs
cmpsl
push
push
push
mov
fiadds
popf
push
out
out
mov
out
jno
scas
mov
in
daa
scas
cs
sahf
cmc
cmpsb
imul
les
bt
int
push
into
inc
in
add
int
imul
mov
aad
ficoms
pop
push
lods
pop
dec
cmp
sahf
jne
mov
jo
pushf
push
xlat
fldt
sbb
shl
rcrb
xor
push
or
sbb
push
or
js
and
inc
mov
xor
in
dec
pop
cmp
mov
push
sub
add
shll
in
in
das
dec
ja
icebp
ljmp
sbb
inc
push
je
loop
push
rcr
stos
int
sarb
mov
cmp
jno
dec
push
into
ljmp
shr
jb
dec
or
add
push
scas
cld
xor
xorb
ret
stc
outsb
xchg
mov
lret
add
jecxz
scas
iret
push
jo
int3
pop
inc
test
lds
dec
mov
fstl
in
mov
sub
push
iret
inc
pusha
subb
leave
dec
sbb
clc
sti
sub
incb
pop
in
sbb
mov
loope
das
test
dec
repz
fwait
mov
stc
pop
test
inc
push
and
inc
mov
in
fsubrl
ret
pop
sbb
mov
lcall
enter
in
and
add
in
in
pop
xchg
mov
mov
add
inc
xchg
sub
fdivs
and
notb
sbb
mov
xor
fimuls
mov
bound
jg
dec
nop
cmp
fwait
dec
mov
sub
jno
mov
sbb
out
movsb
mov
xor
lods
out
adc
out
aad
lea
scas
xchg
mov
in
sbb
popf
push
ret
lods
add
push
std
xor
test
ss
push
sbb
inc
aas
and
jnp
std
cmc
xchg
mov
pop
add
pop
shr
dec
out
cmp
and
gs
jno
into
ret
or
lock
movl
fistps
test
filds
test
call
dec
mov
hlt
cltd
jg
push
fisubrs
fidivl
or
cmp
inc
pop
ds
mov
gs
sub
mov
push
pushl
repz
mov
dec
movsl
sbb
mov
in
pushf
mov
and
loop
sub
rcr
xor
jp
xchg
call
out
stos
mov
adc
sub
leave
icebp
pushf
ljmp
inc
add
mov
cmp
pop
mov
xor
cs
mov
aas
inc
rclb
jb
subb
call
lret
imulb
cli
out
xchg
loop
movsb
jbe
mov
xlat
fcomps
gs
sti
push
mov
sahf
xchg
xchg
into
dec
std
jle
loop
stos
hlt
dec
aad
xor
out
push
pop
shlb
aaa
pop
les
dec
or
int3
xchg
mov
push
sbb
es
ss
pop
fs
dec
sbb
xor
sub
jno
or
inc
xchg
mov
or
jb
inc
lea
xchg
aas
scas
mov
pop
bound
icebp
adc
lahf
inc
sahf
rcl
pop
inc
or
iret
int3
adc
xchg
pusha
ss
inc
xor
call
push
sub
add
aaa
ret
add
sub
aad
es
je
stos
dec
movsb
cmp
aam
aam
inc
daa
popa
out
xor
xchg
add
in
mov
and
dec
scas
jle
jnp
jns
stc
dec
out
add
dec
fiaddl
fnsave
icebp
rclb
stos
arpl
jnp
mov
xchg
cmc
inc
call
mov
or
mov
cmp
fs
pop
outsl
leave
xor
dec
sbb
nop
in
pop
fdivrl
fsub
jne
inc
xor
inc
sub
fildl
gs
imul
outsl
cli
dec
push
pop
cmp
mov
cltd
inc
in
or
loope
xor
paddsb
inc
loopne
inc
int
dec
jns
dec
imul
mov
insb
orl
fbstp
and
push
lret
stos
in
mov
pop
xchg
mov
out
fstl
push
or
lds
lret
push
mov
test
inc
ficompl
xchg
sub
sub
and
mov
pop
push
icebp
sahf
jns
mov
cmp
sti
movsb
push
jp
and
adc
jp
int
outsl
test
movsl
pop
xchg
mov
jg
loope,pt
and
sbb
cmp
inc
xchg
cmp
xchg
insl
dec
sub
inc
add
clc
pop
int
or
mov
ret
jne
aad
inc
cs
xchg
xchg
mov
ss
push
jp
loopne
xor
sub
mov
mov
and
imul
in
mov
add
inc
push
pusha
xchg
mov
cmp
insb
cld
and
rcll
adc
dec
sbb
shlb
lret
inc
pop
dec
add
or
std
sti
dec
mov
mov
mov
cmc
inc
cmpsl
jnp
sbb
ss
jno
popa
dec
jo
popf
sar
in
mov
ja
cmp
push
pop
dec
les
mov
or
adc
addb
and
dec
ret
outsl
push
js
icebp
lret
enter
push
push
dec
and
pop
add
inc
jge
lret
lock
in
lds
mov
push
sbb
lret
or
leave
mov
xchg
mov
outsb
or
jp
cmpsb
aaa
jecxz
arpl
das
jle
mov
jns
xlat
in
mov
mov
or
dec
push
arpl
hlt
xchg
pusha
pop
sbb
sbb
xor
add
mov
adcb
pop
cmpsl
cmp
pushf
pusha
cmp
cmp
int
aas
mov
cmpb
int3
outsl
addr16
mov
or
mov
test
adc
mov
shrb
or
js
mov
fisubs
xchg
push
pop
cltd
dec
jae
xchg
lret
mov
xchg
xchg
sub
lock
mov
bound
pop
fimuls
je
dec
pop
cmp
sub
repz
xor
icebp
cmp
pop
shll
push
repnz
xchg
movsl
lahf
cmc
mov
or
mov
test
or
xchg
and
cld
popf
dec
fcompl
fmul
iret
punpcklbw
sub
in
mov
mov
push
inc
push
loop
mov
dec
aaa
cld
lret
dec
movsl
dec
xlat
push
repz
shlb
ss
adc
mov
das
jmp
inc
daa
xchg
lds
mov
fildll
aaa
arpl
mov
push
mov
mov
aas
pop
pop
scas
outsl
jle
push
in
pop
jge
cld
cli
imul
popf
push
inc
dec
xchg
shrl
adc
imul
mov
mov
xchg
cmp
jnp
xchg
fisttpll
loopne
push
inc
imul
testb
xchg
dec
mov
xor
xor
or
xchg
mov
movsl
push
cmp
mov
cli
mov
flds
popf
int3
mov
pop
cmp
je
pop
or
bound
sbb
jmp
sub
or
pop
sahf
mov
pusha
aam
sub
test
cmc
sub
pop
fimull
mov
pop
dec
xchg
or
xchg
bound
cld
insl
js
sub
mov
mov
push
cltd
mov
lea
je
lods
jnp
pop
pop
mov
in
pop
or
gs
mov
icebp
mov
mov
adc
fildl
jecxz
test
roll
dec
or
adc
int
cmpsl
imul
popf
cmpsl
dec
leave
sbb
mov
enter
out
dec
push
enter
loop
and
addr16
movsl
lea
rolb
jne
loop
dec
pushf
add
stos
fdiv
fs
imul
dec
mov
mov
insb
and
jmp
xor
repz
sar
test
sbb
insb
gs
popf
lret
add
jno
movsb
in
mov
push
fstl
mov
movsl
mov
sub
sbb
pop
fwait
in
ljmp
fadd
mov
ljmp
test
jae
aad
adc
and
insb
cmp
pop
mov
jae
in
lahf
dec
mov
fiaddl
bound
mov
leave
insl
add
ret
pop
test
mov
stc
or
xchg
cmp
inc
mov
rcll
adc
addl
rcrl
cmp
pop
xchg
lds
int
or
loope
xchg
xchg
out
lret
test
std
mov
insl
es
lcall
sbb
fcmovnb
adc
mov
pop
cmp
or
xchg
fcmovbe
test
mov
push
les
cmp
and
das
sub
dec
inc
shll
rcrl
stos
popa
rorl
daa
jg
adc
pop
pop
popfw
idivl
mov
cmc
dec
xlat
cwtl
jge
rorl
add
pushf
push
test
pop
leave
out
push
loope
cld
shlb
into
lods
dec
mov
mov
push
fwait
xor
outsb
add
add
lods
leave
std
lret
imul
jg
add
inc
pop
jl
iret
jb
call
stc
js
les
push
dec
pop
jnp
xchg
in
adc
jnp
add
gs
push
and
repnz
popa
mov
loopne
inc
mov
test
popf
jnp
std
jnp
cs
push
stos
mov
jne
push
fldcw
lret
cs
outsb
dec
mov
mov
jno
stos
mov
shrb
test
test
xor
adc
ds
cld
hlt
mov
xor
inc
insl
sbb
xchg
pop
xlat
push
dec
cmp
loop
shlb
xchg
lods
lds
loopne
cwtl
and
fldcw
roll
lahf
xlat
jne
adcl
push
into
popa
bound
loopne
clc
jl
es
rcrl
sbb
adc
sbb
add
scas
xchg
mov
push
ret
mov
or
mov
data16
inc
inc
cld
xchg
xor
jb
rcr
hlt
ret
in
dec
sbb
lret
cli
sahf
stos
int
jo
aas
pop
arpl
mov
and
rol
adc
inc
lret
adc
fdivs
andl
scas
mov
mov
nop
fists
sub
pop
ret
pop
xor
rorl
and
adcl
fadd
negb
pop
cmp
and
pop
pop
adc
sbb
adc
iret
inc
pop
or
mov
ret
push
fbld
ss
mov
or
shll
call
jno
pop
cmp
inc
lods
adc
or
or
inc
mov
mov
push
jae
cld
sahf
cmp
dec
lods
loope
pop
sub
xor
mov
les
mov
xor
int
push
sub
inc
and
pop
test
gs
fisubrl
xchg
sar
and
int
jno
lea
xor
inc
faddl
hlt
popf
aas
lea
mov
leave
jmp
iret
cmp
test
testb
xchg
les
scas
dec
sahf
mov
cmpsl
jl
and
xchg
fldenv
daa
sahf
add
test
imul
pop
pop
mov
int
aaa
pop
repz
lods
jns
sarl
sub
repnz
idiv
ljmp
xor
mov
outsl
sub
outsl
scas
out
faddl
cwtl
jnp
hlt
aam
mov
jne
and
mov
insb
push
movsb
sbb
mov
sub
xchg
mov
pop
stos
adc
mov
inc
xor
rclb
sub
and
imul
push
xchg
ds
or
add
iret
xchg
testb
sub
stos
xor
xchg
add
or
int3
jg
or
jp
stos
mov
sarl
out
fidivrl
add
cmp
fdiv
ret
gs
xchg
add
mov
push
mov
mov
and
int
inc
jne
mov
notb
push
ret
push
dec
data16
scas
scas
cmp
pop
fnstcw
out
xor
daa
outsb
mov
ret
adcl
imul
sbb
mov
pusha
and
or
mov
mov
fildll
mov
repnz
adc
pusha
pushf
mov
adc
cltd
stc
stc
and
insl
adc
sub
and
mov
cmp
aad
ficoms
imul
popf
pop
lret
sub
push
jae,pt
sahf
hlt
insb
jle
push
add
dec
xchg
mov
dec
xchg
imul
scas
lock
mov
and
cmp
xchg
push
ja
pop
cmp
xlat
mov
stos
or
aad
xor
jge
push
pusha
adc
out
arpl
push
pop
jle
test
push
sub
lds
negl
ret
hlt
mov
mov
or
mov
adc
out
pop
push
aaa
mov
jp
add
repz
ret
dec
push
lock
out
ret
add
scas
es
sbb
aas
shlb
adc
test
rcr
arpl
xchg
mov
fcomps
sbbb
andl
gs
test
and
mov
outsl
adc
inc
sbb
fwait
push
in
pop
mov
bound
inc
mov
test
test
add
adc
ja
jg
xchg
es
data16
aad
sahf
out
cs
xor
inc
pop
inc
jo
push
rolb
add
aas
xor
xchg
mov
mov
sub
pusha
and
test
xor
xchg
lock
lcall
rolb
fdivrs
inc
ds
data16
jmp
lods
xor
lret
adc
stos
lahf
or
lds
aas
lds
and
xor
add
dec
icebp
add
sbb
mov
inc
rorb
cwtl
out
xchg
lcall
add
jl
xlat
add
mov
xchg
cs
sub
mov
push
call
sahf
scas
je
push
leave
pop
dec
xchg
out
nop
jbe
lds
jl
add
lea
adc
daa
jbe
push
and
test
movsb
inc
pop
ljmp
test
jae
je
lcall
xchg
aas
inc
sub
lock
aas
push
pop
aad
jo
lods
ja
pop
mov
ss
pop
pop
std
stc
xchg
ss
push
call
push
out
dec
jmp
hlt
sub
outsb
add
and
or
lret
push
or
in
ret
test
lret
cwtl
popa
cmp
jne
ror
and
test
orl
or
xchg
insb
rcll
ror
mov
aad
push
mov
sbb
push
sbb
or
adc
xchg
sub
scas
push
rep
sbb
adc
lds
addr16
jmp
les
sbb
cmp
loop
sub
data16
xor
jne
adc
jb
sub
xor
cltd
cmp
and
sbb
in
enter
push
dec
adc
fiadds
pop
int3
cwtl
aas
mov
cwtl
mov
filds
push
jmp
flds
or
add
out
sub
lea
sbb
xor
cmp
rorb
pop
and
adc
xor
add
xlat
sub
pushl
adc
decl
loope
scas
xor
lahf
add
clc
pushf
jne
adc
lret
xchg
jno
es
lods
addr16
xor
mov
inc
lret
orb
dec
ss
xor
fmuls
cs
stc
add
jmp
inc
xor
movsb
pop
and
jmp
cs
jae
js
mov
fsubr
jge
cld
daa
inc
int3
cmp
and
shlb
or
push
in
mov
in
mov
mov
adc
js
es
rclb
bound
fwait
mov
lds
push
sbb
loope
lods
xchg
lret
cmp
andl
das
push
inc
inc
inc
mov
dec
test
or
push
or
xchg
or
dec
sub
into
mov
push
pushl
loope
inc
cli
push
or
ja
or
mov
je
sub
aas
adc
in
leave
sub
pop
ds
xchg
test
adc
adcb
in
into
jnp
and
aas
mov
ss
and
inc
mov
ds
or
mov
ret
jb
test
dec
cmp
aad
pop
rolb
sbb
jmp
out
mov
loop
hlt
pop
inc
imul
lods
sub
aad
fld
insb
jg
mov
mov
push
idivb
into
jle
xchg
inc
mov
push
in
fidivl
mov
push
loop
xchg
lods
adc
sub
dec
std
pop
inc
xchg
outsb
dec
mov
das
into
cmc
lea
andl
mov
pop
jmp
adc
jo
mov
jl
sub
je
pop
push
sahf
mul
adc
xor
fwait
mov
push
lret
lahf
push
test
add
cmp
pop
mov
fldl
mov
out
fs
cltd
mov
add
xor
cwtl
mov
adc
hlt
and
inc
jg
cld
pop
dec
xor
push
mov
pusha
out
addr16
test
insb
lods
and
movsb
fdivs
and
or
loope
mov
mov
das
xchg
inc
mov
test
mov
imul
lea
popf
in
mov
lahf
scas
push
loopne
stc
daa
push
adc
cmp
pop
out
popf
movsl
ror
and
xor
movsb
mov
pop
jae
es
pop
mov
push
mov
mov
aas
loope
jge
aaa
pop
mov
movsl
repnz
sti
mov
mov
mov
dec
xor
adc
in
das
xchg
xchg
dec
xor
orb
int
cli
adc
mov
loop
and
addl
mov
in
xor
stos
addb
dec
or
lcall
xorb
jp
cli
syscall
les
sub
push
in
loopne
aam
add
pop
inc
fnstcw
shrl
jle
mov
jp
std
sub
add
jae
sahf
jge
dec
pop
mov
xchg
push
inc
inc
add
gs
sahf
aaa
andl
lret
ss
xchg
push
dec
mov
sbb
dec
fimuls
jl
push
mov
rol
stc
sbb
out
lods
jg
adc
dec
xchg
push
ljmp
sub
cmpsb
lcall
insl
bound
das
gs
hlt
arpl
cmp
xchg
subl
cmpsl
sub
mov
xor
pop
jmp
or
inc
ret
push
insb
mov
call
push
mov
adc
add
stc
std
or
ss
cmp
or
push
and
and
mov
mov
or
cmp
mov
es
js
inc
xchg
push
cmpsl
jmp
inc
add
pop
push
sbb
xchg
scas
cli
jg
in
add
imul
mov
cwtl
push
ja
inc
jge
jl
dec
mov
pushf
xchg
xchg
cli
jmp
in
mov
test
adc
adc
hlt
and
jg
jne
cmp
jae
clc
add
add
add
add
sldt
add
cmpsb
out
cmp
jle
jmp
lea
fnop
xchg
mov
mov
mov
fnop
test
xchg
fnop
jne
mov
pop
jmp
xchg
xchg
jmp
fwait
mov
popa
mov
lea
jmp
ret
xchg
jmp
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
jmp
fwait
lea
fnop
fnop
lods
mov
fnop
xchg
jmp
mov
jmp
lea
mov
xchg
mov
lea
lea
lea
jmp
jmp
mov
mov
jmp
mov
lea
mov
xchg
xchg
jmp
lea
push
mov
jmp
mov
fnop
mov
jmp
add
lea
fnop
fwait
jmp
mov
push
xchg
mov
xchg
lea
mov
mov
mov
fwait
add
lea
xchg
mov
mov
xchg
jmp
mov
xor
fwait
mov
mov
fwait
jmp
dec
lea
mov
jmp
fnop
mov
mov
lea
inc
mov
jmp
lea
fnop
mov
lea
lods
xchg
lea
xchg
mov
jmp
mov
fnop
xchg
add
mov
lea
push
jmp
jmp
fnop
xor
fnop
lea
jmp
lea
xchg
lea
mov
movsbl
lea
cmp
mov
je
mov
xchg
ror
xchg
lea
jmp
add
fwait
inc
fnop
mov
jmp
jmp
jmp
mov
jmp
mov
jmp
mov
fwait
cmp
mov
lea
mov
mov
mov
xchg
pop
jmp
mov
lea
xchg
mov
jne
lea
pop
jmp
jmp
mov
lea
fnop
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
xchg
fnop
add
lea
lea
mov
xchg
fnop
lea
xchg
mov
fnop
mov
xchg
mov
jmp
lea
mov
add
mov
jmp
xchg
mov
lea
mov
fnop
lea
lea
mov
mov
add
xchg
mov
mov
xchg
pop
mov
lea
jmp
jmp
jmp
xchg
jmp
mov
xchg
mov
xchg
xchg
add
xchg
mov
add
xchg
jmp
mov
lea
lea
lea
mov
xchg
mov
lea
xchg
xchg
mov
xchg
mov
xchg
mov
mov
inc
mov
fwait
jmp
lea
jmp
xchg
call
xchg
rdtsc
jmp
mov
mov
mov
jmp
fwait
xchg
mov
fwait
jmp
fnop
fwait
pop
mov
xchg
push
xchg
mov
jmp
mov
mov
mov
lea
jmp
xchg
xchg
mov
fwait
jmp
jmp
jmp
mov
xchg
jmp
jmp
xchg
fnop
mov
mov
fnop
mov
fwait
pop
mov
not
fnop
mov
ror
fnop
jmp
lea
lea
jmp
fnop
mov
fwait
xor
xchg
push
mov
xchg
fnop
pop
fnop
jmp
lea
xchg
mov
xchg
fwait
lea
xor
fnop
mov
lea
lea
lea
lea
xchg
jmp
sub
mov
fwait
mov
pop
fnop
lea
fnop
fwait
xchg
lea
xor
mov
xchg
jmp
jmp
lea
mov
mov
lea
xchg
push
fwait
lea
pop
fnop
jmp
jmp
xchg
jmp
xchg
sub
jmp
mov
fnop
lea
mov
xchg
mov
jmp
mov
jg
lea
lea
xchg
jmp
fwait
jmp
xchg
xchg
mov
jmp
mov
xchg
mov
pop
xchg
xchg
rdtsc
jmp
mov
fwait
mov
fwait
jmp
mov
mov
xchg
xchg
rdtsc
mov
lea
mov
jmp
mov
sub
xchg
mov
mov
jmp
xchg
xchg
xchg
fnop
sub
lea
lea
mov
fwait
jmp
mov
lea
mov
jmp
sub
xchg
mov
fnop
jne
fwait
mov
jmp
fnop
ret
mov
fnop
jmp
fnop
mov
mov
popa
jmp
xchg
fwait
xchg
xchg
jmp
xchg
fwait
mov
jmp
fnop
jmp
pop
xchg
fnop
xchg
lea
fwait
jmp
popa
xchg
jmp
mov
xchg
jmp
mov
jmp
mov
pusha
call
mov
add
lea
lea
xor
call
push
push
push
push
call
mov
jmp
pusha
pushl
pushl
pushl
call
popa
add
cmpl
jne
lea
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
push
call
mov
test
je
mov
jmp
mov
mov
test
je
xor
push
mov
movl
jmp
pushl
pushl
call
test
je
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
testl
jne
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
push
push
pushl
call
call
popa
jmp
popa
ret
push
push
mov
or
je
mov
mov
sub
add
pop
pop
ret
pusha
mov
or
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
xchg
add
imul
gs
xor
cs
insb
add
mov
add
shll
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
inc
add
addb
adc
aas
cmpsb
inc
add
push
inc
add
inc
add
scas
inc
add
addb
add
add
sub
xchg
lock
shrl
push
clc
fisubl
xorl
add
pushf
outsb
pop
icebp
or
mov
stc
xchg
out
cs
mov
int3
inc
adc
stc
dec
mov
jno
push
or
shl
test
mov
mov
lret
arpl
xchg
and
and
data16
mov
ds
mov
lock
cli
adc
repz
test
cli
aaa
outsb
adc
loope
mov
out
icebp
or
negb
and
es
mov
inc
inc
push
add
adc
test
iret
out
sarb
sahf
push
xchg
es
lea
dec
adc
sub
dec
dec
sar
mov
mov
out
and
xorb
popa
out
or
lret
adc
call
or
roll
pop
xchg
inc
add
in
mov
lret
outsb
mov
inc
out
nop
loopne
inc
push
movsb
sbbb
xchg
mov
xchg
pop
mov
pop
addr16
inc
in
xchg
jns
xchg
dec
mov
dec
data16
xor
cmpsl
cld
movsb
or
cmp
mov
push
xchg
jp
sbb
mov
xorl
xchg
addr16
repz
and
js
mov
ja
adc
addr16
push
dec
fs
js
fisubs
sarl
pop
adc
hlt
sub
loope
loop
aas
pop
pop
xchg
mov
aas
mov
pop
dec
out
mov
out
fnsave
push
and
lret
shlb
test
in
jmp
jbe
loop
or
test
dec
js
fs
sbb
mov
faddl
cs
pop
inc
in
pop
xor
pop
dec
add
dec
xchg
sbb
icebp
inc
sub
dec
js
push
push
stos
adc
call
push
pop
add
std
pop
clc
aad
repnz
gs
js
test
sbb
lret
adc
cmp
lcall
or
lods
sub
icebp
dec
pop
dec
dec
arpl
xchg
cwtl
dec
cmp
stos
sbb
and
sti
mov
add
add
add
add
pop
add
sbbb
add
add
add
add
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
or
add
add
pusha
addb
fsubr
add
in
add
add
add
add
inc
add
