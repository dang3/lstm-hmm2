jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xchg
xchg
mov
je
enter
push
add
pop
add
add
add
add
dec
add
jns
rolb
addb
add
or
cmp
fwait
add
add
dec
add
add
add
pop
add
add
pop
add
add
add
add
mov
add
push
add
add
sub
dec
add
add
dec
add
ljmp
add
xchg
add
add
add
mov
ja
cmp
popa
add
add
add
ja
push
add
cmp
dec
add
add
dec
add
rolb
add
dec
add
add
add
ja
testb
add
add
or
xor
add
push
add
add
icebp
add
push
add
push
add
cmp
dec
add
add
dec
add
fwait
add
sbb
dec
add
add
add
dec
add
ja
popa
add
add
add
add
cltd
add
add
jb
mov
add
add
add
dec
add
add
add
pop
add
add
add
or
dec
add
dec
add
add
add
add
dec
add
roll
add
push
sbb
lods
add
inc
add
test
mov
add
add
add
add
add
mov
add
add
add
add
add
cmp
or
add
add
movb
add
or
dec
add
add
add
dec
add
add
ds
add
mov
add
add
jb
pop
add
out
add
dec
add
add
sub
cmp
push
add
mov
add
add
add
popa
add
add
aad
sbb
xchg
add
add
add
dec
add
out
add
add
ss
cltd
add
add
in
sahf
add
add
add
sahf
add
add
or
mov
add
add
or
add
imul
add
add
add
add
add
inc
add
add
mov
movsb
add
add
xchg
add
or
dec
add
add
jecxz
push
add
dec
add
add
or
dec
add
dec
add
add
or
sti
add
ljmp
add
push
add
add
add
add
add
add
add
add
ljmp
add
add
xchg
add
dec
add
add
add
sbb
out
dec
add
add
add
cmp
add
dec
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
push
add
add
out
add
dec
add
add
add
add
mov
dec
add
add
add
dec
add
add
add
add
add
add
dec
add
movsl
add
add
add
add
dec
add
add
add
ljmp
add
out
add
add
add
add
movb
add
add
add
add
imul
movb
add
add
dec
add
add
add
and
cmpsl
add
add
add
xchg
add
add
add
xor
add
out
add
addl
add
add
add
or
add
add
add
xchg
xchg
adc
pop
sbb
pop
push
push
dec
mov
xchg
xchg
mov
sbb
fnstsw
sub
ja
sbb
lret
lea
mov
sub
cmpsl
cld
pop
pop
inc
shlb
pop
sarl
das
mov
shr
or
inc
jge
and
and
dec
cmp
popf
in
jno
mov
dec
movsb
loope
lcall
sub
sbb
dec
loopne
add
clc
clc
dec
ret
out
insl
xchg
mov
cwtl
test
dec
sbb
popf
sub
sar
cmp
adc
fisttpll
aaa
mov
jge
cmp
repnz
mov
ljmp
in
cmp
imul
imull
xor
cli
adc
ss
popa
ret
popa
faddl
fnstsw
or
js
xchg
jg
scas
and
fldenv
out
mov
inc
adc
dec
adc
mov
inc
adc
xor
adc
loope
loopne
dec
fildll
xor
imul
aam
adc
fcomi
ljmp
or
jno
cmp
cmpsb
pop
mov
lcall
idivl
xchg
xlat
dec
jp
adcb
add
aad
call
pop
lock
sub
stos
loopne
aad
jge
jbe
rep
or
mov
call
pop
mov
mov
hlt
ud2
sbb
addl
lods
add
stc
sbb
stos
adc
ja
fwait
enter
loop
jne
cmp
loopne
push
lahf
and
sub
and
lcall
adc
or
loope
or
in
repz
mov
jle
xlat
sub
sbb
cld
and
mov
ljmp
adc
mov
push
inc
and
xchg
jg
mov
mov
sub
dec
out
dec
pushf
mov
cmp
lcall
push
pop
cmpsl
xchg
push
mov
adc
fistpl
je
cli
fidivrs
xchg
aam
je
xorl
lcall
or
mov
lock
orps
out
cmpsb
sbb
out
adc
pop
xor
mov
pop
lods
jmp
add
jae
adc
inc
pusha
pop
mov
cmp
shlb
jb
arpl
ja
data16
xchg
hlt
cli
mov
popa
sti
sti
sahf
sbb
mov
and
cmp
mov
out
jle
and
and
and
insb
int3
sub
adc
fdivl
cmp
pop
inc
adc
mov
and
cltd
ret
inc
jmp
inc
adc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lret
int
std
mov
leave
sarl
lods
push
adc
dec
daa
jge
insl
inc
sbb
ja
fstl
in
popf
xlat
out
not
push
pop
pop
dec
or
insl
inc
jno
or
pop
fstl
int
std
jno
xlat
popf
lahf
lret
mov
jnp
inc
orps
dec
or
push
add
scas
mov
jecxz
shr
mov
hlt
es
adc
sub
sbb
mov
ds
int3
mov
cmpsl
subl
mov
push
mov
cmp
xchg
cmpsl
xchg
aaa
jmp
xchg
cmpsb
or
inc
or
rcr
leave
cmp
xchg
mov
out
jmp
sub
mov
enter
push
repz
mov
test
ja
cmp
mov
add
xorb
dec
push
or
add
inc
pop
in
adc
bound
out
push
test
js
sbb
cmp
int
std
fucomi
popf
xchg
out
dec
lods
cmc
pop
test
jge
insl
daa
sbb
adc
loope
jecxz
fldln2
test
sti
xchg
stc
data16
dec
ja
push
sbb
pop
cmp
inc
xor
mov
jl
scas
icebp
mov
mov
test
aas
push
push
xor
cs
or
xor
imul
cmc
cltd
movsb
test
testb
mov
pop
dec
daa
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
xlat
out
imull
daa
jge
insl
inc
sbb
ja
xchg
push
movsl
movups
das
mov
mov
sub
cmp
mov
imul
jns
out
push
cmpsb
das
ds
lretw
std
rcrl
sbb
addw
dec
push
leave
push
mov
cwtl
sbb
cmp
insl
push
cmc
push
push
inc
sub
sub
icebp
xlat
jbe
shll
mov
lock
mov
push
mulb
fwait
mov
push
ja
sbb
add
push
xchg
and
xchg
call
cmovb
jo
sbb
mov
sbb
dec
fidivl
pushl
aaa
mov
pop
push
jne
xor
movsb
fstp
sub
jne
fisttps
out
add
addr16
or
paddq
out
mov
outsl
xor
in
jae
xor
in
test
push
xchg
cmp
mov
adc
ljmp
mov
xchg
sahf
fdivrs
ret
mov
repz
and
jo
xchg
or
repz
jnp
adc
test
outsl
sbb
cmc
cmc
idivb
or
andb
sub
and
insl
addb
add
cmpsb
dec
cmpsb
xor
xor
lcall
lods
int
mov
inc
nop
pop
mov
ret
iret
ret
fwait
dec
aam
jp
cmpsb
mov
stc
add
add
cmp
cmp
sub
adc
lock
or
cli
mov
ja
adc
push
mov
cld
loopne
and
loopne
repnz
and
pop
cmp
add
into
enter
or
pop
shr
inc
and
jg
sti
push
dec
frstor
jmp
ja
cmc
arpl
or
mov
add
out
decl
sub
adc
popf
insb
cld
push
imul
inc
jmp
add
leave
pop
inc
shlb
lret
cmpsb
add
push
bound
cmp
sbb
or
jmp
icebp
dec
and
and
sub
and
inc
jmp
cmpsb
mov
shrb
xchg
dec
aam
mov
ja
push
jmp
popl
inc
mov
cmp
add
sbb
lahf
aas
test
pop
fucomp
mov
cmpsl
hlt
xchg
xchg
imul
loop
sbb
xor
push
repz
hlt
aas
lods
dec
xchg
sbb
pop
fidivs
lret
sbb
fwait
or
xor
xor
stc
imul
lods
add
xorl
pop
sarb
pop
cld
rcrb
add
int
es
cs
sbb
jnp
sub
mov
adc
ret
mov
mov
cli
mov
pop
es
lds
fildl
repnz
add
inc
mov
subb
insl
je
jno
xor
cmp
gs
mov
sub
lock
fisttpl
rcll
mov
ret
mov
sahf
xor
gs
mov
in
movsl
out
loopne
repz
sarl
and
push
in
dec
add
or
sbb
mov
cs
les
js
cmpsb
imul
dec
pop
cmpsb
dec
cmp
cmp
jle
inc
inc
mov
lcall
pop
pop
or
scas
mov
lock
sbb
dec
dec
xlat
mov
pop
aaa
and
stos
pop
lock
push
out
ficompl
jge
mov
push
xchg
int
mulps
aaa
imul
jecxz
pop
gs
mov
cmp
pop
popf
jno
inc
lock
in
push
jo
jb
and
xor
stc
icebp
xchg
mov
mov
jmp
out
lods
imul
jp
fildll
mov
xchg
dec
mov
stos
stos
pop
xor
aas
stc
inc
orb
orl
popf
loope
mov
jg
fdivr
cmp
jae
nop
push
fsubs
out
adc
sub
cmp
jmp
std
int
and
aad
enter
sub
and
xchg
hlt
mov
ficoml
and
imul
push
add
je
sahf
mov
pop
xlat
adc
imulb
test
clc
adc
shr
jmp
sbb
sbb
adc
push
mov
popf
jecxz
inc
add
mov
or
jo
repz
sub
xor
test
push
jg
cmp
enter
lods
inc
mov
xchg
pop
out
outsb
pop
nop
mov
xchg
sub
fxch
lret
sti
loop
sbb
sbb
push
mov
pop
sub
and
fsubr
test
xor
enter
popf
dec
inc
cmp
or
pushf
ret
dec
jnp
push
mov
ret
fsubr
iret
loopne
add
adc
sbb
mov
mov
push
popa
jbe
mov
and
push
or
in
adc
pop
cmpsl
push
std
dec
dec
dec
inc
stos
inc
sbb
adc
scas
out
cmp
nop
sbb
push
add
lods
aas
repz
jp
ret
inc
adc
push
and
mov
in
sub
sub
cmp
lea
lret
cmpsl
and
mov
fiaddl
loop
mov
mov
icebp
push
jmp
ret
ficompl
add
push
cmp
in
push
xchg
fcmovbe
mov
mov
bt
mov
decb
sbb
flds
test
push
jno
sub
dec
inc
mov
clc
or
sbb
cwtl
mov
xchg
sbbl
scas
mov
xor
sub
push
mov
idivb
in
push
or
out
ja
pop
pop
div
jg
pusha
scas
dec
add
adc
pop
lods
mov
pop
loop
les
sti
mov
pop
ret
js
mov
bound
xor
mov
xor
or
cmp
popa
daa
lods
sbb
movsb
sbb
pop
int
rorb
repz
dec
out
cmc
jmp
jle
hlt
repz
push
outsl
clc
jmp
sub
loopne
pop
andps
int3
loop
push
insl
push
mov
mov
aaa
xchg
pop
negb
sbb
arpl
mov
mov
pop
mov
sbb
sbb
fs
inc
pop
cmpsb
sbb
adc
adc
dec
mov
adc
inc
adc
push
and
push
dec
dec
push
test
adc
ret
sbb
daa
mov
cmp
lock
cs
dec
pop
std
iret
fbld
in
arpl
lret
outsb
scas
mov
or
push
dec
sub
jo
xchg
testl
idiv
out
fwait
mov
int3
arpl
mov
push
jae
mov
sahf
aam
inc
jg
xchg
xor
jp
sbb
iret
flds
adc
mov
fbld
scas
cmp
cmp
mov
mov
pop
sbb
in
sub
cmp
pop
dec
mov
mov
in
fidivl
or
testb
pop
xor
xchg
and
loope
cmpsb
cmp
mov
pop
clc
push
jae
dec
xor
jo
dec
nop
cwtl
dec
cld
roll
pushf
out
pop
sahf
add
push
enter
das
test
xor
pop
orps
push
stos
lea
xor
pop
out
xor
sbb
mov
xchg
dec
mov
adc
pop
mov
fcompl
mov
mov
xchg
cmpsb
pop
pop
lods
in
jnp
jb
pop
push
add
xchg
xchg
jge
push
xchg
call
cmp
repz
das
inc
mov
cmpsl
shl
and
shrl
jmp
test
mov
cmp
es
shll
mov
xor
stc
cmp
xlat
ret
lock
insb
and
popa
lahf
mov
and
pop
mov
std
das
outsb
icebp
adc
pop
scas
je
cmpsl
pop
add
cld
cmpl
in
and
pop
ja
scas
push
pop
imul
mov
ljmp
pop
cmp
sbb
fiadds
ret
sahf
or
add
divb
fcmovnu
popf
sbb
sti
or
mulb
in
aas
jo
cmp
fisttpl
test
mov
es
or
pop
push
mov
stos
andl
mov
add
les
sbbb
cmpsl
sbb
sub
stos
stos
and
lret
fmull
pop
add
or
je
test
mov
aas
cmp
stos
and
pusha
repnz
sub
mov
int
xor
mov
fidivrl
xchg
push
and
rcrb
ds
leave
divl
data16
int
pop
mov
xchg
leave
enter
and
gs
test
xor
dec
jmp
aas
inc
sti
push
iret
fstl
cmp
jl
jle
jo
dec
sbb
dec
leave
jb
pop
cmp
pop
sub
test
pop
out
test
push
sub
mov
fisubs
into
dec
jnp
pop
scas
mov
clc
cmp
into
ret
insl
jo
decb
imul
dec
lds
stos
in
adc
iret
jg
cmp
or
mov
inc
js
cltd
and
xor
movsb
stos
cs
addr16
dec
pop
pop
insb
add
or
inc
sbb
loopne
gs
daa
cmp
adc
fstl
dec
insb
jo
sbb
ret
mov
lock
mov
jg
jmp
lahf
and
add
test
fstp
xor
pop
movsl
rol
push
mov
pop
sub
push
scas
into
adc
push
mov
ds
xchg
jb
dec
jecxz
mov
ret
mov
mov
add
or
inc
test
xlat
movsl
xorl
xor
sbb
cmpsb
push
and
enter
jnp
pusha
mov
loope
imul
ja
sub
mov
addb
pop
sub
shll
mov
or
lock
lods
xchg
adc
rcrl
aaa
aas
fs
jp
cmpsl
adc
fwait
mov
adc
rcrl
pushf
xor
mov
xor
hlt
pop
xor
or
or
data16
test
in
mov
push
xchg
jge
pop
pop
pop
fistl
ljmp
out
out
lock
lret
mov
mov
mov
sbb
fdivp
xchg
add
xchg
rorb
fwait
lahf
inc
mov
mov
inc
inc
int
sbb
push
pop
out
jg
insb
test
or
outsb
cmp
pop
or
ficompl
stos
jo
scas
lret
aaa
and
and
loope
or
sahf
pop
mov
mov
call
mov
ds
ss
jmp
xor
mov
sbb
mov
pop
notb
or
lret
sub
sti
jnp
cltd
sub
add
mov
cmc
inc
pop
das
sub
lcall
xor
cmpsb
roll
xlat
cwtl
cltd
mov
mov
pushf
or
and
je
sub
cmp
pop
and
jl
popa
stos
sub
imul
pop
jl
push
add
call
cmp
dec
push
das
enter
or
cmp
cmpsb
in
daa
mov
shlb
stos
insb
shl
insl
or
loope
xor
mov
cwtl
sbb
inc
pop
je
lds
cwtl
push
subb
scas
mov
pop
mov
fdivr
xchg
jp
leave
mov
lds
enter
popf
push
mov
xchg
cmp
xchg
ret
xchg
pop
adc
push
mov
jnp
adc
dec
testb
mov
sub
pop
mov
jno
sbb
jne
cmc
inc
pop
sub
sub
rcll
push
xchg
jmp
fistps
movsl
and
xchg
lahf
mov
xchg
mov
jbe
push
pop
jle
jno
dec
sub
xchg
sbb
jge
fs
shll
in
push
icebp
mov
lcall
inc
push
xchg
movl
lock
sbb
mov
insb
or
mov
pop
mov
rorb
cmpsl
in
jbe
dec
data16
pop
mov
xor
mov
push
or
dec
cmp
mov
mov
testb
int
ds
data16
inc
stc
aad
push
mov
test
es
dec
push
fistps
push
js
pop
pop
test
add
jbe
daa
cmpsl
sbb
dec
pop
inc
add
xchg
xchg
out
ficoms
push
aaa
leave
testb
mov
mov
xor
and
xchg
lods
mov
xchg
fidivrl
repnz
mov
cmp
data16
idiv
jns
jne
addl
mov
adc
inc
sub
scas
push
test
lds
dec
push
xchg
cmp
imul
jns
std
jmp
dec
jae
add
test
inc
push
int
pop
imul
dec
mov
sub
inc
lret
mov
inc
cmp
mov
sub
jnp
dec
jb
mov
push
push
das
idivl
cmp
sub
xor
out
jnp
mov
popa
iret
movsl
xchg
xchg
mov
xor
int3
sbb
push
mov
sti
fstpl
into
out
aaa
inc
mov
fimuls
xor
sub
inc
std
sub
jo
xchg
adc
enter
push
stc
jmp
add
mov
add
test
fisttpl
leave
inc
xchg
xchg
inc
mull
test
and
xor
mov
icebp
aam
out
mov
jb
pop
inc
adcb
rclb
cmp
mov
dec
test
popf
mov
xchg
loope
je
enter
xchg
pushf
test
cmp
sub
sbb
jo
adc
jg
xchg
jo
mov
daa
inc
xchg
pop
xchg
sti
sar
push
aad
mov
and
popa
aam
xor
push
test
lret
cs
mov
mov
and
aaa
cs
or
mov
cltd
add
inc
pop
dec
fisttps
xchg
sarb
dec
xor
add
clc
xor
mov
adc
and
dec
lds
mov
cmp
in
cli
cwtl
lret
mov
pushf
mov
sbb
push
mov
or
push
inc
in
inc
inc
push
push
sahf
shl
mov
cmpsl
mov
mov
sbb
loop
roll
shufps
pop
cmpsb
and
pop
aad
or
test
test
sub
cltd
iret
cmpl
test
pop
mov
int3
stos
clc
jno
cmc
jno
pop
pop
xor
push
xchg
jae
jge
jl
fstl
sbb
inc
adc
sub
lods
xchg
mov
je
push
ret
or
or
pop
xlat
mov
push
in
testb
push
jo
shll
adc
mov
sub
outsb
stos
sub
sahf
mov
iret
les
add
add
or
mov
fs
in
inc
stos
dec
leave
push
jno
jmp
cmp
imul
lods
out
and
in
mov
mov
outsb
add
fwait
enter
lods
pop
jg
sub
jne
imul
in
arpl
enter
mov
dec
inc
jp
sub
loope
orb
xchg
cmp
jg
add
test
out
xchg
mov
cwtl
shl
sub
pop
jle
sarb
mov
mov
or
xor
insb
lret
aam
data16
rol
push
ljmp
pop
sbb
cmp
or
mov
ljmp
mov
in
in
in
iret
push
adcl
rorb
sub
std
test
sbb
lcall
push
sarl
push
in
scas
cmp
pushf
jmp
sub
repz
nop
lods
scas
inc
inc
sbb
out
loopne
shl
pop
pop
shlb
xchg
in
mov
in
inc
mov
gs
mov
hlt
sti
pop
mov
stc
mov
int3
pop
pop
push
nop
ds
xor
fldl
mov
dec
cmp
nopl
fsubs
sbb
xchg
lods
lock
out
call
or
and
sub
and
jbe
data16
adc
inc
les
out
shl
xchg
jmp
inc
mov
nop
push
aam
out
adc
data16
insl
inc
add
inc
dec
lods
dec
das
lock
lret
movsb
and
ret
jne
jmp
loopne
cld
inc
add
xchg
pop
test
xor
jne
sbb
cmpsl
ficompl
cwtl
loope
in
mov
ss
ret
in
and
mov
sbb
sbb
jp
dec
push
outsl
xorl
pop
flds
dec
movl
fdivr
inc
lods
push
nop
aas
sbb
xor
push
pop
dec
ds
xchg
push
dec
lods
adcl
pop
gs
lock
sub
xchg
fldt
aaa
cmp
sub
arpl
notb
pusha
xor
fs
inc
dec
mov
and
int3
add
ret
outsl
xor
and
mov
dec
loop
nop
out
jecxz
divb
mov
cmpsb
cmpsl
gs
jp
cmp
adc
dec
pop
mov
mov
jne
or
xor
pop
xor
mov
in
andb
jecxz
fadds
mov
imul
xchg
int
sbb
cmp
mov
daa
pop
mov
loope
mov
cltd
jae
pop
popf
push
popa
int3
cs
jmp
push
push
dec
push
fiadds
nop
popl
push
add
cld
cmp
push
rcr
out
pusha
xor
mov
shlb
or
pop
mov
push
pop
mov
cltd
jecxz
adc
sarb
mov
insb
lds
hlt
add
sub
out
add
mov
inc
out
inc
lcall
jae
cmp
push
fldcw
daa
push
xchg
popf
xchg
icebp
iretw
scas
cltd
or
cld
pop
repz
arpl
push
in
xchg
stos
pop
cmpsb
data16
add
mov
stos
stos
and
xchg
out
ss
test
inc
cld
insb
add
sbb
or
flds
xorb
fdivl
inc
xchg
or
fcompl
adc
lea
outsb
lcall
test
rcr
dec
jp
pop
or
ficomps
pop
leave
or
push
mov
dec
adc
sub
daa
jbe
jp
push
pop
les
mov
push
mov
shrl
sbb
lahf
rorb
and
jp
cmpsl
jecxz
sbb
adcb
dec
mov
lret
fcoms
lret
sub
movsb
pop
and
lret
jmp
and
mov
cltd
pusha
mov
cmp
pop
dec
imul
mov
cmp
lods
pop
fdivrl
aad
mov
insl
dec
push
push
add
hlt
mov
popa
lcall
test
cwtl
int
jb
inc
cmc
shll
mov
out
mov
std
fidivl
jbe
pop
enter
divb
jb
sbb
jno
add
xor
loop
cmpl
mov
sub
push
popf
in
and
dec
scas
push
insl
fimull
mov
adc
inc
xchg
jecxz
repz
int
fistps
clc
das
jl
push
sahf
xor
jne
out
fnstcw
jmp
mov
adc
jle
js
sub
addl
xchg
jge
je
subl
loop
fstpt
sbb
not
mov
pop
cmp
sub
popf
mov
sbb
adc
addr16
lsl
mov
daa
mov
cmp
xor
xor
inc
add
popf
fcom
inc
sub
mov
pop
lcall
test
movsl
sub
enter
xchg
aas
bound
mov
push
les
test
xlat
mov
push
inc
xlat
sbb
and
sahf
xchg
hlt
push
fwait
adc
fs
cmpsl
or
add
ds
out
cmpsl
out
pop
pusha
sub
stos
sbb
cmpsb
test
sub
add
inc
cmp
loope
je
or
xor
loop
addb
pop
sub
pop
inc
jnp
cmpsl
cltd
mov
cs
insl
push
lret
dec
test
es
mov
sar
xchg
sub
xor
pop
add
mov
fldl
mov
jbe
push
adc
fcomps
int3
xor
push
iret
test
out
lahf
add
loop
subl
int3
js
pop
ljmp
enter
stos
rep
and
xchg
arpl
movsl
mov
js
sbb
js
pop
mov
jno
addr16
imul
mov
lcall
decb
loop
and
mov
cmp
lret
test
lods
iret
shrb
mov
jge
and
sbb
jno
and
xchg
mov
sbb
or
or
lcall
pop
fimull
inc
aad
jnp
pop
push
mov
sbb
ret
add
add
add
repnz
sub
std
stos
in
popf
xlat
out
imull
daa
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
xlat
out
imull
daa
jge
insl
inc
sbb
ja
xchg
xchg
int
std
mov
popf
rorl
add
dec
jge,pn
insl
inc
sbb
inc
sub
das
std
lahf
in
popf
out
ja
pop
pop
call
sbb
xchg
fcomip
cwtl
ret
rcll
loop
xchg
mov
mov
push
pop
mov
daa
adc
ret
xor
xchg
ret
mov
cmpsl
xchg
xlat
add
mull
adc
bound
push
push
add
xor
xor
mov
loop
lods
mull
pop
sbb
daa
jns
jo
add
mov
fmuls
and
sub
jno
sub
nop
add
ss
movsl
sarl
jb
addr16
mov
icebp
das
cmpsl
movsb
pushl
clc
divl
sahf
stos
in
and
xor
fnsave
sub
xchg
pop
pop
ret
push
mov
ljmp
add
xchg
mov
out
push
subb
insl
add
js
sbb
inc
imul
pushf
ja
cmp
and
sub
xor
outsb
or
cmp
sub
rcll
daa
out
inc
add
sub
rcrl
insl
mov
xchg
pop
popa
bound
sti
daa
xchg
es
inc
push
xorb
and
xchg
xchg
xchg
mov
cmpsl
jbe
cli
mov
add
xchg
pop
fadds
add
push
daa
pop
push
or
ja
push
mov
ficomps
mov
jb
jae
pop
pop
popa
pusha
ss
xor
jne
es
xchg
cmpsl
test
lahf
out
inc
xor
xor
push
sbb
xor
sub
adc
mov
fbstp
mov
mov
pop
jb
bound
adc
inc
xor
rclb
repnz
cmpsl
xchg
xlat
add
mull
pop
jb
bound
adc
inc
xor
rclb
xor
out
sub
int3
inc
adc
lret
xor
mov
sub
dec
inc
es
shrl
xchg
add
adc
cmp
sbb
sbb
out
enter
imul
mov
xchg
repnz
repnz
mov
xor
rol
mov
popf
fisubrs
fmul
cmp
daa
adc
negb
mov
xor
or
xchg
pop
cmp
adc
in
push
andb
cmp
lcall
lds
xor
and
lea
pushf
ljmp
imul
daa
in
inc
dec
daa
adc
sahf
stos
inc
in
sbb
adc
jae
mov
xchg
dec
outsb
cwtl
test
imul
in
dec
lods
jl
cwtl
dec
dec
out
in
rcrl
and
pusha
sarb
pop
sbb
mov
imull
test
leave
pop
bound
pusha
in
lods
sub
adc
gs
es
dec
sub
and
xchg
add
xchg
mov
inc
ret
mov
test
push
or
in
enter
out
bound
ret
dec
sahf
pop
shll
test
pop
stos
xor
ja
push
les
adc
pop
sahf
outsb
lahf
clc
pop
out
test
xchg
mov
call
ss
mov
jne
nop
sbb
lods
out
pop
sub
test
fdivrl
adc
xchg
mov
sub
leave
dec
and
xor
test
or
callw
push
or
je
mov
cmpsb
in
dec
scas
adc
xchg
mov
mov
ja
insb
pop
daa
ret
jmp
sub
adc
mov
pop
call
addr16
dec
sub
dec
inc
mov
cwtl
fsubr
dec
shll
pop
shlb
xor
dec
mov
mov
out
rolb
or
out
push
push
lahf
popa
inc
ljmp
mov
pop
mov
adc
mov
push
idivl
push
jne
icebp
test
imul
fiaddl
add
fldcw
mov
stos
or
adc
inc
and
push
and
je
int
insb
nop
sbb
inc
repnz
ret
call
xor
or
cs
add
push
push
or
push
into
push
addr16
out
sub
incb
test
mov
or
jno
and
pop
int
inc
cltd
push
jae
mov
mov
fisttps
mov
iret
push
ret
outsb
push
xlat
jp
add
xor
aaa
mov
ja
jge
sbb
std
add
dec
daa
int
bound
or
cs
in
xor
imul
xchg
mov
ret
mov
jns
xchg
jl
adcl
clc
daa
jne
inc
jmp
sub
jns
test
scas
insl
mov
pop
sbb
pusha
fists
lahf
imul
cwtl
inc
add
je
sbb
lea
stc
mov
pop
mov
test
xchg
inc
pop
dec
and
js
push
sbb
add
jge
imul
pop
pop
pop
fwait
mov
insb
pop
fidivrs
leave
fs
xchg
lea
mov
mov
lahf
dec
andb
add
push
in
and
outsb
sub
cmpsb
push
les
mov
cmp
jno
pop
icebp
lret
mov
pushf
es
dec
and
subl
mov
pop
or
mov
mov
mov
sub
cmp
inc
sub
ror
pop
das
out
in
leave
push
inc
mov
xchg
test
mov
sub
or
into
lods
jmp
test
mov
leave
scas
push
and
add
addr16
jbe
stos
stc
or
pop
repz
pushf
and
mov
aam
dec
nop
add
pop
jge
out
mov
push
div
std
sbb
push
and
stc
ret
push
jb
pop
cmp
ret
and
test
in
ja
jo
xchg
shll
pop
or
sub
cmp
mov
mov
mov
mov
cmp
das
inc
insl
xor
scas
call
or
mov
leave
mov
cmp
push
inc
push
sbb
sti
in
inc
insl
iret
pop
push
pop
dec
mov
jne
mov
dec
mov
cmp
jge
fsubs
mov
fwait
push
jb
gs
stc
adc
sbb
pushf
aad
dec
ljmp
rcll
xchg
sti
cmp
mov
imul
sub
jge
mov
mov
fxch
out
ret
cwtl
jb
addl
adc
idiv
push
popf
insb
and
sbb
inc
loope
mov
repz
outsl
adc
jmp
xchg
lahf
adc
xor
jle
mov
inc
rcll
imull
stos
pop
inc
jl
pushf
mov
scas
mov
add
insb
sub
mov
ds
inc
les
xor
inc
in
sbb
stos
push
out
or
xor
and
push
sbb
mov
out
xchg
adc
lcall
mov
in
mov
xor
loopne
pop
std
cmp
movsb
mov
out
roll
pushf
cwtl
mov
sbbb
ss
dec
mov
clc
fdivrp
or
push
int3
push
dec
xchg
insb
pop
sar
in
add
jle
stos
inc
push
mov
jne
lock
inc
mov
mov
xchg
inc
or
movsb
pop
scas
imul
xchg
and
pop
pop
mov
adc
imul
cwtl
loope
lock
push
xor
mov
xchg
mov
sub
into
mov
iret
mov
or
mov
xchg
xor
pop
cmp
adcb
sbb
push
and
jne
shll
xchg
fsubs
in
mov
mov
jnp
scas
inc
cli
popa
lods
aad
mov
xor
or
adc
aas
pop
jb
pop
jae
out
inc
cmp
and
adc
inc
adc
mov
dec
aad
insl
and
andl
inc
and
push
xchg
pop
dec
clc
mov
in
movsb
imul
sahf
pusha
std
xchg
ret
xor
dec
sbb
mov
adc
gs
nop
clc
aaa
testb
inc
mov
gs
call
mov
or
rorb
sbbl
imul
in
push
cmpsl
popf
xlat
or
sbb
sub
cmc
enter
scas
jbe
jmp
xlat
mov
in
outsb
mov
inc
jo
das
out
std
cmp
out
xchg
jno
pop
push
outsl
in
adcl
in
adc
xchg
xchg
pop
jmp
out
cmc
inc
lock
jmp
xlat
dec
inc
push
sbb
in
cltd
jle
stc
outsb
adc
pop
imul
mov
or
jne
xchg
mov
cmp
push
dec
push
stos
dec
in
outsb
orb
cltd
into
mov
jne
xchg
leave
sub
pop
inc
inc
dec
repz
dec
jae
xchg
jae
int3
or
jmp
lods
xchg
xchg
cmpsb
int3
stc
mov
xor
arpl
or
and
clc
psllw
shl
jo
std
pusha
or
push
add
daa
popa
outsl
or
in
call
xchg
push
outsb
fisubs
sbb
xlat
fstpt
scas
add
mov
mov
popa
jae
lcall
cld
mov
mov
and
xorb
xchg
call
js
xchg
mov
pop
pop
sbb
mov
add
int3
mov
and
loopne
jle
loopne
sbb
pop
ja
jg
inc
loope
fmull
dec
jmp
cmpsb
sbb
imul
cli
or
fadd
mov
rcrl
mov
addl
cwtl
inc
fisttps
daa
push
fiaddl
cld
pop
xor
xchg
jl
xchg
sti
scas
pop
arpl
jbe
ds
inc
mov
adc
cli
and
icebp
sub
shll
mov
shl
cmp
pop
in
push
sub
mov
sbb
test
data16
mov
clc
or
sub
xor
pop
pop
fdivrl
xchg
jb
jmp
xchg
jl
cltd
add
ss
pop
insb
aad
pop
add
push
into
mov
xchg
hlt
xchg
out
dec
clc
movl
xor
dec
adc
mov
lret
and
stos
cmc
dec
inc
or
js
insb
or
cltd
lods
or
outsl
lock
dec
xor
rcrl
jne
jp
inc
jo
cmp
mov
ret
jecxz
push
das
adc
pusha
adcb
leave
repnz
push
enter
pop
sbb
leave
mov
fsubs
sbb
loop
and
push
and
mov
mov
pop
fnop
in
hlt
mov
shll
sti
cmc
test
jecxz
jno
xchg
cmovae
adc
or
jno
mov
lea
sub
out
pop
or
sahf
sub
sahf
cmpsl
mov
sub
in
fldt
das
outsl
xor
aad
aas
in
das
xchg
dec
mov
in
mov
cmp
cld
test
jl
push
popa
and
sahf
inc
push
fidivrs
xor
or
mov
je
dec
insb
or
aas
sbb
xchg
bound
pusha
adc
pop
sub
mov
push
and
inc
and
mov
test
add
push
out
or
mov
and
shrl
cmp
arpl
xchg
repz
repz
ja
xchg
lea
inc
rcrb
fsubrp
lret
mov
push
and
mov
xchg
mov
and
iret
sbb
pop
xor
and
in
arpl
cmp
cwtl
andl
js
adc
aaa
outsl
pop
xchg
xchg
adc
mov
jbe
and
mov
repnz
xchg
push
sub
outsl
stos
roll
jmp
jl
sarl
out
bound
and
aam
mov
jmp
je
xchg
js
aam
in
pop
arpl
cmp
cmpsl
push
xchg
or
push
stc
repnz
mov
push
lock
sbb
lods
pop
add
cmc
mov
arpl
mov
jmp
xchg
dec
ss
dec
push
shrl
mov
jge
pop
mov
loope
movsl
fidivs
stos
ljmp
add
jo
cmp
or
xor
sbb
dec
sahf
mov
shr
and
in
cmc
mov
ss
fbstp
inc
addr16
add
pop
sub
sbb
sub
jnp
pushf
xchg
fdivp
out
mov
insl
loop
mov
std
nop
and
cmp
push
mov
mov
stos
imul
outsb
or
jmp
hlt
lret
ja
lea
fs
push
push
je
scas
inc
js
inc
out
sarl
cmp
movsl
push
out
xchg
add
and
push
ds
jl
jmp
mov
mov
mov
dec
mov
lds
xor
rcrb
lret
or
or
pop
inc
loope
sbb
ds
mov
xchg
push
fwait
loopne
mov
xchg
js
cmp
xchg
test
and
jp
mov
out
push
xchg
and
jge
pop
cmpsl
out
cmp
mov
xchg
dec
cmp
jge
mov
dec
adc
xorb
js
lcall
out
cs
insl
cmp
xchg
cmp
jl
cmp
add
out
test
ja
in
es
inc
lret
xchg
inc
cli
clc
xchg
and
aaa
jmp
mov
dec
lret
or
cmp
or
insb
push
or
sbb
into
mov
incl
add
adc
push
les
add
inc
cli
pop
jl
push
pop
out
mov
mov
mov
or
movsl
sub
mov
icebp
mov
fcoml
add
inc
lahf
rcl
jae
sub
mov
sub
mov
fcoms
shlb
into
cmp
push
es
fisubrl
mov
pop
mov
mov
outsb
mov
pop
xchg
add
add
cmp
aad
add
cmp
jmp
mov
je
popa
push
mov
shrl
xor
add
mov
xor
out
fimull
jne
pop
push
dec
call
jge
mov
dec
mov
add
cwtl
arpl
mov
add
inc
inc
out
adc
dec
cmp
sub
test
aam
and
imul
push
aaa
popf
xchg
cld
pop
adc
add
call
jo
xchg
mov
adc
loope
mov
push
sbb
jl
push
and
dec
inc
push
xor
dec
push
mov
inc
insb
in
mov
add
roll
ljmp
lods
pop
cwtl
jg
in
lret
xchg
push
cwtl
lock
int
sbb
lret
stc
mov
push
ja
xchg
mov
add
ret
mov
inc
movsl
es
sarb
push
mov
cmp
repnz
inc
repnz
add
popf
sbb
jo
fisttps
sbb
pop
or
adc
cltd
push
jno
fsub
mov
movsb
dec
leave
push
mov
imul
shll
rcr
bnd
push
outsl
test
addr16
or
inc
jge
sub
pop
out
ret
mov
adc
sbb
lods
adc
mov
jb
or
adcl
add
adc
xorl
cld
outsb
fnop
fsubrs
das
inc
insb
aaa
and
or
lahf
movsb
mov
inc
dec
mov
vandps
fs
dec
dec
push
dec
divl
rcll
dec
pusha
cmpsb
xor
xchg
adc
inc
dec
fimuls
xchg
aad
pop
sbb
mov
testb
test
push
mov
orb
jp
imul
mov
inc
cmpsl
inc
add
xchg
mov
sbbb
mov
xchg
push
scas
push
pop
mov
push
xlat
out
dec
mov
divl
xchg
sbb
hlt
ds
les
xorl
out
push
call
mov
int
insl
xchg
fcoms
sti
mov
flds
add
mov
mov
data16
push
xor
inc
mov
popf
outsb
sbb
rcl
in
sub
aaa
sahf
pop
insl
scas
add
mov
or
dec
inc
in
jno
sub
mov
sbb
cs
gs
or
xchg
pop
push
out
cmp
call
popl
mov
mov
nop
or
pusha
inc
mov
out
movsl
movsb
jmp
mov
sub
jns
leave
out
test
mov
jbe
scas
pop
jb
lret
call
sbb
mov
jns
inc
or
lods
mov
dec
pop
push
mov
xchg
mov
das
mov
adc
push
push
lret
data16
mov
insb
pop
sbb
jns
lea
xor
outsl
stc
cmp
inc
test
adc
fisubs
add
fcoml
cwtl
jecxz
or
mov
ds
adc
push
cmp
aad
outsb
mov
mov
setbe
call
sahf
popa
dec
mov
pop
shr
xchg
fcmove
sub
or
cmp
bound
adc
push
xlat
jmp
xchg
fldenv
popa
mov
push
cltd
mov
xor
pop
ret
xor
adc
mov
cltd
ret
ja
or
lds
sub
aaa
adc
subb
cmpb
jbe
insl
sbb
xor
lds
pop
out
bound
sub
xor
xor
into
xor
in
adc
mov
in
aad
out
dec
cmp
or
or
and
adc
sar
mov
dec
jne
fwait
sbb
jne
sbb
int
sub
aas
adc
xor
les
adc
pop
jbe
push
sbb
lret
xor
push
pop
lods
lea
push
sub
or
fimuls
dec
push
sti
ficoml
ja
dec
fistps
sarl
cmp
sar
jnp
decb
xchg
push
rolb
cmp
inc
adc
mov
insl
dec
orl
lock
aas
sub
push
aam
push
rorl
pop
mov
jae
les
andl
xchg
cmpsl
pop
mov
mov
fcomps
pop
jp
push
pop
xchg
sbb
cmp
xor
repnz
lahf
loope
xor
xchg
or
push
cltd
stc
mov
mov
xchg
sub
jne
sbb
ja
mov
out
cmp
add
outsl
sub
repnz
icebp
ret
into
call
xor
ss
rcrl
jnp
add
cli
popf
mov
stos
mov
pop
mov
cs
xor
dec
push
pusha
xchg
popf
call
shrl
push
and
adc
dec
rorl
push
fbstp
jl
or
xchg
repz
or
inc
sar
xchg
and
cltd
stc
and
mov
lds
hlt
aaa
xor
cs
pop
inc
jl
in
inc
in
jns
scas
mov
bound
fcomps
jge
push
pop
cmp
push
add
ja
fidivs
fadd
loopne
sahf
mov
sbb
cmp
sub
jne
push
dec
aas
cs
ss
fisttpll
ret
adcb
jle
es
aas
cli
lea
mov
adc
xor
hlt
popa
stos
popa
xor
cmpsb
popf
adc
cmp
adc
xor
add
cmp
flds
jns
into
push
rcrl
sbb
repz
nop
mov
out
inc
fnstsw
jno
mov
sbb
jo
aad
mov
jl
imul
sbb
or
scas
sahf
jmp
xor
xchg
dec
rcll
int
data16
cmp
mov
sti
push
pushf
cwtl
jnp
mov
roll
or
or
sbb
cli
inc
jge
lahf
cwtl
daa
hlt
outsl
sub
cmpsl
popf
inc
push
and
enter
test
mov
cmp
mov
push
and
sub
iret
push
js
call
int3
aaa
mov
hlt
cmpsb
bound
pop
mov
adc
pop
aam
stos
cmpsl
jo
scas
add
loopne
test
inc
addl
test
lcall
fidivrl
int
and
fwait
add
in
movb
pop
leave
add
add
jno
jecxz
mov
mov
jmp
add
aas
mov
std
jecxz
lahf
arpl
adc
pusha
mov
cs
pop
pop
arpl
pop
pop
divl
sub
add
xchg
sbb
mov
mov
fdivrl
and
arpl
adc
test
gs
push
xchg
stos
mov
iret
lds
or
push
xchg
xchg
cmc
mov
aas
popf
call
aad
adc
ret
in
dec
mov
add
mov
cmp
mov
or
clc
sbb
push
xchg
jl
add
inc
cmpsl
ret
rcrl
cmp
aaa
inc
pop
cmp
enter
rolb
lret
fadds
lods
fidivrs
scas
jo
in
push
iret
push
gs
inc
js
cmp
pop
iret
xchg
mov
icebp
fwait
pop
jg
xor
pop
dec
or
fwait
jae
in
pop
rep
out
call
mov
mov
stos
jg
outsl
mov
mov
pop
out
shrb
or
movsl
fwait
sbb
iret
and
pop
mov
sbb
ljmp
mov
pop
rcll
das
ljmp
out
call
inc
aaa
iret
jle
and
cmpsb
insb
xchg
mov
out
sbb
mov
movsl
push
stos
out
dec
mov
mov
dec
and
and
add
sub
adc
sbb
add
fs
out
aad
mov
iret
outsl
adc
fisubl
inc
push
mov
outsl
pop
les
lret
sub
scas
push
imul
mov
push
mov
xor
stc
sarl
adc
xorl
testl
cs
push
sti
scas
movsb
out
stc
iret
inc
sub
and
dec
lret
or
fisubs
rorb
fdivl
repnz
dec
pop
add
data16
jp
imul
sub
dec
mov
aaa
subb
or
in
mov
rcl
dec
mov
addr16
jnp
pop
or
ljmp
sbb
outsl
cmp
jo
stos
jp
pop
aam
stc
bound
xor
mov
mov
inc
cltd
fstl
shll
ja
cmp
in
into
mov
aad
loop
cmp
scas
xor
insl
push
sub
fists
and
repnz
movsb
xor
aaa
mov
mov
add
out
fcomi
mov
lea
mov
push
push
out
or
lods
fldenv
sub
sahf
stos
rcl
movsb
xchg
sub
inc
outsl
cmp
cltd
push
pop
push
mov
jne
pop
call
test
imul
mov
xor
jle
sbb
push
call
adc
xor
pop
test
mov
xchg
fists
and
mov
sub
mov
mov
pop
or
sbbl
in
add
adc
mov
loop
xchg
xlat
add
mull
pop
jb
bound
adc
inc
xor
rclb
repnz
cmpsl
xchg
xlat
add
mull
pop
jb
bound
adc
inc
xor
rclb
xchg
aaa
loop
add
addb
out
xchg
inc
pop
xorb
daa
adc
inc
xor
addr16
xchg
sahf
xchg
xlat
xchg
mov
and
push
pop
mov
push
fisttps
cwtl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
xchg
enter
dec
xchg
pop
orb
clc
pop
call
push
mov
mov
push
xlat
cmp
movsb
negl
out
pop
clc
pop
enter
enter
test
fsubs
xchg
ljmp
xlat
add
adc
mul
adc
daa
pop
mov
mov
cmp
or
les
mov
aad
fstl
sbb
inc
push
and
sbb
cmp
add
hlt
std
cmp
cld
pop
adc
mov
test
push
imul
add
jg
das
mov
adc
jne
insl
enter
negl
cmpsl
cwtl
sarb
lock
cmp
inc
or
notl
pop
pop
mov
test
jo
fldt
repz
lahf
int
sbb
insl
notb
out
pop
stos
sti
clc
daa
pop
scas
enter
test
push
dec
inc
jb
jg
stos
or
hlt
inc
clc
insl
or
shrb
inc
push
ja
leave
js
cwtl
mov
cmpsl
inc
xlat
cmp
sub
ret
pop
jle
cs
enter
xchg
inc
push
ja
addr16
sub
push
mov
jno
insl
push
mov
dec
mov
xor
xor
xchg
cmp
ret
push
stos
sbb
jbe
fs
add
scas
xor
adc
add
jecxz,pn
fimuls
cmpsb
sub
pop
sub
sbb
or
clc
pop
call
push
mov
mov
push
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
mov
or
out
repz
ficomps
inc
xchg
test
mov
lds
outsb
mov
dec
mov
lret
jns
add
jbe
fdiv
int3
push
int
push
or
loopne
jle
mov
push
dec
jp
pop
mov
fnstsw
dec
inc
lret
std
mov
sti
inc
dec
add
mov
dec
bound
push
in
sub
dec
dec
adc
or
pushf
push
sahf
jecxz
paddsw
and
pop
cmpsb
lret
rorb
shld
lcall
inc
adc
orl
aam
sar
xorl
rorb
iret
aam
js
aam
into
mov
insb
sub
enter
dec
mov
inc
loope
in
fwait
repz
jo
stos
mov
mov
sbb
xchg
test
movsb
mov
ja
out
jecxz
inc
leave
ss
scas
jne
orl
pop
cli
cmp
addl
jecxz
cs
mov
fsub
xlat
jno
cmc
sub
cmp
dec
pushf
cmpsb
ljmp
loopne
adc
mov
sub
roll
stos
jne
subl
pop
out
mov
sub
adc
pusha
cmp
xchg
scas
mov
pop
and
push
sub
repz
sub
in
addb
cmp
sbb
xchg
stos
xor
out
sub
add
dec
sahf
mov
loopne
sahf
sbb
shll
iret
pop
outsl
divb
scas
sbb
loop
test
stos
insb
add
sbb
pop
inc
jb
sub
daa
mov
jmp
enter
pop
and
pop
xor
add
je
pop
mov
and
jecxz
and
pusha
dec
mov
xchg
loope
stos
shl
mov
mov
inc
jb
mov
or
ss
adc
sub
inc
fs
outsb
cmpsl
out
mov
fisubrs
add
sub
in
or
jns
in
clc
and
repnz
dec
sbb
cmpsb
cmc
cmp
mov
ja
inc
sbb
pop
add
xchg
and
out
or
clc
push
adc
mov
adc
outsl
dec
in
fstpt
leave
test
imul
mov
incb
aam
adc
sbb
or
mov
jae
fldenv
and
push
out
popf
mov
shlb
mov
in
push
push
inc
add
mov
daa
rolb
orl
test
in
sub
fstpt
jns
add
mov
mov
cmp
or
mov
jmp
jns
aaa
repz
nop
mov
hlt
sbbb
adc
mov
dec
test
push
mov
adc
cmp
xor
movsl
mov
sar
insb
test
mov
xor
iret
xor
mov
inc
and
cmp
cmp
cmp
mov
pop
cmpsb
or
out
arpl
sbb
cmp
xchg
mov
mov
stos
sbb
test
shlb
adc
hlt
inc
pusha
dec
in
out
adc
mov
pop
cmpsb
pop
std
add
push
push
jb
cltd
pop
mov
outsb
insl
rclb
adc
or
and
pop
cmp
scas
gs
jmp
mov
mov
cmp
inc
xchg
jae
xchg
xor
xor
mov
push
mov
das
scas
or
in
and
inc
lahf
push
sub
lods
sti
aam
outsb
xchg
addr16
jno
inc
push
iret
stos
fwait
push
iret
pop
bound
call
loope
mov
scas
add
ljmp
xchg
fwait
orl
mov
pop
fmul
mov
cwtl
push
cli
repz
jb
sbb
sti
in
dec
dec
test
add
adcl
mov
testb
inc
loopne
dec
scas
out
out
add
ret
les
lahf
movsl
or
shrl
into
xchg
cli
inc
add
arpl
jecxz
fcmovb
mov
cli
and
sbb
push
stos
daa
repnz
or
popf
loope
add
and
xchg
sbb
sahf
pushl
or
add
mov
sti
clc
cli
fwait
insl
stos
mov
sub
ror
push
mov
ds
fldenv
add
adc
inc
lea
psubusw
mov
imul
or
jg
sub
sub
xor
subl
xchg
lods
out
sti
sbb
cs
popa
or
mov
pop
pop
into
movb
inc
push
dec
aas
std
fstpl
int3
stos
xor
add
das
ret
jae
xchg
adc
xchg
repnz
lods
mov
test
adc
popa
movaps
stos
sbb
or
repz
jns
icebp
xchg
mov
dec
mov
ret
insl
inc
mov
cmp
pop
cmpsb
test
lahf
adc
gs
rolb
pop
enter
fidivs
pop
mov
sub
or
clc
mov
xchg
insl
jae
xchg
icebp
movsb
jmp
mov
pop
loope
mov
aam
ss
mov
xchg
sbb
mov
cld
adc
int
xor
pop
xchg
or
push
addr16
cmp
fsubrl
and
and
les
iret
and
or
or
ficoml
imul
sti
or
push
inc
push
iret
mov
mov
fs
jle
nop
lock
lock
pusha
mov
out
xchg
inc
cmc
into
out
pop
jne
pop
cmp
sti
push
jb
pop
inc
fimull
mov
cmc
mov
jbe
adc
fwait
sub
cmp
push
add
sahf
mov
aad
jg
fisubs
mov
jmp
mov
ljmp
lret
ds
mov
test
in
or
mov
cmpsl
mov
pop
mov
orb
aas
mulb
push
push
lock
int3
ljmp
dec
subb
in
adc
fmul
jb
pushf
mov
out
mov
sub
pop
fdiv
lret
inc
icebp
imul
xchg
arpl
stc
mov
pminub
jb
xchg
dec
aaa
sub
je
inc
and
pop
inc
or
inc
test
cmp
push
lock
lret
cmp
lock
pop
scas
mov
imul
inc
loope
cltd
leave
testl
pop
cld
xor
fimull
data16
loop
mulb
dec
scas
mov
inc
sub
and
test
xchg
cmp
xor
repz
test
je
jmp
leave
or
ret
mov
sbb
fbld
xchg
xor
or
sbb
adc
pop
popf
xor
pop
pop
cltd
fldt
cmpsl
push
mov
leave
hlt
xchg
ds
jg
jle
mov
cmpsb
push
xchg
decl
xchg
mov
int3
and
cmpsl
nop
mov
lea
add
push
cs
lods
daa
shrl
mov
xor
imul
mov
aam
sbb
js
pop
leave
cwtl
ja
sbb
fwait
and
ror
cwtl
popf
clc
arpl
cmp
dec
cmpsb
insl
mov
xor
sbb
jae
sti
nop
cmp
cmp
jno
loopne
mov
ljmp
gs
fildll
jecxz
ja
dec
mov
adc
ljmp
mov
dec
and
gs
push
test
call
cltd
pop
leave
sub
and
mov
adc
xor
mov
add
cwtl
loop
sbb
cmp
mov
testl
inc
cmc
jnp
sbb
adc
fists
cs
add
jmp
out
into
outsb
dec
jno
xchg
shlb
lahf
jbe
adc
dec
movsl
push
les
mov
mov
vandps
rorl
dec
imul
mov
sbb
add
in
xor
pop
jns
fsubs
mov
xchg
adc
add
push
xlat
sbb
xchg
icebp
in
rcll
pop
mov
xchg
inc
push
roll
mov
arpl
daa
cmp
pop
pop
lret
icebp
ret
pop
pushw
lock
sarl
in
test
out
loope
and
aaa
adc
test
insl
out
roll
inc
test
inc
insb
push
add
loop
sub
cmp
inc
jle
xchg
mov
mov
and
fnstsw
jge
fcoms
xor
inc
in
xor
push
jp
adc
dec
pop
fistl
jmp
push
roll
push
ljmp
das
dec
lret
pop
sub
ljmp
fstps
push
push
push
testb
sub
or
pop
push
lods
iret
pop
scas
cmpsl
pop
cmp
adcl
sbb
fdivrs
rorb
pop
pop
pop
ret
adc
jmp
not
in
sbbb
ja
jg
sahf
or
xor
int3
jecxz
cld
cmpsb
in
jns
mov
cmp
shrl
add
jns
jae
or
loop
movsl
rolb
push
clc
stc
jl
lock
mov
test
mov
and
cmp
cmc
dec
mov
inc
lds
test
or
rorl
jae
sbb
loop
cmc
stos
sbb
inc
dec
cli
sbb
xor
cmpsb
jp
jb
sub
push
in
cmp
pop
js
aam
push
push
fs
pushf
adc
in
hlt
mov
in
pop
fimuls
sub
movsl
js
rol
hlt
mov
fcmovnbe
aaa
fwait
sbb
call
jbe
pusha
mov
add
xor
aad
cmc
adc
cltd
hlt
xchg
fisubrs
xchg
call
jns
insl
iret
clc
cli
out
flds
add
jge
in
xor
mov
xor
ja
pop
andl
jbe
loop
lret
cmpsb
inc
test
out
add
jno
jp
addr16
rorl
lea
dec
movsb
int3
mov
mov
cmp
sub
je
mov
sbb
mov
sub
push
pop
adc
clc
fistps
sahf
rorl
out
mov
dec
add
les
cmpsl
icebp
shl
sub
sar
leave
push
ja
cmc
mov
pop
jae
sub
bound
outsl
mov
add
xchg
fldl
adc
push
lods
adc
test
lods
push
negb
std
sbb
shr
mov
or
or
pop
scas
cltd
aas
or
pop
mov
and
fcoml
popf
ds
xchg
push
cwtl
lahf
push
inc
cmp
movsl
clc
dec
and
std
fwait
dec
lahf
fstpt
rclb
dec
cmp
mov
xor
jae
mull
mov
es
mov
shll
jb
lea
lret
out
push
repz
inc
jle
hlt
mov
fwait
sub
pop
pusha
and
fimuls
fwait
add
ds
add
pop
cs
xlat
mov
out
aam
in
fiadds
and
mov
add
mov
arpl
lahf
loope
push
ds
fsts
adc
inc
xchg
lods
jmp
adc
cltd
pop
scas
and
jecxz
fnstenv
inc
imul
push
pop
pop
push
out
out
dec
mov
dec
pop
mov
inc
push
or
and
jl
ret
and
jbe
faddl
in
add
xchg
sub
cmp
xchg
and
rcrb
add
fisubs
jp
mov
imul
push
fcomp
xchg
insb
or
sub
dec
int3
or
in
cmp
test
fidivrs
iret
add
pop
push
data16
or
mov
push
cmpsb
sbb
mov
out
ja
xchg
push
cs
cmpsl
push
mov
jno
imul
stc
sti
leave
enter
adc
lret
out
push
push
adc
or
dec
lea
out
out
mov
jg
icebp
xor
icebp
enter
sbb
xchg
or
push
cmp
ja
cmp
cs
and
lea
in
scas
and
cltd
mov
jmp
xchg
push
cld
jg,pn
mov
xchg
mov
shll
rcll
cmpsb
cli
push
test
or
outsb
lcall
pop
or
rcrb
in
ja
faddp
xchg
cmp
ds
xchg
nop
add
add
mov
jl
pop
in
fwait
leave
addl
enter
push
pushl
cmp
and
lcall
pusha
mov
add
lods
fst
cmp
mov
xchg
cs
jecxz
push
jmp
or
imul
mov
cwtl
es
dec
cmp
pusha
xchg
xchg
call
pop
sub
cmp
mov
push
sbb
daa
mov
int
cli
inc
and
sub
mov
sarb
jle
adc
sahf
call
pop
je
inc
out
jmp
xchg
or
shrb
xchg
xchg
inc
sbb
jb
in
jg
jae
es
fmull
hlt
lahf
in
stos
fadd
sar
push
or
lods
adc
fisttps
sbb
xor
bound
notl
push
inc
mov
pop
ret
jl
sbb
and
lret
or
popa
mov
aad
xchg
popa
mov
dec
iret
out
pop
into
push
cmc
mov
mov
stc
cs
mov
in
ja
adc
or
mov
mov
jo
sub
lret
std
loopne
outsl
lea
fisubrl
cli
loope
xor
ret
dec
pop
adc
ja
jns
into
nop
adc
mov
inc
in
pop
out
repnz
jnp
ja
je
stos
inc
mov
loopne
lea
call
inc
js
ja
jb
lret
das
aas
shr
pop
pop
fisttps
and
sahf
es
mov
sub
xor
insl
ret
iret
cmp
gs
dec
dec
popa
fs
mov
test
arpl
movsl
inc
icebp
pop
push
adcb
pop
and
mov
fmulp
and
shll
cwtl
les
mov
pop
dec
mov
loop
loopne
sbb
test
mov
cmpsb
add
shlb
fildl
pop
movsw
jl
inc
pop
dec
out
sti
jae
in
xor
jg
cmp
sbb
outsl
int3
sar
mov
loop
dec
ss
lret
loope
mov
jmp
cmp
dec
data16
icebp
sahf
mov
dec
cmp
sub
cmpsl
xorb
ret
outsl
xor
xchg
cli
fucom
mov
lds
imul
push
loop
adc
pop
push
push
xor
xchg
jne
sbb
xor
outsl
pop
sbb
xchg
mov
inc
nop
add
jmp
out
push
frstor
loope
push
dec
or
aam
lods
movsl
mov
insb
ja
dec
sahf
dec
cmp
sub
mov
jg
nop
xor
js
lods
sbb
mov
ja
jne
sbb
xor
insb
mov
fs
daa
aaa
push
stc
rcr
test
iret
addl
sbbb
test
inc
imul
icebp
fdivl
jg
dec
adcl
jg
testl
or
out
xlat
movsl
cmp
mov
dec
jp
cs
inc
sarl
adc
dec
ja
dec
push
popf
loope
xor
imul
psrld
adc
push
xchg
jmp
ss
cmp
mov
insl
xchg
xor
push
inc
imull
sbb
mov
xchg
sub
lahf
aam
cmp
push
scas
fimuls
in
scas
hlt
shrl
fists
mov
in
dec
or
add
std
mov
loopne,pt
movsl
jge
mov
int
jns,pn
filds
add
xchg
test
push
sbb
dec
fdivrs
shl
sbb
jg
and
xchg
push
or
cmp
add
pop
sbb
xchg
test
sti
std
clc
dec
stos
imul
push
adc
xlat
out
lret
out
pop
push
sarb
rorb
out
pop
mov
repnz
adc
lock
inc
in
push
cmp
nop
xlat
fwait
loope
dec
loop
loop
add
xchg
adc
call
std
lods
add
push
xor
test
ret
les
adc
push
scas
pop
lcall
push
jg
test
sub
sub
xchg
mov
add
stc
xor
sub
jae
pop
push
ljmp
and
mov
sub
cld
fisubs
push
dec
inc
xor
fistpll
lods
mov
inc
std
aam
pop
sub
push
mov
jge
fs
test
lcall
mov
mov
lods
adcl
inc
mov
in
mov
xchg
dec
jle
mov
fcoms
and
daa
xor
mov
mov
adc
addr16
mov
xchg
add
xchg
mov
aaa
js
sbb
pop
add
test
sub
push
rorl
xchg
push
test
scas
daa
test
xchg
adcb
aad
cmpsl
push
add
jb
dec
mov
in
sub
sbb
cs
xchg
loop
mov
test
or
lret
jp
dec
sahf
jmp
or
sbb
out
pop
cmp
mov
cld
js
aas
imul
xchg
ret
movsl
xchg
adc
gs
outsl
rorl
daa
shr
xor
inc
xor
cmp
aam
mov
test
je
fstpt
mov
je
cmc
stos
mov
subl
das
ret
push
xor
cmpb
cmp
sahf
sahf
mov
iret
xor
pop
mov
insb
dec
outsb
sbbl
mov
js
cmpsb
inc
adc
and
test
adc
ljmp
ficompl
aaa
repnz
pop
mov
outsb
shr
dec
add
fists
sbb
and
pushf
inc
jbe
loopne
xchg
cmpsb
data16
int
jne
lret
push
add
push
stc
or
fwait
or
mov
push
mov
in
imul
xchg
mov
mov
and
negb
add
jp
loopne
mov
cmp
sub
fcompl
lcall
pop
xchg
mov
out
jmp
pushf
dec
icebp
aaa
adc
sub
daa
je
inc
sub
inc
cmpsb
sub
in
aam
cmc
push
outsb
adc
mov
int3
push
imull
lret
cmpsl
test
jmp
int
sbb
imulb
inc
fdivrl
lock
cmp
jbe
mov
xor
shr
movsl
test
and
cld
and
not
int3
cmp
push
rcll
xor
mov
data16
outsl
and
filds
fimull
leave
sbb
jp
bound
add
sti
outsl
stos
mov
push
insl
and
mov
rclb
fldlg2
mov
cmp
packssdw
in
add
test
or
fisttpll
mov
mov
popf
ret
xchg
mov
call
cltd
dec
stos
add
or
cmp
lods
cmp
insl
xor
sbb
insb
dec
icebp
and
jbe
test
adc
aas
adc
mov
mov
rolb
dec
in
loop
movsb
loopne
pop
mov
xchg
in
cmpsl
cli
mov
xor
test
mov
in
ficompl
cli
mov
sbb
in
or
or
sub
sub
adc
sbb
mov
mov
push
mov
sarb
inc
mov
xor
inc
dec
insl
test
jns
dec
mov
iret
push
and
mov
insb
popa
push
jbe
ss
cmp
cs
inc
ret
mov
xor
loopne
xchg
insl
dec
cs
ret
shr
pop
sub
in
or
push
aaa
mov
rorb
out
jo
mov
in
lock
mov
test
inc
cmp
cld
jb,pt
in
jno
add
xchg
sti
fldcw
cwtl
faddp
sub
push
cmp
iretw
cmp
xor
movsl
jge
jl
xor
out
inc
adc
pop
mov
push
xchg
push
xchg
cmp
and
mov
push
push
fsqrt
xorb
xor
ds
jp
ja
jno
pop
push
mov
repnz
or
cmp
mov
loope
mov
in
sub
dec
sarl
dec
and
and
lds
sarb
xchg
scas
test
xchg
add
mov
pop
lods
pop
sub
add
das
mov
popa
out
imul
sahf
aad
int
pop
or
stos
mov
push
pusha
add
xor
fcomi
xlat
cmp
mov
or
jb
lret
adc
nop
into
pop
mov
cmc
add
nop
push
lods
cltd
fists
mov
arpl
sub
cmpsl
inc
mov
call
fneni(8087
sub
inc
push
mov
mov
push
bound
leave
cmp
aas
popf
iret
lret
ret
sar
in
test
enter
outsl
inc
push
adc
das
stos
icebp
call
xchg
outsb
inc
and
and
sbb
popf
pop
mov
bound
dec
pop
xor
xchg
push
dec
push
mov
lea
jmp
sti
ret
sub
and
out
jne
and
inc
xor
dec
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
push
xlat
cmp
sub
sbb
or
clc
pop
call
push
mov
mov
and
cmp
xor
out
pop
and
call
push
mov
mov
push
xlat
cmp
sub
cwtl
out
pop
pop
pop
inc
popf
fsubs
mov
mov
ja
inc
lods
push
popf
popa
lea
add
xor
loope
icebp
jge
insl
nop
pop
mov
mov
inc
lods
push
popf
popa
lea
add
adc
and
push
cmp
loopne
icebp
mov
mov
lods
push
popf
popa
lea
add
adc
and
xor
test
int
les
loop
leave
and
mov
xor
sub
cmp
sub
or
dec
jne
inc
es
rorl
cld
add
in
pushf
and
test
loop
repnz
xchg
insb
lret
shl
push
movsl
xchg
lcall
fists
xchg
repnz
out
push
sub
sub
jge
int3
lods
inc
divl
fiaddl
clc
adc
int
mov
test
jecxz
addr16
xchg
sub
mov
orl
movsb
mov
pop
jo
xor
jnp,pt
cwtl
push
jo
rclb
push
inc
sbb
pop
filds
jns
dec
pop
lcall
fst
loop
and
rcrl
int
jno
lods
push
popf
popa
lea
add
adc
and
xor
loope
icebp
jge
insl
xchg
pop
mov
fldcw
hlt
and
xor
inc
lahf
gs
mov
enter
cmpl
aam
sub
loope
std
inc
test
movsl
jbe
pop
pop
movsb
jl
pop
xchg
pop
xor
cmp
fadds
lods
add
add
or
and
xor
loope
icebp
jge
insl
xchg
pop
mov
lods
push
popf
popa
lea
add
adc
and
xor
loope
icebp
jge
insl
xchg
pop
mov
mov
push
mov
mov
push
dec
in
movsb
rorb
mov
adc
sbb
stos
or
push
dec
cli
push
mov
push
push
push
or
xor
popf
aas
stos
pop
test
adc
jno
imul
adc
pop
jb
jne
push
popf
push
mov
aad
add
inc
ffreep
pop
cld
adc
les
cmpsb
loopne
mov
sbb
fisubrs
jge
add
inc
sub
in
inc
cmp
xlat
sub
repz
xor
aad
and
test
enter
aas
xor
mov
pushf
mov
dec
je
sub
aam
daa
loopne
incl
shll
mov
dec
int
dec
or
loop
lret
jge
add
mov
cmpb
xor
or
add
sahf
pusha
adc
pop
sbb
sbbl
xor
mov
push
cmp
and
dec
jae
sbb
pop
jns
pop
mov
fimull
push
mov
aam
mov
cmp
inc
in
jle
stc
cltd
xor
mov
sbbb
out
lods
xchg
fwait
inc
cmpsl
cmc
lcall
push
jns
dec
icebp
ror
dec
and
movb
imul
psllq
push
push
adc
in
add
ja
pop
sub
and
or
ja
mov
lret
mov
sub
mov
inc
sub
jl
aam
test
call
mov
sub
test
mov
inc
frstor
xor
aam
out
jnp
mov
lret
cmc
fs
mov
por
xor
mov
shll
mov
mov
mov
ds
adc
gs
in
sti
ds
jecxz
xchg
add
notl
unpcklps
inc
cmp
cld
sub
xor
aas
lret
cltd
fbld
call
ds
cltd
into
and
sub
loop
stos
dec
pushf
ret
jno
fisttpll
pop
popf
mov
jmp
std
ja
push
push
xchg
fstpt
push
jnp
data16
cmp
mov
xchg
push
popf
jge
out
inc
lea
or
jbe
add
movsb
mov
lds
imul
pop
imul
ret
jmp
xchg
lea
inc
pop
pop
pop
rolb
mov
push
mov
mov
push
mov
fdivrl
jns
mov
push
fldl
cmpsl
and
mov
movsl
or
pop
adc
stos
ljmp
sub
movsl
icebp
sbb
std
mov
pushf
test
push
loop
mov
pop
fmul
xor
sub
clc
add
jae
add
jp
pop
mov
bound
inc
mov
xor
stc
adc
inc
dec
sbb
divw
rclb
pusha
or
dec
aaa
popa
jle
mov
lcall
dec
lahf
mov
js
sbb
jne
add
in
scas
cmp
sbb
add
or
pop
cmp
setge
stos
mov
add
jb
mov
das
push
outsb
sti
jecxz
mov
mov
mulb
andl
adc
dec
mov
int3
xor
pop
xchg
in
icebp
xchg
dec
loope
hlt
xlat
jg
gs
mov
outsl
pop
cmp
ja
cmp
and
outsl
sbb
shl
pushf
dec
icebp
jb
clc
xor
call
adc
mov
mov
push
inc
pop
mov
xor
mov
mov
xchg
sbb
push
out
divl
mov
hlt
and
jg
in
xor
mov
js
sub
cmp
das
test
inc
aaa
xchg
add
movsb
cmp
jnp
addr16
dec
aad
iret
repz
jnp
and
add
sub
jg
ljmp
aam
in
lahf
pop
arpl
cs
rorb
mov
mov
cmp
pushf
mov
jmp
fists
inc
sub
lret
jge
leave
sbb
xchg
das
lock
dec
dec
mov
imul
pop
es
push
mov
lods
or
push
add
inc
popa
out
inc
vphadddq
test
sbb
sbb
cltd
push
xchg
out
xchg
jecxz
jg
repnz
jnp
faddl
and
jns
hlt
sub
daa
fnsave
cmp
jbe,pt
outsb
or
xchg
fcmovnbe
adc
push
in
or
inc
sub
nop
pop
gs
sbb
dec
xor
push
inc
push
mov
xor
jbe
pushf
adc
in
push
lahf
mov
and
nop
adcl
mov
push
addr16
or
aad
aam
int
xor
sti
mov
fiaddl
cltd
ljmp
mov
add
imul
cmp
addl
ss
repz
repz
adc
loopne
test
sub
add
roll
jmp
push
mov
test
xor
or
roll
lods
or
add
fnsave
push
std
cltd
jge
into
and
mov
xchg
cli
xor
fbstp
xor
dec
mov
jne
sbb
scas
scas
mov
push
adc
sub
adc
jne
add
push
insl
dec
cld
xor
pop
sahf
shlb
out
enter
mov
loop
cmp
jnp
cmpsl
pop
or
rcrb
enter
pusha
mov
leave
enter
mov
jmp
iret
and
jb
push
shrl
call
push
sub
stos
xchg
xor
pop
pop
lods
add
aam
jbe
pop
mov
mov
fcomps
loop
push
fucom
int
mov
or
ds
push
jge
mov
xor
mov
repz
and
fisubrs
scas
and
ds
outsl
adc
js
jo
push
and
mov
cmp
nop
sub
mov
stos
sub
dec
and
je
and
jae
lret
pop
push
ss
and
or
jmp
pop
aad
pushf
into
sbb
movsl
inc
bound
jg
and
mov
movsl
or
or
clc
dec
push
int
jno
xor
mov
mov
test
ret
jle
add
mov
jl
xor
sbb
or
cmpsl
rcrb
insb
xor
and
xorb
leave
jge
test
repz
daa
std
cwtl
lcall
pop
mov
push
mov
decb
bound
xor
add
js
fiadds
je
cs
xlat
mov
and
cmc
mov
aas
in
fstpt
js
cmp
push
mov
pop
pop
mov
adc
lock
stos
xor
cmpsb
dec
jne
stos
xchg
out
or
push
adc
mov
inc
loopne
jecxz
inc
mov
inc
cmc
inc
sbb
xchg
scas
lods
pop
in
sbb
mov
movsl
ljmp
es
das
sbb
scas
andb
dec
in
cli
xor
sub
sahf
clc
cmc
xor
subb
pop
xchg
hlt
xor
push
cltd
es
xchg
xchg
insl
cli
sarb
rclb
pop
sar
push
pop
loope,pt
call
mov
xchg
jmp
mov
dec
xor
enter
and
jge
das
ret
jo
push
int
scas
pop
daa
out
ret
popf
cwtl
sbb
lds
add
and
xchg
stc
xchg
jmp
push
jns
mov
adc
cmpl
mov
pop
scas
pusha
mov
pop
movsl
cli
xlat
ljmp
push
pop
in
xchg
lods
push
jns
inc
es
xchg
adc
imul
xchg
pusha
out
pop
shll
sub
test
xor
push
lret
call
scas
push
inc
aad
es
mov
dec
push
adc
jae
bound
inc
out
subb
and
cmp
addl
lahf
add
jge
movsb
pop
add
pusha
lds
cmp
pushf
add
fistpl
add
jge
sub
adc
dec
inc
jmp
sti
cmpb
je
scas
and
not
cli
lods
xacquire
insl
or
fistpl
sub
je
cli
jb
push
add
jp
lods
mov
lcall
pop
push
orb
addr16
sub
jg
lret
pop
fdivr
jle
loop
popf
adc
enter
sbb
jl
rolb
fsub
pop
adc
inc
into
loopne
inc
movsl
jge
and
leave
jo
nop
inc
push
shrl
jecxz
sbb
or
push
mov
int3
mov
in
or
roll
jno
jae
mov
aaa
jnp
mov
movsl
fst
mov
pop
add
repz
push
pop
xchg
push
int3
cmp
jo
mov
jmp
aas
cmp
pusha
inc
sti
adc
std
negl
add
loopne
les
sbb
je
pop
push
xor
inc
sub
shlb
push
mov
loope
je,pt
maxps
and
xchg
xchg
xchg
push
and
adc
shll
adc
mov
add
jns
jno
or
or
jne
repnz
cs
dec
mul
dec
lahf
repz
push
add
sar
fnsave
push
imul
loopne
dec
pop
ss
jb
imulb
cltd
mov
sub
mov
fucompp
cli
push
scas
cmpsl
mov
jl
sahf
push
rep
xchg
xchg
inc
orb
jp
addr16
mov
mov
push
or
push
out
cmp
sbb
add
scas
test
in
ds
mov
stos
pop
xor
jle
ds
cmp
or
out
stc
arpl
arpl
pop
ja
sbb
test
in
ds
or
mov
scas
jl
dec
jl
pop
inc
pushw
test
or
cmpsl
push
faddl
mov
ja
mov
scas
popa
mov
push
jg
inc
xchg
les
sarl
push
mov
jp
in
loope
cmp
cmp
aad
adcl
stos
and
jg
cmp
sbb
pop
lcall
pop
ss
arpl
dec
dec
mov
out
jmp
add
dec
or
mov
and
push
and
imul
js
pminub
fdivs
add
sub
push
inc
popa
stc
daa
push
lods
push
xlat
out
add
push
mov
lcall
es
pop
cmp
push
mov
mov
xchg
cs
movsb
movsb
adc
xchg
dec
divb
insb
ja
dec
cwtl
push
push
jp
mov
outsb
popa
aam
mov
sarl
rorl
add
cmpsl
or
mov
mov
icebp
fdivr
loop,pn
imul
mov
mov
jae
lret
mov
clc
or
ds
cmp
loope
orb
xorb
mov
sub
mov
cld
jecxz
daa
or
xchg
dec
dec
jb
pop
nop
aaa
inc
add
in
mov
aas
out
mov
icebp
mov
repz
mov
fisubl
and
int3
std
mov
inc
mov
inc
cmp
popa
out
stc
inc
nop
hlt
pusha
mov
stc
call
into
cld
mov
mov
add
ja
dec
insl
add
sbb
add
add
lods
mov
movsl
xchg
pop
shl
scas
fnstenv
iret
jne
sub
fwait
or
je
push
leave
mov
ja
cmpsb
shlb
push
in
sbb
inc
lahf
xor
xor
cltd
add
jmp
jmp
mov
orl
xor
fbstp
fildl
jp
or
test
and
popa
es
lcall
aaa
stc
test
pushf
sbb
in
ror
stc
lcall
enter
outsb
movsl
fstps
xchg
mov
or
sbb
rclb
push
pop
jbe
dec
mov
adc
dec
mov
aam
js
jge
cld
inc
xlat
mov
in
jne
push
les
fwait
lods
fcoml
out
dec
jmp
fwait
enter
ret
add
test
xchg
rcrl
xchg
mov
jo
outsl
sub
push
out
mov
cltd
mov
sbb
ja
imul
or
push
pop
inc
sti
adc
push
repz
and
aas
push
mov
pushf
movsb
pusha
enter
daa
mov
push
ret
bound
jle
int3
jo
sub
xchg
nop
jmp
lock
dec
ljmp
add
sub
cmpsl
test
dec
mov
inc
or
packsswb
ds
out
ds
jbe
dec
xor
sub
and
lock
cld
inc
jae
adc
in
stos
jp
insl
sarb
repz
daa
sbb
cmp
call
cmpsl
or
movl
imul
sbb
mov
iret
je
ficomps
mov
inc
sub
inc
and
lods
inc
mov
loop
arpl
xchg
adc
mov
or
test
int3
add
bswap
push
stc
pop
pop
adc
pop
inc
lret
daa
into
pop
enter
adc
int3
xorl
xor
sub
mulb
test
addl
and
lods
insb
sahf
scas
rcrl
js
xor
jle
mov
cmpl
xchg
cld
and
imul
jmp
andb
xchg
fisubrl
dec
jge
inc
and
mov
mov
inc
leave
cmpb
scas
ljmp
fdivrl
lret
mov
jmp
adc
insl
mov
mov
int
pop
fdivr
ret
mov
in
out
lock
dec
int3
enter
mov
or
mov
andl
subb
sti
xor
adc
stos
sub
add
or
inc
mov
fists
shlb
push
xchg
cmp
out
or
push
mov
adc
mov
sub
push
mov
mov
and
lds
fstl
loopne
cmpsb
daa
inc
shrl
dec
in
fisubs
sub
sbb
dec
xor
or
lea
xor
mov
enter
fs
mov
fdivs
out
fstpl
lret
and
push
fwait
iret
mov
in
inc
out
enter
orl
xchg
sbb
repnz
lret
cmc
dec
adc
mov
leave
inc
fimuls
push
and
movsl
push
lock
push
fdiv
popf
mov
js
push
jmp
jns
jbe
push
cmp
lahf
inc
adc
je
mov
or
and
adc
push
stc
sbb
and
test
add
xor
or
pop
fimull
adc
inc
test
push
fstpl
push
xor
mov
sub
testl
xor
dec
fistpl
test
scas
pop
push
sbb
xor
mov
addr16
sarb
hlt
pop
sar
or
cwtl
fidivrl
sbb
ljmp
lcall
test
mov
xorl
inc
test
or
clc
test
xchg
lcall
mov
push
mov
test
mov
movsb
sub
cwtl
adc
call
xchg
add
mov
ss
jle
xchg
pop
pop
push
shl
xchg
mov
sbb
push
jne
fsubrl
jbe
jg
mov
mov
push
cwtl
and
push
mov
inc
and
scas
ds
nop
test
jb
xor
mov
out
xchg
mov
sbbl
push
cmp
xor
push
fmull
dec
inc
xlat
jp
int3
pop
pop
shlb
jnp
or
jl
movsl
mov
adc
and
push
das
xchg
inc
orl
out
mov
loope
rolb
or
add
xor
je
sub
mov
inc
xlat
xor
daa
xchg
xor
push
jno
add
cmp
outsl
aam
jb
repnz
fs
mov
mov
xchg
ljmp
imul
and
ficomps
add
inc
repz
sbb
cmp
aam
mov
add
jmp
cmp
jle
mul
ret
divl
pop
sbb
xor
pop
imul
pop
dec
sbb
int3
or
and
jno
sbb
add
call
jns
popa
jae
test
sbb
jp
movsl
adc
mov
inc
mov
and
dec
mov
iret
jo
roll
mov
aam
roll
mov
add
das
insl
cmp
sub
and
scas
stos
imul
js
dec
sub
cmpb
mov
fstpl
mov
pop
sub
ficomps
xor
sbb
or
or
sub
push
inc
xchg
fisubl
jmp
js
cmp
sbb
push
and
push
push
fisttpll
push
xor
aaa
int3
jns
mov
jae
imul
lret
add
xor
ret
repz
sti
jl
shlb
les
mov
addr16
test
and
into
popa
std
dec
cmp
addr16
popf
test
cmpsl
icebp
sub
sahf
sub
add
icebp
mov
je
xor
mov
int3
mov
icebp
xor
adc
stos
mov
xchg
loopne
cmp
pop
arpl
mov
pushf
mov
mov
daa
cmpsl
adcb
sbb
roll
xchg
adc
mov
mov
pop
inc
scas
lahf
loopne
adc
cmpsb
cs
out
pusha
xor
iret
aad
and
icebp
and
push
je
mov
addr16
orl
sbb
cmp
in
xchg
and
cli
inc
movsl
cs
nop
nop
fdivr
leave
push
sahf
in
test
fdivs
sbb
test
leave
mov
sbb
adc
int
imul
cmp
push
in
test
fiaddl
pop
pop
mov
flds
cld
and
stc
jge
pop
setne
test
adc
inc
xor
pop
xchg
xchg
ljmp
pop
js
dec
pop
loopne
cmp
jbe
movl
fidivrl
data16
mov
adc
pop
push
imul
pop
iret
or
pusha
pop
mov
out
cwtl
cmpsl
jns
dec
cmp
sub
push
push
sarl
cmp
bound
mov
mov
iret
jns
mov
rclb
jmp
mov
sbb
lcall
add
sbb
push
jecxz
sub
push
lea
std
popa
jmp
xlat
xchg
sbb
loopne
pop
push
movb
mov
mov
addb
jne
mov
push
sub
or
add
push
test
lods
adc
outsb
iret
imul
or
cs
mov
pop
push
aas
sub
ret
pop
xchg
adc
adc
test
scas
jb
stc
push
popf
out
inc
pop
gs
mov
int3
test
in
cmp
lds
ja
mov
jbe
mov
jp
stc
int
out
imul
push
or
add
stos
mov
test
sahf
cwtl
hlt
into
sub
data16
cmp
pop
fnstcw
sbb
fdivrl
mov
inc
arpl
and
ret
shr
jbe
pop
out
andl
jbe
int3
sub
jne
xchg
and
jp
push
inc
mov
lahf
sti
dec
mov
aam
stc
mov
mov
mov
fucomi
sbb
loope
in
or
jae
into
stos
js
mov
decl
mov
sbb
loope
cmpsb
iret
inc
fcmovne
stc
into
fs
std
push
add
ljmp
cmpsb
iret
push
jecxz
push
sub
dec
sbb
ds
loopne
out
rorb
xchg
jnp
and
lret
out
subl
xorb
xchg
mov
push
int3
sub
pop
test
xchg
dec
test
fsubs
or
imul
jbe
in
fcoms
mov
inc
or
push
add
subb
add
enter
xlat
xor
sub
imul
xchg
sbb
scas
jp
push
mov
imulb
sub
in
icebp
inc
push
sti
sbb
push
loop
mov
test
mov
lahf
push
mov
mov
jmp
pop
daa
inc
xor
xchg
enter
add
mov
dec
mov
mov
js
add
fbstp
pushf
adc
cltd
mov
cli
mov
rcrb
and
dec
hlt
mov
pop
mov
and
jo
sbb
movq
icebp
push
adc
push
or
xchg
clc
jo
mov
cmpsl
lret
das
test
mov
out
inc
sbb
or
pop
cmp
cmpsb
or
leave
mov
mov
imul
in
mov
out
rorl
loopne
aad
out
mov
adcl
rorl
inc
jecxz
loope
fincstp
jo
iret
mov
or
mov
inc
and
popa
lea
add
adc
and
xor
loope
icebp
jge
insl
xchg
pop
mov
lods
push
popf
popa
lea
add
adc
and
xor
loope
icebp
jge
insl
xchg
pop
mov
sub
jno
add
adc
and
cmp
loope
icebp
jge
insl
xchg
pop
mov
lods
push
popf
popa
lea
add
adc
and
icebp
cmp
loope
xchg
pop
cmp
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
nop
dec
andb
xlat
cmpsl
mov
add
xor
and
jbe
data16
pusha
inc
nop
mov
cmpsb
mov
mov
out
loopne
adc
xor
and
push
adc
pusha
inc
nop
scas
andb
out
sar
into
loopne
adc
and
arpl
push
aaa
xor
xor
or
mov
iret
mov
leave
or
sbb
pop
fdivrs
daa
push
fstpl
daa
sbb
dec
push
pop
jp
jge
sbb
or
mov
into
into
push
filds
pop
repz
xor
push
xor
outsl
dec
ljmp
mov
mov
out
stos
movsl
adcl
data16
inc
nop
out
cmpsb
jae
cmpsl
mov
aas
es
data16
neg
stc
add
jmp
ret
mov
data16
loopne
or
imul
mov
stos
push
add
shr
push
pusha
mov
mov
dec
pop
push
in
lock
push
aaa
inc
xor
add
mov
adc
mov
bound
mov
mov
xchg
out
iret
loopne
adc
add
xor
and
push
outsb
inc
jno
push
pusha
and
shl
cmpsb
notb
scas
mov
pop
gs
inc
inc
gs
push
adc
out
hlt
cmpsb
shl
loope
mov
mov
mov
movsl
stos
bound
inc
dec
bound
inc
cmpsl
add
or
cmp
and
testl
out
loopne
adc
add
xor
and
push
jbe
data16
pusha
inc
nop
mov
cmpsb
mov
mov
out
loopne
adc
add
xor
and
push
jbe
data16
pusha
inc
nop
mov
and
lret
shrl
push
mov
arpl
ljmp
xchg
or
sahf
sbb
xchg
mov
adc
xchg
push
in
addr16
add
cltd
and
sub
fcmovu
cs
adc
in
out
sbb
sar
mov
mov
fld
and
sub
xor
imul
mov
test
call
pop
aad
aam
or
adcb
cmc
pop
xor
push
repnz
cmpsb
lods
dec
mov
repnz
fsubs
adc
cmp
aad
and
ja
inc
sub
in
pop
xor
test
adc
call
and
and
cmp
out
cmpsb
push
add
test
stos
add
les
out
push
jp
das
cmp
test
or
scas
or
fnstcw
cmpb
mov
je
push
adc
movsl
sub
pop
sub
jmp
stos
cwtl
arpl
push
shll
outsl
aaa
es
mov
cmc
xor
aam
cmpb
loope
adcl
arpl
mov
leave
in
adc
movsl
sbb
push
sbb
in
orl
fbstp
and
push
fiaddl
retw
xor
pop
adc
push
push
fcoms
int3
xchg
rcrl
js
or
push
xor
cwtl
xchg
add
dec
mov
lret
pushf
add
inc
in
or
pop
rol
lret
out
icebp
adc
rcrl
clc
mov
push
xchg
mov
in
push
lods
add
jmp
xchg
dec
push
ss
cmp
adc
mov
adcb
popa
pusha
stc
sub
sbb
jb,pt
jle
cmp
and
das
in
out
sub
push
insb
inc
rcrb
lods
rorb
insl
push
mov
pusha
pop
lock
push
daa
jl
fbstp
cltd
lret
xor
lcall
cmp
sti
sbb
ss
mov
ss
das
and
arpl
in
or
jns
push
testl
scas
stos
jo
sbb
ljmp
mov
xchg
scas
pushf
cmpsl
lods
mov
sbb
rorl
dec
mov
push
lret
aam
pop
imul
data16
int
or
data16
daa
add
movl
push
push
loop
dec
xchg
aas
lret
push
ja
mov
cwtl
or
cmp
inc
sbb
leave
add
sub
popa
sub
sti
insl
loope
fwait
and
cwtl
test
fcom
sahf
bnd
fs
daa
rorl
push
sarb
fildl
repnz
aam
repz
ja
jecxz
insb
frstor
jl
cmpsl
mov
or
jo
push
fnstcw
add
jp
clc
jp
mov
cld
jge
or
loop
ss
sbb
add
loopne
repnz
sbb
inc
ds
pop
rcr
aaa
mov
xchg
je
jl
push
repz
fisubrs
or
and
sarl
pop
repnz
or
pop
nop
das
cmpsl
xchg
mov
xchg
gs
and
pop
jl
pop
test
inc
cmp
dec
sub
es
movsb
jo
push
mov
in
xor
jo
loope
sub
cmp
lea
int3
cmc
outsb
xchg
jae
dec
or
out
and
in
jecxz
pop
ljmp
mov
push
jae
push
pop
jmp
addr16
sub
aad
insl
cwtl
out
es
mov
in
sti
or
mov
pushf
loope
dec
cs
xchg
cli
insl
insb
dec
or
mov
xchg
mov
std
xor
jbe
xor
addb
jge
and
xchg
mov
jg
shrl
test
mov
fs
dec
sub
mov
pop
cli
push
mov
xchg
pop
xlat
hlt
fs
add
xor
enter
out
pop
in
popf
sbb
mov
notb
pop
jecxz
mov
jg
imul
fldt
mov
or
into
cli
jl
jmp
cld
xor
inc
adc
and
popa
or
into
lock
pop
scas
insb
xor
popf
aaa
pop
jp
push
mov
dec
lods
and
ss
sbb
jecxz
xchg
xorl
test
cmp
leave
jp
jo
cwtl
lods
sbb
sub
incb
pusha
cmp
xor
sahf
jecxz
popf
pavgb
mov
pop
repz
pusha
js
fcompl
aaa
test
ret
outsl
popa
loope
test
sub
mov
adc
popf
mov
in
das
fmul
insb
mov
sahf
sub
lret
sbb
lods
test
mov
mov
fwait
mov
sub
fbld
sub
mov
dec
push
pop
fwait
sub
add
orb
dec
cli
insl
xchg
iret
test
out
dec
inc
in
inc
push
rclb
mov
lods
sbb
and
stos
jl
ljmp
and
sub
mov
in
dec
ss
ret
pop
fldt
fisubrs
pop
sbb
xor
lcall
cmp
push
adc
or
or
jp
jne
movsl
sub
push
jg
pushf
sub
dec
dec
negb
pop
add
and
push
inc
dec
sbb
sbb
sbb
add
enter
aaa
or
mov
aaa
mov
arpl
cmpsb
mov
push
imul
lods
xchg
push
jl
mov
out
cmp
lret
xor
dec
push
mov
jle
or
in
outsb
add
mov
dec
dec
jp
rcr
sbb
imul
jo
out
push
inc
out
mov
fcomi
icebp
mov
idivl
leave
sbb
mov
mov
inc
mov
jge
icebp
insl
xor
int3
sub
pop
jns
fdivp
hlt
xor
push
es
sahf
jb
mov
lcall
and
push
xchg
in
or
xchg
mov
dec
jg
sbb
shlb
les
and
lret
arpl
lret
fimull
mov
repz
mov
jbe
sub
sti
js
leave
pop
roll
iret
push
mov
jne
mov
pushf
out
lea
dec
sub
jp
dec
push
repnz
sub
xchg
jnp
cmp
inc
and
jnp
aad
pop
imul
mov
aam
lods
add
jmp
push
fdivrs
cli
rorl
aad
fldl
jns
mov
pop
xchg
xchg
repz
mov
or
inc
or
mov
pop
lret
test
ret
pop
sub
pop
js
push
cmpb
cmp
movsl
or
lcall
les
jecxz
push
jae
sbb
stos
inc
sub
cmp
xor
test
sub
push
push
mov
int
mov
inc
cltd
loopne
or
dec
add
leave
push
ja
jecxz
and
cmp
jg
std
retw
out
cmpl
daa
xorl
mov
out
sbb
mov
mov
dec
lret
adc
mov
iret
loopne
mov
aas
lcall
cli
sahf
and
push
and
mov
mov
pop
mov
push
add
nop
pop
call
mov
xor
cwtl
add
divb
xor
out
sbbl
push
lret
or
push
jae
rep
jbe
push
push
dec
push
xchg
ss
sbb
cmpsb
xor
scas
mov
enter
fistps
lea
jno
rcrb
pop
shl
push
mov
sbb
das
or
inc
adc
pop
inc
ja
push
adc
cwtl
repz
iret
outsb
pop
pop
xchg
cmc
dec
mov
ret
lahf
dec
or
ret
jbe
lods
mov
lods
xor
dec
push
or
out
movhps
mov
clc
and
jge
push
out
mov
push
push
lret
pop
cmc
les
and
jg
mov
and
cmp
ljmp
xchg
cld
ret
addl
pop
mov
dec
test
movsb
outsb
and
inc
mov
push
mov
mov
mov
or
or
dec
xchg
inc
adc
out
mov
sahf
fldt
rolb
mov
xor
push
pushf
sahf
mov
sbb
shl
dec
xchg
ja
repnz
sahf
outsl
into
dec
in
xchg
jp
pop
mov
pop
jecxz
xor
std
dec
lahf
xchg
daa
inc
lret
cmp
mov
sarl
dec
loope
xor
and
adc
in
add
pop
sbb
les
pusha
mov
imul
mov
or
or
out
aad
dec
add
pop
xor
sbb
xchg
mov
les
into
idivb
outsb
add
lea
inc
pop
mov
inc
and
pop
aad
or
mov
lods
data16
xchg
cmc
aam
enter
imul
dec
and
fisttps
lcall
jg
xchg
xchg
mov
xchg
repnz
add
mov
jae
data16
pop
gs
imul
outsb
add
push
cwtl
mov
rorl
imul
xchg
jns
aaa
pop
mov
pop
lock
icebp
or
imulb
rcrl
ss
stos
cvtpi2ps
inc
adc
inc
clc
popf
or
in
pop
out
repz
pusha
fists
dec
ja
fisubrl
test
adc
shrb
leave
lret
pop
fucomi
lret
loop
pop
lds
popa
xchg
nop
mov
hlt
sbb
ss
cmp
dec
cld
sbb
int
cld
test
dec
fnstenv
add
sub
xchg
dec
dec
loopne
lahf
icebp
pop
mov
mov
stos
mov
cmp
ror
lock
pop
jecxz
xor
movsb
in
xorb
mov
jmp
ljmp
push
xorl
and
cmpsb
jae
scas
insb
mov
jge
inc
hlt
hlt
and
mov
ja
repz
ja
pop
outsb
adc
rcrb
ficomps
mov
sub
inc
jbe
popa
add
sbb
cmp
aas
rolb
mov
ja
mov
ljmp
xchg
push
mov
dec
jp
out
fidivrs
jge
aas
loopne
sahf
xchg
out
and
inc
ret
push
jnp
and
jge
out
mov
mov
cmpsb
insb
dec
push
adc
in
and
sub
shl
adc
mov
or
add
daa
push
sub
out
in
sahf
icebp
and
enter
jno
or
pushf
outsb
lret
fwait
insb
add
xchg
sbb
lock
xor
or
outsb
add
mov
cmc
xchg
cld
int
cmp
sub
mov
lock
mov
xor
mov
cs
mov
icebp
cltd
jle
cmp
sbb
insl
js
test
mov
cld
mov
dec
loopne
rol
ds
or
jl
jns
out
insb
cwtl
push
movsl
jbe
subb
test
mov
popf
repz
fsubs
sete
and
test
lods
je
xchg
push
sbb
dec
push
fstl
pop
or
xadd
mov
xchg
cs
sbb
xchg
into
push
mulb
in
incb
dec
lcall
sbb
mov
push
push
adc
jne
out
push
loopne
iret
lea
adc
lret
jg
fsubrl
int
xchg
inc
repnz
inc
mov
mov
fisubl
push
orb
pusha
lock
cmp
xor
add
or
pop
jle
xchg
aam
mov
jno
mov
xchg
into
aad
sub
adc
mov
out
cmp
lret
push
dec
mov
pushf
sub
es
push
jle
push
and
ret
movb
popf
xchg
xor
ljmp
mov
pop
into
dec
imul
mov
pushf
cmp
xchg
imul
inc
into
cmp
pop
push
inc
fidivrs
mov
lods
mov
mov
inc
fwait
imul
mov
adc
and
repz
dec
jne
loop
mov
and
insl
ss
aas
push
shll
or
adc
jnp
ret
sbb
jno
jle
lods
dec
push
inc
mov
lret
bound
aam
mov
outsl
jecxz
push
iret
pop
cmp
push
rcrl
imul
test
testl
mov
ss
in
adcl
fwait
cmp
add
lds
rcl
loope
lds
or
aam
cmpsb
out
mov
mov
loopne
mov
push
dec
mov
xor
stos
xchg
pop
sub
mov
cmp
jmp
les
sub
popf
xor
shlb
scas
xor
and
sub
orb
pop
ja
idiv
adc
jnp
push
stos
cld
adc
lds
in
inc
arpl
mov
mov
das
repz
js
and
cvtpi2ps
push
pushf
rorl
dec
mov
or
pushf
push
push
xor
lock
addr16
adc
or
fldcw
push
mov
sub
das
int
cmp
push
movsb
ljmp
int3
lahf
stos
les
lcall
loop
sub
mov
inc
xchg
fdiv
shl
mov
jns
xor
xor
jg
stos
daa
mov
inc
sbb
add
out
lods
add
pop
loopne
pmullw
sbb
imul
hlt
inc
push
outsl
test
rolb
xlat
xchg
xchg
cmpb
rorb
pop
je
mov
mov
mov
addr16
sub
adc
cmp
pop
cld
mov
xlat
dec
or
mov
les
dec
shrb
sub
addr16
cli
jo
lds
push
push
pop
mov
sbb
xor
leave
sbb
pop
dec
orl
adc
imul
shl
xchg
loopne
jae
fs
pop
cmc
cmp
outsl
sub
xlat
sbb
dec
int
ret
mov
fwait
or
lret
inc
lret
mov
stos
in
jo
andl
out
add
dec
imulb
addr16
push
test
aaa
sbb
add
fildl
pop
pushf
cs
call
lcall
cs
in
push
xor
rep
jo
mov
dec
xchg
pop
jae
mov
mov
add
cmp
sub
push
lcall
data16
lahf
pop
dec
ss
arpl
stc
movsl
jo
and
testl
mov
std
xchg
mov
inc
fwait
enter
mov
push
mov
rcl
rorl
clc
fnclex
fcmovb
loop
and
cmpsb
ljmp
mov
mov
or
rcrl
movsl
test
cwtl
je
mov
mov
jl
vphaddubd
and
add
pop
imul
xor
aaa
clc
repz
cmp
repnz
push
and
inc
in
sbb
insb
pop
adc
lret
inc
bound
mov
data16
lret
cmp
xchg
cltd
lret
cli
jns
fisubrl
cs
call
decl
mov
pushf
mov
orl
push
or
or
pop
loop
scas
pop
ljmp
adc
outsl
xchg
pop
push
dec
adc
sbb
sbb
orl
jmp
shlb
div
sbb
dec
inc
rolb
mov
cld
out
inc
xchg
jae
dec
int3
int
xchg
adc
and
jne
mov
sbb
scas
leave
ret
adc
or
jg
mov
rcrb
popf
and
mov
jge
shrl
movsl
push
jne
test
test
mov
pop
lahf
dec
cmpsb
sbb
xchg
mov
inc
sti
cmpsl
cli
lea
xor
xchg
pop
jl
and
and
cli
pop
pop
loop
ffreep
lea
inc
sahf
jmp
outsl
pop
jge
jns
push
jae
movsb
mov
xchg
mov
mov
add
loope
dec
mov
xor
add
lret
and
inc
push
out
movsl
into
add
gs
xor
pushf
xchg
daa
outsl
pop
divb
adc
mov
int3
push
mov
xor
test
out
imul
popf
andb
sbb
push
repz
test
mov
mov
fldz
pop
jae,pn
or
loope
int3
out
loop
inc
lahf
aad
int3
lods
inc
inc
mov
testb
mov
cmp
in
addr16
pop
mov
lahf
push
std
repnz
out
cmpsb
cmp
cmc
mov
push
inc
imulb
cmp
in
pop
test
dec
outsl
ljmp
sub
xchg
idivl
mov
add
pop
and
scas
cmpsb
adc
out
pop
push
or
and
or
in
jns
pop
cltd
push
ret
xor
or
cmp
push
test
ret
cmc
in
pop
sub
dec
adc
cmp
rclb
jno
xchg
dec
test
imulb
icebp
add
push
outsb
push
in
lcall
add
adcb
dec
mov
pop
cmp
push
cltd
test
mov
ret
mov
add
cmpsl
fwait
xor
clc
cmpsb
pop
add
mov
iret
gs
dec
push
cmpsb
pop
fdivr
jecxz
data16
sti
es
ret
sti
into
rcrl
push
ret
inc
fidivs
lahf
mov
push
leave
sub
in
aaa
cmp
mov
mov
xchg
mov
orb
aad
jo
fsubp
adc
cmpsl
nop
jl
mov
mov
pop
lcall
fsub
jmp
enter
push
adc
ret
and
dec
fwait
hlt
dec
and
inc
add
mov
das
mov
loope
fidivrs
roll
inc
outsl
xchg
push
push
aaa
je
or
jae
leave
sub
jmp
sub
adc
leave
dec
mov
xor
stos
mov
call
popf
inc
xchg
jne
cld
dec
aaa
jnp
hlt
int
jae
aas
js
jno
adc
cli
iret
cli
add
cs
mov
xchg
jecxz
and
insl
and
repz
out
dec
adc
cld
cmpsl
movsb
loopne
sub
std
stc
push
pop
sub
pop
shlb
jae
dec
adc
loop
mov
mov
mov
mov
mov
bnd
loop
test
inc
ja
addr16
mov
enter
rcr
pop
and
sarl
lods
outsl
cld
das
mov
testb
push
aas
cltd
push
push
mov
pop
jno,pt
dec
pop
push
jmp
stos
je,pn
mov
sbb
sbb
xchg
in
cld
mov
sbb
test
pushf
outsb
mov
jne
icebp
icebp
pop
lds
mov
inc
scas
push
iret
sbb
cmp
mov
lds
adc
jbe
sbb
repnz
adc
in
jg
lods
clc
push
decb
inc
mov
jle
je
aaa
fs
push
std
call
adc
pop
push
test
cltd
nop
pop
movsl
xor
jno
mov
leave
and
in
mov
jl
inc
cmp
and
testl
add
fwait
lods
xchg
pop
outsb
xchg
and
fcmovnb
adc
sahf
shl
pop
cmc
lock
cmp
loope
das
or
hlt
js
fwait
shrl
sub
push
std
sbb
xchg
or
and
mov
imul
inc
cmp
lock
aam
call
data16
sbb
fwait
lods
enter
xchg
int3
xlat
outsl
imul
push
out
xchg
bound
xchg
pusha
sbb
popf
ds
xchg
data16
les
mov
cmp
lods
mov
push
or
mov
pop
shll
push
insl
or
sti
das
add
sub
pop
and
xor
mov
movsb
pop
orb
dec
or
outsl
jae
pop
push
lahf
repnz
mull
shr
imul
cmp
gs
mov
ret
sbb
add
sbb
sti
mov
mov
std
cmp
and
stos
cmp
cmp
je
mov
xchg
sub
fsubr
ret
mov
pop
in
and
sbb
push
xor
push
dec
sbb
stc
jns
mov
fcoms
rol
mov
mov
daa
cld
mov
stos
xorl
fldl
gs
popa
add
lods
lret
andnps
scas
mov
stc
mov
sbb
cli
repz
inc
fdivrs
stos
out
sbb
dec
mov
mov
iret
sbb
mov
add
imul
xchg
push
pop
daa
fcoml
xchg
das
jne
pop
sti
cltd
fstl
pop
lea
push
mov
repnz
insl
lods
mov
outsb
imull
fbstp
fadd
sub
or
pop
rcrb
xchg
gs
data16
mov
repz
cmpsb
fs
insl
add
orb
aaa
leave
sbb
xchg
sub
dec
cs
cmp
fwait
js
adc
dec
adc
sti
ret
scas
sarb
sub
sub
push
popf
inc
mov
xor
push
in
jno
add
mov
xor
jns
xchg
test
lock
loopne
adc
add
xor
and
push
jbe
data16
pusha
inc
nop
mov
cmpsb
mov
mov
out
loopne
adc
add
xor
and
push
jbe
data16
pusha
inc
nop
mov
cmpsb
mov
mov
out
loopne
adc
add
xor
and
push
jbe
data16
pusha
inc
nop
mov
cmpsb
mov
mov
out
pusha
out
decl
dec
cltd
mov
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jmp
imul
out
testb
outsl
mov
inc
jmp
fisubl
jbe
push
stos
push
mov
mov
jnp
imul
out
idivb
xchg
xchg
sbb
jmp
mov
push
stos
push
fwait
mov
jnp
imul
out
idivb
xchg
xchg
sbb
jmp
mov
push
ret
inc
in
or
imul
inc
or
movsl
cmp
pop
call
and
lods
add
cs
out
testl
imul
inc
ja
push
popf
xchg
es
shrl
push
adc
lcall
jle
sti
xchg
mov
push
imul
cmp
jnp
cmpsl
loop
xchg
xchg
dec
or
jmp
sub
mov
clc
inc
mov
adcl
or
pop
or
xchg
imul
add
inc
call
daa
je
addl
shl
into
sbb
jecxz
jecxz
int
add
cmp
jbe
stc
stos
loop
xor
pop
out
idivb
xchg
xchg
sbb
jmp
jbe
push
stos
push
fwait
mov
stos
das
add
js
dec
xlat
pop
ret
outsb
xchg
sub
mov
scas
sbb
imul
mulb
pushf
das
out
mov
sbb
jae
test
xor
jns
push
xchg
pop
or
xchg
imul
cmpsb
or
jbe
push
stos
push
fwait
mov
jnp
imul
out
idivb
xchg
xchg
sbb
jmp
jbe
push
stos
push
fwait
mov
jnp
outsb
ret
adc
daa
dec
inc
or
aas
in
inc
subl
test
mov
stc
jnp
jnp
cmpl
ljmp
and
adc
test
sub
loop
push
pop
and
out
inc
dec
insl
and
dec
rclb
sub
int
pop
inc
ss
push
stc
out
sub
mov
inc
sbb
pop
leave
pop
ja
fistpll
xchg
sbb
or
dec
push
test
dec
inc
sbb
dec
out
out
je
shl
enter
xor
adc
dec
add
movsb
push
xchg
pop
add
add
in
xchg
push
mov
adc
les
daa
push
ja
push
cmp
dec
mov
adc
cmc
lods
out
or
out
and
into
fnstsw
sub
adc
lds
xchg
xor
fisubrl
mov
cmp
arpl
pop
leave
mov
lea
lods
xchg
test
popf
add
in
add
dec
in
push
mov
dec
cmpsl
mov
aad
pusha
loope
and
or
dec
aam
and
mov
testb
xchg
mov
aad
out
mov
fsub
sbb
repnz
and
xor
xchg
movsb
push
icebp
bound
mov
pushl
mov
and
in
adc
mov
dec
andl
mov
dec
fwait
cli
sbb
sub
pop
es
gs
jbe
fs
dec
inc
mov
faddl
mov
fnstcw
je
push
sti
lcall
enter
in
push
or
or
sbb
sti
rolb
xchg
loope
xchg
out
cmc
push
mov
push
shlb
push
inc
xor
xchg
mov
jbe
sbb
push
and
or
fsubs
shl
mov
orl
and
icebp
aas
push
mov
mov
and
xchg
mov
sbb
mov
sbbb
add
cmp
fld
out
enter
fisttpll
inc
mov
out
pop
cmc
lods
in
ss
lods
xchg
pop
lret
push
jmp
lret
in
xchg
int
iret
das
cwtl
pop
frstor
data16
data16
push
push
push
scas
jo
in
loope
xlat
rcr
addr16
cmpxchg8b
enter
mov
mov
shll
fstpt
scas
pop
int
xor
mov
pusha
sarl
inc
int3
mov
aad
test
dec
loope
mov
fcoml
es
js
push
jmp
repnz
fsubrs
cmpsl
mov
xchg
mov
and
fists
pushf
pop
xor
add
divb
pop
ja
sub
or
sub
shl
adc
scas
add
and
jo
push
cmp
cmpb
xchg
out
mov
cmp
je
mov
ret
and
cmpsl
inc
sbb
clc
or
lcall
sub
pop
movsb
ret
and
rcl
xchg
xchg
jb
xchg
sti
dec
loopne
in
mov
jge
jg
push
cmpsl
iret
lock
adc
clc
pop
cmp
fmull
push
outsl
dec
lock
and
cmp
pop
mov
insl
mov
adc
cmc
sbb
enter
scas
pop
cmp
and
add
fcompl
into
aam
or
lock
es
sar
cltd
cmp
and
jle
pop
popa
cmp
mov
pusha
adc
or
jle
mov
xor
cmovns
pop
xchg
repz
mov
xchg
and
inc
sbb
push
out
adc
clc
gs
mov
fmul
insl
iret
ret
jbe
xchg
cmp
fcompl
enter
jo,pt
arpl
arpl
and
iret
cmp
repz
mov
or
dec
push
aaa
cli
data16
notb
js
jbe
push
addl
pop
sub
mov
pusha
sbb
cmpsl
or
hlt
add
daa
pusha
in
push
mov
pop
cld
mov
mov
pusha
mov
sbb
out
gs
daa
dec
inc
pop
mov
imul
xchg
fs
test
jp
icebp
push
and
lock
imul
cmp
push
sbb
or
in
dec
mov
fwait
mov
out
inc
test
and
adc
pop
daa
and
lea
ret
mov
lds
mov
loopne
adc
inc
je
das
rcrb
inc
dec
inc
push
push
pop
and
aas
mov
sarl
movsl
fisttpl
or
pop
bound
push
push
push
loope
dec
and
mov
and
out
xor
or
popf
push
in
int3
lcall
and
subb
or
pop
test
xor
dec
or
xchg
fistpll
mov
push
add
das
jne
aad
into
insl
add
mov
loope
cmp
addr16
daa
mov
repnz
divl
xchg
push
nop
mov
inc
push
mov
cs
imul
push
je
pop
adc
lock
cmp
cmp
pop
pop
cmp
clc
sbb
repz
push
les
xor
pop
or
jo
outsb
jge
inc
sarb
pop
push
nop
cmp
dec
ja
iret
push
ret
mov
ror
cmp
data16
mov
loop
add
cld
jb
adc
xchg
or
ret
push
sbb
pop
cmp
pop
jb
ds
popf
stc
gs
fistpl
add
lret
push
push
movsl
insb
sub
inc
addr16
out
jne
pushf
or
test
movsb
cmc
and
xchg
cmp
stos
xchg
or
add
push
mov
lock
ret
cwtl
ficomps
jns
lcall
jp
movsl
sbb
and
orb
mov
pop
or
pop
repz
pop
or
fistl
inc
js
call
mov
arpl
out
jb
mov
mov
clc
xchg
btc
push
arpl
sarl
add
mov
mov
and
add
mov
testb
rcll
mov
jl
xor
fsubrp
rorl
test
clc
sbb
mov
es
mov
pop
jae
inc
jle
adc
sti
or
xchg
popa
loop
jle
enter
or
leave
mov
inc
jb
sub
pop
xchg
sbb
andb
repz
adc
push
insb
lods
pop
jge
js
jp
jle
cs
or
and
push
cmp
jo
jp
mov
sub
push
into
sahf
in
sahf
jecxz
lret
decl
jl
jo
lock
cmpsl
clc
cld
lret
call
jo
jl
dec
pop
jno
lods
jp
add
bound
cmp
imul
imul
std
sub
sbb
loop
push
lcall
adc
xchg
cmp
cs
sti
inc
xchg
in
and
push
hlt
and
scas
mov
out
mov
mov
cmp
sub
jle
add
or
cs
add
mov
insl
lret
mov
push
dec
adc
sar
leave
rorb
out
jge
out
ret
jmp
rolb
test
cmp
add
sub
mov
rcr
cmp
shlb
mov
jo
or
enter
out
cli
loopne
outsb
sub
jno
int
adc
mov
test
push
inc
add
mov
adc
and
mov
aam
jb
mov
pop
loope
mov
int3
stc
xchg
aad
jge
dec
pop
test
or
mov
pop
xor
iret
mov
bnd
jecxz
daa
sahf
dec
sub
int
pushf
or
in
or
xchg
jae
push
or
ds
xchg
xchg
rorl
aad
enter
test
repnz
mov
sub
mov
pop
int
pop
add
adc
mov
jo
mov
or
xchg
adc
aas
mov
es
bound
jl
lret
int3
roll
repnz
jmp
jbe
loopne
xchg
shr
loope
pop
push
in
and
or
fstl
mov
das
push
daa
jg
andl
pop
jl
aad
push
movsb
add
xchg
sub
jle
sub
mov
lea
lods
enter
xchg
xchg
ror
pop
or
push
ja
sbb
ljmp
cmp
dec
pop
sbb
xor
pop
rcrb
fcompl
cld
cwtl
xor
cmp
sub
inc
inc
mov
mov
aam
dec
xor
lret
add
push
sti
repz
xchg
into
enter
jmp
loopne
ljmp
insl
aad
or
ret
pop
sti
push
jmp
lock
in
out
adc
mov
dec
mov
sbbb
pop
adc
mov
pushf
ds
cli
outsb
stos
mov
sti
cs
xor
je
push
pop
inc
insb
dec
mov
loope
and
fidivrl
mov
push
rcrl
scas
subl
dec
les
lds
jns
mov
jo
aaa
mov
dec
inc
cmp
sub
add
cltd
aad
imul
jns
pop
pop
cmp
lock
push
clc
mov
jle
leave
mov
enter
and
mov
cld
jnp
lcall
push
cmpb
push
clc
stos
jp
mov
insb
or
inc
dec
sbb
jecxz
and
lods
mov
nop
insb
sarl
dec
mov
data16
call
sbb
jb
je
pushf
pop
sbb
ss
mov
in
sbb
add
push
fwait
dec
fists
popf
out
pop
dec
jbe
adcb
rcrl
add
fisttps
je
pop
sbb
fdivrp
stos
xchg
dec
pop
sbb
mov
cli
hlt
out
mov
push
xor
in
or
jbe
aas
mov
test
adc
cmp
je
cmp
lahf
push
std
lret
inc
xchg
pop
in
cmp
xor
out
les
dec
jne
pop
dec
out
into
es
add
mov
fimuls
mov
and
in
mov
cmp
pop
push
lcall
fistpll
sub
lret
std
dec
push
pop
add
mov
cs
add
in
sub
inc
add
push
loope
cmp
arpl
icebp
sbb
aam
pop
sub
js
push
dec
jae
je
lods
shrl
iret
aad
ja
push
mov
mov
dec
adc
mov
sub
dec
pop
push
stc
dec
inc
mov
xchg
or
cs
icebp
add
adc
or
leave
jg
push
push
lahf
jg
push
insb
insl
cmp
sub
repz
sbb
cli
xorb
xor
out
in
loopne
test
lds
and
les
in
out
or
subb
mov
push
fcoml
push
jne
test
movsb
jns
out
popl
jns
arpl
fdivrl
pop
ja
out
les
clc
repnz
push
into
mov
icebp
sarl
out
sbb
adc
pop
gs
xchg
stos
mov
mov
add
shl
into
pop
add
clc
loopne
mov
fcomps
fsubs
lcall
lods
inc
adc
cmp
add
mov
pop
stos
into
pushf
add
out
cmp
bound
jge
mov
cs
ljmp
nop
aaa
stc
cmp
fdivs
lods
xchg
stos
pop
std
adc
xchg
cltd
xchg
add
in
fwait
push
add
shrb
jo
add
icebp
xchg
sub
cmp
cs
in
rorb
dec
repnz
repz
loop
aam
jo
das
imull
xor
nop
sub
and
call
and
or
mov
pop
lock
dec
lock
je,pt
jne
pop
gs
mov
jns
mov
or
jmp
icebp
jae
pop
sbb
int
xorl
test
test
xchg
push
test
bnd
push
inc
sub
shrl
loopne
mov
or
lods
and
imul
filds
mov
jecxz
xor
ss
aam
je
push
push
xchg
cmpb
sbb
stc
lret
stos
adc
rcrb
call
pusha
mov
inc
aam
mov
pushf
cmpsb
out
jmp
out
je
xor
jle
sub
xchg
mov
push
sbb
mov
cltd
hlt
hlt
in
jmp
nop
lcall
sti
jb
push
cltd
and
idivb
xchg
xchg
adc
negb
jb
pop
jo
call
in
orl
in
rclb
mov
daa
xlat
jl
lods
lret
and
movsb
int3
shlb
pop
mov
xchg
sahf
outsl
incl
clc
outsb
sub
add
cmp
sub
jmp
popf
dec
popa
jg
cmpsl
icebp
jne
inc
adc
frstor
push
ljmp
cmp
mov
movsl
add
orl
push
imulb
and
sub
dec
repnz
mov
repz
or
jne
add
add
dec
add
stos
xchg
push
jne,pn
xor
ror
aam
xchg
aaa
out
mov
pop
jmp
ljmp
pop
gs
outsb
repnz
pop
call
dec
shll
or
add
dec
int3
xlat
adc
mov
pushf
imul
mov
decb
jp
xor
xchg
lods
daa
into
mov
mov
pop
loop
add
push
into
fxch
stc
xchg
sbb
fisubrs
sub
dec
inc
jl
fstp
adc
inc
jle
xor
add
es
mov
in
fbld
xchg
jo
jecxz
jp
test
xchg
scas
outsb
stos
push
jo
xor
lahf
test
xor
sbb
push
pop
xchg
popf
std
pop
lds
xchg
and
sub
jmp
lods
xchg
mov
roll
in
scas
pop
inc
dec
pop
cltd
mov
pusha
xchg
mov
pop
mov
mov
push
scas
hlt
or
rcrb
xchg
inc
ror
xor
mov
pop
adc
sub
out
iret
mov
mov
das
add
popf
jge
or
lret
push
mov
ret
fwait
xchg
sub
sbb
incb
hlt
outsl
push
ret
imul
stos
sub
adc
in
push
mov
rcl
in
out
movl
lea
mov
adc
lds
arpl
insl
mov
out
arpl
jbe
sub
adc
shll
xor
dec
inc
xchg
jmp
out
pop
movntps
pop
sbb
ds
and
shll
mov
shl
clc
xchg
dec
aas
add
pop
pop
test
lods
or
jb
sub
sarl
fs
inc
mov
mov
jmp
data16
inc
dec
shrb
mov
xchg
fisttpll
mov
push
ljmp
push
inc
js
in
cltd
int
jle
out
fsubp
int3
inc
pop
add
test
shll
xchg
and
add
dec
jno
mov
ret
ret
xor
aad
mov
mov
and
lods
add
mov
or
push
lret
sti
jbe
add
mov
jp
jecxz
icebp
fidivl
mov
movsl
ret
mov
aam
add
xchg
mov
mov
and
xchg
sub
xor
mov
shlb
scas
loopne
lcall
repnz
mov
hlt
cs
pop
aas
sbb
lret
cmp
pop
xchg
dec
rorl
nop
adc
adc
jle
ss
jne
leave
mov
or
icebp
adc
cmpsb
fcoms
cmp
adc
aam
jle
rclb
ss
divl
hlt
inc
xchg
push
push
xor
mov
push
pop
add
mov
adc
xor
pushf
daa
lock
cmpsl
xor
int3
lret
out
sub
ss
or
ror
pop
idiv
rep
mov
jmp
xor
and
mov
in
xchg
test
dec
popf
mov
xor
cli
mov
pop
and
push
or
jle
das
pop
roll
sub
daa
adc
dec
sub
ret
mov
hlt
mov
rol
push
xor
aad
je
fsubrl
lret
dec
and
mov
mov
mov
sti
cmp
pushl
sbb
mov
jl
sbb
jle
xchg
test
fidivl
xor
loop
xorl
mov
dec
les
test
xor
mov
mov
loop
adc
sub
push
sbb
enter
fdivrl
mulb
pop
add
sub
loope
pusha
movsl
add
cmp
xrstor
stos
mov
mov
cmpsl
repnz
sahf
testb
shrb
test
mov
shl
rolb
test
in
cltd
add
push
xor
jne
push
pop
cmpl
insl
lret
push
mov
ljmp
sbb
pop
sahf
sub
add
sub
ja
add
sahf
mov
cmp
fwait
mov
mov
pop
pusha
das
aam
jb
fisttpl
and
and
add
cmp
and
cmp
out
lock
test
jno
xor
jo
pop
dec
lcall
int3
insl
insl
adc
repz
arpl
cmp
adc
out
jmp
mov
pop
out
call
mov
xchg
fisubrl
adc
push
jns
mov
push
arpl
pop
pop
inc
mov
adc
push
and
or
movsb
and
imul
mov
mov
rolb
sub
aam
push
sbb
inc
mov
adcl
jae
fcoml
push
out
shlb
add
xor
outsl
add
mov
adc
sbb
ss
pop
or
mov
dec
xor
push
mov
jmp
xor
cmp
lcall
sub
in
test
mov
mov
pop
xlat
mov
pop
jo
xchg
call
aad
cli
sub
int
outsl
lods
mov
jmp
jl
sbb
sub
ss
sti
sub
leave
jl
push
push
fwait
inc
repnz
jo
enter
imul
adc
sbb
cmpsl
sbb
inc
mov
imul
jne
jmp
cmp
inc
loopne
outsl
stos
or
sub
cmpl
jb
sub
shrb
jnp
int
loope
into
ret
push
cmp
fdivrp
add
sbb
lcall
ds
inc
cmp
push
sbb
adc
or
jno
sbb
negl
cmp
pop
mov
je
les
stc
into
popa
and
sbb
xor
aaa
pop
ss
mov
test
std
fidivl
sub
mov
andl
cmpsl
imul
fsts
mov
mov
pop
push
mov
mov
imul
cmp
or
xor
ret
push
movsl
fcmovnu
dec
jmp
sbb
out
repz
ficompl
daa
add
inc
jnp
cwtl
cmpsl
repnz
sub
pop
pop
xor
scas
or
cmp
adc
mov
push
jbe
call
jmp
lahf
mov
mov
imul
cmpl
mov
jmp
pop
mov
mov
iret
pusha
cmpsl
movb
or
xor
repz
adc
lds
lods
cmp
pusha
push
jns
adc
jmp
dec
data16
add
enter
jl
xchg
pop
push
mov
in
mov
popf
or
mov
cmpsb
adc
scas
mov
sub
mov
pop
decl
xor
iret
xchg
push
inc
leave
xchg
adc
ja
mov
cmp
cmc
test
out
cwtl
xor
fmull
stos
mov
mov
int3
les
inc
mov
rolb
cmpsb
fsubrs
mov
dec
xor
dec
sub
leave
push
and
dec
cwtl
or
ret
iret
inc
jno
dec
jbe
cmp
fs
js
cmp
adc
mov
sub
push
mov
sbb
jo
mov
push
pop
mov
ret
mov
jl
push
jle
imul
xchg
cs
pop
push
nop
dec
aam
cli
and
scas
jbe
lret
clc
and
dec
sbb
insb
fimuls
push
sub
jnp
dec
mov
xchg
je
jecxz
out
rcrl
in
jne
jo
dec
in
ficoms
outsl
pop
mov
or
push
je
xchg
fildl
or
fisubrl
test
mov
addr16
out
shrl
inc
fisttps
lcall
lahf
xor
pop
cld
pop
pop
mov
dec
out
jnp
cmp
adc
test
lods
hlt
aas
mov
jp
sbb
adc
or
cli
adc
sbb
dec
idivb
xchg
xchg
sbb
jmp
jbe
push
stos
push
fwait
mov
jnp
imul
out
idivb
xchg
xchg
sbb
jmp
jbe
push
stos
push
fwait
mov
jnp
imul
out
idivl
xchg
xchg
sbb
jmp
jbe
pop
stos
push
fwait
mov
jp
push
pop
out
repnz
or
mov
lret
add
mov
jmp
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
cmp
sub
sbb
or
enter
xor
mov
lea
int3
fxch
leave
cmp
sub
sbb
or
jl
insb
jns
pop
dec
cmp
pushf
cltd
orb
fxch
leave
and
add
gs
je
inc
inc
dec
push
movsl
mov
hlt
cld
cld
mov
popf
subb
pop
sbb
jp
das
mov
test
mov
push
in
popf
aam
hlt
add
bound
std
mov
cmp
mov
push
or
cmpsb
fnstenv
pusha
leave
jb
lods
cltd
cld
mov
sub
xor
movsl
rolb
sub
mov
push
adc
mov
add
pop
adc
fxch
mov
out
pop
cmpl
mov
pop
lods
push
test
push
es
fldcw
xchg
out
jge
mov
mov
push
popf
popa
jl
add
in
stc
and
int3
pop
pop
loope
addl
inc
sbb
and
loope
fdivl
sarl
iret
cmc
cs
or
jl
pop
pop
push
push
movsl
mov
xchg
nop
in
hlt
icebp
mov
enter
pop
jns
js
or
adc
shrb
pushf
mov
scas
mov
movsl
push
push
dec
inc
jae
jl
adc
daa
pop
sub
leave
int3
pushf
cld
int
cld
mov
mov
jo
fs
xor
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
add
mov
repnz
mov
mov
in
outsb
xchg
fadds
movsl
outsb
mov
push
xor
outsl
popf
arpl
xchg
mov
xchg
cmp
repz
test
jmp
fistpl
pop
test
jbe
and
in
test
clc
pop
push
cwtl
adc
clc
mov
push
fisttpll
dec
xor
pop
stos
nop
xor
repz
push
fsubr
in
daa
jecxz
push
mov
lods
lret
repnz
mov
loope
add
push
inc
push
popf
loopne
xchg
bound
and
mov
fsubl
cmp
push
adc
dec
push
sbbl
inc
jmp
ja
fstp
push
jo
addr16
test
inc
leave
adc
fcomps
xor
subb
inc
push
adcl
ficoml
fcoms
jb
cmp
mov
stos
add
xchg
sbb
aaa
and
addb
cli
xor
nop
pop
addr16
orb
xchg
mov
test
lods
xchg
mov
fldt
mov
sbb
push
leave
jle
mov
in
push
aad
xor
jp
insl
cmpsl
cld
fistl
xor
test
pop
sarb
jo
mov
xor
cs
xchg
push
xchg
scas
stc
sbb
out
adc
mov
cmp
lea
inc
xchg
filds
scas
fistpl
sahf
sahf
je
lahf
and
push
inc
adc
pop
rolb
mov
mov
aas
clc
or
rcrb
inc
sahf
push
jae
sbb
loop
inc
adc
ficoml
stos
adc
sbb
jae
cmpsb
inc
cmp
lds
call
inc
jae
fmuls
xor
mov
lahf
mov
mov
scas
and
imul
jmp
and
dec
dec
pop
pop
pop
sub
xchg
and
in
popa
pop
sub
out
sub
xchg
push
sub
push
add
and
sub
pop
ret
inc
arpl
lea
cmp
pop
insb
mov
sub
rcrl
int
jge
xor
inc
jge
push
lea
imul
jmp
xor
sbb
xchg
xor
jg
ret
xchg
adc
pop
xor
repnz
or
push
adc
add
xchg
test
pushl
mov
push
add
daa
cs
push
push
int3
shll
movsl
pop
inc
jnp
jl
xor
sahf
aad
jnp
fs
mov
or
adc
lahf
mov
or
in
sbb
inc
lds
out
repz
inc
in
sub
pop
jns
sbb
xchg
call
add
sbb
cmp
push
fs
pop
lock
pop
shrl
imul
pop
cmc
lock
jo
inc
and
pop
push
daa
mov
arpl
mov
cli
cmp
fisubs
xor
cmpl
mov
gs
jmp
int
xor
mov
cmp
dec
mov
ds
mov
and
fistl
push
js
popa
gs
pushf
shr
rcll
mov
jle
loop
mov
lret
imul
aas
xchg
ja
or
rcr
int
dec
mov
jl
pop
xchg
rcll
xor
addb
jbe
shrl
inc
dec
loopne
syscall
cmp
push
adc
cmp
mov
clc
jp
mov
test
icebp
rolb
aad
outsb
mov
inc
arpl
lret
das
cltd
lret
push
popa
inc
mov
xor
xchg
cmp
ljmp
and
shrl
enter
push
push
mov
call
sti
add
add
fcomps
inc
andl
inc
push
mov
rcrl
mov
push
test
fwait
cs
xor
lods
mov
mov
xchg
add
pop
fs
mov
aam
add
mov
sbb
mov
jnp
imul
or
loopne
xchg
and
mov
bswap
les
je
cmp
in
fwait
loopne
sbb
and
inc
roll
adc
mov
and
loopne
and
outsl
cld
push
and
cmpsb
sbb
aad
sub
stos
xchg
inc
mov
out
fildll
loopne
int
daa
das
cld
sub
mov
pop
testb
out
dec
out
cmp
ss
fsubrp
adcb
pop
jno
out
aaa
enter
pop
js
or
xchg
xor
mov
jno
inc
test
popa
mov
add
mov
mov
jnp
scas
mov
dec
and
divl
mov
or
mov
add
xor
mov
out
jns
pop
lea
ror
shll
sahf
sbb
test
and
movsl
add
xchg
add
add
jno
int
push
or
cmp
lods
stos
add
mov
cmp
arpl
mov
cmp
pop
iret
ss
and
mov
lret
loope
mov
stos
fmul
imul
shlb
fsts
pop
push
sahf
push
lock
repz
test
mov
jbe
adc
addl
jge
imul
mov
data16
push
pop
pop
add
call
or
mov
test
push
and
imul
push
mov
mov
xlat
enter
sub
cltd
sub
out
push
adc
adc
outsl
jg
out
aas
cld
pop
stc
mov
pop
test
lcall
push
rolb
pop
cli
xchg
fbstp
push
cld
lock
push
ret
inc
push
jnp
mov
jo
pop
mov
outsl
push
cmp
scas
pop
cltd
push
ror
sti
fiadds
into
lahf
ja
cmp
roll
aad
jbe
stos
push
adc
pop
das
daa
popa
cmpsb
mov
clc
popa
jp,pt
cmp
loope
andb
daa
dec
loopne
push
and
hlt
or
jp
ds
sub
rcr
pop
out
clc
in
adc
inc
inc
lret
scas
mov
sti
mov
mov
sbb
leave
mov
div
test
fldl
orl
test
aam
sti
popf
lds
add
jno
test
lods
rolb
mov
add
mov
adc
jns
pop
xchg
xchg
negb
dec
sbb
popa
cmp
out
aam
sub
jp
cli
dec
add
adc
jp
pop
int3
mov
loop
popf
arpl
xchg
loopne
cmc
cli
test
jno
cmp
test
outsb
ja
out
scas
dec
aaa
in
loopne
lds
push
jmp
add
or
and
in
sbb
mov
lret
dec
adc
dec
xchg
ss
ficoml
mov
leave
fbstp
pushf
cmpsl
push
ds
packuswb
xor
mov
neg
sub
lret
test
jmp
imul
mov
xchg
cmp
pop
add
shlb
sti
adc
fsubrl
and
loopne
jno
test
test
mov
fmuls
and
mull
lahf
or
roll
ljmp
jg
fs
or
cmp
loope
leave
fsubrl
jl
arpl
pop
mov
and
mov
or
sub
mov
mov
enter
scas
sub
push
dec
push
xchg
cmp
and
testb
sahf
push
rcl
mov
shll
sub
sbb
sbb
jmp
movsl
adc
push
jecxz
xor
push
jo
loopne
xchg
push
xchg
push
add
jbe
das
jns
jne
pop
pop
jns
adc
nop
xor
out
shll
rclb
sbb
imul
addl
inc
fwait
pop
ficoml
push
xchg
or
ja
pop
xor
int3
mov
int
push
int3
fdivl
adcb
inc
das
mov
nop
cmpsl
mov
lods
enter
push
out
movsb
mov
mov
loope
les
lahf
popa
hlt
pop
and
push
or
lret
push
jl
hlt
leave
int
lds
push
aad
rorb
push
add
xor
sbb
test
lods
cli
adc
xor
roll
sbb
in
add
scas
leave
cmp
scas
add
dec
jns
scas
add
mov
add
push
negl
mov
jnp
aad
loop
cli
mov
mov
adc
jnp
outsl
js
movsl
ret
lods
push
pop
in
mov
rorl
xchg
aas
push
in
or
push
jb
pop
push
mov
and
or
test
mov
sbb
pushf
dec
and
scas
sub
xchg
mov
mov
ret
push
add
fwait
or
dec
sbb
pop
ret
adc
je
movsb
push
xchg
bound
out
adc
je
ret
xlat
fcoms
mov
in
add
cwtl
iret
sub
jg
push
jge
aad
popf
fimuls
inc
repnz
sti
or
int3
cwtl
lea
adc
repnz
sub
mov
pop
pushf
xchg
add
lret
enter
jae
push
testb
sbb
adc
adc
add
stos
sbb
mov
mov
insl
xor
out
jb
jbe
pop
leave
or
in
and
xchg
gs
cs
dec
mov
push
jl
mov
in
int3
inc
out
xor
ljmp
neg
and
xor
icebp
jecxz
jmp
out
mov
xchg
xchg
mov
jo
sarb
mov
jbe
scas
jmp
outsb
mov
pop
int
mov
bound
xchg
cli
dec
add
pop
jns
mov
scas
mov
cmp
xchg
jle
pop
pop
nop
aad
loopne
pusha
stos
flds
sub
mov
cmp
adc
scas
outsb
and
js
rolb
movsl
pusha
adcl
inc
mov
cmp
jmp
mov
sub
cld
push
stos
cmp
rcrl
pop
pusha
aaa
cmp
jecxz
dec
push
lock
jo
test
jle
pop
lahf
lods
lcall
outsl
loope
xchg
push
fwait
in
sti
push
pop
inc
popa
and
mov
fsubrl
je
movb
mov
cwtl
jp
and
mov
leave
iret
adc
or
push
mov
pusha
repnz
out
push
incl
lods
xor
pop
roll
mov
sbb
cmp
xlat
in
not
into
xor
les
sbb
mov
jg
cmp
push
pop
gs
insb
jg
pusha
je
addl
outsb
into
jo
loope
test
pop
lods
jo
gs
ud0
lret
push
in
adc
shlb
xor
jle
ffree
inc
lahf
setg
add
xchg
sub
mov
pop
popf
mov
xorl
ja
inc
push
test
in
inc
mov
mov
aas
cmp
sbb
imul
pop
pop
push
lds
and
loopne
orl
cli
ret
cmp
push
pop
cld
cmpsb
mov
and
lahf
out
test
adc
dec
or
mov
nop
out
push
or
mov
cltd
jl
sahf
aaa
icebp
sbb
or
pop
xchg
lea
adc
outsl
rep
test
sbb
jecxz
repz
xlat
jmp
jo
adc
mov
pop
mov
sarb
test
push
je
lock
or
imul
sbb
lock
aaa
adc
jge
mov
popf
and
pop
push
jg
add
jnp
fnsave
jl
xchg
jbe
adc
testb
xlat
cli
push
pop
pop
add
rcrl
lret
xchg
dec
popf
sbb
insl
inc
orl
jl
xlat
bound
jb
aam
fistps
ret
cmc
cld
cmp
cmp
xchg
insb
pop
adc
data16
push
fs
cwtl
dec
movsl
adc
xor
push
not
das
movl
xchg
add
movsb
adc
mov
or
mov
mov
pushf
mov
int3
fdivrs
iret
push
fimull
push
out
push
fldl
repnz
arpl
fisttps
lcall
enter
ja
in
sub
push
inc
add
jnp
into
push
scas
lods
add
push
in
loope
lods
fcoml
cltd
adc
mov
sub
or
push
push
subl
mov
mov
in
cltd
les
shl
mov
and
mov
popf
ret
sbb
ljmp
out
mov
lret
in
mov
jl
aam
dec
sbb
insl
test
cltd
add
add
scas
lods
movsb
sub
cmpsb
mov
daa
outsb
pushf
dec
ds
fildl
dec
dec
aam
push
or
ds
pop
test
gs
sub
or
repz
sub
test
aad
inc
bound
or
bound
mov
fs
dec
lock
xor
jp
mov
stos
test
mov
mov
cmpsb
jmp
jae
loop
inc
ja
je
sub
mov
or
adc
popf
jbe
mov
insb
movsb
inc
stos
sbb
sbb
xadd
and
lahf
jmp
add
pop
insb
loopne
and
xchg
outsb
sub
add
or
orb
dec
sbb
loope
or
into
xorb
pusha
mov
or
mov
fwait
push
pop
sbb
cmp
jbe
outsb
mov
and
jb
xor
andb
dec
idivb
dec
dec
out
pusha
jae
outsl
add
inc
stc
cwtl
out
sub
push
mov
xchg
dec
push
inc
sbb
mov
pop
mov
call
mov
cli
dec
jno
aas
xchg
add
xchg
mov
loop
fstl
or
xchg
dec
push
cmp
adc
shrb
push
inc
iret
aas
loop
fstpt
jae
js
lcall
push
dec
dec
test
push
addl
ret
dec
mov
sbb
int3
icebp
mov
dec
out
cmc
lods
or
pop
mov
mov
jne
inc
icebp
pop
cli
push
jae
pop
push
xor
arpl
das
ds
pop
push
push
inc
loop
and
sbb
insl
inc
sub
cmp
scas
fstpl
aad
jle
cltd
sbb
mov
inc
lret
aaa
adc
pop
dec
das
int3
lcall
add
mov
in
pop
inc
lahf
mov
cmp
aad
popa
movsb
setg
sti
mov
mov
and
jecxz
mov
and
xchg
jno
sbb
xchg
adc
aaa
pop
add
push
cld
pop
nop
lock
ficoms
scas
cmp
popa
in
ds
icebp
orl
push
sub
mov
sub
sti
mov
xchg
mov
jae
loope
rorl
orb
out
test
mov
sbb
rcll
sahf
sbb
insl
nop
push
cmpl
test
sub
out
movsl
cltd
idiv
cmpsl
lcall
mov
lods
pop
je
idivb
xor
test
das
repnz
in
loopne
mov
arpl
pusha
or
ror
sub
mov
sbb
and
nop
paddq
pop
push
inc
sbb
stos
fimull
sub
jno
inc
int
xor
scas
insl
mov
mov
dec
cmp
pop
pop
or
int3
filds
addr16
push
jmp
push
test
dec
repnz
out
or
lahf
call
pop
jo
insl
cli
loop
dec
cmp
pop
mov
sbb
rorl
jbe
cwtl
mov
xchg
stc
xor
xor
les
jmp
arpl
inc
sti
fs
clc
pop
loop
daa
jns
push
sbb
in
dec
fsubrl
mov
xchg
clc
xchg
mov
cmp
xor
xchg
dec
jle
push
inc
mov
pop
les
cmc
mov
test
outsl
mov
push
fsub
mov
scas
aas
pop
push
xchg
cltd
fldl
dec
jns
loope
dec
fdivl
aam
adc
loope
jns
add
jmp
mov
pushf
mov
icebp
xchg
ljmp
mov
hlt
mov
repnz
ss
jbe
jmp
adc
out
in
adc
movsl
cld
decl
pop
loope
xchg
mov
loope
sti
or
or
imul
pop
jle
fnsave
or
pop
insl
mov
ret
mov
add
xor
icebp
xchg
sbb
mov
xor
sbb
xchg
push
cmp
call
test
push
inc
ss
jns
inc
test
fsubs
stos
test
fsubl
aad
leave
fbstp
pop
dec
ljmp
mov
out
dec
lret
inc
mov
xchg
mov
das
inc
pop
dec
fwait
or
adc
mov
cmp
cld
adc
mov
ss
add
pop
sbb
cmc
mov
cmc
mov
enter
jnp
mov
rcll
push
ss
popf
shlb
pop
int
and
and
dec
mov
push
fs
loop
mov
ret
iret
aaa
mov
repnz
ret
ret
scas
stos
inc
je
jnp
mov
mov
xchg
stc
cmpsb
cld
mov
or
sbbl
push
jbe
lahf
sub
filds
sbb
pop
sub
mov
mov
lods
cltd
adc
mov
and
dec
mov
enter
outsl
arpl
movsb
ss
push
mov
enter
sbb
dec
add
dec
add
push
xor
jle
call
ret
or
or
pop
movsb
insl
dec
dec
mov
shll
sub
add
sub
sub
dec
sti
sub
loope
stos
dec
inc
xor
add
xchg
and
clc
or
or
aad
sub
out
ss
test
adc
dec
mov
push
pop
mov
dec
shll
pop
rcr
add
dec
mov
jl
pop
imul
add
popa
test
xor
pop
cmp
xor
outsb
jbe
mov
cltd
sbb
adc
cs
test
iret
xchg
inc
mov
xor
dec
std
xchg
pop
stc
mov
data16
xor
inc
mov
mov
add
sub
in
jg
sub
mov
cwtl
jmp
mov
mov
aaa
addl
movsl
les
jb
mov
xchg
mov
es
jne
sbb
rcl
push
ffree
cmp
sbb
mov
pusha
mov
fwait
jae,pt
mov
cld
fwait
or
into
sub
xchg
push
pop
insl
or
test
add
int3
fsubs
mov
cmp
pop
aaa
std
push
mov
lods
mov
mov
pop
jecxz
repnz
orb
dec
add
mov
pop
stos
aaa
lods
or
leave
jecxz
lret
outsb
or
pop
lods
sbb
cs
mov
sahf
adcb
mov
addb
jmp
loop
push
ljmp
out
loop
mov
push
mov
sets
lahf
dec
fmull
pop
and
push
jl
enter
sbb
bound
ficoml
cs
jb
loope
sti
ss
inc
lds
fcomps
jecxz
aas
jnp
xchg
rolb
mov
lock
mov
push
mov
outsl
push
loopne
imul
jae
pop
or
outsb
rolb
aad
mov
jle
shl
testb
add
inc
and
fcmovu
and
jns
xchg
jns
sbb
lcall
iret
cmp
in
cwtl
movsb
popa
or
push
in
sahf
cmpsl
pop
xor
mov
andl
and
adc
sub
repz
jns
pop
stc
icebp
adc
in
push
push
push
js
mov
repz
mov
jb
add
dec
scas
cwtl
jb
lcall
pop
hlt
jl
fidivl
mov
das
cmp
test
fistl
stos
fists
xchg
ss
cwtl
sahf
and
imul
jle
lea
cmp
cli
fnsave
jnp
scas
mov
ja
push
and
scas
adc
test
addr16
xchg
jo
dec
mov
fwait
loopne
insl
gs
jno
dec
test
mov
add
cmpsl
adc
or
mov
adc
dec
pop
test
sbb
inc
jnp
fistl
push
out
aaa
jbe
mov
les
dec
lcall
frstor
xchg
and
push
shll
inc
roll
cmp
loope
cmp
iret
mov
fwait
dec
jge
aam
pop
sbb
inc
sub
xor
mov
movsb
aaa
xchg
mov
jno
dec
pop
sbb
scas
sub
add
cwtl
inc
cmpsb
popa
inc
push
lea
insb
mov
fwait
test
mov
rcrl
ds
pop
or
push
cmp
xor
jmp
pop
push
jle
and
xor
jnp
inc
mov
xor
data16
pop
ljmp
data16
sbb
mov
dec
push
psllw
fsubrl
add
pop
mov
ja
sbb
and
jo
jnp
loop
xor
lret
in
jge
data16
mov
ror
and
dec
xlat
sahf
fxch
or
addr16
adc
xor
cltd
and
dec
scas
and
mov
xchg
push
sub
orl
rcr
inc
aam
addl
cmp
push
mov
out
adc
adc
xor
ror
mov
pop
jl
test
gs
fistl
jmp
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
cs
jle
insb
imul
mov
mov
mov
xchg
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
inc
pop
or
cmp
sub
inc
jp
sub
dec
fstps
cmpb
mov
cld
sti
in
jmp
sbb
or
sub
pop
pop
dec
dec
jl
insb
inc
xchg
fwait
mov
fdiv
int
cld
sti
in
jmp
mov
xor
inc
imul
jno
pop
pushf
fwait
xchg
xrelease
insb
pop
or
jo
inc
dec
push
push
mov
dec
clc
xchg
stos
adc
jne
inc
inc
test
xor
hlt
add
mov
cmp
cmp
fwait
dec
mov
mov
ja
inc
mov
xchg
adc
cmpsb
xchg
jae
push
jne
out
fistl
mov
mov
mov
lcall
and
mov
push
das
sub
sbb
fdivrl
cmpsl
sub
pop
jnp
mov
in
mov
into
lahf
inc
mov
int
mulb
pop
aam
push
jl
xchg
mov
lods
pop
jbe
int
jno
adc
cld
in
hlt
jae
mov
mov
arpl
jae
inc
insl
lods
rcrl
mov
in
sbb
dec
cmp
dec
pop
push
dec
jl
jne
test
mov
out
and
outsl
sbb
pop
push
dec
inc
cmp
and
jle
add
fmuls
mov
test
cltd
pop
or
pop
dec
cs
sub
and
adc
sub
cli
mov
stc
jmp
mov
cwtl
jne
ds
push
sub
and
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
pop
gs
inc
lds
fcmovne
mov
mov
add
daa
xchg
pop
jge
pushf
and
push
cmp
mov
push
mov
pop
jp
dec
aaa
sti
dec
clc
pop
pop
or
rcrb
inc
sbb
jl
cmp
popf
mov
pop
cmp
mov
mov
out
push
jmp
inc
loope
adc
cs
push
lock
push
sbb
stos
int
pop
daa
mov
insl
push
inc
and
js
fnop
cmpsl
mov
jle
pusha
outsb
inc
addr16
outsb
inc
dec
push
cmpb
ss
cmp
aad
aad
cs
lods
push
fwait
dec
loop
sub
mov
jle
mov
xor
mov
ficoml
adc
stc
lds
shr
loope
cmp
daa
cld
or
in
idivb
xor
out
mov
inc
repnz
loop
or
fidivrl
daa
leave
and
lds
repnz
dec
test
lahf
pop
inc
sbb
fwait
xchg
pop
int3
add
push
pop
mov
mov
jb
lea
movsl
loope
inc
mov
mov
aad
movsl
pusha
sbb
add
pushf
pop
jmp
sarl
sbb
imul
adcl
xorl
jg
outsb
dec
repz
jae
ljmp
and
mov
aad
inc
repz
int
scas
pop
sbb
enter
int
test
lcall
aam
cmpsl
pusha
mov
cli
adc
jmp
cmp
outsl
mov
jmp
mov
pushf
xchg
mov
icebp
pop
cmp
push
je
jge
pop
adc
mov
xchg
in
stos
ljmp
and
stos
fidivrl
mov
loop
lret
xor
bound
inc
push
call
mov
pop
jl
xor
bound
adc
sbb
dec
push
and
ss
adc
int3
ret
or
push
and
int3
xchg
add
pop
imul
addl
jo
add
pop
push
jmp
sub
shr
nop
mov
mov
dec
aam
pop
ja
sbb
dec
or
and
and
cmp
movsl
or
jge
stc
push
fdivs
mov
jmp
push
jp
cwtl
xchg
push
mov
cs
dec
inc
cmp
jno
popf
dec
popa
and
inc
xchg
pop
mov
out
xor
pop
push
or
mov
clc
int3
mov
mov
or
das
add
jmp
mov
rorb
sbb
inc
rorl
inc
clc
nop
xor
xchg
add
fstl
rol
jo
aaa
xchg
push
jg
fstl
xchg
add
imul
push
mov
mov
push
sbb
push
lods
adc
push
arpl
fistps
cmp
js
xor
imul
lock
inc
dec
pop
xor
xor
flds
mov
aad
out
push
mov
mov
jb
loopne
mov
and
push
push
ja
and
dec
idiv
xor
std
sub
mov
mov
jb
js
jae
fs
cltd
and
pop
jmp
hlt
push
mov
mov
das
jno
lea
jae
fldenv
daa
jg
ds
adcb
xlat
push
orb
clc
fld
arpl
and
cmp
js
xor
ljmp
xchg
dec
jae
xor
jmp
jae
test
xchg
jne
lods
xchg
dec
int
out
pop
add
and
push
out
movsl
inc
incl
pop
idiv
xor
add
cmp
lods
add
lahf
cmpsb
cld
xchg
mov
fbld
fadd
imul
lret
dec
cmp
mov
scas
sbb
test
inc
mov
es
fbld
or
mov
push
dec
cmp
jecxz
jp
out
rorb
in
add
cmp
cmp
inc
daa
push
sbb
and
pop
mov
and
stos
jo
sub
dec
aas
jg
mov
ja
lcall
repnz
jbe
in
cltd
mov
jl
xchg
mov
jnp,pt
pop
jmp
cmp
mov
adc
arpl
and
jne
clc
pop
comiss
or
or
mov
andb
pushf
es
neg
stos
fisttpl
pop
lock
mov
cmp
and
pop
sbbb
cmc
test
mov
push
sbb
icebp
inc
xchg
cltd
jp
pop
inc
fistpll
pop
cmp
dec
mov
repnz
stos
js
fidivl
and
int3
fwait
pop
mov
jmp
std
cpuid
test
lret
sbb
inc
sbb
movsl
mov
pop
icebp
mov
mov
cmp
movsb
aas
fdivrs
clc
push
sbb
ss
mov
sub
popf
fsts
xor
mov
fs
jb
cmp
pop
push
push
popa
jb
mov
xchg
jmp
lea
out
ljmp
mov
sub
aas
pop
lahf
sbb
cmp
jecxz
leave
sub
dec
mov
pop
adc
aad
cmp
add
movsb
adc
enter
mov
and
call
jle
int3
cmpsb
aad
pop
fistpl
add
fsts
popf
nop
call
jl
adc
mov
pushf
scas
in
adc
lds
xlat
xchg
mov
push
fstpt
in
fs
ds
cmpsb
dec
dec
jns
stos
icebp
das
popw
jp
xchg
cmpsl
push
push
loopne
mov
inc
lods
mov
push
outsl
mov
loopne
bound
push
in
dec
mov
scas
outsb
imul
sbb
dec
adc
nop
pop
movsl
adc
push
xchg
fcomip
inc
leave
ds
test
sbb
clc
mov
aam
lds
mov
mov
add
or
mov
xchg
sub
jo
clc
mov
stos
mov
push
sub
pushf
fisubl
rcll
in
mov
push
mov
jmp
daa
shlb
jnp
sub
lret
mov
mov
mov
adc
mov
in
into
add
sahf
ljmp
or
ret
mov
jb
pop
adc
pop
insl
and
lea
mov
sbb
cli
push
fyl2xp1
add
mov
or
cmpsl
arpl
in
xchg
jnp
ffreep
pop
dec
outsl
mov
add
push
pusha
iret
shl
push
leave
es
hlt
repnz
repz
sbb
std
jp
jl
pop
mov
pop
fmulp
mov
mov
and
aam
pop
stos
push
jae
data16
cmp
adc
stos
dec
jnp
mov
adc
mov
lds
push
mov
ss
jae
icebp
mov
xchg
into
movsb
int
jle
neg
test
mov
mov
pop
cmp
sbb
test
into
xor
adc
xchg
xchg
mov
inc
sub
mov
xor
mov
xlat
in
jmp
mov
sub
gs
xchg
dec
jg
pop
mov
sbbl
jmp
pop
idivb
jns
popf
iret
push
add
inc
enter
push
mov
andb
pop
adc
jp
les
dec
mov
sbb
or
cld
ds
adc
cli
mov
xor
jbe
mov
ffreep
jecxz
outsb
xor
les
push
jo
gs
jnp
filds
push
loop
or
adc
xor
mov
pop
jb
jle
cmpsl
cli
xor
scas
mov
jnp
ljmp
leave
sub
int
sarl
sub
mov
hlt
mov
movsb
iret
leave
stos
cli
fdivs
push
popa
cwtl
pop
jg
iret
pop
lods
es
cli
data16
divb
pop
inc
jge
push
mov
test
dec
xchg
jns
lcall
mov
in
or
bound
mov
lods
fmul
dec
out
pop
jnp
xchg
scas
ret
sbb
inc
pushl
inc
lret
jo
pop
lret
push
push
sbb
mov
mov
xor
add
clc
cmpsb
int3
clc
lock
sbb
fdivrs
data16
std
mov
out
push
sbb
mov
xchg
imul
pop
mov
popf
inc
aam
outsl
test
dec
fidivrs
and
testl
movsb
dec
sbb
sti
xor
mov
jg
or
inc
andl
sub
mov
mov
sub
mov
mov
aaa
inc
dec
add
lret
bound
push
sub
incl
lcall
sbb
popf
mov
insl
mov
je
fmull
loopne
into
push
das
adc
int3
pop
add
adcb
mov
jb
adc
dec
stos
movsl
mov
shlb
mov
and
sbbb
inc
insl
jl
jb
pop
inc
pop
ret
hlt
mov
cmpsl
addr16
jb
aaa
test
shl
sbb
pusha
jbe
insb
dec
xorb
call
mov
loopne
mov
jbe
cld
pop
mov
lahf
enter
into
sahf
popf
lret
mov
mov
mov
cmpsl
mov
movsl
lods
ljmp
sub
mov
popa
rorb
loop
add
add
adc
repz
and
gs
shrb
push
mov
jge
jbe
jbe
sbb
inc
sub
adc
js
fsub
inc
popf
sbb
push
pop
jmp
inc
cmp
in
incl
jbe
pop
orb
sbb
fucomi
pop
into
adc
cld
inc
sub
test
sti
rorb
shr
xchg
mov
mov
dec
mov
mul
fidivrl
mov
shr
inc
das
fcomip
inc
pop
adc
push
add
lea
sub
or
das
sbb
xchg
js
shll
rcl
mov
push
daa
ja
sub
enter
orl
incl
xor
xor
lods
and
inc
jl
push
int
subl
jns
sub
into
lea
jle
or
sahf
dec
push
rcll
lods
xorb
test
cmpsb
scas
iret
cmp
insb
or
xchg
sub
push
stos
pop
sub
test
je
lods
fsubr
cld
mov
faddl
pushf
popf
mov
mov
repnz
pop
in
mov
and
xchg
test
rclb
lods
add
leave
cmpsb
jp
dec
add
bound
sub
pop
lcall
in
leave
inc
pusha
push
imul
ret
add
nop
mov
xchg
pop
lcall
xlat
rolb
cmp
xchg
inc
test
ja
leave
in
testb
ret
inc
ret
lret
lret
jmp
cld
xor
pusha
iret
mov
sub
inc
test
adc
adc
sbbb
adc
cmpsb
mov
out
ret
test
cmp
sub
repnz
lcall
jo
sub
mov
std
ficoml
mov
pop
dec
dec
addb
pop
daa
adc
aaa
test
in
inc
aaa
shlb
xchg
stos
pop
dec
inc
stos
mov
adc
xor
loopne
jbe
fdivs
push
add
lcall
cmp
sub
enter
mov
sbbb
cmp
test
ljmp
fld
jo
sub
mov
inc
sarb
push
add
dec
adc
popa
sbb
mov
js
out
cmp
jne
shll
int3
fdivrp
stc
mov
xchg
loop
and
push
xchg
xor
icebp
add
mov
sub
xchg
push
jno
imul
xor
jb
aam
pop
iret
scas
lret
mov
test
lahf
dec
pop
into
popa
repz
ficoms
loope
inc
sbb
jbe
jo
int3
fisubrl
cmp
mov
sbb
sti
mov
xlat
mov
rcll
push
and
mov
xor
cmp
mov
mov
test
stos
or
cmp
scas
arpl
cmpsl
iret
lret
ss
idivb
sub
pop
orb
mov
inc
xchg
mov
xor
fistl
dec
add
cmp
push
xor
sub
test
out
hlt
jno
nop
cmpb
sub
rol
popf
ret
ss
add
ljmp
aaa
stos
mov
sbb
insl
pusha
xor
or
adc
jo
xchg
xor
pop
mov
dec
mov
mov
mov
mov
popa
int
iret
push
icebp
popf
imul
cli
push
dec
xchg
repnz
int
fmuls
adc
push
neg
add
lock
inc
inc
xchg
sarb
inc
addb
dec
xchg
orl
xchg
mov
jno
mov
rolb
jg
fildll
popf
jbe
fstpl
mov
rcrl
aam
cmp
lahf
fprem1
mov
jl
rcr
mov
scas
xor
mov
push
jge
gs
cli
push
mov
cmpl
cmc
addr16
jnp
adc
shrb
jnp
sub
insb
xor
cmp
enter
mov
das
lahf
mov
jb
add
sub
lahf
scas
ret
jp
dec
xchg
xor
add
mov
push
fisubrs
jnp
xchg
loope
repnz
cmpsb
xchg
pop
jnp
sahf
pop
add
sbb
pop
mov
pop
jmp
mov
cmp
xor
xchg
sbb
xor
lods
shll
push
lret
mov
movzbl
scas
push
ret
push
push
dec
lea
icebp
jmp
inc
scas
push
rcl
jbe
les
push
mov
push
sbb
in
ret
or
add
xchg
out
das
js
loopne
pop
bound
mov
sub
or
push
loopne
scas
xchg
rcr
dec
push
pop
jns
mov
xchg
repnz
popa
insl
arpl
and
lods
dec
arpl
sbb
fmulp
mov
mov
ljmp
das
mov
gs
adc
fs
shlb
jle
out
loope
or
hlt
pusha
add
push
push
pop
pop
lock
sarb
ja
dec
lret
ret
lahf
mov
and
mov
jbe
aaa
in
hlt
jae
std
xor
adc
add
dec
inc
and
mov
push
adc
sahf
add
pop
cs
pop
outsb
mov
add
inc
enter
nop
cld
push
mov
pop
sub
dec
add
dec
flds
ror
adc
pop
or
stos
adc
sub
nop
mov
mov
ret
pop
daa
and
fucompp
lcall
push
jmp
test
pop
mov
movsb
lcall
mov
jns
push
sub
test
pop
and
xchg
dec
js
mov
cltd
andb
nop
adc
jae
mov
mov
out
dec
pop
test
shll
add
adc
gs
jge
mov
aaa
fmull
mov
out
imulb
ss
lds
fcmovu
mov
xor
xchg
lds
or
popa
in
fs
pop
bnd
and
sub
dec
xchg
shr
sarb
iret
sub
add
and
fldenv
cwtl
clc
popf
dec
or
int
add
outsb
cmp
xchg
outsl
push
mov
je
add
or
add
sbb
cli
xor
pop
dec
mov
sbb
sub
pop
out
adc
dec
or
shl
repnz
out
pop
dec
mov
popf
inc
int
sti
cmp
fisttpll
popa
mov
cld
je
fsubrl
lcall
lea
push
adc
inc
ret
mov
xchg
ret
cltd
push
jbe
insb
jl
adc
jnp
pop
fistps
fistl
sub
xchg
ja
iret
shrb
dec
inc
daa
adcb
sub
inc
test
jecxz
div
jo
inc
or
stos
inc
mov
ret
xchg
pop
push
xor
xchg
dec
jle
push
xor
jb
fimuls
cmp
into
dec
repz
mov
adc
push
pushf
addl
stc
xchg
dec
sbb
or
fistpll
mov
jo
jbe
or
scas
fistps
loop
fsubr
outsb
cld
mov
mov
scas
clc
loop
cld
lock
lcall
aas
cld
mov
mov
fcompl
scas
repnz
cmp
int3
or
jmp
outsl
in
push
fcomps
pop
stos
cmpsl
and
cltd
outsl
add
jnp
push
rorl
out
sub
icebp
lcall
movb
js
and
leave
inc
int
mov
push
jo
cmp
movsb
lds
sbb
xor
pop
push
es
lcall
mov
xor
xchg
cmp
adc
xor
loop
repz
dec
cli
dec
adc
loopne
test
pop
rcl
out
adc
mov
sub
inc
cmpsl
mov
fidivl
sub
ficoms
mov
push
adc
ljmp
xor
xor
scas
sbb
cmpsl
sbb
leave
fisubrs
fiaddl
xor
cld
lret
test
out
jmp
lds
add
outsl
sub
or
aam
sub
push
js
rclb
je
pushf
scas
sbb
push
inc
xchg
loopne
int
add
cmpl
fpatan
mov
insl
subl
sbb
jno
outsl
scas
movsb
cmp
subb
bound
int3
loop
repz
xchg
inc
xor
scas
lret
xor
mov
stc
mov
fsubrl
das
push
adc
fs
rorb
cwtl
xchg
or
ss
popa
push
js
stos
xchg
sbb
mov
mov
inc
outsl
sti
aad
jp
out
cwtl
dec
test
ret
inc
sti
xor
and
divb
outsb
xchg
fwait
mov
xchg
or
sbb
sub
scas
inc
mov
in
add
bound
inc
adc
jno
sub
sbb
jnp
push
and
fisubs
pop
sbb
int3
clc
xchg
mov
fidivrs
lcall
mov
or
jmp
mov
mov
int
jnp
mov
sub
lret
push
mov
xorl
lret
mov
insb
dec
insb
jg
jge
lods
cmpsl
mov
jmp
inc
or
mov
xchg
jmp
js
data16
cmpsl
arpl
outsl
test
imul
sbb
pop
push
cmc
sbb
int
fnstsw
xchg
mov
sbb
add
sub
or
push
sub
push
ret
fs
rcrb
add
and
pop
xchg
js
fidivrl
ss
lods
das
movsb
dec
add
sbbl
dec
dec
fld
out
mov
adc
mov
mov
adc
in
xlat
cmp
stos
push
jg
mov
fstpt
pop
leave
push
mov
cmp
xor
in
insl
sub
lock
push
shll
add
js
adc
pop
mov
dec
rolb
ljmp
xlat
loope
dec
xorb
in
and
adc
ret
insb
dec
jle
scas
js
fbstp
leave
daa
pop
ja
rorb
movsl
jb
push
pop
add
lock
xor
cmc
in
movl
or
in
sahf
inc
je
rcrl
icebp
pop
sbbb
add
cmp
push
daa
mov
int
lea
das
ficompl
divb
jmp
data16
mov
add
pushf
dec
cmc
mov
ja
cmc
loopne
cmp
sbb
and
cmc
cmc
jo
sub
aas
rcr
inc
ret
loop
mov
out
shll
inc
push
jnp
mov
cwtl
dec
out
xlat
mov
dec
mov
stos
shlb
outsb
mov
ja
gs
insb
dec
push
sub
rolb
xor
dec
aas
jl
iret
cmc
shll
mov
rcrb
pop
dec
cmpsl
pop
addr16
sbb
out
inc
push
ror
sbb
sbbb
jbe
mov
mov
pop
sub
mov
fisubl
mov
mov
idivb
mov
pop
or
push
stc
outsl
jne
iret
and
popa
sqrtps
daa
or
mov
stc
or
call
sbbb
adc
sbb
pmulhw
ds
or
lock
hlt
cmp
test
mov
enter
sub
xchg
pop
imul
lds
jl
addl
jmp
or
iret
and
or
test
push
and
dec
or
and
outsl
mov
cmp
pop
aas
idivb
jbe
mov
cmp
sbb
dec
jno
inc
sbb
je
xchg
iret
mov
push
mov
mov
bound
insb
push
jb
mov
jl
and
sbb
ljmp
inc
mov
outsl
es
pop
decb
pushf
mov
xor
cmp
pop
shlb
jg
clc
add
test
mov
rolb
xor
test
ret
not
or
ds
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
pop
or
cmp
sub
pop
pop
dec
and
imul
mov
cld
repnz
sub
cmp
or
sub
pop
pop
dec
dec
cld
sti
in
stos
arpl
push
mov
inc
mov
adcl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
