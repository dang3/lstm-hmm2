add
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
in
adc
xor
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
push
imul
jb
je
arpl
lock
add
xor
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
mov
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
push
push
mov
movl
movl
movl
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
dec
mov
add
and
outsb
je
insl
jns
add
or
adc
add
adc
add
or
add
add
push
add
cltd
and
add
arpl
add
add
sbb
sbb
sbb
sub
clc
sbb
jecxz
cmp
popa
mov
ja
jae
inc
add
imul
inc
flds
add
xor
adc
jmp
in
cld
xor
pop
push
inc
cmp
sub
test
call
jmp
test
lea
pop
andb
add
je
in
inc
or
sar
incb
repz
sbb
push
xor
and
rolb
add
mov
dec
decl
mov
push
cmp
loope
inc
fcos
and
add
lea
jne
add
repz
jne
test
add
incl
mov
mov
clc
add
adc
adc
add
push
adc
xor
add
add
insb
sbb
add
add
sbb
sbb
sbb
sbb
push
pop
lret
fs
jbe
inc
add
outsb
push
jne
adc
popa
imul
imul
insl
sub
add
lret
add
insb
fs
cmp
popa
gs
cli
jae
outsl
jne
inc
gs
xor
popa
inc
jne
and
lcall
add
add
add
add
add
add
add
add
stc
add
les
dec
cmp
nop
inc
std
pop
mov
pushf
pop
cmp
enter
dec
cwtl
out
mov
add
mov
add
xor
insl
inc
int3
lods
cld
ffreep
lcall
sub
push
in
out
pop
sub
mov
pushf
shl
jle
lret
mov
jmp
fmuls
pop
fisttpll
mov
sbb
xchg
push
sub
das
jo
pop
sub
lcall
fs
mov
sub
mov
fldt
ror
icebp
jns
cmp
sub
xchg
stc
mov
pop
aam
pop
adc
loope
into
push
cmc
rorb
pop
jge
loop
sbb
shll
xchg
icebp
jno
divl
jno
jo
jge
adc
lret
aaa
ljmp
addb
cmp
dec
imul
stc
arpl
sbbl
cmc
outsb
xchg
dec
test
adc
xchg
or
popf
shll
mov
mov
stos
sub
sbb
testb
adc
movsb
push
imul
jb
add
push
arpl
xchg
ss
dec
adc
lods
push
sbb
push
and
call
lods
or
test
or
cmp
aas
dec
rcll
jp
mov
cmp
jl
cmp
push
loopne
or
jl
xor
sbb
mov
out
insl
mov
adc
jp
cmp
popa
or
loope
stc
ret
cltd
adc
rcrl
cld
sti
outsb
add
cmpsl
mov
or
arpl
mov
test
ficoml
pop
and
jne
pop
push
test
pop
pushfw
lock
cmp
arpl
mov
aaa
and
out
and
pop
outsb
jecxz
int
mov
xchg
and
mov
shlb
mov
and
cmpsb
int3
lret
out
jl
mov
jge
xor
es
add
repz
inc
pop
mov
test
mov
into
adc
or
push
and
sub
into
push
inc
sub
cmp
movsl
cmp
jp
push
stos
mov
sbb
fbld
cld
jbe
dec
das
fxch
push
test
inc
mov
mov
cmp
popf
or
or
push
xor
or
add
xchg
or
dec
xchg
imul
push
xchg
or
xor
mov
out
add
mov
aaa
jns
xchg
xlat
push
rolb
imul
nop
push
mov
pop
testb
jp
inc
lcall
aaa
sub
mov
in
inc
jns
les
loop
pop
jb
fisttps
push
xorl
imul
lcall
test
dec
mov
fcoml
xchg
inc
and
cmp
xlat
jge
mov
lahf
jae
mov
jmp
popl
call
idiv
push
mov
xchg
sbb
mov
lea
shrb
jns
shlb
and
xor
push
push
adc
cmp
or
lods
enter
pushf
mov
jmp
jns
cmp
sub
inc
mov
xchg
and
jo
mov
adc
pop
add
call
bound
test
rolb
dec
fistpl
pop
ret
inc
roll
int
int3
cmp
mov
sti
pop
jle
fmull
outsb
mov
outsl
cmp
fsubrl
ljmp
fisubs
mov
insl
xchg
repnz
push
cmpsl
mov
xor
xchg
cmp
xor
sbb
out
pop
mov
or
adc
mov
ja
mov
sbb
inc
cmpsl
dec
mov
pop
shlb
pop
push
adc
xorb
test
inc
cmp
cmp
and
in
jno
mov
int3
out
andl
sub
push
sbb
sub
push
cltd
test
push
mov
pop
into
sub
scas
ret
xchg
mov
inc
inc
dec
mov
and
xor
push
cmp
push
jbe
js
cmp
sbbb
cmp
jb
dec
dec
xchg
mov
adc
mov
add
rcl
and
mov
dec
mov
lret
out
dec
mov
gs
lods
push
sub
bound
sbb
sub
scas
mov
mov
addr16
cmc
sub
push
xor
xor
sbb
mov
mov
mov
aas
cmpsl
sub
in
mov
enter
jne
inc
add
mov
xor
mov
sub
pop
sub
push
mov
adc
fmull
push
lds
sbb
pop
pop
lret
or
push
mov
dec
gs
loop
jl
mov
mov
loope
addb
pop
ljmp
push
test
and
paddd
or
pop
mov
mov
negl
pop
lret
push
scas
repnz
add
and
mov
sbb
xchg
adc
popf
push
add
or
xlat
fucomi
bound
hlt
loopne
sub
movsb
pop
jle
movsb
fmuls
mov
cltd
aam
push
faddl
mov
or
dec
fwait
push
and
lods
fnsave
fisubrl
out
jo
lea
aaa
mov
adc
adc
push
jle
xchg
mov
xor
sub
mov
pusha
in
xchg
sub
xchg
lods
outsl
jae
js
push
fidivrl
pusha
repnz
and
loope
jl
dec
dec
lcall
xchg
push
lock
mov
adc
pop
cmp
push
rcll
sti
adc
dec
or
push
aad
out
sbb
cmp
sub
inc
pop
ret
imul
test
mov
test
jo
jmpw
adc
adc
sbb
jle
aad
movsl
inc
or
adc
pop
mov
push
mov
mov
icebp
and
sbb
pop
dec
aam
dec
mov
mov
adc
xchg
inc
ret
fcompl
xor
mov
mov
in
ljmp
sti
and
inc
cmp
xchg
push
faddl
adc
cwtl
xor
mov
jnp
gs
in
dec
les
data16
adc
cmc
daa
fcom
je
lds
sbb
pop
shll
push
xor
popf
movsl
mov
mov
pop
cmp
addl
xchg
add
jle
add
jne
dec
lret
pop
jmp
out
adc
xor
push
int
je
lods
add
lahf
enter
int3
or
in
push
mov
jae
les
repz
popa
lret
pushf
pop
xor
push
inc
mov
mov
mov
adc
sbb
inc
shrb
test
iret
jbe
sbb
mov
mov
fldcw
xor
cmp
fcoms
int
test
lahf
fistpl
shll
mov
mov
mov
sub
push
sti
pop
jl
xor
xchg
sub
loop
and
nop
je
cmp
pop
fisttpl
movsb
gs
mov
xor
sti
pop
in
call
inc
sub
xor
mov
jne
popf
pop
pop
or
cmp
or
lods
pop
jne
into
lret
push
icebp
orl
sub
fs
adc
jne
push
mov
or
and
sbb
mov
jl
xchg
push
cmp
mov
lcall
sbb
rorb
icebp
int3
in
ss
and
rol
push
lret
idivl
clc
int
fs
jl
xchg
sahf
pop
lock
and
scas
add
push
imul
push
push
leave
inc
pushf
adc
cmpsb
dec
rcll
jbe
mov
addl
das
xchg
sub
outsl
push
sub
addr16
ss
ja
jno
adcb
push
inc
jmp
mov
lret
xchg
pop
push
and
pop
push
pop
dec
mov
jbe
inc
xor
xor
mov
cmp
inc
outsb
xorl
inc
jae
inc
je
std
loop
jle
ss
ret
ja
jae
out
jge
and
fwait
cmp
mov
std
lret
xchg
pop
jl
aas
mov
xor
lea
js
pushf
in
sbb
mov
scas
jmp
lahf
in
adc
mov
mov
mov
push
mov
leave
shrl
enter
lea
inc
mov
lea
clc
sub
mov
mov
mov
fcomps
loop
insb
add
inc
fidivrl
fstps
pushf
mov
and
push
dec
inc
pop
test
jo
out
push
mov
loope
mov
ret
fcmovnb
fstpl
add
std
imul
leave
jb
cmpsl
psubsb
xchg
or
insl
xchg
stc
out
xlat
sbbl
ret
test
jnp
pop
adc
or
xor
push
inc
cltd
inc
rorl
dec
in
jno
outsl
leave
push
scas
adc
mov
push
aas
push
dec
sti
fucomi
jbe
mov
arpl
cmp
inc
es
rcrb
and
je
loop
mov
aad
popf
mov
jle
mov
imul
mov
jge
mov
pop
cli
lea
insb
mov
add
jg
cmp
pop
insl
arpl
sub
jmp
adc
lock
push
cwtl
cs
dec
pusha
inc
fbld
add
out
loope
cmp
pop
push
cmp
scas
cmp
cmp
sbb
push
xorb
mov
inc
xor
subb
out
mov
aas
add
ljmp
add
lods
xchg
aam
xchg
movsb
pop
or
mov
stos
mov
cld
test
mov
jns
inc
test
int
mov
ljmp
or
inc
stos
stos
jno
or
outsl
subb
scas
insl
pop
test
jmp
ljmp
cmp
cmp
outsl
push
add
xor
sub
mov
dec
pop
and
data16
jecxz
xchg
push
dec
sub
push
in
rcll
and
mov
movsl
fucom
xor
dec
jbe
mov
incb
les
pop
cs
cmp
call
mov
pop
mov
add
cli
jb
ficomps
into
mov
ftst
aas
inc
adc
jp
aad
imul
dec
adc
lea
and
ljmp
mov
ret
roll
loope
fdivp
mov
dec
mov
test
push
xchg
fcmovnbe
popf
js
mov
push
sbbb
cmc
fdivs
and
pop
sub
pop
mov
add
test
pop
sbb
push
cmovle
enter
popa
mov
sbb
inc
es
idivl
dec
cmpsl
movups
fdivs
inc
cwtl
ret
xchg
ret
pop
ljmp
call
outsb
jo
inc
aam
push
bound
push
bound
enter
fsubrs
and
xorl
jno
leave
mov
mov
xor
or
cmp
daa
add
decl
clc
sbb
mov
push
xchg
leave
cmpsl
mov
aas
aas
sbb
pop
out
sub
cltd
sbb
pop
lahf
cmp
xchg
gs
clc
push
inc
cmp
mov
push
mov
mov
xor
pusha
mov
insb
xchg
je
aad
cmp
sub
sub
fsub
push
pop
dec
jnp
sub
mov
mov
insb
mov
push
repnz
lds
inc
cmpsl
mov
imul
sub
ret
cwtl
sbb
inc
shl
in
inc
jmp
add
in
cmc
add
shrl
lret
fisubl
insb
mov
push
loopne
or
mov
and
jg
xor
test
push
pop
pop
push
testl
xor
pop
gs
fcmovbe
and
in
mov
rcr
aad
fistpll
xchg
and
into
jle
jb,pn
daa
in
cmp
rcll
rcr
pop
mov
sbb
fstpt
fucomi
fidivs
orb
decb
jae
loopne
shll
gs
enter
in
add
cmc
xorb
enter
jmp
adc
mov
repz
inc
lock
cwtl
add
je
cmpsl
lds
jg
mov
cmp
jo
mov
lods
dec
lea
dec
pushf
lock
xor
jnp
xchg
call
xor
xor
jbe
fnstsw
daa
orb
addr16
bound
inc
push
rcl
push
add
movsl
adc
jp
xchg
cltd
cmpsl
incl
outsl
ds
jb
fildll
inc
adc
mov
rorl
jle
xchg
sbb
sti
push
lock
insl
shlb
decb
dec
cmpsb
ret
shll
jb
pop
in
jbe
insl
popf
cmp
bound
loope
stos
cmp
movsb
jne
int3
cmc
dec
push
imul
mov
ljmp
loopne
fsts
fs
loopne
aas
mov
cwtl
dec
sub
sbb
ret
jge
push
insl
xor
scas
nop
inc
subb
or
shl
push
mov
nop
js
addb
dec
hlt
sbb
xchg
mov
out
jg
push
push
mov
inc
inc
inc
and
push
and
pusha
push
dec
mov
mov
adc
daa
dec
push
lahf
jmp
xchg
fisubl
repnz
pop
rcll
andl
xchg
call
sub
jns
jp
jecxz
push
cmp
fildl
sbb
outsb
inc
xor
bnd
sbb
push
gs
mov
imul
scas
add
jge
dec
jmp
sti
stos
jg
mov
inc
push
push
inc
les
imul
jg
pop
popa
push
sub
int
xchg
mov
pop
jge
mov
xor
loop
mov
sbb
movsl
dec
imul
jle
mov
movsl
testl
dec
mov
sub
test
cmpsb
push
fwait
add
aaa
mov
bnd
jno
es
mov
testl
jmp
dec
fcmovne
jmp
fisubl
lea
jb
arpl
mov
fidivrs
out
xchg
dec
ss
mov
aaa
aad
adc
cmc
movsl
push
and
lcall
cmp
rcr
addb
jb
test
scas
shrb
fbstp
divb
jnp
pop
imulb
ret
mov
hlt
xor
in
sbb
sar
pop
std
cmp
sahf
loopne
jecxz
scas
adc
mov
push
or
insb
je
imul
push
xchg
cmpsb
jp
daa
fstl
aas
movsb
lods
push
daa
insl
sbb
pop
mov
test
les
aaa
mov
adc
ss
cmp
lret
pusha
xchg
icebp
out
inc
das
fs
dec
clc
mov
in
mov
stc
aas
fcmovb
mov
das
mov
enter
mov
xor
int3
es
jns
mov
fs
dec
add
fstps
test
sbb
inc
clc
inc
test
dec
jg
cltd
sarb
cmpl
dec
out
repz
arpl
sub
fs
rclb
je
icebp
xchg
in
cld
and
rolb
stos
add
adc
push
leave
sub
sub
push
psllq
out
jno
push
inc
push
mov
adc
add
sbb
xchg
rolb
sub
xchg
fdivl
push
push
cmp
push
xor
sub
inc
test
sti
jo
out
add
loopne
call
jae
nop
subl
xchg
cmp
xchg
je
pushw
inc
or
pop
inc
test
inc
daa
or
pop
jg
int3
sub
pop
sub
dec
aaa
adc
adc
mov
pushf
mull
loopne
bound
adc
lock
or
sbb
sub
mov
int3
mov
icebp
loop
repnz
push
das
mov
mov
insb
ss
lret
arpl
pminub
dec
cltd
sub
std
and
js
push
xchg
adc
lret
jmp
push
mov
jp
sbbl
es
enter
mov
jl
jge
lahf
jge
xlat
orb
into
pop
fs
daa
in
inc
nop
lcall
mov
add
test
and
sti
ret
jb
dec
mov
and
or
xchg
dec
xor
lcall
add
inc
push
fnstenv
in
xor
mov
and
adc
cld
and
push
xor
push
and
jle
jg
daa
das
xchg
mov
setno
sub
dec
lds
ja
adc
test
aaa
in
lret
repz
fdivrp
popf
aad
pop
mov
ljmp
fwait
outsb
and
dec
and
popa
aaa
stos
or
into
arpl
lret
xchg
add
rol
mov
cmp
cmp
int
in
aaa
jbe
lods
fcoml
mov
pop
test
insb
mov
mov
and
test
push
xor
and
lea
xchg
push
ja
jp
popf
xor
add
jno
out
cltd
cmp
push
aas
pop
or
xchg
inc
hlt
sub
cmp
aam
pop
sub
inc
insl
shll
int
xchg
dec
adc
xorl
pop
das
xor
mov
inc
hlt
je
lcall
xchg
inc
inc
adcl
loope
jne
fdivrp
stos
ficomps
mov
je
jg
jno
mov
rorl
imul
test
push
sahf
mov
out
mov
scas
icebp
add
xchg
mov
int
pop
dec
adc
fs
mov
test
dec
cltd
sbb
push
icebp
andb
or
cld
loop
data16
sbb
mov
push
shll
repnz
jecxz
add
imul
fdiv
mov
clc
cmp
push
dec
push
jmp
fbstp
popa
roll
adc
insl
dec
xchg
xchg
stos
push
or
sub
mov
mov
popf
cmp
repnz
fsts
sub
es
ds
sub
sub
xchg
iret
add
enter
push
dec
xor
fwait
mov
mov
sub
adc
ds
pushl
sbb
arpl
into
les
adc
addb
cwtl
je
add
sbb
add
mov
mov
or
add
add
add
add
flds
add
add
add
add
add
add
add
add
add
add
or
add
add
jecxz
add
xor
sbb
sub
mov
sub
add
adc
dec
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
add
add
mov
add
add
add
popa
add
add
add
add
add
mov
add
add
add
push
add
scas
fs
adc
imul
push
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
sbb
lea
pop
pop
fadds
add
in
or
inc
sub
ljmp
clc
cmp
or
or
mov
cld
outsl
inc
pop
mov
add
cld
adc
push
insb
leave
leave
inc
mov
pop
xor
adc
add
enter
fdivr
mov
adc
add
adc
push
add
xor
adc
call
push
add
add
lcall
push
cld
add
push
and
addl
cld
inc
xor
add
add
incl
jne
lret
jle
dec
xor
adc
call
daa
adc
push
add
add
out
in
js
add
adc
movb
add
xor
dec
push
or
xor
add
insl
jb
je
js
outsl
outsl
outsb
iret
je
add
insb
add
outsb
outsb
jb
outsb
jns
mov
gs
xchg
add
imul
scas
addr16
push
insb
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
add
add
add
incb
add
add
add
add
add
add
outsb
add
add
add
aaa
add
add
ror
pop
adc
data16
pop
xor
jbe
mov
jmp
jmp
test
bound
je
jne
fidivrl
jle
mov
out
shlb
arpl
fbld
addr16
subb
call
mov
test
enter
inc
dec
int3
mov
addl
outsl
es
mov
push
loope
dec
cmpsl
mov
sysexit
scas
call
dec
xor
punpckhwd
add
movsl
lret
gs
rorb
addb
notb
cmc
mov
adc
inc
pop
xor
fsts
mov
lea
popa
jbe
cmpsl
movsb
jns
imul
lds
dec
arpl
xchg
cwtl
sub
lods
repz
hlt
xchg
jge
push
push
jmp
pop
xor
incb
test
cwtl
mov
fsts
xchg
into
lcall
sbb
inc
add
test
or
mov
pusha
mov
dec
int3
jns
ljmp
and
fwait
xchg
imul
lret
ss
cmp
into
push
cltd
mov
scas
loopne
out
std
sbb
xlat
inc
js
repnz
inc
shrb
out
adc
mov
cli
sbb
xchg
add
pop
flds
in
mov
inc
call
cmp
or
sbbl
mov
mov
push
aad
movsl
xor
or
outsl
mov
sbb
mov
into
cmp
lods
xor
mov
push
or
push
cmp
in
pop
add
mov
int
pushf
mov
stos
dec
cli
ror
adc
mov
fdiv
fsubr
mov
cmpsl
cmp
lea
mov
lods
outsb
sbb
pop
es
in
dec
pop
sbb
insb
push
sbb
fiaddl
push
lret
dec
scas
call
mov
aad
xchg
frstor
aad
int3
aam
cmp
in
fnstcw
mov
and
ret
lea
ss
push
cwtl
hlt
in
fst
pop
in
popa
dec
movsb
mov
mov
inc
xlat
movswl
or
inc
and
sbb
lock
mov
ret
push
ljmp
mov
or
push
in
shll
xorl
sbb
jmp
decl
push
arpl
xor
ljmp
inc
test
and
je
sbb
cmp
lds
int
and
cmp
xchg
lea
rolb
pushf
mov
lcall
dec
ljmp
adc
push
aam
cmp
inc
out
xchg
lahf
xchg
adc
enter
outsl
out
pop
mov
inc
pop
mov
jae
dec
dec
inc
cmp
pop
sub
dec
mov
xchg
iret
xor
loopne
popa
bound
cs
in
or
jne
lock
fistps
test
cmp
cmp
sti
notl
xchg
fldcw
icebp
mov
dec
xor
js
xchg
sahf
fwait
nop
mov
aad
inc
scas
inc
xor
ja
pushf
mov
xor
jae
sbb
fwait
arpl
divb
sbb
and
adc
add
xor
call
test
cmpsb
divb
outsl
jle
mov
cmp
outsb
add
arpl
cmpsl
or
cmp
adc
add
repnz
jp
inc
imul
in
dec
arpl
push
xchg
ds
add
pop
xor
mov
fcomip
loopne
mov
mov
shr
in
mov
int
imul
mov
out
sbb
push
fisubs
inc
inc
push
dec
push
and
test
mov
sti
push
scas
movsb
enter
adc
jle
js
push
xorb
fcmovnu
push
rorl
pop
fwait
mov
cli
out
dec
lcall
adc
clc
movsb
lods
xor
cli
aam
out
aas
imul
testb
mov
stos
jno
jo
insb
idivl
xor
lods
ret
and
dec
mov
lea
sbbl
pushl
inc
outsl
cmp
add
or
cmp
mov
and
dec
xor
test
push
movsl
sub
lods
sbb
inc
scas
ficoml
dec
cltd
sbb
sbb
movsl
sub
fcomi
push
aam
jne
jmp
dec
xorl
xor
sarl
pop
shrl
pop
fcmovbe
add
repnz
sbb
inc
push
xchg
std
jp
cmp
fcmovbe
cmp
sbbl
in
push
sbb
adc
jecxz
fdivrs
cs
loop
roll
aad
push
inc
add
adc
sbb
mov
adcl
adc
cli
fnstsw
test
mov
mov
mov
cltd
xchg
mov
ljmp
mov
outsb
andl
loope
push
sub
or
cmp
push
rol
insl
sahf
jp
mov
push
arpl
xor
add
push
xchg
and
cmp
push
out
cmp
addr16
stos
fldt
adc
push
xor
mov
cmp
cmp
popf
inc
jb
scas
mov
rorl
aaa
pop
xchg
addb
dec
lret
pop
and
or
out
nop
adc
jl
sbb
es
in
fwait
loopne
jb
cmp
mov
push
rclb
mov
add
xchg
and
stos
xchg
fldl2t
leave
pop
idivb
push
mov
and
lea
stc
dec
pop
nop
or
xor
hlt
mov
lahf
insb
ljmp
neg
mov
add
dec
push
mov
aas
fsubrs
xchg
jp
vprotw
pop
nop
jb
cmp
mov
mulb
xchg
fcoms
push
xor
lcall
sub
mov
sbb
jns
cmc
adc
icebp
push
in
lods
cli
sbb
fwait
and
xchg
test
xchg
fiaddl
mov
push
fldcw
popa
in
scas
pop
sub
pop
cmp
dec
add
sti
sub
xor
jbe
shr
ret
ljmp
nop
xor
stos
jg
mov
insl
aas
push
dec
jge
or
sahf
insl
repnz
mov
test
lahf
test
xchg
rolb
sbb
cmp
cmpsb
pop
imul
pop
and
mov
jne
dec
fcmove
pop
lods
imul
imul
push
dec
push
jae
push
jle
int
daa
mov
test
mov
cmc
fistps
scas
mov
rcrl
adc
rcll
or
out
bound
inc
insl
mov
addl
cltd
or
xchg
out
cmp
jae
xchg
lcall
addl
adc
iret
aas
test
cli
leave
adc
jmp
jle
xchg
mov
pushf
fisttps
adc
sbb
std
push
jo
rolb
xlat
jmp
out
popf
leave
or
clc
sub
movsb
add
leave
mov
sbb
dec
or
int3
test
ret
loope
push
mulb
lock
fstl
lahf
or
pop
push
flds
icebp
inc
or
xchg
andb
mov
out
pop
outsl
cwtl
pushf
xchg
xchg
cmp
pusha
lret
es
lods
stos
adc
mov
mov
imul
fdivrp
nop
rorb
mov
stos
rorl
sbb
fs
or
jns
pop
cltd
out
idivl
dec
arpl
sbb
test
jnp
cmpsb
dec
fs
xchg
dec
dec
lods
xor
loope
lcall
clc
es
jb
filds
loopne
std
shl
test
ss
loopne
adc
call
repz
setp
jle
leave
in
adc
movsb
dec
fildll
das
adc
imul
data16
mov
dec
xor
mov
sbb
mov
push
lahf
int3
dec
mov
sbb
popf
aad
cmpsb
loop
xchg
dec
pushf
rcll
jl
sub
sub
movsl
xchg
sbb
sbb
xlat
adc
push
cltd
pop
mov
xor
das
push
jmp
cli
jns
sub
ljmp
xor
jp
cmp
push
add
notl
repnz
push
dec
mov
pop
mov
mov
lods
dec
mov
add
andb
aam
jnp
cmp
in
xchg
nop
add
ftst
inc
xchg
repnz
adcl
int3
push
cmp
jno
xchg
push
add
test
addl
pop
inc
jns
sarb
jge
test
add
sub
mov
outsb
xor
inc
xor
js
add
decl
inc
add
mov
shll
cmp
mov
xor
lods
pushf
sub
jns
dec
sub
test
sbb
fstps
xorl
mov
adc
outsb
and
js
or
sbb
repz
sti
fcmovb
and
out
jns
inc
mov
push
or
int
add
popf
lds
es
adc
aad
loop
adc
adc
out
xchg
cmp
xchg
sti
xchg
mov
aad
xor
xor
js
popf
fidivrl
mov
andb
mov
xor
insb
clc
lahf
es
pop
stos
out
lods
jbe
inc
sbbb
mov
andl
fdivp
dec
popa
fisubrs
cmp
outsl
sbb
pop
mov
or
sub
lret
jo
dec
mov
movb
push
mov
dec
lock
dec
jne
or
call
and
cs
addl
cmpxchg
outsl
pop
xchg
xchg
cltd
movsl
scas
lods
mov
add
insb
or
pop
inc
mov
in
call
adc
cmc
std
jo
aad
cltd
lret
pop
or
in
sub
mov
lcall
add
movsb
ret
sub
imul
rclb
xchg
mov
adc
lcall
inc
rorl
ja
inc
incb
aam
and
pop
js
das
fstl
xor
or
and
ja
lods
std
mull
sub
neg
lods
or
or
or
mov
add
jge
pop
push
dec
dec
daa
xor
and
int3
pop
adc
mov
into
jle
mov
and
repnz
or
xchg
aaa
xorb
fs
cmp
xor
xchg
rolb
mov
xor
out
jae
cmp
adc
mov
scas
ret
jb
add
pop
mov
dec
mov
decl
pop
cld
sub
lea
mov
mov
out
xchg
scas
stc
add
test
ficompl
ret
lock
xor
jbe
stc
outsb
sub
or
xor
popf
std
and
adc
movsb
dec
cmpsl
mov
aam
gs
sub
mov
dec
faddl
dec
cmpsb
xchg
xor
fwait
out
inc
jecxz
mov
xlat
xor
test
jl
and
jns
sub
cmpsb
mov
pop
jae
sub
rol
call
sub
mov
loope
mov
or
popa
ljmp
addb
fnstcw
or
adc
bound
scas
lea
mov
mov
push
mov
mov
jecxz
mov
sarl
pusha
insl
shrb
lods
cmp
aad
jle
ret
and
add
addr16
mov
int
mov
dec
outsb
jb
sub
jo
mov
inc
iret
dec
test
or
inc
xchg
stc
adc
inc
sbb
es
std
push
clc
fstpl
pop
or
cmpsl
jne
pop
inc
movl
jmp
add
cmpsb
dec
sti
iret
sahf
mov
jle
imul
std
push
adc
or
aam
sub
mov
pop
xorb
fcomps
ljmp
dec
sbb
xchg
add
fnsave
mov
xchg
add
and
ljmp
cmpsb
in
mov
sbb
adc
fdivl
ret
test
orb
in
aas
jb
sti
or
aaa
jno
cmp
in
cmc
jae
add
xor
stos
notb
mov
inc
dec
jno
hlt
js
push
shl
and
pop
ret
int3
cmp
dec
mov
insb
pop
scas
mov
mov
lret
jge
andl
enter
and
fcmovbe
enter
das
filds
push
xchg
or
adc
xlat
jo,pt
es
in
bound
jbe
add
jne
mov
orl
shll
rolb
addr16
test
and
aas
or
mov
fdivl
push
push
add
out
jb
jnp
sub
arpl
sbb
push
daa
stos
std
dec
insb
je
fs
fisubs
sbb
out
mov
das
int
xorb
aas
or
jo
decb
jl
push
or
sti
xchg
in
or
scas
push
cld
addr16
inc
jg
pop
and
cltd
xchg
dec
fldl
jbe
push
jbe
repz
insl
jbe
dec
hlt
mov
sub
jmp
or
test
mov
pop
and
cmp
jb
push
cmp
push
data16
mov
inc
mov
into
insl
add
fsubrl
xchg
mov
sub
rcrl
jmp
mov
loope
sti
push
xchg
rcll
xorl
into
sbb
test
mov
and
and
jns
aaa
or
adcl
dec
add
push
mov
inc
push
into
jl
cs
inc
pop
movsl
shl
sbb
xlat
fs
and
int3
in
and
cmp
subl
flds
loop
jb
ret
out
mov
cmp
rorl
jae
xchg
push
xchg
insl
in
xlat
sbb
jg
add
fnstenv
rclb
sub
xchg
jo
xchg
in
mov
dec
mov
cltd
test
xchg
into
icebp
imul
and
push
push
sti
xchg
cwtl
sub
fmuls
pop
js
enter
test
dec
sarb
stos
adc
mov
push
sub
jmpw
repz
and
xorb
fstpt
sbb
pop
xchg
or
pop
sub
adc
xor
shlb
and
or
push
out
jg
jno
insl
cmp
xchg
or
leave
push
fbstp
test
or
sub
pop
fbstp
notl
int
jb
outsl
into
inc
jbe
mov
int3
loopne
jb
or
xorb
popa
mov
fadd
lock
mov
bsf
jge
int3
sbb
jp
gs
xchg
in
push
jl
ret
sbb
mov
arpl
pusha
push
fwait
jae
add
jmp
sbb
mov
cwtl
push
das
cmp
adc
fistl
rorl
cmp
sbb
scas
es
lds
pop
daa
out
sub
pop
adc
stos
sub
xchg
fcompl
test
aas
jl
mov
lret
dec
push
and
data16
pop
pop
jns
test
add
mov
jnp
pop
out
shll
pop
xchg
push
iret
in
in
sbb
xor
sbb
sbb
loop
loop
shrl
pusha
dec
scas
in
add
loope
dec
mov
push
bound
add
sti
cmpl
fcoms
and
add
loope
jae
shll
or
push
sbb
pop
popf
popf
scas
mov
xchg
iret
pop
pop
dec
and
leave
filds
mov
xor
lods
dec
mov
push
cmp
mov
movsb
adc
cmp
test
int
pop
mov
cmc
xor
in
mov
and
mov
mov
and
jae
enter
enter
push
jns
fdiv
ficompl
scas
xchg
ss
aas
sub
cmc
pusha
popf
xor
cmp
xor
loopne
xor
out
mov
sbb
out
repz
iret
and
add
dec
je
cmp
test
mov
pop
xor
repnz
repz
adc
mov
addr16
xor
jns
jl
push
in
in
and
and
negl
test
testb
subb
in
aaa
xor
daa
scas
movsb
cmpl
sahf
test
xchg
insb
loopne
pop
mov
lock
push
or
out
cmpsl
iret
fistl
std
jge
xchg
push
cs
pop
movsl
dec
pop
mov
mov
sbbl
hlt
imul
movsl
leave
aad
mov
push
xchg
fisttps
sub
shl
jge
xor
xchg
push
out
jmp
push
fldt
filds
mov
push
popa
std
movl
push
mov
dec
jns
lcall
rcll
push
and
mov
adc
dec
jl
push
mov
adc
push
mov
pop
sub
js
or
mov
iret
fcomip
push
pop
jo
and
xor
pop
ljmp
xorb
and
dec
or
sub
mov
xchg
icebp
fs
dec
adc
test
jbe
outsl
imul
imul
sbb
xor
push
cmp
adcb
das
subb
pop
ja
mov
add
lret
ja
sub
mov
xchg
sbb
aaa
cmpsl
xor
sub
movb
mov
vmwrite
xchg
mov
mov
add
ficomps
xlat
lods
test
push
repnz
popa
das
ficoms
aaa
jnp
lock
adc
pop
insl
mov
and
cmp
push
out
outsb
jb
test
push
clc
pop
xorb
loop
mov
mov
out
mov
jnp
sbbl
pop
inc
lods
out
sub
repz
aam
inc
andl
subl
dec
cltd
int
pop
fcmove
xchg
out
shrl
rep
fistl
stc
scas
sbb
lock
out
pop
les
sub
je
adc
rcl
jbe
sub
push
mov
int
insb
jbe
adc
jl
adc
jp
pop
mov
push
je
adc
jns
xchg
test
int3
outsb
rcr
leave
mov
out
inc
push
xor
ljmp
inc
xor
faddl
xor
pop
fucom
outsb
push
mov
bound
mov
enter
mov
test
pusha
push
iret
lea
es
loope
mov
mov
ret
aaa
xchg
pop
clc
lcall
test
jle
fwait
mov
mov
insl
pop
es
mov
cs
dec
jecxz
aas
push
xchg
mov
insl
xchg
gs
pop
sbb
pusha
xlat
push
in
cmp
in
and
push
imul
sbb
sbb
xlat
fistl
xchg
xor
mov
or
fnstcw
pop
jb
xchg
sub
loope
in
shl
jle
dec
ljmp
in
mov
scas
sub
xor
add
add
add
add
scas
add
add
add
ja
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
outsb
add
adc
add
filds
adc
pop
add
and
sahf
adc
inc
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
outsl
add
add
dec
jo
mov
add
add
add
add
add
add
add
sldt
add
add
js
dec
add
je
add
add
add
add
add
add
das
add
add
add
and
cs
push
outsb
shll
jae
dec
jae
jb
inc
and
add
or
leave
push
js
dec
adc
lea
jecxz
cmc
pop
lea
or
testb
je
jmp
test
adc
push
clc
add
push
pop
or
cmpb
jmp
push
push
lcall
push
das
adc
sarb
sub
add
push
incb
call
mov
incb
push
add
je
push
push
cmp
add
and
cld
dec
adc
mov
push
add
loopne
adc
lea
loopne
clc
pop
enter
inc
push
adc
adc
add
push
add
add
add
add
add
add
add
incl
add
add
add
add
add
inc
add
arpl
imul
add
arpl
je
inc
mulb
jns
dec
add
mov
inc
insb
insb
dec
das
imul
jns
cmp
push
add
mov
dec
imul
add
add
add
push
pop
sahf
out
add
add
movsl
push
fidivl
push
mov
push
kxnorw
cmpsb
gs
xchg
addr16
mov
clc
iret
sub
inc
or
insb
iret
iret
inc
cmp
call
cli
and
jp
or
das
xor
mov
add
stos
call
push
jne
push
loope
cli
push
cmp
mov
fldt
mov
dec
ds
jg
std
cmpsl
xor
adc
addr16
mul
xchg
mov
bound
mov
mov
push
out
shrl
cld
fmulp
xorl
sbb
jl
cmp
fidivl
inc
aad
mov
inc
fcmovne
add
and
sbb
iret
div
lea
rcr
and
adc
loop
inc
data16
pop
les
jo
stos
incb
push
rcll
add
popa
aas
lret
pop
movsb
push
stc
xchg
jnp
aaa
pop
ljmpw
jbe
shll
xor
jae
xor
sbb
cmpsb
dec
cmp
and
clc
in
mov
add
data16
push
std
sbb
mov
mov
int
adc
cmp
leave
xor
repnz
in
or
sti
xchg
popf
dec
adc
xchg
popf
cmp
sub
dec
xchg
pop
mov
cltd
outsl
mov
cmpsb
mov
and
repnz
test
arpl
mov
inc
dec
mov
sub
push
int
cs
sahf
and
dec
pop
jo
dec
pop
aam
aam
loopne
popf
movsb
ljmp
push
sti
xor
xchg
negb
ret
dec
jp
and
cmp
rorl
pop
cmp
lret
jns
add
inc
das
sbb
cmp
sbb
cwtl
nop
in
push
scas
fucomip
mov
inc
test
shl
loopne
push
mov
std
mov
xchg
loope
mov
or
insl
out
ja
lcall
or
sbb
addr16
lret
frstor
mov
sub
popf
mov
in
fdivr
int3
cmp
movsl
mov
scas
xor
lahf
stos
sbb
lods
mov
jns
fxam
nop
rcrb
aam
inc
lods
popa
fdivrp
subb
mov
test
pop
xor
pop
pop
xchg
push
mov
push
jge
push
or
daa
mul
std
pop
cli
daa
loope
adc
push
sbb
flds
adc
dec
inc
mov
cwtl
roll
out
push
fildl
jl
fdivs
imul
pop
jle
and
mov
and
fs
jb
push
leave
in
filds
mov
dec
and
shll
xchg
mov
outsl
repz
mov
and
add
add
push
mov
mov
fidivrl
in
and
xor
stos
add
cltd
andb
aad
les
mov
jl
xchg
cmp
daa
xchg
fisttps
data16
out
jl
xchg
call
jbe
lret
xor
xor
jp
lods
insl
test
sub
and
push
cmp
popf
push
inc
gs
mov
movsb
or
sbb
popa
gs
fidivs
inc
mov
addr16
jg
mov
mov
jb
popf
fbld
lds
repnz
push
fxch
push
or
stc
outsb
shrl
jg
test
sub
mov
add
fwait
pop
add
inc
mov
lahf
mov
pop
lds
icebp
test
mov
dec
shlb
das
add
sub
cld
add
lahf
icebp
jo
pop
and
ss
xlat
jae
sarl
in
xor
fstpt
cmp
mov
mov
es
shrl
inc
out
and
repz
jmp
jg
cmp
or
fisubrs
in
jg
jo
int
mov
das
pop
sti
call
mov
repz
xchg
jg
add
out
xor
lcall
cmc
in
sbb
mov
imul
xchg
inc
mov
ret
das
repz
xor
xchg
fwait
sbb
fisttpll
jecxz
and
sub
and
sbb
push
stc
mov
inc
int
dec
mov
xchg
jg
xchg
testl
ss
dec
int3
jp
push
or
pop
or
dec
movb
pop
out
mov
xchg
sub
in
ja
mov
mov
insl
jg
push
ret
hlt
fsubl
les
adc
sub
lods
dec
add
inc
outsb
push
popa
pop
jle
stc
xor
mov
or
ja
or
lea
sbb
jb
mov
aam
flds
cmc
filds
pop
popf
hlt
iret
lods
cld
loope
pop
add
daa
add
mov
in
sti
das
lods
jp
psubusb
jmp
add
and
dec
jne
pop
push
sub
sub
mov
fstps
xchg
pop
fcoms
sbb
incb
mov
sbb
or
sbb
sbb
fcomip
roll
cmp
sub
mov
adc
lods
movsb
negb
aaa
and
dec
lcall
push
lock
decb
imul
add
or
fwait
adcl
std
xchg
and
jno
push
push
and
push
dec
mov
xor
xchg
xchg
push
aaa
fnstcw
pop
mov
pop
jmp
xchg
mov
add
sti
add
sub
movsl
std
iret
push
clc
lret
push
cmpb
inc
ret
aaa
add
push
stc
pop
dec
in
repz
out
gs
cmp
ljmp
mov
dec
jno
inc
fiadds
mov
pop
pop
sub
int
ljmp
roll
cmpsb
nop
and
jmp
out
xchg
dec
jbe
loop
mov
inc
in
push
push
lock
packuswb
push
inc
imul
js
repz
add
aaa
call
fimull
outsb
pop
dec
ret
push
cli
ljmp
mov
movsb
adc
je
test
cwtl
and
inc
xchg
jae
insb
pop
outsb
out
mov
aaa
dec
mov
sti
lods
jne
outsl
test
push
xor
in
sub
or
fistps
emms
shl
inc
or
sub
es
mov
pusha
jle
push
jl
jp
mov
bound
popf
cld
jecxz
jns
fcmovnu
jnp
or
inc
sub
pusha
subb
cmc
aaa
outsb
loopne
cmp
mov
jae
push
xlat
inc
inc
sub
dec
adc
push
inc
je
lret
jo
sahf
jmp
je
cs
pop
repz
add
stos
adc
fists
xchg
dec
pop
lods
dec
in
je
shrb
add
and
jnp
lock
mov
xchg
sti
pop
sub
push
iret
cmp
jbe
cmpsl
add
iret
jne
and
sahf
shll
lods
hlt
shlb
lcall
lcall
push
lahf
mov
testl
sub
sbb
insb
imul
js
xor
sub
test
loop
mov
inc
clc
cld
fmuls
pusha
sarb
and
les
cs
cld
mov
pop
aam
ret
xlat
and
in
loope
push
mov
push
adc
sub
cmpsb
aam
add
scas
dec
insb
scas
pusha
or
mov
inc
jo
lock
sub
jne
sub
jne
push
sarl
adc
mov
lea
test
inc
pop
inc
movsl
lcall
adc
jo
sub
inc
aam
insl
push
adc
call
aaa
jo
and
sub
push
jno
ss
test
out
mov
add
pusha
xor
xchg
adc
pop
lret
push
sbb
shl
iret
movsl
mov
mov
hlt
add
mov
push
mov
loop
lock
pop
std
jno
cmp
lods
push
sbb
aas
push
lods
and
insb
cli
mov
pop
inc
mov
push
cli
aam
repz
or
mov
sbb
xorl
fildl
cwtl
lret
pop
sub
mov
push
sub
outsb
mov
sbb
push
add
std
pop
mov
inc
ljmp
cmpsb
popa
icebp
les
push
dec
mov
jle
lret
and
push
mov
loopne
mov
dec
cld
adc
ret
sbb
lods
ljmp
jmp
clc
fistpl
fs
test
xchg
mov
dec
sbb
fsubr
adc
jl
pop
js
jge
hlt
add
adc
jecxz,pt
inc
and
and
inc
out
icebp
lods
lock
jo
xlat
and
or
fimull
sub
mov
jbe
movsl
js
lea
and
imull
loop
cmp
pop
mov
jns
and
std
stc
out
or
cmp
mov
stos
or
dec
adc
pop
mov
imulb
lds
sti
xor
pop
push
cli
mov
es
imul
xchg
inc
adc
loope
sarl
xchg
inc
test
cmpsb
and
mov
icebp
push
mov
sub
out
gs
scas
cs
adc
inc
cld
inc
loop
mov
xor
test
lret
mov
pop
jae
cmpsb
mov
aam
repnz
inc
add
mov
adc
dec
or
pop
xchg
sar
dec
icebp
je
add
xor
mov
rol
cmp
ret
jno
add
les
jns
dec
cmpsb
dec
lcall
addr16
pop
dec
pop
jno
mov
jne
push
mov
jae
push
pop
mov
jmp
scas
mov
xlat
push
pop
test
loop
mov
enter
scas
adc
test
mov
xor
shll
push
push
lods
out
mov
mov
mov
dec
lea
cmp
inc
hlt
adc
mov
inc
iret
out
mov
gs
jg
ds
jo
inc
jno
fsubr
ja
xor
adc
adc
bound
dec
inc
addr16
xchg
and
adc
arpl
xchg
dec
mov
stos
fwait
mov
inc
xor
clc
pop
jge
lcall
es
popa
xchg
hlt
cmpb
xchg
pop
shrb
dec
or
cltd
cvtps2pd
jecxz
pop
jle
in
xlat
xchg
lahf
je,pn
jnp
outsb
xchg
adc
add
or
mov
cwtl
adc
fmuls
push
es
and
addl
push
mov
mov
xchg
or
test
mov
repnz
mov
cmp
push
imul
xor
mov
and
xchg
out
bound
daa
add
adc
pop
jbe
inc
xchg
push
push
int3
out
cmp
push
xchg
mov
dec
xchg
adc
nop
mov
push
rclb
pop
sub
push
in
lods
inc
sbbb
push
inc
jne
jbe
xlat
repz
sar
scas
add
sbb
jns
inc
sbb
ret
cmpsl
lret
pop
icebp
divl
mov
outsl
add
push
fistl
dec
cmp
and
mov
aaa
xor
mov
pop
push
sub
jae
fimuls
lret
rcrl
rcll
add
dec
pop
shlb
sub
cmp
xor
dec
outsl
lret
push
dec
jb
mov
xchg
lods
or
mov
aas
clc
int3
jle
fidivrs
test
ja
outsl
jmp
cmc
sub
call
aas
xor
xorl
adc
cld
add
jne
mul
pop
push
daa
shll
dec
stc
add
pop
scas
bound
sti
push
ja
jmp
into
or
lcall
pop
dec
insl
ret
jne
fsubl
or
jb
enter
pusha
jno
adc
leave
into
mov
icebp
enter
adc
add
xor
bound
sbb
jmp
cs
scas
divl
loopne
adc
ret
mov
stc
xchg
leave
in
cmp
dec
xchg
loop
fs
je
add
sbb
xchg
xor
mov
mov
mov
or
and
add
shrb
or
nop
and
dec
mov
push
jg
jmp
cmpsb
inc
push
jle
pop
jns
jno
addr16
xchg
and
or
outsb
sub
jo
lods
imul
mov
div
xchg
cmp
insl
mov
bound
dec
jecxz
imul
dec
test
push
in
call
mov
inc
mov
mov
adc
jne
fstpt
loop
sub
scas
outsl
clc
clc
push
jnp
fwait
pop
ss
ss
out
shlb
insl
fwait
mov
lret
mov
push
mov
ror
push
jecxz
mov
sub
sub
or
add
lcall
ljmp
in
cld
inc
ret
enter
or
cs
pop
pop
scas
arpl
mov
rorl
sbb
dec
mov
or
adc
and
fisubs
dec
xor
inc
lea
add
out
cli
jae
repz
xor
cmp
jp
enter
roll
pop
insl
jne
dec
xor
fdivr
and
sbb
xor
inc
inc
sub
mov
sahf
ja
mov
sub
xchg
pop
sarl
loope
aaa
mov
int
ljmp
dec
mov
das
xchg
mov
mov
xor
je
cli
out
add
fsts
sub
mov
cmp
incb
lock
rol
cli
adc
xor
les
aam
aaa
inc
sub
out
fs
add
mov
dec
nop
xchg
insl
pop
inc
mov
into
clc
outsb
xchg
pop
sub
sbb
xchg
addr16
outsl
pop
push
jo
cmp
xlat
mov
mov
mov
lods
jns
pusha
rcr
roll
ret
and
pop
sbb
jb
aad
mov
jmp
sub
movsl
sbb
enter
push
adc
inc
lea
lock
inc
pop
mov
or
push
and
inc
jb
add
fcomip
data16
jge
xlat
outsl
adc
cmp
cmp
scas
daa
cmp
mov
jge
ror
or
dec
outsl
xchg
mov
fwait
outsb
scas
or
mov
xchg
xchg
jmp
and
sub
add
add
jo
cwtl
jle
pop
jp
pop
inc
pop
dec
inc
dec
enter
inc
lret
pop
adc
js
cmpsl
adc
inc
inc
ja
clc
and
andb
adc
inc
jns
mov
pop
mov
cmp
xchg
jle
out
push
jmp
mov
mov
cli
rorb
scas
ret
mov
pop
adc
ss
inc
mov
add
movsl
sub
mov
xor
rcrb
or
mov
arpl
pop
fcoms
fcomps
pop
jns
jae
dec
cmp
pop
stos
hlt
leave
and
nop
xchg
mov
loopne
lock
mov
call
sub
xchg
xor
jo
cmp
shll
xchg
push
pop
add
cmpsb
xorb
inc
and
jecxz
sbb
ljmp
orl
pop
inc
pop
sti
cs
xor
xor
mov
pop
push
dec
in
push
pop
and
pushf
or
cmc
cmp
dec
dec
mov
mov
jns
push
lds
loop
sub
mov
and
fdivp
mov
mov
sahf
push
mov
or
stos
inc
outsl
arpl
mov
inc
adc
jge
sbbl
inc
cmpsb
leave
cli
mov
mov
push
pop
pop
inc
jle
loope
pushf
add
jge
and
mov
pop
mov
loop
mov
pop
pop
or
lock
add
push
sub
and
movsb
dec
and
dec
xchg
scas
mov
cltd
icebp
jecxz
sbb
in
movsl
inc
xor
insb
mov
popf
in
mov
sbb
int
xchg
lea
adc
hlt
data16
in
xchg
das
outsl
mov
popa
add
cmc
adc
shl
roll
push
jns
daa
lret
sub
mov
cmpsl
mov
sarl
and
ficompl
stos
mov
sahf
mov
xor
sub
lahf
dec
and
mov
lds
fnstsw
xlat
bound
lret
bound
cltd
mov
cld
popf
inc
test
test
pop
movsb
pop
rcll
stc
xchg
loop
repz
outsl
sub
adc
jbe
cld
mov
xor
or
pop
sbb
bound
pushf
xor
loopne
or
xor
stos
mov
hlt
lahf
sbb
add
fisubrs
xor
mov
pop
xchg
xor
add
pop
sub
sbb
push
inc
js
add
sub
jae
mov
fdivrl
stos
push
shl
repz
out
aaa
fwait
ss
loope
push
jb
add
popa
xor
push
jbe
xor
popl
sub
adc
push
jle
xchg
mov
sbb
aam
rep
inc
jmp
shlb
stc
insb
pop
inc
sub
add
out
or
push
aad
or
jne
adc
inc
mov
mov
adc
movsb
push
fdivs
jb
or
test
hlt
outsb
in
pop
and
cmp
fldl
andl
movsb
out
les
out
pop
sbb
rclb
ljmp
fidivs
pop
jecxz
mov
rcrb
push
enter
cmpsl
inc
pusha
jne
dec
sub
dec
insb
arpl
insl
aam
clc
icebp
pop
lods
loopne
mov
roll
pop
adc
cmc
push
sbb
fidivl
pop
adc
cwtl
cltd
pop
out
sub
gs
test
aam
pop
loop
push
in
orb
fs
push
sbb
cli
movsb
push
das
ja
sub
cmp
and
sbb
or
adc
mov
xchg
adc
xor
aam
and
cltd
push
pushf
jne
mov
xlat
movsl
inc
add
or
adc
je
decb
mov
psrad
push
ja
push
outsl
pop
pop
xchg
cmp
pop
loope
push
ret
lret
add
lods
jnp
pop
nop
xchg
iret
test
adc
xchg
jo
sbb
movsl
mov
mov
xlat
cmp
xchg
cmp
mov
push
and
stc
cmpsl
pop
lcall
mov
add
add
add
add
outsb
mov
add
add
incb
add
add
add
add
push
pop
sahf
out
add
add
add
add
jg
add
add
add
add
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
sub
add
add
pop
add
and
add
add
cltd
stos
and
add
inc
add
adc
add
add
add
add
cmp
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
and
outsb
das
inc
dec
pop
test
imul
push
outsb
or
mov
sti
cmp
leave
pop
in
dec
je
cld
jne
decl
les
or
adc
lock
mov
adc
decl
pop
in
mov
add
push
clc
ret
dec
add
adc
sbb
add
incl
push
push
je
incl
stos
int3
rorb
mov
dec
adc
loopne
cld
push
test
jne
add
sar
pop
pushl
mov
out
dec
cmp
add
call
stos
push
add
lea
sbb
pop
add
dec
mov
mov
inc
mov
add
jne
inc
adc
push
loopne
add
rolb
sbb
add
add
add
add
add
add
add
add
add
add
add
inc
jae
gs
inc
outsl
jnp
inc
insl
je
gs
je
jo
sbb
outsb
jo
mov
gs
gs
add
inc
add
add
jb
addr16
gs
stos
popl
push
imul
js
xor
add
add
cmp
stos
lcall
ret
sub
push
insb
testl
scas
xchg
mov
fsubs
hlt
and
ljmp
imul
test
stos
ja
bound
mov
stos
imul
enter
stc
sbb
add
arpl
push
sub
dec
insb
sub
mov
in
push
clc
xchg
xor
jp
call
cmp
inc
push
pop
add
jmp
pushf
movsl
jecxz
insb
int3
pushw
outsb
sbb
or
jb
je
test
sti
xor
cmp
or
std
das
fisubl
dec
sbb
mov
jae
sbb
cmp
mov
dec
cli
push
push
mov
adc
ds
lods
addb
lea
das
jmp
push
sub
in
aaa
pop
pop
rcll
jp
sub
in
ja
jns
jbe
adc
add
sbb
pusha
adc
cmpsl
pop
jecxz
xchg
adc
and
or
hlt
shrb
in
mov
dec
cmp
or
shrl
mov
enter
fidivrl
mov
inc
call
cmpsl
push
cmp
fcmove
push
or
mov
leave
and
cs
pop
sbb
sub
mul
xor
jae
xor
cld
mov
mov
aas
scas
mov
sub
insl
adcl
test
jae
and
pop
scas
push
and
mov
test
adc
clc
arpl
mov
or
push
imul
lret
push
jae
push
pop
cmp
dec
sub
inc
pop
ret
add
dec
arpl
cmp
cmp
sarl
jno
lods
jmp
es
lahf
sti
imul
dec
jno
jno
xchg
imul
mov
pop
int3
push
mov
xchg
xor
repz
mov
nop
cmp
icebp
daa
movsl
pop
xor
jmp
sbb
in
dec
sbb
dec
es
dec
in
insl
jp
sbb
dec
dec
mov
lds
jo
jp
arpl
or
or
xchg
cmp
lea
xchg
movsl
and
pusha
mov
adc
inc
stc
fmull
or
outsl
jge
xor
subl
lods
jl
lds
adc
mov
jge
jp
xchg
xchg
jne
push
ror
pop
mov
insl
adc
in
add
inc
push
pop
xlat
inc
sarl
push
stos
or
lods
ds
loopne
and
dec
mov
pop
data16
dec
xor
imul
adc
cmp
popf
movsb
pop
enter
gs
jle,pn
addl
pusha
mov
rcr
imul
fcompl
and
xorl
adc
mov
and
mov
fistl
arpl
arpl
pusha
xchg
out
cmp
mov
pop
mov
add
test
fdivr
pop
es
test
mov
inc
pop
jb
mov
push
mov
nop
mov
fnstenv
push
and
or
mov
test
ja
stos
push
mov
out
les
rcll
jg
xchg
xor
xor
mov
popa
test
ret
clc
pop
push
mov
and
xchg
scas
push
clc
movsl
aas
insb
dec
lret
jno
add
lea
add
inc
ds
xchg
cmp
xchg
jne
cmp
jae
xor
pop
out
insl
ret
notb
pop
xchg
and
inc
push
and
insl
das
xor
hlt
sub
jge
out
rcrb
push
out
fldl
cmc
mov
and
or
ja
icebp
sbb
push
addb
sbb
mov
inc
aad
inc
frstor
iret
mov
xchg
mov
jg
repnz
xor
cli
icebp
lcall
test
mov
jnp
dec
mov
sbb
movl
add
jno
sbb
mov
push
mov
sbb
loop
mov
cmp
mov
or
jg
pop
lock
loope
jecxz
pop
push
adc
jg
and
leave
gs
xor
sbb
xor
cmp
dec
jbe
dec
or
addr16
fwait
test
mov
mov
insb
into
shlb
mov
pop
pop
js
repz
icebp
or
rorl
mov
jg
xor
mov
xchg
sbb
mov
into
and
mov
inc
icebp
sub
push
out
fisttpll
jmp
shlb
mov
popa
fmulp
aam
xor
int3
adc
adc
imul
mov
or
and
pop
out
in
jg
fdivr
loope
add
jne
pop
cmp
imul
push
lcall
cmpsl
pop
sub
je
mov
movsb
iret
push
popf
into
mov
stc
fcoms
fiadds
mov
adc
jp
dec
mov
inc
repnz
adc
add
xchg
and
pop
mov
jge
add
cld
mov
mov
cld
mov
loop
cmp
jae
popa
cmp
jle
out
mov
mov
aam
adc
in
sbb
jne
mov
sbb
movsl
pop
aam
and
lods
in
imul
mov
pusha
pop
sub
and
mov
out
push
xor
gs
ret
stos
lcall
mov
mov
mov
fstpt
sub
cli
enter
jge
jae
add
jae
fwait
xchg
xor
dec
cmpsb
clc
add
nop
and
bound
push
popa
xchg
fidivl
jecxz
xchg
lods
mov
push
scas
sub
pop
sbb
pop
jle
sub
add
fsubrl
xor
xor
cmc
push
adc
add
jl
pop
mov
in
pusha
jns
stos
push
insb
xchg
out
pop
imul
fidivl
adc
sar
add
enter
test
in
xchg
shll
adc
notb
inc
or
jne
loopne
add
subl
mov
cmpsl
cltd
push
adc
push
test
sar
adc
mov
shl
or
and
mov
adc
pop
es
js
pop
adc
mov
mov
or
xchg
add
mov
push
jmp
cmp
push
sarb
leave
adc
xchg
daa
inc
or
int
loope
mov
int3
out
cs
out
test
push
or
out
and
orl
in
movsb
pop
mov
inc
mov
mov
int
xchg
sub
inc
sub
mov
in
sbb
push
out
or
test
cli
test
popf
pop
add
lock
es
xor
cmp
jmp
stos
jl
lds
cwtl
fistpll
fwait
mov
mov
mov
inc
lret
inc
jle
push
repz
popf
mov
mov
lea
adc
mov
jg
mov
and
mov
nop
insb
incb
pop
pop
jb
xor
pushl
not
addr16
mov
xchg
lock
push
sub
rolb
pop
nop
int3
imul
push
pop
in
ret
pop
leave
xchg
jb
pusha
les
sbb
adc
lahf
outsl
push
lods
sbb
lds
mov
xor
and
cmc
cmp
ss
rcrl
aam
out
fidivl
mov
xchg
pop
movsl
int3
mov
insb
pop
fldcw
fistps
dec
inc
pop
dec
push
jbe
roll
popl
stos
jle
cmp
and
repz
fildl
adc
pop
push
loope
incl
mov
push
icebp
jmp
push
je
in
test
sub
icebp
mov
js
and
jne
popf
repz
inc
js
inc
xlat
sbb
xor
cmp
pop
adc
cmp
push
xchg
cmpl
xlat
push
mov
push
icebp
fwait
mov
jl
testl
dec
cmpsb
lcall
jbe
jmp
push
jge
inc
mov
mov
andl
and
mov
xchg
pop
adc
imul
hlt
fwait
pushf
hlt
ret
mov
xor
sub
xchg
mov
jae
sub
imul
aas
lods
dec
in
jno
call
loope
dec
data16
test
out
sbb
arpl
mov
inc
mov
pop
sub
divl
adc
fcoms
insb
mov
sti
out
dec
fstpt
pusha
inc
mov
and
xor
jnp
testb
aad
movsb
enter
push
cmp
arpl
add
test
mov
jecxz
cmp
dec
movsl
dec
lret
int3
ret
in
lea
lcall
pop
xchg
pop
hlt
repz
out
pop
fdivl
and
test
push
cld
pop
xchg
sbb
jg
cmp
mov
pop
popa
sub
out
dec
pushf
dec
sub
lret
mov
inc
inc
jae
xor
hlt
lods
xchg
add
dec
xor
sbb
into
lods
mov
pop
es
dec
popf
pop
inc
add
sub
inc
std
lods
jmp
gs
xchg
inc
imul
cmc
std
insb
push
fstpt
sbb
xchg
movsl
sahf
js
fnsave
push
xor
andb
pop
rol
out
add
pop
adc
movsl
push
pop
rcrl
mov
mov
add
pushf
mov
fiaddl
cmpsb
cmp
or
xchg
push
adc
outsb
lret
mov
push
test
sub
data16
das
xor
test
pop
lret
pop
adc
and
mov
xchg
and
out
adc
cmpsb
stos
push
mov
xchg
stc
aaa
pmulhuw
xor
pop
mov
inc
xchg
ja
jle
insb
push
pop
cltd
cmp
scas
test
leave
in
imul
mov
hlt
ficoms
sbb
cmc
out
scas
cmp
imul
imul
in
adc
inc
inc
in
cli
mov
clc
adc
pop
add
into
mov
mov
jo
jp
loope
mov
dec
andl
ret
dec
dec
stos
jbe
sbb
imul
xchg
jg
insb
pop
pop
fbstp
movsl
or
movb
xchg
fcoms
les
sbb
jmp
xchg
sub
repz
sbbl
or
inc
pusha
push
outsb
out
imul
pop
idivb
sub
pop
mov
test
pop
fwait
sub
jle
les
pop
jb
mov
xchg
repz
jbe
mov
jnp
out
pop
lret
sbb
loop
frstor
pop
mov
xorl
jmp
jne
sbb
jl
das
mov
pop
push
push
adc
add
or
push
cmp
mov
sbb
lret
stc
movsl
push
scas
mov
dec
cmp
ficoms
push
xor
sub
xchg
fs
cmp
add
xor
push
pushf
mov
shrb
add
dec
sbb
pop
call
jl
or
push
mov
int
scas
clc
dec
movsl
mov
ret
fwait
xchg
repnz
push
pop
movsl
or
pop
cmp
fdiv
in
call
cmpl
add
pop
pop
cli
jp
jmp
inc
push
jne
stos
push
cli
mov
inc
les
aas
adc
daa
ja
mov
xchg
out
outsl
mov
fiaddl
into
mov
inc
or
fs
ficompl
dec
iret
scas
xchg
jmp
shll
fadds
into
movsb
bound
sub
fisubl
mov
adc
out
cmp
stos
push
push
fbld
mov
or
test
or
stos
pop
es
imulb
cmpsl
insb
lock
cli
test
scas
mov
xlat
repz
and
shl
loopne
ljmp
enter
popf
sub
ljmp
pusha
jg
cmpsl
ss
add
test
lret
xchg
lea
ja
cmp
jp
mov
stc
mov
jle
pop
cmpsb
xchg
pop
and
cwtl
testb
or
int
jae
xor
ja
mov
fcoml
adc
aam
sbb
sub
jns
outsb
xor
jmp
mov
adc
fwait
or
hlt
jb
pusha
lea
and
inc
or
cmp
pop
inc
mov
out
cmp
and
adc
mov
jmp
into
out
dec
loop
subl
in
shlb
push
adc
inc
in
mov
add
fdivr
jo
into
outsb
jle
out
addr16
test
xor
in
dec
es
es
in
idivl
inc
sti
mov
ret
cmp
dec
leave
xchg
imul
daa
mov
mov
pop
test
lds
pop
cmp
sub
iret
test
sub
imul
or
jle
dec
and
movl
inc
and
mov
aas
add
nop
mov
mov
jmp
jno
pusha
aam
in
cmp
rorl
push
rol
jp
sbb
rclb
push
or
dec
xor
data16
mov
popa
cmp
stc
movb
mov
dec
xchg
or
jne
testb
lret
jns
lea
enter
jmp
mov
rolb
sbb
fisubl
lock
movsl
popa
push
or
lret
pop
mov
jl
cwtl
sub
push
pop
or
dec
pop
mov
frstor
test
mov
and
push
mov
mov
push
hlt
cmp
lods
pop
pop
outsl
inc
sbb
mov
leave
es
clc
sub
mov
pop
rcll
inc
add
mov
xchg
fnstcw
stos
jecxz
stc
push
pop
mov
or
jl
sbb
and
add
incb
lcall
sbb
sub
add
in
fdivrs
pushf
out
mov
push
es
cmp
pop
fstps
and
mov
insb
inc
movsl
adc
shll
shr
ss
add
jl
mov
mov
shlb
jne
rorl
jno
dec
cmpl
cmp
shlb
test
fadd
push
ljmp
pop
sub
jne
mov
cld
lock
push
outsb
push
cmpsl
hlt
pop
pushf
out
jecxz
sahf
xchg
pop
outsl
popf
jecxz
xor
out
sub
mov
sub
stc
setb
sub
stos
test
test
ss
jns
dec
imul
aas
push
clc
pushf
loope
cmp
sub
pusha
add
pop
cmc
addr16
adc
dec
dec
inc
lret
sub
dec
sub
sub
mov
insl
enter
xchg
fwait
cmpsl
sbb
mov
test
inc
cmp
pop
daa
lcall
mov
cmp
stos
pop
sub
ljmp
gs
stc
int3
push
xchg
jecxz
mov
sbb
test
mov
push
xor
imul
out
jmp
test
loopne
xchg
push
cmc
pop
mov
ljmp
pushf
call
scas
cmpsl
push
and
or
ljmp
scas
jl
sbb
out
inc
mov
fnstenv
cwtl
rcrl
push
shrl
add
mov
or
pop
scas
xor
shlb
mov
mov
shl
dec
imulb
iret
pop
jecxz
mov
loope
jg
insb
aam
or
cs
lea
popf
xor
mov
test
mov
cmp
dec
or
mov
sub
leave
jmp
pop
or
sub
je
add
push
add
sub
lcall
jp
sub
rcrb
fnstenv
cmpb
jg
push
sbb
push
divl
xor
fisubrl
mov
sub
cmp
pop
mov
jno
daa
sbb
lea
lahf
les
mov
test
cmp
xor
mov
mov
in
mov
daa
or
cltd
push
xchg
insb
lcall
in
xchg
push
cli
cmp
rolb
adc
int
mov
js
dec
insl
add
push
sahf
dec
push
push
adc
mov
stc
mov
cmp
mov
xor
loopne
repnz
mov
lea
js
jecxz
dec
sbb
and
adc
pushf
dec
push
push
mov
loope
ljmp
mov
lock
incl
adc
lahf
mov
push
dec
push
pop
lahf
dec
jmp
jmp
xchg
cmpsl
into
addr16
push
jo
cmp
cmp
cmp
adc
call
out
push
mov
inc
ds
cltd
arpl
ss
push
adc
movsb
xor
shrb
pop
mov
and
testl
xchg
xlat
shl
out
mov
push
xor
adc
add
mov
loop
push
scas
mov
and
push
push
ret
xchg
xor
test
andb
mov
sub
jp
xor
shll
sbb
ds
sbb
push
jns
aam
bound
inc
cmp
sub
pop
jb
pop
call
inc
mov
inc
idiv
push
into
sbb
sbb
fadds
lret
add
test
inc
pop
test
pop
aam
repnz
add
mov
stos
out
jle
lret
sarb
sbb
repnz
xlat
fcompl
pop
clc
js
or
sahf
xor
add
sub
xor
add
jno
subl
push
negl
hlt
cmc
ja
cmp
xchg
or
hlt
jae
loopne
mov
sbb
test
add
mov
mov
add
fiaddl
mov
pushf
lds
dec
mov
shr
sub
and
or
lods
inc
in
xchg
rcl
jl
mov
ficoms
mov
stos
mov
xor
xor
push
inc
pop
or
cmp
lret
pop
in
sbb
pushf
cwtl
test
xchg
fistl
mov
or
jne
inc
int3
cmc
pop
mov
jecxz
or
dec
mov
add
mov
dec
jecxz
nop
mov
xchg
fsubp
xor
int3
pop
dec
mov
fists
dec
inc
jl
out
lret
xchg
lds
and
pop
lcall
or
add
add
imul
add
fucomi
dec
jp
add
add
or
add
add
add
add
add
xor
xor
xor
sub
add
add
add
stos
stos
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
add
stos
add
or
int3
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
add
push
out
xor
jnp
add
sbb
sbb
daa
sbb
or
xor
add
and
js
add
loope
jb
fs
outsl
inc
add
gs
stc
shll
mov
jmp
fadds
or
pushl
in
addl
mov
mov
sub
cld
cld
call
push
push
adc
decl
push
inc
lock
test
mov
rcrb
call
cmp
incb
repz
add
add
add
adc
leave
add
call
add
add
add
xor
addb
mov
imul
std
std
loopne
pushl
sbb
dec
shl
sbb
push
add
lock
push
adc
call
jne
sar
dec
add
repz
call
push
inc
push
push
push
add
fistpl
and
je
add
add
add
add
xchg
sbb
sbb
add
cmp
cmp
out
sbb
add
insb
add
sbb
movsl
lods
insl
dec
jne
inc
add
jo
movsl
test
inc
outsl
or
outsl
inc
popa
inc
outsl
jae
insb
insb
inc
add
imul
xor
dec
imul
jae
loopne
insb
push
add
aaa
add
add
or
add
add
mov
xlat
add
add
sub
add
das
adc
xlat
sbb
cmp
int3
ja
in
pop
insb
daa
cmp
movsb
cmp
scas
pop
in
cmp
pop
mov
xor
cmp
adc
cmp
cmp
or
shl
adc
notb
pop
jg
loopne
xchg
rol
fsubrs
adc
adc
mov
pop
std
pop
imul
mov
sub
lcall
mov
repnz
xlat
jmp
sti
ficompl
pop
jnp
pop
movsb
outsl
flds
add
fcmove
lock
imul
and
lcall
pop
popf
fildl
jp
mov
mov
push
jbe
negb
into
repz
mov
add
mov
adc
dec
or
xchg
ja,pn
cmp
sbb
xor
pop
movsl
pop
scas
bound
dec
rcrb
daa
mov
xor
jecxz
sbb
icebp
and
inc
testb
rcrb
imull
and
jmp
stos
mov
add
pop
jl
mov
mov
xchg
je
mov
adc
lcall
mov
into
cmp
fmul
add
popa
pop
jo
sti
dec
in
and
sub
pop
cmp
ljmp
push
add
jae
fidivs
push
mov
cli
out
and
leave
jecxz
loopne
mov
or
push
shrb
xor
push
jmp
jmp
rcr
push
pop
jg
mov
mov
or
mov
scas
int
clc
sbb
add
xchg
in
fwait
std
inc
out
scas
or
das
xchg
lcall
mov
cmp
push
pusha
out
cmp
pop
mov
cltd
outsl
xchg
and
or
pop
mov
mov
dec
pop
test
adc
loope
insl
jge
pop
jmp
or
arpl
pop
xchg
popf
movsw
test
pushf
mov
push
scas
cmp
aad
scas
mov
mov
jns
pop
out
les
and
lods
or
xorb
jbe
stc
inc
enter
imul
popf
jle
jnp
in
pushf
jae
cmp
jb
sbb
push
ds
cmp
inc
insl
push
xor
cmp
repz
pushf
and
outsl
stc
ja
fcompl
aam
mov
pop
lods
cmp
ljmp
cmpsl
in
test
out
jg
mov
push
ret
jne
mov
lret
pop
jle
adc
mov
jnp,pt
or
arpl
xchg
dec
xor
shrl
cld
xchg
dec
stc
arpl
sbb
xor
notb
mov
xchg
inc
mov
add
and
sub
jns
mov
cmp
std
jmp
mov
mov
bound
cmp
in
fs
sub
aas
adcb
movsb
ljmp
jp
shll
jb
xor
pop
incb
pop
fs
imul
in
fcoms
shl
loop
fidivl
sub
push
out
test
jmp
jmp
mov
dec
pop
sub
dec
dec
inc
popa
aas
dec
and
add
lea
pushf
fbstp
negl
jbe
xor
xchg
das
pop
cmp
cli
das
mov
addr16
jo
mov
jae
add
sbb
popa
cli
daa
sbb
ljmp
ss
fisubrs
in
enter
mov
mov
ret
roll
in
push
sbb
pop
push
cmc
stc
pop
ret
adc
pusha
pop
dec
and
iret
in
mov
call
jmp
and
jp
push
sub
insb
cli
cmc
mov
dec
fiaddl
lods
stos
pop
cltd
xlat
adc
cmp
xor
pop
sub
mov
adc
pop
inc
scas
cmp
mov
hlt
lret
push
cmp
dec
add
ror
orb
cmpb
fcmovbe
stc
imul
js
sub
xchg
scas
mov
jnp
outsl
or
push
mov
xchg
shrb
xlat
jno
sub
inc
pushf
es
or
outsl
jg
cmp
jo
notb
aas
or
pop
or
and
pop
cmp
jo
imul
xchg
or
jmp
add
and
add
push
and
pop
sbb
hlt
xlat
test
mov
pop
inc
cmc
add
cmp
je
adc
outsb
dec
and
mul
stc
rcr
cli
xchg
xor
fwait
cmpsb
fwait
push
pop
push
add
mov
adc
movd
pop
hlt
ljmp
in
push
cwtl
mov
loopne
jl
and
shll
out
pop
jb
mov
movsb
rolb
notb
inc
popa
push
fisubrl
and
sub
cmp
push
jo
in
jmp
pop
mov
adc
pop
ds
dec
leave
les
push
js
enter
sbb
dec
cld
xchg
dec
sub
cltd
inc
sub
xchg
test
pop
xchg
dec
jbe
push
sbb
out
mov
imull
out
dec
ret
add
in
fwait
daa
pop
mov
pop
mov
sbb
popf
mov
loop
stos
push
cmpsl
pop
add
loope
pop
ja
xchg
test
sub
jno
sbb
fidivl
out
repnz
pop
dec
or
lcall
or
cmp
push
mov
adc
icebp
fs
ja
sbb
mov
ds
jl
das
push
imulb
adc
loope
lds
fs
pop
ret
fs
leave
lret
loope
stos
cs
outsl
add
or
std
mov
cmp
xor
mov
xchg
lods
out
jmp
ds
fwait
movsb
push
mov
and
push
int
jnp
add
pop
nop
sub
mov
rcl
lock
cmpsb
or
test
mov
lods
das
dec
pop
mov
shlb
mov
fnstenv
rcrl
insb
mov
andb
push
sbb
inc
out
cmp
inc
das
push
mov
jbe
call
mov
xchg
pop
popa
mov
idiv
addr16
mov
add
xchg
in
add
inc
negl
lahf
leave
or
test
idivl
cmp
pop
cmp
popf
mov
stos
jmp
int
mov
loopne
jno
add
test
mov
mov
mov
mov
jnp
jb
lods
push
orl
ficomps
add
mov
xchg
cs
lret
mov
hlt
xchg
out
mov
mov
sti
mov
xchg
or
push
mov
jbe
mov
inc
jo
inc
xchg
cmp
xchg
push
or
mov
jno
ja
sub
jns
cltd
jo
xor
fdivrp
sbb
push
xor
jae
mov
js
lret
sahf
mov
jp
sbb
mov
adc
test
outsl
dec
in
mov
cwtl
fs
add
sub
movsb
fsubrs
mov
incl
fimull
insb
pop
sbb
rol
and
insb
icebp
pusha
sbb
xlat
xchg
mov
cmp
inc
push
stc
mov
enter
bound
cmp
xchg
aad
std
dec
xchg
xor
testb
push
xor
sub
icebp
addr16
std
jl
leave
lock
mov
outsl
enter
xchg
mov
insb
xor
pop
adc
lcall
jae
xchg
mov
sbb
jo
mov
or
mov
jecxz
dec
in
and
mov
loope
push
push
sub
int
adc
pcmpgtw
pop
pop
fwait
iret
es
dec
mov
fmuls
test
dec
inc
sbb
addr16
pop
fsubs
shrb
dec
inc
lret
xor
mull
mov
jmp
rcl
lahf
flds
test
mov
adcb
pop
loope
pushf
cmp
out
push
dec
jle
adcb
je
sub
lds
aad
scas
sub
cmp
mov
lea
jl
ret
jg
cld
and
push
pushf
ret
push
lahf
push
lahf
inc
aam
mov
push
mov
mov
dec
sub
add
out
inc
and
cmp
stos
xor
testb
leave
ret
cwtl
insl
lahf
call
in
jmp
or
insl
mov
lock
xchg
sbb
or
loopne
mov
mov
clc
stos
in
mov
add
adc
mov
push
fnsave
add
push
sti
into
mov
ret
fsubr
in
xchg
inc
ficoms
imul
data16
cmp
xchg
adc
sub
mov
and
mov
ds
mov
loopne
xor
jmp
inc
xor
clc
repnz
or
outsl
aad
mov
mov
test
cmp
or
jecxz
pop
cs
add
std
aad
cmpsb
xchg
or
repz
cmp
cmp
or
out
sub
mov
and
pushf
push
pushf
insb
cltd
cmp
add
pop
es
aas
sbb
js
stos
testl
dec
jns
stos
mov
or
mov
sub
bound
out
jl
dec
popa
sub
inc
push
outsl
mov
pop
pop
sarb
fstpl
mulb
jbe
pop
loope
mov
popf
sub
out
sbb
mov
mov
dec
jp
adc
rolb
push
mov
aas
xchg
ja
pop
dec
loope
adc
add
mov
jns
rcr
mov
sbb
sarl
inc
xlat
sbb
fisubs
dec
stos
imul
fmulp
mov
sahf
jl
insl
aaa
lcall
lds
xchg
movsl
adc
pop
test
dec
lea
push
fcmovnbe
cmp
pusha
mov
cs
cmpsl
jne
out
sti
mov
aaa
push
mov
cmpsl
push
addr16
jnp
sbbl
into
jne
rolb
cmp
sbb
push
adc
sub
add
nop
test
mov
push
int3
jne
sub
sub
lret
sbb
xchg
xchg
popa
inc
lea
dec
sub
cs
mov
or
jp
aad
in
scas
push
mov
mov
jl
sbb
sbb
das
mov
outsl
arpl
sbb
xchg
imul
xor
scas
mov
std
imul
add
cmpsb
sar
or
call
sub
pushf
jecxz
mov
cmp
or
imul
dec
inc
lods
inc
iret
addr16
icebp
insb
mov
mov
sub
cmpsb
sbb
add
adc
mov
jae
mov
in
xchg
xor
test
inc
sbb
push
call
xor
dec
jmp
test
adc
sti
sbb
sub
addr16
jl
lss
mov
into
notb
jg
int3
adc
testl
loope
pop
lods
mull
cwtl
lods
xchg
mov
out
fstl
test
bound
add
outsl
jns
adc
mov
sub
sub
inc
bound
dec
idiv
add
inc
xchg
mov
jl
jl
jno
mov
jnp
int3
test
cmp
mov
out
movb
movsb
notl
fsubs
out
dec
rorb
add
inc
mov
cmc
xor
es
and
bound
ds
cmp
lret
inc
fisubrs
mov
test
dec
and
int3
daa
popa
pop
push
ror
mov
adc
mov
daa
div
push
add
jo
ret
adc
add
sbb
mov
cmc
or
shrb
shlw
out
or
sub
dec
nop
pop
ret
ljmp
mov
jno
push
outsb
imul
xchg
and
loop
xor
xor
or
test
mov
sti
clc
push
sub
pop
pop
or
in
in
aas
mov
or
push
int3
pushf
or
xchg
mov
xchg
stos
mov
pop
dec
mov
test
cli
imul
fwait
sahf
mov
sahf
mov
shll
fisubrl
shll
dec
das
sub
test
arpl
imul
nop
inc
loope
enter
xorb
jnp
pop
mov
jo
xlat
dec
push
and
mov
lds
out
fidivrl
nop
cmp
pop
sub
push
movsl
lahf
adc
adc
xor
aas
jmp
ds
mov
add
dec
cmpsl
pop
jno
popa
sub
iret
and
je
lods
and
clc
and
fstps
and
pushf
pop
pusha
lea
push
xchg
call
and
mov
jbe
sub
xchg
xchg
insl
sti
cld
push
sahf
gs
cs
ljmp
mov
ret
loopne
mov
test
cmc
mov
dec
sub
dec
cmp
into
int3
das
rcrl
inc
xlat
out
push
jl
adc
addr16
jge
pop
bound
cmpsb
adc
push
mov
or
sbbb
mov
xchg
mov
arpl
pop
mov
cmpsb
push
adc
mov
push
xlat
cmp
add
or
and
sub
ror
imul
push
js
cltd
pop
dec
or
mov
imul
es
addr16
adc
sbb
arpl
mov
mov
mov
addr16
fcomps
ror
xchg
fwait
jle
ja
or
and
pop
or
or
hlt
incb
cmpsb
xor
out
lret
xchg
js
xchg
mov
jge
mov
inc
testl
push
fimuls
out
leave
lcall
add
add
into
test
lret
aad
pop
xor
je
repz
ja
cli
jmp
icebp
and
insl
ljmp
xchg
xchg
mov
in
pop
sbb
pop
bound
lahf
adc
loop
sbb
stc
xor
int3
or
ret
nop
xchg
int
testl
jl
mov
out
sbb
add
shll
sub
mov
cmp
mov
fadds
sbb
sub
xchg
xchg
pop
ret
ljmp
mov
aaa
jno
inc
mov
mov
jge
or
xor
test
mov
mov
imul
mov
pop
mov
push
jno
cmpsl
fsubrl
mov
jbe
xor
insl
out
xchg
aaa
aam
jl
aas
mov
scas
lea
and
push
std
and
mov
mov
aas
loopne
sub
pushf
mov
jmp
inc
pop
icebp
out
inc
pushl
js
rclb
fdivl
pop
sbb
fisttpll
imul
jbe
adc
pop
sub
lcall
dec
sub
cli
ss
clc
cli
or
jecxz
pop
push
add
cmp
mov
addl
lds
xor
cmp
or
add
stc
jge
push
add
inc
repz
cmove
out
add
jne
push
or
adc
aas
fs
lret
mov
jle
mov
hlt
jecxz
out
mov
jne
push
lea
daa
inc
mov
movsb
adc
out
xlat
inc
xchg
out
out
fiaddl
in
sub
lcall
bound
jg
xchg
adc
jnp
shr
sub
push
push
cmpsl
adc
loop
xor
fldenv
ret
imul
sbb
mov
lea
lock
pop
scas
gs
loope
cmp
cmpsl
push
cmp
cmpsb
push
addr16
fildll
xchg
and
test
leave
pop
cmp
or
stos
ror
push
rclb
test
xor
fnstenv
mov
fsubrs
sbb
addr16
pusha
dec
cwtl
scas
dec
lret
pop
xor
lds
cmp
xor
mov
push
or
data16
add
fisubs
mov
mov
jp
hlt
cmp
pop
cwtl
pop
pop
repnz
in
cwtl
and
or
jmp
add
in
add
mov
test
jno
lods
add
pop
mov
mov
int
push
or
outsb
push
pop
popf
cmp
mov
xor
mov
adc
mov
das
push
mov
pop
ret
mov
test
ficompl
dec
arpl
icebp
push
mov
lods
mov
mov
xchg
clc
cmp
std
pop
insb
test
push
out
les
sti
cs
jb
shrl
mov
fsubl
jne
insl
outsb
push
or
jno
sub
cld
xor
adc
lds
xor
insb
in
in
add
lret
in
cmpsb
insb
mov
aaa
sub
pop
pop
in
jmp
movsl
mulb
in
in
out
sub
push
lods
ret
ss
bnd
push
sub
sub
push
leave
popf
pop
xorl
add
shlb
xor
jb
cmc
adc
xchg
lahf
xor
test
fs
xchg
std
fs
sbb
insb
dec
mov
jge
lahf
das
out
mov
jmp
jle
xchg
lds
js
xchg
xchg
sbb
ret
enter
inc
mov
jecxz
lock
popf
mov
mov
mov
fisttpll
cmc
push
fmuls
ljmp
leave
jae
bound
inc
cltd
adc
cmp
ljmp
cld
cld
push
add
mov
inc
xchg
xchg
xchg
cltd
test
pop
add
cmp
es
fcomi
iret
fwait
test
or
jae
jno
jmp
xchg
ja
pop
pop
cmp
div
cmpl
in
cs
nop
les
push
pop
fidivrl
mov
cmp
sbb
loopne
fisttpll
leave
ja
cmp
out
test
push
sbb
add
add
cli
push
ss
mov
jns
movsb
mov
stos
fbstp
jb
loope
mov
cmp
pop
in
dec
into
xlat
hlt
leave
adc
jmp
jl
dec
cli
lret
jmp
popf
arpl
int
jecxz
andb
add
out
xchg
xchg
adc
shrb
jp
or
sbb
lock
mov
jle
arpl
jo
or
imul
fwait
push
mov
out
in
into
dec
add
cli
jnp
mov
pop
ror
scas
daa
lods
sarb
push
xor
insb
xor
roll
or
add
add
jmp
add
add
fwait
aaa
add
add
or
add
add
mov
add
imul
add
add
add
add
or
add
add
or
in
in
mov
flds
add
addb
stos
stos
testl
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jb
outsb
inc
or
add
add
add
add
add
pop
add
ret
out
add
je
add
and
add
add
outsl
add
inc
jle
add
add
add
cmp
or
sbb
fbld
arpl
jae
push
outsl
imul
cli
outsb
add
push
leave
aaa
mov
popa
add
mov
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
mov
add
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
decl
xor
inc
incl
adc
incl
orl
bnd
jge
push
push
incl
push
adc
std
inc
mov
ret
orl
lock
call
sbb
incl
addb
add
into
add
add
fiaddl
addb
add
add
add
sub
clc
add
add
push
je
imul
outsl
mov
add
inc
add
add
arpl
popa
gs
gs
gs
insb
and
js
push
insb
imul
add
add
dec
insb
popa
jne
gs
sahf
inc
outsl
push
insb
arpl
add
add
add
add
add
add
xchg
add
mov
add
and
add
and
sahf
cltd
push
imulb
pop
ficompl
mov
cwtl
leave
fcomps
jo
movsb
in
dec
pop
xor
call
jl
push
test
xchg
movl
mov
shlb
dec
pop
icebp
mov
push
mov
mov
jmp
in
add
mov
add
popf
stc
sbb
adc
adc
and
sbb
jae
mov
je
mov
in
adc
mov
loope
or
sub
mov
xchg
sbb
dec
loopne
ss
aad
pushf
pop
shll
cmpl
push
inc
in
leave
repnz
jno
xchg
fcmovne
xchg
mov
std
clc
cmp
xchg
inc
leave
rorb
add
sub
ffreep
or
mov
imul
jb
mov
test
stos
call
dec
lret
push
lods
int
add
mov
pop
aad
ljmp
cmc
lea
repnz
lds
lret
pop
loope
sub
or
sbb
sub
and
repnz
ror
std
int3
inc
sub
sub
pop
lea
mov
xchg
mov
je
cmc
push
xchg
rolb
jno
hlt
pop
idivl
lcall
scas
scas
pop
int
mov
lahf
push
adc
gs
sub
xor
and
lds
adc
pop
and
sbb
repnz
outsl
insl
add
dec
call
xchg
jmp
loopne
and
repz
pusha
insb
int
pop
push
lret
mov
ficomps
inc
adc
add
jb
shll
enter
and
mov
cmp
cld
mov
aas
sbb
imul
test
sub
ret
mov
dec
mov
in
pop
sub
lds
push
dec
mov
sub
outsb
jno
or
pusha
pop
sbb
inc
stos
ret
movsl
and
out
ret
xor
pop
sbb
xor
push
jo
insl
sub
mov
adc
cmp
repnz
push
out
add
add
push
mov
fildl
sti
repz
xor
int
mov
out
add
stc
js
xorl
mov
je
in
mov
pushf
divps
bound
or
add
add
pop
ljmp
repz
cmpsl
in
xchg
lods
mov
int3
loopne
mov
and
int3
add
add
orb
inc
or
push
sahf
xor
pop
popa
out
in
xor
imul
imul
jmp
fcompl
pop
pop
jg
add
ret
imul
and
pop
dec
jno
xor
addr16
adc
push
mov
inc
iret
loop
lahf
clc
or
test
ljmp
jno
jg,pt
sbb
int3
mov
mov
sbb
mov
not
or
add
insl
shr
push
iret
mov
ret
inc
les
push
mov
aaa
or
js
push
insl
popf
pusha
stos
ss
pop
cs
push
mov
sub
pop
insb
xchg
mov
cwtl
push
add
mov
scas
inc
dec
popf
scas
push
adc
push
mov
xchg
lods
mov
int3
mov
push
mov
hlt
pop
repz
add
in
pop
icebp
pop
adc
inc
push
or
lret
cli
fwait
std
sarb
sbb
idivl
sbb
das
xor
cmp
mov
pop
xchg
mov
dec
inc
sub
inc
pop
movl
pushf
inc
inc
sahf
fucomip
mov
and
adc
scas
mov
test
push
mov
push
and
pop
mov
sbb
adc
push
mov
daa
fnstenv
inc
arpl
aaa
mov
sahf
js
push
je
sti
gs
mov
mov
testl
into
and
jns
jle
sub
xchg
add
mov
mov
ja
jmp
jb
dec
and
call
mov
lret
test
inc
jp
and
icebp
aam
pusha
dec
pop
sub
or
loop
xorb
jg
dec
daa
fiaddl
out
push
scas
mov
add
std
fs
incl
mov
imul
xchg
jg
adc
loopne
jl
and
rorl
movsb
sub
lock
icebp
je
fs
push
adc
shrl
inc
es
sub
push
adcb
sbb
adc
jo
test
sti
inc
js
cld
adc
add
dec
push
jb
test
out
jbe
inc
add
or
js
movsl
xorb
das
or
cmp
stos
in
aas
mov
adc
xor
iret
sub
hlt
shrl
fsubrs
and
test
mov
mov
pop
xor
cmc
daa
inc
fcoml
mov
pusha
inc
and
sub
cld
testb
mov
leave
add
inc
jnp
xchg
add
xor
cli
push
or
mov
pushf
mov
mov
div
xor
and
int
imul
push
or
gs
and
cwtl
sub
push
pop
loopne
cmc
mov
fidivrs
outsl
cs
cmp
mov
out
add
sbb
jb
mov
arpl
bound
cmpsl
lcall
add
dec
xorb
daa
add
shlb
push
repnz
mov
sub
movsb
pop
icebp
inc
adc
add
vmwrite
inc
outsl
aas
dec
shrb
call
fisubrs
repz
loopne
je
push
sbb
adc
sbb
movsl
lsl
pop
arpl
out
arpl
inc
mov
xchg
cwtl
sub
mov
movsl
pop
mov
push
in
cltd
lret
into
push
leave
mov
test
out
sub
pop
dec
dec
inc
in
leave
sbb
hlt
scas
lret
push
jl
addr16
jl
pusha
ss
scas
and
xor
sahf
lock
pusha
mov
mov
pop
hlt
dec
jl
sub
xor
test
loopne
lahf
xor
add
test
push
or
aad
or
xchg
xor
inc
pop
cmc
mov
add
jp
loop
bound
decb
aam
mov
jnp
cld
rcrl
jecxz
dec
mov
lock
push
fimuls
push
xchg
mov
insl
adc
jmp
repnz
pop
scas
out
imul
rclb
mov
int
insl
pop
cmpsb
jge
fnstcw
xchg
lds
mov
mov
sbb
cmpb
je
insl
xchg
xor
rcll
sbb
mov
sbb
daa
negl
cmpsl
add
push
fidivl
push
push
mov
sahf
ret
iret
push
jne
push
mov
sbb
imul
sub
mov
mov
imul
pop
cwtl
loop
adc
sub
cmc
xchg
fs
xor
bound
pop
sbb
cmp
push
or
mov
adc
mov
or
pusha
fwait
iret
cmpsb
ss
bound
into
loop
arpl
jnp
jge
mov
push
cltd
sub
xchg
arpl
sarb
cmp
pop
jl
jbe
sub
jbe
xchg
or
push
mov
pusha
shlb
cmp
fcomps
sbb
sub
or
push
mov
pop
sbbb
mov
or
or
push
scas
pusha
mov
push
inc
push
shll
jecxz
aam
outsl
mov
sbb
mov
mov
lahf
push
cmpsl
jnp
xor
daa
xor
inc
nop
int
pop
dec
pop
adc
mov
aam
les
or
pop
sub
popf
in
jno
das
push
imul
lahf
dec
inc
ds
lods
mov
mov
xlat
adc
and
mov
and
aad
stc
cltd
fistpll
mov
lock
outsb
pop
cld
out
in
jb
jnp
ret
subl
inc
or
sbb
pop
jns
xor
and
pop
push
mov
cmp
jmp
mov
lods
cmpsb
test
pop
add
sub
dec
inc
movsl
inc
ljmp
test
inc
inc
pop
xor
test
push
movhps
ret
mov
fildll
inc
in
sti
xor
sbb
lea
jae
insb
pause
loopne
add
loop
lcall
xchg
cmp
cli
jbe
dec
mov
idivl
mov
outsl
jo
stos
adc
mov
cmp
sbb
inc
int
adc
jne
mov
int
add
pop
aaa
sbb
mov
andb
and
push
jmp
les
fistps
add
mov
add
xchg
xchg
aad
mov
add
test
pop
pop
mov
vphsubwd
fsubr
into
dec
fldl
or
lret
and
push
shlb
push
adc
xor
xchg
and
and
subb
in
in
jge
pop
mov
data16
out
cmp
push
test
cmp
movsl
pop
lds
int
push
xlat
xchg
out
mov
xlat
test
nop
sub
sbb
cld
sbb
jle
shrb
loopne
xchg
leave
test
dec
icebp
imul
mov
hlt
or
sub
pop
mov
dec
imul
dec
sbb
aas
in
out
sub
mov
movsl
jne
hlt
adc
inc
sbb
lret
or
and
adc
aam
xor
mov
shll
filds
movsl
fisubl
movzbl
sub
loopne
and
lock
jbe
push
or
mov
sbb
jns
ljmp
mov
or
and
mov
mov
stos
sub
push
jecxz
pop
fcoml
xchg
mov
mov
out
pop
mov
gs
cmp
cmp
sub
xlat
sbbl
or
adc
popf
icebp
std
push
push
ss
pop
sbb
mov
and
mov
out
push
dec
mov
xchg
data16
lret
daa
jp
dec
adc
mov
dec
mov
and
cli
xor
mov
cmp
pop
sub
xlat
pop
gs
cmc
add
bound
ficoml
push
in
push
mov
xor
adc
push
add
stos
and
outsb
xorl
xchg
add
daa
pop
loop
and
jg
or
pop
scas
sbbl
sbb
pop
and
cld
jne
sub
cltd
mov
mov
xlat
addr16
sbb
insl
ret
jnp
test
xlat
pop
lret
pop
jecxz
scas
mov
adc
data16
or
insl
pop
or
add
or
add
and
pop
ljmp
arpl
jnp
test
popf
cld
xchg
test
push
test
xchg
mov
sbb
xchg
add
cmp
shlb
adc
xchg
in
repnz
jmp
arpl
jnp
mov
enter
out
mov
mov
ja
dec
xlat
sbb
inc
add
xlat
xor
scas
adc
dec
je
in
adc
sbb
enter
test
jbe
adcl
pop
in
popf
test
mov
les
jne
push
mov
cld
xchg
repnz
dec
lock
xor
insb
out
in
pop
stos
jecxz
fstl
mov
mov
imul
std
cmp
pop
sub
mov
scas
stos
jmp
clc
fdivs
inc
push
fwait
mov
loope
sti
test
jns
jmp
mov
add
inc
fisttpll
cld
insl
mov
push
mov
imul
jge
and
fs
sbb
js
jo
dec
cmp
mov
notl
push
stc
cs
mov
xchg
sbb
cli
out
mov
mov
imulb
dec
lcall
push
test
ja
cmc
out
jno
xchg
add
push
adc
push
mov
inc
push
test
cmp
es
xchg
cmp
aad
in
cmp
movsl
push
adcl
into
jp
add
das
inc
mov
push
inc
mov
fstl
sti
xorl
jl
lahf
xchg
push
sti
xlat
fsubrs
mov
loope
fbstp
hlt
and
hlt
clc
inc
sub
shl
cmp
pop
out
and
jecxz
loop
fdivrs
push
bound
nop
das
les
ds
jmp
pushf
jl
imul
inc
hlt
rcrb
push
rol
pop
sub
jns
jno
icebp
cs
decb
jae
fdivrs
or
jmp
add
pop
lea
out
jge
icebp
popa
mov
mov
sub
repnz
and
mov
out
mov
pop
push
movsl
xlat
xor
fimuls
push
or
mov
cmp
mov
mov
inc
jmp
mov
xchg
out
xor
xchg
enter
xlat
dec
pop
pusha
dec
pop
fld
aaa
repnz
cmpb
jp
bound
xchg
xchg
sbb
xchg
subl
jo
movsb
sub
mov
push
lods
test
dec
mov
inc
jge
fbstp
push
cmc
dec
gs
adc
dec
popf
fldenv
mov
test
or
jne
movsb
inc
aad
jbe
inc
int3
out
cmp
mov
sub
cmp
ror
ss
add
rorl
insb
cli
add
popf
push
xchg
adc
sarl
xor
push
mov
cwtl
and
mov
imulb
mov
mov
icebp
cmp
mov
jmp
push
adc
cli
adc
int
aam
cltd
outsl
rcrl
jge
js
or
pop
mov
adc
add
sbb
scas
bound
xchg
xor
jg
out
dec
pop
mov
daa
dec
or
jp
sub
and
mov
daa
cmpsb
push
lret
and
in
out
mov
popa
adc
cmp
mov
aad
and
cmc
cmp
cwtl
add
hlt
ljmp
push
pop
mov
sbb
sbb
and
in
adc
fnstenv
inc
mov
bound
rcll
xor
cmc
push
jnp
mov
push
lods
xchg
jmp
icebp
cmc
int
cmpsb
sahf
leave
ja
xor
or
jne
mov
sbb
push
and
sub
sti
outsb
xchg
inc
adc
pop
lods
insb
xchg
stos
jle
ficoms
mov
push
cmpb
sarl
shlb
cmp
sub
xor
in
cmp
je
sub
pop
inc
imulb
and
aam
xlat
inc
and
push
rcll
js
jle
dec
jbe
neg
in
cmovge
loope
inc
cmc
adc
enter
insl
dec
mov
xchg
cmp
pop
mov
sbb
dec
movsl
and
enter
lret
test
mov
pop
jno
lock
outsb
mov
add
or
mov
daa
pop
and
mov
lahf
popa
xor
adc
insl
xchg
imul
xchg
add
sub
jmp
fadds
adc
add
enter
inc
stc
add
push
mov
rcl
xchg
mov
enter
loop
add
xchg
imul
add
jmp
dec
jmp
or
xchg
orl
in
lods
loopne
mov
adc
mov
adcb
std
fistpll
call
test
jns
aas
notb
pop
push
adc
xor
push
and
dec
orb
add
and
int3
add
call
xchg
sarb
xor
mov
pushf
enter
push
cmpsl
jmp
fldl
inc
mov
xchg
mov
rcr
out
arpl
mov
notl
jp
pop
cli
pop
xchg
xchg
jnp
adc
iret
outsl
nop
add
and
mov
loope
pop
mov
mov
enter
insl
lea
add
scas
sbb
xor
mov
add
subl
pop
xor
xorl
imul
add
pop
roll
pusha
aaa
into
fnstenv
jo
cmp
scas
lahf
or
push
jecxz
sbb
mov
pop
sbb
aaa
cmp
mov
pop
sbb
inc
mov
and
mov
pop
add
pop
test
or
add
or
cmpb
out
sbb
clc
add
and
int3
mov
push
xchg
test
das
jnp
out
repz
add
mov
es
push
hlt
test
sbb
inc
jnp
in
push
je
cltd
push
add
in
fstl
data16
inc
loopne
jmp
rol
and
jecxz
mov
hlt
push
scas
mov
mov
enter
xor
cmp
frstor
cmp
xchg
adc
gs
xchg
or
push
dec
shrb
pop
shlb
add
xor
mov
movsb
fs
or
mov
fwait
scas
js
push
mov
push
xor
lods
inc
cmp
in
test
les
xchg
cmp
pop
ficomps
mov
mov
mov
repnz
dec
test
mov
ds
jmp
in
lods
fcompl
fimull
mov
aaa
iret
cmp
pusha
movsl
movlps
cmp
jno
loop
mov
mov
jmp
repnz
testb
stos
pop
inc
inc
aad
cmp
mov
mov
jmp
call
call
push
ret
leave
cmp
mov
jge
and
xchg
and
leave
mov
xor
jmp
jp
add
ss
outsb
cltd
sub
mov
push
xchg
jno
popf
inc
xchg
jns
xchg
jle
shll
pop
gs
lahf
pop
cmc
paddusw
ret
daa
dec
xchg
dec
cmp
mov
addl
outsb
mov
adc
rol
in
pop
mov
popa
cmp
cmp
jno
xchg
pop
sbb
adc
or
push
popa
outsb
dec
mov
pop
bnd
je
add
cmp
mov
shll
shlb
sbb
xchg
leave
mov
stc
idivl
std
mov
mov
test
std
xchg
adc
xor
push
jecxz
cli
or
dec
in
dec
sbb
pusha
pop
sub
lahf
xchg
pop
int3
jg
outsb
cmp
inc
push
and
xlat
loop
lret
mov
xor
push
cwtl
imul
daa
push
imul
shr
aaa
xchg
and
inc
jl
jge
or
push
inc
lods
xor
mov
pop
mov
pop
pop
push
xor
fcoms
or
jns
dec
jle
jecxz
jo
fwait
shlb
in
mov
insb
add
add
add
add
add
push
add
jb
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
jo
jo
push
pushl
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
outsl
jne
or
test
add
add
add
pusha
add
add
rolb
add
add
add
inc
rolb
test
add
add
cmc
jae
inc
jb
add
pop
add
push
out
jmp
mov
sahf
sub
or
test
cwtl
inc
ret
incl
add
js
mov
add
lea
add
push
push
push
push
pop
sub
push
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
nop
push
push
clc
decl
incl
xor
adc
add
or
decl
pop
incl
lea
clc
cmp
stc
sub
lea
inc
add
adc
in
push
mov
add
add
add
outsl
xchg
pusha
inc
imul
outsl
dec
test
gs
mov
inc
jae
add
jbe
je
arpl
xchg
xor
dec
fs
ja
add
addr16
popa
add
shll
imul
push
inc
push
mov
add
nop
add
jo
dec
popf
mov
inc
ror
xor
push
rol
push
cmp
data16
push
cmp
jne
aam
xor
inc
and
push
fimull
imul
out
pop
fsubp
mov
and
pop
into
pop
mov
cmp
inc
fmul
pushf
jg
adc
xchg
ret
and
dec
lahf
icebp
and
ficoms
add
xchg
popf
jno
adc
mov
inc
cmp
xchg
push
mov
mov
scas
lahf
imul
call
loopne
push
jns
andb
push
sub
add
jnp
fnsave
pop
mulb
add
and
cld
loope
rcrl
sub
repz
jo
lods
xor
mov
dec
lret
pop
pop
and
mov
in
mov
imul
cmovge
xchg
stos
fiaddl
add
loop
jp
scas
jl
jle
out
addr16
loop
lea
shll
scas
cltd
test
icebp
pop
into
or
xor
or
hlt
add
dec
mov
pop
jecxz
adc
dec
fiadds
nop
sbb
cmp
pop
mov
rcl
es
push
mov
outsb
test
inc
xor
xchg
push
into
enter
sbb
jp
pop
fmull
push
dec
sbb
or
dec
mov
pop
add
addr16
jo
hlt
mov
shrl
andb
arpl
mov
ja
rcll
enter
adc
test
scas
pop
push
sbb
lock
xor
jg
inc
fstpl
jl
in
dec
popf
std
in
ja
jnp
and
lods
fisubl
jp
jge
xchg
push
movsl
cmp
xor
mov
jnp
cmp
mov
test
xor
push
dec
jecxz
icebp
bound
call
adc
stos
imul
sub
and
pop
xchg
adc
push
lods
clc
mov
cli
mov
nop
dec
pop
mov
adc
mov
stos
aaa
and
push
jno
out
test
jns
push
imul
and
insl
push
jae
mov
push
fsubp
or
mov
sbb
neg
scas
mov
inc
scas
cld
xchg
inc
stc
jae
and
sbbl
scas
or
cmp
leave
add
and
cmpsb
jecxz
sbb
push
adc
into
in
add
lock
add
call
cmc
xor
cltd
and
and
stos
pop
and
loop
inc
jnp
inc
in
loop
add
hlt
hlt
pop
insl
sbb
jg
or
sub
dec
mov
jo
nopl
xchg
xorb
loope
mov
pop
xchg
push
xor
mov
xor
cmc
std
or
ja
xchg
add
sub
push
scas
lock
dec
insl
cmp
mov
loop
xchg
aam
and
sti
dec
addl
pop
test
push
into
outsl
adc
mov
mov
add
scas
insb
jns
rorl
xchg
pop
aad
pop
rolb
fisttpl
mov
test
cmp
sub
shll
mov
mov
fsubl
shrb
sub
test
lea
cmc
mov
jb
pop
fldl
into
int
inc
hlt
shlb
cmc
sti
lea
call
or
mov
cwtl
scas
push
cmpsb
mov
psubusw
icebp
mov
pop
cmp
mov
jo
fwait
dec
pop
stos
ret
xor
orl
dec
clc
dec
stos
jecxz
or
popa
into
and
dec
out
fisubrl
lret
in
and
adc
adc
push
das
cmpsl
repnz
aad
popa
nop
int3
aam
lret
in
pop
xchg
lock
sub
mov
rcll
test
fisttpl
js
cld
lea
dec
mov
in
ret
xchg
mov
lods
scas
int3
scas
xor
mov
gs
pop
cmp
mov
out
sub
setle
mov
push
or
push
mov
rclb
int3
dec
mov
enter
cmpsl
add
scas
cmp
test
cs
daa
es
xchg
jb
dec
pop
xor
lret
xor
adc
lock
int
inc
stc
inc
mov
sbb
mov
ficoml
fmulp
mov
pusha
popf
cmpsb
push
call
mov
int
ficoms
testl
adc
dec
add
mov
leave
enter
jge
call
jne
add
xchg
fwait
dec
sub
xor
fwait
sahf
sub
stc
lret
jno
aaa
push
xor
push
rcl
lret
cmp
addr16
out
jg
add
outsl
lods
lods
mov
movsb
sub
and
mov
loop
dec
lods
push
insl
push
jmp
gs
inc
sti
data16
loope
clc
lea
dec
dec
lock
pop
lock
sub
xor
lahf
out
add
inc
adc
mov
sahf
pop
movsb
ret
xor
jne
dec
pop
inc
out
xor
js
xor
mov
and
in
in
dec
pusha
xor
cli
adc
dec
arpl
dec
in
push
mov
jmp
or
jg
mov
mov
adc
repz
out
into
jb
jle
sbb
xchg
mov
icebp
aaa
add
add
or
std
sub
int3
loope
mov
inc
inc
pop
daa
cmpsl
cmp
pop
nop
xchg
fsts
js
adc
movsl
push
movsb
js
shrl
jl
jp
popf
jmp
sub
mov
sahf
test
aam
andl
push
test
pop
or
pusha
or
cmp
addb
in
adc
lcall
rcr
nop
dec
pop
or
jmp
lret
mov
sbb
xchg
ds
cmp
pop
add
inc
inc
jb
les
movsb
jl
push
lea
testl
cmpsl
push
dec
scas
jns
testl
mov
jl
xor
pushf
adc
scas
cmp
insb
mov
shlb
dec
popf
xchg
dec
fcmovb
sbb
int3
ss
cli
lret
ret
push
fisubrs
outsb
add
add
inc
jge
mov
add
dec
adc
mov
adc
out
lods
push
and
cmc
and
mov
mov
mov
pop
pop
pop
jg
sbb
sub
and
notl
adc
int
xor
inc
jbe
pop
ret
into
cmc
test
ror
daa
aad
fbld
hlt
jmp
add
push
xor
xor
mov
mov
jecxz
push
adc
int3
cwtl
int
push
push
fdecstp
rcl
mov
xchg
sbb
aad
sbb
sbb
xchg
iret
mov
mov
and
ficoml
fdivl
mov
dec
in
scas
mov
stos
mov
in
sub
lods
mov
aam
pop
jl
scas
sbb
idiv
xlat
or
and
movsl
lock
incl
int
push
dec
dec
xchg
mov
popf
outsb
push
movsb
pop
outsb
inc
and
test
inc
pop
inc
and
in
adc
xor
add
cmpsb
push
and
pop
inc
inc
jns
fisttpl
dec
addr16
or
mov
cmp
jb
xchg
pop
xor
mov
std
push
jmp
mov
jb
xchg
xchg
movsb
js
and
sbb
xchg
mov
cs
in
lock
push
xchg
out
xor
ljmp
mov
adc
xchg
orl
mov
push
sub
popa
popf
ds
sbb
nop
loope
scas
cmp
push
aad
fwait
sub
adcl
pop
mov
lar
mov
jbe
mov
jbe
adc
aad
lods
ljmp
xchg
ljmp
stc
fnsave
mov
push
mov
shlb
mov
lods
lods
js
js
lds
aam
sbb
sbb
lcall
cltd
enter
inc
std
inc
cmp
out
test
xor
or
call
pop
adc
xchg
mov
xor
inc
push
mov
ja
dec
xor
inc
jnp
mull
mov
fwait
or
dec
int
mov
in
ss
add
orl
cmpsb
xorb
push
pop
xchg
xchg
add
sti
jecxz
or
mov
mov
mov
shrb
mov
sbb
cmpsl
cs
fwait
test
push
push
inc
jo
iret
fldt
xchg
dec
cmp
fdivl
cmpsl
lret
jl
or
mov
test
push
pop
cmp
movsb
ds
shlb
js
bound
mov
mov
iret
mov
in
clc
cltd
jcxz
jae
add
int3
pop
dec
push
int
stc
js
xchg
jecxz
mov
sub
sbb
loop
xchg
jle
or
and
xor
test
push
and
mov
cmpl
ret
popf
sbb
aam
pop
mov
in
push
push
push
push
call
mov
jecxz
stos
popf
xchg
add
imul
sub
pusha
push
in
rorb
adc
mov
add
jl
test
xor
add
xor
sub
loop
aam
xchg
xorb
cli
inc
psubw
insb
dec
and
mov
add
mov
sbb
pop
push
sub
jo
mov
pop
jp
push
add
icebp
or
ja
push
xchg
outsl
xchg
mov
jl
dec
inc
aaa
shll
test
inc
jbe
pop
mov
dec
clc
mov
daa
mov
mov
imul
inc
into
ret
les
pop
dec
pop
sub
test
fs
sti
ljmp
aam
out
mov
les
repz
jle
lods
jge
fisubs
int3
orb
decl
inc
cwtl
insb
lock
xor
out
xor
fwait
shlb
in
fwait
lea
cwtl
cltd
mov
inc
mov
sti
bound
sbb
and
and
pushw
jecxz
sti
ljmp
dec
sub
push
mov
fcompl
mov
pop
jne
lahf
gs
sbb
bnd
test
shll
push
scas
mov
dec
push
and
sub
push
pop
jns
scas
inc
inc
imul
mov
push
mov
mov
add
add
mov
and
jno
das
add
dec
pusha
mov
sahf
dec
cmp
pop
xchg
jp
scas
shrb
jns
mov
scas
hlt
mov
xchg
xchg
adc
sbb
pop
in
inc
shll
sti
mov
repnz
icebp
cmpsb
iret
insl
cld
add
mov
out
cltd
dec
ret
jmp
lods
lret
jbe
dec
xor
pop
outsb
arpl
fsubr
gs
aad
cmc
sbb
jb
push
lret
pusha
xchg
xor
pop
rcrl
divb
mov
push
pop
pop
in
mov
shrb
fwait
insl
rorl
movsb
mov
das
pop
jno
adc
pop
into
ficomps
mov
call
jnp
std
lock
xor
je
fists
cmp
and
jae
dec
inc
mov
loopne
sub
dec
sub
test
pop
jle
mov
test
movsb
neg
mov
dec
jns
inc
fs
dec
scas
arpl
lock
sub
in
mov
shlb
loopne
xlat
adc
or
sbb
add
sbb
popl
xchg
dec
xchg
dec
add
test
mov
jge
inc
jmp
dec
decl
xchg
in
les
xlat
jmp
jae
xor
ljmp
cmpsl
les
push
in
fisubrs
je
xorb
lods
jecxz
cmp
cmp
push
add
js
mov
or
add
mov
mov
add
xor
sub
pop
std
rclb
in
push
pusha
dec
cmc
inc
repz
jbe
jns
push
fisttpll
inc
clc
leave
out
and
push
insb
cltd
mov
sti
test
dec
xchg
shrb
or
cmp
push
test
test
ja
mov
lock
mov
sub
add
andl
pop
inc
and
popa
and
sub
leave
loope
jle
inc
sahf
push
sbb
aas
mov
sar
xchg
push
cmp
outsb
and
xchg
sahf
arpl
stc
mov
mov
xchg
mov
add
aam
mov
push
adc
stos
repnz
add
mov
jecxz
or
loop
cmp
inc
icebp
arpl
in
or
dec
loope
imul
ret
leave
and
mov
leave
test
jae
dec
mov
in
push
cmp
out
mov
jb
sub
std
insb
shrb
das
lods
mov
mov
add
mov
lret
sub
das
mov
data16
xor
sub
sbb
sbb
push
sub
pop
push
jns
push
jl
push
xor
ficompl
imul
aas
mov
ret
jb
add
arpl
sub
dec
shlb
sbb
lea
or
fldlg2
mov
add
push
jecxz
cmc
cmp
jg
mov
mov
cmpsb
mov
xlat
leave
lahf
sbb
pop
std
xchg
insl
inc
pop
dec
sbb
inc
and
popa
aaa
and
mov
movsb
dec
shrl
mov
mov
mov
popa
pop
shlb
pop
repnz
jb
adc
sub
pop
popf
mov
inc
addr16
add
mov
int
jbe
mov
outsb
lcall
movsb
aaa
movsl
nop
ja
cmp
mov
xchg
add
dec
add
mov
mov
jge
pop
mov
or
xchg
cmpb
dec
loopne
andl
or
mov
pop
subl
in
mov
outsb
jp
jecxz
add
cmpsl
das
hlt
or
mov
add
stos
aas
aaa
lcall
addl
adc
add
mov
mov
mov
sub
dec
repnz
jecxz
push
ret
sbb
lret
loopne
xchg
xchg
pop
sub
add
rcll
in
ja
cmp
popa
and
pop
sub
mov
cmp
jp
xchg
push
test
push
inc
add
add
sbb
push
mov
cld
and
insb
cmp
cmpsb
imul
call
insb
sub
mov
pop
xchg
push
xor
repz
xchg
inc
std
mov
or
adc
push
leave
and
jae
cmpxchg
fisubrl
fimuls
xchg
adc
lds
dec
sub
sti
test
push
mov
mov
imul
inc
push
int
in
loope
dec
rcrl
iret
sub
popf
add
mov
xchg
lds
push
pop
fs
icebp
cs
adc
andl
jle
popa
stc
sub
mov
repnz
loopne
mov
popa
add
adc
test
ret
adc
stos
sub
adcl
or
pop
out
mov
rorb
inc
sbb
shlb
stos
outsl
mov
loop
dec
dec
aad
mov
shlb
mov
lcall
or
fcomps
aad
xchg
dec
flds
popa
and
sub
push
and
movsl
push
andb
daa
push
adc
lret
xor
aad
adc
jge
insl
lret
inc
or
loopne
pop
lods
icebp
pop
push
mov
and
mov
fcom
xchg
outsl
jae
lahf
insb
ss
or
xchg
xchg
arpl
adc
rcrl
fwait
or
cmpsb
ret
adc
out
mov
adc
sub
addr16
imul
xchg
aad
popf
dec
xchg
daa
cmp
xchg
cmpsl
inc
add
or
inc
into
pop
push
dec
leave
shll
push
into
repnz
sub
and
dec
insl
adc
xchg
cld
cmpb
ljmp
sahf
jbe
xchg
adc
cli
pop
daa
shl
aaa
mov
xchg
xchg
sbb
insb
call
xchg
lret
pop
push
pop
out
jo
bound
sbb
xchg
jmp
mov
cwtl
daa
adc
inc
push
es
push
orb
push
cmpsb
add
sahf
mov
imul
mov
mov
shll
sbb
stc
aaa
sbb
fadds
je
mov
jge
mov
mov
decb
or
loope
out
push
mov
cld
xor
sbb
js
xchg
and
jae
mov
jg
dec
scas
mov
xchg
cmc
mov
mov
in
mov
das
mov
jg
mov
idivl
xchg
test
ret
jmp
lcall
in
mov
inc
push
outsl
fwait
or
push
aad
out
pop
mov
push
jne
push
fbstp
sqrtps
jno
pusha
andb
pop
loope
lret
sbb
or
and
loopne
pusha
outsb
daa
push
mov
or
mov
addb
loop
daa
bound
jne
in
outsl
mov
out
pop
push
xor
into
push
shlb
adcl
cmp
cmp
lret
repnz
test
sub
adc
fsts
rclb
enter
mov
adcl
pop
shll
jl
repz
sbb
jno
mov
push
jnp
into
sbb
stos
in
jp
jo
dec
mov
and
repnz
not
or
rcl
xor
adc
movsl
push
push
int
xor
and
lock
sti
adc
cmp
add
daa
adc
xchg
sub
mov
pop
xchg
adc
dec
xchg
das
mov
lods
mov
mov
inc
insb
scas
popa
inc
jle
clc
sahf
scas
stos
jg
xlat
sub
add
fs
xor
pushf
lock
xchg
jae
cmp
ret
xlat
xchg
fcoml
sarl
arpl
cmp
mov
and
jno
jno
out
xor
fidivrs
mov
xchg
and
xor
and
repz
mov
fbstp
jnp
lea
adc
in
and
pop
mov
mov
cmp
xchg
pop
sbb
sahf
xchg
push
mov
roll
mov
fdivrs
cld
adc
jmp
push
ljmp
outsb
shll
js
adc
aas
add
inc
and
mov
add
add
add
add
add
add
add
add
add
add
loopne
add
addb
add
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
add
add
add
imul
adc
adc
add
adc
add
add
add
add
add
add
adc
add
test
popa
add
add
jb
add
add
add
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
push
push
jns
jne
dec
imul
add
call
and
sti
jecxz
out
sbb
push
push
pop
clc
xchg
mov
mov
add
push
add
jne
jne
pop
push
std
pusha
jmp
js
clc
clc
test
pop
add
mov
mov
xchg
pop
add
push
add
mov
add
push
pop
add
and
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
inc
jecxz
adc
jne
or
push
push
cmc
and
test
test
incl
je
clc
test
xor
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
lock
sbb
add
sbb
sbb
sbb
sbb
sbb
push
pusha
add
jb
gs
gs
add
inc
insb
gs
outsl
add
gs
dec
add
je
pop
jae
outsl
add
je
xor
insl
pop
dec
gs
jae
push
addr16
je
add
add
addb
add
add
rolb
add
jge
add
add
add
add
lahf
movsb
aad
adc
jge
push
jg
jecxz
arpl
stos
dec
and
leave
dec
rcrb
pop
fwait
dec
outsb
loopne
cld
shl
imull
adc
xor
lret
lods
sbb
mov
arpl
push
mov
add
cwtl
sub
data16
lock
pop
or
mov
push
jns
cmp
mov
xchg
xchg
xor
mov
shlb
adc
or
out
mov
cwtl
pop
cld
and
push
lcall
es
xchg
adc
push
mov
cmp
call
inc
add
movsl
inc
ret
mov
jp
fnstcw
mov
sbb
movsl
hlt
shrb
stos
fsubrl
pop
dec
fimull
dec
and
fdivs
and
popa
inc
jb
nop
sti
mov
jle
pminsw
or
jae
jecxz
add
subl
add
nop
icebp
bnd
mov
lods
mov
xchg
adc
fsts
idivl
bound
pop
xchg
or
inc
xchg
mul
out
or
aas
mov
stos
and
insb
in
test
daa
shrl
inc
sub
inc
bound
cmp
scas
sti
cltd
jno
xchg
jne
hlt
pop
mov
divl
xchg
push
add
stos
xchg
pop
shll
jae
fcmovbe
push
pop
ljmp
mov
lock
jae
fnstcw
iret
imul
jge
lds
jo
xor
sbb
jp
stc
push
sub
lahf
movsb
inc
andl
pop
inc
push
lcall
mov
enter
push
cli
xchg
addr16
add
ret
hlt
scas
sub
mov
jmp
test
stos
int
add
std
cmp
lcall
pop
enter
mov
mov
fcomps
xor
mov
mov
into
arpl
outsl
imul
cmpsb
pop
cmp
sbb
imul
icebp
dec
js
dec
movsl
insl
cmpsb
dec
cmp
push
fwait
aam
loope
out
jecxz
cmp
xlat
cltd
xor
insb
popf
lods
jp
adc
fisttpll
jnp
xchg
stos
out
lahf
test
push
or
fs
stc
add
xchg
push
sub
mov
sbb
push
andl
xchg
or
mov
cmp
xchg
and
lea
gs
inc
cltd
in
xor
add
jmp
mov
nop
loopne
mov
arpl
xchg
loope
int
lret
pop
xbegin
adc
xchg
imul
inc
stc
std
xchg
add
pusha
cmpsb
or
jb
fcmovnb
lods
xlat
inc
xchg
jecxz
mov
call
mov
fwait
imul
mov
pop
and
mov
add
sub
repnz
test
ja
add
xchg
ret
rorl
movsl
fsubrl
fdivrp
cli
pop
jp
xchg
push
and
mov
test
jnp
sbb
in
mov
in
hlt
sbb
ljmp
adc
jmp
sbb
push
sbb
inc
roll
scas
ficoms
xor
es
aas
adc
arpl
sysenter
fwait
stos
in
mov
lcall
mov
push
xchg
cmp
mov
es
cmp
fdiv
and
jge
lret
lock
cwtl
iret
lahf
mov
inc
movhps
adc
into
rol
rcr
sbb
mov
sub
cmpsl
mov
addb
outsb
lock
mov
loopne
mov
mov
lret
cld
loope
mov
lock
mov
jno
jp
lret
hlt
loopne
dec
push
ret
cmp
pop
sbb
cmpsl
xor
and
insl
pusha
ds
lods
loop
cmc
lods
mov
in
inc
fdivs
xchg
lea
gs
adc
or
test
outsb
sub
mov
xor
inc
aas
jmp
push
flds
subb
js
push
mov
xchg
popa
mov
cltd
hlt
push
enter
and
jp
push
adc
adc
mov
xor
pop
adc
loop
jns
lret
cwtl
xchg
repnz
pop
lret
sbb
xor
decb
lods
sbb
icebp
dec
imul
pushf
mov
test
push
or
push
cli
dec
or
sbb
jmp
lret
sbbb
jno
test
sub
idiv
cld
mov
sub
push
mov
enter
jnp
test
xchg
sti
fcmove
fstps
cmp
test
in
fmuls
dec
dec
lods
sbb
and
adc
mov
jge
jne
sub
cmovg
or
dec
push
xchg
cmp
push
arpl
sbb
dec
jl
pop
mov
jmp
inc
jl
xlat
popf
test
mov
test
bound
shlb
daa
leave
cs
fldenv
xlat
add
int
lock
lahf
inc
xchg
jns
insl
lret
sub
icebp
and
das
sbb
insl
lea
test
out
aaa
add
rcl
mov
jecxz
mov
xorl
pop
je
inc
popf
iret
mov
nop
out
fdivrl
repz
clc
jle
dec
int
enter
mov
sbb
je
int
push
xchg
inc
je
sarl
push
push
add
mov
stos
or
scas
imul
aad
loop
inc
adcb
sarl
inc
cmp
jns
jl
push
and
or
test
pop
ja
mov
push
pop
mov
push
fcmovb
dec
addr16
cmp
dec
pusha
fadd
out
pushf
push
test
cmpsl
fwait
mov
pop
js
outsb
add
xchg
dec
push
inc
gs
cmp
imul
sti
frstor
and
cmpl
mov
jne
inc
cmpsl
mov
or
aas
mov
out
inc
repnz
in
add
mov
dec
pop
arpl
clc
add
fmulp
dec
jl
mov
jge
push
mov
and
pop
lods
sbb
xor
in
jg
push
ja,pt
jae
pop
cmp
mov
inc
movsb
adc
cmpsb
or
mov
in
in
pop
les
cmp
mov
cmp
sarl
pushf
test
sbb
outsl
sbb
popf
mov
sub
push
adc
xor
daa
or
pop
imul
jae
push
insl
and
pop
or
aad
fcomip
jns
adc
in
movl
rol
cld
or
adc
imul
adc
cmc
adc
in
sbb
icebp
push
or
mov
push
leave
cmp
repz
mov
cmp
out
cltd
pop
shlb
leave
movsb
and
sbb
pop
mov
dec
sbb
or
and
sub
out
bound
push
fildl
outsb
mov
or
scas
add
nop
scas
mov
popf
arpl
icebp
aaa
sbb
xor
mov
add
inc
ret
pop
cmp
outsb
push
aas
fcmovbe
clc
mov
push
xchg
jbe
push
das
pop
add
imul
data16
in
push
mov
dec
pusha
outsl
addr16
mov
out
into
cmovge
rcl
pop
sbb
sbb
xchg
or
push
xor
pop
out
aaa
xor
push
scas
cld
lahf
or
mov
ja
pop
lret
mov
inc
pop
fisubrl
dec
xchg
sbbb
xor
pusha
inc
xor
push
movsl
push
sti
ret
in
es
fdivl
jmp
int3
sbb
inc
movups
les
mov
je
out
add
add
insl
jle,pn
addl
repz
dec
sahf
push
fiadds
jns
into
js
in
cs
jae
push
cmpsb
mov
movsl
popa
clc
cmp
in
mov
into
pop
or
mov
xchg
out
inc
dec
je,pn
pop
ljmp
inc
push
pop
test
push
jmp
push
inc
mov
xor
push
xor
dec
mov
shlb
jno
and
fcoms
sub
xchg
jae
push
ret
fstl
adc
xchg
fdivrs
inc
lds
jmp
mov
cmp
test
out
pop
cld
push
xchg
inc
loopne
cmp
xchg
int3
aad
inc
out
daa
js
xor
push
iret
jle
and
nop
adc
and
gs
inc
int
lret
cmp
lds
icebp
mov
test
mov
or
sub
mov
push
loope
repz
pop
jo
push
dec
ss
in
sub
xchg
iret
cs
rorl
into
sbb
push
cli
test
push
out
push
add
cmp
cmpsb
mov
sbb
xor
fildl
rcr
aam
in
shll
sbb
mov
mov
scas
dec
aaa
ja
or
scas
mov
dec
dec
out
stos
fcoml
mov
push
fists
and
jo
pusha
in
mov
in
sub
enter
push
fwait
fwait
or
stos
jge
cmp
out
gs
out
sbb
xchg
cmp
in
xchg
aas
lds
dec
icebp
lods
lea
add
jg
jmp
call
sub
loopne
inc
jp
je
mov
into
and
aad
ss
lcall
clc
inc
cmpsl
es
out
incl
jbe
in
mov
xchg
cmp
xchg
nop
jne
push
or
pusha
es
cmpsb
outsl
popf
pop
inc
adc
inc
sub
pop
sub
jecxz
and
jle
fidivl
xlat
fwait
leave
or
mov
loope
iret
into
sahf
jnp
loopne
pop
test
movsb
push
sti
out
adc
lock
stos
fistps
insl
mov
stos
xor
mov
in
jmp
mov
in
ds
mov
sub
push
sbb
mov
jb
lods
jno
stc
inc
pop
std
xchg
out
mov
ja
imul
sub
out
adc
adcl
mov
fadds
lcall
gs
and
push
xor
rclb
inc
push
dec
cmp
mov
push
shrl
push
iret
lret
cmpsb
xchg
cmp
push
cs
xchg
jmp
daa
jne
push
fiadds
scas
cmp
arpl
jbe
sbb
clc
cld
lods
jnp
push
and
cmp
arpl
xchg
inc
in
pop
mov
mov
adc
jle
movsl
xor
orb
movsl
push
stc
jbe
ret
dec
pop
sarl
xor
stc
int
jmp
and
outsb
sti
int
push
jecxz
repz
xchg
mov
jb
dec
or
addl
cmp
adc
mov
bound
mov
pop
xor
push
mov
jae
sti
dec
dec
push
push
icebp
imul
inc
repnz
adc
in
in
sbb
dec
and
cmp
fwait
mov
inc
and
add
xor
je
xlat
and
xchg
or
mov
cmpsl
add
push
sub
stos
das
jge
mov
jns
add
push
push
dec
mov
dec
mov
fs
mov
pop
repz
xchg
cmp
aad
insb
sarl
lcall
scas
mov
and
xchg
stos
inc
pop
xor
sub
mov
xchg
pop
aas
lahf
and
cmc
lea
rorb
pop
xchg
es
orb
adc
dec
mov
ss
testl
mov
aas
adc
push
popa
ds
jle
adc
cmc
fsubrs
adc
sbb
pop
jge
lods
test
mov
fwait
mov
fsubrs
push
stos
mov
adc
lret
jg
cmp
mov
lock
fimuls
leave
adc
xor
scas
jmp
adc
push
lahf
jecxz
mov
mov
cli
xchg
daa
or
lods
aam
scas
rclb
das
xchg
sub
rorl
or
xchg
sahf
aad
repnz
stos
xor
adc
fcom
popa
push
xchg
mov
xchg
adc
int
adc
ret
sti
pop
jns
add
mov
cmp
sub
aas
lds
imul
bound
push
push
hlt
add
mov
lcall
push
into
inc
lock
iret
movsb
outsb
int
pop
lock
cwtl
sarb
pop
scas
bound
stc
addr16
movb
push
iret
mov
ret
cmp
jnp
adc
insl
clc
jnp
dec
push
adc
pop
xchg
popaw
fildll
ja
fidivs
mov
sti
es
xor
into
shlb
adc
aaa
out
rcrb
and
nop
mov
push
mov
out
mov
addb
jbe
scas
inc
ss
mov
xchg
or
loopne
call
push
mov
xor
push
movsb
test
push
movsl
test
cmpsb
icebp
dec
or
outsb
pushf
shrb
push
xchg
andl
push
push
fisubs
sbb
rorb
mov
inc
popf
decb
jp
mov
pop
fldcw
xlat
xor
or
lcall
jl
ficompl
in
outsb
fs
test
arpl
xchg
xchg
xchg
push
adc
fsubs
fcoml
jecxz
out
or
xchg
jp
inc
loope
and
popf
cmpsb
mov
add
adc
lret
and
mov
bound
xchg
ficompl
pop
cwtl
in
adc
out
nop
push
outsb
adc
push
mov
lret
or
push
out
cmpsb
dec
outsl
std
iret
push
pop
repz
call
ljmp
scas
xchg
das
cld
rcrb
sub
xchg
fidivrs
jo
imul
jmp
jb
xchg
push
mov
xchg
xchg
pop
addr16
dec
ljmp
out
movsb
pop
add
jno
xlat
es
xor
or
cltd
xchg
sub
adc
adc
inc
cmp
test
hlt
test
sbb
mov
xor
xor
pop
sub
jl
xchg
daa
mov
dec
flds
inc
mov
stos
or
sarb
decb
lds
in
xlat
dec
out
int
xchg
lods
dec
and
sub
xlat
jnp
mov
push
sub
mov
or
dec
subl
or
psllw
fisttpll
call
testb
movsl
cmp
xchg
gs
push
pcmpeqb
imul
adc
xor
cmp
xor
push
testb
push
xor
ret
push
mov
jo
or
mov
pusha
cltd
std
xor
stos
adc
mov
sbbl
fmull
call
jo
mov
ja
mov
xchg
jecxz
clc
sbb
mov
loope
addr16
data16
and
pop
std
dec
and
out
and
push
xchg
test
push
loopne
inc
sub
sub
or
jno
sub
jle
arpl
decl
shrl
sbb
add
hlt
loopne
aam
sahf
dec
imull
and
lea
je,pn
mov
xor
hlt
out
insl
dec
mov
outsl
mov
lds
ljmp
inc
leave
insl
mov
add
jne
std
adc
xlat
sbb
cwtl
cmp
gs
mov
jge
xor
hlt
test
in
mov
pop
mov
fs
stos
nop
lods
cmpsb
xlat
cmpsb
pop
divl
das
or
cmc
negb
imul
lods
sub
push
xchg
scas
divl
hlt
je
out
and
mov
out
pushl
arpl
adc
jmp
cmpsl
fnstsw
mov
mov
mov
aaa
mov
int
inc
or
pushf
cmp
sbb
int3
mov
les
push
rcrl
mov
mov
icebp
push
aaa
fldenv
aas
andb
mov
pop
push
subl
mov
sub
dec
inc
adc
arpl
pop
daa
cmp
add
hlt
rcl
dec
aaa
adc
stc
imul
and
jo
mov
ffreep
roll
fidivrl
cmp
test
xor
and
call
test
imull
ret
repz
pop
jo
xchg
mov
pop
ss
repnz
mov
push
fs
mov
clc
sbb
sbb
scas
push
mov
mov
ret
hlt
mov
pop
das
js
mov
div
int3
cwtl
push
mov
clc
lds
loopne
int3
lock
adc
fiaddl
pop
pop
call
xor
add
cltd
sub
arpl
nop
inc
loop
xor
jmp
shlb
push
fmuls
test
outsl
clc
pop
sbb
bound
bound
mov
push
popf
inc
pusha
add
add
rcrb
cmpsl
insl
sbb
scas
pop
cld
sbb
sub
sub
fnstcw
fisttpll
cld
mov
subl
mov
mov
and
daa
test
int
sarl
push
push
xadd
jmp
and
cmp
mov
and
loope
add
mov
lea
out
add
add
pushf
add
das
or
jmp
and
iret
cli
test
or
xchg
inc
frstor
xor
jns
int
push
push
ret
cltd
pushf
fiaddl
mov
sahf
jp
fwait
and
pop
jo
jmp
cmc
sbb
clc
sbb
leave
inc
cmp
ret
imul
xchg
or
or
sub
mov
sbb
and
dec
jge,pt
jg
clc
hlt
popf
les
xor
jp
jmp
sbb
movsl
jecxz
lock
pushf
mov
fwait
xchg
cmpsb
in
add
xchg
cmpsl
ja
sbb
dec
xchg
or
sub
mov
cmp
es
loopne
cmp
cmc
data16
ja
push
iret
xor
sbb
xor
mov
sub
mov
fstps
and
push
sbb
gs
fstl
loop
rcrb
addb
push
dec
mov
pusha
lea
iret
pop
jo
inc
dec
data16
add
insb
test
inc
jecxz
shll
xor
mov
punpcklbw
lods
das
push
sub
sub
pop
xchg
xor
push
lods
sahf
gs
stc
stc
jge
inc
mov
xchg
push
or
sub
mov
addr16
push
loopne
popa
into
sub
stos
sub
shl
in
jmp
int3
ja
inc
lcall
jns
lahf
loop
pop
call
dec
pop
and
int
lock
lea
mov
cmp
rcll
insb
popf
mov
xchg
xor
movsb
dec
fnstenv
mov
gs
mov
rolb
mov
testl
ja
mov
ret
cmc
cmc
aad
mov
push
mov
push
sbb
and
adc
gs
mov
push
iret
idivb
jp
jns
stc
imul
int3
ficomps
pop
pop
lcall
add
add
add
add
add
rolb
add
add
add
jge
add
add
add
add
add
add
add
add
int
rolb
add
ja
mov
jg
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
aad
add
add
mov
add
test
add
jl
add
je
add
insb
aad
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rcl
add
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
add
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
xlat
add
push
xlat
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
add
fadds
add
flds
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
flds
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
flds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
fiaddl
add
add
nop
fiaddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
fiaddl
add
fiaddl
add
fiaddl
add
add
or
add
adc
add
daa
fildl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
fildl
add
add
pop
fildl
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
