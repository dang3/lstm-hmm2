xor
inc
addl
xor
jne
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
pushl
call
push
call
pop
xor
pop
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
push
add
jb
mov
lret
stos
add
push
add
add
add
add
and
fadds
scas
add
add
add
add
mov
add
add
movsb
add
add
add
add
and
add
inc
add
pop
add
and
dec
add
add
add
add
add
xchg
test
add
add
add
add
pusha
add
add
add
jge
inc
add
movb
add
add
add
inc
add
add
add
inc
add
add
stos
add
add
add
push
xchg
add
add
add
sbb
or
xor
add
adc
push
add
add
add
add
push
add
and
lcall
add
mov
mov
push
add
add
sbb
add
add
and
cmp
jne
movb
add
mov
pop
add
push
add
add
add
pop
add
add
add
add
inc
add
add
sbb
mov
push
pop
add
inc
add
add
jecxz
add
add
add
add
add
add
add
jecxz
inc
add
add
test
mov
add
add
add
add
dec
add
add
add
cmp
addb
add
add
imul
lods
add
add
add
push
add
add
add
movb
add
cltd
add
xchg
add
add
add
add
scas
add
add
add
push
add
les
pop
add
movsl
add
fadds
xor
add
inc
add
inc
add
add
jo
xor
dec
add
lahf
add
add
popa
add
add
add
sbb
pop
add
jg
inc
add
add
loopne
sbb
push
add
add
add
addl
and
adc
adc
dec
add
add
call
add
add
dec
add
add
push
add
dec
add
mov
add
add
add
xchg
add
add
add
add
add
add
pop
add
xor
add
adc
filds
in
add
inc
add
jnp
add
add
pop
add
add
xchg
add
add
addr16
add
add
add
add
add
out
add
push
add
mov
mov
add
cmp
movb
add
incl
mov
mov
add
mov
xor
add
aam
xor
loopne
aam
inc
add
add
add
add
lahf
add
add
pop
add
add
sbb
add
cmp
fildl
filds
inc
add
inc
add
inc
add
add
add
add
add
add
jne
mov
add
add
dec
add
and
add
add
add
fadds
mov
add
or
movb
add
stos
add
xor
fildl
or
and
add
pop
add
add
add
add
test
add
or
sti
add
add
pop
add
xchg
sbb
js
sub
pop
add
incl
xchg
add
pop
add
add
inc
add
add
add
add
lahf
add
add
add
add
add
add
add
mov
xor
sub
sti
add
or
add
sarb
mov
repz
mov
push
jmp
push
addl
cld
shll
adc
mov
cli
and
add
out
cld
pusha
out
adc
mull
fcomi
jns
adc
stc
push
and
js
or
ret
cld
pop
or
push
jo
inc
movb
xchg
xor
pop
mov
jne
jecxz
fstl
mov
cmpl
xlat
xchg
mov
lods
push
xor
es
mov
js
jne
pop
popa
pusha
or
sub
jge
xor
lds
js
sub
xchg
jae
test
jno
outsb
mov
out
sbb
push
daa
call
scas
xchg
jp
pop
inc
arpl
arpl
dec
xor
lods
cmp
and
or
popa
jnp
push
lods
mov
pop
xorb
cltd
xor
pop
shlb
sub
inc
popa
insb
movsl
fstpl
stos
lret
dec
pop
add
mov
adc
dec
and
inc
lods
lea
adc
mov
cld
loopne
mov
add
mov
stos
jp
xor
jmp
bound
fmul
push
push
sbb
int3
aam
test
xor
lods
dec
mov
jnp
dec
fbstp
daa
sub
xor
in
xchg
decl
lret
xchg
dec
mov
fwait
roll
pop
pop
sbb
add
sbbl
aas
stc
js
cmc
mov
xor
push
cmp
clc
and
xchg
data16
out
fcompl
inc
mov
adc
inc
jnp
push
mov
loop
sti
jecxz
jo
shlb
pop
xchg
cs
movsl
lods
mov
into
sbb
nop
arpl
mov
lods
sub
iret
daa
push
aad
dec
cmp
cmpsb
lea
scas
mul
insl
dec
movsb
stc
xor
mov
shl
mov
xchg
or
call
lods
and
repz
insl
orl
inc
jae
and
mov
cs
sub
lds
ret
mov
loope
xchg
adc
test
jp
jg
pop
add
jo
dec
sub
xor
lods
inc
cltd
push
pop
les
inc
sub
cld
jecxz
cmp
xlat
imul
lret
mov
popf
aam
fnsave
cmp
testb
xchg
imul
mov
sub
out
int3
enter
xchg
mov
jp
lds
xchg
adc
cld
adc
in
pusha
daa
and
xchg
pop
pop
sti
sar
aad
adc
popa
loope
test
xchg
imul
mov
filds
mov
shlb
pop
iret
push
lea
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
fiadds
jno
popa
out
adc
stmxcsr
jle
outsb
xchg
pop
orl
xor
popa
out
adc
and
rcrl
dec
nop
jg
outsb
sarl
push
mov
mov
into
jecxz
mov
mov
mov
loop
cltd
sbb
in
std
pop
aas
xchg
or
mov
mov
repnz
and
cmpl
fidivrs
arpl
mov
and
dec
mov
je
sbb
push
mov
pop
jg
into
add
add
ja
fcom
inc
inc
cmp
insl
xchg
dec
in
loope
and
popf
loop
push
sub
xchg
jmp
mov
into
mov
dec
shlb
pop
jmp
push
sub
scas
push
dec
xor
cld
jecxz
adc
stos
scas
icebp
mov
movsb
outsb
aam
sbbl
scas
xchg
fdivs
lahf
out
shr
add
loop
lds
or
pop
mov
mov
into
jno
popa
out
cmc
sahf
jns
xor
pop
dec
xchg
outsb
fstps
mov
cmpl
push
add
fldcw
inc
fcmovbe
cs
push
xchg
sub
out
dec
fmuls
sbb
and
add
fs
jmp
xchg
cmp
sbb
cwtl
fcomps
jp
lahf
sub
xchg
inc
lods
add
rcrl
dec
icebp
jle
outsb
xchg
push
orl
push
fiadds
jno
popa
out
adc
and
icebp
jle
outsb
xchg
push
orl
push
fsubp
out
xchg
mov
and
xlat
xchg
call
or
inc
mov
fildll
clc
test
mov
and
mov
dec
or
lcall
jge
pop
or
push
daa
arpl
inc
stos
push
outsb
das
gs
mov
xchg
push
jmp
mov
adc
lds
mov
cmp
ljmp
or
into
jmp
fs
xchg
push
dec
decl
push
sahf
pop
push
aas
sub
into
mov
scas
sub
dec
and
fwait
aad
xor
mov
clc
test
adc
and
aam
icebp
setbe
in
rorb
mov
pop
out
add
ficoms
push
xchg
dec
clc
nop
jmp
xchg
xchg
adc
push
inc
mov
mov
or
lock
lahf
inc
mov
lods
cmp
mov
sbb
push
and
inc
jno
sbbb
sbb
dec
push
pusha
ds
adc
pop
jle
roll
das
push
inc
add
sub
lret
imul
inc
add
pop
stc
ja
xchg
inc
je
pop
mov
jbe
add
cli
pop
out
mov
test
fwait
mov
orb
xchg
push
jg
sub
xor
adc
cltd
out
pop
push
or
mov
out
ss
pop
arpl
and
jno
jo
inc
xchg
in
mov
insb
sbb
pop
and
mov
sbb
mov
push
testl
mov
pop
sbb
mov
jmp
mov
mov
inc
nop
ror
stc
cmp
test
add
roll
movsl
fsubl
lahf
pop
sbb
shlb
gs
aaa
repnz
mov
push
test
mov
push
xchg
inc
scas
or
xchg
int
test
push
lods
out
add
push
lods
dec
out
pusha
and
cli
stos
test
mov
dec
cmc
aas
mov
jnp
jg
mov
ret
ret
sbb
mov
fsubs
addr16
or
sbb
cmp
xor
popf
jno
shll
sar
aad
add
pop
repnz
inc
jmp
pop
loop
into
push
scas
mov
call
push
in
dec
mov
mov
pop
or
jp
stos
int3
lock
and
cmp
mov
shrb
sbb
lahf
outsb
mov
pop
adc
push
jnp
faddl
mov
jo
mov
addr16
es
mov
pushf
in
xchg
inc
xor
nop
enter
cmpsb
mov
and
cmp
lds
je
fisubrl
loop
mov
push
and
pop
mov
adc
scas
mul
lock
jno
out
pop
pop
imul
jno
add
xor
imul
enter
clc
adc
orb
xchg
xchg
fldcw
es
jb
in
jb
into
or
push
and
out
sbb
fcmovnbe
xor
and
insb
ret
int
negb
stos
inc
lahf
std
cmp
jmp
fsubrp
ds
hlt
adc
dec
dec
xchg
jae
mov
add
cmp
fdivp
iret
or
outsl
test
test
inc
mov
adc
cmp
pop
mov
xor
xchg
adc
cld
test
out
push
jle
fs
and
rorb
sbb
jmp
test
dec
pop
push
jne
add
movsb
or
data16
fidivs
scas
xchg
mov
cmc
test
mov
adc
repnz
add
in
call
xchg
push
add
mov
ret
mov
mov
xchg
ss
mov
or
scas
sbb
xchg
or
shlb
aaa
inc
fisubrl
idivb
dec
inc
jmp
pop
inc
xchg
cmp
sub
daa
and
cmc
xchg
orl
adc
mov
or
fcomps
outsb
fwait
aam
popf
scas
and
std
sub
mov
or
mov
push
inc
cltd
mov
in
mov
cmp
cmp
mov
fsubrs
rcrl
push
push
filds
push
rcll
adc
pop
dec
lcall
sbb
ficompl
hlt
aam
inc
xchg
xor
pop
mov
call
and
xchg
mov
cmp
hlt
add
in
pop
mov
int
jo
or
imul
jne
add
sub
aam
xchg
test
adc
les
repz
cmpl
cmp
push
adc
aad
push
xchg
in
hlt
lods
sub
fdivp
mov
cmpsl
and
add
push
fmul
mov
pop
movsb
cmp
sbb
push
rcll
pop
jns
pop
jae
mov
add
cmp
xor
lret
int3
les
mov
adc
mov
lret
or
and
jne
popf
je
jle
movsb
xchg
jge
xor
test
cmp
ret
repnz
loopne
sub
lcall
addr16
out
sub
es
test
test
fldt
xchg
ret
adc
sti
or
sub
stos
repz
pop
mov
dec
fiadds
add
mov
xor
aaa
adc
xchg
loope
mov
push
rclb
adc
or
leave
mov
hlt
fxtract
push
add
test
addr16
add
shl
test
loop,pt
mov
dec
xchg
or
push
push
mov
xor
test
push
nop
pusha
imul
pop
dec
sbbl
and
push
jmp
rcrl
fldt
inc
dec
pop
aad
mov
xor
dec
jbe
push
cmp
shrl
fdivr
dec
or
push
loope
pop
push
lea
mov
pop
negb
mov
jae
sbb
mov
iret
dec
test
fdivrs
test
cmp
or
jns
movsb
leave
xor
add
xor
dec
in
sbb
enter
sub
popf
pop
push
incl
out
movsl
mov
sub
ds
and
mov
rorb
mov
cmp
int3
bound
int
fcomp
cltd
mov
addr16
ja
xchg
jl
mov
pop
data16
int3
imul
mov
sub
or
cmp
call
xchg
add
mov
rorl
inc
jo
sahf
dec
lods
cltd
into
or
inc
pop
xchg
loope
ja
int
fdivs
inc
jbe
adc
jo
push
rolb
xor
dec
lcall
pop
nop
movl
insb
pop
mov
sbbb
and
sbb
cmp
and
in
iret
mov
mov
xchg
xor
jle
pop
mov
mov
popa
sbb
xchg
add
lods
push
xor
ret
arpl
push
fwait
in
out
loope,pt
js
out
mov
or
out
js
ss
mov
gs
shrb
jne,pt
subb
jecxz
mov
dec
nop
adc
bound
ss
push
sbb
sbb
jmp
mov
fsubs
lock
lret
or
adc
scas
sub
inc
adc
inc
lcall
imul
add
dec
pop
pop
xor
test
aaa
lds
push
xchg
pop
mov
and
and
rcr
es
add
mov
mov
lret
xor
dec
jb
cmp
pop
mov
mov
inc
adc
outsb
cmp
mov
adc
outsb
mov
xchg
or
add
mov
xor
sub
inc
xchg
icebp
mov
fwait
insl
xchg
mov
stc
and
dec
sbb
push
push
inc
enter
iret
icebp
mov
call
pop
add
cmpsb
mov
aam
pop
imul
push
inc
xchg
mov
mov
adc
or
and
jns
ret
fldcw
in
mov
sbb
je
leave
and
ljmp
mov
xchg
push
cmp
xchg
cmpsl
scas
cmp
sahf
dec
adc
and
aad
cmpsl
xor
inc
xchg
push
sub
das
mov
ret
sbbl
rcrb
inc
push
addr16
sarl
outsb
adc
fistpll
xor
fistps
jo
lods
gs
mov
subl
add
adc
inc
adc
and
mov
repnz
push
es
std
inc
adc
add
into
push
enter
cmc
hlt
jmp
jge
idivb
adc
jecxz
pop
pop
cmpsl
fldt
daa
xor
and
and
adc
mov
pop
and
loopne
insl
add
cli
daa
movsl
sbb
mov
push
mov
add
andb
fstpt
sbb
std
out
pop
xchg
inc
aam
dec
push
lds
xlat
fsubr
jnp
adc
fldenv
int3
cli
pop
xor
push
xchg
arpl
push
addb
mov
notb
arpl
xchg
nop
mov
and
fs
pop
dec
xchg
cmp
xor
jae
or
rorb
frstor
pop
add
cmp
fdiv
imul
repnz
test
xchg
mov
or
ja
add
add
lahf
lock
mov
adc
pop
iret
xchg
fs
loopne
aam
out
test
push
fdivl
jnp
cmp
xchg
popf
xchg
jnp
fidivl
cmp
das
mov
outsb
sub
jle
jb
push
scas
cltd
pop
xchg
aas
pop
push
out
inc
jg
mov
jae
les
gs
mov
loopne
xchg
andb
out
sbb
inc
push
push
xor
or
sub
lret
repnz
gs
popf
push
les
mov
mov
ljmp
xor
sbb
cltd
enter
cwtl
jne
int3
push
lcall
movsb
sbb
sub
sub
mov
aaa
xchg
lods
in
cld
loope
repnz
mov
repnz
stos
jp
in
mov
xchg
mov
inc
add
mov
dec
outsl
arpl
inc
iret
sbb
xor
inc
mov
cltd
loope
stc
push
sbb
into
jp
int3
ret
aad
inc
mov
insl
bound
xor
sub
cs
pusha
push
in
enter
pop
shlb
aad
mov
cmp
and
lret
shlb
pop
cmp
push
or
scas
inc
adc
test
fimull
test
in
dec
and
imul
and
iret
xor
lret
sbb
insl
movsl
sbb
cmp
frstor
inc
movsl
cwtl
adc
inc
ret
lock
dec
stc
xchg
andl
cmp
jne
daa
sbb
mov
cli
push
mov
icebp
ljmp
leave
sub
jecxz
aam
js
mov
insl
pop
jmp
pop
outsl
mov
popa
fnsave
xor
dec
ficompl
arpl
pop
leave
jl
mov
xor
inc
jae
push
pop
inc
mov
cmp
xor
lcall
popf
push
in
jecxz
out
dec
jp
jmp
or
xlat
enter
ret
and
xchg
test
mov
dec
xor
rclb
imul
std
mov
dec
push
andl
adc
inc
mov
pop
mov
push
sahf
js
divl
test
jne
sbb
movsb
adc
cmp
aas
mov
push
dec
rorl
jge,pn
push
clc
push
lret
repz
mov
jmp
out
bound
sbb
cmp
mov
jmp
xchg
lods
gs
sti
pop
sub
jno
and
or
sub
xchg
sub
push
xor
into
jmp
sub
sbb
in
ja
xchg
sbb
aas
aad
jae
inc
nop
lods
sahf
shlb
cmp
bound
std
popa
xchg
in
stos
in
test
xor
xor
sbb
pop
or
jns
cmc
sub
add
into
mov
jp
iret
inc
test
jnp
ror
addr16
jae
les
pop
in
call
and
aad
dec
addr16
mov
bound
fistpl
push
out
stc
dec
adc
cld
xchg
jns
mov
or
push
xchg
dec
imul
mov
inc
push
add
xchg
rcrl
cmp
mulb
lret
jb
gs
jne
and
and
cld
cmpl
aaa
mov
fnstsw
iret
and
cmp
dec
popa
inc
icebp
into
rcll
hlt
lods
cmp
sarl
sbb
pop
add
cld
sub
in
leave
cmpsb
divl
jl
sub
scas
push
push
cli
xor
cmp
frstor
out
mov
insb
bound
jp
mov
outsb
add
adc
push
in
xchg
js
xor
out
imul
push
notb
push
shrb
adc
cmp
sbb
pop
popa
push
sub
and
add
jne
ds
fcmove
roll
sbb
aaa
mov
lods
fwait
mov
jecxz
mov
push
jno
xor
jae
mov
mov
out
mov
pop
xchg
ja
adc
mov
xchg
scas
leave
stos
cmp
inc
push
push
test
and
xchg
mov
mov
jle
cwtl
mov
pusha
mov
les
cwtl
inc
fnstsw
mov
enter
les
movsl
in
cli
pushw
jae
shlb
popa
jmp
adcl
test
and
int
push
xor
jbe
mov
pop
sti
cmp
sarl
and
dec
jb
xor
jecxz
mov
jg
loope
or
divps
mov
and
pop
mov
imul
orl
jne
or
jae
add
stos
cmp
daa
arpl
fisttps
mov
push
call
pop
repz
pop
nop
out
inc
js
or
xor
out
lds
cmp
mov
mov
testl
pop
push
add
jns
movsl
cmp
mov
push
cwtl
lahf
sub
sub
mov
movsl
xor
rcpps
das
mov
xlat
add
aaa
and
repnz
test
cs
push
rdtsc
cmp
sub
inc
imul
dec
fs
lret
mov
mov
jno
mov
psrad
sub
iret
jo
fs
jl
xchg
test
or
or
mov
ret
cmp
cmp
decb
cld
pusha
movsb
jb
mov
push
fxch
lock
daa
lret
dec
fs
cld
scas
subl
push
jge
lcall
cmp
adc
inc
dec
aam
sub
rolb
rorl
dec
or
cs
add
mov
mov
test
dec
cli
add
std
mov
int
test
dec
sub
mov
mov
sbb
cli
adc
cmp
jecxz
adc
xor
filds
lcall
sub
push
pop
mov
sub
mov
mov
or
cmp
cld
and
mov
mov
in
cld
push
add
imul
jo
push
mov
fwait
out
test
sbb
js
das
lods
leave
inc
out
mov
dec
in
lock
push
jmp
lret
pop
sbb
pop
push
iret
mov
loope
pusha
mov
push
jg
orl
inc
jmp
mov
cld
dec
or
cmp
invlpg
mov
fs
insb
scas
insb
in
or
adc
out
mov
sub
inc
add
repnz
pushf
lods
ljmp
inc
or
mov
pop
push
fiadds
pop
ficoms
mov
jns
lods
call
push
dec
xchg
xchg
cmp
loop
xor
inc
mov
inc
mov
xor
xchg
jl
cltd
xor
mov
sarl
test
sarb
mov
mov
sbb
jbe
jnp
adc
jnp
dec
xor
lea
hlt
out
ret
sub
sbb
fisttpll
addr16
fstpl
jb
mov
jle
out
idivb
test
scas
and
xchg
aaa
push
sub
in
fiadds
dec
cld
mov
sarb
or
cmp
out
js
mov
popa
jo
test
ljmp
xchg
dec
sub
sbb
gs
and
sbb
clc
das
mov
enter
inc
mov
and
mov
sbbl
xor
leave
popf
push
frstor
sub
adc
mov
pop
out
xor
cld
fildl
or
pop
adc
pop
ja
iret
fld
mov
xor
push
movsb
fiaddl
mov
daa
jnp
jecxz
cs
adcb
dec
int3
xchg
lods
repz
lods
jle
and
dec
cltd
jbe
mov
cltd
jecxz
addl
stos
add
insb
dec
js
jmp
cmp
lods
add
cwtl
dec
sbb
test
loope
mov
pusha
push
movsb
fcoml
lret
or
rcrl
scas
insb
pop
sub
sub
xor
jmp
cmc
inc
sti
aad
popa
xor
repz
sub
add
push
test
shlb
mov
aaa
pop
dec
pop
jae
jne
mov
mov
out
mov
pop
fs
icebp
and
cltd
mov
fldcw
jmp
pop
in
dec
lcall
cmp
add
dec
dec
pushf
jmp
inc
out
mov
test
jns
adc
add
cltd
ja
imul
mov
cmp
popa
mov
into
push
sub
and
cmp
test
xchg
arpl
or
jbe
cmp
push
dec
add
pop
je
adc
xchg
scas
andl
or
lret
lock
outsl
and
scas
push
push
adc
push
insl
test
ret
mov
out
int3
inc
inc
test
mov
fiadds
test
popf
xor
dec
repz
test
test
dec
test
test
and
add
adc
push
outsl
jae
xlat
or
push
inc
mov
jge
or
mov
nop
sub
sbb
jo
jmp
mov
or
push
mov
addb
lods
scas
arpl
les
and
outsb
cmp
sbb
bound
lds
dec
pop
loop
repnz
xchg
mov
xor
push
xchg
sbb
adc
das
sahf
jno
negb
int3
jb
cmp
mov
pop
and
lcall
cmc
repz
xor
cmpsb
sub
fwait
icebp
mov
mov
fmul
xchg
pop
and
pushf
imul
lret
mov
mov
mov
pop
jb
jno
mov
or
push
das
dec
sbb
cmp
pusha
pop
enter
out
insb
shlb
xchg
push
or
imul
int3
stos
push
cli
adcb
xchg
movsb
in
fwait
pusha
pushf
lret
pop
fimuls
jmp
incb
addr16
mov
adc
dec
rcrl
sub
xor
pusha
xchg
inc
cmp
fsts
cwtl
sub
pop
adc
cmp
xchg
stos
dec
test
fimull
ret
xor
sub
xchg
add
fstpl
cld
pop
jge
mov
aad
sbbl
popa
cwtl
add
cs
jl
fcoms
loopne
lods
cs
int3
push
mov
lds
cmp
xchg
aas
stos
test
pop
inc
shrb
pop
cmp
test
mov
mov
jne
cmp
lcall
nopl
xor
inc
lcall
mov
jmp
data16
and
icebp
cmpsb
xor
push
jl
add
into
cmpsl
rcl
mov
or
xor
clc
jecxz
push
loopne
mov
arpl
pop
push
mov
pop
dec
ficoms
jmp
jns
dec
pop
or
xorl
mov
pop
jnp
in
lahf
aaa
fmulp
sub
ret
aas
adc
cmp
out
outsb
xor
test
push
das
in
fildll
cmp
outsl
int
ds
xor
xor
test
cwtl
je
inc
shll
leave
and
jno
cmpsl
ja
int
adc
dec
jecxz
cmc
adc
loopne
stc
mov
lea
addr16
in
or
aam
int
or
jp
jl
lds
cs
cmp
sub
xchg
imul
popf
jge
cltd
jns
cmp
sbb
lea
aaa
xchg
jbe
in
enter
scas
insb
xchg
add
cmpsl
fs
cmp
roll
cmp
inc
push
addr16
clc
lahf
bound
push
mov
jne
and
iret
lcall
mov
xor
test
jmp
fsubl
add
clc
add
pop
mov
bound
jge
pop
nop
orl
ds
lret
jnp
das
rcrb
aam
out
rcll
mov
enter
xor
cmc
addr16
adc
sbb
loopne
or
andl
rcr
cmp
sub
xlat
cli
sub
mov
mov
out
pop
sbbl
or
sub
jo
ss
xor
lahf
ja
add
les
js
pop
pop
movsb
divl
fldenv
in
and
or
mov
mov
mov
into
pop
aaa
rolb
inc
fisubl
jg
jmp
int
repnz
jno
lea
loop
or
inc
int
subb
arpl
jge
outsl
cmp
js
mov
cmc
pusha
loope
lock
loopne
inc
jmp
xchg
pop
jecxz
mov
sub
inc
aas
jae
loope
sub
hlt
cwtl
pop
into
outsl
out
insb
test
adcl
inc
cltd
jb,pn
add
mov
inc
and
in
cmp
lcall
cmp
mov
mov
stos
sub
or
dec
imul
pop
and
xchg
cmp
sbb
sbb
in
clc
jge
mov
inc
xor
mov
out
movsl
ror
xlat
sarb
out
sbb
jbe
mov
mov
xor
rcll
sahf
xor
mov
push
jmp
mov
jle
or
dec
jae
aad
gs
pop
xchg
sbb
les
sbb
lods
xor
lahf
mov
or
push
dec
pop
mov
adc
mov
addr16
stc
push
jmp
jge
iret
arpl
xlat
mov
bound
push
sti
sbb
dec
fst
je
xlat
sbb
pop
inc
sti
das
ljmp
aas
int3
jmp
pop
outsb
pop
mov
xor
cltd
push
lret
psubsb
cli
add
dec
nop
vpor
xchg
repz
sbb
fcmovbe
jns
stos
jae
inc
repz
xor
in
xchg
ret
test
wbinvd
inc
mov
inc
mov
sub
mov
mov
push
xchg
scas
sbb
adc
dec
xchg
cmp
sahf
mov
movd
sar
dec
xor
xchg
stos
ljmp
push
out
push
shrl
add
scas
insb
inc
pop
xlat
cmc
rcrl
fldln2
shrd
popa
out
adc
and
icebp
jle
outsb
xchg
push
orl
push
fiadds
jno
popa
out
adc
and
icebp
jle
outsb
xchg
push
orl
push
fidivs
adc
popa
out
sbbl
rorl
loope
xchg
push
xchg
push
mov
dec
cs
ficomps
out
adc
mov
in
jle
sbb
xchg
or
dec
rcrl
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
ja
fstl
inc
mov
gs
fdecstp
leave
out
xlat
sbb
movsl
mov
insl
xchg
lea
push
lods
inc
mov
pop
in
pop
shl
or
leave
cmp
xchg
insl
xchg
sub
dec
aaa
pop
lret
cs
aas
xchg
movntq
iret
out
or
mov
cmp
pop
rcrb
push
leave
or
push
xor
fs
outsb
sarb
sbb
pop
outsl
lahf
mov
xchg
mov
testb
inc
sbb
adc
loope
sarb
insl
out
mov
xchg
out
xor
hlt
add
and
cmpsb
mov
sub
ret
mov
pop
mov
jbe
ja
sahf
test
es
call
mov
std
loop
cmp
pop
cmpsl
rcrb
xchg
daa
pop
ljmp
aas
fcompl
testl
int
int
daa
cmpsl
dec
push
jb
bound
fdivrs
cs
paddb
pop
push
stos
sti
xchg
push
repnz
xchg
mov
flds
and
aaa
fstl
in
push
outsl
out
or
fiadds
scas
jno
mov
jne
dec
sbb
xor
inc
push
pop
mov
movsb
mov
xor
sbb
adc
lret
push
fstpt
fidivs
rcrl
daa
pop
test
insb
subb
xchg
loope
jecxz
adc
or
shrl
jg
daa
fstl
in
pop
std
testl
cmpsl
pop
xchg
insl
xchg
lea
push
lods
inc
mov
pop
in
pop
std
testl
cmpsl
pop
xchg
insl
xchg
lea
call
stos
and
mov
popf
es
push
jmp
cmpsb
adc
jns
cld
fisubs
pusha
rcl
adc
mov
outsb
push
repnz
add
add
ja
clc
dec
xchg
int3
cmpsb
adc
xor
adcl
sbb
sbb
sbb
fistpl
cmpsl
adc
movsb
fldl
jecxz
sbb
dec
cli
dec
add
push
or
in
cmc
cmpsb
fdiv
mov
cmpsb
es
outsb
mov
inc
mov
int3
shlb
cmp
aad
out
push
leave
repnz
addl
cld
pop
dec
aad
pop
int3
popf
mov
addr16
inc
fst
loop
mov
rclb
insl
outsl
push
mov
inc
fs
adc
jno
roll
jb
rclb
cli
lock
inc
lret
es
xchg
mov
cmp
or
mov
movsb
sar
mov
dec
or
scas
jle
adc
pusha
inc
inc
jg
call
dec
cwtl
mov
fsubl
and
stos
dec
popa
add
pop
cmp
sbb
jne
sbb
add
popf
sbb
inc
push
aad
out
addr16
fildll
inc
in
cmp
pop
sar
cmp
dec
mov
xchg
stos
mov
sbb
dec
pop
mov
pusha
xchg
clc
adc
ror
and
roll
aas
push
push
sub
loopne
xor
inc
mov
gs
stc
movsl
xor
mov
cwtl
insl
mov
xor
ljmp
roll
adc
lahf
xchg
sbb
inc
jle
int
mov
adc
divb
lea
dec
into
nop
jle
mov
data16
jge
cmc
xchg
js
sub
jno
test
in
int3
mov
cmp
ret
push
ret
push
shrl
mov
sub
mov
mov
xchg
iret
das
cmp
ja
add
push
xchg
pushf
sub
in
neg
cmpsb
fiaddl
cmp
jae
push
std
inc
pop
mov
arpl
jecxz
mov
test
loop
ss
pop
aam
dec
xchg
mov
push
pop
xchg
dec
fxch
arpl
lahf
stc
adc
jmp
out
pop
in
lds
in
cwtl
ss
xor
xchg
test
pop
aam
ret
in
xchg
cs
add
aaa
add
mov
hlt
pop
inc
sbb
insb
pop
aam
mov
fcoml
cs
mov
xchg
push
das
add
cld
xorb
and
push
repz
xlat
jne
out
sub
lret
mov
cmpsl
mov
stos
push
mov
or
fnstcw
ds
rcrb
xlat
sub
les
mov
pusha
leave
sarl
imul
push
jnp
lock
sti
adc
in
fdivs
xchg
rolb
in
stc
cmp
test
inc
jbe
sub
in
out
lods
pop
pop
push
pop
inc
icebp
xor
xor
sub
scas
andb
mov
in
sarb
cmp
bound
ret
push
ret
push
fbld
mov
and
iret
cld
xor
aad
sub
push
cmp
or
xchg
dec
cmp
mov
in
loop
dec
pop
pop
pop
mov
clc
dec
or
push
shlb
dec
mov
in
cmc
or
xor
daa
aam
mov
adc
mov
pop
xlat
add
xlat
xchg
testb
nop
push
ja
pushf
jmpw
imul
jno
mov
test
ret
xor
push
aam
inc
jne
push
and
jl
divb
push
lea
jg
outsb
rolb
add
jl
pop
jp
sub
sbb
pop
inc
sti
repnz
cmc
xor
and
dec
jp
inc
mov
inc
test
in
sahf
adc
mov
mov
insb
fcmovb
jnp
call
insb
push
push
cwtl
aad
lcall
frstor
mov
ljmp
hlt
in
or
mov
inc
fisubrl
cmp
push
sub
sti
pop
repnz
add
subl
test
mov
adc
pushf
adc
addr16
aaa
daa
sti
add
aaa
cmpsb
rorl
mov
pushf
fwait
loope
and
pushf
mov
xchg
fidivrl
pop
mov
dec
and
test
mov
mov
insb
or
inc
sbb
enter
lock
mov
mov
pusha
or
pop
pop
call
loopne
in
dec
popf
sbb
jmp
into
sti
stos
je
repz
cmp
mov
dec
inc
sub
xor
out
sbb
es
sbbl
push
mov
or
les
mov
lods
cmp
cld
popa
negb
fnstsw
add
lods
push
pusha
roll
addr16
js
ja
xlat
das
xor
jl
inc
pop
gs
xor
xchg
pop
push
popf
shrb
push
repnz
shll
adc
xor
insl
mov
test
dec
lret
mov
in
dec
mov
cltd
xchg
mov
das
dec
icebp
lock
sub
test
out
roll
xchg
in
push
mov
fldcw
jecxz
push
fs
fwait
leave
jmp
mov
mov
dec
mov
mov
mov
fbstp
je
dec
cmp
fistps
insl
icebp
test
push
pop
jecxz
mov
sbb
dec
ror
jge
aam
push
addr16
cmpsl
push
imull
lds
movsb
push
lret
mulb
add
sbbl
shl
loopne
lock
and
mov
incb
push
sbb
cltd
repz
dec
sub
adc
dec
aad
mov
adcb
mov
push
jle
push
inc
cmp
add
mov
jp
xor
xor
aas
mov
gs
mov
negb
and
adc
push
cmpsb
ljmp
fisubrl
xchg
or
pop
jne
xchg
pop
sbb
and
shlb
sarl
test
mov
dec
imul
stos
imul
and
imul
pop
ret
xchg
sub
mov
dec
sahf
in
and
aas
push
cmpb
fldcw
es
mov
cld
in
out
in
xorl
mov
test
nop
jge
xor
ficomps
pop
sbb
cli
incb
and
push
or
es
xor
mov
or
in
dec
jns
push
shrl
ror
jge
lahf
adc
mov
nop
sbb
mov
xchg
decl
shlb
pop
ret
pop
iret
mov
arpl
cli
xor
xchg
mov
cld
mov
ss
mov
adc
imul
xor
shld
xor
pop
push
shll
push
pop
mov
or
sti
ret
scas
mov
or
test
mov
mov
sub
cmpsb
sub
jne
loope
add
cmp
push
pop
dec
mov
inc
cmp
push
sub
leave
mov
lods
outsb
xchg
mov
jge
mov
in
dec
xchg
imul
hlt
out
test
mov
shrb
bound
jno
mov
add
loope
aad
push
cmp
jecxz
cmp
ret
pop
popa
add
sbb
xlat
adc
sub
sbb
jmp
dec
xchg
add
out
testl
roll
jno
and
repnz
push
popf
sti
lahf
adc
xor
fisubrs
mov
add
adc
ljmp
js
inc
movsl
add
adc
fsub
pusha
or
cltd
bnd
xor
in
adc
push
or
inc
jno
aas
push
jecxz
int
arpl
in
shlb
or
cmp
imul
push
inc
das
cwtl
cli
jne
sbbl
call
jmp
rcr
xor
inc
or
loope
mov
dec
push
cld
push
fs
movsl
or
test
out
mov
fisubl
ja
js
out
out
lret
jmp
dec
test
into
cmp
xchg
pop
inc
imull
paddq
scas
and
mov
imul
test
dec
lods
cmp
fdivrl
jl
or
ljmp
ds
aas
rorl
and
mov
jns
in
test
in
pop
mov
pop
xor
imul
jne
sbb
mov
pop
ror
int
adc
bound
sub
mov
aas
sub
dec
mov
fistps
aaa
dec
add
loop
addr16
xor
inc
sub
pop
and
repz
fadd
or
popa
push
add
push
icebp
dec
push
lret
jp,pt
pop
int3
int
add
mov
lds
sti
lods
push
imul
into
mov
pop
pop
add
pop
xchg
adc
mov
sub
dec
or
pop
inc
cmpsb
repnz
scas
mov
out
fstps
and
addr16
or
out
in
mov
add
lcall
aaa
push
mov
push
aad
push
divb
in
xlat
clc
push
inc
mov
and
jbe
and
cmc
xor
imulb
mov
sub
mov
rclb
or
fwait
sbb
pop
int
mov
add
xor
and
dec
imul
sarb
je
pop
enter
cmp
sbb
mov
mov
inc
mov
leave
cmp
mov
pop
add
movsb
adc
push
int
or
loope
idiv
add
into
test
xor
pop
aad
or
lcall
aam
mov
sub
roll
jmp
stc
adc
and
out
push
pop
inc
test
adcl
testl
mov
push
pop
cmpb
fcmovnbe
and
mov
loop
lods
push
xchg
js
sbb
dec
mov
std
lea
data16
out
std
lcall
pop
jg
in
add
push
dec
lahf
aam
or
jg
dec
jecxz
call
xchg
mov
jg
js
jnp
test
sahf
ljmp
int3
iret
aam
sbb
xchg
push
sbb
stos
cwtl
pop
pop
xchg
xor
dec
adc
fisubs
rclb
in
xor
adc
add
shll
xor
adc
push
or
in
inc
push
mov
imul
push
frstor
sbb
cmp
lock
xchg
test
out
mov
xchg
test
loope
push
jmp
rolb
adc
and
xorl
cmp
or
sub
cmc
popf
push
add
xorb
je
bound
call
scas
sbbl
jnp
jo
pop
pusha
test
loopne
in
pop
mov
aad
insb
mov
rcrl
dec
cltd
xchg
mov
rcr
cmp
cmp
mov
loop
add
mov
sub
jmp
pop
rcr
ja
cld
stos
mov
hlt
push
fidivl
xor
outsl
xorl
movsb
mov
mov
push
or
xchg
les
lahf
sbb
inc
outsb
popf
xor
sarb
hlt
mov
imul
push
mov
adc
popa
test
jmp
cmpsb
mov
mov
fildll
jnp
jno
dec
stos
mulb
les
addr16
cmp
sbbb
popf
mov
xchg
les
lock
dec
jbe
ss
notl
cmp
sahf
push
adcl
push
xlat
dec
bound
adc
sti
in
pop
push
jns
test
call
fs
pop
adc
iret
popaw
jno
imul
cmp
mov
cltd
pop
mov
xchg
test
inc
je
stos
sarl
shlb
cltd
sub
pop
pop
out
mov
cmp
int3
jbe
xchg
add
rep
sbb
adc
cld
movsb
xlat
adc
sub
sub
sub
fidivrl
sub
jp
mov
and
adc
dec
pop
adcb
shl
shlb
outsl
bound
mov
pop
pop
dec
popf
rolb
imul
sbb
bts
push
add
sbb
mov
cmpsb
ss
pop
pop
insb
sets
push
roll
add
ret
insb
movl
shl
cmpsl
jno
jmp
stos
push
push
dec
shrb
add
jne
clc
ljmp
or
xor
and
dec
jg
adc
nop
shlb
xchg
pop
fmul
lahf
mov
mov
mov
into
jb
mov
stc
enter
imul
cmpsb
lds
icebp
xchg
push
sub
sahf
adc
pop
cwtl
pop
frstor
pop
sub
or
add
wrmsr
arpl
mov
and
lods
jae
push
push
mov
clc
dec
push
mov
sar
sbb
scas
ds
jb
sbb
or
iret
mov
xchg
mov
pop
out
sahf
jmp
adc
roll
mov
inc
inc
ja
mov
push
adc
push
mov
hlt
or
shll
aam
mov
adc
sub
scas
mov
clc
out
mov
fs
negb
jo
ljmp
aam
test
xchg
and
dec
xchg
insb
lock
ret
leave
xor
push
ja
in
xchg
inc
or
xchg
sti
xchg
fisttpll
push
cmp
push
sahf
lcall
mov
jle
dec
scas
lahf
jp
jp
cmp
imul
mov
lret
jle
bound
sti
sbb
xchg
cmp
std
ss
scas
dec
sbb
lds
jmp
pushf
push
xchg
xchg
shlb
iret
in
ds
add
jo
es
out
xor
cmp
pop
sub
adc
call
cmp
push
mov
xlat
les
scas
lds
gs
jl
les
fdivl
popa
in
mov
sbb
ret
bnd
add
xor
mov
add
mov
or
add
mov
jl
ja
pop
cwtl
xor
push
aaa
inc
mov
adc
pop
mov
repz
dec
adc
mov
adc
xor
test
std
xchg
and
insl
push
enter
adcb
loopne
xchg
test
mov
jg
push
sbb
out
rclb
mov
cmc
mov
mov
int
mov
sub
lahf
cmp
sub
int3
or
or
sub
dec
sar
sbbl
ret
dec
mull
rol
jecxz
dec
sub
jl
sub
arpl
sbb
popf
subl
stos
fcomps
neg
inc
stc
vhaddps
mov
jns
rcr
cltd
push
adc
pop
mov
fdivr
cmp
mov
xchg
mov
mov
xor
lret
add
adc
dec
cld
adc
out
add
stos
repnz
sub
stos
push
cmp
stos
jmp
xor
les
push
jp
sub
cmp
call
cs
xchg
adc
xchg
outsl
cmp
pop
loop
pop
sub
les
test
cmp
in
divb
sbb
out
out
loop
xchg
stos
jmp
addl
loopne
popa
push
adc
loopne
aad
test
mov
lret
stos
mov
pop
mov
jl
mov
test
pop
aaa
cltd
mov
dec
aaa
push
rcll
iret
mov
icebp
adc
cwtl
inc
aam
shl
lsl
ds
repnz
mov
mov
test
andb
sub
mov
mov
addr16
mov
and
sub
mov
push
jle
xchg
mov
pushf
nop
add
xchg
aad
jmp
pop
xchg
leave
push
sti
mov
xor
and
movaps
jp
jg
insb
aad
je
icebp
jns
imul
mov
in
fwait
call
inc
sub
sbb
lea
outsl
xlat
cld
cmp
mov
and
sbb
dec
test
mov
cmp
xchg
nop
jge
mov
or
in
out
dec
ljmp
daa
stos
fcompl
dec
mov
jns
inc
adc
fisttps
call
in
pushf
jns
mov
add
gs
leave
inc
adc
jns
push
dec
aam
hlt
mov
xor
sbb
leave
and
add
shlw
test
sub
and
and
test
xor
idivb
jae
pop
pusha
ds
jno
subl
sti
hlt
adc
jne
xor
outsb
mov
fldenv
xchg
addb
lcall
push
mov
dec
aaa
imul
jg
xchg
test
xlat
jae
inc
sub
add
ljmp
add
sbb
loope
inc
push
mov
mov
push
push
adc
fiadds
lods
mov
jp
inc
mov
jle
cld
sub
adc
jl
in
lret
xchg
negb
in
mov
lds
sbb
sbb
cmp
jmp
sub
push
fcom
cld
ret
lock
icebp
xchg
mov
pop
aas
add
sbbb
mov
in
nop
stc
or
jns
cmp
outsb
jg
pushf
inc
loope
xor
bound
add
div
sbb
xchg
mov
ret
rorb
or
jbe
or
push
cmp
mov
sbb
push
mov
push
dec
data16
rorb
rcll
add
lds
dec
test
cmpsl
jl
sbb
mov
adc
dec
or
pop
sub
lret
jno
dec
mov
jge
adc
pop
xor
dec
pop
in
scas
pop
mov
xor
xchg
xor
mov
cmpb
xor
cli
sbb
bound
movb
cmp
fisubrl
cmpsb
mov
jnp
mov
les
subb
daa
sbb
enter
mov
push
cmp
lahf
dec
shlb
mov
sub
adc
push
movsl
ja
lret
push
enter
jge
or
inc
jne
sbb
or
sbb
movl
pop
inc
mov
dec
or
push
push
fbstp
sub
sbb
dec
add
jo
sbb
and
push
xlat
or
pop
xor
cld
outsl
jmp
cmpl
push
ljmp
lcall
push
jl
pusha
adc
push
cmp
push
test
xchg
mov
mov
outsl
hlt
xchg
test
push
dec
push
rorl
xchg
mov
mov
adc
pop
mov
xchg
xlat
jbe
inc
mov
je
test
jmp
rorb
shll
ficomps
pop
dec
mov
jp
addl
rcrb
mov
cwtl
lcall
test
out
shlb
push
push
jp
cwtl
sbb
cmp
sub
notb
rcl
inc
es
iret
jno
movsb
scas
push
sub
jae
iret
pop
or
aad
dec
and
test
popf
stc
repnz
mov
mov
xor
mov
cli
dec
cmp
stos
dec
pop
rclb
mov
push
mov
inc
add
ja
cs
test
insl
mov
jae
call
fs
sub
lock
sahf
push
xor
in
jl
xchg
popf
shlb
loopne
sbb
daa
xor
add
das
imul
ret
jae
mov
fistl
jl
jmp
sbb
sti
rcl
out
adc
sub
mov
xor
daa
iret
lock
jae
jnp
scas
pop
add
xchg
hlt
lds
mov
popf
pop
mov
adc
shlb
bound
xorl
bound
lods
xchg
or
dec
mov
or
test
addr16
mov
xlat
push
insb
inc
gs
push
cmpsl
xor
mov
lock
ss
test
outsb
or
aaa
xor
insb
rorb
test
sbb
insb
in
jecxz
in
fucomp
sahf
add
xchg
lret
mov
pop
mov
and
cmc
js
inc
fs
xchg
xchg
or
inc
out
popf
fs
imul
xor
sbb
fidivl
dec
sub
pop
mov
rcl
fs
xor
pop
xorl
clc
lds
les
out
scas
aam
cld
mov
les
pop
popf
std
jbe
cmpsb
inc
push
mov
arpl
inc
jl
pop
push
call
dec
cmpsb
mov
je
fmull
cmp
push
and
sti
fildll
xchg
scas
jne
xchg
jbe
shlb
daa
loope
lods
sbb
imul
xchg
pusha
sbb
movsl
rorb
mov
cli
xor
adc
xchg
jnp
add
daa
cmp
cmc
in
push
sub
popf
insl
cmpsl
jae
add
pop
std
dec
xor
or
fadd
mov
mov
inc
mov
int3
mov
shll
mov
jge
enter
cltd
dec
clc
xrelease
lcall
shr
xchg
dec
in
sarb
add
je
dec
cmpb
adc
daa
add
imul
sbb
xlat
in
dec
gs
sbb
adc
push
jo
aaa
or
stos
into
mov
in
sbb
inc
inc
jnp
sbb
fcmovnbe
mov
bound
or
adc
inc
jp
in
fiadds
inc
imul
sbb
iret
pop
aas
test
mov
loopne
notl
int
loop
dec
mov
mov
out
push
mov
jl
pop
xor
ljmp
adc
sub
jp
mov
ds
pop
loopne
or
enter
sbb
fildl
mov
pop
jae
int
sbb
push
jno
sbb
pop
push
mov
xor
mov
inc
mov
xchg
or
aaa
push
daa
adc
inc
pop
mov
cmp
jo
xor
jne
repz
iret
out
dec
jle
jg
mov
inc
lods
repz
mov
lret
and
push
lret
push
mov
dec
jb
and
sub
jecxz
cmp
gs
adc
add
out
js
adc
sub
jle
les
xchg
jge
out
sti
cmp
xchg
sbb
and
fcomps
shr
lret
or
ud2
and
jmp
aaa
stos
ljmp
mulb
lcall
jnp
in
sub
pop
cmp
jns
je
cs
shlb
out
jl
pushf
into
xor
or
jne
inc
add
and
push
xchg
dec
xorl
pop
rol
add
call
jecxz
mov
orb
fimuls
lahf
sub
mov
pop
mull
scas
in
ja
repz
stos
fistl
rclb
inc
dec
movb
push
jbe
mov
or
les
jle
rorl
lret
test
jg
sbb
fcomps
scas
push
test
test
lods
xchg
int3
lods
cmpsl
push
popf
pop
test
mov
pop
in
pop
std
testl
cmpsl
pop
xchg
insl
xchg
lea
push
lods
inc
mov
pop
in
pop
std
testl
cmpsl
pop
xchg
insl
xchg
mov
push
mov
mov
pop
jmp
out
xlat
sub
cmpsb
pop
xchg
test
push
dec
inc
std
xor
insl
xchg
jge
dec
shlb
add
int3
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
mul
adc
fwait
cmp
es
aaa
cmpsb
push
sbb
imul
call
stos
or
pop
jmp
fstpt
push
xor
mov
dec
call
sbb
inc
mov
jb
jnp
mov
int
test
cltd
aaa
cmpsb
sub
cmp
cli
sbb
mov
enter
sub
adc
cmp
xor
hlt
push
add
mov
inc
cld
dec
mov
rcll
lock
loopne
sbb
pusha
in
loopne
pop
cli
popf
movsl
jmp
mov
dec
jae
lcall
sbb
cmc
sub
test
adc
decb
or
cmp
sbb
js
mov
and
xchg
cs
pop
hlt
push
testb
cmpb
push
jmp
add
push
imul
std
or
or
ds
ds
stos
call
jbe
adc
ret
cltd
rcrl
mov
push
pop
pop
clc
mov
stos
pop
fwait
sub
xor
pop
scas
dec
jno
cmpb
sbb
jne
pop
clc
das
mov
jge
or
cmp
sub
adc
add
dec
in
push
adc
or
mov
dec
inc
sub
mov
mov
jmp
or
or
jmp
lret
xor
dec
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
xor
aam
mov
mov
adc
pop
divl
leave
xlat
sahf
sbb
mov
dec
pushf
imul
in
sbb
mov
push
fwait
loope
aad
and
sub
mov
dec
mov
je
pop
fsubrp
jmp
jecxz
and
aad
add
addr16
sub
jnp
aas
dec
test
sahf
xchg
js
ret
dec
push
add
sbbl
and
sub
mov
aad
xchg
leavew
and
or
push
jae
dec
push
pop
cltd
das
shll
pop
js
and
mov
jo
sub
sbb
inc
ret
pop
leave
pop
dec
sub
lret
fwait
xchg
enter
lcall
sub
ds
and
ss
call
hlt
adc
pop
jbe
jb
popf
jae
cmpsl
push
jecxz
movsb
inc
scas
jecxz
je
xchg
notb
and
icebp
movsb
inc
fsts
xchg
sti
xchg
push
out
es
push
sarl
ret
push
lret
add
jmp
xchg
mov
sahf
jne
hlt
adc
adc
pusha
inc
fisttpll
jb
jmp
mov
and
jp
pop
repnz
dec
push
add
das
adc
mov
inc
loopne
xor
outsb
cmpps
xor
enter
fcompl
jae
out
adc
push
je
cltd
repnz
daa
inc
mov
and
testl
cli
shlb
and
jo
sbb
cmp
decl
inc
cwtl
sbb
add
int
mov
xor
adc
aas
or
imul
mov
dec
outsl
sbb
jmp
mov
out
jae
push
outsb
in
shlb
lea
mov
and
gs
idivl
insl
jmp
sub
cli
xchg
je
push
inc
mov
or
inc
cmp
add
mov
mov
pusha
add
sarb
gs
out
jmp
push
and
imul
enter
mov
loope
inc
cmp
push
stc
cmp
lret
push
pop
xorb
mov
roll
fsubr
push
jbe
inc
jae
enter
mov
dec
mov
push
or
push
push
fucom
sbbb
rcl
nop
or
mov
lea
jl
fadd
dec
lahf
jge
les
add
xchg
je
ds
test
mov
add
out
pop
addr16
sbb
add
lret
repnz
mov
lock
xor
jbe
mov
xor
stos
std
xchg
xchg
cmp
addr16
insl
je
or
push
jns
aaa
divb
jne
and
xor
pusha
jb
icebp
test
stc
fdivs
fadds
cmc
sub
mov
push
sub
lock
lcall
loopne,pn
add
pop
cwtl
cli
ja
lods
subl
push
js
and
and
lea
mov
jmp
cld
jmp
mov
jne
jecxz
fcompl
pusha
xor
lcall
jae
ret
sbb
jae
js
sub
divb
sub
into
push
pusha
fcompl
push
out
imul
dec
idiv
mov
aas
lret
mov
pusha
and
mov
push
fistps
test
in
imul
jnp
mov
mov
sarl
repnz
dec
test
sahf
fmull
ss
push
roll
cmp
push
jnp
xlat
pop
cli
insb
xchg
pushf
js
push
out
pop
out
sub
xchg
mov
rcr
divl
jl
cmp
sbb
pop
inc
lods
std
out
lods
mov
repnz
or
shll
push
inc
ret
add
fimull
mov
lret
vpor
xchg
lods
scas
nop
cs
dec
repz
cld
push
push
es
cmp
icebp
mov
lahf
xor
push
cld
rcrb
dec
lds
lods
leave
outsl
xchg
push
es
std
sahf
sbb
adc
adc
cmpsl
lret
and
push
dec
jp
mov
rol
repnz
int
add
lock
mov
jp
icebp
notl
add
sahf
fmuls
mov
sbb
fsub
in
testb
jmp
cli
dec
les
test
cmc
outsb
push
mov
xchg
das
xchg
jns
mov
mov
push
jecxz
mov
or
add
rolb
stc
fiadds
dec
clc
push
pop
into
imul
push
ret
sbb
push
dec
cmp
mov
xchg
or
sbb
pop
daa
stc
mov
js
enter
inc
xor
test
testb
mov
outsl
jmp
jb
aaa
aaa
gs
push
cmc
add
xor
ja
in
mov
jmp
cltd
and
cmpsl
adc
mov
add
pop
call
test
aaa
lahf
mov
add
adc
mov
jle
jae
mov
fisttps
popf
adc
scas
xor
xor
loopne
mov
pop
es
in
iret
imul
test
fidivs
xor
stos
push
mov
mov
fwait
jns
mov
in
push
subb
sub
sub
cltd
clc
cs
mov
xchg
mov
fistps
pusha
pop
mov
ds
mov
mov
lods
inc
mov
mov
stc
out
and
inc
clc
jle
cwtl
or
adc
lods
jge
insl
dec
or
stc
adc
rol
add
push
test
int3
js
and
ljmp
stos
jle
fstpl
jl
ret
push
test
pop
push
into
cltd
cwtl
add
mov
or
jae
data16
xchg
movsb
fildl
mov
inc
daa
add
adc
fst
sahf
sub
ret
sub
incl
sbb
and
loop
add
addr16
pop
gs
xlat
hlt
aad
lahf
int3
rclb
inc
test
cwtl
jns
cmp
mov
sbb
dec
xlat
xchg
mov
cmp
inc
jle
mov
js
cs
in
fs
imul
cmp
inc
in
xlat
adc
roll
dec
dec
ljmp
sar
or
cltd
or
mov
push
cli
test
aas
add
in
enter
inc
pop
iret
mov
mov
scas
ds
fwait
test
popa
daa
sbb
in
xchg
pop
loopne
and
es
repz
frstor
roll
adc
adc
imul
sbb
adc
sbb
xchg
or
dec
cmp
xor
bound
adc
mov
inc
cli
rcl
stos
lods
or
rcll
out
movsb
jo
sub
sbb
fisubs
and
lods
cmp
cwtl
insl
push
iret
adc
sbbl
and
es
jbe
dec
lods
and
into
in
lret
cmpl
cmpsl
xchg
pop
dec
or
adc
add
ljmp
pop
stos
or
lea
fnstsw
push
pop
mov
add
cmp
arpl
cmp
stc
into
adc
jmp
out
sbb
adc
imul
xchg
jle
js
jo
cltd
aad
inc
pop
jmp
sub
cmp
insb
insb
aam
pop
adc
or
cs
pop
or
pop
jp
add
cmp
repz
add
sbb
std
adc
mov
pusha
mov
pop
cmpsl
fcoms
inc
cli
pop
xor
rcrl
mov
xchg
xchg
pop
mov
mov
scas
shl
xchg
movsb
movsb
movsb
cmp
fisttps
addr16
dec
push
push
cs
sbb
push
adc
pop
sbbb
xor
cli
std
test
pop
xor
jae
mov
and
rol
xchg
out
inc
lcall
or
xchg
mov
cmp
movsl
cmp
or
lcall
stos
pop
jo
add
sub
jo
cs
cli
sahf
push
jge
mov
js
daa
pop
andl
xor
out
nop
imull
das
jle
inc
aas
int
dec
loope
and
rcr
push
push
mov
cmp
dec
mov
js
movsl
cmpsb
jne
xor
mov
cmp
inc
push
dec
xor
rcr
ficoml
pop
jle
xor
cmp
int
mov
int
sub
xor
cltd
mov
sbb
xor
or
lcall
std
sarb
push
lock
adc
push
aam
je
cmpsl
sbb
fwait
cmpsl
pop
inc
mov
ljmp
mov
out
push
adc
dec
inc
loopne
push
adc
add
icebp
sub
mov
mov
mov
sub
mov
pop
mov
xchg
cmpsl
fstps
mov
call
dec
push
adc
insb
jnp
inc
pslld
iret
pop
call
cmp
lcall
adc
dec
pusha
hlt
das
jo
fnsave
aam
roll
adc
pop
cltd
movsb
jl
test
loopne
es
push
imul
imul
out
test
clc
add
sub
cmp
testb
in
pop
add
mov
sbb
add
pop
sahf
ret
xor
add
adc
xor
pop
gs
mov
hlt
sbb
sbb
testb
and
push
add
test
adc
stos
lcall
sub
ljmp
and
cmp
xor
in
inc
ret
out
push
sbb
lcallw
pcmpeqw
fs
data16
shll
sar
jmp
repnz
arpl
or
insl
fdivl
pushf
lock
mov
push
jg
aam
inc
loop
mov
mov
mov
ficoml
sub
inc
push
xchg
inc
lahf
add
xor
pop
push
cmp
loop
xor
sbb
xor
jno
lods
mov
loopne
sub
mov
je
rol
xchg
mov
mov
loope
pop
adc
dec
sub
push
cmp
pop
pop
mov
mov
cmpsb
into
hlt
jnp
mov
push
inc
pop
mov
xor
pop
fldl
popf
rorb
dec
clc
push
dec
sub
faddl
inc
hlt
dec
adc
jae
loopne
popf
popf
ljmp
stc
mov
sub
jle
repnz
outsl
sbb
dec
cmp
pop
jbe
or
xchg
xchg
xorl
test
lret
dec
data16
dec
push
fdivr
nop
mov
dec
add
lahf
mov
pushf
mov
push
shll
mov
inc
jo
mov
repz
fcoms
sarl
push
or
xchg
pushf
push
dec
sbb
aaa
cmp
mov
aad
jno
ds
cmp
sahf
nop
jo
add
shll
jns
pushf
cmp
test
mov
sub
dec
xor
sbb
mov
das
sar
es
mov
fistl
pop
xlat
mov
lds
mov
cmp
sar
or
out
dec
pusha
sub
push
or
adc
xchg
mov
xchg
mov
inc
pop
sub
sbbl
in
mov
mov
push
leave
push
sbb
dec
call
scas
sub
nop
sub
arpl
cmpsl
cmp
mov
hlt
jbe
add
and
cld
fstpl
lods
sbb
cmpsb
dec
add
push
xor
push
add
jne
loop
out
rol
clc
fstl
sbb
mov
mov
jae
je
jnp
fdivrs
icebp
cltd
sub
mov
xchg
fistps
in
js
outsl
leave
inc
or
cmpsl
out
hlt
mov
fstps
mov
int
cmp
nop
sahf
mov
xorb
push
ret
sub
jmp
lock
subl
mov
push
je,pn
jbe
sar
lahf
and
jmp
dec
push
aaa
mov
sahf
adc
or
adc
xor
clc
gs
xchg
push
fld
cmpsl
add
xor
gs
fnstenv
mov
pop
mov
or
add
cltd
loopne
ja
inc
sti
out
pop
cmp
push
imul
into
pop
ja
sbb
xor
cmp
testl
dec
rorl
pop
sub
sbb
pushf
push
popa
dec
bound
or
sbb
and
inc
cld
lahf
sti
or
mov
stos
sub
rcr
ss
data16
mov
es
cli
and
dec
outsl
cmp
jp
push
movsl
sub
jmp
aam
push
stc
dec
push
sbb
test
jb
loope
shrb
adc
and
push
xchg
stc
lock
repz
divb
sbb
mov
lock
leave
mov
sti
lods
jecxz
dec
movsl
ljmp
stos
jl
ljmp
mov
cmp
imul
lods
or
pop
push
dec
sub
sbb
loope
or
nop
shll
add
push
mov
jle
push
cld
jns
add
aam
mov
jnp
in
shrb
neg
movsb
xlat
fistps
inc
dec
std
test
es
mov
out
test
in
pop
fadd
loope
cmp
sbb
jne
xor
rcl
leave
adc
jle
mov
sahf
mov
in
nop
jns
mov
mov
mov
fadds
pop
sub
mov
fsubs
pop
xor
popf
push
fidivrs
jbe
addb
ja
js
mov
arpl
push
lret
frstor
hlt
ret
jbe
stos
imul
mov
mov
adc
lahf
xlat
dec
push
stc
sarl
adc
andb
xchg
es
jg
nop
loop
outsl
lret
jo
ja
gs
sub
sbb
inc
call
mov
adc
std
repz
and
mov
jnp
mov
mov
std
inc
ficomps
and
mov
hlt
push
add
mov
test
and
repnz
je
fidivl
jg
int3
jae
push
dec
ljmp
pop
push
inc
mov
pop
pop
fnstenv
lea
aas
mov
adc
xchg
dec
mov
adc
aam
or
pop
xchg
loope
mov
popw
imul
call
cmp
jbe
push
call
jmp
push
push
adc
imul
mov
jne
insl
rcrb
jp
rol
inc
xor
sbb
inc
xchg
or
pusha
inc
push
int
icebp
jae,pt
push
out
mov
lock
pop
popf
inc
mov
and
mov
inc
jo
iret
fstps
ret
cmp
mov
add
ret
xorb
mov
mov
test
out
lret
mov
cltd
das
inc
je
pusha
das
cmpsb
gs
sti
jle
jecxz
xchg
js
movsb
pop
stos
jg
lcall
jne
and
cmc
or
mov
push
pop
cmc
sbb
sbb
jecxz
adc
movsb
in
inc
push
cmc
mov
push
or
arpl
mov
adcl
mov
rorl
fiaddl
mov
mov
jl
cmp
adc
inc
add
and
push
pusha
mov
and
pushf
lcall
lret
out
add
daa
and
xchg
sub
pop
pop
inc
pop
sti
mov
xchg
mov
call
frstor
xchg
push
mov
imul
test
add
mov
sbb
outsb
dec
jp
dec
dec
add
mov
cltd
test
xchg
push
jbe
or
or
adc
mov
aam
xchg
jno
add
enter
outsb
add
xor
popa
xor
inc
std
fdivl
dec
pop
stos
pop
sub
sti
lret
pop
and
call
gs
jmp
mov
cli
sbb
inc
or
push
enter
push
pop
jg
scas
and
and
movb
lcall
xor
enter
insl
cmp
xlat
sub
dec
fistl
rcr
pop
lods
movsb
xchg
mov
fidivs
incb
mov
pop
xchg
ja
testl
flds
jae
jne
aaa
out
shrl
rcr
sbb
sub
sbb
dec
idivb
or
fadds
out
orb
cld
fwait
loop
mov
adc
ds
xor
inc
mov
dec
shlb
fcomp
addr16
lahf
pop
stos
sbb
mov
in
cmpl
fmuls
mov
jmp
pushf
xor
push
cmp
loopne
pop
lret
aas
adc
push
xchg
jae
add
and
rclb
data16
dec
shlb
fcoml
leave
ss
mov
add
fs
lods
push
adc
iret
cld
mul
lret
add
pop
push
mov
cltd
nop
aas
in
and
ficoms
and
aaa
stos
or
inc
insl
xchg
loop
call
scas
ret
in
mov
jne
inc
aas
cmp
sbb
ja
xor
or
cltd
out
pop
mov
xchg
ds
pusha
xlat
xor
ja
xchg
sahf
bound
xor
repz
int3
nop
mov
push
or
js
add
inc
inc
fidivrs
subl
imul
push
jb
fsubrs
cmp
dec
ds
lret
xchg
sbbl
xchg
bound
push
int
aaa
lods
pop
sub
das
adc
cmp
je
popa
jo
xor
imul
mov
in
pop
mov
scas
sub
test
push
inc
test
pop
fdivl
rcl
fldl
arpl
add
xor
mov
jl
bound
ljmp
push
cmp
push
out
sub
mov
sub
scas
mov
jbe
out
sbb
jg
mov
out
mov
divl
out
jbe
out
mov
add
mov
xchg
stos
cmp
sbb
in
xor
xchg
bound
pop
jecxz
sub
sub
ret
xor
icebp
xchg
dec
sbb
out
outsb
idivb
pop
ja
dec
adc
call
xor
xor
arpl
inc
adc
xchg
push
iret
sahf
leave
lahf
hlt
fimuls
push
test
popa
fildll
je
jmp
fdivl
pop
push
dec
cltd
loop
xlat
movsl
sub
mov
hlt
pop
add
sbb
sub
test
cmp
popa
mov
xorb
and
inc
adc
fdivrl
mov
in
mov
ds
mov
dec
and
push
aad
pop
jecxz
fistl
testb
lods
mov
pop
adc
pop
pushf
das
out
faddl
sbb
or
add
cmpsb
sbb
ljmp
inc
enter
push
pop
cltd
pusha
ret
jp
mov
testl
jle
sbb
outsb
outsl
inc
iret
lcall
imul
xor
cltd
imul
jge
daa
in
mov
or
push
andb
push
xor
mov
arpl
shrb
pop
sbb
push
pop
les
add
and
fwait
orb
mov
ja
jo
xchg
or
xchg
in
mov
mov
popa
jmp
adc
stc
out
loopne
movsb
incb
xor
std
lea
jno
cs
mov
pop
lcall
add
jp
xchg
lahf
mov
rorb
mov
dec
and
arpl
in
push
fwait
cmp
xchg
aas
mov
adc
pop
cltd
dec
mov
sub
mov
call
mov
jmp
sahf
hlt
popf
inc
mov
mov
cltd
jno
mov
and
push
xlat
in
mov
std
rcrl
cld
sbb
repz
sbbb
jnp
rcl
daa
xor
mov
popf
lds
pop
cmc
dec
rcll
push
test
insb
push
fistpl
inc
add
cwtl
sbb
aad
push
daa
enter
add
or
mov
mov
or
shlb
fiadds
subb
call
mov
shrl
outsl
hlt
in
sbb
inc
mov
or
pushf
mov
je
decb
mov
mov
sbb
pop
rorb
loop
and
enter
push
xor
loop
or
outsb
add
test
fnstcw
mov
movsb
sub
stos
or
test
loope
cld
xchg
rorb
mov
lock
push
inc
shlb
clc
inc
inc
in
push
xchg
in
mov
shll
popf
out
adc
cmpsl
xor
lds
lret
jge
push
scas
xchg
fidivrl
cmp
sbb
testb
mov
adc
mov
jo
jg
sbbl
cmp
loopne
or
mov
fisubl
imul
es
mov
cmp
mov
add
out
push
loop
jb
in
push
movsb
xor
movsl
and
out
jns
movsl
lea
mov
icebp
push
jbe
in
cmc
ret
mov
test
push
adc
or
lds
adc
test
lods
jne
jo
dec
out
jg
jo
pop
fadd
pushf
mov
cmp
inc
movsl
in
xchg
sahf
inc
sub
mov
or
add
lock
out
scas
in
push
mov
es
call
repz
je
inc
xchg
shll
std
iret
jg
xchg
fldl
fdivp
inc
cmpsb
push
shlb
repz
inc
mov
push
clc
test
pop
pop
sbb
jg
out
sbb
sub
addr16
ljmp
jns
ret
inc
mov
push
mov
push
mov
or
mov
cwtl
mov
jb
insl
jbe
outsb
cmp
adcb
mov
jb
stos
jb
scas
mov
cmc
push
test
call
insl
repz
mov
test
and
fisubs
fistpl
and
aaa
repz
sbb
int
int
push
sub
pop
pop
mov
cmp
mov
cwtl
push
adc
and
push
loope
xor
jge
lcall
jg
popf
cmp
fsubp
push
subb
mov
cmp
adc
jge
mov
ret
cltd
repnz
and
push
mov
dec
push
inc
dec
je
out
push
int3
ret
fnstenv
je
dec
jge
lock
int3
xchg
es
cmp
stos
pop
add
stos
outsb
push
frstor
sbb
lcall
push
das
sbb
inc
xor
rcll
fistpll
int
test
dec
mov
mov
jnp
addr16
push
shlb
and
lods
inc
jg
mov
ret
sbb
ljmp
cmpsl
mov
add
ret
pop
sbb
repnz
cmp
es
add
dec
mov
xor
mov
arpl
push
sub
mov
xlat
xchg
sub
pop
jmp
fstpt
push
sbb
imul
clc
dec
call
fwait
cmp
dec
fstpt
push
sbb
imul
clc
dec
call
mov
mov
cli
pop
out
dec
fstpt
push
adc
jb
pop
stc
jnp
mov
cmp
dec
fstpt
push
mov
or
or
jecxz
movsb
pop
mov
int3
int3
int3
int3
int3
int3
push
faddl
jo
pusha
test
fsts
mov
dec
sahf
pop
shrb
or
sbb
sub
cmp
int3
push
faddl
jo
pusha
mov
pushf
add
pop
shrb
or
sbb
mov
in
jo
pusha
mov
pushf
add
jg
sbb
sbb
outsl
ficoms
mov
sbb
add
test
ja
cmp
adc
jnp
and
and
adc
in
adc
lock
sarl
xchg
in
test
sbb
jp
insl
icebp
xor
dec
xchg
mov
fstps
dec
andb
jne
xchg
jl
stc
mov
test
sbb
adc
sti
aaa
in
arpl
cmc
pop
mov
aas
lea
pop
nop
sbb
aam
mov
lahf
and
adc
add
jae
mov
add
push
mov
maskmovq
pop
ret
pushf
adc
cmp
lock
int
pusha
add
cmpsl
adc
enter
gs
sbb
call
mov
mov
push
faddl
jo
pusha
mov
pushf
add
pop
shrb
or
sbb
sub
cmp
test
jo
pusha
jmp
jbe
je
test
cmp
leave
dec
out
mov
adc
xlat
dec
jmp
fwait
cmp
sti
jns
inc
out
iret
stos
adc
or
ds
add
pop
shrb
or
sbb
sub
cmp
int3
push
faddl
jo
pusha
mov
pushf
add
pop
shrb
or
sbb
sub
cmp
int3
push
mov
mov
mov
or
mov
imul
movsb
lock
js
js
mov
and
adc
outsl
enter
stos
je
popa
call
push
fmul
test
test
lods
out
cltd
arpl
mov
push
adc
lea
leave
fwait
adc
jp
xchg
jno
sbb
call
shrl
lea
add
push
popa
pop
stc
or
mov
xchg
or
nop
or
into
pushf
xlat
adc
mov
push
inc
ja
inc
aad
cwtl
ret
fwait
or
xchg
cmp
ds
arpl
in
mov
xchg
ss
cwtl
lret
ret
aas
sbb
loopne
fisubl
cltd
xor
fwait
jae
ret
cmpsb
ffree
js
xadd
add
sbb
es
int
ljmp
or
dec
mov
inc
xor
loop
in
and
jo
ret
mov
dec
jbe
mov
xchg
lea
mov
sbb
and
stc
push
cmpsb
cmp
jnp
add
pop
mov
xchg
jb
xor
xor
xor
mov
je
jp
push
add
xor
add
mov
jno
clc
and
in
adc
inc
cmp
cmp
xor
xchg
pop
adc
jo
cmp
xor
add
ja
xchg
pop
mov
roll
cmc
nop
jb
fs
ja
arpl
or
pop
dec
cwtl
nop
sub
in
outsb
insb
jno
jbe
test
mov
sti
cwtl
loopne
jl
jge
cmp
pop
pop
les
sbb
xor
add
and
dec
mov
xchg
andl
xor
xchg
push
xor
push
push
lock
push
add
sub
mov
inc
xchg
out
inc
xchg
mov
adc
jo
mov
pusha
mov
int3
pop
mov
divl
dec
and
pop
ss
data16
pop
fnstsw
cmp
cmp
mov
sti
pop
fistpll
je
jp
dec
and
sti
push
add
mov
dec
cmp
add
push
inc
outsb
clc
jecxz
cmp
cld
lret
aam
push
xchg
icebp
rorb
icebp
aaa
mov
lods
push
xchg
mov
mov
mov
sub
lds
push
push
add
add
js
push
cmpb
aam
mov
pop
adc
jge
pop
inc
cmp
add
fsubrl
push
out
fldz
imul
inc
jae
xrelease
pop
jno
ror
in
sub
gs
jb
ficoml
mov
test
adc
fbstp
iret
popa
sahf
lahf
push
subb
addr16
mov
or
jle
add
iret
xor
mov
mov
pusha
sbb
mov
cmp
pop
outsl
push
sub
sub
cltd
cli
mov
sub
fcoms
rcl
xchg
mov
pop
dec
sub
mov
push
jmp
sbbl
push
push
push
hlt
nop
daa
fcoml
loop
sub
cmpl
mov
dec
push
aas
push
cmpsl
xor
loope
mov
stc
inc
pop
or
jl
pop
jne
push
shrl
stos
jbe
cli
jns
loope
xchg
sub
pop
mov
sub
outsb
popf
jg
roll
fsubl
mov
hlt
pop
jae
pushf
ss
stc
jg
mov
in
test
imul
fmuls
adc
pop
aas
push
cmp
movsl
pop
leave
pop
pop
or
cmp
fdivs
push
jo
sub
pop
outsb
inc
movsl
arpl
mov
movsb
dec
ss
shrb
sub
sbb
lock
loope
dec
dec
push
inc
add
mov
je
xor
mov
in
mov
mov
into
les
clc
repz
inc
shll
lds
xor
adc
push
loopne
pop
pusha
xchg
call
push
fiaddl
clc
bnd
mov
xchg
cmpsl
pop
stc
inc
fxrstor
or
aad
xor
jp
add
xchg
out
vmptrld
adc
pop
es
je
pop
dec
mov
int3
pop
fisttps
cmp
pop
clc
arpl
inc
add
fimull
shlb
add
jb
xchg
push
roll
xchg
jns
lds
mov
jnp
sub
repz
add
lret
scas
push
xchg
add
test
pop
aaa
mov
cs
push
jecxz
sbb
jns
mov
xchg
jle
into
mov
scas
jnp
mov
sbb
enter
lahf
test
cld
pop
xchg
cmp
adc
cmpsl
mov
jp
leave
jno
inc
sub
or
cmpsb
in
or
mov
inc
add
movb
push
dec
xor
push
add
rcl
lahf
pop
mov
cmp
mov
cmc
rclb
pop
lds
sbb
jl
ljmp
or
xor
mov
ds
movsl
outsb
cmpsl
pop
or
test
jecxz
xchg
xor
pop
cld
fcomi
pop
mov
jae
int3
movsb
cld
lock
jge
mov
push
rorl
repnz
stos
popf
mov
in
sub
adc
push
ret
cmp
cmp
mov
cs
mov
je
sub
push
outsb
fs
mov
xor
push
sbb
sbb
or
pop
je
test
xor
pop
dec
push
dec
int
stos
dec
dec
and
scas
or
lret
inc
loop
jp
addr16
add
xlat
dec
dec
xor
fcmovnbe
add
fwait
ret
test
xor
dec
loope
ljmp
pop
repnz
fdivs
movsl
test
imul
xchg
jo
mov
xchg
mov
int
std
inc
xlat
adc
pop
lds
dec
pushf
cld
sub
push
jp
mov
loop
or
jns
push
jnp
decb
adc
and
jb
sbb
jo
icebp
jns
add
pushf
out
or
inc
mov
jg
sahf
out
data16
xchg
xor
cld
mov
std
stc
fldl
aas
cmpsl
data16
mov
popf
mov
add
fstps
popa
push
jbe
and
mov
sbb
mov
push
repz
dec
insl
add
and
inc
sahf
mov
dec
popf
bound
pop
faddp
jge
mov
add
add
mov
mov
in
cmp
and
cmpb
imul
pushf
and
imul
fsubrl
clc
mov
dec
lds
call
lds
xchg
and
sub
fnstcw
pop
rcll
shrl
mov
xor
adc
imul
fs
mov
jp
push
jno
xchg
or
and
sbb
cmpsl
cli
daa
pop
jg
out
das
inc
cmp
xor
jecxz
mov
pop
sub
jno
and
jl
inc
adc
in
add
cmpsl
scas
roll
sub
mov
pop
xor
mov
mov
nop
or
shrb
inc
lock
adc
push
fbld
aaa
lcall
and
dec
jno
insb
dec
push
mov
rcr
lret
scas
pop
call
sub
or
outsl
xchg
popf
or
push
jl
or
popf
jae
add
addl
push
test
aam
popf
xor
cld
sbb
shll
or
or
inc
sbb
xchg
xor
xor
and
pop
inc
push
dec
test
or
std
pop
xchg
int
ds
sub
movsb
rclb
jbe
jae
sbb
xor
mov
xadd
inc
ja
int
and
shl
daa
sbb
sub
inc
push
enter
mov
sbb
sahf
loopne
xor
out
and
add
mov
lea
jb
bt
mulb
push
les
xchg
mov
adc
dec
xor
out
add
fwait
dec
add
shlb
xchg
mov
xchg
pop
insl
out
psubw
cwtl
stos
into
popa
xchg
cs
jp
loopne
push
ficompl
int
ss
lods
fwait
adc
adc
cmp
mov
outsl
xchg
or
mov
cmc
cmp
cmp
cwtl
pop
dec
mov
imul
fidivrs
fstpl
scas
or
jmp
cmpsb
and
test
mov
xor
add
jns
xchg
mov
lods
scas
sub
xchg
lcall
cmp
imul
xchg
pop
aas
lods
loope
cld
dec
cmpsl
xchg
adc
jmp
pop
es
push
mov
or
inc
es
sbbb
insb
insl
inc
add
cmp
lods
popa
sub
test
cmp
inc
popa
out
into
sti
cs
add
sbb
je
popa
lret
cmpsl
xchg
ret
ret
xor
mov
dec
fmuls
icebp
jbe
xchg
dec
jno
and
add
sbb
test
jge
sar
pop
stos
testl
test
add
mov
mov
mov
addb
loopne
add
jae
cmp
jbe
int
es
ja
mov
aam
iret
mov
lahf
loopne
in
mov
cli
mov
push
int
arpl
fildl
sbb
add
fcompl
stos
cmp
mov
pop
push
push
adc
xchg
inc
insl
or
fcompl
fimull
mov
sub
divb
in
xchg
data16
adc
mov
and
lret
adc
outsb
fidivrl
xchg
and
pop
inc
dec
out
insb
xor
push
cltd
pop
enter
int3
jno
inc
push
push
add
cmpsb
outsl
dec
cmp
rcrb
cmp
sbb
in
in
pop
mov
mov
xor
imul
dec
dec
jl
mov
inc
sbb
push
les
xchg
sub
inc
and
cmp
mov
and
sub
mov
test
mov
cmpsb
rorb
cmp
lds
sbb
adc
inc
jno
push
push
mov
sbb
inc
mov
lock
ret
push
cli
jbe
insl
test
aas
sahf
mov
js,pt
adc
xchg
imul
mov
jno
rep
loopne
fwait
mov
into
fisubrl
test
mov
sbb
cmp
cmp
xor
lea
and
cmp
addr16
stos
pop
add
mov
cmpsl
cmpsb
push
jp
pop
mov
cmp
inc
in
ljmp
popa
int3
roll
jmp
push
andb
xchg
xlat
mov
add
add
mov
fs
fsubl
mov
jmp
cmp
cmpsl
scas
test
and
or
xchg
mov
pop
popf
mov
dec
inc
imul
mov
dec
inc
xor
push
jnp
popf
pop
add
dec
lods
push
jne
xor
decb
andb
mov
and
and
cmp
lret
es
int3
mov
adc
jp
enter
imul
data16
fldl
adc
xor
rcr
inc
test
xorl
lods
negb
mov
push
mov
jp
ret
add
or
inc
jle
or
mov
cmp
movsb
adc
cmp
add
sarl
out
mov
mov
inc
jle
xlat
stos
push
mov
js
testb
adc
mov
jb
in
pop
out
pop
inc
rcll
xchg
cwtl
adc
mov
scas
hlt
jmp
sbb
sbb
popl
mov
push
daa
push
push
sub
push
mov
outsb
or
jp
repz
fs
mov
pop
sub
adc
test
cld
fwait
jbe
push
int
push
aas
jl
std
jns
fcoml
push
mov
outsb
out
ret
mov
jnp
adc
enter
outsb
jns
xchg
add
mov
add
repz
push
sbb
scas
aaa
test
cltd
rcll
push
arpl
rcl
inc
nop
faddl
shll
lahf
pusha
dec
cltd
push
cmp
shlb
xchg
add
insl
sub
in
lock
movsl
sbb
cltd
ljmp
aas
and
arpl
addr16
lock
jb
push
sti
or
push
iret
fbstp
ret
cwtl
pmaddwd
and
repz
iret
lret
adc
mov
cli
ja
dec
lods
dec
mov
add
mov
push
imul
mov
ficomps
mov
sbb
ljmp
or
daa
push
mov
fstpt
mov
test
pop
inc
lods
ret
mov
mov
sub
mov
aad
les
fists
negl
adc
jnp
mov
data16
or
inc
inc
inc
fwait
jno
xchg
sbb
pop
iret
push
test
imul
inc
rcrl
sahf
addl
pushf
stc
xor
loop
inc
xor
in
test
movsb
xchg
fcomip
jmp
mov
xor
inc
pop
fwait
cmc
jp
into
sub
pop
stos
addr16
fcoms
push
cmpl
or
push
and
lret
push
jmp
nop
mov
aas
outsb
jae
inc
adc
mov
xlat
pop
xchg
jbe
sub
pop
fs
ret
jnp
sub
mov
add
ret
jno
adc
js
push
lods
add
addr16
inc
mov
jmp
push
mov
add
xor
inc
and
outsb
jle
ds
cmc
add
lahf
fld
mov
push
js,pn
mov
leave
inc
dec
or
inc
les
lret
loope
stos
mov
je
jg
sub
cmp
sbb
movsb
fwait
shll
jl
rorl
mov
lods
cmp
push
test
mov
cmp
push
out
imul
xchg
dec
mov
inc
stc
das
jns
les
push
insb
sub
cmp
test
add
popf
jo
sbb
ret
lret
push
aad
mov
lods
es
adc
enter
inc
sbb
push
xchg
mov
jp
mov
push
jmp
push
push
sbb
out
cmp
or
cltd
jecxz
xor
add
call
notb
cmpsb
test
jp
mov
sbb
push
mov
ret
dec
sahf
mov
push
or
sbb
push
clc
xor
bound
int
pop
hlt
pop
outsb
xchg
mov
push
std
sub
out
cmp
pop
lret
jecxz
arpl
pop
popf
cmp
mov
scas
mov
jo
xchg
mov
dec
xor
or
lahf
and
out
mov
and
dec
in
aaa
out
stc
cld
leave
das
adc
jns
ss
sbb
dec
in
mov
xchg
mov
dec
fs
dec
fcmovnu
mov
in
outsl
and
jns
bnd
lods
insb
mov
add
inc
push
sub
pop
inc
and
lods
mov
cltd
iret
pop
fmuls
jne
pop
gs
jbe
push
jbe
stos
cmp
mov
lods
lds
jae
jg
jae
int3
aas
idivl
outsb
lods
ret
mov
pop
stos
pushf
sub
adc
scas
sahf
js
jae
or
sbb
mov
lods
adc
lcall
push
decl
enter
cmpl
add
fxch
inc
push
inc
jb
push
mov
pop
and
mov
sahf
jg
scas
jmp
imul
inc
pop
jb
push
adc
mov
mov
cmp
mov
or
stos
iret
pop
add
jb
lods
bswap
lock
aam
xor
add
sub
daa
mov
or
cmp
mov
adc
pushf
pop
sbb
or
pop
lahf
pop
dec
fwait
mov
and
pop
insb
into
and
pop
add
cmp
mov
and
js
inc
pushl
idivl
shlb
inc
shrl
and
add
dec
pop
outsb
js
movq
jno
xchg
mov
loope
das
xor
jp
ja
mov
dec
lea
lret
dec
cwtl
jg
lds
lods
nop
mov
mov
push
push
cmp
ja
or
ja
pop
inc
cmp
fildll
notl
add
ja
mov
jge
cld
movsb
bound
cld
stc
daa
pop
jle
fs
xchg
cmp
mov
pop
pusha
lds
movsl
in
add
adc
out
jae
sub
scas
push
iret
sbb
mov
loope
cmp
push
shrl
cmp
mov
dec
nop
in
sti
pop
add
loope
xorb
stc
ljmp
mov
scas
enter
popa
lret
mov
lret
xchg
push
dec
and
xor
and
mov
shrl
test
mov
mov
jp
sahf
aaa
addr16
out
jbe
cmpsb
mov
jge
outsl
sbb
cmc
cmp
aas
scas
adc
cs
out
jno
inc
aad
lret
dec
jp
insl
pop
cmp
and
push
bound
leave
scas
xor
xor
enter
arpl
jecxz
clc
jns
dec
and
cmp
push
icebp
movsl
cmp
ds
jae
imul
jo
mov
mov
xlat
inc
mov
adc
jnp
and
rcrb
push
into
popa
pop
xor
push
rcll
sub
outsb
xor
clc
push
js
ljmp
rcl
cmp
push
inc
mov
or
jae
xchg
sub
hlt
mov
std
outsb
add
jb
popa
lods
inc
test
dec
aam
imul
inc
xchg
push
sbb
lcall
xor
sti
sub
popa
sub
je
lret
dec
ficompl
jle
inc
leave
push
daa
dec
adc
jo
leave
lock
fmuls
rcrb
sub
into
daa
aaa
adc
or
shrl
in
ror
inc
add
ljmp
adc
icebp
mov
and
xor
xor
dec
pusha
dec
mov
xlat
jbe,pn
gs
xchg
sarl
test
loopne
adc
hlt
decb
jb
aad
dec
dec
xor
push
test
leave
daa
jl
inc
dec
jbe
in
aaa
dec
aas
pop
cmc
jle
pop
mov
jnp
sbb
and
mov
fldenv
mov
add
bound
pop
int3
loopne
aad
jmp
add
pop
pop
mov
ret
or
ja
inc
mov
mov
adc
cltd
push
xchg
pop
iret
aaa
in
pop
sub
cmp
cmp
inc
in
lds
and
inc
dec
roll
pop
push
ds
jl
fnstenv
xor
subb
sbb
xor
dec
das
jmp
xchg
divl
addr16
mov
sarb
dec
push
push
mov
cltd
jae
add
jge
fistl
dec
push
data16
or
fildl
xor
iret
cmp
scas
xor
icebp
je
or
ljmp
mov
push
xchg
addr16
mov
mov
rcrb
dec
pop
cmc
mov
push
inc
add
mov
or
arpl
mov
addr16
and
gs
stos
cwtl
fdivrs
std
mov
cmp
pop
jne
lea
mov
mov
loope
cmpl
daa
repnz
cmpsb
pusha
aad
push
jmp
ret
dec
lods
data16
int3
pop
ffree
inc
pop
inc
mov
ret
fcoms
lds
pop
mov
mov
adc
notl
jl
jp
cmp
test
idiv
mov
ret
xlat
or
dec
adc
push
mov
cmpsl
in
test
mov
leave
fstpt
sbb
xor
sub
sarl
mov
xor
icebp
leave
test
roll
mov
mov
loopne
imul
adc
pop
jp
mov
dec
loopne
jmp
cmpsb
jmp
movsb
xchg
shll
icebp
shl
cs
lea
jle
in
add
out
xchg
xor
jo
inc
icebp
mov
lods
push
adc
sub
add
imul
and
mov
ret
push
js
xlat
xor
sub
dec
mov
lds
lahf
pop
jg
dec
inc
loope
dec
rcrb
cmpsb
mov
mov
cmp
jmp
xchg
sbb
mov
adcl
push
add
adc
fsubp
jnp
out
mov
fdivrl
imul
and
inc
adc
iret
aam
incb
mov
rorl
leave
inc
aaa
sbbb
into
es
int
cmp
leave
jae
adc
jbe
and
jnp
inc
dec
sub
fbld
pop
out
pop
les
dec
dec
loop
sbb
cmp
les
jbe
mov
xor
push
add
jae
jmp
push
mov
sarl
arpl
mov
loope
shrb
jno
xchg
pop
repnz
mov
jmp
cmp
push
repz
in
gs
add
test
dec
popf
mov
lcall
test
in
ljmp
mov
into
int3
repnz
xor
call
add
cmp
sbb
xchg
test
push
or
js
mov
ud1
lahf
push
adc
xchg
shrb
adc
mov
xor
xor
push
stos
dec
scas
add
daa
repnz
xlat
arpl
cmpsb
stos
push
and
sbb
loop
jnp
mov
bound
lahf
mov
mov
mov
lret
dec
into
aaa
inc
scas
xchg
mov
ficoml
rcrb
enter
les
jle
loope
fcoml
in
incl
xor
pop
in
xchg
jecxz
lret
mov
mov
int3
and
mov
cmp
loopne
int
outsb
dec
cmp
mov
addr16
addb
xor
add
mov
in
jp
mov
insb
scas
mov
popf
std
jge
sbb
xchg
nop
lock
lock
movsb
jne
aaa
xor
loopne
push
test
aam
int
pop
mov
push
subb
imul
xor
daa
mov
je
lcall
cld
in
out
or
sub
sbb
jne
outsb
movsl
inc
jecxz
sbb
cwtl
andb
pop
or
jae
pusha
ja
enter
inc
arpl
jnp
or
mulb
int
sub
divl
roll
addr16
fwait
mov
adc
divl
jne
jo
loope
dec
in
mov
jmp
push
orl
pusha
cli
pop
adc
and
jle
xchg
cmp
addr16
int3
addl
adc
sub
mov
movsb
xor
shlb
cmpsl
or
outsb
wbinvd
cwtl
stc
jl
pop
out
inc
mov
and
in
rorl
cld
or
dec
cmpsb
and
inc
jp
pop
test
mov
outsl
or
dec
adc
jo
pusha
mov
pushf
add
pop
shrb
or
sbb
sub
cmp
int3
push
faddl
jo
pusha
mov
pushf
add
pop
shrb
or
sbb
sub
cmp
int3
push
faddl
jo
pusha
mov
popf
add
pop
shrb
or
sbb
sub
push
faddl
jo
pusha
mov
pushf
add
cmp
mov
mov
xchg
jnp
xchg
jg
dec
les
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
inc
cmp
arpl
jae
or
loop
mov
inc
rcll
data16
push
xchg
adc
es
inc
push
arpl
jae
add
xor
ret
inc
shll
data16
imul
arpl
hlt
add
xor
nop
cmp
add
in
push
fnsave
or
push
mov
inc
mov
sbb
add
in
sub
fwait
cs
push
xchg
mov
xchg
push
out
hlt
xor
push
jbe
jl
xchg
mov
fcom
stos
cld
sti
fcomps
add
ret
lret
mov
sti
and
sbb
out
es
push
push
adc
xchg
fstpl
dec
ret
mov
aad
jge
sti
jmp
mov
mov
jae
mov
xor
repz
xchg
pop
inc
aaa
cmpsb
leave
mov
notl
adc
xchg
inc
mov
outsb
mov
arpl
cld
add
xor
ret
rcl
jecxz
repz
out
mov
xchg
cmp
push
movsl
push
fsubrs
pop
stc
inc
iret
jb
addb
adc
imul
push
inc
andl
xor
jg
and
xor
cmpsb
and
add
push
pop
roll
pop
sub
jb
add
adc
ret
inc
rcll
data16
push
xchg
push
mov
push
arpl
jae
add
xor
jecxz
repz
push
xchg
push
mov
testb
inc
push
fcmovu
pop
in
test
daa
lret
dec
in
dec
in
out
fnstsw
push
sub
push
jo
sbb
jp
and
sahf
mov
aad
dec
loop
dec
inc
dec
pop
ds
lock
call
arpl
add
cmpsb
rorb
fbstp
add
repnz
aam
sub
jecxz
adc
gs
mull
dec
mov
inc
push
push
aam
js
jb
out
test
push
xlat
jb
stos
jns
mov
pushf
xor
pop
pop
jae
adc
xor
jmp
movb
jle
xor
jne
mov
imul
mov
scas
inc
inc
and
push
add
imul
xchg
mov
cmp
call
dec
fwait
std
into
pop
out
jb
jno
push
fwait
mov
or
gs
dec
fistps
jecxz
in
jb
or
clc
cmp
out
cmp
lcall
test
ds
fs
mov
lea
sub
shlb
sub
mov
cmp
ret
mov
push
test
fildl
sbb
notl
sbb
enter
in
loope
popf
mov
push
gs
pop
imul
adc
addr16
cmp
insb
inc
jnp
xor
inc
mov
pop
mov
insl
in
add
mov
jne
call
imul
and
sahf
pop
mov
dec
cmpsb
mov
lds
ror
mov
lea
mov
mov
mov
push
lret
sub
xchg
imul
scas
fimull
sbb
adc
mov
cmpsl
out
aam
jp
push
mov
popa
lods
xchg
sub
mov
out
adc
and
jg
dec
mov
lock
xchg
popf
dec
mov
call
pop
pop
lcall
cmp
fwait
xchg
popa
mov
fstpl
call
call
mov
lods
dec
inc
das
mov
js
sar
pop
fistl
fldcw
xor
cli
hlt
inc
out
in
inc
or
lods
int
push
push
add
adc
test
mov
cmpb
push
fs
out
cmp
push
mov
test
jb
loopne
mov
insl
and
hlt
addr16
jle
movsb
jns
push
ret
sarl
repz
shrb
lds
inc
negb
push
stos
lock
stos
cmp
mov
jecxz
ret
ss
xchg
sbb
jle
addl
shlb
test
xor
mov
jb
mov
cmp
jge
add
mov
mov
movsb
loope
fwait
xchg
dec
fidivrs
cmp
pop
fs
out
mov
nopl
push
and
idivb
addb
push
scas
push
imul
in
mov
jo
sbb
pop
xchg
fs
arpl
pop
ficoml
je
cmp
jmp
aad
in
in
inc
mov
mov
and
mov
fcmovne
cmc
push
repnz
je
jmp
mov
pop
xor
dec
dec
cmp
xor
adc
pop
test
notl
xlat
lret
add
xchg
xchg
mov
mov
mov
fwait
rolb
insl
arpl
cmp
xchg
dec
add
adc
jnp
jnp
outsb
xchg
or
or
lcallw
mov
jge
push
jae
loop
addl
push
into
add
jnp
in
and
jecxz
push
ja
push
je
stos
fidivrs
nop
fdivrl
repz
call
mul
mov
inc
repnz
out
sbb
jae
outsl
gs
cld
loope
or
add
loopne
jmp
jb
cli
and
adc
dec
aad
divb
stos
cmpsb
outsb
test
mov
cmp
pop
lret
in
jge
sub
stos
xchg
sub
cmpsb
in
xor
sahf
enter
sbb
jb
stc
cmp
dec
xchg
into
mov
add
push
inc
fadds
dec
fs
xchg
mov
add
dec
mov
adc
mov
cld
jb
and
insl
addr16
inc
std
dec
inc
or
jae
ja
stos
fstpt
test
add
jbe
and
pop
movsb
pop
push
mul
dec
push
jno
dec
icebp
jmp
push
add
mov
fnsave
ljmp
fs
xchg
mov
movsb
dec
repz
scas
push
mov
add
jmp
loope
jle
mov
xchg
jl
rcrb
jl
iret
cmp
je
mov
sbb
sub
dec
mov
jnp
push
mov
outsl
xor
fstpt
in
xchg
cmp
aaa
std
lahf
shl
pushf
bound
out
cmp
lock
sbb
scas
test
inc
cmc
ret
scas
sbb
inc
or
scas
dec
add
aaa
dec
dec
push
pop
sub
rcrb
jp
jge
cmpsb
cmp
aas
xlat
sub
int3
and
mov
xor
cmpsb
aaa
loopne
jns
xchg
mov
xchg
adc
and
cld
popa
stos
aas
inc
mov
cmc
sbb
in
cmp
xor
out
imul
in
stos
in
mov
sub
cs
push
pop
imul
cmp
dec
and
in
rcr
push
mov
pop
xor
or
dec
jl
in
dec
mov
mov
sar
and
dec
sahf
lods
or
add
adc
fstl
or
das
std
hlt
sarl
cmp
imul
testb
scas
push
adcb
mov
jmp
enter
xor
xchg
sub
dec
into
icebp
idivl
xchg
pop
sbb
arpl
mov
add
xor
xchg
sbb
add
sarl
movl
jns
jno
xchg
lods
sbb
or
push
adc
test
cmp
xor
ljmp
adc
mov
lods
jb
mov
popf
xor
cli
mov
jmp
add
aam
cmp
sti
jecxz
dec
movsb
mov
xchg
enter
xchg
cwtl
sti
mov
xlat
test
loopne
inc
push
jae
andb
enter
sahf
sbb
pop
jb
mov
stc
jl
cld
push
outsl
cmpsb
das
push
call
repz
roll
add
inc
das
cld
cmp
fs
sub
dec
add
xchg
int3
ljmp
xor
imul
out
in
popf
pushf
cmp
popf
push
sub
fldlg2
pushf
cmp
mov
jb
sub
add
int3
lcall
out
lcall
fldt
int
mov
out
sbb
jge
sbbb
icebp
cwtl
add
cmp
pop
pop
jl
jnp
fs
repnz
mov
or
fnsave
pop
xchg
shrb
jb
sub
int
lock
and
cmp
add
cli
in
cmp
movl
adc
add
mov
and
adc
mov
mov
test
or
bound
shlb
mov
sbb
push
push
daa
xor
aam
mov
xlat
xchg
cmc
lea
pushf
push
dec
push
inc
dec
xor
jns
jecxz
mov
cmpsb
jg
push
xor
insl
push
fisttpl
fcoml
pop
imul
pop
std
mov
mov
fdiv
sbb
call
test
mov
dec
insl
mov
adc
sub
loope
pop
cmpsb
pop
cmpsb
pusha
out
xchg
push
jecxz
lret
test
call
xchg
dec
mov
ds
mov
pop
lock
es
movsl
add
and
inc
mov
cmc
and
aad
bound
xor
xor
mov
fsubrs
cmc
lods
and
and
adc
in
cmpsb
jb
mov
in
xor
out
pushf
mov
dec
mov
nop
sub
sub
jmp
leave
xor
xchg
push
call
xor
dec
out
and
adc
pop
adc
mov
dec
sub
loope
pop
add
cmp
mov
test
or
aaa
loop
xor
popa
xor
out
mov
outsl
mov
sbb
xor
dec
cltd
adc
mov
aaa
mov
test
fiaddl
jnp
pop
into
xchg
insb
xchg
enter
mov
jb
inc
push
cmpb
jbe
or
sub
shl
lods
jl
lahf
pop
add
sbb
ds
int
mov
mov
data16
or
jbe
daa
incl
fdivrl
cmp
out
sbb
int
jmp
insl
dec
stos
adc
inc
std
dec
ret
int
fnstsw
cli
fldcw
stc
push
sbbb
add
fsubl
xor
dec
push
outsl
and
xchg
push
faddl
jge
cwtl
add
scas
push
mov
add
cmp
pop
jmp
int3
cwtl
xor
bound
icebp
adc
xchg
pop
xor
push
sub
mov
xor
adc
pop
hlt
outsb
gs
cmp
xor
nop
mov
idivb
xchg
jmp
adc
mov
arpl
jecxz
pushf
nop
sbb
sbb
jne
or
lods
sub
pop
mov
fstpl
xchg
or
mov
pop
cmp
push
out
adc
inc
inc
xchg
mov
scas
pusha
push
data16
testl
push
lret
jmp
xchg
fnstenv
scas
lods
scas
mov
xor
xor
push
adc
leave
sub
pop
cltd
cmc
lods
add
fistpl
cmp
lcall
sti
stos
roll
dec
or
dec
sub
popf
pop
ds
popa
mov
fisubl
jge
jnp
rcrb
push
aas
jno
lods
out
cli
xchg
test
aad
cli
subb
push
xchg
cmp
add
sub
lret
std
xchg
ss
pop
or
pop
xchg
or
inc
sub
mov
rol
daa
or
push
call
aad
scas
mov
ficoml
lahf
adc
xor
js,pn
cmpsl
mov
mov
mov
int3
cmp
and
cltd
dec
jnp
and
mov
cld
sbb
repz
mov
mov
into
cmp
cmpsb
enter
loope
push
xor
xchg
insl
shrb
push
fcompl
inc
mov
in
push
pop
mov
dec
or
aas
add
lods
and
daa
enter
add
lret
and
lods
std
repnz
or
in
aaa
fs
sub
sub
lods
lcall
inc
insb
ljmp
mov
cmpsb
push
push
dec
or
cli
loop
lock
push
sbb
mov
outsl
movsb
lea
sti
jne
dec
dec
and
mov
pop
adc
lahf
pushf
mov
push
push
lods
push
push
mov
dec
push
ret
pushf
test
popa
xchg
push
mov
enter
push
insb
call
mov
pop
sub
in
adc
xor
mov
and
add
cmp
sub
imulb
sbb
xchg
mov
pop
cld
iret
push
add
ss
adc
jp
and
popf
mov
popf
xor
outsl
movsl
add
lret
and
insl
push
lret
cli
decb
scas
add
in
decb
gs
pslld
mov
push
mov
mov
leave
mov
dec
mov
sbb
xchg
stos
shlb
xchg
mov
std
xchg
lods
test
mov
adc
dec
jo
mov
icebp
push
xchg
aaa
lods
lock
mov
xchg
sub
xchg
std
mov
cmpsl
enter
pop
clc
jae
xor
xchg
sub
xchg
mov
in
sub
stos
ss
jno
xchg
mov
adc
jne
xor
jbe
sbb
add
out
ret
and
aad
aas
mov
mov
aad
invd
in
add
cmp
or
mov
mov
out
pop
or
inc
jl
jae
sti
jns
pop
dec
mov
enter
xchg
jl
call
stos
sbb
and
or
fxch
imul
cmp
dec
insb
or
cmpl
adc
js
dec
sub
dec
cmp
gs
inc
je
test
out
push
sbb
in
in
fistps
inc
xor
cmpl
dec
adc
lds
lock
iret
dec
inc
xor
and
cmp
js
xor
scas
add
sub
adc
mov
lods
imul
lret
jmp
pop
loopne
pushf
cmpsb
cmp
fxtract
scas
inc
push
sar
sbb
cmpb
call
adc
testl
popa
aad
mov
imul
rep
fs
rcrl
lahf
push
decb
loopne
push
mov
xchg
pushl
or
and
and
aad
mov
jp
test
hlt
jge
test
cmp
cmp
and
test
out
fwait
adc
mov
iret
cltd
movsl
sahf
fcoms
cmp
js
xchg
rcrb
and
pop
jbe
mov
inc
adc
outsb
lods
push
dec
xchg
mov
ss
sub
dec
aas
xchg
push
mov
xchg
xor
mov
inc
cmpsl
add
divl
lret
inc
push
or
jge
mov
push
call
pop
xor
imul
inc
testl
cmp
or
arpl
and
ret
addr16
mov
add
jnp
in
xchg
je
xor
test
or
jnp
lahf
mov
push
or
rcll
mov
stos
inc
rorl
out
frstor
pop
fisubrs
jmp
sbb
into
mov
sti
shr
jae
outsl
xchg
and
in
dec
dec
fsts
jle
jp
push
in
scas
fsubrs
lods
jnp
xchg
cmp
or
inc
push
jecxz
jnp
adc
mov
xchg
sub
push
sub
sarb
mov
sti
jle
or
xchg
lcall
jmp
add
push
movsl
jmp
or
fistpll
imul
or
mov
sub
jns
or
divl
cltd
setle
cmpsl
cmp
pop
inc
rcrl
aaa
or
xor
cmp
and
int
sti
out
push
dec
data16
call
xchg
cwtl
pop
push
inc
dec
insl
stos
xor
pop
mov
lahf
adc
aam
in
push
test
daa
and
xor
in
add
test
ror
lret
dec
dec
add
ds
or
pushf
fisubs
cmc
jp
aam
sub
sub
inc
dec
push
daa
pop
adc
pop
add
and
mov
insl
xchg
iret
test
out
lcall
mov
mov
loope
add
and
mov
int
or
mov
dec
movsl
push
insl
push
pop
aam
mov
mov
aad
rcrb
lock
stc
ficoml
negb
and
xor
stos
mov
mov
lods
sahf
scas
pop
cmpl
lock
dec
dec
or
jae
cld
rcll
ficoms
test
xchg
add
into
lret
pop
adc
out
push
imul
cmp
cmc
jmp
jg
arpl
jae
inc
scas
stos
pop
shrl
push
adc
cmp
jl
outsb
adc
pop
cli
push
test
mov
adc
xchg
ss
jbe
cld
aas
jo
mov
push
mul
pop
leave
mov
stos
outsl
dec
and
jmp
pop
lret
inc
lret
adc
pop
call
pop
add
fists
mov
imul
dec
pushf
xchg
mov
call
fisubs
nop
rolb
iret
pop
jnp
iret
xchg
cmp
repz
or
int
jbe
loop
add
pusha
push
and
dec
jle
loope
popa
in
movsl
nop
adc
mov
cltd
loope
dec
fdivs
mov
repz
mov
adc
rol
inc
push
inc
bound
xchg
push
inc
or
adc
es
in
or
add
mov
aaa
gs
cmp
inc
cmp
mov
jbe
negb
lods
adc
ret
insl
lds
fwait
cwtl
jbe
cmp
push
test
insl
adc
mov
jmp
and
sbb
fcoms
decl
sub
popf
call
sub
ret
arpl
add
inc
loopne
push
insl
xor
push
sub
lcall
popa
pop
cmp
das
hlt
ror
adc
push
dec
jne
daa
mov
cmp
in
xchg
std
pop
jl
inc
lea
push
aad
mov
dec
mov
repz
pop
mov
movsl
mov
loopne
pop
pop
cmp
hlt
fldcw
jge
jle
sbb
shlb
gs
or
out
lcall
lahf
leave
bound
aad
mov
and
mov
mov
push
es
test
mov
test
mov
and
aam
loope
mov
or
inc
lea
pushf
cwtl
sarb
push
sbb
loop
loop
or
sub
cmp
in
xorb
ret
mov
sbb
cs
nop
push
pushf
jmp
ss
ret
add
jp
inc
dec
push
mov
test
mov
insl
xchg
jp
in
xor
ficompl
mov
adc
ds
cmpsb
sub
inc
adc
adc
jo
gs
nop
lods
js
pop
push
fcomi
sbb
xchg
hlt
lods
stc
push
xor
aam
mov
lods
test
sbb
pop
mov
enter
adc
mov
jmp
mov
xlat
or
push
in
inc
rcr
cmp
lds
popf
mov
jecxz
pop
fcmovnu
or
pop
inc
lcall
adc
mov
xor
add
cmp
inc
stc
xchg
mov
push
hlt
rclb
imul
mov
and
sbb
daa
rcl
es
ret
mov
xor
aas
fisubl
lahf
mov
add
test
xor
mov
mov
gs
add
or
jecxz
cmpsl
jns
dec
and
cmc
loope
iret
enter
xor
add
fldenv
fdivs
popf
xchg
pusha
mov
pop
jns
adc
lret
in
out
jb
add
daa
push
and
sbb
jecxz
clc
rcll
dec
xlat
ret
jl
mov
lods
sub
dec
push
pop
jmp
pop
mov
lds
daa
jecxz
cltd
scas
xchg
inc
mov
inc
mov
test
mov
jge
fdivl
fwait
cmp
add
sbb
sub
sub
xchg
push
mov
movsb
push
int
push
push
in
insl
stc
sub
and
push
sbb
fcomps
popa
xchg
je
fwait
and
xchg
rclb
ficoms
sbb
pop
inc
ja
cli
aas
dec
or
mov
imul
mov
and
add
sub
out
nop
jne
cmc
dec
pop
cmpsl
sbb
push
adc
mov
mov
adc
mov
hlt
int
push
inc
imul
movsl
imul
scas
xchg
mov
mov
push
mov
insb
sbb
leave
repnz
rcll
push
mov
inc
push
jns
cmpsb
xor
cwtl
xchg
test
out
or
ss
mov
outsb
adc
jns
movsb
xchg
scas
aas
push
xor
mov
lods
fucom
jle
je
mov
out
aad
shll
mov
jnp
les
pop
cmpsw
ds
cli
addr16
push
fisubs
sbb
icebp
push
dec
fistps
sbb
xor
mov
add
movsb
dec
inc
mov
xor
leave
xchg
cmc
hlt
mov
xchg
push
pop
arpl
cld
inc
xor
cmp
mov
fcmove
and
jmp
aam
cmpsl
adc
jns
sub
sub
fsubrs
xchg
sbb
pop
push
lock
or
cmp
push
dec
adc
cmp
jg
aaa
scas
pop
ja
fldenv
jns
pop
cmp
lds
out
xchg
loopne
pusha
push
dec
xor
mov
adc
aaa
add
das
jno
pop
arpl
in
mov
scas
or
scas
out
lods
cmp
je
inc
leave
push
dec
push
outsl
fcompl
enter
push
movsl
ja
mov
sub
pop
mov
xor
js
out
ljmp
pop
js
jecxz
xchg
push
sub
mov
loop
add
fcomps
push
popa
xchg
push
adc
jns
add
sahf
push
cmp
inc
push
xor
lods
add
push
mov
push
pop
outsb
pop
or
mov
test
mov
xchg
rcrl
jnp
cmp
push
xlat
xor
push
push
inc
mov
mov
xchg
xor
hlt
loope
mov
xor
les
loop
sub
arpl
jae
pop
jle
das
ljmp
inc
stos
xchg
sahf
mov
cmp
popa
add
cli
ljmp
pushw
xor
insl
jnp
dec
and
mov
sub
decb
jge
loope
jns
xchg
outsb
es
push
fwait
nop
inc
cmp
adc
pop
dec
sbbb
out
lock
add
xor
push
xchg
mov
dec
ret
je
ds
mov
xor
rolb
popa
xor
insl
sub
sahf
xor
mov
or
in
push
cs
fs
sub
push
jmp
push
xchg
or
pop
push
mov
insb
mov
leave
out
push
in
jno
popf
jnp
pop
mov
sti
addl
das
dec
add
out
lret
or
inc
pop
dec
mov
std
cmp
ja
mov
sub
adc
cmp
push
xchg
fsts
jge
adc
stc
xchg
xchg
scas
aam
dec
push
ljmp
adc
data16
add
xchg
mov
dec
rorl
mov
xchg
lock
ljmp
lods
mov
scas
cltd
push
ljmp
cltd
scas
jbe
test
mov
mov
cli
outsb
fdivp
cmp
cmp
ljmp
popf
xor
inc
fimull
es
sub
xor
and
data16
out
and
inc
mov
sub
xor
mov
sar
out
jno
and
cmp
mov
cmp
mov
nop
repnz
add
movsl
cmpsl
xchg
xchg
dec
gs
xrelease
call
cli
sbb
inc
add
jo
rorb
mov
movsb
insb
addr16
jl
cmpsb
cmp
jae
mov
xchg
pop
ja
cmp
addr16
mov
sbb
movsl
into
scas
add
pop
inc
enter
loop
aas
out
add
mov
xlat
and
mov
or
adc
push
cmp
das
mov
push
loop
mov
imul
mov
jge
ret
dec
sbb
mov
add
xor
jecxz
repz
push
xchg
push
mov
push
arpl
jae
add
xor
jecxz
repz
push
xchg
push
mov
push
sahf
arpl
adc
and
rcll
data16
push
xchg
push
mov
push
arpl
jae
add
xor
dec
repz
mov
jmp
int3
int3
int3
int3
int3
rep
jae
inc
test
cltd
lea
lcall
repz
mov
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
mov
gs
addl
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
shlb
sbb
movsl
jae
pminsw
les
pop
and
bound
adcb
dec
sbb
ss
push
data16
mov
xchg
xchg
int
lret
pop
cwtl
pop
adc
adc
jb
dec
jb
stc
daa
push
cmp
fsubs
call
add
jae
arpl
xchg
and
pop
cmc
jecxz
adc
repz
xor
inc
inc
pavgb
sahf
inc
mov
add
lret
in
loopne
rclb
push
mov
xchg
cli
rcl
lock
mov
mov
jae
leave
jecxz
insb
ret
nop
sti
js
mov
xor
mov
pop
adc
jo
mov
push
xchg
push
cmp
jae
inc
test
and
xor
add
adc
jecxz
repz
mov
inc
xchg
cmp
lret
das
in
sbb
cmc
inc
mov
mov
inc
lods
insl
mov
xlat
add
push
out
inc
out
cmp
xor
inc
lods
push
xchg
add
sahf
inc
mov
push
rcrb
and
and
jae
in
cmc
add
adc
jecxz
repz
mov
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
mov
inc
xchg
push
arpl
add
push
sub
pop
out
cld
daa
pop
jb
xchg
insl
adc
scas
fdivs
xor
mov
fists
xor
adc
jnp
je
lret
push
clc
aad
xchg
sub
std
adc
add
sbb
pop
ret
adc
sahf
out
inc
jno
sbb
pop
jge
xchg
cs
cmpb
out
scas
sbb
popa
cwtl
xchg
nop
fucomp
lds
test
mov
data16
cmp
cmp
ret
mov
and
push
shl
lds
pop
inc
aam
cltd
fld
enter
ljmp
xor
clc
mov
xchg
mov
mov
mov
dec
mov
ljmp
shl
push
jle
or
pusha
cmp
dec
push
mov
mov
adc
scas
inc
cmpsb
add
push
adc
xor
mov
mov
pop
cmp
pop
repnz
sub
sub
lock
sub
int3
xor
in
stos
mov
mov
fucom
cmp
mov
ja
and
inc
test
clc
daa
cwtl
cmc
fnsave
pop
insl
pop
scas
ficoml
scas
and
push
ljmp
dec
inc
mov
lahf
icebp
lcall
mov
addb
stos
cli
popf
icebp
xor
fwait
jl
inc
add
sahf
enter
fisttps
xchg
cli
mov
mov
jo
inc
in
mov
mov
push
lret
mov
fcmovu
es
arpl
push
out
std
pop
lds
mulb
scas
loope
ret
imul
jne
mov
mov
add
ljmp
ljmp
lret
pop
bswap
adc
and
add
sbb
lret
and
dec
cmp
cmp
adc
pop
adc
mov
loopne
aaa
in
mov
loopne
mov
adc
lcall
dec
inc
sub
or
lea
sbb
test
lret
outsb
movsb
and
adc
jmp
aaa
and
mov
nop
in
or
dec
icebp
add
add
aad
icebp
sbb
add
mov
xchg
cwtl
mov
sti
icebp
sub
and
xchg
or
xchg
push
jo
out
mov
popa
cmp
dec
pusha
mov
mov
add
std
adc
mov
lcall
mov
or
mov
outsl
mov
add
inc
and
mulb
pop
push
jmp
xchg
xor
xchg
or
mov
jo
xchg
iret
stos
pop
stos
dec
fwait
mov
call
xchg
loopne
test
sti
lret
mov
ja
and
stos
push
adcb
pop
dec
imul
sbb
ret
push
cmp
and
lods
mov
lcall
loope
xor
bound
and
js
dec
jp
aam
js
pop
dec
stos
pop
stc
aad
mov
je
insb
or
mov
pusha
movsl
sbb
addr16
cs
roll
fisttps
jle
loopne
mov
cld
into
int
pop
jmp
sbb
inc
sbb
loopne
mov
inc
arpl
mov
push
ror
mov
popaw
mov
xchg
pop
call
repnz
mov
out
mov
in
das
shlb
sbb
iret
mov
aaa
ds
push
sub
inc
and
push
mov
aaa
mov
hlt
cmp
mov
adc
iret
add
clc
fmul
push
mov
sub
rcll
dec
dec
add
imul
xchg
es
orb
aas
in
hlt
add
mov
jns
stos
mov
leave
jno
or
in
imul
xchg
mov
out
hlt
es
xlat
jl
jbe
shr
jg
movsl
xlat
cltd
mov
inc
dec
jno
inc
inc
add
arpl
dec
or
xchg
cli
shll
add
cmpsb
adc
out
sub
pop
scas
int3
cmp
data16
and
jb
add
push
xchg
sti
xchg
xchg
mov
out
mov
mov
in
inc
iret
fwait
or
xchg
and
mov
out
into
add
iret
jbe
mov
sbb
mov
jb
ss
cmp
and
mov
loop
xor
jl
pop
popf
lret
or
subl
fcomp
inc
lods
sbb
sti
out
dec
pop
xchg
fistpll
lock
lahf
cmp
mov
xchg
lret
ret
leave
cs
into
pop
std
mov
inc
inc
in
out
cwtl
addr16
jmp
xchg
xchg
add
push
jb
inc
push
int
adc
fs
mov
and
or
cmp
mov
inc
shl
and
push
dec
jnp
xor
imul
pop
and
jno
add
ja
rol
lret
xchg
mov
jl
lret
dec
lds
cmp
leave
insl
in
stc
sbb
out
lds
mov
rcrl
sbb
cld
lock
test
in
jbe
or
or
and
mov
inc
movsb
jmp
call
pop
imul
je
loope
jo
or
and
cli
leave
sbb
xor
mov
dec
pop
nop
mov
cmp
mov
or
movsl
in
test
inc
aas
pop
lret
icebp
add
std
mov
cmp
mov
lods
repnz
dec
and
repz
sub
push
pop
dec
mov
roll
movl
mov
sub
std
out
jo
shll
lock
mov
test
pusha
add
mov
push
pop
inc
mov
push
cmp
jg
lea
inc
xchg
cld
out
cmpb
mov
gs
cmp
xchg
sub
cmpsl
aaa
sbb
push
movsb
and
inc
in
fisubrl
fisubl
push
arpl
mov
pushf
mov
inc
lock
inc
jmp
jae,pt
fbstp
stos
xchg
jne
add
xor
xchg
sub
aaa
or
and
rclb
or
shlb
gs
dec
pop
imul
lcall
in
hlt
mov
jl
mov
out
lea
push
xchg
test
inc
cmp
mov
cmc
stc
aas
sbbl
cltd
xor
scas
dec
dec
mov
call
lds
mov
sbb
push
sbb
rclb
in
les
lahf
ljmp
arpl
cmp
fwait
sbb
lods
imulb
je
flds
lahf
inc
lea
js
in
imul
fmulp
daa
pushl
push
pop
sbb
mov
enter
outsb
rolb
popf
test
xchg
imulb
jo
push
lea
pushf
les
adc
adc
mov
xchg
adc
in
aaa
je
test
das
jno
mov
xor
mov
test
pop
ljmp
push
pop
into
adc
push
ret
outsb
fs
cmp
cmp
repnz
sbb
sbb
std
in
or
rcll
pop
adc
popa
sub
pusha
icebp
mov
mov
jg
test
arpl
pop
int3
movq
push
jnp
sahf
mov
fidivrs
bound
mov
imul
xchg
cmp
fcomip
cmpsb
add
push
push
ja
outsb
pop
cmp
out
enter
xlat
inc
pop
push
xlat
jo
je
nop
in
pop
jg
mov
stos
mov
sub
push
stos
cltd
imul
insb
sub
xchg
sbbb
xchg
outsl
aam
andb
rorl
pop
imul
cmp
outsb
ds
cmp
subb
cmc
push
dec
pusha
cmpsb
scas
jae
and
sub
adc
loopne
cmp
dec
jle
outsl
repz
daa
sbb
sarb
repz
ljmp
popf
and
repz
bound
xchg
rep
loopne
fndisi(8087
les
gs
jmp
std
cmc
daa
push
rcrb
cltd
jecxz
int
ficompl
loope
sub
js
push
xor
lahf
ret
mov
ds
xchg
scas
mov
insl
adc
sbb
sahf
jge
dec
inc
fs
ret
xchg
mov
jae,pn
int
sub
cmpsb
xchg
inc
and
sub
mov
inc
push
adc
test
mov
add
cwtl
scas
xchg
mov
mov
not
pop
imull
inc
mov
pop
insb
dec
dec
inc
in
mov
jo
inc
jnp
jge
notl
sbb
mov
int
jnp
mov
dec
sub
mov
adc
scas
lcall
cltd
je
or
fsubrl
not
mov
xor
mulb
cmp
jae
cmpb
in
cmp
in
bound
push
je
cli
rorl
xchg
inc
and
negl
cli
loop
movsl
xchg
je
xchg
mov
or
nop
mov
rep
sub
test
dec
jg
push
add
inc
out
jle
mov
in
adc
out
push
je
aas
in
cwtl
outsl
sbb
xor
xor
arpl
clc
xor
ror
sbb
imul
xor
insb
lods
aad
cmp
add
arpl
mov
mov
pop
popf
pop
scas
pop
cmp
outsb
test
cs
sub
icebp
jl
push
mov
test
sub
jne
sub
mov
imul
in
decb
loop
xlat
push
or
or
clc
mov
pop
mov
inc
mov
insb
and
pop
mov
inc
lcall
movsl
clc
xchg
fprem
dec
sbb
jg
xor
cmpsb
jne
mov
xchg
xchg
mov
ss
leave
mov
data16
icebp
out
cwtl
lahf
jmp
loope
insl
stos
enter
cmpsl
xor
movsb
into
aaa
cli
lret
pop
inc
bnd
test
popa
iret
push
xchg
outsb
inc
xchg
push
nop
cmp
fsubrs
xor
das
imul
mov
jno
arpl
sbb
ret
mov
mov
jno
scas
xchg
cmpl
sbb
sbb
xchg
rclb
mov
notl
push
adc
mov
add
sbb
push
arpl
clc
push
mov
add
test
imul
shlb
mov
xlat
fwait
or
rcll
aad
mov
add
jne
das
jb
xor
xchg
out
aad
or
sub
cwtl
jmp
scas
adc
shr
out
push
inc
push
and
or
add
mov
adc
mov
sub
xchg
and
pop
out
sahf
sbb
jg
xchg
xor
push
adc
mov
cmp
pop
stos
mov
rcrl
int
add
fdivl
stos
out
jnp
sti
push
mov
or
jno
mov
movsl
jmp
fdivrs
mov
mov
cmc
mov
push
dec
xchg
fists
cmp
cmpsl
test
mov
fs
fsubrs
inc
mov
popf
out
sbb
push
jg
xchg
sub
iret
stos
inc
int
pusha
or
pop
xor
in
add
pop
fstps
cmc
pop
adc
lret
or
mov
push
mov
jmp
mov
sub
loope
out
lea
cltd
xchg
jbe
cmpsl
push
and
xchg
or
int
sarb
sub
pushf
adc
mov
xchg
cld
int3
pop
sub
inc
and
mov
bound
xorl
into
lret
sti
pop
jl
les
fcomip
or
das
gs
sub
push
ds
xchg
cld
xor
or
mov
sbb
pop
jno
jge
jge
push
inc
jo
push
adc
pop
repnz
mov
add
aad
mov
gs
sbb
dec
xchg
lods
fmuls
sub
mov
dec
mov
lahf
mov
sbb
mov
fisttps
mov
ds
dec
imul
pop
lods
filds
repz
xchg
aad
xor
push
mov
dec
xor
mov
and
inc
out
fimull
pop
mov
mov
outsb
pop
xchg
in
mov
out
and
and
sub
pusha
jg
or
xor
adc
int
scas
inc
mov
mov
loopne
js
lock
inc
dec
lahf
xchg
fwait
xchg
cmp
xchg
pusha
cmpsb
call
cmc
mov
bound
divb
push
lcall
xchg
clc
inc
outsb
fwait
leave
or
xchg
cmp
inc
inc
ss
jp
xchg
out
cmp
fbld
mov
jl,pn
dec
jne
mov
lods
testb
out
xor
xor
mov
dec
cld
and
inc
shl
jo
mov
inc
add
insl
sub
daa
lahf
insb
mov
das
sbb
lea
mov
cmp
or
mov
adc
cwtl
xchg
clc
inc
jge
inc
pop
dec
test
sahf
and
dec
and
es
sbb
out
push
dec
dec
das
popf
imul
dec
repnz
sub
pop
mov
subb
or
test
sahf
mov
jp
loope
mov
aam
lahf
sub
adc
aas
stos
dec
sti
cmpsb
pop
mov
adc
cmc
int3
in
les
rcll
jne
add
aaa
jp
pop
xor
ss
mov
fmul
cmp
pop
into
lret
xor
pop
les
lea
mov
jnp
ja
cmp
les
test
sub
add
into
ret
in
mov
js
movsb
mov
mov
jnp
lahf
jmp
test
cmp
test
sbb
insl
lods
je
cmp
das
push
in
in
cs
inc
int
ljmp
leave
mov
cmp
insb
aad
adc
pop
mov
cmp
cmp
test
mov
movsb
lea
leave
lods
xor
sub
cmp
add
faddl
stc
dec
aas
fsubs
dec
call
adc
test
adc
or
repnz
in
in
push
or
cmpsl
test
mov
mov
xchg
movsl
lcall
jo
dec
dec
xor
mov
je
out
sub
xchg
push
mov
adc
adc
fbstp
mov
pushl
jns
sub
fidivl
push
xor
jb
into
in
xlat
ret
or
fnstcw
mov
push
lods
cmp
add
sarb
pushf
or
pause
shrl
pushl
xchg
xor
inc
pop
cmp
inc
sti
mov
mov
cmp
xchg
jo
xchg
add
inc
cmp
shl
jne
mov
inc
in
cmpsb
aad
cmpsl
stc
or
pop
mov
mov
mov
push
mov
scas
fstl
jle
and
gs
sahf
sbb
sub
aas
ret
and
jne
sub
lds
dec
push
je
inc
pop
or
push
shrl
movb
in
dec
outsb
inc
icebp
add
sbb
sbb
cmp
lods
iret
fwait
and
adcl
test
push
pop
addb
adc
leave
sub
out
sbb
call
iret
lret
mov
inc
and
cmp
cmp
sub
xchg
sub
pusha
lds
push
mov
xchg
add
fisubl
cld
pushf
mov
jp
loope
sahf
icebp
xchg
pop
xchg
aad
mov
mov
adc
mov
or
or
test
addr16
jp
lcall
sbb
add
ljmp
push
mov
fdivrl
int
push
aad
test
and
test
cmp
gs
hlt
xchg
adc
popf
xor
mov
lahf
xlat
pop
pop
xchg
or
insb
push
mov
xchg
outsb
push
push
dec
jno
cmp
jo
push
jmp
movsl
ret
orl
adc
push
mov
jne,pt
xchg
gs
ljmp
add
sub
and
and
sar
push
add
mov
add
pop
inc
mov
xorl
fwait
xor
or
mov
pop
jecxz
adc
xchg
mov
and
sbb
xchg
cmp
add
into
pop
pop
jnp
out
ret
lcall
sub
mov
inc
lods
push
shlb
push
adc
fcmovbe
jno
jle
mov
push
dec
lahf
or
shlb
xor
test
rdmsr
or
dec
ljmp
pop
js
sbb
xchg
pop
fldenv
mov
sbb
aas
aad
xchg
aad
ret
cmp
sarb
adc
out
movsl
push
inc
pop
mov
std
push
push
jnp
adc
fwait
mov
sub
dec
push
outsl
jnp
stos
xchg
imul
je
movsb
cli
mov
sbb
mov
pop
add
popa
fbstp
in
mov
or
mov
add
rep
pop
adc
push
dec
mov
fcompl
test
ss
fwait
pop
test
jae
mov
testl
jmp
sbb
and
daa
inc
out
movsb
in
test
add
mov
dec
aam
inc
xchg
or
ficomps
pop
jle
cmp
cli
push
repz
sbb
inc
ret
inc
aas
cmpl
jne
sub
ja
mov
pop
or
mov
adc
mov
pop
pusha
je
xchg
push
cmpsl
jmp
dec
addb
rclb
mov
fists
js
movsb
xchg
sbb
adc
loopne
adc
adc
ds
stc
cld
mov
jge
xchg
imul
add
lret
bound
jnp
mov
fistpl
jg
test
jge
cld
sbb
cs
cld
shll
std
loope
cmp
pop
pop
dec
push
rolb
out
jmp
adc
push
ja
sbb
call
out
dec
fadd
scas
lcall
dec
pop
int3
shrb
lock
jecxz
mov
lcall
in
xchg
pop
jg
nop
cmp
add
data16
shl
imul
hlt
or
stos
in
adc
fistpl
popa
ljmp
add
inc
fs
jg
sahf
insb
sub
mov
jnp
das
pushf
scas
enter
lods
cld
xchg
jp
sti
sub
sub
pushf
mov
arpl
mov
mov
pop
xchg
ret
lcall
popf
jno
lock
fidivs
es
cld
adc
fisubl
lea
loopne
jnp
test
cmpb
stos
push
sub
loope
pop
adc
push
js
popf
sarl
sub
mov
pop
mov
lcall
popf
mov
lahf
pop
push
add
pop
jge
rclb
mov
or
test
movsb
or
fildll
daa
enter
orl
pop
mov
daa
clc
xchg
loope
dec
fisubrl
hlt
out
in
and
aas
mov
call
rcr
push
arpl
leave
pushl
pop
push
mov
push
test
aas
in
cltd
or
push
cwtl
hlt
mov
pop
imull
mov
ds
sub
movsl
or
mov
aam
sti
jge
lcall
pop
pop
sbb
out
push
sbb
data16
sbb
mov
jbe
outsl
mov
sbb
mov
ret
xchg
push
push
fisubs
pushf
inc
sbb
adc
mov
dec
loope
lret
jns
sti
xchg
pop
fisubrs
sub
sub
scas
std
cli
inc
icebp
xchg
lret
jmp
fadds
mov
add
mov
std
jle
sbb
inc
je
bound
sub
mov
into
rclb
sbb
cwtl
lahf
test
sub
or
dec
pop
imul
push
jne
jb
repz
mov
imul
or
roll
push
mov
ljmp
jnp
jge
sub
mov
mov
cltd
cmp
add
jl
pop
inc
repnz
sti
mov
xchg
xchg
call
and
in
xchg
ljmp
mov
mov
sbb
pop
add
mov
imul
mov
test
xor
or
cli
mov
xchg
outsl
sbb
cmp
std
nop
mov
mov
inc
xor
jmp
cmp
rorb
addl
sbb
mov
and
jl
aas
dec
imul
push
mov
push
pop
movsl
clc
enter
movb
or
lahf
shll
push
mov
sarb
cmpsb
mul
scas
mov
in
xor
jae
in
push
mov
and
lods
cmp
adc
out
cwtl
cmp
ret
mov
in
pop
xchg
sbb
mov
dec
dec
and
fwait
ljmp
inc
sarl
iret
dec
cmpsl
and
inc
mov
leave
shrb
add
shll
sti
lea
pop
clc
dec
bound
mov
sub
mov
pop
inc
sbb
cld
xor
out
dec
dec
cmp
in
adc
mov
mov
popl
inc
or
sub
or
scas
aas
add
dec
lret
xlat
add
pop
movsl
adc
mov
loop
mov
loopne
or
sarb
inc
push
std
pop
outsb
repnz
fisubl
add
pop
je
jmp
and
scas
mov
popf
pushl
ss
adc
je
mov
aaa
xchg
pop
mov
test
shrb
jle
rol
nop
ss
xchg
dec
ja
push
jb
mov
push
mov
mov
add
mov
mov
and
and
xchg
movsl
adc
ret
dec
mov
jbe
lwpval
push
popf
test
loopne
mov
loopne
out
jbe
mov
lret
iret
movb
mov
in
mov
jmp
mov
mov
into
lret
test
leave
sbb
add
repz
add
or
mov
dec
mov
jne
fstpt
fdivrl
or
pushf
xchg
leave
imul
lock
or
pop
add
scas
add
dec
popa
sahf
cmp
ret
aaa
and
dec
push
cs
mov
sbb
lock
mov
fdivrs
xchg
mov
mov
pop
xor
pop
aas
dec
stos
cmc
ror
lcall
icebp
sbb
dec
xchg
add
jnp
pop
xlat
push
pop
cltd
mov
pusha
cmp
into
fisubrl
xchg
std
push
pop
repz
xchg
pop
les
xchg
jo
push
mov
test
and
xor
add
adc
jecxz
repz
mov
inc
xchg
push
arpl
push
xchg
and
xor
add
adc
jecxz
repz
mov
inc
xchg
push
arpl
push
xchg
and
xor
lds
aad
movsl
repz
mov
inc
xchg
push
bound
push
xchg
and
xor
add
adc
jecxz
repz
imul
insb
stos
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
add
dec
sub
outsb
or
sub
push
push
or
fwait
mov
into
mov
fsubrs
sub
outsb
or
js
push
aam
into
test
cwtl
cmp
sahf
clc
scas
enter
sub
jbe
pop
js
push
fiadds
lcall
mov
dec
pop
xor
push
mov
xlat
stos
and
cwtl
add
ljmp
add
ret
push
flds
out
pop
add
jecxz
and
fldenv
fsubs
xor
sub
lods
fs
das
pavgw
ss
fdivrl
push
scas
popf
adc
clc
lret
fistl
imul
sahf
sbb
sbb
jns
js
mov
sbb
mov
ja
stos
fnstsw
mov
into
sbb
dec
js
xchg
cmpsl
ds
std
xor
xor
lods
xor
push
cwtl
mov
sbb
jge
mov
imul
add
mov
pop
pop
sahf
sbb
int
enter
sub
jns
push
js
push
mov
testl
sub
pop
or
pop
arpl
cmp
inc
cmp
testb
fistpl
lods
pop
jns
bound
sbb
sbb
imul
into
les
xchg
std
xchg
lods
scas
cmpsb
aaa
push
outsb
jl
adc
push
fidivrs
out
mov
fsubrs
sub
outsb
or
js
push
fidivrs
out
mov
fsubrs
cmp
xor
and
push
scas
stos
loope
ret
std
stc
shll
and
mov
pop
dec
add
push
mov
je
int3
adc
cmc
jmp
ficoms
fs
les
sti
lea
shl
cwtl
pop
jne
mov
inc
popf
iret
cmp
scas
jp
add
sub
add
adc
repnz
dec
fdivrl
in
jge
mov
call
jb
aas
push
lret
add
pop
push
stc
sub
fcoms
pushf
add
or
dec
cmpsb
xor
dec
jne
pop
js
enter
out
loope
lds
fxam
fcomi
xor
les
sbb
cmc
outsb
jno
outsb
push
push
xchg
xor
and
sub
adc
pop
nop
cmpsb
clc
test
cmp
loopne
mov
inc
xchg
fld
lods
push
mov
mov
pop
push
jo
sbb
fstpl
sub
and
add
and
fidivrl
adc
pop
inc
out
push
sbb
out
mov
sbbb
test
push
sub
fwait
xchg
cld
dec
xchg
xchg
sahf
stos
das
jno
cld
loope
outsb
pop
repnz
add
inc
lret
inc
xor
sbb
inc
xchg
jg
movsb
inc
adc
lret
add
mov
xchg
pop
mov
push
inc
mov
xchg
pop
mov
or
stc
ljmp
lods
cltd
pop
stos
lahf
sub
ret
out
fists
xor
xor
adc
ror
or
in
div
sub
inc
inc
movsl
sarl
cmp
les
adc
iret
push
in
pop
cltd
js
or
xchg
adc
dec
fstps
inc
fidivrs
enter
sub
mov
enter
adc
adc
jge
aaa
mov
push
test
das
mov
mov
inc
xor
int
xchg
add
shr
jecxz
dec
movsl
call
cs
nop
movsb
leave
adc
data16
loopne
xor
push
xchg
xchg
cmp
mov
std
xchg
daa
cltd
ss
adc
jb
push
ja
xor
xorl
jae
fidivrs
cmp
ret
int
dec
bnd
shlb
daa
popf
pop
push
fnstcw
in
jns
xlat
push
fmul
or
adc
aas
adc
pop
rcrl
push
outsl
out
loopne
xor
inc
ret
pop
std
xor
mov
adc
cld
push
xor
mov
lahf
inc
out
jo
lods
hlt
lahf
ljmp
adc
xor
cli
ror
sub
sub
sbb
cld
add
movsb
lcall
cmpsl
sub
push
fiaddl
adc
ljmp
mov
repz
add
jmp
or
inc
jge
ror
popa
pop
daa
repz
lret
rcrl
add
adc
fcomi
out
mov
lret
mov
lret
idiv
aam
pop
loope
inc
sub
xchg
and
call
adc
jge
popa
xor
dec
fnstenv
fsubs
mov
push
or
and
sahf
nop
mov
and
js
imul
addl
jge
scas
js
add
lods
andb
cmc
jbe
das
dec
or
xor
inc
lret
mov
in
les
or
mov
stos
fisubs
sub
cmc
aad
pop
mov
lret
icebp
mov
test
aad
push
std
stos
xlat
bound
mov
jg
stos
rorb
adc
ret
inc
cs
push
cld
mov
mov
mov
es
out
lret
pop
imul
sbb
or
lahf
js
loopne
loopne
sub
and
mov
mov
push
jge
jae
xchg
iret
mov
mov
int3
out
mov
jae
cmp
stos
and
xor
mov
sbbb
cmp
mov
rcl
arpl
push
test
add
fisubrl
leave
sbb
xchg
push
cmc
fisubrl
jl
and
dec
int
cld
je
loopne
rclb
cltd
pop
lods
lret
bound
je
pop
pushf
push
rorb
sbb
leave
adc
mov
nop
daa
cmp
xchg
xchg
pushf
adc
movsb
or
out
cs
cmpb
orl
scas
rcrb
ret
int3
push
scas
cltd
dec
mov
mov
icebp
std
pop
pop
sub
mov
pop
mov
and
inc
iret
mov
xchg
xor
test
mov
cmc
imul
and
mov
ret
data16
inc
mov
repnz
push
dec
ret
or
mov
test
fiadds
and
ret
test
outsb
in
mov
testb
andl
in
icebp
out
jmp
jne
sub
scas
adc
mov
mov
mov
dec
cld
loopne
sbb
jnp
xor
mov
cwtl
mov
push
bswap
mov
enter
in
loope
adc
cmp
dec
and
dec
lfs
inc
out
loope
test
shll
loop
inc
or
mov
or
jbe
jb
cmp
jle
push
add
outsl
scas
incb
test
add
stos
mov
xchg
negb
or
push
xor
xor
imul
out
das
fistps
sbb
xor
pop
pop
mov
idivl
pop
sbb
mov
mov
call
outsl
cmp
leave
cmp
jne
int3
jne
mov
push
lcall
out
insl
icebp
xchg
fdivrl
sbb
cmpl
lock
call
or
jg
mov
ret
inc
or
popf
pop
insl
dec
lds
lds
and
sbb
xchg
int
add
sbb
mov
push
shlb
je
jo
mov
adc
popf
scas
add
test
negb
and
sub
jno
xchg
cmp
cwtl
pushf
repnz
mov
jl
mov
daa
loope
cli
ret
xlat
mov
popa
inc
push
push
out
cs
jnp
loopne
outsl
inc
aaa
and
int3
mov
insb
fldt
mov
orl
icebp
mov
adc
loope
cmp
pop
insb
orl
dec
fwait
inc
frstor
lods
jns
inc
push
loopne
inc
nop
pop
out
xchg
mov
dec
xchg
or
sbb
add
xor
pop
fdivr
xchg
pop
lods
pop
inc
aad
scas
add
mov
leave
pop
cld
xor
ljmp
pop
out
dec
xchg
xchg
das
add
pop
jb
sahf
incb
inc
ret
push
sub
scas
mov
aam
out
jb
or
push
inc
pop
cmp
fwait
lods
lret
xchg
adc
lahf
ljmp
dec
push
fistps
mov
mov
popf
arpl
repz
add
dec
sbb
and
dec
inc
repz
and
adc
inc
adc
sub
xor
clc
stos
les
fnstsw
jmp
stc
xor
call
cld
mov
in
mov
aam
std
pop
sub
lea
ja
mov
xor
xor
call
add
loop
fs
enter
imul
hlt
mov
xchg
lods
and
or
pop
fcomps
mov
push
mov
mov
and
sar
out
int
sarb
fadd
enter
jbe
add
jge
and
mov
sbb
xchg
push
dec
mov
cmc
xchg
mov
lods
call
sbb
test
ja
lahf
mov
jecxz
cld
roll
cs
cmpl
je
cmp
jno
fldl
nop
cmp
loop
mov
into
pop
clc
add
insb
cltd
mov
call
enter
mov
sbb
mov
xchg
out
cmp
xorl
rcrb
inc
push
loope
icebp
push
jecxz
inc
in
sub
push
imul
aas
sahf
sbb
mov
clc
lret
cld
sub
mov
push
test
pop
lea
lea
xchg
in
mov
hlt
js
inc
fst
int
mov
hlt
add
fstps
mov
sbb
dec
mov
jb
mov
movups
mov
or
in
std
cmp
shlb
in
bound
repz
lret
popa
addr16
adc
dec
mov
repnz
test
popl
push
jo
adc
aad
icebp
pushf
sub
dec
xor
mov
rorb
pop
cli
loope
popf
insb
xchg
imul
test
fnstenv
daa
pusha
pop
pop
mov
repnz
das
or
xor
dec
hlt
and
mov
ret
mov
int3
out
xor
aas
pop
lahf
xchg
adc
notb
cwtl
sub
or
xchg
js
std
sub
sub
jo
pop
shrb
popa
bswap
movsb
pop
pusha
into
mov
in
sarl
cmp
jp
popf
shl
ja
shlb
loopne
idivb
dec
push
cwtl
push
sbb
mov
cs
adc
divb
and
push
mov
push
popa
push
or
jmp
lahf
sbb
das
js
push
cmp
xor
enter
gs
es
push
xchg
dec
inc
inc
out
rcrl
shr
sub
repnz
cwtl
adc
push
xchg
lahf
ljmp
dec
xchg
repnz
test
rorl
inc
push
cmp
mov
sbb
scas
pop
mov
sbb
in
sub
repnz
out
mov
xchg
mov
test
mov
jbe
add
pop
inc
push
out
or
jo
imul
push
mov
xchg
lret
pop
inc
jecxz
int
into
add
mov
popa
dec
rorb
hlt
nop
leave
ret
sti
pop
xchg
jne
lahf
add
sbb
test
jbe
pop
mov
sub
and
je
push
lock
popf
icebp
hlt
int
dec
ret
mov
das
loopne
push
mov
stos
popf
push
cmp
adc
arpl
jne
dec
xchg
push
daa
mov
xor
das
mov
cmpsb
xchg
nop
mulb
or
mov
cmp
pusha
mov
or
ja
cmp
insb
add
movsb
repnz
pop
push
or
sub
shlb
mov
sbb
icebp
mov
sbb
jns
add
imul
pop
in
lods
jecxz
inc
adc
sub
cld
xchg
adc
cmp
push
mov
cltd
pop
das
je
fstpt
sbb
lret
push
cmp
mov
mov
mov
add
mov
jno
xchg
sti
mov
mul
pop
adc
pop
insl
or
mov
fsubs
pop
jne
ja
ljmp
mov
sub
pop
jl
jo
les
dec
das
pusha
jae
jns
les
push
test
adc
inc
fildll
inc
faddp
insb
test
in
not
mov
cli
fadd
adc
mov
daa
enter
sub
cli
mov
xor
cmpsb
int3
xor
pop
imul
and
jmp
add
pop
jns
cmc
mov
test
mov
jnp
outsl
jmp
lret
mov
call
cmp
outsl
leave
stc
push
std
lock
and
jae
dec
in
push
test
adc
decb
inc
or
stos
lods
jne
mov
ret
inc
pop
and
hlt
sbb
jno
sub
sbb
xor
add
divl
push
xor
or
aam
cmp
xchg
mov
inc
mov
adc
mov
out
mov
xor
and
fdivp
movsb
fcmovu
test
in
cmc
xchg
out
sub
icebp
jge
or
xchg
fwait
sub
xor
repnz
adc
std
cli
cltd
mov
mov
push
xor
cmpsb
inc
push
mov
xor
sbb
push
mov
mov
addr16
add
inc
bound
sbb
dec
dec
js
imull
ret
adc
inc
jmp
sbb
dec
dec
xchg
push
ja
mov
out
sbb
outsl
and
insl
mov
int3
inc
addb
cmp
das
arpl
push
xor
xchg
mov
je
cmc
xchg
push
incl
push
mov
inc
pop
clc
jne
int3
cmpsl
in
inc
mov
fimuls
adc
xchg
inc
jg
imul
fldenv
lret
dec
lods
xchg
ret
jae
test
or
movsl
mov
xchg
mov
adc
push
repz
and
icebp
sti
cli
movsl
sub
xor
dec
mov
aam
mov
repz
and
cmp
sub
pop
xor
dec
or
les
mov
ret
push
jg
sbb
dec
xor
int3
imul
cli
into
or
mov
scas
stos
packssdw
mov
xchg
lds
leave
xor
int
dec
mov
inc
mov
mov
xchg
in
push
dec
dec
inc
data16
mov
aad
push
arpl
pop
mov
mov
ds
in
movb
mov
cmp
fwait
int3
js
mov
iret
and
movsb
lock
add
data16
out
lea
jns
add
cwtl
mov
pushf
adc
cmp
xchg
ret
and
lret
xor
cmp
lods
jae
clc
inc
dec
and
stos
cli
lds
leave
or
lcall
cmp
sub
rcrl
testb
insb
dec
cmpsl
push
jno
sub
adc
arpl
push
cli
or
adc
sub
aaa
dec
inc
into
mov
push
jecxz
mov
imul
mov
ret
ja
fdivrs
stc
add
lcall
push
sbb
cmp
xorb
adc
xor
xchg
daa
stc
jbe
aad
inc
scas
mov
sbb
cmp
hlt
xor
movsb
mov
daa
xor
lcall
aad
push
rol
adc
lds
and
clc
scas
cmpsb
pop
repz
out
out
mov
dec
pop
sarb
lods
xchg
cmpsb
mov
mov
pop
clc
mov
ret
mov
mov
std
sub
sub
mov
cld
mov
mov
add
and
test
pop
xor
jnp
and
mov
cmpsb
or
adc
dec
inc
mov
fs
insl
jo
and
pop
stc
xchg
add
and
pcmpgtd
cmpsb
dec
jns
inc
inc
cmp
cld
cmpl
sub
mov
stos
lods
sbb
movsb
in
adc
stos
hlt
jns
jle
je
in
mov
pop
jle
cmp
ds
and
cltd
gs
pop
or
je
cli
cs
jno
int
stos
outsb
fiadds
es
das
xchg
arpl
frstor
orl
fwait
aas
jp
sarl
pop
sar
sbbb
cltd
sub
jecxz
or
test
enter
push
sub
jo
xor
subl
aam
sub
in
sbb
les
bnd
xchg
cmp
jbe
mov
jg
pop
cmp
pop
and
cmp
daa
push
xor
cld
pop
adc
cmpb
das
mov
test
in
jmp
sbb
cmpl
add
cld
cmp
mov
test
cmp
mov
lret
lcall
mov
jae
pop
and
mov
mov
stc
insb
pop
cltd
jl
out
mov
pop
sub
push
dec
fsts
or
popl
cmp
jecxz
in
shll
ss
aam
sub
insl
in
jp
arpl
idiv
mov
mov
clc
and
push
cltd
push
push
xchg
sar
stos
add
pop
xchg
mov
fstl
lock
push
jbe
out
mov
add
stos
orb
dec
or
push
lods
mov
jp
xor
leave
push
mov
ret
jl
icebp
scas
inc
cmp
aam
mov
sti
in
stos
ret
das
xchg
jns
rcll
fdivrl
imul
popa
and
add
cld
daa
call
cmc
or
mov
testb
and
mov
cmpsb
aad
fstpl
sti
loopne
jno
xor
jb
out
inc
jl
addl
sub
pop
mov
adc
pop
mov
imul
dec
push
cmp
xchg
sbb
mov
lret
hlt
mov
pop
shrb
cmp
mov
aad
rep
les
movsb
dec
inc
add
or
mov
and
adc
ret
inc
xchg
inc
fwait
jne
mov
mov
lods
push
jae
addr16
aam
cmp
push
sbb
jae
mov
jl
xchg
test
jno
pop
repz
daa
mov
pop
mov
mov
inc
mov
aam
pop
icebp
xchg
push
and
inc
cld
enter
dec
xchg
cmp
les
mov
movsl
adc
xor
jmp
jg
adc
and
mov
mov
and
push
mov
dec
xor
icebp
cmp
in
pop
imul
sarb
dec
cwtl
inc
mov
cmp
outsl
cmp
notb
and
xor
jne
cwtl
and
mov
sbb
jo
fstpl
cltd
mov
and
inc
divb
dec
andb
mov
pop
pusha
pushf
ret
in
and
pop
mov
jg
mov
int3
dec
addr16
jge
imul
or
xchg
jl
sbb
pop
push
lahf
lcall
mov
repz
imul
jb
xchg
mov
fwait
push
comiss
subb
aad
inc
ljmp
enter
push
jne
cmp
sub
mov
arpl
popa
sbb
js
mov
adcb
test
in
ljmp
emms
dec
jae
jnp
push
ret
mov
les
sbb
jbe,pn
mov
jecxz
xor
sbb
in
stos
xchg
mov
mov
or
adc
outsb
cmc
loopne
xchg
dec
pop
fldl
rorl
xchg
mov
fwait
inc
mov
push
mov
sti
fsubrs
pop
and
xor
outsb
cmpb
fdivrl
js
bound
fistpll
sbb
and
test
shll
pop
mov
push
fcomps
sbb
xchg
adc
sbb
stos
jmp
mov
mov
lock
in
sub
jmp
cmpsb
sub
insl
ret
std
jecxz
dec
repnz
jmp
mov
negl
cs
enter
hlt
adc
cs
mov
push
jle
gs
dec
out
cs
popf
daa
sbb
xchg
scas
repnz
inc
mov
jmp
push
xchg
cmpsl
mov
dec
pop
dec
daa
es
addl
mov
mov
adc
out
cmp
cmc
out
sub
pop
stc
push
scas
insb
cmp
inc
or
stos
mov
test
mov
add
cmp
sbb
aas
mov
mov
testb
insl
xor
mov
notb
mov
sub
scas
cmpsb
mov
sbb
ds
jle
cmp
in
leave
xchg
pushf
je
xor
sbb
into
or
jmp
negb
dec
ja
adc
lret
jmp
xor
fs
test
pop
xor
mov
push
adc
pop
sbb
in
movsl
mov
or
lods
mov
divl
dec
xor
push
movl
push
cmp
arpl
aam
mov
dec
and
lods
les
jb
scas
rol
push
pop
adc
sub
dec
mov
mov
sbb
cmpsb
push
or
cmp
std
aam
out
sahf
pushl
cltd
sti
sub
bound
xor
xor
jge
push
pop
out
into
jbe
mov
jbe
sbb
test
in
xor
loopne
push
pop
mov
pop
enter
or
outsb
cmp
lahf
je
scas
unpckhps
scas
in
out
das
cwtl
mov
inc
mov
outsb
in
jecxz
and
or
bnd
mov
mov
imul
repnz
or
jnp
xchg
dec
into
adc
addr16
int3
mov
popl
push
mov
mov
mov
insb
push
pop
mov
jmp
push
cmp
sub
loope
fnclex
shlb
lret
sbb
outsl
sti
pop
clc
pop
xor
pop
ret
cmp
fbld
test
push
fstp
scas
xor
cmpsb
sbb
fistpll
dec
pop
inc
sub
call
mulb
mov
cld
std
cmp
test
cmc
xchg
sbb
and
pop
mov
cli
xor
cmp
lock
dec
push
sub
shll
aas
inc
in
mov
jecxz
xor
rclb
or
imul
add
sub
mov
stos
xchg
test
cli
daa
push
cmp
add
das
cmp
lods
sbb
xchg
sbbb
shrb
sbb
decl
pop
gs
and
pop
dec
dec
punpcklbw
clc
pusha
pop
jmp
repnz
sti
mov
mov
mov
sbb
push
adc
data16
int3
adc
add
aad
add
jecxz
mov
pushf
dec
lock
dec
pop
jmp
movsb
jg
das
shlb
in
das
xchg
pop
lods
fisttps
jle
jb
inc
sub
sub
sbb
pop
push
mov
mov
cmpsl
sahf
cmp
sbb
jp
mov
cltd
inc
cs
mov
sub
dec
nop
and
add
push
shl
ffree
sub
and
test
pop
inc
push
push
push
push
das
jmp
sti
lea
and
gs
xor
lods
dec
lcall
lds
xor
cltd
aad
popf
push
push
inc
sarl
test
in
std
mov
loopne
push
fcmovbe
pop
iret
sbb
add
cmp
mov
sub
addb
mov
je
in
mov
lahf
dec
lahf
scas
cltd
dec
xor
or
jae
ljmp
mov
jmp
call
sbb
push
js
push
fidivrs
out
mov
fsubrs
sub
outsb
or
js
push
fidivrs
out
mov
fsubrs
sub
outsb
or
js
push
fidivrs
out
mov
fcomps
sub
outsb
or
js
call
and
add
jmp
daa
push
aaa
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsb
pop
mov
xchg
xchg
aaa
sub
test
test
fdivl
mov
xchg
push
mov
cmpsl
data16
jbe
inc
out
mull
daa
xchg
aaa
out
testb
add
mov
xchg
push
cmpsl
push
mov
mov
aad
out
mull
aas
xchg
das
out
testb
insl
xchg
ret
sbb
stc
dec
shlb
inc
cli
push
das
jge
int
cs
inc
pop
stc
fimull
aas
xor
push
mov
pop
cmp
sbb
mulb
js
imul
cmpsl
ja
adc
fisttpl
negb
jecxz
insl
int3
cmpl
sub
xchg
push
int
dec
bound
outsb
and
push
mov
pop
mov
in
fcoms
inc
inc
adc
repnz
addr16
clc
pop
jl
cltd
sti
ss
lds
arpl
pop
adcb
fsubrs
mov
outsl
xchg
pop
into
jnp
push
xor
mov
jb
clc
dec
arpl
sbb
repnz
data16
daa
jno
std
stc
pop
ds
ss
sti
aaa
add
icebp
push
mov
xchg
xchg
aaa
out
notb
addr16
outsb
xchg
popl
mov
jbe
inc
std
push
mul
pop
ret
inc
call
inc
test
mov
call
outsb
shlb
jbe
and
outsb
sarl
push
cli
pop
out
mov
mov
repz
push
mov
mov
xlat
sub
mov
jmp
je
push
addr16
ja
xchg
xchg
push
cmpsl
push
mov
jbe
inc
out
mull
daa
xchg
aaa
out
notb
addr16
ja
xchg
xchg
push
cmpsl
push
mov
jbe
inc
out
mull
mov
push
mov
dec
out
decl
jp
bound
mov
pop
lods
sub
fidivl
gs
addr16
xchg
xchg
fucomi
inc
dec
mov
fdivr
add
loop,pn
inc
cmp
adc
adc
cmpsb
cmp
cmp
lds
inc
or
loope
scas
push
jecxz
mov
xlat
bound
aaa
cmp
icebp
pop
jecxz
add
sbb
push
cmp
aas
push
ss
in
daa
mov
adc
int
jg
pop
lods
cmc
icebp
les
sbb
jecxz
adc
push
test
fucomi
stc
sub
jg
sbb
jle
push
xchg
gs
popa
fsubr
push
xchg
mov
cmp
sub
pop
adc
loopne
sub
in
ss
xchg
jl,pt
lock
or
cmp
leave
mov
mov
xor
mov
jo
jo
inc
jecxz
jle
jmp
roll
or
mov
insb
and
pop
das
addr16
jbe
movsl
loop
pop
fwait
inc
imul
cmp
test
loopne
sahf
pop
push
insb
xor
push
icebp
xchg
push
gs
push
lods
mov
mov
jl
add
fld
dec
imul
jecxz
stos
ret
fisttps
adc
and
inc
popa
pusha
or
push
xchg
cmp
inc
sbb
mov
sub
xor
mov
and
xor
xor
jp
push
sub
icebp
aaa
inc
ror
pop
add
or
jmp
dec
push
sub
and
movsl
sti
adc
test
adcl
pop
mov
inc
sbb
popf
cs
pop
and
sti
outsl
jb
xchg
pop
in
cmp
jge
xlat
das
daa
mov
sahf
mov
decb
cmp
cwtl
cwtl
xor
addr16
test
push
adc
mov
popf
in
lods
orl
add
mov
push
divb
das
mov
js
fmuls
clc
paddb
cmp
xchg
pop
xchg
sub
orl
xor
xor
or
mov
negl
sbb
outsb
daa
daa
push
inc
xor
call
call
push
xor
mov
mov
imul
fcomps
dec
pop
into
psraw
pop
sahf
pushf
or
icebp
in
mov
iret
xchg
loopne
call
cli
xchg
cli
pushf
inc
xchg
xchg
xchg
push
jg
into
adc
sub
stos
in
sub
scas
cwtl
or
loope
sti
dec
stos
adc
sbb
sti
sbb
push
xchg
push
bound
orb
adc
repz
sbbl
jns
loope
js
xor
inc
pop
adc
into
out
rcrb
jae
xchg
mov
lret
xor
jmp
aad
mov
outsb
cmpsb
dec
ljmp
nop
cmp
jno
sbb
pop
aad
inc
pop
bound
mov
aaa
iret
mov
sub
test
mov
subl
outsb
mov
in
movsl
push
imul
std
cmpsb
fisubl
cwtl
les
inc
lahf
test
push
or
stos
arpl
push
inc
cmpsb
xchg
mov
fisttpl
mov
js
xor
dec
mov
adc
inc
jno
sbb
aas
stos
cmp
jo
into
mov
sbb
and
nop
cmp
sbb
jno
movsl
cltd
insl
imul
icebp
mov
sbb
jae
mov
aam
sub
popf
adc
adc
dec
pop
sti
hlt
add
mov
mov
add
dec
fucomp
loopne
mov
mov
movb
xor
daa
cld
pop
rcr
cmp
ficoml
sbb
push
sub
loope
jg
daa
or
sub
mov
dec
add
dec
imul
push
int
jb
mov
mov
mov
mov
out
pop
lods
ljmp
sbb
in
sub
aas
and
enter
in
stc
add
lahf
dec
aad
adc
sub
mov
cltd
push
imul
in
dec
pushl
fnstcw
cmp
sub
frstor
ret
imul
ja
jns
xlat
bound
das
ret
nop
mov
dec
xchg
iret
xor
dec
mov
mov
das
xchg
repnz
and
cmc
sbb
je
sub
hlt
insb
arpl
jns
mov
push
fwait
mov
mov
in
or
adc
xor
pusha
xor
ss
movsb
orl
repz
sub
push
mov
paddq
popf
inc
mov
add
out
inc
xor
lock
push
push
mov
mov
je
sub
jg
sub
xlat
repz
leave
ljmp
sub
jge
popf
insb
xchg
cmc
ret
es
pop
popa
mov
fldlg2
stos
push
cmp
andb
cltd
jne
inc
cmp
sarb
inc
jp
sbb
pusha
xchg
int3
mov
enter
lret
fiaddl
adc
arpl
rcrb
cmp
mov
lret
nop
std
xchg
insl
out
in
jle
stos
pop
vmovapd
jecxz
mov
int
pop
fbstp
sbb
ficoms
dec
and
vpsrldq
inc
outsl
push
in
test
mov
and
and
lds
xchg
add
stc
out
fsub
lds
notl
pusha
lret
push
push
or
and
outsl
aas
xchg
push
orl
push
mov
ret
add
inc
dec
jmp
es
inc
jno
add
out
add
jne
xchg
xchg
lcall
xchg
xor
jb
add
mov
sub
lods
imul
push
lcall
mov
movsl
sbb
daa
dec
je
subb
int3
jg
sub
repnz
insb
pop
test
loope
cvtps2pi
mov
and
pusha
popa
mov
sbb
inc
xchg
inc
push
inc
add
jne
add
repz
add
ljmp
lock
mov
pop
pop
mov
adc
in
and
sub
lret
mov
sbb
pop
and
mov
orl
fsubl
shll
lds
lret
ss
add
sub
dec
push
mov
xchg
pop
inc
out
js
pop
push
jns
insb
dec
movsb
mov
ljmp
and
data16
ss
stos
lret
lcall
inc
sub
sbb
ror
movsb
push
or
fisttpll
add
mov
push
lods
or
cmp
xlat
dec
adc
sarl
push
cmp
ljmp
dec
fsubr
lcall
out
loope
or
lods
jecxz
repnz
js
sbb
mov
xlat
ret
or
stos
dec
dec
push
aaa
loop
decb
and
mov
imul
int3
ljmp
ds
fidivs
mov
sub
xchg
loope
xor
mov
inc
sub
sbb
xchg
roll
mov
sbb
sub
xchg
mov
push
cmp
pop
ljmp
cmc
stos
jne
sbb
add
dec
xchg
in
push
jnp
loopne
pop
cmpsl
into
or
sbb
subl
jnp
int
push
sub
in
in
jne
mov
in
rolb
icebp
fimull
adc
add
mov
xchg
push
pushf
inc
nop
push
jae
stc
or
int
stos
jl
add
add
cmp
xchg
ss
mov
fs
roll
xor
jl
ljmp
insb
pop
cmc
mov
outsb
aad
push
js
lcall
mov
mov
psrad
ja
mov
inc
orb
data16
push
push
dec
xchg
xor
negb
xor
test
xor
hlt
adc
sub
mov
insl
sbb
mov
mov
ret
mov
jle
lcall
subb
mov
jo
xchg
mov
and
mov
xchg
cmp
cmpsb
mov
mov
ret
ss
lods
sbb
mov
push
cmp
adcb
in
pop
and
push
pop
ss
mov
dec
jae
arpl
and
movsb
pop
sbb
test
in
xchg
mov
pushf
push
push
addr16
movsl
pop
in
or
stos
dec
jp
mov
xchg
sahf
add
inc
mov
int
stos
xor
adc
xlat
ja
cmp
imul
push
mov
push
jne
decl
and
mov
out
test
xchg
pusha
push
xchg
jno
in
fmuls
movsl
sti
xchg
mov
adc
and
xor
inc
ljmp
icebp
mov
outsb
jmp
adc
adc
or
enter
jg
mov
mov
shl
daa
daa
pusha
mov
or
out
or
dec
mov
test
shl
gs
mov
ljmp
fisubrl
mov
aaa
and
inc
push
mov
insl
leave
push
mov
jmp
jp
jl,pt
std
cmovae
sbb
mov
hlt
mov
inc
popf
adcb
fucomp
mov
cmpsl
push
and
xchg
test
xor
sbb
mov
into
mov
xchg
repz
pusha
pop
psubb
pop
mov
add
pushf
pop
mov
xor
pop
mov
mov
xlat
sub
add
mov
clc
repz
mov
adc
ljmp
fistl
cmp
pop
dec
cmc
jb
push
mov
negb
js
int3
pop
push
sub
orl
or
push
mov
fwait
imul
and
mov
rolb
inc
sti
add
mov
test
aam
xchg
adc
mov
jp
push
aaa
in
aas
repz
push
xchg
push
pop
sub
inc
test
in
loop
jecxz
add
pushl
leave
in
jmp
pop
cwtl
push
and
xchg
lcall
nop
fmul
or
xchg
push
sub
mull
mulb
mov
clc
jmp
push
in
dec
sub
add
hlt
ret
in
clc
loopne
test
inc
push
pop
sub
jg
leave
sub
xchg
xor
push
out
push
add
inc
pop
scas
pop
cmp
insb
dec
mov
int3
fmul
mov
aaa
xor
scas
aas
xorb
fdivs
fisubrs
pop
lea
outsl
push
xchg
jnp
imul
lret
fsubl
push
mov
jb
jecxz
fwait
xchg
add
test
or
icebp
shlb
mov
daa
lret
jecxz
mov
xchg
pop
cmpsl
mov
movsl
in
out
adc
xor
addr16
or
cmp
adc
leave
test
gs
push
cli
pop
int
cmp
rorb
inc
stos
jbe
xor
cmp
dec
stc
lret
mov
push
in
or
sub
add
cmpsb
push
mov
iret
into
bound
inc
xlat
data16
and
mov
nop
pop
cmp
sbbb
cmp
and
inc
cli
sub
rcrl
fidivrl
xchg
mov
fs
ljmp
insl
jmp
push
mov
cld
inc
out
pop
sub
xchg
xlat
dec
or
int
cmp
cmpsl
lret
inc
pop
test
sbb
sbb
les
loopne
loop
test
push
push
enter
lods
adc
int3
sbb
fmuls
push
mov
or
push
dec
cmp
arpl
sbb
pop
stos
in
loope
jbe
movl
insb
in
mov
cmc
loope
bound
sbb
cmp
clc
mov
std
test
xchg
pop
push
popa
notl
mov
pop
sub
mov
mov
push
lock
pushf
lret
xchg
or
jo
mov
push
fs
sarl
mov
push
leave
mov
or
cmp
or
aas
jno
adcl
sub
dec
add
les
mov
ret
scas
add
or
pop
int
insb
jl
fadds
mov
jmp
dec
leave
mov
inc
xlat
pop
movsl
adc
mov
dec
xor
add
and
shll
fnsave
xchg
jnp
ds
mov
in
cs
jb
test
lret
or
cld
loopne
mov
cs
sub
test
or
xchg
pop
jnp
inc
lret
sub
in
jl
cmpsb
mov
jmp
push
lea
sbb
xchg
ljmp
cltd
lods
hlt
and
mov
xor
insl
jbe
shr
mov
xchg
push
mov
flds
jl
xor
xlat
and
push
pusha
mov
ret
add
dec
mov
adc
lcall
inc
cmp
std
insb
call
and
pop
stc
cmp
rclb
aaa
cmp
sub
lcall
ficomps
add
into
repz
mov
jge
dec
push
in
xchg
push
shrl
sarl
xchg
or
scas
pop
cli
ja
ljmp
outsl
inc
push
bound
cli
lods
push
frstor
and
push
add
imul
jge
add
les
jbe
cli
pop
daa
xor
dec
push
jmp
cmp
jg
pop
jecxz
ds
sub
inc
shll
push
data16
jne
int3
xor
out
push
mov
repz
push
adc
mov
pusha
pop
mov
jae
cmp
mov
inc
cmp
sbb
lcall
dec
sbb
inc
in
sub
or
dec
jge
and
mov
test
fs
jge
repz
shll
mov
nop
dec
insl
das
ds
dec
mov
jne
stos
lock
or
in
fs
push
daa
bound
scas
cmp
test
popa
push
xor
or
or
and
sahf
adc
lcall
cmpsl
or
decl
aaa
cmp
jge
out
lahf
lahf
xchg
out
jmp
filds
add
gs
xor
or
pop
lret
xchg
mov
flds
icebp
ret
mov
nop
fstpt
xor
inc
adc
in
int3
mov
repz
push
addr16
mov
popa
push
out
js
cmc
inc
lcall
push
in
inc
or
outsl
or
pop
pop
fcmovnbe
lods
pop
and
sarl
fwait
leave
sub
push
pop
imul
fisubrs
mov
cmp
sti
loope
xor
mov
or
sbb
mov
repz
in
lods
and
or
lock
or
scas
insl
je
cmpsb
nop
and
mov
dec
add
mov
dec
rclb
cmp
jmp
push
insl
fildl
mov
mov
cltd
adc
stos
shlb
gs
adc
out
jp
aaa
dec
pushf
in
daa
jge
jae
dec
setle
sbb
push
mov
push
mov
enter
xchg
jp
mov
lock
das
das
lret
stos
add
xor
sub
sbb
das
fldl
loop
out
cmp
pop
mov
or
or
imul
mov
popf
inc
add
adc
mov
stc
mov
inc
lret
inc
data16
add
popf
repnz
jp
pop
mov
xor
mov
loop
bound
adc
mov
out
sarb
cmp
mov
xor
mov
adc
sub
xchg
lahf
add
add
xchg
outsl
or
sahf
and
mov
add
adc
dec
loopne,pn
je
cmp
jae
pop
fsubr
out
xchg
popa
jno
je
or
gs
inc
ss
jo
mov
hlt
sub
je
push
jl
cs
cli
sub
inc
movsb
or
mov
aas
test
mov
cmp
call
mov
sbb
mov
pop
outsb
in
dec
mov
shll
clc
xchg
das
cwtl
aad
xlat
mov
inc
mov
pushf
cmp
andl
mov
out
xchg
jae
adcb
jmp
out
and
bound
push
test
jmp
das
je
sbb
fadd
loope
push
sub
jle
push
insb
out
icebp
jge
fnstenv
pop
pop
jo
mov
in
add
mov
xlat
leave
jne
xchg
jmp
pop
imul
pop
test
inc
xor
stc
pop
scas
push
outsb
adc
lds
int
loope
insb
lahf
pop
xlat
mov
in
or
push
inc
fcmovnb
cwtl
andb
pop
mov
aas
js
sbb
mov
cmp
mov
xor
into
divl
loopne
and
sub
mov
mov
cmp
cmc
sub
in
rcrl
mov
mov
jmp
lcall
iret
xchg
pusha
adc
movsb
push
fistps
jbe
ss
lods
sbb
outsl
or
jb
jmp
test
push
outsb
in
pusha
addr16
das
jno
call
and
or
ret
sbb
inc
xor
jge
rorb
andl
push
or
cmp
mov
je
fcompl
xchg
shl
inc
mov
add
out
inc
fdivrp
jo
or
mov
addr16
je
mov
dec
pop
adc
loope
jle
jae
int3
jg
movsl
mov
adcb
cmp
push
add
call
push
aad
mov
mov
and
cmp
cld
add
roll
clc
mov
jp
dec
movsl
pop
mov
lock
mov
inc
mov
xchg
add
cltd
dec
lds
jns
jne
cwtl
xor
adc
lret
scas
je
cmp
mov
sbb
mov
movsl
gs
test
ds
mov
pop
jl
push
sub
cmp
in
call
out
test
mov
ljmp
pop
xor
lods
ljmp
dec
xchg
add
mov
add
dec
fildll
sbb
dec
push
rcll
cmp
loopne
pop
mov
dec
jecxz
div
push
dec
rolb
stos
dec
mov
pop
test
out
sti
xor
jle
xlat
pop
in
ds
outsb
out
lahf
mov
push
lret
sub
into
mov
or
push
push
stc
jle
fdivrl
push
jae
lock
js
fstpt
mov
out
sub
fisubrs
mov
mov
inc
imull
sbb
test
pop
sbb
fabs
int3
jge
lock
sub
lds
movsl
xchg
scas
mov
jle
js
jle
leave
mov
inc
sti
in
mov
hlt
jae
jnp
inc
sub
push
cmp
jp
dec
mov
or
add
sub
xor
add
jge
fdivrs
into
inc
pushl
out
cmp
fidivs
lcall
out
test
dec
nop
xchg
push
leave
insb
mov
inc
test
mov
cs
int
sbb
dec
dec
xor
ret
shrb
push
scas
ljmp
dec
test
nop
insb
jo
pop
aaa
jbe
mov
inc
pop
dec
xchg
sti
int3
outsl
ja
mov
pop
xor
loope
mov
sub
es
xchg
xchg
scas
push
jne
testb
into
in
pop
mov
inc
adc
std
das
test
push
add
mull
addr16
fstpl
jo
xor
adc
sahf
jbe
call
jg
sub
loopne
cmp
js
arpl
jno
cmp
iret
dec
js
cmp
jbe
ljmp
push
and
mov
dec
jle
js
fs
xchg
pop
cmp
ffreep
mov
mov
lret
inc
add
daa
mov
xchg
sbb
adc
ja
sbb
sbb
lods
xchg
leave
xchg
fdivl
inc
std
lods
cli
push
push
loope
ljmp
pop
gs
mov
push
xchg
adc
add
loop
daa
aam
das
sub
shlb
adc
push
add
xchg
jle
fs
xor
aad
shll
xor
or
jmp
inc
xchg
or
pushf
mov
sub
in
dec
mov
fldt
push
or
push
and
int
dec
pop
pop
out
fdivs
mov
repnz
push
xor
pop
leave
enter
out
imull
push
mov
inc
por
cmp
mov
cmpsl
pop
testl
ja
in
mov
outsl
mov
inc
hlt
jge
imul
xchg
mov
jnp
mov
enter
push
mov
rcll
push
push
dec
add
mov
test
fcmove
jnp
inc
push
lret
push
mov
test
mov
mov
faddl
lock
movsb
mull
lds
stos
pusha
es
lock
lods
fcmove
mov
addr16
pop
mov
popa
add
push
test
jbe
adc
stc
je
out
int
shl
sub
clc
test
mov
xchg
or
inc
pop
inc
lret
sbb
mov
lret
xchg
dec
mov
mov
push
xchg
xor
shlb
insb
mov
sahf
inc
fcmovb
in
push
sbb
xchg
test
fsubrl
inc
daa
xchg
fisubrs
ljmp
shrl
mov
out
sub
mov
xor
dec
mov
daa
lods
cwtl
mov
daa
mov
mov
jmpw
das
nop
mov
cwtl
or
popa
ret
push
das
push
cmp
cmc
add
insl
arpl
popf
pop
cmp
pop
repz
arpl
inc
subb
xor
mov
mov
cmp
sub
popf
sub
into
in
mov
adc
fs
aad
dec
nop
ficompl
fstpt
icebp
mov
jle
stos
push
pop
mov
xchg
stc
lret
push
xor
mov
or
fdivrl
jnp
mov
mov
ja
clc
popf
popf
cmp
jecxz
aas
add
pop
insl
ss
div
popf
imul
xchg
call
enter
lcall
aas
ror
xchg
cmp
mov
mov
lock
nop
or
mov
mov
pop
xchg
xchg
aaa
out
notb
addr16
ja
xchg
xchg
push
cmpsl
push
mov
jbe
inc
out
mull
daa
xchg
aaa
out
notb
addr16
ja
xchg
xchg
push
cmpsl
push
mov
jbe
inc
out
mull
daa
xchg
aaa
inc
notb
addr16
ja
xchg
xchg
push
cmpsl
push
mov
jbe
inc
jecxz
repz
add
aaa
out
notb
addr16
mov
xchg
cmp
push
dec
push
test
cwtl
es
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
add
add
add
adc
add
or
add
add
add
cld
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
add
add
add
pop
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
add
pushf
add
add
add
mov
add
movl
sbb
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
add
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
daa
add
andb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
add
in
daa
add
in
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
sub
add
sub
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
sub
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
