mov
inc
add
or
add
or
add
or
add
pop
add
add
or
add
or
add
or
add
add
add
pop
push
add
add
add
mov
call
or
add
rolb
jg
lock
punpcklbw
push
add
add
or
ljmp
add
add
gs
rolb
add
add
pop
or
std
add
add
push
loopne
fiadds
and
cmp
xor
movl
mov
add
add
add
add
pop
add
add
add
push
add
add
add
adc
roll
add
push
add
add
add
add
or
add
add
add
add
add
mov
add
add
add
loopne
roll
mov
pop
or
add
and
cltd
or
add
add
lock
push
add
add
add
add
add
pusha
add
or
add
add
add
add
add
or
add
nop
add
or
nop
add
or
add
add
rolb
seto
roll
add
add
add
jno
add
adc
add
mov
add
add
adc
push
mov
add
push
xor
dec
or
add
pusha
add
pop
nop
add
or
push
add
add
addb
or
lcall
add
nop
add
add
add
add
add
add
add
push
xor
test
inc
add
and
or
aam
lock
add
add
or
add
addb
add
dec
add
add
push
mov
xlat
or
add
push
mov
add
add
add
push
pusha
add
add
add
or
add
seto
mov
nop
add
inc
add
add
add
jo
sub
push
add
loopne
mov
jo
xor
jo
inc
add
pusha
add
add
sbbl
movw
xor
call
test
jne
ret
push
push
mov
pusha
call
mov
push
xorl
addl
push
call
cmpl
jne
call
ret
jmp
xor
mov
shl
mov
shl
mov
cmp
jne
call
popa
pusha
call
mov
push
xorl
addl
push
call
push
xorl
addl
push
xorl
addl
push
push
call
add
or
je
ret
popa
call
push
xorl
addl
push
call
push
push
dec
add
dec
ror
mov
add
xchg
mov
shl
push
xor
push
call
push
mov
push
jmp
pop
mov
push
push
push
mov
mov
rep
pop
pop
push
push
xor
dec
mov
xor
pop
push
push
add
shl
mov
xor
pop
xor
jmp
sub
mov
sub
sub
mov
sub
or
jne
add
jmp
mov
shr
shl
mov
xor
jmp
sub
mov
xor
cmp
jne
mov
add
cmpw
jne
ret
push
xor
pushl
pop
lea
or
mov
mov
lods
mov
pop
ret
push
mov
add
push
push
push
push
push
mov
mov
add
pushl
mov
add
add
mov
add
xor
lea
mov
add
mov
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
xorl
addl
pushl
call
call
pop
pop
pop
pop
pop
leave
ret
call
cmp
cmovg
test
mov
inc
adc
sbb
adc
daa
mov
imul
push
sub
sti
dec
aad
leave
xchg
xchg
dec
or
faddp
sub
stos
cmp
mov
or
push
cmp
push
xor
adc
mov
fisubs
addr16
loope
jnp
dec
mov
int3
leave
bound
loopne
lods
inc
rcr
and
nop
jnp
imul
pusha
jp
dec
cmp
pop
insl
mov
xchg
fstpl
aaa
fucomi
adc
xchg
push
cmc
mov
push
mov
movsl
mov
push
mov
popa
xchg
adc
aaa
push
mov
mov
fidivrl
lea
in
bound
mov
and
mov
push
jecxz
cmpsb
pop
cld
pushf
int3
push
rcll
aaa
push
ret
mov
rcll
out
lahf
jle
xchg
pop
dec
xor
mov
loop
add
jmp
loop
lods
xchg
mov
ret
xor
in
xor
in
bound
rcll
scas
jg
xchg
lcall
fcoml
xor
jl
lock
xor
mov
inc
push
mov
mov
jge
in
pop
sbb
lret
jge
cltd
cmp
sub
adc
pop
stc
xor
ret
ret
cmp
mov
or
adc
mov
je
sub
and
addl
bound
leave
stos
and
subl
jecxz
mov
sub
inc
xor
cli
cmp
or
inc
cmp
push
mov
sub
mov
sbb
mov
ja
fistpll
cltd
loope
push
test
xor
mov
adc
ds
or
push
adc
ficomps
mov
into
ja
push
inc
int3
call
sbb
push
pushf
daa
stc
stos
lret
add
jp
and
or
lods
jns
movsb
xor
sahf
addr16
mov
pop
lds
mov
ret
stc
sahf
lock
push
xchg
mov
push
adc
ds
leave
adc
push
in
pop
fldt
sbb
xor
les
imul
mov
or
rcr
add
dec
or
negl
insl
insl
xor
lods
out
push
sub
rcll
mov
and
mov
mov
loop
cltd
loope
dec
jmp
ret
cwtl
aam
cmpb
sbb
lock
push
lret
lcall
cmp
inc
retw
xor
xchg
clc
dec
xor
test
loop
add
hlt
ss
into
aaa
les
and
xchg
adc
fs
pop
xor
ljmp
and
pop
jne
stos
xor
test
and
loopne
testl
into
adc
mov
lods
inc
arpl
add
gs
in
cmp
cmp
dec
cld
clc
lret
sti
test
pop
xchg
rcrl
push
daa
pop
movsl
push
out
fsts
cmp
and
les
enter
bound
leave
adc
sub
lcall
data16
mov
imul
sarl
inc
fcomps
hlt
xor
jecxz
adc
xchg
out
aaa
and
lods
xchg
mov
popa
push
xor
push
cmp
insl
xor
lods
fcmovu
addl
mov
jle
adc
pop
hlt
cmp
sub
xchg
lcall
leave
fcoml
imul
fldl
addr16
jl
adc
pop
icebp
cmp
sub
popa
cmp
add
cltd
loope
mov
call
cmp
int3
ret
imul
cmc
in
bound
dec
adc
push
push
sbb
in
out
pop
outsb
ret
aaa
imul
mov
pop
rolb
jmp
frstor
mov
out
jmp
ret
fisttps
cmp
and
xchg
add
stc
cmp
pop
jae
je
arpl
cwtl
mov
std
xchg
repz
lret
fnstcw
sbb
imul
or
out
adc
fldt
push
negl
cld
mov
dec
jns
rcr
and
dec
mov
or
cwtl
xor
fsubl
lods
aaa
push
pop
xor
mov
shr
jns
fimuls
insb
lahf
sbb
lahf
mov
xchg
int3
std
push
xor
mov
mov
ficoml
cli
pop
sub
adc
adc
mov
mov
push
mov
movsb
or
push
cmp
lods
adc
call
cmp
scas
push
or
inc
pop
aaa
push
fs
cmovg
sbbb
or
push
dec
xchg
mov
test
adc
mov
and
mov
notl
pop
test
jo
inc
repz
inc
imul
cli
rclb
mov
fidivrs
movsl
adc
inc
cltd
loope
lods
cmpsl
jnp
add
sub
int3
aad
les
ret
loope
mov
sub
inc
xchg
dec
fcomps
hlt
fs
and
mov
lods
inc
sbb
jg
fnsave
push
push
pop
loop
pop
inc
cltd
dec
addr16
jg
cli
or
mov
sbb
sub
dec
push
fdivl
mov
lods
jnp
jae
test
loope
push
mov
xor
adc
mov
fnsave
out
das
xchg
sarl
sti
out
test
or
les
test
gs
pop
xchg
lcall
repnz
cltd
loope
cmp
jg
cwtl
stos
aaa
push
push
pusha
jb
lcall
fistps
out
push
pop
dec
push
jbe
mov
stos
push
mov
lods
subl
lock
cmp
scas
test
repnz
cmp
lock
or
and
pop
push
xor
mov
mov
add
mov
jo
push
cmp
lret
shll
or
leave
out
popa
or
inc
adcl
cmp
arpl
push
ret
mov
loopne
popa
and
cwtd
mov
mov
int3
les
push
in
pop
stos
add
cmpsl
xchg
fnstcw
in
bound
push
add
and
inc
xchg
push
lods
sbb
xor
pop
lods
pop
cld
sahf
int3
outsl
mov
aam
fistpll
mov
loopne
insb
sub
aaa
pop
les
mov
cs
mov
pop
pop
or
push
jecxz
xor
or
testb
xchg
xor
ret
loopne
repnz
xchg
out
cmp
and
loope
pop
orb
les
sbb
clc
inc
mov
push
mov
test
inc
pop
or
insl
mov
mov
mov
jp
lea
adcb
mov
and
adc
xchg
icebp
cmp
xor
xchg
outsl
or
imul
jg
daa
shrl
shlb
or
lods
adc
and
loopne
aas
adc
fwait
les
aaa
stos
push
or
xchg
sti
jno
sti
loop
xor
xchg
push
out
loope
fstsw
aaa
inc
les
in
or
pop
or
movswl
loop
jnp
xchg
sub
cld
clc
lds
dec
aad
pushf
dec
daa
adc
pop
inc
adcl
add
push
stos
bound
adc
add
in
data16
int3
ret
cmp
mov
std
adc
pop
hlt
cmp
mov
bound
push
mov
lret
pop
rolb
into
fiaddl
cmp
dec
ret
pop
pop
mov
outsl
inc
adc
outsb
xor
lret
push
fcmovu
orl
mov
ficoml
in
repnz
cmp
ss
jl
mov
inc
inc
testb
out
ss
sbb
mov
push
mov
data16
fs
sbb
mov
push
mov
fnsave
push
mov
data16
dec
cmp
stos
bound
inc
in
lds
pop
insl
mov
pop
sub
add
cltd
jg
scas
lods
and
and
in
es
xchg
lahf
cmp
out
cld
mov
fcomps
clc
bound
push
addr16
inc
jmp
data16
jge
and
jle
clc
imul
int3
shrb
cmp
inc
pop
test
les
cmp
loopne
imul
sbb
sbb
ds
loope
and
and
dec
repz
outsb
repnz
push
leave
sub
pminsw
stos
idivl
imul
in
data16
lret
push
fcmovu
xor
mov
cmp
cmp
jmp
xor
push
dec
push
push
pop
frstor
or
push
add
add
lret
xor
push
loop
shll
xor
test
stc
fcmovb
push
bound
ja
lcall
leave
data16
scas
aas
sub
lret
ds
popa
stc
es
mov
lahf
loope
loope
mov
and
cmp
sbbl
int3
mov
gs
sbb
mov
gs
push
jmp
loope
adc
mov
and
sahf
in
push
xor
test
bsr
xchg
aam
lret
inc
sbb
lret
cmp
mov
inc
std
les
int3
insl
iret
push
gs
scas
cwtl
enter
or
data16
fnstcw
out
bound
jae
arpl
mov
sarl
sub
jl
lods
push
jnp
xor
mov
les
scas
idivl
jp
fcomps
clc
fs
jmp
ficoms
leave
lret
adc
cmp
mov
mov
push
in
dec
cmpsl
es
push
in
sbb
adc
ret
ret
cmp
inc
push
push
into
outsb
sbbb
pop
push
cmc
loop
je
ljmp
rolb
inc
adc
xorb
mov
addr16
mov
dec
sub
fldenv
lret
push
ret
adc
repnz
addr16
bound
lcall
gs
daa
out
scas
cwtl
outsl
hlt
xor
lcall
xchg
xchg
cld
rep
lea
cmp
cmpsl
jl
adc
scas
loopne
xor
imul
scas
hlt
add
dec
sbb
push
cld
jmp
xor
data16
lea
jb
aam
aam
les
shll
clc
rcrb
mov
pop
adc
mov
sub
push
call
insl
les
inc
fbld
xor
int
cmp
cmp
mov
stos
cltd
push
cmp
dec
stos
sub
xchg
mov
loop
xor
cwtl
repnz
and
lret
es
lcall
incl
cmp
pop
mov
mov
push
rorl
loopne
xor
insl
pop
pop
mov
jge
or
jae
outsb
fs
mov
aam
push
lock
cwtl
int
mov
xchg
mov
arpl
sahf
inc
push
mov
sub
call
cmp
gs
or
int
in
pop
adc
or
xlat
imulb
xor
or
loopne
dec
sub
adc
mov
lods
jp
or
hlt
jg
sbb
mov
inc
iret
push
in
adc
push
cmp
sarb
lcall
cld
fwait
dec
sub
dec
mov
cwtl
xlat
pop
lods
das
in
sbb
hlt
call
or
loopne
shlb
sarb
ljmp
pop
push
and
xchg
aaa
dec
sub
adc
xchg
ljmp
lods
xchg
mov
in
xchg
dec
push
les
push
test
jg
arpl
hlt
test
std
xchg
divb
or
pop
fisubl
shll
es
aaa
int3
xor
arpl
loope
lock
xlat
fisttpll
dec
stos
or
fisubrs
mov
mov
xor
xchg
in
leave
push
in
adc
mov
jp
scas
test
cli
xchg
cmp
mov
lcall
cmp
loope
aaa
inc
or
push
mov
adc
jecxz
clc
int3
fstps
gs
cmpl
rcr
clc
insb
xor
inc
repz
cltd
loope
adc
adc
repnz
mov
icebp
mov
mov
dec
cmc
adc
dec
add
ja
adc
fcmove
insl
notb
les
and
idivl
lds
les
bound
shll
push
xor
mov
test
cli
outsl
loopne
iret
hlt
scas
dec
sbbb
sub
pop
sbb
adc
shrb
int
inc
lods
sbb
add
pop
add
sbb
enterw
inc
cltd
loope
movsb
lds
mov
ret
loopew
adc
test
dec
xchg
stos
out
or
psraw
stc
lcall
xchg
ljmp
loope
or
gs
xchg
cmp
dec
and
jno
adc
in
jmp
das
add
in
popa
mov
insb
mov
test
cli
xchg
ja
into
cmp
jp
lcall
nop
pop
mov
aad
mov
call
arpl
fs
cmp
scas
test
cli
jbe
call
loope
or
aaa
pop
cltd
loope
aaa
andb
or
arpl
pop
xchg
sub
idivl
mov
and
leave
inc
ret
fstps
and
fiadds
popf
xchg
mov
inc
adc
xor
push
insl
xlat
add
sub
push
jo
dec
xor
push
sbb
pop
imul
arpl
int3
iret
mov
and
mov
or
lret
lret
xchg
ret
sub
xchg
hlt
xor
and
pop
cltd
repz
adc
xchg
push
cltd
xorl
mov
mov
cmp
xor
xor
xchg
cmp
or
xor
shrl
cmpsl
and
ror
push
fnstcw
add
mov
or
arpl
xor
dec
std
cwtl
clc
bound
imul
mov
sbb
addr16
out
sti
add
test
push
out
ss
adc
push
fisttpl
cmpsb
sub
sbb
or
mov
cmp
push
lods
pop
cmpsb
push
push
icebp
adc
fcmove
or
xor
push
mov
pop
shll
xor
push
ds
mov
fnstenv
jne
inc
leave
jne
fnstcw
rep
cmp
rolb
push
fcmovu
cmp
xor
pop
movsl
and
adc
inc
sbb
cmp
xchg
and
push
push
jns
loop
push
mov
repz
mov
xor
movsb
sbb
movsb
xchg
lea
add
int3
daa
clc
mov
lods
jge
notb
bound
adc
out
fidivs
add
cmp
stos
sub
pop
cmp
sbb
sarb
test
into
aaa
clc
push
push
in
cmp
ss
outsl
test
lods
fmul
adc
xchg
push
sub
mov
xchg
mov
lods
jle
mov
jecxz
fdivs
add
loop
cmp
push
arpl
adc
std
cwtl
clc
xor
or
data16
in
adc
ret
adc
xchg
icebp
xor
cmp
cmp
stc
mov
arpl
out
cmp
fistps
outsl
cld
inc
or
push
mov
or
add
add
dec
mov
lods
add
cmc
icebp
lret
aas
add
insb
pop
test
hlt
xchg
arpl
andl
or
cmp
dec
jmp
adc
lea
aad
and
ds
out
jmp
ljmp
mov
nop
jmp
cld
std
inc
imul
mov
cmp
push
hlt
sti
repz
mov
xor
es
lea
pop
mov
ficoml
pop
jns
test
scas
cmp
push
pop
test
sbb
fwait
and
pop
push
or
int3
repz
mov
mov
push
js
loope
ret
and
stos
mov
and
movsb
inc
sbb
sub
pop
movsb
or
fsts
dec
push
pop
test
sbb
adcl
shrl
arpl
imul
mov
push
mov
jns
data16
les
xchg
xchg
mov
adc
jno
sbb
pop
loopne
scas
dec
pop
xchg
pop
jne
pop
mov
clc
adc
jge
jge
scas
test
xor
push
mov
cld
pop
lcall
movups
cld
xor
add
lea
xlat
xor
push
aaa
pop
scas
pop
mov
jp
loopne
xor
stos
insl
das
adc
add
je
adc
lock
or
popf
xor
lret
imul
mov
cmpsl
adc
pop
repnz
es
adc
push
mov
mov
mov
mov
leave
mov
adc
test
scas
and
hlt
shlb
pop
pop
in
inc
mov
xor
add
dec
and
lock
in
add
lret
push
ja
loopne
jo
add
call
add
repz
mov
cmc
sti
in
xchg
test
push
xchg
sbbl
mov
cwtl
enter
bound
push
dec
out
jge
mov
xchg
add
int3
call
ljmp
fstps
les
dec
mov
push
dec
mov
ficompl
adc
lock
lods
stos
cmp
push
push
leave
mov
adc
dec
leave
adc
cmp
cld
fildl
lods
adc
mov
pop
std
pop
lcall
xchg
lahf
loop
xor
mov
mov
inc
cmc
gs
sbb
mov
add
fidivrs
cltd
loope
shlb
lock
test
cmp
scas
mov
arpl
mov
repnz
pushf
shl
mov
rolb
loope
adc
test
jl
ds
sbb
mov
push
cmp
int
cmp
out
std
stos
not
or
push
cli
fstpl
adc
addl
aad
cmp
out
add
pop
xchg
pushf
cltd
mov
xor
sar
loope
xor
jnp
lods
push
dec
jmp
adc
and
mov
mov
loop
xchg
cltd
inc
test
stos
push
shl
mov
cmp
pop
xchg
adc
xchg
mov
outsl
ljmp
mov
aam
jmp
movsb
adc
adc
adc
xor
xor
xor
popa
dec
xchg
sbb
clc
leave
dec
add
adc
loop
or
cmp
bound
rcll
scas
ror
shll
mov
and
or
inc
mov
test
sbb
int3
loope
repz
outsl
bound
jge
mov
push
or
cmc
sub
sbb
dec
in
push
push
pop
rcrb
xor
push
test
cmp
xor
leave
lret
cmp
mov
jmp
les
int3
insl
add
and
ljmp
jb
sub
dec
loopne
insb
das
mov
fstpt
inc
cltd
loope
mov
imul
dec
xchg
xchg
les
fcoml
punpckhwd
mov
or
arpl
lds
std
xchg
repnz
aad
xchg
shrl
lret
adc
cmp
pop
mov
and
aas
push
out
cli
mov
call
xor
jp
adcb
xchg
sbb
push
loope
xchg
sub
cltd
loope
insb
pop
std
mov
xchg
mov
test
cli
outsb
loopne
mov
int
or
or
mov
or
xchg
ret
cwtl
in
mov
pop
test
icebp
test
fs
xlat
lods
sub
mov
cmc
shrb
sti
dec
notb
hlt
fcmovb
xchg
insb
pop
push
cmp
test
orl
imul
dec
cmp
xor
arpl
push
test
cmp
add
jmp
sahf
add
stos
cs
pop
lahf
pop
and
mov
in
xor
xchg
and
mov
rorb
loope
adc
icebp
sbb
das
gs
in
adc
rcrw
sub
stos
test
cli
bound
mov
lcall
ds
inc
icebp
fnstcw
cltd
loope
in
lods
cmp
ror
imul
rorb
adc
mov
and
aas
mov
pop
push
test
mov
mov
push
push
dec
push
mov
push
lods
not
leave
mov
mov
pop
sbb
dec
inc
ljmp
and
clc
or
bound
and
notb
cmp
sub
lods
pop
shrl
shl
and
clc
data16
xchg
aam
cltd
fs
leave
adc
cmp
loope
lock
faddl
sti
fistl
loope
cmp
loope
imul
jl
pop
daa
leave
enter
xlat
cmc
push
fwait
lods
and
and
push
ljmp
cli
inc
loopne
push
jle
xor
jbe
leave
outsb
loope
adc
repz
ljmp
and
cld
sahf
int3
outsl
test
aam
and
adc
movsl
insb
xor
pminsw
aad
xchg
xlat
dec
xor
mov
loop
add
sbb
data16
int3
pop
xor
fcmovu
xor
mov
lret
pop
hlt
cmp
loope
fs
fdivl
mov
nop
movsl
mov
inc
ficoml
cmp
cmp
xor
and
xchg
shll
xor
xchg
cli
insb
lods
fsts
xchg
mov
push
xchg
cld
cld
xchg
or
adc
xchg
mov
out
mov
jae
cld
loop
test
es
subl
repz
jns
jbe
inc
cmp
push
mov
test
lds
cmp
shlb
mov
pop
cmp
xor
arpl
mov
and
lods
add
sti
push
cltd
loope
push
scas
popa
pop
aaa
insl
or
fnstcw
cltd
xchg
cmc
mov
movaps
inc
rcr
and
inc
dec
or
icebp
xor
out
repnz
sbb
dec
push
lcall
in
cmp
cmpsb
bound
cmp
add
cs
roll
cltd
lcall
adc
pop
aaa
add
mov
das
movsl
cli
out
sub
or
loopne
xchg
inc
popf
push
ficompl
push
cmpsl
fdivl
mov
push
push
sub
cltd
ss
or
dec
pop
cs
idivl
imulb
adc
cltd
scas
pop
int
mov
lret
ss
mov
lods
xor
cmp
rcr
stos
cmpsl
pop
dec
sbb
imulb
inc
pop
or
cmp
dec
sbb
rorl
lock
stos
dec
pop
xlat
cmp
dec
push
loope
sbb
loopew
adc
test
cltd
cmp
lods
sar
xlat
adc
push
dec
mov
out
in
and
push
jb
xchg
mov
mov
hlt
enter
ljmp
xlat
hlt
pop
dec
push
and
jl
aas
ljmp
les
and
xor
les
in
data16
aas
mov
aaa
add
out
xchg
test
aam
insb
ljmp
test
push
les
xor
sub
jl
xor
inc
mov
pop
pop
mov
push
das
pop
mov
sbb
push
ret
stos
rol
arpl
lds
jae
es
and
xchg
fidivrl
and
cmp
pop
idivb
fildll
xor
cmp
sbb
leave
adc
cmp
inc
xchg
int3
shrl
cmp
inc
aam
and
shlb
sbb
loop
mov
test
cli
xchg
mov
or
fwait
or
loope
lock
cmp
mov
xchg
mov
mov
sbb
and
ljmp
push
add
add
pop
pop
fmuls
pusha
push
or
push
cld
cmp
jle
std
pop
push
sub
imul
test
and
push
mov
push
stos
outsl
les
cli
lea
mov
lret
rcll
add
pop
xor
xchg
ret
xchg
lahf
cmp
fimull
lds
fwait
test
xor
movsb
inc
cmp
jp
jp
sbb
mov
clc
fnstcw
cltd
loope
jl
lds
add
aam
cmovg
add
inc
test
xchg
nop
push
sub
daa
mov
mov
mov
pop
adc
mov
enter
pop
mov
repnz
into
gs
push
lcall
ret
lock
es
pop
mov
test
mov
xchg
aas
es
mov
ret
scas
mov
jp
stos
xor
xchg
and
clc
jp
test
mov
lret
cmp
insl
aas
xor
or
or
rcll
adc
les
int3
outsl
jp
mov
test
xchg
les
pushf
mov
dec
bound
xor
sub
jl
data16
test
sub
js
xor
outsl
adc
xchg
mov
jmp
xor
popa
sti
pop
mov
sbb
rcr
arpl
push
test
imul
movsb
mov
in
cmp
adc
arpl
push
addr16
inc
lock
roll
mov
add
outsl
cmp
pslld
and
rcrb
punpckhbw
negl
cmp
or
lcall
or
cmc
xor
fcoml
les
repnz
inc
repz
fs
adc
mov
roll
inc
and
jg
bound
pop
loope
inc
fbld
xlat
pop
lods
xor
sarb
gs
outsb
loopne
mov
adc
das
cmp
cld
push
and
test
or
pop
cmp
inc
shr
mov
sbb
jne
mov
push
mov
test
fidivl
inc
xor
adc
mov
arpl
lcall
leavew
cmc
lcall
push
loope
push
dec
subb
repnz
xchg
pop
pop
mov
adc
mov
mov
mov
push
mov
sahf
jge
stos
add
imul
in
das
lods
mov
sub
out
sub
in
shlb
push
cmp
and
test
les
mov
fsubrs
ret
or
adc
push
hlt
sti
add
cmc
rorb
adc
shll
mov
mov
add
lds
into
sub
push
rcrl
inc
or
mov
ljmp
enter
sbb
push
mov
xor
push
fisttpll
loope
insb
pop
sbb
adc
cli
jo
call
pop
fwait
sbb
fistpll
ret
mov
addr16
aad
stc
push
lahf
lcall
dec
push
xorl
les
and
aas
or
sbbb
lods
test
shrl
pop
push
int
xor
and
ja
adcl
icebp
bound
rcll
scas
xchg
xchg
mov
mov
scas
adc
imul
xlat
jbe
xor
shrl
in
pop
pushf
jnp
fsubp
ret
popa
push
insl
pop
jnp
cmpsl
fstps
lcall
inc
aad
add
jnp
adc
arpl
mov
sub
std
xchg
repnz
in
les
fnsave
mov
sub
pop
test
xchg
push
mov
fnstcw
nop
movsl
loopew
nop
call
loope
ljmp
iret
clc
fnstsw
cltd
loope
add
mov
mov
push
gs
lods
adc
aas
stos
and
xchg
sarb
stc
push
push
shlb
mov
fsubrs
pop
int3
scas
loop
push
jo
loope
shll
stos
je
inc
mov
cmp
push
dec
in
loopne
push
fwait
ja
hlt
xchg
dec
push
sbb
cmp
out
outsl
sub
out
lahf
push
xor
loopne
bound
loop
add
cltd
loope
pusha
adc
push
cmp
xor
bound
push
or
mov
ret
xchg
int3
xlat
fdivl
lods
cmp
sub
cmc
push
dec
adc
xor
or
cli
fs
in
lret
into
xchg
adcl
call
push
dec
or
lcall
mov
fsubr
incb
aas
sub
pop
insl
mov
xchg
fstpl
aaa
fucomi
pop
xchg
ror
push
or
leave
leave
adc
cmp
push
push
xlat
mov
ljmp
pop
cmc
jmp
sub
scas
pop
adc
xchg
cwtl
push
ja
cmp
mov
bound
leave
outsl
loope
adc
push
sahf
jo
jg
xchg
pushf
aas
test
pop
shl
xchg
push
mov
fnstcw
ljmp
lods
xchg
mov
es
push
xor
data16
and
cltd
loope
xor
in
dec
jmp
adc
adc
in
cli
pop
pop
and
cmp
in
cmpsl
outsb
mov
xchg
popf
cmp
mov
cltd
popa
mov
jp
adc
adcb
stos
sbbl
or
xchg
icebp
insb
in
pop
adc
jb
fnsave
jmp
fnstcw
jmp
dec
loope
lods
les
jb
pop
fsubrl
cmp
push
cmpsb
mov
fldl
pop
dec
insb
or
mov
sub
push
js
cmpsb
adc
loope
add
int
push
outsl
xor
sbb
das
push
out
out
mov
test
cli
pop
mov
xchg
jb
adc
lods
sbbl
xor
rorb
test
bound
addb
ficomps
sub
mov
ljmp
cli
xchg
inc
shll
or
ret
inc
stos
jo
jbe
cmp
sbb
lods
and
loope
xchg
idivb
or
cmp
jg
call
aas
lcall
jne
pop
xchg
insb
clc
push
out
bound
icebp
pop
and
cld
in
xchg
test
fldt
mov
add
test
sub
jle
inc
mov
les
adc
stos
lods
es
mov
push
int
pop
lahf
int3
insl
in
sbb
fucom
dec
ds
lods
fnstcw
cltd
adc
xor
or
dec
jmp
adc
stos
clc
roll
stos
cmp
out
mov
sub
lods
adc
cmp
outsl
cs
movsl
stc
fdivrl
cltd
loope
int3
aam
les
daa
push
xchg
sahf
cmp
mov
mov
lods
xchg
out
push
push
or
bswap
loope
and
bound
and
popa
or
cld
pop
ja
ret
leave
jns
fs
out
pop
push
dec
or
sub
pop
cmpsl
frstor
in
shll
push
mov
mov
test
cli
mov
stos
mov
or
push
sub
inc
adc
and
into
dec
call
xchg
cmpsb
inc
mov
fwait
sti
fimuls
shl
mov
les
fsts
loop
roll
data16
mov
lods
adc
jmp
push
pop
adc
cwtl
icebp
xor
fs
imull
shlb
mov
cld
inc
add
dec
les
or
mov
xchg
push
and
jo
or
push
or
test
or
pop
dec
push
sbb
test
aaa
call
fwait
sub
mov
pop
cld
fmul
lock
jmp
dec
adc
mov
and
adc
das
psubb
fnstcw
data16
dec
xor
stos
aas
mov
push
sar
cli
out
mov
xchg
stos
adc
ja
pop
dec
adc
loopne
xor
jge
imul
lock
xchg
cwtl
push
pop
cmp
nop
push
enter
rcll
icebp
and
jns
lods
pop
aad
push
int3
mov
and
scas
push
loopne
jo
cmp
aaa
dec
les
mov
dec
loope
add
push
fists
shr
and
mov
cld
clc
fiaddl
subl
bound
mov
adc
cmp
outsl
push
bound
adc
das
das
mov
out
hlt
leave
sub
rcll
mov
xchg
mov
test
cli
jp
call
sbb
xchg
popf
cmp
adc
push
pop
cld
lock
mov
inc
push
push
mov
mov
push
notl
pop
dec
inc
out
clc
cs
jnp
out
xor
adc
into
cmp
andl
mov
div
ss
pusha
pop
xor
aas
lods
stos
adc
cmp
cld
andl
cmp
mov
loopne
insb
cmp
or
xor
test
adc
add
pop
out
ss
into
inc
sub
fcmovu
xor
mov
push
adc
xor
pop
mov
rcll
loope
lock
sub
sbb
push
sbb
insb
push
xor
sbb
push
fcmovu
adc
mov
xor
cmp
out
adc
mov
mov
cltd
loope
rclb
rcl
int3
shrb
cmp
xor
cmp
adc
mov
push
pop
int3
ljmp
in
cmovg
adc
lods
dec
cmpsb
orl
rorb
cltd
pop
push
sti
sub
movsb
in
ja
pop
xlat
test
dec
xchg
pushf
iret
mov
xor
subl
popf
hlt
icebp
aam
xor
or
iret
inc
and
fcmovu
xor
mov
cli
adc
lods
lock
cmp
idivb
mov
mov
push
adc
inc
std
xchg
mul
fdiv
rolb
xor
adc
mov
or
std
xchg
repnz
xor
or
lahf
loopne
dec
in
adc
jmp
lods
adc
push
cltd
gs
lods
adc
les
ss
add
lret
rcll
into
movsb
int3
jl
lods
push
and
js
test
aas
add
pop
fimull
push
xor
fnstcw
cltd
loope
lods
cmp
jae
stos
and
xchg
xchg
mov
in
mov
dec
jae
out
cltd
push
rorl
leave
rcll
push
push
or
add
cmpl
es
jnp
addl
adc
jb
nop
pop
xchg
mov
test
cli
js
call
test
xchg
fstpl
aaa
fucomi
adc
lcall
xchg
and
movsb
cmp
mov
stos
aaa
fistl
lods
cmpsb
xchg
ficompl
add
int3
jecxz
push
or
mov
dec
inc
adc
and
pop
iret
loopne
xor
out
shl
mov
stc
adc
jge
fwait
xchg
loopne
cmc
rolb
xor
cwtl
sarl
cld
ljmp
rcr
and
insl
js
adc
fcomps
repz
in
rolb
fsubrl
cmp
sub
loope
xor
xor
popf
add
lods
and
and
fbstp
mov
les
sar
add
ss
xchg
mov
or
pop
xchg
cld
movsb
popa
or
cmc
std
dec
and
dec
nop
test
jle
notl
sub
mov
mov
lods
jle
testl
jecxz
xchg
push
mov
insb
scas
stc
push
fs
loope
xor
jl
xchg
push
arpl
cmp
pop
mov
sbb
xchg
repnz
cmp
shlb
fldl
xchg
xchg
bound
inc
call
cli
lret
bound
push
addr16
inc
out
bound
rol
and
xor
fadds
lods
and
push
jns
ja
mov
out
add
cltd
mov
cmp
divb
xor
push
xor
cmp
jmp
or
scas
pop
cli
mov
adc
ss
neg
scas
xchg
insl
lret
es
and
sbb
add
lcall
call
inc
in
jo
pop
ja
test
push
das
add
clc
push
mov
roll
mov
xchg
mov
push
or
clc
add
adc
movsb
out
inc
dec
push
test
xchg
or
test
dec
daa
daa
or
stos
dec
in
push
es
add
in
xor
pop
out
xor
jae
movsl
xor
out
adc
inc
mov
push
jb
adcb
dec
imul
dec
std
pop
std
xchg
xor
push
js
out
loope
data16
test
ror
repnz
lahf
int
test
aas
je
jecxz
or
fcomps
adc
rcll
jge
addr16
xchg
test
popf
jl
inc
stos
xchg
fbld
lods
adc
retw
es
and
outsl
in
dec
sub
push
fcmovne
in
xchg
adc
mov
outsb
cmp
ficomps
xlat
repnz
sub
mov
cld
or
cmpsb
push
push
inc
or
lods
fs
adc
in
pop
xor
mov
ss
jmp
cwtl
incl
scas
fstps
cmpsb
into
mov
int3
fldt
stos
pushf
leave
dec
dec
cld
adc
orl
push
dec
rorl
bound
adc
mov
dec
push
aad
jmp
jmp
data16
cld
jmp
test
fcoml
dec
xchg
pcmpgtb
jp
shl
sub
fnstsw
cltd
loopne
jmp
cs
pop
leave
lret
adc
cmp
popf
pop
and
inc
push
loop
xchg
mov
in
aas
or
dec
inc
stos
mov
cmp
jnp
or
mov
xorps
std
xchg
idivl
iret
fld
adc
mov
lcall
pop
mov
mov
sbb
mov
lcall
pop
mov
jno
mov
jb
sbb
mov
fidivs
pop
ds
loope
int
mov
inc
repz
imul
test
std
and
repz
out
data16
fcomp
mov
aas
mov
push
ror
loope
adc
ret
fwait
pop
lcall
divl
add
ss
fadd
mov
adc
cmp
push
mov
test
call
and
ret
shl
les
or
imul
in
loopne
or
push
fdivrs
fs
push
and
aad
mov
pusha
shrl
imul
addb
loopne
jae
sbb
xchg
push
fdivl
lock
roll
cbtw
mov
int
lods
pop
in
into
fwait
mov
mov
mov
subl
sbb
repz
mov
ret
xor
fldcw
in
mov
aaa
cmp
addr16
imul
xor
jno
xchg
jbe
jg
iret
scas
mov
mov
icebp
stos
xor
mov
addb
jl
lds
repnz
push
or
push
repz
cld
ljmp
mov
cs
or
push
into
fwait
out
insb
pop
aaa
lcall
arpl
mov
rclb
push
push
sahf
mov
add
bound
or
xchg
adc
push
mov
cmp
dec
and
jnp
mov
push
lock
cmp
es
es
ds
jecxz
mov
dec
outsb
loope
ret
popf
lods
ds
jecxz
stc
and
decb
stc
push
lock
jnp
cmp
loopne
xor
pushl
repz
xchg
and
jp
cmpsl
jno
xchg
cwtl
ret
dec
sbb
adc
les
repnz
addb
inc
addl
add
dec
mov
test
xor
lret
cmp
cmp
cld
dec
pop
adcb
loop
loope
shrl
pop
bound
stos
popa
ss
inc
mov
and
in
nop
pop
pop
and
mov
mov
mov
inc
and
arpl
ss
and
lods
xchg
mov
test
push
xchg
clc
aas
mov
cmp
jb
sub
popa
mov
roll
jge
movsl
les
xchg
es
dec
mov
movsl
loopne
roll
push
test
xlat
mov
xchg
mov
or
push
or
and
fwait
inc
cltd
ss
push
or
xchg
sahf
scas
loope
mov
in
xor
xchg
out
insb
push
xor
cltd
jb
cmc
dec
out
adc
inc
jno
ja
fsubrs
inc
add
push
fbld
push
out
int
pop
xchg
loope
cmp
pushf
push
inc
pushf
pusha
mov
les
adc
xchg
popa
int
cmp
sbb
loopne
sbbl
push
outsb
add
sbb
insb
scas
adc
push
add
xchg
test
cli
popa
repz
xchg
lods
push
call
sbb
fnstsw
out
insb
push
cmp
shl
aam
rcr
and
mov
push
inc
mov
hlt
inc
scas
dec
jmp
adc
ja
das
adc
and
cmp
scas
jp
test
and
loope
mov
in
pop
ja
loopne
cmp
bound
push
dec
int3
out
out
adcb
cmp
fcomps
mov
lahf
mov
mov
jecxz
cmp
std
out
mov
dec
les
xchg
or
adc
fcmove
mov
jecxz
or
cltd
mov
adc
test
jne
imul
ss
push
or
xchg
jno
xor
xchg
and
outsl
lret
fnstcw
out
ss
or
mov
push
sbb
mov
or
fcomps
stc
rclb
mov
mov
leave
jo
rcll
enter
ss
sti
ljmp
shl
and
mov
fcomps
repnz
lods
in
adc
xor
rol
scas
sbb
dec
mov
sub
fdivrl
lods
inc
icebp
jne
vcmpps
je
fistps
push
xor
inc
hlt
shll
decl
cmp
stos
pop
dec
ljmp
push
dec
or
lcall
lock
xchg
imull
sub
jecxz
cmp
xor
arpl
mov
push
cmp
pushf
lds
xchg
repnz
xor
mov
call
add
xchg
xor
ret
fcmovu
sub
mov
fcoms
or
xor
lret
push
fcmovu
orl
mov
cmpsl
adc
pop
repnz
in
fldenv
enter
lock
push
jmp
add
pop
int3
loopne
sbb
xlat
cmp
cwtl
lods
sub
push
movsl
pop
lods
addb
mov
insb
sarb
and
adc
lret
xchg
lcall
fwait
jo
cmp
leave
pusha
shll
adc
jg
in
adc
sbb
cmpb
sbb
icebp
sub
outsb
push
lock
sahf
dec
dec
int3
rcrw
push
xor
mov
lret
rcll
das
outsb
iret
jae
mov
int3
outsb
aad
test
lcall
push
in
inc
push
addr16
cwtl
and
ja
inc
or
xor
dec
out
adc
cmp
cld
fnstsw
mov
adc
cmp
dec
cmp
add
lds
fnstcw
sbb
ja
test
fnstcw
f2xm1
ljmp
pushf
pop
xchg
in
xor
lods
lods
mov
inc
jecxz
add
pushf
fsubrs
loope
adc
sbb
add
jbe
shrb
out
dec
out
fsubrs
ljmp
test
and
jg
add
inc
mov
xchg
jno
mov
pop
jp
stos
adc
xchg
mov
sub
mov
mov
addb
xor
mov
daa
push
adc
xlat
arpl
add
aad
add
lcall
sub
shl
push
test
lock
ret
repz
xchg
shll
icebp
xchg
leave
lret
cmp
xor
dec
repz
outsb
mov
add
mov
push
pushf
mov
movsb
imul
lcall
movsb
push
fcmovu
and
mov
or
adc
pop
pop
nop
cltd
loope
fwait
loop
fnstcw
sbbb
loope
bound
lcall
addr16
or
cmp
or
loope
and
xchg
out
inc
xor
les
fistl
inc
or
sub
les
or
mov
cmp
adc
pusha
and
jecxz
xchg
ljmp
loope
fwait
add
fnstcw
cmpb
repz
mov
fisubs
ror
lods
push
cmp
fmull
jae
loope
pusha
pop
xor
sbb
cmp
in
lods
test
mov
pop
pop
nop
xor
inc
shl
and
xor
addr16
sbb
fwait
imul
push
pop
push
mov
test
cli
xchg
sub
les
std
mov
loope
movsb
adc
test
xchg
out
ja
adcl
stos
xchg
test
les
nop
subl
gs
and
rorl
icebp
shrb
pop
xchg
pop
test
ss
div
push
xor
adc
mov
pushf
insb
mov
in
dec
xor
test
movsb
loop
add
cltd
loope
fs
adc
dec
int3
repz
push
cmc
rorb
adc
lahf
push
test
sbb
sti
jo
pop
mov
insb
inc
lods
push
rcll
pop
mov
jno
fidivrl
and
pushf
push
push
outsb
aas
sub
push
pop
cmpsb
sahf
pusha
sub
xor
mov
cmpsb
stc
fistpll
cltd
loope
lahf
cmp
push
and
cwtl
sub
test
sub
or
data16
sti
repnz
test
pop
xchg
inc
test
stc
sbb
ljmp
or
sbb
xor
into
cmovg
adc
push
cld
std
xchg
jge
xor
jmp
insb
adc
idivb
and
jl
or
fwait
loopne
push
cvtps2pd
pop
jbe
lods
mov
mov
out
insb
jo
push
ret
or
mov
icebp
push
lret
rcll
pop
pushf
push
dec
int3
shrb
cmp
jns
xchg
les
sub
cmpsl
outsb
cmp
rcll
scas
cwtl
int
sbb
stos
scas
xor
js
dec
push
adc
cmpb
mov
js
dec
rolb
pop
dec
inc
mov
std
jb
roll
lds
push
test
sbb
cltd
ss
decb
sub
sub
mov
in
xor
xchg
out
insb
push
cmp
cmp
testb
adc
cld
enter
shrb
cmp
inc
fcomp
and
jmp
loopne
jo
nop
lock
dec
xor
rcrl
mov
jo
nop
int3
mov
ja
lock
outsl
loope
adc
sahf
push
jl
push
lods
xor
cli
mov
mov
int3
insl
ret
inc
cmp
loope
cmp
in
sbb
dec
jecxz
roll
insw
lock
icebp
ja
int3
jl
lods
sbb
cld
push
rcrl
int3
push
cmpsb
dec
fcomps
hlt
insb
in
adc
cltd
leave
adc
cmp
push
inc
pop
pop
xchg
sub
mov
lcall
fs
ljmp
add
arpl
cmpsl
ret
cmp
outsl
xor
xchg
icebp
dec
xor
mov
loop
add
mov
adc
or
pop
sub
aas
pop
cmp
and
xchg
repz
aad
mov
fwait
push
pushf
xchg
repz
xor
mov
jecxz
add
in
bound
imul
and
mov
pop
test
ror
outsl
aam
insl
gs
lods
adc
mov
sbb
int3
xchg
decb
add
or
fistl
cld
add
insl
int
cmpsb
mov
repz
inc
out
sbbb
cmp
es
adc
stos
loope
out
sub
leave
fisubrs
mov
mov
leave
insl
loope
adc
xchg
lcall
push
push
pop
aas
or
pop
stc
popf
int3
imul
cmp
adc
cmp
add
jmp
jae
popf
loope
loope
sti
icebp
xchg
test
or
xor
loop
sbb
outsb
xchg
xlat
inc
andl
adc
or
push
idiv
or
sub
scas
clc
cmc
inc
mov
cmp
imul
mov
xchg
jl
adc
add
in
cwtl
neg
lds
repz
dec
cmp
dec
sbb
orb
pushf
mov
fsubr
les
loopew
adc
test
popl
imul
unpcklps
xlat
jmp
push
outsl
fdecstp
cmp
ja
add
test
and
bound
mov
pop
dec
inc
shrl
rorb
lock
pop
fisubl
rcrl
cmp
data16
cld
out
xchg
test
and
push
fisttps
movsb
ret
sti
fstp
inc
push
icebp
loopne
insb
or
out
adc
push
or
ljmp
push
and
scas
xchg
mov
pop
mov
imul
or
push
cli
push
cwtl
jae
test
push
sbb
cmp
ret
or
or
mov
mov
jmp
mov
cmp
arpl
sub
adc
lods
mov
test
outsl
dec
xchg
test
jg
sbb
push
jge
push
inc
pop
cmpsb
test
fists
cmc
fcmove
xor
repnz
cmp
jecxz
cld
in
stc
cmp
ret
loope
xor
lret
imul
mov
mov
cmp
lret
dec
cltd
loope
ss
into
push
cmp
fcmovu
and
mov
push
adc
ret
mov
xor
fnsave
test
lds
in
push
hlt
sbb
faddl
sti
filds
clc
mov
xchg
sbb
xor
jmp
test
and
loop
or
push
loope
jno
cmp
in
sbb
or
mov
in
mov
cmp
pop
sub
cmp
fcomip
lds
lds
and
jnp
ss
inc
jb
cmp
adc
mov
add
int
call
inc
mov
call
push
sti
add
sti
repz
into
push
push
mov
aam
cmp
dec
and
xor
push
mov
scas
icebp
fildll
pop
test
out
sbb
scas
insb
fs
mov
xchg
aad
add
adc
cmp
pop
dec
pop
insl
cld
out
xchg
test
jb
cli
jne
mov
popa
xchg
loopne
outsl
cmp
lcall
push
mov
popa
pusha
cld
push
adc
addr16
adc
andb
testb
stc
addr16
cli
mov
pop
aad
mov
mov
cld
push
fdiv
sbb
divl
shll
adc
or
sbb
test
cmp
mov
or
fbstp
xor
push
pxor
popa
xor
push
and
adc
andl
aam
je
push
lret
sbb
xlat
xchg
out
loopne
aaa
inc
or
mov
rcll
jno
add
lock
pop
aaa
and
fldenv
les
xchg
popf
cmp
mov
sbb
xor
pop
loopne
cli
idivl
dec
and
mov
test
mov
mov
push
stos
and
jb
lret
pop
dec
sub
in
mov
mov
fisttps
aas
cltd
loope
mov
int
and
ds
jecxz
sbbl
pop
mov
jg
lds
in
pushf
mov
pop
movsl
icebp
bound
jecxz
add
lock
dec
xor
shll
add
icebp
xor
sbb
xchg
cltd
sbb
out
loop
xor
xchg
out
xor
aaa
inc
or
out
inc
dec
in
adc
lea
out
inc
ja
ljmp
rclb
pop
clc
insb
lods
jmp
mov
xchg
mov
push
movsl
cld
add
sub
stc
push
loopew
jns
nop
ja
pop
add
mov
fidivs
les
loopne
mov
push
push
xlat
pushf
cwtl
xchg
popf
push
pop
lods
inc
cmp
fcom
xor
mov
push
aaa
test
or
cs
data16
add
fwait
sub
fs
jb
push
les
int3
outsb
pushf
pop
lock
addr16
ljmp
sub
arpl
mov
aad
sbb
imul
ja
jmp
inc
test
aad
testl
mov
xor
leave
loope
push
fcmovu
sbb
xor
pop
sub
adc
pop
icebp
cmp
cmc
or
mov
jo
arpl
adc
add
mov
lcall
cli
or
push
test
mov
aas
stos
sub
dec
push
fildll
scas
andb
scas
mov
cs
mov
ss
xor
fdiv
fistps
inc
iret
scas
xchg
cltd
fst
rclb
xlat
aaa
jecxz
pop
pop
pusha
and
pop
cli
add
xlat
clc
lods
cs
adc
xor
or
add
imul
testl
test
scas
mov
xchg
push
fs
lods
xor
adc
xchg
shlb
int
xor
sbb
rorl
cmpsl
dec
sbb
xchg
mov
mov
adc
adc
mov
scas
inc
mov
mov
and
bound
lret
rcll
or
int3
int3
aad
les
jno
fmuls
sahf
int3
push
sub
fcomps
repnz
outsb
ficomps
sub
ss
loopne
cltd
loope
enter
and
cmp
mov
dec
ljmp
addr16
ja
mov
test
shlb
mov
test
add
in
sbb
cwtl
push
adc
mov
push
cli
les
mov
mov
push
mov
push
push
mov
movsl
pop
dec
inc
mov
mov
arpl
iret
sbb
inc
sbb
or
xor
jo
pop
pop
jo
sbb
add
loopne
int
push
cmp
and
mov
mov
inc
push
jne
mov
cmpsb
daa
pop
mov
push
dec
fidivs
jle
inc
dec
in
push
sbb
mov
push
jg
mov
sub
xchg
pop
ss
loope
ss
mov
addr16
arpl
fmulp
push
or
cmp
xchg
imulb
sbb
out
mov
push
arpl
mov
inc
cmp
jo
nop
pop
cmpsl
jmp
mov
aad
pusha
scas
call
enter
inc
and
fwait
push
cltd
aaa
call
push
out
loope
iret
lahf
and
aas
push
loop
xchg
lahf
cmp
lret
inc
mov
loope
loopne
fldl
and
and
aas
repnz
sub
cmp
jae
call
inc
lcall
xchg
movsl
ss
cs
xchg
cmpsb
ds
bound
in
xor
xchg
and
mov
inc
cld
leave
push
rcll
and
aas
push
out
lds
loop
push
pusha
pop
negb
lcall
fadd
imul
mov
xor
pop
nop
repz
sbb
mov
or
mov
lahf
inc
xchg
push
dec
or
xchg
std
ja
insl
cmp
or
or
sbb
loope
cltd
loope
std
shr
mov
adc
inc
shlb
mov
sbb
repz
mov
sbb
push
outsl
cmp
fldcw
in
xorb
jns
adc
cmovg
std
and
and
adc
jmp
movsb
out
jae
push
push
xor
mov
mov
jge
fisttps
test
cmc
out
xlat
cmp
rolb
dec
psubusw
out
dec
das
xor
add
mov
dec
mov
aam
inc
rcr
and
cwtl
ret
shl
sub
scas
lods
xor
fcoml
out
loope
std
icebp
and
cmp
sub
pop
mov
movl
gs
dec
dec
cwtl
push
cwtl
fsts
mov
push
test
sub
cmpsl
jns
adc
push
ss
shr
mov
ja
and
mov
aas
xor
push
and
std
sub
data16
or
mov
cmp
add
and
lret
les
int3
insl
popf
clc
cli
push
ljmp
xor
clc
cmp
fstpl
arpl
dec
rcll
xchg
clc
dec
xor
xchg
xchg
imul
loop
add
mov
adc
xchg
divl
fstl
out
loope
mov
ror
in
loop
bsr
adc
cmp
inc
push
or
cmpb
aaa
les
xchg
and
mov
push
jg
or
push
incb
jns
pop
xor
push
sbb
mov
lods
xorb
push
test
stos
mov
and
or
in
shll
and
sub
inc
or
fdivs
or
cmp
scas
push
dec
outsb
lock
loope,pn
je
loopne
testb
xchg
les
cli
xor
arpl
or
rcll
loope
cwtl
jecxz
adc
les
int3
push
jb
pop
stc
mov
fcomps
repnz
and
jle
fisubl
add
cmp
sub
cmpsl
mov
jge
push
dec
lods
ljmp
push
enter
int
fidivs
mov
mov
jg
ret
cli
cwtl
and
mov
outsl
xchg
mov
fnstenv
pop
sbb
in
outsb
xchg
sbb
outsl
int3
pop
push
pop
or
push
data16
test
les
xchg
out
or
push
mov
outsl
adc
dec
btr
cld
not
insb
movsb
mov
stos
mov
push
cmc
mov
pop
jl
test
jle
mov
rcll
adc
mov
mov
popa
ja
insl
loope
adc
jl
push
negb
cld
fdivl
ljmp
in
inc
sbb
aas
repnz
xor
mov
and
jns
mov
and
and
aad
arpl
pop
pop
add
clc
cmp
push
ljmp
out
lahf
daa
pop
xchg
xlat
dec
xor
mov
jecxz
add
repnz
adc
xchg
shll
inc
in
aad
xor
sbb
add
ucomiss
push
pop
fidivrl
xlat
add
and
mov
gs
lods
or
testb
bound
adc
repnz
clc
insb
test
dec
popa
fadd
ljmp
sbbl
jo
lds
loope
les
int3
push
and
ss
jmp
fsubs
stc
data16
lock
or
push
cmp
cmp
fs
push
into
repnz
jecxz
es
stc
jle
inc
adc
jecxz
cli
outsl
jmp
je
in
lock
adc
jle
push
and
scas
push
scas
pushf
cltd
mov
shll
outsb
call
ret
fnstcw
push
and
pop
push
lret
fistpll
cld
jo
jbe
lahf
jg
dec
out
cld
pushf
adc
push
popa
ds
xchg
mov
pop
xlat
test
aaa
test
push
and
loope
or
xor
inc
fadd
and
bound
push
mov
rorl
cs
jmp
shrb
bound
out
fs
loope
test
arpl
out
pop
cmp
adc
fdivl
sub
call
adc
cmp
stos
into
pop
dec
cmp
xchg
and
cmc
fcmove
scas
aad
and
mov
lods
pop
arpl
mov
mov
loope
fwait
sub
fs
loope
push
les
pop
jns
xor
adc
push
fmull
repnz
push
xor
dec
pop
adc
sbb
dec
or
sbb
push
mov
mov
and
outsb
fs
in
xor
push
xor
les
fdivr
xchg
enter
in
xor
sub
out
inc
inc
lret
rcll
and
cmp
inc
inc
loopne
outsl
xor
test
les
shl
cmp
gs
loop
inc
cltd
scas
in
mov
cld
lret
or
push
and
cli
cltd
cmp
dec
push
lcall
inc
inc
adc
pop
fdivrs
call
orl
mov
ret
sub
mov
pop
mov
inc
adc
pop
hlt
cmp
adc
push
sub
fwait
test
cli
push
out
fldcw
mov
sbb
mov
shlb
fwait
leave
insb
loope
adc
lods
pop
pop
mov
stc
push
and
inc
sub
mov
lret
rcll
insb
je
cs
out
loopne
jecxz
push
fiaddl
pop
jl
pushf
cmp
es
fldt
loopne
es
push
mov
inc
and
test
sti
and
pop
dec
mov
data16
lock
xchg
fdivrs
cltd
cmp
pop
or
xchg
mov
adc
sahf
loop
xor
xchg
and
lds
adc
leave
enter
gs
cmp
sbb
push
sbb
imul
pushf
mov
test
rcrl
and
sbb
xchg
stc
fnstsw
cltd
loope
pop
lods
and
mov
cmp
repnz
enter
sbb
ljmp
mov
jns
gs
fxch
stos
fsubl
cmp
in
stc
xchg
push
imul
cltd
fwait
je
xchg
push
int3
mov
xor
lret
sub
test
cmpsl
mov
icebp
mov
jle
push
faddp
fs
or
mov
addr16
fs
pushl
jae
les
inc
cltd
scas
movsl
pop
jg
dec
dec
arpl
fmul
mov
mov
push
lahf
pop
xlat
xor
aad
ret
and
outsb
cwtl
test
rcr
cwtl
pop
dec
xor
hlt
xor
ds
data16
push
outsb
sub
cli
xchg
nop
call
and
inc
iret
pop
push
fidivrs
xchg
leave
outsb
loope
adc
in
daa
push
int3
fldcw
aas
out
repnz
int3
outsb
jl
add
xchg
int3
jno
enter
in
mov
and
scas
push
mov
inc
stos
scas
repz
jle
loopne
dec
jb
add
stos
sbb
bound
hlt
and
pop
dec
loopne
xor
inc
sub
cmpsb
es
loope
iret
mov
sti
sbb
mov
into
fdiv
lods
cmp
arpl
popf
jg
adc
jb
xchg
pop
fsin
adc
adc
flds
mov
cmp
dec
and
fstp
and
addr16
lock
cmp
leave
adc
push
lcall
paddw
insb
imul
icebp
mov
xlat
in
arpl
pop
fbld
call
xor
pop
jb
test
xlat
mov
scas
imul
ss
sub
imul
cli
xor
mov
adc
adc
ret
dec
mov
loop
iret
outsb
mov
push
xchg
loope
data16
lds
push
je
dec
out
adc
jo
sbb
and
and
cs
push
popf
xchg
pop
scas
loopne
jo
daa
xchg
loope
data16
aaa
sahf
loope
leave
mov
bound
loope
shlb
mov
push
scas
aam
int
negb
cld
fldl
popa
pop
and
les
out
mov
pop
imul
inc
in
mov
cltd
loope
rclb
lods
leave
insb
loope
adc
cmp
ljmp
push
insl
adc
xchg
xor
mov
addr16
and
pop
les
sbb
dec
sub
xchg
cmc
inc
out
push
faddl
cld
cmc
push
pop
add
stos
ja
jbe
int
dec
push
push
push
enter
fdivr
pushf
add
mov
jmp
jnp
xchg
clc
adc
inc
sbb
mov
mov
push
mov
shll
mov
fidivl
inc
outsb
paddw
dec
xchg
loope
outsb
testb
int3
ljmp
jb
inc
mov
cs
jg
push
mov
pop
flds
and
xor
sub
aad
jp
lds
adc
int3
outsb
ja
cmp
inc
hlt
xor
insl
adc
cmp
and
cltd
loope
aaa
inc
cmovbe
stos
dec
out
adc
mov
aas
in
adc
adc
scas
pop
lcall
divl
out
xchg
cmpsl
sbb
stc
leave
lret
adc
cmp
in
and
inc
push
jmp
mov
fsub
and
cmp
loopne
jo
cmp
xor
mov
xchg
mov
cmpsb
jns
jo
in
in
xor
lcall
cmp
lcall
shrl
dec
jb
bound
cld
mov
and
ret
sbb
lods
rcll
xchg
js
xor
leave
adc
cmp
notb
sbb
fbld
xor
imul
mov
loope
cmp
insb
lods
int
xchg
xlat
pop
xlat
mov
leave
lret
cmp
sbb
lret
xchg
push
repnz
insl
lret
adcb
xchg
gs
lods
sbb
sbb
adc
loopne
std
cs
roll
xor
inc
scas
pop
adcb
xor
decb
xlat
scas
lods
sub
repnz
outsb
adc
cmc
repnz
add
or
push
arpl
adc
pop
pop
mov
stos
test
inc
push
mov
and
rcll
add
testb
cli
les
int3
imul
jecxz
mov
or
mov
bound
leave
insb
loope
adc
ret
int3
ja
lods
adc
int
fs
lods
adc
rep
loopne
cmp
shrl
mov
roll
xchg
mov
testb
xchg
mov
cld
fisttpll
or
mov
fdivr
or
cltd
fidivrs
fists
cmp
dec
and
xchg
add
int
add
insl
dec
pop
movsl
inc
dec
cmp
push
das
mov
xor
loope
bound
outsl
add
sarl
mov
cmp
addb
inc
or
dec
call
fiadds
cmc
lods
and
fwait
mov
ffree
fldenv
int
movsl
insb
stos
daa
test
adc
test
or
rcll
xchg
mov
filds
mov
mov
xor
xchg
les
add
push
or
inc
ret
xor
lcall
push
sarb
sbbl
outsl
jmp
fstl
lret
mov
dec
cmp
xor
in
mov
stc
jbe
sub
outsb
fistps
popf
mov
bound
lret
rcll
push
int3
je
lods
adc
mov
mov
loopne
rcll
stos
scas
mov
push
sub
lock
cs
stos
scas
int3
pop
xchg
sub
fisubs
push
les
adc
dec
cltd
pop
or
loopne
in
sahf
mov
xor
hlt
xchg
push
mov
push
add
push
andl
sbb
cltd
loope
fs
dec
test
inc
sbb
push
rorl
jo
push
les
lahf
movsb
dec
sub
pop
mov
fldcw
aad
pop
jp
test
in
inc
pop
xor
cwtl
pop
dec
xadd
and
out
loope
popa
xchg
xchg
mov
shll
mov
fidivrl
prefetch
or
xor
fldcw
push
sub
imul
loop
mov
dec
mov
inc
xchg
pop
test
sub
push
das
push
pop
movsb
jmp
cmp
mov
lods
jg
das
mov
sub
loope
mov
ljmp
arpl
rcll
das
test
adc
lock
ret
mov
lcall
pop
ret
sti
bound
jecxz
add
test
xor
rcll
stc
test
imul
push
lcall
mov
insb
scas
lcall
sub
outsl
insb
aaa
add
inc
psubw
cmp
cmp
in
pop
mov
mov
xor
insb
arpl
daa
push
xor
hlt
fldcw
rcrb
inc
push
mov
aas
xor
test
repz
adc
f2xm1
cmp
push
mov
pop
jge
lods
inc
dec
int3
mov
adc
pop
dec
cmp
movsl
cmpl
loope
loopne
xchg
aam
add
leave
int3
adc
cmp
pop
imul
lahf
sbb
outsl
int3
enter
cltd
push
xchg
loopne
outsb
ret
loope
fs
adc
lods
cltd
loope
aaa
jmp
dec
cmp
and
or
adc
push
inc
mov
cmpsb
jns
out
xor
les
add
mov
movsb
das
pop
dec
dec
fnstcw
push
cmp
jae
and
loope
xchg
xchg
aas
sahf
and
inc
adc
sub
and
loope
rol
dec
test
loop
sbb
clc
fsubrs
and
xchg
adc
cmp
add
adc
scas
loop
push
cmp
out
pop
jg
push
mov
int3
fnstsw
loopne
mov
mov
test
test
or
lods
sub
stos
loope
icebp
adc
loop
notb
mov
xchg
mov
or
into
les
out
mov
repnz
adc
pop
jp
ljmp
mov
or
sbb
cmp
dec
and
pushf
mov
test
arpl
pop
xchg
pushf
mov
es
mov
or
int3
cmp
xchg
lret
loop
das
add
dec
filds
jg
mov
notl
mov
or
and
mov
adc
pop
jl
mov
jmp
xor
sti
call
jmp
xor
and
stos
faddl
es
dec
imul
lods
sub
and
hlt
sbb
test
xor
std
add
sub
test
stos
loope
xchg
pop
loopne
xchg
xlat
cmp
loop
lock
sub
cmp
fs
pop
or
xchg
cmp
xor
xchg
fldenv
loope
adc
dec
sbb
loopew
push
das
mov
popa
stc
fdivrl
cltd
loope
int3
shrl
cmp
inc
xlat
fisubl
adc
and
lock
sub
cmp
mov
mov
insl
jp
lahf
ret
sub
xchg
hlt
and
mov
cltd
loope
xor
or
sar
xchg
xchg
sbb
and
xchg
rep
mov
adc
out
leave
lret
adc
cmp
lret
lods
cmp
in
jg
jno
movsl
outsb
int3
and
xlat
aas
inc
les
fcoml
inc
cltd
loope
mov
int
aas
lods
adc
divb
sub
push
inc
mov
fcomps
clc
insb
in
dec
and
mov
push
stc
loop
cltd
loope
and
or
lods
adc
ret
and
push
mul
lods
roll
cltd
lock
fistps
cltd
loope
sbb
and
and
push
push
filds
fisubl
hlt
dec
scas
call
cmp
fdivrs
cltd
cmp
prefetch
or
xchg
mov
or
loop
xor
xchg
and
xor
mov
call
mov
sub
and
mov
mov
sbb
insb
int3
lret
dec
repnz
int3
xlat
lods
xor
fstps
sbb
mov
xchg
adc
pop
repz
ret
fmulp
repnz
sub
cmp
fwait
xor
fldcw
push
cmpb
dec
adc
mov
jl
mov
inc
call
sbbl
adc
push
test
push
ds
pusha
enter
mov
add
dec
pop
xor
sub
push
loopne
cli
ss
cmpsb
or
mov
or
loopne
mov
loopne
xor
push
sti
fnsave
fbstp
mov
lea
ss
fdivrs
push
xor
xchg
pop
push
fcmovu
xor
mov
pop
adc
pop
repz
cmp
adc
push
push
int3
out
mov
mov
sbb
decl
pop
addr16
clc
xor
mov
fdivrs
xchg
mov
push
dec
movl
xchg
popf
insb
rorl
fwait
ss
lods
rcll
xchg
shl
icebp
jecxz
leave
lret
cmp
ja
inc
repnz
imul
mov
ficoms
in
roll
popfw
ds
out
dec
push
repnz
cmp
xchg
inc
test
pop
loopne
imul
push
dec
cld
or
aad
std
push
push
push
pop
loope
test
daa
xlat
sub
xor
pop
out
dec
sarb
imul
cmp
dec
sbb
roll
jge
sub
pop
mov
cmpsb
insl
ds
shll
in
adc
push
out
or
imul
xchg
adc
push
ret
mov
cmp
lret
inc
mov
daa
push
mov
fyl2xp1
cmp
jle
jne
push
stc
pop
jecxz
mov
push
dec
or
lret
pop
or
dec
rcll
push
sub
xchg
pop
ljmp
cltd
loope
clc
lods
cmp
rcr
lods
inc
adc
cmc
and
push
lcall
addr16
cmpl
rcrb
xor
in
lods
orl
ret
push
mov
ds
mov
icebp
insl
cmp
push
cmp
sub
sub
mov
cmp
add
cmp
cmp
cmovg
test
inc
movsb
dec
les
adc
push
cmpsl
mov
push
bound
lock
inc
push
cmp
out
mov
cmp
pop
outsl
dec
iret
stc
cmp
push
dec
add
mov
lds
lret
mov
clc
insb
cmpsl
in
pop
cmp
scas
ror
int3
adc
mov
pop
xlat
sub
pop
fwait
push
gs
loopne
pop
mov
divb
dec
mov
dec
ficoml
scas
jns
jo
test
aas
enter
xor
js
ss
roll
inc
jno
insb
ficoml
cld
fidivl
vucomiss
cltd
mov
mov
fildll
inc
cltd
loope
dec
push
adc
mov
int3
shrl
cmp
jmp
les
shl
leave
mull
cmp
sbb
adc
and
inc
xor
lods
push
jne
mov
roll
shlb
mov
cmpb
dec
jecxz
sbb
stos
repnz
lret
jnp
cltd
mov
std
xor
roll
fiaddl
mov
xchg
popf
xor
rcll
scas
jp
int3
pop
jmp
out
cmpsl
sub
jmp
or
leave
mov
mov
cwtl
nop
jmp
cmp
mov
add
push
stos
dec
sub
iret
loope
mov
sub
pop
adc
mov
aaa
call
in
in
data16
std
or
fld
sti
in
xchg
test
push
ja
xchg
lahf
inc
test
test
mov
xchg
cwtl
enter
arpl
push
push
int3
mul
fcmovne
push
sub
mov
sub
xchg
sarb
std
pop
incb
dec
and
mov
and
in
stos
push
inc
std
xlat
scas
xchg
movsb
hlt
pop
push
mov
insb
pop
sbb
bound
or
mov
popf
loope
loope
cld
repz
test
dec
inc
lret
xchg
aas
push
loope
pop
out
jo
push
lods
cmp
push
decb
dec
mov
fs
loope
les
jl
repz
push
adc
iret
insb
sub
int3
mov
xor
les
sbb
adcb
dec
repnz
jae
ficompl
push
test
sub
adc
test
mov
xor
hlt
pop
mov
out
daa
lret
rcll
jmp
lods
sbb
jp
ret
pusha
rorb
pop
lcall
push
in
adc
pop
and
xchg
adc
push
cmpsb
push
fcmovu
sbb
mov
add
cmp
cmc
push
addr16
push
xor
xor
or
loop
xor
xchg
and
mov
and
idiv
or
push
ret
xor
sub
push
in
cmc
cmp
dec
bound
xchg
mov
push
dec
or
test
repnz
stc
mov
xchg
enter
and
arpl
fs
sbb
push
pop
int3
in
add
adc
iret
mov
int
test
aaa
cmp
fsts
mov
pop
jg
push
dec
or
mov
insb
orb
mov
insb
lcall
bound
push
mov
dec
push
mov
shlb
call
loopne
push
in
sbb
push
das
push
mov
aad
ja
pop
cmpsl
pop
sarb
adc
dec
push
test
loopnew
adc
mov
jae
decb
sub
push
xchg
sahf
lahf
sti
scas
loop,pn
xor
xchg
pushf
mov
xor
inc
or
arpl
jno
or
sbb
xchg
repnz
push
ljmp
lods
xchg
mov
cmc
mov
in
xor
cmp
or
xchg
shrb
ficoml
cwtl
and
divb
inc
paddusb
fldlg2
dec
jmp
adc
mov
cmp
push
out
hlt
out
pop
ljmp
mov
repz
cmp
cmp
adc
test
movsb
mov
dec
mov
repz
adc
repz
sbb
pop
push
push
out
int3
fistl
pop
fdivs
sbb
jl
ss
lods
xorl
push
leave
push
sbb
rcll
mov
scas
stc
fidivrs
cltd
loope
outsb
sti
lock
test
pop
ret
shll
mov
testl
xor
pmaxub
lret
nop
sbb
mov
inc
cltd
loope
adc
repnz
stos
fs
adc
popa
cwtl
leave
divb
int
stc
out
in
das
lods
mov
xchg
mov
push
inc
cld
shr
pop
jno
push
cmp
cmovno
test
push
gs
fistl
pushf
add
xchg
cmp
xchg
and
xor
movsb
dec
rclb
lret
sbb
lcall
stc
aaa
call
test
out
loope
push
outsb
and
aas
push
jmp
inc
loop
repz
xlat
data16
and
mov
roll
pusha
inc
sbbb
lret
int
daa
mov
int3
std
cmpsb
fs
or
fiadds
push
dec
and
pop
push
es
mov
sbb
daa
mov
stos
adc
cmp
cld
fisubl
enter
test
insb
xor
out
ss
xchg
loop
lods
xchg
mov
pushl
jb
push
sti
.byte
loope
