adc
xor
push
push
xor
ja
xor
les
mov
mov
aam
movsb
lock
inc
add
and
inc
adc
and
xor
les
hlt
nop
test
xchg
lock
loopne
test
repnz
mov
add
adc
and
xor
shll
hlt
mov
sarl
add
push
ret
stos
daa
dec
xlat
xlat
fdivs
mov
hlt
das
in
cld
dec
cld
adc
jne
mov
shr
sub
cmp
jns
mov
movsb
pop
hlt
das
inc
pushf
pop
lock
pop
dec
out
push
inc
addb
sbb
and
movb
movsl
loope
xor
les
mov
mov
int3
pusha
scas
inc
add
int
fs
test
or
xlat
rol
pop
loopne
out
mov
jmp
mov
add
lock
xchg
dec
rcl
movsb
in
in
rcrl
scas
iret
test
mov
cmp
pop
jnp
pusha
lock
hlt
dec
inc
push
push
xor
mov
cmp
and
xor
les
aam
in
hlt
cwtl
test
xchg
ret
bnd
jb
inc
and
aas
imul
add
pusha
inc
nop
test
mov
mov
es
pop
add
inc
and
popa
and
xor
adc
cwtl
test
shll
and
jae
add
adc
and
xor
les
hlt
rolb
mov
inc
add
and
inc
adc
and
xor
les
hlt
rolb
mov
inc
cmpsb
inc
repnz
loopne
lahf
sarl
mov
mov
popf
mov
es
mov
sbb
or
sub
add
repz
sbb
pop
and
inc
xchg
outsl
or
lock
sbb
pop
xor
mov
lds
rcrl
mov
xchg
xchg
or
test
out
pop
xchg
add
ljmp
mov
dec
xor
sub
add
loop
mov
inc
outsb
insl
insb
push
and
sub
push
lcall
add
pop
and
js
insl
leave
or
insl
adc
xchg
enter
out
idivb
sbb
imul
andl
jmp
fcompl
pop
in
adc
sub
sbb
aad
faddl
dec
test
sbb
jb
fisttpll
mov
rcrl
popa
fistpl
notb
push
icebp
pusha
add
or
mov
std
mov
push
jecxz
mov
repnz
dec
outsb
sahf
xchg
push
mov
pop
shll
lcall
jbe
mov
xchg
cs
jbe
or
data16
fsts
mov
test
in
mov
in
mov
push
stos
jb
jnp
scas
push
hlt
sub
scas
or
popa
clc
inc
loope
pusha
push
arpl
adc
jne
xor
stos
mov
xor
adc
push
out
dec
mov
mov
in
cmp
loope
lds
inc
mov
fs
mov
or
push
js
mov
lds
jge
dec
mov
ds
xor
mov
mov
aam
mov
stos
pop
or
adc
cmp
mov
nop
mov
cmp
pushl
sahf
mov
jb
add
mov
ss
scas
xor
sub
jl
push
loopne
push
cmpsl
test
in
in
mov
out
xor
cli
cmp
stc
lods
scas
cmpsb
movsl
popa
cmpsl
fistps
ds
out
out
pop
cli
andb
push
stos
add
or
xor
xor
rcr
iret
dec
loopew
out
inc
or
sarb
or
push
sbb
aad
or
fcmovu
lock
fptan
sub
addr16
outsb
das
mov
push
in
and
das
and
jno
xchg
icebp
mov
addr16
xchg
nop
inc
mov
rorb
insb
mov
xor
mov
shlb
in
pop
pcmpgtb
data16
push
fidivs
sbb
cmp
mov
push
cmp
xlat
loop
test
aam
addr16
cltd
inc
pop
nopl
sbb
jecxz
add
cwtl
xlat
mov
daa
add
iret
imul
and
orl
push
movsb
dec
push
cmp
cli
shl
push
xchg
and
pop
call
in
popa
rcrb
imul
aas
sbb
mov
bound
shl
clc
int
cltd
adc
lahf
movsl
adc
loope
fisttpl
mov
int
repz
test
lret
hlt
pop
cmp
mov
mov
std
gs
xor
scas
cs
mov
fidivrl
mov
sahf
mov
dec
movsb
jnp
xor
mov
push
ss
addr16
ss
lret
pop
jo
aad
dec
fistpll
jb
sub
ss
imull
xchg
cmp
arpl
mov
orb
sbbl
mov
jns
cltd
repnz
or
das
mov
mov
fwait
aas
xlat
and
xchg
inc
in
push
icebp
dec
mov
pushf
jbe
sub
out
jbe
jmp
mov
in
iret
dec
lret
shll
adc
fisubs
icebp
push
xchg
aas
pop
and
xchg
fbld
cmp
add
gs
fiadds
mov
xor
cmpsb
mov
pop
cs
add
dec
pushf
or
out
lods
adc
fldl
xchg
pop
push
push
repz
sbb
lahf
mov
push
add
sbb
cmp
insb
mov
jecxz
orl
ret
inc
enter
icebp
sub
aam
mov
das
xchg
jo
fmulp
js
ret
pop
lret
sbb
ljmp
fisttpll
enter
mov
aaa
nop
cwtl
rcll
add
sub
pand
fiaddl
aam
xchg
pushf
mov
sub
sub
mov
int
orb
hlt
push
filds
dec
mov
iret
mov
xchg
jmp
pop
cmp
in
sbb
xor
test
adc
loope
push
test
lods
ja
or
or
push
inc
lods
xchg
out
or
sub
aaa
dec
or
sub
xchg
push
fcmovb
adc
sub
paddw
xchg
shlb
cld
jnp
iret
fisttpll
jle
popa
push
dec
lret
sahf
jg
adc
iret
mov
pop
mov
jbe
nop
push
inc
push
or
cmpb
adc
mov
lods
fimull
mov
push
cmc
jmp
cmp
sahf
cmpsl
scas
idivb
jmp
int
loope
adc
sbb
out
mov
fwait
cwtl
adc
cmpsl
push
stc
outsl
das
or
lds
inc
mov
push
inc
fs
push
mov
movups
out
xchg
inc
popf
daa
aaa
popa
jo
and
stc
out
sti
rcr
divl
insl
sub
add
ss
movsl
add
cmp
dec
sbb
aad
jno
jo
add
push
jb
mov
dec
or
cmpsb
mov
push
jmp
sahf
popf
pop
sub
xor
sbb
fistps
lods
aas
cwtl
std
stos
frstor
stos
sub
adc
or
push
lods
push
aad
sbb
mov
cmp
add
gs
out
mov
dec
pop
stc
lcall
out
xchg
lea
mov
fistpll
jb
mov
jb
int
push
sbb
pop
sub
cmp
movsb
add
mov
ljmp
or
xchg
aaa
test
notb
jns
shll
std
loopne
int3
adc
test
sub
push
inc
and
xor
add
sbb
test
inc
stos
mov
pop
jno
and
testl
adc
lcall
enter
xor
push
pop
and
iret
fs
bound
pop
cld
andb
fidivrl
lret
fisttpll
fdivs
jge
xchg
push
sub
repnz
mov
gs
xchg
testl
and
fisttpl
out
jno
adc
adc
into
fidivs
adc
enter
ljmp
jnp
fnstsw
repnz
adc
xchg
cli
es
push
mov
jbe
das
shll
sbb
lods
cltd
inc
pop
sbb
sahf
sbb
mov
cmpsb
out
and
loopne
inc
push
aam
fwait
enter
sub
ja
sarl
loop
mov
subb
mov
insb
jg
movsl
shlb
test
cmp
cmp
dec
push
mov
adc
cli
jmp
fdivrs
lret
cmp
sub
adc
push
arpl
test
mov
nop
enter
pushf
mov
sub
jne
xor
mov
iret
cmpsl
adc
out
dec
cmpsl
lods
aad
ficomps
das
es
xor
xor
addl
mov
pusha
xor
xchg
dec
lods
add
mov
inc
rcrb
mov
fildll
das
lds
xor
fdivp
adc
mov
jecxz
stos
xchg
mov
pop
shl
push
icebp
jecxz
sbb
xchg
pop
mov
cmp
push
or
pop
sub
mov
repnz
sbb
xor
ret
xchg
sbb
xchg
jle
sbb
test
xchg
push
jo
xor
push
pop
in
lock
out
shrd
fstps
rcrl
mov
icebp
fbstp
enter
jnp
or
lret
xlat
daa
scas
adc
xchg
nop
cmp
loope
inc
fisubrs
push
and
push
add
in
outsb
sar
add
mov
cmpsb
cmc
or
fistl
ljmp
jmp
xlat
mov
push
cwtl
inc
and
or
pop
repz
mov
cmp
fnstcw
dec
fistpll
dec
mov
jmp
repz
xchg
pop
inc
lock
fcompl
into
mov
in
stos
mov
cmp
clc
imul
xor
and
push
push
jecxz
xor
icebp
popa
imul
cmp
cli
mov
ret
xor
push
scas
int3
jae
cwtl
repz
sub
pushw
stc
daa
inc
sub
rorb
jbe
sub
scas
lret
pop
ljmp
add
and
fildl
dec
fsubrs
rcl
ss
dec
and
and
in
and
ret
insb
fists
fucompp
pop
mov
insb
add
dec
sahf
jae
les
icebp
inc
push
pop
test
sub
pusha
lret
xor
lret
jo
add
xor
pusha
push
mov
mov
stos
rolb
push
ljmp
jns
ficompl
subl
pop
or
in
dec
pusha
xor
dec
dec
aas
fld1
aas
repz
jnp
roll
fwait
cs
arpl
jg
mov
les
mov
and
loop
add
in
fiadds
add
jecxz
loopne
inc
push
dec
stos
xchg
cmpsl
js
ret
pop
fildll
pop
subb
dec
or
xchg
push
inc
jle
popa
or
dec
dec
jo
xor
shlb
movsl
jb
push
mov
inc
subb
jl
ficoml
insl
mov
fwait
mov
xor
in
pop
and
and
add
iret
mov
or
ja
outsb
out
into
shll
mov
pop
mov
jle
mov
xor
push
ficomps
lcall
or
repz
and
jns
jle
shll
jecxz
fbstp
adc
neg
lret
or
dec
popa
mov
pop
jl
pop
std
sub
xchg
push
ja
push
mov
cmp
adc
jae
dec
adc
fdivs
xchg
xorb
outsb
icebp
pushf
push
sahf
das
aaa
btc
push
test
and
mov
rcrb
neg
cmpb
push
aam
mov
pusha
adc
sbb
call
mov
aas
sbbl
xchg
cmpsl
psrlq
mov
sarl
xchg
in
mov
add
add
xchg
lahf
lods
in
mov
jg
jg
popf
xor
lcall
lock
faddp
leave
mov
xchg
rclb
ss
cmp
mov
mov
xchg
fcompp
jno
inc
add
cmp
icebp
mov
addr16
add
jmp
filds
mov
mov
popa
mov
fldt
fmull
and
inc
or
loope
jg
cmp
mov
cs
in
mov
push
pop
jmp
xchg
in
out
loop
arpl
pop
arpl
lcall
lahf
mov
sahf
mov
jmp
aam
pop
imul
roll
fsincos
icebp
jge
lods
pop
sub
call
inc
inc
push
mov
pop
in
jecxz
mov
mov
and
pop
add
fistpl
out
cmp
push
pushf
jne
in
dec
xor
push
icebp
aas
rcl
cmp
xchg
insb
cmpsl
mov
inc
lods
lods
fs
enter
pusha
lret
sub
xlat
inc
test
dec
inc
imul
push
cs
dec
mov
ljmp
lock
cmp
fisubl
jp
cmp
xchg
inc
sub
mov
inc
dec
jp,pt
jns
ret
mov
in
ret
xor
cmp
in
mov
arpl
nop
mov
popf
jne
adc
push
mov
fnstenv
repz
lahf
loope
jge
sub
xchg
jns
mov
test
mov
out
decl
dec
pop
xor
movsb
gs
dec
push
mov
cmp
pushf
frstor
lahf
jne
xor
outsb
sub
add
std
mov
push
ret
orb
es
pop
jnp
test
insb
dec
lds
cs
mov
mov
pop
jo
icebp
sahf
stc
jg
lds
xchg
in
mov
aas
into
dec
idiv
and
sbb
fdecstp
xchg
int3
popa
loope
jge
adc
mov
cli
out
xchg
inc
xchg
add
inc
inc
mov
xchg
cmpsl
add
jmp
mov
fwait
aas
shr
leave
icebp
test
xchg
jge
xor
add
xchg
or
test
sbb
mov
add
sbb
sub
push
stc
repnz
int
push
xchg
in
push
dec
out
loope
int3
xor
fldcw
aaa
jg
cs
ljmp
adcb
call
ja
lea
loope
clc
hlt
xor
popf
imul
cwtl
outsb
add
addr16
int3
xchg
repnz
xor
pop
sbb
jle
movsb
inc
es
scas
adcl
sbb
sbb
fucomi
in
je
mov
sub
dec
fstpl
movb
fimuls
fucom
cltd
sub
test
int3
stos
mov
xchg
add
fsubrl
outsl
inc
mov
iret
xor
scas
xchg
pop
lahf
shrl
lcall
mov
and
mov
inc
dec
push
push
and
and
shlb
in
adc
fwait
cli
inc
xchg
push
push
gs
sahf
fsub
in
xchg
sahf
std
lods
jnp
sbb
mov
xchg
flds
ret
xchg
scas
es
hlt
stos
fsubrs
mov
adc
lret
ret
cmp
fiadds
das
xor
xchg
cmp
jge
pop
repnz
lock
cltd
cmp
popl
sbb
sbb
cmp
jge
jecxz
in
lods
insb
inc
incb
or
inc
mov
repnz
dec
mov
sub
jne
dec
das
sahf
fsubrl
adc
sub
sarl
push
sahf
mov
movl
mov
test
stos
nop
dec
testl
pop
pop
ret
jmp
and
fcompl
jnp
std
add
xlat
push
and
xchg
faddl
cli
jecxz
xchg
push
pop
pusha
pushf
in
ds
push
push
jb
mov
dec
push
cli
hlt
gs
insl
setnp
sub
mov
ret
xor
mov
pop
sbb
lret
mov
nop
xor
and
cmpsb
rolb
cmp
xchg
inc
fildll
cmc
sub
outsl
scas
push
ret
add
mov
inc
cmpl
sahf
cmpsb
enter
and
or
mov
in
mov
sbb
cmc
fidivl
or
inc
divb
enter
sub
and
arpl
in
inc
push
xor
push
mov
enter
xchg
mov
pushf
shrl
adc
inc
call
or
push
lcall
shl
sub
sub
leave
xchg
push
out
xchg
push
leave
pop
inc
inc
xchg
sub
in
pushf
add
lea
sbb
inc
addb
loop
movsb
sbb
jp
orl
or
xor
inc
jns
aas
idivb
push
cltd
or
mov
cmpsb
sub
faddl
mov
cmp
rcrl
cmpsb
adc
push
mov
xchg
and
hlt
mov
mulb
ljmp
mov
out
jg
mov
add
outsb
int3
movsl
xor
scas
les
mov
mov
sub
mov
nop
sbb
jb
sbb
testl
mov
sbb
sbb
and
aam
dec
cmp
mov
leave
or
dec
imul
xchg
push
mov
fsubs
sub
push
jp
mov
sub
ljmp
jbe
rcll
sbb
xor
sub
mov
lock
aaa
cmp
bound
or
in
and
add
lret
push
sbb
xor
mov
xchg
out
imul
lahf
cmpsl
cmp
loop
repz
mov
subl
and
imul
outsl
dec
mov
pushf
pop
lods
xor
xchg
cmp
cmc
jp
mov
and
cwtl
lret
add
and
xchg
mov
dec
test
in
jb
xchg
pop
loop
ljmp
add
dec
sbb
sub
mov
and
sti
lahf
daa
or
mov
mov
pop
xchg
adc
jo
shll
mov
popa
inc
movsl
cmc
push
fidivrs
push
push
into
xchg
and
cmp
test
ljmp
frstor
out
lret
loop
add
adc
xchg
test
xchg
cld
jg
mov
cltd
loope
ret
cmp
sbb
clc
test
sub
jp
inc
mov
pop
push
xchg
and
inc
jp
jle
jbe
or
fidivs
xchg
rorl
cld
ret
imul
jle
js
xchg
pop
adc
mov
adcb
or
std
inc
aam
insb
lret
push
ja
and
inc
adc
and
xor
les
hlt
rolb
mov
inc
add
and
inc
adc
and
xor
les
hlt
rolb
mov
inc
xor
and
add
adc
and
adc
in
hlt
rolb
or
add
add
xchg
jo
loopne
nop
cmp
sbb
mov
imul
pop
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
roll
fstpl
add
mov
and
into
arpl
xchg
subl
push
mov
outsb
repz
jecxz
adc
mov
inc
inc
jae
arpl
xchg
daa
subl
push
mov
jbe
inc
jecxz
adc
add
mov
or
inc
shrb
xchg
xchg
ret
mov
rcrb
shll
jo
fcoms
and
inc
xchg
cs
cmc
inc
nop
clc
aam
in
sub
into
lods
jnp
mov
imul
test
lea
shrb
sub
outsb
int3
and
repz
lret
and
outsb
lds
rcrl
scas
or
out
adc
jle
jno
lods
sub
xor
insb
push
test
push
push
jecxz
add
out
and
stos
mov
xchg
inc
arpl
xor
lds
inc
add
inc
mov
data16
outsl
lods
inc
fwait
jae
or
int
cmpl
push
mov
outsb
repz
jecxz
adc
and
jae
arpl
pop
movswl
mov
xchg
xor
push
lret
dec
loope
xchg
sub
nop
inc
icebp
jecxz,pn
or
cmp
and
add
jb
data16
mov
addl
jg
dec
fidivrl
jnp
adc
outsb
repz
jecxz
adc
and
jae
arpl
xchg
subl
push
mov
outsb
repz
jecxz
adc
and
jae
arpl
xchg
ds
or
pop
int3
mov
jecxz
mov
bound
inc
hlt
rolb
mov
push
sar
cmp
pop
cmp
mov
sbb
xchg
push
inc
sbb
insl
xor
pop
dec
popf
gs
popa
leave
nop
mov
fisubrl
mov
mov
inc
mov
cmpsl
hlt
or
scas
jns
add
pusha
and
push
cmp
cmc
mov
push
daa
adc
sbb
push
sub
sub
test
lahf
add
inc
xlat
pop
fildll
pushf
clc
jbe
or
and
push
mov
push
lret
inc
test
popf
mov
add
outsb
xchg
add
xchg
repnz
in
and
and
imul
and
push
sar
imul
push
or
adc
je
ljmp
dec
cltd
add
sub
sti
mov
ja,pt
pop
pop
lea
sbb
gs
lret
xor
inc
mov
push
mov
dec
dec
sgdtl
xor
sub
push
dec
add
es
sub
mov
xor
jle
aam
and
sbb
mov
sbb
sbb
popa
ja
lahf
mov
nop
test
xor
sbb
cmpsb
shlb
cwtl
ds
xchg
xchg
push
pop
push
jne
loope
sti
mov
add
or
jns
xor
dec
and
stos
repz
jecxz
add
rolb
lret
pop
xor
inc
pop
clc
mov
js
push
dec
popf
cmpb
mov
testl
mov
inc
add
lds
outsl
jecxz
loop,pn
adc
push
divl
sub
or
add
fwait
outsl
xor
aam
mov
imul
jmp
popf
in
sub
jne
or
dec
jnp
adc
jecxz
insl
nop
mov
cmp
jle
inc
cmp
sbb
pop
push
mov
lret
fmul
mov
sub
adc
xor
pop
mov
je
sarl
add
jg
lret
pop
gs
mov
cli
fs
je
ret
in
std
mov
push
and
and
and
sub
dec
add
push
pop
sub
xor
jno
sti
mov
push
cmp
imul
out
xlat
out
enter
call
jbe
inc
enter
xchg
xchg
xor
adc
sub
adc
mov
sub
inc
ljmp
jno
inc
cltd
pop
mov
loop
sarl
imul
dec
cmpsb
or
gs
dec
in
cmp
in
and
std
sar
or
push
mov
stos
frstor
into
mov
add
lcall
add
je
test
mov
push
lret
push
jecxz
inc
or
push
add
push
xchg
loop
cmpb
loop
pop
je
insl
xchg
lock
inc
or
dec
ss
ds
dec
outsl
mov
mov
bound
cmp
adc
jno
sqrtps
popf
test
inc
mov
ds
pop
popf
sbb
dec
aaa
lret
push
push
or
call
push
orb
mov
sub
dec
int3
jl
and
pusha
sub
out
sbbl
fistps
push
fs
out
jmp
pop
imul
call
sti
pop
push
iret
inc
inc
mov
cmp
out
imul
test
in
mov
insb
xor
inc
mov
or
lret
mov
dec
leave
stos
cmc
sub
adc
sub
lahf
push
push
ret
test
jnp
push
test
stos
xor
or
roll
sbb
cmp
inc
in
neg
mov
and
push
int
cltd
cli
mov
cmp
push
imul
mov
jo
fadd
inc
and
inc
inc
sub
shrb
js
es
out
int
mov
aam
lret
int3
xchg
jno
int
mov
adc
fs
pop
push
mov
clc
mov
cmp
lods
push
cmp
rorl
cmp
and
xchg
pop
push
jnp
cld
loop
sarl
aam
pusha
sahf
fcmovnu
xor
ret
rcl
arpl
fidivs
pop
inc
and
mov
into
addl
stc
mov
in
das
cmp
mov
sbb
adc
dec
sbb
daa
xchg
fsubr
xor
sbb
and
shr
jnp
cltd
and
andb
inc
ret
divl
ret
mov
leave
ret
notl
dec
ss
arpl
dec
adc
mov
xchg
push
cltd
pop
xor
push
out
cltd
stos
push
mov
int3
push
mov
rorl
int3
push
loope
mov
shrl
pop
int3
shll
clc
xlat
cmpsb
and
sbb
xor
ds
mov
test
inc
cmpsl
in
stc
push
test
mov
sbb
lcall
xor
adc
mov
mov
ljmp
mov
jne
pop
scas
adc
cld
inc
jns
cs
cmpsl
mov
cmp
push
fistpll
dec
mov
orl
pop
mov
cmp
mov
xor
out
cmp
rcll
call
cs
mov
pop
call
and
xchg
xchg
dec
lcall
cs
push
sub
lret
inc
and
pop
xor
push
movsl
test
icebp
mov
and
test
xchg
xchg
fnstcw
sbb
lock
adc
jns
sub
jg
ja
shll
mov
adc
aad
ljmp
xchg
pop
pop
pop
inc
icebp
jmp
push
xchg
cmp
dec
cmpsb
daa
or
popa
pop
add
adc
mov
mov
push
inc
push
fistl
push
in
sti
ljmp
push
loopne
mov
add
and
test
mov
enter
or
or
lahf
xor
xor
inc
pshufw
sarl
ss
mov
cmc
loope
repnz
shrl
mov
sub
aas
clc
mov
fs
scas
jae
mov
and
popa
push
int
scas
or
nop
cli
or
lock
out
fsts
or
aad
push
in
aad
arpl
cwtl
pushf
pop
in
mov
mov
fcmovu
data16
jb
add
fildll
adc
call
jno
cmp
icebp
sub
js
jmp
mov
out
pop
imul
sbb
inc
nop
and
icebp
cltd
xlat
jg
scas
mov
adc
and
lea
push
xchg
mov
notl
mov
js
push
lcall
xchg
dec
inc
add
mov
lods
xchg
das
jl
or
call
aaa
ss
inc
nop
dec
push
repz
sbb
push
dec
jne
popf
add
sub
dec
dec
out
add
xchg
or
cmp
into
mov
inc
mov
iret
enter
xor
add
mov
enter
mov
jns
aam
dec
call
into
aaa
or
push
das
loope
out
inc
mov
mov
sub
mov
pop
jbe
pop
in
mov
xchg
std
jne
lds
mov
lds
and
insb
ffreep
xor
cmp
add
iret
fcomps
jno
rcl
insl
pop
call
in
nop
notb
mulb
inc
pusha
bound
jp
sub
movsl
push
cld
or
cmp
dec
mov
lods
nop
ret
or
nop
shrl
cmp
dec
cmp
faddl
or
into
aas
push
xlat
fwait
dec
int3
scas
add
lds
or
fucom
xchg
cli
jo
iret
bound
mov
inc
pushf
adc
je
lods
into
cmp
daa
je
jnp
addb
incl
jecxz
xorb
xor
or
xchg
stos
pop
inc
jmp
xor
adc
scas
in
add
out
jmp
cmp
xchg
lret
push
aas
movsb
out
in
sub
or
mov
sbb
mov
add
cmp
adc
jns
jns
jg
scas
xchg
jmp
pop
jbe
rcl
dec
dec
pushf
jecxz
std
and
andb
pop
lret
mov
push
cld
mov
sub
mull
scas
insl
iret
inc
test
mov
aam
imul
pop
data16
cmp
jns
inc
stos
stos
jne
xchg
dec
ja
mov
mulb
js
test
fimuls
fiadds
xchg
stc
pop
mov
inc
std
inc
loopne
fs
sahf
xchg
sbb
jge
push
dec
repnz
pop
pop
sbb
stos
xor
pop
and
sbb
cmc
ficoml
in
sbb
xchg
test
arpl
mov
inc
sti
int
je
test
sub
mov
ret
notl
jb
lret
sub
or
fucomi
cmp
addr16
jb
push
sbb
loopne
and
stos
jbe
pop
mov
cmp
mov
cmp
mov
jae
sbb
std
ret
call
xchg
xchg
lret
fs
jl
fdivrs
inc
and
dec
and
sahf
inc
mov
mov
ror
mov
out
push
mov
ret
add
inc
sbb
cmpsb
in
insb
cmpsb
repz
into
rcrl
pop
sub
dec
jns
adc
pop
jl
scas
sbb
cmp
or
fldz
pop
push
mov
idivb
and
pop
cs
lret
pop
in
inc
mov
sbb
rol
inc
mov
push
outsl
movsb
xor
pop
lock
inc
jecxz
rcr
cltd
out
call
jo
xor
jo
xchg
sbb
xor
out
leave
jo
jb
and
pop
jge
cmp
push
sbb
mov
or
add
add
imul
daa
pop
arpl
addr16
sahf
or
bnd
xchg
xor
push
push
xor
jmp
xchg
cwtl
jmp
jb
sub
ret
inc
or
js
data16
mov
mov
push
cltd
in
dec
lcall
sbb
and
gs
jmp
cmpsb
mov
cmpsb
add
loope
push
xlat
je
mov
aas
test
in
jecxz
shrb
xchg
fdivl
mov
cmpsl
cli
dec
sbb
jg
add
cmpb
popa
jg
sbb
inc
jmp
fcmove
out
pop
cmp
not
push
test
cmp
dec
lcall
subl
adc
out
mov
and
hlt
fildl
popa
cltd
sbb
sahf
mov
push
push
cmpl
test
loope
xor
lcall
mov
mov
xchg
pop
lret
imulb
sbb
cmp
or
mov
lahf
data16
fsubrl
movsl
mov
shll
dec
movsb
cmpsb
loope
or
add
movsb
add
nop
ss
std
insb
jne
mov
and
and
dec
shlb
sbb
mov
notl
xor
lret
xlat
add
ljmp
sub
mov
nop
sbb
pop
mov
inc
ss
inc
pop
mov
clc
test
mov
shll
aam
push
into
loopne
jno
xchg
pop
lods
push
jp
push
imul
popf
aaa
xor
push
lea
xor
imull
cmp
in
imul
mov
fidivl
daa
lahf
mov
inc
sub
pop
pop
mov
adc
insb
pop
aad
test
cmpsl
mov
mov
fimuls
xor
push
or
rcrb
in
sbb
xor
mov
shl
call
dec
dec
cmc
push
out
xchg
negb
xchg
pop
cltd
cmpsl
out
dec
incl
mov
ret
pop
inc
outsb
mov
pushf
cmp
xchg
inc
add
adc
aam
xor
xchg
mov
aas
jae
dec
out
mov
repnz
flds
fbstp
or
mov
shll
push
sbb
mov
pop
lods
leave
ret
mov
cmpsl
mov
adc
stos
xchg
add
test
stos
push
popf
sbb
mov
rcrb
into
aam
out
fstpt
pushl
pop
and
ds
pop
and
sbb
mov
shr
mov
cmp
cltd
push
xchg
jno
sbb
or
sarb
push
and
adc
int3
aad
cwtl
inc
dec
inc
dec
and
lret
jb
adc
xchg
inc
je
jge
push
int3
mov
lods
std
fstl
mov
nop
xchg
int
in
fwait
push
pop
cwtl
rorl
sbb
xchg
imul
xorl
adc
jno
stos
inc
cld
fmull
stos
sbb
test
pop
jp
mov
xchg
pop
rorl
sub
int
mov
shll
sub
shl
imul
fs
push
fimuls
ja
xlat
cmp
jae
fwait
pop
aam
push
fwait
cltd
mov
mov
out
rorb
inc
sbb
push
out
icebp
sub
incl
xor
js
subb
jo
pushf
push
push
fwait
mov
or
pop
mov
out
pusha
loopne
push
or
dec
mov
mov
test
xchg
dec
inc
dec
mov
shll
fidivrl
dec
cmpsl
or
mov
mov
cmp
lods
sarl
add
xchg
aad
ja
mov
ja
sbb
jp
pop
or
inc
fiadds
push
stc
mov
mov
adc
lods
adc
and
jbe
pop
es
ljmp
adc
pop
cmp
mov
push
in
fnstcw
sbb
dec
push
imul
mov
nop
cmpsb
and
test
sub
sub
test
ds
push
xor
out
lds
inc
jns
dec
adc
xchg
test
test
test
dec
mov
movsl
jl
xor
jmp
sub
jns
icebp
push
inc
mov
push
adc
mov
pop
sbb
mov
add
inc
mov
movsl
or
add
dec
and
push
popa
jne
lret
xor
das
inc
pop
push
jp
mov
sbb
aas
and
xor
push
xchg
fisubrs
or
and
mov
and
imul
xchg
stos
lods
mov
dec
mov
out
adc
lea
loop
and
add
call
outsl
jno
stc
and
xlat
push
scas
outsb
insl
cmpsl
push
lret
js
sti
mov
pop
loop
jp
mov
sub
mov
jl
fists
inc
push
lcall
gs
sub
jo
push
jl
mov
loope
inc
aad
mov
outsl
out
int3
loopne
jbe
or
mov
pop
mov
jno
fwait
jnp
cmp
add
lret
insl
cwtl
jmp
pop
xchg
mov
popa
in
cmp
adc
xchg
pop
jo
or
rcrl
clc
mov
sub
pop
pop
scas
dec
aaa
and
jae
repz
add
mov
push
test
xor
and
dec
hlt
ss
out
arpl
imul
rcl
lret
hlt
jnp
cli
loope
inc
popa
push
adc
xchg
icebp
test
xor
aam
movsb
push
insl
or
xorl
jle
or
mov
and
xor
mov
ds
ret
adc
mov
movsb
or
and
mov
out
pushf
lret
and
pop
mov
out
inc
add
pop
mov
or
jnp
mov
pop
nop
repz
adc
adc
ret
pop
fnsave
rclb
insb
cmp
ret
shrb
icebp
xor
es
lcall
rorb
mov
add
pop
movsl
subl
lahf
mov
jmp
imulb
mov
inc
and
mov
pop
mov
cli
xchg
xchg
pop
xor
pop
cmp
dec
dec
pop
test
push
fwait
xchg
lds
jno
xchg
sbb
push
cld
and
mov
flds
movsb
jo
dec
insb
imul
mov
ficomps
in
push
arpl
pop
cmpsb
scas
add
adc
out
push
jnp
stos
dec
jmp
lea
xchg
clc
ja
adc
adc
jl
pushf
gs
sarb
xchg
pop
pop
pop
lret
mov
mov
sbb
sbb
cmp
or
jns
lods
adc
push
xor
out
cmp
dec
aam
add
cmp
andb
pop
add
jb
movsb
adc
in
rcrb
aas
and
jne
sub
pop
inc
lods
or
sub
ss
mov
clc
xchg
iret
outsb
arpl
mov
test
into
jae
cli
mov
rcrl
push
adc
stc
push
fiaddl
xchg
outsl
and
sbb
in
cs
mov
outsb
repz
jecxz
adc
and
jae
arpl
xchg
subl
push
mov
outsb
repz
jecxz
adc
and
jae
arpl
xchg
subl
push
mov
outsb
repz
jecxz
adc
and
jae
arpl
xchg
subl
push
mov
outsb
repz
jecxz
adc
and
and
lret
adc
int3
int3
int3
int3
int3
int3
int3
int3
popf
mov
mov
adc
rcrb
sub
pusha
jge
insl
inc
popf
mov
mov
int
std
shr
mov
cmp
sbb
pusha
jge
insl
inc
popf
mov
mov
int
std
shr
rcrb
sub
aaa
or
add
ret
jmp
adc
inc
in
pop
adc
push
mov
in
js
xor
imul
loope
push
add
add
adc
loopne
mov
ret
mov
push
loopne
int
test
push
clc
mov
xchg
sbb
dec
in
push
or
aad
clc
popf
cmc
lea
push
fsub
js
in
ds
iret
mov
ret
xchg
inc
loopne
xor
inc
les
pop
rclb
js
imul
pop
insb
mov
and
mov
jle
rcrb
aas
sub
lods
test
std
jae
call
shlb
push
in
push
push
mov
mov
int
std
shr
rcrb
sub
pusha
jge
insl
sub
mov
loope
nop
les
cltd
xchg
out
xchg
sbb
jne
je
xor
push
sub
push
clc
aad
roll
mov
pop
pop
aas
inc
sub
popa
adc
sbb
clc
hlt
call
xchg
fmulp
loopne
shr
rcrb
sub
pusha
jge
insl
inc
popf
mov
mov
int
std
shr
rcrb
sub
pusha
jge
insl
inc
popf
mov
enter
inc
and
lods
mov
mov
adc
popf
pop
loop
std
out
xlat
jmp
ret
lods
xchg
mov
jae
hlt
pusha
fiaddl
mov
cmp
pop
push
mov
xchg
insl
xchg
std
adc
lds
mov
fdivp
push
add
ljmp
mov
adc
xchg
pushf
jo
cwtl
lahf
scas
adc
sahf
daa
pop
lds
jecxz
sub
xor
das
jp
add
fldenv
and
in
dec
adc
jmp
mov
test
xchg
in
fadds
pop
adc
jbe
add
inc
adc
incl
andl
lret
inc
stc
enter
repz
mov
jns
sahf
in
rol
les
insl
cwtl
xlat
fdiv
nop
pop
pop
es
pop
loopne
and
pusha
mov
xlat
adc
clc
ret
and
xor
jle
mov
out
cli
in
xorl
mov
loope
xor
xchg
push
jb
filds
inc
xchg
xchg
aas
andb
xor
loope
out
add
aam
sbb
leave
sub
pop
xor
add
ret
mov
push
inc
sbb
popa
push
xchg
rcr
mov
jne
rol
xchg
rorb
fcoml
cltd
and
jo
mov
repz
fcomi
loopne
rcll
faddl
out
adc
jl
stos
scas
out
jno
inc
or
mov
xchg
jnp
sbb
xchg
insl
ret
cmp
mov
mov
xchg
insb
xor
pusha
lret
xchg
insb
fnsave
mov
xchg
dec
int3
loop
mov
xchg
movsb
mov
aad
mov
das
cltd
xchg
mov
cmp
iret
mov
rorl
jns
scas
and
dec
jnp
dec
and
mov
into
pop
sahf
cmc
adc
add
test
outsl
or
fs
and
sbb
enter
pop
arpl
into
sub
and
sub
jo
popa
call
clc
mov
in
int
stc
adc
mov
pushl
mov
lods
aaa
adc
jno
push
push
push
sub
test
bswap
sbb
rcr
pop
push
mov
or
jno
cmc
popf
jl
imul
push
pop
add
adcb
cmp
cmp
push
movsb
jg
push
mov
stc
aaa
mov
and
mov
cmp
outsl
and
bound
mov
push
cwtl
mov
push
jp
sub
cld
jmp
in
movsl
jl
push
ds
mov
pop
sahf
add
mov
mov
xor
popa
mov
pop
lock
rcrb
outsb
in
inc
pop
iret
sahf
inc
push
cmp
outsb
dec
or
cvtdq2ps
cmc
cmp
repz
dec
cs
inc
jo
adc
mov
loop
std
sti
in
mov
dec
xchg
xchg
cmc
test
cmp
jb
scas
pushf
pop
jne
out
dec
out
inc
in
pushf
or
mov
js
cld
outsl
mov
xor
insb
stos
jae
jne
cltd
or
loop
mov
cmpsb
dec
neg
std
es
les
movb
dec
jbe,pt
arpl
cmp
cld
fstpl
inc
int
sub
dec
movsl
pop
imull
jne
jecxz
lahf
xor
enter
push
shrb
pop
ret
jne
cmp
mov
mov
fcoml
fidivs
xor
aam
and
movsb
pop
loope
mov
dec
mov
mov
xor
sbb
jge
sub
test
popa
xchg
in
lcall
in
cli
inc
inc
les
push
fsubrl
aaa
pop
mov
xor
and
mov
pusha
addr16
testb
xchg
test
imul
adc
cmp
aaa
es
incl
lret
pop
mov
adc
sbb
inc
push
repz
in
cmc
mov
pop
cld
sbb
jecxz
mov
sbb
pushf
stos
xor
in
add
dec
out
mov
and
xchg
shll
pop
jae
js
lret
jae
pop
imulb
jmp
or
std
jp
ret
arpl
out
insl
jl
jae
filds
push
push
cmp
sbb
pmaxub
dec
out
lock
jne
xchg
popa
pop
pop
loope
and
push
or
mov
dec
pop
xchg
add
inc
es
sbb
xlat
data16
adc
inc
loop
shr
xchg
out
out
popa
je
les
cld
in
int3
jle
mov
and
or
inc
ror
mov
fldcw
adc
popf
adcl
mov
sub
aas
sarb
jp
sbb
fstpl
inc
jecxz
xchg
rorb
mov
inc
mov
push
sub
mov
inc
popa
xor
inc
jno
loopne
sbb
fsts
mov
and
cmp
fisubs
imul
jp
mov
bound
pop
cmp
dec
sti
mov
out
vandpd
stos
and
inc
enter
dec
cmc
mov
stos
xchg
inc
stos
aam
push
pop
shlb
inc
xchg
mov
dec
xor
rorl
pop
jge
pushf
xor
push
insb
call
xor
ja
push
or
arpl
mov
jo
call
fdivrs
daa
cmp
repnz
dec
dec
inc
cs
dec
mov
insl
je
clc
cs
sub
in
cmp
fistpll
shll
xchg
insb
int
fwait
lret
jnp
leave
mov
sbb
repz
sub
or
testb
dec
mov
icebp
rclb
inc
jmp
inc
rcl
xor
bound
inc
and
fcom
mov
jle
movsb
mov
push
add
lea
out
int3
popf
scas
jns
mov
testl
add
jle
and
add
pop
or
push
movb
xor
jb
stos
addr16
pusha
xor
ds
lret
jmp
mov
add
xchg
dec
push
addr16
rcl
setp
test
in
fidivrs
pop
sti
jg
mov
les
and
clc
jge
mov
fsubrp
sbb
loopne
test
add
cmpsb
lock
push
stos
scas
pop
pop
fmull
test
test
inc
inc
in
repz
cmc
out
add
imul
les
sbb
insb
adc
inc
and
lods
in
mov
fldl
pop
cmpsl
jo
popf
in
adc
rolb
inc
xor
lret
add
mov
push
ss
jne
mov
fists
pop
jge
aam
lea
fimull
mov
out
aad
pusha
pushf
lahf
hlt
lcall
jl
in
repz
mov
or
xchg
adc
rcrb
into
pop
mov
sahf
xchg
dec
mov
mov
in
ss
fsubrs
jecxz
jbe
loop
jnp
sub
xor
in
sbb
push
in
fwait
ret
sub
in
xor
push
psadbw
cmp
das
fwait
xchg
ljmp
sub
int3
ret
cmp
or
cld
pop
xchg
lods
pushf
mov
mov
mov
or
add
push
sbb
pop
fwait
push
xchg
adcl
pusha
dec
in
es
scas
jg
hlt
sbb
and
testl
pushf
mov
in
lock
mov
fisttpll
mov
adc
mov
icebp
cs
jnp
dec
scas
out
sarb
push
cmp
and
std
or
pusha
sub
in
test
sub
mov
push
loop
dec
jbe
xor
add
sahf
popf
mov
addl
inc
mul
ret
movsl
sub
loope
inc
call
std
jl
mov
xchg
and
aad
mov
lea
cwtl
cmc
into
mov
cmc
mov
sub
je
enter
in
pop
repz
test
mov
xor
aas
clc
cwtl
loop
mov
aas
push
mov
sub
push
fimuls
daa
cmp
les
out
jge
adc
test
ficoml
ret
sub
pop
xchg
push
mov
dec
jbe
mov
pop
fmull
cmp
dec
jnp
icebp
and
lea
fcmovu
jno
push
push
into
std
lcall
push
les
cmp
cmp
mov
xchg
popa
cld
mov
inc
and
mov
lahf
pop
push
mov
int3
xchg
sbb
and
insl
enter
push
fildll
ficoml
xchg
pop
adc
addb
test
fstpt
pop
sub
das
adc
push
ljmp
lcall
cmc
or
jo
gs
test
repz
test
mov
hlt
xchg
mov
jmp
lea
daa
and
or
lock
mov
clc
into
ds
push
lea
ret
jo
hlt
cmpsl
dec
xor
imul
push
shlb
outsl
dec
repz
enter
xchg
sub
fcomps
outsb
fidivs
mov
fsubl
repnz
sbb
stc
sti
std
addr16
add
sbb
and
int
inc
cmp
sub
je
mov
lahf
xor
gs
jo
iret
repnz
mov
movsl
popf
mov
and
ljmp
or
notb
mov
rcrb
out
test
fsubrs
sbb
push
dec
and
decb
jg
popa
rorb
xor
cmc
dec
dec
aaa
or
pop
loopne
lahf
mov
popf
cmp
mov
sub
pop
dec
xchg
gs
insb
and
add
std
cmp
push
adc
push
mov
in
pop
sbb
fstpl
sbb
lock
in
push
punpckhwd
fwait
inc
mov
push
xchg
xchg
lret
ljmp
test
jb
push
or
mov
arpl
and
sbb
sbbb
adc
mov
inc
add
in
hlt
icebp
jle
and
jp
fstps
dec
sub
fsubrl
jne
push
add
clc
cwtl
add
mov
jb
mov
call
arpl
sbb
mov
dec
dec
cltd
and
adc
sub
punpckhbw
sbb
xlat
popa
sub
push
arpl
xchg
adc
mov
imul
cmpsl
pop
data16
adc
adc
mov
pop
add
inc
sbb
adc
je
add
cmp
lea
mulb
rolb
fcmove
sub
psllw
pop
bnd
mov
popf
movlps
mov
jnp,pn
add
cld
push
xor
pop
mov
push
les
jle
cmp
nop
in
inc
dec
clc
out
test
push
mov
nop
or
adc
mov
jb
loope
mov
leave
mov
inc
sub
ja
leave
sbb
int
imul
hlt
fsubl
pop
cmp
xchg
hlt
or
push
cmp
mov
sbb
xchg
loopne
inc
inc
xchg
or
gs
jp
xchg
repnz
ds
jne
mov
dec
jge
scas
aaa
add
sti
jnp
and
push
mov
repz
or
xor
add
iret
leave
iret
xchg
dec
xchg
push
cmp
inc
popa
or
dec
lahf
sbb
adc
imul
jge
stc
jmp
cmp
cmpsb
inc
mov
sbb
loop
mov
mov
nop
mov
adc
inc
mov
cld
daa
pusha
xchg
xchg
iret
add
mov
or
ljmp
or
jbe
test
js,pn
push
lcall
adc
mov
sti
dec
pop
and
in
insl
inc
mov
stos
mov
xor
je
jnp
mov
xchg
iret
pop
cmpsl
cmp
or
dec
inc
cmp
stc
in
jmp
scas
xchg
das
mov
cmp
adc
dec
addl
lds
push
icebp
ljmp
icebp
mov
rcrl
or
fs
repnz
iret
sti
repnz
mov
sbb
shll
aaa
mov
cmp
stos
bndstx
mov
sbb
gs
rcrl
mov
dec
and
jecxz
out
adc
jns
pop
xchg
adc
insb
aad
cmpsl
jmp
jns
cli
shl
push
divb
xor
bound
in
inc
aaa
in
fldt
leave
xor
jbe
mov
ja
shll
or
in
and
fsts
inc
lock
popf
jno
popa
lret
ficompl
mov
or
insb
clc
iret
mov
push
gs
out
xchg
roll
xor
pop
mov
mov
jnp
fisttps
add
test
cmp
int
mov
adc
sub
mov
jl
lods
and
movl
lret
and
jge
leave
adc
mov
std
pop
push
xchg
lods
lods
leave
mov
xor
mov
pop
sar
inc
xor
mov
out
push
fnsave
imul
inc
xor
fisubrs
xchg
inc
dec
sti
fidivs
scas
xchg
out
cld
cmc
js
sti
xor
mov
xchg
cmpsl
xor
mov
in
loop
push
fisubrs
loopne
addr16
lret
pop
lods
push
stos
and
sti
sahf
insb
push
js
mov
dec
fstp
inc
aaa
mov
fdivrs
adc
xchg
lods
in
jp
aas
fisttpl
dec
gs
mov
popa
andb
out
testb
jp
push
cmpsb
rcll
movsl
pop
imul
sub
push
mov
inc
pop
icebp
addr16
fdivs
out
cmp
mov
xchg
dec
mov
test
popf
xor
roll
movsl
jo
sub
mov
adc
jg
pop
push
leave
test
ret
pop
xchg
ss
pushf
scas
fcmovnu
mov
push
icebp
push
or
aas
sbb
std
out
pusha
add
push
sahf
movsl
mov
inc
pop
adc
loope
jmp
fldenv
xor
mov
ja
out
imul
and
add
daa
ficomps
jo
mov
lret
xchg
mov
mov
ljmp
push
fmull
mov
clc
adc
imul
lahf
push
inc
insb
pop
pushf
inc
adc
sbb
mov
sbbb
mov
fucomp
pop
jmp
pop
sbb
stos
lcall
and
xchg
mov
mov
xchg
cltd
jp
testb
lcall
and
hlt
fstl
sub
mov
lods
jecxz
cld
sbb
lahf
add
mov
pop
add
iret
outsb
sahf
std
in
mov
nop
mov
je
mov
notl
cs
add
mov
mov
cmc
inc
inc
xlat
in
push
jae
mov
xor
push
dec
mov
cmp
jae
xchg
cltd
fisubrl
push
add
stc
mov
mov
mov
aas
fldenv
les
cmp
cmpsw
cmp
ja
push
shlb
inc
roll
dec
or
cmp
enter
bound
mov
adc
pop
push
fwait
jp
pop
in
lods
popf
in
sti
adcb
ss
mov
ds
sbb
sbb
lock
stos
popa
or
push
sub
jg
cmpsb
test
das
mov
xlat
stos
push
pop
inc
fisttpll
hlt
xor
call
inc
mulb
movsb
mov
cld
psrlw
js
int
movsb
inc
mov
mov
and
hlt
add
adc
push
xchg
cmc
or
lea
push
or
xchg
lock
push
mov
outsl
xchg
imul
pushf
test
and
sub
or
popf
xor
fsts
stos
sahf
jl
in
es
jg
and
ja
push
mov
add
dec
xor
lret
mov
sub
call
xchg
leave
lret
loopne
mov
cmp
out
dec
mov
sub
mov
mov
iret
push
inc
jbe
popf
outsb
dec
sar
mul
fstps
loopne
hlt
inc
fiaddl
insb
jp
pop
or
dec
and
int3
pop
or
outsb
sbb
or
sub
outsl
pop
les
mov
push
loope
andl
dec
mov
jecxz
das
pop
sbb
sbb
icebp
xlat
or
int
xchg
outsl
int3
scas
push
mull
mov
out
clc
out
lods
jno
std
xchg
lret
sti
scas
lret
xor
rorb
into
adc
mov
xor
sub
mov
out
clc
mov
push
enter
stc
lahf
or
lods
sbb
add
add
or
testb
cmp
adc
addr16
jne
pop
sub
dec
and
fs
cmc
cmpsl
lea
ds
shrl
rcrl
mov
mov
jno
push
das
daa
mov
into
lcall
pop
movsb
adc
push
int
cmp
xor
inc
mov
mov
mov
xchg
cmpsb
dec
xor
popf
inc
inc
stos
xor
dec
rcll
cmp
sbb
sub
pop
add
rcl
ds
jge
lods
and
test
cmp
and
adc
mov
pusha
push
addl
lods
sbb
int
std
shr
rcrb
sub
pusha
jge
insl
inc
popf
mov
mov
int
std
shr
rcrb
sub
pusha
jge
insl
inc
popf
mov
mov
pop
lock
std
shrb
sbb
adc
pusha
jge
insl
inc
popf
mov
mov
int
std
shr
rcrb
sub
lahf
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
cs
shll
popa
or
push
cmc
cmp
ret
inc
loope
mov
adcl
mov
inc
rcll
popa
icebp
jno
add
xor
rcll
loope
icebp
popa
cmpl
and
push
shll
jecxz
lods
adc
shll
adc
inc
fsubs
xor
test
mov
cmpsb
inc
or
lods
mov
sti
jmp
mulb
or
sbb
pop
scas
rcrb
xchg
adc
icebp
jge
pop
adc
sbb
jno
adc
ret
loopne
mov
jmp
iret
push
ret
jmp
outsb
sub
icebp
cld
je
xorl
mov
inc
adc
mov
xchg
out
jmp
xor
push
popf
rcll
xchg
pop
fnstcw
jb
aam
in
mov
xor
fnstsw
fsts
mov
popa
roll
add
icebp
fidivrs
test
fldt
lcall
adc
gs
xor
xor
jno
add
xor
rcl
xchg
popa
icebp
sub
xor
shll
aaa
iret
fs
out
dec
fdivs
add
add
shlb
jo
inc
aaa
xchg
and
les
mov
fbstp
xor
pop
pushf
adc
push
jbe
hlt
dec
enter
xchg
daa
mov
adc
rcll
loope
icebp
popa
adcl
mov
inc
rcll
popa
icebp
jno
add
xor
loope
icebp
popa
adcl
mov
inc
shll
push
cld
push
push
int
or
fucomp
sbb
pop
rcrb
adc
fbld
lods
mov
or
jb
mov
fnsave
pop
into
mov
pop
cmpsb
imul
pop
jmp
scas
idivb
mov
and
into
and
fstpt
xchg
and
lea
ret
dec
stc
mov
cld
pop
add
push
mov
mov
inc
jmp
push
lods
ss
dec
add
mov
add
outsl
ret
fldl
push
cli
jbe
loopne
cltd
scas
push
xor
push
lods
cmp
dec
insb
mov
mov
lods
mov
xchg
jg
inc
and
dec
cmc
lcall
xchg
das
mov
jmp
pop
sub
pop
ja
repz
cld
stos
jne
scas
enter
sub
in
stos
dec
call
inc
inc
adc
div
push
addr16
pop
mov
xchg
mov
ljmp
jmp
cmp
int
cld
popf
lea
test
add
pop
inc
fimull
hlt
inc
aam
cld
adc
pushf
inc
xchg
jbe
int
xchg
nop
fsubs
ja
in
adc
sbb
sahf
lea
mov
xor
sbb
in
xchg
leave
negl
mov
push
mov
dec
pushf
mov
dec
dec
mov
inc
adc
xchg
sub
nop
xchg
mov
fcompl
xor
jle
mov
subl
lcall
stos
jne
stos
push
lret
sbb
rorb
pop
leave
mov
pop
js
sahf
inc
sbb
in
mov
pop
xchg
and
lods
xchg
xchg
or
test
adc
sbb
jmp
lret
out
fildl
dec
fstps
mov
sub
cmpl
dec
addb
mov
mov
xor
cmpsl
leave
lods
leave
lods
pop
mov
mov
fbstp
shll
xchg
das
inc
outsl
scas
lock
test
lock
jne
mov
inc
or
dec
xchg
loop
or
out
scas
mov
sub
mov
add
inc
outsb
dec
sub
pop
pmullw
and
xor
mov
sbb
sbb
mov
mov
fcmovnu
lea
iret
mov
scas
sbb
out
jmp
out
push
pusha
ror
sbb
popf
add
adc
roll
mov
repnz
popf
mov
pop
mov
ret
pop
inc
cmp
js
xor
cli
dec
mov
lods
xor
and
fcompp
pop
cmpsb
lret
sbb
push
pop
lret
pushf
daa
push
or
ja
in
inc
push
stc
mov
ret
xchg
add
inc
mov
int3
xlat
adc
dec
sbb
sbb
mov
insl
and
scas
test
xor
int
sahf
xchg
jmp
dec
imul
xlat
div
lea
xchg
cmp
jmp
or
scas
and
push
push
icebp
adc
gs
xor
lret
in
pop
sub
mov
xchg
push
pop
cmp
rcrb
mov
mov
jmp
lahf
sbb
daa
stos
pop
pop
sbb
or
push
xchg
lret
nop
pop
ss
imul
xchg
jbe
out
in
fwait
gs
ficoml
outsl
fcompl
xchg
loopne
push
push
push
repz
dec
addr16
xchg
and
mov
sbb
adc
imul
js
aam
aas
repz
inc
inc
outsl
in
stc
cld
pop
mov
aas
pushf
adc
dec
test
push
adc
pop
subb
mov
push
inc
or
cmp
pop
pusha
adc
dec
dec
in
sub
call
pusha
cs
cwtl
inc
dec
xchg
fs
fisubl
dec
outsb
loop
mov
aad
xor
mov
mov
cs
andb
xchg
icebp
cmp
fbstp
ds
fsts
mov
cmp
lock
jmp
push
inc
es
sbb
ret
icebp
jb
test
loopne
mov
adc
cmc
shl
iret
aas
adc
aas
fdivrl
into
and
out
in
xchg
mov
cld
jne
pop
sbb
jge
cmpb
sbb
addr16
ret
ss
out
fidivl
mov
sahf
fs
fsubr
leave
jne
lods
cld
hlt
mov
push
jno
shl
fldl2e
add
lods
inc
addl
cmp
xor
push
adc
mov
int
fwait
dec
cmc
dec
insl
push
inc
adc
mov
jno
mov
xlat
sub
cld
or
dec
push
in
sub
addr16
out
fwait
push
xchg
inc
mov
jb
movsl
sbb
fstpt
sti
mov
shlb
cmp
js
push
and
out
mov
mov
jp
and
pop
xchg
jns
cli
mov
in
pop
push
xor
stc
add
jbe
mov
xor
nop
aad
push
lods
dec
inc
and
scas
push
adc
cmp
inc
fbld
sbb
loope
push
sub
jbe
lods
test
ds
jnp
cmpsl
sar
or
mov
add
push
mov
mov
add
mov
mov
aam
sbb
out
int
lret
xor
mov
push
sub
pop
push
or
pop
dec
adc
rolb
push
add
xor
es
or
or
fidivrl
mov
add
xlat
jge
sbb
pop
mov
scas
inc
mov
lods
jp
push
xchg
call
mov
mov
icebp
sbb
xchg
cmpsb
xchg
jo
cmp
les
pop
cmp
adc
add
out
jmp
mull
pop
push
fbstp
jl
pushf
dec
test
xor
cmp
outsl
dec
in
add
cltd
mov
in
dec
inc
pop
lret
je
xchg
lcall
repz
cs
mov
dec
or
sbb
test
push
xchg
sbb
push
rep
pop
cmp
jb
mov
imul
mov
sub
sub
xor
ss
jo
icebp
cmc
pusha
jo
loopne
jle
mov
rcll
push
add
jge
int3
mov
lret
movsb
jl
lret
out
pop
push
subb
mov
loopne
push
mov
scas
mov
mov
ret
mov
add
inc
push
sub
mov
or
aad
cmc
adc
adc
dec
icebp
xchg
mov
jl
xor
ret
and
mov
mov
rcr
cwtl
cmpsl
push
lods
out
mov
mov
jge
or
adc
cmp
into
jl
clc
outsb
mov
sbb
mov
mov
push
loopne
int3
daa
add
lods
lret
pusha
cmp
cmpsb
push
xor
and
jp
mov
pop
push
test
inc
aam
mov
jp
fs
lds
fimuls
dec
xchg
imul
jle
xchg
mov
xor
xor
jmp
add
outsb
mov
lods
orb
jl
cmp
loopne
xor
icebp
sbb
push
jg
fwait
bound
rolb
add
cmp
test
cmp
mov
aas
adc
aaa
lcall
out
adc
mov
cmp
adc
sub
pop
jmp
int
lods
mov
icebp
jo
fisubrl
fsubrl
lods
pop
cmpl
rolb
sub
push
in
pop
add
clc
jae
pop
pop
icebp
fwait
fwait
cwtl
mov
mov
rclb
mov
xchg
cmp
stos
sbb
xchg
push
in
mov
pop
add
pop
icebp
repnz
ret
pop
outsb
pop
xlat
aas
sub
mov
test
jbe
mov
or
sub
mov
mulb
push
xor
or
pop
inc
cwtl
lcall
insl
out
lahf
jp
xor
inc
iret
fldt
imulb
mov
into
jno
sbbl
jb
imul
inc
inc
push
sub
sti
in
aam
ja
in
push
in
test
loopne
sub
cmp
mov
mov
mov
scas
mov
adc
push
xlat
xchg
mov
jecxz
lods
push
adc
movsb
jg
test
adc
sahf
xchg
out
adc
adc
fwait
cmpsb
xor
js
sub
pop
or
jp
sahf
cmp
xlat
ss
dec
sub
or
int
pop
mov
lahf
iret
popa
push
les
pop
mov
mov
imul
lcall
cmp
shll
adc
movsb
stos
aad
mov
push
idivb
pusha
enter
pop
enter
jl
dec
movsb
cmp
adc
out
or
testl
sub
or
out
call
adc
js
lret
pushf
dec
insb
mov
into
push
jb
mov
add
mov
push
addr16
arpl
sub
xor
inc
shrl
push
dec
cli
daa
mov
popf
xlat
inc
mov
fsubr
mov
stos
fbstp
popa
pop
les
mov
inc
scas
xchg
fidivl
push
in
and
mov
and
xchg
jmp
loope
rclb
inc
mov
js
xchg
push
cmp
decb
test
hlt
inc
icebp
loopne
push
call
and
mov
repnz
push
inc
pop
test
sub
aam
sarb
clc
xor
mov
xor
into
lock
insb
into
gs
pop
mov
mov
xchg
in
add
dec
sub
xchg
mov
stc
sti
xchg
push
pop
mov
call
pop
divps
std
test
push
icebp
jl
jo
xor
fistpll
vpcmov
fisubs
les
and
mov
addr16
jnp
pop
nop
jmp
aas
test
rolb
or
mov
aad
fistpl
mov
adc
push
inc
pop
test
adc
jo
stc
mov
clc
mov
sub
bound
cmp
mov
jb
sbb
xchg
jecxz
dec
cmpsl
push
jg
inc
inc
ret
push
faddl
mov
mov
orb
mov
ja
repnz
and
mov
cltd
andb
clc
test
in
loop
repz
mov
pop
or
lods
nop
jno
push
and
push
fisubrl
rcrb
pop
ja
test
outsl
cwtl
lahf
stc
into
fmull
cmp
into
pop
mov
push
sub
jb
movsb
lret
leave
rcl
lea
jl
mov
push
add
dec
xor
push
pop
adc
sarb
sub
or
pop
xchg
hlt
add
cltd
sbb
addr16
jl
fdivs
xchg
push
mov
dec
std
xor
inc
mov
jecxz
es
cmp
add
mov
mov
dec
sub
jae
out
daa
jg
mul
popf
sbb
scas
pop
jbe
imul
push
xchg
cli
loop
arpl
mov
mov
inc
sub
mov
add
setno
pop
popa
cmp
movsb
jecxz
sbb
or
and
cmp
stc
mov
push
outsb
jb
lcall
mov
in
fistl
aad
pop
movsl
push
in
rol
shlb
es
incl
sbb
inc
pop
mov
nop
mov
ljmp
es
pushf
adcb
pushf
mov
and
arpl
cmpb
mov
cltd
mov
movsl
les
adc
fs
pop
inc
xor
push
add
testb
inc
and
jb
shl
aad
push
decb
adc
ret
pushf
movsb
out
xor
std
mov
xchg
incl
mov
mov
clc
test
xlat
push
inc
popa
sub
cmpsb
addb
cs
lods
or
mov
lock
inc
jns
imul
xchg
incb
jp,pt
mov
insb
jb
jb
js,pn
ss
mov
fcmovnbe
outsb
xchg
shl
lret
xor
xchg
fimuls
mov
rcll
lcall
jecxz
insl
inc
cmp
add
push
flds
push
jl
scas
sbb
cmp
std
lcall
lock
leave
xor
mov
adcb
movsl
jmp
popa
rcrb
rcl
sub
jo
ds
enter
insb
mov
jns
or
cmp
cmpsl
push
fcmovnb
cmp
lods
sub
fiadds
dec
xor
cli
and
clc
mov
xor
mov
inc
rcll
outsb
ljmp
mov
aaa
sti
icebp
lods
add
mov
push
cmp
es
jg
lods
jns
adc
add
test
in
and
adc
mov
fidivl
enter
or
mov
pop
jle
mov
icebp
popa
jbe
pushf
cmp
sbb
mov
xchg
push
test
and
out
ffree
sub
mov
dec
das
sbb
mov
daa
outsb
dec
movsl
jnp
ljmp
outsl
aad
cmp
xor
inc
pop
cmpsl
les
mov
test
xchg
shlb
lock
inc
call
setae
or
jmp
add
push
inc
aad
xchg
dec
jmp
adcl
cmpsl
inc
popa
jmp
or
sub
lods
cmp
push
daa
divb
adc
pop
dec
cmp
out
xchg
xchg
cltd
push
xchg
jmp
mov
xor
xchg
push
xchg
outsb
push
je
jno
popa
pop
jnp
dec
fdivrl
lds
push
xor
js
arpl
gs
lock
pop
jmp
shl
add
popf
fstpl
pop
mov
sub
es
pusha
aam
aad
push
inc
pop
adc
xor
mov
in
stos
loop
push
jp
or
out
dec
pop
sub
out
ljmp
in
lods
aas
popf
data16
js
mov
xchg
cwtl
stos
jge
frstor
sub
notl
dec
pcmpgtd
add
insb
push
mov
mov
js
jle
inc
stos
in
stos
pop
pop
push
lret
sub
dec
adc
sub
push
ficoms
data16
pop
jo
xlat
mov
and
add
pop
push
rorl
sbb
lods
stos
stc
sahf
pop
test
push
insl
divb
xchg
sti
adc
push
nop
mov
inc
adc
xor
push
lock
in
or
jbe
add
mov
adc
push
pop
imul
push
fs
imul
sub
mov
scas
adc
ljmp
adc
repz
xorl
mov
mov
or
push
cmp
movsl
leave
jnp
jno
cmc
push
adc
or
roll
fisttps
insl
pop
movsb
gs
adc
xchg
inc
fldenv
sbb
aad
cmp
sub
sub
outsb
sbb
iret
dec
std
bound
mov
roll
push
incb
lahf
out
xchg
pop
cmp
inc
insl
cmp
cmc
or
pop
dec
push
and
pop
cmc
xchg
rcrl
sub
out
xchg
add
loopne
mov
out
loopne
or
cs
xchg
or
fsubl
xchg
in
pop
pop
in
xor
ljmp
xchg
filds
mov
mov
jns
pushf
jbe
popa
push
test
test
mul
scas
stos
roll
and
cmpsl
rcr
iret
mov
mov
or
out
nop
rolb
subl
lahf
out
sbb
dec
mov
mov
ljmp
lahf
loope
mov
pop
sbb
sarb
fstpt
mov
jge
jae
movsl
iret
adc
aas
xorb
mov
xchg
movsb
shr
sub
idivb
mov
addr16
mov
dec
into
dec
lahf
ret
bound
pusha
mov
cmpsb
inc
mov
lock
push
das
xchg
imul
pop
mov
cld
push
cmp
cwtl
in
gs
mov
pop
lods
add
sub
cmpl
jge
add
jae
pushf
lret
cmp
cld
in
xchg
imul
mov
fldl
mov
movsb
and
imul
dec
mov
fstpt
imul
mov
or
add
xor
mov
movsb
mov
dec
scas
jle
in
popa
push
jns
les
xor
jne
cltd
adc
push
xor
mov
jle
nop
popf
push
sar
cmp
mov
rorl
lock
popf
lret
jecxz
arpl
lcall
std
xchg
repz
in
jle
aas
xchg
or
fildll
pop
imul
inc
test
mov
stos
stos
ret
leave
aaa
pushf
cli
andb
inc
dec
cld
mov
xchg
fiaddl
push
scas
iret
push
sub
rolb
loopne
push
inc
cli
mov
mov
push
push
movsl
adc
aas
jge
scas
mov
sbb
xlat
push
inc
sub
jp
mov
mov
push
aas
fstl
push
cmp
stc
jp
jg,pt
jne
add
fwait
rcrl
loope
xchg
adc
rcll
loope
icebp
popa
adcl
mov
inc
rcll
popa
icebp
jno
add
xor
loope
icebp
popa
adcl
mov
inc
rcll
popa
mov
add
xor
loope
lock
adcl
mov
inc
rcll
popa
icebp
jno
add
mov
ds
cs
jno
push
negb
dec
fmulp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
add
xor
push
push
mov
mov
push
push
add
push
mov
mov
mov
mov
push
push
push
push
push
push
push
movb
call
pushl
mov
push
call
pushl
call
xor
inc
ret
adc
outsb
mov
clc
addr16
dec
mov
leave
mov
into
and
sbb
or
dec
scas
dec
push
mov
outsb
mov
stc
push
jmp
mov
into
sub
sbb
or
pop
scas
dec
test
test
push
stc
inc
jmp
fidivrs
mov
addr16
cmp
ds
cmc
outsb
fnstcw
lret
xchg
inc
dec
push
cmp
sub
aad
inc
gs
inc
lock
sbb
cmpsb
lahf
lea
sbb
dec
jmp
stos
inc
pop
sub
add
add
xor
loope
sbb
test
out
dec
xchg
mov
daa
dec
add
or
pop
adc
popa
xchg
push
dec
aam
test
xor
mov
push
stc
icebp
test
lret
lds
mov
imul
andl
push
jp
leavew
push
sahf
cmp
out
or
into
jns
xor
test
andl
mulb
push
xlat
inc
cmp
sub
sbb
cmp
pop
mov
test
push
stc
dec
jmp
sub
pop
sub
sbb
or
jns
imul
fadds
enter
popf
sub
dec
xor
or
jmp
lds
shll
lods
push
mov
out
pop
fwait
jle
pop
in
sbb
dec
cmp
sbb
push
cld
das
icebp
pop
lret
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
xor
or
and
sub
push
iret
pop
lods
out
inc
aam
mov
jl
daa
ret
mov
ficomps
jmp
orl
push
lock
jge
xchg
mov
push
fmull
idivl
push
xor
inc
out
cmp
xchg
mov
daa
outsb
outsl
jb
xor
jle
xor
hlt
sbb
idivl
and
jns
pusha
pop
or
add
jp
inc
in
adc
lock
push
cmp
sub
mov
xchg
imul
loope
imul
movsl
pop
cld
negl
push
sub
lcall
mov
xor
jo
enter
jl
xchg
insl
sub
je
int3
scas
mov
inc
int
jne
divb
inc
ljmp
dec
sbb
adc
fldcw
mov
addr16
int3
ss
icebp
inc
lret
movsb
shrl
adc
sub
jle
jl
sub
imul
data16
bound
cmp
lret
dec
outsl
jp
dec
fdivrs
lahf
and
fidivrs
cmp
sub
outsb
cmpsl
nop
jo
lahf
shll
roll
lahf
cs
scas
loope
leave
or
pushf
ljmp
and
ljmp
dec
sarb
std
cwtl
add
and
popl
jmp
imul
fidivl
insb
das
push
mov
inc
jmp
and
movsb
test
cmp
mov
jg
shl
mov
bound
push
in
pop
out
cmp
push
jae
add
mov
and
or
sbbl
mov
jmp
aaa
nop
xor
push
or
or
fsubrl
pop
lahf
int
aam
movl
icebp
mov
clc
ja
or
cmc
pop
sbb
out
jns
cltd
jno
pushl
and
ljmp
loope
jge
pop
lret
sarb
pop
rorb
je
sub
mov
pop
or
test
mov
inc
fists
fimull
stos
jne
jmp
xlat
sbb
inc
inc
xchg
into
outsl
push
dec
ja
push
or
negl
lods
fwait
push
sub
sub
jge
es
aad
jle
adc
xchg
mov
gs
cmp
jne
push
ret
pop
push
mov
inc
fdivrl
nop
inc
push
ja
jmp
push
push
push
test
aad
test
out
xchg
lds
mov
in
mov
inc
mov
lds
sbb
scas
out
sub
popl
xchg
jmp
cs
cmpsl
fistpl
lods
js
jb
das
lret
push
push
test
repnz
mov
out
call
imul
fwait
dec
js
scas
or
sub
es
outsb
jno
or
adc
clc
hlt
jle
test
int
popf
cmpsb
idivl
jge
rcrb
cmp
adc
jge
jge
xlat
pop
addr16
pop
push
ss
add
sti
push
into
dec
jmp
call
and
lahf
into
pop
or
pop
mov
rorb
and
cld
imul
lds
lcall
and
clc
sub
xchg
sub
or
loope
dec
jne
inc
popa
sar
sahf
stos
das
pushf
scas
xlat
mov
pop
xorb
int
inc
mov
pusha
mov
pop
gs
push
xchg
sub
daa
inc
cld
xchg
inc
or
cmc
sbbl
and
mov
dec
jno
ja
and
mov
icebp
sahf
outsb
roll
out
add
loop
aas
mov
jbe
xchg
ret
sub
das
pop
adcb
pop
xlat
icebp
addb
jne
sbb
cld
mov
imul
jne
in
test
mov
shll
fs
and
lock
xor
shr
daa
out
push
orl
sarl
addr16
xor
xchg
rcrb
mov
adc
cmpsl
push
jecxz
loop
je
lods
lahf
out
lret
test
loop
mov
imul
sub
testl
cmp
bound
xor
xor
dec
inc
inc
jo
push
movb
mov
mov
and
popf
sub
add
imul
out
loope
loope
xchg
add
or
lods
sarb
and
xchg
xor
push
and
popf
mov
cmp
fidivrl
fcomi
mov
pop
jae
mov
dec
and
jg
pop
sub
pop
shlb
jl
mov
ja
cmp
sbb
xchg
dec
jbe
mov
xchg
es
mov
jae
or
test
and
jns
ljmp
mov
xchg
jecxz
sub
mov
aaa
sbb
ficomps
shll
xor
push
out
inc
insl
jo
testb
rclb
cmpsb
fnstcw
mov
popa
in
int3
jnp
mov
dec
int
cmpsl
stc
outsb
add
push
pop
adc
xchg
and
dec
popa
daa
xor
scas
jmp
out
cli
dec
adc
iret
sbb
fs
and
push
pop
inc
sbb
out
inc
fsts
in
shl
sarl
cmp
or
inc
jg
mov
js
push
pushf
out
aaa
mov
shll
cmpb
add
cmp
jb
ss
sbb
mov
mov
pop
loopne
xchg
stos
push
push
lcall
repnz
test
sbb
pop
and
dec
lcall
xor
in
test
add
orl
pop
sar
int
mov
add
push
push
es
mov
dec
xrelease
cld
ss
jle
mov
mov
add
sarb
in
jne
pop
cmp
negl
and
or
or
rorl
and
xchg
adc
movsb
decl
shl
jl
mov
fisubrs
push
aaa
gs
jp
jne
mov
aam
adc
dec
lds
call
push
scas
inc
int3
das
movsb
jmp
mov
cmp
mov
div
ljmp
push
nop
jle
xchg
rorb
hlt
pop
sub
adcb
imul
enter
or
stos
add
jp
out
adc
sbb
xor
xchg
adc
dec
cltd
cmpsb
repz
mov
mov
sti
in
jno
shll
add
xor
cli
lods
int3
dec
scas
test
xchg
mov
cwtl
cmp
ficomps
stos
int3
rcll
inc
mov
mov
and
mov
andb
jae
loop
in
adc
xor
and
mov
fildl
push
xchg
out
out
mov
jecxz
fiaddl
jno
adc
popa
scas
out
es
fcmovnbe
inc
popf
mov
mov
sub
mov
rcl
cli
mov
insb
loope
pop
jb
mov
test
scas
mov
xor
adc
sbb
mov
icebp
mov
push
xchg
pusha
pop
jmp
cmpsb
jp
xchg
ret
das
int
jbe
rol
lock
out
pop
test
push
insl
adc
int
sub
dec
mov
sbb
sbbb
sub
mov
and
sbbl
push
push
arpl
xor
jnp
jae
jnp
rclb
lock
push
js
loopne
xor
inc
fcmovne
aas
push
mov
adc
cs
cltd
xchg
loopne
pushf
sbb
mov
loop
xchg
repz
testb
jl
dec
xchg
je
push
jo
rcll
pop
dec
push
testb
xchg
pop
aam
xor
mov
cli
nop
cmp
mov
lret
fisubl
jl
cs
fwait
std
jno
cmc
repnz
push
testl
cmpsl
ljmp
cld
mov
push
lea
inc
push
movb
test
lcall
inc
in
mov
jl
lret
mov
mov
cltd
bound
and
xorl
arpl
push
xlat
and
nop
sar
mov
pop
sub
in
lods
lret
and
push
sub
push
pusha
mov
push
enter
push
leave
aaa
sarb
push
inc
push
add
fmull
data16
dec
rorb
lea
inc
movsb
mov
int
sub
test
icebp
sahf
or
out
adcb
js
jae
in
sbbb
imul
ljmp
aas
pop
sub
aas
stos
pop
add
sbb
jle
mov
out
mov
xchg
in
mov
inc
imul
mov
push
sahf
add
jne
popa
sbb
lret
bound
cmp
dec
outsb
xlat
add
or
shll
xor
add
cs
mulb
ret
cld
and
mov
cli
push
rcll
test
clc
jo
out
jno
cltd
dec
inc
scas
pop
arpl
mov
mov
push
mov
sbb
inc
or
imul
mov
jo
repnz
inc
pop
sub
mov
mov
lea
jno
repz
lds
enter
sbb
insl
cld
es
push
fdivrl
scas
mov
adc
iret
push
pop
cmp
inc
push
sahf
push
push
lret
mov
adc
cmpsb
cmp
xchg
and
repz
fs
xchg
sbb
and
cli
data16
lahf
out
stos
xchg
dec
add
fidivl
out
iret
and
andl
push
cs
sti
dec
stos
pop
in
mov
aad
xchg
arpl
loope
and
filds
and
mov
je
xchg
mov
stos
and
jb
pop
dec
xor
xchg
xor
out
jmp
subl
adc
gs
imul
dec
pop
scas
sbb
out
pop
out
pusha
jns
loopne
mov
fcomp
sbb
mov
inc
into
jmp
pushf
nop
lds
jmp
psadbw
xchg
jmp
ffree
sub
xorl
fs
and
repnz
std
ljmp
lds
jmp
in
xchg
scas
imul
dec
inc
xchg
inc
mov
mov
mov
or
lock
sarl
ljmp
outsb
dec
lock
pop
repz
xor
mov
sbb
jnp
sarb
movsl
std
add
pop
jnp
sub
xor
insl
dec
repnz
fisubl
fistpl
and
mov
push
int3
add
inc
pop
daa
dec
add
xor
adc
and
push
pop
sbb
mov
xchg
and
cmpsb
es
dec
out
in
icebp
sbb
pop
pushl
sbb
es
aaa
push
xchg
add
bound
push
xchg
idivl
and
fwait
int
jmp
mov
lahf
cmp
repz
outsl
enter
mov
sbb
cmp
sub
push
fstpt
xchg
cwtl
and
xor
sti
sub
sbb
lods
push
push
insb
pusha
jne
ret
cli
sub
push
sub
mov
dec
mov
fimull
cmp
dec
mov
jmp
mov
pop
imul
or
push
sub
inc
lds
out
or
stos
fidivrs
push
inc
ret
les
leave
scas
xor
pop
push
into
outsl
repnz
xor
call
in
pop
jle
push
or
sub
and
jl
lds
mov
fcomip
mov
mov
fs
and
push
loop
les
mov
sti
cwtl
adc
dec
sti
cmpb
xor
add
fdivrs
cs
neg
insl
add
lea
inc
pushf
add
aam
test
icebp
fbld
lea
in
jae
pop
sahf
jle
jp
xor
jo
xor
test
pop
mov
and
add
rcl
adcb
negl
xchg
add
movsl
call
sbb
lret
push
inc
push
ljmp
ret
movsb
cmp
mov
fisubs
insb
cmp
xor
movsb
xor
pop
add
pop
repz
stc
sub
dec
jnp
xor
xchg
dec
xchg
arpl
sub
fsubl
push
or
sub
scas
sbb
sahf
test
mov
repz
pop
sbbl
dec
ret
ds
sbb
mov
incb
mov
mov
mov
xchg
or
xchg
imul
sahf
addb
jle
and
and
sbb
cld
mov
cltd
pop
dec
enter
sti
mov
lret
es
es
cmp
dec
pop
add
pop
je
pop
pop
loope
orb
fists
fld
sarl
jo
mov
cmpsl
aad
insl
jbe
or
imul
and
fistpl
or
xor
inc
lret
add
dec
fsubr
mov
lret
addb
sbb
fs
jne
pop
sub
ja
cmp
xlat
xchg
sub
dec
sub
push
fwait
iret
loopne
lods
dec
mov
ss
inc
lret
test
stos
icebp
cmp
mov
pop
lock
je
push
int3
xchg
push
jge
scas
popf
stc
test
hlt
lods
fdivr
mov
xchg
and
jmp
fs
loop
jno
mov
jge,pn
stc
int3
add
ret
scas
imul
movsl
xlat
sti
fistpl
scas
js
insl
sbb
xchg
fldcw
mov
insl
aad
and
testb
adc
cmc
jle
in
shll
cmp
movsl
cmp
jo
inc
les
pop
jno
mov
adc
adc
int3
dec
arpl
loopne
jno
clc
pop
add
es
loope
call
sahf
mov
xchg
cmp
mov
ss
mov
stc
push
fs
adc
adc
inc
mov
push
movsb
cmp
cmp
pop
inc
test
call
pushf
test
ret
xor
testb
sub
push
cltd
outsb
ja
push
cli
aas
mov
idiv
adc
into
jg
in
mov
xchg
mov
lret
inc
jmp
adc
xchg
jge
ror
ret
les
dec
jg
clc
dec
xchg
rorl
ret
lret
insl
push
xor
mov
sbb
push
adcb
jo
mov
fildl
int3
in
fmuls
je
adc
loop
enter
sarl
xor
cwtl
ds
mov
mov
pop
mov
in
sbbl
mov
cmp
cli
mov
ret
cmp
int3
insl
lea
arpl
adc
cltd
pop
jnp
aad
scas
sti
sti
adc
push
daa
xchg
repz
push
jmp
sbb
fisttps
mov
add
push
pcmpeqd
dec
xor
in
shll
stc
xchg
xchg
stos
das
int3
sbb
xlat
push
fs
mov
or
xchg
mov
adc
not
stos
and
idivl
adc
popf
shr
icebp
inc
jle
clc
mov
stos
daa
mov
shll
dec
adc
add
rcrl
mov
sub
mov
int
hlt
outsb
jp
xchg
fdivrp
adc
in
adc
xchg
mov
insb
sbb
and
mov
imul
scas
nop
sub
ja,pt
jle
jmp
xchg
ret
arpl
xchg
lds
fiadds
in
sbb
cmp
jmp
dec
pop
jg
leave
or
sub
scas
jge
dec
sbbl
xchg
test
dec
lahf
stos
in
dec
jne
sbb
inc
jge
mov
addr16
mov
movsb
inc
mov
inc
pop
jp
mov
sbbl
popf
ja
xor
pop
mov
mov
data16
push
imul
sbb
sub
lahf
mov
aam
adc
cmc
pushf
sub
adc
scas
add
cwtl
cltd
or
sarb
mov
add
lret
lods
xchg
fisubs
shrb
insl
mov
out
lret
pop
jge
outsb
data16
jno
stos
mov
icebp
sbbb
repz
outsb
jg
sub
sub
adc
rcrb
add
cmp
stc
ja
outsl
mov
aas
dec
jg
sbb
sbb
call
icebp
add
dec
jno
int
sub
push
push
cmp
mov
leave
inc
pop
ret
sub
sbb
adc
out
push
push
test
mov
les
test
loopne
nop
mov
mov
push
mov
adc
lcall
test
xor
loopne
cli
mov
cmp
in
pop
xor
sbb
mov
push
mov
fs
es
ret
idiv
in
fnstenv
lock
xor
mov
mov
push
daa
xchg
jbe
pop
xor
xchg
out
das
outsl
and
jne
and
xchg
outsb
jle
and
ds
xor
xchg
das
shll
ret
gs
add
rclb
mov
jecxz
ficoml
inc
pushf
ret
push
pop
adc
lds
jle
adc
mov
xchg
int
jl
and
add
lcall
stos
sbbl
jecxz
in
mov
in
cltd
jb
push
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
push
jmp
fidivrs
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
stc
or
fldcw
leave
fidivrl
into
sub
sbb
or
pop
sahf
dec
inc
mov
inc
mov
stc
push
jmp
fidivrs
xor
jmp
cmpsb
push
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
dec
enter
call
sbb
inc
test
pop
leave
dec
sti
insb
leave
js
sbb
inc
mov
fmuls
dec
clc
imul
cmp
leave
dec
popf
js
push
mov
rcll
loopne
lock
ds
pop
ret
add
jl
dec
rolb
dec
mov
adc
dec
or
inc
and
add
xorl
les
icebp
jns
fsubrp
idivb
inc
loopne
adc
in
and
enter
inc
or
push
adc
mov
fistpl
or
mov
outsb
insl
mov
loop
cmp
sbb
ror
sub
mov
and
stc
movl
and
sbb
std
sub
ss
sub
xor
mov
xor
push
lods
mov
add
bound
add
xor
and
xchg
xchg
pop
xor
cs
iret
dec
fdivrs
jle
or
xor
loope
lock
add
sub
fsubrs
sbb
or
jmp
lods
aaa
leave
dec
mov
cmc
jge
or
push
int3
inc
pop
mov
mov
insl
cwtl
addr16
push
int3
insb
lcall
pushf
push
push
test
enter
lods
popa
stos
or
fstps
dec
stc
js
push
mov
fmuls
jns
imul
cmp
leave
dec
stc
js
push
mov
fmuls
ljmp
pop
or
aam
xchg
gs
inc
aas
arpl
in
fdivl
cmp
push
xchg
adc
aam
jl
inc
ret
repnz
popa
push
xor
mov
popa
inc
mov
sub
rol
js
adc
mov
jmp
loop
jo
xchg
nop
je
or
pop
jmp
mov
cli
mov
not
jne
loop
ficoml
insl
inc
std
or
loop
jo
in
into
cmp
addb
xchg
pop
andl
jb
test
mov
and
divb
sub
aam
cmp
dec
fisttpl
sahf
out
or
inc
pop
jae
jl
je
and
test
pop
pusha
lahf
dec
xchg
clc
dec
dec
push
xchg
inc
test
jp
ret
xlat
dec
jl
cmp
xchg
cmp
loop
adc
clc
rcrb
sarb
inc
les
and
xchg
data16
xchg
popf
jle
imul
mov
pop
mov
lea
xlat
or
inc
iret
daa
movsb
push
popa
cmp
sub
xchg
inc
cmp
dec
dec
nop
push
and
dec
cwtl
dec
sahf
mov
jnp
enter
xor
mov
addr16
loope
gs
cmpsl
mov
xchg
fistpll
mov
hlt
pop
hlt
addr16
mov
cltd
repz
in
push
aam
shrl
insl
mov
aas
imul
test
pop
cli
mov
lret
lds
stos
mov
lods
add
bound
lret
in
and
repz
lret
pop
ljmp
fs
sub
lcall
roll
cmpsl
or
jp
mov
sub
push
mov
lahf
aad
out
dec
enter
push
fcmovnb
mov
jl
mov
movsl
fistpll
outsl
lea
mov
cmp
das
mov
stos
xlat
pop
data16
mov
iret
mov
aas
pop
dec
lahf
ret
icebp
out
sbb
loope
repnz
cld
lcall
cmc
xchg
or
lea
and
inc
rorl
mov
sub
test
xor
jno
lock
pop
sbbb
enter
xchg
push
cmpsb
lret
cmp
arpl
jb
sub
stos
fidivrs
ds
iret
sbb
mov
inc
in
mov
inc
ret
sbb
or
lods
lahf
js
push
outsb
lret
adc
xorl
pop
add
fwait
inc
push
jo
sarb
jbe
cmp
fwait
pop
add
test
in
call
adc
mov
mov
fstpl
mov
mov
bndldx
lret
scas
loop
addr16
out
add
rcrb
lods
faddl
ljmp
imulb
push
lret
shrl
mov
pop
add
add
mov
test
call
clc
shl
mull
mov
adc
fcoms
aad
xchg
sub
xor
sub
adc
ljmp
push
mov
idivb
test
sbb
psubb
es
inc
mov
xor
out
adc
popf
adc
lods
cmp
mov
cli
jb
push
loop
shlb
ds
test
xchg
cmpsb
sub
cli
leave
jno
sub
ljmp
cmpsb
xchg
fcoms
sub
cmp
mov
fnstenv
rolb
cmpsb
mov
or
or
out
cmc
stos
nop
pop
pop
and
mov
fbstp
inc
imul
mov
jmp
push
jg
cli
das
add
push
cmp
cs
stos
pop
cltd
cmp
sbb
mov
adc
and
mov
jo
insb
jmp
es
sbb
gs
js
test
sub
add
imul
scas
mov
cwtl
repnz
add
lret
xor
outsb
mov
xor
pop
xchg
or
or
xchg
mov
loopne
dec
aas
xor
pop
pop
cmc
xor
cmp
adc
les
in
xchg
pop
into
push
sti
jl
sbb
pop
push
xchg
mov
popf
mov
cmp
and
jg
jb
stc
insl
fiaddl
es
int3
adc
pop
mov
mov
adc
hlt
cltd
sahf
jmp
mov
adc
xchg
cmp
xor
mov
inc
push
sub
not
test
and
pop
movsl
rol
mov
shlb
pop
ss
xor
jecxz
sub
shlb
pop
mov
sub
fdivrs
jecxz
js
add
aam
jo
sbb
mov
sti
fdivl
mov
mov
add
inc
jb
sti
pop
dec
xlat
add
cmp
leave
dec
jns
in
push
out
jg
int
sub
inc
sti
sub
sti
and
add
pop
mov
lahf
into
jno
and
mov
xor
pop
loope
sbb
loopne
cwtl
sarl
add
inc
pop
mov
outsl
mov
pop
jmp
movsl
in
mov
xor
pop
pop
fdiv
mov
mov
lret
cld
ror
lock
sti
fwait
mov
loopne
pop
inc
jbe
sub
jle
pop
loope
adcb
xchg
adc
mov
inc
pop
xchg
push
ljmp
cmp
mov
int
aaa
imul
and
ret
sbb
das
mov
int3
imul
or
mov
cmp
into
sub
call
std
jge
fdivs
je
mov
imul
aas
and
sub
mov
arpl
cli
das
pop
mov
mov
xor
xchg
daa
dec
xor
jecxz
pop
fnsave
push
mov
xor
cmp
test
xchg
cmpb
push
and
jo
xchg
aas
mov
psubsb
js,pn
aaa
pop
fs
in
xchg
pop
mov
mov
sbb
lret
jo
adc
push
inc
fs
popa
or
and
mov
sbb
push
cmpl
pop
sub
push
dec
sub
xor
and
add
lods
lock
or
pop
lds
inc
ds
dec
mov
push
lock
aad
sbb
cmpl
sub
jbe
mov
push
lods
jbe
fldcw
mov
into
mov
push
daa
jp
cmp
mov
xor
and
out
stc
lret
pop
mov
inc
loopne
jle
sub
js
sbb
addb
sub
cmp
or
jb
sbb
ljmp
jo
sub
fistl
xor
scas
cmp
sbb
push
aaa
mov
mov
add
mov
lock
xchg
add
out
shl
sahf
data16
out
push
mov
sbb
imul
mov
iret
dec
pop
dec
xchg
out
push
movsl
cmc
andb
sbb
test
mov
fdivs
int
or
sbb
pmulhuw
aas
mov
popa
push
sub
out
das
sub
pop
xchg
pop
xchg
jns
or
push
popa
cmpsb
es
iret
test
and
mov
sbb
dec
in
out
aaa
pop
mov
lret
out
cs
sbbb
and
dec
test
lret
std
mov
lea
aas
jno
cs
into
dec
pop
stos
sbb
lea
stos
stc
into
push
or
dec
or
inc
movsb
std
mov
ja
div
or
xchg
push
and
push
cmpsl
sbb
aaa
std
pop
jnp
xchg
dec
lcall
jg
mov
and
loopne
xchg
mov
sub
xor
fldenv
jp
xor
sbb
add
and
lahf
loop
pop
inc
mulb
gs
sbb
fistps
arpl
jmp
das
out
jg
xor
pop
sbb
add
fs
and
mov
push
cmp
mov
inc
xchg
icebp
cmc
lock
add
push
inc
xchg
push
push
jmp
fdivl
pop
push
test
lods
int
out
les
test
xor
pop
in
gs
xchg
mov
gs
mov
mov
or
in
lds
data16
mov
mov
dec
enter
add
pop
jnp
mov
stos
mov
lcall
ror
and
aam
adc
mov
adc
movsb
push
pmuludq
jae
push
dec
push
inc
adc
cmp
or
shll
mov
inc
mul
cld
push
inc
out
mov
jp
push
and
loop
and
xor
push
std
loopne
into
dec
sub
xor
add
jmp
sbb
bound
nop
sarb
inc
das
push
sti
aaa
sarb
pop
roll
lods
nop
cmpsl
mov
je
push
mov
jne
sti
dec
jb
cmp
jne
call
sub
adc
or
sbb
mov
test
jb
xor
int3
xchg
subb
pop
cli
aad
inc
shll
nop
pop
cmp
addl
cmp
scas
mov
sbb
xor
pop
ss
cmc
xchg
pop
jp
lea
or
test
ret
pop
mov
xchg
out
cmp
pop
addl
data16
xor
push
sti
sub
ds
ret
fld
pop
int
inc
xchg
and
out
std
pop
mov
sbb
gs
aad
push
pop
dec
aam
adc
arpl
adc
test
movsb
xlat
imul
bound
loope,pt
add
ja
jne
pop
imul
fyl2x
testl
jge
jecxz
sti
subl
pop
and
jno
add
cwtl
arpl
cmp
aam
push
xor
fcmovnu
jle
test
lcall
je
popf
pop
pop
repz
and
lods
pop
and
pop
inc
cmp
cmpsb
jg
jl
xchg
lea
add
mov
sub
jo
sbb
mov
mov
scas
gs
addr16
cs
cli
sbb
adc
mov
mov
inc
push
andl
mov
push
jne
push
mov
jp
int
jmp
ss
mov
push
mov
movsb
push
cmpsl
xor
dec
inc
enter
aaa
cwtl
dec
inc
inc
adc
cmpsb
push
popa
xchg
cmp
sbbl
cmp
mov
push
mov
pop
xchg
ret
pushf
je
repz
imul
dec
cmp
mov
cmp
imul
jecxz
es
out
mov
or
pop
sub
add
pop
in
scas
and
pop
unpckhps
pop
xchg
popf
or
mov
or
repz
xor
xor
jbe
jbe
jle
mov
out
or
sarl
fdivs
xchg
mov
pop
sbb
jge
mov
iret
flds
mov
and
sbb
jae
es
bound
xchg
mov
in
cmpl
test
adcl
lahf
pop
sbb
and
cmp
cmp
cmp
cmp
jns
and
pop
cmpsb
push
lahf
mov
das
jb
lret
rcr
sbb
mov
inc
cmp
xlat
pusha
aaa
lret
adc
stos
push
std
and
test
out
insl
jns
or
sub
inc
pop
jnp
xor
push
cmc
lock
cmpsl
ss
ljmp
mov
jecxz
pop
xor
in
or
loope
insb
cld
sub
aam
enter
mov
mov
ficoml
dec
push
mull
xchg
push
mov
mov
fcmovnb
mov
or
bound
ss
mov
cmp
add
mov
loope
jb
loope
xor
insl
fimull
push
in
loop
stc
mov
repz
dec
sbbl
adc
pop
cmp
adc
pop
jbe
cs
ljmp
inc
mov
ror
ret
fdivl
jecxz
fsubr
orl
bound
je
outsl
jg
test
sub
pop
inc
dec
add
daa
stos
cmpsl
imul
push
lods
xchg
dec
inc
icebp
popf
mov
shrb
jecxz
sbb
mov
cs
sbb
xor
icebp
mov
jmp
dec
inc
pop
adc
adc
pop
sbb
push
bound
jge
add
cmpsl
sbb
aam
insb
cs
sbb
xor
filds
popa
sti
pop
scas
mov
mov
cli
adc
add
mov
jno
xchg
and
es
daa
inc
jae
inc
xchg
loopne
movsl
cli
lret
in
jg
mov
imul
sub
pop
mov
adc
bound
pop
movsl
lock
sti
push
sub
sub
sub
and
int
push
stos
mov
sub
jae,pt
push
cmp
and
inc
dec
pop
xchg
shrb
dec
add
mov
insb
and
fs
mov
mov
inc
mov
imul
adc
iret
mov
je
and
aam
dec
jb
hlt
repz
or
call
push
pop
jmp
or
in
imul
leave
subl
inc
in
jae
in
jo
push
sub
stc
aas
daa
and
sbb
add
adc
lret
insb
sbb
mov
xor
fwait
imul
pop
mov
inc
repz
mov
dec
fucomp
jg
lret
loop
xor
rcl
push
adc
jbe
mov
js
in
add
enter
pop
dec
xor
add
mov
daa
jecxz,pt
mov
jmp
stos
xlat
mov
cmc
jl
gs
jp
lods
and
out
iret
mov
dec
fcomps
or
cmc
mov
mov
mov
repnz
adc
or
and
and
jmp
mov
jbe
in
mov
testl
mov
xchg
cmpb
and
lds
popf
add
sub
outsb
inc
sub
fs
push
shrb
aam
jae
dec
outsb
mov
inc
mov
sub
pushf
movsl
xor
fisubrl
in
jno
push
jne
aad
popf
ds
enter
jo
rorb
std
mov
les
mov
sahf
std
sbb
jle
push
or
scas
xor
test
les
jmp
arpl
roll
jae
xchg
loope
aaa
mov
dec
bound
jge
adc
enter
sbb
mov
insb
addr16
sbb
jg
clc
or
push
dec
movsb
inc
sub
push
orl
mov
cmp
xchg
mov
xor
sbb
paddsb
push
lds
or
test
or
add
sbb
jmp
jl
shrl
sbb
insb
cs
cmc
xchg
lea
jge
movsb
jmp
mov
xchg
adc
bnd
pop
test
mov
stos
loopne
sbbl
sub
ss
fsubs
or
fwait
lods
lret
pminub
dec
out
test
aas
sub
repz
sahf
mov
gs
insl
push
aaa
cld
dec
xchg
mov
movsb
outsb
lret
and
sbb
mov
data16
dec
call
cmp
pop
scas
into
ja
and
cmp
pop
sub
pop
xor
les
lods
pop
lcall
mov
sbb
mov
rorl
mov
xor
js
inc
jno
push
fs
int
mov
pop
test
add
jo
jnp
lea
or
enter
div
push
hlt
or
lods
xchg
cmpsb
das
inc
pusha
dec
mov
fucomi
inc
jmp
test
loope
mov
push
fistl
fs
sbb
jle
adc
mov
jl
sbb
es
incb
mov
add
lock
push
rcr
sarb
cmp
in
ljmp
ja
enter
inc
xchg
fistpl
push
fidivrl
jo
ret
mov
int
add
clc
cmp
sbb
or
outsb
test
std
adc
xor
test
cs
cwtl
add
jo
ret
dec
test
cmp
xor
idivl
pop
in
xchg
fstps
dec
cwtl
push
call
and
pop
cmp
jp
jne
out
dec
cmp
je
or
push
movsl
es
sti
out
mov
loopne
out
ficoms
clc
adc
mov
in
add
shl
xchg
loope
pop
xor
stos
hlt
mov
sub
xchg
xlat
faddl
dec
cmc
pop
xlat
imul
cmp
arpl
and
and
sbb
pushf
xchg
into
daa
xor
call
adc
cmp
in
addr16
push
push
xchg
clc
lret
inc
adc
adc
mov
or
popa
mov
sub
mov
fcompl
gs
test
sub
dec
cs
notb
add
dec
outsl
jae
test
mov
mov
sbb
test
xchg
rclb
xor
or
sbb
pop
xchg
lods
bound
sub
pop
mov
imul
cmp
sbb
xchg
add
cs
into
hlt
call
in
pop
pop
push
dec
dec
pop
jne
push
adc
leave
fists
jle
jle
sbb
xor
ja
cmpsl
ret
test
jae
data16
pop
xchg
mov
inc
arpl
jae
imul
cmp
leave
dec
stc
js
push
mov
fmuls
jns
imul
cmp
leave
dec
stc
js
push
mov
fmuls
jns
imul
cmp
leave
dec
std
js
insb
cltd
sbb
sub
fdivrl
dec
cld
imul
mov
pop
ss
js
pop
out
nop
add
inc
push
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
insb
aam
orb
cwtl
mov
loope
nop
adc
inc
fsubl
adc
pushf
and
rorb
sub
cmp
or
sbb
cld
push
cld
inc
int3
js
pusha
lods
mov
mov
pushf
and
gs
push
push
xchg
xor
mov
fbld
adc
rolb
inc
add
mov
cmp
int
fildl
mov
movsb
enter
iret
lods
imul
addl
test
pop
push
test
mov
pop
imul
lods
pop
mov
sbbb
jl
jns
inc
fdivr
mov
jo
sahf
in
jecxz
cld
mov
pushf
out
shrb
hlt
js
roll
sub
stc
and
add
pushf
pop
cmp
icebp
cmp
shll
in
pop
lods
jae
pop
int3
nop
sub
push
jp
adc
test
pushf
aas
or
jae,pt
rclb
add
mov
mov
jmp
fcompl
dec
test
nop
sub
or
add
call
mov
movsb
out
xchg
sub
sub
in
inc
lds
in
adc
add
icebp
dec
add
sub
inc
ret
or
dec
xchg
scas
xor
push
lods
pop
xlat
add
push
clc
push
or
xor
fdivrl
or
sbb
in
push
cld
inc
int3
jo
pusha
lods
adc
insb
sarb
lock
loopne
nop
cmp
or
sbb
in
push
cld
inc
int3
jo
pusha
lods
adc
insb
rclb
repz
push
inc
testl
and
pop
mov
je
sub
push
cli
push
mov
jo
mov
divb
sub
and
pop
pop
stc
add
mov
jge
icebp
xchg
stos
je
mov
bound
sub
xor
xchg
mov
mov
add
or
jb
sbbl
push
clc
dec
rcl
ret
lea
bound
sub
js
mov
leave
mov
cld
leave
iret
ret
outsb
in
jle
orl
in
sbbb
pcmpeqb
or
mov
enter
add
cmp
and
nop
fabs
pop
add
xchg
add
xchg
dec
sarb
rcll
sarb
cmp
xchg
or
mov
inc
xchg
subl
jb
jo
dec
outsl
shlb
dec
xchg
outsb
xchg
or
out
out
sbb
lods
push
push
mov
push
mov
int
mov
and
les
insb
inc
push
push
xor
imul
lods
fs
jp
int3
int3
arpl
pusha
mov
das
inc
lret
sbb
adc
dec
stos
out
stc
mov
xchg
mov
daa
mov
cli
mov
into
add
sub
mov
add
jne
mov
xchg
sub
ja
add
fwait
nop
sbb
stc
xchg
pop
xchg
and
insb
push
xchg
sti
adc
imul
lea
adc
dec
subl
sub
lock
nop
xchg
les
jg
test
add
out
ret
push
mov
les
lds
outsl
scas
test
jmp
xor
xor
jbe
mov
cli
imul
pop
add
dec
jb
xchg
lock
test
adc
inc
push
mov
jg
les
xor
jge
sbbl
stos
cmp
push
mov
xor
mov
out
orl
jb
pop
in
enter
adc
add
js
mov
leave
scas
dec
mov
mov
out
fmull
mov
push
mov
jecxz
outsl
mov
lret
xchg
pop
mov
and
sub
push
in
sahf
push
push
daa
jb
add
or
dec
jecxz
push
clc
and
xorb
clc
sarl
cmp
or
out
std
cmp
or
push
fisubl
and
aad
mov
inc
and
daa
ss
cmc
rcrb
inc
lret
push
sbb
inc
cwtl
sahf
dec
mov
mov
hlt
in
jmp
jb
xchg
shlb
sub
call
inc
push
inc
fucomp
jns
mov
das
sub
or
std
in
mov
adc
stos
aas
sbb
xchg
xchg
je
inc
sbb
xchg
ljmp
push
movl
fwait
cmp
xchg
cmp
xor
xchg
stos
das
pushf
sarl
lods
stos
push
scas
mov
js
ja
push
xchg
push
dec
mov
mov
xchg
inc
stos
test
push
lods
pop
cmp
and
xorb
ljmp
mov
or
cltd
mov
movl
imull
out
loope
mov
and
repnz
rcrl
insl
fcomps
inc
imul
or
mov
pop
xor
dec
jp
and
inc
cmp
push
sub
popf
stc
loop
lds
sbb
test
add
jo
pop
xchg
lds
pop
jns
scas
cltd
out
mov
jmp
inc
les
sub
push
mov
cltd
mov
roll
adc
push
lock
mov
add
mov
jne
pop
sbb
das
mov
sbb
mov
loop
add
mov
hlt
repnz
fcmove
popf
es
jl
cld
xchg
ret
dec
daa
test
mov
aad
stos
xchg
popf
jecxz
inc
push
pop
arpl
imul
mov
dec
push
and
movsl
add
and
fcmovbe
mov
pop
insl
fs
ds
in
popf
jae
cmc
xorl
jno
mov
int3
sub
xlat
mov
leave
rcr
or
pop
adc
je
and
sbb
sbb
dec
sbb
int
xchg
adc
sub
pop
xor
inc
push
inc
je
out
shlb
mov
jg
fmull
rolb
aaa
imul
call
ret
adc
lret
movsl
pop
and
cmpsb
popa
arpl
mov
xor
push
je
test
daa
sub
jae
inc
adc
adc
cmp
cmp
mov
pop
pusha
xor
loop
or
lods
mov
std
sbb
jne
add
xchg
fidivrl
jae
ja
out
and
and
mov
imul
xchg
rol
dec
fmull
ret
sub
imul
adc
sbb
loopne
dec
jl
enter
push
jae
mov
sarl
sub
pop
push
pop
rorl
paddusw
and
push
sbb
xchg
fs
rcrl
xchg
mov
outsl
sti
adc
adc
cmpsl
imul
xlat
jmp
enter
cld
jecxz
pop
jo
rcl
xchg
pushf
sbb
lret
and
jp
sub
stos
pop
ret
fs
adc
mov
orb
ret
sub
loopne
gs
jnp
mov
push
add
xchg
outsb
jb
pushl
jo,pn
add
or
jge
lods
pop
jge
subl
mov
adc
xchg
cld
stos
dec
add
adc
push
in
lahf
imul
arpl
es
into
sbb
fwait
mov
scas
mov
sbb
cmpsb
cltd
movsb
cltd
pop
popf
jp
jmp
out
push
test
dec
stc
clc
test
sbb
mov
push
les
inc
add
movsl
mov
add
jp
test
aad
and
stos
stos
pop
and
aam
data16
adc
or
jae
push
jmp
insb
cmp
pushf
pop
test
sbb
and
nop
add
shl
mov
data16
jbe
mov
and
sub
ljmp
mov
js
scas
fnstsw
pop
mov
jp
fsubrl
mov
lea
je
mov
out
out
sbb
adc
xlat
add
add
and
imul
je
out
fnclex
sub
pop
mov
fs
cwtl
fs
icebp
sbb
movsl
pop
popf
adc
lret
cmp
mov
cwtl
xor
stos
inc
push
in
bound
sti
add
fadds
mov
dec
sarb
icebp
xor
inc
loopne
shll
jns
enter
inc
push
mov
sahf
add
pop
pop
sbb
xchg
sarb
push
rcl
pop
pusha
mov
push
xor
pop
lret
sub
jbe
xor
stc
in
das
cmp
movsb
testl
testb
cwtl
lods
and
add
sub
xchg
xchg
mov
cmpsb
xor
test
add
mov
mov
bound
dec
imul
pop
jmp
lods
xchg
dec
mov
in
mov
je
or
mov
xchg
fstps
xchg
xchg
dec
jg
lret
and
loopne
cmc
xchg
jb
add
jo
mov
push
push
adc
push
mov
or
jl
je
xor
dec
loopne
cltd
cld
test
sub
mov
mov
cmpsl
mov
jbe
testb
push
aaa
hlt
testb
mov
adcl
lcall
scas
scas
mov
std
and
cmp
xchg
mov
mov
mov
push
test
stos
lahf
xor
test
cmpsb
jg
iret
dec
adc
adc
xor
fadds
insb
sub
popa
mov
aaa
fcmovbe
cli
orl
out
mov
test
pop
mov
fdivl
loope
roll
mov
xchg
lds
enter
sbb
add
xor
pushl
xor
cmovae
int3
inc
jecxz
cmpsb
jmp
and
stos
jns
ja,pt
das
call
jne
mov
je
movsl
clc
pusha
fstpl
jecxz
pop
dec
cld
insb
pop
mov
incl
dec
call
in
or
clc
add
es
mov
mov
xchg
dec
jae
inc
mov
repz
stos
rep
add
pop
mov
into
pop
adc
movsl
xor
dec
jae
cmp
dec
dec
pop
stos
enter
pop
fidivs
mull
and
push
shll
stos
cmp
test
data16
add
or
stos
pop
cld
adc
scas
imull
pop
lds
and
sti
jmp
lods
insb
pop
jo
fcoml
cwtl
stos
aaa
call
dec
push
pop
mov
sbb
out
jnp
add
jns
mov
push
test
xor
lret
mov
movsl
lcall
adc
sub
cmp
idivb
popf
mov
sub
ret
sti
xor
inc
into
push
add
into
mov
mov
movsb
and
pop
iret
xchg
xchg
aad
filds
insl
jno
push
in
insb
test
sub
ror
jnp
sub
outsl
dec
pop
cmp
inc
inc
jmp
xor
mov
xlat
dec
xchg
jo
mov
jp
fdivs
jmp
mov
pusha
add
sbb
xor
push
mov
jns
in
push
xor
test
cmp
es
mov
push
mov
mov
sahf
rorl
xor
imul
inc
adc
cs
jge
dec
push
add
fistps
out
inc
div
aaa
push
xchg
push
loop
ss
sbb
ret
jmp
testl
inc
lret
sub
jecxz
ljmp
jp
sub
fst
and
mov
push
mov
jnp
sbb
mov
mov
lahf
add
sti
mov
insb
fcomps
cli
mov
cmp
loope
pusha
movsl
lahf
mov
cmc
nop
push
sub
mov
out
clc
push
ds
push
outsl
aad
jnp
loope
sbb
jecxz
inc
xchg
pop
or
out
jns
nop
mov
inc
adc
dec
mov
fwait
cltd
jg
adc
inc
sub
mov
inc
insl
rorb
iret
out
cld
fwait
push
or
dec
inc
xor
insl
mov
dec
mov
add
rcrb
inc
jbe
outsl
rcll
xchg
push
int3
dec
inc
loop
xchg
push
out
in
adc
jne
xor
stc
pusha
movsb
and
in
cwtl
shll
jmp
roll
lea
push
jo
das
jb
xchg
repz
int3
jl
fnstsw
sub
iret
insl
sbb
pop
mov
scas
push
mov
dec
nop
mov
iret
pop
pop
dec
xorl
xchg
xor
sahf
int3
pop
lahf
ja
dec
mov
mov
dec
and
mov
test
nop
ret
add
dec
jecxz
lret
push
hlt
stc
repz
and
ds
ret
lea
push
cwtl
mov
int
xor
xlat
cltd
jno
jns
push
inc
fxch
shrl
mov
shrb
ret
dec
sub
aam
add
mov
inc
xchg
push
jo
orb
sub
movsb
in
insl
add
enter
pop
sahf
cli
jmp
add
or
push
pop
int
pop
stc
pop
arpl
lods
test
cltd
xchg
ds
mov
mov
mov
cld
push
inc
fiaddl
lock
out
pusha
adc
fldenv
iret
cmp
inc
and
mov
xchg
ficoms
dec
or
mov
xchg
inc
sbb
push
imul
sbb
sub
icebp
add
xor
cmp
rorb
ja
and
test
mov
push
adc
xchg
mov
xor
add
xchg
sbb
xor
mov
in
mov
imul
xor
push
sbb
cli
in
lods
lods
jb
mov
popf
mov
shlb
mov
cmp
lahf
cmp
sub
lea
mov
js
dec
push
sub
or
mov
mov
add
push
sub
cvtps2pd
fsub
scas
jge
cli
js
stos
push
dec
enter
push
mov
jae
jmp
jo
sub
popf
pop
shlb
dec
xchg
repnz
jmp
cli
inc
mov
mov
in
jnp
xor
sub
pop
ljmp
push
mov
dec
daa
pop
inc
xchg
leave
mov
mov
pop
dec
mov
push
push
pop
inc
nop
inc
xchg
xor
sbb
add
xchg
cltd
aad
sbbl
mov
mov
cmp
inc
das
std
dec
outsb
cli
xchg
cmpsb
adc
in
inc
xchg
inc
hlt
mov
lahf
sahf
pop
push
jp
mov
pop
pop
sub
ljmp
aam
pushf
daa
cmp
mov
xchg
push
rclb
mov
sti
mov
sti
mov
xlat
icebp
mov
out
xor
cmovp
dec
mov
pop
mov
mov
les
push
mov
lea
in
push
add
clc
loop
jns
out
dec
mov
cld
js
cld
repnz
shrb
iret
jl
sub
jg
and
sbb
in
lahf
sub
lahf
push
cmp
jmp
fildll
pop
dec
xor
xchg
out
scas
inc
mov
cld
fwait
cs
outsb
loopne
inc
mov
or
jnp
repz
les
mov
rorl
xchg
jne
push
fcompl
test
sub
cli
sub
jmp
call
popl
dec
mov
push
imul
sub
pop
les
xor
clc
jmp
add
jmp
ljmp
push
out
imulb
fidivrs
push
cmc
push
pushf
out
sbb
or
into
mov
mov
sbbl
pop
pop
cmp
std
std
iret
sbb
scas
ret
popf
addr16
nop
pop
xor
aas
jmp
repz
mov
xor
push
push
mov
adc
push
sbb
ljmp
in
rorb
pop
dec
repz
inc
jle
mov
lea
out
pushf
ja
or
xchg
mov
adc
lahf
stos
push
adc
or
mov
outsl
pushf
mov
jmp
aad
sti
flds
in
mov
add
jns
or
imul
xchg
jp
mov
cwtl
sbb
popa
lcall
xchg
jg
mov
dec
dec
out
add
scas
sub
cmp
syscall
cmp
jl
or
pop
jg
aas
addr16
sbb
dec
pusha
std
xor
js
loop
or
daa
cmp
pop
aam
mov
mov
mov
or
ret
pushf
mov
pop
or
fcomi
sbb
xlat
mov
sub
push
xchg
cmpl
jcxz
inc
xchg
leave
dec
movsl
xchg
dec
aam
popf
xchg
cld
jae
and
in
loope
jo
push
imul
cmp
test
imul
cmp
and
mov
cli
and
or
test
sarb
sub
push
add
dec
test
outsl
into
fdivrs
rsqrtps
mov
dec
and
push
mov
out
repz
inc
mov
jnp
mov
adc
xchg
fstpl
sub
mov
insb
test
mov
cmp
cld
mov
fwait
pusha
jb
rolb
push
sti
mov
ds
sub
pop
es
int3
and
iret
mov
iret
mov
xchg
or
loop
into
ds
nop
insl
xor
fwait
cmp
aam
dec
mov
push
pop
in
daa
imul
sub
pop
dec
test
inc
push
fstl
sbb
xchg
mov
sub
daa
pop
push
idiv
sub
add
fistpl
mov
test
mov
insl
or
fs
cltd
imul
push
pop
jl
sahf
in
sbb
imul
adc
dec
xchg
push
jl
inc
mov
std
fcoms
xor
ret
int3
dec
cwtl
ljmp
add
add
rol
xchg
push
push
aaa
or
xchg
and
add
add
in
sub
jl
dec
lock
jnp
and
adc
decl
popf
inc
xchg
pop
push
fsubp
mov
ficompl
rcll
cmc
sbb
dec
adc
mov
int
add
sbb
add
and
jo
hlt
xchg
xor
lock
dec
aam
aaa
imul
pop
out
clc
mov
push
and
cmc
xchg
js
cmp
hlt
loope
and
mov
pop
fdivl
inc
cmp
or
repz
push
cmpsl
das
loop
sti
ljmp
sbbl
dec
inc
lahf
push
dec
sar
xchg
and
pop
les
dec
aas
dec
inc
psubd
xchg
icebp
cmpl
out
cmp
adc
sti
imul
scas
inc
sbb
mov
aam
ds
mov
mov
lock
je
aam
mov
add
loop
loop
out
add
inc
cmc
pop
loopne
nop
cmp
or
sbb
in
push
cld
inc
int3
jo
pusha
lods
adc
insb
sarb
lock
loopne
nop
cmp
or
sbb
in
push
cld
inc
int3
jo
pusha
lods
adc
insb
aam
into
dec
call
cmp
or
sbb
in
push
cld
inc
int3
jo
imul
jle
dec
adc
mov
mov
pushf
pusha
adc
fcoml
fldt
js
dec
arpl
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
mov
stc
mov
xchg
mov
leave
dec
cmp
push
jns
in
cmp
dec
leave
mov
stc
mov
fnstcw
dec
or
jns
or
imul
mov
stc
mov
fnstcw
sub
jge
or
jo
or
push
dec
mov
imulb
or
mov
enter
dec
sub
push
mov
pushf
out
push
sub
xchg
push
and
int3
mov
cmpsb
xor
hlt
test
or
test
or
sbb
mov
lea
and
or
aas
flds
test
push
lods
cltd
sub
push
adc
test
pop
loop
inc
imul
dec
xchg
cmp
es
mov
stc
xchg
cld
jmp
lds
cmp
jns
pop
imul
xor
fsts
jl
imul
imul
pop
scas
sub
dec
xchg
mov
stc
mov
fnstcw
sub
jns
or
imul
popf
test
lret
jmp
and
push
jno
dec
jge
push
sbb
or
cltd
mov
in
mov
lea
inc
xor
adc
inc
sbb
jns
sbb
icebp
fldlg2
enter
test
cmp
imul
sbb
pop
cmp
mov
stc
mov
fnstcw
sub
jns
or
imul
mov
stos
into
cli
xor
outsb
pusha
test
push
out
adc
mov
aad
inc
imul
sub
das
push
dec
rclb
outsl
mov
add
push
xor
add
imul
es
inc
lahf
inc
mov
outsb
adc
jge
add
pushl
mov
out
and
out
dec
mov
nop
mov
adc
lret
push
mov
lods
ret
shlb
ret
das
pushf
mov
ja
push
push
cmpsb
cwtl
adc
add
cltd
sbb
mov
cs
sbb
test
sub
insb
pop
xor
push
inc
jno
jo
add
and
mov
inc
int
push
or
pusha
jg
and
xchg
push
enter
lds
xchg
je
inc
sar
and
cmp
jle
jne
lds
push
jns
ljmp
mov
fpatan
cli
bound
je
sbb
fcomps
test
jp
ret
or
mov
sub
cmpsb
imul
rol
add
jl
mov
fnstcw
mov
notl
shr
sbb
aas
imulb
aad
dec
sub
pushf
lahf
leave
icebp
inc
xchg
and
pop
mov
xchg
or
lea
test
pop
push
push
xchg
pop
push
stos
inc
loop
subl
cmp
mov
ret
nop
rclb
ja
xor
dec
inc
movsb
inc
adc
mov
sbb
mov
out
xchg
adc
loopne
aaa
push
inc
int3
mov
jnp
inc
ret
jne
lods
cmp
mov
mov
movsb
test
sub
push
push
mov
sbb
sbb
ljmp
cltd
xor
fcoml
xchg
scas
push
xchg
mov
dec
and
test
lds
aam
scas
sbb
test
cmp
lret
sbb
mov
aad
dec
push
bound
int
push
cwtl
sti
jb
pusha
mov
mov
push
adc
shr
int
into
sbb
push
test
add
cs
push
mov
jmp
mov
loopne
jecxz
cmpsb
mov
sub
scas
cld
cltd
dec
leave
mov
jmp
iret
popf
arpl
outsb
inc
xchg
out
mov
shlb
xorl
xorl
gs
out
mov
lods
lock
mov
lock
inc
popa
ret
add
imul
dec
adc
loope
mov
pop
dec
xchg
inc
push
adc
insl
popf
icebp
test
xor
mov
js
test
aad
add
xchg
mov
test
fnsave
jecxz
mov
jno
cmpsb
mov
add
xor
push
xchg
cpuid
aaa
jns
sbb
dec
int3
mov
jle
jmp
xor
mov
jl
dec
inc
popa
or
mov
sbb
les
push
add
xorb
sbb
lods
and
mov
jle
cmp
lret
fsubrs
fbstp
mov
pop
cmp
jne
std
push
daa
mov
sbb
fs
movsl
mov
icebp
cmpl
daa
xchg
loopne
dec
test
aaa
sbb
and
pop
inc
inc
in
popf
jl
pop
lods
push
dec
sbb
pop
mov
push
clc
xor
testb
dec
or
fcompl
or
rcl
adc
push
subl
jo
push
daa
dec
ljmp
push
insb
out
mov
sbb
dec
and
dec
lcall
repnz
dec
arpl
sub
aam
int
jmp
inc
outsb
stc
and
sbb
jbe
pop
pop
push
mov
and
jge
fbstp
lret
fists
orl
add
lds
pop
mov
popf
push
sbb
dec
push
shrl
mov
adc
rorl
rcrl
addr16
sbb
mov
mov
adc
xor
je
push
or
push
pop
pop
fnstenv
push
and
pop
insb
inc
mov
test
push
in
hlt
lock
into
or
push
iret
jae
call
or
jo
dec
bound
adcl
lret
cmp
dec
cmp
ja
push
icebp
shl
lahf
and
mov
lock
out
push
addr16
cmp
ffreep
mov
push
inc
and
or
jge
dec
loopne
sub
scas
pop
mov
mov
mov
xor
pushf
mov
ret
xchg
adc
repz
push
mov
push
push
rolb
in
push
mov
add
rcrl
rcl
fidivl
adc
int
dec
dec
out
out
xchg
add
add
dec
xchg
fs
imul
pop
sbb
out
fisubrl
cs
call
pop
call
in
leave
jge
shrl
in
imul
shlb
in
je
mov
addr16
push
adc
orb
pop
cmpsl
scas
insl
jnp
ja
jl
mov
push
pop
imulb
jge
mov
nop
xlat
mov
cwtl
or
repz
cwtl
push
out
and
arpl
insb
mov
cld
mov
mov
or
mov
mov
jo
out
popf
or
daa
mov
push
xchg
lea
mov
mov
jae
and
sahf
jo
ja
inc
add
rclb
cld
dec
xorb
add
dec
add
sbb
mov
sbb
fmull
add
inc
jne
xor
sub
aam
popf
and
pop
jle
jl
sarl
imul
push
negb
inc
push
add
cld
in
pushf
shlb
in
ds
jg
sti
roll
mov
adc
mov
in
mov
sbb
ror
in
mov
sbb
test
in
mov
xcrypt-ctr
cmpsl
lcall
lcall
mov
push
test
push
inc
inc
add
mov
test
pop
clc
xchg
xchg
xchg
xor
dec
pop
inc
popf
sarl
xor
lahf
pop
add
in
inc
enter
int3
ljmp
or
in
lcall
cmp
cmpsb
int
sbb
mull
mov
lods
stos
aas
fidivs
ret
cli
push
das
pop
lcall
das
das
stc
imul
and
nop
cs
inc
dec
cs
inc
test
aad
xor
xor
jp
mov
lods
mov
mov
mov
pop
and
xor
sbbl
loop
pop
sub
lods
je
xor
hlt
mov
add
mov
and
aam
xchg
dec
out
cmp
fisttpl
cli
xor
mov
leave
mov
lods
jmp
ss
jg
mov
xchg
les
stos
xchg
fs
push
sbb
cld
movb
outsb
cmp
hlt
lea
rorb
mov
mov
jg
pop
inc
jp
add
lcall
dec
or
sub
inc
inc
adc
inc
push
cli
loope
xchg
fcomi
xor
out
and
adc
inc
add
mov
pop
sbb
push
mov
jb
push
insb
stos
out
idivb
sub
inc
jnp
push
and
or
rorb
pop
fdivr
nop
lods
xchg
xor
shll
imul
push
fnsave
cmpsb
sbb
out
add
sbb
jge
cld
and
mov
inc
cmc
repnz
mov
cmpsb
jp
push
add
imul
movsl
xor
fidivrl
xchg
mov
imull
fistpl
scas
push
or
push
pop
dec
xchg
in
fimuls
pusha
out
dec
clc
fcoml
cmpsl
push
hlt
xchg
je
xchg
xchg
pop
jb
add
xchg
ljmp
pop
adc
add
add
popa
cmp
arpl
cmc
pop
stc
xor
out
dec
xchg
stc
push
rclb
mov
mov
outsl
push
lahf
pop
mov
jle
mov
pop
jmp
sub
ret
or
dec
outsb
aad
insl
popf
insb
inc
rcrb
mov
add
or
xor
jmp
jl
xchg
loop
aaa
inc
test
pop
and
std
sub
andb
mov
ljmp
dec
sti
xor
lods
dec
pop
nop
cmpsb
sahf
mov
aam
lock
xor
mov
sub
inc
push
sub
mov
dec
pop
and
call
shll
xlat
insl
loop
jbe
adc
mov
jg
aad
popa
in
aaa
out
aaa
and
jmp
das
roll
movsl
fwait
mov
push
mov
hlt
in
mov
fchs
mov
push
dec
mov
dec
push
cli
decb
ljmp
and
cmp
jbe
or
sub
mov
adc
or
call
mov
push
aaa
divb
jno
cld
dec
gs
imul
push
add
icebp
jae
lahf
inc
out
repnz
mov
push
xor
sub
inc
mov
xchg
sti
out
iret
test
bound
fstp
sub
inc
jo
bound
adc
mov
cwtl
in
xchg
sbb
or
int3
push
popf
out
dec
jne
aas
and
fucomp
sub
loop
enter
and
daa
cmp
jbe
lcall
aad
clc
mov
or
adc
pop
rol
cmp
ds
fdivl
jmp
lahf
push
jne
cmpsl
jle
rcrl
xlat
mov
add
cmp
test
push
xlat
fwait
jg
sub
lret
in
pop
les
push
rcrb
cmpsb
and
fucom
idivb
fsubs
popa
fsubs
lea
adc
sub
sbb
fdivrl
sahf
lret
xor
pop
add
in
rorb
lcall
jns
inc
clc
pop
mov
stos
repz
mov
xor
bound
pop
rep
lods
fnstenv
and
or
bound
jp
mov
adcb
add
mov
sbb
mov
and
push
andl
sti
inc
ljmp
push
test
cmpsl
lods
imul
add
rclb
mov
fcmovu
sbb
cmp
sub
add
js
sub
inc
scas
or
mov
xchg
xchg
xlat
pop
dec
loope
mov
ss
stc
mov
test
test
orb
aas
int
mov
js
into
mov
mov
adc
xor
aas
pop
repz
add
push
cmc
orb
jmp
jmp
arpl
mov
mov
mov
jmp
cmp
mulb
insl
ljmp
jge
cli
or
cmpsb
push
xlat
and
decl
add
and
sahf
insb
jg
aam
repnz
rol
xchg
jb
test
xchg
fwait
in
daa
jp
hlt
lods
ja
pop
add
fsubrl
jge
push
in
scas
and
cwtl
sbb
mov
call
jecxz
loopne
cld
insb
jo
inc
imul
dec
sub
or
xchg
inc
movl
sub
movsb
pop
xor
mov
mov
lcall
lahf
mov
cmp
jl
cs
pop
imul
jg
outsb
mov
stos
subb
and
adc
push
push
test
lret
dec
shrb
push
icebp
cli
js
inc
inc
cmp
aam
jnp
rcrb
mov
int3
push
pop
shr
fldl
sbb
mov
push
dec
cs
repz
ja
cmp
add
lcall
out
lret
mov
pop
andb
mov
xorl
or
data16
pop
jb
les
lcall
test
pop
dec
cmp
mov
or
or
inc
fsubl
cmc
xor
xlat
push
xchg
push
push
adc
mov
pop
mov
push
mov
or
dec
xchg
push
push
pop
or
xchg
popf
into
test
mov
arpl
loop
or
pop
dec
push
fadds
js
or
mov
or
mov
popf
xor
addr16
and
test
insb
mov
pop
scas
mov
es
xchg
add
mov
push
dec
pop
repnz
sbbb
jl
andl
mov
xchg
roll
add
loop
xor
pop
push
push
mov
lods
rcl
sub
xchg
imul
dec
out
push
jl
dec
test
xor
xchg
cmc
mov
shll
mov
out
cmp
xor
pop
inc
push
lods
mov
dec
insb
or
sub
test
cmpsb
lods
jno
fldt
popf
xor
into
cmc
test
sarl
test
leave
xchg
add
aas
mov
adc
or
fnstsw
enter
popa
cli
out
dec
mov
xchg
inc
dec
test
popf
sub
clc
sbbb
sub
sbb
push
mov
inc
xchg
into
neg
and
and
das
jbe
xor
in
or
mov
xlat
jbe
inc
mov
sub
sahf
mov
test
mov
cmp
ds
shlb
add
or
sub
ret
mov
sbb
pushf
inc
ret
pop
mov
pop
xchg
out
rorb
xchg
push
loope
loopne
andb
arpl
rcrb
jbe
addr16
syscall
xor
lret
imull
xchg
xchg
orl
or
loop
rcl
ret
cwtl
jno
push
pop
mov
mov
aad
push
test
int
push
jg
icebp
test
push
push
and
in
out
mov
xchg
mov
inc
jecxz
mov
mov
lods
jecxz
test
repz
cmc
rcrb
cmp
orl
or
push
pop
add
test
sti
movsb
pop
lock
cld
sub
xchg
mov
arpl
shlb
mov
mov
xor
in
shll
pushf
cmp
pop
mov
inc
mov
fdivs
lret
sub
fistps
jge
mov
push
xchg
daa
sub
jo
lods
cs
mov
jmp
insb
dec
repnz
or
pop
aam
adc
lods
dec
and
notb
cld
data16
mov
sub
mov
in
and
repz
push
dec
mov
adc
fxam
movsl
rcl
cmpsb
sahf
mov
loop
leave
fnstenv
push
out
push
lahf
test
jl
xchg
push
lods
push
mov
inc
and
jg
xlat
js
loop
xchg
mov
xchg
mov
sbb
lock
jmp
gs
imul
and
cmpsb
ret
leave
and
imul
scas
pusha
faddl
in
push
cs
insl
push
mov
sub
mov
popa
ja
push
pushf
sub
sub
repz
mov
leave
leave
inc
loope
aad
fcoml
call
jle
enter
pop
insl
les
push
stc
mov
decb
dec
inc
cmpsl
cmpsl
aam
repnz
jns
push
pusha
scas
jbe
rcrb
pusha
int3
push
sarb
and
fwait
inc
mov
test
pop
dec
sbbl
xor
int
insb
stc
mov
inc
pop
xlat
sbb
in
mov
dec
imul
fcmovnb
pop
cmp
mov
inc
insb
push
mov
mov
xor
scas
push
adc
mov
jo
in
testl
mov
mov
stc
cld
mov
punpckhbw
test
sub
jmp
imul
cmp
out
mov
mov
jmp
js
pop
pusha
cli
sub
cwtl
das
add
or
insl
stc
xchg
and
pushf
mov
push
loopne
addr16
and
xor
shll
cmpsb
mov
push
pop
pop
fisttps
arpl
and
cli
dec
sbb
shr
lods
push
jns
stc
inc
sbb
and
pop
xchg
add
sbb
adc
or
aaa
leave
pop
xchg
jb
push
inc
adc
xor
mov
xchg
test
jg
daa
leave
shrl
out
add
jmp
gs
or
adc
fs
ss
adc
xor
leave
ret
dec
jg
in
or
adc
fs
xchg
das
push
mov
jecxz
cmp
xchg
lret
scas
and
and
push
dec
cltd
int3
adc
jnp
pop
add
hlt
mov
stos
mov
sbb
push
in
es
repz
push
mov
xchg
cmpb
and
push
adc
lea
pop
mov
push
jnp
push
jo
cmp
das
jbe
inc
nop
adc
and
xor
mov
inc
fwait
pop
mov
inc
out
pop
push
sbb
and
cli
int
es
push
sbb
arpl
out
loopne
or
and
test
test
leave
push
sub
mov
cltd
mov
loopne
inc
call
jg
mov
mov
popa
jns
popa
mov
and
sbb
loopne
cmp
mov
cmp
out
jmp
sbb
xor
dec
dec
xor
push
xor
sbb
pop
inc
sub
lods
notl
push
xor
aaa
fs
jno
mov
mov
xchg
cltd
stc
mov
fnstcw
sub
jns
or
imul
mov
stc
mov
fnstcw
sub
jns
or
imul
mov
stc
mov
fnstcw
sub
jns
or
imul
mov
stc
mov
fnstcw
add
jns
jle
xchg
xchg
cmpsb
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
mov
je
cmp
je
mov
push
mov
call
mov
xor
mov
mov
movl
test
je
mov
add
mov
xor
xor
push
call
cmpl
jne
movzbl
push
pop
cmp
sbb
and
add
mov
mov
movzwl
movzwl
xor
movzwl
xor
xor
xor
pop
test
jne
mov
not
mov
or
mov
leave
ret
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
mov
movzbl
movzbl
sub
push
push
pop
je
push
push
push
push
mov
push
mov
push
mov
push
push
call
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
pop
pop
pop
push
push
pushl
push
pushl
call
pop
jmp
pushl
call
xor
inc
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movb
mov
movzbl
mov
sub
movzbl
sub
je
mov
add
mov
call
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
jns
mov
and
or
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
je
call
push
push
push
push
pushl
call
pushl
pushl
pushl
pushl
pushl
call
pushl
call
call
push
pushl
call
mov
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
mov
movzbl
mov
sub
movzbl
sub
je
movl
push
push
pushl
push
pushl
call
movl
andl
jmp
movl
movl
andl
jmp
mov
inc
mov
mov
sub
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
call
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
add
add
xor
add
add
add
add
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
mov
add
ret
add
xor
add
add
js
add
bound
add
add
push
sub
add
add
sti
xor
add
xor
add
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
mov
add
jl
add
jl
add
jl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
or
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
push
mov
push
lea
push
mov
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
lea
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
call
mov
sub
movl
movzbl
mov
cmp
je
movl
mov
movl
mov
call
mov
mov
sub
movzbl
mov
movzbl
sub
je
push
lea
push
push
call
pop
push
lea
push
pushl
call
int3
push
push
push
push
pushl
call
push
pushl
call
mov
jmp
movl
movl
call
push
call
call
pushl
pushl
pushl
push
call
jmp
push
pushl
call
pushl
mov
call
jmp
lea
push
push
call
push
push
call
lea
push
push
call
jmp
call
mov
xor
mov
xor
pop
call
add
leave
ret
mov
andl
andl
push
pushl
movl
pushl
movl
movl
movl
mov
movl
movl
call
push
mov
push
push
pushl
mov
call
push
mov
call
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
movb
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
movb
movb
mov
mov
movb
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
movzbl
sub
pop
pop
je
int3
call
call
pushl
movl
push
movb
movb
movb
movb
movl
movb
movl
movb
movl
movl
movb
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pop
pop
test
jne
inc
jmp
mov
push
xor
jmp
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
mov
pop
mov
xor
pop
call
leave
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pop
fildl
test
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sub
inc
add
faddl
adc
inc
add
faddl
add
inc
add
fildl
lock
call
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
faddl
dec
faddl
pop
faddl
insb
faddl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
add
fldl
xor
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
inc
add
inc
add
inc
add
inc
add
fldl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
inc
add
fldl
clc
fldl
or
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
mov
sub
and
fstpl
cvttsd2si
leave
ret
cmpl
je
sub
fnstcw
pop
and
cmp
je
push
mov
sub
and
fld
fsts
fistpll
fildll
mov
mov
test
je
fsubrp
test
jns
fstps
mov
xor
add
adc
mov
adc
jmp
fstps
mov
add
sbb
mov
sbb
jmp
mov
test
jne
fstps
fstps
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
js
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fs
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
inc
add
loope
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
loope
add
inc
add
inc
add
loope
add
loope
add
loope
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
loop
add
loop
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
cmp
jne
repz
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
add
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
mov
push
call
pushl
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
pushl
call
pushl
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
movl
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
pushl
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
andl
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
pushl
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
pushl
call
pop
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
movl
call
add
or
pop
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testl
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
mov
push
push
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
