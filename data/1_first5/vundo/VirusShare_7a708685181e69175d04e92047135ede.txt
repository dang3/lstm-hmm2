add
inc
and
or
sub
mov
jmp
sub
mov
dec
xor
sub
mov
push
xchg
jmp
jmp
push
xchg
xor
addr16
inc
xchg
call
nop
jmp
jmp
jmp
xchg
add
sub
ror
sub
mov
and
nop
sub
xchg
jmp
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
sbb
add
and
dec
xor
shl
and
mov
and
or
or
shr
mov
mov
sub
xchg
add
push
pop
jmp
shr
inc
and
sub
pop
cmp
addr16
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
shl
mov
push
xchg
xor
inc
xor
or
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
and
add
jmp
jmp
jmp
jmp
xchg
jmp
call
xchg
jmp
jmp
jmp
jmp
nop
add
xor
and
mov
sub
nop
and
shr
mov
mov
addr16
andl
xchg
push
nop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rolb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
sub
xor
and
mov
jmp
jmp
jmp
addr16
xor
and
mov
add
inc
mov
sub
xchg
push
xchg
push
xchg
push
mov
call
xchg
jmp
add
nop
sub
inc
mov
ror
inc
mov
jmp
push
nop
nop
nop
nop
pop
push
mov
push
nop
add
xor
mov
push
mov
jmp
mov
mov
mov
xchg
movl
xchg
jmp
mov
addr16
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
sub
and
add
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
decl
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
and
sub
mov
ror
xor
inc
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
dec
nop
jmp
dec
and
mov
jmp
jmp
xchg
push
push
pop
xor
xchg
jmp
cmp
xchg
add
mov
xor
mov
push
mov
call
addr16
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
icebp
or
add
jmp
jmp
jmp
nop
call
nop
mov
xchg
mov
mov
jmp
mov
nop
jmp
push
mov
push
push
pop
push
mov
push
push
pop
push
mov
push
mov
push
xchg
jmp
sub
nop
jmp
jmp
jmp
addr16
call
addr16
mov
xchg
mov
xchg
mov
nop
add
mov
xor
and
sub
mov
call
xchg
jmp
and
mov
add
mov
jmp
jmp
jmp
xchg
cmpl
nop
jne
push
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
mov
jmp
jmp
nop
dec
xor
dec
shl
or
mov
push
push
pop
call
xchg
jmp
mov
push
pop
jmp
jmp
mov
mov
shl
dec
mov
push
xchg
push
nop
push
xchg
push
mov
jmp
mov
xchg
andl
xchg
push
mov
xor
xchg
and
xchg
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
push
mov
jmp
push
xchg
push
mov
call
xchg
mov
xchg
mov
push
pop
jmp
push
push
pop
push
nop
jmp
jmp
jmp
call
xchg
jmp
jmp
jmp
jmp
push
xchg
add
mov
or
or
xor
mov
sub
xchg
pushl
or
pop
push
nop
push
nop
push
mov
push
nop
jmp
mov
xchg
mov
and
add
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
mov
pushl
nop
pushl
mov
call
mov
jmp
pushl
nop
call
mov
push
popl
pushl
dec
xor
pop
sub
inc
mov
push
ror
and
shr
shl
pop
add
jmp
add
nop
push
mov
call
mov
pushl
sub
mov
inc
pop
mov
or
add
rol
mov
add
mov
add
mov
add
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
ret
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
xor
xchg
jmp
push
mov
add
and
sub
dec
dec
mov
call
xchg
movl
xchg
push
xchg
pushl
mov
call
mov
jmp
mov
xchg
mov
xchg
and
sub
mov
push
xchg
jmp
movb
xchg
jmp
jmp
push
xchg
add
xor
shl
pop
and
xor
or
and
mov
mov
xor
and
or
pop
xor
and
xor
or
sub
and
add
xor
nop
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
xor
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
nop
dec
mov
mov
sub
mov
shl
rol
shl
ror
or
pop
jmp
inc
xchg
jmp
shl
dec
mov
xor
xor
mov
push
xchg
push
nop
shr
add
add
mov
nop
nop
nop
nop
nop
mov
mov
add
push
pop
add
xchg
add
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jb
decl
sub
fiaddl
or
std
adc
call
sbb
enter
rcl
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
movb
xchg
movb
push
pop
jmp
xor
mov
push
ror
and
or
or
rol
sub
mov
add
rol
and
add
dec
test
jne
pop
pushl
inc
inc
mov
add
or
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
lahf
idiv
jmp
shr
add
add
push
mov
ror
mov
call
addr16
or
mov
pop
pushl
addr16
push
addr16
pushl
xchg
push
mov
jmp
or
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
lret
sbb
leave
add
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
mov
je
push
xchg
or
mov
sub
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jbe
add
xchg
jmp
pushl
ror
xor
ror
and
pop
xor
shr
or
add
mov
mov
nop
or
rol
rol
add
xor
mov
add
mov
mov
xchg
jmp
mov
ror
pop
inc
pop
add
pop
dec
sub
add
mov
shr
pop
call
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xor
sub
ror
mov
add
mov
shr
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
xchg
mov
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
jo
pop
add
add
add
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shll
and
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
jmp
movb
push
pop
movb
xchg
movb
nop
movb
xchg
jmp
xor
xor
add
sub
and
mov
add
or
mov
add
mov
mov
xchg
mov
xchg
xor
and
mov
jmp
call
mov
or
add
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
nop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
faddl
add
add
nop
cmp
addr16
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
push
pop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
adc
add
mov
incl
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
xchg
icebp
jmp
leave
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
push
xchg
xor
nop
shr
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
dec
push
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jle
sub
ror
mov
jmp
movb
nop
movb
xchg
movb
mov
movb
xchg
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
iret
incl
in
jmp
jne
and
xchg
add
nop
add
xchg
add
xchg
shr
and
add
inc
xchg
inc
push
pop
jmp
ror
shr
mov
shl
sub
xor
add
shr
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
shl
sub
rol
pop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
mov
add
xchg
cmp
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
scas
add
add
adc
add
shr
or
xor
ror
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
frstor
fmuls
call
addr16
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lcall
xchg
andl
mov
add
nop
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
movb
nop
movb
addr16
movb
nop
movb
xchg
movb
xchg
jmp
movb
mov
movb
nop
movb
xchg
movb
nop
jmp
jne
dec
sub
shl
pop
xor
push
pop
jmp
add
xchg
push
popl
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
rol
mov
sub
addr16
mov
nop
mov
xchg
jmp
jmp
mov
xchg
shl
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
incl
push
pop
ror
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
add
movb
xchg
movb
nop
call
xchg
inc
sub
mov
push
mov
call
xchg
rol
rol
add
add
mov
movl
xchg
jmp
call
push
pop
or
add
rol
mov
push
xchg
call
xchg
jmp
or
or
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
shl
mov
xor
ror
add
mov
call
xchg
or
dec
pop
mov
inc
shr
pop
or
xor
sub
pop
jmp
nop
jmp
jmp
jmp
test
incl
inc
add
cmpl
mov
jmp
loope
jle
mov
jmp
or
shl
shr
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
mov
jmp
call
mov
dec
mov
movl
xchg
jmp
add
shl
sub
mov
movl
mov
jmp
jne
shr
pop
mov
mov
mov
mov
add
xchg
dec
sub
or
xor
pop
jmp
pushl
sub
mov
mov
pop
jmp
movb
xchg
movl
xchg
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
movb
mov
incl
push
pop
jmp
cmp
xchg
je
incl
mov
jmp
call
mov
movl
xchg
push
nop
or
mov
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
jmp
call
nop
and
and
xor
pop
jmp
push
popl
ror
xor
dec
shl
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
dec
mov
mov
add
mov
and
or
xor
or
mov
add
mov
mov
xchg
or
mov
add
nop
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
call
xchg
call
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
and
ror
mov
and
mov
nop
nop
nop
nop
nop
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
jmp
sub
xor
dec
sub
mov
cmp
mov
jl
xor
xchg
jmp
shl
mov
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
push
addr16
call
xchg
jmp
xor
xchg
xor
pop
mov
xor
rol
xor
pop
jmp
and
mov
or
mov
or
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
filds
add
xor
xchg
inc
mov
or
and
add
mov
and
mov
inc
xchg
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
pop
add
xchg
inc
ror
add
or
or
pop
inc
sub
xor
dec
xor
pop
shl
dec
ror
or
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fildl
pop
or
xor
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mulb
rolb
push
xchg
jmp
mov
push
xor
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
clc
add
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
jne
nop
mov
nop
mov
xchg
call
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
cmovo
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
xor
sub
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
jmp
rorl
jge
add
add
add
rorb
or
add
cmpl
nop
jne
mov
or
sub
and
rol
mov
jmp
xor
nop
nop
nop
nop
nop
nop
add
shr
mov
pop
or
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
imul
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
shr
mov
mov
xchg
sub
mov
sub
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
mov
xchg
incl
mov
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
mov
push
pop
mov
mov
jmp
jne
or
xor
xor
xor
sub
mov
mov
mov
nop
nop
nop
nop
nop
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
cmp
xchg
nop
nop
nop
nop
nop
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
and
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
rorl
shr
rorl
enter
inc
xor
mov
jmp
add
mov
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
push
pop
add
addr16
nop
nop
nop
nop
nop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
pushl
mov
call
xchg
xor
or
or
mov
mov
xchg
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
or
mov
mov
xchg
incl
addr16
dec
push
pop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jne
add
addr16
nop
nop
nop
nop
nop
mov
mov
shr
add
mov
mov
jmp
jmp
dec
xchg
dec
mov
shl
and
and
add
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shll
incl
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
mov
jecxz
incl
nop
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
jmp
je
sub
push
or
js
je
sbb
decl
aad
dec
inc
mov
add
or
or
mov
ror
xor
ror
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
addr16
call
mov
jmp
add
mov
incb
jge
add
lods
dec
push
xchg
call
mov
jmp
pop
arpl
addb
add
inc
xchg
cmp
xchg
jb
inc
xchg
cmp
xchg
nop
nop
nop
nop
nop
jae
inc
push
pop
inc
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
shll
dec
and
add
xor
inc
mov
sub
mov
mov
mov
jmp
dec
pop
add
inc
and
ror
and
sub
or
mov
mov
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
jmp
sub
mov
inc
and
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
push
pop
xor
nop
inc
xchg
jmp
jmp
mov
sbb
add
and
mov
shl
add
pop
or
xor
xor
mov
mov
add
mov
sub
mov
jmp
or
and
mov
jmp
lret
cmp
xor
add
add
mov
shl
mov
mov
xchg
incl
mov
incl
nop
jmp
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
sub
sub
add
mov
and
mov
cmp
nop
jne
and
xchg
add
addr16
add
push
pop
jmp
ss
mov
jl
or
xchg
je
shl
dec
sub
mov
jmp
sub
add
mov
pushl
inc
rol
pop
jmp
jnp
pop
add
dec
pop
sub
mov
shl
pop
and
inc
inc
shr
mov
sub
shl
add
xor
ror
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
nop
nop
nop
nop
inc
push
pop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
cmpl
xchg
jne
call
mov
mov
mov
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
xchg
add
ror
or
add
ror
mov
call
nop
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
or
mov
push
addr16
xor
add
shl
sub
mov
call
nop
push
mov
mov
xchg
call
mov
mov
xchg
nop
nop
nop
nop
nop
xor
mov
mov
sub
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
xor
or
rol
add
dec
and
add
nop
nop
nop
nop
nop
add
xchg
jmp
sub
xor
xor
add
mov
add
addr16
push
xchg
nop
nop
nop
nop
nop
call
addr16
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
sub
or
shr
and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jne
add
inc
inc
mov
nop
nop
nop
nop
nop
pushl
and
pop
and
or
mov
nop
nop
nop
nop
nop
add
mov
add
xchg
jmp
jns
nop
nop
nop
nop
nop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
add
add
mov
and
mov
or
xor
pop
add
add
xchg
add
addr16
push
xchg
pushl
push
pop
nop
nop
nop
nop
nop
call
nop
mov
mov
add
addr16
add
addr16
xor
add
or
inc
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
nop
nop
nop
nop
add
xchg
cmpl
mov
jne
call
xchg
mov
xchg
add
mov
mov
sub
mov
add
inc
ror
sub
pop
mov
pop
nop
nop
nop
nop
nop
mov
pop
mov
xchg
cmp
xchg
jne
add
sub
ror
mov
sub
mov
add
add
add
add
add
xchg
mov
nop
rol
or
sub
mov
inc
mov
add
mov
nop
nop
nop
nop
nop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
ljmp
les
movsl
in
xchg
jmp
xchg
inc
inc
cmp
xchg
js
rcll
cmp
test
test
xchg
insl
xchg
bound
cmp
adc
mov
pushf
xchg
data16
or
mov
out
pop
add
pop
aas
pop
push
jle
adc
xchg
repnz
push
test
imul
sahf
les
lds
push
int3
or
aam
sub
leave
fiaddl
sti
cmp
pop
enter
mov
rolb
lcall
std
mov
mov
mov
adc
lcall
xorl
nop
jmp
mov
add
and
xor
cmp
mov
leave
inc
fdiv
das
lahf
aam
push
adc
dec
xlat
jg
into
xchg
shr
scas
fs
dec
out
inc
enter
mov
dec
out
lahf
mov
leave
int
imul
xchg
sbb
aad
bound
faddl
jnp
push
add
xor
btrl
adc
cmpsb
es
cmpsb
pop
fsts
imul
ror
mov
push
or
insl
stc
cld
mov
fcom
lock
and
sub
sahf
push
inc
sub
sub
ds
test
pushf
orb
dec
fnstenv
mov
inc
jo
add
fadd
or
or
and
data16
outsb
mov
pop
in
clc
icebp
in
sahf
pop
inc
lock
mov
add
adc
cmp
mov
icebp
loope
popf
loopne
inc
pusha
mov
ficompl
add
inc
dec
xor
jl
and
int
fisubs
ss
idivl
jg
lret
lret
bound
pop
xchg
jbe
rcl
les
fistpl
jnp
not
cmpsb
pop
aas
jbe
es
std
inc
rcll
mov
adc
popf
pushf
aas
push
pushf
mov
push
lret
jae,pn
imulb
mov
mov
cld
test
cltd
cmp
xor
js
sbb
cmp
sbb
mov
cmpsl
mov
push
pop
lds
sbb
sbb
add
xor
and
shlb
cmp
and
pop
into
push
inc
push
js
ss
sbb
mov
adc
mov
dec
das
mov
jnp
mov
stc
cld
bound
cmp
jl
mov
xor
enter
ret
idiv
mov
adc
jl
jns
inc
inc
dec
icebp
decl
mov
dec
jns
pop
xor
std
jnp
xchg
and
or
adc
jae
adc
or
jbe
js
lcall
adc
sbb
adc
adc
subb
daa
inc
insl
rcll
cwtl
je
divl
jns
aad
mov
mov
nop
cmp
sub
scas
cltd
sbb
inc
and
cmp
adc
in
cmp
dec
and
xlat
xlat
xchg
out
xor
stc
pushf
mov
call
loopne
jle
lahf
mov
jl
lret
repnz
adc
add
dec
je
mov
push
in
pop
popf
es
scas
pop
lock
movsl
mov
dec
mov
gs
add
bound
mov
fsubs
lcall
cwtl
and
xor
daa
in
xchg
popf
pop
pop
cmp
mov
jecxz
jbe
aad
jne
loopne
sub
push
pop
sbb
ja
ja
or
cld
gs
scas
cmp
out
inc
popf
jnp
lock
sub
cmp
and
mov
fdivp
inc
pop
popf
aas
mov
sbb
or
imul
out
repz
push
adc
add
mov
jns
cmp
outsl
mov
nop
jbe
out
test
loope
fmuls
mov
pop
jno
sbb
sub
jnp
into
cmp
ret
loopne
js
out
repnz
dec
iret
add
adc
cmp
repz
inc
sub
sarl
push
mov
in
dec
aam
ds
leave
cmpsl
in
mov
inc
sub
sahf
repnz
fnstcw
daa
lret
sbb
push
push
inc
pop
adc
icebp
outsb
ja
or
aas
les
fdivrl
out
cli
loop
lret
xor
repnz
loope
mov
pop
or
jle
mov
sar
or
push
add
mov
arpl
sbb
daa
fidivl
arpl
cmp
daa
add
dec
cbtw
lahf
inc
mov
outsl
mov
sbb
lods
inc
xor
nop
iret
test
in
test
adc
lcall
fiaddl
mov
add
cli
ja
add
out
popa
aam
jecxz
mov
jp
push
cmp
and
add
movsl
jg
pop
or
lock
jae
repnz
addb
sub
scas
adc
shll
push
add
mov
sub
jl
inc
jle
fwait
stos
out
xchg
dec
inc
sub
mov
xchg
daa
in
push
popa
cld
addr16
or
or
mov
push
fstps
pop
xor
inc
iret
scas
xchg
dec
pop
jo
add
pop
or
mov
lcall
mov
sub
fbstp
cs
lahf
psubusw
or
push
jnp
orb
push
push
jge
adc
pop
mov
les
mov
scas
faddp
xchg
jns
add
cltd
adc
outsb
or
or
dec
jnp
mov
das
jmp
imul
fistps
sub
push
xchg
sahf
dec
push
insb
scas
enter
pop
push
mov
aad
mov
ret
frstor
fildll
mov
jne
adc
sbb
lret
mov
pop
lock
add
pop
fadds
into
cmp
insl
adc
mov
sbb
cmp
sbb
cld
inc
aaa
pusha
inc
jl
xchg
cltd
jns
rcll
sub
sbb
popf
mov
dec
mov
scas
pop
sub
mov
pop
imul
es
fsubl
clc
sbb
outsb
stos
or
pusha
ss
and
add
jne
lods
fldenv
cmpsl
fidivl
and
dec
fs
sub
add
in
and
loop
push
mov
xchg
addr16
cvtps2pd
or
sub
mov
cli
movsb
or
test
mov
jle
in
outsb
or
rcrb
sub
xor
out
ret
push
xchg
or
xchg
idivb
inc
jns
or
pop
jl
dec
fnstsw
push
mov
cmp
push
lret
xor
pop
jmp
in
dec
push
xchg
push
lods
lcall
mov
jb,pt
mov
xor
sarb
push
adc
mov
ja
sbb
mov
cmpsb
push
outsb
loopne
pop
jmp
or
jge
mov
ds
cld
adc
ja
xchg
into
call
je
into
lea
orl
fadd
sbb
int3
mov
dec
data16
outsl
push
xchg
adc
repnz
lods
clc
adc
popf
and
fistpll
jp
fbstp
dec
out
inc
mov
pusha
cmp
shl
test
jno
pop
push
stc
sub
fimull
mov
push
xchg
out
imul
dec
or
or
out
push
lock
jge
rcr
push
scas
movsl
push
lcall
xor
cmp
xchg
push
push
add
sti
or
shll
ret
cmp
imul
je
mov
ja
or
pop
fs
sbb
dec
jnp
test
fldenv
xor
cmp
push
adc
je
cld
int
hlt
imul
nopl
add
outsb
jmp
ss
mov
push
xchg
gs
loope
mov
in
jnp
pop
jbe
out
xor
adc
mov
or
fisttpl
inc
cmp
dec
jle
adc
or
and
xchg
es
xlat
cmp
adc
mov
popf
jnp
fwait
aam
xchg
shlb
jle
push
aam
mov
cmp
out
mov
mov
ss
or
adc
mov
mov
cld
sbb
sti
test
push
notb
push
pop
and
out
jp
add
jg
ds
or
adc
xchg
inc
enter
dec
loopne
lods
mov
add
cmp
stc
or
fsubrl
roll
add
dec
jg
push
out
cltd
ret
adc
aad
out
insl
cli
fcomps
xchg
push
test
or
pop
loope
sub
fcompl
cli
shrb
cmp
cltd
call
jns
push
jl
cld
fdiv
push
push
shll
jle
sbb
push
loop
repz
xchg
out
movsb
and
inc
push
push
sub
hlt
mov
out
sahf
mov
out
data16
aas
mov
sub
cwtl
or
xor
and
mov
fimuls
mov
push
jnp
xchg
add
inc
mulb
pop
aam
fsubrp
push
pop
jp
ret
cmpsb
bound
push
rorb
cld
das
data16
mov
mov
rcr
jns
or
push
iret
mov
shr
mov
cmp
adc
inc
mov
addr16
mov
adc
push
add
popa
shl
inc
fisttps
cmp
cmp
test
leave
sub
pop
imulb
or
mull
sbb
sub
hlt
pop
loopne
sbb
or
lods
shlb
cmp
push
mov
scas
dec
push
xor
lods
lods
xor
in
ret
xor
fstpl
call
in
xchg
cld
std
popf
xorb
sarb
cmp
dec
mov
in
sub
scas
dec
out
aaa
popa
xor
pop
add
push
in
mov
aaa
push
in
xchg
scas
cmp
sbb
outsl
mov
sti
push
daa
repz
popf
nop
xlat
dec
repz
and
push
shlb
dec
jo
add
mov
push
xor
insb
jmp
sub
xchg
mov
push
and
ffree
repnz
int3
cmpsl
mov
dec
cmp
lret
aam
dec
cmp
mov
push
push
mov
push
test
mov
or
inc
jmp
inc
mov
imull
stos
mov
frstor
pop
scas
mov
mov
shll
cmp
adc
fwait
orl
repz
adc
push
dec
sub
or
les
scas
sub
inc
insl
popf
and
cwtl
and
xchg
filds
mov
btr
cld
xchg
sub
xchg
mov
das
imul
pop
ret
inc
dec
ja
push
sub
mov
push
mov
lock
and
je
test
sbb
add
cmp
test
cli
push
jo
xor
fcompl
adc
movsl
outsb
mov
mull
sub
adc
jbe
arpl
fwait
pop
mov
cltd
or
stc
lods
mov
push
in
and
pushf
and
lock
pop
sbb
pusha
negl
int
data16
mov
faddl
mov
inc
scas
dec
pop
negb
push
or
shll
fidivl
test
mov
loopne
add
pop
int3
mov
gs
push
gs
mov
dec
sub
sbb
and
push
ja
sahf
add
movsb
and
push
and
sub
and
das
mov
inc
cmp
out
movsl
cmc
inc
cltd
inc
mov
xchg
loop
outsl
cltd
stc
jg
test
arpl
push
adc
pop
lods
mov
in
mov
push
repz
sbb
addr16
outsl
push
jo
mov
sbb
faddl
jmp
icebp
xor
test
mov
jmp
mov
fs
aam
iret
testb
fnstcw
cmpsl
fnstcw
mov
mov
jle
ss
push
repz
cmpsl
jg
adc
popa
rolb
out
mov
mov
faddp
and
into
cmp
sbb
push
in
push
out
xor
shlb
xor
rol
js
mov
lahf
mov
pop
mov
sbb
xor
mov
loope
or
xchg
lock
push
cld
inc
xor
ret
shl
popf
inc
ror
pop
orb
pop
dec
sti
lret
ret
cmp
adc
dec
adc
mov
cwtl
jmp
popf
aam
jb
mov
adc
mov
adc
and
push
jae
ja
cmp
xchg
xchg
jb
cmp
outsl
cwtl
iret
test
data16
insb
ja
mov
movsl
shr
fwait
jp
push
ljmp
testl
imul
cmpsl
movups
mov
inc
xchg
movsl
sbb
hlt
push
add
jl
or
adc
cmp
xchg
jmp
sbb
int3
sbb
push
rorb
cmp
jp
pop
and
test
aam
xchg
inc
fcmovnbe
jns
jbe
shrb
enter
mov
sub
dec
jp
test
mov
sbb
inc
lret
aam
sbb
nop
xor
jne
insl
add
cwtl
sub
sub
jae
fwait
mov
es
xor
scas
ds
pushf
jne
pop
aas
jnp
pop
pop
mov
subl
jl
push
mov
icebp
mov
mov
and
pop
sub
fwait
lock
xor
outsl
and
pop
movsl
cmc
jle
and
xchg
ljmp
out
add
into
test
std
sub
mov
mov
pop
pop
fsubrs
outsb
xor
xor
fldcw
sbb
aaa
dec
call
add
outsb
cltd
adc
lods
jg
xor
arpl
aas
mov
xchg
daa
cli
fmuls
fwait
mov
outsl
jg
mov
sbb
jmp
add
add
inc
int
imull
add
sarb
jle
lea
cli
icebp
xor
fcmovnbe
fwait
shrl
xchg
in
repnz
arpl
mov
inc
or
hlt
ds
mov
shll
lret
das
sub
popf
lahf
ljmp
xor
jo
ret
pushl
adc
jmp
xchg
push
sub
sbb
adcl
mov
nop
push
mov
imul
outsb
adc
jns
popa
jno
mov
dec
lret
divb
dec
dec
hlt
das
popf
mull
mov
rolb
mov
mov
jns
mov
mov
aam
jbe
xchg
bound
into
test
bound
jg
xchg
dec
jae
jb
xor
and
jns
loope
hlt
fcoml
push
data16
fidivrs
in
cmp
jmp
ds
icebp
inc
mov
jbe
cld
xchg
push
and
shlb
cltd
cmpsb
add
cmp
inc
es
ret
sbb
jne
imul
daa
fstpl
lahf
add
test
hlt
int
mov
jb
and
adc
aam
add
or
adc
inc
jae
mov
xchg
mov
dec
lock
adc
lret
out
imul
xchg
sub
add
jne
pushf
sbb
scas
fbstp
iret
test
loope
addl
pop
sub
insb
jo,pt
fsubrl
jmp
add
jbe
pop
mov
add
fs
mov
clc
or
pop
enter
dec
cmp
outsb
in
int
xchg
ret
mov
test
push
xchg
adc
fldl
subl
lahf
cmp
sub
pusha
fdivs
and
xchg
outsl
mov
inc
dec
stc
shlb
out
cli
sti
xor
imul
call
mov
fcoms
xchg
mov
and
mov
repnz
push
xor
mov
ja
test
xor
test
xor
scas
repz
cmpsl
or
shlb
inc
and
stos
cmp
repnz
xor
mov
fisubrl
jmp
sbb
push
xchg
pop
je
jmp
je
repnz
clc
notl
mov
sbb
dec
or
push
push
lods
xchg
pop
test
adc
mov
aas
cmp
and
out
andl
jge
test
and
adc
idivb
inc
clc
lods
and
lcall
xchg
popf
out
push
jle
in
mov
aam
fld
pop
rorl
int
leave
outsl
cmp
cmp
push
rcrb
es
loop
cli
jl
dec
jg
imul
call
lcall
push
outsb
pop
jb
mov
dec
out
adc
cmp
test
sysret
pop
adc
push
jmp
mov
lcall
dec
mov
outsl
orb
test
out
mov
pop
test
ds
push
mov
or
mov
std
cltd
inc
sbb
lcall
cs
testl
jmp
mov
es
cmp
or
ret
mov
or
jmp
je
push
mov
jae
jb
mov
xor
test
mov
cmp
lret
test
pop
pop
out
lret
in
mov
adc
inc
push
fistpll
dec
and
imul
and
push
sub
jge
pop
and
mov
lret
dec
add
mov
ret
push
cmp
cltd
push
out
roll
jno
jg
jg
les
add
shll
daa
bound
cmp
cmpsb
sub
popa
repnz
pusha
sahf
pusha
xor
cmp
cmpsl
rcll
popa
lcall
movl
popa
inc
dec
push
mov
dec
push
insl
shrb
clc
adc
mov
push
xor
xor
insl
sti
cwtl
dec
in
subl
cmp
or
in
push
adc
push
roll
push
xchg
icebp
cmpl
movsb
inc
push
push
mov
fs
popa
bound
add
gs
sbbl
fdivrl
ja
lret
pop
adc
xchg
push
push
sahf
mulb
mov
sub
test
fs
dec
jge
mov
adc
sbb
dec
jg
and
mov
pusha
cmp
mov
inc
scas
jb
or
dec
jg
cmpb
mov
outsl
imul
mov
or
sar
arpl
sbb
cmpsb
and
movsl
cmp
push
je
and
mov
movsb
loop
aad
or
scas
xor
cmpb
test
mov
xchg
addr16
sub
insb
push
pop
sbb
dec
or
movsl
xchg
jae
xor
movsb
pop
cwtl
mov
fisttpll
jle
pop
std
imul
xor
push
ror
rol
fistl
lret
jp
lock
pop
or
add
adc
fcmovbe
loopne
js
mov
enter
call
movsl
push
push
cmp
or
movsb
in
test
cmpsl
iret
mov
cmovs
dec
inc
ret
dec
xchg
adc
sbb
movsl
rorl
xchg
mov
loope
movsb
pop
or
gs
sar
call
inc
fildll
test
cmpsl
ss
shlb
rcl
push
out
mov
mov
scas
push
jne
loop
xor
pop
loop
jno
push
aam
or
loopne
out
pop
jo
pop
mov
call
enter
pop
cltd
mov
fisttpll
fstpl
fsubl
mov
nop
jns
adc
xorl
arpl
mov
imul
sbb
jno
out
xor
repnz
xor
call
in
pop
adc
dec
mov
mov
es
xlat
fsubl
not
lock
xchg
dec
test
test
sbb
xchg
jg
xchg
in
add
sbb
or
push
in
repz
pop
mov
add
cmp
and
in
push
inc
insl
push
aad
mull
push
xor
fildl
mov
or
mov
jmp
jge
loop
fsub
cmp
out
fstps
bound
inc
pop
adc
mov
shlb
lock
std
dec
add
push
cs
aam
test
mov
sbb
sbb
pop
lds
std
decb
scas
imul
inc
push
icebp
jp
add
adc
ret
adc
fbstp
fistpl
lret
gs
movb
outsl
bound
out
adc
push
mov
mov
popf
in
jg
push
add
sub
jns
out
ret
gs
mov
mov
sahf
sbb
pushf
sbb
mov
mov
pop
mov
adc
movsl
aaa
stos
movb
pop
push
sub
cmc
mov
fnstcw
pop
pop
xchg
es
cmpsb
mov
mov
ljmp
sub
lret
insl
arpl
popl
in
sub
jnp
add
adc
shr
lss
mov
fbld
fisttpl
add
notl
inc
std
xor
cs
cmp
dec
pop
add
add
std
jae
jg
clc
movsb
xchg
adc
or
mov
aaa
in
icebp
out
cmp
inc
xchg
lret
push
bound
sbbl
in
int3
jmp
lock
in
sbb
ds
stc
dec
imul
sar
sub
xchg
aaa
popa
mov
fnsave
adc
flds
cmp
loopne
loope
hlt
ret
sub
arpl
stos
pop
mov
test
adc
push
cmp
mov
sbb
fsubs
and
movsb
pop
add
std
dec
aaa
lcall
ja
cld
jmp
add
loop
ja
out
dec
testb
add
test
in
mov
and
push
insl
and
inc
mov
mov
dec
iret
mov
mov
adc
sarl
js
inc
ss
fnsave
dec
mov
or
orb
or
pop
outsb
xlat
rcll
xchg
push
jl
push
jbe
pop
mov
add
aas
std
imul
mov
int
lcall
or
cmp
pop
loopne
mov
sbb
das
in
push
pusha
mov
jmp
mov
call
lea
sahf
adc
and
iret
sbb
repz
iret
cmp
cmp
aaa
jp
xchg
in
sub
test
inc
inc
jecxz
xor
mov
rcr
fwait
sbb
loopne
and
sbb
jge
out
cmp
cmp
and
out
or
repz
pop
ljmp
hlt
stos
rcrb
pusha
scas
rcll
mov
adc
jmp
pop
and
lret
imul
mov
lcall
xchg
mov
pop
arpl
cmp
mov
mov
and
pop
xor
out
shr
push
lock
pushf
sub
das
xchg
xchg
jge
inc
inc
into
jns
fcomps
mov
mov
mov
call
into
push
or
stc
fwait
dec
ret
add
jmp
fucomi
leave
lds
mov
push
aaa
pop
clc
sbb
xchg
jl
imul
pop
mov
mov
stos
mov
xor
adc
sbb
adc
add
addr16
out
xchg
xchg
lods
xchg
lahf
dec
adc
pop
jle
dec
pop
mov
xlat
jmp
popa
push
stc
insl
sbbl
ljmp
dec
cmpsl
jo
pop
push
aam
imul
test
subl
mov
jg
int
fstpt
repnz
popa
mov
push
push
mov
sbb
inc
cmp
mov
jecxz
push
imul
add
inc
cmp
and
rclb
mov
add
mov
lea
mov
test
sarl
add
inc
sahf
xor
dec
out
mov
cld
es
jmp
hlt
dec
cs
fcmovnu
cmc
std
mov
out
and
shr
xchg
pushf
mov
inc
mov
outsl
andl
push
das
lahf
icebp
lcall
lret
inc
imul
jne
fiaddl
leave
jns
addl
cmp
mov
or
out
mov
dec
xchg
mov
mov
in
ret
clc
pop
mov
enter
in
dec
push
pop
mov
mov
das
ss
stos
shr
cmp
gs
into
dec
lea
lret
mov
ljmp
adc
or
cmc
xchg
or
lds
pop
clc
sub
shlb
lea
icebp
push
push
push
cwtl
out
stos
out
cmp
icebp
pop
data16
pop
das
sub
test
pop
hlt
clc
ficoms
mov
fsubrl
and
mov
jp
mov
jmp
pop
jmp
cmpsl
ficomps
cld
bound
xchg
pop
fdivrl
pop
adc
jne
mov
or
punpcklbw
dec
fimull
dec
les
xchg
mov
into
mov
jno
or
daa
sub
sub
mov
mov
cld
cmp
xchg
push
cld
add
cmpsl
cmp
mov
inc
xor
mov
clc
mov
out
aaa
outsb
lret
js
xchg
pushf
inc
add
mov
movsb
cwtl
xor
std
or
jmp
adc
cmp
das
jne
dec
dec
sub
push
ds
push
inc
and
cs
and
pop
movnti
stos
adc
push
mov
mul
dec
loope
not
pop
addr16
mov
dec
lock
mov
scas
jge
pop
inc
testl
cmpsb
shlb
cmpxchg
lcall
mov
inc
jae
enter
cmpsl
push
cmpsb
fnstsw
addl
add
or
and
xchg
inc
fists
jg
sub
shrl
sub
rol
or
add
mov
cmp
xchg
mov
cmp
clc
adc
cmc
outsl
pop
jl
ret
sub
in
cmpsb
push
fisubl
aad
inc
cmp
loope
push
pop
inc
lods
mov
mov
rorl
test
js
cmp
jmp
mov
imulb
pop
lret
xor
test
mov
mov
stc
mov
in
mov
mov
imul
repz
ja
or
shr
cs
dec
fstps
mov
and
adc
or
nop
sahf
and
decb
icebp
sub
stos
xor
push
mov
test
push
xchg
xor
sahf
add
push
xor
in
add
lret
add
sbb
stc
negb
enter
inc
pusha
cmp
sub
fidivrl
and
push
sub
ret
pop
and
push
pusha
mov
inc
lcall
iret
scas
or
jg
shlb
or
out
jo
mov
push
test
xchg
notl
int3
shrb
push
fildl
jns
rorl
dec
mov
aas
movsl
mov
xor
push
es
cli
mov
xor
enter
add
les
popf
fmul
add
cmc
jbe
push
mov
shlb
add
xor
jns
jle
je
aad
repnz
adc
les
sbb
cli
mov
rorl
xchg
enter
inc
xchg
pop
testl
loopne
and
xchg
insb
xor
and
add
cmp
mov
sti
adc
sbb
fninit
sub
pop
in
aaa
mov
pop
fldcw
dec
add
push
add
mov
mov
adc
ret
adc
xor
inc
jg
test
fiaddl
mov
or
nop
data16
xor
jo
aad
fildll
or
out
frstor
mov
sub
pop
inc
adc
push
mov
inc
mov
mov
loop
out
mov
in
es
inc
sbb
mov
xchg
mov
ret
fldcw
addr16
jl
sbb
mov
cmp
jns
dec
push
loop
mov
inc
pop
mov
mov
jne
push
xor
pop
xor
xchg
in
jne
cwtl
mov
mov
in
cmpl
std
ret
enter
or
push
movsl
inc
pop
arpl
mov
shl
jge
bound
fwait
shlb
cltd
popa
ljmp
cmpsl
out
iret
xchg
popa
sbb
and
dec
jae
aaa
pop
pop
push
dec
inc
shrl
popa
testb
pop
ficomps
pop
jmp
loope
rolb
mov
mov
pop
lods
cwtl
inc
outsb
icebp
xor
cmpsl
mov
xchg
dec
push
mov
mov
out
jp
adc
inc
push
test
inc
std
insb
mov
mov
xor
xor
cltd
ds
ficoms
mov
cmp
aam
pop
sahf
into
mov
mov
rcl
std
pop
jns
in
inc
bound
stos
arpl
mov
out
sub
je
ds
fstps
ret
mov
std
sub
orb
das
cs
cmp
outsl
push
adc
or
cli
stc
mov
jg
cmp
cltd
popa
sbb
leave
repz
push
xor
pop
or
mov
ret
or
and
js
mov
pop
adc
mov
lahf
ret
addr16
pop
fimuls
mov
outsb
outsl
mov
pusha
repnz
cltd
mov
fcomps
mov
pop
leave
iret
insb
xchg
cli
jmp
popf
loopne
data16
dec
arpl
aam
cmp
dec
out
jge
dec
and
rcl
mov
lds
push
imul
pop
mov
jno
push
mov
gs
or
in
push
add
inc
and
jecxz
mov
jbe
add
int
loope
sbb
icebp
pop
sbb
push
ficompl
test
xchg
and
push
repnz
jp
xchg
ds
popf
ficompl
repnz
pop
insl
dec
xor
xor
push
mov
jp
icebp
aad
sub
adc
ds
subb
in
lahf
es
mov
sbb
add
mov
xor
push
inc
lret
test
cmp
rorb
arpl
mov
push
lds
dec
pop
lcall
sub
sahf
mov
adc
aaa
add
sub
dec
cmp
xchg
cmpsl
pop
xor
jl
dec
adc
les
xchg
add
cwtl
push
bound
and
xchg
xchg
les
jne
mov
sbb
loope
lods
lahf
arpl
data16
push
jmp
mov
mov
cmp
add
mov
adc
push
stos
or
sti
imul
mov
mov
jmp
adc
aam
scas
or
shlb
orb
mov
je
sub
pop
in
dec
addb
mov
mov
sbb
or
out
popa
ljmp
icebp
movsb
cmp
in
ret
jno
xor
cld
lret
dec
movsl
dec
mov
lcall
cltd
xchg
dec
leave
dec
mov
xchg
mov
push
mov
xor
cmp
jbe
ret
add
pusha
sahf
adc
push
jnp
sub
or
ret
je
inc
mov
bnd
pop
dec
fptan
push
dec
push
popf
movsb
fidivrl
fmul
loop
cmp
dec
call
mov
fdivl
mov
adc
xchg
fildll
pusha
das
loop
stos
into
adc
mov
loop
insl
pop
fwait
push
cld
jp
jno
mov
pop
outsb
into
negb
xchg
jg
mov
mov
cmp
pop
sbb
sub
rcr
add
imul
rorb
paddd
cmp
pop
ja
insl
dec
in
add
lret
dec
push
outsb
inc
jnp
fwait
xor
ss
sarb
ds
lcall
xor
cli
and
mov
ljmp
adc
and
xchg
dec
mov
and
add
cmp
mov
fdivs
in
xor
jnp
sub
imulb
sbb
test
in
sti
push
popf
push
lret
push
lret
rcrl
stos
mov
inc
cmp
lds
daa
in
dec
js
iret
pusha
imul
data16
leave
outsl
pop
adc
pop
mov
out
and
and
cmp
adc
mov
add
pop
pop
xchg
clc
mov
test
fsubs
mov
cmc
push
in
stos
dec
mov
mov
xlat
ljmp
addr16
xor
mov
add
testb
and
stc
addr16
xor
std
sbb
push
cmp
lds
in
cmp
lret
adc
inc
icebp
pop
stos
icebp
shlb
hlt
leave
rorb
jae
cld
sub
fwait
sub
jmp
adc
push
lcall
arpl
inc
sbb
jle
loope
lret
repz
sbb
jb,pn
xchg
mov
mov
out
or
pop
xor
and
xchg
out
int3
xorl
mov
in
inc
mov
or
jg
and
aas
mov
jns
insb
jp
dec
lret
out
xchg
mov
inc
mov
mov
or
ffree
xor
call
adc
mov
sbb
adc
dec
loopne
aas
mov
test
in
xor
or
sub
adc
push
xor
sarb
add
into
sub
jl
mov
sti
imul
testl
cmc
inc
mov
imul
outsl
mov
or
gs
cs
mov
repz
xor
lds
shlb
xor
xchg
sbb
and
xor
mov
xor
inc
insl
aas
hlt
movsb
testl
lea
and
cld
and
sub
and
push
cwtl
adc
stos
cmp
adc
ficompl
out
rcr
lea
fs
xor
rcll
and
nop
and
mov
outsb
push
gs
jmp
and
sahf
inc
and
jge
bnd
daa
pop
test
fwait
stos
cmp
scas
adc
xor
cli
xchg
jecxz
mov
xor
push
loopne
add
adc
mov
sub
mov
jecxz
cmp
inc
dec
sar
fwait
insl
rol
pop
int
test
lock
sub
iret
pop
add
add
ret
jge
xchg
lds
aam
repnz
sbbb
fwait
ss
mov
dec
loope
in
stos
push
mov
xor
xchg
and
fldt
xchg
ljmp
inc
jnp
sbb
fwait
pop
aas
out
jb
rcrl
mov
mov
shl
rcrl
pushf
mov
xchg
in
xlat
es
push
sbbb
test
out
mov
push
pop
mov
xchg
iret
jne
lcall
inc
fldl
repz
nop
gs
enter
cld
cmp
lods
cmc
mov
sub
jae
xlat
push
lods
xor
mov
sbb
out
lods
fsubrs
jecxz
lock
xchg
leave
and
fisubrl
jno
js
dec
push
lret
out
inc
fdivr
xchg
dec
imul
dec
icebp
test
divl
dec
sbb
push
mov
lret
jge
sub
out
fs
mov
pop
incb
pop
or
stos
jns
dec
iret
jo
aad
out
inc
xlat
out
lods
icebp
dec
cmp
adc
lock
out
push
mov
and
mov
and
inc
mov
mov
jbe
arpl
push
movl
repz
mov
lods
and
inc
mov
out
in
hlt
arpl
lret
pop
cmp
ja
cmp
pop
lcall
cs
repnz
cli
movsb
sar
js
aam
dec
pop
dec
clc
cwtl
push
sbb
fldcw
pop
or
add
xchg
imul
pop
push
fnstcw
mov
jmp
jle
dec
out
cmpsl
rcl
in
andb
popf
push
add
std
jb
incl
cmp
dec
enter
lret
cmp
fnsave
cmp
scas
jge
scas
jns
dec
cli
pop
cmp
ret
cli
and
push
lahf
loope
mov
or
mul
movsl
daa
xor
cmpl
pop
mov
xchg
leave
out
fcomp
daa
ficompl
cmp
enter
hlt
sub
add
ficoml
sub
cmp
cs
jbe
dec
cmp
dec
js
cmpsl
test
fbld
sar
and
ror
xchg
inc
lods
jecxz
inc
xor
aam
add
sbb
dec
rclb
add
dec
shlb
into
loop
cs
shrl
stc
pop
repnz
sub
mov
pop
adc
pop
jne
je
inc
sbbl
icebp
lcall
loope
mov
sbb
mov
sbb
out
xchg
sub
sub
cmp
xor
sbb
pop
cmp
add
push
xor
ljmp
and
sbb
push
loopne
fadds
ret
lock
shlb
cmp
dec
outsb
cmc
sub
jp
mov
push
mov
mov
daa
fcmovb
sar
pop
cli
mov
xor
into
add
adc
jnp
shrb
and
cmp
lock
popa
pop
mov
and
mov
rcrl
jle
pop
movsb
sbb
sahf
add
pop
or
xchg
jecxz
xor
adcl
sbb
insb
lods
xchg
lods
es
fimull
js
aas
dec
js
mov
dec
test
inc
mov
mov
loope
fcmovbe
repnz
or
xchg
or
adc
movsb
loope
ljmp
out
aaa
jmp
add
lret
lahf
aaa
push
mov
hlt
cltd
dec
xor
xorb
fbld
jle
ss
jns
mov
out
jo
pop
dec
pushf
cwtl
sub
and
into
lea
jne
push
xchg
negb
andb
jecxz
pop
bound
cmp
push
test
scas
add
js
sbbl
cmp
in
adc
jns
loop
inc
es
cld
aad
inc
or
int
repnz
test
shl
cld
add
push
inc
cli
in
pop
ljmp
or
cwtl
dec
and
popa
mov
bound
cli
lods
movsl
or
sub
push
mov
daa
mov
pop
jmp
sub
adc
cltd
pop
cmp
jns
data16
fisttpll
fidivl
in
out
sbbb
lahf
imul
popf
inc
inc
ja
pushf
sbb
enter
mov
das
shrl
outsl
nop
cmpsb
seto
inc
and
or
sub
pop
mov
cs
mov
out
out
loopne
sbb
push
cld
hlt
adc
or
gs
push
push
adc
das
adc
sbb
dec
jne
xorb
mov
lcall
sub
or
rorl
sub
push
stos
inc
insl
bound
decb
fisttpl
cs
subb
jle
push
jmp
mov
and
mov
call
push
xor
dec
xor
pop
sbb
jecxz
push
jmp
dec
cltd
fcoml
adc
fnsave
test
pusha
pushf
notl
push
cs
cmp
fcomi
aaa
jmp
scas
adc
sub
fld
movsl
mov
pop
jmp
pop
cld
xor
pusha
xor
out
push
cmp
punpcklwd
mov
push
in
xor
sub
add
divb
loop
xchg
cmpl
mov
int3
ljmp
sub
cltd
xchg
xor
arpl
add
xlat
insl
movsl
outsl
pusha
sub
leave
xchg
inc
adc
cs
mov
or
jbe
fwait
push
out
sub
in
cmp
jge,pn
and
sub
call
cli
xor
xchg
adc
xor
jl
cmpl
pop
inc
mov
add
idiv
adc
jmp
pop
xorl
mov
aam
xchg
mov
arpl
jge
cmp
ljmp
push
add
mov
and
int3
sub
jp
push
call
or
mov
cmp
sub
pop
sub
daa
cmp
adc
mov
and
pop
nop
mov
push
push
test
into
mov
out
ret
adc
insl
or
mov
jmp
cmp
dec
pop
push
add
sbb
xchg
loope
sub
inc
inc
pop
or
adc
pop
sbb
dec
xor
add
xlat
push
popf
rorl
call
sahf
stos
xor
pop
adc
repz
dec
mov
lcall
fidivrs
inc
mov
popf
ret
roll
xor
jno
push
cltd
insb
loope
nop
sbb
pop
out
cmp
mov
jb
fs
out
aas
push
xor
into
mov
cmpsl
dec
or
cs
sub
sahf
mov
lods
mov
adc
xchg
push
xchg
inc
mov
mov
loopne
push
lret
int
push
ljmp
inc
add
xlat
cmp
pop
xchg
in
ja
lcall
adc
sub
cmc
and
mov
mov
andb
dec
outsb
mov
and
loopne
push
imul
sbbb
jae
in
sub
adc
fisubl
mov
je
lea
adc
mov
cwtl
lcall
inc
sub
gs
mov
inc
xchg
ljmp
jge
and
in
inc
adc
fcomps
rorl
insl
or
xchg
in
fwait
ljmp
fs
rcrl
jp
idiv
loopne
aad
xlat
xchg
outsb
adc
sub
out
adc
jle
push
inc
add
scas
mov
jo
das
aad
movsl
sbbb
nop
sub
lea
es
xor
enter
xor
inc
adc
in
lea
pop
icebp
pop
shll
mov
sbb
add
scas
cmp
pop
adcl
call
inc
bound
xor
dec
add
mov
jmp
into
dec
xchg
mov
or
dec
xchg
mov
push
into
and
inc
ret
lock
and
push
lock
jno
faddl
jbe
sub
js
ds
push
sbb
xchg
call
sub
lret
ds
stos
dec
jne
fs
test
jmp
dec
mulb
xor
mov
xor
shl
lahf
fistpll
mov
insb
add
sub
adc
xchg
sbb
and
jae
dec
lahf
loop
pop
sbb
pop
mov
jmp
sbb
movsb
nop
adc
stc
sbb
push
xor
cli
sbb
shll
cmp
pop
fisttps
fsubrl
cmp
or
shlw
test
mov
xchg
jl
xor
mov
xchg
aaa
stc
pop
jecxz
jmp
xor
std
xchg
push
push
lea
iret
dec
jge
scas
shrl
outsl
imul
adc
xchg
mov
outsl
addl
adc
sbb
pop
pop
push
fdivr
jns
jg
test
popf
xor
xor
int
insb
dec
xor
sub
pushf
iret
jmp
adc
xchg
push
jmp
fiaddl
push
addl
ja
pushf
aaa
divb
jp
mov
mov
popf
jbe
cmp
mov
mov
mov
mov
js
mov
xchg
adc
pop
int3
push
add
inc
mov
js
into
inc
lahf
int3
xchg
das
arpl
pop
sbbl
movsb
and
cmpsb
inc
ret
cmp
add
in
andb
subb
cmp
test
mov
repz
lret
leave
cmc
jmp
push
hlt
lahf
push
mov
loopne
mov
jp
stos
rcll
push
movsb
call
push
aad
adc
sub
or
mov
inc
add
and
jo
call
cltd
push
lret
mov
ret
xchg
inc
mov
fistpl
cmp
push
int3
loope
jg
xor
ljmp
xor
xor
jmp
jg
cmp
movsl
sbb
repz
cltd
mov
mov
xor
ja
inc
mov
push
xchg
lods
das
cmp
push
xchg
lods
leave
push
push
ret
push
mov
mov
ja
ljmp
repnz
pop
out
cmc
gs
xor
and
aad
pop
loop
stc
cmc
ret
push
in
xor
jmp
or
aad
xchg
lret
adc
jo,pt
mov
enter
push
xor
lret
adc
fiaddl
inc
pop
and
xor
and
xlat
add
inc
jge
gs
xchg
mov
and
pop
mov
testl
repz
cmc
adc
jg
push
push
loope
fmulp
scas
in
push
stos
adcl
test
sbb
sti
stc
mov
icebp
dec
cmpsb
cmp
jnp
out
dec
adcb
inc
mov
test
xor
repnz
fistpll
push
mov
jnp
jg
xor
pop
lret
jne
test
insl
call
out
jg
fst
xchg
dec
mov
lahf
pop
ret
jnp
mov
repnz
lods
cmpsl
inc
mov
int
pop
cmpsl
push
dec
inc
add
fiaddl
sbb
sar
negb
jae
iret
insl
mov
out
icebp
jg
ficompl
sub
jl
cmp
mov
push
cltd
mov
pusha
sarb
insl
imul
pop
xor
push
fdivl
sub
and
jl
test
mov
mov
ss
xor
inc
pop
sbb
lret
dec
dec
lcall
imul
pop
lods
cmp
je
jecxz
cmpsl
xchg
and
mov
sbb
jb
pop
sub
jmp
hlt
or
add
shrl
inc
lret
fcoms
shlb
sub
push
mov
mov
adc
ror
daa
out
insl
pop
out
cmp
dec
iret
lahf
iret
bound
xchg
push
leave
add
fldpi
push
mov
test
stos
cmpsb
inc
push
pop
sbb
jp
xchg
test
xor
insl
sarl
cwtl
xchg
xchg
add
mov
ret
scas
mov
std
in
out
or
ret
dec
nop
jmp
xchg
cmp
insl
addr16
add
dec
in
movb
sub
mov
fsubs
and
ds
shrl
pop
xchg
cmp
push
ja
gs
push
fucomi
xor
lock
push
ror
into
outsl
cmp
xor
flds
pop
cmp
mov
xchg
data16
adcb
jae
jl
shlb
xchg
addr16
push
pop
jl
in
in
ret
mov
test
loope
mov
and
inc
jecxz
jmp
or
jle
popf
xor
xchg
push
loop
pop
jge
fistpl
fwait
je
insl
dec
ret
cmc
and
push
mov
js
mov
aam
inc
or
and
cwtl
push
rcpps
pop
lret
mov
lahf
xchg
int
fldcw
sbb
jmp
sti
mov
rorb
aad
push
js
aaa
sbb
call
sub
mov
aaa
jbe
jmp
and
fwait
sbb
arpl
gs
lods
fdivrp
jle
mov
xchg
clc
xchg
scas
jg
movsl
push
shll
jns
loope
lock
orl
ds
mov
jns
jns
mov
pop
or
outsb
test
rorb
fwait
sub
aam
push
cmc
adc
lea
fsubl
pop
pop
data16
test
mov
cltd
cli
lret
leave
ja
dec
mov
and
push
sbb
out
mov
mov
add
sti
shrb
orb
xchg
pop
adc
xor
xchg
lods
pop
add
rcrb
inc
adc
adc
dec
pop
pop
sub
pop
movsb
add
repnz
fmul
add
bound
xchg
add
lret
fidivl
orl
xorb
iret
mov
inc
add
or
mov
hlt
adc
push
sub
pop
push
add
enter
cmp
mov
or
adc
das
jns
pmaxsw
pop
cmp
xchg
cld
xor
jne
stc
mov
clc
xor
daa
sbb
push
orl
daa
lcall
icebp
jl
fucomi
packssdw
adc
jnp
xchg
pop
les
lock
xchg
dec
add
fsubrl
sbb
ret
incb
repz
fisttpl
mov
andb
cltd
or
rolb
mov
les
dec
call
push
dec
daa
dec
add
mov
push
adc
mov
sti
xlat
jp
and
add
xlat
sbb
xor
pop
nop
inc
xchg
popf
out
in
sti
mov
mov
test
aam
popa
testb
stos
or
jne
sub
push
movsl
jle
rcrb
xor
mov
movsb
sahf
pop
dec
aaa
insb
loope
pop
jecxz
js
dec
pusha
test
jle
iret
cmp
test
pop
pop
test
lods
lret
jno
je
xchg
in
cwtl
loope
shr
push
lds
xor
jle
faddl
jmp
scas
fstpt
cld
jae
lret
xor
fisttps
daa
adc
dec
jecxz
xchg
mov
mov
aam
nop
outsb
xchg
pop
xor
jle
and
sub
loopne
test
mov
call
scas
sbb
cmp
enter
adc
loop
inc
pop
rcrl
pushf
fs
push
xchg
fimull
xchg
mov
cmp
lret
xchg
fcmovbe
clc
cmp
xor
dec
lcall
imul
dec
xchg
fidivl
jno
mov
sub
sahf
ret
js
sbb
jne
icebp
test
add
scas
jmp
lods
fisubs
pop
dec
popa
sub
pop
xchg
mov
mov
jecxz
push
insb
mov
ss
scas
loop
cmp
jp
mov
iret
stos
lret
jne
pop
testl
frstor
lock
xor
out
xchg
push
xchg
mov
test
in
sahf
mov
xor
insl
cwtl
ljmp
mov
dec
lea
incl
or
dec
out
test
sbb
mov
out
jmp
dec
xor
jge
xchg
dec
je
jge
jp
xlat
shl
add
repz
mov
into
bound
mov
mov
pxor
jae
xlat
mov
in
loopne
bound
cmp
xor
lods
mov
fchs
mov
jno
or
push
bts
mov
xchg
ja
lret
jg
sbb
mov
lahf
jle
imul
scas
cmp
fadds
dec
push
push
jecxz
sub
pop
ljmp
fisttpl
xchg
xor
xchg
sub
lods
cltd
andl
test
popa
test
and
lahf
aas
sbb
mov
mov
in
es
cmp
rclb
sbb
out
pushf
int3
jnp
xchg
xchg
pop
jl
pop
or
xor
notb
or
rorb
cmp
sar
xlat
xor
pop
in
jmp
shr
cmpsl
xchg
and
xchg
sbbl
xor
inc
repz
aas
dec
cmpsb
in
sbb
inc
pop
ret
repz
in
out
mov
inc
std
imulb
inc
jns
mov
cmc
test
sub
jge
test
scas
jae
xor
jo
add
xchg
inc
insl
dec
into
sbb
adc
flds
inc
and
lret
and
into
fxch
cld
push
push
into
jo
cld
and
imul
push
in
sti
sub
inc
and
hlt
pop
outsl
jb
push
push
xchg
sub
nop
cmp
push
mov
popf
add
xchg
loopne
loope
lret
enter
cmp
sarl
cmpsl
cmpxchg
xchg
pop
fildll
mov
mov
fmuls
aad
pop
xor
rcrl
xchg
and
inc
dec
pop
pop
xchg
test
push
mov
scas
fldl
pop
dec
pop
mov
les
pop
adc
pop
pop
lahf
lods
popf
push
movsl
rcrl
push
fwait
mov
jl
adcb
jmp
mov
js
test
adc
arpl
push
nop
into
xchg
cltd
fdivrs
xlat
xchg
push
repnz
ljmp
loop
cmp
fnsave
daa
out
pusha
into
dec
lret
gs
test
int3
adc
pop
ljmp
in
mov
add
stos
icebp
out
sub
sbb
addr16
inc
inc
aad
xchg
loopne
or
cs
fcompl
mov
sahf
or
cmc
mov
cmp
fists
fnstcw
es
sub
pop
jne
push
dec
and
cmpsl
mov
add
int3
cmc
push
jecxz
dec
fs
repz
loopne
mov
ficomps
add
out
mov
xchg
cmp
jbe
sbb
add
repz
pop
mov
jecxz
sub
inc
stc
clc
pop
fadd
jo
enter
popa
adc
movsb
roll
dec
rclb
cmp
in
imulb
std
inc
rcrl
pop
stos
jp
ljmp
imul
lcall
insl
hlt
sbb
xchg
pop
int3
cmpsl
out
data16
mov
fs
ds
jmp
clc
nop
adc
inc
and
out
xchg
cmp
std
add
es
cld
mov
repnz
outsl
pop
inc
nop
inc
mov
mov
add
cltd
add
push
jnp
cmc
sub
xchg
enter
jo
in
ficompl
sbb
fisttpll
shll
lds
mov
push
cmpsb
jmp
outsl
mov
lds
and
clc
dec
cmp
jmp
and
inc
out
jae
jbe
jno
dec
lock
inc
add
mov
je
dec
pop
cltd
sub
push
addb
sbb
aam
mov
xor
mov
movsb
mov
jo
aaa
add
xor
test
jmp
paddusb
mov
push
jge
out
test
rcrb
cli
sub
dec
and
and
stos
sub
roll
mov
dec
inc
pusha
jno
adc
inc
setle
outsl
and
sarl
sahf
push
lahf
xor
pop
ja
xchg
mov
mov
mov
insb
ja
mov
jne
daa
mov
jnp
decl
jecxz
add
addr16
add
bound
mov
xor
add
fidivrl
cmpsl
mov
pop
inc
or
adc
movsb
add
sub
sbb
mov
loopne
mov
jp
pop
arpl
cmp
xor
xor
add
dec
cmpsl
test
inc
dec
sti
jge
jg
inc
push
add
imul
lods
push
inc
imul
mov
cmc
lahf
mov
rcrb
jo
inc
mov
or
int
inc
leave
sbb
push
jle
mov
sahf
daa
push
xchg
les
lahf
mov
test
mov
mov
daa
cli
roll
pop
xchg
xor
dec
fimuls
dec
je
lcall
in
test
add
vcvttpd2dqy
jl
inc
enter
adc
outsl
adc
ss
pop
mov
mov
shrd
mov
fldenv
mov
sub
arpl
mov
adc
xor
add
xchg
mov
cld
mov
dec
sub
repz
jle
jecxz
xor
xchg
gs
inc
dec
dec
xor
arpl
bound
mov
stos
std
std
cli
and
stos
sbb
ret
xchg
out
daa
in
jmp
daa
in
push
sbb
cmpl
dec
sub
ss
push
jecxz
jl
add
xchg
out
loop
jo
add
pop
xor
das
popa
out
jle
jecxz
pop
add
sub
roll
sbb
movsl
or
in
insb
mov
stc
aad
rcrl
dec
adc
stos
xchg
inc
jge
fdivs
push
out
lods
jmp
mov
and
lds
loope
pop
dec
mov
stos
jmp
pop
les
pmulhuw
xchg
cld
lcall
push
cmc
cli
jg
mov
loope
aad
aad
nop
xor
mov
mov
sub
imul
mov
mov
imul
ret
out
test
imul
stc
repnz
xchg
out
mov
push
push
push
out
ja
push
lcall
or
sti
ret
sub
divl
inc
inc
jecxz
insl
scas
fildll
mov
stos
incl
inc
xchg
ds
popa
xor
mov
pop
inc
jno
js
sbb
sub
add
loopne
inc
arpl
cmpsb
xorb
push
fimull
sti
add
leave
je
xchg
push
jb
ja
jae
pop
in
and
js
adc
jle
loopne
adc
mov
push
fbld
push
cltd
fcoml
cs
loop
insl
mov
adc
inc
cmp
jl
testb
add
shrb
dec
sqrtps
hlt
mov
pop
jnp
jecxz
or
mov
mov
mov
and
cmp
push
fistpl
pop
adc
dec
dec
inc
xor
pop
or
pusha
cld
dec
inc
pop
lcall
cmp
push
js
mov
lock
addb
jg
sub
in
push
cld
data16
lahf
push
loope
in
rcrl
xchg
push
imul
fmull
lock
add
popf
mov
repz
pop
cmp
popf
imul
fdivr
fcomps
out
clc
inc
outsl
mov
mov
or
push
push
test
in
mov
mov
jbe
sbb
push
dec
sbb
daa
dec
mov
shlb
popa
jge
push
pop
dec
adc
pop
pop
loope
repz
sarl
leave
and
mov
inc
test
jae
lock
push
dec
sbb
sub
lods
outsl
push
sub
sti
adcl
lods
roll
push
xchg
test
xchg
cld
xchg
pop
mov
outsb
imul
fcomps
xchg
sti
loope
cmpsb
arpl
xchg
dec
call
or
ret
cltd
mov
xor
adc
lcall
add
and
loopne
push
movaps
icebp
mov
and
adc
cmp
xor
adc
push
mov
fdivs
add
mov
loope
xchg
pop
sbb
out
daa
popf
mov
cmp
jno
test
adc
adc
dec
xchg
cmpsl
pop
xor
inc
ljmp
sub
aad
mov
in
ds
faddl
bound
in
push
adc
push
pop
dec
xchg
ret
mov
or
shrb
push
loopne
fidivrs
mov
inc
test
lods
push
loop
dec
cmp
xorl
jl
xor
jmp
sbb
push
ds
mov
sbb
and
pop
push
mov
lods
ds
dec
mov
xchg
inc
gs
popa
ret
mov
out
jg
adc
mov
nop
loopne
daa
lods
enter
popf
scas
lods
fcompl
dec
and
divb
xor
xchg
inc
xor
leave
add
dec
mov
pop
test
pushl
icebp
js
pop
xchg
popa
test
cmovl
dec
packssdw
shlb
mov
fwait
enter
lret
mov
push
out
stos
mov
in
push
lea
mov
xlat
and
inc
jecxz
push
or
loope
push
cmp
stos
push
jne
pop
lods
sbb
or
into
xchg
adc
xor
scas
repz
les
popf
push
sbb
pop
push
loop
lahf
out
jecxz
dec
lds
xor
xchg
pop
repz
cmp
xor
jmp
xlat
in
xlat
loope
int3
dec
push
jns
sbb
pushf
xchg
insb
in
imul
loopne
or
nop
mov
adc
cmc
out
je
std
jg
inc
inc
ret
aaa
dec
xchg
push
xchg
xchg
mov
stos
xchg
lahf
or
mov
dec
inc
sub
mov
rolb
pop
and
pop
sbb
cmp
mov
mov
imul
movsl
lods
mov
mov
pop
cwtl
aaa
jne
mov
mov
out
loope
push
xor
mov
or
ljmp
sbb
sarb
or
xchg
lods
movswl
sub
cmp
mov
ror
jns
mov
push
cmpsb
fdivrl
xchg
cmp
sbb
dec
aam
daa
movsl
rcll
cmp
in
mov
lret
pop
es
adc
iret
mov
into
ja
sbb
pop
lods
xor
lret
clc
lods
sbb
dec
mov
sbb
popf
add
jp
iret
pop
push
push
xor
add
cmp
inc
cmp
mov
cwtl
jmp
xor
cmp
mov
sub
push
and
jge
ja
mov
inc
scas
lods
gs
je
ljmp
hlt
stc
jle
add
pop
inc
call
ja
lds
mov
lret
push
movsb
hlt
xor
sub
stc
stos
mov
fistps
and
outsl
ret
mov
cmp
cwtl
test
add
test
or
out
shrl
inc
inc
cmp
test
push
xor
sbb
push
sbb
mov
leave
popa
push
jo
orl
sub
pop
clc
ljmp
test
or
adc
dec
or
push
daa
and
push
adc
mov
lods
int
xor
aam
sahf
sbb
inc
pop
inc
dec
ret
inc
mov
arpl
fmull
mov
xor
sbb
and
scas
adc
mov
jae
lods
out
sti
adc
and
cmp
mov
rcll
imul
in
mov
xor
jbe
push
xchg
jbe
cmp
int3
inc
test
pop
push
lret
mov
xchg
pop
or
jb,pt
sbb
push
aam
outsb
dec
in
arpl
jp
mov
imul
stc
mov
das
sub
pushf
jp
mov
lret
mov
jns
fidivs
jle
jno
loop
pop
addr16
mov
jo
xchg
inc
dec
mov
dec
insl
inc
adc
insl
xchg
negl
add
test
sbb
test
test
push
ds
insl
cmpsb
cmp
scas
aad
lcall
aaa
push
mov
and
lds
out
mov
dec
loope
repnz
hlt
add
lahf
xor
adc
outsb
outsb
cmp
or
lods
cltd
cmp
push
push
cli
mov
fcoml
fcomi
adc
mov
rcll
repz
pop
fbstp
mov
stc
or
fwait
dec
xchg
fldt
pop
sub
leave
mov
xchg
dec
inc
add
mov
dec
mov
or
mov
ja
mov
ss
cmc
rcll
mov
out
sub
push
pop
nop
adc
imul
sbb
aad
xchg
aas
adc
aad
jno
fs
pop
lea
mov
mov
decb
ds
jg
insl
repz
adc
mov
andl
arpl
int
enter
test
jo
int
xchg
test
mov
mov
loop
cmp
rol
inc
je
add
inc
add
in
movsl
testb
fcomps
aaa
dec
inc
fisubrs
sub
pop
out
pop
lret
dec
sub
adc
xor
push
cli
das
imul
jb
ret
mov
sub
aam
xchg
mov
rcrl
jecxz
cmp
in
mov
cmpsl
in
inc
and
mov
test
dec
push
inc
mov
sti
das
lods
sbb
xchg
mov
in
and
sbb
stos
cmp
push
mov
gs
dec
jle
mov
je
int3
sub
cld
xchg
pushf
inc
jbe
movsb
dec
stos
lods
outsl
outsl
test
or
push
mov
adc
rol
and
xchg
sub
out
pop
js
and
or
popf
mov
push
mov
popa
orl
mov
leave
inc
out
cs
popa
mov
cmp
push
jg
cmp
pop
mov
lods
mov
adc
cmp
rcrl
loopne
adc
into
insb
lds
or
std
es
cmpsl
inc
jae
fwait
push
cmp
lods
jecxz
das
int
cli
cmp
mov
mov
pop
popa
nop
push
pop
sbb
in
dec
jbe
shr
test
aas
fwait
insl
sub
mov
and
sbb
test
jg
sub
icebp
inc
js
je
mov
sub
andl
loopne
adc
pop
sub
mov
push
lret
lret
insl
inc
scas
push
dec
mov
testb
xchg
add
or
imul
or
push
call
cmp
leave
mov
mov
lret
sub
pop
cmp
shr
or
sbb
nop
aas
ja
ret
aaa
jo
sbb
push
mov
mov
test
xor
push
dec
push
or
or
call
popa
xor
sbb
and
mov
push
insl
lcall
out
mov
fsubrp
xor
mov
insb
popf
and
xchg
clc
je
xor
hlt
xchg
in
mov
pop
and
mov
out
gs
repnz
cld
imul
add
jnp
sbb
add
mov
loop
cmpsl
push
lods
rcrl
imul
dec
inc
jg
cwtl
shll
pop
cs
cmp
push
ret
jp
loope
mov
pop
add
out
or
jns
rclb
sub
ficoms
pop
mov
xchg
push
aam
push
sarl
sbb
cmp
inc
add
jne
mov
mov
clc
sbb
rcll
or
sti
fnstsw
movsb
insl
outsb
andl
mov
jp
and
xchg
rcl
ljmp
jecxz
clc
fwait
dec
jg
repz
shrb
push
js
icebp
mov
inc
jmp
adc
cmc
iret
adcb
push
setne
add
push
sahf
jno
adc
pop
or
pop
pop
sub
push
stc
clc
mov
mov
aam
jns
fdivs
mov
mov
test
fmulp
jg
mov
xchg
push
xor
push
aam
dec
mov
imul
mov
scas
fidivs
cltd
add
xor
out
jnp
xchg
pop
sub
push
mov
into
xchg
fsubrp
sbbl
dec
mov
cmp
stos
shlb
adc
cwtl
push
rolb
jb
sbb
arpl
mov
cwtl
add
push
ficoms
mov
push
cmpl
push
paddsb
movsl
add
mov
lcall
xchg
out
das
repz
pop
ljmp
and
adc
cmpsb
test
pop
mov
cltd
int
xor
sub
push
push
les
fdivrs
xlat
lds
fimuls
add
sbb
mov
sub
addr16
mov
dec
popa
add
xchg
imul
fs
xabort
mov
roll
jnp
ret
mov
add
jne
fldenv
and
pop
fistps
xchg
out
insl
insl
sarb
jno
ds
xor
out
lret
xchg
pop
mov
ficompl
jae
sub
xchg
sub
cmp
aas
xor
outsb
popa
sti
ret
sub
rcrb
or
jmp
in
cmc
or
xor
mov
les
sub
mov
and
cmpsl
push
mov
and
jle
jns
or
popf
mov
xor
std
or
leave
sub
sar
repnz
shll
fimuls
pop
imul
ret
jl
cwtl
stos
popl
jbe
push
int
inc
inc
push
jecxz
xchg
hlt
rclb
push
sbb
in
test
jns
ljmp
xchg
pop
loopne
pop
cwtl
mov
cli
sti
in
sbb
in
sub
push
pop
cmc
call
xchg
pop
roll
sbb
mov
xchg
addr16
bound
jl
xor
jne
pop
sbb
arpl
sub
dec
cmp
jo
cld
mov
test
or
jmp
dec
jae
cmpsb
outsl
mov
jns
push
and
sbb
sbb
push
iret
std
pop
pop
adc
lahf
push
lea
stc
mov
addr16
stos
andl
mov
mov
xor
mov
push
fwait
lods
stos
xor
test
and
inc
lret
fcomi
push
jb
cmp
fdivr
orb
fstps
je
sbbl
stc
mov
insb
add
push
call
loope
inc
mov
jecxz
out
and
jne
cs
pop
iret
and
xchg
insl
lcall
sarb
mov
andb
push
test
loopne
push
xchg
adc
out
adc
es
fpatan
leave
testl
data16
cmp
out
xchg
adc
aam
std
je
mov
rcrl
pop
jle
jecxz
fimuls
into
mov
jecxz
push
in
pop
adc
fildl
fldl
ds
imul
addl
imul
cmp
leave
daa
lods
mov
and
mov
loop
test
cmp
sbb
aaa
jbe
fsubrs
pop
stc
in
cmpb
push
push
sbb
insl
stos
jns
lahf
sub
or
cmp
dec
cmp
in
fistps
sahf
mov
lahf
or
js
inc
rcr
lds
mov
mov
pop
test
fst
inc
movsl
scas
or
and
pop
sub
cltd
in
popa
cmp
out
add
arpl
mov
mov
push
loopne
mov
jbe
int3
std
popf
in
sbb
add
add
sub
fs
data16
outsb
mov
mov
cmp
fnstcw
les
addr16
les
adc
or
lods
cltd
or
xchg
sbb
adc
out
lods
add
xor
fwait
xor
dec
cmp
das
xor
adc
addr16
mov
or
int
mov
in
pushf
mov
xor
sbb
sarb
add
xchg
aas
jp
xchg
jle
pop
aam
add
sbb
fisubs
out
mov
idivb
notl
ss
repnz
mov
dec
mov
xchg
add
cld
sub
shrl
xchg
aam
add
pop
fstl
cmc
pop
jno
adc
dec
pop
fldcw
enter
out
sub
push
mov
insl
test
clc
es
test
lret
sub
loopne
and
mov
dec
pusha
and
adc
inc
cmc
in
jl
jae
mov
mov
xchg
fcmovnu
icebp
push
pop
fdivrp
xchg
sbb
mov
nop
out
ljmp
sbbb
and
mov
flds
and
pop
push
adc
sbb
rorl
ja
dec
xor
jp
sbb
mov
dec
add
xor
cs
push
outsb
mov
xor
mov
ja
mov
int
pop
and
xor
arpl
and
shrl
dec
rcrl
test
shll
mov
leave
xor
or
dec
inc
fwait
xorb
js,pn
lret
dec
mull
push
cmp
mov
stc
jb
mov
into
outsb
ds
in
mov
les
cmp
out
dec
cwtl
call
fs
cwtl
iret
pop
aas
lods
dec
lea
mov
adc
cld
nop
cmpsb
or
xor
xlat
add
iret
subl
enter
jae
rol
adc
xorb
jno
jns
sub
mov
push
fists
jne
inc
pop
mov
icebp
mov
call
jge
test
add
inc
or
or
pop
sbb
and
leave
add
lret
inc
add
push
das
in
and
pop
add
adc
pop
addr16
push
sub
cld
push
rdpmc
adc
in
push
in
and
push
cmpsb
seta
dec
push
aas
stos
shr
dec
loopew
das
in
in
mov
jle
icebp
sbb
xchg
mov
push
push
pop
sahf
pop
mov
mov
mov
jmp
dec
mov
call
pop
pop
cmpsb
cmp
xchg
and
mov
cmp
mov
dec
sbb
lods
mov
sbb
faddl
inc
cmpsb
mov
jnp
fs
dec
mov
add
push
cli
sbb
fstpl
enter
les
or
ret
ficomps
pop
fcomp
sarl
push
jo
test
cmpsb
ret
xor
daa
cmp
mov
aas
xlat
lds
and
scas
fstps
push
mov
cmpsl
out
movsb
in
je
test
icebp
and
andb
lret
fildl
sub
icebp
xor
xchg
int3
data16
mov
ljmp
add
test
ljmp
cmpsl
add
lret
inc
adc
aas
repz
fwait
dec
sbb
pop
cltd
adc
cmpsb
sub
stos
stc
stc
andl
popa
and
iret
ret
or
pop
aad
dec
popf
pop
int3
insl
icebp
icebp
stc
popf
push
cwtl
and
or
mov
adc
test
mov
xor
or
scas
mov
leave
cmp
dec
das
hlt
mov
repz
inc
dec
pop
mov
or
add
fxch
loopne
leave
mov
add
enter
lods
fcomp
loope
int3
repnz
jns
mov
add
fistps
ret
pusha
xchg
lret
popf
add
mov
cld
dec
jns
jl
fs
add
lret
mov
jae
ljmp
pop
shlb
dec
enter
stc
sub
cld
negl
loope
lds
lock
cs
movsl
insl
loope
mov
fwait
add
mov
sub
cmp
fimuls
ds
inc
jge
push
lea
mov
inc
rorl
cltd
inc
dec
aas
xchg
bound
push
fldl
dec
pop
mov
dec
add
jns
push
xchg
xchg
adc
addl
push
jae
cli
pop
stos
jne
xlat
lret
mov
into
ja
popf
mov
in
gs
call
inc
adc
ds
and
xor
enter
push
rcr
rorl
cs
cmp
lret
sbb
cmp
arpl
mov
mov
test
and
inc
je
test
inc
and
scas
adc
sub
mov
jl
pushf
iret
mov
mov
test
xor
cwtl
mov
mov
xorl
icebp
inc
mov
movsb
orl
movsb
push
test
jb
sbb
fs
inc
jb
test
scas
pop
sbb
cmp
ds
push
fadds
cmp
repz
bound
popa
mov
pushf
sub
popf
adc
lcall
imul
add
loopne
cmpl
xchg
loop
sbb
out
jecxz
mov
xchg
int
jge
sbb
and
call
mov
movsl
mov
pop
imul
int3
push
out
xchg
hlt
movsb
mov
out
sbb
aaa
lock
mov
popf
dec
in
jb
jb
jmp
cmp
js
scas
lret
mov
add
mov
or
pushf
push
xlat
mov
arpl
loopne
mov
mov
or
jl
int
call
mov
inc
add
mov
adc
jb
sub
rorb
ficompl
xor
inc
aaa
aaa
inc
fcompl
in
sub
cs
cmp
lcall
cld
test
dec
pop
mov
sahf
jg
test
les
cli
push
dec
call
dec
cmp
sbb
xchg
and
in
lcall
pop
lahf
andl
pusha
icebp
jge
ss
or
xchg
mov
jne
dec
in
xor
sbb
ficompl
push
sti
sub
out
push
int
lock
icebp
xor
xchg
add
xlat
icebp
sahf
adc
fistps
inc
jge
sub
dec
jl
xor
in
aam
or
arpl
mov
add
sbb
adc
pusha
xchg
stos
pop
cs
scas
insl
or
mov
jl
stos
pusha
pushf
push
dec
int
or
test
cltd
mov
jge
ljmp
jge
ret
je
outsl
add
or
sub
in
clc
jo
lahf
sbb
into
repnz
push
int
sub
xor
xor
sub
cwtl
sub
mov
or
add
mov
mov
out
pop
pop
fildl
mov
or
mov
stos
push
sbb
push
aad
mov
mov
daa
mov
mov
adcl
xlat
add
jge
sub
repz
lods
iret
or
sbb
dec
mov
mov
sub
add
jns
mov
nop
bound
ja
xor
xchg
cmpsb
jge
add
rorl
add
adc
inc
mov
cwtl
xor
es
push
cld
adc
xor
in
lds
mov
repz
adc
cmp
ldmxcsr
aam
xchg
mov
mov
loop
fcompl
jp
sbb
test
push
mov
loopne
jne
xchg
inc
sub
int3
out
xlat
std
mov
ret
fcoms
add
loope
fwait
jge
test
pop
mov
sub
mov
scas
orb
int
fidivs
pop
lahf
fsubr
pop
shr
xchg
xchg
or
xchg
sbb
jno
adc
and
add
lds
movsl
insb
xchg
inc
sbb
xchg
jo
push
ffreep
cs
xchg
das
ret
out
fbstp
and
jmp
dec
std
mov
cmp
loopne
scas
mov
xchg
jns
xor
subl
cmpb
cmpsl
pusha
push
stc
fadds
mov
push
sub
enter
movsb
xchg
out
dec
std
into
nop
insb
inc
mov
inc
sub
cs
rclb
pushf
pushf
insl
lods
jnp
xor
xchg
fstpt
pop
dec
rclb
scas
mov
test
stos
lcall
test
pop
fnstenv
std
sarl
es
sbb
sub
movsl
or
mov
dec
clc
insb
fnstsw
dec
push
shlb
test
mov
int
fildll
xchg
sub
mov
ljmp
inc
pop
adc
add
cmp
or
test
cmp
or
adc
test
and
bound
aaa
inc
push
pop
or
icebp
aas
push
cltd
into
xchg
mov
and
pop
call
adc
mov
mov
imul
in
js
js
cmp
pop
bound
dec
cmpl
jecxz
sbb
icebp
jb
cmp
fidivs
pop
adc
sub
pop
mov
and
adc
dec
adc
movsl
pop
cmovp
jae
sub
sti
cmp
mov
adc
push
cmp
inc
sub
mov
mov
test
stc
ss
lods
stc
movb
cmovae
shr
inc
std
imul
or
jno
mov
stos
out
dec
out
cs
xor
fnstcw
inc
scas
gs
xchg
sub
je
pop
cmp
pop
adc
shl
mov
push
adc
jnp
repz
add
mov
mov
adc
mov
jg
sbb
nop
leave
dec
fisubs
sub
add
inc
fwait
adc
or
xchg
or
mov
les
insb
or
imul
lea
sahf
sub
std
mov
cwtl
test
adc
mov
faddp
or
push
test
gs
jnp
mov
in
or
imul
xor
inc
rolb
enter
pop
lcall
scas
int3
lret
sbb
in
imull
or
out
in
shrl
adc
leave
divb
push
pop
jnp
jb
negl
adc
jmp
and
shll
inc
rclb
fidivrl
repnz
sbb
lret
xchg
into
push
stos
mov
cwtl
pop
dec
test
ret
into
fistpll
pop
cmpsb
jmp
iret
lret
push
jns
jnp
dec
adc
push
inc
adc
pushf
ret
jmp
xor
imulb
ss
inc
pop
imul
idivb
or
lea
mov
push
out
mov
or
call
inc
test
xchg
jbe
ja
inc
inc
sub
inc
pop
add
and
fimull
dec
xor
mov
cmp
daa
gs
add
sub
add
push
push
test
ja
sbb
cmpsb
add
add
clc
dec
nop
out
push
xor
jmp
xchg
xor
cmp
fsub
imul
leave
adc
add
xor
jmp
cli
sub
mov
int3
cmp
bound
xchg
cmp
xlat
dec
sbb
cmpsb
push
sub
cmp
iret
xchg
mov
arpl
in
std
add
loope
lret
inc
fsts
es
int3
push
xchg
adc
add
dec
jge
imul
and
mov
mov
sub
mov
xor
cmp
push
repz
lahf
popf
jae
sub
and
fbstp
in
cs
jae
xor
in
popa
rcr
in
lret
pop
dec
or
lret
bound
insl
pushf
cli
mov
mov
mov
insl
mov
ret
and
ljmp
push
jle
fcmovb
or
cmp
adc
sbb
aas
stos
std
cmp
xchg
orb
cmp
lret
jecxz
mov
aaa
out
cmpsb
mov
out
jge
daa
mov
cld
and
rcrl
scas
repz
mov
fstl
jne
je
insl
pop
mov
push
add
dec
dec
aam
sub
inc
add
xor
ret
lahf
xchg
imul
adc
std
sbb
and
scas
mov
sbb
jp
mov
out
stos
sbb
xchg
rcll
dec
idiv
xchg
int
lock
sbbl
add
scas
cwtl
aam
mov
cmp
jecxz
mov
imull
imul
mov
xchg
inc
xlat
fcoms
mov
push
cld
std
dec
mov
aam
xchg
in
nop
jne
inc
lret
daa
mov
mov
jl
mov
mov
inc
add
cmp
repnz
add
mov
pop
cmp
pushf
add
push
daa
mov
bound
add
out
lret
incb
cmp
sbb
dec
sub
mov
fcoml
xor
shl
into
jmp
sbb
pushf
sbb
dec
fwait
bound
dec
mov
fcmovne
in
enter
lahf
sbb
fcoms
or
xchg
das
pusha
xchg
mov
push
cltd
cmp
inc
jns
xchg
dec
pop
cmp
jns
inc
sbb
sti
mov
xchg
push
push
mov
push
mov
lock
mov
cmpsl
jp
iret
shr
fmuls
xchg
insl
mov
movsl
out
push
xchg
sub
pop
scas
out
dec
fisttpll
mov
outsb
leave
fisubrl
testl
xchg
mov
mov
dec
mov
nop
and
filds
hlt
ss
pop
xor
outsl
adc
push
subb
movsl
xor
std
pop
fistpl
pop
and
dec
dec
jmp
xor
pop
cmp
sbb
xchg
or
mov
pop
jnp
imul
sub
in
jnp
lds
aad
out
rclb
push
jmp
sub
dec
andl
pop
cltd
xor
pop
xor
lock
shlb
mov
push
cmpl
insl
adc
mov
lds
ror
or
loope
jg
mov
cmpb
fstpl
adc
push
xchg
xchg
mov
dec
pop
xchg
aas
jge
xchg
mov
adc
pop
inc
xchg
shrb
jle
orl
adc
add
nop
cmp
or
clc
shrl
sarb
test
sbb
or
mov
jg
jns
arpl
mov
stc
loop
fiadds
sbb
jl
test
dec
jb
aaa
cmp
cmp
mov
shrl
mov
push
das
or
roll
inc
stos
pop
pop
mov
mov
add
addr16
loope
repnz
push
or
or
add
pop
mul
sub
xchg
jle
insl
xlat
add
shrb
jb
mov
or
push
cmpsl
mov
adc
and
fdivr
inc
jbe
ret
test
shlb
push
das
insb
lret
inc
call
or
fwait
cmp
aas
sbb
xchg
test
dec
add
dec
scas
cmp
or
pop
jno
repz
in
je
sbb
scas
xorl
loope
cmpsl
xor
sahf
js
jl
adc
aad
fistl
pop
add
leave
pop
stos
cmp
aad
outsl
ret
pop
pop
frstor
hlt
pusha
std
or
mov
mov
test
add
jecxz
pop
jecxz
dec
daa
rol
cmp
adc
loop
movsl
aam
mov
movb
test
cltd
lahf
in
out
add
xchg
xor
cs
pushf
in
ds
enter
into
mov
add
cmp
sub
mov
push
aas
not
rolb
fs
or
aad
push
ss
ja
cmp
adc
loopne
addr16
inc
cmp
xchg
call
andb
dec
movsb
pop
sub
push
shlb
or
in
ss
popa
stos
and
js
loopne
mov
and
fdiv
call
xchg
test
das
adc
xor
pop
pop
dec
aaa
leave
mov
das
mov
inc
adc
bnd
addr16
mov
nop
int
fwait
loope
xchg
adcl
fldenv
test
sub
lods
dec
ds
jg
sbb
std
inc
lds
out
sbb
mov
outsl
mov
into
sbb
cmpsl
ret
and
push
and
int3
push
lds
enter
call
add
inc
div
es
mov
adc
or
ret
sub
xor
sahf
cs
pop
and
je
jns
xor
stos
mov
jle
pop
cmp
addb
ss
sahf
adc
jp
ja
cli
shlb
and
add
cmp
mov
ljmp
lret
push
cwtl
stc
call
push
xor
int3
sub
sbb
lods
xor
mov
or
mov
data16
adc
aad
or
add
sar
xchg
mov
in
xchg
out
mov
or
ds
mov
in
xlat
cld
out
cwtl
adc
push
int
inc
movsb
add
inc
loope
pop
sbb
lds
std
add
jno
es
pushf
aad
and
lock
cld
cmp
cmp
ss
int
add
jnp
push
clc
lretw
sbbb
xor
cs
mov
ret
push
xor
or
sub
pop
mov
jno
scas
loopne
or
dec
sarb
xchg
addl
or
sarb
ficoms
sub
enter
out
inc
add
out
inc
jnp
jmp
aam
mov
in
dec
mov
push
or
aam
mov
mov
jo
add
pop
or
sbb
cmc
adc
mov
hlt
in
loopne
inc
addl
push
popa
testb
sub
jo
lret
iret
js
xor
cmp
ror
mov
fcoml
lods
sarl
inc
scas
mov
iret
push
cwtl
dec
pushf
aaa
scas
xor
mov
xchg
xorb
sbb
mov
xor
call
xchg
mov
cmovl
test
gs
dec
jnp
or
orl
and
jae
lret
loop
cmp
fbstp
dec
push
sti
xchg
jmp
cmp
mov
jbe
xchg
or
xor
inc
aad
cmp
sub
jno
inc
mov
push
in
das
push
mov
pop
sub
dec
mov
roll
cmp
dec
adc
and
loope
shrl
mov
imul
or
retw
jp
iret
sahf
das
fisttps
mov
inc
mov
sub
adc
popf
test
add
sar
pop
orb
subb
adc
out
xchg
pop
pusha
xor
mov
cmpsb
or
mov
sub
in
push
xorb
or
xor
mov
mov
cwtl
dec
pop
push
dec
adc
dec
dec
push
aaa
jp
cmc
dec
cld
repnz
adc
cmp
lret
fsubrs
es
sbb
ljmp
mov
loopne
rcrb
mov
jmp
push
imul
add
fcomps
int
call
inc
rol
stos
movsl
shll
enter
lret
out
xchg
neg
pop
jbe
lret
push
int3
inc
movsb
mov
cmp
jg
rcrb
mov
jge
xor
push
cmpsb
stos
jl
aam
pop
add
cmp
cs
insl
out
fadds
jg
cmp
xchg
sbb
addr16
sbb
adc
ds
xor
test
and
add
punpckhwd
sub
xor
lods
mov
dec
jl
sub
fnstsw
mov
and
mov
xchg
lahf
mov
out
mov
out
jp
adc
sti
mov
mov
mov
mov
inc
movl
int3
jmp
inc
and
mov
outsb
ret
fwait
sub
xchg
jns
addr16
test
mov
jnp
shlb
lret
dec
out
pop
lret
jb
add
pop
add
in
xor
sub
dec
cli
adc
stos
sti
sbb
stos
xchg
sub
loopne
mov
lods
das
mov
jbe
or
xor
movsb
pop
dec
mov
cmp
inc
cmp
add
jp
lret
stos
jge
aaa
dec
xchg
fs
and
or
adc
mov
cmp
inc
pop
rorl
fsub
push
cmp
fistpl
test
movsl
int
sub
std
dec
ljmp
or
mov
jb
test
scas
stos
inc
cld
push
inc
je
jae
push
dec
push
sbb
cmp
divb
stos
fstps
inc
loop
push
leave
fdiv
sti
loope
fstpt
loope
adc
xchg
mov
push
mov
push
call
jecxz
jne
dec
add
xchg
scas
pop
mov
xchg
sbb
push
std
mov
test
stos
or
icebp
imul
mov
mov
divb
sbb
fwait
leave
cmp
mov
mov
xchg
stc
xor
jl
add
xor
adc
push
push
test
inc
dec
jl
jne
pop
jne
cmc
inc
loop
inc
imul
out
loop
cmpsb
mov
es
mov
daa
jge
addr16
mov
decl
negb
lock
xor
sti
jns
push
loopne
frstor
xor
jmp
aaa
imul
xchg
mov
jne
dec
mov
inc
sti
push
repz
enter
inc
div
icebp
push
pop
mov
jae
dec
cld
and
or
je
fwait
pop
xchg
stos
sti
sbb
pop
data16
jno
sbb
cmp
pop
aam
xor
es
xchg
pushf
mov
sub
xor
push
pop
sub
loope
call
sub
loop
add
test
xor
sub
out
movsl
fsubs
push
push
data16
mov
scas
mov
aaa
push
push
pop
adc
popf
xchg
pop
jnp
mov
loopne
orb
movsb
push
add
add
add
jns
pop
into
incl
sub
aaa
in
add
push
lret
adc
sbb
xor
cmp
test
in
xlat
ret
scas
jmp
movsl
fwait
mov
ficoml
or
outsb
dec
or
xor
fwait
add
inc
data16
inc
pop
scas
out
mov
test
push
mov
xchg
sti
pop
enter
jge
into
lcall
loop
mov
in
test
jb
je
mov
mov
lods
mov
and
xchg
stos
ljmp
daa
mov
cmpb
and
sub
mov
imul
dec
ret
jae
pushf
mov
outsb
push
or
cmp
mov
adc
and
fisttps
bound
mov
fimull
adc
mov
xlat
adcl
and
mov
push
dec
inc
inc
cltd
outsb
mulb
in
sarl
cwtl
push
shr
sbb
sbb
push
int3
xor
mov
cmp
fs
pop
lods
mov
fsts
bound
sbb
xor
clc
cmp
clc
mov
pushf
mov
ror
xor
lret
cmpsl
out
test
sub
daa
inc
scas
enter
dec
bound
ds
pop
cld
mov
stos
xchg
xor
movsb
cmc
call
jle
and
into
stc
scas
xchg
out
stos
mov
lds
test
in
das
sti
push
adc
mov
xchg
jno
popf
dec
sarb
dec
sub
sbb
cmp
scas
add
es
nop
outsb
call
test
jno
cmp
and
lods
mov
inc
jmp
ds
mov
dec
push
dec
push
popa
fwait
ret
inc
lahf
push
mov
mov
push
pop
lods
inc
in
js
cltd
js
xchg
sbb
jbe
ss
aad
imul
mov
push
jmp
enter
pop
ja
add
cmpsl
inc
out
mov
xchg
movsl
dec
sub
arpl
dec
out
add
xor
xchg
and
iret
int3
insb
ds
in
xor
mov
in
inc
add
dec
pop
aas
lret
add
ret
mov
sub
fildl
and
xlat
mov
neg
insl
dec
dec
sub
jl
lock
cmc
aas
sub
mov
insb
add
ss
and
xor
jg
mov
or
outsb
push
test
ss
cmp
aaa
mov
adc
push
and
mov
in
pop
scas
fisubl
fists
mov
mov
int
cmp
xchg
enter
sbb
pop
nop
movsl
cltd
test
arpl
jo
outsb
pop
cwtl
or
dec
das
nop
jae
shll
mov
add
pop
xchg
lea
inc
sbb
inc
inc
mov
pop
adc
rcll
and
enter
adc
rorl
jae
rcll
sbb
cmc
mov
and
in
jae
dec
mov
jg
ja
ja
fistpll
pop
pop
jge
adc
add
scas
add
pop
subl
adc
or
cmp
or
out
jmp
fsubs
jne
cli
sbb
push
testl
push
sbb
pop
adc
icebp
inc
stos
lods
sub
push
jnp
pusha
jge
pavgb
and
jg
adc
sub
idiv
or
add
push
flds
inc
ret
sarb
add
into
ja
shlb
inc
andb
add
loop
mov
fstl
mov
fsqrt
cmc
lods
add
sub
mov
out
frstor
add
inc
dec
daa
cmp
sub
adc
adc
or
movsl
daa
imul
je
jne
and
test
lea
popa
lods
xchg
fnsave
ret
jae
gs
adc
pusha
push
dec
sbbl
rorb
or
mov
dec
inc
sti
mov
in
push
or
lods
fwait
pop
or
scas
stc
mov
jae
push
mov
jo
sbb
stc
imul
je
and
mov
mov
das
cld
dec
cmp
enter
fs
mov
jp
mov
mov
repnz
bound
pop
mov
dec
xchg
fs
mov
sahf
out
xchg
stos
jmp
jbe
sub
stc
add
or
mov
and
ficoms
xchg
fisubrl
push
push
mov
ja
xchg
aam
pop
or
and
pop
mov
daa
popa
repz
test
mov
mov
pop
xlat
mov
lahf
jbe
int
scas
in
mov
imul
cmc
mov
push
pop
je
mov
add
and
adc
sbb
inc
add
cmp
add
push
and
ss
push
xor
addr16
or
adc
adc
xor
pop
mov
std
jns
sub
jne
aas
flds
cltd
movsb
les
lret
mov
pop
mov
pop
or
cmp
clc
jl
cld
es
adc
inc
mov
fstps
mov
rcl
rcr
inc
shrl
inc
ret
aad
movsb
and
sbb
sub
movsb
data16
ret
adc
jo
push
push
jmp
fs
scas
xchg
dec
jae
out
idivl
movsl
aad
sub
mov
jbe
mov
in
xchg
ror
jne
jp
add
mov
mov
mov
cwtl
js
jp
pop
sbb
pusha
or
nop
jnp
pop
pop
xchg
push
mov
cmp
xor
pop
pop
mov
and
rorb
adc
pop
imulb
and
and
xchg
mov
fidivs
popa
data16
aam
mov
cli
dec
pusha
sbb
fwait
stc
leave
mov
jns
out
dec
or
or
jb
aad
xor
loope
mov
xchg
jnp
in
jnp
hlt
mov
sbb
ret
inc
subl
pusha
mov
sbb
lds
jle
mov
sbb
out
rcrb
add
test
jl
cmp
inc
mov
adc
adc
lock
les
push
fcoml
cmc
add
cmpsl
sbb
push
loopne
fsubr
xchg
xchg
rol
xor
jbe
adc
or
pop
test
push
xor
xor
pop
mov
mov
jmp
aam
cmc
dec
jle
imul
outsl
jecxz
mov
mov
adc
adc
mov
lea
cmp
imull
mov
push
push
stc
or
inc
lcall
or
insb
test
inc
mov
imul
mov
incl
cltd
aas
ds
and
cwtl
movsl
mov
scas
lahf
push
or
mov
dec
pop
fdivrs
jl
les
adc
lret
lahf
mov
outsl
stc
cmp
aam
pop
pop
aam
dec
add
sub
xchg
int3
sarb
dec
insl
fisubs
pop
mov
sbb
and
sbb
pop
adc
pushf
nop
dec
cmp
enter
loopne
cmp
dec
pop
clc
loop
mov
cmp
mov
jae
pusha
pusha
xor
jnp
dec
jecxz
mull
adc
fidivrl
in
ja
cmpsl
add
rcrl
adc
shrl
xchg
mov
mov
add
outsb
fadds
or
push
push
pop
dec
cmp
addr16
cwtl
aas
or
sbb
dec
lods
and
int
loope
cmpsb
jno
inc
sbb
movsl
pushf
lcall
imul
pop
pop
lcall
adc
jae
mov
insb
loopne
fisttpl
adc
mov
and
push
sub
lret
lret
inc
push
xchg
daa
xor
pop
in
cmc
xchg
sbb
cmp
adc
jg
cmp
ljmp
mov
and
into
jae
out
sub
push
lahf
cs
mov
mov
dec
cmp
cwtl
aam
sbb
cmc
fnstcw
popf
cmp
jge
mov
xchg
jp
xor
jno
or
push
sub
es
cmpsl
leave
shll
enter
and
add
imul
xchg
lock
mov
cmp
sbb
jne
lods
xchg
jp
jnp
fdivrl
icebp
ja
js
sub
dec
mov
shlb
pop
jg
or
popa
jg
dec
sbb
and
sahf
cltd
and
rorb
cmpsl
xchg
fistpll
faddl
push
test
das
xchg
cmp
nop
das
jns
push
mov
jg
push
xchg
stos
mov
lret
xor
sbb
mov
pop
js
in
add
inc
loopne,pt
arpl
inc
dec
icebp
pop
cmc
jbe
adc
stc
arpl
dec
pop
adc
and
pop
arpl
or
lea
jbe
jae
pop
in
je
dec
mov
xchg
xor
sbb
ja
mov
rcl
jle
je
xchg
inc
lea
lea
mov
mov
lods
repnz
popa
mov
mov
mov
xchg
mov
push
test
and
addr16
mov
movsb
and
push
sub
pop
adc
jmp
mov
xchg
hlt
lret
pop
jo
adc
jmp
out
adc
out
ja
adc
jbe
mov
or
rcrb
outsl
arpl
mov
push
mov
jecxz
cmp
out
stos
fsts
popa
sub
sti
push
jns
movsl
inc
in
fildl
cmp
in
cltd
and
dec
mov
jmp
or
inc
ja
fabs
adc
pushl
aam
mov
jecxz
call
cwtl
jns
xor
xorl
dec
popf
jns
mov
mov
inc
js
mov
nop
sbb
push
dec
or
add
cmc
mov
leave
cmp
dec
or
cld
shll
repz
pop
sbb
add
inc
xchg
fistpll
push
lea
out
xchg
xor
adc
push
repz
movsb
dec
dec
out
and
or
jmp
adc
xlat
adc
dec
in
inc
push
sub
outsb
adc
addr16
cmp
imul
lret
imul
add
lea
clc
fiaddl
mov
cmpsl
andb
jmp
repnz
fildll
es
pop
mov
mov
xchg
jl
sahf
push
xor
add
mov
sub
mov
sbbl
and
mov
leave
xor
mov
or
pop
sub
pop
jne
shrl
inc
sub
dec
jo
adc
addr16
mov
dec
sbb
adc
scas
mov
test
jo
repz
cwtl
mov
jecxz
dec
cmpsb
pop
movsb
fcmovnu
inc
xchg
mov
mov
mov
enter
loopne
out
inc
imul
pop
ss
sub
lods
adc
add
xchg
addl
jne
enter
popf
cmp
xorl
loope
mov
icebp
jb
and
mov
sbbb
xchg
sbb
loope
push
vmaskmovdqu
icebp
mull
add
push
sbb
test
movsl
and
xor
pop
mov
lds
movsb
aad
mov
inc
xor
outsl
mov
sub
inc
xor
out
in
mov
stc
xchg
ret
mov
add
jb
test
or
xchg
dec
loopne
push
loopne
adc
mov
cmc
iret
daa
sbb
pop
sbb
movsb
sarb
cli
cli
cli
cli
adc
cmpsl
jg
js
fnstsw
lods
jg
test
add
sub
mov
aam
roll
mov
cmpsb
dec
mov
xor
or
jo
mov
xchg
pop
mov
xchg
lea
jns
scas
stos
mov
test
lods
mov
xchg
cmpsb
ficoms
int
fs
mov
cmpsb
sbbl
imul
pop
repz
movsw
push
enter
hlt
xchg
sahf
mov
pop
mov
rorl
pop
lds
xchg
mov
stos
mov
js
jne
inc
jno
sbb
bound
outsl
sbb
insb
scas
mov
jecxz
repz
dec
cli
dec
vandpd
add
call
mov
pop
and
scas
pop
fbld
cwtl
addr16
push
xor
adc
pop
or
lret
iret
add
fidivrs
xor
cs
out
ror
pop
dec
aam
sbb
stos
add
add
cld
hlt
jo
push
xchg
lret
aas
xor
cmc
addr16
jl
mov
ret
push
and
pop
arpl
or
lcall
and
xchg
pop
xchg
out
mov
outsl
xchg
nop
gs
inc
test
mov
cmc
jle
jne
aaa
ss
popa
ds
mov
xchg
sahf
adc
push
popf
add
push
loop
xor
mov
xchg
sarl
jns
adc
mov
test
dec
xor
add
add
xor
repz
test
imul
pop
leave
jg
call
mov
stc
pop
and
in
fildll
fs
sub
pop
adc
mov
loopne
lods
dec
mov
frstor
pop
dec
cmpsb
ds
test
sub
imul
test
push
mov
mov
pop
js
push
jno
adc
insl
and
sbb
sarl
dec
jle
mov
cltd
std
lret
test
negb
lock
push
dec
pcmpeqd
sbb
dec
mov
push
cmpsl
movsb
loopne
and
inc
mov
mov
ret
jmp
insb
imul
scas
in
int
out
mov
popa
fildl
aas
inc
jb
mov
rorl
jl
cmp
mov
rorb
inc
les
jg
rcrl
subb
adc
inc
xlat
sub
in
push
loope
pop
xchg
fidivs
sbb
fldt
sbb
out
ds
push
lcall
xor
add
fistpll
cli
adc
stos
jg
nop
cmp
ss
sub
mov
call
sbb
ret
mov
leave
dec
push
imul
jne
pop
cli
stos
pop
aas
jbe
pop
adc
inc
inc
sub
cmp
push
mov
out
xchg
or
dec
or
stos
pop
data16
mov
mov
in
leave
push
mov
pop
pusha
pushl
sahf
pop
popa
cmp
jno
mov
out
mov
popf
xchg
add
les
lahf
and
and
cmpsb
pop
push
loopne
cmp
lock
inc
cmp
lret
ret
pop
lods
outsb
mov
inc
sbb
pop
push
call
aad
bound
idivl
scas
mov
and
cmp
lcall
int3
cmp
out
mov
aas
xchg
jmp
aad
sbb
es
pop
fidivrl
mov
add
xor
and
roll
lret
insb
imul
jne
loop
lods
in
pusha
daa
inc
fnstcw
cmpsl
and
loopne
push
das
pop
loop
push
mov
cmpl
fldcw
xchg
imul
xlat
or
shl
mov
movsl
adc
dec
out
aam
shll
adc
push
loopne
fldt
xor
mov
scas
shll
mov
jae
sub
push
pop
jmp
push
leave
xor
pusha
adcb
ja
sbb
dec
test
mov
push
xchg
dec
sbb
cmp
mov
xchg
cs
inc
jae
scas
xchg
fnstsw
sub
add
jmp
xchg
ss
and
stos
mov
sub
loopne
test
jge
jle
outsb
xchg
pop
and
aad
inc
testl
mov
push
pop
subb
inc
or
sub
pop
mov
leave
cmp
xor
inc
in
cmp
xchg
push
inc
push
lds
inc
bnd
sub
cmc
push
pop
pop
loop
dec
pop
sbb
das
je
jb
lcall
pop
mov
into
cmpsb
cmp
dec
and
push
mov
test
mov
pop
rcrb
adc
jns
les
or
les
es
pushl
aad
rorb
mov
lcall
xchg
jo
sbb
cmpsl
popf
shr
push
popf
fadds
repnz
sub
add
sub
stos
call
fwait
adc
fwait
enter
adc
jmp
gs
lods
xchg
clc
pop
sbb
and
add
add
push
jbe
xchg
dec
xchg
inc
mov
mov
mov
loope
sbb
int3
addr16
mov
dec
popf
add
cmp
add
pushw
gs
lods
fcoml
push
je
lods
xor
jp
mov
dec
les
pop
shll
pop
test
push
in
test
xor
aas
mov
sbb
xlat
adc
mov
scas
outsb
dec
and
xor
jbe
mov
lds
sbb
fimull
fidivl
pop
int3
push
pop
push
ja
mov
repz
adc
dec
pushf
outsb
inc
add
xor
sbb
or
data16
jge
loopne
mov
insb
lods
and
cmp
mov
cmp
xchg
test
adcl
mov
and
lret
leave
fisubs
lcall
in
dec
mov
lds
call
repz
sbb
movsb
mov
je
mov
cmp
js
mov
mov
push
lods
out
mov
je
ds
ss
push
push
mov
aad
adc
jns
sub
push
lcall
pop
pushf
loop
mov
outsb
xchg
jbe
fcmovnu
jl
stos
mov
dec
jno
jmp
jno
adc
mov
mov
nop
fwait
mov
scas
cmp
ljmp
add
dec
in
std
shlb
ret
push
aaa
out
pop
fwait
mov
sbb
rep
and
out
add
pop
cmpb
lcall
popf
adc
imul
ficompl
adc
scas
jbe
loope
dec
les
rcl
test
pop
or
popa
fs
dec
andl
cld
or
and
ret
sarb
je,pn
shrl
ret
mov
pop
xchg
subb
xchg
sub
movsl
mov
push
in
pop
inc
xchg
xor
xorps
mov
outsb
aad
aas
mov
cmpb
jnp
xchg
insl
ret
insl
nop
pop
mov
in
repnz
jns
div
mov
adc
cmpb
div
mov
in
inc
lock
cs
mov
lcall
xchg
aaa
sub
in
jne
xchg
xchg
rcl
clc
call
mov
push
sub
push
sahf
ficompl
adc
lock
pop
xor
xchg
mov
test
pop
outsb
mov
mov
mov
push
or
xor
xor
nop
out
out
insl
jp
jecxz
sub
adc
jg
subl
lea
add
sub
and
dec
and
mov
and
and
cmp
add
inc
fwait
in
add
hlt
jp
bound
mov
cmp
push
jns
in
ss
cmp
or
mov
mov
fsub
test
push
neg
dec
cmp
mov
cltd
xor
test
jne
or
mov
scas
sbbb
push
add
sub
pop
mov
mov
mov
fsts
leave
mov
icebp
jecxz
mov
or
jo
inc
mov
js
and
sbb
adc
cmp
daa
dec
mov
stc
push
into
addr16
fnstsw
cltd
test
testl
push
fidivl
push
and
lea
fxch
mov
push
hlt
outsb
adc
push
mov
inc
mov
fnstenv
jmp
inc
inc
popa
movsb
sub
jb
mov
loop
xor
lret
movsl
shl
xorb
xchg
add
hlt
test
sbb
cltd
mov
lods
repz
fcoms
pop
into
lods
inc
fwait
cmc
jmp
cmp
xor
mov
jb
xorl
jnp
jle
inc
dec
dec
aam
out
mov
cmp
les
bswap
pop
loop
or
loopne
sub
mov
mov
inc
pop
shll
inc
outsl
xchg
jnp
adc
sti
aaa
mov
in
pop
cwtl
inc
mov
pop
sbbb
test
repz
loope
sbb
cmp
inc
pop
fiadds
dec
inc
and
pop
adc
loop
sbb
add
push
shll
cmpsl
ss
out
inc
pop
scas
les
fisttps
and
sbb
notl
push
stos
xor
stos
xchg
ret
dec
mov
sbb
aad
mov
iret
dec
stos
movsl
lds
andl
mov
lds
lds
shlb
jnp
es
roll
inc
dec
pop
mov
nop
out
dec
shll
outsl
icebp
mov
jne
xor
in
cld
int3
sub
cwtl
push
sub
and
xor
cmpsl
pushf
pop
test
pop
or
pop
and
lods
xchg
fimull
ds
mov
int
movsl
sub
insb
xor
mov
mov
ss
inc
xchg
xchg
clc
scas
pop
sub
mov
cmp
mov
jl
push
push
adc
pop
xchg
push
xchg
loope
clc
stos
lcall
pop
jmp
push
imul
fildl
xchg
or
stos
fsubrs
into
icebp
xchg
adc
es
adc
add
jle
sti
mov
push
lcall
aas
lea
xor
pop
adcl
cli
je
inc
cmp
sbb
xchg
xlat
inc
jge
sbb
mov
into
in
inc
pop
je
push
push
gs
jnp
sbb
popa
cli
decl
cltd
and
hlt
and
cli
mov
nop
xchg
fldenv
inc
inc
jmp
repnz
sbb
xchg
nop
jmp
mov
pop
hlt
outsl
push
push
cmp
xchg
adc
decl
sub
mov
dec
insb
xor
lea
push
mov
pop
mov
rorb
mov
jae
cli
cmpsb
andb
mov
imul
hlt
call
push
xor
addr16
mov
icebp
jge
outsb
popa
dec
aam
jne
pop
outsb
push
push
ja
xchg
lea
fadds
out
push
into
je
test
insl
mov
into
push
push
out
xor
stos
movsb
mov
mov
sub
jl
stc
mov
mov
cmp
gs
cmpsl
inc
shr
lods
jae
rcl
test
cld
sbb
add
ja
or
dec
inc
pop
cmp
cs
pusha
adc
cmpsl
pop
out
mov
mov
sbb
sbb
sbb
cmpsb
mov
scas
pop
jo
out
loop
inc
pmullw
pop
dec
inc
cmc
or
fcmovb
adc
pushf
pop
xor
and
or
ljmp
xorb
cmp
mov
cmp
xor
inc
lcall
xchg
pop
popa
aas
mov
call
out
test
sub
push
pop
mov
loop
push
imul
aaa
repz
dec
lahf
clc
gs
push
mov
push
aam
adc
pop
mov
jo
mov
cwtl
lahf
jge
cmpsl
stos
and
xor
addr16
shl
unpckhps
mov
mov
test
sbb
sub
mov
insb
adc
rorb
in
ja
pushf
lret
repz
and
inc
mov
xchg
dec
xchg
add
stos
cmp
lea
and
push
roll
mov
aas
mov
fildll
xor
lcall
push
and
add
push
xor
jp
cld
adc
cmp
xor
sti
mov
nop
mov
out
lret
call
popf
add
push
stos
cltd
lods
cmp
out
jle
or
faddl
pop
test
cltd
in
cmpsl
in
iret
insb
inc
mov
jg
sub
cmp
mov
or
sbb
lods
adc
or
push
pop
jg
loopne
fiadds
sub
daa
pop
mov
adc
incb
arpl
dec
add
or
stc
movsb
adc
outsl
xor
scas
das
int3
sub
movsb
inc
repnz
out
out
inc
outsl
pop
mov
mov
mov
mov
push
addr16
mov
bound
sbb
jae
imul
and
popa
fs
and
jnp
xchg
cld
cmp
lret
dec
or
popf
je
aaa
cli
lret
sub
and
mov
test
popa
xchg
negb
sbb
sub
add
mov
aam
lods
js
lahf
test
jns
push
dec
stos
mov
inc
jno
int3
jg
loope
mov
sbb
pusha
mov
lock
je
xlat
rcrb
xchg
or
adc
popf
dec
inc
jg
sub
leave
mov
xor
sarb
shlb
inc
rorb
mov
or
out
inc
mov
call
ss
out
mov
icebp
and
mov
leave
or
int3
mov
stos
mov
dec
gs
stc
shl
mov
test
shrl
cmp
in
add
sti
adc
pop
rolb
push
jge
cmpsl
es
popf
rcr
std
fldcw
jne
xchg
lea
cmpsb
dec
sbb
aam
sub
pop
addr16
scas
mov
dec
jne
fnstsw
popf
ja
pop
loope
cmp
xchg
lds
pop
mov
xchg
enter
int3
pushf
adc
je
into
push
movsb
out
xchg
repz
or
leave
test
xchg
mov
mov
lret
rorb
fs
fwait
cmp
and
adc
add
ror
mov
jp
test
push
pop
stos
mov
inc
push
pop
mov
lcall
xor
leave
jae
inc
xchg
test
push
dec
inc
push
sbb
cmc
out
and
out
adc
xor
add
data16
push
out
subb
or
test
mov
xor
loopne
mov
pop
popa
dec
in
push
jns
mov
push
or
add
jbe
jge
enter
pop
sub
aas
scas
gs
cmc
sbbl
pop
sti
pop
sbb
outsl
into
mov
push
fcmovnbe
mov
in
loopne
xor
inc
jb
shl
bound
mov
in
iret
lret
push
xor
in
sub
mov
mov
pop
leave
sbb
gs
sbb
imul
cmp
test
test
adc
test
scas
adc
mov
mov
mov
sarl
jp
inc
out
inc
dec
push
lods
inc
jns
jo
inc
or
aaa
cmp
push
call
cld
ds
addr16
jns
sarb
icebp
cli
jne
adc
sub
cmp
lea
pop
mov
pop
bound
pop
mov
rcrl
cli
js
scas
lods
jo
clc
je
repz
lahf
cmp
in
lret
ss
int3
popa
fdiv
shl
jo
jns
imul
testb
add
pop
arpl
xor
push
xor
adc
div
sbb
imul
dec
mov
pop
push
jo
xchg
push
stos
ret
mov
xchg
fcmovne
inc
fwait
je
add
shrb
mov
fstps
lcall
lret
push
adc
dec
and
ret
leave
or
int
cmp
jg
mov
es
shrl
or
add
int
push
cmpl
fadds
mov
lock
loope
sub
sbb
inc
and
stos
jno
cs
test
and
ja
in
mov
adc
mov
dec
sub
adc
xchg
and
push
lods
or
ljmp
cmpsl
mov
fs
xor
in
pop
cmp
mov
lcall
jnp
fldenv
xchg
lods
rorb
mov
outsl
movb
sub
and
rcrl
lods
lea
dec
mov
fnsave
dec
lea
js
in
movsl
jmp
int
xor
dec
bound
int
mov
leave
mov
rcr
push
sbb
stos
in
mov
xlat
sbb
gs
into
je
fwait
dec
mov
int
dec
sbb
pop
das
ss
push
dec
mov
lds
arpl
lock
std
push
sbb
ret
mov
idiv
xchg
sti
pop
mov
add
std
lock
xor
mov
adc
mov
out
es
xchg
dec
mov
cmp
cmp
daa
mov
sub
pop
xchg
pop
ret
shlb
mov
sarl
in
mov
stos
data16
out
sbb
rclb
lea
sbbb
lds
aad
jo
mov
icebp
into
out
jmp
or
rcl
pop
sbb
jne
cld
ret
sbb
insl
popf
mov
and
pop
cmpsl
mov
pop
scas
sub
adc
ret
mov
cmpsl
add
push
int3
hlt
out
pop
cmp
in
mov
xor
pop
sbb
lcall
in
pusha
testl
sbb
adc
shll
imul
add
fs
aad
and
popa
push
adc
mov
pop
loopne
imul
sbb
enter
aad
in
pop
fsubrs
outsb
dec
and
arpl
adc
jo
xchg
out
sub
dec
pop
pop
sbbl
mov
loope
push
loop
nop
add
daa
sbbb
lods
cwtl
xchg
js
inc
leave
mov
xchg
pop
ror
lock
xor
lods
addr16
scas
sub
outsb
out
cwtl
in
fsubl
lods
jnp
repz
in
add
sbb
mov
jp
and
jle
inc
mov
scas
mov
mov
dec
nop
bound
jne
push
arpl
outsl
lock
scas
jp
push
and
dec
movsb
cmp
cmp
jp
dec
loope
movsl
daa
and
pop
daa
and
fcoms
sub
dec
xor
clc
xchg
cmc
xchg
adc
mov
cmpl
shrl
dec
inc
adc
sub
cmp
mov
xchg
sbb
add
adc
popf
fcomps
sub
ret
or
and
lock
je
adc
out
or
and
aam
mov
add
lcall
nop
test
test
popa
xchg
aas
pop
push
mov
into
repz
call
push
fcomip
adc
cs
pop
pop
push
xchg
mov
pop
add
ficompl
jmp
or
sub
adc
out
es
inc
in
cld
leave
and
hlt
xor
pop
call
ja
outsb
sub
sahf
les
mov
mov
pop
adc
mov
int3
push
popf
std
xor
pusha
lahf
mov
inc
std
stos
mov
bound
push
dec
or
add
clc
nop
adc
pushf
iret
js
pop
in
mov
addr16
sbb
in
xchg
cltd
out
scas
xor
hlt
jo
and
dec
test
sbb
hlt
nop
out
divl
insb
fiaddl
sub
push
or
mov
cmc
repz
xor
sbb
and
test
xor
movsl
das
dec
jae
push
push
pop
add
xchg
and
ja
cmpsl
pop
cmp
jmp
dec
xlat
addb
popa
push
or
mov
leave
add
jecxz
aaa
fwait
dec
inc
jno
fildll
mov
mov
jae
bound
call
jge
repz
addb
setae
rorb
es
pop
push
stos
pop
fs
and
leave
mov
aas
cmp
xchg
in
xchg
jnp
inc
jge
cwtl
call
xchg
mov
je
dec
inc
aam
dec
inc
insb
mov
push
scas
test
push
out
es
xchg
jno
mov
daa
sti
xchg
pop
dec
ret
and
lods
mov
sbb
sbb
test
push
push
jno
adc
sub
cli
ret
fidivrl
and
mov
xchg
push
xor
les
adc
dec
dec
in
fsts
jae
test
js
ficomps
dec
add
out
dec
notl
daa
xor
inc
loope
dec
clc
fdivr
cld
rcrb
xchg
mov
lahf
into
adc
or
stc
jae
gs
enter
out
mov
push
dec
mov
adc
fsts
pop
mov
out
push
loope
testl
xor
mov
fsubp
fadd
push
outsl
outsl
and
push
loope
push
ds
xor
testl
cmpb
cmpsl
inc
dec
iret
enter
xor
mov
push
ds
pop
scas
push
ret
jp
and
inc
sbb
xlat
insb
cmpsl
pushf
mov
adc
cli
pop
inc
fst
lret
icebp
sub
cmp
inc
adcb
sub
cmp
inc
xlat
arpl
shrb
imul
in
or
in
out
movsb
aas
stos
push
mov
cmp
push
jl
mov
insb
dec
aad
push
ret
sub
inc
pop
pop
ss
test
sub
int3
iret
cmc
shrl
leave
aaa
jo
adcb
bound
sbb
or
and
jo
stc
or
and
lahf
mov
daa
mov
mov
fdivp
lods
ror
cmp
rclb
gs
repz
test
mov
popf
adc
and
fsubrl
jle
shll
pop
mov
std
add
sub
mov
fstp
sbb
cmc
cmp
mov
js
nop
fidivs
mov
lods
pop
sbb
jns
in
lods
ret
int
pushf
rcrb
mov
pushf
lcall
push
jle
cli
mov
mov
sbb
shl
fdivs
bound
pop
sbb
mov
mov
pop
cwtl
and
nop
insb
jns
lahf
cmp
xlat
cld
mov
add
stc
repz
jbe
les
data16
or
mov
ret
cmp
pop
cmc
and
cmp
lahf
fwait
push
stc
popf
xchg
jp
dec
push
mov
popa
and
mov
sub
inc
mov
mov
push
cmp
jecxz
sub
gs
dec
das
out
xor
stc
lret
xchg
pop
mov
pop
testb
xchg
mov
adc
mov
jge
pop
repnz
fs
sbb
dec
xor
xorl
lahf
xchg
pop
pusha
inc
xor
gs
adc
push
or
int3
push
filds
repz
hlt
sti
sarb
and
outsb
mov
add
imul
inc
jo
jns
enter
popf
test
xor
sbb
inc
add
enter
mov
test
or
dec
mov
adc
sub
pop
std
inc
hlt
push
push
rolb
aad
fcmovb
mov
in
push
cmp
outsb
push
pop
sub
push
adc
cmc
jecxz
and
push
sub
sub
sub
addr16
andb
js
rcl
insb
fimuls
in
ret
pop
fistpll
cmp
leave
jg
shlb
xor
in
lcall
and
add
adc
mov
or
add
push
jmp
sbb
out
jae
dec
add
fwait
ljmp
aam
add
js,pn
sarb
xor
xor
sbb
push
cli
fisttps
sub
sub
lahf
push
pop
dec
inc
or
push
mov
imul
cmp
push
inc
push
stos
push
ljmp
test
pop
push
dec
cmpl
xchg
jge
rol
jle
xchg
addr16
fsubl
les
aaa
nop
cmp
push
jp
sbb
adc
or
out
icebp
rcrb
hlt
les
mov
push
jo
dec
sub
jmp
mov
pop
sarb
inc
iret
test
or
mov
xchg
dec
mov
rclb
rclb
imul
dec
dec
cmp
xchg
ss
xchg
adc
jne
adc
xor
mov
xchg
mov
mov
xchg
sti
ds
fstpt
adc
mov
call
xor
lock
or
pop
iret
mov
imul
and
les
fidivs
mov
mov
xor
dec
pop
movsl
push
cmpsb
ja
jle
push
dec
mov
in
mov
stos
iret
push
fcoms
es
push
sub
jns
xchg
fnstenv
inc
jle
push
push
xlat
push
jmp
mov
lcall
cmp
dec
sbb
mov
popf
dec
mov
mov
push
and
push
ja
in
fimull
cwtl
xor
outsb
enter
add
sahf
loop
sub
push
shl
lcall
cli
ja
pop
lock
pop
aas
push
in
aas
leave
aad
adc
loop
std
or
stos
dec
ljmp
leave
hlt
daa
das
in
pop
add
fldt
inc
add
xchg
bound
in
add
mov
push
lahf
xor
pop
js
mov
movsl
clc
cwtl
arpl
jae
insb
add
addl
idiv
add
inc
mov
mov
loopne
mov
xor
cs
addr16
out
dec
xchg
dec
jle
enter
testb
rorb
out
mov
mov
int
inc
jnp
icebp
lock
dec
stos
mov
subl
or
cltd
and
mov
inc
cmp
out
mov
decl
xchg
or
dec
sahf
mov
xor
mov
mov
les
inc
cltd
inc
imul
sub
mov
fistpll
rclb
aaa
outsb
jecxz
imul
test
iret
jb
jecxz
push
mov
xor
in
mov
popa
cmp
gs
sub
xchg
shrb
icebp
sub
repnz
fwait
repz
loope
test
mov
gs
movsb
sub
jne
out
pop
lcall
cmc
or
cld
xor
pop
shlb
sub
orl
out
xchg
mov
dec
lahf
fidivs
and
jns
in
out
loop
dec
mov
das
mov
jns
insl
xor
adc
leave
adc
push
imul
jg
loope
outsl
pop
arpl
cltd
pop
data16
mov
jle
jge
shll
test
int
je,pt
push
xor
add
test
xchg
aaa
negb
or
out
pop
mov
das
cli
or
mov
fstps
mov
push
je
out
xchg
sub
rcll
jne
push
sbb
lds
icebp
jb
xchg
or
ficoml
das
out
addr16
mov
sub
cmp
sbb
sbb
ja
or
inc
jno
lahf
adc
mov
sub
incb
out
push
arpl
aad
out
cmpl
fwait
cmpsb
outsl
xchg
mov
test
mov
adc
arpl
xor
mov
adc
mov
sub
lods
loop
and
jb
xchg
pop
pop
aaa
bswap
data16
or
imul
pop
icebp
negb
ret
sbb
cmp
jnp
inc
dec
in
mov
push
movsl
and
mov
cli
lea
jge
insb
enter
dec
jg
or
xchg
sti
dec
inc
dec
in
sub
adc
xor
dec
imul
mov
push
jle
daa
mov
and
ds
pop
mov
mov
iret
add
mov
fstps
fbstp
xchg
mull
shlb
insb
jbe
or
dec
aas
add
aas
add
add
outsl
int3
mov
std
je
scas
pop
aad
hlt
cld
fiaddl
rol
mov
imul
push
inc
sbb
bound
push
sub
cmpsb
ss
inc
mov
add
insl
mov
and
sub
mov
cmp
inc
sbbb
aam
pop
test
outsl
inc
jno
xor
pop
outsl
sub
cltd
fldt
dec
insb
mov
sub
pop
xor
iret
sub
inc
aaa
ljmp
lcall
cli
mov
in
cwtl
insl
mov
stos
loope
inc
test
inc
inc
cmp
sub
push
cs
mov
pop
cmp
fcmovnbe
pushf
adc
push
rcl
mov
xor
lods
inc
jns
mov
cli
jns
lret
push
and
mov
dec
or
lret
push
sbb
adc
fcompl
sahf
int3
lcall
pop
mov
lods
inc
les
inc
cmp
daa
rcl
add
cmpsb
aas
lcall
push
fsubs
sti
imul
push
jnp
mov
xchg
and
imull
push
push
pop
ret
jno
mov
lods
setns
adc
in
mov
orl
insl
xor
pop
inc
stc
popf
nop
inc
je
mov
xor
xchg
cs
mov
mov
test
cmpsl
arpl
xchg
cmp
sahf
pop
testb
jmp
pop
push
add
jg
mov
push
repnz
pushf
cli
add
xchg
push
lds
dec
je
scas
addb
jb
addr16
mov
loop
mov
pop
mov
lret
or
push
inc
scas
xor
fwait
pop
montmul
cmpsb
inc
adc
add
int
push
fsubrs
ret
insb
movsl
adc
fcomi
nop
scas
fwait
add
in
das
orb
and
jae
inc
mov
nop
icebp
mov
dec
sbb
insl
rcrb
jl
ret
jb
adc
inc
dec
dec
dec
inc
movsb
sub
sbb
out
repnz
pop
mov
lret
pop
sbb
lods
and
jno
jne
bound
stc
dec
leave
mov
es
repz
stos
stc
xchg
mov
dec
xchg
and
push
rolb
mov
aas
inc
pop
inc
hlt
mov
inc
xchg
mov
adc
lret
mov
cmc
cmc
inc
in
clc
out
nop
dec
pop
scas
or
mov
adc
cmc
jnp
idivb
add
sahf
movsb
aaa
mov
orl
movsl
xchg
stos
adc
ljmpw
into
cmp
add
sahf
mov
loopne
fs
push
xlat
decl
push
cli
in
add
sbb
mov
jmp
xor
lods
mov
mov
mov
arpl
lret
mov
push
cmp
xchg
mov
loope
test
aas
repz
cmp
xchg
xchg
stos
mov
dec
shll
out
fcompl
mov
lods
xchg
and
jmp
adc
jle
loope
jle
sahf
jo
ja
and
inc
imul
mov
and
mov
std
pop
pop
adc
sub
xchg
dec
dec
mov
and
mov
sub
add
xor
cmp
leave
fdiv
cmp
adc
xchg
pop
scas
lahf
data16
lds
ret
imul
xor
pop
inc
ds
int3
sbb
push
push
loope
je
fists
jmp
rorb
and
loope
fimuls
stos
nop
mov
inc
sbb
inc
fwait
leave
adc
jb
out
mov
rcrl
xchg
fnstsw
repnz
pop
hlt
repz
mov
fbstp
mov
iret
sbb
sbb
mov
adc
xchg
hlt
cmp
xchg
cmp
pusha
stc
mov
mov
jge
jmp
addl
cmp
rcrl
jle
mov
int3
mov
sti
cmp
jae
and
outsl
dec
dec
lret
fwait
loop
test
je
sbb
pop
xor
fdivl
mov
and
fistl
frstor
dec
pop
sub
insl
add
lds
ret
test
jmp
cmc
mov
push
int3
jl
push
lahf
cli
lcall
pop
nop
and
sbb
fdivrs
jne
das
jae
pusha
cmpsl
mov
and
insl
enter
sarb
pop
and
div
xor
notb
mov
add
and
dec
sub
jnp
dec
cmp
pop
dec
jl
xchg
bound
cmp
movsl
faddl
sarb
cmp
adc
cs
rcrl
int
outsb
adc
add
test
and
cli
rol
imull
mov
insl
movl
sbb
xor
insb
jae
push
dec
sub
mov
xlat
mov
fld
ret
adc
les
aad
out
pop
orb
pop
ja
dec
test
adc
movb
scas
mov
pop
js
cltd
data16
inc
xchg
out
cmpl
sub
xchg
jne
xchg
ja
stc
addb
sbb
mov
sbb
push
pusha
ds
test
insb
aam
cmpsl
cwtl
imul
icebp
xchg
pop
fsubrs
sbb
int
dec
inc
sub
dec
sub
and
mov
stos
mov
mov
push
push
nop
jae
jae
push
xor
cmp
lock
ret
jo
pop
sbb
jno
in
repnz
lret
orl
adc
pop
push
cs
cmp
xor
aad
scas
push
loope
ds
pop
shrb
sbb
or
popl
lock
adc
pop
mov
sub
repz
mov
cmc
mov
push
lret
leave
inc
mov
dec
push
add
push
loop
jae
push
cwtl
jo
nop
ljmp
inc
bound
sahf
loope
add
mov
int3
lea
ds
pop
add
jbe
adc
push
sbb
dec
jbe
jmp
insl
xchg
cmpsl
jmp
out
or
out
and
xchg
dec
push
sub
cmp
mov
sub
repnz
mov
lods
dec
jg
add
xchg
outsb
ret
push
and
arpl
inc
mov
pop
lahf
xor
jp
push
pop
xchg
lret
bound
out
les
popa
insb
add
sub
cli
push
sbb
orl
lcall
mov
adc
int
dec
dec
or
push
adc
cmpsl
aam
cld
cmpb
rcr
sbb
lcall
sub
sub
ss
xchg
dec
stos
add
ja
pop
ret
xchg
fildl
cmp
pop
inc
jge
sbb
int
jae
jp
xchg
das
mov
sbb
fcomps
sbb
scas
jnp
xor
loop
cltd
xchg
js
xchg
mov
arpl
mov
mov
negl
mov
pop
xchg
cmp
xchg
push
and
sbb
pop
cli
mov
add
or
das
sahf
add
lods
or
lret
lds
dec
outsb
cmpsl
cmpsb
mov
jns
jle
movsl
adc
cmc
pop
cmp
mov
or
push
xor
outsb
and
data16
pop
shl
inc
ja
xchg
sahf
cs
jb
mov
gs
std
mov
or
xor
repnz
sbb
addr16
adc
je
adc
repz
jmp
ss
in
cmp
loop
sub
icebp
pop
rcll
push
outsb
xchg
in
mov
jl
movsb
std
bound
shll
jns
aam
int
in
mov
in
in
adc
insl
out
pop
xlat
and
or
js
and
jbe
xor
mov
lahf
gs
pop
jbe
xchg
sub
pop
jge
dec
add
mov
jo
enter
mov
push
push
out
sbb
popf
sub
lcall
js
or
lea
into
inc
jbe
xorl
xor
mov
dec
hlt
fldpi
shufps
jl
cmpsb
cmp
movsl
rorb
xchg
mov
fsubr
cmp
js
scas
mov
pop
test
mov
loopne
out
mov
int3
movsb
and
sub
aam
sbb
repnz
jp
xchg
test
sti
scas
loopne
repnz
mov
pop
cmpb
add
in
into
sar
mov
pop
lods
movsl
enter
pushf
pusha
ja
mov
inc
adc
loop
ja
pushf
leave
sarl
inc
lahf
lcall
call
sahf
jle
jge
imul
pop
sbb
dec
roll
clc
out
cmp
mov
into
push
movsb
imul
imul
inc
mov
inc
les
add
mov
jnp
jo
mov
das
movsb
outsl
notl
into
aas
popf
mov
xchg
lea
and
xchg
inc
mov
xor
in
dec
std
add
leave
push
xor
lea
or
in
fldcw
rorb
and
xchg
mov
cmp
pop
loope
xor
rcl
cmp
and
xor
lock
add
add
outsb
js
jecxz
fldl2e
insl
jb
xchg
and
jmp
sti
push
aad
sbb
push
pop
fstpt
xor
add
jb
jle
jmp
shr
sub
lods
add
repnz
mov
frstor
inc
test
push
inc
rcrl
jecxz
dec
mov
lret
sbb
test
xchg
lods
xchg
mov
or
int3
int3
repnz
ss
lcall
testb
cvtpi2ps
out
mov
xor
cmp
scas
dec
and
and
jmp
loope
adc
cmp
inc
sbb
pop
aad
pop
mov
sub
imul
lds
add
push
ficoms
movsl
pop
and
movl
jp
ja
ds
adcb
imul
into
push
add
mov
ja
mov
jmp
std
pop
push
fisttps
hlt
gs
scas
out
cmp
in
movsl
stos
mov
mov
popa
imul
in
push
imul
shrl
pushf
xorb
out
sub
in
sbb
jg
movsl
cli
xchg
aaa
cld
inc
lods
xchg
adc
jno
jle
out
rcll
addl
cli
cli
push
scas
sub
adc
mov
subl
fwait
dec
jle
and
or
xor
ss
ficomps
orb
xchg
shrl
xor
inc
rorb
dec
ret
push
jge
out
loop
mov
xorb
mov
xchg
jle
mov
loope
scas
sub
pop
mov
sub
pusha
imul
xor
cld
in
mov
shlb
push
cmp
ljmp
xchg
mov
outsl
loop
sbb
out
xor
adc
dec
aaa
xchg
lea
aad
sub
es
subl
and
pop
aam
testb
sub
test
lea
lea
nop
sbb
inc
inc
iret
scas
popa
mov
data16
mov
ss
mov
pop
mov
inc
das
stos
xchg
or
push
and
fidivrs
adc
xor
dec
push
adc
pop
or
in
insb
cmp
repz
fdivrl
fwait
sbb
les
mov
or
push
push
mov
fcompl
int
sbb
push
bswap
das
cmp
test
inc
outsl
fnstenv
inc
scas
aaa
lret
cmp
hlt
dec
outsb
jle
addr16
cmp
in
push
dec
mov
inc
mov
xchg
ljmp
ljmp
pop
sub
ss
stc
xor
push
and
ljmp
iret
inc
pop
push
jbe
ret
mov
repz
aad
dec
cmpsb
movsb
outsb
adc
fldt
data16
add
cmp
push
cli
push
shrl
leave
inc
leave
push
mov
add
jb
pop
jecxz
add
mov
and
cld
imul
movsb
sarl
xor
in
cmc
popa
pop
fwait
push
adc
and
mov
cmp
xor
push
repz
push
xor
and
fmull
jmp
shll
scas
stc
repz
iret
push
fistl
add
push
popl
xchg
leave
mov
ficoms
jae
addr16
test
outsl
in
mov
ja
ret
xchg
mov
leave
scas
sbb
mov
loope
pop
fdivl
mov
cld
shll
push
ret
sbb
add
cmpsl
mov
xchg
repnz
xchg
lahf
lods
add
add
pop
add
push
xchg
es
rorb
mov
bound
xchg
dec
cmp
mov
lret
inc
mulb
add
outsb
lock
in
sub
add
std
adc
inc
sbbb
lcall
xor
sub
push
cmp
jp
cmp
daa
fsts
lock
jns
sub
ret
fisubs
lock
test
sti
lret
and
and
lcall
repnz
ljmp
mov
fnstcw
and
push
test
pop
pop
sahf
mov
pop
lock
hlt
cltd
mov
pop
sub
sub
lcall
dec
sbb
shlb
mov
ror
adc
pop
shlb
in
in
and
mov
clc
cli
lahf
test
sbb
jne
hlt
ja
int3
bound
mov
jg
mov
inc
push
fsub
lods
xchg
jb
mov
jnp
add
dec
rcl
mov
xchg
jno
and
adc
push
ffree
pop
xchg
pop
or
nop
in
popa
mov
ret
fisubs
push
js
in
and
or
jle
sub
pop
add
jp
enter
call
inc
mov
lret
insl
lret
fisttpl
push
icebp
loop
sub
test
cld
icebp
addr16
or
adc
repz
push
in
pushf
fld
outsl
sbb
aaa
mov
sub
adc
lods
mov
insl
aaa
xchg
repnz
jecxz
nop
xchg
add
mov
pop
mov
cmovl
ret
sbb
outsb
loopne
mov
in
sarl
jo
jbe
out
push
or
xor
adcb
dec
and
fidivl
push
ret
jecxz
ja
scas
dec
cmp
clc
or
int3
rclb
push
int
push
imul
rolb
lods
inc
ss
push
cmp
dec
movb
dec
sub
nop
fisttpl
es
orl
imulb
enter
xchg
clc
xchg
int3
xchg
lret
ljmp
aam
incl
fstl
inc
xchg
jmp
mov
cmc
cmp
lea
or
pop
sub
stc
loop
pop
imul
mov
mov
sub
into
inc
cmp
pusha
pop
dec
jae
mov
jnp
cmp
js
adc
cmpsb
fcmovnb
clc
bound
test
pop
cmp
aas
sti
push
clc
aaa
in
pop
and
arpl
mov
pop
push
lcall
aas
movlps
inc
jg
adc
fsts
push
sti
subb
push
scas
cmc
icebp
cmp
lea
or
fiadds
jbe
or
or
inc
ror
fildll
push
stc
rcr
pop
hlt
sub
xchg
add
xchg
mov
jecxz
xor
fldcw
ljmp
adc
aas
rcrb
xor
inc
mov
stos
fstpt
or
dec
arpl
pushf
jns
repnz
push
pop
sbb
xor
xchg
ds
push
cmpsb
cmp
inc
ret
enter
mov
cmp
lret
pop
and
test
repz
mov
cmc
mov
mov
in
mov
add
inc
push
push
pop
icebp
in
dec
push
mov
mov
xchg
push
rcll
cmpsb
push
adcl
subl
pop
dec
add
cmp
mov
aas
adc
xlat
lcall
mov
stc
sub
jb
sbb
xchg
into
lock
mov
es
std
cld
in
out
cwtl
movsb
mov
leave
cmp
dec
repnz
inc
push
incl
jmp
and
xchg
sbb
xor
mov
adc
xlat
mov
sub
sahf
cmp
push
jne
std
outsl
add
push
loop
jb
push
out
lret
add
push
xor
add
push
hlt
xchg
je
stos
xor
dec
or
adc
mov
in
or
aad
call
mov
cmp
nopl
xor
mov
and
and
jae
xlat
xchg
addr16
mov
cmpb
and
push
and
mov
rcll
inc
pusha
mov
jl
mov
sarb
enter
xorl
jns
inc
ret
nop
pop
adc
lret
add
xor
cltd
jnp
push
jb
int3
xchg
sub
out
fsubl
mov
mov
into
jle
jne
xor
ficompl
add
gs
lahf
clc
mov
cltd
mov
jb
mov
add
xchg
lds
push
and
add
mov
in
rclb
roll
cmp
xchg
add
add
mov
push
jge
rolb
ret
leave
inc
aad
cltd
inc
std
cmp
pushf
loop
outsl
rclb
jnp
fiadds
sbb
data16
imul
push
rcrl
jns
mov
pop
inc
sti
sub
dec
test
mov
fsubrs
stos
in
and
jbe
adc
mov
ss
jmp
push
mov
lcall
aaa
test
xchg
scas
adc
pmuludq
fbld
lock
sub
pop
jo
sbb
cs
cs
popa
pop
leave
jne
mov
jne
addr16
sbb
inc
insl
test
outsl
xor
jg
aad
test
cmp
cs
addr16
cmp
movsb
sbb
data16
fisubrl
int
out
notl
and
pop
idivb
fstpt
outsb
loop
and
push
flds
pop
adcl
jo
in
or
jg
insl
testl
push
dec
inc
cmp
inc
mov
imul
arpl
jmp
mov
or
jl
jne
sbb
incb
je
xor
cmp
scas
stos
fstl
out
mov
shrb
sbb
lods
xchg
sbb
outsl
cs
mov
aas
fistpll
pop
mov
sub
stc
add
cli
jo
push
fisubl
xchg
xchg
mov
dec
movsb
shrb
lods
push
ds
sub
mov
pop
xchg
jl
daa
aam
add
xor
out
ja
imul
aaa
mov
bound
mov
and
cltd
cwtl
pop
flds
add
inc
test
sub
out
clc
jle
xchg
cmc
jecxz
dec
and
mov
jno
popf
inc
sub
push
aas
outsl
and
fs
scas
aad
and
enter
mov
int
repnz
pusha
imul
push
mov
xor
inc
int3
pop
jle
imul
loope
push
sahf
cmp
and
dec
stc
xchg
mov
iret
test
xor
mov
cmc
pop
cmpl
xchg
inc
fistpl
mov
mov
push
rol
prefetchnta
push
push
xchg
add
test
repz
les
inc
pushf
dec
jg
xchg
ret
cmp
push
outsb
lea
movsl
xlat
mov
xor
movaps
cltd
mov
dec
mov
xchg
pop
inc
xor
data16
mov
fnstcw
mulb
shrl
cmpsb
in
js
pop
shl
sub
xor
jmp
xchg
push
or
std
mov
jae
push
pop
cli
push
cmpsb
pop
outsl
addr16
in
fdiv
dec
inc
xchg
push
jmp
cmp
idivb
jecxz
jg
jbe
mov
fistpll
adcl
xor
stc
or
mov
fnsave
or
fistpll
mov
rclb
push
mov
mov
xor
mov
rorl
adc
mov
data16
negb
fidivrl
insb
mov
test
dec
cmp
add
xor
arpl
out
rsm
jo
pop
lret
cs
aaa
addb
scas
les
in
xchg
dec
lret
sub
mov
mov
clc
sti
cs
test
out
jbe
ja
add
dec
jns
stos
mov
inc
adc
pop
add
repnz
mov
in
fstpt
inc
shll
out
push
popa
mov
mov
leave
jp
jge
adc
orb
jnp
icebp
push
push
xchg
in
bnd
das
mov
sub
push
push
aaa
out
inc
jne
lods
test
adc
cli
xor
stos
jle
mov
loop
jl
push
pop
into
leave
icebp
sub
test
jnp
fnsave
stos
data16
sti
shlb
sbb
mov
pop
pushf
andl
and
or
cmp
cmp
or
fisttpll
and
pop
pusha
data16
jg
jmp
add
sub
pop
inc
daa
ret
sbb
bnd
je
mov
dec
xchg
mov
int
sub
xor
jle
outsb
ret
cmpsl
push
dec
xlat
xchg
jl
stos
adc
in
push
nop
ret
inc
inc
ds
inc
xchg
fiaddl
pop
mov
ret
orl
or
mov
or
rorl
lahf
por
sbb
mov
pop
hlt
ror
fiadds
jg
inc
sub
iret
gs
fucomp
movb
icebp
dec
pop
cmc
out
lret
and
xchg
mov
mov
mov
aas
fidivrs
jnp
js
cltd
jmp
lret
je
repnz
popf
jo
outsl
ret
imul
test
rcrl
call
arpl
roll
sbb
dec
push
or
shlb
fisubrl
mov
loopne
in
xor
sbb
rcrb
test
xchg
cmp
push
aaa
dec
and
aaa
add
lahf
inc
xor
scas
xor
and
or
xchg
dec
enter
jno
mov
or
dec
jle
jae
ror
pushf
sbb
mov
pop
orb
xor
mov
cmp
dec
jb
int3
mov
mov
rorb
lock
jg
lret
popa
sub
add
ret
jg
fidivs
jbe
add
pop
mov
loopne
loope
sub
bound
push
jge,pn
faddp
inc
add
push
pop
enter
test
xor
mov
imul
dec
jae
pop
add
out
push
inc
shl
outsb
rorb
notl
lahf
mov
in
cltd
mov
aad
mov
sub
mov
xchg
adc
mov
addr16
sbb
mov
jl
and
nop
int
and
pop
inc
mov
pushf
inc
iret
or
cmp
lea
and
xchg
leave
xchg
xchg
sub
mov
push
mov
adc
leave
lods
mov
ss
cmp
or
jbe
aad
shlb
out
jae
cmpl
sub
sbbl
gs
daa
and
xchg
nop
jno
mov
mov
mov
cmc
mov
insl
mov
xchg
mov
sti
loope
mov
popa
sub
jo
cmpsb
pushf
pusha
fwait
lret
mov
mov
ret
fucomi
xor
mov
jecxz
ljmp
push
push
xchg
int3
jp
inc
add
shlb
popf
jmp
inc
inc
pop
xor
ret
push
rol
sub
xchg
movsl
and
push
int
jns
add
rol
loop
call
jo
jo
in
movsl
fcomi
test
nop
sbb
mov
shlb
mov
xlat
in
sbbl
sbb
cmp
jae
jo
gs
addl
and
lret
cmp
mov
scas
clc
lods
mov
data16
popf
adcl
and
or
fucomip
fsubrs
flds
sbb
je
out
bound
xchg
cld
xlat
or
out
adc
mov
jns
enter
ds
gs
cwtl
and
mov
cli
add
fildll
mov
lock
jmp
inc
pop
mov
test
xchg
out
and
jno
push
leave
mov
xor
xchg
roll
sub
dec
loopne
ret
arpl
outsb
jbe
ret
xchg
in
xor
arpl
in
aad
dec
lods
sbb
sbb
out
xor
lahf
jnp
adc
mov
mov
cmpsl
push
sbb
fdivp
nop
mov
lea
and
sub
mov
sbb
adc
nop
stc
test
addr16
ret
loopne
dec
scas
daa
cli
and
adc
xor
add
mov
cwtl
test
push
mov
loope
jno
adc
repnz
xchg
leave
and
daa
mov
arpl
and
cli
shlb
push
or
cmp
pop
in
push
push
rorl
xchg
jge
or
sbb
cmp
and
int
adc
ret
push
cmc
cs
sub
mov
push
pop
jecxz
cmpsb
inc
jo
mov
sbb
xor
dec
adc
jmp
orl
notl
out
mov
dec
mov
out
mov
pop
mov
fwait
incl
jmp
add
int
pop
push
insb
inc
sub
pusha
outsb
pop
dec
mov
mov
jle
jno
fsubrs
inc
push
sub
out
and
int3
cmc
xor
stos
sbb
lcall
out
cli
arpl
mov
jns
or
xor
test
cmpsl
loop
loop
mov
stc
aaa
pop
insb
or
push
ljmp
jb
sti
xor
pop
pop
icebp
fisubrs
cwtl
fs
in
sbb
mov
fsubs
pop
into
dec
les
cs
add
mov
shl
imul
jp
cmp
js
dec
mov
dec
ljmp
pop
jge
movsl
out
push
leave
sub
xchg
jge
dec
mov
mov
cmp
stos
lret
fwait
mov
xchg
xorb
add
out
lret
ds
gs
jns
lea
pop
shl
cmc
frstor
lret
push
and
xor
lods
sub
or
je
cmpsb
xor
in
pop
sub
adc
mov
mov
xchg
jne
pop
outsl
xchg
loope
mov
mov
imul
dec
mov
fstpl
stos
mov
gs
push
fucom
xchg
roll
int3
and
mov
jge
aam
dec
mov
sub
xchg
sub
test
pop
or
mov
cmpsl
fsubrp
in
movsb
fisttps
fsts
jle
pop
push
adc
mov
cmp
xchg
dec
add
mov
mov
cltd
sub
xlat
dec
cli
sbb
jns
sub
adc
outsb
jge
outsb
push
pushw
in
sub
or
jmp
aad
fimull
push
imul
mov
push
add
fdivrs
call
jmp
ffree
sub
call
or
mov
adc
jge
mov
sahf
shrl
pop
fsubs
pop
jns
push
sahf
xor
jge
pusha
pusha
fs
jp
adc
aad
push
jle
adc
mov
jns
push
into
dec
fwait
inc
shrb
pop
mov
stc
aas
sbb
outsl
shll
dec
stc
inc
mov
cld
inc
arpl
cmc
clc
imul
out
mov
dec
scas
movsl
hlt
inc
add
or
add
icebp
xor
pop
dec
or
call
mov
das
mov
lcall
and
shlb
loopne
out
xor
mov
or
stc
push
outsb
adc
jb
fistl
stos
out
fbstp
in
add
or
rorl
add
imul
jecxz
sub
push
push
leave
ds
lahf
movsl
dec
jnp
push
ret
cltd
out
jge
fidivs
mov
test
sbb
xchg
adc
sub
orb
ds
fisubrs
stos
push
cld
in
fnstcw
inc
notl
sti
daa
aam
jae
scas
cmp
insb
ret
call
cmp
lods
cs
cmp
scas
decb
notrack
cmp
int
aaa
popf
lret
lar
inc
pop
insb
mull
into
or
aam
sbbb
push
subb
sarl
inc
push
cmc
mov
add
mov
mov
mov
arpl
adcb
stos
sti
cld
dec
mov
aaa
ljmp
cld
mov
jp
cmp
das
jne
mov
add
mov
mov
cmp
mov
xchg
xor
mov
jecxz
repz
push
jle
xchg
mov
mov
outsb
push
xor
in
idivb
mov
mov
cld
mov
and
sbb
out
push
xor
out
push
in
ficompl
xchg
jg
fildl
stos
mov
cli
addr16
outsl
cld
sti
sub
cmp
jg
mov
mov
out
popa
mov
inc
iret
and
mov
sub
call
test
ja
bound
add
push
inc
mov
inc
cmp
pop
outsb
movsl
icebp
inc
add
sbb
xlat
shll
adc
cwtl
adc
sbb
mov
insb
sbbb
lcall
ret
ja
dec
inc
jp
sub
add
cwtl
mov
push
sti
fsts
xchg
add
lcall
fwait
rcll
stos
fstpl
lock
push
out
mov
push
push
sub
xor
sbb
pop
pop
push
in
jecxz
push
pop
jp
jbe
fidivl
outsl
mov
jmp
cmp
sbb
jbe
or
sahf
fisttpl
icebp
out
fdivrl
rep
sbbb
mov
call
movsl
adc
daa
cmpsl
sbb
xchg
lods
add
jmp
lods
sub
sbb
inc
xlat
test
push
sbb
leave
fsubrs
adc
lret
mov
jmp
jbe
ljmp
jl
ss
rcrb
sbb
mov
rol
add
in
mov
cmpsb
cld
cltd
mov
pop
inc
loop
bound
in
cwtl
cs
inc
test
jb
push
inc
mov
loopne
loop
stos
fcmove
cwtl
stc
push
jge
push
test
cli
sub
in
mov
cmp
inc
adc
or
mov
mov
lahf
mov
cmp
stos
jno
in
enter
jnp
push
leave
mov
movsl
nop
fwait
lods
inc
lods
jl
mov
pop
cmpl
push
and
ss
add
add
loopne
mov
push
sbb
ds
and
and
cld
xchg
test
xchg
push
and
or
jle
push
cmp
pop
shr
std
add
insb
mov
xor
jnp
fldl
scas
add
adc
fdivr
test
and
add
fnstcw
cwtl
xorl
imul
mov
mov
test
adc
popf
shrl
inc
pushf
ljmp
inc
inc
out
add
clc
jae
es
adc
push
xor
lods
sbb
fstpl
sub
xorb
addr16
cmp
and
fadd
cmp
inc
lods
movsb
sub
xor
stc
jmp
ljmp
lea
clc
push
je
ds
cld
nop
test
bound
adc
pop
mov
mov
nop
cmpsb
les
cmp
into
cmp
sub
sti
sbb
stos
mov
sub
pop
mov
movd
mov
wbinvd
fwait
mov
push
iret
test
xchg
test
xchg
adc
add
mov
mov
xor
bound
cwtl
pop
push
shll
pop
dec
fstpt
add
dec
aaa
jmp
stos
in
outsl
mov
pop
pop
cmp
mov
xlat
imul
fldcw
sahf
les
aas
pop
insb
adc
mov
repz
xor
fnstsw
push
je
out
jecxz
fstl
outsb
jmp
push
bound
xchg
pop
jb
jno
movsl
dec
or
je
mov
push
stc
pop
xor
cmp
pop
subb
ficoms
sarl
out
call
cli
mov
and
fstl
cmp
sub
loope
push
dec
push
pop
inc
jge
faddl
xchg
jmp
jnp
mov
add
and
mov
jbe
jmp
push
sbb
test
loopne
in
adc
xchg
xor
mov
mov
jg
cmp
cld
sahf
mov
sbb
rol
ja
iret
inc
sub
mov
or
xchg
fbstp
mov
icebp
pop
sbb
arpl
loopne
pop
int3
icebp
pop
movsl
es
pop
dec
sub
mov
xchg
fwait
loopne
testl
dec
aas
testl
lods
enter
out
sub
outsl
jno
xchg
addr16
divb
cmp
nop
mov
mov
add
aad
lret
dec
dec
sub
add
and
gs
iret
mov
jo
lock
lret
or
rcrl
mov
jg
shrl
imul
add
into
or
into
ret
pop
jo
pop
pop
rcll
push
cmpsl
jne
or
add
or
imull
not
sub
sbb
cwtl
mov
fdivl
sbb
pop
nop
push
loop
pop
inc
adc
data16
stos
mov
mov
fmull
dec
mov
jnp
sti
jne
sub
jbe
das
mov
xchg
sub
lds
shlb
add
in
cmpsl
or
sub
rorb
jnp
insl
xchg
pop
js
hlt
mov
fbld
std
xor
or
dec
ret
inc
or
fisttps
push
mov
pop
test
and
jl
pushf
out
es
inc
xchg
dec
pop
lret
sbb
data16
pop
in
das
sub
push
in
add
cmp
roll
sahf
add
outsl
das
xor
in
add
mov
pop
cmpl
mov
mov
test
push
mov
rorb
pop
sbb
loopne
mov
push
lahf
xlat
push
cmp
mov
or
fcompl
out
push
imul
sub
loop
pop
repnz
das
xchg
cwtl
jmp
lea
or
imul
es
mov
mov
rcr
pop
scas
subl
lcall
add
iret
or
pop
mov
es
push
mov
outsb
repnz
push
dec
xor
leave
mov
nop
mov
jmp
mov
cli
cmpsl
mov
fisttps
mov
add
imul
test
pop
cltd
jecxz
jo
sbb
push
mov
cmp
jp
push
in
pop
fldenv
jae
mov
fistps
pop
pop
mov
fidivrl
cmpsl
xor
in
mov
out
dec
popa
jp
inc
out
lret
pop
inc
ret
xor
mov
xor
xor
dec
or
xor
and
mov
out
xor
push
ds
xchg
xchg
cmp
sbb
aam
neg
addl
clc
cmp
sbb
lret
jmp
in
xlat
adc
push
popf
das
jmp
jns
push
push
sbb
xchg
pop
dec
aaa
idivb
int3
dec
inc
and
rcrl
jb
pcmpgtw
pop
mov
sub
out
xchg
js
in
inc
dec
push
cli
cmp
jo
mov
sbb
push
pop
dec
mov
adc
xchg
push
pop
add
lcall
lahf
pop
insb
test
xchg
or
into
iret
push
mov
dec
adc
xor
daa
mov
mov
cmp
cli
scas
fnstenv
cltd
sbb
leave
cltd
repnz
dec
mov
fwait
add
cs
mov
mov
pushf
or
cmp
mov
out
inc
jae
das
pushf
lods
dec
lds
xchg
or
fadd
sbb
shll
mov
leave
mov
mov
or
mov
pop
cmc
mov
in
jle
mov
enter
loop
push
xor
pop
mov
push
div
int
push
xchg
outsb
mov
xor
in
jg
roll
mov
and
inc
fs
call
lahf
xor
daa
push
popf
cmpl
dec
sar
add
jns
add
cmp
js
movsb
int3
pop
ret
js
std
scas
pop
dec
hlt
mov
fmull
lods
mov
sbb
movsl
out
call
bound
orb
shrb
push
sahf
andb
bndldx
lret
pop
das
iret
jbe
adc
cli
insb
jp
call
sub
mov
out
xchg
mov
jns
adc
and
cmc
fwait
push
sub
adc
pop
shrl
inc
mov
push
movsl
add
cmp
out
in
inc
adc
pusha
adc
mov
cmpsl
push
daa
or
fstps
inc
call
scas
lods
sub
cmp
sbbl
inc
xchg
inc
insl
dec
mov
jno
inc
stos
gs
push
stos
shlb
dec
sbb
gs
mov
cmpsb
iret
sub
repz
cmp
pop
add
and
ja
xabort
push
into
mov
std
orl
dec
nop
sbb
cmpsb
lea
pop
negl
ss
mov
into
jle
scas
mov
mov
push
cmp
cli
add
imul
sbb
xchg
add
adc
add
push
sub
mov
mov
repz
push
sar
xchg
lods
out
adcl
test
nopl
clc
push
std
lahf
mov
push
in
mov
and
push
fs
loope
fwait
out
imul
mov
outsb
xor
push
adc
in
or
xchg
scas
test
or
jb
mov
inc
addr16
inc
push
ds
fwait
or
into
sbb
insl
jne
jl
jnp
stos
pop
mov
pop
adc
cltd
aas
cmp
ss
mov
movsl
out
mov
popa
mov
scas
ja
ljmp
mov
rorl
imul
xor
lods
mov
lds
push
aad
pop
cmp
movsl
int
fnstenv
dec
cmp
sahf
mov
adc
scas
imul
xor
add
jnp
addb
and
ss
stos
cmpsl
lods
sub
or
sbb
inc
xor
enter
jg
ljmp
adc
lods
cmpsl
in
mov
mov
cmp
lret
insb
mov
addb
mov
xchg
movsb
cld
mov
es
xchg
xchg
mov
inc
sub
ja
inc
pushf
add
fidivs
add
cli
adc
loop
rolb
in
cmp
mov
in
sub
adc
popa
cmpsb
push
or
clc
cs
push
jecxz
mov
xchg
xchg
lds
inc
cmpsl
jo
mov
xchg
mov
mov
lret
mov
outsl
mov
inc
pop
or
jl
icebp
incl
and
adc
push
adc
jge
and
int3
in
sbb
jge
stc
mov
ficomps
mov
pop
jbe
jmp
dec
cmp
lods
cmp
lock
jnp
int
xchg
imul
cmp
faddp
adc
enter
xchg
lods
add
inc
fimuls
pop
adc
je
ret
popa
outsb
inc
scas
gs
add
jnp
or
xchg
cmp
sub
jb
js
fists
dec
test
mov
and
test
or
mov
push
sbb
lods
pop
sbb
fcomps
out
dec
ds
insl
xchg
loopne
int3
dec
sub
insb
insb
xchg
lea
das
mov
xlat
xor
hlt
ffree
add
pop
daa
inc
and
or
inc
adc
pusha
mov
fptan
pushf
push
call
pop
leave
cmp
repz
mov
push
cmpps
outsb
xchg
pop
fildl
xlat
push
or
test
lret
stos
orb
insb
add
add
push
bound
sub
scas
leave
inc
push
out
bound
fcom
test
int
imul
sub
push
jb
in
jp
pop
cs
and
in
lcall
enter
mov
cli
rcrl
mov
imul
xchg
out
xchg
dec
inc
jge
in
adc
push
adc
cmpsl
sub
dec
xlat
add
push
repnz
pop
outsb
jo
mov
push
test
jecxz
mov
sub
outsl
negb
mov
stos
mov
push
xor
xor
out
ljmp
adc
xchg
nop
mov
or
push
fisttpll
lret
mov
cltd
adc
ljmp
and
inc
in
mov
and
jns
add
mov
mov
les
imul
jb
aas
sbb
into
mov
aam
sub
lret
in
sub
mov
mov
adc
leave
xchg
insb
cmp
scas
dec
mov
mov
xchg
cwtl
arpl
fadds
shrl
jl
stos
mov
adc
shlb
and
cmpsb
add
and
mov
push
xor
adc
xchg
dec
and
out
imul
out
push
sub
adc
cmp
fistl
mov
lock
cmp
lahf
xchg
sub
add
frstor
pop
mov
cmpsb
push
lcall
xchg
sub
fwait
push
cmc
jns
shll
inc
mov
or
sti
ret
lea
mulb
xchg
xchg
inc
jnp
push
inc
cmp
outsl
mov
bound
mov
sub
push
mov
sbb
aaa
jno
cmp
aam
sti
mov
lret
or
sub
or
jmp
mov
xchg
cmp
sub
les
jecxz
scas
sub
xor
pop
inc
sub
pop
cld
das
loop
pop
pop
sarl
sbb
jno
movb
aaa
push
fs
lds
das
inc
or
cld
xchg
mov
jmp
pop
sbb
mov
lock
mov
cld
mov
xchg
xor
test
lret
sbb
xchg
jnp
sbb
push
jo
lcall
lds
cmp
push
jne
push
sarl
cmp
out
fcoms
xchg
in
fld
dec
imull
xchg
dec
subl
inc
mov
out
dec
cmp
push
jmp
pusha
mov
out
inc
or
and
cltd
iret
test
lcall
shrb
mov
lods
fwait
pop
push
pop
sarl
fnstsw
aam
dec
lock
es
mov
lods
aas
xchg
lods
stos
sbb
mov
pop
pop
sub
test
mov
cmp
cmpl
mov
pop
cmpl
loope
aas
es
xlat
pop
inc
inc
mov
mov
xchg
xor
add
mov
int3
mov
and
shrl
xor
dec
cld
mov
mov
dec
inc
or
jbe
mov
sub
outsl
ret
das
push
popa
arpl
outsl
cld
les
imul
hlt
jbe
shlb
jae
bound
call
cltd
push
mov
adc
test
stc
mov
dec
sub
mov
mov
mov
pop
xchg
jl
testb
mov
push
and
aaa
sub
ret
out
aad
lds
scas
cmp
ret
loopne
push
aam
loope
ja
push
shll
mov
std
cmpsb
imul
imulb
xchg
movsl
cmp
jbe
sbb
adc
pusha
fistpll
not
xor
into
aad
mov
push
mov
lds
jns
mov
mov
imul
mov
mov
push
cs
dec
pop
ljmp
out
xor
and
daa
lods
lret
dec
and
push
pop
je
les
aam
pop
jb
dec
mov
mov
je
cli
or
aad
iret
cli
sbb
repz
lods
mov
stos
add
cmp
mov
cli
xor
mov
cmp
inc
shrl
or
out
jecxz
mov
rolb
sub
ja
jl
js
or
xlat
loop
inc
imul
jno
adc
in
aas
xchg
mov
xchg
mov
movsb
pminsw
test
xor
test
mov
cwtl
mov
adc
jle
std
lret
xchg
cs
arpl
cwtl
stos
aad
pop
xchg
imul
jno
add
js
xchg
inc
sub
fsin
mov
sarl
mov
add
shr
lret
jecxz
int3
dec
jae
jne
add
mov
loopne
les
das
js
fcmove
mov
jle
cwtl
pusha
add
int3
or
insb
popa
addr16
ljmp
sahf
fdivrs
sbb
push
lods
adc
add
pop
sub
or
mov
in
lret
cmp
jg
movsb
cmp
lods
sbb
les
xchg
xchg
pop
mov
dec
mov
jns
cmp
fsubs
mov
xor
jmp
push
sbb
out
mov
mov
jmp
jae
mov
movb
scas
push
dec
fiaddl
ja
cmc
ljmp
mov
das
pop
gs
cmp
pushf
ljmp
lret
outsl
mov
sub
in
popf
subb
repnz
cmc
frstor
aad
xchg
fisttpll
sub
xchg
mov
movsb
lds
xchg
ret
xchg
mov
add
fldl
clc
loop
adc
js
cld
jnp
mov
inc
push
xor
mov
dec
pop
adc
mov
popaw
ds
jle
je
outsl
outsl
arpl
ds
call
mov
dec
repnz
roll
lret
sbb
mov
iret
pop
cmpb
subl
mov
fcmovnbe
pop
test
mov
aad
cmp
jne
data16
push
dec
gs
cmc
mov
mov
neg
fs
aaa
scas
in
jns
insl
xor
bound
jmp
cmp
enter
adc
fisubl
inc
jno
and
or
frstor
push
mov
stos
outsb
sbbb
cmp
mov
jnp
loopnew
jns
stc
repz
cmpsb
jne
outsb
mov
loop
cmp
xchg
popa
filds
dec
inc
add
dec
pop
adc
fldt
sti
mov
std
sbb
test
aam
das
sub
lret
fstpl
imul
cli
inc
dec
jb
sbb
pusha
loopne
pushf
sti
dec
push
adc
fildll
popa
mov
xor
cmp
adc
fcoml
rcrl
xor
add
repz
add
or
pop
mov
mov
in
cmp
jne
mov
repnz
add
sti
cmc
jne
push
pop
loope
jp
dec
ljmp
jl
out
jo
push
lret
shll
mov
add
ja
cs
or
push
test
into
pusha
aad
fildl
xchg
add
es
iret
xor
insb
pop
xlat
xor
sbb
jbe
or
sub
es
iret
mov
subb
jg
aam
adc
add
and
movb
cmpsb
mov
push
push
test
xchg
pop
jl
das
xlat
jns
ja
jmp
sarb
mov
xchg
fld
mov
insb
mov
xchg
pop
popa
test
testl
xor
into
ja
cmpsl
idivb
xor
sub
mov
inc
xorl
add
stos
adc
rcll
inc
fwait
movsl
push
es
mov
xchg
mov
ja
leave
inc
sub
in
push
out
pop
popa
dec
dec
cmp
jmp
cmp
xchg
aam
stc
mov
push
outsl
movsb
jae
sbb
in
xor
push
push
iret
mov
push
push
std
inc
add
das
mov
cmpsl
pop
loop
add
cmp
lods
push
loop
or
mov
pop
shll
mov
jmp
mov
pop
test
add
push
lds
pop
clc
mov
fmull
xor
cwtl
mov
and
lods
pushf
inc
jge
in
js
pushl
pop
push
adc
movsb
cld
addr16
sub
test
shrb
adc
int3
sbb
mov
xchg
push
fnsave
out
dec
inc
xchg
push
pop
rcrb
push
and
add
stos
mov
inc
nop
lds
and
push
sti
incl
pop
jno
jnp
mov
inc
das
lock
sbb
fstpl
loope
aam
mov
insl
add
sbb
cld
dec
mov
lds
push
jmp
ss
pusha
int
fsts
scas
outsb
mov
inc
sti
and
std
mov
sub
xchg
fsubrs
jg
mov
push
loopne
insb
outsl
outsl
push
iret
loope
repz
stos
mov
mov
hlt
insb
push
sub
call
mov
mov
xor
cmpsb
fisttpl
stos
leave
mov
inc
cmpsb
scas
movsl
inc
fnstsw
mull
pop
or
cmpsl
ret
cmp
jbe
mov
mov
imul
hlt
out
sarb
push
sbb
stc
dec
xor
inc
adc
loope
xor
lods
sahf
jle
mov
jo,pn
out
xlat
xlat
xor
cmpsl
cltd
rolb
lock
mov
aaa
fsub
loopne
roll
test
or
push
add
mov
std
je
inc
in
push
mov
mov
jge
sub
pushf
or
pop
mov
sbb
adc
fdivrs
in
jae
bound
dec
sub
stos
mov
pop
mov
xorl
mov
jb
fstps
dec
sbb
sub
jnp
scas
mov
iret
outsl
jno
repnz
fimuls
jg
mov
in
xor
stc
das
scas
inc
mov
repnz
pusha
pop
push
hlt
xchg
mov
and
bound
or
leave
jl
ret
mov
ror
jle
dec
mov
rolb
sub
repz
add
xchg
fisttps
aas
add
out
cmp
and
pop
sbb
adc
adc
lods
pushf
cmp
out
repz
out
int3
xchg
push
sub
mov
dec
inc
pop
popa
or
inc
jecxz
ds
mov
ss
xor
cmp
mov
pop
xchg
pop
mov
sub
sbb
pop
jns
leave
addl
pop
mov
xchg
ret
mov
rclb
clc
add
mov
cmp
insb
and
loope
ljmp
or
hlt
icebp
xchg
ja
mov
pop
inc
jle
js
jae
stc
fadds
pusha
jle
loop
lods
push
cld
rclb
lahf
and
mov
jns
cmp
mov
jbe
sub
xchg
adc
cmp
int3
mov
arpl
outsl
andl
xchg
mov
push
testl
xchg
in
repz
push
mov
jbe
test
jb
daa
inc
sub
cwtl
jae
xchg
pop
inc
xlat
mov
push
add
sahf
inc
and
adc
jmp
hlt
jmp
adc
out
pop
cmp
mov
and
arpl
lods
jbe
and
mov
stos
cmp
lahf
fs
rcl
loopne
sahf
outsl
movsb
and
test
mov
pusha
xor
pop
mov
inc
inc
nop
cmp
out
in
dec
mov
call
dec
mov
aam
push
mov
adc
xchg
in
sti
mov
orl
xchg
pop
pop
mov
jae
mov
int3
mov
xor
sbb
ljmp
inc
push
inc
mov
and
jae
loop
in
ja
jg
adc
pop
jle
fwait
and
sub
pop
rcrl
mov
stc
pop
pop
pop
add
lods
and
push
sub
in
cmpsb
cmc
and
mov
jae
mov
sbb
sbb
mov
ss
mov
int
stc
call
inc
fwait
pop
ja
sub
lahf
int3
sbb
outsl
xor
adc
lods
mov
test
movsl
pusha
add
imul
mov
push
adc
movsl
sub
ror
inc
ficoms
adc
das
jmp
cli
or
pop
out
sub
mov
aas
dec
imul
push
mov
pop
je
jne
sub
lock
cmc
pop
or
test
or
xchg
sbb
xchg
add
or
sbb
pop
or
push
mov
mov
xchg
xchg
or
sub
int
stos
stos
cmc
push
fucomip
cli
rclb
movsb
mov
rcl
sub
lahf
movb
scas
jle
lods
movsl
inc
je
dec
push
add
or
dec
cmp
jecxz
inc
cmp
fimuls
test
pop
scas
sbb
mov
icebp
xchg
cmpl
insb
jo
fwait
cs
lea
stos
and
push
mov
loope
into
popa
xor
aaa
js
rcrl
stos
xlat
frstor
popa
xlat
inc
call
cltd
and
lock
rorl
ss
xor
xchg
shll
and
popf
xor
lods
and
fs
pop
mov
into
fwait
xor
sbb
push
outsb
pusha
cmpsl
lock
popa
push
adc
inc
pop
test
pop
pusha
adc
xchg
mov
outsl
icebp
icebp
lret
jbe
and
das
jns
jle
mov
cltd
or
stos
js
iret
roll
add
and
ds
sub
mov
cmp
subl
jg
hlt
pop
call
cmp
cmp
inc
pop
aaa
aaa
sub
in
cli
mov
cmp
push
jb
mov
ficoml
xchg
cmp
mov
dec
aas
lret
clc
int
fnsave
inc
sbb
add
and
cltd
mov
cmovb
dec
mov
dec
dec
push
ficoms
bound
push
xchg
andl
cmp
push
repnz
or
add
mov
mov
pop
sub
pop
jle
ret
cmpl
out
pop
mov
ret
adc
test
fs
leave
add
arpl
test
mov
jo
push
in
lahf
repz
fwait
or
enter
fdivl
iret
xchg
mov
leave
fmulp
jne
imul
pop
stos
mov
mov
imul
jecxz
fidivl
out
aaa
insb
and
dec
xchg
pop
mov
sbb
cwtl
leave
dec
push
jmp
in
shl
stos
or
insb
sbb
mov
shll
jns
out
cltd
jle
insb
fnstsw
sub
mov
ret
stos
dec
push
lret
sbb
fisubs
push
mov
sbb
jno
mov
test
popa
fistps
or
cli
stos
gs
pop
push
xchg
mov
and
xchg
jbe
add
xlat
mov
or
popa
or
int3
aad
inc
fcoms
pushf
pop
lods
dec
out
sbb
cmp
jo
outsb
in
pop
adcb
xlat
adc
xchg
pop
ret
mov
pusha
fildl
pop
loopne
inc
in
test
loopne
inc
adc
aas
bound
int3
xchg
repnz
stos
ret
pop
jae
add
pop
stos
push
fwait
cmpsl
in
fistpl
pop
ss
mov
pop
clc
sbb
imull
fdivrp
push
lock
xchg
sbb
push
push
popa
mov
mov
xchg
data16
fsubl
ja
hlt
add
or
lahf
stc
push
lods
vmwrite
jle
repnz
jge
stc
cmpb
rcrl
sahf
push
call
or
mov
scas
adc
repz
jb
js
hlt
push
mov
jno
aas
stos
cmp
push
aaa
or
pop
popa
repz
nop
push
mov
and
mov
out
lret
orl
cmp
inc
inc
and
gs
lea
mov
aad
cmpsb
cwtl
scas
popf
cltd
fnsave
aaa
in
pop
xor
sub
or
cli
push
push
shr
push
lret
xorl
cmovge
sarb
movsl
pop
movb
mov
outsl
jecxz
and
and
popa
mov
xchg
mov
cltd
add
and
xor
push
inc
push
pop
aas
push
xor
int
nop
mov
jp
lods
movd
sub
mov
stos
push
lret
js
dec
outsb
push
jl
jmp
pusha
pop
and
or
mov
in
clc
add
mov
adcl
inc
inc
andb
test
xor
clc
push
fidivrl
subl
mov
sub
cld
test
movsl
inc
pop
les
xchg
sub
imul
sti
rolb
dec
test
adc
andl
cmp
ffree
mov
mov
or
outsb
repz
or
inc
pop
fwait
pop
pop
sarl
add
rolb
jmp
iret
xcrypt-cfb
cmpsl
cmpsb
mov
adc
add
push
sub
mov
push
adc
push
pop
pop
loopne
or
sbb
in
cs
and
aam
sub
lds
sub
and
test
in
fisubl
jne
mov
fdivrl
adc
nop
sti
insl
adc
loope
test
pushf
sub
jle
cmpsl
int3
or
scas
jle
nop
and
int3
std
out
cmp
mov
icebp
jge
cli
add
inc
pop
jecxz
ss
jnp
jnp
out
mov
cmpsb
jnp
xor
add
xor
sahf
test
mov
ds
adc
mov
mov
or
mov
xchg
xchg
cltd
dec
dec
add
insb
or
shlb
jno
in
add
add
mov
jo
push
hlt
lret
lock
adc
cmp
int
out
scas
jae
push
xor
mov
sub
xchg
mov
cmpsl
call
adc
or
cmp
mov
jne
hlt
aad
clc
pop
dec
push
addr16
in
repz
pop
stos
in
pop
loope
fimull
dec
pop
mov
dec
rcrl
xor
cmc
push
sbb
lcall
aas
mov
dec
loop
in
jbe
jb
scas
sub
out
test
mov
mov
jne
aas
iret
and
sti
jns
xor
aaa
xchg
adc
testl
lahf
push
cmpsb
imul
xchg
sub
data16
negb
mov
mov
jecxz
inc
and
pop
popa
adc
xor
push
cltd
mov
addr16
push
aad
rcl
lahf
pop
mov
mov
jb
rol
fnstsw
gs
pop
mov
xchg
add
push
xor
mov
and
cmp
test
sbb
dec
ror
cmpsl
out
jns
and
sbb
clc
and
loopne
imul
cmp
jnp
pushf
mov
mov
sub
scas
movsb
cli
aas
xchg
mov
fmul
xchg
pop
or
mov
insl
xchg
pop
mov
xchg
ja
xor
je
sub
divb
add
dec
sbb
lahf
sbb
adc
xor
sahf
sub
xchg
clc
add
xor
test
test
and
xchg
add
shrb
mov
loopne
repnz
pop
cmpsl
sub
dec
xchg
xchg
jae
pop
mov
lods
add
push
and
xchg
leave
mov
xchg
lret
out
dec
sbb
sub
ret
mov
test
push
jno
test
pop
add
mov
push
fs
jns
push
and
movsb
jle
stos
adc
jnp
jno
pop
mov
hlt
mov
dec
repnz
enter
mov
jge
addl
mov
or
xchg
fsubrp
lcall
shrb
es
nop
outsb
icebp
and
add
mov
mov
push
out
ret
mov
fucomip
and
cmpsb
sti
jmp
push
xlat
and
push
xor
sbb
push
enter
mov
push
mov
jle
and
es
inc
mov
pusha
out
cmp
lock
or
leave
fcoms
jmp
imul
push
and
rclb
clc
cmp
popl
mov
daa
and
out
xor
gs
dec
ret
test
mov
and
dec
dec
cmc
je
mov
fidivrl
pop
rorb
mov
pop
ds
ja
sbb
int3
sub
push
rcr
aas
lret
dec
sub
cmpsb
pop
in
mov
in
jecxz
mov
mov
mov
push
and
mov
and
repnz
stos
test
pop
jge
arpl
pop
fs
xor
push
or
sbb
nop
out
adc
hlt
popa
add
scas
cmp
dec
ss
jo
mov
mov
adc
sub
lods
xchg
std
push
push
jl
fcomi
ret
and
mov
stos
cmpsb
push
mov
sbb
cli
push
icebp
test
ret
xchg
iret
insl
push
dec
mov
mov
divb
loopne
fistpll
test
push
int3
push
push
out
rcrl
sub
xchg
faddl
pop
in
mov
adc
out
sbb
sub
inc
or
movsb
push
popa
dec
leave
and
bound
adc
mov
hlt
cmpsl
bound
xor
adc
cmpl
test
sbb
mov
seta
add
leave
stc
scas
imul
aas
imul
dec
jnp
pop
test
out
jmp
in
addr16
jmp
inc
or
push
sub
jnp
inc
jnp
rclb
imull
or
fucom
sti
sbb
pop
push
test
ja
shlb
and
and
push
fnstenv
test
je
out
jmp
push
push
sub
movsl
mov
mov
ds
sbb
xor
xor
fdivl
cld
dec
icebp
sub
jl
out
mov
cmp
std
scas
cmp
fidivrs
and
jle
adc
mov
repz
pop
sbb
fisttpl
icebp
add
push
jecxz
add
jae
pop
jnp
mov
jae
pusha
jno
adc
adc
add
adc
in
popf
mov
insl
jb
outsl
dec
jmp
pop
fdivrs
xor
incb
aas
mov
mov
mov
jae
xchg
fildll
movsl
jb
fcmovnb
xor
aaa
int3
sub
fwait
pop
push
sub
movsb
mov
les
or
adc
test
push
push
jo
imul
fdiv
scas
pop
cs
or
cmp
enter
mov
xchg
xor
pusha
imull
out
sbb
mov
inc
icebp
int3
insb
hlt
jo
enter
mov
sbb
lods
pop
jne
orl
mov
test
mov
lock
dec
pushl
sti
jo
sti
lret
scas
scas
push
and
pop
add
sub
push
sub
lods
cmp
jb
scas
and
cwtl
bswap
aam
mov
xchg
out
aam
xor
xor
dec
mov
lea
jg
sarb
scas
rcrb
fstpt
fs
loop
test
mov
lock
fsubrl
xchg
dec
and
inc
lods
mov
cmp
leave
lret
jbe
rorb
sub
push
mov
or
jno
lea
mov
mov
jl
out
mov
push
nop
es
sub
mov
insl
roll
testl
jmp
sbb
in
dec
scas
pop
shrb
orb
sarb
adc
dec
in
cli
lret
mov
mov
push
cld
mov
jne
ja
jmp
inc
int
je
les
mov
mov
lds
insb
or
jno
cmc
incl
aaa
xor
inc
jecxz
daa
mov
jp
jp
jmp
pop
into
xchg
push
imul
insb
clc
stc
jmp
mov
jle
or
jae
sub
ja
xorl
lahf
pop
daa
in
test
gs
adc
outsb
and
dec
jmp
in
mov
mov
lcall
insl
adc
mov
push
and
aas
repnz
shrl
inc
push
ss
rcr
pushf
fwait
shrb
mov
lock
pop
out
movsb
mov
repnz
lret
cmp
push
cwtl
cltd
xor
sbb
es
jp
imul
stos
scas
jmp
inc
sub
outsb
jno
adc
ret
and
mov
in
xchg
mov
and
dec
sbb
pushf
sbb
push
repnz
jp
cmpb
sbbl
mov
cmpsb
inc
leave
push
jmp
out
add
fs
in
adc
lock
pop
dec
rorb
hlt
mov
add
sub
xor
dec
push
sub
adc
outsb
lcall
lods
xor
or
imul
das
lret
cmpsb
seto
and
cmp
popf
xorb
mov
mov
cmp
dec
in
xor
jns
pop
push
stos
ficoml
jle
iret
imul
jbe
mov
fdivrp
rcrl
pop
sbb
mov
cmpsb
sub
adc
jge
push
scas
mov
out
add
mov
dec
loop
push
pop
arpl
adc
and
les
fimull
sbb
add
xchg
sti
xchg
adc
xchg
pusha
shlb
addr16
nop
mov
dec
jmp
jp
sub
dec
adc
cld
sbb
mov
xchg
inc
adc
arpl
and
mov
sti
scas
insb
add
adc
lods
push
cmc
insl
jbe
sahf
mov
push
fs
test
pushf
nop
pop
pop
fdivrl
xchg
ret
arpl
fisubrl
movsl
xchg
adc
sub
scas
orl
hlt
inc
or
pop
pop
movsl
xchg
xchg
lods
sbb
subl
shrb
faddl
aam
shll
xor
aam
dec
ds
adc
iret
fsub
movsl
test
pop
push
add
fadds
xor
pop
xorb
jo
das
dec
lock
xchg
push
inc
incl
pop
pop
fwait
insb
shrl
adc
inc
out
xchg
pushf
ret
arpl
cli
test
cld
push
lcall
mov
push
inc
pop
mov
movsb
out
sbb
mov
das
fwait
inc
jae
sub
jae
push
gs
pop
push
inc
lcall
jg
add
outsl
insb
cmc
push
push
add
pop
nop
and
popf
rol
fst
js
cwtl
loop
pop
push
and
mov
ljmp
jae
add
sub
xchg
add
aas
ljmp
adc
sbb
xchg
pushf
inc
movsl
sub
lock
push
xor
push
orb
int3
cmp
fmull
pop
ret
mov
push
cmpsb
repnz
into
andb
pop
xchg
cmp
mov
pop
int
sbb
je
shll
fwait
lods
cmp
scas
jae
fldl
aad
mov
pop
pop
pop
lret
pop
fdivs
xchg
es
mull
loop
pusha
push
cmp
pop
push
adc
cmpsb
push
cmpsl
xchg
mov
or
push
mov
inc
cli
jl
sbbb
dec
sar
scas
mov
out
out
cmc
pop
mov
fs
xor
and
bound
pop
mov
jge
lock
xchg
call
inc
mov
xchg
fwait
outsl
dec
cmp
and
xor
sbb
pop
and
ret
inc
icebp
cmp
loopne
lds
in
xchg
push
cmp
xor
in
push
gs
movsl
das
scas
fnstcw
bound
ljmp
mov
dec
repz
mov
inc
xchg
outsb
mov
jmp
xchg
dec
push
adc
push
dec
or
pop
push
xor
pop
outsl
or
push
sbb
mov
fldt
and
nop
xchg
mov
stos
pop
ret
fisubrs
imul
push
out
inc
imul
jmp
pop
jmp
std
adc
adc
dec
imul
loop
xchg
or
cmp
leave
int
jae
movb
in
mov
inc
mov
pop
dec
pushf
js
ja
les
ret
add
and
sub
aas
test
daa
xor
bound
fidivs
lcall
mov
addl
fwait
inc
mov
lods
lret
sub
addb
cld
xchg
push
cwtl
push
mov
mov
inc
jg
xorb
fcmovne
faddl
adc
or
icebp
cld
cmp
cltd
sbbb
cmp
loop
adc
adc
call
and
jbe
push
pop
loop
mov
or
cmp
xor
adc
pop
dec
cli
ror
andl
in
push
lahf
sbb
cmc
rclb
mov
sub
repz
jp
test
jle
sub
jns,pt
lcall
fldenv
push
sub
add
mov
xchg
or
cli
or
lds
jns
jge
dec
clc
cmpsl
fs
testb
xor
lahf
pop
dec
xor
mov
jae
mov
dec
lahf
cmpsb
pushf
ljmp
shll
mov
je
push
xor
faddl
jno
negl
push
adc
jne
orl
inc
adc
stos
or
imul
add
adc
imul
cmp
insl
inc
mov
jmp
xchg
cmp
movsl
cld
int
cmpsb
cmp
lret
jl
rcrl
and
pop
sarl
scas
mov
pop
cltd
inc
fcompl
push
repnz
pop
mov
pop
inc
rcr
aas
out
xor
cmc
sub
loop
and
sub
pop
lock
add
jg
xchg
imul
adc
jmp
cmp
dec
leave
mov
xor
inc
mov
push
xlat
cmp
sbbb
or
ljmp
xor
jbe
mov
out
xor
jo
ret
sbb
push
sarl
out
call
jle,pn
xor
cli
sub
int
jns
sub
pop
dec
adc
sbb
addr16
cli
and
scas
inc
sub
cli
adcb
pop
inc
aas
push
sub
xchg
std
jp
cmp
push
fdivrp
outsb
jno
stos
and
dec
sbbl
jne
adcb
xchg
enter
test
int3
pop
jno,pt
arpl
pop
inc
jp
idivl
or
cmp
mov
inc
je
mov
ss
jno
inc
lods
idivb
jle
pop
inc
fwait
cmp
imul
mov
push
mov
outsb
orl
and
les
xor
inc
mov
sbb
adc
ficomps
xorl
push
std
push
outsl
adc
pusha
cmp
and
gs
mov
lock
jbe
dec
lods
pop
add
push
add
xchg
sbb
push
lock
pop
dec
outsb
sti
je
outsl
sub
xor
inc
outsl
mov
inc
push
adc
or
push
fidivl
lret
subl
cmp
xor
mov
mov
and
xor
gs
iret
mov
mov
sbbl
jge
mov
fimull
fs
mov
jae
cltd
std
pusha
or
add
lds
jbe
cmpsb
and
push
xor
cwtl
xchg
ret
or
aam
pop
cmpsb
mov
push
lods
and
sahf
sub
out
mov
xlat
adc
popf
jbe
shrl
mov
jo
pop
xchg
lret
lock
fldenv
shll
pop
dec
jne
xchg
fs
sbb
jb
mov
adc
push
inc
popl
arpl
cmp
and
mov
ljmp
lods
mov
dec
mov
lcall
lcall
icebp
sub
jmp
bound
aad
fwait
xchg
cmc
xchg
inc
mov
test
mov
inc
cmp
add
mov
xor
es
iret
mov
cmp
jecxz
loope
add
jns
movsb
hlt
pop
push
daa
stos
pop
push
ja
popf
lahf
test
lret
loop
icebp
call
pusha
push
out
cmp
addr16
xchg
add
mov
or
movsb
movsl
pushf
pusha
xchg
mulb
leave
inc
xchg
sbb
rclb
iret
sbb
xchg
mov
inc
mov
add
test
or
xchg
sub
pusha
sub
int3
mov
clc
ja
test
in
pop
lds
dec
sub
xchg
inc
or
ds
test
jb
and
adcb
fmuls
fisttpl
aad
ret
sub
jg
js
je
mov
popf
or
pushf
jno
xor
stos
pop
cmp
inc
mov
das
out
in
mov
xor
and
add
pop
sbb
jmp
mov
cmp
testb
popf
add
dec
jne
ljmp
clc
std
and
nop
and
mov
cs
xor
mov
pop
cltd
dec
mov
into
andb
std
sub
das
mov
rolb
and
xchg
xchg
imul
mov
fbstp
cmp
loope
pop
fcomps
inc
sbb
movsb
data16
std
jp
dec
or
pop
adc
cltd
loopne
and
mov
add
aaa
push
adc
sbb
lods
out
sub
or
jp
xor
iret
xor
fimull
jbe
lds
push
clc
fdivrl
loop
pop
inc
sub
aaa
add
js
fs
lods
movsl
aas
pop
mov
cs
icebp
inc
add
fsubp
lock
lock
pop
popa
sbb
dec
sbb
add
xchg
stos
and
or
pop
xchg
dec
movsb
mov
imul
lea
add
mov
pop
icebp
test
cmp
fs
mov
push
dec
loopne
pop
in
jbe
aad
or
nop
movsb
cmc
cld
popa
add
pop
nop
mov
xor
sti
insl
mov
jns
xchg
mov
lods
shrl
mov
push
adc
mov
push
jmp
xor
loope
and
fs
pop
mov
xor
push
push
jle
outsl
xchg
movsl
pop
int3
inc
icebp
rcr
cmc
ret
mov
and
adc
lahf
icebp
ret
mov
pop
aad
in
add
out
outsl
lret
or
jno
push
or
addl
in
shrl
popa
push
jge
pop
push
mov
and
mov
xor
cmpb
xchg
xchg
jbe
push
jle
arpl
sbb
jecxz
and
jecxz
xchg
pop
pop
repz
jne
sub
mov
and
in
mov
or
fmul
sub
fnstenv
xchg
fs
jnp
in
push
push
loope
rolb
mov
test
test
out
mov
popa
adc
push
insb
mov
repnz
pusha
pop
inc
sti
sub
repz
sahf
sub
test
es
lods
mov
push
sahf
mov
hlt
xlat
jno
adc
jecxz
pop
das
ss
sbb
fstl
das
sbb
inc
push
ret
pop
mov
insb
mov
andl
jb
aad
sbb
add
cld
sub
add
mov
jbe
sahf
pop
movsl
das
dec
mov
sub
lods
in
sbb
pcmpeqb
fdivl
sub
inc
dec
mov
test
jno
push
out
or
orb
aad
hlt
cmp
fsubl
push
loop
adc
testl
es
fsubrs
icebp
imul
dec
jl
loopne
mov
and
lret
sub
add
sbb
push
cwtl
shlb
pop
xor
adc
lahf
xor
inc
stc
inc
dec
xor
aaa
push
stos
mov
mov
xor
mov
stc
addb
jb
inc
mov
cmp
data16
outsl
pop
xchg
insb
mov
or
or
rorl
mov
xlat
and
mov
cmp
je
inc
or
psubq
clc
pop
or
je
pusha
dec
jmp
hlt
add
sti
cs
pop
sbb
inc
dec
ja
div
popa
fldt
nop
mov
pop
gs
mov
es
xchg
add
stc
mov
push
dec
dec
push
daa
and
aam
shll
fidivrs
xcrypt-ofb
cmpsl
out
dec
jnp
test
mov
int3
cmp
cmp
pushf
sahf
pushf
cmp
add
mov
push
adc
stos
jge
xor
mov
outsl
and
outsb
in
es
fstpt
mov
mov
popf
pop
test
inc
aaa
xchg
mov
push
outsb
sbb
pop
sub
mul
subl
mov
or
xchg
mov
jno
inc
inc
push
add
in
jo
mulb
and
xlat
in
fwait
sbb
js
fcompl
shrb
mov
adc
mov
cmc
sbb
in
dec
inc
popf
mov
icebp
sbb
and
fxch
adcl
adc
mov
stos
mov
mov
cmp
xlat
cmp
and
pop
test
inc
in
jl
in
sub
out
fwait
add
sbb
fidivl
sbb
leave
test
call
mov
pop
repnz
mov
cmp
in
xor
int3
addb
push
gs
movsb
jns
stc
pop
lahf
vmovhps
sub
xor
mov
cmp
cmpsb
ds
ja
inc
pop
pop
iret
aaa
stc
push
push
je
je
pop
xor
push
imul
cmp
dec
jbe
popa
xor
cmp
aam
in
xor
inc
popf
xchg
loope
icebp
nop
rorl
stos
dec
test
push
lock
inc
icebp
sti
dec
repnz
decl
fimull
jbe
iret
fisubrl
fcompl
mov
add
xchg
push
add
or
mov
jno
xchg
push
test
call
adc
sbb
gs
xchg
into
out
imul
pop
mov
mov
inc
std
xchg
enter
jp
out
out
je
cmpsl
fbstp
mov
rcr
or
in
pop
lret
jp
fcmovne
or
outsb
fidivl
ja
add
push
cs
pop
mov
stc
mov
cltd
out
iret
cs
push
xchg
sti
add
dec
push
ds
push
mov
add
popf
mov
xchg
stos
sub
xor
mov
sahf
xchg
orb
jo
inc
xor
sti
loopne
rcrl
mov
pop
mov
shrb
fcoml
and
and
inc
mov
not
inc
aas
ljmp
lcall
movsb
inc
lahf
mov
jmp
cmc
pushf
dec
or
ret
lcall
xor
jle
ds
aas
mov
jg
pop
mov
into
stos
push
ret
js
sub
mov
das
lahf
add
stos
xor
aas
adc
push
sti
sbb
dec
aas
lods
in
fldcw
dec
dec
out
cld
dec
or
pop
or
arpl
mov
mov
imul
add
bnd
add
movsb
outsb
arpl
mov
out
addr16
push
xchg
add
lcall
idivb
popa
and
dec
inc
imul
mov
push
mov
imul
rcrl
mov
imul
or
inc
mov
bound
inc
jnp
push
stos
enter
push
test
mov
stos
testl
xor
xor
push
fs
popa
xchg
pop
stc
sbb
push
push
push
pop
sub
jp
or
pop
loopne
out
xchg
pop
fidivl
xchg
xchg
mov
lods
std
daa
subb
addl
js
xlat
loope
and
mov
lahf
add
call
lret
or
cli
sti
jnp
rorl
ds
cs
clc
cmpsb
arpl
fdivrs
dec
pusha
xor
dec
test
jnp
cli
jne
jmp
repnz
loopne
xchg
xor
xor
sbbl
cld
mov
movsb
shrl
out
sbb
mov
orb
pop
test
xor
push
enter
mov
add
inc
jb
std
push
pop
sub
sbbl
cmp
mov
hlt
jns
in
subb
sbb
pushf
push
loopne
movsb
mov
jmp
xchg
jle
std
pop
mov
dec
or
add
adc
fs
jle
in
div
loop
or
icebp
xchg
adc
push
add
sub
std
and
push
cmp
andl
jmp
cmp
jecxz
mov
or
xchg
fnstsw
sub
mov
mov
stos
lds
pop
inc
and
stc
pop
xorb
popa
loop
or
adc
dec
cmp
push
jmp
xchg
insl
popf
inc
jae
cld
jno
imul
and
cmpsb
cmpsl
mov
ror
cmpsb
sub
push
sub
aaa
lahf
mov
sub
mov
mov
or
into
jge
sub
pop
pop
mov
sub
pop
push
insb
or
fnstenv
loopne
push
popf
cmp
mov
xor
push
push
dec
faddp
stos
mov
lock
leave
out
sub
lods
bound
pop
rclb
fwait
pop
xor
jp
fimull
cwtl
pop
imul
jbe
xor
dec
adc
mov
inc
mov
jle
push
or
subb
ljmp
out
adc
sbb
call
lahf
and
inc
sub
repnz
inc
mov
push
fists
mov
iret
cmp
xlat
mov
and
mov
into
adc
mov
insb
push
jns
fnstenv
or
or
outsl
shlb
or
cs
mov
adc
in
repnz
sbb
sub
mov
jmp
in
fstl
fistl
adc
leave
adc
lods
jo
add
out
xor
loopne
cli
sub
and
jp
cmc
push
sub
cmp
fstpl
into
push
or
cmp
sti
adc
dec
inc
lahf
dec
mov
movsb
mov
movsb
mov
and
adc
out
sub
insl
cld
inc
repnz
leave
aad
imul
xchg
cmp
test
xchg
ficomps
mull
inc
je
xor
nop
aam
pop
dec
mov
mov
hlt
mov
push
xchg
inc
and
clc
dec
cmp
jae
loope
xchg
inc
into
xlat
jle
xlat
movsl
mov
mov
repz
inc
pop
cwtl
lds
aaa
jle
es
outsb
cmp
test
fwait
xor
cwtl
or
lea
and
mov
ss
jb
adc
test
push
fs
or
bound
pop
xor
dec
and
sti
sbb
mov
ror
mov
xor
hlt
je
or
jbe
mov
cld
add
cmp
dec
imul
xchg
repnz
scas
push
pop
cmp
test
movsl
sub
mov
adc
dec
popf
out
jae
imul
shlb
mov
xcrypt-ofb
cmpsl
imul
push
js
sbb
push
xchg
jge
add
pop
stc
je
loope
xor
ret
pop
mov
adc
mov
dec
mov
push
es
stos
jle
pop
mov
jmp
xchg
daa
jb
stos
cltd
push
mov
xchg
mov
test
pop
mov
xchg
push
dec
repnz
pushf
test
int3
mov
roll
push
mov
mov
add
and
sahf
mov
ja
out
in
pusha
xor
xchg
sub
or
xor
pop
call
inc
lea
jne
dec
or
xchg
dec
pop
cmp
repnz
aam
jg
test
mov
dec
fiaddl
xchg
sbb
leave
scas
xchg
mov
dec
sub
dec
cmp
std
clc
call
bound
fs
inc
ds
pop
push
mov
sub
pop
sbb
adcl
xchg
inc
roll
or
mov
arpl
sub
lret
mov
fsubrs
mov
jns
jno
jecxz
xchg
push
fdivrs
lock
in
lods
jmp
mov
call
jp
inc
mov
into
jp
imul
and
data16
imul
enter
jge
and
in
add
aam
aaa
test
pop
pop
rol
mov
mov
jnp
shl
pop
frstor
cmp
enter
repnz
aad
ss
cmp
sarl
xchg
rcl
ds
outsl
xor
ret
icebp
cmp
repnz
xchg
test
fstps
xchg
imul
push
movsl
or
cmpsl
jo
mov
adc
sbb
test
mov
scas
dec
shll
inc
or
pop
xor
mov
stos
xchg
jp
xor
fcmovb
arpl
mov
cld
ja
jmp
dec
xchg
add
xor
sti
cmp
and
loopne
cmp
loope
jecxz
mov
xchg
mov
lea
es
cmp
mov
jecxz
or
push
mov
andl
pop
jno
lret
jmp
out
cmp
jmp
cmp
icebp
iret
fbstp
adc
jno
mov
pop
repz
addr16
inc
dec
jge
insl
jmp
pop
mov
mov
pop
push
aas
aam
push
andl
je
loopne
pop
mov
fldcw
int3
xor
add
out
stos
jno
push
paddb
adc
cs
and
sahf
filds
mov
jmp
pusha
push
mov
lock
leave
popa
outsl
lods
js
cmp
ljmp
test
adc
into
bound
fnstenv
jb
jnp
or
add
ret
xor
daa
lahf
mov
pop
ss
adc
fdivrp
sub
sbb
mov
aam
xchg
mov
bound
and
imul
xchg
outsb
sahf
stos
push
pop
mov
xchg
dec
lea
lcall
fstps
inc
ja
adc
notl
pop
js,pn
dec
fidivrs
mov
movsb
sub
pop
lret
push
hlt
lret
sahf
adc
jo
lret
out
ret
addr16
ret
fsubr
add
sub
pop
add
mov
push
aam
loopne
out
movnti
hlt
jns
imul
pop
daa
ja
push
ret
pushf
mov
pushf
xor
jle
cmp
imul
push
mov
hlt
jle
jecxz
xchg
cli
xchg
jge
mov
inc
jo
int
jmp
xor
jecxz
inc
add
mov
or
dec
xlat
fwait
mov
push
push
or
lods
and
aam
shlb
dec
push
pop
cmp
sub
icebp
test
mov
push
dec
push
mov
and
xor
jnp
stos
imul
mov
cs
shl
push
mov
jecxz
outsl
bound
icebp
adc
mov
stc
ja
lahf
jbe
dec
scas
or
pop
add
inc
or
pop
gs
push
lock
add
enter
es
cmp
jge
test
rcrl
test
orb
jl
mov
popf
xchg
insl
fstpl
or
pop
call
mov
loopne
add
xchg
adc
lock
push
jmp
imul
cmp
cmp
stc
sbb
and
test
loope
add
fwait
pop
inc
and
xchg
ret
push
mov
lock
mov
cmpsl
sub
gs
testb
movsl
xlat
arpl
push
pop
int3
add
int
fcomp
mov
and
jno
lret
dec
cmpsb
cmpsb
insb
xchg
add
xchg
loope
inc
cmpsb
loop
push
lds
insb
roll
fsubp
mov
fnsave
call
push
jg
cmp
inc
xor
negb
cmp
sahf
mov
movsl
push
push
insl
fdivrl
push
and
mov
rcll
jno
inc
repnz
sbb
test
js
repz
push
arpl
loop
sbb
mov
sub
subb
mov
dec
sub
pop
subb
sub
mov
inc
mov
jmp
popf
pushf
push
jns
xchg
pop
cltd
out
movsl
lds
cld
imul
aam
xor
xor
out
pop
addb
adc
mov
dec
xor
stos
mov
mov
in
push
cmp
mov
pop
std
pop
shl
cmp
roll
inc
add
test
loop
adc
repnz
sub
jb
jp
insb
repz
sbb
and
mov
mov
mov
out
dec
jge
and
inc
mov
jg
push
mov
or
xorl
aaa
shrl
jne
jne
fdivrs
xchg
pop
out
repz
sub
test
xor
add
mov
add
mov
and
cmp
dec
sub
pop
aas
jg
mov
sarb
movsb
shl
ljmp
int3
cli
leave
ss
fcomp
lret
adc
repz
popf
or
inc
inc
push
xor
popa
aaa
or
rorb
and
cwtl
mov
mov
cld
popf
les
jbe
popa
and
xlat
daa
shll
dec
and
adcl
and
insl
xor
jb
js
pop
push
mov
cs
pop
jp
cmc
shlb
xlat
sub
cmpl
jbe
rcrb
add
out
in
xchg
and
loope
lock
or
dec
and
cli
sub
pop
mov
push
jmp
add
pop
pop
lea
or
pop
sbb
or
sub
scas
dec
popf
insl
sub
jns
inc
fisubs
push
xchg
test
adc
mov
cmp
lcall
jl
inc
push
xchg
sub
pop
shlb
ret
mov
mov
addr16
jle
daa
mov
push
pop
cmp
and
sbb
ss
pop
mov
and
dec
inc
mov
mov
adc
out
cmp
jg
sbb
xchg
mov
je
ljmp
jnp
int
daa
lret
lods
out
inc
adc
bound
xchg
cltd
xchg
icebp
outsl
mov
cmp
out
push
jg
mov
dec
pop
dec
xchg
inc
lahf
jnp
mov
pop
imul
mov
outsb
cmp
sbb
out
xor
jbe
arpl
mov
shr
fnstsw
int3
fldenv
data16
leave
mov
ret
pop
popa
lds
rolb
clc
aam
ja
sub
mov
imul
fsubrl
jb
xor
or
push
jno
lock
pop
popf
mov
cld
out
into
dec
cmp
pusha
lcall
and
test
aad
cmp
andb
lods
lcall
xor
adc
insb
pop
push
add
scas
add
dec
pop
pmuludq
loopne
cmp
dec
add
lahf
sbb
enter
rcl
fstpl
jno
lock
xchg
int
outsb
inc
aaa
or
sbb
push
adc
mov
mov
adc
pop
aaa
mov
rcr
mov
call
loope
pop
add
fldenv
add
rolb
mov
mov
adc
ret
out
mov
push
and
lea
ret
sub
call
test
or
lock
mov
data16
and
insb
gs
lret
aas
fwait
stos
pushf
stos
cltd
mov
iret
movsl
fwait
dec
pop
mov
and
stos
rolb
addr16
push
cltd
in
dec
fcomp
adc
loop
sbb
pusha
fisttps
clc
xchg
addr16
jle
pop
fimuls
cmpsl
je
add
std
push
in
and
fdiv
jnp
or
icebp
pop
ja
fidivs
add
mov
pusha
xor
imul
test
shrb
xor
ss
and
xchg
jne
lods
fcmovnbe
idivb
cs
dec
scas
pop
hlt
mov
outsb
jae
negb
pop
mov
jecxz
cmovo
inc
inc
xchg
pop
xchg
mov
pop
add
jmp
add
repnz
mov
stc
test
inc
movsb
dec
add
into
xchg
push
mov
cmpsb
and
sahf
mov
xchg
lea
sti
popa
xchg
sbb
sbb
jae
cmp
loopne
pop
jl
and
imul
push
xchg
cmpsb
push
dec
add
mov
mov
jmp
mov
lea
mov
fidivs
xchg
jg
sbb
mov
movsb
adc
add
mov
lods
fldt
inc
iret
cmp
outsl
sub
shrb
cli
js
rol
fwait
rcll
call
xor
fsubl
push
lahf
xchg
pop
push
mov
mov
ret
jle
bound
icebp
scas
cmp
mov
outsb
jecxz
test
mov
and
iret
or
out
mov
xchg
sbb
fdivr
mov
cwtl
mov
jnp
popf
sub
mov
xlat
or
and
inc
lret
xor
std
mov
sbb
xchg
cmp
popf
insl
jmp
cmp
jge
es
push
dec
add
mov
adc
mov
mov
mov
lods
bound
roll
mov
inc
fisubrs
in
pop
lock
jo
xchg
outsl
or
pop
lahf
adc
inc
push
in
mov
enter
popa
lret
adc
dec
ret
and
aas
mov
jns
mov
jmp
ja
or
in
push
das
xchg
pop
leave
sbb
addl
ljmp
inc
outsl
ljmp
add
std
jmp
or
xchg
scas
imul
incb
test
out
mov
xchg
frstor
mov
sub
in
mov
jp
not
faddl
jl
pusha
cltd
sahf
jo
nop
xchg
fisttps
cmc
loopne
push
das
mov
imul
xchg
mov
movsl
loopne
out
mov
sbb
pop
pop
push
cmp
ljmp
divl
mov
jge
xchg
xor
addr16
xchg
lret
lcall
jno
inc
xchg
and
aad
xor
push
aas
and
or
adc
pop
or
adc
orl
mov
jno
adc
mov
and
and
lea
xchg
xchg
ss
sub
jae
push
lds
out
test
add
pusha
xchg
mov
mov
or
mov
sub
add
loop
pop
shr
lods
xor
fwait
jecxz
jecxz
cld
and
bound
dec
pop
out
movb
scas
inc
shlb
movsl
lea
enter
fndisi(8087
push
sti
mov
pusha
and
jge
popf
jbe
bound
xor
sub
cmp
mov
inc
pop
and
shrl
dec
scas
kxorb
pop
mov
jno
xchg
bts
lret
mov
mov
outsb
push
jno
insl
xchg
cmp
faddp
mov
pop
lods
adc
enter
mov
and
xchg
add
pop
and
jne
mov
inc
adc
push
roll
xor
cmp
sbb
and
or
test
sub
mov
cltd
ret
dec
xor
dec
pop
int
insb
jae
cmp
clc
divb
push
jns
cli
mov
clc
jno,pt
repnz
repz
test
jmp
jge
sbb
push
outsb
add
add
push
cmpsl
outsl
divl
add
mov
out
fyl2xp1
mov
add
repnz
jp
fiadds
rcr
bound
add
xchg
icebp
stos
scas
xor
cld
dec
xchg
es
xchg
cmc
fstpl
aaa
icebp
outsb
mov
xchg
fldlg2
mov
adc
fs
lret
xchg
push
push
cltd
and
push
dec
repz
cwtl
lods
leave
and
out
ret
insb
cld
pop
call
xor
aam
add
xchg
gs
jp
aam
cmp
push
xchg
in
push
outsl
ljmp
and
fldenv
repz
adc
adc
jecxz
bound
fsts
pushl
je
jl
pop
test
jp
mov
pop
sub
xchg
mov
mov
adc
shll
adc
icebp
pop
inc
jbe
add
push
popa
add
sbb
loop
sbb
adc
popa
sti
add
into
loop
int
inc
mov
push
lds
stc
push
xlat
sti
js
hlt
xchg
test
in
inc
lock
out
js
pushf
loop
imul
xchg
ja
jle
dec
jno
movsl
lods
add
add
les
enter
adc
sub
push
icebp
rcl
andnps
movsl
sub
jmp
cwtl
out
fucomip
insl
add
push
mov
into
or
push
inc
xchg
xchg
sarl
push
dec
mov
aaa
mov
xchg
lock
pushf
stos
outsb
xor
leave
cmc
je
add
ret
adc
jns
andl
js
pushf
sbb
test
mov
mov
rclb
pop
adc
addr16
pop
mov
mov
popa
out
mov
jl
inc
inc
jno
jle
adc
dec
cli
mov
sub
jmp
pop
xor
movsl
ret
mov
sub
js
jge
fwait
les
xor
lea
stc
pop
xchg
jge
das
iret
jb
add
cmp
mov
mov
in
repz
and
inc
dec
jg
into
shll
xor
add
lock
adc
dec
popf
cmp
out
jns
inc
mov
inc
cli
xchg
das
fs
shll
xor
sub
dec
sub
fs
out
xchg
int3
sbb
cmc
inc
and
xchg
les
pop
ror
cltd
or
dec
fs
shlb
adc
orl
sbb
mov
xchg
xchg
movsl
adc
sub
add
pop
jae
push
mov
xchg
mov
das
push
cmc
dec
push
push
in
cld
add
rolb
les
add
dec
aas
jnp
sub
xrelease
push
mov
push
xchg
push
pop
and
cmpb
imul
fwait
nop
scas
and
shrl
mov
lea
imul
lods
shrl
je
pop
sub
out
push
addr16
dec
mov
xlat
mov
lods
loope
cmpsb
test
flds
sub
mov
int
mov
leave
ljmp
cmp
xor
push
out
icebp
loopne
loop
mov
addr16
fistps
fisttpl
pop
ret
pop
in
cmpsb
adc
jnp
pop
cmp
sbb
ss
jno
jge
mov
or
out
sbb
neg
arpl
or
add
jp
call
jo
test
nop
push
out
nop
stc
xor
push
jns
ffreep
xchg
or
and
loope
mov
mov
push
cmpl
fstpl
xorl
inc
lea
or
ljmp
pushf
es
lret
jns
enter
gs
push
fxch
mov
out
shr
push
jmp
sub
push
mov
mov
xlat
sbb
ss
lret
insb
pop
pop
jmp
dec
jne
mov
mov
xchg
dec
adc
cwtl
jo
mov
cmc
jmp
shlb
pop
lock
mov
xchg
sahf
xlat
pop
inc
test
inc
lret
scas
sbb
iret
add
cli
aaa
std
lods
mov
or
pop
stos
neg
cmp
cmpsl
imul
push
pop
mov
mov
nop
mov
ret
pusha
or
or
lahf
mov
jg
or
jmp
xor
lods
sbb
add
inc
loop
mov
loope
pushf
rcl
call
xchg
int3
pop
fwait
push
or
mov
gs
mov
lods
movsb
inc
push
lods
jb
mulps
jge
shl
xor
push
cld
inc
out
push
adc
inc
sbb
push
aad
ds
test
dec
lcall
mov
cli
jmp
shrl
je
jne
lcall
add
lock
mov
lods
mov
jne
sahf
cmp
jmp
les
rcll
ret
xlat
pop
pop
sti
loopne
sbb
repz
outsb
pop
xor
jne
not
adc
into
push
rorl
xor
in
adc
adc
mov
add
mov
into
daa
divb
push
aad
ja
jbe
xchg
cld
fnstenv
xchg
dec
dec
sub
mov
mov
cmpsb
jo
orl
mov
cld
add
push
jecxz
daa
leave
mov
fistps
aad
lds
pop
mov
cli
add
in
repnz
out
cmpsl
add
cmpsb
jne
insb
mov
or
and
movsl
in
pop
cli
popa
mov
lcall
mov
or
cltd
pusha
mov
ret
and
pop
ret
jecxz
roll
test
sbb
jae
dec
cmp
add
and
xor
mov
test
int3
xchg
sub
mov
call
inc
dec
loope
xor
push
pop
hlt
mov
dec
xchg
mov
lahf
adc
ret
repnz
jne
shrl
ljmp
pusha
fstps
jg
hlt
mov
insb
inc
and
inc
dec
pop
mov
sbb
scas
mov
adc
sbb
xorb
add
mov
and
sbb
aam
call
adc
inc
test
pop
dec
jne
movsl
cmp
in
push
sbb
pop
icebp
jmp
cld
jne
cmpsl
fisubrs
add
xchg
xchg
inc
xor
fwait
pop
push
lods
ljmp
dec
mov
fstp
cmpsb
popf
cmp
std
dec
cmpsl
or
jl
mov
sbb
dec
push
incb
fnstsw
mov
test
arpl
cld
rcl
loop
push
sub
dec
adc
lods
pop
sahf
sahf
fbstp
gs
imulb
jae
jnp
hlt
jl
pop
stos
or
enter
shrl
rcrl
mov
insb
xchg
imul
lahf
cwtl
popa
sub
or
in
mov
sub
aad
fnstcw
jae
pop
inc
mov
rcrl
ljmp
xor
outsb
xor
std
test
xchg
mov
mov
xchg
jg
xorb
sub
adc
xor
shrl
dec
daa
mov
repnz
clc
xchg
jbe
cli
and
pop
jp
es
sbb
in
retw
je
xchg
imul
xchg
and
mov
mov
mov
icebp
jg
popf
add
fldt
stos
aad
jns
jae
mov
addr16
sbb
adc
xor
enter
shl
ret
arpl
dec
adc
lret
push
push
inc
in
in
adc
sub
pushf
sub
fbld
inc
sub
mov
scas
sti
push
xchg
in
xchg
add
pop
push
dec
sbb
adc
dec
mov
aam
mov
xor
ss
sub
add
sbb
jle
pop
mov
jns
in
mov
jbe
lret
jl
mov
jp
xor
cmpsl
cmp
scas
xchg
mov
jl
inc
in
movsb
dec
pop
inc
out
fiaddl
movsl
out
mov
dec
sbb
dec
mov
adcb
jbe
inc
int3
lods
test
mov
imul
das
cmp
lods
adc
mov
jnp
popf
bound
mov
push
xor
in
or
test
push
clc
cmp
std
push
not
pop
les
cld
jno
daa
xchg
lret
dec
push
scas
jmp
mov
aas
xor
adc
sahf
icebp
mull
ja
test
dec
sub
loopne
push
sub
jle
or
mov
cld
outsl
in
jo
and
adc
jmp
scas
sbb
out
sbb
xor
add
adc
cmp
jmp
out
mov
add
cli
icebp
xor
ljmp
shll
in
into
add
out
aas
push
jp
push
cmp
jno
mov
stc
or
mov
popf
push
adc
loopne
daa
loop
loope
inc
xchg
xchg
mov
stos
pop
cmp
sbb
into
sbb
outsl
repz
repnz
cmp
push
jmp
stos
push
pushf
pop
push
push
inc
add
dec
inc
flds
or
adc
flds
cmp
pop
push
mov
andb
add
sub
add
inc
shlb
pop
lret
fmul
adcb
inc
test
popa
shlb
lods
sbb
mov
xchg
sub
sbb
xchg
dec
xchg
jecxz
sbb
lods
xlat
cwtl
rorl
sub
and
jge
movsl
test
add
pop
mov
fs
sbb
jns
aaa
arpl
mov
jno
mov
lcall
and
out
scas
sbb
shlb
pop
out
outsb
movsb
xchg
insb
sub
lods
je
call
push
jge
cwtl
push
repz
sbb
dec
stos
sbbb
sub
add
push
or
xor
mov
pop
jno
stos
mov
mov
push
je
jbe
icebp
loop
insb
cmpb
xor
pushw
sbb
pop
jmp
xor
xlat
andb
inc
in
or
and
cltd
mov
pop
add
adc
cmp
fldl
xchg
fdivrl
and
jns
or
lahf
ret
cmp
enter
xor
cmp
das
cld
cmpsl
fdivrl
sub
mov
xchg
popa
fstpl
ret
mov
fdivs
outsb
and
xor
scas
xor
mov
sbb
mov
inc
test
and
lea
in
std
shll
loope
aad
mov
loop
fdivl
jb
mov
cmp
push
in
icebp
fistpll
les
imul
daa
sub
push
push
or
ftst
and
cmpsl
test
sti
cmp
pop
mov
pusha
pop
or
cmp
xlat
cmp
repz
pop
inc
ss
pop
mov
jg
pop
cld
ret
addr16
cld
pop
sbb
in
sbbl
adc
mov
and
stos
cmp
aam
mov
xchg
xor
shll
fnsave
mov
mov
adc
repz
cmp
mov
sub
fstps
or
sbb
lahf
lret
and
hlt
cmpsb
xchg
or
orb
sub
sub
outsl
cmpsl
jmp
pop
inc
xor
loopne
loop
push
jecxz
enter
cmp
and
or
mov
leave
iret
outsl
xor
lods
je
xor
dec
adc
in
jge
or
dec
lea
xor
fmul
xchg
inc
jbe
lret
xchg
mov
rorb
inc
adc
lds
addl
scas
or
loope
das
and
lods
jo
sbb
mov
mov
jno
mov
sbb
popf
cltd
lds
andb
xor
clc
xchg
outsl
scas
adc
cmp
push
cmpsb
or
or
fsub
ss
jg
add
into
js
xor
roll
into
add
mov
fwait
std
sbb
xchg
not
mov
test
sub
jl
mov
pop
jmp
dec
jbe
cmp
jl
incl
push
push
int
test
int
and
inc
pop
dec
loop
dec
test
jnp
xchg
cmp
mov
stos
mov
jl
adc
or
fcomps
mull
push
jo
jbe
xchg
adc
sbb
data16
shll
pop
pushw
out
aam
mov
repnz
jle
fisubrs
fidivs
imul
test
or
inc
mov
cmp
jb
arpl
bound
sub
push
movsb
xchg
jne
mov
leave
frstor
pop
dec
scas
js
cmp
fildll
xchg
xchg
mov
adc
adc
pop
aaa
rcrb
mov
dec
pop
lcall
and
sbb
sbb
or
jg
shll
lds
xorb
mov
sbb
out
inc
sarb
mov
test
pop
and
push
mov
or
jns
imul
xchg
sti
int
push
mov
jp
icebp
loop
cmp
mov
sbb
mov
lea
sub
popf
mov
adc
or
dec
jne
cmovae
arpl
daa
aas
or
cmp
scas
aam
lods
mov
ss
outsl
and
pop
mov
and
popl
mov
jnp
xchg
hlt
call
jp
fstpt
mov
enter
jmp
mov
add
jmp
and
lahf
lcall
outsb
adc
mov
fisubl
push
mov
sub
push
movsl
push
sar
imul
std
subb
shrl
inc
cld
mov
loop
loope
push
sub
push
cmp
xchg
movsb
pop
mov
xchg
repnz
add
rcll
fistpl
in
fwait
std
sbb
testb
xchg
pop
and
jp
xor
add
xor
jns
std
rcr
xor
dec
push
imul
mov
sub
aad
cmp
int3
lahf
leave
repnz
mov
je
mov
mov
cmp
ds
lahf
loope
push
je
xor
icebp
mov
xchg
xor
or
hlt
je
xchg
popa
loopne
mov
xor
push
push
xor
and
jle
jle
mov
sahf
mov
pop
icebp
xchg
fidivrl
bound
mov
inc
sbb
inc
push
xchg
xchg
ljmp
fsubs
fldt
fs
ret
inc
sbb
test
jb
fidivs
movsl
push
inc
mov
ljmp
mov
in
cmpsl
data16
xchg
pop
jecxz
pop
sub
flds
ret
mov
jp
jbe
nop
mov
out
mov
dec
mov
test
movsl
add
dec
xchg
xor
stos
jle
fucomp
ret
cld
outsb
pop
ljmp
xchg
xacquire
inc
data16
and
popf
rcrl
jns
mov
faddl
lcall
cld
adc
push
daa
movsb
mov
push
mov
lcall
cwtl
scas
cmp
and
test
adc
pop
negl
add
fwait
mov
test
pushw
cs
xchg
xlat
dec
gs
or
mov
mov
orb
arpl
dec
or
jbe
cmp
and
sub
into
out
mov
hlt
cwtl
fs
ss
jae
neg
xor
out
mov
std
test
aad
and
dec
mov
pusha
mov
shll
adc
leave
cbtw
mov
mov
push
popf
std
mov
and
jge
jb
pop
sbb
lcall
test
hlt
push
in
and
aad
inc
sbb
inc
bound
mov
in
mov
sub
test
insl
and
test
and
cmp
pop
inc
pop
push
push
xchg
cmpl
adc
pop
add
jmp
push
or
es
inc
push
pusha
lret
inc
mov
fs
inc
std
ror
sub
mov
jmp
inc
int3
mov
and
cmp
cmp
push
mov
adcl
in
sbb
lret
jl
ds
ficompl
stos
sbb
cs
cmpsb
gs
scas
adc
cmp
outsl
imul
cmp
add
jmp
mov
ljmp
xor
lcall
and
sub
outsb
cmp
mov
jle
test
movsl
cli
fs
rolb
into
xor
mov
mov
mov
sbb
imul
mov
lret
addb
inc
repz
mov
xchg
jns
daa
repz
pop
mov
adc
ret
cli
fldl
fdivr
rcl
jno
pop
icebp
iret
xchg
mov
das
jbe
and
push
aas
push
icebp
inc
fmull
out
pop
ja
mov
cmp
cmpsb
pop
mov
stc
cmpsb
push
addr16
negl
mov
mov
rcl
icebp
ret
mov
and
aaa
shlb
adc
fnstenv
and
mov
mov
cmc
cmp
cmpsb
andb
jno
xchg
adc
loope
mov
stc
movsl
mov
pusha
pop
aaa
shrl
push
mov
daa
test
push
outsl
inc
pop
outsl
or
into
int
xorl
icebp
xor
nop
movsb
stc
sub
sbbl
xlat
notl
or
inc
mov
andl
fldt
orl
inc
divl
dec
mov
pop
test
pusha
gs
push
pop
arpl
or
sti
sarl
out
jecxz
loop
mov
das
int3
lret
shll
mov
cld
mov
insl
dec
add
andl
std
sbb
lahf
sarb
test
jl
mov
and
sahf
add
scas
xchg
mov
les
imul
mov
aas
test
cwtl
adc
mov
push
int3
sub
xchg
sub
inc
test
pop
and
aad
mov
sub
shr
data16
xor
daa
subb
push
rcl
jmp
sub
or
ja
adc
bound
xor
sbb
cmp
or
test
cs
xlat
dec
jb
ret
leave
lock
dec
cmp
ret
add
pop
sbb
lcall
sub
cmpsb
shlb
mov
pop
pop
add
aad
aas
xchg
adc
roll
bound
xchg
or
inc
enter
std
and
stc
in
inc
in
dec
mov
dec
dec
xor
xlat
or
push
sub
loopne
and
jb
and
jbe
mov
push
mov
or
int3
out
fistpll
xchg
adc
and
and
push
mov
jg
xchg
xchg
jecxz
push
addr16
xchg
inc
add
pop
inc
adc
test
sarl
xor
push
push
iret
lcall
in
lock
mov
dec
mov
xchg
cmpsb
fadd
inc
out
pop
jne
jno
pop
out
add
fstpl
mov
enter
inc
mov
jno
add
inc
xlat
mov
sbb
stc
inc
data16
test
mov
icebp
jb
sbb
fcmovnbe
and
test
out
das
int
mov
xlat
mov
mov
mov
mov
sbb
std
dec
aam
enter
dec
xorb
cli
test
icebp
lcall
jl
cltd
sbb
in
xchg
pop
shll
je
pop
imul
lds
or
jb
and
dec
das
add
aad
test
in
addl
or
addl
xchg
hlt
iret
inc
loop
jecxz
mov
jp
shll
stos
jae
jno
fxch
inc
xlat
push
cmc
cli
sub
dec
sbb
scas
rcrl
cli
dec
lds
dec
mov
les
jae
dec
inc
loop
jecxz
push
add
mov
imul
fistl
or
sbb
sub
arpl
dec
push
rcr
dec
push
adc
sti
xchg
outsb
ret
push
and
xor
push
xchg
daa
std
pop
icebp
cltd
pop
mov
aam
sub
lods
shl
add
shrb
leave
sbb
adc
inc
xadd
ret
xor
xchg
or
sub
xor
mov
xor
add
into
imul
sbb
ror
pop
dec
push
or
aaa
test
mov
mov
push
popa
aaa
cmp
push
jne
outsl
inc
dec
xchg
or
xlat
aas
mov
mov
repnz
gs
and
xchg
fsubrs
das
ljmp
jmp
jmp
add
je
jecxz
aad
fdivrl
daa
push
xchg
push
ds
push
int
dec
pop
sbb
push
mov
cwtl
xchg
out
repz
or
out
inc
cld
cmp
and
mov
jmp
and
lods
iret
cmpsb
and
fucomip
xchg
out
push
subl
dec
inc
fstps
xchg
add
xchg
in
mov
dec
daa
imul
mov
aad
push
inc
sbb
mov
das
lds
or
push
xchg
cmp
out
ljmp
adc
lds
pop
push
push
and
test
cmp
or
pop
lods
xchg
or
shlb
jns
mov
mov
ljmp
adc
pop
add
test
inc
jnp
sbb
stos
or
xchg
neg
mov
mov
adc
mov
fistpll
mov
add
add
stc
lock
jno
loop
mov
popa
sub
loop
pop
incb
popf
sub
inc
fwait
pop
sbb
or
clc
xchg
fs
add
test
and
and
push
add
shlb
fs
in
imul
shrl
loopne
mov
inc
popa
outsb
xor
sti
adc
xchg
xchg
or
loop
cmpb
xlat
mov
clc
cmp
and
push
std
ret
hlt
push
push
adc
mov
inc
jbe
mov
js
pop
gs
test
xchg
mov
repz
dec
pop
jb
jae
fwait
or
jbe
rorl
test
aas
out
push
cs
and
clc
daa
sub
xor
les
notl
les
test
test
test
jno
out
push
push
scas
jge
dec
rclb
dec
lret
sbb
fnstenv
dec
repz
cmp
mov
push
mov
jecxz
loop
mov
adc
sub
in
lds
mov
les
mov
sahf
push
mov
jle
dec
sub
xchg
push
divb
push
inc
data16
add
sub
aas
sbb
mov
mov
add
aaa
adc
push
imul
inc
loope
iret
daa
addr16
mov
insb
cmp
xor
loopne
ret
jl
jge
mov
outsl
xchg
push
pop
jmp
and
mov
or
outsb
dec
jmp
or
sbb
jp
repz
mov
sub
and
ds
mov
add
cmc
mov
cs
scas
shlb
fnstsw
fcoml
ret
adc
lock
or
dec
lret
jge
cltd
mov
icebp
imul
xchg
cmp
mov
mov
test
pop
cli
mov
mov
xchg
in
in
je
ror
outsl
lret
out
mov
and
shrl
loope
data16
xchg
xchg
cli
xchg
push
insl
cmpsl
xor
mov
xchg
jb
lods
cli
int3
add
jb
daa
mov
cmpsb
mov
sahf
sbb
je
out
in
push
jecxz
sub
fstp
push
adc
or
cmp
loopne
cwtl
aam
xchg
jg
ss
outsb
cltd
and
jecxz
pop
movb
ljmp
leave
inc
sbb
inc
push
sbb
lds
inc
dec
mov
add
mov
inc
push
adc
push
lahf
ror
or
push
lock
ror
aad
xor
stos
testl
and
out
enter
cmc
imul
mov
mov
repz
lret
lret
pop
push
xor
cmp
es
ss
ljmp
sti
xchg
mov
or
push
sti
inc
xlat
sub
push
call
fnstsw
sahf
push
gs
fcomi
aad
lods
cmp
add
push
sub
outsl
cmp
scas
lret
pop
push
adc
push
insb
pop
icebp
fs
insb
adc
movsb
sub
int
push
jbe
mov
jno
xchg
data16
push
adc
aaa
sti
pop
and
lret
jns
insb
dec
adc
mov
pop
nop
mov
inc
lods
and
sub
movsl
jmp
mov
mov
jmp
add
cltd
test
jmp
loope
cmpsl
outsl
popf
les
cmp
and
rcl
mov
leave
adcb
rclb
scas
cmp
je
adc
imul
inc
sbb
int
je
lahf
xor
inc
dec
lcall
xchg
cmpsl
push
pop
lea
rclb
xchg
jns
std
mov
mov
jb
sub
push
out
pop
dec
loop
cwtl
shlb
mov
or
lahf
cld
cltd
jno
pop
pusha
movsb
push
and
adc
pop
sub
rcrb
adc
dec
pop
cmp
dec
mov
jmp
es
faddl
movsb
sub
push
andb
lahf
cltd
lret
or
xchg
out
nop
in
push
push
mov
je
dec
jne
pusha
in
mov
and
sub
push
jbe
xor
loopne
in
jge
or
mov
pop
fnstenv
inc
or
iret
mov
push
pop
ss
mov
mov
xchg
lret
aam
dec
pop
inc
dec
xchg
xchg
cmp
xor
push
and
pushl
or
mov
aaa
repnz
in
fwait
outsb
dec
shll
xchg
test
clc
mov
mov
out
push
orb
js
out
aad
in
adc
into
add
mov
dec
xchg
xor
push
daa
sub
dec
mov
popf
test
lahf
loop
das
push
lods
mov
shrb
jae
mov
adc
rclb
pop
jecxz
xchg
test
dec
push
sahf
xor
repz
jbe
outsb
ret
fstpt
lret
jo
mov
cmpsb
int3
ss
sbb
mov
inc
and
jno
sbb
or
dec
xchg
clc
xchg
ds
mov
sub
lods
fs
dec
sub
enter
dec
inc
sub
mov
mov
popa
outsb
or
xchg
fbstp
iret
sqrtps
lret
and
jmp
call
lret
push
stos
jae
std
or
lret
outsl
sbb
clc
jno
scas
insb
fisttpl
pop
push
dec
imul
sub
scas
into
aam
loopne
pop
aam
lods
jge
or
inc
outsb
dec
in
hlt
dec
fildll
popa
sbb
dec
sahf
sti
rcrb
in
sbb
lret
test
out
sbb
xchg
repnz
jmp
jae
testl
add
repnz
popf
mov
sub
aad
fcomps
adc
sbb
data16
mov
push
push
loopne
or
jbe
jo
push
mov
pop
int3
and
inc
mov
mov
aaa
cli
jb
and
int3
in
sbb
cmp
sti
iret
xor
std
sub
mov
mov
test
xchg
mov
mov
mov
aas
stc
push
leave
loope
sahf
mov
imul
cwtl
jae
je
pop
push
fmull
leave
sub
inc
pop
ds
pop
orl
iret
sbb
or
shrl
adcl
test
bound
es
repnz
dec
in
lahf
push
cmp
aam
fisttpl
repz
inc
out
and
push
icebp
nop
test
mov
scas
and
adc
xchg
sub
cmc
jge
or
dec
andl
mov
ja
mov
out
add
cmp
cmc
jnp
in
mov
push
xchg
rolb
out
cltd
adc
aad
mov
or
and
jae
and
je
nop
das
sub
xlat
or
repnz
mov
lret
aam
inc
pop
fstpl
jle
test
cwtl
jmp
push
scas
xor
shrb
into
mov
sbb
mov
mov
push
bound
xor
xor
push
daa
lods
xchg
or
add
outsl
in
push
adc
adc
xor
iret
mov
inc
insb
dec
cmp
shlb
js
xor
in
xor
leave
push
fs
in
test
or
shrb
sti
cwtl
mov
push
ss
dec
test
fsubrl
xor
mov
arpl
or
sub
push
mov
nop
push
pop
shrl
and
mov
int
sbb
cmp
pop
jae
iret
sub
xchg
insb
add
push
fimuls
rcll
hlt
imul
movsb
popf
stos
mov
iret
loope
cli
stos
pushf
mov
cs
pop
rorl
mov
incl
and
pop
cmp
xchg
movsl
loop
xor
ret
jno
loope
pop
in
cmpsb
cwtl
popf
test
stos
int
pop
add
je
call
cltd
ss
shll
dec
pop
orl
mov
add
jae
mov
jmp
sti
aas
in
les
xorb
mov
mov
xchg
ljmp
lods
mov
mov
lcall
xchg
jmp
ljmp
aaa
cmp
xchg
or
pop
repz
inc
movsl
xchg
pop
test
out
inc
mov
idiv
icebp
adc
and
filds
sahf
xchg
lea
cmpsb
lds
je
mov
push
movsb
fistl
dec
jle
fistps
sbb
in
cltd
movsl
popa
sub
cmp
and
inc
imul
xchg
popa
sub
inc
js
ret
lock
inc
xchg
and
faddl
sbb
mov
mov
push
test
mov
fmull
cmp
and
in
popf
insb
inc
cmp
xchg
pop
mov
ficoms
sub
inc
adc
lcall
xor
enter
push
repz
dec
fistl
jge
push
xor
mov
nop
clc
or
and
jo
adc
and
lds
xchg
or
in
add
add
cli
sub
cmpsb
xlat
or
adc
ds
mov
and
dec
inc
jecxz
leave
call
jecxz
rclb
enter
cmpsl
or
adc
and
and
add
cmpsb
mov
add
mov
sbb
stos
andl
jo
pop
adc
xor
sbb
aam
cmp
mov
xorb
jl
dec
aad
jmp
push
add
aaa
or
shrl
fbstp
movsl
and
popf
sahf
and
sbb
int3
hlt
xchg
pop
add
shrb
lahf
cmp
add
lods
or
inc
adc
mov
sub
iret
mov
insb
daa
lcall
sbb
add
std
dec
push
xchg
push
mov
mov
jo
cs
dec
mov
in
mov
ja
add
xor
cmp
imul
xchg
xor
ja
add
leave
sub
push
shl
dec
ds
jo
mov
imul
add
hlt
mov
sbb
leave
pop
inc
add
mov
push
inc
add
add
add
jne
dec
ja
je
mov
loopne
aad
ja
or
icebp
push
inc
hlt
push
in
ret
jo
xchg
ret
cmpb
sub
jns
bound
icebp
mov
orb
mov
test
lret
push
adc
hlt
sahf
mov
aas
sub
popa
addb
loop
imul
xor
xchg
icebp
push
movl
mov
lret
push
jge
mov
shr
xor
mov
addl
imul
push
pop
loopne
mov
pop
mov
out
sti
xchg
in
inc
out
jg
xor
loope
cmp
and
outsl
pushf
xor
sub
push
pop
sbb
stos
sub
mov
lahf
inc
inc
insb
jne
aas
and
insb
in
fildl
lret
dec
mov
dec
xchg
add
or
xchg
dec
outsl
xlat
addb
outsl
cmp
movsl
pop
out
dec
imul
cs
test
out
sub
mov
pushf
pop
pop
inc
rcrl
sti
stc
sti
in
orl
jae
fistpl
mov
out
and
and
xchg
push
mov
mov
mov
iret
iret
push
mov
hlt
add
sbb
out
pusha
dec
clc
push
xlat
movsb
lahf
cld
fs
clc
adc
mov
imul
pop
xchg
mov
adcb
fcoms
in
or
cmc
aas
cmp
iret
arpl
loopne
andl
movl
iret
inc
sub
push
adc
pop
push
jmp
push
xor
and
mov
lret
xchg
arpl
pop
sub
jge
cmp
testl
jb
int3
repz
outsb
adc
sbb
or
pop
or
ret
xlat
xchg
cs
daa
ja
dec
cmpsl
ficompl
mov
int3
sub
andl
sti
rol
dec
mov
mov
inc
lret
daa
sahf
or
inc
mov
xor
dec
mov
xlat
cmc
add
enter
stos
sub
into
enter
adc
movsb
xor
mov
mov
jmp
sbb
repnz
sub
sbb
add
dec
leave
and
xor
btr
mov
movsb
sarl
imul
pop
xchg
imul
repnz
daa
inc
mov
mov
ja
or
scas
scas
scas
mov
rcrl
aas
push
xor
clc
arpl
mov
jl
ror
in
aas
pop
jle
push
jno
dec
sti
push
clc
sub
mov
push
mov
ret
cmc
call
imul
shrl
pop
rolb
xchg
xor
lret
into
ret
push
pop
push
idivl
aam
shll
dec
inc
xchg
dec
pop
sti
jno
insb
mov
sub
popf
cld
pop
adc
syscall
sub
flds
or
mov
add
adc
lods
sti
inc
sub
pop
push
hlt
cltd
push
pushf
stos
and
aaa
stos
fldt
in
fidivrs
icebp
stc
imul
andb
jae
mov
mov
mov
jb
call
pop
push
stos
sarl
cs
cmc
jno
mov
push
pop
push
cmp
popf
cld
add
fwait
add
in
ja
mov
jnp
ja
arpl
xchg
pop
fisubs
loop
sub
dec
sbb
push
push
aas
sub
shll
loop
inc
loop
xor
fadd
xchg
gs
aaa
push
mov
mov
das
dec
add
cmp
sar
adc
mov
xor
cmp
push
push
movsl
jae
fnstsw
sahf
pop
dec
das
push
adcb
mov
dec
nop
dec
icebp
mov
mov
cld
jge
pop
stos
pop
cmp
inc
sti
mov
mov
cltd
mov
add
mulb
stos
out
dec
dec
lahf
addr16
out
push
or
inc
push
repz
push
mov
jae
pop
les
add
in
cmc
or
pop
sbb
jg
xor
sub
call
or
inc
xor
into
add
push
add
les
flds
insb
sbb
fstp
push
prefetch
pop
jge
pushf
rcr
fucomp
lahf
addr16
xor
insb
dec
and
daa
aas
mov
push
es
cli
in
push
cmp
sarl
sub
add
stos
inc
leave
mov
dec
pop
movsb
sub
imul
push
popf
sbb
inc
rolb
jmp
test
fadd
or
lock
daa
hlt
cmp
pop
mov
ret
mov
sbbl
or
jmp
add
jmp
cmpsb
int
outsl
or
or
and
mov
dec
nop
out
or
jne
fsubr
mov
repnz
ffreep
mov
divb
inc
xchg
cwtl
xor
fcmovne
xchg
in
hlt
test
repz
push
insb
fcmovnbe
add
aaa
loope
dec
jecxz
mov
arpl
aas
jb
sub
in
and
mov
fldt
mov
popa
orl
sbb
jae
dec
xchg
mov
rcrb
mov
movsb
sub
int
push
dec
aam
test
dec
pushf
mov
sahf
adc
and
sbb
add
push
stos
sub
mov
sbb
addr16
add
mov
movsl
sub
repnz
dec
ret
repnz
lock
lods
mov
sahf
cmp
clc
out
jg
lret
pop
pmullw
cmc
aaa
insb
and
mov
xchg
xor
mov
or
fstp
outsb
test
inc
jo
sub
push
das
fdivs
int3
fsubrs
dec
jg
xchg
mov
cmc
xlat
or
push
outsl
sahf
add
dec
repnz
lahf
inc
in
sub
mul
pop
pop
lock
inc
test
test
enter
mov
jae
pop
jp
push
pop
mov
jns
adc
xchg
test
es
sub
xchg
inc
mov
sub
aaa
push
jbe
mov
aaa
jl
enter
or
inc
push
mov
rorb
rclb
dec
sbb
mov
iret
mov
mov
lock
sahf
mov
nop
in
mov
sub
adc
mov
jnp
pop
pop
decl
daa
or
aad
mov
pop
icebp
sub
and
lret
cmpl
cltd
pop
pop
xchg
test
ret
pop
xchg
test
sbb
jle
push
sbb
dec
add
pop
fstps
int
mov
into
test
jne
pop
xor
cmp
push
lods
icebp
mov
push
imul
enter
bound
and
sub
out
imul
testb
cmpsb
lock
scas
push
dec
rorl
outsl
cmp
xchg
imul
jle
ficompl
lcall
test
add
cs
or
push
cwtl
daa
push
test
sarb
pop
xchg
dec
sbb
push
cmp
addb
pop
imul
jmp
mov
xor
movsb
xchg
cmc
xchg
mov
icebp
sbb
incl
jmp
out
cwtl
pushf
jl
mov
pop
repz
mov
gs
orb
mov
imul
inc
or
ja
lock
test
fists
mov
mov
jnp
stos
push
xlat
addl
push
imul
push
xor
inc
sub
nop
int3
or
imul
dec
cmc
loopne
fs
inc
das
mov
outsl
mov
test
inc
mov
push
rol
repz
sbb
mov
vpsubsb
imul
and
bound
sub
out
sbb
cld
mov
jle
mov
fsubrl
jbe
xchg
or
stos
mov
inc
or
or
pop
cmp
cmp
sub
pop
or
std
xchg
and
js
es
dec
and
enter
xor
push
sub
decl
mov
lahf
xlat
stos
pop
push
mov
shll
lret
je
or
je
adcl
cmp
repz
js
lea
pop
xchg
mov
daa
dec
cmp
mov
jae
push
jg
or
lods
fs
and
fcomps
gs
jle
inc
cmp
loopne
in
cmp
pusha
loopne
std
cmc
cmpl
lcall
cli
sbb
push
adc
and
adc
jne
lret
fisttpll
xor
dec
jnp
pop
xlat
pop
mov
pop
mov
pusha
adc
fsubrp
nopl
fwait
out
in
dec
push
mov
enter
mov
fistl
mov
into
or
daa
shl
xchg
add
mov
mov
xor
pop
pop
or
ljmp
inc
push
js
popa
pop
jmp
sbb
mov
mov
push
stos
iret
imul
mov
pop
mov
cmpsl
decb
cld
xchg
outsb
ja
push
les
jecxz
shrb
lret
jo
push
outsl
and
or
cmp
inc
adc
shll
aad
leave
ljmp
adc
mov
fiaddl
jecxz
dec
cmp
xor
jmp
mov
out
add
or
sti
daa
mov
add
xor
mov
arpl
jecxz
or
mov
or
bound
push
test
js
imul
ficoms
scas
dec
int3
cmp
jp
jp
rclb
dec
fwait
lret
out
popf
sbb
rcl
cs
imul
imul
mov
lods
jae
fdivs
jp
jnp
outsb
ja
jle
in
sub
aam
popa
cmp
jg
loopne
sbb
and
into
ss
stc
and
and
xlat
dec
enter
dec
fisttps
cld
and
shrl
fdivl
out
dec
repnz
ret
repnz
mov
jbe
shrb
stos
aad
loope
dec
cmc
in
push
adc
adc
test
add
sbb
shlb
xchg
imul
push
adc
inc
loope
jnp
pop
mov
outsb
enter
jne
fs
nop
sbb
mov
push
lods
xchg
cmpsb
mov
cld
push
mov
mov
movsb
int3
std
mov
mov
shl
loope
test
and
scas
mov
shll
dec
push
sub
xor
sbb
pop
pop
xorb
xor
push
addr16
int
cmpsb
insl
inc
push
pop
dec
add
fnstenv
fisttpl
fsubrp
je
mov
das
xor
pop
sub
aaa
in
mov
ja
push
je
inc
sub
mov
or
into
je
dec
insb
dec
and
xlat
mov
push
sbb
or
mov
push
inc
jl,pt
ds
xor
std
cwtl
jno
lahf
sub
std
movsl
mov
mov
or
mov
and
adc
jecxz
data16
mov
push
clc
adc
mov
cmpsl
popf
pusha
sub
jo
and
xor
xchg
push
les
add
ss
adc
dec
filds
das
imul
daa
call
mov
sbb
outsl
mov
mov
pushf
test
pop
and
ljmp
xor
cmp
leave
jns
ljmp
xchg
div
mov
push
mov
and
xchg
aas
mov
jbe
or
mov
sahf
out
cmpsb
je
cmp
jecxz
cmc
nop
or
lret
mov
test
dec
or
xchg
out
push
jge
in
lret
jns
outsb
cmp
and
clc
aas
jo
repnz
or
add
cli
daa
orl
pusha
mulb
movsl
adc
mov
jle
popa
clc
lock
fimull
in
js
movsl
lods
mov
xor
mov
nop
fnstenv
xor
cld
adc
movsb
pop
dec
jg
add
pop
test
mov
xchg
push
je
adc
adc
cld
fidivrl
sti
pushf
out
dec
pop
nop
adc
push
add
inc
arpl
adc
arpl
push
cld
mov
push
outsl
inc
imul
push
sub
fs
cmc
adc
pusha
mov
xchg
add
xchg
jp
pop
xor
cwtl
std
push
into
mov
and
ss
out
push
push
and
pushf
cmpsl
lds
out
pop
dec
imul
inc
mov
mov
in
sub
sub
in
ret
sbb
scas
mov
pop
mov
dec
clc
mov
ds
sub
ret
iret
scas
sub
insl
xor
cmp
pop
rorb
push
pop
dec
sbb
arpl
fcmovb
ja
js
mov
shll
sub
daa
pop
subps
and
push
lcall
dec
sbb
mov
pop
cs
aam
es
icebp
dec
and
dec
insb
pushf
mov
sbb
xlat
repnz
adc
or
fisubrs
jns
sub
inc
stos
jg
sbb
jge
les
popl
cmc
das
enter
cmp
stos
clc
push
mov
in
push
fnsave
mov
pusha
scas
pop
idivb
add
dec
loop
rclb
adc
xchg
dec
fmull
cmpl
pop
push
sbb
or
scas
js
or
adc
and
je
stos
popa
loopw
filds
in
popa
test
xor
scas
shll
cmp
lods
imul
scas
jno
xor
sbb
mov
xor
and
inc
and
insb
mov
icebp
sahf
incb
ljmp
pop
and
test
in
mov
stos
mov
arpl
cmpsb
sbb
test
dec
cmp
out
jne
adc
repz
cmp
test
or
icebp
stc
loopne
sbbl
mov
and
repz
movsb
cli
mov
lds
cmpsb
mov
imul
incb
lcall
jmp
mov
mov
xor
jnp
mov
add
push
imul
dec
out
pop
push
jnp
and
in
ror
or
mov
ret
ja
push
adc
mov
inc
nop
and
adc
aam
cli
or
das
loop
xor
and
mov
rcl
and
cli
xor
lret
ja
adc
std
xchg
test
fistl
mov
inc
inc
jo
add
stos
cmpsl
xor
xchg
bound
jl
sbb
jnp
int
push
xor
decl
jmp
dec
addr16
and
test
sti
loope
xchg
out
int
and
or
rclb
cld
jae
lea
hlt
stc
outsb
loop
ljmp
mov
mov
inc
sbb
test
fnstcw
ja
iret
movsl
and
int3
cmpsl
pop
scas
xlat
out
shr
xor
jo
jns
cltd
into
push
inc
scas
rorl
pop
jnp
fidivrl
test
inc
test
mov
data16
push
jne
addr16
aad
mov
adc
das
inc
fs
int3
pop
jbe
fstps
cwtl
sbb
sub
lahf
fwait
test
shrb
push
adc
lea
pop
push
jae
jg
ds
mov
mov
loope
int3
pushf
addr16
mov
jge
xchg
loope
jg
adc
test
mov
hlt
cmp
mov
and
ljmp
mov
mov
and
lret
jecxz
loope
movaps
lock
dec
ljmp
cld
int3
repnz
and
daa
repz
sub
inc
stos
insb
test
push
push
and
call
out
xchg
lods
lret
jns
jg
jle
mov
fs
pushl
in
imul
jae
jecxz
popa
mulb
sbb
inc
fcomp
push
or
hlt
lahf
in
stos
push
xchg
mov
std
sahf
xor
addr16
mov
scas
cmp
sbb
out
and
push
cmp
int
ret
xor
add
jge
cmp
std
movsbl
inc
or
mov
cmc
dec
popa
sub
cmc
jmp
or
sub
out
pop
mov
dec
mov
int
mov
xchg
push
bound
ret
pop
divl
les
or
and
rclb
cmc
push
mov
clc
insl
mov
dec
push
inc
or
sub
out
aam
mov
dec
mov
push
dec
sbb
aaa
les
mov
ss
jns
test
shlb
loopne
cwtl
lds
in
loop
xchg
and
add
and
outsl
and
add
push
jp
mov
ret
mov
adc
adc
test
sti
scas
into
popf
test
xchg
lods
mov
and
push
arpl
insl
data16
fcmovb
cmpl
mov
orb
dec
push
sub
add
add
scas
iret
jl
inc
nop
mov
lods
push
in
insl
icebp
mov
pop
pop
dec
push
enter
push
dec
jle
sub
cld
test
imul
pop
add
das
loope
jp
xchg
pop
lds
adc
repnz
jl
dec
je
fcmove
mov
mov
push
hlt
pusha
inc
mov
dec
.byte
pusha
xchg
dec
push
adc
or
dec
pop
lea
push
ds
mov
xchg
add
lods
add
inc
iret
sub
test
ljmp
sbb
push
jno
xlat
push
xchg
sti
xor
dec
inc
push
out
jge
aad
subb
cmp
jg
pop
push
mov
jg
adcl
arpl
jno
addr16
fisttpl
lret
inc
add
roll
cmp
mov
mov
orb
movsl
sub
loopne
adc
add
or
gs
add
mov
mov
xor
mov
push
aam
aam
mov
insb
sub
push
inc
sub
jne
mov
imul
xchg
and
sub
aas
lds
mov
adcl
adc
sub
outsb
loop
or
jg
xor
mov
mov
or
aaa
mov
inc
sti
addr16
or
fiaddl
cmpsl
and
sub
pop
sub
xor
mov
loop
jo
lods
dec
xchg
adc
adc
dec
sbb
mov
dec
andb
shrb
orb
xlat
imul
call
fcmovu
xlat
pop
insb
cmp
push
and
in
repz
sbb
push
adc
fsubs
pop
adc
cmp
insl
cmpsb
jns
imul
test
popa
mov
fdivrl
mov
cmpsb
mov
rcrl
sub
repz
out
ret
stos
in
jp
mov
add
loop
mov
mov
pop
dec
jo
aaa
roll
in
jp
iret
repnz
rolb
mov
loope
loopne
jl
sbb
sbb
ljmp
xor
dec
mov
shlb
cld
int
xchg
adc
pushf
adc
arpl
scas
les
or
loopne
inc
sub
fs
ss
mov
sub
mov
jle
rolb
xchg
clc
or
imul
jge
insl
hlt
sbb
mov
notb
add
je
xchg
xchg
adc
dec
shrb
xchg
dec
and
jbe
out
mov
imulb
and
push
cmc
hlt
cld
mov
pop
sbb
mov
xchg
shll
jecxz,pn
lock
lcall
mov
into
inc
cli
popa
in
negb
or
cmpsl
idivb
push
xchg
jnp
sbb
xor
mov
or
xor
cwtl
popa
sbb
mov
jns
add
mov
std
ret
or
mov
outsb
and
push
sbb
dec
pop
and
inc
outsl
hlt
mov
mov
xchg
adc
mov
pusha
mov
xor
shll
gs
int
mov
ss
xchg
jns
jmp
ljmp
ret
loope
pop
sbb
pop
das
and
dec
mov
lret
push
and
jb
aaa
repnz
inc
xchg
xlat
sub
shl
sub
int
mov
mov
lret
jmp
aam
mov
adc
sbb
push
push
iret
les
xchg
jbe
or
pop
or
das
jbe
pop
xchg
movmskps
rorl
mov
jmp
push
outsb
lock
scas
jl
adc
pop
mov
adc
ja
or
lret
repnz
bound
shl
addr16
dec
push
hlt
imul
fwait
sbb
sarb
fcoml
inc
sbb
movsb
lods
inc
std
inc
inc
sub
clc
add
pusha
das
push
jnp
jecxz
loop
js
mov
inc
ss
xor
popf
femms
xchg
popf
pop
clc
push
rol
pop
mov
adc
lods
daa
leave
idivb
pop
mov
push
jg
adc
xor
mov
push
ror
cmpsl
pop
push
xchg
mov
ds
xor
jo
or
cmp
jp
daa
sbb
adc
cmpsb
daa
js
out
cmp
in
and
or
daa
test
fwait
mov
add
test
lret
scas
jge,pn
das
mov
aam
insl
xor
or
jmp
cs
inc
loop
scas
std
jbe
lcall
push
pushf
les
dec
and
xlat
cmp
negb
sub
mov
popa
push
stos
add
rcrl
adc
ljmp
xor
popa
call
lock
pop
mov
fbstp
or
lret
jb
out
sahf
xchg
pushf
mov
sbb
mov
jge
insl
jbe
inc
push
jnp
xchg
fistpll
and
pop
in
push
mov
ret
mov
xor
orb
mov
mov
dec
add
sarb
jp
add
clc
dec
ss
mov
fstps
dec
jecxz
mov
push
icebp
push
lcall
push
fwait
xchg
add
xchg
xchg
xchg
xchg
lcall
int
push
mov
add
cld
fisttps
into
add
test
push
pop
jecxz
popa
mov
movntps
xchg
mov
cmpsb
test
stos
or
inc
cmp
stos
js
cmp
mov
or
jb
jl
loop
daa
outsb
or
into
insb
push
pop
xor
dec
fld
xchg
xor
or
add
popa
mov
lret
lahf
xor
adc
sub
xchg
lock
mov
sub
mov
lret
adcl
psubsb
xor
pusha
and
aas
insl
test
and
cmp
push
pop
xor
aad
int3
xchg
inc
shl
mull
inc
pop
pop
bound
mov
shrl
pop
outsb
inc
inc
push
aas
mov
test
or
dec
xchg
ja
push
jns
jmp
hlt
sbb
ficoms
sbb
push
movsl
add
loope
push
mov
lods
mov
in
inc
test
ret
mov
jno
cltd
pop
mov
mov
daa
fisubrl
jmp
icebp
sbb
add
jmp
cmp
jge
fwait
dec
cmp
sbb
in
push
xchg
inc
mov
and
xchg
lret
stos
lahf
adc
pop
sub
mov
ret
lods
insb
xchg
insb
jae
stos
aaa
push
xchg
lcall
jbe
shl
movups
pop
cmp
jg
push
xchg
sbb
fcompl
mov
arpl
fisttpl
in
push
loope
data16
dec
jge
or
and
clc
outsl
int
xchg
fdivr
jmp
adcb
pop
and
inc
pop
outsb
xchg
hlt
or
shll
xchg
push
jns
outsb
sar
adc
jle
xchg
arpl
dec
sbb
adc
out
imul
arpl
fisttpll
test
add
clc
out
movsb
andb
jl
push
mov
loopne
stc
ret
inc
pop
lret
push
repz
or
je
mov
popf
popf
mov
fwait
pop
roll
rolb
jmp
shl
mov
fistl
inc
into
clc
xchg
pop
roll
int3
roll
insb
icebp
ja
inc
fcmove
dec
mov
es
jl
call
sub
outsl
push
xor
incl
xor
popf
es
mov
loop
inc
sub
jp
sbbl
jle
sbb
lcall
rclb
std
stos
xor
in
mov
rorl
lock
imul
rcrb
dec
es
mov
fisubs
mov
rorb
leave
insl
jl
mov
or
adc
mov
jmp
cmp
pop
dec
hlt
cmp
mov
push
inc
cmp
dec
adc
cmp
outsb
mov
gs
sub
lahf
cmp
pop
ret
inc
fimull
cmp
or
adc
stos
cltd
icebp
and
test
jno
orb
cmp
inc
lods
shlb
fld
sbb
or
aas
idivb
in
daa
xor
push
adc
sets
movsb
add
scas
cmp
pop
aaa
jns
shll
add
jbe
jmp
push
popf
and
jo
mov
sub
loope
test
dec
hlt
push
gs
mov
inc
cmp
or
push
adc
add
loope
inc
sub
pop
leave
cs
in
movsb
iret
js
daa
dec
or
stc
jbe
leave
push
jmp
sbbl
cmc
cwtl
and
pop
mov
ret
push
cld
push
imul
adc
aas
test
std
ficoms
fistpll
scas
mov
rcll
jg
push
dec
outsb
or
and
popa
test
lock
sahf
sub
xchg
adc
ljmp
add
ret
or
roll
in
and
cmp
push
fs
add
out
xchg
testl
stc
adc
dec
je
movsb
adcb
aas
and
mov
jbe
js
mov
ficoml
cld
adc
cwtl
sub
dec
xchg
adcb
jb
clc
fisttps
add
fcompl
push
xchg
imul
ret
push
and
jns
std
call
mov
clc
lahf
stos
push
xchg
mov
adc
dec
gs
mov
sti
lahf
mov
sar
out
mov
cmpsb
mov
sahf
add
push
push
xor
repz
and
cwtl
sysenter
xchg
xchg
pop
js
xchg
sbb
cmpsl
fdivl
sub
push
adc
mov
fildll
inc
xchg
popf
mov
jg
mov
xchg
ss
out
push
pop
lods
imul
xchg
mov
std
cli
sbb
sub
int
inc
push
push
dec
pushf
rcr
xchg
adc
and
pop
fnstenv
xor
pop
sub
sbb
sub
js
jg
push
add
test
cmpb
mov
add
mov
pusha
addr16
cld
mov
stos
and
mov
popf
loope
cli
mov
push
mov
aaa
dec
jmp
out
repz
mov
cmc
dec
outsb
mov
popf
mov
clc
scas
xchg
lods
xor
sub
or
pop
test
cmp
push
mov
popf
dec
push
sub
scas
rclb
jg
add
push
loopne
stos
sti
ja
add
lcall
sbb
notb
fwait
cltd
pop
sahf
in
cmp
fcmovne
sti
push
rcl
push
push
cmp
addb
sub
jge
pusha
mov
dec
cmp
and
cmovno
sub
stos
hlt
aam
add
push
int
clc
mulb
pop
daa
push
adc
sbb
inc
dec
dec
int3
xchg
cli
les
in
or
lds
sub
in
stc
arpl
push
cld
xor
push
mov
or
pop
and
stos
push
mov
push
lcall
pusha
push
mov
push
dec
out
xor
sub
lods
mov
pop
sbb
push
dec
test
jbe
sub
xchg
cli
jae
ljmp
inc
pop
decb
dec
je
aam
cld
or
out
iret
test
lcall
dec
add
iret
repz
fwait
xchg
sbbb
cltd
pop
push
cli
shll
xor
jl
aad
rcrl
fidivrl
enter
jne
xor
ret
mov
cmp
loope
dec
adc
xor
mov
scas
xchg
cs
std
cld
stc
lret
sahf
ljmp
or
or
popa
repz
add
inc
or
test
mov
fists
mov
call
mov
mov
cmpsb
aad
adc
mov
aad
mov
icebp
pop
cmp
xchg
les
add
insl
call
add
add
and
fsts
pop
out
jmp
dec
push
mov
repz
sbb
or
or
aas
mov
push
mov
shrl
cmp
insl
mov
sarl
les
pushf
cmpsl
xchg
pop
push
xor
pushf
mov
test
or
sarl
pop
inc
lretw
or
cmp
inc
push
cmp
cmc
sti
and
sub
loope
inc
popa
std
sub
xchg
mov
lock
aam
sub
add
ljmp
icebp
add
sbb
jae
xor
scas
out
xor
mov
or
idivb
xor
or
jns
in
nop
push
and
lock
jb
rol
imulb
adc
mov
test
jecxz
arpl
xor
call
adc
rcrb
mov
xorl
scas
xor
and
inc
jno
xchg
jae
adc
or
out
scas
push
in
arpl
sbb
lods
adc
fisttpl
jns
or
lret
pop
jge
pop
cmp
pusha
sbb
xchg
or
pushf
xchg
stos
push
out
mov
or
mov
arpl
js
insb
cmp
std
lret
enter
adc
adc
aas
aad
mov
outsl
push
stos
popf
bound
loop
cmp
pop
mov
jle
bound
repnz
dec
push
popf
hlt
cmovno
mov
ljmp
shll
inc
rcrb
mov
movsl
xor
push
inc
push
repnz
mov
pop
cmpsb
push
pop
xlat
ds
in
push
sbb
mov
push
std
dec
lods
idivl
mov
adc
nop
daa
loop
in
xchg
movaps
lds
jns
fisubs
lret
push
cmp
pop
pushf
mov
int
jno
or
shll
cli
outsl
pop
int3
mov
jno
mov
shrl
jmp
push
faddl
inc
xlat
and
or
lret
shlb
movsl
ror
sahf
sub
mov
sbb
icebp
movsl
xchg
lret
or
mov
rcl
ret
mov
inc
pop
push
popf
cs
push
xlat
les
mov
mov
cmpsl
in
int
cmpsl
xor
and
and
in
rclb
movsl
push
scas
or
sbb
aam
sbb
fidivrs
add
adc
sub
adc
mov
xchg
sti
adc
iret
filds
sbb
lret
movsb
sub
ficoms
stc
out
fldenv
icebp
bound
fsts
aad
jno
cmp
movsb
cli
outsl
xchg
mov
popf
je
adc
jns
sbb
dec
or
jmp
adc
cmc
xchg
rorl
mov
fcom
cmp
lcall
mov
div
sbb
xor
add
jl
bound
je
bound
stc
sti
lds
mov
addl
iret
jmp
push
mov
dec
fidivl
jmp
xor
mov
fildl
xor
daa
lahf
in
jb
out
push
jge
gs
jb
dec
xchg
inc
loop
pop
add
mov
dec
rorb
stos
mov
push
mov
test
movsl
or
sbb
rorb
andl
xchg
lock
test
out
and
xchg
rorl
mov
mov
fucom
aaa
and
cmp
dec
lahf
out
ror
fstps
mov
cmp
hlt
adc
pop
in
push
pop
mov
call
lea
xor
xchg
das
push
xchg
xchg
lds
add
adc
or
push
loopne
rcrl
movsb
sti
cmc
mov
pop
sahf
mov
jmp
out
add
stos
jg
push
pop
pushf
push
enter
inc
cmp
add
and
aad
cmp
ja
dec
rcrl
dec
addr16
cmp
mov
dec
dec
sbb
inc
repz
push
inc
mov
xchg
orl
ret
pop
lea
xchg
test
mov
mov
mov
dec
jmp
mov
xor
call
loopne
in
inc
ss
or
fldcw
add
aam
lds
es
mov
mov
mov
lahf
loopne
jmp
add
hlt
mov
fcoms
cs
and
test
rcll
dec
outsl
dec
mov
js
jbe
push
pop
dec
cmp
clc
pop
leave
and
into
mov
pushf
pop
sub
xchg
cmpl
enter
ljmp
push
shlb
pop
xchg
ret
dec
stc
adc
popa
sub
ficoms
xor
sub
sbbb
scas
insl
mov
in
jnp
notb
sahf
sbb
clc
push
and
jmp
repz
xchg
out
sbb
ljmp
stos
das
inc
inc
dec
xchg
add
or
cmpsb
cmp
xchg
xor
lcall
jmp
push
or
in
inc
test
lret
and
cli
out
adc
mov
sarb
adc
mul
sub
ds
mov
lahf
imulb
enter
or
xlat
pusha
popa
sarl
cmp
adc
add
push
cli
inc
shlb
nop
sub
push
sub
pushf
loopne
sbb
pushf
inc
cmp
subl
test
cmp
push
mov
xor
loopnew
pushf
inc
stc
xchg
xchg
push
xor
rcll
pop
jo
in
in
pushf
jp
push
xor
inc
sar
push
xor
leave
push
dec
mov
sub
fstl
loop
xchg
mov
rolb
pop
add
xchg
cmpsl
movsl
out
dec
jns
jnp
ret
mov
sub
gs
push
jle
push
movl
das
decl
dec
xchg
sbb
push
ret
mov
mov
and
xchg
mov
in
adc
iret
in
jbe
adc
js
dec
pop
or
subb
mov
mov
insb
mov
call
mov
sbb
ret
lods
in
cmp
stos
stc
fldt
imul
sub
adcl
or
xor
adc
shlb
shr
loope
jmp
iret
pop
dec
test
cmpl
cmp
push
pop
test
movsb
push
rolb
sbb
sarb
loopne
add
fs
and
not
rclb
sbb
in
jecxz
mov
imul
stc
inc
dec
mov
mov
insb
lods
dec
mov
jb
pop
mov
mov
add
stos
iret
iret
imul
jmp
shrb
sub
jge
or
jp
stos
nop
sbb
aad
popf
xor
das
imul
outsl
sti
shll
js
mov
push
lret
mov
pushf
imul
fdivrs
hlt
and
xor
adc
jno
jb
xlat
clc
sub
mov
pop
or
ret
sub
dec
pop
add
mov
xchg
aas
outsl
scas
out
mov
pop
pop
jmp
inc
jne
idiv
mov
sahf
rolb
scas
xchg
iret
push
divb
in
out
push
loop
mov
dec
add
lock
idivb
cmpsb
dec
or
es
subl
push
mov
das
rol
aad
pop
aas
jecxz
iret
daa
popa
test
pop
mov
inc
xchg
xchg
je
adc
into
dec
push
add
adc
punpcklwd
mov
adc
cmp
repz
push
mov
testb
stos
imulb
aam
das
idivl
xlat
jno
iret
mov
lcall
jmp
push
shrl
enter
fdivrp
push
gs
int
xor
movl
sub
scas
lret
pop
cltd
xchg
xor
pop
or
scas
mov
into
cli
pmaxub
jl
shll
mov
addr16
popf
icebp
jecxz
mov
or
xor
push
addl
data16
xor
leave
out
jae
inc
cmp
pop
adc
int3
mov
int
outsl
shr
sbb
and
arpl
or
or
lret
andb
pop
stos
rclb
dec
int
js
dec
in
lea
aaa
test
dec
add
push
xchg
inc
jno
mov
lret
cmp
lods
ret
add
xlat
pop
int3
faddl
jle
mov
in
xbegin
mov
cltd
and
pusha
add
or
jecxz
cs
sbb
jmp
and
mov
mov
xchg
dec
out
jnp
pop
cmp
xor
in
push
or
pop
lock
cwtl
movsl
sub
xchg
pop
jnp
std
push
add
mov
mov
les
adcl
or
sub
imul
in
ja
dec
aas
leave
imul
adc
lock
lds
test
icebp
pop
out
or
add
inc
mov
mov
jae
mov
enter
or
aaa
adc
ljmp
or
mov
jle
jmp
add
xor
ds
mov
xorl
adc
mov
mov
add
jg
sub
loopne
in
sub
mov
mov
test
push
and
lret
aaa
cmp
jle
loope
inc
lret
sub
mov
leave
mov
je
push
pop
push
enter
pop
jno
pop
dec
stos
fsubs
xchg
inc
xor
js
out
lods
repz
and
dec
push
ret
cmp
mov
dec
and
std
adcl
shl
pop
add
xchg
jg
jg
rcrb
aas
call
iret
repnz
add
insb
xchg
shl
cmpsb
ds
pop
pushf
dec
inc
push
in
aam
push
xor
sar
or
pop
mov
jo
pop
dec
pop
cmpsb
xor
xchg
pop
mov
push
movsb
je
cmc
mov
mov
cmp
imul
sub
roll
es
jb
imul
je
xchg
or
dec
mov
push
repnz
cmp
stc
div
lds
jge
push
push
add
inc
in
jne
outsl
into
pushf
pushf
inc
jmp
pop
gs
xchg
jo
jbe
int3
dec
les
popf
loop
repnz
insb
cwtl
js
les
pop
adc
imul
cmpsb
insb
mov
fucom
add
jge
mov
dec
jecxz
cmp
pop
mov
xchg
sub
mov
cld
inc
lcall
add
lcall
lea
jecxz
pop
insb
aad
sbb
repz
jb
fimull
test
icebp
ret
and
sub
jb
addr16
sub
mov
fistl
push
loop
cmp
add
leave
in
stos
jmp
testb
andb
call
call
test
xchg
add
sbb
add
movsb
nop
xchg
ljmp
adc
inc
jle
arpl
jae
cmpsb
add
fs
jecxz
sub
scas
insl
ret
into
adc
hlt
cwtl
push
insb
outsl
sub
pop
add
ljmp
insb
das
icebp
push
mov
or
lea
sbb
inc
xor
test
imul
mov
mul
clc
push
push
jg
jmp
pop
jecxz
ret
mov
xchg
cmp
mov
cld
jnp
or
inc
mov
cld
inc
call
add
lahf
mov
mov
or
fidivl
cmp
dec
lret
sti
pop
lods
mov
cwtl
or
fwait
sub
dec
test
sub
mulb
mov
fisubrl
push
pop
lret
ffreep
inc
dec
xchg
dec
inc
rcll
imul
and
sub
jno
mov
pop
lds
and
stc
push
or
add
push
xchg
loope
xorl
push
cmpsb
push
test
loope
insl
sub
xor
std
fcompl
dec
popa
mov
xor
xor
ds
mov
push
adc
movsb
dec
push
jmp
test
lods
xchg
andl
int
aad
sbb
cmp
out
cmp
xchg
scas
mov
bound
mov
pushf
xchg
pop
mov
iret
sbb
iret
add
inc
das
sti
mov
fidivl
mov
mov
sub
outsl
stos
call
pop
cmp
xor
fucomi
mov
pop
pop
sub
push
cmpb
mov
jmp
sbb
xlat
cmp
cli
mov
sar
inc
xor
cmp
adc
pushf
sub
add
mov
popf
mov
mov
test
fldpi
enter
in
js
and
cltd
test
and
in
neg
movsl
subb
and
leave
out
xchg
xchg
pop
jle
and
fsubrs
je
sbb
aaa
mov
mov
xchg
loope
xor
jne
sbb
daa
xor
sbb
dec
sahf
aad
rclb
jmp
xchg
dec
jle
xlat
push
adc
inc
add
and
mov
dec
ja
push
lea
fmul
sbbb
xor
jno
ret
and
test
add
adc
mov
xor
xchg
xor
xchg
inc
add
sbb
mov
scas
fucomi
and
daa
iret
inc
dec
cmp
cmp
mov
sub
js
mov
inc
inc
test
push
fimull
pop
icebp
jg
notl
adc
mov
mov
stos
jns
stos
ljmp
out
pushf
jae
dec
and
outsl
mov
add
int3
or
dec
ret
sbb
or
out
jg
loopne
mov
mov
leave
dec
push
or
daa
cmp
dec
jg
fildll
mov
ds
jnp
cld
aad
divl
das
ds
fcmovnu
push
rorl
fsubl
int
inc
mov
subl
lods
cmpsb
lods
arpl
sub
xchg
out
insl
not
inc
pop
dec
pop
cmp
mov
or
lods
clc
loope
mov
cs
cmp
test
test
cli
mov
pop
inc
outsb
loop
jmp
addr16
mov
or
or
test
pop
mov
fcomps
xchg
aad
xchg
lods
jecxz
mov
dec
xchg
mov
fnstcw
inc
hlt
in
lea
lret
loop
adc
ja
add
aam
cmpsb
clc
push
xchg
dec
adc
ror
or
dec
mov
mov
movsl
jne
pop
lret
loop
lret
std
testl
cmp
push
xchg
sub
in
mov
lock
pop
rol
ror
mov
mov
add
movsb
pop
jl
dec
sub
int3
rcr
cmp
fildll
cmp
mov
mov
sbb
out
js
es
mov
xor
int
adcb
ja
ljmp
mov
rorl
add
xor
jmp
mov
push
call
loope
mov
mov
bound
xor
sub
or
out
inc
add
rorb
lods
and
into
fiadds
imul
xor
inc
adc
rcrl
fcompl
jg
rorb
push
outsb
testl
jo
or
or
add
cmpsb
lahf
push
sbb
mov
mov
lea
push
out
lods
adc
repnz
out
mov
xor
pop
cmc
pop
aad
cmp
xor
and
push
inc
lret
mov
add
jbe
jbe
mov
pop
das
mov
sahf
std
sbb
ss
mov
rorl
fwait
inc
pop
push
mov
push
shlb
loope
add
dec
jnp
dec
loopne
pushf
inc
pusha
popa
cmp
movsl
mov
gs
ja
xchg
rcrl
xor
xlat
adc
imul
movsb
sbb
cmc
jo
adc
hlt
inc
in
cmp
jg
repnz
xorb
add
push
loop
leave
test
xchg
jge
ret
pop
adc
dec
xchg
mov
pop
int
std
aad
jmp
mov
fsubs
mov
mov
incb
inc
jnp
test
mov
aas
addr16
fxch
or
jnp
push
cmc
in
xor
mov
in
pushf
adc
cmp
add
push
sub
dec
popl
cmp
popa
pushf
fildl
dec
xchg
pushl
stos
xchg
into
daa
lods
stos
das
adc
jge
jmp
outsl
outsb
test
inc
sbb
xor
inc
pop
adc
adc
mov
fstps
pop
cmpsl
out
mov
jns
pop
fwait
and
xor
sbb
cmp
rol
mov
movsb
xchg
push
or
fisubs
xor
dec
popa
xchg
repz
lahf
in
sbb
ficomps
stc
sarl
dec
popf
lods
inc
mov
out
jb
push
push
imul
pop
jge
loope
ss
jb
cwtd
xchg
fdivp
push
loopne
call
rcrl
ret
push
fldl2t
ret
inc
jmp
dec
sbb
and
pop
shl
mov
cs
cmpsl
das
mov
iret
push
jl
mov
data16
pop
mov
sti
xor
jl
jecxz
in
into
xchg
popa
insb
stos
repz
push
insl
or
add
sub
xor
out
pop
sbb
daa
in
mov
push
jp
mov
mov
test
imul
ljmp
mov
adc
ret
lahf
cmp
jnp
pop
int3
and
js
jb
popa
pop
je
xchg
push
sarl
loope
in
push
cmp
int
xlat
outsb
test
loopne
imulb
aaa
lock
in
mov
out
dec
popa
mov
and
scas
and
jecxz
cli
shl
ljmp
jns
arpl
adc
lahf
enter
sti
fwait
push
repz
cli
lods
std
mov
cmp
push
jbe
pop
call
sub
push
add
jb
cmp
inc
arpl
aam
cvtps2pi
sbb
jno
mov
movl
push
ljmp
pop
fdivrs
imul
pop
mov
ja
testl
into
in
push
mov
lds
faddp
mov
les
xor
adc
or
mov
test
leave
iret
addr16
inc
arpl
lods
cmp
push
xor
mov
fmul
es
xchg
fs
pop
out
dec
jmp
inc
xchg
out
cmp
sbb
insl
sub
scas
lret
jbe
pop
fwait
push
push
test
pop
repnz
mov
lret
fs
inc
pop
cmp
mov
or
lods
xor
xor
mov
push
push
xchg
je
pushf
fyl2xp1
cmp
int3
xorb
insl
xlat
in
ror
es
add
push
xchg
pop
add
xor
inc
cmp
or
jecxz
cld
loop
pop
mov
xchg
and
sbb
cmp
push
addl
aas
mov
std
adc
loop
pop
call
jno
jle
and
test
rorl
icebp
cmp
pop
into
in
and
add
sbb
pop
jge
out
pop
jb
ror
mov
sbb
std
movsl
xor
test
or
pop
push
pop
xlat
adc
jne
cmp
jnp
push
and
xchg
adc
ret
xor
stos
jnp
dec
sbbl
incl
mov
jo
pop
adc
ficoms
jne
lret
add
in
add
mov
xor
ljmp
fbld
out
inc
popf
pushf
push
das
jbe
loopne
pop
mov
loopne
es
push
loopne
sub
clc
adc
push
hlt
leave
xor
sbb
mov
add
jbe
mov
add
int3
pop
sbb
scas
inc
adc
or
sbb
int
sbb
push
sub
push
cmp
cmpsl
push
cmp
inc
push
jge
cmp
push
mov
cmp
jl
sub
inc
or
lret
mov
mov
and
notb
jp
pop
sahf
test
sbb
lahf
icebp
outsl
inc
aaa
cld
fidivrl
insl
mov
mov
rcl
cmp
mov
adc
adc
lea
in
in
mov
fcmovnbe
leave
in
outsl
lret
test
lret
ror
cwtl
imul
ret
jae
push
push
fiadds
out
dec
lret
sub
lcall
cmp
jmp
movsb
push
push
stc
adc
dec
cmp
in
arpl
mov
scas
je
shr
ss
lret
int3
or
cmpsb
mov
fldl2e
xor
in
lds
fwait
clc
rcrb
test
cmp
mov
fidivl
loop
adc
xlat
ljmp
rcrb
mov
out
xor
leave
mov
aaa
outsb
in
shl
or
in
iret
adc
jb
lds
fldl
sub
in
gs
fcmovnbe
xlat
sub
jae
xlat
fdivrs
ficompl
int3
mov
stc
pop
jbe
outsl
ficompl
or
mov
mov
inc
mov
add
xor
cltd
mov
jg
std
adc
rcrb
and
test
mov
and
or
inc
xor
mov
adc
adc
repnz
imul
mov
jns
dec
pop
ss
lods
jge
das
sub
xchg
xor
sub
pusha
xchg
pushf
xchg
adc
xchg
pusha
pop
call
push
flds
dec
push
or
outsl
ret
in
xchg
and
jbe
push
pop
add
xor
mov
xlat
sbb
or
pop
mov
fildll
dec
pop
mov
mov
cli
pop
mov
mov
dec
jg
or
inc
aaa
push
into
loop
popa
sub
sarb
movsb
cmp
out
hlt
mov
pop
sahf
dec
push
mov
sub
xchg
xor
cld
pop
scas
cmp
cmp
sub
iret
mov
jmp
pusha
mov
out
and
fldt
cmc
add
sahf
cmp
jne
adc
mov
xchg
fadd
mov
xchg
loop
sbbb
mov
mov
mov
clc
push
inc
and
cmpsb
push
or
scas
pop
lahf
lahf
insb
lea
in
push
fdiv
stc
fidivrs
mov
sub
push
and
lock
or
int
sbbb
and
push
mov
movsl
pop
enter
cmp
pushf
mov
lds
lret
fwait
mov
in
mov
mov
jmp
push
negb
jns
cmpsl
arpl
lcall
lods
jb
add
cmp
adc
or
mov
fmuls
sub
lods
mov
test
in
jl
mov
imul
sub
js
or
xchg
bound
hlt
fstpt
sbb
insl
mov
push
cmp
pop
push
andb
cmpsl
imul
stos
lds
mov
push
and
jne
or
push
into
sbb
outsl
or
xchg
into
test
jge
inc
dec
nop
fwait
pop
dec
jg
add
adc
cmpsl
jmp
mov
add
js
push
mov
sub
and
sub
and
loope
cmp
dec
in
pop
ss
ret
imul
lcall
nop
cli
loope
mov
fcmovnb
in
addl
mov
movsl
pop
nop
jmp
aad
push
ljmp
mov
xchg
inc
stos
test
in
iret
ss
and
aas
sbb
dec
mov
push
jb
sti
les
insl
nop
sub
inc
sub
lahf
sub
fbld
mov
decl
lret
adc
pop
or
das
cmp
bound
fdivrs
mov
jge
aaa
pop
xchg
mov
push
jecxz
sub
fnstenv
or
leave
or
or
call
movsb
jge
mov
add
pop
push
cmp
in
repnz
mov
inc
dec
es
jns
lret
inc
sbb
notb
push
out
or
lods
sbb
dec
mov
aam
add
je
and
and
lea
loop
xchg
in
cli
lret
sub
jl
jbe
mov
sbb
jge
je
dec
dec
imul
pop
fimuls
cs
mov
lcall
add
lcall
mov
mov
lahf
mov
fwait
mov
repnz
sbb
cmpsl
or
xchg
mov
into
ds
lock
push
cmp
sub
je
pop
cvtdq2ps
jne
mov
mov
jp
fstpl
or
and
and
cmc
mov
xor
push
mov
xchg
lcall
add
stos
pop
std
jp
add
out
mov
push
sti
and
mov
loop
jns
and
fnstenv
mov
mov
xchg
jbe
ret
fucom
je
addr16
lods
cmp
jp
add
inc
imulb
int3
fisubl
jo
das
jno
addl
mov
jno
test
jns
fiaddl
mov
clc
xor
inc
xchg
inc
movsl
arpl
pusha
xchg
push
inc
bound
sbb
or
mov
jecxz
idivb
fidivrl
add
cwtl
mov
or
and
jmp
adc
fxtract
cmp
in
sti
inc
aaa
jmp
inc
cli
cmp
push
aaa
xor
nop
mov
push
mov
outsb
fstps
mov
outsl
ficoms
xor
xor
xorb
lcall
mov
fsubs
push
aam
js
xchg
jo
sahf
or
jb
inc
mov
pop
mov
popf
fidivs
inc
in
pop
daa
bound
repnz
push
inc
loop
bound
sbb
and
cmp
into
dec
cmp
and
add
push
pop
fdivrp
jmp
or
cmpsb
and
lods
sbb
xchg
into
adc
ss
cmpb
insb
push
fadds
outsl
insb
mov
push
mov
loope
push
decb
arpl
jg
ja
sub
mov
mov
xchg
xor
imul
push
xchg
shrl
push
int
xchg
xchg
idivl
push
in
lods
out
adc
or
clc
jns
test
mov
xchg
pop
fidivrl
sub
out
push
fisubrs
mov
popf
cmp
fsubrp
inc
mov
insb
adc
mov
push
js
mov
dec
imul
js
mov
jnp
insb
adc
int3
push
push
das
add
icebp
leave
fwait
cmp
push
lret
out
or
sbb
cmp
jl
dec
and
add
adc
fisubrs
inc
jbe
push
out
mov
aaa
bnd
arpl
or
xor
xchg
mov
mov
outsl
bound
add
inc
aas
mov
pop
outsl
push
jnp
sub
or
movsl
in
mov
cmp
mov
sbb
push
adc
addr16
push
adc
pop
hlt
pop
adc
insb
pop
loopne
inc
cli
data16
ret
sub
loop
cwtl
pop
int
imul
jmp
xchg
cmc
jmp
mov
and
aas
jecxz
and
pop
dec
icebp
int3
lds
pop
mov
xchg
aaa
push
fildll
and
add
mov
and
test
lahf
mov
mov
jae
outsl
cli
bound
out
gs
lret
sar
lahf
enter
and
sub
mov
ja
test
bound
aad
pop
jle
paddq
xor
ljmp
nop
sub
jg
clc
jbe
sub
iret
rcrb
clc
fstpl
sub
pop
lret
add
cwtl
scas
fildll
cmp
int3
and
dec
packsswb
or
jne
mov
jae
add
pop
push
and
mov
fwait
out
adc
xor
dec
push
fisttpl
inc
cmp
adc
in
or
rcrb
nop
popf
and
stc
xor
sbb
shlb
add
and
mov
mov
push
out
xchg
mov
or
mov
jns
jae
popl
xchg
push
loopne
aaa
loopne
fcmovu
xor
test
mov
adc
ds
cmp
jge
fistpll
push
inc
jno
shlb
xchg
sub
jb
adc
pushf
aas
scas
push
mov
subl
push
inc
cmc
xchg
adc
xor
inc
sub
popa
push
std
jnp
or
ljmp
xchg
mov
pop
sub
mov
test
fcoml
stos
jmp
jmp
outsb
lds
adc
aad
outsl
imul
out
adc
and
cmp
mov
test
jmp
in
push
pop
add
cmp
xor
scas
pop
fs
test
and
adc
add
xor
loopne,pn
int3
xor
rclb
ljmp
jp
jbe
daa
or
stos
ret
mov
pop
lea
mov
fisubs
or
int3
jecxz
inc
adc
inc
xchg
loopne
call
enter
xor
xor
shrb
ljmp
pop
inc
push
call
fwait
sub
add
push
lds
testl
lds
repnz
ret
scas
pop
shrb
cs
inc
push
mov
ss
xchg
add
leave
daa
dec
mov
adc
cmpsl
push
push
jno
in
xchg
xor
mov
jp
in
lea
cmp
adc
mov
insb
ficompl
or
cmp
call
icebp
pushf
xlat
sarb
test
cltd
out
loop
rcrb
popf
inc
stos
pop
jns
sbb
daa
and
inc
xchg
loop
xchg
ret
inc
or
andl
and
jle
cmpsl
loop
lock
insl
movsb
into
loope
arpl
js
mov
ret
cmp
arpl
xor
mov
loope
pop
jp
jo
leave
shr
pop
xchg
adc
dec
xor
fcompl
cmpsb
fistpl
jmp
xchg
popa
fdivp
mov
call
mov
pusha
test
repnz
xchg
popf
shll
adc
lds
xchg
cmp
enter
jo
push
or
lds
pop
mov
lock
add
and
pop
and
jmp
mov
fistpl
sahf
dec
mov
out
xor
jle
adc
sbb
enter
aas
pop
inc
cwtl
sub
pop
std
in
cmp
test
sub
adc
jae
cli
negl
hlt
mov
mov
mov
popa
cltd
push
sub
adc
cli
mov
testb
dec
push
push
aaa
out
add
mov
jnp
adc
sub
sbbb
adc
daa
mov
repz
test
push
add
push
pop
mov
xor
and
outsb
mov
fs
jno
in
dec
or
mov
frstor
shll
test
add
iret
mov
mov
push
aaa
ret
in
pop
cmp
mov
sti
cmpsb
sub
pop
int3
jo
cld
aaa
or
ss
or
push
aam
push
jg
insb
cld
xchg
loop
cmp
push
js
or
lret
das
pop
lret
stos
jmp
mov
jmp
xor
xor
or
icebp
fsub
out
imul
scas
add
push
xchg
aaa
popa
or
pop
push
daa
das
out
mov
cmpsb
inc
rsm
stos
sub
daa
add
unpcklps
mov
adc
push
sub
sbb
mov
fimull
pop
inc
adc
stc
lcall
cmp
aaa
dec
shl
jnp
mov
xbegin
adc
lock
dec
mov
mov
hlt
xor
mov
pop
cmpsb
push
inc
testl
aaa
shlb
mov
int
pop
mov
cltd
repnz
or
enter
cmpsl
mov
imulb
or
roll
xor
pusha
sbb
scas
int3
cmpsl
inc
insb
add
fwait
push
sub
push
pop
aad
sub
rolb
cmc
cmp
pushf
in
xchg
xor
pop
jo
jnp
pop
fwait
out
test
out
pop
cmp
test
mov
in
xor
lcall
gs
and
xchg
imul
or
fmull
aas
mov
xchg
into
mov
push
shr
cmp
mov
mov
pushf
mov
cmp
cmp
lret
out
fcomps
jl
cmp
pop
mov
push
mov
mov
mov
movsl
call
ret
fdivrl
test
push
scas
dec
les
xchg
lret
call
sbb
scas
nop
ret
xchg
pop
movsl
mov
add
bound
mov
repnz
mov
lods
enter
je
movsl
sub
rcll
fnstsw
fisubrs
sarb
ret
nop
cwtl
rcrb
and
pop
sbb
push
test
cmpb
sbb
push
cld
inc
mov
push
cmp
frstor
jae
loopne
ss
outsl
mov
adc
outsl
lahf
jo
outsl
mov
jmp
stc
emms
int
rclb
sub
das
outsb
push
popf
mov
add
mov
std
or
xchg
mov
mov
adc
lods
loopne
lea
inc
cld
or
cltd
pop
cmpsl
push
push
jb
push
stos
jo
sbb
dec
rcll
test
mov
mov
je
adc
and
cmp
lea
sub
pop
push
stc
loopne
dec
dec
popa
cmc
inc
test
cwtl
or
sub
std
repz
ret
push
daa
aad
std
hlt
mov
fcmovnb
xchg
test
sub
push
push
lret
cmp
xlat
incb
mov
adc
mov
sub
jbe
fisubl
mov
inc
iret
or
jmp
lea
mov
outsb
data16
mov
int
and
fcomip
xor
stos
js
jl
pop
out
fmul
cltd
rorl
xlat
adc
lcall
pop
aam
pop
adc
dec
or
sub
add
xor
add
rorb
dec
jp
dec
ret
loopne
pushl
out
sub
es
addb
fistpl
ss
pop
stos
push
pop
pop
dec
imul
and
sub
aam
lods
cs
fs
aas
adc
or
je
out
in
rolb
xor
and
es
push
subl
cmpsb
into
push
out
mov
fildl
mov
ja
jl
cltd
push
jmp
mov
xchg
js
sub
orb
fdivl
adc
das
dec
stos
and
mov
jle
push
push
mov
or
ss
push
fisubrs
jmp
jo
cmp
int
out
mov
gs
inc
jge
sbb
pop
pop
add
cmp
adc
repz
cmp
mov
pop
push
jle
dec
jno
int3
mov
jg
sbb
std
idivl
cmp
lods
fyl2x
jge
or
incl
lods
adc
and
jle
aad
pop
jecxz
in
mov
int3
jns
mov
les
lcall
in
ret
push
jle
rcl
ficoml
shl
ret
insl
mov
rolb
sbb
jno
rep
fcmovnbe
rcrl
jae
shrl
pusha
pop
and
sub
and
clc
iret
aas
xor
je
fsubrl
test
ret
or
pop
inc
lock
std
hlt
inc
stos
or
popf
dec
popf
test
lods
xlat
push
and
or
data16
dec
int3
out
movsb
jg
xor
dec
es
fisubs
mov
into
lock
add
sbb
mov
dec
ret
lahf
xchg
xchg
adc
mov
int
lcall
xor
stc
inc
xor
pop
push
xor
cmp
jns
leave
ljmp
rol
or
and
lahf
inc
les
iret
test
in
cmpsb
in
out
add
inc
popa
out
movsb
in
js
pushf
dec
mov
mov
fimull
int
mov
out
aas
inc
cwtl
push
pop
jo
les
dec
xchg
pop
mov
inc
ljmp
mov
xchg
or
test
jno
inc
mov
mov
push
call
inc
and
scas
sbb
jmp
fdivrl
push
mov
lods
ja
jnp
addr16
mov
leave
add
hlt
cltd
push
insb
dec
orb
xor
cmpsb
test
cli
sbb
or
aad
mov
push
mov
in
and
or
or
iret
fnsave
and
dec
adc
scas
nop
sbb
push
mov
fisttps
pop
loop
stos
imul
pop
push
lret
inc
or
mov
scas
cmp
jae
lahf
aad
js
mov
or
loop
mov
xor
push
call
dec
jle
push
sub
push
mov
or
dec
jno
test
inc
in
pop
inc
jae
sub
inc
adc
ja
nop
add
ret
popa
lret
push
loope
out
and
dec
push
push
lcall
inc
cmp
popa
xor
xor
cli
enter
aam
push
mov
pop
test
and
scas
enter
scas
xchg
movsl
mov
or
inc
sarl
mov
popa
repnz
cld
pop
adc
ret
pop
shll
jle
jg
mov
mov
inc
and
mov
out
lret
arpl
ss
sbb
stos
jp
cmp
xchg
xchg
jecxz
mov
testb
push
xchg
xchg
in
xor
xchg
inc
pop
push
and
pop
stos
ret
cmp
mov
cmp
adc
je
adc
out
push
jns
lahf
out
nop
sbb
out
fdivp
les
gs
push
ss
xchg
test
loop
scas
daa
out
pusha
sub
mov
loope
mov
dec
jo
or
dec
ds
movsl
stc
popf
push
rolb
enter
dec
nop
xchg
insb
pop
sbb
sbb
stos
lea
hlt
add
cld
lahf
pop
lret
out
stos
xor
popf
out
pop
lods
sbb
mov
cmpl
jno
not
leave
dec
push
xchg
roll
lcall
popa
sub
jl
ret
jae
call
insb
sbb
fcoml
jl
push
scas
cmc
inc
xor
xchg
and
lds
and
push
ljmp
adc
add
cld
mov
sbb
loope
lods
vcvttpd2dq
pop
and
pop
xchg
aad
hlt
sbb
pop
xchg
dec
repz
sub
imul
jbe
mov
icebp
inc
mov
sahf
jp
xchg
adc
fstl
add
fcomi
das
int3
dec
fstpl
inc
jp
sbb
adc
ljmp
or
xor
push
xchg
sub
dec
enter
xchg
sbb
fistl
mov
data16
push
insb
add
repnz
adc
fistl
adc
jns
loope
dec
jge
adc
std
popa
jp
movb
jbe
inc
xchg
cmpsb
out
push
jp
je
jo
xchg
dec
xor
inc
or
scas
sub
push
pop
mov
sarl
xor
into
dec
jecxz
sahf
mov
push
movsl
les
cmp
xor
out
mov
sbb
cmp
imul
lock
outsb
inc
dec
addb
jl
or
addl
scas
jecxz
mov
and
mov
xor
or
dec
shll
jge
sub
and
jle
inc
cmp
push
cmpsl
jmp
add
xlat
add
cmp
ss
out
push
sbb
or
ja
mov
sub
sbb
mov
icebp
pop
pop
lock
rorb
sbb
and
mov
cmp
rorb
loopne
shrl
lods
lods
inc
or
pop
pop
cmp
cmp
jl
sub
adc
clc
icebp
jp
addl
or
jmp
pop
pop
out
mov
xchg
and
fs
sub
popa
jp
and
and
jl
jmp
mov
fwait
aas
cli
lods
cmp
sbb
cmp
int
dec
adc
sbb
dec
int
jo
push
out
pop
loope
push
and
push
mov
or
imul
mov
mov
test
xchg
sub
sub
pop
adc
or
stc
insl
into
into
pop
xchg
mov
addb
mov
incl
jo
aad
ja
out
movb
jnp
dec
push
sub
pop
fisubl
ljmp
add
lds
mov
das
add
mov
push
and
je
addb
jnp
into
rolb
je
ficoml
dec
inc
cmp
pop
xchg
xor
orl
psubb
fmull
and
sub
aam
pop
or
adc
and
test
add
aas
sahf
scas
push
lcall
cmp
mov
mov
push
test
inc
dec
and
mov
push
int3
pop
and
lock
jb
subl
push
xor
pop
mov
mov
xor
lds
aam
xorl
inc
mov
add
xchg
mov
pop
mov
fdivrs
add
subb
nop
mov
cmp
mov
sub
jnp
fimull
lret
ret
jg
mov
push
sbb
lds
jae
lcall
aaa
in
jmp
sub
and
fadd
push
outsl
xchg
fwait
inc
jo
mov
test
adc
push
add
lods
dec
je
into
mov
movsl
jno
adc
push
js
inc
and
test
jnp
imulb
test
pop
outsb
cmp
push
adc
push
mov
pusha
das
mov
jne
repz
stos
pop
stos
or
in
sbb
and
lods
push
jmp
mov
mov
cmpsb
in
xor
cmc
rcll
fs
sub
inc
push
insb
or
add
sub
jbe
icebp
in
mov
lret
push
fldl
mov
sub
mov
mov
sti
dec
pop
push
mov
inc
sbb
outsb
pop
mov
pop
fwait
out
mov
out
mov
decl
jne
fsubrl
dec
ss
imul
into
in
jecxz
pop
in
adc
in
xor
test
and
shl
mov
fbld
fisubs
bound
mov
pop
fsubrs
outsl
test
popa
inc
sub
fwait
loopne
sahf
out
sub
sbb
loope
cmpsl
or
sbb
rcrb
cmp
in
scas
leave
jae
fs
mov
push
push
add
rorb
sbb
mov
sbb
or
mov
and
inc
cwtl
sbb
iret
imul
adc
jmp
mov
and
xchg
add
adc
adc
lcall
insl
pusha
inc
mov
int
popa
mov
inc
push
or
sub
add
aam
je
loope
xchg
push
inc
mov
push
mov
mov
fwait
xchg
mov
ss
jbe
and
loope
mov
outsb
sub
aaa
pop
js
or
add
and
clc
popf
mov
mov
lret
add
sbb
lret
add
shlb
sbb
pop
push
dec
sub
roll
cld
insl
and
call
out
xor
sahf
stos
andb
sbb
pop
fucomp
pop
push
or
in
scas
jg
movsb
fstp
push
push
mov
pop
fcmovne
hlt
xor
jbe
mov
dec
lds
jo
aam
sbb
jle
into
sbbl
repnz
mov
dec
or
sub
popf
inc
leave
rcrl
sbb
push
dec
stos
jne
ret
lods
and
sbb
out
add
cwtl
out
fs
inc
inc
icebp
leave
cmp
pop
mov
push
test
orb
pop
rolb
loopne
pop
imul
and
jo
call
pushl
subb
sbb
push
xchg
adc
cmpsb
movsl
stos
cmpsb
xor
out
pop
dec
dec
jp
lock
sarl
mov
mov
mov
push
in
push
jecxz
neg
or
sub
out
mov
int
and
aad
movsl
jmp
addb
clc
fsub
adc
fnstsw
insb
jae
mov
and
push
ljmp
fldt
lods
pop
scas
push
sub
dec
out
fdivrs
sbb
sub
jnp
or
sbb
scas
js
lds
repnz
pop
push
adc
mov
es
add
movsl
nop
je
lds
daa
sub
or
std
sbb
fisubrl
call
mov
outsb
lods
push
mov
jno
push
inc
mov
mov
xor
push
jb
bound
fmuls
sub
xchg
sbbl
negb
mov
or
imul
cmp
stc
adc
push
sti
nop
jb
cmc
inc
jno
xor
shrl
nop
xor
in
ja
dec
rcl
xchg
enter
addr16
aas
add
xor
jmp
pusha
fmul
sbb
mov
sbb
cs
ljmp
add
xor
sub
shl
arpl
pop
jg
add
add
out
mov
dec
xchg
adcl
lahf
pop
adc
scas
sbb
and
jg
fcompl
notl
aad
cwtl
or
cmpsl
pop
mov
arpl
xchg
sub
jp
jbe
xor
jecxz
mov
cmpsl
popf
setl
idivb
pop
arpl
or
xchg
aam
jl
ds
popa
pop
sbb
das
add
and
outsl
imul
sbb
xchg
cli
pop
cmpsb
lds
push
mov
daa
or
ficoml
xchg
mov
dec
insb
inc
shld
icebp
pop
add
or
iret
loope
add
dec
lahf
mov
flds
lret
ljmp
xorb
stos
inc
popa
out
aas
hlt
adc
pop
pop
imul
mov
scas
loopne
mov
push
xchg
xchg
jne
dec
jb
sti
aad
pop
enter
cwtl
cs
xchg
xor
pusha
mov
jp
pop
cwtl
pop
cli
in
loope
pusha
fdivrp
jbe
add
sbbb
lock
jmp
fists
stos
cmp
xchg
dec
repnz
cltd
aas
mov
outsb
cwtl
dec
cmp
jecxz
addl
or
xor
test
dec
sbb
adc
push
mov
iret
jp
stc
mov
jle
repnz
dec
std
lods
ret
adc
mov
jb
ljmp
into
jo
js
inc
mov
stos
sahf
dec
imul
pop
xchg
and
push
cmp
je
sbb
lret
xorl
outsb
movsl
sahf
ljmp
data16
pop
pop
es
loopne
ja
rorl
stos
cmp
std
mov
mov
xorl
lods
fnstcw
or
out
imulb
cltd
imull
call
push
je
pop
xor
mov
pop
mov
push
add
sbb
jge
xchg
sbb
cmp
out
xchg
call
fcoms
negb
test
repz
icebp
mov
out
xchg
popf
jns
and
cld
add
mov
jns
test
je
sub
lret
xchg
adc
pop
addb
sub
mov
sbb
movsb
ds
add
cwtl
inc
push
les
sahf
enter
mov
bound
pusha
lret
sbb
lea
mov
lock
sbb
adc
lods
jbe
add
mov
sbb
dec
sar
push
rol
shl
mov
sarb
lahf
cltd
sahf
jge
outsb
daa
add
fisubl
inc
sbb
xor
jae
movsl
insl
jmp
int3
ljmp
scas
push
loopne
sub
sbb
add
xlat
add
test
sub
pop
mov
jns
sub
jge
jle
push
iret
push
cmpsb
xor
and
inc
insb
sbb
sbb
xor
or
mov
je
hlt
cmpsb
mov
lahf
je
into
andl
jl
call
pop
cwtl
pop
outsl
int3
mov
sti
push
test
adc
add
jb
or
cwtl
aas
dec
dec
sub
xor
adc
lret
mov
xchg
sbb
inc
aaa
lret
iret
sbb
push
push
dec
shll
sbb
pushf
xchg
iret
cmpsl
loop
mov
les
std
idiv
cmp
inc
pop
leave
jb
and
mov
int3
mov
std
mov
mov
xor
jle
sub
lds
or
dec
mov
push
xchg
int
sti
mov
pop
in
lods
sbb
in
cmp
xchg
insl
movb
lock
pop
inc
xchg
test
lret
mov
into
dec
cmpsb
lea
cwtl
dec
test
adc
mov
jg
jmp
scas
push
jl
dec
stc
popf
dec
or
leave
sub
add
and
mov
test
pop
pop
lret
mov
fidivs
in
jmp
test
subl
outsl
clc
or
cli
or
push
inc
aas
cmp
test
loopne
push
fs
and
mov
les
inc
xchg
sarb
cmp
mov
jecxz
push
cs
gs
fmul
nop
mov
fcomi
xor
adc
ret
jnp
ret
nop
mov
cmpsb
cmp
test
jmp
pop
dec
jbe
add
mov
cltd
jb
movsw
pusha
mov
fldl
sbb
ret
pop
into
sub
xchg
push
add
shll
dec
jl
call
mov
and
or
fwait
leave
scas
lods
imul
mov
movb
mov
adc
push
jg
pop
sub
inc
pop
movsl
cmp
aaa
xchg
out
push
or
mov
mov
je
sub
jmp
stos
xor
int
sbb
daa
mov
dec
les
xor
lock
pop
inc
rol
cmp
push
pop
dec
dec
dec
dec
pop
cmp
cs
rorb
cmp
push
lret
pop
enter
add
outsb
cli
inc
gs
dec
loop
cmp
fwait
xor
mov
add
mov
adc
fcmovnb
std
jle
and
cltd
daa
testb
ret
movsl
dec
mov
mov
push
sub
jo
inc
xchg
pushf
mov
push
mov
cs
std
sbbb
and
mov
cmpl
sbb
xor
cwtl
cs
fsubrl
push
jo
icebp
dec
js
rcrl
hlt
adc
jo
mov
imul
mov
jg
cmp
jp
push
das
push
jl
lods
iret
fistpl
lods
loop
push
sti
mov
push
inc
outsl
mov
sub
jecxz
push
pop
adc
lret
mov
cwtl
jg
mov
fnstsw
sbb
fld
js
pusha
sar
fbstp
adc
sbb
out
arpl
jae
xlat
sub
push
pop
mov
pushf
sbb
movsb
clc
sbb
std
dec
and
jae
sub
lea
in
loop
fwait
pop
or
loope
push
mov
inc
dec
dec
loopnew
lcall
xchg
lret
ffree
sub
or
push
inc
cli
orb
and
fmuls
xchg
mov
adc
lret
imul
push
not
pushl
adc
addr16
xorb
jge
mov
lcall
mov
test
mov
in
and
js
sub
sbb
lods
imul
cld
and
mov
mov
mov
dec
pop
sahf
ss
fcmovbe
jmp
and
mov
fsubl
stos
imul
stos
ror
aam
sub
jns
cmp
movsb
movsl
fistpll
jge
add
outsb
push
or
ja
int
xchg
out
or
incl
popa
sub
add
mov
sbb
fcmovne
mov
fsubrp
add
stc
xor
push
push
xor
push
arpl
mov
mov
and
cmpl
into
xor
pushf
fucomip
iret
xchg
mov
sbb
stos
jno
mov
repz
sti
push
popf
or
sbb
sub
mov
ret
test
pop
add
pop
fistpl
mov
loop
mov
sub
mov
add
out
lret
push
pop
rorb
dec
cwtl
sbb
jb
xchg
les
call
stos
daa
push
in
add
jo
jle
xor
fucomi
out
ret
mov
pop
or
xor
and
or
shlb
push
outsb
or
rorb
sbb
mov
sub
dec
call
filds
or
cwtl
outsl
in
sub
mov
push
cld
sub
and
mov
cmpl
rcrb
and
mov
and
jmp
jbe
cmp
enter
inc
inc
sahf
sbb
bound
dec
xlat
mov
lret
mov
int3
out
cs
cmp
pop
or
sbb
pushf
scas
sub
sub
cmp
or
aad
sahf
out
sbb
lret
test
xor
sbb
rorb
xchg
jecxz
jns
fwait
or
sbb
cmpb
sub
mov
xchg
jle
jmp
aaa
mov
cmp
gs
lea
mov
dec
cmpsb
mov
test
sub
add
aad
mov
lcall
test
jnp
addr16
mov
data16
test
add
and
cltd
mov
js
pop
push
add
pop
pusha
push
shll
mov
mov
push
stos
mov
add
add
faddl
aam
sub
call
aam
xchg
movsl
lods
fdivrs
cmp
arpl
push
jmp
jg
iret
jge
pop
sarl
sahf
out
or
fisttps
ret
popa
loop
ret
pop
ret
jl
mov
loopne
pop
stos
loopne
mov
pop
mov
mov
lock
les
daa
ja
repnz
shrb
adc
scas
cmp
add
sti
pop
jns
jb
out
clc
mov
repnz
xchg
insb
xchg
dec
mov
lods
dec
inc
mov
ds
movsl
fisubl
pusha
rcll
lahf
test
inc
mull
insl
loopne
std
jb
sbb
pop
xchg
and
fadds
mov
xchg
pop
adc
shl
push
push
pop
xchg
addb
mov
test
rolb
jo
cs
mov
dec
mov
pop
fs
sbb
sbb
xchg
out
adc
fidivrs
mov
fs
pop
div
test
mov
lods
rcll
imul
lea
mov
sahf
cmp
push
lret
jnp
jbe
call
push
lret
in
gs
xor
pop
shl
popa
hlt
cmp
and
adcb
cwtl
jb
dec
dec
mov
pop
sbb
inc
mov
dec
mov
insl
fists
aaa
xor
cmp
xor
or
and
lahf
adc
push
push
mov
sahf
sbbl
inc
gs
idiv
pop
popa
pushf
enter
dec
xchg
in
inc
imul
mov
sbb
inc
faddl
movsl
sbb
outsl
sub
xchg
ss
xchg
dec
inc
nop
cmp
shlb
out
mov
cmp
fldcw
aad
dec
fistpll
xor
pop
push
loop
mov
inc
push
cmp
into
xchg
lock
inc
xchg
lods
jl
sub
or
mov
js
and
pop
out
cmc
mov
xchg
scas
call
sbb
ret
mov
jne
xchg
sub
lea
hlt
add
pop
xchg
test
cmpb
mov
cmp
pop
loope
inc
into
add
jmp
mov
lods
rcll
je
test
xchg
aaa
repz
test
in
cmpsb
sub
pop
enter
cld
in
call
and
jb
dec
in
mov
cmp
je
push
or
and
dec
fdiv
pop
mov
clc
inc
push
mov
test
idivb
in
inc
jl
stos
out
sub
inc
ljmp
inc
js
dec
mov
mov
or
pop
inc
rcl
push
loop
mov
cmpsl
mov
clc
mov
mov
pop
push
inc
in
cld
jmp
mov
xchg
sbb
cmp
loopne
adc
inc
mov
add
cli
std
outsl
push
js
je
movsl
mov
int3
out
push
add
pop
jp
div
pop
mov
inc
cli
add
adc
gs
jge
push
pop
popa
and
dec
push
jbe
xchg
sbb
in
stos
stos
mov
stc
ret
inc
jbe
out
and
clc
dec
adc
lock
push
sub
mov
jmp
repz
jbe
and
mov
jo
popa
ss
fisubrl
cmp
ja
dec
adc
call
inc
je
repnz
dec
lock
xchg
mov
aas
jnp
or
test
iret
adc
cmp
mov
push
sbb
mov
ja
dec
sbb
mov
pop
mov
je
or
sub
loope
fwait
cmp
xchg
pop
pop
cmp
cwtl
cmp
pop
dec
inc
nop
das
orl
sub
fcompl
jns
mov
lds
jg
stc
loope
ret
jle
push
das
xor
and
dec
sub
ja
or
jle
push
jl
bound
mov
jmp
rorl
lcall
clc
mov
jmp
rcll
daa
out
jmp
sbb
cmp
das
rorb
mov
xor
jae
mov
mov
int
xchg
push
ss
cltd
push
cmp
filds
nop
xchg
push
out
notb
popf
rclb
mov
ret
movsl
and
shl
inc
pusha
loopne
add
pop
rorb
xlat
icebp
adc
rorl
mov
insl
mulb
test
les
cs
test
ja
push
popf
cmp
jge
add
cmp
insl
lcall
cmp
mov
sub
push
sub
cmc
pushf
iret
pop
fcos
adcb
push
push
fsubl
xchg
and
jmp
or
and
jne
mov
fadds
pop
jnp
sub
xchg
sub
sbb
inc
shlb
sub
data16
jne
inc
mov
push
inc
and
mov
cmpl
in
jnp
dec
jg
pop
incl
out
icebp
bound
add
push
loope
lods
push
in
int3
pop
xchg
xchg
cmpsl
es
dec
sub
mov
outsb
jnp
in
movsl
cmp
xor
and
push
mov
jne
idivl
cld
inc
sub
fimuls
stc
and
push
sbb
inc
adc
jns
or
xlat
pop
and
mov
and
inc
sarl
xor
sbb
sub
or
xor
ds
xchg
shrl
pop
cltd
lods
dec
sub
es
sbb
cmp
mov
out
icebp
jnp
shll
inc
mov
mov
xchg
xor
enter
lcall
or
scas
in
lcall
push
adc
xchg
stos
test
in
xor
fcomps
insb
or
mov
jmp
inc
xchg
adc
aaa
leave
push
pop
lret
mov
mov
and
push
cmc
hlt
pop
xor
stos
fnstenv
sbb
lds
cmp
and
data16
jne
mov
fisubl
jae
clc
cmc
sbb
push
bound
or
gs
addr16
sub
popf
les
xor
push
adc
dec
je
pop
in
adc
cmpsl
jae
in
add
xor
xchg
add
sbb
popf
js
sub
enter
es
insl
aam
sub
call
cmp
cs
fdivrl
mov
in
enter
add
push
out
ds
leave
xor
xchg
sub
lock
mulb
push
scas
not
add
mov
and
repz
mov
mov
sub
lret
insb
lcall
jbe
hlt
mov
popf
jne
push
or
rcl
aas
cmpsl
mov
shlb
mov
xchg
xor
insb
imul
push
xlat
outsl
push
and
stc
mov
scas
sbb
sti
mulb
ret
jmp
inc
arpl
mov
addr16
sbb
mov
cmpsl
add
mov
or
jb
insl
fs
iret
jne
mov
jl
or
lea
xor
jle
mov
cmc
push
fsubp
mov
iret
inc
popf
cld
cmp
movsl
ljmp
add
out
int3
loopne
sbb
mov
lods
inc
and
lds
xchg
cwtl
out
cmp
push
xchg
sbb
jnp
bound
mov
xlat
or
cmp
inc
pop
jl
mov
xchg
test
loope
rorl
add
fsubs
fcomp
fisubl
push
jne
xchg
jns
or
mov
adc
inc
ret
mov
push
mov
aad
add
xor
lret
fyl2xp1
cmovl
ljmp
lods
dec
ret
lds
push
enter
out
int3
mov
dec
pop
cmpsl
movsb
push
clc
inc
aaa
rorl
or
mov
mov
mov
pushf
mov
shl
or
add
popl
fcoms
les
test
dec
jg
sahf
into
mov
xor
jo
or
jl
gs
fildll
or
fistpll
add
jl
push
fstl
test
mov
pop
add
repnz
es
mov
xor
rcrl
gs
dec
xchg
push
mov
std
add
test
jl
dec
imul
xor
push
adc
mov
inc
pop
mov
iret
fsubl
pop
fs
xorb
daa
adc
nop
sbb
xor
cli
incl
sbb
fisttps
mov
sub
inc
stos
mov
fsubl
jno
insb
jb
mov
xchg
sti
lods
inc
in
mov
in
jle
push
enter
sub
shlb
in
subl
push
data16
mov
addr16
aaa
jno
push
push
sub
pusha
and
or
lods
into
iret
jno
cmp
mov
pop
or
aam
inc
outsl
mov
lea
fwait
xchg
mov
aas
cmpsb
andl
lods
insb
mov
xchg
icebp
cmp
push
xlat
ds
pop
cli
xor
repz
dec
xor
xor
mov
adc
cmp
pop
ret
inc
add
adc
hlt
ret
mov
jge
push
adc
ret
mov
jno
adc
fisubs
pusha
aad
lret
dec
es
pop
mov
out
fcomps
shll
inc
xorb
push
xor
das
cmp
cmp
mov
pop
test
data16
mov
sbb
push
lahf
mov
mov
mov
mov
int3
cmpsb
mov
fwait
cmp
cmp
fwait
mov
mov
jnp
rcrb
stc
sahf
mov
adc
int
lret
imul
add
xor
enter
add
jle
pop
adc
idivl
call
add
loopne
cmp
mov
leave
mov
pop
data16
roll
sbb
test
mov
js
bound
addr16
mov
inc
loop
xchg
dec
xorl
into
dec
cld
repnz
pop
mov
sub
sbb
xchg
xchg
sub
sbb
and
mov
jbe
call
movsb
in
idivb
out
cltd
out
mov
jle
fs
ja
inc
xlat
push
in
pop
push
lret
std
jb
mov
jae
add
sbb
loopne
jae
loope
scas
add
rcl
xor
cmp
mov
xor
shll
mov
sub
cmpsl
jecxz
mov
sub
shlb
mov
in
aad
lods
repnz
jae
in
push
icebp
inc
push
adc
negl
mov
out
movsl
out
cmpl
ljmp
adc
xrelease
and
dec
arpl
test
rcrb
mov
fstl
xor
sbb
and
push
test
mov
mov
push
imul
mov
and
xchg
jno
add
loop
push
int3
cltd
sub
mov
add
lock
mov
mov
test
jns
imul
inc
sarb
ror
repnz
fisubrs
adc
adc
popa
jmp
xor
xor
das
pop
and
xor
sbb
cmc
loope
or
mov
mov
pop
xchg
rol
pop
xor
out
insl
jns
aas
jne
jnp
leave
add
fistps
jl
cmp
xchg
and
dec
movsl
daa
insb
outsb
xor
xchg
bound
mov
inc
pushf
inc
mov
movsb
pusha
add
out
outsb
add
cmp
mov
ret
xchg
pop
mov
hlt
cmp
cmp
jnp
out
inc
jae
add
orb
inc
mov
dec
jp
lret
sbb
mov
adc
movsb
cmp
ljmp
cmp
push
movsl
inc
mov
int3
mov
ja
inc
inc
push
movl
test
mov
xor
xchg
ret
fdivrp
xchg
stc
stos
dec
mov
iret
mov
pop
mov
test
add
movsl
je
add
leave
arpl
add
mov
push
clc
lret
jnp
rclb
in
scas
outsl
sbb
js
add
popa
jno
push
fistpl
push
cmp
bound
rclb
lcall
inc
mov
pop
rclb
cwtl
scas
dec
packsswb
fadds
movsb
and
jp
inc
push
xchg
lahf
mov
lret
inc
xchg
jecxz
cmc
addr16
aam
sbb
lret
fnstcw
cmc
cmc
inc
or
cmp
mov
xor
pop
ror
push
repnz
insb
push
roll
test
jp
idiv
mov
andb
cmpsl
sti
push
mov
mov
dec
mov
mov
push
sbb
pop
adc
and
inc
jno
gs
fwait
cwtl
sti
sbb
out
inc
adc
rorb
iret
and
loope
pop
jge
aas
sarl
or
pusha
lahf
cmp
or
adc
cld
or
adc
jo
mov
inc
gs
adc
jmp
push
mov
aaa
mov
in
adc
fsubr
xchg
push
das
insb
dec
cld
push
mov
popa
and
out
xchg
sbb
pop
insb
mov
repnz
adc
jg
lods
xchg
mov
xlat
lahf
dec
jne
inc
dec
xchg
mov
daa
mov
add
xorb
pop
mov
outsb
jge
sbb
adc
out
fdiv
ljmp
xchg
xchg
ss
mov
jmp
or
mov
fcoml
xchg
lea
push
icebp
stc
pusha
mov
jns
fcom
ljmp
jns
fs
or
stc
fisubrl
stos
loope
repz
push
and
mov
push
scas
mov
mov
xchg
outsl
mov
popf
ror
xchg
sbb
and
push
loopne
sub
loopne
adc
xchg
adc
adc
inc
repnz
inc
add
xchg
push
int3
adc
arpl
js
sbb
loopne
xlat
mov
inc
loope
je
in
mov
sarb
add
or
lods
loop
call
leave
sbb
loop
mov
fs
iret
cmp
xchg
mov
jge
mov
movsl
mov
xor
xchg
inc
leave
scas
repz
pop
pop
andl
lds
sbb
jge
adc
lret
iret
sub
mov
out
inc
xchg
stc
subl
xor
ret
dec
mov
in
imul
ja
mov
sti
iret
sbb
jne
push
pop
sbb
out
in
pop
lret
push
ljmp
or
in
jne
push
jg
pop
addl
ljmp
mov
es
movsb
xor
inc
or
testl
mov
adc
addl
mov
hlt
imul
lods
mov
mov
ret
cmp
scas
inc
incb
icebp
out
hlt
pop
sbb
adc
xorl
inc
push
jle
mov
xor
jl
outsl
pop
sti
aaa
mov
lds
push
ss
inc
int
cmp
idiv
sbb
inc
lds
dec
stos
xorb
clc
jmp
fildll
cmpsl
enter
mov
iret
ss
cld
daa
jb
ret
mov
adc
lods
gs
push
pop
out
mov
jg
sub
and
repz
add
test
orl
pop
jno
repnz
ret
bound
sub
cmp
pop
iret
ljmp
int3
cmpsl
fdivs
fildll
jb
sub
xor
sub
pusha
add
imul
mov
daa
imul
pop
xchg
jmp
ret
push
aaa
adc
mov
jns
insl
cmp
std
xor
shl
push
jo
xchg
cmp
outsb
xor
pushf
ds
fstl
cltd
in
pop
cmpsl
cmp
orb
loopne
add
push
add
jmp
jne
mul
roll
jg
inc
jge
inc
stc
jl
mov
jle
pop
pop
adc
push
lahf
mov
pop
cmpsl
testl
push
pop
or
mov
dec
loop
xchg
sbb
movsb
bound
jmp
jb
xchg
iret
mov
shlb
push
inc
movsb
test
in
fisttpl
call
lcall
lret
rep
insb
push
adc
aad
jns
rclb
xlat
mov
test
dec
stc
push
scas
aad
loopne
cmp
or
push
and
sbb
std
xchg
push
inc
fcompl
clc
or
dec
lds
dec
pop
clc
push
loopne
jge
adc
cs
rcl
inc
jmp
jle
jp
push
mov
pop
inc
testl
mov
jle
lahf
dec
or
and
mov
in
sti
outsb
ja
scas
mov
add
ret
sbb
mov
sbb
std
movsl
test
stos
lret
pop
insl
lea
ficompl
xchg
je
cmc
addr16
pop
mov
push
aam
fdivrs
pop
cmpl
mov
adc
lret
adc
pop
cld
push
xor
mov
repnz
add
xor
push
pop
cmp
mov
sbb
jmp
inc
mov
mov
mov
sbb
dec
jg
mov
adc
mov
push
push
loop
fistpl
in
ds
dec
jecxz
insl
mov
das
sar
and
or
push
es
test
mov
push
aaa
cwtl
pop
xor
jg
jno
sub
jp
ficoml
mov
out
call
pushf
inc
sbb
leave
adc
aam
mov
das
jns
push
insb
into
stos
mov
into
ret
loopne
fwait
add
add
in
inc
mov
pop
aaa
fisttpll
sbb
in
andl
xchg
xor
lea
out
mov
popf
xchg
sbb
dec
push
lret
sub
scas
ret
ficomps
and
xchg
xor
cmp
dec
bound
sbb
jmp
movsb
fcmovu
adc
std
xchg
in
int
divl
daa
dec
in
jmp
xor
sub
xor
xor
out
scas
xlat
into
in
in
out
test
subb
iret
lahf
add
inc
pop
in
xchg
push
push
add
push
mov
test
cmp
outsl
push
insb
xchg
mov
fldl
aam
movsl
lock
sub
and
sarb
pop
jns
shrb
mov
in
add
inc
mov
pushf
aaa
mov
stos
adc
jl
push
sub
loope
arpl
movsl
dec
mov
add
imull
pop
xor
out
sub
pop
out
das
and
sub
sub
dec
sub
leave
pop
dec
pop
jp
stos
ljmp
subps
lods
outsl
xchg
or
idivb
cltd
imul
jnp
xchg
push
dec
mov
les
and
loop
jmp
inc
jmp
icebp
push
loopne
sbb
test
decl
outsl
adc
pusha
cmpsl
outsl
call
lahf
push
lea
dec
mov
dec
push
push
dec
pop
je
push
ret
mov
cmpsl
mov
add
inc
int
cld
mov
lds
into
xlat
in
and
xor
fs
in
sahf
xchg
arpl
loopne
movsb
mov
cltd
adc
pop
sahf
int
aam
add
scas
mov
int3
js
adc
cmp
pop
pop
aas
pop
inc
and
jnp
mov
adc
leave
pusha
ret
adc
aam
sub
or
cmp
mov
or
xor
mov
cmc
outsl
fildll
gs
mov
popa
fcompl
mov
xor
lret
mov
mov
popf
movsb
add
sbb
sbb
mov
inc
bound
sub
mov
push
cmp
movb
dec
je
clc
cmp
ja
lret
xchg
mov
push
aad
cmp
adc
cmp
push
cmp
sbb
jb
clc
mov
or
cld
xor
addr16
or
sub
jmp
cli
pop
jne
stos
aaa
cltd
pop
pop
mov
lret
pop
and
jae
lret
out
mov
xor
jg
push
inc
jno
popl
adc
pop
and
mov
xlat
outsl
jge
xchg
xor
and
loope
pop
mov
lret
test
cld
lahf
jl
out
rolb
and
leave
insl
adc
cwtl
cmp
inc
andb
adc
cmp
bound
mov
fs
mov
wrmsr
pop
mov
xor
xchg
pop
or
ja
cli
pop
movsl
mull
jns
imul
pusha
fs
mov
inc
jns
test
mov
jnp
jno
dec
data16
mov
aas
addr16
lods
mov
mov
arpl
mov
cld
popa
lds
sbb
and
xor
idivl
fsubl
les
mov
std
nop
shll
pop
xchg
mov
jns
jnp
mov
stos
xchg
jg
out
ret
mov
ds
sarb
addr16
popa
cmp
aas
mov
jbe
ret
ret
lock
mov
lahf
stos
pushf
push
push
adc
out
mov
pop
jb
xor
ret
jg
fimull
push
add
ret
aam
inc
sbb
jnp
sbb
jb
mov
adc
mov
daa
sub
mov
add
shll
dec
or
out
jge
sahf
in
sbb
mov
test
out
push
xor
and
jae
outsl
leave
pop
add
jmp
and
push
sbb
lods
fcompl
sbb
add
or
adc
or
and
pop
dec
and
jnp
jle
nop
and
inc
inc
xchg
sub
add
scas
pop
mov
dec
in
push
cmpsb
or
xchg
les
xchg
arpl
cwtl
cmp
or
sub
xchg
mov
cli
add
lret
fcoms
pop
daa
stc
mov
cli
and
into
adc
mov
ret
push
push
loop
out
stc
stos
xor
bound
pop
jns
cli
pop
or
fsubs
clc
mov
push
xlat
rolb
jge
ja
and
pushf
add
mov
leave
cwtl
rolb
add
push
loop
inc
pop
mov
add
mov
test
jp
inc
stos
call
lods
dec
mov
adc
sbb
dec
cmp
pop
test
pop
or
xchg
xchg
mov
xlat
add
jb
xor
cwtl
xor
add
cwtl
scas
sbb
jne
jb
push
cld
outsl
leave
rolb
ds
int
ret
mov
sub
rclb
jbe
xor
clc
ret
mov
cli
inc
push
xor
sbb
les
adc
mov
pop
cmpsl
cmp
inc
jmp
insb
addb
inc
daa
inc
test
lret
push
shll
out
pop
mov
mov
ja
push
in
xchg
add
xchg
push
mov
je
adc
inc
mov
jl
cs
dec
leave
or
out
add
pop
cmp
sub
repnz
enter
hlt
jb
popa
cmpb
in
lds
out
test
xlat
imul
dec
aas
cmc
xchg
call
cmp
jle
sbbl
push
dec
stos
roll
push
sahf
and
lock
jge
std
test
and
adc
cmp
cltd
push
mov
dec
cmp
aas
pop
call
lahf
push
sub
call
lret
mov
lahf
inc
cmp
cmp
and
and
cli
mov
lds
lock
xchg
fidivl
vcomiss
fildl
push
in
das
stc
jne
notb
pop
add
jns
xchg
test
ss
or
add
mov
add
xchg
and
dec
add
test
xchg
cmc
std
mov
cs
cli
sbb
mov
sahf
mov
fisubrl
test
and
lds
adc
adc
xchg
add
inc
cld
call
add
mov
push
dec
insl
scas
jo
xchg
outsl
in
fldcw
and
aaa
popf
push
cmp
mov
inc
popf
xor
push
xor
fwait
int
enter
mov
jb
push
pop
xlat
lds
fistpll
ret
pop
jmp
cmp
sbb
adc
add
addb
inc
jo
push
xchg
adc
fstpl
imull
inc
xor
lods
mov
pop
scas
push
sub
sbb
mov
pushf
xchg
fcoml
push
push
mov
lea
ret
push
mov
popf
pop
cltd
jo
ret
fucomip
cmp
iret
xor
xor
sub
xchg
in
cmc
inc
shll
adc
mov
divb
daa
lret
psrad
xchg
popf
push
mov
push
xor
mov
sub
jmp
out
jl
mov
jne
cmp
loopne
cmp
dec
mov
aaa
xchg
add
lret
imul
jo
imul
mov
cmp
push
mov
scas
sbb
mov
sbb
popl
mov
fwait
mov
scas
jne
aad
repnz
and
adc
adc
stos
sbb
dec
in
cmp
sbb
aas
adc
ja
mov
notb
xor
jne
jl
pop
or
jp
sahf
scas
inc
push
xchg
adc
cmpsb
fs
jg
fdivrl
inc
xor
lret
push
sbb
roll
lock
fcompl
xchg
arpl
lock
ret
fcomps
dec
adc
and
pop
push
push
sbb
ret
jle
inc
fiadds
xchg
and
sbb
ss
movb
and
sub
mov
xchg
daa
fmull
outsl
xchg
mov
sub
pop
xchg
dec
jg
aas
fcoml
cmp
sub
pop
xchg
sbb
clc
lods
ss
mov
fstpt
add
or
insb
mov
ret
aam
inc
jmp
jp
insb
inc
popa
jecxz
int
aam
data16
jno
cmc
stc
jnp
push
mov
push
das
mov
push
iret
mov
xchg
movl
mov
xor
ljmp
std
repnz
jmp
es
ds
dec
xor
push
mov
rcrl
popa
cld
xor
pop
mov
add
xorl
mov
or
push
call
fwait
daa
cwtl
repnz
pushf
push
jns
or
mov
jo
and
stos
push
lcall
cmp
in
mov
sbbl
fsubrs
out
hlt
push
movsb
cmp
fsubs
out
sub
mov
insl
nop
pop
clc
repz
mov
jp
push
sbb
stos
mov
mov
rcll
flds
push
mov
push
pop
cmpl
inc
pop
insb
loope
jno
xor
nop
xchg
les
nop
jo
out
xor
pop
cltd
ljmp
imul
dec
into
stos
push
int
push
in
inc
or
xlat
out
dec
jne
lcall
xlat
sub
mov
shll
sarb
fcoms
jp
adc
jo
loopne
pop
sbb
cwtl
or
inc
mov
cmp
push
or
into
fiadds
hlt
cmpsl
jge
not
pop
ficomps
xchg
lahf
addr16
popa
pop
pop
leave
mov
jl
in
cmp
mov
jg
in
sbb
adc
push
andb
add
cmp
push
test
scas
add
and
pushl
sub
sbbb
cmp
mov
sbb
dec
scas
and
xor
gs
add
aam
insl
sub
mov
lea
call
cld
dec
imul
jnp
push
xchg
or
popa
ja
hlt
mov
jmp
mov
xor
mov
aam
vmwrite
sub
push
pop
cmp
out
or
pop
insl
jp
insl
aaa
fistpll
mov
fsubl
and
mov
or
mov
jno
add
je
sub
sbb
into
inc
ss
dec
or
aad
mov
sbb
jecxz
and
mov
stos
in
out
xor
rclb
or
mov
mov
cwtd
js
jg
aas
aaa
add
or
lods
fistpll
mov
mov
outsl
std
imul
arpl
icebp
aad
add
scas
repz
pop
in
aaa
cmp
ljmp
sub
enter
lret
arpl
lret
in
dec
dec
push
out
push
sbb
jne
addr16
xor
test
hlt
das
pop
stos
push
or
xor
das
scas
mov
in
push
and
mov
jo
xlat
or
inc
sub
fwait
jno
daa
inc
pop
mov
xor
pop
stos
fxch
adc
xor
jp
push
std
mov
in
adc
or
addr16
in
scas
leave
ret
iret
xchg
xchg
in
cmp
mov
sub
pop
mov
sbb
mov
pushf
les
shll
icebp
ficoml
dec
add
jl
xchg
scas
outsl
and
out
or
loopne
mov
or
jp
pop
mov
xor
sub
into
sysexit
fdiv
mov
sbb
movsl
mov
fwait
dec
adc
js
ror
das
lock
mov
pop
mov
pop
pop
cmp
xchg
or
out
lods
jb
fsub
and
iret
push
push
push
xor
cmp
pop
adc
and
jo
das
add
push
mov
aas
int
jnp
scas
xchg
insl
inc
pop
mov
mov
int3
fstpt
sbbl
push
mov
pushf
push
jae
lret
ret
fdivrl
clc
aas
push
xor
ja
out
scas
cmp
out
ljmp
cmp
jge
lock
push
addl
push
jo
outsb
lock
and
ss
dec
loopne
and
or
dec
jno
mov
ljmp
sub
dec
lea
stos
out
ret
icebp
mov
das
sub
and
lcall
fdivrs
in
jp
outsl
jmp
call
cmp
adc
and
mov
xchg
pop
rcrb
mov
test
and
adc
and
xchg
push
mov
pop
fs
mov
je
cmpsb
clc
sub
fisubl
in
mov
aas
jo
cwtl
in
fsubl
or
pop
stos
mov
xchg
inc
in
ljmp
loopne
mov
mov
loope
mov
cmp
cmpsl
leave
pop
aaa
je
faddl
add
pop
or
mov
add
movsl
mov
loope
daa
shrb
add
jmp
pop
hlt
mov
inc
xchg
xor
xor
int3
pop
cmp
dec
je
arpl
xchg
dec
mov
ljmp
data16
lods
inc
pop
call
sub
xchg
inc
xor
xor
pop
lret
insb
adc
fwait
test
mov
out
sbb
sahf
mov
aad
or
int
fcoms
xchg
sbbl
movsl
pop
cmpsb
dec
cmp
xor
cmc
mov
insb
sbbl
pop
and
dec
jae
mov
or
sub
xchg
out
mov
mov
movzwl
lea
push
in
mov
xor
popf
cmp
rorb
cmpsb
je
sarl
cmpsl
cs
outsl
in
movsl
nop
xlat
into
adc
or
push
cmp
mov
mov
pop
push
xor
mov
jg
xor
test
aaa
das
jecxz
leave
jb
inc
outsl
jo
or
repnz
mov
jb
adc
push
sbb
arpl
mov
push
pop
cmc
into
mov
dec
push
in
gs
icebp
pop
mov
xchg
dec
imul
cmpsb
sbb
fimull
mov
mov
and
dec
push
sti
mov
push
fcmovnbe
into
mov
cltd
test
xchg
dec
outsl
bound
xor
push
jnp
sarb
test
cltd
push
add
xor
mov
sti
lds
pop
xchg
and
aad
pinsrw
sbb
ret
lret
add
out
mov
insl
pop
xor
jno
or
vunpckhps
jae
jp
and
ljmp
lcall
jp
inc
stos
xor
jns
and
mov
ret
add
int3
ret
cmp
ljmp
std
inc
and
int3
sbb
and
and
adc
mov
push
in
or
lahf
dec
int3
lret
dec
in
xorl
push
mov
lcall
push
jmp
dec
push
add
xor
or
mov
and
and
les
icebp
lcallw
outsl
loop
sbb
mov
lea
xor
call
loopne
push
js
dec
stos
test
mov
aaa
adc
dec
div
xchg
inc
sbb
jmp
jl
loopne
fldenv
cs
push
inc
movsl
loope
cmp
fimull
cmpb
lcall
or
outsb
pop
sbb
incb
dec
mov
scas
adc
xchg
icebp
push
inc
fs
test
sub
cmp
lret
mov
cwtl
lret
scas
mov
inc
lahf
leave
dec
push
std
cmp
shl
outsl
test
adc
xchg
repnz
jl
into
test
stos
and
mov
mov
ret
jb
inc
push
xchg
adc
push
sbb
ja
out
loop
dec
xlat
sahf
lret
add
dec
das
arpl
shll
roll
gs
and
sarl
pop
or
mov
push
sub
bound
dec
xchg
arpl
loopne
out
mov
cltd
xchg
jle
or
push
mov
mov
cmp
mov
ss
lahf
fwait
pop
jl
icebp
cmp
mov
jmp
sub
and
das
mov
dec
jne
sub
roll
sbb
inc
push
dec
pop
mov
scas
in
cld
rcll
outsb
icebp
movsb
push
neg
repnz
out
mov
adc
repz
mov
leave
push
or
cli
test
or
lods
aad
popa
pop
xor
xchg
lods
into
and
int
dec
shlb
inc
repnz
rorb
dec
add
sub
cs
insb
push
inc
jns
xor
sbb
add
dec
sub
ja
mov
mov
bnd
fisubs
iret
testb
sbb
cs
shl
scas
fildll
mov
sbb
rcrl
mov
call
xchg
xchg
aam
ds
enter
sahf
lock
pop
cltd
int3
lcall
pushf
mov
and
retw
mov
outsl
imul
mov
idivb
xchg
xchg
jbe
sbb
mov
repz
movsb
mov
cltd
cmpsl
int3
repz
cs
jecxz
subl
aaa
adc
pusha
cmp
or
mov
sbb
mov
int
xchg
mov
lret
mov
lock
cmp
cmpsb
out
out
mov
lcall
fwait
call
mov
xor
stos
lret
xchg
ljmp
repnz
pop
adc
ds
inc
out
push
push
adc
sbb
ds
xchg
sub
enter
les
fistpll
arpl
pop
imul
add
cld
or
popf
push
sub
lret
and
and
push
push
lcall
je
nop
scas
lods
or
lcall
xlat
jnp
xor
dec
fwait
inc
fbstp
jl
pop
rclb
das
mov
mov
push
roll
mov
stos
dec
mov
jecxz
jecxz
loop
loope
mov
mov
fcoms
or
xor
fcmovne
add
daa
adc
push
hlt
adc
cmp
cmp
aam
pop
dec
adc
cmp
xorb
inc
lods
cmp
mov
movsl
dec
mov
xchg
icebp
dec
stos
add
mov
sbbb
fwait
test
sarb
mov
sbb
popf
iret
stos
xchg
pop
lret
jp
and
int
imul
in
leave
xchg
mov
cltd
cltd
outsb
sbb
insl
setno
mov
out
xor
mov
mov
out
adc
out
xchg
js
add
pop
out
xchg
sbb
lahf
scas
xchg
cltd
lock
loope
xchg
fld
mov
mov
ds
or
outsl
lcall
pushf
sti
dec
idiv
mov
dec
scas
movsb
pusha
lret
aas
aas
rcrb
mov
insb
push
mov
xor
sub
pop
aaa
movsl
sub
inc
pusha
xchg
les
test
or
sbb
dec
in
clc
jno
aad
cmpsb
scas
push
lock
lea
lahf
aam
mov
adc
fbld
les
sub
gs
mov
pop
pusha
arpl
jle
adc
sbb
xor
shlb
sahf
pop
das
sub
arpl
jle
andb
sti
xorb
sahf
sub
jno
insl
out
dec
mov
and
pop
jb
dec
pop
popl
insl
pushf
fcompl
jnp
inc
out
jecxz
xor
inc
repz
and
xor
movd
shlb
inc
in
repz
pop
and
sbb
negb
mov
inc
push
in
aas
xchg
and
ret
push
aam
aad
ja
or
fdivs
mov
ds
pop
push
ret
fstpl
fildll
arpl
test
xchg
rolb
scas
pop
mov
test
in
mov
lcall
mov
xor
xor
inc
clc
xchg
and
sbb
and
repz
mov
dec
pop
ss
movsb
fdivp
ljmp
jmp
and
dec
cmp
js
sbb
pop
xor
jne
jp
fdivrl
lods
fadd
pop
loope
xor
mov
lods
push
mov
lret
outsl
lock
or
xlat
and
adc
icebp
leave
jae
pop
push
push
cwtl
les
data16
lahf
mov
clc
adc
sbb
loope
inc
dec
xchg
in
incb
das
xchg
ret
lret
call
repnz
or
xor
imulb
sbb
je
cmp
and
call
mov
fs
sub
sbb
or
add
in
adc
fcomp
or
cli
mov
xchg
lahf
lahf
enter
aam
sub
lahf
pop
lods
int
das
in
jmp
or
inc
les
mov
xchg
cli
cli
shlb
mov
ds
fstl
cmpsb
add
mov
aaa
mov
mov
insb
xchg
out
ret
testl
lret
clc
scas
stos
inc
sarl
jnp,pn
sar
loop
bound
ss
addr16
call
mov
ds
aaa
mov
dec
mov
fidivrl
xor
test
into
rcll
in
xchg
jno
sbb
add
jae
pop
push
xchg
lds
cmp
arpl
fstpl
cltd
inc
push
gs
pushf
push
test
pop
rclb
test
and
outsl
cmp
test
mov
pop
lret
insb
imul
out
jecxz
xchg
dec
push
das
and
push
outsl
int
ja
adc
aas
inc
add
leave
adc
inc
lds
sub
fadd
adc
mov
dec
psllw
mov
das
and
dec
xchg
jb
and
or
add
xchg
clc
and
out
pop
and
xchg
adc
das
add
adc
in
mov
or
mov
clc
hlt
inc
push
fwait
leave
jno
test
mov
imul
mov
dec
andb
xor
sbb
inc
lret
in
mov
inc
andb
aaa
and
push
aad
mov
dec
dec
add
pusha
jb
arpl
mov
dec
std
cli
or
fdivs
adc
ja
negl
add
jl
int3
inc
jl
push
mov
lea
ljmp
mov
repz
pop
inc
jecxz
xchg
scas
cs
or
mov
stc
add
in
sti
cltd
loope
jg
nop
movsl
out
mov
mov
sbb
mov
sub
add
aaa
mov
repz
and
inc
sub
or
xchg
sahf
push
push
adc
in
pop
jle
push
iret
aaa
stc
shlb
jbe
push
in
lds
sub
mov
mov
repnz
xchg
push
sub
mov
xchg
cli
sub
pop
push
in
cwtl
xor
mov
popf
lods
ljmp
testb
inc
lcall
mov
movsb
pop
mov
add
out
jmp
and
push
out
dec
cmc
roll
cmc
pop
jb
inc
jne
lods
mov
or
mov
divl
daa
cmp
rorb
jnp
cmc
loopne
das
sub
dec
daa
fsubr
or
jo
loopne
sbb
push
scas
idivb
mov
and
mov
repz
cltd
jae
and
pop
and
dec
push
sbb
jp
cmp
add
pop
cwtl
push
lcall
int
push
int
clc
leave
add
adc
cs
mov
pusha
jb
mov
add
popf
in
jle
xor
xor
rolb
addr16
xchg
bound
sbb
adc
inc
dec
dec
sbb
rcll
xor
lock
stos
add
cmp
xchg
mov
inc
push
push
out
fdivrs
pop
and
and
and
fisttpl
sbb
popa
mov
push
leave
adc
add
out
aad
xchg
dec
mov
mov
sahf
sahf
cli
sbb
xor
fstpl
enter
adc
jo
test
mov
test
add
mov
cmp
out
and
xchg
lock
xlat
fdivrl
sbb
fstpl
sbb
adc
ficomps
roll
mov
ja
jmp
ljmp
mov
mov
aad
push
ret
mov
push
out
inc
mov
cmpsl
jmp
sbb
repnz
repnz
shr
arpl
xchg
ds
test
push
inc
xchg
dec
int3
push
push
xchg
jno
add
lock
lods
out
ret
inc
cmp
sub
lds
jecxz
mov
mov
cmpsl
mov
mov
xor
and
mov
add
push
out
jg
mov
xchg
cmp
add
push
dec
sbb
lret
outsl
mov
xchg
addr16
ljmp
pop
jl
aad
std
aam
sub
dec
cmp
cli
push
fisttpl
aad
into
sub
dec
pop
dec
mov
negb
mov
movsl
mov
outsl
pushf
jl
andl
mov
jnp
jmp
testl
mov
xchg
ds
push
call
shlb
bound
movsb
sub
mov
bound
mov
fmull
xchg
adc
into
pop
dec
and
mov
scas
jmp
mov
movsl
sbb
enter
out
movsb
stc
xchg
shlb
ucomiss
add
xlat
add
jno
xchg
cs
decb
inc
xor
out
xchg
mov
jb
dec
jbe
fwait
cs
pop
sti
stos
xor
adc
jb
cmp
ror
jl
rcrb
addr16
fstpt
movsb
lahf
ja
stos
ds
incb
and
jnp
adc
ror
push
and
sub
dec
or
jnp
outsl
pop
dec
ja
xchg
pop
movsb
jmp
adc
jns
fists
gs
leave
dec
pop
adc
pop
jl
or
mov
mov
cmpsb
orb
cmc
pop
mov
push
adc
aaa
idivl
mov
push
loop
fsubl
mov
data16
fcomp
imul
or
mov
dec
movsb
add
jmp
push
in
or
frstor
sbb
push
xor
push
repz
out
inc
pop
aas
adc
outsb
repz
in
sbbb
push
fs
call
add
mov
loop
dec
loopne
add
add
xchg
fstpl
pop
sti
push
jbe
mov
fwait
mov
push
fstl
jle
dec
cmpsb
lea
inc
cmpsb
mov
mov
add
and
xchg
adc
stos
shll
mov
mov
pop
dec
cli
jbe
xchg
adc
aam
mov
js
out
cltd
push
je
jno
push
mov
daa
and
inc
sbb
cmp
pop
mov
or
inc
cmp
xchg
mov
ret
adc
jp
dec
and
les
xlat
pop
mov
fcomp
add
and
xor
pop
jns
pop
inc
scas
dec
mov
push
and
out
pop
push
sub
sbb
fwait
rorb
sub
mov
push
fisttpll
aaa
push
std
xor
add
jne
jp
clc
adc
in
push
icebp
lea
imul
out
push
sub
xchg
popf
xor
mov
push
or
out
mov
int3
mov
movsb
fmull
dec
lea
mov
repz
mov
insl
adc
js
hlt
mov
test
mov
loopne
dec
pop
or
inc
imul
outsl
rorl
or
adc
mov
mov
lds
mov
lahf
jge
fldl2t
cltd
iret
mov
out
fildl
ja
xor
clc
cwtl
inc
addr16
xorb
xlat
popf
add
push
or
rorb
mov
testb
xchg
sbb
dec
cld
xchg
jle
imul
mov
lods
mov
fcmovnu
into
xchg
pop
jb
out
pop
in
ss
dec
xlat
idivb
sbb
loope
jge
icebp
scas
xchg
mov
and
cltd
aad
sub
xchg
pop
add
imul
pop
mulb
scas
add
mov
cmpsb
test
ljmp
nop
cld
pop
dec
stc
inc
xchg
dec
xor
sar
cmpsl
shlb
sub
dec
es
sub
sarb
xchg
or
mov
mull
add
xchg
rorl
add
aam
shlb
cmp
dec
mov
and
std
cld
aam
lods
mov
pushf
daa
inc
insb
or
arpl
in
nop
hlt
sub
or
mov
gs
ds
jns
test
add
aam
jnp
out
lcall
xchg
loope
cli
xor
cmp
int3
push
pop
jle
pop
out
mov
scas
jns
sbb
xorb
jg
adc
loope
mov
push
xor
push
and
add
xor
icebp
ja
xor
enter
mov
cmp
jb
ret
sbb
and
add
imul
out
inc
out
fcomi
xor
jecxz
jecxz
lods
roll
dec
pop
orb
inc
jo
jo
mov
ret
fistl
mov
push
jp
jns
push
mov
mov
sub
mov
xchg
pop
mov
faddl
push
add
xchg
xchg
sti
and
insl
dec
pop
inc
adc
jle
push
movsl
ds
jmp
jmp
push
popa
test
mov
sub
lahf
in
fistl
mov
icebp
add
je
mov
and
sbb
fsubs
jne
mov
out
sbb
cmp
fwait
cmpsl
push
jne
mov
stos
mov
jge
addr16
adc
push
mov
push
add
loop
mov
add
or
sub
jmp
mov
lds
mov
inc
adc
push
sub
shrb
aas
xchg
jnp
lods
cmpsb
shrb
mov
pop
in
push
dec
jmp
mov
hlt
inc
push
jb
pop
and
sahf
repz
fs
adc
cmp
push
inc
inc
mov
cmp
repnz
and
mov
sti
int3
pop
mov
add
and
push
fistl
jno
bound
push
xor
cmp
ret
and
inc
popa
cmp
cmc
sub
xchg
aas
push
gs
pop
xchg
popl
sbb
pop
jno
jno
dec
xchg
push
std
and
movsl
popf
div
in
call
fdivrl
test
fimuls
pop
xchg
mov
sarb
stos
sub
mov
mov
fadds
enter
jmp
inc
in
movsl
test
sbb
icebp
iret
shrl
movl
out
inc
pop
jecxz
and
pop
ffreep
mov
xor
mov
jg
enter
fidivs
es
mov
lret
and
popa
push
loop
in
mov
push
sbb
ds
pusha
lods
push
cld
test
cmp
jae
pop
xchg
cmp
outsb
adc
pop
pop
std
sahf
mov
ja
adc
repnz
pop
lods
push
leave
sarb
test
leave
mov
fisubl
push
jne
xchg
jo
xchg
mov
arpl
mov
adc
mov
and
add
rcl
pop
lods
fcoms
sbb
mov
inc
push
pop
test
or
mov
mov
cmp
movsb
add
ss
int3
repnz
xchg
int3
out
lods
and
inc
ficoml
cmp
cld
inc
movsl
aas
xchg
xchg
push
dec
mov
cmp
or
mov
enter
push
mov
mov
adc
jae
test
loopne
pop
js
xor
xchg
test
add
adc
negl
imul
fmuls
ficoml
fwait
cltd
sbb
inc
mov
ret
testl
das
mov
sahf
adc
int3
mov
pop
mov
mov
shl
ret
fsubrl
add
pop
insl
scas
rcrl
fildll
setae
inc
xor
add
mov
jbe
mov
leave
and
lret
repz
jecxz
jae
mov
jbe
inc
cmp
push
stc
loopne
jbe
stos
sbb
dec
cmp
adc
jb
dec
sarb
mov
xchg
test
fadd
shl
adc
and
cmpsb
std
cmp
scas
and
sbb
pop
pop
pop
pop
sbb
sahf
xchg
jnp
jb
int3
rcrl
mov
outsl
shlb
nop
mov
and
xor
xor
dec
push
jecxz
mov
mov
inc
push
rcl
inc
cs
xor
lods
insb
push
push
stos
fbstp
loop
add
pshufw
ljmp
call
pushf
fsubrl
mov
out
sub
imul
out
xor
aaa
dec
mov
inc
jp
adc
out
sbb
aam
push
xchg
popa
inc
mov
cmp
aam
jne
cmp
cltd
bound
add
lret
add
jns
inc
movsl
popf
imul
sbb
mov
push
cwtl
mov
mov
xchg
sub
mov
mov
mov
inc
jbe
popf
rcrl
ror
inc
mov
fstp
lods
xchg
and
jmp
repz
rol
lds
mov
and
jns
pop
dec
add
mov
xor
roll
mov
stos
fstpl
push
jae
pop
mov
and
icebp
mov
inc
lds
dec
push
and
xor
stos
sbb
push
cwtl
mov
sub
push
data16
lret
mov
repz
push
mov
enter
push
lds
xchg
outsl
sbb
pop
inc
xchg
inc
lds
push
push
xor
xchg
or
inc
sahf
cmpsb
mov
fld1
push
lret
subl
fbld
mov
cmp
push
add
ss
test
loop
cmp
out
scas
xchg
lret
sbbb
iret
ror
pop
and
pushf
mov
sbb
push
sub
mov
bound
out
decl
xor
or
mov
outsl
test
pop
daa
xchg
jbe
pop
mov
cmp
test
dec
movsl
test
inc
xchg
inc
sbb
insl
popa
fs
xor
pop
rorl
mov
and
mov
jae
adc
rorl
int3
pop
sbb
lea
in
mov
cmp
pop
je
popf
out
fists
outsb
lret
sbb
div
into
hlt
add
sub
adc
push
dec
int
cltd
loopne
bound
fldcw
cmpsl
cmpxchg
lods
mov
sbb
fdiv
jno
orl
inc
mov
or
push
cmp
mul
pusha
or
ljmp
inc
movsb
mov
decb
ret
clc
xor
jo
nop
js
loope
sbb
jne
aaa
ds
xlat
fcmove
out
sarb
adc
stos
xor
mov
xor
sahf
fs
cmp
lock
mov
mov
das
insl
les
and
aas
test
gs
mov
insb
or
pop
cwtl
fmulp
push
push
jge
xor
mov
das
test
mov
or
mov
shll
testl
cmp
dec
mov
mov
movsl
das
mov
dec
out
add
pop
xor
aam
xor
jae
shlb
cmp
dec
mov
and
aas
xchg
aaa
dec
pusha
mov
push
invd
jno
or
arpl
dec
mulb
xchg
in
insl
jg
loopne
push
test
inc
or
movsb
fldl
ficomps
sbb
jo
aad
dec
lcall
fisttps
divl
outsl
movsl
nop
sbb
in
add
jne
mov
mull
popf
mov
lods
mov
fisttps
cmpsl
xor
movsb
xchg
icebp
sub
call
insb
mov
clc
push
push
mov
mov
xchg
mov
loop
shl
into
fldenv
lcall
into
jg
jnp
movsb
sbb
enter
xchg
jne
mov
adc
outsb
mov
add
movsl
sbb
xor
adc
cmp
call
adc
lret
and
dec
out
sahf
fcoml
inc
inc
and
and
adc
xor
inc
inc
int3
sbb
insl
out
mov
nop
inc
insb
sahf
lods
jns
cmp
lods
js
scas
in
fs
test
ret
cmp
push
add
mov
mov
add
out
out
cmp
imul
mov
push
cmp
inc
cli
xchg
mov
int
cmp
pop
ss
daa
outsb
or
repz
repz
scas
jae
shrb
test
cmp
xchg
insl
and
nop
outsb
dec
js
push
push
lds
lahf
mov
pop
push
int3
xor
outsl
pop
ljmp
out
push
jmp
sbb
lret
jle
adc
std
jae
clc
arpl
pop
adc
jae
insb
dec
pop
mov
inc
enter
push
shl
stos
push
mov
int3
pop
and
std
lea
addb
or
mov
and
xchg
stos
dec
jbe
lds
repz
in
orb
lea
push
mov
cltd
stos
dec
xchg
push
outsl
loope
mov
add
test
sbbb
or
jnp
test
push
pushf
inc
jl
in
push
mov
xor
ja
scas
xor
or
mov
out
not
sub
rcr
push
fdivrs
cli
mov
cli
add
mov
dec
negb
in
mov
testb
mov
push
inc
scas
popa
clc
dec
js
movsl
nop
jnp
mov
adc
jl
addl
jnp
popf
mov
jae
test
mov
xchg
adc
mov
xchg
add
scas
and
mov
adc
jb
scas
lods
fstpt
loope
cmp
dec
in
cmp
sub
push
dec
sbb
jnp
sbb
sti
xor
lret
cltd
pushf
add
push
jae
jecxz
fists
inc
int3
mov
ja
cmp
call
mov
daa
es
mov
mov
addr16
sbb
mov
movsb
xchg
jp
inc
dec
mov
fnsave
push
mov
cmp
sbb
call
fld
data16
mov
or
fsubrl
lret
in
cmp
in
push
lods
cmp
addr16
clc
rol
pushf
or
push
dec
cltd
xchg
loope
movsb
mul
pop
or
lods
push
and
xchg
and
fcmovnu
push
xchg
mov
jne
bound
adc
push
xchg
popa
cmp
nop
jmp
es
inc
inc
popf
xlat
dec
add
arpl
xchg
dec
sub
rclb
sbb
out
orl
sub
xchg
jb
sti
xchg
pop
bound
inc
mov
loop
ret
cmpsb
jecxz
ret
lock
outsb
sahf
jle
adc
inc
add
pop
ljmp
test
jle
sti
ljmp
dec
mov
cmp
adc
stc
jae
push
inc
movsb
nop
sub
inc
stc
movsb
mov
add
jg
sub
inc
pop
lcall
cmp
sub
outsl
out
cmp
imul
add
out
mov
mov
fistps
lahf
adc
outsl
int
xchg
stos
inc
mov
xchg
out
stc
push
pushf
lock
mov
cmp
dec
daa
dec
outsl
jge
xchg
dec
jb
out
xchg
pushw
lcall
mov
jb
adc
or
clc
sub
add
outsl
imul
push
cld
pop
out
mov
and
pcmpeqb
cld
push
or
inc
in
data16
and
ror
xor
arpl
test
push
cmp
movsb
cli
shrb
mov
mov
in
cmpsb
jecxz
jnp
push
xchg
jno
popf
add
pop
stos
sub
mov
hlt
lret
andl
adc
shll
fsub
mov
rcr
mov
cmp
mov
loop
inc
inc
xor
dec
es
and
mov
push
scas
mull
cwtl
mov
lds
addr16
jecxz
popf
vcvtps2dq
add
xor
mov
add
xor
addr16
dec
hlt
inc
dec
sub
jge
or
test
mov
mov
push
push
push
adc
sbb
push
lcall
jl
xchg
inc
or
mov
icebp
xchg
test
pop
pop
clc
jmp
sub
adc
imulb
xchg
div
stos
popf
fcomps
repz
fwait
and
lods
pop
mov
push
pusha
das
adc
rcr
movsl
fs
xchg
stos
test
out
mov
sub
sbb
loope
mov
xor
and
sbb
dec
loope
dec
popa
lock
push
dec
xor
je
add
popf
push
insl
sbb
fcoml
add
fidivrs
test
rcrl
pop
adc
outsb
cmp
test
xor
fnstenv
mov
add
popf
jno
pop
fisubrs
mov
aaa
int3
sbb
fcoml
fldenv
lods
mov
stos
and
xchg
mov
sub
sbb
out
mov
cmp
xorb
xchg
enter
dec
in
ljmp
pop
out
and
mov
loope
pop
and
mov
cli
xor
rcrl
sbb
mov
call
cmpsb
xor
push
dec
or
je
xchg
loope
sbb
or
fnstcw
or
test
sti
fs
ds
and
test
test
lods
sbb
sbb
sbb
inc
dec
jns
xor
cltd
adc
jle
adc
iret
leave
hlt
mov
jge
mov
sarb
stc
inc
bound
push
inc
xlat
lret
testb
xor
lods
mov
fcomip
sarl
subl
inc
sbb
lahf
int
repnz
sbb
xor
jnp
imul
lods
dec
addr16
repnz
push
fidivrl
cli
add
mov
jp
jnp
scas
je
adc
pop
addb
mov
orl
mov
mov
movsl
bound
popa
frstor
leave
ja
or
mov
lock
cld
lods
sub
xchg
sbb
or
decl
in
test
jbe
add
int
and
insb
jg
loop
adcl
jmp
stc
adc
cli
clc
jb
test
fisubl
inc
mov
bound
faddl
lret
lcall
test
pop
xchg
mov
imul
cld
int
jge
popf
inc
or
mov
shl
sub
push
mov
or
outsl
pop
xchg
sub
aas
pop
lret
xorl
hlt
push
mov
pop
out
out
ljmp
and
int3
or
push
pop
push
repz
popf
ret
jge
fidivrl
je
pop
les
lods
jp,pt
lock
iret
ret
mov
pop
xchg
fldt
mov
pusha
mov
add
fs
dec
iret
mov
imul
xchg
dec
or
and
mov
cvtss2si
ljmp
iret
xchg
sbb
int3
mov
push
sub
lods
adc
push
mov
ja
mov
and
popa
add
add
pusha
pusha
lcall
pslld
popf
push
lret
roll
jne
outsb
js
adc
aad
inc
popa
fmull
and
xchg
and
push
mov
les
inc
lahf
lahf
and
push
dec
outsl
je
lcall
shll
mov
mov
sbb
test
xchg
and
mov
mov
loopne
out
inc
jmp
lret
std
lds
pop
xchg
adc
sub
ret
rcrl
subb
nop
ljmp
fildll
loopne
loop
or
and
aaa
mov
push
cmp
or
xor
jb
xchg
and
div
cmp
imul
xchg
mov
and
mov
jb
in
mov
sub
pop
mov
test
add
fmull
add
xchg
add
outsl
mov
mov
out
mov
jno
add
lahf
movsb
test
roll
rolb
push
imul
lret
repz
or
into
cmpsb
scas
mov
arpl
rorl
mov
push
adc
test
mov
inc
fnstsw
cltd
and
cmp
cmpsb
mov
shlb
push
mov
cmp
decl
mov
and
adc
bound
lahf
sbb
jp
jae
jmp
push
mov
xchg
iret
lahf
lods
push
aas
std
inc
sahf
les
xlat
jae
pop
xor
clc
mov
stos
jne
jmp
stos
mov
shll
adc
aas
ret
jo
push
orl
ss
xchg
test
xor
lahf
loop
int
jae
mov
setns
aas
or
or
iret
or
push
mov
push
cmp
movsb
test
add
xor
inc
xchg
inc
xchg
jne
sbb
mov
bound
inc
icebp
fidivs
xchg
pop
add
pop
scas
push
in
or
test
fs
jecxz
jl
enter
push
cmpsb
shrl
cmp
pushf
outsl
and
fisubrs
mov
leave
or
cmc
inc
or
das
mov
pushf
cmp
add
dec
idivb
fidivrl
shl
cmpsb
and
push
ret
xchg
sti
leave
xor
imul
shlb
dec
adcb
es
pop
negl
sbb
mov
enter
psubq
loope
call
xor
addl
mov
insl
jns
add
or
fbstp
sbbl
inc
shlb
scas
fcomip
popa
mov
mov
popf
clc
mov
and
dec
shll
inc
aad
outsl
stc
repnz
out
leave
cmp
loope
cmp
and
fistpl
sar
jge
xchg
cmp
xchg
xor
jbe
mov
sbb
xchg
movsb
jns
sub
sahf
mov
cltd
das
cmpsl
mov
cmp
jmp
ljmp
push
lcall
jl
jnp
jl
adc
nop
syscall
lahf
xchg
movsb
pop
loop
popa
pop
popf
pop
xchg
int3
push
push
xor
adc
push
loope
jle
sub
adc
pop
cmp
neg
pusha
xchg
cmc
push
jmp
adc
je
mov
xchg
or
sbb
xchg
scas
pop
sbb
out
push
xor
inc
mov
xor
test
or
fsubrl
in
inc
imul
lock
add
fwait
test
push
in
push
add
inc
sbb
cmp
adc
sbb
lods
stc
cs
pop
push
mov
cmp
lods
pop
mov
test
mov
cld
cmp
fsubrs
imul
pop
imull
sti
fwait
leave
fs
cmp
loopne
andb
pusha
add
leave
inc
xorb
mov
pop
cmp
sbb
lock
lds
pop
xor
push
popl
mov
mov
pop
mov
sub
jmp
xchg
cltd
dec
xor
adc
ret
scas
mov
mov
add
xchg
mov
call
xchg
sub
lods
lahf
mov
mov
pop
aaa
mov
mov
and
test
out
imul
pusha
aad
or
fs
add
xchg
jbe
xchg
stos
mov
inc
test
dec
xor
sub
jne
popa
ret
adc
lods
sbb
push
xchg
jno
sub
jo
loope
and
pop
dec
int3
jo
mov
dec
jnp
add
lret
jle
jo
hlt
loopne
xchg
imul
sbb
dec
push
addl
sbb
inc
xchg
and
xchg
xchg
push
xor
add
push
imul
hlt
mov
lods
mov
cmpsl
insl
adcl
lods
sub
xor
inc
scas
dec
xor
sahf
cmc
js
adcb
mov
cmpl
sub
repnz
jge
shr
jmp
add
cs
xchg
sahf
fistpll
stos
mov
rolb
adc
adcl
xor
or
cmpb
dec
add
cmpsb
or
std
mov
addr16
push
mov
aaa
cmpsb
lds
vphaddbq
mov
loop
inc
mov
int3
cmp
lock
lods
iret
mov
arpl
xchg
add
and
jl
in
push
sub
and
mov
xchg
inc
mov
adc
faddl
sub
aad
loopne
add
mov
outsb
fisubs
jb
stos
ljmp
movsl
cmc
cmc
cmp
mov
mov
push
addr16
movsl
sahf
mov
mov
pop
pop
nop
imul
out
dec
push
insb
fbld
leave
jae
sbb
rcrl
adc
int3
xchg
mov
imul
popa
jl
push
mov
jge
push
cmc
lds
insl
call
ficoms
sub
inc
dec
sbbl
idivl
std
das
cmp
xchg
mov
jne
lock
xlat
aad
sbbl
test
push
cmp
shlb
das
test
or
arpl
flds
lret
imul
or
cmpsb
jg
sti
mov
divl
test
mov
adc
mov
push
subl
fimuls
je
clc
insb
fstl
roll
mov
pop
xchg
cmpsl
sti
notb
adc
xor
xchg
lahf
jg
in
xchg
icebp
loopne
jno
xchg
fiadds
push
xlat
fldl
xor
xchg
mov
xlat
in
subb
test
clc
les
fsub
cmpsl
sbb
push
inc
inc
xor
jecxz
jo
mov
mov
fs
aad
fmull
dec
bound
lods
cmp
dec
out
aam
in
std
adc
aas
sub
pusha
jp
mov
inc
xchg
push
mov
lods
ret
mov
inc
jno
sub
add
cld
xchg
pop
fwait
cltd
dec
xor
add
sub
dec
xor
repnz
lock
inc
inc
mov
lock
ret
sub
out
stos
mov
jl
sub
inc
push
std
es
push
push
lock
push
rcrl
xorl
fmulp
cltd
mov
mov
cli
sbb
pop
jb
xchg
mov
bound
lods
mov
ret
pop
mov
jnp
cmp
jmp
jne
cmp
and
push
mov
iret
cmp
sahf
sub
cld
ss
lds
test
lret
sub
lds
scas
aas
and
push
lds
xchg
or
mov
je
adc
and
in
loope
sbb
or
sbb
stc
mov
pop
fadds
dec
test
cmc
jae
rcrb
cwtl
jns
sar
mov
shr
inc
inc
push
mov
or
fidivrl
push
xor
xor
enter
loop
int
mov
xor
lds
cmp
xchg
int
int3
mov
jg
into
push
pop
adc
pop
pusha
int
adc
sar
mov
jnp
cli
iretw
enter
idiv
pop
out
xchg
scas
mov
rorl
sbb
cmpsb
xor
mov
adc
xor
mov
das
insl
sbb
sbb
push
mov
into
std
xor
fldt
int
lods
shr
cmp
sub
mov
enter
push
lahf
fldenv
pop
std
jecxz
aad
push
xchg
cmpsl
inc
in
lods
sbb
fmull
inc
cmp
test
cli
in
fcoml
inc
cmpsb
dec
pop
xchg
pop
lcall
addl
xor
mov
push
pop
push
jmp
add
jnp
sub
pop
and
xor
orl
xchg
add
outsl
sbb
sbb
inc
out
shrb
rolb
leave
rol
mov
and
mov
mov
sti
int3
mov
lods
lcall
push
mov
xor
aad
jae
divl
mov
sub
jne
gs
fmuls
jmp
sbb
or
ss
or
ffree
sarl
lret
and
mov
push
fnstsw
movsl
xor
bnd
mov
stos
fsubrs
or
cld
mov
xor
mov
jno
test
in
xor
cmp
leave
stc
roll
dec
lahf
jns
mov
and
fs
sti
sbb
jno
mov
lahf
cmp
xchg
dec
xor
xor
xor
mov
mov
pop
dec
sbb
movsb
scas
pop
out
push
and
lcall
xchg
inc
in
sbb
mov
cmpsb
cwtl
jnp
xchg
cmpb
scas
cltd
mov
sbb
lcall
sbb
lods
mov
aad
jns
in
add
xor
xor
inc
in
and
int
lock
out
or
jbe
imul
fiadds
leave
adc
scas
fcmovu
or
mov
movsb
scas
ljmp
dec
push
mov
pop
das
sbb
mov
xchg
insb
pop
mov
or
add
loopne
shrb
popa
pop
or
xor
add
stc
dec
jge,pt
mov
icebp
in
int
sub
int3
gs
xor
fldenv
fwait
or
or
jge
mov
xor
aad
ja
mov
fstpt
popf
xchg
xchg
mov
imul
cltd
arpl
mov
es
enter
cwtl
mov
movsb
icebp
push
cwtl
xchg
lods
cwtl
das
out
and
adc
sub
pushf
cmp
add
mov
js
into
int
cmp
sub
lea
xchg
adc
imul
push
or
mov
repnz
inc
cmp
xchg
jmp
push
jb
shrl
outsl
shl
shlb
pop
pop
lahf
jge
stos
xchg
jbe
lods
push
mov
lret
arpl
push
cmp
inc
sub
inc
push
in
pop
mov
sbb
push
int3
lcall
push
sti
shrb
aaa
push
xor
pop
fldcw
sbb
clc
dec
push
ret
add
adc
push
mov
push
xor
cwtl
push
pop
ds
imul
arpl
sti
mov
mov
lret
sub
jae
pop
mov
sub
int3
mov
jae
adc
pop
sar
lods
push
add
mov
mov
pop
adc
ret
mov
jb
scas
mov
xchg
push
push
jno
or
aad
mov
jp
rolb
and
jo
es
and
mov
imul
dec
lahf
lahf
filds
inc
cmpl
adc
aas
fs
mov
cs
adc
pop
sub
out
icebp
inc
das
push
in
daa
mov
lahf
in
ret
pop
mov
add
cwtl
test
pop
lahf
mov
push
popf
or
and
mov
loop
sub
dec
mov
add
jmp
cmpsb
shlb
out
aas
lret
insb
and
jmp
mov
adc
fisttps
std
xor
lret
xchg
mov
mov
fdivs
lcall
aam
sbb
mov
mov
movl
idivl
test
mov
out
aad
test
sub
pushf
or
repz
nop
iret
cli
in
pop
push
rclb
inc
ret
mov
xchg
mov
hlt
outsl
sarl
ret
insl
divb
mov
mov
or
stos
pop
xchg
push
or
sub
mov
aad
dec
and
loop
push
lds
mov
aaa
roll
sbb
fisubs
roll
mov
out
int
je
push
pusha
lock
adc
sub
cmpsb
inc
sahf
fstl
mov
movsl
sub
ss
inc
jcxz
stc
inc
mov
lcall
jno
fwait
sbb
mov
nop
addr16
or
or
lret
mov
xchg
fwait
cmp
out
pop
dec
mov
dec
mov
xchg
xchg
mov
ret
push
sub
sar
fdivr
cmp
and
mov
call
aaa
les
cmpsl
dec
add
adc
in
mov
mov
xchg
push
fdivrl
pop
jecxz
sbb
fdivrl
jnp
fwait
adc
fcom
mov
push
add
push
lret
mov
popa
jns
jno
out
fadds
inc
lret
mul
call
out
cmp
enter
mov
cmpsl
lods
xor
mov
out
mov
cvtps2pi
ss
scas
outsb
aas
cmp
pop
jb
lods
mov
pop
pop
push
mov
fcmovbe
push
xor
add
nop
ja
cmc
and
mov
sub
popa
jnp
jle
cmp
adc
add
test
add
jns
inc
fstl
popa
cmp
sti
push
imul
push
add
jbe
mov
push
popa
push
jns
imul
dec
sub
sbb
sub
arpl
dec
aaa
jb
jnp
mov
push
mov
pop
nop
xchg
ffree
lods
pushf
mov
aaa
xor
mov
push
test
fisubl
or
dec
cmp
test
jns
mov
pop
arpl
inc
xchg
notb
mov
test
or
mov
clc
mov
add
sarl
inc
pop
sbb
pop
sub
xlat
add
inc
inc
mov
insb
sub
cwtl
pop
inc
jbe
cmp
inc
jmp
test
push
pop
sahf
or
and
jle
inc
pop
inc
inc
mov
loop
xchg
jne
mov
cwtl
xchg
add
scas
adc
dec
pop
pop
dec
sbb
cmpsl
jg
cmpsb
mov
xchg
mov
and
ret
push
test
add
hlt
mov
lds
cmp
lods
jns
sahf
jno
js
imul
fildll
cmp
jl
ret
xchg
mov
mov
rorb
xor
adc
js
jbe
cmp
push
negb
scas
subl
pushf
inc
sbb
stc
in
sub
push
dec
push
roll
xor
lahf
pop
cmp
in
mov
test
in
add
xchg
dec
mov
lea
loopne
jle
mov
push
lcall
ret
popf
xor
sub
or
xchg
mov
shl
push
rolb
jecxz,pt
arpl
fs
lods
les
push
mov
shlb
mull
or
out
push
cld
out
mov
jle
push
out
lret
test
jecxz
or
sahf
adc
cmp
cmp
lods
fwait
mov
or
aam
fsubrl
mov
int
xchg
mov
lods
push
pop
mov
push
test
rolb
inc
loopne
and
jge
fists
stos
stos
aas
mov
sub
adc
dec
aaa
cmp
jge
adc
jns
or
addr16
sbb
inc
movsl
push
xchg
insb
xchg
cwtl
insl
or
insb
mov
mov
add
jp
adc
or
shlb
sbb
push
sbb
test
push
mov
icebp
in
mov
in
dec
mov
sti
lahf
add
xchg
jmp
cmp
aam
rsqrtps
in
sbb
push
push
jl
push
mov
cld
stos
loopne
cmpsl
jmp
pushf
or
xor
xorl
add
jecxz
and
sbb
out
cmc
movsb
mov
add
repnz
xchg
adcl
and
push
mov
jb
stos
adc
xor
dec
xor
outsb
mov
cwtl
ds
jle
cld
lret
and
pushf
xlat
sub
aam
loope
inc
mov
add
dec
adc
enter
imul
adc
dec
leave
jp
sub
xlat
test
jbe
rcl
outsb
pusha
fnstcw
flds
mov
in
xchg
pop
mov
pop
dec
jge
pushf
pop
mov
rcrl
or
cmpsl
out
in
movl
mov
data16
idiv
movsl
lret
insl
adc
inc
jno
loope
and
xchg
xchg
movsb
or
xor
mov
mov
sti
out
push
push
pop
mov
lods
out
aaa
in
mov
mov
push
xlat
sbb
mov
push
in
push
sbb
cmpsb
cmpsb
mov
cmp
mov
inc
pop
ret
lods
mov
dec
pop
loop
adc
inc
hlt
pop
sub
js
sub
jp
sub
dec
jae
je
shlb
fs
and
sub
out
stos
setne
dec
aaa
fdivrl
dec
movsb
scas
adc
loop
sbb
jmp
sub
ljmp
sub
xchg
cwtl
pop
xchg
in
rcrb
fsubrs
aaa
sub
dec
lea
mov
movsb
fwait
and
mov
inc
xlat
mov
hlt
ret
fidivl
jge,pt
pop
mov
call
stos
arpl
stc
mov
dec
in
mov
ljmp
leave
aaa
ja
inc
cmpl
iret
or
dec
inc
loopne
dec
fiadds
fistps
jo
jg
push
pop
push
push
movsl
xchg
in
jg
addb
pop
lds
out
in
xchg
ret
add
add
imul
pop
mov
xchg
or
mov
push
hlt
andl
stos
fiadds
inc
jno
mov
cli
ret
mov
enter
jne
cmp
repz
fsub
out
dec
arpl
lock
aas
xor
js
lahf
ret
pop
pop
loope
cmp
hlt
in
rcrb
pushf
in
lock
and
fst
mull
lea
scas
pop
sub
in
and
xchg
fldl
adc
and
or
mov
icebp
cs
pop
pop
mov
enter
lds
aad
mov
jo
jb
mov
stos
pop
jbe
cmpsb
call
mov
sbb
push
mov
jno
shlb
mov
lds
jg
neg
pusha
scas
stos
push
or
ja
int3
adc
testl
jnp
adc
inc
jb
test
int
rclb
jne
mov
mov
push
inc
repnz
xor
out
inc
out
push
js
jns
scas
xchg
mov
inc
fnsave
mov
les
and
js
cmpsl
sahf
dec
outsb
insl
in
repnz
and
xor
inc
int
es
dec
pop
in
mov
add
inc
iret
loopne
or
icebp
pop
push
insl
sbb
rorl
out
ja
mov
aad
insb
test
and
lods
popf
push
sub
xchg
mov
pop
adc
les
pop
addr16
mov
fdiv
jbe
adc
pop
cmpsb
addb
adc
nop
push
cwtl
xor
scas
mov
cmp
rorl
mov
xor
pushf
lahf
sub
rorl
and
lea
cmp
je
jb
imul
rclb
stc
sbb
ss
fwait
loop
lds
call
lods
and
lods
mull
iret
sub
nop
sub
movsl
roll
push
cmp
shl
or
bound
test
call
in
mov
inc
test
stos
test
in
imul
imul
cld
xor
js
push
jb
popa
jp
insb
cmpsl
in
fucomp
jae
cld
sahf
dec
sbb
pop
mov
or
rcll
pop
arpl
xchg
xchg
out
lock
cmpsl
xor
imull
fistps
shll
nop
popf
fldenv
sahf
ljmp
test
add
adc
fdivl
mov
jbe
cld
push
adc
aaa
ljmp
outsl
push
add
add
xor
adc
in
xor
dec
cmp
ret
adc
out
aaa
fldenv
mov
stos
jne
fldenv
lret
int
jp
jns
dec
mov
pusha
push
cmp
ja
clc
repnz
not
mov
pop
dec
and
fsubrl
mov
jbe
jl
enter
mov
out
jnp
je
xor
jnp
and
cmp
sti
cmp
sub
jl
mov
dec
xchg
jbe
or
fcmovb
std
sbb
popa
sbb
pusha
rcl
jge
xchg
aas
inc
fwait
jmp
mov
into
or
iret
jl
or
ljmp
push
in
add
popa
mov
std
dec
cmpsb
dec
sub
int
call
addb
xor
daa
pop
jo
mov
pop
mov
pop
int
rclb
mov
sub
pusha
sbb
or
adc
or
jno
aad
es
ror
leave
sbb
push
and
pop
and
fxam
inc
ret
mov
cs
movsl
into
mov
sub
add
sbb
pop
sbb
mov
jp
xor
into
push
jp
bound
or
pusha
aad
aad
ss
sub
lods
incl
and
mov
xchg
sub
xchg
mov
idivl
inc
in
mov
add
xor
xor
ja
rorb
cmpsl
cmpsl
mov
xor
sar
adc
lods
fwait
cmc
jmp
xor
jbe
dec
test
js
stc
int
xlat
fimuls
int3
outsb
jle
dec
clc
decl
pop
mov
sbb
cmp
jo
sub
nop
cmc
leave
outsb
adc
test
fiaddl
inc
jge
sub
mov
in
sbb
ret
mov
ss
inc
mov
out
cltd
mov
fisubl
cmp
popf
mov
adc
loope
xchg
push
and
pusha
movsb
push
pop
mov
sbb
mov
lcall
mov
aas
outsl
lahf
xchg
push
test
mov
add
cmp
addl
pusha
cmp
out
js
fbstp
push
popl
xor
or
popa
jbe
cli
pusha
add
int3
push
jecxz
pop
add
aam
aaa
negb
pop
xchg
jle
mov
nop
pop
call
or
rep
add
jge
pushl
mov
mov
mov
pop
mov
cmp
icebp
iret
imul
imull
mov
aam
insb
aaa
jmp
or
sub
movsl
mov
les
movsb
inc
jp
sub
test
mov
jl
les
and
jle
clc
out
mov
mov
std
sub
mov
xor
leave
inc
add
insl
xchg
xor
imul
dec
stc
insl
subl
outsl
nop
lahf
mov
sub
ja
mov
fmul
data16
fcomi
popa
mov
push
adc
inc
leave
addr16
xor
lret
mov
lock
jno
or
xor
mov
pop
push
aas
jbe
dec
loope
or
sbb
aaa
int3
mov
lcall
lcall
jbe
mov
push
or
adc
dec
pop
dec
cmp
jmp
cli
jbe
ret
lods
insb
mov
mov
inc
in
mov
dec
and
xchg
rcl
push
pop
les
lret
lods
inc
testb
or
lcall
ds
sbb
xchg
adc
sub
insb
es
hlt
or
jge
mov
add
in
add
or
push
shrl
dec
pop
repnz
cmc
sbb
dec
shlb
in
clc
sub
xacquire
jnp
ss
popa
sarl
xlat
xchg
cwtl
mov
sbb
gs
cmc
pop
test
loop
loop
mov
js
pop
mov
movsl
push
ficoms
adc
inc
rcrl
lods
ss
sub
imul
lods
repnz
lds
mov
in
loope
inc
sti
cmp
and
dec
in
ja
adc
data16
adc
pusha
sbb
imul
test
xchg
xor
cltd
sbb
jecxz
into
andl
dec
fsub
cmp
mov
lahf
xlat
sbb
fcompl
sub
adc
mov
cwtl
lea
mov
mov
sub
or
mov
or
dec
dec
push
cmp
adc
and
subb
jge
dec
outsb
dec
xchg
das
push
xor
sub
into
imull
inc
int
into
popf
and
loop
jmp
cbtw
push
pop
xor
push
adc
rorb
mov
mov
pop
push
sbb
jge
jns
pop
cli
mov
mov
cmp
inc
out
hlt
repnz
loopne
dec
mov
adc
jle
stc
sarb
sarb
mov
or
jle
test
mov
fcom
test
arpl
jg
dec
add
jge
shll
push
mov
adc
fcomps
popa
adc
mov
movsl
lahf
in
mov
ret
and
ss
movl
push
mov
faddl
mov
dec
enter
outsb
fdivrl
fwait
fwait
fwait
fucomi
pop
jns
pop
sahf
aad
call
pop
xchg
xchg
mov
or
std
rorb
jae
lret
js
out
ret
loop
add
cmp
or
adc
testl
sub
js
insl
bound
fsubs
lret
clc
test
adc
dec
fs
xchg
inc
mov
pop
or
add
in
cli
adcb
dec
test
loope
out
aaa
add
dec
add
scas
loop
xor
stos
xor
mov
lods
dec
xchg
cmp
mov
rol
scas
ds
lea
jg
push
jb
ss
into
cmp
jns
jns
divb
jg
dec
int
xor
stos
add
or
popf
repz
data16
pop
int
int
je
fxch
adc
jmp
mov
jns
xor
push
daa
loopne
cmp
sbb
rclb
jb
or
mov
es
mov
add
mov
testl
mov
xchg
inc
pusha
add
test
ret
lahf
adc
mov
sub
ja
jmp
test
push
adc
lcall
out
lret
sub
xorb
inc
xor
xor
jecxz
push
sub
cmp
sub
dec
gs
sahf
pop
or
mov
fdivrl
test
mov
jae
pop
int
dec
push
orl
or
nop
jle
mov
aam
cmp
test
out
add
inc
push
or
daa
mov
cltd
xchg
ret
mov
push
push
stc
or
pop
and
sbb
hlt
jp
shrb
into
dec
out
xor
sub
xchg
out
xchg
sub
notl
mov
jo
test
addb
cmp
add
aad
mov
cmpsl
xor
lret
xor
add
xchg
xor
sarl
cmp
int
sub
cld
loopne
push
mov
inc
push
jo
push
xor
xor
je
sub
sbb
cld
insb
mov
sub
in
stos
push
ret
fiadds
inc
dec
add
lea
pop
sbb
fisubl
cmp
aad
cmp
lock
enter
mov
popf
sub
cltd
mov
sbb
push
and
xchg
xchg
inc
inc
mov
and
sub
adc
sub
aad
sbb
iret
mov
popa
pop
add
and
push
mov
cmp
call
cmpsl
aam
rorl
shrl
lds
and
cmp
dec
pop
call
or
cs
sahf
js
add
int3
mov
test
nop
push
jecxz
out
lcall
into
pushf
stc
push
mov
add
sub
outsl
negb
dec
lock
jg
add
imul
ja
test
sub
jo
xor
insl
xor
gs
lcall
mov
or
and
lock
push
test
xor
dec
xchg
and
mov
test
sub
or
push
push
xchg
xchg
push
sub
pop
push
hlt
mov
or
pop
daa
mov
xchg
or
mov
pop
jmp
icebp
mov
pop
xor
shll
xchg
pop
ds
cs
push
sbb
cmpb
push
fidivs
add
lret
insl
adc
push
cli
jnp
adcl
sub
stos
cmc
mov
or
mov
lea
xor
dec
sub
shr
push
dec
hlt
or
xlat
and
jmp
aas
xor
stos
push
mov
xor
jae
out
sbb
push
or
dec
notb
sbb
outsb
notl
inc
inc
adc
jl
inc
in
das
std
fwait
popa
pop
jnp
lods
push
test
xlat
pop
mov
xor
mov
push
sub
js
fisttpll
data16
js
mov
lods
shrl
mov
mov
std
push
sbb
sub
jo
in
xchg
cld
out
add
mov
shll
and
sbb
into
add
sbb
add
adc
sub
pushf
pop
mov
insb
testl
rorl
add
nop
mov
sti
dec
out
ficomps
jb
jmp
movsl
clc
sbb
incl
pop
sahf
sub
test
aam
push
xchg
xlat
hlt
pop
add
inc
push
std
call
lret
fs
clc
or
jmp
mov
ds
aas
adc
cmp
lods
mov
push
test
mov
icebp
int3
jns
loope
cs
jge
cmp
xchg
mov
jge
stos
fadds
out
inc
pop
xchg
in
mov
andb
xchg
xchg
int
mov
daa
dec
std
mov
jle
test
xchg
lods
fs
call
fwait
xor
mov
sub
sub
rcl
shl
cmp
inc
pop
divl
mov
xchg
in
in
pop
or
inc
jo
test
cwtl
sbb
xor
repz
out
clc
inc
jae
mov
add
dec
jecxz
jge
mov
mov
outsl
into
mov
insb
and
cltd
enter
jo
adc
inc
mov
dec
fbld
scas
fwait
xchg
xchg
fdivl
das
mov
sub
test
imul
out
pop
je
orl
jne
add
jg
adc
push
mov
mov
hlt
jg
mov
and
mov
aam
push
mov
fdivrl
repnz
shl
leave
pop
push
lds
pop
cmpb
ja
xor
jno
loopne
mov
xor
scas
clc
xchg
push
ret
push
adc
push
movsb
shrl
lods
inc
mov
push
dec
mov
add
je
mov
icebp
lret
sub
jns
mov
pop
add
cmp
out
stos
xchg
rorb
incb
adc
int
mov
xchg
jae
and
inc
push
cmp
xorl
cmp
pop
lock
mov
icebp
ret
sbb
mov
inc
xchg
fistps
lock
mov
dec
jmp
add
add
jns
and
dec
rcll
shrb
out
mov
addr16
aam
adc
mov
mov
out
ret
aam
stos
jp
mov
aad
loope
pop
imull
jns
lods
jmp
fstps
iret
roll
sub
std
or
push
mov
test
loope
ret
les
dec
inc
mov
push
pop
mov
lahf
or
xchg
push
sbb
pop
push
stc
lcall
xor
imul
lret
push
sbb
cwtl
xor
in
mov
in
or
dec
sub
adc
inc
mov
pop
sbb
das
jo
mov
scas
and
les
mov
cmp
ret
jp
shl
or
inc
and
shlb
mov
ret
pop
xchg
sub
pop
ss
jle
xor
cmpsb
sbb
jmp
cwtl
in
js
mov
loopne
cmpsl
xor
mov
mov
sub
inc
add
call
gs
xor
test
adc
shrl
inc
js
or
int3
mov
or
hlt
scas
iret
inc
or
ss
add
jbe
mov
cmpsl
push
insl
ljmp
mov
push
xchg
push
mov
mov
adc
stc
add
lcall
jmp
aad
inc
test
je
mov
xor
inc
or
daa
out
mov
mov
jnp
outsb
subl
sti
outsl
loop
test
in
dec
cmp
fcompl
cli
mov
dec
clc
mov
mov
mov
add
xor
lods
sbb
lcall
push
adc
lea
xor
test
aas
add
jns
addr16
fnstenv
dec
pop
and
rcll
subl
add
pop
mov
in
xor
scas
push
mov
out
mov
ficomps
mov
mov
inc
lahf
xor
dec
leave
mov
cltd
test
xchg
pop
xor
dec
lahf
push
vmread
jno
cmp
stos
mov
enter
xchg
inc
push
push
push
pop
jmp
lock
jge
icebp
lcall
unpckhps
mov
cmp
jmp
sahf
scas
jbe
jge
repnz
imul
push
dec
jecxz
and
jnp
cmp
sbb
jmp
dec
mov
mov
inc
lds
js
mov
js
push
xchg
loop
jle
imul
adc
cmpl
xor
ljmp
xor
or
leave
inc
mov
lock
in
or
mov
sub
fisubs
fistpll
std
dec
icebp
cmpsl
sarb
sub
cmp
mov
xor
xor
push
mov
mov
or
or
push
pmaxsw
adc
ds
enter
pop
xor
test
repnz
insl
fnstenv
sarb
rolb
pushf
les
das
arpl
repz
sti
or
pop
stos
imul
mov
lds
xchg
mov
hlt
les
stos
sub
and
lret
add
lea
into
push
je
jmp
add
push
sti
push
shrl
rolb
mov
movsl
mov
ljmp
in
pop
mul
lock
push
js
inc
or
xor
sub
sti
mov
stos
loopne
js
mov
cli
or
cmc
ss
dec
ret
jnp
in
lods
and
sub
icebp
ss
es
cs
push
xor
adc
icebp
imul
negb
cmpsl
push
or
adc
sbb
mov
adcl
and
inc
xor
jmp
ret
loope
ret
xor
sbb
int
xor
sub
mov
inc
xchg
sub
cwtl
mov
test
dec
inc
xor
xor
sub
leave
pop
outsl
xchg
shrl
push
mov
xor
inc
in
mov
je
enter
and
mov
push
pop
jp
jg
add
adc
in
pop
testb
and
aam
out
daa
sbbb
cmp
xchg
not
nop
mov
mov
push
dec
stos
xor
jnp
js
sub
lds
jge
iret
lock
cmp
push
sbb
cmp
xchg
push
mov
mov
cmc
and
test
mov
push
xchg
dec
das
mov
jno
scas
sahf
dec
or
or
outsl
jns
sub
test
mov
in
xor
sub
inc
scas
xor
mov
sub
and
jno
ds
jg
cmpsl
mov
lods
leave
xchg
outsl
push
cli
and
sarl
xchg
push
call
inc
outsb
cmp
gs
int
in
ret
int
add
ja
mov
xchg
or
and
pop
popa
jae
insl
int3
shl
xor
jmp
fnstsw
pop
mov
out
pop
int
sub
ret
jne
sbb
push
push
add
stos
push
cmp
xor
cltd
bound
mov
je
jo
jne
inc
xor
dec
fiaddl
xchg
push
aad
rcll
ret
cmc
lret
iret
xor
int3
xor
mov
xor
push
pop
shr
sbb
test
adc
sub
and
test
xor
test
dec
push
repnz
cmp
fisubrs
lods
fcompp
jnp
cmc
lods
xchg
push
std
adc
lret
or
xchg
aas
push
xchg
mov
pop
cmp
out
pop
call
push
in
movsb
ja
sbb
filds
cmp
jl
adc
mov
into
cli
jmp
sbb
add
push
adc
or
test
xchg
or
arpl
mov
fs
mov
mov
or
sbb
pop
aaa
movsl
js
mov
add
bound
jae
repz
sub
cld
pop
mov
test
pop
repz
mov
iret
jbe
in
fcmovnb
dec
pop
jmp
inc
rcr
xchg
mov
fwait
jge
rcll
jl
sub
lock
jnp
ds
mov
add
xchg
js
mov
xor
in
je
push
xchg
push
inc
test
and
bound
nop
sbb
fwait
mov
pop
int
cmp
daa
xchg
imul
pop
cmovle
pushf
mov
xor
and
scas
mov
add
rcrb
sbb
mov
cmpsb
cmpsb
lock
lret
mov
into
sub
jp
fdivs
enter
cmp
and
rorl
and
fstpt
cmpsl
divl
arpl
mov
adc
sub
jp
mov
movl
pop
xchg
daa
jno
xchg
jle
shl
ja
xor
xor
popf
cmp
stos
in
imul
sar
cmpsl
loop
or
lret
cld
dec
pop
fildll
lcall
sahf
jmp
mov
pop
das
sbb
fimull
adc
outsl
mov
cltd
mov
xchg
out
dec
xchg
clc
jle
sbb
pop
add
shll
xchg
pushl
inc
loopne
test
mov
jp
sbb
jl
or
push
cmp
adc
outsb
mov
xor
sub
ret
mov
xor
dec
cwtl
sub
pop
fwait
mov
xchg
sub
sbb
or
mov
out
xchg
adc
inc
dec
add
cmp
mov
lcall
sub
out
popf
outsl
sti
pop
jnp
or
adc
fs
and
iret
outsl
push
ljmp
cmp
pop
jbe
mov
xchg
data16
fistpll
scas
push
mov
xchg
mov
loop
push
fimuls
mov
data16
xor
rcll
jbe
and
push
loopne
sbb
sub
pop
push
xchg
mov
sub
sbb
mov
in
xor
fidivrl
daa
imul
adc
push
je
pop
cs
mov
sahf
inc
xor
aad
addb
cs
bound
enter
in
je
aam
imul
in
dec
ret
test
mov
xchg
test
ret
add
shlb
push
and
push
cld
loop
cmpsl
cmp
cmp
mov
flds
jo
cmc
sbb
pop
dec
mov
jmp
pop
and
orl
ss
push
stos
mov
lock
jmp
add
or
in
fldcw
ficoml
pushf
mov
mov
nop
mov
aaa
fnstcw
pusha
push
nop
sub
sub
loop
pushf
insb
inc
sub
dec
xchg
outsl
push
stos
fst
jbe
cwtl
fs
aas
adc
mov
lahf
fcompl
xor
jge
ror
mov
dec
callw
pop
int3
out
dec
popa
repnz
xchg
push
enter
ud2
rcrb
sub
sub
push
push
jo
add
movsl
not
dec
xchg
icebp
adc
dec
and
lock
in
pushf
sub
stos
lret
jl
xchg
mov
mov
cmc
lret
mov
clc
arpl
add
mov
shll
jge
mov
cmpsl
pop
aad
push
scas
xchg
sub
scas
push
pop
popa
xor
jle
nop
rolb
sarl
roll
sub
sbb
ret
jmp
push
cmpsl
xchg
rcll
inc
mov
ja
fcoms
xor
or
mov
and
or
cmp
jge
mov
imul
xchg
jae
rol
in
lret
jne
add
cmpsb
ret
pushf
inc
je
cmc
and
ret
clc
insb
jl
adc
mov
and
and
fistpll
cmpsl
push
cs
sbb
scas
or
pop
cld
call
cmp
fistpl
xorb
pop
test
fstps
push
mov
movsb
mov
loopne
out
les
mov
cmpsb
out
jp
pop
sub
or
sbb
test
sbb
cmpsb
xchg
add
fcomp
cmp
lret
jecxz
data16
inc
popa
push
das
gs
add
sub
xor
dec
xchg
mov
inc
pop
jno
cmp
jne
ljmp
mov
call
mov
lret
and
cmpsl
incl
repnz
pop
adc
jnp,pt
push
sub
jg
fldenv
jbe
mov
and
add
sarl
dec
jae
aas
push
mov
ljmp
mov
add
pop
jmp
insl
inc
jnp
sbb
mov
cltd
popf
inc
add
loopne
adc
int
icebp
push
inc
fwait
pop
xor
insl
insb
imul
cmp
xor
lods
dec
ja
xchg
jnp
rcr
mov
repz
ret
pushf
xlat
orb
push
mov
popf
enter
mov
sti
ret
aaa
out
in
sub
stos
repnz
sbb
call
xchg
sbb
pop
cmpsb
popa
scas
scas
inc
ret
and
cmpsb
dec
push
mov
popf
or
and
cmp
roll
mov
mov
pop
iret
fs
repz
push
xlat
nop
call
out
les
and
jns
in
sbb
mov
out
lods
je
and
xchg
pop
shll
in
pop
dec
call
jge,pt
fcomp
sub
jl
cmp
mov
out
xchg
xor
dec
xor
sarb
mov
jecxz
iret
add
push
into
cmpsb
and
mov
dec
push
repz
jnp
cmpb
push
bound
pop
jge
imul
add
cmp
add
fwait
sub
and
lahf
mov
pop
adc
jmp
or
aam
inc
enter
lahf
sbb
insb
sbbb
in
ret
jle
int
rcrb
lret
add
xor
and
loope
pop
loopne
dec
dec
push
push
lods
lock
push
push
xchg
xchg
outsl
out
or
out
sub
pop
roll
stos
mov
inc
faddl
inc
adc
ljmp
fsubrs
xchg
lds
push
int
int
loope
and
xchg
add
jmp
dec
pop
ror
les
dec
in
add
imul
cmc
sbb
push
loop
fsubrl
hlt
lret
push
cmp
pushl
stos
sbb
dec
or
or
xchg
adc
push
adc
fs
aam
nop
jl
add
dec
loopne
adc
push
xchg
and
js
and
daa
movl
fiadds
sub
mov
sbb
push
popa
in
popa
inc
cmp
jbe
test
sub
mov
xorb
js
jns
adc
imul
push
repnz
mov
in
push
aas
sub
fstpl
sub
xchg
mov
in
cmpb
mov
shl
and
cli
jl
mov
data16
dec
xor
and
lds
jae
cmp
lcall
movsb
call
xor
bound
ficoml
mov
aad
ss
adc
data16
mov
cmp
loop
adc
pop
jge
cltd
cmp
sbbb
mov
pop
inc
jmp
dec
lcall
sbb
es
fistpll
fwait
sub
orb
or
aaa
pushf
add
enter
ja
lret
inc
cmpsl
dec
cmp
cmpsl
or
ljmp
push
fcomps
add
pop
xor
fs
lods
xor
and
idivl
xchg
jge
fiadds
push
push
je
rcll
xchg
lock
aaa
pop
outsl
jb
jecxz
data16
enter
and
jnp
mul
insl
sbb
jne
jno
out
xchg
out
sub
icebp
mov
test
inc
out
jns
inc
js
addl
cmp
lea
imul
mov
xsha1
cmpsb
dec
cli
aam
adc
xor
rorl
bound
test
mov
ret
ret
in
jecxz
xchg
adc
and
dec
fwait
mov
fcomps
or
mov
dec
mov
inc
or
push
shll
or
lcall
loopne
jecxz
arpl
rol
or
sahf
out
or
pop
xchg
lock
dec
fcompl
add
lret
cs
or
movsl
mov
das
nop
fdivr
sbb
mov
test
mov
sbb
movsb
inc
daa
mov
cmp
ficoml
imul
xchg
int3
and
cmpsl
or
and
ljmp
and
cmpsb
xor
inc
mov
test
ret
aad
cmp
popa
or
syscall
into
dec
jnp
insl
push
nop
mov
rep
dec
mov
mov
imul
sbb
add
inc
incl
add
pop
add
fdivrl
out
add
fcmovb
push
cmp
pushw
mov
cmp
inc
inc
dec
fildl
flds
cmpsl
dec
dec
inc
mov
sbb
push
jmp
dec
pop
mov
inc
into
mov
adc
inc
cmpsl
mov
iret
sbb
scas
lods
adc
mov
icebp
das
out
ret
dec
pop
lcall
sarb
sub
insl
push
mov
cli
mov
lock
gs
adc
and
inc
sub
pop
js
mov
jbe
pop
sub
ret
repz
repz
pop
add
enter
rcr
jno
adc
repz
ret
or
cmpl
lret
jae
and
add
inc
into
movsl
sub
das
sub
xor
sbb
push
mov
adc
pop
jnp
and
movsl
mov
adcl
idivb
outsl
divl
jp
and
adcl
popa
mov
adc
arpl
in
jb
push
out
fbstp
sarl
mov
fs
fwait
ss
in
movsb
icebp
aaa
neg
cld
lods
out
cli
loope
repz
cmp
xor
dec
out
inc
add
rolb
xor
jecxz
adc
mov
cmp
mov
adc
cmp
mov
out
add
inc
jle
add
inc
jbe
loop
xor
iret
and
outsl
pop
pop
push
lret
dec
cmp
xlat
push
fdivr
dec
das
mov
lret
cltd
test
fdivr
addr16
jo
sar
add
shlb
sbb
or
jle
sbb
push
sub
push
fdivrl
jno
jle
xor
popf
popf
outsb
jns
xchg
push
cmpsl
mov
movsb
add
shrb
movsl
add
dec
or
xor
mov
push
cmpsl
ret
sub
dec
sbb
repz
jb
push
sbbl
andb
push
adc
sbb
out
xchg
ss
push
sbb
not
mov
mov
inc
dec
das
fwait
test
test
test
dec
inc
sub
push
rcrl
jle
mov
je
add
arpl
and
loope
xchg
or
jecxz
mov
adc
inc
lods
xchg
sbb
test
mov
add
ss
adc
cmp
add
iret
dec
in
mov
stc
inc
ficoml
cmp
xlat
das
or
mov
lock
enter
loope
orl
ds
cmc
jbe
pop
and
imul
push
push
pop
fiadds
mov
ficoms
icebp
lds
fldl
mov
xor
push
sub
mov
adc
ljmp
sub
into
mov
cmpsb
in
or
das
dec
inc
dec
mov
mov
loop
or
notb
add
mov
inc
cmc
mov
sbb
pop
jle
fistl
ret
dec
out
dec
push
jle
inc
fstpl
cmp
jno
or
push
enter
cmc
stos
add
mov
or
and
and
mov
jne
les
jb
add
pop
stos
mov
lods
ret
xchg
add
add
out
or
cmp
sub
cmc
pop
mov
sbb
out
and
inc
fisubs
dec
sbb
push
mov
xor
fisubrl
jno
aaa
cwtl
je
adc
rcll
stos
dec
jns
mov
insb
enter
mov
shrl
icebp
mov
pushl
std
sbbl
push
popa
push
fcompl
fistpll
in
lods
dec
sbb
xor
jp
jne
test
mov
jg
cmpsl
cld
stc
in
stos
adc
jmp
enter
imul
mov
mov
cmp
xor
push
sub
sysret
stos
mov
xor
cmp
fstpl
push
xor
das
sbb
cwtl
xor
subb
stos
fdivrs
stos
into
rorl
add
push
fs
lcall
scas
js
jl
dec
and
and
insb
cltd
and
orb
das
or
imul
test
mov
mov
repnz
adc
fstpt
loopne
add
jo
out
aad
xor
dec
testb
cmp
lret
and
les
pop
jge
sbb
lret
add
pushf
xor
aas
cli
movsl
sub
aaa
mov
mov
mov
outsb
jbe
repnz
testl
in
stc
and
pop
pop
add
cmpsl
push
xor
lret
add
inc
xor
imul
cmp
jb
and
pop
dec
add
popa
jge
jmp
pop
shl
adc
scas
test
test
xor
add
out
push
adc
gs
pop
lods
push
jmp
xor
sbb
insl
cwtl
aam
aaa
mov
enter
add
mov
scas
stos
rcrl
loopne
aaa
mov
in
icebp
mov
jnp
pop
mov
push
dec
push
shlb
jl,pt
mov
mov
dec
xor
push
xor
aad
sub
xchg
mov
mov
hlt
sub
pop
jge
or
outsl
loopne
jl
and
sti
shlb
mov
mov
test
add
jno
mov
mov
pop
mov
stos
fstpt
add
out
test
mov
mov
adc
dec
add
pop
int
inc
pusha
shll
cmp
insb
xor
mov
or
fcmovnbe
bnd
test
ret
mov
cmp
pop
cmp
or
test
outsb
rorl
mov
or
mov
out
adcl
mov
dec
or
push
add
imul
cmp
cli
xchg
jb
popa
sub
imul
lea
mov
addr16
pushl
cld
sub
enter
jb
pop
pop
stc
jmp
test
inc
ljmp
jg
mov
lds
fsts
mov
sbb
and
insl
es
aam
inc
fs
lock
inc
jmp
xlat
push
fucompp
pop
pop
pop
push
inc
jns
adc
icebp
or
jmp
jno
dec
lea
and
add
sbbb
lcall
sbb
pop
ja
stc
mov
cmp
addr16
add
jb
ds
inc
divl
inc
cmpsb
adc
outsb
add
out
or
adc
mov
out
rclb
enter
out
xor
aas
enter
jo
stos
in
jne
jle
mov
push
push
xchg
sub
lock
leave
movsb
ljmp
sub
add
stos
jg
pop
arpl
dec
repnz
ret
fldt
lods
sbb
and
mov
jno
mov
mov
xchg
pop
cmp
jp
pop
cwtl
arpl
aad
ljmp
or
xchg
jno
aam
lret
and
jno
mov
xchg
ss
and
fisubrl
sbb
inc
push
push
subb
movsb
scas
movsb
fisttps
jecxz
addr16
sub
outsl
add
add
lahf
cmp
sbb
ss
jmp
sbb
xor
inc
push
pop
test
lret
leave
adc
push
pop
adc
ficompl
pushf
outsl
jg
mov
pop
fdivrp
sub
lea
mov
std
lea
lret
loope
sbb
pop
mov
out
loope
pop
dec
push
pushf
cli
add
jp
pop
xor
or
loop
into
stos
ret
rclb
movsl
pushf
adc
mov
sbb
pusha
cld
sbb
dec
mov
fisubrl
mov
popf
dec
cmp
insb
xor
and
add
cld
xchg
pop
mov
pop
movsl
aad
mov
pusha
cmpsb
mov
addl
das
and
and
mov
dec
add
inc
pop
das
mov
push
pop
cli
lds
add
shrb
sub
sbb
or
jb
sahf
xchg
mov
int3
jp
cmc
pop
or
outsb
adc
jb
push
sub
sub
mov
inc
sub
add
mov
lods
sbb
out
and
adc
aas
pop
fwait
mov
psubw
jg
and
xlat
in
cli
ja
stos
adc
and
imul
pop
or
mov
std
xchg
add
cld
mov
sti
push
sbb
jp
std
dec
std
and
inc
inc
xchg
mov
cmp
fs
testl
inc
xor
add
inc
sahf
pusha
pop
pop
jge
mov
xchg
stos
sbb
push
sar
movsb
lahf
sub
pop
rcrb
std
test
icebp
sbb
enter
sbb
les
aam
je
jmp
les
xchg
jbe
das
jl
insb
popa
sbb
lods
add
enter
or
inc
mov
dec
inc
dec
mov
ja
imul
lret
ja
or
lods
jbe
js
sbb
std
dec
in
xchg
push
stos
sti
mov
test
pop
mov
cmpb
shrb
data16
pop
mov
and
mov
and
mov
fbld
shrl
inc
rcll
or
lock
pop
xchg
push
in
lcall
or
sbb
dec
jns
ss
mov
sub
push
cmpsl
gs
xchg
xor
sbb
outsb
fdivr
repz
cmp
fsubrl
int3
outsb
into
xchg
repz
mov
pop
icebp
inc
and
ljmp
imul
jnp
popa
test
lea
mov
fstl
test
subb
dec
loopne
cltd
jae
pop
test
lret
or
xchg
lret
xor
ja
sub
mov
add
inc
and
jecxz
shlb
das
push
and
ja
mov
mov
lahf
sub
iret
out
sub
xchg
lahf
scas
cmpsl
xchg
mov
or
dec
scas
lcall
xchg
sbb
test
ljmp
mov
and
dec
jnp
mov
mov
cmp
push
aam
push
mov
aam
pop
sbb
sub
pop
xchg
dec
jno
push
in
aaa
int3
cmp
rcrl
sbb
js
lea
into
jne
add
or
pop
mov
sub
daa
movsl
xchg
scas
sbb
adc
lcall
jb
fdivs
fdivrp
inc
inc
loop
dec
push
mov
out
add
mov
and
fwait
mov
movsb
aaa
pop
pop
fisttpll
xlat
out
andl
jae
bound
push
or
subl
add
mov
push
rorb
xor
cmp
loope
hlt
mov
and
mov
sti
inc
mov
mov
and
pushf
mov
cltd
sub
push
out
negl
mov
in
push
mov
or
call
js
mov
sub
add
xchg
mov
sbb
out
push
and
test
inc
pop
xor
leave
cmp
shrl
pop
lock
imul
adc
clc
sub
movsl
mov
stc
and
sub
stc
push
je
stos
imul
xchg
test
pop
movsb
fwait
in
das
push
ret
xor
insb
jne
stos
and
fisubl
idivb
jno
add
push
movsl
and
xchg
cltd
into
fsubs
adc
add
stos
jnp
dec
loopne
cmp
repnz
xchg
rcl
and
cs
and
add
mov
sbb
pop
adc
iret
loopne
xor
iret
test
cmp
push
inc
mov
inc
adc
int3
adc
xor
dec
jmp
mov
pushf
mov
adcb
popa
and
dec
adc
pop
or
mov
jmp
adc
mov
and
dec
sub
lahf
mov
jmp
xor
cli
xor
or
add
push
test
adc
mov
movsb
fstl
ds
xor
fwait
test
mov
add
push
sti
dec
aas
sub
imul
jne
mov
adc
test
lods
stc
rcrl
das
mov
jno,pn
jmp
sti
cmpsb
mov
bound
rorb
sbb
pop
xchg
pushl
or
push
lods
mov
mov
dec
dec
push
shr
test
adc
icebp
out
cmpsb
inc
cli
mov
les
jl
sub
repz
or
xchg
out
sbb
mov
and
inc
pop
clc
lcall
pop
in
add
mov
cltd
adc
dec
popf
jg
repnz
jo
mov
shlb
in
movsl
jb
push
cmc
sahf
scas
mov
push
or
jbe
fsubrl
lahf
fmuls
xchg
push
dec
dec
add
outsl
mov
js
push
or
mov
jno
mov
imul
in
mov
inc
mov
movsb
and
mov
ljmp
lods
sub
into
xchg
xor
pushf
or
mov
call
insl
or
mov
pop
ljmp
xlat
xor
jp
out
scas
jle
pop
lods
lods
xor
push
cmc
cmp
and
push
sbb
cs
xor
mov
das
pop
loop
mov
mov
inc
negb
xchg
in
loopne
xor
xchg
mov
and
sub
jg
xchg
sub
out
test
mov
packuswb
sub
les
lret
pop
ds
test
sbb
lcall
ljmp
in
add
or
out
mov
int3
test
adc
fcmovb
push
mov
mov
test
ljmp
sbb
andb
pop
icebp
cld
incl
mov
adc
andl
decl
xchg
loop
jnp
or
inc
shlb
fisttpll
mov
cmpsb
in
adc
jmp
cs
mov
mov
adc
pop
sbb
and
and
cmp
mov
das
mov
jg
push
inc
add
int3
sbb
rcr
jmp
mov
shlb
ja
xchg
cltd
add
and
lret
rorb
mov
in
mov
fmull
mov
sbb
inc
adc
movsl
or
movb
fs
dec
or
sar
inc
adc
jnp
test
jb
ja
int3
dec
shll
xchg
push
aas
pop
lcall
movsl
sbb
mov
push
jnp
dec
sub
pushw
rcrl
sbb
or
jne
sub
fistpl
jmp
and
mov
rolb
push
jno
sub
pop
dec
inc
in
sar
jecxz
cmp
aam
push
or
bound
inc
fbld
jnp
cltd
into
jo
lods
lret
jmp
and
rol
push
outsl
pop
sbb
out
inc
cmp
mov
or
pop
adc
test
xchg
in
jle
cmpps
icebp
push
jnp
pusha
jg,pn
dec
mov
sbb
lods
and
or
out
or
jo
xchg
dec
lret
or
mov
mov
push
mov
xor
mov
jp
sarb
add
push
sub
xchg
and
fcomps
xchg
xchg
pop
loope
out
test
xor
push
lcall
jb
xchg
cmp
xor
cmpsl
adc
push
enter
stos
loop
ss
rolb
rclb
mov
mov
fs
jg
jecxz
stos
loop
pop
pushf
push
addr16
negl
pop
mov
inc
xor
fcoml
add
subl
add
mov
js
xchg
int3
out
cmpsb
js
rcr
aam
fwait
adc
xchg
dec
pop
cmc
dec
mov
clc
outsl
test
nop
out
inc
inc
pop
sbb
xchg
add
jg
push
ja
push
push
ds
rcrl
mov
jmp
ret
sbb
scas
and
insl
jle
push
insb
dec
fs
cmpsb
movsb
out
call
dec
push
js
adc
cmp
ljmp
and
xor
cmp
dec
dec
shrl
xor
add
sbb
pop
int
mov
xchg
xchg
jb
xchg
das
sub
scas
sub
insl
xor
aam
mov
pop
das
inc
sbb
or
xor
sbb
dec
push
aaa
adc
sub
test
and
fistl
and
aam
loope
dec
mov
xor
fisubrs
call
lret
cmpsb
dec
mov
jle
mov
inc
mov
into
xchg
aam
in
fs
jecxz
in
lock
insl
jmp
shlb
cmpsl
je
les
xor
rclb
sub
lds
cwtl
hlt
push
push
xchg
jle
mov
push
test
les
lret
xchg
mov
sub
xchg
cmp
pop
dec
dec
jbe
jne
inc
lods
movsl
lods
inc
jle
lahf
js
mov
jns
pop
cmp
cmp
les
cld
lahf
pop
mov
int
cmp
jle
jb
push
shlb
or
adc
scas
push
inc
mov
xor
inc
adc
cmp
xchg
dec
sub
in
and
mov
pop
dec
fdiv
or
cmc
mov
cmp
sarl
xor
xor
cmpsl
mov
andl
xor
data16
cld
inc
xchg
xor
mov
lret
mov
add
fiadds
rorb
inc
add
adcl
fiadds
call
pop
xchg
mov
insb
loop,pt
jmp
jo
insb
pop
mov
negb
jecxz
cmp
shlb
imul
or
repnz
and
or
mov
fcoml
aad
sbb
mov
push
or
cs
mov
addr16
data16
mov
cmpsl
mov
push
cmp
or
mov
pop
lahf
inc
mov
sbb
xchg
cmp
lcall
es
mov
out
sub
out
xchg
loop
test
and
adcl
mov
stc
repz
imul
jb
jmp
loope
jmp
add
mov
addr16
push
pushf
ss
lret
cwtl
cmpsb
jecxz
mov
fstps
xor
push
imul
and
lret
test
add
fwait
push
mov
lds
popa
mov
push
and
inc
icebp
test
pop
pop
pop
adc
sti
cmp
inc
inc
nop
loope
mov
adc
jns
mov
sub
or
xor
lds
fucomp
xchg
rcrl
pushf
mov
jl
sub
fxtract
cmp
enter
shlb
jmp
jno
movsl
sahf
mulb
iret
jg
inc
mov
or
mov
push
push
dec
inc
cmc
sub
and
icebp
mov
ret
cmpsb
sub
mov
push
pop
xor
cli
pop
and
repz
shll
int3
and
cmpsl
out
dec
fcoms
ffreep
stos
or
mov
mov
addr16
cltd
push
cwtl
mov
sbb
push
adc
jb
mov
sub
out
fcoml
ljmp
arpl
push
pop
shlb
aas
in
and
loope
pop
and
push
sbb
sub
lcall
ljmp
in
in
xor
fdivp
add
xchg
ds
aaa
xor
sub
sahf
scas
jae
fucom
and
jecxz
or
cs
mov
aad
dec
xor
and
or
sahf
inc
pop
in
xchg
sti
mov
cwtl
mov
and
push
movsl
out
negl
pusha
cmp
pop
mov
nop
add
xchg
or
adc
fidivrl
adc
cmc
test
mov
ja
mov
pop
aaa
es
iret
hlt
pop
push
icebp
sub
sbb
or
test
mov
fndisi(8087
movsb
mov
imul
sahf
stos
jmp
and
cmp
insb
scas
mov
repnz
mov
movsb
inc
pop
or
pop
andl
jo
mov
inc
orl
rclb
dec
push
dec
cli
sub
sub
adc
aaa
or
iret
paddw
pop
int3
pop
aas
es
jnp
pop
push
call
inc
scas
pop
cmp
ljmp
enter
add
fwait
rcll
stos
pop
xchg
xor
push
add
and
jae
jb
cld
inc
out
or
or
push
push
cwtl
addr16
pop
into
movsl
jge
lods
mov
xchg
cmp
fmul
icebp
dec
pop
inc
clc
cmp
push
jp
mov
inc
dec
dec
jb
lock
pop
bound
loope
aam
stos
into
mov
aad
mov
xor
cmp
cmp
js
outsb
aaa
lods
mov
mov
ss
dec
sbb
scas
addr16
adc
xchg
xchg
ljmp
popa
bound
xor
xchg
push
push
test
adc
shrl
push
icebp
add
imul
jecxz
pop
and
bnd
cmc
fcoms
push
mov
imul
mov
and
lods
pusha
push
fistpl
sbb
jno
mov
nop
xor
jbe
dec
xlat
arpl
leave
push
jmp
jmp
or
push
test
aaa
push
sti
stos
lret
jns
lods
ds
int3
in
pop
xlat
pusha
in
dec
cli
out
lods
mov
lods
xor
xchg
mov
pop
test
sbb
enter
push
dec
sub
and
cmp
das
add
add
jno
cmp
into
fs
arpl
pusha
pop
pop
xchg
pop
add
push
and
jae
xchg
cltd
fs
and
sbb
cmp
pop
push
mov
repz
sub
jmp
fdivr
pop
movsl
mov
std
xchg
stc
mov
xorl
cmp
jae
data16
and
and
ret
sub
aam
xchg
popf
es
sub
mov
dec
gs
daa
mov
xor
rolb
lock
dec
or
daa
sub
in
mov
mov
lahf
push
les
gs
sub
pop
push
add
cwtl
pop
shrl
out
les
popa
jmp
fbld
rcl
mov
mov
adc
iret
and
pushf
fsts
sbb
pop
enter
arpl
pop
std
cmp
lea
cmpsl
mov
sbb
dec
push
push
cltd
xor
xor
je
adc
xor
push
jmp
fsubrp
dec
adc
sub
mov
inc
hlt
int
mov
movsl
add
sarb
pusha
iret
mov
add
xchg
cmp
xlat
scas
push
movsl
pop
aas
dec
subl
mov
rolb
lds
inc
or
jne
adc
sub
jmp
adc
or
and
repnz
sbb
mov
add
inc
jb
mov
int
pop
adc
pop
push
sub
or
mov
cmpsb
cmc
sti
or
gs
cmp
pop
inc
pop
enter
adc
outsl
xchg
and
xchg
xchg
cmpsl
sarb
and
pop
mov
xor
imul
mov
movsl
movsb
dec
xchg
xchg
and
data16
insb
in
out
lods
stos
test
jg
mov
mov
ret
pop
outsl
call
sbb
sub
ret
and
sbb
or
add
cmp
xor
lret
inc
insl
jae
fstps
les
xchg
data16
or
pop
mov
dec
or
pop
mov
lods
and
inc
xchg
or
jecxz
aaa
fsubrs
nop
mov
mov
lds
aad
push
mov
xorps
push
ret
inc
imul
loope
rcrl
test
popa
jmp
xchg
jne
aad
movsl
lds
notl
iret
shlb
sbb
jb
stc
pop
js
mov
or
push
sub
js
fbld
jmp
cs
mov
sahf
jae
imul
push
es
mov
sti
hlt
sahf
dec
jbe
daa
jb
mov
test
add
subb
into
stos
rcrb
mov
jecxz
aam
popl
cld
out
popa
lods
shrb
mov
cmp
addr16
les
sbb
jp
scas
and
or
movsb
nop
movsb
pop
cmp
fsts
dec
rcrl
xchg
or
leave
xchg
popa
aam
std
inc
or
cld
scas
dec
pop
xor
mov
jb
or
mov
popa
cmpsl
mov
xchg
fimull
adc
pop
into
lret
int3
gs
pop
cmp
in
pusha
push
xchg
fs
mov
mov
int3
jecxz
or
xchg
xor
jmp
cmpl
sub
mov
mov
mov
mov
xor
mov
dec
xchg
dec
aaa
mov
cmp
xchg
push
xchg
jb
cmp
arpl
test
mov
fsub
mov
mov
arpl
aad
std
mov
mov
xchg
aaa
lret
rol
test
dec
mov
or
jno
xchg
loope
xor
xor
and
push
in
pop
shlb
mov
ja
aas
in
mov
icebp
lret
cltd
popa
xchg
or
add
lahf
loopne
addl
cld
loopne
mov
inc
mov
ds
stos
jbe
loop
jg
sbb
mov
jae
add
xchg
or
dec
and
repz
adc
jnp
mov
mov
xor
inc
icebp
sbb
and
in
xor
lock
mov
mov
idivl
movsl
into
cmp
std
push
or
adc
mov
cmp
sahf
int
dec
andb
es
push
cmpsb
or
lods
movsl
rol
test
fisubrl
sahf
movb
mov
or
hlt
pop
lret
shll
lods
jl
es
mov
dec
xchg
fcomps
testl
sub
push
or
je
sbb
push
lds
mov
ret
xchg
jns
pop
xchg
mov
xor
daa
in
pop
pop
or
adc
faddl
cmp
rorl
sub
dec
jecxz
loopne
adc
and
fstpl
sarb
xor
xor
out
mov
add
bound
lds
es
xor
adc
pusha
ficomps
sub
mov
jge
inc
mov
jae
xor
sbb
gs
lods
lret
jae,pt
xor
cwtl
push
movsl
stc
daa
dec
add
cmp
cmpsb
sahf
push
jmp
jae
sahf
ljmp
cmpsl
bound
div
push
scas
sbb
je
or
adc
cmp
or
pop
gs
or
sti
adc
push
sub
push
xchg
dec
in
imul
sub
and
xlat
mov
adc
stos
pop
sbb
daa
bound
fdivl
into
outsb
xchg
daa
scas
dec
leave
in
push
or
cmp
bound
dec
lahf
dec
mov
lcall
xorl
sub
icebp
cmp
dec
imul
mov
add
xchg
mov
xor
jp
cmp
addr16
out
jns
mov
loopne
cld
ss
ret
mov
pop
and
and
stos
sbb
add
dec
mov
pushf
addr16
int
js
mov
mov
cmc
mov
sbb
and
mov
cltd
pop
jnp
pusha
mov
dec
lcall
inc
mov
xor
movsl
in
mov
or
cmpsb
cld
sahf
inc
push
mov
in
daa
addr16
jb
jnp
sub
aas
in
js
sbb
pop
movl
sub
pushf
les
test
xchg
adcb
sti
add
popf
mov
cli
mov
or
lods
fldt
mov
inc
test
test
cmp
add
lret
sbb
mov
jnp
adcb
in
add
push
add
imul
cld
addr16
je
push
jno
sub
mov
pop
aad
mov
inc
test
out
mov
into
adc
cwtl
mov
pop
loope
cmpsb
mov
jp
addr16
rclb
cltd
dec
jle
inc
pop
sub
push
jne
cmpsl
pop
mov
inc
fxch
arpl
out
icebp
out
arpl
or
stos
mov
mov
aad
mov
push
mov
je
mov
push
cmp
sub
mov
out
lods
xchg
and
sub
and
pop
adc
xor
in
stos
add
push
fldt
mov
daa
bound
cmc
dec
ficomps
xchg
mov
jle
dec
test
fcoms
lret
pop
mov
inc
add
pop
push
jle
mov
aas
rcrb
aam
add
and
jecxz
jno
xor
popa
cltd
add
jnp
es
imul
aam
mov
pop
cmp
mov
inc
add
dec
jbe
jp
xor
hlt
push
rcrl
and
aam
or
push
push
out
dec
loopne
movsb
mov
add
cwtl
mov
or
dec
ret
xor
dec
add
ficoms
or
dec
test
fisubs
dec
jb
cwtl
mov
mov
lret
cwtl
mov
xchg
ja
imul
pop
lds
lea
xor
pop
cltd
cmp
inc
and
jg
xacquire
int
mov
sub
scas
cmp
jle
cld
inc
clc
aam
dec
xchg
fwait
test
sbb
insl
push
and
flds
add
pop
faddl
and
daa
iret
out
push
lcall
out
cmpsl
negl
enter
setge
loope
mov
sub
movsl
js
xchg
roll
jge
pop
inc
insb
or
mov
xchg
aam
lret
xor
movsl
lods
mov
push
sti
mov
shr
pop
xchg
sub
add
shll
movsb
out
cmpsb
aad
cmp
sbb
sub
lret
pop
pop
lret
and
aam
xor
cmpsl
or
jg
mov
pop
outsl
add
mov
cmc
xor
xlat
orb
andl
sahf
push
aaa
repnz
push
insl
push
mov
mov
mov
aas
mov
xchg
adc
imul
scas
sub
xor
cmpb
xchg
push
mov
dec
sub
cmp
add
inc
pop
iret
xchg
ljmp
ret
jae
jno
rcrl
lcall
jns
mov
jmp
bound
sub
xchg
outsl
movsl
mov
dec
sub
jnp
adc
or
imul
shlb
int3
xor
cmc
push
xor
mov
repz
loope
sbb
xchg
data16
xchg
xchg
dec
in
push
into
int
pop
ret
mov
push
and
outsb
stos
iret
int3
outsb
sub
aas
orb
jmp
outsl
pop
or
push
cmc
mov
sub
dec
pushf
test
popa
stos
mov
mov
jp
dec
jno
cmp
lcall
rclb
add
sbbl
jecxz
jbe
mov
pop
stos
sbb
push
cmpsb
and
std
mov
std
pop
stos
lock
out
cwtl
fidivl
xor
test
mov
xor
and
adc
lret
mov
lock
push
int3
mov
and
movsl
adc
int
cmp
incl
lcall
xor
dec
jbe
int
adc
inc
and
out
fdivp
sbb
sub
in
push
cwtl
punpcklbw
daa
cmp
sub
pop
dec
dec
testl
in
bound
ret
jp
and
sbb
outsb
pop
cmpsb
sub
xlat
push
leave
leave
ret
xchg
sbbl
decb
shll
je
cmc
push
and
xchg
hlt
inc
sti
clc
xor
icebp
ret
push
push
loop
add
test
add
adc
hlt
repz
out
sbb
mov
inc
or
fidivrl
xchg
outsb
jo
sti
push
dec
insb
cmp
pop
ds
mov
fcmovnb
push
ss
adc
sbb
stos
popf
xchg
call
imul
mov
xchg
add
fdivrs
jge
cs
pop
mov
and
jae
fs
stc
mov
mov
add
ja
push
je
sub
xor
stc
sar
mov
xchg
sub
clc
ja
out
jo
mov
cltd
adc
out
or
outsb
mov
addr16
push
sub
sbb
xchg
pop
jecxz
lds
rcll
nop
and
xchg
popf
adc
out
xchg
div
mov
aad
mov
into
xchg
push
mov
jae
jo
ffree
ja
out
add
outsb
jle
add
lret
mov
rorl
pop
or
push
push
add
mov
inc
cmp
into
xchg
sbb
push
fwait
mov
cmc
gs
xchg
loope
sti
xor
xor
and
mov
scas
aas
push
mov
xchg
fcom
jge
jmp
xor
or
aam
push
cmp
in
aad
es
or
ror
test
or
xor
je
mov
es
add
xor
rorl
jbe
popf
movsl
sbb
shl
mov
mov
pushl
addr16
xor
lods
rclb
mov
jp,pt
mov
mov
cmp
addr16
adc
xchg
pop
xor
fs
or
push
outsb
in
dec
mov
add
xchg
and
test
xchg
pop
ret
jae
das
das
in
andl
pop
mulb
scas
jnp
subb
scas
mov
cwtl
clc
inc
jae
fs
inc
add
sbb
loop
xor
cmp
fimuls
pop
mov
sbb
fs
inc
fsubrp
std
push
sub
mov
clc
push
jns
leave
orb
mov
mov
aaa
decb
popa
mov
or
mov
stos
outsb
or
cmpsl
xor
cmp
int3
dec
push
stos
lahf
pop
sub
pop
jge
mov
lds
mov
ror
into
stc
adc
jmp
out
push
fucom
ret
mov
rol
mov
push
stos
cmpsl
push
inc
divb
imul
add
sti
push
imul
enter
push
into
mov
mov
pop
xor
jb
pop
not
or
jbe
aaa
sbb
gs
pop
in
fsin
in
pushf
jo
push
sbb
mov
pop
repz
in
mov
fldenv
popa
loope
cld
or
idiv
xchg
imul
sub
fstpl
sahf
test
xchg
inc
jb
or
mov
cmc
fimuls
jp
daa
pop
or
shl
mov
fwait
push
outsb
push
sbb
mov
pop
jne
mov
fcoml
sub
cmp
xchg
shl
and
sub
inc
cmpl
movsl
sub
add
xor
jbe
sbb
and
xor
cmp
in
fisttps
inc
addr16
push
loop
cld
popf
adc
addr16
rolb
mov
xorb
push
je
jmp
sbb
mov
in
repz
or
out
push
adc
rorl
add
add
and
lret
or
sub
inc
mov
jne
mov
cmp
mov
mov
sar
jmp
test
fsubrs
xchg
into
or
sub
insl
inc
mov
adc
xchg
ret
loopne
inc
out
mov
int3
cld
mov
ss
and
pop
insb
or
hlt
je
gs
je
push
mov
lds
aam
jmp
in
les
jmp
stc
inc
dec
pop
jge
jbe
xlat
leave
push
bsf
jle
ja
insb
cs
or
testb
add
push
ss
cmpsb
push
std
test
fcoml
aad
mov
mov
int
cs
popa
and
add
ljmp
pusha
aas
dec
inc
std
pop
cld
xchg
jp
in
lods
adc
xchg
xor
repz
mov
test
in
pop
adc
add
in
enter
or
shl
loop
stos
int
aam
aad
dec
lahf
inc
jne
ror
mov
imul
int3
or
sbb
jb
int
cmp
in
mov
inc
cwtl
inc
test
adc
sbb
les
mov
stos
jmp
or
rcr
dec
sar
scas
push
frstor
cmpsl
dec
outsl
xchg
dec
cmp
cmc
sbb
pop
cmp
mov
xchg
jge
outsl
es
mov
pop
clc
jge
lds
mov
and
pop
aad
jp
adc
xchg
mov
mov
adc
dec
fstpl
jp
flds
enter
mov
xor
jl
jp
call
call
jmp
cmp
jl
sarl
or
mov
mov
out
sbb
push
cmp
test
orb
ja
std
in
jle
ffreep
sbb
icebp
mov
lds
xor
jo
jb
dec
addr16
dec
fisubrl
addb
out
lods
xchg
iret
stc
mov
movsb
scas
xchg
fiaddl
das
and
loop
bound
xchg
jg
push
cs
inc
mov
std
add
outsl
pop
jne
mov
add
mov
fidivrl
push
imul
out
xor
sub
fisttpl
jnp
xor
mov
es
jp
or
in
lds
rclb
orl
shlb
jmp
cmp
adcb
movsb
in
pop
inc
jl
rcr
and
pop
imul
adc
std
and
imul
mov
test
insb
fsubp
cmpsb
xor
insl
or
into
mov
push
pop
and
dec
test
pop
aaa
cmp
and
jns
push
mov
and
loope
xchg
pop
adc
cltd
fxch
xchg
mov
lods
pop
or
jo
movsb
fdivr
imul
loope
lret
sub
je
cmpsb
add
pushf
mov
sbb
adc
arpl
adc
clc
jb
fs
in
inc
popa
out
sub
cmpsb
jns
icebp
divl
mov
enter
mov
lret
sbb
bound
test
scas
jnp
movb
int3
push
cmp
or
or
enter
adc
sub
insb
inc
mov
xor
divb
jnp
mov
pop
jge
mov
in
xchg
mov
in
mov
mov
aam
loopne
xor
je
cwtl
sbb
pop
hlt
push
lock
das
push
dec
into
pusha
and
push
in
and
jge
sub
movsb
fs
sbb
iret
xlat
stos
leave
sub
push
mov
out
pop
mov
mov
cmp
je
sahf
addr16
cmp
mov
xor
das
and
inc
add
mov
fisttpl
pusha
mov
jecxz
sarb
dec
insb
daa
mov
mov
test
in
and
jmp
daa
push
rcrl
dec
inc
popf
cmpsl
rol
rcrb
adc
mov
aas
push
enter
js
aam
rorl
mov
ja
clc
xchg
adc
lods
mov
clc
jo
push
lret
sti
mov
push
sar
jg
movsb
mov
and
fldcw
xor
inc
mov
sub
aad
push
mov
pop
mov
incl
scas
jecxz
adc
scas
stos
bound
pop
data16
dec
jns
xor
jb
in
pusha
aad
push
outsl
sarl
insl
inc
addr16
jmp
sbb
mull
das
rcll
stos
xor
cld
neg
xor
dec
cmpsb
insl
rcrl
push
push
imul
adc
xor
jl
jge
push
ss
push
idivb
jg
xchg
and
pop
shrb
dec
movsl
fs
jmp
and
inc
pop
dec
mov
cmp
int3
jns
sbb
daa
insb
loopne
mov
mov
shr
test
outsb
sub
imul
cwtl
mov
fildll
adc
outsl
push
sbb
mov
leave
test
xchg
shlb
jno
adc
dec
enter
push
inc
mov
adc
add
arpl
int3
mov
insb
dec
adc
adcb
push
insl
mov
jg
jl
cmc
rcr
jae
mov
cli
xlat
sub
add
push
mov
lret
xchg
in
xchg
ja
mov
inc
scas
rcr
jg
sub
sbb
in
loop
std
xor
push
jno
fidivs
sub
repnz
push
or
jae
inc
mov
scas
jnp
fs
faddp
dec
dec
push
shll
sub
jle
jbe
inc
cltd
std
push
adc
jge
sub
jmp
adc
fincstp
sarb
mov
lds
jbe
testb
mov
xchg
nop
mov
or
xchg
xchg
dec
or
jge
in
jns
dec
mov
fidivrl
inc
and
or
clc
inc
mov
pushf
mov
pop
jns
adc
outsb
jge
cmp
mov
mov
xlat
test
test
enter
mov
xor
into
pop
fiaddl
xchg
dec
aaa
mov
pop
dec
cltd
outsl
sbb
das
fidivs
jl
test
and
out
inc
dec
add
mov
out
cmp
or
fwait
push
xor
xchg
sbb
pop
fucomp
stc
scas
fisubrs
sbb
ds
mov
xchg
in
rolb
out
addl
jp
loop
hlt
sbb
push
mov
movsb
mov
jnp
andl
lahf
dec
push
pop
movsb
adc
push
sub
cmpsl
icebp
std
cs
inc
out
inc
mov
jmp
repnz
aam
jbe
movsb
or
sub
cltd
fldenv
inc
adc
xor
test
mov
cwtl
rorb
jmp
jo
repz
cmp
scas
popa
inc
lret
icebp
lods
jmp
lock
push
inc
mov
mov
pop
jno
call
rcrl
ljmp
scas
sub
pop
xchg
xchg
fsubs
xor
flds
out
mov
insb
jmp
mov
subb
add
aas
mov
push
jno
loope
and
mov
nop
xor
lods
and
sbb
add
leave
jle
lahf
sti
add
in
xor
cs
add
sub
and
dec
insb
je
mov
mov
inc
imul
cmp
xlat
push
sub
xchg
popf
loope,pt
cmp
imull
pop
xchg
fs
dec
xchg
xchg
sti
mov
jns
lea
lret
subb
movsl
jbe
or
mov
leave
inc
pop
pop
push
xor
fisttps
clc
mov
lahf
insl
aam
xor
out
leave
sbb
push
xor
ljmp
data16
add
and
ret
sbb
jl
test
std
out
jg
movsb
rorb
pusha
repnz
push
pop
cmp
dec
test
xorb
and
fwait
add
or
movsb
dec
mov
ds
mov
out
in
fiaddl
out
leave
movsl
pop
ficompl
or
clc
call
rcr
push
aas
xor
je
adc
cmpb
add
sarb
subl
ret
lea
push
push
fsts
fsubs
sbb
scas
jmp
pop
movsl
mov
mov
mov
sub
adc
inc
or
jo
hlt
pop
xchg
dec
iret
add
andb
sbb
cmpsl
pushf
out
mov
rol
cmpsl
out
jmp
jb
pop
cmpsb
push
movsb
ror
push
push
sarb
jo
jmp
std
fsts
dec
filds
imul
ljmp
push
sub
cli
sub
lods
popf
add
pop
sub
inc
push
aaa
popa
jo
rcrl
imul
push
inc
mov
jnp
and
or
xchg
fsubr
adc
sti
xchg
adcb
mov
addr16
stos
int3
in
lret
ja
mov
cmp
jl,pt
xchg
lock
cmc
loope
repz
andl
mov
lret
mov
shlb
imul
lret
ret
cltd
sub
stos
das
jo
xor
inc
sub
sub
dec
int3
push
mov
enter
inc
or
jl
fucomp
push
rcl
out
mov
inc
mov
lret
jb
sub
pop
mov
adc
test
fcomp
dec
lods
mov
lcall
mov
enter
cmpsl
add
sbb
fisubrl
enter
nop
sub
jae
aam
pop
insl
bound
aam
lcall
push
pop
dec
scas
je
sti
pop
pop
out
aad
ficompl
mov
jo
pop
or
fcompl
sub
nop
cwtl
cmpsb
les
cmpl
xchg
xlat
cmp
test
cwtl
mov
icebp
mov
sbbb
pop
divl
sub
inc
cmpsl
adc
or
call
lods
fistpl
ret
outsl
pop
in
test
movb
inc
xchg
or
sub
shrl
mov
inc
sub
and
cs
in
jle
mov
and
rol
lods
cmpsb
add
xchg
cmp
jae
rorb
adc
sbbb
imul
mov
call
mov
mov
ja
insb
mov
jne
mov
cmp
cltd
push
int3
or
pop
cmpl
jb
adc
cmc
cmp
ljmp
push
adc
aad
jp
int3
mov
mov
adc
movhlps
push
xchg
sbb
inc
arpl
inc
xchg
jb
jns
push
andb
mov
lret
dec
lahf
in
stc
push
nop
lea
mov
in
sbb
mov
mov
test
adc
xchg
jbe
pop
cwtl
mov
jmp
aaa
daa
mov
or
stos
arpl
dec
cwtl
lahf
int3
add
andb
push
imulb
fsubs
es
outsl
int3
outsl
jle
out
mov
dec
jl
inc
mov
mov
cmpsl
dec
sbb
ret
lret
mov
insl
imul
stc
in
test
sbb
mov
pop
mov
sub
and
cmp
jmp
insl
cmc
mov
inc
fldenv
xlat
and
cli
inc
cmp
lock
int
xchg
mov
adc
adc
xchg
subb
add
nop
jge
aad
mov
into
and
sbb
dec
adc
mov
add
aad
addb
inc
inc
into
push
push
shr
outsb
jo
movswl
cmp
dec
in
ljmp
add
lds
mov
inc
addr16
ss
decb
jb
ss
ret
and
lea
insl
pop
or
xor
push
lea
sbb
shll
aam
mov
jo
test
cmp
adc
inc
ss
pushf
shrb
repz
cmp
ret
cmp
sub
push
fnsave
iret
xchg
insl
nop
in
iret
dec
fcmove
and
sbb
push
scas
push
xchg
loopne
mov
jno
jge,pt
std
sub
push
pop
das
sub
mov
mov
push
push
ljmp
adc
xor
or
mov
jle
adc
inc
push
push
es
aad
mov
xor
ja
popa
cltd
sbb
js
dec
mov
icebp
jnp
push
jmp
adc
inc
xchg
jl
jbe
call
dec
movsb
xor
and
and
nop
fwait
mov
xor
aam
sbb
push
sub
cli
in
test
cmp
mov
mov
seta
mov
xchg
dec
in
clc
adc
mov
pop
xchg
test
xchg
inc
inc
ss
movsb
inc
sub
arpl
and
cmpsl
stc
push
pop
imul
adc
sbb
mov
loope
fistpl
repz
adc
xchg
mov
mov
jecxz
call
aas
ja
cmp
rorb
push
inc
mov
mov
pop
lock
fiaddl
es
pop
inc
adc
mov
xor
sbb
rcrb
push
aad
fmull
push
cld
cmc
adc
test
jno
push
aas
ss
xor
add
ret
pop
and
mov
repnz
push
dec
push
jmp
push
pop
test
dec
dec
inc
mov
adc
xor
add
not
add
and
jg
sub
lock
aam
movsl
push
fucomip
mov
repnz
call
or
sar
ljmp
add
fdivs
out
xchg
jle
fdivrp
xor
sub
mov
sbb
jns
jge
add
sbb
movsl
and
lcall
lea
pop
fnsave
negl
xchg
sbb
add
push
mov
mov
aaa
mov
out
outsl
mov
jne
lcall
or
pop
test
insl
xlat
scas
or
dec
xchg
sbb
sbb
lcall
and
int
mov
cmp
xor
jnp
cmpsl
jae
sarb
test
xchg
std
sub
inc
and
in
enter
push
inc
lahf
shl
iret
int3
popf
push
les
add
and
mov
in
lahf
roll
mov
xchg
lock
mov
cmp
push
shlb
mov
jae
mov
jp
jnp
icebp
int
imul
fcomip
add
jb
jmp
adc
cwtl
push
adc
fdivl
jno
sbb
xchg
fistps
and
adc
or
outsl
mov
out
rorb
shll
int3
xor
mov
cmp
into
test
or
pop
jge
mov
jge
sbb
push
popa
arpl
repnz
incl
fsubrp
jle
or
jae
add
arpl
insb
sub
lea
push
das
int
maskmovq
notl
jbe
das
fldcw
sub
mov
iret
repnz
loopne
repnz
push
jno
int3
mov
pop
jg
cltd
sub
add
push
test
sub
ret
jg
dec
rorl
jmp
mov
mov
jge
cmp
stos
test
mov
pop
add
rcr
jne
in
cmpsl
std
and
stos
les
sbb
mov
cltd
aam
mov
popf
sbb
fnstcw
imul
outsb
jbe
imul
pop
mov
cwtl
stc
imul
pop
mov
movsl
out
add
mov
stc
mov
jmp
sub
add
enter
test
ret
daa
mov
cmp
popa
outsb
outsb
cmc
pop
and
or
sbb
sbb
scas
outsl
lcall
fsubrl
xor
dec
xchg
mov
push
fldl
leave
sbb
movsl
je
aas
dec
insl
add
mov
cmp
mov
fdivr
mov
stc
mov
adc
jecxz
mov
nop
xlat
sbb
jns
pop
and
outsl
dec
mov
sti
es
mov
repnz
stos
mov
jmp
sub
or
dec
xchg
pop
scas
jecxz
mov
fdivrl
add
push
std
push
and
mov
xlat
outsb
adc
and
pop
mov
jg
and
pop
fisttpll
mov
xchg
mov
mov
push
mov
in
cmpl
dec
add
mov
push
xchg
sub
mov
pop
mov
pop
int3
imul
xchg
pop
and
push
mov
lods
xor
int
in
jb
cmp
pop
ss
mov
flds
inc
sbb
pminsw
arpl
scas
dec
bound
inc
test
and
cmp
mov
push
inc
fnsave
cmp
push
mov
mov
mov
cmc
in
xchg
push
pop
mov
inc
aaa
les
insl
pusha
sbb
mov
movsl
stc
pop
jne
aam
and
add
push
pusha
aaa
pop
stos
pop
or
xchg
mov
movsl
sub
ret
adc
adc
mov
jle
loope
xor
xchg
js
xor
mov
xor
sbbl
mov
imul
and
ljmp
cli
mov
repz
out
add
sbb
pop
and
xchg
mov
test
sti
nop
mov
pop
jo
jle
clc
xor
sub
mov
in
jp
or
movsl
push
add
jge
loope
fmuls
xor
out
leave
int3
cli
and
loopne
or
pop
aad
and
lret
xor
dec
xor
iret
mov
loop
cmp
cmp
in
mov
cli
push
ljmp
add
outsb
aas
push
outsb
jg
jge
ljmp
ljmp
icebp
mov
ret
shll
push
sub
insb
dec
xor
in
mov
loop
xor
mov
jge
rcll
sbb
fiadds
mov
leave
cs
dec
stos
add
pop
mov
ljmp
and
fldl
in
leave
cmp
ljmp
outsb
push
mov
sub
sti
inc
leave
mov
std
sbb
les
mov
das
cltd
pop
dec
subb
call
push
lods
lret
mulb
push
sub
jo
sub
rorb
aam
cmpb
pop
nop
add
sub
int3
add
xchg
and
popa
aad
xor
push
jmp
insl
add
mov
adc
ss
adc
xchg
inc
xor
pusha
aad
xor
push
sti
add
movsb
sub
cmpsl
jecxz
scas
inc
mov
xchg
push
mov
imul
arpl
add
pop
divl
out
and
adc
fcmovnb
xor
aam
mov
pop
sbbb
sbb
mov
movsb
and
add
jne
cld
sbb
mov
add
movsb
xor
loopne
movsl
mov
inc
fiadds
dec
loop
xchg
pop
leave
mov
push
mov
cmp
bound
sbb
jmp
cmp
popf
cmc
scas
add
outsl
leave
push
cmp
lods
xchg
push
xor
rclb
mov
scas
adc
sbb
test
dec
lret
adc
push
adc
aad
jmp
fidivl
aam
jnp
xchg
int
add
imul
ljmp
add
push
jne
cwtl
int
hlt
push
xchg
fimull
inc
jo
xor
xchg
and
adc
les
fisubrs
addl
int
dec
loopne
lahf
mov
xor
icebp
jae
mov
inc
mov
sub
insb
fcomps
jmp
xor
inc
lods
shll
jp
icebp
lret
in
inc
inc
je
lea
xor
repnz
cmc
sub
or
jns
test
sbb
ret
mov
or
mov
push
nop
cmpsl
add
scas
repz
cmp
pushf
into
push
scas
fwait
loope
addr16
subl
xchg
xchg
or
arpl
div
xchg
fstl
jecxz
scas
add
loope
inc
lods
addb
jle
movsl
dec
jg
cmp
enter
fidivrs
jnp
flds
push
stc
inc
mov
loop
in
inc
mov
push
pusha
out
push
jne
sub
sar
xchg
imul
inc
lret
mov
in
dec
movsb
and
pop
fnstcw
sbbb
icebp
daa
repz
ret
aaa
inc
sti
std
push
notb
inc
mov
jns
iret
adc
imul
bound
scas
mov
movsb
xchg
cwtl
mov
mov
sub
mov
pop
xchg
stos
jo
adc
sbbl
in
push
push
sbb
test
mov
inc
divl
dec
lcall
lods
cmpsl
sbb
subl
mov
test
lahf
pop
fimull
mov
mov
push
add
lock
icebp
sahf
test
loope
inc
push
rolb
adc
sar
mov
jge
test
add
sub
push
insl
icebp
std
shlb
inc
push
sti
test
xor
test
cmpsl
and
jmp
fs
and
sar
and
pop
mov
in
cmp
sarb
xchg
dec
and
leave
push
and
sub
mov
fimull
xor
movsb
xchg
sub
loope
les
pop
pop
jge
cmp
cwtl
add
and
sub
cmpl
lock
and
xchg
jle
popf
popa
dec
mov
in
mov
out
test
inc
jne
add
push
adc
ds
mov
jno
or
frstor
and
jmp
or
mov
jmp
inc
mov
xchg
sub
out
add
mov
scas
lret
stc
shlb
xor
sub
jl
adc
scas
push
or
mov
jg
mov
fistpll
mov
bound
push
and
xor
sbb
mov
in
pop
cmc
push
mov
fimull
adc
adc
notl
fldcw
sbb
jae,pn
pop
jbe
fcmovnbe
sti
aam
sbb
test
add
push
ja
rcrb
xchg
push
test
xchg
jns
and
mov
leave
xchg
dec
movsl
fsubp
sub
inc
sbb
clc
mov
push
sbb
mov
cltd
fstpt
test
daa
imul
mov
sahf
cmc
mov
stc
aas
daa
movsl
lret
pop
push
and
push
idivl
cmpsl
cli
sub
je
shll
daa
loopne
sub
addr16
dec
or
fadd
or
xchg
rcl
fnstenv
decl
fwait
push
shl
shrl
inc
movsb
jle
cld
add
int
cmc
leave
xor
sbb
ficompl
mov
push
mov
nop
xchg
repnz
xor
icebp
js
jbe
push
in
int3
mov
sub
jne
push
jae
jo
lds
mov
xchg
cmp
sub
sti
lods
stos
jg
test
adc
out
dec
jg
xchg
push
movnti
xchg
stc
mov
dec
and
in
adc
iret
jno
arpl
nop
mov
cmpsb
adc
xchg
mov
shll
ret
outsb
dec
add
arpl
pop
xchg
cwtl
aam
lods
std
fnstcw
mov
pop
shll
subb
push
pop
gs
lahf
scas
fidivl
popf
cmp
sti
icebp
in
fistl
add
mov
and
and
mov
push
ss
and
pusha
fwait
out
sub
adc
shl
pushf
or
inc
cmc
in
hlt
jb
pop
push
out
push
sub
sarb
push
out
push
add
dec
ret
sub
mov
sub
sub
cwtl
cmc
int
mov
sub
xor
incl
add
cmpb
mov
leave
ja
cmp
jns
jmp
aad
aaa
sbb
and
shll
adcl
js
pusha
test
movsl
je
xchg
mov
sub
call
xor
stos
xchg
out
mov
out
out
aas
xor
jbe
mov
and
sub
popa
stos
test
ret
test
and
hlt
shrl
lahf
add
aad
or
das
pop
outsl
pop
pop
adc
add
jbe
in
add
das
dec
test
push
push
or
inc
mov
imul
xchg
cld
inc
test
xchg
mov
mov
insl
dec
inc
shl
add
outsl
push
movsb
out
push
jne
sub
dec
lock
test
push
lea
cwtl
cmp
pop
fdivrs
ret
mov
pop
scas
dec
sti
xor
shl
xchg
dec
push
out
ds
sbb
mov
fistpll
push
lods
mov
rolb
mov
xchg
and
pop
scas
sti
fs
cltd
notl
or
test
addb
xchg
js
fisttps
or
sub
sub
xor
jp
movsb
fcmovne
xabort
mov
das
sbb
jecxz
push
or
cmp
pop
or
stos
cmpsl
enter
insl
scas
loope
lock
dec
mov
cmp
xor
mov
out
lock
jnp
hlt
ljmp
lret
fwait
mov
jecxz
adc
adc
mov
push
les
jl
fwait
out
clc
dec
and
push
lds
jp
inc
int
pop
imul
mov
rcrl
xor
jb
xchg
or
and
jno
xchg
scas
stc
xchg
lea
mov
cmp
pusha
sti
sub
rcrb
test
push
xchg
jbe
decl
jne
rcl
mov
or
jl
testl
jg
aas
pop
enter
scas
xor
add
daa
fimull
jge
sarl
lahf
jnp
pop
out
add
sub
call
mov
aaa
pop
fs
or
adc
in
nop
add
jns
mov
test
shrb
pop
outsl
sarl
or
inc
fsubl
js
repnz
mov
arpl
jo
xor
ret
stc
cmpl
ljmp
rcrl
popa
fcompl
xor
and
mov
addr16
or
sub
jp
sbb
mov
jecxz
mov
dec
int
mov
mov
sbb
push
dec
outsl
jnp
lcall
bound
icebp
mov
sbb
neg
testb
dec
cwtl
adc
jmp
inc
insb
fldt
xchg
pop
push
loop
les
test
or
cmp
test
jge
cmp
test
push
sahf
daa
sbb
testb
jg
push
imul
inc
mov
sbb
out
scas
pop
scas
clc
pop
scas
or
aam
or
adc
test
push
jmp
push
push
jns
outsb
mov
fmull
pop
fisttpl
mov
or
and
dec
push
imulb
popf
xlat
xchg
push
movsb
jle
and
aaa
inc
sbb
xor
jecxz
pushf
pop
sub
cmp
jo
sub
push
push
aas
je
ret
or
lods
popa
mov
stos
roll
pop
shl
pop
push
pop
addr16
lret
push
mov
cmp
loope
mov
roll
sub
lods
add
xchg
push
arpl
mov
mov
adc
js
test
gs
inc
stos
sbb
mov
pop
push
adc
test
xor
mov
fimull
adc
xor
dec
sub
mov
push
stc
pop
push
and
xor
ss
cwtl
and
addb
add
in
out
jbe
xor
pop
rcll
jb
test
adc
out
cs
rorb
push
push
inc
cld
push
adcl
cld
fmul
and
sbb
jns
xchg
ja
ret
adc
mov
outsb
ds
pop
and
xor
sbb
push
aaa
dec
sub
in
sbb
inc
mov
adc
jmp
shrb
pop
subl
fs
sbb
add
push
adc
orl
call
lret
jl
insb
or
jae
ficoms
and
cmp
or
jp
adc
xor
xlat
fdivs
sti
sbb
pusha
xchg
pushw
jo
jo
push
inc
cmp
push
cli
pop
adc
imul
lods
inc
cmp
push
or
xor
cmp
lret
or
ds
int
mov
sti
cmc
out
add
incb
das
into
dec
xchg
mov
xor
pusha
mov
inc
in
ljmp
jb
loop
in
xor
push
push
in
sti
loop
pop
mov
inc
loopne
lret
sti
cld
shrb
imul
lcall
sti
push
dec
sbb
fldenv
xor
or
xor
in
lahf
clc
xor
add
cmp
mov
mov
jne
popa
fcom
mov
sarb
test
dec
dec
movb
cltd
ljmp
xchg
adc
jge
pop
mov
rcrl
insb
std
xor
jle
dec
out
xor
js
adc
mov
mov
into
or
dec
xor
push
push
push
and
push
xchg
xchg
jmp
pop
aam
mov
xor
repnz
fstps
lret
je
shlb
xor
cmp
stos
fs
aaa
lahf
xor
ljmp
pusha
out
and
jle
rclb
jmp
sbb
or
fmul
in
dec
push
addl
clc
in
adc
mov
inc
test
cmp
popf
xor
push
dec
cmp
test
in
inc
int3
dec
mov
lret
test
lods
cmp
xchg
rep
int
or
loope
fwait
mov
xor
mov
inc
and
lcall
jl
sbb
cmpsl
mov
cltd
adc
stos
dec
jb
call
aaa
jecxz
fwait
mov
cmp
aas
inc
lret
int
jl
shll
addr16
call
clc
mov
push
cwtl
cmpsb
sbbl
xrelease
add
adc
pop
and
add
lods
test
sub
dec
xlat
daa
test
mov
xchg
imul
aaa
dec
in
adc
jecxz
lea
mov
xchg
cmp
repnz
dec
mov
push
xchg
lret
hlt
movsl
shrb
jbe
icebp
mov
nop
cld
inc
xchg
push
ss
pop
xrelease
rcrl
mov
loopne
jecxz
popf
test
sbb
or
xor
iret
pop
stc
push
mov
roll
lea
xor
cmpsb
jl
jmp
popa
movsl
sbbl
in
mov
adc
pop
mov
xchg
dec
sub
faddl
shl
mov
jno
pop
jg
xchg
ss
imulb
mov
cmp
mov
out
sub
dec
stc
js
dec
cmp
pmuludq
mov
js
cld
cltd
push
mov
je
mov
xchg
push
add
jge
nop
mov
mov
mov
add
leave
mov
inc
cs
jo
cmp
lock
shll
gs
mov
xor
jl
mov
cmc
int3
push
push
cmpsb
jnp
jl
pop
jns
leave
sub
sbb
inc
out
in
push
fsubrp
cmpsb
fbstp
bound
enter
mov
add
mov
cltd
loop
pop
pushf
pop
pusha
mov
xor
xor
push
dec
adc
mov
pop
pop
push
xor
les
lahf
mov
or
cltd
or
jae
fiadds
mov
add
ljmp
mov
lods
and
mov
xchg
popf
push
test
adc
mov
gs
add
pop
xchg
fidivrl
mov
adc
mov
sub
push
insl
mov
out
xchg
shl
and
popf
popf
fnstenv
andl
pop
lock
dec
add
xchg
out
ljmp
ret
std
fistl
in
mov
adc
clc
lahf
repnz
mov
or
dec
movsb
adc
outsb
scas
inc
vorps
fstpl
inc
add
test
jb
sbb
test
cmp
pop
dec
xor
and
mov
pusha
in
mov
cmp
nop
adc
daa
jp
cmpsb
mov
jl
std
push
mov
add
adc
aam
dec
pop
and
sbb
cltd
mov
mov
push
inc
xor
push
insb
out
lds
cmp
movsl
out
pcmpgtw
fiadds
and
je
sbb
add
fistl
sub
sub
push
scas
xchg
adc
push
xorb
mov
aas
vpunpckhwd
mov
imul
mov
xchg
aas
cli
arpl
loopne
inc
rep
jp
jg
aam
adc
iret
dec
stc
cmp
out
and
sub
and
hlt
lock
jecxz
dec
add
add
sub
xor
dec
sub
jb
fnstenv
imul
imul
dec
mov
pusha
pop
mov
or
les
aad
repnz
or
add
lea
sub
push
inc
subl
enter
lea
addr16
mov
sbb
outsb
mov
aaa
adcl
pushf
mov
insb
mov
mov
inc
nop
divl
mov
scas
add
idivb
jno
out
lods
inc
cmpsl
xchg
fdecstp
mov
hlt
test
mov
inc
fs
cld
loop,pt
in
push
mov
fsubrs
adc
repnz
in
aaa
lea
das
cmp
fnstcw
jmp
mov
inc
jecxz
jmp
lret
xor
inc
scas
adc
or
loopne
dec
rorb
push
pop
lods
fs
movsb
outsl
ret
or
add
aaa
scas
add
push
ja
push
push
addr16
out
pop
outsl
push
mov
rcl
fmuls
in
pop
and
xor
in
scas
jge
cltd
rcrl
loopnew
sbb
mov
push
xchg
xchg
jge
dec
stos
push
sub
sub
mov
cmc
ficomps
imul
repz
bound
and
aad
in
xor
ljmp
fildll
loope
cli
adcb
das
stos
sbb
outsb
mov
hlt
adc
lea
mov
mov
cmpsb
pop
rorb
in
adc
sahf
std
ja
imul
sub
xchg
ss
sub
das
mov
repnz
popf
out
jbe
push
cltd
test
mov
ret
mov
ds
out
inc
out
int3
icebp
outsl
outsb
cmpsb
push
mov
sbb
jecxz
clc
popf
gs
jno
aas
and
add
daa
aad
jo
ret
int
and
xchg
fsts
push
cmpsb
mov
pop
dec
lock
adc
lcall
pop
xchg
mov
mov
inc
xchg
idivl
adc
jno
les
mov
filds
inc
fisubs
iret
cmpsl
xorl
imul
jle
mov
cmp
mov
or
push
in
mov
int3
xchg
cmp
mov
shll
cli
pop
xchg
push
fisttpl
scas
dec
aas
rorb
xor
add
lret
not
loop
adc
mov
sub
pop
sub
xchg
and
mov
int3
and
dec
lret
jmp
daa
xor
push
dec
int3
push
out
clc
add
dec
dec
add
out
or
mov
ss
fs
xchg
leave
xchg
testb
je
push
lcall
sbb
push
fiaddl
enter
cs
add
insb
adc
inc
pop
jg
mov
add
mov
int
jae
bound
mov
xchg
out
inc
sbb
dec
xchg
push
jmp
ljmp
mov
ffree
shlb
xchg
jle
or
push
jge
mov
push
add
cld
sti
in
cmpsb
add
sbbl
out
scas
test
cwtl
xchg
cltd
test
mov
adc
and
xchg
sub
push
int3
add
jo
push
pop
jmp
roll
imul
pop
jl
jne
scas
dec
lret
shlb
and
sti
xchg
mov
sarl
pop
cmp
mov
dec
mov
pop
sbb
cmp
dec
cld
rolb
xor
dec
or
mov
dec
outsl
mov
call
adc
mov
lret
add
mov
sbb
pop
fnsave
mov
mov
js
push
adc
push
push
ja
adc
movsb
mov
aam
pusha
sbb
sbb
dec
push
sub
test
js
push
mov
mov
mov
mov
icebp
out
inc
test
cld
mov
and
push
xchg
cmp
mov
jp
jo
cmpsl
ss
pop
sbb
je
cmpsb
jge
jecxz
cltd
or
dec
inc
stos
sub
pop
dec
divl
xor
aad
xor
cwtl
cmp
dec
push
nop
jmp
mov
lds
xchg
pop
inc
mov
mov
popa
mov
pop
lock
aad
icebp
sbb
sub
mov
sahf
or
push
xchg
ret
xor
mov
subl
pop
sti
dec
add
xchg
stos
fbld
sbb
xlat
iret
pop
push
pop
lret
jne
xchg
fidivrl
push
adc
in
in
mov
rcl
scas
popa
xor
andl
cmp
jp
gs
push
xchg
dec
push
loopne
add
sub
pop
les
xchg
int3
dec
mov
adc
shrb
sti
stos
mov
mov
aam
out
adc
mov
in
pop
mov
sub
jmp
imull
add
dec
push
add
jle
xor
cmp
cwtl
jno
sarl
rclb
add
mov
fisubl
mov
orl
das
test
sti
cmp
inc
mov
imul
mov
cld
xchg
and
adc
testb
cwtl
incb
mov
or
xor
cmpsl
fsubl
adc
adc
xchg
insb
jne
scas
adc
ss
sub
add
or
lods
pushw
and
cmp
popf
jne
es
and
mov
mov
xchg
xor
popf
mov
iret
push
or
mull
sahf
xor
cwtl
loop
out
dec
cld
lret
ljmp
es
xor
ret
mov
push
xchg
test
fnstsw
fcomi
jo
mov
dec
hlt
fdivrl
push
and
jmp
push
adc
xchg
in
stc
or
imul
lcall
jmp
ds
fcmove
sbb
xchg
sbb
rolb
repz
nop
inc
push
jecxz
jge
loop
rcl
push
divl
mov
iret
sub
dec
add
lock
push
push
mov
loop
sti
repnz
pop
fisubrl
xchg
and
or
insl
xor
add
sub
int3
xchg
sub
or
cmp
ljmp
pop
sti
mov
shr
loope
add
scas
xchg
repnz
jo
jmp
or
int3
inc
fistps
test
xchg
xor
pop
fdivrp
icebp
adc
sahf
mov
sbb
xor
ret
fmull
pushf
iret
sbb
mov
cmp
cmpsl
xlat
in
inc
in
xlat
movsb
outsl
jns
imul
loopne
sahf
mov
repz
inc
fsubrl
inc
jno
mov
dec
xor
or
ljmp
push
fidivs
das
jne
inc
sti
xchg
mov
call
pop
dec
stc
cmpsb
pusha
xchg
test
pop
ja
mov
fisttpl
icebp
daa
xchg
push
repz
dec
mov
xor
xlat
jge
mov
mov
test
das
jne
xchg
adc
sub
mov
mov
imul
pop
fisubrl
jp
aam
aaa
popf
sub
add
add
test
jo
aad
iret
xchg
push
scas
insb
mov
sbb
repnz
pop
into
dec
jmp
inc
lock
dec
lcall
jb
adc
shrb
dec
add
xor
and
rorl
addl
xchg
pop
add
push
stc
add
inc
push
nop
mov
fwait
rclb
mov
mov
xchg
mov
test
or
mov
jae
fdivrs
xchg
add
mov
sbb
lods
push
lret
push
call
popw
xchg
xchg
lret
xor
cmpsl
movsl
push
or
nop
add
cld
cmp
cmp
jne
jecxz
out
xchg
loope
enter
enter
in
in
jecxz
jmp
xchg
inc
jg
pop
arpl
insl
fisubs
xor
aam
lcall
inc
imul
sbb
sbb
das
shlb
sub
rorb
pop
cmpw
lock
sub
jnp
xchg
push
jge
pop
inc
sahf
adc
xor
inc
mov
sbb
not
int3
push
cmc
sbb
sar
mov
cmp
jb
mov
jmp
popa
sub
xor
add
ja
shl
out
dec
add
movsl
mov
fcmove
sub
xor
imul
inc
jle
ss
xor
inc
adc
add
mov
enter
mov
and
push
fucomp
inc
ret
adc
jae
test
dec
imul
movsl
jae
imul
or
cmpsb
roll
out
jge
enter
dec
sub
pop
out
and
or
xchg
cltd
enter
xchg
sbb
xchg
or
scas
sbb
mov
xchg
cmp
push
lea
cmp
sti
outsl
sbb
mov
loopne
xor
adc
mov
insl
outsb
repz
adc
sbb
mov
dec
ljmp
sub
insb
sahf
mov
ret
xor
mov
mov
dec
jl
test
cli
adc
mov
ljmp
mov
hlt
and
cmc
sub
icebp
pop
mov
mov
adc
mov
faddl
jge
pop
les
adc
xor
adc
cpuid
xchg
nop
negl
mov
push
sbb
movsb
stc
cmp
jb
sub
mov
xchg
daa
pop
or
add
mov
inc
loop
xchg
or
xchg
mov
mov
xor
popa
lods
mov
dec
pop
movups
clc
ja
rol
in
sub
cmp
andl
cmp
ljmp
ret
lock
mov
mov
sbb
inc
inc
add
fbld
sub
xlat
in
lock
xchg
adc
dec
movl
jge
and
gs
scas
cmp
rorb
mov
out
and
dec
test
adc
pushf
jno
test
push
mov
rcr
lcall
clc
mov
inc
xchg
incl
jle
mov
jne
mov
cld
pop
xchg
mov
movsl
das
mov
popa
mov
and
add
int
mov
jl
xor
call
mov
and
dec
dec
cmp
inc
jb
sbb
sbb
inc
jle
sbb
lods
cmp
pushf
push
xor
jno
comiss
scas
fwait
add
push
repz
outsb
jno
sbb
and
add
jg
test
pop
fistpll
mov
out
inc
add
pusha
jp
lods
pop
jecxz
jge
leave
test
mov
dec
cmp
sbb
arpl
and
push
dec
cvtpi2ps
adc
mov
ss
shrl
loopne
mov
mov
pop
xchg
jno
add
ss
je
aaa
cmp
xchg
mov
jg
jo
sahf
cmp
xor
lock
sets
int3
rcll
gs
dec
scas
xchg
movsl
jmp
addr16
mov
jne
mov
ds
pushf
xchg
sbb
fldl
sbbl
jae
jg
or
inc
pop
xor
pop
icebp
lcall
addl
pop
mov
xchg
and
cmp
sbb
cli
lds
testb
jmp
clc
mov
movsl
jp
mov
les
js
aam
das
dec
sbb
adc
and
insb
push
pop
sbb
jne
rolb
lods
sub
jge
jne
jg
pop
loope
int3
dec
leave
dec
xchg
imul
stos
or
popa
ljmp
out
iret
inc
dec
mov
inc
mov
push
insb
pop
into
iret
jns
mov
lods
xor
cmp
sbb
jg
rclb
sbb
xor
dec
adc
int
add
sahf
inc
pop
aam
fwait
jmp
in
xor
pushf
sub
js
test
sub
or
mov
or
aas
mov
adc
lods
loopne
add
mov
fidivl
hlt
mov
inc
dec
jecxz
insl
loope
mov
mov
xchg
or
sub
les
sub
push
jl
mov
cs
push
lods
aaa
jb
cmp
ret
mov
les
push
stos
jb
sub
push
dec
insb
dec
or
subl
and
mov
xorb
ss
clc
mov
xor
lea
fdivrl
call
sti
mov
push
and
jne
popf
mov
popa
lea
loope
cmpsl
push
decb
cmp
popa
inc
xor
adc
or
icebp
cwtl
loopne
out
push
lea
aaa
push
divl
jle
and
loope
icebp
in
in
mov
test
sub
repnz
or
lds
dec
decl
jns
dec
rcrb
frstor
popa
dec
cmpsl
sub
stc
mov
movsb
imul
rclb
mov
adc
in
ds
shr
and
fmuls
lods
fstpt
loope
mov
repnz
popa
cmp
mov
popa
and
fistl
cmp
inc
sub
addr16
mov
rcll
pushf
scas
xchg
jns
sub
pop
dec
push
outsb
int3
testl
mov
gs
pop
pop
mov
mov
sub
ret
inc
jl
cmp
shl
icebp
mov
movsb
and
and
into
cs
pop
fimuls
scas
sub
outsb
popf
out
js
push
add
jns
shll
mov
push
dec
push
xor
xor
add
push
out
mov
add
and
add
and
sub
jmp
and
fbstp
clc
mov
or
cld
mov
lods
add
xchg
jb
pop
mov
je
mov
sbb
inc
pop
add
loop
stc
out
xlat
shll
mov
lcall
mov
jno
push
pop
enter
pop
lds
push
sub
lahf
inc
stos
xchg
sub
aam
std
jb
jns
les
mov
jg
mov
rcl
jo
mov
aas
push
dec
xor
dec
aaa
pop
fs
lcall
lods
hlt
mov
aad
pop
push
pop
jo
xchg
dec
ficomps
xchg
fcompl
filds
mov
sbb
fs
xchg
rcll
shl
nop
xchg
xor
and
push
lret
test
jl
movsl
cmpsl
lods
fstl
pop
pop
pop
sbb
adc
jno
cld
aad
jae
dec
xor
in
lcall
mov
ja
sub
cld
dec
int3
pop
fisttps
fdivr
sub
sbb
stos
js
bound
test
mov
test
ror
dec
sub
cwtl
jae
lret
test
idivl
mov
jmp
pop
xchg
sbb
daa
in
mov
rcrb
add
int
daa
scas
sbb
insl
push
inc
and
idivb
or
jo
mov
fisubl
sub
pop
pop
fists
icebp
dec
push
jle
aad
cmc
shll
and
sub
or
push
std
and
in
push
pop
enter
sub
popa
movb
insl
dec
mov
hlt
pop
pop
jae
rclb
sub
and
shll
leave
repnz
test
lcall
idiv
mov
cli
push
test
out
vpsraw
addr16
inc
and
cmpsb
jb
scas
mov
or
xchg
inc
mov
in
jge
sbb
xchg
add
and
das
pop
xor
lods
mov
dec
pop
mov
out
fcomps
bound
jl
push
les
jle
int3
orb
push
mov
adc
mov
js
int
jo
ja
je
sarl
loopne
pushl
xor
adc
scas
jb
sub
and
push
out
jmp
mov
lret
push
push
aam
push
pop
lret
jne
inc
loopne
jp
enter
mov
int
sti
clc
cmp
ror
sbb
aad
in
fwait
daa
sbb
xor
sbb
int
adc
arpl
jle
test
mov
push
stos
cmp
mov
jnp
aam
sbb
sbb
inc
jbe
push
push
shlb
ret
sub
insb
and
addl
jle
xlat
es
loopne
lret
dec
leave
mov
mov
insl
loop
movsb
pushf
js
inc
stc
out
pop
aam
dec
rcll
push
in
jne
aas
std
enter
testb
out
fisttps
repnz
xor
add
insl
adc
pushf
lock
lcall
mov
insb
orl
mov
in
add
in
jae
dec
xor
loopne
jmp
fiadds
add
addr16
lods
and
add
push
push
rorb
loop
dec
cmpsb
insl
xchg
andl
pop
or
fnstenv
xor
popa
adc
jnp
hlt
fstpl
out
push
in
stos
lds
test
jp
mov
jo
or
adc
hlt
sbb
imull
out
fiaddl
mov
std
sub
out
ss
int3
nop
mov
jno
pop
ficomps
dec
icebp
fldl
test
add
fildl
addb
pop
mov
jno
cwtl
mov
jp
sub
xor
daa
cmp
subb
sahf
test
xor
push
and
dec
lods
add
lret
outsb
mov
nop
les
mov
jl
loop
cmp
or
imul
add
pushf
and
mov
fcmovnbe
cli
inc
ja
or
fdivrl
fbld
icebp
std
addr16
stos
outsb
cmp
imul
out
mov
jno
aas
jne
mov
popf
insb
rcrl
xor
das
sahf
pop
cli
push
mov
sbb
outsl
aaa
jns
loope
dec
adc
sahf
and
out
repz
xlat
mov
stos
std
test
push
int3
ljmp
adc
je
dec
fsubrs
js
mov
pop
pop
scas
pop
mov
sub
dec
aaa
pop
hlt
sub
xchg
adc
push
dec
sbb
xor
repnz
test
inc
adc
lods
outsl
jmp
neg
pop
inc
cmp
jno
outsl
jbe
mov
sbb
fwait
les
inc
enter
xor
pop
dec
stos
clc
test
jno
pop
scas
pusha
icebp
repz
fstpt
mov
mov
ljmp
dec
jl
movsl
hlt
test
mov
inc
lock
test
call
enter
inc
sub
fisubs
cmp
xchg
cmpsb
push
xchg
push
ds
fwait
add
in
movsb
xor
push
gs
out
movsl
imull
adc
and
pop
xchg
jp
sbb
xor
cwtl
fidivrs
idiv
jo
mov
sbb
and
push
mov
jnp
orl
sub
mov
popf
push
pop
cld
out
cs
call
dec
push
or
sahf
cmpsb
xchg
test
mov
jl
push
mov
sub
test
out
incb
pop
sbb
pop
scas
xchg
fistps
lahf
cmp
adc
je
dec
shl
repnz
enter
dec
incl
adc
sbb
pop
ljmp
jae
inc
pop
cmp
sub
jae
aaa
std
insl
jo
cld
add
popf
add
inc
mov
sub
icebp
pop
mov
cmp
or
dec
cmpsb
inc
push
or
sbb
rcl
outsl
enter
pop
pop
cs
jmp
gs
mov
mov
imul
push
negl
icebp
js
adc
sub
xchg
mov
inc
test
mov
jecxz
arpl
or
into
dec
and
int3
adc
mov
sub
int3
dec
test
stos
cs
icebp
ret
repz
push
push
lods
push
mov
pop
popf
shll
mov
fldl
and
mov
leave
arpl
lock
xor
dec
mov
pop
cmpsb
xchg
sbb
data16
and
cld
dec
dec
mov
sbb
cmp
and
sbb
roll
sbb
or
mov
cmp
mov
xchg
xor
mov
inc
aas
and
int3
xchg
rorl
jno
rdpmc
pop
aam
pop
enter
or
out
out
aam
push
ds
iret
dec
mov
int3
mov
cmp
call
mov
jae
and
push
pop
sub
jo
sbb
std
mov
sub
inc
stc
test
arpl
imulb
mov
popa
mov
xor
push
sti
icebp
mov
jle
shr
inc
test
dec
push
adcl
ret
mov
ret
inc
out
fisttpll
mov
dec
dec
push
cmp
bound
sbbl
mov
pushf
push
xor
mov
mov
daa
mov
fcoml
shr
insb
jbe
adc
nop
rolb
pop
xor
add
sbb
jne
mov
mov
and
mov
sbb
sbb
jle
cmp
jne
pushf
test
lret
xchg
push
lret
aas
sub
dec
adc
shll
stc
mov
sub
push
and
hlt
adc
xor
fsubr
repz
xchg
daa
jnp
push
inc
inc
cmp
stc
dec
or
and
fimuls
jmp
divb
cs
mov
pop
and
aaa
ret
sub
icebp
int
mov
jle
pop
pop
sbb
mov
jno
ds
jge
mov
xchg
gs
test
inc
scas
jne
jns
xchg
stos
stc
adc
out
jnp
mov
pop
jns
sti
sub
subl
fsubl
push
add
loope
daa
out
jns
hlt
call
jo
fildl
xchg
push
lds
jno
es
and
loopne
in
loope
cmp
unpcklps
dec
fadds
dec
cli
pop
and
push
out
pop
inc
jo
sbb
nop
sti
loop
pop
mov
push
iret
push
outsl
outsb
je
push
insb
imul
jns
cmpb
lods
xor
dec
cmc
jbe
push
shll
dec
inc
mov
enter
aad
into
adc
shrb
add
ret
xor
or
in
in
xchg
pop
inc
jl
popf
idivl
int3
cltd
xchg
or
cli
jo
sub
or
ret
jmp
out
fsts
lret
mov
ja
dec
mov
insb
and
pop
clc
test
repnz
add
pop
or
xchg
cmp
ljmp
sahf
adc
push
shl
and
sub
nop
ret
xchg
xchg
pop
ret
sub
cmp
inc
ss
adc
ljmp
rcrb
fwait
jo
fsubl
mov
aam
jns
jl
cmp
sbb
mov
dec
mov
mov
out
out
sbb
xchg
les
movsl
das
xchg
xor
or
into
push
jae
popf
and
ret
jmp
add
mov
loope
ljmp
pop
inc
pop
xor
adcl
sbb
push
adc
clc
jp
in
dec
jmp
jno
jle
sbb
cmp
jbe
mov
jg
cwtl
push
outsl
roll
push
es
fincstp
outsl
sub
push
mov
sbb
cmp
fdivrs
mov
shl
jp
cmc
es
cwtl
aam
dec
mov
mov
sbb
cltd
mov
fcomps
test
fs
push
mov
ja
cmp
sub
arpl
push
push
mov
iret
jge
xor
cs
cmpl
mov
fisubs
jns
fnstsw
int3
xor
jmp
sbb
mov
mov
mov
movsl
aaa
sbb
fs
lea
lret
roll
add
dec
arpl
pop
dec
inc
push
mov
std
mov
xor
mov
movsl
xor
int
xchg
repnz
mov
iret
push
int
mov
dec
mov
jmp
jmp
push
inc
jo
insl
push
lock
data16
add
andb
andb
test
inc
scas
jne
outsb
fimull
hlt
and
and
mov
mov
orl
cmp
or
icebp
mov
sbb
into
lret
jbe
ss
cmp
mov
adc
inc
cmp
sub
movsb
testl
hlt
dec
mov
and
int
aas
in
pushf
add
in
flds
mov
add
pop
jbe
mov
and
sbbl
addl
loope
mov
adc
mov
call
jecxz
aam
test
jge
jg
inc
je
les
push
mov
mov
add
pop
ljmp
pushf
bswap
mov
xor
insl
inc
std
sub
cwtl
sbb
sub
lahf
jo
rcrl
sub
in
jp
lods
push
mov
das
mov
adc
push
cli
ds
push
mov
movsl
jbe
pop
mov
mov
outsl
lods
sbb
inc
fnstenv
imul
es
sub
jp
cld
rclb
das
sbb
cmp
stos
test
sub
lret
xor
and
jmp
sbb
subb
iret
loopne
into
out
cltd
lahf
sub
xor
jb
pop
sub
sbb
xor
cmp
xchg
loop
inc
push
sub
cmp
jecxz
pop
pop
jg
dec
ja
mov
hlt
scas
push
add
inc
sbb
int3
dec
scas
cmp
xchg
pop
sbb
xchg
rcrb
loope
sbb
inc
adc
push
lea
clc
hlt
cmpsl
sbb
ja
xorl
sub
test
fildl
adc
loope
cs
and
in
seto
xor
ljmp
clc
inc
pop
push
add
xor
pop
in
out
jmp
inc
fcmovbe
fld
pop
scas
ret
mov
insl
lret
in
xchg
cmp
xchg
in
xchg
xchg
movsb
sarb
push
cmpl
mov
sbb
cmc
add
cmp
rcrl
outsl
mov
mov
or
adc
cltd
mov
or
jle
sbb
jbe
xchg
in
lods
fisubrl
out
pop
out
mov
imull
xchg
dec
test
and
dec
lcall
mov
cmp
lods
push
mov
mov
jle
jb
mov
ljmp
int
mov
inc
repz
inc
jle
cmpb
pusha
inc
dec
out
add
fmulp
shl
mov
lret
adc
sub
loop
push
stc
jmp
push
jne
xor
mov
jo
loopne
rorl
cmpsl
pushf
or
lods
fcomip
clc
sub
imul
jge
xor
xor
stos
int
push
in
jg
fstpl
mov
push
mov
mov
leave
mov
ljmp
pop
jb
fiaddl
mov
jae
mov
fildl
add
mov
cli
adcb
lahf
outsl
ror
iret
aad
aad
pop
jl
inc
loope
es
mov
outsb
adc
dec
push
jae
dec
pop
add
mov
cmp
popa
jge
fucomi
jg
inc
test
flds
xlat
loope
and
push
out
xchg
cmc
lret
push
aaa
and
and
jns
clc
leave
jp
push
mov
or
push
loope
and
sbb
pop
push
mov
ljmp
xchg
mov
loopne
loope
rcr
dec
cmpl
mov
jo
movsb
insb
mov
sbb
jbe
jg
dec
jl
imul
push
stc
hlt
aas
inc
jae
push
sub
mov
mov
insl
lcall
mul
jae
in
sbb
sbb
fisubs
and
outsb
mov
sbb
cmc
mov
adc
mov
cwtl
cmpsb
sub
dec
pop
testb
iret
mov
pop
pop
imul
xor
scas
xchg
push
or
mov
mov
lret
negb
dec
leave
sbb
xor
jg
fistps
daa
add
mov
xor
sbb
sub
mov
loop
faddl
sahf
and
mov
add
imul
pop
jmp
in
jle
jno
pop
and
cmc
rcrl
cmpsb
int
pusha
sub
jmp
icebp
ficoms
cmovbe
xor
mov
xlat
lds
das
add
sar
dec
push
shll
inc
jb
fstps
jl
movsbl
stc
inc
jle
mov
sbb
inc
push
cltd
aaa
hlt
push
fucomi
sub
rol
pop
lret
sbb
sub
mov
jle
ror
loop
clc
rep
sbb
outsl
loop
ret
cmpsb
cmpsb
lods
mov
ljmp
cmp
pop
pusha
cmp
xchg
pop
mov
pop
fcmovne
add
mov
ret
icebp
rol
shr
ss
jecxz
movntps
fisubs
shl
repz
sbb
cmc
out
mov
jnp
pop
sti
stc
scas
add
ss
arpl
rcll
jo
adc
mov
fldt
mov
testl
outsl
mov
lds
aaa
and
push
lock
xor
xchg
jo
bound
adc
pop
out
adc
mov
int
sub
cmpsl
sub
or
sarb
out
cs
sbb
js
pop
add
mov
out
cld
in
or
stc
frstor
scas
int3
ja
leave
push
inc
lea
or
xchg
mov
popa
lahf
xor
out
push
popf
sub
mov
loope
inc
push
add
xchg
jbe
std
in
pop
or
ljmp
inc
sarl
pop
xlat
sbb
xchg
mov
pop
stos
push
inc
fwait
ljmp
faddl
push
xchg
shll
fs
jno
mov
daa
dec
inc
cld
popa
cmp
pushf
and
jno
data16
add
cmc
lcall
stos
add
mov
cs
pmaddwd
xchg
push
push
dec
xchg
jae
cmp
arpl
movsb
jg
lcall
xchg
mov
nop
jns
and
and
xchg
cli
inc
arpl
imul
in
test
int
movsb
shlb
aam
or
fdivs
mov
les
das
mov
in
cmpsb
jae
xor
movsb
add
arpl
lret
sarb
add
rcll
mov
push
fildll
sub
push
insb
or
test
xor
dec
sti
mov
or
xlat
xchg
outsb
je
mov
push
scas
adc
mov
mov
movsb
mov
pop
sbb
xor
iret
not
and
dec
insb
or
inc
in
gs
lea
nop
je
mov
arpl
fwait
pop
pop
lea
inc
xlat
cmpsb
mov
xchg
and
or
dec
xchg
les
scas
jo,pt
lods
or
aam
or
xor
or
inc
mov
test
mov
push
lock
gs
xchg
ja
pushf
cltd
je
dec
mov
setns
clc
add
std
out
int
cmp
clc
in
test
stos
cwtl
pop
out
sub
push
xchg
loope
adc
push
rclb
icebp
dec
adc
mov
ret
xorb
in
popf
rorl
dec
mov
sub
add
lds
insl
xchg
mov
ficompl
mov
cmc
gs
pop
mov
jecxz
in
clc
or
test
insb
sub
fdivrl
pop
dec
pushl
xor
das
cmpsb
push
loope
dec
enter
out
sub
jo
fidivl
insl
into
jmp
sbb
lods
pushf
add
adc
jne
pop
pop
fcoml
mulb
sti
add
sub
push
out
into
or
fs
ret
ja
call
xchg
shl
xchg
pop
in
push
and
pop
sub
test
je
call
mov
pop
test
sub
add
jg
xor
sub
bound
jae
stos
daa
lods
or
js
stos
add
aad
cmpsl
test
lods
add
leave
inc
inc
cmp
leave
lcall
lods
cmp
in
repnz
sub
sbb
lret
aaa
mov
fsub
push
js
add
jo
mov
or
sbb
cmp
jnp
rolb
xor
movsb
lea
out
jle
enter
les
dec
jo
loope
stc
xor
push
mov
addl
pusha
push
sub
inc
jne
pop
sahf
push
mov
mov
movsl
cmp
mov
pop
mov
mov
pushf
cmp
sti
gs
ja
imul
lods
imul
aad
mov
sbb
adc
mov
inc
push
sub
inc
jecxz
stc
aad
sti
ja
push
cmpsl
dec
inc
jb
fimuls
or
mov
push
repnz
jp
out
inc
push
xchg
adc
inc
xlat
stos
inc
in
stos
dec
jl
outsb
les
stos
movsb
jle
cmpsl
insl
and
mov
add
bound
adc
jecxz
pop
std
xor
xchg
xor
subb
ficoms
cmp
inc
dec
jb
nop
rcr
stos
sub
jg
or
insl
icebp
cli
mov
xor
mov
ljmp
ret
pop
xor
int
les
xor
addl
dec
cmc
mov
adc
xor
scas
dec
out
jge
adc
nop
push
push
insb
pop
insl
xchg
in
icebp
les
xchg
or
sbb
pusha
aaa
and
mov
aam
enter
jo
dec
fcoms
jae
push
cmp
adc
jle
mov
outsb
jne
or
push
adc
mov
push
fwait
pushl
fs
and
sub
enter
flds
sbb
mov
cmp
fmull
mov
push
jp
data16
ds
int
int
dec
inc
jmp
dec
cmp
pop
lret
inc
xor
mov
data16
popa
test
in
stos
shlb
fs
jbe
mov
stc
fldl
and
mov
stos
push
jg
inc
into
sti
repz
test
cmp
push
in
mov
out
jnp
fldcw
or
jnp
imul
mov
sub
mov
dec
icebp
adc
push
xchg
aam
add
fidivrs
jno
into
inc
jmp
cmp
sarb
in
fwait
nop
mov
xor
add
es
cli
push
lret
std
outsl
pmaxub
mov
in
movsb
shl
sarl
and
insb
sbb
adc
jbe
push
sub
mov
jbe
adc
pop
movsl
ret
xchg
adc
shl
inc
jno
in
dec
fsts
adc
leave
hlt
test
push
sbb
outsb
jns
ret
sbb
add
cmp
andl
inc
mov
cmp
fstp
sti
insb
movsb
rorb
jle,pt
ja
mov
fs
cmp
push
sbb
bnd
dec
pop
pushw
mov
inc
xlat
fidivs
int
daa
and
insb
push
lcall
pop
pusha
push
inc
repnz
test
push
ret
test
add
es
inc
popf
jle
adc
aaa
mov
mov
cli
mov
js
leave
negl
insb
inc
jo
imul
mov
clc
dec
dec
fsubr
push
ror
sub
roll
inc
adc
or
ret
rolb
cld
fs
mov
mov
inc
xchg
movsl
out
jg
jle
push
cs
mov
jmp
and
jecxz
mov
push
je
and
mov
push
repnz
dec
in
or
sbb
cltd
cli
cli
xchg
dec
pusha
roll
cmp
xchg
add
sbb
test
xchg
dec
into
inc
jbe
mov
push
fwait
sbb
xchg
push
xor
xchg
pop
sub
dec
inc
stc
sub
out
dec
pusha
pop
sub
aaa
dec
push
mov
lock
mov
and
mov
notb
pop
cld
int
cmp
jb
arpl
sbbb
js
das
lea
fs
aaa
ret
nop
dec
or
int3
in
std
and
movsb
adc
fldenv
inc
jns
sbb
dec
iret
jns
mov
mov
cmp
adc
pop
aas
insl
and
in
mov
jns
fwait
loop
test
sub
stos
mov
cvtdq2ps
or
cs
lahf
push
dec
enter
jge
mov
push
mov
orb
cwtl
push
clc
test
popf
mov
mov
sbb
cwtl
push
push
movsb
loope
xchg
and
mov
mov
mov
sub
fwait
lods
sub
pushl
aaa
or
lock
and
fsubs
pop
popf
xor
es
lds
out
push
pushl
mov
pop
xchg
les
and
movsl
add
sbb
mov
stos
or
pop
xor
dec
and
imul
and
jge
sub
bound
rcll
jnp
mov
jne
sbbl
mulb
and
sbb
pop
js
xor
in
jne
cltd
int
cltd
dec
sub
pushf
aaa
outsb
fs
scas
movsb
mov
in
lret
jae
sub
mov
push
icebp
aaa
icebp
out
mov
pop
mov
xchg
in
adcl
inc
mov
into
jne
push
jecxz
fcmovnu
lret
sbb
sub
mov
jne
mov
mov
test
lret
lcall
xor
imul
sahf
rcl
cld
mov
mov
bound
loop
adc
insl
xchg
adc
pop
jl
and
out
or
sar
push
dec
adc
clc
dec
aad
movl
sbb
scas
mov
or
sub
add
sbb
call
mov
mov
add
rol
jns
test
dec
or
mov
push
xchg
adc
sub
iret
lret
and
mov
mov
cwtl
mov
mov
test
nop
or
ret
je
cmp
mov
xor
int
sub
jbe
xchg
cmp
mov
or
icebp
imul
push
push
mov
or
add
pop
aaa
mov
xor
sbb
ds
xchg
cmp
stc
lret
daa
or
dec
jb
adc
jne
sti
hlt
inc
frstpm(287
pop
pop
xor
cwtl
in
imul
dec
and
adc
lret
mov
xchg
mov
das
aad
push
jns
and
mov
stos
mov
clc
int
movsb
int3
in
xchg
add
dec
jns
add
mov
scas
push
add
sbb
adc
scas
jns
lods
rcl
ds
lahf
push
imul
xor
stos
sarl
inc
cmpsb
push
js
xlat
pop
cmc
aas
cli
cmc
test
movsb
xchg
mov
pop
inc
xchg
lret
cwtl
push
mov
pop
xchg
cltd
pop
xlat
inc
xchg
mov
cs
xchg
int
sub
int
stos
mov
movsl
sub
daa
loopne
shrb
imul
fdivrl
add
fldcw
or
lock
dec
add
jp
pop
cwtl
decb
xorb
scas
mov
dec
icebp
outsl
push
xchg
loop
adcl
shrl
pop
data16
jg
movsb
inc
out
pop
xorl
insb
enter
adc
mov
ja
sahf
pusha
xchg
loope
mov
pusha
jbe
mov
xchg
test
fwait
and
shlb
pop
sub
rol
push
push
notb
xchg
divl
in
cmpsb
mov
pextrw
pop
push
not
lods
sbb
js
clc
jle
int
cmp
pushf
or
mov
and
mov
push
push
je
add
adc
xchg
lret
xchg
add
cmp
adc
lcall
insl
test
and
and
scas
xchg
push
sysexit
pop
pop
jle
fiadds
in
xchg
mov
dec
out
push
loopne
mulb
sbb
clc
stos
dec
imul
arpl
adc
loopne
mov
dec
sbb
leave
sub
jns
xchg
cmpsl
dec
xor
jnp
xor
pop
shrl
sbb
imul
movsb
cld
jg
xor
lcall
fwait
sbb
push
mov
mov
fcoms
dec
add
adc
lea
push
xchg
dec
in
or
pop
sub
sub
dec
jl
outsb
movsl
scas
cmp
pop
push
pusha
xchg
mov
ds
in
repz
cmp
mov
inc
xor
out
sbbl
pop
cwtl
lds
add
jns
add
fsubl
fs
in
add
push
dec
fldt
filds
cmpsb
leave
scas
rcll
push
cmc
arpl
and
cwtl
jg
out
ja
out
lock
inc
jae
mov
aaa
sub
mov
sbb
cmpb
xchg
inc
movsl
ds
xchg
inc
orl
cmpsb
mov
in
mov
cmp
jo
shrw
jge
mov
clc
shlb
mov
and
lds
jle
out
mov
push
lea
test
dec
and
mov
pop
loop
subl
ret
lods
repz
std
repnz
xor
adc
imul
mov
mov
mov
xchg
gs
pushf
and
cmpsb
aam
sub
add
sbb
divl
cmc
xchg
insl
outsb
cmp
xor
in
dec
stos
inc
mov
mov
lcall
pop
clc
mov
je
push
js
push
aas
js
imul
dec
dec
addb
xor
int3
pop
push
hlt
icebp
std
xchg
jp
stc
aad
cld
push
pop
out
aaa
pop
xchg
int3
call
dec
and
push
jne
jno
inc
adc
push
pop
arpl
enter
test
andb
mov
xchg
les
mov
jmp
mov
arpl
push
mov
cmp
jg
call
xchg
and
lock
in
scas
xchg
lock
fists
and
jns
insl
sub
or
add
fstpt
and
sbb
sbb
push
lock
hlt
mov
xchg
outsb
lods
rcll
fidivrl
jb
into
mov
lds
into
cwtl
cltd
xchg
mov
mov
sbb
inc
into
data16
sbb
nop
mov
pop
je
pop
sbb
and
js
xor
add
dec
test
add
jl
std
jg
leave
lret
sbb
sbb
popl
mov
shl
insl
aam
cmp
dec
dec
js
pop
outsb
fcomps
inc
jae
into
sbbl
pop
cmpsb
adc
sbb
add
cltd
xor
idivb
aas
pusha
or
mov
cmp
pop
jp
loop
mov
lea
xor
jge
out
scas
out
or
popa
orb
adc
bound
insb
xchg
jo
push
int
popa
cmc
mov
das
pusha
mov
inc
imul
adc
mov
adc
popa
pushf
test
adc
xor
xor
jno
xchg
stos
pusha
sbb
aad
jb
and
xor
adc
notb
imul
cmp
and
mov
test
push
mov
outsl
ja
test
fistl
push
push
inc
xor
mov
loopew
xor
nop
roll
mov
negl
jb
mov
inc
sbb
cmp
bound
sbb
mov
jo
insb
and
cltd
fnsave
xchg
fadds
pop
mov
divb
pop
push
jmp
jae
insb
sbb
ficoml
dec
xchg
xchg
xchg
rcll
mov
mov
cld
inc
nop
fimuls
enter
cmp
push
insb
repnz
scas
cmp
fimuls
aaa
loope
sub
xor
gs
jns
jb
or
sbb
ss
inc
sub
cmpsl
test
or
pushf
dec
shl
cwtl
ss
ret
cwtl
mov
das
mov
cmp
outsb
jae
mov
dec
mov
lods
mov
mov
hlt
loop
jl
xor
lret
adcb
jns
push
int3
out
add
sahf
loopne
and
out
shlb
cltd
out
pop
sahf
add
scas
jecxz
mov
cmp
out
mov
rorl
push
call
clc
and
les
mov
adc
xchg
mov
add
jg
pop
outsl
or
cwtl
xchg
mov
and
dec
inc
mov
mov
mov
addb
mov
rcrb
pop
stos
aad
les
fidivs
adc
ja
lcall
sub
xlat
movsl
xchg
and
in
sbb
aas
mov
mov
mov
dec
insl
cmp
aad
test
jae
repz
dec
in
adc
scas
and
cmpsl
sub
or
fisubrl
fwait
pop
inc
sub
or
push
sbb
xchg
iret
mov
fdivrl
fstpt
sbb
or
dec
pop
xlat
insl
mov
xor
sub
mov
or
mov
imul
ds
dec
jno
loop
xor
ljmp
leave
sbb
push
jae
mov
fdivs
mov
test
pop
repnz
and
js
iret
cmpsb
sub
mov
pop
xor
scas
mov
fadds
pop
rcll
les
cltd
andl
loope
xor
cmp
lods
loop
imulb
add
and
insb
test
or
adcb
inc
pop
push
outsb
adc
inc
loope
jp
sbb
imul
jns
push
mov
lret
out
jmp
sahf
sbb
iret
and
jg
sbb
in
jge
jae
sbb
mov
push
pop
pop
inc
jecxz
out
sbb
sbb
cmp
mov
xor
dec
xchg
xor
out
notw
push
into
inc
push
in
cmp
jne
iret
outsb
dec
enter
cltd
mov
ljmp
inc
inc
out
inc
mov
jbe
sub
popa
lods
add
sub
or
mov
icebp
mov
xchg
popa
addr16
decl
xchg
dec
sub
mov
jle
mov
int3
imull
pop
insb
mov
xor
and
jecxz
popf
rorl
xchg
mov
imul
push
xchg
lret
mov
adc
stc
sbb
xchg
into
stos
ret
lea
imul
pusha
jnp
bound
push
pusha
dec
push
xchg
push
add
or
sbb
sub
data16
mov
cmc
popa
leave
cmp
jl
inc
xchg
mov
subb
mov
mov
mov
cmp
and
mov
or
loopne
test
shl
movsb
or
shrb
cmpsl
mov
sub
lcall
les
in
xchg
cwtl
mov
imul
lcall
xchg
mov
cmp
add
int
std
dec
dec
xchg
mov
cmp
out
xchg
push
aam
repnz
push
addr16
sbb
movsl
push
sub
lret
les
pop
ja
mov
jl
mov
frstor
jb
cmc
loopne
test
adc
xlat
enter
mov
shlb
mov
out
and
mov
and
xorl
push
repz
das
aad
fsubs
scas
mov
cmpsb
xchg
outsl
mov
push
push
pusha
cmp
adc
aas
pop
aam
pop
stos
sar
std
pushf
jne
repz
mov
rcrb
mov
into
shll
es
call
loop
clc
jmp
repnz
cmpsb
mov
loope
mov
pop
movl
in
and
pop
dec
mov
scas
push
ret
test
shll
imul
idivl
inc
pop
in
jae
inc
jp
in
and
jae
add
jae
out
aas
xchg
shr
aad
push
icebp
mov
icebp
xchg
lods
sub
testb
jbe
mov
xchg
shr
shlb
aas
dec
dec
std
out
xchg
mov
out
mov
dec
hlt
es
mov
push
loope
ljmp
xor
jae
sbb
shlb
sub
sbb
inc
mov
mov
push
jb
insl
test
ja
test
es
mov
pop
mov
mov
mov
inc
in
inc
push
stos
cmp
jecxz
jne
add
shlb
fprem1
sub
and
adcb
aaa
jae
mov
mov
rcr
adc
or
in
jne
jae
push
mov
sub
dec
addl
add
mov
mov
or
cltd
jnp
movsw
xchg
sbb
xchg
aaa
ret
and
sbb
push
xchg
push
pop
imul
rorl
dec
sbb
push
hlt
jne
fnstsw
inc
and
sbb
mov
lret
cmp
jecxz
sub
push
out
add
xchg
add
mov
add
cmp
test
lods
mov
or
int
loop
ret
pusha
iret
andl
xchg
inc
lcall
cmp
pop
and
test
sub
outsb
ret
xchg
xchg
or
add
add
or
inc
mov
ficoms
lea
or
aad
jmp
adc
adc
popf
adc
inc
cmp
arpl
stc
push
mov
mov
lods
adc
rol
pushf
loop
mov
ljmp
push
loopne
inc
add
sub
inc
out
mov
mov
mov
cmpsb
pop
movsb
cmp
inc
push
insl
in
out
loope
add
push
lret
cld
aaa
pop
sub
xchg
insb
shrb
cmpb
sbbl
in
rorl
aam
inc
dec
add
mov
ret
push
jbe
in
and
inc
rcrl
mov
mov
cli
push
adc
push
pusha
jecxz
mov
iret
fidivrs
loopne
mov
outsl
into
jle
pop
push
je
fnstenv
enter
enter
outsb
imulb
jge
mov
ja
jg
cmp
adc
pop
jle
cmp
dec
jmp
mov
sti
jae
add
cmp
mov
leave
in
sbb
repnz
sub
lock
jb
sub
jg
jecxz
mov
insl
fnstcw
in
fwait
jo
test
lds
sbb
cmp
adc
mov
test
pop
sti
sub
dec
add
fdivl
lret
xchg
into
xchg
bound
pop
fisubl
cmp
pop
add
filds
xchg
sar
mov
call
mov
push
add
imul
lods
xchg
xchg
int
aad
xchg
fwait
loop
scas
frstor
mov
mov
jg
aaa
jg
xchg
sbb
jmp
mov
in
inc
shrb
lock
stos
daa
xchg
in
mov
sbb
and
xchg
xor
cmp
mov
mov
jle
sbb
sbb
insl
adc
push
lcall
movsb
popa
pop
sbb
xchg
loopne
out
outsl
into
mov
push
aam
icebp
rorb
js
int3
dec
in
push
insb
dec
ds
lods
pusha
pop
adc
mov
pop
xor
mov
lcall
mov
es
loope
ficoms
int
sti
scas
lea
js
add
add
lods
pop
adc
pop
cli
xlat
adc
orb
dec
jecxz
test
cmpsl
cmp
cmpsb
mov
loope
mov
cmp
inc
cltd
mov
mov
nop
popa
cltd
lcall
movb
sbb
mov
and
scas
adc
pop
movsl
out
mov
jmp
push
push
mov
in
lock
lret
shll
pop
sub
lock
jg
pop
arpl
mov
dec
into
jne
sbb
mov
mov
hlt
insb
inc
movsb
out
ja
mov
lods
xchg
lahf
add
cli
sbb
sar
pop
test
test
int
insl
push
cs
aaa
scas
inc
mov
incl
jg
inc
jo
push
cmp
sub
adc
inc
push
popf
js
push
adcl
ret
inc
outsb
iret
pop
mov
mov
ljmp
nop
adc
push
pop
push
jb
mov
loopne
adc
addr16
add
adc
pop
pop
leave
mov
inc
xlat
mov
xchg
xor
xor
mov
lds
cmpsl
fisubs
mov
xor
shrl
dec
daa
push
mov
add
xlat
cmpsl
imul
mov
cli
cmp
inc
mov
xchg
cltd
aaa
xchg
push
clc
or
stos
sbb
add
fidivrl
movsl
ljmp
lods
pop
adcl
cmpsb
aam
cli
mov
iret
addb
pop
shrb
out
dec
mov
add
call
adc
push
pop
scas
int
push
push
cmc
aam
jne
jecxz
cwtl
inc
std
ret
imul
ds
faddp
jmp
ficoml
call
pop
out
adcl
sbb
lret
shlb
or
adc
xor
pusha
cli
xchg
out
pop
inc
aam
jbe
cs
movb
mov
into
xchg
or
mov
add
stos
test
les
roll
cmp
rorl
or
into
inc
cmc
out
push
hlt
dec
add
pop
scas
or
add
test
test
mov
es
push
add
pop
shrb
jne
sub
ffreep
je
int
flds
sbb
popa
mov
enter
jne
or
sbb
mov
cld
xchg
pushf
inc
pop
xchg
sbb
cmc
pop
mov
and
shrb
mov
pusha
repnz
mov
pop
mov
xchg
test
adc
jno
sarl
movsl
loop
pinsrw
mov
mov
shrl
rcl
and
inc
jle
pop
push
out
sub
cmp
cmp
std
lahf
dec
cltd
xchg
jg
and
jno
mov
in
or
fiaddl
fmul
add
mov
cmp
fcoms
push
loope
in
call
or
ds
ljmp
outsl
mov
mov
in
xor
imul
jle
ljmp
loop
cmp
imul
in
sbb
test
cwtl
jmp
insb
outsb
je
push
ds
inc
pusha
mov
imulb
pop
imul
or
and
jnp
xor
inc
mov
xchg
jmp
addr16
movsl
orl
mov
push
stos
popa
rcll
fwait
ret
mov
xchg
jecxz
adc
ja
mov
or
adc
mov
jo
or
push
call
ja
ret
scas
mov
leave
inc
iret
frstor
mov
cmpsl
jp
pop
lahf
pusha
dec
and
repz
in
mov
cmp
out
bound
aas
repnz
stc
mov
push
imul
dec
push
jb
mov
and
mov
mov
cwtl
sub
das
jnp
popf
jl
divb
mov
and
loopne
and
fldenv
cli
loope
addr16
das
dec
sub
enter
stos
int
jb
je
out
sbb
notb
insl
leave
push
adc
iret
daa
inc
in
add
lods
pop
dec
mov
loop
out
jmp
outsl
jnp
flds
fwait
sbb
and
jp
xor
sbb
in
inc
pushf
pop
push
lods
idivb
decl
and
and
jns
sbb
popf
lds
inc
scas
arpl
or
adc
pushf
out
adc
inc
dec
adc
fildll
pop
incl
or
enter
and
xchg
or
in
xchg
push
sub
pop
inc
jge
pop
mov
stos
sbb
dec
aam
add
ds
push
push
fcmovb
sbb
pop
pop
jecxz
fdivrl
mov
jno
cwtl
in
mov
cli
push
mov
in
scas
push
fcompl
leave
xchg
je
ficomps
testb
mov
and
or
out
xchg
xchg
sbb
push
inc
pop
mov
idivb
hlt
icebp
mov
cltd
in
sub
jge
mov
scas
imul
adc
add
lret
and
xchg
imul
pusha
stc
mov
sub
aad
mov
test
inc
test
mov
icebp
je
xchg
iret
popa
sbb
adc
pop
sub
pop
popa
mov
push
mov
xor
sbb
fnstcw
inc
shr
push
adc
fcompl
roll
sbb
in
add
jb
dec
leave
xorl
shl
scas
dec
sbb
push
inc
into
int3
es
and
out
jp
push
lcall
in
push
xchg
sub
rcll
and
adc
out
leave
out
pusha
jae
dec
lahf
pop
pop
paddq
cmpl
pop
or
jns
jne
mov
pushf
sub
pop
pop
subb
mov
sahf
bound
sbbl
enter
ds
inc
mov
sqrtps
mov
adc
ret
mov
xchg
sub
and
js
lret
ficoml
pushf
dec
int3
movsl
sbb
jno
repnz
scas
and
add
mov
nop
jge
pop
mov
push
ja
stos
loope
fstl
pop
dec
jo
repz
xor
jnp,pt
and
out
sbb
add
decb
dec
cli
lret
lods
push
push
std
fisttpll
mov
sarb
js
push
lcall
ss
fcomip
mov
jno
xchg
xchg
in
movsl
fidivrs
mov
cltd
mov
pushf
aas
mov
out
fdivrl
mov
je
test
cli
pop
pop
shlb
cmp
inc
push
pop
and
add
outsl
adc
popa
inc
fwait
in
mov
mov
push
and
lahf
adc
mov
out
rcll
mov
and
adc
sbb
cmp
std
sti
jmp
shll
cmp
fmuls
mov
jecxz
cmp
lea
in
or
iret
xchg
or
xlat
aas
xor
push
test
aam
cwtl
ficompl
sahf
hlt
jnp
push
jbe
mov
jmp
jne
mov
outsl
pushf
sahf
push
lret
xchg
loop
pop
int
push
lods
rorl
mov
dec
and
dec
xor
jno
mov
mov
sbb
ja
sub
hlt
ret
jl
loope
lods
xor
outsl
push
xchg
dec
jg
mov
mov
and
subl
add
in
ret
fisubrs
shll
jb
pop
dec
mov
in
push
cwtl
and
mov
stos
and
mov
aas
sub
lahf
shlb
xchg
lsl
add
popf
pushf
aad
push
add
mov
jb
shlb
scas
inc
sahf
lcall
pop
std
outsb
inc
mov
mov
cmpb
roll
loop
inc
dec
aaa
daa
mov
rclb
stc
push
inc
xlat
pop
mov
cmc
xor
js
pop
ljmp
int
mov
sbb
and
dec
decl
push
push
xchg
or
clc
sti
adc
mov
inc
mov
call
movl
fiadds
shrl
cmc
mov
mov
cltd
out
jns
inc
cld
in
call
lock
stc
cmc
jne
adc
fstpl
pop
push
push
mov
inc
mov
lahf
inc
test
testb
mov
clc
jns
xor
sahf
xchg
mov
mov
or
sub
test
idivl
ljmp
dec
push
pop
mov
mov
test
push
push
dec
sbb
fimuls
add
mov
cld
push
jns
mov
pop
adc
sahf
push
mov
lea
in
mov
movsl
jb
sar
xchg
pusha
jle
mov
mov
mov
mov
outsl
popa
cmp
lcall
mov
aad
mov
push
in
pop
mov
dec
adc
adc
xor
push
xchg
js
adc
loop
popf
cmp
lea
gs
insb
jp
xor
adc
mov
jae
mov
inc
fadd
in
add
sarl
in
sub
mov
fwait
hlt
pushf
xlat
or
stos
scas
cmp
mov
leave
xor
cmpl
stc
jge
push
stc
xor
xor
add
mov
fcoms
mov
mov
push
pop
mov
sbb
add
xorb
popf
dec
pushf
or
mov
sbb
dec
int
imul
sbb
lret
jnp
xor
enter
xor
ret
inc
cltd
pop
adcl
mov
cld
adc
jbe
mov
fwait
inc
mov
addb
dec
loope
scas
xor
push
cmp
fisttpl
loope
mov
loope
push
cmp
enter
and
test
mov
popf
and
aad
je
dec
mov
xor
stc
inc
push
insb
out
subb
mov
addr16
pop
or
out
aaa
lds
inc
ljmp
cmpsl
mov
dec
arpl
sbb
imul
push
mov
mov
and
xor
out
push
stc
jge
push
stc
and
fisubrs
inc
mov
jmp
rep
pop
mov
mov
rolb
or
cld
rcrl
jbe
int3
xchg
call
sbb
out
outsb
popf
add
inc
jns
push
xor
popa
or
cmp
insl
mov
mov
xchg
lock
in
mov
add
and
mov
jg
lods
ljmp
shlb
mov
mov
and
lds
es
xchg
pop
ja
pop
xor
test
sbb
xchg
stc
and
pop
pop
push
mov
inc
cli
adc
sub
mov
and
xlat
mov
sub
adc
lds
fbld
cltd
popf
inc
loope
push
xchg
das
push
cmc
jecxz
pop
inc
push
xor
jns
pop
cmpsl
addr16
xchg
push
pushf
dec
mov
mov
outsl
pop
or
xchg
dec
cwtl
jl
dec
xor
jbe
cmpsl
in
hlt
shlb
adc
sub
mov
inc
mov
clc
and
out
mov
ljmp
mov
test
adc
scas
ret
cmpsb
jns
xor
imul
push
adc
push
mov
adc
adc
dec
filds
imul
dec
test
in
pop
cmpsb
pop
into
dec
mov
pop
pusha
sub
add
adc
mov
test
bound
sub
test
mov
dec
je
cld
xor
pop
shll
shlb
lahf
dec
scas
mov
pop
xor
lcall
ss
pop
push
sbb
push
adc
adc
cld
lret
bound
in
hlt
fadds
divl
xchg
loope
adc
test
push
fdiv
inc
fmuls
add
scas
popa
ja
adc
imul
fwait
mov
fwait
or
gs
test
adc
arpl
dec
push
lret
push
xor
dec
cwtl
rcll
dec
cltd
jnp,pn
test
mov
sbbb
push
mov
mov
mov
lret
jg
mov
aad
js
and
pushf
ja
pop
js
and
sbb
or
jl
and
adc
decb
ficompl
in
sbb
pop
pop
test
insb
loopne
pop
rcrb
ret
jb
aas
enter
add
push
xlat
andb
cmc
sub
adc
inc
imul
jo
fucomip
subb
lock
mov
or
cltd
mov
inc
loop
add
outsb
pop
mov
pop
push
inc
loopne
inc
ss
mov
ficomps
sarb
gs
inc
xchg
mov
xor
xchg
lret
lahf
xorl
orl
pop
loop
sub
push
hlt
mov
pop
into
dec
lds
cmp
cmp
push
in
lret
stos
and
xor
push
mov
jae
xorb
jb
mov
dec
sub
ror
inc
in
push
mov
insl
add
in
xchg
xchg
es
push
xchg
aam
mov
mov
hlt
pop
jbe
sub
mov
mov
ja
cmc
call
dec
fcompl
fs
in
mov
sub
andb
xchg
or
push
outsl
and
ljmp
scas
mov
add
pop
mov
outsb
mov
inc
jg
aaa
fdivr
jns
or
mov
jp
sbb
out
aaa
jmp
push
roll
aaa
sub
lahf
mov
mov
or
loope
loopne
int
rcl
jns
fs
rcrl
ljmp
mov
das
addr16
sub
and
in
jecxz
fnstenv
xor
and
xor
push
adc
or
cltd
and
push
mov
lea
mov
lahf
fwait
xor
std
push
lahf
cltd
or
mov
or
mov
les
dec
dec
jbe
or
orl
or
arpl
xor
sti
flds
outsl
and
bound
enter
flds
xchg
inc
out
pop
imul
insl
fsubrl
or
mov
mov
fsubrs
aas
inc
or
cmp
sti
pop
ljmp
mov
lock
sub
dec
push
mov
stos
scas
icebp
dec
add
out
jo
cs
sub
outsl
stc
xchg
push
mov
xchg
gs
adc
sub
ret
in
es
pop
sub
movsl
mov
arpl
enter
sub
push
out
movsl
sbb
and
fildl
add
inc
mov
dec
jle
into
int3
repnz
adc
inc
inc
loopne
insb
dec
nop
out
gs
repz
pop
out
mov
movsl
stos
pop
sub
sbb
nop
int
or
mov
std
out
insb
test
mov
fcompl
pop
repnz
mov
push
jl
adc
leave
mov
jns
sbb
fnstsw
ss
cld
sbb
pop
aam
sbb
in
sbb
sahf
pusha
mov
pop
das
sub
mov
cmc
or
insb
or
je
out
bound
cmpsb
dec
mov
leave
popf
enter
xchg
sub
cwtl
pop
and
pop
inc
adc
je
fs
fwait
cmpsb
std
ja
shll
cmp
xor
scas
addb
movsl
sbb
lcall
mov
inc
pop
cmp
out
je
mov
sahf
insb
push
xchg
xor
inc
mov
mov
mov
test
xor
nop
mov
mov
sbbb
cld
imul
sbb
fwait
lret
cmpsl
jnp
mov
dec
aam
or
pop
roll
in
test
dec
and
push
mov
xchg
aas
or
mov
xor
mov
or
mull
and
and
std
push
aam
lock
imul
clc
pop
inc
pop
das
hlt
dec
movsl
or
cmpsb
stos
cs
push
mov
test
test
dec
rcr
pop
pop
adc
mov
xchg
sbb
cld
xchg
mov
fsts
es
push
jmp
push
popf
mov
pop
fs
adcl
or
outsb
std
insb
fisubrl
jmp
dec
and
lret
dec
stos
test
repnz
inc
or
rclb
mov
jge,pt
add
dec
insl
dec
test
sbb
arpl
out
and
adc
mov
lea
mov
cmp
mov
rcll
and
add
in
cs
or
jno
sbb
or
xor
or
push
test
shll
add
mov
add
dec
aam
xor
and
pop
dec
int3
repnz
call
hlt
call
dec
sti
xchg
adc
push
dec
inc
dec
sti
out
dec
xlat
mov
test
into
pop
adc
data16
add
sub
int3
lea
push
and
repz
xchg
mov
pop
inc
popa
lret
out
or
sub
aam
dec
sub
push
adc
aas
fisttpll
arpl
inc
js
sub
movsl
adc
movsl
dec
inc
clc
dec
outsl
test
and
addr16
inc
pop
sub
mov
in
movsb
lods
fcompl
fisttps
pop
adc
stc
cmp
cwtl
jmp
and
xchg
and
dec
jg
pop
rsm
cmp
lea
lret
push
push
xchg
xchg
ror
std
sbb
hlt
or
loopne
mov
stos
xor
daa
pop
insb
pop
inc
out
mov
imul
pop
divb
xor
cmpsl
jg
fwait
sahf
int3
divl
sarl
imul
mov
test
and
shlb
adc
sbbb
pop
xlat
cmp
clc
idivl
lods
jae
imull
adc
andb
mov
dec
sbb
sub
fsub
mov
enter
cmp
in
dec
mov
scas
mov
jp
addb
test
adc
sbb
loopne
enter
rcrl
pop
loop
push
pop
fmuls
adc
dec
iret
push
fistl
fldenv
inc
jae
es
jge
jae
nop
xchg
mov
scas
dec
pop
rclb
outsl
fs
cmp
pop
push
aam
inc
mov
iret
add
cs
xor
movsb
sbb
das
sbb
cmp
push
xor
movsl
and
ror
popa
pop
shlb
xchg
data16
das
adc
adc
add
jbe
push
jmp
adc
stos
ds
hlt
int
das
rcll
loopne
mov
mov
call
dec
popa
xchg
inc
xor
mov
xorb
jne
pop
insl
ljmp
fs
shll
adc
add
adc
push
pop
mov
jl
and
adc
js
xlat
aas
add
dec
repnz
push
jnp
stc
add
inc
jo
xchg
ds
pop
xchg
mov
mov
lret
adc
in
movsb
and
ret
cmp
xchg
jns
imul
and
push
xchg
adc
out
push
fcomps
ret
bound
js
mov
pop
daa
pop
aad
dec
push
xchg
in
and
jmp
mov
out
pushf
test
or
lods
mov
jle
addb
xchg
ljmp
sahf
scas
repnz
je
adc
sahf
je
testl
jmp
mov
fstl
popa
lahf
push
jno
ror
int
dec
mov
and
ljmp
cs
xchg
or
xchg
jbe
int
adc
cmp
mov
pusha
imul
sti
inc
mov
adcb
bound
inc
or
push
ljmp
adc
lods
cmp
lret
lcall
inc
push
mov
js
pop
cs
jmp
add
xlat
push
fs
stc
adc
pop
pop
aad
mov
daa
je
into
push
lcall
push
fs
inc
or
jo
leave
addr16
int3
pop
jmp
push
add
mov
repnz
mov
xor
test
aam
fildll
enter
adc
fcoml
push
sbb
sbb
push
xchg
out
adc
cltd
pop
sti
loope
es
scas
mov
scas
std
shll
jecxz
push
mov
sub
nop
inc
xorb
clc
jo
fwait
jo
xchg
pusha
lock
jle
rcll
lcall
aad
out
pop
pop
mov
push
sub
add
std
iret
movsl
iret
sbb
and
push
and
lret
mov
fsts
xchg
inc
push
mov
sbb
fs
push
fsub
lret
inc
adc
sub
hlt
inc
lods
movsl
mov
xor
icebp
xor
or
imul
dec
dec
pop
in
js
pop
or
aaa
testb
add
std
mov
lds
push
gs
fwait
mov
push
mov
in
mov
das
and
dec
clc
popa
pop
sub
test
mov
push
xor
sbb
sbb
mov
jb
movsl
stos
scas
outsb
sti
mov
cmp
adc
sub
xchg
data16
cmp
push
mov
or
dec
sbb
cmp
fs
repnz
dec
rcr
cmovle
fcmovbe
push
jl
ja
testb
scas
jns
dec
lea
lahf
inc
jno
xchg
and
sbb
scas
mov
jle
fimuls
aaa
int
lret
adc
push
mov
mov
mov
adc
mov
pop
loopne
and
dec
cmp
es
inc
icebp
aad
gs
fwait
mov
rcrl
fstps
inc
mov
pop
in
in
mov
cmc
xchg
mov
pop
xchg
push
fwait
sbb
adc
inc
cmp
testb
scas
ret
aas
cmp
pop
ljmp
fs
cld
mov
inc
gs
sub
aaa
insb
adc
add
mov
aaa
std
popa
xchg
or
mov
add
inc
fmull
pop
rcrb
sub
mov
and
mov
cmpsl
insb
push
data16
pop
stos
imul
enter
jae
lods
popa
sub
mov
lods
or
cmp
movsb
stos
adc
add
push
sti
pop
movb
fsubrs
sub
ret
sub
inc
mov
mov
sti
pop
movsl
hlt
inc
mov
pushf
rcl
test
inc
scas
in
lods
push
cltd
in
repz
icebp
rcl
mov
in
stos
insb
push
sub
and
jae
cmp
sbb
pop
mov
pop
out
test
repz
adc
in
sbb
lods
pop
mov
jns
push
mov
ja
jp
jb
sub
iret
pop
xchg
repz
and
cwtl
call
stc
lock
xchg
sub
in
sarb
add
mov
cmpsb
sahf
lea
cmp
jg
pop
aad
or
jbe
xor
nop
int
dec
push
jb
mov
sub
les
rolb
xchg
fisubl
ret
arpl
mov
in
mov
mov
call
add
daa
pop
push
ret
pop
icebp
cmp
int
jle
movsl
in
ja
daa
dec
sub
bound
inc
pop
pushf
and
pop
stos
xor
xor
scas
lds
sub
call
lods
sbb
test
sub
or
push
into
mov
cmp
add
xor
or
mov
push
and
sti
or
outsl
add
iret
mov
rcr
imul
add
psubsb
xchg
out
addr16
adc
mov
mov
xchg
cwtl
aam
mov
cltd
adc
xor
fistps
arpl
push
xor
shll
es
adc
inc
pop
iret
or
out
psraw
jb
jmp
into
xchg
mov
and
dec
push
xchg
into
sbb
mov
sahf
sahf
outsl
mov
stos
jle
and
jo
sbb
ds
sub
movsb
jnp
mov
stos
mov
data16
jp
pop
fs
adc
pop
push
test
pop
push
outsl
out
push
xchg
daa
into
pop
mov
cmpsb
sub
jle
ret
add
sub
mov
clc
imul
js
xchg
push
add
cmp
push
andb
out
pop
dec
imul
mov
std
mov
pop
je
pop
stos
test
cmp
jbe
insb
jl
push
arpl
dec
jg
lock
aas
jno
cmpsb
mov
xchg
testl
xor
rcl
subb
orb
test
neg
inc
cmc
aam
mov
xor
mov
adc
sub
clc
mov
out
sbb
popa
jne
jae
or
sbb
fcomip
push
mov
dec
es
faddp
lock
mov
lea
out
push
inc
add
push
lods
incl
xor
xchg
lret
jmp
adc
add
pop
sbb
xor
pusha
andl
push
mov
cmpsb
addr16
into
imul
pop
les
movsl
push
push
cmc
xor
pop
int
or
dec
mul
sahf
add
mov
or
push
fcomps
fdivl
cli
mov
mov
fs
push
mov
cmp
mov
mov
inc
push
lock
test
stos
je
ret
push
cmc
mov
fmuls
pop
gs
pop
inc
out
push
in
outsb
stc
lcall
mov
sbb
out
andl
cmpsb
leave
add
lahf
arpl
mov
imul
sti
faddl
mov
ds
push
xlat
push
pop
shr
inc
pop
push
and
pop
mov
mov
cs
xchg
dec
aad
pop
lea
xor
pushf
mov
dec
mov
adc
popa
enter
cmp
xlat
cmpsl
cmp
stc
mov
xchg
leave
out
push
pusha
div
iret
inc
and
adc
ret
xchg
fisttps
mov
in
mov
ss
push
mov
cmp
int3
jne
adc
inc
mov
rorb
into
clc
pop
mov
sub
jp
cmp
mov
xchg
int
leave
jbe
fwait
mov
divl
sub
lret
jnp
mov
push
icebp
xor
loopne
sub
sbb
jno
xor
test
rclb
mov
jle
push
and
decl
rorb
pop
inc
fildll
cltd
sti
pop
mov
arpl
xlat
or
das
sbb
es
xor
and
call
jmp
mov
hlt
fldt
loopne
sub
sub
rclb
adc
mov
cltd
fpatan
mov
sbb
and
fdivs
int
ficompl
sbb
in
seta
rcl
sub
push
and
es
movsl
adc
cli
fldcw
mov
jg
jb
inc
pop
jle
jns
fiaddl
mov
aaa
shrl
int3
popf
push
outsb
sbbb
xor
mov
insl
and
adc
movsl
roll
xor
clc
out
or
mov
cmp
lods
mov
ret
and
cmp
cmp
xor
and
push
xorl
pop
add
mov
movsl
icebp
mov
in
pop
pop
pop
inc
icebp
sub
jne
int
adc
fsub
imul
addr16
or
jmp
movsb
icebp
add
jns
mov
aas
push
std
mov
and
pop
jp
mov
mov
mov
les
ss
into
add
or
pop
push
notb
mov
test
or
jecxz
cmp
cmpsl
sarl
fiaddl
jno
push
mov
xchg
js
and
pop
mov
mov
push
xor
jge
mov
and
inc
leave
adc
jno
decl
movsb
cwtl
loop
mov
cmc
or
out
mov
popa
in
sbb
dec
cltd
mov
ret
jge
les
out
cmpsl
bound
pop
insb
repnz
imul
add
out
xchg
popf
mov
xchg
stc
daa
sbb
pop
mov
pusha
sbb
popf
inc
scas
or
xchg
inc
sub
movsl
xor
push
or
sbb
and
mov
popf
dec
dec
mov
fisttpl
mov
rcll
or
cmp
arpl
scas
push
pop
jmp
stos
xor
out
dec
xchg
pop
mov
loopne
loopne
aaa
mov
mov
lcall
push
xor
push
aaa
das
sbb
dec
mov
cs
insl
adc
dec
pop
jae
push
adc
ljmp
testl
ja
icebp
add
mov
xchg
call
add
stos
lret
xlat
js
jp
rcrl
inc
pcmpgtd
lds
sbb
js
cmp
mov
sub
scas
cmp
into
dec
fsubrl
cmpl
sub
sub
adc
xchg
int
xor
cltd
lock
ja
adc
push
push
cmp
jnp
or
jmp
or
push
lock
not
iret
int3
jbe
mov
dec
dec
shll
inc
sub
sbb
adc
cs
sub
cltd
cmp
xlat
mov
lock
out
adc
fadd
mov
sbb
dec
dec
movsb
jmp
mov
arpl
or
fnstcw
stos
push
add
in
bound
sysret
aaa
or
mov
cmp
dec
push
adc
mov
imul
mul
xchg
std
xchg
inc
jp
nop
inc
or
fdivrl
adc
in
imul
lret
test
ret
test
iret
leave
hlt
pop
ret
dec
fimull
push
cld
daa
xchg
shll
mov
xchg
inc
ret
add
cmpsb
aad
jmp
cld
cmpsl
clc
inc
jl
mov
mov
loope
or
pop
or
push
out
jo
rcr
mov
lds
and
lret
mov
insl
shll
xchg
xchg
cmp
ljmp
imul
loop
or
xchg
ja
lock
sbb
out
push
adc
jp
shlb
push
roll
dec
mov
gs
push
cmpsl
aaa
mulb
mov
xor
das
int
pop
push
add
ss
jb
push
mov
xor
cmc
lret
dec
push
cli
je
mov
mov
outsl
addr16
arpl
in
clc
dec
mov
xor
cli
out
pop
mov
sub
sub
sahf
dec
mov
into
mov
sub
sbb
push
dec
clc
xchg
jp
out
sbb
ss
xchg
add
jecxz
fimull
mov
in
mov
cmp
pop
dec
add
xchg
pop
pop
xor
mull
pop
cwtl
jmp
outsb
in
pop
adc
pop
xchg
subl
xchg
lcall
pop
mov
js
std
ljmp
js
mov
push
dec
pusha
push
rcrl
rol
cld
daa
push
testb
pop
out
mov
add
out
mov
shlb
xlat
js
fisttpll
adc
mov
mov
fwait
outsb
and
xor
std
sbb
push
icebp
jo
int
cmp
mov
loopne
subl
fldl
xchg
mov
xchg
xchg
leave
xor
gs
das
movsb
in
pushl
lea
push
push
pop
jne
jmp
movsb
loop
xchg
xchg
and
lahf
scas
data16
or
aad
adc
shll
cmp
xchg
lahf
int3
clc
jne
sub
pushf
test
xor
adc
jnp
fsubrs
insl
push
sub
dec
sub
loop
sub
shrb
push
insl
sbb
mov
sbb
push
and
add
cmp
pop
aas
mov
movsl
mov
js
push
xor
xchg
or
add
mov
lods
hlt
xor
imul
xchg
imul
fildl
std
movsl
add
das
adc
out
sub
sub
scas
mov
push
push
or
mov
out
mov
imul
fdivrl
adc
push
mov
cmp
imul
and
cmp
fimuls
adc
fwait
test
pop
mov
sahf
push
stc
es
fprem
lods
pop
mov
push
push
orb
jnp,pn
cmpb
into
sbb
movsb
test
pop
popf
mull
cli
mov
push
int3
out
out
iret
inc
in
jl
jmp
jmp
mov
dec
cmp
aas
mov
lret
xchg
les
out
mov
jge
adc
xor
popf
rcrb
lods
insl
shrl
cmp
xchg
push
mov
imul
add
mov
jb
xchg
lods
insb
mov
and
xor
push
and
adc
imul
mov
outsl
in
cli
or
and
and
inc
add
or
mov
fsub
lret
in
out
fidivl
mov
in
scas
mov
lods
repz
inc
ja
arpl
in
xor
fwait
scas
test
xor
mov
lahf
jmp
movsl
xor
dec
xchg
lods
in
adc
iret
sub
add
lahf
out
rcrl
and
jmp
dec
fwait
xor
cmpsl
jae
adc
mov
stos
fbld
dec
dec
jns
mov
clc
sub
jno
dec
jo
lea
loope
add
les
push
xchg
dec
lods
mov
push
jno
mov
shlb
mov
and
movsl
jo
push
addr16
push
ds
fstpl
pop
push
subl
jl
hlt
mov
gs
jns
or
sub
outsb
or
inc
add
add
fcmovnbe
stos
push
fsubrl
lds
jl
sbb
xchg
cltd
ja
mov
add
js
subb
sub
vmovntpd
xchg
mov
cs
cli
mov
jmp
mulb
loopne
push
sub
stc
dec
or
pop
ret
jmp
dec
test
iret
sarl
ficoml
dec
inc
xor
push
cmp
push
sbb
cmpsl
lcall
stos
mov
sub
ss
or
loop
or
jae
pop
add
inc
imul
adc
shll
imul
cmp
push
insb
jg
in
mov
fiaddl
sarl
inc
sbbl
or
adc
lock
shl
es
enter
push
ficomps
or
jne
sbb
xchg
iret
mov
int
lods
data16
mov
test
xchg
inc
pop
mov
push
cs
test
loope
lret
into
mov
nop
push
mov
cmpsb
mov
sbb
mov
in
jecxz
pop
fildl
mov
inc
mov
pop
add
pop
jmp
gs
mov
sbb
mov
ds
push
and
loope
mov
sub
xchg
pop
ret
inc
mov
inc
lea
cs
dec
cmp
xor
jecxz
sub
pop
ja
scas
out
not
and
ljmp
clc
mov
lea
stos
je
cli
aas
jbe
mov
cmpl
test
je
loop
xor
mov
pop
sub
jbe
pop
sub
and
and
insb
adc
jns
adc
push
cmp
icebp
push
enter
cld
std
push
stos
cwtl
into
mov
fwait
xchg
ss
pop
pop
sub
test
xlat
icebp
imul
mov
mov
xchg
cltd
and
dec
fcmovb
mov
call
addr16
mov
loope
fiadds
pop
mov
sbb
fdivr
xor
push
lahf
fsts
pushf
push
pushf
out
push
lods
icebp
inc
and
mov
imul
push
fwait
stos
push
mov
and
cld
insb
cmp
jge
rolb
sbb
xchg
icebp
test
repnz
lahf
imul
sub
dec
mov
or
mov
adc
xchg
dec
adc
xor
imul
pop
repnz
nop
pop
inc
data16
inc
mov
mov
out
mov
cld
mov
mov
push
and
sbb
insb
jae
mov
mov
idivb
nop
fdiv
ror
pop
inc
mov
add
xchg
inc
jg
ds
dec
push
in
clc
or
clc
xchg
mov
push
inc
testb
sub
add
dec
lock
sbb
fmul
int
push
jle
mov
sbb
sahf
lea
sahf
mov
sub
sbbb
out
movsl
xchg
pop
jl
inc
pop
inc
out
outsl
lcall
lods
das
lret
and
test
mov
dec
inc
lods
sub
pop
cld
jmp
jl
imul
outsb
cmpsl
mov
fwait
imul
xchg
inc
lret
add
insl
jne
xchg
dec
nop
jo
jg
mov
push
pop
xor
jno
mov
pop
outsb
imul
insl
insb
xor
aad
jp
jne
and
mov
cs
aam
xor
add
and
push
xor
pop
cmp
ret
mov
out
jmp
insl
mov
sbb
gs
mov
xchg
mov
in
cmp
ret
ljmp
or
call
ret
dec
cli
stos
lcall
cmc
test
mov
add
imul
inc
andl
ret
repz
insl
lds
sbb
sahf
lods
and
bound
aaa
jmp
mov
movsb
or
pop
sti
mov
dec
jmp
xlat
xchg
dec
shll
or
cltd
or
addb
jl
shl
cli
into
incb
iret
rolb
loope
fmulp
xchg
arpl
jmp
sub
mov
cmp
fs
mov
sub
jl
sub
jae
cwtl
xchg
sub
mov
ja
sbb
shll
fisttpll
mov
or
jl
rclb
aam
inc
sub
lahf
mov
mov
xor
mov
xchg
popf
add
xlat
adc
in
cld
push
mov
and
imul
or
fildll
lcall
push
mov
xchg
test
adc
loope
or
dec
fnstcw
or
mov
mov
xchg
fs
or
xchg
jg
adc
sub
sbb
push
pop
repz
or
cmp
mov
pop
add
sbb
push
push
cmp
sbb
mov
adc
dec
inc
movsb
das
or
inc
cmc
mov
aad
stos
iret
pop
xchg
inc
mov
mov
sbb
mov
lret
and
popf
mov
sub
or
mov
mov
lret
cld
and
in
pop
test
jns
outsl
je
into
mov
lods
push
inc
adc
adc
jno
jp
int3
and
std
divps
bound
xlat
les
adc
stos
in
js
rorb
sub
mov
out
xchg
repz
lret
adc
jl
out
xchg
shl
inc
sbb
outsl
xor
pop
sbb
cmpl
sbb
xchg
or
sub
add
inc
xor
nop
pushf
push
outsb
bound
sub
jmp
int
adc
in
push
sub
or
popa
xlat
andl
daa
mulb
dec
repz
sbb
dec
test
xchg
es
sub
adc
aaa
fsubl
arpl
pushf
mov
lds
loop
cli
xor
loopne
mov
test
lahf
and
repz
enter
flds
jne
movsb
ds
mov
or
enter
sub
or
pop
test
sub
xchg
and
push
xchg
das
dec
sbb
dec
loopne
repz
mov
loop
ffree
sbb
pop
dec
or
jo
je
mov
or
shr
and
mov
pop
dec
subb
cmp
inc
xchg
inc
fbstp
lret
es
rcrb
cli
fs
jnp
bnd
idivb
push
sarl
dec
xchg
pushf
mov
jne
shlb
xchg
fcoms
ds
movsl
and
mov
das
xchg
xchg
out
push
jnp
out
pop
mov
push
pop
mov
xchg
jge
jp
mulb
push
mov
add
insl
mov
push
test
sti
push
lahf
cwtl
ficoms
mul
push
sbb
sub
adcb
mov
enter
and
push
jmp
mov
push
repz
mov
daa
mov
jmp
jecxz
xchg
popf
mov
and
dec
xor
arpl
push
sbb
mov
cmp
test
jb
aad
ds
and
xlat
adc
xchg
mov
mov
lret
gs
push
shlb
out
mov
add
idiv
daa
pop
ret
jg
xchg
fistl
stos
xchg
pop
dec
cmp
mov
lods
stos
and
or
test
adc
jne
adc
das
cmp
dec
inc
test
stos
adcl
mov
sbb
jo
mov
sub
jecxz
push
mov
dec
lock
mov
mov
fmul
nop
pop
adc
sbb
dec
fiaddl
insb
popa
loop
and
add
ss
mov
and
arpl
push
mov
push
outsb
fistl
scas
loope
push
mov
or
mov
sbb
aam
or
test
xor
cld
out
test
aam
movsl
insb
loop
xchg
stc
cmpsb
adc
pop
adc
xchg
cmp
gs
mov
mov
sbbb
in
iret
cwtl
out
cli
data16
lods
shlb
into
cltd
cld
xchg
inc
test
fdivrs
fisttpl
jp
mov
mov
es
add
inc
mov
cmp
rcr
call
testb
cmp
fistps
and
in
pop
sbb
out
aam
pop
add
dec
and
out
das
test
leave
sbb
sub
jg
sahf
push
inc
out
sbb
sbb
fistl
pop
sbb
xchg
sbb
mov
jno
mov
dec
mov
jae
stc
mov
mov
dec
mov
call
mov
xchg
add
aas
xchg
std
fdivr
inc
mov
sbb
call
jg
adc
pop
out
xor
dec
aaa
jb
cld
dec
adc
sub
pop
and
jg
sbb
je
test
outsl
in
fisttps
clc
mov
leave
in
cwtl
rorl
dec
cmc
test
pop
inc
fdivrl
adc
cltd
add
fsubr
lret
setae
or
mov
xchg
inc
xchg
mov
pop
int3
push
sbb
add
push
push
sub
jge
adc
sbb
add
cmp
adc
scas
lods
insb
xchg
data16
pop
xlat
scas
cs
mov
sub
push
cs
pop
das
jne
jp
shll
outsl
aam
jae
mov
inc
int3
xchg
xchg
stos
push
iret
push
inc
inc
popa
imul
dec
adc
fisubrs
dec
in
loop
push
mov
in
mov
or
push
mov
pop
mov
incl
mov
jle
ja
xor
lods
xor
dec
rcll
fisttpl
arpl
push
xor
adc
add
xchg
repz
xor
jbe
jno
xchg
inc
adc
sahf
sbb
add
dec
pop
pop
in
add
dec
mov
hlt
sub
xchg
loope
rcl
rorl
sub
int
jns
dec
ds
outsl
repz
xchg
mov
and
inc
mov
sub
xor
cmc
mov
fimuls
cmc
mov
or
push
es
jge
vaddsd
icebp
clc
fbstp
sbb
lods
jecxz
lods
movsl
xchg
adcb
mov
sub
push
imul
gs
mov
xor
fwait
movsb
and
pushf
bound
push
push
cli
lahf
sti
jle
cs
pop
stc
or
xchg
cmp
push
aam
clc
repz
bound
ss
lods
outsb
pushf
sub
xor
shll
dec
sub
cmc
adc
jnp
stc
sub
pop
fnstcw
push
or
xor
and
shll
and
iret
lret
ficoms
inc
cmp
push
rsqrtps
daa
dec
fsubrl
mov
xor
xor
ss
jno
es
loopne
mov
mov
push
push
xchg
mov
movsb
fldenv
adc
lahf
cld
mov
in
jnp
mov
popf
ljmp
inc
scas
push
daa
cmp
data16
dec
ret
daa
lods
pop
mov
push
cmp
pop
lods
mov
lret
mov
mov
push
push
mov
push
fcoms
idiv
sub
cmp
jne
scas
lds
push
mov
add
leave
cmp
jno
inc
pop
cli
imul
imul
les
push
and
stos
loopne
or
mov
and
ret
jnp
and
mov
jmp
stos
sarb
gs
pop
cmp
push
pop
stos
cmc
ret
dec
fbld
xchg
mov
lods
ljmp
lods
ds
dec
and
js
ret
push
adc
and
pop
js
push
dec
mov
xchg
jb
mov
xor
mov
jo
and
aas
jp
pushf
push
fmuls
repnz
inc
fs
imul
out
dec
adc
outsl
stos
popa
movsb
and
pop
and
jae
adcb
ljmp
inc
rcl
push
ret
ja
cld
incb
mov
mov
cld
jmp
jle
inc
mov
dec
adc
ret
pop
push
add
dec
inc
int
jl
loop
pushf
lret
cld
pop
test
xchg
les
rclb
iret
sbb
xorb
in
add
stos
lods
pop
xor
sarl
mov
and
je
fs
jle
jp
hlt
xchg
shrb
daa
xor
scas
inc
push
sbb
out
pop
pop
mov
and
or
adc
sarl
cmp
das
mov
lret
mov
rcrb
mov
sahf
in
inc
xor
dec
xor
push
testl
js
sub
dec
fyl2x
inc
jecxz
sbb
fistl
cmp
test
cwtl
insb
ss
push
adc
mov
mov
movsl
mov
mov
into
sbb
outsb
mov
inc
xchg
in
or
js
xchg
mov
jg
push
loop
jle
mov
stos
outsb
adc
movsb
test
out
dec
in
mov
pop
dec
pop
jns
dec
mov
push
push
adc
test
daa
xchg
and
inc
repnz
out
xchg
push
cmpsl
and
popa
pop
push
lahf
sub
or
pop
mov
dec
jmp
mov
std
into
int
xchg
outsl
les
stos
sub
push
pushf
out
in
xchg
add
xchg
pop
imul
jae
lds
push
push
movb
xor
cmpsl
js
add
js
jle
ja
cmp
dec
cld
loop
pop
cmp
loop
iret
adc
sbb
loope
xchg
cwtl
sbb
xchg
in
mov
data16
sub
test
and
pop
mov
clc
sub
and
jno
stc
dec
stos
sub
dec
lods
enter
xacquire
or
in
insl
das
jnp
scas
jns
cmp
mov
mov
jnp
mov
js
cmp
cltd
repz
stc
iret
nop
pop
rol
shll
pushf
pop
mov
repnz
mov
push
mov
leave
mov
stos
and
jmp
mov
ret
and
mov
pop
mov
into
insl
pop
out
push
push
push
inc
sbb
xchg
mov
dec
daa
cmp
loope
xchg
test
cmpsl
pop
orl
idivl
and
push
int
pop
xchg
mov
jmp
inc
scas
jnp
pop
pushf
xor
dec
add
fwait
push
inc
cmp
mov
scas
ficoms
rolb
lock
lahf
lea
fsqrt
es
inc
sub
gs
mov
mov
dec
push
xchg
mov
movsl
mov
add
lock
fwait
pop
inc
jmp
mov
test
mov
das
push
int
mov
loope
lret
les
int3
scas
pop
mov
rolb
xor
mov
ja
pop
mov
repz
fbld
adc
add
mov
lock
in
mov
mov
or
lcall
mov
movsb
out
fs
hlt
mov
mov
aad
fmuls
add
add
xorb
dec
and
ja
ret
push
push
or
mov
bound
test
ret
mov
out
pusha
insl
mov
adc
jp
push
scas
or
push
cmpsb
push
lea
sbb
push
or
into
push
cmp
cs
jmp
hlt
jmp
out
lcall
dec
jge
inc
and
mov
pop
inc
sbb
rorb
dec
push
cmp
xchg
or
leave
shrl
cmp
aaa
xor
or
ret
xor
mov
fsubrs
pop
aas
pop
mov
dec
sar
dec
insb
add
ljmp
lock
xor
repz
sbb
fwait
mov
add
out
test
cmp
inc
sarl
jns
ss
sbb
mov
pop
or
shll
les
fiaddl
jo
sub
mov
cltd
call
or
mov
stc
fidivrl
mov
push
adc
jns
call
sub
xchg
pushf
and
push
loopne
sbb
pusha
cmp
mov
sbb
lret
inc
out
xor
sbb
jp
lods
pop
push
lcall
cli
cs
addr16
pop
sbb
test
daa
sbb
or
ret
xor
pop
cmp
arpl
nop
bound
xchg
gs
cmp
push
adc
cltd
fcomps
icebp
ljmp
dec
mov
loop
shrl
xchg
cmp
filds
mov
adc
mov
das
push
dec
out
push
push
out
roll
pop
pushf
sbb
lods
mov
or
and
xor
mov
loopne
push
loopne
mov
mov
cmp
jbe
push
pusha
or
pusha
mov
dec
sti
xlat
adc
mov
xor
lods
or
mov
test
mov
test
or
fwait
imul
push
test
mov
add
int
mov
add
idivb
scas
jns
shll
and
call
lods
jmp
fs
adc
jnp
inc
out
xlat
fnstsw
pop
dec
push
nop
push
pop
lret
jle
test
ljmpw
pop
hlt
in
dec
daa
cwtl
lods
and
mov
call
out
movsb
and
data16
movsb
lock
mov
lock
lcall
stc
push
mov
fistps
ret
mov
add
imul
fnstcw
shrl
mov
lret
sbb
push
lea
lods
dec
fs
fldt
jmp
test
lea
mov
nop
or
shrb
mov
jo
pusha
sub
or
jno
xlat
mov
mov
jecxz
leave
popa
xchg
icebp
mov
bound
cmp
jecxz
push
lret
inc
fiadds
adc
jmp
push
fldenv
lahf
adc
lcall
and
ja
cmpsl
loop
push
jae
mov
shrb
xrelease
mov
loop
arpl
insb
negb
mov
and
or
mov
cld
es
push
dec
and
mov
or
lods
scas
pop
push
add
lret
sub
jb
jb
ljmp
mov
dec
xor
fs
push
negb
stos
adcb
cwtl
fucomip
ss
lret
ss
lea
icebp
rol
addl
shr
jno
outsl
icebp
dec
imul
fstpt
shll
jbe
iret
dec
jne
jp
aad
jo
aad
cmp
push
pop
xor
push
and
aad
xchg
dec
pop
lret
fldl
in
fwait
mov
cmp
aaa
xchg
pop
cmp
hlt
pop
aas
push
cltd
jns
jecxz
lret
loopne
arpl
cld
frstor
or
pop
xchg
out
jg
data16
imul
icebp
mov
enter
mov
pushf
aad
and
pop
fisttps
mov
push
sbb
jne
shlb
cmpsl
jmp
xchg
and
ds
aam
lock
mov
push
arpl
mov
out
push
lret
into
jp
pop
inc
stos
pop
int
fsubr
push
les
outsl
push
xor
mov
cmp
dec
xchg
repnz
jmp
xor
sbb
in
notb
icebp
xor
mov
scas
push
nop
shr
and
cltd
fldcw
pop
repz
jne
xchg
adc
fldpi
dec
xor
jno
xchg
iret
cmp
mov
mov
mov
mov
push
stos
in
add
pop
adc
sub
inc
ror
rcrl
mov
mov
call
dec
or
divl
jns
or
cmp
xchg
cmpsl
push
notl
xor
xchg
add
pop
and
mov
call
pop
jle
loop
cmp
out
push
lahf
push
movsl
sub
mov
sbb
sahf
pop
in
stos
xchg
shrl
aas
out
xchg
popa
pop
jns
ja
in
adc
orb
lret
xchg
shl
jmp
scas
jg
negl
jl
in
ret
insl
xchg
and
jbe
push
inc
cmp
mov
pop
push
add
or
cvtps2pd
mov
push
inc
mov
inc
fisttpll
pop
xchg
dec
mov
xchg
test
test
jns
outsl
add
dec
jmp
jnp
test
mov
jmp
adc
rolb
push
xor
push
aas
in
mov
faddl
xchg
cld
mov
pop
lahf
pop
jl
cmp
popf
cmpsb
cmp
push
pop
rcrl
sarl
test
mov
add
hlt
mov
shlb
adc
gs
mov
es
dec
dec
rcr
lds
xchg
adc
mov
es
adc
int3
cmpsl
maskmovq
testl
js
xor
stos
loopne
xchg
data16
jns
fisubs
lcall
in
or
or
inc
and
mov
std
jbe
or
and
mov
into
shlb
adc
out
outsb
in
shlb
aad
in
rcll
mov
cmp
and
sbb
jp
gs
scas
mov
movsl
xor
push
mov
mov
pop
or
adc
push
xor
aas
pop
sbb
sub
popa
pop
mov
aad
xor
jg
jg
out
out
movb
ret
fs
adc
sti
mov
inc
jmp
rorl
jle
adc
mov
or
data16
adc
push
mov
fdivrs
subl
loope
xchg
pop
sbb
pushf
scas
cmc
push
shl
int3
pop
sub
sub
pop
xchg
sbb
int
pop
iret
dec
xchg
subb
sbb
cmp
dec
or
mov
cmpb
mov
in
jo
loopne
sahf
xchg
xchg
lods
mov
xchg
incl
add
mov
dec
sub
stos
and
in
rcrl
sbb
js
dec
stos
sub
mov
sbb
or
mov
push
mov
mov
push
cld
out
ds
fisubrl
in
fucomi
scas
test
testl
enter
ud0
ret
dec
popl
pop
push
enter
es
inc
dec
loopne
in
aam
insb
shll
mov
ret
ret
xor
mov
push
mov
testb
jnp
sti
push
loop
jp
mov
nop
loop
mov
cmp
in
sbb
xchg
int
adc
das
sub
push
out
hlt
fisubrl
xchg
test
jnp
lcall
popf
and
stos
jge
jge
inc
mov
in
test
xor
push
sub
das
sahf
ror
insl
mov
ds
cmpsb
in
cmp
mov
xchg
push
dec
psubd
and
cmpsl
or
sahf
cmpsb
xchg
insl
or
mov
xlat
ret
aaa
int
sub
push
jle
hlt
rcll
je
xor
or
lcall
xor
push
jecxz
decb
add
ja
incl
mov
ret
aaa
and
data16
push
jbe
dec
xor
jo
stos
jmp
cmp
and
js
xor
cmpsl
adc
lock
lods
dec
fs
pop
sti
lret
xchg
sahf
pop
jle
adc
add
xchg
leave
ljmp
ret
mov
mov
int3
dec
add
fdivrl
test
out
pop
es
or
pop
and
sbb
leave
inc
pop
addl
lea
dec
scas
cmp
lret
outsb
lock
bnd
cmp
dec
roll
cmp
repz
outsl
sbb
xor
inc
pusha
popf
pop
inc
sar
inc
mov
push
pop
mov
scas
mov
sub
ret
mov
loopne
aaa
pop
out
out
insl
push
jl
mov
cmpsb
push
das
into
inc
fdivrl
es
pop
push
mov
cmp
inc
lock
push
mov
add
push
lcall
cmpsl
xchg
aaa
mov
cli
fsub
fldenv
or
add
filds
mov
sub
out
cli
inc
cmp
movsb
loop
cwtl
cmpsl
inc
in
jae
pop
push
jbe
jno
sbbb
out
aas
jnp
cmp
inc
inc
out
mov
jmp
jecxz
repz
and
dec
xchg
push
fadds
push
push
pop
mov
mov
xchg
sti
imul
dec
aas
mov
addb
or
cmc
add
or
pop
cmpsl
sub
jnp
shll
stos
int
or
mov
je
ja
fistpl
inc
mov
nop
cmp
xor
xchg
adc
ror
mov
mov
mov
xor
jnp
xor
or
xlat
call
jb
data16
ss
xchg
arpl
mov
xchg
lcall
call
cmp
xor
mov
or
inc
mov
xor
int
xchg
fisubs
fiaddl
les
fnclex
mov
lcall
sbb
mov
xor
adc
js
lcall
dec
jns
inc
pop
cmp
cmp
sub
lahf
cmp
mov
cmpsl
int
pop
xor
pop
push
out
not
mov
mov
jae
dec
mov
pushf
dec
cltd
outsb
cmc
mov
rorb
cmp
jge
lea
hlt
cmp
sbb
xchg
jno
sbb
sub
jns
jmp
cmpsl
and
lret
std
aas
inc
nop
xchg
xchg
or
cmp
loop
cld
aaa
out
xor
inc
xchg
incl
cmp
dec
pop
mov
mov
sub
je
out
jno
cmp
out
or
push
cmp
push
repnz
iret
test
or
movsl
out
pushf
dec
push
mov
xchg
jns
mov
dec
pusha
test
loopne
push
and
pusha
mov
out
scas
mov
fimuls
cmp
adc
stos
jecxz
pop
imul
inc
adc
scas
insl
xchg
aad
xor
mov
test
repnz
add
cmpsl
ja
daa
or
lret
dec
cmp
push
xor
mov
mov
insl
stos
lea
xor
sub
leave
pop
cmp
xlat
rorb
mov
xchg
jle
mov
icebp
jnp
add
mov
stos
sub
push
out
and
pop
scas
lock
in
xor
insl
dec
gs
orl
imul
push
push
subb
mov
adc
pop
push
ret
sbb
adc
xlat
pop
sbb
pop
add
iret
mov
push
push
mov
dec
inc
mov
ret
sbb
adc
into
js
pusha
bound
jp
push
pushf
and
mov
pop
lcall
xor
push
cmpsl
sbb
jp
out
shll
shrb
fcmove
imul
xorl
jo
enter
cmp
dec
in
mov
daa
jle
sbb
nop
jno
jle
cmp
aas
xorl
clc
mov
fwait
jecxz
cs
push
dec
push
setb
pop
sub
cmc
out
and
ljmp
into
scas
xchg
hlt
jg
mov
lret
pusha
cmp
arpl
clc
adc
out
xchg
push
sbb
or
stc
fcoms
pop
sbb
fldenv
test
dec
cmp
rorl
enter
int
sbb
push
dec
cmpsl
ficompl
pop
xor
addr16
jo
repnz
xchg
pop
jo
stos
leave
mov
test
add
sub
int3
push
leave
and
mov
lahf
xchg
ds
sbb
jne
xchg
fcmove
je
pop
sahf
es
mov
mov
stc
jo
xor
sub
pop
push
cmpb
shrl
sub
sbb
jnp
mov
and
or
add
aam
cmp
jl
or
jg
add
lods
mov
out
clc
mov
addl
xchg
xor
ficompl
std
shl
push
out
repz
in
int3
adc
imul
inc
out
rolb
imul
aas
mov
or
mov
repz
sti
in
pop
pop
cs
sbb
mov
iret
push
xchg
cmpsb
jnp
ffree
dec
xor
ret
push
out
inc
into
mov
xchg
std
pusha
push
or
int
jns
dec
stc
out
and
stos
cs
mov
and
rcrb
outsl
dec
cmpsl
mov
inc
xor
lock
int3
inc
fwait
les
movsb
mov
inc
mov
mov
add
pop
lea
in
es
sub
mov
jno
pop
in
enter
pop
or
mov
and
jle
jns
out
mov
mov
xor
lock
fsubr
adc
js
push
and
inc
std
cli
loope
loopne
popf
add
mov
decb
mov
mov
lret
dec
xchg
scas
jmp
fucomi
mov
shlb
fbld
sub
xchg
jl
inc
lods
call
push
sub
js
lret
pusha
fdivs
lret
push
xchg
adc
outsb
insb
xor
mov
cmp
fistpl
jnp
sahf
add
repnz
cmp
mov
sarl
shr
jbe
cmp
fs
in
shll
push
hlt
test
gs
repnz
loop
jns
clc
scas
add
xchg
xor
sbb
cltd
pop
jo
pop
sahf
xchg
mov
inc
or
mov
mov
mov
insl
scas
scas
cmp
fs
cmc
cmp
imulb
fwait
lret
dec
jp
dec
aad
xor
or
into
dec
cmc
aad
cmpsb
imul
ss
pop
mov
out
stos
jmp
sub
in
mov
in
sbb
aaa
scas
dec
xchg
cmp
loop
mov
inc
test
cmpb
iret
inc
adc
in
dec
or
testb
xor
fucom
lahf
cmc
fwait
mov
test
mov
xchg
subl
cmc
pop
mov
jno
or
mov
outsb
insb
scas
lret
test
pusha
mov
xor
outsb
je
push
sub
sbb
lcall
sub
xchg
jno
js
loope
push
adc
test
or
xor
fnstcw
inc
arpl
loopne
push
adc
ror
divl
sahf
mov
fsubrl
mov
pop
adc
jbe
jo
in
add
fcompl
std
mov
push
jge
cs
fs
outsb
pop
shll
les
rcl
in
ret
mov
js
sub
loopne
loopne
adc
sbb
and
rcrl
sbb
push
adc
xchg
xor
inc
xchg
enter
xchg
mov
int3
stos
loop
mov
xor
inc
shll
jp
lcall
adc
sbb
out
jbe
dec
fs
mov
mov
mov
aam
jmp
xchg
or
mov
mov
add
test
dec
sarb
repnz
mov
add
hlt
sti
add
push
fstp
mov
and
push
sbb
mov
cmp
lahf
es
xor
adc
sbb
mov
adc
ret
div
xor
daa
ret
lock
sub
test
push
test
imul
aam
adc
mov
xlat
ret
jp
or
call
shll
ret
xor
sahf
dec
mov
fnsave
in
mov
js,pn
mov
xor
dec
insb
pop
jae
insb
daa
xchg
sub
int
xor
xor
jnp
lods
adc
cmp
inc
outsb
sbb
xor
xlat
cmc
fnstcw
xor
mov
inc
cli
and
adc
inc
ja
lret
sbb
mov
loop
pop
mov
cmp
jnp
push
cmp
mov
add
mov
sub
pop
dec
inc
into
sbbl
push
mov
int3
sbb
fstl
negl
into
jne
or
fidivl
mov
mov
add
sbb
leave
sbb
lea
sbb
xchg
outsb
shlb
fcomip
fwait
sbb
cltd
sahf
sub
push
jecxz
push
inc
lcall
inc
mov
dec
mov
jl
gs
cmp
clc
mov
jbe
inc
jne
in
shrl
sarb
aaa
add
sub
ret
pop
lock
sub
mov
imul
mov
sub
push
mov
sub
mov
dec
adc
pop
jp
or
mov
bound
stc
sarb
push
testb
fstps
cmp
xor
adc
sub
cwtl
mov
andb
lret
outsb
mov
dec
inc
lods
ljmp
insb
dec
gs
test
or
orl
dec
sub
imul
inc
test
call
xor
sbb
adcb
addr16
lret
lcall
sahf
les
push
push
jae
sbb
dec
xchg
inc
je
sbb
mov
fdivrl
xchg
aad
push
cmp
dec
out
adc
imul
sub
xorb
clc
clc
dec
fldt
add
mov
dec
fsubrl
inc
xchg
jo
jb
xchg
inc
shrb
adc
cmp
xlat
outsb
sahf
fxch
cmp
dec
dec
popf
icebp
sub
jnp
adc
sbb
xorl
or
dec
xchg
dec
xor
pop
mov
adcb
inc
and
mov
pop
push
sub
or
mov
movsl
je
sub
pop
lock
mov
jne
mov
popa
fnclex
dec
std
fstp
sub
iret
cmp
ret
add
dec
cmpl
cld
pop
push
xchg
adc
pop
pop
pop
das
xchg
fs
inc
xlat
out
pop
adc
adcb
test
pop
enter
push
scas
dec
inc
xor
sub
pop
xlat
movl
sbb
xor
xchg
or
mov
mov
iret
lret
aas
repz
lret
sub
or
mov
sbb
push
inc
sub
cwtl
decb
sbb
dec
imul
inc
or
mov
sub
pop
or
push
cli
sbb
lods
cwtl
pop
sub
pop
xor
adc
punpckhwd
jmp
sar
stc
pushf
pushf
push
sti
jl
mov
outsl
push
xchg
int
jge
pop
adc
lret
and
call
xchg
xor
pop
xor
popf
mov
sub
neg
or
cs
loopne
orb
in
test
shll
and
aad
mov
add
cmc
inc
and
mov
sahf
fsubl
mov
imul
or
cmp
cld
test
adc
or
add
pusha
fbld
lahf
or
sub
icebp
add
hlt
aam
sbb
cmp
pop
or
mov
das
dec
sbb
clc
pop
lock
adcl
stos
lods
fstpt
mov
inc
repnz
add
pop
inc
imul
push
xorb
js
cmpl
xlat
add
lahf
cmp
bound
cmp
sti
inc
cmpsb
arpl
push
addr16
movsb
lea
setne
test
pop
hlt
xchg
xor
push
inc
ss
push
pop
push
dec
jmp
push
imul
mov
addb
aaa
xchg
jmp
stos
stos
dec
mov
arpl
outsb
mov
xor
sub
dec
jo
sahf
daa
imul
xchg
loopne
and
lret
imul
push
dec
idivb
nop
lods
fldcw
cmp
pop
repnz
repz
js
out
add
mov
sbb
popf
inc
or
sbb
ss
inc
sbb
pop
scas
std
lret
mov
loopne
jno
push
dec
dec
shrb
into
popl
out
or
cmpsl
rol
pop
add
sbb
mov
xchg
insl
dec
clc
icebp
aas
cmp
mov
adc
jb
in
shll
aaa
jb
mov
push
xchg
sub
inc
sub
lds
lret
stos
sub
leave
xor
icebp
outsb
ljmp
push
rcrb
jo
repz
cmp
rcrb
add
cli
imul
dec
ss
cld
or
and
push
push
xchg
fsubs
fisttpll
cld
jl
adc
xchg
mov
sbb
pusha
int3
lds
imul
lret
xlat
popf
inc
jg
cmp
xor
xchg
out
lahf
or
insl
dec
inc
and
adc
incl
and
mov
shlb
arpl
test
aad
out
loopne
lahf
aaa
outsl
pop
test
xor
aaa
or
popa
jmp
or
mov
xchg
aam
sahf
jmp
mov
popa
add
mov
or
call
mov
inc
mov
aam
adcb
adc
sub
mov
gs
dec
mov
ds
cmpsl
xchg
cmpsb
push
fcmovnu
in
orb
pop
inc
rcr
stos
in
aam
clc
lret
mov
pop
jge
pop
sahf
repnz
mov
nop
cld
mov
loopne
adc
js
xor
and
stc
ja
jg
out
mov
cmp
std
sub
pop
mov
sub
sti
add
pusha
push
dec
popa
cmc
mov
adc
popf
inc
cs
ret
fsubrl
lcall
popf
ret
or
je
stos
cmp
cmp
push
mov
fdivrs
inc
int3
mov
fbstp
push
insb
push
and
mov
mov
adc
inc
pop
xchg
cld
xor
jmp
clc
and
lret
cs
fsts
arpl
movsl
or
mov
xorl
push
shl
adc
jne
shrl
les
test
int3
cmp
xor
ret
imull
adc
repnz
pusha
jno
sub
dec
cltd
push
loopne
aam
outsb
testb
mov
int
push
cmp
sahf
mov
pop
outsb
stos
mov
push
inc
in
add
mov
push
jge
inc
jno
stos
mov
xchg
add
cwtl
ljmp
adc
inc
out
sub
or
pop
inc
sbb
lock
jno
pushf
repz
sub
out
rcr
pop
popw
shl
pop
test
sub
dec
ds
sub
mov
test
stos
mov
pop
int
enter
rcl
jbe
xorb
pop
insb
rcrb
jne
mov
sbb
adc
cltd
addr16
jb
inc
adc
push
out
mov
and
out
aam
imull
mov
faddl
rcrl
adc
pop
pop
xchg
sbbl
dec
mov
jmp
ljmp
inc
cmovl
xchg
mov
out
and
in
std
jno
pop
push
push
sub
jb
sti
fidivrl
and
lock
mov
mov
arpl
mov
push
mov
push
mov
xor
loop
pop
pop
stos
in
addr16
xlat
lret
sti
sub
xor
xorb
test
lcall
out
ret
sbb
add
into
sti
js
popa
icebp
xchg
adc
jno
call
push
scas
sbb
inc
test
dec
jp
in
ret
fcompl
sahf
mov
out
adc
imul
add
gs
pop
mov
jge
sbb
xchg
ss
pop
adc
or
push
lea
shr
hlt
adc
lret
mov
mov
popl
les
adc
push
lahf
push
cmp
in
xchg
sar
dec
lret
mov
ja
pop
mov
mov
js
mov
fistl
dec
sub
aad
mov
les
repz
out
cld
mov
dec
test
and
dec
mov
push
fcoms
inc
mov
cld
xor
cmpsl
jle
inc
push
stos
pop
mov
loope
jecxz
xor
mov
in
lock
repz
mov
inc
mov
sub
dec
aas
pop
jp
push
add
andb
loop
push
push
xchg
push
mov
dec
jg
pop
les
inc
inc
push
and
and
lea
sbbl
mov
adc
mov
std
outsb
movsb
rol
int
fwait
lea
cmpsb
adc
xchg
rorl
dec
sahf
mov
fst
out
xchg
fs
jb
std
jge
adc
test
xor
and
mov
sbb
mull
inc
ljmp
xchg
mov
enter
mov
mov
jae
cmp
push
rorl
lret
cli
out
xchg
mov
dec
xchg
jnp
mov
adc
mov
xor
dec
clc
inc
and
jnp
lret
inc
shlb
dec
das
fnstsw
jmp
mov
push
leave
add
dec
add
add
repnz
pop
push
push
in
xchg
popa
nop
fbstp
repnz
sbb
fcmovnbe
bound
lret
rcr
aad
and
out
imul
mov
int
hlt
add
and
xor
push
dec
push
aaa
bound
cs
mov
mov
mov
loope
mov
fwait
scas
add
out
cmpsb
dec
cmp
and
pop
push
fldcw
aas
pop
cmp
mov
xor
pushf
mov
popf
lret
add
cmpsb
jne
aas
dec
popa
adcl
mov
fdiv
jbe
push
dec
fs
adc
sub
sub
popa
aam
nop
fbstp
add
bnd
pop
inc
mov
cld
pop
push
pop
jo
aam
lock
xchg
xchg
pop
mov
or
add
xchg
jl
or
pop
dec
arpl
sbb
pop
jl
mov
cmpsl
mov
mov
jno
xlat
out
cmp
rorb
mov
imull
idivb
pop
fidivl
xor
push
pushw
lods
pop
mov
cmp
pop
mov
pop
mov
dec
ret
in
enter
mov
in
xor
mov
inc
cmp
pop
inc
sub
lret
adc
cmp
imul
push
scas
mov
and
std
imul
pop
xor
hlt
lods
idivb
mov
cmp
clc
pop
into
push
xchg
xchg
inc
lods
dec
and
push
and
test
psubusb
inc
jmp
push
cmp
push
cmp
inc
adc
out
out
mov
and
outsb
insl
pushf
add
push
pop
mov
cs
mov
fs
jno
call
inc
or
aam
sub
cmp
cwtl
push
add
mov
pop
dec
xchg
ljmp
mov
fmull
inc
and
pushf
imul
sti
rol
or
outsl
jmp
jns
ds
lods
lahf
in
dec
imul
mov
push
adc
and
imul
dec
add
imul
shrl
lret
add
push
enter
xlat
out
into
pop
enter
lea
cmp
loop
lahf
scas
scas
inc
shlb
pop
mov
outsl
ss
stos
fisttps
push
lea
orl
lret
daa
push
not
adc
xor
push
loopne
imul
or
mov
cwtl
scas
sub
jp
ret
fldcw
xchg
lcall
shll
je
mov
mov
jge
stos
push
adc
cmp
push
lahf
push
sbbb
jmp
xchg
cmp
and
mov
cli
scas
mov
push
adc
in
jbe
xchg
popl
inc
jnp
fbstp
cltd
xchg
cmc
dec
adc
or
push
inc
push
pop
xor
popf
jae
sbb
lock
pop
mov
mov
scas
sbb
in
pop
js
cli
and
xchg
jae
mov
int3
inc
and
and
call
jle
xchg
pop
sarb
xor
cmovno
loope
xor
xor
mov
test
dec
out
stos
hlt
vcmppd
mov
test
inc
and
mov
into
repz
cwtl
mov
outsb
mov
xor
xchg
mov
dec
cmp
sbb
rcrb
aas
stos
push
call
push
repnz
outsl
inc
lods
iret
and
inc
mov
scas
inc
xlat
xchg
fstpl
subl
lds
lcall
mov
out
jae
jecxz
sahf
or
fsubp
test
outsb
in
ds
loopne
loopne
and
xor
xorb
scas
lds
pop
popf
cmc
adc
cmp
jne
sti
pop
push
push
out
sbb
lods
out
loop
jecxz
sub
add
sub
ret
out
and
mov
sub
lods
pop
and
pop
sti
enter
xchg
les
pop
imul
mov
ret
or
mov
pop
arpl
and
add
lds
xchg
ficomps
push
xchg
loope
push
test
out
inc
sbb
mov
lret
mov
int3
ftst
ss
fdivrl
jmp
push
pop
enter
mov
cmp
int
mov
cltd
mov
in
and
adcb
add
int3
out
je
addb
fwait
inc
mov
out
hlt
data16
aam
and
test
data16
jmp
fdivl
cmpsb
or
mov
xchg
cmp
lods
mov
dec
sub
add
test
leave
add
sub
pop
jne
in
mov
gs
das
mov
pushf
push
sub
dec
jae
fists
adcb
ficoml
loop
gs
mov
shlb
and
out
push
imul
js
in
xor
jmp
mov
jg
mov
mov
out
jns
inc
push
mov
andl
int3
ss
subb
mov
shrb
or
ljmp
push
sub
cs
clc
jae
pop
pop
inc
inc
outsl
pop
fwait
arpl
cmp
repz
jmp
sub
xor
rorb
mov
mov
or
push
icebp
mov
clc
aad
adc
mov
imul
jo
push
movsb
das
mulps
adc
jg,pn
adc
sbb
stos
add
and
ret
ret
mov
xor
shlb
out
mov
int3
xchg
mov
stc
pop
shrl
sub
stos
push
add
loopne
popf
dec
mov
mov
idivb
lret
fwait
xor
and
aaa
cmp
xchg
loop
xor
lea
cmp
cmp
lods
inc
xor
mov
cs
or
xchg
cli
inc
cmpsl
call
shlb
mov
jg
cmp
or
mov
mov
imul
nop
and
sbb
call
jg
sbb
xchg
xor
fwait
add
jne
sbb
cli
inc
inc
inc
movsl
popa
sbb
shlb
push
movswl
pushf
cmp
sbb
pop
imul
fs
mov
lods
daa
movl
mov
inc
xor
push
movsl
pop
xchg
and
fwait
mov
popf
lds
lds
rcrl
andb
notl
out
imul
mov
mov
or
xchg
mov
jmp
push
mov
mov
add
sbb
xor
and
in
jo
popf
push
pop
xor
inc
xchg
fcoms
push
ret
and
data16
mov
push
jb
sbb
xchg
pop
lret
ds
dec
lock
add
xchg
mov
call
add
or
push
xchg
and
cmp
daa
fldl
mov
addl
inc
mov
stos
daa
add
mov
inc
popa
iret
out
xchg
enter
pop
and
insb
pop
popl
inc
sbb
loop
ret
loop
jmp
or
fs
cmc
pop
rolb
jle
adc
push
testb
jecxz
cmpsl
or
xor
movsb
jg
mov
lahf
shrb
enter
sti
fwait
add
jns
fistl
lock
addr16
inc
pusha
cmpsl
icebp
and
inc
out
sbb
stos
loop
sub
xor
mov
aaa
iret
mov
lds
andl
scas
bound
mov
shrb
inc
pop
and
jp
dec
pop
sbb
push
in
add
les
fsts
lods
bound
lds
fists
jnp
xlat
mov
aam
jbe
inc
xchg
sub
push
xadd
inc
shlb
push
xchg
xchg
ss
rorb
xor
xor
xor
jge
je
rolb
dec
pminub
lods
push
cmp
sub
pushf
mov
mov
adc
sub
pop
cmp
push
aad
jo
or
dec
mov
and
add
push
insl
repnz
inc
test
or
pushw
jecxz
in
inc
push
into
sub
mov
cmp
jmp
xchg
adc
in
cltd
sbb
popa
add
push
xor
cmp
adc
es
aam
adc
fs
enter
pop
adc
repnz
inc
movsb
mov
aad
hlt
mov
shr
push
sbb
lods
push
mov
inc
sub
mov
andb
cmpb
mov
sbb
int
fwait
enter
jae
fldcw
xchg
repnz
mov
xchg
and
pusha
and
je
inc
push
inc
push
out
mov
jnp
adc
jns
mov
movsl
adc
xor
add
mov
push
rorl
jb
daa
mov
mov
in
pop
cmpl
xchg
int
xchg
pop
mov
xchg
cmpsl
push
or
xor
push
cmpsl
sbb
adc
dec
add
sbb
push
test
jae
jle
lds
cmpsb
inc
mov
movsb
adc
lods
or
test
aad
adc
push
or
fsts
xor
sbb
cmp
loop
ret
scas
xor
test
mov
sub
mov
add
iret
popl
xor
or
sti
cmpb
adc
cmp
mov
js
xchg
aaa
inc
sarl
fiadds
inc
pop
test
dec
cwtl
loop
outsb
jnp
xchg
out
jnp
jge
imul
mov
roll
movl
sub
ja
es
xor
sbb
rcrb
mov
xor
loop
mull
icebp
sub
inc
pusha
cmp
jecxz
addb
push
push
loop
push
in
mov
test
into
sub
and
sti
dec
adc
dec
out
or
and
xor
mov
dec
mov
rolb
cmc
push
push
test
mov
cmp
inc
mov
popa
dec
nop
xor
xchg
rolb
int
push
push
jg
xor
sahf
bswap
jno
imul
enter
jb
mov
aas
push
jle
std
pop
pop
cltd
inc
add
or
mov
mov
or
cmp
xor
jno
je
dec
ss
ss
xor
push
repnz
mov
test
ljmp
out
and
add
mov
sbb
and
les
dec
bound
push
sub
dec
push
lds
cmp
dec
or
rcrb
cmpsb
mov
fildll
add
mov
adc
outsb
sub
adc
mov
adc
mov
stos
push
mov
rcll
jbe
daa
cmpsl
inc
insb
jmp
js
or
outsb
lahf
jb
pop
faddp
xor
jle
loope
add
loop
push
idivl
cmp
cmp
dec
int3
dec
xor
sbb
subb
cmp
enter
sub
sub
sbb
cli
mov
jno
fmul
test
incl
loop
adc
mov
dec
xchg
ret
ret
call
jbe
jne
mov
fsubs
dec
ljmp
gs
fldt
mov
nop
push
mov
jo
sub
scas
mov
jbe
gs
xchg
mov
jbe
int3
sbb
out
push
dec
cli
sahf
inc
xchg
popf
outsb
loop
std
push
push
adc
arpl
mov
jmp
mov
es
cmp
jo
lret
push
jnp
pop
mov
lcall
popa
inc
add
fdiv
xor
pop
je
fcompl
pop
outsl
jo
loopew
and
adc
and
rorl
push
xchg
push
imul
loope
push
cld
sbb
pop
leave
jbe
push
xchg
mov
pop
ficomps
push
inc
mov
or
jne
pusha
xlat
gs
aad
jb
add
pop
scas
push
xor
int3
mov
mov
dec
loope
inc
fbld
mov
lock
js
into
cmpl
shrb
hlt
ljmp
shrb
les
or
pop
or
je
xor
xor
sbb
repz
push
pop
cmp
dec
lds
arpl
pop
add
aaa
jg
dec
leave
or
repz
inc
out
add
call
dec
adc
xor
or
mov
jnp
xchg
fsubrs
jnp
rcrb
mov
int3
pop
xor
mov
sti
cli
mov
xchg
mov
insb
cmp
pop
cmpb
test
mov
out
sub
cld
mov
dec
cld
in
cmp
and
xchg
push
icebp
jae
mov
stos
out
fcomps
mov
pop
jecxz
stos
inc
sub
in
cmpsb
inc
cmp
cmpsb
xor
xor
and
inc
xchg
mov
pop
inc
loope
lcall
sarl
insb
insb
call
dec
aaa
push
mov
adc
inc
ret
mov
mov
mov
sahf
cmpsb
xchg
imul
pop
or
mov
loope
bound
mov
movsb
add
mov
leave
imul
fldenv
mulb
sarb
inc
lea
sbb
xchg
add
outsb
rcrl
sti
push
add
into
scas
mov
inc
cmp
push
int3
dec
adc
cmp
jecxz
aaa
cld
cmp
pop
clc
or
scas
push
sbb
fucomp
loopne
pop
dec
dec
scas
sub
mov
rcrl
adc
lret
in
cli
add
jo
push
dec
mov
push
push
out
movsb
mov
lret
xchg
test
nop
data16
not
and
pop
leave
and
xor
push
imul
sbb
and
sbb
imul
lock
ja
or
insl
xchg
xchg
rcr
push
popl
xchg
loop
stos
fs
dec
inc
inc
jg,pn
sub
adc
xor
jno
pop
test
adc
dec
push
mov
mov
xchg
jmp
mov
jmp
cmp
push
adc
adc
add
roll
lcall
sub
scas
dec
or
mov
lock
imul
std
add
test
mov
fdivrs
and
sahf
inc
lcall
loope
cmp
ficompl
xor
xchg
inc
loop
bswap
mov
arpl
sub
and
sub
loopne
ljmp
inc
orl
pop
shll
push
add
or
fdivrl
jp
inc
stos
inc
roll
leave
mov
sarb
and
inc
xchg
les
sar
xchg
enter
lcall
sub
imul
imul
pop
sbb
add
dec
adc
js
xchg
test
in
sub
xor
cmp
push
dec
sbb
xchg
insl
xlat
pop
mov
stc
cmp
ret
popa
ficoml
or
in
adc
push
jg
cmp
mov
sti
mov
clc
out
sub
cwtl
cmpsb
scas
sub
xor
sub
xchg
inc
popa
push
insb
shrb
fistpll
leave
or
push
movsl
xchg
sub
sbb
dec
or
xchg
stos
shr
fidivs
push
aam
and
jl
sub
mov
xor
pop
loopne
frstor
cmp
outsb
orb
xchg
push
out
jp
pop
idivb
outsb
fstpt
sbb
les
fsincos
fmul
in
jmp
cmp
push
pop
pop
cwtl
push
xchg
hlt
inc
pop
int
xchg
aaa
fcmovnbe
and
fs
std
popf
inc
testb
stos
test
pusha
fs
dec
mov
cmpsl
inc
fbld
adc
mov
lea
pushf
inc
xchg
xchg
or
add
enter
adc
and
push
mov
stos
pop
jbe
jb
ljmp
pop
popf
ss
ss
test
test
jle
shrl
sbb
outsl
mov
dec
mov
stos
mov
lock
scas
jbe
push
pop
dec
cltd
push
and
fcoml
aaa
repz
pop
sbb
in
jmp
cmc
jg
xchg
mov
ror
pusha
xchg
and
popa
jmp
pop
in
fcomps
daa
cmp
dec
or
in
shr
jg
test
lret
adc
mov
sbb
xor
xor
cmp
dec
in
in
dec
imul
bound
push
in
jge
push
mov
mov
jns
sbb
decl
add
pushaw
mov
sub
shll
sbb
adc
scas
aam
hlt
xlat
pop
mov
ret
xor
adc
sbb
or
jnp
cmp
ret
inc
pop
in
jecxz
fwait
into
test
cmp
imul
ret
lret
sahf
cli
or
addr16
sbb
sbb
jns
jmp
int
addb
xor
sti
jo
dec
and
test
push
xor
mov
mov
test
pop
pop
movl
add
jae
ljmp
aaa
or
call
xchg
mov
lock
jecxz
out
inc
and
adc
push
fcmovnbe
imul
xor
mov
mov
or
test
addr16
lock
inc
lcall
nop
adc
pop
cmp
popa
stos
xor
mov
xor
test
mov
xchg
or
scas
pop
sbb
aas
std
mov
insl
sbb
jb
sbb
nop
cmp
mov
mov
mov
cltd
mov
ror
or
jg
jg
daa
mov
in
insl
out
repnz
xchg
insl
testb
and
dec
cmpsb
and
lahf
repz
out
sbb
das
stos
bound
and
cs
sbb
dec
xchg
std
inc
pop
test
xchg
insl
inc
loopne
jg
leave
movsb
push
push
jge
cmp
mov
push
jle
hlt
add
adc
dec
push
addr16
int
je
pop
push
stos
sub
push
or
pop
xchg
loope
mov
sub
sbb
ja
mov
cmp
add
int3
int
fsubr
push
xchg
push
sub
out
xor
call
test
mov
mov
pop
shlb
mov
out
pop
loopne
mov
lret
loope
xchg
add
and
pusha
dec
jle
clc
pop
jecxz
mov
mov
push
mov
pop
in
push
js
mov
and
in
bnd
dec
mov
jg
xor
push
jg
psubsb
fisubl
fcoms
lcall
push
add
cmp
xchg
cli
stos
outsl
movsb
jp
insb
xchg
fiaddl
mov
fisttps
sub
insb
jge
fisttps
enter
pusha
fiaddl
push
in
dec
adc
jg
mov
icebp
sub
fs
xchg
and
test
out
in
push
or
ja
sbb
mov
mov
or
dec
out
dec
repz
push
lret
call
cld
sub
mov
lret
sub
xchg
xor
or
fisubrl
xor
cmp
xchg
fs
add
roll
xor
or
sub
sub
push
mov
ret
repz
fstpl
jb
pop
lret
xchg
fidivl
dec
ret
mov
lret
icebp
hlt
pop
push
push
scas
insb
cmpsl
xor
push
jae
and
rcr
mov
dec
xor
lahf
shll
cmp
mov
inc
in
inc
jle
cmp
scas
ja
adc
in
mov
pop
sub
out
shl
andl
call
push
in
inc
cmp
mov
adc
fstpt
xchg
add
addr16
pushf
mov
mov
outsb
or
lods
mov
bound
push
pop
in
fsubs
add
sbb
sbb
or
pop
out
pop
pop
int3
inc
or
push
outsb
mov
dec
cmc
dec
xlat
push
and
jle
and
pop
call
aaa
mov
jp
mov
outsb
mov
aad
ljmp
sub
insl
mov
dec
in
push
push
and
cld
sub
outsb
add
push
fnstenv
dec
mov
loope
les
test
test
out
pusha
push
imul
lea
mov
sbb
cmpsl
jae
je
dec
es
push
inc
sahf
xchg
jl
mov
arpl
insb
imul
sarl
dec
mov
lcall
inc
rcrl
stos
repnz
cmp
int3
mov
cmp
cmpsl
sbb
lcall
rorl
nop
in
cmp
rolb
or
sbb
mov
jno
xlat
push
fdivs
daa
stos
subb
popa
scas
in
xor
mov
stos
outsb
cltd
hlt
and
mov
push
mov
cmpsb
inc
out
scas
repnz
xchg
pop
js
jge
adc
jg
adc
push
inc
push
mov
cli
imul
adc
lods
ja
leave
data16
jns
lcall
imul
or
inc
aam
clc
sbb
clc
push
push
mov
adc
cmp
push
jns
lret
sbb
lods
and
mov
in
add
cmc
xor
test
popf
daa
push
rcrl
mov
enter
adc
adc
xor
or
mov
fstl
cmp
mov
dec
lds
sti
in
or
aaa
enter
jbe
in
dec
cmpsb
fwait
mov
es
call
imul
xor
or
push
scas
addl
test
and
and
pop
jnp,pn
sbb
faddl
xor
scas
push
xchg
xchg
push
dec
movsb
add
mov
mov
insb
cmp
jbe
lock
mov
bound
std
lahf
dec
das
jno
scas
and
jp
xchg
cld
cmp
mov
push
jge
mov
sub
out
imul
mov
fdivl
push
ss
mov
int
lea
mov
in
or
clc
in
jo
std
add
and
or
fcoms
pop
not
test
in
mov
jl
push
dec
lgs
nop
int3
outsb
insb
lea
test
es
daa
dec
xor
ret
and
mov
pusha
xchg
ljmp
out
sub
lea
pop
lds
sbb
out
mov
bound
mov
jecxz
mov
xchg
xchg
add
sbb
scas
pop
jg
mov
lods
mov
push
jbe
sub
test
xchg
jo
cmp
ret
and
mov
adc
fistps
dec
inc
adc
dec
cmp
sti
idivl
ss
es
mov
lds
jl
pslld
adc
ljmp
xchg
nop
xor
add
out
xor
xor
orl
gs
int
inc
inc
cmp
gs
inc
mov
in
mov
jmp
int3
hlt
sbb
push
loopne
inc
mov
dec
hlt
pop
or
lods
negl
aam
cmp
adc
shll
cmp
lea
aaa
mov
jl
push
dec
out
push
in
rcrb
jecxz
mov
aaa
sbb
sub
test
mov
aad
mov
push
or
ret
clc
add
imul
xchg
jp
lods
bt
mov
mov
pop
mov
insb
popf
adc
aad
int
out
and
mov
add
sbb
icebp
sub
fwait
cltd
ficoml
mov
push
add
mov
cmp
cmp
mov
sti
faddl
aam
cmp
jg
mov
xor
sub
aas
jg
mov
dec
ret
imul
adc
adc
xchg
imul
mov
cltd
pop
push
inc
jmp
je
cmpsl
push
stc
das
imul
jae
pop
cmpb
sbb
xchg
pop
popa
fwait
imul
mov
adc
jle
aad
mov
push
adc
ror
push
mov
mov
mov
mov
inc
decb
rcl
bound
nop
clc
inc
sbbb
mov
shll
push
lahf
dec
mov
push
add
push
cmp
cmp
sti
jg
mov
pop
pop
jae
in
lds
test
out
ret
mov
cmp
fsubr
sets
inc
mov
jbe
sub
add
test
adc
pop
mov
mov
inc
mov
addr16
rcr
mov
sbb
dec
sbb
cld
decl
cmc
shr
push
sub
movsb
cmp
sti
jo
je
inc
dec
clc
ds
out
inc
icebp
pop
rorb
mov
adc
andl
xchg
xchg
iret
or
jl
lret
sbb
roll
push
adc
sbb
and
jb
jg
sbb
sbb
cmp
cld
mov
xchg
sahf
push
adc
pop
repz
adc
fcomps
xor
shrl
add
jne
int
cmp
mov
adc
test
mov
sbb
rclb
std
arpl
sbb
lea
std
adc
out
scas
and
in
ds
sbb
outsb
icebp
movsl
xchg
out
out
lock
or
pop
je
je
mov
popa
xchg
pop
mov
add
push
mov
cvtps2pi
in
dec
jo
jp
test
sub
dec
or
or
lods
lods
adc
jp
cmp
pop
outsb
rclb
pop
stos
mov
ror
mov
mov
push
insl
mov
sar
lahf
lods
nop
push
call
data16
lods
push
sub
jnp
cmp
push
call
lret
mov
mov
js
inc
pop
into
push
test
pushf
jl
mov
in
fs
sti
mov
jno
add
int3
ret
sbb
mov
pop
xor
aaa
cmp
xchg
mov
add
cmp
add
lea
rcrb
push
andl
ret
add
mov
ret
je
add
inc
inc
dec
shr
xchg
add
sbb
mov
mov
hlt
and
mov
out
pop
jnp
xor
mov
fstps
fidivrl
das
outsl
scas
xor
jle
pop
lcall
push
rcrb
outsb
xor
std
lds
or
repz
pop
loop
bound
xor
filds
repz
imul
lahf
mov
imul
icebp
mov
xor
dec
lods
negb
repz
xchg
jle
outsb
jbe
fldt
lahf
push
stos
cmp
add
push
or
pop
jns
jb
lds
push
xchg
mov
sahf
cli
jmp
or
rclb
jp
mov
js
lods
push
roll
pop
pop
dec
mov
sbb
jo
mov
aas
push
add
jmp
adc
mov
loop
cmpsb
mov
idiv
add
push
adc
cltd
rolb
push
std
iret
leave
mov
sarb
jnp
lret
or
jae
loopne
lods
jnp
sub
es
into
aad
fidivl
gs
push
lret
pop
test
xchg
test
lods
mov
mov
mov
xchg
out
inc
jecxz
ror
movl
fs
nop
rorl
out
loopne
hlt
dec
inc
cmp
scas
mov
xchg
jnp
jno
lds
ret
inc
mov
in
or
hlt
js
and
sub
cld
dec
add
xchg
ficompl
push
push
mov
add
cs
fldt
int3
adc
xorl
push
push
mov
inc
dec
jle
xchg
jp
cli
sbb
dec
fsubrl
mov
fwait
mov
xor
jne
cmp
dec
xor
dec
jle
lahf
in
pop
aas
outsb
cwtl
mov
enter
mov
pop
xchg
and
out
lret
xchg
jg
sub
imul
fimull
cwtl
inc
aam
or
lods
test
out
std
mov
xchg
add
in
fcomip
cli
cmp
jo
cmc
dec
mov
pop
jbe
push
sub
push
outsb
push
jmp
bound
lods
mov
std
adc
in
dec
mov
push
mov
xor
test
inc
movsl
sub
and
and
cmp
jmp
jbe
movsb
and
xor
pop
mov
mov
sbb
out
lahf
ret
inc
sbb
daa
sub
call
adc
call
iret
mov
int3
add
movsb
in
adc
rsm
adc
mov
push
scas
dec
rolb
mov
inc
sub
xor
ljmp
mov
loop
jl
mov
ja
jle
mov
cmp
arpl
sub
pop
sub
and
mov
sti
and
xchg
or
pop
je
test
xchg
sti
das
pop
int3
data16
xchg
sub
ficoms
push
sahf
outsb
negl
cltd
fwait
inc
adcl
cmpsl
push
test
mov
pop
leave
ret
fdivrs
movsl
xor
jecxz
or
mov
daa
cmp
push
mov
gs
inc
jne
jle
fidivs
cmp
dec
adc
cs
je
mov
nop
jns
mov
xchg
outsb
test
lods
adc
and
cmp
cltd
mul
ss
jne
mov
rcrl
xchg
out
cmpsl
cmp
mov
sbb
push
icebp
cld
dec
shl
cltd
or
or
loopne
mov
sahf
mov
out
mov
test
dec
insb
outsb
fidivrs
add
push
jle
aas
pushf
push
mov
lds
out
in
sub
int
mov
out
mov
mov
fisubs
add
push
adc
fnsave
add
dec
out
lcall
scas
out
es
pop
add
dec
cmp
shrl
xchg
ds
push
es
outsl
or
xor
mov
mov
cmp
inc
enter
out
dec
jg
sbb
jl
adc
push
push
push
push
daa
cs
es
ret
xor
test
scas
lcall
dec
fcom
addr16
je
subl
fsubrp
dec
xor
mov
mov
pop
insl
adc
push
inc
std
aam
scas
mov
inc
sub
push
add
push
xor
push
or
shrl
in
addr16
dec
jp
add
orl
xchg
aaa
inc
or
and
imul
push
lods
mov
enter
stc
aad
scas
dec
adc
cmpsb
stos
repnz
rcrl
jp
jno
fsts
fildll
call
jno
mov
xchg
adc
test
jbe
cmp
add
xchg
loope
shrl
dec
call
subb
je
lds
add
mov
scas
mov
cmp
jno
popf
fnstsw
xchg
shlb
push
scas
sub
jno
push
addl
fldl2e
xor
cmp
in
sub
pop
mov
xor
ds
subb
addl
jle
outsl
mov
rcll
fs
imul
cmp
add
xchg
mov
push
xor
stc
pushf
pop
and
cvtps2pi
cli
lods
pop
push
loop
cld
lea
push
and
or
aas
or
rorl
push
xchg
push
add
scas
aaa
push
sub
push
jl
push
mov
fdivrs
sbb
enter
lahf
cld
or
ret
inc
push
js
repz
add
lcall
add
jb
pop
jo
pop
xchg
sub
scas
jmp
daa
mov
sub
xor
inc
push
and
mov
jge
js
add
cmp
xchg
cld
push
jae
jne
jo
jg
lret
inc
mov
push
sbb
out
lock
inc
sysenter
xor
int
jb
popa
data16
jmp
or
mov
xchg
and
cld
ucomiss
cmp
jle
ss
je
inc
leave
pop
cld
rcll
push
xor
cmp
xor
fsub
sbb
push
or
repz
fs
in
sahf
xor
enter
pop
dec
lcall
addr16
gs
adc
dec
adc
sahf
fmull
xlat
push
mov
ss
ret
ret
sub
es
cmp
stos
fstpt
sub
dec
mov
ja
dec
and
ret
sbb
lods
aad
ret
push
cmp
xchg
xchg
lds
addr16
shrb
push
js
insl
ds
cli
mov
cs
leave
dec
mov
mov
sarb
minps
fmuls
inc
lea
dec
popa
test
push
jmp
sti
out
or
cmp
jne
cmp
scas
inc
adc
mov
pushf
jbe
ror
in
sub
shll
xor
fwait
ds
cmpb
sbb
scas
shl
xchg
mov
mov
insb
imul
cmp
cmp
cmp
sbb
aad
cmpsb
jbe
scas
imul
push
fistpll
mov
and
sub
insl
inc
out
adc
xor
test
inc
mov
dec
dec
push
ret
xor
sub
mov
sub
enter
xchg
lret
adc
out
incl
movsb
push
out
inc
push
inc
xor
xchg
pop
stc
cmp
inc
out
lcall
xor
sub
pop
popf
les
ja
imul
test
dec
push
and
imul
cmp
mov
fwait
mov
ljmp
sbb
loopne
sbb
nop
loope
jecxz
add
adcl
outsl
jl
sarl
xchg
adc
xchg
push
cs
xchg
imul
pop
dec
inc
loopne
sahf
cmp
fistpll
or
push
mov
arpl
pop
or
idivb
idiv
repnz
into
push
sbb
in
aad
cmp
mov
dec
mov
push
pop
push
cmp
mov
testb
std
or
jge
add
inc
mov
arpl
les
push
pop
stos
and
rol
jecxz
clc
int
cmc
ljmp
repnz
test
and
jnp
pop
cltd
mov
mov
jecxz
sbb
jg
ficoml
pop
pop
adc
sarl
incb
hlt
pop
mov
js
mov
adcl
add
mov
inc
and
push
ret
push
shll
push
pop
lods
jg
add
sub
xchg
sbb
test
add
pop
jge
shll
in
pop
je
and
and
mov
imul
mov
push
popa
das
pop
es
add
ja
fsub
xchg
jno
inc
lea
sbb
aad
xlat
and
std
ret
dec
add
mov
pop
mov
or
xchg
wrmsr
lea
ss
fidivl
lret
dec
std
scas
inc
lcall
jne
stos
fidivs
mov
xlat
mov
jnp
test
xorl
jl
out
rorl
fldl
mov
pop
mov
inc
pop
cmp
in
dec
inc
aas
cltd
enter
arpl
jmp
in
data16
mov
mov
mov
push
addr16
pop
xor
xor
test
sub
push
adc
inc
xor
in
jecxz
jnp
xor
cmc
or
xchg
loope
and
loop
push
icebp
leave
mov
ficoml
fcomp
lret
lahf
rclb
xchg
stos
or
frstor
je
fidivl
leave
xchg
fs
mov
fistps
adc
sbb
dec
pop
sti
adc
cs
divb
mov
cwtl
and
data16
js
inc
imul
xchg
adc
dec
dec
push
mov
or
pop
xorb
sbb
orb
in
or
jp
mov
and
lret
or
and
and
sbb
xor
test
adc
mov
div
out
or
cltd
cld
cmp
lret
movsl
das
sbb
es
and
dec
and
inc
insl
cmp
loop
dec
jge
mov
xchg
cmp
loop
nop
mov
mov
push
xchg
scas
loope,pt
adc
xchg
sbbb
es
movsl
imulb
lahf
in
mov
das
cmp
das
mov
ss
in
dec
push
xchg
je
inc
push
xor
enter
call
xchg
or
add
push
mov
mov
repnz
lahf
add
pop
loop
outsb
faddp
jmp
int
mov
shrl
pop
movsb
add
movsb
adc
dec
fs
data16
scas
movsl
and
shrb
inc
and
xor
ret
cld
jp
pusha
hlt
aaa
loop
cmp
mov
pop
and
cwtl
mov
or
fwait
xchg
mov
cmp
clc
testb
sbb
lret
sbb
inc
push
cmp
or
adc
das
mov
nop
pop
fbstp
mov
adc
add
out
jb
scas
adc
fidivl
into
mov
or
outsb
mov
cmc
nop
fsts
cmpsl
pop
add
insl
push
outsb
xchg
jmp
cmp
push
inc
outsl
jbe
arpl
sub
adc
sbb
scas
in
mov
rcrl
inc
xor
aaa
nop
mov
xchg
cmp
push
mov
and
or
pop
pop
pushf
mov
lds
rcrb
mov
and
ret
test
clc
sbb
loopne
push
xchg
fsubrp
loopne
mov
push
popf
adc
jg
push
test
sub
pop
out
into
or
mov
inc
or
nop
imul
fsubl
mov
ficomps
fcoms
adc
sub
mov
call
xchg
data16
dec
jnp
mov
jmp
sub
cmp
stos
ss
popf
xor
lds
push
jge
test
mulb
mov
les
push
stos
fwait
mov
inc
daa
test
fidivrs
cmp
xchg
pop
inc
and
loop
cld
xor
shrl
lea
xchg
sti
shll
and
repnz
adc
sub
adc
sbb
push
imul
and
pop
ljmp
out
test
ret
mov
mov
mov
daa
xchg
movsb
scas
cmp
loope
xchg
jne
mov
call
dec
mov
mov
fcomps
jecxz
xor
rcll
mov
dec
jl
push
push
add
lret
movsl
sub
out
pop
mov
push
movsl
mov
out
gs
iret
mov
ffreep
dec
push
mov
xorl
mov
or
xor
sbb
mov
or
push
int3
inc
mov
popa
aad
iret
mov
shl
lcall
inc
adc
sbb
cmp
loopne
and
pop
leave
push
leave
movsl
and
jge,pt
adc
cli
bound
ss
lds
ret
insb
xor
fsubl
shl
mov
test
sub
shll
movsb
arpl
lds
outsl
xlat
xchg
or
push
stos
orl
rclb
pop
push
sbbb
push
jbe
shll
in
sarb
xorl
out
into
push
mov
hlt
cmc
clc
das
mov
sahf
inc
pop
int
fldenv
dec
push
xchg
lcall
mov
xchg
xchg
mov
sub
arpl
in
sbb
cmpl
xchg
out
aad
ljmp
into
xor
sarb
jl
scas
jp
ss
sub
call
jnp
cs
ret
adc
in
rcll
aam
cwtl
das
stos
mov
mov
dec
mov
mov
and
xor
add
mov
and
jne
cmp
fst
pop
sbb
mov
or
insl
lahf
sub
jnp
js
cmp
xchg
cmc
cmpsl
add
mov
adc
jmp
jbe
das
and
mov
mov
pop
adc
cltd
and
lahf
movsb
popa
sbb
test
js
outsl
lret
scas
cmc
fists
jecxz
sub
push
lea
push
adc
stos
mov
xor
push
popa
hlt
insl
cmpb
mov
lock
in
shrb
add
cmc
cmpxchg
imul
and
cmp
or
int
inc
pop
mov
or
add
ret
daa
ret
rorl
loope
adc
jne
xor
stos
gs
aas
push
hlt
pushf
xlat
mov
shll
imul
sbb
sbb
xor
daa
ja
inc
dec
push
jo
ja
cmovb
sub
hlt
jle
and
sarb
jno
icebp
into
loopne
shrb
adc
jo
sbb
pop
jp
dec
gs
dec
aad
push
cltd
ss
lret
inc
clc
loop
mov
sub
xor
xor
lcall
dec
into
add
jno
fs
movsb
cs
fstp
dec
and
in
mov
mov
or
negb
inc
ljmp
ret
jae
je
test
push
cltd
shll
fcmovnb
jmp
push
jb
je
in
mov
adc
dec
jo
add
testb
scas
or
divb
xchg
cmpsl
in
xor
mov
in
pop
and
add
adc
nop
cmp
push
cs
mov
mov
fstps
mov
mov
in
jmp
int
ss
les
and
cmp
dec
and
shll
mov
pop
ficomps
loop
dec
cvtps2pi
jg
fs
or
add
int3
rolb
imul
pop
lahf
in
inc
out
scas
imull
xchg
pop
in
mov
xchg
in
push
jns
push
push
int
fsubr
lock
cli
push
or
hlt
add
je
movsb
out
mov
jb
or
divb
andl
mov
pop
sbb
add
cmp
in
mov
outsb
fsts
dec
es
push
sub
repz
inc
sbb
inc
mov
das
cmp
lea
xchg
xchg
xor
xor
div
mov
sub
jne
inc
inc
in
inc
mov
add
jle
gs
fadd
jecxz
adc
and
xor
jno
dec
addr16
push
pop
stc
rorl
divb
adc
seto
xchg
mov
mov
and
cwtl
add
push
jbe
bound
shrb
jo
insl
sbb
fs
lds
insb
mov
fnstsw
adc
pop
fsubs
adc
or
xor
test
cld
and
push
mov
orb
call
outsl
cmp
popa
pusha
jbe
ja
or
and
pop
jle
ficomps
and
test
inc
inc
sub
add
popa
jl
ja
sbb
jb
cltd
out
inc
lret
ds
sub
es
arpl
daa
popa
xchg
int3
fsubs
inc
push
push
ror
xor
fcomp
sbb
and
xchg
stc
ljmp
mov
jnp
adc
jg
fmul
scas
push
push
mov
imul
xchg
adc
dec
lret
sbbb
into
cmp
fsubrl
mov
xchg
mov
mov
cmpsb
ret
das
add
jle
lcall
mov
and
sahf
sub
mov
filds
enter
clc
jne
outsl
mov
mov
cmp
pop
push
xor
icebp
lods
enter
or
iret
sub
xchg
loop
xor
in
inc
sbb
shrl
push
ret
fs
loop
xor
fstpt
aam
aas
loopne
jb
add
push
and
les
into
ja
inc
sbb
loopne
sbb
cmpsl
sub
jmp
loopne
jl
add
sub
rcrb
addr16
jge
cmp
popf
sbb
mov
inc
pop
jge
adc
jnp
mov
xchg
sub
dec
fs
xchg
mov
xchg
cmp
add
arpl
mov
bound
or
and
xor
xchg
inc
sti
call
int
inc
leave
pop
xor
sbb
repz
cmp
cmp
push
mov
stos
aad
or
add
xchg
cli
mov
cli
mov
dec
cltd
push
add
mov
movsl
clc
dec
inc
push
lea
and
mov
inc
mov
out
stc
fstpl
cmp
jmp
scas
jmp
negl
add
push
and
in
jo
adc
pop
jne
xor
pop
das
in
call
jle
cmp
dec
sti
lret
jne
mov
mov
mov
sub
and
test
mov
fwait
movsl
cmp
in
addr16
xchg
mov
loope
mov
ss
popa
clc
lock
mov
cltd
push
xchg
shrl
dec
adc
mul
push
lret
popa
cmpsb
push
push
pop
push
mov
push
mov
out
insl
jmp
jbe
sbb
jp
out
stos
outsl
xchg
fwait
sti
xor
negb
jp
pop
pop
cld
or
scas
mov
iret
loopne
cmpb
inc
lahf
lock
xchg
add
pop
pop
mov
fbstp
push
es
out
sub
mov
jae
iret
ret
dec
jmp
mov
mov
shl
fcomi
pop
fwait
icebp
loope
int
stos
adc
cmc
dec
arpl
mov
cmp
xchg
xor
cmp
addr16
fcompl
js
es
packuswb
fldln2
in
mov
repnz
jno
into
push
and
testl
aas
arpl
cmpb
outsl
mov
aam
sub
cmp
mov
stos
pop
mov
push
xorb
pop
imul
pop
mov
jo
movsl
jge
add
sub
add
subl
mov
stc
pop
mov
adc
push
aas
push
add
jbe
lret
cmp
rorb
xchg
sbb
xor
dec
or
lods
cli
clc
xor
repnz
pusha
jge
insb
xchg
insl
lds
leave
sti
daa
and
mov
ss
pop
ds
cmp
xchg
cmpl
jo
push
std
jl
sbb
mov
xchg
mov
lret
add
xchg
xchg
fs
orl
xchg
aam
adc
loop
repnz
mov
push
bnd
jge
std
lahf
jae
or
mov
dec
xchg
mov
inc
mov
cmpsb
stos
adc
xchg
mov
imul
jo
push
lret
ret
addr16
mov
mov
es
lret
sbb
into
cltd
xchg
push
or
test
iret
test
xor
add
mov
jnp
inc
cmpsl
jno
add
mov
cltd
mov
into
in
test
icebp
lods
mov
cmp
sub
cmp
mov
xorl
arpl
xor
xchg
data16
and
dec
jge
icebp
popf
push
dec
shl
data16
jl
inc
and
jecxz
xchg
dec
cmp
aaa
fistpll
mov
xchg
jno
cmc
xchg
inc
adc
pop
jmp
sub
enter
mov
bound
mov
push
mov
loope
loop
cmp
add
push
xchg
pop
popa
pop
data16
jl
mov
push
cmp
inc
xor
jne
sbb
jns
pop
rcrb
add
sub
jmp
mov
sbb
mov
mov
sbb
inc
lods
dec
imul
rorb
pop
and
or
scas
aad
leave
and
lock
pop
pop
mov
pop
mov
flds
jg
pop
fs
dec
jmp
filds
mov
and
push
in
lds
mov
xor
pushf
clc
out
enter
adc
dec
outsb
push
xor
mov
mov
sbb
inc
lahf
pop
lcall
pop
test
mov
mov
cmp
and
jb
add
negl
cmp
std
sub
push
dec
mov
loop
popa
mov
fidivs
insl
dec
lret
inc
cli
adcb
xchg
jmp
loope
mov
stos
cmpsl
clc
add
rcll
or
pop
mov
in
aaa
adc
add
das
rcrb
ret
ret
loopne
mov
icebp
xchg
sahf
jge
shrl
jbe
cmp
ffreep
adc
mov
xchg
pop
and
xchg
daa
insb
jnp
addr16
jge
xchg
jp
into
ja
pinsrw
ret
movsb
ja
mov
cli
hlt
mov
dec
xlat
in
decl
aam
cmp
pop
push
cmc
jge
inc
add
inc
cmc
pop
daa
mov
pushf
sub
dec
pushw
cli
clc
mul
stos
es
das
popa
mov
fdivrl
jne,pt
adc
and
inc
popf
mov
cmp
mov
pop
cmp
test
addr16
or
js
aam
adc
cltd
inc
aas
popa
sbb
jnp
inc
lds
dec
repz
push
jl
aam
mov
cmp
mov
jns
je
or
pop
es
clc
pminsw
jecxz
lods
fidivl
lock
xchg
mov
into
idivl
push
pop
fwait
mov
shrl
push
mov
add
jne
mov
subb
mov
add
imulb
fucomip
inc
pop
mov
cwtl
and
fcmovnbe
mov
clc
push
movsl
cmp
push
fdivrs
es
xchg
mov
dec
in
scas
les
push
fwait
mov
xchg
ss
inc
lret
sbb
out
rolb
inc
les
xchg
push
gs
mov
shlb
sti
pop
fidivs
push
mov
iret
push
in
mov
in
jb
daa
jecxz
test
insb
mov
in
test
xchg
mov
lds
jae
into
dec
add
out
sbb
push
sub
and
std
addl
pop
out
ja
jbe
ret
mov
inc
mov
adc
jnp
jg
push
into
mov
fsubp
or
rol
pushf
pushf
std
add
sbb
int
mov
dec
lock
enter
sub
xchg
or
aas
test
push
and
movsb
pop
cld
jp
lea
dec
cmp
mov
mov
in
xchg
push
jne
mov
or
add
into
adc
jmp
popf
movsb
stc
pop
out
pop
or
pop
cmc
inc
push
jo
cmpsl
xchg
je
aad
lods
adc
in
mov
add
test
ss
fwait
and
ret
repnz
jo
lods
xchg
fisubrs
mov
or
adcb
xlat
nop
repnz
mov
mov
hlt
rcr
in
iret
out
inc
mov
xor
hlt
mov
stos
push
out
sub
lods
and
xchg
test
mov
mov
adc
fldl
mov
dec
or
xlat
fwait
jne
inc
jo
inc
mov
imul
cltd
out
sub
cmpsb
mov
cmp
fs
cltd
mov
mov
pop
pop
ret
mov
sub
push
or
incb
jmp
xchg
fwait
fbstp
inc
addr16
aas
ss
lods
mov
add
jl
loope
dec
popf
enter
rcrb
inc
push
movsl
and
into
mov
xor
push
jle
jp,pt
push
ss
rorl
repnz
xchg
seta
popf
cld
int
popf
add
shr
xchg
testb
pushf
ds
jo
orb
xor
bnd
xchg
iret
adc
pop
push
jno
pop
fstpt
inc
mov
fwait
push
std
adc
ja
inc
adc
std
repnz
adcl
mov
popf
in
ret
dec
bound
out
pop
xchg
lock
insb
cmp
jno
lock
sbb
xor
mov
xor
xlat
call
ret
jae
mov
add
mov
mov
sahf
enter
mov
int3
int3
dec
call
ljmp
push
push
clc
add
jecxz
mov
pop
push
mov
das
mov
pop
stos
cs
fisubl
ja
daa
les
jns
icebp
pop
pop
lret
push
pop
sub
adc
ss
add
mov
dec
hlt
add
int3
adc
imul
dec
daa
jns
fnstenv
lods
inc
movsl
int
flds
or
mov
xchg
inc
cmp
xchg
leave
ja
repz
mov
stc
popf
loopne
call
stc
xor
cs
enter
pusha
loope
pop
jecxz
inc
or
cmovae
repnz
push
shrl
sub
or
je
rcll
repnz
cli
mov
mov
scas
iret
sbb
inc
mov
add
repnz
add
das
idiv
xchg
push
shlb
cli
xor
scas
es
mov
repz
pushf
cmp
enter
call
push
sti
popl
sub
mov
adc
mov
movb
mov
out
mov
cli
or
push
test
dec
inc
andl
shrl
in
aaa
imul
inc
aaa
fisttps
andb
fdivl
stos
inc
mov
mov
mulb
pop
xor
push
inc
imul
pop
dec
movsl
or
lods
insb
out
cmp
iret
dec
int3
je
inc
call
cmc
cmp
sub
mov
jle
sub
fisubrs
push
icebp
cmpsl
inc
sub
sbb
add
xor
cs
sub
out
or
mov
mov
or
dec
push
or
sti
add
xlat
aad
sub
push
shll
mov
xchg
dec
data16
push
sbb
pop
jmp
mov
mov
cwtl
mov
sub
dec
das
mul
stos
adc
lods
fwait
cmpb
adc
data16
sbb
pushf
add
out
push
test
lcall
adc
sub
and
mov
cmp
lea
inc
cmp
mov
or
daa
dec
rorb
imul
mov
hlt
or
mull
hlt
sbb
jbe
mov
fsubs
call
push
outsl
dec
arpl
iret
out
int
in
mov
push
aad
lahf
push
jne
test
mov
inc
inc
jbe
inc
xchg
jg
rorl
jb
add
cmp
sbb
cld
cmp
pop
addb
xlat
clc
push
shll
mov
pop
roll
icebp
icebp
push
dec
cli
push
aam
loope
fcoml
mov
pop
pushl
popf
lea
sub
pop
cmp
mov
int
xlat
push
out
mov
jecxz
push
inc
jmp
mov
pop
mov
fadd
lods
notl
out
lahf
xor
or
xor
push
mov
fisttpl
icebp
mov
mov
ret
dec
lods
ja
arpl
mov
xchg
mov
cmp
lods
frndint
cmp
faddp
lods
jge
jmp
cs
xchg
sbb
lock
mov
jb
mov
lret
adc
inc
xor
into
mov
push
push
ret
fsubp
jp
xchg
xchg
ljmp
mov
mov
ljmp
sub
jl
jl
mov
cmp
jns
dec
adcl
push
jl
psraw
xor
fildl
cmp
adc
sub
mov
fldenv
mov
fucom
xlat
sub
xor
fucom
dec
mov
cltd
mov
rorl
outsb
arpl
outsl
fmull
xchg
xor
push
xlat
push
ja
add
mov
loopne
aad
add
mov
pop
xchg
stos
test
dec
pop
imul
fldl
sbb
jnp
sahf
push
mov
add
inc
jmp
add
orl
insl
mov
lret
test
out
pop
scas
or
in
or
inc
sbb
mov
sbb
mov
bound
adc
pop
xor
xchg
rcl
mov
rcrl
scas
pop
mov
pop
mov
adc
mov
sub
push
jge
adc
hlt
push
mov
fisttps
adcl
or
int3
cmc
stos
mov
arpl
hlt
ret
push
into
into
les
cmpsb
and
lea
jge
push
cli
jecxz
inc
nop
mov
and
imul
lret
mov
lahf
shr
enter
dec
daa
data16
push
test
lret
in
ret
into
push
mov
mov
mov
xlat
orb
dec
inc
into
jnp
inc
pop
mov
call
or
outsl
fistps
je
loope
outsb
sbb
adc
fwait
xchg
rcll
addb
fildl
andl
mov
add
mov
ss
mov
xchg
loope
sub
sub
cld
in
outsb
mov
lock
sub
pusha
lahf
mov
imul
cltd
or
outsb
xchg
fwait
cmp
pop
dec
mov
lods
or
pusha
stc
xchg
lret
rclb
cwtl
rclb
roll
push
push
sbb
jae
mov
mov
mov
fimull
mov
mov
lahf
inc
pop
loop
xchg
add
xor
shlb
cltd
add
xlat
clc
ret
movsl
fcoml
shrb
popf
push
sbb
in
dec
mov
dec
lret
int3
pushf
std
dec
adc
shl
add
mull
shll
std
mov
sbb
and
xor
xchg
or
test
cmp
mov
jg
mov
sahf
dec
mov
pop
sbb
je
and
pop
icebp
mov
aas
mov
jmp
inc
ja
ds
popf
mov
andb
pop
fs
add
icebp
inc
mov
fcmove
popl
cmp
or
popf
and
adc
sbb
xor
pop
lds
rclb
scas
iret
mov
loope
imul
pop
fwait
push
shrb
daa
adc
in
fsub
push
bound
loop
adc
ljmp
dec
fwait
jecxz
jge
jmp
mov
push
fsubrl
jmp
das
pop
sub
add
push
sbb
mov
push
addb
call
or
test
jno
fwait
ss
and
mov
outsl
jecxz
test
and
rep
sub
xlat
sub
imul
negl
cmp
enter
sbb
mov
jae
mov
inc
push
adc
addb
lods
in
mov
out
cli
xor
data16
mov
ret
mov
outsl
frstor
or
inc
inc
cltd
sub
bound
fmuls
fbstp
inc
jl
jne
dec
je
push
push
or
adc
pop
outsb
dec
cmp
incb
mov
sti
xchg
outsl
jbe
or
out
repnz
sub
mov
inc
add
or
shr
and
mov
push
repz
fsubrp
pop
push
lret
fsubs
push
jns
sbb
jge
pop
mov
sub
xchg
mov
lcall
mov
xor
sahf
mulb
lahf
mov
ja
test
bound
cwtl
daa
or
add
dec
or
cwtl
insl
pop
mov
gs
loop
out
push
mov
dec
inc
jbe,pn
inc
pop
cmp
idivl
jle
in
xchg
lds
push
sarb
xchg
push
insl
addb
cmp
xchg
bound
rorl
daa
les
cld
bswap
xor
or
aad
lock
mov
out
cmpsl
jno
les
adc
gs
fbstp
loop
lea
lret
adc
fs
dec
ret
pop
clc
dec
imul
lret
aad
mov
sbb
and
fisubrs
jmp
mov
mov
popf
fisttps
bound
and
cmpsl
fidivs
push
lods
push
iret
int
fwait
cltd
lods
out
dec
divb
sub
mov
push
pop
push
push
pushf
inc
cmp
or
inc
inc
and
push
inc
lcall
or
adc
test
shl
sbb
mov
sub
mov
dec
das
mov
enter
fwait
loopne
jecxz
frstor
pop
mov
cltd
mov
lods
adc
movsb
pop
or
adc
mov
sub
push
add
imul
push
jge
adc
int3
add
int3
test
mov
subb
sahf
sti
lods
and
out
movsb
loop
sahf
bound
and
ret
dec
sbb
fs
adc
xchg
mov
pop
stos
jmp
dec
push
outsl
jp
mov
xlat
dec
push
cld
xchg
sub
mov
mov
mov
xor
call
add
xor
das
cmp
adc
xchg
mulw
scas
mov
fwait
adc
arpl
add
jle
je
cmp
out
inc
cwtl
add
push
dec
and
inc
add
xor
cmp
pop
ss
iret
mov
mov
sarl
fs
lahf
xchg
fldenv
jns
pop
xor
xor
scas
mov
adc
cmpsl
or
daa
mov
movups
lock
push
repnz
and
dec
dec
nop
pop
cmp
cmpsl
mov
jmp
aam
adc
pop
xchg
add
cmp
loope
jmp
jle
leave
xchg
inc
je
fs
rclb
out
adc
xchg
iret
ret
or
fildll
popa
popa
push
outsl
pop
inc
lret
iret
mov
lret
movsb
in
pop
ret
jae
shll
pop
sarb
dec
mov
jl
mov
enter
dec
add
fs
rolb
gs
gs
xchg
ret
or
movsl
xor
out
cmpsl
movsl
lcall
dec
mov
shl
stc
loop
pushw
aam
fisubrl
movsb
icebp
mov
pop
and
mov
push
test
pop
mov
cmp
adc
dec
jecxz
daa
adc
pop
cltd
add
mov
cmpsb
js
pop
loopne
dec
scas
and
js
loopne
lcall
cmpsb
popf
mov
jge
xchg
add
or
dec
inc
and
in
icebp
inc
sub
stos
xor
push
fstps
dec
push
jns
mov
jne
and
imul
enter
loope
lock
inc
jg
arpl
in
aaa
out
aaa
outsb
lods
and
jp
or
dec
mov
pop
das
push
movsl
pop
push
push
fdivs
mov
pop
xor
outsl
mov
cmp
dec
jne
ss
cmp
dec
lods
and
jmp
into
sub
mov
mov
cmp
push
xor
lret
js
push
inc
inc
inc
mov
inc
sbb
testb
daa
aad
and
fnstcw
push
cmpsb
movsb
dec
out
pop
mov
popa
mov
insl
ja
bound
filds
roll
xchg
inc
and
sub
repnz
and
addr16
lret
mov
stos
or
inc
call
into
icebp
pop
lea
cmp
arpl
rol
bnd
lret
cmpsl
arpl
xchg
in
sub
bound
fldcw
add
cmp
jl
push
scas
scas
sub
mov
test
xor
xchg
jae
outsb
lea
test
nop
daa
jb
or
fstps
stc
jmp
dec
loop
pop
stos
sub
divl
push
mov
ss
out
cmc
pop
mov
push
or
mov
test
xchg
testl
jnp
jp
push
and
sti
ljmp
mov
lret
adc
xchg
stos
push
mov
jo
out
cmp
dec
ret
xorl
pop
xor
xchg
sub
imulb
mov
and
jecxz
jb
bound
sbb
cmpsb
and
inc
inc
in
pushf
andb
sti
loop
fadds
mov
call
into
or
push
pop
adc
add
jno
push
or
in
fiadds
inc
clc
mov
inc
xchg
and
adc
bound
leave
lds
dec
shl
jge
jge
fs
add
push
cmp
adc
jae
clc
jb
idivb
jno
inc
jne
aaa
test
jns
push
sbb
ds
jmp
pop
mov
andl
push
push
mov
lahf
mov
fsubrs
lret
lret
push
int3
cmc
push
xchg
sar
rcll
jo
dec
loope
pop
mov
gs
mov
cmc
aad
pop
nop
xchg
ret
das
faddl
jb
add
incb
ja
fldl
dec
xchg
popa
out
add
jp
fists
and
pop
cmp
test
out
dec
in
test
mov
and
ret
push
mov
push
dec
pop
inc
xor
inc
sahf
and
ja
arpl
dec
lcall
push
lods
add
or
bnd
add
cmp
cmpsl
rcrl
jmp
repz
scas
fwait
xor
adc
shlb
aas
int
sar
xor
push
mov
mov
or
pop
mov
test
lcall
cmpb
clc
rcll
sahf
sbb
rdmsr
popf
sub
loop
mov
repnz
jne
aad
les
pop
daa
push
add
fstpl
and
jp
out
push
testb
sub
das
aam
xor
xor
test
shrb
cmpsb
jo
mov
adc
pop
test
push
sti
int3
cmp
xor
lcall
sub
xchg
adc
ja
jno
push
add
cmpsl
cmp
and
cmp
inc
xchg
lret
mov
clc
sbb
sub
cltd
cmp
stos
les
out
imul
rclb
push
mov
mov
add
mov
icebp
scas
xor
add
stos
sti
mov
fisubrl
imul
cmp
cmp
cmp
pop
xor
push
call
out
cmc
adc
rcrb
cmpsl
ret
pop
test
pop
dec
inc
insl
jno
cwtl
xchg
mulb
or
test
jl
add
mov
arpl
add
adc
pusha
sub
jne
xor
cwtl
into
jne
jmp
out
or
jb
ret
or
pop
jp
pop
sub
mov
pop
sub
xchg
hlt
ja
xchg
jb
xchg
cmp
sti
pusha
jno
hlt
add
sahf
and
in
and
jnp,pn
les
adc
mov
adc
dec
add
out
push
and
fstl
cmp
cmpsl
insb
pop
pusha
icebp
mov
cmpl
dec
add
ret
dec
push
jle
insl
inc
sub
sub
negl
ss
pop
lret
jb
cld
cmpsl
rorb
xor
jne
sbb
push
movl
cmp
cmp
mov
je
mov
aaa
jnp,pt
loop
xchg
jne
loopne
loope
pop
sub
test
or
popf
push
jecxz
pop
ffree
jo
adc
mov
xlat
jbe
scas
xor
ficoml
iret
fnsave
lds
xor
add
mov
mov
xor
sub
add
push
cli
xchg
ljmp
addr16
jmp
adc
and
jo
sti
push
das
sbb
cmp
shll
enter
push
enter
decl
add
jecxz
inc
jnp
pushf
int
aas
std
push
sub
ds
jb
and
stos
repnz
cmp
int3
mov
imul
fstpt
nop
je
cwtl
es
jnp
mov
enter
mov
cmp
or
iret
jg
mov
lcall
ja
push
mov
mov
sub
cmp
test
xchg
test
mov
cltd
adc
and
sub
mov
fimuls
mov
addb
mov
in
mov
xor
inc
push
push
or
es
jb
and
sub
pop
xchg
mov
fmuls
imul
and
imul
pop
pop
adc
andb
push
and
pop
or
or
sbb
push
data16
inc
dec
leave
bound
cmp
in
pop
or
out
xor
xor
cmp
mov
inc
push
mov
push
push
mov
mov
add
loope
clc
ljmp
ljmp
sub
into
movsl
loop
push
int3
add
mov
mov
jp
bound
hlt
fsubl
pop
es
aam
sahf
and
andb
and
add
ja
sahf
xor
push
cli
into
jl
cmp
andl
icebp
pop
push
in
mov
jne
xor
and
xchg
jne
aad
out
addr16
and
daa
mov
jmp
and
test
ja
loope
jae
inc
fmuls
xchg
inc
and
dec
mov
daa
push
adc
stc
pop
jns
fwait
outsb
xchg
stos
cmpb
dec
push
xchg
aas
iret
ljmp
mov
cmovs
dec
jb
es
cwtl
scas
sbb
dec
pushf
cs
mov
xchg
ja
cmp
and
mov
jno
or
enter
xor
mov
xor
jp
cmp
cmp
and
clc
jge
and
daa
mov
das
pop
ret
mov
mov
jno
dec
daa
xchg
lods
test
sub
cmp
sbb
inc
cmp
push
or
and
mov
retw
scas
sbb
and
mov
xchg
idivl
arpl
push
mov
out
loop
addr16
dec
jl
cmp
xchg
mov
cwtl
lods
xchg
jns
test
pop
pusha
in
insl
pop
lahf
mov
test
pop
pop
pop
pop
aam
ret
nop
cs
jb
fnstsw
mov
push
add
cmp
xor
lods
push
sti
pusha
cmc
mulb
jne
push
jl
int3
cmp
add
sar
mov
sub
stos
xor
mov
aad
add
cld
in
dec
addr16
loop
cmp
mov
movl
lock
mov
cmp
cmp
imul
adcl
shlb
or
fildll
xchg
shrl
pop
pusha
mov
cli
inc
fdivrl
sbb
lods
pushl
je
mov
push
xchg
sbb
mov
test
pop
sbb
fwait
sbb
roll
xchg
mov
cmp
nop
mov
or
mov
sbb
arpl
or
inc
xlat
adc
outsl
mov
mov
and
mov
fadds
push
pop
into
lods
fdivs
adc
xor
jle
out
xchg
push
out
pop
sbb
jle
pushf
jle
cld
add
xor
xor
imul
inc
or
lds
dec
push
enter
pop
push
enter
imul
sub
popf
outsl
xchg
and
es
mov
stc
push
fs
xchg
sbb
mov
or
pop
pop
cwtl
dec
cmp
push
call
insl
mov
jge
or
xor
sbb
xchg
jl
stos
xchg
and
xchg
xchg
adc
gs
rol
jb
cmp
aaa
mov
std
lods
mov
mov
leave
pop
lods
inc
add
les
jo
insl
repz
jb
pop
shrl
dec
aaa
jno
adc
cmp
fwait
adc
cs
daa
xor
and
cmp
inc
dec
mov
into
ret
push
movsb
mov
push
xchg
dec
aad
or
fcmovu
sub
xor
in
jp
sti
popf
xchg
xchg
xchg
sub
pop
fists
popa
subl
in
jns
sbb
out
pop
addl
hlt
loope
jg
sahf
push
mov
push
mov
cmp
push
lds
lahf
icebp
dec
mov
fidivrs
jge
xchg
or
js
cmp
dec
add
imull
mov
sub
loope
movsl
mov
push
das
jne
enter
sahf
dec
fstpt
dec
inc
sahf
movsbl
daa
cld
addr16
out
movsb
jmp
xlat
scas
lahf
popf
daa
ret
popf
scas
out
shlb
xor
cmp
dec
xchg
sbbl
xor
clc
fsubrl
push
out
scas
jl
pop
frstor
stos
test
xchg
arpl
xchg
pop
xor
sub
jl
dec
into
push
xor
mov
popf
xor
push
inc
mov
dec
js
or
pushf
add
dec
loop
sub
sbb
lret
inc
test
cltd
mov
insl
es
test
in
mov
dec
sti
bnd
cli
pop
lret
adc
jne
or
repz
popf
in
add
insb
leave
bound
xor
mov
idivl
adc
push
jecxz
aad
pop
jbe
and
xchg
inc
jge
lcall
mov
rcrl
sbb
or
inc
jmp
test
pop
dec
outsb
and
mov
cmp
mov
jnp
inc
mov
adc
sahf
lods
xor
mov
jl
dec
outsb
scas
sub
and
sbb
in
jb
xchg
jle
add
adc
xchg
cltd
pop
sub
shr
test
cmpsb
dec
sbb
stos
and
xchg
adc
fsubl
lods
out
or
mov
cmp
pop
sbb
cwtl
and
xchg
clc
mov
cwtl
mov
or
jns
mov
and
dec
arpl
jg
call
fnstcw
out
imul
push
inc
lods
push
dec
adc
cltd
inc
sub
scas
imul
jg
jae
mov
adc
int3
lods
mov
adc
push
cwtl
data16
popa
dec
mov
out
ret
inc
mov
popa
dec
stos
les
jl
andl
sbb
notl
fstl
dec
jl
adc
mov
sub
xchg
sub
mov
in
stos
les
jb
or
sbb
std
shll
xchg
mov
cwtl
xchg
insb
dec
push
sbb
pop
mov
inc
sbb
xchg
inc
mov
scas
sbb
inc
or
je
cld
pop
add
scas
and
arpl
lock
adc
jno
loopne
ljmp
push
dec
divb
add
clc
and
inc
mov
add
leave
pusha
cmpsl
xor
cmc
jno
inc
xor
xchg
clc
ror
mov
pop
adc
nop
test
push
sub
push
pop
add
push
repnz
adc
jo
jae
push
repz
daa
movsb
xlat
add
inc
outsb
lret
ja
jle
or
sub
jmp
sub
cmpb
mov
cmpsb
ret
xchg
rcrb
test
pop
insb
sbb
mov
dec
test
jmp
and
mov
iret
mov
xchg
ljmp
sub
aaa
push
in
cltd
jo
lock
scas
repnz
cmp
sbb
cmp
lcall
out
fsubrl
push
jo
jb
adc
mov
enter
inc
jne
lea
xchg
popa
mov
test
dec
mov
orb
xchg
pop
fcoml
mov
aaa
arpl
ss
sub
mov
dec
lret
mov
adc
lret
mov
mov
xchg
mov
ret
leave
arpl
mov
push
lds
repnz
or
inc
addr16
push
sar
pop
jbe
lcall
movsl
das
mov
jnp
push
push
pushl
or
addl
hlt
cmp
inc
sub
adc
pop
jecxz
scas
and
fwait
push
fiaddl
push
or
jae
out
bound
roll
or
jp
mov
inc
not
adc
stc
outsb
lds
dec
add
xorl
sub
ja
popf
sub
flds
mov
xchg
add
fstpt
aam
inc
test
add
dec
or
or
cmp
test
mov
mov
in
rorl
and
push
jp
in
jno
dec
rclb
in
fdivrs
jb
insb
cmpsb
mov
push
gs
repnz
lret
sub
jo
aad
pushl
rcll
cwtl
shrb
data16
push
lahf
movsl
xor
push
or
mov
pop
out
ret
inc
enter
dec
je
push
push
jecxz
pop
nop
xor
mov
mov
add
mov
xchg
cs
pop
sbb
out
in
js
mov
cld
pop
cli
push
leave
gs
mov
dec
out
push
sub
rcrb
lea
fwait
shrb
cwtl
mov
test
es
or
xchg
sbb
and
adc
jge
and
inc
data16
add
mov
and
fisttpl
aad
cwtl
enter
dec
cmp
icebp
sub
xchg
mov
xor
or
jmp
dec
dec
sbb
sbb
cs
mov
xchg
pop
and
pusha
mov
movsb
mov
xchg
inc
push
fidivrs
push
pop
pop
in
lods
rcrb
adc
fs
out
adc
inc
stos
adc
bound
cmc
out
jge
pusha
mov
cmc
add
jo
sarb
and
scas
shlb
jnp
mov
mov
sbb
sub
push
call
fldenv
jge
cmp
pop
jno
mov
mov
test
pop
imull
das
push
nop
and
out
adc
in
dec
and
enter
mov
push
popf
mov
cmp
std
mov
imul
cmp
and
test
xlat
sbb
jl
xchg
push
mov
ja
adc
jb
jle
xchg
ljmp
push
pop
enter
scas
mov
or
pusha
leave
or
addr16
rcl
lds
stc
lret
jnp
xor
arpl
push
fmul
or
dec
xor
xchg
lds
cs
xchg
xchg
sbb
ret
lret
addr16
int3
lcall
mov
icebp
cld
jge
fisttpll
lcall
mov
repnz
pop
push
arpl
cmp
or
aam
aas
fwait
jo
rolb
aam
cmp
sub
aaa
shll
jne
push
test
sti
test
xor
inc
clc
jl
dec
fdivs
or
xchg
pop
test
jg
jg
sub
scas
in
fdivr
inc
pop
movsl
inc
mov
icebp
insl
fisubrs
fwait
ljmp
scas
sub
xor
dec
dec
aam
icebp
jae
sbb
mov
into
add
mov
cmp
ja
outsl
stc
cmp
cmp
dec
std
stos
pop
in
push
cmpsl
test
sbb
scas
ja
add
mov
xchg
cmp
loope
xchg
sbb
mov
sahf
mov
fimull
and
out
adc
aad
add
dec
scas
sbb
add
aad
ss
into
push
mov
inc
mov
lods
sub
jmp
add
jno
lds
fistps
roll
pushf
dec
ficoml
jmp
xchg
lret
es
push
xchg
in
push
repz
adc
or
gs
dec
and
adc
int
fadd
call
fisubrs
jne
lea
imul
fwait
data16
rorl
and
ja
jmp
out
dec
cld
daa
fcompl
les
stos
and
stos
dec
sti
stos
std
fists
iret
jne
andb
test
jmp
gs
jnp
movsl
xchg
mov
pop
xor
sbb
ret
inc
lret
lret
fcompl
stos
mov
daa
push
jle
push
negl
pushl
aas
mov
int
cld
and
cmpl
mov
sbb
movl
dec
lock
cwtl
pop
jae
add
adc
mov
sbb
or
add
mov
mov
xchg
adc
xchg
ja
and
nop
enter
lcall
in
ret
shl
rcl
inc
in
adc
data16
jmp
insb
fsubrl
lea
jge
adc
das
cmpsl
ljmp
or
pushf
dec
cmp
push
inc
ret
cli
xor
inc
inc
cmpsb
fucomi
subb
xor
or
dec
in
mov
gs
inc
adc
jb
cmp
js
sahf
inc
jg
cmc
test
ds
mov
mov
inc
repnz
js
mov
cli
inc
cmc
shr
scas
movl
sbb
and
insb
arpl
cmp
xchg
xchg
icebp
push
mov
mov
icebp
dec
mov
nop
ficomps
push
inc
out
push
xor
or
sub
data16
arpl
mov
popa
mov
xor
clc
mov
jp
les
les
les
out
loop
jns
outsl
sbb
leave
mov
push
inc
stos
cmp
mov
pop
pop
sbb
push
mov
scas
pushf
jb
lret
imul
lea
das
inc
movsl
popa
jp
mov
lods
mov
sbb
pop
insb
inc
inc
addr16
imul
push
mov
push
hlt
call
push
leave
adc
lock
dec
jp
lds
sub
pop
sbb
test
enter
xor
or
sub
div
lock
cltd
int3
inc
rcr
shl
nop
ret
cli
cmp
xor
mov
mov
jp
pop
and
icebp
cs
mov
in
mov
mov
mov
lcall
push
xchg
mov
clc
push
mov
mov
lods
notb
sar
rol
fs
bound
cmp
in
mov
int
or
pop
insb
mov
cs
test
or
les
jno,pt
leave
xor
aaa
xchg
mov
or
xchg
xchg
mov
jle
pop
jmp
scas
mov
data16
mov
mov
es
addb
test
gs
fs
scas
add
push
or
mov
or
mov
xchg
xor
xchg
adc
push
test
loop
ret
insb
mov
outsl
push
je
gs
mov
dec
ret
push
push
mov
das
xchg
adc
jnp
rol
cmp
stc
in
es
jo
jo
push
jbe
push
mov
out
gs
fnstcw
adc
sti
stos
rolb
testl
cltd
sub
aas
lret
inc
mov
test
call
add
scas
pop
pop
push
mov
mov
repz
je
sub
icebp
clc
mov
nop
mov
mov
test
iret
push
shr
rcr
jge
es
pop
loopne
test
add
jae
filds
mov
jp
push
mov
test
dec
es
xchg
or
popf
jl
sahf
inc
imul
jp
mov
add
mov
enter
sbb
es
stos
mov
int
pop
xor
push
nop
and
mov
enter
pop
xorl
pop
cwtl
dec
pop
loopne
xor
mov
add
pop
fwait
dec
sub
jg
fistpll
xchg
or
mov
dec
push
je
push
decb
push
and
mov
inc
pop
int3
pop
dec
cmp
mov
cmc
mov
aad
adc
sahf
sahf
inc
aad
subb
fwait
xchg
cli
cmp
jo
adcb
sub
or
xchg
outsl
sbb
or
das
insl
mov
mov
insb
cmp
sub
shrb
fiadds
add
pop
stc
dec
mov
shll
dec
jp
add
mov
or
loope
in
addl
and
stos
mov
fucomi
inc
xchg
out
xchg
pop
adc
loop
sar
dec
test
dec
and
test
sub
push
adcb
lea
cmp
movb
mov
and
faddl
adc
push
test
push
pop
sbb
out
fistpll
fcomps
mov
mov
pop
je
pop
push
or
jecxz
icebp
pop
xchg
insb
jle
cmpsb
je
test
inc
ss
adc
imul
scas
aas
xor
fwait
pop
sbb
push
sbb
mov
ficoms
addr16
in
cmp
jl
push
ficomps
jnp
aas
fidivl
xchg
out
pop
sbb
popf
or
xchg
or
je
and
sbb
jp
out
dec
inc
mov
js
clc
pop
xlat
add
stos
pop
loop
add
imul
insb
sub
jle
loop
adc
sbb
dec
aas
sub
jp
mov
push
shlb
ja
cs
lds
scas
mov
xchg
cli
inc
shl
add
xchg
outsb
push
or
insl
test
loopne
jne
and
mov
iret
fwait
outsl
cli
xchg
jns
adc
xor
mov
rcr
inc
mov
jg
lea
loopne
in
aas
mov
xor
mov
fwait
cmp
int
daa
mov
lds
push
ja
aas
xor
pop
xchg
xor
adcb
cmpsb
mov
and
aas
movsb
add
ret
sub
dec
sub
jno
jmp
cmp
call
xchg
into
pop
dec
mov
mov
fidivl
adc
add
repnz
jne
cld
dec
pop
cmp
xchg
inc
int3
jecxz
mov
push
gs
bound
ret
add
add
inc
xchg
lods
push
pop
cmp
lds
les
push
les
dec
sbb
and
mov
insb
push
sti
int3
aaa
mov
add
lea
or
mov
mov
shl
movsl
or
sub
lahf
jg
movsb
or
dec
aas
filds
inc
push
adc
push
cld
add
ss
sti
test
pminub
jo
pop
cld
mov
mov
movsl
jo
scas
in
loope
in
add
out
sub
and
xchg
xchg
cmpsl
jnp
daa
jle
cmp
xchg
inc
dec
mov
test
into
popa
add
aaa
or
sub
cwtl
inc
ljmp
or
mov
push
std
push
insl
int
adc
in
push
push
sbb
jl
adcl
ss
stos
out
sub
out
imul
sarb
inc
loope
mov
adc
iret
ljmp
rcrb
sbb
dec
jo
mov
dec
jl
cwtl
dec
adc
fcomps
sahf
mov
sbb
add
mov
add
push
jo
pop
add
data16
popf
inc
jae
dec
inc
xor
jge
mov
inc
push
test
push
push
mov
std
xchg
in
xchg
push
test
loope
subb
mov
xor
add
mov
cmp
dec
ss
cs
jnp
ljmp
or
fisubl
in
mov
pop
push
inc
pusha
lret
je
dec
lods
adcb
daa
mov
mov
pop
xorl
in
mov
pop
aaa
stc
leave
inc
mov
push
out
push
adc
fistps
les
mov
loope
cli
inc
es
stos
mov
mov
dec
cmp
xor
add
repz
jg
mov
inc
nop
loope
in
test
aas
inc
jbe
pop
pop
imul
lcall
sbb
lahf
aas
in
xchg
jb
and
rcll
sub
mov
repz
lret
inc
jecxz
rcrl
aas
in
jno
das
clc
lret
repnz
mov
fcoml
jnp
pop
jmp
dec
dec
pop
loopne
cmp
inc
insb
inc
sub
and
jle
pop
jg
lcall
push
cs
cmpsb
call
and
push
or
ret
pop
jmp
mov
push
notl
jecxz
xchg
jecxz
pop
dec
jne
add
add
loop
mov
fildll
out
and
nop
inc
xor
lcall
push
adc
xchg
out
ret
sbb
leave
lods
cmp
dec
mov
aas
out
add
sub
mov
push
inc
or
mov
orl
add
lcall
les
ret
jecxz
mov
cmp
mov
push
push
or
sbb
mov
ljmp
pop
into
cmp
or
fisttpl
pop
cli
fisubrs
inc
mov
in
pushl
negb
inc
or
sub
test
dec
cli
ds
inc
std
adc
gs
xlat
mov
out
test
das
jno
push
addr16
lfs
imul
mov
shrb
into
cmp
sbb
xor
inc
call
push
leave
and
jl
cmp
adc
cmpsl
lea
stos
js
cmp
pop
scas
daa
insb
mov
lods
in
fsubs
mov
push
pushf
push
fs
pop
jp
push
pusha
xor
adc
lock
pop
out
enter
jecxz
dec
scas
pop
bound
cltd
push
sub
inc
cmp
pop
push
push
imull
and
cmpsl
test
pop
xchg
pop
xchg
jns
push
or
pop
mov
fldcw
and
addb
stc
xchg
test
stos
and
inc
rolb
aaa
sahf
sarl
cwtl
lds
addr16
mov
rorb
fisubl
adc
jmp
ds
into
push
je
dec
or
fcoms
dec
jge
adc
jno
cmp
andnps
add
out
jecxz
sbb
lcall
inc
sti
or
and
cmc
push
xor
rolb
or
hlt
sub
pop
rcll
xchg
js
stos
jno
repnz
add
div
test
test
dec
cltd
push
inc
std
call
out
mov
sub
lcall
mov
adc
lcall
lds
adcb
push
mov
pop
adc
mov
xchg
cltd
and
popf
ljmp
mov
jmp
cmpsl
stc
dec
mov
pusha
sbb
lret
in
arpl
movsl
leave
ss
ds
sbb
sub
push
cld
mov
xor
stc
push
loope
mov
addr16
pop
adc
lahf
ljmp
xor
lock
inc
loope
sarb
cmpsl
sbb
pop
ret
xor
pop
into
push
sub
mov
push
aas
sarb
or
sbb
rcrb
dec
js
cmp
xchg
xchg
rcrb
dec
pop
mov
xchg
dec
sub
sub
or
inc
push
fld
lahf
push
cmp
fdivrl
and
jg
mov
sahf
cltd
sarl
cli
adc
pop
mov
stos
jae
pop
sbb
arpl
adc
jbe
push
faddp
pop
push
mov
mov
aad
mov
mov
or
dec
jae
vunpcklps
jp
mov
push
xlat
mov
aad
xor
stc
mov
mov
outsl
sarl
bound
mov
xchg
dec
sub
cmc
sub
stos
fnstsw
dec
call
popf
enter
jns
out
ss
lcall
aas
xor
pop
push
mov
push
movsl
in
or
lret
dec
cmp
fsubrs
popf
lods
mov
pop
sbb
loope
ss
jnp
bound
mov
nop
shll
add
lret
mov
push
and
adc
stos
movq
mov
push
inc
sar
test
ljmp
add
arpl
cwtl
decb
xchg
fnsave
push
dec
loope
sbb
mov
or
std
push
pushf
out
ljmp
cli
shrb
mov
add
es
and
mov
lock
imul
lcall
inc
jne
mov
push
xor
popa
cld
stos
lret
cmc
add
push
adc
and
lret
outsb
cmp
fs
icebp
dec
cmpsb
icebp
test
das
add
adc
ret
pop
sbb
push
pop
js
stos
mov
sub
push
jmp
pushf
mov
jp
add
js
dec
movsb
stos
loop
mov
mov
jmp
dec
sahf
push
xchg
mov
mov
repz
lahf
test
push
xor
mov
jns
and
sub
mov
inc
cvtdq2ps
or
jl
xor
mov
inc
and
xor
sarb
adcl
hlt
shl
data16
mov
inc
xchg
fistpl
stc
inc
inc
aad
insb
dec
cmc
mov
movsl
mov
inc
jecxz
mull
xor
mov
and
jbe
sub
das
mov
addl
jbe
xor
ss
gs
imul
mov
add
add
pushf
mov
lahf
adc
dec
aad
xor
jg
and
jle
inc
mov
dec
sbb
int3
js
pop
shrl
rcrb
and
pop
leave
push
sub
ret
mov
or
nop
push
fsts
lods
pushf
clc
cmp
xchg
sub
shl
cmpsl
mov
jecxz
mov
mov
jne
cmp
xchg
or
scas
mov
xchg
push
xchg
jbe
cmp
push
sbb
in
xor
movsb
adc
mov
add
arpl
repnz
fcomps
cmp
lret
xrelease
jg
push
push
dec
mov
xor
xchg
in
xor
mov
fldt
repz
cs
andl
mov
js
das
or
loope
add
imul
or
xor
icebp
mov
xor
push
int3
push
dec
cld
adc
push
incl
fstps
sbb
push
xchg
fucomp
and
fcompl
ja
enter
in
icebp
sub
nop
lcall
iret
jns
pop
leave
shll
xor
jg
fmull
cmp
fcomps
filds
pop
pusha
xchg
pop
movsl
inc
push
hlt
and
outsb
inc
sub
cmpsb
ss
stos
popf
call
dec
rcll
js
cmp
ja
mov
js
popa
or
jae
xchg
stos
daa
adc
popf
fsubrs
cmp
jb
push
jmp
stc
push
icebp
das
dec
das
pusha
fisubrl
insl
add
sbb
push
jg
aaa
pusha
insl
sub
push
aam
ret
bound
cmpsb
xor
or
in
sub
movsb
jne
dec
loop
sbb
scas
jmp
cmc
pushf
push
mov
and
jecxz
mov
cltd
and
mov
int
in
jl
movsb
cmpl
jge
add
pusha
mov
test
push
jbe
lret
cld
out
pop
lret
into
cmc
pop
mov
sbb
jbe
lret
push
pop
insb
fisttps
cmc
mov
fistpll
xor
or
lds
out
inc
cli
and
aaa
sbb
je
and
mov
lahf
mov
nop
enter
push
scas
mov
mov
rclb
mov
jg
adc
movsb
or
jge
fcomp
dec
or
jno,pt
jne
out
dec
jbe
mov
push
nop
sub
and
and
push
lods
addl
in
out
and
cmc
mov
and
sbb
out
mov
bound
xor
push
fs
dec
add
pop
adc
in
pop
sbbb
jbe
xor
fldcw
inc
mov
and
je
mov
mov
jmp
fcmovb
fmul
out
pop
scas
imul
cli
add
ljmp
sahf
push
cmovns
xlat
in
inc
aam
iret
aad
mov
lods
and
xor
jno
scas
insl
ljmp
sahf
jb
mov
lods
mov
jne
add
mov
xchg
je
insb
xchg
ja
repnz
add
js
insb
dec
inc
jecxz
xor
mov
ret
shr
pop
das
pop
add
cmp
dec
dec
mov
call
cmp
orl
shr
sub
mov
jae
movsl
xor
jge
roll
push
cmp
das
pop
pop
and
es
addr16
mov
adc
or
mov
fwait
mov
mov
xor
or
lea
sarl
shll
into
push
push
pop
test
shll
push
push
cmp
aas
test
sbb
cltd
leave
push
mov
xchg
aad
lock
mov
fmull
ret
hlt
mov
out
sub
sbb
jmp
outsl
test
mov
out
fs
fistl
pushl
pop
les
rclb
push
imull
inc
xchg
push
fimuls
fsubrs
cmpsl
and
add
aaa
jnp
fsubr
lods
inc
cmp
in
xchg
push
jge
jecxz
push
mov
adcb
fcmovnb
test
test
xor
outsl
fsubr
pop
cld
outsb
jl
aad
cltd
cli
dec
fwait
sbb
add
inc
cmp
inc
cltd
test
arpl
andb
push
addr16
dec
cmp
cmpsl
cmp
jbe
or
add
iret
insl
dec
sbb
leave
add
pop
pop
or
out
imul
ss
mov
sub
imul
xchg
cmpsb
xchg
loop
jmp
arpl
test
fcomi
push
cmpsl
cld
mov
hlt
and
flds
movsb
mov
push
push
arpl
jmp
sbb
jns
arpl
clc
aas
sti
push
sub
push
sbb
fadds
sub
inc
out
in
rolb
mov
int3
movsl
jae
popf
mov
jmp
pop
xor
push
adc
cwtl
test
rcrb
adc
inc
aad
jns
addr16
int
lods
shll
mov
movsb
cld
test
sti
mov
lahf
push
nop
adc
pop
or
icebp
mov
in
mov
jl
push
into
inc
popf
push
adc
jo
pop
cwtl
mov
and
rolb
aam
sar
out
pop
inc
inc
xor
add
xorl
jle
lcall
push
idivb
xor
pop
popa
ret
xchg
xchg
stc
mov
xor
dec
in
enter
inc
cmp
or
xor
rcr
out
mov
jne
dec
mov
fidivl
xchg
adc
mov
aad
add
xchg
out
and
add
pop
mov
cmp
int3
lret
fwait
add
bound
push
xchg
cwtl
xor
in
shll
xchg
loop
mov
mov
shll
push
ljmp
sar
shrb
pop
lods
adc
add
xor
mov
add
xchg
loop
push
sbb
movsb
cmp
mov
inc
sbb
dec
xor
push
sti
lods
jb
in
rcr
out
xchg
pop
cmp
pushf
lods
mov
sahf
ret
inc
out
mov
aam
sub
lret
adc
lret
dec
fildll
inc
pop
mov
dec
out
and
push
jnp
mov
pop
jnp
and
push
push
ds
call
or
aam
inc
adc
ud2
call
cmp
push
aam
xchg
add
xchg
push
dec
inc
dec
rcrb
pushf
inc
call
out
sub
icebp
repz
and
lock
daa
xor
mov
xor
mov
xor
xchg
lea
add
adc
imul
xchg
pop
inc
lcall
mov
mov
std
idivb
mov
sub
dec
in
and
or
scas
lret
out
idiv
in
loope
popa
dec
sbb
scas
cmp
iret
lcall
or
mov
mov
xchg
sub
xor
arpl
aaa
pop
and
scas
shl
jmp
mov
in
ja
and
aad
mov
mov
test
bound
std
and
adc
adc
sti
sbb
xor
jbe
xchg
inc
fcmovnbe
dec
adc
lahf
aaa
jbe
inc
mov
sbb
dec
xor
into
fwait
and
fmull
mov
fld
pop
insl
push
loopne
sub
push
push
stos
jge
sbb
mov
js
scas
dec
adc
ja
xor
hlt
mov
ret
sub
mov
cmc
mov
dec
mov
in
sahf
mov
jnp
pop
push
inc
or
pop
xor
lcall
nop
jb
push
cmp
outsl
jno
mov
xlat
jmp
mov
jne,pt
ss
and
aas
cmp
lret
inc
inc
cmc
mov
pop
sbb
repnz
xor
or
inc
jp
xor
xor
xchg
test
out
sbb
aad
push
sbb
pop
popa
stc
sbb
push
std
or
pop
jecxz
addr16
imul
in
push
mov
lock
jns
cs
jo
sub
mov
clc
imul
call
cld
in
ds
adc
adc
xchg
std
test
and
sahf
xchg
cmp
mov
sbb
cmc
or
xor
test
sub
jnp
cwtl
lret
xchg
cmpsl
imul
pop
notl
or
or
jae
cmp
mov
daa
loope
repz
push
xor
lods
gs
or
or
jmp
cmpsb
lret
into
sub
les
inc
pop
jmp
sbb
push
xor
fstl
dec
sarb
push
fists
int3
ret
mov
fists
push
pop
dec
or
mov
mov
in
sbb
pop
aam
cld
or
aam
das
fldenv
in
cmpsl
adc
push
mov
jmp
in
push
repz
and
clc
xor
rcrb
adc
or
shlb
iret
dec
mov
inc
push
imul
pop
jecxz
xor
xchg
fsubl
ss
shll
aaa
test
pushaw
sub
icebp
pop
ds
inc
out
aad
daa
cmc
pop
enter
mov
scas
dec
mov
cs
inc
repz
fsubl
xchg
sub
testb
mov
stos
jae
add
data16
sti
lahf
leave
std
test
notl
mov
mov
popf
popf
sbb
or
xchg
pop
addr16
cwtl
or
insl
outsb
cltd
push
mov
fstl
jle
sbbb
adc
jne
leave
jle
aam
inc
repnz
outsl
imul
cs
xchg
mov
mov
cld
adc
lock
stc
mov
add
mov
and
xor
rcll
lcall
pop
std
cli
mov
cmp
sub
and
jl
sub
orb
repz
aad
daa
jmp
ret
mov
out
out
das
push
daa
cmp
in
xor
mov
fldl
or
orl
mul
pop
mov
daa
cld
push
in
sahf
xchg
outsl
push
or
out
push
fdivrl
rorl
inc
dec
jg
add
mov
jb
mov
iret
ret
aad
mov
inc
mov
arpl
mov
aad
flds
js
lds
mov
inc
xchg
xchg
lret
scas
and
push
sbb
popf
sbb
dec
jno
rol
fdivr
jo
sbb
out
rdtsc
ret
inc
mov
or
out
movsb
mov
aam
in
sub
push
lods
inc
test
rorl
push
cltd
nop
fs
cmp
pop
add
sub
out
ja
mov
cmpsb
push
sahf
jge
mov
jnp
ss
mov
adc
cld
icebp
adc
mov
mov
addr16
dec
jnp
daa
jmp
jbe
sbb
ja
or
add
mov
enter
aad
adc
nop
idiv
clc
dec
cmc
outsb
adcl
pop
push
dec
and
push
call
jp
in
mov
mov
int3
loop
loop
and
cmp
sub
fcmovnb
mov
dec
inc
inc
add
leave
test
test
adc
xchg
mov
jne
dec
jb
sbb
lret
mov
xchg
cmc
inc
push
dec
enter
inc
xchg
mov
adc
popa
mov
sbb
and
lods
xchg
inc
xor
inc
inc
xchg
aas
ss
stc
mov
push
mov
mov
mov
ret
das
insl
sub
arpl
xchg
ss
cmp
popf
mov
sbb
out
push
imul
addr16
loop
out
pop
andb
fistpl
push
xlat
adc
lock
loope
xchg
sbb
popf
push
popa
pop
cmp
mov
pop
pop
decb
add
inc
inc
je
xchg
aam
hlt
pop
out
ret
push
sbb
popa
adc
xor
xlat
jno
mov
xchg
call
cs
cmc
stos
adc
arpl
push
jne
xlat
cli
mov
dec
mov
das
xchg
arpl
cmp
js
or
icebp
ljmp
pushf
jmp
arpl
lods
das
fwait
sti
and
std
xchg
fldcw
xchg
xorb
mov
repz
aam
pop
xor
mov
shl
pop
lcall
arpl
dec
scas
adc
cltd
push
cmp
cmp
scas
mul
xor
nop
push
sbbb
inc
xor
push
cmpsl
sbb
sub
jbe
movsl
push
int
fisubrl
mov
add
adc
pop
xchg
mov
fs
aad
cltd
pusha
outsl
pop
clc
out
push
mov
cmpsl
and
inc
and
mov
shlb
mov
cwtl
xchg
adc
test
ret
outsl
stos
aas
test
fisttpl
adc
daa
scas
jns
incb
shrb
and
pop
adc
lock
pusha
ret
lcall
pop
hlt
std
pop
push
sti
cmp
and
into
aaa
fisttps
sbb
inc
lods
in
scas
outsl
pushf
into
push
inc
cmp
pop
jae
mov
inc
xor
hlt
sbb
xor
jmp
mov
out
arpl
and
jne
in
movsl
jecxz
mov
fs
dec
outsb
push
pusha
daa
out
les
ja
jnp,pt
sbb
jecxz
xor
sarb
pop
push
mov
xchg
xchg
notl
xor
xlat
pop
mov
out
cmpsb
jb
xchg
mul
jno
xchg
add
push
xchg
movsb
add
mov
ret
pop
pop
mov
lds
xchg
aad
jge
adc
adc
adc
jecxz
mov
movsb
mov
mov
pop
cmp
sub
adc
add
loopew
iret
mov
and
aaa
xchg
and
ds
cmp
xchg
ret
jnp
cmpsb
xchg
push
or
pushf
xor
das
es
mov
out
dec
xlat
pop
out
mov
push
sub
push
mov
into
hlt
arpl
out
xor
cwtl
fcmove
inc
out
mov
cmp
mov
xor
cmp
out
fucomip
jne
and
divl
pop
xlat
rcrl
mov
mov
push
lret
xchg
enter
mov
pop
int
mulb
and
mov
cs
inc
mov
shll
and
dec
testl
mov
inc
loope
xor
cmp
enter
and
mov
xlat
dec
mov
hlt
mov
out
inc
mov
cmpsl
push
into
mov
ss
outsl
jb
aad
ja
or
cmc
shrb
mov
mov
cmpsb
push
xor
dec
xchg
cmp
pop
pop
sbb
jp
fcmove
leave
adc
je
xor
popf
inc
mov
fildl
xor
add
and
mov
pop
popf
data16
jb
xlat
popa
in
adc
movsl
lea
xchg
mov
xlat
push
sahf
rcll
clc
inc
fldt
dec
sti
mov
movsl
mov
push
in
jmp
shrb
movsl
sbb
sbb
pop
lods
mov
popa
fisttps
std
pushf
aam
test
ss
int3
add
lret
inc
dec
or
mov
cmpsl
jecxz
repz
or
fwait
or
ficomps
inc
sti
xchg
dec
and
jo
cli
pop
pop
push
mov
or
popf
shr
mov
jmp
push
loope
jno
std
push
iret
mov
mov
push
sbbl
loopne
lret
fisubrs
or
popa
in
xchg
sub
inc
lods
mov
enter
loopne
fnstcw
push
push
test
jb
pushf
lea
and
js
ja
add
mov
mov
filds
std
add
and
adc
out
call
cmpsb
dec
xchg
pushf
xchg
mov
pop
cmp
or
mov
mov
pop
dec
pushf
inc
inc
or
sbb
sub
add
jne
mov
mov
mov
ret
arpl
ljmp
mov
jg
xorl
test
hlt
sub
lods
icebp
push
hlt
rol
jg
cltd
nop
in
pop
xchg
inc
shll
enter
push
fiaddl
cs
inc
ja
iret
gs
push
lea
inc
inc
lret
mov
add
add
cmp
jno
fs
cmpsb
imul
rorb
dec
sbb
adc
fbstp
out
or
fbld
jb
hlt
mov
and
adc
adc
inc
sub
cwtl
jne
mov
mov
jge
idiv
push
xchg
push
cltd
sub
dec
stos
sub
or
adc
sbb
xchg
ljmp
pop
adc
add
pusha
orb
hlt
lds
dec
inc
mov
push
sbb
adc
add
inc
daa
mov
addr16
stos
idiv
aad
dec
mov
hlt
cwtl
adc
in
mov
ret
xchg
mov
in
in
lret
dec
jbe
enter
mov
xchg
and
or
pop
sbb
and
decb
mov
cmp
jge
sbb
push
sbb
lret
adc
cmp
sub
or
mov
xor
in
cmp
js
sbb
push
aas
movsb
adc
jbe
cmp
enter
mov
add
inc
xor
xchg
stc
sarl
xlat
sbb
pusha
fldt
mov
gs
int
jo
fs
fmull
and
sbb
mov
icebp
cmp
sti
int
movsl
mov
mov
adc
aam
rcrb
mov
add
and
and
pminsw
in
test
mov
inc
pop
movsl
mov
clc
add
imull
scas
xchg
in
xchg
cmpl
dec
test
sub
or
subb
or
adc
and
mov
fstpl
test
jmp
push
orl
iret
iret
inc
mov
xor
mov
lds
push
push
mulb
subl
test
jmp
cmp
lahf
bound
xchg
fsts
popf
rcll
jns
jecxz
adc
fildll
dec
daa
mov
stos
daa
pop
or
jl
mov
inc
sbb
pop
in
and
mov
pushf
lods
adc
call
gs
cmp
sub
outsb
psrlq
dec
mov
mov
pop
in
dec
jp
jp
pushf
push
movsl
sarl
jle
mov
mov
testb
mov
cld
cld
mov
andl
add
mov
lret
testb
and
push
mov
rcrl
int3
roll
adc
mov
cmp
push
ret
outsl
push
subl
sbb
movsl
ret
scas
xchg
cmpsl
push
out
outsl
jge
lahf
into
sbb
leave
iret
mov
sti
sbb
pop
repz
rcrb
fstpt
jne
jl
and
cmp
dec
insl
mov
pusha
imul
add
sar
push
pusha
fdivl
stos
fwait
out
out
mov
sub
pop
pop
adcb
idivb
xchg
jns
adc
mov
jecxz
jle
out
push
in
fidivl
shlb
test
jne
lahf
push
sbb
aam
push
and
fcmove
mov
in
popa
mov
sbb
mov
aad
jb
call
and
fisubs
pop
pop
aad
jnp
sahf
fsubr
stos
xchg
xlat
push
ss
or
or
sbb
xor
rcr
pop
cmp
jge
lock
inc
cmp
mov
mov
arpl
lods
out
jne
aad
or
mov
inc
mov
pop
ret
xchg
divb
jae
dec
imul
mov
movsb
cmp
test
aad
xor
push
mov
lods
rcrl
jmp
pushf
daa
cmpsl
mov
or
xor
sub
mov
jecxz
push
std
mov
push
xchg
pop
and
pop
mov
pop
add
xor
xchg
push
repz
call
xor
jge
push
test
pop
adc
mov
js
es
cli
iret
insl
ss
add
cmp
les
lods
jp
xchg
xchg
sub
and
mov
sbb
out
cmp
repnz
idivb
pop
rcrb
fstl
push
jge
pop
pop
adc
es
test
add
push
mov
or
int3
pop
jo
insl
mov
inc
insb
stc
gs
fwait
sub
sub
mov
or
inc
xor
push
dec
push
shrl
dec
cli
into
pop
adc
fldt
jb
mov
test
sbbl
jae
in
or
adc
jnp
dec
xlat
in
out
test
aad
or
inc
lock
inc
xor
loopne
std
mov
add
inc
push
push
ljmp
cmp
mov
aad
shl
andnps
cmp
add
pop
dec
xor
jmp
add
es
aas
cmp
lds
mov
addb
push
cmpsl
shl
fs
out
ret
pusha
jl
push
xlat
jbe
mov
ja
or
hlt
das
loop
mov
loope
lods
jmp
out
movsb
fisubrl
mov
cmp
push
call
inc
pop
dec
mov
lret
les
enter
or
es
push
enter
test
sub
fcomps
pop
test
andl
scas
imul
xchg
mov
test
jb
jge
pop
out
fimuls
mov
adc
cmovb
add
mov
test
push
mov
subb
dec
cmp
jno
dec
mov
push
push
fistpl
push
clc
cmovle
inc
lahf
xchg
sub
fsts
mov
test
dec
ja
cmc
push
lahf
sbb
jg
ja
lds
scas
xor
adc
push
std
out
scas
push
ret
mov
cmp
cltd
lret
xchg
loop
xchg
inc
ficomps
add
push
shl
xor
lcall
and
aaa
imul
pop
bound
mov
lods
cli
scas
rclb
lds
mov
sbb
arpl
xor
add
or
or
sbb
lea
mov
pop
pop
iret
rcll
xchg
dec
scas
add
mov
hlt
and
fistpl
ljmp
xchg
cld
mov
lods
outsl
add
adc
imul
xor
sbb
fs
adc
movsb
and
mov
dec
dec
pop
daa
adcb
movsb
xor
pop
icebp
idivl
xor
addr16
dec
sub
lahf
lahf
add
dec
mov
add
fsubl
xor
jno
ja
cmp
push
es
repnz
ret
adc
cmp
mov
push
sub
je
aam
dec
popf
out
xchg
imul
mov
add
and
ss
cmp
pop
out
mov
orb
lret
mov
cltd
ljmp
mov
lods
xchg
mov
adc
pushf
inc
cmpsl
arpl
dec
mov
add
lea
lods
test
xchg
add
add
int
into
cs
data16
jge
std
xor
xchg
sahf
push
insb
mov
aad
dec
scas
cmp
adc
outsb
inc
cld
xchg
cmp
xor
jl
xchg
sarb
lods
inc
faddl
out
jl
scas
iret
cmp
push
push
sub
ficomps
push
out
loop
inc
push
fiadds
or
ret
adc
out
in
aas
pop
or
mov
adc
stos
fsts
call
jle
jne
add
icebp
add
fildll
daa
push
test
and
dec
mov
adc
dec
jle
cltd
add
and
paddusw
stc
dec
fwait
sub
ljmp
sub
cmc
cmpsl
mov
inc
sub
call
sbb
mov
js
mov
adc
movsb
or
dec
mov
aas
cmpl
cmc
or
xchg
cli
pop
jns
mov
jg
cmc
mov
sbb
pop
sub
push
popa
ja
arpl
ficoms
loopne
pop
add
nop
mov
adc
jmp
mov
jno
xor
data16
or
nop
sub
incb
cli
repnz
fbstp
shr
or
inc
lds
xchg
and
ja
push
sti
mov
addr16
or
movsl
insb
dec
pop
rcrb
test
pop
pop
inc
pop
cmpsl
sbb
mov
adc
cs
addr16
jns
jo
repz
xchg
cltd
sub
add
jmp
pop
dec
loopne,pn
add
push
push
add
and
je
jno,pt
cmp
sbb
mov
call
in
vmovdqu
push
aad
ds
jnp
fnsave
xor
loope
out
push
push
mov
pushf
fprem
xchg
mov
xor
and
cli
outsb
xchg
xor
leave
clc
and
int3
fwait
rorb
mov
jecxz
and
movsl
sahf
cs
insl
sbb
xor
xor
out
icebp
and
pop
or
mov
sub
cli
lret
xchg
ja
adc
mov
es
push
push
flds
mov
xor
loop
and
in
ss
jle
rcll
sahf
scas
movsb
mov
push
push
adcb
call
or
xchg
or
ds
adc
and
and
cmp
or
cmp
int3
push
mov
push
filds
mov
inc
shrb
loop
pushf
xchg
push
fisubrs
push
adcb
in
add
mov
mov
sub
add
lret
sub
and
and
adc
testl
pop
shll
in
push
imul
fiaddl
ljmp
sub
or
movb
shl
pop
xor
mov
jmp
cmp
mov
push
popa
cli
jne
dec
or
stc
scas
insl
and
sub
test
mov
xchg
cmp
les
out
xchg
into
inc
xor
lret
iret
fadds
inc
cmc
std
test
das
shrl
in
cli
cs
inc
push
push
lcall
gs
push
mov
aas
xor
jo
enter
dec
popf
cli
sbb
xchg
inc
cmp
repz
jns
or
mov
inc
int
or
mov
pop
mov
mov
stos
sub
inc
cltd
jae
sbb
sahf
daa
push
and
in
sbb
ret
movsb
xchg
pop
fsts
into
mov
cmp
cmpsb
nop
or
fs
inc
jb
sbb
data16
xor
cwtl
es
shrl
in
dec
push
mov
sahf
mov
icebp
popa
or
call
mov
popf
scas
dec
dec
cmc
xor
cmpsl
popl
pusha
xor
jge
inc
adc
jno
dec
imul
add
filds
scas
add
push
dec
les
cld
out
shrl
xchg
or
cmp
in
inc
pop
addr16
add
push
int
rcrb
cltd
gs
mov
inc
lock
xor
xchg
push
push
xchg
sar
aad
dec
outsb
dec
std
mov
ficoms
flds
bound
dec
and
fbld
sbb
add
mov
gs
xor
das
ljmp
fstl
mov
or
dec
data16
add
cmpsl
pop
jnp
test
leave
dec
std
enter
bound
imul
out
popf
mov
je
lret
test
adc
cmp
adc
cltd
imul
outsb
dec
and
ds
in
mov
loopne
or
push
xchg
bound
sbb
mov
movsl
adc
adc
push
inc
fwait
sub
cld
pop
repz
add
into
inc
js
jmp
dec
xor
fsts
xor
pop
je
xor
push
adc
stos
mov
insb
test
stos
mov
xchg
push
out
movsl
adc
lcall
ret
fidivs
lds
ljmp
ljmp
sub
jne
inc
and
ret
loope
nop
xchg
dec
and
popa
adc
add
repnz
mov
and
pusha
pop
adc
incl
sub
mov
xchg
push
pop
jns
dec
jnp
sub
es
push
lret
lds
jns
jp
cltd
inc
sbb
pop
popf
mov
in
or
test
dec
push
iret
bswap
int
sahf
lret
ljmp
jl
push
arpl
adc
xor
leave
or
js
aad
pop
add
aad
stos
and
rcrb
rcrb
popa
mov
or
hlt
lds
inc
mov
sbb
inc
pusha
mov
sti
stos
inc
mov
mov
cmp
jo
bound
out
adc
cmc
int3
imul
aas
ds
push
pop
in
xchg
mov
out
sub
xor
orl
mov
nop
inc
jp
iret
aas
adc
hlt
repnz
push
aas
pop
in
testb
push
jle
or
push
mov
mov
leave
mov
aad
int
popf
cltd
sbb
mov
movsb
shll
rorl
lock
insl
jle
jmp
mov
outsb
out
mov
daa
loopne
repnz
cmp
leave
xchg
push
lds
and
or
adc
rcrb
out
popf
jae
cmc
mov
aad
jl
hlt
aas
negb
sub
push
or
adc
cmc
sbb
xorb
sub
or
add
cmpsl
insl
lret
lret
add
mov
aas
in
mov
in
and
inc
mov
mov
fwait
dec
ds
hlt
xor
xchg
adc
bound
or
mov
xor
sbbb
jb
out
xor
xchg
sbb
clc
mov
mov
jae
mov
pop
mov
rol
xchg
and
mov
fsts
jbe
aad
sbb
dec
lret
cli
mov
loopne
sbb
dec
sbb
shrb
dec
or
and
cmpsl
sahf
lods
mov
sbb
outsl
push
ret
repz
test
push
cmpsl
and
daa
js
in
jno
loope
aad
lea
push
fnsave
ja
shrb
sub
lahf
clc
lods
inc
movsb
adc
mov
pop
or
je
rolw
and
mov
mov
sub
or
sbb
xchg
pop
outsb
jp
testl
lcall
cwtl
cwtl
adc
adc
or
ja
pop
outsb
popf
sbb
inc
out
out
mov
repnz
loopne
scas
xor
fiaddl
out
sub
insl
into
mov
insl
xchg
idivb
sub
xor
mov
cwtl
xor
add
dec
inc
ror
sbb
in
xor
fmull
cs
inc
and
dec
rorl
pop
mov
lcall
mov
push
add
out
or
xor
push
imul
add
or
xchg
in
pop
sub
ljmp
xor
sbb
xor
lcall
adc
push
and
outsb
mov
bswap
mov
out
fucomp
push
xor
pop
jbe
push
dec
push
nop
stos
clc
or
shlb
push
pop
adc
lea
stc
sub
inc
mov
push
cmc
bound
xchg
pop
or
mov
jb
stc
imul
repnz
pop
add
pusha
cmp
push
mov
and
cmp
add
in
xor
loop
shll
sti
std
sbb
out
ljmp
push
xchg
dec
fwait
mov
push
and
fnstsw
cld
cmc
daa
test
imul
loop
addr16
lret
push
push
lea
ss
jbe
and
jne
xlat
fcmovnbe
ret
cld
test
dec
jae
pop
push
mov
and
or
jecxz
xlat
fstl
add
push
and
loopne
pop
jmp
pop
filds
iret
fldpi
lcall
push
push
pop
jp
stos
sbb
fs
psubusb
push
jg
fistpl
nop
mov
fdivrl
rorb
arpl
adc
jne
cmp
test
mov
lds
mov
xchg
mov
pop
xchg
and
lods
add
mov
or
xor
jp
imul
mov
push
pop
mov
pop
arpl
jle
pop
add
push
cmp
jne
cmpb
shll
sbb
xchg
hlt
adc
cmpsb
loop
cltd
jno
xor
pop
fucomp
add
or
inc
imul
cmp
adc
cmpsb
test
mov
jge
xor
imul
loope
cltd
ds
cmp
sbbl
jg
divl
cmp
pop
cmp
xchg
lock
dec
mov
xor
sahf
in
pop
mov
sbb
adc
stos
inc
adc
sbb
test
mov
leave
lret
push
stos
pop
push
repnz
jb
push
nop
jp
mov
or
aas
dec
mov
cs
test
sbb
push
push
xchg
enter
daa
or
sub
lahf
push
sub
lods
and
test
ja
std
stos
adc
xor
dec
das
insb
xchg
test
push
jge
mov
outsl
add
dec
lds
in
sub
xchg
mov
jne
popf
push
aad
xchg
xchg
cmp
fwait
inc
push
and
aad
dec
inc
xor
test
imul
in
fld1
mov
idivb
je
mov
sub
pop
leave
shll
mov
xor
push
sti
lock
fistl
into
aaa
ljmp
mov
shlb
sahf
fmulp
shl
cwtl
je
jo
push
aas
pop
popf
jno
xchg
addb
cmp
or
add
leave
into
cwtl
xchg
outsl
add
inc
test
inc
movsl
clc
pop
int3
mov
xchg
push
jp
xchg
or
hlt
and
mov
inc
loope
pop
lock
or
or
mov
sub
mov
into
xchg
push
addr16
enter
add
movsb
outsb
xor
xchg
aam
jnp
sbb
loopne
andl
sarl
mov
repnz
pop
or
in
movsl
push
and
add
in
in
cmpsl
pop
or
jg
sbb
pop
add
stc
lret
mov
cmp
mov
sti
call
adc
sbb
mov
cmc
and
cmp
pusha
in
xchg
xchg
inc
mov
push
mov
pop
and
divb
jg
pop
int
addb
cmp
mov
sbb
push
mov
or
sub
jb
jl
icebp
cmp
pushf
push
or
out
jne
mov
aas
testb
push
jnp
add
jmp
lcall
sub
jge
or
xchg
mov
mov
addr16
stc
scas
or
loopne
repz
sbb
push
or
mov
mov
and
push
and
sbb
pop
sub
movsb
jg
les
imul
mov
pop
mov
jns
or
mov
jno
aas
pop
adc
out
das
aas
les
rcrl
xchg
inc
das
and
jmp
adc
bound
shr
sub
insb
or
das
jmp
outsl
fiaddl
sub
jae
stos
fwait
into
daa
push
fucomi
js
fldcw
std
jmp
shlb
sbb
test
shr
adc
xor
outsb
ljmp
ret
ds
shrl
filds
jns
xor
xor
pusha
lods
mov
mov
cwtl
xor
outsb
pop
mov
mov
dec
int
xchg
sbb
mov
sti
fs
cmp
ret
sub
arpl
add
iret
in
adc
jl
stc
push
insl
cltd
enter
out
stos
push
sti
test
ja
sbb
and
insl
xor
sbbl
cmc
out
mov
jge
fdecstp
test
pop
pushf
mov
xchg
mov
ds
fadds
adc
shrb
cmc
cli
lret
push
jp
lcall
fcoms
shlb
and
jp
shrl
add
push
iret
add
or
and
and
mov
fs
mov
mov
mov
loop
mov
lock
xchg
ret
xchg
notb
adc
inc
fwait
push
jg
ret
push
lret
call
cli
les
addl
testb
out
test
xchg
fidivrs
adc
sub
clc
movsb
insb
cmp
sti
cmpsl
sbb
outsb
add
mov
js
lods
push
repz
xchg
icebp
xlat
movsl
add
mov
divl
dec
and
fidivrs
push
sbb
enter
mov
arpl
sub
outsb
in
or
pop
mov
or
sub
pop
mov
imul
and
mov
lret
stos
pop
pushf
arpl
fnsave
adc
shl
mov
loope
loop
or
xchg
shl
in
fcompl
xchg
adc
bound
cmpb
insl
sbb
mov
xorb
imul
jno
or
cmp
mov
inc
xchg
les
es
inc
stc
add
cs
lret
lahf
and
pop
out
ja
mov
jo
outsl
xchg
cmc
test
outsb
push
fs
lcall
out
ss
movsl
or
mov
add
or
dec
lods
cli
in
sbb
or
mov
sub
ds
inc
rcrb
clc
dec
popf
lret
xchg
test
mov
xorb
mov
sahf
sbb
inc
fnstsw
loopne
out
xor
mov
pop
test
mov
imul
aaa
xor
addr16
subb
lahf
mov
ret
loop
pop
mov
xchg
lcall
pop
fsubl
scas
gs
jno
jns
xlat
mov
pop
mov
jae
xor
add
cmp
enter
add
pop
mov
push
dec
push
lret
push
shl
or
sti
out
pop
js
cmp
lods
jnp
cmp
cmp
pushf
iret
jnp
add
pop
cwtl
and
jno
adc
sub
mov
xor
cs
test
and
pusha
inc
push
repz
fwait
adc
aaa
cmp
inc
clts
into
lods
jp
push
shlb
jne
xor
dec
adc
mov
fmul
pop
repz
lahf
imul
cmc
incl
jecxz
mov
mov
in
aaa
inc
adc
stc
adc
push
adc
loop
mov
mov
jns
mov
fsubs
mov
push
jmp
iret
push
testb
jno
data16
lods
data16
jl
fbstp
push
bound
sti
xchg
mov
mov
jmp
inc
add
xchg
jae
js
loopne
int
cmp
push
les
daa
rep
nop
dec
pop
fisubl
inc
mov
pop
dec
adcb
xchg
stc
pop
aas
mov
arpl
fiadds
and
or
sarl
push
js
cmc
jge
xor
addl
adc
push
imul
rcl
jmp
sub
mov
push
loope
inc
add
ret
in
xlat
dec
stc
push
pushf
dec
pop
sub
lock
out
push
inc
outsl
lcall
push
adc
fstpl
popa
xor
jbe
out
pusha
sbb
test
rorb
xchg
cwtl
dec
push
sahf
je
fwait
and
jo
icebp
int
mov
jge
aad
mov
sahf
xchg
lret
inc
push
adc
popf
aaa
push
pop
iret
addr16
scas
push
adc
loop
out
lods
sub
mov
add
fmull
stos
hlt
dec
jg
or
ss
lods
pop
cmp
or
adc
shr
fs
or
jl
jbe
mov
add
cwtl
lret
push
repnz
lahf
mov
sbb
xorb
cmp
xchg
xchg
sbb
leave
decb
mov
sbb
pop
popl
jmp
jp
ret
cli
cwtl
insl
cmp
mov
sub
push
and
dec
xlat
scas
sbb
daa
add
xchg
lahf
aam
add
xchg
adc
inc
repnz
cmc
push
xchg
lret
call
push
adc
inc
sub
and
adc
fmull
dec
loop
popf
jp
xchg
cmc
mov
in
cld
dec
xor
out
mov
or
in
sbb
loop
mov
pusha
pop
ja
mov
sarb
jae
lahf
sub
out
jb
xor
ret
sbb
mov
inc
add
pop
shll
sbb
mov
sbb
rcrl
in
data16
cmpsb
xor
adc
xor
mov
cmc
push
cmpsl
repz
aas
cmp
mov
js
mov
or
fisubs
pop
cmpsl
addr16
push
mov
hlt
scas
mov
mov
pushf
out
xor
rol
movsl
sbb
loop
push
sub
mov
stos
jne
ds
aaa
outsb
dec
adc
cld
enter
adc
fstps
into
pop
xlat
dec
test
fisubrs
into
push
push
pop
mov
push
imul
cltd
iret
cltd
hlt
incb
add
push
or
lods
lahf
mov
shl
or
scas
imul
imul
addb
xchg
lods
mov
call
dec
mov
mov
dec
add
aam
inc
or
lea
xor
dec
imulb
push
xor
jge
call
push
sub
pop
adc
adc
aad
fld
dec
jae
aam
fwait
pop
fmuls
sbb
hlt
lret
cmp
cmc
aam
pop
and
lret
inc
lret
cli
stos
pop
aaa
jbe
fwait
cmc
push
inc
int
mov
and
push
test
stos
mov
adc
xor
jne
add
pop
pop
or
push
in
cwtl
pop
dec
and
inc
cmpsl
jb
jp
cmp
sbb
test
inc
mov
cli
out
es
mov
inc
fs
add
lahf
pop
pop
fsubrs
push
lods
cmp
jns
mov
jo
aam
push
and
mov
mov
hlt
dec
inc
fsts
or
lahf
xor
repz
mov
or
lds
xor
out
adc
je
sbb
cmpsl
dec
xchg
pop
stos
nop
sub
cld
aad
pop
dec
inc
xor
push
shl
sub
sti
leave
mov
adc
sbbl
mov
shl
jae
or
movsb
std
out
andb
popf
rcl
daa
iret
xchg
push
sub
ss
dec
aam
sbb
pop
xor
mov
sbb
pop
add
cmp
jo
inc
adc
in
sub
dec
or
jns
mov
jmp
xchg
dec
add
addr16
in
int3
adc
xor
test
adc
mov
and
xchg
adc
and
inc
in
loope
mov
mov
add
mov
das
pushf
and
jno
xor
cmpsl
jge
sbb
ficoml
jb
cmpsb
add
lods
push
xchg
add
or
vmwrite
push
cmpsb
loopne
mov
js
add
adc
mov
jnp
cmp
push
cmpsl
xchg
incl
movsb
cld
aas
xchg
jg
mov
and
testb
xchg
int
inc
imul
pop
mov
cmp
push
jb
xor
xor
xchg
fs
dec
mov
mov
jne
cmp
mul
bswap
scas
out
push
push
invd
imul
aam
aaa
scas
sub
rcll
stos
xchg
and
bound
inc
mov
ljmp
inc
pusha
mov
jge
mov
icebp
jne
imul
pusha
xor
insb
mov
xchg
aad
mov
xchg
inc
popf
aad
or
xchg
pop
scas
sbb
in
pushf
xchg
pop
and
cmpsl
adc
ss
xor
xor
ss
mov
mov
add
ljmp
jbe
mov
add
pop
mov
scas
xchg
mov
jo
roll
pop
pop
xchg
je
dec
rcrl
jecxz
lods
xor
cltd
sub
sbb
aaa
cmp
inc
sub
aad
jp
inc
sub
add
sbb
outsl
cmpsl
mov
sub
mov
fidivl
scas
ds
jne
icebp
xchg
push
lods
repz
add
adc
in
test
data16
mov
stc
xchg
mov
mov
pushf
clc
bound
in
lds
out
je
pop
lcall
jecxz
dec
in
cmp
ficomps
mov
cs
xchg
bound
out
ficompl
pop
test
lcall
or
push
popa
dec
imul
and
insb
sbb
test
pop
or
mov
mov
hlt
xchg
mov
leave
or
sarl
mov
out
sub
sti
loop
sarb
fdecstp
sbb
xor
xor
inc
gs
lret
sahf
adc
push
sbb
jmp
and
and
xor
pop
into
mov
pop
xchg
jle
popf
sti
push
xor
cwtl
adc
mov
lret
jmp
jns
mov
push
jae
dec
shrl
sbb
jo
sub
cmp
jmp
test
sarb
imulb
sahf
jl
mov
push
lret
pop
or
push
xchg
sub
push
push
scas
jb
testb
scas
mov
xchg
cmpb
sbb
jbe
stos
jb
cmp
dec
into
sbb
popf
jge
jmp
jmp
or
add
mov
inc
inc
mov
mov
bound
inc
mov
push
imul
repz
out
push
pop
dec
adc
xchg
add
cmp
mov
sub
stc
and
sub
stc
cmpsb
push
mov
fdivl
jle
int3
mov
lcall
jnp
mov
mov
sub
mov
jle
rcrl
mov
add
ror
fucomp
loope
or
xchg
push
push
mov
add
aaa
js
mov
dec
int
test
in
mov
mov
push
fimull
and
cmpsl
fnop
popf
fstpt
adc
dec
imulb
or
adc
mov
sbb
adc
pop
jge
add
inc
addl
or
and
and
push
xchg
test
das
hlt
testb
add
or
sub
jae
xor
sub
js
sub
cli
mov
push
mov
fwait
pop
popf
into
add
xchg
lds
jge
sbb
shl
orl
cmp
inc
push
addr16
lcall
dec
pushf
addb
dec
dec
mov
cmc
jecxz,pn
jno
sbb
pop
jns
mov
cmpl
xor
jno
cwtl
fisttpl
lods
and
or
and
push
jp
mov
in
push
repz
rclb
vcmppd
stc
loope
dec
add
jbe
dec
int
clc
mov
or
test
addl
mov
subb
ljmpw
in
xchg
in
les
sbb
enter
jno
lcall
imul
loope
subl
mov
or
inc
lcall
insl
add
std
ret
fdivrs
ss
push
xor
mov
cmp
inc
test
xor
data16
dec
aaa
xlat
lods
jnp
dec
xorl
fadds
inc
xor
andb
rorl
rorl
les
bound
sub
out
les
leave
outsb
sub
mov
lcall
lahf
fsubs
lahf
dec
test
iret
mov
out
mov
adc
fdivr
aas
cmpsb
jo
imul
aaa
mov
or
inc
das
fld
fdivrl
cli
jae
mov
iret
mov
mov
mov
scas
add
stc
push
gs
scas
stc
loopne
aam
mov
pop
ja
movups
dec
popa
inc
sti
imul
leave
mov
dec
stos
std
shrb
clc
jno
outsl
cld
mov
sub
sub
cmp
rcrl
xchg
movsb
jne
mov
inc
into
jno
negl
dec
les
add
shr
jl
pusha
xchg
lock
loop
inc
mov
ja
pop
xor
xor
jg
rcrb
mov
mov
pop
or
push
movsl
out
cmpsl
pop
lock
aaa
mov
mov
sub
xor
mov
inc
push
inc
jae
push
hlt
lahf
mov
push
sahf
out
fistl
fists
loop
push
rolb
and
mov
pop
adc
movsb
mov
lcall
push
jecxz
xchg
lods
mov
lods
xchg
cmp
xor
push
mov
sbb
addl
loop
inc
or
sub
dec
es
stos
lea
cmp
ds
add
subb
push
cmpsl
into
lds
frstor
out
pusha
jnp
mov
fdivrp
mov
xor
mov
push
addr16
mul
push
mov
mull
mov
test
mov
jns
push
adc
in
add
arpl
pop
sbb
mov
mov
and
shll
xchg
into
cmovb
xchg
mov
arpl
jmp
add
enter
add
popa
inc
dec
mov
xchg
mov
inc
scas
pop
sub
test
pop
cmp
push
and
jmp
xor
fcompl
inc
fistpl
adc
out
push
clc
or
cmp
xor
and
out
mov
push
xor
insb
xchg
insl
mov
jno
enter
nop
pop
xor
lret
pop
inc
mov
push
gs
add
ds
cld
sti
fdivr
mov
dec
jle
and
in
cmpsl
insl
out
cwtl
jl
in
sub
insl
repz
xor
push
movsb
rol
into
popf
jne
sbb
stos
jnp
sub
pop
ret
into
int3
rorl
call
sbb
aaa
jae
aam
cs
mov
xor
fstpl
or
getsec
lcall
jo
test
decb
inc
cli
mulb
js
js
int3
out
fistpl
push
fsts
jns
or
xor
mov
sub
enter
cmp
mov
xor
mov
movsl
dec
mov
cs
test
dec
xchg
insl
mov
lock
pop
sub
jo
pushf
mov
mov
adc
daa
jb
xchg
push
mov
inc
ret
ret
or
lcall
roll
or
mov
push
aam
ficoml
xlat
sub
fwait
dec
pop
je
jg
xchg
es
test
fdiv
lea
lea
imul
inc
jp
lods
cmp
push
fstps
mov
mov
insl
and
fwait
js
inc
mov
nop
inc
xor
inc
add
adc
sbb
scas
mov
cmp
mov
fcomps
out
in
pmuludq
mov
out
adc
in
xor
inc
xchg
mov
loope
lahf
rorb
test
sbb
jecxz
cmp
arpl
mov
push
daa
stos
adc
sub
sub
aaa
sti
mov
dec
orb
sub
push
push
pop
ret
mov
lret
stos
sub
cmc
sbb
jbe
dec
pop
ja
test
mov
cmc
xlat
sbb
or
mov
pop
and
push
and
fsubrs
mov
jl
inc
mov
pop
gs
jg
adc
adc
jl
or
aam
es
inc
xor
lods
pop
xchg
cmc
inc
hlt
or
int3
movl
shl
push
adc
lds
ss
and
jbe
dec
aam
ret
js
ss
or
fmull
movsl
pop
or
lret
fstpl
xchg
enter
jecxz
xchg
xor
lahf
enter
pop
push
dec
add
dec
jle
pop
mov
in
shl
ja
out
sbb
or
stos
xor
sub
push
mov
mov
push
mov
mov
sub
test
dec
shlb
cmp
or
fwait
mov
fisubrl
xchg
stc
cld
adc
fwait
nop
repz
cmp
ljmp
lods
add
sbbb
mov
out
mov
cmpsl
mov
sbb
xchg
mov
insb
clc
push
xchg
daa
into
xor
lods
incl
and
arpl
xor
lds
push
sub
mov
push
and
lahf
int
mov
daa
insl
outsl
jle
sbb
or
mov
ljmp
mov
jo
mov
scas
mov
scas
dec
mov
out
arpl
adc
cltd
cwtl
push
jl
rclb
das
xchg
jge
addr16
dec
push
adc
sub
popf
or
rol
lock
clc
hlt
rorl
add
jae
push
andb
sbb
mov
fnstcw
loope
or
out
inc
movsb
popf
pop
jle
shr
aas
aaa
decb
cwtl
loopne
inc
popa
imul
ret
mov
addb
add
mov
mov
sarl
into
outsb
push
in
ss
and
sbb
fstpt
mov
loop
into
idivl
jo
imul
pop
inc
xlat
and
jo
movsl
and
ret
popa
test
aas
pushl
imul
movsl
sbb
hlt
and
shll
fwait
lds
out
les
aad
jno
and
fisubrl
and
or
int3
mov
xor
rorb
shll
xor
lods
push
pop
clc
scas
sub
xor
inc
call
push
fwait
sub
fcmovnb
xchg
aam
dec
nop
xorb
and
pop
in
xor
into
in
pop
push
xor
cmpsl
jecxz
int
push
mov
sub
int
lret
add
dec
xchg
mov
test
ret
sti
and
pop
xchg
adc
xor
sub
jb
fcomp
add
inc
bound
mov
sbb
inc
dec
mov
jecxz
jge
insb
sahf
imul
inc
mov
call
sub
ja
dec
dec
mov
inc
stc
inc
repnz
dec
push
aas
or
xchg
les
pop
gs
jnp
adc
jae
fdivrl
popf
dec
fstps
mov
lods
ret
les
insl
test
cmc
movsl
add
aaa
stos
loopne
mov
push
cmpsl
iret
lock
adc
ja
add
push
ja
mov
aas
push
add
adc
sbb
daa
repnz
pop
mov
fsubl
push
mov
daa
mov
xor
sahf
out
fs
pop
pop
xor
cmp
cs
lcall
jp
popw
and
fidivl
xchg
inc
js
iret
xchg
cli
inc
aaa
test
fiaddl
out
pop
andl
fisttpll
cmp
adc
jmp
out
les
popf
pop
fsubs
inc
mov
div
jne
push
adc
pop
xchg
cmpsl
scas
rcr
pop
nopl
popf
scas
xchg
jb
xor
pop
fists
pop
add
jo
fcmovne
outsl
push
push
shll
iret
mov
cmp
mov
sbb
adcb
out
cld
inc
inc
or
dec
test
jnp
push
in
cmp
add
inc
or
faddp
mov
pop
mov
scas
out
subl
aaa
movsl
or
or
and
xchg
outsb
rcrb
lds
dec
jb
lea
pop
mov
out
sub
lahf
sub
insb
xor
ja
rorb
mov
mov
std
inc
sub
add
mov
int3
repz
sbb
pop
insl
mov
pop
pop
cmc
cwtl
sub
add
and
andl
and
cmp
ds
jl
stc
loop
inc
push
out
mov
fadds
xor
lret
xchg
mov
push
dec
inc
adcl
adc
sbb
rcrl
mov
xchg
cmpsl
pop
and
pop
aaa
loop
stos
jnp
daa
jecxz
pop
adc
inc
mov
or
adc
xor
pop
ljmp
js
cltd
arpl
inc
jmp
mov
sbb
inc
lock
add
in
bswap
mov
inc
stos
adc
out
cltd
std
dec
jge
sub
sub
push
lods
insl
mov
or
sub
shrl
mov
sahf
add
mov
inc
sbb
cmp
and
mov
popf
sub
stc
mov
jae
mov
dec
lock
push
fdivrs
xlat
sub
xchg
popf
add
and
aaa
cmp
xchg
add
add
pop
loop
fwait
imul
leave
jb
push
loop
jecxz
and
repz
adc
lock
cwtl
dec
sub
ja
movl
xor
in
mov
mov
jnp
leave
cmpsl
lahf
fildll
neg
add
stos
fidivrs
fs
stc
fdivr
daa
xor
cmp
inc
mov
pusha
xchg
xchg
shll
adc
in
inc
scas
mov
push
jo
scas
ret
aad
imull
and
aas
push
addl
cmc
lahf
aad
int
mov
push
mov
adc
mov
popf
gs
dec
lds
jne
or
mov
lahf
xchg
jle
mov
mov
aas
push
out
lds
lea
sbb
and
cltd
pop
sub
leave
dec
sbb
out
rcl
into
push
imul
enter
out
push
aas
arpl
pop
and
mov
push
mov
add
xlat
sbb
pushf
getsec
xchg
popa
or
pop
rorl
mov
mov
inc
insb
add
enter
mov
aad
les
in
push
inc
enter
adcl
xchg
testb
es
insl
push
sub
add
jge
leave
mov
cmp
lds
fbld
in
inc
add
xchg
aam
les
dec
leave
or
int
jmp
sbb
inc
jg
sub
jne
and
adc
push
fldl
add
aaa
mov
adc
cmp
into
rep
ja
push
jg
rcrb
jle
mov
pop
pop
jp
and
icebp
mov
xchg
inc
out
pop
pop
cmc
jl
in
lods
add
jno
cmp
push
es
fdivl
mov
mov
mov
add
sub
jl
inc
xor
loopne
dec
cld
bound
cmpb
movsl
movsb
pavgw
or
mov
mov
dec
js
scas
jecxz
mov
mov
rcr
ss
push
pushl
adc
cmp
or
jno
je
mov
mov
int3
adc
sub
insb
enter
pop
das
mov
and
push
popa
movsb
push
and
add
les
cwtl
xchg
pop
xchg
out
push
cmp
xor
adc
pop
ss
loope
js
add
aas
or
in
or
push
aas
lret
in
outsb
add
out
lahf
outsb
xor
in
mov
and
xchg
mov
fnstcw
lahf
xor
jge
jmp
push
arpl
arpl
mov
add
mov
subl
fwait
xorl
rol
mov
push
fistl
pop
mov
push
fcmovnbe
fstps
fnsave
jbe
gs
pop
loopne
lcall
pop
lret
and
dec
mov
cmpsl
imul
xchg
dec
mov
mov
mov
cmp
xchg
inc
pushf
out
push
push
ljmp
pop
sub
jmp
mov
mov
mov
imul
cli
stos
sbb
pop
jg
cmp
js
fwait
popa
mov
bound
or
xor
loopne
sbb
push
sti
xlat
inc
push
orb
cmp
loope
adc
push
dec
add
pop
or
push
test
aam
sti
inc
js
xor
mov
add
sbb
jmp
push
clc
sbb
adc
iret
aas
lahf
scas
insb
or
test
enter
adc
fwait
cli
fwait
arpl
popf
loopne
in
test
and
push
and
mov
adc
cmp
pop
pop
aas
pop
outsl
bound
rclb
sub
push
ss
and
cmpsb
in
mov
or
nop
loop
or
scas
enter
jge
push
test
ror
jne
jp
lds
bound
stc
scas
in
or
mov
cmp
repnz
dec
scas
mov
mov
test
adcl
jge
int3
outsl
hlt
nop
push
inc
imul
test
into
shll
or
dec
sar
pushf
shrb
mov
lds
lds
outsb
lret
cwtl
out
add
cmp
mov
sbb
bound
popf
mov
mov
je
addr16
xor
call
aad
pushf
clc
out
mov
cmpsb
add
inc
or
sbb
jecxz
push
rorl
adc
sbb
push
loope
pop
jbe
jo
or
jnp
movsb
push
cmp
lret
lds
mov
fiaddl
fstpl
cmc
cmpsl
mov
xchg
dec
scas
repz
ret
dec
mov
pop
lcall
loope
sbb
add
out
mov
jg
aad
sbb
push
pusha
into
pop
popa
and
dec
mov
mov
dec
ljmp
in
out
bound
test
xchg
cmpsl
and
loop
sub
jl
xchg
and
hlt
repz
sbb
into
lods
add
add
and
dec
pusha
lret
cmp
xchg
ret
adc
push
cmpsl
cmc
and
and
jg
xor
rorb
in
imul
insb
mull
int
mov
outsl
sub
add
mov
pop
outsl
mov
push
or
push
mov
ret
add
xchg
add
pop
vmovmskps
test
out
mov
rol
shrl
cmp
cmp
mov
dec
cmp
aam
add
inc
xchg
decl
sti
ljmp
leave
testl
sbb
scas
cmp
out
mov
or
fldt
pushf
or
jg
lret
rcrb
scas
sub
and
pushf
pop
lods
dec
rclb
sbb
jne
stc
adc
sbb
daa
ds
inc
lcall
cmp
sbb
stos
fwait
stos
arpl
cmp
jbe
lcall
outsb
or
xor
mov
in
push
push
pop
icebp
add
rorl
or
xchg
push
adc
inc
jo
mov
adcb
jno
pop
ror
outsb
push
xchg
adc
dec
push
inc
and
lahf
adc
jnp
and
iret
ss
lock
mov
inc
pusha
retw
jmp
jb
ffreep
sub
jmp
pop
mov
popa
jnp
cmp
add
sub
xchg
jmp
shlb
mov
xor
inc
in
and
in
fidivrs
dec
push
add
pmaddwd
and
lods
cld
into
aas
movsl
cmp
mov
jnp
mov
and
pusha
in
jnp
js
fiadds
mov
dec
xor
mov
push
inc
push
ret
bound
lods
into
lret
cmp
inc
and
pop
stos
mov
adc
ret
or
js
cmpsb
ljmp
sub
add
push
ret
sbb
or
es
js
lret
and
and
add
movsl
addr16
cmp
jg
pop
mov
xchg
dec
cmpsb
mov
sahf
inc
outsb
jbe
fsts
loope
loopne
inc
jnp
clc
xor
mov
or
mov
pop
mov
sub
jns
call
cmp
xor
adc
fisubrl
mov
mov
push
xchg
inc
mov
rol
lret
sahf
inc
mov
outsb
push
cli
les
ret
inc
dec
xor
xchg
iret
in
ret
mov
lret
repnz
fisttpl
outsb
push
jne
adc
ret
pop
fsts
dec
and
sub
test
mov
push
hlt
popa
loope
mov
mov
jecxz
in
push
std
and
hlt
mov
push
shlb
add
aad
add
jg
pusha
push
sub
test
test
movsb
sahf
or
hlt
js
leave
mov
xchg
pop
mov
or
inc
cmp
sbb
mov
aas
lods
lea
jmp
cmp
jno
mov
xor
cmc
pop
jae
imul
cld
test
jno
mov
mov
xchg
pop
xlat
sahf
jmp
push
pop
sbb
scas
cmp
out
subl
ljmp
add
push
int3
jb
push
jl
popf
push
shll
mov
xchg
cmp
cmp
sbb
push
fwait
jecxz
addr16
mov
jno
adc
rorb
fs
jl
lahf
adc
mov
sub
mov
push
and
ret
stc
push
push
mov
add
mov
fldcw
lds
shr
andl
sbb
pushf
js
pop
xchg
dec
push
fwait
clc
push
dec
sti
fcom
fistps
lock
inc
gs
pop
mov
stc
test
fs
daa
psllq
pushf
sbb
pop
mov
fisubl
in
aad
dec
pop
out
dec
test
pop
scas
int3
clc
repz
add
push
js
out
adc
sarb
pop
xor
mov
inc
outsb
andb
xorb
push
fsubs
xchg
and
inc
mov
or
test
add
fadds
sub
mov
cld
fmull
outsb
enter
jecxz
call
mov
mov
lds
leave
ja
xchg
and
cmpsb
inc
xor
in
xchg
pop
ja
jle
push
inc
and
cmp
pusha
aam
cmp
lods
push
out
mov
mov
push
cmp
mov
insl
out
mov
movsl
and
sub
add
inc
out
negb
clc
dec
pop
lods
out
xchg
xchg
ja
lret
rcll
jno
into
dec
push
mov
test
ja
cld
je
xlat
pop
sub
cmp
sub
loope
insb
lret
mov
sbb
mov
inc
cwtl
mov
imul
push
or
pop
popa
add
movsl
fwait
cli
inc
pop
mov
test
aad
imul
push
pop
into
cmp
dec
ret
sub
push
inc
mov
pop
out
mov
pop
and
aas
and
push
aaa
out
gs
in
pushf
stc
push
out
incb
mov
es
inc
mov
pop
jmp
dec
adc
jb
push
scas
mov
nop
adc
mov
popf
jl
loop
inc
sbb
jecxz
xor
aas
push
or
and
jo
jnp
arpl
pop
xchg
in
out
inc
ret
mov
movsb
aam
repz
movsb
xor
fsub
sbb
xor
or
inc
test
out
shl
out
sbb
filds
xchg
mov
push
cmc
fidivrl
bound
sub
ret
ret
ds
je
mov
icebp
push
pop
mov
dec
mov
andl
mov
pop
push
or
fwait
gs
dec
lds
jo
cltd
xor
rclb
lock
cmp
dec
lret
push
out
sub
mov
enter
popa
insb
or
in
pushf
push
test
inc
adc
movl
leave
cmp
nop
ret
gs
mov
jmp
xchg
push
psrlw
insb
cmp
xchg
inc
dec
add
lahf
rclb
or
sbb
loope
xchg
test
xchg
repz
popa
mov
xor
inc
jns
sub
push
imul
dec
adcb
js
add
rcrl
mov
fucom
nop
cmp
scas
dec
pop
addb
sub
jle
xor
aad
mov
shr
fists
repz
ss
fsubrs
into
leavew
sub
lods
out
das
jb
in
sub
stos
ja
mov
cmpsl
xchg
insl
outsb
icebp
mov
cmp
xor
int
push
and
mov
jmp
mov
scas
mov
cmc
cmp
lret
xchg
adc
pushf
sbb
mov
adc
or
shlb
adcl
sbb
xchg
cli
pop
cmp
daa
mov
mov
mov
lods
lea
or
aad
in
push
inc
int
rcll
cmpxchg
mov
or
cmpsl
pop
and
jmp
mov
idivb
mov
mov
push
inc
or
mov
fidivs
js
cmp
lcall
cmp
cli
add
cltd
dec
stos
sub
dec
dec
mov
lods
dec
in
push
loop
mov
mov
inc
ljmp
sub
xlat
and
pop
xchg
dec
clc
bound
cmp
or
sbb
jnp
insb
lds
std
outsl
push
push
nop
fimuls
mov
lds
xlat
cmp
push
sub
loope
addr16
push
adc
pop
lcall
out
cmpsl
and
inc
std
fnstsw
ss
and
mov
sahf
push
test
adc
mov
mov
xchg
push
xchg
mov
movsl
aad
lahf
pmaxub
inc
push
mov
cmc
and
test
push
hlt
or
rorb
and
xor
push
dec
stos
cmp
pop
int3
jbe
fadds
and
xchg
jnp
jnp
orl
es
aam
inc
xor
mov
adc
mov
mov
es
push
das
or
cmp
pop
sbb
mov
pop
mov
cmpb
push
xchg
push
subb
mov
xor
xchg
icebp
mov
cltd
sbb
orb
mov
jg
xor
mov
rol
jl
imul
movb
sti
mov
fsubrs
cmp
adc
cmp
pop
xor
out
aaa
loopne
ja
clc
shll
adc
mov
js
pop
add
or
cwtl
pop
aad
das
ret
sbbl
lcall
xor
inc
fnsave
sarb
rolb
jp
call
ja
and
cltd
inc
fadd
and
gs
push
inc
add
jo
lcall
and
mov
lods
mov
jecxz
xchg
mov
sarl
lods
dec
cmpsb
das
xchg
sarl
pop
xchg
push
lret
sub
das
mov
call
mov
sbb
push
push
movsl
add
aas
xchg
xor
mov
xor
dec
movsb
inc
and
cwtl
cmp
lds
inc
xor
add
jmp
xchg
sub
cmpl
clc
fwait
mov
lahf
cld
int
iret
bswap
lahf
xchg
movsl
fmul
cmp
mov
orb
les
pop
xor
inc
imul
adc
out
imul
and
sbb
mov
aam
jno
pop
rcl
sbb
pop
nop
lret
pop
or
popa
test
mov
mov
adc
je
jecxz
add
xchg
icebp
int
and
fdivrp
aad
cmpb
pop
pop
popf
sbb
xchg
inc
out
loopne
mov
mov
movb
sbb
shrl
popa
nop
hlt
xor
xchg
insl
je
or
daa
enter
mov
sbb
out
dec
mov
fisubl
sub
and
fdivl
rcll
insl
sbb
lds
ljmp
cmc
and
mov
and
cmpsl
jno
ljmp
adc
adc
cmpsb
orb
js
mov
fisubrl
insb
sbb
loopne,pn
adc
jb
jnp
insl
sar
sub
inc
adc
sbb
icebp
fildll
out
out
pop
fstp
pop
bound
xchg
adc
jecxz
jmp
mov
ds
xor
cmpsb
jp
loope
and
ret
mov
insl
jnp
dec
fidivrl
mov
mov
sbb
add
pop
jo
xchg
fs
gs
push
stc
movsb
push
mov
call
out
push
repnz
cmpsb
pushf
out
insb
test
mov
sub
out
dec
punpckhwd
sub
sbb
jb
jle
mov
rorl
sbb
cmp
mov
aad
fsts
ss
mov
push
ret
imul
sub
xchg
mov
lea
cmp
jge
add
call
push
pop
lds
mov
aaa
rclb
cmp
mov
ljmp
fcoms
call
or
push
es
loopne
ljmp
dec
xlat
cltd
ds
movsl
push
fistps
fsubr
dec
addr16
loopne
mov
out
aaa
dec
sbb
pusha
xchg
setle
xor
inc
sbb
and
fs
testl
xchg
push
fwait
shl
imul
jno
jg
push
xlat
das
mov
xor
jge
ja
pop
shlb
imul
add
push
push
jo
sub
enter
adc
dec
jae
mov
dec
rcrb
imul
dec
lods
mov
lock
jb
adc
call
pop
data16
dec
outsl
sub
pop
roll
inc
mov
aad
mov
push
pop
loop
push
jno
ss
shrl
xor
jno
mov
scas
movsb
imul
xchg
rcr
icebp
xchg
fadds
mov
xlat
rcll
sub
pop
or
es
testl
xchg
ss
lcall
mov
mov
sarl
pop
jl
lock
in
push
sub
cwtl
inc
adc
ljmp
out
pop
dec
daa
mov
xor
xchg
dec
loopne
ret
scas
push
mov
arpl
push
orb
loopne
loop
xlat
cli
push
dec
cwtl
aad
fildll
cwtl
pop
sub
mov
int
mov
jno
add
sbb
dec
adc
stos
lret
scas
hlt
jmp
mov
mov
cmp
subl
xor
out
jb
int
xor
leave
out
aaa
mov
mov
testb
int
divl
sub
add
xor
subl
jge
stc
rcrb
lea
orl
mov
ja
sbb
jns
or
fbld
movsl
ss
cld
insl
dec
lock
xor
cmpsl
xor
aad
lret
ss
or
scas
xchg
jae
cmp
ljmp
sbb
aaa
jo
dec
add
jns
pusha
gs
fisubs
mov
pusha
pusha
sahf
xchg
add
mov
push
ss
pop
xchg
sbb
ja
dec
inc
cld
cmpb
and
cmp
sbb
out
pop
sbb
jbe
call
mov
lahf
add
sub
pop
sahf
cmp
ds
testl
mov
orb
xchg
dec
insl
rcrb
fwait
insl
lea
mov
xchg
out
inc
rcll
testb
mov
inc
inc
pop
xor
inc
std
or
jne
mov
cmp
mov
fistpll
sub
cmp
sub
mov
push
and
adc
xlat
pop
movsl
xor
loope
dec
jnp
dec
jo
mov
jge
push
xchg
in
fwait
push
mov
into
cwtl
imul
pop
movl
pop
sbb
pop
jb
cmp
and
adc
js,pt
jne
lcall
in
test
aaa
xchg
push
mov
inc
cltd
mov
jg
mov
sub
andl
clc
test
sbb
pop
mov
jge
push
fdivp
inc
les
xor
bound
xchg
jns
jecxz
gs
jmp
andl
xchg
or
sub
cmpb
gs
jp
imul
mov
xor
add
scas
and
stos
xor
sti
fstl
sti
xchg
fcoms
mov
mov
lret
sbb
and
aaa
mov
jecxz
std
mov
out
repnz
cmp
leave
loope
divb
fstpt
inc
std
loope
bound
repnz
cltd
mov
mov
stc
xchg
lret
stc
ret
adc
pop
push
add
sarl
enter
repnz
pop
sub
mov
scas
and
movsb
push
ja
pop
test
push
daa
inc
fstpl
sub
iret
lock
push
scas
xor
push
ljmp
cmp
add
imulb
fs
pop
xor
sbb
lret
in
icebp
js
or
cmp
or
dec
sti
movl
xor
imul
cmc
jmp
stos
push
inc
cld
push
mov
xbegin
loopne
and
jns
dec
cmp
xlat
adc
inc
pop
xor
cmp
mov
mov
jns
aad
call
push
mov
cmpb
mov
in
jecxz
sahf
bound
xor
ror
mov
add
int3
mov
push
fdivrl
adc
xchg
xchg
lea
add
and
les
aaa
cmpl
inc
xor
fstpl
xchg
mov
and
clflush
roll
pop
sub
mov
xor
mov
test
loop
cmp
jne
push
sti
fistl
xor
and
outsb
ljmp
and
push
cmpsb
ja
mov
xorl
cmpsl
xor
sub
mov
ret
js
lods
adc
out
mov
andps
add
pop
insl
das
pop
sbb
shrl
test
lcall
and
xchg
or
mov
loop
insl
js
pop
adc
insb
pop
and
mov
add
sbb
push
xor
add
in
cmpsl
je
sbb
jno
lds
xor
popf
jmp
pushf
popa
lcall
inc
dec
mov
sbb
ljmp
xor
sahf
ljmp
sbb
loope
pop
jb
test
movsb
dec
sub
push
adc
pop
fs
movsl
lds
push
fadds
orb
inc
adc
test
je
cmp
mov
ljmp
mov
mov
and
push
loop
pop
mov
popa
outsl
adc
add
push
movsl
sub
decl
lret
adc
dec
test
je
ret
sub
rolb
cmp
call
jns
mov
sahf
dec
and
mov
insb
insb
scas
jge
rorb
xor
xchg
or
xor
add
loop
fnstsw
pop
outsb
mov
nop
jne
repz
xor
idivb
outsl
das
es
shl
or
add
imul
lock
dec
xlat
loop
sbb
arpl
shlb
jg
cmpsl
out
daa
cmpsl
lea
xlat
jp
jmp
fisubrl
into
xchg
xlat
mov
xor
popf
dec
and
dec
inc
sub
jbe
insb
cmp
je
xchg
inc
dec
push
imul
scas
mov
scas
leave
int3
sub
adc
adc
sahf
sub
cmp
repnz
xor
rcr
repnz
cmpsl
out
mov
je
incl
pop
mov
lods
xchg
push
shrl
sub
popa
repnz
inc
xlat
fcmovu
mov
mov
test
test
cld
pop
das
or
and
pop
insb
or
in
adc
int
into
or
add
mov
pusha
loope
xchg
sbb
xchg
repnz
jle
cmp
pop
imul
bnd
add
mov
jbe
mov
sub
outsl
pop
sbbb
sbb
adc
pop
in
dec
and
sub
push
cmp
xchg
or
jbe
imul
lret
sbb
mov
sub
jnp
in
jmp
sahf
shrl
add
or
fidivrl
jo
mov
inc
jno
jmp
mov
inc
inc
mov
out
xchg
inc
xchg
push
cmp
cwtl
cmp
cmpsb
jl
fistpl
ljmp
xchg
addr16
add
dec
daa
andb
jbe
dec
cmp
or
cmp
jg
es
cmpsl
jne
popf
in
loop
xor
lret
mov
test
imul
lock
dec
cmpsl
lods
or
pop
cmp
push
lds
cmpsl
pop
das
cmp
xchg
push
adc
inc
cmp
sbb
xchg
mov
mov
inc
jns
shl
inc
jp
or
loope
add
addr16
lcall
cwtl
push
scas
hlt
lds
lahf
mov
mov
jnp
xchg
mov
fbstp
mov
hlt
notl
mov
aaa
aad
push
cld
rorb
sub
add
insl
shl
je
mov
aaa
cmp
cmp
xor
test
out
into
xchg
dec
enter
outsl
out
cmp
mov
xchg
push
jne
repnz
xchg
enter
jns
adc
mov
outsl
ret
outsl
jae
mov
jmp
subps
sub
xor
jp
pop
add
mov
ljmp
xchg
and
or
mov
mov
outsb
ljmp
js
xor
addr16
sub
cmpsl
xchg
dec
mov
movsl
sbb
jmp
loopne
lcall
fistpl
push
in
add
pop
shll
xor
lret
sti
mov
mov
inc
pop
ljmp
or
movsl
stc
rorb
push
mov
test
xchg
loopne
push
cltd
fstpl
sub
popf
addb
pop
int
push
inc
lret
add
lods
fisubs
pop
push
or
lret
jns
or
mov
shll
xor
mov
cwtl
add
dec
add
adc
cli
fs
stc
aaa
dec
idivl
mov
and
repz
xchg
shlb
ficomps
addb
cmp
ja
call
and
inc
push
pop
test
call
daa
mov
out
pop
cmpsl
in
rcrb
in
lcall
in
sbb
dec
jg
daa
sbb
or
or
push
xor
lahf
xchg
lret
fdiv
mov
inc
jge
loope
cli
rcrb
int
and
rcl
stc
pop
sub
stc
xchg
lret
sbb
stos
sti
and
pop
push
dec
imul
cltd
xor
icebp
add
fstps
mov
test
mov
leave
je
xchg
or
push
mov
xchg
frstor
mov
fldcw
test
gs
sub
pop
push
rcrb
fmuls
testb
sub
scas
ffreep
js
loopne
cmp
stc
scas
jle
xchg
inc
jg
cmovb
ficoms
js
aam
loopne
add
pop
push
stos
jbe
ss
and
repnz
stos
fisubl
xor
pop
xchg
xchg
dec
pop
add
mov
popf
scas
xor
insl
add
out
ds
mov
push
push
or
mov
and
jecxz
push
pop
dec
roll
ss
fwait
push
pop
nop
dec
stos
int3
xor
mov
roll
mov
fadd
sbb
stos
lcall
adc
pop
ror
mov
or
ja
push
adc
loope
sub
inc
ljmpw
jns
lds
jns
inc
cs
insl
and
insb
mov
mov
loop
repnz
pop
scas
outsb
sub
inc
subl
into
push
test
ret
and
sti
int
lods
and
movsb
lods
pop
jo
scas
div
mov
sbb
xor
movsb
xchg
test
out
xchg
xchg
js
aad
or
mov
add
dec
movsl
push
pop
mov
jle
inc
repnz
mov
add
mov
pop
rol
cmp
xchg
and
or
in
mov
rcr
ljmp
or
in
cvtpi2ps
pop
dec
fcmovbe
sahf
push
push
inc
mov
les
jno
aam
add
lret
and
icebp
insb
lea
cmp
or
punpcklwd
cmp
mov
pop
mov
cli
imul
loopne
or
in
xor
out
mov
inc
push
int3
mov
dec
jns
pop
clc
loope
fnstcw
test
xor
mov
adc
outsb
add
enter
cld
push
add
add
or
inc
icebp
rcrb
dec
dec
in
pusha
jp
mov
loop
in
xor
int3
repnz
ljmp
hlt
popa
jp
faddl
mov
mov
jb
std
rcrl
and
dec
fistps
int
popa
lea
mov
inc
fs
add
aam
inc
sub
push
pop
pop
or
fstps
aam
testb
icebp
adc
data16
adc
fimuls
fs
aam
xor
scas
sub
push
adc
pop
aas
jns
dec
push
gs
das
push
dec
fisubrl
in
adc
mov
inc
push
cli
pushf
mov
pop
nop
mov
call
fdiv
stc
test
out
sarl
out
ds
movsb
pusha
jnp
aam
out
movsb
xchg
adc
mov
or
add
das
enter
lea
jl
test
dec
and
xchg
adc
inc
push
push
sbb
fildll
iret
cli
mov
inc
mov
js
xlat
pop
ljmp
cld
xchg
push
mov
sbbb
add
mov
add
adc
cmp
xchg
leave
fs
and
iret
push
mov
movsl
out
scas
mov
mov
and
mov
ja
sbb
adc
mov
addr16
sbb
mov
cltd
dec
int3
fsub
dec
dec
fsub
les
sub
insb
aad
jo
dec
push
cmpsb
cmc
rclb
xchg
jp
cmc
inc
scas
sub
dec
dec
cmp
dec
jge
mov
loope
pop
add
push
cmc
add
out
xor
mov
add
xor
push
pop
add
inc
rcrl
jns
push
sbb
jg
cmp
mov
in
nop
hlt
out
stos
xorl
or
fimuls
mov
mov
adc
hlt
das
and
xor
jecxz
rolb
scas
jae
push
add
jns
nop
jg
popa
aaa
and
jnp
jmp
mov
and
movsl
add
in
dec
mov
add
cwtl
lock
js
cmpsl
push
push
sarl
push
movsl
cmp
call
xchg
repnz
push
out
int3
cltd
push
mov
fmul
jg
mov
shlb
movsl
dec
pop
fdivl
and
int
lds
nop
mov
pusha
sbb
les
outsb
es
bound
call
pop
lcall
adcl
arpl
ljmp
xchg
jle
lret
movsl
fmull
in
cmpsl
or
or
popf
adc
cmpsb
jne
inc
cmp
je
push
push
cmp
sti
jno
rorb
push
data16
es
cld
jecxz
jb
lock
sbb
out
pop
out
inc
push
xchg
fidivs
or
psubb
cltd
xchg
jmp
daa
pop
pop
loope
int
add
pop
sbb
mov
cwtl
loopne
xlat
std
push
mov
add
inc
push
sbb
popf
adc
lcall
pop
inc
jae
jp
xchg
xchg
insb
add
mov
inc
mov
fwait
mov
loopne
jge
mov
pop
test
test
dec
or
cld
lret
hlt
mov
scas
mov
xor
loopne
mov
sbb
adc
add
and
inc
jns
adc
jl
xchg
add
outsl
inc
mov
pusha
adc
clc
pop
or
adc
mov
pop
lcall
xchg
js
mov
cltd
gs
loop
cmp
insb
push
mov
dec
lret
add
sbb
add
pop
lret
mov
das
pushf
sarb
in
jp
xchg
ja
inc
mov
mov
aam
aad
pop
mov
dec
scas
mov
popa
cmp
cld
dec
mov
push
lods
pop
jmp
lods
xchg
mov
aad
inc
stc
xor
lahf
adcb
out
mov
xor
sub
movsl
jne
icebp
fisubs
aaa
das
loope
sbb
sub
dec
dec
cmp
adc
ja
les
ret
outsl
sti
das
daa
jne
ja
push
aam
aad
and
lret
sub
lock
ss
in
mov
call
ljmp
aad
js
and
mov
push
push
and
mov
inc
in
xchg
cwtl
sbb
sub
xchg
push
sub
mov
push
stc
pop
fstps
xorb
les
cmc
ret
inc
loopne
jp
int3
imul
jg
pusha
cld
push
or
xorb
repnz
mov
jge
shll
out
or
add
or
mov
loopne
mov
loop
mov
test
mov
pop
or
sub
jnp
xchg
cmp
push
xor
push
ds
inc
xor
mov
cltd
ds
push
sbb
cld
lahf
ret
popf
or
pop
lahf
and
imul
scas
or
stc
or
cld
rolb
sbb
int
das
idivl
cli
add
loope
jge
jle
jmp
jnp
mov
jb
push
jmp
shr
push
les
cmp
loop
push
div
adc
sbb
in
pop
sbb
test
mov
cmp
into
test
insb
xor
int
nop
dec
jp
xchg
sbb
cmp
cs
jp
stos
inc
mov
xchg
mov
cmp
inc
test
lods
mov
jmp
cltd
ja
imul
inc
daa
jno
and
lret
lods
xor
mov
out
push
test
pop
icebp
fistl
int3
jmp
mov
int
sub
mov
ljmp
mov
xchg
dec
ljmp
dec
push
sub
inc
inc
ficomps
mov
sub
inc
xchg
pop
out
inc
xchg
adcl
popa
xor
pop
fcompl
mov
xor
xchg
ljmp
repz
push
loopne
pop
enter
test
pushf
js
add
or
xor
icebp
xchg
div
out
or
sub
sub
loopne
cmpsl
push
cmp
inc
jae
mov
pop
outsl
sbb
adcb
and
xor
push
cmc
vdivpd
leave
cld
jl
in
inc
mov
mov
xchg
inc
sbb
xchg
sbb
push
sbb
sub
movsb
adc
aad
xchg
cmpsl
mov
in
or
sub
cmp
bound
jo
cmpsb
mov
je
push
stos
xor
push
inc
sbb
outsb
mov
repnz
lret
pop
pushl
ja
mov
cmp
jmp
mov
sbb
and
cmpsb
adc
scas
scas
xchg
cmp
ss
dec
lahf
xor
pop
add
fst
add
push
popf
dec
dec
jo
inc
cmc
std
dec
dec
sub
bound
xchg
sbb
jg
xlat
test
sbb
sbbb
xchg
adc
push
divl
adc
ret
mov
jae
fists
jle
mov
fsubs
add
adc
push
mov
fs
movsl
sbb
inc
test
push
shlb
in
daa
adc
ss
inc
fs
shl
aas
das
iret
std
add
jno
lea
je
mov
push
pop
or
inc
scas
add
dec
push
loope
mov
sbb
push
filds
lea
pop
push
dec
inc
dec
es
or
aam
push
test
rcrl
lret
lods
test
jmp
or
and
lret
aaa
loope,pn
mov
cli
jl
pop
adc
aaa
cbtw
add
push
pop
test
mov
negb
jnp
fildll
lock
in
mov
xchg
divb
enter
mov
mov
push
xchg
outsl
insb
frstor
mov
mov
test
pop
pop
scas
mov
cmp
or
aaa
xor
jbe
shr
fadds
jecxz
imul
push
cli
js
xchg
ds
mov
mov
lcall
lods
dec
and
stos
mov
insb
arpl
mov
mov
orb
loope
mov
add
push
sub
dec
cmc
lea
xchg
add
xorb
mov
mov
push
das
daa
lcall
arpl
sbb
adc
imul
imul
inc
dec
int
adc
js
sbb
xorb
pop
mov
and
xlat
or
jo
xchg
adcl
icebp
cwtl
cmp
xchg
dec
xchg
jnp
stc
iret
adc
add
mov
pop
pop
xchg
repnz
add
mov
movsl
popf
jne
lahf
sub
leave
lea
xlat
lcall
add
dec
or
adc
imul
test
cltd
in
pop
mov
add
lea
cmpsl
ss
xchg
push
add
sbb
aas
shll
movsl
sub
sub
add
outsb
lock
decb
cmpsb
push
xor
scas
ljmp
mov
jns
pop
or
cld
ljmp
mov
and
stc
sbb
sarl
mov
push
xchg
jns
sahf
enter
movb
xor
xchg
stc
daa
into
rol
mov
inc
mov
or
xor
rorl
cmp
inc
outsl
std
in
add
xor
mov
xchg
xchg
insl
stos
std
ljmp
sub
jp
aaa
cmp
cmp
adc
cmp
or
clc
fldl
pop
adc
add
cli
adc
cwtl
adc
lahf
out
cmp
inc
je
or
inc
into
iret
into
inc
fadds
mov
inc
sti
dec
cmp
mov
cmp
stos
fwait
icebp
pusha
push
fdivs
aaa
aam
xor
mov
mov
sbb
or
imul
or
sbb
loope
jnp
xor
push
ret
movb
jmp
push
les
inc
sbb
addr16
fwait
xchg
std
incl
add
ds
int3
repnz
mov
out
iret
push
or
jge
sbb
fimull
pusha
out
xchg
xlat
cmpsl
or
mov
gs
jae
push
lahf
push
in
sarl
pusha
cli
mov
loop
pop
out
xlat
ss
lds
mov
es
mov
addb
bndstx
xchg
jp
cmp
cmp
aam
fs
movsl
or
mov
adc
jbe
movsb
push
xchg
scas
jge
or
pop
cmc
lret
addr16
cmc
push
push
mov
xchg
mov
lret
cmpsb
xor
repz
adc
cmp
push
scas
cmp
or
sbb
or
dec
enter
or
sbb
sbb
arpl
xchg
or
fs
shll
movswl
sub
adc
aaa
pop
int
subl
sub
cmpl
pop
scas
mov
push
cmpl
arpl
mov
xor
popf
ljmp
lods
in
dec
imulb
or
sbb
pop
fisubl
mov
loopne
xchg
loope
iret
pop
pop
inc
mov
repnz
movsl
inc
test
xor
movsl
test
outsb
das
cwtl
shl
jg
fs
fwait
nop
cli
mov
divb
fdiv
jno
pusha
test
mov
adc
jecxz
adc
mov
in
xor
pop
jb
aas
data16
xor
inc
mov
sbb
mov
pop
shlb
cltd
cmp
out
xor
sub
pop
mov
in
and
sarb
test
inc
out
mulb
loopne
sub
es
jl
sub
jb
mov
push
and
push
fsubrl
scas
test
mov
push
inc
push
jo
mov
push
push
loopne
scas
mov
stc
push
mull
push
jbe
pop
jl
jo
pop
cmpsl
shlb
loopne
imul
and
adc
js
sahf
xor
push
repz
std
sbb
shll
filds
cli
lock
je
cmp
lods
push
xchg
pop
pop
cmpsl
gs
shr
dec
sub
push
or
arpl
jbe
sbb
mov
mov
jmp
fidivs
into
push
imul
add
bound
dec
push
lret
dec
cmp
sub
cmp
mov
test
aad
inc
push
or
push
loopne
out
inc
adc
mov
cmp
lods
imul
and
rolb
stc
movsb
mov
xor
roll
movsl
sub
sbb
movsl
cmp
inc
ljmp
sub
repz
ljmp
das
pusha
push
cwtl
in
jle
mov
mov
push
mov
pop
cmc
sbb
gs
sbb
ss
mov
sahf
add
mov
mov
pop
xchg
inc
fucom
nop
push
inc
daa
xchg
inc
cs
sbb
inc
and
sbb
negl
add
inc
pop
andb
mov
pop
xchg
fisubrs
je
adc
fnstsw
and
and
pushf
pop
es
stos
stos
add
stos
fcomp
rorl
movsl
dec
lea
es
sbb
fs
xchg
jle
mov
pop
xor
fstps
movsb
pop
mov
fimull
sbb
push
mov
jo
lcall
ja
sbb
scas
mov
dec
jo
rorl
pop
mov
inc
out
rcrb
subps
mov
pop
xchg
adc
mov
or
outsb
test
sub
dec
dec
mov
in
pop
pop
fisubrl
inc
into
idivb
sub
cmpsl
mov
aaa
in
fildll
lods
fsubrs
adc
inc
or
xlat
mov
cmpl
mov
fisubrs
cli
or
sub
pop
pop
stc
mov
jp
ja
mov
imul
addb
cmp
jo
ljmp
sbb
adc
sub
ljmp
jl
and
arpl
xlat
cmc
mov
pop
loopne
dec
add
jbe
repnz
mov
int
cwtl
psubsw
ja
push
and
mov
lock
lods
lock
frstor
pop
pop
sarl
sti
mov
and
fwait
addl
jmp
jb
jle
std
lret
push
in
cmp
cltd
loope
adc
call
negb
lods
stos
lahf
add
mov
mov
pop
sub
and
jp
pop
mov
clc
push
stc
sbb
add
rclb
rolb
xlat
iret
cltd
and
pop
cmp
dec
shrl
lret
mov
or
mov
jecxz
lock
xchg
add
in
fwait
adc
sub
mov
mov
cli
stos
loop
mov
stos
repnz
mov
clc
sarl
aad
adc
cli
xchg
shlb
dec
and
out
stos
cmc
push
pop
xlat
movsl
add
mov
hlt
lea
pop
and
sti
std
or
jg
fdivr
dec
sub
sbb
and
push
xchg
dec
sbb
cmpsb
pusha
jnp
sar
repnz
dec
inc
xchg
dec
jle
stc
imul
xor
ret
xor
sub
pop
xchg
cs
push
mov
fucomp
lcall
aaa
mov
mov
lods
pop
sub
aad
or
mov
ss
push
jecxz
sbb
das
adc
jo
cmpsl
jbe
por
push
jbe
mov
test
inc
outsl
jbe
rcr
int3
push
das
popa
pop
ljmp
cmp
mov
mov
sbb
pop
popa
xor
jo
mov
fistl
or
loop
sub
jecxz
lret
xchg
fs
jl
or
xor
pop
sub
ret
jmp
inc
dec
in
test
daa
fidivrs
dec
pop
das
in
div
out
sub
mov
adc
jo
lret
sub
or
dec
repz
insb
and
out
mov
push
aas
es
fcoml
dec
sub
jecxz
mov
dec
ficoml
out
ljmp
mov
dec
dec
cmp
or
cmc
lds
pop
mov
fisubrs
cltd
imul
hlt
lods
repnz
sub
shrl
and
lea
loopne
cld
push
or
mov
adc
mov
mov
sub
mov
jnp
test
dec
scas
lea
fwait
pop
adc
sti
dec
add
es
jmp
inc
dec
icebp
adc
cmpsl
or
cmp
sbb
mov
add
push
mov
ficomps
mov
xor
scas
xor
or
pop
pop
add
outsb
push
adc
push
dec
xchg
je
pop
and
and
jmp
loop
or
sbb
insl
fstp
pop
xchg
stos
xchg
fwait
mov
test
loop
sar
arpl
xchg
mov
imul
ss
mov
or
shll
xor
pop
scas
push
jl
hlt
add
nop
sub
adc
mov
cmpsb
push
xchg
add
xlat
inc
xchg
xchg
or
loop
adc
std
sub
and
xor
xchg
daa
int3
enter
dec
das
push
shlb
test
lea
and
mov
dec
mov
xor
cmp
dec
lret
dec
movsl
cmpsb
repz
pop
jnp
jl
movsl
cli
and
movsl
insb
lock
adc
pop
and
fdivrs
xchg
add
add
sti
push
test
es
or
test
cmpl
mov
scas
inc
stos
stos
scas
mov
inc
mov
push
push
adc
jp
jmp
icebp
dec
into
sahf
cmp
cld
mov
scas
pop
and
fsubr
push
mov
sbb
cli
aam
not
jle
mov
add
aas
leave
mov
movups
pop
fnstenv
outsl
cmp
fcmovnbe
jbe
mov
notl
jecxz
imul
scas
and
mov
mov
in
mov
push
mov
cld
mov
lret
sbb
xor
popf
stos
ficoms
add
ja
mov
decl
inc
dec
jmp
popf
jbe
mov
setp
movsw
jmp
mov
jae
aam
mov
sbb
out
sbb
sarb
mov
cmp
ficoml
popa
adc
xchg
push
nop
jmp
insl
ret
dec
in
xor
aas
sbb
pop
in
popf
cmp
sub
mov
repnz
pop
insb
inc
inc
or
cmp
insl
test
push
fstpl
out
repnz
repz
adc
push
lahf
test
jp
popa
mov
mov
inc
push
mov
or
pop
pop
pop
mov
cwtl
cmp
in
pusha
push
inc
adc
cmpsb
arpl
shld
cmpsb
pop
pusha
popa
mov
sbb
dec
cmpsl
lock
loope
insl
imul
sbb
cmpsl
push
pop
lods
inc
pop
cs
push
jns
sub
push
sub
cmp
jne
mov
das
hlt
mov
xor
ret
mov
clc
rol
int3
in
push
inc
jecxz
mov
pop
mov
int
dec
leave
test
cmp
xorl
outsl
adc
sar
cli
data16
or
std
ja
xor
inc
push
sarb
insl
rcl
xor
out
imul
aad
aas
pop
popa
pop
mov
js
das
sub
inc
loop
in
cld
sbb
leave
cld
cmp
pop
rol
mov
jno
cmp
stc
push
adc
inc
ljmp
push
jle
cli
push
fbstp
sub
test
dec
daa
mov
sahf
inc
add
add
cmpsl
scas
popf
pop
xor
movsl
push
mov
js
rcl
sbb
inc
inc
mov
pop
popa
xchg
lock
xor
daa
xor
xchg
adc
sub
push
pop
dec
test
push
xchg
add
push
adc
imulb
subl
pop
cltd
ret
ljmp
lret
adc
mov
jecxz
push
mov
shrb
shll
xchg
fldt
cmp
sub
fisubs
push
jnp
or
ret
clc
into
fwait
mov
xor
lret
push
mov
xchg
inc
push
pop
insb
pop
ds
or
push
insl
inc
aas
dec
or
adc
sub
lcall
adc
scas
inc
and
mov
ret
xor
sub
ljmp
lock
andb
jne
ret
pop
xorl
dec
gs
mov
and
popf
mov
gs
les
dec
shufps
dec
mov
mov
push
fcmove
add
inc
pop
cs
loop
jg
in
leave
push
lret
addr16
lods
daa
aam
or
inc
dec
fwait
xchg
andb
adc
lret
repnz
repz
mov
sub
jns
push
sub
jle
jo
movsb
test
notl
pop
sub
mov
or
add
xchg
fwait
cs
jmp
push
sbb
sub
lea
inc
or
mov
stc
push
inc
fstl
xlat
fildl
fcomip
hlt
lock
cmc
push
in
xor
out
mov
mov
std
push
inc
mov
pop
dec
sub
pushf
pop
into
aam
mov
imul
stos
adc
loopne
cmp
test
pop
imul
or
jmp
sarl
in
fimuls
jno
mov
inc
mov
and
jg
mov
inc
int3
out
int
add
pop
sbb
outsb
cmc
adc
pushf
or
rol
or
out
cwtl
add
in
cli
add
les
or
jge
sub
mov
in
jmp
push
add
push
jns
mov
or
jle
jecxz
in
push
push
mov
xchg
in
dec
icebp
mov
push
icebp
scas
lock
stos
ret
mov
mov
cs
adc
push
push
imul
in
es
out
xchg
arpl
inc
inc
cmp
iret
hlt
mov
jmp
pop
xor
mov
inc
mov
jg
es
mov
push
jno
into
cmpsl
into
inc
data16
jns
jp
jle
shll
and
movsl
push
mov
cmp
adc
mov
add
fiaddl
inc
inc
cli
jp
push
inc
xchg
push
fwait
test
fildl
mov
ja
scas
push
orl
lods
and
je
mov
addl
or
lock
dec
ljmp
imul
cwtl
jns
mov
out
fldt
inc
dec
stc
xchg
mov
nop
adc
pop
lea
push
jmp
jp
adc
aas
out
pusha
xlat
add
or
or
outsl
ds
lds
stc
movsb
out
mov
sbb
in
or
inc
mov
sub
push
mov
xchg
pop
loopne
loope
sbb
sbb
pop
int
sbb
or
or
repnz
mov
sub
lds
mov
shrl
xchg
mov
std
sbb
mov
ljmp
mov
xchg
gs
je
add
pop
icebp
std
sbb
fnstcw
shlb
lods
push
jb
or
add
inc
pop
out
aas
pop
jns
js
push
lods
dec
add
ret
mov
hlt
fmul
fistl
or
jle
hlt
clc
fstl
imul
push
arpl
sbb
cmp
xchg
mov
jg
mov
sub
xchg
out
iret
xchg
lahf
je
xor
repz
jmp
cmp
jp
cld
adc
cmove
dec
hlt
pop
movsl
inc
daa
into
js
test
sub
add
pop
pop
lods
fcoml
pop
adcl
out
xor
dec
bound
dec
fcoms
shll
xchg
xchg
sbb
stos
lcall
jg
lcall
mov
push
and
aaa
dec
fiadds
dec
fucomip
mov
push
call
pcmpeqb
push
mov
orl
push
insl
in
gs
loop
xchg
je
sbb
jl
les
adc
das
dec
sbb
mov
pop
adc
cmp
xchg
mov
std
add
push
pop
sar
jae
pop
lret
pop
xor
addl
loopne
cmp
mov
aaa
test
es
scas
lcall
add
push
pop
pop
test
inc
push
test
mov
repz
cmp
jp
mov
movsb
pop
jecxz
xchg
fdivl
sbb
loop
insl
sub
cmp
pusha
pop
mov
insl
jbe
sbb
push
loopne
adc
shrl
xchg
test
outsb
lds
or
leave
pop
into
mov
sbb
xor
pop
inc
pop
mov
or
in
inc
mov
ficompl
repnz
sub
icebp
in
or
decl
or
aad
ret
and
jge,pt
push
jno
stos
cmpsb
xchg
or
cs
rorb
lret
push
jne
push
sub
clc
dec
lret
ds
sbb
leave
mov
in
nop
pop
sbb
lfs
adc
and
sbb
jecxz
push
inc
inc
cmp
dec
stos
mov
adc
pusha
adcb
adc
mov
rorl
shll
outsl
adc
sub
push
push
dec
or
mov
mov
cmc
adc
es
loopne
cli
lret
lret
lret
repz
mov
add
jmp
sub
xor
mov
shlb
push
arpl
xor
insl
data16
lcall
or
mov
mov
dec
xor
pop
jbe
jmp
lret
fildl
sub
lods
adc
out
sbb
jnp
inc
mov
xor
mov
lea
jge
ret
int
lret
sub
cmp
jg
dec
stos
andl
jae
jecxz
mov
movsl
or
inc
push
jg
cwtl
push
gs
in
in
mov
sub
inc
xor
jne
stos
and
push
xor
sbb
loope
push
xchg
add
js
fmull
push
sub
arpl
fdivr
mov
inc
cmc
dec
jecxz
ja
jo
dec
and
imulb
lret
adc
or
imul
pop
pop
xor
push
mov
imul
fdivl
lds
xlat
xchg
push
roll
mov
pop
push
pop
ret
jno
push
mov
mov
mov
arpl
pop
popf
jne
stos
sbb
mov
and
gs
xchg
mov
mov
lock
cli
inc
pop
js
xchg
sbb
dec
popa
sub
jl
cmc
sub
add
fiadds
cli
jbe
mov
and
xchg
pop
cld
lods
js
cmp
dec
lret
ret
pop
dec
mov
out
mov
mov
call
sub
push
in
fwait
jl
aad
ss
hlt
mov
nop
testl
in
aam
xor
jno
and
inc
lock
mov
ljmp
mov
mov
ffree
lcall
fs
clc
lret
insl
loope
sbb
cli
daa
pusha
xor
push
lods
arpl
inc
jne
and
and
orl
xor
cmp
push
push
cmpsl
sti
aaa
jg
and
jb
jmp
mov
sub
int3
test
xlat
adc
jno
sti
int
icebp
scas
mov
mov
sub
mov
dec
in
mov
out
cmpsb
add
mov
lret
add
fisttpl
xor
sbb
mov
inc
push
daa
lret
or
jp
stos
bound
testb
pop
cmp
push
and
inc
int3
insb
dec
or
jmp
mov
loopne
dec
repnz
rorb
dec
mov
sbb
daa
lds
push
hlt
jmp
mov
ffreep
clc
enter
jo
xchg
in
bound
sbb
pop
ds
negb
popf
sbb
lret
pop
aaa
push
sbb
mov
cmpsl
lods
inc
or
loop
dec
test
dec
sbb
loopne
sahf
shrb
or
jns
jp
inc
clc
in
sbbb
out
int
and
cmp
icebp
cltd
jg
jecxz
scas
sbb
test
mov
cmp
subb
mov
fsubp
adc
xchg
xor
dec
lcall
mov
push
repz
notl
sbb
pop
arpl
add
jg
out
sar
pusha
inc
jecxz,pn
out
hlt
dec
insb
jns
cwtl
sbb
ja
pop
out
fiaddl
mov
cmp
xor
out
dec
xchg
pop
xchg
sub
ret
enter
mov
xlat
js
jge
push
dec
add
test
repnz
inc
cltd
leave
sub
jg
pop
fs
movsb
sbb
in
es
mov
lret
adc
out
mov
data16
sbb
push
sarb
in
inc
sbb
imul
mov
sbb
cmp
ljmp
in
nop
loop
cli
test
mov
fnsave
xor
xchg
mov
bound
mov
out
lret
cs
mov
jp
cmp
adc
icebp
push
dec
xor
adc
cwtl
dec
dec
cs
xchg
iret
pop
test
dec
jb
in
xchg
out
ss
push
addb
cwtl
xor
mov
in
insb
xchg
js
cmp
in
in
stos
fst
mov
stos
push
divl
fs
movl
push
lcall
mov
inc
mov
pusha
fimuls
or
loopw
jb
xor
addr16
mov
pushf
adc
push
mov
outsb
jmp
and
and
mov
xor
push
hlt
adc
shl
sbb
int3
es
or
cmp
testl
repnz
ja
pop
cmc
inc
cmp
and
repnz
xchg
adc
dec
lret
adc
movsl
xchg
and
add
test
in
notl
xchg
stos
push
add
outsl
cmpsl
cld
es
fisttps
js
dec
shl
test
inc
push
jmp
hlt
or
ss
ja
mov
xchg
lahf
fmull
in
mov
imul
adc
xor
enter
jl
mov
dec
sub
enter
out
arpl
lcall
mov
dec
in
les
aaa
push
popf
fnstsw
sub
push
sub
sarb
mov
in
push
push
ret
aad
popa
or
cmpsb
ja
xchg
mov
lods
sub
icebp
or
or
xor
fadd
int
xchg
arpl
sarl
and
or
out
add
jae
sahf
adc
fistpll
mov
pusha
jb
divl
mov
fcmovbe
inc
inc
xchg
add
xchg
mov
inc
mov
xor
jnp
push
jns
dec
pusha
pop
jl
call
lds
cli
cld
lock
rorb
push
push
pop
lret
sub
pop
dec
push
cld
push
mov
out
stos
cmp
scas
cmpsb
aam
sbb
int3
or
inc
repnz
cmp
mov
stos
bound
jb
testb
insl
lret
mov
push
push
rcrb
push
test
and
ret
xchg
lea
insb
xor
sahf
loope
cmp
xor
jg
jae
xor
mov
and
and
mov
and
mov
or
or
notb
push
lret
insl
dec
mov
mov
mov
xchg
lahf
int3
or
sbb
repz
dec
mov
in
fs
test
inc
test
popa
ret
add
fcmovnu
push
push
mov
push
out
fstl
cmovp
addr16
mov
mov
push
xchg
ror
mov
xor
sbb
xor
add
mov
cli
fimuls
rcrb
cmc
mov
pop
jb
pop
xchg
and
shll
cmpsl
test
shl
xchg
outsl
gs
inc
dec
testl
mov
shr
and
icebp
lods
repnz
fsts
cmp
mov
fisubrl
push
decl
daa
push
sbb
mov
xor
mov
out
mov
jp
mov
sahf
cmp
pop
cmp
xchg
pop
dec
mov
jecxz
cmpsl
in
push
xchg
cltd
rolb
rolb
shll
stos
enter
sbb
xchg
add
xor
add
lcall
stos
outsb
fldt
repz
aaa
shrl
leave
icebp
sub
sahf
je
adc
jbe
sub
out
jne
cmp
icebp
sbb
out
sahf
mov
xor
mov
aas
push
stos
xchg
and
adc
mov
cmpl
push
lods
dec
sbb
mov
sbb
dec
xor
test
xchg
ja
xchg
add
jle
out
jle
xor
js
sub
nop
sbb
pop
add
jns
and
idiv
add
popa
adc
popa
stc
mov
scas
cmc
data16
ror
pop
dec
jnp
cmpl
mov
es
cmp
ficompl
popf
cmp
enter
add
insl
xchg
loope
inc
popa
enter
lahf
aaa
js
insb
push
nop
adc
pop
inc
lahf
mov
dec
cli
testb
pop
push
lahf
mov
inc
sub
jl
mov
cmp
in
and
fcmovu
push
or
jae
xor
pop
sbb
in
jns
mov
xchg
xchg
addr16
mov
daa
mov
inc
pop
jns
cmp
scas
out
cmpsl
out
pushf
add
icebp
test
dec
adcl
cmp
xor
loop
sbb
add
sbb
or
lret
add
cwtl
pcmpgtw
inc
adc
ret
sbb
mov
or
imul
dec
mov
cmp
sub
and
test
data16
mov
or
pop
add
dec
inc
dec
sub
mov
cmpsb
pop
or
notb
or
push
insl
aad
push
repz
pop
das
sbb
sub
sarl
fistps
cmp
xor
lods
nop
sbb
push
pop
dec
mov
jns
std
and
or
mov
repz
push
or
and
push
mov
sahf
cmpsl
mov
ds
ret
cmp
and
lret
ficoms
cmpsb
mov
aad
mov
mov
sub
mov
inc
pushf
jg
shl
or
jl
inc
mov
adc
subl
test
les
push
adc
lods
rcr
mov
nop
push
mov
aam
push
and
cs
push
pop
mov
je
mul
out
sbb
cmc
hlt
and
sub
xor
xbegin
les
iret
push
xchg
ja
or
or
xchg
leave
xchg
loope
repz
jmp
sbb
in
push
jp
inc
pop
cwtl
stos
test
jno
out
jl
cmp
push
rorb
mov
mov
iret
mov
cmp
xor
imul
bound
xor
dec
scas
inc
scas
pop
xlat
incb
sbb
out
jns
fcmovnu
mov
iret
adc
cltd
popf
loop
mov
outsb
lods
aaa
jp
int3
out
mov
or
push
xchg
icebp
sbb
jne
add
lea
test
sbb
mov
ss
mov
loopne
and
and
dec
pop
fwait
pop
jmp
insb
out
dec
int
out
pop
mov
add
mov
xlat
ljmp
lahf
pop
inc
stc
adc
and
adc
clc
mov
js
push
pop
sbb
mov
lea
mov
rcrb
xor
sub
stos
cmpsl
add
inc
pop
lahf
mov
push
add
xor
in
push
inc
pop
pop
lcall
loop
gs
addb
mov
aas
in
lret
mov
xchg
cmp
jns
sub
cltd
sbb
sarl
pusha
xchg
fstl
push
movsl
inc
into
jge
js
jge
mov
jg
int
push
push
add
mov
es
lods
popw
mov
imul
inc
sbb
sub
cmpsb
inc
add
inc
loopne
push
rorl
or
pusha
push
cmpsl
insb
mov
fisubrs
arpl
cmpsb
jns
fnstsw
call
dec
cmpsb
pop
push
stc
xlat
cmpb
jnp
mov
out
push
dec
dec
les
aaa
mov
rcll
mov
arpl
pop
aaa
xchg
or
xchg
ljmp
xlat
stc
sub
pop
gs
mov
imul
and
pop
cmpsb
dec
icebp
mov
pushf
or
jnp
pushf
fsubs
adc
or
cmp
dec
pop
sub
stc
inc
jmp
ret
mov
adc
cmpsb
movsl
mov
jb
stos
fstps
inc
cmp
inc
test
push
sbb
inc
xorb
jmp
add
mov
cmp
cwtl
adc
pop
adc
subb
das
test
sbb
and
xchg
xchg
fwait
mov
inc
cltd
aam
test
push
sub
push
insb
vphsubbw
iret
orb
and
fsts
pop
sbb
dec
cmp
push
jp
jge
xor
cmp
sub
sbb
inc
mov
lret
movsl
mov
stc
dec
pop
jne
dec
jl
outsb
xor
pop
add
xor
xor
dec
or
push
push
mov
ficoms
fisubs
es
scas
push
jle
add
outsb
mov
xlat
enter
cmp
out
fiaddl
push
je
lahf
inc
orb
sbb
out
ret
imul
loop
test
sub
cwtl
mov
int3
clc
push
jbe
popf
pop
jo
add
mov
lret
and
mov
imul
cli
repz
mov
push
xor
rcll
jne
jae
xchg
insl
testl
popa
xor
pop
jmp
mov
daa
popl
fwait
in
jbe
mov
and
or
fwait
pusha
loop
push
in
cltd
inc
dec
and
fcoms
ljmp
aad
out
cmpsl
mov
and
enter
or
add
testb
push
sub
popa
and
cmpsb
rorb
cmc
inc
pop
adc
ljmp
cmpsl
movsl
lods
mov
aas
push
sub
es
in
dec
scas
dec
mov
lcall
sbb
push
inc
loope
lret
insl
adc
outsb
sbb
mov
out
dec
out
pop
jp
mov
out
mov
leave
push
mov
sub
mov
fwait
cmpb
sub
lods
xchg
pop
jmp
test
aas
cmpb
push
mov
xchg
mov
lret
fidivs
jmp
lods
xchg
jne
movsl
sbb
jo
imul
ds
jnp
xchg
insl
push
xchg
xor
jne
repnz
pop
xchg
lret
dec
xor
pop
jne
loope
test
push
xor
jbe
or
inc
gs
insb
int
fs
push
loope
fistpl
push
popa
jle
inc
jp
pop
ret
iret
or
bnd
cwtl
inc
pop
test
dec
jns
pop
inc
or
xchg
sub
insl
jae
jge
mov
xchg
or
cwtl
sub
out
fcom
or
xchg
mov
aas
inc
ret
add
push
ret
xlat
insb
mov
and
pushf
cltd
divb
or
jb
xor
cld
lds
pop
stc
loopne
sbbl
int3
nop
xchg
lret
in
xchg
rolb
jbe
cltd
or
push
into
adc
jecxz
cmpsl
mov
outsb
xchg
shl
and
lods
iret
push
mov
popf
cmp
push
ss
prefetch
or
mov
shr
aaa
iret
push
or
pop
push
sahf
push
imul
sbb
aad
jg
jg
cmpsl
loop
or
mov
jp
out
jbe
lock
js
sbb
rcl
inc
dec
jbe
jb
incb
in
pop
mov
mov
and
adc
in
jns
or
jno
push
ljmp
lret
push
fs
rorl
cmpsb
repz
popf
or
xor
aaa
pusha
mov
mov
push
push
mov
call
negb
pusha
nop
lds
inc
clc
mov
test
dec
push
andb
ja
inc
dec
popf
xchg
sti
dec
xchg
dec
or
fwait
rclb
xlat
and
mov
push
shlb
aam
clc
xor
nop
push
fsubs
movl
xor
sub
cltd
je
sub
sti
stos
daa
adc
lods
imul
das
insb
push
mov
ljmp
dec
sub
or
lcallw
fs
sbbl
xor
cld
jae
sbb
add
into
push
xchg
adc
out
jb
pop
loope
icebp
sti
in
inc
popa
dec
bound
jmp
jg
mov
adc
in
add
lcall
and
pusha
cmp
aam
sbb
add
xchg
mov
rcl
pop
in
movd
mov
or
pushw
or
subb
aam
mov
subl
fmulp
xor
ljmp
push
clc
jmp
out
dec
add
push
int3
sub
sub
sub
cmp
std
inc
xor
cmp
mov
stc
mov
cli
inc
mov
out
mov
addb
xor
lahf
or
push
shll
pushf
lea
or
aaa
aas
iret
jle
std
mov
mov
pop
lahf
mov
repnz
rolb
adc
mov
cltd
jl
push
pushf
mov
lock
xchg
sub
inc
imul
inc
push
in
or
mov
inc
iret
jne
push
inc
cwtl
stos
out
sbb
pop
jge
inc
mov
push
int
fistps
shrb
mov
sbb
mov
jp
fsubrl
add
outsb
cmp
ret
pop
ret
and
fmuls
mov
cmp
fstps
in
in
mov
sub
sbb
add
orl
gs
dec
out
ret
pop
xor
pop
adc
daa
insl
sbb
mov
loopne
mov
inc
push
xor
add
pop
aam
mov
or
scas
aad
jno
push
mov
xlat
sbb
xchg
pop
andb
adcl
mov
jmp
rorl
adc
and
dec
fwait
jns
pop
add
jmp
mov
inc
mov
dec
sub
stos
mov
insl
pop
or
hlt
nop
xchg
imul
cmp
scas
ret
scas
adc
mov
cmpsb
jp
pop
lcall
pusha
test
pop
pop
mov
push
dec
sbb
nop
mov
jnp
cmpl
xor
jl
andb
into
lcall
mov
mov
mov
je
cld
insl
lahf
jmp
gs
out
iret
and
repz
jle
sub
push
fsubs
jmp
pop
dec
enter
and
mov
addb
loopne
mov
inc
push
lret
or
cmp
sub
repz
add
push
mov
and
adc
je
mov
lahf
arpl
sub
mov
add
xchg
lods
push
aad
movsb
xchg
addr16
test
xchg
jmp
lock
out
ficompl
pushf
push
or
jns
xlat
sub
es
test
das
sti
pop
sub
call
ret
icebp
jne
ds
addr16
movsl
xor
jle
xchg
mov
stc
jl
inc
in
lods
adc
mov
bound
dec
cmp
js
pop
std
xor
cmp
jo
xchg
xchg
xchg
sub
stos
outsb
adc
mov
movsb
jecxz
lods
nop
pop
push
ja
dec
sti
add
inc
sbb
and
jne
in
inc
filds
stos
ja
sub
dec
test
pop
jle
mov
arpl
fldcw
cltd
test
mov
daa
sbb
push
and
push
dec
mov
xlat
and
inc
fnstsw
pop
push
adc
and
loopne
or
ss
idivb
pusha
mov
and
mov
mulb
mov
ficoms
dec
mov
stos
cwtl
cmp
pop
jns
adc
mov
icebp
aaa
jl
in
mov
stos
xchg
fisubrs
fstl
std
jp
dec
shll
leave
outsl
cwtl
mov
sub
pushf
inc
pop
or
or
and
add
mulb
dec
and
lock
inc
inc
clc
push
xor
cltd
jmp
xchg
pop
movsl
loop
add
sbb
movsb
mov
out
jp
out
fsts
or
call
mov
test
jne
adc
lock
js
xor
mov
mov
test
pusha
cmpsl
jl
and
stos
loop
push
mov
ljmp
ret
mov
push
inc
rcr
fdivrl
cmc
adc
lret
insb
loopw
daa
shl
movsb
test
loope
mov
sub
lret
scas
or
inc
mov
es
cmpsb
jnp
inc
int3
sub
nop
mov
or
jno
inc
nop
fisubrs
dec
mov
mov
dec
sar
pop
fldenv
cmpsb
adc
jl
dec
inc
daa
xchg
out
push
gs
mov
out
mov
sub
pop
inc
pop
dec
test
lea
stos
into
test
divl
scas
stos
cmp
rorl
xchg
xlat
pushf
cmpsl
cltd
cld
inc
jbe
dec
or
jg
xchg
movsb
add
fisttps
aas
out
clc
xchg
push
insb
jge
jbe
arpl
bound
movsl
xchg
into
mov
cmp
sub
lcall
and
cmp
pop
cwtl
shll
movsb
mov
fadds
andl
or
cmp
sbb
xchg
mov
add
loope
xchg
xor
ret
icebp
push
jnp
int
mov
mov
neg
adc
sti
cli
adc
stos
testb
and
cmp
cmp
push
mov
xor
mov
mov
fidivl
jbe
hlt
cli
sbb
scas
xor
xor
xchg
daa
pop
clc
pop
test
mov
in
jmp
xor
inc
push
hlt
shrb
call
mov
jle
jmp
xlat
in
dec
pop
inc
loope
ficomps
or
adc
add
push
sub
in
and
mov
out
out
pop
mov
jecxz
lods
insl
cmc
ja
push
xchg
xor
je
daa
cmp
jno
mov
dec
test
lock
in
leave
pop
sar
bound
dec
xchg
push
push
inc
sbb
mov
test
xor
pop
cmpsb
mov
push
add
sbb
cltd
inc
xchg
clc
test
cltd
andb
int3
mov
inc
sahf
notl
add
cmp
push
pusha
add
xorb
ss
sub
arpl
push
scas
pmaxsw
aas
mov
push
data16
dec
inc
adc
fadds
add
dec
pushf
mov
jge
dec
fsubs
mov
inc
push
iret
loop
mov
shl
xchg
shll
inc
into
out
dec
jmp
stc
mov
mov
xchg
xor
lret
in
pop
fidivs
dec
mov
dec
packssdw
xor
aaa
push
lcall
rcrl
xchg
lahf
add
loopne
adc
or
test
std
inc
mov
adc
hlt
and
mov
mov
xor
pop
aas
pusha
dec
mov
xchg
repz
fnstcw
fsubl
sbbl
sub
mov
cmp
dec
or
subb
aam
inc
cwtl
xor
bound
out
sbb
mov
pop
stc
jge
pop
add
ja
xchg
sub
add
xor
mov
mov
mov
mov
sahf
mov
sarl
jp
push
fsubrl
psubq
insb
insb
test
cmp
inc
rcrb
fidivrl
dec
xchg
loop
iret
out
and
mov
sbbb
jmp
xor
lcall
pushf
jge
movsb
inc
dec
rcl
outsl
add
sbb
push
pop
push
adcl
std
mov
gs
adc
mov
mov
mov
mov
lock
xor
ljmp
sbb
ljmp
js
ja
xchg
adc
jge
mov
cld
mov
or
in
fistl
fs
rcll
fwait
inc
cli
out
cli
mov
and
inc
stos
push
jne
ljmp
leave
sti
outsb
enter
or
call
fldenv
lea
dec
mov
pop
add
sbb
cmp
mov
cmp
sbb
inc
sbb
fwait
ss
test
adc
xchg
mov
xor
cltd
pop
jno
fcompl
push
mov
mov
and
icebp
aas
loopne
fadds
aaa
push
lods
sti
inc
push
mov
inc
fbld
fnstcw
xor
aam
mov
and
popa
sbb
xchg
repz
sbb
xor
out
lret
jno
aaa
jecxz
subb
add
cs
sbb
mov
push
fwait
xor
aas
inc
imul
pop
xlat
imul
cmp
cmp
cwtl
arpl
inc
rolb
enter
test
stc
repz
mov
stos
inc
and
insb
iret
push
inc
add
sbb
mov
inc
adc
orb
dec
mov
stc
jg
stos
lcall
cmp
iret
xor
movsl
xor
cmp
insl
mov
sti
dec
addr16
outsb
cld
xlat
addr16
sbb
es
mov
nop
imul
dec
inc
fists
out
dec
push
jne
das
adc
into
adc
into
mov
or
jp
adc
call
aaa
xchg
in
nop
adc
in
cwtl
in
pop
mov
mov
ret
push
mov
in
fsub
sahf
imul
fs
add
fisubs
mov
test
push
pop
outsl
inc
cmc
sahf
mov
jae
test
mov
mov
sbb
push
xchg
sbb
mov
out
lods
lret
fldcw
divl
or
pop
ss
mov
add
and
lea
cmp
mov
xchg
test
lahf
or
cmp
and
insl
loopne
shll
fs
push
lahf
in
jno
cmp
or
push
cvttps2pi
fstps
jns
adc
dec
loop
xor
andb
pop
insb
scas
cmpsl
push
mov
cmp
dec
dec
inc
je
fidivrl
fbld
cmp
in
in
pop
cmp
sub
jns
lea
sub
xchg
jnp
inc
fneni(8087
cmp
pop
cmpsl
cmp
movsb
jne
sbb
sbb
fdivrs
outsl
pop
mov
ss
aaa
scas
fwait
clc
movsb
push
ss
clc
sub
popf
in
lahf
aam
cmp
cmp
sti
psubb
out
push
js
push
aaa
cmpsl
jnp
dec
sahf
adc
lahf
in
stc
xchg
pop
fisubs
xchg
fcoms
mov
and
sub
cmp
out
sub
jg
lcall
loope
ss
nop
sub
xor
push
inc
sbb
movsl
inc
bound
dec
pop
sbb
hlt
in
xchg
mov
xchg
aad
cmp
repnz
pop
sahf
imul
cmp
adc
mov
ret
mov
hlt
xor
fstp
xorl
cmc
outsb
mulb
push
cli
adc
aaa
das
lock
pop
fstenv
popa
hlt
xor
adc
fldcw
mov
out
inc
jg
clc
push
in
jae
notl
cmp
enter
stos
mov
mov
popf
ficoml
jns
scas
sub
push
and
add
xor
adc
dec
xchg
cli
rorb
mov
pop
push
das
pop
sub
sar
sbb
sub
dec
cs
mov
mov
lahf
jl
inc
inc
clc
or
inc
cld
out
pop
jbe
pop
out
push
dec
sarl
lods
inc
lret
lahf
aam
test
sub
lods
mov
mov
mov
push
xlat
dec
xchg
mov
jbe
mov
stos
push
mov
cmp
jno
add
outsl
mov
dec
mov
addr16
dec
jae
inc
xchg
aas
mov
sub
notl
enter
aam
jnp
lret
cli
dec
xor
fwait
data16
adc
mov
push
insb
push
dec
push
xchg
or
repz
pop
mov
stc
push
push
push
imul
mov
nop
mov
pop
sub
xchg
mov
pop
cli
mov
fwait
inc
loope
sub
addb
mov
loop
fstpl
sub
push
insb
out
cld
ds
xor
dec
mov
rcrb
sbb
std
in
mov
mov
sub
inc
lret
daa
aas
pusha
mov
mov
pop
add
das
out
dec
cwtl
icebp
mov
jmp
ljmp
lock
pop
test
or
pusha
rcr
jns
mov
ss
mov
outsl
test
mov
and
add
fisubl
sub
out
rcrl
pop
pop
push
inc
jge
push
mov
cmp
inc
loopne
and
mov
int
pop
cmp
adc
scas
ja
pushf
pop
jae
push
mov
pop
imull
aas
push
out
pop
mov
cmp
xchg
push
sub
scas
stos
clc
jmp
mov
imul
jle
es
subl
inc
imul
mov
insb
test
xchg
mov
jg
mov
dec
subl
pop
ja
xchg
xchg
cmpsb
icebp
test
xor
or
xchg
std
mov
lods
roll
xchg
xlat
mov
adc
mov
int3
mov
xchg
mov
xor
decb
lods
jns
fisttps
or
add
orl
ffree
mov
ret
hlt
pop
push
cmp
push
aad
fwait
mov
clc
mov
dec
sub
push
shl
call
pop
pop
inc
scas
cmp
cs
cmp
inc
xor
cwtl
inc
fcompl
daa
cld
pop
cmp
push
insl
cs
aad
sub
imul
fimuls
arpl
in
adc
and
or
mov
jb
mov
bound
lahf
push
cmpl
cmpsl
lds
pushf
add
push
aaa
mov
push
in
popf
fwait
xor
enter
cs
addl
das
xchg
lret
aaa
fimull
push
aaa
in
xor
inc
mov
mov
imul
dec
movsl
mov
xchg
push
lods
push
mov
xchg
adc
sub
lock
pop
jle
div
loopne
or
lock
inc
fcompl
add
cwtl
repnz
dec
mov
xchg
call
mov
cmc
ds
out
fcmovnb
pop
in
dec
push
push
jecxz
in
xchg
or
mov
inc
jecxz
aas
les
sarl
andb
loope
aas
cmp
or
orl
arpl
lds
mov
je
cltd
jo
xchg
pop
sbbb
iret
addr16
negb
insb
mov
or
sub
fdivl
cmp
dec
pop
inc
or
test
or
mov
mov
shlb
add
fs
ljmp
inc
sbb
ljmp
repnz
push
xchg
mov
push
hlt
or
cmpsl
jmp
js
adc
dec
fisubs
mov
mov
jl
or
loop
dec
inc
outsl
ss
mov
mov
int
pop
insb
cmp
ret
sub
adc
jae
daa
inc
fstl
mov
sub
mov
aam
imul
dec
xchg
adc
out
loopne
adc
xchg
mov
gs
dec
mov
jnp
and
jecxz
xor
sahf
bound
das
xor
lds
pushl
dec
jns
repz
test
lret
cld
mov
ret
fidivrs
insb
cmpsl
mov
push
std
pop
cmp
jl
push
xor
imul
sub
xchg
mov
mov
call
add
in
mov
neg
adc
and
cmp
sbb
mov
xchg
popa
mov
mov
pop
jnp
push
push
xchg
push
std
loop
in
stos
loop
bound
mov
pop
pop
xlat
or
sub
inc
sbb
lock
out
jl
xor
out
and
mov
inc
insb
pop
mov
pop
push
rcr
push
mov
clc
cmp
mov
mov
movsb
push
repz
dec
add
popa
add
push
aam
insl
fistpll
push
arpl
ret
sub
ror
jg
mov
sbb
in
xor
nop
or
insb
lret
mov
fistpl
das
sub
xchg
repz
iret
repz
pop
mov
or
data16
push
cld
dec
inc
sbb
inc
arpl
stos
jb
int
lock
jecxz
dec
movsl
adc
mov
pop
pop
jecxz
mov
scas
mov
testl
pop
scas
or
outsl
or
jl
sbb
push
arpl
and
mov
or
xlat
push
fs
ja
lret
push
flds
int
push
sti
cwtl
cmp
leave
push
mov
xor
mov
in
xorb
stc
inc
cmp
cwtl
push
cmp
cmp
ljmp
mov
ljmp
repnz
mov
jne
jb
push
outsl
add
add
sbb
cmpsb
push
cmp
cltd
mov
iret
add
mov
fcomps
mov
push
fwait
jb
sub
aam
sub
jg
jae
push
addr16
enter
adc
cmp
lahf
push
mov
add
out
xchg
arpl
fldl
nop
jp
in
cmp
adc
arpl
inc
xchg
orl
pop
bound
imul
outsl
mov
adc
pop
add
or
lock
pop
pop
gs
mov
mov
and
test
cwtl
mov
add
sti
fucomip
mov
mov
adc
mov
notl
mov
and
lds
xchg
pop
or
call
mov
aas
mov
xor
lods
shll
xchg
xlat
lods
mov
xor
xchg
fnstenv
mov
and
mov
mov
add
jbe
sub
ljmp
imulb
call
hlt
or
in
jnp
stos
je
pop
nop
xor
in
mov
out
ffree
add
sub
ljmp
movsb
in
xor
cmp
and
aam
inc
xchg
pop
jne
and
add
arpl
pushf
lea
loop
movb
xchg
xchg
xchg
adc
jnp
push
jb
xor
popf
ja
scas
and
in
adc
ljmp
les
sbb
or
fadd
mov
jge
insb
sahf
shlb
cmp
outsb
jle
mov
test
clc
inc
mov
inc
repnz
test
push
pop
xlat
mov
xor
adc
pop
ljmp
fisubrl
inc
cli
test
cld
call
xchg
scas
cmp
sbb
pop
jo
icebp
push
clc
loopne
ja
sti
pushf
lcall
les
push
push
pop
aaa
pop
adc
lret
inc
pop
iret
pop
and
inc
movsb
psubsw
jne
or
iret
push
inc
sbb
loopne
addr16
xchg
sub
jle
adc
leave
push
jnp
mov
addr16
mov
sub
sarb
fldl
xchg
ret
ja
out
sarb
cmp
pop
push
mov
pop
call
mov
cmpsb
jecxz
fisubs
jle
push
or
les
adc
push
je
mov
ds
lods
pusha
daa
lret
int3
adc
rcll
pop
or
inc
jbe
push
cmp
ss
xor
xor
fildl
movb
cmp
ss
jne
sbb
icebp
push
cld
dec
and
sbb
icebp
sbb
jl
rcl
inc
in
cs
aam
push
mov
std
mov
incb
pop
sbb
jne
cmpsb
imul
jge
mov
adc
mov
pop
rcrl
scas
xchg
mov
inc
imul
jg
lds
push
cmpsl
daa
iret
int3
pop
xchg
fwait
push
loop
cmp
fdivrl
xor
fcomp
inc
call
pop
push
jns
int
aad
daa
jne
cmpsb
lret
inc
jo
sbb
rcrl
js
ret
sbbb
mov
daa
inc
push
pop
cmp
sti
adc
scas
sahf
jmp
and
sahf
and
fldenv
imul
jl
inc
scas
outsl
dec
pop
xor
arpl
jno
pop
outsl
jno
mov
xor
mov
jae
jmp
xchg
mov
mov
mov
inc
xchg
fstl
sub
in
test
push
sub
fcomps
nop
ret
xlat
cmp
mov
xchg
inc
jle
inc
mov
mov
or
incb
mov
scas
clc
mov
pusha
test
sub
cmp
cld
cmp
scas
jae
rcrl
gs
add
testb
push
addr16
jb
popf
adc
mov
cltd
xor
and
cmp
xchg
push
mov
sub
into
fs
mov
inc
add
sbb
inc
fstl
adc
nop
sub
mov
cmp
mov
push
fsts
into
mov
daa
push
pusha
les
push
cltd
push
or
popf
xchg
mov
sbb
dec
xchg
sti
verr
data16
enter
mov
filds
das
aas
in
sbb
push
test
xchg
sub
loop
pop
mov
pop
xchg
add
push
fnstsw
fidivs
out
movsl
mov
iret
imul
mov
jmp
stos
scas
mov
jl
fistl
xlat
sub
mov
pop
or
clc
jbe
xchg
insl
ds
pop
out
dec
cmc
jo
out
inc
mov
jecxz
shlb
int
mov
or
repz
roll
mov
enter
xlat
add
cmc
int
xlat
sbb
xchg
push
lea
mov
cmpsb
je
mov
fdivrs
shrb
movsl
adc
fisubrs
adc
and
mov
rcr
and
fnstenv
shl
inc
cmp
insb
inc
adc
fldt
sub
xchg
dec
add
sbbb
call
cmc
pop
push
scas
in
pusha
add
scas
mov
pop
push
pop
pushl
mov
mov
inc
jbe
jge
aad
pop
das
clc
and
jg
ss
clc
ljmp
arpl
addr16
sbb
or
cld
ljmp
ret
fld
scas
mov
xor
mov
jmp
cmp
mov
int
fs
into
rorb
mov
orb
adc
dec
or
xor
push
add
dec
push
popa
icebp
shll
outsb
mov
and
or
cwtl
pushf
in
jp
shll
cmp
xchg
mov
jg
popw
add
xor
lods
mov
xchg
mov
pop
in
sub
mov
and
dec
push
sub
mov
popf
dec
dec
pop
dec
mov
int
jg
mov
cmc
lods
insl
gs
in
cmp
lret
iret
xor
js
lock
popa
push
mov
iret
and
push
lcall
mov
inc
push
hlt
outsl
hlt
fs
mov
into
mov
push
leave
xchg
fstp
insb
or
mov
popf
xchg
mov
cld
jnp
fidivs
je
neg
inc
mov
xor
mov
cmc
inc
cwtl
out
xor
test
jns
cmc
fnstcw
js
xlat
roll
mov
jle
iret
call
loop
inc
jo
rol
outsb
imul
hlt
cli
int
jne
mov
sysenter
cs
push
cmc
rclb
decb
inc
or
jp
mov
xchg
jmp
out
jns
stos
cmp
test
lock
icebp
std
mov
jp
leave
cmc
or
and
jle
jge
mov
pop
orb
cmp
jmp
dec
movb
cmpsb
jns
adc
sti
add
cld
leave
imul
mov
cwtl
rcrl
cmp
fcoml
xchg
and
enter
jo
mov
cmp
fwait
and
sbb
cmpsb
add
mov
pusha
add
out
push
pop
das
push
cltd
fcmovnu
or
mov
push
jl
shrb
mov
into
es
das
mov
or
je
pop
jae
push
jg
les
je
mov
inc
daa
jmp
ret
push
pop
cwtl
shrl
xchg
aad
pop
je
ret
lret
cmc
sbb
popl
or
ja
out
mov
stc
jnp
in
cmp
sub
subl
test
mov
xchg
pop
add
lcall
mov
xchg
js
imul
arpl
push
daa
aam
inc
mov
cld
pop
jl
into
ds
pop
subb
xlat
out
sti
das
in
lea
fistpl
fsubrp
mov
mov
jno
xor
stos
popa
jp
mov
negb
adc
adc
jno
cmp
inc
xor
adc
js
ret
mov
call
jge
push
addl
and
aam
loop
xchg
test
lods
pusha
stos
lods
int3
sahf
or
xchg
lret
outsb
fdivr
repnz
adc
jle
test
xchg
push
bnd
pop
imul
sub
sub
fstps
notb
mov
mov
add
into
aam
sahf
int3
mov
repz
pop
xchg
jmp
pop
ss
aam
ret
jmp
movsl
add
lret
fcoms
dec
inc
cld
rorb
dec
lock
stc
lods
imul
mov
ret
fwait
js
fldenv
fidivrs
and
sub
push
push
lcall
xchg
dec
fstps
add
push
movsl
insl
cmp
pop
xor
add
icebp
out
out
xorb
std
js
jp
cmp
scas
inc
adc
mov
jmp
xchg
cli
xchg
movhlps
jb
icebp
test
sub
daa
push
mov
loopne
push
push
jbe
idivb
je
fdivrl
ret
arpl
stos
sub
pop
sbb
sbb
dec
cmp
mov
pop
fimuls
adc
xchg
dec
mov
mov
iret
jbe
jae
mov
push
loope
jg
loopne
mov
mov
fisubrs
cmc
scas
mov
xorl
in
lret
test
inc
push
inc
push
cmpsb
push
flds
sub
inc
xor
dec
mov
sbb
pushf
clc
mov
push
jecxz
inc
mov
mov
push
rclb
popf
pop
lret
fcoms
cwtl
mov
insl
and
mov
or
decl
xor
add
pop
sub
jae
cs
sbb
sub
adc
mov
andl
xchg
sahf
push
ficoml
pusha
and
xchg
push
xor
test
pop
pop
and
stos
repnz
xlat
icebp
aad
andl
jno
scas
imul
mov
stos
rolb
clc
cmp
push
flds
es
inc
stos
xchg
cmp
sub
xchg
fisttps
dec
push
dec
out
cmpsb
push
jle
movsl
cmpsl
xor
xchg
pop
xor
xchg
pop
into
adc
push
stos
mov
push
jge
mul
pop
sub
in
js
in
pop
jbe
mov
mov
xor
push
cltd
pushf
jmp
clc
mov
adc
cmp
push
xchg
add
dec
insb
dec
cmp
sub
mov
imul
xor
pop
push
jnp
mov
add
out
lock
popf
hlt
outsl
fisubs
jo
cmp
cmp
in
in
jmp
dec
test
cmpsb
jmp
fcoms
mov
ret
outsb
mulb
fdivrs
sbb
in
pop
cld
out
pushf
imul
inc
mov
aam
aad
push
inc
lret
mov
pushf
mov
push
mov
xlat
mulb
sbb
xor
sbb
jmp
push
lock
rclb
jmp
mov
cwtl
movsb
dec
dec
sub
ret
xor
sub
add
call
leave
sub
shrb
pop
ds
mov
mov
ret
rclb
inc
sbb
std
es
and
inc
jno
out
roll
popa
jne
sbbl
jmp
ds
mov
sub
lods
and
push
pop
cmp
push
and
out
lds
mov
sub
test
rcll
mov
push
ljmp
rcrl
and
data16
or
mov
inc
fisubl
ret
sbb
sub
adc
stos
lret
inc
iret
sub
mov
add
dec
cmp
in
dec
cld
out
out
jle
cmp
sbb
add
jb
dec
and
js
enter
jne
fisttpl
imulb
cmc
jg
sub
adc
xchg
and
mov
jnp
push
mov
sbb
pop
int
or
xor
pusha
out
and
cld
lret
and
aaa
inc
shlb
push
sbb
mov
pop
lods
push
stc
shll
jae
and
int
stos
enter
insb
pushf
add
push
xchg
mov
ret
mov
popf
xchg
out
pop
mov
jne
mov
xor
pop
ljmp
cmc
and
jo
dec
sub
sbb
push
pop
jb
xor
jmp
mov
insl
fucomi
mul
imul
lods
cmp
test
push
add
ss
scas
in
ss
ret
mov
cmpsl
in
mov
inc
xor
mov
out
add
shl
mov
es
cmpsb
pop
movsb
mov
mov
lahf
cmc
cmp
lret
shlb
sbb
sbb
imul
arpl
popa
in
xchg
adc
push
inc
lds
outsl
inc
cwtl
pushl
ss
or
rcl
xchg
iret
push
jo
add
xchg
cmc
adc
mov
jp
mov
or
jle
sub
cltd
dec
shll
fisubs
test
test
push
ljmp
xor
mov
enter
cmp
mov
pop
pop
ds
hlt
imul
jns
push
addr16
adc
jp
sti
test
shl
ror
sub
xchg
cmpsl
int
jp
sub
sbb
push
jecxz
js
and
mov
sbb
dec
adc
sbb
imul
sub
enter
push
xchg
test
loopne
lret
daa
in
ret
stos
or
jne
cmp
sub
pop
lahf
mov
inc
push
outsb
fldt
xor
mov
jns
inc
pop
mov
and
clc
jns
cwtl
sbb
adc
incl
cmp
pop
ja
ds
aad
mov
dec
cwtl
cld
insl
mov
cs
jecxz
jmp
in
ss
xor
adc
pop
orb
fdivl
or
clc
dec
lock
fsubrs
pop
rol
push
test
push
push
inc
jno
lahf
jne
int
xchg
dec
test
daa
ja
sub
sar
mov
cmc
xor
push
add
outsl
sub
int3
inc
mov
sarb
popf
lea
clc
outsb
mov
jp
lret
jmp
xor
lret
xchg
fwait
enter
or
out
rol
lcall
dec
add
push
in
inc
xchg
add
xchg
cmpb
in
inc
and
insb
bound
and
ja
dec
lods
bound
fsubrl
mov
xor
aaa
stos
loope
ljmp
fwait
in
mov
out
out
mov
pop
or
pop
scas
mov
xchg
loope
sbb
aad
adc
filds
stc
adc
cwtl
es
cwtl
push
push
inc
cli
pop
sbb
mov
add
add
and
push
loope
psubw
iret
xchg
outsl
push
into
out
jecxz
mov
movntps
scas
and
cwtl
xorw
sti
hlt
inc
jle
mov
fisttps
faddl
sbb
mov
outsb
loop
scas
lret
jne
pushf
and
shlb
mov
in
dec
cmpb
xchg
into
ret
cmp
data16
stc
dec
dec
stos
out
shrb
iret
movsl
sub
cmp
lock
enter
iret
out
loop
stc
out
stc
inc
jne
mov
fldl2t
lods
sbbb
hlt
mov
jo
test
decl
movsb
int
or
jl
add
adc
out
xchg
cli
mov
inc
daa
daa
push
out
movsb
bswap
add
mov
xchg
cmpsl
dec
lea
data16
mov
xchg
xchg
arpl
pop
and
je
fwait
imul
jo
addl
clc
inc
iret
xchg
icebp
push
cmp
popf
imul
pop
jnp
sbbb
dec
inc
xor
test
bound
jl
push
enter
and
cmp
decl
xchg
aaa
jge
aam
push
sub
sbbb
movsb
inc
js,pn
push
loopne
push
lret
fsubrs
and
cs
pop
and
mov
fcoms
test
movsb
inc
mov
test
jb
mull
xor
dec
popa
xor
lret
mov
xchg
pop
lcall
pop
fs
xacquire
mov
inc
xor
push
push
repz
jl
sub
pop
sarb
or
sub
in
jl
insl
mov
pop
ficoml
imul
cli
scas
inc
je
movsb
mov
enter
adc
movsb
jl
and
ja
or
outsl
pop
and
xchg
pop
stc
sub
jno
fldl
lahf
lcall
popa
test
aas
andl
aaa
movl
ficomps
nop
aad
pop
popf
add
mov
sbb
mov
sbb
xchg
notl
into
mov
pop
loopne
push
jmp
cmp
clc
icebp
aad
ret
sahf
sahf
xchg
aad
lods
pop
add
or
lret
popf
mov
xchg
and
testl
out
repz
mov
sub
inc
sbb
fistpll
movb
adc
push
cmp
mov
lahf
cmpsl
or
push
sub
push
das
sti
ret
mov
lret
dec
push
adc
xchg
clc
mov
jo
xor
sub
pop
call
inc
mov
pushf
mov
into
jle
cmp
hlt
cmp
filds
jmp
cltd
jnp
sub
jge
js
pop
or
int
add
iret
popa
xor
icebp
movsb
ffreep
dec
dec
sub
dec
mov
addr16
inc
into
jns
mov
add
fisubrs
sbb
stos
lods
sub
imul
cmp
fldcw
jae
inc
jae
and
cld
add
lret
test
sbb
add
mov
packuswb
leave
roll
aaa
or
push
fcomps
bound
sub
sbb
pop
inc
ret
adc
mov
aaa
and
pop
xchg
scas
cmp
dec
sub
jnp
jb
int
out
test
dec
es
pop
mov
xchg
imul
mov
stos
cmc
das
or
xchg
daa
nop
sbb
mov
push
out
push
andb
addl
lahf
neg
sahf
ret
push
int3
or
cltd
test
insb
sti
push
jmp
scas
sub
jmp
xor
sbb
insl
test
push
sbb
push
add
inc
push
pushf
insl
addl
cmpsb
fs
mov
jne
arpl
mov
test
cmp
mov
xchg
aad
cmp
push
fistpll
dec
mov
mov
xor
cvttps2pi
pop
in
pusha
scas
aad
mov
cmc
mov
test
ds
add
dec
mov
xor
rclb
scas
nop
data16
popa
xor
inc
jo
add
jbe
mov
into
bswap
ds
xchg
mov
or
mov
js
es
mov
jmp
pop
sub
mov
mov
clc
ljmp
loop
lods
add
jbe
jae
cmpsb
sub
loop
pop
inc
ds
lret
arpl
in
aam
sbb
aam
jbe
push
movsb
aad
clc
cmp
stc
push
icebp
sbb
sbb
pop
out
xor
shll
pop
dec
mulb
and
xchg
inc
addb
rorb
lods
dec
cmp
gs
add
imul
testb
loop
jl
icebp
ror
or
cmpsl
loop
inc
test
inc
push
aas
repnz
xchg
gs
dec
or
enter
les
adc
and
ficomps
xchg
push
outsl
push
loope
sbb
dec
arpl
lods
rorb
add
fisttpll
mov
jl
fimull
lods
mov
test
test
outsl
push
mov
insb
add
push
loop
jnp
sub
cmp
jmp
dec
push
cmp
cld
xchg
test
rcrl
orl
or
sub
aam
lds
in
inc
loope
shll
in
ja
xchg
or
mov
pop
bound
add
lods
xlat
cli
mov
pusha
jecxz
int3
cltd
lret
xor
pop
jg
addr16
cmc
mov
shll
imul
cmpsb
and
std
dec
cmp
cwtl
test
pushf
test
add
push
ja
mov
jmp
jge
std
xchg
mov
pop
dec
add
jo
jp
cmp
pop
mov
cmpsl
jle
cmp
call
sub
dec
jb
jle
push
sbb
jmp
xchg
sub
pop
test
add
add
cmc
rcrb
jne
into
xor
test
daa
lcall
push
cmp
or
xor
lock
push
popa
and
mov
fld
xchg
ss
fmull
push
aam
push
cmpsl
je
imul
mov
mov
ja
xchg
xchg
stc
lcall
jle
jo
aam
dec
cli
xchg
sbb
jne
adc
sbb
sahf
push
sti
mov
pop
lahf
test
ret
cmp
xchg
loop
in
pop
or
dec
lret
cli
cli
push
push
in
mov
outsb
xor
xchg
popf
mov
fldt
mov
mov
inc
xor
sahf
cmp
xchg
fisttpll
stos
sahf
push
mov
je
popa
jbe
popl
add
repz
push
fmul
add
leave
out
jne
popf
adc
je
hlt
outsb
data16
fcmovnb
popf
lret
lea
repz
and
jbe
xor
sub
jl
pop
dec
push
add
mov
ljmp
inc
inc
js
fcmovb
and
test
test
dec
add
sbb
xchg
stos
dec
cmp
push
ret
leave
sub
add
aaa
hlt
inc
xchg
lods
inc
and
out
nop
xchg
add
rolb
shr
ds
loope
cmpsl
mov
sbb
stos
dec
or
mov
mov
cmpsl
or
lahf
xor
loope
pop
sub
push
mov
icebp
lods
fmuls
ljmp
dec
xchg
idivl
test
das
rcll
sbb
lods
and
inc
fsts
clc
mov
fidivrl
inc
xor
nop
test
stos
lcall
jecxz
clc
sbb
cmp
mov
or
push
fdivrs
aad
jmp
adc
inc
cmp
dec
xchg
dec
sahf
addr16
imul
outsl
add
and
adc
lret
xchg
mov
sbb
jo
sbb
in
inc
pcmpgtd
negb
sbb
push
int
push
ljmp
dec
jp
fadd
arpl
inc
mov
pop
insl
xchg
sbb
mov
cli
gs
dec
or
inc
aad
mov
pop
nop
push
mov
sbbl
cmc
push
add
xchg
adc
cmp
sbb
dec
inc
lret
add
dec
in
push
cmpl
sbb
int3
push
xchg
sub
aaa
inc
jp
mov
std
repnz
xchg
sbb
stc
add
adc
dec
in
xchg
ret
xchg
sbb
jne
sub
and
loop
dec
inc
push
xor
mov
cmp
xchg
lods
enter
xchg
mov
outsl
xchg
add
ds
movsb
pusha
mov
mov
cs
in
add
loopne
jecxz
add
lahf
ror
fisubs
jnp
test
xchg
std
mov
fistpll
mov
sbb
mov
fs
subb
xchg
xor
jg
enter
clc
sbb
cwtl
inc
cmp
xchg
cmpsb
ret
rol
int3
add
fnstenv
arpl
xchg
dec
mov
add
hlt
push
fcmovne
cwtl
mov
int3
lret
cmp
dec
fcomps
incb
in
jecxz
loop
ss
jle
jl
dec
pusha
xchg
jmp
inc
fistpl
push
clc
jnp
xor
fsubrl
mov
jb
popa
or
push
adc
jg
and
mov
mov
lahf
pop
add
jp
ret
push
fidivs
add
fs
ret
aas
out
jb
jno
dec
sub
shll
xchg
es
xchg
or
popa
jg
ljmp
xor
test
loope
inc
xlat
aas
out
mov
fsubs
mov
mov
fsincos
pop
or
es
xchg
sbb
arpl
clc
or
push
dec
mov
scas
repnz
add
cmp
inc
mov
in
cmpsl
xor
push
ljmp
adc
pop
adc
ss
add
xorb
and
pop
inc
movsl
test
repnz
adc
inc
fmul
pop
repz
sbb
or
out
call
mov
fldenv
mov
sub
jne
fstpt
inc
jecxz
lods
movsb
decl
xor
sbb
xor
les
xchg
inc
in
pop
aas
fwait
adc
add
les
pop
shlb
stos
inc
push
fcoml
call
pop
das
out
lock
push
pop
inc
sub
jl
sti
fwait
push
jp
pop
sub
sbb
mov
or
xor
mov
sbb
repnz
enter
jns
in
bound
dec
add
out
adc
dec
inc
clc
add
adc
popf
loope
sub
ret
pop
inc
xor
mov
leave
add
cmp
xchg
dec
sbbl
addb
cmpsl
rorl
mov
in
or
dec
adc
pop
test
iret
mov
movsb
pop
dec
into
xor
icebp
adc
mov
jp
dec
mov
jae
xchg
xchg
int3
lea
jl
mov
inc
cwtl
push
fs
es
pop
imul
pop
pusha
hlt
rcl
mov
xchg
movsl
imul
stos
cmp
imul
loope
mov
xor
cmp
stos
loop
std
xor
mov
push
or
ja
jmp
adc
jmp
sti
adcb
ja
jg
pop
cmp
shrd
roll
ds
popf
adc
add
ljmp
fcmovnb
adc
pop
xor
xor
push
jo
push
xor
push
pop
inc
les
sub
andl
push
xor
aaa
mov
xchg
or
mov
cmp
leave
test
cmp
jnp
push
js
repnz
stc
mov
xchg
gs
lods
jb
int3
scas
popf
sub
ja
inc
xchg
jle
adcl
sbb
cmp
sti
mov
push
mov
mov
mov
cltd
mov
jecxz
sbb
aam
lods
jmp
adc
inc
negl
xchg
jg
push
bound
push
aad
jb
inc
lea
sub
add
xchg
pop
std
lea
addr16
fcmovnbe
in
je
xor
xor
inc
imul
mov
aam
mov
sub
fsubrl
mov
mov
into
jne
faddl
push
insl
aam
mov
cmc
ss
sahf
mov
mov
fcmove
and
mov
xlat
icebp
inc
mov
sti
push
dec
jae
fsub
lods
mov
push
fs
pop
int
out
push
nop
je
pop
cmp
jb
out
mov
cmp
push
fidivl
repnz
lahf
dec
mov
cmp
stos
push
push
call
jge
in
push
leave
loopne
js
jecxz
mov
sbb
mov
add
xchg
push
inc
dec
cmp
and
xor
mov
dec
xchg
push
sub
inc
ret
xchg
mov
mov
jle
repz
adc
adc
sub
mov
fstl
testl
les
fs
jno
push
je
pop
push
cmpsb
mov
xor
jle
adc
call
lcall
stc
gs
fildll
aam
inc
mov
push
push
or
cld
mov
and
add
imul
gs
pop
shll
sbb
xchg
imul
iret
enter
dec
cli
js
subb
dec
sti
jge
sub
cmp
lods
das
sbb
dec
ss
mov
addr16
jmp
adc
add
dec
stos
jle
xor
out
sub
sahf
shlb
mov
sub
orb
adc
dec
add
and
pop
mov
xor
xchg
stos
sbb
test
movl
push
aam
mov
push
mov
into
mov
xchg
nop
std
push
xchg
inc
and
push
cmp
dec
or
pop
vmulsd
cmpsl
sbb
lea
inc
aam
out
add
fildll
mov
fnsave
scas
dec
add
add
inc
add
mov
cmc
adc
jo
cmp
mov
xor
push
or
pop
notb
into
sti
xlat
pop
hlt
jno
dec
test
jg
loopne
aam
ds
stos
dec
out
cmc
inc
in
cmc
fnstsw
mov
shrl
lods
retw
pop
test
fcompl
push
inc
push
jbe
insb
jnp
mov
movsb
sbb
cltd
rolb
repz
push
js
cmp
push
pop
adc
or
sbbb
scas
sub
lock
cmc
jns
and
mov
or
inc
adc
add
sub
cmpsb
xchg
dec
xchg
out
xchg
cmp
pop
sub
lock
sbb
movsb
out
int3
hlt
mov
sbb
outsl
or
push
lcall
jnp
pop
sub
dec
lods
xlat
es
push
repnz
iret
sub
add
ret
scas
fs
inc
fcomi
mov
loopne
xor
push
push
out
sub
inc
push
sbb
add
dec
xchg
bound
arpl
andb
test
test
inc
add
push
cmp
and
mov
push
out
dec
xor
add
sub
in
jle
out
sbb
add
mov
popa
jne
jp
and
aas
lods
mov
dec
xor
fsincos
in
mov
cmp
out
jb
dec
lea
int
clc
hlt
dec
lret
and
fisttps
scas
add
cmc
data16
adc
mov
enter
fs
je
out
inc
nop
push
pop
mov
sbb
push
repnz
sub
sub
into
push
ja
loop
inc
ljmp
push
adc
pop
mov
or
push
out
sbb
xchg
outsl
imul
lcall
mov
ljmp
shr
dec
xchg
jecxz
cmp
mov
jl
dec
or
loopne
push
inc
sub
cli
inc
cmp
xor
in
icebp
lret
in
push
jne
and
daa
loope
andb
lret
mov
jp
lock
test
add
js
inc
popa
pop
push
or
fisubrl
ds
jo
outsl
dec
adc
inc
lock
cmp
push
jae
hlt
insl
popa
push
or
jnp
cmp
jo
aam
imul
dec
fadd
or
stos
out
xor
mov
divl
mov
mov
xlat
xchg
sarl
lahf
cmc
jb
push
int
push
insl
divl
call
mov
jecxz
repnz
adc
rep
stos
sbb
dec
dec
inc
pop
xor
adc
adc
fwait
push
int
jae
not
xor
mov
cmp
cmp
cmpb
sahf
jne
out
and
mov
sub
dec
into
mov
das
in
nop
mov
dec
adc
addr16
enter
lock
adc
cmp
cmpsb
pop
xchg
adc
in
xchg
xor
sahf
mov
sbb
fimuls
repz
out
mov
call
xchg
das
sahf
xor
dec
in
shl
test
cmp
mov
lods
mov
pop
mov
cli
or
mull
call
fcoms
ljmp
in
pop
mov
jecxz
fildll
sarb
mov
sub
mov
xchg
xchg
cmp
pop
fimull
gs
mov
xchg
pop
mov
iret
cmp
mov
pop
push
loopne
adc
cmp
scas
stc
repz
shll
cwtl
sub
insb
in
add
or
push
lfs
gs
loopne
dec
pushf
aas
into
mov
xchg
or
adc
dec
jnp
loop
lods
insl
lahf
sub
ds
and
repnz
mov
mov
xchg
mov
mov
lock
repnz
scas
aam
pop
notb
mov
imul
sbbl
mov
mov
mov
and
dec
dec
movsl
cmp
jg
shl
mov
mov
xchg
scas
sti
sbb
pop
fisubrl
ljmp
aam
pop
int3
test
pop
stc
sub
fnsave
and
add
jge
dec
sahf
push
pop
mov
inc
sub
add
mov
or
in
loop
mov
or
cmp
mov
out
mov
andb
jg
sub
cmp
dec
mov
addr16
xor
mov
push
xchg
mov
daa
push
fdivl
mov
es
push
ja
ret
mov
test
sub
mov
and
push
or
lret
inc
out
and
or
pop
push
lods
or
jmp
or
cmp
popa
push
or
addr16
cwtl
out
push
dec
fbld
enter
mov
pop
push
mov
push
inc
aas
adc
inc
aas
nop
add
pop
andps
fwait
in
add
pop
cld
dec
lds
sub
gs
sti
orb
lock
nop
mov
adc
je
xchg
call
push
or
pop
pusha
jae
sbb
mov
pop
faddl
mov
mov
pop
jge
jp
mov
jp
pop
push
mov
xabort
popa
push
shrl
pusha
push
push
xlat
mov
test
sub
mov
and
test
cli
sub
and
inc
dec
fistps
xchg
loope
cmp
scas
icebp
gs
sub
lock
push
int3
stos
mov
push
push
dec
push
mov
cs
gs
arpl
lock
fldt
out
loopne
sbb
fnstenv
mov
inc
dec
dec
push
stos
sbb
sub
imul
fbld
jns
je
pushf
mov
mov
cmpsb
aas
and
int
push
xlat
imul
sbb
xor
dec
dec
pop
fldt
sbb
pop
sbb
adc
mov
aas
fcomip
mov
cwtl
aas
fsubs
int3
test
xchg
setnp
pop
mov
cmp
dec
adc
shll
pop
jo
lock
mov
pop
ljmp
inc
mov
dec
sti
imul
jno
lret
xchg
mov
dec
and
pop
leave
lcall
scas
pop
inc
mov
ficomps
clc
push
aas
mov
xlat
js
push
xor
les
jnp
push
es
xchg
das
adc
mov
mov
adc
adc
test
mov
jno
pop
hlt
or
popa
add
cltd
fs
sub
cmp
xor
or
mov
xor
xchg
cli
jno
add
fs
xor
decb
outsl
dec
pop
jns
mov
xchg
push
not
fdivr
cmp
or
aad
xor
or
fisubrs
jp
mov
movsb
add
pop
and
pop
hlt
test
aaa
cmc
icebp
clc
xor
push
mov
mov
jo
jo
popa
cld
pop
test
xor
pusha
std
lcall
repz
xorl
mov
out
push
inc
add
stc
or
sub
jae
sub
xchg
cmp
enter
idivb
and
inc
sbb
mov
sub
mov
add
jmp
fmull
cmp
aad
mov
push
clc
mov
or
adc
push
add
insl
stc
push
fs
int3
inc
aam
xchg
jne
add
mov
out
inc
pop
loop
mov
cmp
fmul
testb
xchg
js
dec
or
adc
nop
mov
push
sbb
hlt
stos
cmp
inc
imul
pop
fistpl
add
in
movsb
jmp
xchg
xchg
sbb
lret
ljmp
bound
sbb
fsubrs
inc
in
mov
cmpsl
pusha
dec
adc
xchg
add
outsl
dec
shrb
je
xor
sbb
aas
mov
ficoms
lods
and
dec
jmp
test
or
rcll
lods
push
xor
insl
mov
pop
adc
gs
repz
sub
leave
aas
push
je
push
pop
pusha
movsb
xchg
stos
nop
cli
jns
pusha
clc
cmpsl
push
call
outsb
lock
inc
aaa
push
jmp
in
push
scas
and
push
ds
loop
pop
sti
mov
addr16
test
push
inc
lea
cld
mov
hlt
lea
scas
lds
sti
push
aas
fadds
ds
mov
inc
and
lret
dec
and
xor
ja
xchg
ret
insl
and
or
fstp
das
jnp
sub
inc
pop
jo,pn
xor
jno
fdiv
lcall
xor
push
dec
call
cld
add
xor
jle
mov
dec
adc
and
scas
jge
pop
inc
jne
aaa
test
sub
pop
mov
hlt
or
dec
loop
xor
adc
jbe
push
sub
insb
loopne
jb
cmp
cmp
jnp
cmc
xchg
dec
shl
lods
sbb
stos
frstor
mov
stos
gs
hlt
jp
jno
stc
and
push
aaa
test
pusha
mov
push
sbb
push
popa
daa
hlt
mov
mov
stos
mov
fisubrl
xchg
cmc
or
aaa
testl
jg
int3
inc
adc
fisubrs
push
sbb
adc
cmpsb
or
inc
mov
cmc
xchg
das
jo
xchg
out
mov
loopne
arpl
sbb
push
jl
mov
cwtl
lahf
clc
sub
fistl
leave
in
movups
ja
or
int
mov
fiaddl
adc
lods
dec
lcall
loop
pop
jecxz
cmpsl
inc
cmp
in
mov
inc
adc
scas
inc
lret
jns
mov
das
shlb
stc
mov
xchg
xor
leave
and
sarb
push
addr16
test
aad
imul
in
push
jg
sti
or
jae
sbb
pop
pop
inc
scas
fcompl
ds
inc
repz
les
sbb
hlt
push
incl
stos
ljmp
xor
dec
filds
shrb
jl
sarl
scas
push
nop
cli
mov
lods
aad
sub
fcoml
vpsubusw
push
stos
xor
jns
adc
stos
mov
mov
add
jp
jl
mov
scas
testb
jecxz
in
ret
or
in
fisubs
subb
xchg
fstl
addr16
add
jge
imul
or
mov
mov
inc
cs
scas
push
les
iret
add
jle
mov
out
rcll
xchg
lcall
dec
xchg
test
mov
mov
lods
pusha
xchg
sub
cmp
insb
xor
jnp
cmp
or
arpl
jns
cld
cmpsl
rorl
gs
sbb
dec
mov
jle
mov
sbb
jecxz
scas
xor
and
mov
jp
mov
jbe
inc
aad
xor
or
cmp
cld
jecxz
punpckhdq
stos
or
pop
jne
jmp
hlt
jmp
mov
je
lods
adc
insb
xchg
inc
jnp
adc
aas
mov
cmpsl
mov
adc
flds
adc
popa
shld
mov
scas
add
mov
ss
adc
testl
leave
ret
imulb
jns
add
mov
jge
mov
into
mov
imul
jmp
mov
iret
xor
and
jno
pop
xchg
push
lcall
inc
jns
mov
jmp
pusha
scas
push
cltd
inc
jg
mov
std
daa
mov
ds
lock
sahf
sub
fcompl
ljmp
jmp
addr16
fwait
test
hlt
test
data16
fldl
rcll
ljmp
addr16
inc
pop
pusha
ds
mov
dec
push
fstps
int
stc
push
pop
lock
xchg
adc
insl
fnstenv
or
test
xchg
sahf
je
sbb
sub
cli
mov
pop
pop
mov
out
sbb
arpl
std
dec
mov
sbb
mov
cwtl
mov
mov
pop
test
jge
pop
inc
xor
lods
dec
jg
loopne
test
fdivrs
arpl
pop
scas
mov
std
and
inc
inc
in
mov
xchg
add
cmp
mov
dec
lret
lea
add
push
incb
cmp
mov
sbb
adc
movsb
test
lock
mov
inc
outsl
and
ljmp
popf
mov
cmp
mov
lock
scas
add
shrb
sbb
les
mov
rolb
fidivs
jno
push
push
popa
inc
xlat
andl
es
scas
xchg
mov
ret
pop
lock
mov
notb
jbe
push
in
and
push
in
ss
sbb
push
adc
arpl
mov
bound
and
fnsave
adc
jp
dec
lods
repz
push
aad
jnp
scas
sbb
ljmp
dec
cmpsl
lret
sub
inc
inc
or
call
ljmp
outsl
mov
adc
inc
fisubrs
hlt
mov
dec
negl
in
lods
lods
mov
pop
adc
stc
xchg
in
pushf
incb
repnz
stos
out
sbb
imul
leave
sbb
add
sub
insb
fwait
gs
mov
popf
enter
mov
pusha
shrl
xchg
pop
daa
lods
rclb
xor
pop
scas
mov
movsl
and
pop
jp
mov
movsl
jg
adc
fadd
mov
pop
mov
lea
test
sub
adcl
iret
mov
roll
jle
add
sbb
and
sbb
ficoml
lahf
or
or
test
aas
xor
cmp
mov
add
cwtl
inc
xchg
pop
loope
adc
imul
std
mov
sti
mov
push
incb
pop
fwait
or
fsubs
or
pop
sbb
hlt
jae
adc
lock
into
loop
inc
jle
mov
dec
test
lret
div
mov
adc
nop
cmp
xchg
aad
sub
popa
fwait
mov
cmp
jnp
jle
daa
cld
sahf
xor
lret
fidivrl
jp
lods
and
fsts
out
xchg
mov
sti
inc
mov
push
mov
out
scas
cld
testl
iret
ljmp
fld
mov
mov
aaa
test
addb
or
or
in
mov
mov
out
fcom
cld
lea
out
daa
sbb
pop
mov
int
iret
cmp
cmp
mov
aaa
inc
push
mov
int3
and
push
pop
cmp
imul
fwait
mov
sbb
int
jecxz
stos
fisttps
xchg
fdivrl
cmp
repz
inc
inc
or
cli
roll
fsincos
mov
sbb
rorb
add
xchg
shrb
or
push
cli
jnp
ret
sahf
jns
mov
out
iret
fwait
popl
inc
aaa
fbld
rorb
and
mov
iret
fldt
sarb
jmp
gs
arpl
ljmp
cwtl
mov
pop
ljmp
shlb
mov
loop
inc
sbb
jns
mov
aaa
add
ss
mov
sbb
std
scas
imul
pop
leave
xor
outsl
and
mov
inc
add
push
addr16
sbb
jge
xlat
jmp
in
inc
or
inc
int
cli
mov
cltd
cltd
je
jmp
enter
or
in
xor
cmpsb
pop
sti
ds
mov
ja
sbb
xchg
inc
push
push
mov
xor
dec
iret
cmp
ret
pop
fstl
pusha
mov
jecxz
pop
cmpsb
mov
daa
popf
pop
mov
mov
dec
test
call
fsubs
mov
xor
or
or
cld
addr16
iret
adc
js
mov
and
sub
jmp
inc
aas
jp
push
out
fisubl
and
cld
adc
pop
sub
daa
xor
aaa
inc
out
ds
movsl
mov
mov
shll
loop
dec
loope
mov
movb
or
adc
fcomps
fbld
in
insb
mov
xor
mov
stc
dec
sbb
cmpsl
lret
repz
sbb
sub
push
mov
lret
adc
adc
add
add
enter
aad
xor
dec
jb
mov
sbb
lret
cmp
mov
data16
jo
adc
pop
testb
imul
dec
pop
js
cmc
jb
pop
and
imul
or
fwait
and
movsb
cwtl
mov
xchg
xor
jb
dec
mov
ret
xchg
push
inc
fcoms
cmpsl
push
aaa
and
pushf
or
nop
mov
decb
not
pusha
test
pop
insb
pop
adc
shll
push
mov
test
stc
push
pop
cmp
stos
jp
lahf
mov
nop
fdivl
jno
mov
arpl
inc
roll
mov
les
clc
pop
inc
ret
cmpsl
mov
adc
insl
cmpsb
out
mov
pop
add
popf
aas
jmp
or
sub
mov
jne
xchg
jnp
push
insl
and
mov
sub
fcmovu
or
test
in
and
pop
imul
scas
inc
aad
xor
popa
je
leave
pop
mov
jl
fs
jp
ficoml
mov
xchg
mov
imul
stos
scas
ja
push
dec
xor
lds
shll
aad
imul
jp
add
pop
xchg
gs
movb
jbe
cmp
int
jns
pop
subl
mov
imul
and
mov
adc
jnp
mov
sub
lret
ss
dec
cmp
and
aas
push
add
jg
in
pop
mov
out
mov
sti
jbe
xchg
jb
ljmp
push
xor
ljmp
in
jb
push
movsl
inc
push
and
cmp
repnz
xchg
cmp
xor
ljmp
lahf
insl
pop
add
fdivs
in
into
or
test
xor
push
or
out
jmp
and
add
mov
sub
fidivl
adc
ja
incl
mov
sub
sub
cwtl
adc
sbb
cld
add
in
mov
dec
add
adc
jne
jae
xchg
dec
mov
mov
lods
pop
cmp
ret
ficomps
jo
fistl
xchg
sub
daa
and
mov
das
jno
inc
rcrb
mov
dec
scas
daa
mov
jl
mov
push
dec
sbb
stos
stc
and
in
ljmp
push
xchg
mov
and
loopne
pusha
mov
push
mov
lods
mov
leave
fwait
or
outsb
test
cmc
mov
push
dec
push
les
aaa
fndisi(8087
dec
jge
into
xchg
lahf
loope
sbb
jno
adc
cmpsl
xor
js
arpl
cs
add
sub
std
scas
lret
arpl
stos
fiadds
sbb
xor
addr16
clc
cmp
ja
sub
lahf
mov
ja
mov
loopne
jp
or
dec
add
adc
xor
and
sub
sub
sub
ds
sub
scas
test
sbb
sub
xorb
pop
adc
lret
outsl
int3
pop
lds
add
nop
scas
stos
dec
test
jns
cld
roll
inc
shll
cmp
jmp
jbe
push
movsl
imul
add
xorb
repnz
mov
loop
fidivs
adc
in
add
cmc
adc
lock
ja
mov
ret
leave
push
pop
sbb
in
xchg
push
jecxz
mul
push
outsb
fldt
ja
shrb
jbe
push
in
shll
ret
in
fbld
sbbl
and
cmp
inc
addr16
cmp
sbb
jne
inc
insl
movsb
outsl
xchg
int
insl
sub
jbe
hlt
jp
mov
lods
add
imul
add
iret
fcompl
and
adc
jb
loop
decb
loop
jmp
cltd
dec
test
cs
and
daa
xor
in
jae
add
jne
ljmp
xchg
dec
movsb
fistl
in
jae
shrl
or
or
stos
jecxz
aas
jp
push
das
sub
sub
ret
push
fnsave
fdivs
push
stos
sbb
mov
jns
jp
enter
into
push
cmp
xchg
sbb
cltd
mov
lds
xor
incb
es
outsl
dec
push
jns
dec
hlt
push
stos
xchg
loop
jmp
ljmp
in
sub
cs
push
cli
mov
mov
mov
dec
sbb
hlt
and
dec
adc
xchg
mov
jno
and
stos
inc
mov
push
xchg
fcmovbe
in
scas
and
ja
dec
sbb
fisubs
or
inc
scas
push
dec
ret
jae
cwtl
dec
das
out
push
mov
aas
out
mov
xchg
dec
addr16
and
fdivrs
pop
lcall
lcall
pop
inc
push
and
push
mov
stos
push
inc
pop
cmp
cli
leave
push
xchg
jl
xor
clc
imul
xor
mov
jg
adcl
mov
movsl
xlat
out
xchg
mov
mov
sbb
lock
or
jp
push
ja
out
mov
outsb
fcmovnb
sarl
repz
pop
vmovupd
fcoml
cld
sti
popf
aad
mov
fldenv
iret
sarb
and
mov
stc
add
adc
clc
mov
cld
push
mov
inc
pop
popf
dec
stos
subb
lea
and
mov
push
pusha
outsb
cli
push
pop
pop
ds
xor
cmp
inc
ss
sbb
cwtl
xchg
call
js
adc
jnp
add
pop
mov
and
jle
jns
mov
xchg
mov
imul
fwait
orl
stos
xor
pop
mov
fwait
ret
mov
out
inc
leave
clc
test
inc
js
int3
sbb
pushf
push
dec
mov
fstps
mov
fnstenv
xor
lret
push
sub
pop
fmull
inc
sub
sbb
inc
push
pop
lea
or
mov
push
adcb
inc
jle
adc
add
movsl
xchg
imul
mov
sbb
popf
dec
test
sbbb
je
push
pop
fs
inc
into
lods
mov
cli
lret
lods
pop
mov
push
inc
shl
pop
mov
jecxz
int3
dec
mov
mov
mov
jno
mov
or
adc
sbb
dec
xchg
enter
aaa
popf
xor
lahf
mov
mov
jns
in
xchg
sbb
out
or
jge
push
aaa
frstor
push
les
mulb
hlt
fsubs
push
lcall
popf
pop
push
lahf
and
into
dec
pop
pusha
push
fwait
xchg
subl
sbb
out
sbb
dec
aam
popa
ja
pushf
or
pop
int
pop
mov
mov
or
stc
loop
outsb
repnz
sbb
push
jns
push
adcl
subb
inc
imul
fbld
mov
call
jbe
shl
push
pop
jbe
popf
das
outsb
xchg
ss
dec
xor
insb
lret
mov
mov
mov
in
iret
ja
pop
cs
jo
in
roll
xchg
jge
cmc
outsb
enter
stos
push
lcall
mov
jns
xchg
lea
test
push
dec
popa
stos
fldl
push
mov
punpckhwd
mov
and
push
or
xchg
and
lret
sub
dec
scas
addl
xor
mov
adc
movsb
addl
adc
cmpsl
add
cmp
fcompl
movzwl
adc
shll
mov
sub
push
mov
xlat
js
sahf
or
jns
pusha
lahf
mov
ret
push
and
jmp
sub
push
cmp
call
das
loope
dec
xor
sbb
fnstcw
pop
lret
sbb
lahf
scas
adc
sbb
xor
sbb
nop
cwtl
and
icebp
loop
test
xor
cmp
xchg
movsl
jae
clc
and
nop
cli
cmp
xor
and
scas
jmp
jecxz
jbe
out
in
sub
add
repz
out
xchg
push
bound
sub
shr
xor
jmp
mov
pop
aad
and
out
pavgw
leave
xchg
outsb
mov
adc
jnp
gs
shrl
add
test
push
push
mov
adc
stos
pop
dec
fnsave
div
ret
lcall
pop
xchg
je
mov
pop
cli
mov
dec
or
ficomps
in
inc
pushf
and
and
mov
ret
mov
lahf
adc
rol
xchg
insb
ljmp
cmp
repz
inc
pop
jl
xchg
mov
xchg
testl
leave
sub
packsswb
inc
sbb
icebp
jecxz
inc
push
insb
insl
pop
inc
leave
jmp
pop
or
idivl
sub
jge
bound
pushf
mov
dec
or
and
xor
and
into
push
lcall
ret
lcall
sbb
xchg
imul
inc
or
mov
fildl
adc
inc
pop
mov
xchg
push
rcr
dec
icebp
mov
fwait
andl
int
mov
imul
movsb
mov
rorl
mov
xchg
loopne
xlat
inc
in
dec
out
sub
int3
push
daa
pop
sub
ds
xor
into
test
pop
xor
lock
cmpsl
lock
jbe
dec
divb
pop
lahf
push
mov
icebp
fildll
sbb
xor
lds
fmul
aaa
push
mov
mov
pusha
gs
je
lea
cmp
dec
das
mov
jns
popa
hlt
pop
sbb
dec
push
aam
clc
sbbl
xor
xchg
add
mov
imul
jmp
xchg
push
add
scas
orl
and
cld
in
into
sub
rcrb
aaa
daa
push
ret
cwtl
fstpl
push
pop
lahf
mov
ss
xchg
or
in
xchg
mov
aaa
in
add
insb
pushf
bound
dec
xchg
dec
xchg
sahf
push
subb
sub
xor
lods
adc
and
xor
pop
mov
in
shlb
cli
int3
add
and
add
xor
and
push
adc
inc
sbb
add
mov
leave
xchg
cmp
mov
or
fucom
jecxz
and
sbb
jae
dec
mov
dec
pslld
sahf
jp
aad
xchg
popf
in
mov
movsb
aam
cmp
stos
iret
push
movsl
cmp
xchg
cwtl
lret
mov
cmpsb
rorb
dec
pop
js
lret
popa
jge
add
mov
ficompl
jnp
dec
push
loopne
testb
aaa
pop
insb
xchg
pop
aas
repnz
dec
arpl
enter
loop
sahf
dec
inc
mov
sbb
in
mov
pop
jp
testl
stc
push
fisubrl
adc
mov
jnp
sub
enter
es
test
in
push
push
add
notb
cmp
mov
fs
or
push
mov
sub
lret
gs
call
ret
push
mov
push
in
xchg
mov
mov
aad
or
ret
int
xchg
stc
lretw
fisttpll
mov
xor
dec
data16
shl
lods
stos
dec
mov
mov
fidivs
pop
pop
sub
xchg
push
push
call
addr16
enter
adc
xchg
jns
filds
pop
cli
icebp
pop
dec
je,pt
inc
outsb
das
test
xor
lahf
dec
sub
pop
adc
loop
mov
cmpl
cs
xor
mov
test
test
fcmovnbe
mov
aas
sub
jp
jae
cmp
js
ret
mov
inc
sbb
jmp
lea
cmp
pop
jle
adc
mov
insl
xchg
xchg
imul
fldenv
jge
cwtl
mov
jne
mov
mov
xor
jnp
inc
andl
mov
sub
and
test
push
ret
add
adc
in
jle
test
pop
inc
inc
rcll
pop
adc
outsl
jne
ljmp
inc
fsubrs
pop
fwait
inc
fdivl
inc
mov
cmpsl
mov
bound
mov
jge
push
scas
add
in
repz
in
inc
jge
pop
or
xchg
or
nop
mov
push
adc
repz
stc
mov
jnp
mov
mov
xor
jp
in
mov
sti
dec
fcmovbe
xchg
jb
fldt
fs
jmp
jbe
fidivl
je
testl
xor
cmp
and
rorb
fdivl
aam
in
mov
or
mov
inc
inc
sbb
pop
and
pushf
stos
push
or
fs
pop
add
cli
xchg
xchg
faddl
cwtl
sub
ds
popa
pushf
adc
jae
or
jae
sub
cmpsb
mov
loope
pop
call
aam
sub
add
push
sar
ljmp
and
aas
or
inc
mov
mov
in
cld
fsts
or
cmp
jg
push
in
fdivs
dec
in
or
sub
dec
cmp
mov
mov
jns
pop
xor
int
mov
leave
sub
push
add
pop
xlat
lahf
dec
cmpsb
lret
aam
shll
jmp
ret
out
js
sbb
add
out
or
add
dec
mov
mov
das
add
inc
mov
add
dec
mov
lahf
mov
adc
lods
xchg
in
popa
fdivl
jae
and
pop
ds
mov
jg
ret
push
xor
pop
gs
push
add
cmpsb
xor
movsb
xchg
test
sub
mov
loopne
hlt
xor
cmpsl
lea
out
push
cs
int
or
push
aas
add
sbb
xchg
or
jg
aas
loopne
outsb
imul
pop
pop
in
sbb
bswap
mov
shlb
inc
into
rcrl
in
sbb
nop
repnz
ret
sub
fsubrp
rcrb
pop
insb
aaa
clc
dec
mov
push
push
mov
cmp
aaa
xor
in
pusha
lahf
pop
stc
sbb
pop
and
jge
add
fldenv
add
in
fnsave
cwtl
ljmp
mov
adc
lea
sub
stos
cmp
mov
test
rcrb
flds
vmread
dec
and
movl
aad
mov
mov
inc
dec
into
jne
push
add
mov
cs
push
and
testl
icebp
jge
jp
push
or
popf
hlt
pop
icebp
xor
pop
mov
dec
jp
jmp
xorl
xchg
and
push
cmp
test
mov
pop
int3
popf
loopne
aam
scas
outsl
lods
pop
into
test
movsl
mov
insb
jo
lock
lods
lods
test
sbb
or
push
sbb
pop
out
into
mov
mov
addr16
or
fwait
and
xchg
add
fdivrs
rorl
cwtl
pop
loope
stc
jnp
dec
popa
inc
out
hlt
xor
jecxz
adc
and
xchg
mov
xor
sub
cmpsl
and
jo
mov
cli
addl
push
sar
lcall
jge
rcr
cmpsl
sub
sbb
mov
jae
lcall
mov
scas
call
loopne
jecxz
push
mov
stos
cmpsl
mov
jns
mov
mov
adc
mov
or
cmp
nop
hlt
or
pop
and
add
fstpt
sbb
mov
sahf
push
push
stos
ret
testb
push
mov
imul
pop
xorl
jb
add
mov
and
jmp
icebp
cmp
decl
adc
and
in
push
lret
inc
aas
orl
mov
sahf
aad
cld
scas
inc
fs
xchg
dec
lods
sbb
add
jmp
sub
jl
push
add
adc
mov
test
pop
pop
in
xor
jg
push
mov
xor
xor
jmp
movsb
add
pop
imul
pop
mov
jnp
js
jnp,pt
pushf
jae
xor
lods
dec
sbb
cmpsw
mov
mov
or
in
outsl
push
mov
out
jnp
inc
imul
xchg
ljmp
pop
adc
mov
leave
xor
cmp
aam
sub
daa
xchg
mov
movsb
sbb
lahf
cli
xlat
into
jl
inc
fs
leave
inc
negl
jne
sub
pop
cwtl
cmp
add
scas
movsl
or
or
aam
jg
push
test
or
arpl
sbb
icebp
dec
cld
cmp
sub
xor
and
inc
xor
lret
jp
out
mov
cmp
xchg
jmp
test
iret
int3
mov
add
cs
push
jle
pop
adc
dec
xchg
stos
out
insb
lods
inc
je
loopne
daa
ljmp
jb
arpl
cmp
sarb
je
pop
ds
mov
repz
mov
dec
pop
test
enter
xchg
in
addl
pop
ljmp
and
adc
call
dec
loope
pop
sbb
into
lods
push
mov
std
setnp
andl
bound
int3
add
nop
pop
leave
sub
daa
hlt
lret
aad
loopne
jle
dec
jge
jg
pushw
call
mov
xor
fistpl
sbb
push
sub
xor
ljmp
ljmp
pop
push
inc
mov
jecxz
ljmp
loop
sbb
xor
int
inc
scas
fisttpll
or
xchg
or
adc
push
test
subl
test
outsl
daa
xchg
xor
push
or
cmc
inc
notl
adc
mov
adc
es
adc
mov
fwait
shrb
pop
or
idiv
and
mov
hlt
stos
sbb
imul
push
pop
lock
leave
in
pop
scas
loopne
push
pop
or
xor
dec
js
out
or
fiaddl
xor
lea
sbbl
mov
stos
push
dec
repz
or
adc
out
mov
inc
cmp
fs
mov
ja
lock
shlb
into
test
cmp
xor
sub
adc
inc
jl
jno
jne
and
inc
std
stos
loope
sahf
xchg
leave
stc
subb
jbe
cmp
data16
push
sub
push
xchg
ja
mov
imul
inc
cs
rorb
sub
mov
fcoms
mov
mov
mov
jb
cmpsl
repnz
aaa
jecxz
sbb
cmp
adcb
jns
push
cs
push
cmp
jp
mov
xor
jge
xchg
movl
stos
push
inc
fildl
aam
jns
push
dec
popa
aaa
arpl
sbb
das
es
pop
sti
ss
sub
test
add
adc
pusha
pusha
sub
push
aas
dec
mov
sti
nop
mov
cmpsl
mov
rcr
mov
ss
xchg
dec
push
pop
xchg
scas
lds
arpl
imul
enter
push
mov
add
fldt
sub
adc
adc
push
pushl
imul
lods
sub
lds
mov
sbbb
or
xor
and
les
les
popf
dec
jg
jle
and
mov
mov
mov
adc
mov
mov
pop
js
mov
push
js
sbb
push
in
push
pushf
sbb
push
shrl
outsb
mov
dec
dec
pop
jle
es
xchg
hlt
mov
dec
mov
jg
test
mulb
mov
fdivrl
cvttps2pi
cmc
push
pusha
mov
push
xorb
call
or
add
jbe
clc
lahf
cmpsl
lock
mov
xor
ljmp
int
dec
test
pop
sbb
in
aaa
add
jbe
in
sub
std
lock
push
repnz
das
es
push
mov
inc
pop
lret
inc
sarb
cmp
sub
xor
ljmp
sarl
inc
rolb
add
lea
inc
sar
loope
jns
add
loopne
in
out
imul
sub
mov
repnz
sub
add
or
outsl
add
neg
sbbl
rorl
mov
xor
xor
xor
mov
fdivrl
shlb
sbb
mov
mov
insb
mov
push
ror
sbb
xchg
adc
mov
jmp
and
dec
pop
data16
inc
imul
fwait
add
mov
dec
and
pop
sub
lds
loop
xchg
movb
mov
jbe
jecxz
in
inc
in
ret
popf
loop
cli
ret
xchg
sub
dec
sub
idivl
in
cmpsl
inc
out
test
out
add
loopne
and
mov
sahf
lret
add
icebp
xchg
mov
imul
loopne
iret
cmpb
stos
dec
sub
pop
dec
nop
cmp
rol
das
and
adc
inc
mov
push
or
push
sbb
add
cmp
int3
mov
jb
stos
inc
mov
data16
enter
cli
mov
mov
push
aas
int3
hlt
xchg
js
jbe
pop
dec
lock
iret
cmp
mov
imul
rcr
add
fwait
imul
pop
shrb
xchg
mov
or
xor
inc
add
sbbl
bound
jmp
and
lret
adc
addr16
ljmp
scas
push
je
pop
jmp
aas
negb
inc
dec
xlat
xor
daa
ja
or
sub
add
insb
nop
sub
std
pop
xchg
arpl
outsb
test
add
lcall
jb
lret
mov
mov
lods
andl
pop
cltd
sbb
mov
mov
cmpsl
imul
push
mov
cmp
pusha
xor
rcl
inc
leave
int3
rclb
lock
data16
ret
mov
test
lahf
xchg
ret
in
and
aad
int3
sbb
add
scas
dec
adc
pusha
dec
popf
cmp
stc
mov
jl
adc
lret
inc
xchg
xlat
jecxz
loopne
les
faddl
pusha
mov
cmpsl
dec
shrl
inc
bsr
adc
push
pop
add
lods
push
add
test
adc
lret
xchg
mov
cmpsl
add
add
negb
inc
repnz
pop
in
inc
mov
inc
push
arpl
and
test
bound
fneni(8087
pusha
sahf
mov
mov
push
pop
jmp
movsb
ja
imul
movsb
jnp
dec
xor
add
imul
sbb
ror
cs
and
mov
add
mov
jge
xor
jbe
jnp
sbb
xor
rcl
outsl
call
pop
imul
fucomp
jp
lea
aam
fcomps
call
add
or
shlb
mov
push
sbb
mov
dec
pop
dec
popf
xor
mov
sbb
mov
rol
push
cmpps
loope
iret
mov
sub
and
adc
sti
or
je
fldl
cmp
lret
outsl
cmp
or
sbb
and
jg
mov
mov
cmpsb
ja
adc
push
rorb
lock
mov
add
pop
mov
and
add
pop
lret
lcall
xor
mov
fidivrl
ret
xor
pop
test
xor
insl
insl
jg
neg
das
xor
dec
pusha
aad
pop
push
push
xor
mov
mov
jp
imul
in
invd
int
push
cs
lret
xchg
mov
or
push
jno
out
xchg
mov
and
aad
push
add
push
push
adc
fbstp
lea
mov
xchg
adc
pop
leave
mov
aam
inc
adc
clc
pushf
mov
cmpsl
sbb
jbe
xor
dec
sti
loopne
adc
ficomps
dec
arpl
lock
sarb
ret
xchg
hlt
shr
sub
ret
add
xchg
mov
adc
mov
inc
data16
cmp
pop
cld
jle
lock
push
scas
adc
xor
push
inc
decb
push
xchg
sbb
clc
loop
call
rcr
test
insb
out
rcrb
lods
xchg
inc
daa
dec
inc
dec
mov
jge
mov
push
fadd
or
cmp
fbstp
xchg
insl
or
loop
push
xor
adc
mov
push
mov
jle
insb
jae
int3
adc
stos
ds
js
clc
loopne
mov
inc
dec
xor
int
lret
sbb
jp
pop
shr
scas
repnz
pop
xor
jmp
loope
js
aaa
les
mov
mov
push
nop
add
xor
dec
push
or
in
repnz
jo
pop
clc
add
pushf
in
addr16
cmpsl
adc
std
cli
cltd
xor
cmpsb
push
or
push
test
mov
ja
js
lods
xlat
gs
lret
mov
lea
push
mov
mov
xchg
xchg
push
jp
xchg
mull
out
fisttpl
xor
popf
pushf
fidivrs
xchg
or
imul
nop
push
cmp
lahf
not
push
repz
insl
fdivrl
sbb
add
mov
pop
xor
sbb
ret
repnz
add
ljmp
mov
outsl
mov
sbb
jge
or
shlb
imul
testb
addr16
mov
push
inc
in
cmp
movsb
push
imulb
or
orb
in
xchg
mov
lods
cmc
mov
xor
and
clc
insl
pop
cwtl
popf
insb
xchg
loop
test
or
or
dec
loope
out
ja
lret
mull
lods
cmpsb
sbb
push
mov
rcr
push
xchg
lea
jo
pop
es
push
scas
jl
sub
mov
ficompl
inc
outsl
stc
inc
addr16
mov
dec
stos
mov
dec
or
xor
rcrb
lcall
jbe
repnz
cmp
xor
push
inc
push
inc
cmp
scas
xor
or
add
add
fsubs
cld
mov
xchg
add
sub
stc
mov
cwtl
xor
ljmp
mov
andb
inc
adc
cwtl
sub
aas
mov
or
nop
mov
xor
out
pop
and
push
dec
mov
pop
bound
aaa
insl
in
and
fnclex
mov
bound
pop
shrl
je
jns
pusha
inc
xchg
xlat
jne
pop
ret
cmpsl
sbb
std
inc
push
add
decl
loop
pushf
or
push
and
pop
mov
mov
outsb
je
jmp
stos
xor
out
mov
mov
xorl
cmp
xor
or
or
icebp
cmc
or
fs
rcrl
cmp
dec
add
xorl
lock
mov
xor
sbb
and
push
mov
cmp
mov
jecxz
data16
jnp
icebp
sub
gs
mov
xor
int3
or
lods
mov
in
into
jmp
add
std
add
jge
stc
xchg
cmpsb
xchg
sub
xor
pop
sbb
sbb
cmpl
in
xchg
lock
int
mov
inc
sbbl
outsl
fists
cltd
add
into
fsubrl
cmp
repz
adc
gs
pushf
aam
sub
jnp
or
inc
pop
pop
xor
and
mov
sbb
shlb
mov
testl
icebp
and
pop
insb
cmp
adc
jnp
testl
add
pop
adc
mov
sub
std
cli
push
sbbl
jg
cmp
repz
shll
outsb
mov
aaa
jmp
insl
fs
adc
test
inc
aam
fisttpl
add
adc
xor
mov
fs
pop
lock
inc
cwtl
movsb
pop
loop
xchg
dec
repnz
xchg
sub
lods
pop
dec
inc
xchg
mov
es
outsl
outsl
pushf
pop
insb
lods
and
scas
mov
push
xor
push
pop
adc
mov
pop
in
sub
inc
lods
pusha
xchg
lods
pop
mov
xor
push
loope
fiaddl
pop
xor
cltd
cmp
repnz
cmp
es
enter
ja
sbb
into
scas
sbb
xchg
mov
call
adc
cld
fidivs
mov
adcl
rclb
xchg
gs
xchg
les
inc
popa
xchg
xor
mov
flds
fs
adc
les
and
dec
pop
mov
jbe
in
sti
test
mov
jns
xchg
cwtl
mov
mov
sub
int3
or
outsb
ss
lock
cmpsl
cmp
mov
stc
lods
jg
jmp
mov
stos
insb
test
mov
lret
aam
cmpl
aam
das
pusha
dec
cmp
ljmp
stos
mov
push
and
sbb
mov
or
ret
adc
pop
or
sbb
inc
jle
xchg
js
data16
lahf
xchg
aad
nop
aas
push
xlat
cmp
pop
adc
or
mov
xchg
xchg
jecxz
fisubs
fdivrs
mov
es
push
mov
repnz
add
push
ja
xchg
jecxz
loope
dec
push
adc
test
daa
call
ret
into
repz
cmp
sub
pop
sub
int
xor
xchg
mov
mov
jno
adc
or
and
or
loopne
mov
fcoms
data16
loop
and
je
push
mov
fisttpll
sub
sti
adc
sub
adc
xchg
gs
insl
scas
or
movsl
sub
sbbb
in
cmp
and
out
dec
cmpsb
cmp
mov
outsl
push
xchg
cmc
mov
dec
xchg
xchg
into
test
xor
ljmp
arpl
inc
pop
push
add
sub
out
flds
xchg
sub
push
mov
pop
sbb
int
and
dec
test
enter
loopne
insb
movsl
lret
or
mov
inc
lret
sbb
pushf
sbbl
popl
push
mov
xor
or
sbb
dec
jno
jno
ret
int3
xor
ljmp
hlt
fdivrl
adc
xchg
sahf
jge
sub
or
ds
jmp
fisttpll
arpl
ja
fldt
lods
imul
adc
sub
movsl
into
xchg
daa
xor
popa
sbb
cmpsb
cmpsb
push
push
inc
adc
or
or
dec
push
mov
aad
push
xchg
xchg
mov
mov
lea
test
jp
rcll
adcb
dec
pop
and
or
xchg
push
sbb
sub
push
inc
movsl
push
xchg
pop
js
and
push
fwait
stos
ret
fmuls
xchg
add
add
xchg
add
insb
dec
mov
sbb
rcll
scas
pop
jl
sub
pop
rcrl
lods
into
fimull
mov
inc
insb
pop
inc
inc
mov
gs
inc
jno
lret
and
scas
jl
cwtl
cmp
adcb
js
mov
or
or
mov
jo
popf
jae
xchg
pop
dec
lock
lret
sti
push
mov
mov
popf
mov
push
push
std
nop
ss
rolb
jp
inc
lods
sbb
fisttpll
imul
cld
cs
xchg
mov
dec
adc
or
pop
rorl
cmp
and
testl
cli
pop
and
xor
mov
sahf
mov
add
sbb
mov
repnz
mov
adc
push
or
das
add
cmpsb
inc
aam
outsl
data16
fnstenv
rorb
dec
call
repnz
cltd
insl
adc
insb
push
jle
and
mov
mov
xlat
pop
mov
jl
or
inc
inc
add
jne
push
sub
cmp
repz
lret
pop
inc
mov
nop
test
aad
inc
or
hlt
pop
sbb
jg
sar
in
and
lret
adc
faddl
test
outsl
movsb
lret
push
push
test
aam
adc
movsb
hlt
adc
sarb
fnstsw
dec
push
js
fiadds
lods
loopne
mov
cmp
stos
xor
mov
fisubrl
pusha
loop
jns
xor
dec
cmp
fsubs
cmp
scas
test
fbld
mov
addr16
xchg
jo
sub
fisubrl
or
mov
js
int3
push
int3
inc
in
pop
negb
push
fwait
enter
sub
mov
jb
mov
stos
sahf
arpl
xor
lret
setl
adc
lock
sbb
lret
sub
add
and
inc
cmc
sbbb
jnp
adc
add
movsb
mov
sahf
dec
pop
loopne
imul
int3
sub
iret
pop
decb
shrl
jge
pop
popa
arpl
mov
rcrb
sbb
pmulhuw
cmp
insl
lea
mov
jno
imul
fisttps
cmp
add
push
sub
test
rcr
inc
fbstp
arpl
xchg
jmp
sub
icebp
and
popf
insl
ret
pop
mov
shll
leave
inc
decb
sub
mov
repz
xchg
cltd
adc
and
sbb
xchg
mov
jmp
movsl
cmpsb
jge
dec
mov
and
cmp
daa
in
sahf
movl
xor
jnp
pop
loop
scas
clc
jmp
mov
in
sbb
or
aad
imull
xchg
jmp
loope
mov
lret
ret
inc
xchg
fnstsw
cmp
dec
notb
clc
int3
call
shll
fisubrl
out
dec
push
xchg
in
fwait
mov
or
dec
push
xchg
jg
mov
int3
mov
pusha
xchg
xor
fadds
mov
jmp
daa
xchg
or
aam
xor
dec
imul
add
mov
cs
dec
pop
sbb
push
dec
sbb
icebp
std
fsubrs
ret
nop
jge
xchg
sti
dec
cltd
sub
push
data16
rorb
inc
xchg
or
xchg
pop
add
push
inc
xlat
lret
out
shr
ret
rclb
shrb
repnz
pop
cmp
push
int
adc
lods
das
loop
mov
jns
mov
dec
outsl
popa
pop
ljmp
pop
mov
mov
xchg
fisttpl
cmpsl
pop
jle
insb
mov
adc
xchg
mov
inc
jmp
pop
jmp
test
push
mov
ret
jno
and
cmp
cmp
inc
movsb
fadds
loopne
loopne
pop
and
lret
inc
fcoms
adc
push
insb
mov
enter
add
rcr
xchg
and
sub
mov
dec
sub
stc
or
mov
cmp
sub
fsubrs
lea
lock
add
icebp
sub
fstl
mov
mov
push
xor
cs
xlat
jae
pop
adcl
and
inc
pop
push
or
cvtpi2ps
xor
jg
push
and
nop
adc
pop
pop
adc
in
dec
push
mov
and
xchg
push
inc
imul
orb
jmp
loop
add
sarb
fistps
mov
inc
mov
addl
lret
xchg
int
sbb
xor
ret
sub
push
subb
inc
mov
or
inc
outsl
es
flds
push
mov
mov
sbb
pushf
repz
repz
pop
fdivrl
inc
fnstcw
adc
fnstenv
jl
ljmp
lahf
fcmovbe
jmp
jae
fcmovnu
jo
pop
fwait
jnp
inc
xor
jnp
pop
gs
add
mov
sbb
xchg
xor
jg
push
ss
inc
cmpsb
inc
subl
jp
lret
push
outsb
inc
inc
pop
mov
add
xor
mov
jnp
imul
xchg
aad
fisubl
jmp
cli
in
imul
outsl
pop
repz
push
ljmp
sbb
scas
jo
or
ret
rcrl
sbb
mov
mov
xor
sbb
insl
pushf
and
lods
dec
mov
add
cs
pop
out
in
add
shll
test
xchg
aaa
sub
fs
push
jnp
insb
mov
test
dec
into
pushw
jl
pop
fnstcw
in
mov
fst
jbe
or
push
mov
shr
xchg
jno
jo
pop
lock
bts
sbb
out
test
jecxz
js
mov
subl
ss
inc
mov
adc
test
iret
xchg
sub
inc
cmp
or
xchg
mov
ret
fstps
repnz
or
fs
leave
scas
mov
test
addr16
lods
int
fcomip
aaa
or
push
pop
push
lds
dec
sahf
addl
subl
test
scas
add
mov
lret
or
fisubl
icebp
mov
push
aad
icebp
and
insl
xchg
fnsave
adc
push
push
insl
inc
imul
lret
andb
movsl
pop
sbbl
stc
dec
mov
test
mov
xchg
stc
pusha
sbbb
sahf
es
push
outsb
and
stos
rcll
insb
mov
sub
push
movsb
es
inc
ret
arpl
xor
sub
xchg
scas
and
push
sbb
es
mov
or
jmp
or
fmuls
ds
mov
mov
lcall
xchg
sbb
xchg
sbb
lds
ror
add
pusha
aas
xor
stos
cli
in
inc
sub
jns
fucom
jb
mov
dec
mov
shrl
cltd
cmp
xchg
out
cmpb
push
out
mov
jnp
inc
and
cmc
test
fldcw
jmp
cmp
or
arpl
dec
push
jl
mov
popl
std
inc
int
aaa
pop
aas
nop
push
test
popf
mov
push
loop
cs
das
jg
add
jecxz
push
popf
popf
and
mov
inc
mov
ret
cmp
adc
sub
xor
push
stos
or
mov
pop
imul
pop
fisubrl
loope
pusha
aam
movsb
gs
xchg
or
and
cmpsl
fwait
adc
cmc
repz
movsl
rorl
adc
mov
push
std
xchg
negb
mov
cmp
mov
fistl
jg
mov
mov
and
jle
repnz
je
orl
int3
mov
sub
or
push
and
ds
mov
das
adc
inc
mov
mov
stos
cmp
push
shlb
xchg
adc
ja
cltd
out
je
xchg
cld
mov
mov
gs
xor
cmpsl
push
cmp
lcall
in
jns
or
push
dec
call
add
adc
cmp
enter
jnp
jge
push
sbb
jno
jbe
dec
iret
inc
mov
rcrb
inc
mov
subb
mov
sub
cmp
pop
test
xchg
push
pop
enter
daa
mov
inc
ljmp
push
push
icebp
scas
mov
cwtl
in
or
es
je
in
and
jmp
mov
rcrb
inc
scas
xor
out
jl
repnz
jl
iret
mov
in
cmp
ss
inc
adc
pause
mov
bound
and
pop
fcomps
ljmp
je
insl
lahf
xchg
mov
sub
adc
insb
ljmp
lods
push
add
sbb
mov
add
cmp
jno
fstps
jae
adc
fldcw
push
out
in
fsts
or
mov
es
push
rorl
jo
or
mov
vxorpd
pop
sub
or
cwtl
clc
xlat
in
stos
or
fldcw
dec
pushf
shlb
mov
fcmovu
out
add
nop
push
shl
imul
js
sub
popl
sti
jl
jmp
add
in
insl
stc
push
popf
icebp
cmp
xchg
xchg
pop
cmpsl
dec
fdivrl
lret
cmp
lahf
sbb
xchg
xchg
mov
std
sbb
cmc
push
push
rclb
mov
and
and
fs
lods
push
sbb
sahf
cmp
mov
cmc
mov
andl
pop
or
test
pop
push
lock
pinsrw
mov
test
filds
outsb
mov
ss
cmp
fstpt
clc
int3
jl
mov
cmp
dec
inc
mov
movsl
xlat
xchg
cwtl
jp
pop
imul
fstpt
mov
sbb
pop
out
loopne
add
idivb
into
sub
les
imul
inc
leave
push
cmc
mov
xchg
test
mov
mov
mov
xchg
fprem1
jb
aaa
loopne
loop
out
push
sbb
cs
testb
lret
mov
lret
sti
stos
shll
fstpt
aam
mov
scas
xor
fsubrl
pop
inc
enter
adc
push
mov
cmp
popf
imul
jns
jne
adcl
sub
jge
lock
push
es
jb
outsl
jge
pop
xor
ret
xor
pop
iret
add
mov
lds
movb
int
jne
rclb
jecxz
jno
add
fdiv
xlat
sub
sub
inc
test
or
inc
insl
push
add
mov
enter
cwtl
insl
mov
aam
mov
add
inc
insl
cmp
mov
dec
es
dec
movsb
lods
xchg
and
pop
rol
push
fmuls
push
mov
and
gs
lahf
pop
or
loopne
mov
dec
push
aaa
jp
lahf
fnstsw
fdivrl
add
pop
xor
xor
pop
clc
mov
mov
mov
pop
je
mov
fldl
js
popf
sbb
mov
push
sub
and
mov
or
mov
mov
cwtl
into
sub
cmp
pop
stos
xchg
test
pop
jbe
mov
pop
testl
mov
into
mov
adc
mov
xor
and
xor
aad
push
xchg
pop
jo
repz
xchg
enter
mov
pop
sub
add
pop
fdivrp
or
sub
or
stc
inc
jns
pop
out
cmp
xchg
jge
and
or
lahf
stos
arpl
inc
pushf
lea
daa
scas
jp
movsl
out
push
add
adc
mov
sti
dec
cmp
sub
mov
xchg
push
rcrb
outsl
push
int
mov
loopne
mov
sbb
repnz
mov
adc
loop
sbb
mov
addl
adc
icebp
les
add
insl
xchg
push
jb
fwait
pop
and
test
fsubs
pusha
fisttpll
push
loop
cmc
cmp
out
jg
xor
xchg
das
enter
lahf
push
insl
mov
sub
sub
jmp
inc
rol
cs
jge
jmp
cmpsl
es
mov
dec
ja
js
jle
lods
movsl
sub
fiadds
dec
mov
imul
mov
cltd
adc
inc
push
testl
sbb
inc
stos
inc
cmpsl
push
dec
sbb
sub
inc
adc
sbb
mov
dec
add
fistl
add
or
or
or
lret
scas
leave
and
mov
in
sbb
std
lret
mov
scas
inc
pop
mov
push
mov
leave
jp
sub
fistpll
lret
fwait
mov
scas
arpl
cmpsl
idivl
out
cwtl
or
xchg
jbe
mov
adc
inc
mov
int3
aaa
pusha
and
mov
jge
mov
not
js
test
mov
xchg
xchg
dec
xchg
pushf
jmp
or
pop
imul
push
psubb
inc
mov
sub
fcomip
loop
mov
adc
xor
mov
pushf
xor
jle
aas
and
inc
cld
imul
jmp
push
mov
dec
iret
adc
push
push
in
mov
and
jp
sbb
and
xchg
shlb
pop
mov
jmp
bound
mov
fadd
aam
or
imul
adc
mov
adcb
movsl
adc
sti
pop
push
mov
fucomi
iret
mov
mov
xchg
das
push
mov
scas
ljmp
add
je
pushf
mov
out
jecxz
sysexit
test
cld
mov
sub
outsb
dec
cltd
ud0
jecxz
sbb
mov
in
pop
ja
adc
jg
fsubrp
int
mov
and
sbb
movsb
shl
ja
aas
sub
inc
fidivrs
fcmovu
jb
mov
stos
in
das
adc
out
jp
int3
jle
add
ja
cmp
cmp
cwtl
stos
and
idivb
push
jge
mov
test
and
inc
mov
and
and
mov
cmp
movsb
dec
pop
fstpl
sbb
dec
ljmp
add
call
add
push
sar
ret
jb
cmpsb
dec
xor
xor
mov
lcall
and
lcall
mov
sbb
in
pop
fisubl
aaa
std
mov
adc
or
sahf
xchg
push
hlt
mov
stos
cld
mov
test
jbe
int
sub
xor
lahf
xchg
ret
mov
in
xor
sub
xchg
mov
cmpsb
pop
jmp
cmpsl
mov
jmp
inc
cmp
mov
jb
xchg
daa
arpl
xor
xchg
pop
pusha
es
xor
dec
xorb
jbe
jmp
add
aam
add
push
dec
sub
into
in
dec
or
loop
stc
lret
daa
call
push
fiaddl
push
inc
into
mov
mov
icebp
add
adc
test
push
outsl
xlat
mov
pop
les
dec
js
or
mov
and
xor
stos
mov
icebp
cmp
popf
mov
into
cmp
cmp
push
jns
inc
idivb
nop
call
nop
enter
sub
jle
in
mov
or
loopne
ret
notb
push
push
xor
xchg
jae
or
add
vunpckhps
inc
jnp
sub
subb
pop
jge
xchg
push
shrb
push
xor
mov
outsl
cs
call
push
push
xor
lods
daa
mov
push
push
xor
cmp
mov
jp
cmpsb
in
leave
xor
lcall
loope
pop
jns
shll
inc
dec
repnz
inc
lods
in
pop
test
cmp
test
push
pop
lret
mov
nop
jle
xchg
inc
pusha
call
addb
scas
mov
mov
push
int
arpl
mov
dec
mov
lods
inc
es
sub
aas
out
sbb
inc
pop
hlt
inc
enter
pop
push
dec
mov
rolb
popf
cwtl
mov
pop
popa
sahf
dec
jg
lods
repnz
call
repz
subb
inc
pop
fsubrs
subl
aas
icebp
std
in
popf
sub
cmpsl
mov
adc
cmp
inc
adc
loop
xchg
lret
nop
sarb
aaa
add
out
fs
or
xchg
dec
adc
aas
mov
dec
fstl
sbb
mov
add
outsl
fbld
sbb
mov
mov
pushf
mov
fldenv
jecxz
movsl
jl
adc
repz
cmp
es
fcmovnb
sbb
inc
or
push
insl
ret
jp
mov
daa
pop
pop
or
sub
mov
sbb
and
test
and
lahf
xor
jae
imull
fs
js
mov
sub
mov
sbb
lahf
arpl
jno
jb
outsb
and
cli
cmp
inc
ret
lock
lcall
push
xorl
iret
stc
add
mov
push
fisttpl
adc
adc
popa
jbe
test
inc
cwtl
jmp
icebp
push
mov
mov
inc
loop
outsb
dec
mov
xchg
test
or
mov
aas
xor
pop
popf
xchg
fidivs
les
or
xor
jg
pop
sti
lods
lock
mov
scas
cli
sub
dec
mov
clc
das
xor
fwait
push
push
push
pop
adc
pushf
call
call
icebp
mov
aad
decb
sub
fidivs
mov
and
fnstcw
popa
push
or
push
je
stos
add
push
xor
jecxz
push
push
pop
or
jecxz
out
movsl
es
or
shrl
int3
loop
inc
xor
orb
inc
jb
xor
jnp
inc
repnz
mov
cmp
cld
dec
cs
filds
scas
mov
test
push
push
sub
loope
pop
daa
std
jmp
adc
push
mov
dec
push
repz
inc
mov
push
js
xor
bound
enter
rcr
xchg
dec
mov
dec
stos
gs
or
rcrb
xor
js
fdivp
xchg
shlb
int3
xchg
or
aas
insl
ds
loope
loop
dec
outsl
outsb
fcom
scas
dec
xlat
mov
add
aad
rcll
mov
jb
in
or
mov
fcompl
loope
test
jg
pop
imul
imul
aam
mov
mull
and
test
hlt
in
test
fwait
test
shlb
xor
das
pop
cmp
subb
lods
mov
fstpt
xor
mov
add
out
mulb
es
inc
fiadds
dec
pop
xorl
and
outsb
out
stos
cwtl
loope
inc
ljmp
int
or
jl
sar
push
mov
add
xchg
movups
jae
loope
jae
pop
outsb
or
jnp
xchg
mov
std
pusha
in
mov
je
sub
push
jns
jne
or
mov
inc
fiadds
mov
mov
cs
bound
aas
jnp
shl
jg
repnz
jnp
xor
dec
bound
fcomp
pop
mulb
push
jl
clc
mov
std
imul
push
shl
xchg
dec
stos
and
in
clc
fwait
cmpsb
das
jns
mov
inc
xorl
out
xor
movsl
mov
dec
mov
icebp
mov
jge
cmp
pop
dec
fwait
es
dec
jo
fldenv
push
lock
mov
inc
daa
rclb
imul
cmp
out
bound
dec
xorb
push
lods
jg
push
push
mov
fbstp
leave
repnz
mov
mov
mov
mov
in
xchg
sti
pushf
pop
dec
lods
mov
and
cltd
adc
pop
inc
mov
hlt
test
cld
mov
mov
push
sbb
repz
adc
or
cwtl
arpl
xor
xor
jnp
int
aam
stos
xor
push
pushf
sbbl
push
xor
stos
pop
mov
mov
in
xchg
xchg
jae
and
mov
cmp
or
xor
cs
or
repnz
jno
fcomps
addr16
subb
cmp
or
pop
stos
lret
mov
cmp
fwait
clc
sub
sahf
gs
lds
dec
bswap
mov
sbb
cmp
mov
mov
inc
sti
scas
in
cmp
adc
outsl
and
pop
mov
add
inc
jmp
out
xor
lret
ja
mov
lods
hlt
inc
sbb
rcrb
aam
lods
mov
xchg
gs
mov
out
outsb
fwait
js
add
out
insb
add
imul
pop
and
test
jecxz
in
scas
dec
mov
outsb
dec
cmp
add
mov
mov
lcall
pop
mov
sbb
inc
scas
mov
push
pop
and
jo
pop
pushf
shrd
leave
pop
and
test
xor
mov
push
dec
hlt
sub
add
aaa
stc
fwait
or
daa
sub
xor
cs
mov
pop
cli
xlat
dec
lret
dec
mov
ret
shrl
int3
or
xor
ja
pop
fs
pushf
out
cmp
es
push
push
jge
pop
add
jmp
lret
dec
bound
std
sbb
cli
jae
out
lea
jno
cmpsb
fimuls
and
or
mov
jnp
lods
xor
jl
pop
mov
lock
in
adc
add
test
ljmp
and
popf
mov
pop
xor
mov
jle
cmp
jbe
mov
addr16
test
sub
stos
mov
sti
xlat
test
nop
jge
fwait
movsb
lea
sti
xor
mov
push
xorl
icebp
cmp
ja
insl
out
push
and
xchg
jae
adc
jmp
data16
xchg
repz
loop
cmp
movsl
lret
test
fisttpl
cmpsl
loopne
adc
imul
push
sahf
lock
xor
aam
push
sbb
xor
xrelease
adc
addr16
in
sbb
fwait
stos
add
fdivr
lods
aad
and
push
sub
inc
cltd
subb
push
movsl
pop
xchg
dec
push
lods
mov
mov
and
xchg
in
cmpb
aaa
fwait
sub
or
loope
sysret
aas
or
jae
gs
ja
cli
add
mov
pusha
lcall
jb
iret
inc
fimuls
or
data16
lods
xchg
jl
mov
movsb
negb
pop
mov
xor
aaa
add
int
add
xor
sbb
mov
lods
jg
or
cmp
dec
testl
out
xor
ljmp
xor
rol
push
ret
cmp
loopne
dec
mov
push
push
insb
adc
pop
ret
add
hlt
xor
movsb
inc
xchg
jmp
test
add
imul
cltd
adc
pop
stos
bound
bound
sub
lcall
andl
loopne
push
add
out
ja
and
xor
pop
and
dec
out
cmpsb
mov
jne
into
pop
mov
add
inc
data16
into
rcll
adc
cmpsl
mov
test
sbb
inc
pop
stos
push
mov
daa
xor
int
dec
push
mov
mov
mov
inc
call
push
dec
cwtl
lret
cmpl
addb
cli
sbb
hlt
jb
pop
push
jno
imul
mov
pushf
inc
sub
iret
dec
lds
xchg
jmp
mov
sbb
and
dec
cmp
adc
stos
mov
das
std
stos
fdivrs
test
mov
mov
rcrb
inc
pusha
and
inc
xchg
fsubr
insb
mov
push
xlat
mov
cltd
movsl
cmp
xchg
je
mull
fnstenv
push
mov
cltd
sbb
enter
lock
fisttpl
mov
testb
loop
or
push
adc
aas
sub
lods
mov
or
xchg
mov
mov
xor
mov
jne
jb
cmp
enter
dec
aaa
ja
dec
int
push
stos
test
hlt
jecxz
or
insl
outsl
pop
push
ret
sbb
mov
popa
aad
nop
push
add
pop
mov
insb
inc
xor
or
out
ds
sbb
cs
push
adcb
fisttpl
sub
push
dec
sbb
repnz
adc
fcompl
push
fwait
scas
jb
adc
cmp
mov
js
sahf
jnp
into
ja
fwait
lock
mov
inc
stos
cmp
je
add
sbb
loop
call
mov
in
adcb
push
loope
xchg
lock
lods
jae
fistps
iret
mov
and
jbe
loopne
fwait
orl
leave
out
aad
push
loop
pop
and
or
testb
adc
push
sub
out
fdivrs
jl
mov
sub
out
js
dec
pop
xorl
fdivs
movsl
decl
movsw
pop
xchg
jmp
pop
jge
mov
rorb
pop
cli
mov
adcl
sub
arpl
sub
mov
or
pop
and
mov
test
iret
pop
dec
sbb
push
out
in
xchg
ljmp
shlb
cmpsl
or
int3
pushf
xor
dec
sbb
jp
lods
outsb
cmp
inc
and
rcrl
lcall
xchg
mov
mov
lahf
push
adc
fs
and
insb
pop
and
sub
lcall
sub
fmulp
cmp
jnp
dec
jns
ffreep
cs
cld
jp
sbb
cmp
cmp
ror
mov
sub
loope
leave
faddl
addr16
sub
shlb
lods
sbb
mov
cmp
jle
cmpsb
das
pop
sub
and
jno
inc
sub
aas
out
aaa
adc
ds
stos
rol
lods
int3
mov
pop
xor
xchg
pop
pop
test
ja
xor
push
add
insl
push
nop
jns
sahf
jb
inc
mov
sti
leave
pushf
inc
in
inc
inc
ror
jo
insb
dec
ret
sub
aaa
dec
fnstsw
lods
cmp
std
xor
sbb
add
xor
pop
add
or
addr16
jp
ljmp
jnp
in
mov
push
popf
xchg
xor
push
idivb
mov
and
cli
push
nop
sahf
dec
loop
imul
mov
fcoml
push
aad
insb
rorl
call
es
mov
push
loopne
jnp
jmp
aam
stc
sub
aas
daa
stos
lcall
insb
lods
stos
mov
push
sti
fdivrl
jae
lods
and
lret
push
jp
mov
and
lret
adc
popf
fsubs
push
add
cmp
test
push
rol
rolb
loope
aad
ret
repnz
shlb
pop
cmp
stos
push
sar
cmp
xor
clc
gs
adc
mov
sbb
mov
xorl
sbb
add
xchg
pop
aam
fwait
mov
jb
pop
mov
mov
js
adc
into
inc
mov
scas
jg
cltd
add
mov
pop
jge
push
pop
push
gs
daa
mov
fisubl
movl
dec
test
mov
cmp
cmp
add
popf
cltd
sahf
out
sti
or
shlb
enter
cmp
and
sub
sbb
adc
xchg
imul
jne
mov
mov
dec
jbe
test
lods
push
in
movsb
dec
adc
and
dec
push
push
test
jno
rcrb
clc
cmp
xlat
cmc
iret
sbb
or
dec
lret
sub
cmp
inc
notl
pop
jb
pop
inc
inc
neg
fwait
out
sahf
cli
pop
lea
in
sub
test
xor
jge
scas
popf
data16
sbb
mov
rol
and
decb
mov
inc
push
inc
xor
jno
negb
movsl
pop
push
fs
sti
sub
xor
into
aam
bound
lcall
clc
outsl
add
rcrb
mov
lahf
out
push
aaa
notb
cltd
xchg
in
stos
outsl
loop
movsb
sub
sarl
shlb
lcall
jnp
cmpsb
repz
mov
lock
popf
cltd
call
xchg
imul
addb
pop
add
xchg
and
and
out
xchg
js
xchg
sub
in
jmp
sub
inc
cld
fisubs
and
sahf
inc
sarb
jb
subb
aas
in
dec
lret
rcrb
sbb
pushf
shlb
cmp
in
xor
sub
scas
pop
cmpsb
sub
dec
mov
lret
jecxz
inc
arpl
add
icebp
xor
popa
mov
mov
rep
xor
add
sbb
add
jl
or
push
mov
dec
mov
cmp
inc
test
dec
call
ret
in
or
gs
push
jo
mov
sbb
dec
out
test
xchg
arpl
fnsave
jo
add
push
xor
sti
test
lods
popf
das
popf
popa
or
push
ds
dec
mov
sbb
push
sub
addr16
clc
sbb
mov
add
pop
pop
cmpsl
imul
add
imul
xor
mov
sub
xor
rorb
mov
jno
lea
call
pop
jno
pop
stos
leave
fmull
and
cmp
xchg
or
mov
jmp
aad
inc
push
inc
pop
lea
pop
std
lcall
pop
lret
lods
jmp
imul
repz
cwtl
inc
sbb
sbb
pop
jnp
pop
addr16
out
adc
dec
out
mov
into
loopne
push
jae
ljmp
es
ret
cmp
je
loopne
fiadds
leave
mov
cmpsb
lock
pop
clc
cmp
cmovp
divb
jge
lcall
or
xchg
or
notb
push
repz
inc
xor
xchg
xchg
add
insl
clc
inc
out
pop
fs
fs
inc
jmp
fadds
loop
loope
pop
fcoms
jae
scas
sarb
cmpb
mov
mov
xor
inc
mov
repnz
aas
mov
in
rorb
imul
inc
sets
loopne
jo
negl
push
lods
jne
xchg
lods
mov
nop
rolb
popf
mov
push
insl
cmp
jg
xor
test
sub
cwtl
aad
int
dec
dec
imul
inc
imul
js
sbb
cmpsl
inc
push
ficoms
sub
fdiv
rcrl
xchg
add
push
adc
les
ljmp
mov
bound
cmp
scas
adc
js
ss
aam
xchg
orl
fstl
add
stos
sub
push
sahf
adc
lret
inc
jb
cld
scas
xchg
jge
sub
mov
mov
fistpll
movsl
or
push
fsubp
lods
push
mov
and
daa
pop
cltd
xor
inc
push
fnsave
hlt
cmp
inc
stos
lods
xchg
xor
mov
mov
add
jmp
adc
lock
adc
cmp
subb
sub
lea
addr16
out
imul
sub
test
and
icebp
les
add
mov
jae
pusha
jg
fdivrl
sti
push
add
iret
mov
stos
xor
pop
mov
jb
mov
aas
ss
jbe,pn
sub
gs
call
xchg
push
mov
lods
loop
in
test
scas
mov
inc
mov
aaa
mov
cmp
dec
repnz
loop
lret
mov
dec
loop
fmull
andb
cltd
mov
xchg
int
test
sbb
jg
mov
je
and
leave
insl
mov
xchg
dec
adc
icebp
sub
cmp
lea
xchg
push
xchg
or
repnz
xchg
inc
pop
stos
lret
push
push
fsubr
xchg
pushf
lcall
cmp
aas
mov
adcb
mov
push
scas
sbb
movzbl
cmc
cmpsl
sar
scas
lods
out
cmc
js
jecxz
sbb
mov
mov
addb
out
push
inc
pop
dec
adc
fstl
outsl
ds
daa
add
hlt
pop
loop
inc
pop
pop
pop
jmp
pop
xorb
pushf
inc
xchg
mov
cli
mov
push
pop
sbb
mov
cmpsb
adc
mov
cld
sbb
repnz
inc
icebp
lcall
mov
inc
xlat
pop
lret
test
das
rcr
mov
sbb
and
mov
mov
sub
inc
leave
jo
mov
lcall
mov
rclb
les
add
xor
push
inc
mov
popf
test
dec
mov
cmc
jnp
imul
shlb
jle
push
jnp
scas
pop
cmp
sahf
push
int
and
data16
pop
lcall
cmc
sub
fisttps
sahf
and
sub
pop
jns
movsb
xor
loop
stos
jae
cmp
jno
jg
pmaxsw
xchg
adc
inc
testl
push
shrl
dec
call
adc
repz
jecxz
nop
xchg
jecxz
and
jo
and
add
in
push
into
pop
mov
mov
mov
aas
xchg
nop
mov
je
and
mov
std
xlat
mov
xchg
push
loop
inc
push
mov
sti
push
lock
mov
stos
movsb
mov
or
push
popf
xor
inc
das
cltd
pop
inc
or
pop
subb
loop
repz
pop
icebp
fwait
pop
xchg
mov
js
add
jmp
mov
mov
push
popa
ss
loope
and
iret
addl
push
lahf
test
arpl
inc
mov
add
xor
ret
mov
ss
ficomps
cmpl
fisttpll
push
stos
cmp
mov
nop
mov
inc
dec
sbb
xchg
mov
mov
push
inc
shrl
andl
hlt
mov
dec
push
mov
push
lds
adc
lods
mov
stos
mov
je
enter
inc
movsl
sbb
jmp
jle
sbb
fsubrs
pusha
mov
fwait
push
mov
icebp
jmp
jle
jg
into
shll
jmp
sub
dec
pop
add
add
stos
fisubrl
out
cmp
mov
in
dec
sub
push
mov
dec
jmp
sbb
arpl
out
inc
js
xor
lret
cli
adc
insb
jp
add
xchg
pop
push
outsl
fmull
fs
or
jo
sbb
or
rcl
dec
ja
aad
mov
or
test
in
bound
sbb
iret
lods
inc
mov
ss
pusha
outsb
rclb
sbb
push
jp
xchg
in
push
data16
aad
or
dec
inc
test
loopne
insb
dec
lds
sub
dec
mov
xchg
ret
push
imul
es
sbb
in
sub
push
popf
hlt
in
sub
je
mov
pop
outsb
leave
mov
leave
gs
jg
enter
pop
jno
mov
pushf
out
pslld
pop
sub
iret
icebp
lock
mov
test
outsb
add
xchg
outsb
scas
ret
sub
push
mov
cmpsl
inc
sbb
fs
pop
fldl
gs
inc
cmp
inc
insb
adc
fisubrl
xchg
arpl
shlb
data16
mov
inc
adc
push
ficompl
pop
repnz
insl
xor
popa
push
fmulp
xor
popf
mov
inc
aas
add
loop
es
sbb
pop
mov
inc
mov
cmp
subl
cmp
pop
rorl
stos
mov
ret
fucomi
add
sti
lret
adc
arpl
ss
scas
mov
rcl
jl
sbb
cltd
inc
lds
inc
daa
test
pop
movsb
mov
test
mov
rcl
dec
fimuls
je
push
inc
adc
or
sub
sbb
pop
fdivl
pop
cmp
sbb
jge
add
pushf
cmp
inc
jp
fcmovne
cmpsl
repnz
sbb
gs
jns
push
pop
mov
cmp
mov
mov
in
sbb
popa
sbb
push
dec
call
incl
insl
daa
jle
and
sti
push
inc
adc
and
adc
dec
call
fildll
dec
add
pushf
fistpl
cmp
and
shrl
fadd
xor
xchg
aas
push
mov
test
add
inc
jecxz
cmpl
push
insl
cltd
jge
push
xor
lret
cld
xchg
mov
xor
push
pop
nop
and
adc
gs
shlb
mov
adc
add
inc
sub
out
cmp
ds
outsl
cwtl
mov
xchg
inc
jp
inc
loop
jne
fs
dec
pop
cwtl
adc
test
ret
xchg
jns
dec
push
fimull
fcoml
mov
dec
icebp
clc
sub
inc
cld
clc
xchg
push
mov
dec
and
mov
lods
xchg
popa
jbe
push
fildll
out
sub
jne
mov
and
insb
jp
add
imul
js
out
push
cmp
test
mov
clc
and
lret
lods
xor
mov
dec
or
fsubp
pop
mov
xor
ror
mov
or
pop
mov
adc
add
pusha
in
imul
inc
inc
enter
sbb
adc
movsb
mov
push
xor
fimuls
incb
in
jno
mov
cwtl
mov
movlhps
inc
fcompl
lret
call
and
mov
pushf
ret
shl
jge
cmp
icebp
outsl
rcll
sbb
push
mov
pusha
pop
mov
push
sbb
aas
gs
sub
lcall
aad
fdivp
mov
sub
sub
addr16
pop
bound
ja
inc
fcoms
js
in
and
ja
pusha
sub
sbb
popf
push
sbb
cmpsb
mov
or
mov
stos
xlat
xchg
add
lahf
out
jb
or
adc
push
inc
fwait
pop
out
and
out
push
imul
pop
dec
mov
inc
push
mov
out
mov
idivb
mov
push
testl
shrb
push
or
adc
cld
fdivrl
stos
outsb
sub
add
cwtl
sub
out
lea
pop
mov
and
js
lcall
cmovns
and
or
mov
mov
sti
pop
std
std
add
jno
loope
test
and
xchg
jl
insb
xlat
popa
cs
int3
mov
cmpsb
xchg
adc
pop
mov
ljmp
jb,pn
arpl
lcall
sub
stc
push
mov
jl
rorl
stos
imul
jecxz
fmul
sub
std
repnz
xor
lods
pop
lret
sub
std
and
push
fiadds
into
in
sub
and
leave
ds
and
xchg
notb
enter
dec
movups
dec
mov
test
rorl
les
jnp
push
mov
js
sti
mov
stos
repnz
push
cli
les
popf
jbe
clc
nop
push
add
inc
lret
mov
js
push
mov
inc
sbb
iret
jae
sub
int3
jmp
loopne
test
xor
inc
fucomp
iret
xchg
mov
inc
jne
mov
stc
sbb
cmc
sar
std
in
or
jmp
sahf
out
mulb
test
push
pusha
jbe
inc
imul
movsl
sarl
insb
dec
aam
pop
pop
notb
stc
or
movsb
stc
adc
cmp
adc
ficomps
imul
xor
jo
and
fsts
popa
movsb
dec
rcrl
outsl
push
clc
mov
or
int
movsb
test
shlb
lret
pop
xchg
sbb
push
cmpsb
popf
mov
stc
decb
inc
mov
mov
and
jb
sub
push
mov
je
rcrb
and
clc
pop
std
test
sbb
dec
leave
iret
sub
xor
loopne
sbbb
inc
cmpsb
push
loopne
xor
and
in
ret
ret
push
jg
stos
mov
ficompl
es
push
pushf
xor
jne
push
xor
mov
cmp
mov
xchg
sti
or
adc
lea
int3
push
dec
mov
out
test
lea
fisttpll
dec
lods
int3
push
and
or
lahf
pop
cli
cmp
sbb
push
ja
pop
mov
sbb
ljmp
add
xchg
mov
loope
jp
sub
inc
aam
rcll
inc
daa
fisubs
add
mov
popa
nop
adc
mov
stos
add
insb
lds
push
mov
xor
jecxz
jmp
xchg
dec
aad
ret
aaa
pop
je
push
fwait
js
jne
push
idivb
test
in
rcll
push
adc
rorl
lea
xor
mov
mov
arpl
add
orl
mov
idivl
icebp
fwait
ja
xchg
cwtl
pusha
dec
xchg
xchg
lds
outsb
in
js
mov
dec
xchg
push
ficomps
cmpsl
outsl
or
xchg
or
xor
jg
jno
ficompl
mov
mov
mov
enter
adc
lds
es
mov
push
repz
pop
xchg
enter
lods
sahf
add
cmp
ss
loop
movups
mov
outsb
fsubs
arpl
mov
das
pushf
inc
inc
rcrb
mov
xor
inc
push
push
addr16
bound
in
lret
xor
and
mov
stc
mov
iret
stos
jne
hlt
add
mov
adc
std
pop
lods
add
mov
pop
sub
stos
lea
xchg
mov
or
push
push
push
sahf
ficoml
ss
and
idivl
insb
xchg
pop
xchg
movsb
cmp
mov
loope
or
imull
insb
sub
ficoms
lret
icebp
mov
xor
inc
iret
push
les
jae
push
pop
fstpt
insb
lods
push
rorb
test
out
sbb
mov
dec
aad
stos
push
fs
repz
dec
in
cmp
imul
cmpsl
addl
imul
inc
cmp
mov
jae
outsl
lods
jmp
lea
mov
lahf
sub
and
and
je
insb
mov
inc
mov
sar
push
cmp
sub
jne
dec
mov
data16
notb
popf
mov
repz
add
jge
or
ret
jne
and
sbb
rolb
movsb
add
xor
or
bound
sbb
or
push
dec
pop
and
sti
imul
adc
adc
dec
inc
xor
jno
mov
pop
shlb
int
mov
mov
inc
jno
add
jo
incl
mov
mov
mov
fcmovne
dec
les
cli
cmp
cmp
sbb
stos
adc
pop
xor
jmp
add
sarb
es
lret
fisttpll
and
inc
pop
and
dec
mov
insl
into
jno
in
aam
jmp
xor
cs
push
incb
jo
xchg
mov
inc
push
push
jg
in
int
xchg
cmp
inc
mov
lods
pushf
cvtpi2ps
movsl
push
and
in
sbb
sub
fs
and
test
aad
sti
add
fsts
fs
outsl
stc
dec
jae
fdivp
in
dec
cmpsb
xor
sar
lahf
lods
or
pop
aas
leave
pushf
xchg
je
cld
dec
cwtl
jecxz
dec
lds
clc
fcomps
sub
or
xor
iret
idivb
inc
lahf
out
mov
xor
ja
imul
imul
adc
icebp
mov
sbb
mov
mov
inc
rcll
pop
add
lahf
enter
lods
cmp
fsubrs
or
jmp
push
rcll
cmpsb
xchg
bound
xor
daa
cmp
adc
lds
mov
push
notb
arpl
push
sbb
sbb
sbb
inc
push
inc
js
in
sbb
orl
sti
push
lcall
roll
leave
sbb
pop
loope
adc
out
sub
xlat
imul
ret
rcrb
cmp
xchg
mov
mov
xchg
xchg
aad
mov
pop
mov
xor
cli
dec
xchg
leave
cld
fmuls
mov
jne
xchg
roll
or
fmuls
jle
call
iret
mov
scas
mov
rclb
xor
ret
mov
mov
in
mov
negb
mov
or
leave
adc
out
fldl
fiaddl
daa
pushf
mov
cmc
sti
pop
pop
fcomps
jbe
cwtl
push
pop
push
insb
dec
sub
dec
adc
sbb
ds
sbb
dec
ds
mov
data16
mov
mov
out
add
mov
adc
cmpsb
int
mov
mov
mov
out
cmp
jmp
les
dec
das
enter
lds
and
in
mov
xchg
out
in
xor
mov
jne
std
scas
hlt
das
add
and
lds
push
aas
xor
popf
mulb
mov
xchg
jg
jne
and
add
aam
xor
ds
test
cmpsb
mov
andl
mov
arpl
mov
xlat
xchg
pop
lcall
out
scas
loope
cmp
popf
imull
and
jo
into
mov
insb
movsb
js
jg
mov
push
lret
push
fs
int
ficoml
pop
pop
ja
mov
sub
lret
icebp
push
clc
lahf
jmp
add
faddp
loopne
insb
lds
loope
jl
push
xor
lcall
mov
push
test
add
cmp
imul
xchg
adc
cmpsb
mov
sbb
insb
jmp
out
xchg
dec
fs
iret
and
mov
sbbl
jns
xor
pop
mov
cmp
stos
mov
xchg
add
imul
sub
leave
das
cmp
jns
lods
add
int3
ret
ret
sub
cmp
test
hlt
pop
into
sbb
mov
scas
sbb
jnp
mov
sbb
inc
adc
sub
sub
xor
xchg
leave
stc
cld
fs
lcall
adc
in
and
pop
popf
sub
or
cmpsl
or
sub
daa
or
and
push
push
call
std
cmp
les
ret
push
or
int
sahf
mov
std
inc
ss
ljmp
scas
orb
jnp
hlt
fdivs
xchg
and
inc
jne
rcrl
outsl
or
pop
into
mov
movsl
ljmp
or
aas
jb
bound
jl
popf
jne
inc
mov
xchg
loop
ds
mov
cmc
inc
dec
dec
ucomiss
popf
xorl
imul
cmp
ror
popa
out
mov
sub
repz
push
inc
cmc
mov
fnstenv
and
into
lock
cmp
inc
out
mov
or
jl
push
cs
jle
cltd
loopne
mov
shrl
out
pop
push
jb
shll
xchg
pop
or
stc
movsb
push
inc
sub
add
scas
sbb
or
loop
jno
or
jl
test
push
mov
mov
and
inc
ss
ret
add
imul
push
mov
cld
in
aam
add
mov
push
loope
mov
cmpsb
lcall
nop
iret
or
bound
je
xchg
mov
shrl
lcall
popf
pop
std
ret
ret
mov
pushl
pop
in
out
in
jmp
jb
mov
pop
fstp
mov
dec
outsb
sahf
dec
mov
mov
push
out
pop
push
cmpsl
cvtpi2ps
shr
xchg
mov
call
push
fdivrl
cmp
push
pop
and
jo
out
bound
ret
mov
pushf
sub
insb
mov
repz
pop
loopne
pop
ss
divb
or
inc
adcb
jmp
dec
cmpb
and
sahf
outsl
dec
xor
cmpsb
push
mov
jnp
xor
add
int3
pop
ljmp
je
mov
cmp
cmp
push
std
lcall
mov
push
addb
data16
mov
stos
iret
and
aad
hlt
shl
sub
mov
rcrl
inc
push
sti
cmp
stos
push
cmp
mov
dec
and
mov
inc
inc
std
das
or
cwtl
mov
fsts
push
mov
inc
jge
mov
rcrb
in
mov
adc
add
pop
adc
mov
cmp
lea
loop
jg
out
cwtl
pop
jae
dec
rcrb
cmp
icebp
out
jmp
test
pop
inc
xlat
cmp
mov
lock
psrlq
mov
pop
add
mov
ror
xlat
loopne
cmpsb
adc
stc
lret
xchg
mov
or
insl
arpl
outsl
fcoms
ficoml
aad
adc
and
mov
pushf
lock
pop
out
lock
cmc
mov
aas
push
jecxz
sti
out
cltd
or
aam
sbb
sub
push
lret
mov
cwtl
jecxz
mov
insl
es
lock
movsl
add
faddl
cli
mov
xchg
cmp
sarl
xchg
push
inc
mov
and
adc
test
or
jnp
test
repnz
scas
dec
and
hlt
dec
addl
jbe
lret
ds
push
out
nop
mov
mov
mov
mov
mov
add
inc
test
popf
cmp
mov
loop
lds
inc
jno
in
popa
scas
jl
sbb
sub
push
loope
imul
pushf
xor
lods
stc
sub
dec
dec
sbb
das
jl
mov
add
add
pop
arpl
lock
xor
stos
ljmp
push
into
aaa
sub
fxam
data16
sub
popa
ds
in
rorl
out
push
jecxz
addr16
sbb
data16
sub
and
popa
jecxz
mov
jns
in
inc
bound
scas
mov
shrl
hlt
mov
pop
adcl
or
shll
popa
mov
cmpsl
and
shlb
sbb
stos
or
in
sub
adcl
int
call
xchg
add
sbb
xchg
mov
movsl
jo
test
mov
xchg
dec
xor
mov
cs
call
aam
mov
mov
jmp
pop
fdivl
pop
roll
test
lock
fidivl
pop
jne
adc
xchg
fnstsw
xor
mov
mov
sbb
mov
sbb
dec
fadds
add
ds
mov
dec
add
lea
icebp
cmp
pusha
add
sbb
out
or
jns
dec
lock
and
xchg
shl
lock
sub
bound
sahf
call
adc
pop
cmp
jp
daa
adc
js
inc
out
movsb
jo
in
mov
mov
push
jne
inc
adc
inc
and
cmpsl
jbe
ret
aas
jne
mulb
adc
adc
cmpsb
ja
stos
xor
cmpb
leave
popf
in
xchg
clc
fdivrp
lods
xor
pop
lret
xchg
aad
cmp
mov
mov
cmovo
xchg
mov
pusha
call
jbe
les
sbb
xchg
xchg
and
jae
andb
ud2
mov
and
leave
shlb
sbb
mov
pop
inc
and
shll
sbb
and
sahf
test
leave
xchg
pop
jg
or
pop
loope
je
pusha
and
mov
push
cmp
cmp
lea
and
mov
add
test
sbb
ljmp
ret
push
repz
shlb
mov
idiv
mov
loope
icebp
xor
in
push
push
leave
pop
jp
fistps
dec
sub
call
mov
push
mov
mov
scas
xchg
lahf
and
nop
movsb
sub
pop
pop
push
fildl
lea
gs
in
movsb
cld
xchg
jne
pop
jmp
cmp
xchg
int
fwait
dec
out
mov
mov
repz
mov
aad
cwtl
cmp
fidivrl
pop
arpl
xlat
push
inc
cmpsb
repnz
cmp
inc
dec
add
and
mov
inc
and
xchg
sti
sti
adc
subb
sub
cmp
xchg
rcll
fistpll
outsl
nop
int
ss
rorb
push
push
stos
add
nop
aas
mov
jp
jecxz
sub
cmc
cmp
cli
pop
enter
enter
cmp
xchg
fiadds
mov
je
in
pop
xchg
xchg
popa
dec
and
xchg
cs
out
sahf
push
jb
pop
add
ss
out
cmp
lods
or
jnp
xor
in
sbb
xor
ficoml
or
outsl
mov
jno
ja
jne
lret
xchg
test
in
jg
jbe
mulb
mov
sub
jmp
lock
ficompl
ficomps
lock
mov
test
xor
xor
or
movsb
push
jae
lds
hlt
les
mov
xor
popa
jl
pop
aam
popf
iret
enter
pop
mov
push
xchg
pop
clc
into
lea
mov
xchg
xor
lds
cmpb
rorb
test
lcall
add
bound
aam
aam
pop
dec
adc
pop
lcall
mov
mov
cmp
and
popf
jns
scas
adc
mov
xchg
aad
and
jb
jle
mov
xor
divl
in
dec
shlb
lret
into
xchg
dec
sbb
rep
loop
es
jo
xchg
notb
xchg
out
fucomip
push
lods
xor
mov
inc
fadds
dec
or
mov
pushf
mov
in
xor
rcrb
test
xchg
les
pop
pusha
pushf
out
mov
inc
jmp
iret
mov
mov
xor
or
mov
xchg
cs
bound
xchg
pop
ja
inc
addr16
pop
pop
sub
in
sbb
and
and
cld
cltd
sub
aam
outsl
aas
testb
sub
adc
pop
sub
scas
sbb
test
outsb
jp
mov
dec
inc
lds
lahf
or
out
dec
aad
sub
push
and
insb
shr
and
adc
mov
inc
cmc
sarl
lods
idiv
adc
in
outsb
dec
mov
jge
cmpsl
lds
push
cwtl
icebp
push
mov
jle
sti
test
fs
fldl2e
mov
psllq
xorb
outsb
mov
daa
jg
mov
sahf
ret
aas
cmc
mov
call
dec
ds
xor
fsubrs
mov
mov
pushl
shr
xorb
mov
ja
sbb
jle
roll
outsb
and
outsl
cmp
push
xchg
call
lret
lods
inc
pop
adc
cld
cmc
jecxz
mov
cld
fwait
es
popa
xchg
jge
and
adc
mov
push
jecxz
enter
aad
pop
pop
mov
push
cwtl
mov
cmpsb
lods
pop
enter
or
aam
dec
mov
fldt
adc
inc
inc
push
jg
lcall
cmpsl
nop
mov
lcall
out
or
sbb
mov
aam
addr16
mov
pop
and
les
pop
bound
frstor
pop
jp
test
add
enter
mov
or
scas
pushf
ljmp
lret
in
push
mov
sahf
lds
sub
test
jmp
inc
add
sub
push
fwait
sbbl
or
cmp
inc
inc
loope
clc
and
add
cmp
sar
cwtl
test
rol
jnp
scas
sub
jae
inc
push
jg
jno
dec
xchg
xchg
scas
and
mov
add
repz
pop
push
cs
daa
aas
or
clc
push
sub
or
lahf
push
mov
sub
and
xor
or
adc
mov
xor
mov
sbb
in
das
adc
pop
ds
repnz
inc
int3
pushf
push
data16
fbld
cltd
xchg
pop
xchg
pop
xchg
adc
xlat
lods
test
inc
lret
movsl
xor
jb
dec
out
ret
jne
dec
es
ret
push
cmp
adc
cmp
lock
fwait
movsb
jne
dec
pop
sub
mov
outsb
jp
jge
popf
stos
cmp
inc
and
lock
mov
adc
xor
and
add
sbbl
bound
ror
in
aad
and
sub
cwtl
ret
divl
mov
inc
inc
mov
iret
in
mov
and
mov
jno
mov
add
loopne
outsl
mov
jae
movsl
pop
rcll
jnp
bound
bound
std
stos
mov
fbld
dec
push
xor
aaa
push
jl
pushf
nop
mov
roll
jae
pop
jg
sbb
jl
iret
mov
cltd
mov
aaa
rcrl
bound
aad
in
xchg
dec
cvtdq2ps
add
dec
loop
cmc
add
xchg
mov
fidivs
jb
inc
add
loopne
lods
orl
data16
mov
jp
push
sti
mov
aam
gs
add
dec
and
aam
lahf
mov
lods
repz
push
lret
cmp
xor
shll
xchg
xor
sub
daa
xchg
or
jge
imull
push
sub
mov
dec
lds
add
inc
lock
mov
mov
cltd
out
into
cmpsb
push
xchg
mov
sub
dec
scas
in
mov
in
adc
lods
mov
leave
sbb
dec
mov
xchg
inc
outsb
addb
arpl
aaa
mov
cmp
sub
sub
arpl
jno
stc
push
add
pop
movsl
icebp
sub
push
loope
bound
dec
inc
mov
ret
aam
ret
xchg
cli
scas
fadd
jb
pop
mov
add
test
in
fs
imul
lock
jge
push
lret
xchg
jae
aas
dec
cmc
cmp
jmp
fisttpll
icebp
sub
or
push
mov
aaa
adc
or
shrl
mov
cwtl
mov
jnp
dec
clc
in
imulb
dec
xchg
adc
leave
xorl
lret
jmp
pushf
sub
cmp
icebp
mov
pop
icebp
sub
mov
and
jbe
outsl
sbb
sbb
mov
lock
dec
inc
lahf
push
pusha
ds
add
movsl
xor
push
in
adc
or
ljmp
push
adc
add
lret
cmp
icebp
sbb
iret
gs
inc
sub
xor
dec
fidivrl
mov
out
mov
insl
inc
xchg
stos
adc
clc
test
cld
pushl
xlat
iret
test
and
cmp
mov
inc
aas
cmp
call
std
or
or
lds
jb
clc
mov
int
sarb
sub
pushf
or
pandn
call
push
cmp
pop
data16
xchg
lret
xchg
adc
xor
or
jmp
fdivr
jmp
xchg
adc
or
sub
into
into
subb
inc
dec
ret
fildll
pop
and
imul
push
or
inc
dec
repnz
jp
inc
mov
inc
mov
pushf
pop
inc
test
nop
scas
iret
test
pushf
inc
pop
lcall
imul
fwait
inc
jo
pop
shll
aad
jb
imul
loope
mov
call
clc
call
sub
loop
shr
or
push
push
push
jp
cmp
dec
sub
or
sahf
icebp
sarb
out
sub
cmp
jo
jbe
or
dec
mov
cmpsl
sbb
push
sarl
into
mov
movsl
xchg
ror
je
adc
adc
lock
int3
aam
fsubp
push
jle
hlt
js
jbe
lea
pop
insl
out
lock
push
cltd
cmpsl
and
and
jae
je
mov
cli
sub
int3
outsb
xor
jae
adc
mov
stos
xchg
es
jo
or
cli
sub
insb
push
xchg
sub
add
mov
scas
push
inc
aaa
in
xchg
out
adc
leave
mov
push
popf
inc
lret
add
inc
mov
mov
push
clc
pop
fwait
cmp
scas
cmp
sub
xlat
fisubs
test
adc
cltd
sqrtps
push
call
aaa
call
scas
or
push
ds
push
orl
stos
sbb
jbe
outsb
out
testl
in
sahf
or
xor
sbbl
mov
popf
leave
stos
sub
into
mov
or
leave
mov
adc
fs
inc
loop
movsb
mov
lret
jge
sub
xchg
dec
pop
sbb
adc
arpl
arpl
fdivrs
jecxz
or
shlb
dec
sub
stc
pop
push
in
in
jp
jnp
std
and
test
stos
and
pop
test
inc
divl
xchg
imul
dec
adc
push
movsl
iret
cmp
insl
loope
jnp
cmp
or
inc
mov
mov
sub
rorl
test
leave
jbe
dec
dec
cmp
stos
cmp
mov
movhps
repnz
push
imul
lea
dec
movq
xchg
inc
cmp
push
out
je
or
push
testl
push
cwtl
fs
xchg
fistpll
mov
imul
shll
or
lods
lret
mov
jl
adcb
xchg
hlt
idivl
xchg
sahf
leave
repz
enter
dec
pop
int3
jmp
inc
xor
in
mov
aaa
fadds
jae
sahf
cwtl
add
xor
jp
add
test
loope
mov
mov
jb
leave
jmp
or
mov
push
aaa
dec
mov
aad
stos
stc
movb
add
jecxz
test
movsb
repz
cli
add
dec
clc
mov
sbb
sahf
scas
push
sub
test
jecxz
int3
sbb
pusha
xchg
push
add
loop
mov
push
adc
daa
lret
gs
push
mov
bound
add
dec
jne
movsl
and
inc
pop
xlat
sbb
test
inc
into
ljmp
inc
shrl
mov
in
inc
fbstp
add
sbb
sbb
loopne
xchg
lret
cmp
xor
ret
outsb
pop
mov
jo
nop
inc
adc
sub
cmc
pop
std
gs
popf
jp
ja
cmp
mov
cmpsl
popf
in
push
jo
iret
imul
sbb
out
and
idivb
cli
clc
pop
in
mov
add
mov
adcb
lds
dec
lahf
inc
idivl
pop
cs
stc
mov
cmp
adc
sub
jp
je
mov
mov
ja
fcoms
mov
ds
xor
arpl
add
jecxz
cmp
jecxz
loop
jbe
inc
lahf
lock
mov
fstps
es
fstpl
fildll
xor
dec
aaa
xor
rcrl
mov
repz
out
sub
xor
jmp
sub
mov
add
aad
dec
in
std
push
push
xlat
cwtl
xor
leave
shlb
insb
sahf
sub
repz
mov
lods
outsb
popf
test
jo
js
das
push
inc
xor
and
xor
jg
mov
nop
dec
dec
or
adc
in
mov
cmpsl
adc
jne
int3
or
lods
lock
outsb
iret
inc
repnz
or
xchg
imul
ret
rolb
jecxz
adc
js
sub
fstpt
and
in
mov
shl
test
cs
addr16
divb
outsl
movsl
pushf
pop
ret
xchg
pusha
stos
xchg
outsl
je
imul
xorb
jge
jl
cld
les
pop
sbb
scas
ret
or
xlat
push
lods
mov
scas
mov
cmp
pop
in
mov
xchg
add
imul
pop
cmp
lcall
pop
inc
mov
insb
movsl
cltd
sti
fisttpl
and
dec
insl
out
mov
add
and
fistps
movsb
adc
mov
sbb
arpl
jb
scas
xchg
scas
sbb
or
xchg
inc
add
sub
fldenv
adc
push
call
ja
int
nop
ret
mov
mov
fmul
lock
mov
add
pop
repz
or
jp
dec
jmp
pop
mov
imul
movsb
jle
cmp
inc
mov
mov
nop
jo
add
push
xorl
jg
mov
lahf
push
add
adc
sbb
ret
cs
adc
sbb
cwtl
cs
mov
rorl
aas
adc
leave
sub
push
sub
addb
aas
sbb
into
pop
mov
ss
out
dec
aam
and
pop
scas
incl
dec
pop
xchg
in
xor
inc
dec
stos
lods
inc
cmp
jnp
jns
dec
and
mov
popa
ljmp
mov
jne
call
hlt
xor
push
jne
shll
and
xor
out
mov
rcll
push
test
shll
inc
push
mov
jne
cs
fisubl
sub
jno
lds
or
jno
pop
xor
arpl
add
add
popf
mov
test
jecxz
popa
mov
lock
shll
xor
es
xchg
adc
or
repnz
pop
sbb
sub
add
ret
xor
dec
fnsave
pop
popf
mov
pop
add
addl
addr16
insb
mov
outsl
xchg
pusha
sbb
test
stc
out
jp
cmpsb
pop
repz
inc
addr16
mov
mov
test
mov
jmp
and
push
stos
sbb
fsubl
or
mov
lahf
cs
cmpb
popa
cmp
xchg
mov
cmpsl
sbb
fisubrs
pop
cmp
mov
mov
addl
dec
mov
or
adc
add
or
add
movsb
mov
hlt
push
or
std
ds
rolb
mov
sbb
inc
sbb
mov
inc
or
sbb
cld
xor
mov
fwait
shll
xor
cmpsb
cmc
fxch
jbe
std
mov
fld
push
xor
sbb
loopne
les
addr16
pop
movsb
es
mov
mov
insb
add
xchg
and
popf
sbb
or
imul
mov
jmp
inc
dec
xchg
xor
sub
add
or
fldcw
cmp
cmpsb
popa
add
in
pop
sbb
jnp
add
inc
fidivrs
lret
xor
sahf
mov
popf
int3
push
aad
fwait
sahf
jae
lcall
in
icebp
xor
pop
xchg
jae
xor
subl
fists
sti
repnz
sbb
and
cmpsl
adc
sbb
mov
into
push
inc
lds
ret
adc
fsubs
scas
movsb
jg
sahf
cmpsb
xchg
mov
push
xor
adcb
push
adcl
push
or
and
xchg
push
aaa
pop
std
mov
push
jge
sarb
jns
cld
jb
inc
addr16
pop
aaa
mov
push
rorl
cmp
notrack
lret
pop
js
cs
movq
dec
add
in
es
dec
jno
push
inc
or
inc
in
fcmovnb
or
xor
or
add
imul
push
imul
push
scas
out
inc
mov
stos
push
lock
dec
jnp
sub
mov
movsb
inc
jo
ljmp
notb
fstpl
xor
fbld
sub
cmc
jb
mov
sti
mull
in
adc
pop
inc
hlt
xchg
adc
jle
in
ja
cltd
ret
ljmp
sub
popf
mov
fldl
jbe
mov
push
pop
jae
push
mov
mov
mov
addr16
push
lret
ret
mov
addr16
pop
push
add
jns
aam
ljmp
push
ret
gs
pop
xlat
and
subl
imul
mov
in
cmove
aas
xchg
into
adc
ret
stos
test
and
and
loope
add
adc
in
je
sbb
insl
test
gs
dec
out
shl
jle
xchg
dec
lret
add
mov
adc
lds
pop
pop
xor
jb
je
sbb
add
xchg
adc
xchg
lds
push
test
faddl
mov
mov
aam
pop
mov
fxch
push
aam
adc
scas
rol
jb
mov
fistpll
add
stos
add
sub
or
and
cld
cmp
jo
adc
outsl
call
cmc
xchg
adcb
xchg
rclb
mov
cmp
pop
rcrb
les
xor
and
inc
inc
mov
add
stos
xor
repz
fsubrs
outsb
inc
iret
aam
push
sbb
dec
lock
jmp
mov
inc
test
xchg
ret
or
mov
ss
jne
or
sbb
sbb
mov
push
pop
rcrb
cmp
add
pop
xor
or
iret
mov
dec
jb
pop
xor
iret
xchg
xchg
cmc
jp
mov
bound
jmp
int
xchg
and
push
jne
shlb
mov
jb
xlat
int
scas
lcall
pop
mov
xor
lret
adc
cmp
mov
mov
mov
inc
fs
iret
push
inc
imul
push
daa
dec
pop
sub
jg
cwtl
and
pop
mov
adc
sti
aad
stos
imul
xor
enter
js
jbe
adc
xlat
mov
dec
cmp
mov
cmp
mov
mov
insl
adc
cld
ret
outsl
dec
mov
icebp
stos
push
mov
je
ret
pop
hlt
cmpsb
pusha
mov
mov
popf
mov
jnp
filds
out
sub
mov
mov
sbb
xchg
jecxz
je
notb
inc
pop
sub
fsubl
rcrb
rcl
mov
mov
sub
mov
push
dec
xchg
dec
popa
out
sbb
cmp
movsl
roll
int3
pop
cmp
dec
sahf
xchg
subl
lea
popf
cmpl
jecxz
adc
stc
sub
adc
dec
sti
dec
cmpsb
xchg
fldcw
cmp
ljmp
mov
addr16
lods
adc
pop
push
shr
pop
lcall
jb
je
jb
cmp
cmc
pusha
daa
ljmp
ja
movsl
push
fisttps
jl
fwait
xchg
mov
fwait
cwtl
leave
sbb
fwait
xchg
xor
mov
aam
mov
push
ljmp
cmp
lret
insb
icebp
adc
movsl
push
mov
cmp
mov
test
jnp
fcomps
cvttps2pi
js
jns
sbb
push
cmp
ficoms
insb
sahf
xchg
pop
push
orb
push
aaa
popf
test
std
pusha
push
scas
scas
mov
pop
add
leave
adc
jno
scas
insl
lahf
xchg
and
jbe
movb
push
lea
dec
sbb
cmp
arpl
mov
in
rcll
push
sar
popf
addr16
and
cmp
pop
lahf
gs
scas
inc
cmpsl
insl
xchg
pop
xchg
insb
je
push
pop
cmp
nop
mov
pop
in
loopne
and
out
sub
insb
sub
and
mov
rcr
in
in
mov
bound
add
sbb
scas
int3
mov
xchg
mov
lods
sub
repz
mov
xchg
outsl
loope
inc
sub
ficompl
mov
jmp
insl
fdivl
pop
cmp
cmp
daa
xchg
out
fisttpl
xchg
and
mov
int
xor
stos
int
out
lods
cmp
mov
and
xlat
mov
scas
dec
cmpsb
pop
lcall
in
mov
scas
outsl
mov
xchg
or
sbb
and
das
adc
aas
hlt
cmpsb
xor
push
jo
fsubp
push
cmp
enter
add
push
and
leave
jg
sub
shll
imul
or
shll
pop
sub
xchg
ret
stos
cmc
jno
dec
in
aad
test
mov
xchg
add
xchg
jp
test
scas
aas
lret
stos
mov
add
negl
mov
sub
push
in
mov
je
inc
popa
mov
xchg
fs
mov
rorb
push
lret
push
mov
ret
push
cwtl
mov
dec
mov
mov
fnstsw
pushf
push
inc
and
pop
xchg
cmp
add
pop
add
movsl
or
and
push
leave
cmp
and
push
pop
lahf
push
pusha
sub
arpl
cli
aas
int3
pop
fcmovne
inc
and
fldt
mov
faddl
sbb
repz
lock
shrb
out
mov
mov
into
stos
push
aam
aam
or
mov
cld
jmp
inc
pop
in
mov
or
nop
adc
lods
stos
xor
icebp
inc
movlps
lds
ds
xchg
xor
jnp
mov
ret
cs
ljmp
ja
dec
rolb
fsubl
aas
cmp
mov
push
negb
out
pop
les
push
jbe
sbb
cwtl
sub
inc
xor
lret
ret
pop
stos
mov
es
sub
dec
mov
pushf
inc
lret
rol
daa
mov
daa
adc
out
push
dec
mov
lret
cmpl
adc
popa
je
xor
leave
les
mov
das
cltd
sub
mov
shrb
shll
xor
inc
xchg
cmpsl
and
clc
and
dec
test
aas
movsb
imul
mov
mov
add
imul
dec
dec
or
mov
cs
test
fucomp
mov
cwtl
jae
cli
sub
or
inc
stc
stc
add
or
xor
jg
jl
test
scas
lods
xor
pop
and
mov
jbe,pn
test
mov
cmp
sub
xor
jle
imul
mov
into
fwait
stos
mov
movsl
mov
or
inc
mov
jbe
sahf
sbb
push
pop
lahf
stos
or
pop
jne
into
pop
icebp
adc
cmp
jae
call
cmp
inc
mov
test
out
adc
sub
es
lcall
out
push
lret
into
pusha
aam
inc
sahf
call
hlt
and
or
rolb
push
movsl
xchg
data16
movsb
mov
iret
leave
aaa
pop
sub
inc
addr16
push
pop
jns
repnz
sub
push
mov
xor
xorb
mov
and
jnp
cld
xchg
divl
xchg
insl
sub
push
aas
mov
xchg
and
mov
pop
clc
mov
es
js
sar
mov
add
cwtl
hlt
push
icebp
and
push
xchg
sti
mov
cmp
repz
sub
and
mov
das
push
loopne
xchg
xor
test
push
jl
bound
arpl
lea
aaa
or
xchg
andl
lods
xchg
lock
pop
mov
imul
sub
ljmp
xor
mov
pop
cmp
adc
rclb
xor
push
inc
subl
cwtl
fstps
jmp
lods
pushf
push
pop
mov
jo
cmp
das
xchg
mov
mov
or
push
add
shrb
push
dec
je
std
push
pop
mul
xchg
sbb
pop
cmpl
cmpsb
pusha
jno
mov
pop
adc
jae
rcr
data16
xchg
rorl
ljmp
mov
xor
sbb
jl
push
jg
push
lret
push
ss
and
rorl
pushf
shrl
mov
inc
inc
dec
dec
xchg
jecxz
addr16
jge
mov
cwtl
xchg
push
pop
add
dec
shl
dec
outsb
insl
cwtl
mov
je
jmp
cmpsl
cmpsl
adc
pop
jnp
xlat
bound
lods
imull
fcmovb
and
xchg
jno
inc
mov
jae
std
pop
enter
shl
xchg
dec
les
mov
daa
push
lds
outsl
add
pusha
mov
jbe
sbb
pusha
mov
xchg
popa
ret
push
sahf
jmp
mov
jmp
leave
ds
add
inc
nop
frstor
xchg
sub
xor
rorb
cmp
adc
lds
xchg
insb
jno
add
pop
je
insl
lret
jge
or
rorl
iret
das
xchg
pop
setle
inc
cltd
or
push
mov
insb
mov
jle
movsl
mov
add
xchg
out
movsl
jbe
add
es
sbb
lea
add
sbb
sarl
stc
int3
adc
fnstcw
inc
cs
cmp
dec
outsb
cmp
ret
cmc
sbb
push
lcall
adc
jns
testl
sbb
lds
cmp
xchg
or
ud0
mov
adc
dec
and
pop
iret
jae
adc
aad
lcall
push
fbstp
cmc
add
xorb
mov
jge
outsb
xchg
out
bound
adc
mov
pop
sub
repnz
prefetch
adc
jg
pop
pop
mov
cmp
insl
mov
loopne
push
pop
sub
fstpt
sub
push
aam
lods
push
fwait
jns
xor
mov
addr16
mov
pop
and
cwtl
push
into
pop
lcall
testb
test
or
icebp
push
and
or
cmp
sub
dec
int
mov
sub
mov
cmpsb
inc
shlb
push
daa
sub
stos
stos
loope
aad
sub
lcall
and
mov
jae
pop
lods
jno
lock
and
cmp
sbb
xor
pop
push
into
enter
sbb
push
mov
fnstsw
movsl
jp
push
sti
rorb
stc
push
ret
adc
xchg
std
test
out
hlt
js
mov
negl
dec
outsl
mov
shr
push
push
xchg
popf
jp
jmp
in
push
add
inc
fcom
sub
dec
lock
lret
xchg
push
or
cmp
jno
das
dec
jne
lret
mov
add
push
inc
cmovno
dec
int3
lds
mov
jb
jecxz
data16
das
pusha
inc
cmpsb
je
mov
jbe
adc
es
fdivl
jp
mov
sti
and
dec
add
adc
adc
shrb
xchg
cmp
std
jge
sarb
dec
mov
outsl
and
dec
cmovp
xchg
cwtl
call
fstpt
sbb
rol
in
pusha
sub
cmpsb
out
mov
push
int
sub
idivb
dec
pop
inc
xor
cwtl
imul
pop
inc
jne
lahf
mov
jmp
add
cmc
sbb
fstpt
insb
jecxz
xor
fwait
arpl
das
test
out
dec
jg
dec
sbb
add
notb
adcl
popf
cmp
push
popa
jae
dec
fadds
xchg
mov
inc
pop
jnp
jg
inc
lcall
scas
lock
gs
or
adc
imul
pusha
cmpl
pop
and
in
jg
popa
imul
jo
or
xlat
xchg
fiaddl
dec
pop
repnz
mov
sti
jl
loope
das
es
call
add
movb
stos
pop
jne
xlat
loopne
adc
add
call
mov
sub
insb
or
mov
aad
jmp
inc
out
mov
push
lock
call
or
fstps
mov
inc
pop
cmpsb
nop
mov
clc
cmpsl
jns
mov
shrb
jg
pusha
decl
push
icebp
sub
adc
push
mov
lcall
loop
adc
or
push
stc
inc
pop
lods
pop
cmp
fs
jmp
scas
in
loopne
add
adc
add
cmp
xchg
cmp
ss
test
sbbb
xchg
icebp
mov
pop
dec
pop
ljmp
xchg
sbb
pushf
xchg
les
fsubr
test
fs
inc
cmp
sub
clc
add
fdivrl
mov
dec
mov
pop
out
add
ljmp
shrl
sti
lret
iret
cmpsl
stos
outsb
and
std
push
adcl
push
loope
orps
xchg
iret
dec
add
dec
cmp
push
dec
add
hlt
sahf
call
test
push
subl
outsb
lcall
movsl
ja
repnz
add
in
fmull
xor
loope
pop
mov
fildll
cmpsb
ficompl
xor
jb
movsl
rep
and
push
mov
xlat
add
mov
mov
fmull
call
sbb
je
test
jecxz
adc
lods
clc
sub
inc
sbb
and
out
es
xchg
clc
ds
ja
mov
push
xchg
lods
xchg
push
in
vmulps
cmp
sbb
mov
test
movsb
lahf
mov
movsb
lcall
mov
sbb
dec
clc
rcll
cmp
inc
jecxz
in
adc
mov
add
jno
scas
or
ds
in
cmp
mov
and
fimuls
xchg
cli
sub
mov
cmp
sbb
in
movsl
or
stc
mov
test
mov
xor
sbb
push
pop
divb
leave
sti
mov
or
cltd
pop
pop
mov
sbb
dec
cmp
leave
inc
add
pop
iret
loopne
movsb
push
push
push
rcrl
pop
mov
in
jne
mov
push
push
inc
mov
jbe
loop
daa
sub
and
test
test
mov
stc
mov
adc
add
mov
adc
add
mov
adc
js
aaa
or
jno
xchg
cmpl
mov
cmp
out
das
jae
mov
shll
pop
dec
test
out
mov
jp
mov
pop
jmp
negl
mov
cmc
adcl
push
out
stc
or
jg
insb
xor
icebp
dec
sbb
into
jg
cmpsl
cld
pop
mov
push
adcb
cmp
dec
leave
cmp
cld
mov
add
or
iret
mov
mov
xor
pop
out
mov
or
rorb
test
std
inc
aad
xchg
mov
insb
in
fcompl
out
fsub
lds
jg
pop
out
or
dec
jp
loopne
xor
adc
lcall
stos
ss
sub
sbb
gs
inc
inc
js
pop
and
mov
ljmp
mov
ret
mov
sbbb
shll
lods
stos
mov
pop
in
dec
and
dec
jns
cmpsl
scas
hlt
rcll
cltd
and
ds
cmp
mov
add
imul
adc
cmp
aas
mov
ret
lret
leave
sbb
iret
and
inc
loop
test
mov
mov
pop
aad
lock
adc
popf
sub
pop
fs
cmp
in
mov
ss
mov
mov
sbb
push
test
sbb
xchg
movsb
test
adc
dec
and
ret
int3
xchg
lods
sar
ds
dec
nop
add
push
int
in
pushw
add
adc
push
imul
fcom
sahf
adc
sub
inc
and
int3
sbb
mov
stc
mov
test
add
jns
xchg
out
dec
daa
gs
lcall
ja
fbstp
cmp
pop
jnp
jno
rcrl
lea
adc
pop
sbb
xchg
jg
int3
xchg
test
rorl
arpl
dec
jb
cmp
enter
call
fwait
inc
add
rcr
gs
or
inc
lods
fstps
fcomps
mov
or
adc
mov
mov
jl
inc
les
mov
fwait
mov
inc
add
or
mov
aaa
inc
mov
cmp
cmp
push
mov
data16
jbe
lods
je
mov
add
and
xchg
out
add
cmpsb
and
fwait
cs
in
jb
fcomps
ss
mov
movsl
insl
subl
movaps
cmp
xchg
xor
iret
sti
pop
cmpb
push
jo
into
sbb
cmp
inc
pop
dec
sbb
or
sbb
setg
jecxz
push
fsubrs
cmc
popf
adc
jb
test
add
out
in
adc
cs
ljmp
dec
sbb
jle
testl
cmp
in
cmp
mov
pop
xchg
jl
les
pop
fwait
mov
aas
mov
leave
push
xor
repz
add
or
adc
jecxz
outsb
inc
daa
inc
loop
nop
dec
pop
ds
sub
add
jle
xor
data16
iret
xchg
ret
sbb
mov
fildll
popa
ljmp
and
jge
pop
sub
aam
cmc
mov
jne
out
jns
movsl
push
inc
cmp
std
xor
cmc
adc
decl
orl
jg
jbe
hlt
je
mov
pop
scas
mov
sbb
pop
in
int
call
push
cmpsl
out
add
xchg
cwtl
jno
gs
mov
push
sahf
lret
xor
mov
cmp
ja
lock
sbb
in
hlt
lods
jns
push
xchg
in
sbb
repnz
rcll
movsb
imul
jge
and
out
push
bound
mov
mov
mov
movsb
pop
jne
cld
cs
cmp
sbb
daa
out
pop
fcmovb
jno
repz
cmp
fs
lret
pop
cld
push
lods
pop
add
outsl
mov
fwait
mov
cld
pop
gs
cmc
mov
mul
inc
dec
out
xchg
test
ja
in
inc
aam
lret
mov
and
cmpsb
popf
xor
pop
cmp
push
call
jl
jae
pop
loop
mov
pop
add
jo
xchg
push
cmpb
sbb
inc
lret
dec
andl
mov
fstl
dec
faddl
mov
jno
arpl
pop
or
pop
and
test
orb
in
push
notb
aam
lahf
clc
js
add
mov
lds
push
push
jp
mull
sbb
inc
pop
inc
xor
sub
sub
and
rcll
jmp
sub
popf
xor
lea
mov
adc
int3
test
xchg
insl
mov
imul
loopne
imul
js
sub
outsl
test
into
lret
cwtl
in
test
inc
test
sub
push
xchg
pop
mov
fldenv
xor
mov
mov
ljmp
insb
sub
cld
stos
push
jae
mov
cli
test
clc
adc
cmp
pop
mov
mov
out
aad
aaa
stos
sbb
decl
shlb
mov
fwait
jnp
in
movsb
out
xchg
lods
xor
jg
incl
dec
fldt
sub
add
push
out
xchg
jg
sbb
and
lret
test
adc
push
mov
loop
pop
jne
cmpl
je
nop
jg
sbb
sbb
aas
push
cltd
scas
lods
mov
mov
lcall
aad
jnp
add
fdivs
loope
cmp
je
movsb
stc
imul
sarb
add
movsl
or
loop
xchg
pushf
dec
fs
pop
daa
cmp
jne
add
roll
daa
lods
inc
arpl
stc
pop
adc
repz
fstl
ret
sub
call
iret
stc
cmp
xor
decl
fwait
pop
mov
pop
data16
mov
cltd
mov
testb
lret
popf
mov
negl
jle
jns
out
xchg
into
push
and
or
mov
adc
mov
lea
aad
rol
and
scas
add
adc
mov
repnz
dec
sub
mov
mov
idivb
leave
jg
jo
xlat
inc
idivl
fldl
fwait
xlat
add
test
aas
mov
bound
stos
xlat
loop
daa
or
dec
sub
lret
loopne
sbb
mov
rorb
mov
ss
cmp
pop
cmpsb
or
cmp
sub
xorb
add
shl
int3
testb
fucomip
repnz
or
xchg
push
insl
cli
pop
icebp
das
ret
cmp
mov
sub
in
aaa
sub
add
std
out
sub
aas
lcall
aaa
jmp
outsl
mov
sarl
jnp
ret
adc
fisubl
es
in
jmp
into
and
or
mov
shl
adc
cmc
aad
popf
cmpsb
sub
mov
xchg
mov
dec
fisubl
adc
push
or
add
sbb
je
add
test
mov
sub
imul
movsb
mov
push
jns
mov
adc
sub
sbb
sub
pop
xchg
mov
adc
cld
inc
pop
sbbl
es
divb
repnz
loop
dec
add
add
test
push
adc
mov
xlat
and
mov
and
mov
outsb
fsubr
mov
cli
pushf
stos
mov
pop
lock
adc
movsl
hlt
inc
push
cmp
mov
pop
nop
push
add
std
cmp
push
bound
or
mov
repz
push
cmp
add
mov
inc
jno
enter
test
loopne
out
cmp
jmp
cmp
inc
repnz
out
mov
movsb
dec
lods
out
pop
cmp
fcoms
push
mov
inc
sub
push
sub
jle
xchg
addl
or
mov
insb
scas
xor
cmp
mov
mov
cmpsl
adc
nop
mov
test
sbb
sub
repz
xlat
and
mov
mov
fidivs
lods
into
cltd
je
shll
push
pop
stos
jnp
repz
data16
mul
mov
stos
popf
xchg
mov
daa
andb
mov
mov
in
sub
mov
out
cmp
and
sub
incb
sub
jp
loop
jbe
push
sahf
or
xor
hlt
push
mov
sub
fiadds
nop
mov
sbbb
cli
fsubrs
push
adcl
xchg
fadd
dec
mov
mov
sbb
push
movb
push
mov
stos
xchg
mov
push
psrlw
loope
ljmp
mov
loopne
mov
xchg
aas
xchg
pop
inc
mov
sub
stos
pop
push
loopne
add
sub
jmp
je
ja
xchg
negl
mov
iret
std
scas
lods
scas
sub
or
lods
mov
cmpsb
inc
aaa
cld
inc
lcall
adc
popf
or
push
push
xor
out
es
dec
jge
sti
das
aad
cltd
inc
xor
mov
sbb
xchg
or
push
shlb
das
stos
sbb
mov
push
push
jno
xchg
mov
test
inc
cwtl
mov
xchg
je
fndisi(8087
cmp
int3
lret
add
xor
and
lock
lahf
xor
push
int
adc
mov
push
push
add
push
test
jl
and
mov
test
pop
and
cmp
sbb
ror
fisubs
and
ret
les
or
out
adc
xchg
jbe
out
xor
add
movsb
test
mull
jb
aaa
rcrl
cmp
add
pop
aam
rorb
sub
jo
faddl
mov
or
pop
mov
push
mov
mov
dec
mov
je
and
clc
ss
arpl
pop
inc
sahf
sbb
mov
in
push
and
mov
fcomps
add
pop
repnz
cmpsl
enter
inc
or
mov
add
or
push
pop
adc
sub
mov
bound
push
les
in
cmc
xor
sbb
mov
jbe
shll
mov
inc
pop
mov
ljmp
push
add
fisubrs
in
mov
lea
sub
push
scas
mov
popf
ret
repnz
xlat
dec
sub
aas
sbb
mov
cwtl
inc
pop
int
inc
rcrb
mov
add
push
and
out
les
jg
mov
and
clc
push
mov
sub
sbb
push
lea
lcall
add
push
push
and
aaa
shll
pop
fs
xchg
arpl
test
cld
or
lds
fisttpl
push
xchg
sub
and
ds
aad
inc
js
xchg
inc
loop
test
pop
push
mull
ljmp
jp
push
and
adc
add
sbb
lods
sub
out
inc
push
pop
mov
stos
stc
jp
shl
pop
adc
rcrb
and
or
add
les
mov
push
mov
cmp
shrb
or
xchg
ds
ss
test
xorb
in
hlt
hlt
loop
mov
loope
add
dec
lods
xor
outsl
aad
pop
aas
jne
sbb
or
ficoms
cmp
push
mov
dec
andb
into
sbb
out
push
fstps
out
mov
jge
arpl
aam
cltd
aaa
push
xchg
cmc
mov
mov
in
inc
add
mov
lret
nop
lods
fisubs
test
xor
clc
fstpt
cmp
push
bnd
or
and
xchg
inc
mov
jmp
call
arpl
mov
pop
pop
and
push
nop
mov
fsts
jne
sub
jno
shll
in
popa
imul
lret
loop
sti
dec
mov
iret
scas
call
inc
lods
test
push
hlt
sub
ljmp
into
jl
mov
or
stos
and
cmc
test
xor
aas
and
mov
mov
cmpsl
inc
mov
mov
lret
xchg
push
pop
xchg
loope
cmp
movsb
stos
jns
dec
xchg
mov
sbb
mov
jg
es
pop
mov
sbb
rclb
push
xchg
dec
les
cmp
test
add
push
data16
mov
add
dec
loop
adc
jle
push
pop
push
push
stc
add
sbb
dec
stc
in
sub
mov
jle
out
test
daa
arpl
adc
pop
or
loop
sbb
jmp
fidivrs
push
jecxz
cmp
lock
inc
mov
fcoms
push
push
jb,pn
xlat
cmp
inc
dec
sub
das
add
call
push
lods
in
jnp
add
pop
mov
pop
and
sub
sub
outsb
inc
int3
jno
mov
loop
lret
sti
lcall
mov
gs
pop
jmp
cmp
mov
xlat
jge
push
icebp
mov
jle
fidivrs
xchg
jle
add
sub
stos
repnz
mov
cmp
test
xchg
lods
sahf
push
push
into
fmull
jg
imul
orb
ss
pop
or
leave
inc
out
lcall
mov
jbe
dec
sub
adc
aad
mov
in
xor
add
jle
fxch
cmp
sbb
scas
loope
xor
push
in
sbb
mov
nop
outsl
fwait
mov
fsts
je
add
cmc
je
pop
dec
mov
insb
jno
mov
push
dec
sub
add
lds
fs
outsl
sub
por
push
out
or
xchg
mov
lcall
icebp
pop
fnstsw
mov
jo
test
push
sti
xchg
icebp
mov
mov
inc
data16
ja
pop
jmp
cmpsl
xor
mov
pop
and
mov
xchg
xchg
fisttps
sub
lahf
mov
test
stos
dec
pop
inc
pop
lcall
mov
pushf
push
test
out
dec
sub
int3
cmp
or
cmc
mov
mov
fimuls
push
mov
cmp
scas
jmp
fiadds
mov
inc
mov
sub
jne
sub
repz
sarl
inc
cltd
inc
jmp
popa
mov
aam
push
and
xchg
add
jle
push
sub
xchg
mov
dec
mov
jp
jns
jle
mov
pop
stos
lods
push
xchg
sarb
adc
adc
lcall
add
pop
and
pop
pop
loopne
sub
pop
pop
and
lods
push
xchg
dec
xchg
jle
bound
push
sbb
movsb
xlat
cmp
dec
pop
fistpl
jmp
xchg
xchg
push
in
mov
fistpl
imul
insb
add
insl
fs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
popa
xor
xor
dec
sub
push
pusha
bound
insl
insb
pop
push
jg
xor
xor
dec
and
jle
cmp
jge
dec
cmpb
cmp
inc
cmp
push
cmp
inc
js
pop
cmp
xor
dec
outsb
es
pop
pop
fs
push
jae
inc
sub
daa
outsb
sub
dec
ds
jbe
jle
and
pop
inc
cmp
dec
je
and
jo
and
cs
jle
jae
outsb
das
push
and
jns
pop
pop
jb
cmp
bound
pop
and
aas
inc
je
outsb
aaa
push
dec
popa
dec
sub
cmp
inc
das
imul
jb
and
and
cmp
and
pop
inc
push
imul
xor
inc
push
imul
push
dec
aas
xor
sub
xor
dec
jl
jo
xor
inc
cmp
push
arpl
cmp
inc
dec
addr16
push
and
push
insl
sub
inc
dec
sub
jno
inc
gs
cmp
push
xor
and
imul
push
xor
and
inc
push
je
dec
xor
push
es
js
push
push
es
outsl
sub
sub
dec
addb
dec
jge
sub
sub
cmp
jnp
sub
inc
push
dec
sub
and
insb
jg
subb
pop
es
inc
imul
pop
sub
jb
bound
push
dec
pop
jb
bound
imul
inc
sub
xor
pop
imul
jns
and
push
push
jb
jg
cmp
imul
push
push
popa
sub
daa
dec
insl
jp
push
outsb
daa
xor
cmp
outsl
imul
jl
cmp
sub
inc
pop
js
cmp
daa
pop
and
ja
jp
xor
inc
data16
jb
dec
push
pop
inc
inc
cmp
pop
popa
xor
xor
push
sub
inc
jnp
js
jge
push
pop
dec
arpl
xor
cmp
pop
xor
daa
test
cmp
push
and
pusha
outsl
jge
and
outsb
inc
je
jle
insl
jo
jle
ds
jl
jno
pop
pop
arpl
push
dec
inc
push
inc
dec
gs
js
dec
inc
jno
imul
xor
jne
dec
addl
sbbb
dec
cmp
dec
insl
sub
gs
popa
jle
pop
push
inc
inc
inc
push
cmp
pusha
and
adc
and
dec
outsb
jge
dec
pop
ja
xor
jo
cmp
jp
inc
fs
ds
insl
jl
sbb
or
or
or
or
jns
add
jle
push
or
push
or
jns
jge
js
push
imul
sub
pop
pop
das
pop
pop
pop
pop
sub
pop
pop
pop
pop
pop
pop
pop
sub
das
das
das
das
jbe
cmp
je
xor
pop
sub
jbe
ja
cmp
sub
daa
outsb
push
push
and
cmp
and
pop
dec
inc
sub
jl
inc
and
cmp
xor
jl
push
das
pop
inc
aas
xor
dec
inc
jo
aaa
imul
push
push
inc
push
pop
pop
ss
dec
cmp
dec
jo
add
sbb
add
sbb
dec
inc
cmpl
push
inc
pop
push
dec
xor
jno
push
push
aas
addr16
inc
inc
inc
push
jo
cmp
jns
inc
push
jae
cs
pop
insb
sub
push
data16
inc
pusha
outsl
jg
dec
imul
sub
inc
push
and
dec
pop
jle
cmp
and
inc
bound
cmp
.byte
jp
