sbb
add
outsl
std
mull
push
push
test
icebp
sbb
movsl
jmp
sbb
sub
add
into
loope
cli
shlb
into
dec
fstpl
push
cld
sahf
push
push
dec
cs
sti
cmp
hlt
and
push
imul
test
pushf
inc
add
jns
mov
jmp
std
popf
inc
jb
stc
sub
jge
inc
or
pop
dec
in
cli
cmp
imul
pop
leave
and
mov
mov
or
jp
pop
adc
mov
clc
jmp
fsubrp
out
adc
ret
and
cmp
jo
popf
repz
bound
cmp
and
test
sbbb
gs
es
fbstp
jg
mov
push
push
pcmpgtd
pop
pop
mov
mov
movsb
pushf
pushf
pop
cmpsl
and
cmp
push
push
fwait
ss
imulb
adc
fimull
mov
mov
lds
xor
jle
and
push
out
or
call
stos
ss
aam
xchg
push
sbb
jmp
outsl
lea
mov
or
push
xchg
pop
cmpsb
xchg
cwtl
lods
sub
pop
bound
shlb
stos
scas
xor
out
rcr
cmp
or
ss
aam
pop
pop
pop
loopne
test
in
mov
ret
mov
lds
mov
cmpb
push
loope
mov
pop
mov
fisttpll
jp
mov
jns
mov
fildl
xor
pushf
ss
cmp
arpl
pop
inc
aaa
daa
in
in
lcall
lret
add
mov
push
sub
jmp
xchg
cmp
push
mov
or
repz
ds
lret
inc
dec
push
cmp
push
mov
std
test
adc
or
inc
ficompl
inc
loope
push
aaa
call
pop
out
fs
subl
xor
mov
adc
ds
xchg
pop
sbb
adc
sbb
iret
xchg
stc
loope
sbbb
xchg
jmp
mov
pop
push
out
inc
fcmovne
xchg
mov
daa
in
push
fwait
in
insb
call
insb
push
in
notl
cmp
xchg
mov
aam
dec
aaa
rcrb
push
lret
dec
addr16
sub
and
jne
in
repnz
shlb
pop
int3
add
arpl
mov
pusha
or
push
outsb
cmp
jmp
outsb
std
and
push
or
cmp
dec
imul
pop
dec
rcll
jmp
mov
and
push
inc
fcmovb
loope
dec
push
pop
aaa
xor
shll
popa
scas
cmp
adc
dec
popa
outsb
xor
dec
js
jge
mov
pushf
out
jbe
ljmp
je
std
fst
stc
sub
call
popf
daa
loope
scas
mov
sti
sub
cmpsl
jmp
sbb
and
inc
jle
push
xor
movsb
cmp
sub
or
pop
lods
cwtl
pop
push
cmp
pop
cmp
movsl
cmp
scas
jno
xor
or
mov
dec
div
sub
dec
jmp
pop
test
jns
stc
les
jmp
push
jg
pop
out
push
subl
pop
and
test
sub
cmp
clc
pop
mov
push
sbb
push
out
lahf
sub
mov
xchg
sub
je
or
insb
mov
sbb
mov
insb
icebp
mov
shlb
xchg
int
dec
add
push
push
enter
mov
lcall
cmp
inc
sub
jmp
push
arpl
pushf
rorl
std
es
adc
jg
out
sbb
sarl
or
ret
ljmp
mov
and
fdivr
or
sub
inc
jne
adc
cmpl
cmp
dec
flds
push
movsb
sbb
pop
or
outsl
pop
sub
adc
jbe
lret
loope
and
inc
or
mov
mov
xchg
push
out
out
in
add
cmpsl
jnp
mov
ja
out
add
data16
incl
dec
mov
in
das
or
sbb
stc
push
sbb
movsb
mov
and
shll
xlat
stc
pop
push
out
and
jne
sub
mov
pop
push
movsb
lahf
sbb
jge
jmp
ja
push
imul
and
add
adc
popa
sti
inc
cmc
dec
imul
mov
push
xor
sbb
inc
rcr
mov
ret
lret
cmpsl
aaa
mov
lods
pop
enter
push
scas
stos
sbb
pop
cmp
jne
xchg
in
in
push
cmp
xor
stc
popa
sub
test
rcr
ret
xchg
imul
add
mov
stos
xor
mov
jno
xchg
pop
mov
push
test
test
jbe
test
popa
fwait
or
fisttpll
lcall
pop
in
jmp
movsb
push
push
sar
fsubs
dec
sahf
or
mov
out
add
stos
mov
in
stos
cmp
fnstsw
je
add
mov
adc
xor
sub
xchg
jno
and
fldl
push
push
les
xorl
sti
adc
push
dec
sub
jp
pop
addr16
mov
movsb
sahf
loope
xor
std
mov
dec
inc
push
aaa
xor
ljmp
cmp
xlat
insl
imul
repnz
scas
nop
jne
ret
and
xor
inc
mov
mov
lods
js
mov
cs
push
push
pop
sbb
mov
cmp
pop
sbb
cld
arpl
stos
dec
push
adc
popf
mov
xlat
push
mov
adc
mov
or
jne
pop
arpl
bound
cmc
je
inc
push
fcmovnbe
xor
dec
dec
in
xchg
mov
mov
out
ss
arpl
dec
lcall
pop
mov
ret
cmpsl
mov
dec
xor
sub
fisttps
fsub
jmp
popa
mov
sub
cmp
dec
ljmp
xchg
mov
jecxz
imul
dec
popf
pop
jb
lcall
push
sub
and
fwait
in
imul
mov
je
push
mov
dec
mov
fcom
clc
xchg
mov
pusha
lods
mov
adc
enter
sub
add
adc
nop
aam
out
push
andl
aad
ljmp
mov
or
incl
inc
ret
outsl
lds
inc
lods
popf
rol
lods
call
lcall
stc
fcompl
mov
cmp
shll
xor
xchg
repz
cmp
push
cmp
fimuls
ds
sub
js
jbe
enter
mov
mov
int
movsb
ss
test
inc
mov
cmpsb
lock
jmp
into
arpl
stos
ds
cmpsb
adc
xchg
sbb
jle
push
and
negl
lds
xor
jmp
in
push
les
std
lods
fidivrl
inc
mov
repz
aam
stos
mov
push
test
cmp
xchg
fistpll
mov
xor
and
jae
call
pop
cmpsb
sar
ret
or
mov
xchg
push
jns
cmpsl
xchg
push
or
dec
jns
stos
mov
aaa
fisubrl
add
jo
pushf
cld
lods
jp
imul
mov
iret
mov
in
ret
jo
lods
loop
mov
out
out
es
scas
shlb
jb
sub
pop
mov
jp
add
into
into
daa
iret
into
or
pushl
iret
xor
pop
fidivl
pop
xchg
pushf
or
dec
enter
ficomps
cmpsb
sbb
fisubl
lock
sub
mov
testl
sbb
push
or
call
mov
insl
push
icebp
xchg
aam
sbb
dec
ss
jbe
test
jno
inc
sarb
rolb
cltd
sub
push
push
inc
icebp
je
pop
adc
lods
test
call
adc
jne
es
cmp
jns
out
mov
cmpsb
xchg
jno
sub
mov
pop
daa
sub
xor
cltd
stos
out
rcr
sub
and
cmp
push
sub
push
mov
mov
bound
inc
and
push
gs
jno
jl
pop
and
mov
push
push
fldl
cmp
add
and
xchg
movsl
pop
out
push
sub
sub
test
inc
js
jmp
and
mov
sbb
cmpsb
add
jbe
scas
jb
fs
addr16
fcompl
repz
rcrb
mov
in
movsl
inc
ret
or
or
dec
cmp
push
popf
aaa
mov
test
mov
xor
inc
adc
sahf
dec
adc
dec
and
mov
dec
pop
enter
dec
mov
roll
je
add
test
cmp
ja
jo
icebp
leave
cmp
adc
aas
inc
addl
adc
shlb
jbe
jne
or
xchg
and
dec
je
fsub
stos
lock
sub
in
cs
adc
sub
and
mov
jbe
mov
xor
addb
xor
scas
push
add
cmp
xor
add
je
pushf
fmuls
lods
mov
fbstp
adc
insl
gs
jae
pop
push
cwtl
mov
roll
in
sub
xchg
push
inc
das
dec
xchg
mov
xor
dec
xor
mov
addl
mov
aaa
jne
xor
or
adc
adc
aam
xor
xlat
fcmovnu
sub
sahf
hlt
out
cmp
mov
push
std
xor
das
mov
cmp
arpl
xchg
insb
sub
and
jge
loope
rolb
mov
mov
mov
mov
inc
pop
dec
fistpll
cmp
adc
sbb
mov
jne
nop
cltd
fmull
rol
stc
loop
imul
lock
pushw
mov
dec
out
sahf
jmp
sbb
cli
std
jmp
pop
jbe
mov
fldz
push
and
cwtl
add
mov
fwait
inc
cltd
mov
xor
sub
dec
repz
pop
or
pushf
popf
inc
xlat
xchg
adc
xchg
icebp
mov
in
arpl
sub
and
out
popa
insb
out
popa
xchg
jbe
loopne
dec
addl
xor
mov
mov
mov
inc
and
add
cmp
sub
add
cmpsb
mov
arpl
popf
icebp
or
sub
push
out
movsl
hlt
stos
stos
inc
sbb
and
movsl
push
rcll
addr16
cmp
loopnew
inc
fndisi(8087
or
pusha
shlb
sbb
call
insb
out
push
xchg
dec
cmp
fwait
jb
mov
or
jno
stos
mov
sub
sbbl
and
push
pop
inc
lods
xor
popa
stos
sbb
mov
pop
lret
divb
ss
mov
clc
outsl
cmp
insb
fistpl
jg
and
jne
je
outsb
inc
pusha
movsb
sarl
dec
test
fildll
fsubl
pop
ds
inc
add
add
sub
mov
rcll
pop
mov
pop
pop
or
inc
push
pop
int
xor
movsb
lea
lods
add
push
stos
fs
jno
inc
and
jne
add
popa
pop
jg
push
jmp
pop
push
sub
jg
adc
cmp
repnz
xor
dec
and
cwtl
loopne
xor
js
stos
lods
sbb
lret
dec
push
inc
cld
pop
ja
lret
insb
and
mov
xor
mov
ret
lds
sahf
dec
cmpsb
xchg
push
add
xchg
xor
xchg
adc
mov
out
ds
mov
int3
cmp
out
rorb
jle
and
push
xchg
mov
dec
push
pop
imul
jb
inc
sbb
add
pop
mov
into
mov
or
xor
into
inc
ret
fistl
shl
adc
loopne
adc
int3
test
pop
scas
xor
cmp
enter
lcall
hlt
inc
dec
rep
pop
mov
adc
mov
mov
push
out
or
inc
mov
inc
insl
out
cltd
push
push
fbld
scas
add
lods
insl
mov
ds
loop
mov
popa
filds
xor
inc
fildl
jecxz
ss
or
in
sub
cmp
xorb
sub
adc
add
and
fldcw
mov
das
ficompl
mov
nop
dec
lret
scas
fdivl
xchg
mov
rol
cltd
out
mov
bound
or
cmp
popa
mov
xchg
and
cltd
lods
fidivrl
std
sahf
jns
cmp
popa
adc
inc
movsl
add
mov
in
xchg
lcall
inc
jne
aaa
aaa
mov
xchg
pop
rcrb
lock
xchg
loopne
loopne
cltd
test
add
cs
pop
dec
jp
add
loopne
adc
mov
cmp
mov
sbb
ja
ret
dec
ljmp
mov
enter
sbb
sbb
repz
inc
push
xor
add
and
xchg
flds
mov
jae
sub
les
push
enter
lods
cmpsb
cltd
mov
fucomp
add
aad
lds
mov
cmp
jns
jle
jle
movsl
in
cmpsb
aas
xchg
stos
push
jns
andl
ljmp
jl
jge
ljmp
or
fdivrs
dec
pop
data16
arpl
dec
mov
popf
popf
lea
out
cmp
adc
out
lods
test
xor
leave
stos
fldcw
shrb
ss
inc
jle
mov
fldcw
mov
pushf
jo
mov
into
pop
dec
push
jmp
clc
dec
push
xchg
enter
add
ret
jge
js
inc
xorl
imul
push
shll
je
sbb
push
jns
lret
cmc
out
int3
push
mov
mov
xor
cmp
popf
adc
dec
cli
pop
hlt
mov
scas
imul
mov
lea
inc
pop
mov
xor
testb
fcomps
insb
jb
sbb
or
mov
xlat
lcall
xor
daa
dec
mov
push
cmc
add
pop
je
inc
sar
dec
sub
dec
pop
jl
mov
test
das
aaa
sar
xor
mov
aam
out
or
aam
cmp
and
pop
fwait
adc
int
fisubrs
ret
jmp
sbb
mov
xchg
mov
mov
push
adc
lret
cmpsb
rolb
shrl
cmp
push
xchg
xchg
inc
cmp
aad
inc
sahf
adc
xchg
in
push
pop
shl
sbb
add
shrb
or
fwait
and
pop
lahf
pop
fwait
push
mov
mov
xchg
out
push
les
je
pop
icebp
popa
and
xor
hlt
xchg
je
push
daa
inc
and
push
roll
push
outsl
cltd
xor
bound
add
jecxz
xor
int
inc
call
int
sbb
xorb
push
mov
mov
push
jno
pop
call
mov
in
or
outsb
adc
data16
in
and
repz
das
push
pusha
imul
jecxz
mov
jne
out
add
mov
loope
test
mov
mov
movsl
xor
jp
sub
fsubr
ds
arpl
xor
dec
mov
inc
sbb
xchg
lret
pop
pop
dec
js
nop
pop
js
inc
push
sub
jmp
loop
jle
xchg
cmpb
ret
inc
outsb
out
mov
sbb
icebp
lods
sub
xchg
inc
jb
lret
lret
mov
xor
rcrl
roll
jb
mov
mov
fwait
icebp
mov
sbb
cmp
mov
pop
mov
pop
ds
and
lcall
aas
adc
test
fs
mov
pop
das
jb
test
xor
enter
xor
pop
ljmp
cmp
bound
or
and
sbb
sti
adc
mov
test
loop
test
xor
lcall
aam
cmp
jb
or
xor
icebp
inc
clc
push
fistl
out
mov
adc
dec
mov
inc
clc
shrl
nop
sahf
repnz
lods
and
in
int3
jno
add
test
sbbb
in
mov
fisttpll
scas
je
xor
ss
roll
fisubrs
xchg
fbld
cwtl
movsl
push
and
cmp
mov
dec
jge
cmpsb
test
sbb
sub
sbb
mov
rorb
add
in
repnz
jmp
pop
push
out
adc
pop
imulw
ljmp
cmp
dec
dec
and
mov
cwtl
cmpsl
rcr
cmp
popf
push
testb
sub
pop
push
lret
jno
arpl
inc
loopne
sub
sub
pop
push
or
dec
fwait
scas
loop
push
sub
mov
fisubl
cmpsb
lret
or
test
sti
add
or
lret
jmp
scas
adc
pop
aaa
sbb
arpl
popa
fmuls
sbb
lods
jne
dec
lds
stos
dec
lock
dec
dec
inc
push
jmp
std
sub
faddl
sub
mov
std
xchg
add
loop
xchg
and
jg
jns
push
test
push
int
sysenter
repnz
xor
out
ja
sbb
divl
cmpsb
dec
mov
or
or
pop
test
dec
lea
adc
cmp
sbb
pop
xor
int3
sub
cmpsb
push
lret
pop
lret
out
repnz
js
cmp
lret
push
popa
jae
cmp
das
cli
add
push
test
add
cmp
aaa
test
mov
not
sbb
push
sarl
inc
lcall
mov
testl
cmp
filds
inc
or
dec
cmp
mov
add
or
mov
dec
push
outsl
ja
add
out
pop
or
mov
push
mov
fsubs
dec
ret
test
cwtl
cmp
cmp
stos
jo
xchg
ljmp
adc
pop
sbb
cmp
pop
inc
fsubr
inc
push
mov
jge
dec
in
movsb
cld
push
mov
nop
inc
mov
mov
lret
repz
xchg
jae
loop
sub
lds
xor
mov
imul
mov
adcl
mov
nop
popa
test
dec
in
cmpsl
es
rcrl
sbb
jno
push
dec
scas
pop
sub
bound
cmp
xlat
mov
cwtl
fbstp
loope
mov
pop
pop
popf
addr16
arpl
shlb
mov
imul
mov
shrb
push
mov
jp
sbb
clc
or
lret
sub
testb
nop
and
sbbb
sub
rolb
mov
addl
xchg
bound
stc
jg
test
lock
jo
negb
pop
inc
add
mov
clc
push
fcompl
cmp
sbb
sbb
and
addr16
push
jno
dec
xor
bound
stos
adcl
popa
inc
scas
lret
lret
mov
xchg
dec
stc
lds
dec
test
mov
fsubs
and
pop
iret
movsl
push
aad
data16
or
mov
sbb
scas
addl
xchg
outsl
mov
stos
inc
iret
imul
ror
sbb
sub
std
lret
add
sub
cltd
fwait
mov
dec
fiadds
mov
lret
and
xchg
xchg
daa
mov
movsb
pop
or
cmp
adc
inc
sub
xchg
pop
mov
loopne
xchg
and
jae
inc
std
adc
dec
push
mov
imul
sub
add
in
loop
adc
test
mov
sbb
imul
fistps
sbb
stc
sbb
mov
or
push
lds
ja
cmp
sub
cmp
jecxz
cmp
sub
fstpt
imul
jmp
mov
jb
mov
dec
loopne
test
out
and
push
mov
inc
pop
mov
outsb
pop
or
imul
cmp
das
cmp
xor
sbb
sarb
lahf
repz
jge
jo
inc
jns
mov
lock
sti
data16
xchg
test
fs
push
dec
pop
mov
cmp
jne
cmp
lea
fdivrs
inc
in
loopne
shrl
movsb
or
or
gs
sub
mov
insb
aas
int3
aad
ret
imul
inc
push
jmp
sub
aam
sub
lds
cmp
sub
sub
add
cmp
ss
fs
mov
inc
hlt
mov
popf
ds
pop
inc
cmp
lds
xor
lea
lods
rorl
xchg
add
pop
sub
jmp
test
cmp
aam
jbe
mov
mov
cmp
sub
sbb
jno
jge
push
mov
arpl
sbb
sub
je
mov
stos
ja
cmp
add
push
call
lret
mov
mov
stc
mov
pushf
test
fcoml
enter
jecxz
xchg
jbe
add
xchg
bound
add
test
scas
dec
mov
push
dec
push
add
add
shrb
mov
cmc
sub
and
popf
insb
or
bound
test
pop
ja
or
popf
mov
sbb
mov
int
mov
stos
jp
pop
add
dec
lahf
icebp
cmp
pop
jns
cmp
popfw
iret
aam
scas
out
clc
jmp
sahf
inc
fcomps
pop
mov
mov
mov
or
sub
insl
cmp
fimull
in
pop
int
inc
pop
xchg
sahf
idivl
insb
lds
pusha
lldt
out
jmp
sbb
xchg
out
aaa
adc
mov
rcrb
lcall
lahf
jno
pop
lahf
popf
pushf
adc
setae
and
movsb
and
aad
and
filds
mov
scas
rolb
cmpsb
shl
xchg
popf
fcmovnb
loope
add
adc
mov
cmp
mov
aaa
mov
call
xchg
adc
or
scas
out
fsts
pop
mov
dec
into
stos
xor
pop
xor
lods
cmp
jecxz
ja
mov
lock
fstp
lcall
call
dec
daa
clc
adc
sub
cmc
cmp
mov
aas
cmp
mov
inc
lcall
push
inc
das
int3
mov
sub
movsl
es
or
adc
cmp
inc
mov
movsl
and
or
pop
or
int
addb
repz
gs
addr16
inc
pop
push
jge
sbb
dec
and
and
insb
pop
fimuls
xchg
hlt
ret
or
roll
jbe
or
fidivrs
inc
fcoms
clc
sub
es
or
dec
test
push
lret
clc
xchg
or
outsl
testl
pop
cld
mov
jmp
mov
cmp
fdivs
bound
bound
dec
xor
andl
pusha
ljmp
stos
inc
sbb
adc
test
inc
andl
pop
sbb
xchg
cmp
jns
pushf
ret
mov
mov
xor
jbe
mov
jl
arpl
cltd
sarl
jo
mov
sub
sbb
faddp
or
jnp
lret
js
inc
mov
test
clc
int
inc
push
or
fucomip
add
mov
clc
xchg
mov
aas
inc
mov
and
test
xchg
jo
mov
and
sub
pusha
push
jb
sbb
popf
mov
mov
xor
test
sub
xor
ret
push
fstps
push
fbld
mov
dec
leave
js
loope
mov
insb
imul
pop
rcrl
js
in
out
xchg
ss
shll
xchg
mull
lcall
leave
popl
xchg
ss
rcrb
ja
lds
ja
add
adc
int
loope
lds
jo
push
cmp
aaa
inc
les
rclb
hlt
negl
mov
lret
add
sbb
jg
movsl
mov
xor
adc
add
cmpsb
gs
xchg
xor
and
in
insb
lods
and
push
bnd
into
icebp
or
xchg
inc
pop
pushf
jmp
push
mov
inc
xor
jo
pushf
or
xchg
nop
cld
sub
sbb
inc
cmp
xchg
addr16
lcall
push
js
xor
add
loope
fildl
ljmp
leave
outsl
add
fistpll
in
outsl
xor
in
adc
loope
popl
xchg
enter
scas
pop
mov
and
xchg
mov
scas
fdivr
movsb
mov
mov
push
pop
jmp
shlb
imul
or
add
mov
leave
sub
mov
out
xor
lret
clc
dec
popa
and
outsb
ds
mov
mov
enter
idiv
fwait
outsb
loope
pop
dec
jae
pop
pop
jge
push
mov
fsub
mov
sti
jo
xlat
mov
lds
imul
xlat
add
dec
mov
inc
xchg
daa
in
dec
sbb
repnz
lcall
cmp
nop
aaa
adc
rcr
mov
push
push
mov
ror
sbb
jns
aaa
lcall
add
test
gs
mov
cli
pop
xor
jge
fistl
mov
mov
pushf
cmp
movsl
push
adc
roll
mov
int3
movsb
repnz
movl
ss
sub
mov
std
int
repz
aas
or
lock
and
mov
fstp
adc
jae
mov
mov
mov
jge
call
mov
fisttps
push
push
add
xchg
and
and
lods
cmp
ljmp
loope
fisubrs
stc
sbb
mov
hlt
stos
sub
mov
and
xchg
push
ljmp
inc
xchg
push
xor
movsb
das
mov
pop
ljmp
cmp
out
adc
loopne
es
pop
xor
mov
lds
cli
stos
into
pop
jns
add
mov
mov
lds
or
adc
jp
popa
test
fnstenv
cmp
add
mov
in
addl
js
push
iret
xchg
cmovle
push
in
dec
push
data16
jae
out
jae
test
in
aas
popa
sub
daa
in
scas
lds
sbb
push
cmpl
adc
mov
pop
loopne
jecxz
mov
dec
scas
filds
arpl
mov
fistpll
add
daa
test
imul
sbb
sub
pop
mov
lcall
adc
or
outsb
mov
push
or
sbb
xor
test
ret
push
stc
xlat
mov
pop
inc
out
adc
jl
ja
ret
fwait
mov
or
and
jnp
in
fs
mov
fdivs
in
mov
jnp
dec
ja
or
mov
xor
ljmp
push
pop
pusha
dec
push
and
push
jg
js
aam
push
add
jmp
ret
xchg
dec
xchg
out
cmp
orl
cltd
sar
sub
shrl
pushf
push
stc
scas
mov
mov
repnz
mov
repz
xchg
fstpt
add
pop
int3
pop
sbb
cmp
inc
pop
fsubrs
mov
or
cs
in
loope
mov
cs
gs
sbb
pop
hlt
pop
push
stc
xchg
fldt
sub
sbb
push
dec
insl
cld
sub
lods
out
xchg
mov
jae
xchg
les
inc
mov
jae
test
push
inc
rolb
cmp
sbb
pop
cmp
mov
in
aaa
pop
mov
scas
or
mov
pop
sub
push
pop
push
jmp
sbb
lcall
test
scas
sub
mov
test
into
and
lds
push
mov
test
lret
mov
push
repz
insb
outsb
xchg
cmc
mov
popa
xchg
ss
inc
fwait
dec
push
roll
aas
push
inc
out
mov
out
sub
lds
repz
adc
jecxz
xor
fldl
dec
js
xchg
jb
mov
jle
and
pushf
adcl
ret
dec
cmp
adc
or
mov
test
roll
jne
mov
mov
aam
pop
lods
cmp
pop
mov
cmpsb
adc
cltd
rdpmc
mov
into
in
sbbl
mov
sub
jp
scas
aas
xchg
add
cmpsb
sub
pop
mov
insb
push
add
or
pushf
pop
push
jb
dec
dec
mov
add
pusha
xchg
nop
inc
scas
sub
and
pop
test
sbb
loop
cwtl
sbb
cmp
xchg
xor
xchg
pop
pop
lock
insb
lods
into
and
out
adc
mov
bound
popf
or
repz
js
lods
cmp
std
pusha
scas
mov
into
inc
jne
fstpt
inc
mov
loop
dec
and
jg
xchg
xlat
push
cmp
and
jecxz
jl
arpl
addr16
into
jb
hlt
xchg
cltd
pop
pushf
jmp
cwtl
mov
aas
in
sub
or
ss
cmpsb
sbb
mov
mov
xchg
idivb
rorl
das
xchg
jnp
pop
xchg
mov
ret
jnp
dec
ds
shlb
add
enter
pop
in
cmp
pop
xor
imul
xchg
imul
in
jae
fdivrs
lock
andb
push
sub
enter
test
dec
fwait
cmp
xlat
jbe
fisttpll
fstps
add
mov
mov
add
hlt
push
xor
clc
lret
and
adc
jo
popa
jns
fnsave
loop
mov
out
mov
jmp
inc
or
mov
or
ret
mov
mov
into
fidivrl
xlat
fimuls
push
pop
dec
test
mov
out
mov
pop
pop
sub
sub
and
addl
xor
in
add
or
into
xor
inc
pop
xchg
bound
int
push
sbb
mov
repnz
stos
loopne
mov
movsb
cmpsb
lea
add
cwtl
mov
and
fsubs
sub
sub
fcomp
fsubs
int3
push
sub
orb
push
xor
mov
xchg
add
cmp
fsub
and
jmp
pop
ret
mov
in
sahf
xchg
insb
sub
test
push
pop
out
pop
fwait
mov
dec
sub
stos
outsl
sub
or
push
and
insb
gs
sub
stos
orl
sti
fisubrs
add
repz
les
outsb
xor
sbb
in
inc
insb
bound
pop
mov
and
popf
ljmp
int3
fisttpll
mov
dec
hlt
aas
adc
gs
sahf
dec
jl
lret
mov
xchg
cmp
push
or
aam
sub
push
xchg
jnp
xlat
je
adc
mov
jb
xchg
pop
xchg
inc
vmread
push
and
xchg
inc
cmpsl
sahf
sub
inc
cmp
adc
hlt
aam
aad
xchg
xor
lods
xor
push
in
sti
movsb
dec
lds
pushf
add
push
cmpsb
inc
or
fnstsw
xlat
dec
cmpsl
fdivl
shrl
popa
cld
sar
sbb
sbb
loop
cmp
cmpsb
cmp
loopne
je
sbb
ret
add
test
rol
outsl
mov
sbbl
nop
jle
dec
xchg
pop
push
or
pop
and
jbe
fistpll
inc
cltd
sub
xchg
je
pop
cmp
int
es
inc
add
lods
dec
punpckhwd
add
mov
cld
push
mov
pop
jmp
inc
add
fildl
push
ss
stos
pop
add
shll
xlat
add
loop,pn
push
shl
mov
lahf
xchg
popa
sub
sbb
popa
std
or
jl
sub
leave
cld
add
mov
fsubrl
push
jle
xchg
loop
subb
xchg
sbb
sbb
mov
or
ds
lods
sub
fcmovu
cltd
enter
xor
dec
mov
rcl
push
out
in
repz
lea
and
lods
xor
jecxz
cmc
dec
xchg
mov
insb
xlat
push
jmp
xchg
inc
cmovne
movsl
ss
or
pop
sbb
sub
push
mov
inc
push
jmp
add
mov
sbbl
loope
xchg
aaa
fisubrl
fsubs
pushf
or
mov
xchg
test
rcrl
push
hlt
pop
add
lret
stos
inc
rolb
mov
sub
jnp
mov
jle
test
mov
pop
mov
mov
push
fstl
sub
sahf
int
in
sbb
inc
sub
aaa
jecxz
xchg
cwtl
das
icebp
shlb
jno
testb
outsb
data16
cmp
jnp
adc
popf
in
pop
cmp
bound
push
jecxz
inc
nop
or
adc
lods
ja
stos
cmp
js
dec
xor
xlat
outsl
xor
scas
addr16
mov
ds
push
mov
cmc
stos
out
outsl
sbb
inc
xlat
dec
in
leave
es
mov
inc
cmp
pop
push
xor
mov
and
out
push
push
mov
dec
xor
and
test
arpl
movsl
push
or
fcoml
cmp
les
jecxz
dec
or
enter
mov
push
inc
clc
xchg
xchg
sbb
jnp
sub
js
jmp
jno
pop
sti
andl
test
pusha
pop
inc
inc
fs
mulb
cs
inc
fcoms
int
fists
pusha
lock
jae
or
fisttps
dec
adc
movsb
leave
lahf
pusha
or
push
and
imul
ret
insl
aaa
add
test
bound
jno
notb
iret
ljmp
stos
test
mov
rclb
aam
mov
arpl
sbb
xor
vaddpd
mov
pushf
popf
jge
sbb
cmpsl
orl
int
sbb
pop
pop
jle
push
xchg
dec
inc
movsl
fs
aam
in
dec
mov
inc
fisttpll
outsl
or
sbb
and
test
inc
mov
sbb
mov
add
in
jns
jns
adc
cmpsb
dec
pop
push
dec
scas
xchg
pop
pop
sub
popf
xchg
add
aad
xor
inc
xlat
leave
cld
push
mov
enter
pop
mov
js
add
inc
cmp
mov
push
pop
jp
arpl
dec
psubsb
pop
mov
movsb
lret
incb
adc
nop
fs
jl
scas
inc
loop
sub
mov
push
sbb
cmc
push
pop
fnstcw
in
adc
add
fiadds
sub
push
imul
xchg
addr16
pop
sbb
push
jno
jb
in
int3
out
ficompl
push
imul
jp
or
out
jno
mov
lret
js
sub
xor
imul
push
lods
push
fwait
or
int3
dec
outsb
leave
mov
xor
ret
mov
mov
push
scas
fwait
adc
mov
mov
shlb
addr16
out
insb
repz
adc
adc
xor
mov
ljmp
gs
jnp
mov
repz
xchg
in
loop
mov
fsubrs
sbb
mov
xchg
xchg
cltd
sub
imul
mov
jl
ljmp
in
lods
fisubs
inc
scas
jg
xor
adc
jg
sbb
movb
scas
popa
dec
shlb
mov
jmp
cmp
bnd
stos
xor
and
sahf
jae
lret
sub
jb
sub
jle
jge
mov
adc
mov
cmp
mov
xchg
xchg
clc
fs
lahf
xor
daa
or
adc
in
xchg
aad
sub
fimuls
loop
sbb
jmp
sbb
pop
subb
add
mov
imul
test
cmp
lods
push
mov
push
int
mov
jg
jmp
pushf
push
mulb
adc
xchg
fcoml
aas
and
and
pop
nop
clc
leave
jmp
cmp
testl
add
pop
push
push
add
out
in
push
mov
cmc
outsl
mov
les
inc
loope
cmpsb
inc
ficomps
sbb
leave
push
mov
out
ret
mov
cmp
cmpsl
cwtl
add
mov
jno
cmp
inc
aad
pop
sub
push
mov
scas
push
gs
dec
jg
cmp
and
mov
mov
imul
in
sub
lds
sarb
push
outsb
lods
sbb
in
sub
or
je
mov
jnp
movb
hlt
adc
push
icebp
add
shll
cmp
cmp
aam
std
movsl
push
dec
adc
mov
jns
sub
divb
or
std
shlb
ret
lahf
pavgw
and
out
arpl
jg
sbb
mov
inc
or
pop
stc
pushf
lods
dec
jno
mov
insl
notl
jno
stos
cmpsl
sbb
mov
outsl
aad
ljmpw
push
andb
xchg
and
push
xorb
mov
mov
loop
nop
mov
test
push
xor
xor
jge
adcl
outsb
leave
mov
stos
xchg
adc
lods
and
xchg
xchg
push
in
jge
aam
mov
xchg
sub
scas
fadd
lcall
sub
nop
cmp
adc
push
orb
push
xchg
iret
inc
das
xchg
pop
mov
mov
addb
cmp
xchg
push
mov
add
arpl
cmp
out
sub
pop
sbb
lret
inc
ret
push
incb
dec
xor
enter
push
xor
and
xchg
xlat
lcall
add
sbb
or
mov
scas
jp
in
sub
or
push
and
faddl
sub
push
in
jns
mov
push
loop
adc
ljmp
in
and
sub
mov
dec
mov
imull
idivl
lret
push
cmp
pop
pushf
lock
mov
call
mov
jns
dec
sub
xlat
jle
lds
negb
in
mov
or
dec
mov
icebp
ret
popf
jecxz
out
and
test
ss
jb
xor
xlat
cli
ljmp
pop
or
lock
cli
inc
cmpl
inc
or
dec
jnp
mov
adc
jmp
jne
gs
cmp
cmp
jae
mov
mov
outsl
ficomps
dec
jl
sbb
push
adc
xchg
mov
ret
call
sbb
and
mov
divb
das
jne
imul
jl
gs
and
sbbb
nop
xchg
pop
xchg
or
addb
mov
ljmp
iret
orl
xchg
mov
mov
add
and
insb
lret
inc
dec
fnsetpm(287
ret
lea
pop
in
cmp
cmp
push
das
xchg
sbb
in
and
rcr
dec
jle
stos
lcall
pop
fnstenv
test
shlb
jecxz
cli
mov
mov
push
stc
es
sub
add
lret
mov
or
leave
jno
imul
mov
subb
push
fucomip
rcl
loope
fdivrl
fbstp
dec
in
xchg
dec
dec
icebp
sub
add
mov
dec
fbstp
cmpsl
push
cmp
cmp
mov
push
push
cmpsb
gs
popa
inc
xor
push
rcrl
fistpll
sti
sub
fs
inc
push
into
clc
sbb
scas
mov
cmp
mov
sbb
out
cmp
mov
les
fimuls
clc
arpl
dec
femms
ret
sub
out
and
cltd
pop
lods
add
fisubrl
dec
dec
mov
adc
lds
stc
mov
insb
adc
lahf
sub
sub
cmp
subl
cmpsb
leave
insb
add
xchg
inc
movswl
xlat
ds
enter
cmp
das
adc
aaa
hlt
int
jecxz
mov
xchg
scas
fdiv
push
andl
or
leavew
sbb
cmp
inc
mov
in
out
js
mov
sbb
inc
pop
lods
or
shll
xchg
dec
sub
pop
push
arpl
leave
inc
sti
faddl
mov
jo
cmpsl
sbb
inc
and
sahf
inc
imul
adc
jg
mov
xorb
imul
addl
movsb
out
dec
dec
movsb
xchg
and
cmc
into
test
nop
jo
cs
jae
adc
shrb
xorl
mov
xchg
push
pop
sbb
icebp
xlat
cmp
sub
mov
scas
dec
dec
iret
sbb
movsl
leave
cld
lods
js
push
scas
mov
sbb
ja
xor
test
pop
test
sbb
xchg
mov
frstor
jge
dec
xchg
sti
mov
das
or
mov
sub
adc
scas
and
push
xchg
pop
in
xlat
fsubrs
pop
cmp
stos
pop
ret
push
psrlq
aam
mov
jl
add
pop
jb
pusha
jp
repz
cmpb
sub
orl
fs
clc
add
mov
mov
mov
rcll
dec
mov
pop
mov
scas
mov
ja
sti
in
or
gs
fsubrs
mov
pusha
push
ret
pop
cmp
js
inc
cmp
xor
ljmp
add
lcall
add
cmc
xor
in
outsl
adc
mov
adc
aad
daa
sub
jle
leave
mov
add
xchg
cmpsb
in
push
cwtl
rol
stc
movsb
pop
repz
mov
jle
lret
pushf
jnp
aaa
mov
adc
mov
pop
cmpsb
in
jo
shll
ret
into
mov
mov
xor
imul
mov
out
or
lcall
mov
xor
and
sbb
xchg
inc
dec
jns
iret
scas
mov
mov
lahf
add
mov
mov
lcall
enter
jmp
and
in
aam
xchg
fistps
ret
fistpl
dec
adc
scas
vcvtsd2ss
je
rcr
mov
jb
sbb
mov
xlat
repz
mov
loope
mov
xchg
sub
xor
sbb
xchg
movsb
scas
add
mov
xchg
aad
enter
inc
iret
and
andb
jmp
dec
dec
jbe
pushf
fdivl
push
in
push
add
aam
or
scas
fdivr
sub
fildll
jmp
daa
add
popa
int
push
sbb
stos
loope
test
mov
or
stos
dec
jne
push
mov
mov
adc
fsubrs
xchg
sahf
jl
lahf
lods
pop
fstl
faddl
or
mov
pusha
test
add
out
gs
sbb
or
xor
add
outsl
lcall
les
inc
inc
stos
scas
out
imul
sub
sub
fsubrl
lea
int
cmovae
push
sub
mov
fistl
adc
push
dec
or
sbb
jb
jbe
xchg
dec
stos
mov
cltd
outsb
sbb
cwtl
jnp
dec
test
and
rorb
mov
ja
and
leave
add
sbb
jl
enter
sbb
inc
cmp
push
imul
jno
or
ret
sub
rcrb
or
mov
push
mov
cmp
cmp
addr16
inc
hlt
scas
aaa
lods
fs
mov
in
adc
insl
stos
stc
push
sbb
sbb
ljmp
outsl
fucomi
stc
jbe
movsb
xchg
repnz
mov
ss
shl
mov
jnp
addr16
or
dec
ja
pop
add
hlt
in
negl
dec
push
push
add
adc
in
insl
scas
sbb
xchg
in
xchg
adc
mov
mov
push
lcall
push
push
dec
repz
adc
cmc
roll
ja
orl
dec
inc
jo
push
aas
ret
in
push
mov
and
pop
aas
imul
jmp
lock
adc
jecxz
push
movsl
mov
cmp
inc
mov
ljmp
insb
add
jmp
cwtl
jge
xchg
fsubrl
je
sbb
imul
pop
inc
movsl
dec
leave
fcoms
mov
fwait
xor
rcrb
cmp
push
std
les
jae
divl
data16
cwtl
js
mov
and
inc
cmp
fisubs
lods
mov
out
jo
xor
cmp
lods
push
mov
adc
dec
fcmovnbe
hlt
popf
les
cmp
or
fstps
das
fisttps
popa
fcomi
sbb
xchg
neg
lcall
sbb
dec
push
adc
adc
movsl
and
sub
dec
cmp
int3
inc
fiaddl
es
shr
xchg
mov
mov
icebp
lds
icebp
addr16
mov
inc
cmp
xchg
fnstsw
mov
xor
fdivs
add
arpl
mov
jbe
push
adc
inc
xchg
mov
cltd
jno
loopne
mov
shll
dec
and
outsb
and
xor
ja
cmpsl
cwtl
cmp
push
dec
loopne
lock
cmc
stc
cmpsb
mov
shl
fcoml
movsb
push
lret
xchg
jne
aam
pusha
out
sbb
inc
inc
sahf
and
fldenv
ss
aas
outsb
push
and
mov
push
pop
imul
sub
outsb
pushl
inc
inc
cs
ljmp
idivl
cmc
xchg
lahf
lods
dec
fld
push
adc
scas
cltd
push
pop
mov
lds
pop
pop
or
pop
bnd
pop
lock
into
pop
inc
jp
xchg
mov
mulb
or
and
jnp
divb
jmp
xchg
or
xor
mov
mov
push
mov
pusha
mov
rcrl
push
shlb
or
sub
sub
xchg
mov
imul
out
jae
icebp
in
es
lcall
scas
push
daa
incl
mov
sbbl
xor
dec
cmc
rcr
lds
dec
imul
jl
lods
xor
jge
add
xor
add
mov
mov
outsl
cmp
add
pop
push
jae
rol
dec
xor
push
in
inc
xorl
hlt
js
test
mov
iret
jl
lods
int
and
push
sub
popa
push
fisubrs
inc
hlt
leave
add
hlt
or
mov
push
sbb
clc
inc
imul
inc
adc
jo
push
imul
repnz
loope
add
pop
add
out
jae
xor
movsl
sarl
cli
ljmp
cltd
adc
pop
pop
scas
adc
xchg
jne
iret
xor
and
sub
mov
call
cli
das
cmpsb
imul
mov
jge
jae
cltd
mov
add
dec
xor
dec
xchg
inc
scas
lcall
popa
clc
xor
cltd
fimuls
pushf
lahf
sbb
sbb
mov
add
sbb
loopne
jns
sbb
icebp
mov
jge
fs
jbe
sub
pop
bound
leave
pop
mov
push
or
jb
sarl
adc
inc
add
sbb
jecxz
lcall
int
jno
fstpt
and
scas
xor
and
call
icebp
nop
dec
out
stos
gs
dec
iret
les
pop
inc
shr
xchg
ja
fcomps
inc
aam
rorb
int
int3
mov
call
sbb
in
add
in
dec
adc
mov
ljmp
jg
sub
fnstcw
frstor
push
shrb
outsb
mov
scas
mov
mov
mov
push
jns
test
mov
xor
mov
or
cmpsl
jnp
jbe
sub
pop
mov
or
push
adc
out
fmul
ss
pop
insl
mov
xchg
insb
adc
fcoms
pop
cmp
daa
enter
jle
and
clc
xchg
int
into
mov
pusha
jge
sub
inc
into
xor
sub
fsubl
mov
cltd
iret
fsts
cltd
mov
in
outsb
push
pop
jg
xchg
sub
sbb
cltd
daa
pop
into
mov
pop
call
sub
gs
push
dec
jbe
sahf
cmp
mov
or
cli
or
xchg
sbb
addr16
paddb
jbe
mov
mov
adc
cmp
mull
dec
cmp
iret
xor
shll
or
insb
jle
push
mov
cmp
pop
fmuls
dec
sbb
je
pop
add
clc
add
xor
les
pop
mov
cli
push
js
jbe
xor
lods
or
xchg
adc
pusha
mov
dec
xor
iret
jb
sub
push
jo
arpl
enter
stc
or
scas
jns
jbe
shll
jle
mov
inc
xchg
vpsrlw
gs
aaa
jns
sti
sub
mov
and
addr16
js
jmp
lret
xchg
xlat
dec
xchg
mov
or
cmpsl
xor
mov
add
jnp
or
cmp
dec
pop
inc
test
sub
test
mov
fnstsw
nop
fsubrs
lods
test
hlt
mov
lret
dec
cmp
std
adc
xchg
sbb
sbbb
cmpsb
out
fisubrs
addr16
jne
cmp
cld
dec
pop
les
cld
fists
cwtl
std
pop
in
xchg
stc
adc
xor
xchg
stos
stos
mov
ret
cmp
mov
adc
cs
outsb
rcll
lods
fldcw
pop
jb
cmp
outsb
div
push
call
dec
int
lea
andb
xchg
jl
jle
popa
and
add
mov
mov
mov
movsb
rclb
hlt
fcmovb
jle
repnz
push
mov
jno
outsb
or
jne
push
rol
or
dec
mov
push
popf
jmp
inc
or
push
xor
inc
addr16
test
sbb
das
fs
sub
inc
xchg
push
call
lret
pusha
sbbb
pop
sbb
jge
fsubrl
fsts
add
xchg
in
pop
lods
push
sub
lds
cmp
pop
in
dec
mov
adc
clc
push
sbb
mov
repnz
and
mov
xchg
add
lret
out
dec
arpl
sbb
cmp
sbb
jmp
or
jns
inc
insb
mov
ret
or
ja
dec
cmp
testb
jg
push
neg
out
fstps
and
arpl
ret
testb
shrl
add
repz
mov
test
mov
out
jo
mov
es
pop
fidivs
add
dec
push
mov
testl
cli
fidivs
test
mov
or
xchg
pushf
lret
mov
and
jmp
mov
imul
jns
lret
pop
mov
push
sub
in
rcll
lret
pop
imul
or
xor
es
lret
add
scas
cmp
inc
mov
mov
fs
fstps
sub
inc
ds
or
movsb
ljmp
ret
add
out
mov
push
add
xchg
push
loopne
rcl
dec
or
or
xor
loope
inc
enter
cs
mov
pop
pop
dec
push
mov
enter
cmp
dec
pop
xchg
or
dec
jnp
xchg
shll
lds
lds
mov
and
lods
jl
in
sub
cmp
push
and
jnp
lret
inc
inc
sub
or
mov
jb
mov
adc
lods
jp
test
sub
inc
mov
sahf
jmp
sbb
add
mov
call
fcomps
icebp
fmuls
jmp
adc
jle
mov
and
add
nop
xchg
cmc
out
int3
ret
divb
mov
stc
out
fsubl
push
dec
lret
mov
sub
inc
xor
mov
lods
adc
jle
filds
ror
adc
cltd
jo
sbb
out
push
add
shrb
sub
xorb
cltd
push
dec
mov
mov
pop
ret
data16
sbb
pusha
jns
and
das
daa
daa
pop
push
inc
in
mov
data16
test
mov
cmc
xchg
pop
xchg
and
mov
test
mov
adc
insb
mov
gs
popa
sbb
mov
out
sub
shlb
pop
pop
popf
out
mov
scas
outsb
rolb
xchg
int
rorb
inc
push
jg
pushf
and
adc
mov
std
push
shrb
inc
mov
inc
mov
pop
mov
xor
ds
mov
inc
enter
xchg
push
pop
es
mov
add
mov
xchg
int3
mov
sub
jbe
pop
ret
out
out
call
cmc
xchg
cmp
int3
int3
xchg
or
xchg
loop
pop
dec
add
mov
jl
adc
or
jbe
ficoml
or
or
sub
daa
and
sahf
fstl
aad
rorl
mov
mov
pop
js
in
mov
into
dec
add
dec
addr16
cli
clc
dec
add
repnz
inc
in
xchg
jb
sti
mov
sub
dec
outsb
clc
in
icebp
xor
xchg
shll
shlb
ss
sub
xchg
call
xchg
lret
bound
shrb
adc
adcb
loopne
hlt
jno
pop
mov
popf
jp
adc
test
sub
xchg
dec
daa
ret
jp
mov
ss
jg
out
test
xchg
cltd
jb
sbb
das
nop
pusha
and
ss
outsb
into
pop
jp
sub
mov
and
out
loop
ljmp
dec
dec
ret
pop
in
pop
xlat
inc
inc
int3
test
imul
push
roll
and
popl
mov
call
addl
jmp
xor
in
jo
push
inc
pop
xor
inc
popf
jp
cwtl
adc
jb
xlat
gs
stc
and
repz
ss
je
leave
push
movsb
and
xchg
push
jns
adcl
mov
adc
push
jg
push
outsl
pop
or
xchg
xchg
scas
call
xchg
imul
fwait
add
out
bswap
ss
fsincos
testb
pop
dec
mov
mov
mov
gs
cmpsl
xchg
inc
fiadds
add
sub
js
pop
cwtl
dec
xchg
mov
stos
stos
pop
mov
pusha
or
aam
dec
sub
inc
mov
push
orb
negl
xor
push
adc
ret
and
scas
jmp
dec
shl
adc
lret
pop
push
sub
adc
mov
sti
xchg
aam
call
mov
stos
xor
jl
and
xchg
add
xlat
cmp
arpl
je
movsb
iret
sbb
push
adc
mov
lea
cmpsb
nop
or
add
iret
mov
bound
scas
hlt
pop
and
and
das
xor
nop
xchg
mov
fstpl
ret
addl
sub
xchg
mov
fwait
xchg
bound
adc
cmp
jb
push
shrb
jbe
jmp
adc
iret
test
sahf
jge
mov
jbe
and
jle
adc
movsl
aas
lahf
leave
sbb
push
aaa
ds
cmc
adc
rcll
cmp
outsb
and
imul
xor
in
push
out
lret
xchg
insl
js
jecxz
pop
add
je
int
or
cmp
lret
sbb
imul
adc
mov
push
mov
push
pushf
test
outsb
and
cmp
xor
out
je
mov
push
xchg
cltd
daa
xor
add
mov
lods
cmp
sbb
cmp
lahf
imull
jnp
lds
push
push
jne
repnz
xlat
adc
stos
scas
test
cld
shrb
sti
orl
fstpt
ret
sbb
pop
arpl
pop
out
sbb
movsl
and
sti
cs
lods
lret
ljmp
rcrl
xchg
pushf
iret
daa
pop
dec
pop
pop
add
daa
mov
xchg
push
aam
out
inc
push
mov
cmp
stos
aaa
xor
je
and
lea
and
and
sbb
lods
push
xor
xchg
pop
mov
xor
dec
scas
mov
mov
outsb
push
pop
jo
xchg
fsubl
mov
ss
xchg
fnstenv
mov
jmp
loop
xor
divl
movsl
adc
cmp
out
dec
and
pop
add
test
pop
in
arpl
fwait
ljmp
ljmp
inc
jg
int
inc
je
enter
pop
jmp
inc
xor
pop
mov
fwait
jo
or
xchg
pop
and
mov
mov
inc
lock
cs
or
lods
jmp
mov
std
out
inc
push
adc
mov
sub
pop
stos
dec
sti
sbb
cs
xchg
jg
shlb
and
lahf
xchg
inc
pop
gs
les
decl
xchg
stos
lods
sub
push
jl
es
rcll
aad
and
mov
push
xor
jecxz
mov
cmp
sbb
insb
jo
jbe
dec
in
das
dec
mov
adc
xchg
xchg
aam
roll
mov
stc
lods
mov
into
lock
ficompl
sub
or
dec
inc
push
loope
ror
in
xor
outsl
dec
cld
sti
adc
jo
inc
hlt
dec
icebp
xor
in
add
mov
and
jmp
sbb
mov
and
iret
dec
addl
js
ss
test
outsb
adc
mov
pop
rcrl
mov
xor
dec
mov
loope
test
jg
cmp
cmp
in
or
test
and
bound
shlb
mov
lock
enter
pop
jp
add
hlt
pop
gs
mov
clc
lods
in
clc
cmp
cwtl
and
popa
sub
adc
mov
sbb
and
and
sbb
add
mov
sbb
int3
leave
hlt
pop
and
sbb
es
insl
loope
test
add
inc
scas
sbb
loope
xchg
lahf
cmp
fucomp
cmp
push
inc
imul
sub
movsl
mov
in
rcrb
lods
fs
daa
add
and
cmp
and
daa
int
adc
in
repz
test
dec
inc
dec
lea
push
enter
scas
push
cmpsl
out
sub
lret
nop
xor
mov
movsl
not
push
sub
sbb
lock
mov
fwait
inc
insl
int3
stos
cwtl
cs
mov
and
dec
loope
push
or
mov
lods
hlt
cmp
push
pop
fildl
xchg
fs
cltd
add
popf
arpl
jg
cmp
or
dec
jmp
or
xchg
pop
pushf
out
jae
pop
js
and
adc
mov
cld
cmp
call
add
dec
shl
sub
test
roll
enter
xchg
fdivs
cmpsb
test
loop
xchg
lret
scas
fwait
call
pop
stos
add
xchg
lds
push
sbb
cmpsl
mov
orl
cmpsl
jg
jp
scas
inc
push
dec
sbb
xor
cmp
les
mov
jecxz
jge
pusha
faddl
and
pop
mov
shrl
mov
mov
pop
adc
mov
insb
add
outsb
push
pop
das
sub
mov
pop
stc
movsl
loop
jno
cwtl
pop
sahf
cmp
mov
sahf
or
inc
insl
and
orl
filds
stc
popf
or
repz
push
mov
push
push
mov
and
inc
sbb
jmp
push
mov
aad
jg
xor
mov
fcmovu
js
xor
cli
gs
push
cmp
xor
add
mov
adc
cli
ret
out
cmc
rorb
loop
push
rcll
xchg
repz
xchg
call
aad
inc
rorl
dec
add
das
xor
imul
mov
jp
cmc
or
mov
lcall
lea
add
cmp
jno
xchg
adc
xor
jge
adc
aas
mov
inc
imulb
push
shlb
sahf
cmp
jl
pop
das
leave
movsl
inc
call
push
daa
leave
sub
test
cmp
call
mov
cltd
pop
mov
fildl
lock
enter
mov
lods
adc
push
inc
cmc
inc
test
push
in
xchg
sbb
int
cltd
pop
xchg
jb
jl
add
sar
jl
pop
xchg
gs
scas
lret
gs
aaa
imul
pusha
stc
dec
push
mov
cld
clc
sub
pop
pop
mov
push
inc
or
arpl
mov
into
mov
mov
mov
inc
in
lds
out
push
bound
loopne
sub
cmp
pop
push
popa
jbe
lea
mov
cmc
xor
and
xchg
sub
punpckhbw
sbb
cmpsb
aam
mov
dec
pop
fildl
sti
and
mov
xchg
inc
mov
into
bound
lcall
das
inc
inc
push
push
cmc
cmpsb
mov
nop
xchg
sbb
lahf
rolb
pop
dec
cmpsb
pop
or
jb
adc
nop
ret
and
addr16
jb
lret
mov
aad
repz
out
mulps
lret
sbb
cwtl
add
and
lea
dec
sub
or
sbb
pop
and
test
out
dec
or
push
or
ja
aaa
pusha
inc
sbb
icebp
cld
xor
cmp
push
xorl
push
das
outsl
outsl
and
test
gs
jl
shrl
cmp
ja
xchg
and
cmp
ss
add
or
insl
bswap
aaa
nop
xchg
jl
pop
pop
cwtl
in
lds
lds
aad
adc
jle
push
daa
lods
add
add
ss
punpckhwd
cmp
cmp
ret
les
push
pop
iret
fsubrl
negb
push
jnp
cmp
xchg
popa
sub
or
add
xor
in
dec
jae
pop
mov
cmp
fmuls
lcall
mov
push
subl
movsl
lods
mov
ss
mov
jmp
orl
jle
mov
xchg
stos
and
inc
test
data16
and
adcl
rclb
or
lds
mov
mov
pop
inc
push
fsubrs
add
jg
adcl
dec
dec
mov
ret
pusha
dec
mov
inc
shll
mull
push
dec
inc
inc
jmp
cmp
sub
xchg
imul
jnp
mov
leave
insb
jnp
jg
aad
inc
sub
imul
ja
call
jmp
dec
insl
sub
mov
sub
decl
lahf
mov
pop
das
mov
mov
rol
lcall
jne
mov
push
push
push
inc
jge
and
lahf
mov
shll
mov
pop
cmc
popf
xchg
jo
sub
push
or
addb
inc
jbe
out
mov
xor
push
gs
add
dec
and
in
in
xchg
subb
xor
cmpsl
mov
aam
js
dec
jp
push
mov
js
cmc
lcall
rcrb
push
mov
mov
mov
dec
mov
and
pop
sbb
mov
lods
cmp
pop
mov
inc
in
mov
pop
enter
cli
mov
mov
test
pop
lcall
sbb
mov
or
mov
jle
lea
dec
loopne
add
js
clc
cmp
mov
imul
fistps
les
mov
in
cmp
test
push
mov
es
bound
jg
dec
pop
pop
rolb
xchg
sub
popf
dec
es
fisttpl
out
xchg
je
push
movsl
jns
jb
mov
pop
push
imul
fstpl
adcb
mov
add
mov
out
lret
jnp
fsubrs
lcall
xchg
hlt
add
test
imul
fbld
test
hlt
sbb
jle
mov
fldenv
cmp
xor
inc
adc
jl
xchg
sub
fldenv
inc
and
xor
jecxz
cli
inc
mov
psllq
gs
mov
dec
jae
mov
adc
dec
inc
rolb
leave
pusha
jge
loopne
adc
pop
addr16
and
fmuls
loop
push
mov
push
xchg
sbb
movsb
repz
shr
in
push
out
add
hlt
push
cwtl
lds
jp
push
mov
movsb
mov
outsl
loope
mov
ja
rcr
xor
test
and
or
xchg
cwtl
fimull
cmp
add
lahf
daa
iret
ds
ja
rclb
imul
xchg
outsb
push
mov
icebp
inc
fnstcw
push
jbe
sbbb
jns
xlat
inc
dec
rcrb
mov
stos
sti
inc
jecxz
or
scas
jae
push
inc
aad
inc
sbb
rcr
gs
mov
pop
cltd
sub
inc
mov
sti
ficoml
jbe
shll
out
scas
negb
sarl
or
adc
mov
xchg
push
push
jmp
addr16
aaa
sti
ds
mov
stos
sub
mov
out
aaa
fxtract
mov
push
cmp
inc
ret
sub
adc
fsub
and
es
nop
incb
jns
mov
out
pop
lods
dec
add
fs
jae
jnp
lds
rclb
mov
jne
push
inc
int3
jns
mov
sbb
pop
push
sub
hlt
seto
ja
jp
lds
jg
xchg
gs
and
push
xchg
out
jg
pusha
mov
ret
std
insb
cmp
inc
shlb
add
xor
xor
int3
dec
pop
jl
push
adc
je
ror
subl
mov
lret
frstor
repz
ficoms
adc
in
jl
lods
sub
or
push
lods
loope
addb
dec
int
mov
xor
ss
mov
mov
imul
mov
and
insl
test
push
test
mov
nop
xor
dec
or
aas
popf
and
jb
shlb
sub
add
lods
sahf
xor
add
add
test
mov
cmpsb
sbb
sahf
cmp
test
cli
add
into
notb
fsubl
leave
inc
pusha
rcl
push
fiaddl
fldenv
lcall
loope
ds
sbb
movsl
or
pop
dec
and
mov
rcrl
pop
dec
dec
cmp
add
xor
aas
mov
sub
add
xchg
cmp
add
sub
mov
jge
pushf
push
rolb
xlat
mov
xchg
xchg
jno
in
icebp
int
mov
sbb
movsl
xor
inc
jbe
rclb
jb
cmp
aaa
fldcw
aad
xor
pop
inc
jp
cwtl
cld
or
mov
es
fwait
cmp
addl
jle
mov
outsb
aam
mov
scas
mov
xlat
in
inc
push
xor
pop
sbb
mov
insl
faddl
jge
inc
mov
das
mov
pop
xchg
out
in
out
into
stos
pop
dec
leave
sbbb
jne
xchg
sbb
in
mov
fstcw
pop
sub
lds
and
dec
insb
loope
sub
movsb
test
sub
push
jmp
test
shl
jne
xchg
hlt
push
dec
mov
test
dec
mov
push
jnp
push
lret
pop
push
faddl
push
insb
pop
orl
and
daa
jo
outsl
popl
in
xor
leave
sbb
stos
fs
aad
xor
xchg
mov
xchg
xchg
hlt
iret
mov
lahf
lods
inc
inc
sub
jae
push
incb
lret
daa
clc
rolb
icebp
scas
loope
sub
sti
outsl
fwait
xor
andl
pop
ret
sub
gs
pop
loopne
mov
mov
mov
rcll
js
mov
add
in
cmpsb
iret
mov
addr16
loopne
dec
sbb
testb
bound
addr16
addb
mov
lcall
xchg
pop
sbb
loope
data16
jno
loopne
loope
rorl
loop
test
scas
push
inc
ja
aad
insl
je
incb
jno
xchg
xchg
push
mov
xor
xchg
push
scas
sbb
mov
push
or
mov
sbb
fwait
sbb
imull
idivl
dec
jmp
push
in
or
int3
push
repnz
dec
outsb
dec
mov
les
outsb
push
push
xchg
sbb
out
mov
lea
mov
mov
sbb
frstor
pop
dec
paddd
das
pushf
dec
ds
jp
lds
inc
xor
ror
mulb
jl
rclb
lods
lds
test
push
jge
je
sbb
stc
cli
fildll
ljmp
push
jo
std
sub
rcrb
xchg
push
pop
sub
movsb
imul
adc
sbb
add
divl
cmc
mov
fcompl
xor
fmuls
pushf
push
outsb
jecxz
jbe
enter
rcl
xlat
cwtl
sbb
push
fs
push
xchg
sbb
iret
fadds
pop
nop
push
lret
xchg
sbb
push
iret
mov
icebp
lcall
loop
mov
cmpsl
xor
sarb
les
dec
gs
rcrb
add
mov
dec
iret
out
mov
nop
xor
adc
jo
push
data16
ds
add
dec
mov
stc
xorl
lds
jns
push
data16
mov
aaa
fstl
add
roll
or
fadd
cld
leave
pop
insb
in
cltd
xorb
jg
stos
xor
dec
push
cld
js
add
dec
cld
sub
jecxz
lock
sbb
mov
or
mov
xlat
push
xor
daa
in
mov
vpaddb
test
xor
ljmp
sti
mov
call
or
jo
fsubrp
std
shll
cmc
push
in
ss
ret
jmp
jnp
arpl
add
lcall
fadds
mov
sub
pop
mov
dec
bound
inc
mov
or
pusha
or
test
dec
push
rcrl
push
scas
mov
popf
sbb
dec
dec
and
mov
cld
xchg
add
lods
dec
repz
or
jne,pt
inc
in
push
add
popa
xchg
or
lcall
adc
or
mov
pop
xor
add
loop
mov
mov
pop
mov
inc
push
movsb
int
test
loope
aad
movsb
adc
test
ss
inc
outsb
insl
jmp
and
ret
lret
adc
mov
aaa
fsubrs
sti
scas
add
xchg
mov
repnz
in
xchg
pop
mov
cwtl
push
fwait
adc
jmp
in
cmpsb
cmp
mov
push
shrl
and
mov
cmpsb
xchg
cmc
loopne
sti
xchg
xchg
mov
add
cmpl
add
aaa
ds
mov
out
es
ljmp
xchg
sti
ljmp
cltd
mov
subb
push
jle
push
std
mov
jl
les
xchg
xchg
sti
fucomp
cmp
xor
push
mov
add
add
fdivs
cmc
adc
aaa
incb
cmc
xchg
dec
cmp
jg
lods
fcomi
stos
cmc
adc
mov
mov
dec
mov
xchg
lds
arpl
inc
sbb
gs
jg
mov
sbb
mull
test
add
out
sahf
cmpsl
and
cmp
or
or
jnp
dec
pop
gs
int3
dec
jb
mov
std
push
jmp
into
jae
xchg
inc
int
lahf
push
xchg
dec
outsl
addr16
outsl
test
sti
fstl
push
push
sub
nop
jb
loope
adc
fildll
inc
dec
xchg
cli
aam
fmul
xor
xor
or
dec
push
into
pusha
fs
sbb
mov
mov
add
sti
jg
stos
push
cmp
mov
xor
mov
mov
fldcw
push
add
cmp
in
mov
shrb
cmpsb
push
test
shlb
mov
popl
repz
pop
lea
xchg
add
jmp
adc
mov
gs
dec
pop
stos
xor
test
aas
push
pushf
daa
mov
aaa
aam
adc
push
adc
fsubrl
sub
pop
cmpsl
cld
fwait
xor
push
cmpsb
cld
insb
negl
sub
or
bound
adc
enter
mov
push
sub
mov
int
iret
loope
jno
loope
into
fildll
push
popa
dec
jo
dec
mov
sbbl
rorl
test
pop
dec
push
mov
mov
jl
fcom
push
es
lret
push
nop
enter
nop
clc
cltd
lds
fwait
jns
aad
cld
data16
imul
sbb
jge
fcmovnu
and
pop
mov
mov
lea
repnz
insl
xor
and
inc
pop
enter
pop
adc
daa
cmc
pop
xchg
repz
jae
pop
xor
stc
lock
xor
cmp
push
lret
xchg
bound
jns
lock
jl
jl
push
data16
push
adc
xorl
mov
add
sbbl
mov
mov
pop
dec
jge
dec
xlat
push
icebp
fidivrs
aam
xor
rolb
test
fisubl
or
xchg
sbbl
xchg
adc
xchg
sbb
imul
push
cmp
sbb
testl
and
aas
push
out
sub
mov
cs
into
jle
mov
add
test
push
pop
sub
popf
mov
push
jae
xor
adc
and
jecxz
add
stos
cmp
adc
sub
out
cli
lahf
into
sub
iret
lcall
nop
cmp
xchg
sbb
in
and
mov
jne
in
mov
cmpsb
add
fnstsw
repz
add
fwait
insb
stos
sub
es
xor
test
xchg
mov
dec
or
mov
lods
xchg
int
xchg
sbb
add
cmpsl
pusha
test
add
lods
cmp
andb
and
out
xchg
push
cmp
ret
xor
lds
scas
sub
adcb
or
xchg
dec
es
bndldx
mov
add
inc
sub
in
cmp
into
pop
push
pop
dec
add
nop
adc
faddl
push
lahf
fcmovnu
cmovne
inc
xor
out
xchg
lods
push
inc
jnp
enter
jb
xor
jmp
push
push
test
lds
xchg
imul
lock
lods
in
mov
pop
test
xor
daa
iret
in
stc
cmp
cmc
inc
push
mov
hlt
mov
in
xorb
aam
gs
dec
and
push
imul
jb
insb
push
fisubrl
insl
jmp
sub
lret
sahf
lea
push
mov
mov
in
sub
xor
pop
mov
rcr
stc
or
lret
scas
and
and
push
or
jmp
mov
push
fisubs
sub
dec
dec
push
popf
es
or
andl
int3
xchg
popa
pushf
add
jg
push
paddusb
xor
sbb
adc
out
dec
stos
je
push
int
cmp
icebp
repz
xchg
into
scas
or
jle
aam
xchg
jle
xor
inc
pop
cmp
jmp
call
mov
ret
clc
jbe
into
dec
int3
adc
or
js
iret
inc
xchg
pop
addl
fwait
subl
add
pop
out
in
popl
jb
outsl
mov
push
and
sub
add
mov
je
in
jb
mov
out
mov
push
mov
push
jo
mov
xor
negb
adc
mov
gs
mov
jb
imul
lock
movsl
popa
push
pop
xor
ficomps
adc
hlt
jnp
inc
inc
mov
mov
adc
dec
fwait
xchg
fidivl
adc
divl
mov
xor
pop
pop
add
nop
mov
out
mov
jmp
cmpsl
mov
enter
rcll
xor
mov
out
sub
and
push
mov
cmp
repnz
out
pop
test
push
test
cmc
mov
ds
sub
mov
sub
int
push
sbb
push
aad
jmp
mov
sbb
add
add
or
add
cltd
shlb
mov
and
pop
das
pop
jne
clc
out
sbb
mov
mov
in
xor
daa
ss
in
lcall
push
cmp
cmpb
add
cwtl
pop
dec
cmp
scas
cmp
jl
pop
xor
test
jg
cltd
ret
or
arpl
mov
mov
and
jecxz
daa
mov
stc
movsl
fstpl
jmp
rcr
test
push
lds
pop
dec
pop
mov
jge
xchg
ss
push
sub
pushf
sub
dec
sbb
inc
stos
jp
lds
movsb
jo
fistpll
cmp
adc
fidivl
dec
cld
fildl
and
add
repnz
js
jmp
inc
inc
add
sub
inc
mov
test
push
sbb
push
or
inc
cld
rcll
std
sub
in
imul
sbb
in
and
cmp
sahf
pop
aas
adc
repnz
fbstp
out
sbb
cmpsl
popf
xchg
test
cmp
sbbl
insl
stc
and
clc
cmp
push
sbb
loopne
rcrl
pop
cmc
out
cli
mov
mov
vorps
leave
xor
call
jae
mov
lea
mov
pop
test
call
mov
arpl
je
test
lock
mov
pop
cmp
test
mov
mov
or
pop
lods
mov
mov
add
add
fwait
icebp
pop
jo
daa
lock
push
bound
cli
sub
lods
lea
push
loope
repz
xor
jb
mov
daa
fsubrl
fs
dec
inc
call
xor
cld
mov
daa
test
jb
xchg
test
lahf
xchg
arpl
mov
xor
and
out
andps
stos
push
mov
mov
out
mov
sbb
xchg
fsubl
pusha
rcrb
stos
mov
aad
jns
mov
jne
jmp
je
xlat
pop
int3
push
sbb
loop
add
pop
imul
popf
mov
dec
pop
fsubrs
jb
dec
mov
es
imul
jl
sbb
cmp
stos
addb
lock
push
mov
loope
push
cld
push
sub
lods
mov
pusha
jg
adc
push
pop
mov
or
cmp
aam
fwait
shlb
push
inc
mov
cmp
out
lea
clc
subb
jmp
adc
jmp
cltd
inc
sub
and
ret
rcll
push
stos
into
pop
pop
popf
sti
insb
movsl
mov
sub
pushf
shlb
test
imul
shl
jp
nop
arpl
insb
bound
out
adc
gs
cli
pop
dec
lret
addr16
scas
xchg
mov
pusha
jns
ror
testb
in
jl
pop
fistl
jne
cmp
sbb
inc
fcompl
orl
imul
lret
insb
xchg
loopne
adc
shlb
xchg
adc
je
dec
push
cmpsl
xlat
out
in
mov
mov
and
in
gs
fnstsw
push
sub
fisttps
xchg
or
mov
rorl
push
subb
rcl
pop
lahf
dec
imul
and
clc
enter
fidivrs
lcall
clc
std
mov
sti
push
mov
mov
sbb
or
jns
stos
leave
mov
loope
pop
pop
cmp
pop
add
jo
push
mov
or
cmp
adc
and
leave
mov
mov
je
sbb
in
fwait
das
lret
inc
push
das
rol
mov
jns
int
xchg
add
repnz
insl
mov
ror
lret
xor
fs
add
imul
es
sub
dec
or
in
in
les
scas
iret
pop
cmp
out
pop
jno,pn
lea
in
push
or
mov
out
or
bnd
rcrb
add
bound
and
xchg
mov
lds
dec
enter
rcl
je
mov
divb
daa
cmc
mov
mov
push
mov
enter
fmul
arpl
mov
adc
add
push
sub
out
out
pusha
dec
js
adc
or
adc
movsb
mov
jmp
mov
lock
loopne
mov
and
xor
push
sti
xchg
shrl
into
lods
in
push
push
cs
ret
loop
pop
inc
dec
and
cmp
mov
shll
or
dec
rclb
pop
addr16
xor
jg
lds
pop
stos
adc
and
fisttpll
mov
lahf
js
push
pop
call
and
adc
and
push
data16
adc
outsb
lret
dec
hlt
sub
stos
cmc
add
xchg
or
sbb
nop
aam
mov
pop
xor
pop
jge
push
push
data16
out
out
sbb
push
sub
shrl
mov
stos
sbb
testb
mov
inc
sub
sub
or
dec
movsl
and
lods
rol
jae
xor
decl
or
push
mov
test
push
stos
icebp
test
fistps
jge
sub
mull
mov
adc
pop
daa
dec
xchg
insb
cmpsl
jo
fmull
push
int
cs
sarb
stc
outsb
cmp
mov
push
push
in
mov
fnstenv
int
repz
rcl
or
fldt
je
mov
sbb
sub
jg
es
movsl
gs
inc
jle
lds
lods
in
iret
test
dec
cltd
in
adc
ds
mov
mov
hlt
sbb
inc
jno
and
lods
add
repz
mov
jmp
lcall
mov
or
enter
xchg
incb
push
cmp
or
in
push
loopne
subl
mov
mov
adc
push
shlb
iret
mov
mov
or
cld
sub
sbb
fadds
mov
lret
and
push
and
pop
or
push
es
push
in
pop
aaa
inc
lds
sub
xor
fiadds
inc
mov
lret
insl
rclb
out
fldl2t
adc
arpl
in
sub
push
jo
xchg
jle
jo
aas
aad
add
stos
scas
mov
and
dec
sub
arpl
movsl
repnz
pop
add
mov
push
fistps
mov
push
aas
pop
inc
insb
adc
addr16
push
sub
jg
leave
es
adc
pop
sbb
sbb
fcomi
das
mov
out
sbb
dec
outsl
in
mov
pop
movsb
jne
jae
aam
mov
cmp
loop
push
push
sbbl
in
ret
addr16
insl
jecxz
fs
xor
mov
mov
outsl
movsb
mov
jne
int
cmp
dec
cmpsb
jbe
sbb
push
or
mov
sarl
fbstp
mov
stc
mov
nop
negb
imul
cmc
ss
mov
addr16
loope
sub
mov
nopl
jno
sti
mov
cmpsb
jmp
inc
mov
aam
dec
outsb
jae
pop
jne
imul
in
in
aaa
andps
push
lret
adc
jo
movsb
push
add
cs
mov
pop
mov
inc
xchg
cmp
dec
fstl
mov
xor
xlat
push
xchg
pop
add
cmpsl
xchg
fists
inc
int
mov
out
cmp
inc
mov
sub
ficoms
leave
mov
jno
decb
bound
xchg
add
mov
xchg
inc
loop
arpl
mov
adc
inc
jns
mov
add
push
mov
sbb
and
mov
popa
adc
or
mov
loop
insb
ljmp
popl
lods
bound
outsb
jle
mov
ss
int
adc
rol
scas
jnp
cmp
stos
xchg
jne
mov
dec
shl
sbb
or
jnp
jmp
push
jnp
insb
pushf
push
arpl
or
pop
dec
into
loope
add
dec
inc
add
pop
imul
rcrb
mov
inc
sub
sahf
push
xchg
addr16
jp
out
push
hlt
xor
and
add
neg
outsl
mov
mov
dec
ror
xchg
cmp
mov
lds
mov
sti
cmp
scas
or
mull
adc
ret
xchg
ljmp
cs
test
or
push
cli
cmp
pop
mov
cwtl
movsb
movsb
push
xor
xlat
dec
push
or
xchg
jge
repz
ljmp
imull
pop
add
pop
leave
leave
jo
pop
cmpsb
rolb
mov
mov
aaa
cmpsb
dec
stc
loop
imul
mov
xchg
call
fidivl
xor
adc
push
fwait
ja
scas
push
arpl
arpl
push
lret
std
out
movsb
sub
sbb
xchg
cmp
sahf
adc
cmpl
inc
xchg
test
inc
test
xchg
mov
inc
sub
sbb
cmc
sahf
je
sub
jle
push
cmp
loopne
arpl
jbe
fwait
add
jecxz
mov
and
sbb
hlt
decb
pusha
ss
xor
lods
cmp
int3
fcmovne
mov
mov
rcrl
loop
and
push
pop
aaa
jb
pop
and
mov
mov
ja
inc
rcrb
dec
ror
ffree
div
and
in
mov
je
push
repnz
aad
imul
loop
popa
jg
jg
std
and
sub
cmpsb
or
scas
adc
loope
sub
sti
fistpl
nop
xchg
push
or
cld
mov
or
insl
xor
stos
push
push
ret
outsb
jne
inc
xchg
xchg
in
cld
jle
mov
jg
test
jns
cld
lahf
mov
fwait
sub
dec
push
cs
dec
cmp
movsb
jle
add
test
cltd
test
out
out
push
add
pop
mov
cs
dec
daa
mov
mov
pop
inc
repz
inc
xorb
pop
xchg
test
push
movsl
ss
xor
cmp
ret
ret
cmpsl
sub
mov
xchg
lret
jne
adc
add
outsb
inc
pop
xor
out
mov
ljmp
lds
jmp
leave
stos
jg
xor
test
jl
mov
repnz
sarb
jmp
mov
scas
xchg
iret
repz
mov
icebp
bswap
adc
cmc
mov
out
mov
xor
stos
jae
testl
jns
mov
jle
mov
or
lahf
add
push
xchg
shll
mov
inc
xchg
inc
cld
icebp
mov
pop
gs
out
push
mov
imul
xlat
and
cmpsb
xor
pop
in
xor
sub
dec
pop
jle
nop
lret
inc
lds
sbb
mov
cmp
cli
mov
gs
movhps
rcrl
pop
mov
repz
sbb
das
inc
xchg
jno
adc
add
mov
and
dec
push
sub
pop
stos
jmp
mov
push
test
dec
divb
add
push
dec
add
sbb
cmp
sub
mov
mov
cmp
jg
dec
pop
sbbl
filds
mov
adc
mov
push
jae
mov
mov
sub
pop
cwtl
lods
ficoml
sub
movsb
mov
mov
sub
mov
hlt
clc
and
adc
push
cmc
jno
and
filds
or
mov
ret
mov
nop
add
and
inc
ss
and
insl
fisttpl
xchg
pop
jmp
data16
stos
xor
ret
mov
cmp
into
adc
lods
mov
fcompl
stos
mov
inc
ret
xor
pop
pusha
mov
cmp
adc
arpl
xor
movsb
fcomi
pusha
push
cwtl
mov
cmc
jb
popf
lds
push
and
jge
sbb
lahf
cmp
and
and
sbb
xlat
gs
movsb
inc
xchg
in
std
adc
xchg
stos
dec
cmp
pusha
and
lods
and
bswap
test
and
loopne
cmpsl
bound
mov
out
incb
leave
movsl
mov
int3
mov
popa
negb
or
sti
dec
cmp
mov
in
push
jne
cs
out
fs
aas
lcall
xor
clc
jno
mov
cmp
xchg
aaa
clc
jmp
pop
mov
shrl
outsl
insl
cmpl
popf
push
jno
sub
ljmp
sub
xorb
and
aad
cmc
addr16
ljmp
cld
repnz
jne
fnstsw
add
pop
aam
mov
mov
add
ja
js
lcall
js
add
fcmovb
out
xchg
movsl
cmpsl
and
inc
bound
in
dec
mov
cltd
xchg
fimull
add
dec
mov
pop
cmc
xlat
or
addr16
test
jl
fimuls
push
imul
cmp
sti
push
cmpsl
pop
xchg
lcall
stos
sbb
sti
dec
pop
ret
rcrl
mov
mov
xorl
push
out
pusha
mov
dec
xlat
ficoms
stc
pop
mov
int
movsb
in
inc
inc
mov
pop
xor
push
pop
sbb
imul
daa
faddl
or
idivb
or
mov
das
outsl
lret
mov
ret
push
jbe
inc
mov
xor
dec
clc
inc
pop
jno
sbb
mov
scas
adc
ljmp
inc
lcall
data16
fsubs
fadd
adc
dec
mov
leave
sarl
repnz
lods
jmp
sti
mov
sbb
xor
js
push
fdivp
sub
loopne
ss
mov
xor
xor
add
inc
rcrb
out
iret
mov
stc
jnp
mov
xchg
push
pop
push
je
or
outsl
bound
je
xchg
pop
and
gs
mov
stc
cwtl
repz
mov
mov
jne
dec
bound
sub
jmp
xchg
mov
add
adc
dec
shlb
ds
ds
sbb
mov
stc
push
pop
and
mov
icebp
or
rcrb
xchg
and
pop
jge
jne
dec
div
jle
xchg
int
enter
adc
sub
je
xor
std
mov
dec
inc
xchg
pusha
xor
out
pop
stc
xchg
js
mov
adc
int
stos
fdivrl
pusha
xchg
mov
xlat
cltd
aas
sub
mov
jnp
lret
nop
dec
call
jns
repnz
dec
cwtl
push
and
mov
nop
imul
rorb
inc
sbb
out
lods
ss
cmp
sbb
mov
mov
mov
pop
call
cli
xchg
stos
xlat
dec
sbb
adc
mov
adcb
dec
xor
sub
jne
adc
dec
sahf
mov
xor
lock
stos
inc
pop
lods
test
jge
cmp
and
pop
scas
mov
jl
lret
mov
movsl
sbb
jno
xchg
and
std
dec
jns
popa
mov
pushf
shll
xchg
ds
in
iret
lods
push
cmc
mov
mov
ret
pushl
mov
mov
mov
adc
daa
lea
inc
xchg
insb
mov
pop
sbb
ljmp
mov
jb
dec
mov
push
imul
jbe
fdivl
and
mov
adcl
sbb
dec
jb
xchg
and
adc
aaa
xor
jbe
pop
andl
fcmovnbe
jno
mov
cli
idivl
inc
push
pop
sbb
pop
test
jbe
xchg
sbb
stc
outsl
pusha
mov
mov
xor
xchg
das
sub
shlb
out
pop
jmp
add
call
inc
and
push
pop
sbbb
pop
rorl
cmp
std
dec
arpl
lds
out
ss
jmp
jno
ret
fbld
jae
push
push
iret
and
jmp
inc
pop
pop
popf
rcrb
adc
pop
push
cmc
outsl
sub
cwtl
enter
inc
sbb
pop
scas
das
pop
jp
repz
leave
pop
orl
mov
xchg
out
stos
daa
cmp
jnp
arpl
rorl
mov
mov
arpl
icebp
decb
inc
xlat
sub
daa
loopne
jp
clc
imul
xor
mov
mov
add
fcmove
mov
cmpsl
aas
sub
xor
jecxz
xor
adc
popa
in
push
sbb
inc
fbld
gs
arpl
inc
mov
int
push
stc
shll
jno
and
aaa
test
or
nop
fimull
mov
fs
int
dec
sub
sub
or
push
andl
and
dec
divl
xchg
nop
sub
xor
jno
enter
pusha
mov
cmc
movsb
sbb
mov
push
ret
adc
push
in
leave
mov
pop
hlt
cmp
jae
push
outsb
loope
test
and
pusha
cli
je
push
fwait
popf
cmp
addl
push
inc
daa
aad
push
lea
cmp
cmp
bound
add
daa
dec
mov
rolb
mov
sbb
pusha
pop
notl
xchg
lahf
add
scas
add
bound
push
fs
push
fildl
std
loop
xor
sub
imul
inc
subl
xchg
or
inc
stos
loop
push
inc
sub
jae
cwtl
iret
repnz
push
les
add
adc
xlat
xchg
fidivrs
mov
lock
bnd
int3
xchg
fwait
ds
mov
int
fdivrl
scas
sahf
dec
jg
cmp
xchg
imul
rcr
aaa
cltd
or
pop
pop
or
jne
jmp
pop
imul
sub
mov
js
iret
sub
in
pop
adc
data16
adc
test
popf
sbb
and
loope
mov
sahf
test
dec
dec
scas
jle
jbe
dec
test
lds
ret
loopne
adc
xchg
ret
rorl
or
gs
test
rorb
xchg
repnz
in
cmc
mov
in
pop
pop
adc
sahf
cmp
sub
fs
adcl
mov
loop
xchg
sahf
jg
stc
xor
test
lds
mov
stos
pop
pop
in
or
lea
mov
cmp
lret
jo
in
mov
mov
add
iret
rcrb
mov
movsb
rolb
mov
pop
outsb
sbb
and
fwait
imul
cmpsb
push
sub
clc
ret
fidivrs
inc
mov
fiaddl
push
loope
sbb
rolb
test
mov
ss
enter
cmp
push
push
inc
xchg
or
popf
mov
adc
mov
mov
out
cwtl
ret
jno
lods
add
mov
loope
movsl
ss
stc
fldt
cs
outsl
jecxz
dec
jg
pusha
mov
orl
shl
jmp
ficoms
into
xchg
mov
fwait
push
sub
push
pop
cmpsb
inc
mov
xchg
test
test
mov
int
dec
sub
insl
sarb
in
xor
xchg
mov
movsb
xchg
out
lret
out
pop
xchg
mov
fisubl
sbb
xlat
dec
das
rcll
mov
out
dec
dec
jnp
sub
or
lret
adc
ljmp
add
lea
jmp
pop
outsb
xchg
outsl
mov
stos
jbe
insl
cmp
or
xchg
popf
pop
add
jmp
mov
mov
loope
mov
xor
lds
imul
cmp
cmp
jo
repnz
push
jle
mov
mov
mov
inc
pushf
inc
lods
and
pop
fs
pop
push
rorl
sub
lret
and
dec
mov
mov
push
pop
ss
adc
dec
and
loop
push
jle
xchg
repnz
mov
mov
jno
test
push
add
dec
sbb
in
add
rcll
scas
adc
data16
fbstp
dec
ficompl
lock
mov
inc
mov
adc
divl
data16
insb
add
int3
out
sarl
dec
adc
mov
repnz
and
aas
pop
xchg
cmp
sbb
add
jl
idivb
mov
and
insb
test
and
lea
sub
add
lock
jne
mov
xor
dec
cltd
out
push
jno
jle
push
push
or
cmp
js
repnz
xchg
dec
imul
jb
push
pop
mov
mov
push
fmul
jge
sub
mov
inc
cmp
or
das
pop
mov
test
add
orb
into
das
fwait
pop
xor
ja
aas
imul
lret
adc
shll
xchg
cmp
mov
inc
push
and
ds
mov
outsb
push
iret
inc
cmp
call
jo
and
mov
or
fists
roll
btcl
pop
inc
mov
imul
dec
fs
loope
loop
add
lea
es
mov
xor
je
add
xor
das
jne
and
mov
cltd
push
sub
rcl
call
jbe
mov
xor
cmp
sarb
xchg
adc
and
into
movsl
or
aam
pushl
mov
daa
std
mov
out
jnp
mov
movsl
loope
cmpsl
in
xorl
xlat
cmpsb
gs
sub
sbb
popa
es
cmp
jmp
lret
aam
push
inc
and
in
xchg
cwtl
mov
mov
and
std
lret
cmpsb
mov
lods
mov
loopne
mov
test
mov
cmc
outsl
jb
xchg
subb
and
add
in
out
rolb
scas
out
dec
call
jo
bound
cmp
pop
add
xor
cmpsb
add
cmpsl
aaa
cmpsl
adc
jl
jl
iret
test
jb
dec
adc
outsb
pop
rolb
inc
lea
jbe
imul
outsl
pop
sub
das
dec
rorl
sbbl
neg
push
hlt
subl
ret
lret
int
adc
outsb
sub
fadd
scas
adc
cmp
icebp
inc
pop
cltd
xchg
clc
cmp
pop
dec
and
push
push
out
mov
leave
dec
xchg
cwtl
fisttps
ljmp
or
push
sub
push
iret
stc
mov
arpl
cmp
push
mov
sarb
push
sbb
jg
fisubs
add
mov
jnp
jne
shr
lcall
addl
and
mov
inc
test
pop
push
out
cmc
mov
xchg
push
sbb
lods
movsb
push
ss
push
lret
inc
insb
pushf
dec
outsb
dec
imul
xchg
incb
mov
mov
mov
popa
jmp
ds
xor
push
dec
shr
jnp
inc
jb
inc
das
push
bound
outsl
mov
call
sar
enter
loopne
out
gs
sbb
mov
push
aam
push
jl
popa
fwait
repz
push
ja
adc
pop
inc
popf
or
jb
arpl
or
sbb
push
stos
incl
push
add
sbb
push
xchg
xchg
jns
mov
inc
mov
sub
int
xchg
dec
jle
jno
cmp
inc
mov
push
andl
popf
mov
mov
push
mov
mov
push
popa
mov
push
cmp
xchg
add
sbb
add
mov
dec
mov
push
fnstenv
fdiv
fwait
inc
fldl
imul
idivl
cwtl
stc
repz
mov
jl
or
pop
shl
push
sub
push
les
shll
int
andl
inc
jno
xchg
or
push
rolb
pop
aam
pop
sub
cmp
leave
xlat
push
ss
sbb
roll
loope,pt
mov
xor
es
pop
jb
or
xchg
push
nop
jmp
lret
lock
sti
notb
jmp
nop
sub
repnz
packssdw
lret
xchg
dec
pop
cmc
mov
sub
test
les
mov
jle
push
fwait
sti
jmp
std
and
push
out
arpl
in
pop
jb
enter
push
mov
jg
or
or
mov
fistps
jno
idiv
pop
push
ss
aaa
sub
fbld
cmpsl
adc
mov
xchg
cmp
mov
lock
imul
inc
mov
pop
mov
cld
aam
insl
pushf
push
pop
jo
out
loopne
mov
fiadds
insb
pop
lahf
mov
leave
test
addr16
hlt
lcall
out
fdivs
sbb
cld
adc
pop
xchg
pushaw
fisubrl
leave
repz
fcomi
scas
out
inc
ds
aad
add
mov
add
xchg
cltd
xchg
gs
pop
lret
ficoms
ffree
mov
js
es
add
sahf
dec
and
sahf
xor
iret
sbb
mov
hlt
xlat
cmp
cmpb
jns
adc
mov
push
cmp
mov
lret
outsl
xor
lds
lahf
sbb
test
jecxz
mov
ds
ljmp
and
aad
inc
data16
mov
aas
and
lods
cmp
loop
cmpsb
inc
jo
lahf
fmuls
ds
test
inc
enter
xor
mov
ja
je
and
std
jle
sti
jecxz
and
push
imulb
adc
enter
aaa
or
das
dec
jbe
pop
shrl
popf
data16
scas
adc
pop
imull
dec
sbb
lahf
or
std
cld
push
mov
mov
jmp
mov
popa
sub
xor
pop
rorl
mov
push
pop
pusha
mov
pop
xchg
fs
mov
clc
jnp
mov
ljmp
popf
jge
mov
mov
and
in
out
sti
fsubl
dec
out
je
sbb
int
mov
xchg
loop
mov
in
mov
xor
push
int
lods
dec
jmp
push
outsb
test
test
push
mov
jl
les
lock
mov
adc
xor
mov
addr16
mov
pop
add
mov
call
lret
fcom
dec
sub
pop
fistpll
jle
jne
add
xor
add
mov
or
repz
mov
in
addr16
lods
flds
xor
ljmp
xor
stos
es
jl
addr16
cmc
mov
int3
mov
sbb
push
imul
push
pushf
xor
int3
jae
pop
jne
lods
sbb
mov
ss
mov
cltd
pushf
lcall
mov
mov
adc
cli
gs
hlt
cmp
lcall
dec
gs
aas
adc
iret
jmp
jns
add
mov
aam
scas
popa
std
jmp
cwtl
insb
inc
movsb
ret
das
add
jg
ljmp
cmc
jno
ds
jecxz
leave
stc
pop
mov
jno
add
lock
stc
jo
or
adc
mov
pop
dec
jmp
loopne
call
imul
push
jne
xchg
push
stos
das
call
imul
nop
cmp
push
negb
test
shlb
in
sbb
in
pop
mov
ret
dec
sub
cmp
mov
shl
cmp
cmp
pop
inc
adc
inc
ljmp
gs
xchg
rcrb
jbe
lcall
jp
push
loopne
mov
sub
aam
ljmp
inc
xor
mov
cmp
out
repnz
and
lods
sbb
xchg
mov
push
hlt
shlb
jle
dec
std
popa
mov
mov
scas
inc
scas
push
movsl
shll
sub
sub
lret
repz
test
sub
mov
xor
jle
faddl
test
subl
repnz
gs
sbb
mov
cmp
jle
pop
jmp
add
lret
cmp
cmp
cmpl
sahf
mov
bound
notl
outsl
push
pop
shlb
pop
scas
xchg
mov
mov
xor
mov
lods
jae
pop
and
jbe
add
sbb
nop
add
push
pop
dec
std
in
mov
and
lds
dec
aad
lods
adc
les
xlat
bnd
mov
iret
leave
stos
jb
lods
xor
cmpsl
cli
dec
push
xchg
stc
sarb
imul
and
outsb
jmp
nop
add
fs
fcomi
xchg
stos
movb
xor
jo
hlt
stos
aaa
jnp
sbb
insb
pop
add
lock
jbe
addb
push
stos
rsqrtps
or
out
loope
mov
incl
mov
test
int
pushl
cmp
lds
ljmp
push
ja
push
ja
scas
fwait
mov
mov
lock
cmpsb
push
mov
bound
cmp
mov
mov
jb
mov
lret
adc
cltd
adc
jecxz
xchg
sbb
lea
cmp
mov
sub
inc
jne
out
cs
xchg
dec
enter
outsl
xchg
cs
jo
outsl
pop
jne
test
xor
orb
in
sar
push
push
inc
adc
push
ficoml
lea
fdivrl
sbb
loop
or
sbb
push
testl
cmp
or
sub
in
xchg
loop
fcoms
jecxz
repz
push
add
jnp
xchg
mov
adc
mov
lock
mov
jnp
dec
cwtl
sub
dec
pop
dec
xchg
mov
dec
out
mov
mov
xchg
inc
mov
sahf
add
and
xlat
cld
mov
sbb
int3
fcoms
cmp
out
add
lcall
mov
lods
roll
mov
dec
jb
pusha
aaa
sub
imul
add
lock
mov
test
gs
pop
mov
fdivrl
out
popa
xor
sbb
lods
sbb
aaa
jo
sti
jno
movsb
pop
jmp
cli
push
addr16
sti
fwait
aas
test
inc
xchg
xchg
jl
cwtl
int
push
dec
popa
xchg
fcmovu
xor
scas
sub
dec
movsb
jmp
jmp
int3
iret
inc
pushf
dec
pop
mov
inc
fimull
xor
xchg
outsl
jno
inc
sub
sahf
xchg
pop
outsl
sub
test
or
movsl
pop
pop
sub
icebp
push
nop
inc
jns
push
xchg
jl
xchg
mov
cmpsb
ljmp
mov
and
insb
add
mov
mov
lret
jge
jecxz,pn
jmp
push
les
aas
mov
and
add
jno
pop
adc
add
add
sub
mov
xor
and
pop
pushf
int
icebp
cmovno
pop
mov
pop
and
sub
dec
rorl
shlb
jno
aaa
pusha
lahf
dec
hlt
and
sub
mov
adc
je
test
imul
sbb
dec
popa
push
push
push
add
int
pop
clc
pop
push
test
mov
loopne
xchg
sbb
mov
push
sub
xor
inc
add
add
and
pop
xchg
pop
sbb
dec
cwtl
jbe
xchg
ja
outsl
fisttpll
xchg
or
sub
cwtl
xchg
fcoms
dec
pop
dec
popa
xchg
xchg
dec
fimuls
xchg
adc
stos
fsub
icebp
repz
lock
pop
jl
daa
xor
rcll
xor
pop
shlb
outsb
outsb
push
aad
jge
xor
push
pushf
jbe
ss
insb
push
mov
js
lods
cmp
fdivrl
shll
lods
cwtl
mov
pop
xor
xchg
int
mov
cmpsl
push
mov
inc
jl
mov
add
int3
movsl
inc
and
pop
ljmp
xchg
inc
popf
mov
pop
mov
js
mov
push
mov
std
push
pop
inc
and
insl
in
dec
and
cmp
fimuls
xchg
sti
dec
sbb
mov
and
jl,pn
dec
sbb
dec
js
aad
xor
movsb
cld
push
insl
out
insl
andb
sti
dec
mov
add
and
shl
or
ja
in
mov
fs
divl
push
test
jp
je
sti
xchg
out
cmp
es
leave
sub
hlt
iret
sbb
divl
clc
mov
ret
in
clc
mov
xchg
pop
push
xchg
push
xchg
divl
mov
mov
mov
cmp
inc
ljmp
lea
jg
iret
pop
dec
nop
adc
or
sbb
pop
or
out
fwait
outsl
test
push
jle
loope
pop
mov
cmpsb
xor
mov
xchg
mov
inc
inc
cmpb
xchg
xor
mov
out
or
xchg
mov
sbb
adc
aas
ret
push
xchg
dec
fdivrl
stos
xor
sub
fcmovnbe
xchg
jp
xchg
adc
and
js
aam
movsb
in
cltd
jne
jns
cs
dec
ss
into
dec
mov
or
lods
push
xor
leave
clc
mov
ljmp
mov
mov
out
jnp
pop
lods
shl
mov
shrb
xor
adc
mov
and
mov
out
scas
xorl
jmp
adc
negl
push
push
rorb
or
fiaddl
cmp
mov
aam
cmp
rcl
mov
aad
test
mov
xchg
dec
cmpsl
dec
pop
cld
rorl
push
mov
mov
mov
xor
scas
mov
cs
into
push
lea
inc
mov
xor
adc
insb
mov
fsub
jp
hlt
mov
addr16
push
mov
in
xlat
adc
cmp
aas
jmp
jmp
fmuls
sub
rclb
push
jge
icebp
fcoms
and
mov
mov
mov
gs
scas
or
outsb
cmpl
mov
add
adc
mov
es
inc
sahf
in
push
addl
pop
sbb
mov
insl
stc
aam
inc
inc
pushf
fsubrl
pusha
test
imul
dec
or
repz
int3
repz
cmpsl
cmp
sub
out
int
fwait
mov
and
nop
mov
je
out
enter
jns
cmpsb
lahf
cmp
es
jae
fsubl
sarb
inc
and
pusha
leave
push
mov
mov
inc
vpaddsb
imul
jg
push
in
dec
fcoms
out
pushl
hlt
mov
push
ret
cmp
js
add
and
mov
lcall
push
out
inc
dec
and
sbb
mov
mov
add
cld
andl
jmp
inc
jo
or
outsl
add
pop
loopne
lea
sub
int
xchg
add
divl
loop
xchg
cmp
and
in
loop
out
add
out
mov
test
or
ret
inc
push
les
xor
popf
gs
sbb
jp
pop
sub
in
adc
bound
scas
sub
sub
fldenv
movsl
cmp
xchg
add
dec
mov
es
int3
stc
xchg
mov
out
in
int
cld
cmc
fcmovu
aad
test
arpl
cmp
call
paddq
cs
fsub
adc
push
add
adc
or
fnsave
or
lcall
xor
ret
lahf
mov
sub
pop
adc
rcr
mov
fdivrl
xor
xor
or
and
push
mov
enter
adc
je
sbb
pusha
mov
andl
push
lcall
ret
std
push
xor
das
enter
pop
adc
lods
inc
jno
ljmp
jg
xor
push
addb
adc
dec
pusha
and
xor
xchg
mov
mov
test
push
in
lock
loop
imul
lods
jg
sub
push
cli
and
fidivs
cmp
jo
outsl
mov
add
mov
adc
xchg
cld
jne
mov
jl
and
scas
sub
dec
sbb
inc
mov
fs
out
mov
pop
xorl
aas
mov
lahf
ljmp
sarb
das
fmulp
push
pushf
popf
xchg
ss
scas
add
pusha
movsb
sbb
xor
adc
fcompl
mov
out
flds
xchg
cmp
inc
xor
and
call
jno
insb
int3
push
lock
jle
stos
mov
clc
aam
push
frstor
mov
push
popa
pop
xor
pop
mov
xor
push
repz
into
fs
jns
mov
imul
icebp
pop
in
and
aad
outsb
push
sbb
add
or
cmp
leave
add
cmp
jnp
lcall
inc
or
jb
ljmp
mov
loope
jl
mov
sbb
and
xor
rol
add
cmp
popf
and
adc
call
js
call
inc
push
inc
add
fwait
outsl
sub
mov
mov
pop
outsl
mov
pop
and
ss
sbb
and
pushl
mov
pushf
or
xchg
test
dec
jns
pop
shlb
cs
pop
rcrl
enter
jge
and
push
mov
adc
out
popf
dec
mov
lret
ret
or
repz
xchg
dec
add
imul
and
adc
xlat
sub
push
push
mov
aad
cmp
mov
fwait
pop
cltd
loop
or
sub
movsl
outsl
mov
in
js
in
sub
push
lea
lahf
pop
jo
inc
push
std
jmp
mov
pushf
punpckhbw
ss
adc
frndint
or
cwtl
mov
int
adc
push
push
out
or
inc
cli
fsubrl
enter
dec
sahf
call
pop
push
fnstsw
lock
mov
sub
shlb
push
push
cmp
push
jne
or
cmpsl
roll
lods
cmp
fcomps
mov
mov
jg
mov
aam
or
hlt
sbb
stc
out
bound
and
jp
rcrl
jle
das
xchg
mov
add
push
cmp
mul
push
rcr
into
loopne
cmp
mov
lahf
inc
xor
jl
mov
inc
pop
pop
pusha
faddp
cmp
orb
sahf
push
xchg
outsb
test
pop
pop
mov
jmp
test
mov
fidivl
adc
into
add
movsl
cmovs
aam
push
jae
adc
xor
dec
insl
mov
sbb
mov
insb
mov
lock
xchg
pop
xchg
ficomps
jne
fs
sub
or
in
lret
mov
jo
xlat
mov
sub
or
cltd
add
ficomps
mov
cmpsb
call
out
mov
push
inc
dec
ja
lea
sarl
lahf
inc
stos
stos
mov
mov
xor
aaa
mov
or
sub
dec
call
stc
aaa
aaa
and
pop
mov
fs
add
sbb
dec
cli
call
add
sbb
adc
xchg
fcoms
mov
inc
adc
push
xor
test
icebp
pop
mov
aas
push
sahf
es
mov
int
outsl
xchg
mov
xchg
mulb
loope,pt
test
or
cmp
clc
mov
arpl
xchg
cmpsl
inc
jne
push
dec
cs
shrb
sub
mov
cwtl
scas
stos
adc
cli
xor
in
mov
testb
sbb
pop
push
scas
inc
jle
mov
lret
pushf
mov
inc
add
or
push
test
pop
nop
jne
hlt
push
movsb
out
push
mov
xor
xor
cld
je
ljmp
cli
cmp
adc
mov
xchg
test
movsl
fldz
inc
jae
pop
fs
inc
xchg
sub
jl
arpl
std
xchg
push
leave
test
add
testb
sub
gs
push
pushf
mov
dec
pop
jp
sbb
mov
aas
inc
aas
xorl
fbstp
mov
push
int
and
orl
dec
add
scas
and
pushf
add
out
int3
mov
mov
vpsraw
loop
cmp
cltd
cmpsb
or
xchg
add
push
pop
mov
push
dec
mov
in
addl
out
mov
or
int3
das
int
out
imul
cli
adc
pop
push
pusha
push
popa
and
sub
mov
test
and
push
or
and
inc
add
mov
cmp
mov
pushw
lret
rorl
add
xchg
or
mov
es
ja
lods
fsubrl
cmpl
test
push
mov
or
inc
jb
cmp
add
push
and
imul
add
movsb
gs
and
cli
push
mov
lcall
sub
push
test
or
hlt
imul
inc
cmp
jne
std
cmp
scas
cwtl
sub
dec
pusha
test
push
sbb
jge
ja
cli
push
clc
lds
inc
pop
mov
jae
ss
test
adc
adc
mov
in
imul
sbb
cmp
adcl
ss
ss
pop
push
dec
icebp
dec
cs
pop
cmpsl
imul
aam
xchg
xor
mov
test
hlt
out
cs
jp
test
imul
jno
xchg
cmpsb
sub
mov
xorl
mov
inc
into
les
jns
cmp
imul
dec
cwtl
push
xchg
jecxz
sub
or
mov
or
jb
outsl
fnstsw
fnstenv
xor
inc
ss
xchg
xchg
inc
add
pop
sbb
add
cmpsb
and
fiaddl
add
imul
ja
std
adc
in
inc
popf
ret
pop
lret
pop
sti
adc
in
lock
out
js
fwait
and
pop
xor
cmpsb
ficoms
out
add
arpl
sbb
dec
cmp
jns
dec
rol
push
mov
sub
in
mov
cwtl
fcomp
xchg
add
lds
mov
xlat
xchg
xchg
stos
jecxz
icebp
cld
mov
daa
pop
iret
sub
int3
mov
xchg
sub
adc
out
insl
repnz
pop
xor
mov
stos
popf
enter
sub
movsb
aam
jmp
xor
sbb
stos
push
leave
movsl
imul
shrb
and
jp
pop
inc
das
push
adcl
sub
addl
sub
mov
sbb
loopne
in
shl
xchg
fwait
nop
jmp
aam
fs
jle
sub
fsubs
outsl
dec
std
sub
and
gs
sub
xchg
pop
rcrb
subl
das
jo
mov
cmpb
and
xchg
jbe
js
push
jb
dec
push
outsb
and
sub
scas
bound
repnz
push
jbe
sbb
or
mov
aad
xchg
test
ds
add
xor
add
sbb
pusha
out
cwtl
cmp
pop
or
jb
cmc
rcr
xor
inc
mov
and
mov
insb
and
adc
cld
cmpsl
push
fnstsw
mov
dec
sahf
xchg
std
jecxz
push
push
push
out
or
jecxz
inc
aaa
repnz
xor
shll
push
sbb
repnz
sti
stc
lea
pop
inc
in
and
pop
lcall
fbld
pop
mov
jp
repnz
js
out
cmp
aam
pop
das
sbb
mov
subb
xchg
jae
cmp
and
inc
sti
pop
cltd
or
inc
mov
mov
or
imulb
lret
ja
dec
add
movsl
mov
fmull
std
xchg
popf
loope
inc
hlt
ds
xchg
adc
ret
fidivs
popf
cmp
mov
call
add
pop
dec
inc
xchg
repz
mov
dec
and
inc
cltd
movsb
repz
ret
in
sub
idivl
or
ret
jnp
aas
incl
lods
add
inc
jmp
jnp
jecxz
jl
lret
mov
pop
add
jb
dec
arpl
pop
and
dec
ja
pop
pop
fucomi
lods
push
sub
int3
inc
dec
inc
adc
add
stos
jns
or
lret
cltd
outsb
lock
ret
imul
shr
arpl
in
lock
add
sti
out
fwait
insb
cld
in
daa
jge
jge
mov
bound
fucomip
mov
out
arpl
lcall
xlat
inc
add
xor
cs
ja
test
xor
push
mov
lock
das
flds
cltd
xlat
add
popf
mov
ret
dec
in
out
movsl
xchg
je
mov
pushf
mov
roll
aam
jbe
movsb
lret
cmpsl
and
clc
aam
jl
out
cmpsl
pusha
bound
sub
mov
dec
out
mov
add
inc
mov
js
push
hlt
aad
and
sub
sbb
mov
dec
xchg
call
clc
orb
jb
outsb
add
fbstp
jae
into
mov
add
rclb
jecxz
andl
adc
push
leave
sbb
add
pop
mov
dec
insl
mov
aam
push
sub
mov
or
test
mov
fistpll
jle
pop
xchg
xchg
stos
ret
jne
lret
imul
popa
add
imulb
mov
add
and
jbe
dec
mov
lods
in
push
xor
jno
repnz
shll
icebp
lds
xchg
fwait
add
mov
aas
jecxz
iret
push
outsl
sub
movb
call
mov
mov
xchg
arpl
nop
cmp
sbb
aam
lods
push
add
or
jns
hlt
out
pop
scas
fimuls
xor
pop
and
mov
and
xor
cld
lahf
gs
std
adc
inc
xor
daa
test
pop
xlat
imul
mov
orb
add
cmpsb
mov
and
jmp
fidivl
mov
mov
bound
dec
nop
in
inc
gs
fistpll
sbb
lods
sarb
fisttpl
ret
jp
push
dec
add
sar
lret
rolb
cmpsb
xor
stc
and
adc
push
mov
cltd
int3
ret
por
sti
jno
pop
mov
shlb
and
and
adc
lods
scas
mov
sbb
dec
cld
jb
hlt
pushl
int3
leave
xchg
ffreep
inc
popf
lahf
sbbb
mov
scas
push
aad
mov
and
mov
clc
mov
inc
and
fs
mov
fimull
repnz
pop
cmp
adc
sbb
push
dec
aam
bound
dec
fstps
ljmp
dec
xor
rcrb
pop
xchg
xor
outsl
add
icebp
mov
mov
and
lods
mov
add
mov
xor
add
push
int3
sbb
nop
push
std
mov
sahf
mov
sbb
jno
clc
mov
xchg
daa
xchg
mov
shlb
and
mov
sub
push
add
es
push
imul
mov
enter
jmp
mov
aas
fwait
out
icebp
imul
push
add
jg
xor
popa
inc
int3
mov
jae
es
ret
cmp
fimuls
std
xchg
and
data16
movsl
subl
jae
add
mov
nop
dec
jmp
cld
adc
push
xlat
push
fbstp
sub
mov
push
or
cmc
and
cli
jmp
loop
pop
adc
mov
add
add
fstpt
and
xor
out
push
inc
int3
push
mov
loop
fwait
xor
lds
adc
into
jo
adc
cmp
out
cli
or
xor
xor
push
cltd
mov
mov
mov
in
enter
push
push
pop
mov
in
into
push
data16
cmp
cs
lcall
daa
int3
mov
add
adcb
outsb
cs
mov
and
xor
das
icebp
adc
popa
jge
mov
jae
sahf
lock
ret
jno
ret
push
je
mov
pop
sub
rorb
push
or
rcl
jo
mov
hlt
mov
ja
imul
push
push
repz
fisubl
movsl
dec
add
fisubrs
fisubs
cmp
jp
mov
fidivs
int3
fwait
cmp
out
popa
pop
jne
out
xchg
sbb
mov
sbb
mov
pushf
push
inc
and
pushf
addl
adc
and
in
popf
negl
ljmp
and
in
test
inc
cmp
inc
add
repnz
pop
pusha
push
sbb
adc
leave
test
add
dec
shlb
pop
push
mov
xchg
push
shll
sbb
adc
jns
sbb
iret
push
mov
mov
jbe
loopne
ficomps
cld
insb
iret
roll
and
sbb
lock
jnp
adc
test
fstl
imul
outsb
adc
xlat
js
shl
dec
adc
jg
push
adc
fwait
test
testb
dec
outsb
sub
dec
cmpsb
clts
jae
inc
xor
dec
test
nop
clc
adc
jne
iret
xchg
pop
aam
xchg
in
mov
adc
push
mov
jle
imull
mov
dec
pop
repz
mov
in
cmp
xchg
addr16
test
cld
dec
in
das
xchg
ja
jbe
rcll
jno
popf
jmp
mov
mov
sub
xchg
fstl
sub
ret
in
cltd
rolb
cmpsl
cwtl
sbb
mov
ja
push
push
mov
les
dec
into
daa
cmp
xor
mov
cli
test
jns
cli
les
test
incl
es
sarl
mov
inc
popa
sub
loopne
xor
adc
sarl
dec
repz
mov
and
loop
inc
mul
out
mov
das
repnz
push
xlat
sub
mov
shll
je
pop
jge
sub
sbb
jo
fs
fwait
or
rol
mov
rorl
je
lahf
lock
jp
mov
dec
lcall
xchg
mov
addr16
adc
fadd
mov
sbb
lock
std
and
test
mov
push
mov
loope
pop
repz
push
int3
mov
mov
inc
jl
pusha
ret
sub
jg
jo
sub
dec
pop
xor
adc
xrelease
xchg
xor
and
sbb
iret
fistl
call
test
pop
mov
das
in
dec
test
jns
push
and
or
xor
out
imul
fs
data16
inc
into
push
je
daa
sub
dec
pop
sbb
push
pop
sbb
jmp
nop
out
stc
scas
test
dec
dec
cmc
xor
aam
test
imul
inc
out
int3
flds
stos
test
jne
mov
fs
push
shlb
stos
in
adc
daa
push
fdivrl
xchg
xchg
stos
sar
jns
dec
ret
lret
sub
fidivl
jno
mov
pop
ja
cmp
fisubl
cmp
scas
aad
or
les
add
lcall
jbe
push
fisubl
cmp
repz
cltd
stc
and
in
inc
data16
lahf
push
test
mov
jae
sub
out
add
cmp
cmpl
dec
pop
cmp
sub
cmp
push
sti
push
push
cmp
xchg
int
sbb
push
test
pop
mov
pop
jmp
mov
xor
jecxz
aad
test
or
stos
jmp
sbb
push
push
xor
ljmp
xchg
stos
xor
in
aaa
ret
test
sbb
push
xchg
or
ds
jl
das
sub
dec
sub
leave
in
or
mov
cltd
cld
mov
in
or
out
cmp
fldenv
ljmp
and
cld
add
out
add
add
cmp
xchg
test
xchg
mov
aad
mov
fwait
pop
xlat
inc
cmpsb
js
lretw
push
cmp
mov
jo
iret
push
movsb
in
out
sbb
mov
cmp
mov
bndldx
xchg
fs
jg
xchg
mov
inc
push
pop
inc
cli
rclb
cmp
jp
xor
mov
or
push
scas
rclb
mov
pop
or
jp
fisttpl
inc
xor
popf
mov
je
push
imull
cld
subl
inc
adc
scas
stc
rcl
push
rorb
mov
lods
push
pop
iret
adc
mov
hlt
cmc
xor
add
cwtl
js
mov
clc
subl
inc
inc
add
inc
xchg
addr16
in
push
jae
stos
loope
je
adc
in
xor
mov
sbb
sbb
js
push
mov
sti
dec
adc
mov
gs
test
jb
into
mov
pusha
sbb
pop
int
or
mov
and
cmp
jns
inc
aad
mov
dec
mov
jb
fwait
pop
js
xchg
orl
mov
das
dec
js
cs
adc
sbb
jp
xchg
ror
call
add
cmp
movsb
stos
loop
int
ret
fidivs
fstpt
push
cli
add
mov
mov
sub
lods
fwait
mov
mov
pop
rclb
dec
or
xchg
in
or
js
gs
mov
dec
mov
mov
cmp
clc
sbb
fmull
jmp
xchg
out
insl
jmp
mov
dec
addb
xchg
mov
iret
outsb
test
inc
iret
push
mov
xor
js
lock
dec
and
xchg
fcoms
adc
sub
inc
sbb
aaa
sahf
ljmp
jg
daa
ss
mul
clc
movsl
mov
sbb
jmp
scas
sub
inc
cmp
popa
push
in
outsb
jmp
or
xchg
sbb
xor
pushl
sub
cmp
push
push
jno
jmp
addr16
das
push
popa
call
xchg
mov
mov
out
fsts
inc
je
cmpsl
ret
adc
and
push
jns
ja
jecxz
loope
loop
xchg
jg
popa
in
jp
mov
mov
ljmp
adc
mov
sub
add
push
aas
aad
call
sarl
pop
scas
push
aam
aam
adc
xchg
icebp
arpl
inc
pop
mov
sbb
sbb
push
xlat
pop
pop
add
les
out
int
push
inc
andl
jle
xor
cmp
insl
ret
push
out
inc
leave
cmpb
add
out
mov
imul
dec
or
imul
xchg
mov
shll
fmul
push
push
sti
pop
sbb
stos
xchg
ret
jae
das
and
or
cmp
daa
ret
fmull
pop
jp
and
pop
mov
out
cmp
mov
movd
and
push
fsubs
push
int
popa
enter
lea
iret
notb
pop
sbb
mov
lahf
add
in
jecxz
mov
xchg
jp
cld
jle
shl
call
das
sub
xchg
movl
pop
imul
xor
jbe
fmull
daa
adc
int
inc
sti
dec
filds
fmuls
in
add
imul
inc
xchg
sbb
aas
popa
scas
sti
mov
ljmp
sbb
inc
ficoms
cli
scas
inc
daa
push
stos
sahf
pop
jecxz
aam
xchg
dec
or
pop
mov
lret
or
imul
mov
mov
sbb
pop
dec
xor
divps
arpl
add
or
lcall
test
mov
xchg
out
jnp
jg
pop
pop
push
fcomip
loop
cwtl
sarl
pop
into
and
mov
sahf
cmp
mov
or
in
test
mov
in
fildll
xchg
and
jns
xchg
inc
sub
pop
loopne
orl
movsb
into
pop
in
insb
rcrb
add
incl
xor
inc
inc
bnd
fldcw
pop
aas
pop
lcall
pop
adc
cli
xor
xor
mov
jmp
neg
dec
ss
daa
mov
mov
push
dec
aam
mov
xor
xchg
sbb
sub
jle
dec
lea
iret
in
mov
gs
rorb
test
add
mov
jmp
push
div
ljmp
test
cld
lock
lods
out
mov
lea
sbb
roll
gs
jge
add
in
mov
sbb
lcall
jns
xchg
ret
pop
test
mov
test
cmp
xchg
push
imul
enter
ss
jae
jle
out
outsl
push
xchg
sub
pop
out
ret
dec
popf
test
cs
adc
sub
ret
mov
scas
mov
cmpsb
sbb
popf
or
cmpb
scas
push
xchg
jnp
mov
inc
push
in
shlw
lcallw
das
iret
pusha
xchg
mov
dec
ja
insl
mov
icebp
adcb
push
pop
jge
add
jno
pop
sgdtl
mov
rorb
and
call
inc
lahf
sub
es
add
call
mov
out
cmpl
inc
jg
test
sar
inc
mov
movsl
jno
popa
dec
stc
adc
aad
mov
or
aad
loope
cli
clc
xchg
inc
mov
and
aam
push
fisubl
lods
push
push
inc
xor
mov
dec
cmp
repnz
out
scas
mov
lahf
jnp
and
add
and
push
sahf
imul
filds
fisubl
nop
cs
sbb
pop
and
pop
xchg
fstpt
cmp
movl
lock
push
dec
test
jo
mov
fmulp
cmp
pop
daa
rcr
sbb
cmp
pop
gs
pop
scas
xchg
ja
and
xlat
outsl
test
mov
jge
xchg
ds
vunpckhps
cs
add
aad
or
fiadds
shrb
ljmp
cmpsb
push
inc
out
in
or
pop
test
out
out
xchg
mov
sbb
popa
sahf
stos
mov
rcrb
arpl
jno
out
imul
push
cmpsl
pop
stc
mov
std
push
or
cmp
xchg
and
xlat
adc
lret
iret
jl
jmp
xchg
mov
adc
lcall
js
jge
or
pop
es
push
pop
xor
lock
push
cwtl
mov
or
out
dec
xor
or
pop
xchg
sub
gs
test
dec
xor
inc
or
mov
lea
stc
cmp
mov
and
sub
loop
push
out
push
fs
dec
fdiv
mov
pop
mov
mov
xor
pop
sub
bound
push
mov
adc
in
mov
scas
jb
leave
inc
add
push
jge
repnz
and
mov
sub
aad
xchg
dec
mov
dec
mov
stos
sub
test
dec
mov
push
xchg
popa
fwait
out
pop
add
mov
fbld
lahf
jle
andl
ja
aam
cltd
and
test
mov
mov
mov
addr16
imul
mov
loopne
pop
pusha
mov
cmp
cli
push
sbb
xchg
xor
cmp
push
mov
push
and
outsb
inc
sub
loop
dec
aad
push
inc
xchg
cmpb
pop
cmpsl
jg
pop
cld
pusha
sub
ret
adc
stc
pop
pusha
mov
jb
stc
jae
orl
out
mov
lock
and
dec
les
rcr
add
ds
aaa
pop
pop
mov
push
inc
iret
mov
push
xchg
shll
push
aam
aam
dec
mov
xchg
loop
fisubrs
shll
lea
mov
mov
cwtl
inc
sbb
pop
dec
sub
xchg
jmp
fisubl
shl
xor
lahf
mov
add
mov
scas
lret
cmpl
dec
lock
mov
pusha
fidivs
or
imul
xor
test
xchg
mov
cmp
popf
mov
sbb
pop
test
and
ret
xchg
ret
lret
nop
dec
inc
in
or
shll
ss
call
adc
std
adc
mov
jle
mov
push
enter
inc
mov
adc
aad
pop
lcall
and
mov
js
mov
add
pop
dec
dec
mov
movsl
jl
mov
xchg
push
leave
xchg
pop
pop
mov
arpl
call
xor
dec
imul
mov
daa
test
adc
out
pop
sub
mov
lret
xchg
stos
testb
les
adc
xchg
push
adc
or
mov
adc
pop
test
adc
jg
daa
enter
mov
add
push
pop
push
mov
add
movsl
dec
xchg
jnp
outsb
into
mov
pop
insl
lea
test
cli
mov
jmp
sbb
sti
xchg
imul
cmp
int3
sbb
pop
aad
iret
add
aaa
fsubs
mov
add
into
shrl
cmp
add
cmc
sbb
loope
mov
or
lret
lahf
xor
ds
pushf
fists
mov
mov
pop
test
dec
adc
mov
pop
mov
outsl
and
stos
xchg
jl
int
mov
cmp
pop
scas
imul
movsb
pop
xchg
popf
shrb
lret
pop
call
mov
inc
push
in
fiadds
sahf
mov
fs
mov
jbe
jae
and
dec
mov
fcomps
cwtl
cmp
add
in
ss
dec
dec
sub
cli
lods
inc
push
out
fildl
push
les
adc
test
xor
push
push
dec
or
iret
out
or
mov
xor
mov
add
mov
popf
sub
jg
inc
adc
push
fwait
sti
out
jg,pn
mov
add
aas
adc
insl
stos
or
stos
pop
sub
loop
out
inc
ljmp
sbb
stos
testl
xchg
addr16
dec
xlat
call
adc
and
loopne
adc
pushf
data16
mov
sarl
lds
xchg
pop
loopne
out
push
outsb
nop
push
push
push
adc
not
lahf
cmpsl
rorb
pop
mov
mov
repz
sbb
cld
jle
jno
sub
popf
maskmovq
testl
xchg
sub
xor
leave
je
in
cmp
xchg
ror
push
mov
mov
push
enter
mov
out
lret
pop
mov
push
clc
int3
aaa
add
leave
xchg
inc
movsb
push
fcomi
add
bnd
mov
call
dec
mov
cwtl
mov
arpl
mov
xor
push
loope
xor
insl
push
sarb
inc
in
mov
mov
or
push
ja
shrl
fsubs
jnp
daa
push
mov
ss
fstps
mov
aaa
and
dec
dec
pop
rcrl
pop
ja
decb
mov
mov
std
dec
cmc
jg
sbb
js
mov
insl
push
je
xor
imul
inc
inc
test
fisubrs
dec
insb
mov
ret
sub
push
cmp
int3
cwtl
xor
mov
loope
jne
sbb
stos
xchg
movsb
in
sbb
mov
adc
addr16
sete
jae
add
xchg
or
aaa
aaa
fldenv
sub
pop
lret
adc
pop
pop
mov
pop
cltd
add
jmp
mov
xor
enter
adc
mov
or
stos
daa
fisttpl
cli
xor
and
lahf
out
stos
pop
shlb
mov
dec
pusha
push
int3
or
jne
pop
jp
popf
mov
jne
pushf
or
test
add
sbb
inc
loope
xchg
mov
mov
test
stc
jg
in
jb
fimull
add
mov
aas
sbb
into
sbb
in
pop
in
sbb
push
lea
mov
test
orb
not
inc
xor
xchg
rcrl
inc
outsb
orl
mov
shll
push
dec
daa
aas
mov
pop
push
cmp
cmp
lcall
dec
adc
and
pop
dec
pop
movsb
mov
int
xchg
jae
int3
call
inc
inc
in
push
movsb
cmp
inc
push
jnp
push
iret
add
out
repz
push
gs
out
xchg
xor
aas
mov
push
or
cmc
mov
movsl
lcall
add
sbb
push
jo
and
sbb
popf
inc
cmp
jnp
int
enter
outsb
push
out
movsb
out
mov
test
adc
das
mov
pop
cmp
cmp
dec
dec
sbb
adc
cmp
or
pusha
mov
cmc
cmp
movsb
mov
jmp
xchg
xchg
xchg
int
jns
sbbl
lock
adc
rorl
sbb
xlat
aaa
mov
insb
inc
add
ja
insb
jnp
les
inc
lret
or
sbb
loop
xlat
pop
and
jb
outsl
xchg
inc
mov
dec
mov
in
add
mov
fisubs
ret
dec
sbb
sahf
mov
push
sbb
outsl
mov
movb
lds
push
mov
ds
and
jl
arpl
cmp
in
xor
cmp
sti
jecxz
repnz
push
inc
dec
pop
cmpsl
ljmp
out
js
movsb
inc
fisubrs
push
stos
mov
out
sbb
ss
sbb
xor
int
aad
and
inc
push
sahf
test
lods
aaa
mov
mov
cld
outsb
fidivrl
jge
popf
clc
sub
cwtl
test
cld
fidivl
in
into
mov
mov
mov
call
pushf
mov
adc
mov
push
pusha
or
repnz
sub
jg
pop
push
xchg
mov
cmp
cmp
test
or
jle
frstor
pop
sbb
xor
push
nop
xchg
push
imulb
lods
in
fisubs
adc
in
daa
out
repz
push
sub
jnp
les
fs
adc
add
dec
mov
push
mov
dec
sbb
pop
jecxz,pn
fidivs
dec
cmp
imul
fmull
or
ret
loopne
cmpsb
or
xchg
sbb
mov
and
in
lds
int3
iret
data16
ds
aaa
pop
mov
ret
jae
push
pop
cltd
dec
xor
iret
jb
loope
or
push
or
sbb
push
in
bound
push
fdivrs
or
adc
std
andb
in
and
fs
repnz
jno
jnp
cli
aas
sti
mov
sbb
and
incb
and
in
mov
adc
sub
adc
mov
movzbl
movsb
test
lret
jae
push
xor
or
fdivrs
mov
sbb
fistps
loope
fisubrs
xor
test
bnd
repnz
das
pop
or
flds
cmc
fisubrs
aam
fwait
subb
ljmp
daa
movsl
lahf
cmp
jmp
inc
inc
lods
add
jno
dec
fsubp
xor
jns
nop
notb
sub
xchg
xchg
mov
lret
inc
jns
push
nop
add
xor
lods
sbb
mov
adc
xchg
movsb
mov
into
ds
cwtl
loop
movb
inc
xchg
mov
das
mov
xchg
push
jmp
mov
mov
mov
idivb
sti
daa
out
push
stos
leave
adc
fisubs
mov
lret
xorl
fidivrs
xchg
std
js
enter
out
pop
aad
lock
inc
sbb
xor
cmp
nop
push
sbb
aam
scas
and
andl
mov
sbb
scas
sbb
add
dec
and
mov
or
es
sar
test
mov
xor
pop
mov
icebp
sub
xchg
loopne
sbb
xchg
int3
fcmove
loope
insb
or
sub
or
call
lcall
pop
xor
fldenv
jae
shll
movsb
pop
fstpl
cmc
loop
and
xchg
aas
movsl
stos
push
mov
adc
or
out
popa
and
iret
inc
or
or
xchg
out
scas
push
dec
and
std
xchg
repz
lcall
jo
lea
iret
enter
fcom
sbb
jne
stos
adc
out
push
fstpt
hlt
mov
stos
mov
mov
aaa
sbb
push
sub
xchg
popa
adc
sahf
aam
shlb
sub
out
pop
hlt
addr16
mov
cli
sbb
jge
jle
jno
adc
loopne
rclb
pop
sbb
mov
xchg
or
arpl
in
lods
icebp
dec
sub
loopne
dec
sbb
cmpsl
orb
mov
xor
popf
fstpt
sub
fmull
xchg
jle
in
sbb
add
arpl
xor
ds
mov
add
push
dec
lds
sbb
xor
test
mov
sbb
or
xchg
dec
xchg
pop
pop
into
or
fwait
xor
dec
adc
mov
fmuls
cltd
lods
mov
jecxz
push
aad
jle
repnz
dec
lods
inc
sbbl
outsb
push
ret
inc
in
mulb
cmp
insl
cmpb
mov
push
in
push
lahf
cmp
dec
push
mov
out
scas
xorb
sbb
pop
jmp
and
aam
cmc
mov
and
push
inc
adc
pop
inc
pop
inc
mov
jne
lods
jb
xchg
jle
dec
ret
and
outsb
jne
push
pop
mov
aam
clc
in
clc
fcmovbe
js
popa
test
mov
mov
or
lods
pop
xor
jle
sub
xor
pop
lahf
pop
push
add
fcmove
je
sbb
out
in
mov
pop
pop
mov
or
cmp
add
xchg
mov
jmp
and
push
ret
jl
push
pop
or
popf
sbb
movsl
orb
out
pop
cmp
push
mov
push
sar
and
mov
shlb
mov
lahf
fwait
into
push
dec
jg
cmc
ja
dec
call
les
adc
scas
in
out
or
scas
popf
inc
mov
cmc
push
gs
aam
ja
and
and
lcall
popa
or
stos
adc
push
leave
ds
xlat
cmp
lods
xchg
cmpb
pop
xchg
push
ds
outsl
mov
ret
cmp
xchg
test
or
lcall
fs
inc
cmp
lea
jae
call
add
push
loope
or
ds
and
adc
adc
mov
jmp
data16
test
jmp
loopne
daa
ss
push
mov
xchg
add
stos
sarb
lret
adc
xorl
mov
inc
out
mov
sbb
inc
adc
xchg
or
test
stc
hlt
es
inc
in
lods
outsb
push
std
xchg
jl
test
xchg
jmp
xor
xchg
add
push
lret
add
into
sub
jl
shrl
pop
adcb
aaa
shl
les
ja
cmp
cmp
out
cli
inc
sub
gs
push
mov
sub
notb
add
test
or
cld
push
push
sbb
xchg
xor
sahf
mov
mov
pop
jp
add
loopne
jp
les
pop
dec
dec
repz
lds
dec
cmc
pop
ja
mov
mov
movsl
imul
jge
cs
xchg
shlb
aam
mov
mov
or
inc
dec
cmp
subl
dec
xor
imul
push
jbe
pop
xor
ret
out
in
add
sub
loope
cmp
cmp
outsb
push
es
jle
adc
push
add
sub
mov
stos
in
cltd
aam
push
xchg
jne
sub
cltd
pusha
mov
nop
cmp
mov
lea
mov
xchg
loopne
lret
cmpsb
fs
pop
aas
jmp
fildll
ds
jns
jp
std
xchg
ljmp
adc
loop
hlt
unpckhps
mov
push
ret
add
js
pop
subl
call
je
mov
pop
jne
sbb
rcrl
and
ss
adc
and
or
adc
xor
fistpl
lcall
pop
push
sub
or
fcompl
add
fsubs
push
sbb
je
mov
test
push
or
cmp
pop
sahf
mov
jecxz
mov
scas
popf
mov
jmp
adc
scas
cmp
sbb
push
and
stc
clc
xchg
ds
add
inc
stos
cmp
insb
ss
sbbl
ds
sub
stos
cmp
iret
sub
push
lret
adc
fstp
inc
rsqrtps
std
pop
outsb
xchg
fwait
out
jnp
out
imul
adc
out
ljmp
rol
xor
jno
mov
jl
fwait
insb
jmp
jle
push
out
mov
xchg
cld
cmpl
icebp
jecxz
jg
cld
xor
shrl
push
les
or
dec
inc
dec
rclb
push
cmp
inc
jno
scas
pop
mov
mov
dec
push
xor
and
bound
pushf
ret
scas
mov
aaa
sub
push
ss
test
enter
jmp
xor
mov
imull
popw
icebp
shrl
adc
out
jns
mov
adc
in
stos
sarb
push
sarl
cld
icebp
xchg
arpl
andb
rclb
loopne
aam
jg
fists
dec
cmp
into
pop
out
lods
pop
push
mov
xlat
mov
daa
inc
iret
ret
cltd
lods
jl
mov
adc
je
ret
xor
sarb
test
mov
jns
andl
mov
stos
and
lahf
xchg
pop
shll
dec
cmc
jg
and
aad
xchg
cmpsl
mov
xor
es
push
xor
fistps
inc
clc
mov
push
cld
out
loopne
scas
out
push
sub
daa
fistpl
dec
adc
dec
xchg
jno
loop
lods
mov
aas
or
dec
jmp
enter
je
js
cmc
xchg
cs
pop
xchg
push
ds
loop
xchg
xchg
push
cli
mov
shll
loope
dec
pop
out
mov
push
das
add
mov
mov
adc
mov
mov
test
xor
xchg
mov
jae
adc
sti
mov
pusha
cmc
or
call
cmpsl
sbb
xlat
dec
in
pop
xchg
fcmove
xor
push
js
inc
dec
int3
inc
jnp
fistpl
push
out
jl
mov
test
aad
mov
aad
cld
pop
and
xchg
push
or
dec
lods
lret
ljmp
push
sub
out
imul
push
or
dec
inc
in
adc
xor
rcrl
andl
sbb
and
imul
pop
test
jmp
add
rcr
push
bound
mov
ret
jno
sbb
sbb
addr16
pop
ja
cmc
adc
pop
dec
popf
pop
not
lahf
add
pop
shll
js
cmc
in
fwait
xchg
cltd
sub
adc
jae
add
fwait
adc
mov
lods
push
addr16
adc
mov
adc
lahf
ja
mov
rolb
dec
std
mov
adc
cmp
rorl
mov
and
or
testb
loope
rorb
push
xor
xchg
and
jle
jecxz
push
push
adcb
inc
push
sbb
xor
mov
lret
sub
xchg
aaa
in
pusha
push
cmp
int3
sbb
dec
fistpl
or
iret
jg
cmp
push
xor
lock
mull
push
test
pop
js
std
clc
jle
pop
xorl
int
cli
pop
mov
cmp
lret
repz
popa
pop
bnd
lcall
pop
jecxz
xchg
insl
jecxz
int
int3
lcall
pop
pop
add
jns
or
mov
xchg
jecxz
lcall
dec
jno
scas
jnp
xor
xchg
mov
pop
stos
dec
inc
jno
or
into
xchg
jmp
popa
jnp,pn
push
push
int3
cltd
popf
pop
jb
rcrl
inc
lret
cmp
mov
dec
ret
xchg
sub
mov
call
dec
jns
int
jmp
xchg
sti
xor
adc
aas
rcr
in
jns
shll
sub
mov
or
push
pop
mov
jle
jecxz
flds
fwait
aas
sbb
or
pusha
xchg
inc
jbe
iret
jbe
mov
insl
fdivrl
call
pop
jne
fldenv
xor
inc
push
mov
mov
idivb
add
jg
addr16
insb
mov
pop
test
out
mov
push
mov
mov
xor
mov
xchg
ljmp
ficompl
cmp
jmp
and
mov
in
out
std
inc
and
fsubs
pop
ds
adc
or
stos
insl
mov
or
or
es
inc
test
inc
jno
xchg
cld
daa
or
jne
addl
in
adc
imul
sbb
xor
mov
lret
cmpsl
stos
ret
loopne
test
jge
push
mov
mov
repnz
mov
fidivl
inc
pop
push
push
gs
push
jle
mov
lea
jle
or
icebp
ljmp
xorb
leave
gs
or
movsb
inc
push
jae
sub
aam
xchg
sahf
stos
adc
xlat
jb
cli
mov
out
mov
out
mov
mov
fstpt
pop
hlt
mov
push
fs
je
fistl
inc
stos
call
push
push
out
dec
stc
or
jge
clc
inc
pop
ds
rcl
push
jne
cmp
pop
sbb
jno
xchg
xchg
std
jmp
sbb
push
repz
xorl
ret
mov
cs
xor
lods
popa
popa
add
xor
xchg
dec
pushl
xor
push
sbb
and
enter
adc
popa
sub
lret
js
bound
and
xchg
mov
fsubrl
sbb
ret
mov
cmc
dec
repz
xor
push
loop
bnd
cwtl
xor
mov
dec
imulb
push
jno
fs
cmp
cmp
dec
xchg
je
jns
pop
mov
popl
inc
jb
in
cs
sub
xor
pop
and
xchg
xor
or
js
insl
mov
popa
cwtl
cmp
mov
cmp
pop
in
mov
mov
mov
nop
negb
int3
xorl
xor
adc
cmp
std
cmpsb
aad
push
iret
mov
dec
lods
push
data16
sarb
lret
fldenv
pop
inc
dec
mov
pop
mov
ja
inc
outsl
mov
push
sahf
mov
inc
data16
in
push
jns
icebp
std
loope
lock
xor
int3
mov
incb
dec
jmp
mov
cmp
sub
xor
mov
xchg
lods
jnp
xorb
add
mov
enter
xchg
xchg
in
test
pop
mov
jl
cli
add
jae
iret
jmp
sbb
aas
pop
pop
xor
pop
mov
xlat
rorl
xchg
movsl
arpl
imul
les
pop
js
fs
and
push
pop
leave
inc
lock
inc
sarb
xchg
or
lahf
xorb
stc
cmc
insl
fcoml
lea
adc
pop
cs
js
sub
test
and
dec
sti
int
adc
pop
inc
bound
leave
cmpl
push
push
mov
lret
lret
mov
enter
lods
cmc
paddsb
flds
popa
ss
hlt
inc
xor
repz
test
and
pop
inc
jae
push
pop
inc
push
mov
mov
pop
call
movsl
fcomps
scas
xor
loopne
mov
aas
inc
mov
jl
push
push
jns
mov
ret
inc
rclb
lret
inc
adc
je
into
addr16
inc
les
addr16
fnsave
xorb
mulb
adc
outsl
sbb
sub
or
test
or
data16
lcall
out
dec
loop
xor
push
scas
pushf
popf
popa
xor
mov
xor
push
fwait
mov
or
sbb
cmp
shlb
cmp
mov
lods
sbb
mov
fptan
xor
rcrb
lcall
pop
adc
xchg
jp
addr16
aam
and
sub
sahf
js
dec
cs
adc
mov
adc
nop
xchg
xchg
mov
push
mov
stos
lcall
cmp
jp
stos
fwait
popa
pop
clc
cmpsb
movsb
jb
mov
outsb
and
ret
mov
icebp
push
sarl
idivb
roll
add
pop
movsb
cmp
in
inc
test
ss
enter
ljmp
mov
loopne
sub
je
cmpsl
mov
mov
sbb
lock
dec
mov
mov
mov
negb
data16
sbb
dec
sbb
push
dec
leave
cli
mov
lret
repnz
xlat
insb
cwtl
dec
sarl
loop
inc
inc
and
pushl
inc
and
rorl
repz
out
cmp
inc
jo
out
or
ret
xor
test
cltd
popw
cmc
fisttpl
popf
pop
aam
testl
ja
mov
cwtl
adc
push
fidivl
pusha
cld
rcrb
mov
pusha
cwtl
xchg
scas
jp
xor
cmpsb
mov
in
cs
test
xor
iret
mov
jg
mov
clc
shll
fcomps
push
push
inc
inc
scas
sbb
movsl
lods
pop
in
data16
and
and
jmp
pop
push
xor
push
xor
add
lods
inc
xlat
daa
out
add
cltd
ret
mov
xor
pop
mov
pop
ficoml
enter
lcall
loop
inc
xchg
das
lret
jno
or
pop
ret
ss
shr
andb
out
in
test
xchg
dec
das
inc
dec
cmp
and
aas
jmp
lods
cmp
push
mov
pop
pop
mov
addb
fnsave
outsl
pusha
jnp
fadds
lahf
imul
xlat
lret
and
addr16
decb
pop
inc
sub
outsb
pop
rcll
add
lods
push
outsb
out
mov
push
std
add
roll
inc
jo
sbb
jne
xchg
popf
cmp
xor
jge
xchg
lods
leave
xchg
push
pop
scas
lahf
dec
push
sti
push
je
cwtl
xchg
mov
lds
xchg
or
jne
loope,pt
pop
aam
inc
push
push
into
push
lods
lahf
rolb
cwtl
adc
repz
lods
icebp
push
stos
xchg
push
add
xchg
xor
jnp
cld
cmp
cmp
mov
negl
add
adc
xchg
fwait
jge
orb
ror
dec
push
dec
fisubrl
and
adc
out
xchg
xchg
bound
mov
leave
jo
inc
lcall
aaa
mov
sub
pop
aaa
stc
out
xchg
pop
add
sbb
push
push
icebp
mov
inc
fstpl
inc
fmull
mov
aad
loopne
and
lock
aad
mov
leave
cmp
mov
loope
cmp
insl
mov
pop
frstor
test
mov
mov
jl
lret
adc
dec
lods
stos
lock
aas
jge
or
adc
test
aam
minps
fsubrl
out
nop
sbb
aas
xchg
jg
pop
and
sub
stc
dec
adc
pop
rcl
inc
les
push
sub
mov
popf
test
outsb
and
test
sti
xchg
cs
dec
loop
clc
loopne
cmp
cltd
psadbw
incl
cwtl
xchg
jno
aad
mov
sub
mov
pop
jnp
in
data16
sbb
in
ljmp
data16
ret
add
mov
adc
inc
sarb
inc
inc
int3
ret
aas
mov
je
cmp
out
outsl
ja
imul
stos
bound
add
jno
push
mov
add
dec
gs
sbb
and
sar
mov
dec
in
push
rolb
mov
sbb
jge
out
xchg
inc
cmp
test
in
sub
loopne
daa
sub
ds
jns
adc
shll
je
aas
sub
xor
shl
out
test
popf
cmp
pop
push
jo
pushl
in
push
leave
insb
xlat
push
pusha
into
fwait
jp
mov
test
push
jnp
xor
testb
fucomi
cmp
nop
lret
pushf
jne
fs
adc
icebp
daa
xor
bnd
sbb
out
ds
mov
mov
adc
sub
arpl
mov
dec
cld
mov
mov
push
lret
icebp
xchg
gs
inc
add
jae
mov
mov
movsl
mov
pop
in
insl
cs
sbb
pop
ret
jae
ret
mov
cmc
push
pop
jno
adc
negl
lret
xchg
xchg
sbb
out
xor
dec
mov
dec
inc
or
call
xchg
dec
adc
loop
aam
adc
out
adc
out
xor
push
cmp
bound
loop
ja
fisubrs
aam
sub
adc
pop
movsl
mov
fcompl
cld
cli
fnstcw
cmpsl
inc
inc
scas
test
dec
xchg
cmp
push
pop
sub
fs
push
and
mov
scas
ret
in
hlt
frstor
dec
sub
pop
push
fcmovnb
lods
mov
movsl
sub
clc
cmp
xchg
xchg
xchg
test
sub
test
shr
fadds
or
sti
mov
sti
les
cmc
mov
sub
call
sbb
add
out
sub
push
loopne
out
inc
popl
mov
std
sub
hlt
clc
jnp
enter
cld
test
scas
add
arpl
in
xor
add
xlat
aam
inc
ljmp
roll
int3
mov
popa
cli
addb
pusha
daa
inc
xor
pop
adcl
rep
rorb
mov
adc
leave
adc
push
repz
sarl
orb
pop
or
sub
inc
adc
in
popw
stc
ret
inc
push
push
call
inc
imul
push
incl
insb
sub
insb
add
xchg
nop
push
dec
das
into
xchg
xchg
xchg
scas
lods
ljmp
pop
outsb
movsl
xor
gs
pop
int3
inc
inc
lock
cmpsl
mov
mov
sbb
inc
pop
pop
call
addb
push
or
push
inc
sbb
lret
and
mov
sbb
sub
mov
repz
das
mov
dec
push
cli
or
push
jecxz
cmpsl
popf
cwtl
push
ficompl
bound
pop
xor
xchg
lahf
sbb
dec
xchg
xor
sbb
dec
icebp
mov
mov
sarb
mov
and
push
test
inc
adc
pop
mov
adc
pop
push
repnz
sbb
hlt
dec
scas
push
rclb
push
stc
pusha
lahf
push
push
aam
jg
pop
mov
idiv
stc
or
mov
imul
shr
inc
ret
push
cmp
dec
cmp
cmp
cmp
sbb
push
lcall
mov
xchg
push
ljmp
pushl
cmovno
fdivl
sarl
inc
jb
lock
sbb
mov
push
cld
or
js
add
rorb
lods
push
mov
push
mov
mov
loopne
outsl
mov
mov
out
stos
pop
lret
outsb
mov
call
mov
sahf
mov
lahf
cmp
pop
mov
mov
fcoms
xchg
imul
adc
movsb
insb
jns
and
inc
enter
int3
sbb
rcr
xorl
addr16
mov
pusha
add
adc
mov
test
lret
repnz
jno
test
sub
or
stc
movsl
sub
pop
sbb
xorb
insb
fld
jae
xchg
mov
cwtl
xor
arpl
test
aad
push
or
or
mov
daa
outsb
lcall
push
roll
lcall
mov
rolb
mov
jbe
xor
adc
mov
pop
push
outsb
mov
scas
test
shl
test
gs
out
loope
repnz
mov
add
xchg
jae
jno
and
cmpsl
and
loope
push
in
jle
push
stc
push
ficomps
int
ret
test
fdivs
mov
movsl
dec
mov
mov
pop
lahf
mov
sub
std
es
imul
enter
in
push
mov
mov
pop
push
loop
add
aam
inc
insl
cmp
cmp
nop
mov
xor
outsb
lds
mov
sti
fcomps
add
dec
ret
fwait
scas
dec
push
sub
mov
or
xor
lea
lea
out
cmp
outsb
push
mov
or
test
or
sbb
loopne
xchg
or
rol
test
inc
mov
jnp
jb
or
xchg
inc
push
push
scas
orl
aaa
mov
xchg
xlat
inc
cmp
ret
mov
mov
mov
and
fsubrl
mov
push
inc
dec
jne
ds
insl
or
in
cmp
jp
scas
dec
addr16
xchg
and
add
sbbl
dec
lcall
pop
insb
imul
or
fcmovne
inc
roll
les
scas
fstpl
push
fsubp
mov
lahf
sub
add
orb
cmp
lds
in
inc
lcall
fldln2
fsubrs
pop
jg
pop
outsl
adcb
jo
ret
fs
mov
enter
scas
xlat
cwtl
push
test
fwait
stos
xchg
lock
xchg
sbb
or
mov
js
sub
ljmp
iret
sbb
ljmp
stos
inc
jno
xlat
and
add
fldt
inc
xor
xchg
sar
cmp
pop
xchg
movsl
loope
inc
ds
adc
mov
sub
cmc
sar
or
ljmp
pushl
daa
add
push
pop
and
xchg
pop
popa
std
mov
insb
jp
and
insl
mov
pop
inc
mov
jge
movsb
mov
in
xchg
in
pop
mov
in
ds
xlat
sahf
cwtl
xchg
xchg
in
fimull
mov
xchg
mov
or
or
insl
push
cmpsb
cmp
arpl
sub
arpl
xchg
punpcklwd
ret
rolb
jns
stos
inc
jne
jo
rcll
lds
push
add
cwtl
int
adc
adc
js
add
and
jge
mulb
cs
mov
test
in
and
rolb
ds
icebp
jle
mov
scas
loope
std
push
mov
movb
cmovno
sbb
add
hlt
sahf
ljmp
add
mov
mov
fstpl
ficompl
sub
inc
aad
scas
leave
pop
fmuls
and
pusha
push
mov
pop
add
xlat
cli
adc
push
mov
call
je
sbb
jnp
jb
jne
mov
add
roll
loop
aas
jbe
test
sub
test
jo
mov
pop
cwtl
mov
inc
jl
bound
add
mov
icebp
out
cmpsb
jb
lahf
fs
cltd
inc
add
into
je
dec
sarl
sbbl
jle
in
mov
movsb
icebp
jmp
mov
cmp
cmpsb
jmp
out
mov
lods
add
int
aas
add
fidivrs
out
jo
das
lods
aaa
mov
jecxz
lret
shrb
imul
pop
sub
xchg
idivl
inc
cmc
sub
js
das
and
fdivl
rcll
push
xchg
cwtl
icebp
mov
out
out
pop
fadds
sbb
test
sbb
cwtl
mov
mov
push
loopne
and
xor
xlat
dec
pop
subl
fs
mov
fadd
xor
xchg
cli
lret
pop
nop
push
out
scas
or
mov
add
int
cmp
insb
hlt
sub
jmp
cltd
push
leave
bndstx
das
mov
mov
pop
inc
mov
imul
mov
lret
ja
in
sub
push
mov
loope
inc
or
iret
loop
lock
add
lcall
iret
dec
jnp
jge
push
adc
xchg
xlat
xlat
or
rclb
jle
mov
push
std
jb
testl
sarl
adc
push
push
cmpl
pop
popa
cmp
repnz
inc
in
xlat
mov
push
jns
bnd
mov
daa
push
jmp
xlat
sbb
sub
insl
push
pop
fstpl
addr16
sub
push
cld
sub
fistl
mov
jb
xchg
sub
shl
xor
sti
adc
aaa
out
daa
adc
push
sbb
pop
xor
lock
sbb
adc
xlat
aad
cmp
lcall
outsb
jo
movsb
scas
cwtl
call
cmpsb
pop
ja
xchg
push
clc
fldl
mov
add
hlt
dec
add
and
sbb
enter
ja
pop
pop
mov
or
pop
imul
fidivs
adc
mov
or
in
loopne
cld
jp
push
hlt
adc
cwtl
mov
clc
daa
stc
sbb
adc
push
scas
dec
sub
nop
push
lds
movsb
test
scas
arpl
jmp
enter
es
loop
hlt
xor
push
push
adc
dec
out
xor
xchg
test
test
or
arpl
and
and
andb
pop
and
scas
fcomps
mov
lcall
mov
xchg
xchg
cmp
xchg
cmp
cmpsl
repz
iret
push
clc
mov
shrb
jnp
sbb
mov
jle
mov
mov
call
sub
jns
cld
xchg
bound
pop
xchg
pop
inc
std
ss
arpl
adc
out
xchg
sarl
dec
sahf
mov
inc
xchg
sub
fcmovb
pop
test
arpl
int3
les
ja
mov
adc
dec
or
fcmovnbe
dec
cmp
insl
call
and
neg
into
xor
and
cmp
cld
jmp
popf
and
xor
mov
and
stos
das
push
iret
addb
or
clc
xor
pusha
fidivs
popf
xchg
mov
rolb
jo
fimull
scas
xchg
jp
jns
test
xor
scas
loope
adc
sahf
test
add
adcl
add
aas
sub
int
lods
test
test
ljmp
movsl
cld
mov
jo
repnz
dec
inc
and
shrl
cli
mov
push
stos
andl
cmp
addr16
cmpsb
inc
dec
cmp
xchg
mov
mov
xlat
xor
dec
es
cs
mov
or
neg
mov
adc
cmp
fbld
inc
icebp
adc
hlt
fisttpl
xor
sub
inc
js
push
jecxz
lcall
cmpsl
int
fsubl
sti
push
stos
push
call
test
adc
lods
sbb
mov
lea
fistpl
pop
dec
mov
pop
inc
jo
loop
ja
mov
lods
test
pop
add
ret
or
jmp
or
lea
sar
cli
fs
testb
lret
int
out
pop
addr16
scas
add
ljmp
pop
sar
insb
fldcw
pop
ficoms
or
sub
inc
inc
cltd
push
pop
xor
or
mov
dec
push
negb
ljmp
mov
and
mov
push
orb
jg
pop
into
sub
in
dec
sub
sbbb
loopne
xchg
sarl
xchg
xchg
pop
xchg
into
ficompl
ja
inc
push
add
pop
test
daa
pop
js
shrb
jns
sti
loopne
jge
pusha
mov
adc
or
inc
mov
in
sti
mov
imul
out
inc
stos
push
sub
xchg
add
je
stos
out
xor
out
xor
or
mov
jp
imul
mov
leave
and
mov
lock
mov
xchg
mov
filds
sub
test
test
popf
fldt
push
sbb
mov
mov
mov
shll
push
test
adc
mov
xor
mov
adc
xchg
insb
icebp
push
aas
stos
shll
push
out
stos
push
cmp
mov
iret
mull
aas
pushf
ds
and
xchg
jbe
push
mov
cmc
xchg
icebp
scas
sbb
dec
js
cs
in
loope
repnz
and
jp
mov
rclb
adc
test
mov
cmpsl
in
jb
out
add
inc
and
lahf
jmp
data16
jnp
sahf
int
inc
sub
addr16
jle
hlt
pop
or
fcomip
daa
mov
mov
imul
adc
lret
mov
dec
test
cmpsl
sbb
and
std
dec
mov
sarl
inc
push
or
aaa
movsl
repnz
mov
jnp
inc
dec
in
sbb
xor
test
aad
cs
fwait
adc
int3
fwait
ds
push
stc
xor
sbb
sbb
mov
fcoml
xor
sbb
lea
mov
xchg
fsubrl
fstps
call
dec
mov
jo
or
mov
sbb
push
fildll
sbb
and
ss
mov
jbe
xor
sbb
mov
mov
jne
sahf
sbb
jle
fistps
lods
out
push
movsb
fs
inc
jp
add
es
pop
call
aad
sti
in
jno
jne
outsl
xchg
and
ss
jnp
vmovd
push
mulb
das
imul
fdivl
adc
push
outsl
in
sbb
adc
or
rcl
push
cmp
cmp
dec
push
mov
mov
push
sub
fwait
pop
xchg
cmovs
adc
les
es
mov
or
adc
int3
pop
daa
jbe
xchg
lret
or
je
movsl
or
mov
inc
xchg
pop
fdivp
stc
incl
shrb
adc
cld
data16
fistl
xor
lret
xchg
decl
leave
xlat
data16
xchg
test
insl
pusha
arpl
jae
shlb
mov
aas
clc
pop
and
pop
xchg
sbb
push
adc
movsl
xchg
scas
pop
add
adc
clc
enter
xbeginw
xchg
adc
aas
dec
test
mov
jno
cmp
push
add
pushf
loop
and
cmc
adc
jno
rol
xchg
call
stos
sbb
gs
ljmp
pop
inc
sub
ficomps
pushf
ja
daa
aad
ficoml
out
aas
out
mov
stc
stc
cwtl
sbb
push
and
fs
ljmp
sub
shl
pushaw
sbb
enter
scas
enter
inc
mov
sbb
push
repz
inc
sahf
mov
sub
es
jb
cld
pop
xchg
arpl
loopne
inc
test
xor
add
out
mov
je
xchg
add
mov
cmp
test
test
orl
pop
je
add
mov
rolb
lea
cli
cs
or
add
xorl
mov
sub
clc
mov
roll
push
scas
and
mov
add
cmp
and
mov
fiadds
jno
and
arpl
scas
fucomip
test
sub
and
or
fs
inc
mov
repz
mov
sub
sub
and
pop
mov
popa
outsl
sbb
stos
roll
inc
xchg
ficomps
int
movsb
int
int3
sub
mov
ss
add
in
in
dec
jecxz
jecxz
mov
loop
dec
sarl
ds
mov
test
add
mov
sahf
cwtl
shl
test
inc
cwtl
popa
icebp
repnz
idivb
leave
inc
jb
pop
mov
inc
mov
jo
add
jp
sbb
push
cmpb
mov
mov
xchg
dec
fwait
jp
ret
cli
mov
rorl
xor
fcmovnu
xchg
mov
push
pop
xor
ror
pop
sarb
adc
inc
lret
pop
mov
shr
fsub
push
out
mov
inc
loope
sarb
mov
pop
cmpsl
or
divb
fbstp
mov
lahf
push
inc
push
mov
mov
add
jecxz
inc
cmpsb
mov
sub
rcrb
mov
add
jmp
es
inc
arpl
sahf
xor
adc
js
aaa
lock
mov
ja
sbb
sbb
outsb
ret
dec
fldt
cmp
xchg
jbe
stc
scas
rol
and
or
pop
and
push
mov
clc
push
inc
fbstp
and
cld
lods
scas
imul
dec
mov
mov
or
mov
mov
xchg
mov
mov
insl
jno
push
cmpsl
mov
cmpl
sbb
xchg
cmpsb
sub
sub
and
lahf
mov
add
or
icebp
lcall
push
xlat
mov
inc
dec
scas
lods
fisubrl
mov
jl
rcrb
or
ss
add
sahf
sub
sbb
hlt
ds
cmp
mov
or
or
maskmovq
divl
mov
aad
pop
aaa
test
adc
nop
sbb
lea
lods
pusha
cwtl
and
arpl
add
pop
or
inc
or
pop
ds
dec
imul
jb
push
adc
call
dec
push
mov
mov
mov
push
sbb
loopne
adc
push
push
jg
push
out
mov
lret
cmp
sbb
mov
mov
add
outsb
std
orb
enter
cs
jle
push
test
test
sub
ja
into
and
adc
dec
and
inc
pop
js
out
sbb
mov
cmc
xchg
sub
xor
jge
dec
cmp
out
lods
pop
sub
les
je
adc
or
cltd
jne
mov
orb
cmp
inc
push
nop
icebp
sbb
mov
imul
adc
test
adc
mov
cs
xlat
push
mov
lds
mov
lods
inc
push
push
out
jmp
loope
fwait
cmp
incl
mov
scas
fistpl
jg
enter
pop
or
leave
jne
lods
mov
cmp
xchg
inc
push
or
xor
mov
mov
stos
outsb
xchg
mov
incl
and
sbb
and
fs
jno
iret
xor
mov
push
mov
sbb
daa
fmull
divb
push
sub
cs
jp
pop
or
adc
pop
jo
mov
sbb
hlt
xor
xor
lcall
cmp
push
cmp
push
xchg
outsb
pop
cmp
push
inc
sbb
xchg
xor
popf
das
or
or
fisttps
pop
int
ss
xchg
push
sbb
cmp
roll
mov
jge
pop
scas
xchg
clc
sti
sub
int
jp
jg
into
add
outsb
dec
mov
inc
or
in
ficoml
or
icebp
lret
scas
dec
mov
jl
xor
inc
decl
sub
fwait
int
scas
cltd
stos
fiaddl
ficoml
fs
scas
jle
hlt
notl
pop
add
jno
mov
leave
sub
mov
jbe
scas
sub
add
rolb
cmc
sbb
mov
and
dec
cld
jl
repnz
das
jno
call
movl
aas
stc
mov
ds
outsb
jp
xchg
xadd
pusha
addb
inc
jns
mov
mov
xor
cltd
sub
mov
xchg
mov
pusha
adc
sahf
pop
stos
push
aaa
mov
adc
popa
imul
test
push
fadd
fwait
das
sub
pop
jnp
mov
rolb
dec
stc
pop
pop
movsl
outsl
mov
test
incl
push
scas
mull
push
jmp
xor
sbbb
stc
xchg
mov
xor
push
push
mov
or
xor
mov
jle
and
jbe
xchg
gs
subl
jge
cld
jns
insl
test
mov
aas
stos
std
lds
mov
lea
mov
dec
int3
mov
jno
mov
aam
cmp
je
jle
pop
fwait
pop
insl
inc
add
outsl
mov
fs
push
mov
xorl
nop
push
mov
or
mov
mov
out
jg
mov
push
test
fsubrl
pushf
popa
sub
mov
stos
jbe
es
rcrl
cmp
jl
ss
sti
xor
scas
push
or
dec
out
pusha
jbe
mov
test
cwtl
dec
rorb
jp
mov
add
lcall
in
sbb
mov
mov
or
test
sti
lock
es
mov
cld
fbld
call
nop
pop
sbb
jns
pop
cmc
sbb
out
sbb
divl
mov
push
xor
sbb
or
enter
cmp
jecxz
xor
idivb
lahf
sbb
pop
inc
mov
and
xchg
push
in
movsl
sahf
jbe
aad
pushf
ds
ljmp
pop
test
cmp
lock
cmp
cmp
mov
or
inc
iret
jns
out
je
lahf
ds
pop
subl
lcall
cmp
push
adc
les
call
add
mov
pop
adc
lods
mov
mov
push
mov
ja
inc
add
push
out
loopne
fcoms
and
xchg
or
jb
dec
xor
mov
fistpl
fwait
jmp
fsubs
add
bound
mov
aas
jecxz
loop
jecxz
mov
sbb
push
mov
xor
rcl
in
xchg
outsl
xor
jo
adc
sbb
dec
in
inc
ljmp
push
loop
rcrb
push
dec
and
fimuls
fmuls
and
stc
movsb
push
ds
aam
mov
mov
movsl
pop
les
call
adc
mov
pushf
pop
mov
lret
dec
pop
cmp
pushf
mov
mov
add
or
mov
xor
jl
mov
mov
pop
push
test
inc
aam
arpl
stos
je
mov
sarl
out
je
add
in
pop
inc
test
cli
leave
ds
cmp
and
inc
sahf
sbb
rorb
psrad
dec
push
insb
xchg
call
jns
into
loopne
outsl
ljmp
dec
sbb
or
orl
cmpsl
xlat
jecxz
mov
mov
fidivl
push
and
mov
lock
xor
out
mov
inc
dec
lret
pop
mov
cmp
out
sub
ret
mov
xchg
adc
mov
sbb
mov
out
outsb
cs
iret
cltd
xorb
popa
andb
mov
dec
cmp
aaa
pop
push
sbb
mov
adc
imul
dec
fiaddl
aam
sub
in
mov
xchg
mov
aam
fwait
inc
inc
sbb
in
add
enter
mov
xor
hlt
out
pop
cltd
or
js
call
hlt
leave
pop
fstpt
pop
xchg
es
nop
pop
adc
andb
rorl
stos
testl
mov
pusha
shrb
stc
add
nop
mov
mov
movsb
mov
mov
outsl
mov
jo
or
or
in
dec
xchg
push
xchg
dec
repz
adc
loop
mov
addl
hlt
mov
outsb
icebp
mov
stos
mov
sub
dec
push
push
cmc
sub
mov
je
sbb
hlt
dec
pop
adc
sarb
test
jnp
xor
cmp
in
push
int3
shlb
xchg
xchg
mov
inc
push
in
aad
cmpsl
push
orb
jbe
cmpb
xor
ljmp
xchg
xchg
imul
jb
rol
frstor
clc
fiadds
xor
add
pop
pop
leave
inc
icebp
addr16
ret
xchg
adc
push
sbb
cmpsb
loop
and
sub
pop
jae
mov
cmp
testb
cmp
leave
lds
mov
bound
xchg
pop
repnz
jnp
lods
adc
pop
test
pop
icebp
inc
cmpsb
mov
dec
sub
adc
outsb
div
pop
inc
push
jb
and
pop
je
pop
mov
fdivrs
pushf
into
stos
add
pop
jb
loopne
movsl
push
fs
lcall
stos
mov
fwait
cmp
out
adc
shlb
xchg
inc
or
mov
movl
mov
pop
in
pushf
enter
stos
jno
lahf
shll
mov
push
fs
addr16
lock
clc
xor
js
and
sub
fimuls
scas
mov
push
mov
cmpl
inc
mov
sbb
sahf
mov
mov
sub
push
sub
arpl
pop
in
cmp
jo
and
cmp
test
mov
sbb
xchg
test
adc
xchg
pop
and
cmp
sub
daa
sarl
push
xchg
aas
sub
mov
test
jmp
pop
cmp
lock
jo
dec
shrl
jecxz
jge
imul
push
les
xchg
les
int
in
cmpsl
mov
sub
nop
add
and
decb
outsb
pop
xchg
sbb
iret
shlb
bound
or
call
bound
das
mov
movsl
pop
fiadds
and
mov
xor
xchg
loop
inc
dec
add
es
inc
fldt
sti
inc
sub
ljmp
pop
cmp
inc
dec
pop
or
sti
dec
pop
jecxz
cwtl
xchg
ficoms
repz
mov
mulb
mov
xchg
outsl
or
xor
lret
loopne
aam
sub
in
or
ficomps
roll
sahf
pop
push
pop
and
mov
outsb
and
sbbb
test
push
mov
push
movsl
pusha
adcb
bound
fstpt
mov
bound
cmp
insl
fcomip
fisubl
mov
movsl
xchg
iret
fistpll
fisubrl
adc
ficompl
pop
lea
aam
push
sub
xor
icebp
js
xchg
flds
mov
pop
pushf
lea
jl
and
dec
enter
jae
mov
sbb
jmp
enter
and
je
sub
leave
pop
pop
addr16
adc
pop
add
cmpsb
call
js
adc
cmp
add
loopne
cmp
sbb
xor
das
enter
dec
rcrb
xorps
pop
fwait
or
je
out
pop
inc
jmp
jne
mov
bound
add
jb
ds
loopne
mov
mov
fmul
ret
ret
dec
js
fs
or
cli
stos
lcall
mov
cmc
leave
pop
pop
mov
push
cmp
mov
jg
lahf
std
imul
int
stc
lret
pushf
pop
add
shlb
shl
xor
jecxz
adc
sub
setle
insb
and
pop
aad
out
icebp
pop
setbe
mov
incb
adc
stc
subl
rcl
sub
and
jecxz
push
mov
or
test
shlb
mulb
cltd
xchg
clc
add
cli
mov
shrb
gs
inc
and
pushf
jecxz
outsb
cmpsl
pop
das
jnp
cmp
mov
mov
test
sbb
enter
bnd
fstps
xchg
push
jmp
mov
movsb
leave
ret
jl
cli
insb
cli
and
rolb
nop
lods
adc
loope
popa
mov
mov
lds
push
jne
stos
jl
adc
sarb
push
mov
mov
sub
pop
xor
fisubl
add
loope
adc
add
pop
sarb
mov
call
arpl
inc
loope
or
cmpsl
bound
aad
or
outsl
jno
xorl
xchg
cli
xchg
adc
arpl
xor
cmpsl
enter
mov
add
daa
mov
icebp
icebp
or
xchg
addr16
cmpsb
mov
add
push
movl
cmpsb
mov
sbb
adcb
pop
jbe
ja
push
or
mov
test
push
lret
mov
sbb
adc
pop
add
jb
test
es
mov
push
in
mov
mov
jg
cltd
es
mov
lock
dec
enter
lods
xchg
ret
shll
dec
mov
sbb
scas
lret
fwait
xchg
dec
sahf
rolb
or
ds
cld
mov
lds
inc
pop
aad
test
jg
fs
enter
pop
mov
icebp
dec
mov
cvtps2pi
inc
mov
xchg
pop
cli
jmp
les
and
stc
sub
sbb
mov
mov
jp
cmp
int
add
xor
popf
jecxz,pt
and
xchg
push
insl
ret
jns
fistpll
mov
in
leave
stos
fnstsw
inc
add
fcoml
mov
stos
in
stc
stc
stc
pop
sahf
mov
mov
cmpsl
sti
sub
lcall
jle
shrl
or
mov
jne
pushf
fistl
mov
rcrb
or
mov
je
add
xor
add
stc
push
dec
mov
push
add
sbb
ja
dec
ds
xchg
and
xchg
movq
mov
sarl
sbb
loop
mov
or
adc
xor
pusha
bound
xor
std
aaa
insl
sbb
es
push
dec
ret
cmc
mov
adcl
inc
cld
push
pop
pop
mov
jns
xor
jle
adc
push
mov
mov
dec
popf
scas
or
inc
sbb
bound
out
pop
es
inc
cmpsl
mov
dec
adc
es
xchg
inc
adc
mov
jge
rcrb
sbb
xchg
out
inc
mov
vmovd
sbb
ss
mov
sbb
aaa
mov
sub
scas
push
sub
dec
sbb
ret
andl
dec
add
sub
adc
xchg
adc
cmp
push
cmp
test
shr
fnstsw
stc
sub
cmp
data16
or
pop
sub
mov
out
push
repnz
add
mov
insl
and
sub
lds
jmp
repz
mov
mov
dec
sbb
test
test
repz
jno
mov
lret
aad
push
rcrb
repz
stc
cli
push
cld
popf
movsl
incb
test
push
pusha
scas
mov
jns
mov
mov
sbb
adc
push
jge
daa
aad
jae
mov
in
negl
sub
mov
push
popa
cmp
or
out
jle
xchg
mov
and
jmp
popa
out
scas
sbb
pop
push
inc
push
ficoml
xor
sbb
xchg
arpl
dec
mov
push
dec
stos
fcoml
subb
testl
dec
sti
es
push
ljmp
test
es
xchg
lret
mov
xor
into
jmp
pop
insl
mov
ja
aaa
jge
xor
int
and
psubw
sbb
sub
push
adc
and
add
adc
pop
addl
int
fimuls
add
sub
clc
mov
leave
push
mov
push
fwait
imul
aad
inc
sub
and
mov
rcrl
pop
sub
dec
outsl
jne
push
mov
mov
bnd
adc
filds
in
add
inc
xor
mov
cmp
xchg
adc
mov
stos
stos
leave
push
adc
xor
jns
mov
outsl
dec
arpl
mov
test
jl
insl
mov
or
xor
pop
mov
outsb
pushf
push
mov
ret
mov
pop
mov
or
in
dec
xchg
es
fists
enter
popf
negl
xor
cld
shll
mov
stc
jle
mov
outsl
dec
ljmp
xor
sbb
inc
lea
cmp
jmp
ret
pop
arpl
mov
xchg
or
adc
lea
cmp
hlt
daa
loopne
cmp
jecxz
push
insb
xor
pop
out
in
cmp
test
jl
rol
ja
mov
pop
sbb
xor
xchg
sub
xchg
sub
stc
jno
popa
fildll
push
cltd
lahf
xchg
out
mov
fsubs
mov
cmp
aam
adc
dec
push
add
sub
xchg
pop
xor
scas
loope
loop
sbb
in
add
sub
and
inc
xchg
jne
xor
cs
aam
mov
jae
fbld
cmp
cmp
stos
aam
mov
scas
jmp
mov
in
addr16
mulb
mov
mov
mov
movsb
inc
cmp
stc
sahf
mov
test
out
popf
das
jecxz
ret
push
and
mov
mov
inc
cmp
not
pop
lods
push
lret
inc
mov
xor
jle
sar
inc
xchg
pop
mov
sub
outsl
arpl
add
test
inc
jo
stos
test
out
adc
jns
or
nop
iret
pop
and
sbb
es
mov
call
sahf
jecxz
cltd
aam
fcoms
push
shrb
fsubl
fsts
incb
mov
fistpll
loope
jo
ljmp
inc
mov
call
cmpsl
push
mov
sub
sub
pop
and
test
insl
xor
lods
int3
movsb
push
je
out
js
js
sub
rcll
pop
in
xchg
inc
notb
cmpsl
cli
xchg
imul
out
movsl
mov
aaa
or
repz
ror
xor
lea
and
jecxz
push
insb
lds
mov
sub
mov
mov
pop
in
out
es
pop
sub
mov
sub
mov
or
jmp
mov
rcrb
push
in
daa
mov
fistpll
hlt
sub
ret
in
adc
repz
rolb
outsb
nop
stc
rolb
pop
repnz
xor
movsb
stc
les
dec
xor
dec
push
xor
or
lea
mov
mov
int
push
enter
rorb
pushf
sar
push
sti
mov
pop
arpl
or
jecxz
sti
dec
xchg
cwtl
cwtl
mov
pop
jmp
inc
je
jmp
sub
cmpsb
neg
push
es
dec
pushf
outsb
fiaddl
xor
xor
into
adc
daa
inc
je
pusha
adc
nop
pop
mov
jmp
jmp
ss
test
in
pop
xor
test
pop
jo
xchg
jae
pop
andb
cmc
mov
adc
icebp
sub
jo
xchg
cwtl
dec
sub
jle
sub
mov
pop
addl
push
add
dec
repnz
lret
push
mov
sub
andb
out
inc
fildll
or
sub
test
xor
inc
push
cmp
inc
pop
dec
ficompl
or
je
jl
ljmp
lcall
xchg
xchg
cld
or
outsb
inc
or
mov
jecxz
sti
jg
dec
rolb
test
dec
bound
cmpsl
push
inc
stos
js
sub
rol
faddp
xor
js
vmread
xchg
adc
push
nop
sub
rorl
push
and
xchg
cmp
fnop
ss
inc
cli
or
mov
test
jmp
scas
dec
fnstsw
cwtl
xchg
repnz
pop
shrl
mov
lret
or
inc
xor
ja
sbb
aaa
popl
fs
xchg
mov
push
test
aas
out
data16
jmp
loope
push
clc
xchg
jno
and
or
xchg
loope
lret
push
sbb
lea
fbld
mov
pop
push
sbb
and
mov
dec
sub
xor
sbb
scas
jge
movl
sub
xor
popl
and
mov
push
and
bound
orb
sbb
loop
stos
add
rcrb
pushf
insl
rcr
aad
enter
cli
call
mov
test
mov
jbe
dec
pop
out
mov
data16
push
add
cmpl
sbb
jns
sub
mov
sub
aad
ds
jne
lea
push
lcall
mov
imulb
sahf
rol
inc
fwait
xor
pop
inc
lods
dec
mov
mov
or
add
fstps
outsl
inc
mov
adc
data16
and
jge
test
leave
pop
lds
adc
adc
pop
out
lret
incb
or
popf
push
push
inc
test
movsb
pop
push
xchg
push
cli
adc
dec
fstl
out
fidivrs
and
push
movsb
int
enter
push
in
mov
add
popa
mov
dec
mov
cmpsb
rorl
je
test
lods
rolb
js
fnstsw
incl
and
call
push
mov
cwtl
rclb
dec
pop
mov
jecxz
push
push
lock
mov
inc
push
outsl
shll
mov
fmuls
data16
fidivl
lods
jb
and
push
fdivl
jmp
je
shll
repnz
inc
xchg
jl
inc
mov
es
push
pop
idivl
cmpsb
jl
sbb
dec
or
add
and
gs
incb
jmp
mov
sub
cwtl
rcrb
daa
sbb
test
ds
mov
movsl
or
stos
leave
mov
fcomps
vunpcklpd
cmc
inc
or
sbb
or
ret
test
adc
stos
lods
nop
insl
sahf
sub
jo
sbb
mov
dec
cltd
mov
sahf
cmpsb
ja
push
lret
mov
roll
adc
flds
mov
leave
leave
test
push
cli
test
inc
add
inc
ljmp
dec
push
sub
movsb
inc
sub
std
stc
notb
cmpsl
adc
pop
aaa
xor
mov
or
cmp
mov
adc
xor
add
xchg
cs
jo
sub
cwtl
scas
sub
jbe
pop
orl
adc
and
adc
frstor
add
adcl
xor
pop
js
xchg
mov
or
daa
jno
or
cmc
fildll
scas
jecxz
xchg
xor
jmp
push
adc
jo
int3
mov
sti
jno
sbb
inc
divl
jp
fwait
push
clc
sarb
ds
mov
js
push
in
xchg
inc
or
bound
nop
into
mov
lock
mov
aad
add
lock
icebp
dec
pushl
dec
cli
jno
inc
in
mov
sub
inc
cmpsb
push
mov
aaa
dec
outsl
jmp
lock
clc
nop
pop
xor
or
dec
adc
stos
or
xchg
fidivrs
mov
mov
movsl
pop
cltd
test
jne
jge
mov
es
lea
out
rcrl
sbb
sub
movsb
leave
imul
jg
add
mov
int3
pop
pop
mov
mov
repz
push
test
outsb
sar
pop
mov
in
dec
sub
shlb
mov
sub
mov
xchg
sub
adc
mov
fsub
shrb
mov
and
out
sub
je
dec
mov
ret
pushf
jecxz
push
ja
xor
jmp
cmp
jmp
xchg
jp
pop
cmpsl
mov
mov
sub
push
test
int3
mov
cmp
mov
out
lock
add
hlt
jne
dec
std
sub
mov
push
push
popf
mov
add
in
mov
inc
std
lcall
and
andl
daa
pushf
addr16
xlat
and
pop
fstps
pop
in
mov
jmp
test
insl
mov
popa
aam
xor
sbb
rclb
jo
xchg
sahf
test
pop
loopne
sub
pop
xorl
and
dec
mov
adc
stos
test
or
push
mov
stos
sbb
insl
xchg
inc
insb
fdivp
lds
xlat
lret
dec
popf
pop
or
pushf
xchg
into
in
test
out
push
sub
fildl
cli
imul
add
xchg
orl
dec
ss
aas
ss
subb
lock
push
pusha
jle
sub
mov
bound
mov
jge
out
or
jmp
fucomi
jae
or
push
in
ficompl
scas
cmp
enter
sbb
test
sbb
mov
lcall
add
inc
xlat
cmp
pop
adc
dec
fcomps
dec
adc
xchg
mov
pop
pop
out
mov
lock
ret
rolb
mov
popf
mov
cmp
cld
add
sub
sar
lret
faddl
out
mov
arpl
and
in
mov
and
mov
icebp
clc
mov
nop
sub
insl
cmpsb
test
or
xchg
jo
aas
and
popa
sub
xor
or
mov
cltd
cld
and
femms
scas
hlt
jbe
push
mov
and
out
and
cltd
cmp
fs
pusha
lock
loop
shll
loope
add
popf
mov
mov
insl
int3
fmul
adc
scas
lods
mov
sbb
flds
pop
aas
dec
jge
adc
lret
mov
out
stc
mov
mov
mov
pop
mov
mov
js
mov
jecxz
mov
shlb
int3
ljmp
insl
mov
pop
jnp
pusha
dec
loop
mov
aas
pop
scas
cmp
repnz
xor
xor
pop
ja
and
jp
cwtl
lods
or
mov
mov
mov
mov
mov
jns
call
popa
daa
mov
ficoms
and
cmp
iret
data16
sub
ljmp
repz
jmp
scas
pop
pop
xor
cmp
mov
in
pop
in
sahf
imul
cmp
mov
dec
push
int3
imul
mov
add
stc
pop
cmp
push
cmpsl
dec
lcall
mov
sub
adc
sub
pop
sbb
cmp
jns
jae
jne
and
mov
xchg
rol
pushf
pand
pop
inc
xchg
add
push
lret
js
js
and
fsubl
mov
cltd
sbb
sub
push
add
push
xor
xchg
mov
push
inc
mov
mov
pop
jle
sub
mov
fs
mov
cmc
sub
or
pop
push
push
xor
mov
push
push
adc
lret
inc
out
add
xorb
and
cli
jnp
pop
sbb
dec
aas
out
sub
dec
push
in
cli
xchg
fs
ret
adc
add
push
mov
in
jnp
loop
jle
popf
data16
xchg
rcrb
test
out
sbb
mov
stos
cmc
insb
push
xor
pop
rclb
test
fisubrl
dec
cmp
mov
ss
pop
jge
adc
lea
inc
jbe
push
icebp
pop
jne
cmp
iret
xor
out
mov
rcll
mov
int3
lcall
mov
sar
test
jp
cmp
pop
test
hlt
jne
xchg
dec
pop
xchg
lret
mov
jle
sbb
xor
inc
inc
lret
dec
add
ficompl
int
test
dec
insb
add
test
shlb
in
jns
xor
lods
idiv
mov
nop
fmull
pop
gs
push
outsb
add
xchg
js
shlb
or
inc
xor
fsqrt
sti
addr16
imul
push
mov
ljmp
repnz
imul
loop
push
fsubp
push
xchg
or
xor
in
stc
or
adc
and
mov
mov
cs
sysret
movsb
cwtl
loope
insl
sbb
jle
and
andl
xor
in
add
std
adc
sarb
mov
mov
xchg
mov
jae
neg
arpl
jecxz
pop
mov
jle
in
popf
inc
cmp
das
sub
push
movsb
shr
jb
lcall
add
pop
ds
and
movsl
mov
ret
inc
cli
les
das
xor
rcrb
outsl
rcrb
insl
cmp
lea
in
sub
add
jmp
pusha
leave
movsl
ret
shrl
cmp
push
aas
mov
ljmp
jle
xor
gs
cmc
mov
daa
inc
xchg
adc
jae
and
into
inc
inc
jnp
push
out
test
push
push
out
xor
rol
sahf
mov
stc
dec
int3
sub
in
inc
inc
mov
push
cltd
in
test
and
hlt
roll
cld
inc
jo
cmp
jo
addr16
loopne
notb
xor
das
lahf
push
mov
push
inc
sbb
sbb
adc
jo
sar
fs
cltd
loope
decb
mov
stos
xchg
icebp
inc
into
xor
sbb
imul
cmp
dec
dec
ljmp
mov
dec
je
push
aaa
cmpsb
loopne
mov
insl
add
es
mull
pop
sbb
and
addr16
adc
mov
add
mov
out
es
pop
icebp
lea
jg
rclb
mov
ficomps
ja
stos
cmp
lods
mov
into
inc
pop
dec
fstps
stos
or
mov
mov
sbbb
cmpsl
fidivrl
test
cmpsb
adc
mov
mov
dec
cmp
xchg
sub
stos
sub
xchg
je
push
dec
pop
popa
fistpll
arpl
js
xor
daa
mov
fcomip
jbe
lahf
jns
mov
lods
scas
inc
test
cmp
cmpsb
outsl
cmp
jb
setbe
mov
int3
pop
push
xchg
pushf
ret
sarl
cld
add
arpl
inc
mov
dec
faddl
mov
or
cmpsb
push
xchg
aaa
cmpsb
cmpsb
push
add
into
rcr
push
push
rcr
mov
cld
pop
push
ffreep
cmpsl
inc
and
out
ds
add
shrb
lret
in
dec
or
sbb
sub
mov
scas
pop
fld
add
inc
loope
lretw
scas
jmp
cmp
data16
imul
dec
jl
in
bound
lret
adc
xchg
bound
pop
cltd
jno
push
pop
mov
fmull
daa
mov
push
stc
stc
mov
fsubrs
sti
cld
mov
mov
mov
pop
mov
cltd
in
xchg
dec
push
lods
les
inc
jb
flds
test
inc
or
xor
or
add
adc
sub
xor
int3
or
sbb
adc
xchg
cmp
test
sbb
sbb
mov
rcr
ret
stc
rclb
cli
lea
cli
and
das
xor
pop
imul
jge
xchg
icebp
sti
dec
fstps
sub
rcrl
popa
mov
push
repnz
xchg
nop
loop
pusha
jp
in
sbb
in
insb
rcrb
jecxz
sub
xchg
and
push
and
xor
gs
jecxz
js
lock
mov
repz
push
addr16
imul
mov
mov
ds
addl
in
int3
or
pcmpgtw
repz
aam
sbb
sarb
cli
or
mov
les
xchg
lret
jge
mov
sbb
in
or
cmp
mov
jmp
scas
and
mov
pop
mov
or
test
icebp
add
mov
lock
lods
and
int
frstor
inc
clc
pop
inc
cmc
aaa
stc
lods
jecxz
push
push
push
mov
pop
push
lret
gs
inc
adc
insb
and
scas
iret
mov
lahf
mov
and
xchg
daa
test
andl
lcall
out
fsubrl
stc
hlt
mov
js
mov
lcall
int3
jne
inc
cli
push
out
add
mov
xor
in
or
or
ret
sub
ja
imul
pop
jne
jne
aaa
fidivs
sub
rorl
sub
outsl
mov
jnp,pn
pop
filds
sub
sub
inc
cmc
sar
push
xor
adc
sbb
out
lahf
jecxz
outsb
mov
pop
jge
push
jo
jl
popa
es
mov
add
ss
fcoms
pushf
adc
shll
mov
adc
xor
js
or
sub
jno
mov
fyl2xp1
insb
mulb
mov
sub
outsl
bound
imul
stos
sub
stc
sbb
rcrl
cli
inc
sahf
repnz
hlt
scas
ds
pop
enter
pop
sbb
pop
add
xor
sub
adc
or
cmp
sbb
push
xor
out
sbbb
lock
clc
imul
insl
popa
dec
dec
push
sbb
mov
call
sahf
int
add
xor
sub
mov
mov
pop
daa
hlt
es
cwtl
sub
aaa
mov
rcrl
stc
xor
jl
adc
in
mov
jnp
imul
sub
test
mov
sarl
adc
jmp
nop
xchg
mov
pop
push
dec
mov
mov
outsl
mov
lods
mov
sub
test
scas
xlat
dec
aad
test
jb
dec
sub
and
push
and
mov
inc
popl
sub
jae
xchg
aad
add
repnz
repnz
loopne
out
addr16
cmp
imul
sti
int3
push
ljmp
addr16
pop
sahf
cmp
add
mov
sbb
dec
xchg
out
scas
add
shlb
icebp
pusha
or
adc
in
or
cmpsb
mov
fwait
push
es
jecxz
aam
mov
and
out
fwait
imul
jp
push
loope
jb
and
scas
push
ljmp
sub
push
jns
addl
rol
out
or
xchg
orl
xchg
mov
lds
mov
arpl
and
mov
cltd
orl
fisttpl
mov
aam
cmc
mov
jmp
jne
jo
cltd
add
mov
out
xor
inc
aam
mov
cli
adc
cmp
cmp
cmp
lcall
daa
lea
imul
in
fwait
inc
fiadds
subl
and
shll
das
xor
mov
mov
mov
sarb
sti
inc
stos
inc
jns
jl
call
loope
int3
mov
rol
movsb
pop
mov
hlt
cmp
nop
jno
or
sub
das
xchg
insl
icebp
fucomip
out
fists
mov
push
aam
xor
aas
popa
jbe
push
sub
test
fsubp
or
sahf
lret
inc
inc
pop
lods
dec
stc
pop
inc
jb
or
mov
sbb
or
mov
inc
push
mov
cwtl
mov
stos
fsubs
loope
loope
mov
push
xor
sub
mov
mov
in
out
pop
inc
sbb
mov
jns
addr16
lcall
fsts
leave
mov
cmpl
cwtl
inc
ds
imul
pop
inc
pop
jmp
lods
push
cli
cmp
rcrl
or
sahf
add
adc
push
imul
insl
clc
les
sub
aaa
sub
sub
add
mov
rcrl
or
ss
enter
mov
addb
mov
add
jb
mov
jecxz
leave
pop
jp
stos
jg
jge
addr16
or
rclb
popa
push
orl
mov
dec
xor
aaa
sbbl
in
pop
and
mov
out
in
inc
pushf
in
movsl
mov
int
sbb
cltd
jl
mov
or
rclb
bound
sbb
cmpsb
pop
std
jmp
jb
or
mov
rorl
mov
lods
sub
and
call
push
cmp
pop
and
push
ss
fcoms
arpl
out
hlt
stos
and
pusha
test
and
push
sub
push
jae
sti
in
mov
jmp
add
adc
xor
sub
mov
fdivs
xchg
push
lods
mov
loope
testl
outsb
mov
je
sub
or
jp
cltd
inc
dec
or
int
je
loope
sbb
dec
lret
roll
mov
mov
aad
inc
dec
push
out
sub
xchg
pop
in
sbb
cli
addr16
and
popa
jne
insl
xchg
fildll
fisttpl
stos
rolb
loopne
icebp
jns
jno
add
pop
out
fldcw
pop
in
aas
shr
decb
outsl
pop
mov
daa
or
call
dec
repnz
insb
bound
sub
das
scas
cli
mov
cld
or
fcmovnu
outsl
sbb
push
nop
mov
int
jne
rcr
pop
cwtl
push
or
test
cmpsb
or
jnp
imul
test
fisubrl
push
clc
jmp
lock
aam
les
ss
push
stos
or
dec
xchg
test
jl
push
jp
inc
add
push
fbstp
pop
lcall
leave
cmpxchg
or
inc
lret
and
add
push
hlt
sub
push
sbb
pusha
cmp
test
in
scas
jge
inc
or
adc
lds
or
aas
incl
mov
pop
mov
adc
enter
outsb
jge
rcll
cli
mov
mov
or
and
adc
pop
xor
jecxz
inc
mov
mov
push
fstps
das
sbb
mov
mov
repnz
std
fwait
test
outsb
in
pop
jbe
jp
sarb
pushf
mov
stc
lcall
mov
pop
or
mov
shlb
or
and
outsb
stos
clc
or
sbb
mov
and
lods
fnstenv
xor
xchg
stos
push
pusha
pop
mov
push
mov
cmp
sbb
cmp
fcmovb
addr16
into
push
push
inc
add
inc
adc
cmp
push
loope
lret
sub
addr16
into
push
xor
dec
xchg
and
in
xor
popf
cli
inc
ds
sub
aaa
rcrl
xor
push
repnz
adc
adc
mov
jbe
sub
mov
lahf
mov
jle
lret
cli
das
xlat
cli
mov
cli
enter
xlat
stc
ret
push
mov
test
jp
int
ret
ret
mov
cmp
outsl
movsb
inc
sbb
add
cmc
mov
ds
stos
mov
xchg
orb
mov
nop
popf
mov
add
add
or
cmpsl
lods
xor
inc
and
jle
lret
push
inc
test
and
mov
and
sbb
sbb
faddl
sahf
frstor
xchg
lret
push
sarl
push
lods
cli
in
jnp
push
xchg
and
cmp
xchg
lahf
jae
ret
push
not
xchg
pop
mov
mov
add
adc
jno
pop
xor
sub
push
test
in
inc
cmp
inc
rorl
dec
and
pop
inc
xchg
push
mov
xchg
aaa
stos
rcrl
mov
jg
sbb
cmpsl
pop
movhps
cltd
lods
dec
jle
cmc
lock
in
arpl
jne
jg
or
cmpsl
mov
xor
lds
mull
in
sub
pop
fs
icebp
in
sbb
xor
fmul
imul
scas
xor
sub
pop
jb
jno
shrl
push
xchg
mov
mov
sub
cmp
out
xchg
adc
aam
bound
xlat
dec
dec
sti
fimull
loop
cmpb
inc
stos
sti
push
pop
mov
mov
orl
mov
cli
cli
iret
rclb
push
int
loopne
xorl
mov
xchg
push
stos
dec
jmp
or
std
push
push
js
pusha
out
jmp
add
ret
push
lahf
xchg
mov
push
lcall
add
jl
fbstp
mov
std
mov
cmp
insl
inc
add
lods
or
les
mov
inc
xchg
inc
inc
or
test
and
loop
movsl
xor
add
jecxz
jne
pop
cmp
lret
mov
test
pushf
lcall
cli
stos
mov
imul
inc
pop
sub
or
leave
jmp
insb
fwait
inc
sub
into
jecxz
jo
sub
xchg
jno
jge
sbb
fisttpll
adc
push
ja
add
or
sbb
fwait
out
lods
jecxz
cli
pop
mov
cmpsb
mov
sub
loope
inc
sysenter
xor
cmp
clc
or
sbb
pop
movsb
jne
fisttpll
add
and
inc
cmp
ss
cli
mov
mov
repz
xchg
dec
dec
insl
cmp
mov
dec
int3
ret
fwait
pop
rorl
xchg
or
sub
xchg
push
out
xlat
adc
jle
movsl
mov
push
sub
inc
pop
mov
ss
dec
mov
inc
jno
jnp
xchg
mov
sub
mov
fwait
or
sub
jp
push
popf
dec
mov
xor
aad
cltd
shll
out
mov
lahf
or
lret
sub
lea
das
bound
lret
add
add
jne
and
cltd
mov
xlat
xchg
test
inc
lea
sbbl
xchg
jge
lods
cmp
leave
rcr
lcall
dec
clc
add
call
imul
lahf
cld
lds
enter
or
ss
int3
sbb
pop
cmp
int
fldz
fsts
out
mov
cmpsl
mov
call
ss
mov
mulps
les
inc
jle
mov
jno
mov
aam
mov
mov
inc
add
mov
rolb
stos
addr16
lret
mov
mov
in
mov
push
test
mov
test
pop
xor
pop
jecxz
nop
add
pop
popa
aad
sbb
jns
rorb
adc
push
rcll
xor
push
lea
push
push
jne
sahf
imul
movsl
push
mov
mov
scas
pop
roll
pop
dec
push
jns
jg
shll
mov
ss
jb
cmpsb
and
add
cmp
sbb
xchg
jne
cld
or
scas
pslld
cmp
add
mov
cmp
je
pop
mov
fstpl
mov
mov
cmp
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
