add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int
sub
mov
push
mov
xor
adc
and
xor
inc
mov
jo
mov
ja
inc
mov
shlb
aaa
loopne
lock
adc
push
iret
xor
inc
mov
pusha
xchg
pop
rcll
fnsave
rclb
cwtl
jg
or
jl
inc
cmpsb
push
movsl
pusha
hlt
or
pop
cmc
add
shll
ss
xor
xchg
into
in
repz
xor
das
test
mov
mov
cwtl
xor
test
xor
mov
test
in
or
cmp
xchg
mov
call
rorb
subb
push
xor
xchg
test
out
into
sub
push
das
push
lds
ja
inc
in
shll
pop
loope
repnz
iret
int
push
cmp
jmp
mov
mov
jo
aas
adc
movsb
mov
mov
mov
push
mov
add
xor
les
or
clc
mov
cmpsl
and
xor
and
jmp
push
mov
daa
xchg
aaa
loopne
dec
test
out
pop
clc
lds
jmp
fwait
dec
pop
pusha
lahf
adc
repnz
in
fidivrs
scas
andb
popa
movsb
push
xchg
push
mov
loopne
fcoms
aaa
incb
xor
cmp
outsb
andl
push
addb
out
call
xor
repnz
xchg
shrb
icebp
cmp
pop
lock
add
adc
and
xor
inc
cmpsl
push
mov
xchg
andb
mov
daa
shlb
loopne
lock
add
adc
and
xor
inc
cmpsl
push
mov
xchg
andb
or
out
mov
sub
jnp
fcomip
daa
dec
push
outsb
xchg
push
inc
xchg
fisubl
xor
jns
and
jp
sub
test
push
inc
xchg
loopne
cmc
pop
xchg
cmp
loope
xchg
pop
nop
mov
xchg
mov
shlb
mov
call
int
add
jo
jge
lret
scas
mov
dec
mov
pop
sub
jle
and
mov
enter
inc
movswl
mov
sahf
sbb
cmp
and
fisttpl
jl
stos
imul
push
lea
ljmp
cmp
add
imul
dec
xchg
cmp
mov
pop
dec
arpl
push
and
dec
je
cmc
lcall
pop
adc
fsubrs
leave
cltd
outsl
mov
mov
push
or
cmc
pop
cwtl
xor
cwtl
pop
movsl
addr16
in
stos
std
push
push
fwait
add
xor
test
cmpsl
in
shrl
dec
daa
inc
pop
xchg
jmp
sbb
push
xchg
shrw
dec
mov
cmp
xchg
out
pushf
jbe
push
out
pop
jmp
mov
pop
and
leave
lahf
hlt
adc
leave
fst
cmp
xchg
and
stos
mov
lret
out
lcall
sub
push
cmp
xor
mov
pop
xchg
jecxz
jmp
stos
and
bswap
mull
inc
mov
pushf
dec
adcl
inc
cvttps2pi
fstl
cmp
cld
jmp
retw
inc
xor
rolb
sub
xlat
xor
rcll
ret
push
mov
pusha
cwtl
lds
mov
dec
cld
dec
mov
jmp
push
daa
or
pop
cld
and
inc
in
loopne
mov
lds
add
jo
sahf
fwait
insl
sbb
or
add
mov
dec
popf
dec
fsubrs
aaa
pop
lret
inc
or
adc
nop
and
sbb
aaa
inc
lods
mov
addr16
mov
icebp
cmp
jo
sahf
cmc
in
pop
cmp
or
sbb
in
or
ja,pn
mov
movsb
mov
add
loop
cli
out
mov
jl
cmp
push
inc
clc
mov
jnp
push
int
lods
push
nop
imul
in
out
ror
in
faddl
mov
cmp
mov
jne
pop
lret
fucomp
and
in
loope
shll
push
in
sub
add
je
and
dec
mov
add
pop
mov
dec
ret
add
pop
lods
rclb
xor
aaa
xor
mov
and
mov
add
adc
cmp
or
mov
inc
sub
repz
mov
cmp
ret
jle
loope
jmp
dec
cltd
loope
es
ljmp
arpl
or
jp
in
loop
popf
mov
or
mov
xchg
dec
mov
shrb
movl
xor
mov
nop
insl
cmpsl
repz
lea
push
fldt
mov
push
insl
iret
dec
in
inc
insl
out
cwtl
iret
sbb
rcrl
idivl
sbb
mov
lods
add
call
push
push
xchg
add
imul
push
aam
imul
lret
imul
int
cmpsl
or
ss
int
mov
stos
lret
inc
jp
xchg
jns,pn
clc
push
jbe
sub
xchg
sti
push
pop
xchg
rcrl
xchg
mov
xor
das
mov
push
dec
call
cld
movsl
rclb
inc
fidivl
dec
pop
cwtl
lea
inc
out
xchg
jge
out
inc
sbb
jne
leave
aas
cltd
pop
aas
xchg
cmp
notb
sbb
in
mov
std
out
xorb
xchg
mov
inc
jbe
xchg
add
ljmp
and
or
andl
decb
push
and
sub
dec
push
div
jae
mov
jl
mov
sbb
iret
mov
fwait
cmpsb
cld
stos
call
repz
imul
daa
in
pop
std
popa
clc
mov
hlt
adc
int3
sbb
lret
cmp
mov
sbb
cmp
mov
cltd
out
nop
clc
sbb
loop
icebp
cmp
sub
lret
mov
inc
push
fnstsw
cld
outsl
sbb
jge
divl
sti
mov
cld
and
push
mov
xchg
loop
sbb
mov
add
push
cmp
push
cmp
mov
test
push
stc
lock
cmpsl
cmp
adc
add
test
xchg
jo
jnp
adc
mov
ret
movsb
aas
les
and
lcall
mov
cli
jecxz
or
bound
mov
adc
and
xchg
rcrb
jmp
inc
into
push
enter
outsb
ret
orl
popa
rorb
clc
fdivs
mov
jbe
outsb
movsb
imul
test
sbb
negl
pop
out
sahf
es
into
andl
or
fs
xchg
lds
fstp
test
inc
mov
mov
sbb
cmp
lret
movsb
adc
adc
ljmp
rcll
pop
orb
jns
mov
lods
loopne
xor
mov
xor
push
xor
jne
mov
xor
fmuls
das
jmp
xor
orl
icebp
xchg
cmpsl
adc
push
cmp
xchg
dec
lret
iret
fcoms
inc
cmp
repnz
inc
aam
pop
imul
out
out
jp
or
sub
frstor
cmp
fcmove
repz
push
lret
mov
sbb
cld
add
mov
xor
idivb
idivb
icebp
loop
mov
lock
mov
movsl
loopne
jo
push
add
push
xchg
es
jns
fildl
jo
mov
sub
out
bound
xlat
jge
add
or
pop
addr16
xor
ror
mov
adc
mov
movsl
jl
pop
in
mov
popf
xchg
add
out
push
xor
loop
dec
lahf
mov
scas
out
loop
pop
sub
ja
fs
inc
gs
cli
lea
and
btc
cmp
in
fadd
ds
enter
mov
loop
mov
div
and
testl
mov
mov
mov
test
enter
sbb
mov
fstl
adc
rorb
mov
daa
sub
push
imul
or
mov
xchg
mov
in
std
lds
fists
push
pop
adc
cwtl
inc
sti
call
into
adc
aas
aaa
sar
js
dec
clc
inc
push
mov
xor
out
test
std
mov
fisubs
add
jae
mov
movsb
mov
dec
ja
rcrb
loope
pop
lea
xor
sbb
or
and
aam
add
mov
and
sbb
mov
xlat
xchg
clc
lahf
add
jnp
cmpl
dec
sub
push
cmpl
pop
ds
pusha
shlb
mov
in
inc
push
cmpsb
push
negl
adc
mov
sbb
sub
xor
jg
in
push
aaa
stc
xchg
paddw
mov
xor
aas
sub
inc
mov
lret
xchg
mov
sbb
call
lds
mov
push
xor
push
arpl
loopne
push
fistl
dec
pop
add
fstl
scas
out
xchg
push
mov
or
or
sbb
lret
dec
xchg
loop
and
int
fsts
dec
or
mov
push
jg
out
jbe
pop
jae
stos
xor
in
pop
cli
pop
imul
dec
push
int3
add
or
sbb
xchg
inc
mov
jbe
arpl
ja
mulb
scas
mov
movntps
shr
push
adc
add
jnp
fldl
mov
cmpb
js
outsl
data16
inc
mov
inc
es
mov
out
xchg
es
test
mov
test
ror
sbb
outsl
out
lea
xor
out
xchg
push
jmp
loopne
pop
cltd
sub
ss
fidivrs
add
pop
bound
xorl
jne
mov
push
adc
pop
cs
shlb
pop
int
test
or
push
xchg
out
aas
mov
or
in
rcl
push
xor
sbb
xchg
pop
xchg
test
jne
cmp
movsb
mov
movsl
mov
and
mov
jecxz
in
sbb
jmp
mov
jne
int
sbb
pop
ja
sbb
push
push
arpl
outsb
rcll
inc
push
and
mov
arpl
xor
lods
arpl
cld
push
loop
mov
loope
adc
call
cmp
fildll
dec
xchg
sub
fsubl
divl
lds
mov
cwtl
cmpxchg
jb
test
and
or
mov
out
xchg
pop
add
pop
popa
and
shr
jmp
push
dec
mov
gs
or
lds
adc
data16
sbb
orl
movsb
and
testb
dec
loop
push
mov
and
frstor
mov
popa
call
jo
ror
pushf
inc
lock
cmpsl
sub
imul
cld
push
loop
push
mov
inc
call
push
mov
pop
cs
and
and
mov
out
cmp
jmp
jge
adc
pop
and
cmp
out
xlat
rorb
int3
lcall
int
stos
out
dec
sbb
jle
out
lahf
mov
add
or
pop
ljmp
push
sbb
push
in
test
in
or
movsl
mov
mov
xor
shl
outsl
pop
pop
cmpsb
add
mov
ds
mov
ret
je
inc
popa
xor
mov
pop
movsl
xor
mov
loope
ret
das
jp
sti
mov
xor
jge
pop
es
or
or
inc
push
xchg
lret
mov
leave
in
xchg
cltd
mov
mov
mov
daa
dec
cmp
popf
in
jo
insb
push
cli
and
push
pop
ja
test
jo
ja
test
dec
adc
andl
scas
shl
and
hlt
and
and
xchg
adc
mov
ret
mov
stos
pop
test
pop
xchg
pop
adc
sbbl
sub
outsl
push
popa
xchg
mov
outsb
testb
jle
cmp
sub
lea
repnz
sarb
repnz
shlb
std
adc
pushf
aam
addl
shlb
sub
hlt
mov
jle
fdivs
jo
int3
sbb
hlt
out
je
mov
or
jns
rcl
push
lret
clc
inc
pop
shl
mov
out
jno
adc
or
cmp
jmp
sbb
fildl
mov
inc
xlat
dec
daa
outsl
pop
ja
xchg
stos
cli
fmuls
test
mov
mov
add
xor
das
movsl
stos
mov
imul
push
pop
or
push
push
ljmp
inc
dec
mov
shll
push
lods
lock
nop
adc
mov
stc
mov
mov
adc
xchg
jl
push
mov
fistps
mov
scas
sub
pushf
cmp
out
adc
xchg
mov
push
jmp
lret
cmp
test
cwtl
jecxz
inc
xor
gs
pop
fwait
cwtl
lahf
lahf
inc
outsl
dec
incl
sbb
push
lods
aas
out
add
insb
outsb
inc
cmp
gs
stos
mov
pop
mov
je
mov
stc
cmpsb
out
sub
push
cltd
dec
or
bound
scas
out
cmp
mov
imul
add
adc
mov
fstps
insb
mov
push
pop
xor
xchg
inc
add
dec
add
hlt
pop
sarb
pop
push
or
arpl
mov
aad
dec
cmp
sub
fisubl
enter
push
xchg
dec
rclb
shl
lock
xchg
out
test
in
pop
insb
shlb
xlat
shl
cs
sbb
push
out
lahf
fistpl
fwait
inc
dec
xor
sbb
or
sub
js
lock
and
mov
jne
push
xchg
fcoml
xor
cmp
xchg
jne
popa
call
out
cs
fwait
inc
push
lock
add
int
add
dec
pusha
jns
and
or
rcll
testl
ljmp
mov
fidivl
ret
out
loope
cmp
jg
sahf
push
fs
push
jae
push
pop
lods
mov
inc
shlb
imul
or
das
int3
mov
das
jge
cmp
cwtl
dec
mov
mull
push
call
outsl
sub
ret
inc
cmpsl
iret
xchg
mov
js
sub
jmp
dec
emms
jbe
mov
jl
cltd
dec
shlb
and
sbb
jbe
jbe
repz
inc
adc
aad
xor
mov
and
hlt
test
loop
mov
mov
fsubr
or
out
sub
lods
xchg
in
gs
rcll
mov
inc
cli
add
iret
push
icebp
jbe
cwtl
xchg
mov
jg
or
xor
xor
stos
imul
fs
shll
iret
sub
lds
fcompl
andb
cwtl
inc
lahf
stc
mov
adc
jo
xor
push
sahf
inc
pop
cbtw
cmp
inc
pop
mov
test
call
pop
int
jp
sahf
sbb
out
in
mov
mov
push
mov
pop
sti
repnz
in
aas
cltd
mov
dec
mov
and
outsb
icebp
inc
andb
arpl
push
inc
in
or
popa
movsl
pop
aas
fdiv
pop
divl
pusha
fisttpll
mov
fldcw
mov
rol
sbb
mov
push
stos
arpl
shl
int
shrl
pop
cltd
add
mov
push
inc
add
mov
adc
push
adc
mov
das
lds
stos
clc
add
mov
push
mov
sbb
mull
pop
push
lods
and
loopnew
xor
xor
hlt
outsl
jg
ss
cltd
das
enter
mov
jne
push
jl
and
inc
xchg
or
adc
imul
ret
xor
out
addr16
cmp
imul
mov
dec
les
ss
fnsave
out
sbb
dec
inc
mov
imul
jnp
xchg
leave
push
call
and
xor
inc
pop
lret
fwait
dec
lret
in
pop
push
xchg
pop
in
mov
mov
sahf
jp
sub
pop
popa
inc
dec
pop
in
pop
push
stos
add
xorb
mov
ret
or
mov
loope
mov
orb
or
es
push
pop
mov
repz
aaa
fnstcw
test
scas
push
mov
pop
mov
jmp
cmpsb
xchg
mov
repnz
mov
in
fistpl
ds
adc
gs
repz
cmp
shl
shrb
dec
sub
inc
xchg
in
int
mov
add
and
mov
loope
cmp
lret
adc
jecxz
adc
sahf
cld
lods
cmpsb
xlat
pop
mov
mov
movsl
jns
aad
sbb
lahf
xor
fidivrs
mov
mov
mov
inc
dec
push
ss
push
loopne
es
aad
dec
adcb
ficoml
movsb
into
fmulp
test
cmp
xor
adc
or
std
testl
dec
sbb
iret
sub
mov
and
pop
mov
cltd
shlb
xlat
or
sub
mov
cmp
ljmp
sub
adc
sbb
add
shll
add
mov
lret
std
cmp
xchg
loop
sub
int
dec
jns
hlt
mov
rolb
fs
jmp
sti
ljmp
repnz
push
jae
negl
les
inc
inc
cld
inc
cwtl
xor
int
fidivl
xlat
inc
dec
sub
jbe
ret
daa
ret
mov
ljmp
mov
mov
pop
popf
mulb
mov
imul
mov
push
lds
xorl
jo
movsl
sub
inc
or
aaa
jmp
cmc
xor
inc
inc
add
and
dec
sub
mov
ds
pop
jl
int3
cld
jno
push
push
pop
jnp
lret
sbb
xchg
fcmovu
addr16
xchg
out
xor
add
push
sahf
std
pop
std
or
adc
out
and
cmc
scas
clc
dec
divb
xor
jo
lret
repz
add
xchg
jle
jmp
dec
ret
int3
lea
lds
xchg
lock
hlt
lods
lcall
add
mov
push
mov
cmpsl
lock
adc
lcall
or
insl
push
dec
les
push
push
xor
mov
les
test
mov
add
push
push
xchg
add
mov
mov
into
pop
mov
cmc
cs
xchg
das
jne
aas
movsl
jo
dec
clc
push
add
push
xchg
aam
and
xlat
out
into
dec
es
lea
nop
mov
mov
and
lcall
iret
sbb
pushl
pusha
xchg
repnz
mov
cmc
adc
subl
scas
pop
push
add
or
fists
ss
and
mov
jle
xchg
adc
xor
xor
dec
sar
ffreep
sbbb
cmpsl
sahf
call
sub
xchg
jbe
push
mov
idiv
jnp
mov
ljmp
add
inc
adc
in
cmc
mov
pop
or
dec
out
cwtl
lret
sub
loop
mov
insb
mov
dec
fmuls
mov
xor
out
jo
mov
clc
lods
mov
sbbl
jbe
shl
out
dec
sti
out
enter
sub
test
cmpsb
inc
test
xchg
inc
addb
mov
gs
ror
enter
pop
pop
add
push
fwait
cld
popf
adc
xor
bswap
dec
scas
adc
xor
pop
jae
dec
leave
xchg
inc
int3
jle
dec
sbb
pop
mov
or
repz
mov
mov
fisubrs
sub
jle
pop
insl
sti
inc
cmp
jno
js
push
jp
iret
xor
cmp
dec
pop
movsb
jmp
inc
movsb
jo
mov
jb
xorb
xchg
scas
dec
movsl
mov
test
lock
xchg
cmp
lds
cmc
xchg
clc
inc
push
dec
mov
call
loopne
mov
dec
sub
push
inc
sbb
jmp
call
inc
xor
jmp
ret
aaa
bound
sbb
push
pop
jl
xchg
sub
fwait
add
lret
or
notb
repz
insb
mov
xor
mov
jnp
and
sti
pop
outsb
pop
test
cmp
fnstsw
ds
xchg
add
push
lods
ds
das
ss
push
orb
cmp
push
incl
mov
popl
mov
xchg
lahf
or
lods
push
imul
pop
outsb
jne
xchg
cs
sub
mov
xchg
imul
orl
jl
inc
shl
dec
fcomps
test
pop
dec
jmp
add
mov
mov
sbb
icebp
out
lret
sti
or
movsl
or
testb
xchg
push
repnz
cmp
inc
insl
nop
mov
stos
push
test
mov
cmp
pop
dec
lret
inc
cltd
test
pop
ds
xchg
addr16
cmc
sub
cwtl
adc
sub
test
lcall
movsb
shr
add
jns
and
daa
cli
fst
ret
lock
scas
gs
xor
test
sbb
int
push
or
cli
cmp
xchg
mov
cld
cmp
cmp
mov
test
aam
mov
insb
pop
pop
mov
and
pop
xor
lods
int
pushf
fs
out
pop
out
push
cmp
cmc
and
mov
xchg
pop
inc
and
enter
dec
scas
xchg
add
mov
sub
mov
push
test
les
mov
adc
es
movswl
pop
fidivrl
cltd
push
scas
ficoml
jb
pop
xchg
and
inc
mov
clc
xor
mov
js
sbb
daa
std
push
loope
or
sbb
fucom
push
and
push
sub
inc
and
ds
push
int3
jge
mov
or
dec
or
pop
sahf
mov
ja
sub
out
pop
sarl
mov
fnsetpm(287
xchg
cmpsl
mov
add
sti
mov
mov
out
sub
xor
xchg
jle
lock
inc
add
add
loopne
fs
push
dec
push
xchg
add
jl
xlat
mov
dec
ficoms
stos
and
sarb
adc
mov
add
mov
shlb
pop
ja
inc
lods
push
shlb
aaa
loopne
lock
add
adc
and
xor
inc
cmpsl
push
mov
xchg
andb
mov
daa
shlb
loopne
lock
add
adc
and
xor
inc
cmpsl
push
mov
xchg
andb
mov
mov
shll
pop
loopne
icebp
pop
add
adc
sub
xor
inc
mov
inc
jae
cmpl
daa
shlb
xchg
add
out
pop
mov
xor
lahf
decl
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
and
outsb
call
and
popa
mov
dec
out
dec
mov
or
call
ds
push
mov
jp
push
mov
sbb
call
daa
mov
sbb
mov
mov
inc
in
dec
out
push
clc
outsb
adcl
push
shlb
push
testl
pop
and
lret
adc
in
push
jle
jecxz
pop
push
pop
xor
xor
push
out
adc
add
clc
adc
add
add
pop
outsb
outsl
pop
xchg
or
push
fs
std
adc
inc
sub
sub
dec
or
fadd
clc
sbb
push
ja
sub
mov
imul
ficoms
xchg
or
daa
cmp
outsb
cwtl
out
push
push
enter
cmc
adc
sbb
scas
movsl
adc
jbe
sahf
imull
adc
ret
add
mov
adc
iret
pop
jle
mov
sbb
enter
mov
pop
xchg
out
divb
inc
xlat
push
cmpsb
and
insb
or
fldcw
leave
pop
out
inc
sbb
arpl
mov
out
adc
lret
sbb
gs
outsb
call
dec
lret
inc
lcall
out
or
dec
fldl
je
insl
pop
mov
dec
mov
push
cwtl
push
mov
js
push
mov
sbb
call
ds
push
mov
js
push
mov
sbb
outsl
pop
stc
fistl
test
notl
rol
push
ja
imul
and
jecxz
add
hlt
adc
push
jbe
mov
jmp
in
add
cmpsl
xor
sahf
js
fstpl
cmp
int3
dec
mov
in
mov
fs
mov
push
fnsave
out
sbb
jns
cmp
sbb
inc
std
cmp
mov
mov
ds
iret
ss
out
das
scas
fcomi
adc
pop
adc
in
imul
cmpsl
jne
inc
push
jb
call
lds
mov
ret
mov
in
sarl
mov
dec
pop
jle
ret
jnp
pop
lahf
mov
cmp
mov
ficoms
adc
mov
adc
dec
mov
cli
sahf
pop
insb
inc
ds
dec
repz
sarb
popf
mov
rclb
mov
or
dec
bound
mov
xchg
push
add
rolb
mov
jno
mov
push
adc
rorb
push
lods
mov
jbe
push
dec
jne
or
dec
jl
cli
popf
imul
ret
cli
jno
push
cmp
dec
jle
lcall
sarl
cli
jno
insb
sbbb
or
int3
ss
jb
or
sbb
fildl
in
data16
icebp
or
mov
data16
ds
mov
into
fst
leave
je
sbb
xor
adc
sahf
ljmp
cmp
cmp
xorb
add
mov
mov
mov
adc
popa
pop
insl
out
int
ja
sbb
push
aad
inc
push
jne
enter
sub
sbb
jl
push
adc
push
cld
xchg
lods
sub
push
subl
sub
push
jbe
call
sarl
mov
add
mov
mov
loopne
add
push
adc
dec
xor
fstl
sub
mov
cmc
mov
cmp
daa
das
out
sti
outsb
aam
mov
pusha
pop
mov
mov
in
mov
in
decl
or
cld
mov
cltd
xor
jne
add
dec
pop
mov
mov
fbld
jno
and
idivl
sbb
xor
idiv
out
sbb
mov
pop
ljmp
mov
sub
mov
sbb
sbb
addl
ret
ret
rclb
xchg
and
dec
mov
insb
int
hlt
inc
push
js
rclb
aam
cmp
add
inc
dec
push
dec
data16
insb
in
and
mov
fimull
lret
loop
aas
fmuls
pop
mov
push
and
aam
inc
ret
sbb
xor
out
or
ret
mov
xor
dec
mov
mov
adc
cmp
aam
add
insb
stc
lcall
imul
pop
stc
jno
ds
shll
hlt
cmc
pop
cwtl
imul
mov
stc
push
test
lods
negl
add
jae
jb
and
inc
jle
call
cld
jle
adc
or
cwtl
adc
sub
xor
lcall
gs
mov
jl
mov
outsl
or
xchg
cli
in
scas
ja
jle
pop
and
add
gs
sub
dec
inc
mov
cmpl
stc
adc
cmpsl
sbb
aaa
cmp
adc
lcall
lret
sbb
inc
outsb
fisubl
push
scas
adc
xchg
dec
subb
cli
mov
mov
push
fwait
xor
inc
outsb
das
dec
push
push
add
mov
inc
popa
iret
cmc
inc
lret
outsb
lea
mov
pushf
dec
int
int3
xchg
inc
inc
test
jmp
xchg
hlt
into
out
test
or
nop
or
or
sbb
sbb
push
fnstcw
dec
lods
xor
test
dec
add
sbb
fneni(8087
hlt
xchg
mov
mov
pop
mov
mov
xor
push
ffreep
xor
lret
jge
xlat
lods
pop
xor
out
sbb
fwait
or
scas
lods
sub
xchg
sbb
cld
mov
hlt
push
sub
xchg
pop
lret
cli
pop
jl
jae
ja
rcl
ret
fistpl
sti
enter
dec
icebp
les
cwtl
es
mov
sub
call
mov
cwtl
in
mov
pop
inc
adc
sti
gs
lcall
sbb
mov
mov
sbb
fdecstp
add
xchg
mov
daa
shrl
aam
or
clc
gs
dec
lock
cmc
pusha
mov
mov
mov
pop
pop
cld
rol
aas
push
cld
cwtl
sbb
repnz
popf
sbb
pop
pop
mov
call
push
cwtl
cmpl
mov
mov
mov
imul
jnp
push
jne
rcll
orl
dec
adc
pusha
int3
insl
dec
dec
xchg
test
andl
mov
or
push
mov
jno
fs
inc
shr
cmp
dec
mov
pop
movsl
in
dec
leave
rcrb
push
ljmp
mov
mov
inc
mov
shl
lret
and
and
andl
ljmp
inc
dec
ss
xor
add
punpckhdq
lahf
por
mov
inc
mov
xor
mov
mov
push
and
adc
sbb
ss
pop
inc
add
xchg
out
in
cld
jge
test
mov
push
lahf
mov
nop
and
call
mov
dec
stos
inc
in
orl
fdivrs
xchg
or
es
popf
sbb
mov
pop
xchg
push
hlt
outsb
mov
jle
repnz
dec
cmpsl
loope
andb
pop
xor
adc
cltd
out
enter
fld
sahf
dec
jae
scas
or
call
fstps
cmpsb
jmp
cs
mov
adc
leave
and
test
insl
lcall
pushf
ficoms
inc
add
imul
xchg
jmp
xorb
cmp
mov
outsl
hlt
inc
push
push
sbb
loop
dec
jmp
popa
mov
pop
xchg
lahf
es
xor
imul
adc
out
sub
pop
jmp
out
adcl
pop
in
push
in
test
enter
mov
sub
loop
jmp
mov
sbb
pop
sub
and
into
jo
jecxz
or
jg
cli
dec
loop
xchg
pop
aaa
stc
xchg
shlb
push
js
in
inc
push
cwtl
or
xchg
gs
mov
jae
pop
out
dec
sbb
int3
cmp
mov
leave
xchg
cmp
pop
lds
mov
int
or
pop
pushf
jb
xor
jns
orl
and
fistpll
and
in
arpl
repz
rcl
lds
fidivs
adc
sbb
in
mov
xorb
inc
cmp
inc
idivl
test
mov
and
pop
jmp
fistpll
lods
ja
aaa
sbb
test
rcl
stos
and
outsl
shll
das
sbb
xchg
les
adc
cmpsb
jmp
fists
xor
lret
or
pop
subb
jns
jb
jae
xchg
pop
add
pop
mov
or
mov
jg
les
hlt
das
stc
data16
inc
dec
lods
fcmovnb
jmp
cli
ret
lods
push
out
mov
sarb
xor
jo
lock
push
sub
mulb
add
inc
and
mov
enter
js
dec
or
ret
loope
adc
sub
mov
jg
cmp
jecxz
lods
lods
fldt
outsl
mov
or
jae
mov
in
cmp
mov
in
dec
jge
sbb
call
outsb
pop
loopne
cmpsb
loope
mov
pop
cltd
xor
rol
pop
dec
insb
adc
leave
cmp
stc
popa
outsl
div
sbb
dec
push
ds
addr16
mov
mov
sbbl
adc
or
adc
jae
jp
pop
jl
in
ror
inc
icebp
xlat
in
loop
cmp
cmp
xchg
cmc
repnz
push
sub
insb
leave
add
mov
int
pop
lods
insl
popa
xchg
adc
push
out
outsb
lea
add
fdivp
mov
es
outsb
inc
hlt
popa
mov
mov
lods
mov
cmp
dec
popa
xchg
gs
add
gs
dec
call
xorl
add
push
or
fcomp
lcall
push
dec
and
ficompl
cld
cli
repnz
lock
mov
shr
adc
shl
mov
cmp
ja
aas
lahf
add
pop
inc
lcall
push
mov
ljmp
and
aaa
and
xchg
xor
xor
jns
dec
lods
lcall
fnstcw
cltd
cmpsb
sub
test
or
dec
jne
loope
mov
and
fstpl
push
and
inc
in
jecxz
je
sarl
pop
pushf
cmp
int3
push
into
std
in
xchg
pushf
pusha
inc
repnz
shll
lods
mov
popa
loop
inc
pop
push
push
gs
add
add
fdivl
cs
jb
mov
cmc
adc
aad
pushl
sahf
inc
push
orb
test
out
loope
push
mov
jg
inc
outsl
subb
jnp
aad
jle
or
inc
mov
mov
dec
mov
call
xchg
subb
xor
mov
push
mov
push
pop
and
mov
pop
xchg
dec
sub
test
je
sar
and
ja
mov
call
cmp
mov
jnp
jne
movsl
aas
fiadds
inc
sub
ror
pop
push
js
cmp
xchg
popf
and
in
ret
fisubrl
js
pop
push
bound
xchg
sbb
bnd
popa
sub
loopne
mov
pop
dec
fs
cs
mov
pop
xchg
pop
mov
in
push
inc
or
or
sub
inc
pop
lret
aad
mov
jmp
pop
js
jmp
xchg
jecxz
subl
jl
cmpsb
enter
aaa
pop
lds
cmp
cmp
mov
push
xor
iret
and
pop
cmp
and
inc
pop
mov
dec
clc
lods
lock
jp
inc
scas
pushf
xchg
dec
les
add
aas
loopne
inc
outsl
or
add
or
into
rorb
lock
or
ss
pop
push
rcrb
decl
sub
cli
inc
xchg
out
mov
in
sbbb
jo
sti
xor
sub
loop
inc
ret
call
push
xchg
and
imul
cmpsl
cmp
push
jae
sbbb
sbb
int
sbbl
push
pop
insl
enter
arpl
jg
and
push
mov
loop
xchg
outsb
xor
or
movsb
cld
jge
nop
cmc
ja
xlat
clc
xchg
jnp
cmp
ficoml
add
jo
push
fmul
loop
sbb
cmp
push
or
dec
or
pusha
sahf
out
nop
fcmovu
repnz
sarb
clc
push
xchg
out
fcmovb
cmp
push
in
and
shlb
mov
fsubrs
sbb
sbb
dec
xchg
outsl
out
daa
jns
or
cmp
in
aad
pop
shl
insb
mov
xlat
mov
icebp
scas
cs
sub
test
shr
cmpsl
pop
fcoml
sbb
jp
mov
pop
mov
testl
arpl
xchg
mov
add
and
jg
xchg
pop
sub
xlat
mov
or
push
andb
mov
pop
shl
hlt
xor
jl
out
iret
adc
repz
sub
mov
dec
ret
fmull
sub
mov
lods
imull
jnp
inc
sbb
jecxz
loopne
enter
inc
frstor
jnp
cli
lret
mov
jge
jg
in
push
pop
xchg
in
mov
xchg
inc
pop
xchg
mov
and
jmp
mov
sbbl
pop
jmp
scas
inc
xchg
imul
stc
jge
cmp
jae
idivl
jno
loope
mov
lcall
sbb
dec
fistps
mov
cmp
aaa
cltd
push
lcall
es
and
roll
imul
sub
js
jnp
in
jmp
mov
pop
dec
jae
imul
insl
mov
mov
cltd
or
ds
push
or
mov
jmp
lea
mov
dec
mov
inc
in
addr16
push
ds
jbe
add
sub
push
and
testb
lods
cmp
jl
int3
mov
mov
cltd
inc
leave
daa
mov
cwtl
fisubs
shll
adc
sbb
fcoms
push
dec
jno
mov
stos
dec
nop
push
and
cmp
mov
and
nop
sbb
lds
dec
sbb
sbb
mov
dec
fstl
lret
jo
fsubs
add
sub
add
loope
push
mov
stos
push
sbb
pop
mov
popf
daa
je
lock
sbb
cmpsb
push
pop
jbe
je
in
mov
and
lods
fdiv
push
and
cmp
jnp
mov
add
cmp
mov
jmp
inc
add
test
sbb
jg
cmc
and
xor
push
xor
xchg
xor
aas
pop
pop
xchg
xchg
fwait
lcall
lret
cltd
mov
jbe
dec
push
mov
clc
dec
jle
mov
test
insb
mov
sub
pop
mov
sbb
outsb
inc
fwait
repz
lods
pop
dec
dec
cmp
pushf
fadds
cld
mov
cmp
adc
fcoms
loop
clc
test
repz
into
outsb
push
sbb
cs
sub
adc
fildll
test
pop
arpl
xor
daa
rol
mov
cli
pop
add
and
cmp
or
aad
cmp
daa
sbb
jno
mov
cmp
repz
or
push
rorb
sub
sbb
aad
repz
arpl
ja
dec
pushl
and
arpl
jae
add
jl
and
adc
push
fimuls
pop
pop
aad
pop
xor
mov
ds
lock
and
addb
or
jns
leave
mov
cmp
push
in
pop
or
sub
enter
mov
icebp
xchg
sub
mov
jg
mov
and
add
pop
imul
sbbb
mov
push
sub
push
out
mov
and
dec
inc
mov
aam
repnz
cmp
xchg
push
mov
clc
push
cmp
mov
lret
push
aad
stos
cmpl
mov
arpl
mov
aas
push
sbb
pop
mov
aaa
jo
adc
out
push
push
sub
cmp
inc
mov
sbb
add
and
insb
mov
ljmp
dec
aas
mov
test
mov
movsb
sub
scas
lods
pop
test
add
in
mov
int3
rclb
mov
out
faddl
mov
dec
sti
stc
mov
cmc
aam
inc
mov
jae
gs
cmp
xchg
fists
xchg
mov
push
pop
std
cs
add
pop
roll
add
inc
cmp
leave
mov
stos
icebp
and
pop
enter
mov
repnz
or
or
inc
je
cmp
fisubs
xchg
and
sbb
adc
je
imul
pop
hlt
cmp
adc
fwait
int3
add
cmpsb
mov
or
xor
jne
push
cmp
rcll
pushf
xor
pop
jne
dec
xchg
dec
sub
cmp
addb
mov
mov
pop
push
mov
pop
arpl
fwait
xor
outsl
movsl
dec
daa
sahf
insb
fiaddl
imul
push
dec
call
clc
lret
xchg
testb
mov
outsb
div
repnz
xchg
out
popa
cmp
pop
jmp
add
mov
pop
xchg
in
into
mov
sbb
inc
enter
push
enter
or
add
xchg
pusha
ret
xor
ror
add
adc
push
std
push
enter
outsl
jecxz
cmc
stos
sbb
dec
shll
mov
scas
xchg
sbb
cltd
mov
mov
xorb
fcmove
pop
and
jl
mov
jnp
xchg
aam
mov
enter
cmp
iret
push
jae
lods
or
lcall
sub
popa
or
imul
into
aas
or
lcall
and
or
sahf
loopne
loop
int3
jg
pusha
xchg
lcall
lods
sub
decb
xchg
cmp
leave
xor
testl
xchg
pop
xchg
cs
out
dec
xor
pop
inc
addr16
imul
add
gs
xchg
push
ja
ret
test
dec
jae
xor
and
mov
stos
inc
lahf
cmpsb
mov
and
sub
ficomps
mov
dec
xchg
jle
sub
cltd
jge
mov
mov
cli
cmp
aaa
rcrl
aaa
and
or
dec
out
lret
and
fwait
insb
enter
mov
lea
or
mull
ret
std
jmp
push
adc
sbbl
adc
in
cmp
xor
cmp
movsl
pop
imul
adc
jbe
outsl
mov
or
stc
mov
dec
pop
or
cmpsl
jno
push
dec
inc
xchg
sarb
mov
inc
hlt
loopne
loopne
mov
out
mov
add
repz
js
in
mov
inc
rcrb
jne
xor
scas
or
cli
icebp
ss
adc
jae
fcmovnb
push
pop
movsb
dec
aas
inc
xchg
mov
mov
loope
pop
or
ss
mov
mov
sti
jno
jae
lea
mov
mov
pop
imul
in
pusha
add
popl
daa
xchg
dec
mov
and
insl
mov
pop
sub
stc
aad
add
pop
xor
mov
test
or
push
int3
pop
jae
jecxz
xchg
xor
cmpsb
xor
add
test
xchg
and
roll
mov
push
jnp,pt
fcmovnu
les
sahf
or
inc
mov
mov
jbe
scas
roll
mov
xchg
enter
inc
xor
icebp
enter
xchg
add
repz
pop
inc
aas
or
sbb
xor
xchg
xlat
push
cld
fs
mov
fs
pop
push
loope
inc
repz
push
sub
push
jne
mov
scas
imul
push
sub
jecxz
imul
pusha
inc
mov
rcr
cltd
cs
test
xchg
inc
fildl
push
imul
sub
mov
les
mov
pop
ljmp
mov
insb
jecxz
fdivl
lods
insb
cmp
ficoml
and
pop
cwtl
lods
orb
or
cmp
or
je
fisttps
dec
sub
ds
xchg
pushf
cmp
std
dec
lret
ss
sub
daa
out
adc
ret
movsb
sti
insb
fdivl
jge
inc
sbb
or
mov
dec
cmp
cwtl
mov
mov
popa
in
sub
push
fdivl
out
xchg
inc
cmp
lock
cmp
in
push
push
mov
loopne
and
pop
rol
cmp
or
mov
jp
adc
add
clc
loope
jecxz
inc
mov
faddl
and
lcall
testb
xor
insb
sbb
xrelease
sbb
test
sbb
rorb
stc
les
mov
and
test
xor
repnz
mov
js
stc
in
lcall
dec
ret
outsl
lret
addr16
xor
sbb
mov
pop
incl
lods
push
out
in
ja
pushf
mov
push
or
jmp
dec
sbb
mov
sbb
cmp
fistpll
push
out
xchg
mov
and
imul
jp
mov
jecxz
jae
hlt
push
nop
pop
sahf
mov
lahf
test
mov
and
and
rorl
insl
or
sbb
outsb
repz
setae
mov
je
jle
mov
mov
imul
cmp
adc
nop
hlt
mov
jnp
ret
push
jle
xchg
test
and
sbb
xor
xorb
xchg
adc
and
gs
rcrl
inc
std
pop
xlat
imull
xor
mov
or
cmc
adc
int
lods
out
mov
mov
rcl
popf
push
mov
jmp
iret
inc
pop
mov
adcb
sarl
xorl
jp
call
ds
push
mov
js
push
mov
sbb
call
ds
push
mov
js
push
mov
sbb
call
ds
push
mov
js
push
mov
sbb
call
ds
mov
je
into
aas
leave
mov
xlat
popa
out
notl
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
nop
xlat
cmpb
or
sbb
test
mov
push
call
pusha
fcoms
or
hlt
lock
loopne
adc
and
jo
pusha
fcoms
mov
rolb
inc
adc
fildl
inc
jmp
mov
or
in
loope
mov
leave
dec
fistps
repz
fsubrs
daa
fcomp
adc
jne
lea
xchg
sub
pop
movsb
shrb
test
or
lods
lea
mov
jmp
xor
sub
cmp
test
adc
out
mov
cmp
push
enter
or
nop
call
cmpsl
mov
test
push
call
add
inc
pop
mov
jmp
ret
cmp
pop
popf
das
dec
loopne
or
imul
or
add
pusha
daa
lods
call
pop
and
das
dec
sti
push
or
movsb
push
test
rol
ja
xorb
pop
push
sub
adc
push
loopne
adc
add
cwtl
and
push
les
jo
pusha
mov
jp
cmp
dec
out
mov
scas
pop
lahf
and
out
gs
inc
cld
gs
xchg
mov
insl
hlt
jns
imul
dec
mov
movsl
xor
int
out
dec
in
and
cmpsl
mov
or
negb
jnp
or
js
dec
loopne
adc
and
jo
pusha
fcoms
or
js
dec
loopne
adc
and
jo
pusha
fcoms
stos
fbstp
icebp
shrl
push
and
mov
aad
mov
or
loope
xchg
pop
jno
adc
jl
xchg
pushf
cmpsl
adc
roll
mov
mov
lahf
add
or
adc
mov
jne
mov
inc
lods
xchg
popa
scas
inc
mov
and
push
fsubr
or
jbe
dec
cmp
pop
outsl
cmc
insl
imul
sub
sub
or
inc
dec
ja
dec
xchg
xchg
es
xchg
jl
popa
divl
sub
push
add
aaa
dec
mov
and
lcall
scas
xchg
js
pop
daa
fcomps
jge
jno
inc
jmp
addr16
insl
enter
std
scas
mov
and
fld
flds
imul
push
inc
push
imul
fadd
orb
push
mov
add
out
out
jg
pop
cmp
shrl
pusha
or
jg
xchg
jle
scas
adcb
and
sub
xchg
jo
jno
rcll
mov
scas
aaa
daa
mov
sub
scas
xlat
fisubrl
stos
clc
lock
cmp
testb
arpl
and
das
scas
push
add
push
daa
aam
xor
push
push
inc
enter
mov
add
cmp
sti
enter
movsb
xchg
pop
pushf
xchg
inc
pop
sbb
xor
insb
popa
lret
and
call
sbb
xchg
cmp
pop
cmp
mov
out
out
loope
out
int3
dec
xchg
ret
dec
dec
cld
jl
push
xchg
in
ret
ds
jbe
mov
outsb
mov
pop
aam
jecxz
xor
test
rclb
test
push
shrl
iret
xchg
daa
mov
xor
sbb
dec
out
pop
jle
inc
pop
pop
mov
inc
mov
jb
arpl
aam
and
es
enter
and
inc
call
popf
jl
push
enter
lcall
mov
int
pop
mov
call
mov
mov
scas
push
lods
rcrb
pop
add
test
cmp
sti
daa
fdivrp
fdivr
cmp
mov
mov
sbb
testb
lret
sbb
sbb
popf
out
mov
aas
adc
adc
or
dec
test
pop
dec
cs
data16
adc
insl
insb
jmp
mov
lock
sarl
stos
xor
test
mov
out
xchg
dec
push
push
sahf
fisttpl
js
cli
xor
shlb
sub
mov
inc
test
call
mov
mov
iret
dec
testb
add
stos
insl
and
inc
movsl
les
and
inc
pop
jnp
jne
test
xor
add
std
popa
sbb
xchg
mov
cltd
jo
or
and
out
das
imul
pushf
xchg
mov
in
add
movsl
xor
pop
outsb
stos
dec
mov
lods
xchg
dec
jae
dec
cmc
push
lcall
std
push
inc
xor
mov
push
or
jae
loope
or
and
decl
pop
jecxz
mov
enter
es
mov
cmp
mov
pop
sbb
mov
adc
sti
pushf
fcompl
and
fisttpl
lds
mov
test
add
ficompl
pop
cli
icebp
xor
movsl
call
xchg
push
cld
sub
xor
notb
scas
pop
and
push
push
xor
dec
sti
stos
rcrl
bound
mov
jb
jae
dec
scas
out
jge
mov
dec
mov
popa
insb
mov
stos
adc
and
aaa
sub
arpl
xchg
mov
adc
aaa
test
sbb
inc
pop
lret
inc
loopne
and
sbb
lcall
adcb
lds
xchg
lds
and
popa
fsubs
loop
pop
inc
jg
cmc
push
in
adc
fadds
sbb
pop
addr16
and
aaa
push
cmpsl
cltd
test
add
inc
sbb
in
icebp
ret
pop
push
add
push
pop
in
and
hlt
in
fisubl
sbb
jle
fdivrs
ficompl
cmp
pop
xchg
mov
insl
and
inc
frstor
xchg
js
aad
aad
out
mov
pop
fmull
mov
push
mov
popa
jp
xchg
test
pop
das
sbb
jo
fwait
in
int
sub
mov
inc
sahf
repz
jl
fistpl
out
cmp
mov
sar
jne
cmpsl
ret
subl
int
push
cmp
inc
push
mov
scas
sbb
jne
cmp
stos
outsb
pop
pop
mov
fisubs
lea
dec
int
imul
mov
scas
imul
sub
sbb
pop
sbb
lcall
rclb
xchg
inc
ret
scas
neg
xchg
aam
sti
mov
stc
and
push
flds
push
les
mov
pop
loope
in
adc
sbb
xor
mov
cmpsb
push
mov
outsb
jecxz
pusha
mov
push
xor
fisttpl
inc
inc
fsubrs
aas
mov
xor
pop
repz
mov
in
mov
lahf
push
hlt
adcl
jns
cmovbe
fildl
sub
call
jno
cmp
enter
or
adc
in
cmp
add
aam
jp
rcll
pop
add
add
mov
repz
clc
cltd
add
sbb
cltd
out
xchg
loopne
xor
mov
fmuls
mov
cmp
push
aam
or
push
inc
push
add
sbb
dec
fs
add
addr16
leave
or
sbb
push
mov
ud2
notl
enter
push
js
std
or
in
xchg
adc
mulb
mov
mov
push
fisubrl
and
sub
aad
mov
movsl
movsl
pop
sbb
clc
push
or
jmp
bound
sub
rcr
add
xor
jg
das
ljmp
lds
inc
jnp
jne
adc
inc
pop
ss
adc
xchg
push
movsb
arpl
jl
xchg
dec
test
mov
lcall
insl
push
xchg
cmp
cmp
pop
js
fcmovnbe
sbb
test
fnstcw
adc
orb
stos
add
mov
inc
mov
lret
stos
fimull
hlt
fdivrs
jecxz
mov
inc
mov
jp
add
cmp
adc
xchg
cli
adc
shll
test
xchg
push
cmp
leave
jae
pop
xchg
ljmp
lock
arpl
call
and
std
ja
aad
jmp
push
test
xchg
das
ja
mov
dec
jns
test
movsb
ds
fdivs
imul
inc
loop
push
mov
ja
cmpsb
rcrb
inc
xor
movsb
in
stos
notb
mov
shrb
popf
clc
xchg
data16
and
jg
and
vorps
lea
sahf
push
into
pop
lds
add
inc
inc
sub
adc
lcall
xchg
lret
cs
das
mov
jecxz
pushf
stos
cmp
int
inc
lods
sbb
fs
ja
xchg
mov
movsb
and
xor
xchg
lea
inc
push
out
loop
mov
push
push
outsb
inc
xchg
int
faddp
stos
xchg
push
sbb
aaa
bound
ret
testb
and
icebp
push
cld
lea
fidivl
fsub
outsl
inc
rorl
not
nop
shr
fs
push
ret
jge
inc
add
and
pop
and
fstps
cmp
enter
call
rcl
popf
jne
lods
into
ljmp
mov
pop
aam
std
pop
push
xor
js
or
test
jnp
inc
xchg
sbb
ffreep
cmpsl
test
mov
jecxz
lcall
loopne,pt
clc
movsl
and
lret
repnz
loopne
or
int
or
mov
ss
dec
and
jo
sbb
addr16
sbb
sub
fwait
and
mov
fimull
xor
gs
orb
sub
ss
cmp
mov
into
imul
mov
out
and
dec
jb
js
ret
insl
push
aas
mov
cs
add
pop
jmp
fstpl
movsb
mov
scas
or
sub
mov
push
stc
pop
adc
insl
insl
ja
xor
jmp
popa
andb
sahf
out
test
ss
in
aam
in
in
inc
xchg
in
xor
mov
xor
les
insl
sbb
outsl
mov
daa
fwait
jb
sub
lods
pusha
xchg
adc
mov
inc
rolb
jo
stos
or
into
fistl
lea
int
jmp
pop
imul
cmp
adc
fsubs
out
lods
out
sbbb
fdivp
movl
fisubrs
aad
sbb
or
sub
lret
inc
mov
xchg
jmp
enter
flds
jg
fisubs
xchg
out
mov
xchg
xor
ret
cmp
andb
push
in
ret
scas
sub
push
ficomps
pop
ds
jle
es
ljmp
dec
push
lcall
inc
sbb
cmpsl
iret
lds
mov
imul
scas
mov
das
dec
cmp
cltd
das
popf
in
mov
jp
push
and
mov
imulb
pop
pop
outsb
lret
xor
mov
sbb
jbe
cmp
jge
iret
inc
fwait
and
pop
xchg
mov
les
rol
add
or
out
adc
push
and
sbb
mov
ja
sbb
xor
loopne
push
lea
ds
sbb
pop
sbb
decb
sti
test
jle
shr
or
repnz
lea
cmc
arpl
or
cmpl
jae
aad
aaa
loopne
sbb
pop
sahf
inc
jns
mov
ss
cmc
les
aam
mov
inc
cld
ffree
fs
outsb
adc
add
movsl
push
inc
jl
fistpl
xchg
adcb
hlt
icebp
pop
stc
pop
aad
jecxz
and
ss
shll
push
add
or
pop
jne
and
dec
mov
mov
adc
push
adc
dec
sti
mov
jb
mov
cmp
push
dec
push
add
mov
inc
out
imul
adc
fldcw
and
repz
stos
scas
add
inc
inc
cmpsb
scas
inc
add
push
les
mov
lret
adc
pop
cmpsl
movsl
push
das
or
je
mov
icebp
and
add
mov
les
xor
xchg
mov
cmp
jns
add
xchg
mov
inc
jl
inc
pop
xchg
cmp
fwait
ljmp
pop
sbb
mov
jecxz
out
push
dec
addr16
imul
pop
mov
inc
mov
lea
scas
sbb
out
cwtl
int3
jge
sbb
es
xor
sbb
sahf
imul
in
xor
or
mov
add
or
jle
movl
adc
je
push
cltd
lahf
pop
inc
add
enter
fwait
push
or
push
pop
jp
cmpsb
dec
dec
stc
xor
adc
sbb
xor
add
pop
int
sbbl
push
out
mov
push
mov
lea
stc
mov
push
mov
rcr
leave
outsl
pop
mov
sub
into
sbb
adc
sub
mov
cmpsl
lcall
ret
pop
jnp
pop
push
fcmovb
mov
push
je
xchg
mov
mov
jle
sysexit
inc
inc
ret
aad
add
pop
adc
pop
pop
xor
push
dec
xor
lods
shlb
pop
and
push
mov
mov
pop
pop
arpl
fcmove
cs
inc
in
adc
sub
cmp
out
insb
fnstcw
jno
dec
mov
push
sub
mov
addr16
xlat
cli
jne
in
sti
lods
cld
jne
or
daa
jmp
and
cmp
dec
xchg
insl
add
jns
jge
scas
arpl
sub
stos
cli
pop
imul
dec
lahf
out
fs
jne
js
cmp
inc
mov
out
leave
arpl
lea
in
lret
nop
mov
sub
fdivrs
and
mov
inc
mov
and
jae
jge
fdivrp
loope
dec
mov
push
lods
mov
xchg
sub
mov
or
dec
les
pusha
repnz
cmc
nop
and
push
loop
mov
cs
mov
pop
pushf
jle
rcll
add
in
cwtl
call
popw
dec
adc
pop
inc
jmp
pop
cmp
push
jb
cmp
cmp
leave
xor
sbb
mov
movsb
enter
pop
out
mov
clc
push
lcall
gs
imul
cwtl
cld
nop
dec
and
inc
hlt
leave
jbe
xor
stc
sbb
mov
adcl
mov
dec
adc
fprem1
in
movsl
les
mov
pop
pusha
sahf
out
lahf
subl
or
lret
push
and
xor
ljmp
push
adc
hlt
pop
stc
popf
cmpsb
or
mov
repz
fdivp
push
cwtl
mov
mov
dec
mov
xor
mov
dec
pop
dec
repnz
inc
bnd
lds
inc
pop
daa
outsb
jmp
aas
cld
and
clc
stos
mov
xchg
adc
cmp
add
out
mov
loope
orb
mov
jns
ds
add
fs
push
lods
mov
dec
test
lcall
jno
sbb
xorl
push
and
sahf
adc
nop
mov
xchg
lock
icebp
xchg
jne
sbb
lret
cs
mov
mov
std
fnstenv
in
lods
aad
jmp
mov
sbb
call
add
push
sbb
jl
loop
xchg
xchg
xor
nop
mov
in
shlb
sbb
inc
mov
sbb
push
pusha
sub
dec
mov
insl
mov
scas
sbb
rolb
dec
imul
nop
push
cs
scas
jecxz
add
pop
pop
mov
xchg
jl
xchg
scas
in
cld
sub
fisubs
dec
mov
sub
into
insb
xor
pop
aam
and
sbbl
scas
dec
jns
fdivrl
jge
outsl
in
push
dec
loopne
sub
add
sbb
jecxz
pop
dec
inc
scas
and
test
adc
in
and
ja
pop
cmc
subb
inc
cmpsb
rorb
pop
imul
ret
mov
push
cmovno
pop
cmp
cmc
out
adc
mov
lahf
push
fucomi
and
and
sbb
insb
mov
xor
aad
loop
loopne
ds
sub
mov
outsl
shlb
xor
mov
cmpsb
xchg
sbb
and
xchg
pop
mov
xchg
mov
add
pop
aad
adc
xchg
loopne
dec
sub
jno
in
loop
std
lret
das
xor
mov
or
pop
mov
out
test
xchg
adc
cs
scas
imul
movl
pusha
scas
mov
add
jnp
jns
loope
out
push
mov
addr16
adcb
push
mov
adc
in
jbe
inc
push
dec
dec
or
cs
jbe
andl
cli
inc
mov
mov
adc
push
and
xor
inc
xchg
pop
int3
leave
repnz
lcall
mov
add
rolb
push
jge
xchg
clc
fwait
push
add
addr16
adc
inc
dec
ljmp
mov
push
pop
and
shrb
loop
imul
inc
and
or
mov
xchg
xor
mov
insb
adc
dec
xor
jl
arpl
enter
lret
xchg
mov
add
stos
dec
push
lret
repz
and
xchg
test
inc
aaa
bound
adc
pop
mov
xchg
enter
and
mov
xchg
cs
cmpsb
mov
pop
push
nop
sahf
pop
ret
mov
pop
mov
addr16
mov
das
sub
test
mov
sub
mov
out
test
and
push
or
stos
mov
add
cmc
mov
sbb
outsb
push
lods
add
outsl
mov
add
aam
push
cmp
dec
xchg
mov
stos
out
mov
cmp
daa
jnp
mov
loopne
mull
jb
loopne
mov
bound
out
pop
jb
sub
nop
lret
xchg
pshufw
sar
push
and
and
mov
loop
sarb
mov
push
leave
fwait
jno
bnd
aaa
jp
jmp
hlt
adc
cmp
nop
dec
incl
arpl
mov
dec
insl
sbb
push
pop
jmp
ja
ljmp
sbb
xlat
push
bound
enter
dec
jle
and
pop
jl
and
stos
outsl
lds
push
mov
into
mov
cmp
cmp
lcall
in
test
xchg
dec
dec
cli
inc
dec
adc
mov
lcall
leave
iret
xor
jnp
fldl
adc
sub
bound
jge
mov
neg
mov
ljmp
fisubl
adc
sbb
fcoms
sbb
mov
hlt
xor
das
xor
add
inc
enter
loopne
xor
sub
int3
mov
adc
rcr
and
subb
out
faddp
add
stos
inc
es
lret
out
imull
lods
cwtl
insl
stc
mov
insb
cmp
pop
mov
sub
fs
ss
cmp
aas
adc
int
xor
subl
xlat
pop
inc
int
mov
pop
cmp
and
jnp
int3
push
xor
cmpsl
sub
and
jecxz
dec
sahf
scas
inc
cs
lds
mov
scas
push
out
and
cmp
xor
and
mov
xlat
pop
lods
enter
out
into
icebp
sti
jge
jnp
and
ficoms
loopne
inc
mov
add
mov
mov
js
dec
arpl
adc
jl
xchg
testl
pop
testl
adc
push
ds
idivb
push
faddl
adc
dec
cltd
mul
dec
sbb
lret
cld
fnstsw
in
add
pop
jb
ret
mov
push
jmp
rcrl
mov
adc
test
pop
outsb
inc
aam
pushf
add
fistpll
bound
push
movsb
adc
jne
cld
mov
rol
movsb
jno
dec
aas
in
cld
mov
fistps
fisubrs
jb
nop
stc
ficompl
mov
push
insb
xchg
movsl
jle
shl
ljmp
shl
testl
icebp
mov
cmovl
lret
jb
and
imul
sub
jb
imul
and
lock
pushf
out
push
push
push
xchg
push
or
push
ficompl
pop
das
ret
cmp
test
fs
lea
cmp
and
mov
xchg
faddl
das
divb
mov
shrl
cmp
cltd
outsl
xor
dec
jmp
adc
leave
xchg
and
push
pop
test
cmp
dec
xchg
fsubs
cmpsl
sahf
xchg
and
loopne
hlt
gs
addl
pusha
or
out
jmp
test
cmpsl
fmul
addl
fdivl
inc
dec
inc
cmpsl
or
mov
fnstenv
mov
iret
fidivl
jnp
stos
adc
orl
inc
jae
insl
sahf
fistpl
cmp
subl
push
lods
cmp
into
xor
je
es
es
inc
mov
into
arpl
mov
jl
jns
int
lcall
inc
adc
ja
fmull
repz
arpl
repnz
push
pop
xchg
and
test
arpl
daa
mov
aaa
loop
imul
mov
jg
lods
cmp
push
pop
movl
mov
mov
mov
dec
in
or
je
inc
pusha
cwtl
roll
je
mov
push
stc
cltd
aas
fnstsw
into
xor
xchg
and
scas
push
ds
inc
sub
jl
mov
fisubs
bound
adcl
in
inc
mov
fistpll
push
xor
cld
xchg
sbb
iret
push
scas
cmp
pop
popa
rcl
fcmovnbe
push
sarl
movsb
jns
adc
mov
push
and
cmp
inc
lahf
pop
cmp
add
mov
push
js
iret
int3
mov
pushf
insb
or
clc
jecxz
xorl
rclb
cmc
add
out
das
imul
test
push
test
xchg
aaa
jmp
pop
in
xchg
testl
loop
jb
pushf
cmp
xchg
lcall
dec
test
roll
push
je
pop
mov
imul
fsubrl
push
dec
stc
cmp
jl
and
push
cmp
imul
jge
push
cld
enter
xchg
push
mov
mov
dec
lock
inc
push
outsl
shr
cmp
push
loopne
adc
and
jo
pusha
fcoms
or
js
dec
loopne
adc
and
jo
pusha
fcoms
jo
sbb
push
loopne
adc
mov
push
call
pusha
fcoms
or
js
enter
push
call
lcall
pop
mov
cwtl
daa
es
ss
push
jo
pusha
rclb
sbb
xor
pop
and
lock
loopne
xchg
hlt
adc
push
ss
push
jo
pusha
data16
inc
xor
mov
mov
xchg
cwtl
loopne
cmc
movb
push
das
inc
push
jo
pusha
jg
outsb
add
push
and
xchg
out
mov
cltd
fcompl
sbb
xor
and
xor
xor
cmp
stos
into
stos
out
sbb
cmc
push
dec
out
cmpsl
push
leave
push
jle
stos
in
dec
add
ret
mov
lahf
aas
jp
push
fcmovnb
or
icebp
flds
xor
push
cmpsl
movsl
pop
repnz
int
xchg
jecxz
rorb
mov
outsl
or
frstor
push
iret
xor
cltd
adc
mov
sub
aas
mov
imul
jbe
mov
insl
cltd
fwait
outsb
out
or
and
pcmpgtd
push
ret
notb
into
or
push
inc
into
jmp
mov
sarb
sti
test
pop
mov
mov
pop
out
push
das
inc
push
jo
pusha
jno
data16
dec
and
lock
loopne
nop
out
sbb
out
push
push
cmp
bound
adc
push
push
push
cmpsb
mov
repnz
out
xchg
mov
mov
sub
cmp
or
inc
inc
addr16
mov
xchg
xlat
mov
cmc
popf
push
mov
mov
inc
adc
push
jle
and
inc
xor
cmpsb
shlb
loopne
nop
testb
push
ss
push
jo
pusha
data16
inc
xor
cmpsb
shlb
loopne
nop
testb
push
sbb
pop
cmpsl
or
jb
gs
aam
pop
int3
jo
repz
scas
fistl
dec
imul
outsb
mov
in
sti
cmp
popl
stos
or
shll
out
jne
push
addb
pop
sbb
mov
mov
es
cmp
xor
aad
test
rcrl
push
stos
xchg
loop
ds
push
mov
push
mov
and
dec
adc
ror
ljmp
shll
jne
loope
js
in
xor
fmull
mov
pop
insb
bswap
movsl
push
mov
movsl
sub
mov
dec
bound
std
fiaddl
jg
fists
outsl
jo
push
outsb
mov
xchg
xchg
jmp
daa
lcall
dec
sub
sbb
fwait
lock
cwtl
or
aas
es
push
inc
cmp
enter
pushf
js
gs
mov
xchg
test
pop
jnp
in
mov
movsl
or
into
stos
dec
pusha
mov
mov
enter
pop
aaa
cmp
jmp
mov
xor
push
pop
ffree
xchg
jnp
or
popa
or
aam
bound
fnstcw
adc
add
push
loopne
add
mov
pop
adc
mov
mov
hlt
imul
mov
mov
mov
mov
shll
inc
arpl
outsl
xchg
imul
das
mov
cltd
nop
subb
lahf
test
inc
adc
sar
xchg
cmp
push
xchg
jnp
jo
int
movsb
mov
lcall
int
cwtl
jb
xchg
out
aad
jbe
repnz
insb
ror
push
iret
nop
sbb
add
jo
mov
aam
js
shll
fwait
mov
jecxz
sbb
movsl
sub
xchg
insb
mov
test
push
outsb
rcl
cmp
inc
loopne
dec
xchg
mov
stc
add
ja
cld
in
jne
mov
lcall
add
cli
push
xor
add
shll
pushf
pop
mov
outsl
lods
push
hlt
lods
idiv
jl
jo
call
int
mov
outsl
push
fistps
call
dec
stc
mov
or
mov
xor
jbe
push
mov
inc
mov
stc
and
addr16
mov
sbb
daa
push
mov
mov
in
jo
jns
push
sbb
xor
jne
mov
jmp
push
fnstsw
and
enter
dec
add
out
or
addr16
adc
push
jbe
sub
movsl
mov
cmp
add
sbb
cmp
out
cmc
push
xchg
xchg
cmpsl
push
and
xor
lods
push
mov
data16
mov
push
push
pop
in
sbb
sbb
out
aad
outsl
in
pop
fildll
shlb
std
sbbl
sub
neg
mov
ljmp
rorb
in
aas
push
cmp
out
fmuls
inc
mov
inc
jle
jle
stc
sub
push
and
cmp
nop
mov
jg
mov
dec
sub
loop
out
movsl
bound
jle
ss
popa
jl
mov
fmulp
add
sbbl
or
bound
mov
sbb
loope
call
sub
xor
xchg
shrb
jnp
out
dec
mov
mov
aas
jno
push
xchg
aaa
adc
insl
pop
pop
xchg
pushf
xor
jnp
repz
adc
mov
push
sbb
sub
sub
divb
sub
test
jg
adc
push
lahf
into
xchg
or
jb
or
cmpsl
sub
mov
mov
hlt
test
int3
dec
inc
and
xchg
pop
imul
es
das
cmpsb
cmp
add
rorb
cwtl
sub
mov
push
mov
cld
add
push
cmp
fdivrs
push
mov
lds
dec
and
jae
xchg
jmp
jo
int3
xchg
mov
xchg
out
test
xchg
pop
bound
xor
shlb
ja
mov
and
mov
daa
mov
ss
cmc
sub
fmulp
adc
aaa
rep
lea
fwait
jle
jl
imul
rcll
push
sahf
rclb
in
mov
mov
or
pop
int3
ds
idivb
push
fmuls
add
imul
lahf
aam
int
ret
mov
mov
pop
shrl
mov
cld
arpl
lods
dec
sub
mov
jne
cmpsl
pop
mov
rcrl
xorb
push
mov
mov
pop
cwtl
arpl
mov
dec
sbb
pop
mov
jne
mov
pop
jmp
lahf
data16
xchg
jp
and
cmpl
dec
jmp
cwtl
xchg
cmp
xchg
imul
push
leave
loop
cli
push
or
push
scas
jb
mov
xchg
xchg
pop
xchg
ret
orl
and
cmpsb
dec
and
fisttpl
mov
dec
push
inc
xchg
aaa
ret
xchg
stos
push
xor
mov
mov
adc
push
dec
dec
xor
outsb
lret
fldt
mov
push
outsb
push
leave
mov
adc
add
dec
jp
push
int
lahf
les
jle
pop
mov
adc
adc
gs
shll
not
pop
mov
test
dec
and
sbb
add
jg
xor
std
xorl
insb
lret
call
cmp
in
pop
inc
jns
fcoml
mov
fmulp
and
scas
loop
insb
cli
adc
movsb
or
and
lcall
addl
pop
pop
adc
mov
and
and
out
cld
ja
cmp
mov
jecxz
stos
push
push
and
pusha
lods
sbb
or
sbb
add
gs
ds
jnp
lock
dec
mov
add
cmp
xchg
pusha
jne
push
insb
dec
sbb
popa
and
inc
stc
scas
xor
mov
mov
sbb
bound
jle
mov
scas
stc
pop
sarl
pop
cs
inc
xor
push
insl
outsb
lcall
out
cmp
inc
push
pop
mov
adc
xchg
fwait
or
ss
ss
xor
testl
dec
pop
fs
fmul
notb
push
pop
adc
ljmp
sbb
sub
jno
es
cmp
nop
push
js
cld
sbb
shll
mov
insl
jp
xchg
xchg
mov
xor
dec
adc
gs
rorl
hlt
or
pop
scas
movsb
dec
enter
outsb
fiaddl
popa
xchg
and
add
xlat
cmp
mov
lock
sbb
inc
imul
ja
mov
stos
stc
mov
mov
xchg
push
sub
repnz
fs
stos
sbb
xor
or
jbe
pop
jg
xor
adc
add
xlat
dec
in
dec
daa
inc
jae
xchg
adc
xchg
aad
cmpsb
inc
pop
cmc
cmc
add
loopne
cmpsb
and
scas
cmp
test
sub
rcll
popf
scas
jbe
jne
push
lret
adc
xlat
cmp
sbb
xor
mov
jbe
es
sbb
xchg
out
push
pop
mov
mov
sbb
loope
push
cld
cwtl
mov
xlat
and
testb
popf
or
xlat
and
jo
out
test
nop
sbb
xlat
xchg
ds
mov
repnz
fnstenv
or
jle
mov
js
xlat
sbb
inc
imul
inc
and
jle
hlt
push
jne
popa
sbb
outsb
fcoml
scas
mov
jmp
push
jge
xchg
cmp
sbb
out
subl
inc
pop
jo
inc
out
lock
mov
inc
push
cltd
clc
imul
mov
dec
xchg
mov
test
add
add
pop
sti
sbb
frstor
shll
xor
in
aaa
inc
dec
cld
jle
dec
sub
sahf
cli
adcb
add
mov
test
cmp
cmp
imul
push
xor
aam
popf
push
pop
stos
js
xor
cmp
add
jb
shll
nop
arpl
lea
rolb
ficompl
dec
mov
mov
xchg
cltd
and
and
movsl
fmulp
out
pop
mov
rclb
jl
loopne
push
ljmp
pop
hlt
mov
add
bound
in
popa
jnp
arpl
fwait
jg
sbb
out
mov
push
push
lahf
pop
jae
mov
cmp
add
ljmp
pop
mov
fisttpll
jmp
cmc
dec
inc
xchg
mov
sbb
xlat
adc
pop
sub
and
or
cmc
cmp
aas
jmp
test
pop
jmp
push
out
ljmp
or
or
or
and
repz
mov
js
mull
mov
stos
popa
inc
mov
adc
fsubrs
push
and
dec
or
out
shl
jbe
pop
jp
test
pusha
or
and
and
aas
rolb
pop
daa
add
cltd
inc
loop
cld
loopne
mov
iret
sbb
out
jb
rcl
sub
pop
mov
push
jnp
cmpsb
and
add
mov
mov
fsubs
push
pop
adc
ja
dec
push
jmp
lods
sti
mov
sub
bound
int3
mul
pop
enter
das
cmp
push
push
or
push
adc
out
in
adc
imul
xchg
add
pop
aaa
add
xor
mov
divb
mov
add
dec
mov
neg
test
aam
jmp
mov
ds
rorl
xchg
push
adc
scas
adc
xchg
sub
dec
scas
inc
testb
lods
mov
dec
es
jb
cwtl
insl
sbb
mov
jae
test
xor
inc
fisttpl
in
insb
mov
movsl
xchg
inc
add
stos
and
jne
aad
xchg
adc
cmp
aad
dec
jno
clc
in
xchg
outsl
ljmp
jbe
xor
dec
sbb
push
cmc
pop
adc
pop
jle
xchg
loop
push
push
movsl
inc
xchg
jo
jle
mov
xor
mov
and
pop
leave
cmpsl
push
outsl
rclb
cmc
leave
or
mov
adc
xlat
pop
retw
jb
pop
je
mull
sub
pusha
fidivrl
inc
jmp
mov
data16
shlb
add
mov
jle,pt
lock
mov
loop
adcl
ret
pop
cmp
int3
popa
cmc
and
jno
in
sub
mov
mov
js
aas
mov
bound
loopne
push
push
inc
arpl
cs
jb
cld
or
or
lods
mov
pop
popf
jg
and
hlt
add
push
je
stos
inc
pop
jmp
loope
and
imul
hlt
outsl
fdivrp
mov
jge
stc
or
xchg
or
imul
add
rorb
js
xor
xchg
arpl
aaa
pop
xor
pop
scas
daa
jle
fscale
ret
mov
out
arpl
push
sub
or
sarl
or
daa
cmp
idivb
mov
repnz
fcomps
add
cmp
mov
scas
cli
out
iret
shl
jae
mov
lds
movsl
daa
je
je
jmp
fnsave
xchg
mov
aad
mov
mov
lods
imul
mov
pop
movsl
mov
pop
subb
ljmp
dec
filds
sbb
leave
pop
pop
dec
push
jmp
mov
cmpsb
pop
cmpsl
clc
int
jmp
inc
cwtl
jne
inc
loope
aad
xor
mov
jno
xorb
enter
dec
push
nop
lock
jno
mov
sub
addr16
stos
cld
sub
ja
test
and
lea
pop
jnp
sbb
scas
mov
popa
scas
mov
fucomi
iret
ja
clc
pop
pop
xor
mov
ljmp
movsl
push
pop
mov
negb
pop
test
jae
inc
scas
inc
pop
inc
aam
sub
cld
mov
jb
imulb
mov
adc
jb
pop
adc
xchg
testb
lock
lahf
aaa
negl
xchg
inc
jge
pcmpeqd
cld
pop
loope
adc
xlat
push
hlt
xor
jb,pt
dec
pop
xchg
mov
push
pop
mov
inc
mov
add
repz
and
ja
fwait
int
push
push
ret
int
int3
inc
sub
shl
push
in
add
in
push
lahf
out
or
clc
out
xchg
jns
add
xchg
push
xorl
xor
jmp
mov
and
mov
call
je
fld
imul
add
imull
jo
adc
push
lods
xor
out
in
scas
out
adc
add
dec
fwait
rcl
and
in
cmp
movsb
and
lret
pop
jns
movsl
js
scas
stc
aaa
rcr
syscall
lods
stos
test
sub
lods
or
xchg
jnp
mov
mov
jbe
call
sub
sub
js
sub
sub
dec
mov
and
and
lret
scas
add
es
daa
mov
mov
add
inc
add
jmp
sub
mov
and
pop
lods
lahf
aas
out
xchg
jne
imul
rep
loopne
xor
adc
or
or
fmull
dec
pop
mov
sub
cmp
lea
hlt
pop
gs
in
sub
nop
cmc
enter
sbb
lahf
push
scas
fdivp
clc
stos
push
xchg
xchg
inc
in
cmp
loop
scas
push
sbb
je
sub
pop
test
xchg
xchg
cmp
lret
loope
cmp
adc
iret
dec
pop
add
sbb
sub
out
adc
jns
stos
loop
mov
cmp
xchg
imulb
ljmp
ljmp
sub
shll
movsl
mov
ret
mov
pop
inc
pop
in
inc
in
pushf
rcr
inc
jno
xchg
scas
ja
sub
and
add
lods
and
sbb
pop
inc
ljmp
enter
xchg
lock
jp
ficoms
mov
jb
mov
pop
in
shlb
clc
jnp
and
and
xchg
negl
add
add
flds
dec
loope
add
cmpsb
stos
xor
or
sbb
mov
mov
es
imul
or
mov
popa
out
jnp
lret
xchg
pop
or
cwtl
sti
push
fdiv
xor
xchg
es
mov
xor
cmp
cmp
inc
xor
mov
and
dec
push
pop
mov
adc
ljmp
leave
ja
pop
leave
and
lcall
xchg
dec
xchg
rcrb
xor
dec
roll
dec
jo
inc
sub
and
jae
cmp
jbe
push
lret
mov
xor
add
pop
xor
sbb
dec
and
mov
loopne
imul
and
xor
push
cltd
mov
pop
shrl
push
pop
adc
cmc
xchg
cmpsb
xchg
roll
cs
mov
xor
aam
fwait
ret
out
ss
test
inc
and
bnd
test
inc
cltd
daa
xchg
imul
lods
push
gs
pop
stos
mov
xchg
sub
cld
out
das
lods
cmp
lods
jns
pushf
sbb
jmp
dec
jmp
aam
mov
loop
xor
ss
and
push
pusha
push
je
cld
movsl
pop
push
negb
sbb
fbstp
fwait
add
insb
push
push
mov
xchg
cmp
pop
jbe
popf
shll
aas
sbb
adc
loope
mov
sahf
dec
outsl
xor
stc
or
shlb
lods
xchg
pop
pop
pop
call
dec
mov
or
loopne
inc
push
mov
outsl
dec
sti
in
test
mov
add
sbb
or
xchg
call
pop
rol
testl
dec
imul
cwtl
and
insb
add
cs
sub
jl
sbb
push
xor
cwtl
pushf
jl
add
inc
cmpsl
lcall
lahf
and
xchg
xchg
mov
dec
inc
lret
cmpsb
dec
cmp
stc
and
push
int
jle
bound
inc
ja
insl
xchg
add
sub
fadd
push
push
cwtl
rolb
repz
xadd
leave
repz
dec
cmp
imul
adcl
aam
adcb
mov
or
jecxz
adc
push
push
add
pop
sub
enter
inc
jbe
out
mov
int
inc
mov
mov
cli
out
data16
inc
fidivrs
cwtl
lcall
pop
mov
inc
mov
pop
clc
adc
fstps
sbb
mov
jecxz
mov
push
dec
sbb
dec
jno
test
lsl
adc
imul
jle
mov
jg
ja
sbb
lods
gs
adc
jo
mov
fildll
xchg
bound
sbb
fs
jle
jns
push
mov
scas
xchg
outsl
fs
mov
sbb
out
movsl
ds
sbb
sub
push
clc
loopne
rclb
je
iret
dec
in
sub
sub
inc
into
cmpl
inc
xor
sbb
insb
xor
sarl
lret
mov
icebp
jmp
cltd
frstor
cmp
fistpll
adc
mov
inc
cmpsb
int
popa
jecxz
and
sti
call
sti
adc
std
or
jae
jbe
lods
addr16
repnz
fsts
test
push
fwait
icebp
xor
pop
int3
out
cmc
sub
enter
popf
or
or
jo
add
mov
mov
xor
cmp
cmp
mov
adc
sub
xor
add
lcall
shr
in
loop,pn
frstor
cmp
arpl
mov
jnp
dec
das
jne
mov
jne
ret
call
mov
xor
in
mov
call
sbb
jle
das
sub
jb
out
cld
push
test
pop
pop
cmc
xchg
nop
cmp
mov
mov
dec
aas
cmp
inc
jae
sbbb
sarb
pushf
push
cltd
fwait
scas
add
outsl
and
mov
rcl
cmp
adc
es
notl
lea
mov
push
xor
enter
pcmpeqd
int
dec
adc
mov
mov
jns
test
jbe
mov
pop
jae
lock
cmp
jb
push
dec
je
jne
push
sub
or
gs
ret
mov
and
add
adc
hlt
cltd
dec
sub
stos
data16
subb
ja
loopne
dec
jmp
mov
lret
mov
les
bound
lods
lret
add
push
jae
pop
in
lahf
inc
or
adc
dec
loope
fnstcw
orl
ljmp
shl
ficoms
add
fwait
mov
out
pop
test
push
jo
insb
rol
ret
xor
fs
jmp
outsl
sub
xchg
leavew
cmp
mov
shlb
test
cwtl
inc
add
and
repz
pushf
add
and
cwtl
mov
mov
repnz
das
inc
inc
sbb
lods
mov
pop
pusha
add
jne
xor
xchg
xlat
xchg
cmp
pminsw
xchg
xlat
int
add
repz
cmc
stc
cwtl
mov
sbb
dec
out
stos
dec
enter
fstps
popa
clc
sbb
dec
push
push
stos
popa
sub
mov
lea
loop
dec
sbb
adc
fdivr
or
mov
clc
lea
mov
xchg
jbe
out
cmpsl
cmpsb
cmc
repz
sbb
in
out
sbb
add
movsb
and
ror
movsl
divps
movsl
jg
rcrb
dec
and
sub
mov
mov
jp
mov
in
dec
mov
sub
sti
jl
mov
sub
call
adc
or
inc
mov
cmp
xchg
lea
jne
out
dec
add
pop
les
daa
push
mov
cld
das
jo
pop
mov
mov
clc
mov
adcb
add
mov
mov
aaa
out
xor
pusha
aas
mov
aam
mov
lahf
imul
sti
cwtl
mov
cmp
cmp
int3
clc
xor
ja
push
sub
bound
loopne
dec
sbb
mov
fcompl
cmpsl
mov
push
cli
pandn
push
and
in
jb
add
and
sbb
sahf
rorb
shll
scas
mov
mov
push
jae
xchg
push
sbb
dec
in
cli
xchg
jge
xor
jbe
xchg
clc
lret
inc
shrb
cltd
dec
pop
testb
in
call
cli
outsb
mov
andl
xor
dec
and
rorl
lret
loope
pop
pop
stos
mov
pushf
or
popf
shll
js
int
lods
or
out
cmpsl
xchg
ljmp
lds
fcmovnbe
fiaddl
adc
push
pusha
data16
inc
xor
cmpsb
shlb
loopne
nop
testb
push
ss
push
jo
pusha
data16
inc
xor
cmpsb
shlb
loopne
nop
testb
push
ss
push
jo
pusha
data16
inc
xor
cmpsb
shlb
loopne
nop
testl
pop
jo
pusha
adc
xor
loopne
rorb
sub
xchg
xchg
xchg
sbb
cmp
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
testb
jle
sbb
jle
pusha
cmpsb
repnz
dec
inc
sahf
jbe
data16
push
out
sbb
fisubs
pop
cs
jb
push
out
xchg
outsb
xchg
dec
cmpsb
mov
jbe
mov
push
fidivs
xchg
fadd
mov
out
xchg
push
xchg
dec
cmpsb
lea
adc
xchg
push
pushf
imul
cltd
addr16
push
outsb
test
stc
enter
and
jecxz
shr
fidivrl
lret
adc
sahf
nop
mov
push
adc
ret
out
mov
jb
add
ljmp
imul
add
mov
idivb
call
mov
fwait
out
pop
stos
push
leave
repnz
loop
inc
inc
sti
cmp
out
xchg
outsb
xchg
lea
add
into
stos
shll
cmp
jae
sbb
mov
sub
cmpsb
mov
leave
ret
inc
mov
pop
nop
lock
and
jnp
lea
stos
inc
pop
data16
jae
mov
daa
gs
js
push
testb
lcall
cmpsb
js
xor
call
push
in
in
ss
dec
push
mov
jbe
adc
add
mov
push
jmp
mov
jne
xor
addr16
dec
les
xchg
pop
fimuls
loop
rcrl
fldcw
cld
xor
jne
insl
mov
jbe
lahf
inc
xchg
jg
pop
subl
dec
cmpsb
mov
jbe
data16
push
out
push
fidivs
into
es
cs
push
testb
jle
outsb
xchg
dec
cmpsb
mov
jbe
data16
push
out
push
fidivs
into
es
mov
mov
add
fstl
std
popf
mov
fst
rolb
push
loopne
jo
cmp
stos
sti
jae
movsl
xchg
int
adc
imul
mov
or
push
cmp
call
pop
outsl
pop
xor
push
jb
ljmp
mov
mov
jle
insb
xchg
jg
cmp
cmc
cwtl
insl
inc
pusha
dec
cltd
dec
inc
add
test
jne
adc
pop
daa
mov
lahf
into
jbe
dec
pop
jmp
jmp
orl
icebp
mov
stc
sbb
pop
lret
xchg
cmp
mov
xchg
movsb
decb
xor
js
pop
sbbl
add
or
lods
sbb
push
jne
cmp
add
inc
inc
aam
fidivs
lds
into
pusha
arpl
push
mov
test
xchg
cs
in
push
and
push
imul
sbb
sbb
sbb
inc
dec
jbe
adc
and
pop
xchg
fadds
arpl
icebp
cmp
push
xor
cmpsb
mov
ret
das
xchg
cmc
fstl
xchg
subl
subl
or
aad
xchg
shrb
dec
jmp
data16
repz
lea
add
xchg
mov
jbe
cmpsb
repz
cli
cmc
mov
sub
movsb
out
stos
aad
push
fcmove
cmp
sub
cmpsl
mov
pop
xor
scas
lahf
mov
or
push
and
fwait
xchg
sti
aad
mov
out
fisubrl
push
fwait
jmp
jno
dec
add
and
push
das
mov
adc
andb
sbb
data16
outsb
add
adc
dec
jb
inc
xchg
out
push
movsl
push
addb
lock
adc
lods
sub
mov
pop
das
lahf
cmp
mov
dec
sub
add
mulb
dec
inc
lock
je
xchg
lret
mov
loop
divb
mov
daa
add
inc
outsl
adc
addr16
mov
cmpsb
ja
insl
add
mov
mov
push
add
ret
pop
ljmp
enter
lock
lea
dec
mov
das
daa
or
xor
lcall
sbb
push
and
fsubr
push
sbb
pop
sbb
and
push
cmp
sti
jno
jb
stos
popf
mov
jbe
lcall
and
inc
and
loop
jbe
push
xchg
stos
dec
insb
test
inc
push
add
mov
adcl
push
push
shl
je
mov
jge
aas
dec
sub
daa
repz
scas
cltd
stos
fnstenv
jns
sbb
jg
or
clc
ds
push
stos
push
scas
or
aam
adc
cmpsl
sub
sub
add
or
jbe
aad
mov
ret
test
mov
addb
xlat
test
insl
pop
jb
fsubrs
test
std
cmc
mov
mov
and
je
jo
push
fs
aam
jne
testl
xchg
inc
jl
loopne
mov
push
lds
or
jbe
int
out
scas
pusha
ret
adc
mov
aas
jg
mov
dec
cmp
ja
pop
data16
add
lea
movsb
fdivrs
mov
in
sub
aaa
das
mov
pop
inc
imul
in
pop
loop
pop
hlt
hlt
inc
or
xchg
les
xchg
cmove
repnz
popf
mov
mov
in
add
scas
inc
adc
frstor
push
fistpll
fidivs
pop
stos
and
sub
dec
das
repnz
ja
aam
sbb
adc
cs
stc
mov
jecxz
std
stos
lods
rcll
in
and
inc
mov
and
call
es
addr16
push
je
push
dec
mov
fisttps
dec
fbstp
xchg
mov
cmp
popa
pop
xor
xchg
aam
xlat
repz
aam
aad
mov
or
in
popl
push
andb
sarb
adc
add
jge
fcompl
sbb
mov
sbb
cs
xor
and
popf
mov
cmp
mov
dec
mov
nop
or
ljmp
clc
cmc
enter
test
ja
mov
loop,pt
cli
in
sub
adc
repnz
mov
rcll
xchg
pop
enter
inc
outsb
cmp
adc
add
cmpsb
mov
cmp
cmp
in
mov
cmp
cmp
outsb
je
push
xchg
inc
jle
push
and
pop
subl
in
enter
enter
cwtl
jns
sti
std
mov
repnz
clc
ja
jns
in
sarb
cmp
call
mov
add
mov
std
jnp
push
sub
movsl
mov
xchg
cltd
push
inc
lods
add
mov
xchg
lods
sub
jl
stos
or
or
popf
pop
adc
shl
add
ret
es
jge
jg
fs
or
imul
mov
pop
pop
int
fistpl
insl
jle
xchg
jns
xchg
lret
js
jb
push
loopne
stc
mov
xchg
cmc
adc
or
or
bound
mov
ret
dec
out
jae
or
lods
icebp
jl
fistps
mov
adc
push
movsb
jmp
mov
and
rcrb
add
pop
out
pop
jo
and
push
sbb
mov
add
stc
inc
inc
ljmp
insl
ss
fcomps
scas
scas
sub
cltd
push
xor
mov
jecxz
mov
inc
insl
cmc
sub
xor
or
sbb
das
fwait
arpl
out
pop
pop
cmp
mov
or
insb
inc
push
cld
inc
sub
push
mov
or
out
js
xchg
out
pushf
cmp
repnz
xchg
fistl
addl
sub
pop
xor
pusha
xchg
xchg
add
lret
les
push
fdivrl
sti
adc
out
pop
adc
popf
scas
mov
pop
push
mov
mov
adcl
push
mov
mov
or
mov
sub
add
loopne
adc
dec
jnp
in
ljmp
scas
data16
push
mov
push
sbb
jmp
stc
push
in
inc
inc
push
mov
pop
enter
push
mov
clc
pusha
sbb
dec
cmp
jmp
mov
in
aaa
mov
mov
inc
popf
xchg
jo
or
lods
outsl
dec
lahf
jp
mov
jbe
xor
pop
jnp
sub
or
pop
shll
add
push
jne
pop
lahf
es
dec
jg
fildl
jg
xchg
jne
fldl
cwtl
mov
dec
icebp
incb
cwtl
sbb
sti
ljmp
ljmp
inc
mov
pusha
insb
sub
xchg
sub
mov
pop
stc
cmp
paddb
dec
jae
mov
dec
jns
dec
and
push
cs
leave
fwait
test
es
xchg
push
ret
mov
lcall
cmpsb
enter
sahf
mov
mov
inc
movsb
ja
icebp
movsl
push
imul
xor
cmc
or
and
jle
jg
movsb
stos
xor
or
push
ret
into
push
sub
push
cli
mov
add
jp
dec
subb
mov
fbstp
xchg
mov
inc
test
pop
pop
repz
nop
or
xor
jnp
inc
sbb
inc
xorb
adc
flds
add
push
mov
mov
fdivrp
sub
mov
jl
cmpsl
pop
test
mov
cwtl
mov
lea
jg
filds
iret
mov
fisubs
lods
jg
ds
out
js
inc
cmpsb
test
scas
xchg
int
or
mov
jecxz
stos
fwait
push
jbe
xor
or
insl
sbb
not
dec
out
ret
ret
pushf
xchg
or
repz
mov
ret
lods
xchg
sub
daa
inc
cmpsb
dec
add
stos
pop
dec
popa
sub
sahf
das
cmpsl
nop
std
mov
mov
and
pop
lahf
mov
test
mov
in
outsb
and
cmp
dec
cmp
add
mov
fstpt
sti
ss
sbb
inc
ja
shl
insb
insb
ljmp
imul
dec
das
mov
cmp
jmp
sbb
xor
pop
sbb
bound
add
lcall
mov
xchg
into
ds
test
push
in
and
xchg
sbb
inc
sahf
mov
jae
test
and
ja
mov
or
into
xchg
dec
xchg
mov
pop
scas
movsl
xchg
xlat
xchg
push
in
sub
sahf
push
fs
xor
lret
das
add
mov
adc
inc
jg
inc
mov
movsl
fsubl
std
insb
mov
adc
lods
je
sahf
cltd
jb
push
dec
inc
test
dec
ja
mov
add
pop
xchg
sahf
aas
icebp
fsubs
movl
in
mov
es
dec
push
sub
cwtl
sbb
mov
adc
push
xchg
rolb
mov
cmpl
lcall
push
pop
popa
mov
lods
shrl
sbb
jecxz
sbb
adc
lahf
enterw
das
xor
shlb
pop
pusha
movsl
enter
mov
and
mov
loopne
rorl
dec
stos
icebp
adc
xor
imul
dec
faddl
test
cld
rorb
adc
dec
jbe
pop
ret
push
mov
clc
clc
orl
mov
jmp
cli
jnp
jnp
cmpsl
dec
lret
mov
pop
mov
in
lret
in
push
mov
ror
adc
mov
cwtl
inc
lcall
add
inc
lret
sbb
adc
cld
test
jne
jp
mov
inc
push
aaa
imul
or
repz
or
mov
push
cmp
pop
cmp
or
fidivs
dec
mov
pop
jp
inc
arpl
xor
pop
adc
nop
push
lock
mov
in
shld
sub
xor
repnz
push
mov
push
jmp
mov
iret
xchg
mov
mov
mov
lea
lea
add
pop
add
sub
cld
repz
nop
pop
inc
push
inc
push
dec
lods
loop
jb
dec
mov
dec
mov
jnp
adc
cmp
stos
mov
xor
inc
cmp
mov
es
hlt
inc
mov
imul
mov
push
and
xchg
cld
cmc
mov
rclb
mov
mov
gs
aas
pop
sub
xchg
into
mov
mov
or
scas
cltd
push
fildll
adc
dec
jb
subb
adc
xor
xchg
rcr
mov
popa
jae
pop
push
test
cmpsl
enter
xlat
sbb
adc
arpl
sbb
fcmovb
pop
mov
inc
adc
gs
xchg
ljmp
xchg
cmovo
dec
repnz
sti
cmp
out
fwait
cmp
sbb
xorb
fnclex
and
adc
fnstsw
mov
ljmp
or
lcall
cmp
jg
insb
push
push
mov
adc
btr
stos
or
jbe
jne
lahf
mov
mov
out
cltd
nop
imul
adc
fwait
jge
inc
dec
loope
push
stos
ja
jp
imul
mov
cmp
mov
scas
loop
and
sub
cmp
movsl
icebp
push
shl
dec
les
jbe
push
ds
into
sarl
pop
dec
mov
push
xor
mov
movb
add
loope
xor
jle
dec
in
and
add
int
or
xchg
ss
mov
aad
test
hlt
dec
mov
test
inc
mov
push
or
mov
fmulp
dec
nop
cli
or
lods
out
idivl
mov
dec
dec
hlt
sub
lock
icebp
inc
jl
dec
popf
andps
or
adc
mov
cmp
nop
das
mov
pop
pop
test
sbb
fcomps
test
aad
and
sarb
pop
add
popf
add
sub
fmul
sub
push
jno
jb
insl
fsts
add
or
and
sub
negl
bnd
int
daa
stc
repz
in
sbb
out
ret
mov
mov
jb
mov
push
das
jno
jmp
inc
cmp
dec
out
xchg
lea
shll
fcoms
mov
lret
loop
lds
jo
dec
and
add
jl
xchg
fnsave
aaa
pop
cmp
mov
rclb
and
insl
push
adc
xor
idivl
test
stos
xchg
ja
rol
daa
lock
mov
sbb
mov
xchg
fadd
sbb
pop
pop
sbb
push
pop
ret
sub
inc
push
jae
xchg
cmp
es
lods
jae
daa
push
mov
ds
loop
ficomps
mov
xor
fstpl
bndstx
fdivs
inc
push
arpl
sub
mov
jmp
sarl
cmpb
jg
or
lret
clc
push
inc
outsb
sbb
cmp
lcall
jecxz
popa
mov
sahf
cmp
rol
inc
push
lock
sbbb
cmp
xor
or
add
cmp
dec
xchg
mov
mov
cmpsb
cmpsb
in
sbb
jp
sbb
test
inc
daa
jge
mov
shrb
lds
pop
fimuls
movsl
popa
popf
or
and
xlat
mov
ss
ja
fcompl
cmp
sub
inc
push
clc
or
push
jbe
push
pop
sti
out
enter
sti
jne
lods
mov
les
int3
mov
repz
mov
add
test
lar
and
add
push
outsb
mov
adc
dec
xchg
mov
xchg
in
push
subl
mov
push
sbb
inc
mov
mov
inc
ljmp
adc
mov
xorb
xchg
std
xchg
in
popf
loop
lds
inc
push
fwait
jl
cmp
mov
jne
mov
sbb
sti
push
es
loopne
xchg
jge
testb
in
stos
scas
adc
jmp
mov
xor
xor
cwtl
aas
push
mov
mov
inc
fmuls
jns
mov
adc
cwtl
sbbl
add
hlt
dec
stc
xchg
ja
and
hlt
xor
dec
jmp
fcmovnbe
sarl
xchg
leave
adc
js
push
push
xchg
mov
pop
or
std
ret
push
xchg
add
jge
int
and
mov
xor
sti
jmp
and
sbb
js
aam
and
pop
push
inc
xor
adc
xchg
jmp
pop
jecxz
jo
dec
jmp
inc
mov
mov
mov
lret
push
cmp
fld
stos
js
push
or
jecxz
xchg
push
sbb
sbb
enter
nop
dec
ss
aad
fisttpll
daa
adc
in
xchg
push
out
imul
sub
imul
lds
das
dec
shlb
mov
xor
xchg
imul
xor
and
daa
jne
or
jne
cltd
push
inc
sub
movsl
sbb
in
cmp
xor
mov
in
ror
sbb
jge
pusha
cmp
outsl
leave
mov
add
jge
lds
leave
scas
dec
cwtl
cmp
push
push
out
adc
testb
dec
adc
dec
test
mov
outsb
mov
or
in
dec
int
jbe
pop
cmp
lret
adc
daa
add
and
xor
ret
cwtl
loope
int3
repz
jmp
xchg
cltd
mov
add
mov
adc
scas
inc
xchg
jge
stc
mov
push
and
and
ljmp
jbe
loopne
lock
or
mov
xchg
jl
xchg
leave
sub
dec
lahf
inc
lock
cmp
mov
mov
xor
cltd
je
xchg
mov
mov
xchg
lds
into
pop
lods
gs
xchg
dec
mov
mov
icebp
xor
movsl
stc
icebp
pop
cmp
xchg
adc
addr16
mov
cmc
adc
ror
mov
insl
outsl
shll
lcallw
inc
xor
insb
icebp
inc
mov
addr16
mov
fwait
fs
fidivl
sub
cmpsb
in
lcall
incb
or
popa
insl
sbb
sbb
and
leave
and
ja
pop
in
testl
jae
stc
xor
divl
adc
sub
and
nop
add
in
xlat
pop
or
and
rolb
pop
pop
add
adc
xor
jns
xlat
push
adc
fisttpll
jg
mov
or
adc
popa
push
out
push
add
and
push
std
push
rorl
std
imul
adc
and
fs
pop
mov
test
lds
lods
xor
xchg
add
cmp
add
ljmp
adc
out
pop
xorl
mov
adc
loopne
jns
loopne
xlat
loope
jp
mov
cmp
pop
mov
sub
xor
mov
pop
jl
scas
shl
add
push
imul
scas
clc
loop
add
and
andb
xchg
sbb
jae
fwait
adc
mov
inc
idivl
movsb
fistpl
fdivr
aam
mov
push
mov
add
mov
lods
dec
shrb
pop
dec
cmpsb
repz
in
xlat
add
pcmpgtb
and
mov
pop
inc
mov
lahf
inc
lods
loope
arpl
ret
adc
pop
sub
mov
mov
adcl
stos
sub
pop
lcall
adc
push
repz
xor
or
ljmp
insb
xor
push
loop
cmc
mov
nop
and
incl
int
push
cmpsb
pop
pop
ret
fnstenv
movsb
cmpsb
mov
or
pop
out
pop
and
push
push
pop
and
out
inc
push
push
int
fwait
nop
cmp
xor
pop
idivl
xor
xor
fisubs
in
jne
into
mov
lock
addr16
lea
inc
mov
dec
mov
loopne
lcall
pop
xchg
out
add
out
pop
xor
lahf
loope
clc
add
adc
mov
aaa
or
mov
rcl
popf
sub
jmp
push
mov
inc
loope
cmp
test
xor
in
mov
stc
add
dec
push
or
out
lcall
sbb
xor
xchg
jmp
jge
cs
mov
push
add
imul
das
outsl
sbb
scas
xchg
mov
or
enter
adc
or
pusha
mov
add
test
movsb
add
dec
mov
into
cmpsb
mov
clc
adcl
pusha
in
pop
pop
imull
sbb
cmp
lea
xor
xchg
mov
inc
jns
cld
imul
cwtl
je
rorl
dec
popa
hlt
ss
sub
loope
test
mov
in
ret
es
xor
sbb
je
mov
js
out
out
adc
cmp
xor
cs
popa
imul
dec
mov
mov
pop
add
imul
pop
push
mov
pop
int
lds
pop
sarl
mov
out
std
sarb
pusha
iret
mov
xor
das
das
mov
call
sti
mov
pop
cld
ret
lret
jmp
inc
scas
loop
push
jle
sub
xchg
xor
stos
ret
or
mov
jns
mov
mov
sub
mov
adc
hlt
pushf
xor
lock
sti
stc
jecxz
xchg
cmp
sbb
cmp
sub
jno
std
inc
sub
sbb
push
imul
paddd
pushf
push
loope
clc
mov
push
clc
mov
xor
or
pop
inc
dec
cmp
and
cltd
push
dec
xchg
lock
bound
sub
jnp
into
mov
sub
jle
jmp
stos
cmpsl
xchg
fs
xchg
ds
imul
push
pusha
insl
aam
dec
cwtl
cmp
fisttps
add
xor
lds
cmp
xchg
das
mov
repnz
lds
push
lret
inc
add
mov
fidivrs
xor
aam
mov
and
and
fisttps
bound
cmp
clc
or
lret
jg
loopne
dec
loope
xchg
sub
sbb
add
idivl
jmp
pop
out
pop
idivb
dec
jo
mov
fistps
dec
pop
imul
mov
xorb
jae
xor
inc
sub
int
insb
mov
push
imul
push
push
pop
testb
jle
outsb
xchg
dec
cmpsb
mov
jbe
data16
push
out
push
fidivs
into
es
cs
push
testb
jle
outsb
xchg
dec
cmpsb
mov
jbe
data16
push
out
push
fidivs
into
es
push
inc
jle
push
out
xchg
outsb
push
pop
mov
cmpsb
mov
jbe
data16
push
incb
fidivs
es
jb
inc
imulb
out
xchg
jle
pop
mov
cmpsb
mov
jbe
adc
leave
xor
mov
xor
sub
and
adc
inc
repz
jecxz
adc
and
push
icebp
inc
shll
and
adc
inc
repz
jecxz
adc
and
push
icebp
inc
shll
and
adc
xor
aas
jecxz
adc
ja
push
std
iret
sub
sub
mov
xor
adc
sub
sbb
inc
frstor
outsb
fcompl
stos
icebp
mov
fsubrl
mov
mov
mov
push
repz
icebp
push
mov
dec
push
test
dec
je
loop
push
gs
mov
arpl
rorl
and
push
loop
in
mov
jmp
xchg
aaa
push
in
inc
lcall
decl
pop
sahf
xorb
ret
ret
push
jmp
outsb
fidivrs
mov
test
nop
xor
mov
pop
xchg
dec
sti
inc
xor
push
and
shl
jbe
rcll
sub
aaa
add
shl
insl
adc
and
push
icebp
inc
shll
and
adc
inc
repz
movsl
loopne
jne
gs
addl
push
rcll
and
push
ljmp
jno
and
xchg
push
aam
in
std
je
ss
mov
pusha
out
add
adc
pusha
mov
and
les
ja
inc
std
push
lods
aas
icebp
inc
shll
and
adc
inc
repz
jecxz
adc
and
push
icebp
inc
shll
and
adc
inc
repz
jecxz
adc
pop
xchg
push
mov
push
clc
iret
mov
mov
adc
push
fimull
rcrl
mov
add
ret
cld
jge
pop
mov
mov
lret
mov
mov
lods
lret
jno
mov
xchg
jnp
xlat
sbb
les
lods
adc
out
enter
imul
fstpt
add
cmpsb
mov
mov
mov
shll
sub
mov
sub
enter
cmp
mov
xchg
adc
imull
and
dec
insl
jl
dec
imul
adc
adc
or
cli
popf
jne
and
cmp
pop
xor
inc
lods
lret
or
testl
sbb
shrb
lcall
and
movsb
xor
out
or
lret
inc
lret
leave
adcb
sub
sub
mov
cli
jns
jae
pushf
addr16
pop
and
fwait
cmp
and
mov
rcrl
mov
ds
fcmovu
shll
nop
aad
sbb
jne
sub
pop
cld
jnp
pop
cld
std
js
aad
sub
call
lods
push
adc
aad
aad
sbb
push
jo
out
cld
sbb
mov
jp
and
sub
in
cmp
xorb
mov
xchg
push
lahf
outsb
clc
popa
test
inc
mov
push
rcl
push
arpl
lods
jne
std
or
cmp
jns
cmp
and
pop
cld
dec
dec
pop
ja
ffree
mov
lds
adc
repz
sti
scas
daa
loopne
mov
mov
jmp
sbb
and
iret
pop
xor
and
loop
add
jle
cmp
jmp
jg
mov
push
mov
lea
mov
es
jmp
out
and
adc
sbb
out
jmp
mov
jb
jnp
jno
data16
push
dec
jl
lret
push
test
iret
pop
adc
mov
jg
out
inc
and
and
xchg
push
sbb
int
notb
sub
js
enter
xor
xor
loope,pn
xchg
inc
stos
xchg
fdivrs
and
mov
loop
test
les
scas
jg
adc
pop
adc
leave
sub
pop
cmp
scas
repnz
ss
mov
shlb
int
sub
mov
lret
jnp
jb
push
or
aas
pop
mov
xchg
mov
fistpll
pop
loop
les
sbb
jno
xchg
jge
mov
jnp
mov
psubq
inc
in
and
cld
jle
imull
pushf
jb
insl
outsl
dec
les
outsl
lahf
hlt
and
push
fistpll
inc
mov
rcll
xchg
lcall
lret
addl
loope
jnp
leave
test
mov
or
pop
adc
jmp
mov
inc
mov
cwtl
leave
sbb
sbb
mov
aad
cmc
int
lahf
in
jp
icebp
dec
js
in
or
sbb
mov
ret
mov
in
stos
daa
sarb
cmpsb
in
lea
add
inc
outsb
cli
mov
inc
roll
lret
std
inc
adc
adc
xchg
jle
stc
ds
jecxz
add
pushl
cmpb
cwtl
loopne
ficoml
out
andl
or
mov
clc
fs
mov
sbb
push
jge
mov
xchg
jg
rclb
mov
mov
movsb
cli
std
cwtl
fwait
mov
iret
fs
pop
int3
pusha
jne
mov
xchg
gs
sub
fnstcw
enter
pusha
mov
mov
add
fstpl
shlb
push
sarb
cmp
cmc
xchg
sub
xchg
pop
push
sub
mov
fldenv
jo
jge
movsl
test
mov
cwtl
inc
jo
test
xor
testb
ja
fdivr
lock
js
lcall
mov
insl
mov
or
pushf
jge
and
pusha
mov
mov
mov
int
and
pop
xchg
fs
or
dec
inc
jg
ficompl
mov
enter
xor
inc
mov
popl
mov
xchg
xchg
sarl
jne
daa
imul
xchg
jp
xlat
cmpsl
jg
add
test
dec
xchg
mov
mov
xchg
mov
mov
dec
lods
ret
cmpsb
outsl
test
jle
sub
pop
mov
sbb
stos
lret
or
add
xchg
cmp
mov
sub
pop
std
adc
ljmp
cmpsl
inc
cmpsb
mov
cld
push
inc
scas
push
lods
or
push
inc
int
stos
cmc
fiaddl
shl
incb
inc
daa
push
sbb
or
jne
pop
call
rorl
jae
mov
xchg
sbb
dec
sub
push
mov
insl
stc
pop
stc
add
jo
and
xchg
cmp
push
adc
dec
sub
out
push
jne
inc
push
ss
lcall
cltd
mov
xor
repz
cmpsb
and
sahf
inc
fbstp
mov
sbb
dec
xor
movsb
das
push
cmpb
adc
aad
or
inc
rcrl
sub
clc
xchg
mov
cmpsl
inc
ja
cmp
stos
mov
movsl
or
int
sbb
jl
je
out
pop
mov
mov
mov
shlb
push
adc
cli
push
in
lods
jno
adc
divb
sahf
add
xor
data16
or
mov
iret
in
push
mov
in
jbe
cmp
adc
mov
add
pop
sarl
outsw
fsubrl
sbb
cmpsl
pop
xor
mov
iret
push
scas
xor
test
lcall
mov
movsl
in
mov
mov
pop
push
xchg
mov
or
lods
push
xchg
hlt
das
cmp
mov
in
adc
cmpl
jae
xchg
or
or
divb
int
jp
nop
jb
or
xchg
ret
sbb
in
jecxz
out
cmc
add
ret
call
scas
fisttps
push
xlat
jns
lds
and
sub
hlt
jb
jae
adc
xchg
mov
or
dec
dec
gs
push
mov
dec
insb
pop
inc
clc
cli
and
sti
push
mov
lds
push
jmp
mov
pop
mov
mov
inc
mov
cltd
mov
xorb
xor
xlat
lahf
mov
lods
mov
movsl
insl
in
popa
aam
repz
jae
mov
fdiv
pop
push
pop
movsb
movsl
pushl
ljmp
xchg
imul
movsb
mov
push
aam
int3
mov
loopne
inc
insl
test
shrb
xor
xor
lock
imul
lahf
aaa
mov
rcl
loopne
inc
into
insb
and
lcall
or
fiadds
cmp
cmpsl
mov
aam
pop
adc
outsb
sar
mov
pop
sbb
and
or
mov
jle
aaa
or
pop
leave
push
std
sbb
cmc
sub
jg
mov
mov
repz
repnz
sbb
cmp
popa
lock
jno
ret
hlt
jae
pushf
int3
jmp
aam
fidivs
insb
mov
fwait
add
in
inc
mov
dec
repz
sbb
add
scas
mov
addr16
sbb
out
pop
mov
sahf
aas
adc
in
stc
and
jl
fdivrp
xchg
mov
insl
inc
and
mov
dec
or
lock
rcrb
cmp
cmpsl
outsl
cmp
adc
es
mov
insl
jp
cwtl
add
jge
addr16
jno
arpl
adc
lock
mov
decl
jp
mov
outsb
sub
sub
sbb
mov
adc
push
inc
push
jmp
pop
mov
jmp
adc
pop
lret
test
imul
pop
mov
hlt
cwtl
imul
fildl
xchg
arpl
jp
sbb
xlat
cli
pushf
ret
out
pop
jmp
pop
push
xchg
pop
mov
mov
sub
or
subl
dec
ljmp
pcmpeqw
inc
test
in
lea
mov
int
scas
in
xchg
aad
add
inc
xchg
icebp
test
pop
jno
mov
pop
cmpsb
jge
or
scas
xor
inc
test
or
push
add
cmpsb
repnz
mov
jbe
fdivrs
outsb
jmp
xchg
jp
repz
out
mov
jle
pop
fidivs
mov
push
mov
push
pop
and
cmp
xchg
and
jmp
add
sahf
push
imul
clc
stos
imul
xor
test
or
and
stc
das
inc
pop
dec
hlt
mov
sar
or
ss
push
insl
shll
inc
in
sub
push
sbb
jmp
out
push
test
gs
int3
jg,pn
insl
cmp
out
cs
idivl
and
dec
push
test
and
or
std
popa
sar
in
fmuls
stc
inc
xchg
int3
cmpsb
push
mov
dec
xor
pusha
push
aam
sbb
inc
dec
sub
mov
mov
ds
inc
in
ret
gs
insl
bound
aad
dec
mov
es
mov
mov
jp
pop
pop
fdivr
xchg
jl
mov
shl
jp
subb
orl
pop
push
movsl
lahf
adc
add
xor
mov
mov
call
or
lods
out
cmpsl
or
xchg
xchg
fs
jp
or
adc
das
push
test
jg
roll
rcl
mov
nop
adc
dec
pop
or
mov
fsubrl
mov
mov
xor
cmp
addl
fsts
rorb
imul
in
sti
insb
fsubrl
jmp
and
je
test
ljmp
mov
pop
shll
scas
add
pop
pusha
mov
data16
fwait
mov
jne
mov
int3
aad
lret
adc
push
xchg
je
pop
test
adc
repz
cmp
fldt
inc
cmp
sbb
xchg
push
dec
das
bnd
xor
rclb
aad
addr16
ficomps
sahf
daa
cld
lods
push
in
in
cmc
jbe
pop
mov
inc
sub
fs
stc
test
lock
inc
sub
jl
mov
mov
xchg
dec
subb
pop
or
push
sub
sbb
push
in
clc
and
and
call
add
adc
fisubl
aam
cmpsb
and
into
lcall
js
mov
sbb
mov
testl
inc
imul
lcall
popf
inc
jl
ror
xchg
xor
sub
xor
push
out
imul
push
ds
inc
jns
mov
imul
lds
pop
add
xchg
sbb
arpl
fsubl
std
scas
xor
cwtl
movd
jo
sti
ds
pop
pop
dec
push
nop
xchg
and
inc
das
stos
cwtl
cmp
pop
sbb
leave
inc
sbb
clc
mov
push
ss
stc
mov
test
mov
scas
cmpsl
xchg
mov
fsubl
mov
jp
ljmp
jmp
mov
fsub
in
mov
dec
push
xor
adc
jg
xchg
aaa
scas
mov
lahf
add
shrl
mov
push
lahf
adc
sbb
xlat
jecxz
je
pop
push
xor
mov
lret
push
js
stos
aad
or
xchg
xlat
outsb
or
mov
mov
push
cmp
lods
arpl
imul
dec
xchg
and
xchg
aad
push
fisubl
pop
int
cli
sarb
mov
mov
dec
push
iret
insl
cmp
pop
sub
or
sbb
ret
dec
and
mov
outsl
xchg
xchg
sub
in
cmp
inc
xchg
add
add
pop
arpl
cli
mov
cmc
dec
lods
pmullw
pop
jae
add
stos
sbb
fistl
roll
inc
inc
ret
or
je
sarl
lahf
jno
sub
cltd
inc
mov
dec
mov
js
jns
repnz
out
mov
mov
mov
xor
push
and
cmp
lcall
lea
das
add
jnp
dec
xchg
cmc
jmp
mov
inc
sbbl
negb
pusha
outsb
pop
dec
mulb
mov
push
xlat
jbe
test
cmp
int
sbbl
cmp
in
aad
in
aad
cmpsb
dec
mov
jp
mov
jp
mov
std
pop
push
imul
wrmsr
sub
sarl
sbb
jle
aas
stc
lret
into
shr
ss
call
dec
inc
jge
adc
xor
xchg
fldcw
icebp
mov
jl
arpl
inc
dec
out
iret
out
std
dec
push
fyl2x
push
sub
cs
pop
in
jl
iret
jmp
xchg
inc
fstpl
inc
fwait
jns
adc
jp
and
fidivs
inc
pop
dec
mov
mov
cld
mov
xor
xchg
lret
aam
xor
sbb
or
mov
fildl
jnp
adc
push
xor
xchg
pushf
iret
jae
xor
in
lret
lods
clc
or
mov
mov
push
std
imul
adc
mov
dec
mov
mov
mov
out
call
pusha
xchg
cmp
ja
mov
adc
nop
call
stos
inc
jle
fdivs
jp
imull
out
sbb
sahf
ffreep
push
sahf
mov
incb
push
push
sub
adc
cmp
pop
adc
cmp
dec
in
mov
aam
pop
add
loopne
testb
scas
js
das
dec
cmovbe
mov
jge
mov
in
stc
dec
jns
xchg
push
sti
int
outsb
jne
or
jmp
je
ds
sub
xor
insb
repz
int3
in
push
popa
inc
aad
ficoml
add
and
popa
dec
pop
faddl
push
dec
ljmp
pop
ljmp
jge
ret
push
mov
adc
jb
and
fistpll
pop
inc
sub
mov
jmp
ja
xchg
mov
push
push
pop
pop
notw
mov
push
rclb
jge
repnz
cmp
mov
lret
movsb
pop
xorb
mov
mov
in
adc
jle,pn
fwait
mov
std
jb
sub
inc
jecxz
dec
xchg
mov
call
clc
adc
jne
inc
loopne
cmpsb
mov
out
adc
inc
xchg
push
inc
xor
push
push
fs
mov
push
mov
lret
imul
push
pop
fisubs
shl
xor
xchg
sub
mov
mov
mov
sub
pop
int3
subb
push
cmpsb
or
cmp
cltd
mov
pop
int3
movsl
or
es
sub
fstpl
test
cmp
data16
aad
sbb
stos
xor
mov
cwtl
cmp
mov
mov
or
shll
ljmp
test
lea
push
test
mov
xor
dec
and
mov
jns
sbb
mov
mov
mov
bnd
shll
sbb
mov
sti
pop
mov
insb
jb
sti
mov
sub
dec
push
pop
jne
jae
test
dec
icebp
inc
out
xchg
rorb
lret
mov
pop
xchg
lret
bswap
push
adc
lahf
pop
cmp
dec
pop
repnz
xor
cmp
jecxz
or
hlt
and
es
popa
fisubl
hlt
ret
arpl
pop
nop
outsl
sahf
aam
mov
cld
adc
xchg
push
pop
mull
jb
das
in
jbe
rcr
arpl
push
and
lret
pop
add
decb
mov
mov
ret
push
cmp
loop
repz
fldenv
jns
into
mov
mov
jns
jmp
adc
add
and
and
push
dec
je
push
movsl
sbb
xor
loope
fildl
loope
xchg
ret
jmp
sub
aad
jns
pop
pop
cmp
jmp
movsb
jmp
faddl
or
fwait
shr
add
out
sub
pop
aas
mov
in
dec
mov
mov
cmp
iret
adc
dec
pop
mov
ja
or
jge
bound
mov
gs
sub
xchg
in
aaa
dec
pusha
jp
daa
mov
mov
test
xchg
lahf
lock
fwait
cmp
lea
cli
imul
xchg
sbb
mov
mov
mov
sub
movsl
stc
pop
mov
int3
lea
cli
and
aaa
dec
sbb
adcl
xor
push
stc
sbb
mov
jbe
adc
push
dec
mov
pop
jno
xor
mov
jnp
aas
aaa
mov
pop
jmp
daa
mov
pop
adc
jle
push
mov
dec
jecxz
mov
test
loop
imull
mov
dec
aas
dec
sub
mov
sbb
pop
mov
insb
sub
repnz
mov
add
mov
roll
call
call
movsb
or
insl
add
int3
bound
mov
repnz
add
or
insb
mov
mov
mov
mov
add
push
int
jp
mov
cld
out
pop
aaa
sbb
pop
repz
daa
sbb
dec
mov
jo
lds
lret
mov
fistpl
addb
mov
or
push
int
or
or
or
push
pop
or
sub
jae
xchg
mov
popa
stos
cmp
test
push
pop
inc
push
mov
out
xor
lahf
adcl
clc
clc
mov
sbb
lret
mov
inc
mov
aad
push
pop
repnz
popf
das
push
sub
xlat
cwtl
mov
out
or
lods
jnp
ss
testb
cmc
outsl
dec
mov
and
icebp
cwtl
mov
pop
dec
imul
sbb
inc
in
push
adc
inc
jmp
or
pop
gs
movlps
stos
inc
stc
inc
mov
int
in
adc
sahf
in
test
sub
out
aam
fcoml
xchg
inc
push
inc
loop
lock
xchg
cltd
push
inc
in
pushl
cmp
mov
repnz
popa
fisttpll
sub
insl
fbld
xchg
ret
push
clc
call
pop
movsl
lret
cld
loope
lcall
fs
dec
mov
shrl
dec
mov
mov
decb
or
push
stos
aam
stos
push
pop
js
scas
mov
jo
inc
pop
mov
mul
sub
jbe
inc
movb
xor
pop
push
inc
repz
jge
and
or
rorl
in
pop
test
mov
and
gs
inc
mov
mov
dec
imul
loopne
fimuls
or
jb
je
cmpsb
pop
fmuls
mov
lret
movsl
hlt
lods
mov
fimull
push
pushf
scas
setle
pop
pop
cmpsb
mov
sahf
sub
pop
sti
mov
jae
pusha
mov
jae
xor
inc
inc
push
inc
fsub
cmp
mov
and
ljmp
cmc
repz
pop
mov
shll
xchg
in
push
rcrb
pop
jb
fisubl
ret
lods
and
fwait
int
push
lahf
int3
scas
sbb
das
mov
lahf
ss
hlt
jno
adc
cmp
xchg
jae
daa
das
dec
jl
dec
jmp
push
out
stc
ljmp
mov
sbb
xchg
pushf
xchg
fcompl
cmpsb
jo
pop
pop
pop
or
mov
jne
mov
cltd
jne
push
sub
mov
cmpsl
inc
or
xchg
jl
dec
test
bswap
mov
dec
enter
jmp
cmc
in
jecxz
cmp
mov
mov
and
jp
sbb
js
push
lret
outsb
mov
jp
or
push
xor
aad
mov
int3
fadds
stos
jle
pop
stos
jae
ret
jnp
lds
jns,pn
inc
push
nop
xor
iret
fisubrl
je
pop
inc
jmp
stc
in
push
lea
int
lret
sub
repz
cmp
repnz
adc
jecxz
xorb
sarl
sahf
repnz
inc
fldenv
popf
cmp
orl
push
xor
push
mov
flds
push
or
sub
and
sub
dec
or
mov
outsb
loopne
pop
jg
inc
ficoml
lds
fsubs
push
mov
nop
mov
inc
adc
push
push
adc
lahf
mov
and
cld
pop
sub
lahf
lock
icebp
pop
cmpsl
dec
lea
cmp
add
dec
mov
ljmp
xorb
and
push
icebp
inc
shll
and
adc
inc
repz
jecxz
adc
and
push
icebp
inc
shll
and
adc
inc
repz
jecxz
pop
xor
add
xchg
and
icebp
inc
shll
and
adc
inc
repz
jecxz
adc
daa
loope
icebp
ret
shl
pushf
and
stos
mov
aam
pop
add
or
sbb
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
and
xor
clc
pop
cmp
test
mov
mov
fsub
fdiv
sub
cmp
or
sbb
push
pusha
pop
add
mov
mov
mov
ror
loopne
lock
cmp
or
sbb
push
js
push
cmpb
mov
mov
pop
dec
cmp
inc
dec
push
jecxz
pop
xchg
mov
imul
movsb
leave
mov
cmp
pop
push
mov
mov
jge
pop
pusha
imul
sub
outsb
shl
adc
mov
adc
or
adc
insb
lret
bnd
push
sub
nop
fmulp
addr16
push
cmp
loopne
mov
pop
cmp
sub
hlt
arpl
push
inc
test
pop
cmc
mov
pop
jo
or
stos
push
fcomps
shl
aad
out
pop
fisttps
and
sarb
pop
cwtl
or
mov
jne
cmp
popf
mov
mov
sahf
and
outsb
cli
std
pop
adc
xor
loop
divb
cmp
or
sbb
push
pusha
pop
imul
fdivr
enter
icebp
pop
add
inc
push
push
sub
xor
or
adc
out
cld
aad
movsl
mov
movsl
lods
pushf
ja
jnp
jl
push
pop
or
adc
inc
cli
hlt
aad
lock
mov
xchg
test
push
adc
cmp
jae
push
dec
pusha
pop
jo
cmpb
call
loopne
lock
cmp
or
sbb
push
pusha
pop
jo
cmpb
call
loopne
lock
cmp
xor
lret
pop
mov
adc
cmp
sarl
mov
lds
lods
out
xor
ja
inc
mov
push
es
loope
sub
fmuls
pop
sub
fldcw
fsubr
sbb
scas
stos
mov
xchg
mov
mov
inc
aaa
dec
mov
xlat
dec
adc
sbbl
sbb
ret
xchg
cs
mov
push
ljmp
ds
jge
les
pop
sbb
push
cld
imul
inc
xchg
das
sbb
lcall
ret
jne
push
push
xchg
mov
and
in
inc
push
and
hlt
fwait
imul
fldcw
in
fwait
push
cmp
jbe
test
dec
aad
mov
andb
test
xchg
int3
pushf
movsb
js
js
shrb
jp
ja
jecxz
mov
idivl
nop
cmpsl
jp
xlat
jnp
adc
stos
fbld
fidivl
imul
shrb
clc
pop
add
push
cmpsb
xor
add
pop
stos
into
jne
sti
pusha
pop
cmp
mov
aas
mov
sbb
adc
inc
sub
mov
pusha
push
mov
add
movsb
xchg
in
push
stos
sar
push
cld
insb
data16
xlat
dec
test
lcall
and
out
out
mov
or
lock
pop
dec
js
repnz
xor
ss
js
xchg
mov
popf
into
cltd
mov
xchg
fnstcw
dec
push
jle
dec
jne
add
jnp
sahf
lahf
jns
insl
mov
hlt
pop
adc
movsl
fldt
pop
mov
mov
outsl
sub
cmp
add
imulb
jns
inc
imul
push
addl
out
xchg
jecxz
mov
test
push
push
int3
and
call
add
sbb
or
lret
shll
lods
jnp
add
cmpsb
mov
repnz
daa
rcrl
pop
ja
lahf
and
idiv
aad
xor
xchg
mov
inc
sbbb
mulb
inc
xlat
jnp
cmpsb
mov
fisttpll
into
sub
insb
dec
hlt
sub
loope
mov
fisubrs
out
cmp
cmp
movsl
jns
jmp
insl
or
lret
arpl
and
nop
inc
mov
xor
sub
cmpsb
addr16
arpl
sbb
aam
xchg
icebp
inc
fnstenv
imul
es
cli
fists
mov
out
ret
pop
cmp
out
aad
dec
iret
add
jecxz
hlt
mov
cwtl
jb
jns
mov
mov
popl
cmp
cltd
test
imul
xchg
fisubrl
xchg
cmp
jmp
xchg
insl
xchg
out
xchg
inc
addl
cs
mov
faddl
xor
xchg
imul
fcompl
data16
pop
lcall
mov
sub
jnp
jge
aas
push
xchg
ret
push
xchg
arpl
lea
lret
lahf
fstps
ret
lods
fisubrs
mov
ss
cmp
leave
xchg
test
push
popa
cwtl
adc
testl
fists
sbb
adc
aam
mov
add
iret
stos
or
pushl
popa
push
mov
clc
ja
addr16
dec
sarb
mov
cmpsb
mov
out
adc
mov
mov
bound
jns
xor
aam
xchg
hlt
dec
ss
mov
pop
ja
add
jno
cld
jl
and
push
clc
or
popa
add
notl
fstl
loop
lock
xchg
jae
dec
cmpsl
mov
adc
xor
xor
dec
pusha
xlat
cmp
fimull
jb
loopne
cmc
popa
aad
or
addr16
dec
add
mov
xchg
imull
sbb
cmp
fcoml
shr
rol
je
rcr
add
sub
das
in
popf
dec
stos
mov
mov
incb
xchg
sbbb
push
sub
je
fcmovu
or
loope
leave
inc
sub
aas
divl
ret
cld
cmp
jle
sub
sub
imul
adc
je
fs
xlat
rorl
add
in
testl
jge
outsb
sbb
cmc
shrb
arpl
enter
xchg
add
jne
mov
testl
aas
insb
sub
into
sub
rolb
adc
mov
mov
pop
adc
xor
cwtl
inc
out
insb
cld
pop
inc
mov
sbb
iret
and
icebp
inc
imul
mov
add
push
loope
mov
dec
pushf
pop
aam
cmp
sub
mov
andl
test
incb
shll
pop
pop
outsl
pop
cmp
lret
mov
and
jbe
hlt
into
orb
popf
loope
cmp
pop
fcmovne
jle
test
sub
dec
push
stos
ftst
in
xlat
cmp
add
scas
loop
jbe
in
push
mov
jnp
divl
out
or
mov
jl
push
inc
fwait
clc
pop
push
jg
sbb
sbb
orb
dec
mov
out
sub
lret
mov
pop
aaa
call
inc
mov
xor
pop
push
popa
jecxz
rolb
dec
stos
inc
cmp
add
out
xor
fucom
jge
lods
aas
pop
test
dec
xor
sbb
xchg
mov
jo
movsb
fucomip
mov
ljmp
push
push
imul
sbb
mov
pop
xor
bound
xchg
jno
prefetch
fnstenv
loop
cmp
fidivs
pop
addr16
adc
jle
add
divl
dec
ja
dec
dec
subb
test
int3
jo
popf
jbe
fcomip
mov
stc
imul
pop
enter
sbb
add
lret
pop
gs
shlb
dec
ss
mov
out
sbbl
pop
shr
fs
fwait
jp
daa
orl
pusha
call
aaa
test
popf
dec
ds
jg
push
nop
in
sbb
jns
mov
pushf
jb
add
jmp
mov
nop
fsubr
subb
daa
ds
xor
mov
imul
fbstp
cmc
leave
fs
aam
mov
aad
mov
dec
cmp
cmp
push
daa
fmull
lahf
jae
in
jge
mov
in
xor
leave
aaa
add
and
pop
divl
rclb
mov
rcrl
cwtl
lret
movb
inc
roll
enter
je
push
out
dec
inc
in
jecxz
lret
insl
pop
stos
iret
pop
xchg
insb
std
in
mov
shrl
xchg
jge
push
xor
push
jmp
fidivs
and
ss
adc
jle
mov
fidivl
int3
adc
js
and
fstps
data16
sbb
pop
mov
xor
int
mov
sbb
push
pop
xchg
lahf
stos
or
cmp
pop
xchg
add
and
cmp
mov
mov
lea
inc
in
sbb
push
mov
inc
add
lds
js
outsl
xchg
mov
rcrl
pop
pop
stos
lock
push
push
pop
dec
cld
cwtl
cmp
mov
clc
imul
jmp
add
bound
jns
cmp
ds
stc
mov
fcoml
into
ret
add
fs
jg
inc
fwait
ret
jge
leave
inc
ja
xor
mov
adc
pop
js
fidivrs
js
pop
aam
subl
ljmp
ret
je
ret
push
mov
pop
push
fsubl
pop
pop
rep
jb
cli
add
inc
pop
mov
cmp
xchg
mov
test
gs
jbe
xor
mov
cmpsl
and
and
add
int
jp
or
pop
adc
adc
loope
adc
inc
sub
push
mov
push
hlt
ljmp
loop
movsb
ljmp
lea
mov
xor
push
cwtl
fimull
xchg
jo
stos
scas
adc
dec
insl
shlb
sbb
sub
mov
add
dec
add
xchg
mov
repnz
dec
cwtl
out
gs
addl
mov
in
sub
in
popa
sub
insl
mov
adcb
clc
jne
int3
popa
xor
mov
sarl
data16
fldl
pop
in
add
adc
xchg
mov
xchg
fwait
nop
imul
in
pop
loop
scas
cltd
jo
rorb
cmp
mov
into
mov
fildll
and
mov
push
sarl
xor
xchg
test
mov
jmp
pop
testb
mov
add
aad
shlb
stc
popa
into
fisttpl
and
andl
mov
mov
cmpsb
test
pop
xchg
and
or
fldt
dec
inc
mov
in
stos
xor
ss
imulb
mov
pop
test
fstpl
lods
enter
mov
not
push
cmc
sti
shrb
and
push
push
shrb
test
daa
ljmp
and
pop
inc
xor
pop
dec
cld
ds
sub
dec
cli
popf
pushf
scas
xor
and
mov
adcl
or
adc
ljmp
mov
movsb
dec
int
scas
das
int3
mov
jns
pop
mov
stos
hlt
inc
mov
or
xchg
and
pop
vmwrite
sub
sbb
rcll
inc
shl
push
mov
and
sub
xchg
jge
jge
mov
sub
mov
cmp
filds
xchg
ficompl
jge
xlat
sbb
mov
jne
jle
xchg
les
sbb
jns
sbb
pop
outsl
inc
jo
inc
cli
pusha
clc
or
test
dec
or
push
mov
hlt
jns
push
int
xor
stos
in
pop
xchg
lahf
sbb
dec
sbb
pop
jbe
lret
inc
lock
int3
mov
int
ja
lods
sbbb
loope
or
push
xchg
stos
inc
je
call
in
jecxz
or
cmpsl
sarb
or
ljmp
icebp
lds
cmp
push
dec
mov
mov
mov
call
mov
cli
mov
add
push
in
aas
clc
jecxz
pop
add
stos
pop
rclb
or
fstps
mov
out
les
data16
loopne
and
dec
andl
cld
sbb
or
enter
lret
ljmp
fistpl
and
xchg
dec
jo
mov
loopne
jmp
aam
pop
mov
ja
and
inc
adc
add
or
scas
dec
les
push
sarl
lcall
lock
and
cmp
push
xor
push
sbb
out
mov
lds
es
aad
cmc
mov
insl
lea
fs
ret
stos
lahf
aaa
mov
xor
aaa
cltd
imul
popf
scas
imul
xchg
mov
xor
outsl
int
add
adcl
lret
xor
push
popa
out
inc
mov
ljmp
out
lds
push
xor
sub
cmp
ror
sbb
test
cwtl
inc
stc
pause
movsl
fwait
pop
and
add
and
dec
pop
inc
jnp
in
and
icebp
pop
out
xchg
out
mov
aad
jae
rcrb
es
test
sbb
inc
sbb
xchg
push
dec
fistps
push
mov
insb
fadds
cmp
popa
xor
rorl
cmpsb
int
scas
pop
dec
in
mov
sub
mov
insb
pop
xlat
xchg
inc
sbbl
cmp
sbbl
out
or
scas
push
pop
add
and
adc
stc
cmp
jmp
nop
xor
hlt
into
xchg
jl
lods
push
jns
les
das
mov
cmp
sbb
mov
pop
lds
lret
icebp
cmp
xlat
jns
xor
mov
cltd
mov
cmp
fsubp
mov
pushf
cmovnp
lock
lds
pop
jb
jno
push
bound
and
xchg
out
xchg
inc
sub
mov
adc
xchg
cmc
scas
scas
xor
cmp
jo
adcb
je
aaa
xchg
xor
inc
pop
bound
sbb
push
lcall
cmp
or
push
flds
repz
dec
dec
cmpl
mov
shld
pop
test
dec
int
popa
lods
in
popa
test
test
jno
inc
cwtl
push
in
lods
ds
xor
mov
xor
push
cmpsb
das
into
xchg
xor
loope
stos
movsl
add
add
lods
mov
add
inc
or
inc
fnstenv
orl
dec
mov
popf
pop
jg
mov
imul
push
in
negl
dec
pop
mov
orl
xor
adc
ret
mov
mov
dec
sbb
fisubs
mov
out
push
test
sub
addl
xchg
rcl
pop
hlt
fstpt
clc
or
add
mov
xchg
movsl
enter
sbb
test
adc
dec
iret
icebp
xchg
inc
in
xchg
sti
mov
xor
gs
pop
xor
daa
lcall
daa
jmp
xchg
mov
add
pop
cli
push
cmp
adc
xorb
cs
pop
xchg
fs
les
pop
aas
int
fcmovnb
adc
push
jp
adc
imulb
lods
sbb
stos
push
js
sub
mov
mov
push
pusha
mov
jmp
or
sbb
fstpt
int
in
sbb
mov
in
pop
out
repz
rorb
scas
packssdw
sbb
fs
insb
in
popf
fwait
inc
repnz
out
inc
push
or
and
clc
mov
jecxz
lcall
add
lret
mov
lds
pop
push
add
mov
or
mov
dec
pop
jmp
jmp
xor
sbb
sub
jno
ret
push
jns
xchg
mov
pop
dec
dec
into
lret
stc
jnp
out
icebp
icebp
es
jne
aaa
fwait
loopne
fsubrs
adc
xchg
dec
rcl
sub
sbb
pop
mov
sbb
inc
cmp
sahf
or
test
mov
in
incb
push
outsl
es
jnp
in
std
divb
xchg
push
sti
shl
adc
lods
mov
xlat
fnstenv
shll
add
adc
insl
dec
sbb
inc
jmp
insb
cmp
pop
xchg
mov
or
ds
incb
pop
ja
sub
mov
negl
adc
pop
inc
ficoms
mov
lret
cmp
add
jmp
faddp
mov
ja
jl
sti
inc
shlb
push
cs
clc
pop
push
das
in
push
or
movsb
bound
scas
pop
push
jge
mov
xlat
and
sbb
aas
push
push
outsb
in
mov
jne
popa
push
cmc
add
sar
push
pop
xchg
movb
fwait
mov
repnz
cs
pop
jnp
iret
or
ja
stc
insl
mov
inc
cld
xchg
pop
xor
test
fs
aad
mov
loopne
jae
pop
dec
fistpll
and
hlt
sub
ret
pushf
jne
adc
jno
rorb
xchg
cmpsb
mov
stos
push
adc
inc
adc
adc
dec
mov
sarl
and
inc
sbb
ficompl
inc
and
xchg
jle
jne
dec
pop
pop
das
in
sbb
add
jg
mov
push
cmp
mov
in
jg
jno
cmc
into
rcll
ds
outsb
loop
fimull
jnp
dec
jbe
pop
insl
mov
ss
adcb
xor
enter
cmpl
inc
push
xchg
mov
push
lcall
push
mov
cmpsl
pop
out
stc
mov
aas
mov
or
in
loopne
cmpsb
xor
inc
lret
or
pop
add
outsb
xchg
aam
rorl
pop
add
cwtl
arpl
fstpl
jnp
mov
fbstp
leave
sti
mov
fldenv
dec
outsl
insl
std
or
shl
clc
jmp
into
lret
and
fs
inc
mov
sti
or
test
jmp
or
fwait
push
mov
lods
mov
movsb
inc
into
xchg
std
popa
stc
dec
xchg
mov
fmuls
dec
dec
mov
std
mov
imul
and
mov
cs
sbb
movsb
mov
sahf
adc
in
jle
sub
inc
loopne
push
out
pusha
cmp
into
sbb
pop
ficoml
sahf
aad
imul
idiv
jl
sub
xchg
push
sub
dec
and
jne
pop
cli
lret
mov
repz
fs
and
lock
mov
inc
cmp
mov
mov
xor
xchg
or
dec
xchg
add
out
jp
push
ja
fiadds
dec
mov
lahf
lock
jbe
cmp
inc
gs
pop
rcrl
aas
inc
bound
xchg
clc
sbb
sbb
ret
push
popa
gs
push
or
aaa
mov
shl
jp
or
movsb
sbb
shll
cmc
pop
mov
cmp
mov
lcall
pushf
cs
add
fdivrs
ss
jno
sub
mov
push
xchg
inc
adc
mov
fsts
lods
dec
push
popl
cld
xor
xor
jbe
ss
adc
pop
push
xchg
in
mov
in
icebp
mov
dec
inc
in
jo
mov
push
lods
jnp
xor
push
ret
hlt
fldt
jge
cmc
int3
sbb
imul
or
inc
and
cvtps2pd
pushf
sbb
mov
sub
and
dec
outsb
test
scas
fisttpll
push
inc
push
js
inc
stos
ret
mov
xchg
ss
sub
lahf
jecxz
xor
shlb
dec
imulb
mov
dec
and
push
sbb
mov
and
lret
cmp
out
dec
pop
out
mov
andb
cmc
out
int
mov
sbb
mov
xchg
int
xchg
mov
mov
lahf
sbb
push
mov
inc
jnp
addr16
push
inc
inc
mov
or
mov
dec
sbb
cmc
inc
outsb
cli
popf
inc
out
hlt
stos
push
hlt
repz
cmp
mov
pop
scas
adc
ljmp
enter
inc
cmp
lret
mov
mov
jnp
pop
mov
inc
in
aam
sbb
xor
pop
scas
push
mov
scas
or
and
sbb
xchg
dec
adcl
cmp
in
mov
inc
ja
dec
push
ds
push
and
mov
mov
nop
jnp
in
or
mov
fcmovnb
mov
out
push
shll
mov
add
daa
stos
out
stc
bound
dec
sbb
cmc
outsl
aam
add
jge
lds
sub
cs
xor
aas
or
aas
lock
sub
dec
fidivl
out
divl
xor
cmp
xor
mov
sbb
pop
jg
mov
outsl
lea
fistl
ret
pop
das
mov
push
ficoms
inc
pop
icebp
subl
mov
mov
mov
in
adc
mov
pop
fldcw
icebp
or
ss
leave
aaa
pop
dec
mov
insb
movsl
dec
adc
lcall
push
stos
dec
ficomps
call
shrl
dec
inc
xchg
xor
lods
cmpsb
cwtl
fmull
out
and
mov
lcall
fmull
jp
call
ljmp
adc
fisubs
aas
jnp
mov
bound
mov
insl
adc
push
ljmp
cmpb
jno
cmp
mov
addb
movsb
das
ret
jp
std
adc
cmc
pop
cmc
pop
jg
out
call
cmp
sbb
cld
xor
in
pusha
mov
sti
jp
jmp
sahf
mov
cmc
and
inc
testl
push
pop
sbb
adc
or
mov
arpl
shlb
push
push
dec
popa
sbb
mov
out
push
mov
lods
sub
sub
and
dec
stc
call
call
or
aad
sbb
jne
push
push
mov
movsl
and
fs
int
xor
inc
sub
test
sahf
jecxz
pop
xor
jnp
inc
inc
rcll
mov
lds
or
adc
test
push
sahf
jmp
gs
mov
rorb
mov
fsubs
loope
dec
sub
loop
orb
aas
jg
jle
ret
and
push
loope
mov
xor
push
fsubrp
dec
mov
ds
aaa
push
sbb
push
lea
ret
arpl
cmp
pop
pop
std
mov
ja
lcall
ror
jae
cld
cmpsb
xchg
jg
sahf
pushl
repnz
test
push
jp
jae
pop
mov
icebp
fs
leave
inc
xor
mov
aam
inc
jnp
in
inc
sahf
push
adc
sbb
push
pusha
pop
jo
cmpb
call
loopne
lock
cmp
or
sbb
push
pusha
pop
jo
cmpb
call
loopne
lock
cmp
or
sbb
push
pusha
pop
jo
cmpb
call
in
hlt
sub
adc
and
xor
js
dec
pusha
pop
mov
cmpb
lahf
dec
jo
aaa
lahf
daa
popl
push
test
cwtl
jae
or
clc
push
enter
sub
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
xchg
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
cmp
or
sub
aas
in
fnstsw
or
push
loope
lock
test
enter
or
shll
js
shl
pop
enter
xchg
decb
sub
dec
std
xlat
outsb
or
xchg
mov
repnz
mov
add
sub
popf
ret
outsb
mov
pop
and
push
push
std
push
mov
pop
add
fnsave
ret
xlat
outsb
pushf
aad
jge
sti
xchg
mov
int3
daa
clc
or
dec
add
and
das
fs
or
sub
mov
cmp
xchg
enter
and
sarb
jnp
loopne
sbb
mov
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
pop
mov
add
cwtl
push
mov
pop
addl
xlat
sub
cmp
or
inc
frstor
int
std
push
mov
jg
and
rcll
dec
mov
out
imul
cld
aaa
loopne
ljmp
and
xor
ret
cmp
sub
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
pop
mov
inc
mov
push
dec
hlt
and
jns,pn
cld
xlat
in
repnz
inc
xchg
sahf
dec
in
mov
or
aas
test
sub
push
mov
out
lods
sbb
es
ret
ret
imul
sahf
gs
xor
in
sbb
dec
adc
push
mov
sub
cmp
and
leave
fnstsw
mov
std
lea
aas
out
rcll
fs
out
jecxz
imul
jg
xlat
mov
adc
popa
jne
dec
ret
mov
dec
lds
mov
inc
xor
pop
sbb
stc
dec
mov
cs
adc
mov
pop
hlt
mov
xor
notl
or
addb
test
shl
jns
das
add
movsl
stc
and
andb
aas
mov
negb
adc
testb
cs
cmp
xchg
das
add
test
loopne
test
clc
loopne
and
jnp
shr
xor
or
mov
fstl
xor
jmp
adc
pop
lcall
jns
mov
shlb
adc
leave
punpcklwd
out
fcmovb
pop
std
cmp
movaps
mov
movsb
leave
je
mov
xor
add
mov
loope
sbb
cmp
cmpsb
test
dec
cmp
rclb
je
pop
in
cmp
mov
or
out
pop
mov
pop
push
inc
push
decb
clc
cmpsl
adc
daa
mov
xorl
add
iret
mov
sub
push
iret
mov
icebp
push
fs
stos
movsl
test
rcrb
cmp
xor
jno
out
mov
cli
or
xchg
xchg
xor
inc
xor
data16
orb
outsl
addb
call
adc
xor
mov
mov
cmpl
adc
adc
jecxz
or
subb
das
and
std
stc
call
sbb
mov
xchg
xchg
sub
jl
inc
add
shlb
mov
test
jp
dec
inc
leave
dec
fldl2e
leave
inc
orl
dec
jmp
aam
pop
mov
cmp
faddp
xchg
or
rcll
pop
add
adc
adc
inc
add
test
push
sub
je
sahf
das
scas
mov
test
fimull
push
enter
push
jge
add
not
cmpsb
adc
mov
addl
add
adc
out
sub
aad
fwait
mov
push
repnz
jp
scas
lahf
xor
xchg
insb
mov
daa
inc
lret
sahf
roll
cwtl
adc
repz
hlt
sub
pop
and
mov
pop
fmuls
mov
test
popa
iret
dec
mov
pop
or
pop
stc
fimull
or
and
in
cmp
arpl
sbb
lock
lds
jae
lds
repnz
idivl
cmc
fstps
loop
cmp
aam
in
cmp
xchg
lcall
scas
xchg
add
je
sub
in
popl
rol
cmp
movsb
xchg
addb
push
cs
push
rorl
and
stc
loop
stos
xor
add
or
es
mov
shll
pop
gs
fbstp
mov
mov
imul
xchg
mov
cmp
sub
cmp
push
or
push
push
cmp
sti
in
test
mov
inc
ret
and
leave
adc
xchg
add
popa
push
cmc
sbb
push
mov
pop
int3
sahf
mov
xchg
xchg
sbb
test
popf
pop
jmp
lcall
pop
mov
push
xchg
cmc
hlt
inc
mov
pop
pusha
cmc
nop
cmp
fadd
inc
cmp
push
push
mov
or
xchg
xor
adc
lds
dec
fwait
xlat
int3
sti
add
push
frstor
cs
lods
mov
and
fimuls
mov
jg
mov
std
mov
out
cmp
cltd
sbb
mov
push
fld
and
cmp
mov
push
mov
xor
mov
daa
adc
jae
out
inc
mov
andps
andnps
xor
cwtl
pop
nop
std
jle
jl
jge
mov
mov
jecxz
inc
or
insb
inc
movsl
hlt
rcrl
lock
clc
cmpsl
lods
mov
scas
push
call
ds
push
call
es
add
aaa
cmpb
clc
xor
mov
push
dec
mov
rorb
sti
pop
insb
repnz
in
jbe
cmp
xchg
or
push
xor
and
xor
ret
push
push
lods
sub
mov
sahf
xor
ds
inc
sbbb
add
repz
add
imul
movsb
adc
loop
adc
add
cmp
fisttpll
cld
jne
insl
and
mov
popf
out
sarl
or
lcall
jnp
aas
xor
addb
jnp
jne
jle
push
pop
mov
ljmp
add
inc
mov
xlat
loope
inc
mov
mov
jnp
ret
cs
ljmp
inc
ror
daa
adc
push
fisubl
lret
jl
lret
or
jbe
jne
push
lret
sub
pop
pop
mov
ret
fcmove
pop
mov
cmp
lea
or
fsub
std
fwait
pop
push
mov
hlt
push
dec
ret
push
loop
js
xchg
daa
fcom
inc
fnstenv
dec
and
mov
or
loope
sbb
lods
call
rcll
jecxz
xchg
adc
mov
jge
stc
cli
mov
mov
fwait
xchg
into
sub
dec
and
outsl
or
mov
or
push
or
cmp
add
pushf
frstpm(287
lock
push
inc
punpcklbw
sub
or
into
add
or
dec
and
push
xchg
xor
push
dec
ret
mov
inc
adc
dec
testl
xor
mov
adc
sahf
xchg
mov
push
dec
lret
ljmp
pusha
repz
fcomip
mov
pop
and
imul
jmp
loop
jne
mov
js
or
inc
push
rol
pop
sti
das
xor
and
les
into
xor
imul
pop
xchg
inc
lock
adc
jl
cmpsb
sbb
into
int3
mov
out
in
test
addr16
pop
inc
push
int3
mov
xchg
sbb
xchg
mov
and
xlat
call
or
or
imul
fistps
dec
mov
mov
pop
or
xlat
mov
lret
lcall
jmp
jl
sbb
shll
mov
xchg
xchg
jmp
fnstenv
mov
pop
sbb
nop
jns
inc
xor
das
icebp
inc
jno
dec
cmp
add
jmp
repnz
fs
push
adc
xlat
pop
sub
push
lds
or
cmp
cmpl
sahf
test
dec
push
adc
addl
gs
dec
and
cmp
in
int
int3
add
adc
inc
dec
js
mov
mov
or
jne
movsl
int
cmc
cmp
outsb
xor
js
cmp
iret
out
js
faddp
pop
es
scas
inc
decl
out
push
push
jbe
jnp
movsl
dec
mov
std
notl
push
push
das
jg
xor
test
adc
xchg
jmp
dec
jo
dec
es
xchg
ror
sbb
add
dec
faddl
fwait
enter
pop
outsb
test
nop
mov
outsb
in
adc
push
cvtpi2ps
imul
inc
xorb
xchg
jno
pop
fnstsw
fsubl
out
mov
mov
mov
mov
les
ja
push
xlat
test
cmp
fistpl
je
jp
popf
leave
in
adc
pop
das
out
add
mov
mov
jge
sarl
sub
das
cmp
cmpsl
jo
aam
sub
test
popa
std
out
fcomip
mov
pusha
fcoms
insb
popa
xor
fucomp
in
add
mov
jno
imulb
stos
ss
push
in
sbb
sub
mov
mov
dec
jmp
decl
pop
jmp
pushf
pushf
lahf
in
adc
rcl
jle
out
xchg
out
lods
ret
mov
jns
pop
jbe
dec
call
adc
mov
dec
sbb
lcall
pop
prefetch
leave
daa
stc
jnp
push
or
clc
cmp
or
pop
mov
ss
loop
mov
adc
daa
adc
stos
mov
xlat
adc
mov
xchg
mov
pop
or
fwait
sbb
and
loopne
mov
ja
pop
das
and
inc
xor
mov
lea
or
cmpsb
data16
cmc
shl
push
ror
xor
int
cwtl
or
popf
jnp
adc
lods
fiaddl
into
push
push
sbb
ficoms
and
fbld
cs
cwtl
xchg
xor
cmp
dec
pop
xor
lahf
jnp
das
jg
sub
mov
mov
adc
notl
scas
mov
int
fdivp
dec
ljmp
pushf
fldt
mov
sti
pop
and
mov
or
push
and
mov
xchg
ds
jo
hlt
and
scas
mov
xchg
clc
mov
sbb
inc
mov
mov
xor
inc
pop
hlt
xchg
lods
cwtl
mov
xchg
sub
andl
in
or
aas
inc
mov
ja
cmp
jb
pop
push
mov
pusha
in
adc
int3
inc
pop
outsb
and
add
mov
scas
js
mov
jecxz
xchg
out
add
dec
aad
adc
in
fs
pushf
mov
jno
and
ret
mov
data16
push
cmc
jo
les
pop
xor
inc
cmp
repz
and
lock
sub
sti
xor
cmp
mov
les
mov
lahf
mov
jae
add
xchg
add
popa
lds
jge
mov
dec
cmpsl
daa
movsb
cmp
xor
test
fs
cmp
std
and
incb
imul
inc
lock
enter
mov
lret
in
push
imul
cmpsb
jmp
xchg
ret
sub
sub
and
jmp
jo
hlt
fisubs
lea
mov
hlt
out
jbe
pop
push
icebp
nop
inc
xchg
push
sub
fldt
aad
push
push
call
jp
inc
mov
cld
push
imul
sub
cmpsb
jmp
leave
cmp
cwtl
inc
fsubl
fisubl
xor
insb
loop
fcomps
xchg
ret
inc
sbbl
ret
orl
mov
scas
lds
dec
inc
shr
xorl
dec
pop
popa
imul
fcom
mov
and
adc
in
cmp
inc
std
inc
dec
jl
popa
ret
and
jbe
stos
imul
mov
and
data16
daa
stos
cs
mov
fs
pop
pop
test
jns
cld
push
adc
adc
jl
sbb
lahf
stc
std
out
dec
mov
cmp
loop
cmp
js
mov
call
jl
push
ss
jne
arpl
das
jecxz
cwtl
add
and
or
cld
push
xor
les
mulb
mov
adc
neg
xor
mov
mov
and
sahf
dec
inc
sar
push
adc
cltd
call
mov
dec
inc
lahf
adc
ja
mov
pop
out
call
sub
cli
xlat
fsubp
iret
pop
pop
jp
fidivrs
push
fldt
jge
xchg
sti
std
inc
mov
or
rol
pop
push
loope
incl
rcl
ja
lods
enter
cmp
lahf
popa
push
xchg
lahf
mov
cmc
pusha
inc
iret
adc
adc
mov
negl
outsb
sbb
jae
push
jle
mov
lret
lds
je
push
ret
push
xchg
in
inc
testb
jns
or
stos
mov
loopne
xchg
pusha
sbb
or
inc
sub
mov
movsl
cltd
loope
ljmp
mov
adc
mov
push
in
jg
push
lods
movsl
cmp
mov
fyl2x
cmp
jo
or
lds
fsubl
sbb
out
test
mov
pop
test
xchg
cmpsb
ret
cmp
xlat
imul
lret
cltd
cmpsl
test
cmp
push
cmpb
xchg
xlat
mov
lret
das
jmp
cmp
mov
lret
xchg
dec
push
aaa
sti
outsb
mov
in
lret
xor
inc
mov
insl
dec
xor
push
rcl
adc
stc
jecxz
lds
and
in
ret
into
loope
xlat
out
pop
std
sbb
xchg
mov
mov
mov
mov
sub
pop
clc
push
ficomps
and
sub
xchg
rcl
lods
mov
jae
jnp
xchg
fwait
aad
and
mov
mov
bswap
lcall
lahf
lds
mov
push
xchg
ja
mov
movsb
stc
stos
stos
sbb
lret
outsl
add
nop
sbb
enter
xchg
call
adc
push
fwait
push
xor
int
or
aas
pushf
imul
sub
outsl
push
andb
addb
cwtl
fwait
mov
mov
jno
sbbl
mov
ds
and
cltd
pushf
insb
scas
push
bound
jno
push
sahf
ja
mov
das
add
xlat
fwait
push
lcall
mov
nop
cmp
jmp
xor
adc
xchg
push
loope
gs
adc
mov
sti
xor
push
lret
test
fstpl
jle
mov
scas
adc
sub
pusha
shl
and
aaa
mull
pop
sub
mov
adc
fidivrs
dec
push
loope
mov
cs
mov
pop
mul
cmc
fidivrs
test
inc
clc
adc
addb
xor
mov
movsb
je
push
insl
fdecstp
lahf
in
ja
cld
sbb
mov
clc
nop
dec
xor
out
sbb
pop
or
test
test
pop
xchg
mov
test
push
jg
popf
enter
jg
movsl
pop
jmp
mov
les
ljmp
data16
push
aaa
or
rorl
fsubrs
sbb
xor
ja
push
sub
das
andl
mov
in
xchg
xchg
mov
push
in
lock
xchg
jmp
jg
lock
pop
scas
imul
dec
jno
out
test
or
subl
jg
inc
addr16
stos
inc
hlt
dec
push
fstpl
dec
sbb
aas
mov
add
int3
sti
paddb
scas
xlat
je
cmc
lods
test
dec
outsb
cmp
out
cltd
jnp
or
mov
movsl
pop
decl
std
push
leave
fnstenv
xchg
ds
jb
push
jp
adc
movsl
pop
dec
push
data16
jecxz
pop
das
lcall
je
cli
mov
mov
in
mov
jae
out
pop
dec
aad
adc
pop
pop
and
mov
cs
cmpsl
mov
nop
sub
xchg
decb
xor
dec
test
fistpl
push
cmpsb
pop
xor
outsl
dec
sbb
fcomps
std
add
fisttps
jl
imul
das
in
jno
cmp
adc
adc
popa
out
pop
push
shrb
daa
pusha
mov
jp
imul
inc
scas
jmp
das
adc
cmp
push
jnp
add
bound
adc
imulb
cmp
xchg
and
fs
loop
faddp
mov
push
mov
imul
xchg
dec
in
cmp
push
jb
call
sbb
ja
mov
cmp
shll
xchg
out
add
and
mov
pop
fists
insl
fs
and
inc
mov
dec
xchg
xor
cltd
xor
imul
jae
mov
inc
jno
dec
jno
dec
adc
cmpsl
xchg
push
sbb
sarl
adc
xor
insb
nop
add
pop
bound
cmp
cs
sbb
mov
xor
das
dec
mov
mov
lds
cmc
mov
adc
and
rcrb
inc
mov
and
mov
ror
pushw
lcall
mov
xchg
xchg
adc
movsl
nop
cwtl
in
lea
jbe
sub
pop
mov
lea
ds
adc
push
or
pop
mov
pusha
cwtl
cmp
xchg
movsb
jmp
adc
mov
ret
jbe
mov
dec
and
rorb
or
adc
adc
xchg
cld
dec
or
sbb
cmova
add
mov
insl
lret
xchg
cmp
scas
sarl
and
jnp
cld
mov
jge
adc
pop
cmp
sub
je
imul
xchg
aaa
pop
sti
ljmp
mov
iret
sub
xchg
cwtl
dec
gs
pop
in
lods
inc
in
sbb
addr16
cmp
out
inc
push
xor
cld
fs
call
mov
clc
int
fwait
push
xlat
xor
pop
and
jnp
test
xchg
jg
sbb
sbb
cmp
ljmp
es
mov
imul
aad
add
xor
cmp
push
insl
cmpsb
push
mov
clc
dec
repz
push
fsubr
xor
out
push
jl
sbb
cli
ret
in
ret
and
dec
lcall
rorb
mov
cmp
xchg
xlat
data16
pop
xchg
jae
jo
das
lods
pusha
clc
lods
xchg
xor
jmp
pushf
inc
scas
lcall
andl
xor
loopne
outsl
xor
push
mov
xor
enter
popa
incb
fldcw
int
add
jae
mov
lret
fwait
mov
xchg
xchg
jp
bound
sbb
or
jle
adc
sub
out
jg
jle
fs
mov
push
xchg
std
mov
stos
inc
addl
mov
or
ss
fwait
sahf
bound
sub
push
pop
cli
lahf
cmpsb
xlat
andb
aaa
sbb
push
test
push
icebp
dec
repnz
inc
cwtl
pop
aam
inc
xlat
popa
dec
ljmp
sbb
dec
jecxz
push
pop
pop
es
mov
xacquire
std
or
out
cld
xor
notb
cwtl
adc
pop
mov
cmp
movsl
hlt
pop
push
jle
rol
sub
repnz
iret
loope
push
push
int3
rcrb
dec
outsl
mov
pop
clc
roll
jae
movsl
push
adc
cmp
cmpsl
xor
mov
icebp
loop
loope
jo
pushf
imul
into
jae
bound
jo
icebp
sbbl
xchg
test
arpl
push
cwtl
dec
xchg
push
xchg
sbb
das
push
out
popf
int
insb
add
jmp
out
mov
movsl
fldt
xchg
shr
and
push
sbb
daa
xchg
dec
pop
fistpl
in
movsb
data16
lds
mov
xor
jecxz
inc
sbb
push
xchg
adc
xor
stos
push
lock
pop
sbb
mov
insb
negb
jg
pushf
pusha
movsb
sbb
jo
lods
inc
popa
cmp
cmpsb
shrl
xchg
or
xchg
pusha
in
push
inc
rorb
mov
add
lods
repz
mov
lret
movsb
mov
insl
mov
jmp
gs
push
sbb
cmp
out
mov
jmp
mov
popf
repnz
push
imul
lods
dec
cmp
sahf
push
dec
cs
neg
pop
shlb
mov
xchg
pop
lret
mov
loop
leave
lods
dec
out
dec
insb
dec
pop
push
rcl
ss
xorl
lods
sbb
mov
hlt
mov
mov
xor
popa
inc
rcrb
scas
fucompp
cmp
sub
stc
in
dec
push
xchg
int3
stc
dec
leave
jnp
mov
mov
pop
sub
pop
ja
cli
mov
scas
jecxz
std
push
inc
lea
ret
test
xor
mov
mov
in
pusha
lahf
arpl
repz
inc
aad
sahf
mov
mov
xor
ret
out
ds
mov
decb
pop
mov
daa
cmp
xchg
arpl
sbb
insb
pop
push
int3
jne
cmpsb
dec
dec
sbbb
cmp
adc
in
push
dec
adc
jp
pop
xchg
scas
pop
loop
popa
fildll
mov
jge
pop
cmp
pop
aaa
adc
mov
and
mov
mov
jb
jnp
sub
movsb
dec
dec
outsb
jle
dec
cmp
imul
mov
fidivl
jle
dec
jae
lea
pop
jecxz
push
test
cwtl
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
cmp
orb
jg
lock
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpb
cmp
xchg
cmpsb
outsl
or
and
sbb
or
pop
add
add
push
add
popa
add
add
add
add
pusha
add
cmpsl
add
push
add
aad
adc
cmpsl
add
add
add
add
faddl
movsb
add
flds
out
add
add
add
add
add
add
add
pop
add
popa
add
cmpsl
add
add
add
mov
or
or
mov
add
dec
add
add
add
add
xor
outsl
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
leave
add
add
add
add
add
sub
add
add
or
xor
xor
adc
cmp
add
add
add
add
popa
add
add
add
add
xor
pop
add
jne
cmpsl
add
add
jg
or
or
movsb
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
cmpsl
add
add
add
add
add
add
cmp
out
add
add
add
add
add
filds
add
add
add
add
call
add
popf
add
add
add
add
add
add
add
add
add
add
or
mov
inc
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
out
aas
add
sbb
inc
add
add
add
add
add
add
add
lods
add
add
add
add
fwait
add
add
add
outsl
add
add
add
add
add
add
add
outsl
add
cmpsl
add
add
add
add
add
add
add
add
test
fildl
dec
add
add
add
add
or
sub
inc
add
add
faddl
cmpsl
add
add
jbe
push
add
add
add
add
add
add
insl
add
xchg
add
or
adc
mov
add
add
add
xchg
add
add
jb
or
out
add
add
add
add
add
xchg
add
aas
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
cmpsl
add
add
add
add
add
add
add
popa
add
add
push
add
or
add
add
out
cmpsl
add
add
add
add
pop
add
popa
add
add
add
inc
add
add
xchg
add
add
jne
cmpsl
add
add
add
add
add
add
add
flds
dec
add
mov
jb
push
add
cmpsl
add
sti
add
add
adc
add
outsl
add
add
add
add
cmp
out
add
add
outsl
add
add
outsl
add
cmc
rcl
sbb
imul
sbb
cmp
fld
add
outsl
gs
pop
mov
or
mov
fidivs
mov
dec
cli
dec
out
inc
aas
jmp
stos
mov
cwtl
je
icebp
jo
push
sbb
cs
push
loope
dec
adc
in
lahf
xlat
insl
popf
sbb
adc
mov
pop
lcall
cmpb
popf
test
push
scas
push
icebp
dec
ret
sbb
test
jg
jge
inc
dec
fildll
into
sub
xchg
inc
dec
inc
push
fstpl
xchg
xor
mov
test
mov
push
sbbb
xchg
dec
cmpsl
subl
fisttpll
dec
arpl
push
rcll
lret
pop
int
lea
dec
dec
jo
fsubrl
sbb
xchg
fwait
or
add
add
pop
push
hlt
xchg
ljmp
nop
sub
clc
push
jo
addl
movsl
lds
push
jge
mov
sub
add
and
stos
add
mov
mov
adc
jbe
out
loope,pt
jbe
fbld
and
insb
rclb
shrb
sub
mov
popa
jns
mov
pop
inc
lock
push
fs
cmp
adc
daa
inc
pop
fcmovnu
gs
stos
or
aad
test
sti
scas
adc
and
ficomps
pop
rcl
cs
pop
test
mov
call
dec
jnp
in
add
mov
cli
test
rclb
call
in
push
out
test
adc
cmc
je
pop
push
push
arpl
subl
xchg
dec
push
in
inc
addl
push
sti
mov
inc
fucomip
pop
xchg
mov
inc
ret
push
imul
dec
push
adc
sbb
inc
ds
fnstcw
lods
jae
mov
xlat
push
subl
addl
inc
lock
or
jb
pop
mov
cld
inc
lret
loopne
aas
imul
mov
incl
adc
cmp
pop
mov
and
mov
lock
jae
adc
pop
incl
pop
cs
int3
imul
hlt
test
add
cmp
cmp
xor
sbb
dec
outsb
nop
imul
rolb
cmpsb
xchg
jns
imul
xlat
push
call
cmp
ret
std
sub
pushw
xlat
lcall
lods
lcall
call
fistpl
adc
pushf
out
or
mov
and
mov
aaa
stos
pop
xchg
push
add
stos
ror
sbb
jecxz
shlb
mov
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
