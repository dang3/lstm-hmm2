pop
push
lock
add
mov
mov
and
jbe
mov
add
or
add
lock
or
insl
add
add
pop
rolb
punpcklbw
dec
or
add
add
inc
add
add
add
add
add
or
add
or
add
xor
adc
add
or
add
push
inc
add
add
imul
pusha
add
add
push
add
or
add
add
add
jo
cmp
adc
out
or
add
add
add
push
push
add
push
add
rolb
test
push
rolb
add
add
add
mov
mov
add
or
xor
adc
lock
pop
addb
or
and
fisttpll
inc
add
push
add
or
add
jo
add
or
addb
or
jo
rorl
add
add
add
movups
or
nop
add
pusha
add
mov
add
jo
bound
push
add
add
cmp
loopne
mov
add
sldt
fwait
pop
mov
add
mov
add
jo
mov
xor
imul
add
add
add
add
add
add
mov
add
js
add
mov
add
js
add
ret
push
inc
add
or
add
add
add
or
add
xor
data16
add
rolb
jo
add
punpcklbw
sbb
add
pop
xor
aaa
push
xor
mov
inc
add
lock
push
nop
add
add
add
add
add
add
es
lock
mov
and
add
je
push
add
mov
add
or
add
or
and
in
mov
rorb
add
mov
push
add
add
in
push
popl
mov
movw
mov
push
popl
call
movl
cmp
jne
movb
ret
movw
push
popl
push
sub
push
sub
sbbb
mov
xorl
pusha
push
popl
push
popl
call
andw
sbbb
mov
push
popl
push
popl
push
sbbl
xorl
sub
andl
addl
subl
push
popl
push
xor
call
push
popl
cmpl
jne
movw
xorl
call
push
popl
addw
ret
orw
or
jmp
add
xor
add
mov
addw
push
popl
shl
andb
mov
mov
shl
and
xorw
mov
andb
movb
cmp
jne
push
popl
orb
mov
sbbb
sub
sub
push
popl
call
or
popa
add
subw
pusha
push
popl
sub
call
push
popl
mov
subb
push
push
popl
xorl
push
popl
addl
push
popl
push
push
popl
subw
call
add
push
popl
push
push
popl
xorl
sbbl
orb
addl
add
pop
sub
cmp
jne
movl
push
popl
ret
xor
andb
popa
sub
call
movb
push
orw
orl
xorl
or
addl
andb
push
subl
push
popl
call
andb
addl
push
push
ror
not
ror
mov
mov
lea
not
mov
xor
xchg
subl
mov
xor
andw
shl
orl
or
push
mov
xor
subw
push
movb
call
push
popl
movw
push
sub
movw
mov
sbbw
mov
push
orw
mov
jmp
push
popl
pop
xorw
addl
mov
sbbb
push
popl
push
movb
push
push
popl
push
popl
push
push
popl
mov
push
popl
andw
mov
sub
push
popl
rep
mov
pop
andw
orw
pop
push
sub
mov
add
xchg
push
rol
not
not
mov
add
xchg
push
popl
subw
xor
subw
jmp
sbbl
sub
push
popl
push
popl
mov
push
popl
sub
movb
push
popl
sub
xorl
orl
mov
push
popl
sub
subl
or
jne
sub
andw
add
push
popl
push
popl
jmp
movb
subw
mov
or
shr
movw
and
shl
addl
mov
push
popl
add
movb
push
popl
jmp
movw
or
sub
andl
mov
mov
push
popl
add
push
popl
cmp
jne
push
popl
mov
push
popl
add
movw
push
popl
mov
push
popl
push
popl
add
movl
cmp
jne
or
ret
addl
push
popl
push
andw
xor
xor
sbbl
push
popl
pushl
push
popl
pop
sbbl
lea
push
popl
sbbw
or
movb
mov
andl
xorb
mov
or
lods
push
popl
sbbb
mov
andw
pop
push
popl
andw
ret
push
popl
push
orw
mov
push
popl
push
popl
add
push
popl
push
andl
add
push
mov
push
popl
push
movw
orl
push
and
push
popl
push
push
popl
and
mov
subl
mov
xorw
andw
add
push
popl
addb
pushl
orw
mov
subb
orb
add
orl
push
popl
add
push
popl
mov
add
add
push
popl
xor
sub
lea
xorw
mov
xorw
add
sbbb
mov
sub
xor
xorb
rol
orb
push
popl
xor
addl
inc
push
popl
or
cmpb
jne
xorb
push
popl
cmp
je
or
inc
push
popl
sbbw
cmp
jb
push
popl
addl
mov
movw
xorb
add
sbbl
movzwl
addw
mov
push
popl
add
sub
mov
mov
push
popl
add
movb
and
pop
andb
push
popl
cmp
jbe
xorl
andb
cmp
jae
push
popl
pushl
push
popl
orw
pushl
subl
subb
push
subw
sbbb
xorl
push
popl
push
popl
addl
push
popl
add
pushl
push
popl
call
subl
call
push
popl
xorl
pop
push
popl
pop
movb
sbbl
pop
movb
pop
push
popl
pop
push
popl
or
leave
and
push
popl
ret
push
popl
call
sub
clc
jmp
push
popf
addr16
xor
jb
sbb
add
fmul
cmpsl
mov
test
jno
je
lret
sahf
out
lock
fistpl
inc
call
cli
pop
shll
mov
shl
and
clc
xchg
and
adc
mov
mov
pop
lock
aaa
outsb
lahf
sbb
in
jecxz
xor
and
insl
fistps
pop
jns
out
gs
loope
push
jne
mov
stos
mov
lcall
inc
inc
int3
xor
inc
pop
jae
mov
pop
outsl
push
mov
add
pop
push
rol
ret
push
movsl
mov
xchg
xor
clc
enter
stos
jecxz
push
jmp
adc
enter
clc
mov
mov
loopne
dec
enter
jp
outsl
and
stos
jb
fwait
jb
inc
arpl
hlt
rcll
cltd
push
imul
add
imul
fcmovbe
mov
dec
cmpsb
push
cwtl
or
jb
and
xlat
adc
lahf
or
cltd
aam
iret
mov
aas
movsb
xor
sub
push
rol
in
push
lock
pop
ret
cmp
fistl
add
test
movb
data16
xor
mov
in
push
lock
or
loopne
enter
aas
flds
dec
leave
enter
and
sbb
jnp
in
jnp
stos
adc
lcall
lock
enter
xchg
cmpsl
mov
cmp
jg
sub
xor
xchg
lahf
divb
push
loop
in
push
or
add
in
mov
jns
sub
jg
sbb
fildl
xchg
ret
fbstp
xor
pop
jle
mov
popf
jp
dec
lret
xor
sbb
neg
out
jno
stos
pop
ljmp
sbb
push
outsl
jno
mov
fstp
jae
fldt
mov
adc
das
insl
push
aaa
sub
mov
and
loope
lds
cmp
inc
push
setae
dec
aam
out
es
push
rcr
jle
jns
fsubs
mov
adc
fldcw
int3
fstp
inc
test
xor
xor
mov
xor
sub
subb
lahf
lcall
lock
or
jg
andb
dec
mov
rorb
dec
fstp
inc
fsub
pop
dec
push
imul
add
jb
lahf
loop
push
jae
mov
rcr
in
pop
sar
lock
enter
fnstenv
xchg
ds
or
clc
in
cmp
into
ja
or
enter
inc
loope
xor
push
out
xchg
es
fwait
dec
push
xchg
imul
mov
scas
push
jecxz
aas
dec
fsts
inc
lods
inc
cmp
xor
iret
popf
sbb
fbld
add
pushf
cmp
clc
add
clc
pop
repnz
mov
add
das
mov
cld
xchg
ss
leave
in
adc
inc
cltd
pop
sbb
sub
insb
push
lock
cmp
mov
fwait
sbb
loope
dec
imul
and
in
jae
mov
xchg
or
je
lahf
inc
mov
cmp
lds
scas
mov
scas
sti
sub
xor
jnp
pop
icebp
and
adc
in
out
test
jecxz
movsb
insb
loop
stos
cmp
jno
xor
stos
jmp
xchg
mov
sbb
sbb
jecxz
insl
leave
sub
cmp
pop
shlb
sahf
incb
dec
fcmovnu
stos
cld
ud0
inc
scas
push
cmp
sub
rclb
or
push
mov
cmp
pop
aaa
xchg
or
repz
fiaddl
test
fimuls
scas
scas
dec
aad
or
jns
mull
pop
ja
dec
fildl
fdivl
or
sbb
ds
xchg
repz
pusha
jo
adc
push
add
js
das
mov
fildl
insb
jecxz
ljmp
movsl
rclb
fmuls
mov
inc
mov
cmp
and
push
shlb
cltd
mov
lcall
sbb
out
push
sbb
les
mov
mov
or
add
mov
pop
and
mov
jae
daa
addl
push
pop
cltd
adc
mov
dec
sbb
xor
push
or
or
add
fs
icebp
mov
fadds
xor
fwait
mov
addr16
adc
add
fistl
mov
jne
ret
push
pop
lock
sub
loopne
adc
mov
jb
add
in
jnp
xchg
adc
pop
cli
mov
testl
push
push
sbb
daa
enter
hlt
adc
lds
fildl
std
add
pop
lahf
jg
lock
fcoml
or
pop
loop
cmpsb
cmpsb
mov
and
lcall
iret
or
add
rol
bound
add
sar
ss
adc
sbb
fdivrp
push
inc
aam
outsl
outsb
lods
rclb
pop
int
cmpsb
pop
mov
pop
xchg
xchg
xchg
cld
push
lock
mov
dec
xchg
xchg
adc
lret
cltd
push
int
jnp
xchg
faddl
inc
icebp
imull
clc
gs
jmp
pushl
xor
repz
into
mov
outsb
fidivrl
outsl
popa
xor
adc
repz
xchg
dec
mov
lods
xchg
fdivr
push
inc
add
ret
fstp
xchg
and
out
jno
sbb
push
cmc
in
out
dec
loope
add
outsl
jbe
sahf
les
and
insb
or
add
add
xchg
insl
mov
gs
cltd
inc
and
pop
mov
add
dec
mov
and
add
lock
bnd
jmp
movsb
ss
inc
or
in
inc
pop
sahf
pop
mov
mov
add
pop
mov
add
push
les
cmp
push
lock
lods
inc
addr16
xor
cmp
test
cmp
loope
and
mov
push
hlt
pushf
xchg
xchg
in
pusha
test
out
orb
in
push
stos
pop
mov
movsl
add
hlt
mov
cmpsl
in
ds
fnstcw
mov
sub
lahf
mov
enter
addl
lret
adc
loopne
and
test
std
adc
int3
stos
jecxz
push
jmp
jne
enter
clc
roll
rcr
cmp
enter
fsub
xchg
test
xor
sti
mov
mov
shrl
add
xor
loope
test
ds
ret
sbbb
cs
enter
push
lock
les
inc
adc
mov
mov
add
dec
aad
adc
pop
cli
leave
int3
add
stos
loope
push
bound
jae
xor
into
repnz
pusha
pushf
add
hlt
xchg
sub
fbstp
rcr
adc
testb
xorl
fstp
push
dec
out
mov
and
cmpsl
push
cld
xor
rorb
pop
mov
outsb
movsb
imul
fidivrl
arpl
sbb
out
into
js
fs
jnp
ret
and
and
fst
repz
push
xchg
or
mov
lods
pop
fwait
test
cltd
or
sub
or
stos
testl
mov
cli
mov
jle
xchg
cmp
js
fs
mov
adc
xchg
sbb
jmp
pop
pop
lock
xchg
out
in
sbb
mov
add
iret
fadd
pop
and
test
push
loope
mov
dec
push
out
scas
lahf
ljmp
sti
imul
xchg
je
mull
push
mov
es
xchg
lcall
dec
rcll
je
xor
addr16
je
inc
iret
enter
sbb
imul
test
and
addb
stos
mov
sti
loopne
cli
or
icebp
sahf
stos
sbb
out
ret
outsl
adc
ret
or
lock
outsb
fwait
and
loop
and
jo
pusha
mov
xchg
fadd
pop
pop
scas
int3
xchg
xor
stc
and
push
js
mov
or
shrl
jae
pop
and
test
mov
ret
pop
stos
shr
adc
cs
sarl
mov
shrl
cmp
call
mov
ljmp
mov
in
stc
xlat
push
mov
pop
rcll
jb
outsl
push
rorl
bound
movsb
scas
shll
cmovs
pop
jp
mov
xchg
cmpsb
fistpl
push
jecxz
jbe
inc
dec
scas
stos
jb
mov
mov
mov
test
out
cmp
test
addl
fldt
xor
gs
pusha
mov
test
lret
adc
imul
xchg
fmul
push
int
out
scas
jnp
adcl
jo
pop
push
cmp
inc
fistl
push
in
pusha
sbb
lock
fwait
push
fwait
lock
testb
test
mov
jge
sbbb
sub
fadds
fadd
loopne
add
and
insl
iret
and
cmpsb
loopne
pop
adc
mov
loope
push
jne
mov
adc
scas
je
call
cmp
push
pop
fnstenv
pop
pop
shl
and
push
mov
cmpsb
jge
add
insl
sbb
dec
out
stos
out
outsb
jg
xor
jge
xchg
addr16
jno
cmp
loopne
out
or
icebp
xchg
stos
sbb
popf
loopne
jp
mov
scas
mov
sti
loopne
mov
repnz
mov
mov
adc
mov
incl
rol
fstp
push
mov
mov
addb
ss
jae
loop
insl
mov
lock
jno
dec
jmp
lock
fildl
ret
test
fcoms
sub
sbb
pop
sahf
push
lock
xor
mov
xor
mov
stos
xchg
or
sbb
sahf
push
jo
andb
ret
daa
lock
pop
outsb
xchg
sbb
fucomp
mov
mov
loopne
inc
rcl
jp
popa
rcr
arpl
mov
dec
mov
ja
mov
push
cmp
push
sbb
or
xchg
jp
push
lret
clc
xor
push
call
outsl
jne
movsb
cwtl
jle
inc
mov
xor
push
stc
sub
lahf
ja
cld
cltd
ss
push
fisttpl
push
jecxz
test
aaa
out
daa
addl
mov
mov
enter
repnz
scas
inc
popf
loope
and
inc
add
decl
loope
pop
fsts
enter
cmpsb
js
jae
aaa
movl
and
test
ret
pop
stos
and
flds
xchg
hlt
push
fstp
jge
jp
adc
adc
mov
nop
outsb
lcall
enter
rcr
mov
push
push
fstps
imulb
mov
xor
aas
push
imulb
pop
pop
lahf
stos
hlt
mov
mov
add
pop
xchg
add
cmp
or
sbb
je
push
lods
mov
xchg
bound
sti
push
sbb
or
fistl
out
mov
iret
sub
fsts
loope
sub
gs
cltd
aad
ret
xchg
fcoml
cwtl
daa
sub
loop
sub
fmull
aam
sbb
inc
push
pop
pop
mov
mov
add
xchg
hlt
addb
dec
outsb
nop
pop
mov
mov
inc
popf
fsubrp
and
lahf
es
push
pop
xorl
pop
lock
imul
push
xlat
jns
and
sbb
dec
sub
aaa
in
in
xor
stos
and
fistl
test
jnp
fisubrl
pop
mov
add
xchg
outsl
and
cmp
cmovo
or
fmuls
push
dec
add
adc
mov
adcb
enter
out
arpl
adc
pop
push
push
fstps
cmp
pop
adc
out
cmp
push
jno
add
fildl
jl
ljmp
sbb
push
data16
hlt
ret
icebp
lcall
inc
aam
jnp
add
loopne
jg
mov
pop
lock
call
inc
rorl
mov
fmuls
cmp
push
or
push
dec
and
mov
lods
loop
lock
xchg
repz
rcll
sahf
mov
cmp
add
xor
loope
stos
outsl
and
push
inc
add
roll
xchg
cmp
cli
addb
mov
pmaddwd
in
pop
or
xorb
hlt
loope
dec
add
out
jnp
mov
sbb
addb
addb
ljmp
push
out
clc
enter
in
pop
es
push
and
dec
pop
or
ret
sbb
mov
jno
imul
xchg
fsubr
or
fistpl
dec
popf
push
out
pop
or
xchg
cmp
mov
pop
xlat
rcll
fstp
insb
sub
lods
divb
ljmp
shrl
out
inc
mov
cmp
jmp
fdivrl
adc
arpl
lret
test
bound
mov
out
and
imul
fstp
mov
inc
flds
pop
lods
int
in
inc
jle
pop
stos
insl
push
mov
cmp
xor
shll
adc
fnstenv
mov
in
stos
hlt
cmpb
cmp
jno
mov
fstp
jae
fldt
mov
and
sbb
scas
jne
pop
or
jge
lahf
sti
mov
imul
shrb
cmp
dec
out
repnz
adc
adc
add
mov
clc
jb
cmc
addb
pop
loope
leave
test
or
loopne
stos
xor
std
std
add
fstp
push
je
cmpb
inc
loope
sub
addb
xor
jb
cmp
add
mov
sub
pusha
mov
popa
fadd
pop
stos
rcl
sbb
addl
push
and
dec
imul
push
jp
lods
ficoml
pop
xlat
out
into
popf
mov
fiadds
aaa
pop
mov
sahf
push
andb
xlat
fnsave
in
sbbb
push
lock
cmp
add
dec
mov
xlat
loop
stos
mov
lcall
dec
fmuls
roll
aam
fadds
pop
or
loopne
les
setge
xor
mov
addr16
jge
mov
cmp
sub
pushf
setb
mov
cmp
imul
enter
mov
dec
sbb
into
test
outsb
lret
sahf
cmc
sahf
sbb
leave
jns
adc
test
xor
lds
jge
add
lock
pop
adc
mov
pop
pushf
lea
jae
mov
out
arpl
sbb
mov
cwtl
lods
add
xchg
in
mov
pop
out
xor
sbb
jae
sub
bound
call
cmp
or
pushf
jns
sbb
xor
jo
xchg
loopne
vpsrad
push
lock
pop
andb
es
inc
and
insl
repnz
mov
in
das
sub
mov
add
jne
or
outsb
mov
mov
jb
pop
or
fdiv
cwtl
pop
fdivrl
je
sub
dec
sti
mov
call
fldl
inc
dec
fisttpl
xchg
xor
jno
inc
sbb
out
lock
dec
outsb
mov
mov
lds
lret
dec
mov
dec
and
push
mov
enter
fcoms
cmc
xchg
dec
std
movsl
insl
dec
jl
adc
repz
sub
pop
incb
xchg
js
ret
stc
inc
into
add
lcall
push
xchg
shufps
xor
push
push
adc
push
enter
mov
sub
mov
out
or
push
in
sub
sub
push
repz
mov
dec
sub
sbb
outsl
cmp
fldenv
ljmp
int
das
cs
fstps
cli
rorb
fucom
dec
and
mov
push
gs
repz
add
test
pusha
xor
outsl
add
das
pop
and
shll
outsl
fistpl
jno
imul
outsl
outsl
push
add
push
jmp
pop
or
add
out
xlat
and
mov
push
imul
pushf
aam
lock
testb
test
pop
and
insb
inc
leave
fstp
std
push
jg
sbbl
mov
hlt
aam
xchg
dec
std
stos
xchg
data16
inc
les
decb
or
inc
mov
fwait
xchg
ret
xor
push
fldl
sub
mov
imull
les
mov
stos
scas
jmp
jl
ja
and
add
es
mov
lock
pop
pusha
rolb
dec
std
sti
push
not
mov
dec
or
cmp
repnz
ljmpw
and
and
adc
pushf
les
mov
mov
addr16
jmp
in
dec
push
dec
das
pop
loope
gs
repnz
xor
push
scas
je
push
or
idivl
mov
repnz
inc
mov
add
gs
cld
mov
xchg
pop
js
out
or
test
fwait
cmp
ss
push
inc
add
out
in
pop
testl
fwait
sbb
xchg
jno
lahf
add
repz
in
fdivrl
flds
push
pop
dec
cmpsb
imul
lret
test
ljmp
pop
out
pop
jae
nop
lods
loop
into
dec
pop
inc
xchg
mov
sub
fcomip
addl
testl
pusha
mov
or
and
lcall
shlb
mov
fildl
and
insl
mov
loop
jg
jae
mov
mov
sti
loopne
orl
or
xchg
stos
sbb
addr16
inc
add
ljmp
xchg
repz
lret
loop
jecxz
adc
inc
mov
cmpsl
pusha
aam
idiv
add
add
inc
fmull
pop
lock
test
push
push
fstps
nop
sti
mov
fucom
stos
or
push
inc
aam
ret
mov
fadds
outsl
or
pop
shlb
test
mov
movsb
xchg
pusha
pop
repz
incl
in
fstp
push
jb
bound
loopne
or
sahf
cmp
sahf
stos
sbb
test
outsb
out
push
xchg
fstps
std
inc
icebp
daa
add
loop
lds
sbbb
push
push
sarl
inc
jle
pop
jne
pushf
je
push
pop
iret
lcall
jge
loop
xchg
xchg
cld
jo
int3
dec
xor
ss
dec
out
imul
test
std
imul
leave
ja
enter
loopne
and
xchg
ss
cli
addb
mov
add
enter
div
fstpl
jae
nop
lods
jecxz
adc
scas
sarl
xchg
fwait
fs
lods
sbb
in
mov
cwtl
ljmp
pop
shll
xchg
add
icebp
ret
adc
lock
or
sbb
mov
add
std
cmpsl
call
mov
clc
pop
enter
sarl
movsb
dec
pushf
jno
imul
mov
aas
std
cmp
dec
loop
xlat
pop
adc
aad
xchg
push
and
push
in
mov
push
adcb
inc
or
xchg
dec
sub
push
mov
lock
and
or
inc
mov
mov
std
add
cmc
scas
push
push
or
add
cltd
push
add
std
mov
divl
lods
sti
mov
ret
dec
mov
pop
mov
sti
dec
jbe
xchg
shrl
je
push
cli
dec
popf
push
in
xlat
dec
push
sbb
lock
ret
and
fmuls
dec
fistl
xchg
mov
jbe
cmp
xor
xchg
sarl
fnstcw
rolb
arpl
loope
leave
adc
xor
icebp
lcall
fsubs
lahf
ret
push
daa
sbb
repz
or
cmc
adc
and
or
mov
push
add
rep
int3
icebp
push
pusha
pop
jae
sbbl
int
cmpsl
ffreep
dec
lods
imul
add
jne
adc
aad
inc
daa
inc
add
mov
pop
clc
addb
adc
jb
cmp
push
das
and
fdivr
stc
adc
fsubrl
in
inc
fcmovu
inc
fmull
andl
mov
fstp
lds
fistl
and
insl
ror
adc
jge
data16
push
in
push
lret
clc
rep
add
bound
imul
aas
lods
or
sahf
xor
mov
in
add
imul
ret
adc
cltd
xlat
pop
sbb
fstps
sub
add
inc
adc
ficoml
pop
mov
mov
add
pop
xchg
add
mov
fstl
or
outsl
test
push
mov
cmp
adc
add
insb
push
dec
mov
jecxz
bnd
cmp
fisubl
jbe
cld
sub
rclb
mov
jl
dec
rcll
jge
repz
sbb
add
lock
xor
sti
mov
in
jo
sahf
cmpsb
inc
dec
loopne
or
sub
pop
push
dec
pop
gs
push
lock
int3
cmc
fists
xor
mov
rolb
dec
enter
add
arpl
lds
in
mov
fstl
or
inc
popa
xchg
jle
lea
and
aaa
push
idivb
mov
inc
jl
dec
inc
js
fs
scas
push
or
xchg
sti
test
out
daa
ret
adc
mov
push
mul
out
push
gs
cmp
sub
mov
out
pop
pop
lock
fistpl
cld
and
enter
scas
lahf
les
loop
add
imul
fstp
add
pop
cli
imul
push
dec
outsb
fwait
sbb
loope
and
mov
jmp
pushf
fdivrl
inc
fdivr
push
lock
lods
or
mov
fcoml
cltd
setno
pop
or
cmp
jle
push
mov
xor
push
and
pop
imul
das
lret
jns
mov
cmp
call
push
mov
push
les
ljmp
pop
push
daa
mov
lock
lahf
loopne
and
xchg
inc
scas
push
cmp
sub
xchg
ret
adc
mov
mov
divl
and
std
inc
cmp
xchg
pop
jno
imul
div
fiadds
fsts
out
adc
jle
push
dec
pop
mov
stos
lods
bound
shl
in
push
stos
or
pop
jae
daa
inc
lret
in
gs
bswap
xchg
paddw
push
sbb
idivl
loop
push
out
lock
mov
ss
mov
out
mov
xchg
sarl
mov
into
ss
aad
xor
cli
insb
jmp
and
lret
mov
pop
mov
mov
dec
lods
in
roll
scas
jns
fcmovnu
out
cmp
pop
shrl
sahf
flds
in
adc
push
xchg
inc
dec
loopne
xchg
add
mov
fstp
jae
insb
std
xchg
push
cltd
psubq
dec
aaa
lods
push
xchg
inc
xor
or
cltd
pop
cwtl
imul
add
fldenv
mov
pminub
cli
xor
insl
push
sbb
sbb
dec
cmpsb
ljmp
push
jmp
add
mov
pushf
ss
incl
xchg
adc
push
shll
test
nop
ret
push
ficoml
pop
xchg
push
fadd
add
add
cwtl
cmpsb
lret
or
loop
push
cmc
scas
push
mov
sbb
in
lret
in
enter
test
xchg
jp
cmc
xchg
outsb
cmpsl
push
repz
ljmp
ja
lahf
pusha
ljmp
or
imul
ror
jne
and
xor
mov
or
xchg
fstpl
jb
stos
jl
cmpb
inc
popf
fsubrp
and
addr16
sub
je
or
sub
add
divl
scas
add
sti
cmc
shlb
pop
push
push
repnz
dec
enter
push
jmp
push
lret
cwtl
add
outsb
sbb
jnp
add
add
inc
inc
shll
movsb
lret
fstp
add
jnp
filds
imul
repz
ret
adc
push
xchg
dec
outsb
pusha
or
fildl
push
or
dec
xchg
jno
stos
shr
hlt
fwait
outsl
sbb
pushf
enter
in
stos
push
and
pushf
push
repnz
loopne
mov
mov
xor
dec
cmp
push
push
lock
ljmp
mov
or
cmp
cmpsl
insl
loopne
loope
push
jne
mov
adc
mov
inc
repz
cld
lahf
and
outsb
movsb
fcomps
add
jg
xor
push
in
add
out
push
mov
xchg
jns
xor
cld
xor
dec
popf
jmp
test
addb
roll
lds
mov
xlat
fisttpll
inc
dec
sub
pop
xor
lods
mov
or
stc
shrl
xchg
dec
test
lods
xor
or
fidivs
sub
jmp
xor
push
or
loopne
dec
arpl
add
mov
xor
jae
out
clc
xchg
stos
xchg
adc
push
inc
add
push
xchg
add
cli
addb
outsl
add
and
out
pop
or
mov
pop
push
aad
in
out
aam
push
push
rcr
xchg
xor
fistl
clc
adc
sahf
out
aaa
cmp
shlb
fwait
stc
mov
aaa
rclb
jae
rcrl
push
ret
sahf
std
add
push
push
imulb
lea
cmpsl
push
enter
cmpsb
mov
sub
xchg
pop
pusha
sar
cli
insl
mov
je
adc
test
fistpl
mov
push
mov
sbb
sbb
dec
aaa
sbb
imul
aaa
cld
xchg
ss
daa
hlt
inc
jns
add
jnp
or
in
pusha
inc
pop
lock
in
sub
jb
clc
cmp
scas
push
loop
or
shll
aad
sbb
adcl
enter
lcall
add
push
lds
dec
cmp
ss
cltd
fstps
push
adcb
pop
lcall
test
popl
jl
xchg
mov
gs
jae
test
dec
stos
push
and
ljmp
add
dec
sub
in
pop
es
dec
out
cmp
js
hlt
sbb
xor
push
push
jae
mov
dec
pop
data16
jns
xor
addr16
outsl
jno
mov
fstp
jae
fldt
push
mov
add
das
xchg
data16
add
push
insb
mov
mov
movsl
mov
jle
inc
cld
pushf
lds
in
sbb
std
imul
mov
push
shl
aad
pushf
call
jle
jmp
dec
fwait
mov
mov
vorps
pop
xchg
inc
mov
inc
mov
fstpl
movsb
das
addl
jmp
mov
pop
lock
adc
cs
pop
fldenv
mov
lret
xor
fstps
ucomiss
aaa
add
loopne
adc
lock
movsb
insl
fcomps
sahf
mov
std
jg
negl
sti
aas
in
outsb
arpl
cltd
stos
sbb
xchg
aad
mov
cld
nop
movsl
cld
lcall
jns
mov
xchg
je
ret
jo
je
pop
mov
pop
das
dec
outsl
test
and
cmc
or
icebp
xchg
sbb
insl
ret
fstp
xchg
aas
outsb
scas
add
ror
iret
mov
cmp
pop
ljmp
add
pusha
inc
jae
jg
inc
xchg
mov
insl
loop
jnp
cwtl
add
je
bound
inc
and
mov
stos
xchg
stos
cmp
jae
jl
push
fnsave
xchg
cmp
push
jl
mov
mov
mov
xchg
xchg
neg
rcrl
and
hlt
push
jbe
xchg
sbb
inc
or
icebp
mov
add
fsincos
leave
fcoml
outsl
inc
cmp
scas
les
mov
pop
inc
lods
subl
test
test
addl
repnz
scas
pop
xor
dec
cwtl
push
hlt
rcll
cltd
push
out
sbb
jno
popf
ficomps
fmul
outsl
add
divb
sbb
sub
push
add
out
push
scas
push
in
sbb
je
push
xchg
push
fdiv
pop
enter
cli
xor
push
in
lock
push
subl
cmp
test
hlt
fs
dec
pmulhuw
or
adc
pop
jmp
xchg
addb
lock
enter
pop
loope
push
pushf
je
push
insb
cmp
or
jl
in
xor
sbb
push
dec
sub
in
sbbl
xchg
shrb
jns
add
fcoms
mov
fstps
and
or
loop
rcr
push
outsl
push
or
jne
jge
lret
adc
addb
icebp
jnp
fdivrs
add
or
pop
fisttpl
mov
xlat
loop
pop
fldpi
orl
xchg
sub
jnp
mov
call
fldl
inc
dec
fcmovnu
adc
xchg
adc
rcll
int
mov
or
or
fcoml
xchg
daa
popf
loope
inc
add
mov
incl
testb
mov
loop
push
jns
mov
add
test
jnp
orl
push
je
push
rcll
aad
or
icebp
scas
stos
pop
cmp
ds
cs
gs
in
inc
pop
gs
and
sub
cmpl
es
jbe
fistl
mov
and
push
in
jb
jmp
scas
jns
cmp
hlt
jecxz
sbb
hlt
pushf
mov
fnstcw
dec
outsl
test
xor
ljmp
icebp
xchg
pop
lock
ret
xchg
cmp
clc
push
stos
enter
shlb
hlt
insl
cmpsb
popa
dec
sbb
jp
dec
into
cwtl
into
inc
cmpsl
arpl
xchg
add
fnstenv
push
cmpsb
nop
xchg
push
arpl
imul
pop
jbe
push
ret
jae
jle
mov
int
cmpsb
ljmp
ljmp
dec
addr16
jo
shl
jecxz
test
cwtl
add
imul
push
or
jnp
add
repz
jbe
push
ret
jae
imul
fcoml
cltd
or
push
dec
out
mov
adc
clc
mov
cmpsb
cs
push
push
shll
dec
fidivs
fs
repnz
in
adc
sahf
push
rclb
hlt
les
sahf
or
inc
aam
jnp
jbe
add
dec
xchg
pop
enter
push
js
enter
pop
in
gs
test
movsl
mov
shlb
lahf
add
mov
cmp
inc
mov
in
cmp
dec
cld
push
xor
jne
lahf
dec
aad
into
adc
int
dec
lock
jbe
jge
inc
gs
out
lock
add
jb
stos
adc
lods
jecxz
inc
pop
and
cmp
inc
fcmovu
andl
dec
stos
mov
pop
mov
jle
les
mov
and
add
xchg
cmp
outsb
lea
aad
jae
mov
dec
scas
xchg
inc
ds
xchg
pop
sub
xlat
into
leave
test
or
jl
sbb
ffree
loope
push
lock
or
cld
cld
popf
aam
pusha
fdivs
mov
out
fs
push
shrb
inc
fadds
lods
hlt
xchg
in
inc
insl
jb
mov
mov
add
pop
jbe
xor
ret
ret
and
inc
push
cmp
dec
lods
pop
stos
xor
testb
pop
mov
aam
push
jae
pushf
sbb
lcall
sahf
lret
mov
mov
das
fnsave
inc
dec
loope
sbb
les
sbb
dec
sbb
xor
adc
mov
pop
loopne
xchg
pop
in
push
dec
leave
enter
addb
fisubrl
fadd
repnz
or
pop
and
loop
cmp
or
outsl
mov
in
fmuls
sub
xchg
andb
or
and
pop
or
xchg
iret
sarl
xchg
out
fstp
push
mov
mov
pop
push
mov
xor
cmp
add
xlat
out
ret
test
shlb
pop
jno
stos
enter
jb
addl
and
addb
fisttpl
sbb
in
and
xchg
insb
or
mov
push
jecxz
mov
fstl
or
jmp
or
ret
cmp
test
jp
pop
dec
mov
outsl
fistpl
cwtl
xor
or
cld
cwtl
movb
dec
cmpsb
push
in
inc
pop
dec
movsb
aaa
sub
int
addl
aad
cld
ds
cmp
xor
xlat
add
mov
insl
ret
dec
loope
ds
and
or
icebp
inc
into
ds
jae
iret
and
adc
sarl
and
in
aam
imul
push
xor
cmp
je
out
clc
xchg
rcll
mov
in
ret
add
lock
lock
and
stos
adc
pop
shlb
xchg
push
pop
incb
dec
sbbb
in
jo
push
std
out
enter
push
shrl
rcll
insb
fwait
pop
icebp
jb
jle
dec
bound
or
xchg
lret
xchg
cmp
cld
lcall
jno
mov
lcall
inc
pop
je
outsl
jo
or
jae
jo
dec
enter
xlat
mov
in
xchg
pop
std
sahf
shlb
repz
icebp
push
inc
test
pop
cmp
outsl
jae
pop
cmp
sbb
leave
test
xor
loopne
ret
and
add
jmp
and
outsl
fstp
jae
outsb
fwait
sbb
clc
loopne
inc
mov
ret
cmp
fdivrl
fistpl
push
jecxz
jne
jnp
mov
sub
and
addb
dec
outsb
mov
fisttpl
je
loope
add
inc
inc
addr16
mov
xchg
inc
mov
test
xchg
add
std
rcr
push
or
sbbl
lock
fistpl
idivl
and
inc
mov
pop
cli
testb
icebp
mov
push
in
out
mov
in
inc
fmuls
pop
or
dec
pop
jp
mov
or
enter
inc
in
adc
fnclex
jp
xchg
xchg
push
lods
cmp
test
addb
ljmp
pop
inc
ds
and
add
out
arpl
stos
pop
push
lcall
inc
mov
cmp
sub
mov
mov
fldcw
mov
sti
fwait
xchg
dec
ss
xor
and
andl
xor
decb
cmp
dec
jecxz
xchg
out
dec
cmpsl
mov
jnp
add
fisttpl
push
inc
fdivrl
adc
mov
inc
inc
fsincos
leave
xor
mov
fstps
sub
adc
in
vmovaps
lock
pop
sbb
add
jno
jns
scas
je
push
ret
lret
push
frstor
jae
or
mov
inc
sahf
jno
imul
mov
cltd
or
jmp
ficompl
xlat
ss
xchg
cld
cmp
add
push
pop
fstps
flds
loop
lods
das
xor
and
jo
iret
cltd
mull
je
push
cmpsb
cmpsl
xor
jno
sub
push
mov
xchg
push
in
shrb
xlat
push
leave
push
int
in
xor
push
mov
mov
xchg
inc
in
mov
icebp
jg
in
xor
js
inc
xchg
ret
out
lock
bound
rorl
lcall
or
dec
insl
push
pushf
cmp
cmova
outsb
cld
xchg
lds
imul
or
and
das
sub
sub
inc
cmp
dec
sbb
mov
aaa
popa
stos
sarl
or
pop
scas
hlt
psubusw
mov
sti
scas
loop
sbb
add
scas
jns
xor
push
push
addl
sbb
push
sub
push
lret
clc
sbb
mov
imul
mov
punpckldq
mov
push
ss
push
call
mov
fsubl
cmp
sbb
inc
scas
shrb
xchg
pop
ret
push
into
mov
add
pop
jne
rclb
jne
cmp
xchg
rorl
loopne
adc
cltd
push
push
cwtl
shl
mov
and
fbstp
inc
mov
test
push
ret
pop
mov
icebp
xor
and
xlat
aam
xchg
pop
shlb
xchg
shll
push
rcr
adc
fldcw
xlat
test
pop
adcl
pop
movsl
add
shlb
mov
and
cmpsb
fistps
sub
xchg
jmp
fstps
dec
cli
movsl
rolb
and
ffreep
push
in
je
inc
pop
xchg
ret
loopne
add
mov
pop
jbe
icebp
scas
stos
pop
cmp
arpl
out
and
xor
sti
mov
into
hlt
jl
mov
xor
loope
sub
fdivr
push
inc
or
sub
xchg
das
dec
outsb
mov
into
and
mov
jb
add
std
add
outsl
mov
mov
xlat
pop
xor
add
push
mov
pushf
sbb
mov
jecxz
xchg
sub
fnclex
jp
fimull
stos
fstp
push
gs
adcl
push
cmp
add
insb
add
insl
out
pop
pop
dec
je
jmp
fists
iret
xorb
imul
mov
push
and
xlat
inc
outsl
pop
push
and
aam
movsb
fstl
or
addr16
push
incl
and
push
cmc
dec
mov
enter
cmpb
je
cmp
cmc
lock
leave
cwtl
add
outsb
jmp
bound
dec
rcll
sub
mov
ss
jno
mov
fstp
jae
fldt
xor
clc
out
cld
cmpsb
cmp
pop
aam
xchg
xchg
and
imul
out
rcll
in
jb
fdivrl
arpl
inc
mov
test
std
imul
or
popf
push
sub
inc
rcr
ret
clc
js
stc
in
dec
jns
mov
or
inc
and
enter
imul
imul
or
cmp
dec
push
cld
inc
xor
or
stos
jbe
inc
sti
mov
shlb
add
fstpt
movsl
out
addl
je
jle
fstps
shlb
loope
dec
cmp
mov
cmp
pop
fmuls
mov
enter
clc
test
mov
push
dec
lret
cs
rcr
adc
arpl
dec
dec
mov
loope
loope
mov
mulb
orl
test
stos
mov
jg
fwait
daa
xor
or
cwtl
shlb
fldt
sti
movsl
xchg
dec
mov
mov
ret
cmpsb
rcrl
adc
icebp
mov
xchg
add
sti
mov
rclb
inc
dec
fisttpl
aad
push
imul
jno
fisttpll
mov
add
adc
loopne
popf
fnstsw
loope
add
rcr
push
mov
mov
or
lock
loope
jp
jb
cmp
add
and
mov
sub
loope
adc
pop
sti
mov
loopne
jnp
call
and
xchg
ljmp
sub
lahf
jb
js
push
mov
xchg
jne
movsl
movsb
mov
mov
pop
mov
dec
cmc
cwtl
aam
pusha
push
pop
loop
jl
cld
mov
fdivl
in
imul
jl
test
adc
sub
rorl
mov
fmuls
or
das
adc
mov
xor
dec
lret
enter
rcr
fmull
xor
test
icebp
xchg
movsl
dec
sti
loopne
or
lahf
icebp
xchg
daa
inc
push
outsl
ret
push
fucomip
push
test
mov
cwtl
mov
cmp
mov
pop
outsb
cmpsl
idivb
mov
fsubr
add
sarb
add
mov
cld
cltd
ss
int3
adc
pop
sub
add
xor
mov
fstps
mov
dec
adc
in
das
cs
fstps
sarb
add
adc
loope
cs
dec
fstps
and
adc
loopne
loope
push
push
out
clc
inc
scas
or
mov
outsl
lods
push
ljmp
mov
std
fbld
fldt
fistpl
scas
cmp
mov
cld
lcall
push
insb
cmp
xor
ret
clc
pop
je
outsl
flds
dec
fs
mov
fstp
dec
xchg
pop
pop
jae
movl
insl
cld
mov
jb
or
mov
ret
push
jbe
add
jge
enter
addb
ret
cs
cmc
lds
loop
insl
mov
sbb
loop
push
and
ret
push
mov
adc
pop
pop
lock
cmp
pushf
in
in
popa
aas
in
push
popa
out
pop
pop
lds
and
test
push
xlat
inc
fcmovbe
repz
jle
mov
fstp
or
mov
insl
mov
and
push
rcr
adc
in
sbb
lock
fwait
testb
cmp
mov
dec
push
std
and
or
ret
cli
cmp
sub
push
xor
mov
ss
outsb
clc
ljmp
lods
in
mov
pop
in
jge
enter
ret
lock
enter
mov
cmp
push
mov
cmpsb
jecxz
push
fldt
pusha
and
inc
shrl
fidivrl
pusha
aam
aas
jno
imul
das
fs
icebp
push
sub
dec
pop
push
or
iret
fidivrs
dec
push
mov
and
xchg
jns
xchg
pop
mov
cmc
nop
stos
sarb
pusha
scas
stc
jle
cmpsl
pop
hlt
fcmovb
rclb
xchg
cmp
data16
add
imul
pop
cmp
cmp
xchg
mov
mov
xchg
xor
sti
mov
fisttpll
sub
loopne
adc
arpl
mov
fsubs
mov
dec
fistl
scas
pusha
mov
mov
fstp
jae
fldt
mov
mov
or
out
mov
das
sahf
pushf
orl
add
adc
push
cmp
out
lods
xchg
notl
mov
dec
sbb
sbb
xor
scas
cli
or
movsb
dec
sti
loopne
scas
or
icebp
mov
out
adc
adcb
jo
cmp
lock
cmp
add
and
fiadds
jae
nop
lods
fistpll
push
xlat
loop
testl
add
out
xor
inc
fidivrl
adc
ljmp
ljmp
lcall
fsubs
ret
addb
js
add
and
and
das
or
fs
into
cmp
ret
out
mov
adcb
add
out
xor
icebp
dec
out
and
insb
push
adc
sbb
inc
add
and
adc
mov
pop
lcall
test
and
dec
jp
ret
fstp
push
je,pn
xchg
fstpl
das
inc
add
lahf
aas
pushf
ja
testl
popf
sbb
in
xor
and
loope
insl
mov
adc
dec
ret
fstp
ds
xchg
fstpl
and
inc
cli
xchg
lods
call
out
int
es
add
push
mov
xchg
pop
jmp
and
addb
add
jo
cmp
jb
mov
xor
xlat
test
das
lock
inc
flds
pop
lods
in
xchg
in
inc
push
cmp
jno
sub
mov
add
pop
mov
push
stos
mov
push
fsubs
clc
pop
mov
mov
push
vmovd
cmpsb
loopne
movb
lock
lcall
push
repnz
lods
or
add
out
mov
mov
add
or
adc
mov
mov
mov
inc
loop
outsb
imul
mov
outsb
movsb
push
dec
jae
lds
pop
lock
jae
jo
int
pop
jecxz
xchg
adc
fadds
xor
jl
lcall
add
inc
ss
add
imul
test
sbb
push
loop
or
xor
mull
incl
jmp
fstp
push
dec
out
je
or
std
jo
cld
xchg
scas
jg
and
fwait
outsb
mov
sti
movsl
inc
xor
imul
cs
cltd
fimull
jge
test
pop
lock
cwtl
popf
imul
testb
sub
and
push
or
pusha
dec
pop
lock
jne
push
aaa
mov
lds
inc
mov
scas
and
ss
sarl
add
dec
xor
xlat
cmpsl
mov
or
xor
sub
mov
push
cld
aad
lds
mov
and
imul
sub
pushf
adc
dec
sub
sbb
add
mull
dec
pop
ds
imul
mov
cld
cltd
ss
jno
jge
data16
cltd
aad
push
pop
dec
aaa
mov
adc
fucomp
rcll
or
fiadds
adc
ljmp
xor
ljmp
or
fxch
cmc
inc
cmp
cmp
push
hlt
jb
sbb
inc
je
and
ss
pop
cmp
insl
inc
out
jmp
clc
xchg
adc
xchg
and
rorl
sahf
mov
into
inc
mov
fldl
fidivrs
pop
mov
fadd
push
jne
push
inc
sbb
out
fdivl
sti
mov
push
pushf
je
fldt
mov
mov
das
repz
lods
pushf
enter
sub
dec
cmpsb
js
int3
cmp
lcall
sti
cmpsl
sahf
hlt
sti
mov
adc
mov
push
shll
leave
in
dec
or
fmuls
add
enter
jno
mov
and
test
shlb
call
in
and
xchg
jl
out
or
sbb
dec
enter
enter
fdivrl
fmull
cs
fld
fstpl
push
fadd
stc
inc
add
jnp
in
mov
sbb
xor
roll
movsl
jecxz
jnp
popf
push
dec
jns
jp
pop
popa
pop
xor
imull
sahf
cli
pop
inc
gs
fsubrp
jmp
mov
imul
add
jmp
dec
aam
xor
fistpll
xchg
sbb
lcall
sahf
stos
fldenv
pop
fnsave
inc
dec
loope
inc
in
test
ror
or
fs
fbstp
add
mov
fwait
inc
in
outsl
dec
jle
punpckhdq
jp
fnstenv
imul
das
imul
gs
xchg
test
stc
and
std
jns
add
sub
and
xor
or
ret
jb
lret
xchg
ja
and
in
xchg
cmpsl
std
mov
and
enter
popa
xchg
int3
stos
stc
dec
jge
aam
cld
leave
in
and
imull
sbb
lret
clc
das
push
push
add
loopne
sbb
adc
sahf
fcmovnb
mov
sbb
cmp
loop
test
fistl
out
clc
loope
push
adc
sub
ja
gs
add
push
daa
add
rclb
inc
fistpl
stc
xchg
fdivr
push
lods
cmp
and
inc
push
in
jb
mov
ss
push
pop
je
outsl
ficomps
fwait
jp
lock
addl
adc
fimuls
and
push
dec
mov
push
xchg
loopne
push
outsb
lcall
dec
mov
pusha
shl
rol
push
jbe
sarl
and
pop
adc
pop
mov
add
jo
imul
ljmp
mov
mov
icebp
mov
pushl
adcb
addb
dec
outsb
lea
jae
mov
loop
imul
adc
and
loope
push
jne
mov
sbb
testb
in
mov
leave
fimuls
and
shrl
clc
outsl
sbb
enter
aam
adc
sti
dec
test
push
stc
test
fnstsw
xrstors
mov
adc
jno
imul
add
outsb
mov
cmp
adc
jecxz
arpl
push
std
lret
incb
sub
loopne
push
aaa
outsb
cwtl
sbb
loopne
imulb
or
subb
push
cmp
scas
rorl
push
lock
rolb
ret
and
add
jb
push
imul
push
out
imul
call
xchg
push
aad
loopne
addl
cmc
arpl
fbld
ja
insb
dec
ret
fstp
add
subl
pop
notb
sbb
pop
jle
adcl
rolb
imul
mov
cs
scas
fisttpll
inc
dec
fcoml
mov
daa
jno
mov
adc
addr16
cmp
mov
call
pusha
les
out
mov
push
mov
xchg
ss
push
or
cmp
adc
loope
xor
in
xchg
in
mov
mov
mov
cmp
and
movsl
outsl
xchg
fistpl
xchg
bound
addr16
cld
lcall
or
cmp
fdivs
lahf
mov
cmp
jg
inc
adc
push
inc
mov
cmp
and
bound
popf
push
xor
rcrl
or
mov
ja
push
cmp
xor
add
push
ret
repnz
add
push
cmp
mov
fidivrs
inc
mov
fstp
push
dec
out
sub
or
mov
cmp
jne
rcl
pusha
in
jb
mov
pop
into
mov
popa
xor
adc
add
js
imul
imul
dec
scas
push
jecxz
in
mov
mov
in
cmp
neg
lods
add
std
jo
hlt
es
or
lret
loopne
clc
stos
out
dec
push
cwtl
xlat
dec
dec
fstpt
fs
arpl
mov
cmp
test
filds
loopne
mov
in
add
dec
leave
push
xor
mov
push
pop
shll
mov
xchg
aas
sbb
inc
add
cmp
ss
pop
repz
fisttpl
movsl
push
rolb
dec
enter
test
sub
adc
pop
sti
sub
push
es
loop
push
sub
ljmp
mov
and
mov
subb
sub
fbld
jae
xor
push
push
mov
jnp
hlt
aad
add
jae
cmpsl
nop
adc
sub
out
lret
push
repz
push
lret
repnz
aad
adc
rcr
adc
push
mov
inc
pushf
std
xor
testb
loop,pn
cmc
xchg
in
inc
push
mov
cmp
pop
mov
xor
pop
lock
adc
adc
mov
popa
push
sti
movsl
rcrl
outsl
push
int3
outsl
nop
aas
mov
and
xor
mov
lret
test
xchg
repz
and
movsl
dec
push
mov
ss
add
fstpt
push
xchg
ja
push
jle
jmp
daa
stos
movsb
add
lret
insb
xor
inc
leave
cmp
dec
ljmp
sahf
mov
push
popa
mov
hlt
sbb
xor
sti
mov
fiadds
push
fnsave
inc
dec
loope
scas
xor
fwait
stos
mov
push
neg
inc
sbb
xchg
loop
loop
je
adc
xchg
movb
faddl
push
jbe
push
ret
jae
fldt
fsts
push
add
push
jmp
sahf
dec
jne
inc
xchg
lcall
into
scas
cld
lcall
or
cmp
in
jne
lock
pop
jo
enter
call
incb
and
adcb
out
adc
fwait
pop
inc
jns
in
insl
mov
data16
incb
mov
fsts
ljmp
jle
xchg
stos
sbb
xchg
pop
pop
lock
aad
sbbb
sub
push
vpaddd
lock
mov
cwtl
fildll
push
ud2
and
add
nop
daa
fcmovnu
ja
jb
sbb
sub
and
mov
or
xchg
add
jb
jecxz
out
bound
in
and
rorl
or
sbbb
fwait
dec
jb
jb
mov
xlat
pop
jo
lock
inc
dec
loop
fwait
sahf
mov
rolb
out
lock
icebp
sahf
or
ficompl
incb
loopne
dec
outsl
test
lahf
xchg
aad
sti
loopne
xchg
or
icebp
xchg
jo
cmp
cld
scas
aad
sbb
and
out
xor
sub
sub
xlat
enter
push
fadd
pop
push
mov
and
cmpsb
fistps
push
aam
xchg
push
xor
dec
mov
scas
je
push
leave
adc
and
stc
sbb
jnp
ret
test
cwtl
push
inc
mov
mov
and
adc
movb
sbb
cmp
and
push
data16
outsl
stos
or
and
cltd
in
loope
pop
inc
inc
push
dec
enter
push
pop
movsb
cmp
incb
sub
mov
push
pop
fstps
sbb
cmp
fisttps
in
add
and
inc
fsubrl
push
and
imul
add
jb
inc
jbe,pt
adc
dec
enter
out
in
ret
mov
mov
out
movsb
sub
xlat
sbb
pop
adcl
out
sbb
and
cmpsb
fistps
pop
popf
inc
movsl
mov
fdivr
push
lock
or
movsl
je
push
es
fistpl
pop
mov
dec
xchg
js
adc
sub
imulb
fsubrp
mov
push
into
pop
sub
pop
push
dec
fst
inc
mov
divl
mov
adc
test
jecxz
mov
sbb
dec
jo
js
add
ds
sti
movsl
loop
stos
lret
addr16
dec
cmp
cld
aad
xor
incl
sbb
mov
inc
push
imul
pop
xchg
sbb
gs
xor
gs
add
ja
imul
imul
cmp
dec
jmp
aam
aad
adc
outsl
xor
sub
scas
ret
jb
mov
outsl
inc
mov
test
out
cmp
inc
flds
mov
int
in
inc
outsb
loopne
shlb
xorb
jle
add
ret
fstp
xchg
outsb
mov
jo
stos
jb
lret
mov
ds
xchg
roll
cmp
imull
stc
shlb
or
xchg
mov
stos
mov
adc
mov
push
out
rcll
addb
addb
int3
and
mov
aam
xchg
push
lds
push
push
push
sbb
fs
orl
scas
ret
xor
push
loop
popf
pop
adc
pop
dec
mov
cld
xchg
ss
ljmp
dec
rcrb
jae
outsl
fiaddl
imul
xchg
imul
outsb
lcall
lahf
xor
mov
mov
inc
ljmp
push
flds
leave
mov
out
cmp
jnp
xchg
adc
lcall
lock
enter
lods
sarb
or
xor
negb
inc
imul
cwtl
or
outsl
fucomp
sti
fidivrs
pop
sbb
jle
ficompl
ja
data16
and
dec
test
ljmp
sub
inc
dec
push
lock
jb
aaa
movl
inc
lahf
fucomp
daa
call
lods
xor
out
gs
rclb
je,pn
xchg
pop
xchg
push
fadd
stc
jmp
sub
add
loope
pusha
pushf
pop
stos
mov
pop
out
gs
jb
xchg
push
out
clc
sbb
shrl
jecxz
outsl
cmpsb
lcall
push
js
lahf
dec
nop
add
fs
les
jle
std
push
lahf
movsl
adc
push
gs
xlat
adc
testb
mov
fbld
ja
cmp
fcoml
jne
and
es
and
addb
fildl
add
repnz
rol
xchg
add
push
fadd
in
add
or
cmpsl
in
fcoml
sbb
cwtl
add
or
mov
in
push
lock
xchg
fildll
jnp
dec
lret
addr16
cltd
xor
mov
jg
pop
push
aam
jbe
fmulp
xchg
aam
sti
loopne
dec
or
icebp
mov
call
rcr
pop
jge
mov
cmp
mov
ja
in
and
push
cmc
sarl
clc
sti
enter
pop
cmc
ret
push
aas
add
rolb
push
dec
das
cwtl
or
outsb
add
stc
xor
subb
in
jne
enter
push
push
dec
mov
dec
sub
sbb
xor
gs
jb
pop
push
push
pop
and
or
sub
xor
cmp
jns
mov
std
cwtl
xlat
mov
test
pop
mov
in
fcomp
mov
push
in
pop
pop
dec
add
cld
sub
add
xchg
int
sbb
or
ljmp
sub
mov
xchg
push
dec
aam
lods
loopne
adc
pop
addr16
cltd
fadds
imul
inc
add
xchg
sbb
addb
loop
int
enter
hlt
out
and
jl
lds
fisttpl
arpl
loope
pop
xor
sti
mov
mov
push
xor
inc
dec
loopne
adc
pop
pop
js
jo
fstp
decb
hlt
push
or
pop
xlat
stos
or
mov
in
into
push
cmp
mov
xchg
sbb
lcall
sahf
mov
inc
shll
xor
loope
inc
in
je
jecxz
fldl
fdivr
push
lock
scas
std
cmp
xor
jo
or
sbb
testb
xor
shl
cmp
dec
jmp
les
insb
jae
data16
ror
pop
jo
cmp
pop
jbe
jnp
or
lock
fistpl
jle
notb
shll
mov
add
jnp
and
mov
mov
fstps
int3
pop
mov
pop
adc
out
jmp
ds
xchg
fisttpl
loopne
std
jle
mov
mov
and
addr16
sub
xchg
dec
jo
iret
xchg
mov
sti
loopne
testb
push
cmpsb
jns
icebp
mov
jne,pn
mov
frstor
jbe
push
aaa
add
sub
xor
rcll
ds
insb
push
or
dec
add
adc
not
das
loopne
incl
push
loop
inc
hlt
repz
xchg
pop
cwtl
add
imul
lods
addr16
cltd
rolb
ja
push
aad
fidivrl
mov
adc
dec
mov
pop
ret
push
mov
jp
or
lret
dec
mov
or
add
lock
int
adc
mov
cmp
pop
subl
lods
fidivrs
decl
leave
into
in
push
jnp
sbb
sbb
dec
mov
lret
and
pcmpgtd
out
pop
or
jecxz
in
pusha
mov
adc
jns
add
mov
push
les
pop
lock
cmp
popf
sbb
loope
test
and
and
fdivs
pop
inc
mov
fmuls
mov
fadds
inc
or
imul
mov
add
fadd
pop
loop
fadds
lods
int3
xchg
in
inc
jge
pop
rcll
lret
out
add
pop
jne
scas
pop
cmp
and
scas
push
jns
push
mov
push
fs
movsb
fimull
cwtl
fcmove
adc
mov
divl
sarl
out
jb
pusha
adc
gs
sbb
rolb
push
addl
fstps
cmpsl
sub
hlt
pushl
adc
loope
adc
out
addb
cmp
jo
fstp
dec
pop
mov
aad
movl
enter
mov
push
xchg
fadd
pop
movsb
mov
or
jo
cmp
jl
lds
mov
clc
inc
sahf
rclb
out
xor
inc
mov
lods
fcoms
pop
int
in
add
mov
add
xlat
in
popf
push
call
lods
push
pushf
je
push
sbb
adc
xor
sbb
jne
icebp
mov
shl
push
rorl
xor
mov
jo
lods
scas
mov
ds
addr16
fcoml
push
lock
pop
sahf
inc
clc
cld
push
fnsave
mov
test
hlt
jmp
outsl
xchg
or
adc
sbb
cmc
mov
cmp
push
out
jb
fwait
jnp
xchg
cmp
adc
lret
insl
fistl
or
gs
mov
xor
sti
mov
fisubs
pop
xchg
fnsave
inc
dec
loope
sbb
movsb
jb
aam
jg
out
clc
sarb
je
pop
pusha
lds
lret
enter
cmp
and
and
cwtl
ss
jns
fs
fmul
add
sub
sbbl
clc
addb
pop
xor
fcmovnb
cmp
add
fnsave
xlat
fucomip
arpl
sbb
rclb
test
dec
sti
loopne
adc
lcall
std
jae
js
adc
fisubrs
adcb
lahf
push
jo
in
push
lock
add
adc
lret
fildll
sbb
dec
lret
xor
xor
sbbb
and
inc
vpaddd
lock
mov
aas
fistl
gs
push
dec
lret
or
xchg
jns
jae
sub
push
mov
sahf
les
pop
lock
mov
adc
push
fidivs
inc
enter
adc
add
hlt
xchg
outsb
inc
pop
fnclex
jp
mov
mov
ret
sbbb
sahf
adc
lock
icebp
xor
and
or
mov
mov
jns
rcr
outsl
mov
movsb
mov
or
loope
incb
sarl
ret
mov
jbe
js
fstps
cwtl
jmp
add
adc
filds
jmp
or
addb
cmpsb
jns
jne
in
push
lock
cwtl
fnstcw
fistl
jns
cli
call
jmp
test
inc
cmp
pop
scas
mov
sbb
ljmp
ss
mov
fstp
jae
fldt
xlat
js
negb
mov
mov
inc
neg
enter
sbb
add
in
adc
xchg
ss
adc
leave
sbb
loop
push
jmp
jae
mov
aaa
daa
inc
sbbb
mov
clc
fs
pusha
push
jae
fldenv
xor
pushf
sbb
js
dec
daa
cs
adc
rclb
cmp
in
jg
stos
lret
push
inc
add
xchg
dec
and
pop
hlt
addb
dec
outsb
mov
mov
jb
mov
adc
sbb
xor
jb
jge
scas
jno
out
lock
or
fstp
mov
push
fs
pop
xchg
jne
xchg
inc
jb
push
inc
fadds
lods
in
in
inc
jge
aam
xor
outsl
mov
out
add
pop
stos
cmp
pop
cli
inc
aam
and
out
push
aad
test
cmp
lods
in
and
pusha
sahf
pop
or
fcmovu
pop
shll
ret
gs
lock
fldt
xor
fbstp
sbb
sbb
dec
outsl
int3
fistpl
dec
dec
bound
movsl
and
xchg
sti
lods
bound
xlat
add
xor
stos
data16
jne
inc
cmp
ja
sub
arpl
mov
mov
jge
sti
faddl
inc
dec
in
test
or
sbbl
fadd
or
pop
inc
and
cmpsb
loopne
fsubl
jmp
and
adc
or
lcall
std
mov
mov
pop
push
push
xlat
push
insl
fdivs
outsb
cld
insb
mov
inc
imull
dec
jecxz
adc
mov
jns
shrl
ljmp
mov
addb
addb
or
nop
leave
mov
cld
rorb
mov
cmp
dec
xor
or
fbstp
mov
jecxz
mov
cld
lcall
stc
pop
mov
rcrl
pop
loopne
in
stos
mov
dec
add
pop
stc
cmpsl
inc
lods
inc
stos
loop
push
and
and
dec
loopne
mov
movb
addr16
jb
ret
shll
stc
fdivr
push
inc
mov
cmp
xor
mov
repz
dec
mov
cmp
push
push
inc
sbb
aam
mov
pop
mov
inc
push
loope
pop
psllw
fnsave
fs
pop
test
std
outsl
lahf
sti
mov
into
repz
popf
jmp
push
cmc
addb
lahf
stc
outsl
lret
decb
enter
clc
sub
inc
and
dec
enter
out
imul
in
jnp
js
xor
stos
push
rcrl
sahf
stos
mov
out
fdivrl
inc
dec
loop
aam
xor
fstps
adc
sbb
add
loop
shll
inc
je
inc
inc
loope
fnstenv
mov
xchg
inc
mov
test
ss
aam
pop
leave
lods
lock
in
inc
push
rcrb
test
mov
pop
incl
sbb
push
mov
mov
push
pop
lock
add
or
stc
into
mov
add
out
lret
jae
mov
xchg
sub
or
xchg
xor
pop
gs
jb
xchg
xor
popl
dec
adcb
je
push
or
adc
xor
mov
cmp
jmp
xchg
aas
cld
push
in
out
aam
ret
sbb
out
add
dec
xchg
nop
cmp
repz
jmp
mov
push
leave
je
fldt
pop
push
push
pop
jno
negl
enter
push
lods
mov
cli
jns
in
cld
imul
icebp
scas
cwtl
std
imulb
sahf
or
jecxz
pop
pop
mov
pop
push
jge
jae
pop
aam
push
inc
fiaddl
mov
inc
addr16
cmpsl
shlb
incb
cmp
mov
or
test
fcoms
push
subb
fstp
cmp
inc
ljmp
dec
outsb
mov
stc
or
inc
push
dec
lret
enter
out
push
mov
lret
ljmp
paddd
rorb
fisubs
idiv
jmp
push
outsb
arpl
xlat
push
xchg
fimull
stos
outsb
ret
cwtl
sti
or
dec
or
push
shrl
sahf
mov
pop
jle
fsubrl
inc
dec
loopne
or
sbb
xor
or
lea
out
adc
sbb
fs
xchg
scas
mov
ret
cmc
inc
decb
mov
cmp
inc
jne,pn
xchg
fdivl
addb
faddl
mov
stos
push
fcmovb
mov
jp
inc
enter
cli
pusha
leave
aad
sub
imul
mov
in
dec
loop
nop
adc
into
sahf
mov
lea
lock
loopne
sbb
lock
lcall
test
push
mul
xor
insb
mov
pop
and
iret
dec
sub
push
mov
cmp
push
pop
lock
dec
lret
xor
add
jb
gs
and
mov
sbb
cmc
insb
je
stos
cmp
mov
mov
nop
lds
arpl
lock
in
andl
jb
std
bound
xor
in
fcmovb
popl
or
jae
or
ret
xchg
mov
push
mov
fistpll
das
mov
scas
add
stc
pushf
push
push
xor
jno
pop
xor
fistpll
repnz
loope
mov
mull
movsb
add
dec
or
dec
int
jl
out
orb
fstpl
push
incl
ret
push
jne
sbb
fwait
in
mov
cmp
mov
outsl
les
pop
lock
enter
repnz
out
mov
subb
and
adcb
xor
or
test
daa
pop
sbb
xor
sti
and
mov
pusha
mov
jecxz
jmp
fldcw
jp
nop
imul
ss
sub
push
inc
movsw
jns
cmp
jp
orl
mov
cs
popa
fstps
adc
sub
loopne
sbb
jae
ret
sbbb
cmp
push
lock
jo
outsl
movsb
ljmp
popf
add
div
cmp
fcoml
adc
pop
int
insl
jae
repz
or
mov
ficoml
clc
imul
fmuls
pushf
les
adc
out
out
pop
jg
ficoms
jae
addb
rorb
cld
cwtl
ss
push
dec
cmp
or
push
xor
fdivl
fldt
push
ret
and
inc
push
stc
or
lods
cld
dec
in
jne
or
mov
xchg
push
cmpsl
cmp
dec
loope
out
add
xor
sub
dec
les
fisubl
addb
jno
outsl
lret
fstp
incb
ja
pop
test
roll
jmp
movsb
ss
and
in
popf
push
mov
add
fidivs
mov
popf
cmp
sub
stc
xor
sti
cli
push
mov
mov
xor
push
push
popa
repz
lock
mov
ficompl
cmp
pop
add
fisttps
movb
subb
std
arpl
xchg
stos
pop
std
jbe
mov
pop
jge
enter
cltd
es
dec
sti
mov
mov
sub
inc
dec
loopne
adc
pushw
cmpb
jmp
and
addb
fildl
add
icebp
pop
xchg
out
enter
sbbb
in
push
lock
or
fidivs
lahf
mov
insb
mov
cmp
cmc
jb
jle
jle
popa
out
lock
fisttpl
cmpsl
subb
xchg
movb
and
imul
pop
sti
pop
incl
xchg
mov
stos
insl
xchg
enter
shll
scas
inc
lcall
cmp
cmovno
inc
mov
lods
enter
dec
push
pop
movsl
jl
cltd
sbb
jle
scas
dec
sbb
or
mov
mov
cmpsl
es
cmp
loop
mov
subb
xchg
daa
lock
mov
loope
sbbl
jmp
push
repz
push
aad
popf
inc
mov
fidivl
dec
jae
cmp
ret
movswl
and
mov
jns
imul
pusha
xor
inc
sub
in
std
lret
lahf
cmp
js
imul
aas
or
cmp
jl
imul
push
enter
enter
mov
xchg
call
pop
cmp
inc
lods
and
or
jp
jo
mov
cmp
cmc
out
mov
cmp
mov
popa
push
cwtl
add
imul
jge
repnz
rcll
mov
ss
mov
fdiv
pop
mov
imul
mov
insl
out
pop
or
jbe
mov
and
dec
leave
enter
loope
dec
sbb
jle
mov
lock
outsb
lcall
push
dec
leave
enter
loope
inc
ret
pop
loop
mov
cmp
das
fdivrl
inc
into
push
ret
cmp
cmpsl
pop
rcll
dec
arpl
adc
mov
push
bound
mov
pop
shrl
aam
clc
repnz
pop
jae
add
inc
dec
fcomp
pop
lcall
test
mov
popa
out
fiadds
and
je
mov
xlat
daa
xchg
rorb
loopne
push
or
icebp
sahf
stos
sbb
jno
mov
fstp
jae
stos
mov
mov
cmp
push
push
dec
sbb
lds
shll
jae
pop
mov
shlb
push
loope
mov
js
fs
sub
dec
add
xchg
sbb
sbb
ret
push
lock
jae
movl
pusha
popf
add
clc
adc
push
push
xchg
das
pop
std
and
loope
push
cmp
movl
pusha
pop
jb
inc
fadds
lods
int3
xchg
in
inc
pop
pop
pop
fldcw
and
add
pop
stos
dec
sti
mov
inc
inc
out
scas
mov
adc
sub
cmpsl
test
out
cmp
adc
rorl
sahf
mov
mov
imul
mov
jb
jnp,pt
scas
iret
jb
mov
addb
or
mov
xor
push
adc
fnstenv
xor
gs
jbe
stos
movsb
lods
cmc
fcoml
cltd
or
sarb
outsb
movsl
ljmp
add
dec
insb
cld
jl
lock
pop
fwait
inc
sbbb
jno
dec
add
add
out
popf
popf
mov
xchg
insl
lods
xchg
in
inc
push
fistpll
push
push
repnz
or
mov
xchg
xor
outsb
mov
pop
sbb
mov
movb
dec
je
ret
inc
lahf
sub
push
sub
xchg
shll
push
lock
jnp
fnop
call
jne
rolb
adc
jmp
mov
and
out
adcb
add
addb
mov
inc
ret
sbb
push
std
popf
mov
lods
outsl
fistpl
mov
hlt
fwait
mov
xchg
xchg
lcall
adc
mov
push
imul
ss
and
xchg
xlat
dec
addr16
cmp
inc
jl
lods
int3
xchg
in
inc
pop
sbb
inc
adc
xchg
mov
add
pop
and
pushf
push
mov
push
les
pop
lock
pusha
mov
fcomip
sahf
mov
xor
out
out
push
push
movsl
sub
add
xchg
dec
mov
ljmp
movb
mov
pop
shrb
xchg
mov
fstp
je
out
clc
adc
mov
lods
xchg
sbb
mov
pusha
pushf
jb
dec
enter
leave
mov
cmpsb
js
mov
push
adc
popf
lods
test
or
xchg
pop
nop
addr16
push
adc
sbb
cmc
cs
gs
jb
adc
sub
prefetch
or
fsave
in
xor
jb
inc
leave
sub
in
jno
jp
in
cwtl
or
je
aad
imul
jp
ds
addr16
cltd
adc
mov
or
add
push
xchg
not
or
fmuls
loop
pop
jno
enter
icebp
cmp
add
xchg
inc
scas
pop
cmp
xchg
inc
push
xchg
iret
xor
nop
fidivl
xor
popf
xor
push
in
insl
jo
int3
mov
cwtl
sti
stos
dec
shr
rorb
cmp
out
fbstp
jns
cmpsl
add
fcmovne
jle
aad
pop
lods
stc
xchg
in
inc
jp
pop
mov
dec
add
add
pop
jge
flds
xor
outsb
xchg
enter
mov
add
pop
jp
aam
mov
ljmp
ss
pop
and
push
clc
xchg
sub
adc
stc
xorl
mov
lock
fnsave
push
cmp
les
jne
lock
push
popf
xchg
shl
insl
jp
xchg
movsl
shll
.byte
xchg
