sub
add
pop
loopne
sub
loopne
movsb
push
pusha
add
push
adc
push
or
add
mov
sbb
add
add
push
add
add
addl
add
rolb
or
hlt
or
add
pop
loopne
sbb
loopne
pusha
add
loopne
out
jo
add
and
sbb
rolb
or
addb
push
add
mov
or
jne
loopne
jecxz
lock
and
fldl
jo
and
inc
add
add
sub
lock
or
add
push
jo
inc
push
rolb
addb
add
add
inc
add
loopne
dec
add
add
or
add
or
add
adc
push
or
add
pusha
add
addb
add
add
or
add
add
add
add
add
or
add
add
add
or
add
rolb
mov
and
je
lock
push
loopne
imul
add
push
pusha
add
push
add
push
or
pusha
add
rolb
mov
or
add
movups
add
jo
mov
pop
adc
orb
add
add
add
or
xor
push
or
add
add
xchg
or
push
add
or
add
add
add
add
or
add
arpl
add
or
add
arpl
add
or
add
pusha
or
add
add
add
add
add
add
add
push
and
imul
insb
or
nop
add
mov
mov
or
add
add
adc
popl
and
ljmp
add
add
add
lock
adc
jae
rolb
sub
loopne
or
and
add
add
add
and
jl
xor
mov
add
jnp
add
seto
or
addb
punpcklbw
add
add
add
add
add
or
add
or
and
repnz
add
push
pusha
add
push
add
push
loopne
rorb
add
add
jo
rorb
rolb
mov
add
rorl
add
mov
clc
or
add
or
add
add
mov
push
add
lods
or
add
add
cmpsl
add
addb
or
add
push
mov
lcall
add
add
and
insb
or
add
push
add
xchg
or
in
push
popl
mov
mov
movl
movb
mov
mov
push
popl
call
movl
movb
cmp
jne
movb
ret
push
popl
mov
push
add
push
add
sbbw
mov
push
popl
push
popl
pusha
push
popl
call
push
popl
mov
xorl
push
popl
push
push
popl
mov
xorl
push
popl
movw
addl
subl
sbbl
push
addl
xorl
call
push
popl
cmpl
jne
andl
call
push
popl
ret
subb
jmp
subb
xor
orw
push
popl
mov
xorb
subw
shl
or
addb
mov
push
popl
shl
or
addw
mov
push
popl
cmp
jne
push
popl
mov
xorl
subb
sub
sbbw
push
popl
call
xorl
orb
popa
orl
pusha
andl
call
push
popl
subb
mov
push
popl
push
sbbl
xorl
push
popl
movw
addl
push
popl
push
orl
call
push
popl
push
push
popl
push
popl
xorl
push
popl
subl
addl
movw
subl
pop
and
cmp
jne
push
popl
ret
or
popa
subl
push
popl
call
xorl
push
push
popl
xorl
push
popl
xorw
addl
xorl
push
xorb
call
sbbb
push
push
ror
mov
add
xchg
orw
xorb
mov
add
shl
add
push
sub
sbbb
xor
sbbw
sbbw
push
sbbl
push
popl
call
push
popl
push
movl
mov
movb
movw
push
orb
push
popl
jmp
andb
pop
sbbb
sub
mov
push
popl
push
movb
push
andw
push
push
popl
xorw
mov
push
popl
mov
subl
rep
push
popl
push
popl
pop
push
popl
pop
push
inc
mov
xor
xchg
push
add
lea
mov
sub
xchg
xor
push
popl
xor
push
popl
xor
jmp
movb
andb
sub
push
popl
subw
mov
sub
add
sub
andb
subl
sub
add
mov
andw
sub
or
or
jne
or
push
popl
add
xor
addb
jmp
subb
mov
orb
shr
push
popl
shl
sub
mov
push
popl
push
popl
add
andw
push
popl
jmp
sub
sub
and
andl
mov
push
popl
add
xorb
or
cmp
jne
movw
mov
addb
add
push
popl
mov
addb
add
subb
subw
cmp
jne
orl
subb
ret
push
popl
push
subl
and
xor
sub
pushl
andl
pop
xor
lea
xorl
or
or
mov
xorw
mov
push
popl
lods
addl
mov
push
popl
pop
push
popl
ret
push
popl
movl
push
push
popl
mov
xor
add
sub
push
popl
push
orw
push
push
popl
push
popl
push
andl
subl
push
addl
push
sub
xorl
mov
addb
xorw
mov
and
push
popl
add
xor
pushl
sbbb
mov
subb
push
popl
add
or
add
xor
mov
andl
add
push
popl
xorw
xor
push
popl
lea
push
popl
push
popl
mov
xorl
or
add
movl
mov
sub
subb
xor
push
popl
push
popl
rol
or
xor
andl
inc
add
subl
cmpb
jne
push
popl
push
popl
cmp
je
or
push
popl
inc
xorl
cmp
jb
add
andl
mov
andl
add
movw
movzwl
andb
addl
mov
push
popl
add
orw
andl
mov
movb
push
popl
add
xor
pop
push
popl
cmp
jbe
andw
push
popl
cmp
jae
push
popl
addl
pushl
xorl
pushl
push
popl
subl
push
and
subb
xorl
subw
addl
andl
pushl
push
popl
call
subw
call
addl
pop
push
popl
sbbl
pop
andw
xorw
pop
xorl
andb
pop
or
and
pop
xorl
push
popl
leave
push
popl
ret
push
popl
call
mov
lret
xchg
pop
cmpsb
lahf
loope
adc
ljmp
adc
data16
mov
inc
aad
icebp
inc
push
test
sub
icebp
push
xchg
mov
lret
mov
lods
loope
jl
xchg
mov
scas
mov
inc
inc
mov
dec
addr16
out
stc
inc
aam
dec
or
das
push
stos
and
cmp
mov
data16
mov
and
pop
dec
pop
adc
mov
call
xchg
inc
loop
fwait
out
sbb
mov
sub
jne
rorl
mov
insb
push
adc
push
fdivr
lds
pop
pop
mov
dec
mov
mov
arpl
popa
cmp
das
add
and
sbb
fstpl
icebp
inc
scas
jle
cmp
inc
push
mov
sbb
mov
push
shl
out
push
adc
shll
sub
xchg
test
aam
xor
cltd
mov
cmc
pop
flds
frstor
popa
or
enter
stos
add
les
loop
and
mov
add
push
adc
inc
push
out
sbb
xor
call
stc
lcall
push
add
ffreep
cmp
sub
push
sbb
out
dec
loope
mov
cmp
cli
sub
sbb
xor
scas
jno
and
cmp
fldt
xorb
jo
lods
aad
mov
cltd
daa
out
aas
je
fldt
add
push
xchg
jecxz
lret
inc
xor
dec
outsb
mov
cmpsl
fwait
cmp
or
inc
mov
mov
out
fmuls
aam
aad
nop
mull
cmc
stos
push
or
addr16
sub
jne
cmp
inc
aad
out
dec
push
adc
lea
sub
jae
cmp
cs
stc
cmp
dec
mov
enter
mov
cmp
shll
test
subb
push
fs
xchg
pop
lret
out
push
xbegin
cmc
push
cld
cmc
mov
push
or
inc
cmp
adc
rcl
mov
inc
stos
dec
jnp
aad
jl
adcb
inc
es
push
sub
ret
insl
add
iret
das
movsb
lahf
dec
imul
sub
mov
sbb
loope
dec
aad
push
ja
loopne
xchg
pop
int
fldcw
cmc
ja
insb
add
push
add
in
jmp
iret
mov
addr16
and
mov
xchg
call
insl
call
icebp
adc
sti
call
mov
mov
aas
fstps
mov
xor
imul
cmc
fbld
lret
jp
loop
xor
mov
mov
fwait
outsb
xor
movsl
mov
icebp
xchg
ret
push
ret
mov
test
pop
sub
inc
add
lret
mov
adc
mov
je
out
cmc
dec
sub
loope
loopne
leave
repz
andl
cmp
loope
pop
in
out
lldt
push
rcl
scas
insl
push
cwtl
xchg
ret
jl
das
test
sbb
adc
notl
inc
ss
sbb
sbb
dec
inc
xchg
nop
lods
pop
gs
xor
lcall
sub
psrlq
pop
pop
jns
lret
lret
insb
fstpl
jne
push
push
mov
mov
adc
popf
and
sub
xchg
mov
cmpsb
mov
test
dec
cmp
lods
loope
adc
mov
xchg
sub
lahf
outsb
adc
mov
add
or
adc
dec
shlb
call
mov
aad
clc
lods
pop
popa
or
loope
aas
dec
les
sbb
lcall
mov
xchg
mov
mov
gs
dec
and
notl
ret
cwtl
inc
outsl
fs
js
inc
aad
mov
cmc
fisubrl
int3
lock
cmp
push
into
fwait
ror
cs
lahf
mov
imul
in
arpl
push
dec
ret
insl
mov
leave
fwait
je
mov
cmc
ret
scas
cmp
mov
les
sbb
mov
pop
sahf
dec
mov
push
xchg
stos
das
fwait
adc
popf
mov
xchg
mov
push
clc
out
dec
pop
adc
cwtl
xor
xlat
lret
dec
pop
push
mov
in
gs
add
shrb
outsl
jmp
push
mov
push
out
sahf
addl
dec
mov
pop
xor
dec
jne
xchg
adc
mov
rcll
mov
cmp
aam
movsl
fbld
popl
loopne
add
aaa
fidivs
inc
scas
sbb
mov
mov
fs
push
adc
mov
xchg
out
adc
arpl
imul
fisubs
mov
loopne
adc
aaa
push
xor
push
push
push
and
pushf
das
sbb
cmp
ret
shlb
aaa
push
inc
or
mov
popf
xor
cmpsb
sub
push
adc
aaa
or
mov
or
xchg
jle
ror
ret
out
aam
fwait
imull
fwait
add
mov
and
and
loope
mov
test
addb
mov
je
adc
dec
and
pextrw
mov
cmp
cmp
sbbb
loope
aam
jmp
addr16
jne
pop
imul
cmp
or
fistl
mov
leave
and
jle
push
int3
push
inc
adc
scas
aas
addb
out
dec
push
adc
nop
test
jne,pt
cmp
and
pop
sarl
rcrb
sub
inc
fsub
inc
fidivrl
adc
sub
cmpsb
lea
adc
int
ds
pusha
adc
ja
xchg
xchg
ret
mov
test
addb
mov
ret
test
push
jbe
roll
and
clc
stos
testl
test
clc
cli
out
cmc
sbb
nop
stc
push
lret
stc
fistpll
out
clc
outsl
aad
dec
xor
xchg
push
test
sub
mov
cli
hlt
pop
mov
xchg
xchg
out
pop
mov
dec
and
sti
dec
stos
sub
sbb
loope
dec
add
ret
lea
int3
jns
and
popa
loope
dec
aaa
pop
lea
dec
dec
mov
inc
xorl
shl
subl
test
rorb
push
jg
jno
cmpsl
cwtl
and
cmp
mov
xchg
fadds
sub
data16
jne
push
adc
bound
inc
cmc
out
mov
sub
dec
clc
pop
int
jl
fs
adc
push
push
rcrb
mov
das
es
orb
fs
gs
pushf
and
mov
sbb
clc
xchg
mov
mov
lds
xor
popf
mov
sgdtl
aas
pop
les
sub
cmp
inc
adc
int3
ret
fneni(8087
and
clc
xchg
sub
jge
lea
add
xchg
popf
in
and
mov
pop
fcoms
mov
mov
cmpsb
lcall
shll
cmp
adc
xor
in
pusha
adc
gs
jge
adc
and
mov
dec
shrb
cmp
iret
test
mov
push
mov
push
pop
pop
cmp
inc
popa
inc
into
push
inc
fsubl
aam
mov
enter
test
fxch
sti
out
jb
inc
fisubrs
pop
or
cli
xor
orb
hlt
adc
sub
xor
neg
xor
push
in
sahf
jecxz
push
hlt
adc
pop
mov
aam
push
scas
add
fadd
iret
shrl
sub
or
mov
scas
xchg
fcomps
cmp
fisubrs
push
rclb
aam
cld
iret
or
jmp
mov
jecxz
shlb
push
dec
lods
lahf
test
push
lods
enter
adc
fldl
cmp
mov
movsl
cs
out
cwtl
adc
mov
jb
lret
mov
mov
movb
cmpsb
orb
ss
mov
leave
hlt
lock
or
mov
daa
xor
lods
fwait
in
adc
sbb
lods
add
lahf
cmp
outsb
loopne
mov
mov
inc
mov
pusha
fwait
mov
insl
fs
xor
dec
popa
cmp
push
sub
pushf
xchg
adc
pop
mov
pop
out
xchg
repnz
mov
adc
mov
dec
pop
pop
lea
jnp
ss
aas
xor
arpl
sub
sub
rcr
call
and
pop
fnsave
pop
pop
fstpl
lahf
cmc
dec
out
call
sub
xor
inc
aad
mov
adc
ss
add
fcompl
mov
xchg
pop
xchg
lods
sbb
test
arpl
mov
fdivrs
add
jle
fbstp
dec
insb
inc
testb
xchg
leave
repz
pop
and
mov
out
push
mov
popa
test
dec
dec
js
aam
aam
mov
aad
insl
fsts
push
stos
add
notl
out
cltd
roll
aam
sti
mov
cmpsl
addb
mov
fstps
jg
stos
hlt
add
pop
test
insb
fwait
scas
mov
scas
clc
xorl
xchg
mov
repnz
insb
dec
push
adc
dec
addr16
inc
cmp
stos
push
xchg
jp
ror
jmp
or
push
mov
lahf
sbb
int
addl
lret
insl
fs
lods
inc
jnp
pop
jp
sti
mov
out
push
mov
adc
test
les
pop
js
mov
or
aaa
push
dec
and
daa
into
mov
in
cmp
lahf
xor
push
or
cwtl
sub
sub
popa
loope
mov
test
dec
aam
icebp
orb
sub
fwait
test
push
mov
mov
mov
adc
fisttpll
insl
mov
js
xchg
jge
ror
repnz
sbb
push
shll
insl
mov
or
imul
jb
repnz
adc
pop
xchg
rol
cwtl
leave
pop
rcll
inc
mov
adc
mov
data16
xchg
xchg
xlat
dec
sarb
push
mov
jbe
and
mov
dec
fistpl
inc
sub
sahf
cmp
fisubrs
xchg
jl
push
aaa
fwait
sar
pop
sub
push
ret
xor
sbb
rorl
xchg
mov
mov
fwait
xchg
ret
insb
inc
pop
push
fwait
mov
imul
shl
mov
lea
mov
jae
cmp
call
mov
sub
shl
mov
stos
fwait
inc
in
out
or
lds
and
sub
sub
push
stos
ret
push
xor
sbb
jle
inc
imul
fcmovb
insl
fs
push
xor
mov
mov
push
add
dec
aam
int3
out
fsts
les
subl
scas
xchg
adc
lea
xor
mov
shl
mov
cmp
int3
ss
sbb
stos
cmp
mov
sub
fildl
pop
xchg
es
ret
xchg
dec
mov
mov
icebp
cmp
xor
push
sti
jmp
inc
es
movsl
mov
mov
and
pop
adc
mov
aad
insl
fnstenv
cld
fsubrp
mov
mov
sub
ficoml
int
mov
push
add
gs
lods
adc
test
xchg
jb
fnop
xor
mov
inc
cmp
xor
or
inc
stos
subb
and
out
adc
xor
lods
xor
mov
test
sub
pop
les
jmp
lret
das
add
cmpsb
adc
outsl
xchg
cltd
inc
cmp
cmp
or
ss
mov
cli
sub
and
mov
cmc
mov
sar
aas
lret
testl
movb
xor
data16
sahf
xchg
xor
dec
rorb
sbb
mov
mov
inc
aad
outsb
mov
or
cmp
adc
es
mov
outsb
and
xchg
lds
leave
faddl
sbb
cwtl
je
rolb
or
mov
imul
xchg
dec
sub
ret
insl
fs
inc
mov
push
stos
mov
pop
test
push
dec
lret
push
ret
dec
mov
aad
mov
sbb
loop
sbb
xor
fisttpl
or
lea
dec
imul
mov
add
lods
into
mov
cmp
xor
stos
ror
mov
pop
pop
sbb
mov
inc
adc
shl
xchg
push
lods
jbe
push
adc
and
fdivrl
adc
js
cmp
scas
je
imul
push
mov
and
loope
ds
xchg
in
and
jno
test
and
les
push
pusha
cmp
sub
cmp
mov
push
xchg
xchg
push
push
rcl
dec
push
in
jo
test
lock
sti
mov
mov
dec
sub
cmp
mov
cmp
push
sub
mov
inc
xor
cmp
insl
dec
scas
bound
add
lods
je
sub
ret
insl
fs
add
rcr
dec
push
mov
icebp
sub
out
adc
int
dec
clc
pop
xchg
pusha
mov
sub
cmp
and
xlat
cmp
mov
addr16
sub
lret
scas
jp
cmp
js
cwtl
int3
pop
gs
adc
mov
aad
dec
pop
adc
icebp
xchg
int
ror
sub
addb
cmp
insb
inc
stos
cltd
std
cmp
push
mov
adcb
jmp
ja
in
sub
inc
add
rclb
pop
jp
fmuls
or
adc
in
sbb
test
push
mov
fdivrs
imul
enter
loope
fdivl
in
dec
lods
adc
push
push
pop
std
dec
loope
xchg
xor
stc
sub
mov
repnz
cltd
std
ss
or
rorl
scas
push
lock
insl
push
adc
add
mov
xchg
add
fldcw
pop
inc
mov
pushf
sub
mov
jmp
scas
shr
test
lahf
jecxz
lret
mov
sbb
insb
mov
push
sub
repnz
xchg
bound
repnz
ret
or
sahf
ret
add
adc
push
fidivs
sub
popf
pop
adc
rorl
adc
out
imul
adc
cmp
adc
pop
das
mov
dec
push
lcall
push
adc
loop
frstor
data16
enter
imulb
imul
rcl
mov
insb
lea
mov
cmpsl
leave
arpl
in
arpl
stos
sti
in
ja
leave
or
xchg
jmp
andb
xor
pop
sbb
out
loopne
fcoml
xchg
cmp
push
scas
adc
jbe
cmc
lret
mov
mov
mov
das
push
lds
push
mov
push
sar
imul
insl
lcall
pop
xchg
lcall
mov
pushf
popf
pop
mov
xchg
aas
mov
enter
mov
pop
movsb
or
add
scas
jne
test
repnz
dec
scas
lahf
std
ss
mov
xchg
add
aas
aas
les
cmp
inc
xor
xor
and
call
test
and
stc
sub
xchg
movsb
out
in
dec
adc
inc
jno
test
cmp
ficoml
out
pusha
or
lret
insl
fs
loop
outsl
outsb
in
je
sti
mov
cs
mov
inc
test
mov
sub
or
ja
aas
xor
mov
mov
mov
push
ret
jne
dec
push
mov
mov
xor
adc
push
sti
rcl
push
pop
pop
sti
jl
mov
js
push
aad
insb
cmp
cmp
mov
xorl
cmp
fsubrl
lahf
mov
push
pusha
or
repnz
sub
or
or
inc
pop
jp
dec
mov
mov
bound
inc
aad
cmp
sti
mov
push
adc
sbb
notl
cltd
mov
xchg
xor
arpl
mov
mov
xchg
xchg
adc
inc
xchg
loopne
ja
test
xchg
daa
jle
jnp
fldt
ds
mov
xor
push
xchg
mov
mov
dec
les
bound
dec
shrb
jnp
dec
jmp
jb
fistps
hlt
out
mov
fmull
loope
add
jmp
sbb
and
xchg
stc
sarl
call
pop
mov
sahf
inc
dec
push
adc
mov
push
or
adc
mov
dec
push
icebp
adc
push
mov
jae
gs
in
gs
imul
stos
jne
push
adc
and
push
inc
xor
mov
mov
in
mov
xor
push
adc
mov
sbb
testb
adc
shll
adc
push
popa
or
cli
data16
push
les
and
mov
push
inc
loope
mov
ret
insl
fs
push
lock
cmc
arpl
push
mov
popa
sbb
pop
or
popf
mov
jg
mov
xorl
dec
scas
xlat
js
popa
inc
es
scas
cmp
in
xor
rcrl
inc
es
imul
ret
insl
fbstp
mov
arpl
dec
xor
setl
pop
sub
lcall
or
insl
mov
mov
push
cmp
adc
mov
scas
je
rcll
dec
mov
aad
insb
fstps
jmp
dec
xchg
pop
mov
mov
cltd
lahf
push
imul
rcrb
xor
dec
data16
jmp
stos
loopne
leave
hlt
les
scas
sahf
out
sti
mov
push
lret
cld
push
cmp
sbb
enter
andl
dec
add
adc
mov
lea
push
sub
popf
xor
pop
push
push
rclb
loope
in
cmp
xor
mov
dec
or
sub
repz
mov
mov
jns
xor
scas
fprem1
push
lock
or
jns
cwtl
adc
mov
xchg
jns
ds
leave
mov
lcall
jnp
jmp
mov
dec
daa
and
fs
cmp
add
mov
cmp
mov
int3
jb
into
lahf
ror
lock
lods
lds
movsb
pusha
bound
outsb
and
adc
add
mov
les
pusha
dec
jne
imul
mov
push
push
sbb
das
lods
jae
adc
xchg
sub
sub
xchg
mov
sbb
lds
xchg
mov
dec
xchg
mov
hlt
sub
xchg
lahf
mov
cmp
mov
rcll
out
pop
leave
bound
loopne
int3
insl
fs
sub
fldl2e
push
dec
arpl
dec
dec
adc
inc
lds
adc
push
adc
pop
pop
pop
add
mov
mov
pop
xor
jbe
es
jb
jmp
adc
push
push
xor
sahf
clc
inc
mov
sbb
inc
test
cs
dec
ficoms
in
jns
clc
lret
mov
out
mov
es
ljmp
push
loop
fildl
xor
cmp
pop
cmp
iret
ss
jp
inc
aad
out
in
out
sbb
mul
ja
fmul
dec
push
aam
sub
pop
push
cwtl
lcall
pop
mov
addps
adc
xor
or
dec
and
push
dec
fsubl
movsl
jmpw
loope
mov
adc
add
mov
mov
xor
jnp
dec
cld
fsub
or
test
inc
paddusw
xor
lret
and
mov
or
ljmp
dec
scas
fwait
movsb
xchg
push
mov
mov
stos
dec
cld
lcall
mov
push
push
icebp
adc
lret
mov
test
je
in
dec
sub
nop
je
adc
mov
arpl
std
push
and
aaa
les
and
gs
enter
cmp
cmp
mov
jns
dec
mov
inc
xchg
stc
rorl
ds
icebp
sub
mov
rcll
adc
adc
xchg
mov
test
call
or
jo
imul
in
lret
or
push
adc
mov
cmp
adc
fnsave
cmp
adcb
aam
leave
sub
sub
insb
fld
sti
in
fs
adc
fidivrl
mov
pop
or
mov
mov
jo
out
movsb
fsubs
test
daa
mov
cmp
mov
mov
inc
fs
dec
lea
mul
js
or
inc
cwtl
inc
imul
sbb
sbb
idivb
je
xchg
mov
jns
and
or
xchg
jbe
inc
sbb
sbb
pop
les
inc
pop
mov
inc
aad
pop
dec
pop
cld
loopne
and
shrb
xor
movsl
ja
mov
sub
inc
sub
stos
mov
test
shl
lret
xchg
xchg
outsb
xorb
sub
jo
mov
xchg
pop
xlat
dec
sarb
push
movsb
data16
mov
inc
stc
sbb
out
xchg
sbb
add
inc
mov
push
adc
fcos
sti
loope
xchg
jae
add
loopne
xlat
cmp
arpl
test
imulb
pop
clc
push
pushf
ret
es
cmpsl
sbb
rolb
push
dec
test
lahf
lret
ret
out
pop
add
pop
xlat
cmp
daa
idivl
fstps
cld
out
push
insb
add
int
inc
idivl
fnstenv
frstor
mov
icebp
adc
pop
xchg
xchg
lret
fcomps
or
push
sahf
cltd
push
lret
and
dec
aam
lock
int
ds
mov
adc
arpl
push
enter
insl
fs
jle
sbb
pop
jae
sti
mov
and
sti
mov
mov
out
or
push
xor
cwtl
dec
lret
mov
sbb
stos
jb
push
adc
dec
push
outsb
cmp
fsubrs
cld
inc
mov
insl
fldenv
out
jns
ret
shlb
aaa
push
inc
sahf
cmp
push
sub
popf
xor
ds
aad
insl
mov
xchg
mov
aaa
addr16
dec
pop
adc
add
int
mov
pop
insl
xchg
cwtl
inc
lret
inc
sbb
xchg
jg
ror
std
lods
fdivrl
mov
inc
fcoml
sti
cs
xor
cwtl
dec
lret
ret
lea
test
adc
es
je
jae
test
and
mov
sbb
mov
push
sbb
dec
dec
push
add
cmp
flds
xor
into
push
pushf
ljmp
jecxz
cmp
ds
lret
xchg
cmpsb
loope
adc
rol
inc
dec
les
adc
data16
imull
ret
insl
mov
inc
pop
dec
push
adc
jne
sti
mov
out
adc
arpl
imul
sbb
pop
or
leave
insl
fs
and
ret
rcl
dec
push
mov
xor
adc
insl
dec
scas
fwait
mov
xchg
push
adc
in
pushf
fsubl
insb
lods
jbe
push
adc
jmp
cmp
adc
icebp
push
ret
lcall
inc
jl
push
rcll
xchg
sbb
and
mov
shrb
setb
test
mov
pusha
adc
or
js
dec
aad
insl
pop
aaa
hlt
add
scas
jg
cmp
add
cmp
insl
dec
scas
adc
call
es
mov
and
jmp
outsb
jo
imul
rcrb
cmp
sub
in
cmp
dec
les
aaa
xchg
mov
out
inc
add
lret
cmp
cmpsl
xchg
pop
push
cmp
mov
jp
jge
lcall
jo
jp
add
aad
sub
inc
hlt
adc
cmpsl
mov
ret
in
mov
aad
loop
cmp
adc
mov
inc
jmp
mov
jno
mov
dec
scas
shrb
cwtl
sub
xor
jl
fwait
loopne
leave
icebp
jmp
push
cmpb
dec
cmpsl
mov
or
fnclex
xor
mov
call
xor
adc
adc
fs
adc
add
fiadds
jle
push
cs
jo
jae
jns
ror
push
xchg
ret
dec
mov
sub
add
ds
mov
int3
mov
lds
inc
es
imul
fld
insl
fs
cld
int3
fwait
ror
jbe
and
xchg
lds
xchg
imul
jge
dec
mov
imul
or
dec
lret
insb
fldenv
jecxz
dec
sbb
xor
ret
fisubs
es
jl
fidivrs
cmp
js
inc
push
sub
out
cld
xlat
inc
sub
fidivrs
gs
lods
sbbl
int3
sub
insl
fs
mov
pop
gs
xchg
jnp
rol
arpl
adc
xchg
shl
nop
push
adc
rcrb
cmp
mov
or
popf
xchg
push
push
adc
dec
pop
push
jle
adc
dec
mov
ret
dec
sub
test
loopne
cmp
addr16
imul
fisubrs
cs
dec
sar
push
mov
xor
mov
out
mov
jae
hlt
scas
scas
mov
mov
rcl
mov
aad
stc
jmp
push
or
aad
mov
push
scas
mov
push
cmp
jnp
mov
xor
pushf
sub
inc
scas
mov
mov
dec
push
adc
jne
sti
mov
and
sti
mov
arpl
imul
inc
lret
dec
shrb
or
push
pusha
gs
xor
fwait
pusha
and
lret
dec
inc
mov
ret
adc
mov
or
mov
dec
fsubl
insb
fwait
mov
mov
prefetchw
cmp
mov
dec
push
cmpsb
test
cmpsl
shl
and
std
shll
mov
cmp
decb
cli
push
cmp
mov
mov
lcall
sub
or
cmp
xchg
test
aaa
outsl
jmp
xor
rcrb
sbb
das
inc
imul
adc
rclb
fs
adc
push
scas
jp
cmp
sub
xchg
pop
xchg
cltd
lcall
mov
mov
loop
popa
dec
fisubs
sti
mov
xorb
bound
pop
mov
inc
lret
sub
xlat
fistpll
mov
negl
cmc
sbb
jg
jmp
pushf
xchg
shrb
jns
sub
push
hlt
aas
flds
push
imul
jecxz
pop
sbb
les
cmp
jmp
mov
pop
lret
sub
cltd
add
mov
sti
dec
aaa
fidivs
stos
mov
mov
push
lods
xchg
push
mov
mov
call
fsubrs
out
adc
es
sahf
lahf
and
cmp
push
mov
mov
sbb
mov
rclb
arpl
outsl
cvtpi2ps
lds
mov
push
pop
mov
jne
jne
cmp
or
cmp
ljmp
loope
inc
mov
inc
loope
js
jmp
lret
mov
lcall
xchg
dec
xor
sbb
imul
insl
fldcw
loopne
sub
mov
pop
jmp
sti
fldt
push
adc
loop
cli
mov
cmp
cmp
pop
scas
mov
mov
fimull
adc
sbb
push
lret
icebp
mov
sub
mov
push
in
mov
adc
int
scas
cmpb
xchg
jno
add
scas
jo
jp
cltd
lcall
lods
xchg
mov
jmp
ds
jge
and
dec
adc
mov
mov
lock
sti
sti
aad
repnz
mov
cmp
pop
scas
aaa
cmp
mov
adc
shlb
sub
sarl
insl
cmpsb
xchg
mov
into
mov
push
adc
ja
sti
shlb
aas
sahf
lds
setg
xchg
or
arpl
in
inc
dec
push
adc
mov
fcmovb
sbb
sub
out
jg
sbb
ret
dec
mov
sub
mov
adc
sarb
or
and
or
lods
sbb
adc
sub
push
ffreep
insl
fs
test
arpl
inc
stos
call
mov
lahf
mov
lea
jo
cmp
cmp
jge
jmp
or
sbb
ds
mov
insb
addr16
shl
pop
rclb
inc
loop
xchg
mov
cmp
cmpl
nop
push
pushf
inc
dec
push
fidivrs
adc
xorl
push
cmp
out
pop
out
push
mov
fs
xchg
mov
fsubl
mov
push
popf
pop
inc
mov
xchg
lcall
sti
call
out
xor
insl
or
jns
andl
mov
push
cmp
gs
andb
lock
mov
mov
and
in
sub
insl
test
stos
testl
shrl
jp
jo
add
das
test
in
mull
pushf
mov
xchg
out
mov
or
cmpsb
pop
jle
jb
adc
fnsaves
push
rcrl
sub
and
test
xlat
enter
stos
lret
outsl
cmp
pop
fcoms
or
test
outsl
out
ljmp
aaa
jo
ret
insb
fldenv
push
and
cld
jecxz
mov
test
xchg
enter
jecxz
lret
sub
mov
shll
fwait
sti
rolb
cmp
and
push
pop
pop
dec
aad
dec
and
loope
sahf
ds
pop
lcall
dec
xchg
xchg
pop
cmpsl
outsb
fstps
cld
flds
dec
fadds
aaa
push
fdivs
mov
cmpsb
loopne
mov
cmp
add
mov
xor
out
add
into
add
pop
fcmovbe
xor
mov
ucomiss
xchg
aaa
mov
shr
ret
adc
mov
ss
sub
adc
jge
out
mov
push
mov
mov
lds
loope
push
es
push
sar
notb
idivl
std
lds
cmp
xchg
cmpsl
xchg
mov
mov
adc
dec
arpl
dec
push
mov
lds
mov
dec
push
cmp
inc
sub
pop
add
sub
faddp
insl
fs
inc
mov
push
rcrb
stos
sti
mov
ficoml
int
jmp
cmpsl
leave
into
push
xchg
in
data16
jae
mov
xchg
dec
xlat
dec
sarb
push
mov
mov
in
xor
cwtl
dec
lret
ret
adc
jg
inc
movsl
mov
mov
inc
xchg
mov
rcrl
or
arpl
cmp
sarb
out
call
fidivrs
jmp
push
sub
insl
or
or
mov
fsts
cmp
call
std
popa
pop
lret
push
out
adc
push
ret
cmp
in
aad
jecxz
dec
xchg
xchg
add
xchg
add
testl
ret
adc
movsl
les
jmp
ret
sub
cwtl
mov
test
dec
mov
mov
lret
inc
test
ucomiss
xchg
shl
pop
push
sbb
adc
xlat
mov
and
sub
push
sti
mov
sub
jb
test
inc
testb
push
dec
fiadds
icebp
push
cmp
lcall
mov
scas
ror
inc
sub
sub
mov
test
inc
fcom
mov
je
pop
xchg
pusha
mov
bnd
mov
add
mov
inc
cmp
scas
cmpb
lret
and
lahf
and
imul
sub
shrl
insl
fs
sti
int3
mov
aam
mov
add
xchg
push
ret
fmull
test
cwtl
dec
lret
mov
mov
je
push
adc
faddl
pop
jns
sti
mov
out
adc
insl
mov
mov
mov
inc
es
jns
roll
mov
jo
imul
fstps
cmp
lret
sub
sbb
mov
cmp
mov
fadd
dec
push
into
std
mov
pop
inc
xchg
inc
adc
adc
int3
insb
xor
bound
aas
push
xchg
aam
cmp
inc
aad
pop
jl
sti
mov
mov
xchg
jns
ror
dec
and
inc
stos
rol
inc
sub
mov
aad
loop
cmp
pop
sahf
leave
mov
pop
insl
addr16
push
shll
testb
ret
sub
cmp
lods
lahf
je
es
jp
mulb
mov
mov
jl
dec
sbb
lret
out
or
ret
mov
les
push
pop
cmp
out
imul
dec
jecxz
mov
pusha
jmp
inc
mov
sti
lcall
mov
arpl
imul
lods
mov
sbb
neg
add
lret
leave
sub
fwait
int3
pop
addr16
fwait
std
inc
mov
into
cwtl
fsubl
inc
ret
ret
aad
mov
adc
xor
icebp
xchg
or
ret
sar
dec
mov
aad
and
icebp
sti
mov
push
adc
inc
in
sub
fimuls
push
xchg
aas
enter
adc
mov
jmp
mov
lcall
mov
pop
xchg
and
fldcw
ds
mov
in
mov
jno
test
adc
cmp
loopne
sbb
push
sbb
ds
out
mov
xchg
xor
dec
imul
jae
sahf
imul
mov
mov
ret
mov
bound
sub
fs
adc
xchg
es
in
loop
ds
test
push
mov
imul
mov
scas
xchg
dec
xlat
adc
inc
lret
sub
rolb
loop
cmp
cmc
out
add
loope
jge
outsb
mov
pop
cltd
mov
push
or
adc
or
xchg
cmp
dec
rcrb
jno
dec
mov
sub
sub
stos
cld
and
sub
xchg
fwait
stos
in
loopne
push
or
outsl
or
sbb
dec
shrb
outsl
xchg
jns
xchg
mull
fwait
sub
ret
in
push
int
sub
mov
lods
sti
rcl
mov
stc
sarb
pop
lds
clc
gs
push
notb
out
data16
and
loopne
daa
sbb
cltd
mov
pop
mov
push
push
jl
jg
and
dec
imul
dec
sub
xor
frstor
mov
dec
incl
push
repnz
adc
ret
cmp
fs
adc
fstpl
lds
add
mov
dec
shrb
fstl
das
mov
mov
pushf
xchg
mov
pop
and
sub
xchg
mov
gs
or
imul
inc
aad
loop
cmp
cltd
pusha
test
repz
popa
dec
jae
cmp
jo
jmp
imul
aam
sti
xlat
pusha
inc
cld
mov
jg
dec
cli
inc
imul
ret
push
xchg
sahf
mov
fcomi
xor
inc
es
stos
pop
or
popa
mov
sbb
or
test
aas
pop
les
cmp
inc
pop
shlb
pop
inc
loope
mov
inc
ret
insl
arpl
jo
arpl
mov
fisttpll
fisttps
mov
pop
add
negl
decb
cltd
gs
mov
mov
cld
inc
push
lcall
fidivs
fcomp
or
aas
xor
xor
pop
aad
mov
fs
sbb
lds
test
cmp
call
inc
test
cmp
jl
push
jb
stos
icebp
sub
dec
loop
mov
push
mov
fiadds
xchg
or
pop
dec
cmpsb
aam
shlb
push
dec
lods
loope
xor
pop
mov
jp
push
pop
outsb
push
xchg
push
mov
mov
stos
insb
inc
and
daa
sub
fs
mov
outsl
movsb
lea
lretw
test
xor
gs
dec
je
xor
push
mov
sub
sub
lods
sbb
cmp
mov
insb
ret
sub
out
jne
xchg
js
push
dec
lods
imul
push
scas
aam
aas
xorb
dec
inc
lret
out
cmp
or
test
jmp
xlat
xchg
mov
fadds
mov
icebp
mov
rcr
icebp
nop
repnz
lahf
sub
dec
fmull
cmc
and
xor
dec
insb
xor
fsts
test
xchg
inc
jno
mov
cmc
pop
pop
pop
pop
test
dec
sub
jno
push
inc
mov
es
test
repz
pop
xchg
popa
js
jo
imul
mov
jo
fimull
mov
lret
lret
leave
cld
lcall
pop
addr16
test
push
cmpsl
cmp
cmp
dec
jge
xor
das
push
mov
jge
jae
cmp
push
sub
dec
outsb
push
push
gs
sub
mov
test
dec
mov
dec
fimuls
and
clc
lds
mov
call
movsb
pop
bound
cmp
cmp
inc
aad
pop
js
sti
rclb
xor
sbb
xchg
lds
es
and
dec
out
fistl
cwtl
mov
push
mov
fsts
add
mov
test
dec
jnp
add
dec
push
ss
fnstsw
and
dec
aam
jbe
sti
cli
sub
fcmovnbe
xor
stos
sbb
test
ret
insl
cmpsb
data16
pop
xchg
inc
xlat
dec
rcrb
dec
aaa
xchg
mov
out
dec
lcall
dec
arpl
adc
insl
aam
pushf
dec
jne
shlb
xchg
dec
xchg
jmp
repnz
ret
mov
scas
test
in
out
xchg
inc
adc
dec
dec
imul
xchg
and
cli
pop
dec
or
popf
in
pop
int
shl
stos
insb
arpl
and
jo
shr
push
std
rclb
out
adc
jl
inc
cmpsl
mov
dec
mov
inc
adc
lods
cwtl
cmp
xor
pop
mov
inc
aad
leave
insl
fs
pop
das
fs
dec
pop
mov
dec
xchg
rcl
mov
int3
into
outsb
mov
and
mov
lret
and
adc
stc
adcl
data16
xor
or
xor
lret
cmp
push
sarb
mov
out
xchg
shrl
mov
sti
cmpsb
shl
adc
mov
mov
adc
data16
lds
lds
mov
mov
aam
out
adc
arpl
push
mov
ret
insl
mov
cmpsb
mov
add
lods
sub
xor
adc
data16
fsubs
fmull
sub
or
dec
lret
mov
adc
lods
js
push
adc
aaa
mov
mov
iret
aaa
mov
cs
cmp
insl
inc
test
ret
insl
mov
shrb
push
push
adc
dec
outsl
mov
rcl
mov
arpl
dec
mov
mov
xchg
push
movsb
push
cmpsb
cmc
movsb
iret
sub
push
stc
sbb
or
push
cmp
jp
test
mov
out
mov
cwtl
les
jo
cmp
aad
insl
mov
or
lret
adcb
adc
ja
sti
mov
out
adc
inc
movsb
or
popf
pop
mov
mov
mov
pusha
adc
pop
ret
mov
adc
cs
push
adc
fs
adc
or
mov
cmp
pop
outsb
fs
cmp
cmp
dec
jns
imul
std
sub
dec
or
pop
rcr
pop
fs
sub
scas
or
pushf
jecxz
jb
push
frstor
lahf
or
mov
out
sub
rcrb
ficompl
ret
and
ret
dec
shrb
in
xchg
test
jl
adc
jae
push
jle
push
adc
ret
mov
test
sub
jmp
inc
push
xchg
dec
xchg
lock
or
hlt
in
or
pop
fildll
push
dec
lods
int
std
pop
xor
outsb
and
sub
fidivrl
stos
popf
mov
das
sahf
mov
mov
aad
data16
xchg
push
inc
aad
daa
test
mov
pop
cmp
clc
ljmp
inc
fisttps
xchg
jecxz
lret
das
push
xchg
xchg
shlb
sub
sub
mov
out
inc
test
lcall
lret
mov
jo
jnp
xchg
sub
or
arpl
repnz
xchg
in
cs
mov
fs
adc
mov
enter
addl
or
data16
test
jmp
push
jge
cmp
movsb
out
int
mov
push
ja
popa
mov
cmp
fxtract
xor
mov
in
push
vpminub
adc
fs
pusha
or
fdivr
ds
or
sub
sarb
out
mov
aad
data16
xchg
popa
inc
aad
ret
mov
jne
push
adc
fcoml
insl
mov
mov
pop
mov
push
aad
inc
mov
adc
mov
lahf
lret
sahf
pop
movsl
xor
xchg
loopne
inc
cld
into
mov
loopne
leave
cld
inc
xlat
repz
lods
frstor
xor
cs
sti
sti
cltd
mov
mov
or
sbb
mov
add
jge
ret
cmp
scas
mov
push
xor
dec
gs
dec
mov
sbb
jb
sti
cmc
cmpsl
ja
fidivrs
mov
lret
out
pop
mov
mov
scas
xchg
daa
shlb
jne
pop
in
mul
rorb
mov
mov
insl
push
cmp
dec
aad
dec
add
bound
jl
fidivs
mov
popa
lret
inc
mov
aad
out
pop
adc
lods
je
int3
insl
fs
lahf
adcb
jmp
dec
imul
aas
ss
mov
adc
ret
push
mov
push
ret
sub
mov
fsubl
std
fldt
mov
decb
push
dec
sub
shll
xchg
push
divl
mov
scas
xchg
adc
xchg
cmp
jb
push
rcr
rolb
jmp
call
out
xchg
mov
dec
scas
jnp
aaa
pop
xchg
call
mov
test
sarb
fidivs
js
push
adc
int3
lret
mov
jbe
rolb
cmpsl
out
sbb
and
adc
mov
fwait
in
outsb
push
adc
or
and
jae
inc
push
sub
insb
cmp
sbb
shlb
mov
adc
or
shlb
ret
sar
mov
dec
imul
push
sti
sar
sub
pop
inc
mov
gs
cmc
xchg
push
xlat
dec
rolb
jae
push
mov
mov
inc
push
xor
cmp
mov
sub
adc
sarl
jbe
pop
mov
push
mov
push
rcll
mov
fldenv
repnz
or
jne
cmp
xlat
lret
inc
test
adc
mov
lods
push
pop
cmp
inc
fabs
ret
and
push
fimuls
ret
dec
test
mov
orb
es
movw
sbb
loope
mov
test
shr
and
and
adc
rcll
mov
xchg
loope
adc
jae
iret
pop
xor
das
push
lds
xor
push
adc
sarl
mov
out
adc
rorb
jne
dec
mov
xchg
push
mov
mov
dec
pop
mov
jecxz
gs
mov
fcom
aad
sub
pop
cmp
and
mov
jecxz
dec
mov
into
aaa
fdivrl
js,pn
ficompl
pop
push
jb
xor
dec
arpl
scas
fnsave
paddsw
dec
aad
push
out
ret
loopne
inc
mov
xchg
push
add
xchg
aas
sub
or
inc
cli
inc
pop
or
in
dec
inc
or
lret
ret
push
add
cmpb
les
cmp
mov
xchg
inc
or
lret
ret
rolb
daa
xor
jns
roll
cmp
inc
outsl
jo
imul
lea
xchg
sub
and
sub
xchg
icebp
pusha
push
adc
inc
ja
orl
cwtl
push
outsl
add
push
or
xor
add
fidivs
ljmp
aam
cwtl
sub
xchg
cli
rcr
sub
ret
insl
fs
sti
lret
lret
xor
mov
push
mov
mov
lock
push
cmp
xchg
je
jae
stos
cmpsb
inc
js
jbe
orl
sahf
subb
roll
push
dec
mov
or
imul
lret
idivl
sub
mov
inc
aad
out
pop
cwtl
xor
sbb
mov
push
jo
cld
lret
enter
mov
jb
jbe
xchg
inc
mov
gs
les
mov
push
mov
stc
fidivs
lret
in
xor
pop
aas
out
push
fcoml
lds
mov
push
xor
cmp
jo
shlb
xor
mov
sub
arpl
xlat
sti
in
mov
push
cs
push
in
adc
sbb
mov
add
fbld
push
ret
out
subl
enter
jbe
testb
lods
jo
fucomi
xor
stc
enter
or
int
int3
jo
mov
ja
fistl
pop
daa
push
mov
fs
xchg
pop
jae
scas
jge
cmp
sbb
inc
das
push
aam
in
or
pusha
test
or
dec
jge
jp
dec
sbb
out
sub
fisubrs
jle
adc
mov
rorb
mov
mov
repz
loopne
mov
lock
repz
movsb
dec
stc
and
cmc
repz
sbb
and
and
ret
insl
addr16
sbb
ret
iret
jbe
xlat
das
stc
mov
stos
cmp
sub
stc
ficoml
cwtl
pop
addr16
add
inc
mov
adc
lret
xchg
dec
aad
insl
push
in
dec
mov
dec
gs
mov
out
sbb
mov
mov
or
sbb
push
mov
cmc
cmp
adc
add
es
hlt
adc
data16
insl
arpl
scas
xchg
outsb
mov
insb
fldenv
mov
mov
cmc
fldl
cs
ds
xor
xor
dec
rcl
cmp
mov
out
sbb
dec
pusha
mov
add
in
ret
mov
les
push
inc
mov
and
cmp
mov
dec
and
pop
aam
insl
in
adc
inc
aad
lds
jecxz
mov
dec
shrb
fists
or
xor
mov
mov
mov
mov
mov
adc
cs
push
popf
mov
inc
push
adc
lea
push
xor
test
mov
sub
lret
daa
rorl
pop
or
aaa
dec
adc
dec
outsl
fs
fsubp
push
frstor
popf
fildl
fisttps
xor
dec
dec
fidivs
xor
test
clc
xchg
sub
ret
and
shrb
sbb
pop
scas
gs
adc
lea
xchg
sub
pop
adc
xchg
and
orl
mov
filds
cmc
nop
scas
shll
mov
and
es
movlhps
scas
mov
fidivs
lret
out
adc
cmc
adc
sti
sub
xchg
xchg
in
fimuls
mov
inc
push
enter
ffree
insl
fs
popa
and
scas
cmpb
leave
pop
imul
fxch
push
or
or
lret
cmpsb
out
loope
adc
rol
fnstenv
inc
adc
data16
ret
mov
enter
movsb
loope
adc
xchg
ret
xchg
add
sub
push
test
or
mov
test
sub
and
outsb
pop
mov
xor
in
clc
sub
xor
xchg
cmp
xchg
cmpl
lret
sub
into
rcl
sbb
cmp
les
andb
adc
mov
dec
and
inc
shlb
and
out
xor
mov
loopne
mov
xor
ss
das
ja
push
in
mov
mov
jge
cmc
dec
mov
pop
fidivs
push
rorb
sahf
es
fwait
std
dec
pusha
cmp
jno
cmpsl
or
inc
push
aam
subb
ret
insl
fs
imul
call
sbb
dec
push
iret
addr16
ret
dec
mov
aad
stc
pop
movsb
xchg
mov
xchg
sahf
in
push
adc
dec
bound
inc
stos
icebp
daa
push
sti
mov
rorb
add
leave
in
jp
shll
jbe
push
adc
aaa
pop
and
or
fdivrs
mov
sub
rcrb
stos
int
lods
sub
cltd
xchg
arpl
add
pushf
out
sub
push
aaa
cld
call
int
test
mov
xchg
pop
xlat
dec
rcrb
stc
loop
mov
out
movsl
sub
out
adc
insb
pop
push
pop
andb
xor
loopne
sub
push
mov
rol
pusha
xchg
or
xor
xlat
pop
add
sub
leave
xor
sbb
test
pop
lret
repz
mov
jp
loopne
xchg
dec
popa
or
inc
inc
aas
cmp
or
xor
inc
ss
lret
adc
out
mov
sub
and
push
popa
sub
ret
insl
mov
inc
pop
jle
sti
shlb
push
mov
xchg
lret
xchg
fdivrl
push
push
repz
vpsubb
fs
or
jno
ds
les
or
repnz
inc
lds
in
insb
frndint
sti
out
pop
fsubrs
pop
mov
ret
jecxz
lret
cs
xor
dec
jb
xlat
inc
movsl
ljmp
or
repnz
xchg
adc
and
call
lds
adc
mov
movsl
and
cmp
loop
mov
test
sar
push
cli
cs
mov
rclb
out
arpl
mov
fs
jle
testb
mov
or
cmp
incl
sti
sbbb
insl
pushf
sbb
pop
rcl
idivb
outsl
mov
xchg
mov
into
dec
ret
inc
xor
lahf
test
xchg
jns
pop
mov
mov
or
dec
pop
adc
sarb
hlt
sub
in
test
push
jmp
insl
inc
test
shrl
out
xchg
push
mov
mov
push
sar
iret
fwait
ror
push
fucomp
enter
pop
insb
dec
push
mov
push
repnz
mov
mov
das
sbb
pop
dec
fildll
cmp
inc
repnz
fmull
push
push
pop
mov
mov
fiadds
xor
call
push
jle
or
adc
dec
mov
adc
cmp
fisubs
std
pop
inc
push
pop
jge
scas
dec
cmp
nop
fnstsw
mov
arpl
dec
out
pop
dec
out
movsl
mov
adc
inc
out
push
sub
and
shll
sub
ret
insl
fs
cld
enter
inc
adc
sarb
imul
mov
mov
or
push
imul
pop
js
sti
mov
out
adc
dec
jns
pop
call
dec
mov
xor
shll
loope
adc
jae
popf
mov
adc
pop
fwait
adcl
mov
in
or
xchg
xor
jbe
fstpt
add
scas
jne
mov
inc
stos
shll
and
test
jl
add
js
push
cli
ffree
insl
mov
scas
fwait
add
lods
mov
pusha
add
or
mov
mov
sub
sub
xor
add
mov
dec
lods
sub
jmp
pop
idivl
lret
repz
mov
pushf
jge
shl
lods
push
adc
fs
adc
lea
xor
insb
mov
or
sub
mov
scas
test
sub
stos
xchg
pop
popa
push
mov
call
stc
cmp
dec
insl
fidivrs
not
sbb
icebp
and
fwait
or
int3
shlb
aaa
push
adc
cmp
push
sub
popf
xor
arpl
sub
mov
adc
sbb
dec
shrb
adc
inc
gs
xor
fwait
aam
andb
mov
push
mov
out
adc
into
cmp
or
pushf
das
ret
loop
dec
stc
adc
or
ret
mov
test
sub
pop
xor
inc
mov
mov
popa
sbb
out
out
fsubrp
cmp
pop
sbb
hlt
icebp
imul
push
sbb
scas
dec
mov
in
cltd
mov
mov
negb
or
int
push
insb
pop
xchg
adc
ret
mov
sub
je
push
adc
aad
pop
jge
sti
mov
pop
adc
cmp
fisubrl
scas
lret
adc
push
mov
outsb
fwait
mov
dec
shrb
pop
xchg
mov
gs
xor
fwait
sahf
xchg
dec
xchg
xchg
xor
dec
sarb
push
mov
mov
mov
and
lahf
push
xchg
sub
jno
mov
out
cmp
sets
or
call
insl
dec
xchg
adc
jns
sti
mov
xor
mov
or
les
cmpsb
ret
adc
in
ret
rcl
fdivrs
adc
xor
stc
mov
fwait
xor
fldcw
cld
adc
xchg
mov
shlb
jb
sti
mov
cmp
mov
sbb
rcll
out
adc
sub
cmp
sub
jae
cmp
imul
sbb
lods
mov
adc
mov
test
inc
add
dec
shl
dec
cs
int
push
mov
popa
or
inc
add
pop
adc
or
sti
iret
mov
sub
fnstenv
icebp
sub
mov
pusha
push
clc
pop
mov
movsb
mov
cld
fdivrl
sahf
sub
clc
and
inc
mov
sahf
mov
scas
lea
filds
adc
repz
mov
mov
movsb
mull
cmc
lods
cmp
xor
je
fwait
lea
jo
gs
mov
loop
push
mov
lods
lret
adc
aas
cld
iret
cmp
fs
fcomps
sub
dec
stos
in
cmp
in
mov
mov
mov
and
stos
add
out
xchg
sbb
xchg
aam
lds
mov
mov
dec
shrb
cmp
dec
mov
mov
adc
cmp
out
push
popa
jecxz
dec
jb
lea
je
xchg
sbb
jmp
mov
scas
test
xchg
mov
ret
and
pop
test
arpl
pop
outsb
fcomps
ret
mov
test
sub
add
cmp
mov
push
add
js
xchg
rolb
insl
fnsave
shl
call
mov
jb
adc
out
inc
adc
stos
and
adc
in
mov
add
mov
test
cmp
xchg
insb
outsl
aaa
repnz
mov
daa
xchg
pusha
lods
pusha
aam
sti
shll
in
xlat
adc
mov
imul
loop
imull
mov
add
adc
pushl
and
cmp
or
pop
fiaddl
lods
addr16
inc
add
lret
stc
mov
fs
adc
xor
jecxz
xchg
cmp
loop
lcall
cmp
inc
push
out
jecxz
mov
xchg
push
inc
lret
lods
testl
fidivs
outsl
jbe
in
lret
xchg
cwtl
inc
es
cltd
mov
test
roll
xchg
outsl
jo
imul
mov
lock
sbb
out
gs
out
js
pop
popl
sarb
xor
dec
je
aad
sub
xchg
insl
push
inc
mov
cmp
cmp
aaa
es
leave
and
dec
ja
andb
inc
and
outsl
lcall
mov
mov
ret
jecxz
lret
outsb
test
aam
sti
shlb
xor
mov
cmp
push
fdivs
xor
fucomp
dec
dec
fidivrs
mov
cmp
daa
cmp
xor
cmp
ret
and
shrb
xchg
popf
mov
jl
adc
arpl
jmp
dec
negl
js
fadds
mulb
pop
mov
adc
ret
lahf
mov
push
xchg
inc
jge
jl
fnsave
jle
cmp
and
sub
push
ret
sub
cmp
stos
sbb
or
fsubrl
cmp
add
mov
popa
fcmovu
dec
shl
dec
xchg
iret
jmp
notb
inc
sbb
mov
fs
adc
jmp
mov
incl
mov
aam
sti
iret
enter
or
hlt
lret
test
repz
lods
sbb
fmul
mov
jmp
popa
mov
mov
repz
aas
cmp
aas
lcall
xchg
mov
mov
adc
mov
pop
mov
jae
mov
lock
outsb
cmp
xchg
sbb
test
ret
out
cmp
cmp
fnstenv
cmp
mov
lahf
mov
jnp
ljmp
sbb
adc
mov
arpl
imul
ljmp
je
lret
push
xchg
and
scas
jl
cmp
bound
adc
inc
mov
stc
test
push
ret
int3
mov
xor
ror
pop
cmp
scas
lds
mov
mov
inc
insl
jg
int3
xchg
fcmovnb
insl
fs
dec
leave
sub
cmpsb
cmp
fxch
jle
push
aam
mov
out
cmp
mov
xor
mov
cld
pop
lods
jae
push
adc
mov
cmp
shlb
sbb
out
setp
dec
data16
dec
es
mov
pop
fincstp
mov
call
rolb
fisubrl
pushf
dec
dec
inc
sbb
fdivs
lods
lret
aas
jno
sbb
push
fcomps
inc
adc
bound
leave
insl
fs
cmp
popa
rcl
dec
push
add
and
fimull
inc
stos
push
bswap
and
sbb
stos
je
push
adc
int
pop
pop
jbe
sti
mov
out
adc
xor
sbb
data16
lods
jne
push
adc
test
dec
dec
dec
imul
adc
mov
sarb
and
cmp
mov
aad
jae,pn
inc
roll
out
pop
lcall
fs
mulps
scas
sti
mov
pop
sub
push
mov
movsl
mov
jne
fcoms
int
cltd
xor
mov
and
jmp
fld
insl
dec
cld
or
fcoml
leave
sub
ret
insl
fs
das
out
rcl
dec
push
cmovae
push
mov
scas
nop
inc
insl
inc
stos
xchg
js
pop
jp
fs
jp
jne
sbb
dec
push
test
notl
movsl
mov
addl
imul
idivb
fnstsw
sarl
dec
shlb
cmc
cmpsl
sarl
frstor
inc
sbb
cmp
mov
or
push
insb
push
adc
mov
ror
in
shrb
adc
pop
bound
int3
dec
repnz
fnstsw
sub
push
adc
xchg
inc
test
aaa
dec
push
mov
sub
loop
mov
test
shl
xor
shrl
je
pop
lret
shl
notb
mov
mov
xchg
mov
pop
adc
adc
stos
push
pop
out
xor
lret
lods
push
imul
jb
jne
aad
and
sub
rcl
mov
fwait
mov
and
dec
outsb
in
push
pusha
jmp
mov
mov
and
insl
xor
incl
scas
mov
dec
lock
addr16
jb
mov
ror
sub
dec
hlt
sbbb
stos
xor
push
jnp
push
pop
mov
mov
cmpsl
addr16
mov
sarb
push
ret
test
stc
and
arpl
add
mov
ljmp
outsl
jno
sarb
xor
sbb
ret
insl
mov
cmpsb
sbb
push
adc
scas
out
sti
lret
mov
push
and
push
aam
int3
out
xchg
cld
or
cmp
push
lcall
mov
aam
pop
mov
cmp
mov
ret
lods
lds
cwtl
xor
dec
scas
inc
addl
faddp
insl
fs
fistpll
adc
jne
sti
mov
out
pop
mov
arpl
imul
jmp
lcall
loop
push
ffree
outsb
js
push
gs
pop
rcrl
ljmp
add
jl
mov
std
gs
xor
popf
adc
xchg
or
in
inc
hlt
inc
out
jbe
push
adc
sub
cmp
push
sub
push
pop
mov
dec
scas
xchg
js
pop
mov
push
fwait
add
xchg
inc
xchg
xchg
cwtl
stos
pop
pusha
push
mov
daa
or
enter
sub
xor
mov
jmp
repnz
inc
inc
out
inc
ficoml
mov
dec
fabs
dec
fcom
xchg
or
arpl
or
inc
xchg
lret
pusha
inc
pop
out
popa
bound
inc
test
and
sbb
les
mov
jbe
sarb
arpl
or
cmpsl
xchg
mov
test
adc
inc
das
adc
inc
rcr
dec
push
mov
icebp
sub
mov
movsb
cmpsl
adc
test
ret
in
push
ret
lods
jb
push
adc
dec
push
jae
test
dec
out
adc
ret
mov
inc
push
test
sub
push
mov
sbb
divl
fldpi
mov
fnstcw
sub
adc
xchg
shl
int3
lods
shll
in
xor
inc
pop
xchg
adc
sub
stos
jg
into
inc
xor
cmpsl
pop
test
dec
fucomip
inc
push
ret
mov
and
adc
dec
jl
jns
pop
push
loop
ucomiss
dec
loopne
jno
push
adc
mov
sbb
lock
lahf
and
xor
dec
lods
jecxz
ss
sbb
shrb
in
sbb
imul
cmp
inc
aad
out
bound
out
dec
mov
dec
add
daa
push
sub
xor
movsb
pop
mov
push
push
insl
dec
scas
xchg
scas
push
pop
xchg
push
xchg
mov
in
mov
push
adc
cltd
xchg
pop
jbe
xor
pop
and
jmp
call
cs
xchg
js
pop
shlb
sgdtl
xor
or
cmp
jg
sbb
inc
adc
int3
ret
fistpl
xchg
push
ret
dec
imul
dec
cld
lret
popf
rol
aad
xchg
jnp
ror
jge
insb
jge
aad
leave
popf
sbb
ret
mov
insl
fs
test
pop
mov
and
pop
ds
mov
jo
cmp
xor
jp
mov
mov
cmp
jl
mov
mov
jo
aaa
mov
popa
cmpsb
aas
pushf
mov
imul
xchg
add
imul
push
pop
imul
cmpsl
cmp
fisubs
movsl
test
xor
dec
imul
sti
mov
jne
sti
jle
pop
jp
cltd
aad
pushf
mov
shrb
xchg
daa
jle
mov
xchg
xchg
lret
in
add
sbb
orl
dec
adc
fucomi
das
mov
loop
fs
jl
jg
cmp
pop
inc
lods
mov
adc
aad
sub
scas
stc
xchg
inc
aad
lock
push
cmp
js
ret
cmp
mov
out
out
sub
mov
adc
mov
sub
lahf
mov
push
pusha
cmp
cmp
cmpsb
push
test
lret
clc
pop
inc
xor
push
rorl
mov
pop
lahf
loopne
lret
aas
inc
sti
out
idivb
jge
add
sub
ds
lret
jg
jecxz
sbb
popa
loope
dec
cmp
aam
aaa
adc
js
add
xorl
scas
xchg
mov
scas
push
mov
fsub
dec
cs
rcr
fadd
mov
fisttpl
xor
out
sub
sti
test
and
push
out
pop
mov
cltd
aaa
mov
mov
dec
imul
or
scas
jb
and
xor
pop
jno
mov
lret
test
inc
sbb
call
inc
push
sub
sub
mov
push
insl
test
sub
sub
adc
test
inc
shrl
js
push
int
lods
or
adc
and
mov
test
inc
and
xlat
fists
inc
push
les
rclb
mov
bound
mov
fs
adc
xor
ret
in
out
dec
cmp
lret
out
xchg
shrl
insl
fs
xchg
add
ret
mov
sub
jecxz
cmpsl
cmp
mov
mov
and
ficoms
sub
mov
push
and
ret
and
ds
xor
jne
xor
push
cmp
dec
movsb
nop
xchg
js
pop
cmpsb
outsb
fs
cmp
cmp
dec
jl
insb
inc
lret
xor
fdivl
out
rol
cli
sub
shl
jb
and
fnsave
jecxz
push
push
xor
dec
dec
xor
test
insl
cmp
mov
xchg
rcr
rdpmc
and
adc
xor
xchg
arpl
dec
sarb
push
mov
mov
out
int
inc
push
sub
or
les
fadd
insl
fs
imul
push
mov
sbbb
dec
pop
push
cmp
fnsave
scas
pop
setg
cmpsl
xchg
lahf
inc
dec
je
mov
leavew
inc
mov
cmc
lods
sbb
test
xor
sub
sbbl
scas
stc
shrb
xor
mov
jl
pusha
push
and
xchg
call
jns
jge
and
inc
pop
sbb
adc
mov
cmp
adc
call
in
push
adc
lcall
scas
mov
scas
fwait
jmp
aaa
jmp
xchg
dec
aad
inc
subl
pop
xchg
ss
fnsave
pop
jle
add
push
xor
cmpsl
iret
inc
hlt
add
lret
ds
adc
clc
push
sub
movsb
cltd
or
jecxz
cmp
jne
orl
cli
add
fwait
xchg
pop
cs
std
sti
aad
outsb
out
and
add
es
cld
mov
ljmp
sbb
clc
jg
cmp
xor
cmpsl
cli
sahf
ret
fistpl
int3
aad
les
aad
mov
dec
shrb
and
aaa
test
mov
xchg
cld
inc
inc
es
fstps
mov
scas
clc
mov
sbb
fsts
rclb
insb
sti
shll
and
sbb
mov
cmp
fidivrs
pop
mov
mull
stc
ret
push
test
roll
dec
jp
dec
aad
insl
or
cli
stc
push
push
push
pop
jns
sti
mov
sahf
rcl
mov
call
inc
and
mov
adc
stos
mov
test
and
adc
bound
jmp
addb
fs
pop
mov
sub
push
cwtl
sbb
push
ss
xor
inc
mov
divl
shlb
xor
mov
sub
jnp
cld
movsl
sub
ret
insl
fs
cld
rcrl
xchg
sbb
mov
cmp
rcr
lahf
insl
filds
shll
push
or
sbb
mov
leave
js
aaa
inc
cld
and
fists
cmpsb
pusha
add
mov
icebp
mov
int3
mov
pusha
mov
and
sub
jne
xchg
xchg
and
xor
inc
jmp
push
shl
mov
cmp
pop
mov
mov
mov
mov
into
push
add
xor
dec
imulb
les
push
test
pop
je
pop
addl
xchg
and
lret
jo
faddl
fisubs
cmp
xor
inc
in
mov
cmp
mov
dec
dec
stos
push
imul
lahf
enter
rol
adc
dec
scas
jo
fwait
sub
sbb
je
loop
mov
test
sar
cld
addr16
and
nop
je
adc
insb
mov
scas
xchg
incb
sti
stos
xchg
sbb
xlat
xlat
jne
xchg
rcr
rorl
cmp
hlt
mov
dec
stc
mov
xlat
xchg
adc
mov
adc
xor
scas
cmp
ret
insl
lds
movsb
imul
sbb
push
lods
xor
xchg
not
add
aas
call
pop
les
mov
lods
lea
arpl
int
ds
sbb
mov
push
cmpsl
data16
inc
xchg
insb
xlat
dec
rorb
in
lock
out
or
stos
and
sub
xchg
lahf
mov
ror
mov
sub
out
pusha
ljmp
fs
in
sub
mov
jecxz
out
adc
arpl
jo
lahf
fisttpll
mov
or
cld
les
insl
push
adc
jle
lea
dec
jp
cmp
adc
add
int3
fwait
adc
and
movsl
mov
test
rorb
outsb
nop
je
adc
mov
mov
xchg
push
xchg
jecxz
cmp
mov
bound
daa
in
outsb
ljmp
in
nop
mov
push
jl
lahf
aaa
sub
loope
aam
fnstcw
rorb
ja
mov
or
cmp
sbb
mov
test
rcr
je
adc
jbe
xchg
mov
call
adc
stos
cmp
adc
popa
inc
cmc
cmp
test
push
sbb
and
ds
movsl
or
add
push
sub
loope
mov
test
rolb
fistpl
dec
outsl
js
push
add
arpl
popa
xchg
cmp
dec
shlb
ret
mov
cmpsb
rorb
push
pop
sahf
insl
arpl
std
dec
in
fisubl
or
and
dec
mov
sub
iret
xchg
mov
mov
test
add
fistpl
jecxz
in
or
inc
pop
fidivs
ficoms
cmp
sub
test
sbbl
je
in
repz
ss
sbb
frstor
fwait
outsb
pop
ret
ss
xor
push
cmpsl
into
addr16
xor
pop
xchg
aad
aad
stc
mov
adc
sub
aad
insl
mov
ljmp
lds
out
xchg
inc
mov
addb
cs
scas
mov
dec
jl
jbe
add
inc
sbb
mov
mov
cmp
mov
xor
mov
cmp
cmp
test
shlb
sub
sbb
inc
add
adc
sub
sub
mov
test
shr
push
out
sti
outsb
mov
cwtl
shl
push
push
adc
dec
push
adc
out
adc
shrb
mov
ds
mov
dec
scas
orb
scas
jl
lea
inc
popf
lret
int
ds
mov
ljmp
inc
sub
push
sub
ret
insl
fs
int3
mov
test
scas
es
cmp
ret
roll
imul
mov
sbb
xchg
sub
lret
dec
xchg
adc
adc
jne
outsb
pop
jge
and
sub
adc
mov
push
lock
leave
xor
push
outsb
inc
pushf
xchg
mov
dec
mov
int
push
xor
cwtl
dec
lret
insb
fstps
addr16
shl
cmp
int3
in
jb
push
adc
mov
push
mov
fcom
mov
mov
jns
setnp
xchg
mov
roll
inc
nop
jmp
insl
dec
cld
iret
popf
ror
shr
push
icebp
daa
push
sti
mov
popf
dec
hlt
adc
adc
adcl
cmc
jne
cmp
sub
pop
jge
jns
push
inc
mov
xchg
stos
out
sti
sarl
push
mov
push
jne
sbb
ret
insl
