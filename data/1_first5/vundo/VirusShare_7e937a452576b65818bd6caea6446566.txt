mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fadds
adc
and
xor
inc
cmp
pop
je
cmp
sahf
jmp
lds
hlt
dec
add
adc
and
xor
inc
sbb
cmp
enter
mov
cwtl
aam
in
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fdivs
jmp
icebp
mov
dec
pop
fs
sub
cmp
dec
pop
fldt
ljmp
mov
sbb
dec
cmp
mov
xchg
daa
imul
addr16
mov
adc
aam
negb
repz
xchg
lcall
mov
cmp
sub
cmp
xor
enter
fdivrs
imul
adc
push
xchg
mov
mov
cmpsl
jmp
fldt
loopne
adc
mov
pop
clc
mov
xchg
lock
pop
pop
add
lcall
shr
std
aaa
test
nop
popf
shll
cld
aad
test
add
adc
and
xor
inc
sbb
cmp
fcoms
les
mov
add
insl
add
ss
add
outsl
add
mov
negl
lds
sbb
insb
xor
pop
jl
sub
inc
pop
lcall
out
mov
cmpsl
mov
or
dec
dec
jbe
push
sub
enter
call
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
cmp
dec
sub
jnp
cmp
int3
pop
xlat
xorb
xor
inc
xor
int3
ret
jns
clc
dec
pop
hlt
mov
ss
adc
das
fwait
or
inc
push
jg
ret
sbb
inc
adc
push
test
das
dec
inc
jns
je
sbb
mov
out
dec
mov
fidivs
leave
xchg
mov
cmp
cmp
push
cmp
dec
mov
loope
inc
and
mov
fst
ds
mov
inc
inc
jge
xchg
adc
mov
test
jae
movsl
div
insl
jle
scas
cmpsl
outsb
cli
or
ds
je
shl
imulb
mov
adc
sub
pop
sbb
ja
xor
mov
jbe
cmpsl
inc
iret
lods
icebp
dec
pop
out
xchg
inc
cmpsl
hlt
pop
je
sbb
push
fiaddl
add
fs
mov
dec
mov
movsb
outsb
call
lcall
jnp
ss
imul
dec
ss
lcall
mov
jmp
cmc
mov
inc
mov
aad
mov
push
stc
jmp
cmp
daa
loop
ja
arpl
and
ror
shr
addr16
push
xlat
inc
call
jp
push
pushf
stos
push
inc
mov
push
mov
fcmovnb
adc
jb
lods
push
les
xor
adc
lcall
dec
push
fistps
and
sti
xchg
inc
popa
ja
mov
inc
mov
mov
out
js
mul
mov
xchg
mov
or
fistpl
fwait
das
hlt
clc
lods
in
fbld
xlat
mov
xchg
lret
jnp
push
jp
mov
sbb
loop
adc
fstpl
push
leave
pop
stc
push
pop
add
xchg
movsl
pop
out
pop
xor
scas
js
dec
and
addr16
jg
sahf
ret
push
lahf
mov
adc
adc
bound
clc
push
cld
mov
shlb
jne
repz
mov
roll
jns
pop
mov
cmp
sub
movsl
mov
js
imul
sub
push
ret
je
pop
jl
lods
cmp
pop
das
push
mov
xor
pop
push
ljmp
lret
lret
push
scas
ficoms
jae
xchg
pushf
ds
sub
jnp
push
movsb
idivb
xor
and
insl
sahf
mov
mov
aam
daa
lret
push
inc
mov
fs
or
cmp
push
jnp
or
cmp
and
ret
xchg
out
pop
repz
ret
mov
xchg
jo
into
jbe
scas
stc
movsl
push
adcl
shl
hlt
mov
lahf
xor
xchg
lods
pushf
mov
std
xchg
inc
int3
rclb
movsl
test
xor
inc
insl
inc
mov
in
mov
out
roll
movsb
jmp
jnp
movsb
rcll
sub
shrb
mov
bound
addb
xchg
pop
rcrb
and
aad
outsb
push
scas
jb
push
jne
icebp
pop
xlat
test
sbb
jecxz
dec
repz
daa
mov
xor
cli
pop
not
jno
or
negb
pop
mov
dec
into
xchg
xchg
mov
imul
xchg
mov
xor
sub
sahf
sbb
cs
cwtl
push
std
fwait
fwait
xchg
ret
movsl
lods
rclb
mov
push
imul
sub
push
mov
or
cmpl
push
mov
fldt
dec
aad
inc
mov
sub
mov
gs
mov
push
pop
or
adc
jbe
movsl
add
pop
cli
mov
inc
xor
outsb
and
dec
sub
in
lods
jge
mov
jl
or
mov
mov
mov
dec
jl
mov
testb
movsl
add
inc
int
bound
xor
pop
mov
repz
test
addr16
dec
xchg
push
push
push
or
jns
inc
or
enter
jne
sub
push
imul
ret
fiadds
add
in
arpl
pushf
xor
mov
inc
xchg
cmpsb
and
jl
daa
ret
loopne
dec
inc
pop
cmp
mov
push
scas
bound
shrb
fcmovu
xchg
out
lea
enter
pop
jae
sub
jp
mov
test
lret
div
jmp
ja
sarb
push
cmp
or
leave
test
jns
divb
sub
arpl
xchg
test
xor
cmc
repz
lods
stos
mov
les
push
cld
les
mov
movsl
push
ds
lods
pop
mov
push
sub
push
fwait
jecxz
outsl
mov
out
jg
in
dec
std
push
mov
inc
xchg
int3
stos
mov
push
add
xchg
push
test
adc
f2xm1
int3
dec
pop
or
das
ret
scas
mov
in
inc
shlb
adc
push
mov
inc
outsl
sub
addl
stos
sarw
xor
fs
dec
adc
imul
enter
pop
test
fldcw
out
cmp
pop
rorb
or
pushf
mov
jbe
add
cli
sbb
xor
and
jecxz
popf
notl
and
xchg
ja
scas
std
lret
inc
ret
xor
push
loope
arpl
jmp
push
fimull
flds
mov
in
and
push
clc
pop
lods
jle
clc
jae
mov
iret
xchg
fbld
ljmp
lcall
mov
or
jecxz
test
cltd
adc
ret
loope
xor
add
fwait
mov
das
int
fisubl
lock
clc
leave
or
mov
sub
pop
pop
mov
fxch
addr16
rcl
shl
clc
pushl
sbb
mov
sarb
xchg
jnp
pusha
xor
cmp
cmp
or
loop
and
mov
dec
cmp
mov
jbe
in
jecxz
jg
into
jp
pop
jno
mov
adc
iret
xor
push
cmp
in
add
inc
sbb
fcmovne
int3
sbb
rcl
or
les
jl
sbbb
scas
xor
mov
jne
out
jbe
outsl
push
fwait
mov
jp
scas
add
les
jb
add
gs
f2xm1
lahf
pop
test
iret
jns
mov
stos
mov
sbb
ss
or
mov
pushl
dec
mov
jmp
sbb
jbe
aam
mov
inc
scas
popf
imul
adc
adc
fdiv
es
sbb
jno
hlt
stc
daa
repnz
imul
sub
lret
ficoml
loope
mov
xchg
jo
xchg
fs
sbb
nop
xchg
xor
mov
cmp
aad
pop
cld
fcmovbe
pop
insl
pop
fidivl
fs
data16
push
lcall
aam
cs
and
add
cmp
jns
inc
mov
sub
out
jmp
pop
std
mov
je
jecxz
jge
out
ja
mov
cmpsl
add
in
mov
sbb
out
mov
test
punpckhwd
adc
mov
nop
jge
cmpsb
sbb
push
jnp
lcall
pop
fisubs
rorl
inc
cmp
push
push
add
xor
adc
hlt
or
or
dec
enter
inc
inc
movsb
pusha
fildl
adcb
clc
lods
xor
mov
out
outsb
mov
stos
fisubl
ds
rclb
cmp
imulb
repnz
stc
leave
xor
sbb
jb
mov
movsb
repnz
pushf
push
and
test
xchg
jns
adc
outsb
pusha
sbb
in
out
subl
js
popf
loopne
pop
aaa
sbb
xchg
ret
jg
popf
mov
push
lret
sub
ret
xlat
fsubrs
cwtl
push
test
xchg
push
sbb
mov
and
loopne
xchg
inc
aam
mov
push
adc
mov
call
mov
nop
lret
xchg
pop
or
out
test
xor
xor
mov
jnp
outsl
cs
sub
jo
xor
and
imul
in
popf
pop
insl
int3
mov
cltd
mov
loope
lea
jmp
lock
shl
movsl
daa
jnp
xchg
stc
pop
mov
cs
test
lods
aam
jecxz
mov
mov
push
add
lods
xor
cwtl
jnp
insl
and
inc
xor
add
inc
in
jle
daa
mov
mov
scas
dec
bound
fcoms
jb
mov
ja
adc
mov
je
sub
test
scas
push
jno
insl
add
mov
rorl
or
stc
mov
flds
and
stos
jmp
xchg
xchg
cmp
push
subb
enter
or
cmc
and
pop
pop
fdivrp
int
int3
or
xchg
sub
mov
fidivrl
outsl
lock
mov
xchg
lods
jo
jmp
in
fisttps
pop
fisttpl
and
lock
cmp
xchg
mov
pushf
sub
mov
lret
rorl
aas
pop
jno
cmp
stos
flds
pop
shll
es
adc
mov
test
lahf
int
sub
mov
jecxz
push
sbb
jecxz
pop
jo
inc
rorb
jge
rorl
popf
mov
cmc
out
hlt
scas
xchg
jno
push
sub
and
loop
shlb
loope
shlb
sbb
data16
jb
into
out
aas
aaa
iret
lods
pop
pushf
into
mov
pop
std
push
mov
jnp
fcmovb
xor
in
xchg
cmp
sbb
gs
and
mov
out
push
mov
rol
imul
lock
jmp
sti
adc
outsb
xchg
gs
dec
pushf
rcrl
popf
test
lret
int
pop
jmp
pushf
or
ret
and
ret
or
cs
mov
dec
pop
xor
in
mov
xor
es
push
jmp
shll
mov
push
mov
add
mov
xor
ret
pop
pop
and
push
add
cmp
xlat
xchg
hlt
shld
out
out
jle
je
stc
ja
push
jns
jmp
pop
sar
hlt
ret
add
mov
dec
lea
cmp
ljmp
jno
lods
iret
jo
inc
popa
outsl
pop
and
mov
jle
adc
add
notl
in
test
subl
push
xchg
push
dec
lods
arpl
jb
jg
clc
ja
xor
lods
repz
jnp
aas
std
jns
xchg
repz
jecxz
sub
sub
int
mov
scas
push
push
jnp
fildl
ljmp
in
push
xchg
mov
push
mov
dec
or
push
or
push
into
shll
xchg
call
xorb
xchg
pop
mov
jae
imul
mov
add
mov
dec
push
lret
add
xor
cs
sbb
addl
movsb
lret
or
or
lahf
std
cmpsb
and
push
mov
es
mov
sahf
cmp
jo
mov
and
inc
pop
fxch
jbe
leave
and
frstor
lock
mov
mov
scas
notl
mov
ror
repz
leave
ss
pop
mov
pop
cs
out
pop
cmp
sub
mov
out
cli
or
insl
decb
xor
add
or
mov
outsb
add
loope
notl
fucom
sub
jle
pop
or
or
sbbl
fucomip
xor
or
iret
jns
negl
ret
outsl
jb
and
clc
outsb
gs
fwait
dec
and
mov
ret
sahf
push
incb
jb
sbb
add
mov
xor
inc
subb
jno
cmpb
cmp
mov
scas
jne
sub
test
lods
dec
lea
cmp
lods
add
xor
push
mov
mov
cmp
jne
cmp
nop
lcallw
mov
add
cld
mov
les
test
dec
iret
dec
add
repnz
xchg
pop
add
test
adcb
fwait
aad
jg
pop
fsubr
aaa
add
pop
pop
cmp
std
stos
mov
push
pop
or
inc
push
mov
outsl
add
jle
sbb
cmpsb
shrl
adc
stos
inc
mov
in
push
lods
jne
mov
mov
mov
mov
mov
fsubrl
out
jmp
lock
xchg
pushf
int
jo
outsw
jbe
ljmp
in
mov
lock
sahf
xchg
pop
les
mov
in
pushf
in
bound
cli
repnz
add
cmpsb
in
inc
push
adcl
push
andb
push
jp
aaa
das
popf
aas
test
stos
xchg
cmpsl
out
dec
mov
imul
pop
sar
push
or
sbbb
enter
pushf
mov
daa
cmp
fst
sub
popa
ret
inc
xchg
jg
rorl
mov
push
xor
inc
mov
mov
fs
push
rorl
call
in
enter
stos
ret
mov
inc
mov
mov
pop
jmp
sti
push
pop
jne
xchg
loop
mov
stos
mov
dec
lcall
daa
into
inc
into
shll
jle
or
pop
xchg
insl
jle
movsb
mov
sub
cmpsl
push
test
jg
addr16
xchg
xor
pop
push
cmc
mov
pop
dec
xchg
jae
es
ret
icebp
pop
cmc
lea
jb
mov
insb
daa
adc
movsl
sti
idiv
jl
shl
xor
push
aam
xchg
pop
outsl
push
sbb
or
ja
sbb
clc
adc
loope
xor
icebp
jae
add
push
lret
hlt
cs
ljmp
lret
pop
xchg
jge
xor
cld
inc
mulb
stos
inc
push
jl
fnstenv
adcl
jae
mov
mov
outsl
js
push
jge
xchg
sbb
push
stos
outsl
fadds
lret
sarb
testl
inc
adc
repnz
inc
out
test
jp
pop
loope
js
mov
jl
mov
lea
loope
arpl
xor
out
and
dec
iret
sbb
lret
fnsave
dec
lret
sub
or
or
xor
pop
ljmp
out
inc
pop
jo
ja
dec
repz
and
cmp
mov
rcll
bound
jge
jecxz
push
sub
fs
leave
jns
xlat
scas
in
push
or
sbb
gs
int
push
popa
setb
push
shlb
jp
or
lods
outsb
push
mov
dec
jbe
push
sub
mov
sub
outsb
pop
pop
fnstsw
dec
movsl
mov
into
mov
lods
xor
push
sub
jge
insb
icebp
mov
sbb
lahf
pop
sarb
aas
xor
sahf
pop
scas
fisubl
add
cmp
stos
push
push
xchg
jbe
mov
pop
mov
inc
push
mov
sub
in
pop
jl
arpl
in
int3
test
cmpsl
lods
bound
mov
ud2
xchg
stc
push
jne
in
push
pop
jns
adc
mov
push
push
or
cmp
adc
and
aas
push
lods
mov
mov
xchg
out
adc
push
mov
ret
test
je
std
movsb
lock
dec
lcall
insb
rorl
fwait
sbb
pop
and
mov
fstl
push
popf
stos
add
xlat
mov
sarb
mov
std
cld
les
mov
out
sbb
pop
mov
sbb
mov
jge
pop
fsubrs
jnp
jg
push
xchg
xor
addr16
aaa
stos
add
and
mov
pop
xchg
in
push
mov
ret
push
fdivr
test
mov
insb
add
push
pop
dec
hlt
mov
xor
inc
push
push
inc
shrb
mov
mov
movsl
loope
add
ret
mov
jp
add
xchg
dec
cmp
add
push
jp
cmpsb
cmpsb
ret
add
cmp
bound
out
rcrl
and
rcrl
add
dec
mov
sbb
mov
bndstx
jbe
cmpb
jns
adc
test
lret
mov
push
std
mov
insl
scas
sbb
fldenv
jb
cmp
sbb
cld
add
fistpl
mov
rorl
xchg
repz
mov
xchg
in
ds
inc
jb
sub
and
lret
iret
cmpsl
out
fists
sbb
sbb
lock
or
mov
andb
stos
adc
stos
leave
add
mov
push
iret
inc
or
xchg
bound
or
adc
and
in
data16
push
jecxz
or
adc
out
pusha
sbb
xor
icebp
or
jbe
jl
popf
inc
rcll
push
cmc
jae
dec
nop
popa
stos
cmpsb
lock
sbb
jnp
les
add
push
add
mov
cs
adc
out
adc
outsl
pop
dec
jnp
aaa
aas
xlat
sbb
pop
imul
ljmp
shlb
stc
pop
arpl
enter
fs
pcmpeqb
mov
mov
aaa
rcll
and
ret
addl
xchg
xor
out
clc
lea
mov
test
loop
daa
test
fucomi
mov
add
repnz
aam
cld
bound
test
cs
mov
xor
cmp
and
mov
xchg
ljmp
adc
pusha
lcall
push
mov
cmc
data16
jne
add
xchg
rorl
mov
cmp
mov
mov
sarl
insl
or
es
push
dec
shl
fisubs
stc
mov
aad
inc
xor
jns
shrl
adc
rclb
mov
xchg
cmp
cmpl
pop
cmp
pop
cltd
incl
jp
dec
bound
jle
inc
lods
and
or
fists
xchg
push
and
lret
jns
test
add
ret
adc
outsl
xchg
sti
dec
xor
push
subl
and
ds
mov
shr
cmp
repz
pop
jb
fmul
outsl
xor
int3
xor
jbe
addr16
sub
insb
sub
shl
cmp
in
cli
dec
xchg
or
dec
mov
orb
cmp
out
adc
push
fiaddl
adc
adc
jecxz
test
gs
dec
or
push
mov
mov
in
jae
in
jns
jecxz
sbb
test
cmp
jecxz
jle
push
ret
adc
xor
fmulp
pop
ss
rorb
mov
int
addr16
decb
cmp
sub
mov
stc
mov
inc
push
and
subb
or
adc
sbb
test
aas
and
jo
cs
inc
pop
xchg
cmp
fld
pop
cmp
add
into
js
mov
jnp
dec
adc
inc
pushl
aas
sbb
mov
icebp
pop
insb
adcb
and
push
push
mov
scas
lock
das
in
iret
aad
xchg
shr
fdivrl
and
or
addl
sbb
loopne
jle
in
in
test
repz
pusha
and
test
mov
lahf
adc
dec
jle
mov
scas
flds
mov
sub
mov
ds
add
fnstsw
mov
jmp
xchg
mov
push
xchg
mov
xor
outsl
jecxz
test
cmp
mov
cmpsb
int3
repz
sahf
cmpl
outsl
mov
into
or
pop
in
and
pushf
and
cmpsb
or
lods
into
iret
xchg
add
jge
fldenv
xchg
cmp
loope
dec
lods
jnp
push
rol
flds
mov
int
das
adc
xchg
pushf
cltd
inc
inc
popf
nop
loop
sub
inc
mov
xchg
ret
mov
xlat
repnz
xchg
out
xchg
std
cltd
sub
int
fimuls
add
out
jo
mov
inc
jl
mov
push
mov
xchg
push
sub
lds
push
loop
pushf
loop
lcall
jb
lea
daa
jo
pop
jecxz
jl
sub
psllw
inc
xchg
arpl
ret
sbb
pop
ret
push
out
sar
scas
lret
dec
xor
add
pushf
hlt
xor
out
std
insl
sub
push
dec
cmp
popa
or
mov
int3
mov
in
mov
dec
cmp
xor
sub
xchg
push
push
xlat
mov
je
bound
mov
push
lods
ja
inc
sub
in
mov
sbb
jbe
out
fmuls
pop
cmc
inc
pushf
add
cwtl
outsb
and
and
les
bound
fiaddl
fidivs
mov
pop
insb
add
xchg
sub
lods
adc
xor
cld
fs
leave
jp
and
jb
jne
call
mov
hlt
inc
lcall
push
cmp
inc
dec
inc
pop
mov
adc
cmc
pop
sbb
xor
scas
mov
adcl
int3
in
sub
daa
mov
aam
dec
sahf
outsl
push
pop
xchg
fistl
jmp
insb
iret
iret
mov
sub
loop
std
xor
aas
adc
push
xchg
mov
aam
lcall
or
ja
dec
dec
cmc
or
add
pop
addr16
mov
add
cmc
fisttpl
sub
pop
sti
imul
mov
pop
jp
fnstenv
dec
cltd
jle
and
scas
ljmp
and
gs
add
add
popf
imul
dec
outsl
xor
jbe
sti
jno
aas
lahf
push
xlat
adc
adcl
js
sub
adc
adcl
imul
cltd
sbb
data16
and
aad
rcll
xchg
jbe
jge
je
fmulp
inc
sub
ret
mov
sub
fsubr
sub
mov
aaa
daa
cltd
sbb
xlat
repnz
jecxz
jmp
in
repnz
fisttpll
in
aad
test
inc
std
or
sub
sbb
stos
fildll
sbb
loope
jns
leave
fiaddl
adc
loop
xchg
or
out
xor
mov
sbb
les
es
add
call
cmp
xchg
in
xlat
loopne
data16
aam
mov
out
test
clc
inc
and
fdivr
ja
insl
jno
sbb
sarl
push
les
lods
lock
pop
scas
mov
insb
cs
adc
aaa
mov
sahf
test
xchg
pop
call
sub
fwait
lahf
and
repz
call
test
mov
enter
pop
or
mov
stos
push
xchg
or
js
stos
push
out
popl
notb
push
subb
js
decl
shll
mov
je
inc
add
popa
sti
mov
xchg
loopne
xor
lods
add
inc
push
shrb
ret
mov
lock
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
fcoms
les
hlt
dec
add
adc
and
xor
inc
sbb
cmp
movsb
clc
ret
decl
push
sbb
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
sbb
inc
cmp
arpl
cmp
pusha
or
cltd
rorl
jecxz
xchg
leave
ret
stc
mov
mov
cmp
arpl
dec
add
imul
int
test
cmp
jmp
inc
cmp
arpl
dec
add
imul
lret
jecxz
shrl
push
push
or
dec
pop
pop
sbb
dec
ret
xchg
rcrb
xchg
jno
cli
mov
xchg
fstps
cmp
add
bound
jb
lahf
sub
cmpsl
mov
es
fmull
clc
mov
pop
loope
adcb
inc
pop
mov
xchg
inc
test
jns
inc
mov
dec
sub
dec
jb
ja
adc
xchg
add
loopne
xor
sbb
shlb
out
jge
push
movsl
adc
js
push
ret
and
push
pop
lret
sbb
xor
mov
clc
loop
leave
sub
rolb
in
jecxz
insb
enter
andl
pop
adc
jns
imul
mov
xchg
leave
cmp
jmp
nop
pop
xor
add
push
sub
mov
lds
mov
adc
imul
sub
cld
xchg
mov
mov
jmp
aaa
push
pop
sub
pop
jg
add
imul
mov
xchg
leave
cmp
jmp
inc
cmp
arpl
dec
add
imul
mov
xchg
leave
cmp
jmp
push
addb
enter
loop
push
adc
mov
into
jo
or
xchg
pop
lret
lds
pushf
jb
push
push
lds
test
mov
fwait
push
ss
and
xchg
add
mov
push
push
lcall
imull
jae
jmp
mov
cmp
xor
xchg
xchg
in
pop
fbld
mov
je,pn
mov
lds
xor
mov
sub
sbb
jb
xchg
imul
jge
mov
pop
fwait
mov
incb
inc
cmp
add
push
outsb
xor
dec
ja
push
repnz
jecxz
addr16
pop
or
adc
outsb
fmull
fwait
inc
divb
mov
fs
fdiv
arpl
ja
stos
push
ret
or
add
adc
fwait
leave
xor
and
pop
inc
xor
push
jb
or
cli
inc
xor
aam
push
hlt
xchg
xchg
jle
int
sti
inc
or
cmp
insb
xchg
gs
mov
add
pushf
cli
xlat
mov
sub
sub
roll
xor
iret
aas
jnp
dec
stos
push
icebp
inc
adc
ja
enter
mov
sbb
fbld
and
aam
push
jo
popa
popa
test
movsb
out
das
ds
dec
push
inc
sub
jbe
dec
pusha
call
xor
sarb
jmp
xchg
fistpl
fcompl
cwtl
pop
cmpsb
inc
cmp
nop
movsb
mov
mov
sbb
test
mov
xor
and
movsb
lret
fnstenv
mov
std
jne
push
xor
add
loop
icebp
pop
aad
or
add
push
dec
lock
and
scas
push
stos
fldl
jne
cltd
mov
subl
xchg
lahf
mov
aaa
pop
aam
decb
push
cmp
imul
add
jno
add
ljmp
sub
xchg
jle
call
xchg
push
push
jle
imul
adc
jl
push
inc
jecxz
cmp
jno
das
ljmp
out
imul
int3
insb
mov
cwtl
dec
adc
sub
dec
mov
cmp
xlat
shll
fcomi
push
lea
mov
lock
nop
sub
mov
sub
jecxz
ret
aaa
dec
icebp
dec
in
inc
push
fwait
xchg
sbb
mov
cwtl
into
jge
mov
hlt
inc
cmp
adc
dec
xchg
jle
jl
dec
orl
pop
lock
jmp
push
out
sbb
stos
push
mov
dec
xor
lds
ljmp
fidivrl
lret
mov
hlt
mov
sbb
test
jnp
xor
clc
fs
dec
dec
jno
jmp
xchg
subps
call
xchg
call
lods
sbb
sbb
repnz
inc
mov
lock
sub
cmpsl
cwtl
mov
mov
or
dec
adc
scas
xchg
int
insb
jge
cmp
stos
inc
jnp
icebp
xchg
pop
and
outsl
jmp
shrl
adc
cmp
jnp
xchg
mov
in
cs
lcall
mov
aad
sub
out
cmp
ljmp
mov
ss
sub
lahf
mov
lods
add
or
dec
jp
sub
jnp
and
fnstenv
mov
mov
mov
push
push
outsl
pop
sub
in
inc
sub
mov
sub
jne
fdivs
mov
insl
cmp
gs
pop
mov
push
fucomp
in
into
ret
movsb
roll
pop
dec
insb
sbb
out
scas
popa
and
movsl
dec
sbb
mov
es
lock
pop
adc
popf
into
loopne
and
lods
mov
data16
in
cltd
jge
add
add
ror
push
lahf
movsl
fdivrs
add
popf
mov
inc
ds
add
xchg
clc
or
test
ret
ret
mov
shl
sbb
fcmovbe
in
jmp
lahf
sub
repnz
test
mov
lea
xchg
insl
sarb
jp
daa
xchg
xorb
cli
js
sti
push
push
scas
push
dec
or
and
fwait
xchg
lcall
mov
clc
mov
push
std
std
cmpsl
rcr
add
out
add
int
xchg
xor
fwait
aad
pop
add
jg
test
cmp
cmovne
out
in
dec
imul
mov
or
das
cltd
scas
cmpsl
mov
and
and
les
push
insb
pop
lock
in
aas
aas
es
daa
inc
nop
or
pop
pop
cltd
pusha
lret
mov
or
test
lret
jmp
xchg
pop
popf
lods
aaa
xchg
sub
mov
pop
outsl
out
lods
mov
dec
jge
inc
in
push
cld
ret
sbb
insb
lods
adc
ret
loopne
or
aaa
gs
nop
or
pop
not
fnstenv
out
xchg
jnp
or
aam
enter
jnp
push
adc
mov
pop
mov
mov
loopne
int3
cmp
xor
scas
mov
dec
mov
data16
stc
dec
insl
sbb
loope
popf
sti
push
mov
dec
push
mov
push
mov
xor
adc
insb
test
incb
xchg
xchg
lea
cs
je
sbb
out
and
jecxz
test
pop
sub
mov
dec
sub
and
mov
and
hlt
mov
in
push
cltd
stc
outsb
mov
sub
inc
mov
or
add
add
sahf
idivb
out
cmp
dec
xor
arpl
je
fwait
in
sti
jmp
pop
test
repnz
push
gs
test
fcompl
pop
movl
xchg
mov
out
mov
push
aam
int
and
adc
test
les
js
fucomp
jne
lret
int3
xchg
xchg
mov
in
cltd
push
bound
dec
mov
les
pop
adc
and
stc
int
int
xchg
ljmp
fistpll
les
xlat
iret
ja
or
push
xor
test
inc
push
cli
and
pop
cld
add
outsb
push
test
pusha
hlt
xchg
ret
sbb
popa
jb
int3
xchg
cmp
inc
testl
push
and
stc
sahf
es
insl
jmp
call
cld
cmpsl
testl
bound
frstor
outsb
cld
mov
roll
cmp
mov
cmp
mov
insl
dec
call
mov
lods
bound
sbb
insl
xchg
imul
das
cmp
sub
cli
ret
dec
popf
into
out
jne
sub
movsl
imul
arpl
jmp
adc
jne
sub
lahf
xor
jno
loop
call
inc
stos
push
sub
push
xlat
jcxz
pop
cmp
and
daa
push
mov
mov
movsl
sbb
inc
and
xchg
aas
test
test
daa
shr
cltd
and
mov
sbb
fs
in
int
std
jge
mov
jecxz
jp
or
xchg
xorl
shl
sarl
push
aam
ja
rcl
mov
aam
cmc
daa
lds
loope
xchg
inc
dec
push
xor
int3
frstor
inc
jno
lods
pusha
jbe
push
lds
fsubrl
addr16
sahf
sub
cmp
cmp
nop
mov
jbe
add
aas
ret
jmp
jg
enter
out
push
xchg
dec
xor
pop
push
scas
fcomip
gs
rcr
shl
into
out
xchg
pop
mov
push
mov
xchg
sbb
iret
je
jge
addr16
test
imull
pop
jb
adcb
leave
mov
adc
cmp
lods
rcl
out
sbb
roll
or
repnz
dec
shl
stos
clc
cld
jo
aam
and
and
data16
repz
repnz
ljmp
outsl
pop
jg
and
in
inc
in
jb
sbb
rclb
xor
lods
mov
bound
inc
push
movsb
mov
cwtl
or
and
jmp
sbb
xorl
ljmp
mov
insl
divl
out
or
or
repnz
mov
imul
add
xchg
popf
xlat
xchg
or
pop
cmp
clc
test
and
cld
mov
out
dec
push
sahf
pop
shr
xlat
cmp
stc
mul
sub
jmp
mov
lods
mov
ss
adc
jmp
sbb
xchg
cmpsb
jne
out
clc
fwait
lock
dec
pop
push
je
cmp
mov
mov
push
and
and
mov
dec
inc
call
push
in
movsb
push
or
pop
decb
xor
sbb
mov
or
add
or
sub
in
add
in
mov
aam
inc
xor
sub
pop
sbb
ds
and
add
lahf
push
dec
cwtl
aad
push
sub
inc
inc
dec
notb
in
push
sub
xchg
add
clc
test
jmp
in
push
pop
push
in
push
fnclex
mov
jecxz
ret
lods
jae
out
jmp
or
jo
shrl
insb
outsl
int
xchg
sub
jb
jmp
enter
pusha
ficompl
daa
mov
push
jl
mov
adc
fnstcw
pop
cmpsb
mov
bound
xchg
mov
insb
mov
andl
jae
cltd
jb
push
mov
adc
sub
out
xchg
sub
ljmp
fisubs
mov
jnp
leave
mov
lods
popf
lahf
jnp
or
mov
stos
int3
movsl
push
sub
das
lods
mov
addr16
mov
or
lret
xchg
push
hlt
scas
and
test
clc
dec
imul
repz
cmc
outsb
xchg
xchg
stc
pop
out
cmp
je
or
jg
mov
rcll
in
loope
fdivrs
jmp
xlat
mov
push
pmaxsw
cmpl
ja
cli
inc
xor
incl
loop
and
cmp
jbe
jnp
push
or
int3
data16
cmp
add
cmp
lret
stc
sar
outsb
cmp
inc
add
sub
xacquire
mov
cmp
shlb
cmp
dec
stos
lods
push
data16
cmp
rolb
jno
xchg
int3
mov
test
xchg
add
mov
jns
mov
es
popa
insb
add
cwtl
arpl
pop
dec
lods
ficompl
jmp
int
pop
mov
push
sub
sahf
add
push
mov
pusha
cmp
fisubrl
sub
test
and
in
arpl
sar
test
shll
les
xchg
fldcw
sub
testl
inc
iret
fs
in
ret
or
inc
pop
pop
jl
push
outsl
ja
dec
shll
aam
shlb
test
mov
xchg
dec
xchg
jo
lret
jb
dec
sbb
inc
xchg
outsb
sub
mov
sti
repz
add
mov
cmp
fcomps
push
xchg
inc
xchg
data16
cmpsb
sub
sbb
mov
sub
sub
jg
aas
lret
adc
ss
and
imul
pop
sbb
mov
test
dec
ljmp
lret
cmc
aas
lds
mov
and
adc
imul
and
rol
incl
and
jmp
push
push
out
leave
pop
and
adc
add
mov
adc
mov
test
pop
mov
dec
adc
mov
sub
adc
clc
xchg
ret
mov
sbb
popl
adc
pop
cs
out
imul
loope
lahf
xor
add
les
add
repz
xor
mov
ljmp
pop
sbb
dec
mov
shl
inc
arpl
loope
add
xor
or
ljmp
mov
aam
leave
aam
jecxz
add
mov
cmp
pop
idivl
mov
mov
sub
clc
test
adc
ret
fs
data16
iret
xchg
sbb
hlt
xor
add
xchg
mov
adc
ret
add
mov
stc
cld
xor
sub
call
scas
stc
ds
std
or
arpl
xchg
and
cli
add
mov
les
in
loope
filds
jg
nop
imul
push
xor
and
lret
jle
and
xor
inc
pop
jl
or
je
inc
or
pop
add
lahf
jbe
roll
mov
ja
jo
adcb
push
jne
leave
das
fmuls
adc
cmp
add
sbb
pop
xchg
aam
mov
cwtl
in
cmp
into
fisttps
data16
mov
xor
mov
insl
mov
repnz
pop
dec
xor
ret
sub
push
loope
sti
and
das
pop
sbb
and
mov
lea
sahf
fbld
mov
jbe
aaa
stos
fidivrl
push
lods
insb
dec
in
adc
shrb
xchg
inc
enter
iret
sub
cmp
dec
jecxz
repz
shlb
pop
movsl
paddb
mov
ds
xchg
popf
jmp
xor
inc
jge
stos
push
dec
xor
push
in
dec
cmpsl
sub
push
outsl
adc
mov
ljmp
sub
jmp
jne
xor
int
sti
adc
test
test
test
mov
ret
in
dec
clc
dec
sbb
push
xchg
das
xchg
xor
lret
xchg
faddp
mov
push
mov
dec
pop
movsl
jb
inc
jmp
mov
mov
jp
adc
mov
pop
leave
xchg
fs
in
jb
repz
xlat
loope
fldl
cmp
cmpsl
mov
ljmp
icebp
mov
fmuls
in
mov
leave
sbb
in
xor
add
movsb
outsb
imul
rcrl
int3
pushf
jb
xchg
jp
je
mov
aad
pop
pop
jnp
mov
lahf
dec
iret
aad
lret
adc
jl
mov
cmp
push
jb
mull
add
and
mov
daa
stos
enter
cwtl
push
push
pop
push
loope
lds
fwait
nop
out
dec
sub
mov
in
pop
insb
cmc
sti
das
cmp
fmul
test
sbb
nop
push
inc
sbb
dec
jl
mov
jecxz
scas
mov
sarl
cwtl
and
push
pop
xor
pop
pop
andl
sbb
leave
mov
mov
pushf
adc
mov
pusha
jg
cli
aam
add
test
push
movsl
xchg
sti
js
test
frstor
movsb
lods
ss
jo
das
and
es
adc
je
ret
decl
shlb
sbb
out
sub
dec
subl
cli
lds
ret
xchg
bound
jmp
fldenv
addr16
pop
pop
in
jp
movl
xchg
leavew
mov
inc
int3
out
loopne
and
mov
cmp
loopne
outsb
sub
call
enter
into
push
mov
push
fisubs
and
leave
arpl
pop
cltd
adc
adc
fisubrl
imul
sahf
mov
pop
in
inc
inc
je
mov
in
mov
mov
jle
or
mov
scas
arpl
movsl
int
or
dec
call
sbb
pusha
pop
mov
and
aad
aas
mov
inc
push
jg
adc
dec
cmp
jge
icebp
notl
fisubrs
push
flds
mov
mov
gs
ljmp
int3
in
adc
into
mov
pop
das
push
fadds
fwait
or
jne
rorb
ja
mov
adc
fidivrs
rcrb
call
hlt
mov
cmp
cmc
pop
test
jne
daa
loopne
ja
fdivl
aas
dec
sti
sbb
jnp
lods
cmp
aam
cmp
pop
and
sahf
ljmp
push
call
cmc
lret
jecxz
test
xor
mov
dec
mov
or
jns
fsubrl
outsb
dec
gs
out
sarb
ss
mov
cmp
fidivrs
xor
nop
out
pop
incb
mov
and
in
mov
sbb
sub
mov
lret
cmpsb
fmul
out
rolb
sub
imul
pop
stos
and
pop
jecxz,pn
or
sub
xor
in
inc
sub
cmp
mov
sbb
adc
fimull
pop
sub
push
rcl
pusha
dec
and
or
xchg
fs
cltd
in
scas
popf
xchg
xchg
int
test
push
stc
in
inc
in
stc
cs
lock
cmpsb
cltd
mov
stc
push
sub
cmpsb
sahf
repnz
cs
xor
leave
inc
arpl
and
mov
or
shrl
aaa
push
aad
cmp
fldenv
out
pushf
sahf
mov
aaa
push
jmp
ss
lock
fsubs
mov
mov
ss
cmp
mov
cltd
sbb
fcoms
pop
movsl
adc
mov
cltd
fsubs
sbb
inc
test
data16
ret
push
int
les
adc
addl
mov
in
adc
iret
push
push
inc
xchg
xchg
mov
call
jmp
jae
icebp
xor
fisubs
fnsave
leave
inc
cld
or
jbe
out
adc
jp
test
clc
mov
cmp
inc
push
xor
xor
lret
loope
adc
add
mov
nop
insl
shll
repz
sub
adc
insl
and
or
out
sarb
sbb
adc
pop
scas
pop
je
dec
enter
mov
push
das
sbb
in
pop
cmp
shl
cmp
in
int3
mov
push
jg
and
cmpsb
push
cmp
xchg
stos
fsubrl
pusha
pop
adc
mov
cmp
fstpt
pop
jle
into
int
cmp
and
dec
push
and
fdivl
cld
pop
pop
decl
pop
dec
aas
lret
loope
mov
in
mov
pop
mov
enter
jge
sub
rcrl
xor
cltd
pop
call
pop
inc
es
mov
jle
adc
inc
out
lret
inc
imul
jb
dec
adc
sahf
aad
and
outsb
inc
jns
xor
adc
xor
and
push
push
gs
jae
les
xchg
jmp
mov
pop
xchg
xor
cltd
int3
cli
jne
sbb
push
mov
push
cmp
mov
push
sahf
aam
cmp
into
daa
pop
mov
idivl
cmpl
mov
mov
hlt
jle
jb
xchg
sub
inc
sbb
scas
jno
loop
roll
inc
xchg
adc
add
aas
popf
inc
inc
inc
adc
lahf
mov
bound
shlb
icebp
cmpsb
sub
and
or
gs
daa
adc
out
mov
inc
xor
frstor
icebp
repnz
jmp
cld
into
dec
lret
sbb
xor
sub
mov
jnp
iret
cmp
inc
dec
ret
insl
push
adc
push
sub
or
mov
out
fldcw
fisttps
stc
cmpsb
hlt
push
xchg
gs
fs
sti
dec
es
adc
or
jg
xor
xchg
jle
mov
ds
sub
or
sti
jno
adc
mov
push
fiadds
mov
lahf
popf
inc
cltd
shrb
and
mov
lret
mov
aaa
jge
dec
dec
inc
hlt
movsb
fidivs
xor
test
adc
and
fidivrs
mov
addl
sbb
ds
popf
out
cmp
inc
fwait
adc
mov
and
inc
dec
lea
cmc
add
jg
sbb
mov
ja
and
and
stos
int3
cltd
sub
mov
aam
rcl
mov
xchg
inc
pop
popa
in
ficoml
in
add
jecxz
sub
jb
mov
lds
lret
dec
jle
testl
add
aas
mov
pop
mov
scas
push
mov
mov
cmp
xchg
pop
fstl
xor
call
xchg
lds
adc
inc
pop
mov
out
scas
sub
mov
xchg
jge
lock
stc
pop
ds
int
mov
pop
ret
or
push
mov
add
mov
dec
dec
les
xlat
adc
rorb
push
icebp
add
ss
push
shl
hlt
fsubs
fsubrl
dec
mov
rcrb
outsb
dec
mov
pushf
mov
les
mov
inc
sbb
shlb
xchg
cs
push
add
cmp
sbb
arpl
ror
mul
std
ss
loope
fcoml
scas
xor
fadds
xchg
xchg
fstpt
and
cli
jo
fisttpl
mov
lret
cmpb
push
ss
test
push
inc
pop
dec
fildll
pop
mov
not
outsl
xor
xchg
inc
sub
mov
pusha
dec
inc
jge
rcrb
xchg
cmpsl
addr16
dec
cmp
lahf
sub
vmovshdup
test
xchg
pushf
or
jo
nop
mov
push
fmull
test
mov
lds
lock
cmpb
mov
inc
push
and
or
xchg
leave
dec
cltd
push
std
mov
mov
add
dec
jb
ret
shr
gs
jne
dec
xchg
jp
test
shr
inc
lods
cmp
cmp
xor
mov
fwait
cmc
push
or
add
mov
xchg
shr
lea
hlt
mov
call
sub
or
lahf
mov
mov
cmpsb
push
movsl
inc
lods
cmp
add
mov
mov
jg
sti
push
mov
ljmp
mov
inc
add
xor
cwtl
enter
mov
pop
sub
in
push
mov
mov
ss
cwtl
inc
jbe
mov
testl
sbb
or
mov
pushf
scas
inc
sbb
xor
sahf
outsl
aaa
outsb
lods
push
movsl
mov
xlat
stos
rorb
stos
mov
mov
lret
jo
mov
jmp
inc
in
jl
jp
jbe
inc
aaa
ret
aaa
nop
lods
rcrb
enter
push
cli
in
rolb
shl
in
movsl
cli
sub
mov
sub
test
push
leave
sub
push
rcll
pop
mov
push
sub
cmp
popl
sbb
fld
neg
adc
sbb
cmpsb
std
add
cs
je
shl
pop
das
sub
xorb
les
mov
adc
int
iret
loop
pop
ret
add
push
repnz
int3
lods
inc
cmp
popa
sub
jmp
cmp
mov
rorl
orb
iret
aam
add
xchg
xchg
inc
or
xchg
xor
cs
mov
stc
cli
xor
pop
imul
outsb
push
sti
push
insb
movsb
jns
xchg
ljmp
fmull
push
fwait
lods
ss
add
lods
xchg
xchg
sub
pop
cld
outsl
fdivs
mov
xchg
add
pusha
mov
and
sub
adc
jns
imul
mov
xchg
leave
cmp
jmp
inc
cmp
arpl
dec
add
imul
mov
xchg
leave
cmp
jmp
inc
cmp
bound
dec
add
imul
mov
xchg
leave
cmp
jmp
inc
cmp
addr16
adc
jns
imul
adc
test
jl
dec
push
pop
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aad
xor
mov
test
cmp
insl
pop
sbb
js
push
int
std
test
fcomps
call
dec
push
jne
insl
pop
xor
inc
jnp
or
outsb
fwait
enter
aam
adc
pop
sbb
pop
js
adc
cmovg
dec
fstps
fisttps
cld
ds
sub
or
add
add
push
orb
push
roll
push
pushf
mov
ret
cmp
stc
mov
pusha
enter
mov
jno
je
dec
shl
pop
pop
negl
jl
xchg
cmpsl
out
jmp
lock
stc
std
in
ljmp
adc
aad
dec
subb
push
sbb
add
daa
scas
dec
mov
pop
sbb
popf
sub
sub
mov
inc
mov
jle
int
lods
loopne
lock
fnsave
dec
cmp
push
mov
mov
popf
mov
ljmp
push
cmp
push
jecxz
and
mov
mov
mov
ljmp
dec
push
xor
bound
das
inc
cwtl
fwait
add
mov
test
sahf
and
cmp
inc
pop
sub
or
ljmp
sbbl
pop
or
jge
insl
pop
sbb
push
int
std
test
fcomps
call
dec
cmp
insl
pop
sbb
push
fwait
adc
test
rcl
ljmp
cmpxchg
adc
push
mov
scas
xchg
ljmp
mov
repnz
hlt
xchg
ss
sbb
push
xchg
xor
xor
sub
mov
cmp
jmp
jno
test
jno
sbb
push
repnz
outsb
and
movsl
pop
push
iret
xchg
aaa
jge
mov
addr16
test
inc
jle
data16
sarb
cmpsb
mov
dec
sbb
lahf
iret
inc
or
sbb
repnz
fiaddl
mov
std
adc
or
aam
or
mov
jecxz
and
adc
mov
insb
daa
imul
cmp
xlat
ret
cmc
jno
into
rorl
out
cmp
fstpt
mov
out
cwtl
push
cmc
out
sub
mov
in
push
mov
add
call
lahf
fcoms
mov
xchg
adc
or
jp
cs
gs
je
mov
out
insb
ds
mov
and
sub
jl
leave
fdivrp
sbbb
sbbb
insb
rorl
mov
inc
mov
or
pop
pop
mov
dec
push
cmc
scas
ss
clc
mov
jecxz
mov
iret
mov
push
fisttpll
icebp
add
cmp
pop
jo
push
add
or
jmp
push
add
imul
aas
or
cltd
scas
fsubrs
nop
pop
or
push
lods
cwtl
and
out
dec
cli
out
sbb
mov
push
adc
std
test
ds
gs
insl
and
push
mov
divl
and
lea
add
add
pop
pop
imul
std
mov
push
and
sub
bound
icebp
or
xchg
xchg
push
aam
call
or
jp
fstps
iret
cmpsb
cmp
icebp
xchg
stc
cli
cli
or
mov
mov
mov
adc
dec
sbb
inc
xchg
mov
and
pop
rcl
cmpsb
adc
add
negl
cltd
mulb
jo
lods
loope
xor
ljmp
or
arpl
stc
ret
gs
add
cmc
in
push
jecxz
inc
addr16
xchg
xor
out
sub
fimull
es
lds
mov
lods
push
daa
outsb
xor
add
test
mov
mov
in
add
add
nop
aas
std
incb
outsb
jno
push
imul
or
std
sub
gs
jmp
adc
test
or
push
pop
mov
add
jnp
cmp
pop
ficoms
dec
xor
std
lods
stc
jg
dec
call
sub
mov
cmp
loop
mov
sbb
xor
push
inc
inc
repnz
mov
or
inc
orl
dec
cltd
imul
movsl
leave
jge
lea
mov
sti
in
sbb
popf
stos
mov
jge
mov
dec
jg
xchg
jp
jg
loope
rorl
sbb
cmpsb
icebp
mov
stos
add
hlt
scas
in
outsl
jge
jl
pop
ret
and
aad
xchg
mov
jmp
push
iret
mov
adc
lock
jnp
lret
jno
imul
sub
jnp
in
repz
in
push
xor
xchg
push
imul
pop
mov
ficomps
mov
xchg
xor
sbb
pop
icebp
and
outsl
in
mov
add
imulb
jmp
ja
test
dec
jg
mov
push
pop
mov
lea
in
decl
std
loopne
addr16
js
ss
push
and
sbbl
cmp
lcall
jns
and
or
xchg
adc
push
dec
fwait
mov
mov
movsb
jl
xor
jle
nop
aaa
out
das
int
push
mov
pop
daa
pop
mov
stos
xchg
sub
inc
gs
mov
mov
into
cmp
push
mov
cld
rcrl
mov
into
lahf
dec
icebp
dec
movsl
scas
leave
push
es
test
lcall
dec
dec
inc
add
pop
jg
cmpsl
pop
scas
loopne
cmp
mov
fcomps
repnz
xchg
cmp
adc
cmc
xor
fwait
sbb
gs
lret
movsl
push
nop
cmp
sub
es
fsubrp
or
repz
jo
lcall
inc
mov
pop
lahf
lods
mov
sbb
icebp
mov
subl
inc
pop
pop
push
lods
push
xchg
out
sbb
push
sub
and
jb
in
adc
pop
jnp
sbbb
dec
pushf
rorb
pop
push
adc
pusha
aam
rcr
ret
aad
orl
pushf
out
shr
rorb
jnp
lds
adc
mov
js
sti
loopne
add
mov
lcall
mov
push
int
or
push
scas
jns
mov
mov
xchg
addr16
js
jnp
jne
shrl
lret
jae
je
vpaddb
fsubr
mov
dec
xor
pop
idivb
out
in
sub
fiadds
pop
mov
pop
xor
cmp
jmp
stos
imulb
stos
cs
jmp
jp
rcrl
hlt
jmp
cmc
lds
fdivs
add
cmp
test
sbb
jle
js
mov
xor
add
movsl
inc
fcmovnu
jne
es
hlt
rcr
jmp
jns
pop
adc
mov
mov
lods
mov
xchg
je
scas
jmp
xor
mov
out
cmpsl
mov
cwtl
jb
test
xchg
pop
push
push
jbe
inc
jl
push
repz
repz
rol
push
jmp
popa
xchg
mov
xchg
stc
dec
adc
dec
or
inc
out
ljmp
enter
pop
outsl
loop
movsl
les
sbb
push
iret
pop
pop
insb
and
lret
xchg
and
jle
pop
jl,pn
lock
jo
outsl
fmuls
mov
lea
mov
stos
js
xchg
xor
inc
mov
dec
stos
dec
and
push
mov
bound
xchg
or
add
insb
and
push
aam
ret
dec
cli
xlat
xchg
mov
rcrl
xlat
xchg
ds
sbb
push
pusha
mov
jecxz
outsl
ret
repnz
or
mov
cltd
movsb
fwait
push
mov
pop
in
cmp
pop
repz
cltd
sub
add
xchg
mov
std
shl
mov
sbb
test
inc
jne
push
dec
mov
jle
stos
or
add
sub
mov
fistps
sbb
ljmp
mov
fwait
mov
push
add
pushf
xchg
jbe
negb
loop
pop
lret
push
into
sub
ret
xchg
push
cmc
cld
in
xchg
add
fwait
jl
subps
mov
les
pop
lret
mov
shufps
iret
add
or
push
adc
sbb
stos
push
and
sbb
xor
les
mov
aad
fstpl
lea
mov
and
jecxz
mov
mov
pop
jp
lcall
out
push
pusha
adcb
pop
inc
popf
or
jno
cmp
jecxz
dec
cmc
mov
xchg
into
dec
mov
movsb
sahf
repz
jg
mov
repnz
dec
loopne
enter
lods
jle
push
ret
cmp
pop
scas
mov
mov
sub
in
iret
scas
fadd
jp
and
jmp
les
repz
xchg
mov
test
cwtl
sbb
scas
mull
jo
sahf
data16
dec
test
dec
cmp
pop
loope
mov
rcll
les
add
adc
imul
inc
ret
pushf
mov
inc
cmp
pop
and
adc
cmp
mov
xchg
insb
mov
aas
es
push
mov
into
push
xchg
aad
adc
cli
sbb
lret
std
frstor
xchg
dec
ja
inc
mul
sub
mov
jo,pn
pop
clc
xchg
stc
popw
aaa
sbb
leave
mov
outsb
dec
sahf
bound
mov
aam
adc
inc
mov
std
pop
cwtl
pop
stc
out
out
mov
movsl
clc
mov
loopne
cmp
and
daa
test
fwait
mov
adc
daa
jecxz
leave
push
sbbb
hlt
icebp
imul
insb
imul
fmull
hlt
cmp
fstl
pop
mov
sbb
add
sbb
sub
pop
aam
xchg
scas
cmc
leave
xchg
mov
add
xchg
adc
sub
push
icebp
mov
pop
mov
call
jo
xor
std
les
scas
xor
js
aad
mov
adc
cmp
into
and
adc
pop
jne
popf
fistpl
mov
cmp
movsl
shll
add
pop
imul
and
xor
rcll
push
xchg
jecxz
in
aas
mov
lahf
test
cmc
push
push
and
pop
cmpsl
mov
leave
xchg
std
push
icebp
imul
jae
enter
jecxz
pop
push
in
arpl
movsb
dec
and
sbb
lds
in
dec
jle
mov
pop
leave
sar
sbb
insb
insl
in
dec
imul
mov
pop
adc
imul
clc
and
ja
jb
pop
in
sub
sub
pop
push
rolb
faddl
inc
mov
pushw
clc
adc
outsl
add
xchg
aam
stos
inc
addr16
push
sarb
jne
scas
mov
es
xchg
mov
mov
push
sbb
scas
outsb
jmp
mov
into
mov
fsts
test
into
sub
xor
lahf
pop
dec
mov
xor
mov
rcrb
xchg
fcoml
dec
lret
push
loope
inc
scas
xchg
std
loope
cmp
mov
pusha
aad
insl
sbb
jbe
mov
ljmp
inc
push
insl
and
mov
mov
sub
add
pop
test
pop
add
xor
xor
nop
sub
rcr
sbb
sahf
dec
cmp
add
stos
dec
leave
fildll
stos
std
xchg
addr16
mov
mov
es
mov
lds
xchg
stos
movsb
int
adc
push
sub
das
mov
xor
nop
fbstp
fs
cmp
jmp
add
push
sub
dec
or
mov
xchg
pushf
mov
and
nop
sbb
subb
sub
leave
rcrl
xchg
loop
in
insb
in
sbbl
test
add
inc
add
lret
icebp
push
in
and
std
or
xchg
mov
das
iret
xlat
add
out
mov
movsl
pop
decl
js
daa
cltd
cli
outsb
inc
sti
data16
xorl
popf
jb
mov
or
aas
inc
mov
enter
in
loop
add
and
xchg
sub
cmp
in
add
jne
fdivr
lahf
pop
popf
cltd
xlat
or
movsb
inc
and
cmp
jle
jmp
pop
repnz
mov
xchg
nop
jo
mov
int3
cmpl
xchg
cltd
in
jb
mov
les
mov
inc
les
sbb
add
out
sub
xlat
inc
jbe
sbbb
hlt
stc
mov
xchg
insl
or
mov
out
std
dec
inc
xchg
xchg
xchg
jmp
aam
inc
movsb
xor
xchg
fcmovnbe
test
shlb
push
adc
mov
jno
mov
dec
mov
mov
pop
mov
push
mov
sbb
enter
inc
mov
scas
jl
adc
das
lods
lret
xchg
clc
mov
ss
rorb
int3
pop
mov
jle
sub
outsb
sbb
ds
lret
lcall
lods
sti
lret
negb
mov
jg
push
jae
imul
xchg
mov
nop
jbe
pusha
fcomi
jae
ror
jbe
xchg
dec
out
fdivl
jns
loope
add
pop
insb
in
dec
repnz
pop
je
jle
aad
lods
std
test
jmp
pop
mov
sub
es
mov
ja
rorb
test
fnop
dec
sarl
cmp
mov
loope
fnstsw
dec
in
xchg
sub
jle
imul
fstpt
pusha
mov
andb
aam
adc
xor
cmc
add
mov
adcb
dec
inc
movsl
inc
adc
add
loope
and
mov
sub
ret
xchg
jo
scas
sub
outsb
dec
jb
shll
mov
cmpsb
cmp
or
mov
dec
xchg
addr16
dec
idiv
xor
les
mov
pop
sarl
jmp
mov
push
out
inc
sbb
sbbb
xor
ss
adc
dec
and
push
sbb
cld
or
cs
or
addr16
lahf
shrb
ret
ret
data16
testb
les
lods
inc
enter
inc
cmpsl
mov
andl
pop
push
or
dec
aam
outsb
cmp
jae
lahf
fldt
cmp
rcrl
jmp
das
mov
iret
inc
loope
push
xchg
xor
cmp
iret
movsl
xlat
scas
movsl
cwtl
mov
mull
push
dec
add
pop
pop
in
rcr
push
std
mov
mov
in
sti
aas
mov
mov
mov
sbb
xchg
iret
popa
loopne
fistps
arpl
stos
mov
cwtl
call
sub
test
xchg
jnp
mov
outsb
int3
cmp
xchg
adc
cmpl
or
lea
imul
xchg
sahf
popa
push
cmpsb
or
inc
add
push
out
mov
lahf
das
test
xchg
xchg
pop
out
mov
xor
ret
sti
jge
rolb
add
aaa
jp
aad
push
sub
adc
nop
xor
dec
dec
jle
inc
aaa
sbb
sub
dec
add
ja
xchg
adc
in
xlat
inc
xlat
push
cli
loop
push
xchg
xchg
in
sarb
in
test
jb
cs
mov
xchg
sub
int
dec
xlat
dec
loop
mov
adc
leave
in
subl
and
nop
iret
xor
jne
jl
add
pop
lods
jns
push
pop
stc
lea
and
fwait
test
sar
mov
xchg
mov
xor
icebp
and
mov
xchg
xchg
fcompl
or
mov
push
mov
lods
lcall
mov
not
clc
push
add
xor
mov
xchg
in
sbb
pop
dec
inc
mov
loop
std
adc
not
fldenv
pop
rorb
cmp
mov
xor
lret
shlb
sbb
add
inc
lea
loope
inc
popa
sbb
divb
ds
lahf
lods
push
notb
test
insl
sub
add
and
movsb
gs
dec
xchg
push
sub
stos
loopne
inc
lods
mov
dec
cmpsl
jo
cmp
jmp
ficoms
std
mov
sbb
push
pop
insb
xor
loope
les
fistpl
add
adc
xor
in
adc
mov
jbe
aaa
push
dec
or
push
dec
push
ficomps
test
xor
jbe
xchg
push
clc
push
inc
pop
das
fmul
pop
jnp
in
insl
adc
pop
mov
xor
aam
stos
xchg
cli
inc
sbb
enter
daa
mov
xchg
sbbl
aad
cmp
ret
pop
psubusb
hlt
popa
lret
sbb
add
mov
jmp
daa
mov
data16
aas
ljmp
jne
sub
jmp
loopne
push
add
bound
add
lods
shrb
pop
lcall
mov
add
out
adc
mov
pop
in
ud0
cmc
sbb
stos
lret
pop
mov
xchg
mov
cmp
or
outsb
clc
mov
fstpt
add
cs
push
mov
in
xor
adc
mov
mov
inc
adc
pop
sti
cwtl
sub
cmp
scas
xor
jg
icebp
in
mov
fists
sbb
scas
jl
pop
or
push
xor
sbb
cmpsl
lods
mov
adc
fiadds
adc
mov
repnz
pop
leave
sub
adcl
mov
mov
cmp
add
movsl
lods
jmp
add
iret
cmp
inc
mov
je
or
mov
sbb
mov
push
cmp
jle
ret
test
in
and
inc
in
mov
in
out
xlat
adc
in
cmp
jg
int
jp
push
pop
loop
mov
sbb
add
mov
fldl
add
lods
jb
sbb
mov
insb
cwtl
stos
js
pop
movb
sti
xor
shl
enter
inc
pop
in
int3
rcr
data16
push
pop
jmp
mov
leave
or
jp
fst
jo
das
cmp
inc
ja
jle
xor
test
add
dec
cmpsb
jno
sti
les
or
outsl
ljmp
push
inc
out
sahf
inc
out
and
pop
dec
sti
loope
rorl
or
jne
dec
ljmp
test
inc
ffreep
cli
popf
sub
popf
jle
jae
inc
lsl
xchg
les
sub
cli
outsl
jge
push
mov
popf
and
or
out
enter
dec
pop
xlat
mov
pop
jns
push
push
pushf
or
pop
popf
mov
ret
test
scas
dec
fcomps
lahf
arpl
in
aaa
mov
mov
cmpsb
pop
mov
stc
imul
mov
mov
adc
aam
jge
loopne
enter
cmp
pusha
int
push
rol
mov
sub
in
adc
lods
in
mov
imul
mov
xchg
imul
sbb
shl
xchg
cli
push
call
test
inc
dec
jb
cs
cmc
and
mov
sub
bound
aam
and
mov
adc
mov
push
cmp
push
mov
rol
lds
mov
jb
cmp
pop
sbb
pop
nop
scas
or
ret
imul
fsubs
cmp
xchg
test
jne
pusha
mov
dec
adc
mov
mov
fs
mov
mov
cli
mov
mov
add
push
inc
xor
inc
call
fcmovnu
push
xor
xchg
inc
inc
addr16
call
stos
xor
inc
fiaddl
mov
inc
dec
cmp
xchg
cmp
stos
lcall
jge
imul
xor
mov
emms
mov
push
jl
mov
aad
out
xchg
mov
sub
aas
mov
or
and
sbb
jp
inc
mov
les
scas
mov
outsb
std
movsl
dec
aam
pop
pop
cmp
xchg
fcomps
jmp
push
out
sbb
sbb
in
inc
push
rorl
dec
rcll
xor
imul
fwait
pop
outsb
pop
pusha
mov
push
lods
cld
jp
dec
inc
loopne
fcomps
dec
arpl
jp
scas
fs
push
pop
leave
cmp
lods
push
pop
sub
fldcw
movsb
rcrb
js
adc
stc
xlat
or
pusha
adc
sbb
add
cmp
outsb
movsb
lds
mov
pop
and
dec
mov
andl
aam
inc
pop
fiadds
js
cmp
fistl
out
stos
lods
pop
iret
iret
sbb
push
jmp
mov
clc
sub
jbe
shlb
push
xor
add
and
push
sub
hlt
ret
pusha
xor
jl
insb
sbb
sarb
sub
jge
cmpsl
in
mov
out
push
lret
xchg
push
jle
adc
adc
stos
add
repnz
in
push
dec
sub
sti
in
sub
std
xor
ret
mov
mov
lahf
lea
jne
aad
add
or
rol
push
mov
movsl
sub
pop
and
inc
inc
xchg
pop
adc
pop
shll
test
mov
sub
ljmp
jmp
and
loopne
pop
jne
lcall
into
jnp
nop/reserved
mov
dec
out
popf
or
sbb
mov
push
pop
and
inc
in
and
cmc
mov
or
jp
aam
mov
in
fists
incb
es
fisubl
es
xor
dec
or
out
pop
pop
mov
dec
es
mov
add
fwait
mov
pushf
cmp
cmc
mov
xchg
divb
pslld
mov
test
out
fisttps
mov
sub
add
adc
jge
hlt
and
adc
outsb
sahf
outsb
sub
cmpps
and
das
pop
sarl
mov
cmp
inc
push
outsb
pop
mov
adc
sub
ret
imul
mov
cmp
repnz
mov
mov
data16
sbb
xchg
test
jne
pop
test
es
push
jmp
ja
fcmovnbe
and
std
orb
fcoms
std
sub
push
and
je
pushf
add
icebp
into
sbb
cmp
rcll
jno
lcall
lods
pop
xchg
mov
pop
inc
pop
cli
pusha
rep
adc
mov
lods
je
inc
pushf
sbb
push
std
cmp
ds
mov
dec
addr16
push
aas
out
mov
sub
movsb
sub
call
aam
out
jnp
cld
hlt
movsb
push
into
test
pop
dec
loope
xor
jecxz
jmp
stos
and
pushl
enter
sub
xchg
loopne
loope
push
jns
cmpsl
pop
adcl
jp
test
inc
inc
add
mov
jle
xchg
loopne
test
mov
pop
or
push
cmp
aaa
or
cld
js
icebp
mov
and
ds
mov
adc
mov
in
scas
lods
pop
xchg
das
add
jne
loopne
and
stos
out
and
inc
test
lret
push
iret
scas
mov
push
xor
dec
sub
mov
test
nop
pop
mov
dec
in
lahf
push
fistps
subb
out
outsl
rorl
lret
gs
loop
lock
das
in
push
jne
cs
imulb
pop
shr
pop
cmp
pop
outsb
xchg
cmp
rorl
fstpl
xchg
dec
pop
addr16
aaa
sahf
or
in
or
insl
movsb
dec
xchg
inc
push
add
loopne
xchg
inc
clc
fidivl
clc
jo,pt
add
mov
les
lcall
push
stc
mov
mov
cmp
fwait
dec
es
lea
fsubs
ss
loope
push
es
lea
mov
mov
call
roll
cmp
sarb
sub
lods
cmpsl
ret
dec
int
clc
mov
fcomps
call
dec
cmp
insl
pop
sbb
push
int
std
test
fcomps
call
dec
cmp
insl
pop
sbb
push
ret
test
test
fstps
jmp
dec
xor
fs
sbb
jl
pop
leave
cmpb
sub
sbb
clc
cmp
mul
xchg
jge
sbb
shlb
xchg
push
int3
int3
int3
int3
int3
jne
gs
push
lods
inc
mov
jnp
paddb
or
sbb
sub
cmp
dec
movsl
fsts
mov
push
lods
inc
mov
adc
or
jl
sub
cmp
dec
movsl
pop
xchg
test
gs
push
lods
inc
mov
adc
movsb
sbb
dec
lds
push
jmp
sub
in
cld
or
clc
xchg
xchg
sub
jns
mov
les
cmp
lret
lret
and
ljmp
sub
movsb
mov
cmp
sub
push
pop
xor
mov
lods
pop
adc
icebp
mov
aad
add
pushf
lock
test
jne
gs
aas
pusha
inc
mov
nop
arpl
jo
shrl
mov
mov
mov
mov
leave
xchg
stc
inc
jg
lock
push
sarl
mov
mov
lcall
mov
add
sbb
cmp
cmp
sarb
jge
mov
push
lods
inc
mov
adc
or
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
cmp
sub
xor
mov
subb
mov
das
imulb
cmp
xor
mov
nop
je
imul
das
lret
aaa
stc
or
sub
lds
cmp
sub
jns
and
cld
cmc
or
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
gs
push
lods
inc
mov
adc
or
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
inc
aad
push
push
lret
add
push
fwait
pop
sub
test
icebp
in
mov
or
cmc
stos
pop
ret
sub
jle
gs
fnstsw
inc
in
inc
lret
mov
mov
sbb
pop
cmp
daa
cmp
out
xor
mov
sub
ret
iret
orl
loop
sbb
loop
addr16
cmp
leave
repnz
xor
outsl
gs
adc
push
gs
dec
jl
cmp
in
cmp
xor
mov
add
mov
lahf
mov
jnp
or
fcmovne
mov
ds
inc
out
je
shrb
in
fidivrl
push
sub
test
or
fwait
xor
clc
ja
fwait
dec
mov
stos
jl
inc
lock
ljmp
sbb
fimuls
mov
in
repnz
nop
loopne
inc
lods
xchg
xor
jmp
aad
cs
mov
popf
pop
push
inc
inc
xchg
loope
mov
rorb
mov
cmpl
jl
mov
ficoms
cmp
mov
cli
xchg
dec
lea
shll
mov
mov
test
cmp
jo
lds
ficomps
xchg
mov
mov
add
sbb
or
add
mov
jle
dec
je
cld
aas
in
mov
mov
add
xor
dec
cs
mov
loop
push
mov
dec
xchg
ficoms
mov
iret
je
or
add
mov
imul
fmull
jno
and
cmp
jnp
mov
shl
xchg
dec
jnp
jbe
jge
arpl
bnd
lret
icebp
cmpl
call
sbb
insb
movsb
pop
mov
jl
fcmovnb
pop
outsb
out
pushf
movsb
int
ret
imul
mov
inc
repz
and
fs
add
dec
pop
push
mov
jecxz
sbb
addr16
pop
je
and
pop
xchg
loopne
stc
adc
inc
leave
mov
ds
loope
adc
and
inc
xlat
cmp
outsb
mov
test
inc
pop
fidivl
ret
jl
xchg
dec
mov
fldcw
ljmp
ja
shl
ds
add
mov
adc
mov
bound
lods
and
push
lret
mov
cs
int
inc
mov
pop
add
sbb
xor
fs
cmp
subl
jmp
cli
inc
mov
adc
loopne
clc
lods
addr16
mov
mov
pop
nop
inc
mov
xchg
sbb
leave
stos
imul
stc
pop
inc
push
loope
push
ja
or
mov
daa
aas
cmp
cmc
out
mov
sbb
mov
repnz
mov
das
nop
out
clc
jmp
pushl
xchg
push
fists
and
lcall
ret
jmp
ror
fdivs
roll
loop
bound
push
shll
jmp
std
arpl
xchg
sbbb
stc
pushf
rclb
push
lahf
ret
jecxz
cs
sbb
jg
nop
mov
out
push
leave
call
jge
xchg
xlat
in
pop
and
sbb
adc
fsubs
add
inc
xchg
fxch
mov
ficoml
sbb
daa
clc
mov
imull
sbb
test
sahf
push
loop
sbb
inc
pop
int3
xchg
ds
aaa
sbb
mov
insb
mov
out
sti
mov
mov
xlat
mov
ret
repz
fisttpll
push
in
or
mov
inc
pop
mov
fldt
imulb
testl
cmp
mov
mov
jo
sub
dec
push
test
jmp
ficompl
popa
jo
inc
or
fsubrs
mov
jbe
rolb
js
bound
les
jmp
movsb
mov
popf
inc
test
fwait
outsb
sbb
mov
xchg
imul
out
xor
stc
into
pusha
add
inc
or
sbb
gs
adc
jl
pop
movsb
nop
loop
mov
mov
in
push
mov
xlat
mov
jmp
cmp
rcr
xchg
mov
in
mov
lret
inc
gs
stc
outsb
and
inc
jo
cmp
and
addr16
icebp
stos
pushl
or
pop
dec
js
leave
das
inc
adc
loope
outsl
rol
and
jg
dec
mov
out
rorb
adc
in
in
sbb
shl
repz
fiadds
sub
mov
clc
sub
out
xchg
mov
mov
xchg
pop
fs
mov
push
js
shl
movsl
xchg
cmp
mov
call
or
jne
adc
and
push
xorb
pusha
inc
xor
and
data16
int
insl
loop
arpl
push
ss
dec
stos
aaa
int3
mov
xchg
jmp
adc
int3
jl
int
cmp
lcall
jnp
leave
pushf
aad
and
dec
stc
movsl
aas
jmp
add
fstpl
sbb
nop
outsl
mov
cli
add
cltd
in
int
in
adc
jbe
das
jecxz
sub
int3
ficoms
xchg
ds
pop
xchg
sbb
pop
xchg
stos
mov
jb
je
nop
dec
pop
pop
repnz
sbb
sub
imul
dec
jmp
xor
es
imul
cmp
push
mov
dec
mov
sub
popa
gs
adc
out
xlat
call
lcall
push
adc
jns
subl
nop
dec
int3
mov
lea
imul
sub
rorb
or
cltd
xor
jns
xor
add
add
mov
pop
inc
aaa
or
dec
sarl
push
cmp
notb
movsl
and
aaa
inc
nop
mov
add
pop
icebp
lods
dec
sahf
mov
mov
sub
xchg
jl
sbb
adc
ja
mov
test
and
pop
fs
pop
fists
cld
cmp
adc
inc
jmp
jmp
pushf
cmp
sahf
stos
mov
push
mov
mov
ds
sbb
sbb
pop
inc
and
popf
adc
mov
mov
cld
rcll
jnp
andl
sbb
inc
xchg
xchg
out
in
add
inc
lods
fs
sti
add
inc
popa
std
push
push
mov
lea
add
push
mov
cmp
lcall
stos
mov
xchg
jnp
push
js
shll
and
pop
loope
adc
popf
out
push
xchg
lcall
jl
test
into
stos
or
and
lcall
pop
fwait
cs
arpl
adc
mov
rorl
mov
das
leave
mov
adc
addl
ja
lea
into
jae
scas
inc
xor
fs
mov
fadd
mov
int
sub
sahf
cld
mov
xor
jmp
mov
sti
ja
cld
stos
mov
dec
lods
pop
mov
imul
mov
sub
ret
jbe
jns
sti
cld
sarb
and
push
mov
in
mov
mov
mov
jecxz
fwait
leave
mov
lret
pop
jmp
xchg
push
sub
and
cs
ficoml
out
xor
pop
jecxz
or
sub
std
jbe
lahf
mov
adc
and
dec
push
and
mov
shlb
rcl
adc
int
mov
out
cmpsl
dec
xlat
jb
mov
push
faddl
mov
push
mov
pop
dec
rcrb
icebp
aas
ljmp
inc
mov
inc
stos
xchg
test
mov
cmp
jmp
repnz
jmp
loop
scas
call
jb
jge
ret
out
mov
inc
ss
sub
aad
add
jg
loop
cli
mov
cmpsb
xchg
into
xchg
push
sub
jecxz
das
mov
enter
lea
sbb
test
sbb
and
cmp
add
ss
repnz
cmc
pushf
add
xchg
in
xor
sub
fidivrs
sbb
movsl
add
ret
jne
dec
push
mov
pop
call
push
xchg
jo
inc
sbb
mov
inc
shrb
roll
and
jecxz
sub
and
add
orb
in
fidivrl
stos
in
inc
lahf
push
cmp
add
fidivrs
xor
mov
imul
inc
sbb
into
sbb
and
lock
xchg
push
out
and
ja
out
xchg
std
aaa
cmp
and
or
clc
inc
mov
sub
jle
or
shr
cltd
inc
xor
push
clc
pop
repz
sahf
adc
pop
adc
pop
cmpb
xchg
ret
push
xlat
sub
xor
inc
ss
sub
stos
lcall
lock
sbb
sbb
push
shlb
adc
pop
mov
loop
mov
or
or
inc
cs
cmp
mov
dec
mov
adc
or
cli
jle
rolb
insb
cmp
mov
fisubrl
ret
mov
push
outsl
xorl
orb
or
push
leave
loopne
leave
or
mov
repnz
out
push
data16
pop
and
inc
add
cmc
test
fptan
mov
fsts
xchg
and
insl
jl
mov
add
add
adc
or
aad
rcr
inc
xlat
and
mov
cltd
adcb
jg
jnp
mov
or
sub
shlb
mov
call
pushf
and
test
mov
les
mov
add
and
cmp
lret
icebp
neg
outsl
mov
dec
adc
or
dec
cmp
pop
sub
lea
dec
inc
cli
test
cmc
jge
mov
les
adc
inc
ss
sbb
push
pop
sahf
sbb
movb
dec
outsl
xor
xor
fists
imul
sub
and
movsb
or
xchg
inc
sub
mov
fstl
push
loop
fs
push
lods
mov
ss
mov
ss
scas
dec
shrb
push
add
stos
je
mov
dec
loope
xchg
mov
decb
jp
jne
sub
leave
aad
mov
xchg
cli
inc
jge
xchg
fmul
pop
rcrb
aad
mov
jns
lahf
loop
cmp
push
test
and
push
jl
push
xor
lcall
inc
orl
pop
je
push
xchg
and
mov
call
mov
inc
jle
mov
mov
inc
stos
cmpsl
je
jp
or
push
lock
sti
fistpll
push
and
dec
loop
movsb
xchg
add
rcll
xchg
test
xor
imul
mov
call
stc
cs
sarl
mov
and
and
jno
int
inc
pop
ret
out
jb
jno
and
adc
pop
adc
push
fdivrl
pop
decb
xchg
aam
mov
sahf
jge
lods
ljmp
dec
xchg
outsl
popa
mov
jmp
insl
mov
lods
jns
int
enter
jle
xlat
in
sub
cmp
out
mov
dec
jle
arpl
push
fldl
mov
sahf
rcll
stc
xor
pop
out
aaa
loop
pop
xchg
jle
rcl
imul
mov
push
dec
nop
arpl
jb
pop
stos
mov
inc
mov
in
pop
subl
scas
sub
xchg
setle
out
enter
out
stc
inc
pop
fs
int
insb
aas
addr16
mov
in
push
setne
roll
jno
push
es
cmp
xchg
imul
sbb
mov
xchg
scas
sub
mov
push
sub
mov
aad
int
mov
js
test
cmp
sbbl
sub
scas
andb
lret
cmp
jo
xchg
rorb
subl
mov
inc
call
insl
sbb
fcoml
dec
daa
in
stc
jle
out
sbb
jl
out
in
dec
cld
mov
sub
mov
pop
pop
jae
ss
or
fimuls
push
or
inc
loope
mov
push
cli
bound
sub
or
or
mov
fdivp
outsb
push
div
inc
imul
js
and
in
mov
xchg
in
lock
test
xlat
mov
int3
cmp
pushf
xor
dec
mov
xchg
ja
jne
gs
imul
mov
adc
mov
loope
xchg
lret
push
xchg
jl
mov
movsb
fcmove
outsl
xchg
insb
jmp
in
mov
sti
popa
movb
cwtl
and
jle
mov
data16
adc
mov
push
aam
dec
lahf
lret
stos
or
push
out
sbb
mov
adc
jo
mov
add
mov
sbb
testl
test
add
icebp
jae
inc
imul
mov
xor
std
mov
pop
int
lret
sbb
lock
mov
nop
jno
filds
test
mov
xor
mov
inc
sbb
test
call
mov
sbb
fmul
imul
daa
inc
popf
les
push
add
dec
mov
fldt
scas
test
das
mov
loope
cmpsb
in
xlat
pop
into
stos
mov
shll
add
push
lods
xchg
sbb
inc
and
sbb
add
xchg
outsb
push
add
sahf
dec
bound
pop
push
popf
es
xchg
push
mov
stos
inc
ret
pop
sub
daa
arpl
sub
call
sbb
push
adc
xchg
add
cmp
aas
ret
loop
mov
stos
inc
arpl
filds
or
inc
rolb
dec
jb
mov
test
sbb
and
enter
rcll
addb
test
lcall
mov
push
rcl
lea
cmp
movsl
lock
ficompl
inc
cmc
daa
lods
xchg
insb
mov
and
xor
loope
in
jb
mov
arpl
hlt
enter
add
loop
in
fcmovb
jne
clc
jmp
adcb
cmc
jle
ss
mov
dec
in
divl
push
cmp
insl
pop
call
push
jae
push
int3
push
aaa
cmpsb
mov
fs
jno
adc
jb
mov
cwtl
cwtl
int3
push
xchg
mov
mov
dec
push
push
out
cltd
mov
imul
andb
ficomps
in
jl
sarb
std
dec
xor
pop
mov
xor
test
push
addb
test
mov
test
mov
lret
push
stc
or
arpl
pushf
lods
cmpsl
dec
rcrl
lret
sbb
orb
mov
jle
arpl
cmp
push
test
cmc
xchg
insb
push
pop
iret
loopne
test
loope
jge
dec
cmp
xor
ljmp
mov
or
shrl
aaa
mov
sbb
sbb
cmp
mov
sbb
push
sub
inc
pop
mov
cltd
sbb
sub
rorl
jp
mov
aad
pop
push
fmul
sbb
aas
push
adc
lcall
and
jno
lods
add
inc
mov
push
aad
and
mov
into
push
testl
mov
jo
pushl
cmp
cmp
scas
movsb
testb
fwait
inc
fs
fsubr
movb
mov
mov
roll
repz
insl
dec
lahf
inc
in
adc
mov
pop
out
es
aaa
stc
dec
in
fldl
leave
jae
sbb
aam
jmp
std
xor
xor
xchg
cmp
mov
mov
and
jbe
add
notb
es
cmp
adc
arpl
rorl
test
adc
out
popa
lahf
fs
call
js
or
pop
leave
cmp
adc
dec
cli
dec
ret
jbe
movsw
jne
ret
inc
iret
sbb
sar
jmp
mov
flds
pop
std
lret
sub
loope
xchg
jns
data16
fsts
adc
pop
gs
es
jl
xchg
jl
or
push
dec
jp
ljmp
repz
pusha
mov
push
andb
cwtl
cmp
mov
notl
pop
mov
ror
pushf
fwait
lret
lret
test
push
shrl
mov
lahf
push
sub
xor
lods
adc
xor
mov
dec
xor
nop
push
and
fs
mov
out
cmpsl
xor
xor
movsl
jmp
pop
pop
xchg
insl
mulb
into
pop
add
or
sub
out
jbe
loop
lret
outsl
add
or
cmp
xchg
neg
ret
jae
push
das
or
jmp
divl
pop
xorb
jb
inc
dec
test
sub
pop
scas
xor
add
inc
add
mov
add
movsb
adc
mov
mov
sbbl
lods
cmovo
mov
fimull
and
test
lods
cmp
es
mov
mov
fdivs
inc
cmp
stos
test
mov
loope
mov
mov
dec
outsb
and
or
xchg
mov
cmpsb
inc
add
in
mov
adc
outsb
adc
outsb
cli
fwait
inc
imul
mov
mov
lahf
lahf
dec
jb
mov
cmpsl
add
dec
repnz
or
mov
sbb
mov
xchg
push
push
cwtl
add
lock
in
add
movsb
aas
ficoml
scas
lea
and
out
test
mov
sub
daa
xor
cmpsl
jge
mov
sbb
jl
push
hlt
add
gs
cmp
push
outsl
ss
inc
inc
jmp
inc
scas
inc
dec
mov
call
ret
sbb
leave
push
fwait
test
dec
das
mov
mov
inc
pop
or
jno
push
mov
cmpsb
mov
gs
test
lret
or
in
sub
lods
push
cmpsb
push
and
insb
jle
pusha
loop
adc
daa
xchg
and
leave
test
imul
xor
jle
cld
aas
mov
popf
pop
fstpt
faddl
mov
push
pop
dec
cmp
cmp
pop
int
sbbl
dec
sbb
cli
adc
dec
in
push
jnp
repz
mov
dec
out
inc
ret
or
mov
movntq
adc
ss
fsubp
adc
add
data16
fisttpll
jmp
ret
adc
mov
cs
sub
je
adc
dec
xor
jnp
aad
mov
dec
adcb
and
adc
inc
xor
and
push
dec
mov
pop
clc
dec
xor
int3
sub
pop
pop
xchg
push
outsl
hlt
inc
adc
fcoms
mov
mov
or
sub
fidivrl
mov
xlat
push
sub
and
testb
push
pop
inc
adc
cld
dec
and
lock
dec
sarb
jge
stos
hlt
sbb
add
int
xchg
fwait
mov
adc
mov
sub
mov
aad
dec
sbb
xlat
pop
and
arpl
jge
jle
pop
popa
dec
cmp
les
sbb
inc
jae
test
jae,pn
loop
pusha
add
movsb
inc
sbb
popa
ljmp
and
fwait
lahf
scas
mov
jmp
pusha
bound
pop
mov
lods
lock
push
into
les
xchg
cmpl
push
jo
and
jmp
xbegin
mov
or
and
add
jbe
iret
dec
stc
pop
jmp
loop
scas
jno
add
ja
clc
push
subb
sub
xlat
and
loopne
aaa
sbb
mov
xchg
leave
mov
test
push
cmp
imul
xor
push
out
and
mov
test
sub
push
movsb
inc
or
xchg
sub
sbb
jns
fsubrs
jo
out
or
xchg
add
fcmovu
cs
scas
mov
sub
or
les
jge
jl
loope
mov
sbb
into
sar
and
sub
mov
jnp
shr
insl
rcrb
incb
xor
or
das
sbb
cld
loopne
xchg
shrl
into
iret
push
das
jb
sti
dec
mov
pop
dec
icebp
mov
pop
xor
outsb
jo
sbb
test
mov
aas
adc
mov
push
pop
xor
out
sub
and
or
mov
xor
shl
rclb
dec
arpl
inc
jge
or
sti
and
icebp
rclb
jns
or
xor
add
xor
stos
push
into
jb
arpl
push
inc
xlat
push
jp
dec
shrb
mov
add
lret
jecxz
jo
xchg
dec
and
dec
cld
mov
push
insb
cmp
and
add
mov
in
sbb
lea
cmpsb
or
pop
push
pop
pop
pop
pop
xor
xchg
into
mov
pop
ds
data16
adc
fcoml
and
mov
push
test
cmp
pop
and
push
and
inc
ds
in
in
and
das
mov
push
jecxz
lahf
mov
xchg
dec
cli
and
mov
add
mov
mov
sub
addb
cmp
jecxz
or
and
jae
xlat
ret
sub
mov
lret
pop
xchg
pop
dec
fs
jb
jne
xchg
rcrb
iret
adc
fsubrs
jb
add
jecxz
sti
shll
add
jbe
cmp
insl
insb
mov
ret
pop
mov
sbb
stos
aad
test
jle
aad
pop
and
push
jae
sti
popa
fsubl
add
add
mov
jle
mov
jnp
sbb
pop
sub
mov
xchg
mov
and
scas
adc
aaa
fadd
cmp
xor
sub
adc
test
bound
push
in
xchg
sbb
jg
lahf
rol
push
xchg
xor
cltd
arpl
in
ret
add
pop
and
inc
lret
test
dec
adc
push
push
movb
and
pop
mov
xor
sub
cmp
test
pop
or
flds
xor
in
xchg
test
jp
jno
outsb
add
movsb
cltd
mov
add
cli
or
shrb
cmpsl
out
pop
into
ret
test
push
mov
stc
mov
loopne
int3
xor
into
iret
rcrl
pop
inc
pop
mov
cmc
and
lods
stc
test
cs
xchg
out
xchg
jmp
push
adc
and
pop
notl
push
push
jae
popa
jg
push
and
sub
repz
scas
pop
inc
xchg
pop
jmp
sbb
cmpsl
les
pushf
push
lods
inc
mov
adc
or
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
gs
push
lods
inc
mov
adc
or
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
in
aad
inc
mov
adc
mov
sbb
sub
cmp
dec
movsl
pop
xchg
insb
test
gs
push
lods
inc
mov
adc
or
mov
sub
dec
mov
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
test
inc
jo
pusha
sbb
inc
js
daa
rcl
ret
out
in
xchg
addb
push
inc
inc
jo
pusha
adc
add
xor
and
rcl
rol
xlat
loopne
nop
hlt
andl
dec
inc
inc
jo
pusha
jle
push
add
xor
and
addb
jmp
and
and
jo
or
pop
clc
push
test
jmp
cli
repz
sbb
dec
out
mov
lcall
stc
int3
mov
dec
das
push
out
out
adc
ljmp
sub
inc
inc
rolb
cli
inc
jg
outsb
push
aad
loopne
bound
dec
mov
inc
mov
addr16
js
inc
imul
cmp
pop
pop
sbb
les
int
outsl
lds
out
aaa
and
int3
stos
rcrl
jge
imul
incl
or
mov
cmpsl
dec
ja
lods
cmp
xor
add
mov
je
shl
ja
mov
push
jo
pusha
jge
pop
add
xor
and
ror
rcr
out
loopne
nop
popl
ret
xor
jbe
data16
outsl
imul
movsl
mov
push
cli
rcl
mov
lret
xor
adc
and
fs
xor
mov
and
addr16
call
aaa
push
inc
and
push
add
pop
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
adc
add
xor
and
rcl
rol
mul
out
xchg
addb
push
and
in
push
pop
je
sub
cs
pop
cli
jg
cwtl
mov
or
mov
xor
sahf
aaa
mov
outsl
mov
mov
push
lea
leave
cltd
imulb
inc
or
jne
ficompl
jecxz
pop
sbb
add
bnd
shl
mov
jp
insl
aam
rcll
fxam
imull
sbb
add
add
outsl
cmp
mov
ret
xchg
mov
or
mov
xchg
es
andl
lcall
xchg
mov
leave
mov
cmp
inc
dec
dec
xchg
addr16
cli
xor
mov
jae
in
add
jo
inc
adc
aad
call
mov
sub
push
js
xor
push
leave
out
xchg
xchg
xchg
mov
or
int3
pop
sub
mov
imul
shll
pop
loopne
and
pop
scas
shrb
arpl
cmp
testl
sar
iret
pop
rolb
cmp
repnz
pop
lcall
mov
mov
lock
jo
pop
hlt
shrl
das
popf
sbb
sub
stos
out
xchg
ret
in
hlt
mov
jb
test
cltd
movsb
push
cmp
test
xchg
jae
xor
ret
sti
sbb
jno
xchg
push
fwait
cmp
sbb
adc
movsl
fcompl
cld
jle
pop
shll
in
jge
bnd
ds
mov
sub
ds
sbb
fisubrs
cmc
cli
sbb
mov
xchg
cmc
push
call
dec
into
divl
les
pop
sub
pop
inc
cmpsb
cmp
xchg
pushf
in
pop
mov
push
out
cld
je
loopne
inc
ficoml
ljmp
inc
xchg
addr16
subb
imul
adc
pop
and
inc
inc
sbb
movsl
movsb
add
dec
iret
lods
in
jg
sub
out
inc
xor
mov
enter
inc
jb
add
or
int
mov
mov
mov
mov
pop
hlt
sti
xchg
sbb
xchg
sti
notb
stos
jae
push
dec
or
pop
mov
std
lods
xlat
inc
inc
adc
add
inc
xor
mov
jae
lahf
xchg
pop
popf
xlat
ss
xor
mov
jae
add
xor
pop
movsl
mov
sarl
lret
and
pushf
ret
lods
jne
leave
in
fistl
ret
mov
insl
js
mov
mov
lret
ret
add
add
mov
mov
cli
inc
rcrl
call
pop
outsb
sub
sbb
pushf
push
pop
les
pusha
jbe
fdivrl
xchg
daa
ret
pop
and
sbb
xchg
jbe
pop
add
mov
sub
aam
cmp
call
dec
jns
out
add
in
pop
cltd
cmp
pop
rolb
icebp
aas
int3
push
add
mov
test
jbe
aam
jo
push
pop
jbe
mov
push
aaa
pop
call
sbb
inc
ja
xchg
gs
jg
inc
add
outsb
imul
in
jo
adc
ret
fdivrl
ja
je
pop
and
inc
pop
lret
cmpsl
push
sti
lds
je
cmp
sub
orl
xlat
test
pop
xchg
xchg
push
retw
pop
pusha
cli
mov
push
add
mov
aam
out
in
push
dec
pop
push
xchg
xor
cli
add
add
push
jp
mulps
jbe
in
dec
and
push
mov
and
mov
xchg
mov
seta
ja
test
dec
lcall
into
mov
dec
sub
popa
dec
and
cmp
pop
std
jl
sbb
push
lret
loope
cld
loop
jle
pop
dec
mov
or
imul
cmp
cmp
xor
pop
push
dec
adcb
xor
sarl
clc
jnp
or
sbb
outsb
cmp
leave
dec
dec
xchg
ss
movsb
addr16
mov
dec
jns
cmp
testl
adc
and
xchg
pop
push
sub
adc
dec
imul
rcl
fcmovnbe
es
and
dec
std
iret
xchg
ljmp
jbe
ja
pop
sbb
add
sbb
xor
ja
push
imul
stos
popl
ficomps
inc
fstl
add
into
lods
add
leave
leave
jno
enter
fcompl
pusha
sbb
inc
xchg
aad
call
stc
loope
dec
push
popf
popa
lcall
ss
sbb
das
jno
ljmp
sub
adc
cltd
lock
not
rep
cmp
fwait
mov
sub
sbbl
das
sbb
pop
xor
and
mov
int3
inc
stos
and
pop
inc
xor
xchg
jae
mov
scas
xchg
aad
push
inc
or
in
imul
orb
out
cmpsb
and
mov
lcall
not
inc
aas
pop
jb
mov
xor
mulb
outsl
mov
or
adc
lods
movsl
movsl
pusha
addr16
jo
sub
in
mov
inc
cmc
jae
outsl
push
push
add
or
cmp
fwait
xchg
jmp
int
mov
jl
das
mov
or
adc
rorb
fisubrs
and
jmp
jg
pop
or
iret
xchg
sbb
jl
jmp
or
push
stos
mov
dec
leave
sbb
mov
fildll
ds
rorl
nop
add
inc
enter
push
push
pop
pop
subl
mov
and
ret
mov
arpl
mul
test
dec
dec
lods
inc
ljmp
xchg
jno
and
dec
xlat
shll
xor
ss
sbb
nop
mov
push
es
insl
out
or
jno
cmp
sbbb
int3
mov
aad
stos
aam
jp
jb
mov
lods
lcall
sti
gs
pop
cmpsl
in
dec
lret
add
addr16
dec
pusha
movsl
ret
shrb
sbb
scas
in
mov
cwtl
pop
mov
ljmp
gs
cmp
rcrb
insl
mov
jl
insl
push
sbb
mov
inc
loopne
sbb
iret
insl
sbb
cltd
call
and
loop
mov
jb
xor
dec
sub
or
sti
mov
mov
dec
jo
and
ficoml
scas
mov
xchg
lcall
andl
sbb
cmpsb
sbb
dec
lods
push
push
and
mov
jecxz
or
test
xor
adc
mov
xchg
cmpsl
data16
test
imul
or
cmp
fnstsw
lods
cld
loop
or
jmp
jnp
jns
sub
mov
xchg
sbb
cmpsb
aad
or
jne
inc
test
xchg
jecxz
ljmp
lcall
movsl
dec
aas
xchg
mov
inc
adc
out
into
icebp
mov
xchg
aaa
dec
je
push
fisubrl
sbb
lock
or
or
dec
add
pushl
jge
out
pop
shrl
loope
clc
inc
xchg
sub
pop
movsb
orl
sub
or
pop
into
shlb
test
cmp
jo
add
mov
hlt
popa
fwait
stos
xorl
mov
insl
jbe
in
push
rcrb
jne
inc
inc
test
adc
sbb
jge
outsl
and
push
xchg
mov
pop
jno
cmc
push
gs
xchg
cmpsl
cmp
sub
mov
outsb
jae
out
mov
test
int
sub
sbb
arpl
mov
push
nop
lcall
dec
sahf
jp
testl
and
loopne
outsl
push
jecxz
cmp
andb
xor
ss
ficoml
cmp
add
ja
fnstenv
or
mov
mov
mov
push
nop
jp
jnp
inc
xchg
lret
ret
inc
fldcw
std
ss
adc
mov
imul
inc
inc
mov
xchg
and
daa
add
sbb
sub
lahf
iret
rcrl
std
loopne
push
lahf
mov
stos
push
out
pop
cld
mov
push
jne
push
stc
arpl
movb
shll
inc
mov
cmp
shrl
xchg
jo
incb
fs
adc
and
idivl
jbe
repz
push
int3
dec
push
leave
xchg
pop
adc
lahf
lods
fdivs
stos
std
dec
or
push
and
xorl
add
cmp
add
mov
fisubs
int3
jae
adc
inc
jmp
rcll
je
lahf
aas
mov
repnz
xchg
test
movsl
add
sbb
les
dec
sub
push
aas
cli
fcoms
das
pop
push
out
cmp
dec
ret
mov
fistpl
cli
sub
sbb
clc
pushf
ret
mov
jns
inc
cmc
dec
xor
hlt
xor
mov
ja
mov
call
xlat
insl
inc
idiv
movsb
jl
decl
repz
jo
adcl
and
mov
mov
xchg
pop
jl
daa
mov
cltd
or
lds
pushf
pop
movsb
fcomip
xchg
jp
mov
popa
bnd
inc
jle
sbb
jl
loop
and
xor
rcrl
push
loopne
jp
ljmp
shlb
insb
lahf
xor
push
cs
mov
pop
dec
mov
adc
pop
add
inc
enterw
loope
inc
ret
scas
out
cmp
push
adc
sub
inc
popa
dec
cld
inc
fwait
sbbl
test
out
lds
into
mov
sub
icebp
repz
mov
or
xchg
in
imul
fwait
ljmpw
lahf
cld
repnz
mov
lahf
lds
pop
lret
fldt
call
or
lahf
int3
out
xor
mov
inc
mov
sbb
sahf
mov
jg
sbb
mov
out
filds
xor
clc
pop
pop
popa
repz
xchg
shl
pop
enter
xchg
adc
cmc
add
and
scas
dec
add
inc
pop
xchg
cld
dec
xchg
or
adc
imul
mov
jae
sub
sarb
inc
xchg
xchg
add
stc
or
and
popf
pop
cmp
xchg
inc
jo
psubsw
fcoms
jecxz
push
ret
bound
aaa
xor
je
push
cltd
sub
scas
dec
fcoml
cmc
lahf
sub
or
cli
and
out
movb
fsts
and
das
pop
mov
lret
mov
mov
or
xchg
cmp
sub
seta
sbb
pop
inc
jo
hlt
fs
and
pop
jno
aaa
xor
notl
xor
push
xor
mov
sarb
cmp
xor
shrb
jae
sbb
cmp
or
and
inc
dec
fildl
add
out
xchg
pop
inc
mov
dec
lret
scas
sbb
add
cmp
cld
sbb
stos
pop
imull
xchg
cltd
mov
lods
mov
push
xor
cli
lea
jbe
aam
pop
mov
or
mov
imul
stos
xchg
cwtl
dec
cmp
fwait
add
sub
jmp
and
mov
mov
in
je
jl
mov
jmp
test
adc
xchg
fsubrs
bound
movsb
and
sbb
jno
sub
mov
outsb
jno
nop
shl
repz
and
dec
andl
inc
xor
push
sub
pushf
movl
xchg
jno
in
add
stos
cmp
push
lock
xchg
pushl
lods
insb
in
push
movsl
xor
lds
shrl
mov
ret
mov
xorl
sar
dec
jno
ret
bound
mov
cltd
mov
jns
int3
lcall
pusha
movsb
movsb
pop
sub
ja
je
stc
and
jg
jecxz
jo
jecxz
outsl
es
jno
jmp
dec
ficoml
ret
adc
test
ret
fstpt
sarl
gs
test
inc
ret
inc
in
out
dec
adc
icebp
mov
pop
add
fnsave
rol
out
arpl
aaa
dec
in
sbb
enter
xor
iret
sub
nop
loope
or
aaa
mul
push
cmp
pop
pop
and
lods
out
push
in
xor
clc
mov
or
xchg
adc
mov
rol
lea
aaa
mov
jne
push
cli
jno
mov
cli
pusha
mov
daa
imul
inc
sbb
out
sbb
sub
lods
xor
or
fcomi
frstor
mov
mov
test
ds
adc
xor
mov
add
cmpsb
cmc
outsl
nop
lea
and
aas
mov
xor
mov
mov
jge
lock
xor
imul
dec
loop
icebp
lahf
mov
or
mov
sub
movsl
mov
mov
enter
jno
lcall
imul
jmp
test
aas
mov
mov
pop
mov
sbb
icebp
mov
sti
sbb
dec
vorps
add
sub
lcall
enter
mov
xor
and
out
fwait
js
mov
push
lret
jbe
pop
aam
js
push
dec
sub
jae
dec
cmpsl
fs
sub
xchg
aad
insb
aaa
jnp
bnd
pop
test
or
fistl
pop
imul
in
or
mov
push
pushf
aam
mov
outsl
jnp
pop
popa
pop
aaa
inc
push
icebp
lods
add
std
push
dec
mov
jmp
mov
ja
xor
jno
sbb
inc
xor
and
push
inc
sub
iret
cmp
pop
insl
push
xor
sbb
lret
xorb
int3
xchg
add
add
xchg
pop
pop
xchg
movsl
out
in
outsl
jecxz
mov
and
mov
pop
int3
xor
or
lods
imul
jns
push
xor
out
mov
xor
sbb
stc
jne
xchg
iret
lcall
in
jae
add
test
push
add
add
mov
gs
mov
movsb
aam
je
mov
mov
ss
imul
mov
je
ret
mov
mov
sbb
sbbl
push
mov
fcmovu
xchg
aam
mov
mov
aad
inc
and
inc
cmp
and
mov
sbb
push
jle
dec
cltd
aas
aas
imul
inc
xor
outsb
cld
xchg
or
je
lods
addb
jl
or
inc
cmp
mov
add
ret
add
arpl
icebp
loopne
cmp
cwtl
out
andl
inc
mov
popf
imul
mov
add
roll
call
test
sbb
out
adc
sbb
inc
aaa
jmp
sub
xor
dec
xorl
fimuls
cmp
outsl
and
fcomps
cmp
dec
xor
fadds
loopw
xor
adc
mov
movsl
aad
ds
xor
cmpl
mov
and
dec
mov
xchg
or
inc
mov
js
mov
add
cmpsb
out
add
test
dec
lret
add
stc
inc
mov
insb
push
push
iret
mov
mov
jmp
sub
lcall
and
mov
pop
pop
sbb
mov
push
call
adc
fwait
mov
jg
jno
push
lods
popa
pushl
inc
fsubr
pop
adc
arpl
out
cs
loop
lods
fs
dec
dec
add
or
mov
icebp
addr16
or
negl
xor
stos
sbb
icebp
adc
lret
jecxz
test
shlb
fldt
add
mov
and
dec
stc
loope
jno
and
mov
xor
pusha
mov
addl
sbb
pop
mov
popa
hlt
xor
mov
pop
cld
adc
push
loopne
test
test
xlat
cmp
or
cmc
jle
jo
xchg
outsl
dec
inc
shlb
pop
mov
pop
lea
fs
and
jnp
lahf
out
cli
xchg
sub
test
mov
xor
pushf
jmp
stc
mov
lods
stos
xor
test
popf
les
pushf
mov
outsb
lock
popf
cmp
cltd
pop
mov
pop
inc
mov
cli
scas
push
cmc
loope
push
add
mov
aad
push
leave
push
out
mov
mull
lds
imul
jbe
dec
decb
roll
pusha
test
out
cmpsl
jle
push
xchg
packuswb
jmp
in
inc
jno
or
xchg
jne
pop
jge
pop
fdivrs
xchg
push
mov
jmp
mov
shll
fwait
addl
insl
int3
lods
aaa
repnz
mov
lahf
imul
les
in
pushf
int3
xchg
fsubl
pop
xchg
push
sub
icebp
jo
dec
mov
jl
lcall
and
cmp
jnp
andl
scas
add
push
fldcw
pop
gs
mov
jmp
popf
mov
in
stos
popa
std
into
push
cmp
addr16
shl
xchg
xchg
inc
add
and
mov
aad
sbb
fwait
ss
sbb
mov
mov
imul
test
sbb
sarl
cmp
jne
lahf
xchg
inc
fs
xor
ret
dec
mov
movsl
in
inc
fwait
rcl
rcrb
inc
test
test
cmpsb
mov
xchg
mov
insb
test
in
lds
gs
cmpsb
jmp
loope
pop
mov
stos
stos
ja
xor
push
or
jg
loopne
cmp
shrb
jle
mov
sub
mov
aas
cmc
sbb
rcrb
dec
xchg
notl
mov
shrl
push
jns
jp
or
ficompl
push
ss
sbb
inc
sbb
lods
mov
add
push
adc
fucomi
outsl
sbb
xchg
mov
shrl
mov
rorl
ficoml
mov
cmp
pop
jmp
xchg
sbb
mov
push
cmp
jbe
jmp
push
jecxz
xchg
jle
outsb
les
inc
fdivs
sub
pushl
push
mov
ret
push
ror
xchg
negl
push
sbb
fldt
pop
mov
ja
sub
fistps
das
sub
mov
cmpsb
push
pop
bnd
test
dec
push
test
imul
xor
pop
lods
pop
push
push
pop
mov
mov
sub
sti
fiaddl
mov
dec
add
roll
decl
popa
dec
pop
lods
jge
inc
ljmp
and
jmp
cwtl
adc
xchg
jmp
popa
andl
push
sub
repz
icebp
fwait
scas
xchg
push
jg
cmpsb
push
jb
addr16
mov
arpl
cs
cld
iret
and
xor
push
push
sbb
out
std
mov
mov
lods
inc
inc
in
pop
aas
push
fldenv
insb
push
dec
lock
xor
jns
jne
fstps
test
scas
jp
pop
mov
loopne
mov
cmc
andb
xchg
faddl
lock
jnp
test
aaa
iret
cmp
data16
inc
jmp
icebp
jne
lcall
std
xor
push
jle
mov
fdivrl
in
or
jae
push
mov
inc
and
pop
pop
xor
mov
das
hlt
imul
aaa
movsl
inc
aaa
loop,pn
push
dec
add
int
rcr
scas
mov
in
notb
fs
das
inc
je
xor
arpl
imul
fs
mov
loopne
push
ds
pop
jb,pn
and
cmpsl
loop
sub
clc
pop
mov
loop
rolb
mov
cmc
cwtl
and
pop
pop
mov
iret
les
cmp
or
out
lods
push
push
les
popf
cmp
xchg
xor
mov
arpl
scas
insl
push
and
jle
mov
shll
sbbl
dec
in
in
iret
mov
out
inc
adc
sti
fnstsw
stc
es
enter
xor
imul
and
xchg
jp
mov
mov
inc
fidivl
adc
jns
mov
je
add
inc
inc
mov
cmp
fwait
test
dec
jae
andl
jns
into
xchg
inc
mov
lods
aas
cmc
sti
sahf
imul
jmp
mov
xchg
enter
stos
push
mov
in
test
orb
adc
sbbl
ljmp
lret
pusha
rcrb
ljmp
push
loop
sbb
in
out
push
mov
in
add
cmp
and
mov
dec
int3
incb
push
bound
and
sub
pop
or
cmp
push
cwtl
sbb
cltd
xchg
push
stc
xor
mov
adc
dec
sbb
dec
cs
cmp
sbb
cltd
in
roll
xchg
xchg
fdivs
sub
lahf
push
xchg
xchg
ljmp
mov
push
jecxz
scas
push
mov
jae
scas
adc
out
ds
mov
mov
jo
adc
fwait
je
mov
or
add
in
decb
fwait
hlt
sbb
cmpb
or
out
mov
mov
cmp
repnz
sub
subl
mov
test
adc
xchg
ja
imul
mov
icebp
xchg
mov
add
add
lds
xchg
pop
mov
mov
bound
jb
or
insb
nop
xor
imul
dec
ss
mov
push
call
das
mov
jnp
bound
push
sbb
je,pt
jnp
jg
mov
pop
mov
js
push
test
popf
adc
inc
lret
clc
pop
xchg
pop
sti
mov
push
jecxz
push
in
xchg
push
xor
sub
sti
mov
fs
fmul
dec
xor
xor
data16
inc
sub
subb
mov
mov
popf
dec
in
mov
jle
jbe
pop
xor
ja
push
xorl
xchg
or
add
movsl
lods
pop
cmc
inc
sbb
jmp
xchg
sub
pop
icebp
push
repz
das
cmovge
iret
lea
jmp
xor
push
dec
pop
jp
das
sub
loope
pop
mov
aaa
pop
mov
pop
sub
pop
mov
pop
shl
mov
decl
add
cmpsl
sub
and
xlat
inc
stc
aaa
adc
lock
bound
ficomps
icebp
fimuls
jl
pushf
jae
loop
inc
inc
mov
cli
jae
xor
loope
xor
sbb
in
lds
push
adc
or
pop
push
out
sbb
sub
data16
jb
xchg
inc
jge
or
ss
addl
pusha
adc
add
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
adc
add
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
adc
add
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
adc
add
mov
mov
insl
pop
mul
nop
out
or
dec
pop
pop
int3
int3
int3
int3
int3
aad
in
cmc
sub
test
mov
gs
adc
insl
mov
mov
xchg
inc
movsl
std
mov
inc
sbb
jne
inc
xor
insl
jge
daa
lea
sub
icebp
mov
ret
or
or
jno
imul
enter
ljmp
add
data16
clc
insl
inc
mov
xor
sub
sub
fcoml
scas
mov
and
push
mov
and
pushf
nop
mov
mov
cmc
lods
pop
xchg
nop
push
mov
jne
adc
mov
mov
adc
pop
push
mov
inc
loop
pop
loope
mov
cli
pop
adc
cmp
push
mov
cmc
ds
gs
sbb
inc
push
adc
xchg
cmp
xor
lods
or
pop
mov
push
gs
ret
mov
and
popf
cmpl
cmc
cmpsl
popa
fucomp
int
daa
adc
fwait
iret
lret
adc
pop
mov
jge
add
lea
rcll
dec
add
inc
ja
jnp
dec
cmp
or
fdivs
mov
mov
push
xchg
loopne
and
pop
gs
or
add
push
test
in
cmpsb
into
mov
mov
inc
sbb
jne
add
jge
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
jne
add
jge
insl
lds
xor
fisubrs
es
fstpt
push
mov
cwtl
js
and
sarl
xor
fsts
adc
subb
pop
je
pop
sbb
push
out
test
and
popa
xlat
fiaddl
popf
leave
mov
cwtl
xlat
cwtl
stc
mov
faddl
lock
mov
scas
jmp
fldenv
hlt
stos
js
adc
and
rorl
push
std
into
sub
or
jb
aad
sub
repnz
mov
pop
ret
loopne
enter
xchg
adc
lahf
subl
or
xor
mov
mov
insb
jg
pop
test
dec
fwait
fwait
push
popa
fs
or
adc
dec
pop
jno
pop
jbe
sti
pop
insb
ljmp
sub
je
enter
cmpsb
cmpl
jg
pop
add
sub
jg
imul
xchg
add
mov
sbb
and
pop
dec
mov
ficomps
jecxz
add
testb
xchg
push
xchg
add
les
or
cld
push
decl
mov
imul
mov
push
adc
stos
pop
lret
ret
push
ret
aad
insl
jne
pop
xor
cmp
lret
mov
sub
push
test
jns
sub
data16
sub
gs
jns
sti
pop
enter
mov
loope
mov
out
je
sub
bound
cltd
in
sbb
mov
mov
into
mov
pop
ljmp
popf
fcoms
pushf
pop
ljmp
les
xchg
inc
gs
xchg
lods
movsl
xchg
pop
adc
repnz
pop
dec
addr16
test
inc
stos
pushw
inc
scas
adcb
mov
xchg
int3
out
out
dec
pop
fincstp
pop
stos
push
cmc
mov
cmpsb
mov
sahf
and
mov
adc
aam
dec
data16
stos
inc
push
rorb
mov
addl
ficompl
xchg
sub
pop
imul
enter
sub
mov
cwtl
cmp
push
fidivs
mov
icebp
lahf
std
stc
mov
int3
imul
xor
imul
add
dec
push
jp
out
xor
jle
out
in
mov
push
jecxz
mov
sub
out
mov
adcl
dec
push
out
jb
and
xchg
insb
pop
pop
ds
or
test
imul
mov
fldcw
xchg
push
adc
cmp
mov
jno
int
pop
aaa
push
and
pop
sub
fs
xchg
jmp
and
dec
jp
mov
and
sub
nop
cmp
or
dec
mov
sub
inc
mov
bound
cmp
bound
ds
xchg
push
iret
cmp
mov
lea
mov
push
cmp
adc
xchg
ljmp
push
in
out
mov
iret
loope
arpl
std
xor
inc
sbb
aas
insl
lahf
mov
cmpsb
lret
sbb
scas
sbb
movsb
fldt
call
int
xchg
adc
xchg
and
pop
notl
jmp
inc
icebp
sbbb
lea
push
mov
and
and
mov
test
pop
mov
arpl
sbb
push
aad
push
outsl
dec
xchg
fistpll
ljmp
rcl
mov
dec
lcall
into
leave
cmp
push
cli
lcall
dec
or
cmpsb
clc
mov
xchg
out
das
mov
shlb
mov
mov
xchg
outsb
pop
adc
ss
cmp
fs
das
mov
xor
imul
and
ror
cmp
int
dec
jmp
bound
xor
pop
js
mov
push
in
jo
mov
mov
push
and
adc
or
daa
mov
push
jp
dec
lods
jns
xor
pop
mov
mov
mov
pop
pop
push
xchg
mov
inc
jb
jmp
jo
pop
adc
stos
mov
cmpsb
repnz
fldcw
pop
pop
xorl
in
lods
les
sbb
sti
in
lock
push
push
and
in
lods
inc
scas
imul
xchg
sbb
pop
or
arpl
mov
cltd
cmp
mov
test
std
div
xchg
in
and
mov
outsl
xorl
sub
stos
mov
inc
xchg
mov
ret
lret
sbb
jp
jns
data16
xchg
cld
pop
pop
mov
mov
in
dec
loope
and
aas
icebp
and
pusha
fiaddl
jle
dec
in
jo
push
cmpsl
lods
mov
lea
enter
stos
jo
pusha
lret
adc
sbb
xchg
mov
fcmovu
jecxz
xchg
mov
sbb
test
and
inc
pop
or
jno
test
mov
not
mov
lock
je
xrelease
fucomi
sahf
push
lods
and
jae
pop
jb
ret
sub
jae
mov
jne
lock
adc
fistpl
loop
stc
orl
movl
and
mov
lahf
mov
mov
add
mov
mov
cmp
pop
sbb
test
xlat
adc
cli
outsl
clc
addl
leave
ret
je
stos
pop
xchg
popf
aaa
xor
cmpsl
add
pop
and
insl
aas
xorl
aad
cmp
movlps
addr16
push
or
mov
pop
xchg
xlat
jno
mov
ficoms
dec
insl
mov
sbb
mov
aam
repz
mov
mov
adc
sbb
push
xchg
test
movsb
das
ds
push
push
and
pop
es
call
add
sar
lock
xchg
mov
pop
sbb
xchg
jo
faddl
fwait
jae
fcoml
int3
and
mul
stc
sbb
cwtl
sarl
xor
inc
sbb
jno
daa
pop
popf
stos
in
sub
testb
int3
imull
or
js
pop
mov
aaa
lods
ret
loop
je
shlb
les
pop
fnsave
lret
loope
repnz
ss
adc
mov
insb
mov
sbb
je
cmpsb
or
lock
mov
sub
cmp
or
dec
jge
push
push
jne
mov
pop
addr16
filds
cmp
in
jns
pop
mov
mov
cmp
mov
cltd
inc
push
cmpsl
fwait
jg
push
push
sbb
pop
ds
add
scas
adc
lods
xchg
test
cmovae
outsb
fadd
sbb
stos
xor
mov
inc
mov
jmp
das
imul
mov
int
outsb
out
fsubrl
mov
add
nop
lcall
jo
jns
mov
icebp
add
jmp
mov
test
sbb
popa
xorl
hlt
pushf
push
xor
jge
rcrb
pop
inc
jnp
inc
push
insb
xor
and
lods
xor
jbe
in
sbb
shrb
in
stc
push
or
bound
outsb
jge
test
shll
out
mov
lods
cmp
in
scas
dec
je
aad
cld
xor
mov
mov
add
addb
cmp
and
xor
push
sub
stos
mov
stc
aad
cmp
orb
push
jmp
test
das
add
ljmp
mov
push
arpl
test
sbb
out
stc
cmpsl
sub
inc
daa
cmp
add
mov
and
mov
ss
cs
movb
andl
cmp
push
and
lret
fadds
rcrb
push
or
outsb
xor
mov
inc
test
mov
sbb
jae
sub
jns
and
dec
sbb
lret
movsb
lea
sub
mov
xchg
and
jecxz
add
std
movsl
push
movzbl
dec
loope
xchg
jmp
or
or
icebp
jne
sbb
in
dec
clc
mov
add
and
outsl
push
inc
cmp
inc
cmp
mov
int3
add
sub
fnstcw
lock
sub
or
jmp
push
orl
xorl
push
aaa
cmp
ret
aam
test
add
mov
jnp
out
stc
dec
jne
insl
out
nop
call
pop
cs
shrb
xlat
jae
orl
pop
sbb
ja
push
mov
out
mov
xchg
das
pop
fs
inc
pop
loopne
mov
xlat
insb
les
nop
mov
xor
add
mov
cmpsl
sbbb
mov
out
xchg
fsubrp
inc
movsl
lea
mov
or
mov
insl
push
ret
shrl
sub
lds
and
out
adc
cmp
movsl
mov
push
pop
push
pop
scas
jno
dec
mov
fisubrl
shrb
cs
mov
clc
or
mov
mov
loope
inc
xor
jecxz
xor
lcall
inc
stc
insl
mov
fnstsw
movsl
push
call
sub
jae
insl
je
aad
dec
and
mov
sbb
mov
jge
jl
lock
jns
fadds
mov
ljmp
xor
xor
dec
xchg
insb
fdivr
jle
xchg
mov
loop
clc
ljmp
inc
cld
xchg
int3
dec
xor
loope
mov
cmp
sbb
outsl
sarb
cmp
rcll
jge
inc
sbb
xor
cmp
inc
mov
or
bound
rcrl
mov
mov
stos
dec
popf
repnz
movsb
into
xor
loop
orb
lods
xchg
cmpl
add
jnp
mov
mov
mov
out
insb
pop
push
popf
or
xor
cmp
sbb
push
loop
ret
imull
sti
cmp
stos
xor
cmp
sub
dec
xchg
dec
rcll
mov
js
in
xor
aad
mov
and
das
lahf
or
push
pop
movsl
outsb
and
pop
inc
pop
push
stos
adc
pusha
pop
jns
lea
adc
sbb
or
pop
mov
mov
xchg
xchg
mov
cmp
stos
adc
aas
in
mov
js
mov
repz
jno
sub
aas
fistl
lods
xchg
sbb
jmp
into
lods
mov
repz
jb
imul
lahf
or
fwait
icebp
xor
sarl
or
xor
ret
dec
add
fcomi
mov
movsb
adc
push
jbe
fldt
xor
cmp
add
jge
stos
fwait
pop
imul
cmc
dec
inc
lahf
enter
outsb
add
mov
pop
subl
je
or
rcrl
pop
enter
jo
jecxz
pop
daa
std
out
js
and
xchg
lock
push
loopne
addb
jo
sub
int3
sub
loope
push
int
jle
mov
cmc
in
inc
iret
mov
mov
pop
mov
mov
push
lret
lret
xchg
add
loopne
js
inc
jmp
push
xor
push
call
cmpsb
in
call
in
xchg
mov
ja
jne
push
pop
pusha
xor
adc
xchg
jns
jae
out
and
add
cwtl
adc
mov
loope
add
test
nop
fnstcw
sbb
cmc
dec
sub
or
enter
jnp,pn
cmpsl
mov
cmp
rcl
rol
xchg
lcall
mov
mov
jmp
and
rorl
mov
std
mov
push
mov
shl
adc
xor
stos
mov
cltd
es
jo
pushf
pusha
sbb
pop
push
cmp
mov
in
add
out
jno
test
mov
dec
aaa
test
pushf
adc
iret
outsb
inc
lock
in
and
inc
sahf
outsb
push
int3
rcrl
gs
aas
addps
lret
and
jbe
lret
lret
cmpsl
inc
popf
into
movsb
xchg
enter
in
bound
popa
cmp
imul
add
pop
push
movsb
aaa
fnclex
pop
mov
enter
test
call
inc
mov
arpl
popf
xor
outsl
mov
rcl
push
fwait
loop
movmskps
mov
cs
enter
das
push
or
sub
jne
mov
mov
jbe
pop
push
mov
xchg
adc
jne
shll
ret
loope
andb
movsl
into
sub
sbb
cltd
lret
jl
std
inc
int
pop
in
mov
jbe
xor
mov
pop
jo
xchg
mov
sbb
ficoms
popa
xorb
mov
cmp
xchg
cs
fnstcw
js
jge
inc
cmpsl
pushf
das
fwait
into
sahf
les
insb
adc
repnz
push
dec
daa
sbb
xchg
push
jge
test
mov
add
mov
mov
popf
cmp
rcll
repnz
pop
negb
and
inc
scas
fmuls
pop
mov
jnp
shll
and
adc
mov
jnp
cmc
mov
es
jb
lea
jl
cmp
push
inc
imul
dec
pusha
outsb
sbb
pop
xchg
or
test
les
or
imul
or
stc
daa
sub
filds
mov
in
lea
adc
pusha
lock
sbbb
push
mov
pop
xchg
jmp
jle
test
loopne
adc
mov
sbb
loope
cmp
dec
and
mov
jecxz
mov
test
rcl
mov
jge
sti
shlb
mov
sbb
aas
mov
sbb
ss
bound
test
or
or
mov
mov
in
mov
fisttpl
mov
lahf
adc
inc
sbb
ds
clc
push
pop
daa
push
inc
sahf
ret
fs
int3
jp
mov
mov
clc
add
cmp
repz
mov
cmc
cmc
mov
push
cmp
cmp
nop
xchg
mov
add
push
or
cmp
xor
cmp
mov
sbb
sbb
scas
jo
jbe
sub
ficoml
xor
int
xor
ds
and
scas
dec
add
push
and
xchg
or
lret
int3
xchg
pusha
shr
and
stos
stc
push
mov
pop
push
mov
xor
loopne
imul
or
fwait
hlt
xchg
jne
sbb
push
mov
mov
mov
jo
xchg
sbb
jne
push
push
jo
mov
ss
jp
mov
cmp
push
sbb
or
cmpb
int3
sbb
lea
test
dec
xchg
pop
test
dec
xchg
cmp
sbbb
cmp
jbe
sub
clc
pushf
fimuls
or
sub
mov
int3
mulb
ficomps
cli
into
xchg
sub
cld
hlt
loop
popf
mov
xchg
adc
push
out
mov
inc
dec
and
loop
xor
dec
push
das
sub
add
mov
stos
lea
sbb
enter
lods
or
sbb
sbb
lods
add
xor
mov
push
data16
pop
mov
mov
pop
inc
and
loop
xlat
xchg
ud1
jp
mov
adc
adc
out
outsl
mov
pop
sbb
jb
and
rcr
pop
inc
scas
pop
fdivr
stos
cmp
xor
test
push
fnstenv
out
mov
pop
sti
inc
push
push
aam
int
repz
in
movsl
mov
scas
xchg
sbb
rcrb
call
pushf
sub
scas
cmpsb
lret
repnz
scas
mov
inc
dec
subl
push
and
adc
xchg
sub
mov
pop
sbb
cmp
sbb
insl
push
sub
dec
cmp
mov
pusha
xor
enter
jmp
dec
cli
out
int
mov
loopne
and
xor
and
mov
cmp
cwtl
imul
xchg
in
mov
cmp
out
xchg
xor
pop
mov
sbb
icebp
pop
dec
xor
int3
test
mov
xchg
dec
mov
lahf
hlt
and
mov
xlat
ret
ja
cmp
bnd
stos
jbe
adc
jmp
scas
adc
add
fcomps
add
nop
jb
leave
test
add
jne
shlb
leave
arpl
adc
push
push
ret
je
mov
lret
ja
jp
std
adc
arpl
ds
je
cltd
stos
add
sbb
lahf
jno
or
and
adc
cltd
ljmp
xchg
out
pop
push
xorb
insl
stc
inc
inc
shll
pop
jmp
cmpsb
mov
lea
xor
cmp
dec
push
dec
cmp
pop
sub
mov
out
movb
mov
jno
xchg
and
sub
jo
icebp
adc
ljmp
cs
addr16
pop
jge
pusha
add
jae
jnp
or
hlt
mov
ret
sbb
adcl
mov
lret
cmp
xor
sti
sbb
adc
daa
mov
jecxz
out
mov
loopne
push
push
shrl
xor
out
add
gs
xor
fisttpll
or
je
pusha
or
in
mov
fstl
dec
add
push
stos
dec
ror
jp
mov
lods
out
sub
pop
cltd
imul
cmp
mov
roll
fisttpl
pop
leave
inc
xchg
cli
push
jns
outsb
xchg
jl
mov
sbb
sub
int
cmc
xor
aas
dec
push
cmp
lds
pop
jns
add
iret
inc
inc
sysret
mov
push
cmpsb
cmp
mov
add
push
mov
cmp
cmp
frstor
es
icebp
ficoms
sub
arpl
jmp
pop
ret
mov
mov
ljmp
dec
int
xchg
cmpsb
dec
das
mov
fsubp
inc
mov
add
xchg
shrl
outsl
inc
fistl
fld
or
es
sahf
fs
imul
jge
or
fdivrl
cmc
pop
incb
sbb
jo
fwait
adc
fcmove
loopne
mulps
mov
mov
lcall
aad
test
inc
jno
hlt
addr16
xor
add
mov
cmp
dec
pusha
or
call
add
adc
adc
mov
stc
repz
cmp
jns
pop
pop
and
not
or
xchg
ljmp
divl
jge
imul
pop
aad
pop
dec
mov
pop
jge
shl
aad
outsl
shll
popf
add
js
sbb
imul
dec
mov
fwait
xor
or
dec
and
pusha
sbb
enter
push
pop
jo
ds
popa
nop
movsb
imul
testb
rol
lock
push
xchg
cmpsl
mov
sbb
xchg
mov
shr
xor
loop
push
imul
mov
fs
push
cmp
pop
xor
and
xchg
ss
scas
sbb
ljmp
adc
inc
push
mulb
mov
data16
aad
out
sarb
xchg
outsl
jno
aaa
hlt
iret
lret
jecxz
mov
add
and
mov
push
xchg
test
or
pop
out
dec
sub
sub
pop
jns
bound
push
cmc
stc
cmp
popa
mov
scas
inc
push
jg
stc
loope
jae
push
pushf
das
scas
push
inc
pop
add
mov
mov
cmp
enter
jns
push
mov
xlat
pop
pop
push
clc
rcrb
orl
and
lret
mov
adc
out
push
data16
fbld
stos
cmc
into
sbb
dec
jo
fcmovu
fidivs
and
ljmp
ljmp
cmp
mov
orl
mov
bound
pop
clc
js
inc
xchg
jle
fs
outsb
push
mov
aas
std
andb
mov
add
fucom
in
sahf
mov
fidivrl
add
adc
dec
ret
in
inc
jae
mov
jne
xchg
out
es
lcall
iret
push
mov
outsb
pop
ret
mov
xchg
xlat
ret
icebp
or
sub
movsb
stos
xor
fsubrs
and
fwait
das
and
jb
enter
outsl
out
int3
pop
mov
stc
pop
adc
daa
dec
push
jg
jp
mov
mov
fstpl
mov
fsubl
mov
xchg
daa
pusha
fs
sub
pop
test
in
jae
data16
xlat
cmp
lahf
loop
push
mov
push
pushf
sarl
stos
sub
popf
inc
std
pop
mov
out
pop
bound
jno
push
lcall
icebp
cmp
or
xchg
mov
test
pusha
sub
lahf
mov
repz
dec
loopne
sti
fdivl
imul
stos
adc
or
into
mov
sub
and
pushf
loope
testl
push
ljmp
xchg
int
das
loopne
ljmp
mov
jbe
in
call
outsl
loop
jae
xchg
stc
cwtl
xor
rorb
mov
cli
aas
loopne
daa
out
inc
pop
xchg
flds
push
and
fsubrl
loop
outsb
add
mov
sub
fstpt
pop
leave
jecxz
fnstcw
mov
push
sahf
dec
inc
push
cwtl
movsl
test
sbb
or
aas
mov
pop
add
cmpb
jbe
jno
mov
jmp
push
sbb
loopne
scas
or
jl
int3
sub
mov
inc
ds
ss
push
sbb
lcall
lcall
loopne
stc
iret
cmp
loope
xor
mov
lret
cmpsl
lahf
std
iretw
push
into
cmc
mov
mov
inc
xchg
and
mov
lahf
negl
cmpb
aad
out
adc
dec
fistpll
dec
xchg
cwtl
push
jns
dec
add
mov
popf
inc
add
xchg
scas
push
xlat
sbb
sahf
xchg
mov
in
pop
jne
adc
lcall
xchg
arpl
pushf
cmp
mov
sub
pop
testb
xchg
pop
loop
dec
int3
sub
fistl
bound
jo
inc
xchg
lock
sbb
adc
cmp
dec
xor
or
je
subl
mov
out
adc
stos
xor
adc
in
sbb
xchg
stos
lea
cmpsb
xor
mov
xchg
dec
adc
sbb
sahf
inc
ret
cmc
mov
and
jnp
jae
jle
cwtl
xor
rcrl
jno
pop
loopne
cwtl
hlt
jbe
pusha
adc
cmpsb
cmc
sub
cmpsl
pop
addr16
mov
sti
mov
lea
xor
scas
mov
cmc
sub
or
sub
cwtl
aaa
stc
push
mov
out
jl
cmp
movsl
mov
xchg
inc
cmp
int
mov
fstl
in
inc
sbb
jne
add
jge
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
jne
add
jge
insl
lds
cmc
lods
adc
std
jne
inc
lds
xchg
cmp
add
insl
rcrl
aad
test
test
movsl
jge
in
inc
loop
cmpsl
iret
cmp
popf
mov
or
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
out
lods
jecxz
rorl
sar
mov
arpl
push
sub
and
dec
add
rorl
mov
aaa
jae
arpl
filds
pop
insb
and
dec
add
xchg
ret
in
hlt
mov
cmp
and
push
and
jge
jo
subb
cmc
xchg
adc
nop
aad
aam
loope
or
xor
inc
pop
mov
popf
inc
cmp
add
hlt
pop
rcrb
xor
ljmp
lods
out
aam
dec
lds
pusha
aad
aas
and
repnz
xchg
mov
jge
push
xchg
fcoms
clc
mov
or
mov
sbb
xchg
les
sub
mov
or
and
adc
outsb
rol
add
cmp
xor
stos
or
mov
adc
jge
lods
jecxz
rcrl
mov
and
xor
inc
xor
pop
adc
test
ret
cltd
or
aad
xlat
dec
or
aaa
adc
inc
cmp
dec
mov
mov
ret
mov
sub
cli
mov
aas
cmp
sbb
and
mov
stos
clc
mov
in
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
ds
rol
jp
sbb
add
mov
dec
cmp
and
xor
daa
sarl
adc
xchg
test
pop
xchg
cmp
sbb
mov
add
int3
ljmp
xchg
not
jno
pop
sti
lods
bound
sbb
daa
xchg
into
mov
sahf
pop
mov
sbb
jne
mov
popa
inc
sbb
or
inc
ret
sub
addl
notl
jp
inc
dec
dec
fcmovnbe
jo
adc
and
aam
ljmp
dec
decb
pop
shrl
mov
mov
imul
dec
xchg
inc
clc
rcrb
pop
aad
daa
data16
fistpl
bound
fisubs
lahf
fldl
pop
jl
rclb
add
dec
pop
call
pop
movsl
aam
ficoml
push
in
add
shll
jb
inc
ds
repz
push
frstor
xor
arpl
ljmp
test
push
and
push
dec
adcl
add
pusha
xchg
pushf
cwtl
mov
out
jmp
test
ss
mov
inc
clc
sbbl
xchg
sub
test
mov
std
mov
adc
lret
dec
jnp
stc
orl
les
push
shll
xchg
lea
fcompl
iret
scas
int
cmp
sti
push
jnp
pop
stos
mov
jecxz,pt
pop
push
xor
sbb
mov
mov
sub
xor
fidivs
aas
jo
xor
push
and
cld
imul
popf
inc
push
out
aaa
shr
sub
out
jne
jnp
fdivp
das
mov
jl
xor
pop
negl
scas
jmp
fsts
test
push
jmp
sbb
add
repz
pushf
cmc
add
sub
xchg
push
test
inc
mov
sbb
popl
xorb
xor
mov
push
sub
mov
xchg
dec
mov
loopne
jg
mov
dec
sub
daa
and
lret
jecxz
jle
jno
in
sub
mov
xor
in
and
ljmp
xchg
stc
bound
mov
stos
aad
dec
jo
jp
or
inc
xchg
push
adc
data16
jle
xlat
sbb
cmp
dec
xorb
aad
call
fidivl
imul
out
in
pushf
sbb
pop
pop
cmpsb
rolb
fistps
movsb
xor
push
fsub
fisubs
dec
aaa
cmp
je
stos
aam
mov
jno
lods
leave
cmp
call
in
mov
dec
outsl
leave
dec
push
setns
shlb
pop
mov
andb
cmp
popa
and
orl
sub
clc
and
mov
ret
push
dec
or
sbb
dec
lahf
xchg
int3
inc
test
sti
mov
in
lds
push
lret
in
in
ret
js
cli
shrl
pop
mov
jecxz
fnstenv
and
cmp
test
out
ss
pop
call
imul
dec
test
mov
movsb
ja
lcall
and
pusha
aad
mov
sbb
xlat
lcall
xchg
mov
and
mov
and
mov
push
cmp
jge
addr16
pop
jno
push
jge
pusha
les
adc
and
nop
xor
lock
cmp
adc
and
and
push
notl
aam
out
sub
enter
xchg
ds
pop
push
in
jne
int
and
jmp
insl
add
shl
es
cmp
iret
jae
mov
xchg
push
stos
les
ds
in
cli
inc
shlb
xlat
cltd
lea
xlat
or
imul
jmp
and
clc
inc
out
cmpsb
in
inc
scas
and
mov
and
lock
jmp
sub
call
add
notb
enter
lea
loope
cmpsl
mov
mov
imul
test
push
xor
pop
cmp
inc
movsl
addr16
rcll
js
xorl
adc
in
xchg
xchg
mov
add
idivb
lcall
pusha
sbb
rorl
jae
popl
stos
xor
idivb
int3
aad
test
mov
je
icebp
inc
out
loopne
xchg
ja
lock
hlt
js
adc
xchg
push
sbb
mov
ds
fldenv
lds
imulb
xchg
mov
iret
sbb
jg
ret
lea
sub
pop
icebp
xor
inc
scas
cmp
sub
inc
jle
sub
sub
inc
cmp
lret
jmp
mov
lds
xchg
or
sbb
cmp
pop
jne
arpl
mov
into
std
lahf
add
ret
iret
cs
pushf
sbb
loopnew
jg
sub
mov
jg
pop
rorl
add
fildll
ds
out
sub
pop
pop
inc
fdivs
sbb
mov
sbb
xchg
hlt
pushf
mov
cmp
jno
pop
sub
xchg
and
xor
arpl
mov
loopne
xchg
sti
or
adc
data16
cld
inc
lods
mov
xchg
push
rcrl
loope
pop
rcr
ret
shlb
adc
jg
sub
lods
jge
stc
jge
jne
mov
in
jns,pn
cmp
dec
jmp
adc
sub
push
push
add
nop
mov
subb
fldt
into
addr16
sub
jge
in
sahf
movsl
pop
jg
pop
arpl
int
dec
jge
xor
adc
dec
data16
cmpsl
sub
popa
pop
jnp
cmpsb
dec
dec
fdivr
popf
lods
aad
mov
adc
pop
cmc
inc
or
sub
cs
ja
js
mov
mov
pop
or
mov
int
aaa
xor
fwait
push
xchg
or
inc
sbb
mov
mov
iret
push
and
lock
lahf
test
imul
sbb
lahf
xchg
jp
cmp
push
push
mov
popa
jb
and
mov
xlat
test
sub
xchg
popf
sub
xor
pop
cmp
leave
adc
pop
in
shll
dec
add
mov
mov
aas
jl
out
or
orl
pop
es
ljmp
pop
pop
mov
xchg
icebp
mov
jns
insl
dec
or
cld
pop
jbe
sub
and
lahf
hlt
mov
ds
stos
ficompl
push
mov
and
hlt
pop
sbb
popa
jno
stc
stos
xor
push
adc
xor
clc
jnp
in
or
sub
call
push
push
int3
scas
stos
xor
stos
add
dec
shr
fcompl
or
mov
icebp
mov
xchg
cmpsb
loop
daa
outsb
fcomps
addr16
add
ret
int
adc
jns
jl
pop
cmpsl
cmp
and
mov
cmp
cld
sub
pop
sti
cmp
ljmp
mov
out
pop
mov
push
inc
mov
xchg
dec
inc
mov
in
pop
pop
inc
in
enter
jl
cmc
cmp
fsubrs
arpl
std
cmovne
int3
jae
loop
push
mov
dec
in
mov
clc
mov
shlb
inc
seto
punpckhwd
or
sahf
mov
sub
jns
push
out
insb
outsb
sbb
cmp
and
nop
mov
pop
push
mov
xor
sub
or
push
sub
sbb
pop
arpl
outsl
cmpsl
jno
rcr
leave
push
cmpsb
fwait
je
cli
dec
inc
mov
sahf
ret
or
mov
dec
in
cld
jb
jb
inc
fcomi
sbb
pop
jno
subl
sti
inc
lret
xchg
lcall
insb
dec
movsb
sarl
aaa
and
adc
add
push
add
mov
inc
and
mov
pop
jno
dec
bound
and
imul
jmp
mov
sti
mov
lods
pop
mov
xor
dec
out
cmp
pop
insb
ficoms
icebp
dec
imul
jecxz
jne
jae
in
cmpsb
add
out
sti
insb
cmpsl
and
push
fimuls
ljmp
xor
push
dec
adc
sbb
iret
pop
dec
mov
in
lahf
jno
outsl
in
movsb
xor
push
dec
mov
lods
cmpsb
push
sub
sahf
test
js
cmpsl
aas
xor
push
sbb
add
mov
cmp
sub
cmp
push
repnz
aaa
dec
jns
or
in
inc
fstpt
cmp
jb
xchg
lcall
sbb
inc
call
popa
inc
popf
inc
andl
icebp
pop
sub
or
mov
inc
jbe
xchg
sbb
es
add
mov
push
imul
ror
lds
aad
loop
int
adcb
sbb
jle
jg
rcl
enter
std
cli
repz
les
and
ss
rorb
js
and
imul
enter
clc
sub
dec
mov
dec
pop
sub
mov
or
mov
inc
fcomi
cli
test
jmp
aaa
cmp
xchg
fldl
ja
lods
sarb
popf
cmc
inc
push
and
lcall
mov
popf
mov
xchg
insl
cmpb
subb
lds
mov
aaa
clc
xchg
dec
pop
enter
mov
sub
cs
xchg
stos
mov
jae
and
jb
push
or
cmp
call
add
jne
jbe
mov
es
jp
loop
mov
or
scas
call
xchg
adc
popa
js
sbb
xchg
jecxz
push
cwtl
loop
js
pop
ds
pop
mov
sub
or
cwtl
add
out
sbb
inc
rolb
shl
in
mov
sub
scas
dec
or
and
ljmp
pop
inc
mov
rcpps
dec
and
mov
imull
xchg
jae
sub
cmp
dec
xchg
add
fisubs
sbb
rorb
fiaddl
push
adcb
mov
loopne
out
aas
cli
jge
cld
or
mov
mov
aas
dec
sbb
into
out
add
es
test
sub
repz
data16
cmp
xchg
jnp
cmc
mov
inc
jnp
movsl
ficompl
mov
xchg
sahf
insb
push
sub
pop
scas
jle
sbb
dec
mov
fistps
pushf
fcmove
pop
inc
leave
mov
aad
sbb
cmp
sub
push
xchg
nop
pop
mov
leave
out
inc
sbb
cs
and
cmp
sub
ljmp
and
rclb
sub
jb
xchg
pop
jp
adc
and
into
aad
repnz
push
ja
jg
lret
cs
mov
ret
xchg
clc
jns
sub
push
jg
iret
popa
movsb
or
scas
sub
pop
pushf
mov
add
mov
test
mov
hlt
jmp
cwtl
outsb
enter
cmc
scas
jecxz
adcl
pop
lods
pushf
xchg
notl
out
dec
add
iret
imul
pusha
sbb
repz
xor
daa
push
add
adc
mov
cmp
pop
mov
movsl
negl
and
ret
adc
icebp
or
mov
in
mov
dec
out
popa
and
cmp
xor
sbb
ficoml
sti
mov
call
mov
mov
adc
mov
mov
mov
jo
int3
inc
gs
jnp
lret
mov
test
push
jbe
mov
xchg
xorl
das
add
mov
mov
insl
add
mul
jecxz
roll
cmp
test
mov
cmp
mov
xchg
dec
jo
mov
adc
sub
les
mov
sbb
dec
inc
add
notl
cmpsl
aam
push
das
dec
sti
jl
mov
pushf
adc
and
ja
sti
mov
addl
push
jecxz
and
xor
push
adc
cmp
xchg
roll
sarl
pop
adc
mov
bound
stos
mov
adc
pop
push
and
cmp
lds
push
ds
sub
push
ror
loopne
insb
sbb
mov
pushf
inc
scas
fidivrs
mov
or
lahf
sti
inc
dec
js
mov
xorl
push
xchg
jl
xor
sub
lcall
insl
rol
shll
jne
sub
scas
and
adc
cli
lea
jmp
je
pop
add
out
and
xor
lods
orb
xchg
lret
je
mov
stc
mov
and
es
aad
jae
movsl
in
mov
mov
repnz
pop
mov
cmp
xor
adc
adc
cmp
mov
sbb
bound
mov
jge
icebp
sbb
pop
cmp
pop
pop
loop
pop
push
mov
js
insl
mov
lahf
mov
cmpsb
cmp
mov
inc
popa
sub
out
jnp
mov
nop
inc
sahf
push
jp
call
test
leave
adc
scas
clc
movsl
jp
add
jecxz
neg
test
iret
cmp
mov
call
cmp
mov
arpl
fsubr
jb
xchg
lahf
adc
aaa
rcll
ja
fwait
add
adc
movb
std
fmuls
int3
inc
mov
cltd
xchg
cmpsb
test
mov
lods
pop
and
xchg
xchg
jmp
jno
mov
xchg
nop
das
ss
stos
push
cmpsl
add
xchg
adc
rcrl
pop
stos
push
add
lret
cmp
sahf
pushf
and
ljmp
xchg
ljmp
xchg
xchg
pop
push
sub
outsl
mov
mov
pop
lods
sub
mov
jl
repz
mov
rclb
imul
aad
fildll
mov
mov
insb
out
out
cli
xor
jmp
test
pushf
mov
mov
or
mov
push
add
mov
cmpsb
hlt
push
jg
testl
ss
fiaddl
pop
jmp
int
stc
pop
inc
mov
outsb
out
dec
sub
mov
and
xor
and
int3
mov
lea
scas
rcll
mov
add
scas
jmp
jne
lods
add
pop
shll
repz
pop
pop
and
lds
call
fiaddl
mov
stos
pop
push
push
add
ret
rcrl
pop
pop
aas
test
xlat
sub
mov
stos
mov
scas
popa
rcrl
popa
std
dec
sbb
mov
enter
lret
push
pop
inc
push
loopne
test
xor
lret
xchg
out
cmp
pop
rep
jmp
gs
ret
push
mov
mov
ljmp
aas
addr16
mov
jne
fistl
pop
sahf
pop
je
inc
jecxz
push
mov
hlt
icebp
push
into
loope
test
addr16
xchg
fildll
in
mov
js
and
xlat
adc
outsl
adc
bts
rorb
pop
pop
mov
adc
pop
mov
into
mov
rolb
test
inc
xchg
mov
scas
aaa
or
sub
fs
inc
add
jl
xor
daa
jecxz
and
pop
mov
and
js
pause
testb
mov
pop
jecxz
mov
iret
sub
mov
clc
sub
pop
mov
aam
xor
push
shlb
pop
xchg
leave
stc
sbb
arpl
xchg
rorl
ds
jns
dec
pushf
aam
jge
repnz
fistpl
inc
arpl
sti
outsl
fsubrs
and
stc
xchg
adc
inc
pop
ss
xlat
ss
mov
idivb
movsl
loop
insl
movsl
stc
in
dec
mov
dec
xchg
cmp
sub
fsubrs
push
mov
fnstcw
push
out
call
hlt
adc
dec
lds
andb
call
mov
arpl
sub
and
xor
arpl
out
arpl
pusha
mov
mov
inc
push
outsl
pop
int3
decb
or
xor
sbb
push
inc
inc
addr16
idivb
sub
ds
repz
push
pop
push
aam
push
test
xchg
int
mov
mov
out
imul
aaa
popa
bound
inc
or
push
jns
jns
fadd
push
fdivrl
js
jmp
popa
push
mov
mov
pop
inc
jge
pop
add
fildl
mov
mov
clc
pavgb
popf
fwait
push
int3
inc
jae
mov
mov
fdivs
shlb
cmpsl
push
pop
ss
nop
arpl
arpl
cltd
cli
int3
fcomps
jmp
cmp
add
cmp
pop
jo
hlt
movsb
addb
fstpl
out
mov
lcall
xchg
fildll
scas
mov
stos
loop
mov
cld
movsl
sub
cmp
in
push
das
fidivrl
negl
ds
les
pop
mov
mov
outsb
gs
mov
mov
xchg
mov
movsb
push
cltd
push
xchg
pop
mov
sub
popa
sub
or
daa
sti
fs
inc
sbb
inc
xor
jbe
popa
mov
adc
and
dec
addr16
dec
dec
mov
test
sbb
movsb
mov
inc
xchg
cmp
mov
scas
xor
faddl
stc
push
push
call
call
xchg
mov
sbb
fdivs
sbb
in
xchg
test
ja
clc
scas
pop
lahf
pop
pop
mov
out
mov
out
dec
xor
fcoms
int3
jne
cmpsb
cmp
sbb
in
add
in
inc
add
sub
mov
xor
int3
xchg
fldt
test
adc
pop
add
dec
push
or
in
lret
shrb
or
mov
nop
adc
repnz
test
xchg
pop
shl
jb
xchg
or
cmp
add
inc
fldt
ja
inc
popf
xor
insb
outsl
mov
cwtl
add
mull
pop
fisubl
dec
sbb
mov
jb
mov
int3
jae
popf
cmpl
push
lds
pop
imul
lea
inc
sbb
test
jne
out
ret
adc
aad
mov
fstpl
out
cmpsb
enter
out
jl
pop
lods
xlat
sbbb
push
xor
int3
cli
lods
mov
cmp
pop
sub
aam
jecxz
sbb
inc
xor
scas
out
test
arpl
js
jmp
sbb
mul
or
cmp
lret
cmp
dec
jbe
sbb
nop
loop
adc
cmc
cmpsl
ja
jmp
cmp
daa
pop
test
popf
pop
cli
push
xchg
popf
inc
inc
dec
loope
cmp
sub
push
cmp
mov
cli
cld
sahf
ret
mov
mov
sbb
arpl
pop
mov
nop
xor
jnp
cltd
or
inc
inc
inc
jl
mov
cmp
xchg
xor
xchg
adc
stos
das
fcomps
mov
and
cli
inc
and
arpl
cltd
das
or
icebp
mov
jb
movsl
ret
or
xchg
loope
xor
mov
add
std
cmc
in
mov
std
fs
xchg
dec
sub
aad
adc
addl
inc
repnz
mov
sbb
movsb
dec
ret
push
dec
mov
popf
in
je
mov
lds
cmp
jp
scas
xchg
addr16
dec
inc
cmpsl
mov
cs
adc
mull
push
aaa
imul
jp
push
icebp
xor
xchg
adc
inc
fwait
mov
test
sub
repz
out
lods
sbb
jne
sub
pop
loopne
aam
enter
pop
in
into
insl
push
and
dec
cmpsb
mov
lret
mov
mov
pop
js
mov
cmpsb
mov
or
cmpsb
out
in
push
sub
stc
shlb
popf
adc
mov
jecxz
pop
jecxz
and
cmp
insl
in
adc
or
push
rclb
or
add
push
cmpsb
test
and
push
xor
ret
stos
jmp
adcl
gs
fwait
jp
call
hlt
dec
ret
call
jg
clc
fdivrs
rorb
hlt
mov
das
xchg
jp
jmp
mov
leave
stos
sbb
inc
inc
add
adc
cmp
push
adc
pop
in
cmp
mov
mov
pop
cmp
fs
call
sbb
imul
pop
test
das
inc
ror
and
minps
jmp
push
outsb
jle
sbb
int3
push
jp
inc
pushf
cli
loope
push
popa
leave
lcall
cmp
scas
ret
pushf
and
int3
jae
mov
sbb
or
sahf
mov
cmc
sub
mov
xchg
sbb
jno
sahf
or
jmp
dec
jle
push
outsl
ljmp
sbb
add
sbb
cmpsl
push
rol
jge
repnz
inc
or
xchg
dec
shrb
imul
sbb
cmp
xor
dec
xchg
in
inc
lcall
sbb
stc
jg
xor
jmp
dec
push
daa
dec
jae
sarb
dec
cmpb
rcll
out
ret
mov
xchg
push
in
and
sub
sahf
mov
mov
inc
mov
in
clc
jg
xor
jl
ljmp
outsl
mov
aam
jl
clc
jecxz
outsl
fcom
imul
fwait
imul
dec
xchg
xchg
cmp
imul
cmpsb
xorb
stc
mov
cmp
ljmp
lods
insl
divl
sub
cmpsl
shrb
push
lods
and
gs
repnz
div
xchg
insb
push
dec
add
out
inc
aad
arpl
mov
arpl
add
push
bound
div
mov
jbe
lods
dec
push
div
rcll
adc
xchg
enter
sbb
mov
mov
out
adc
lods
dec
fcom
or
sub
push
das
xchg
dec
pop
movb
push
dec
pop
dec
sub
xor
mov
sub
mov
pop
stos
loop
aam
sbb
gs
aas
sbbb
aas
mov
lds
ss
out
inc
out
aad
sbb
jge
adc
divl
push
jbe
scas
fnstenv
enter
pusha
sbb
lds
fnstsw
fsts
aam
int3
mov
pop
or
mov
or
out
sahf
inc
add
fildl
in
lods
mov
iret
ljmp
jp
push
pop
lcall
cmc
sbb
mov
nop
jge
loope
mov
pop
movsl
lret
xchg
les
imul
adc
or
xor
fdivrl
pop
jecxz
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
jl
mov
cltd
jecxz
rorl
mov
ret
leave
mov
or
fsubl
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
fwait
cmc
mov
mov
or
out
sbb
cmp
push
pop
xor
imul
aad
lret
mov
xchg
jmp
or
cmp
inc
pop
inc
jnp
jnp
imul
int
ffree
lods
sarl
add
inc
fs
xor
and
daa
addr16
repnz
frstor
cmp
push
scas
lock
int
scas
mov
cmc
je
ret
fcoml
xchg
icebp
vorps
jle
sahf
mov
fwait
movl
xchg
std
imul
sbb
dec
mov
sub
dec
jne
add
cmpsb
mov
jnp
imul
fwait
sbb
xchg
and
lret
loope
add
stos
aam
movsb
or
lock
sub
and
rcl
mov
sbb
sbb
mov
inc
jnp
jae
imul
aas
leave
add
xchg
jecxz
in
xchg
inc
stos
jnp
push
sbb
imul
loop
cmc
mov
mov
movsl
sti
xchg
repnz
add
jge
dec
xor
push
cmp
div
out
xchg
fidivs
lods
les
sbb
dec
push
dec
and
cs
or
imul
cmpsb
fldt
sti
loope
mov
add
cmp
push
pop
inc
and
cmc
out
xlat
mov
adcb
jmp
sbb
cmp
inc
pop
xor
imul
aad
lret
movsl
sti
xchg
jmp
sbb
cmp
inc
pop
xor
imul
push
fadd
mov
iret
dec
fcoms
xor
stc
pop
pop
mov
insb
dec
dec
push
push
sbb
jl
sbb
inc
inc
paddq
aad
push
add
mov
scas
xor
popa
jnp
mov
sub
fdivl
lods
pop
out
jnp
mov
and
mov
lods
mov
popf
pop
ja
mov
scas
push
xor
mov
xor
or
jl
push
pop
mov
dec
das
push
cmpsl
ss
int
stos
sub
mov
fbld
mov
pop
cwtl
ds
mov
mov
arpl
scas
xlat
orl
inc
push
mov
pop
iret
jg
jp
mov
cmp
insl
dec
xchg
xor
mov
jno
iret
adc
lds
dec
mov
inc
enter
mulb
inc
inc
rcr
cmpsb
jl
insb
xchg
loope
fbld
mov
push
cltd
clc
dec
fstpl
or
pushf
outsb
stos
mov
push
sbb
out
cli
outsb
imul
sti
dec
xchg
je
pop
mov
inc
in
push
or
movsb
nop
xchg
mov
adc
daa
jo
fnstenv
cwtl
das
cmpsl
insl
sbb
stc
fdivr
mov
les
sub
mov
adc
adc
mov
pop
subl
cltd
mov
scas
xchg
in
push
aam
add
mov
jnp
pop
or
cltd
or
addb
stos
mov
dec
jb
ss
adc
inc
mov
iret
mov
mov
push
sub
cwtl
push
arpl
mov
mov
es
in
je
mov
sbb
int
fldt
shlb
mov
aad
push
push
add
mov
inc
iret
add
xchg
sahf
imul
jg
lret
pop
pop
mov
sub
data16
mov
les
cwtl
or
mov
pop
leave
mov
mov
dec
lcall
subb
adc
mov
in
mov
or
test
enter
pusha
dec
sbb
pop
pop
xchg
cmp
push
fcomps
xor
xchg
fucomip
cmpsb
mov
mov
mov
loope
mov
pop
pop
mov
adcl
jo
mov
into
clc
pop
scas
push
into
mov
pop
aas
aam
pop
fmull
mov
cwtl
mov
mov
xorb
outsl
cltd
add
fbld
adc
jle
cmp
mov
ds
mov
adc
mov
lcall
cmp
into
pop
mov
mov
imul
pop
xlat
pop
stc
stos
dec
fiaddl
or
out
mov
or
jp
movsl
fisubs
push
cwtl
mov
mov
xchg
nop
jg
cmc
pop
sbb
sub
and
daa
cmp
push
mov
lahf
jge
xor
ret
scas
or
mov
add
push
cwtl
or
inc
add
lds
test
adc
hlt
adc
ljmp
inc
xchg
and
xchg
sub
cmp
aam
pop
rsm
push
or
fwait
outsb
fildl
xchg
pop
shll
fistl
movsl
pop
enter
fdivrs
shlb
arpl
pop
or
ja
jo
add
cmp
in
mov
push
int
push
test
dec
lahf
lods
sarl
adc
call
fbld
push
cmpsl
pop
jle
inc
sti
lcall
inc
inc
test
cld
dec
stc
notl
and
push
mov
nop
leave
insb
inc
aam
dec
ja
dec
imul
xchg
cli
sbb
pop
mov
push
aas
jmp
mov
mov
mov
mov
mov
pop
inc
fbld
fmul
push
inc
pop
and
fisttpll
lea
popa
inc
mov
lock
fcomps
leave
pop
pop
hlt
sar
in
pop
int3
jb
negb
adc
cmp
out
inc
xchg
out
in
mov
pop
sub
pop
xor
cli
and
test
cmpsl
cmova
lret
int
test
rorl
sti
sahf
push
fiaddl
les
xchg
cli
mov
enter
dec
pushf
cmpb
inc
mov
pop
cltd
ss
cmp
test
ret
mov
xchg
mov
je
push
stos
stc
jnp
in
lea
popf
jbe
insl
es
test
or
fadds
mov
jp
scas
les
test
push
pushf
mov
xchg
sbb
cmp
into
aas
inc
xchg
js
mov
out
test
jnp
sti
or
adc
test
and
fcmovne
call
adc
mov
pop
gs
ret
mov
aam
call
sub
and
pop
fcmove
push
nop
add
stc
inc
pop
fstp
lcall
inc
jge
bound
sub
and
mov
and
stos
loop
jb
mov
adc
jmp
cmc
clc
pop
pop
pop
dec
and
sbb
int
iret
xlat
rorb
mov
in
add
mov
aad
std
lods
sbb
addr16
data16
cs
add
and
adc
int
mov
insl
mov
test
notl
jno
aad
xchg
test
mov
rcll
cmpsl
cmp
mull
jbe
movsl
pop
rclb
test
jo
sub
inc
pop
fmull
adc
sbb
xor
mov
je
out
cmp
pushf
push
mov
sbb
out
out
outsl
mov
loopne
ljmp
imul
push
cmc
add
jo
jecxz
es
mov
xchg
mov
lods
lret
xlat
jnp
or
sarl
cmp
pop
scas
mov
inc
add
popf
dec
cltd
movsb
scas
sub
add
mov
dec
and
mov
cli
pop
ljmp
mov
mov
ret
add
movsl
hlt
ljmp
test
mov
sbb
leave
pop
shr
pop
dec
xchg
add
jno
in
dec
stos
mov
or
inc
lea
ret
and
jne
test
jg
out
fisubrs
stc
push
dec
mov
jp
xlat
push
cld
lret
enter
push
mov
mov
or
inc
dec
ds
ret
and
and
push
loop
jo
lds
lahf
xor
xor
jns
scas
jmp
cmp
sbb
and
scas
in
xor
testb
mov
cmp
rcrl
push
pop
cmpsl
fs
test
push
xchg
or
pop
ret
and
data16
push
dec
push
sbb
mov
cmp
sub
mov
ljmp
sbb
lcall
bound
jae
aas
sbb
fidivrs
pushw
xor
lds
fdivr
int
pop
mov
xlat
jbe
stos
je
xchg
xor
mov
add
ljmp
and
or
hlt
movl
lods
sbb
je
mov
or
mov
inc
frstor
outsl
lea
ds
mov
in
xor
fiaddl
push
not
wbinvd
rolb
aad
push
stos
fstl
pushl
mov
cmpsb
add
and
bound
xchg
push
inc
shlb
mov
pusha
push
jno
mov
mov
dec
cmc
sub
mov
xor
pop
scas
mov
jmp
xor
add
scas
jp
push
ret
jmp
out
sbb
sbb
xchg
lds
mov
mov
das
insl
push
mov
pop
call
inc
mov
sub
dec
add
imul
cmp
test
movzwl
pushf
adc
imul
pushf
jmp
mov
mov
in
les
aaa
mov
push
inc
xchg
sbb
fs
mov
fldt
pop
push
aas
push
arpl
jnp
aad
mov
xor
push
push
jg
aad
je
insl
in
mov
inc
rcll
iret
pop
adc
jmp
adc
sbb
mov
mov
dec
test
adc
mov
add
pop
loopne
rclb
add
dec
cmp
xor
gs
mov
aad
ljmp
in
jp
mov
jb
andb
int
jae
lods
or
xchg
inc
movsb
shlb
mov
ret
ret
int3
inc
aam
jg
in
sti
mov
dec
xchg
sbb
fsubl
out
cmpsl
cmp
hlt
sub
shll
aam
ja
pop
mov
js
insb
mov
popa
push
ja
adc
rorl
rcl
lods
push
xor
jns
dec
cmp
cltd
inc
repnz
nop
push
stc
push
cmp
inc
jne
or
insb
stos
pop
gs
adc
push
mov
popw
in
cmp
test
cmc
icebp
aaa
push
dec
pop
push
xchg
pop
sbb
lds
jns
fidivl
xor
add
aaa
mov
out
mov
flds
aaa
data16
pop
pushf
push
ljmp
cs
mov
js
add
mov
or
aad
cli
sub
in
push
dec
lods
std
lods
out
mov
fsubrl
and
mov
inc
cmp
lds
push
cmpsl
mov
dec
fistl
fmull
mov
aas
popa
fimuls
mov
loopne
cld
pushf
in
and
add
sub
sbb
aas
cwtl
push
movsl
cmp
test
mov
and
dec
inc
cmpsl
mov
stos
mov
sub
push
adc
mov
xchg
cmp
sbb
sub
rep
out
push
dec
and
js
cmp
mov
ja
scas
push
fs
daa
or
lret
out
fildl
lret
inc
add
fildll
jmp
fsubrs
dec
add
jnp
xor
xchg
fcmovnbe
lea
sbb
lcall
sbb
pop
in
int3
cwtl
fisttpl
dec
xor
pushf
push
enter
fs
push
js
add
lods
mov
notb
and
arpl
test
std
push
and
inc
loopne
fwait
inc
push
xor
leave
pop
push
inc
cmp
mov
push
fs
pop
hlt
cmc
aas
std
adc
pop
dec
mov
lods
fs
xor
out
or
xchg
aad
sub
cmpsl
negl
out
dec
mov
or
stos
arpl
ret
sub
lea
push
ss
sub
lret
sub
mov
jns
call
jl
movsl
cmc
xchg
aad
mov
mov
je
mov
cmpb
repz
std
rcr
xchg
adc
sub
pusha
mov
fmuls
mov
icebp
ret
outsb
inc
or
rcll
jb
sub
pop
push
gs
or
out
mov
out
test
fld1
xor
call
imul
test
cmp
push
dec
ja,pn
sti
mov
xchg
mov
jb
cld
fidivs
adc
lret
mov
mov
xchg
fmul
push
fsubrp
vpxor
lret
xchg
jne
fstp
jns
pop
dec
lea
movsl
js
mov
add
pop
jg
repz
push
sbb
stc
push
fbstp
cli
mov
adc
cmp
icebp
aam
notl
cmp
add
stos
push
in
or
movb
mov
cmc
arpl
call
cmp
fstps
sub
xchg
cmp
jo
fisubrl
out
pushf
push
aad
test
inc
cmc
mov
sahf
stc
pop
xchg
xor
int3
ds
sub
sahf
add
jmp
xor
les
xor
repz
add
lret
jb
lret
sbbb
pop
imul
in
mov
mov
cmp
mov
insl
jo
ret
xchg
sub
cmc
dec
outsl
add
push
lea
and
rcrl
test
scas
fimuls
xchg
mov
fadds
inc
push
inc
push
adc
pusha
push
lock
pop
mov
pop
testb
pop
push
pop
inc
jae
mov
add
push
xchg
addr16
dec
dec
jge
test
outsl
adc
xchg
and
rcrb
int
cmp
mov
pop
jb
std
je
adc
in
mov
push
xor
lods
mov
xor
fstpt
add
push
rcrb
push
xor
imul
sbbl
imul
mov
cmp
and
call
ret
lods
push
repz
mov
mov
jl
mov
mov
xor
enter
adc
dec
cmp
cmp
roll
push
xchg
pop
popf
sbb
insb
lods
pop
dec
sbb
lret
dec
insl
sbb
mov
pop
adc
jb
add
xlat
addb
add
stc
add
ljmp
pop
dec
cmp
jle
stos
mov
add
add
cmp
sbb
xchg
into
call
and
wrmsr
daa
je
fwait
add
sub
jl
in
clc
push
dec
xor
test
test
xor
mov
mov
inc
xor
jno
mov
jle
lret
mov
insb
test
and
sub
notl
mov
mov
jno
stos
inc
fldenv
pop
jns
jno
or
jae
lock
cmp
loop
test
mov
jns
test
arpl
mov
popa
and
adc
aas
add
push
lret
or
iret
pusha
inc
add
mov
sbb
out
fmul
mov
fs
js
pop
out
sub
sub
loope
sahf
mov
cmc
xor
pop
popf
stos
fsubl
sub
std
ret
push
out
add
and
or
pop
adc
sub
mov
sbb
jmp
mov
daa
add
jmp
sub
iret
pop
pop
xchg
mov
and
jg
and
das
push
data16
push
sub
mov
pop
jg
inc
mov
sbb
insb
into
mov
jbe
add
aad
mov
xor
or
mov
cmc
sbb
xor
adc
adc
arpl
stos
or
loope
xor
sbb
adc
cmp
aam
daa
mov
insb
adc
hlt
outsb
mov
out
cmp
add
ljmp
xchg
sub
int
and
mov
mov
sarl
jns
pop
push
pop
loope
outsl
mov
inc
fistl
mov
push
inc
cs
pop
jns
fisubrl
fscale
jno
mov
aas
mov
loopne
pop
insb
lods
push
sub
cmpb
icebp
lds
mov
out
or
lahf
rorb
mov
mov
cld
sbb
add
sbb
push
ror
aam
in
mov
or
or
mov
sbb
fidivs
xor
cmpsb
popf
loopne
aam
push
arpl
mov
adc
loop
push
outsl
sti
subb
cs
pop
cld
xchg
sub
mov
or
fucom
lret
adc
icebp
sub
mov
adc
sub
lock
sbb
and
or
pushf
xlat
push
clc
cmpsl
push
adc
adc
test
das
xchg
cmp
sub
sti
ret
scas
dec
pop
cmp
lods
xor
sti
mov
lods
pop
adc
out
rorl
inc
pop
popa
pop
xchg
xchg
cld
fstl
imul
scas
pushf
das
sbb
fwait
lods
adc
mov
push
xchg
int3
dec
loopne
cmc
jne
cwtl
push
std
jae
mov
xchg
mov
mov
inc
ret
mov
int
push
push
das
ss
pop
sub
sbb
push
jae
dec
ret
in
mov
cmp
sbb
dec
mov
daa
mov
mov
lods
mov
or
repnz
into
ret
pop
mov
fdivr
ret
ljmp
mov
jb
arpl
mov
cmp
mov
data16
add
nop
lahf
xor
imul
in
inc
fsubl
cmp
mov
dec
or
xchg
enter
negl
cmp
mov
int
ds
outsb
out
mov
daa
cmp
push
adc
int3
jg
test
fcoml
repnz
lahf
or
jecxz
xchg
or
test
ss
dec
xchg
mov
pop
mov
adc
out
in
inc
adc
enter
shrl
popf
jmp
addr16
and
in
pop
mov
cmp
dec
js
imul
popa
pop
pop
jl
les
or
outsb
mov
enter
add
fisttps
ret
out
lock
dec
fstpl
js
xor
pop
clc
cli
xor
mov
cmpsl
sbb
outsl
mov
divb
mov
lock
inc
pop
add
or
mov
pop
cmc
mov
mov
orb
mov
test
outsb
repnz
jmp
mov
repnz
push
sbb
inc
dec
loope
out
mov
loopne
cmp
adc
jmp
ror
out
add
push
cs
mov
out
xor
aad
dec
ljmp
or
xchg
pusha
xlat
ljmp
in
xchg
sbb
mov
push
int3
push
or
loop
mov
xlat
xchg
xchg
in
jne
iret
mov
arpl
push
add
bound
mov
mov
or
out
dec
add
mov
lea
add
icebp
inc
nop
and
iret
mov
loopne
xchg
and
dec
test
fsub
adc
mov
fs
sbb
in
push
cmp
xchg
dec
jmp
xlat
rclb
scas
cld
lret
lods
roll
addb
jecxz
dec
out
xchg
mov
cmp
mov
sbb
push
dec
xor
xchg
sub
xor
dec
sub
mov
out
sahf
mov
icebp
inc
ja
or
adc
sbb
lret
icebp
lret
add
int3
dec
jb
push
and
and
pop
jmp
ds
imul
jno
mov
lret
xchg
call
adc
bound
aaa
les
mov
nop
dec
xor
or
xor
jbe
inc
test
mov
add
pop
popa
inc
leave
loopne
xor
push
push
movsb
add
popf
dec
pop
jbe
push
push
sbb
scas
insl
rorb
mov
test
insl
sbb
insl
cmove
scas
push
jmp
jbe
or
lea
mov
jmp
xor
mov
imul
cmp
fldenv
test
mov
into
nop
pop
sbb
out
int
mov
push
sub
stos
loope
fwait
xchg
push
mov
cmc
jle
shll
movsb
jno
sub
jg
hlt
xor
mov
inc
lock
xchg
pop
rorl
mov
cltd
xor
pop
adc
push
fs
ret
dec
call
push
adc
jno
das
lock
cmp
adc
mov
cmp
jns
jge
dec
sub
mov
mov
imul
or
cld
lods
clc
out
stos
popf
nop
aad
stos
bound
mov
xchg
and
xor
inc
call
sub
repz
in
in
xlat
add
das
mov
das
jl
std
xorl
clc
sub
test
mull
sub
rcrl
xchg
sub
mov
inc
add
aaa
inc
add
stc
xor
cmp
sbb
sahf
subb
mov
mov
push
lods
jmp
sbb
mov
xchg
stc
push
imul
jne
inc
andl
ret
int3
in
js
pop
xor
jl
jg
xchg
outsb
movsb
jae
icebp
fwait
xor
icebp
addb
imul
out
loop
vmaxps
daa
mov
sti
repnz
loope
jne
inc
loop
lods
cmp
xor
stos
pop
sbb
jbe
push
sub
pop
jecxz
lock
push
lcall
pop
pop
loope
mov
adc
hlt
adc
add
jmp
sti
enter
mov
ret
scas
xor
rcl
outsb
stos
sub
cmp
dec
mov
pop
jae
lret
sbb
cmpsl
lret
xchg
push
push
jne
mov
jns
push
lret
imul
lock
loopne
shl
dec
and
xchg
lds
stc
mov
bound
cmp
mov
sub
inc
lret
shrl
pop
rcl
lcall
sahf
pop
or
scas
inc
insb
adc
call
mov
sahf
adc
adc
lcall
fwait
pop
insl
outsl
jecxz
fwait
push
adc
push
shlb
bound
cltd
dec
adc
sbb
hlt
add
cmp
mov
inc
sti
out
and
mov
pusha
xchg
mov
sub
cli
jo
mov
xchg
adc
adc
xchg
mov
cmp
in
cmp
ljmp
mov
xlat
dec
sbb
xor
lea
fnstenv
clc
and
mov
movsb
and
into
cli
add
ljmp
in
or
std
mov
aam
pop
loop
test
cli
pop
sbb
rclb
pop
std
mov
push
movsl
adc
and
movsl
xor
fcom
int
in
fs
inc
push
or
lock
shll
sub
mov
inc
fadd
in
mov
dec
mov
pop
es
in
mov
cmpl
sahf
pop
jl
cmc
jo
aas
mov
stc
cli
sarb
adc
daa
cmc
js
mov
cs
mov
lods
add
xchg
stc
and
sbbl
jl
sub
xchg
adc
cmp
jmp
out
pop
mov
and
jbe
imul
push
dec
gs
sbb
dec
push
loop
hlt
push
adc
pushf
ss
and
in
push
insl
pop
cmpsl
push
dec
mov
cld
inc
pusha
enter
out
push
sub
fnsave
jp
stos
aas
out
and
or
shl
dec
cmc
jecxz
icebp
mov
outsl
adc
out
cmp
or
dec
int
pop
inc
adc
xor
nop
sub
int
cs
nop
jbe
inc
cmc
push
add
pop
or
jne
add
fcmovnb
xchg
shll
in
in
xchg
jnp
pop
ret
fcoms
mov
iret
inc
rcll
cltd
lods
lods
xchg
test
adc
lret
inc
hlt
mov
add
or
loop
jp
fcoms
adc
add
fcompl
mov
fsin
mov
into
sbb
add
ss
cmpsl
mov
rcll
sub
stos
push
clc
outsl
mov
mov
cmp
ficoml
pop
xchg
int3
clc
cmp
lahf
shrl
lret
or
jbe
xor
mov
sbb
orl
jg
add
mov
stc
lret
outsb
stos
in
stos
fs
mov
scas
and
dec
outsl
xchg
push
arpl
cld
xchg
sahf
cli
sub
push
jae
dec
test
icebp
hlt
andb
mov
mov
mov
sub
icebp
cmc
mov
xor
add
mov
ret
sub
xchg
mov
pop
mov
or
aad
lret
movsl
sti
xchg
jmp
sbb
cmp
inc
pop
xor
imul
aad
lret
movsl
sti
xchg
jmp
sbb
cmp
inc
pop
xor
imul
aad
lret
movsl
sti
xchg
jmp
sbb
cmp
inc
pop
xor
imul
mov
mov
movsl
jnp
imul
hlt
iret
xchg
push
sub
sub
ret
pop
test
jp
int3
int3
int3
int3
cwtl
mov
push
jb
cld
push
clc
xchg
pop
pop
addl
add
push
or
pop
push
add
rolb
sbb
cmp
dec
add
add
fiaddl
stc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
add
cmp
aas
add
add
add
stos
add
incl
ljmp
add
nop
add
add
add
test
aam
jo
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
mov
xchg
add
add
add
sbb
pop
add
add
pop
add
add
add
popa
add
add
add
jecxz
ja
sbb
inc
add
add
sbb
add
add
add
cmp
insl
add
les
test
inc
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
les
cmp
sbb
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
mov
pop
add
add
add
add
add
adc
and
out
add
add
push
add
stos
add
add
add
incl
mov
add
dec
add
add
add
add
add
cmp
add
add
stos
add
add
add
pop
add
add
add
add
add
add
add
add
add
fldl
adc
pop
add
add
sbb
sbb
push
inc
add
add
aaa
add
add
add
lea
aaa
add
add
add
add
sub
cmc
add
add
add
add
sub
aam
sbb
sub
sub
add
xor
mov
add
add
add
sub
test
mov
add
add
dec
add
add
add
add
aad
pop
add
add
sbb
sbb
sldt
popf
add
add
add
add
add
add
add
test
add
and
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
push
pop
outsl
add
test
insb
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
add
stos
add
inc
add
ret
add
dec
add
lds
xor
jb
push
xor
or
add
in
mov
add
add
add
add
add
dec
add
adc
out
add
add
adc
jmp
cmp
dec
add
add
add
sbb
sbb
and
movb
add
add
add
add
enter
sbb
sbb
pop
add
push
add
in
add
add
add
add
add
add
add
add
incl
aad
hlt
add
pop
add
add
add
add
add
movsb
lcall
push
js
push
adc
mov
adc
fcmove
sbb
mov
enter
mov
mov
test
ret
mov
add
xor
adc
and
jnp
or
sbb
in
pop
sub
pop
inc
inc
fisttps
imulb
in
add
leave
push
imul
lods
push
hlt
jb
xchg
adc
cmpsl
and
mov
test
scas
movsb
jbe
cmc
cmp
push
icebp
dec
push
sub
mov
fbstp
rcr
cmpl
out
std
aas
fdivrs
sub
sbb
dec
pop
ljmp
mov
fisubrl
lret
xchg
cltd
inc
and
test
cmp
mov
cmpsl
push
xor
jl
dec
mov
push
mov
or
xor
mov
cmc
je
mov
or
pop
mov
mov
imul
dec
lret
mov
enter
ljmp
adc
stos
jle
stos
mov
jns
and
imul
push
pop
mov
ret
jo
fnstcw
cld
enter
xchg
xor
aad
call
lret
shrb
sahf
ljmp
data16
xlat
mov
mov
push
fcomi
scas
jae
sbb
adc
jbe
pop
jnp
adc
sahf
add
mov
aad
rorb
dec
xchg
push
imul
imul
add
jecxz
in
popa
mov
mov
sub
pop
lock
aas
pop
icebp
adc
dec
insl
out
xchg
sub
push
repz
sub
push
mov
cli
mov
cmp
inc
jl
ja
movsb
push
jae
or
jne
lahf
add
lods
test
xchg
push
orps
dec
popa
dec
and
enter
mov
aad
pop
cmp
std
fists
ja
stos
sub
push
add
inc
hlt
mov
mov
rol
rcrl
mov
push
add
or
pop
xchg
xchg
clc
lods
enter
rorl
movsl
sti
xor
add
xor
out
jge
pop
in
push
push
cmp
arpl
decb
mov
jl
testb
xchg
fisttps
jecxz
push
aam
mov
icebp
cmpsb
hlt
pop
and
jge
arpl
imul
icebp
bound
xchg
fildl
pop
subl
push
adc
lods
jo
cld
hlt
jno
stos
push
pop
sar
cmp
stc
movsl
push
cmp
rorb
ljmp
jnp
lock
inc
xchg
jl
not
or
sub
lcall
xchg
rorb
cwtl
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
