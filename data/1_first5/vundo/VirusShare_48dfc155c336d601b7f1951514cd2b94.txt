add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
es
lods
dec
inc
mov
rorb
add
add
add
add
add
push
add
add
movb
add
add
add
add
add
add
xor
add
add
mov
movb
add
add
sub
jne
and
fwait
add
imul
add
add
add
add
add
add
add
add
inc
add
fwait
add
add
add
add
add
add
add
add
out
push
add
add
add
add
in
push
add
add
add
flds
cmp
add
add
out
push
add
pop
mov
push
add
add
add
add
add
add
add
add
jge
push
add
add
add
add
mov
add
add
add
add
push
add
mov
sbb
jbe
mov
add
add
add
add
add
add
inc
add
adc
outsb
add
add
add
sub
and
pop
add
add
add
add
or
add
add
add
add
add
add
aad
leave
add
add
add
add
add
int
mov
push
les
xchg
add
add
xchg
add
add
mov
and
jge
inc
add
add
or
add
add
add
add
add
add
add
mov
movsl
add
add
add
mov
ss
add
mov
add
sbb
add
leave
add
add
enter
flds
enter
adc
add
add
add
enter
insb
add
add
and
insl
add
mov
add
rolb
sub
ljmp
add
add
xchg
xchg
add
mov
sub
mov
movb
add
mov
ljmp
add
add
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
pop
add
add
add
add
add
jno
jnp
pusha
add
add
push
add
aad
jge
inc
add
add
and
xor
add
add
add
mov
mov
add
add
add
inc
add
pusha
add
add
add
inc
add
add
iret
add
push
add
add
add
add
arpl
xor
add
add
add
xchg
mov
add
push
add
pusha
add
add
add
xchg
or
push
add
add
int
flds
mov
lea
push
add
add
push
add
add
add
add
mov
inc
add
add
add
add
add
add
incl
adc
mov
dec
add
mov
inc
add
mov
inc
add
sbb
insl
add
add
lods
add
push
or
add
add
or
add
add
incl
jae
sbb
add
add
add
add
add
pusha
add
add
cmp
add
add
add
ljmp
add
add
inc
enter
loope
rorb
clc
es
add
cwtl
sbb
or
pop
out
jb
xchg
sarl
insb
pop
lret
enter
imul
cli
mov
inc
or
arpl
out
in
orl
cmc
mov
dec
fs
out
dec
cltd
test
or
pop
lds
lret
dec
pushf
js
mov
movsb
sarb
mov
add
aam
mov
push
movsb
lret
or
jbe
mov
roll
jmp
lret
dec
notb
enter
lret
je
mov
and
out
stos
or
jge
or
push
or
sub
sub
popa
int
mov
xor
inc
mov
jne
test
jle
movsb
gs
js
flds
out
in
out
gs
rcrl
adc
and
stos
or
lahf
fcompl
xor
dec
out
les
mov
das
leave
jns
dec
leave
pop
loopne
inc
lods
xor
fistpl
dec
push
test
outsb
pop
cmp
fiadds
negb
mov
adc
mov
imull
inc
or
popa
sbb
or
mov
scas
jno
adc
pop
sbb
xchg
dec
les
and
les
in
mov
inc
rcll
mov
fistl
or
adc
dec
test
cmpsl
inc
popf
jns
les
xor
add
mov
xor
popa
xchg
popa
dec
adc
dec
push
sti
popa
int
addr16
shlb
test
pop
xlat
movsb
adc
push
ret
mov
mov
mov
xor
lock
aam
sub
stc
cli
pop
or
jge
and
lret
ja
test
test
je
mov
cmpsl
pop
imul
ficomps
xor
jp
and
inc
sub
fdivrs
fndisi(8087
adc
or
pop
shr
mov
outsb
pop
cmp
loopne
sbb
add
push
add
ficoms
jmp
sub
and
inc
cwtl
cltd
mov
outsl
jecxz
add
ret
in
mov
mov
jge
fldl
xchg
push
jmp
sub
and
les
popf
push
aad
aam
pop
push
lcall
jp
or
aam
ret
aas
push
fwait
add
pop
repz
sub
ret
push
repnz
loope
pop
test
iret
fisubrs
xchg
push
dec
jbe
test
js
inc
pop
inc
lahf
divl
mov
sbb
and
mov
push
not
pop
adc
inc
sbb
or
shl
pop
add
add
dec
push
leave
test
jl
ds
mov
sub
adc
pop
push
fnstenv
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
movsb
mov
pop
test
cli
sub
xchg
outsb
fidivrs
and
xor
cli
mov
stos
push
mov
test
jp
or
xchg
les
aam
and
xor
add
adc
movsb
in
lcall
mov
test
xchg
js
ss
es
aam
and
pop
mov
fstpl
repz
cmp
test
clc
das
sub
ss
inc
leave
sti
pusha
lea
aad
and
pop
adc
sarl
fdivs
imul
or
out
push
js
out
mov
sti
sub
fwait
mov
adc
mov
push
outsl
pop
andl
and
pusha
pop
add
aam
xor
or
movsb
mov
ret
or
jb
rcl
lds
fistpll
fwait
mov
pop
pop
push
mov
cmp
mov
and
lret
imul
adc
push
inc
pop
mov
inc
jnp
inc
es
push
cltd
dec
push
jae
les
xor
stc
add
mov
test
xchg
jo
or
sbb
lock
and
xor
add
adc
cmpsb
je
inc
stos
push
aam
sbb
pop
in
sub
push
in
xchg
inc
pop
and
push
lahf
add
insb
xchg
gs
out
daa
jmp
fcmovnb
psrlw
loope
clc
pop
in
mov
mov
scas
mov
adc
ficompl
sub
and
rcrl
jmp
clc
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
sbb
mov
into
jne
fwait
jae
cltd
sub
mov
cmc
pop
rorb
push
add
sarb
mov
cmp
jne
inc
sbb
ficompl
je
xor
xchg
jmp
add
iret
scas
mov
cmp
lock
inc
mov
jg
ja
ds
jne
inc
cmp
mov
jb
xchg
std
icebp
mov
int3
sbb
mov
push
cmpsl
add
ja
pop
xchg
mov
dec
lret
push
jo
fwait
rolb
adc
lods
lcall
bound
into
add
pop
bound
mov
mov
cltd
xor
xchg
and
mov
sbb
idiv
jmp
push
movsb
pop
mov
fninit
sbb
jnp
stc
lea
out
and
mov
aas
fs
std
movsl
stos
lods
xchg
xchg
mov
jmp
inc
jge
pop
faddl
out
jbe
mov
mov
push
mov
sbb
cmp
adc
outsl
xor
add
pop
push
inc
out
int
je
cmpsb
clc
popa
inc
mov
lret
jmp
add
mov
stos
sbb
test
gs
dec
cmpsb
ljmp
lcall
push
out
dec
in
lock
movsl
push
jne
sub
jl
fbld
mov
xlat
xor
imul
cmp
inc
pop
dec
and
adc
sub
stos
lret
lcall
push
add
inc
xchg
ja
jg
or
stc
stc
dec
jae
pusha
pop
and
fwait
test
lock
xchg
lds
cmp
mov
in
je
fidivl
mov
fistps
divl
adc
out
mov
xor
nop
int
fistps
adc
aad
ja
jle
xor
dec
sbb
mov
xchg
shlb
popa
js
out
in
pop
hlt
das
lahf
sub
lods
mov
rorb
in
mov
dec
adc
jecxz
cmp
popf
cmp
xchg
fisttpll
lret
lds
cltd
inc
xor
inc
push
in
call
popl
js
test
xchg
sti
or
xchg
jne
mov
movsb
sub
mov
fbstp
xchg
mov
jl
movsl
cmp
arpl
lods
sbb
loope
test
mov
mov
addb
sarb
insb
xchg
cmpsb
fldenv
push
mov
inc
cs
inc
xchg
and
sbb
or
jg
das
or
cltd
add
dec
sbb
cmp
repz
mov
fwait
cmpsb
jl
or
rolb
mov
cli
sub
xor
popa
pop
sysenter
xchg
add
lcall
lods
int
push
sbb
test
movsb
cmp
fisubl
mov
es
rcr
mov
xchg
nop
bound
bnd
js
shlb
ljmp
mov
fisttps
mov
ret
cmp
push
dec
in
xor
imull
popa
das
cmpsb
or
cmp
push
add
iret
cli
cs
mov
and
sbb
rclb
jmp
mov
je
iret
mov
add
andnps
ds
and
outsl
loopne
mov
mov
push
xlat
stos
das
push
int3
mov
sarb
mov
sub
test
lahf
test
jns
sbb
dec
mov
fs
into
lcall
out
stos
sub
pop
aad
adc
loopne
lret
lret
adc
dec
xchg
mov
xchg
aaa
faddl
imul
dec
cwtl
or
xor
jb
int
lahf
outsl
sub
sbb
imul
inc
pop
mov
loope
jge
dec
push
movsl
xor
fcomp
or
xchg
dec
test
gs
stos
dec
mov
leave
gs
mov
mov
mov
and
scas
push
ljmp
adc
add
cmp
sub
or
stc
fld
sub
dec
pop
mov
add
mov
adc
inc
js
xchg
jg
xor
cmp
cld
mov
jmp
insb
jle
mov
pop
cwtl
bound
push
loope
add
sbb
outsl
jns
or
movsb
xor
nop
pop
xchg
jne
loope
int3
into
xchg
dec
sar
mov
enter
xor
lock
push
push
aad
mov
andl
aad
mov
xchg
or
cmp
cli
lcall
sub
xor
adc
icebp
mov
fidivs
sbb
xchg
adc
lretw
loope
nop
fsubrl
sbbl
add
sbb
clc
fcomip
xlat
jp
insb
lods
mov
and
andb
jnp
bound
cmp
sbb
mov
push
sub
xor
ss
loope
push
pop
imul
cli
insb
sbb
xchg
dec
lea
pop
std
sbb
shr
mov
jge
dec
sub
and
fidivl
push
xor
leave
mov
outsb
loope
xchg
divb
jp
and
adc
pop
stos
cmp
pop
push
ret
js
mov
pop
int3
push
jbe
mov
movsl
push
add
adc
leave
das
cmp
in
add
add
stc
ljmp
pop
jo
and
js
aad
xor
out
seta
push
in
fbstp
jae
pop
shlb
push
dec
dec
lahf
bound
push
push
xchg
mov
int
and
scas
and
shr
xchg
xchg
xchg
pushf
sbb
cmp
iret
daa
sub
dec
mov
cmpb
jns
mov
std
fwait
std
repnz
gs
jge
xchg
mov
sbb
pop
push
dec
push
loope
cmp
dec
mov
icebp
push
shlb
fwait
add
or
mov
pop
xchg
iret
call
fildll
jg
push
xor
jl
push
adc
hlt
fbstp
ds
jb
icebp
lahf
lcall
lahf
inc
inc
bound
ror
clc
jl
sbb
add
xchg
pop
stc
pop
and
cmpsl
hlt
jecxz
imul
jmp
push
stos
rcll
inc
ss
lds
mov
dec
pop
dec
pop
jb
out
repz
cmpsb
mov
pop
mov
xlat
pop
fcomi
pop
mov
xchg
adc
mov
xor
cbtw
ds
mov
aaa
ret
cmc
jbe
push
cmpsl
aaa
xchg
adcl
imul
icebp
in
bound
stos
out
add
jl
push
scas
jp
adc
or
mov
mov
xchg
icebp
filds
sub
jns
loope
push
jecxz
pusha
leave
in
lahf
pop
lea
inc
xchg
sbb
mov
int3
xchg
mov
sbb
cmp
jns
sub
push
lods
add
xchg
pushf
aaa
pop
sbb
mov
add
jnp
ror
cmp
loop
xor
stos
mov
jo
xor
mov
sbb
scas
sbb
mov
cmp
in
popf
gs
mov
jb
sti
dec
mov
mov
add
push
sbb
mov
ljmp
sbb
ss
scas
pushf
shrb
pushl
mov
mov
ja
fists
jg
aas
test
jle
decl
ljmp
jle
or
das
xor
fisttpl
add
mov
cmpsb
fiaddl
out
bound
mov
shlb
imul
fsubs
inc
stc
dec
ret
mov
sahf
jnp
adc
stos
inc
pop
add
dec
fisubs
mov
pop
adc
movsl
push
and
push
imul
aaa
and
adc
in
bound
in
fs
scas
fdivl
push
mov
dec
pop
jo
repz
and
mov
jnp
inc
mov
mov
mov
fadds
ds
sahf
push
push
inc
add
insl
test
das
fyl2x
xchg
sbb
xchg
lock
mov
mov
xchg
adc
in
and
rcrl
push
cmc
incb
dec
into
fimull
lock
aad
cwtl
loopne
ret
jne
repnz
decl
jno
arpl
lret
push
rep
dec
add
jl,pn
cs
jg
loope
adc
fwait
and
int3
lcall
ljmp
ds
pop
or
out
adc
xor
sbb
outsb
cmpb
std
repz
jle
pop
decl
add
xor
add
outsb
xchg
test
inc
cmpsl
add
test
pop
fildll
and
jae
js
lahf
push
cmp
pusha
or
in
adc
sub
dec
mov
xor
pop
cltd
adc
xchg
movsl
lret
jp
push
sub
pop
sbb
inc
and
pop
fisubrs
imul
pop
stos
out
in
add
xchg
and
cs
mov
fwait
aaa
xor
sti
outsb
jecxz
addr16
jecxz
or
mov
ljmp
push
fcoml
push
out
ret
mov
pop
cmc
fbstp
jmp
imulb
jns
sub
cmpsb
sbb
in
pop
pop
mov
dec
jg
push
or
lds
int3
outsl
inc
adc
repnz
xor
push
push
push
sahf
mov
mov
jne
xchg
push
ds
iret
addr16
xrelease
xchg
sahf
nop
mov
fwait
das
stc
movsb
outsl
loop
sbb
inc
loop
jmp
push
movsl
cli
inc
aam
xor
das
add
fsubrs
popa
sbb
shrb
sub
pop
jle
lock
push
rcrl
jno
pop
cli
fstpl
adc
cmp
movsl
adc
push
push
mov
inc
ja
xor
fsubp
adc
adc
in
or
add
hlt
nop
mov
aas
push
je
mov
push
push
mov
sbb
scas
movsb
jle
xor
cwtl
fwait
xor
xchg
lods
adc
pop
hlt
fiadds
inc
dec
lcall
push
add
aam
fidivrs
xchg
push
jg
and
fimull
xchg
and
iret
adc
inc
cmpsb
adc
mul
daa
jl
and
push
shrb
stc
rdtsc
pop
loope
fwait
mov
mov
push
popa
adcl
or
mov
call
cmp
cld
jge
ret
rclb
mov
scas
fisttpl
add
inc
notb
into
shr
testl
mov
add
add
in
mov
jle
dec
shlb
mov
mov
imul
mov
and
filds
les
mov
sub
dec
hlt
fcmovnbe
sbb
addr16
loope
pop
and
call
push
pop
lret
lods
bound
dec
xchg
inc
xor
add
fldt
divb
fwait
and
cmp
inc
fbstp
sub
xor
pop
rcll
or
jecxz
jle
jle
iret
in
movsl
jg
or
mov
test
mov
mov
mov
xor
icebp
or
pop
test
pop
imul
and
jo
xchg
sbb
ret
test
dec
push
imul
fnsave
pop
adc
in
cmpl
add
add
sbbb
push
rclb
mov
lret
test
fadds
xor
aad
cmp
xchg
xlat
pop
pop
repnz
shl
movsb
add
std
and
jae
in
push
scas
cmp
add
icebp
cltd
clc
sahf
in
mov
imul
ja
or
lret
push
xchg
push
out
rol
or
xor
lcall
jbe
mov
lods
cs
je
cltd
scas
push
xor
adc
shlb
mov
ret
gs
sbb
das
cmp
rolb
dec
inc
pop
inc
pop
pop
dec
and
cmpsl
js
mov
sbbl
loope
adc
test
in
mov
xchg
jp
jbe
gs
out
xor
mov
js
cmpsl
xor
imul
push
and
xlat
sub
pop
add
stos
pop
push
xchg
adc
repz
icebp
jo
lcall
icebp
inc
inc
xor
lret
les
cmpsb
loop
adc
xchg
xor
or
and
jecxz
dec
or
in
sub
xchg
or
xchg
stc
jbe
in
cmpsl
hlt
sub
pop
arpl
popa
inc
nop
push
in
mov
xor
cli
sub
repz
inc
pop
aam
movsb
ret
add
je
test
sub
mov
inc
sbb
stos
ds
mov
push
push
cmpsl
repnz
sub
xor
sti
daa
clc
sar
aam
push
cmpsl
test
jmp
icebp
cmpsb
nop
xlat
and
fmul
das
daa
adc
xor
adc
lock
fnstcw
aaa
sti
repz
xchg
cmpb
push
test
push
push
imul
fmul
mov
int
or
cmpsl
pop
aaa
inc
adc
jno
sub
xchg
popf
cmp
sbbl
cmp
and
das
out
fnstcw
cmc
xor
rolb
ror
lods
clc
push
movsb
pop
mov
mov
hlt
fidivrl
dec
mov
cmp
jmp
push
jle
push
inc
daa
lret
mov
loopne
xor
in
sbb
movsb
adc
rorb
push
push
push
jecxz
arpl
jle
out
stos
fcompl
xor
mov
fidivrs
lcall
xor
loopne
and
jne
adc
fs
mov
mov
mov
jnp
jle
xchg
imulb
inc
push
pop
repz
push
cmp
stos
or
lret
je
or
aaa
in
loop
ljmp
mov
loop
int
test
mov
mov
mov
gs
sbb
pop
cmc
jne
rol
cmovge
xor
in
test
es
dec
pop
dec
js
loopne
dec
jmp
sub
pop
loopne
jnp
pop
test
and
or
xchg
ja
or
addr16
cmp
fnstcw
dec
cmc
push
lret
scas
push
lcall
je
mov
outsb
add
push
xor
or
jbe
dec
out
lods
sbb
dec
out
jle
mov
push
pop
popa
add
pop
mov
shll
loop
sub
mov
and
out
cmp
mov
add
sub
cmp
out
ficoms
mov
das
push
jne,pn
sbb
loop
aas
nop
scas
sub
sub
push
jecxz
into
mov
ret
mov
lock
push
pop
mov
hlt
fistl
scas
xchg
mov
sbbb
cli
pop
inc
jl
aam
enter
xchg
pop
sbb
loop
loopne
call
lea
inc
pop
ret
push
mull
xchg
and
sub
push
xor
or
xor
push
ja
pop
clc
mov
shlb
loope
sbb
es
sub
scas
pop
ja
add
imul
iret
xor
fists
mov
stos
cmpsl
iret
loope
ret
in
push
or
jb
pop
mov
imul
pop
ds
or
or
enter
out
icebp
cmp
pop
stos
xor
cmp
aam
insb
mov
pop
repz
mov
xor
bnd
cmpsb
dec
test
cmp
add
repnz
dec
mov
das
ds
repz
cmp
xchg
sbb
arpl
fisttpl
mov
push
and
xor
insb
sbb
loop
popf
push
cwtl
push
fcmovu
subb
mov
mov
cmpl
mov
cwtl
push
pop
ret
fs
fimull
or
mov
fstl
mov
fstpl
jg
hlt
lock
js
cmpsl
lods
xor
cmp
mov
std
or
fbstp
mov
or
adc
aas
andl
shrl
cmp
cli
push
xor
nop
jns
fs
dec
clc
int3
jg
jle
adc
das
jns
jge
xor
xor
dec
mov
xlat
nop
js
into
mov
mov
out
dec
fsubrs
mov
xchg
cmpsb
jno
pushf
lea
arpl
gs
adc
cmp
fsub
dec
add
lahf
ret
cmp
das
popf
mov
or
or
cmp
pop
in
add
mov
das
sbb
jmp
test
inc
call
add
push
fbstp
int3
sahf
lods
hlt
lcall
mov
popf
adc
push
cmpsl
cs
jbe
aam
lods
shl
popa
push
stos
es
adc
inc
popf
xor
jne
jmp
cmpsb
push
push
test
in
jne
xchg
sub
testb
add
loop
lods
push
mov
inc
dec
xchg
push
lods
mov
es
push
or
data16
and
pop
mov
out
addr16
sahf
jne
testl
sub
inc
sbb
xchg
adc
bound
push
loop
inc
enter
hlt
jnp
jb
jno
mov
mov
dec
mov
jne
push
sbb
mov
mov
in
pusha
jle
in
mov
pop
dec
les
push
sub
jae
dec
lret
mov
aad
aad
aad
loope
lock
jae
adc
popf
cli
mov
push
mov
xorb
dec
and
jo
in
cmpsb
jne
fs
imul
movsl
pop
push
subb
orb
xchg
shl
das
mov
push
clc
popf
sub
pop
lahf
shll
icebp
mov
outsb
shlb
add
addr16
test
shlb
xchg
test
stos
stos
test
mov
push
xor
clc
je
jnp
sub
and
cli
dec
add
jo
sti
xchg
js
sti
adc
xchg
push
inc
pop
inc
and
sub
sti
lahf
cli
mov
or
mov
dec
insl
jecxz
add
loop
pop
jge
aad
cmp
or
push
xor
in
stc
out
pop
dec
test
dec
xchg
inc
ja
jns
popa
xor
sbb
and
mov
pop
stos
xchg
push
lcall
adc
mov
push
imul
mov
std
push
js
or
adc
repnz
push
daa
xor
dec
push
mov
aas
aam
mov
mov
or
lods
jo
mov
mov
pop
test
std
popf
inc
into
lods
aaa
mov
adc
dec
adcl
adc
jbe
std
mov
mov
je
fistpl
cli
fcmovne
arpl
inc
mov
cmp
iret
push
cmp
push
xchg
cmp
mov
addr16
and
push
scas
fdivr
sbb
sarb
cmp
push
sbb
fisubl
sbb
adc
cmc
add
aad
add
mov
daa
loopne
aam
jnp
ja
cmpsl
icebp
mov
mov
out
shll
mov
shr
mov
sub
pop
sub
mov
mov
inc
jl
in
nop
mov
jl
std
inc
test
adc
inc
fistl
inc
fsincos
in
int
sbb
sbb
outsb
icebp
xchg
outsl
jnp
cmpsl
rolb
inc
js
inc
or
lcall
push
outsb
push
inc
je
or
aas
sub
jae
frstor
cmc
into
dec
mov
or
andb
mov
in
int
mov
nop
sbb
popa
jge
lods
adcl
push
sbb
push
scas
jns
xchg
push
out
dec
pop
xchg
arpl
repz
sub
ds
call
addr16
cwtl
out
maxps
jbe
ljmp
movsl
das
or
mov
jmp
jle
in
push
outsb
xchg
pushf
ja
ss
sbb
mov
lahf
xor
mov
inc
adc
mov
cmp
loope
ss
scas
adc
das
mov
xorl
and
movsb
pop
cmp
aam
in
sbb
inc
das
lods
outsb
xchg
popa
lods
lods
jae
xchg
sub
mov
or
inc
ds
mov
fiadds
mov
and
add
ret
cmp
pop
xchg
test
adc
mov
mov
in
dec
inc
xchg
mov
xchg
clc
int
lods
pusha
cbtw
cld
popf
or
cltd
jp
adc
dec
mov
cmp
push
shll
and
adc
adc
adc
pushf
mov
in
and
mov
dec
or
lods
ja
repz
das
fildll
inc
cmpsl
clc
mov
ds
dec
sahf
adc
and
jp
sahf
adc
mov
popf
fcmovu
adc
xchg
movsb
mov
test
aaa
nop
push
xor
loop
pop
insb
loopne
pop
mov
dec
in
daa
test
jb
cmp
daa
adc
xchg
iret
lock
add
shrl
cld
jno
xchg
movsl
ja
pusha
sub
xchg
ret
ja
rolb
mov
pop
test
xchg
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
add
xchg
jp
or
mov
sub
adc
add
adc
mov
mov
dec
mov
test
jnp
or
sbb
stos
aam
and
xor
scas
ljmp
xor
and
aas
cmpl
mov
sarl
push
and
xor
jle
pop
popa
pop
jno
cmpl
ror
loope
mov
add
adc
pop
xor
jg
dec
popa
pop
jno
cmpl
ror
loope
icebp
das
add
xor
jp
or
push
push
outsl
wrmsr
add
repnz
mov
loope
aam
push
jp
loop
fs
dec
dec
arpl
inc
sbb
aam
cli
shlb
sbb
std
fidivs
shl
inc
jmp
shr
xor
push
xchg
inc
sbbb
cmpl
push
inc
adc
pushf
pop
js
popa
rcll
int3
in
leave
push
mov
out
shrb
mov
stc
out
push
movsl
not
popl
scas
pop
imul
cmc
inc
rcr
mov
dec
negl
mov
roll
dec
pop
pop
ficomps
xor
lret
push
add
sbb
mov
icebp
xadd
sbb
jmp
jmp
and
inc
jg
dec
popa
pop
lock
ror
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
sbb
test
shl
mov
lcall
js
adc
jnp
sbb
xor
sbb
aas
lock
hlt
sti
xlat
mov
lods
fwait
popf
iret
mov
push
and
or
pop
aaa
inc
push
fld
xchg
fldlg2
sarl
ror
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
jno
cmpl
ror
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
jno
cmpl
dec
jbe
or
inc
add
push
push
dec
or
pslld
adc
add
test
add
btc
repz
sub
xchg
imul
mov
and
inc
mov
mov
sub
out
aam
loop
cli
xor
sbb
and
inc
jg
lds
xchg
push
pusha
dec
movsl
fdivr
jno
mov
icebp
cs
cltd
jne
aaa
xchg
stos
negl
shrb
aaa
out
pop
xchg
push
mov
xchg
inc
mov
push
data16
inc
pop
fistpl
in
fidivrs
push
popa
mov
outsl
std
insl
xor
cwtl
push
xor
mov
inc
and
push
fisttpll
jge
data16
dec
cmpsl
popl
inc
ficomps
push
adc
xchg
jl
fwait
scas
repz
jmp
mov
dec
dec
popf
xchg
pop
shll
sarl
dec
dec
dec
pop
out
mov
pop
sbb
mov
mul
mov
movsl
mov
xor
idiv
push
je
mov
xchg
or
mov
and
sbb
add
insb
shlb
jle
test
loop
xchg
mov
cmp
mov
mov
icebp
in
and
aaa
pop
jnp
cmp
enter
cwtl
repnz
mov
xchg
shl
add
push
jo
lock
imul
add
fldenv
ret
xchg
sub
jl
mov
rorl
xor
repz
fcmovbe
inc
data16
xchg
sbb
inc
jmp
push
mov
ss
fisubl
sbb
and
aaa
clc
xor
or
inc
mov
pop
add
pop
repnz
out
jle
jg
dec
stos
dec
fcomi
xor
dec
fwait
adc
and
movsb
xor
daa
out
sahf
rorb
adc
push
sub
sahf
aas
push
jnp
xorl
cbtw
aas
addl
and
pushf
imul
push
sbb
test
push
jnp
adcb
sbb
xor
pushf
sub
adc
sub
int
daa
jecxz
mov
push
pop
leave
sbb
inc
mov
outsl
xchg
lret
rdtsc
stos
sub
cmp
enter
jbe
lods
int3
jmp
lods
leave
add
push
in
int3
cmp
or
fsubrs
out
test
fs
dec
sbb
call
cmp
jo
into
mov
jmp
jae
jecxz
jns
dec
mov
imul
xor
pop
repnz
jl
in
jno
jb
jae
push
sub
testl
in
cwtl
ja
aam
movsl
loope
jl
inc
js
jae
jge
add
iret
inc
and
jl
mov
dec
aaa
push
adc
loopne
in
fstps
fsubs
or
adc
jo
lods
stos
pop
cmp
lods
and
pop
rclb
jg
and
fisttps
js
lret
mov
xor
cli
mov
xchg
jle
hlt
push
adc
mov
pop
aas
jbe
iret
jmp
adc
jecxz
popa
test
adc
je
lahf
xchg
in
out
mov
and
lahf
push
lock
jbe
dec
mov
fcmovnb
cltd
leave
sbbl
pop
stc
mov
inc
shrb
jmp
mov
adc
sub
push
mov
js
adc
imul
add
sbb
lahf
decl
jecxz
sbb
mov
xor
pop
insb
mov
pop
dec
lahf
test
ja
enter
jp
sub
xorb
scas
arpl
stc
mov
cmp
mul
loopne
xchg
dec
inc
jle
push
add
ret
dec
xor
mov
sbbl
cmc
sbb
or
ss
mov
jae
je
mov
sub
subb
pop
js
dec
inc
mov
insb
and
stos
iret
mov
push
mov
icebp
test
and
ret
pop
mov
lcall
ret
int
ret
sahf
push
xchg
cli
xchg
push
and
mov
int
pop
and
daa
dec
adc
outsl
out
test
xchg
or
dec
jp
and
and
test
adc
jge
mov
and
in
pop
pop
imul
and
sub
test
adc
cs
or
pop
ljmp
sbb
push
push
frstor
sub
dec
sbb
push
test
lcall
xor
pusha
jo
xchg
in
sbb
mov
pusha
push
xchg
test
push
inc
or
cmc
pushf
bound
adc
inc
push
into
fimull
mov
mov
jge
out
test
je
pop
adc
movsl
imul
xchg
popa
xchg
inc
jp
pop
jo
and
cwtl
mov
icebp
mov
inc
cld
clc
inc
ja
jb
jg
pusha
out
sub
cli
mov
inc
xor
push
in
or
imul
mov
mov
xorb
jl
aam
dec
jae
dec
int3
cmp
adc
inc
in
pop
add
jns
dec
stos
iret
xchg
xchg
rcrb
aam
nop
xchg
jecxz
ss
mov
bound
mov
pop
into
popf
adc
aam
cltd
jg
inc
imul
jns
in
les
mov
fsts
enter
enter
lahf
mov
dec
jge
roll
movsb
test
cmc
popa
xor
cli
movsb
fnstenv
sbb
mov
push
bsf
mov
gs
add
sub
ret
mov
sbb
push
push
jno
xchg
leave
fcmovnu
addr16
adc
shrb
fisttpll
add
adc
or
aas
inc
mov
xchg
jns
ret
test
test
xor
mov
test
int3
xor
mov
cli
movlps
mov
inc
out
adc
mov
mov
mov
sbb
dec
mov
mov
paddusb
add
loop
fwait
loop
outsb
dec
and
insl
movsb
xchg
fiadds
std
dec
insb
push
notl
test
xchg
pop
rcrl
cmp
in
std
and
aad
pop
and
pop
pop
mov
inc
xor
int
pop
int
push
xor
addl
out
leave
mov
gs
add
nop
mov
stos
and
inc
clts
inc
xor
es
dec
lea
and
cmp
and
push
sbb
push
pop
lret
mov
addr16
or
and
popf
addl
push
inc
xchg
mov
adc
test
addb
hlt
stc
pop
nop
and
es
shlb
and
cmp
sub
adc
jnp
push
popa
cli
xchg
adc
dec
pop
adcb
call
adc
mov
loope
stos
mov
ljmp
or
enter
sub
imul
mov
and
dec
stos
ljmp
mov
lea
push
mov
add
movsl
cmp
mov
inc
push
rcrl
cs
stos
imul
xor
andb
adc
jae
pop
lds
or
shrl
mov
xor
mov
and
xor
fstpt
xlat
repnz
add
insl
push
adc
adc
loop
dec
push
faddl
xor
cmp
stos
sbb
cmp
clc
sbb
jecxz
dec
jmp
fsts
js
mov
test
icebp
lods
cld
es
push
dec
push
nop
jne
sub
jb
repz
dec
scas
and
fsubrs
mov
leave
or
or
adc
sub
dec
lock
pushf
shrb
into
cmp
jl
or
nop
orl
das
or
xchg
lret
pop
pop
loopne
or
ret
mul
je
sub
imul
mov
loopnew
mov
lret
shlb
dec
mov
mov
mov
in
jg
cmp
je
insb
subb
repnz
shl
jne
aas
lock
in
jmp
mov
xchg
in
call
cwtl
inc
and
cmc
push
mov
and
cs
loop
icebp
rorb
push
push
sti
sbb
jne
imul
decb
scas
mov
repnz
sub
xor
ljmp
inc
adc
and
sbbb
cmp
mov
adc
pop
daa
xchg
dec
mov
sbb
mov
xchg
aad
xor
jb
add
ljmp
inc
sbb
inc
stos
pop
sbbl
sbb
jmp
lahf
sar
aas
scas
js
out
mov
pop
cmovno
sbb
shrl
xor
or
lret
js
add
mov
or
push
or
ja
jb
orb
xchg
roll
cmc
pop
sbbb
repz
xor
or
fst
sbb
inc
adc
notb
insb
addr16
mov
mov
or
out
loope
mov
test
jno
cltd
xchg
iret
sub
dec
ljmp
mov
scas
aas
mov
ljmp
or
mov
or
int3
dec
cmp
aaa
gs
shlb
das
jmp
daa
xor
dec
call
ret
addr16
mov
lea
mov
lret
ficomps
xchg
movsl
push
xor
out
add
pop
and
dec
aas
jbe
push
aaa
pop
mov
mov
lahf
js
imul
sbb
dec
mov
push
enter
sub
or
int3
fsubs
lcall
fs
jns
or
push
fldt
sbb
in
push
std
xchg
aam
add
jmp
ss
dec
and
notl
movsb
testb
ja
mov
repz
and
xchg
push
push
push
xor
cmpsl
shll
std
dec
cmpl
les
out
pop
shlb
lea
dec
dec
jp
inc
dec
ret
cmp
adc
push
fisubs
loop
adcb
jp
jmp
in
test
lods
addr16
dec
dec
push
sub
fimull
fdivrs
mov
ds
adcb
sub
jb
add
or
cltd
sub
into
in
add
pop
scas
mov
jl
cld
add
sbb
nop
mov
mov
jbe
push
adc
outsl
push
and
jmp
pop
popf
dec
sbb
hlt
pop
test
sub
icebp
jle
sub
dec
lahf
adc
jbe
aas
aaa
inc
pop
out
data16
pop
xor
fiaddl
mov
cli
push
inc
add
cmp
sti
outsl
arpl
negl
js
jno
sbb
rorb
push
out
int
adc
mov
testb
push
dec
jge
int
bound
jecxz
lret
xor
push
adc
xchg
mov
inc
idiv
mov
shrl
mov
pop
insb
xchg
iret
lock
in
jno
xor
xchg
cltd
negb
jo
inc
jne
aaa
and
mov
loope
jmp
popf
push
outsl
cltd
mov
xchg
fs
out
cmpsl
mov
pop
ds
adc
cmc
or
addr16
das
in
inc
xchg
push
inc
call
push
push
insl
mov
sahf
stc
dec
int3
sbb
jne
sub
mov
js
pop
les
rcll
jg
cmc
in
xchg
pop
movsl
inc
fnsave
lahf
pop
daa
leave
ds
andnps
in
and
sbb
test
fidivl
dec
and
imul
loopne
cmp
or
pop
cld
jle
popf
push
push
dec
mov
out
imul
jnp
ret
popf
imul
lods
dec
jmp
inc
and
lret
enter
push
mov
aaa
xchg
jle,pn
imul
popf
std
loop
pop
imul
push
repz
adc
mov
sub
push
je
push
std
xchg
cmpsb
imul
push
test
jns
sti
faddl
jb
int
pop
adc
mov
outsb
sbb
xchg
arpl
push
lahf
adc
dec
ss
rcrl
scas
cltd
sub
fdivrs
xor
xchg
sahf
xchg
test
rorl
and
in
dec
test
je
test
lcall
mov
clc
xchg
cli
xchg
xchg
xchg
pop
std
int3
mov
cs
ficomps
add
push
jns
movsl
popa
pop
in
mov
iret
aam
jnp
cld
cli
sub
add
sub
cltd
addl
push
inc
jle
inc
gs
cld
mov
incl
mov
sahf
int
jne
shll
mov
push
add
popf
xor
push
jns
jns
jbe
ficomps
cmp
xor
inc
lsl
bound
mov
incl
outsl
in
ja
dec
out
stos
pushf
dec
lcall
jns
cmp
sbb
adc
jns
std
push
aas
and
ljmp
inc
xor
jnp
js
mov
xchg
cmpsb
cld
jp
and
adc
rclb
xchg
xchg
daa
mov
mov
mov
add
and
push
pop
int3
subb
inc
inc
shrl
push
jno
aas
dec
inc
cmp
std
xchg
cmp
add
mov
test
icebp
icebp
inc
loop
sub
fs
push
push
mov
in
daa
and
or
cli
insl
movsl
sbb
mov
push
dec
mov
jb
jo
lret
or
lahf
aam
cs
pop
add
outsb
fwait
test
dec
jnp
hlt
cmp
lods
mov
pop
push
mov
sub
or
loop
imul
adc
jg
mov
push
repnz
mov
loopne
es
inc
jo
adc
loopne
inc
or
mov
mov
fs
and
cmp
add
insl
add
icebp
movd
mov
imul
inc
xor
push
cmp
sub
inc
inc
sub
push
das
mov
hlt
xlat
mov
or
xchg
nop
inc
add
lock
or
cmpsb
adc
daa
add
insl
pushf
cmc
mov
mov
push
sbb
in
test
mov
aam
mov
sti
scas
cmp
fwait
stos
push
in
rcrl
mov
mov
fldenv
mov
int
cwtl
aad
icebp
cmpsb
fs
xchg
loope
pop
xor
or
enter
test
bound
imul
dec
std
mov
lcall
outsb
addr16
scas
push
inc
aam
pushf
or
aaa
rorb
pop
cmp
fadd
leave
mov
movsb
inc
aaa
stos
imul
je
addr16
mov
jl
outsl
out
sbb
fstps
jmp
xchg
and
imul
ljmp
cmc
outsl
cli
in
jns
sbb
lods
outsb
inc
test
xor
mov
pusha
adc
xchg
stos
cmpb
add
lds
imul
mov
mov
icebp
push
adc
repnz
popa
repnz
inc
mov
push
cmpl
sub
sub
out
and
dec
insb
testb
or
jp
mov
fldenv
mov
or
jae
jge
fdivs
mov
xor
or
lods
scas
hlt
sub
add
mov
aas
push
in
xchg
sbb
call
leave
xchg
ficomps
sbb
imul
add
push
xlat
xor
shlb
mov
mov
scas
mov
rcl
testl
sahf
adc
pop
or
jge
xorl
cltd
iret
test
test
cmp
lret
sti
push
outsl
addb
dec
popa
adc
popf
cwtl
testl
out
daa
enter
and
xor
std
adc
push
mov
clc
inc
popf
mov
cli
pop
ret
in
xchg
fisttpll
enter
ljmp
cmc
mov
orb
lahf
lods
loop
arpl
lret
mov
xchg
dec
out
mov
fcmovnb
and
and
mov
mov
ret
pop
push
testl
fwait
or
xchg
repnz
dec
mov
shl
adc
popa
sbb
dec
popf
pop
or
jo
stc
nop
neg
outsb
bound
cmp
cmpb
andl
cmp
popl
mov
loope
cmp
cwtl
lret
sbb
push
push
sbb
xchg
sbb
jecxz
ja
imul
cmpl
jbe
cwtl
into
lods
xor
sbb
loop
repnz
clc
xchg
add
cs
into
imul
mov
xor
pushf
shll
jl
les
test
and
lcall
call
cmpsb
lods
lahf
mov
jne
cmpsl
aas
jecxz
bound
mov
jmp
out
dec
mov
ret
push
dec
dec
push
lret
test
enter
fidivrs
push
rcl
inc
repz
mov
dec
pop
imulb
push
pop
add
push
fcompl
xchg
aas
add
mov
xchg
test
add
jbe
js
pop
sub
fwait
mov
lahf
ds
in
insb
out
pop
mov
inc
and
mov
ljmp
or
mov
ss
fwait
mov
icebp
insl
imul
adc
lcall
jb
es
jge
jmp
fisubl
js
mov
xor
mov
lds
mov
lcall
dec
cmp
in
pop
dec
push
push
pop
fwait
sarb
pop
mov
xor
or
xor
jnp
out
mov
les
addl
xchg
xor
stos
cmp
shll
lods
dec
inc
jle
cwtl
push
cmp
outsb
je
push
cwtl
push
cmpsb
jp
mov
fistps
stc
mov
inc
jno
push
add
jl
enter
inc
cwtl
fcmove
sti
adc
sti
dec
jno
int
fbld
sub
cmp
xlat
test
mov
pop
jne
and
xchg
pop
and
adc
stc
push
push
adc
sbbb
jo
add
lock
insb
dec
or
add
mov
idivl
cld
adcl
and
cmpsb
pop
xlat
mov
ja
loope
popf
push
lods
dec
dec
mov
out
push
rorl
add
aad
addr16
jp
lcall
es
mov
sub
adc
out
in
pop
xor
sbb
pop
test
in
leave
ljmp
and
aas
sub
lret
outsl
subl
outsb
push
jns
xor
clc
fstl
cmpsb
add
jnp
in
loopne
push
cmp
adc
ret
push
clc
outsl
push
negl
movsb
cs
sbb
inc
mov
das
lock
loope
jb
cwtl
mov
jnp
int
add
cmpsb
mov
and
loope
gs
imul
pop
test
jae
das
test
int3
adc
out
dec
enter
mov
testl
mov
sub
adc
test
mov
add
jbe
cmpsb
js
mov
loop
inc
xchg
cli
jne
gs
cmp
dec
or
fisttps
addr16
inc
fstpt
lcall
call
jbe
decb
or
popa
jo
pop
decl
mov
pop
jb
or
mov
push
std
jb
jne
mov
push
dec
mov
jb
loope
scas
roll
leave
pop
cs
xchg
push
pusha
out
cmp
mov
push
sbb
lods
xchg
pop
or
call
xchg
xchg
imul
clc
ljmp
stos
xchg
jo
mov
inc
sahf
fstps
lock
and
fcom
jl
sbb
imul
pusha
push
add
cmp
jno
notb
add
mov
shll
adc
pop
in
push
shlb
inc
test
jb
pop
js
testl
idiv
fucomp
push
xor
sahf
push
xchg
subb
lret
std
mov
dec
adc
push
xlat
lahf
shrb
xchg
sbb
insl
mov
dec
mov
mov
scas
jno
lods
ret
jecxz
daa
mov
jmp
xchg
jb
mov
jp
repnz
pop
cmp
mov
lock
test
cmp
dec
leave
dec
or
cld
and
rorl
lret
xor
ljmp
and
inc
repnz
addr16
fiaddl
lds
pop
inc
ja
fistps
sub
scas
test
xor
lret
xor
xor
mov
mov
aaa
das
push
mov
add
fsub
clc
popa
jnp
aam
mov
push
pop
sub
test
cmp
pop
push
dec
and
arpl
cld
enter
out
les
xchg
sub
sub
cltd
mov
shll
push
addr16
faddl
fwait
or
les
and
pop
mov
push
aaa
pop
mov
fadds
mov
call
push
mov
test
push
out
lock
add
push
mov
jb
shrb
xchg
test
mov
lcall
imul
sub
stc
mov
add
fbld
pop
out
add
fists
enter
ds
push
pop
bound
repz
sbb
call
iret
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
jno
cmpl
ror
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
jno
cmpl
ror
loope
icebp
das
add
adc
and
xor
jg
dec
popa
pop
jno
cmpl
ror
loope
icebp
das
add
mov
sbb
imull
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
nop
push
les
jo
add
bound
mov
xor
loopne
lock
push
nop
test
and
push
test
jo
add
adc
and
xor
rclb
cmpl
inc
mov
xor
rcrb
in
mov
xor
movsb
adc
daa
mov
push
jmp
loop
hlt
push
in
add
rcrb
add
adc
xchg
jge
lds
das
lods
xchg
lods
inc
loopne
cmc
pop
rcll
ss
clc
gs
or
jg
int3
sbb
cld
adc
push
leave
cmp
sub
mov
cmc
xor
aad
push
xchg
cmp
rclb
fbstp
imul
lret
push
and
mov
inc
pop
jns
dec
in
pop
cld
out
lds
aaa
push
push
loopne
mov
lds
nop
push
pop
daa
mov
jnp
rorl
filds
push
imul
ret
add
sbb
movsb
pusha
shlb
aam
les
hlt
xchg
jbe
adc
lods
xchg
rcrb
push
mov
sub
enter
test
rclb
test
sub
add
or
adc
adc
imul
xorb
mov
sbb
inc
leave
adc
pop
sub
cmp
add
and
push
cwtl
adc
and
xor
rclb
loopne
lock
push
nop
inc
mov
xchg
push
test
jo
add
adc
and
xor
rclb
loopne
lock
push
nop
inc
mov
xchg
not
mov
mov
daa
fdivs
xchg
popf
mov
dec
push
dec
rcll
jnp
sahf
fsubs
les
addb
sbb
pop
andb
xor
imul
jns
insb
lret
jo
cli
push
lock
in
in
outsb
push
pop
jb
xchg
and
ss
mov
and
xor
push
pop
inc
jne
push
test
push
out
adc
je
nop
in
and
pop
addb
push
cmp
repz
pop
xchg
roll
data16
pop
stc
push
sub
es
adc
pop
adc
mov
stc
lock
dec
xor
and
mov
xor
lock
push
sub
mov
jbe
dec
adc
ss
and
int3
mov
push
mov
cmp
dec
test
adc
les
int3
or
fnstsw
lods
push
stos
mov
sub
sub
or
cli
fistl
outsl
loopne
cmc
lcall
xor
push
xor
pop
fsubl
movsb
movsl
xor
cwtl
pop
les
mov
bound
ret
and
aam
dec
aad
gs
sub
std
sub
mov
push
movsb
out
sbb
aad
add
or
inc
add
movsb
fstpt
push
lret
lods
pushf
adc
pop
test
jne
xchg
cmpsb
movsb
test
popa
cmp
and
mov
lods
mov
jb
cmp
sub
repnz
mov
pusha
jecxz
jmp
outsl
outsb
mov
sub
iret
push
xchg
insb
push
push
fcmovbe
fmul
xchg
outsl
lods
mov
repz
ja
mov
dec
xor
xor
mov
mov
add
pop
push
test
mov
loope
or
mov
js
std
sbb
xchg
hlt
sti
das
pop
and
adc
inc
stos
loope
push
mov
mov
jmp
sti
mov
stos
jbe
jnp
movsl
divl
in
adc
in
jecxz
mov
mov
stos
sbb
out
mov
mov
push
xor
mov
inc
adcb
xor
mov
mov
push
rcll
out
es
push
dec
and
aaa
arpl
pop
push
bnd
push
daa
in
push
xorb
sahf
inc
xor
jne
cmp
sub
test
xor
cwtl
jae
int
push
ret
mov
cmp
pop
notb
loopne
adc
inc
cmp
lcall
sub
in
int
sbb
xchg
into
sub
jmp
outsb
add
cld
ret
mov
js
lds
mov
inc
lret
das
stos
mov
scas
nop
testb
dec
je
mov
inc
xor
mov
ljmp
xchg
incb
push
ja
test
cmpb
jmp
aas
sbb
pop
je
nop
xchg
cmp
gs
out
adc
mov
mov
movsb
mov
ljmp
mov
roll
dec
out
arpl
dec
jmp
shlb
cld
movsb
into
xor
pop
pop
xlat
loop
in
adc
mov
cltd
lret
ret
add
inc
dec
push
rorl
mov
jns
mov
jnp
mov
mov
aad
and
sub
mov
ret
adc
push
lret
inc
mov
loop
aam
jg
adc
les
inc
pop
shll
std
das
bnd
adc
add
imul
push
sahf
nop
xor
pushf
xchg
inc
xchg
insb
pop
ss
push
and
call
jp
xor
jle
rcrl
lods
push
or
mov
or
icebp
mov
in
fwait
mov
add
pop
mov
pop
roll
dec
xchg
mov
push
mov
mov
in
lret
push
ret
jbe
out
jns
lahf
gs
int3
and
cmove
int
leave
and
aad
add
cmpsb
std
or
out
cltd
mov
jmp
les
sub
xor
and
xchg
mov
pop
shrb
xor
add
decl
mov
les
mov
dec
mov
inc
cmp
xor
jno
or
mov
add
es
sbb
movsb
jae
sub
inc
mov
fcompl
decb
inc
jle
mov
mov
push
subl
push
push
sub
aaa
sub
pop
dec
imul
mov
cmp
push
pop
into
aas
out
roll
cmp
cmp
add
mov
sarb
xor
insb
cmc
lods
pop
test
in
jnp
fstps
add
rcpps
add
mov
and
inc
in
sub
out
in
dec
int
inc
popa
sub
sbb
leave
cli
lock
pop
mov
and
add
sbb
insl
out
dec
cmpsl
and
jae
daa
inc
aaa
mov
daa
inc
fcmovb
fwait
jmp
push
dec
insb
adc
cmpsb
rcr
pop
and
in
fmul
lahf
out
and
mov
scas
cmpl
fnstsw
icebp
jge
cmp
jns
mov
xchg
out
loop
and
stc
pop
jbe
jp
and
test
cwtl
xchg
push
dec
sub
jno
testl
xchg
mov
or
mov
mov
add
add
fs
outsl
xlat
push
insb
cmp
mov
dec
out
push
popa
pushf
jp
sti
dec
dec
popf
cmp
subl
jp
cltd
movsl
shll
jae
out
outsl
dec
pop
xor
ret
imul
loop
mov
inc
jne
ja
cmp
and
outsl
fwait
mov
stos
data16
cmp
sub
out
imul
jmp
xchg
hlt
les
fmull
shrl
int
mov
pushf
and
loop
pusha
mov
mov
pop
xchg
gs
sbb
cwtl
addl
movsb
flds
mov
insb
inc
in
fwait
sbb
sbb
out
movsl
enter
adc
mov
clc
ljmp
sub
jne
jno
mov
fucomi
or
test
xor
mov
push
pusha
or
paddsw
jge
jbe
popa
mov
push
pop
push
call
sub
mov
cli
rolb
test
rcll
in
push
xlat
lret
arpl
jle
pusha
xchg
rcll
mov
sub
mov
pop
and
je
lods
adc
push
sbb
xchg
arpl
addr16
stos
icebp
lret
mov
clc
std
inc
dec
mov
scas
ss
imul
sub
sarl
push
fs
inc
or
lret
scas
add
in
push
push
xchg
loopne
inc
icebp
xor
mov
mov
sub
xor
adc
pop
iret
movsl
xchg
pop
divb
push
push
fwait
out
ljmp
daa
mov
push
mov
rep
loopne
mov
pusha
imul
lock
int
sarl
add
or
cmc
jp
mov
call
sbb
aad
mov
sub
inc
lds
jg
pop
xchg
xchg
xchg
divb
stc
cltd
cmp
cli
pop
jle
mov
dec
sub
jmp
fcomps
aaa
mov
inc
lock
les
xor
push
mov
pop
jle
cwtl
dec
and
out
push
test
jnp
push
or
bound
roll
jp
loopne
repz
data16
push
lea
out
lock
mov
mov
ror
add
cli
and
inc
sbb
sbb
xor
pusha
mov
sub
stos
push
xchg
add
push
div
dec
movsl
rorb
mov
mov
idivb
cs
pop
pop
aas
test
push
sub
mov
adc
subb
aaa
fwait
mov
sub
imul
popa
push
js
insb
jae
add
aas
pop
add
nop
mov
fwait
enter
adc
out
or
xor
ret
jnp
xor
jl
shr
lds
mov
jns
pop
data16
jno
ljmp
faddl
fnclex
xchg
test
data16
jbe
repnz
movsb
jecxz
sub
lret
mov
or
xchg
jecxz
in
ss
out
mov
adc
pusha
push
push
mov
cmc
xor
loope
sbb
inc
inc
sti
subl
add
ret
add
push
movsl
ss
mov
adc
mov
test
jbe
imul
int3
loop
add
test
sbb
dec
jmp
stc
xchg
fucompp
xchg
cmpsb
and
stos
or
lea
sti
or
xchg
roll
bound
and
cli
dec
das
or
into
lss
lea
outsl
jne
nop
cmp
xchg
mov
jae
ljmp
into
sti
inc
data16
out
test
lods
pop
push
test
out
lcall
addb
pop
jmp
psubq
mov
mov
push
int3
je
pop
cmp
inc
mov
dec
xor
cwtl
inc
xor
enter
inc
nop
mov
xlat
jne
movsb
in
xor
push
imul
outsb
gs
movsl
insl
nop
add
pop
movsb
mov
dec
jne
mov
das
dec
loope
pop
xchg
repnz
mov
mov
stos
pop
inc
adc
cmp
enter
movsb
cmp
and
xor
push
lods
sbb
sub
jnp
test
dec
push
mov
add
fistps
adc
and
pop
bound
mov
push
mov
cli
imul
sbb
dec
jnp
cmc
jno
dec
xor
cmp
push
fwait
shrb
jne
dec
cmpsl
mov
rclb
pop
jle
jmp
sub
ds
data16
sahf
inc
and
hlt
lret
cmp
pop
pop
and
cmp
sbb
cmp
sbb
iret
psubw
jg
dec
scas
push
rolb
inc
jmp
imul
dec
mov
push
mov
aaa
test
dec
insl
xchg
ret
push
inc
cmpsl
inc
add
xchg
fwait
mov
cli
jge
sub
fsts
adc
sub
or
push
rclb
test
jmp
leave
loopne
inc
jb
push
hlt
sti
nop
pop
jb
int3
adcb
lcall
repnz
ror
les
jne
dec
roll
sub
add
cmpsb
add
mov
mov
adc
aam
pushf
xchg
jl
jmp
repnz
aad
inc
or
add
das
jg
bound
sbb
mov
popf
std
adc
mov
ret
mov
mov
xlat
mov
sub
pop
lret
test
mov
cld
inc
into
dec
adc
push
jae
sahf
into
popa
movsl
jmp
pop
lcall
mov
add
lret
add
in
ds
in
sbb
xchg
pop
pop
xor
idivl
sub
cli
pop
aad
dec
jecxz
rcll
bound
inc
jl
out
scas
out
ja
int3
std
mov
sbb
and
aaa
xchg
push
mov
mov
adc
lret
add
scas
js
inc
push
std
in
xlat
or
push
call
or
jle
push
xlat
jns
outsb
mov
and
es
aaa
sbb
das
lds
push
adc
inc
mov
lret
aaa
cmpsl
mov
outsl
push
dec
sbb
adc
add
xor
cmp
xchg
hlt
mov
in
mov
mov
dec
fidivrl
cmp
pop
push
outsl
shrb
fisubs
pop
movsl
and
xor
in
jnp
not
or
jae
scas
pop
aad
fadd
mov
dec
sub
das
mov
push
add
dec
xchg
xchg
inc
cld
lea
flds
movswl
dec
mov
cmp
push
add
mov
shrb
fs
rol
inc
cmpsl
fcomip
mov
mov
jb
mov
imul
jle
push
sub
xor
mul
bound
lret
gs
mov
sahf
jb
adc
lods
mov
ret
aam
xchg
mov
scas
outsb
ss
divb
in
push
movsb
stos
inc
sar
es
rcr
sbbb
xchg
adc
cs
addb
shlb
inc
mov
ljmp
ret
lret
cmp
lock
cmc
test
sub
jmp
jnp
aad
push
shlb
hlt
test
or
pop
daa
arpl
jbe
arpl
dec
daa
sub
loop
mov
cs
jg
xchg
mov
sub
ret
enter
hlt
jnp
dec
andl
push
add
xor
sbb
mov
pop
lcall
data16
mov
and
sti
pop
sub
mov
pop
adc
jae
fisubrl
dec
or
add
loopne
stos
adc
xchg
lret
inc
popa
or
cmpsb
dec
outsb
test
sub
mov
sub
mov
das
and
nop
cmc
cmp
cltd
add
jo
jl
in
jmp
jge
add
out
in
and
in
out
xchg
push
xor
fsub
ja
iret
jp
jecxz
jae
dec
mov
jp
cmp
dec
pop
xor
out
xor
jge
imul
mov
int3
aam
mov
mov
aam
fadd
xchg
arpl
fs
mov
xchg
int
sar
dec
fwait
xchg
mov
movsb
cli
cbtw
push
sbb
push
pop
xor
push
shl
xor
mov
pusha
sbb
dec
inc
inc
xchg
xor
cmpsl
fidivrl
or
mov
es
inc
dec
mov
adc
pop
popa
fdivrl
jmp
xchg
scas
sbb
sbb
loop
rcr
lret
dec
in
test
xchg
fs
push
sub
int
cmp
scas
mov
or
cs
scas
outsl
enter
loopne
idivb
jp
mov
aam
sti
pop
lods
and
int
or
cmpsl
push
in
and
movsb
mov
js
jmp
out
por
pop
fcomip
cwtl
mov
arpl
sbb
lahf
or
dec
sub
xor
icebp
outsl
aad
test
das
cwtl
xor
notb
dec
push
xor
scas
jno
cmpsb
jne
jne
xor
les
je
out
and
pop
shll
push
mov
les
ja
mov
dec
mov
cwtl
push
add
xor
sbb
fsubl
mov
or
sbb
jecxz
or
sbb
mov
aaa
lret
pop
jl
aaa
mov
jnp
addr16
jae
sbb
outsb
out
fwait
in
mov
sbb
jecxz
sub
insb
decb
data16
je
sub
roll
leave
or
ret
ret
push
adc
cmp
std
and
outsb
mov
or
sub
jl
pop
xchg
in
fs
sahf
xor
push
sti
xchg
test
into
dec
rorl
repz
data16
daa
mov
mov
mov
xchg
inc
xchg
fstl
rorb
adc
mov
imul
xor
inc
dec
jb
jae
arpl
in
add
mov
adcb
pop
test
pop
ret
mov
jg
cmpsl
sbb
lahf
aad
mov
mov
push
jp
or
es
inc
lea
into
or
mull
mov
arpl
fwait
xorl
popl
mov
imul
sbb
pop
fidivrs
lcall
es
sbb
cmp
adcl
and
cmp
enter
dec
mov
fucompp
push
pop
jb
ds
sbb
lock
pusha
cmp
pushf
or
jbe
pop
xor
sbb
xlat
inc
ja
sbb
jb
mov
out
imul
insl
xchg
movsb
pop
nop
sub
lock
inc
or
pop
inc
lods
dec
rcrb
test
and
fs
xchg
pop
or
jmp
int
push
outsb
das
bound
add
pop
rcrb
sarb
mov
add
adc
mov
sub
cmp
push
push
pop
dec
out
shr
aas
inc
cmp
xchg
nop
and
scas
mov
fistpll
shrb
dec
lods
out
out
push
xor
or
outsb
gs
mov
push
out
insl
sbb
std
sub
movsl
or
mov
insl
pop
orl
jge
in
arpl
test
mov
ss
jbe
jbe
call
inc
xor
gs
mov
sbb
aas
cmp
cmp
and
inc
add
mov
mov
pop
cltd
out
les
call
gs
mov
sbb
fidivs
insb
clc
sbb
mov
mov
daa
cwtl
orl
nop
aad
xchg
pop
mov
leave
add
mov
push
loop
sub
sub
fwait
cmp
shrb
mov
jns
inc
or
sti
mov
jbe
je
dec
movsl
xchg
inc
not
or
ds
mov
pop
call
jne
pop
imul
push
jo
int
jl
lret
sub
mov
lds
pusha
pushf
dec
pop
pop
nop
cmp
cmpsl
jle
cltd
sbb
paddd
mov
jp
or
lcall
out
push
add
xchg
push
fwait
nop
add
push
jnp
dec
cmp
pushf
iret
add
sbb
push
icebp
inc
mov
mov
or
cmp
aas
test
hlt
subb
xchg
inc
mov
cmpsb
sarb
or
popa
pop
ret
xchg
stos
test
scas
adc
or
and
mov
jmp
cmp
les
rorb
filds
xor
xlat
mov
sbb
jge
add
pop
xchg
popf
mov
or
sbb
test
aas
das
or
push
xchg
push
es
or
mov
ret
pushf
int3
subl
pop
fisubrs
add
shll
mov
mov
jno
fisubs
lret
imul
inc
dec
push
jae
and
jg
mov
out
mov
ret
xchg
push
inc
cld
add
xlat
add
mov
imul
mov
jp
or
xchg
pop
jbe
mov
subl
mov
daa
inc
inc
and
in
sub
andb
mov
mov
add
xchg
andb
fistpl
or
mov
test
inc
es
adc
lret
lods
mov
mov
lret
add
in
ret
mov
out
mov
bnd
lret
inc
ja
imulb
adc
test
push
lret
cmc
sahf
mov
rcrl
test
push
inc
pop
add
repz
not
or
es
cmpsl
daa
imul
fnstsw
lods
xor
sbb
inc
and
adc
pop
push
fidivl
jo
xchg
not
xchg
mov
imul
daa
test
stc
mov
bound
ret
sti
inc
int3
loop
ljmp
aam
in
fdivs
and
and
fistps
rcr
fisttpl
mov
stos
jl
lods
in
rorb
fucomi
mov
sti
or
test
mov
call
mov
mov
and
loope
sbb
nop
iret
imul
das
iret
popl
fistpll
mov
dec
and
sub
out
insl
ror
movsb
sub
xchg
lods
hlt
and
mov
in
fsts
sub
adc
sarl
jmp
add
xor
dec
lret
and
sahf
pop
xlat
cmp
xchg
or
rorb
imul
jne
pop
enter
pop
push
xchg
dec
add
xchg
clc
mov
jae
inc
mov
rorb
add
daa
iret
pop
jg
pushf
cwtl
adc
xchg
mov
mov
outsl
dec
push
push
and
inc
mov
cmp
add
add
mov
mov
dec
rcr
mov
cmp
xor
lea
sbb
shrl
cli
sti
fdiv
sub
pop
and
lcall
jnp
mov
loop
movsb
outsb
push
mov
lcall
outsl
and
leave
xchg
aas
mov
call
pop
lock
push
fcmovu
lds
pushf
ljmp
sti
aam
sub
and
sbb
mov
ret
hlt
rcll
lahf
sub
aad
inc
not
jb
scas
rcll
ja
cwtl
xchg
out
test
adc
and
push
inc
adc
jecxz
jg
int
lret
test
popf
enter
mov
rclb
icebp
subb
fs
shl
jmp
cmp
and
inc
push
pop
loopne
inc
clc
xor
sub
jnp
andl
jbe
pop
jns
fsubrl
jnp
repz
ret
mov
test
insl
mov
iret
stos
lahf
sub
rcr
mov
pushf
addr16
push
addr16
addl
outsb
pop
popf
jno
push
xchg
int
inc
push
insl
or
cmp
jl
xor
pop
push
mov
pop
pop
adc
and
test
daa
mov
movsb
add
adc
and
xor
rclb
loopne
lock
push
nop
inc
mov
xchg
push
test
jo
add
adc
and
xor
rclb
loopne
lock
push
nop
inc
mov
nop
pusha
mov
lods
jo
nop
aam
scas
and
lock
adc
lock
mov
jo
pusha
cmp
in
aam
les
je
and
jmp
scas
dec
xor
push
imull
cmp
or
sbb
clc
mov
push
fcoms
enter
xor
mov
xchg
dec
jecxz
imulb
cs
ss
mov
inc
cwtl
push
mov
js
or
cmp
or
clc
mov
sbb
enter
test
cwtl
scas
mov
cmp
dec
jge
inc
mov
movsl
or
push
mov
mov
cltd
in
jg
dec
inc
inc
push
mov
or
mov
adcl
lret
popa
push
cmp
enter
xchg
jns
jge
arpl
les
pop
pop
jbe
es
push
das
xchg
movsb
out
xor
outsb
fs
dec
xchg
jns
push
call
arpl
dec
imul
enter
test
pop
push
ja
mov
imul
shl
sub
stc
pop
aaa
cltd
mov
push
or
out
jns
xchg
mov
out
test
mov
mov
pop
or
xchg
dec
arpl
or
fdivrs
mov
inc
cwtl
out
mov
push
xchg
call
popa
push
xchg
inc
call
or
add
sbb
testl
mov
xchg
dec
es
mov
mov
sub
and
sbb
xchg
pop
xchg
inc
mov
xchg
pop
push
mov
mov
and
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
ss
mov
inc
cwtl
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
repnz
sub
bound
movsl
data16
mov
mov
psllw
repnz
xor
ja
pop
xchg
xor
jle
dec
dec
aam
jmp
fstpt
inc
sub
pop
or
iret
rol
pop
add
dec
pop
pop
loope
clc
imul
mov
and
or
mov
test
dec
icebp
mov
daa
jo
cmpsl
cmp
shlb
fwait
adc
cmc
icebp
scas
andl
fstpt
daa
adc
sub
sahf
ja
sub
movsb
fwait
cmpsb
add
fcmove
pop
insb
jmp
and
test
mov
xchg
sub
mov
movsb
into
pop
in
lods
cwtl
adc
fsubrl
aas
and
mov
imul
jg
mov
lds
adc
mov
cmc
add
sub
addr16
shl
mov
push
dec
sub
xor
in
nop
or
dec
or
cmp
cmp
jo
in
mov
sub
jb
dec
test
pop
loope
mov
or
and
push
pushf
dec
rcl
push
fsubrl
fadd
jl
push
mov
and
fcmovnbe
sbb
imul
push
xchg
minps
arpl
mov
xchg
or
xchg
pop
jne
xor
xchg
sti
mov
jge
or
push
push
xchg
fcompl
pop
lret
xchg
sub
flds
or
push
cwtl
fucomp
lahf
into
inc
ja
in
pop
stos
and
sarl
out
mov
dec
adc
pop
aas
in
ret
push
js
faddp
mov
jg
insl
add
roll
imull
push
pop
and
jns
cmp
pop
push
sti
add
pop
or
nop
pop
fnstsw
rdtsc
inc
sti
inc
fadds
filds
dec
mov
pop
mov
mov
add
loop
ss
jmp
aam
inc
insb
sbb
cli
outsb
orl
mov
push
lods
push
xor
dec
jns
xchg
inc
or
insl
push
sbb
push
mov
popf
pop
shl
lcall
test
add
mov
outsl
sub
lcall
or
mov
mov
sbbl
inc
fsts
cmp
movl
in
pusha
cmp
sbb
xchg
mov
push
xor
std
mov
mov
outsb
and
daa
and
and
mov
cwtl
push
pop
lcall
add
xchg
adc
push
inc
inc
sbb
subb
js
test
mov
mov
stos
rcl
mov
dec
inc
cmp
sub
add
inc
sbb
cmp
in
pusha
dec
xor
fistpl
mov
lahf
in
movsl
mov
xchg
outsb
xchg
dec
inc
iret
pop
in
hlt
xor
xor
clc
xor
shl
mov
jmp
mov
insb
ljmp
push
lds
jb
mov
lock
xchg
push
sbb
int3
inc
scas
loopne
add
rorl
mov
fidivrs
outsl
std
int
mov
pop
lods
and
scas
lahf
mov
int
int3
mov
xchg
adc
inc
lahf
mov
cmp
cmp
int
xchg
test
push
test
xrelease
or
enter
in
push
movsl
cmp
cwtl
pop
push
hlt
insl
add
dec
mov
xor
mov
cld
cwtl
pop
loope
jbe
jl
test
hlt
jae
mov
es
dec
adc
nop
stos
sub
xchg
js
movsl
gs
popf
lods
les
mov
test
jmp
jg
pop
inc
fs
and
mov
mov
cli
call
fimuls
mov
push
ret
mov
pop
add
jne
mov
xlat
div
xchg
bnd
cli
aas
idivl
int3
mov
sar
mov
mov
ljmp
and
loop
inc
xchg
mov
ss
aaa
cmp
stos
mov
mov
and
hlt
aad
lret
fldenv
loope
sbb
out
ret
nop
fstp
out
xor
sbb
in
lcall
push
repnz
jbe
lds
lods
lds
sbb
ja
sbb
mov
mov
or
pop
and
lds
fiadds
in
sub
mov
inc
fildll
jno
push
sti
aaa
dec
adc
sub
inc
jg
inc
cli
stos
aaa
repz
lods
lds
int
jb
mov
in
jbe
jo
dec
mov
xorl
jne
int
popa
jge
xchg
fwait
and
and
outsl
cmp
nop
insb
xor
push
arpl
in
divb
cmp
sub
insb
cwtl
mov
stc
or
and
xor
popa
mov
imul
repz
jb
cmp
lret
stos
and
test
xor
insl
popf
mov
and
mov
adc
add
rclb
xlat
daa
mov
out
ss
gs
jne
mov
or
xor
das
lods
inc
jae
adc
push
fucom
jecxz
out
idivl
lret
jle
loopne
add
loopne
lods
add
and
sub
fcompl
sbb
outsb
mov
popf
sbb
pusha
or
add
jmp
enter
sub
test
cmp
adc
mov
mov
add
xor
xchg
repz
mov
fucom
push
jle
add
and
pop
std
lret
ret
leave
adc
add
mov
mov
cltd
data16
lds
sbbb
mov
and
lcall
and
jge
push
xor
popf
mov
sbb
imul
cmp
pop
push
dec
sbb
lock
fsubp
inc
shrb
decl
sbb
cmp
mov
jp
fstpt
jp
mov
and
adcb
dec
test
arpl
outsl
and
enter
aas
int3
ljmp
or
pop
popf
dec
xchg
xor
roll
sub
push
mov
loop
hlt
movsb
pop
sahf
push
test
mov
xor
popa
mov
and
orb
mov
ds
loopne
jnp
dec
cmp
jne
or
dec
aad
mov
test
adc
adc
mov
out
scas
mov
xor
arpl
jmp
inc
shll
stos
inc
scas
or
xchg
xchg
pop
jno
xchg
imul
jo
sbb
int3
imul
stos
mov
adc
add
aad
popf
and
sub
xchg
pusha
add
repz
fcomps
xlat
xchg
push
inc
push
out
fisubs
cmp
out
xor
inc
xor
clc
inc
push
add
int
jp
out
cmpb
leave
icebp
insb
push
andb
in
ret
rep
push
cmp
aad
scas
push
jge
mov
mov
sub
mov
pop
inc
imul
add
sub
mov
xor
jge
pusha
sub
repz
decl
scas
fstpl
rolb
sbb
or
rol
adc
dec
mov
push
mov
repz
inc
test
xchg
or
dec
stos
rol
push
je
push
add
add
jnp
cmp
or
mov
pop
xchg
xor
xchg
mov
cwtl
dec
sub
imul
shrl
loop
arpl
inc
mov
push
mov
bound
cmp
lds
adc
bt
push
jle
pop
clc
inc
stos
imul
mov
sub
push
pop
xor
shr
mov
pushf
add
mov
in
sbb
mov
stos
lcall
jg
stos
jg
mov
dec
fisubrl
xor
fistps
cmp
out
loope
or
out
adc
jge
ds
pop
fildl
jb
out
inc
xor
jo
lret
jmp
sub
sbb
and
arpl
in
outsb
fs
aad
lock
adc
xchg
sbb
pop
lret
mov
aas
inc
sbbl
adc
mov
dec
inc
sbb
lahf
sbb
cmp
jl
enter
out
hlt
sbb
lahf
or
pop
push
jno
outsl
int3
dec
jmp
outsb
mov
xor
push
mov
jo
pop
jns
dec
jmp
jmp
cmp
out
and
push
dec
cltd
jno
push
mov
mov
jp
pop
xor
push
pop
push
iret
jae
and
sbb
ror
mov
ljmp
pop
dec
je
dec
out
outsb
cmp
or
jl
cmpsl
adc
ljmp
aam
jo
loop
psrlw
xchg
dec
pop
stos
xchg
fxsave
mov
sbb
mov
inc
add
xchg
xor
jle
sub
xchg
xchg
jbe
in
je
in
aas
enter
add
sbb
sbb
mov
sbb
xor
dec
clc
stos
leave
gs
lcall
shl
insb
jmp
mov
jne
pop
es
mov
fmul
xchg
inc
push
xlat
inc
out
sbb
pop
jne
inc
xchg
pop
jno
cmp
add
test
mov
and
and
outsb
sub
fstps
fildll
mov
in
test
icebp
pop
fldl
fnstsw
in
mov
adc
and
xor
cltd
ret
and
mov
jmp
dec
inc
jmp
push
rcrl
dec
mov
pop
inc
loop
rolb
pop
test
fs
push
shll
in
fs
outsb
dec
pop
mov
scas
mov
dec
dec
scas
push
xchg
sbbl
or
and
or
into
adc
and
fwait
movsl
hlt
xor
addl
mov
sub
ss
cmp
inc
dec
popa
outsl
in
mov
mov
idivb
jecxz
out
fs
mov
movb
mov
dec
lret
add
jbe
shlb
test
lahf
push
jmp
aad
dec
arpl
inc
sahf
rcrl
out
fxch
ret
pop
subb
adc
mov
out
cltd
mov
fisttpl
pop
hlt
sarb
xor
inc
fisubs
sub
or
pop
sub
lock
xchg
dec
out
and
push
test
sbb
adc
and
jecxz
sbb
cmp
idivl
mov
cmp
mov
jl
in
adc
lods
push
gs
dec
push
xchg
and
add
xor
xchg
test
pop
ljmp
dec
add
sub
pop
fbstp
xor
dec
hlt
jecxz
pushaw
dec
jb
xor
inc
dec
lret
push
sbb
pop
jbe
clc
loopne
sbb
cwtl
sbb
lret
loopne
and
jne
ficoml
fs
jb
leave
ret
adc
mov
pop
cmp
jbe
cmovle
adc
mov
dec
es
inc
sub
in
xor
and
jg
xor
arpl
dec
pop
mov
pop
or
cmp
and
jmp
js
rcrb
cmpsl
lds
dec
test
insl
xchg
or
mov
mov
and
xor
add
xchg
add
addr16
data16
mov
add
push
lods
sbb
jnp
add
sub
ja
adc
sahf
xchg
mov
inc
or
ret
dec
clc
movsb
jo,pn
inc
or
jmp
dec
test
aam
or
pop
push
test
xor
cltd
jns
enter
fwait
rol
cltd
dec
mov
jnp
mov
fmulp
ljmp
outsl
in
lret
mov
mov
dec
add
into
sub
sbb
es
rcr
iret
mov
daa
scas
adc
sub
pop
and
dec
js
inc
mov
hlt
fcmovne
fidivs
mov
lret
mov
mov
mov
mov
inc
xor
dec
adcb
jge
mov
and
scas
fdivs
mov
xorl
pushf
adc
sbb
inc
fildll
jb
idivb
gs
sahf
jge
popf
cmc
test
daa
call
mov
pop
cmpsb
pop
cld
sbb
mov
cmp
test
shrb
movsl
inc
adc
stos
lcall
negb
dec
push
push
ss
dec
adc
xchg
jb
pusha
add
mov
adc
sub
scas
cmp
aaa
lds
cmp
jle
stc
xorl
movsl
dec
enter
data16
mov
in
cmp
or
mov
scas
std
movsl
mov
daa
push
leave
jge
push
sahf
cmp
out
lcall
pop
dec
jo
push
sbb
push
push
scas
jg
pushf
xchg
je
jl
sub
pop
jle
dec
ljmp
incb
sti
xchg
pop
inc
idivb
mov
or
pop
in
rsqrtps
push
pop
pop
mov
testl
xchg
into
in
fcoms
jge
xor
inc
lahf
mov
or
push
sarl
jl
sti
test
jnp
pusha
mov
ret
jb
dec
push
jge
dec
and
sbb
jp
push
jle
mov
in
fsubs
stos
xor
std
cs
cli
adc
mov
repz
adc
inc
into
mov
mov
and
mov
or
pushf
jp
aam
xchg
push
mov
rorl
pop
pop
adc
push
jnp
shr
sub
sub
lock
jbe
in
loop,pn
add
imul
mov
mov
push
mov
push
xchg
scas
mov
les
inc
xchg
jno
xor
lcall
insb
in
jae
cmp
in
andb
test
faddl
sub
andl
ret
lret
lods
sub
decb
cmp
iret
jp
xor
rclb
fwait
sbb
rcrb
call
xchg
shl
enter
int3
out
dec
andl
lret
icebp
xor
jb
loopne
dec
jne
mov
in
or
sbb
sarl
or
dec
sub
jmp
cwtl
ds
xor
das
clc
inc
loop
outsl
sub
dec
pop
imul
jecxz
daa
popf
push
cmp
and
sbbb
sti
cmp
fs
jmp
stos
sbb
das
loope
lret
dec
rclb
movsl
dec
pop
movsl
cmpsb
push
imul
sub
cwtl
lods
jne
sub
mov
and
ds
call
popf
mov
out
xor
push
or
xchg
test
xchg
dec
xchg
cs
jle
xchg
dec
arpl
and
adc
sti
mov
add
jecxz
ds
and
inc
cmp
jle
adc
fistps
xor
pushf
push
or
sub
fwait
cwtl
rcrl
insl
fimuls
test
iret
ds
jbe
mov
jne
push
xchg
stos
stos
movsb
js
or
pop
jne
sar
mov
pop
mov
enter
in
in
pop
sbb
and
lods
cmc
xchg
inc
int
mov
scas
leave
into
notb
rolb
jb
mov
ret
repnz
data16
and
xor
mov
sbb
sub
or
call
pop
mov
add
cmp
jge
jg
mov
mov
or
push
fs
jo
push
push
test
jl
sub
cld
cmpb
sbb
fdivl
adc
adc
add
dec
in
add
pop
or
movups
jmp
mov
cmpsb
add
rorl
lahf
adc
mov
pop
xor
pop
ret
push
out
mov
data16
and
out
addr16
xchg
imul
in
out
js
mov
push
es
orb
enter
les
dec
jae
enter
mov
fldcw
push
call
dec
mov
jecxz
cmp
pop
lcall
es
lock
mov
outsl
into
inc
push
add
sbb
loope
movsb
scas
lcall
cmpsl
sahf
add
vpsrld
in
and
lods
sub
pop
pop
adc
sti
push
test
dec
jo
outsb
cmp
int
rcll
nop
movsb
jecxz
mov
sar
hlt
push
sbb
mov
fcmovnu
ss
nop
fmull
or
cmpsl
cs
and
mov
xchg
rcl
fwait
test
cmp
rorl
sbb
nop
xchg
adc
fadds
cmp
pusha
std
cld
and
push
xor
mov
sbb
cmp
cmp
addr16
push
cmpsb
mov
or
xchg
inc
ret
in
sub
adc
fiaddl
insb
popf
inc
mov
lret
add
xchg
arpl
cwtl
sbb
fisubl
shl
fwait
in
in
mov
pop
push
out
call
int
loop
insl
std
inc
pop
into
in
sub
shll
movsl
fisubrl
jmp
lahf
inc
push
outsl
sbb
mov
leave
daa
pop
leave
mov
hlt
test
clc
outsl
cmc
push
or
cs
ret
inc
mov
inc
add
sub
iret
dec
cltd
lods
adc
pop
outsb
sub
test
out
sbb
add
rcrb
lahf
mov
pop
inc
nop
mov
xchg
jecxz
pop
and
or
outsb
push
pop
push
cmp
jecxz
push
std
mov
push
jmp
inc
adc
imul
cmp
cmp
mov
xchg
and
inc
dec
cs
ret
sbb
cwtl
xchg
push
dec
fwait
movsb
jo
iret
mov
scas
rorl
mov
ljmp
mov
lret
loop
jb
mov
imul
dec
into
inc
rclb
rorb
and
mov
loope
push
dec
lock
fsubl
dec
adc
cmp
jle
gs
rorl
pop
ja
nop
jae
mov
cmpsb
push
clc
adc
mul
jmp
xor
pop
push
shlb
fsub
push
hlt
pushf
jmp
jmp
es
push
dec
or
movsl
jmp
fldt
clc
cmp
sub
inc
sbbb
cmp
in
inc
mov
bound
or
sbb
loop
push
pop
rorb
mov
imul
jne
sti
and
pusha
fldenv
adc
aaa
pop
or
push
dec
xchg
lea
adc
push
xor
adc
sahf
cmp
inc
lcall
push
int
lods
cmc
sub
cltd
shll
jnp
repz
push
nop
addr16
mov
insb
fcmovu
sbb
xchg
mov
sbb
cli
fsubl
add
and
fsubrl
inc
push
aas
inc
xchg
lods
ds
ret
sub
out
xor
jo
je
jns
inc
or
add
and
adc
rorl
inc
imulb
cmp
cmpsb
out
iret
cmp
mov
rcll
popf
dec
fnsave
or
imul
cmp
mov
lahf
pop
lcall
mov
out
ret
mov
xor
into
inc
adc
jl
enter
cmp
cmp
xchg
ret
xor
je
call
sub
xor
add
and
cmp
aaa
sbb
mov
lahf
xor
push
or
into
ret
add
add
outsl
mov
dec
mov
aam
ds
xchg
pushf
push
xchg
cmpsl
rolb
stc
idivl
call
jns
cmp
or
mov
xchg
jg
xlat
aad
shr
mov
test
xchg
testb
jg
xchg
jecxz
int
adc
pop
inc
xor
shl
xor
ss
pop
or
fcomps
in
popf
jo
cmp
push
xor
mov
sub
adc
shrb
jmp
aaa
push
mov
jmp
dec
in
mov
ret
mov
adc
mov
jne
movb
sub
inc
mov
clc
mov
xchg
insb
fcoms
icebp
mov
ja
sub
test
inc
push
cmpsl
imul
and
insb
pusha
outsl
jle
sub
aad
cmc
dec
mov
outsl
push
imul
dec
repz
pop
shrl
shll
dec
push
pop
or
mov
push
lcall
test
fdivs
mov
mov
test
mov
fildll
mov
pop
mov
arpl
xchg
or
in
and
addr16
ljmp
call
push
mov
sub
inc
cmp
cmpsb
inc
pop
mov
sbb
mov
in
pop
mov
sub
jno
adc
mov
and
adc
or
dec
adc
dec
daa
and
pushf
sahf
addb
xchg
and
mov
inc
call
adc
sbb
in
mov
ss
add
hlt
rolb
dec
jp
pusha
rclb
or
cmp
xor
fwait
repz
stc
clc
push
rcll
mov
fidivrs
and
push
in
fnsave
daa
pop
lods
push
test
mov
fcmovnu
repnz
dec
inc
lods
mov
fiadds
daa
mov
jl
xchg
dec
in
push
lds
repnz
int3
and
cs
adcb
icebp
data16
je
out
mov
jnp
jne
fcoml
sub
aaa
icebp
push
mov
into
sub
pop
lret
fldpi
out
xchg
and
mov
fidivrs
aam
mov
fs
inc
xchg
jnp
mov
imul
mov
mov
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
ss
mov
inc
cwtl
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
xor
enter
sub
push
mov
pop
xchg
dec
out
out
sub
sbb
or
clc
sbb
mov
ds
test
cwtl
mov
pop
xchg
aas
xchg
mov
xlat
cmp
sub
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
movsb
mov
movsb
test
mov
xor
and
adc
add
je
and
push
push
inc
movsb
mov
movsb
test
in
aam
les
xor
add
adc
fs
fs
push
push
inc
movsb
mov
movsb
test
in
aam
les
pop
js
fs
fs
add
xor
rolb
mov
daa
in
sub
jno
adc
push
jmp
fists
lea
dec
in
test
in
hlt
sbb
fdivrs
cwtl
mov
add
adc
pop
mov
fucomp
mov
outsl
push
rorl
ficoml
xchg
les
call
stos
push
inc
movsb
dec
xchg
movsl
inc
xchg
xchg
nop
mov
or
popf
cmp
mov
sti
xor
je
mov
sub
pop
add
jns
hlt
aam
cmp
pop
xchg
and
call
hlt
and
xor
xchg
imul
aas
jg
pusha
pop
les
lret
jno
hlt
adc
orb
inc
addr16
movsb
test
in
aam
les
xor
add
adc
fs
fs
push
push
add
ja
rcl
ret
fwait
movsl
stos
mov
mov
pop
push
dec
ja
push
push
sbb
and
cmc
shr
xchg
aad
adcl
push
dec
jns
adc
xchg
sbb
or
in
rol
loopne
lock
aam
les
xor
add
adc
fs
fs
push
push
inc
movsb
mov
movsb
test
in
aam
les
xor
add
adc
fs
fs
push
push
inc
movsb
mov
mov
data16
xor
leave
sbb
mov
cld
or
xchg
inc
push
es
mov
xlat
in
pusha
subb
sbbb
fcoms
rcrb
push
jp
mov
movb
cwtl
lret
inc
sub
adc
test
loopne
fs
pushf
pop
jmp
rclb
inc
mov
push
add
aaa
xor
test
aaa
adc
lea
jno
daa
sub
xor
js
mov
mov
imul
out
or
out
mov
adc
out
nop
mov
cmpsb
jl
cmp
sti
cli
fstpt
xchg
stos
in
mov
mov
fsubrs
inc
ret
sbb
xchg
xor
and
mov
cmp
mov
cmpsb
inc
add
xchg
stos
sbb
jp
stos
insl
movsl
pop
push
cmpsl
js
stos
imul
ljmp
or
cmp
xchg
mov
xor
mov
or
pop
inc
addl
or
mov
ja
loopne
rclb
lods
inc
mov
mov
cld
insl
lds
lret
add
lods
aad
jmp
fcoms
in
enter
inc
cmp
sub
lcall
sub
lcall
ja
xor
faddp
pop
cmp
sbb
aas
arpl
imul
xor
jmp
inc
cmpsl
popa
lods
sub
iret
leave
repz
fwait
outsb
in
js
addr16
adc
call
nop
fiadds
insb
mov
js
aas
sub
push
cmp
fiadds
sub
sbb
cmp
and
adc
pop
xchg
xor
daa
dec
lds
lret
out
lahf
sarl
xchg
or
fstpt
cmc
decl
hlt
stc
mov
aam
lods
inc
test
push
push
jl
aas
mov
addr16
ror
lods
stos
xor
fwait
jg
sbb
out
mov
xor
or
or
outsl
and
and
out
dec
dec
push
mov
pop
popa
in
inc
movsl
or
xor
mov
in
mov
retw
sub
cmp
sahf
lcall
jge
or
and
cmc
inc
cmp
cltd
cmc
imul
sub
jmp
mov
loope
addb
ss
in
sub
inc
lahf
outsl
jg
sub
sbb
bound
jge
cmp
push
pop
les
inc
mov
dec
mov
or
xor
test
sub
ja
mov
push
adc
or
mov
mov
add
imul
test
inc
fs
or
rorb
mov
mov
jno
adc
inc
mov
sti
adc
add
cmp
lds
add
sbb
mov
push
cmp
pushf
jl
inc
orb
cld
mov
jb
mov
push
sti
nop
pop
fsubrs
adcb
fists
jge
in
pop
jle
enter
stos
and
jmp
xor
adc
or
ja
sbb
scas
mov
loopne
push
jns
loop
ljmp
xchg
outsl
and
sub
adc
mov
or
push
add
jl
cltd
pop
scas
xlat
in
ret
shrb
adc
adc
inc
xchg
mov
add
fimuls
mov
add
lahf
mov
mov
xchg
int3
mov
jp
fdivrp
jecxz
jmp
mul
mov
sarb
push
xchg
pop
mov
pushf
outsl
inc
lret
cmc
gs
jo
repz
popf
xor
and
pop
xor
fstpt
test
movsb
fimull
sub
mov
daa
pushl
jae
add
sub
iret
push
fistl
inc
mov
loop
mov
in
popa
sti
mov
popa
cmp
ljmp
cs
rsqrtps
aad
push
cmp
popf
mov
enter
inc
mov
ret
jle
push
addb
adc
mov
lret
loope
add
push
lret
ret
aaa
jnp
mov
std
sbb
push
cmc
rorl
testl
mov
mov
popf
int3
xorb
xor
fnsave
dec
popa
orb
into
cmc
ljmp
sbb
sub
push
pop
outsb
ljmp
mov
push
fdivrs
shrl
je
inc
push
push
cmp
push
cmp
add
cmp
mov
pushf
mov
cld
jmp
or
shll
push
aad
pop
rcrb
rolb
mov
ret
xor
xchg
inc
fnstenv
lret
data16
push
push
add
enter
out
mov
push
ret
roll
mov
mov
dec
mov
and
jb
or
inc
imul
or
nop
push
jl
imul
test
ret
movsb
mov
in
popf
out
xor
movl
call
jle
fsubl
push
mov
sub
rolb
leave
fldl
inc
mov
std
jns
pop
int
test
addr16
mov
cmp
dec
ficomps
mov
lea
xlat
movsb
mov
ljmp
xor
stos
and
fldl
es
aad
adc
add
and
pop
jae
push
movsb
ss
je
insl
and
jmp
adc
cltd
xchg
sub
aaa
cwtl
inc
imul
mov
ja
jnp
scas
fs
repnz
cltd
movsb
pop
adc
mov
in
or
sub
repz
push
sub
lret
jb
mov
clc
div
leave
mov
pop
cmp
push
mov
push
push
cmp
and
mov
mov
sarl
lahf
jmp
add
pop
mov
andl
xchg
xorb
xor
icebp
movsb
push
or
testl
sbbb
stc
out
mov
mov
inc
xor
cmp
add
jge
or
push
xchg
adc
loopne
inc
pandn
or
inc
pop
mov
sbb
dec
mov
mov
imul
out
mov
jae
scas
push
jbe
ret
loop
dec
test
aas
inc
and
lods
loopne
daa
lcall
mov
jmp
push
loop
xchg
testb
arpl
movq
int
cmc
cmp
inc
mov
in
dec
or
lea
test
mov
fists
push
dec
or
bound
pop
dec
xor
nop
pop
rorb
arpl
fildll
mov
mov
mov
loope
cli
jge
mov
sbb
pushf
mov
jl
out
out
add
enter
mov
and
sbb
imul
jae
fsubrl
sahf
hlt
fwait
dec
out
push
int3
aaa
mov
aaa
mov
mov
xchg
jl
jmp
dec
mov
and
insl
adc
xor
xlat
clc
mov
scas
sarl
in
xor
xor
std
shlb
jle
ja,pn
dec
ss
std
stos
push
sub
lret
jmp
inc
in
jle
std
mov
add
cmp
aaa
insb
data16
test
xchg
rorb
pop
and
push
dec
test
pop
cmc
mov
scas
je
es
push
daa
sub
das
out
adc
data16
push
cmc
mov
sub
or
fnstenv
cli
and
loop
data16
fadds
nop
lret
jl
ficoml
movsb
cmp
dec
cmp
scas
insb
cmp
mov
rorb
push
repz
xchg
test
sub
inc
out
lret
je
gs
fs
and
js
xor
outsl
insb
popa
test
leave
shll
daa
mov
addr16
jne
adc
jne
nop
test
add
and
adc
adc
rcl
ret
sub
fld1
ja
mov
int3
test
push
jmp
cmp
shlb
sub
mov
dec
jb
pop
ja
dec
and
icebp
push
and
iret
or
mov
je
add
cli
aad
push
andb
outsl
ljmp
das
aam
cmp
test
pop
fcomps
push
fdiv
jl
and
jp
mov
repnz
adc
popf
dec
stc
mov
cli
mov
dec
add
and
mov
cmpsl
ljmp
ss
loope
js
lea
lds
cmpsl
sub
fwait
mov
insb
test
jge
mov
enter
out
mov
and
fsubl
repnz
in
sbb
stos
repz
ja
lcall
pop
inc
push
xchg
adc
jns
enter
pushf
sbb
call
push
xor
dec
xchg
xchg
aad
or
cmpsl
out
sahf
or
sub
mov
or
scas
sub
test
cmpsb
add
jno
hlt
sub
inc
and
cli
out
add
cmc
xchg
lret
add
into
or
cld
sub
mov
or
jmp
push
popa
pop
lods
jmp
push
jnp
sub
or
mov
stos
jge
pop
push
lcall
pop
fwait
cltd
int
mov
popa
insl
ss
data16
mov
les
cvttps2pi
mov
in
mov
jbe
dec
fisttpll
pop
fcmove
lock
movb
int3
call
mov
add
mov
add
cmp
fldcw
sbb
or
repz
pop
xor
popa
lcall
sub
fistl
lret
ret
dec
push
out
xchg
sbb
inc
jl
dec
xor
dec
enter
and
mov
push
jl
pop
aas
adc
scas
push
jp
loope
hlt
divl
icebp
mov
aaa
cmp
addr16
out
mov
shrb
dec
sahf
xchg
in
xchg
fistl
pop
fwait
dec
mov
push
enter
add
xor
clc
jbe
pop
add
fsts
scas
inc
add
addr16
sub
fwait
cmp
outsb
xor
adc
xchg
and
ss
sbb
jne
lret
insl
es
mov
lods
inc
cmp
aas
movsb
dec
cmpsl
nop
sbb
mov
push
xor
subb
daa
mov
cltd
cmp
push
mov
leave
imul
mov
cmp
or
popa
mov
dec
idiv
aaa
xor
mov
insl
iret
adc
push
movsl
lods
add
xor
xorl
mov
push
mov
and
es
mov
fistpl
popf
jmp
repnz
leave
fisttpl
sbb
push
mov
or
dec
add
pop
cld
nop
sub
dec
stos
jecxz
adc
sbb
lock
xor
mov
dec
int3
or
jl
hlt
push
arpl
jg
insl
mov
inc
pushf
test
shr
test
sub
mov
dec
int3
loope
xor
jb
cmp
lret
int3
fisttps
push
xlat
addl
popa
mov
je
adc
push
xchg
xchg
lods
xchg
xchg
mov
out
and
ja
aam
mov
das
sti
xor
add
or
jecxz
bound
imul
insb
xlat
jne
aad
xchg
test
xchg
lahf
sub
inc
and
mov
mov
aas
push
xchg
inc
fsubrl
pop
pop
or
mov
sbb
testl
push
ss
lahf
into
push
push
and
add
mov
sub
mov
dec
lea
repz
xchg
aaa
xchg
jge
or
outsb
xchg
add
jae
adc
mov
movsl
xor
xchg
push
xlat
div
inc
mov
or
js
cld
push
xor
jp
jno
pushl
mov
mov
jne
popa
pushf
or
daa
dec
add
cmp
cmp
dec
call
test
imull
adc
push
mov
lods
mov
lret
mov
jae
cmc
addr16
je
les
lret
std
jns
jmp
frstor
andb
push
mov
out
int3
mov
mov
xchg
mov
xor
jp
movb
outsb
mov
enter
test
movsb
xchg
cmpl
clc
sub
das
add
int
mov
bound
in
pop
mov
pop
mov
xor
jle
mov
mov
cmpsb
jl
sub
pop
out
xchg
dec
add
orl
sub
and
clc
jbe
into
mov
lock
stos
ja
imul
inc
jo
push
cmp
adc
icebp
xor
fnsave
and
sahf
and
bound
scas
jae
in
pop
fisttpll
in
inc
sub
gs
adc
and
ror
mov
icebp
push
test
out
mov
and
mov
dec
rcrl
add
and
adc
push
push
xor
jns
testb
cmp
push
nop
dec
mov
pop
xorb
ljmp
inc
xor
pop
into
into
add
sub
mov
push
mov
test
and
dec
mov
popa
lock
lahf
test
fucomi
mov
inc
xchg
test
jp
mov
daa
xor
insl
jecxz
lcall
fimull
dec
jle
pop
es
inc
lds
xchg
sbb
mov
mov
xchg
arpl
add
cmp
faddl
jl
push
mov
test
jl
dec
scas
push
xchg
sbb
es
pop
clc
add
ja,pn
mov
out
lock
stos
negb
js
pop
mov
inc
lret
fisubl
pop
scas
push
fisubl
xor
nop
mov
in
ss
mov
or
inc
cmp
fistpl
or
mov
mov
std
adc
mov
push
inc
jle
ljmp
loope
popf
out
sub
pop
and
cmp
cwtl
lcall
xchg
sbb
inc
jmp
jp
fistl
mov
push
cmpl
pop
pop
xchg
data16
or
pusha
pusha
movsl
mov
dec
xor
ds
adc
mov
fidivl
sub
test
jge
sbb
xchg
add
aas
mov
addb
enter
and
scas
and
scas
push
das
sbb
cld
out
leave
push
out
lea
aad
inc
jg
out
xchg
xchg
repz
push
push
mov
iret
push
int3
js
rorl
jl
cmp
cmpsb
push
fwait
xchg
insl
cld
ss
int
hlt
pop
lds
loop
mov
sbb
enter
pop
or
fmuls
and
dec
adc
jb
and
xchg
push
pop
inc
pop
out
std
pop
outsb
lret
inc
popa
dec
xor
and
and
fstl
mov
outsl
xor
xor
lret
jnp
ja
enter
adc
dec
lea
add
outsl
xor
in
mov
shll
clc
cmp
repnz
mov
hlt
sub
mov
cwtl
push
repnz
cmpsb
and
movsb
dec
push
jb
adc
pop
lods
rcrl
mov
shl
fcmovu
in
and
cmp
enter
adc
inc
adc
adc
jne
imul
pop
pop
or
jno
in
ja
ret
hlt
or
mov
rcrl
inc
xor
mov
xorb
je
mov
int
pusha
sub
loop
push
cmp
or
fsubs
dec
and
mov
mov
pushf
dec
ljmp
pop
mov
js
xlat
adc
mov
mov
mov
push
imul
int3
sbb
xchg
testb
aam
xchg
pop
repnz
mov
adc
lret
sbb
mov
inc
aad
jl
adc
and
lret
adc
and
dec
pop
cld
inc
dec
sub
or
idivl
rcll
in
lahf
or
dec
mov
or
cmp
mov
int
sub
sub
lods
icebp
sub
in
rorb
mov
cmp
out
jne
popf
push
imul
inc
cmp
jg
imul
inc
and
stos
aam
dec
and
mov
mov
sti
adc
test
sbb
orb
pop
rdmsr
add
xor
lods
sub
aas
leave
ffree
xor
mov
xchg
push
cmp
pop
xlat
mov
ret
xor
lcall
pushf
cmp
mov
js
cmp
add
dec
xlat
in
leave
cmpsl
into
ss
xchg
pop
loopne
inc
cltd
repnz
jmp
add
pop
or
lods
or
xor
fmul
add
xor
push
shll
lods
call
mov
roll
jo
pop
testl
sub
xor
push
xchg
xchg
push
sub
aam
je
xchg
sbb
insl
icebp
sbb
pop
sahf
push
fisubrl
in
xor
fsubrs
pop
int3
pop
movsb
test
stos
inc
mov
push
enter
mov
outsb
xchg
pop
sub
lcall
and
stc
pushf
push
sahf
xchg
mov
pushf
adc
cs
mov
js
mov
jge
imul
sub
imul
jne
push
mov
test
shlb
sub
mov
mov
xchg
inc
and
icebp
lret
cld
enter
fs
inc
hlt
dec
adc
es
pop
iret
pop
cmp
int3
xorb
sub
jg
js
outsb
fstl
cs
xor
sarb
pop
add
xchg
mov
mov
mov
push
into
jmp
fadd
mov
outsl
jbe
adc
fstpl
jmp
repnz
lret
stos
pop
ret
stos
lret
push
adc
popf
sbb
mov
dec
inc
cmpsl
cmpsl
cmpl
les
inc
sti
cmpsb
add
sbb
aam
fidivl
fnstsw
jmp
push
ret
mov
hlt
mov
enter
pop
mov
lds
pop
sbb
into
inc
xorb
inc
adc
dec
inc
rclb
mov
mov
dec
mov
lahf
fs
call
shrb
mov
sub
push
cld
xchg
popa
js
testl
in
out
cmpsb
outsb
sahf
inc
jge
xchg
jo
fst
outsl
jnp
test
xchg
ret
mov
das
sub
aad
out
mov
cmp
and
test
pushf
gs
adc
xchg
add
sbb
scas
lret
cs
mov
sub
jnp
and
add
push
aas
gs
and
in
psllq
test
out
imul
jbe
sarb
xchg
sbb
mov
neg
es
ds
xor
repnz
nop
and
mov
pop
jb
add
mov
scas
and
loope
or
mov
mov
push
mov
jmp
mov
cmpsl
dec
mov
inc
dec
xlat
les
jg
sarb
sbb
vsubpd
adc
mov
inc
les
mov
test
lcall
add
cmp
pop
ljmp
and
add
jo
lcall
insl
add
sub
insl
loop
imul
cmp
xchg
js
mov
adc
subb
cltd
std
push
xchg
mov
fisubs
shlb
out
jge
cmp
fwait
lods
or
sub
add
icebp
xorb
and
outsl
pop
dec
or
sub
adc
ds
idiv
adc
mov
add
mov
sahf
mov
dec
add
mov
push
add
inc
clc
xchg
xchg
inc
je
push
push
cmp
dec
lcall
mov
aad
sbb
and
push
scas
xlat
inc
fsubrl
and
jb
stos
sub
inc
jne
sar
test
and
idivl
xchg
mov
addb
mov
xchg
loopne
push
gs
movsb
inc
dec
rol
cmc
pop
lock
out
js
cmp
xchg
test
push
xor
or
mov
dec
cs
cmp
mov
outsb
adc
shrl
mul
mov
movsb
sbb
and
test
xchg
jle
into
sti
scas
bound
in
int3
imul
shl
xor
out
push
fiadds
sahf
cmpsb
sarl
jmp
cld
xor
popa
xchg
ds
insl
pop
fsubrs
mov
outsl
pop
ljmp
pop
jmp
jmp
orl
dec
mov
jae
repnz
sbbl
lds
cmp
and
push
fmull
sub
jo
push
out
sti
out
mov
and
lods
cmp
insl
xchg
mov
inc
jl
adc
sub
mov
call
lods
in
dec
movsb
xchg
push
jg
sbb
mov
jge
cmp
inc
xor
pusha
adc
adc
stos
cmpsb
xor
mov
mov
jge
rcll
ss
sub
leave
mov
cmp
pop
push
mov
sub
je
and
mov
clc
push
out
inc
lods
js
mov
stc
jmp
pop
data16
inc
mov
aam
cmc
test
xor
jae
in
movsb
mov
hlt
hlt
in
aam
les
xor
add
adc
fs
fs
push
push
inc
movsb
mov
movsb
test
in
aam
les
xor
add
adc
fs
fs
push
push
inc
movsb
mov
movsb
test
in
aad
les
adc
add
jne
fs
push
push
inc
movsb
mov
movsb
test
fs
push
push
cmp
lret
lret
mov
cld
cld
fwait
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
add
adc
inc
sbbb
or
push
cmp
sub
xchg
jge
outsl
hlt
dec
aam
aam
and
xor
add
adc
fs
je
inc
int
sub
movsb
add
les
movsb
cmp
xchg
or
lds
and
push
mov
jne
jge
add
aam
ret
jo
lahf
scas
mov
lods
sbb
or
xchg
adcb
enter
cmp
push
jne
mov
call
pop
into
pop
fdivrl
xchg
repz
sub
les
mov
pop
lret
jo
xor
push
xor
je
cmp
hlt
pop
cmp
mov
add
and
inc
in
mov
sbb
stos
mov
sub
sub
xorb
mov
adc
insl
hlt
add
nop
adc
push
cmp
sar
test
sub
dec
aam
add
filds
pop
out
xchg
jle,pn
fld
movsl
mov
test
mov
sbbl
mov
popf
adc
push
ljmp
dec
and
xor
lea
jne
inc
les
roll
xor
add
mov
nop
sub
cmp
shrl
jge
or
rcrb
bnd
adc
and
aad
lock
xlat
jge
push
fwait
sub
rcll
in
mov
in
je
inc
int
cmp
test
hlt
pop
les
mov
add
adc
fs
je
inc
int
cmp
test
hlt
pop
les
mov
and
cltd
inc
mov
pop
lea
jns
push
iret
push
jecxz
fisttps
vmread
movsl
call
adc
in
sub
cld
add
sbb
cld
sbb
jae
jns
adc
hlt
jae
jnp
lea
sarl
into
sbb
mov
xlat
add
pop
movsb
sub
cltd
cwtl
sub
mov
popa
dec
or
jae
test
daa
icebp
leave
pop
imul
imul
push
pusha
aam
sarb
icebp
mov
mov
insb
fimull
push
fstpl
mov
jle
icebp
xchg
lods
xor
loope
and
pusha
cwtl
aad
fisubl
movsb
adc
mov
dec
loopne
and
lret
sbb
xchg
fadds
jg
les
sub
push
lock
maxps
cld
jbe
mov
std
and
mov
fs
pop
push
insb
mov
test
dec
loop
cmp
ds
test
fsubl
add
jg
dec
andl
js
lds
push
fwait
dec
cmpsl
in
push
stos
mov
dec
loope
aas
scas
addr16
adc
ret
jo
adc
sbb
int
jbe
and
imul
cmpsb
in
aam
nop
xlat
ret
stos
sub
arpl
int
bound
sbb
fwait
jl
pop
or
mov
shll
aad
push
pop
and
add
jge
cli
cs
or
mov
into
inc
inc
fcoms
rolb
xchg
cmp
aaa
pop
sub
xor
jecxz
pop
aas
pop
sub
lods
push
mov
xchg
adc
mov
ljmp
fsubl
popa
in
daa
xchg
pop
jne
nop
fistpl
mov
fwait
cltd
inc
mov
xchg
or
rcrl
mov
jb
fs
mov
fisttpl
mov
cmovg
dec
stos
inc
pop
xor
and
inc
cmp
shll
cmpl
xor
mov
mov
test
ret
idivl
or
sub
pushf
push
jns
xor
in
inc
push
ds
mov
mov
ret
repz
std
mov
stos
into
inc
jne
mov
dec
xchg
cmp
pop
stos
out
aaa
jmp
std
scas
dec
or
call
push
adc
add
sbb
jmp
test
xchg
dec
into
cmp
push
popa
data16
push
inc
add
pop
and
and
sbb
sbb
ret
lret
pop
dec
cwtl
es
hlt
test
dec
stc
js
aam
or
outsb
leave
pop
xchg
test
pop
xchg
or
dec
mov
mov
adc
mov
add
xor
fistpl
test
jno
test
adc
dec
std
pop
jmp
push
adc
jg
pop
xor
sub
xchg
mov
jne
push
popf
je
sub
push
dec
jo
xor
mov
scas
adc
xlat
adcl
adc
sub
inc
mov
pop
pop
aas
lods
pop
jg
inc
imul
jmp
pop
insl
lock
xchg
icebp
sub
push
pop
or
jle
add
pop
sahf
fistpl
lret
inc
jecxz
or
stc
test
popa
dec
inc
in
lods
inc
cmp
inc
fsub
dec
add
daa
sub
sbb
cmpsl
xchg
xor
jmp
cmp
call
mov
xor
mov
mov
icebp
and
rcll
arpl
fnstenv
jg
fistps
loop
daa
and
ss
adc
mov
or
and
in
mov
and
push
das
pushf
cmpsb
sub
sbb
and
pop
test
mov
push
ja
and
adc
bound
scas
hlt
mov
sbb
mov
addr16
out
aaa
cld
cmp
faddl
sub
mov
xchg
repnz
add
lea
pop
icebp
inc
cmp
xor
aam
xchg
jecxz
inc
es
cwtl
pop
lea
sbb
gs
xchg
pop
pop
push
cld
fidivrs
ret
add
jmp
pop
pop
pop
stc
sahf
setp
movsl
ret
add
push
subb
adcl
push
int3
test
test
jnp
xchg
nop
les
xor
pop
push
cwtl
xor
or
test
fstpl
inc
xor
addl
sti
out
sbb
cmp
fsubrs
mov
inc
cmp
inc
sbb
inc
sub
mov
or
sti
pop
push
dec
mov
jae
cli
test
das
dec
inc
pop
mov
aad
push
int
jg
nop
and
jns
stos
add
mov
cs
ret
cs
mov
mov
ret
push
ja
jae
xor
aam
je
idivb
cmpsb
iret
or
and
jmp
jb
lods
jmp
lret
dec
mov
dec
addr16
mov
inc
xchg
repz
dec
rol
mov
fisubl
mov
add
bound
clc
iret
mov
mov
in
mov
mov
dec
and
in
cmp
nop
cmpsl
mov
and
mul
xor
push
mov
loop
xor
movsl
clc
inc
mov
lods
fs
iret
sarb
jmp
mov
mov
dec
jp
fildll
mov
dec
xor
lods
fmul
and
mov
add
dec
xchg
sbb
pop
cmp
sbb
fldenv
sbb
dec
adc
cmpsb
jno
dec
push
js
mov
cld
aad
js
jmp
adc
sbb
xor
lock
call
rclw
les
inc
sub
mov
cmpsl
fcmovb
and
in
lock
mov
fdivrl
test
xchg
loop
dec
xchg
mov
dec
cmc
les
and
out
push
push
adc
das
add
inc
fld
inc
rcl
xchg
cmp
loop
sbb
test
cwtl
inc
xor
and
lret
mov
adc
or
pop
decb
andb
fildl
mov
mov
dec
xchg
mov
mov
or
add
popf
or
hlt
cmc
fxch
mov
mov
sub
push
or
mov
jo
out
sbb
cmpsb
iret
cmc
push
push
es
or
and
ret
scas
sub
insl
or
jns
cmp
divl
pop
dec
int
bound
in
ja
es
int
push
jge
or
adc
nop
sar
rcll
dec
aad
add
das
mov
push
rol
inc
mulb
in
das
cmp
dec
lock
outsl
inc
pop
and
push
pop
cli
or
jmp
loop
jle
inc
out
or
fstpl
mov
loope
pop
es
int
cmp
mov
insb
and
or
and
mov
mov
cmc
sar
int3
mov
mov
pop
out
jp
or
loope
jp
call
iret
scas
add
jno
pop
mov
dec
std
push
into
xchg
fsubrs
xchg
or
mov
dec
xchg
test
xor
test
mov
imul
ret
loopne
idivb
into
push
popa
ja
pop
call
or
icebp
fnsave
add
test
sub
mov
out
ret
rcrl
jb
mov
xchg
or
cld
pop
subl
sahf
xchg
in
mov
cs
push
sti
into
jmp
mov
push
iret
sbb
cmp
and
outsl
pushf
fisubs
cmp
inc
push
inc
inc
sub
in
aad
push
cmp
cwtl
pusha
movsl
sbb
jae
repz
dec
mov
xchg
ljmp
lock
xchg
jae
jmp
es
sub
mov
inc
jmp
gs
daa
inc
xor
mov
mov
stc
movsb
xchg
in
or
decl
sbb
ljmp
je
cwtl
mov
mov
jae
pop
pop
xchg
lcall
sub
mov
jmp
out
mov
dec
arpl
add
pop
loopne
or
jo
gs
stos
push
push
mov
add
cmp
push
adc
dec
imul
loopne
cwtl
dec
std
inc
mov
movsb
mov
fldt
int
lds
push
add
jb
out
out
stos
ret
inc
dec
std
lea
jle
xchg
pusha
and
scas
out
jmp
push
data16
pop
mov
lahf
sbb
dec
sub
call
inc
push
in
enter
shll
cmpsb
sub
jns
xlat
mov
mov
dec
int3
add
outsl
fisttpl
cmc
dec
pop
imul
xchg
cmp
adc
xchg
out
shl
and
fisubs
repnz
faddl
push
inc
or
add
fcmovne
mov
xchg
xchg
dec
lods
imul
movsl
mov
int3
sbb
mov
movsl
dec
mov
mov
das
ljmp
sti
fistpl
scas
push
ret
ret
or
fs
cld
stc
int3
dec
jmp
stos
xor
cmp
adc
stos
sbb
and
dec
out
push
in
adc
push
mov
out
mov
mov
push
adc
cmp
pop
adc
add
xchg
pop
mov
lahf
das
xchg
jne
pop
lahf
fildl
addr16
jp
call
cmpl
dec
jmp
out
adc
ljmp
push
data16
lret
ret
pusha
pop
and
cmp
and
sbb
ret
cmp
les
push
push
mov
data16
cmpsl
adc
add
xor
cmp
mov
lock
jns
in
mov
cmp
in
pop
lds
iret
mov
dec
lahf
daa
mov
lods
sbb
adc
jecxz
les
fwait
shl
mov
add
add
mov
roll
in
fdivs
das
xchg
pushf
das
fmuls
xor
sbb
in
push
cmp
leave
sub
jp
loopne
repnz
sbbb
fimull
and
pop
xor
sub
xor
pop
and
insl
or
outsl
xchg
xor
mov
cmp
shlb
movsb
enter
ds
out
sti
cmp
adcl
lea
pop
cwtl
and
pop
scas
movsb
push
jnp
fs
cmc
sbb
push
loopne
shlb
add
inc
mulb
ror
bound
and
xor
nop
pop
and
movsl
lea
lods
jns
stos
movsb
flds
mov
lods
xlat
or
lock
das
add
mov
into
aas
rorb
in
cli
das
fsubr
xchg
inc
mov
or
mov
pop
push
dec
adc
call
jae
insb
rclb
jbe
fcmove
arpl
loope
js
dec
mov
arpl
insb
mov
addr16
pop
dec
pop
in
mov
mov
mov
daa
out
cltd
sbb
push
cmc
push
jo
nop
mov
xchg
dec
push
sub
int
cmpsl
repz
and
test
inc
mov
cmp
push
add
xor
int
xor
jg
andb
push
stos
in
sbb
out
int
dec
imul
push
add
add
adc
and
xchg
jbe
cltd
mov
mov
xor
jae
mov
loope
sbb
out
mov
daa
mov
mov
or
add
pop
ss
cltd
xchg
mov
mov
ljmp
loopne
repnz
mov
test
mov
mov
pop
mov
loope
mov
shll
xor
mov
lret
cli
adc
leave
daa
inc
mov
les
out
ret
aam
mov
add
std
inc
mov
push
xor
repz
enter
mov
or
subl
movb
or
out
sbb
movsl
add
xor
shll
mov
rcll
rcrl
inc
jb
inc
int3
and
add
xlat
dec
adc
lret
jb
inc
inc
icebp
test
lock
insb
sub
mov
das
fcoms
test
sbb
ret
test
add
jmp
lcall
jne
push
cli
dec
mov
test
xor
jno
fstpl
in
jp
push
lea
jmp
out
jns
in
add
push
pop
or
or
xchg
pop
aam
dec
pop
mov
aas
jbe
or
dec
jb
and
jl
xchg
dec
testb
mov
icebp
mov
test
jne
cli
pop
dec
mov
cmp
add
in
pop
adc
pop
adc
xchg
push
jns
add
push
dec
test
lods
mov
sbb
icebp
loope
mov
ljmp
add
push
sbb
xor
clc
inc
shlb
ja
mov
jno
jecxz
shll
aam
hlt
and
daa
sbbb
mov
call
stos
into
jmp
add
knotw
adc
std
stc
cmp
fucom
mov
mov
or
fiaddl
pop
jae
fwait
out
test
fwait
push
dec
sub
jmp
mov
and
lahf
add
add
popa
xchg
movsl
lods
addr16
lret
dec
out
aaa
pop
loopne
dec
sbbb
push
push
mov
loop
cmpsb
in
jb
mov
cmp
pop
pop
cld
and
mov
push
aaa
in
gs
jae
setnp
mov
in
cwtl
mov
sahf
xchg
ds
fdivr
aam
insl
adc
scas
rclb
jns
push
outsl
movsb
pop
sti
mov
mov
jg
aaa
std
out
loop
mov
repz
cmp
or
in
add
ja
mov
pop
negb
pushf
icebp
lds
xlat
test
and
jle
add
mov
push
jp
scas
filds
xor
and
sti
mov
scas
das
xchg
test
xchg
testb
mov
incl
mov
sbb
scas
pop
lcall
jae
cld
add
daa
mov
int
xor
sub
cvtpi2ps
test
jae
into
pop
sbb
sub
mov
cmpsb
and
pop
mov
incl
inc
adc
loopne
lock
frstor
xor
add
inc
cmp
mov
xchg
mov
lea
jnp
inc
in
ja
or
sub
pusha
xor
test
cmp
push
mov
into
inc
cmp
mov
scas
int
mov
sbb
cmp
lahf
loopne
inc
shlb
jo
mov
mov
mov
fsubr
push
pop
cs
cld
leave
lcall
jb
mov
movsl
xchg
iret
push
jnp
jg
xchg
push
lock
out
mov
adc
pop
pop
jecxz
dec
imul
push
xlat
xchg
scas
cmc
movb
iret
adc
mov
ljmp
push
cmp
test
and
popa
int
insl
jb
popa
jl
dec
out
cmc
enter
mov
gs
push
shll
ret
mov
mov
mov
inc
scas
data16
mov
jo
mov
xchg
mov
jb
icebp
jg
xchg
and
js,pn
mov
adc
mov
pop
ss
mov
xchg
push
inc
lods
gs
lods
adc
jl
in
mov
adc
jnp
enter
jnp
pop
int
sbb
cmp
out
imull
bound
out
js
adc
mov
jge
andl
xchg
ss
jecxz
ljmp
cmp
jae
xor
iret
adc
push
negb
jecxz
inc
mov
sbb
xchg
adc
pop
dec
xchg
mov
cmpb
test
sahf
mov
mov
or
dec
push
mov
xchg
mov
scas
push
pop
mov
add
push
sarl
sub
mov
int
rcrl
scas
rorb
add
outsl
ljmp
ret
jb
pushf
cli
sbb
mov
aaa
mov
test
add
mov
mov
sub
jp
mov
cmpsl
mov
mov
jb
jno
cmp
pop
or
dec
call
out
jmp
pop
jne
ficompl
jmp
push
scas
sbb
arpl
jecxz
sbb
mov
sbb
into
xor
mov
ja
push
jb
sub
mov
mov
pusha
ja
cli
inc
scas
sub
xor
jae
cmp
jns
sub
add
jl
mov
jae
jb
ja
inc
fstl
scas
pop
dec
push
add
cvtpi2ps
xor
clc
push
xchg
cmpb
fs
mov
mov
fisttpl
cmp
or
imul
in
icebp
xchg
out
pop
negb
mov
jae
push
pop
dec
mov
cmpsl
inc
mov
outsl
cmp
mov
add
pushl
cli
scas
xor
jmp
and
add
xor
mov
rorl
and
mov
xchg
std
sahf
pushf
movsb
pop
push
pop
or
outsb
mov
les
push
int
pop
adc
inc
sub
outsb
dec
adc
test
jns
fcmovu
dec
push
cmp
ss
call
bound
push
mov
inc
fildl
or
imul
test
in
lahf
mov
sbb
ss
xchg
outsb
push
leave
pop
lret
sbb
mov
ror
inc
sbb
add
push
out
jbe
sub
or
xchg
pop
notb
pop
push
bound
cmp
xor
cli
push
and
cwtl
push
mov
pop
add
ds
xchg
ror
sbb
iret
push
arpl
roll
out
shll
bound
lcall
out
out
roll
repnz
add
in
bound
push
iret
repnz
scas
mov
mov
test
sub
sbb
mov
pop
clc
lea
mov
imul
mov
mov
jmp
xchg
mov
pusha
into
sbb
ss
mov
sub
ds
pop
and
lcall
jbe
insl
aam
xchg
mov
shll
jnp
mov
or
or
mov
push
sub
jae
sahf
ror
les
fldcw
popl
sbb
aad
pop
mov
aas
mov
mov
add
sbb
cltd
repnz
addl
mov
sbb
jne
dec
pop
jecxz
nop
sub
cli
roll
int3
push
push
inc
pop
push
sti
lock
rcl
ret
mov
adc
adc
out
icebp
push
push
mov
xchg
jno
es
inc
mov
adc
shl
push
push
push
cmpsl
insb
dec
fdivrp
pop
test
notl
inc
iret
mov
mov
std
push
data16
xchg
mov
pop
push
scas
sub
mov
dec
xchg
stc
mov
jge
dec
mov
scas
xchg
clc
jne
jnp
inc
scas
add
jp
xor
dec
lret
jecxz
mov
mov
test
testb
movsl
inc
in
xor
pop
pop
mov
and
aas
sbb
imul
xor
pusha
mov
test
sub
test
into
out
scas
lods
pusha
clc
mov
ss
cmp
scas
cmpsl
mov
pushw
movsl
fsubrl
cmp
sbb
pop
add
or
in
ss
or
jno
mov
xor
push
and
jno
xor
push
adc
cmp
push
mov
je
popa
adc
jmp
rcrl
mulb
andb
insb
and
mov
out
push
mov
pop
xchg
inc
dec
jp
pushf
out
push
sar
aaa
inc
pusha
xor
cld
sub
xchg
popf
pop
xor
ljmp
jp
sub
push
bound
mov
into
pop
aad
sbb
inc
mov
push
incb
push
mov
movsl
aaa
push
and
lea
pop
in
mul
test
ja
bound
sbb
stos
push
pop
push
pushf
cmp
outsb
mov
lret
into
mov
push
sahf
mov
aam
sbb
fcoms
loope
aaa
cmp
jp
inc
rcrl
xchg
mov
xchg
sub
std
push
fimull
fists
shlb
lea
fiadds
leave
inc
push
mov
adc
outsb
mov
cmpsl
cmp
dec
inc
inc
repz
cmp
out
adc
cld
das
mov
xor
jge
and
sahf
xchg
es
dec
sbb
xchg
jp
mov
enter
popf
pop
stc
sub
pop
call
jbe
je
out
insb
xor
pushf
cmp
pop
mov
lock
and
imul
sti
adc
std
pushf
xchg
aad
das
push
cwtl
ret
jne
push
inc
pop
idivl
sub
shll
mov
popa
jg
frstor
mov
pop
mov
pop
xchg
adc
mov
mov
dec
in
mov
xor
xor
dec
inc
sub
sahf
dec
clc
nop
add
movsb
jle
int3
xor
imul
xor
jmp
adc
fs
je
inc
int
cmp
test
hlt
pop
les
mov
add
adc
fs
je
inc
int
cmp
test
hlt
pop
les
mov
add
adc
fs
je
inc
int
cmp
test
hlt
pop
lds
mov
add
adc
fs
je
inc
dec
push
ret
push
mov
or
or
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
sbbl
add
mov
lret
xor
adc
xor
fisubrs
sbbl
or
sbb
sub
cmp
lahf
and
xor
popa
mov
mov
jnp
or
sbb
sub
cmp
lret
add
xor
push
clc
and
add
pop
loope
les
dec
or
adc
fildl
pop
and
mov
es
sti
or
and
loope
mov
and
push
int
cmp
jno
into
je
mov
stos
xchg
inc
mov
xchg
repz
push
dec
or
push
rcl
lods
lret
add
into
sub
adc
into
popa
jnp
push
fistps
sbb
rorl
aad
push
je
loope
out
data16
mov
stos
sahf
mov
outsb
add
lds
jmp
daa
out
sti
fnstenv
push
inc
cltd
inc
dec
xor
in
pop
fwait
cmp
dec
fidivl
mov
fwait
imul
mov
arpl
ja
xchg
pop
subl
sbb
sub
cmp
lret
add
or
cmp
sub
jnp
jo
xorl
aam
ret
push
mov
lea
mov
adc
and
push
out
push
out
sbb
cmp
push
fimuls
ja
sub
fnstenv
mov
push
flds
mov
xchg
add
jp
or
sbb
sub
cmp
lret
add
adc
and
xor
popa
mov
xchg
imul
shrl
loope
icebp
lret
add
adc
and
xor
popa
mov
adc
pop
mov
dec
adcl
push
sbb
lea
cmp
pop
lcall
scas
movsb
xchg
or
xor
jno
ret
push
mov
cmpb
ja
filds
mov
fisttpl
push
inc
jmp
or
lcall
inc
daa
pushf
jns
pop
data16
inc
cli
sbb
into
popa
pop
rcll
xor
push
dec
xchg
mov
dec
outsl
jge
roll
pop
jg
xor
aad
std
lahf
lahf
idiv
aad
aad
std
lock
mov
fidivs
outsb
inc
or
cmp
movsb
aam
stos
sbb
imul
push
push
imulb
lret
bound
xchg
add
and
push
inc
rorb
leave
adc
mov
cmpsl
jb
add
stc
sbb
sbb
es
stos
xchg
add
adcl
add
push
aaa
or
or
mov
adc
ja
xchg
add
call
pushf
add
insb
pop
shll
jno
pop
andps
dec
lcall
mov
ds
test
mov
cmp
aad
in
test
xor
adc
add
fwait
and
in
xor
push
jmp
pushf
sub
stc
sti
sbb
fnsave
adc
fstpl
dec
sahf
into
gs
jo
sbb
cli
movsb
leave
out
push
xlat
add
cwtl
and
sbb
sahf
mov
setbe
mov
cmp
sub
sbb
push
xchg
inc
add
or
outsb
imul
sarb
ficoml
mov
es
mov
gs
inc
adc
jge
add
push
movsb
movsb
fisttpll
insl
movsl
das
je
mov
sub
ss
push
loop
or
data16
push
adc
dec
adc
push
push
in
daa
jns
sahf
mov
push
hlt
add
xchg
sub
and
jo
imul
sbb
movl
insb
xchg
or
jae
jo
icebp
test
stos
and
orl
push
loope
imul
dec
shll
ds
xor
xlat
or
jl
mov
jl
add
jne
je
pop
out
lods
in
mov
scas
mov
xor
cli
adc
lods
mov
add
jmp
loopne
mov
roll
je
xchg
test
popf
out
fstpt
add
xchg
and
aad
lds
or
jb
cmpsl
mov
addl
negl
ljmp
jmp
jno
pushw
popf
adc
mul
cs
mov
sar
add
push
pop
dec
idivb
pusha
mov
push
or
cmpsb
xchg
dec
or
fwait
mov
roll
out
sbb
in
sbb
mov
add
js
outsb
pop
xchg
scas
fs
xor
inc
push
cli
xlat
mov
mov
push
lret
ret
pusha
mov
cmpsb
push
loopne
cmp
jmp
movsl
jmp
add
cmp
sbb
push
pusha
xchg
mov
fnstcw
or
lds
sbb
cmp
adc
lods
dec
ja
aaa
lret
dec
aad
sub
or
mov
push
pop
cmp
jge
lahf
pop
or
jge
push
ss
jmp
ffreep
adc
jg
out
and
div
loope
push
daa
mov
and
sbb
arpl
xor
stos
inc
inc
mov
icebp
fwait
pusha
add
jbe
jmp
pop
cmp
subl
pop
add
je
push
mov
ja
lods
in
test
pop
cmp
call
fistpl
xchg
mov
or
pop
add
xor
lret
int3
cmpl
xor
std
les
mov
push
push
aad
aam
mov
inc
fcompl
outsb
test
std
dec
and
in
jle
lods
rolb
mov
adc
imul
enter
or
cmp
lods
fiadds
pop
std
and
cmp
pop
lods
fstpl
pop
arpl
jp
loope
in
into
cmpsl
fwait
mov
pop
pmulhw
rol
pop
enter
xchg
lret
xchg
adc
inc
rcll
and
xchg
xor
in
in
repnz
push
out
inc
rclb
scas
adc
jbe
leave
xor
jge
lods
inc
int3
mov
push
jno
sub
jg
push
push
ss
inc
jecxz
cmpb
jp
sub
jp
or
incl
xchg
cmp
es
and
es
add
clc
imul
xchg
sbb
adc
cld
mov
cmpsl
pop
mov
pop
into
addr16
test
cwtl
xlat
lds
pop
mov
insb
sbb
or
imul
pop
dec
xchg
incl
nop
addr16
nop
mov
movsb
add
sarl
imul
mov
ja
cmc
and
adc
out
arpl
mov
fiadds
das
loopne
hlt
push
pop
xchg
fistpl
adc
inc
mov
insb
in
fst
mov
dec
pop
or
negb
scas
mov
bound
push
xlat
leave
fstl
mov
fcmovb
call
ljmp
adc
leave
sub
jge
out
cmp
mov
mov
cmp
xor
inc
sub
movsl
jecxz
sbb
inc
mov
mov
inc
insl
test
mov
cmp
push
gs
in
push
xor
pop
jne
xchg
sbb
mov
push
arpl
jmp
bound
mov
ja
jle
mov
jbe
scas
lock
inc
adc
or
cmp
in
inc
inc
mov
jg
push
jbe
sar
mov
std
push
shl
jle
adc
jle
dec
gs
push
divl
and
fucomip
int3
xchg
hlt
cmc
adcb
add
ret
mov
int
nop
add
fistps
dec
dec
sub
jne
pop
xor
divl
inc
push
popf
mov
sbb
and
inc
aaa
push
adc
mov
insl
inc
mov
push
mov
lret
cmc
mov
pop
sub
cmp
inc
daa
sbbl
insl
or
push
outsb
pop
cmp
and
or
mov
imul
hlt
inc
push
sti
jp
mov
imul
push
fimuls
fsts
xchg
movsl
or
in
cmp
mov
sub
enter
test
scas
cli
out
push
arpl
inc
push
and
test
cs
shl
icebp
or
add
inc
lds
incl
ret
push
mov
add
sub
mov
sbb
add
jnp
dec
shrl
clc
xchg
repnz
push
and
xchg
popa
jmp
pop
add
lahf
pushf
mov
mov
dec
inc
shl
pop
repz
adc
movups
xchg
jmp
mov
dec
ja
xor
loope
cld
inc
pop
shll
adc
sbb
add
fwait
mov
inc
daa
repz
sbb
and
daa
xchg
xlat
pop
mov
pop
js
gs
cmpsl
out
cmpsb
outsl
loope
insb
cltd
mov
add
setle
push
add
je
sub
inc
sbb
adc
fidivrl
mov
or
and
add
pop
cwtl
loop
mov
mov
pushf
xlat
stos
test
icebp
notl
push
inc
add
gs
cmp
push
arpl
popf
orl
jp
and
mov
jmp
insb
cmpsl
dec
mov
mov
sbb
popf
clc
mov
movl
flds
inc
shlb
call
mov
clc
pop
adc
ret
es
and
jo
addr16
das
lret
push
mov
cmc
loopne
xor
cmpsl
mov
fwait
sbb
iret
adc
xchg
adc
lret
insl
mov
fcompl
ss
ror
add
sub
mov
fdivp
movsb
push
xor
scas
cmp
push
adc
addr16
mov
jp
mov
outsl
xchg
lret
shrl
cltd
sub
cltd
rorb
inc
pop
mov
jmp
fst
xor
xchg
movsb
ds
mov
push
dec
sbb
lea
jb
fnstenv
add
xor
or
adc
xor
xor
cmp
inc
push
sub
jns
enter
mov
out
and
fidivl
fdivl
pop
push
ret
cmpsb
mov
xor
jcxz
mov
lods
jbe
out
rcrb
loopne
ret
xchg
movb
movsb
add
ljmp
pop
cmp
out
xlat
es
std
ja
rclb
popa
sbb
or
fwait
out
in
pop
sbb
or
add
pushf
lret
negb
int
mov
sti
pop
push
xchg
in
push
hlt
xorb
push
in
sti
cmp
les
leave
sarl
sub
fidivs
mul
test
jo
cmpsl
out
popf
dec
loop
cmpsl
or
pushw
gs
mov
inc
jp
js
cmpsl
push
adc
movsb
mov
ficoml
mov
xchg
into
lahf
das
fmuls
lock
sbb
push
adc
das
test
sbb
cltd
pop
pop
es
sub
add
les
fcompl
sarb
pop
mov
shlb
dec
int
lahf
pop
adcb
xchg
dec
push
imul
daa
out
pop
jp
and
fsts
dec
mov
fwait
leave
mov
sub
aaa
pop
push
aas
sub
es
mov
xor
xchg
jmp
flds
inc
inc
mov
push
adc
or
ret
dec
aam
push
inc
xchg
xchg
out
mov
icebp
in
addr16
inc
out
aas
bound
mov
pushf
jle
out
dec
decl
movsl
arpl
mov
outsl
aad
jb
mov
xor
push
or
fdivrl
dec
inc
outsb
inc
shrb
lods
faddl
ret
mov
mov
jns
icebp
and
push
cmp
stos
arpl
pop
cmp
and
lahf
inc
xor
sarl
lods
fiaddl
cltd
test
enter
fcoml
adc
pop
test
sub
push
mov
mov
mov
ficoms
add
pop
push
push
fcmovnu
mov
mov
scas
fnsave
mov
das
pop
ret
adc
xor
sub
cmp
cmpsb
shlb
mov
push
jg
or
fistpl
lods
rolb
ja
jp
mov
inc
cmp
dec
or
adc
xchg
pop
les
clc
add
jge
xchg
mov
arpl
cmpsl
and
jnp
cmc
jp
xchg
and
lds
sbb
repnz
mov
orl
mov
xchg
popa
xor
addr16
jne
pusha
lods
aaa
adc
pop
mov
mov
pusha
out
xlat
lds
mov
out
adc
imul
jae
and
test
iret
xor
push
mov
pop
inc
cmp
pop
out
push
xchg
sbb
and
sahf
shl
sahf
dec
fists
aam
movsb
pop
movsl
das
rclb
lea
sti
cmp
sti
lods
movsl
leave
dec
push
inc
rcl
lea
dec
fists
loope
jbe
out
dec
repz
dec
cmp
ja
inc
push
aam
cli
or
and
xchg
clc
popf
pop
fldt
rclb
lea
js
cltd
ret
sti
jmp
xor
stos
stc
outsl
shlb
fimull
push
and
mov
shrb
aas
sbb
pop
lock
jne
mov
or
mov
pop
and
bt
sbbb
pop
fnstenv
mov
arpl
mov
and
mov
mov
and
enter
or
xchg
xchg
xor
clc
xor
jg
out
repz
add
sbb
movsl
fdivrp
pop
fwait
pop
stos
mov
dec
inc
jno
xor
mov
lret
dec
xchg
add
shr
xlat
shlb
mov
lret
mov
hlt
cltd
dec
lds
scas
cld
jbe
filds
cmp
ret
mov
adc
hlt
cltd
aad
mov
xor
adc
inc
mov
repnz
xchg
fstps
pushf
int
or
sub
mov
cld
inc
inc
fiaddl
shll
dec
mov
dec
cmp
imul
cmp
pushf
mov
in
popa
mov
popa
mov
call
int
jnp
or
int
or
xchg
into
dec
lea
pop
test
aam
lock
or
enter
outsb
xor
cli
or
sub
mov
leave
ljmp
xchg
mov
lret
push
or
orl
dec
mov
and
das
test
mov
nop
mov
ljmp
out
call
push
dec
xlat
mov
insb
add
pop
cmpsl
fcomps
push
fucomp
pusha
ret
scas
in
dec
mov
or
nop
mov
inc
add
in
mov
hlt
or
ja
xlat
test
jmp
inc
cmp
inc
sbb
les
ljmp
or
pusha
daa
mov
or
in
mulb
addl
out
cmp
inc
ret
out
cli
xor
sbb
inc
sbb
subl
sbb
iret
xchg
stc
cmp
fdivs
sbb
mov
mov
cmp
add
inc
xor
jns
pusha
loop
repz
push
das
scas
gs
ret
inc
jb
and
mov
aad
mov
negb
rcrb
dec
ret
xor
inc
dec
xchg
ja
cmc
inc
mov
test
sub
sahf
loop
enter
sbb
and
lret
or
xchg
aas
insb
lea
imul
and
cmp
orl
xor
sbb
test
push
or
xchg
ss
jp
testl
in
dec
les
out
sub
dec
aad
or
es
jge
inc
movsl
xchg
lahf
jnp
stos
add
pop
mov
fwait
and
out
movsl
push
xlat
scas
sbb
out
dec
mov
or
mov
pop
xchg
popa
fistpll
es
pop
loope
mov
xlat
imul
inc
aaa
xor
imul
xchg
jge
dec
fcomp
test
div
insl
ret
outsl
cmc
rorl
push
aad
mov
js
jge
ja
dec
scas
aam
loopne
sub
push
andb
test
int
pushf
pop
mov
pop
into
aam
jg
rcll
stos
loopne
in
hlt
dec
ja
das
cltd
add
je
sti
or
xor
ljmp
sti
imul
cld
and
mov
test
icebp
adc
inc
mov
cmp
pop
push
pop
lahf
lods
loop
xor
outsl
sbb
aad
movsl
cwtl
inc
lock
jle
data16
pop
mov
fnstsw
rorl
enter
je
in
mov
scas
pop
fildll
dec
inc
sub
jo
inc
lock
scas
adc
sti
popa
sbb
dec
out
or
and
loope
cld
mov
inc
inc
insb
rcll
adc
roll
sar
sbb
adc
push
xor
sbb
sbb
adc
jp
mov
pop
dec
or
cmc
rclb
adc
cmpsb
cmc
and
sbb
stos
ja
mov
dec
mov
mov
loop
mov
in
jle
jne
mov
jae
push
cmc
mov
add
dec
dec
mov
sbb
lock
sarl
cmc
sbb
pop
call
sub
or
out
mov
movl
dec
xor
mov
pop
add
mov
ss
loop
cld
sahf
lea
pop
fimull
addr16
in
mov
jmp
int3
inc
sub
or
addr16
imul
dec
outsl
mov
adc
push
lahf
gs
icebp
fists
leave
in
xchg
rcr
jnp
daa
pop
pop
andl
aad
push
lods
loop
popaw
inc
sub
dec
mov
xor
adc
cld
pop
icebp
shll
adc
sub
pop
dec
les
les
add
cmp
icebp
mov
lock
xchg
lock
push
jne
xchg
lods
push
sub
push
data16
mov
fistps
pop
hlt
repnz
adcb
jbe
mov
mov
lahf
or
imul
sbb
inc
xchg
cmp
inc
or
xor
adc
sub
xor
add
and
sub
mov
push
shll
xor
fnstsw
mov
add
inc
leave
mov
pop
add
cmp
mov
outsl
cmpsl
jno
inc
lret
push
pushf
xor
lds
hlt
dec
movsb
push
cs
xchg
pop
xlat
xchg
xor
jge
mov
imul
push
adc
fadds
mov
and
push
mov
aad
lahf
out
xchg
pop
and
xchg
sub
and
push
jne
sbb
xor
fsubr
and
dec
test
jbe
mov
cwtl
outsb
or
xchg
sbb
jecxz
dec
mov
test
mov
leave
pop
xchg
pop
divl
mov
clc
adc
or
jle
imull
jge
ljmp
jge
es
inc
jb
data16
sbb
insb
adc
lds
jle
and
in
xchg
leave
and
sbb
jmp
push
cwtl
arpl
jbe
mov
sub
ss
fidivrl
loope
shl
jns
std
inc
cmp
mov
xchg
pushf
cmp
pop
xor
xlat
jo
daa
pusha
cmp
hlt
inc
mov
adc
dec
xchg
lea
sbbl
xor
push
enter
xor
mov
out
push
jl
push
clc
push
mov
mov
pop
jo
repz
arpl
cmp
andb
enter
subb
es
pop
andb
outsl
xor
cmpsl
mov
stc
xchg
les
jnp
ljmp
decl
mov
and
sti
push
out
sub
insl
dec
orb
in
pop
and
xlat
lahf
mov
inc
lods
fcmovnu
jl
dec
ja
loopne
inc
test
mov
call
imul
jbe
push
insl
movsl
out
jo
pop
jne
test
or
mov
sub
pop
xchg
adc
inc
fwait
mov
mov
xchg
imul
stos
xchg
push
or
inc
inc
or
mov
loop
aam
in
add
mov
pop
ljmp
call
jbe
dec
jg
push
insl
sbb
int3
mov
sbb
add
repz
add
pop
fmull
std
test
and
or
lea
sti
xlat
mov
xor
xor
cwtl
sub
dec
movb
mov
xchg
sbb
repz
call
xchg
mov
mov
xchg
and
and
outsl
cmc
mov
inc
fildl
sub
sarb
into
out
shll
cmp
cmpsl
int
daa
js
fisttpll
hlt
adc
xor
mov
adc
fists
jns
pop
mov
inc
push
lret
pop
jbe
sbb
ljmp
lea
dec
sahf
sub
insb
stos
sub
lret
imulb
ljmp
mov
clc
aas
mov
push
dec
scas
popf
dec
jns
pop
mov
dec
push
rorb
cmp
jnp
mov
mov
jmp
adc
popf
out
inc
inc
inc
lock
nop
mov
das
dec
xchg
adcl
js
or
push
mov
push
pop
xor
shlb
rorb
fsub
in
xlat
sbb
dec
popf
repnz
shlb
xor
mov
push
add
mov
mov
aaa
adc
or
pop
cmpsl
push
fs
sbb
nop
pop
xchg
out
iret
jbe
dec
xchg
xchg
lahf
adc
sar
insb
fcomp
jge
loop
test
pushf
daa
cmp
push
test
mov
out
dec
jae
cmp
popa
push
sahf
fsub
adc
call
pop
dec
fiaddl
subb
test
mov
mov
sbb
pop
cmp
cmpl
int3
loopne
mov
scas
fnstenv
loope
xchg
xchg
mov
jmp
jmp
and
mov
add
dec
imul
in
mov
pop
enter
xor
cmp
orb
adc
add
mov
dec
lea
loope
mov
in
jbe
push
or
add
adc
dec
xchg
testl
ret
xor
mov
clc
pushf
out
push
repz
jb
dec
adc
pop
xor
pushf
icebp
mov
ljmp
or
cmpl
jb
in
mov
push
xorl
add
bound
imul
adcb
rcrl
sub
cmp
lret
add
adc
and
xor
popa
mov
xchg
imul
shrl
loope
icebp
lret
add
adc
and
xor
popa
mov
xchg
imul
shrl
loope
icebp
lret
add
adc
and
xor
stos
gs
xchg
imul
shrl
loope
xor
add
mov
cld
leave
adc
push
push
inc
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
icebp
fdivrs
call
jmp
mov
outsb
out
inc
or
push
dec
sub
mov
clc
fwait
call
lret
mov
cmp
jns
push
dec
cmp
mov
mov
call
sarl
xor
sbb
ss
cmp
pop
fistl
jecxz
pop
addr16
mov
ret
mov
and
and
xchg
xchg
push
in
stos
fdivs
fmuls
mov
loop
les
xlat
or
cmpsl
adc
es
sub
movsl
aad
inc
fldenv
imul
les
jle
xchg
xchg
out
xor
mov
in
push
stos
adc
and
push
mov
mov
sub
or
sub
inc
aaa
rolb
out
in
adc
addr16
lret
test
cmpsl
les
xchg
push
push
mov
faddp
inc
push
loopne
xlat
jo
sub
lock
pop
les
sbb
stos
cmp
imul
enter
call
lret
mov
and
js
push
dec
cmp
fcomp
fidivs
fists
fcompl
cmp
sub
pop
insb
pop
dec
cs
ds
stos
mov
movsb
out
mov
mov
out
sahf
xchg
cmp
outsb
cmp
jge
sahf
cmp
jl
cltd
mov
xchg
stos
sti
mov
mov
cmp
js
push
dec
cmp
stos
fdivrs
call
lret
mov
cmp
js
push
dec
cmp
stos
fdivrs
rclb
out
dec
dec
cmc
adc
idivb
mov
and
lea
ljmp
adc
push
push
nop
pop
in
pop
sub
jns
out
notl
and
sub
lock
xchg
ljmp
dec
imul
flds
adcl
into
xor
addr16
enter
rcrl
pop
jl
lret
xchg
or
testb
adc
xor
outsl
push
cmp
xor
pop
mov
arpl
sbb
out
sbb
cmpsl
mov
rcrl
loop
cmp
dec
push
sub
pop
pop
hlt
stos
pusha
add
sub
pop
mov
addr16
push
push
nop
xchg
pop
cwtl
orb
daa
cmp
xor
aaa
add
inc
dec
das
fisttpll
jp
dec
sbb
sub
dec
sbb
pop
mov
pop
int
xor
inc
jl
cmpl
out
pop
push
cmp
push
lret
out
pushf
popa
sbb
xor
adc
aam
fstpt
idivl
jmp
dec
pop
pop
sbb
aas
fcmovnb
jmp
jmp
or
out
dec
mov
je
sub
mov
ljmp
stos
xchg
xchg
push
add
push
mov
xchg
sbb
jecxz
pop
and
inc
loope
and
ror
ds
inc
adc
out
inc
sahf
mov
push
ret
jno
das
inc
xchg
nop
sub
add
push
arpl
iret
mov
out
mov
into
sbb
jp
cmc
pop
in
mov
and
lea
sbb
mov
adc
cmp
sbb
sbb
pop
clc
adc
push
add
cmpl
clc
adc
mov
mov
ja
data16
into
mov
push
xchg
mov
adc
sbb
xor
and
lcall
add
decl
adc
jmp
mov
jns
fcmovnb
push
js
push
dec
rolb
push
std
lcall
lret
into
fdivrl
out
mov
rolb
loop
xor
out
push
or
ret
xor
lahf
or
add
add
mov
pop
and
pushf
mov
and
mov
jmp
js
add
loope
mov
sahf
pop
cmp
fstl
loopne
sbb
pop
xchg
push
xchg
cmp
subb
xchg
pusha
jnp
sbb
and
flds
cmp
sub
icebp
fsubrl
jmp
dec
ds
outsl
pop
fisubl
cmp
andl
out
lret
dec
mov
aas
mov
sbb
ret
jecxz
sub
and
inc
and
mov
push
outsl
add
gs
and
aas
mov
sbbb
mov
jo
in
out
dec
xchg
cmp
jmp
push
push
jne
fsubr
lcall
mov
dec
mov
arpl
je
shrb
int
cltd
cli
pop
pop
shl
aaa
dec
lea
clc
into
xchg
sub
std
pop
cmp
out
test
ret
sbb
leave
mov
dec
inc
aam
pmuludq
dec
das
adc
inc
in
fiadds
push
fs
dec
or
xor
mov
sbb
jmp
notb
and
or
xchg
repz
inc
adc
mov
loope
mov
mov
mov
loop
pop
xchg
xchg
aas
ljmp
mov
lds
pop
ja
xchg
lods
ds
or
push
repnz
lods
xlat
adc
pop
xlat
call
in
nop
push
jnp
pop
sbb
add
add
dec
add
jle
xchg
sub
test
push
mov
scas
movsl
push
xchg
popa
pop
mov
les
notb
jo
dec
jnp
das
lcall
in
das
repnz
and
mov
cld
fldl
xchg
cwtl
call
jmpw
sub
jecxz
push
cmpsl
mov
insb
add
cmp
push
loop
divl
cmpsb
add
lods
inc
push
adc
enter
ja
lret
sub
adc
mov
not
push
fucomi
sti
movsb
stos
mov
cld
outsl
out
and
fnstsw
push
stc
nop
xor
lock
cs
mov
pusha
std
ror
cmp
push
mov
or
in
pop
xchg
sbb
aam
xorb
dec
mov
clc
cld
xchg
ss
mov
out
cmp
lcall
mov
daa
inc
popa
fdivs
stos
jnp
cld
arpl
into
sub
sub
add
xchg
sahf
stc
or
and
adc
push
popf
sbb
dec
push
data16
dec
in
mov
dec
mov
popa
adc
orl
cmp
and
pop
or
lret
xchg
daa
lahf
push
cwtl
or
incb
imulb
jno
jae
pop
cmp
in
push
jae
ljmp
cwtl
inc
fdivl
shll
mov
imul
das
pop
es
and
inc
dec
mul
add
jne
xchg
xchg
lods
cli
and
repz
cmp
in
rcrb
cmp
mov
push
sbb
hlt
pop
pop
jle
test
shlb
inc
loop
inc
push
js
cmp
icebp
pop
sbb
pop
js
pop
lahf
lods
inc
cltd
fistpll
cmp
out
jns
jge
pusha
jmp
test
repz
or
pop
xor
cmpsl
mov
and
pop
inc
mov
fs
mov
popa
xchg
jp
or
inc
and
pusha
push
and
test
mov
movsl
cmp
xor
add
xlat
lods
out
call
shrl
cs
cld
sbb
lcall
mov
dec
rcrb
dec
test
lds
prefetcht2
test
jl
fcoms
sbb
popf
pop
nop
fcomi
adc
mov
pop
scas
lods
test
xchg
clc
jae
cmp
shll
mov
es
cwtl
test
pop
in
std
shll
inc
jno
je
xchg
mov
lock
addr16
daa
clc
cltd
jbe
int3
mov
outsl
ret
cmpsb
jmp
insl
je
enter
cmp
adc
mov
pop
lea
popa
inc
pop
xchg
out
cmp
xor
sti
dec
das
enter
scas
jns
sbb
jne
movsl
jmp
dec
jl
xchg
call
mov
xor
cmc
loop
ds
mov
jne
add
sub
sti
lds
and
lret
adc
sbb
or
daa
mov
lock
pop
loope
add
daa
cmp
call
cmp
int
sti
push
lods
pop
or
dec
scas
inc
enter
xchg
sbb
inc
mov
mov
jne
rdtsc
lods
ret
dec
dec
pop
jl
adc
cwtl
mov
mov
stos
push
iret
jnp
and
std
loop
repnz
or
dec
pop
sbb
test
mov
xor
jbe
push
aad
aas
add
push
stos
rorl
cs
stos
jmp
outsb
inc
imul
mul
cmpsb
and
insl
push
mov
jle
jmp
jle
mov
push
dec
es
ljmp
insb
dec
dec
pop
cld
and
iret
sarl
mov
insb
mov
inc
adc
mov
daa
lea
dec
pop
icebp
xchg
mov
mov
push
xchg
lds
mov
test
dec
pop
and
pop
ror
xchg
addr16
push
jae
loopne,pt
sahf
jb
fdivrs
out
xchg
sub
iret
repz
mov
outsl
fs
mov
inc
mov
mov
fisubs
out
cmpb
fst
push
lock
mov
fsubs
xchg
push
cs
or
sub
adc
jecxz
pop
dec
adc
cmpsb
sub
rolb
subl
mov
sbb
lret
pop
push
mov
ret
movsb
push
shrl
inc
lock
adc
push
inc
ss
and
roll
mov
sub
enter
lahf
mov
insl
xor
mov
xor
out
mov
mov
sub
movsl
loopne
aad
mov
xchg
jnp
mov
fs
clc
cs
xchg
out
cmp
sbb
mov
jno
insl
xchg
les
clc
out
add
fwait
ret
mov
sub
and
imulb
mov
push
sub
mov
nop
add
lds
je
xor
scas
xlat
mov
xchg
sbb
scas
pop
jg
loop
fiadds
leave
inc
popa
pop
mov
inc
jle
adc
movq
test
fwait
bound
in
push
cs
stos
push
pop
lahf
jne
stc
mov
or
cli
xor
stos
jbe
mov
sbb
popa
mov
movsb
push
xor
jb
aaa
xor
outsl
add
xchg
mov
mov
mov
xchg
fdivrs
adc
sbb
adc
insl
cmp
leave
mov
cmp
or
outsl
icebp
sub
popa
notb
orb
add
imul
dec
into
inc
rolb
pop
ja
xchg
xor
sbb
xchg
imull
mov
insb
imul
xor
push
addr16
inc
lods
add
andl
repz
add
out
and
scas
stos
add
jne
cmc
jl
ret
sub
sub
jg
sub
fisubl
push
std
in
ret
and
testb
js
jae
mov
mov
xor
mov
lret
or
jae
shrb
mov
pop
xor
mov
mov
pop
adc
inc
xchg
loopne
add
pop
inc
xchg
and
adc
push
aad
stos
add
insl
insb
fdiv
pop
dec
mov
xchg
sub
mov
pop
jg
addr16
std
aam
xchg
xor
sbb
shll
and
cmp
enter
popf
push
or
jl
movsl
and
mov
inc
jnp
push
int
push
inc
fidivs
mov
shlb
in
aaa
shlb
movsb
push
inc
aam
dec
outsb
xor
out
negl
incb
or
pop
jmp
xchg
popa
xchg
xchg
icebp
dec
pop
sbb
jb
jge
div
push
mov
pop
cltd
inc
cwtl
xchg
xchg
in
mov
sub
je
adc
xor
lret
adc
das
jg
sti
push
or
add
mov
imul
sahf
cwtl
not
sub
aad
enter
pusha
or
dec
dec
jnp
in
xorb
mov
mov
push
iret
mov
arpl
mov
push
out
popa
mov
enter
or
or
xchg
aad
movsl
lret
lea
adc
jle
sub
jns
sti
hlt
push
repnz
rep
pop
cltd
and
cmpsl
sar
movb
arpl
repnz
stos
bound
icebp
mov
pop
mov
icebp
shl
jae
hlt
xchg
fsts
push
ss
dec
xchg
pop
cltd
mov
enter
xchg
scas
jle
loopne
in
les
iret
aaa
repnz
scas
cmp
arpl
mov
pop
dec
or
xchg
nop
mov
les
or
movsl
popl
imul
and
push
nop
xlat
addb
pop
adc
dec
mov
sbb
xor
inc
dec
mov
call
in
mov
jns
mov
pop
jl
add
lret
or
dec
outsl
adcb
cmc
arpl
test
je
mov
arpl
pop
jno
mov
or
inc
xchg
mov
test
popf
in
xor
dec
insb
sub
outsl
cmp
rcrl
out
mov
bound
call
testl
pop
and
xchg
loopne
imul
pop
add
outsb
pushf
dec
xchg
stc
pop
dec
lea
or
or
movsb
into
stc
inc
clc
lods
stos
pop
lret
movsb
mov
sahf
push
and
idiv
loope
xchg
sub
cltd
xchg
and
mov
push
cs
bnd
lods
sti
jo
mov
sub
sbb
pop
in
add
xchg
mov
fistpll
loopne
push
pop
shll
xor
mov
pop
mov
mov
int
jge
push
cmp
lret
ds
aas
mov
std
inc
cli
repnz
jge
pop
aaa
mov
jbe
xor
push
daa
mov
inc
adc
jp
lret
test
lcall
fmuls
aas
mov
push
push
cwtl
in
insb
push
popf
push
clc
mov
fsubrl
insb
dec
dec
rolb
in
js
dec
dec
les
ss
sub
inc
test
sbb
mov
and
les
cmpsl
mov
stos
pusha
leave
ja
cli
xor
inc
push
je
test
inc
les
hlt
xchg
testb
push
xor
and
divl
popf
mov
stc
cmp
dec
stc
movsb
mov
stos
leave
pushw
add
stc
jle
sti
inc
aas
cmp
subl
lock
pop
sub
loop
xor
jp
mov
jne
inc
iret
add
mov
mov
dec
jne
imul
test
test
lock
inc
xchg
sti
movsl
pop
fbld
fisubrl
stos
mov
andb
movsl
mov
in
ds
fucomp
jbe
mov
cmp
shl
ss
fmuls
arpl
out
xchg
jle
mov
call
mov
loope
repz
lcall
and
testb
pop
mov
sahf
jp
add
inc
out
pop
popa
icebp
mov
es
es
mov
mov
sub
sti
pop
lret
push
scas
xchg
nop
mov
popa
pop
pop
xlat
int3
and
sbb
dec
jne
sbb
test
pop
insb
cld
jmp
jnp
and
xor
out
add
out
sbb
int
cmp
into
sub
dec
jb
push
test
rcll
les
roll
stc
dec
jns
mov
fsubrs
lock
inc
loop
cli
movsb
push
addr16
pusha
add
std
push
and
movsl
cli
push
push
hlt
or
cltd
int
add
mov
mov
test
xor
pop
add
or
mov
test
dec
mov
int
sbbb
pop
scas
jnp
jle
dec
inc
adcl
shlb
cld
int
gs
in
bound
icebp
out
lret
int
xchg
sbb
les
jns
push
push
je
outsb
fsubs
movsl
mov
scas
je
dec
rol
dec
arpl
push
pop
cltd
push
xor
bound
xchg
push
dec
fnstsw
and
jecxz
mov
pop
xor
negb
or
lods
xchg
add
faddl
xor
movsb
jae
mov
adc
iret
fstpl
dec
movsb
jne
sub
test
mov
cs
lds
lods
xor
idiv
lods
call
xchg
mov
paddusb
push
jmp
jo
dec
orl
mov
cmc
add
mov
ret
loop
pop
push
xchg
jmp
dec
call
cmp
fidivrl
jnp
sbb
mov
dec
cmp
rcr
jge
jl
shl
mov
in
rorl
mov
inc
lock
xchg
push
out
xor
rep
ret
fwait
sub
jnp
jnp
les
out
add
mov
or
fwait
imul
xor
pop
sub
cmc
sbb
dec
sub
mov
cmp
mov
pop
lods
fs
mov
or
xor
cmp
fwait
in
lock
adc
sti
mov
jle
jle
inc
xor
lahf
mov
pop
fs
out
inc
cmp
frstor
jg
mov
leave
stos
jl
test
addb
add
jno
xchg
mov
lock
icebp
test
int
xchg
jge
lods
add
jae
andb
lcall
xor
lea
outsl
inc
xchg
pop
mov
cmp
or
testl
fistpl
sub
out
mov
enter
jp
xchg
jae
xchg
pop
pop
sbb
xchg
sti
pusha
das
pop
fidivrs
sub
push
inc
push
sti
pop
mov
lcall
xchg
dec
mov
push
mov
push
ss
inc
or
xlat
sbb
idivl
adc
clc
outsl
dec
popa
pop
rep
lea
mov
fdivrl
mov
push
cmp
jmp
jbe
add
into
imul
mov
fistps
push
inc
ret
inc
mov
or
shll
adc
aad
jecxz
imul
fldl
shll
loopne
xor
cwtl
je
stos
shl
and
imull
mov
fildl
push
test
sub
mov
mov
sub
xchg
imul
dec
stc
ret
and
or
fwait
shll
out
push
push
lahf
fbstp
pop
pop
insl
mov
lock
jo
mov
sbb
imul
ss
leave
sub
pop
fst
lock
add
sub
sbb
rorl
iret
push
dec
or
addr16
mov
pop
rcrl
icebp
shlb
in
pop
hlt
or
lea
mov
sbb
fwait
rolb
inc
scas
cmp
stc
test
loop
sbb
adc
scas
xor
pop
inc
push
std
clc
jne
lea
sbb
dec
bound
mov
nop
mov
push
push
push
mov
and
or
sbb
ror
pop
shrl
es
sub
xchg
out
xor
add
cs
fidivl
mov
rorb
les
or
sbb
std
pop
mov
test
mov
sbb
sahf
xor
mov
jmp
fstpt
jg
gs
movsl
daa
and
loope
testl
and
add
dec
sbb
es
inc
and
clc
lret
imul
mov
into
data16
jne
pop
cli
les
outsb
mov
outsb
nop
cmp
loopne
adc
mov
aaa
std
les
adc
out
xor
add
roll
jle
mov
sub
sbb
inc
push
xor
pop
mov
and
loope
shl
inc
das
lods
movsb
push
adc
movsb
data16
mov
xchg
adc
mov
mov
imul
pop
inc
je
dec
out
push
lret
and
push
push
dec
testb
fsub
mov
test
xchg
push
ficomps
or
xorl
jle
xchg
cmp
dec
jmp
cmpsl
inc
sbb
mov
das
jns
cmc
push
dec
ds
and
push
js
pusha
cmp
dec
rclb
mov
inc
sub
mov
mov
adc
iret
outsl
fwait
decb
movsb
or
push
repz
jbe
lods
or
push
or
pop
movsb
stos
fists
xchg
flds
fld
addr16
sti
jno
addl
jbe
push
loop
pop
push
push
icebp
fnstcw
jbe
movsb
ret
pop
repz
shrb
dec
and
call
sub
sub
push
xchg
add
mov
cli
add
mov
lcall
scas
leave
jmp
xchg
ret
mov
gs
insl
push
out
and
fsubl
jbe
jnp
jecxz
and
sbb
loope
sub
inc
jne
out
lret
test
mov
dec
add
mov
push
mov
clc
in
cmc
lret
in
xchg
hlt
adc
sub
out
add
movsl
outsb
loop
insl
in
sbb
enter
xchg
push
sbb
push
jmp
dec
scas
sub
sub
and
rol
sbb
xchg
in
mov
dec
jg
rcrb
mov
jns
das
mov
or
dec
in
jno
sbb
push
xchg
int3
ret
inc
lods
gs
popf
sbb
imul
xchg
leave
and
js
push
sub
dec
adc
scas
jl
es
cmp
lret
push
pop
test
es
jno
cmp
sbb
push
test
fadds
inc
pop
adc
rorl
ss
sti
lock
es
jp
fsubs
and
dec
mov
dec
push
xor
cmp
cmp
cmc
jno
cmpsl
xchg
loopne
sbb
loopne
int3
pop
in
mov
and
sbb
jl
inc
push
orl
data16
loopne
cmp
xchg
js
lock
jbe
sbb
mov
cmc
arpl
pop
mov
lock
arpl
sub
mov
inc
mov
or
sahf
pop
inc
lds
mov
inc
cwtl
aad
lock
div
stos
push
sarb
call
movsl
rcrl
add
jbe
sbb
in
adc
ljmp
aas
js
es
cmpl
jo
add
push
jno
inc
adc
into
fldcw
sub
clc
xor
adc
dec
add
out
xor
out
insb
repnz
cvtps2pi
lods
mov
loop
shll
mov
dec
add
mov
xor
dec
push
pop
xchg
in
push
push
or
das
lds
mov
mov
shrl
test
paddd
xchg
xchg
inc
enter
call
lret
mov
cmp
js
push
dec
cmp
stos
fdivrs
call
lret
mov
cmp
js
push
dec
cmp
stos
fdivrs
call
lret
mov
cmp
js
push
dec
cmp
lahf
fmuls
call
dec
mov
sbb
sbb
repz
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
