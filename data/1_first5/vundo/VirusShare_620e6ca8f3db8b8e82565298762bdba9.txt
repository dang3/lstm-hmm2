push
cld
or
shl
or
push
pushf
or
shlb
add
or
shlb
add
in
add
les
mov
add
jmp
pushl
popl
xor
jmp
push
xor
mov
mov
mov
push
popl
ja
push
mov
sbbl
pop
lods
mov
orw
je
push
mov
andl
addb
subl
xorl
pop
pop
ret
push
jmp
lea
aas
dec
push
fbld
nop
xor
mov
fisubrs
sbb
mov
inc
mov
lcall
jmp
test
popf
jg
je
mov
cmpsl
adc
jo
sbb
fwait
push
out
inc
inc
mov
sarb
mov
lahf
rorb
in
jne
movsl
mov
in
dec
mov
add
push
push
push
jmp
mov
add
nop
xor
pop
push
add
pop
xchg
xor
mov
xchg
int
insl
jle
xor
sbbl
iret
push
imul
push
sbb
scas
or
jmp
cli
jnp
pop
stos
and
mov
mov
pop
sahf
movb
test
fstp
xchg
push
nop
adc
and
cs
mov
mov
add
pushl
push
sub
sub
popl
mov
mov
add
add
mov
add
xor
lea
movl
jnp
call
fwait
iret
aam
cmp
mov
loopne
les
ftst
cmpsb
ds
dec
mov
xchg
mov
or
xchg
xor
push
dec
mov
dec
jnp
cmp
mov
outsl
xchg
ss
jl
lods
add
jg
es
les
orl
xor
aas
test
pop
mov
lahf
mov
add
inc
subb
add
mov
add
mov
movl
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
orw
movzwl
mov
add
mov
add
pop
sbbl
jno
push
mov
sbbb
orw
sbbl
subl
pop
cmp
jbe
cmp
jae
pushl
sub
pushl
push
rol
lea
mov
sub
xchg
addl
jmp
adc
jns
jecxz
dec
loopne
insl
sbbl
xchg
stos
aas
into
ret
and
lock
sbb
pop
rdtsc
lahf
clc
jae
mov
and
dec
xlat
imul
movsb
pushl
call
call
pop
pop
pop
pop
mov
leave
ret
call
test
jne
ret
push
jmp
or
mov
push
xchg
fcomps
das
lds
cmp
ja
mov
sbb
sbb
nop
je
lret
daa
int
loopne
ret
mov
daa
sub
pop
aam
ret
aas
jno
and
ds
push
lcall
push
push
sub
fistps
sbb
pop
inc
clc
insb
daa
pop
fnsave
cmp
push
mov
add
jb
call
xchg
sub
pop
add
dec
cmp
add
aam
jb
mov
nop
jmp
outsb
mov
push
ja
in
push
movsl
sbb
sub
inc
sbb
xchg
push
mov
pop
dec
and
push
lods
pop
inc
test
shr
sub
add
call
push
add
mov
sub
xchg
addl
orl
push
call
push
push
lea
ror
dec
mov
add
xchg
mov
pusha
call
mov
push
push
ror
mov
xor
pop
addl
push
call
push
popl
jge
call
add
clc
int3
cmpsb
jl
jmp
enter
test
cmp
mov
shll
movsb
add
jle
sbb
mov
mov
mov
sti
outsb
sbb
rcrb
push
pop
loopne
xlat
inc
les
clc
lods
jecxz
push
loop
sahf
dec
jae
out
xor
jp
jg,pn
int
pop
adc
cmp
cmp
popl
cmpl
jne
jmp
jmp
popa
push
and
and
popl
mov
pusha
call
mov
push
shr
dec
mov
add
xchg
addl
push
call
mov
sbbw
mov
xor
xor
rol
inc
dec
jne
cmp
je
cmp
jne
popa
shl
push
xor
jb
push
mov
andw
andl
pop
xor
push
call
int3
jmp
popa
shl
push
jmp
mov
in
mov
lea
cmp
rcrb
add
mov
scas
insb
cmp
inc
jmp
lcall
dec
test
mov
sub
aas
dec
cmpsl
inc
and
sbb
stc
std
loop
lods
bnd
test
bound
lock
mov
and
aad
xor
push
call
push
mov
push
jmp
pop
push
popl
mov
push
push
push
mov
mov
rep
pop
pop
push
push
add
inc
mov
xor
pop
push
rol
mov
add
xchg
jmp
sbb
add
and
lea
or
add
mov
push
daa
divb
out
sbb
jl
and
dec
frstor
dec
or
fldenv
out
xor
dec
xor
jmp
sub
mov
add
sub
jmp
xchg
jno
shrl
dec
sub
cmp
decb
adc
in
dec
ja
mov
in
add
cmp
pop
jbe
jb
mov
outsl
loopne
xchg
jl
or
pop
pop
pop
movsb
mov
fisubrl
or
es
outsb
scas
mov
mov
mov
add
or
jne
jmp
add
dec
out
jg
imul
pop
ret
rorl
jne
mov
push
xor
ss
cwtl
fcoml
icebp
insb
das
scas
add
jge
mov
cmp
sub
push
sub
repz
popa
xchg
leave
sub
fimuls
cwtl
xor
jge
and
into
xor
mov
mov
add
jmp
mov
shr
shl
mov
jmp
andw
je
call
inc
sub
push
je
push
test
adc
std
hlt
loopne
mov
cltd
dec
outsb
jmp
inc
inc
jge
pop
xor
or
outsl
push
cmp
pop
inc
push
pop
mov
adc
loop
mov
jp
movsb
sbb
sbb
stos
mov
shrl
push
adc
push
xchg
push
ret
das
adc
cltd
cmp
popl
sub
mov
cmp
jne
mov
add
cmpw
jne
ret
call
out
divl
or
lea
mov
sbb
xor
push
xor
xor
mov
loopne
mov
mov
cld
aas
call
mov
loopne
inc
push
int
int
xchg
push
push
push
fimull
ficoml
mov
stos
pop
inc
cmp
mov
add
pop
popl
rcrl
cwtl
daa
imul
sub
div
ja
mov
rcrb
xchg
cli
lret
or
jecxz
xlat
int3
jge
daa
loopne
adc
inc
cwtl
daa
cmp
pop
rcrl
cwtl
daa
pop
dec
add
mov
or
push
dec
mov
cmp
mov
mov
imul
pop
and
fwait
xchg
fcomip
jmp
lret
push
hlt
in
dec
out
fldl
stos
cmc
push
aaa
mov
mov
sahf
xchg
pop
popa
mov
popf
lret
data16
push
repz
add
jecxz
push
ret
xor
in
rolb
push
mov
data16
es
adc
mov
cmpsl
mov
or
decb
cmpb
sub
jp
cmp
sub
lods
sub
mov
pop
aaa
gs
les
mov
fcoms
pop
adc
pop
mov
inc
pop
das
xor
in
fnstcw
fisubrs
push
push
rolb
arpl
sub
daa
loopne
add
adc
test
jae
and
in
dec
add
push
jo
fisubl
outsb
xor
mov
popf
lcall
jnp
loop
ret
ja
imul
cmc
pushf
inc
fildl
sbbl
ret
test
sbb
jnp
mov
mov
and
push
inc
pop
faddp
xlat
sub
push
hlt
ljmp
push
sbb
mov
jge
xchg
sub
mov
clc
sub
sub
mov
in
sub
jecxz
jbe
or
shlb
adc
jb
mov
dec
gs
xor
mov
ss
mov
adc
loopne
push
aam
inc
push
dec
loopne
add
lds
mov
loopne
or
push
jmp
add
rolb
stos
xor
out
sahf
sbb
fdivr
aas
sbb
in
and
cld
aas
aad
mull
or
mov
add
shr
ss
jg
mov
cs
mov
movb
lret
mov
pop
jmp
adc
inc
pop
jns
xchg
add
lcallw
and
cmp
lock
icebp
repnz
shlb
pop
decb
push
enter
sub
movsl
xchg
aaa
sub
sbbb
mov
movsb
inc
pop
test
mov
pop
sbb
in
push
int3
vpsubw
in
scas
sub
add
cmp
cmpsb
and
add
stc
out
es
xlat
sti
aas
sbb
call
aas
cwtl
add
insb
mov
mov
xchg
xchg
add
mov
sub
lcall
js
cmp
nop
fisubrs
and
mov
xchg
and
mov
fdivr
aas
and
leave
std
mov
cld
call
mov
stos
ror
lcall
repnz
fsts
ss
addr16
addl
mov
stc
shll
mov
aad
adc
push
adc
sbb
add
bound
push
cmp
insb
loopne
movb
rcrb
lea
jp
in
pop
out
movsb
push
jp
sub
pop
cwtl
daa
loopne
sub
sub
jns
nop
stos
fmuls
cmp
mov
aad
pop
dec
sub
daa
loopne
lock
out
mov
xor
in
lods
mov
das
data16
lds
aas
inc
xlat
add
fwait
cmp
adc
sub
pop
mov
fdivr
aas
pop
ret
in
mov
bound
push
sbb
in
mov
jbe
pop
jb
sbb
dec
inc
pop
pushf
les
sub
mov
xor
cwtl
repnz
cmp
xchg
dec
cmp
jo
adc
outsl
inc
and
les
imul
cltd
and
out
jbe
sbb
shlb
jns
mov
fstpt
mov
sbb
std
mov
xor
dec
fidivl
popa
jge
pop
ss
imul
hlt
adc
ss
bnd
mov
or
sub
lcall
loopne
add
addb
cmp
divb
aas
inc
cmp
test
sub
sub
daa
loopne
or
or
xchg
lock
les
pusha
addr16
jp
faddl
fnstsw
iret
lcall
xchg
gs
lock
xchg
lret
lods
fadd
out
xchg
dec
pop
icebp
pop
and
xchg
ljmp
addb
mov
loop
cmp
or
pop
add
daa
leave
es
cld
cmpsl
mov
sbb
cmp
fdivr
aas
stc
fdivp
ja
into
in
lahf
jne
scas
cld
xor
imul
or
inc
lcall
and
inc
cwtl
stos
mov
sub
test
xor
cltd
inc
xchg
adc
std
pop
xchg
movsb
shrb
leave
add
int3
sbb
in
mov
ljmp
aad
loopne
add
subb
std
cld
aas
cwtl
aaa
sub
fndisi(8087
outsl
xchg
push
ss
loopne
pop
stos
fbstp
popf
xor
popf
and
inc
jl
insl
sub
testb
aas
jle
xor
daa
sub
orb
push
ret
sub
hlt
outsl
adc
jp
mov
mov
mov
shlb
adcb
add
or
cld
nop
addl
nop
pusha
fsts
shrb
lods
adc
mov
in
fcoml
in
fwait
outsl
add
imul
nop
adcl
jne
adc
jns
inc
add
jb
push
dec
je
lock
int3
pop
xchg
std
push
pop
or
out
sub
mov
and
dec
loopne
pop
xor
jnp
lcall
cmc
mov
loopne
cmp
push
lahf
mov
xchg
push
mov
or
int3
lds
scas
mov
adc
mov
dec
enter
xchg
sub
sahf
sub
add
fstpt
or
sub
flds
fdivr
xor
sub
mov
ret
outsb
mov
dec
ret
sub
and
xlat
push
in
xor
cmp
outsb
inc
daa
mov
pop
sbb
in
lods
jg
fs
adc
popf
out
sub
stos
sbb
loopne
sub
or
sub
push
shlb
cwtl
daa
cmp
cwtl
daa
sbb
scas
xor
arpl
add
ficomps
mov
cmpb
dec
sub
loopne
sbbl
and
daa
push
lret
pop
testl
imul
rsm
hlt
shll
nop
popa
movsb
dec
mov
ret
outsl
adc
jnp
cmc
jmp
push
pushf
jno
mov
add
outsb
mov
cmp
mov
mov
push
mov
loopne
pop
enter
inc
sahf
pushl
movsb
mov
push
and
mov
xchg
xchg
cwtl
loop
rclb
mov
std
add
lods
pop
and
mov
shrb
inc
frstor
adc
ds
sbb
pusha
mov
jmp
fdivs
inc
xor
xorl
mov
xor
jp
loopne,pt
test
mov
cmp
xchg
jnp
mov
mov
adc
sub
fwait
jg
adc
mov
xor
and
mov
and
mov
sub
aas
push
aas
insb
fmull
cmc
lret
fmuls
fs
adc
ja
mov
adc
and
jb
fcompl
xchg
fmull
or
mov
dec
jg
outsl
pop
testl
cmpsl
pop
jle
dec
cmp
in
dec
mov
ja
fwait
or
sbb
inc
fwait
add
mov
ja
mov
mov
hlt
jmp
cmpsl
scas
or
or
popf
cwtl
xchg
xchg
sub
aas
push
jb
adc
mov
outsl
cmpb
iret
fldl
stos
add
ds
fdivrl
mov
xchg
pop
dec
lahf
ret
fcoml
fdivrs
cli
push
loopne
pop
ret
xor
lock
fisubl
adc
inc
test
sbb
dec
imul
pop
lods
enter
pop
repnz
mov
outsl
lock
out
popf
or
out
pop
movsb
pop
cmc
and
xchg
push
imul
popl
mov
out
addr16
mov
cmp
jnp
cli
xorb
dec
lcall
cmp
sbb
push
inc
and
push
xor
push
jle
cmp
dec
sar
fmul
fs
sbb
loopne
add
dec
nop
pop
adc
mov
out
repnz
or
mov
addb
xor
arpl
cs
sub
sbb
inc
dec
push
push
std
sub
rcl
into
cmp
dec
add
cmp
inc
sbb
sub
daa
loopne
mov
in
add
xor
insl
cmp
jge
jge
cmpsw
fidivs
and
imul
sub
xor
rcrl
adc
rolb
xchg
in
in
or
mov
mov
cmp
lahf
fxtract
or
sbb
test
xor
pop
add
in
fistpl
sbb
sbb
dec
push
jmp
cmp
jne
mov
popa
loopne
add
adc
push
ficomps
adc
cmp
cmp
pop
bound
cs
add
imul
mov
dec
fs
lods
push
xlat
in
movsb
mov
xchg
ret
out
lcall
sti
jbe
insl
fsubl
adc
pop
lahf
mov
clc
mov
insb
test
into
test
in
roll
and
dec
xor
notb
in
xor
movsb
aas
iret
mov
lcall
loopne
in
lcall
mov
pop
lahf
or
xor
stos
daa
loopne
outsb
mov
xlat
cmpsl
adc
cmpb
mov
jnp
inc
xor
out
in
aaa
addr16
xor
in
aaa
ret
and
sub
out
and
shlb
call
mov
mov
pop
xchg
mov
outsl
jb
inc
stos
jnp
cltd
daa
insl
int3
and
nop
sub
jmp
inc
xor
mov
mov
xchg
in
cmp
out
xchg
xchg
mov
or
sub
fmuls
cwtl
es
sahf
jmp
ja
mov
xor
mov
outsb
mov
or
sbb
cwtl
sub
sahf
push
sub
loopne
adcl
cmpsl
stos
fwait
mov
xorb
add
adc
pusha
jp
jo
insb
inc
das
mov
sahf
add
fiadds
adc
push
stc
mov
fcompl
push
scas
gs
out
cmc
xchg
mov
je
push
cmp
ljmp
lcall
pop
flds
or
xor
pop
push
test
idivl
stos
clc
mov
fisubrs
out
mov
mov
mov
cmc
idivl
test
outsb
pushf
sahf
in
cmp
mov
add
mov
mov
xorb
mov
addl
jge
movsl
push
xor
push
push
in
mov
push
inc
test
popa
cld
ret
iret
mov
out
cmp
mov
pop
loop
jns
out
push
pop
mov
bound
jl
add
loopne
decl
sub
xor
mov
push
repz
aas
cwtl
inc
repz
push
jb
mov
xchg
mov
repz
inc
movsb
out
cwtl
mov
add
add
push
stos
jmp
mov
and
lods
test
mov
sub
fldcw
loop
xchg
in
xor
out
stc
pop
es
mov
sub
sub
mov
loope
mov
outsb
jmp
adc
mov
cmp
scas
test
dec
jp
outsb
pop
sub
xlat
inc
cld
mov
jmp
call
pop
or
into
jnp
les
imul
aam
push
imul
mov
and
dec
repnz
mov
loopne
aas
stc
mov
lcall
cmp
add
jb
dec
cmp
dec
out
or
mov
mov
dec
clc
sub
push
sti
in
outsb
dec
sbb
mov
pop
icebp
xor
add
cltd
out
fimuls
daa
iret
jecxz
sbb
ja
mov
or
rorl
cwtl
daa
fiaddl
sub
pop
cltd
adc
mov
or
inc
and
mov
sahf
aad
sub
or
sub
cmp
rorl
lds
mov
ret
sub
inc
or
mov
inc
lcall
add
fldt
and
xchg
and
mov
jmp
dec
mov
dec
repz
outsb
es
jnp
mov
mov
inc
pop
js
mov
das
mov
mov
inc
pop
cmpsl
subl
nop
stc
lret
iret
mov
and
mov
lahf
arpl
mov
mov
out
pop
add
fwait
sbb
cmp
sub
dec
mov
aas
cwtl
xchg
iret
test
and
popf
filds
mov
lods
pop
sbb
scas
pop
mov
pop
sbb
pop
stc
push
mov
mov
sbb
cmc
cwtl
mov
adcl
or
push
lret
test
xor
repz
adc
loope
dec
movsl
lcall
stos
test
out
sbbb
add
inc
pusha
inc
inc
and
in
ss
inc
je
out
mov
arpl
and
movsb
repnz
cmpl
ret
pop
clc
das
cmp
pop
shr
incb
lds
fadds
mov
repnz
adc
std
pop
movsl
mov
je
das
jae
jne
jbe
ret
insb
fxch
xchg
push
in
jge
scas
rcll
jne
dec
fsts
sub
stos
popa
sti
insb
dec
xlat
mov
push
jl
popa
cmpsb
and
adc
es
mov
jl
inc
cwtl
es
shl
mov
daa
loopne
jmp
roll
fisttps
inc
int
rorb
aad
dec
cmp
ret
mov
dec
mov
jp
jns
pop
nop
push
or
pop
mulb
mov
mov
enter
jb
cmp
inc
pop
or
mov
pop
hlt
call
into
sarb
roll
daa
test
sbb
inc
aam
test
arpl
and
leave
mov
push
movsb
lods
inc
js
adc
clc
bound
push
jnp
enter
cmp
lds
push
or
test
loopne
outsb
xor
mov
add
movsb
ret
cmp
push
int
rcll
lods
pusha
popa
in
dec
mov
push
push
das
mov
mov
inc
imul
fcomi
inc
adc
pop
sahf
inc
cwtl
daa
lret
lds
es
imul
test
pop
movsl
jg
mov
gs
add
push
out
mov
loopne
and
jnp
daa
loopne
fcmovb
xor
hlt
clc
mov
fsubrs
xor
test
ss
movsb
dec
dec
xor
cli
mov
das
fucom
xor
fistpll
adc
out
imul
push
xchg
inc
sbb
les
xchg
roll
je
push
jecxz
cmpsl
xchg
adc
test
int
pop
mov
fisubrl
scas
adc
lds
cwtl
cmpsl
xor
insb
in
and
daa
fists
adc
pop
ret
lcall
jns
xor
pop
fcompl
into
or
enter
cld
sub
ror
xchg
data16
test
or
je
push
xlat
int3
fwait
addl
loopne
shlb
lea
or
ja,pt
push
xor
subb
fildll
mov
test
aas
cwtl
push
mov
dec
sbb
or
andb
pushf
daa
loopne
xor
cld
aas
or
pop
lods
xlat
cmp
lret
cmp
dec
addl
dec
mov
dec
jns
orb
daa
or
mov
cwtl
mov
lods
mov
mov
and
inc
cwtl
daa
leave
fildl
fdivr
lahf
inc
or
push
push
push
je
popa
push
cmp
int3
movsb
xchg
divb
xchg
or
push
jge
push
cmp
hlt
xchg
in
jl
std
pop
push
stos
mov
das
test
mov
sarl
sbb
push
mov
les
xchg
lods
push
scas
insb
cwtl
call
repnz
iret
sbbb
sbb
jae
mov
adc
mov
shrb
stc
ljmp
aas
stos
inc
inc
mov
cmp
push
pop
push
imul
inc
sub
shrl
mov
cltd
cli
mov
das
and
adc
sbb
ja
push
xor
out
pop
stos
sahf
popf
aaa
mov
sarl
pop
mov
in
add
dec
push
aas
enter
xchg
xor
push
lods
jns
mov
jge
hlt
cmp
dec
popf
push
pusha
shll
cwtl
daa
adc
aaa
out
xchg
repnz
imul
loop
mov
clc
jmp
jmp
pop
arpl
bound
lret
inc
call
ret
adc
orl
mov
and
stos
imul
inc
add
mov
cld
aas
lock
mov
jae
fsubr
pop
sub
jmp
pop
js
dec
mov
arpl
sub
clc
ja
pop
hlt
and
mov
inc
jg
popf
adc
mov
pop
xlat
in
daa
scas
push
ret
imul
les
data16
and
mov
adc
iret
scas
inc
cmp
xor
add
push
xchg
imul
gs
daa
loopne
inc
push
stc
pop
pushf
sbb
jecxz
mov
cmp
mov
mov
les
inc
fisttpl
mov
popf
stos
and
inc
cwtl
daa
mov
cmpsl
push
push
xchg
jmp
out
in
xchg
inc
push
cmp
mov
sub
fbld
in
xor
cmp
sti
sub
daa
loopne
scas
aam
and
icebp
xchg
push
fnstsw
pop
sub
in
fwait
leave
fistpl
dec
xchg
adc
loopne
push
loopne
insb
pop
jns
in
pop
adc
pop
sahf
popa
ljmp
clc
inc
shlb
je
and
jae
lahf
dec
ficoms
out
dec
dec
and
imul
jge
int
imul
imul
popl
fildl
mulb
sub
clc
or
sti
test
xor
xor
je
xchg
aam
lods
mov
mov
and
dec
movsb
loop
shrb
sub
inc
loopne
decl
aas
push
cmp
pop
or
daa
dec
fldenv
mov
dec
cmpl
adc
repz
mov
dec
mov
sahf
adc
movsl
sbb
mov
dec
adc
xor
adc
loopne
adc
lock
mov
ds
xor
stos
fcomps
jmp
idivl
addl
adc
sbb
adc
les
cs
pushf
mov
in
xchg
and
daa
popa
lahf
adc
sbb
ds
inc
arpl
enter
sub
ud2
sub
push
cmp
inc
sbb
dec
test
dec
rcrl
sub
inc
loopne
decl
aas
push
cmp
mov
fdivr
jae
mov
dec
adc
sbb
pusha
push
loopne
popf
in
mov
bound
mull
outsl
dec
mov
sti
test
dec
lods
cmp
inc
or
lcall
add
xchg
js
loopne
pop
mov
push
cld
adc
iret
je
mov
movsl
inc
mov
out
test
add
or
mov
js
mov
and
sub
cwtl
daa
dec
or
rcrl
sub
mov
add
sbb
mov
push
addb
jno
xchg
popf
in
mov
cld
aas
cltd
jl
inc
cmpsl
xchg
add
xchg
aad
rcl
les
sti
adc
in
mov
mov
arpl
mov
rcrb
fidivl
adc
mov
stos
das
mov
xchg
ffreep
fcmovnu
inc
sub
fdivr
mov
lret
mov
out
insb
or
sahf
arpl
pop
scas
jmp
mov
jp
in
and
dec
jno
enter
stos
movsb
or
stc
fs
rorb
rorl
mov
pop
in
jae
int
and
or
inc
cld
inc
cwtl
daa
fists
or
xchg
cmp
add
cld
xchg
insb
cmp
xchg
xor
imul
cmc
mov
aaa
sarl
add
testb
sub
inc
adc
mov
mov
dec
fs
push
std
mov
sbb
mov
mov
jns
jae
mov
mov
cld
mov
jl
sbb
cmc
movsl
mov
mov
aam
leave
into
xchg
lock
push
inc
push
inc
cld
jmp
imul
push
add
insl
insb
xchg
mov
out
cmpxchg
cwtl
daa
loopne
imul
dec
cli
or
xchg
div
movsl
lahf
repnz
xor
orl
movsb
scas
or
mov
cmp
out
out
inc
lds
mov
fdivr
aas
aaa
sahf
jne
in
sti
mov
xor
insb
out
add
lahf
mov
lods
push
inc
pop
arpl
xchg
andl
cmp
in
leave
inc
push
or
cmp
or
inc
sbb
aaa
pop
inc
jae
adc
inc
xchg
inc
inc
xlat
std
mov
lcall
inc
scas
add
xchg
cmpl
xchg
clc
repz
cmp
xor
jb
jne
rclb
lret
or
fdivr
pop
add
and
fidivs
xor
mov
mov
sub
int
sti
cmp
inc
jl
cmc
or
mov
cmp
lcall
adc
fadds
mov
pop
cld
aas
cwtl
sahf
adc
clc
mov
insl
outsl
mov
cmp
test
xchg
xchg
test
out
int
xchg
loopne
push
sbb
push
xor
and
add
inc
arpl
xchg
add
xorb
xchg
pop
call
bound
fdivr
fwait
testl
sarb
gs
add
outsl
xor
push
leave
adc
xor
movsl
daa
xor
mov
jmp
test
dec
mov
push
adc
inc
pop
fisttps
xchg
pop
lods
pop
shrl
sar
roll
jle
mov
pop
add
push
repnz
lret
fsubrl
xchg
add
mov
xchg
dec
sbb
iret
imul
mov
inc
ja
popa
ljmp
out
adc
mov
adc
mov
inc
cmpb
xchg
daa
add
mov
cs
mov
xchg
xchg
fdivl
ret
fnstsw
pop
push
in
das
or
shll
movsb
inc
data16
loopne
mov
push
hlt
inc
jmp
mov
ret
push
lahf
std
pop
dec
aas
aas
mov
jo
pusha
mov
jbe
int3
or
cmp
jmp
aad
mov
sub
movsb
mov
stos
jmp
cmp
out
daa
movsl
je
imul
pop
inc
sub
pop
cmpsl
and
push
loop
mov
pop
mov
mov
pop
aaa
or
daa
inc
cwtl
daa
lret
leave
jb
jo
pop
rcr
inc
jge
les
xor
sbb
and
daa
fmulp
push
sbb
lret
cmp
test
inc
adc
cmpsl
lods
aad
add
out
lock
scas
cs
mov
push
pop
pushf
leave
xchg
out
scas
mov
jge
lods
mov
in
or
js
inc
in
xchg
cld
sub
inc
scas
jle
ss
lds
je
lds
int
mov
push
jmp
stos
pusha
pop
xchg
adc
mov
push
stc
es
xchg
jl
outsl
add
pop
mov
xor
gs
sub
cmp
xor
out
aaa
push
pop
adc
or
rcll
lret
test
push
sub
loopne,pt
jmp
filds
out
clc
adc
sbb
jecxz
daa
mov
sbb
movsl
int3
pop
fsubrl
or
pop
clc
xor
aaa
mov
fistps
imul
notl
xchg
daa
dec
and
jae
jnp
inc
sub
rclb
inc
cwtl
ja
push
into
daa
loopne
add
dec
bound
mov
xchg
xchg
pusha
sub
push
mov
test
fnstenv
cmp
dec
bound
and
mov
cmp
push
and
cld
aas
cwtl
and
cmc
lock
mov
cwtl
mul
xor
xchg
mov
adc
mov
ss
cmc
lea
xor
ret
or
rcl
and
repnz
jns
jae
pusha
not
xor
xchg
out
mov
bound
loopne
and
andb
loopne
push
adc
scas
rclb
cmp
jl
or
sahf
pushf
dec
fiadds
xor
lcall
inc
arpl
iret
mov
mov
aas
cwtl
stos
test
negl
out
and
sbb
in
stc
call
loopne
jmp
mov
cmp
cld
stc
or
neg
int
and
cli
test
loopne
jmp
stos
fdivs
daa
lcall
sub
mov
sbb
rcrl
cwtl
daa
mov
dec
xor
jmp
adc
je
inc
shll
les
lds
cli
fsubs
loopne
jmp
mov
xchg
jb
mov
scas
push
stos
xor
out
jb
xchg
xchg
jb
ljmp
cld
aas
arpl
dec
fsubrs
imul
ss
cmp
jo
pusha
sbb
popa
ds
iret
push
in
xchg
sbb
sub
pushf
aaa
lods
arpl
dec
stos
fsubs
daa
lcall
daa
loopne
jmp
inc
movsl
pop
jg
jle
jge
gs
stc
adc
adc
ja
mov
lods
pop
mov
cwtl
daa
loopne
enter
repz
jae
mov
mov
nop
or
xor
lods
xchg
mov
and
insl
pushf
mov
inc
jmp
sub
mov
and
jmp
cmc
mov
into
ret
adc
mov
jns
fldl
fdivr
sbb
adc
hlt
jmp
pop
add
sbb
imul
xor
xlat
fwait
pop
out
jmp
aad
inc
cmp
fucomi
mov
cmpsb
push
mov
stos
mov
pop
or
daa
shr
adc
insb
inc
jecxz
cli
mov
stc
popf
nop
cmpsb
test
test
fwait
mov
cmp
mov
cmpsl
addb
sub
out
lret
jg
add
aas
out
and
add
cmpsl
mov
addr16
and
test
int3
add
in
pop
add
mov
mov
xchg
xchg
and
or
loopne
jmp
rcr
fidivs
jo
cmp
push
cmp
cmpsl
mov
fiadds
push
das
and
push
or
add
cld
xorl
push
iret
mov
pop
adc
rcrb
lock
imul
ljmp
xor
leave
leave
add
cld
sbb
xchg
clc
cli
add
or
inc
cmpsl
mov
mov
jbe
mov
icebp
addr16
dec
jbe
sub
adc
mov
mov
ret
sbb
pop
fwait
pop
lock
sub
dec
in
js
cmpsl
push
lds
les
loopne
pop
insb
jl
nop
cmp
cmp
test
into
pop
cs
cmp
cs
icebp
add
rorl
ja
test
push
repnz
adc
mov
fdivr
aas
cmpsb
out
loop
adc
adc
outsl
sub
adc
mov
and
rcl
mov
test
imul
call
lea
lods
pop
jmp
movsb
mov
add
sbb
add
xchg
in
xchg
es
xor
jo
incb
cwtl
cmp
mov
inc
test
aas
sbbl
or
aaa
pushf
jg
cmp
aas
xchg
lods
test
lock
and
adc
jge
in
xlat
jno
push
int3
repz
push
xor
jae
push
in
xchg
fmuls
out
nop
addb
fsubrl
xchg
inc
ljmp
mov
lret
enter
ret
loopne
movb
sub
lcall
xchg
fistpll
faddl
or
movsl
sti
mov
xchg
seta
sbb
fsubs
mov
lcall
test
push
mov
jp
add
mov
add
xchg
jmp
adc
cs
in
das
dec
push
sbb
not
xchg
inc
out
jne
out
nop
sub
das
or
stc
lret
lret
leave
jnp
andb
jnp
add
add
mov
js
dec
cltd
int
xchg
cmc
out
call
es
ds
jae
out
outsb
inc
cwtl
daa
lret
ret
xchg
aad
xchg
xchg
xor
jmp
xchg
insb
sarl
jecxz
jle
lahf
cltd
ja
insb
lods
sub
dec
dec
add
lock
test
fildll
cmpl
sub
xchg
scas
mov
adc
mov
push
push
mov
imul
push
xor
mov
in
pop
add
lock
or
outsb
adc
jmp
cmp
fbld
cwtl
daa
scas
icebp
sbb
jge
pusha
inc
cli
ds
fnstenv
ss
mov
in
scas
shll
sub
lock
mov
jg
xor
sub
inc
add
neg
pop
cmp
jg
dec
add
test
pop
cwtl
daa
loopne
lret
stos
xchg
dec
aad
ja
addr16
sub
imul
jg
outsb
cmpsl
repz
data16
lret
fnsave
jp
push
add
and
ffreep
in
jmp
daa
and
jmp
icebp
push
inc
or
aam
jno
pop
fstl
aaa
fwait
adc
icebp
arpl
pop
loop
insl
aas
jo
movsb
cmpsb
pop
xor
mov
lock
push
ljmp
jnp
in
mov
fdivr
push
jnp
mov
inc
inc
lahf
cmp
cli
ss
cwtl
daa
loopne
add
mov
loop
cmc
dec
fwait
mov
sti
jae
fidivrl
lcall
add
mov
or
mov
pop
outsl
je
ret
test
inc
pop
push
ror
or
add
popf
pop
stos
inc
inc
inc
mov
pop
push
xchg
mov
or
push
std
outsb
cmc
dec
and
dec
jnp
push
lret
test
cmc
push
rcrl
cwtl
daa
call
dec
mov
cmpsb
roll
xor
cmc
xchg
ds
flds
jns
xor
in
pop
lret
imul
xchg
sbb
xchg
lret
xlat
and
or
cmc
pop
notb
das
dec
cmpsb
push
subb
fbld
cmp
addr16
jo
or
ss
stc
in
std
push
out
add
nop
jmp
incb
cmp
dec
roll
inc
add
pop
adcl
adc
xor
push
popf
sub
int3
mov
mov
cmp
test
cltd
jnp
pop
inc
mov
arpl
in
xorl
popf
mov
mov
orb
add
iret
shr
pop
fcmove
sbb
int3
aam
push
and
jle
pop
jb
pushf
jnp
mov
mov
add
mov
fstpl
leave
jne
push
imul
xchg
insb
cmp
fmull
daa
aaa
and
mov
push
fwait
and
xlat
repz
fwait
dec
pmaddwd
sub
dec
inc
and
xchg
sub
leave
push
out
mov
imull
movsb
in
pusha
and
and
out
push
cmp
jno
cltd
xlat
les
mov
xchg
test
mov
shll
ret
mov
sbbb
sub
das
sub
jle
cmpsl
add
xchg
nop
pop
cmp
sbb
fwait
stos
inc
in
sub
adc
mov
hlt
or
mov
jl
push
xor
inc
cmpsb
push
sti
jb
shr
cli
cs
xor
pop
adc
add
daa
pop
sbb
daa
sub
cmp
cmpsl
lods
js
add
in
cwtl
daa
loopne
jmp
xor
mov
and
in
jg
cmp
dec
mov
test
mov
arpl
sti
xlat
inc
or
jnp
adc
lret
ret
sbb
xchg
pop
push
sub
movsl
into
in
adcb
dec
daa
mov
xchg
aam
dec
scas
xchg
mov
pusha
mov
loopne
in
mov
sub
dec
mov
adc
sub
mov
lahf
adc
mov
dec
jecxz
ljmp
cmp
sbb
jp
imul
inc
sub
jl
mov
repz
aas
cwtl
dec
pop
adc
cs
stc
jp
pop
jmp
cmp
shl
push
cs
lret
cmc
xor
ret
sub
or
repz
xor
adc
sub
jle
dec
push
fldenv
repz
out
imul
mov
pop
aaa
cmpsl
add
cld
ret
imul
add
int3
daa
loopne
notb
add
xchg
jbe
gs
loopne
sbbl
sub
fsubs
popa
ret
iret
sub
mov
nop
sbb
fsubs
mov
and
mov
xchg
repz
test
xchg
cmp
es
mov
cwtl
pop
mov
or
daa
fdivrs
adc
xor
scas
stos
xorb
ja
int
pop
aaa
mov
adc
ss
xchg
popf
hlt
mov
leave
pop
fists
xor
in
cwtl
daa
loopne
cmc
fnsave
das
fistpll
and
lds
xor
and
cld
popa
push
jns
adc
pop
jb
ret
outsl
dec
pop
xor
add
loop
jno
jne
lret
pop
adc
cmp
jge
popa
jg
cmp
xchg
out
cmp
sub
popf
mov
out
ljmp
mov
test
mov
sbb
xchg
sub
mov
je
inc
sbb
mov
pop
stc
js
lods
fisubl
xchg
mov
shlb
out
lds
fs
push
lret
test
add
xchg
call
leave
negw
inc
insl
int
int
rclb
sbb
cmp
cmc
das
xorl
cltd
test
test
sbb
imul
arpl
andl
mov
call
stos
into
data16
sub
pusha
mov
lret
dec
imul
cmpsb
cwtl
mov
call
dec
movl
mov
and
xchg
movsl
ss
cwtl
daa
loopne
fistl
and
dec
jo
push
mov
xor
add
and
aad
mov
or
sub
push
insb
pop
out
xor
xor
sbb
xor
fnstenv
insl
repnz
pop
gs
push
pushf
imul
cmp
stos
pop
pop
test
cli
dec
into
push
cld
jmp
repz
adc
daa
xchg
shrl
xor
sahf
fstps
add
push
add
jmp
mov
aas
cwtl
mov
mov
call
imul
jl
pop
lret
xorl
insl
shl
inc
shlb
mov
dec
inc
jns
jbe
ret
xlat
xlat
popf
inc
mov
nop
or
nop
and
and
enter
cwtl
daa
loopne
push
loopne
add
out
rcrb
inc
adcl
outsb
adc
dec
add
xchg
mov
xchg
inc
mov
cmpsl
aaa
fisttpll
xchg
or
jne
adc
inc
nop
fisttpll
mov
rcll
cwtl
daa
inc
push
aas
push
adc
dec
dec
popf
ficoml
dec
scas
cs
dec
jecxz
jp
jl
sbbb
add
and
push
aam
xor
call
push
ss
shlb
leave
or
leave
std
mov
mov
insb
js
add
enter
sti
int
xchg
enter
sti
sub
lret
jns
out
xlat
mov
jae
mov
push
call
sti
aas
test
xchg
ljmp
inc
xchg
addr16
or
inc
pop
pop
arpl
shr
inc
mov
or
loope
sbb
pop
repnz
in
dec
fisttps
out
shl
pusha
xchg
mov
and
sub
and
int
fdivr
jle
inc
cwtl
scas
mov
or
out
cmpb
cmp
adc
jbe
push
ja
cld
iret
inc
ud0
mov
pop
loopne
add
rcll
gs
adc
jmp
push
mov
mov
dec
repnz
add
iret
push
aam
out
dec
jle
mov
jg
nop
sub
lea
lods
fs
push
movsl
dec
xor
jmp
adc
mov
or
std
ret
das
mov
outsb
shrl
pop
lods
xchg
add
xlat
insb
std
sbb
add
sbbl
filds
addb
in
lret
inc
filds
scas
adc
xor
push
jp
or
mov
mov
cmp
lock
int
sub
stc
mov
in
cmp
mov
insl
mov
mov
mov
cli
pushf
sub
enter
xor
mov
add
mov
out
ret
and
sub
pop
sub
pop
mov
jg
xchg
dec
mov
int
popf
push
add
imul
sub
sahf
add
addl
add
in
cwtl
daa
loopne
sub
mov
xchg
mov
int3
xchg
int3
fmull
outsl
das
aas
daa
adcb
lods
cmp
jmp
imul
xchg
mov
mov
and
mov
sbb
loop
add
test
bound
pop
or
cwtl
daa
dec
cmpsb
xor
in
cwtl
daa
loopne
pop
dec
stos
jb
mov
and
ret
xlat
cmpsb
fstpt
test
jl
xchg
aas
lea
int
cld
xchg
mov
mov
shll
ljmp
fbld
scas
daa
loopne
jno
int
out
mov
or
pop
daa
push
lods
lods
cmpsb
push
out
jp
out
es
sti
aas
and
shlb
mul
xorb
loopne
dec
enter
sub
leave
jae
inc
sbb
jnp
imul
daa
stos
iret
lds
hlt
stos
adc
gs
lods
xchg
shlb
inc
in
outsl
sbb
mov
aas
cwtl
daa
cmpsb
mov
test
subb
lea
and
aas
std
pop
jbe
mov
rolb
inc
out
pop
imul
fcmovnu
push
mov
xchg
mov
lods
aas
orl
sti
mov
xor
notb
cmp
js
adc
mov
push
pop
fists
rcr
cld
lods
xchg
mov
cltd
sbb
sub
jnp
out
out
jo
pop
jo
filds
dec
push
and
pushf
subl
jp
inc
pop
cmpsl
inc
fmuls
push
jecxz
inc
inc
lods
lods
mov
or
xlat
inc
sub
lock
iret
std
in
movsb
mov
inc
inc
fnstsw
jg
ljmp
stc
fs
cmp
nop
mov
xlat
jecxz
mov
scas
mov
pop
imul
or
imul
imul
cld
aas
addl
mov
cmp
push
in
stos
lock
insb
xchg
mov
or
push
rcll
bound
pop
mov
imul
ret
sbb
or
movsl
iret
sbb
mov
fmul
sbb
lret
lret
stos
sub
icebp
mov
cwtl
daa
loopne
mov
subl
jg
adc
xchg
mov
pop
lds
mov
jnp
mov
and
in
pop
mov
cmp
es
sti
aas
addb
add
das
inc
cwtl
daa
mov
fistl
dec
movb
shrb
mov
dec
jmp
add
xchg
mov
inc
int
xchg
cs
popa
dec
cmp
pop
jecxz
add
pop
cmp
pop
stos
inc
cwtl
daa
arpl
cltd
daa
loopne
dec
in
cwtl
daa
loopne
hlt
dec
idivb
icebp
je
popa
pop
push
sub
push
fucom
arpl
out
fcompl
enter
mov
xchg
in
adc
popa
jno
inc
xor
adc
jg
popf
and
scas
imul
add
outsb
popa
cmpl
push
lret
stos
push
jge
add
nop
xchg
xchg
lret
sbb
mov
ss
mov
iret
sarb
mov
pop
into
xor
gs
adc
fs
out
jmp
enter
cmpsb
sbb
jge
xchg
add
or
sbbl
sahf
test
data16
add
pop
inc
inc
push
lds
cltd
loopne
jne
or
shlb
cmpsb
fmull
in
push
aaa
pusha
adc
mov
push
stos
xor
xor
pop
jmp
inc
inc
ror
aad
iret
push
nop
aad
jns
sbb
ret
xor
mov
pop
bound
cmp
add
sub
loopne
jmp
xor
and
fs
popf
push
add
gs
add
xor
in
sbb
lods
jmp
dec
fdecstp
sti
dec
lret
lods
dec
pop
lcall
cwtl
daa
leave
roll
fdivr
add
bound
pusha
or
jl
bound
repz
jnp
adcb
lds
push
loopne
imul
out
dec
cmpl
adc
int
xor
mov
push
arpl
loopne
add
rcr
rcll
in
dec
jge
lods
mov
add
stc
scas
aaa
cmp
stc
loope
lret
dec
and
out
mov
in
gs
sub
sbb
jmp
aam
loopne
pop
mov
and
shrb
or
aam
mov
loop
out
mull
mov
mov
or
push
pop
push
test
bnd
mov
rorb
xor
test
jnp
rcll
jle
cwtl
daa
loopne
adc
cld
aas
cld
imul
in
pusha
xchg
mov
add
cld
or
sub
jo
jl
das
mov
rcrl
sbbb
mov
test
mov
roll
es
add
or
lods
daa
loopne
jmp
mov
sbb
pop
nop
dec
xor
or
pusha
mov
cli
daa
loopne
inc
shrl
cwtl
daa
arpl
test
popf
lret
xor
jp
adc
mov
lcall
xchg
lahf
neg
fisubrl
jnp
sub
jns
push
add
cmp
in
cwtl
daa
loopne
ret
stc
jns
insl
ja
test
mov
in
inc
mov
jmp
sub
andnps
cmp
test
xchg
mov
or
jp
pop
cmpsb
lea
xor
sbb
enter
ja
mov
mov
fidivs
mov
cmc
imul
bound
sub
ret
daa
pop
fucomp
fldl
movntq
adc
push
outsl
sbb
imul
cmp
mov
sub
cwtl
adc
repz
int
push
cmc
jecxz
mov
xor
xor
leave
jnp,pt
das
xlat
sub
xor
pop
xorl
test
jo
or
clc
dec
mov
jae
outsb
leave
loopne
fdivr
lret
lret
mov
jne
call
mulb
xchg
insb
arpl
test
rclb
fdivr
aas
fs
adc
orl
fwait
add
mov
mov
test
jns
cltd
ss
scas
daa
loopne
in
ljmp
dec
test
pushf
pop
lret
xchg
pusha
ss
add
lock
ret
add
cld
push
push
sub
les
cmpsl
vmread
mov
xlat
adcb
cmp
dec
or
lret
imull
pop
xor
divl
cwtl
pop
add
mov
rorb
cwtl
in
cwtl
daa
loopne
push
mov
daa
outsl
ja
mov
test
xchg
nop
push
push
jmp
js
mov
or
mov
mov
int3
fildl
in
jns
push
aaa
sti
cld
imul
mov
xchg
mov
aam
cmpsb
push
ja
ljmp
pop
cwtl
rcrl
add
pushf
dec
or
in
cwtl
daa
loopne
fs
sub
and
mov
out
xor
in
iret
pusha
test
jb
int
test
mov
imul
addr16
adc
push
hlt
pop
lret
add
lret
ret
mov
shll
mov
lods
mov
sub
pop
sarb
sbb
sbb
mov
dec
jp
rorb
add
ds
cmpsl
add
ret
adc
dec
jo
cs
dec
and
aas
lret
add
xchg
stc
loope
dec
xchg
out
mov
stos
mov
loopne
movsb
or
add
pop
adcb
rorl
push
add
cmp
ret
cwtl
arpl
jl
xchg
push
jecxz
xchg
push
lds
mov
cmpsb
popa
daa
pop
xor
outsl
scas
fisubs
dec
mov
adc
mov
inc
or
dec
cli
fidivrl
loope
xchg
aas
movl
stos
mov
cli
mov
jae
dec
jge
movsb
or
and
jecxz
std
js
aad
mov
imul
sub
mov
sbb
dec
or
push
inc
lcall
in
mov
stos
adc
mov
sahf
sub
sbb
cmp
test
push
jnp
fsubrl
call
mov
and
imul
jge
pop
cmpsl
push
pop
stc
bound
mov
mov
rcl
out
repnz
sti
aas
test
inc
iret
fs
pop
pop
sahf
xchg
in
sub
mov
in
cli
icebp
in
stos
inc
out
scas
aaa
cwtl
iret
out
pop
adc
xor
and
addl
ljmp
fdivl
push
insl
adc
cmp
sbb
cltd
xor
bound
cvtps2pd
cwtl
daa
imul
ret
sbb
icebp
jns
adc
xor
out
cmp
xor
dec
imul
sub
fdivp
adc
loopne
and
ljmp
dec
or
and
pop
push
cmp
pop
or
mov
push
bound
mov
mov
xor
lcall
xchg
push
fstpt
bound
sub
inc
out
mov
pop
cmp
xor
push
ss
negl
sbb
aad
ret
xor
or
cvttps2pi
aaa
add
fdivs
add
fdivr
mov
daa
push
stos
jmp
cmc
mov
xor
imul
test
loop
add
or
mov
mov
in
mov
std
int
cwtl
aam
sbb
pushf
dec
fdivrs
jg
xor
xchg
out
lret
aad
call
pop
pop
jns
add
add
daa
rclb
dec
orb
add
daa
inc
cwtl
daa
mov
std
ja
aad
out
icebp
xchg
adc
fstps
rcll
mov
jge
rol
cmp
lahf
testb
aas
jp
mov
mov
stos
outsb
sti
or
sti
push
xchg
mov
loopne
add
