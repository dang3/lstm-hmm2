rol
xor
or
mov
or
mov
test
jmp
push
fdivrs
lret
les
mov
jmp
ljmp
flds
add
nop
push
mov
xor
nop
inc
xchg
call
push
pop
jmp
nop
nop
nop
push
push
pop
and
mov
and
xchg
sub
mov
mov
nop
andl
xchg
nop
nop
nop
nop
nop
push
mov
xor
mov
and
xchg
mov
xchg
lea
jmp
inc
xchg
push
mov
mov
nop
jmp
push
xchg
xor
xor
or
xor
dec
and
add
push
mov
push
xchg
push
xchg
xor
cld
mov
add
mov
or
mov
push
xchg
nop
nop
nop
nop
nop
push
xchg
jmp
sub
sub
xor
mov
movzbl
jmp
stos
and
inc
push
pop
mov
xchg
mov
xchg
movl
xchg
or
dec
inc
xor
mov
ror
ror
or
mov
jmp
cli
int
mov
xchg
lea
jmp
xor
cmp
call
mov
jmp
jne
sub
inc
pop
inc
inc
sub
sub
sub
pop
mov
mov
add
xor
pop
mov
rol
mov
sub
shl
pop
cmpb
xchg
je
jmp
push
xchg
jmp
shr
jmp
jo
inc
add
xchg
and
push
pop
mov
mov
ret
jmp
lret
aam
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
subb
xchg
pushl
mov
or
inc
xor
xor
and
pop
jmp
nop
nop
nop
nop
nop
nop
nop
subb
cld
pushl
nop
and
mov
pop
cmpb
xchg
je
xor
cld
ret
jmp
inc
jmp
nop
nop
nop
push
mov
sub
rol
inc
shl
mov
jmp
nop
nop
nop
nop
nop
nop
lea
jmp
mov
adc
push
push
pop
push
xchg
push
mov
push
and
pop
push
cld
push
dec
and
mov
sub
mov
add
xor
mov
rol
dec
test
jne
pop
sub
rol
sub
or
and
add
call
jmp
lea
jmp
ja
pusha
insl
imul
inc
std
jmp
rolb
sbb
popf
ret
jne
sub
xor
mov
mov
mov
sub
add
or
pop
ret
jmp
notl
nop
nop
nop
push
xchg
jmp
je
jge
test
jmp
cmpb
nop
je
xor
xchg
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
sub
testb
incl
in
in
push
cld
push
nop
push
xchg
push
push
pop
push
xchg
pushl
xchg
push
mov
call
jmp
push
addr16
jmp
rol
and
inc
mov
and
mov
add
call
push
pop
jmp
nop
nop
nop
nop
push
mov
add
xor
mov
sub
mov
jmp
mov
xchg
cmp
cld
jne
add
mov
jmp
addb
nop
xor
mov
inc
mov
ret
jmp
lds
nop
nop
push
xchg
lea
jmp
imulb
push
xchg
pushl
xchg
pushl
xchg
push
shr
mov
inc
or
mov
add
add
dec
dec
test
jne
pop
xor
mov
call
leave
jmp
jo
scas
imul
nop
nop
nop
ret
jmp
call
cld
cmp
addr16
jne
add
mov
jmp
addb
mov
xor
addr16
jmp
push
popl
shr
mov
and
add
add
add
pushl
shr
shl
shr
pop
inc
add
mov
rep
jmp
pushl
sub
add
add
pop
shr
mov
or
shl
mov
jmp
ror
shr
ror
dec
ror
pop
inc
inc
add
shr
add
mov
mov
pop
pushl
or
rol
sub
pop
xor
mov
rorl
jmp
add
mov
dec
jmp
add
jmp
test
jmp
ja
cmp
test
mov
xchg
test
jmp
push
je,pt
call
xchg
test
jmp
dec
sbb
je
jmp
inc
xchg
ret
jmp
push
sbb
add
cmpb
nop
jmp
dec
shr
mov
sub
nop
shr
jmp
test
jmp
lds
out
pop
jle
mov
cld
movzwl
jmp
push
add
add
or
ror
mov
jmp
cmpsb
cmp
sar
rorl
loopne
mov
and
add
push
addr16
jmp
jne
inc
shr
pop
ret
jmp
adc
stos
loope
nop
nop
nop
nop
nop
push
xchg
xor
nop
inc
pop
jmp
pop
sahf
xor
test
add
add
fldl
add
and
addr16
jmp
lea
jmp
xor
adc
call
cld
dec
nop
jmp
seta
mov
xchg
jmp
nop
push
cld
cmpl
nop
jne
push
mov
jmp
sub
xchg
add
xchg
cmpl
addr16
je
push
push
pop
jmp
nop
nop
nop
nop
nop
add
add
add
add
add
xchg
push
addr16
push
xchg
call
mov
push
xchg
push
xchg
mov
addr16
jmp
lea
jmp
out
jne
test
jmp
pusha
jo
inc
and
jmp
sahf
mov
cmpsl
test
test
lret
xor
xor
add
mov
sub
mov
jmp
mov
and
add
mov
jne
sub
mov
jmp
pushl
or
xor
pop
jmp
cmp
mov
jne
jmp
pushl
shr
rol
add
push
or
dec
dec
xor
mov
add
dec
test
jne
pop
pop
call
cmp
xchg
je
jmp
mov
xchg
mov
mov
jmp
movb
xchg
incl
addr16
jmp
dec
mov
sub
sub
mov
movzbl
jmp
loop
add
aas
add
es
xor
mov
mov
push
cld
call
cld
add
nop
mov
movb
push
pop
jmp
out
nop
gs
xchg
jmp
cmc
push
incl
xchg
xor
push
pop
inc
mov
jmp
movl
push
pop
call
xchg
or
jmp
mov
sub
mov
test
add
mov
nop
jmp
insl
mov
add
cld
add
xchg
add
addr16
and
add
inc
or
mov
inc
mov
jmp
or
popf
shl
or
mov
dec
shl
and
mov
add
mov
xor
or
shl
sub
rol
mov
add
addr16
cmpw
xchg
jmp
pop
cli
pop
popa
jmp
pop
nop
sbbb
stc
jmp
jmp
push
data16
cld
decl
jmp
shlb
mov
icebp
cld
jmp
mov
push
adc
add
lret
xor
mov
and
mov
inc
addr16
inc
mov
shr
jmp
xor
and
arpl
sub
test
jmp
mov
mov
je
jmp
xchg
pusha
jmp
inc
pop
mov
xchg
jmp
ja
xchg
add
mov
jmp
and
inc
mov
jmp
jmp
push
je
push
add
jmp
insl
outsb
sbb
mov
jmp
movl
jmp
insb
in
adc
pop
or
jmp
je
test
jmp
xchg
mov
mov
pop
add
add
shr
cld
add
add
inc
xchg
call
cld
dec
xchg
call
xchg
inc
xchg
call
xchg
jmp
cmpl
xchg
jne
mov
and
sub
mov
dec
pop
sub
mov
mov
push
pop
add
push
pop
and
dec
inc
or
sub
pop
jmp
jbe
add
push
pop
jmp
pushl
sub
shr
and
pop
xor
shr
xor
ror
mov
mov
xchg
mov
xor
mov
dec
xor
mov
add
nop
jmp
je
or
mov
or
xor
dec
and
mov
sub
xchg
jmp
dec
xchg
call
cld
call
addr16
popa
jmp
jmp
mov
jmp
ret
jmp
adc
nop
nop
nop
nop
nop
push
popl
xor
add
mov
pop
leave
jmp
add
andb
ret
jmp
mov
nop
nop
nop
nop
nop
mov
cld
inc
xor
add
or
or
mov
xor
sub
and
mov
sub
mov
rep
jmp
in
pushf
inc
add
and
mov
add
push
pop
movzwl
jmp
mov
loopne
dec
incl
addr16
jmp
enter
adc
incl
xchg
dec
nop
mov
jmp
mov
test
jmp
jmp
sub
xchg
jmp
shrl
mov
mov
xchg
jmp
jmp
add
lock
jl
jmp
jp
fs
push
pop
test
jmp
and
lock
cmp
xchg
jne
lea
jmp
dec
adc
mov
call
nop
test
jmp
dec
je
rol
xor
and
ror
shr
mov
sub
xchg
shl
mov
mov
mov
xchg
jmp
shr
or
dec
xor
or
mov
mov
or
mov
pushl
ror
xor
and
pop
shl
and
mov
andl
nop
mov
mov
ror
sub
and
add
add
xchg
nop
nop
nop
nop
nop
mov
addr16
dec
add
mov
add
addr16
cltd
jmp
fs
dec
and
cld
add
mov
sar
jmp
lods
xor
xor
or
inc
and
nop
jmp
lret
adc
shr
jmp
test
jmp
std
lods
ret
sbb
std
arpl
fnsave
data16
sub
mov
or
pop
or
sbb
push
jmp
cmp
mov
jmp
cmp
mov
add
add
rol
mov
test
jmp
mov
or
mov
add
add
dec
sub
jne
jmp
sub
xchg
jmp
dec
xchg
dec
mov
or
sub
mov
movzbl
jmp
jge
sub
push
int
pop
inc
mov
nop
nop
add
nop
jmp
cmc
push
xchg
ret
nop
nop
nop
nop
nop
mov
cld
sub
push
pop
sub
mov
jmp
das
cs
incl
xchg
lea
jmp
insl
inc
out
mov
sub
mov
call
mov
cmp
xchg
jb
inc
xchg
nop
nop
nop
nop
nop
cmp
push
pop
jb
inc
push
pop
jmp
cmp
in
jmp
xchg
leave
sbb
xchg
decl
loopne
mov
incb
xchg
jmp
scas
and
sub
shl
mov
sub
cld
decl
jmp
jb
orl
jne
test
jmp
mov
sub
popa
adc
xchg
cmp
cmp
das
in
ss
inc
push
pop
inc
mov
test
jmp
dec
je
sub
mov
shr
or
mov
jmp
add
loop
mov
add
mov
cld
jmp
dec
dec
sub
mov
mov
mov
incl
xchg
dec
mov
jmp
movsl
sub
sub
mov
add
mov
add
mov
add
xchg
decl
jmp
aas
int
test
incl
fidivs
in
mov
jmp
and
orl
push
add
add
dec
hlt
jmp
cmp
nop
nop
nop
nop
nop
shl
xor
xor
mov
xor
push
pop
add
xchg
jmp
jae
jle
or
add
fs
jne
mov
xchg
xor
mov
inc
xchg
jmp
sbb
test
add
nop
push
mov
pushl
addr16
push
xchg
call
xchg
jmp
and
and
inc
add
add
loopne
enter
fmuls
leave
and
sub
add
or
mov
mov
addr16
incl
mov
incl
xchg
mov
mov
xor
xchg
jmp
xor
adc
nop
jmp
ss
repnz
nop
je
sub
mov
or
pop
sub
addr16
shl
add
xor
shr
pop
add
mov
and
or
add
pop
ret
jmp
aas
fidivrs
push
nop
nop
nop
nop
nop
shl
xor
xor
shr
mov
push
nop
mov
nop
call
test
jmp
inc
bnd
mov
nop
nop
nop
nop
nop
nop
inc
or
mov
call
push
pop
nop
nop
nop
nop
nop
mov
shr
and
add
push
mov
push
nop
mov
xchg
call
mov
nop
nop
nop
nop
nop
test
jmp
je
mov
xchg
add
add
rol
and
mov
add
mov
add
mov
mov
rep
jmp
push
add
pop
add
add
nop
nop
nop
nop
nop
xor
dec
shl
add
mov
mov
push
xchg
push
mov
pushl
cld
nop
nop
nop
nop
nop
call
mov
push
addr16
push
xchg
pushl
mov
call
xchg
sub
shl
add
or
or
mov
shr
add
or
xor
add
mov
test
jmp
aam
lea
je
pushl
add
shr
dec
shl
sub
pop
add
mov
sub
xchg
nop
nop
nop
nop
nop
jmp
sub
mov
mov
sub
xchg
nop
nop
nop
nop
nop
shr
jmp
test
jmp
sub
call
or
add
jp
nop
nop
nop
nop
nop
jle
mov
cld
nop
nop
nop
nop
nop
movzwl
jmp
pop
and
test
or
xor
and
and
add
mov
mov
and
cld
nop
nop
nop
nop
nop
cmp
xchg
jne
sub
add
xor
or
mov
and
mov
add
cld
nop
nop
nop
nop
nop
add
xchg
add
push
pop
inc
xchg
inc
xchg
decl
jmp
out
iret
cli
nop
nop
nop
nop
nop
jne
add
nop
push
xchg
push
mov
call
mov
nop
nop
nop
nop
nop
cmpl
xchg
jne
sub
rol
and
add
mov
inc
or
mov
test
jmp
inc
dec
pop
je
sub
sub
inc
sub
mov
add
nop
nop
nop
nop
nop
add
mov
nop
nop
nop
nop
nop
jmp
push
cld
push
addr16
call
cld
add
sub
mov
add
mov
nop
nop
nop
nop
nop
push
xchg
sub
inc
and
sub
push
sub
add
add
or
add
push
mov
shl
dec
or
mov
pop
add
add
sub
dec
test
jne
pop
lea
mov
call
cmp
xchg
mov
jmp
mov
je
nop
nop
nop
nop
nop
add
or
mov
test
jmp
rorb
or
cld
xor
dec
dec
mov
or
xor
sub
or
and
add
mov
xchg
add
cld
add
xchg
mov
sub
add
mov
nop
nop
nop
nop
nop
test
jmp
cwtd
or
adc
test
add
push
cld
push
xchg
jns
call
xchg
movzwl
jmp
lahf
pop
push
loop
nop
nop
nop
nop
jmp
call
xchg
xor
ror
ror
mov
nop
nop
nop
nop
nop
add
cld
add
cld
push
mov
pushl
push
pop
call
xchg
mov
push
pop
nop
nop
nop
nop
nop
add
cld
add
cld
jmp
or
shl
mov
mov
add
push
pop
cmpl
mov
nop
nop
nop
nop
nop
mov
jmp
fnstcw
faddl
sub
cmp
jmp
add
add
add
cltd
and
mov
mov
or
mov
nop
nop
nop
nop
nop
mov
nop
and
and
rol
mov
and
shl
add
or
inc
mov
sub
and
mov
pop
and
pop
nop
nop
nop
nop
nop
or
pop
mov
xchg
cmp
addr16
jne
pushl
xor
or
shl
sub
pop
nop
nop
nop
nop
nop
add
mov
mov
xchg
and
inc
add
mov
inc
and
add
add
cld
leave
jmp
or
pop
lods
ret
jmp
nop
nop
nop
nop
nop
and
push
add
adc
sub
pushf
fldl
clc
xor
movsl
pushf
cmc
inc
jns
sub
jno
push
jp
stos
xorl
in
cmp
lea
cmp
inc
push
lret
jl
push
jb
cmpsb
shrl
scas
ret
pop
rcrb
ja
aad
addr16
jns,pn
mov
cmp
pop
push
mov
mov
cmp
rcll
push
pop
shll
fsubrl
addl
scas
sbb
add
mov
dec
cwtl
mov
nop
adc
fwait
jbe
add
enter
dec
xchg
mov
cld
sbb
mov
or
shlb
pop
aam
mov
or
cmp
jl
iret
cmc
std
cmpb
push
fstl
xchg
mov
bound
outsb
enter
mov
ret
daa
jmp
sbb
pop
roll
mov
inc
cmpsl
test
mov
pop
iret
xor
sarb
out
sub
jae
lods
das
lods
cmp
pop
mov
inc
movsb
cmpsl
jnp
push
loope
inc
dec
push
es
stc
call
outsl
sbb
mov
sbb
aas
gs
fimuls
cmp
xor
adc
dec
mov
or
jmp
das
subb
xor
jbe
push
cs
scas
push
sub
inc
adc
gs
lret
jae
sbb
cmpsb
enter
pop
aaa
fstpl
jbe
mov
lods
fadd
mov
fcmovne
jne
jmp
xor
outsb
lea
outsl
xor
inc
out
std
fbld
add
lret
fisttpll
mov
shrl
sbb
inc
pop
xor
jbe
dec
push
dec
mov
push
mov
je
fcmovbe
pushf
push
jnp
adc
xor
pushf
mov
push
fs
push
std
jmp
mov
jae
gs
mov
fsubs
stos
lret
dec
fsubrs
cwtl
xor
mov
sub
jge
sarb
nop
sbb
sub
fucom
sbb
pop
mov
push
mov
loop
fldenv
cmp
leave
lcall
sub
fbld
lea
mov
into
int
pop
pusha
js
les
pop
ljmp
repnz
sub
mov
gs
xor
xchg
test
nop
iret
aam
cmp
pop
xchg
add
add
or
ljmp
aam
pop
insb
je
movsb
xor
fbstp
in
xchg
push
clc
push
mov
jno
in
aad
push
cld
pop
aaa
xchg
inc
dec
and
stos
jl,pn
xor
pushf
push
popf
mov
es
in
and
lock
jo
xor
jge
add
faddl
xor
in
aas
mov
daa
mov
rorl
dec
dec
loope
ds
mov
stos
mov
mov
mov
xor
fdivs
jg
les
sub
imul
inc
out
in
add
testl
dec
pusha
add
clc
dec
test
in
cmp
in
popa
inc
int
sarl
mov
jb
arpl
out
dec
adc
cld
popf
stos
sbb
sbb
sti
ror
lcall
fwait
adc
jo
jo
loope
xchg
or
mov
aas
fisubl
xchg
jle
aad
dec
stos
add
add
sub
mov
movsl
or
inc
out
aaa
out
cmp
mov
mov
popf
mov
dec
sub
aam
aaa
test
incl
inc
orl
jnp
mov
dec
popf
mov
lret
cmc
or
ret
stos
or
js
fisttpl
push
fldcw
jle
in
in
mov
xchg
mov
mov
mov
push
js
divb
pop
dec
enter
mov
push
push
adc
aad
or
outsl
sbb
jecxz
mov
mov
mov
fcomi
mov
mov
scas
scas
sub
jns
pop
mov
jnp
js
leave
xor
test
imul
repz
iret
jmp
adc
and
inc
mov
ja
pop
cld
cli
adc
addl
movsl
sub
push
pop
mov
dec
test
popa
repnz
out
in
mov
mov
iret
inc
sbb
or
cs
mov
insl
test
sub
aad
cmpsb
fwait
cltd
sub
dec
sbb
pushf
out
movsl
clc
enter
adc
pushf
out
push
cmc
negl
inc
fsubrl
ljmp
fimull
or
andb
pop
in
lcall
and
mov
and
xor
fldcw
dec
into
loop
je
insb
dec
sub
hlt
aas
sti
jbe
sub
fisubl
jg
inc
mov
jne
les
pop
lock
leave
or
adc
nop
das
add
xchg
dec
notl
xchg
fbld
mov
gs
loope
inc
test
xlat
mov
decl
imul
sbb
aam
mov
push
cltd
inc
dec
mov
mov
test
sbb
push
mov
lahf
in
xchg
lods
dec
repnz
sbb
enter
cmp
aas
inc
xchg
mov
les
jae
dec
or
mov
and
pop
loope
ret
sub
sbb
in
or
js
shl
add
cmp
punpcklwd
test
cmp
clc
and
xchg
and
sub
push
jno
xchg
arpl
jge
out
loopne
sbb
mov
xor
jecxz
fimull
sbb
mov
cmpl
dec
cwtl
lea
and
xor
lret
or
dec
cmp
std
mov
mov
cli
lea
mov
pop
out
cmp
mov
pop
xor
imul
cwtl
shlb
or
cmp
jmp
cwtl
push
cmpsl
and
mov
orl
jmp
push
jp
rolb
or
test
xchg
lret
push
sbb
stos
cmc
push
out
jne
dec
inc
jnp
cmpsl
push
js
popa
xor
and
jmp
shr
inc
mov
fiadds
stos
mov
sub
test
aaa
jae
pop
mov
xchg
pop
mov
gs
mov
dec
lcall
xchg
cmp
and
cmc
stos
push
cmp
mov
lret
push
jle
mov
out
cmp
incl
mov
jae
scas
pop
and
push
mov
shl
ljmp
jge
dec
cmp
sbb
cmc
sti
sahf
push
aaa
jnp
testb
repnz
mov
inc
lock
out
andl
faddl
ret
popl
cmp
and
mov
mov
mov
cmp
mov
cld
inc
push
movsb
addr16
xchg
movsb
sbb
leave
mov
cs
xor
adc
mov
push
sti
xor
stos
and
sbb
das
mov
cwtl
or
push
jp
fdivr
lcall
push
mov
and
lods
stc
out
pusha
rcrl
sbb
sbb
xchg
data16
sbb
or
clc
push
push
inc
pop
out
sbb
loopne
jp
orl
movsb
stc
pop
and
jecxz
cmp
test
in
nop
sub
insb
popf
and
scas
inc
ss
dec
sbb
in
dec
ret
je
fs
pop
ss
les
jl
xchg
hlt
xchg
jle
and
pop
rclb
or
insl
and
popa
js
imul
fstl
pop
lea
lea
dec
push
xchg
ret
out
inc
mov
jle
lea
mov
sahf
aas
sbb
jno
or
cmp
xchg
data16
roll
and
les
mov
mov
mov
fdivr
xlat
negl
and
enter
cld
imul
fsubrl
jbe
mov
jp
in
enter
mov
sbb
add
and
mov
aaa
imul
xor
movsb
aas
mov
lock
cmovbe
out
xchg
movsb
mov
idivl
push
xchg
push
xor
pop
loop
daa
scas
push
ret
sti
dec
cld
hlt
pop
in
imul
insb
stos
pushf
mov
mov
and
xchg
testl
jbe
daa
dec
aad
test
sub
fucomi
inc
test
sub
popf
stc
fld
and
test
cmpsl
mov
pop
adc
cmp
ss
pop
xor
pop
cmc
lock
sub
je
xor
in
pop
icebp
add
xor
sub
orl
jo
shl
sti
je
push
jb
xor
adc
cmp
stos
aas
std
adc
pop
sbb
or
add
rorb
and
popa
roll
mov
xor
in
in
sbb
ss
mov
pusha
lahf
adc
cmp
shlb
or
dec
lea
cmp
add
mov
cmp
cmp
scas
cmp
out
xor
push
cmc
lahf
jge
adcl
push
cmpsb
iret
mov
adc
push
imull
or
adc
lea
in
mov
lcall
cwtl
dec
mov
enter
or
push
push
outsb
mov
xchg
sbb
mov
loop
adc
jg
xor
sahf
sbb
mov
adcl
adc
mov
lods
mov
imul
lods
adc
scas
dec
cld
aad
inc
dec
xchg
cmpsl
addb
dec
shl
in
adc
pusha
or
cmp
es
test
jb
mov
inc
xor
sbb
dec
add
mov
divl
shlb
push
aas
fdivl
xor
outsl
arpl
jmp
sub
ret
in
rclb
mov
and
cmp
sahf
mov
fldenv
mov
jns
mov
xor
in
jmp
jecxz
xchg
jle
pop
and
xchg
call
mov
cltd
mov
xor
cltd
jg
stc
into
loop
aaa
aam
repnz
lea
mov
lods
mov
arpl
ljmp
or
push
mov
fs
inc
decb
and
testl
pop
push
xor
movsb
adc
lock
rcll
ljmp
adc
adcb
popa
jg
jecxz
aad
adc
ret
bound
mov
fcoms
test
dec
dec
add
or
inc
aad
sarb
aad
sub
mov
movsl
data16
pop
lcall
clc
rcll
and
js
or
insl
xchg
out
rcrb
push
cmp
push
jns
jmp
loope
jle
pop
aad
mov
mov
repnz
mov
jecxz
insb
mov
js
lahf
mov
xchg
push
je
dec
pop
xchg
fisubrs
or
add
leave
adc
sbb
dec
imul
mov
sbb
sahf
inc
subb
cmp
movsl
loop
shrl
imul
mov
mov
dec
jns
or
or
push
mov
jl
cmp
jg
jle
cwtl
imul
jo
fisttpl
insb
push
add
mov
mov
sti
jmp
mov
pop
adc
mov
mov
add
mov
lcall
dec
into
cmp
push
shll
bound
add
jp
inc
rcr
xor
adc
push
xorb
push
mov
leave
fcoml
xor
gs
rorl
repnz
inc
icebp
sbb
pop
insb
adc
inc
movsb
mov
xchg
xor
pop
repnz
outsl
add
test
xor
mov
xchg
fstl
dec
ljmp
cmp
das
push
cmp
ja
or
pop
push
addr16
lret
test
out
sub
popf
xchg
jmp
push
sbb
sub
adc
mov
int
pop
mov
sbb
out
jmp
scas
fsubs
push
xlat
and
fimull
sub
sahf
mov
xor
inc
out
or
jbe
mov
in
imull
push
pusha
or
jbe
lcall
cmp
xchg
jne
fiaddl
js
sub
lock
push
xchg
ret
loopne
and
jge
dec
or
inc
mov
test
mov
out
cltd
fisttpll
ficompl
inc
pushf
loop
xchg
xor
add
dec
adc
enter
push
mov
pop
cmp
test
ret
ljmp
std
loopne
fcmovu
aas
jmp
cmp
mov
fucomi
push
push
or
into
and
pop
cmpsl
sub
sbb
xchg
decl
in
ljmp
js
pop
jecxz
add
pop
fcompl
sub
lds
push
mov
nop
cmp
test
fcoml
cmp
lcall
sub
inc
xchg
mov
fiadds
popf
fyl2xp1
fdivs
pop
loopne
cmp
sbb
lahf
out
cmp
addr16
mov
inc
add
pop
and
jo
or
inc
sbb
sub
ret
jg
repnz
sub
cmp
mov
or
daa
ficompl
cmpsb
scas
push
dec
jmp
mov
mov
sub
aas
adc
mov
xchg
fimull
test
icebp
mov
jne
mov
negl
mov
pushf
mov
add
and
das
sbb
adc
in
cmp
imul
mov
jg
cmp
xchg
dec
test
jp
push
pop
jmp
jne
out
cmp
jo
jbe
pop
xchg
adc
into
push
ss
jecxz
and
pop
or
adc
jle
in
ret
rcrb
sti
fistps
loope
add
es
mov
rorl
push
test
aad
cld
inc
push
ljmp
pop
or
sub
std
lea
lock
and
into
ret
xchg
gs
xor
fnstenv
jno
pop
push
popa
push
shr
stc
ja
shrb
pushl
mov
sti
mov
jae
push
out
xchg
dec
jnp
pop
pushl
adcb
pusha
imul
fprem1
mov
leave
adc
adc
push
push
pop
mov
ljmp
cli
lret
bound
jge
mov
xor
jmp
dec
jg
pushf
sub
ret
fildl
sub
fcomp
push
cs
out
mov
dec
push
aas
adc
loope
movsb
incl
cmpl
cmp
mov
cmpsl
ja
mov
loopne
int3
mov
subl
mov
and
nop
or
pop
mov
sub
or
and
mov
and
sbb
dec
sub
add
push
push
xchg
and
mov
mov
cs
sub
push
stos
sbb
jae
repz
insl
fiadds
cmp
sbb
xchg
inc
xor
xor
lret
int
mov
addr16
hlt
and
mov
arpl
enter
pusha
mov
mov
inc
cltd
shlb
and
push
rcrl
jae
fsubrs
inc
sub
cmp
sbb
pusha
insl
xchg
outsb
int3
lea
int3
xor
xchg
movsl
scas
mov
sbb
ss
mov
gs
insb
push
ds
xor
les
xchg
push
movups
cwtl
mov
in
inc
pop
or
outsl
loope
sub
cwtl
sbb
push
ds
xor
jbe
cltd
xchg
in
mov
jno
pop
int
sub
leave
push
mov
dec
sahf
fs
push
cwtl
adc
sub
cmp
fmuls
sbb
lea
pop
jae
inc
pop
dec
dec
mov
dec
lds
jnp
js
jmp
push
out
popa
call
xchg
loopne
pop
movsb
sbb
xchg
dec
leave
mov
push
xor
mov
mov
fsubrl
adc
idivl
push
imul
mov
xchg
mov
mov
dec
jp
dec
out
popf
leave
push
push
ja
in
mov
mov
sbb
ficomps
lret
sbb
stc
clc
xchg
scas
adc
mov
mov
mov
arpl
nop
daa
rep
jmp
and
aaa
fidivrl
xchg
ret
pop
das
shl
in
outsl
movsb
notb
sahf
pop
xor
ss
scas
bound
imul
cs
mov
ss
lea
xor
xchg
in
or
pusha
dec
xor
mov
ss
mov
stos
fs
push
mov
sub
jge
inc
imul
in
push
mov
xchg
push
arpl
xor
cmp
shrb
gs
fiaddl
sahf
fstps
cmpsb
dec
pop
sbb
loopne
pop
movsb
outsl
jo
lods
stos
mov
icebp
push
sub
rorl
test
icebp
jl
xor
and
cmp
adc
and
sub
cwtl
push
popa
mov
and
dec
push
cmpsl
out
test
aam
enter
in
test
sbb
mov
es
clc
data16
push
enter
imul
scas
adc
jle
popa
cmp
sahf
jge
jp
test
mov
pop
jo
jns
fsubp
imul
insl
mov
not
lret
dec
mov
cmp
sbb
xorl
pop
or
push
andb
in
mov
inc
mov
int
pushf
sbbb
jb
xchg
mov
popf
jns
out
or
out
xchg
xchg
negl
scas
ss
dec
arpl
push
xor
icebp
inc
fsts
leave
fadds
xchg
and
pop
flds
cmp
aaa
xchg
test
sub
adc
or
add
jnp
movl
test
rclb
jecxz
jno
sbb
cmp
or
inc
aas
fisttpll
cltd
sub
test
cli
ja
shll
ret
lock
fscale
jb
in
sbb
mov
mov
xor
pop
mov
xor
mov
jne
xor
cmp
lret
mov
ljmp
dec
test
lret
fcomps
push
outsb
jnp
and
insl
cli
push
mov
test
fbld
insb
ret
add
out
or
push
aam
orb
cld
sahf
push
mov
add
outsl
mov
aam
pop
fmul
push
dec
add
lret
cltd
xchg
popf
aam
cmp
rorl
lret
inc
ds
scas
cltd
or
mov
out
pop
push
adc
and
aaa
dec
push
les
cs
movsb
xchg
jno
jp
jns
sbb
and
mov
je
jnp
jecxz
mov
cmc
sti
mov
popa
sbb
push
cmp
jnp
sbb
xor
aas
pop
mov
push
sub
imul
icebp
pushf
mov
fnstenv
in
ret
xchg
cmpb
daa
pop
ds
pop
cmp
pop
das
out
sub
leave
rorl
push
cmpsl
rorb
mov
push
adc
adc
imul
sub
push
std
daa
iret
jmp
pop
fdiv
mov
cmp
bound
add
int
xchg
xchg
push
sahf
or
cld
call
sbb
loop
mov
cmp
cwtl
aas
mov
push
scas
pop
add
inc
leave
add
rcll
adc
xor
dec
jecxz
lock
adc
adc
mov
cmpl
mov
adc
imul
adc
xchg
mov
out
and
push
sub
sbb
incl
insl
mov
xchg
out
lock
and
adc
mov
sbb
pop
pusha
mov
lods
aam
sbb
stc
cmp
das
mov
or
cmp
ret
pop
fiaddl
pop
add
sbb
pop
cmp
in
mov
loope
add
shll
in
jmp
pop
lret
mov
xorb
xor
dec
mov
daa
mov
cwtl
leave
aas
inc
imul
fwait
test
maxps
sti
push
push
push
jns
jp
aaa
loop
roll
loopne
cmp
xlat
insb
popf
mov
mov
push
and
xor
xchg
xchg
pop
add
test
jb
insl
add
mov
ret
inc
lcall
sbbl
add
sbb
mov
popf
xchg
outsl
xor
int
mov
jle
js
lea
and
ja
sub
dec
jnp
pusha
mov
sub
mov
out
mov
imul
xchg
dec
out
lret
les
push
add
pop
scas
inc
ljmp
mov
lock
notl
adc
mov
mov
xchg
mov
lret
xchg
call
xchg
loop
add
test
xchg
fs
js
add
or
mov
inc
inc
mov
sbb
repz
xchg
mov
fmuls
and
jo
push
xor
lods
or
mov
ret
jp
cmp
lds
lods
push
int
mov
jbe
ss
aad
stos
fstps
ds
lods
fistl
rclb
mov
mov
xlat
mov
rcr
mov
jg
add
fmuls
sti
add
xchg
daa
adc
adc
inc
stc
push
sbb
rorb
lea
and
cmpsl
push
fwait
sti
sahf
fst
lret
cmp
js
add
js
jno
daa
jmp
loope
fstpt
mov
fwait
sbb
iret
rol
pop
jmp
sub
mov
outsl
je
add
push
fstpt
inc
jmp
pop
rcl
cmpsl
rorl
push
cmp
stc
xchg
or
mov
shlb
jno
push
jns
into
mov
xor
in
inc
xchg
jecxz
and
scas
mov
cmp
imul
into
ljmp
mov
imulb
adc
pop
pop
sbb
stos
xor
loopne
fwait
in
cmp
xchg
mov
dec
lcall
or
xchg
cltd
xor
pop
outsb
sti
inc
out
add
arpl
xchg
sbb
xchg
stos
pop
xchg
cmpb
lea
imul
sub
and
shlb
enter
leave
push
inc
add
sbb
bnd
xorl
adc
outsb
add
adc
adc
rcrl
xchg
das
xor
imul
jmp
mov
cmp
add
jg
mov
sub
fnsave
fs
adc
sbb
sahf
add
pop
rol
jmp
ja
push
inc
sbb
js
ret
add
out
xor
in
mov
out
add
mul
add
movsl
daa
mov
jbe
in
mov
and
stc
inc
cmp
dec
lahf
repz
jbe
mov
aad
adc
test
adc
test
cmpsl
lret
and
in
jmp
mov
adc
ss
jo
xchg
ret
lcall
test
fdivl
add
lds
pop
fldenv
dec
stos
cmp
aas
mov
lods
add
or
mov
or
xchg
out
mov
adc
sahf
int3
test
sub
ss
mov
test
dec
push
and
rolb
nop
sub
lds
mov
hlt
mov
xchg
je
or
sbb
cmpsb
out
fisubs
xor
popf
popf
mov
xchg
sbb
sbb
nop
icebp
pushw
adc
cmp
test
sub
mov
mov
in
mov
or
xchg
mov
es
icebp
sbb
dec
cmpsl
cmp
jns
inc
cs
pop
mov
out
lods
mov
adc
push
dec
bound
sbb
jmp
js
loop
sub
or
pop
jmp
mov
mov
sub
fld
rclb
lea
mov
or
testl
mov
insl
mov
pop
sbb
cmp
mov
lret
dec
jmp
mov
loop
xchg
xor
fstpl
pop
push
movsb
cmpsl
jg
mov
mov
or
cmp
test
mov
mov
push
push
sub
xchg
outsl
inc
cmp
js
ds
mov
sbb
js
xchg
sbb
clc
xchg
xor
sbb
loopne
jmp
lds
dec
inc
xchg
test
ljmp
mov
xchg
mov
lret
shrb
lcall
push
adc
out
xchg
mov
sub
loop
and
pop
jb
dec
adc
pop
call
inc
xor
lret
push
add
or
fisubrl
int
mov
inc
les
mov
je
xor
pusha
sbb
out
push
jge
imul
dec
xor
sbb
aas
stc
adc
adc
ss
jg
popf
pop
sbb
test
pop
repz
push
push
in
ljmp
lea
pop
push
inc
push
dec
fbstp
repz
sahf
jae
cltd
mov
adc
test
aad
mov
ret
sub
outsb
xchg
xor
in
xlat
insb
jecxz
pop
pop
sub
adc
and
fwait
scas
sub
nop
test
les
dec
add
sub
fisubrl
and
fs
lahf
inc
fistpl
cli
mov
hlt
or
inc
push
xor
adc
lds
cli
sub
mov
fmuls
cmp
outsl
xor
inc
mov
mov
cmpsb
mov
rolb
aad
dec
lock
dec
xor
in
mov
jmp
into
lahf
sbb
xchg
test
std
insb
out
sub
scas
push
cmp
pop
lock
aaa
jl
clc
andl
sbb
fdivrl
hlt
mov
les
and
cwtl
or
shr
lods
mov
cli
sbb
push
mov
movsb
loopne
jge
rclb
xor
dec
jmp
jge
sti
adc
loopne
sahf
sbb
andb
pop
hlt
int
sbb
pop
xlat
add
jge
outsb
fwait
or
sti
xor
in
xchg
imul
xchg
imul
sbb
rorb
jecxz
pop
inc
mov
ljmp
sbb
addb
dec
mov
adc
adc
fildl
push
adcl
xchg
jo
sub
ja
imul
in
mov
and
aas
jge
xlat
aam
repz
ds
pop
mov
or
loope
sahf
mov
retw
jb
stc
out
mov
push
pop
test
cmpl
push
dec
cwtl
movsb
push
pop
imul
das
sub
pusha
test
mov
push
xchg
cmp
xchg
dec
sar
pop
add
enter
xor
fnstsw
sub
out
push
jl
cmpsl
mov
sti
cmp
xchg
push
mov
add
aaa
rclb
xchg
mov
cmp
mov
mov
in
mov
std
leave
insb
cmp
jb
inc
xchg
add
inc
mov
test
in
sbb
out
jbe
lea
jns
outsb
aam
fimull
jg
sbb
add
mov
and
push
aaa
pop
lods
std
jecxz
xor
and
adc
outsb
xor
dec
jne
add
push
dec
and
jne
add
lock
dec
push
pop
mov
fisubrs
divb
jmp
scas
loope
fiaddl
pop
jae
pop
es
in
cmp
out
push
jmp
dec
pop
xor
and
and
sub
mov
test
jl
into
mov
lret
int3
pusha
imul
push
pusha
add
pop
fldenv
sub
xchg
pushf
mov
sbb
pop
sti
addb
rcll
test
pop
imul
lods
fadd
shlb
pusha
mov
and
stos
sub
js
sub
add
push
push
clc
rclb
arpl
cli
enter
xchg
mov
es
xchg
jae
popa
pop
lret
or
pop
xchg
cs
push
xchg
jg
jmp
or
test
jbe
inc
iret
jns
hlt
or
cmp
mov
cmp
add
jle
adc
inc
inc
or
test
jmp
lret
test
movsb
outsb
test
add
sti
xlat
repnz
insl
xchg
ja
das
xrelease
jle
pop
mov
adc
cs
mov
cltd
ja
pushf
xor
out
pusha
les
rcll
fs
lock
mov
hlt
sub
in
cmp
pop
xchg
push
ret
sbb
lcall
push
add
fs
sbb
pushf
xor
out
and
and
inc
lahf
fimull
aad
mov
add
mov
pop
xor
dec
mov
jp
sti
inc
mov
dec
stc
dec
xchg
sub
xor
in
pop
test
cmpsl
mov
mov
fisttps
lahf
outsl
fisttpl
push
inc
push
pop
ret
xchg
pop
push
ljmp
jmp
cmp
adc
xchg
sub
rolb
into
daa
ds
push
je
inc
es
fsubl
int3
sbb
inc
jne
ja
stc
xor
xchg
mov
aaa
lock
sbb
addr16
lret
jmp
sbb
mov
lret
xchg
dec
pop
mov
mov
and
jbe
lret
popa
inc
call
rcrb
inc
pop
jge
aaa
xorl
icebp
mov
popf
ds
leave
push
pushw
in
xchg
add
les
xor
lret
scas
lods
adc
inc
cmp
mov
mov
jb
pop
xchg
adc
inc
fsubp
adc
cmc
hlt
dec
inc
outsl
pop
mov
pop
jnp
push
sbb
pushf
icebp
cwtl
lret
std
add
gs
push
dec
js
mov
and
test
pop
push
dec
sub
loopne
push
or
push
rep
xchg
aaa
ret
adc
aaa
rcrb
mov
hlt
popf
loop
fs
rcrl
xchg
punpckldq
int3
xchg
mov
adc
fst
shlb
adc
int
dec
out
sbb
dec
jbe
inc
fs
xchg
ljmp
fndisi(8087
jle
subb
and
xchg
mov
fwait
nop
push
jle
cld
lahf
outsb
mov
pusha
xor
cs
movl
nop
out
inc
ss
or
push
inc
fwait
inc
out
lock
cltd
hlt
jp
icebp
adc
fnstsw
jp
pop
dec
sbb
inc
lahf
fs
sti
pop
andb
xchg
jecxz
jge
jmp
ss
and
or
fs
sbb
jecxz
fiadds
or
and
jae
imul
ds
xlat
rcll
jl
cmpsl
mov
push
sub
inc
mov
cmc
cmp
inc
cs
outsl
push
orb
xchg
pop
ds
mov
xor
fnstcw
mov
push
ljmp
repz
mov
push
ljmp
inc
pusha
stos
andl
push
fstl
mov
je
in
push
jmp
and
mov
push
sbb
dec
add
mov
xchg
xchg
dec
repnz
das
dec
mov
add
sbb
push
jo
or
inc
push
out
ja
movsb
xor
inc
pop
mov
sub
adc
sbbb
add
sub
inc
and
dec
jg
dec
mov
push
insb
adc
jg
andl
call
cmc
push
push
add
shlb
xor
adc
or
adc
mov
scas
movsl
and
jnp
pusha
adc
or
inc
xor
cmp
call
lcall
mov
push
jmp
aam
jmp
pusha
cld
movsl
cmpsb
push
ss
dec
mov
in
and
arpl
add
das
fs
lea
xlat
insb
add
inc
testl
gs
aas
insl
loope
mov
aad
or
pop
ljmp
cmp
and
pop
jo
pop
cmpsl
and
or
mov
sub
outsl
xor
mov
and
mov
ljmp
add
adc
dec
lcall
das
dec
popa
push
add
jp
push
or
shlb
es
in
lods
test
gs
push
sub
repnz
in
push
js
pop
jge
imul
aad
hlt
inc
insb
mov
ss
xchg
aaa
jno
mov
dec
dec
imul
fidivrs
pusha
sbb
lods
mov
movsb
cld
pop
loope
mov
push
push
nop
in
insl
inc
xchg
jge
adc
ret
mov
popf
lcall
cli
rcrb
add
mov
pop
stos
mov
movsl
inc
outsb
daa
fdivl
sub
cs
test
mov
xor
mov
gs
mov
loopne
stos
sub
push
mov
push
sbb
pop
xchg
sbb
out
inc
bound
lret
dec
nop
pop
arpl
cmp
popa
jb
push
xor
and
mov
add
mov
mov
iret
sub
xorb
pop
xor
and
into
pop
or
inc
cmp
lcall
inc
xor
sub
sub
nop
and
test
aam
mov
jno
test
pop
jb
or
mov
fldt
pop
pop
cmpsb
xlat
lods
pop
shl
add
xor
mov
repz
mov
in
or
int
jmp
and
inc
ret
lret
sub
faddp
imul
imul
sub
mov
out
lds
hlt
and
add
mov
inc
pop
movsl
stos
and
mov
movsb
adc
pop
cmpsl
fbld
push
pop
xchg
xchg
push
test
and
xchg
leave
pop
lcall
data16
jae
shl
push
mov
lret
cld
sub
es
mov
dec
insb
aaa
mov
shr
pushf
or
rcr
iret
pop
aaa
mov
jmp
out
cmc
scas
loope
pop
inc
mov
and
cmc
addr16
cmp
sahf
mov
inc
jae
add
cli
into
mov
in
jb
leave
std
ljmp
inc
mov
lret
stos
loop
or
push
sub
scas
aam
and
xlat
nop
lcall
and
jecxz
xor
xchg
or
cmp
movsb
and
stos
ffree
push
dec
mov
xchg
mov
xor
out
dec
pop
mov
imul
shrb
cmpsl
out
pop
jg
dec
dec
jecxz
ftst
xchg
push
inc
loopne
les
xchg
fs
xchg
cmp
add
cmc
pop
adc
pop
pop
in
arpl
push
test
inc
and
sahf
cmpl
jb
out
fs
stos
lret
or
shr
pop
je
test
out
xor
mov
pop
dec
sub
adc
cli
add
setno
jecxz
push
and
pop
jns
xor
imul
add
insl
in
test
sub
mov
mov
jo
in
test
sbb
bound
and
in
imul
aad
pushf
jg
mov
mov
fcomps
ljmp
sub
outsb
add
sub
or
add
and
lods
xor
aam
mov
jnp
loopne
cli
cwtl
mov
cs
jmp
push
sub
mov
sub
push
cwtl
cmp
rep
jno
addb
xchg
mov
lahf
jg
xchg
arpl
adc
inc
sub
jg
adc
and
mov
lea
jge
inc
fbld
mov
ret
jo
in
add
ja
mov
rolb
inc
jmp
fmuls
mov
in
mov
js
xchg
sti
repnz
aaa
pushf
loope
sub
call
dec
inc
cwtl
or
mov
aad
mov
test
mov
jecxz
inc
les
sbb
adc
pop
xor
insl
mov
stos
int3
xor
cmpsl
or
inc
frstor
xor
dec
icebp
cmp
subb
push
les
sub
mov
in
mov
push
mov
mov
mov
xchg
adc
outsb
scas
xchg
push
dec
add
or
inc
sbb
scas
jp
sahf
and
arpl
les
sbb
das
icebp
arpl
xchg
subl
xchg
aas
add
sbb
xchg
xchg
shr
imul
mov
les
add
mov
icebp
adc
push
in
inc
aaa
pop
or
mov
mov
stos
and
ds
lcall
jmp
and
jno
js
decb
out
test
fsubrp
ret
pop
lea
xor
loope
lock
cmp
jge
or
sub
pop
push
sti
pop
mov
test
dec
test
or
cmp
add
jae
int3
xchg
sbb
xor
jge
lods
and
sbb
ljmp
std
jbe
movsl
mov
mov
stos
iret
lods
mov
loopne
adc
lods
rolb
jmp
popf
jecxz
jb
in
nop
mov
out
adc
cmpsb
dec
rcll
and
ret
jne
dec
xchg
add
iret
out
jns
pop
out
insb
cmp
add
push
cld
mov
jo
sbb
lds
push
roll
jns
or
inc
xchg
add
fbld
xor
push
fcmovb
ljmp
clc
clc
mov
ss
xchg
mov
mov
pop
jnp
xchg
insl
dec
lock
outsl
jno
sahf
pop
and
cwtl
add
das
jmp
xchg
xchg
mov
mov
jbe
xchg
fstpt
sbb
dec
in
xor
cwtl
out
std
addr16
dec
jnp
cmpsl
popa
jl
inc
cmp
stos
testl
leave
xor
sub
and
push
testl
add
out
xchg
arpl
fcmovne
adc
inc
mov
es
call
pop
xchg
lea
jl
cmp
fldt
adc
sub
mov
sub
adc
mov
xchg
mov
cmpsb
loope
inc
les
inc
or
lea
sub
call
ds
sub
int3
dec
xchg
inc
in
mov
loope
cmp
mov
lods
in
jb
jbe
std
xchg
mov
sahf
add
xor
adc
xor
xor
lcall
mov
jl
pop
adc
cmp
jle
sub
jbe
fwait
add
or
fisubl
test
dec
mov
cld
push
dec
dec
fistl
or
movsb
iret
mov
call
cmp
add
lock
addr16
dec
jge
dec
aam
out
jno
insl
insb
and
cmp
loope
pop
aam
jmp
out
shll
lods
in
gs
popf
jg
sub
pop
mov
addb
lea
mov
mov
mov
mov
pushf
and
cmp
jo
xchg
leave
add
jbe
push
jecxz
fst
shrb
lods
mov
loope
mov
mov
dec
cmp
sbb
jno
fiadds
pop
repnz
xchg
bound
inc
mov
pop
cmp
dec
mov
fnstenv
push
jne
hlt
in
fimull
lea
arpl
call
add
jb
aas
xchg
mov
js
push
push
push
sbb
ret
mov
test
adc
int3
orl
mov
pop
cmp
je
in
push
or
mov
fwait
mov
movsb
or
shl
int3
jp
inc
divl
cld
sub
test
in
cli
addb
jge
mov
add
mov
fwait
add
xchg
dec
pop
sarl
and
popf
cmp
mov
lahf
xor
nop/reserved
aaa
mov
sbb
inc
decl
out
cmc
enter
and
test
filds
mov
in
jmp
mov
popf
rsqrtps
or
sahf
lea
jge
pop
mov
adc
lock
mov
sub
out
cli
out
mov
push
negl
cmc
loopne
mov
fucom
xor
add
sbb
ja
repz
xchg
ret
ss
repnz
test
xchg
cmp
enter
adc
bound
lods
lahf
imull
sahf
dec
fnstsw
mov
xchg
stos
push
aam
nop
pop
aad
xor
mov
pop
out
pop
push
popa
pop
test
mov
shrl
mov
add
sub
cmp
nop
into
jo
loope
je
add
push
xchg
mov
or
push
vcmpss
jns
cmpsl
nop
lcall
fnstenv
push
push
or
push
scas
dec
fsubrl
cmc
cmp
push
scas
fninit
scas
in
mov
into
mov
or
es
cmp
stos
push
and
jo
mov
jo
pop
imul
pop
pop
xchg
xor
and
jmp
push
leave
inc
fs
xchg
jne
jno
sbb
fmull
roll
inc
sub
xor
in
ret
imul
sti
cmp
jne
xchg
or
push
je
mov
push
loopne
push
cmp
jg
mov
pop
repz
pop
aas
test
cmp
aad
ss
bound
mov
pusha
aad
dec
lcall
and
and
rorb
mov
pop
andl
dec
int3
xor
inc
stos
dec
push
jmp
fisubl
cmpsl
leave
inc
mov
jmp
dec
stos
dec
frstor
movsb
leave
or
bound
xchg
lods
aad
clc
arpl
js
adc
pop
enter
lock
fs
jge
xchg
stc
jns
decl
mov
mov
sub
pop
or
jg
in
dec
or
shr
std
mov
mov
sahf
mov
push
je
jge
and
insl
xchg
loope
pop
call
mov
inc
xchg
mov
xorb
adc
es
and
fsub
ja
push
sarb
in
push
push
sbb
adc
in
or
ja
adcb
insl
data16
imul
dec
sub
mov
mov
sbb
and
mov
inc
or
rcrb
xchg
fidivrl
mov
sbb
shlb
mov
lods
cmp
out
lret
cwtl
pop
xchg
stc
inc
lods
pusha
adc
sbb
scas
xor
cmp
dec
sti
fcom
mov
into
mov
rolb
mov
xchg
push
cmp
add
xor
xlat
lods
mov
xor
pop
or
push
sti
xlat
shll
dec
inc
or
jl
jp
leave
addr16
pop
adcb
out
jo
cmp
sbb
shlb
inc
and
stos
adc
out
mov
in
js
imull
imul
pop
sbb
or
sahf
jmp
jno
pop
sub
mov
popf
inc
push
or
or
scas
cwtl
es
fprem
int
dec
cmp
cmp
adc
sbb
movsb
outsb
jns
lret
loopne
mov
xor
jno
xor
sarb
pusha
jp
xor
loope
jge
imul
push
jl
loope
xchg
sub
mov
call
jp
jmp
sbb
xchg
lret
sbbb
and
stos
jno
repnz
jbe
sub
jp
mov
push
mov
orb
nop
mov
jno
dec
fs
mov
fndisi(8087
jge
mov
dec
xchg
push
mov
jne
daa
cmp
mov
push
push
dec
int3
fwait
sub
or
jns
aaa
mov
hlt
add
pop
jne
sbb
pop
jg
shlb
jmp
enter
push
jle
stc
out
sub
hlt
jle
and
and
adc
inc
push
sub
icebp
push
and
jb
in
fistpl
mov
cmpsl
jge
jns
popw
mov
aaa
xor
mov
insl
pop
mov
arpl
xor
fstl
adc
sbb
or
lcall
insb
scas
sub
daa
and
dec
mov
outsb
sub
xor
test
push
pop
rclb
clc
mov
or
inc
fwait
outsl
mov
dec
and
insb
add
xchg
outsl
add
push
push
mov
pop
and
add
adc
jns
outsb
mov
sub
add
scas
push
fcomi
sbb
icebp
jp
jmp
pop
repnz
mov
out
sbb
sub
pop
pop
mov
or
sets
lods
icebp
or
loope
mov
fs
in
outsl
fimull
icebp
adc
push
and
jb
sub
xchg
dec
into
xor
scas
push
xchg
rorl
scas
xor
pop
aaa
pop
repnz
and
jb
repz
xchg
lods
decl
cmc
notl
adc
and
or
aad
mov
lds
dec
jne
les
addb
leave
dec
vpmadcsswd
shrl
pop
xor
add
dec
incb
rcr
or
xchg
mov
rcrl
out
cmp
and
insl
rolb
shrl
std
xchg
cmp
jg
dec
pop
test
dec
in
sub
add
pusha
in
pop
xchg
jg
push
lods
push
push
sbb
inc
lods
movsl
xchg
leave
int
gs
xor
or
out
ja
out
imul
popw
mov
notl
xchg
adc
mov
fidivrs
aam
pop
inc
mov
fldcw
in
lret
adc
scas
jl
push
sub
imul
nop
into
or
and
popa
lret
mov
test
fdivrs
push
lret
adc
into
jne
nop
popa
or
clc
xchg
sbb
xchg
pop
jge
mov
cmpsl
fisttpll
push
add
outsl
inc
es
cs
or
and
leave
leave
push
fdivl
and
fisttpll
mov
push
push
fnstenv
xor
mov
adc
jae
js
jne
jbe
pushf
mov
cmp
pop
pop
movsb
jbe
test
mov
movsl
in
loop
jl
push
mov
or
in
xor
jl
lods
shll
pushf
out
jle
bound
push
lret
inc
ret
loope
pop
jmp
and
or
das
mov
or
jo
mov
rol
mov
sarb
clc
loopne
cmp
out
pop
jo
cmp
jle
mov
mov
or
gs
shrb
adc
je
xlat
dec
fbstp
push
es
lds
or
and
adc
in
lcall
stc
cmpb
add
xchg
cmc
loop
jns
aad
ret
cmp
cmp
fcmovne
inc
ss
sub
adc
pop
pop
outsl
int3
js
mov
std
lea
fistpl
test
lds
je
add
mov
mov
lods
adc
and
xchg
insb
adc
es
mov
lds
aad
call
xchg
nop
jo
movsb
push
dec
add
mov
fst
mov
and
mov
int
dec
jne
xor
mov
je,pn
lock
jbe
dec
cmpsb
jbe
mov
dec
and
int3
mov
push
aaa
adc
out
stos
xchg
xchg
call
mov
inc
sub
adcl
dec
pop
aam
test
and
sbb
push
and
ljmp
push
bound
test
push
adc
jo
jns
jno
arpl
pop
cmp
int
cmp
push
fistl
mov
call
sbb
jl
lea
loope
jne
out
mov
in
and
cmp
cs
adc
push
push
test
xor
mov
xchg
mov
mov
xchg
mov
jnp
in
shr
bound
in
mov
out
cmp
lret
in
lcall
cmpb
sub
mov
decb
int
xchg
mov
ror
icebp
push
cs
imul
sarb
xor
sub
shl
add
sub
lods
pop
lds
or
dec
out
push
nop
add
xchg
cmp
aaa
xchg
lock
test
mov
das
push
dec
into
out
decb
js
mov
out
xor
repz
fiadds
xor
adc
and
pop
bnd
xchg
aaa
jno
and
aaa
cwtl
jp
insb
icebp
and
test
je
mov
aas
int3
out
shrb
adc
incl
lcall
inc
ficoms
gs
lods
xlat
jo
push
out
xchg
test
xchg
pop
js
push
mov
das
subb
call
mov
sub
sub
fstps
xchg
pop
add
movsl
mov
fwait
sub
sub
js
inc
lahf
sub
in
jg
js
and
add
out
push
sub
sub
shr
xchg
lds
mov
test
xchg
lock
sub
xchg
pop
dec
cltd
jno
push
add
lahf
nop
shl
jmp
cmp
adc
mov
mov
inc
pop
cltd
fsin
mov
adc
mov
adc
mov
dec
dec
jle
in
enter
xchg
add
push
xchg
iret
enter
sbb
bound
pop
pop
bound
sub
sahf
cmp
mov
insb
jmp
subb
gs
lret
or
enter
push
sub
add
xchg
fisubs
xchg
pop
icebp
sbb
mov
jg
sub
push
xor
scas
repz
test
data16
or
lret
movsl
ret
adc
xchg
mov
inc
pop
cmp
icebp
loope
fcoms
add
and
dec
insb
pop
lea
jg
jo
push
push
and
sahf
add
mov
and
ja
mov
popa
push
pushl
lahf
cmp
lods
outsb
or
addl
and
rorb
jmp
scas
or
mov
popa
xchg
jo
loope
leave
xor
cwtl
xor
push
push
cmp
imul
pop
lds
xchg
sub
lcall
push
addr16
sub
daa
jl
jecxz
mov
mov
cmp
mov
cltd
mov
cmpsb
xchg
jns
in
or
mov
enter
push
cmp
cmp
mov
push
mov
mov
mov
cltd
pop
lret
enter
imul
nop
stc
pop
push
and
test
insb
addr16
in
mov
add
xor
inc
insl
fwait
stc
xor
pop
sbb
sbb
loop
cld
xchg
sbb
pop
sahf
sbb
movl
add
mov
cmp
repnz
inc
cmpb
call
das
mov
push
js
test
stos
cs
daa
xchg
leave
add
xchg
js
aas
fidivrl
negb
aam
mov
mov
push
jo
filds
xlat
mov
push
ficoms
lea
xlat
pop
bound
mov
adc
xor
sti
out
addr16
xor
stos
aad
loop
adc
test
inc
sbb
dec
sbb
fistpl
sub
pushf
mov
cld
test
cs
jmp
sub
push
mov
xor
stos
xor
enter
ss
xor
sbb
dec
mov
sbb
sbb
outsl
sub
ljmp
jl
leave
or
imul
outsb
inc
scas
add
sub
mov
outsl
or
stos
rorb
push
dec
dec
xor
cmp
das
push
je
cld
jmp
insl
ljmp
sub
fcmovu
leave
and
mov
loop
fbstp
out
sbb
or
insb
cmc
mov
mov
sub
push
clc
mov
aaa
out
adc
xchg
jnp
and
imul
pushl
dec
mov
out
ljmp
add
sti
test
sub
inc
push
sbb
fisubrs
xor
and
mov
xor
and
jle
cmpsb
cmc
sub
dec
inc
aad
ficomps
imul
inc
jp
push
pushf
aam
xchg
hlt
cmp
push
scas
adc
pop
cmpsl
das
mov
imul
or
fldl
add
add
in
xlat
fldl
sub
pop
stos
cld
pop
repz
lods
and
mov
inc
add
rcrl
cmpb
xchg
stc
in
in
xor
mov
xlat
rorl
rorl
xor
mov
pop
fistpll
cmpsl
inc
and
adc
clc
ljmp
int3
push
sbb
cld
dec
push
daa
outsb
cmp
ss
dec
hlt
sarb
enter
cmpsb
mov
outsb
imul
dec
xor
cmp
and
pop
sub
lcall
lret
mov
xchg
movsb
test
mov
inc
jmp
dec
xlat
loop
shrb
scas
push
inc
ret
shl
sub
scas
mov
pop
test
je
scas
mov
push
andb
sbb
fcompl
enter
pop
popf
sarl
popf
out
popa
jo
jg,pn
sti
mov
scas
xchg
movsb
es
mov
dec
shlb
push
stos
push
shrl
rcrb
ret
sub
cmp
push
sbb
insl
mov
mov
mov
push
lcall
sbb
xor
cs
mov
jmp
sub
bound
cltd
jne
mov
or
popa
movsb
arpl
pusha
aaa
jne
ret
mov
or
rorb
data16
lcall
pushf
shlb
cli
in
or
dec
imul
push
push
outsb
test
cmovb
rol
andb
arpl
mov
or
ror
cs
seta
pop
scas
popa
dec
movsl
movsl
mov
push
inc
es
repz
imul
test
push
mov
pusha
xchg
shrl
les
insl
imul
movsl
repnz
adc
mov
int3
dec
jbe
sub
mov
mov
push
pushf
mov
int3
icebp
dec
ret
and
mov
int
test
sbb
fsubs
movsb
pop
adc
inc
movsl
jbe
mov
xchg
or
aam
inc
aas
ret
pop
fstpt
repnz
mov
xchg
mov
pushw
cmp
icebp
out
xchg
inc
xchg
jle
lahf
cmp
jge
mov
and
in
jmp
add
mov
call
sbb
in
jmp
icebp
daa
out
sbb
adc
icebp
mov
cwtl
outsb
sub
dec
mov
lods
jle
or
inc
daa
loope
add
sub
outsb
mov
gs
divb
cmpsl
int3
scas
xchg
imul
loope
std
push
inc
adc
cmp
gs
mov
jmp
pop
nop
mov
push
jne
mov
in
dec
jno
pushf
pop
and
pop
shr
nop
roll
insl
mov
cmpsl
add
inc
hlt
dec
jmp
pop
outsl
mov
cs
xchg
rsqrtps
iret
imul
nop
arpl
cwtl
movsb
test
ret
mov
lods
mov
mov
adc
mov
addl
dec
xor
arpl
push
push
add
mov
adc
xchg
inc
pop
shlb
cmp
mov
mov
push
push
add
mov
or
xor
pop
jg
idiv
xor
ja
rolb
jne
jecxz
or
dec
cmc
adc
mov
shll
or
div
nop
adc
and
ret
sub
aaa
xor
dec
push
lea
es
push
mov
call
dec
movsb
mov
pushf
in
dec
xor
repnz
aas
loope
push
aam
and
push
imul
mov
and
or
jge
and
push
mov
or
dec
or
mov
jmp
and
xchg
fimuls
and
inc
js
addr16
cmp
mov
xor
dec
xchg
xchg
mov
sbb
outsl
adcl
mov
fidivs
pop
mov
push
mov
ss
arpl
lahf
shrl
pop
divl
jg
rcrl
outsl
mov
mov
ss
jle
test
jns
psrad
nop
add
pop
fwait
cmpsl
lahf
sahf
add
mov
or
leave
aam
stc
mov
add
mov
jmp
aas
or
addl
insl
xor
and
push
jo
jno
lahf
icebp
or
movsl
mov
jp
jecxz
mov
jp
xchg
mov
ss
adc
push
xor
test
imul
int
dec
xor
addr16
movsl
push
mov
push
pop
test
sbb
jl
shl
mov
lods
pop
movsb
iret
push
mov
aas
inc
in
cmpsb
shll
ret
icebp
bound
inc
out
cmp
ficompl
shrw
ljmp
jg
repnz
mov
xchg
add
xlat
push
ret
mov
gs
lcall
lahf
mov
cld
pop
jb
mov
lret
in
cmc
push
test
add
mov
int3
dec
aad
shl
pop
mov
jbe
jno
rclb
mov
jmp
ror
add
push
push
mov
lea
ficompl
test
adc
dec
and
xor
aad
or
bound
imulb
push
stc
xor
add
adc
scas
out
inc
inc
aad
cmc
adc
xchg
inc
mov
daa
fisttps
and
mov
subl
and
in
lahf
fcoml
push
insl
xor
and
popf
mov
and
mov
adc
sub
xchg
push
fmull
mov
shr
stos
fs
dec
pop
out
fiadds
outsl
cmp
nop
mov
xchg
cld
imul
push
mov
in
sahf
les
sbb
sub
fsubrp
jl
add
ret
pop
call
xchg
movsb
adc
repnz
andl
add
daa
xor
daa
sti
ljmp
lods
mov
add
mov
mov
inc
js
xlat
ljmp
sti
dec
stos
jge
xor
out
dec
jbe
cmp
pop
inc
adc
dec
push
loop
shll
test
sbb
mov
in
sbb
sbb
dec
loope
and
iret
sub
fistpll
push
xchg
push
into
fldt
sbb
pop
sar
shrl
das
leave
push
shlb
andb
pop
jmp
call
push
mov
pop
jbe
es
pop
test
xor
outsl
rorl
jl
xchg
movsl
ss
sub
and
pushl
mov
mov
js
mov
in
insb
outsb
dec
mov
loopne
adc
popf
jns
jnp
and
test
dec
mov
fucom
movsl
add
cwtl
xor
jecxz
pop
mov
or
xchg
adcl
mov
push
mov
js
iret
xor
mov
les
xchg
or
inc
xlat
and
inc
dec
or
enter
pushf
popa
jmp
dec
into
es
sub
push
dec
pop
bound
xchg
and
and
addr16
in
xchg
inc
fnstsw
dec
add
iret
cli
xchg
cs
sbb
pop
cmp
xor
inc
mov
dec
pusha
fucom
sbb
cmp
flds
pop
sub
cmpsb
mov
xchg
movsb
jmp
dec
arpl
popf
inc
xor
popa
pop
test
xlat
sub
or
mov
push
inc
and
lcall
sbb
enter
idiv
add
jnp
pop
xchg
int3
fwait
push
popf
dec
mov
cmp
mov
call
cs
inc
xor
shl
sahf
cmp
rorl
fdivl
insb
out
mov
int
add
mov
cmp
mov
loope
cmc
push
inc
int3
mov
sub
mov
adcb
out
inc
dec
in
into
inc
in
and
orb
femms
xchg
pop
xlat
xchg
jge
shlb
std
cmp
into
insl
xor
fisttpl
dec
lds
mov
mov
mov
dec
aas
movsb
sub
mov
sub
adc
mov
sub
imul
test
lret
lcall
mov
dec
neg
pop
mov
adc
cmp
neg
dec
sub
popa
jnp
daa
cmp
pop
leave
xchg
jmp
dec
fcompl
jmp
cmc
fwait
add
mov
sub
mov
mov
jecxz
cmp
cmp
lcall
jae
or
or
and
xor
jne
shlb
sub
push
dec
cmp
test
cmc
xchg
shrl
icebp
shrb
cmpl
sti
outsb
add
daa
repz
imul
incb
hlt
add
pusha
push
cmp
and
lea
adc
jg
ret
sub
lret
je
shl
or
loope
aam
insl
cmp
data16
call
adc
push
sbb
push
mov
ficoml
mov
xor
sahf
out
addr16
nop
jle
jb
xor
icebp
push
fists
insl
aad
pop
mov
xchg
mov
sub
lods
ss
aas
adc
sbb
jnp
jno
in
flds
sar
push
mov
imul
xorb
sub
rclb
dec
sub
push
adc
fs
sarb
sti
test
in
std
int3
mov
mov
dec
into
notl
inc
add
dec
xor
repz
jns
inc
dec
adc
dec
sub
fmull
test
enter
ret
mov
dec
push
jle
pop
lahf
fs
imul
push
call
pop
outsb
repz
in
jae
cmc
xlat
andl
test
dec
adc
hlt
cmp
stos
push
jbe
test
mov
iret
sub
lahf
add
xchg
jmp
mov
inc
and
xchg
cmpl
mov
and
out
sti
pop
ja
mov
cmpsl
jle
imul
or
mov
dec
xor
mov
ret
dec
ss
icebp
loope
and
imul
xor
inc
xor
jl
mov
add
pop
lahf
les
mov
push
call
cltd
scas
popf
lcall
addr16
sbbb
stos
fsts
clc
out
arpl
inc
pop
lcall
movb
mov
jno
dec
iret
pop
js
adc
arpl
shlb
aam
mov
xchg
repz
xor
mov
fiaddl
lret
inc
aas
test
fidivrs
js
ficoml
push
pop
xor
sub
loope
aaa
and
movsl
and
aad
push
add
test
add
bswap
mov
sbb
sar
test
dec
add
jle
mov
push
pop
arpl
daa
jmp
mov
jle
push
pop
jae
dec
push
out
clc
cli
andb
dec
or
lcall
in
js
cmp
aad
jmp
sarl
aam
mov
or
movsb
je
mov
gs
sbb
cmpsb
cltd
icebp
lret
lock
aas
ljmp
and
js
ljmp
cltd
out
cmpsb
jns
push
cmc
rcll
ljmp
dec
jl
xor
ret
ds
lret
sbb
pop
push
sahf
std
fcomp
dec
in
loope
adcl
std
aam
iret
iret
nop
popf
mov
mov
testl
out
mov
mov
stos
cmp
iret
and
cmp
repnz
xchg
stc
inc
popf
lret
push
pop
ficomps
xor
or
push
or
jbe
push
or
jne
and
xchg
call
dec
cwtl
sbb
mov
mov
sbb
jg
pop
lods
in
push
add
mov
rorb
push
stos
into
out
addl
add
adc
je
shrb
dec
in
mov
xchg
sub
data16
jne
or
or
sbb
repz
sbb
inc
fimull
xchg
enter
lret
sub
repz
dec
inc
add
daa
loop
dec
stos
es
imul
pop
rorb
daa
mov
ret
test
subl
sub
xchg
out
popa
fldcw
and
push
xchg
enter
cmp
sbb
into
sub
mov
jno
pop
mov
mov
jmp
fbld
dec
icebp
sub
lcall
push
gs
cwtl
mov
fdiv
ss
xlat
inc
xor
and
jge
jno
notb
mov
push
cwtl
push
or
into
insl
mov
jne
out
dec
pop
add
mov
dec
mov
lahf
sbb
sbb
ljmp
inc
ret
cmp
sti
pushf
and
insl
ret
jbe
shll
add
adc
inc
test
mov
inc
adc
jp
nop
and
dec
js
cs
sub
sub
sbb
sub
or
std
shrl
mov
xor
hlt
jg
sbb
daa
push
lret
pop
xchg
pop
out
xchg
sarl
sbb
jnp
sbb
int3
leave
test
enter
and
aad
andl
mov
inc
in
into
mov
mov
pop
scas
and
sub
idivl
adc
xchg
scas
cmp
pusha
andl
leave
leave
mov
add
jle
pop
lds
lds
xor
mov
ljmp
out
mov
inc
sbb
xchg
sub
cmp
adc
jge
xchg
scas
fnstenv
mov
mov
es
bound
lgs
jge
add
popf
mov
jno
inc
mov
mov
jg
inc
push
pop
test
sub
mov
or
loopne
popf
scas
jbe
rcll
cmp
cmpb
jg
int3
in
cmpsb
push
or
fcomip
jae
xchg
test
repnz
mov
mov
inc
leave
cmp
cmp
lods
sub
aaa
pop
and
dec
cmpb
cmp
push
loop
in
mov
dec
sahf
subl
adc
bound
lret
cld
push
cs
pop
cmpsl
push
mov
in
arpl
stos
add
lcall
cmc
daa
jecxz
js
lock
sub
roll
js
fldl
in
pop
sarb
mov
mov
push
out
scas
pop
add
hlt
hlt
imul
pop
jnp
pop
lods
ljmp
shl
int
mov
push
cmp
cmp
or
sub
dec
sub
aas
inc
cmp
mov
fs
jns
pop
xor
lods
adc
popf
mov
sbb
pop
cli
sbb
mov
inc
mov
sub
mov
testl
sbb
push
fidivrs
adcl
repnz
repz
insb
dec
into
dec
sbb
xor
mov
pop
inc
push
adc
pop
lret
adc
hlt
nop
iret
jle
pop
negl
scas
adc
rcrb
add
adc
xor
xor
movsl
sub
xchg
jb
subl
push
inc
xchg
mov
mov
in
mov
push
cmp
add
dec
insl
sbb
jnp
add
sub
mov
scas
adc
mov
push
sbb
or
arpl
dec
xchg
cmpsb
movsb
cltd
rcll
ds
add
push
int
jnp
xor
and
notb
pop
rcll
das
jbe
add
int3
nop
jecxz
xchg
loop
cmp
mov
scas
pop
je
aam
xchg
addr16
fsubrl
daa
xor
jg
sahf
cmp
dec
dec
adc
sub
push
push
jb
sub
xchg
push
adcb
ljmp
mov
sbb
gs
mov
lock
adc
pop
sbb
aad
out
adc
or
js
mov
jge
mov
popl
clc
rorl
pushl
push
jmp
in
sub
jo
lret
mov
into
cmp
roll
in
push
pop
adc
fs
enter
dec
repz
iret
pop
lret
push
orl
into
out
stos
lea
cmp
lock
add
ficompl
es
push
les
call
loopne
mov
dec
roll
cltd
mov
loop
pusha
push
sub
fiaddl
es
mov
rorl
daa
pushf
mov
loopne
push
addr16
rcrl
xor
cs
je
iret
jl
movsb
fidivrl
mov
push
or
jg
ret
mov
pop
mov
add
push
imul
adc
push
outsb
or
mov
daa
and
shll
movl
inc
cld
mov
cli
add
movsl
dec
mov
outsb
fcmove
xor
and
lea
pushf
xchg
jmp
notb
xlat
mov
lods
xchg
outsb
fcoms
dec
fildll
add
outsb
inc
mov
jo
jne
cmpsl
shlb
icebp
mov
xor
in
lea
jl
fistpl
lcall
divl
mov
stc
das
pop
aad
test
les
mov
pop
adc
test
cli
mov
adc
stos
stos
xchg
stc
lea
jge
lea
xor
sbb
andl
xchg
xor
sub
mov
shlb
sub
add
or
ja
lahf
pop
mov
and
jecxz
jg
leave
adc
pop
cltd
push
xchg
nop
cld
pop
push
cltd
int
hlt
cmp
ret
or
and
pop
push
mov
ret
push
mov
pop
mov
push
aas
fmulp
jnp
sub
mov
pop
negb
into
ljmp
pop
in
data16
push
into
add
pop
inc
push
xor
push
cmp
stc
mov
ret
js
push
sahf
jbe
daa
pop
pop
cmp
dec
imul
ret
push
ret
dec
mov
pop
xchg
push
les
pop
outsb
ret
orl
imul
pop
mov
push
jb
sarb
jnp
add
mov
push
mov
sbb
mov
pop
aad
insb
in
insb
mov
arpl
sbb
nop
sbbb
mov
in
xor
sbb
cld
push
adc
push
test
dec
gs
insl
mov
mov
jae
aaa
rcl
je
iret
sbb
xchg
fs
ret
sarb
ds
cmp
jge
dec
or
out
jge
cmp
and
loope
xlat
add
push
xchg
stos
scas
mov
sub
dec
fidivrs
das
cli
inc
loopne
shll
add
sbb
add
lock
inc
lahf
mov
cli
lahf
jmp
fwait
jae
lods
sub
push
arpl
pop
scas
pop
jmp
stos
or
jmp
shlb
pop
mov
repz
stos
push
xchg
or
pop
mov
les
mov
imul
outsl
mov
out
push
ja
fldt
mov
stc
dec
push
pushl
or
imul
dec
sbb
mov
mov
jp
iret
data16
pop
sbb
mov
push
jg
out
add
mov
rcll
dec
movsw
push
jae
push
jle
es
cld
movl
filds
mov
jp
roll
outsl
xchg
push
clc
sub
xchg
push
xor
fnsave
lock
mov
mov
popf
or
cmc
mov
push
xor
push
fsub
cmp
mov
pushl
outsl
mov
repnz
std
pushf
lods
dec
rcrl
push
inc
mov
fs
les
pop
inc
mov
clc
clc
or
jge
test
out
bound
test
pop
subl
jns
inc
or
push
mull
sub
das
insl
jmp
test
mov
push
cli
call
js
popf
dec
data16
sbb
daa
fbld
mov
dec
jo
jp
xchg
fdiv
mov
into
mov
adc
popf
pop
ret
pop
xchg
push
lahf
aam
pusha
jp
sbb
xor
cld
push
lcall
xlat
push
out
dec
incb
sbbl
pop
iret
aam
mov
ja
clc
push
dec
pusha
add
iret
xor
mov
xchg
fwait
out
or
nop
fwait
jae
setp
mov
stos
int
fnstenv
jecxz
bound
insb
mov
pop
mov
xor
mov
outsl
out
xchg
mov
fadd
fwait
dec
stos
icebp
enter
repz
pop
ja
jnp
outsb
fisubrs
dec
movsb
insb
xchg
sbb
leave
les
cltd
mov
jl,pt
pop
mov
xorb
enter
das
push
xorl
addl
jle
adc
mov
push
mov
sbb
mov
sbbl
inc
sbb
dec
and
cli
stos
jmp
enter
mov
outsl
mov
push
aam
rcl
ds
xchg
mov
push
xor
mov
rolb
icebp
dec
inc
xchg
push
jb
mov
popa
push
jle
pop
mov
nop
fiaddl
jmp
cltd
lods
out
xchg
fs
divl
push
es
mov
and
xchg
sub
add
jne
fsubrl
pop
pushl
push
push
fnstsw
mov
and
test
jmp
add
test
in
test
mov
in
fs
sub
jb
jmp
xchg
std
cwtl
repz
ljmp
cmp
push
add
xchg
in
push
push
cli
ret
lods
mov
sub
insl
in
sti
sbb
data16
mov
andb
pushf
fs
imul
inc
rcl
xor
jnp
inc
and
ds
cmp
ljmp
jg
pop
and
push
sub
lea
push
fwait
aad
mov
dec
stc
adcw
das
repz
mov
stos
dec
xchg
inc
sub
sbb
stos
test
gs
ficoml
dec
in
clc
mov
mov
mov
xor
ds
pavgw
sub
pop
in
scas
nop
jne
push
test
or
dec
fstps
insl
sub
pop
fisubrs
jae
jno
mov
jp
cmp
xchg
jg
shll
ljmp
sbb
dec
sar
pop
lea
mov
rcr
lods
cli
dec
cmp
cmp
and
das
and
push
jno
sub
je
and
out
jmp
ja
out
mov
mov
fdivrs
mov
outsb
inc
dec
std
rolb
mov
cld
jnp
or
mov
cltd
shlb
sub
dec
adc
add
scas
mov
ret
in
xchg
movsl
pop
fdivrs
mov
movsb
arpl
pop
ljmp
insl
std
cmp
popf
iret
sarl
aam
fldl
adc
rcr
dec
add
lea
xchg
mov
nop
mov
cmp
leave
cmpsb
jle
int3
xchg
dec
sub
mov
jmp
adc
enter
aad
adc
jb
dec
orb
or
fistpll
pop
out
xor
lods
dec
ljmp
fs
jge
cmc
jns
xor
sub
adc
repz
push
subb
mull
adc
xor
clc
xor
out
pushf
mov
call
sbb
dec
rorl
ficomps
mov
repz
movsl
adc
pop
fisubrs
fiadds
ret
mov
xchg
pop
or
clc
adc
imul
enter
ret
fadds
cmpsl
adc
sub
lock
stos
dec
push
push
cmp
sub
addl
pop
jbe
dec
pusha
xchg
xlat
lahf
cs
movsb
cmp
jecxz
or
cmpsb
sbb
rcrl
cs
lcall
or
xchg
mov
push
dec
cmp
jge
sarb
push
inc
sbb
and
jge
insl
and
js
xchg
test
adc
add
call
xor
je
xor
and
repnz
mov
aaa
repz
and
inc
add
outsl
das
and
nop
push
popf
sub
xor
fcomip
mov
iret
inc
xor
aad
mov
nop
ds
test
dec
fists
idivl
add
cmpsw
fs
dec
cmpl
xchg
movsb
test
rorl
inc
fs
pop
jne
mov
jne
mov
adc
mov
mov
fstpt
sahf
xlat
cmpb
mov
out
inc
xor
shll
cmc
dec
cltd
es
push
fimull
adc
cmpsb
mov
push
rorb
mov
push
stc
clc
push
jg
addr16
sbb
adc
xchg
outsb
or
into
cmpsb
scas
jle
add
xchg
lea
xlat
cmp
icebp
jb
add
test
cwtl
add
and
leave
mov
jmp
sbb
jo
outsb
adc
xchg
rcll
test
push
aas
daa
ds
dec
addr16
cltd
push
jmp
lahf
pusha
cmp
inc
mov
mov
push
pop
bound
jnp
xlat
cmp
cmp
pop
pop
sub
xor
push
int
popa
shl
inc
imul
xor
xchg
scas
mov
popa
clc
xchg
fdivl
xor
fisubrl
ds
rcl
lret
addl
xchg
fmull
lret
xchg
sbb
sbb
ljmp
movsb
inc
pop
xchg
push
scas
rcrl
data16
xchg
add
mov
cld
or
shld
sbb
hlt
stc
lret
sbb
cmpsb
hlt
orb
in
pop
xor
ret
mov
xor
jbe
idivb
cs
inc
ds
fcomps
lret
in
xchg
daa
sti
adc
lock
outsb
jns
dec
sub
jbe
pop
cmpsl
fsts
lods
test
mov
mov
xchg
js
dec
inc
adc
addb
sbb
mov
std
ret
fnstsw
or
into
call
mov
pop
pop
leave
inc
push
push
js
cli
mov
adc
pop
movl
or
mov
lahf
jle
push
dec
fdivl
loop
sub
pop
pop
add
shrl
jno
lock
jl
jne
or
mov
mov
lea
sahf
inc
push
cmc
mov
pushf
idivl
fiadds
push
jmp
out
fwait
xchg
rcr
ds
xchg
jp
jbe
sub
fbstp
out
inc
lahf
dec
mov
pop
fiadds
adc
cmovle
jb
sub
int3
ret
mov
xor
sti
adc
pop
enter
aam
lret
adc
add
mov
adc
sbb
xor
add
sbb
inc
lret
pop
inc
rcll
out
sub
cmp
mov
stos
out
mov
sub
push
dec
mov
push
mov
test
fdiv
push
sbb
dec
loop
out
sbb
cmp
pop
rorl
cmp
dec
imul
stos
mov
dec
test
sbb
sub
push
dec
mov
repz
mov
mov
or
inc
cmp
or
pushf
or
out
push
cmp
mov
dec
add
push
fisubl
pop
pushf
pop
sbb
jae
jae
loopne
inc
mov
jg
in
adc
lods
stos
test
xchg
out
addr16
stos
fmull
std
cltd
bound
sub
cmp
shll
or
rorl
je
xchg
sub
jecxz
jnp
negb
and
cmpl
int3
pushf
insl
popf
push
xor
in
or
cmp
push
rcrb
xor
fnsave
mov
jno
mov
pop
mov
ljmp
rclb
mov
xor
ss
pop
scas
mov
es
push
lahf
pop
and
sti
pop
call
jp
loop,pn
mov
mov
mov
jo
hlt
in
push
jns
movsl
and
push
push
xchg
xlat
and
mov
arpl
xchg
sahf
mov
lahf
popa
and
add
ret
mov
rcrb
int
ret
mov
mov
sub
lods
popf
bound
imul
mov
fs
test
push
cltd
rdmsr
pusha
pop
mov
mov
hlt
adc
enter
popa
jl
adc
jle
movsl
dec
out
jle
push
mov
mov
cli
jecxz
mov
je
ror
add
sub
dec
outsb
fmuls
outsb
dec
sbb
pop
cld
inc
sbb
xchg
adc
pop
xor
or
je
sbb
lcall
out
jl
mov
jb
pop
adc
hlt
mov
sahf
sbb
pop
add
dec
push
jno
sbb
lods
adc
insb
fwait
push
dec
lods
ds
in
lahf
lea
jo
popa
neg
pop
mov
mov
mov
popf
outsb
add
arpl
mov
out
ss
push
ds
lock
inc
pop
inc
fcoms
xchg
pop
vmread
lcall
aam
jo
jbe
sahf
cmp
fmull
mov
in
mov
mov
pushf
mov
fldenv
mov
dec
push
daa
add
inc
into
or
xchg
stos
gs
mov
jo
test
adc
push
push
pop
push
cmc
xchg
mov
cmc
push
cmp
out
lods
jmp
xor
ljmp
into
aad
lret
hlt
aas
test
pop
cmp
cs
and
pop
push
incb
sbb
lock
aam
xlat
pop
push
and
mulb
mov
imul
cmpsl
ja
inc
inc
lahf
cmp
push
and
adc
and
cmp
stc
xor
sbb
aam
push
pop
cmp
xor
repnz
cmp
jg
xor
xor
inc
xor
push
push
fildl
mov
fistl
xchg
pop
mov
enter
dec
cld
jge
adc
outsb
mov
imul
and
test
push
es
test
out
dec
jbe
or
adc
inc
sbb
lods
mov
jge
sbb
pushf
add
imul
fistl
mov
lahf
inc
insl
outsl
push
cmp
cmpsl
jl
xchg
sarb
mov
pop
sbb
inc
incb
jbe
popl
and
addl
decb
inc
dec
push
sbbb
dec
out
daa
inc
jb
cs
push
faddl
pushf
lcall
test
mov
iret
repnz
dec
cs
inc
aad
lock
ds
dec
add
pop
jb
xchg
pop
or
movsl
stc
out
shll
pop
dec
and
xorl
mov
je
or
test
push
lcall
clc
or
js
fldt
imulb
and
pop
in
pop
mov
ret
pop
mov
cmp
mov
icebp
dec
xorl
cs
std
mov
stos
lds
sti
mov
inc
mov
in
jno
ja
xchg
fnsave
mov
clc
test
xchg
ss
cmp
add
std
add
js
test
dec
imul
pop
in
or
pop
orb
hlt
sarb
subl
mov
inc
repnz
sbb
cmp
sti
pop
dec
inc
jle
mov
mov
add
push
pop
xor
test
push
and
cld
jnp
mov
xchg
stos
shll
sbb
jno
in
sbb
push
and
dec
stc
leave
pop
mov
mov
scas
jle
or
add
pop
push
fiaddl
inc
imul
pusha
sbb
lds
xor
push
jl
aam
aam
mov
xchg
xor
pop
dec
das
mov
out
inc
fbstp
xor
loope
and
pushf
jmp
jge
jge
mov
hlt
subl
pop
jl
fidivrl
cmp
and
sub
sbb
arpl
movsl
std
int3
loop
out
pushf
mov
adc
shrl
mov
aas
and
sub
fistpl
xchg
sbb
sbb
aaa
ret
popf
scas
pop
imul
mov
mov
push
out
xor
in
push
pop
decb
clc
mov
or
rorl
jnp
inc
fisttpll
mov
pushf
inc
cmc
fiaddl
push
movsl
rcrl
stos
or
xchg
shl
sti
xlat
jno
jnp
cltd
pop
adc
mov
enter
pop
lret
data16
mov
pop
xchg
cmp
js
push
loope
or
fisubl
dec
bound
cmp
and
in
mov
push
cltd
or
dec
cmpsl
lahf
arpl
inc
xchg
xchg
sbb
ret
xor
xchg
cmp
xchg
cmp
data16
aad
inc
cmc
jmp
test
fs
mov
pop
outsb
inc
out
insl
dec
xor
aam
loopne
fwait
cmpsl
repz
cmp
std
repz
mov
jbe
divb
stos
sub
lods
int3
mov
adc
sbb
xchg
ret
dec
pop
xchg
sbb
push
xchg
or
test
lret
pop
sub
jo
xor
mov
xchg
sub
mov
jmp
push
mov
jne
dec
call
ljmp
mov
jecxz
das
jecxz
or
insb
lock
adc
sbb
aam
fmuls
adc
in
push
push
fsubrp
cwtl
jae
icebp
mov
call
lock
mov
dec
stos
or
out
sub
mov
mov
mov
jl
dec
or
iret
mov
jl
gs
push
mov
pushf
xor
rorl
xor
sbb
xchg
aam
orl
mov
aam
in
dec
mov
pop
push
into
xor
mov
lock
jl
jmp
inc
es
lds
aaa
repnz
out
jbe
bound
push
sbbl
lock
xor
push
push
movsl
xchg
jbe
mov
pushf
cmp
jno
movsl
or
jb
ss
into
hlt
inc
push
xchg
daa
inc
inc
aam
push
lahf
cmp
jmp
or
lock
out
icebp
out
mov
in
pop
mov
push
stc
pop
xor
mov
dec
dec
mov
outsl
sub
mov
push
movsl
loope
mov
mov
pop
cld
fnstenv
ss
in
push
outsl
and
mov
and
or
ds
addl
sbb
es
dec
cld
insb
mul
fiaddl
pop
stos
cmpsb
mov
or
jns
add
jbe
mov
shl
add
loope
pushf
jns
rorl
sarb
ret
xlat
push
lret
jmp
push
push
lret
out
adc
in
pushf
insb
fdivs
mov
pop
jl
insl
add
fwait
sub
pop
dec
or
insl
xlat
popa
popf
or
and
ljmp
popa
jg
mov
mov
mov
cmc
sub
push
rcr
popf
scas
jno
test
repz
lcall
cmp
adc
xchg
xchg
pop
mov
fcomps
out
cmp
jmp
into
mov
ljmp
mov
sub
dec
mov
xchg
into
testl
xchg
add
add
cmp
repz
jb
inc
shlb
outsb
dec
cs
les
hlt
jmp
jno
std
lret
push
add
adc
pslld
call
pushf
insl
cmpsb
add
cwtl
xor
jae
incl
inc
jne
add
dec
mov
cmp
mov
and
mov
jno
fwait
es
jnp
ret
dec
add
sub
fbld
ljmp
jge
movsl
mov
not
stc
pop
fisttpll
pop
pop
pop
into
pushf
pop
in
rolb
rcrb
popa
cs
mov
adc
inc
push
xor
push
inc
dec
data16
add
push
mov
inc
neg
repz
lea
sub
mov
xchg
loop
and
sbb
icebp
or
mov
out
lock
add
xchg
push
leave
adc
inc
repz
add
push
leave
lods
jmp
sub
lea
inc
mov
ret
iretw
push
bound
inc
hlt
sub
mov
lds
inc
popf
insb
icebp
movsb
jno
add
mov
mov
leave
sub
adc
adc
imul
mov
mov
mov
dec
bound
addr16
test
dec
cmp
repz
dec
mov
addb
inc
jecxz
inc
lahf
sti
push
sub
push
sbb
or
pop
std
stos
cmp
pusha
add
or
loopne
loope
xor
sti
jae
js
insb
int3
jecxz
jl
pop
lcall
fxch
imul
jp
ret
insl
mov
daa
out
mov
push
in
mov
outsb
and
add
cmp
in
mov
hlt
cmp
cmp
das
lock
sahf
sbb
gs
pop
mov
xchg
xchg
dec
add
push
lcall
mov
loope
adc
mov
mov
jle
inc
dec
mov
fstl
je
dec
subl
jne
sub
lahf
stc
addl
add
call
cmp
clc
xor
mov
fwait
adc
sbb
pop
jecxz
nop
and
push
lds
les
xchg
cmp
dec
jno
pushf
xchg
mov
test
mov
mov
mov
icebp
xlat
mov
mov
jno
pop
sub
sbb
xchg
pushf
mov
add
push
imul
inc
imul
inc
imul
pop
mov
or
int3
and
mov
jle
inc
pop
out
ret
ds
inc
fadd
dec
mov
fmulp
sub
inc
dec
int
mov
in
rol
sti
das
loop
adc
and
mov
leave
gs
out
rclb
lock
jge
xchg
sub
das
movsl
insb
cli
rcrl
sbb
adcb
jmp
pop
pop
sub
sub
mov
rorl
jnp
flds
mov
enter
jmp
or
jge
ret
lock
jge
jp
es
add
repz
test
push
mov
mov
add
xchg
sbb
dec
std
sbb
dec
or
shl
jo
fnsave
jle
jp
jno
repz
lret
addr16
sahf
lea
test
cmc
dec
in
in
or
push
fdivs
mov
cwtl
scas
jge
stc
dec
pusha
pop
aad
cmc
ret
push
stos
pop
dec
push
mov
lock
lret
jbe
pop
pop
push
pop
icebp
sbb
mov
ja
loopne
pop
pop
push
push
into
ljmp
lods
sub
xorb
sahf
pusha
xchg
push
pushf
fimuls
outsl
and
pop
loopne
je
jge
jbe
push
xchg
dec
fs
std
pop
add
mov
sbb
test
push
into
clc
popf
inc
insl
mov
add
push
cmp
ljmp
push
sbb
mov
imul
fwait
mov
loope
leave
inc
mov
std
jp
int
scas
popa
xchg
out
cmp
and
out
jne
cmc
test
xchg
cltd
lods
cmp
add
fidivrl
arpl
lret
mov
xchg
sub
dec
or
mov
aad
sub
nop
subb
outsb
ljmp
jo
or
flds
popa
sub
out
retw
mov
mov
mov
cmp
insb
mov
jg
data16
mov
sbb
mov
fsts
mov
negl
add
aaa
adc
jecxz
pop
sub
std
sub
cmp
test
in
pop
push
inc
dec
mov
cmpsl
inc
cmp
lods
mov
add
mov
adc
subl
and
gs
ja
int
cmp
dec
adc
inc
dec
xchg
jno
mov
jl
dec
daa
insb
test
hlt
cs
cmp
pop
ret
jae
adc
sarb
cmpsl
repnz
xchg
push
jg
int3
cmp
cmpsb
pop
loopne
out
fwait
jb
xchg
sbb
je
imul
and
stc
addl
dec
addr16
insl
sarb
mov
fsubs
pop
icebp
fisttpl
leave
andb
fs
push
loop
loopne
jle
outsl
and
les
iret
xchg
sub
sbb
imul
scas
sub
out
lds
add
push
pushf
sub
add
dec
mov
dec
pop
test
movsl
stos
arpl
in
jmp
or
mov
push
pop
js
lea
cltd
bound
repz
xor
cmp
and
jg
jmp
ret
fcoml
lock
mov
dec
fs
cmc
xor
sbbb
jl
dec
dec
sub
sti
pop
and
push
or
mov
or
xor
add
es
sahf
loope
sub
in
sbb
leave
mov
insb
sub
xchg
popa
sub
sub
push
rolb
test
fs
jl
jle
mov
test
repnz
ret
xor
add
jae
mov
or
movsl
les
ds
push
cmpsl
enter
divb
xchg
sbb
in
cwtl
pand
lea
lds
and
or
hlt
jg
lds
cltd
aas
rcll
imul
sbbl
xchg
and
mov
ja
mov
je
dec
clc
adc
pop
add
xrelease
dec
loope
mov
addl
jp
lds
into
cmc
mulb
xlat
jnp
fnstsw
jmp
ret
jns
cmp
pop
subl
mov
xchg
clc
push
jecxz
xchg
aas
sbb
ja
lahf
lahf
in
push
or
call
imul
or
push
gs
dec
imul
xorl
stos
sbb
mov
mov
pop
push
adc
cltd
cli
adc
stos
mov
mov
sub
divb
mov
push
push
push
adc
add
dec
aas
pusha
mov
in
inc
icebp
sub
fildl
push
pop
notl
mov
jbe
pusha
fiadds
push
sbb
xlat
sbb
xor
jle
and
jl
cmpsb
xchg
insl
jg
dec
jl
stos
xchg
ficoml
jmp
cmp
or
pop
jne
in
rcl
inc
popf
in
out
inc
xchg
xor
push
mov
adc
jo
inc
mov
lahf
xor
pop
mov
xchg
clc
cs
pop
jne
loop
in
push
fs
mov
iret
int3
sbb
mov
cld
fstpl
and
mov
rorb
sub
mov
lods
inc
adc
mov
int3
mov
jnp
data16
and
mov
dec
adc
sbb
jno
adc
pop
daa
repnz
lret
push
in
lods
mov
sar
or
mov
mov
and
mov
std
push
icebp
push
pop
add
nop
add
xor
adc
jp
inc
mov
mov
adc
add
or
test
or
push
mov
push
and
mov
movsl
and
push
mov
mov
pop
mov
push
xlat
lret
stc
iret
pop
sbb
clc
loope
cmp
loope
addb
inc
movsl
add
jmp
or
push
out
cwtl
pop
sub
lret
sbbb
xchg
repnz
sbb
cli
add
adc
outsl
mov
jns
pop
mov
jae
mov
and
xor
xchg
jmp
jae
pop
pusha
outsl
jno
mov
sarb
pop
lock
data16
adc
ret
mov
xchg
xor
xchg
push
mov
or
inc
addr16
mov
sti
lea
lods
and
and
fcompl
movsb
popl
fmulp
insb
pop
jg
rorl
repnz
jb
fsubs
mov
inc
icebp
push
ja
dec
notb
js
movsb
push
xchg
jb
sub
js
dec
and
mov
mov
cmp
ja
mov
jne
sub
test
iret
orb
xchg
repnz
inc
jns
sub
push
outsl
je
push
mov
add
jno
push
arpl
push
push
fs
pop
sub
push
orb
je
insl
cmp
xor
add
popa
sub
es
pop
dec
jge
ja
jno
push
in
aad
rcl
aam
jno
in
shl
mov
aaa
inc
nop
ret
.byte
jbe
