add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
mov
das
lahf
cmp
lods
scas
mov
and
push
cld
inc
frstor
popa
sub
mov
mov
dec
icebp
pop
test
xor
inc
int
frstor
xchg
cmp
mov
dec
icebp
pop
loope
adc
dec
mov
xchg
sbb
pop
fnstsw
out
pop
cs
outsb
in
xchg
mov
push
fsubrs
lcall
xchg
js
pop
sub
shll
jns
imul
inc
aam
adc
inc
add
xor
arpl
pushf
testl
lods
adc
add
aaa
ficoms
cmp
lods
ljmp
imull
push
shrl
jnp
mov
jne
or
add
popa
rclb
jle
dec
or
mov
enter
popf
and
sbb
adc
sets
mov
fwait
push
clc
inc
adc
cltd
inc
std
adc
jno
sahf
jb
cmp
mov
dec
icebp
pop
loope
adc
and
push
std
inc
int
frstor
pop
xchg
jns
popa
lock
loopne
xchg
sbb
lds
sbb
stc
push
cltd
and
test
in
jns
push
ret
sbb
je
jae
push
clc
jae
xor
xlat
popf
adc
xor
outsb
aam
fldcw
jge
dec
icebp
pop
loope
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
icebp
pop
loope
adc
and
push
std
inc
int
frstor
xchg
cmp
push
and
outsb
test
cwtl
cmp
pop
xor
test
cmp
push
loop
push
cld
cmc
dec
lea
popa
jae
ficomps
jle
pop
add
fs
mov
insb
int3
in
imul
test
lahf
fstps
and
add
popf
pop
xchg
fwait
jmp
pushl
dec
repz
pop
shll
lcall
push
add
mov
and
lods
ss
arpl
sbb
sub
aad
cmp
mov
sahf
iret
fisubrs
xor
bound
fdivrl
mov
push
int3
icebp
dec
push
cmp
and
fucom
out
jnp
jge
and
dec
push
mov
dec
xchg
cmpsb
movb
push
xchg
lahf
push
push
push
fistl
jbe
cmpsb
xchg
arpl
pusha
push
and
hlt
repz
leave
and
fnstcw
xchg
push
sar
mov
popf
lock
test
xor
mov
pop
int3
cmp
mov
nop
ljmp
arpl
in
and
adc
sbb
cltd
fldcw
jno
mov
push
rorb
sub
mov
adcl
jl
inc
rcrl
fldl
cmp
aaa
test
stos
insl
mov
xchg
dec
jp
test
out
push
jmp
fs
pop
repz
adc
adc
mov
popa
leave
sub
loope
jmp
mov
pushw
imul
fs
jnp
xchg
sbb
xor
rep
arpl
sahf
jge
jl
and
xor
cmp
jmp
rcr
add
add
mov
jae
xlat
aam
negl
test
lock
es
add
inc
mov
addr16
inc
push
pop
enter
mov
call
mov
insb
mov
shll
mov
cwtl
movsb
cmp
and
inc
cld
enter
mov
jbe
push
inc
inc
mov
mov
movsb
in
and
inc
imul
pushl
jmp
push
sub
adc
sbb
mov
and
cmp
icebp
cs
aam
mov
push
int
dec
cwtl
add
xor
gs
stos
fidivrs
xor
testl
out
or
pushf
cmp
and
lret
adc
sub
inc
out
sub
jae
or
jl
out
add
cmp
lods
lret
pop
and
jns
or
dec
xchg
mov
pop
add
xchg
test
cs
inc
dec
fwait
mov
mov
rcr
mov
lcall
push
int
cmpsl
loope
fs
out
xchg
inc
push
pop
mov
fwait
inc
jne
in
mov
out
sarl
jno
ds
add
add
sub
negl
aas
test
jp
jo
scas
in
bound
add
popa
dec
mov
push
add
xchg
and
test
and
push
jno
imul
test
test
mov
call
rcll
loope
push
cmpl
test
decl
cmp
mov
decb
out
mov
negb
mov
push
aad
pop
movsb
imul
pop
inc
inc
sub
outsb
sbb
dec
sbbb
or
js
dec
sbb
push
fidivs
fs
sub
push
xor
cltd
iret
lock
jmp
pop
mov
out
mov
push
scas
push
dec
stos
jge
outsl
xchg
out
movsl
rol
inc
add
retw
inc
fidivrl
adc
rcrl
fdivrs
adc
push
insb
ret
scas
cltd
jb
lock
int
insl
sbb
ds
hlt
mov
pop
test
mov
cmp
add
test
aam
loop
sbb
and
xor
outsl
jmp
in
stos
in
cltd
mov
xchg
adc
xlat
add
aam
xor
cmp
xchg
mov
loope
outsl
das
dec
jbe
test
pop
cmp
leave
adc
pushf
inc
inc
or
clc
bound
push
fisttpl
adc
fisubrl
and
outsl
add
jp
add
cltd
out
in
repnz
clc
or
inc
mov
pop
xlat
add
jns
jmp
out
gs
sub
shll
push
into
dec
rolb
cltd
out
sub
rcrb
xchg
rep
add
lods
out
sar
lds
in
sbb
push
pop
stos
adc
sub
test
xor
mov
adc
js
add
jmp
test
sbb
add
call
repz
sarb
ret
cltd
add
adc
pop
mov
mov
popa
dec
dec
sahf
sub
jp
out
xor
mov
mov
fimull
mov
addr16
push
adc
adc
test
arpl
and
aaa
outsl
nop
mov
jl
mov
jmp
push
mov
imul
gs
enter
aad
sub
mov
jge
cli
push
outsb
js
xchg
call
pop
lret
or
dec
lea
cmpsb
inc
je
leave
shrl
fwait
movsb
push
arpl
and
lret
dec
into
into
jle
aam
aas
inc
cmp
aad
fwait
dec
daa
std
mov
mov
jb
push
dec
orb
aas
out
clc
enter
ret
call
add
jbe,pn
cmpsb
and
sarb
jnp
push
je
movsb
lods
test
sbb
mov
push
inc
jmp
sbb
out
jmp
push
inc
test
lahf
cli
pop
and
loopne
and
add
mov
add
mov
add
mov
pop
jne
mov
pop
xchg
sti
sbb
jecxz
xchg
stos
cmp
pushf
ljmp
jmp
inc
imul
shlb
daa
mov
addr16
fmuls
adc
xor
pop
sbb
scas
bound
hlt
mov
test
push
push
adc
mov
movl
sub
call
push
sti
fcoml
loopne
add
mov
test
cmp
and
insl
sub
and
lret
shlb
dec
aaa
shr
push
js
sbb
mov
or
jb
imul
jnp
adc
or
inc
out
adc
pusha
add
dec
mov
dec
hlt
push
push
cmp
pop
orl
cwtl
mov
add
in
xchg
pop
pop
adc
inc
mov
movsl
jge
movb
xor
int
mov
inc
test
mov
mul
sub
xchg
ja
xchg
enter
adc
dec
mov
sbb
mov
and
push
shll
pop
jge
ljmp
sub
cmp
pop
mov
or
xchg
fs
ret
cmpb
repnz
into
in
es
rolb
inc
orb
xchg
mov
xchg
or
dec
mov
mov
cli
or
pop
lret
sbb
xchg
mov
insb
ljmp
xor
repnz
in
daa
lcall
gs
push
dec
mov
add
fdivs
add
repnz
jb
pop
cld
hlt
xchg
sub
inc
incl
dec
mov
dec
packssdw
loopne
add
dec
sbb
mov
dec
jmp
inc
xor
and
fsts
push
xor
mov
xchg
inc
inc
cmc
sbb
inc
dec
sbb
out
xlat
pop
sahf
mov
xor
cmpsl
test
pop
lea
add
xlat
jl
dec
nop
lods
dec
out
mov
not
stc
push
fs
cmp
popa
test
push
jp
jno
pop
add
xor
popa
mov
out
mov
js
dec
enter
fcomp
lahf
out
push
scas
loop
dec
lock
int
push
push
mov
stos
iret
xchg
inc
fistpl
pop
or
pop
jmp
bnd
in
jb
mov
cltd
btc
cld
jbe
test
mov
mov
jp
mov
loope
fst
jl
insb
loope
sbb
sbb
push
cmpsb
out
sub
in
insl
add
jns
into
repz
and
cmp
daa
testb
bound
stos
adc
hlt
les
push
jne
out
mov
mov
cmp
and
jl
adc
adc
pusha
movl
lea
imul
out
jbe
stc
pop
cmpsl
ret
out
cld
imul
andb
jne
in
out
mov
cwtl
jg
sub
pop
pop
xchg
push
and
lret
dec
sub
sub
jno
push
push
mov
pop
xchg
fisubrl
mov
cmp
cmp
push
stos
push
mov
xchg
sbb
dec
rcll
xchg
jecxz
insl
add
std
loope
xor
int3
shll
jne
jnp
push
into
stos
les
cmpsb
sahf
roll
dec
add
dec
repz
aam
aas
adc
sbb
cmp
out
mull
je
out
xchg
cmp
cmp
sbb
dec
pop
xchg
lcall
jecxz
push
fwait
loop
stos
sub
mov
repz
add
adc
scas
cltd
pushf
mov
jbe
mov
and
pop
adc
jae
xchg
out
pop
shl
and
or
fidivrs
pop
cwtl
and
fndisi(8087
daa
dec
out
cmp
ret
dec
sarl
adc
pop
push
push
jge
jns
xchg
test
leave
movsl
mov
testl
loopne
push
daa
insb
lahf
sbb
scas
ficoml
push
adc
mov
and
dec
fimuls
mov
dec
inc
aas
add
shl
mov
aad
or
loop
hlt
fcompl
jb
push
xchg
dec
adc
mov
push
andl
into
add
mov
loop
mov
inc
pop
jae
pop
cmc
push
push
int
lcall
popa
sub
sbb
push
xchg
lods
and
pusha
inc
das
cltd
push
lahf
sub
xor
mov
add
shl
cmc
jbe
fs
xor
add
out
sub
out
inc
cmp
cmpsb
js
jle
dec
pop
popa
out
addl
ror
xchg
test
mov
aaa
xor
sbbb
mov
cmp
pop
imul
or
je
fwait
xchg
sub
mov
fwait
ret
jbe
and
mov
in
rep
add
adc
adc
adc
pop
lahf
add
ret
dec
push
inc
and
dec
cmpl
dec
aaa
push
sbb
call
adc
add
in
jnp
out
mov
and
jg
jmp
xchg
xor
cli
cmpsb
push
jle
sahf
mov
cmp
mov
jmp
mov
outsl
arpl
pop
push
add
mov
inc
sahf
jne
test
mov
arpl
push
push
daa
inc
pop
pop
ja
bound
inc
aaa
mov
repz
fcoms
sahf
xor
mov
xchg
enter
or
popf
fldenv
sub
xor
and
in
xchg
add
scas
movsl
mov
xchg
cmpsl
xchg
fwait
or
jmp
ret
sbb
mov
sub
out
dec
add
lret
pop
xchg
sbb
cmp
idivb
icebp
cli
rclb
out
movsb
lahf
mov
imul
int
nop
mov
mov
cmp
bound
in
ficoms
imull
mov
inc
fdivrl
fcmove
and
stos
rcll
mov
insl
ds
push
into
shlb
add
inc
das
jl
loop,pn
add
inc
js
mov
clc
popf
inc
outsb
out
pop
push
roll
xchg
mov
push
cld
dec
loop
xor
jecxz
inc
jne
inc
rol
lea
or
inc
les
cli
mov
mov
and
pop
ja
cmp
sbb
push
cmpsb
cmp
pop
pop
fsubl
dec
mov
aas
mov
inc
pop
in
xchg
inc
cltd
push
push
out
xchg
aaa
rol
xor
lds
cwtl
mov
push
sub
enter
aam
cmpsl
xlat
pop
inc
hlt
rcrb
cmpsl
pushf
mov
vphaddbd
aam
sub
lods
scas
pop
out
inc
mov
jecxz
or
sbb
pop
sub
mov
shrl
sub
mov
ficoms
add
cmpsl
ror
cs
nop
jns
cmp
add
ja
push
sbb
les
test
dec
xchg
push
sarb
jne
jae
xchg
pop
inc
adc
cmp
add
cmp
test
je
or
dec
or
cmp
add
pop
mov
lret
fistps
fnstsw
stos
mov
cmp
mov
cli
outsb
ficompl
cmp
hlt
xor
out
push
sbb
jae
jmp
cmpsb
int3
in
test
mov
mov
loopne
xchg
mov
push
xorb
dec
movlhps
add
rorl
add
xchg
cli
popf
pop
mov
cmp
adc
mov
jg
incl
jne
shll
popa
mov
and
or
std
aam
aad
mov
fstpt
inc
mov
dec
test
add
jns,pn
jle
xor
out
xor
fwait
cltd
push
pop
in
jg
mov
arpl
mov
inc
daa
cltd
loope
cld
push
mov
aaa
andl
cmc
test
cmc
mov
les
adc
mov
or
test
les
and
sbbb
push
and
in
repz
aas
mov
outsl
xor
push
nop
loop
repz
imul
push
test
and
mov
mov
inc
ljmp
adc
push
xor
jb
add
mul
icebp
sub
aam
xor
repz
in
ret
inc
aaa
adc
test
cwtl
jmp
pushf
aaa
xor
stc
pop
add
out
mov
mov
loopne
nop
stos
cwtl
jb
jmp
ret
cmp
and
xor
popa
push
shlb
dec
mov
mov
pop
repz
adc
les
adc
push
cmp
out
xor
mov
add
daa
out
pushf
adc
fdiv
cld
pop
mov
cli
out
cmp
jbe
push
add
and
mov
push
or
shrl
mov
ss
insb
insb
add
scas
pop
push
add
adc
test
dec
mov
mov
jne
pop
fidivl
stc
xor
adc
cli
aas
mov
rolb
jo
xchg
es
ds
stos
sti
push
lret
adc
push
mov
out
js
neg
stos
and
jns
popa
test
testl
cmp
adc
jle
icebp
icebp
xchg
pop
addl
pop
lahf
test
sbbb
or
pop
xchg
and
int
test
lds
sbb
inc
mov
or
loop
cwtl
addr16
xchg
negl
imul
mov
repnz
jp
outsb
push
imul
incb
test
cmp
ss
xorl
addr16
mov
jno
mov
mov
mov
ja
sbb
and
push
jp
xor
pop
mov
pusha
jecxz
icebp
enter
push
or
aam
addr16
add
rcll
inc
mov
imul
ret
pop
mov
in
lods
sub
je
pop
addb
cmp
inc
daa
imul
inc
fs
adc
push
xchg
pop
add
jecxz
sbb
int3
into
lock
adc
or
cltd
and
out
rcll
dec
mov
ss
xor
xchg
sbb
push
rcr
sarl
cmc
lea
jg
aaa
mov
aaa
mov
or
xchg
jnp
in
mov
pusha
jg
xor
mov
jns
cli
cmp
jmp
sbb
inc
cmp
mov
dec
rcrl
xor
jnp
jne
fstps
sbb
add
fwait
pusha
mov
leave
xchg
mov
mov
mov
sub
sbb
sub
add
fistps
out
scas
clc
in
push
pop
or
xchg
push
outsl
mov
repz
int3
fidivl
sub
sbb
mov
push
mov
stc
cmp
mov
cmp
es
jno
push
mov
int3
sbbb
in
or
xor
or
vcvttsd2si
xor
rorb
xorl
cld
adc
mov
mov
into
sub
xchg
mov
data16
push
out
or
outsb
aam
les
sbb
add
pop
stos
mov
sahf
imul
adc
or
sbb
inc
in
iret
sbb
les
and
fstpt
aaa
psubsw
mov
xor
pushf
pop
xchg
pop
fdivrp
dec
cmp
out
xchg
cmpb
iret
sbb
faddl
and
dec
add
movsl
and
inc
shrb
jns
mov
test
cmpsb
aam
repz
adc
or
outsb
out
jnp
sub
sbb
popf
and
dec
out
arpl
das
lret
push
inc
sbb
pop
imul
xlat
rcll
loope
test
inc
xor
mov
adc
rolb
subl
hlt
pop
mov
cwtl
adcb
pop
cmpsl
inc
int
imul
std
rclb
lock
jnp
or
dec
cmp
mov
mov
add
pop
mov
mov
rolb
sti
addr16
mov
xchg
fmull
mov
inc
push
les
adc
es
adc
mov
or
push
or
sbb
and
inc
xor
push
shl
mov
cmpsb
inc
mov
mov
rol
jg
cmp
jb
adc
nop
scas
rcll
pop
mov
in
call
sbb
or
and
cmp
push
xchg
rcll
bswap
subb
push
xchg
movsl
ffreep
xor
mov
gs
jecxz
je
xor
fisttpl
rcrb
popf
sahf
xor
lahf
adc
mov
daa
sub
xchg
mov
cmp
mov
sbb
int
repnz
fsubl
out
mov
mov
repz
mov
and
ja
inc
inc
testb
cmp
lds
mov
fwait
xchg
dec
test
mov
pop
jno
mov
push
aas
dec
jns
mov
out
adc
push
and
iret
dec
xchg
mov
loop
mov
sub
icebp
imul
pusha
add
sbb
movsb
popa
iret
fs
dec
dec
out
mov
mov
jbe
pop
cmp
cwtl
in
pop
adc
xchg
push
mov
shrl
push
and
dec
or
repnz
pop
jae
and
lds
add
mov
mov
andl
pop
pop
push
cmp
outsb
cmp
xor
daa
and
fwait
mov
sahf
push
jno
das
push
inc
sti
dec
sbb
xchg
mov
push
mov
mov
mov
mov
push
pop
sub
push
xor
mov
jbe
outsl
into
repz
cwtl
out
or
mov
inc
int3
cmpsb
inc
loopne
shlb
aad
mov
xor
fmulp
dec
fnstcw
and
cmp
or
imulb
jno
pop
int3
jmp
lret
in
dec
mov
cmpsl
dec
test
mov
pop
cs
clc
test
pop
fsubl
lret
dec
pop
inc
and
sahf
insl
repnz
mov
push
outsb
push
leave
in
movsb
fisttps
fisttpll
adc
mov
aas
or
mov
scas
inc
inc
enter
lea
outsl
jbe
cmp
xchg
ljmp
sub
sbb
aaa
fs
out
mov
mov
ja
enter
or
mulb
in
imul
out
ja
faddp
cs
imul
adc
mov
xchg
stos
lds
sbb
rcl
mov
or
es
cmp
insl
sub
ret
xor
xor
cwtl
out
mov
fldcw
sbb
dec
or
sub
inc
stos
roll
sbb
cltd
divl
lock
out
test
jo
inc
jecxz
push
add
push
hlt
pusha
cmpl
pop
repnz
and
pop
ljmp
into
dec
or
ficoms
fisttpll
ljmp
lods
dec
mov
and
push
xchg
pop
inc
or
inc
scas
or
push
imul
in
and
mov
dec
pop
stos
and
or
push
aas
adc
cwtl
push
adc
lods
bound
pop
fs
mov
mov
rolb
ret
xor
pop
mov
cwtl
iret
nop
pop
fs
jnp
xor
sbb
push
push
int3
jo
ss
xor
mov
mov
sarl
dec
icebp
pop
loope
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
icebp
pop
loope
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
icebp
pop
loope
adc
and
push
std
inc
int
fsubl
xchg
cmp
or
sbb
rorl
and
xor
mov
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
fdivrl
jae
and
jge
insb
leave
xor
fistpll
icebp
sbb
or
cmp
sub
faddl
push
cld
arpl
jae
add
pop
rorl
insb
repz
or
cmp
sub
fcompl
push
cld
jnp
push
sbb
pop
and
xchg
inc
repz
outsl
std
jb
inc
mov
inc
int3
cmp
in
mov
aaa
mov
xchg
pop
mov
aas
movsl
xchg
push
insb
call
or
popa
mov
or
mov
pop
mov
icebp
repz
cmp
mov
fs
ret
adc
push
inc
fistps
adc
xchg
test
cltd
adc
push
mov
inc
pushf
and
pop
xchg
pop
sub
add
loop
fs
cmp
fldenv
jnp
mov
pushf
aam
daa
and
xor
shrl
repz
jmp
push
fsubl
hlt
mov
arpl
cmp
inc
sbb
mov
test
sub
and
or
mov
cld
jae
imul
dec
lret
jl
insb
ljmp
sub
lcall
jb
push
lds
dec
in
pop
sbb
mov
pushf
jns
sarb
cmp
jbe
jo
and
dec
mov
xchg
sub
dec
iret
sub
mov
test
xchg
add
push
pushf
outsl
mov
mov
ret
dec
sarl
repz
or
cmp
sub
faddl
push
cld
arpl
jae
add
pop
ret
dec
sarl
repz
or
cmp
sub
faddl
aam
inc
enter
jb
leave
sub
sarl
jae
jo
or
xor
or
add
cmp
stos
cmp
lcall
insb
xor
cmpsb
sbbl
push
and
in
test
inc
insl
dec
addr16
in
jmp
fidivl
mov
je
rol
mov
insl
cmc
cmpsl
or
int3
xor
cmp
pusha
sbb
adc
mov
cld
mov
sub
lods
mov
push
mov
jmp
cmp
and
inc
cmp
dec
xor
arpl
mov
jge
jnp
sbb
addr16
jle
sti
mov
xor
pusha
and
adc
sbb
xchg
insb
out
in
je
xorb
pop
push
dec
daa
inc
icebp
ja
dec
mov
lcall
fidivrs
push
and
rcl
pop
int
ss
pop
pop
dec
outsb
lds
inc
rcrl
icebp
xor
sbb
fcmovnb
add
sbb
xchg
xchg
repnz
xchg
sbb
xlat
push
sub
repnz
dec
xor
fstl
sbb
outsb
imul
jbe
mov
jl
fwait
pop
test
testl
push
or
push
mov
adc
jg
jecxz
shrb
inc
push
pop
rclb
in
fst
aas
in
xchg
xor
mov
sahf
mul
inc
pop
fcmovu
xor
mov
cltd
call
and
cmp
sub
xchg
sbb
push
out
fldcw
jle
in
in
std
popf
and
nop
cwtl
mov
pop
adcb
cmp
mov
cmp
cwtl
popf
push
pop
int3
pop
outsl
dec
out
jecxz
cmovb
push
shlb
dec
sub
adc
mov
aad
mov
orb
push
pop
ljmp
in
adc
xchg
mov
push
imul
and
mov
nop
loop
cmp
aad
iret
inc
divps
cmc
adc
leave
call
loopne
out
out
adc
jg
stc
test
loopne
call
ret
cmp
adc
dec
cltd
fdiv
loop
dec
repz
iret
mov
mov
jo
stos
mov
inc
rcrb
hlt
ja
pop
inc
dec
daa
sbbb
sbbl
addr16
push
test
jecxz
xlat
add
mov
imul
xchg
aas
xchg
xchg
adc
outsb
jnp
out
inc
stos
cmp
dec
push
out
sbb
cmpsl
ljmp
xchg
push
and
sub
xchg
xor
push
int3
cmp
lods
sbb
rcrl
and
pop
sub
frndint
mov
mov
ljmp
in
loopne
jnp
ja
daa
inc
push
das
repz
lahf
jo
sbb
dec
pop
mov
psrad
hlt
sahf
cmp
pop
inc
out
jne
test
cmpl
dec
imul
nop
leave
cli
mov
xor
push
in
adc
cmpsl
sub
jg
out
sub
sbb
xchg
pop
fbld
jb
loopne
test
out
mov
mov
les
sub
scas
fstpt
out
fldl
lahf
ret
dec
lds
push
push
jnp
cltd
jecxz
sbb
xchg
loope
and
out
fsubr
les
ret
outsb
jl
cmp
or
push
ficoml
mov
jo
add
mov
std
stos
jle
ret
sbbl
out
jmp
jo
pop
nop
ds
jmp
sub
cmc
xchg
dec
lret
movsl
xchg
in
cld
mov
fwait
in
dec
cmp
rorb
push
jge
es
mov
xlat
movsb
adc
test
into
ret
ja
adc
xor
push
inc
into
lock
adc
inc
leave
pop
and
ja
gs
xchg
mov
outsb
ljmp
mov
sahf
xchg
adc
jo
jecxz
sbb
adc
pop
addr16
sub
imul
mov
out
xchg
inc
mov
repnz
ss
mov
dec
sbb
sub
js
dec
mov
cmc
mov
adc
pop
movsl
cmc
sub
xchg
add
aad
pop
or
ret
and
add
jle
outsl
cmp
int
ret
call
mov
inc
ret
sbbb
jmp
inc
inc
gs
inc
dec
dec
jle
call
jb
jge
mov
repnz
adc
add
adc
xchg
das
cmp
dec
xor
cld
das
movsl
loopne
into
ja
bound
cmp
repnz
popf
sti
pop
imulb
sub
test
rcll
mov
xor
ljmp
daa
adc
jo
or
sub
jo
fucomp
bnd
pop
cmpsb
sbb
test
mov
in
repz
subb
scas
leave
mov
push
mov
xor
jg
pop
xlat
xchg
inc
cmpsl
inc
mov
iret
cld
cmp
xor
xor
bound
jo
loop
xchg
inc
sahf
fidivl
push
mov
cmp
frstor
and
lret
push
cmp
jo
adc
xchg
ljmp
dec
fcomps
adc
ljmp
cmp
js
sbb
mov
xlat
adc
movsb
enter
mov
lahf
or
je
cmp
mov
lods
in
out
cmp
loop
add
push
mov
ljmp
xchg
jge
sti
jb
dec
or
xlat
iret
xchg
loop
adc
inc
sbb
into
lock
mov
xor
sbb
stos
push
jp
push
daa
sub
sbb
fwait
or
dec
jmp
test
cltd
aam
nop
lcall
mov
jg
mov
aaa
xchg
jle
loopne
mov
push
lcall
lock
cmpsb
jb
mov
dec
pusha
test
xbegin
push
int
cmp
and
push
adc
sub
push
push
and
imul
add
movsl
out
aaa
out
push
jne
cmp
pushf
xchg
sbb
fimull
jnp
mov
scas
fstl
cwtl
scas
mov
fistpl
pop
mov
mov
std
inc
adc
repnz
cmp
out
push
or
and
imul
leave
rolb
hlt
or
stos
jnp
jge
lods
xor
repz
mov
jecxz
fcomps
fisttps
push
jnp
orb
into
in
sub
cmp
cmpsb
std
cli
inc
int
std
mov
ret
xlat
xor
cmp
mov
shlb
pop
adc
aam
popf
adc
xchg
pop
jp
sub
sub
xchg
mov
sub
push
pop
ret
mov
dec
or
test
outsl
pop
in
push
jmp
jae
xchg
dec
loopne
movsl
in
out
std
sbb
mov
int3
mov
xlat
sbb
sbb
movsl
xchg
or
mov
adc
or
add
jmp
jns
mov
or
xchg
jnp
dec
jnp
push
adc
outsl
dec
jae
cltd
cmp
popl
mov
mov
in
mov
aam
lock
ss
jg
inc
ret
mov
movsb
and
shll
adc
mov
and
and
push
push
and
icebp
jbe
pop
jns
and
add
arpl
in
lahf
fpatan
adc
inc
mov
xor
andb
mov
int
or
fprem
adc
fs
ret
sub
inc
push
or
or
aad
fcomps
shlb
xchg
mov
pop
xlat
add
xchg
pop
sub
sub
or
mov
cmc
aam
pop
cmp
lods
lea
arpl
arpl
bndldx
push
pop
in
jae
fimull
loopne
push
jle
xor
mov
call
movsb
loop
sub
jmp
dec
xchg
stos
imul
rcr
bound
sub
inc
lods
repz
or
and
xor
jno
add
sbb
lret
icebp
sbb
inc
dec
sub
pusha
and
lods
cmpsl
cli
push
stc
cltd
cmc
test
push
int
test
out
aad
cmpsl
sti
into
jle
mov
jge
cmp
cs
sub
cmp
dec
addr16
jle
fnstcw
sub
cmp
data16
dec
inc
sahf
add
xor
mov
int3
push
cwtl
xchg
push
push
jl
sub
lock
mov
xor
jne
jmp
mov
testb
push
jge
das
pushf
mov
adc
push
cmp
ret
loopnew
mov
dec
pusha
addr16
rcrb
cmp
fidivl
ss
jns
xor
ret
mov
cmpsb
sub
lods
dec
push
adc
scas
push
mov
mov
cmp
cltd
ret
pusha
push
nop
pop
jne
jp
and
loope
cmp
addl
pop
out
adc
je
ss
push
int3
das
cmp
sbb
int
rclb
lcall
push
lcall
repz
mulb
pop
push
push
iret
mov
in
push
fmull
test
imul
cmp
movsl
jmp
xchg
mov
outsl
add
mov
inc
pushf
and
cmp
pop
nop
dec
rcl
pop
dec
rorb
and
ds
sbb
arpl
pusha
clc
subb
les
sbb
pop
adcl
sahf
pop
std
shr
stos
rorb
lock
je
sbb
jns
push
or
mov
iret
cs
movsb
cwtl
mov
lret
iret
sbb
inc
int3
jne
add
repnz
gs
mov
and
cwtl
stos
sbb
mov
imul
add
in
and
insl
arpl
rorb
nopl
push
stos
clc
push
or
iret
movsl
loope
out
dec
cmp
xchg
cmp
jg
stos
push
addr16
call
sbb
mov
shlb
add
pop
in
inc
dec
push
ret
and
jb
xor
sbb
stos
orb
cli
shrb
mov
mov
xor
and
push
cltd
std
out
sub
addr16
enter
iret
mov
test
stos
ficoms
gs
andnps
lea
xchg
cmpsb
sti
adc
add
push
mov
outsl
xchg
ja
idivl
mov
fcmovnb
leave
fst
es
and
out
mov
and
jle
lods
out
mov
and
cwtl
test
xlat
cmpsl
cmp
mov
mov
pop
lret
jmp
sbb
pop
cmp
mov
push
pop
push
cmpsb
cmp
mov
stos
push
pusha
idiv
pop
fs
mov
pop
xchg
mov
outsb
xchg
outsb
push
int3
adc
inc
outsb
dec
dec
jae
xchg
ss
das
movsl
les
lret
imul
ret
inc
xchg
mov
rcrb
pusha
or
inc
into
or
fnstcw
out
push
test
ret
add
jl
xchg
in
bnd
push
lret
or
mov
and
push
outsb
pop
test
dec
jl
add
push
xchg
in
push
ds
insl
pop
mov
cld
add
je
ret
mov
push
outsl
pop
sub
cld
jmp
adc
scas
stc
test
sub
mov
in
xchg
sbbb
mov
fisttpll
out
fwait
repnz
je
iret
cli
mov
in
ds
aam
mov
les
sbb
inc
jo
or
inc
fdivr
rorl
dec
shlb
add
lcall
idivl
es
outsl
out
dec
push
fwait
add
or
vpackuswb
push
jmp
fwait
mov
idivl
and
mov
decl
outsl
outsl
ret
lahf
sbb
ret
inc
loopne
leave
in
inc
xor
out
ja
jmp
es
dec
cmpsl
imul
sub
test
ret
movsb
ret
loopne
pop
xchg
je
scas
scas
mov
into
add
ss
pop
inc
xor
pop
repz
xchg
lods
mov
cmc
xchg
fsub
mov
cmc
jbe
sub
mov
fdivrl
std
mov
iret
out
scas
jg
push
dec
es
jbe
or
jmp
adc
mov
cmp
mov
pop
adc
and
push
cld
fisttpll
or
vpaddd
test
ret
xor
repz
push
push
push
nop
sub
pop
stos
xor
jnp
leave
js
or
popf
mov
and
mov
jl
xchg
jns
stos
in
nop
sbb
cwtl
mov
jecxz
lahf
jno
dec
and
adc
clc
inc
mov
push
sub
push
outsl
xorl
aad
cli
mov
repnz
jo
xchg
push
cmc
sar
fists
mov
imul
cmp
lds
fs
fildl
mov
sbb
pop
leave
outsl
int3
sbb
sbbl
inc
mov
pop
push
fbstp
ja
inc
adc
push
rcrl
enter
cmp
out
push
aam
popa
cmpsl
lret
mov
cli
mov
add
enter
loope
mov
dec
push
popf
sbb
sub
cmpsb
jbe
jo
shrl
xchg
fcoms
jge
call
jno
sbb
sbb
adc
loope
inc
out
xor
fucom
xor
sub
adc
mov
cltd
push
push
imul
inc
xlat
adc
ret
xlat
add
pop
btr
fwait
pushf
xor
repz
cmc
icebp
std
cmpb
test
mov
les
add
outsl
in
ret
jmp
fs
es
stos
flds
cwtl
push
and
sarb
mov
mov
popf
dec
lock
dec
push
sbb
cmp
push
mov
leave
stos
jno
inc
jp
sbb
or
and
lret
test
mov
sbb
mov
in
mov
jae
daa
and
push
loop
inc
sbb
ret
sub
fistl
xorl
cmpl
dec
adc
stos
push
mov
inc
and
insl
pop
lods
push
or
jle
fnstcw
imul
push
scas
in
add
clc
mov
int
xchg
subb
pop
inc
es
push
cwtl
or
es
sahf
decl
and
pop
and
jge
mov
jb
xor
inc
inc
mov
fldcw
sarl
sub
sub
pop
sub
mov
adc
pop
mov
aaa
notl
lods
mov
cmpsl
movsb
adc
push
sbb
mov
xor
or
inc
or
fildl
insb
mov
and
aaa
mov
pop
enter
cmp
mov
sahf
push
mov
mov
aaa
xor
xor
mov
mov
mov
add
movsb
mov
movsl
fiadds
hlt
jmp
pop
push
sbbl
int3
sub
jmp
or
fstpt
fbld
fisubl
lahf
sbb
imul
lahf
loopew
repnz
mov
mov
notb
jmp
repz
mov
popa
cmp
adc
add
push
mov
mov
and
push
clc
addr16
imulb
loop
pushf
cmpsb
repz
jnp
sub
sub
adc
pop
cmp
push
sub
mov
push
inc
ds
aad
dec
jecxz
insl
ret
xchg
sbbl
mov
leave
shlb
xchg
fstl
ds
mov
jae
sbbb
sbb
push
mov
jo
test
push
xor
out
pop
jmp
scas
mov
or
sub
xor
insl
pop
pop
jbe
roll
jge
lods
clc
scas
pop
cmp
or
pushf
add
adc
shrl
jecxz
pushl
cwtl
cs
fld
sub
es
mov
jl
cld
jae
lret
mov
pop
testb
mov
les
push
dec
lret
js
cwtl
adc
pop
cmpsb
pop
int3
aam
sti
xor
nop
mov
xor
ds
mov
jo
rcrb
das
jb
inc
lret
push
and
mov
in
sbb
jmp
sub
xor
adc
addr16
out
jbe
ret
pop
sub
xlat
fidivl
rcl
fistpll
mov
push
mov
pusha
sub
push
add
lret
notl
outsl
cmp
add
loop
add
mov
insl
hlt
cli
cmp
aaa
or
mov
jl
xchg
cmpsb
sbb
in
js
pushf
dec
dec
and
shlb
fistpll
fadds
adc
sbb
shlb
mov
push
cmc
mov
push
lods
xchg
jnp
out
sarl
js
inc
imul
sbb
add
gs
or
and
xchg
xchg
lds
adc
pop
fsubl
jno
jnp
fnstsw
sar
inc
outsl
xchg
mov
arpl
inc
or
mov
test
jl
sub
inc
fildl
pop
arpl
and
mov
mov
aaa
cld
insl
je
push
push
daa
mov
push
push
mov
inc
addl
lret
roll
cmp
and
mov
pusha
shrb
and
lcall
cld
or
enter
arpl
jp
mov
hlt
fdivs
sbb
orl
std
jg
push
aaa
cli
insl
mov
repz
outsb
lahf
add
dec
and
mov
dec
lcall
inc
dec
mov
sbb
loop
xchg
insl
ret
cmp
into
stc
adc
fwait
mov
or
pusha
and
fistl
dec
jmp
lds
ds
cmp
inc
push
jge
inc
dec
dec
adc
fwait
add
jg
cmpsb
aad
fimull
lcall
ljmp
in
cmp
out
in
imul
mov
sbb
push
xchg
or
ret
mov
push
xchg
repnz
sbb
mov
ja
add
or
mov
jmp
fisubl
out
aam
push
mov
dec
pop
fmul
js
aad
and
cmp
repz
lahf
xchg
out
je
jns
popa
aad
das
mull
faddp
mov
cmpsb
in
test
or
mov
and
outsl
inc
cmp
int
xchg
add
popa
push
push
sub
mov
jnp
out
ljmp
or
in
sub
mov
xchg
pop
push
je
cltd
data16
lea
mov
repnz
mov
in
out
cmpsl
mov
or
dec
mov
shll
dec
popf
addr16
ficoml
xchg
mov
loop
ffreep
test
sub
icebp
fwait
dec
ficoml
aaa
ror
sub
cli
add
mov
or
mov
into
and
bound
into
jmp
fnstenv
js
inc
xlat
lahf
fdivrl
dec
xor
loopne
aaa
cmp
int3
mov
sub
and
jg
pop
mov
loop
jb
cmp
and
mov
mov
fbstp
cld
mov
sub
xchg
and
push
lahf
cmpsl
cmc
stc
pop
or
pusha
rorb
hlt
jg
cwtl
xchg
xchg
cld
testl
icebp
clc
fimull
jbe
or
xchg
hlt
add
outsl
jmp
push
xchg
fcomps
add
int3
sahf
lock
mov
arpl
arpl
aas
sbb
lods
or
gs
popa
cs
pop
adcl
divl
mov
mov
xor
jae
lea
xchg
fiadds
decl
and
les
stos
dec
cmp
sub
dec
cmp
inc
pop
add
xchg
jmp
rcl
lods
rcll
sbb
mov
es
xor
xor
or
pop
pop
stos
out
dec
push
jge
icebp
xlat
test
sub
repnz
xor
dec
push
cmc
jo
sub
cmp
clc
shll
cmpsl
sub
ss
sub
xlat
pop
or
int
push
dec
pop
dec
clc
loope
sbb
imul
mov
sbb
or
jnp
dec
scas
jl
mov
mov
inc
lret
adc
ficoml
sbb
jbe
test
cmp
mov
jo
add
mov
outsl
lret
pop
xor
sub
sub
leave
or
aas
insb
cmp
in
je
jmp
sbb
push
jmp
adc
mov
xor
loope
xchg
inc
adc
ss
mov
js
jne
sub
cli
lahf
jmp
out
adc
sahf
xor
out
add
pop
inc
jbe
stos
jno
in
jg
out
outsl
lock
sbb
dec
and
out
fimull
mov
adc
sbb
aaa
cmp
dec
xchg
pop
lahf
shrb
mov
push
das
xor
push
mov
and
or
lea
fcompl
mov
or
jae
negw
pop
mov
shrl
sbb
std
hlt
xchg
adc
adc
stos
sbb
push
aad
jbe
jbe
dec
test
lds
addr16
cmp
cmp
rol
sbb
xor
shll
inc
and
push
mov
fcmovb
out
roll
xor
xchg
daa
aad
sbb
mov
xor
push
bound
push
xchg
out
sbb
in
jae
add
pop
ret
dec
sarl
repz
or
cmp
sub
faddl
push
cld
arpl
jae
add
pop
ret
dec
sarl
repz
or
cmp
sub
faddl
push
cld
arpl
jae
add
pop
ret
dec
sarl
repnz
or
cmp
sub
faddl
push
cld
arpl
jae
add
pop
ret
dec
jns
jecxz
test
test
rorl
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
insb
dec
jl
dec
xchg
pop
add
xchg
adc
in
xor
and
adc
add
pushf
inc
insb
mov
mov
sub
cmp
or
sbb
cld
xor
add
adc
add
pushf
inc
jne
mov
xor
cmp
in
filds
dec
movsb
jno
and
lret
inc
add
out
xlat
jg
cmp
int
fistpl
push
pop
cwtl
inc
rolb
push
pop
lods
sbb
cmp
ds
repz
mov
aad
xor
adc
jae
mov
xchg
mov
cmpsl
mov
mov
fmull
mov
push
lods
push
inc
bound
insb
mov
cmpb
repnz
cmp
stc
daa
and
push
jae
popf
pop
mov
icebp
dec
rol
pop
rcl
and
inc
ret
cmp
int
sub
push
and
test
pop
or
ds
call
jno
mov
mov
jmp
push
pushf
movsl
mov
push
dec
push
pop
mov
repnz
or
add
in
add
dec
mov
movsb
lcall
sbb
pop
xchg
inc
mov
nop
addr16
sbb
icebp
and
negl
cmpsl
inc
popf
cmp
or
dec
scas
scas
push
cltd
je
ja
lods
and
cs
xor
sub
in
in
ret
fs
cmp
or
sbb
in
xor
and
adc
add
pushf
inc
insb
mov
mov
sub
cmp
or
sbb
in
xor
and
adc
add
pushf
inc
insb
mov
jne
xor
scas
inc
imul
das
and
mov
fdivrs
push
std
xchg
outsl
push
ret
hlt
jnp
arpl
ja
sbb
test
inc
cmp
sub
fs
mov
sahf
outsl
pop
add
sbb
mov
sub
into
or
xchg
sub
pop
insl
ljmp
mov
popf
sti
es
sbb
outsb
ffree
xchg
insb
imul
adc
jle
add
and
int
cmp
daa
ljmp
mov
pop
test
and
andl
arpl
jge
jl
dec
sahf
scas
movsb
mov
cwtl
add
cmpsb
in
cmp
and
pushf
out
cs
test
out
pop
gs
mov
jae
lcall
mov
xchg
add
out
push
loopne
imul
jl
mov
or
insl
int3
add
pop
fisubl
sbbb
fiaddl
lcall
xor
pop
fs
dec
lock
push
daa
jl
sub
jne
pop
pushw
dec
scas
sbb
mov
aad
xchg
adc
adc
add
mov
mov
inc
lock
jno
decl
pushf
cmpsb
push
add
push
dec
insl
adc
dec
add
testl
push
mov
call
or
call
add
adcl
jge
sarl
cmp
rclb
js
pop
mov
xorl
inc
lods
jmp
das
pop
shlb
lds
xchg
repnz
mov
cmp
xchg
orb
stos
pop
xor
push
rolb
cmpsl
xlat
ss
cmpsl
lcall
jle
repnz
je
mov
iret
inc
cmp
jge
mov
aas
dec
adcl
adc
das
sahf
mov
pop
pop
xor
dec
lods
scas
jnp
fadd
leave
in
enter
repnz
jg
fimuls
or
pop
jg
adc
or
push
iret
dec
lret
int3
fimuls
cmpsl
cmpb
mov
movsb
and
outsb
and
lods
mov
sub
adc
mov
mov
xor
push
mov
dec
lahf
outsb
dec
sub
add
or
jmp
mov
pop
out
jns
scas
mov
mov
fldenv
mov
call
mov
out
aaa
pop
nop
iret
in
repnz
sarb
jg
lea
rcrl
adc
or
xor
cmp
jg
out
xor
or
hlt
in
fs
add
or
xor
dec
les
xchg
sbb
je
jecxz
jno
es
cld
adc
or
push
aam
cmp
dec
sub
test
repz
sub
lea
inc
and
gs
out
cli
lcall
mov
xor
xorl
clc
dec
in
push
pop
shll
pop
or
outsb
test
pop
cmp
aam
pop
pop
outsl
or
sbb
data16
pop
arpl
mov
inc
xor
js
gs
fsts
sbb
mov
movsl
and
push
outsb
pushf
xchg
mov
jmp
cmp
cmp
lahf
cltd
outsb
pop
dec
xchg
clc
and
pop
andb
pop
or
jnp
fnsave
sahf
jns
movsb
aas
sbb
lods
pop
fldcw
cmpsb
sub
xchg
push
inc
or
stc
and
push
mov
ja
fs
mov
xchg
and
add
cmp
ficomps
out
and
mov
rcr
push
pop
jmp
stos
ficompl
test
or
and
mov
or
ret
adc
out
or
add
scas
popa
mov
inc
loope
ror
sbb
rol
loopne
cmp
cld
push
mov
mov
ss
subl
cmp
pop
pop
fnstcw
xchg
insl
cmp
fsubs
pusha
push
test
lahf
sbb
roll
pop
adc
call
cltd
aas
xor
sub
adc
je
dec
faddl
xchg
cli
mov
fiadds
arpl
fnstenv
mov
or
jns
mov
rcrl
daa
xlat
mov
jle
dec
negb
sub
imul
out
cmpsb
xchg
jns
mov
mov
pushf
jmp
in
adc
sbb
test
mov
pop
inc
insl
cmp
mov
dec
imul
outsl
dec
jmp
mov
xchg
jl
js
xor
lret
jmp
adc
cwtl
lods
test
das
sbb
push
sub
adc
out
lcall
adc
adc
xlat
ficompl
add
inc
push
xor
lret
out
mov
add
sbb
add
jbe
mov
and
loop
sub
or
or
mov
jecxz
adc
ret
xor
inc
fwait
bound
push
stos
push
pushw
inc
jnp
movsb
cltd
or
and
xchg
fcomps
jno
sbb
push
shll
ss
jl
mov
loope
sbb
rorl
cli
pop
cmp
add
movl
cmp
data16
lds
lea
scas
sbb
adc
loop
mov
push
lods
push
xlat
push
idiv
andb
insb
sbb
addl
scas
jmp
mov
lahf
adc
mov
sti
and
sbb
lods
imul
inc
push
cld
inc
jp
inc
pop
adc
or
movsl
dec
cmp
inc
es
cmpsb
sbb
sbbl
sub
repnz
fdivl
cmp
cmp
in
fimull
add
fs
jle
out
clc
lcall
das
or
inc
xchg
daa
sbb
in
iret
imul
cmp
mov
adc
jmp
stos
insl
dec
fwait
pop
fadd
mov
cs
adc
rclb
out
pop
dec
pop
sub
or
mov
inc
outsl
ja
adcl
imul
mov
gs
xor
xor
xor
into
je
jns
je
ret
arpl
xchg
pop
mov
xchg
add
xchg
sti
movsl
xor
dec
cltd
mov
jecxz
test
mov
test
mov
mov
enter
inc
sbb
xchg
or
inc
ja
xor
int
xor
fistpl
dec
jnp
mov
and
negb
ret
int3
cmp
lods
dec
gs
and
inc
adc
jl
clc
andl
or
pushf
outsb
mov
xchg
pop
mov
xchg
or
rclb
fbstp
push
es
in
inc
push
imul
xor
mov
scas
jne
cmpl
mov
push
adc
cld
loop
dec
sbb
mov
out
pop
pop
jge
jnp
pop
dec
out
dec
mov
mov
mov
add
scas
adcl
pop
lods
jnp
sbb
lock
cmpsb
or
mov
cmp
mov
xor
xor
cmc
lcall
loop
das
mov
mov
pushf
jae
push
cmp
push
mov
push
movsl
mov
mov
int3
add
xchg
ss
adc
lret
dec
sti
cwtl
cltd
lahf
xchg
leave
mov
mov
dec
cmp
loope
repnz
inc
iret
xchg
jg
sbb
das
dec
inc
sbb
icebp
mov
notb
mov
ja
sub
mov
adc
cmpb
sbb
pop
lock
sbb
xchg
ja
in
lods
pop
test
cli
bound
xchg
lock
mov
xlat
aaa
dec
fimuls
sbbl
mov
push
jecxz
sbb
sbb
or
adc
mov
ljmp
add
push
mov
repz
jmp
sub
add
mov
pop
test
mov
sbb
aas
xchg
dec
xchg
test
jp
mov
data16
jae
in
sti
int3
shlb
xchg
into
push
aaa
subl
ret
push
imul
call
pop
test
lret
hlt
test
and
insb
aas
sub
ds
or
ret
movsb
sbb
imul
and
adc
jbe
sahf
daa
sub
stos
ja
fldl
xor
adc
pushf
sahf
pusha
out
test
xor
or
ljmp
push
xchg
xor
xlat
xchg
mov
lds
bsr
mov
xchg
push
repnz
sbb
adc
sbb
into
dec
sbb
jb
fs
push
adc
xchg
test
sti
cltd
mov
inc
js
xor
ret
mov
cmp
and
dec
cmp
popf
pop
push
sub
loopne
cmp
jecxz
inc
pusha
in
lock
push
cmp
xor
cld
sahf
aas
xchg
xchg
outsb
out
movsl
adc
out
clc
insw
pusha
add
imul
psubsb
ljmp
addr16
dec
out
sbb
mov
daa
push
ja
push
repz
decl
adc
movsb
sub
xchg
or
in
push
mov
or
je
push
jbe
movsl
movsb
pop
rcrl
out
and
adc
data16
aaa
adc
cmp
pop
repz
jnp
bound
test
cmp
shrb
push
enter
or
cmpsl
mov
sub
inc
inc
pop
lret
mov
icebp
mov
inc
mov
cmp
xchg
or
test
insl
fwait
cmc
mov
sti
out
cli
mov
mov
popf
push
adc
dec
and
pusha
jecxz
push
sbb
or
mov
jecxz
and
sbb
cmc
sub
sbb
cmp
pushf
mov
mov
imul
sub
push
sbb
hlt
gs
clc
push
sbb
and
popf
and
add
or
in
jmp
insb
jbe
test
fldlg2
test
sub
test
or
iret
loopne
dec
je
mov
sub
lret
stc
cmp
inc
test
lret
jo
adc
fs
imull
inc
in
addl
push
and
bnd
dec
sbbl
lret
icebp
xor
movsb
sbb
lods
push
mov
js
nop
inc
inc
mov
cmp
jg
inc
outsl
dec
pop
lock
sub
dec
fildl
cli
pop
mov
cmpsb
sbb
and
incb
sub
pop
shrl
ds
push
xchg
cmp
push
inc
out
and
inc
hlt
rol
movsl
imul
cmp
pop
test
pop
mov
stc
ds
xchg
mov
jg
cmp
sub
or
fbstp
push
mov
sbb
jb
out
xor
sub
pop
je
fcmovne
cmp
in
sahf
mov
xchg
xchg
push
dec
pop
cmp
xor
inc
scas
decl
push
push
into
mov
adc
insl
mov
mov
xorb
adc
xor
leave
xor
push
mov
imul
jecxz
outsl
xchg
fdivrs
sahf
mov
popa
push
cmpsl
add
fidivrl
cmp
mov
in
scas
das
jne
imulb
cmpsl
fsubrs
cmc
jae
sbb
out
dec
add
shr
neg
imul
inc
loop
idivb
xchg
fwait
test
enter
add
sub
ljmp
mov
push
not
pop
sbb
pushf
or
call
pop
jae
xchg
mov
iret
lret
cmp
ja
test
fisttpll
and
pop
and
mov
pop
pusha
icebp
cli
lea
fcoml
pushf
mov
dec
mov
int
push
in
dec
roll
mov
xor
data16
inc
inc
dec
xorl
pop
out
pop
jne
aad
inc
dec
cmpsb
inc
ret
test
es
inc
sar
movsl
std
lret
dec
xor
fs
inc
pop
jnp
cmp
jl
jae
sbb
jg
dec
lods
push
push
lret
fidivl
mov
pop
mov
or
xchg
xorb
sahf
inc
hlt
and
sahf
out
imul
test
scas
mov
rcrb
aas
outsb
out
adc
arpl
dec
pop
loopne
inc
das
xchg
xchg
mov
inc
lock
mov
cmp
mov
lods
xchg
aad
popa
adc
cmpsl
xchg
ja
in
out
daa
sub
sub
lcall
ja
arpl
xchg
push
cmp
push
bound
outsb
stos
into
popa
fisubl
movl
dec
das
stos
sti
call
addr16
mov
inc
enter
sti
scas
lea
imul
in
lret
lods
stos
leave
lods
gs
daa
mov
cmp
xchg
mov
xor
push
inc
sbb
movsb
pextrw
pop
push
or
jl
out
stos
stos
outsb
add
sahf
mov
push
or
push
ret
popf
sbb
pusha
repnz
lret
ret
das
rcrl
push
mov
pop
jp
jmp
jne
lds
cli
imull
scas
ret
hlt
mov
pop
fnstsw
ret
sub
add
data16
fstps
test
sahf
xor
mov
loop
fbstp
jae
and
shrb
jne
orl
mov
cmp
into
aad
adc
push
fmull
lahf
inc
jecxz
addl
inc
out
push
cmp
and
push
xchg
ret
adc
pmaddwd
pop
pop
out
mov
push
mov
into
xor
inc
lock
aam
fisubrl
inc
lret
clc
pop
andl
sahf
icebp
push
and
mov
cmp
mov
mov
pusha
cmc
sbb
std
push
and
rcrb
cs
aaa
sbb
xchg
inc
adc
mov
out
arpl
jl
mov
int3
mov
adc
pop
push
jno
sbb
pop
hlt
cli
addr16
lods
adc
fwait
dec
ds
pop
bound
js
or
mov
insb
push
mov
inc
xchg
hlt
cmpsl
shl
pop
inc
push
mov
nop
adcl
pop
pusha
test
jno
adc
shlb
xchg
cmp
outsl
mov
aad
xor
data16
push
and
bound
pop
xchg
fists
clc
xchg
mov
push
popf
lahf
int3
and
scas
sbb
testl
aaa
cmovp
mov
xchg
repz
mov
inc
jb
jle
in
push
and
out
popf
fdivs
stc
inc
push
and
or
sub
jnp
jmp
or
lcall
ret
jno
and
lods
mov
jg
mov
mov
loopne
dec
dec
ret
jg
mov
addr16
movsl
jae
mov
in
push
pop
popa
in
mov
clc
test
lods
xor
dec
lcall
jecxz
add
mov
push
push
insl
mov
sbb
data16
pop
mov
xlat
xchg
fimull
mov
xchg
inc
jbe
cmp
js
push
les
jae
sub
lock
stc
pop
jbe
dec
inc
mov
push
dec
mov
jne
fwait
or
mov
sub
popf
mov
xlat
xchg
mov
jge
test
in
or
mov
xchg
call
gs
xchg
add
stos
or
dec
push
lret
pop
pop
arpl
ret
or
mov
sub
pusha
jge
and
gs
outsb
xchg
and
or
arpl
pop
sub
add
fdivrp
xor
mov
mov
popa
stc
cs
cs
int3
sti
fwait
dec
fcmovu
cmp
push
jno
push
cltd
mov
dec
loopne
adc
xor
daa
push
insb
fs
mov
mov
je
and
mov
xchg
aam
das
inc
and
das
push
add
push
adc
cmpsl
push
shrl
pusha
jg
lods
loope
daa
mov
jbe
mov
and
int
jae
jmp
push
add
xlat
xchg
xchg
decb
cmp
sub
imul
xchg
push
out
xorb
lret
dec
add
push
fisttpl
stos
pop
jg
pop
loop
js
jns
xchg
loope
imull
mov
rcrl
jb
arpl
imul
mov
push
jae
into
jno
and
int3
pusha
sub
rolb
data16
popa
xor
jnp
sub
stc
dec
push
jmp
or
movsb
push
pop
xlat
push
xchg
shll
imul
cmp
sbb
pop
shrl
cmc
xor
pusha
stos
jb
sub
lahf
or
scas
call
pop
les
mov
in
lcall
scas
push
gs
sub
mov
fwait
mov
sbb
insl
xchg
xor
popl
xor
mov
push
jb
in
sbb
xchg
mov
aaa
sbb
add
cmp
rorl
push
fistl
push
dec
stos
xchg
es
cltd
inc
inc
test
xor
enter
cmpsb
pop
mov
aad
aad
dec
mov
and
out
stos
dec
std
icebp
hlt
sub
adc
stos
ret
lret
jno
in
jo
cli
ja
out
push
outsl
or
push
ljmp
xorl
or
mov
or
cmp
addr16
pop
insb
stos
pop
jmp
out
push
cmpsb
mov
and
gs
lahf
insb
popa
cld
push
mov
sbb
jns
lret
mov
lock
xor
sbb
fwait
lret
in
mov
or
arpl
pop
sti
scas
fnstcw
push
jmp
data16
dec
sub
adcb
adc
sti
sti
lahf
icebp
xchg
pop
mov
add
pop
aaa
fxch
dec
das
push
pusha
jo
sbb
xor
and
shrl
mov
and
js
xor
mov
or
pop
sbb
dec
insl
mov
xchg
lods
mov
inc
sbb
rol
shrb
pop
ficoms
jbe
in
out
fisttps
pop
sbb
inc
cmp
cmpl
or
push
jp
cmpsl
stos
push
int
xchg
xorl
xchg
jb
mov
rcrl
pop
pusha
stos
popl
je
sbbb
insl
shll
push
mov
repnz
cltd
push
mov
fbld
xchg
test
popa
stc
mov
xor
xchg
cmp
lods
jne
pop
icebp
or
jl
dec
jg
xchg
mov
repz
gs
pop
std
std
xchg
cmpsl
adc
dec
test
jnp
cltd
imul
inc
cmp
aas
test
fisttpl
inc
icebp
cld
and
fsubrl
call
pop
dec
repnz
sar
mov
xor
sbb
hlt
mov
cmc
into
mov
xor
popa
jecxz
dec
pop
popa
ret
xchg
mov
std
bound
test
fcmovbe
mov
and
pop
xor
sbb
sub
push
insl
mov
fldenv
filds
loopne
add
xlat
cmp
pusha
and
adc
cmpb
xchg
adc
or
cmp
push
pop
add
insl
fs
lods
mov
idiv
or
add
pop
mov
aad
push
dec
xchg
xchg
adc
adc
cmp
repz
push
mov
js
popf
xor
arpl
decb
and
mov
rorl
in
fadds
push
xor
imul
lea
outsb
pop
loop
push
or
sbb
movsl
xor
sub
rcll
or
ds
aam
mov
ficoml
subl
subl
int3
cltd
out
or
int3
mov
sbb
jne
cmp
fisubs
dec
and
or
xchg
xor
jge
add
push
mov
in
andb
hlt
testl
lcall
adc
outsb
mov
xchg
jge
pusha
fcmovb
pop
pop
dec
add
xchg
xchg
movsb
andb
mov
mov
sbb
inc
fidivs
scas
es
es
or
or
push
push
mov
push
mov
insb
lods
and
jp
mov
fidivl
int
push
add
adc
insl
xchg
jnp
scas
fcoms
sbb
shrb
push
dec
dec
out
mov
test
inc
repz
outsb
insl
into
add
cmp
and
mov
xchg
jl
in
ljmp
fistpll
mov
sub
cmpsb
pop
pop
test
out
mov
push
faddl
dec
stos
je
dec
jne
jb
scas
pop
mov
js
push
push
rcl
aad
xlat
push
lcall
adc
xchg
jae
aas
add
rcrb
sub
pop
push
dec
adc
call
pop
push
inc
test
adc
sti
mov
cli
ja
insl
in
adc
inc
lods
fdivr
repz
mov
cmp
scas
test
push
or
pop
jge
cmpb
xchg
in
je,pt
ret
sti
sbb
jmp
movsb
mov
sbb
mov
adc
shrb
aad
jno
jecxz
xchg
cmp
pushf
or
cs
xor
cmp
arpl
int3
aaa
pusha
cmp
out
sub
sub
stos
jecxz
cmp
shlb
and
cld
scas
xor
sub
cmp
or
sbb
in
xor
and
adc
add
pushf
inc
insb
mov
mov
sub
cmp
or
sbb
in
xor
and
adc
add
pushf
inc
insb
mov
ljmp
cmp
or
sbb
in
ljmp
lods
jb
bound
jle
dec
xchg
pop
subl
cmp
mov
ret
add
xor
jae
arpl
cmp
sub
push
repnz
testb
sti
push
jmp
sbb
sub
jnp
imul
xor
add
pop
lret
push
jmp
sbb
cmp
sub
pop
ret
jnp
imul
xor
jo
and
outsl
imulb
cmp
inc
out
std
sbb
nop
push
loopne
push
mov
lods
jmp
adc
hlt
popa
out
jge
out
imul
in
push
push
mov
cmp
in
popa
sti
push
lret
bound
push
cltd
sbb
xor
cld
fiaddl
jmp
sbb
sub
xor
mov
and
imul
push
ret
push
add
lods
pusha
ds
mov
outsl
jge
shrl
adc
ds
repnz
dec
ja
add
iret
daa
dec
repz
add
aam
jo
rclb
mov
into
jb
sbb
sub
or
pop
repnz
loop
shrb
fwait
xor
fisttpl
mov
dec
jmp
jle
push
out
ds
and
adc
out
test
jno
push
enter
pop
xor
fwait
sub
jg
pop
loope
out
mov
cs
jmp
inc
stos
xor
xorl
jge
dec
out
push
mov
imul
xor
add
jb
sti
push
jmp
sbb
sub
jnp
imul
xor
add
jb
sti
push
jmp
sbb
push
insb
mov
fisubrs
loopne
es
subb
fwait
pop
xor
sbb
inc
push
test
xchg
fsubr
ljmp
das
inc
adc
ds
adc
in
addr16
inc
push
and
lea
pop
dec
add
mov
or
and
lods
adc
jns
cmpsl
subb
dec
and
jmp
adc
inc
cwtl
cltd
lods
cs
dec
outsb
push
fsts
or
popf
mov
adc
add
push
sub
rcrl
arpl
movsl
xchg
push
xchg
aad
es
enter
push
xchg
in
pop
into
mov
into
aaa
xchg
adc
pop
dec
out
dec
sub
mov
jmp
cmp
xchg
mov
les
iret
cmp
shrb
dec
xchg
dec
xchg
enter
add
push
cmp
outsl
sarb
xor
push
daa
and
pop
fwait
in
push
push
jne
sbb
or
sarl
sbb
call
push
inc
mov
ss
add
loop
stos
inc
mov
jo
xlat
and
pop
cmpsl
and
or
roll
insb
data16
es
insl
mov
push
adc
xchg
fwait
push
jo
fldcw
jg
jbe
rolb
push
xchg
jno
fadds
stos
and
or
jge
fwait
jmp
ror
movsl
fwait
cmc
mov
and
push
mov
add
or
push
in
pusha
dec
out
dec
mov
push
std
sub
loope
imul
out
mov
cmp
test
fcomps
clc
inc
push
imul
xchg
in
inc
fistps
arpl
and
or
aaa
inc
ljmp
fsub
or
fsubrp
jl
pop
sub
aad
out
pop
push
mul
cmp
jmp
ss
cs
mov
or
pop
into
jecxz
dec
pop
ds
and
iret
sbb
mov
jg
mov
push
mov
dec
mov
lret
sub
pusha
dec
jae
iret
addr16
mov
jmp
loope
das
jae
or
pop
jbe
xchg
push
pop
test
mov
loope
into
push
cmp
shrb
rorl
and
push
les
jg
aad
adc
cmp
jecxz
js
pop
push
ds
cmp
in
je
aaa
or
push
mov
dec
inc
pop
scas
jbe
cmp
test
loop
pop
and
adc
daa
scas
inc
fdivr
add
fucomi
test
adc
dec
fiaddl
insb
out
into
cmp
divl
or
xchg
pop
insl
sbb
adc
inc
imul
or
aam
inc
mov
sti
js
mov
sub
add
or
mov
mov
lret
and
cmp
in
mov
sbb
xor
cmp
adc
div
jl
push
rorl
dec
repz
test
mov
dec
sbb
pop
jg
stc
sti
sbb
sub
neg
xor
lds
sub
mov
jge
movsl
add
bound
mov
test
arpl
or
add
adc
aas
dec
mov
in
repz
lock
lcall
xor
daa
push
aas
mov
cmp
sub
into
adc
or
jmp
rcrb
inc
xchg
mov
adcb
push
popa
jg
lret
or
lahf
popf
icebp
fcompl
fwait
jg
cmp
cmp
in
inc
gs
xchg
xchg
mov
pop
xchg
test
push
leave
rolb
xchg
stos
lcall
push
dec
or
jno
leave
flds
jle
mov
mov
out
push
cmp
lods
jecxz
and
fcmovnbe
repnz
fcoms
add
movsl
orb
push
add
pop
mov
adc
adc
push
test
push
pop
xchg
rclb
xchg
mov
pop
mov
bnd
icebp
mov
shll
roll
cwtl
sbb
lods
testb
stos
lea
push
sbb
fmull
insl
sub
adc
test
sub
in
lahf
into
pop
adc
adc
movsl
pop
insl
scas
fsts
idivb
sub
sbb
or
lock
sbb
xchg
push
xor
hlt
clc
xchg
pop
out
mov
mov
cmp
lds
push
adc
and
inc
jg
sub
dec
fmuls
xchg
jmp
aaa
inc
pop
movsb
sbbb
test
jns
je
add
inc
jb
cmpb
jg
in
dec
dec
mov
xor
andl
mov
sub
and
adcl
in
and
adc
push
xor
test
mov
into
faddl
imul
or
loop
sub
jnp
mov
mov
cmpsb
bnd
dec
inc
add
mov
xor
addb
test
xchg
adc
or
pop
jl
sub
mov
bound
adc
je
sub
jb
mov
in
dec
mov
std
mov
nop
fbstp
ja
or
mov
sub
fnstenv
shrl
jle
push
lret
push
mov
test
aam
fcmovnbe
aaa
sub
sbb
push
xchg
add
add
xor
sbb
add
aas
or
mov
xchg
xor
cmp
push
test
pop
mov
loope
jae
sbb
lea
push
es
mov
dec
and
stos
hlt
lcall
jno,pn
xchg
stos
sbb
xor
dec
ds
addl
mov
fisttps
into
cmp
jne
xchg
pushf
xchg
dec
add
jno
dec
pop
pop
lods
adc
js
insb
pop
lea
insb
pop
xor
jno
sarb
fbld
add
cmp
fxch
xchg
cmpsb
outsl
pop
outsl
pop
mov
xchg
fwait
aas
mov
dec
aas
or
outsb
test
inc
mov
inc
sub
loope
inc
sub
mov
aad
loop
aas
adc
dec
mov
or
popa
loope
mov
dec
jl
adc
mov
jne
subb
js
popf
sbb
and
inc
pop
in
jns
push
test
ret
aam
inc
sti
sbb
dec
or
add
xor
pop
xchg
inc
sub
inc
add
es
das
subb
push
roll
pushf
mov
je
inc
cmp
jp
insl
add
sub
sub
xor
push
std
test
cmpsl
daa
jno
cmp
in
jae
clc
add
stc
add
std
mov
dec
divl
and
xor
dec
mov
adc
push
mov
xor
lcall
or
and
push
sub
out
testl
xchg
popa
cld
push
sahf
push
mov
inc
push
vmwrite
insb
lret
adc
xchg
lret
sub
or
shlb
cld
out
stos
add
xor
out
or
jle
into
cmp
inc
in
mov
jae
adc
dec
adc
repnz
push
addb
pusha
push
push
movsb
fcoms
in
xor
or
xor
stos
pop
sti
icebp
shrb
aam
dec
mov
pushf
fdivrs
and
int
and
in
lret
inc
or
lret
push
cltd
ss
ret
xchg
les
xor
push
sub
fdivrs
push
mov
dec
incb
xor
push
into
fdivrl
and
fisttpll
mov
push
mov
fldcw
pop
cwtl
mov
xor
mov
jbe
sahf
minps
stos
inc
fildl
or
mov
push
jb
xor
test
hlt
xlat
std
fbstp
pop
lock
test
pop
mov
sub
sahf
clc
subl
loopne
xor
lock
dec
xchg
xor
adc
adc
push
mov
cmp
mov
and
jb
cld
push
insl
dec
xchg
inc
push
inc
repnz
sub
pop
dec
popa
rorb
test
fidivl
insb
bound
subb
int3
xchg
xchg
mov
inc
loopne
aad
mov
lret
mov
or
hlt
xor
test
xlat
into
mov
aaa
and
aam
mov
bound
in
xchg
jbe
clc
mov
in
adc
stos
xor
into
or
das
xchg
mov
jbe
sub
lea
arpl
mov
cmp
xchg
aas
cmp
lea
mov
push
mov
ret
lea
js
pop
pop
sahf
ret
cld
xchg
mov
js
test
jg
adc
fidivl
dec
adc
xchg
dec
lds
pop
rorb
test
xor
ja
inc
mov
loope
mov
mov
mov
push
ja
push
stos
ror
or
dec
in
xor
nop
inc
fsubrp
sbb
push
sub
les
lods
stos
jp
lods
and
les
out
inc
sbb
cmp
je
daa
jae
or
hlt
faddl
mov
sahf
adc
mov
inc
and
cs
fists
insl
jb
xor
xor
jge
insl
loopne
cmpsl
aam
sbb
pop
fs
scas
repz
mov
js
mov
mov
cmpsl
icebp
mov
mov
fisttpll
or
sub
dec
mov
stos
into
clc
push
jecxz
jmp
push
aam
mov
push
push
aad
pop
sbb
inc
fdivrs
lds
xor
jge
lret
push
ljmp
aas
mov
in
add
cli
stos
repnz
testl
hlt
ret
repz
hlt
decl
mov
pop
test
lret
movsb
repnz
int
addb
frstor
dec
ja
insl
mov
sbb
rorl
inc
shll
pop
pop
pop
push
push
mov
jmp
push
cmp
faddl
dec
cmp
xchg
aad
cmp
rcll
xor
jg
or
dec
scas
or
dec
loope
mov
lret
daa
xchg
sub
xor
or
or
loopne
shrl
clc
push
fsubl
adc
rolb
inc
add
lcall
data16
insl
pushf
sbb
xor
jae
iret
outsl
lahf
fsubrs
mov
push
cmp
sub
lahf
int
pop
inc
loop
jl
push
adc
cmp
and
push
daa
aam
add
dec
clc
or
lods
fmuls
push
xchg
in
add
pop
push
pop
into
mov
iret
mov
push
pop
in
repz
in
idivb
ret
sbb
fld
das
mov
xchg
cmp
mov
mov
mov
jns
outsb
or
sub
sbb
xchg
sub
add
and
cmpsl
jmp
lods
adcb
dec
mov
mov
fs
fcoms
jno
sbb
mov
wrmsr
pop
insb
mov
andb
mov
mov
and
or
adc
xchg
jmp
fs
insl
mov
and
scas
dec
dec
xor
ds
shrl
mov
ja
pop
test
in
jno
dec
daa
push
inc
mov
dec
push
jecxz
bound
mov
lahf
std
mov
pop
outsl
jg
clc
dec
push
cmpb
ljmp
fwait
scas
inc
xlat
dec
cltd
mov
loopne
xor
mov
mov
jbe
dec
arpl
mov
inc
push
loope
push
mov
enter
mov
mov
pushw
hlt
in
jnp
aas
jno
mov
pop
imul
sahf
jecxz
out
fldenv
xchg
push
push
aam
push
cmp
mov
mov
jecxz
inc
imul
inc
or
xchg
inc
fildll
dec
imul
push
and
cli
lea
aas
sbb
shlb
ss
scas
decl
xor
mov
test
andl
jecxz
add
cmp
cld
adc
xor
movsl
sub
call
pop
cmpl
dec
mov
negb
lret
add
or
mov
dec
icebp
scas
sbb
outsb
jae
ljmp
les
cmp
js
mov
add
hlt
inc
pop
jmp
lea
mov
repz
add
scas
mov
aaa
push
scas
jb
icebp
dec
or
sbb
aam
xor
jmp
aas
rcrl
lds
adc
iret
jle
cwtl
orb
arpl
das
or
xchg
mov
cs
adcl
pop
fldenv
in
push
stos
ljmp
inc
sub
or
xor
xchg
jmp
repz
mov
pop
and
push
sub
rcll
scas
push
pop
pop
push
sbb
idiv
xor
rcrl
js
push
mov
inc
mov
dec
hlt
jnp
and
mov
and
push
aas
cmp
data16
fiaddl
mov
sub
sbb
xchg
adc
inc
mov
dec
aam
inc
jl
scas
pop
cmp
sbb
push
sbb
aaa
inc
cs
pop
push
dec
inc
ss
mull
loop
stos
adc
cmp
stos
jmp
aam
addr16
xchg
shl
mov
insl
arpl
fidivl
mov
lods
or
adc
cs
add
clc
push
add
mov
xorl
jb
mov
mov
decb
sbb
jmp
mov
int3
repnz
inc
mov
sub
ljmp
fldenv
mov
popa
sbb
xor
popa
ljmp
in
pop
inc
xchg
sub
sub
movsl
nop
outsl
loop,pn
orb
cmp
mov
cli
push
jmp
mov
mov
test
ja
test
xchg
jecxz
or
xor
clc
add
jle
cmpsl
sub
or
inc
add
lock
jp
lahf
mov
jle
mov
push
mov
fdivs
jmp
sarb
sub
inc
loope
frstor
leave
test
jb
scas
sti
sub
dec
fcomps
jb
push
shrl
fmuls
aad
imul
shrl
or
idivb
sbb
aam
pushf
test
add
pmaxsw
or
loop
and
push
inc
ds
ljmp
inc
dec
test
sbb
add
xor
xor
jnp
ljmp
mov
mov
outsb
insb
out
pop
add
aaa
mov
and
and
ficoml
add
test
sarb
cwtl
lcall
subb
add
fwait
aaa
xor
or
sarl
mov
inc
push
pop
push
dec
dec
mov
or
and
ret
pusha
jno
mov
cmp
mov
pushf
mov
ljmp
cmpsb
inc
jno
aas
mov
push
out
outsl
cmp
repnz
dec
mov
int
ja
scas
jno
mov
xlat
inc
cli
arpl
stos
inc
pop
sub
add
xlat
vpaddusb
fstl
shlb
mov
and
repnz
dec
lea
insl
adc
pop
shll
aad
cwtl
sub
in
iret
xor
outsb
test
inc
sub
in
adc
js
shlb
fcmovnb
fisubrl
jae
sub
xchg
cltd
inc
jp
sbbl
push
mov
clc
je
adc
pop
cmc
inc
sbb
aaa
ret
pop
out
cmp
sub
fistl
lds
mov
jp
or
jmp
aaa
dec
popf
cwtl
dec
imul
or
int
or
add
sbb
cmpl
lods
in
cwtl
jg
movsb
and
mov
scas
or
popf
into
pop
daa
or
jmp
aaa
repnz
stos
jmp
xor
add
lock
xchg
jae
cmp
xor
cs
xor
jle
outsb
pusha
adc
imul
pusha
xor
popf
inc
rcr
push
in
repz
jle
adc
std
lds
out
jl
jns
imul
sub
lds
sbbl
add
add
negb
xchg
ret
roll
andb
inc
jge
and
pop
insb
fs
stc
lahf
jns
popa
add
addr16
pop
mov
cs
xor
sbb
sub
inc
pop
pop
mov
cmp
mov
or
ficoms
jp
sahf
fldl2t
mov
lods
mov
add
pop
testb
and
daa
fistpl
bound
dec
rcrl
jb
sarb
fdivp
jne
orps
lock
jno
xchg
mov
movsl
es
pop
jmp
popf
in
pusha
stos
fmul
inc
or
rorl
or
cmp
scas
insb
lahf
call
push
arpl
out
out
test
fimull
adc
out
add
mov
sub
cmpb
xor
popa
imul
jl
jb
inc
mov
push
fcomp
cmp
jge
les
adc
xchg
mov
or
or
cmc
pop
sbb
add
stc
mov
push
pop
or
mov
or
sub
dec
pop
lds
or
add
push
adc
addr16
sub
jl
xor
or
push
jg
decb
jns
add
je
outsb
xchg
cmp
jl
push
push
sub
cmp
lcall
mov
jnp
mov
mov
mov
stos
add
mov
xor
lods
sbb
ret
mov
clc
mov
loope
add
call
cmp
and
bound
loopne
dec
fwait
out
push
cmp
push
push
scas
add
orb
xlat
mov
mov
xchg
jmp
ds
mov
lahf
mov
sbb
dec
pop
es
lods
xchg
movsl
lods
andb
and
cmc
repnz
repz
xchg
and
or
and
loop
lods
pop
mov
jle
mov
jmp
and
lcall
mov
loop
mov
inc
sbb
les
out
pop
div
mov
lcall
shlb
and
add
call
add
pusha
bound
sub
or
pop
js
push
or
mov
mov
ret
movsl
leave
sbb
cmp
mov
xchg
jns
lret
js
inc
dec
sbb
inc
add
xchg
lret
cmpsl
push
push
lea
xchg
mov
mov
int3
push
int
push
fwait
call
and
shl
scas
inc
and
test
xor
add
mov
adc
aas
mov
and
fimull
xchg
ja
sub
fs
ljmp
test
loopne
pop
cli
clc
aam
pop
fcompl
mov
imul
pop
xor
fldl
mov
movsb
dec
arpl
mov
fisttpl
push
clc
leave
xchg
mov
and
insb
mov
cwtl
mov
insb
ja
popf
jne
mov
cs
idiv
aaa
jns
pop
jne
jle
mov
and
pop
icebp
nop
push
mov
lock
sti
mov
or
cmpsl
ja
jns
cmp
int
or
adc
hlt
je
add
cmp
dec
ret
mov
sub
sbb
dec
rdtsc
enter
jno,pt
std
adc
add
xchg
in
jnp
mov
mov
repnz
jae
add
push
or
test
insl
cmp
mov
xor
bound
das
inc
jl
aam
inc
jl
pop
cmp
pop
jb
inc
pop
cmpsl
out
pop
cmc
das
ret
dec
dec
movsb
cmp
iret
mov
pop
aad
adc
jl
cmp
inc
add
outsl
aam
jbe
sbb
mov
fnstsw
jae
aaa
stos
pop
cmp
pushf
imul
pop
or
xchg
mov
call
sahf
cld
pop
rorb
cmp
pop
xchg
jns
inc
push
adc
mull
sbbb
xor
jmp
add
pop
lods
xchg
or
cmpb
push
push
scas
in
mov
or
mov
andb
push
sbb
mov
cmp
loop
inc
push
cmp
je
fcmove
pop
add
loopne
insl
xor
push
mov
neg
jmp
fidivrl
mov
adcb
mov
push
fwait
enter
cmpsl
cmp
jb
icebp
pop
mov
jo
scas
out
in
sbb
jbe
add
in
test
pushf
sub
mov
rorb
inc
movswl
pop
jae
push
cmpsb
lea
push
xchg
repz
popa
mov
popf
cs
cli
mov
dec
movsb
or
ljmp
iret
dec
inc
lret
add
imul
inc
mov
push
sbb
pusha
fs
jnp
or
and
test
jb
sbb
call
jnp
iret
roll
mov
inc
faddl
int3
fisttpll
daa
inc
les
xchg
sub
jnp
imul
xor
add
jb
sti
push
jmp
sbb
sub
jnp
imul
xor
add
jb
sti
push
jmp
sbb
sub
jnp
imul
xor
or
jbe
cli
pop
jmp
sbb
inc
cmp
ret
dec
loop
push
jmp
fs
mov
adc
sbb
sub
cmp
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pushf
pop
mov
lods
insb
adc
xchg
sbb
sub
fmull
in
pop
pushf
dec
or
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pushf
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
je
int3
push
cwtl
sub
pop
fldenv
jecxz
into
add
adc
cmp
mul
adc
jge
ret
les
pop
or
sub
or
int3
loopne
push
xchg
and
adc
mov
ret
std
shll
jmp
loope
int3
add
pop
mov
xchg
mov
rcrb
xor
in
adc
insb
and
mov
insb
sti
sbb
in
rcll
add
mov
inc
pop
and
insb
mov
stc
push
xchg
test
test
fwait
mov
mov
and
jae
jg
daa
xchg
push
imul
int3
dec
test
add
or
rorl
in
lods
push
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
clc
dec
aad
lds
cwtl
jb
jl
mov
push
stos
pop
std
dec
lcall
mov
jmp
push
fcoml
test
sub
movsb
pop
mov
pop
jmp
out
fstps
cld
stc
adc
rorb
sbb
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
test
sub
shrb
mov
mov
pop
mov
sahf
pop
in
mov
cli
in
mov
mov
data16
jae
jge
lock
out
mov
int3
xor
bound
add
cmpsl
aad
jae
loopne
lcall
test
or
mov
shrb
jb
sti
icebp
dec
movsb
test
inc
push
sub
jbe
enter
or
push
cld
data16
pusha
sub
mov
cli
or
cli
or
outsb
sub
vcomiss
xor
add
jg
addr16
and
and
jnp
mov
daa
out
enter
repz
ficoml
xchg
cmc
mov
inc
loopne
mov
lcall
jecxz
stos
jno
dec
and
jns
push
pop
cs
inc
rolb
mov
mov
testl
scas
push
adc
xor
xchg
fcompl
mov
scas
push
nop
adc
xchg
mov
xchg
mov
adc
push
pushf
fdivr
clc
mov
inc
pop
aaa
adc
mov
not
loopne
fildll
push
push
lahf
inc
push
rcr
xor
cmp
cmc
cmp
scas
jl
sub
ds
cmpsl
cli
hlt
lods
enter
mov
test
or
mov
xchg
cmp
push
rolb
vzeroall
cmp
mov
or
fbld
ret
arpl
aam
mov
pop
xor
xchg
mov
jl
adc
outsl
fmuls
push
or
lret
xlat
jmp
push
out
aaa
jnp
cld
add
xor
mov
incb
adc
dec
call
cmp
sub
stc
sub
movsl
jne
gs
push
dec
sbb
iret
push
lods
push
js
ss
xchg
lcall
jg
dec
shlb
push
push
xorl
es
mov
sub
popa
mov
pop
test
jge
lock
sbb
in
fdiv
pop
rcll
jmp
les
div
jmp
dec
outsl
imul
push
pop
shlb
push
mov
push
xchg
lret
das
adc
in
or
lcall
lods
push
mov
sbb
loopne
mov
xchg
dec
orl
insb
jg
push
and
repnz
xor
or
jns
pop
lock
sti
and
leave
inc
sbb
mov
mov
aaa
imul
sbbl
mov
or
outsb
jns
jg
stc
adc
inc
adc
addr16
enter
sbb
aad
pop
stc
data16
add
xor
notl
push
sbb
in
test
pop
popf
test
add
add
add
out
ds
sbb
fisubs
repz
loop
push
iret
fdivrs
ja
mov
and
or
or
jecxz
mov
xorb
cmpsl
push
inc
sbb
adc
into
in
cmc
jge
sub
cld
adc
jp
sub
add
out
stos
xchg
xorl
fdivrl
repz
jb
aam
and
stos
pop
ds
shll
adc
xchg
push
into
fidivrs
insl
test
in
jns
xor
test
insb
pop
xchg
xor
rorb
xchg
in
jne
lods
ljmp
outsb
push
mov
fadd
int3
cwtl
mov
lods
jp
rol
and
mul
testl
in
dec
and
frstor
lret
js
pop
jmp
nop
pusha
sarb
push
or
and
pop
mov
sti
out
jmp
add
push
call
xchg
dec
pop
jae
ljmp
or
repz
push
fcompl
jns
stc
jg
cmc
and
repz
fstpl
bound
sub
jnp
arpl
in
rclb
insl
mov
jae
sbb
enter
push
aaa
mov
dec
clc
add
jp
xchg
dec
aaa
push
int
mov
cltd
cmp
lahf
and
mov
in
stos
xor
stos
sarl
xchg
incb
stos
cs
lock
loope
cmp
or
jnp
and
imul
or
cmpsl
push
fcoml
pop
xor
mov
and
jle
sbb
sub
mov
pop
ljmp
inc
jne
jle
xor
mov
enter
mov
ss
adc
mov
xchg
pop
cltd
insb
xor
mov
push
je
cmp
shr
cmpsl
icebp
scas
mov
pop
scas
and
fbld
xchg
inc
mov
push
daa
sub
mov
aam
bound
push
inc
andb
push
pusha
add
bound
mov
pushf
sbb
or
int
mov
push
sarl
cmc
pop
push
rorb
cmpsl
jno
sub
push
aaa
xor
xchg
movsb
cmp
mov
negl
andl
rcll
cmpl
sbb
adc
mov
gs
loop
das
sarl
mov
jne
dec
fcoms
xor
add
adc
in
xchg
push
or
dec
mov
clc
mov
and
shrl
dec
fbld
dec
ja
orb
sub
cs
inc
mov
mov
jb
push
inc
mov
cmpsb
jcxz
adc
js
xor
pop
jb
outsl
or
cmp
xor
xor
shr
jecxz
add
jnp
int
stos
inc
sbb
inc
jle
jbe
xor
movsl
cmp
shr
fs
pop
sbb
bound
jo
fldz
cmpsb
movsb
jbe
test
insl
in
cmp
jnp
mov
xchg
jne
neg
dec
scas
les
inc
mov
and
adc
data16
and
dec
xchg
das
add
fimull
dec
jb
or
jmp
xchg
mov
mov
mov
mov
xchg
and
and
imul
fs
pop
sub
lea
rclb
and
loope
adc
adc
cltd
insb
push
in
inc
fisttps
mov
cld
dec
pop
lret
jecxz
sti
mov
ja
cld
jg
pop
mov
sbb
sahf
stos
cwtl
pop
mov
hlt
jno
push
adc
add
test
or
push
sarl
cmp
inc
dec
fdivr
aaa
pop
cmp
nop
call
jne
push
int
ljmp
cld
cli
lds
xchg
leave
xchg
test
es
jbe,pt
push
js
stc
add
mov
enter
pop
pop
or
and
push
add
repz
stos
jle
dec
stc
movsb
repz
in
lea
ud2
mov
xor
and
jp
push
lcall
or
push
sbb
mov
shl
lea
sbb
push
push
es
push
cmpsb
fists
pop
fwait
in
out
pop
stos
cmp
arpl
daa
mov
enter
push
push
dec
call
or
jae
aam
sub
clc
push
add
test
pop
cmp
stc
in
scas
in
stc
insl
xchg
outsb
mov
fldenv
mov
jae
loope
lea
jbe
ret
mov
gs
mov
sbb
push
out
mov
mov
mov
jnp
cmp
cmp
push
adc
out
push
jg
je
cmp
jne
sub
in
pop
arpl
mov
mov
adc
cmp
pushf
pop
cwtl
dec
xor
orl
shll
or
ds
je
out
add
xchg
fwait
subb
mov
jmp
jne
add
shll
dec
mov
jns
cld
add
sbb
hlt
popf
pop
add
and
mov
mov
out
or
mov
adc
or
pop
inc
or
push
jge
jmp
stos
jmp
add
rol
sub
fwait
lds
xor
outsl
xchg
fnsave
sbb
pop
and
mov
push
mov
rcll
push
in
insb
or
scas
mov
add
lahf
jb
mov
sbb
movsb
lcall
or
dec
adc
adc
cmp
in
js
jno
mov
mov
cld
push
lock
adc
aas
xchg
jl
mov
out
lods
or
and
cwtl
out
or
push
jg
cwtl
out
xchg
outsb
pop
mov
xchg
scas
push
mov
sbb
test
push
dec
add
mov
es
outsl
fcomip
pushf
mov
xlat
mov
add
fsubp
jmp
fwait
adcb
mov
out
push
push
add
or
mov
xchg
mov
sahf
inc
pushf
imul
mov
cmp
mov
add
add
cmp
cmp
les
adc
pusha
xor
iret
mov
rorl
jge
inc
mov
cmovne
insb
pop
mov
pop
mov
sub
jge
incl
je
xor
jg
pusha
jl
movsb
out
movsb
xor
xchg
push
inc
sahf
mov
test
out
lcall
imull
repz
mov
lcall
leave
push
decb
jb
xor
jnp
dec
xchg
mov
pop
inc
mov
xchg
sub
inc
pop
and
int3
and
pop
and
jle
stos
ja
loope
ss
xchg
xor
sbb
lcall
aaa
jg
imul
mov
popf
das
mov
mov
mov
pop
movsl
cmp
out
push
and
lret
push
les
sarb
push
out
inc
outsl
dec
fdivp
out
fnsave
sahf
aad
lods
xchg
lock
pop
push
fimull
cmc
xchg
int3
inc
pusha
imul
mov
pop
bound
movsb
in
dec
movsl
add
xchg
pop
add
popf
ficoml
adc
pop
pop
fwait
lds
js
in
add
pop
in
jne
pop
sbbl
shll
jnp
and
push
lods
jnp
xor
aas
sbb
xor
into
jecxz
add
scas
test
sbb
mov
or
dec
and
or
lcall
cmp
orb
out
sub
shl
sub
add
call
out
adc
movsb
std
pop
pop
lahf
mov
add
xchg
mov
pop
inc
pop
xchg
bound
into
pop
call
mov
insb
xchg
fcmovb
push
fmulp
aam
push
fbld
lods
inc
pushf
mov
mov
cld
lods
outsb
inc
push
stos
pushf
jno
paddb
cmp
cltd
xchg
sub
sbb
in
jns
lcall
pushf
mov
xchg
pop
mov
cmp
lret
out
mov
inc
jmp
inc
add
lcall
fimull
cltd
repz
scas
or
ss
mov
pop
jbe
gs
xchg
jns
jo
xor
aam
shll
lock
test
or
cmp
mov
push
hlt
mov
xchg
push
xchg
lea
cmp
aam
fcompl
xchg
imul
dec
add
aaa
bound
lods
xor
stc
xchg
jecxz
movb
pop
pushf
push
popf
bound
xchg
xlat
loopne
movsb
test
mov
inc
add
and
pop
jns
jno
xor
lods
out
ret
pop
push
mov
and
mov
mov
sub
into
mov
pop
jno
inc
je
movsl
insl
outsb
inc
and
int
int
adc
jae
sub
pop
and
push
push
push
mov
mov
mov
xchg
cld
xadd
jmp
pop
test
pop
mov
lods
rcrb
pop
dec
fstl
int3
add
mov
lock
fidivl
mov
fsubl
add
sti
test
lds
mov
dec
fadd
lret
mov
adc
in
fstl
subb
in
dec
pop
lds
mov
rclb
mov
mov
jns
dec
dec
jns
mov
xlat
gs
ret
pop
movsl
sbb
push
jl
pop
xor
das
imul
sub
jns
push
mov
xor
pop
idivb
or
push
push
mov
jbe
stc
movsl
cltd
pop
mov
les
out
imul
mov
push
lea
cmpsl
xorb
jmp
lret
xor
mov
xchg
int3
fnstsw
std
ss
mov
cwtl
dec
xor
or
pop
mov
fcoml
cmp
aas
jp
cmc
mov
push
ja
call
jne
add
pop
testl
xor
sbb
xlat
and
aam
xor
aad
jecxz
lcall
mov
jp
jne
jl
adc
mov
jle
sub
push
loopne
out
mov
adc
adc
cmpsb
iret
inc
xlat
andl
jae
smsw
mov
push
dec
push
out
testl
or
pop
cmpb
ds
mov
pop
das
dec
notl
clc
sbb
sbb
or
push
xor
push
stos
adc
inc
aam
pop
test
mov
and
jns
pop
rcrl
dec
mov
rol
in
mov
test
fnstsw
adc
xchg
mov
adc
flds
cld
sti
add
lds
mov
adcl
loopne
push
add
test
jge
pop
lock
mov
dec
sub
cmp
test
pop
data16
jae
lcallw
lds
xchg
pop
sahf
je
mov
cltd
xchg
adc
mov
leave
xchg
sub
inc
pop
push
and
repz
or
lret
jge
and
push
fwait
adc
stc
std
loopne
or
push
repz
aas
and
repz
xchg
mov
mov
lret
add
cli
lahf
jnp
and
mov
mov
movsb
jnp
cmpsl
faddl
aad
cmc
mov
imul
repnz
repnz
sub
jg
lret
daa
dec
push
lcall
mov
ss
jge
add
ss
or
pop
jnp
mov
push
pop
fdivrs
into
sbb
pushf
xchg
stos
in
repnz
push
xchg
fdivrl
dec
lret
loopne
lds
sub
aaa
adc
jg
lcall
cmpsb
movsb
pusha
aad
and
mov
adc
data16
jne
mov
xor
xlat
add
sub
pop
lret
addr16
fdivs
rdtsc
dec
decl
jmp
rcl
hlt
sbb
mov
pop
int
mov
jg
xor
xchg
repz
test
mov
pop
or
push
inc
inc
inc
fldl
pop
push
jmp
add
ljmp
push
cmpb
sbb
sbb
inc
jg
or
out
call
into
dec
mov
push
mov
out
push
dec
pusha
pop
fildl
daa
xchg
push
es
shl
inc
stos
push
mov
mov
cld
sbb
cld
cltd
push
inc
in
push
sbb
repz
mov
mov
and
mov
repz
aas
rcrb
insl
push
hlt
or
push
mov
sbb
sbb
data16
xor
mov
enter
dec
pop
adc
dec
ret
lret
inc
ljmp
andb
pop
shrl
adc
jns
sub
cmp
decb
aaa
ds
and
loopne
xor
enter
sub
aad
jns
dec
cmpsl
inc
xorb
and
cmp
aad
incb
rcl
sub
adc
mov
aas
sti
pop
test
pop
rolb
lret
push
adc
mov
or
mov
mov
mov
rolb
push
sbb
add
or
and
inc
cmp
xlat
iret
push
fwait
addb
cmp
dec
sahf
add
cmp
shlb
stc
daa
adc
das
repz
daa
iret
mov
out
jo
sbb
scas
jmp
and
xchg
pop
adc
push
scas
dec
jg
add
lock
dec
mov
xchg
pop
xlat
mov
xchg
mov
dec
xor
dec
ret
shlb
push
shlb
xor
xlat
roll
dec
mov
push
scas
addr16
dec
mov
lret
xor
lock
mov
stos
sahf
setge
filds
mov
fsubr
scas
jle
cmp
sahf
mov
dec
xorb
push
add
test
and
cmp
notrack
fs
lret
andl
inc
mov
mov
mov
ds
test
adc
xchg
fstpt
xchg
aad
js
xchg
add
js
adc
aam
push
out
js
xchg
or
sub
push
testb
mov
or
addb
call
sarb
scas
cmp
lcall
mov
insl
inc
mov
pop
cmc
and
lds
xchg
mov
je
inc
aas
xlat
pop
mov
das
or
testb
addl
sub
inc
push
sbb
imul
test
adc
and
ror
inc
loopne
outsb
ret
das
pop
add
mov
mov
jbe
lea
pop
out
push
das
push
mov
pop
aam
pop
jle
mov
jbe
sub
mov
xchg
jecxz
orl
adc
pop
pop
jle
xchg
adc
mov
test
addb
movsl
mov
and
mov
dec
adcl
addr16
test
loope
jecxz
lea
jns
xor
adc
jo
inc
fidivl
jle
push
popf
aaa
lret
icebp
inc
adc
fucom
add
or
fsub
xchg
scas
cmp
subl
rcr
stos
test
hlt
sub
popf
sbb
adcb
lret
loope
lcall
ret
xor
movsl
into
xor
jnp
xor
or
lods
jbe
lds
iret
addb
testb
loop
mov
cmp
mov
push
cwtl
jge
repnz
mov
push
rorb
mov
int
subb
sbb
jae
mov
stos
push
sarl
sar
call
mov
std
orl
scas
pop
cmpsl
and
hlt
mov
lcall
sbb
cmp
clc
pop
aas
mov
sbb
push
adcl
xchg
sbb
xor
stc
add
fcomp
popf
loop
xchg
outsb
pop
or
rcrl
inc
iret
in
imul
rclb
mov
sub
mul
or
pusha
mov
mov
loope
push
mov
dec
mov
imul
inc
fiadds
cmp
es
push
repz
call
inc
add
das
mov
je
xchg
jle
cli
mov
mov
push
test
mov
into
jno
mov
fs
push
sub
jae
and
xchg
sarb
cmpsb
scas
rcrb
outsb
in
push
popa
gs
push
inc
or
push
add
adc
xlat
xor
sbb
mov
push
lret
pop
fidivs
inc
outsl
or
into
outsl
sbb
sub
cmpsl
enter
sub
test
in
pop
mov
xchg
push
test
cmc
gs
adc
lret
and
xchg
cwtl
outsl
xchg
adc
ret
lock
fadds
cmp
lds
cmp
jbe
mov
cmp
loope
sbb
mov
pop
or
fmulp
and
dec
xchg
sub
je
or
jg
jno
leave
out
fldenv
mov
cmp
mov
sarb
subb
cmpsb
repz
movsl
sub
push
mov
in
lock
lahf
or
adc
pop
cli
push
or
xor
xor
lods
jge
sbb
sbb
mov
in
ret
call
jge
jge
je
mov
enter
outsl
das
insl
mov
nop
rcl
in
push
sub
popa
popa
mov
fisttpll
fdivs
mov
out
imul
cs
dec
int
testl
push
push
adc
xor
out
out
pop
push
ljmp
or
jnp
int
je
mov
mov
mov
int
pop
or
mov
mov
push
jae
add
adc
push
xorl
push
fdiv
push
adc
mov
fists
inc
out
mov
int
rcrl
out
jecxz
aam
test
icebp
hlt
lahf
stc
mov
mov
sbb
faddl
in
aaa
jecxz
cs
dec
inc
cmp
outsb
cltd
push
clc
jbe
pushf
outsl
dec
movsb
xchg
enter
insl
lods
ret
data16
call
je
mov
pop
loop
sahf
lea
lods
mov
pop
cltd
xchg
mov
cwtl
lahf
in
and
xchg
pop
sbb
pop
fnstcw
mov
sbb
sub
aaa
sub
imul
mov
int3
xchg
mov
sbb
dec
mov
out
and
xchg
jb
pop
jns
out
call
cmpsl
and
scas
dec
mov
sbb
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
or
cmp
lods
insb
pop
sbb
mov
cmp
sub
pop
or
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
xchg
cld
sub
sub
cmp
or
sbb
xor
js
dec
es
ss
adc
sub
clc
xchg
lret
mov
xabort
mov
cwtl
idivb
js
js
pop
sub
push
or
jbe
xchg
xchg
lods
cmpsb
sbb
mov
cwtl
divb
popa
push
push
es
xor
push
adc
jbe
mov
lods
mov
xchg
cmc
mov
xor
sbb
js
add
fisubl
add
cmp
xchg
adc
xor
fadd
inc
push
subb
push
aaa
dec
leave
out
mov
sarl
cmp
divb
cmpsb
aad
adc
out
pop
fs
or
adc
add
lcall
popa
add
ljmp
jbe
std
in
sbb
mov
daa
shll
or
sbb
fdivl
test
xchg
jmp
enter
mov
sub
js
clc
test
loopne
pop
xchg
fstpl
test
push
mov
cmpsb
mov
aad
xchg
lea
repz
jns
xchg
mov
test
push
push
js
dec
es
cmp
push
or
jbe
xchg
xchg
shlb
mov
mov
imul
dec
sub
or
jne
pushf
ljmp
les
std
xchg
push
es
popa
pop
and
or
ljmp
fcmove
test
cwtl
cwtl
add
bound
sub
push
or
jbe
xchg
xchg
enter
test
mov
imulb
js
dec
es
sub
push
or
jbe
xchg
xchg
enter
test
mov
imulb
mov
out
subl
push
inc
fimull
jmp
push
fwait
sub
mov
test
movsb
les
push
xchg
int
jae
dec
pushf
push
scas
add
in
outsl
jecxz
fsubrs
mov
insb
jecxz,pt
subb
mov
bound
add
popf
pop
stos
cmp
repz
leave
xor
xchg
xchg
jnp
jns
nop
mov
mov
out
mov
dec
push
pop
push
test
xchg
mov
mov
dec
xchg
xor
xor
push
sbb
mov
mov
fsubp
push
aam
leave
in
push
into
mov
cwtl
xchg
and
sub
and
pop
nop
movsl
pop
cmpsl
push
and
adc
enter
icebp
inc
es
dec
push
repnz
stos
cmp
jns
cwtl
jmp
pop
mov
lahf
stos
cmp
mov
les
fdivrl
rorb
dec
daa
repnz
daa
sub
sbb
cs
cmc
mov
push
ret
push
in
mov
pop
xchg
ss
mov
xor
push
popf
out
xchg
imulb
cmpsb
js
mov
lods
in
testb
pop
push
cmp
mov
je
sbb
faddl
and
sbb
leave
js
out
mov
cmp
adc
push
jecxz
cmp
xor
mov
movsb
imul
jp
loop
jp
mov
out
pushf
sub
cmp
lock
outsb
sbb
stos
lock
push
call
push
xlat
push
pop
out
push
repz
pop
pop
jo
jno
xor
pop
in
stos
dec
or
jmp
cmp
mov
jmp
push
lret
mov
sahf
pop
push
loope
aad
les
mov
aam
in
jmp
dec
dec
adc
es
out
jne
xchg
ja
out
outsb
or
popf
es
stos
xchg
fimull
fistl
into
xor
in
cmp
cmpsl
inc
nop
mov
push
pushl
stc
mov
notb
push
lret
dec
push
ss
fmull
test
popa
xchg
pop
in
sub
cltd
jo
cmp
sbb
jne
sub
or
mov
ret
xchg
and
ja
and
jle
lret
and
das
aam
xchg
xchg
ljmp
cmp
inc
push
sahf
sbb
aaa
fs
xlat
popa
and
jl
xchg
adcl
jo
movl
mov
mov
pop
dec
or
bound
xor
insb
dec
push
add
add
add
stc
cmpsl
ljmp
das
loop
rcrl
add
push
dec
add
popl
out
cmpsl
sarb
cltd
and
and
add
add
lods
sbb
lds
xor
adc
mov
lret
or
push
in
scas
or
rorl
pusha
dec
lds
xchg
sub
imul
lret
shl
dec
shlb
jae
ror
add
sub
dec
lahf
and
cmp
cmp
sarl
jge
lock
xorb
add
pop
clc
dec
pop
iret
scas
imul
mov
mov
shl
push
or
cmp
or
insl
mov
fildl
nop
xor
scas
jp
cmc
dec
iret
jo
mov
test
in
cmpb
stos
lret
and
cs
cli
mov
out
and
bound
pop
mov
dec
ja
or
shr
or
insb
xchg
cmp
push
je
inc
sub
cs
int
mov
inc
out
inc
rorl
jb
or
push
les
mov
aaa
insb
ficoml
xchg
es
notl
or
stc
pop
test
and
sub
xchg
mov
aam
push
mov
dec
cmp
mov
scas
or
outsl
mov
lret
and
mov
call
push
sbb
mov
in
mov
pop
stos
scas
jmp
hlt
pop
nop
push
jo
ljmp
push
lock
test
sbb
call
sahf
adc
aaa
shll
out
outsl
jl
je
es
sub
lds
dec
mov
push
fwait
inc
lea
push
fnstenv
lock
imul
mov
loop
mov
xchg
scas
inc
and
ret
xchg
xchg
mov
xor
jecxz
mov
cwtl
rclb
dec
cld
out
pop
fcoms
xchg
pop
push
pop
popa
adc
push
xchg
iret
cmp
add
out
push
insb
dec
mov
jne
pop
popa
shlb
push
jne
test
mov
pcmpgtw
cmpsl
sbb
test
dec
outsb
out
pop
je
inc
outsl
and
sub
mov
or
cld
push
sub
jae
jne
ds
jmp
into
sahf
filds
mov
fwait
jl
hlt
jg
jl
mov
inc
cltd
sbbb
leave
push
jne
mov
rclb
xor
cmpsb
orl
adc
jo
nop
out
cld
or
stos
and
push
std
sub
test
cmp
mov
mov
xchg
nop
jg
testl
inc
lcall
movsb
addr16
and
sub
sbb
push
arpl
aad
xor
pop
or
test
aas
in
xchg
mov
and
inc
mov
jp
fiadds
pop
loop
push
or
dec
outsl
add
jle
orb
lret
leave
or
daa
xor
mov
inc
inc
lcall
rcrl
jmp
mov
cli
stos
fstpl
rcll
sbb
cmpsl
jnp
cmp
sbb
pop
addb
jns
dec
or
jae
sub
test
xchg
mov
ljmp
push
sub
sub
sbb
cmc
cmc
lahf
or
leave
in
cs
scas
cmp
mov
rcrl
je
mov
mov
or
lret
jns
aam
aam
xlat
cmpsb
mov
jl
cmp
jl
xchg
pop
jge
and
nop
pop
add
jnp
aas
dec
mov
and
and
jbe
mov
pop
push
dec
in
repz
cmpsl
mov
lahf
aas
mov
icebp
daa
xor
or
adc
fisubl
shll
jno
pop
mov
ljmp
in
sub
mov
pusha
xchg
pop
sub
in
mulb
cli
push
je
sbbl
inc
out
dec
int
sarb
sbb
loop
movsl
icebp
mov
adc
ljmp
insl
lock
push
out
negl
ss
jno
jmp
adc
push
or
xchg
and
iret
inc
mov
jg
xlat
jb
ss
inc
ljmp
push
adc
test
mov
mov
nop
les
rcrb
and
jl
mov
cmc
mov
or
push
mov
stos
sbb
outsl
jge
xlat
xchg
pop
mov
xchg
es
push
cltd
push
sub
ja
or
inc
addr16
pop
scas
out
sbb
xchg
sbb
dec
in
jo
lret
out
xchg
sub
outsl
fbstp
sbb
fs
add
ja
jg
sahf
pop
hlt
sti
and
fcmovbe
xchg
jo
jbe
jbe
push
ja
out
cs
es
test
fcmovne
shl
insl
out
cmp
jg
inc
jo
cli
xchg
loopne
das
icebp
and
in
mov
xchg
fs
in
lods
fsqrt
ds
dec
mov
leave
pop
subl
inc
xor
add
sub
push
inc
add
jmp
jge
out
imul
sarb
push
ror
xchg
repz
dec
adc
jns
and
pop
fmuls
jae
cmp
mov
call
pop
js
dec
xchg
pcmpeqw
andl
adc
outsb
sahf
dec
vphaddbd
pusha
jecxz
and
push
imul
mov
mov
sub
xorb
into
jae
add
mov
test
sub
dec
mov
call
mov
insl
dec
cld
jmp
in
jg
add
dec
lea
pushf
push
push
push
fdiv
dec
js
mov
test
pop
lea
imul
out
out
and
imul
push
sahf
in
cltd
adc
in
jl
xorl
add
jne
pop
in
dec
insb
and
fisubl
test
sarl
pop
xchg
mov
lods
sahf
xor
loope
xlat
outsl
ss
adc
sub
sbb
data16
mov
pop
sub
cmp
xchg
jo
cli
add
push
daa
addb
cs
jno
jecxz
inc
jbe
xor
mov
lock
push
outsl
sub
jle
testl
push
sti
jecxz
add
xchg
scas
cs
inc
lods
sub
fidivs
fldenv
mov
shl
jge
push
imul
ljmp
cwtl
xorl
pop
xchg
mov
aad
push
inc
xchg
out
subb
mov
je
mov
jae
xor
test
movaps
ja
lcall
or
es
sub
lcall
add
inc
int
lahf
addr16
cmp
mov
cs
pop
arpl
orl
inc
push
in
cwtl
pop
mov
fst
ja
int
iret
push
xchg
roll
idivl
dec
adc
mov
or
push
cltd
aas
push
cmp
inc
lcall
mull
out
mov
cwtl
adc
inc
fwait
es
and
rcrb
mov
lock
lods
loope
add
cwtl
call
jmp
in
pop
lahf
sbb
lock
add
test
cmc
adc
jns
push
mov
cli
imul
sbb
sub
insl
inc
xor
mov
jbe
inc
add
pop
ret
pop
fistps
xlat
out
into
xchg
aad
lea
inc
mov
xchg
and
mov
incl
hlt
out
in
xorl
iret
subl
mov
push
repnz
das
sub
js
push
mov
mov
lea
xor
jo
shrb
inc
test
sbbb
pusha
push
sub
add
sub
pop
mov
js
sub
xchg
pop
inc
leave
and
mov
mov
dec
add
jnp
xor
lods
dec
cmp
out
scas
fistps
leave
bound
hlt
and
xchg
incl
adc
lcall
fadd
xchg
movsl
pusha
lods
andl
inc
push
iret
ja
es
and
insl
sbb
lcall
add
imul
pop
mov
loop
inc
fucom
ror
mov
jecxz
xchg
into
push
repz
xlat
jns
sbb
fiaddl
ret
pop
data16
leave
adc
roll
aas
inc
cmpsl
mov
pushf
mov
lret
sbb
dec
xchg
or
lods
mov
ret
mov
lcall
loop
sub
lock
cltd
roll
xchg
fdivrs
enter
mov
ret
cli
xchg
mov
aad
or
xchg
out
sub
stos
inc
pop
lret
je
pop
in
add
inc
dec
jbe
pop
sahf
xchg
jb
xchg
out
stc
sahf
lret
push
sbb
clc
pop
fwait
lds
in
xchg
daa
jb
sbb
jno
loopne
std
push
xchg
addr16
lahf
cmp
andb
test
out
ss
ljmp
fistpl
iret
data16
sub
or
push
shl
jb
inc
jecxz
cmp
jbe
cld
fsubrl
dec
adc
add
jmp
in
mov
mov
mov
and
xor
adc
and
jae
xchg
gs
ds
mov
jecxz
pop
daa
imul
lock
out
xor
sbb
es
incb
dec
div
inc
xchg
dec
stc
add
sub
cmp
loopne
insb
movsb
mov
push
lods
out
jbe
aad
sbbl
test
xchg
stos
test
shrl
push
xor
sub
mov
pop
int3
mov
xchg
jo
aad
dec
icebp
out
mov
pop
cmpsl
lcall
jge
add
xor
imul
mov
cmpsb
insb
cs
roll
inc
dec
sub
das
sub
adc
xchg
fsub
shll
in
mov
mov
mov
es
inc
xchg
in
mov
xor
call
sub
in
test
mov
rcll
adc
icebp
sbb
outsb
cwtl
pop
push
mov
mov
jle
loopne
add
cmpsl
xor
cmpsb
repnz
ds
jg
into
fildll
push
jae
popa
inc
imul
arpl
subb
dec
jae
jp
push
mov
push
push
out
call
cs
xor
and
push
mov
aaa
lds
xlat
dec
cmp
push
add
and
call
lds
dec
lea
shlb
sub
ss
inc
pusha
mov
mov
nop
and
leave
movsb
stos
orl
sarl
out
mov
call
movsl
push
ja
lods
psubsw
daa
in
idivb
pop
adc
push
cmp
fs
adc
sbb
sub
mov
jg
and
rcrb
mov
repnz
push
loope
and
aam
imul
pop
cs
movsl
mov
aaa
test
std
sti
fidivs
and
call
out
push
lcall
popa
mov
aas
inc
mov
pop
and
ljmp
scas
jae
inc
test
pop
cmc
sub
mov
jo
outsl
mov
sub
mov
idivb
jo
inc
add
lret
mov
lods
dec
mov
nop
pop
push
or
mul
test
lret
test
out
sti
mov
sbb
xor
orl
push
leave
fwait
sbb
lock
add
mov
inc
popf
in
push
gs
jmp
arpl
fistpll
sbb
and
out
pop
test
test
imul
ss
pop
inc
and
sub
aad
in
cmp
shl
mov
dec
negb
mov
mov
in
mov
jp
sbb
popf
test
out
add
push
xchg
and
adc
sub
mov
popf
test
inc
sysenter
mov
lock
inc
dec
sahf
cmp
js
inc
mov
pop
xchg
inc
int3
into
push
push
sbb
nop
fidivl
fisttps
xlat
inc
cltd
imul
shr
lcall
arpl
sbb
mov
pop
xlat
fidivl
xor
ljmp
ret
jno
ficompl
xor
xor
xchg
ds
adc
into
jge
jbe
cmpsl
stc
add
mov
fnstenv
dec
xor
push
aaa
sti
mov
push
ret
outsl
ret
adc
cmp
cmpsl
mov
clc
std
push
sbb
jge
pusha
rorl
push
das
addr16
divb
mov
mov
test
iret
push
xchg
hlt
xchg
jge
imul
ret
cwtl
aas
xor
in
imul
sub
loope
cmp
push
jecxz
pop
leave
shlb
lret
pop
aas
pop
jo
je
loope
xor
lcall
lret
jno
lahf
enter
jo
sub
test
dec
repnz
dec
out
filds
scas
mov
pop
and
add
sbb
and
xor
insb
dec
dec
adc
icebp
icebp
push
mov
and
test
sbb
pop
imul
jecxz
jbe
lock
ljmp
int3
jg
std
mov
push
xchg
xchg
mov
sbb
or
pop
test
cmp
jmp
mov
xor
jle
push
mov
ljmp
stc
test
int3
mov
es
and
lods
rcrl
incl
shlb
add
aam
bound
jbe
out
adc
ljmp
push
les
testl
adc
sbb
add
test
loope
or
xor
push
adcl
iret
lock
call
or
xchg
stos
adc
cwtl
aad
in
add
mov
arpl
out
xchg
imul
sbb
cmp
fdivrl
mov
sbb
loop
out
mov
jne
pop
cmpsl
shrl
pop
push
cwtl
dec
pop
out
enter
mov
add
xchg
sub
les
mov
add
jne
pop
ja
xor
pop
sub
loop
lret
xchg
or
std
leave
xchg
add
pop
scas
stc
pop
add
push
in
jae
shlb
or
into
test
cli
movsl
insl
mov
xor
sbb
enter
fdivr
cli
jmp
xor
loope
or
sbb
sbb
mov
mov
cltd
test
xchg
add
push
lcall
popa
add
scas
fisttpll
xchg
xchg
push
add
in
test
js
mov
cmp
or
out
fdivl
dec
mov
adcb
jne
cmpb
aas
pop
imulb
outsb
hlt
les
ja
mov
and
mov
jae
push
cli
mov
xchg
inc
aas
add
sub
cwtl
cmpsb
mov
add
scas
jge
sti
test
adc
mov
or
movsl
pop
movsl
or
shrl
pop
loop
xchg
or
push
dec
mov
bnd
push
stc
cmp
test
xchg
jb
or
js
rorb
rcl
mov
cmc
add
not
cli
adc
lcall
lret
fcomps
int
incl
aas
jnp
mov
repz
mov
dec
xchg
jno
ja
mov
lret
jp
dec
sub
pslld
dec
jo
jmp
mov
in
mov
js
sbb
in
lahf
rcrb
lcall
sbb
out
test
pushf
rcrl
in
repnz
and
and
xor
dec
cmpsw
jp
cmc
add
int
sbb
mov
pushf
dec
mov
or
xchg
iret
push
dec
cmp
push
mov
or
mov
jb
roll
sti
cmp
daa
add
stos
sub
in
push
xchg
nop
xor
popa
les
pop
cmp
flds
push
mov
das
adcb
cwtl
insl
jmp
xchg
sbb
jecxz
mov
scas
ret
dec
mov
sbb
cmp
cmp
add
jb
sub
cmp
dec
add
pusha
xchg
mov
iret
pop
cld
pop
lldt
and
stos
int
lcall
nop
int
nop
test
loop
jne
mov
xor
or
leave
aaa
out
and
dec
outsb
inc
or
nop
dec
sbb
cs
rclb
jbe
shlb
idivb
push
les
aaa
clc
fldl
jl
sbb
push
push
cmc
adc
push
xor
cmp
inc
dec
movl
pop
add
or
rolb
xor
imul
or
repnz
lcall
imul
loopne
mov
xor
push
int3
mov
cmc
aad
cltd
imul
pop
adc
jge
ja
ss
jmp
jp
push
fwait
in
push
test
xchg
inc
imul
loop
add
add
pop
adc
cmpsb
push
add
push
xchg
or
outsl
lahf
popa
outsl
or
push
pop
and
enter
loop
les
mov
sub
ljmp
and
pop
mov
scas
std
dec
jge
sbb
pop
in
adc
or
std
mov
mov
jb
mov
ss
mov
popf
ret
bound
xor
inc
iret
adc
cmp
pushf
enter
dec
mov
or
dec
cs
fnsave
lcall
cltd
push
cs
jmp
sub
mov
adc
inc
ja
add
or
cltd
lcall
outsl
add
js
or
push
testb
test
loope
or
and
sbb
lock
into
inc
push
xor
jle
test
or
lahf
xor
jns
fidivrl
outsl
xchg
out
push
divl
sbb
loopne
scas
js
and
fisttpl
jne
sbb
repnz
popa
repz
lret
data16
push
hlt
cs
testb
aas
ret
divl
and
xor
sti
xchg
mov
xchg
aad
sti
jno
push
push
add
orl
insl
stc
fsubrl
lods
pop
adc
enter
stos
cmc
push
xchg
pop
jmp
jl
cli
rol
es
and
imul
pop
lea
inc
jns
divb
mov
ss
ss
and
adc
mov
adc
jo
sub
addl
push
adc
inc
fsubp
xchg
pop
adc
cmp
sbb
je
xchg
push
pushf
mov
les
mov
orl
sub
push
or
jbe
xchg
xchg
enter
test
mov
imulb
js
dec
es
sub
push
or
jbe
xchg
xchg
enter
test
mov
imulb
js
dec
es
aaa
sub
push
or
jbe
xchg
xchg
int3
cmpsb
fdivs
mov
test
push
jle
pop
xor
inc
cmp
mov
cwtl
mov
jns
cmp
cmpsb
fadd
fisttps
sub
or
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stos
sbb
sub
pop
mov
call
aad
mov
mov
js
dec
sti
dec
jmp
sbb
sub
pop
clc
dec
enter
sub
sbb
dec
sti
pop
jmp
sbb
sbb
inc
sub
pop
cwtl
dec
jnp
imul
pusha
leave
jge
add
add
push
icebp
sub
jnp
dec
adc
repz
js
push
jb
shrl
jo
mov
dec
inc
orl
sbb
into
inc
jae
popa
fsubrp
dec
je
scas
in
xchg
dec
sti
cmpsl
mov
std
push
mov
rorb
push
sbb
into
cmp
push
je
shrb
insl
adc
clc
clc
dec
aaa
adc
xchg
sub
mov
out
xchg
fstpt
dec
icebp
pop
ljmp
add
ret
push
dec
or
or
sub
sti
push
adc
mov
imul
adc
sbb
in
mov
dec
sti
pop
repz
or
pop
orb
jle
out
fwait
mov
stos
and
jb
jp
pop
add
lret
cmp
sub
cmp
imul
cwtl
push
scas
and
pop
stc
sub
adc
repnz
pusha
into
adc
sbb
dec
lret
dec
mov
jnp
imul
cmp
push
sti
pop
jmp
sbb
sub
pop
clc
dec
enter
sub
sbb
dec
sti
pop
jmp
sbb
arpl
pop
jmp
inc
inc
dec
push
mov
imul
je
push
inc
in
cmp
mov
outsl
push
fnstenv
es
push
lret
scas
aam
xor
xchg
push
pop
shlb
jg
fs
call
xor
mov
cmp
js
sub
dec
sbb
cmc
imul
and
and
bound
mov
mov
mov
jno
xlat
fdivrs
lock
movsl
insb
and
inc
scas
je
aam
imul
testl
mov
inc
inc
in
lock
les
pop
sub
iret
jae
pop
ss
push
inc
xlat
xchg
mov
ret
shr
js
xchg
rcr
pop
push
std
jb
sbb
jg
and
ds
mov
ljmp
scas
push
es
xchg
and
dec
insl
int3
mov
xor
pop
push
push
adc
cli
pop
pop
cmp
fldenv
call
xchg
inc
xor
scas
aad
pop
movsb
sbb
shlb
int3
pop
faddl
add
cmc
and
pop
cmp
xor
add
imul
inc
push
jns
aas
adcb
movsb
pop
das
fs
pop
xchg
push
stc
lods
add
lahf
cmp
lcall
mov
dec
add
outsl
in
inc
add
add
push
mov
outsl
mov
sbb
in
inc
hlt
adc
mov
repnz
rcrl
rolb
leave
lahf
enter
sti
fwait
adc
ret
add
jle
xchg
insl
shr
fs
mov
inc
rolb
data16
dec
stc
ljmp
push
mov
mov
sbb
inc
pushf
fsubrs
xchg
insl
jl
ja
xchg
out
pop
sub
mov
dec
mov
loopne
cmp
or
ljmp
mov
or
pushf
and
xchg
arpl
leave
vminss
inc
cltd
or
je
or
mov
clc
cmpsl
roll
cld
int
jmp
decb
cltd
add
add
out
int
and
xchg
xchg
sub
sbb
dec
in
hlt
inc
push
ficomps
fwait
mov
cltd
mov
out
test
sbb
shll
cmpsl
aas
sub
jbe
push
jns
push
jp
movsl
and
mov
xor
xlat
add
popa
and
or
lods
shrl
loope
or
jp
in
jne
mov
dec
xchg
int
mov
inc
pop
xor
inc
xchg
imul
mul
bound
xchg
decb
test
cmp
xchg
jns
lods
and
mov
enter
push
xlat
jge
mov
fisttps
jmp
cmp
dec
aam
inc
mov
nop
ss
lret
lock
pop
mov
orl
dec
je
jb
std
andb
insl
movlps
jmp
ret
push
xor
push
test
mov
aad
cmpsl
xchg
hlt
cmp
jbe
and
icebp
loop
or
xlat
shr
push
pop
loope
lods
stc
jmp
xchg
sub
imul
mov
inc
or
xchg
outsl
pop
lret
adc
imul
cmp
adc
fisubs
add
or
xchg
dec
div
fsubrs
mov
les
xor
dec
orb
fadds
sahf
mov
dec
push
add
imul
test
jne
cmpl
add
jo
mov
xchg
repnz
jle
lods
js
mov
pop
xor
mov
rol
push
out
push
cli
mov
xor
loop
inc
and
jbe
push
sub
push
sub
jo
sbb
nop
jae
xlat
xchg
int
jo
in
mov
loop
add
push
sub
shlb
test
inc
es
sub
shl
xchg
aaa
rorb
sbb
mov
dec
sub
push
int3
ja
pop
or
sub
pop
adc
sub
cmp
sbb
pop
xchg
xor
xor
cmp
inc
xor
adc
and
mov
push
lret
xchg
sbb
cmp
mov
adc
mov
add
sub
xchg
das
hlt
add
adc
out
sarb
add
idivb
movsl
push
idivl
xor
incl
xchg
enter
push
icebp
subb
jae
add
sti
pop
leave
xor
jmp
or
dec
xchg
in
mov
out
cmpsb
fsubl
mov
lds
test
or
sahf
sub
mov
inc
cli
xor
add
mov
mov
int
aad
inc
addl
aad
ja
aas
lahf
xchg
jns
xchg
dec
sahf
cmpsb
fwait
sti
adc
dec
cmpsl
push
sarb
dec
popa
and
out
nop
ja
std
dec
mov
push
shl
and
loope
add
xchg
repz
sub
cmp
dec
mov
insl
dec
mov
and
mov
stc
dec
adc
and
mov
scas
not
or
rcr
dec
repz
jo
jecxz
cmp
jle
stos
cmc
push
addr16
mov
and
into
leave
scas
xchg
orl
push
fldenv
aad
jecxz
xor
push
inc
xor
ja
loope
insb
sahf
leave
stos
inc
inc
ret
cmc
sarb
iret
add
jl
test
jno
lea
js
jp
jecxz
mulb
test
xchg
pop
add
dec
out
cmp
pop
negl
ss
inc
pushf
subl
pop
ja
aas
arpl
and
xor
ds
insl
rolb
shlb
loopne
inc
test
add
dec
push
sub
dec
test
repnz
insb
outsl
push
dec
lret
inc
arpl
dec
sbb
lock
mov
rcll
into
fs
stos
adc
cmp
push
pop
mov
addr16
mov
jo
push
pop
or
dec
out
test
aas
pop
mov
mov
lret
push
or
jno
arpl
add
xchg
shr
lcall
arpl
stos
pop
lcall
jp
mov
adc
or
pop
push
test
mov
sub
add
bound
test
stc
mov
stos
scas
subl
dec
out
jle
inc
je
xorl
inc
cli
add
xchg
and
addr16
xchg
sbb
scas
cltd
push
jae
cld
mov
mov
and
push
pop
sub
fldenv
cmp
cs
icebp
lds
mov
xor
and
subb
loop
inc
leave
pop
dec
or
jne
and
cmpsl
sbb
adc
pop
push
or
xchg
and
ds
and
aad
and
sub
pushl
jg
mov
int
push
stos
sbb
ds
out
test
push
dec
jno
sti
rcrl
mov
aam
jne
paddusw
xlat
daa
xchg
push
lock
push
sub
sbb
imul
subb
sbb
mov
jp
fimull
shrl
repnz
out
popa
iret
push
addr16
inc
in
push
shll
or
cmp
jp
adc
add
pop
xor
fldl
push
cmp
fisubrl
cmc
sbb
loop
lahf
int3
xchg
pop
dec
xor
es
jns
jae
push
fldcw
xor
rcr
and
mov
sbb
test
imul
push
dec
in
pop
lea
test
dec
pop
fimuls
pop
mov
jmp
scas
adc
imul
mov
push
js
mov
repz
pop
sahf
pop
cli
inc
mov
loopne
jl
movsb
and
mov
xchg
dec
push
sbb
xor
and
mov
jnp
cmpsl
sub
ja
enter
mov
cmc
int3
and
out
jb
fwait
jnp
and
int3
pop
mov
and
cmp
push
fwait
dec
mov
push
sub
push
add
mov
js
adc
sub
xchg
fimuls
lods
cmc
adc
xor
loopne
dec
mov
lahf
lock
and
xor
les
es
lods
fcomps
shr
in
pushf
fwait
adc
xchg
and
stos
jecxz
shlb
data16
sub
add
bound
fnsave
mov
sahf
mov
sahf
sub
jmp
cmp
inc
xor
loopne
and
mov
pop
mov
xchg
push
das
sbb
imul
mov
adc
push
outsl
pop
sbb
in
add
test
adc
sub
push
fcmovnb
sbb
push
sahf
or
xor
dec
fdiv
xor
xor
jg
jno
rcr
dec
adc
dec
scas
sti
gs
cs
sbb
cmp
jle
fistl
lods
mov
xlat
stos
push
xlat
pop
pop
out
andb
pop
adc
jb
sub
add
cmpsl
js
popa
jge
pmuludq
cmp
lcall
dec
mov
cmp
mov
rol
in
ret
mov
les
and
jmp
fstl
repnz
push
push
pop
sub
cmp
bound
adcl
lea
jmp
pop
hlt
sbb
pop
sbb
adc
test
out
sbb
divb
cs
mov
pop
mov
xchg
ja
iret
jb
fs
or
sbb
cmp
sbb
in
sbb
in
std
jbe
xor
popf
sub
aad
mov
divb
jge
pop
fadds
cli
mov
push
in
fisttps
jl
mov
xchg
mov
in
jno
adc
rolb
ds
mov
pop
lcall
push
push
jmp
or
cmp
aas
jge
sbb
mov
fwait
in
mov
sub
ffree
outsb
jae
call
cmp
mov
icebp
pop
ret
test
in
repz
add
xor
out
clc
pop
xor
leave
insl
scas
sbb
jnp
subb
cmpsl
push
dec
push
sub
mov
pushf
rclb
add
insl
mov
mov
shll
in
pop
inc
adc
cmpsl
mov
loop
les
shll
lret
fiaddl
out
cwtl
mov
jbe
push
fiadds
mov
pop
xor
xor
adc
sbb
imul
call
push
out
push
cmc
test
negb
push
jns
in
aad
sarl
cmp
push
mov
cmp
cltd
or
mov
sbb
fiaddl
or
sub
dec
jnp
xchg
mov
or
insb
jae
lahf
dec
sbb
rcr
cmp
fiadds
lods
cmp
out
hlt
or
int3
and
inc
es
add
cmpsb
movsb
aaa
push
dec
bound
add
mov
mov
ds
pushf
iret
xor
jno
shlb
stos
xlat
cltd
inc
push
jb
or
mov
lods
jo
mov
dec
push
addr16
jle
push
jge
xchg
mov
sub
lret
and
mov
push
cmp
jno
or
lods
mov
sbb
cmpsb
pop
stos
xor
xchg
inc
push
mov
aas
cmp
repz
sbb
add
dec
jo
mov
sbb
out
xchg
enter
popa
mov
mov
mov
aas
test
xchg
mov
stos
cmp
xchg
loopne
loope
fwait
push
push
sub
call
data16
sahf
mov
xchg
decl
das
or
dec
mov
cmp
fadds
icebp
enter
adc
cmp
int3
inc
pop
insl
cmp
push
mov
arpl
fisubrs
inc
and
mov
fnstcw
dec
subb
mov
das
test
nop
push
ja
in
mov
js
mov
fucomi
push
sub
jl
loop
mov
mov
rclb
pop
icebp
pop
dec
add
and
jle
push
sahf
lcall
js
ret
hlt
add
xor
loop
hlt
addr16
adc
mov
sub
mov
add
sti
movsb
xor
pop
push
pop
cmpsb
or
lahf
fdivr
jmp
dec
shrl
jnp
lds
xor
aam
jecxz
popa
push
add
push
push
sbb
aam
std
pop
sbb
inc
dec
sub
nop
inc
or
int3
insb
pop
lahf
fldenv
in
pop
call
pop
add
adc
push
jp
lods
mov
mov
shrb
mov
popf
jg
xor
mov
xor
mov
mov
fsts
push
icebp
mov
leave
ret
and
dec
add
movsb
sub
inc
cmp
shl
mov
mov
sub
int3
imul
sbb
adc
mov
icebp
jae
cld
data16
movsl
imul
adc
out
movsl
jmp
in
mov
sbb
or
lcall
sqrtps
mov
lahf
mov
push
mov
jno
push
add
cmp
aaa
outsl
and
and
mov
pop
mov
lds
xchg
cmpsb
mov
jmp
inc
ret
popf
jno
fcomps
cld
dec
xchg
pop
lods
push
pop
mov
ds
xchg
push
test
jo
jbe
xchg
cmpsl
loopne
push
into
movsb
cmp
sub
pop
stos
out
clc
pop
pop
lods
mov
push
rcll
xchg
lods
jae
cmpsb
cmp
js
test
imul
pop
in
pop
rcll
jl
xchg
mov
int3
and
in
inc
scas
sbb
push
push
out
cmpsl
cmp
je
arpl
ljmp
addl
jne
lods
out
lret
sahf
mov
xor
jb
add
push
or
xor
rorb
aaa
jp
das
aam
push
fsts
ljmp
pushf
jmp
and
das
xchg
fwait
inc
repnz
pop
sbb
xchg
jle
mov
aaa
lea
fs
lods
add
jbe
sbb
and
jle
into
push
addr16
leave
icebp
hlt
jp
xchg
jns
jle
xchg
fadds
xor
lret
mov
mov
jge
pushf
pop
out
xor
sub
shll
lret
out
pop
cmc
adc
pop
mov
mov
loopne
repnz
pop
push
divb
push
in
aam
stos
pusha
cmp
inc
daa
flds
xchg
stos
xor
xor
sbb
repz
mov
push
andl
sub
push
inc
or
jl
insl
sbb
aad
jne
fdivrs
xchg
cmp
xor
cmpsl
ss
aaa
dec
push
adc
mov
bound
lods
fmulp
pop
out
jns
movsb
flds
lea
mov
jmp
ret
mov
in
rcrl
cs
or
xor
jns
inc
mov
dec
lcall
mov
xchg
out
sahf
aad
push
mov
imul
cli
sarl
jl
fimull
aas
fimuls
fldl
inc
jno
aas
lahf
fwait
fiadds
jae
call
stos
adc
movsl
out
add
imul
loop
adc
xchg
lds
pop
inc
sbb
gs
mov
out
push
popa
mov
pop
pop
es
add
stc
scas
push
shr
cs
decb
add
jo
sbb
jae
jno
xchg
dec
lock
pop
add
cmpsb
and
nop
icebp
jmp
adc
mov
mov
pop
scas
mov
pop
push
or
mov
scas
xchg
jp
adc
jae
sbb
inc
push
sbb
rol
cmp
inc
shrl
dec
xchg
xor
or
sbb
imul
in
and
test
clc
mov
push
push
insl
aaa
xchg
push
push
jmp
add
leave
sub
xchg
sub
test
mov
cmpsb
and
fcomps
jmp
lods
pop
fadds
push
sbb
push
pop
adc
fiaddl
imul
gs
ret
outsl
or
bound
lods
inc
and
iret
adc
xchg
shlb
push
into
lds
pusha
push
cmpsb
add
cmpsl
jle
aaa
mul
aaa
addb
mov
out
xchg
in
insl
sbb
xchg
xor
lcall
pop
pop
adc
push
mov
xor
jecxz
cmp
jae
push
xchg
xor
inc
cmpsb
in
jb
adc
and
add
dec
dec
stos
mov
out
push
and
popf
ret
sbb
mov
mov
lods
xchg
fadd
sbb
add
adc
daa
mov
mov
stc
fwait
das
jmp
fsts
mov
movsb
stc
popf
aaa
cmp
inc
jo
out
add
iret
push
in
jbe
sbb
adc
push
inc
stos
outsb
imul
cmc
les
outsl
jnp
pop
mov
push
xor
es
jne
out
adc
outsb
or
mov
mov
cwtl
movsb
jbe
dec
into
repz
mov
push
ret
fbstp
test
cmp
pop
adc
mov
lcall
pop
jbe
ds
sbb
sub
push
pandn
adcl
sub
aas
outsl
mov
mov
scas
outsl
xor
iret
lods
cmp
pop
mov
cwtl
xchg
dec
or
cmp
loop
adc
daa
mov
dec
orl
lahf
mov
mov
xchg
test
xor
fcoms
pop
mov
or
mov
sub
dec
cli
xchg
insb
or
pop
xchg
mov
xor
cmpsb
sbb
leave
adc
cwtl
inc
bound
cmp
mov
push
jnp
xor
fiaddl
test
mov
xor
dec
shl
push
popa
test
cmp
hlt
incb
addr16
mov
inc
jge
leave
xor
jne
jbe
call
dec
ds
addr16
cmp
cltd
inc
adc
jle
and
pop
push
mov
out
xchg
outsl
jle
and
push
jp
xchg
mov
das
mov
ss
inc
ja
addr16
or
lcall
aam
pusha
cwtl
insb
cmp
int3
sub
ja
clc
xor
cld
inc
imul
test
divl
rcrl
stc
loope
std
fcmovu
and
cs
cmp
push
dec
xor
ds
sahf
aam
mov
or
mov
out
ret
xchg
insl
fdivs
push
cld
jne
and
sbb
mov
loopne
mov
sbb
lock
sub
idiv
jne
or
xchg
leave
ja
jmp
sub
cs
sti
cmpsl
jl
mov
mov
inc
int
movsl
daa
pop
lods
nop
mov
jmp
scas
add
pop
pop
cmpsb
push
sbb
sahf
mov
pop
mov
jp
adc
push
dec
sub
cld
cli
lahf
or
cmp
fwait
lds
test
jecxz
sahf
inc
cmp
push
repnz
xchg
mov
add
lock
in
push
lret
or
pop
pop
mov
lcall
mov
add
pusha
cmp
fwait
mov
out
mov
outsl
jmp
or
rcr
dec
pushf
mov
cli
xor
mov
add
cmc
icebp
test
adcl
push
in
xor
mov
pop
stos
inc
notb
notl
jecxz
pusha
pop
lret
push
fiaddl
out
pop
jbe
jmp
add
lods
push
test
dec
sub
dec
mov
int3
jmp
fs
dec
xorb
rorl
js
repz
inc
pop
aas
sbb
cmc
xor
testl
and
imul
adc
clc
repnz
leave
mov
jmp
push
repnz
shl
hlt
popa
in
mull
mov
or
loopne
mov
dec
out
aaa
sbb
shll
je
call
xor
sub
push
aam
inc
mov
mov
jae
outsl
int
mov
jae
data16
push
aad
push
push
push
loope
add
int3
arpl
test
adc
aad
sti
sahf
xchg
jne
cmc
fsubrs
or
jno
jle
out
mov
adc
mov
push
mov
inc
xchg
nop
rcrb
les
sbbb
pop
pop
or
dec
out
iret
adc
push
lret
jbe
jb
or
jmp
dec
add
xor
push
and
xchg
push
daa
ret
pusha
pop
fisttpl
mov
fdiv
iret
es
in
repnz
cltd
aaa
jo
sahf
mov
and
push
xchg
inc
ret
adc
pop
aas
mov
mov
insb
test
imul
rorl
mov
bound
jo
lahf
mov
sub
movsb
aas
mov
mov
xor
fstl
mov
test
fisubrl
iret
xor
or
call
das
pop
lahf
out
arpl
mov
push
ret
cltd
mov
mov
bound
dec
lcall
jp
sar
popa
push
insl
cmpsb
test
out
stc
mov
cwtl
sub
pop
clc
dec
enter
sub
sbb
dec
sti
pop
jmp
sbb
sub
pop
clc
dec
enter
sub
sbb
dec
sti
pop
jmp
sbb
sub
clc
dec
enter
sub
sbb
dec
sti
mov
mov
cmp
dec
enter
sub
sbb
pop
push
lock
add
adc
jp
push
pop
cwtl
dec
out
xchg
inc
mov
iret
cmp
or
sbb
insl
mov
pop
mov
pop
cwtl
dec
call
sbb
jle
idivb
ljmp
sbb
dec
lcall
push
inc
pop
push
clc
and
adc
cli
push
leave
outsb
mov
and
aas
call
cwtl
sbb
aas
out
sub
int3
stc
frstpm(287
sbb
cmp
mov
cmp
rep
jp
loopne
push
adc
mov
in
cmc
lods
add
repz
leave
push
jb
out
add
mov
add
ljmp
cmc
adc
and
xchg
cmc
movsl
int
jmp
outsb
fimull
sbb
jp
pop
cmpsl
lcall
pop
ds
cli
jnp
mov
nop
call
and
jae
mov
sub
push
ja
cmp
dec
sbb
pop
rclb
sbb
or
insl
mov
dec
call
sbb
stos
repnz
push
rorl
mov
cmp
fidivrl
sbb
aas
imulb
xchg
lea
jbe
outsl
dec
xchg
jns
pop
fidivrs
add
push
test
cmc
pop
out
adc
add
sub
cmpl
stos
cmp
mov
insl
mov
sbb
fidivrl
push
lods
or
sub
sbb
or
cli
cmp
or
sbb
push
lcall
mov
dec
call
sbb
or
cli
cmp
or
sbb
push
lcall
and
dec
movsb
mov
movl
xchg
fiaddl
dec
test
jge
scas
add
shll
out
mov
dec
fstps
xchg
xor
loopne
movsl
stos
out
cmp
mov
sbb
push
ss
insb
hlt
lahf
insb
jp
adcb
xor
cmp
out
mov
cmc
adc
lds
int3
stos
sub
xchg
adc
mov
fs
push
push
test
or
pop
in
movsb
in
incl
hlt
sbb
adc
mov
xchg
fldl
mov
clc
mov
hlt
xchg
cmp
adc
mov
shl
nop
push
push
mov
bound
sti
iret
jl
pop
xor
sti
inc
dec
fisubrl
test
xor
scas
or
ret
jmp
adc
mov
cmp
mov
jmp
jb
lods
mov
sbb
ret
stos
jbe
xchg
shlb
adc
int3
lret
out
mov
push
mov
movsb
repnz
les
push
sarl
fsubrs
inc
fildl
stos
insl
mov
in
int3
out
cwtl
mov
push
stos
jp
jmp
or
mov
fisttps
shlb
fnstenv
cld
push
test
adc
sti
roll
call
mov
cltd
fisubrl
js
mov
leave
jecxz
add
aaa
add
mov
fwait
or
inc
pop
mov
sub
and
out
inc
pop
sub
xchg
mov
aam
lods
test
mov
out
cmp
js
mov
mov
push
mov
icebp
jo
repnz
rcll
adc
fsubrl
lcall
inc
jecxz
mov
jnp
jecxz
repnz
cltd
push
or
stos
cmp
or
mov
cmpsb
sbb
adc
adc
rol
or
scas
mov
add
add
mov
xor
push
inc
fisubl
mov
aad
popl
das
dec
fidivl
mov
pushw
add
ljmp
add
test
les
add
cld
sub
arpl
push
sti
aam
and
popf
enter
mov
inc
adc
sub
insl
imul
dec
jmp
arpl
test
and
adc
nop
andl
push
dec
stos
push
mov
cmpsb
xchg
test
adc
push
popa
sub
and
xchg
cmc
pop
ds
es
cmp
push
push
dec
stos
sbb
roll
in
or
int
mov
jge
jecxz
repnz
lds
pop
xor
aad
mov
pop
inc
push
xchg
adc
addr16
stc
lods
jo
push
shlb
sbb
add
outsl
fcom
push
lea
fsubs
lret
fisttpll
das
outsl
pop
xlat
mov
add
cmpsl
sbb
sbb
jne
inc
mov
sahf
test
push
push
sub
into
and
sub
sahf
popl
mov
stos
cmp
inc
insb
popf
ret
orl
sbb
adc
jp
test
sahf
pop
lock
gs
lds
adc
xor
loopne
push
mov
stos
ss
or
push
data16
and
push
mov
les
ljmp
call
adc
incl
mov
xchg
sbb
push
inc
pop
inc
loope
cmp
sub
jecxz
test
pop
sub
pop
sti
dec
lods
jmp
cmpsb
movsl
sub
sbb
or
mov
lret
mov
pushf
lcall
insl
sub
aad
inc
mov
jge
scas
int3
fadd
mov
or
mov
sbb
andb
mov
fs
xchg
sub
fimuls
adc
scas
outsl
add
cld
sahf
aaa
adc
xchg
xor
mov
inc
shrb
mov
repz
adc
shll
dec
xchg
mov
pop
sub
rcrl
push
mov
shrl
jmp
add
cmp
mov
inc
sbb
and
inc
lahf
jl
pop
ss
jno
xor
daa
inc
stc
imull
das
xchg
mov
add
add
fsubl
dec
test
aad
cmp
cmpsl
pop
in
clc
mov
or
stos
mov
loopne
push
cli
push
inc
mov
inc
xor
jmp
mov
lahf
add
sbb
lcall
int
or
pop
icebp
mov
jno
pop
fdiv
js
insb
cli
int
jbe
push
test
adc
scas
jge
xchg
dec
dec
dec
dec
mov
cltd
add
jmp
sti
movsb
sbb
pop
xor
xchg
test
inc
or
ss
lret
jecxz
stc
insl
xchg
or
vmwrite
es
mov
std
sahf
dec
sti
pop
xchg
shl
sub
clc
jg
mov
mov
jmp
xchg
inc
jmp
stos
dec
test
inc
loope
jecxz
aad
scas
pop
or
push
sarl
stc
adc
or
sbb
inc
iret
in
mov
mov
out
sbb
scas
or
sub
lea
scas
fbld
push
jecxz
mov
ret
add
mov
dec
xchg
in
mov
nop
je
notb
gs
xor
call
jp
subl
inc
dec
shrb
xchg
aaa
packuswb
mov
jl
js
mov
sbb
and
les
mov
xchg
mull
enter
gs
insl
sti
jb
push
pop
pusha
dec
hlt
jb
jb
sbb
jg
nop
aad
aas
mov
mov
lahf
inc
dec
push
loopne
dec
lock
aam
je
test
mov
in
jns
lods
dec
add
cmc
xorw
cmp
sti
repnz
sub
adc
pop
pop
mov
mov
dec
or
mov
push
mov
push
loop
es
xor
mov
loop
mov
shll
inc
jno
test
adc
pusha
aad
jecxz
aam
and
sbb
inc
push
xor
pop
mov
scas
mov
lret
add
jg
fmuls
mov
fs
imul
and
repnz
out
cli
int3
cld
adc
sbb
outsl
orb
xor
push
jae
xor
cmp
mov
lea
ficompl
inc
jmp
push
push
sbb
inc
cmpsb
or
mov
ret
stos
hlt
idivl
cmpsl
jno
and
test
aad
imul
test
xor
add
sub
in
loop
pusha
push
ret
fldenv
incb
or
xor
adc
test
xor
out
fsubl
cmpb
cs
lock
adc
cli
dec
adc
mov
insb
jecxz
sahf
jb
or
mov
cli
dec
pop
icebp
lods
pop
xor
scas
push
adc
xchg
mov
jo
divl
rorb
mov
pop
aam
and
push
xchg
mov
xchg
push
mov
scas
sbb
adc
cs
or
lds
pop
lcall
or
clc
and
xchg
scas
mov
and
inc
ja
mov
inc
mov
dec
jne
faddl
or
add
out
clc
mov
cmp
xchg
ret
gs
mov
jb
movsl
scas
inc
into
mov
bound
xor
pop
cmc
repz
fbld
push
into
lods
idivb
lods
adc
xchg
movsb
jg
xchg
aad
push
sti
and
mov
jo
inc
test
push
ret
fadd
popa
cmpsb
out
popa
mov
stc
stc
leave
pop
daa
cld
jne
lret
lds
dec
xor
mov
inc
sub
sti
lahf
jno
inc
jl
sbb
push
test
ss
mov
jl
pop
fdivr
add
scas
jl
lahf
lds
dec
or
xchg
and
repz
push
ss
inc
xor
imul
push
add
iret
mov
lcall
out
mov
and
cmc
scas
and
dec
jb
sbb
loopne
movsb
sbb
mov
fcmovbe
xchg
std
or
fwait
test
xor
and
jp
pop
pop
dec
sarb
or
push
addb
dec
and
adc
pop
inc
or
jecxz
push
push
add
ljmp
mov
dec
mov
inc
add
sbb
sub
call
lahf
jmp
jp
sbb
mov
in
into
add
mov
iret
mov
sub
and
lret
xchg
jb
push
lret
dec
and
jp
pusha
cmp
xchg
xor
fldt
dec
push
adc
jp
cwtl
and
adc
and
add
jge
sbb
lahf
or
jge
cmp
daa
pop
push
mov
xchg
jl
jp
inc
mov
scas
lods
notl
push
xchg
sahf
clc
dec
pop
pop
lret
fdivrs
sbb
adc
inc
movsl
mov
bound
pop
fisubrl
into
insl
mov
push
mov
or
jmp
test
call
dec
push
js
repnz
jg
mov
mov
out
mov
out
jbe
aam
fwait
xchg
jg
and
idivb
inc
cmp
int3
xchg
dec
jg
push
add
lahf
lock
repz
loop
dec
or
sub
push
jp
dec
jmp
pop
mov
xor
minps
cs
xchg
data16
mov
cmp
mov
add
lahf
and
insl
std
dec
aaa
push
cld
sbb
in
xor
push
jae
cmp
in
in
inc
outsl
mov
dec
mov
les
out
mov
xor
into
mov
addb
xchg
adc
mov
ljmp
push
hlt
sub
cltd
cwtl
int
gs
lea
dec
jb
jo
into
loope
jmp
loop
cmp
pop
fidivl
push
and
repz
lock
mov
outsl
sub
sub
inc
add
fsubrl
sbb
and
nop
xor
ljmp
jae
jp
call
mov
mov
loop
pop
das
pusha
push
cmp
pusha
inc
shl
inc
mov
dec
jno
dec
inc
xchg
outsl
sbb
pop
popa
xchg
or
jne
cli
xchg
xchg
in
ss
xchg
mull
push
cmp
add
pop
idivl
inc
out
jp
js
or
or
add
hlt
mov
mov
das
insb
or
push
in
jnp
mov
pop
ret
out
hlt
ficomps
jmp
jb
loopne
data16
push
add
aas
popf
in
sub
clc
testl
adc
mov
fwait
je
inc
jne
fdivrl
imul
and
mov
pop
mov
mov
push
adc
push
mov
aam
inc
xchg
stc
aad
push
loope
add
mov
outsl
scas
jg
lds
xor
std
out
mov
lods
or
xchg
and
and
jmp
xor
test
dec
pusha
mov
cli
mov
lods
and
dec
inc
and
test
inc
xor
adc
xor
js
add
dec
fstpl
adc
push
jb
jmp
dec
pop
ja
mov
popf
dec
push
pop
out
jg
arpl
imul
xor
movsb
lods
push
xor
out
lea
test
popa
dec
bound
sti
jl
fldcw
ficompl
rol
push
jl
loope
xlat
ljmp
cmpb
sahf
outsl
xchg
adc
mov
sbb
fadds
into
jecxz
inc
cld
data16
lds
pusha
mov
shll
mov
xchg
mov
aam
stos
int3
loop
push
lcall
insl
pop
ret
fisttps
sub
cmp
stos
repz
adc
adc
jmp
stc
mov
aam
repnz
pop
mov
enter
lods
aam
insb
adc
adc
push
mulb
jecxz
idivl
cmp
or
mov
xchg
inc
pop
mov
push
xor
roll
sbb
pushf
andl
mov
jne
mov
push
test
scas
test
cli
mov
jg
out
sbb
jae
ret
loopne
mov
push
jno
movsb
xor
jl
mov
gs
fisttps
fidivs
or
pop
cmp
xchg
dec
ret
fldl
jne
outsl
test
cmp
test
fistps
xchg
sub
scas
mov
lahf
inc
out
and
xlat
mov
mov
out
daa
popf
push
xor
mov
js
bound
jo
es
outsl
or
xchg
jle
cmp
popa
lock
mov
jp
or
xchg
cmpsl
cld
dec
add
sub
data16
fdivr
sub
xor
mov
push
rcrl
mov
push
sub
mov
jnp
mov
ds
push
push
jne
aaa
push
addr16
adc
or
pop
outsb
mov
cmpsb
insb
pop
pop
sahf
mov
dec
test
dec
xchg
mov
inc
push
aam
xlat
push
fnstcw
enter
lahf
or
jbe
mov
sub
jnp
mov
adc
insl
mov
js
lcall
mov
ret
and
cwtl
pop
fadd
jecxz
mov
add
mov
stos
cli
stos
sub
sub
repnz
mov
mov
leave
lea
push
xchg
imull
sbb
bnd
ljmp
fmull
push
add
sti
cmp
shlb
enter
test
bound
jno
xchg
cld
push
sahf
aaa
inc
call
mov
gs
pusha
pop
pop
mov
ds
jl
sahf
cmpsb
jae
adc
fwait
or
je
loope
leave
rcrl
test
mov
cltd
cli
sub
adc
popf
dec
int
inc
mov
xchg
pop
daa
pop
mov
insl
scas
mov
jae
fimuls
add
fisttps
popf
dec
mov
cmp
es
mov
add
mov
jno
inc
dec
xor
shll
icebp
mov
fcompl
lcall
xchg
clc
mov
cmp
add
cs
test
cmp
push
jne
cmp
repz
mov
jne
orb
xchg
int
les
adc
xchg
dec
stc
mov
inc
and
xor
mov
add
sub
andb
push
inc
int
jle
test
mov
nop
lahf
mov
lcall
scas
mov
push
push
push
shlb
call
pushf
imul
loope
decb
pop
push
sbb
scas
cwtl
popa
pop
lock
adc
ret
rcll
lahf
scas
cmpl
jb
or
pop
xchg
into
and
lcall
jle
orb
cld
pop
mov
xchg
mov
and
imul
mull
jle
or
mov
mov
int
pop
mov
or
push
sbb
lock
inc
rcrl
mov
sub
sub
shll
inc
sbb
push
or
xchg
lahf
mov
cmp
subl
icebp
push
hlt
fucomp
jno
jb
mov
jbe
lds
movsb
mov
mov
std
push
sub
cmp
scas
or
fmul
out
sub
out
sub
and
push
cmp
and
in
push
sbb
dec
jbe
bound
pop
lea
sub
push
jae
mov
out
call
adc
icebp
cmp
sub
lret
mov
lods
cmpsb
repnz
jnp
rclb
mov
jmp
add
cmp
mov
shll
xor
mov
mov
mov
cli
pusha
pop
pop
ljmp
jns
sbb
fmull
cld
das
ret
es
and
adc
stc
popf
and
ret
fdivrs
mov
into
aam
and
rcr
nop
lock
cmpsb
mov
inc
lds
mov
aad
mov
mov
dec
in
outsl
int3
xchg
enter
adc
fs
cltd
imul
les
dec
jp
mov
push
shl
stc
mov
adc
mov
lods
clc
fld
mov
ja
push
push
pushf
loop
adc
sub
jb
roll
mov
in
not
jmp
das
xchg
cmc
mov
int
aam
jge
push
dec
push
push
stos
dec
popa
es
idivb
test
xchg
mov
pop
lret
or
into
or
xchg
in
jae
pop
imul
push
scas
insl
scas
xchg
lea
cmp
das
add
movsb
ret
and
icebp
rcll
movsl
mov
sbb
or
add
inc
mov
jns
xchg
lods
dec
stos
out
cmpb
lds
outsb
or
lods
sub
inc
sub
pushf
in
jle
sub
or
xor
jmp
dec
xchg
jbe
rorb
cmp
pop
push
stos
xor
inc
les
leave
add
sbb
mov
in
mov
pop
push
jnp
rcl
notb
rcrb
mov
add
aaa
mov
xorl
fwait
inc
mov
cli
les
mov
fisttpl
pop
arpl
inc
int3
xchg
inc
cmpsb
cmc
dec
xor
dec
out
mov
mov
psrlw
inc
cltd
cmpb
enter
movsl
xorb
add
scas
pop
and
sub
pop
sub
add
mov
cmp
add
jle
pop
mov
and
cmpsl
mov
lcall
paddusb
mov
loop
xor
push
sub
les
xor
add
daa
les
sub
sbb
lahf
imul
mov
fstl
cmp
xchg
pusha
mov
cltd
fidivl
andb
mov
mov
dec
dec
ficoms
dec
jge
sarl
mov
xlat
jp
imull
add
repnz
in
mov
test
mov
cmp
lret
dec
fimuls
rorb
sub
aaa
setb
fnstsw
lods
cmp
lock
push
mov
mov
sbb
lret
dec
outsl
je
mov
pop
std
sti
pop
mov
mov
inc
sub
sahf
mov
inc
inc
push
add
mov
shrb
cmpsl
fnsave
shr
xor
test
and
mov
pop
icebp
jo
aas
and
jbe
xchg
jno
sub
cmpsl
nop
xor
mov
push
xor
fwait
sahf
loopne
mov
imul
lcall
sub
dec
sbb
scas
movsl
cmc
sbbb
dec
out
in
leave
out
pop
mov
sub
negb
cmpsb
movl
inc
fldl2t
data16
mov
ja
into
dec
clc
mov
jo
mov
push
push
fildll
addr16
call
ret
inc
dec
popa
pop
xor
or
cwtl
ret
std
and
shll
test
inc
xchg
aad
aad
jp
dec
or
adc
dec
sbb
cld
sbb
mov
jp
adc
repz
lds
mov
les
pop
lea
dec
shrl
jae
repz
sbb
aas
xchg
sub
stc
jbe
outsl
sbb
xchg
mov
xchg
add
fisubl
sbb
cmpsl
fadds
sub
add
in
and
cwtl
scas
gs
jne
js
dec
bound
xor
rdmsr
and
outsl
std
mov
shr
cmp
xor
repz
out
ja
mov
adc
into
or
push
ds
fidivs
cmp
pop
call
int3
sub
shlb
iret
mov
lret
push
mov
enter
mov
xor
pushf
imul
sbb
xchg
out
or
inc
stos
or
jae
mov
add
inc
adc
int3
loope
jge
rclb
inc
repnz
sub
loope
sbb
inc
push
stc
call
jnp
enter
sub
sahf
jne
cwtl
adcb
shlb
jno
or
test
js
insb
test
mov
dec
xor
push
mov
jnp
fnstcw
pop
sbb
cmpsl
mov
inc
cmpb
bound
loope
push
sub
sbb
sar
pushf
out
inc
js,pn
pop
bound
mov
sbb
and
mov
jp
enter
pop
xchg
mov
es
in
fwait
or
jb
inc
scas
repz
push
test
and
ds
xor
or
dec
lcall
shrb
testb
insb
mov
cmp
push
out
push
sub
nop
mov
jbe
frstor
andl
pushf
dec
cmp
mov
sbb
into
cmp
add
sbb
sbbl
andb
popf
out
mov
cwtl
test
stc
dec
mov
add
out
arpl
insl
lock
dec
mov
dec
push
jmp
nop
popa
push
imul
mov
daa
sub
outsb
dec
movsl
xchg
int3
bound
insl
xchg
push
imul
test
pop
rcr
mov
lret
push
pop
test
cmp
sub
sbb
or
cli
cmp
or
sbb
push
lcall
mov
dec
call
sbb
or
cli
cmp
or
sbb
push
lcall
cwtl
pop
cwtl
dec
jmp
sbb
or
cmp
add
sbb
push
sahf
push
outsb
add
dec
call
sbb
sub
movl
xor
aad
in
cmc
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
test
das
fildll
fwait
adc
push
add
pop
add
add
push
add
cmp
lcall
add
ljmp
add
add
add
add
add
add
add
add
add
roll
lcall
add
push
movsb
add
add
stos
add
add
add
jae
add
add
add
add
mov
add
filds
cltd
add
add
faddl
mov
add
add
add
push
add
add
lret
add
add
add
push
add
add
add
push
add
faddl
push
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
add
imul
add
and
jmp
add
add
add
add
add
inc
add
add
add
imul
add
add
add
add
push
inc
add
or
lcall
add
add
add
roll
lcall
add
push
add
add
and
test
outsb
add
add
add
add
add
les
jnp
stos
add
adc
and
xchg
add
add
add
pop
add
push
push
mov
add
add
add
test
lcall
add
add
pop
add
adc
adc
lret
add
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
sbb
add
add
adc
add
outsb
add
add
add
add
add
add
add
xor
verw
and
lcall
add
add
add
jns
ljmp
add
add
add
add
add
add
add
lcall
add
add
add
add
pop
add
int3
add
les
jecxz
stos
add
lcall
add
movsb
add
add
add
lret
add
add
add
add
add
add
add
add
faddl
lcall
add
xor
dec
add
movsb
add
add
add
adc
pop
add
add
add
movsb
add
add
push
dec
add
movsb
add
add
add
adc
dec
add
add
add
cmp
pop
add
add
add
xor
movsb
add
add
jnp
adc
adc
add
add
add
add
add
add
add
add
test
lcall
add
add
add
add
add
add
add
add
add
add
add
sbb
and
mov
add
add
add
add
add
add
add
roll
lcall
add
add
add
add
add
add
add
add
lret
add
add
add
push
dec
add
add
imul
add
dec
add
add
add
imul
add
add
add
movsb
add
add
add
add
add
jecxz
pop
inc
or
nop
xchg
pop
test
cmp
dec
ds
js
sbb
fimuls
ja
gs
dec
sub
sbb
pop
les
outsb
cwtl
dec
dec
sub
xlat
mov
int3
movsl
mov
mov
ljmp
xor
mov
inc
mov
out
fwait
pop
adc
fdivl
shlb
sbb
mov
xor
hlt
rcll
push
faddp
clc
pop
push
inc
add
popa
mov
out
sub
rcrl
addb
mov
pop
push
inc
ss
outsb
ljmp
enter
data16
enter
fwait
aas
das
xchg
xchg
add
daa
inc
daa
out
stc
into
cmp
sti
inc
cld
orl
les
mov
pop
add
xor
shl
pop
inc
xor
lcall
mov
dec
test
and
pop
int
sbb
out
adcb
into
outsl
mov
xor
mov
out
sahf
pop
add
outsl
into
jge
ret
push
sub
jnp
out
sub
fcmovnb
in
mov
int
insl
call
cmpsl
push
pop
cmp
imulb
sub
cmp
clc
ret
push
cmp
addr16
ret
lahf
xor
leave
or
ja
push
jp
and
mov
mov
push
dec
outsb
mov
lahf
cmpsb
stos
fildll
lahf
lahf
cmc
shr
fidivrs
cli
lret
rorb
aad
mov
mov
shll
pop
mov
call
std
inc
push
mov
insb
iret
test
sub
stos
mov
lods
aaa
mov
cmp
jb
inc
loop
mov
push
rcr
inc
lret
bound
xchg
test
xchg
cmpsb
enter
pop
out
fldz
out
aaa
pcmpgtb
cld
rcll
jmp
fiadds
push
pushf
mov
xchg
in
mov
jnp
cmp
add
out
das
or
cmp
arpl
sbb
or
jmp
iret
popa
pop
fidivl
cmp
jge
adc
ja
movsb
pop
jns
push
pop
cmp
mov
cmpsl
es
push
out
cwtl
push
mov
jl
adc
cmpsb
adc
data16
xlat
xchg
sbb
sbb
dec
ja
js,pn
fcoms
jg
xor
lahf
mov
mov
shll
ss
jg
sbb
jnp
int
rclb
dec
les
cmp
imul
fs
mov
hlt
push
insb
test
dec
fbld
ret
rcrl
push
ds
or
pushf
pusha
ds
scas
sub
cs
push
fistpll
inc
or
xchg
xor
sbb
std
scas
pop
pop
fsts
test
test
test
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
