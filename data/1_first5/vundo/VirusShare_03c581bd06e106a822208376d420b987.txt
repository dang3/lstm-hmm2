pop
add
add
or
add
adc
push
add
ds
add
push
add
add
add
add
add
add
add
or
xor
and
xor
push
add
add
add
add
add
add
loopne
sub
inc
add
loopne
loopne
and
xchg
add
loopne
iret
or
add
push
xor
pop
or
add
or
aas
or
add
or
add
push
adc
addl
add
add
add
or
add
add
or
add
add
add
inc
add
lock
pop
mov
add
add
pusha
add
add
add
or
add
mov
add
or
add
or
add
add
add
or
or
or
add
wrmsr
add
add
pusha
add
or
add
add
add
and
call
or
add
loopne
and
nop
add
mov
pop
or
add
or
add
push
nop
add
or
add
or
add
jo
add
add
in
xor
testl
add
or
lea
inc
add
push
addb
add
mov
or
add
add
rolb
add
add
add
jbe
add
dec
addl
jbe
add
dec
jecxz
add
add
dec
inc
add
and
jo
sbb
pusha
add
rolb
pop
adc
sbb
add
loopne
stc
add
add
add
add
add
mov
pusha
add
add
pusha
add
add
add
add
add
or
add
nop
add
or
add
push
push
add
add
add
push
and
sub
or
add
add
or
add
add
add
rolb
xor
xor
out
rolb
add
add
or
add
or
add
push
add
or
add
lock
and
clc
add
add
add
and
ret
add
mov
movb
mov
movb
movl
mov
mov
movl
call
push
popl
movl
cmp
jne
movb
ret
movb
push
push
popl
push
xorw
addb
mov
andb
movb
pusha
subl
movw
call
push
popl
subl
mov
push
popl
add
push
xorl
xorl
xorl
sbbw
push
popl
addl
movw
push
popl
push
sub
xorl
call
push
popl
sbbl
cmpl
jne
movw
call
push
popl
xorb
ret
subl
jmp
addl
push
popl
xor
push
popl
addl
mov
andl
xorb
shl
xor
mov
orb
push
popl
shl
push
popl
mov
push
popl
cmp
jne
push
popl
addb
mov
movb
push
popl
sub
push
popl
call
xorl
popa
movw
subl
pusha
xorw
movl
call
push
popl
push
popl
mov
andl
push
popl
push
orb
xorl
orl
push
popl
addl
push
popl
sub
push
sbbw
call
push
popl
push
and
push
popl
xorl
orl
addl
push
popl
pop
push
popl
push
popl
cmp
jne
push
popl
ret
andb
sub
popa
push
popl
call
movb
add
push
push
popl
xorl
xorl
push
popl
addl
addb
mov
push
push
popl
call
or
push
push
xor
inc
mov
shl
mov
xor
xchg
mov
mov
push
popl
shl
push
popl
push
orw
sub
xor
subw
push
push
popl
orw
call
sbbb
andl
push
push
popl
push
popl
mov
addl
push
push
popl
jmp
push
popl
pop
addb
mov
xorw
push
push
popl
push
addw
push
push
popl
mov
sbbl
mov
push
popl
orb
rep
xorw
andw
pop
push
popl
pop
push
push
rol
ror
shr
mov
xor
pop
push
shl
rol
not
not
mov
sub
xchg
movb
subw
xor
orw
movb
jmp
push
popl
mov
sub
subw
mov
sbbb
sbbw
sub
andl
xorl
sub
subl
mov
push
popl
sub
sbbl
or
jne
push
popl
add
sbbb
push
popl
jmp
mov
mov
and
shr
addw
push
popl
shl
push
popl
mov
sub
push
popl
add
push
popl
and
jmp
orb
sub
sub
orl
push
popl
mov
movl
movw
add
movw
push
popl
cmp
jne
push
popl
mov
push
popl
push
popl
add
push
popl
mov
push
popl
add
push
popl
cmp
jne
addw
ret
push
popl
push
popl
push
push
popl
xor
orl
pushl
movb
sub
pop
and
subw
lea
push
popl
or
addw
xorl
mov
subl
orl
mov
xorb
andl
lods
and
mov
mov
push
popl
movw
pop
mov
sbbw
ret
xorb
push
push
popl
push
popl
mov
xor
andw
add
addw
push
orb
push
popl
push
push
popl
xor
push
xorw
push
push
popl
push
xorb
movl
mov
push
popl
mov
subw
add
push
popl
pushl
subw
addb
mov
or
add
xor
orw
add
addb
push
popl
mov
or
add
push
popl
push
popl
xor
push
popl
xor
lea
push
popl
push
popl
mov
push
popl
subl
add
xorb
and
mov
and
xor
sbbl
push
popl
rol
xorb
xor
sbbb
inc
addw
orb
cmpb
jne
push
popl
orl
cmp
je
movw
sbbl
inc
push
popl
cmp
jb
subw
movw
mov
push
popl
push
popl
add
addb
push
popl
movzwl
xor
xorw
mov
movb
push
popl
add
push
popl
mov
orb
add
push
popl
pop
push
popl
xorb
cmp
jbe
push
popl
sub
cmp
jae
sbbb
mov
pushl
movb
and
pushl
mov
push
or
xorl
push
popl
addw
addl
movb
pushl
push
popl
andb
call
push
popl
call
push
popl
sbbw
pop
movb
pop
subb
push
popl
pop
mov
pop
addb
pop
and
push
popl
leave
orl
ret
sbbl
call
sbb
xchg
pop
scas
ja
sub
mov
cmp
mov
mov
xchg
dec
dec
xchg
insl
jecxz
lret
mov
push
ret
imul
inc
cwtl
and
fucomip
in
push
outsb
mov
repnz
vmread
scas
test
mov
cmp
push
orl
mov
gs
leave
lahf
aam
xchg
mov
lods
movb
push
push
add
call
xchg
dec
fdivp
test
mov
leave
lods
scas
cltd
in
andl
pop
iret
fimull
xorl
fisttpll
sti
add
sbb
jnp
incl
leave
daa
das
xchg
jge
lret
push
lods
push
leave
jecxz
lahf
je
dec
fbstp
mov
adc
mov
jb
outsl
jae
push
clc
mov
gs
test
pushf
sbb
inc
or
into
insl
push
outsl
mov
or
jo
std
lcall
xchg
and
cli
fld
pop
push
inc
sub
jl
pop
aam
jns
mov
dec
add
add
xorl
iret
push
mov
jl
dec
mov
inc
lea
sub
in
xlat
mov
cmp
sub
into
push
inc
stc
pop
es
mov
aad
mov
add
sbb
mov
leave
in
push
testb
xchg
and
das
adcl
fildl
loope
adc
cmpsl
mov
enter
shlb
ficomps
in
xorb
in
push
icebp
mov
ljmp
loope
cwtl
cmp
inc
imulb
push
cmp
call
imul
xor
inc
cmp
pop
mov
sub
test
ficompl
add
iret
stos
adc
cmp
fsubr
cmp
jg
xor
pop
push
mov
push
inc
jg
pop
fbld
push
js
add
push
out
in
pop
mov
lahf
pop
push
es
cltd
ja
adc
dec
lock
test
or
and
xor
pop
mov
xor
cmp
aaa
jmp
mov
lret
xchg
xor
jmp
imul
or
ror
addr16
in
jno
add
lods
dec
jo
push
subl
push
mov
pop
add
lret
cmp
mov
mov
ficompl
xchg
mov
insl
cmp
cmp
in
mov
leave
xor
inc
outsb
xchg
sub
jo
rorl
fnstcw
std
cmc
imulb
sbb
mov
insl
xor
outsl
mov
add
je
push
das
xchg
stc
jg
push
push
mov
jae
arpl
outsl
outsl
call
imul
and
mov
push
jno
add
pushf
or
dec
std
xlat
pop
push
pop
cmp
push
sbb
movsb
in
xorl
mov
or
out
or
dec
pop
out
adc
mov
add
mov
adcb
sbb
add
xor
stc
mov
add
cmp
pop
xchg
pop
scas
pop
cmp
test
pushf
dec
daa
loope
ja
js
push
rcr
mov
cs
add
xor
iret
out
mov
aam
xchg
xor
sahf
fsubr
inc
insl
int
popa
enter
addl
hlt
and
into
mov
lods
fcoms
rcr
push
ljmp
and
or
in
das
dec
xorl
and
sub
lods
inc
cmpsb
es
cmc
loope
dec
sti
cwtl
inc
cmp
pop
pop
inc
or
mov
in
xlat
sbb
push
es
les
loope
mov
cmp
pop
sub
push
and
cmp
xor
jmp
imul
daa
outsb
in
outsb
xchg
mov
sub
leave
push
cmp
xor
mov
and
cmp
add
pushf
aas
loope
fucom
and
xor
or
inc
lret
icebp
jp
xchg
push
out
mov
fs
mov
sub
lods
loop
push
mov
xchg
cld
sbb
push
push
dec
mov
jbe
add
jae
inc
scas
std
jge
pop
push
lds
inc
mov
lcall
test
add
fistps
mov
push
mov
and
rorb
jns
and
lret
xorb
mov
lds
mov
jae,pn
xchg
and
nop
xor
sbb
hlt
inc
add
jmp
add
and
mov
push
imul
push
jecxz
fs
cmc
test
push
sub
push
mov
push
sbb
mov
mov
dec
mov
inc
imul
pushf
in
lods
push
and
mov
into
outsb
mov
cmp
dec
fbld
add
dec
gs
std
enter
cmp
std
cmp
add
es
sbb
add
js
jp
in
cmpsb
mov
andl
mov
daa
cmpl
ljmp
mov
mov
outsb
and
rcll
cmp
push
add
dec
jb
outsl
into
repnz
mov
mov
insl
imul
cmp
fildl
jmp
mov
outsl
adc
xchg
sbb
xchg
fisttpll
jno
jns
bound
aas
cmp
mov
ret
and
adc
es
pop
pop
cmp
out
aad
stc
cmp
mov
and
sahf
and
rol
push
inc
mov
outsl
adcb
bnd
incb
xchg
mov
aad
loopne
jp
loop
stc
ret
testb
push
mov
inc
in
xchg
sbb
add
xlat
imul
cmp
lods
dec
mov
cmp
mov
cmpsl
pop
outsb
stc
push
mov
mov
and
in
lea
dec
cmp
mov
mov
dec
lret
inc
imul
daa
arpl
arpl
cmp
and
cmp
fildl
xchg
andb
mov
jne
fwait
ret
mov
jae
std
enter
jecxz
cmp
daa
outsl
mov
mov
andl
dec
xor
pop
enter
ljmp
sub
outsb
cmp
repnz
adc
iret
mov
cmc
addr16
add
xor
xchg
and
std
enter
jmp
enter
or
inc
dec
and
out
sub
iret
repnz
mov
sti
jmp
std
enter
inc
mov
sub
adc
jb
addr16
ret
cmpsl
or
cmpsb
push
xchg
dec
mov
bound
dec
leave
mov
je
in
adc
xorl
cltd
jbe
adc
dec
xchg
jle
leave
mov
and
fisubrs
subl
psubb
xchg
cmp
fwait
call
cs
mov
outsb
out
sbb
xor
mov
xchg
mov
test
daa
fisttps
xchg
jg
in
push
mov
or
aam
xchg
mov
cmpsl
add
sub
pop
inc
xchg
jl
inc
jo
lcall
mov
mov
mov
sbb
sub
push
cmp
nop
in
cmp
lods
jmp
xlat
lds
in
cmpsb
jo
xchg
jno
dec
mov
jmp
cmp
shl
enter
scas
enter
das
sub
sahf
inc
jae
std
int
inc
mov
idivb
pusha
fsubl
inc
addr16
cld
inc
lcall
mov
insl
jae
mov
sbb
fmull
jo
sahf
jp
loope
xchg
xchg
cmc
mov
sbb
imul
xor
ds
xor
pop
iret
cmp
imul
rcrl
data16
pop
xchg
or
push
das
pop
sbb
and
mov
mov
xchg
xor
mov
enter
mov
xchg
pop
scas
lret
aas
fisubrs
popf
or
cs
mov
pop
xchg
data16
and
push
xchg
shl
cld
ret
popl
jecxz
jecxz
inc
testb
pop
dec
lahf
ljmp
push
cmp
push
jle
scas
jo
lock
jb
adc
rcrb
xchg
push
cs
dec
xchg
dec
fiadds
xchg
hlt
ret
lock
cmp
sub
fcomps
sahf
stc
cmpsl
xor
sti
mov
in
lcall
adc
ljmp
add
data16
cmp
testb
cmp
xor
and
mov
in
addr16
mov
arpl
std
ret
mov
popf
cmp
sbb
xor
in
aas
imul
fists
dec
jg
arpl
cmp
enter
push
push
push
pop
dec
das
mov
add
ss
add
pop
sbb
xor
inc
arpl
sub
xchg
adc
daa
xchg
dec
sbb
lcall
scas
cld
xchg
push
inc
dec
enter
jb
cmpsl
lea
xor
push
sti
pop
es
mov
mov
out
lea
mov
int3
push
jb
mov
ja
arpl
cmp
inc
mov
dec
fbstp
aam
outsl
fs
jge
lock
mov
sbb
scas
call
or
and
and
std
enter
adc
shll
cmpsb
and
cmp
or
dec
lds
dec
xorl
adc
jmp
cmp
jns
leave
mov
push
add
push
or
cwtl
leave
nop
iret
dec
or
outsl
and
xchg
leave
dec
sub
pop
incb
lds
leave
pop
dec
mov
push
fists
mov
cli
push
cmp
cmpsb
mov
lods
addr16
sarb
test
mov
pcmpeqd
jae
jle
push
push
stos
push
push
std
enter
dec
les
add
sub
call
sbb
adc
rorb
pusha
dec
dec
xor
pop
enter
leave
imul
addb
push
and
fstl
mov
mov
mov
aad
cli
pushf
sub
dec
xor
pop
hlt
sub
push
jns
jge
fnstenv
lods
mov
ret
out
dec
mov
enter
cmp
and
outsb
stc
mov
lods
fsubrs
shl
sub
cmpsl
jae
daa
add
mov
dec
xchg
push
and
xor
cmp
std
cmp
lcall
adc
std
stos
mov
sub
and
and
xchg
mov
xor
das
mov
mov
add
sub
out
mov
nop
pop
cmp
push
dec
sub
jl
cmp
imul
push
add
pop
or
imul
add
add
pushf
adc
or
aaa
fisttps
mov
scas
cli
xor
scas
aam
xchg
shll
incb
or
inc
push
lcall
inc
jns
mov
fmull
jno
xchg
cmp
dec
outsl
fiadds
mov
xchg
mov
sub
cmp
lds
inc
mov
idivb
xor
int3
or
mov
and
xchg
push
leave
insl
into
dec
and
add
mov
daa
out
lods
pop
sahf
or
xor
inc
and
add
fwait
inc
cmp
gs
xchg
add
popf
ja
mov
imul
jmp
inc
xchg
and
mov
cmp
dec
fistpll
shll
lret
mov
mov
xor
lods
roll
insb
testl
lods
fmuls
out
sar
cmc
scas
xor
cmp
out
mov
push
push
cmp
ja
lods
data16
add
xor
mov
hlt
jmp
loop
mov
shl
push
sbb
std
les
movsl
adc
push
in
fucomi
inc
push
repnz
push
insb
mov
dec
icebp
push
es
xchg
cmp
push
cmpsl
jecxz
scas
popa
lret
jmp
or
cmp
sahf
add
dec
jmp
fisttps
in
jno
and
jno
mov
pop
int3
push
adcl
fidivrs
pop
mov
shl
enter
popa
aam
xchg
sti
andb
mov
mov
mov
outsb
fidivl
scas
enter
inc
mov
ss
out
daa
scas
push
in
add
jno
inc
js
sub
cltd
mov
mov
nop
sub
adc
dec
jne
xchg
xchg
dec
scas
test
loop
fnsave
insb
dec
std
push
mov
mov
push
and
jo
cli
xor
mov
mov
out
jmp
loopne
gs
fwait
xor
cmpsb
stc
dec
add
ja
or
mov
inc
nop
and
mov
cltd
shrb
scas
orb
fld1
hlt
fidivs
popa
jns
scas
mov
fwait
and
cwtl
iret
cmp
std
xchg
mov
inc
pushf
jne
dec
fbstp
dec
jne
push
adc
in
aaa
stc
jge
scas
push
push
aad
clc
cmp
std
cmp
sbb
cmp
xor
adc
leave
mov
mov
or
aam
sbb
call
je
jge
les
xor
fs
mov
shlb
les
xchg
sbb
sbb
dec
cmpb
fisttps
mov
xor
adc
leave
xchg
outsb
xchg
push
lret
add
addl
hlt
and
into
xchg
imull
dec
mov
pop
cmp
push
and
cwtl
imul
push
dec
jle
adc
pushf
aaa
add
xorl
iret
push
push
rorb
mov
cmp
in
sbb
sub
add
std
enter
mov
dec
shll
enter
dec
mov
aas
in
stc
jle
stos
scas
cltd
neg
jge
xorl
sub
mov
sub
inc
cmp
loope
push
push
sub
enter
pop
insb
dec
std
enter
pop
jmp
rcrb
loope
scas
xor
adc
es
mov
push
mov
outsl
mov
inc
insb
inc
cmc
stos
dec
leave
jno
ljmp
jno
and
or
stos
or
cmp
fsubs
and
cltd
dec
and
sti
cmp
jg
insl
sbb
dec
insb
push
and
fdivl
jae
outsl
fldcw
adc
sub
inc
arpl
scas
and
adcb
mov
in
push
cmp
mov
outsb
mov
jne
cmp
mov
cltd
push
sbb
test
jmp
and
add
add
cmp
daa
rorl
das
ss
mov
dec
jb
ret
jae
push
jecxz
add
insb
fwait
or
rcl
enter
arpl
ret
mov
mov
das
stos
xchg
insb
jge
sti
test
and
outsl
sbb
xchg
mov
leave
jge
mov
ret
loopne
ret
add
aaa
and
enter
mov
or
and
mov
sub
ja
push
sub
in
loopne
outsl
lds
mov
xor
fdivl
add
pushf
mov
or
inc
jg
aad
mov
jecxz
out
adc
mov
ss
aas
mov
movsb
imul
push
pop
std
enter
aam
and
mov
or
xchg
pop
push
lcall
pop
jge
dec
dec
jecxz
add
adc
dec
mov
push
fists
dec
imul
mov
test
fldt
sub
add
xchg
jecxz
hlt
sbb
fadd
scas
and
mov
jp
cmp
ret
out
push
ret
cmp
sti
pop
inc
lret
cmp
mov
xchg
shll
lods
addr16
daa
add
mov
jne
cmp
jecxz
cmp
jno
inc
xchg
dec
dec
xchg
int
mov
pop
leave
lods
pop
and
sub
cwtl
ret
aas
das
mov
sbb
or
xor
pop
jmp
lods
mov
in
dec
pop
mov
dec
std
lds
sub
mov
iret
push
jle
subl
dec
sbb
mov
aam
adc
sub
mov
mov
sti
out
adc
mov
mov
push
sbb
add
push
pop
mov
repnz
adc
cs
stc
int
pop
les
divb
mov
stos
or
sbb
pop
mov
push
fucom
cmp
mov
dec
fbstp
int
arpl
testl
cltd
cmpsb
push
xchg
loop
xor
dec
mov
dec
cmp
leave
mov
je
shlb
and
jp
fisubl
jne
xchg
stc
cli
nop
pop
loope
js
lcall
jmp
adc
mov
mov
pop
aam
xor
popa
jno
inc
lahf
push
mov
fmul
inc
outsl
sbb
jnp
cmp
mov
fldt
xor
inc
mov
sbb
mov
pop
lret
sti
inc
push
insb
idiv
lcall
cli
rcr
xor
xchg
jae
and
mov
xchg
pop
jo
subl
imul
and
push
jae
and
cmp
in
push
leave
pushf
mov
lcall
test
loopne
dec
or
ss
iret
xor
int3
test
xchg
nop
mov
in
push
and
nop
dec
fistpll
pop
add
mov
cwtl
cltd
lock
pop
push
push
shrb
cs
cltd
sbb
imul
outsl
leave
outsb
and
shl
cmp
out
mov
cwtl
es
popf
outsb
jge
adcl
xor
ss
cmp
cmc
push
dec
jb
dec
cmp
add
lods
loop
mov
add
mov
outsl
mov
add
mov
outsl
cmpsb
xchg
inc
movsb
stos
adc
xchg
xchg
sbb
enter
lret
push
leave
lods
addr16
outsl
mov
add
scas
push
lret
jge
xchg
push
insl
xchg
or
cmp
enter
imul
lock
or
rol
xor
loop
bound
dec
and
xor
ds
dec
dec
jl
dec
lods
sbb
mov
and
jo
push
push
out
adc
addr16
jae
and
dec
pop
cmpb
stos
mov
add
lods
fsubs
shl
inc
je
sarb
jae
and
ja
cmp
jecxz
scas
sub
and
mov
cmpl
ja
mov
inc
mov
adc
push
fsubrp
jbe
outsb
cltd
fidivs
and
pop
mov
lcall
loope
pop
inc
ret
rol
int3
and
jg
mov
add
xchg
xor
loope
ja
aas
cmpsl
xchg
in
mov
es
inc
xchg
gs
lods
push
lret
cmp
sub
mov
push
fcomip
cwtl
pop
mov
and
js
aad
cmp
and
ja
mov
mov
mov
pop
push
adc
fisttpll
push
jo
xchg
jmp
scas
jl
es
or
xchg
adc
inc
jae
dec
push
pop
out
pop
ret
std
push
xchg
push
addr16
push
out
outsl
sar
xchg
leavew
icebp
enter
push
movb
ss
rol
int3
push
cs
call
mov
cmp
fnsave
arpl
mov
shrb
sbb
aaa
pushf
xor
add
xchg
push
sub
addr16
jo
pop
sub
scas
push
fcoml
mov
mov
push
hlt
xor
xchg
cs
rorl
enter
ss
sub
enter
stc
cmpsl
add
mov
lods
fsubs
mov
les
into
xor
pop
daa
aam
insl
nop
sub
inc
cltd
push
and
sti
popa
cmpsl
jle
jb
lods
int3
insb
andl
loop
jge
imul
inc
jnp
or
stc
mov
cwtl
xor
imul
mov
outsb
dec
std
pop
aad
clc
cmp
std
cmp
mov
mov
insl
xor
outsb
inc
mov
sub
xchg
push
imul
faddp
dec
inc
data16
lods
js
jbe
negl
push
push
push
mov
aam
iret
mov
cmp
das
add
out
jge
ds
cmpsl
push
mov
loopne
cmp
orl
les
in
fsubl
inc
push
dec
and
xchg
mov
add
xorl
mov
jge
popa
std
dec
orl
or
sarb
test
std
sub
push
aad
movsl
and
cmp
adc
pop
outsb
lods
pop
push
leave
pushf
push
es
jne
dec
and
sti
mov
jbe
insb
imul
fbstp
ds
gs
mov
xchg
dec
int
adc
insl
hlt
pop
fisttpl
inc
fwait
push
pop
mov
sub
stos
std
xchg
je
daa
and
hlt
or
pop
jno
mov
or
sub
in
sbb
mov
inc
test
sbb
mov
mov
adc
inc
iret
jle
xor
jnp
insb
pop
and
fstpl
mov
adc
mov
mov
cmp
mov
pop
movsb
add
cmp
aas
jnp
add
shrl
pop
fiaddl
into
mov
mov
loop
mov
sarl
xchg
jae
and
imul
and
pop
xor
loope
fcmovnu
leave
lahf
aam
xchg
push
add
cmp
mov
and
std
enter
dec
cmpb
and
xchg
cmp
pusha
icebp
dec
inc
mov
inc
out
and
push
cmp
sbb
rorl
ss
cmp
in
loope
mov
rcl
push
cwtl
cmp
push
cmp
cmp
test
add
sbb
inc
jbe
cmp
push
stc
mov
xchg
mov
lcall
dec
mov
mov
lahf
sbb
rcrl
mov
xchg
sub
orb
mov
or
or
jb
push
pop
cmpsl
xchg
xchg
push
adc
push
mov
in
mov
cltd
imul
lods
out
jno
insl
jnp
and
dec
push
std
enter
and
sbb
test
lds
push
pop
sbb
cmp
fwait
xor
cmp
das
mov
pop
leave
loope
adc
push
lret
inc
xchg
and
inc
rclb
stos
std
cmp
mov
test
aaa
scas
or
jnp
std
push
add
out
lret
xorl
mov
hlt
adc
lahf
and
roll
pop
push
js
mov
add
insb
dec
std
enter
bound
xor
jge
mov
pop
mov
loope
jbe
scas
arpl
sbb
imul
pop
pop
xchg
mov
adcl
sbb
addr16
push
in
stc
lods
addr16
in
dec
lgs
incl
dec
std
lret
movsl
les
fwait
pop
fcmovb
xor
gs
mov
call
aas
xchg
cmp
orl
clc
pushf
push
xchg
es
sbb
xchg
or
popa
mov
mov
imul
pushf
sbb
std
xchg
or
sti
fs
std
rorb
ja
aam
popa
lret
sbb
jne
mov
xor
pop
sbb
xchg
stos
in
xorl
and
xchg
bound
pop
jbe
and
adcl
enter
scas
push
cmp
pushf
inc
dec
scas
imul
cld
jge
push
sub
jg
fwait
lcall
mov
stos
jo
mov
fcomip
xchg
mov
rclb
loop
pop
dec
dec
push
mov
and
cwtl
xor
insb
mov
pop
sbb
or
mov
pop
mov
ja
and
push
flds
movsb
mov
and
push
cmp
pushf
das
xchg
push
push
adc
or
lods
out
adc
mov
cmpsl
xor
mov
xchg
mov
mov
cmp
cmc
call
xchg
pop
sbb
lock
or
adc
call
mov
repz
cs
adc
loopne
lcall
pop
insl
inc
lret
fucomi
inc
gs
fwait
jg
pop
and
negb
lds
xchg
pop
scas
aaa
cmp
pop
lahf
adc
lds
inc
mov
adc
jb
mov
sbb
sub
pop
inc
callw
ljmp
sub
push
cmp
mov
push
inc
adc
mov
int
push
mov
fsubl
out
xorl
add
je
jae
jg
mov
adc
jmp
scas
loop
call
stos
test
enter
dec
or
test
in
pop
addr16
cltd
insb
jne
and
and
not
and
hlt
cmc
push
push
aad
pop
jno
sbb
jnp
xchg
push
stos
push
sbb
pushf
inc
out
xorl
aam
fwait
sbb
adc
mov
push
push
pop
leave
sbb
rolb
xchg
clc
in
rcll
mov
sti
dec
xchg
shr
mov
shlb
cmp
lock
mov
xchg
loope
jns
fs
mov
lret
cmp
idivb
dec
stc
dec
es
and
pop
inc
xchg
dec
inc
pushf
xor
dec
es
mov
sub
cmpsl
addr16
push
insl
jg
mulb
xor
int
add
cmp
je
cmp
push
sub
shll
lds
filds
cld
push
pop
test
outsb
mov
inc
jnp
jb
incl
dec
std
scas
lcall
mov
mov
cmp
push
push
stc
mov
cltd
andb
cmp
jle
cmpsb
adc
es
insb
inc
mov
addb
addr16
cmp
push
aam
or
pop
fildl
fiaddl
and
aad
xorb
in
push
cmp
mov
pop
jbe
scas
pop
dec
inc
rcrb
inc
add
ret
insb
mov
adc
movsb
aad
and
negb
orb
xor
pop
add
sub
xlat
mov
arpl
jb
lds
addr16
ljmp
mov
sub
popf
inc
imul
push
lret
fcomip
pushf
out
xor
sbb
ss
int
cmp
lret
frstor
out
mov
outsb
pop
push
loope
xor
pop
mov
push
aad
lcall
xchg
in
adc
sbb
lods
pop
stc
sar
mov
stos
push
aaa
and
mov
cld
cmp
pop
mov
outsl
inc
repnz
pop
je
and
mov
push
push
pop
push
xlat
dec
lock
enter
hlt
add
imull
cld
lea
push
and
sbb
nop
xchg
inc
jae
outsl
fnstcw
push
mov
mov
out
stc
jge
push
jo
adc
pushf
imul
outsb
jbe
mov
fcompl
xchg
inc
and
and
push
das
inc
call
jbe
xchg
andl
pop
cmp
mov
mov
ret
add
add
inc
out
xorl
std
iret
add
cmp
inc
push
dec
lcall
mov
jae
fdivs
cmovle
mov
cmp
push
dec
in
dec
add
cmp
faddl
jbe
and
jle
xor
push
lods
in
mov
cmpsb
push
xchg
popf
call
cmpsb
scas
xor
leave
mov
je
hlt
xchg
stc
sbb
xchg
pop
scas
cmp
mov
xorb
inc
in
scas
sub
adc
dec
dec
cmp
stc
stos
sbb
mov
xor
fs
mov
fildl
in
repz
dec
lret
movsb
xchg
ficoms
aaa
push
cmp
dec
sti
push
es
xchg
cmp
push
insl
mov
addb
mov
sbb
outsl
sarl
dec
dec
ja
popf
lea
jecxz
lods
pop
addl
notl
xchg
mov
mov
ficompl
pop
push
dec
push
push
cmp
les
xchg
xor
jne
mov
stos
xor
sbb
xlat
loop
mov
sbb
sti
adc
push
imul
push
cmp
orb
dec
mov
xchg
add
loopne
call
insl
sub
cmpsl
inc
mov
fidivs
stos
movsl
cmp
out
data16
jo
idivl
daa
ja
negl
mov
test
xchg
cmp
dec
outsl
fcmovnbe
lock
test
jo
mov
test
mov
fsts
or
push
xor
mov
xchg
jbe
xlat
lea
popf
sbb
inc
sub
inc
nop
dec
fbstp
aad
cltd
push
decl
add
mov
xor
shl
enter
scas
lahf
cmp
test
sbb
fnsave
lret
fcomi
call
lods
insl
enter
daa
nop
dec
fistpll
cmc
cmp
cltd
cmpsb
jp
ret
bswap
insl
arpl
adc
into
cmp
scas
addr16
loopne
je
mov
cli
lahf
loope
cli
push
cmp
xchg
into
out
ss
cmp
pop
jno
cmc
sbb
dec
fndisi(8087
inc
push
cltd
dec
lret
fadds
xlat
sbbb
inc
jg
cmp
out
insb
andl
loop
xchg
xor
sub
cmp
sbb
addr16
ret
roll
or
in
or
das
push
std
enter
push
imul
pop
push
insb
testl
sar
jecxz
xchg
cmpl
jae
and
rorl
ss
in
sbb
sub
xor
loope
cwtl
sbb
xlat
scas
mov
mov
addb
addr16
mov
stc
xchg
aam
or
imul
pop
test
pop
mov
mov
mov
push
adc
push
pop
cmp
fdivs
negl
lea
cmp
mov
ror
xchg
ds
mov
mov
sar
popf
imulb
std
enter
and
inc
mov
orl
adcb
enter
nop
rorl
ss
movb
loope
pushf
cli
jp
pop
lret
or
dec
xchg
xor
push
sti
jns
pop
and
mov
mov
in
add
stos
out
xchg
outsl
jle
sbb
cli
ss
jbe
js
xchg
or
add
inc
fwait
and
hlt
movsl
imul
inc
addr16
cmp
js
xchg
loop
xchg
ret
lods
push
cwtl
mov
sub
or
in
loop
cwtl
sbb
xlat
xor
leave
pop
dec
or
adc
call
test
push
xor
cs
call
inc
iret
xor
push
adcl
sub
ss
adc
xorl
cmp
iret
andb
jno
ret
sahf
sbb
dec
data16
and
mov
movsb
popa
fadds
enter
shlb
pop
sub
xchg
in
pop
push
pop
sub
xor
add
rclb
aam
adc
mov
shr
fwait
and
push
push
add
mov
cmp
es
test
jno
cmp
lods
stc
sbb
imul
xorl
mov
subl
sub
mov
rorl
mov
inc
xchg
pushf
or
stc
mov
xchg
sbb
dec
movsb
xor
fidivrl
sti
add
into
mov
lods
fcoms
inc
shr
add
sbb
cmp
or
push
mov
cmp
addr16
dec
add
mov
jno
outsl
imul
repnz
into
into
cwtl
imull
lret
mov
mov
outsl
jae
and
cltd
mov
imul
add
shrl
loopne
xorb
in
dec
cmpsb
add
push
sbb
test
adc
aam
les
adc
loop
scas
xchg
push
inc
mov
outsl
shlb
adc
sbb
stc
jbe
dec
sub
addr16
xor
gs
mov
pop
lahf
lds
loop
mov
cmp
pcmpeqw
push
jl
ss
mov
pushf
arpl
in
fimuls
loopne
ja
push
pop
inc
std
leave
or
ret
stc
mov
cwtl
xor
dec
addr16
cmp
cmp
ret
stc
mov
xchg
xor
mov
inc
mov
push
scas
int
insb
mov
cmp
push
mov
lar
mov
lret
out
inc
imul
fiaddl
push
mov
lock
xchg
adc
push
and
cmp
xchg
fiaddl
outsb
and
cmp
pop
jle
mov
scas
pop
dec
jo
mov
stos
test
jmp
repz
ja
sub
push
push
ret
pop
xchg
and
and
idiv
and
repnz
jge
add
dec
fistpll
pop
sbb
mov
out
push
sbb
cld
cmp
loopne
jmp
sbb
imul
data16
jmp
and
mov
cltd
in
jns
test
insl
out
adc
leavew
adc
push
mov
jbe
sub
fnstcw
xor
xor
xor
repnz
movsb
outsl
cmpsb
dec
sbb
out
or
retw
stc
mov
cwtl
xor
push
movsl
lahf
test
cmp
mov
mov
cld
cwtl
sbb
push
sarl
push
ret
cmp
mov
fwait
sbb
inc
pushf
scas
notl
leave
test
in
dec
lods
fsubrl
pop
incl
std
cmpsb
push
or
cmp
add
mov
or
inc
arpl
or
mov
pop
pop
fidivrl
dec
stos
out
jge
push
mov
andb
aad
aaa
push
enter
imul
pop
orb
mov
push
mov
lods
test
inc
push
ljmp
mov
cs
push
mov
fwait
das
dec
inc
pop
je
inc
scas
adc
cmc
dec
fistpll
xchg
dec
pop
repnz
inc
lret
addb
in
pop
cmp
shlb
std
and
add
imul
and
push
imul
cmp
jecxz
fsubrs
lcall
scas
notl
jns
call
xchg
mov
fsubl
scas
aam
xchg
xor
jle
movsb
cltd
cmpsl
dec
push
push
std
enter
sub
pop
mov
je
mov
call
loope
inc
mov
clc
push
out
outsb
and
jne
std
enter
imul
add
not
mov
syscall
mov
arpl
scas
notl
mov
push
mov
dec
rcrb
imul
push
pushf
and
stc
push
jb
and
or
into
pushf
sbb
push
clc
mov
imul
pop
mov
sti
push
je
clc
inc
aad
mov
imul
mov
popf
nop
aam
fldt
jmp
cld
stos
jns
cmp
sub
cmp
xchg
nop
push
fbstp
pop
cmp
test
sub
into
negb
inc
adc
out
mov
mov
insl
push
xor
sahf
dec
jae
dec
push
xchg
imul
cmp
mov
out
outsl
mov
jle
jmp
fwait
and
popf
int
xchg
inc
pop
pusha
mov
pop
and
inc
add
jecxz
mov
mov
loope
addr16
ja
jae
pop
sbb
jno
loope
cld
cmp
ret
cmp
aas
cmp
pop
mov
jae
dec
add
mov
rcrl
mov
daa
cmp
mov
xor
sti
shll
mov
pop
jmp
ret
mov
and
jno
cmpxchg
scas
imul
cmp
subl
outsl
dec
std
enter
xchg
push
push
adc
cli
cltd
cld
insb
cmp
push
int
xchg
cmp
and
std
enter
scas
and
mov
dec
pop
cmpl
jl,pt
xchg
push
push
push
ds
shlb
leave
push
cmp
dec
imul
push
mov
lret
add
sbb
mov
mov
cwtl
ds
mov
insl
clc
movb
and
rol
dec
ret
cmp
cwtl
or
dec
sub
pop
sbb
mov
and
ret
idivl
orb
dec
iret
loop
movhps
leave
dec
jae
andb
pop
or
mov
mov
sub
cmp
mov
sub
loopne
push
scas
ja
jae
addb
mov
xchg
push
gs
mov
pop
aaa
push
pop
push
or
adc
mov
cmp
sub
jno
push
push
rclb
sbb
fnstcw
loopne
aas
cmp
mov
test
in
mov
lods
mov
leave
mov
push
or
xchg
cmc
mov
cli
loopne
ja
outsl
sbb
fistl
in
and
gs
in
dec
push
jo
push
fbstp
and
fdivrs
dec
dec
jmp
movsl
subb
xchg
push
jle
xor
jno
in
rcl
pop
cld
pop
insl
iret
outsb
roll
push
bound
outsl
push
inc
stos
sub
arpl
dec
fidivs
mov
pop
mov
fldl
out
mov
lds
inc
icebp
xorl
pusha
lds
out
fprem
fwait
and
push
push
popf
dec
inc
mov
cmp
popa
cld
test
sbb
in
dec
rorl
inc
incl
dec
std
ss
cltd
pusha
fwait
adc
call
push
mov
or
xor
inc
push
push
aam
les
or
push
pop
dec
mov
adcb
mov
cmp
xchg
mov
daa
lcall
arpl
lds
add
xlat
inc
jle
mov
pop
jb
dec
repz
jno
data16
mov
and
adc
xchg
sub
dec
or
lds
loopne
orb
outsl
jae
push
clc
mov
mov
jno
ss
or
in
fisttpl
pushl
xchg
dec
std
stc
shrb
lds
scas
push
lcall
orb
pusha
ficoms
mov
aam
cmc
popa
nop
push
lret
std
mov
dec
fbstp
aad
hlt
cmp
mov
add
pop
pop
or
scas
ja
jae
addb
ret
lds
adc
adc
pop
jmp
ficomps
mov
jl
xchg
scas
cli
xchg
xor
jle
push
test
std
enter
in
outsl
cmp
daa
outsl
mov
sub
jae
dec
pop
js
and
cs
cltd
sub
xor
cmp
int3
call
cmp
jno
inc
inc
gs
hlt
pop
add
out
out
mov
sbb
or
lahf
add
cmp
outsl
imul
rol
xlat
xor
out
sub
cmp
fwait
sbb
testl
stos
filds
push
test
lea
jb
push
cmp
call
push
pop
stos
orb
mov
mov
rolb
dec
test
imul
outsl
jne
jae
or
test
mov
sti
stos
ljmp
insl
mov
push
sti
andb
and
adc
adc
push
pop
cs
stc
les
add
push
lcall
sbb
js
das
aaa
aaa
enter
push
mov
stc
cmp
add
stos
inc
inc
stos
cltd
mov
dec
test
pop
std
enter
cs
out
orb
pop
stc
bound
pop
adc
mov
daa
out
mov
cmp
std
sbb
push
jno
inc
test
jo
call
cmpsl
cld
cmp
add
mov
lahf
lret
add
or
cli
jno
add
dec
test
cwtl
jge
push
xchg
out
ss
cmp
xor
jecxz
mov
mov
xor
insl
loop
int
pop
xchg
pop
jnp
adc
xor
int3
lods
sub
scas
push
inc
int
sarl
mov
cmp
fcompl
xor
ret
mov
iret
pop
and
std
enter
pop
bnd
in
jne
jb
imul
pop
call
xchg
dec
dec
sbb
jp
or
ret
stc
mov
xchg
xor
scas
mov
test
cmp
dec
push
cmp
scas
cwtl
or
mov
cmp
cwtl
mov
mov
aad
rcrb
and
cmp
and
xchg
xchg
stc
pop
inc
fnstenv
adc
lock
mov
mov
cmp
in
dec
imul
and
fs
enter
call
cmp
mov
dec
call
sub
sub
in
fimuls
mov
dec
fs
or
jp
std
push
loop
lods
push
push
jle
mov
mov
xor
pop
call
lcall
mov
lcall
jno
add
pop
repnz
call
les
sbb
js
arpl
inc
add
lds
hlt
loope
lods
cmp
sbb
and
test
add
test
fs
sti
cltd
pushw
cmp
bound
lcall
mulb
mov
andl
push
push
std
enter
cmp
std
cmp
xor
dec
or
xchg
or
sbb
outsl
enter
mov
mov
dec
mov
jl
jae
cmp
mov
fdivs
inc
test
push
shlb
sbb
push
je
ss
repz
sbb
fimuls
sbb
push
enter
xchg
cmpsl
roll
push
mov
outsl
les
jae
pop
je
jo
jo
adc
mov
inc
xchg
cmp
orb
std
cld
movl
out
add
or
pusha
imul
inc
mov
sub
xchg
push
insb
xchg
mov
pop
jg
fdivr
xchg
sti
adc
insl
or
push
dec
sub
cmp
aaa
into
xor
jbe
mov
xor
fwait
aad
xor
cmp
out
pop
and
dec
inc
mov
cmp
xor
stos
fimuls
insl
mov
stos
cwtl
sbb
imul
lret
cwtl
push
push
cli
clc
lcall
es
cmp
cmp
pop
xchg
aad
cvtps2pd
mov
cmp
aas
sbb
mov
xor
in
pop
clc
pop
xchg
orb
ss
xchg
lods
mov
dec
test
mov
rcl
cmp
lods
add
in
or
mov
xor
fwait
add
dec
fsubl
push
add
push
cwtl
ss
or
cmp
pop
xchg
push
and
lret
scas
aam
sbb
pop
ja
and
adcl
sbb
leave
or
mov
cli
js
sub
xchg
ret
scas
sbb
imul
inc
stos
lds
cmp
mov
mov
insb
push
sti
arpl
add
insb
push
and
fdivrl
add
mov
or
addr16
int3
add
cmc
jo
hlt
cmpsl
or
sub
mov
pop
cltd
sbb
imul
xchg
or
cmp
inc
mov
cmp
sbb
pop
push
push
inc
inc
lods
or
stc
mov
cwtl
xor
iret
pushf
into
test
cmp
push
negb
mov
dec
xchg
les
imul
inc
pushf
and
mov
xor
cmp
push
pop
or
cmp
dec
std
push
ret
jmp
push
jp
repnz
and
sti
sub
movsl
add
and
cmp
xchg
sbb
fiaddl
aad
and
cmp
and
sbb
lods
pop
es
jae
cmp
movsb
mov
lods
addr16
nop
add
cltd
hlt
cmpsl
or
push
dec
add
arpl
enter
cmc
sbb
add
cmp
add
sbb
mov
in
pop
jne
mov
inc
call
inc
imul
jb
js
or
or
aas
dec
lock
push
push
xlat
inc
push
push
xor
imul
aad
insl
in
dec
pop
mov
std
mov
iret
jo
push
pusha
pop
mov
call
add
push
pop
mov
rcll
cmp
cmp
addr16
lock
imul
jb
imul
add
dec
mov
jecxz
leave
mov
je
in
andl
pushf
sbb
push
clc
mov
mov
dec
cmc
outsl
hlt
incb
std
jb
ja
ss
or
cmp
sarb
addb
stc
xchg
push
mov
enter
stc
ja
iret
lahf
imull
stos
popl
pop
daa
or
cmpsb
push
xchg
dec
mov
mov
leave
mov
je
mulb
cmp
mov
mov
dec
mov
lcall
push
nop
fistps
and
mov
mov
sbb
cld
scas
clc
xchg
out
pop
push
mov
stos
pop
cmpl
in
dec
rclb
incb
dec
std
repz
mov
sub
jle
inc
mov
cmp
mov
fistpll
shl
enter
push
add
dec
xchg
loop
push
orl
stos
out
sbb
je
mov
js
test
push
jnp
out
cld
mov
lret
inc
inc
fnstenv
fadd
inc
gs
es
pop
ljmp
std
dec
xchg
xor
cmp
adcb
inc
or
cmp
or
pop
sarl
lret
add
xor
dec
jp
push
enter
dec
imul
dec
mov
cmp
movsb
mov
lods
addr16
bound
adc
hlt
cmpsl
or
or
scas
mov
cmp
cltd
mov
imul
orl
fbstp
add
icebp
xchg
ret
pop
mov
or
ret
mov
cmp
add
mov
std
add
push
cmp
enter
repnz
lods
fsubrs
mov
dec
call
and
test
std
enter
cmp
push
dec
cmpl
xchg
and
sbb
in
xor
leave
ss
cwtl
push
jne
enter
inc
jp
sbb
xorl
sbb
push
add
jnp
mov
dec
mov
pop
lds
lcall
add
lcall
int3
inc
js
jne
cmpsl
mov
push
dec
lock
imul
into
cwtl
out
mov
enter
mov
arpl
or
shl
mov
sub
jo
outsl
jae
sbb
pop
daa
jb
in
cmp
inc
mov
jbe
jbe
scas
pop
stc
mov
jb
outsl
fadd
xchg
in
cs
fmull
test
addr16
in
push
leave
in
movsb
mov
inc
inc
sahf
and
dec
orl
dec
and
repz
data16
das
data16
bound
lods
lcall
and
in
out
mov
fs
and
sarb
jnp
and
imul
mov
push
std
xchg
jge
dec
shl
inc
sub
data16
push
add
cmp
daa
pop
push
subl
mov
and
repz
add
xor
scas
call
sub
fmulp
test
es
sbb
jge
leave
cmp
mov
fwait
and
js
stos
in
jno
in
xchg
mov
jno
cld
adc
inc
pop
enter
xchg
pushf
dec
jae
outsl
fimuls
fcmovnbe
mov
xchg
imul
inc
mov
pop
push
jo
and
xchg
mov
mov
data16
cmp
pop
xlat
cld
lds
push
pop
sub
mov
loop
flds
mov
cld
jo
push
std
enter
and
push
fnstenv
lret
movsl
or
xor
dec
jbe
stc
xchg
rcr
sbb
sbb
roll
jno
sbbb
add
ret
sbb
orb
scas
cld
test
mov
daa
add
pop
les
loopne
ja
cmpsb
or
sub
pushl
jne
mov
xchg
icebp
imul
jbe
sbb
and
ss
adc
push
fidivl
xcrypt-cbc
cmpsl
xchg
and
data16
mov
adc
jb
into
cmpsb
imull
push
test
cmc
cmp
cs
mov
jnp
ss
dec
push
jp
push
adc
fisttpll
or
mov
fwait
dec
mov
pusha
ljmp
mov
aaa
or
stos
bound
xor
les
jl
or
xchg
mov
xchg
scas
cmp
cmp
add
out
testb
outsb
cmp
mov
mov
int3
xor
jbe
scas
pop
and
add
arpl
jmp
mov
fdivrl
pop
xchg
inc
mov
cmp
inc
imul
sbb
and
test
mov
or
repz
lods
push
out
adc
mov
jle
mov
mov
enter
popa
fs
and
andb
mov
mov
inc
sti
cld
xchg
add
ja
mov
mov
fisubrl
sub
xor
xchg
xchg
js
and
lods
insb
cltd
imul
lea
jnp
and
mov
imulb
jno
std
enter
and
addr16
sti
outsb
cmp
mov
aaa
push
jecxz
mov
cmp
sar
or
dec
std
enter
dec
leave
cmp
cmp
cmp
push
jns
sbb
push
cwtl
outsb
push
push
xor
xor
pop
mov
add
insb
insb
mov
ret
cmpsb
outsb
loop
cmp
and
inc
fs
mov
enter
scas
cmpsl
lea
sbb
aaa
xor
xorl
xchg
sub
addr16
lret
add
ljmp
or
push
dec
jge
cmc
gs
mov
lods
jne
outsb
lds
hlt
ja
push
cmp
test
ss
lret
stc
in
and
mov
cmp
push
scas
jno
sub
add
stc
aas
xchg
pop
mov
mov
push
sbb
leave
xchg
xlat
cmc
pop
nop
sbb
out
push
and
dec
pmulhw
stos
and
hlt
in
mov
cld
out
adcb
lods
insl
mov
outsl
fidivrs
add
adc
inc
jae
dec
sbb
sub
cmp
xor
jo
cmp
je
push
add
leave
or
push
hlt
inc
js
sbb
lret
sti
es
dec
or
shl
enter
scas
inc
cmp
adc
push
dec
daa
loope
ja
inc
jne
pop
mov
testb
cwtl
mov
ja
inc
xchg
xchg
mov
and
push
pop
movsb
or
cmp
mov
pop
fbstp
cltd
xchg
imul
aas
push
dec
or
stc
mov
cwtl
std
cltd
mov
cmp
jmp
cmp
dec
sbb
mov
stc
mov
cwtl
add
xchg
rolb
cmp
mov
add
movsl
mov
lods
addr16
push
add
cld
cmpsl
push
jne
xor
sbb
imul
sub
inc
lods
je
push
das
ljmp
sbb
push
std
dec
inc
mov
cmp
jle
cmc
xchg
or
pop
std
enter
jb
lcall
push
pop
xor
or
orb
sub
mov
test
sbb
xchg
pop
scas
adc
fnsave
stc
push
xlat
mov
inc
cmp
mov
xchg
xchg
nop
sbb
fidivl
cltd
ljmp
popa
test
dec
fbstp
pop
mov
lock
hlt
sbb
cmp
mov
jo
mov
dec
addb
push
cmp
xorl
fwait
sbb
fwait
stos
xor
ds
push
mov
enter
les
adc
mov
mov
cmp
or
aaa
popf
rol
leave
outsb
mov
mov
orl
add
dec
add
dec
lret
dec
or
lods
xchg
out
push
add
push
scas
orb
into
mov
push
inc
mov
cmp
push
and
or
mov
jb
ss
mov
or
fmull
jne
cs
std
sbb
mov
mov
pop
xchg
push
clc
cmp
addr16
sub
rol
shrb
cmpb
dec
jecxz
fnstcw
add
xorl
xchg
in
loop
mov
mov
mov
in
mov
imul
pop
cmpsb
xchg
cld
sbb
cmp
inc
xchg
and
sub
xlat
adc
cld
inc
data16
out
push
push
xlat
add
out
and
cmp
and
add
stos
pop
sbb
add
mov
cmp
jmp
xor
adc
xchg
push
outsl
shll
ret
pop
std
xchg
inc
mov
mov
nop
dec
fbstp
pop
mov
add
add
sbb
sub
cmp
jp
cmp
jmp
mov
mov
out
xchg
aam
insb
cli
stos
mov
sbb
adc
imull
aaa
nop
push
pop
jo
es
fnstcw
notl
mov
inc
stos
mov
ljmp
add
shl
je
and
cmpsl
jae
daa
cmp
or
enter
nop
xchg
inc
jae
outsl
loopne
inc
sbb
jo
mov
in
int
xor
cmpsl
fwait
cmp
xchg
cmp
lods
inc
leave
loop
rcrl
fisttps
sti
or
push
push
imul
inc
data16
inc
sub
sbb
out
das
cmp
popa
cmpsl
dec
mov
in
fiadds
mov
icebp
fldl
push
sbb
mov
and
inc
mov
cli
in
add
cmpsb
repz
ret
ficompl
fadds
lret
cmp
and
pop
xor
data16
lods
pop
lret
jle
out
sti
dec
push
dec
dec
data16
mov
ja
lahf
mov
xor
mov
lcall
inc
imulb
fnstenv
dec
jns
mov
ret
out
lock
or
jp
mov
xchg
pop
nop
icebp
test
cwtl
xor
pop
mov
imul
mov
mov
and
or
xlat
shr
adc
icebp
aaa
inc
imul
adcl
aas
orb
addl
fcomp
fwait
sbb
mov
adc
jecxz
in
dec
mov
dec
std
push
push
dec
ja
jmp
adc
outsl
mov
mov
in
lods
sub
xlat
add
adcl
scas
cmpsl
insl
nop
sub
cltd
andb
xor
jle
cli
or
es
adc
adc
std
mov
mov
dec
lds
add
xchg
jmp
call
jecxz
jmp
or
sub
jle
xchg
sub
push
push
std
enter
and
ret
mov
inc
fiaddl
loope
xor
loope
sbb
jns
fldenv
jae
std
enter
jno
cmp
and
pop
lds
adc
aas
push
push
popa
repnz
int3
roll
iret
addr16
mov
mov
test
pop
ds
cmpsl
push
push
fld
imul
and
sti
cmp
jle
movd
outsl
insb
jnp
and
data16
flds
aad
andl
cmp
and
pop
outsb
lods
pop
sti
jle
cwtl
xor
mov
push
cmp
xchg
mov
push
pop
pop
mov
mov
push
out
cld
xchg
xchg
push
jg
lret
fistps
fldl
std
enter
or
outsl
mov
add
inc
mov
add
cltd
mov
orb
mov
xchg
in
dec
bound
ljmp
lahf
pop
scas
xchg
cmp
daa
outsl
mov
xor
scas
xchg
lcall
int3
test
xor
scas
jecxz
in
mov
xor
cmp
outsb
inc
dec
out
aaa
cmp
lahf
and
dec
aad
stos
mov
cmpsl
and
dec
and
pop
add
and
ret
addr16
lahf
push
insb
fbstp
xchg
xchg
mov
jo
dec
jno
lods
dec
sbb
xchg
scas
or
stc
mov
cwtl
or
shll
test
cmp
mov
mov
inc
cltd
sbb
aam
lret
lds
add
inc
xor
ds
push
loope
imul
sbb
test
xor
stc
mov
cli
dec
dec
aad
test
push
fisubrl
or
inc
xchg
popa
inc
add
or
push
push
add
mov
and
cmp
adc
out
xchg
fists
dec
femms
and
mov
cli
push
pop
std
enter
mov
fwait
sub
inc
xor
and
aad
mov
mov
or
and
xorl
or
dec
xor
xchg
test
adc
addr16
xlat
dec
out
xchg
std
enter
cmc
ljmp
adc
fxch
cmpsb
cmp
jno
lds
mov
aas
mov
push
std
enter
mov
outsl
mov
ror
lcall
testl
xchg
test
sbb
imul
outsb
xlat
jge
into
sbb
mov
rclb
xor
mov
fbstp
rcrl
bound
cmp
bound
lcall
push
test
shll
xor
dec
jae
andb
in
dec
sbb
aad
imul
push
pushf
and
mov
push
push
inc
imul
jle
ja
stos
call
std
enter
dec
lds
add
xchg
jae
mov
inc
cmpsb
push
adc
scas
mov
rcr
enter
scas
scas
cmp
cmpl
fists
mov
sub
mov
in
adc
mov
dec
sbb
sbb
jne
cmc
mulb
js
pop
adc
pop
and
test
xor
inc
push
sbb
dec
ret
stc
mov
orps
test
cmp
jg
xchg
xor
push
sbb
xor
stc
mov
xchg
daa
js
ret
fdivrl
xchg
enter
cmpb
jae
shl
rclb
dec
push
dec
or
and
pop
enter
xor
sbb
push
fwait
and
repz
rol
iret
outsb
mov
mov
xchg
lods
pop
push
fisubrl
mov
inc
cmpsl
push
xor
xor
lods
mov
pop
in
scas
incl
dec
std
xchg
lods
js
sbb
fwait
sbb
int3
jmp
cmp
or
test
loopne
call
insl
xor
jmp
sahf
add
adc
in
mov
test
cmp
xor
xor
dec
dec
push
mov
ret
jecxz
sub
lret
je
pusha
adc
pop
outsb
stc
mov
lods
fsubs
xchg
shl
jl
mov
pop
daa
paddd
vxorps
jl
jp
pusha
cmp
xorl
aam
fwait
sbb
in
adc
aam
push
jne
in
dec
scas
cmpsb
out
test
inc
imul
cmp
push
xchg
lock
fldcw
xor
inc
push
push
mov
nop
dec
loope
jecxz
loopne
in
dec
dec
and
test
std
inc
into
fwait
xor
adc
dec
js
cmp
lods
and
notl
enter
and
add
sub
sbb
stos
pop
push
lds
aam
add
jnp
iret
cmp
dec
mov
xlat
jae
inc
inc
rcrb
aam
dec
lret
cmp
jno
inc
andl
push
mov
pop
ret
cmpsl
mov
xchg
data16
pop
or
xor
mov
sub
xchg
push
xchg
fcoml
in
loopne
push
pop
or
push
sub
mov
mov
loopne
mov
pop
mov
dec
dec
sbbl
shrb
enter
lcall
add
stc
lods
clc
test
inc
mov
jl
push
sbb
fimull
push
jae
and
sub
pop
loopne
arpl
leave
sbb
jecxz
xchg
dec
inc
inc
xor
cmp
std
mov
ja
sub
in
jno
sbb
cmp
in
das
push
xcrypt-cbc
cmpsl
xchg
sbb
pop
adc
lds
pop
add
and
pop
icebp
jae
mov
lar
dec
mov
inc
negb
aaa
cmp
subb
mov
call
mov
sbb
jno
shll
and
cmc
jno
imul
mov
hlt
adc
push
pop
xchg
mov
and
jmp
es
movsl
xor
ret
mov
loopne
push
jno
sbb
fucom
or
push
sti
movl
sub
iret
cmp
cmc
out
jb
stos
dec
xchg
push
outsb
inc
dec
and
popf
cli
clc
jnp
cmc
sub
sbb
bound
lock
mov
mov
js
ja
mov
outsb
test
inc
cmp
push
dec
push
push
cmp
lcall
ljmp
push
aaa
mov
je
insl
lds
or
shrb
cli
cmp
xorb
pushf
ljmp
cmp
mov
test
roll
fs
rcrb
add
dec
jb
outsl
fisubrl
sub
xor
subl
sbb
jmp
push
mov
movsl
jbe
push
mov
popf
xchg
sub
dec
cmp
mov
out
mov
cmp
xor
cwtl
mov
loope
and
enter
push
aam
call
cmpsl
sbb
sbb
cmp
mov
das
dec
xorl
adcl
lds
gs
dec
movsb
sti
xor
sbb
sbb
push
cmp
test
roll
mov
inc
sbb
push
mov
mov
mov
dec
push
dec
jo
mov
test
and
aam
das
jno
cli
loopne
ja
repnz
inc
mov
leave
insl
add
int3
outsl
leave
inc
es
cld
cwtl
pop
inc
xor
enter
mov
pushf
mov
inc
imul
cltd
lahf
arpl
sbb
mov
push
fisubl
fwait
cs
push
push
or
pop
in
sarb
pop
inc
loope
lock
dec
push
push
cmp
btr
jmp
inc
xor
pop
ja
mov
stos
sbb
sbb
push
pop
adc
or
jle
jbe
negl
test
out
cld
xchg
or
insl
inc
leave
movsl
xor
in
xor
enter
or
dec
inc
sbbb
nop
ja
sub
dec
cmpsb
adc
or
call
in
fcmove
loopne
sbb
and
xchg
and
les
mov
stc
or
insl
ljmp
push
xchg
in
dec
cmc
gs
inc
incl
dec
std
es
pop
jecxz
cmp
daa
outsl
mov
in
rol
into
outsb
mov
call
sbbl
enter
addr16
sub
inc
aad
imul
rcl
xchg
add
and
xchg
test
jnp
loope
jno
sarl
xchg
and
jns
or
popa
jae
mov
sub
js
cmp
mov
sbb
dec
inc
sti
imul
inc
fwait
dec
jns
call
pushf
fldl
push
and
ret
mov
dec
mov
repz
xchg
scas
xchg
mov
pushf
loopne,pt
pusha
sbb
mov
sbb
lahf
sub
inc
pop
dec
sbb
insl
mov
lods
dec
outsb
cmp
add
push
mov
call
sub
cmc
jl
push
loop
mov
push
xor
cmpsl
adc
jno
arpl
xlat
xor
cmp
mov
cli
scas
popa
stos
cli
paddsb
adc
test
bound
mov
xchg
outsb
movsl
pop
push
inc
icebp
mov
or
cld
nop
sbb
les
inc
std
ret
xchg
dec
js
testb
scas
aam
sub
aam
xlat
pop
test
cmp
fwait
ret
pushf
cli
jp
xchg
xorl
shrl
adc
add
in
sub
pop
sub
ljmp
xchg
jl
out
jp
jecxz
pop
data16
in
jno
sub
repz
outsb
xor
mov
mov
mov
jmp
movl
add
enter
push
fninit
scas
arpl
push
movsl
and
push
sbb
dec
jne
add
outsl
push
sahf
pop
aad
lods
iret
enter
loopne
stos
test
das
push
std
rorb
xor
aas
mov
fisubrs
outsl
xor
xlat
add
adc
stc
cmp
dec
scas
rcl
loopne
push
rcrl
sbb
push
jno
inc
jns
mov
addr16
pop
ret
cmpsl
mov
repz
aam
adc
lea
cmpsb
leave
or
and
lret
mov
sbb
dec
inc
mov
inc
stos
idiv
fstpt
mov
lret
and
sti
pop
sbb
movsb
mov
and
fidivs
std
enter
sbb
mov
add
inc
stc
dec
shll
lcall
shll
insl
adc
test
in
xchg
in
jae
out
inc
mov
xchg
std
ret
scas
jnp
push
dec
sub
scas
mov
lea
stc
pop
fimull
fidivl
adc
mov
mov
cmp
pushf
sub
rcrb
push
imul
mov
sbb
testb
scas
jbe
cmp
push
push
sbb
ja
or
ret
stc
mov
cwtl
or
test
cmp
xorl
and
stos
push
pop
std
enter
mov
xchg
or
cmp
inc
mov
fsubl
outsl
cmp
mov
lea
xor
push
icebp
push
lds
loope
ja
or
cmc
sbb
or
and
lock
popa
xor
fsts
mov
mov
jmp
pop
jbe
cmp
shl
xchg
stos
dec
stos
and
std
enter
mov
xchg
or
aas
jnp
lods
pop
xor
inc
push
push
xchg
push
push
sbb
pop
mov
fdivs
cld
cmp
std
cmp
cwtl
shrl
dec
rorb
es
lods
aaa
adc
fdivl
orl
mov
inc
dec
xchg
mov
and
daa
out
xorl
push
mov
sub
push
push
std
enter
adcb
jne
fcmovbe
mov
or
xchg
jo
xor
push
push
inc
or
or
stc
mov
xchg
xor
or
mov
leave
fcmovb
pop
fldt
pop
cmp
jno
inc
mov
mov
call
scas
and
sub
cltd
dec
and
sti
push
test
lea
das
mov
jnp
and
out
mov
enter
dec
out
pushf
add
addl
repz
push
mov
lds
inc
movsb
sbb
pop
or
and
and
xchg
push
mov
icebp
add
mov
mov
es
dec
orl
mov
push
mov
lds
mov
cmp
add
mov
orb
adc
xlat
push
in
test
adc
add
mov
test
call
mov
pop
inc
inc
nop
and
je
call
ss
hlt
scas
sub
jl
jle
shll
enter
sbb
fwait
push
out
push
rclb
test
add
adc
and
pop
leave
mov
jae
outsb
fstpl
addb
icebp
scas
jl
sbb
jbe
mov
sbb
pop
pop
mov
inc
jge
lods
daa
leave
ffreep
or
in
jno
cmp
adc
mov
sub
cmp
pop
push
fwait
clc
and
aad
rolb
and
cmp
adc
add
push
mov
mov
cmp
pushf
stc
mov
mov
cmp
orl
push
add
cmp
cmpsl
or
mov
std
or
std
enter
dec
lock
enter
sbb
dec
std
enter
pop
pop
das
adc
xchg
inc
or
inc
js
icebp
ja
stos
loop
adc
and
int3
jbe
outsb
mov
and
pop
jno
out
xchg
out
xchg
mov
or
push
rcrl
sbb
push
mov
xor
inc
xchg
cmpsb
mov
mov
orb
dec
dec
sbb
mov
push
ret
stc
mov
and
mov
xchg
ret
fimull
scas
std
push
push
stc
jns
mov
adc
push
cs
in
sbb
pop
xor
mov
iret
mov
in
outsb
dec
sub
jbe
notl
mov
or
pop
push
xchg
scas
pop
sub
cmp
jp
inc
in
mov
es
sub
and
jb
push
sbb
in
xchg
mov
in
hlt
or
ret
jecxz
divl
mov
vmread
lods
xlat
adc
xchg
xor
dec
sbb
ret
stc
mov
or
outsb
test
lret
cltd
and
cs
mov
fdivs
ret
addr16
fs
in
inc
in
xor
fmull
push
mov
cli
pandn
sbb
dec
fbstp
into
inc
pop
outsb
sar
ds
or
dec
and
cltd
ja
imul
lods
jns
pop
push
jns
aas
shl
scas
test
outsb
out
das
or
outsl
into
cmp
lret
inc
sub
pop
jecxz
ficoml
leave
adc
inc
out
cmp
cs
dec
sub
lcall
sbb
adc
cmp
jae
mov
outsl
mov
pop
lds
int3
inc
mov
aaa
pop
and
std
enter
and
push
xor
cmp
pop
ror
push
pop
mov
sti
ret
data16
out
lods
addr16
and
push
add
pcmpeqd
mov
mov
mov
jp
ss
pushf
sbb
imul
pop
pusha
dec
std
dec
xorb
cmc
xorl
xchg
dec
std
enter
dec
dec
add
fnstsw
fwait
sbb
sub
push
push
pop
fiaddl
insl
ficoml
scas
pop
aas
imul
test
sti
dec
test
std
enter
repnz
mov
fdivr
shl
mov
outsl
jae
and
add
outsl
xor
mov
lods
fdivs
adc
pop
and
xor
dec
addl
xor
jle
xor
imul
std
push
fs
mov
xor
je
mov
push
adc
mov
adcl
xchg
aad
shlb
and
cmp
and
inc
add
fnsave
jbe
jno
roll
loope
js
inc
bound
mov
mov
popf
mov
sbb
dec
shll
decb
pushf
and
in
insl
mov
pop
inc
addr16
movsb
xor
fstpl
sti
jl
mov
enter
bound
cmp
sti
movsl
sbb
das
sub
jnp
clc
xor
push
mov
sub
pop
mov
dec
cmc
xor
nop
dec
fistpll
outsl
out
cltd
insb
sub
int3
mov
push
mov
lret
or
jg
xchg
test
fiaddl
mov
and
cmp
ss
mov
scas
pop
adc
dec
xchg
leave
test
pop
insb
mov
cmp
call
in
inc
leave
dec
dec
mov
cmp
imul
mov
jmp
adc
pop
testb
adcb
cmpl
es
ja
and
std
enter
test
cmp
and
mov
and
ror
mov
mov
dec
loope
paddd
les
inc
mov
arpl
clc
cmp
cmp
sti
lea
push
leave
pushf
insb
mov
out
sbb
dec
cmpb
les
push
call
cmp
test
mov
lcall
cmpsb
push
cmp
shll
and
std
enter
dec
lock
and
cwtl
xor
inc
push
push
xchg
sub
adc
mov
outsb
sub
insb
mov
cmp
xchg
push
push
sub
mov
inc
cltd
mov
sbb
cmc
or
push
pop
es
jae
mov
push
and
imul
jae
sbb
jbe
call
pusha
repz
cmc
jb
jae
dec
scas
push
sbb
stos
pop
fldt
push
cmp
add
push
push
aaa
sti
dec
mov
pop
lret
rolb
les
mov
enter
test
cmp
fwait
ja
xor
data16
cli
call
cli
cmp
loopne
les
lret
out
lahf
shl
sbb
mov
addr16
xchg
das
cmp
cmp
mov
and
push
decl
insl
mov
xor
enter
jbe
ja
add
inc
loop
sbb
std
leave
mov
adc
aam
cli
xor
call
mov
xorb
adc
add
inc
test
arpl
dec
cli
push
push
dec
sub
pusha
mov
retw
jo
sub
add
aas
loop
xchg
insl
xor
roll
in
fadds
scas
add
sub
fcoml
mov
dec
pop
cmp
add
jbe
notl
sbb
xor
ffreep
das
add
or
loopne
lds
cmp
sub
pop
cwtl
xor
insl
mov
fisttps
stc
push
add
imull
xchg
push
xlat
outsb
cmp
inc
outsb
insl
push
adc
call
les
cmpsl
xchg
into
bound
fsubl
sub
cmp
in
dec
or
addr16
ret
in
adc
cmp
lea
jb
and
inc
daa
psllw
pop
or
and
xchg
dec
imul
in
loopne
cmpsl
cwtl
rcl
enter
gs
and
jns
add
cltd
mov
mov
ja
loop
into
dec
cmp
clc
pop
out
jno
cltd
pop
mov
inc
jl
mov
xchg
xchg
inc
lcall
rcr
pop
scas
scas
mov
lcall
sti
andb
mov
lds
xor
stos
data16
fisubrl
xchg
lods
pop
leave
in
mov
sub
imul
mov
out
mov
pop
cwtl
xor
imul
cmp
cmp
out
jmp
adc
xchg
xor
punpckhwd
outsl
aam
daa
std
sbb
mov
das
fisttpll
add
jne
sbb
pop
nop
and
push
pop
mov
ret
out
out
in
outsb
hlt
cmp
mov
pop
mov
stos
push
push
aad
clc
cmp
sub
icebp
cli
push
add
lds
add
aaa
pop
cmp
aaa
and
enter
add
xor
sti
hlt
sbb
mov
xor
dec
xor
cmpsb
mov
dec
xchg
call
cmp
stos
mov
lar
pop
sub
jns
mov
mov
stos
pop
loope
dec
in
sbb
scas
pop
call
nop
aas
xor
in
out
rol
leave
xchg
outsb
xchg
push
jns
fildll
outsb
mov
call
dec
sub
pop
lret
dec
mov
inc
jae
jge
dec
inc
lahf
cmp
add
out
push
dec
cmpb
enter
stos
add
push
add
cmp
pop
push
xchg
adc
dec
jecxz
xchg
mov
aam
push
inc
cmp
jno
inc
jno
mov
xor
cmpsl
mov
xor
cmp
std
cmp
cmp
mov
mov
in
jo
xchg
ret
xchg
mov
inc
inc
pop
pop
mov
dec
sub
clc
push
fadds
mov
push
cmp
repnz
ss
cmp
or
push
dec
sub
cltd
jo
mov
fwait
or
or
movsb
stc
sbb
xchg
pop
scas
lds
and
xor
psrlq
lret
sub
into
push
fsubrs
jle
push
jne
xor
push
cmp
in
jno
sub
rcrl
push
push
inc
sub
ljmp
dec
cli
sub
add
inc
cmp
jno
inc
js
mov
sbb
scas
das
lret
shlb
xorb
in
sub
push
ficoms
push
add
push
dec
lock
movl
ret
cmc
mov
repnz
mov
mov
in
mov
jnp
xor
adc
ret
push
loope
icebp
dec
fldt
flds
inc
xchg
and
add
jb
mov
cmp
mov
sbb
or
xchg
or
pop
jecxz
cmp
jle
shll
push
push
std
enter
in
dec
imul
fsub
fwait
push
movsb
inc
pop
sti
xor
jae
pushl
add
loopne
pop
leave
xchg
cmp
pushf
mov
std
push
xlat
aam
lea
jo
cltd
pop
and
sti
push
lods
jle
insb
cmpsb
in
insl
imul
fbstp
outsl
push
mov
mov
push
jl
mov
dec
xor
mov
aaa
sbb
in
cmp
mov
jmp
xor
clc
stos
xor
popa
cld
in
xchg
std
rorb
stc
mov
loopne
ja
je
scas
imul
lgs
into
push
jbe
ss
jnp
inc
sbb
sub
loopne
sbb
les
push
cmp
pop
call
pop
daa
cmp
imul
imul
dec
das
pop
and
idivl
push
jne
push
cmp
cmp
sub
inc
gs
std
mov
fildl
mov
and
jecxz
lock
enter
dec
out
call
imul
imull
cmpsl
clc
ljmp
andl
mov
dec
ret
fdiv
outsb
incl
dec
std
jecxz
mov
and
jp
cltd
data16
lar
lea
std
test
scas
mov
dec
push
dec
xor
add
dec
rol
push
xchg
push
add
lods
adc
push
ja
and
adcl
pop
ror
xchg
ds
mov
mov
mov
repnz
addr16
mov
movsb
jge
or
in
or
lock
std
movl
jnp
ss
lds
sbb
adc
fisttpll
jne
lds
outsb
int
pop
std
enter
je
pop
lahf
leave
outsb
shll
jb
push
push
lret
popa
sbbl
mov
fisubrl
add
cli
jnp
or
jb
jae
std
