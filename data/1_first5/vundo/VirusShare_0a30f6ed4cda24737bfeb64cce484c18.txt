sbb
add
mov
ret
xchg
hlt
loopne
or
test
lret
rcll
and
enter
cmp
jg
into
jbe
mov
stos
incb
fnstcw
fstpt
mov
jmp
insl
cwtl
mov
cmp
sub
mov
notb
cmc
icebp
add
popf
pop
dec
add
imul
and
jle
shll
mov
enter
cli
jns
adc
xchg
test
cmpb
loopne
pop
xor
outsl
out
out
js
or
in
dec
lret
mov
inc
sbb
or
cmp
cld
mov
imull
cltd
mov
rol
and
clc
xor
jmp
push
aad
shr
enter
dec
out
popf
ljmp
iret
dec
mov
enter
imul
adc
add
dec
sub
mov
cmp
cmp
pushf
dec
pop
add
fs
add
xchg
xchg
rcll
mov
mov
shll
mov
or
fiadds
pop
mov
jns
mov
lods
cwtl
or
push
addps
dec
and
test
mov
je
jmp
add
pop
xor
insl
add
hlt
mov
shr
sbb
jae
in
adc
sahf
stos
clc
mov
push
xchg
sub
aas
rorb
cmp
xchg
rsm
and
fs
std
mov
orb
xchg
sub
xchg
dec
jle
jmp
test
shl
push
ret
mov
xchg
dec
ret
xchg
jl
fdivl
lods
push
push
leave
movsb
adc
dec
xlat
push
lret
out
lret
sti
js
mov
fs
cmpsl
xchg
outsl
ja
cmpsl
jb
jmp
hlt
sbb
scas
fnsave
shl
shrl
mov
xchg
inc
sub
iret
ja
cmpsb
idivb
lahf
push
mov
sub
outsb
rorl
or
cwtl
negl
jge
test
adc
fnstsw
mov
adc
jns
adc
notl
xchg
adc
test
mov
fsubrs
push
inc
fwait
popf
sub
pop
mov
ret
push
add
insb
out
and
int3
adc
mov
std
stc
hlt
mov
cmpsb
inc
inc
lea
lahf
xchg
in
mov
push
shll
addr16
mov
leave
mov
aaa
add
hlt
cwtl
pop
mov
dec
fstpt
adc
mov
lods
les
in
test
sub
push
push
inc
jmp
pop
or
jmp
xor
scas
lret
push
or
cmp
jmp
iret
jge
cmp
bound
xchg
loop
inc
mov
mov
popa
mov
push
add
jmp
mov
push
testl
and
lea
xchg
outsb
pop
dec
in
rcrb
in
into
jne
ja
pop
into
ret
lock
lcall
and
icebp
out
push
mov
mov
push
add
add
adc
jb
jg
add
lods
and
xor
xor
orb
xor
sub
dec
cmpl
inc
push
repz
mov
jne
shld
push
dec
add
ds
sbb
add
hlt
jae
pop
fnstsw
push
jns
dec
mov
jne
addb
lods
mov
lods
lods
push
push
out
cmp
insl
xchg
xchg
hlt
sub
test
mov
add
je
movsl
jo
push
pop
call
xor
loopne
sub
movsb
jge
ljmp
loopne
push
lds
cwtl
loopne
push
or
gs
movsb
fistps
jns
push
into
aaa
cli
push
bound
sub
cmpsb
or
mov
lret
mov
andb
and
pop
movsb
pinsrw
stos
stos
decb
lock
jl
scas
and
cmp
ss
xchg
ud2
cmp
data16
negb
repnz
cmc
mov
icebp
call
mov
sub
xor
lods
push
ja
inc
dec
jae
push
and
negl
js
in
in
scas
int3
xchg
inc
in
inc
lods
adc
ds
je
mov
xchg
shlb
mov
mov
mov
fisttpl
mov
in
cltd
aam
jns
and
sub
mov
push
push
pushf
daa
clc
out
aad
inc
jge
lahf
insl
fs
les
mov
xchg
and
jmp
popf
ret
daa
dec
popf
ja
add
add
jns
les
cmpsl
inc
pop
jne
add
pop
push
jg
mov
out
mov
std
iret
es
mov
inc
push
pusha
inc
cmpsb
int
roll
lds
xchg
pop
sbb
hlt
xor
add
jbe
fdivp
and
mov
jmp
rolb
jg
pop
sahf
and
jmp
lret
sbb
xor
test
rolb
xchg
push
loop
adc
int
pop
aas
sbb
pop
fs
xchg
xor
mov
pop
insb
lret
les
adc
test
mov
or
sbb
lods
or
loop
idivb
mov
loope
in
or
clc
dec
cmpsl
pushf
xor
loope
ds
sub
xor
adc
or
cmp
adc
mov
ja
lea
push
sub
cld
sub
loope
outsl
jns
popa
xchg
mov
push
xchg
int3
mov
mov
push
adc
mov
xor
in
lods
mov
jb
jbe
and
sub
pop
and
xchg
ds
or
pop
and
fwait
and
pop
mov
inc
mov
aaa
pop
out
adc
test
iret
add
testb
mov
inc
cmp
mov
test
lcall
mov
xor
and
mov
mov
xchg
test
push
mov
inc
pop
inc
mov
out
mov
jmp
inc
movsl
adc
or
ja
call
fwait
jae
popf
push
mov
out
jmp
ljmp
jp
ja
jmp
inc
push
sbb
jnp
and
daa
fdivrl
mov
cmpsl
adc
push
stc
pop
mov
push
mov
jmp
ret
enter
xchg
sti
xor
in
jmp
bound
sub
out
inc
mov
int
cmp
leave
lcall
fwait
pop
mov
sbb
repnz
mov
adc
jp
push
add
dec
cmp
inc
mov
jle
or
sti
sbb
int
inc
aaa
xchg
mov
test
mov
sbb
scas
std
stos
scas
cwtl
pop
popf
xchg
aad
scas
sar
inc
jg
dec
xor
pop
mov
sub
or
adc
xchg
mov
inc
jns
xchg
push
sub
popf
popf
loopne
sbb
push
cltd
sbb
and
and
cmc
repz
or
xor
les
shrb
sbb
cmpsb
fdivr
ds
cli
gs
gs
and
jge
fldcw
out
or
adc
cmp
dec
jp
ja
andb
dec
xor
int
add
mov
lods
mov
ljmp
mov
add
jb
inc
and
rcrb
fwait
repz
lock
fbstp
ret
test
adc
mov
enter
xor
stos
pushf
cwtl
adc
cmp
fwait
stos
adc
mov
pop
mov
out
orl
enter
jne
jmp
mov
pop
dec
inc
fucomip
push
mov
xlat
shlb
sbb
cmp
mov
iret
cli
insb
xchg
adcl
and
popf
pop
test
mov
adc
xchg
popa
pop
xor
outsl
scas
gs
adc
dec
mov
adc
or
dec
leave
jae
leave
jp
jle
mov
and
imul
jns
pop
jo
mov
push
jne
arpl
popa
xchg
rcrl
push
fidivrs
xor
es
aam
call
or
jb
fstps
mov
sub
cmpb
inc
stos
add
lret
nop
scas
scas
inc
rcll
movsb
pop
cs
out
cmc
shll
lds
sahf
int
cli
cmp
stos
push
idivb
outsl
dec
ret
inc
push
mov
stc
ja
in
bound
mov
mov
sub
and
jmp
imul
adc
jo
mov
ret
insb
push
cwtl
inc
mov
hlt
movsl
or
jle
lock
lods
outsl
and
jae
sub
xchg
add
mov
add
mov
std
pop
pop
shlb
xorl
dec
aaa
lret
popa
jno
gs
mov
sti
sub
imul
fisttps
icebp
fistpll
fsubrs
iret
mov
adc
ret
stc
filds
pop
add
add
cmp
jge
jg
and
sub
idiv
rcpps
xor
cmpsl
int3
and
jae
mov
push
adc
arpl
and
nop
pop
lds
scas
mov
mov
sete
add
popa
mov
imul
insl
pop
mov
arpl
bound
push
jb
mov
outsl
mov
adc
cmp
xchg
sbb
jne
mov
pop
insb
popf
movsl
addl
ljmp
jbe
push
fs
in
out
in
inc
pop
outsl
mov
testb
xor
cld
push
ljmp
cmp
push
shlb
bound
out
mov
push
imul
stos
outsb
enter
inc
push
mov
mov
dec
cmpsl
int3
imul
adcl
shll
jne
mov
sarb
xchg
xchg
push
add
pop
insl
test
xchg
or
inc
cmp
jp
jle
stos
jb
enter
ss
adc
pop
xchg
or
cld
mov
outsl
lahf
sbb
test
fstpl
adc
xchg
stos
adc
and
mov
cmp
xor
cs
add
or
mov
stos
push
stc
cmp
mov
push
pop
adc
xchg
pop
nop
pop
std
ret
fwait
enter
nop
pop
push
jae
xor
pop
sub
cmp
out
xor
dec
scas
aam
sub
pop
cmp
xchg
out
fadds
pop
daa
dec
idiv
inc
repz
add
scas
cs
iret
scas
push
jo
inc
push
sub
shrl
daa
int
jp
pop
stos
push
jmp
mov
push
stos
aam
mov
lods
mov
pop
shlb
lock
mov
jmp
dec
repnz
push
in
fldenv
dec
into
gs
adc
enter
rcrb
es
add
add
cmp
fsubr
mov
xlat
je
rclb
aas
repnz
call
jmp
sub
in
xor
sahf
jge,pt
out
cwtl
jg
insl
mov
leave
push
jnp
iret
das
les
scas
push
je
cmp
mov
fwait
add
cld
out
test
lock
rolb
adc
cmpsb
lea
jne
lahf
mov
test
sti
mov
jecxz
in
push
jnp
pushf
dec
jp
xor
daa
call
mov
cmc
and
push
xchg
jbe
repz
clc
pop
fnstsw
adc
call
movsl
xlat
cmp
rcll
sbb
xor
dec
in
and
loope
outsb
call
pop
pop
pushf
and
dec
cli
push
push
lods
and
int3
inc
ret
cli
mov
mov
data16
xor
rorl
or
das
dec
js
cmp
sbb
movsl
add
je
or
xlat
mov
pop
stc
adc
sbb
inc
jae
cltd
cwtl
xor
stc
scas
aaa
push
mov
call
lcall
ds
in
mov
cmp
nop
xor
sub
push
push
js
mov
dec
mov
in
out
dec
or
in
ja
jne
jb
lret
mov
xor
ds
repnz
roll
push
fisubrs
xor
adc
fs
pop
or
xchg
inc
cli
jge
js
mov
loopne
dec
push
and
xor
push
pop
fsubrs
movsl
popf
lods
scas
xlat
cmpsb
sbb
arpl
pushf
sub
dec
std
ds
addb
adc
mov
mov
or
dec
and
push
popa
rcll
jle
lods
fdivrs
fimuls
fidivrs
push
cli
dec
aas
js
pop
leave
xchg
inc
or
sub
lcall
cwtl
inc
rorl
movsl
mov
call
inc
cs
jne
jo
push
popa
or
adc
ja
data16
add
cmp
hlt
mov
inc
jo
call
fisubrs
mov
out
push
out
and
push
xor
mov
hlt
dec
add
notb
out
in
jnp
inc
cmp
and
adc
xchg
fimuls
or
dec
mov
out
pop
mov
or
sbb
pop
pop
data16
icebp
cli
or
jo
sub
loop
push
or
andl
pop
push
movsl
cmp
pop
adcb
jmp
mov
iret
xchg
pop
scas
js
fsubr
stos
inc
push
xorl
sub
ja
xchg
imul
cmp
andb
popa
scas
adc
xchg
cwtl
mov
shr
push
sub
push
inc
pop
addr16
cltd
pusha
lods
mov
clc
push
jae
nop
mov
dec
imul
es
bound
movsl
xor
mov
mov
fimull
jecxz
fldl
push
dec
xor
mov
repnz
ljmp
ret
or
push
jl
or
jo
adc
add
test
std
fcoml
sbb
sub
mov
stc
and
mov
jp
cwtl
jno
push
rcl
or
mov
inc
inc
jmp
mov
aaa
js
iret
xchg
aas
popl
cmpsb
sbb
cmc
sub
pop
sti
sti
push
push
inc
ret
cmp
xchg
jecxz
xor
jmp
daa
ret
movsl
cmc
push
adc
test
cmpsb
movsb
mov
arpl
std
aam
inc
xor
adc
dec
stos
aam
xchg
dec
cmpsb
hlt
pop
mov
sub
inc
xor
inc
jbe
rcrl
pusha
mov
jno
ja
or
jg
insl
and
jg
inc
or
cmp
inc
dec
inc
movsl
and
dec
mov
ss
jg
add
aam
sbb
outsb
insb
outsb
aaa
push
mov
jge
mov
xlat
adc
pop
data16
repnz
jno
das
xlat
xchg
aad
pop
loop
gs
ja
mov
mov
xor
jp
stos
add
jmp
lcall
loop
mov
dec
in
sub
jge
xlat
inc
repnz
and
in
nop
into
adc
xor
fldt
fmuls
mov
dec
dec
or
popf
inc
icebp
push
inc
outsl
xchg
sbb
das
rclb
jp
out
in
dec
add
cltd
pop
jg
push
cmp
or
dec
out
sbb
mov
out
idivl
paddsw
iret
cwtl
push
inc
daa
fsubrl
dec
orb
mov
popl
addr16
cmp
insl
js
xor
cmp
xor
push
pop
mov
or
pop
fists
int3
or
mov
jg
movsb
movsl
mov
daa
lahf
shlb
fwait
xchg
xchg
xchg
scas
pop
pop
xchg
frstor
sbb
xor
ret
clc
or
cmp
stos
cli
out
call
adc
sahf
lret
add
inc
call
or
xchg
push
inc
fdivl
enter
scas
xchg
sub
data16
sbb
pusha
lods
pop
jmp
pop
inc
imul
mov
stc
iret
lea
test
not
cmp
add
adc
push
popf
push
or
jns
jge
dec
mov
movsl
push
lahf
sub
inc
sti
daa
pushf
and
dec
loope
into
cmp
scas
cli
lahf
xchg
cmp
in
icebp
push
arpl
add
dec
mov
cmpsb
jne
sub
pop
ffree
inc
not
push
scas
add
add
call
sbb
aad
add
orl
ret
mov
lahf
mov
std
fwait
ss
insb
xchg
and
pop
adc
pop
test
dec
sarl
arpl
dec
pop
sbb
xchg
mov
shlb
pop
shl
cmp
subl
cmc
mov
mov
out
in
add
std
mov
lcall
dec
sbb
out
or
push
jne
pop
repnz
xchg
popa
and
test
test
mov
jno
add
mov
aas
mov
lds
jnp
mov
inc
and
xor
xchg
pop
mov
stos
dec
jl
add
std
icebp
sub
mov
dec
pop
enter
mov
jl
push
push
clc
ss
test
leave
push
jecxz
mov
and
sahf
daa
mov
call
fwait
jne
push
fistps
ja
or
or
pop
fistpll
add
xchg
push
jnp
or
lds
jg
fnstenv
push
pop
pop
sub
cmp
shll
xchg
daa
arpl
sub
cmc
jnp
add
xor
xchg
push
in
push
stc
fmuls
xchg
lcall
mov
pop
fsubs
fsubr
and
ss
pop
jmp
sub
ret
jl
out
sbb
sbb
stc
into
push
xlat
daa
lods
pop
imul
sbb
out
push
orb
cmp
arpl
inc
outsl
pushf
pop
jae
mov
adc
sahf
xchg
fnstsw
pushf
fsubr
mov
in
mulb
push
cmpsb
adc
ret
std
popa
add
jl
xchg
dec
push
xchg
leave
cmp
aam
sub
fcmovb
or
xor
and
xor
dec
test
mov
fcomp
out
aas
mov
mov
inc
jns
add
fdivl
sbb
and
rclb
sahf
stc
mov
jno
add
mov
clc
xchg
mov
gs
sbb
dec
popf
clc
pop
ficomps
in
cmp
adc
shlb
jecxz
fidivrl
sub
scas
bnd
out
test
push
popa
imul
and
test
scas
xadd
mov
loope
in
stos
adc
push
fidivrs
fcmove
fs
fadds
leave
lods
clc
popf
adc
ja
jl
and
sub
xchg
sahf
fsubl
xor
gs
clc
setno
aas
es
test
hlt
jns
ffree
inc
cli
aas
inc
xchg
mov
and
lret
ljmp
dec
fsubrl
mov
mov
push
and
mov
mov
push
xor
push
jo
ret
jnp
pusha
aad
sti
loop
mov
in
xchg
lods
push
movsb
in
xchg
ret
in
test
das
ljmpw
dec
mov
test
mov
inc
adc
and
fcoml
testb
xor
arpl
sub
jae
mov
fcompl
cmp
cmpsb
pop
jne
mov
shll
push
rolb
cwtl
mov
pop
mov
sbb
xchg
aaa
jnp
out
push
mov
or
jecxz
and
fidivs
lods
or
mov
aam
rcr
cmp
frstor
inc
sbb
mov
jo
lahf
inc
popf
push
xor
loop
jmp
dec
loop
inc
jnp
xor
mov
inc
sbb
bound
adc
cltd
leave
rol
xchg
int3
add
les
add
xchg
push
scas
out
push
andb
push
or
in
sbb
scas
mov
cmp
imul
jae
repz
popa
sbb
or
icebp
nop
leave
xor
pop
pushf
mov
xchg
jnp
in
daa
fisubrs
out
cmp
inc
pop
sbb
ljmp
jnp
add
fsubl
das
mov
xorb
into
inc
rcl
aaa
xor
xor
sub
into
into
int
ficompl
inc
aad
and
dec
incl
ficomps
and
sbb
jmp
cmpsl
dec
mov
and
ret
xor
pop
or
pop
push
ret
mov
loope
jns
insl
aaa
and
or
cmp
add
or
scas
je
push
cmp
dec
stos
push
sbb
cmp
inc
and
cmp
into
int
push
pop
xchg
cli
sub
out
rol
dec
or
pop
or
push
adcl
int3
ficompl
in
dec
mov
sbb
xchg
xorb
je
aam
jb
or
mov
icebp
jne
loope
ja
fwait
jo
cmpsb
inc
cmpb
pop
sub
mov
ss
push
pop
test
pop
pop
stc
mov
lods
adcl
push
or
movl
mov
jecxz
lahf
cmpsl
lea
or
pop
dec
stos
ljmp
mov
sbb
leave
repz
cmp
mov
pop
lret
icebp
jbe
cld
pop
sub
std
js
xor
iret
sbb
fstps
inc
xchg
xor
mov
push
pop
imul
sahf
mov
pop
lret
pop
shrl
rcrb
cltd
adc
rcll
jl,pn
inc
aas
movsl
das
loope
icebp
jne
mov
test
addb
outsl
repz
loopne
xchg
pop
mov
popf
fsub
pop
pusha
or
xchg
aas
add
and
push
xchg
ret
pop
push
les
outsb
stc
aaa
and
dec
adc
mov
jecxz
nop
insl
adc
call
ret
sbb
loopne
push
jle
jo
into
and
test
push
ds
jns
scas
out
adc
in
jg
loope
add
loop
les
xor
int
jae
jne
fnstenv
push
stos
cltd
sbbl
add
jbe
push
mov
je
jae
mov
fwait
lock
push
inc
push
xorb
in
lahf
lods
je
imul
mov
jle
lds
pop
jno
loope
xchg
popf
negl
in
adc
nop
flds
loope
insl
add
mov
int3
outsl
hlt
push
push
dec
cltd
xchg
movsb
fisubrl
mov
adc
jb
bnd
adc
pop
popl
fidivrs
xor
dec
fdivrl
xor
sbb
addr16
imull
lret
push
jae
movsl
lret
lcall
xchg
popa
mov
adc
mov
mov
lahf
ret
mov
cmc
roll
xor
mov
push
lods
out
movsl
jno
pop
pop
adc
call
fmuls
cmp
mov
mov
lds
fs
loop
and
cmp
push
fcoml
xor
into
xor
push
inc
push
into
stc
es
lcall
jmp
das
cld
shrl
leave
or
mov
add
imul
mov
xor
and
xor
mov
ror
xor
add
frstor
cmpsb
mov
rcrl
movsl
cmc
scas
cmpsl
dec
imul
daa
add
push
aas
adc
int
loope
aam
xchg
scas
stos
mov
movsb
stc
sbbl
xor
mov
ds
addb
xchg
cmp
mov
add
mov
out
repnz
lea
gs
cmc
xchg
inc
ja
add
rol
adc
mov
dec
or
dec
lock
test
outsl
pusha
jmp
mov
jg
scas
cmp
mov
cltd
jmp
sub
mov
inc
ret
mov
pop
pop
clc
pop
je
push
nop
popa
add
or
test
aaa
mov
sahf
push
shll
mov
xchg
inc
in
push
out
lock
aas
aas
std
inc
iret
fsts
loope
sti
push
sbb
adc
lea
push
add
xchg
movsb
push
hlt
pop
insb
loopne
outsl
mov
xchg
fwait
pop
into
outsb
mul
jmp
inc
mov
jb
dec
pushf
jle
hlt
mov
adc
in
push
addr16
push
add
test
jmp
cmp
jns
out
repz
negb
icebp
mov
push
outsl
into
repnz
xchg
repz
or
es
clc
cmp
and
out
and
cmp
dec
fstl
shll
jnp
or
popa
cld
cli
stos
cmp
aam
push
outsl
mov
push
xchg
aaa
mov
fbld
mov
and
repnz
sti
sub
lcall
inc
out
mov
jb
push
push
xor
or
stos
pusha
jnp
je
and
sahf
xor
daa
mov
das
add
nop
lods
cs
and
call
sbb
inc
cmp
lea
jle
lods
fwait
mov
jp
xor
jns
push
sbb
daa
pop
lahf
imulb
dec
dec
cmp
popa
fwait
mov
dec
inc
das
xor
add
aaa
enter
mov
cwtd
stc
dec
movsl
xlat
lock
fmuls
push
jnp
sbb
sbb
seto
std
push
lret
nop
add
and
repz
xchg
daa
sub
cmc
xchg
push
sub
mov
sahf
sbb
ss
fwait
dec
sub
sbb
push
push
dec
popa
mov
mov
or
mov
jmp
imul
sbb
aad
mov
arpl
leave
fldl
pop
rcrb
test
stc
fdivp
std
nop
xor
mov
aam
and
enter
cmpsb
cmp
test
mov
and
mov
loop
js
cmp
ja
cmpsl
push
insl
into
adc
mov
add
jae
xchg
add
and
sub
or
sub
or
fs
inc
imul
and
popf
pop
in
xor
popa
jmp
sti
xor
pop
mov
cmovno
fists
aam
add
les
movb
mov
adc
cwtl
out
shlb
dec
int3
pop
mov
outsb
nop
cmpsl
outsl
arpl
jmp
cmp
paddusw
cs
mov
lahf
js
imul
push
fsubrp
add
pop
sbb
add
orb
aas
mov
lods
mov
fmull
dec
adc
sub
inc
rclb
test
inc
xor
arpl
xchg
in
inc
and
push
mov
hlt
insl
imul
icebp
jbe
inc
sbb
scas
mov
aad
pop
iret
movsl
mov
xchg
ret
mov
lds
fdivr
popf
test
sub
imul
scas
inc
lods
inc
movsb
lcall
out
ror
pop
outsb
jl
mov
fmuls
pop
sub
insb
push
addl
enter
mov
cmpsb
fmulp
in
outsb
lret
jne
and
mov
in
pop
ja
cmp
and
enter
xchg
adc
addr16
jg
jmp
fwait
and
mov
adc
lcall
lock
loopne
or
pop
nop
sahf
imul
push
jns
pop
xchg
sarl
jecxz
imul
lret
inc
insl
lods
les
mov
ret
hlt
inc
ja
cmp
int3
xor
bound
loopne
dec
call
inc
mov
in
cltd
stos
fidivs
sbb
in
xchg
ret
push
popa
aad
or
mov
dec
out
sub
inc
jb
repnz
hlt
mov
nop
adc
inc
cs
dec
in
repz
xor
inc
cmpsl
and
movb
jnp
mov
cmovnp
ds
in
rcll
popf
cmp
cmc
add
les
loopne
add
sbb
inc
mov
ss
dec
lock
push
loop
xor
dec
inc
xor
xor
loope
sbb
xchg
mov
jb
cmpsb
add
scas
pop
scas
divps
pop
mov
and
inc
dec
fimuls
adc
pop
cmp
idivb
aam
sub
stc
sub
xlat
ds
and
loop
in
popf
bound
mov
mov
and
xchg
nop
and
enter
clc
inc
lods
popa
and
jmp
inc
aas
in
pusha
outsb
movsl
sbb
mov
sti
adc
movsl
ret
pop
dec
dec
fcoms
jle
out
inc
jl
mov
or
mov
into
lret
cltd
xchg
cmp
scas
lret
xchg
pop
incl
fimuls
jns
scas
test
dec
xor
out
sub
pop
xchg
and
cmpsb
jo
popa
scas
adcb
shrl
sbb
movsl
mov
es
and
add
shlb
push
xor
sbb
int
sahf
jnp
test
rorl
js
add
or
outsb
push
sbb
sub
outsb
aad
int3
push
mov
pop
in
adc
mov
hlt
push
xor
sbb
mov
jl
cmp
mov
push
sub
jo
in
mov
add
and
add
xchg
fsts
jno
sub
dec
es
jg
dec
fbld
aaa
bound
cmc
stos
jmp
xchg
push
call
scas
in
sbb
jns
adc
fistps
jb
fdivrl
mov
xor
jns
or
shl
xchg
test
xchg
nop
mov
into
xor
std
xlat
add
adc
jecxz
xor
pop
aam
and
mov
push
mov
jp
ja,pn
mov
sub
dec
xor
lahf
icebp
mov
negb
pusha
pop
push
pop
jmp
push
jb
sub
sub
push
push
add
cli
pop
aad
jg
xchg
bt
jecxz
enter
rcrb
sarl
icebp
sub
cmp
dec
push
sub
out
loop
mov
popf
inc
cmp
ffreep
pop
dec
stos
imul
jmp
jge
mov
mov
stos
subps
mov
add
rclb
inc
dec
in
aas
pushf
cmp
jb
lds
jg
in
scas
sbb
rorb
jbe
sub
xor
adc
sub
ror
push
adc
xor
scas
mov
clc
or
fiadds
xchg
and
ficompl
lods
cmpl
ds
mov
movsb
xor
jo
push
jbe
gs
add
pop
adc
pop
jno
insb
dec
clc
sbbl
push
dec
out
cmp
or
push
xchg
sbb
aam
adc
stos
jmp
loopne
xchg
fs
int
cwtl
ret
popa
mov
enter
jmp
sub
lds
lock
int
adc
add
fs
ret
popa
rcll
fsubrs
movsl
mov
adc
data16
adc
jmp
andb
mov
lret
lods
stos
in
stos
add
push
jae
jle
fiadds
dec
mov
and
es
out
sarl
cs
jp
mov
aas
movsb
mov
inc
out
sub
mov
pop
faddl
movb
cli
xor
pop
xchg
and
inc
xchg
outsb
sub
and
cmpsl
cwtl
pop
mov
xor
clc
cld
add
sub
jmp
loop
test
adc
add
lret
outsb
out
sti
cmp
sbb
fiadds
pop
clc
out
push
sti
test
jnp
cmc
or
imull
xchg
repz
mov
jns
push
mov
xor
lcall
push
pop
pop
insb
jg
xlat
cmp
movsl
xor
cmp
or
xchg
mov
mov
xor
test
inc
fwait
or
pushf
mov
and
mov
mov
fiadds
loop
mulb
idiv
dec
cmp
cli
out
mov
test
sub
sub
jp
push
fisttpl
xor
int3
push
xchg
cmpl
cmp
dec
in
movsb
inc
scas
pop
inc
sub
inc
cltd
pusha
jl
in
push
mov
orl
fchs
xlat
pop
adc
dec
loope
sbb
sub
adc
mov
mov
fldcw
hlt
in
imulb
push
jp
hlt
sbb
push
cwtl
cmpsb
dec
jo
stos
adc
pop
adcb
xor
orl
cs
pop
xor
cwtl
fwait
cmp
push
fadds
mov
mov
xchg
mov
jne
lods
jo
mov
shll
mov
add
jge
popf
jmp
std
roll
sub
adc
test
jl
aad
insl
xor
jp
mov
push
mov
aad
std
outsl
rolb
cld
mov
fisubrs
arpl
sub
lret
dec
inc
cli
adc
pop
movl
int
mov
mov
xlat
mov
mov
cmpb
cltd
sahf
cmp
adc
add
test
xor
test
in
lock
jno
mov
mov
dec
inc
mov
mov
pop
scas
sub
call
fldl2e
xchg
mov
push
adc
das
outsb
jne
cltd
jg
arpl
lods
mov
movsl
cmp
jae
push
cs
cld
mov
xchg
pop
ljmp
adc
push
fsubrl
ffree
push
fistpl
pop
xchg
push
repz
cs
stos
mov
fnstenv
jle
stos
lret
out
add
js
jl
lahf
pop
mov
pusha
push
jne
pop
adc
cli
ja
add
sbb
into
loopne
and
dec
aam
iret
push
mov
ljmp
rclb
push
les
mov
inc
jmp
mov
fcoml
out
mov
pop
std
inc
dec
sub
xchg
mov
mov
sbb
push
sbb
add
xchg
cmp
xchg
ret
sahf
hlt
and
push
imul
adc
and
lcall
mov
sbb
rcrb
enter
ljmp
andb
gs
mov
sbb
xor
lods
scas
sbb
xchg
cmp
clc
xor
pop
xlat
mov
cli
sbb
shlb
dec
dec
jnp
cmp
dec
ss
mov
repnz
push
not
popf
lea
mov
aas
ja
lret
xchg
sbb
test
and
adc
cmpb
push
mov
adc
mov
cmp
push
outsl
mov
jmp
add
sbb
test
daa
inc
push
movsb
dec
dec
dec
cmp
or
je
mov
fdivl
dec
and
dec
scas
mov
push
fildll
sub
xor
aam
jl
jbe
aam
mov
xchg
dec
inc
in
jle
mov
mov
loop
gs
jle
lock
mov
and
movsb
addr16
pop
sbb
les
dec
cmpsl
mov
inc
data16
sbb
out
xchg
mov
jecxz,pn
aaa
orb
movsb
or
jp
sub
sub
jmp
ss
mov
sbb
mov
test
std
add
cli
sti
imul
cmp
sbb
xchg
enter
and
sahf
pushf
push
in
xchg
mov
xchg
arpl
xor
jne
scas
inc
mov
in
inc
push
cmp
cmp
fnstcw
sbb
xchg
mov
pop
fdivrp
mov
sub
imul
cli
or
fsubrs
mov
int
push
out
mov
dec
repz
hlt
mov
push
pop
mov
adc
or
aam
les
cmp
and
sar
lcall
repnz
shlb
lret
orl
test
lcall
loopne
nop
jmp
in
ret
dec
shr
push
cs
popa
and
fwait
and
loope
movsl
mov
jp
cmp
pop
arpl
mov
stos
sub
jl
icebp
ret
mov
jns
add
mov
xor
sbb
push
imull
popa
xchg
sbb
lods
inc
pop
and
mov
pop
popf
cmp
fiaddl
and
xchg
loope
mov
sti
mov
mov
out
cmp
and
aam
fcmovb
push
mov
add
cld
xor
call
mov
sbb
cmp
pusha
das
sbb
push
mov
pop
cwtl
repz
loop
dec
out
inc
fldl
cmc
cmpsl
mov
jp
lock
int3
mov
or
adc
dec
adc
shrb
repz
shr
xor
lea
cmpl
cmp
dec
add
add
jmp
mul
xor
push
enter
ss
cmp
inc
or
pop
sub
andl
ljmp
out
loope
jmp
push
xor
ror
scas
jmp
not
lcall
or
les
cmp
pop
leave
mov
jnp
sub
je
cld
xchg
push
xor
xchg
je
jns
push
mov
enter
movsb
gs
into
adc
mov
add
ret
insb
cld
outsb
xchg
mov
into
mov
pop
sbb
mov
dec
cmp
sbb
daa
xlat
rol
push
mov
cs
push
icebp
add
js
ljmp
dec
sbb
sub
and
cmp
rclb
leave
std
in
mov
fiaddl
lret
daa
repz
stos
sbb
lcall
inc
mov
popa
mov
dec
popa
cmp
adc
std
jnp
pop
fidivrl
ljmp
mov
sbb
testb
dec
ret
outsb
mov
ss
ret
adc
push
cmp
mov
lods
out
lock
int
leave
leave
dec
cltd
inc
mov
cmpb
mov
sbb
rcr
lea
lcall
mov
js
addr16
lods
xchg
es
xchg
mov
fst
aas
push
aam
bound
push
insb
stc
and
adc
cmpsb
mov
lret
movsb
ds
mov
pop
push
mov
shrl
lods
repz
mov
out
and
sbb
mov
pop
bound
add
cmpsl
loope
dec
repz
clc
add
icebp
leave
mov
mov
dec
jns
frstor
repnz
lds
xor
xorl
sbb
sub
fdivrs
push
jp
rclb
jecxz
push
sub
ret
call
int
in
inc
xchg
ljmp
fwait
lock
lret
addb
sahf
loope
les
mov
mov
inc
sub
sbb
dec
lods
inc
in
outsl
lock
mov
mov
loop
jbe
jg
jb
insb
and
fnstcw
push
inc
jae
stos
mov
lods
dec
sti
ret
mov
mov
adc
cmp
fdivrs
sbbl
shlb
je
ljmp
ficomps
dec
aaa
rclb
mov
loopne
push
rcll
lcall
pop
std
adc
stos
mov
dec
push
sub
je
mov
js
jae
fucomip
xchg
imul
add
in
jns
fmulp
jno
xor
push
shrl
and
mov
orb
sahf
xchg
and
pop
xchg
fiadds
stc
sub
xchg
outsb
sbbl
add
lret
xchg
lcall
scas
scas
or
mov
sub
push
mov
fwait
push
inc
sub
xchg
dec
lret
sub
frstor
push
mov
adc
call
lds
out
and
mov
inc
and
mov
push
test
shll
daa
adc
jne
and
inc
pusha
sahf
jecxz
fsubs
ds
pop
mov
movsb
and
jno
push
aaa
inc
rcpps
adc
cmp
and
mov
xor
xchg
pop
mov
fisttpll
arpl
cmc
mov
mov
dec
subl
cmp
mov
leave
pop
adc
sbbb
mov
xchg
push
xor
xor
add
fdecstp
pop
int3
xor
and
mov
sahf
jo
std
jbe
jmp
mov
scas
push
adc
adc
pop
push
andl
fildl
lods
jno
jbe
test
cmp
int
push
push
lock
scas
jl
and
xor
lods
stos
mov
dec
inc
xor
mov
push
iret
mov
cmp
xor
lret
pop
ret
pusha
ret
lret
and
jg
inc
xor
fimuls
dec
movsl
enter
pusha
lcall
mov
shll
push
outsb
test
pop
out
cltd
and
ret
push
cwtl
ljmp
jns
stc
push
sub
cltd
push
loope
xchg
pop
bound
ret
pop
sub
and
sbb
scas
out
lret
insl
sbb
js
or
mov
mov
or
dec
insl
test
pop
and
mov
xchg
rep
sbb
cwtl
into
jle
js
mov
xchg
adc
std
mov
pop
add
pusha
insb
jns
mov
and
dec
cmp
jno
loope
and
mov
cmp
subl
orb
in
gs
push
jmp
mov
push
out
cmpsb
test
pop
cld
cmp
shll
in
int
cltd
dec
sub
or
mov
adc
push
xor
xchg
nop
out
adc
mov
or
idivl
jmp
jne
pop
fstpl
push
mov
decb
jl
xchg
sbb
faddl
jb
je
mov
es
push
popa
mov
push
mov
xchg
add
jge
inc
leave
jg
test
int
mov
sbb
nop
push
mov
sahf
mov
cmp
mov
hlt
sbb
les
dec
ret
or
pop
push
call
adc
and
nop
fnstenv
loope
aad
ficoml
adcb
outsl
mov
inc
adc
cmp
xchg
mov
mov
mov
push
jae
mov
jge
iret
repnz
les
pushl
or
test
insb
inc
mov
in
xor
daa
dec
mov
fiadds
and
or
call
inc
and
push
pop
nop
pushf
popa
push
inc
add
mov
sbb
test
push
pop
pop
jns
out
xchg
sbb
push
enter
mov
xchg
sub
aam
movsl
loop
test
lds
lods
jecxz
dec
pop
push
and
dec
mov
lock
inc
lods
shll
ljmp
shlb
sub
xor
ds
xchg
cwtl
pop
ret
outsb
inc
push
out
rol
jne
loopne
shrb
pop
in
fwait
leave
pop
adc
cltd
add
xchg
repz
push
pop
fimuls
rclb
mov
jl
mov
mov
mov
comiss
aaa
sbbl
xor
adc
sbb
add
sbb
jae
push
pop
fistl
push
mov
or
xor
in
jl
test
dec
pop
push
outsb
mov
cmp
daa
sub
lods
jmp
loop
and
push
stc
lret
xchg
fsubl
repz
mov
and
jo
dec
push
icebp
ror
fisubrs
repnz
int3
fldenv
lcall
mov
out
xchg
dec
gs
or
xor
and
cmpsl
adc
mov
jno
dec
mov
xor
mov
mov
xor
and
push
sub
mov
cmp
mov
add
mov
inc
mov
xchg
pop
pop
aad
sub
lods
mov
dec
aad
int
pop
add
nop
inc
pop
lret
jb
fwait
ja
pop
inc
shll
out
fisubrl
in
test
dec
push
or
scas
fcompl
gs
jb
adc
jns
stos
mov
jmp
lret
lods
loop
test
call
or
cmp
pop
inc
xchg
lahf
add
cmpsb
loope
aad
inc
mov
imul
nop
fldt
mov
out
out
cmc
or
xor
push
dec
sbb
mov
icebp
scas
sahf
push
mov
insb
dec
dec
inc
inc
pop
lret
mov
fisubrs
dec
mov
bound
das
push
add
sub
push
int
xchg
repz
sbb
mov
add
jl
fstl
leave
ret
fs
jle
mov
aaa
mov
adcb
push
popa
je
scas
cmpsb
jg
mov
test
sbb
cs
std
outsb
add
aam
dec
xchg
add
adc
out
imul
into
xorl
jmp
xchg
xchg
out
int3
pushf
lret
mov
pop
into
int3
lea
mov
or
adc
pusha
or
and
xor
jb
ds
cltd
xchg
int
lcall
fstps
pop
and
pop
add
xchg
in
pop
mov
mov
movl
les
subb
sahf
test
cmp
adc
push
cmp
pop
dec
insb
cmp
cmp
push
mov
pop
xor
xchg
xchg
pcmpeqb
in
cwtl
lods
mov
aas
add
lods
sub
jle
sub
xchg
push
or
or
lcall
pop
mov
xor
repnz
jge
adc
pop
loop
insl
mov
cmp
push
ror
pushf
xor
sub
inc
inc
hlt
mov
pop
stos
inc
lods
pop
pop
dec
add
div
lret
jns
sbb
mov
dec
leave
mov
lods
sti
arpl
int3
cmp
movsl
push
jnp
subb
mov
lods
cmpsb
xchg
jge
shll
add
fistpl
adc
mov
clc
test
fadds
add
and
ret
arpl
mov
pop
repz
push
cmp
loope
or
cltd
jmp
push
pop
pop
xchg
imul
lods
mov
pop
xchg
sbb
jno
cmpsl
pop
popa
js
fdivrp
pop
out
jecxz
pop
leave
xchg
stc
je
jl
cmp
mov
movl
mov
cmp
pop
jb
aad
mov
scas
cld
into
aas
push
sbb
lds
cltd
and
stos
fstpt
mov
xor
add
mov
add
adc
push
jne
xor
out
roll
pop
inc
ljmp
or
adcl
cmp
add
pop
lcall
sahf
xchg
ja
jg
jo
das
xor
mov
mov
loop
or
jno
inc
test
mov
adcl
loop
fs
inc
popa
test
cmp
sub
jle
or
in
inc
rorb
jecxz
dec
inc
mov
scas
lds
jecxz
iret
xchg
push
pop
fdivl
xchg
cmp
cmp
lds
loop
jp
mov
push
iret
push
adc
cmp
dec
inc
ds
dec
jbe
xor
ftst
test
pop
mov
mov
enter
mov
cmp
sti
incl
jg
push
sbb
xchg
mov
aas
add
sbb
cmp
or
lods
fiaddl
lcall
addb
xor
add
mov
lss
js
sbb
nop
int3
inc
out
lods
stos
mov
pop
sbb
add
xchg
add
inc
je
testl
adc
pop
or
adc
inc
arpl
inc
mov
adcb
pop
mov
mov
in
dec
stos
sbb
adc
imul
mov
jne
into
into
mov
and
jne
dec
jbe
insb
cmp
mov
scas
rclb
dec
adc
jno
xchg
in
fs
cmp
out
stos
xchg
jmp
enter
pop
inc
sbb
adc
bound
dec
xbegin
cmp
js
sub
iret
sbb
ret
push
add
or
mov
jns
inc
cld
push
sub
cmc
nop
mov
add
call
xchg
sbb
mov
xchg
lcall
jns
pop
ficomps
cltd
or
fnstcw
dec
sub
out
movsl
xor
jl
ss
or
and
ds
sbb
adc
pop
int
lret
test
push
add
mov
xchg
mov
jne
insb
mov
xchg
inc
mov
dec
mov
lret
scas
jge
push
dec
jb
shlb
adc
sbb
sbb
mov
test
clc
es
pop
and
insb
xchg
jl
inc
dec
dec
ret
xor
cltd
lcall
cmc
std
arpl
popf
add
ljmp
lea
imul
ja
cli
iret
scas
push
icebp
and
inc
inc
xchg
rorl
test
sbb
nop
mov
push
sub
leave
out
loopne
and
fs
push
jecxz
jle
test
pop
in
iret
adc
sub
and
pop
xchg
or
sbb
es
pop
inc
sub
pop
xchg
jp
push
adc
sub
int3
sarl
cmp
and
stc
cmp
xchg
stos
push
cltd
les
push
mov
cmp
sub
pop
bound
pop
add
xchg
ja
leave
pop
daa
xor
fs
adc
sub
jno
mov
stos
cmpb
adc
dec
fs
cli
xchg
pusha
nop
pop
xor
mov
cmp
repz
sub
and
inc
mov
insb
jb
and
cli
pop
ja
cli
out
fs
jmp
cwtl
aaa
out
cmp
shrl
xchg
movb
lods
pop
add
push
mov
iret
jg
clc
scas
inc
inc
mov
mov
or
and
loope
push
mov
scas
and
stos
hlt
fcoms
and
sub
add
mov
dec
imul
fwait
ljmp
jo
lods
mov
sub
pop
adc
push
mov
dec
shl
jne
pop
bound
mov
adc
es
push
cmp
sbb
std
mov
sahf
dec
sbb
cs
xor
mov
stos
xor
cld
das
outsb
push
stc
jecxz
sbb
mov
fs
daa
fstl
dec
sub
fmuls
ss
push
adc
stos
cmp
dec
out
cmpsb
mov
out
mov
insl
ss
inc
sbb
pop
lahf
sub
fwait
fwait
adc
mov
mov
cli
pop
icebp
lods
js
subb
push
test
add
std
sub
mov
mov
pop
ja
outsl
fsub
pop
cmpsl
pop
shl
ss
sbb
jae
dec
pop
add
mov
xchg
mov
xchg
inc
jnp
push
subb
es
aas
idivl
imulb
push
jmp
add
movsl
add
inc
cmpsb
gs
mov
xchg
sub
bound
popf
mov
cmp
movsb
dec
mov
sahf
out
adc
jmp
icebp
popa
push
mov
in
cmp
xlat
sub
sub
inc
ja
cmpsb
jae
fwait
ss
push
rorl
or
aaa
fs
inc
lahf
scas
hlt
pop
rcll
ss
ja
dec
arpl
add
outsl
lods
jle
lds
mov
adc
fdivs
sub
push
adc
adcb
call
int3
or
dec
sahf
push
call
xchg
fdiv
xchg
cmp
outsl
or
ret
push
dec
jecxz
mov
push
loope
mov
mov
push
add
adc
lcall
push
and
or
xor
sbb
xchg
jecxz
outsl
aas
mov
mov
sbb
into
daa
mov
jmp
mov
jecxz
push
std
jo
xchg
ret
sar
cmp
push
adc
mov
and
imul
enter
out
cmpsl
mov
int
or
rcll
sahf
stos
mov
aam
xor
or
add
jne
aad
in
mov
pop
mov
fbstp
jnp
jle
or
in
and
mov
clc
cmc
shrl
xor
sbb
cmpb
sub
xchg
xlat
mov
and
hlt
xor
in
push
popa
imull
dec
push
je
push
js
xor
cmc
add
jo
jg
sbb
jle
xchg
push
mov
pop
sbb
stos
cltd
or
push
cld
jbe
outsl
out
stc
lock
mov
scas
js
jg
lret
fs
aam
xchg
xchg
push
jmp
mov
mov
inc
ds
mov
add
jp
out
leave
ret
pushf
and
fstl
pop
clc
mov
shlb
lods
xlat
and
fdivrl
jmp
loopne,pt
rcrl
push
adc
enter
addr16
scas
jno
das
scas
jnp
pop
pop
mov
cmp
or
inc
push
mov
inc
addr16
mov
out
and
and
fucompp
stos
fldt
icebp
in
add
movsb
lea
sub
dec
daa
shl
adc
dec
inc
cmc
imull
or
dec
pop
push
xor
shll
cmove
inc
sub
ss
sub
idivl
outsl
hlt
popf
iret
and
mov
int
sub
push
cmc
out
fists
sahf
ss
sbbl
out
xor
lods
jle
cmpsl
sbb
mov
mov
test
cmc
push
mov
arpl
out
dec
clc
adc
push
sysenter
jecxz
lock
mov
mov
les
and
in
std
rcr
add
push
or
popf
mov
fdiv
inc
inc
cld
mov
inc
stc
jb
lods
cld
es
cwtl
fdiv
or
mov
popf
lods
repz
jmp
sub
clc
push
cmp
sti
add
pop
cs
xlat
mov
das
xor
sti
dec
jge
mov
lds
cmpsl
enter
xlat
mov
mov
xor
adc
out
aam
fnstcw
repnz
icebp
add
ret
cmp
pop
popa
push
decb
test
aad
cmp
pushf
sbb
pusha
xor
fmul
div
into
cld
imul
lcall
out
inc
push
pop
push
adc
jmp
lods
dec
mul
or
inc
jmp
shlb
pop
sarb
cmp
xchg
or
fsubrl
fldenv
add
xchg
div
adc
dec
and
mov
sub
mov
shlb
or
fimull
add
ja
daa
out
mov
pop
push
xlat
sbb
push
xchg
mov
xor
mull
subl
out
jecxz
subl
ss
cs
adc
inc
sub
cmp
lret
leave
pop
lcall
ret
sub
xlat
mov
xor
push
ss
adc
cli
bswap
xchg
adc
pop
mov
inc
jnp
push
sub
call
test
pop
mov
push
add
hlt
insl
mov
sbb
fistpl
rcrl
pop
std
fnstenv
insb
pop
fstp
push
pop
hlt
negl
sbb
jecxz
sbb
iret
lods
push
sbb
iret
inc
addr16
fs
and
icebp
clc
mov
dec
out
in
cmpb
cmpl
repnz
xchg
or
xchg
out
sub
lea
cmp
sarl
lds
dec
outsl
or
or
iret
inc
push
inc
mov
and
adc
cmp
dec
in
mov
out
js
xchg
xor
xchg
dec
out
jl
fstpl
add
push
popa
loopne
ja
test
dec
in
push
jmp
test
sbb
jo
scas
cmp
xor
gs
xor
or
pop
das
mov
or
repz
or
sub
and
btc
in
push
icebp
sbb
or
je
sbb
scas
in
lods
lcall
stos
inc
decb
mov
das
jne
clc
aam
mov
pusha
xchg
inc
mov
lret
in
sti
and
adc
repnz
je
xchg
loope
inc
clc
add
xor
cwtl
leave
inc
pusha
xor
xor
mov
cli
xlat
stc
xor
int
sbb
mov
fmul
lcall
mov
and
mov
fld
mov
es
sbb
arpl
jp
adc
inc
pop
inc
je
xchg
cmp
push
ljmp
xor
jp
mov
jno
push
sub
push
and
mov
add
dec
aam
or
mov
xchg
mov
mov
mov
faddl
cs
dec
scas
testl
xlat
add
pop
enter
adc
add
fcomp
cmp
push
leave
or
adc
xorl
pushf
mov
adc
cmp
inc
stos
push
mov
push
cmp
bound
outsl
or
loope
lea
in
jns
int
scas
mov
cwtl
lds
test
lock
push
sbb
ds
rorl
bound
push
mov
loop
mov
xchg
add
into
sbb
mov
pop
cmc
sub
pop
inc
cmpsb
xorl
sub
mov
mov
faddl
aad
add
aam
and
mov
jge
je
int
or
lahf
stc
or
xlat
adc
insb
inc
push
cmp
fwait
aaa
lret
test
inc
mov
ret
ss
mov
pop
mov
jbe
mov
int3
cmp
sbb
adc
movl
loop
repz
andl
dec
ret
push
mov
fdivr
jmp
or
mov
fldt
les
shl
and
sbb
pushf
daa
dec
aas
mov
cmp
mov
mov
inc
xor
in
inc
fs
jl
clc
jb
lea
sbb
ja
arpl
push
sbb
xor
xchg
in
mov
mov
lcall
adc
test
push
cltd
add
mov
cmp
push
sbbl
scas
inc
arpl
stos
mov
push
cmp
stos
cmp
mov
xchg
sbbl
popl
subb
xchg
movsl
xchg
cwtl
cmc
mov
loop
push
int
sti
sbb
sub
aas
sbb
scas
stos
adc
jb
xchg
stos
cmpsl
mov
loop
push
pop
xchg
and
dec
clc
and
mov
add
mov
lods
std
mov
sub
jae
jne
push
cmp
jg
in
jne
sub
push
lock
jo
xor
xor
into
out
mov
bound
mov
pop
fimuls
adc
adc
pop
pushf
mov
xorb
and
mov
jl
stc
dec
ljmp
popf
fucomp
mov
shll
popf
push
fldl
dec
gs
test
inc
pop
ja
inc
rorb
das
sarl
lret
sub
outsl
inc
inc
inc
in
jle
or
repnz
pop
pop
pop
sbb
mov
dec
arpl
int3
jmp
aaa
popf
cwtl
and
std
clc
test
cli
jl
incl
cmpsb
subl
addb
pop
aam
jo
xchg
cmp
sub
enter
xchg
shr
and
bound
xor
push
jns
gs
xchg
std
push
xchg
shll
and
or
cmp
shl
jmp
jne
lcall
aaa
or
sbb
sbb
es
lods
leave
cmpsb
push
add
pop
je
adc
cmpsb
jecxz
js
xlat
adc
or
push
mov
ss
outsl
or
insl
sbb
jo
or
cmpsl
pop
nop
push
mov
movsl
jae
and
js
test
xchg
hlt
cmp
aad
add
add
xchg
insb
push
sbbb
sub
sub
ret
pop
pusha
shl
inc
stos
out
mov
sti
cli
mov
mov
daa
fsubl
dec
enter
call
inc
mov
or
adc
inc
loopne
inc
inc
imul
inc
pushf
clc
mov
insl
fmulp
xchg
rcrl
lock
mov
lret
fstpl
insl
jg
jbe
jnp
jo
jns
sbb
leave
sbb
test
xchg
pop
nop
data16
pop
cmp
and
add
xchg
idiv
ret
int3
cmpsb
test
in
je
pop
sbb
loopne
cmp
push
insb
mov
jb
enter
mov
arpl
cltd
outsb
lds
fmull
cltd
and
add
cmpsl
icebp
test
jns
insb
test
xor
pop
xchg
in
rorb
cli
in
xor
out
pushf
cmpsb
jp
cltd
jne
adc
jmp
jmp
or
test
data16
cli
daa
pop
movswl
push
pop
and
aaa
mov
loop
jmp
out
test
push
movsb
inc
pushf
jl
in
fsubl
lock
loope
mov
mov
negb
cli
loop
adc
jmp
push
fidivrl
leave
adc
in
loopne
cld
sarl
pushf
adc
cmp
outsb
jno
xchg
pop
rcrb
add
sahf
mov
push
lret
pushf
in
mov
dec
adc
dec
jmp
jae
stos
nop
jb
mov
ds
xor
shll
dec
les
stc
cmp
das
jg
mov
add
and
cltd
leave
jbe
loope
pop
push
jmp
shll
test
mov
dec
or
outsb
shlb
lds
pop
repnz
hlt
push
push
xchg
iret
xor
mov
push
adc
mov
mov
aaa
in
lds
pop
lret
jle
pop
sarb
pop
stc
arpl
outsb
fisttpll
fs
inc
add
jl
std
cmp
loop
loope
imul
adc
inc
dec
dec
int3
in
in
ret
mov
cwtl
pop
push
lock
lret
pop
orb
inc
mov
sbb
dec
jl
push
rorl
sbb
push
loope
mov
mov
int3
jne
insl
or
dec
add
mov
out
or
jp
or
out
out
fidivl
lcall
pop
jp
mov
mov
sbb
or
in
cmp
cli
xor
loope
movb
mov
xchg
cld
out
cmp
mov
dec
inc
dec
add
dec
ret
out
pop
out
xor
mov
enter
jnp
test
mov
outsb
mov
daa
add
fbld
cmc
insb
stos
fs
sbb
nop
and
pop
gs
push
push
out
xchg
push
mov
test
pop
popa
mov
dec
sbb
mov
aam
jg
sti
mov
bound
or
mov
or
inc
ret
push
jg
xchg
shrl
mov
inc
cmp
in
jb
jecxz
fwait
movsl
fimuls
repz
or
push
stos
mov
xlat
out
repz
fwait
sub
add
test
xchg
mov
loopne
and
fstpt
xchg
test
sbb
pop
ljmp
test
jp
mov
mov
ljmp
and
fadds
ss
lock
mov
sub
or
jle
and
dec
shlb
push
sarl
ljmp
outsb
icebp
push
pop
dec
jns
fcoml
jmp
pop
pop
mov
in
out
sbb
xchg
cmp
in
inc
add
mov
or
sub
in
xchg
xor
inc
xor
sbb
ret
push
and
xor
mov
mov
and
push
push
mov
xor
push
lods
rcll
xchg
pop
gs
ret
sbb
fwait
or
mul
pop
jp
aam
cli
lock
fmulp
inc
in
mov
dec
fwait
cmp
mov
enter
xchg
sahf
mov
pop
pop
sbb
mov
inc
testl
ljmp
push
mov
lock
xor
movsl
sub
dec
mov
retw
and
mov
mov
jmp
or
xchg
adc
xor
xor
push
jb
mov
aad
add
cmp
loope
xor
aad
and
ja
stos
test
mov
adc
adc
cmpsl
insb
stc
pop
in
mov
pusha
and
dec
jle
outsb
or
es
popf
shrb
mov
jne
ficompl
dec
lods
movsl
sti
xchg
enter
sbb
dec
jg
arpl
mov
xchg
mov
push
and
cli
jg
shrl
lcall
mov
popf
movsb
inc
jo
cli
adc
cltd
lret
and
lock
mov
dec
into
and
mov
movsb
pop
daa
cmc
jne
sbb
and
imul
pop
add
mov
and
xor
into
out
mov
mov
fs
fldt
push
cmp
aas
dec
outsl
loop
push
pop
jp
mov
lahf
pop
jnp
xchg
adc
jno
and
pop
xchg
sub
test
jp
sub
mov
cmc
mov
mov
xor
and
rolb
cmp
sbb
mov
js
sub
icebp
inc
fcmovnbe
jns
nop
xchg
ds
xlat
negb
xor
push
sbb
inc
mov
divb
daa
add
mov
cmpsl
ljmp
adc
fwait
mov
xor
out
jb
lods
mov
or
mov
fisubrl
sub
sbb
fisubs
pop
push
icebp
pop
into
pop
insl
insb
lret
push
jle
mov
xchg
jne
mov
daa
xchg
cmp
xlat
ljmp
xlat
jns
push
jg
sub
push
rcrb
aaa
push
push
jecxz
leave
jae
jno
inc
add
pop
pop
pop
push
push
add
and
inc
or
mov
mov
fstpt
push
scas
cli
gs
xchg
in
xchg
popf
push
xchg
rclb
cmp
add
xor
xchg
push
int3
jbe
das
push
inc
or
mov
mov
mov
inc
push
dec
jecxz
push
fcoml
mov
shlb
adc
fdivl
sbbb
test
pop
andb
cld
fdivrs
into
ss
fsubrs
mov
flds
push
add
xor
push
data16
sub
mov
adc
and
and
inc
mov
ror
mov
negl
xchg
imul
xchg
ljmp
xor
mov
xchg
mov
stos
clc
and
rorl
popa
push
call
nop
add
cmc
dec
insl
test
repnz
ret
pop
push
aam
shrb
aas
int
sbb
sub
inc
cmc
pop
test
lahf
sub
cmpsb
xchg
and
pop
fisttpll
stos
loopne
add
nop
mov
into
lds
xlat
add
and
mov
loope
fisttpll
jle
fwait
jno
dec
cmpb
cmp
jl
mov
std
and
xor
jbe
dec
cltd
cmp
insb
stc
pop
icebp
add
sub
mov
in
test
mov
inc
sti
sbb
cmp
shlb
xlat
cmp
add
data16
std
pop
fisubrs
or
add
addr16
sbb
mov
push
xlat
das
mov
je
add
les
sbb
or
cmp
inc
cli
dec
add
std
gs
pop
push
pushf
gs
in
push
lods
add
push
jbe
pop
mov
data16
test
mull
in
sub
daa
ljmp
ja
outsl
fidivl
in
or
xchg
repz
adc
mov
sahf
dec
mov
mov
inc
scas
lret
or
or
add
push
ljmp
sub
daa
aaa
push
ss
mov
inc
scas
mov
ss
push
cmp
mov
pushf
inc
shll
gs
lds
es
sub
push
pop
xchg
cli
lcall
movsb
mov
jns
xor
in
pop
outsl
andb
test
stc
scas
push
jg
dec
test
jge
and
mov
mov
xor
cld
loope
push
fs
es
xchg
and
bound
xlat
push
cmpsb
cmc
cmp
shrb
xor
out
mov
pop
popa
mov
clc
fs
xor
repz
out
cmpsl
inc
xor
iret
lock
adc
mov
push
int
mov
aas
jbe
xchg
jo
or
xchg
sub
mov
push
aaa
sub
aam
and
pushf
imul
pop
stc
out
adc
push
dec
cmpsb
add
call
insl
les
sub
cmc
sub
sbb
hlt
aam
push
std
mov
jg
shrb
or
clc
stos
mov
mov
adc
mov
fistps
loop
popa
xchg
mov
filds
pop
sbb
and
stos
xlat
mov
lds
imul
cmp
loop
inc
and
test
stos
test
idivb
stos
js
sbb
jg
sub
loop
and
in
repz
aad
mov
pop
icebp
and
dec
push
and
jg
sub
xchg
xchg
mov
movsl
push
repnz
lret
and
sahf
inc
mov
testl
mov
mov
fstpt
mov
stos
movsl
push
test
cmc
sbb
shlb
dec
inc
fwait
dec
cmp
jns
inc
dec
sarb
adc
adc
pop
testl
addl
aad
insl
and
inc
lea
adc
push
xchg
dec
inc
pop
mov
dec
mov
repz
divl
imul
mov
dec
mov
sahf
sbb
mov
movsl
mov
add
sarb
lahf
xchg
dec
aam
sub
or
dec
push
pusha
xchg
and
xchg
loopne
jp
or
adc
or
mov
jge
fs
popf
jnp
mov
cmpsb
mov
push
adc
fisttpll
xchg
mov
ja
fisubrl
cmp
adc
sub
jle
cwtl
dec
loope
inc
xchg
pop
incl
sub
xor
push
notl
cmp
aad
stos
mov
outsl
mov
cld
je
dec
or
dec
lods
das
ljmp
mov
mov
out
jno
int
pop
dec
lret
mov
add
enter
insb
cmp
out
sbb
or
push
lret
push
insb
mov
and
jne
mov
ficoms
sbb
in
bound
pop
mov
and
cwtl
inc
adcl
aaa
sarb
inc
inc
icebp
jbe
or
mov
jl
nop
in
xchg
test
dec
imull
out
out
pop
mov
mov
inc
mov
mov
xchg
sbb
jne
jmp
cmc
mov
loop
movsl
aad
sub
sub
addr16
adc
fisubs
sub
cmp
mov
cmp
add
add
lock
out
cmp
sub
sub
xchg
adc
fisubrs
mov
cmp
in
imul
ret
call
xchg
lock
les
or
mov
or
repnz
fwait
lahf
push
push
mov
or
pop
testb
fadds
movsl
inc
push
mov
adc
dec
jae
imul
pusha
clc
testb
movsl
aad
shlb
sbb
cmp
rol
push
dec
adc
push
xchg
mov
fwait
lcall
test
out
or
cmc
dec
fldt
add
add
je
push
dec
pop
cmp
mov
loope
mul
aam
push
xchg
fisubs
xorl
in
dec
push
pop
addr16
fistl
mov
outsb
sub
and
adc
and
cmpsl
nop
xchg
imul
addb
lcall
and
leave
ret
stos
rorl
inc
loop
shll
mov
sbbb
xlat
cltd
sbb
inc
lret
cmp
sbb
ret
or
fmuls
and
xor
dec
sub
mov
daa
inc
dec
adc
jmp
xor
out
imul
ds
fldenv
lock
int
sbb
adc
pusha
dec
or
cmp
imul
out
shll
xchg
es
xchg
pushf
enter
pop
and
lock
inc
out
lock
enter
xchg
enter
clc
or
cmp
ja
sti
lret
sub
stos
sbb
sti
scas
pusha
and
jecxz
pop
sub
call
and
loopne
movsl
cmpsl
and
jmp
mov
xchg
mov
shlb
push
add
push
inc
ss
sub
and
dec
test
or
mov
je
cmp
adc
add
cmc
mov
test
leave
iret
adc
mov
ret
fisttpll
orl
pop
repz
and
ret
stos
push
mov
call
add
fisttpl
iret
xor
imul
adc
dec
mov
ja
push
insl
test
lock
stc
and
sahf
nop
cltd
mov
jmp
mov
push
mov
cmp
sub
int3
mov
jp
fwait
outsb
xchg
test
or
fcmovne
rcrb
jne
push
add
test
pushf
je
jg
hlt
daa
cwtl
sub
cmp
int
gs
push
push
cmp
out
leave
rorl
dec
cmp
push
clc
pop
xor
adc
out
in
in
xchg
or
add
pop
jnp
fs
test
mov
xor
sbb
arpl
loopne
mov
pop
mov
lea
push
jb
and
mov
aam
rol
stc
lock
int3
push
sub
jle
pop
xor
fsts
xchg
push
sbb
push
movsl
adc
test
out
popa
div
lock
repnz
or
fldcw
popf
sub
scas
xchg
add
lea
fcmovnb
loope
fwait
data16
add
and
call
mov
mov
sar
and
call
xchg
in
in
cld
cmp
jbe
movsb
or
fsubr
cmpsb
inc
cmp
xchg
fisttpll
rcrb
subl
pop
fs
or
out
cmp
and
dec
inc
pop
sub
sub
movsl
arpl
ss
test
ja
push
sti
aam
add
rcl
cmc
xor
pop
mov
push
and
mov
mov
je
cli
mov
dec
xchg
adc
xchg
jae
add
lods
mov
in
lret
pop
push
lret
fsubrs
add
or
cmpsl
cmc
movsb
shll
push
daa
pusha
cmp
daa
add
sub
adc
rclb
daa
or
mov
inc
stc
popa
inc
fs
btr
movsb
mov
pop
lods
mov
incb
ret
inc
out
mov
lock
fists
popa
test
dec
jp
test
push
xor
xor
push
and
xor
loopne
and
js
dec
mov
je
mov
pop
sbb
pop
push
lahf
pop
lret
cmp
std
adc
aam
mov
mov
lret
idivb
std
adc
pop
jp
mov
arpl
fildl
mov
aam
out
cmpsl
pusha
nop
sbb
inc
in
lcall
cwtl
and
sbb
shll
shlb
jno
sbb
cmp
mov
cmc
cmc
mov
xchg
push
cmpsl
push
xor
mov
xchg
loopne
into
fstps
mov
jge
in
div
fwait
add
cmp
leave
add
push
or
or
inc
push
pop
mov
pop
jnp
add
daa
cmc
push
ret
pop
push
cmp
lret
push
dec
add
sarb
add
push
dec
sub
insl
stos
xchg
call
fistps
roll
inc
adc
loop
sahf
aas
hlt
scas
cmpb
insb
test
inc
mov
push
leave
lret
hlt
shl
daa
daa
outsl
and
aad
lds
mov
inc
stos
push
test
sub
pop
mov
pop
rcrl
pop
aaa
jb
je
mov
or
fcmovnu
cltd
adc
cltd
es
push
lcall
xchg
cmpsb
ja
mov
into
dec
shll
testb
mov
xchg
adc
scas
jecxz
fisttpll
push
jp
imul
xor
das
fwait
cli
sub
cmp
jo
or
add
test
notb
xchg
sti
xor
push
movsb
cmpl
jge
in
lahf
push
aas
sbb
xchg
inc
jnp
fisubrl
lcall
lahf
inc
or
pop
jnp
pop
inc
jp
jo
leave
mov
mov
xchg
add
cltd
dec
sti
dec
dec
mov
arpl
jge
imulb
movsb
loop
jno
push
lds
popf
mov
push
add
sti
push
imul
cmpsb
enter
int3
es
lds
xor
sub
scas
sbb
pop
push
add
sarb
dec
popf
lods
pop
imul
gs
loope
adc
mov
jge
fistpl
cmp
in
mov
xor
adc
int3
mov
cwtl
cltd
adc
mov
sbb
jns
mov
jo
mov
pop
inc
pop
notl
add
stos
cld
dec
mov
or
les
ljmp
jnp
shrb
pop
imul
pop
or
aad
xchg
pop
stc
and
and
inc
loope
add
rcr
add
repz
test
xchg
sbb
push
xchg
mov
mov
aas
sub
enter
gs
daa
xchg
sbb
arpl
push
xor
xchg
js
pop
loope
push
pop
jmp
test
add
sbb
in
and
pop
mov
test
idivl
mov
lock
test
movsl
cwtl
jle
jp
aad
cmpsb
fs
pop
sbb
or
pop
aam
push
dec
ret
je
imul
xchg
cmp
cmp
adc
std
push
push
mov
mov
mov
cmpsb
stos
and
in
inc
mov
mov
jns
int
jmp
movsl
or
xchg
sbb
js
pop
jge
cmc
xlat
repnz
out
hlt
in
cmp
add
repnz
jb
mov
mov
cld
add
jns
sub
mov
add
xchg
test
pop
and
icebp
dec
mov
jnp
inc
lock
adcb
sub
test
lret
jno
div
fisubs
push
fwait
aad
pop
xchg
push
loop
sbb
rclb
dec
or
push
xor
ret
int3
mov
sub
addr16
mov
jl
mov
xchg
imul
aas
adc
jne
and
lret
push
loope
pop
cmp
ret
stos
rep
mov
mov
mov
and
out
testb
iret
aas
cs
subb
mov
mov
repnz
loop
es
adc
xchg
mov
push
pshufw
daa
or
jae
mov
xlat
mov
jae
scas
movsb
or
sti
mov
dec
movsl
inc
cmp
jmp
sbbl
add
mov
pop
xchg
lods
cltd
xchg
nop
lds
and
mov
pop
xor
pusha
cmpsb
fisttpl
push
xchg
stos
cmpsl
rolb
fisubs
or
insb
pop
sbb
mov
ljmp
dec
fcomps
cmp
jae
fists
popa
stos
in
cwtl
iret
jne
and
jb
popf
lret
cmp
jp
sub
add
mov
pop
sti
fldenv
dec
subl
mov
add
dec
scas
jmp
popa
and
popa
inc
dec
push
xchg
les
and
inc
clc
cmc
and
arpl
dec
add
mov
cmp
js
jbe
repnz
adc
cltd
jae
stos
xchg
dec
dec
nop
mov
xor
push
test
sbb
jno
scas
or
push
xor
mov
push
push
subl
loopne
mov
stc
sbb
imul
aad
push
jno
mov
leave
mov
std
push
shr
sub
ret
mov
xchg
addr16
push
inc
mov
push
inc
fsubrs
popf
fld
leave
push
cmpsl
insb
dec
sub
movsb
pop
pusha
lea
out
xchg
adc
and
dec
jne
enter
sub
lds
jno
or
mov
cmp
push
mov
in
inc
es
pop
popa
dec
dec
push
cmp
push
dec
mov
xchg
and
les
cmp
pop
lods
cs
fsubs
imul
pop
jge
or
sbbb
dec
ljmp
hlt
jmp
dec
jo
negb
subb
fwait
mov
repnz
fcmovbe
shrl
xchg
imul
bound
adc
iret
xchg
add
enter
jecxz
les
dec
xchg
roll
cmpsb
popa
mov
adc
nop
in
dec
mov
sub
jo
mov
xor
lds
and
addl
mov
and
inc
cmp
mov
and
push
fldt
cmpsb
loop
aam
sbb
test
xor
cmp
testb
sub
loope
out
stc
push
ss
or
inc
fcmovu
sbb
xchg
mov
pop
test
mov
fimuls
lea
sub
or
int
jae
mov
mov
bound
push
fcoms
xor
dec
mov
out
sub
jge
lahf
movsb
shrb
ret
add
xchg
dec
mov
jne
jl
mov
iret
call
loope
fwait
add
clc
lea
imul
lcall
fs
pop
shl
js
ret
pop
cmp
xchg
sahf
jnp
mov
sub
dec
lds
mov
lahf
std
or
popf
imul
lahf
testl
mov
inc
lcall
andl
sub
loopne
jecxz
inc
sbb
mov
push
mov
lods
add
sbb
loope
in
in
arpl
leave
jl
pop
fimull
pop
call
lock
pop
pop
dec
jb
test
push
jne
xor
mov
mov
dec
adc
aas
mov
loop
add
ret
ret
cmc
sbb
test
aas
idiv
push
cmovle
call
jge
fistps
lods
out
inc
mov
cltd
test
adc
das
jecxz
mov
cmpsl
or
jae
add
add
icebp
inc
sahf
push
js
push
sub
sahf
cmp
std
cltd
cmp
icebp
scas
ljmp
mov
sbbl
aam
pop
insb
mov
xchg
repz
inc
or
mov
lea
arpl
pop
cmp
hlt
mov
fmull
or
fdiv
rcll
push
in
hlt
subl
cmp
data16
repz
mov
fldenv
clc
xlat
cmpsb
cwtl
add
cs
faddp
int
sti
pushf
jae
and
mov
sahf
or
dec
cs
scas
mov
sqrtps
popf
adc
push
adc
into
push
push
cmp
lret
enter
shrl
popf
das
lret
ljmp
in
or
rorl
push
dec
sub
pusha
lds
nop
aam
xlat
pop
adc
inc
inc
inc
dec
xchg
scas
popa
push
push
sub
xchg
dec
in
dec
xor
pop
mov
xchg
or
or
ds
pop
std
icebp
fnstcw
aaa
xchg
push
xchg
cld
inc
xchg
mov
cmpsl
add
in
decb
insl
push
rclb
sti
jge
dec
repz
xchg
outsl
cltd
shlb
ja
stos
movsb
rolb
negl
jle
ljmp
stc
gs
jg
dec
mov
fs
fdivr
or
and
push
mov
loop
mov
push
mov
into
jae
iret
push
cs
cmp
cmp
mov
mov
push
jbe
xchg
fnstsw
jle
adc
test
movsb
add
inc
sbbl
cmp
leave
inc
add
add
jl
inc
jnp
dec
xchg
pop
loop
lds
add
mov
in
mov
hlt
and
jmp
pop
ljmp
mov
jecxz
inc
insb
decb
cmc
aaa
shrb
fmuls
clc
jns
jge
cld
out
jne
xor
push
mov
divps
ud1
push
push
push
test
and
shrb
aad
cmc
adc
orl
mov
fwait
in
cli
scas
or
test
mov
jmp
mov
loope
lods
push
xorl
pop
inc
and
mov
ret
std
xchg
imul
in
bound
mov
je
lret
sahf
sub
cs
popf
pop
fs
data16
loopew
xor
and
push
or
xchg
adc
dec
push
adc
loope
and
xorl
dec
je
push
loop
xor
jmp
inc
mov
cmp
sti
mov
jns
loopne
ja
repnz
sbb
pop
push
and
add
add
imul
mov
pop
adc
rcll
leave
sahf
inc
sti
or
push
mov
dec
addr16
inc
in
push
lret
pop
into
addr16
or
pop
cmpsb
mov
ret
jle
xchg
arpl
sahf
xchg
push
push
jg
lods
sub
out
push
sbb
cli
pop
lret
cmp
pop
insl
mov
push
dec
dec
sbb
fsubrs
lret
imul
inc
jp
sub
push
or
xor
out
add
push
inc
shlb
adc
rcrb
daa
stc
addl
lock
xlat
pop
xchg
nop
push
pop
jmp
nop
cwtl
lock
dec
lahf
pushl
cmp
aam
test
add
or
push
dec
and
sub
mov
jne
shll
cmp
sub
inc
fcoms
mov
test
and
mov
xchg
aas
add
fdivs
push
pop
mov
out
jge
push
rolb
inc
arpl
fwait
or
mov
inc
or
or
xor
jge
cmpsl
sti
data16
xor
insb
jle
idivb
mov
xor
push
stc
stos
push
pushf
in
jg
frstor
ljmp
xor
mov
mov
pop
jns
lods
sahf
test
insl
test
adc
dec
pop
pop
and
mov
rolb
movsl
mov
out
cltd
push
inc
cmc
fmul
hlt
add
inc
and
inc
outsb
test
mov
mov
sub
aad
sbb
inc
aas
les
xor
mov
pop
cmc
mov
add
imul
cli
out
leave
dec
into
fildll
xchg
in
adc
aas
dec
movsb
xchg
ljmp
dec
or
and
add
mov
xor
jle
cmp
negb
enter
push
movb
loope
add
push
sbb
in
gs
dec
cli
push
mov
mov
mov
ret
arpl
or
pop
pop
scas
add
cld
lcall
nop
std
orl
daa
sbb
or
ret
mov
xchg
dec
mov
push
rorb
adc
mov
sbb
mov
ja
mov
jl
adc
jbe
dec
cmpsl
and
adc
ror
or
jns
mov
in
mov
xchg
or
mov
dec
mov
lods
cmp
xchg
xlat
xchg
pop
popa
inc
xlat
lcall
xor
mov
sub
addr16
or
rcrb
push
stos
push
mov
adc
rcrb
pop
inc
aam
inc
incl
mov
add
dec
mov
aam
arpl
adc
pusha
rclb
shr
jbe
inc
sub
mov
xchg
mov
jbe
jne
or
push
push
sub
sub
dec
sub
fwait
iret
lods
testb
data16
out
mov
and
test
push
cmp
cmp
or
pop
dec
dec
cmp
inc
loopne
popf
mov
push
pop
inc
and
outsl
xor
xlat
lret
movsb
xchg
ret
in
mov
add
subl
add
push
lret
fcoml
push
pop
lds
add
jge
jne
jmp
leave
mov
mov
jecxz
outsb
test
inc
mov
dec
loop
mov
add
mov
and
lds
gs
mov
adcb
clc
jmp
cwtl
ss
icebp
int3
decb
push
loopne
repnz
adc
rcrl
jbe
xor
mov
inc
loop
jecxz
mov
push
call
lods
inc
xchg
aam
pop
adc
in
add
in
fs
shl
xlat
jnp
int
inc
jg
sti
imul
sub
inc
jp
or
lahf
jb
out
test
mov
loope
test
mov
fisttps
es
mov
push
lods
jmp
popa
adc
pop
das
jg
mov
pop
cld
add
jp
aas
sub
ljmp
shl
call
cmp
or
push
in
xor
dec
push
jle
popa
cmpsl
repz
mov
mov
in
mov
push
or
aad
rorl
in
mov
inc
mov
mov
push
and
daa
in
inc
inc
mov
sub
arpl
stos
daa
push
and
das
sbb
mov
jnp
sti
imul
push
sbb
shlb
mov
push
test
sub
xchg
or
mov
inc
lret
pusha
xchg
or
xor
mov
imul
fimull
adc
stos
std
and
les
inc
inc
imulb
jae
sbb
aaa
mov
adc
xor
jae
mov
bound
es
ss
sbb
add
cmp
and
ss
xchg
in
mov
or
imul
fxch
es
push
stos
jle
negl
in
shll
xor
lds
faddl
jns
lea
in
iret
fprem1
pop
xchg
or
inc
push
flds
or
sbb
push
lods
dec
and
cmp
out
nop
fdivrs
cmpsb
in
and
testb
or
sub
fisubl
xchg
add
pop
push
ds
xor
adc
in
rcll
enter
shrl
push
out
jno
or
call
and
pop
add
add
xor
fstpl
xchg
jecxz
into
push
fsts
mov
push
adc
mov
jno
into
fwait
cmp
mov
aas
mov
mov
push
nop
out
movsl
fwait
popf
jns
sahf
inc
mov
add
cltd
insl
jno
inc
jmp
inc
mov
in
jl
xchg
add
xchg
popa
test
jne
arpl
add
push
jg
lcall
rorl
aad
cmc
bndstx
xlat
cmpsl
dec
insb
and
cwtl
or
pop
sti
pop
mov
enter
out
das
sbb
inc
xchg
push
in
jo
insb
cmpsl
dec
outsb
lcall
test
ss
pop
out
cwtl
in
xchg
push
cmpsl
in
fs
arpl
push
jecxz
and
adc
dec
xchg
lods
cmpsb
add
xchg
sbb
and
add
rclb
adc
int3
or
pop
movsl
cld
sub
xor
inc
push
stc
pop
xlat
fimuls
mov
xchg
and
add
cltd
xchg
out
inc
adc
clc
js
pushf
jno
inc
out
stos
aam
fdivrl
in
test
adc
stos
mov
cmp
test
jbe
adc
in
sub
and
enter
repz
lldt
mov
cmp
dec
test
pop
adc
insl
and
push
push
mov
call
movsl
mov
or
stos
insb
dec
xor
mov
push
mov
adc
or
cmpsl
incb
cwtl
or
lret
movl
xchg
or
out
in
rcr
dec
sub
jns
fwait
aas
mov
cld
fcomps
fisttps
loope
pushf
xlat
xor
repz
fsubrp
adc
adc
nop
add
notl
ret
test
ja
cltd
pop
sub
lock
inc
mov
push
inc
stos
mov
sub
out
pop
pop
mov
jecxz
mov
xor
pop
mov
or
sahf
adc
jns
xchg
sub
or
loopne
or
iret
jecxz
fbld
stos
cmp
fildll
mov
push
jecxz
ficoml
adcl
test
mov
mov
mov
adc
xor
neg
lcall
xchg
adc
aam
jae
loopne
sbb
sbb
or
clc
repnz
inc
inc
push
add
and
movsb
std
and
sbb
fs
bound
sub
push
test
shr
fmuls
leave
mov
jmp
cmp
or
stc
lahf
jg
sbb
test
cs
xor
sub
add
mov
cmpsb
xor
cmpb
out
fnstenv
sub
loopnew
out
sbbb
pop
cmc
jo
push
push
adc
test
pop
push
jl
push
jle
test
xor
aad
popa
or
es
stc
out
mov
test
cwtl
rorb
xchg
pop
cwtl
ss
push
xchg
mov
jo
std
es
cwtl
pop
leave
je
mov
fisttps
lock
jl
pusha
push
mov
push
dec
test
rorl
fsub
pop
jae
fisubl
addr16
and
testl
std
mov
and
aas
mov
out
in
xchg
pop
push
jle
int3
aaa
lret
cmp
and
sbb
cmp
std
repnz
jle
popl
xorb
lret
in
sbbb
frstor
sub
lahf
jmp
fcmovne
xchg
stos
sub
jo
fdivrl
push
movsb
sti
iret
push
shl
mov
dec
dec
fisttpl
inc
or
in
jp
jnp
aam
xchg
insl
enter
ret
push
mov
insb
cmp
add
push
mov
jle
inc
popf
das
subb
mov
jbe
and
mov
cwtl
jns
rclb
and
and
test
sub
push
inc
cmp
mov
fnstsw
mov
mov
loop
pop
xor
lahf
sub
in
mov
fmull
ffreep
iret
cwtl
cmpsb
jge
repnz
mov
rcll
fiadds
inc
in
mov
sbb
xchg
dec
movb
ficoms
ret
popa
daa
mov
xor
in
mov
adc
out
adc
inc
popl
or
inc
stos
cmp
stos
andl
icebp
cld
jge
scas
cmp
xchg
inc
inc
pop
jmp
cmp
subl
sbb
sbb
test
stc
loope
sarl
jno
inc
sahf
ret
in
and
jb
es
into
cmp
or
popa
jmp
push
push
out
bound
iret
decb
mov
cmpl
xchg
mov
imul
shll
mov
dec
ficomps
xor
lods
popa
test
mov
mov
mov
mov
sbbl
imul
adc
cld
adcl
movsb
xchg
pop
dec
adc
lds
mov
xor
ret
fidivrs
xor
fdivrs
ds
mov
adc
movsb
fbstp
ret
push
jae
in
sbb
add
add
xorb
je
add
gs
sub
dec
imul
js
addr16
inc
adc
fiaddl
inc
jbe
jge
mov
outsl
mov
outsb
test
mov
sbb
stos
xor
mov
sahf
mov
inc
les
cwtl
in
cmpb
jg
dec
cltd
lea
xor
jnp
add
popf
hlt
rcll
pop
in
inc
mov
je
sahf
subl
cltd
or
lods
mov
lret
jmp
sbb
xlat
sbb
icebp
or
lds
imul
xchg
test
int
dec
or
push
push
stos
adc
push
mov
xchg
ja
faddl
out
mov
adc
loope
push
push
int3
push
jb
sti
fidivrl
pop
or
add
mov
mov
loope
mov
mov
xchg
xchg
xor
in
cmc
sbb
dec
jno
jmp
and
sahf
popa
cld
idiv
lds
in
and
je
mov
call
aas
push
inc
fucomip
pop
inc
push
push
sub
cmpsl
mov
or
bound
test
mov
fdivrl
js
adc
stos
loope
jo
sub
sbb
pop
xor
mov
and
insl
shll
mov
in
adc
and
cmp
in
jno
jmp
add
mov
xchg
stos
xor
push
test
icebp
xchg
add
jno
pop
aad
lds
ret
ret
and
mov
gs
push
mov
adc
inc
or
cs
dec
je
jg
test
rcr
sub
test
xor
stos
dec
push
outsb
cmp
int
movb
xlat
mov
dec
int
orl
and
mov
cwtl
cmp
sbb
mov
xchg
xlat
lret
hlt
mov
sbb
fisubs
xchg
out
ss
xchg
int
popa
push
pop
les
popa
icebp
jnp
sti
inc
xchg
push
inc
mov
xor
xchg
mov
adc
pop
adc
mov
sahf
mov
mull
loop
and
shll
call
dec
stos
iret
addb
mov
test
add
inc
mov
in
adc
sub
test
mov
out
xor
mov
dec
std
in
stc
out
jmp
out
adc
fs
es
lcall
aas
and
sti
push
pop
adc
xchg
cmp
repz
sub
in
xchg
mov
xchg
orps
int
push
jl
mov
xlat
xor
addr16
mov
stos
cmc
mov
adc
sub
leave
pop
iret
lcall
sub
pop
inc
outsl
xor
mov
mov
sti
or
mov
push
dec
jbe
addl
cmpsl
dec
xchg
or
jg
jae
sub
movsl
ret
in
mov
fstps
adc
dec
mov
or
xorl
push
jl
test
jmp
push
mov
jle
in
mov
ret
add
shll
les
jl
adcl
adc
loop
negl
jl
adc
nop
insl
inc
inc
or
jle
ss
jle
fisttpl
lcall
dec
and
jo
rcrl
sub
fcomps
xor
ss
adc
adc
pushf
andl
test
mov
cmp
in
cmpsb
jl
cmp
out
movsl
and
jb
lahf
negb
add
push
xchg
mov
lods
and
xor
hlt
pop
or
fdivr
ret
push
int
cmp
jae
pushl
xchg
daa
aam
psadbw
stos
xchg
les
imul
mov
add
stc
les
int
cld
shlb
mov
mov
and
lcall
push
clc
fidivrs
sub
mov
sbb
xor
push
pop
loopw
enter
xchg
rclb
xchg
jle
call
mov
pop
mov
mov
jo
bound
xchg
pop
dec
dec
cs
fimull
mov
adc
insl
js
push
dec
jp
add
fidivrl
in
pushf
nop
jge
cmp
push
in
mov
mov
adc
in
lods
dec
add
xchg
dec
push
aam
cs
lea
push
imul
rclb
into
aam
pop
sub
mov
cmpsl
and
ret
sub
scas
aas
inc
cmp
das
dec
push
insl
or
or
outsb
lods
dec
adc
insb
xchg
pop
cmpsb
test
cmp
xor
test
cmp
test
les
xorl
fildl
xor
shl
loop
movsb
sarb
or
push
ss
lret
dec
cmp
mov
jae
mov
shr
inc
dec
pop
test
arpl
cmp
and
rcrl
jg
jecxz
mov
dec
jo
mov
mov
insl
pusha
or
push
mov
lret
mov
stos
das
in
add
in
nop
pop
add
pop
pop
mov
gs
push
test
mov
dec
subl
cmp
in
dec
sbb
incl
inc
addl
push
stos
sbb
mov
sbb
jg
call
cld
dec
es
int3
jbe
icebp
lds
push
jno
test
lods
popa
add
dec
sub
pop
jno
lea
fisubs
scas
aam
mov
jae
ret
je
sub
dec
push
repnz
pushf
push
addb
sub
aam
xchg
ret
push
stc
pop
mov
insl
cmp
fsubl
sbb
xor
lock
sbb
jae
fdivl
mov
fs
enter
adc
push
ja
jae
pop
inc
pop
add
xchg
lcall
mov
push
test
xor
push
rolb
or
sahf
sbb
ficomps
cmpsb
push
imul
movsb
mov
cmp
cmp
ficomps
int
jno
xchg
vmovupd
mov
jmp
mov
sbb
jecxz
arpl
test
mov
imul
jne
roll
insl
mov
jge
movsl
adc
in
xchg
adc
jb
inc
pop
popf
mov
out
xchg
xchg
push
cmp
aad
ss
adc
cmp
xchg
fistpl
iret
aam
mov
repz
sbb
adc
adc
mov
jecxz
mov
jmp
sti
mov
ror
cmp
ret
push
mov
sbb
mov
push
sub
js
pop
dec
scas
and
rcl
xchg
mov
sbbl
sub
shld
fsubrl
push
add
xchg
adc
out
and
test
xor
incb
test
pusha
adc
inc
and
inc
xchg
pushf
data16
lret
sti
out
mov
mov
and
push
jbe
add
jne
sub
ds
insb
mov
outsl
mov
les
out
stos
je
js
nop
icebp
stc
mov
scas
fs
adc
mov
jge
repnz
mov
jo
sbb
sub
imul
push
rcll
cmp
fcoms
loope
repnz
in
mov
mov
in
sbbl
je
popf
sub
rclb
cmp
jne
mov
popf
adc
push
pop
inc
jge
call
adc
popf
dec
adc
pusha
push
imul
fwait
cltd
pop
sbb
push
sbb
shrl
mov
clc
adc
xchg
cmp
in
icebp
cmpsb
mov
dec
pop
lock
push
out
lahf
dec
pop
int3
fildll
pop
enter
adc
lret
jl
adc
push
cmp
dec
jns
mov
nop
xlat
jbe
dec
sarb
add
subl
js
nop
repz
xor
stos
sub
ljmp
sti
js
insb
push
and
xchg
jg
cmp
xchg
rorl
in
cmp
cmpsl
mov
mov
fmull
in
fldcw
sbb
shrb
xor
stc
xchg
push
test
insl
jno
xor
or
sub
xchg
push
push
xchg
xchg
in
mov
inc
inc
mov
jmp
pop
sub
cmp
xor
mov
pop
retw
and
xor
ss
mov
test
out
inc
out
iret
dec
mov
xchg
popa
outsl
out
mov
xor
adc
leave
push
or
cs
das
xlat
mov
in
movsl
push
nop
roll
push
jmp
ds
jg
pop
inc
cmp
stos
mov
jg
sbb
jp
shl
and
nop
lea
sbb
fmull
outsl
int
pop
pop
ja
sbb
cmp
xchg
sbb
popa
daa
mov
stos
outsl
stc
or
ret
push
mov
push
adc
or
scas
sbbl
lea
cmp
pop
mov
into
add
dec
xlat
jmp
movsl
aas
sbb
push
outsl
movsl
pop
es
mov
mov
test
push
test
in
aam
add
aad
divl
std
push
xchg
out
loop
leave
lods
adc
mov
pop
push
aam
filds
xor
rcrl
pop
xchg
sbb
dec
push
mov
pushf
xor
xlat
xchg
and
dec
lret
add
bound
vmwrite
pop
frstor
mov
xchg
idivb
movsb
stos
lcall
inc
scas
cltd
inc
lret
lock
or
dec
addl
sub
mov
mov
sbb
add
dec
pop
pop
dec
in
outsl
out
pusha
ss
pop
xchg
or
mov
pop
dec
add
jae
rcrl
or
mov
lds
ficoml
movsl
int
aas
push
adc
stos
mov
jae
fmull
fldcw
out
push
and
lods
lahf
xchg
ljmp
or
sbb
push
mov
add
pop
imul
lahf
xchg
notl
sar
pop
stos
push
std
stc
dec
insb
adc
xlat
mov
mov
call
push
out
sbb
inc
mov
sub
stos
lret
mov
and
xor
and
mov
jge
sbb
mov
mov
movsb
sbbb
cmp
aaa
xchg
popf
movsb
xchg
sbbb
mov
pop
xchg
sbb
xchg
mov
gs
inc
jb
lea
or
mov
mov
jmp
mov
enter
push
sahf
stos
lcall
out
mov
enter
xlat
stos
lcall
xchg
mov
cmc
and
pop
pop
aas
mov
dec
fwait
mov
sub
lret
push
cltd
add
imul
mov
sub
pop
and
jnp
fucomp
sub
addb
cmc
inc
outsb
add
cmpsl
fisubrs
xchg
test
jo
mov
push
sbb
insb
and
mov
fildl
mov
adc
aam
sub
xor
push
fcoms
aad
shr
xchg
scas
jp
cmp
jle
pop
loopne
lret
les
js
test
test
dec
or
lret
sub
xor
sarl
jnp
loop
scas
and
data16
push
lods
or
ret
mov
popf
int
js
imul
daa
lea
lcall
lock
adc
clc
xchg
fwait
xor
aam
lret
loop
sbb
roll
dec
jbe
mov
push
jns
xor
out
clc
xor
mov
xor
and
pop
pop
sbb
stc
jmp
cmp
sti
add
cwtl
mov
das
push
push
mov
test
sub
mov
sbb
es
test
cmp
enter
adc
fdivs
outsb
mov
xorl
mov
decb
stos
clc
jae
mov
in
inc
or
mov
jmp
push
leave
sbb
dec
ss
and
rorb
addr16
mov
shll
aas
inc
stos
xor
inc
mov
xchg
mov
les
jne
into
cs
add
jecxz
shl
adc
lret
mov
and
pop
or
decb
pushf
add
jl
cmp
sarl
mov
sub
push
fists
cmp
mov
in
pop
mov
mov
aad
mov
inc
adc
shll
push
insl
push
cmp
dec
jl
sbb
or
pop
cwtl
dec
jmp
mov
call
jmp
aad
sbb
clc
lret
call
test
mov
add
sub
jmp
ret
mov
dec
mov
mov
mov
pop
test
or
shrl
addr16
adc
xchg
add
xorb
leave
iret
xor
data16
inc
sub
scas
adc
sbb
xor
outsl
loopne
dec
mov
cmp
xor
cli
mov
sti
inc
push
popf
adc
and
cli
add
jns
adc
mov
xor
cmp
inc
jle
stc
stc
cmp
and
mov
aam
jecxz
in
loop
sub
cmpsb
out
mov
mov
push
mov
shll
int3
mov
mov
or
push
test
stos
aam
mov
fidivl
sbb
mov
cmp
jmp
pop
xor
add
inc
push
push
insb
lret
adc
bound
sbb
sub
mulb
arpl
movsb
xchg
ret
gs
cmpl
jbe
es
int
xchg
xchg
hlt
les
vcvttpd2dqy
imul
inc
xchg
nop
jecxz
mov
mov
pop
push
inc
idivl
fnstsw
xlat
push
adc
loop
insb
jo
aam
mov
sub
jns
push
mov
pop
fs
es
pop
ret
imul
xor
mov
xor
loope
mov
stos
pop
pushf
lods
push
xor
xchg
adcl
rcr
sub
push
add
jp
stc
cmp
ret
xor
inc
ljmp
sbb
movsl
adc
movsl
ljmp
cld
xor
jno
adc
fnstenv
jmp
push
and
jns
push
sub
jmp
int
iret
test
test
fcoml
jge
pop
mov
out
aad
jo
cmp
mov
clc
or
xchg
out
cmpb
mull
les
fisttps
jo
nop
sbb
sti
shld
inc
movb
jae
fcoml
xchg
jecxz
pop
jl
sbb
hlt
insl
fcoms
pop
sub
mov
cs
fwait
repz
inc
dec
mov
popa
shr
or
add
jmp
test
add
inc
adc
leave
test
mov
xlat
xor
cmp
fnstenv
pushf
mov
lods
cltd
movsb
imul
lock
add
adc
js
jb
jb
sti
inc
or
js
pop
shrb
mov
les
pusha
test
mov
or
jge
rcrl
dec
jge
fsts
mov
aad
inc
push
int3
scas
ret
test
push
xchg
add
stc
fdivs
xchg
movsb
mov
push
jl
mov
lahf
hlt
mov
xor
cmp
xchg
pushf
roll
hlt
mov
out
add
out
ret
cld
and
ja
lret
clc
mov
dec
pop
pusha
sub
stos
addr16
hlt
add
es
test
cmp
fistl
cmpsl
mov
dec
ret
gs
or
push
clc
in
cmp
imul
mov
push
dec
aad
lcall
testb
fcompl
mov
test
lahf
aaa
mov
int3
les
fwait
scas
loope
repz
and
mov
arpl
xchg
xchg
dec
stos
cld
addr16
fwait
lods
daa
push
cmp
adc
and
clc
sub
add
xorb
and
mov
pop
adc
jno
pop
sbb
cmpsb
movsb
je
mov
mov
fwait
push
lret
icebp
fldcw
or
adc
inc
faddl
push
inc
fisttpll
lahf
in
ljmp
movups
jne
push
pop
xchg
dec
jbe
sbb
je
lcall
cmpsl
lock
mov
mov
xchg
xor
cwtl
cmp
sub
repnz
push
inc
movsb
mov
inc
ret
lods
mov
notl
repz
sbb
push
aam
jp
sub
lods
pop
inc
loope
jg
andb
sbb
push
push
mov
cmp
cwtl
loopne
das
push
and
fs
clc
mov
int
or
in
rep
pusha
mov
push
mov
dec
push
or
fldt
loopne
mov
mov
push
lock
mov
les
and
outsl
fwait
push
outsl
or
hlt
shlb
and
out
jle
cmp
test
or
loope
out
pop
pushf
lret
aam
movsl
das
sbb
cmp
jmp
inc
ret
jge
js
jbe
imul
outsb
adc
jne
ljmp
addr16
jl
icebp
xor
out
cld
stos
fwait
mov
push
mov
orl
pushf
out
dec
mov
cltd
negl
mov
cs
xchg
int3
cmp
cli
in
mov
dec
jecxz
test
ljmp
es
jne
fldcw
cmp
in
cmp
in
jnp
ja
pavgw
xchg
cmp
push
cld
cld
mov
ja
mov
pop
leave
call
scas
push
jae
cwtl
int3
pushl
int
lret
mov
mov
movsl
bound
push
dec
adc
push
fimuls
dec
jle
cmp
sub
xchg
push
repz
dec
sbb
insb
outsl
jl
gs
xchg
jl
pop
loopne
shrb
lods
out
push
jne
pop
cmp
addr16
add
mov
lahf
cmpsl
push
and
loope
push
cmpsb
xchg
std
mov
lods
popa
into
or
sbb
or
loope
sub
int
mov
pop
push
sti
gs
mov
pop
sbb
adcl
pushf
pusha
outsl
mov
jl
pop
ds
dec
in
fidivrs
aad
push
and
jg
cmpsl
cli
popa
jl
sbb
add
jmp
add
cmpb
aaa
mov
xchg
popf
dec
and
push
addb
and
cs
mov
jecxz
rcrl
repnz
mov
mov
lret
fistps
xchg
jmp
jb
in
inc
addr16
ljmp
out
imul
jno
mov
inc
jae
decb
xlat
push
movsb
inc
repz
pop
adc
jnp
and
sub
sarb
sar
fimuls
pop
or
aad
clc
mov
ja
outsl
or
andl
aaa
cltd
or
push
xchg
adc
jmp
ss
inc
sti
mov
inc
orl
fstl
stc
sbb
dec
ffreep
aas
test
and
daa
jnp
mov
fwait
sbb
pop
or
cs
sub
push
int3
fcomi
jns
fstl
aaa
dec
push
xor
out
push
dec
or
xor
mov
inc
mov
faddl
shrl
inc
sbb
ss
ds
dec
das
rcll
dec
dec
dec
int
fnstenv
int3
mov
test
or
jp
das
pop
pushf
cmc
mov
xlat
mov
mov
addb
lahf
cs
sbb
xchg
inc
lahf
sub
movsl
pop
jbe
loope
push
je
orl
mov
popa
fsubrl
xor
loopne
mov
xor
or
jp
pushf
divps
fisubs
aas
pop
pop
in
sbb
jecxz
mov
pop
inc
pop
lods
cli
leave
push
inc
loop
stos
sbb
cmpsl
dec
pop
lcall
jmp
pop
iret
fistpl
mov
aaa
sub
xchg
sbb
push
sahf
div
and
ja
test
pop
inc
pusha
aad
pop
inc
dec
inc
sub
jne
mov
xor
or
sub
ja
setl
ljmp
aaa
add
push
inc
inc
and
insl
pop
fstps
or
dec
movsb
and
jo
mov
out
sbb
and
divl
dec
decl
add
push
mov
aaa
fsubl
xchg
clc
int3
and
cli
jnp
mov
pop
repnz
ss
sub
in
mov
mov
and
pop
ja
dec
push
cli
cmpsl
outsl
pop
push
pop
clc
xor
dec
push
orb
jp
pop
jo
cld
and
xchg
mov
movq
sti
push
dec
mov
jmp
adc
mov
pop
push
mov
inc
push
push
mov
sub
push
subb
stos
addb
or
out
xchg
mov
xor
add
mov
jnp
in
and
das
sub
or
adcb
stos
popl
adc
add
mov
cmp
inc
fldt
sub
daa
stos
loop
jb
dec
xchg
sbb
xor
mov
test
sbb
icebp
jbe
es
mov
loop
lds
sub
test
orl
lret
negl
icebp
out
ljmp
cmp
in
push
int3
or
mov
lahf
mov
pop
adc
cmp
and
jp
inc
jns
lcall
mov
cmp
and
popa
dec
mov
daa
es
jl
xchg
pop
sub
inc
neg
rolb
add
es
repnz
xor
ficoms
sbb
mov
jae
mov
test
mov
inc
lods
scas
int
add
sbb
enter
jno
ljmp
or
jns
inc
popa
adc
pop
mov
loop
mov
and
mov
sbb
add
jae
out
pcmpgtb
add
mov
mov
enter
es
or
and
pushf
mov
sbb
mov
out
lahf
cmpsb
adc
insl
icebp
insl
and
lods
and
popa
mov
mov
pop
jg
adc
ret
ljmp
repnz
in
clc
pop
test
aad
je
sbb
xchg
xchg
loopne
aaa
push
pusha
cli
cmp
add
mov
test
add
std
outsb
jmp
inc
adc
sahf
cmpsb
clc
lods
adc
jne
lods
shlb
stos
pop
push
cmp
sub
dec
fld
add
xchg
fldl
and
in
jle
test
fcom
pop
sub
ret
out
or
adc
imul
add
or
enter
push
jns
nop
aam
insl
mov
movsl
jno
pop
xorl
mov
and
nop
sub
std
jb
mov
shl
pop
jae
mov
clc
fstpl
aaa
fwait
jae
jae
fstpt
and
cli
out
adc
rcrb
mov
sub
ljmp
test
sub
test
push
add
sub
xor
dec
ja
sbb
loop
inc
fwait
dec
mov
testl
mov
or
cmpsb
fdiv
dec
test
inc
lock
sub
test
or
fnsave
dec
out
int
int
aas
adc
sbb
pop
cli
cli
push
push
and
scas
repz
movsb
fwait
lcall
mov
rclb
ror
mov
pop
push
lahf
scas
fisubs
jmp
xor
xlat
out
mov
jp
imul
pop
scas
ror
cmp
es
mulb
adc
fcoml
xor
push
mov
shrb
add
test
dec
vpor
fcompl
add
xchg
jmp
ljmp
or
mov
std
fisubs
sub
jno
sti
or
and
jp
frstor
pop
and
mov
imull
adc
jp
jbe
jae
out
dec
and
and
sbb
jg
pop
in
out
dec
jno
or
int3
sbb
imul
lcall
lret
das
cmp
add
push
stos
inc
cli
rcl
jns
jae
enter
iret
inc
pop
pop
shr
sub
mov
divl
dec
mov
push
adc
dec
popa
dec
xor
test
push
xor
mov
arpl
add
insl
xor
push
cmpsb
fmull
mov
add
xchg
cltd
push
push
pop
mov
push
dec
pop
sub
pop
jbe
sbb
in
push
mov
cld
insl
clc
repz
aaa
pop
fistl
loope
iret
xchg
data16
in
cwtl
sbb
aaa
lret
mov
push
xchg
and
or
cwtl
xchg
xor
ret
push
ds
mov
xor
arpl
mov
outsl
jno
or
push
fnstcw
bound
jmp
sub
pushf
int
mov
roll
jne
aas
aas
out
mov
std
mov
lods
xor
pop
inc
pop
ret
mov
iret
pop
test
inc
pop
and
xchg
das
ficomps
fwait
cwtl
mov
out
mov
xor
out
in
fwait
jge
sbb
nop
fildl
lea
cwtl
mov
in
mov
imul
mov
mov
jno
or
fidivs
mov
leave
inc
aam
cs
xor
insb
popf
cmp
fisttps
ret
sar
xchg
sbb
jo
sbb
test
mov
push
rcl
lahf
push
xchg
aas
shrl
pop
lds
lret
jl
int3
daa
ret
es
jl
ja
outsl
sbb
into
pop
push
cmpsb
clc
push
insb
lods
sbb
push
adc
push
pushf
arpl
fildll
push
loopne
inc
jae
int
or
xlat
jmp
test
dec
cmp
enter
lds
scas
jmp
mov
adc
fisttpll
xadd
test
pusha
push
sub
mov
aaa
test
sbb
jge
lahf
inc
ficompl
cltd
jmp
stos
inc
fs
add
enter
test
test
outsb
lea
xor
jno
pop
mov
jae
xor
insl
in
adc
cmp
push
stos
rorb
mov
insb
in
dec
xor
cmp
scas
cli
or
dec
cmp
aam
push
xchg
add
mov
pop
jne
inc
frstor
data16
push
jne
dec
testl
adc
inc
std
and
xchg
adc
mov
std
sub
neg
push
or
and
adc
xor
jecxz
std
mov
outsb
jmp
inc
aam
pop
cli
repz
iret
push
add
sahf
add
pusha
mov
dec
imul
add
out
jo
jo
mov
inc
sbb
mov
enter
shll
mov
out
inc
xchg
sub
dec
mov
jl
sbb
cmp
out
fidivl
icebp
test
xor
jnp
dec
cmp
std
lret
insl
xchg
addr16
loope
mov
mov
loopne
mulb
ret
call
sbb
pop
jmp
sti
leave
or
stos
or
sahf
pop
dec
out
xchg
push
push
inc
movsb
leave
imul
scas
ret
iret
cwtl
and
iret
sarb
mov
testl
mov
sub
pushf
shrb
add
adc
pop
mov
cmp
adc
sbb
jmp
mov
outsl
movsl
lahf
push
into
jo
out
fdivs
or
pushf
cmp
or
mov
jnp
pushf
jp
andl
rolb
push
sbb
cmpsl
pop
iret
ficoms
mov
in
sbb
dec
shll
jmp
or
sub
pop
sti
mov
pop
test
mov
sub
das
outsb
adc
jns
mov
mov
push
cltd
mov
inc
roll
jge
and
or
mov
cmpb
mov
lret
inc
movsl
out
cmpsb
add
insb
sbb
add
setle
adc
pop
and
ret
clc
push
stos
test
mov
add
fisubl
pop
shr
pop
dec
xlat
mov
mov
popl
icebp
mov
stos
repz
lcall
adc
inc
cmc
aam
jg
rol
ds
scas
lret
sbb
fildll
push
add
pop
jl
adc
into
js
add
cltd
gs
inc
xor
into
xchg
mov
mov
mov
lret
and
mov
mov
or
out
add
fnstenv
or
inc
repz
mov
sub
jns
mov
loope
test
jnp
cmp
xor
fwait
cmp
divl
inc
cld
and
jmp
xlat
sbbl
xchg
cmp
fbld
gs
aam
fwait
mov
sbb
jo
scas
add
dec
cld
sub
mov
inc
push
mov
sar
int3
movsb
jp
or
data16
mov
and
cmp
aad
xlat
loop
and
inc
gs
iret
mov
cmp
jle
bound
push
fs
stc
dec
xorl
jmp
test
fdivrs
sahf
mov
mov
pop
jb
cmp
add
dec
fs
lods
shlb
sub
fucom
daa
xor
out
addl
xchg
jl
sub
mov
sbb
inc
pop
and
and
data16
imul
mov
inc
sbbb
das
lcall
jae
adc
adc
mov
jmp
arpl
ds
mov
fimuls
dec
inc
imul
mov
xchg
xor
add
sub
lods
jne
push
xor
aam
icebp
inc
push
pop
outsb
xchg
rorb
insl
arpl
mov
scas
imull
xchg
pop
in
sub
mov
push
inc
mov
jnp
mov
jo
dec
sahf
and
stos
aam
jle
xchg
and
mov
icebp
push
cmp
imul
fdivl
cmp
adc
iret
mov
adc
jmp
lods
inc
mov
shl
lock
enter
and
push
cmpsb
movsl
jno
and
dec
mov
popa
test
pop
dec
xor
mov
push
push
int
jae
jecxz
push
mov
cwtl
sbb
aad
shrb
pushf
stos
fmuls
insb
cmp
cmp
add
cwtl
and
jno
fucompp
sahf
outsl
aaa
and
aam
fisubrs
mov
xor
sub
pushf
inc
repz
and
mov
iret
sbb
mov
jb
push
pop
mov
jo
add
jo
dec
sbb
repz
in
push
push
push
sub
adc
gs
pusha
inc
aam
jg
cmpsl
fmul
mov
mov
mov
cli
push
rolb
in
pop
cli
mov
loop
xor
sub
pop
aaa
jl
sbb
mov
jmp
shll
pop
xchg
pop
imul
inc
clc
adc
into
aaa
mov
in
xchg
sub
mov
xchg
test
pusha
fwait
pop
xchg
sbb
mov
dec
or
cmp
pop
xchg
jns
pop
pop
mov
pop
sub
mov
and
sti
ss
icebp
xchg
sti
repz
add
xor
jg
aaa
fdivrs
or
add
xchg
lret
push
mov
clc
pop
rol
push
pop
push
lock
data16
shl
adc
lock
out
popf
xchg
sbb
or
push
xchg
sbb
fsub
push
mov
inc
dec
scas
negl
lods
xchg
das
popf
xor
or
inc
mov
add
xlat
inc
sub
hlt
imul
orl
into
js
pop
xchg
call
lret
sub
push
lods
rclb
jge
mov
sti
inc
adc
mov
lcall
lds
mov
out
out
sub
insb
pop
flds
cmp
mov
push
and
das
test
mov
jns
shl
jl
ss
jb
xchg
mov
mov
adc
and
inc
mov
cmc
cmc
add
mov
stos
or
cmp
pop
inc
cld
fucom
sub
fimuls
push
cmp
mov
ljmpw
popf
xchg
sbb
out
pop
shrb
rorb
and
sbb
insl
repnz
flds
mov
or
addb
jae
outsl
loope
dec
push
add
jnp
push
adc
sbb
cltd
mov
jno
push
adc
cmp
adc
xor
fcomps
mov
lcall
fimull
enter
xor
jnp
add
shl
push
push
mov
orb
or
xchg
dec
adc
jae
es
mov
cvtps2pi
cmp
es
gs
cmpsl
in
and
jg
cltd
xlat
stos
cmpsb
cmp
orb
mull
call
inc
xor
imul
cltd
and
in
cmpsl
jo
cmp
clc
int
pop
mov
leave
xchg
inc
add
xchg
test
or
pop
pop
xchg
jbe
xchg
add
push
clc
jbe
jp
mov
and
or
adc
cmp
ljmp
pop
in
adc
ja
push
push
stos
mov
jmp
movb
mov
aas
mov
fwait
mov
mov
ret
nop
testb
cmp
sub
cmpsb
pop
arpl
sub
dec
cmp
int3
push
dec
dec
int3
adc
push
aaa
clc
mov
jno
stos
xor
insb
push
add
inc
sbb
rcl
sub
jae
idivb
jp
out
cs
pop
pop
jns
dec
adc
in
or
inc
inc
ljmp
xchg
decb
sbbl
push
cmpb
data16
xchg
imul
add
fsubp
cmpsl
call
out
je
sub
icebp
xchg
sub
mov
test
or
test
test
mov
cltd
adc
mov
push
lahf
mov
arpl
mov
gs
mov
repnz
push
pop
test
daa
or
and
dec
aas
cmp
xor
imul
mov
mov
adc
lahf
pop
sub
sbb
addb
cmpxchg
mov
jmp
js
push
iret
fsubr
fmulp
mov
adc
test
pop
icebp
push
imul
xchg
jae
add
or
mov
loope
pop
movsl
hlt
lea
adc
cmp
or
xchg
xchg
int
jl
bound
jne
and
and
cmp
roll
movsl
int
push
loop
push
jnp
jecxz
add
leave
js
or
shlb
movsl
enter
mov
mov
or
fbstp
movsl
aad
bound
aaa
cld
mov
sub
inc
adc
xchg
cmpsl
fucomip
jns
pop
dec
jp
mov
mov
das
dec
jbe
push
adc
inc
push
out
mov
icebp
lea
mov
or
arpl
mov
adc
adc
adc
mov
push
mov
in
fidivl
sarb
test
push
or
push
into
xorb
movq
jb
out
std
adc
push
ss
adc
sub
sbb
out
hlt
mov
in
jne
cltd
test
xlat
mulb
jmp
jecxz
sbb
notb
cmp
cmp
aaa
xor
lret
pop
jae
dec
fstps
xor
pop
andl
mov
adc
fidivs
add
mov
xor
xor
mov
inc
fchs
orl
or
cld
fcoms
ja
sbb
mov
mulb
cmp
add
dec
popa
aas
mov
js
jge
popa
pop
call
scas
enter
mov
js
popa
rcl
insl
out
outsb
mov
loopne
adc
loopne
inc
sbb
mov
cwtl
je
push
jl
push
mov
mov
or
adc
stc
sub
adc
pushf
mov
push
into
ljmp
mov
mov
mov
test
int3
pushf
enter
jae
mov
mov
lret
lcall
jecxz
jg
or
pop
jne
out
sbb
cmp
adcl
scas
pop
loopne
pop
loopne
lea
xchg
test
sysenter
mov
or
in
out
add
pop
addr16
ss
in
out
bound
jnp
xchg
stc
xchg
xchg
imull
xor
pop
jbe
pop
jge
jne
cmpsb
fildl
xor
aaa
ja
sahf
fdivl
les
adc
jo
insb
mov
pop
xlat
dec
dec
cltd
add
icebp
sub
mov
push
shll
ret
cmp
idivb
mov
xor
xlat
test
lds
stc
ja
mov
pop
and
shlb
cltd
or
test
dec
adc
pop
xor
out
dec
jo
aam
iret
add
lret
imul
xor
loopne
in
mov
sbbl
in
add
jns
jecxz
jp
adc
inc
xchg
fcoml
mov
addr16
or
icebp
stc
and
hlt
inc
xor
outsb
sub
push
repnz
mov
in
ljmp
cmp
ljmp
adc
cmp
movsl
jl
jmp
es
push
dec
mov
popf
loopne
jg
call
mov
push
push
push
xor
dec
jnp
or
leave
jns
test
out
std
push
push
or
jno
roll
mov
jmp
imul
inc
movsb
push
lods
ficompl
rcrl
bound
aas
mov
fidivl
fnstsw
or
mov
xchg
ss
lock
jne
and
inc
cmp
and
sub
ss
push
inc
mov
je
es
test
sbb
xchg
test
cltd
nop
cli
sbb
adcl
pusha
das
xchg
movl
mov
jecxz
sub
or
cmp
iret
das
filds
pop
xchg
in
pushf
add
aad
fsubr
mov
scas
xor
sbb
mov
pop
xchg
pop
popa
jo
pop
pushf
pop
inc
push
mov
lret
push
pop
and
in
pop
test
or
mov
adc
push
push
inc
mov
fildl
sbb
sbb
mov
mov
ret
mov
addb
gs
shrb
lret
movsl
inc
outsb
pop
cmp
ds
sub
inc
cwtl
cmp
fldt
pusha
push
sub
or
cs
and
loope
mov
cmp
jmp
bound
jae
dec
pop
ds
and
lds
jns
ror
adc
js
andb
adc
lock
test
stos
jecxz
js
push
mov
ficomps
cmpps
sti
lret
jg
mov
es
cmovp
scas
lret
cmpsb
cmp
aas
repz
adc
mov
rclb
pushl
and
out
mov
lock
icebp
pop
lret
clc
pop
iret
mov
dec
xchg
mov
lock
insl
push
popa
shll
lret
in
mov
sbb
das
jle
inc
test
dec
xor
xchg
push
or
movsb
pop
outsl
call
cmp
leave
mov
or
and
leave
hlt
push
enter
dec
cltd
mov
repnz
cmpsb
and
jae
cmpsl
aas
pop
push
in
sbb
loopne
out
into
xorb
xor
pop
sahf
add
add
insb
cmp
sbb
adc
shll
adc
dec
push
fsubrl
pop
jl
jmp
imul
fwait
adc
cmp
scas
cmp
andb
jg
and
rorl
xorb
test
iret
cmp
arpl
out
dec
pop
in
xchg
clc
enter
sub
aam
pop
hlt
imull
and
mov
stc
sarb
pop
inc
push
mov
repnz
loop
out
cltd
cmpsl
add
cli
jb
std
adc
mov
or
mov
cwtl
push
fmul
mov
stos
cmp
xchg
inc
je,pn
jge
sbb
dec
xor
fbld
and
pop
popa
ja
add
sar
fdivrs
cmpsl
insl
mov
mov
push
daa
fsubr
int
out
lret
jecxz
pop
mov
fsts
dec
stc
mov
dec
loopne
mov
shrl
addr16
iret
jno
push
fs
inc
dec
lods
push
xchg
adc
lods
sbb
mov
jo
insl
jb
pushf
call
ds
fmuls
push
popf
in
addr16
or
sub
es
mov
mov
and
mov
out
xchg
aad
adc
pop
and
je
iret
sbb
and
cmp
sbb
mov
loop
or
inc
jmp
loope
pop
pop
push
mov
jl
add
je
jns
out
inc
or
cmpsb
mov
jge
aas
clc
or
fdivl
or
xchg
jmp
push
xor
dec
loopne
loop
push
jge
mov
jmp
ret
outsl
into
sbb
sti
sub
imul
in
push
mov
stc
es
cmp
or
lods
xlat
leave
es
test
loope
xchg
std
loopne
out
xor
pop
inc
xor
in
mov
adc
cmp
xor
mov
or
jo
popf
mov
lret
lahf
movsl
lahf
inc
push
ficoml
pop
cwtl
and
rolb
fucomp
push
bound
mov
dec
loop
and
jmp
fucomp
mov
jbe
ss
inc
and
cmp
daa
ret
cld
dec
add
outsb
adc
lcall
cmpsb
sar
lret
sbb
lret
outsb
sbbl
mov
xor
insb
movsl
add
and
xor
imul
push
xor
testb
push
lods
loopne
arpl
mov
fnstenv
test
sbb
lahf
pusha
insl
ret
cmpsl
fprem1
int3
xchg
mov
popf
lock
mov
pop
pop
inc
loope
and
xor
popf
sbb
repz
fiaddl
out
xchg
dec
sbb
stos
ja
add
mov
mov
dec
enter
mov
ret
pop
sbb
outsl
xchg
in
mov
adc
out
cmp
inc
inc
jns
pop
nop
gs
pop
dec
and
mov
jb
subl
pop
out
andl
ja
in
mov
mov
fcomp
roll
cmc
inc
dec
cwtl
std
jb
mov
add
jmp
xchg
jp
es
pusha
std
into
dec
sub
jae
pop
ret
jge
outsl
pop
sarb
in
out
inc
add
fbstp
mov
dec
add
mov
pop
mov
cli
push
mov
cmc
test
mov
sarl
dec
repz
out
xor
nop
cwtl
jns
jge
adc
stos
mov
dec
and
outsl
xor
xchg
dec
mov
or
push
repnz
xchg
cltd
outsb
cmp
jae
add
pusha
mov
xchg
or
test
mov
hlt
adc
cmpsl
jecxz
loopne
pop
arpl
mov
pop
lret
or
mov
push
push
insb
aam
push
sub
insl
pop
and
xlat
jno
or
stos
ja
sbb
into
in
loop
xchg
jmp
sbb
inc
bound
imul
lcall
stc
push
dec
aad
xchg
ss
fadd
dec
pop
dec
fcoml
int3
lret
pushf
or
push
rorb
popf
jg
or
scas
sbb
rorb
ja
mov
mov
jecxz
cwtl
push
cmpsb
mov
cmp
mov
rclb
push
shlb
pop
sub
lods
sbb
jl
jne
push
mov
imul
add
out
subl
add
movsl
mov
dec
sahf
and
popa
fistpll
mov
mov
dec
and
pop
stos
xor
jnp
nop
testl
mov
aaa
jmp
insl
inc
push
stc
push
pop
inc
and
dec
xchg
in
xchg
sahf
mov
and
shlb
addl
push
out
inc
and
pop
sub
push
sub
into
rcl
outsb
shrl
lea
stos
adc
sbb
dec
ret
aas
pop
pop
in
inc
shlb
icebp
dec
or
mov
jnp
lahf
or
pop
in
fs
add
pop
test
pop
or
dec
dec
adc
cmp
das
fcoms
adc
daa
push
or
inc
push
frstpm(287
cmpsl
shrb
mov
jp
or
and
xor
in
notb
leave
and
arpl
repz
daa
repz
lock
testb
sbb
idivl
cmp
xchg
xlat
jb
mull
push
cld
loop
add
sub
mov
or
sahf
mov
add
cmpsb
ss
sub
repnz
gs
fwait
xchg
inc
xchg
mov
ret
mov
cmpsb
in
cmp
stc
jns
cmp
popw
cmp
addb
cmp
sub
int
and
cmp
cmpsb
cmp
lock
push
pop
gs
sahf
push
scas
ficoms
add
lods
dec
lea
push
cmp
jmp
iret
jp
loope
cmp
fwait
pop
push
out
daa
jg
pop
fistpll
andl
pop
mov
lret
fdecstp
xorl
xchg
inc
hlt
loopne
mov
add
negb
inc
cld
push
ljmp
and
pusha
aam
mov
test
cld
fisubl
mov
test
scas
leave
sbb
add
pop
movsb
insl
push
add
popa
scas
leave
outsl
addr16
adc
mov
pop
add
sbb
addr16
negb
xor
mov
cmp
adc
mov
faddl
out
add
sar
mov
sub
out
mov
jb
out
inc
push
sub
fbld
imul
mov
in
test
jl
pop
mov
cs
movl
mov
adc
mov
jge
mov
dec
jo
xor
sub
pop
dec
inc
ror
call
jge
push
dec
push
jbe
aad
and
xchg
and
cmp
mov
and
pop
nop
jb
mov
sbb
add
jno
loope
scas
jbe
pop
outsl
dec
sti
mov
hlt
cmpsb
daa
jle
ret
popf
push
pop
scas
bswap
adcb
mov
addr16
and
sbb
lea
inc
inc
fistpl
shrb
iret
jecxz
outsb
into
sbb
scas
add
aam
ficoml
loope
loopne
sbb
insl
mov
xchg
in
mov
cmp
push
dec
loop
out
rclb
cmp
fsubrl
lea
sbb
sbb
jnp
cmpsb
data16
mov
add
popf
dec
inc
sbb
iret
inc
ret
cmpsb
into
outsb
jmp
in
mov
mov
and
andl
push
in
iret
js
mov
mov
xlat
push
sub
movsl
xchg
paddw
insb
fwait
mov
sbb
pop
out
and
jns
ret
cmp
add
cmp
add
or
mov
sub
clc
mov
jnp
cs
and
push
rcll
fsubs
xchg
loope
jo
push
out
or
add
sbb
inc
pop
cmpsl
mov
cmc
ficoms
mov
dec
out
mov
dec
dec
inc
add
jge
sub
push
sub
push
lock
mov
cld
pop
or
arpl
shlb
rclb
inc
jge
jge
adc
cmp
mov
inc
imul
push
adc
adc
xchg
lods
add
fs
dec
push
jecxz
pop
mov
dec
or
test
test
orl
inc
sub
inc
jl
and
shrl
dec
xchg
ret
jno
in
adc
jl
aaa
xor
xor
testb
mov
add
lahf
lret
loop
adc
cs
ficoms
scas
inc
aad
and
insb
adc
in
inc
stos
jns
pop
dec
push
ret
push
out
fwait
into
xchg
xchg
add
mov
fistpl
mov
shl
xchg
sbb
cmc
fldt
ss
cmp
pusha
je
sahf
add
adc
out
add
lds
arpl
xchg
test
fucom
adc
popl
in
dec
call
add
dec
jno
cli
shlb
movsb
push
push
ret
jl
sub
iret
cld
dec
add
fiadds
out
and
adc
mov
and
in
inc
dec
mov
dec
ret
neg
sbb
call
and
repz
imul
sub
mov
pop
jp,pt
mov
test
xor
and
enter
push
popf
testl
cmpsl
mov
int3
jno
lahf
lret
jns
push
mov
pop
pushf
xchg
adc
lods
ret
lea
stos
repnz
dec
scas
out
jp
enter
push
xchg
add
mov
repz
xchg
mov
inc
addb
es
pushf
stc
push
pop
addb
push
popa
sbb
add
imul
sub
jae
and
push
and
jle
lahf
mov
mov
xor
add
fs
std
fwait
int
mov
lea
pusha
test
inc
push
pusha
scas
xchg
pushf
sub
adc
or
sbb
fmull
mov
clc
lods
cmc
mov
int3
jnp
push
xor
mov
sub
and
push
das
in
mov
jns
xchg
fisttpl
pop
mov
xor
ret
pop
popa
mov
pop
fisubrl
and
js
ret
inc
int3
xchg
xor
mov
repz
xor
loope
adcb
scas
push
ds
push
int
test
dec
hlt
pop
xchg
xchg
out
adc
cltd
ror
sub
lret
sub
mov
test
xor
test
fs
inc
jge
in
xchg
xor
dec
idivl
jno
daa
jge
cld
jl
mov
or
sbb
jecxz
lds
add
stos
imul
xor
and
leave
leave
mov
addb
addr16
aaa
add
dec
movsl
push
inc
lods
out
and
into
pop
popl
ljmp
jge
cmp
out
or
cld
mov
mov
push
rol
dec
out
push
call
push
or
daa
xor
cmp
das
les
incl
and
and
add
inc
push
mov
sub
imul
lds
sub
adc
cmp
add
xor
call
lods
mov
rolb
aaa
popa
bound
stos
je
stos
jmp
add
loop
int3
insb
or
inc
xlat
jo
pop
outsb
pop
adc
stos
cli
dec
cs
ds
sbb
xchg
xor
cmp
test
pop
pop
les
xor
or
cmc
mov
gs
fs
mov
lret
pop
xchg
xchg
daa
outsl
jno
in
cmc
and
iretw
sub
test
popa
enter
push
sub
mov
mov
ljmp
or
xchg
shr
or
mov
fnstcw
shrl
push
cs
andl
jb
cli
and
in
push
dec
push
rcl
jae
into
popa
aam
xor
pop
and
add
adc
jle
jl
inc
outsb
fcoml
xchg
mov
arpl
xchg
ja
fs
pusha
xchg
fcmovnbe
adc
enter
lahf
mov
jns
fsubr
and
insl
movsl
and
push
add
xchg
or
mov
pushf
pop
scas
lcall
sbb
and
sbb
add
mov
loope
aas
cmp
jae
into
xor
push
adc
add
jecxz
mov
cmp
out
inc
scas
pop
xchg
dec
xlat
lret
leave
and
cli
aas
roll
call
mov
insb
push
mov
enter
scas
xchg
add
sbb
stc
inc
in
mov
lcall
adc
mov
ja
sub
mov
js
je
movsl
jle
lods
enter
inc
enter
and
and
pop
mov
fwait
mov
test
cmp
test
sub
rep
adc
jno
and
adc
mov
in
shrb
popa
in
loop
int3
dec
pushf
outsl
xlat
adc
orl
mov
pusha
xchg
ss
dec
pop
pop
enter
scas
sbb
mov
cmpsb
inc
aas
inc
xor
out
mov
jno
or
adc
mov
cmp
iret
gs
mov
mov
ss
cmp
mov
icebp
mov
jae
rolb
pop
addr16
test
jp
jo
cmpsb
dec
mov
jne
les
sbb
jno
and
andl
aas
mov
ret
iret
and
js
mov
push
int3
les
or
stc
push
xchg
in
ss
cwtl
jl
jge
imul
cli
inc
push
outsb
lods
out
ret
loopne
js
lds
cli
neg
lea
mov
mov
cmp
xlat
stos
pop
mov
jle
icebp
arpl
inc
cmp
pusha
push
push
push
dec
filds
std
and
push
mov
push
jl
mov
gs
pop
call
inc
out
les
rcrb
fisubs
cmpb
jo
shll
inc
push
cmp
loopne
jae
int
nop
jp
test
je
icebp
clc
pop
adc
cmovl
inc
movsb
ficomps
dec
cmp
or
sarl
adcb
sbb
and
movl
cmpsl
mov
leave
inc
in
pop
xchg
push
out
and
jno
cmpsl
pop
push
xor
mov
rol
gs
lods
andb
flds
and
inc
js
xor
ss
or
adc
scas
aam
mov
lret
ds
popa
pop
mov
mov
es
push
ljmp
push
jb
inc
movsb
lcall
aad
jno
or
out
inc
push
lods
leave
pop
out
jbe
jp
repz
sahf
sub
and
mov
inc
xor
jne
stos
or
outsb
cmpsb
movsl
test
in
mov
xlat
pop
mov
shll
push
mov
addr16
mov
mov
aas
mov
lods
jg
sbb
lcall
push
pop
jmp
ret
insb
lea
cmp
sti
push
clc
iret
push
adc
and
dec
sbb
mov
test
lods
and
loopne
popa
xchg
ds
outsl
jle
mov
and
and
jecxz
mov
pop
sbb
pop
add
subl
fisttpll
cmp
add
or
loopne
jmp
xchg
sub
push
inc
jns
mov
push
out
xchg
xchg
sbb
xor
shrb
pop
push
or
dec
cmpsl
inc
test
and
je
adcb
mov
sub
mov
xor
pop
and
dec
dec
mov
mov
push
dec
clc
inc
adc
shll
push
mov
fnsave
pop
fisubs
fstp
mov
sbb
arpl
test
test
dec
push
incb
imul
jns
mov
inc
pop
les
pop
rcrb
roll
je
fldenv
jbe
xlat
cmp
mov
adc
push
dec
lret
push
and
fiadds
adc
inc
mov
shll
pop
push
dec
fiaddl
and
mov
add
cmp
cld
or
jg
adc
or
ret
cs
in
xorl
sub
inc
lods
xchg
std
adc
je
imul
test
add
es
or
mov
movsb
ret
movups
bound
test
pop
fnstcw
xor
cmp
mov
fdivl
fsubrp
stos
lret
lock
cs
or
int
sub
aam
rolb
aas
ret
ret
adc
pop
gs
rorb
popf
loope
xchg
inc
movsl
lods
jnp
cltd
dec
add
cltd
mov
ret
jbe
rorb
xchg
push
push
mov
enter
stos
xor
movb
roll
adc
and
push
dec
int
sbb
pop
jmp
mov
leave
mov
loop
push
sbb
mov
xchg
fisubrl
pop
aas
dec
scas
cmpsb
pop
sahf
data16
adc
cmc
cld
cmp
push
xchg
iret
bound
lods
gs
cmc
in
adc
test
jg
outsb
mov
adc
clc
xchg
jmp
es
push
sub
and
sub
xorb
xchg
jbe
inc
in
popf
mov
cmpsb
sub
add
movsb
dec
push
adc
nop
xor
gs
aad
rcrb
outsb
cld
lods
outsl
dec
repnz
sub
dec
ds
jmp
jae
addr16
pop
inc
xchg
push
sub
push
andb
mov
cmpsl
xchg
vmovddup
mov
jmp
dec
repz
negb
imul
mov
icebp
sbb
pop
xchg
and
push
mov
stc
data16
pop
lahf
sub
mov
inc
push
loop
push
mov
popa
inc
adc
lret
inc
cmp
mov
lahf
or
pusha
push
xor
xlat
int
pop
sub
decb
je
bound
pushf
jo
lods
xchg
mov
jne
mov
push
cmp
xchg
adc
push
push
push
call
loop
mov
testb
add
fsubrl
xor
daa
mov
imul
mov
lds
shlb
mov
test
insb
dec
push
add
mov
push
mov
xchg
fsubs
movsb
pop
pop
jb
cltd
add
jle
jge
mov
pop
pop
mov
push
mov
and
pop
std
pop
stc
loopne
movsl
push
lods
testb
push
in
arpl
adc
enter
push
loopne
outsb
push
ficomps
push
icebp
scas
sub
leave
fbld
popf
leave
mov
push
scas
test
mov
enter
addr16
mov
dec
or
sbb
xor
pop
lret
add
sarb
cmpsl
xor
push
cld
inc
cmc
pop
inc
and
adc
mov
dec
dec
mov
out
iret
push
jnp
xchg
pop
fs
mov
and
sub
ret
cwtl
scas
pop
js
ja
mov
jp
inc
and
dec
push
or
jle
xchg
cs
fisttps
lods
adc
test
fucomip
mov
push
adc
jmp
mov
mov
inc
cmp
rcll
mov
ja
stc
movsb
push
push
adc
movl
xchg
jbe
xor
dec
cmp
pop
mov
arpl
std
mov
aas
sbb
sbbb
adc
punpcklbw
push
xor
mov
mov
lock
lret
mov
inc
daa
dec
mov
mov
inc
es
mov
mov
jne
mov
push
mov
jmp
sbb
mov
push
jl
sbb
cmp
mov
movsb
inc
cmp
push
into
ja
mov
ja
or
or
adc
cs
jp
jge
stos
mov
inc
cltd
push
mov
adc
lods
inc
add
ffreep
adc
addr16
lret
adcb
mov
out
pop
add
dec
cli
dec
fsub
mov
mov
loop
js
mov
push
pop
shrl
jge
add
cmp
cmc
loope
mov
mov
mov
shlb
rcrb
divl
jo
dec
out
cmpsl
in
int
pop
or
jmp
mov
jo
scas
lods
stos
push
test
pop
mov
daa
cmp
pop
mov
jge
fwait
cwtl
in
ret
fiaddl
stos
jno
repnz
adc
xchg
or
pop
or
mov
pushf
daa
sub
sbb
cmp
in
cmp
sbb
vpackuswb
mov
or
insb
jne
inc
xchg
inc
test
or
jno
in
sar
push
cmp
cmc
loop
inc
test
jp
shlb
pusha
sahf
or
sub
bound
mov
mov
insb
data16
jp
lods
sbb
cmpsb
out
rcrl
in
lods
cltd
fimull
pop
incb
out
js
sbb
stc
loope
sbb
xchg
adc
inc
sub
dec
scas
fnstsw
pusha
pop
out
fidivl
adc
pop
push
stos
aaa
jmp
out
sbb
xchg
jno
mov
ds
scas
sbb
jo
mov
jl
pushf
xor
lea
sub
dec
rcl
mov
cmp
xchg
mov
roll
sbb
leave
xchg
std
xchg
test
sbbl
fistpll
inc
jge
sbb
mov
sbb
xchg
insl
test
rcrl
fmuls
lahf
jecxz
sub
loop
mov
inc
sub
push
push
mov
jle
sti
sbb
sbb
jae
cs
mov
ficomps
dec
movsb
div
inc
nop
adc
mov
pop
popf
rorb
xor
roll
adc
mov
jns
enter
nop
fstl
rcll
mov
aaa
cltd
sbb
sub
dec
and
add
aaa
add
icebp
xchg
dec
icebp
jno
jne
xchg
lahf
ds
fidivrl
adc
adc
jo
mov
pop
fsts
jmp
mov
inc
mull
mov
push
sub
mov
cmpsb
xchg
xor
cmp
lahf
jbe
andl
lcall
inc
cmc
scas
push
ficoms
sub
xchg
jge
push
pop
adc
inc
icebp
xor
fadds
int
test
jbe
idivb
mov
pop
pop
js
gs
cmp
iret
fimuls
pop
in
cs
loop
or
mov
lret
xchg
out
adc
ja
mov
sbb
adc
cmp
insb
jnp
int
mov
cmp
mov
jg
jecxz
jmp
jecxz
add
sbb
decb
imul
popa
dec
jnp
adc
mov
xor
mov
cltd
aaa
push
les
mov
mov
ja
dec
adc
dec
adc
pop
jge
sub
push
stos
scas
push
adc
xchg
outsl
ljmp
sub
and
ret
push
jnp
out
push
xchg
cmpsb
push
dec
xchg
cld
pop
sub
mov
mov
test
xchg
aad
cmp
testl
fisttpl
push
fiadds
inc
sbb
push
push
das
jno
mov
outsb
js
pop
test
fisttps
mov
xor
sbb
adc
dec
aas
stos
inc
mov
sub
mov
mov
sub
adc
scas
fmull
sti
adc
xchg
pop
cwtl
sahf
outsl
movsl
mov
outsl
cmp
push
stos
or
jmp
in
xchg
xchg
mov
or
into
mov
xor
std
jnp
mov
cmp
fmuls
jae
cmp
popf
loop
insb
sbb
dec
sbb
mov
aam
sub
sbb
test
mov
aam
fidivrl
int3
les
inc
or
fistpll
lods
mov
popa
sbb
xchg
adc
test
in
mov
sbb
dec
sub
lock
jl
jne
mov
and
mov
movsl
mov
inc
xchg
jb
out
sahf
sub
in
cmp
clc
ds
data16
shrl
dec
mov
jae
dec
aas
mov
test
sbb
leave
fwait
add
pop
subb
mov
push
imul
cmp
mov
pop
imul
enter
mov
sbb
xor
xor
mov
cmc
sub
sbbb
mov
push
inc
sbbb
sub
lcall
pop
pushf
adc
push
repnz
mov
ror
add
pop
jmp
mov
fdivrs
sbb
into
xor
cwtl
clc
mov
and
mov
daa
repz
in
cmp
stc
adc
fstl
add
sbb
and
add
fdivs
jecxz
lret
popf
inc
aaa
xchg
std
shll
dec
inc
popa
cwtl
inc
loope
test
fsts
pop
push
int
xchg
outsl
pop
inc
sub
and
cmp
test
mov
add
gs
ficoml
out
insl
out
js
dec
in
sbb
hlt
test
dec
pop
and
xlat
push
sbb
mov
push
pop
iret
push
ljmp
shl
psrlw
pusha
push
int3
inc
pop
pop
adc
jae
leave
pop
push
xor
push
sub
inc
loope
cli
inc
pop
xor
movsb
das
shrb
pop
ffree
pop
pop
push
pop
push
imull
jge
icebp
jb
pop
into
sbb
cs
jns
mov
pop
imul
out
pusha
shl
pop
stos
int3
dec
adc
aaa
xor
cltd
mov
pop
mov
out
jle
rcll
xchg
sbb
xchg
subl
shlb
cmpsb
and
cltd
cmc
aaa
and
add
fisubs
icebp
stc
mov
clc
outsb
jecxz
jp
sti
rorl
jge
lcall
push
loopne
xchg
das
sti
mov
xchg
push
pop
mov
or
aas
or
movsb
dec
stos
jl
mov
lods
xor
hlt
data16
push
jo
mov
xor
hlt
cmp
dec
int3
sahf
pop
pop
lcall
sbb
mov
mov
push
mov
jmp
movsl
lods
iret
iret
inc
stos
push
xchg
mov
and
jnp
inc
mov
mov
adc
jb
cmp
mov
mov
pop
xor
and
call
push
js
mov
xchg
xor
int
imul
mov
or
aad
jecxz
jge
aaa
lcall
push
pop
adc
pand
inc
push
in
pop
mov
or
and
push
jo
sbb
push
movsl
cltd
fimuls
and
pop
and
loopne
mov
enter
out
imul
pop
fucom
out
push
addr16
leave
or
ja
lock
les
mul
ljmp
xchg
clc
test
mov
insb
mov
inc
add
mov
push
fsubrl
cs
or
jle
inc
adc
in
or
add
js
mov
adc
in
xchg
xchg
sub
test
mov
cmp
sbb
xor
add
fs
mov
jnp
push
mov
fldt
movsb
jmp
dec
imul
mov
pop
icebp
and
pop
in
push
iret
mov
sbb
add
dec
push
insb
mov
jl
std
adc
mov
shr
sub
shll
mov
and
cltd
mov
fldl
mov
enter
mov
inc
mov
ds
jecxz
rolb
jl
lods
mov
dec
lods
or
xor
jae
or
push
mov
loope
leave
lock
in
stos
repz
cli
pushf
mov
adc
lock
mov
adc
inc
and
push
bound
mov
rorb
shrl
xor
xchg
cld
add
in
add
or
jb
lahf
xor
fs
xor
das
xor
jp
push
adc
and
adc
mov
in
and
adc
pop
fisttps
jle
jb
pusha
rcll
inc
xor
pop
lds
je
imulb
sub
orb
mov
push
test
sbbl
stos
and
scas
mov
aad
push
and
mov
arpl
sbb
aaa
jle
pop
scas
xchg
rorl
mov
cld
and
mov
cmp
jo
lods
pop
das
cmp
and
fs
out
shlb
loopne
and
aas
adc
in
mov
mov
xor
icebp
sub
pop
int3
xchg
dec
jmp
shrl
aam
pop
icebp
dec
icebp
stos
scas
and
jp
data16
into
jecxz
xchg
or
dec
pushf
and
fidivrl
mov
push
ficomps
cmovo
mov
fbstp
mov
out
icebp
lods
dec
xor
les
cltd
push
ljmp
inc
sar
repz
aaa
push
xor
clc
mov
dec
sbb
insl
aas
push
jmp
sahf
shll
cmp
push
aas
out
cmp
cmp
pop
aas
stos
loope
lods
mov
mov
fwait
jecxz
pop
dec
clc
jae
mov
jb
addb
ficomps
mov
cmpsl
jp
testb
inc
jmp
icebp
scas
fnstsw
inc
push
js
int
mov
mov
mov
int
and
push
mov
mov
sub
sbb
pop
or
pop
fs
pop
call
rorb
cmpsb
lret
outsl
add
cmp
cs
movsl
pop
mov
jo
rorb
cmp
xorl
ja
testl
shl
pushf
adc
mov
xor
bound
and
aam
sub
ret
clc
xlat
inc
sarb
shrl
hlt
inc
jo
pusha
or
shr
addr16
movsb
adc
mov
ja
repnz
sub
jmp
dec
lahf
add
in
push
sub
adc
ja
jno
mov
xor
cmpsb
push
sub
mov
inc
das
mov
mov
pusha
add
idivl
aas
cmp
sub
lahf
lock
and
jp
push
mov
lods
adc
stc
mov
mov
outsb
lds
add
and
jnp
call
das
fldt
push
test
test
push
rcrl
fidivl
cld
dec
sahf
xchg
test
inc
pusha
outsb
aam
jne
ljmp
xchg
lds
adc
scas
into
add
repz
and
cmc
out
incb
test
xchg
jns
ret
dec
clc
fidivs
push
dec
fnstsw
jle
outsb
cmp
xchg
inc
add
out
jae
and
mov
mov
int
pop
sub
sbb
pop
push
mov
insl
cmp
xchg
dec
inc
jo
inc
cmp
sbb
xor
mov
mov
mov
data16
hlt
cmc
mov
imul
aaa
out
int3
pop
ss
mov
sbb
sarb
push
cwtl
rcrl
mov
lret
and
das
jle
imul
adc
or
jnp
sub
addr16
ror
aad
dec
scas
push
data16
jp
fcmovbe
outsl
dec
cs
lret
bound
outsb
enter
cmp
xchg
lcall
xor
xorl
rorl
cmp
xchg
enter
jecxz
mov
ljmp
xor
mov
add
xchg
jl
test
mov
subl
push
in
loope
das
icebp
or
in
stos
jl
lcall
mov
sbb
push
xor
push
aaa
xorl
lahf
xor
cmp
mov
and
push
popa
cli
add
in
loopne
mov
xor
pop
sub
lahf
dec
in
lock
push
mov
out
mov
lds
je
sub
lret
stos
add
jbe
pop
clc
mov
cmc
and
push
test
mov
adc
fsts
or
xlat
inc
and
stos
mov
push
dec
jne
and
lahf
sbb
mov
inc
cltd
jecxz
fldl
add
rorl
add
mov
stos
sbb
mov
or
mov
xor
xchg
popa
fmull
ja
cmp
xor
push
inc
push
rorl
pop
inc
dec
add
lock
imul
xchg
je
testb
sub
inc
pop
nop
add
mov
ret
jle
clc
test
xor
sbb
out
and
dec
mov
mov
mov
push
jbe
add
mov
scas
nop
mov
stc
xchg
add
push
sbb
enter
dec
jmp
int
repz
push
cld
pmulhuw
push
jecxz
add
push
mov
je
add
mov
pop
cltd
stos
mov
lahf
pop
jae
sub
adcl
jno
cmpsl
pusha
into
add
xlat
jg
lock
xchg
int
mov
hlt
jmp
mov
shll
add
lret
aam
jmp
pusha
pop
cmp
inc
lods
inc
adc
or
sti
mov
je
jl
int3
pop
dec
sub
mov
orb
daa
mov
js
sub
ds
cmpsb
pop
pop
dec
and
lea
sub
dec
sub
arpl
ret
dec
xchg
int
cmp
test
std
pushf
inc
aaa
dec
test
pop
das
add
xchg
outsl
dec
mov
movsl
push
fsub
mov
push
test
mov
xor
fiadds
and
or
nop
lods
ret
push
imul
xor
clc
push
cmc
inc
fwait
loope
add
sbb
mov
mov
inc
pop
lret
jecxz
mov
mov
stc
xchg
outsl
lea
int3
inc
pop
repnz
cmovl
add
push
inc
lea
fstpt
cs
mov
inc
cmp
ss
bound
ret
mov
jge
mov
pushf
je
clc
mull
mov
mov
loope
and
aaa
test
mov
sub
ja
rorl
sti
jle
sub
or
push
add
sarb
push
mov
iret
js
cmpsl
mov
jno
sub
je
add
addb
pop
pusha
and
adc
adc
fs
into
sbb
push
mov
cmp
popa
dec
jge
jle
xchg
and
xchg
adc
sbb
cmp
mov
cmp
xchg
out
xor
ljmp
divb
loope
test
sub
aad
push
pop
and
pop
pusha
les
jle
sbb
cs
arpl
test
aas
int
orb
cmpl
mov
jle
cld
sarb
adc
and
paddusw
xchg
notb
mov
adc
push
or
mov
jns
jecxz
fwait
jmp
add
mov
inc
mov
ss
push
xchg
jmp
mov
lods
cmp
cmc
test
xchg
mov
mov
in
xor
dec
jl
stc
pushf
loop
xor
dec
iret
push
push
in
sbb
push
imul
lcall
test
sbb
pop
pusha
push
dec
cwtl
cmp
jo
stos
xor
ljmp
cwtl
mov
frstor
dec
xchg
les
cmc
xor
jae
icebp
lea
mov
fwait
sbb
jns
mov
cs
cmpsb
and
dec
xrelease
add
and
lods
push
shlb
xchg
data16
or
mov
in
bound
outsb
and
out
aas
fcmovnbe
pop
xchg
data16
mov
xchg
pop
push
pop
out
cli
sub
jg
jg
jne
testb
push
sub
push
mov
lea
jae
mov
into
cmp
dec
jne
ljmp
sti
stos
std
push
cmp
jbe
jne
pop
popf
out
and
mov
lds
and
xlat
jne
icebp
scas
mov
jns
dec
jl
addr16
sub
pop
sbb
pop
aaa
xor
rolb
push
nop
movsb
jge
pop
xor
movb
lahf
lea
cmp
push
pop
scas
orl
lods
push
sub
aad
sbb
inc
loop
ljmp
push
dec
and
daa
lock
cmp
push
cmpsl
nop
out
mov
out
in
fstps
sar
data16
addl
das
ret
xchg
inc
dec
jno
and
arpl
dec
adc
push
sbb
mov
pop
push
aas
icebp
jbe
fsubs
sbb
push
lret
je
pop
jle
in
mov
lock
mov
test
xchg
inc
negl
ss
insb
jo
int
mov
xor
cmpsl
mov
mov
push
ret
xchg
sbb
lea
mov
mov
nop
mov
jns
stos
lahf
scas
mov
iret
adcl
sarb
cwtl
xor
shr
adc
mov
sub
jl
xor
pop
cltd
and
sbb
cmp
lahf
cmp
adc
pop
es
mov
fsubrp
rcll
cli
std
sbb
insl
pop
shr
mov
mov
xor
ja
cmp
dec
frstor
push
sbb
cmp
inc
adc
xlat
mov
stc
xchg
int
scas
movsb
lods
cmc
jl
imulb
sub
arpl
rcrl
cwtl
dec
xor
jge
cmc
inc
es
add
mov
movsl
imul
jo
cmp
sahf
stos
lcall
test
fs
push
fldenv
cmp
lret
jno
call
add
xor
movsl
icebp
mov
mov
fistps
push
mov
dec
dec
push
leave
test
pop
inc
fwait
xlat
test
stc
lods
daa
sub
sbb
scas
inc
sub
call
lock
shrb
adc
out
inc
bts
adc
cld
inc
or
shlb
xchg
cltd
sti
and
sub
jbe
inc
lods
and
imull
imul
mov
push
and
leave
ret
push
movl
cli
lea
scas
loopne
test
jmp
test
lahf
icebp
pop
push
loop
icebp
mov
mov
out
dec
add
fcomp
sbb
mov
ficoms
lea
out
pop
add
movsl
andb
scas
xor
mov
pop
inc
insb
xor
xchg
pop
mov
xchg
mov
mov
add
push
push
sbb
lahf
fsubs
mov
xchg
std
push
sbb
addr16
adc
js
out
es
or
scas
popa
pop
xchg
pop
aad
shll
xor
mov
sub
call
movsl
fidivrs
cmp
add
test
inc
in
jmp
iret
shrb
movsb
or
idiv
jp
filds
fistl
add
fcoml
xchg
in
mov
cli
imul
loop
mov
pop
mov
push
push
sbb
mov
repnz
ror
jo
push
push
jg
or
fwait
aam
mov
in
aaa
push
cmc
mov
fdivr
mov
xchg
jb
jmp
push
test
xchg
mov
mov
out
aaa
push
add
fbstp
scas
les
js
push
inc
inc
mov
cmpsb
in
cmp
and
fs
push
cmp
ljmp
dec
out
inc
mov
rcrb
mov
fisttps
cwtl
push
or
sbb
loopne
add
rorb
pop
jmp
inc
mov
std
js
or
jle
mov
mov
cmpsb
cmp
xchg
repz
iret
mov
pop
xorb
decb
pop
data16
xor
adc
dec
add
addr16
daa
cmpsb
push
xchg
bound
adc
cmp
mov
xor
movsb
and
cld
sub
xchg
bound
and
popa
shlb
cmpsb
dec
and
sub
in
sub
jne
call
and
push
int3
ret
movsb
and
cmp
shl
inc
movsl
daa
mul
xor
mov
and
and
pop
and
sti
add
jb
push
push
popf
push
pop
and
leave
inc
mov
inc
testb
scas
sbb
das
xchg
adc
cmp
test
xor
mov
mov
cli
mov
inc
cmp
push
int3
xor
push
or
ret
lea
ja
cld
sti
pusha
mov
add
cli
nop
mov
loop
mov
add
cli
sahf
mov
ss
popf
mov
mov
stos
jecxz
pusha
out
call
divl
mov
pop
xchg
cmp
je
cwtl
mov
pop
ljmp
lock
add
rolb
jl
insb
dec
outsb
or
mov
cld
and
and
mov
fs
cmp
add
jae
lds
iret
outsb
icebp
xor
out
push
jno
push
stos
hlt
fwait
xor
bound
adc
and
dec
ret
pop
jo
imulb
movsb
mov
adc
mov
xchg
dec
adc
pop
mov
add
mov
adc
xchg
imul
repnz
idivb
mov
rorl
loope
test
add
cmp
mov
sub
inc
mov
push
dec
mov
pop
push
xchg
mov
jl
pop
dec
adc
bound
sub
and
cmp
push
int
std
sub
mov
inc
xchg
mov
mov
xor
push
fnstenv
in
outsl
or
xlat
shrl
gs
testb
adc
jb
js
sub
pop
cld
xor
shll
out
ret
popa
sbb
mov
stos
inc
popa
bound
push
gs
mov
lret
jge
jmp
inc
inc
jmp
rclb
mov
pusha
insb
xor
nop
pop
mov
cmp
ret
adc
mov
mov
enter
adc
test
dec
popa
ret
pop
add
sbb
and
and
pusha
xor
popf
sbb
mov
inc
inc
rcrl
out
pop
and
aad
enter
loop
aaa
jno
outsl
adc
inc
out
pop
mov
cli
xlat
lret
sub
dec
frstor
sub
imul
mull
push
sti
or
pop
jp
stos
mov
es
mov
clc
test
mov
pop
jnp
and
and
hlt
andb
cmpsb
fsubs
call
and
popa
jl
cwtl
xchg
add
loope
push
inc
mov
mov
jb
insb
pop
add
ret
arpl
lret
addr16
ror
jno
mov
mov
add
dec
cld
xor
ret
cmpsl
jnp
pop
and
in
push
mov
jmp
dec
ja
outsl
int3
mov
jnp
rorb
inc
ss
arpl
xchg
dec
shl
mov
popa
stc
adc
inc
in
mov
subb
les
add
test
repnz
rcl
and
outsl
sbb
jnp
xchg
stos
push
ja
adc
in
xchg
lret
push
cmp
fisttps
jns
ret
clc
mov
bnd
and
std
movsb
dec
jns
mov
and
pop
and
in
inc
mov
xor
lcall
shll
sbb
ds
add
lret
testb
inc
inc
jns
pop
lods
popf
mov
shl
jae
push
mov
int3
mov
test
nop
sub
pushf
mov
xor
sub
cmp
mov
mov
mov
outsb
das
lods
sub
mov
fwait
dec
sti
sub
dec
test
hlt
mov
jmp
in
push
mov
cs
push
in
xor
mov
mov
cwtl
rcrl
xchg
sarb
adc
mov
mov
ror
int3
dec
xchg
or
js
outsb
repnz
mov
mov
std
sbb
scas
xchg
mov
int3
pushf
push
out
jo
lea
push
lahf
pop
sti
push
add
aam
orl
icebp
add
adc
push
mov
inc
mov
aam
daa
scas
add
cs
mov
outsl
push
sub
out
cmpsb
fcompl
int
into
stos
or
stos
mov
mov
cmp
in
and
sub
cmp
jmp
xchg
dec
adc
adc
adc
in
int
xchg
inc
adc
pusha
xchg
sub
adc
sbb
cmpxchg
or
outsb
mov
fstps
fsubs
or
rclb
iret
insb
popf
xchg
pop
outsl
and
lcall
push
or
hlt
mov
lds
insl
add
mov
push
subl
jbe
inc
push
gs
mov
or
mov
adc
fidivrl
mov
adc
cmp
inc
jmp
inc
adc
cmp
inc
movsl
insb
fxam
jno
sub
jg
sbb
jnp
cmp
and
dec
cwtl
mov
dec
adc
aaa
xchg
adc
rolb
mov
xchg
fistl
xlat
lcall
jecxz
pop
pusha
and
loopne
dec
and
dec
shll
lret
call
pop
shrb
xlat
add
pop
lds
cmc
and
push
push
ret
xor
and
mov
inc
pop
mov
dec
jmp
icebp
icebp
lret
mov
mov
mov
push
aaa
dec
jmp
jp
stos
mov
roll
sbbl
dec
mov
pop
push
xor
and
add
shll
js
in
test
pop
or
sahf
xchg
aas
popf
rol
jge
icebp
sbb
and
fwait
sahf
lds
inc
push
ja
sti
aaa
inc
scas
push
out
cmpsl
cmc
leave
xchg
sub
into
sub
or
pop
xchg
ret
sti
dec
stos
cs
push
ret
mov
leave
mov
popa
pushf
rorb
int
in
mov
sbb
xlat
inc
inc
lds
insb
mov
subl
popf
cmpsl
cld
fldcw
jge
in
sub
jbe
dec
int3
adc
or
adc
dec
lds
add
loop
stc
and
loop
xlat
inc
pop
mov
inc
pusha
jae
sub
div
iret
sub
jmp
or
sbb
js
pop
call
leave
ficomps
sub
fdivl
addr16
das
pusha
gs
pushf
pop
sbb
inc
mov
mov
mov
and
imul
cmp
jne
fcomps
mov
imul
dec
xor
enter
ja
insb
sbb
pop
add
or
lret
mov
orl
cltd
jo
xchg
add
inc
aad
cmp
xor
xchg
scas
mov
outsb
sahf
ret
fisubrs
xchg
mov
xchg
test
es
mov
xor
lret
aam
mov
or
cmpb
aaa
pusha
mov
call
xor
sub
test
pusha
sub
add
adc
dec
xor
inc
js
int
xchg
js
inc
lret
pop
sub
imul
jge
dec
movsl
popf
dec
popf
and
in
dec
cld
jns
out
outsl
fs
repz
aas
out
fwait
push
loop
imul
jg
pushf
cmpsb
hlt
ret
push
ret
cmc
xor
dec
push
rcrb
adcb
mov
testb
xchg
xchg
mov
dec
stos
lock
cwtl
xlat
xor
negb
daa
js
in
push
jl
push
daa
movsb
mov
inc
iret
inc
ja
mov
pop
adc
lds
loop
and
mov
popf
jle
mov
or
mov
xchg
cmp
and
adc
adc
mov
inc
repnz
cltd
cli
lods
sbb
jno
or
fstps
inc
enter
fbstp
imul
aas
in
and
fists
rorb
out
mov
xor
jo
aas
subb
dec
subb
iret
std
add
inc
pushf
mov
das
jge
mov
std
test
jmp
mov
notl
inc
mov
mov
dec
xchg
pop
insl
sbb
loopne
xor
lcall
xchg
mov
mov
pop
mulb
pop
shr
adc
fbld
xor
jp
fidivl
mov
mov
mov
ret
xor
shlb
loope
in
sub
xchg
fcoml
dec
cmp
imul
fcmovnb
push
loopne
jecxz
mov
test
mov
cmp
loop
movsl
int3
int
lret
mov
shrl
jno
xchg
repz
jb
stos
lock
clc
fdiv
jo
inc
pop
sbb
imull
add
push
mov
popf
enter
push
fisubrs
call
push
dec
rcl
fcmovbe
push
mov
pop
leave
jo
lea
hlt
enter
fsubs
adc
pop
aaa
shrl
adc
mov
mov
jbe
fsubrs
adc
mov
enter
stos
cmpsb
xchg
lret
push
lret
hlt
fsubs
fldenv
lret
fs
out
int
imul
pop
dec
aas
dec
adc
mov
rclb
in
ret
scas
loopne
js
jecxz
ss
imul
test
sbb
add
push
leave
xchg
or
mov
stos
imul
dec
mov
xchg
xor
dec
cmpsl
add
inc
xor
stos
jo
imulb
lcall
lods
add
jns
je
push
or
xor
ficomps
cmp
aam
orl
gs
jmp
lahf
repz
pop
insb
xor
mov
inc
mov
add
push
pop
ret
ljmp
hlt
test
xchg
push
push
hlt
pop
xchg
pop
leave
lods
sbb
stos
sbb
jnp
or
xor
frstor
cli
ds
xchg
dec
xlat
dec
adc
lret
outsl
lret
jno
add
test
mov
div
mov
cmp
sub
cmpsl
test
lods
xor
test
frstor
xor
add
push
sbb
xor
cmp
adc
lcall
sti
enter
lods
sub
aam
or
repz
xchg
adc
or
adc
jmp
loop
pop
xchg
out
sub
inc
mov
rol
and
and
fistl
and
xchg
icebp
push
sub
xchg
mov
sub
lret
add
cmpxchg
sbb
stos
outsb
pop
outsl
sti
mov
fwait
fs
sbb
idivb
xchg
xor
inc
inc
int
jne
jbe
mov
xchg
xor
out
adc
clc
mov
adc
push
test
xchg
sub
dec
and
arpl
lods
pusha
rcrl
jge
or
cmp
mov
lods
lock
jns
fs
in
adc
xchg
notb
movsb
stos
ficoms
js
xor
call
in
loop
xchg
jmp
mov
push
sti
mov
andb
popf
mov
push
add
aam
mov
adc
inc
test
mov
int
mov
div
pop
pop
push
push
fbld
xchg
push
xor
jb
out
push
fsts
stos
mov
clc
push
add
pusha
pop
or
jmp
lret
lea
dec
inc
jecxz
rcrl
xchg
std
aad
sbb
scas
xchg
popf
arpl
roll
test
mov
lea
jp
cmc
stc
cli
push
imul
and
jne
insb
out
ret
test
add
fwait
in
popf
push
add
xor
lea
in
sub
fists
or
mov
xchg
mov
inc
pop
pushf
dec
imul
dec
add
push
in
ret
repnz
sub
mov
hlt
lahf
fisttpl
enter
cltd
hlt
mov
out
leave
jno
xor
mov
daa
dec
adc
mov
dec
arpl
test
arpl
ds
cltd
push
mov
dec
outsb
aad
push
out
stos
sbb
sbb
stos
jno
sbb
lahf
xchg
shrl
sbb
call
fsubr
dec
cmp
pusha
mov
rorl
lods
loope
cmp
jge
adcb
rclb
dec
js
cmpsb
inc
scas
push
push
push
ja
inc
or
lcall
test
mov
push
cs
and
scas
inc
adc
sub
xchg
jle
xor
sbb
cmp
xor
repnz
lock
lahf
out
push
lret
int3
xor
and
jno
les
decb
jb
sub
sub
adc
jmp
nop
rorb
movsl
xor
cmc
into
sbb
mov
mov
repnz
loop
out
dec
fstl
ret
popa
sub
cmp
xchg
call
push
inc
jno
jbe
out
dec
out
imul
sarl
or
push
je
cwtl
aaa
aas
imul
fdivrl
sub
movsl
xchg
and
adc
push
sbb
call
push
inc
push
pop
lods
scas
lahf
cmpsl
jge
hlt
int3
cmpsl
mov
aad
iret
movb
cwtl
cs
daa
inc
ja
aas
adc
cmp
push
xor
cmp
sub
scas
in
sbb
push
das
add
std
push
pop
ljmp
dec
cwtl
add
lea
mov
mov
fimuls
adc
daa
inc
or
fimuls
dec
dec
in
jmp
popa
mov
jmp
and
in
rcl
je
test
sub
push
cmp
in
std
jne
or
fsubl
push
call
sti
stc
adc
cmp
nop
cmp
sbb
mov
stos
cmp
mov
das
mov
push
sub
lods
lock
add
aas
filds
or
xchg
xor
loope
mov
scas
iret
jae
and
push
cmp
cmp
pop
or
adcb
loop
aas
mov
mov
adc
mov
je
loope
mov
ficoml
dec
aam
lock
mull
push
mov
iret
shl
mov
xchg
cmp
or
mov
and
ret
inc
mov
loop
xor
push
es
inc
jb
jb
or
cs
dec
and
sbb
fistps
out
jne
addr16
ficoms
ret
inc
xchg
dec
mov
std
mov
rorw
adc
faddl
xor
mov
popa
lds
xchg
inc
movsl
mov
in
xchg
add
js
mov
outsl
movsb
rcrb
xor
sahf
push
test
xlat
mov
pop
scas
shll
test
or
jns
xchg
xchg
andb
insl
enter
mov
shll
pop
ljmp
aas
adc
adc
loope
dec
in
lods
rol
sarl
hlt
stos
jp
push
add
mov
mov
jecxz
mov
push
xchg
mov
outsb
jae
outsb
push
add
out
xchg
stos
and
cmp
dec
lret
push
je
dec
sti
xchg
sbb
adc
daa
xchg
and
scas
jo
clc
popf
stos
in
lds
jns
dec
test
aaa
or
aad
out
mov
push
pushf
mov
push
mov
test
jg
test
pop
inc
cld
lahf
lock
push
fcoml
scas
loopne
or
stos
inc
xor
inc
test
xchg
outsl
popa
or
mov
cmp
cld
test
imul
ja
insb
inc
jb
shll
jo
faddp
mov
cld
lea
mov
inc
ficoml
mov
sub
mov
add
mov
pop
inc
pop
in
mov
xor
pop
mov
clc
sbb
inc
lret
push
lcall
xchg
ficompl
cwtl
fwait
xor
je
xor
xor
cld
cmp
cld
jns
bound
add
into
je
and
dec
mov
dec
adc
inc
ss
cmp
add
dec
jg
add
cmpsb
xor
gs
adc
clc
xor
aad
fwait
call
loop
cmp
cwtl
out
bnd
sub
shrl
leave
test
jne
mov
popf
insb
test
rcrl
cmp
cs
fs
or
dec
dec
mov
daa
sbb
mov
outsb
in
in
lods
outsb
je
stc
mov
pop
cmp
icebp
inc
dec
inc
or
and
lcall
outsl
frstor
stc
outsb
mov
test
fimuls
imul
push
mov
iret
out
test
imul
or
xchg
mov
fidivrl
subb
add
hlt
mov
mov
shll
sub
into
test
pop
jo
or
fidivs
stc
lds
js
push
mov
aam
or
out
xchg
lds
pop
jnp
in
outsl
push
inc
push
stos
fldenv
int3
fsubr
push
dec
mov
outsl
leave
jnp
push
outsb
ja
or
push
push
mov
aaa
lods
js
pop
out
call
xchg
aad
int3
or
loopne
test
cmp
jne
stos
ficoms
cmp
pop
push
sbb
mov
mov
cli
negl
loopne
pop
or
sub
push
movsb
lods
dec
add
lcall
push
adc
test
stos
decl
shrb
mov
hlt
ljmpw
pop
add
int
sarl
sbbb
bound
ljmp
cwtl
fsubrl
je
fstps
add
sub
sub
cmc
xlat
test
xchg
int
dec
lods
bndldx
dec
jl
jle
bound
adc
xor
dec
test
xchg
test
repz
lret
and
addr16
bnd
repnz
or
jbe
sti
cmp
gs
lret
pusha
sbb
js
rorb
sub
in
cli
addr16
push
out
jmp
jo
jecxz
daa
leave
sub
call
jbe
in
in
fisttpl
jp
adc
mov
and
xor
jg
or
daa
inc
cmp
add
mov
cmpsl
xchg
fistpl
hlt
mov
xchg
ficompl
sub
xchg
ja
mov
push
pop
adc
sub
mov
sub
mov
pop
cltd
sbb
movsb
stos
mov
std
sub
mov
mov
out
lods
cmp
cmpsb
aaa
push
push
mov
shl
lahf
pop
dec
adc
fadds
pop
inc
push
scas
nop
add
stc
xchg
mov
outsl
pop
sub
inc
dec
cld
cltd
mov
nop
call
in
scas
lock
add
std
mov
cld
dec
into
cmp
cmpsb
dec
stos
test
sbb
jnp
sbb
dec
xchg
push
in
lret
xchg
pop
pushl
cld
cmp
adc
mov
imul
cmpb
sbb
shll
inc
xchg
sbb
add
mov
test
cs
jmp
fistpll
loopne
mov
add
in
mov
jle
cmp
push
adc
out
cmpb
mov
jmp
fdivrs
inc
sahf
jge
in
sbb
add
lods
lods
and
aaa
mov
sbb
push
mov
call
cmc
sbb
ja
loop
push
aam
push
push
in
cs
std
and
in
push
cmp
push
and
pop
shl
mov
cmp
lea
lret
jg
mov
lock
add
repz
push
push
mov
inc
and
jnp
aas
push
loop
aad
lahf
xchg
pop
xor
insb
loop
roll
sbb
pop
vpacksswb
imul
ss
nop
movsb
mov
or
pop
dec
sub
xchg
xor
pushl
imull
jbe
xor
push
outsl
ds
out
sarl
lret
inc
js
adc
cltd
lock
xor
test
mov
adc
loope
pop
loopne
adc
cmpsb
popf
test
or
enter
cmp
sub
sub
push
and
ja
es
mov
pop
aas
mov
aam
or
push
ds
dec
imul
pop
je
adc
pop
adc
das
int
and
pop
sti
or
iret
mov
push
and
test
shrb
mov
loope
sarb
mov
fstpt
sar
push
imul
jmp
mov
movsb
cmp
repnz
lret
sbb
inc
mov
or
cmp
push
push
btc
pop
xchg
cmc
pop
mov
cmp
dec
jle
xor
mov
hlt
inc
inc
or
fidivl
sub
dec
rcll
stos
icebp
popa
dec
add
es
rcrl
es
xor
jmp
push
clc
sub
lock
fidivs
out
sub
out
jg
cmp
lds
inc
push
pop
mov
nop
xlat
int3
jae
cmpsl
xchg
shrb
pop
cmp
mov
mov
pop
mov
dec
ror
cmpsl
jmp
repnz
cmpsb
inc
out
cmpsb
leave
xor
test
sbb
imul
in
mov
push
pop
mov
push
push
call
loopne
notl
cmp
mov
enter
push
or
push
outsb
iret
daa
stos
adc
sub
ss
and
xlat
cmpsb
leave
in
jg
xchg
dec
jae
push
lcall
inc
xchg
push
test
fists
jns
push
adc
call
pop
add
test
push
adc
loop
sub
out
sub
imull
add
out
cmp
push
sahf
cs
xor
or
dec
ljmp
sbb
fwait
dec
imulb
flds
or
imul
lret
idivl
xchg
cs
ret
movsb
leave
pop
add
popa
mov
adc
sbb
daa
xor
repnz
ss
mov
ss
mov
xor
std
lcall
stos
lcall
push
xor
add
cld
stos
scas
inc
mov
std
sarl
enter
test
mov
xor
aad
mov
inc
fs
or
shll
sub
add
fldt
int3
pushf
inc
dec
movsb
nop
adcl
mov
jae
daa
vsubpd
scas
nop
popa
pop
sarb
add
pop
test
push
sub
pop
jae
adc
popf
out
pop
aaa
inc
jne
les
jo
sub
fwait
lret
xor
and
mov
test
mov
cmp
call
cwtl
and
sti
aaa
mov
dec
push
cmpsl
dec
clc
lcall
stos
mov
roll
dec
pop
notl
or
add
jecxz
inc
push
pop
rcl
cmpsl
xlat
mov
xchg
inc
loopne
repnz
in
sar
arpl
lods
mov
imul
pushf
dec
inc
test
cmp
js
adc
cs
cmp
sbb
nop
cmp
ss
jo
sarl
andb
xchg
movsl
sbb
mov
out
enter
xor
mov
mov
sbb
cmp
ss
add
or
scas
mov
dec
jmp
test
out
popf
cmp
mov
enter
mov
xchg
js
scas
adc
out
mov
pop
dec
cmp
dec
cmp
adcl
mov
mov
imul
ja
test
lds
movsl
ds
imul
mul
in
jg
push
xor
scas
mov
jne
jno
dec
lahf
mov
arpl
sahf
jo
pop
inc
xchg
adc
sub
xchg
add
test
cmpb
xchg
xor
xchg
js
inc
xor
mov
lea
pop
movb
inc
inc
and
cld
wrmsr
sub
mov
int3
dec
int3
pushf
pop
sarb
xor
rcl
sbb
or
aas
sub
mov
sti
ss
fisttps
scas
and
mov
loope
in
sub
rol
js
pop
ds
cli
lret
aas
shlb
pop
xchg
scas
aad
push
pushf
mov
push
outsb
adc
jne
xchg
mov
mov
push
jno
push
xor
scas
pop
testl
jmp
cmp
out
pusha
mov
addb
aas
aas
ret
pop
dec
cmpsb
enter
push
outsl
loop
lahf
sub
mov
dec
add
ret
stos
jge
adcl
lret
out
cltd
ud1
pop
adc
pop
sarl
jne
pop
add
mov
mov
fwait
xchg
cmpsb
xchg
pop
mov
stos
rorb
stos
push
xchg
cs
xchg
sub
fwait
push
les
scas
jbe
xchg
inc
jmp
add
outsb
cwtl
fmul
jge
push
mov
jge
xchg
sahf
push
andb
jp
adc
dec
mov
add
xchg
test
mov
stos
aad
pop
jnp
jno
in
mov
dec
jle
js
ret
jns
adc
ret
inc
in
lret
jnp
ljmp
mov
dec
adc
pusha
cmp
imul
int3
out
jo
push
and
push
outsl
iret
or
scas
sub
jo
popa
jns
sub
sbb
jno
jle
cs
fs
push
sub
inc
addl
mov
shl
outsb
rcrl
sbb
inc
aad
cld
pcmpgtb
push
out
or
stc
mov
lods
jge
cmc
pushf
inc
divb
cmc
movsl
xchg
or
mov
mov
outsl
in
arpl
into
cmp
mov
mov
mov
mov
cmp
push
inc
jbe
push
lock
or
inc
push
ljmp
stos
pop
lret
lret
enter
cmp
push
in
fldcw
jne
jecxz
fwait
popf
mov
sub
mov
repnz
adc
test
ljmp
stc
lahf
popf
push
test
stos
mov
pop
leave
incl
aas
insl
repz
push
sbb
mov
pop
outsl
out
cwtl
pop
lret
test
inc
test
mov
cmp
mov
lds
push
jo
inc
pop
push
fdivr
or
mov
mov
fwait
and
test
push
mov
ljmp
lahf
lret
xor
rorb
call
xchg
jmp
sub
pop
pop
scas
nop
aas
popf
cwtl
lret
and
inc
jo
in
aad
icebp
lret
add
rcrl
dec
xor
and
fcmovnbe
push
cltd
loope
sub
in
mov
xorb
mov
ljmp
push
add
rol
imul
test
pop
xchg
adc
push
out
cli
add
jb
push
insl
mov
adc
cs
rorb
dec
das
out
fldenv
fmuls
rolb
push
push
ss
iret
mov
iret
fildl
xchg
or
mov
mov
add
push
repz
out
insl
rolb
pop
lods
stc
gs
push
mov
inc
cmp
movsl
dec
sub
inc
adc
loope
dec
stos
hlt
add
xrelease
lret
es
aam
cli
test
push
int
xchg
into
cwtl
mov
push
test
cmp
adc
enter
test
adc
mov
pop
xchg
pop
push
inc
jns
imul
lcall
add
ds
mov
or
or
cwtl
push
adc
mov
sqrtps
cmpsl
sub
cmp
fimuls
dec
push
mov
movsl
dec
or
mov
sarb
cltd
jp
mov
loopne
pusha
jecxz
out
sub
icebp
test
and
sbb
imul
push
mov
push
mov
mov
mov
xor
add
in
mov
ss
cmpsb
jo
mov
popa
into
ror
cmc
add
mov
or
nop
nop
outsl
push
imul
fstps
jmp
rolb
xlat
add
and
mov
jns
jno
xor
mov
daa
arpl
push
fs
stc
imul
pop
mov
cmc
leave
iret
jo
ss
cmp
js
cs
scas
out
fsubs
or
filds
cmp
ljmp
aam
xchg
loop
or
lahf
out
insl
push
add
adc
in
fmull
dec
ljmp
aas
mov
cmp
loope
stc
jmp
push
xor
inc
test
xchg
jmp
xchg
mov
arpl
cli
push
xor
repnz
dec
xchg
ret
xor
lods
aaa
cmp
dec
gs
adc
inc
cmpsb
fnstsw
mov
clc
dec
movsl
xorl
pop
outsb
pop
bound
pop
mov
dec
sahf
mov
shrb
aaa
sbb
das
fmul
outsb
cmp
stc
out
dec
cmp
sahf
push
mov
mov
mov
mov
mov
cli
xchg
cmp
adc
popf
jne
cmp
iret
in
and
mov
out
andl
fidivs
imul
ss
jns
xchg
mov
pop
lret
fs
jecxz
pop
test
cmc
ror
cmpsl
jge
mov
leave
repnz
add
mov
out
mov
cmpsl
inc
or
aaa
test
pop
enter
dec
xchg
pop
mov
xchg
mov
in
loopne
ja
into
cmc
jb
add
in
in
xor
push
jne
lcall
fimull
lea
stos
push
stos
fs
mov
xorb
and
lods
scas
call
lods
xorl
clc
ret
jge
pusha
repnz
inc
outsb
popa
cmp
xor
stc
aas
push
push
std
loope
fcoml
mov
push
incb
mov
and
pop
nop
stos
test
xor
ja
aam
mov
jmp
testb
jp
daa
sub
jmp
ljmp
fmul
js
xor
mov
stos
pop
pop
cmpl
push
add
inc
lea
movsb
mov
mov
adc
mov
fimuls
lret
stos
inc
in
add
out
push
out
hlt
push
inc
in
mov
xchg
js
inc
xchg
mov
dec
popf
enter
in
pop
movb
mov
mov
fisubs
scas
insl
pusha
test
cmpsb
in
out
push
sbb
xchg
lret
push
push
mov
jb
add
pop
mov
and
push
movsl
cs
add
out
jg
js
pop
mov
jne
xchg
dec
sarl
stos
xor
or
and
mov
mov
sahf
jge
jmp
repz
das
dec
std
lock
dec
subb
or
mov
repnz
repz
bound
scas
push
hlt
gs
xor
out
jmp
movsb
addr16
cmp
and
xlat
mov
pop
hlt
sub
dec
sub
lahf
adc
add
shrl
push
pusha
stc
enter
add
sbb
push
mov
inc
lret
mov
mov
test
dec
mov
dec
mov
sub
push
inc
nop
js
xor
sbb
add
je
fwait
sub
pop
mov
pop
cmp
lret
je
negb
loope
gs
xor
gs
sbb
mov
pop
push
fisubrs
sarl
mov
pop
mov
cli
fs
xor
js
repz
or
sbb
test
imul
ret
out
mov
cmc
add
cwtl
pop
and
popa
adc
pop
js
jb
xchg
xor
xor
cmp
hlt
cltd
outsl
xor
or
enter
shl
cli
mov
sub
pop
or
mov
pop
or
and
fdivs
mov
adc
sbb
cmc
aad
sub
pop
popl
popf
in
sub
add
mov
in
mov
mov
repnz
cltd
lret
stc
xchg
mov
sbb
and
sbb
insb
pop
xchg
lods
mov
insb
lds
push
fcompl
shlb
ss
jae
or
mov
or
push
dec
or
popf
jnp
fsubrl
adc
jmp
or
repnz
cmp
jge
mov
cmp
test
push
cwtl
lcall
add
pop
push
popf
rclb
xchg
cmp
push
cmp
ret
mov
dec
or
add
call
js
lds
fiaddl
push
adcb
stc
or
subl
cmp
lcall
push
jg
push
xchg
add
sbb
cmovs
gs
fistps
in
jl
push
inc
sub
dec
fistpl
jle
popf
adc
mov
inc
stos
ds
repz
into
lods
xchg
mov
cs
test
push
gs
clc
fsubrs
pop
lds
mov
dec
fimuls
cmc
fistpl
decl
pop
loopne
add
cld
les
mov
add
sbb
or
sahf
jl
rcr
sub
lods
xor
xor
jle
movsl
xor
sbb
fldt
or
xchg
sub
out
and
dec
xor
addr16
jl
loopne
jo
mov
lods
int3
adc
cmp
rcrl
push
push
hlt
push
dec
sbb
int3
rcl
ja
xchg
hlt
xor
jmp
rcr
cmp
jae
sbb
sbb
cmp
jge
push
xchg
imul
fsubl
flds
imul
pop
inc
ljmp
out
je
mov
jmp
sub
imul
fnsave
ja
in
mov
loop
xchg
sub
mov
jl
or
out
lods
jge
sub
cwtl
notl
icebp
mov
xchg
cmpsl
fs
js
dec
loope
jns
push
or
lds
push
je
xor
test
mov
inc
nop
test
jmp
jne
jbe
je
sub
mov
sbb
push
inc
test
shrl
lret
add
subl
xlat
xchg
sub
xchg
jo
imul
xorb
cmp
add
outsl
jg
insl
and
and
cmpsl
mov
sbb
pushl
sub
lcall
movb
dec
inc
xchg
cmpsb
xchg
sub
clc
mov
es
or
inc
mov
push
test
push
jg
out
xorb
sbb
sbb
mov
sub
xchg
int
loope
sarl
or
sub
in
pop
std
adc
xor
mov
inc
jg
jmp
dec
mov
sub
addr16
in
aad
pop
into
or
cmp
push
imul
scas
xchg
enter
lock
sbb
or
mov
and
negl
test
cmpsl
insb
scas
jns
cmp
cmp
cmp
rorl
imul
and
std
outsb
lahf
adc
inc
jl
dec
mov
and
aas
pushf
test
aam
cmp
jge
mov
out
repnz
xor
push
fisubl
cmp
aas
nop
or
fcom
jo
mov
xor
repz
out
and
inc
cli
or
mov
sub
jo
xor
fwait
pop
mov
pop
inc
pop
icebp
push
adc
mov
jb
jmp
push
mov
push
jno
mov
adc
mov
nop
pop
rcl
push
push
dec
jae
push
stos
sub
loope
ja
bnd
in
jo
rol
movsb
adc
test
ja
out
mov
jg
sub
mov
jb
mov
cmp
xlat
mov
inc
test
je
jmp
xchg
pop
jbe
cmp
dec
test
cmp
adc
mov
mov
mov
daa
mov
sbbb
mov
sub
sti
lcall
sbb
lret
inc
pop
pop
xchg
push
sbb
aas
pop
ret
fcmovb
pop
jl
popa
mov
cmpsl
sti
rorl
dec
pop
fstpt
push
pop
add
call
lret
daa
outsl
mov
std
into
mov
stc
cmp
lds
pop
rorb
test
in
sub
dec
sub
data16
mov
cmp
lret
xchg
push
mov
lret
and
jns
lock
int
add
sub
cmpsl
loope
bound
or
fcmovbe
hlt
mov
pop
test
or
std
lea
imul
sub
jmp
xchg
push
outsb
push
add
dec
or
mov
dec
in
sbb
jg
sub
jbe
jae
xchg
cmp
dec
shrb
add
add
movsl
bound
mov
jmp
or
repz
inc
push
xor
push
insb
jl
and
xlat
orl
sbb
int
sub
test
xor
ljmp
leave
jb
addr16
push
addr16
cmp
ds
cmp
stos
fwait
stos
movsl
push
inc
jp
stos
xchg
movsl
fmuls
lret
insl
pop
int
push
xchg
mov
xchg
mov
test
insb
inc
mov
jb
leave
loope
test
adc
xor
jl
arpl
mov
and
xchg
cld
gs
inc
or
insl
lret
sbb
shlb
push
test
popf
out
mov
cli
pop
push
inc
arpl
cmp
in
test
aas
push
dec
mov
sarl
cltd
push
mov
cmp
dec
ljmp
out
call
pop
sub
call
add
and
mov
dec
out
dec
flds
mov
push
mov
or
loopne
lods
push
insb
push
push
ffree
push
mov
jnp
push
lea
scas
sbb
inc
jno
lods
out
popa
scas
sbb
cwtl
mov
dec
push
jecxz
or
mov
sbb
jmp
and
xchg
push
push
jmp
sub
fs
or
jle
inc
popf
in
lcall
lret
sub
cbtw
mov
cmpsb
nop
lods
mov
push
data16
cmpsl
xorb
outsl
mov
out
push
movsl
mov
ljmp
xchg
das
inc
andl
xchg
pop
xchg
mov
and
fidivrl
cmp
rorl
call
ljmp
adc
fistpll
cmp
mov
std
in
mov
sub
lea
add
sbb
pop
inc
cmp
movsb
fldl
adc
data16
fbstp
mov
mov
shll
mov
lcall
in
and
xorb
movsl
leave
mov
inc
inc
orl
dec
lea
lea
out
cwtl
aad
dec
mov
rolb
nop
push
xor
xor
adc
cmc
pop
sbbb
push
cwtl
mov
xchg
stc
hlt
jno
out
inc
loope
xchg
lcall
enter
test
lock
lcall
sub
mov
addl
into
mov
out
lret
repnz
out
push
ss
dec
pop
mov
je
hlt
in
lea
call
or
xor
inc
or
dec
push
sahf
jg
dec
sub
cs
jmp
and
out
int3
push
aaa
stc
or
pop
pop
mov
std
shrl
adc
adc
sahf
lods
mov
es
insb
cmpb
mov
scas
dec
sarl
aam
mov
int
into
lock
dec
sbb
outsb
cmc
out
enter
jl
xchg
in
cmp
sbb
pushf
pop
sbb
mov
out
push
cmpsb
adc
xchg
rcrb
adc
xchg
sub
mov
int
lds
adc
push
push
ja
mov
lcall
into
and
fisttps
lds
fidivs
lcall
add
inc
pop
js
es
mov
fs
adc
outsb
cltd
popa
jg
ret
or
aas
push
lods
int3
test
ficompl
push
stos
push
push
cld
jmp
int
pop
add
jno
dec
dec
sti
add
sub
sbb
mov
sub
stos
lock
pop
sbb
pop
gs
push
imul
fwait
jp
lds
mov
cmpsl
pop
test
jle
in
push
or
addr16
pop
jbe
push
scas
fwait
and
scas
push
pop
sarl
push
and
lods
fldenv
sbb
js
pop
fimuls
push
xor
sbb
lret
xor
mov
arpl
and
dec
sub
sub
push
mov
out
or
ljmp
aas
es
pop
cmp
test
je
into
mov
xchg
js
cmp
sbb
sti
in
cmp
stos
lahf
rcl
xchg
iret
insl
jge
std
sbb
cltd
xchg
inc
int3
dec
jg
subl
loope
cltd
adc
cmp
xor
mov
and
es
sti
and
ja
hlt
pop
pop
sbb
aas
stc
mov
dec
arpl
inc
cmp
out
pusha
dec
je
mov
xor
dec
and
cmpl
sahf
aad
ficoml
mov
pop
and
xchg
int
mov
cld
mov
cmovo
call
scas
adc
call
outsl
fstpl
or
mov
rorb
fs
cmp
nop
push
lea
cmp
adc
jne
sub
dec
repz
shrb
lods
sarl
lcall
loop
rcrl
mov
mov
cmpb
xor
ja
and
mov
scas
in
outsb
jno
mov
jns
les
jno
out
xchg
xchg
out
mov
test
daa
sub
or
lcall
mov
mov
mov
shll
and
movsb
out
xchg
lea
add
add
clc
repz
pop
dec
xchg
inc
add
mov
lds
push
popl
xlat
dec
dec
test
mov
mov
popa
jbe
cmp
sbb
call
movsb
scas
ss
ss
jbe
ret
sbb
xchg
fwait
ror
arpl
mov
mov
sti
cmpsb
xchg
xor
je
sti
dec
add
mov
shl
cli
sti
or
repz
mov
shl
andl
push
adc
xchg
lret
fnstenv
adc
mov
out
rcrb
dec
sahf
stos
pushf
and
fprem
mov
pop
xchg
stos
adc
push
repz
insl
lret
dec
pop
int3
int
std
mulps
test
mov
fcomps
mov
and
out
lock
xchg
jl
mov
push
xor
gs
fcomps
xchg
bound
pusha
mov
inc
ficoms
pop
sahf
cmp
ror
sub
or
mov
xchg
stc
cmp
lods
or
lahf
cmc
lret
iret
push
mov
loop
std
popa
push
add
cmp
xor
mov
call
out
outsb
add
jne
std
pop
push
xchg
cmpsb
push
cmp
inc
inc
loopne
inc
scas
and
dec
inc
cmc
push
int
rep
icebp
jno
add
inc
jne
push
jo
sbb
stc
push
pop
mov
dec
test
int
dec
xchg
imul
dec
lock
js
icebp
das
std
cld
add
repz
xchg
ficomps
stc
dec
lds
cs
int
mov
lret
div
add
stc
sbb
fildll
fistps
mov
push
clc
aam
filds
psubusw
insl
sbb
add
inc
jb
jae
stos
aam
loopne
sub
push
fsubrp
ja
or
mov
or
in
dec
addr16
cs
adc
aaa
lcall
push
mov
jb
and
das
ret
cmp
out
and
pop
xlat
dec
aas
fcompl
xlat
pop
sbb
pop
sub
and
push
ljmp
scas
std
jmp
sbb
xchg
lds
aad
jae
jb
jb
cltd
pop
ljmp
jbe
hlt
pop
stos
and
fcoml
mov
push
pusha
xlat
lock
sub
pop
mov
xor
ret
dec
mov
test
and
hlt
mov
push
xchg
popa
adc
fsubl
xor
das
xor
fidivrl
add
push
or
pop
fnstenv
xor
xchg
cmp
jmp
dec
ret
test
sub
pop
pop
add
add
shll
and
loope
aad
adc
xchg
mov
mov
shl
push
push
bound
lods
inc
adc
in
movsb
add
int
and
and
std
pushf
mov
imul
sub
rcr
add
iret
xlat
inc
mov
pop
mov
push
lcall
xor
mov
xor
out
lds
sub
pop
shll
jns
jle,pn
shrb
xchg
pop
mov
shrb
adc
xor
xchg
adc
arpl
stos
push
fimull
dec
sbb
addr16
pusha
ja
push
fsubr
testl
mov
and
mov
iret
xlat
adc
add
jp
pop
in
aad
das
pop
xlat
repz
pop
scas
nop
jl
cli
out
int3
xor
sbb
and
sahf
sarb
hlt
add
daa
es
outsl
les
adc
fwait
pushf
pop
sub
jp
clc
sbb
jo
testb
iret
xchg
and
hlt
daa
mov
rolb
jmp
lock
addl
dec
inc
mov
in
add
inc
lret
add
xor
mov
or
repnz
repnz
fisubl
xchg
imul
shl
xchg
cmpsb
push
cltd
shr
and
pop
and
lret
mov
fistpl
test
or
cmc
push
lock
dec
enter
fiaddl
sbb
mov
xor
mov
popa
xor
pusha
cmp
scas
cmp
pop
mov
out
mov
lock
adc
addr16
mov
inc
mov
gs
pop
rcll
jle
sbb
je
js
jnp
jmp
repz
pusha
or
inc
lods
cmc
scas
hlt
stc
orl
pop
lahf
lea
sbb
out
mov
dec
ret
adcl
adc
push
sarb
fldt
je
adc
jg
cmp
dec
iret
shrl
mov
dec
jnp
cltd
jno
and
push
xchg
in
sbb
test
xchg
ret
mov
test
adc
or
push
ret
pop
lcall
push
dec
inc
in
xor
add
pushf
cmc
adcb
sub
pushf
mov
insb
and
mov
xchg
subl
es
loopne
dec
adc
xor
sarb
and
cltd
les
sarb
movsl
adc
mov
sti
sarb
leave
inc
pop
push
stos
pop
mov
add
fildll
push
xchg
mov
repz
add
sbb
jno
or
cmp
cmpsb
stos
xchg
cli
lods
push
push
push
lret
dec
dec
stc
std
mov
cmp
fistps
scas
xchg
xor
sbb
mov
in
cmp
inc
jmp
or
adc
pop
leave
rolb
mov
das
xor
and
sti
mov
pop
mov
or
dec
and
dec
xchg
insb
cmp
push
ss
pop
imul
aas
or
add
fadd
lods
pop
test
push
sbb
hlt
test
push
mov
bound
int3
and
jnp
icebp
pop
inc
int
into
ficomps
cmpsb
loopne
popa
add
scas
icebp
ds
push
inc
mov
jecxz
in
int3
sub
or
jge
daa
out
sub
cli
jbe
push
arpl
and
fs
mov
push
repz
pop
lods
enter
xor
fdivl
fisubl
mov
pop
xor
fsts
clc
fs
adcl
shr
mov
and
mov
mov
jge
icebp
imul
and
hlt
in
jnp
mov
loopne
cwtl
hlt
jne
std
mov
test
repz
push
aad
xor
fbld
out
ficompl
shl
rcrl
mul
inc
les
pop
mov
sub
xchg
outsl
movsl
mov
imul
mov
push
xor
sbb
std
loopne
daa
inc
mov
inc
or
cli
dec
lret
sub
mov
nop
cmp
lods
sub
outsl
fistps
aas
inc
add
push
push
loopne
add
xchg
scas
lcall
vandnps
rcll
adc
insb
push
mov
fistl
push
pop
stos
or
push
pop
sahf
pop
out
mov
test
imul
adc
outsb
mov
ficoml
sbb
notl
mov
pop
orb
mov
test
xor
mov
mov
cli
adc
stc
out
xchg
shll
dec
adc
setge
ljmp
xchg
repnz
fcom
mov
lds
xchg
popa
mov
not
xchg
outsb
into
in
xor
inc
dec
pop
gs
xor
shr
mov
add
mov
scas
xlat
in
fiadds
mov
test
icebp
lret
sbb
sti
int
loop
jnp
sub
xchg
push
mov
cmp
inc
out
iret
repnz
dec
aas
sbbl
pop
pop
mov
lods
dec
stos
jns
mov
es
cmp
pop
jg
cwtl
imulb
pop
into
jecxz
mov
push
cli
push
or
push
hlt
sub
mov
add
pusha
lea
lds
ja
sbb
jbe
adc
push
stc
lret
mov
jo
cmpsl
pop
jae
in
xchg
sub
fiaddl
or
jge
xchg
fisttpl
push
add
lock
ljmp
sub
bound
pop
cltd
stc
test
gs
mov
movsl
jae
test
pop
js
je
out
mov
sti
inc
jg
xchg
dec
aad
xchg
sti
fcompp
mov
cltd
or
nop
sbb
push
fbstp
pushf
data16
aaa
add
xchg
pusha
sbb
stos
cmp
push
push
iret
jecxz
cmp
inc
nop
and
jge
and
divb
js
push
mov
cltd
scas
out
inc
movsl
in
stos
fnstsw
and
aaa
add
sarb
mov
mov
lods
fdivp
add
mov
adc
mov
inc
add
xorb
inc
jg
lock
nop
test
dec
insl
enter
sub
or
rcr
lock
xchg
add
xchg
leave
jno
aaa
mov
cltd
sub
xchg
test
dec
adc
subb
mov
idivb
in
jp
inc
and
cmp
xor
xchg
pop
adc
and
into
imul
leave
outsl
push
ljmp
dec
dec
push
dec
dec
inc
xor
xor
fisttpl
jns
cmpsb
lock
xchg
rorl
pop
mov
cmpb
cmp
xchg
cmp
adc
scas
test
inc
jl
add
sub
sub
pop
insb
lcall
mov
dec
xor
jge
adc
repnz
cmpsl
insb
and
mov
xchg
adc
loop
ja
and
mov
aad
or
xchg
inc
inc
repnz
cld
jmp
mov
or
xchg
nop
filds
out
add
rclb
adc
gs
pop
cmp
mov
mov
push
add
mov
loope
lods
cmpsl
out
xchg
inc
std
popa
adc
xchg
movsl
repz
jnp
mov
sub
push
popa
pop
enter
testb
sbb
lret
push
dec
pushf
push
ljmp
mov
inc
pop
push
mov
movsb
mov
dec
add
stos
mov
dec
popa
push
aas
rcl
repnz
mov
xchg
lds
push
adc
inc
pop
sub
adc
pushw
jmp
je
movsb
adc
pop
pop
pusha
test
clc
ficomps
push
xor
xor
sbb
addb
sti
xor
jmp
cmpsb
mov
jae
bound
sbbb
aas
test
or
jp
in
fs
pushf
adc
adc
xchg
fcmovbe
call
push
inc
lahf
xor
cmp
dec
sub
push
mov
jp
fwait
out
adc
dec
outsb
frstor
sub
inc
stos
ret
fsts
jne
icebp
orb
lea
xchg
cmp
xor
out
push
mov
and
cmp
mov
jno
int3
add
insl
frstor
rcll
js
clc
mov
sub
lret
mov
cmc
mov
insl
test
fst
ficoms
stos
aam
mov
scas
jne
stc
scas
bnd
push
inc
cltd
or
in
mov
push
xlat
jnp
or
inc
add
adc
movl
add
outsl
add
stos
es
bnd
pop
fdiv
pop
inc
jae
adc
sbb
mov
das
mov
xor
sbb
shrb
jle
and
jmp
outsl
push
or
aad
jne
das
imul
xlat
loope
cmp
mov
in
pop
cmp
idivb
gs
adc
cmpsl
daa
popf
mov
hlt
out
shll
notl
ss
dec
lock
ss
inc
clc
xchg
xchg
stc
cs
int3
orb
outsl
test
loop
xchg
or
loope
enter
ret
scas
sub
ja
popf
xchg
jbe
push
das
cmp
lret
jge
xor
push
mov
icebp
push
insb
dec
jge
jno
in
mov
jmp
imul
push
jbe
xor
xchg
sarb
cmp
jo
out
lea
mov
gs
jbe
stos
movsl
aad
sub
mov
fiadds
sub
jnp
push
jecxz
and
outsb
push
push
jge
in
cmp
push
push
bswap
pusha
sbb
cmp
divl
jecxz
mov
push
imul
das
xor
mov
push
mov
mov
dec
jmp
sub
adc
sbb
cvtdq2ps
call
dec
xor
push
jno
mov
outsl
loope
lea
push
scas
cmp
mov
mov
jp
je
lock
or
test
aad
sahf
xlat
mov
sub
loope
pop
imul
imulb
mov
mov
jbe
in
mov
aad
in
jns
psrld
mov
movsb
outsl
enter
test
sub
sahf
inc
mov
in
inc
inc
sbb
inc
lcall
sub
std
mov
mov
sub
adc
push
xchg
sbb
mov
xor
das
push
dec
mov
fldt
outsl
sbb
fcompl
dec
jb
xchg
test
ljmp
ds
out
dec
mov
push
divb
repnz
pop
enter
imull
pop
cmpsl
addr16
or
sub
outsl
aaa
mov
pop
dec
push
xor
mov
cmp
mov
xor
insb
mov
jp
pop
idiv
jp
fsts
push
fstpt
shlb
gs
inc
sar
push
scas
loop
mov
jno
mov
xlat
xor
pop
push
pop
push
out
adc
sahf
xchg
mov
cs
sbb
pushf
sub
insb
cmp
xchg
cmc
mov
scas
fcomps
pop
rcl
test
inc
nop
popf
movsb
pop
iret
inc
insb
test
pop
fistpl
mov
in
fmul
mov
fs
inc
push
je
pop
out
inc
mov
jmp
sub
add
jecxz
mov
data16
adcl
out
mov
cmp
mov
in
mov
jo
lock
clc
sub
mov
or
mov
mov
mov
or
sbb
fimuls
and
add
or
mov
jle
push
mov
repnz
repz
mov
dec
jne
rcrl
lret
aas
sub
sub
pop
xorl
mov
cmpsb
inc
ret
push
rcr
imul
ss
enter
sub
data16
push
shll
adc
mov
mov
pop
jmp
mov
test
mov
popa
sbb
pop
sbb
stc
cmp
add
fwait
adc
adc
mov
xchg
or
sub
pop
jae
in
cltd
scas
add
cmp
jecxz
or
add
adc
cld
xlat
xor
push
clc
dec
icebp
data16
or
lret
pop
sbb
aad
ret
mov
dec
xchg
in
idivb
and
cmpsl
into
fbld
ljmp
mov
pop
add
inc
in
inc
jno
xor
negl
and
lock
fdivs
fidivrs
fwait
test
fidivrs
std
and
pop
lock
jecxz
pop
lds
sub
push
pop
daa
mov
fdiv
lods
mov
les
add
call
sbb
fsubrs
mov
iret
mov
stos
dec
sbb
fisubrs
jo
cltd
jmp
push
pop
sbb
testl
xchg
mov
out
sub
jle
xchg
jne
imul
jns
xchg
jo
add
stc
push
jp
out
fcmovne
mov
divl
jge
ret
scas
add
jmp
lock
ret
adc
cmp
es
aas
mov
push
add
mov
inc
jne
in
outsb
dec
stos
adc
cld
into
imul
add
xor
jmp
ljmp
in
dec
pop
call
fidivs
mov
xchg
popf
jb
insl
fs
push
cmc
imul
xlat
shr
push
adc
test
xchg
jne
adc
mov
add
dec
rcrb
jb
roll
adc
fnstsw
jle
pop
sbb
sub
insb
jne
lds
mov
fsub
pop
std
repz
mov
mov
loop
adc
inc
scas
imul
stc
aas
push
inc
sbb
daa
jno
inc
dec
cs
mov
add
jbe
outsb
and
addr16
loop
xor
or
pop
inc
jo
cmp
mov
push
jbe
test
and
cmpsb
out
out
pop
into
loopne
pop
mov
jg
popf
sub
cs
dec
pushf
mov
cmp
lock
in
adc
movsb
xor
cmp
xor
mov
dec
mov
repnz
pop
cwtl
jecxz
sub
sbb
pushf
dec
xchg
pop
dec
std
inc
add
in
mov
rorb
xchg
ret
pop
xor
jo
iret
jge
xor
pop
xchg
adc
adc
push
testb
add
popa
cs
mov
add
das
mov
fmull
into
and
mov
pop
mov
mov
dec
movb
addb
push
pop
or
imul
mov
test
sbb
sub
pushf
jae
jmp
jecxz
jg
cltd
xchg
pop
dec
cltd
mov
es
loopne
mov
cmc
mov
call
pop
mov
std
dec
test
dec
fs
scas
mov
icebp
mov
fldt
fwait
js
fsubs
outsb
sarb
jbe
or
dec
notb
aaa
and
mov
adc
or
mov
movsl
fs
lret
rorl
stos
fldcw
addr16
shlb
dec
xorb
mov
push
jl
out
add
lds
aad
mov
les
push
cld
jb
loop
adc
push
cli
dec
lret
icebp
mov
es
mov
add
lea
mov
test
pop
and
mov
dec
test
push
sbb
lcall
movsb
cmpsb
rorb
imul
adc
add
movsl
das
mov
cli
and
jbe
jmp
out
divb
dec
adc
adc
adc
cld
push
stos
mov
out
ds
arpl
js
into
icebp
push
sti
add
pop
fnstcw
ds
adc
into
push
or
inc
mov
ret
fnstsw
mov
loopne
sbb
pop
bound
outsl
scas
push
mov
pusha
lea
jg
or
sbb
rclb
push
movsl
rol
cli
or
adc
enter
addl
xchg
mov
adc
lahf
addr16
stos
repz
and
cmp
mov
jo
mov
add
pop
push
rclb
add
and
cltd
test
or
jmpw
insl
cmc
inc
or
dec
xlat
outsl
mov
jmp
aam
call
push
push
adcb
fcoms
fdivrl
add
pop
sbbb
mov
push
mov
push
push
mov
aas
xor
mov
mov
mov
xlat
in
pop
aaa
sub
adc
shrb
in
por
lea
scas
outsb
inc
add
arpl
add
mov
mov
fnstcw
andb
scas
lods
inc
js
pop
push
adcb
push
jl
orb
js
div
test
cmp
xchg
stos
adc
xchg
push
xchg
out
sbb
popf
ret
or
inc
xlat
mov
sbb
push
enter
movl
sarl
inc
mov
add
or
repz
push
sub
push
inc
cmp
mov
je
imul
xor
push
jnp
jg
jp
fs
and
test
and
aad
leave
jb
fimuls
outsl
cmpl
into
dec
sub
sbb
pop
sub
stos
adc
out
sbb
das
lahf
shrl
push
std
shr
subl
ja
or
adc
movsb
add
and
into
imul
jb
pop
fs
xchg
add
mov
push
orb
into
pushf
sub
push
sub
mov
ror
popf
jecxz
and
mov
fnstenv
in
mov
lahf
push
cwtl
cmc
push
mov
ja
sbb
push
adc
xchg
dec
mov
lea
mov
xor
icebp
fwait
adc
mov
ja
fistpl
loope
mov
jl
xchg
or
xchg
push
cmovae
mov
shll
jne
das
shlb
dec
sti
jmp
pop
push
sub
xor
push
adc
dec
xchg
in
ljmp
jl
mov
and
push
cmp
inc
inc
lods
jle
ss
and
leave
inc
mov
sub
mov
pop
jns
mov
add
sbb
jne
dec
or
mov
sub
jnp
pusha
sbb
fidivs
fistps
je
mov
and
stos
scas
fsubl
mov
add
push
adc
sahf
scas
jbe
xchg
mov
pushf
fdivl
cwtl
mov
data16
sbb
data16
xchg
mov
repnz
repz
jns
mov
mov
mov
inc
daa
mov
and
bound
dec
jns
push
add
or
mov
loopne
pop
jb
outsl
jbe
stos
dec
sbb
popa
aas
insb
clc
jg
stc
repnz
out
dec
lds
mov
mov
jl
jg
jne
negb
cmp
and
lock
sub
scas
lods
mov
iret
adc
flds
inc
pop
scas
xorb
aam
cs
xor
int
in
jmp
pop
fsubrl
loope
iret
push
sub
dec
shl
mov
xchg
jns
or
test
loop
push
and
divl
loope
or
mov
dec
sahf
js
inc
sbb
stos
push
pusha
inc
push
sahf
mov
scas
cmp
sbb
jnp
movsl
push
ret
ljmp
imul
push
adcl
std
out
lods
enter
mov
test
mov
sub
xor
adc
in
mov
dec
pop
cmp
clc
push
cmp
mov
mov
ja
aas
adc
mov
insl
movsb
dec
adc
sub
aas
inc
test
cld
cmp
cli
xlat
xchg
fimuls
in
cmp
imul
pusha
lret
add
pop
cs
add
pop
mov
addl
imul
jl
hlt
inc
mov
mov
push
jae
addr16
lret
fwait
lods
pop
jb
sub
pop
daa
adc
dec
sub
fsub
inc
push
adc
inc
arpl
fwait
mov
push
cwtl
jl
lods
out
in
dec
loop
outsb
dec
mov
out
stc
jnp
filds
dec
lea
sub
mov
mov
pop
mov
jns
loopne
in
out
shrl
adc
dec
mov
cltd
jl
adc
stos
js
mov
mov
pop
pop
jmp
jns
push
sub
mov
inc
icebp
in
xor
jecxz
inc
push
into
lock
cmp
mov
mov
mov
pop
pop
fwait
pop
mov
sub
push
add
in
push
movsb
bound
sbb
xlat
mov
mov
add
pop
data16
push
and
dec
test
in
aas
loop
jmp
mov
out
xor
xchg
sub
push
push
mov
jp
jae
and
xchg
pop
fdivl
clc
xchg
std
dec
aaa
addr16
push
xchg
jno
sahf
sub
sub
pop
push
out
addr16
lock
sub
inc
int
xor
lds
push
lcall
dec
fsubr
cmpsl
xor
jno
repz
jbe
int3
neg
and
fs
mov
mov
dec
ljmp
mov
je
mov
xchg
sub
sbb
mov
cmpsl
and
aad
mov
aaa
xor
or
imul
lds
cmpsb
cli
ja
push
mov
pop
push
pop
jp
sub
mov
lcall
stos
inc
nop
mov
and
add
cmpsl
shlb
jns
shrl
xchg
dec
push
mov
pop
leave
or
insl
mov
push
dec
es
or
xlat
and
pop
repnz
outsb
out
jg
xchg
cmp
incb
pop
xchg
movsb
xor
cmp
gs
mov
dec
aad
shl
test
mov
test
orb
sub
inc
sbb
clc
mov
sub
sub
add
pop
jp
push
fs
test
lret
xor
jno
je
sbb
cmp
xor
xchg
inc
andl
dec
mov
dec
jbe
mov
sub
jns
sub
sub
gs
lret
dec
arpl
push
je
loopne
negb
push
jae
add
and
fwait
and
mov
pop
push
mov
mov
push
sti
or
cltd
daa
cli
popf
sub
xchg
mov
mov
cmp
aaa
or
outsl
sbb
notb
mov
ss
movsl
inc
mov
mov
icebp
lods
je
test
insb
cmp
sahf
loopne
inc
xor
xchg
popa
mov
arpl
jns
das
mov
jl
andl
clc
lcall
lea
sbb
adc
lods
out
pop
mov
clc
push
inc
pop
leave
pop
adc
cmp
pusha
mov
dec
mov
mov
adc
int
xor
iret
push
mov
out
mov
shll
stos
movb
jno
rcr
sbb
dec
in
jecxz
fldl
popf
mov
mov
popf
and
mov
icebp
mov
push
aas
jp
fcompl
mov
test
add
imul
dec
or
addr16
push
sti
mov
sub
push
push
loopne
jmp
or
xchg
xor
out
mov
xchg
call
sub
or
fsub
and
dec
shlb
adc
adc
inc
das
arpl
fstps
pop
mov
sbb
fwait
mov
sbb
cmp
mov
pop
loop
fidivrl
inc
or
dec
and
inc
or
mov
jmp
sbb
cs
popf
int3
int
pop
fsts
and
clc
imul
mov
cmpl
mov
xchg
xchg
xlat
inc
cld
pop
movsl
dec
cmp
sbb
aad
shr
call
mov
imul
in
leave
mov
icebp
stos
sbb
dec
add
outsb
jne
in
jecxz
insb
int
xor
cmp
or
pop
icebp
jp
shrb
sub
jno
addl
or
jo
fcompl
jp
ret
shld
lcall
pop
int3
cli
push
and
test
insb
jns
out
mov
and
cmpsl
mov
iret
xchg
icebp
pushf
xchg
jge
lret
xchg
fldl
dec
call
and
ret
jecxz
jne
dec
xor
imul
dec
inc
cli
into
cld
adc
pushf
iret
test
sub
xchg
pushf
lret
or
jno
push
and
lods
inc
sbb
cmpsb
sbb
add
mov
into
lret
stc
jle
jecxz
cld
xchg
sub
aam
in
subl
or
bound
mov
push
mov
out
out
pop
mov
fld
lret
cmp
push
cmp
sbb
ljmp
adc
jp
fimull
cmp
dec
adc
sbb
and
shll
pop
mov
fisubrs
mov
fcompl
icebp
cltd
rcrl
dec
mov
mov
sbb
popf
jae
stos
or
mov
repnz
cmp
mov
mov
test
adc
aaa
pushf
std
ficomps
imulb
das
jge
adc
xchg
or
xlat
and
cmpsl
adc
sub
stos
cmpsb
xchg
push
sti
jo
sti
stc
pop
pop
gs
fnstsw
addr16
lahf
mov
sti
fsts
pop
jmp
mov
insb
scas
das
push
enter
fldenv
xor
pop
cmp
fisttpl
xchg
loopne
pop
les
enter
shrl
int
mov
movsb
popa
pushf
dec
inc
das
movnti
movsl
dec
sub
fwait
pop
adc
cmp
xor
jle
pop
repnz
inc
xor
inc
lods
xchg
fsubl
adc
pop
sbb
cmp
popf
xor
decb
and
test
push
mov
xchg
add
xchg
sub
pushf
xor
mov
leave
sub
mov
dec
sbb
pop
fstpl
dec
lahf
repnz
mov
loope
or
in
push
nop
xchg
jp
xchg
dec
dec
orb
add
or
cmpsl
andb
fst
test
fisttpll
adc
jnp
sti
gs
adc
lds
jge
push
sbb
sbb
mov
fimull
hlt
push
mov
sub
insb
jae
mov
dec
push
daa
jle
mov
xchg
loopne
daa
lcall
mov
push
ret
cwtl
das
frstor
xorb
jle
mov
enter
je
adc
imul
ss
fcompl
xor
repnz
and
mov
in
dec
sub
cmp
jp
iret
xchg
dec
jle
push
imul
loope
xchg
mov
mov
pop
pushf
jmp
xor
in
jbe
outsl
mov
cmp
pop
stos
pusha
out
add
sbb
loopne
cmp
sub
sbb
pop
cmp
int
jb
movsb
iret
inc
cmovg
and
inc
mov
mov
add
adc
insl
and
cwtl
xor
jg
mov
mov
cmp
push
fwait
lds
sub
hlt
add
leave
les
or
pop
pop
ret
or
decb
jge
js
sub
inc
mov
test
js
je
lods
dec
dec
mov
std
int3
mov
mov
inc
jne
fsubrs
jecxz
stc
sbb
xchg
xchg
mov
mov
jp
adc
dec
mov
je
sar
or
mov
inc
adc
xor
es
out
cmpsb
pop
inc
pop
cmpsb
pop
daa
ljmp
cld
mov
push
jno
cmpsl
sub
dec
cmp
out
sub
jecxz
out
aam
movsb
mov
sbb
ja
movsb
xor
add
repnz
push
mov
adcl
lcall
cmp
add
inc
lahf
inc
sarl
dec
xor
and
addl
cmc
push
sbb
jmp
mov
in
mov
lret
xchg
mov
push
into
shl
sub
add
loopne
sahf
ss
dec
jecxz
aam
rorb
push
pop
je
js
xor
out
out
and
std
out
or
ficompl
dec
xchg
jo
das
mov
scas
sahf
pop
xchg
mov
filds
and
lods
jno
xchg
std
xor
in
mov
add
or
ret
cmp
mov
movsl
mov
xlat
movsl
sbb
add
rcl
push
sub
loopne
dec
cltd
popf
sbb
push
jp
pusha
lea
xchg
outsl
and
fiaddl
xchg
repz
mov
cmc
pop
test
xor
mov
frstor
mov
lds
mov
push
push
jl
jge
sbb
or
xchg
inc
out
pusha
jp
in
movsb
sbb
push
repnz
cld
jge
add
or
mov
cmp
das
mov
arpl
mov
mov
xchg
out
cmc
shll
aaa
sti
and
mov
lods
jo
fs
mov
es
test
cli
xor
mov
into
mov
pop
inc
scas
add
jle
mov
and
xchg
and
insl
push
iret
jmp
or
mov
popf
fmul
sbb
mov
fnsave
stos
adc
clc
xchg
jmp
andl
lahf
pop
lea
mov
cltd
cmpsl
cmp
cmp
popf
mov
push
movzwl
sbb
dec
les
fdivrl
call
mov
add
cmp
mov
dec
sbb
rorb
lret
jmp
shl
xor
aad
pusha
cmpsl
into
adc
shlb
pop
leave
sbb
xchg
push
add
daa
mov
mov
shl
ds
lret
xchg
out
lret
adc
or
fnstenv
mov
and
int3
mov
ficoml
test
cwtl
mov
mov
xchg
fmull
and
cmp
cmp
push
int3
rcrl
dec
scas
and
cmc
jb
sarl
rcrb
fwait
mov
xchg
push
sbb
and
das
imul
out
push
arpl
jmp
pop
popa
cld
lahf
adc
int3
icebp
ja
into
push
aaa
pop
and
ss
or
push
dec
lock
out
inc
popf
xor
jmp
sub
mov
and
aas
sbb
std
mov
cmp
jbe
add
or
push
sti
sub
sub
mov
xchg
cli
arpl
cltd
in
sbb
repz
jmp
test
sub
xchg
pop
dec
cmpsb
int3
stos
popa
lock
and
cltd
mov
mov
rclb
lret
lods
out
pushf
enter
dec
imul
xchg
dec
add
push
cld
enter
cmp
push
into
and
sub
popf
int
sub
jno
pop
add
xchg
xchg
sub
lock
rolb
imul
xor
or
mov
inc
data16
xchg
add
insb
dec
negb
ret
mov
sub
mov
jle
imul
mov
add
dec
pusha
js
and
or
loop
dec
mov
cld
in
xchg
xor
xchg
lahf
mov
mov
les
jbe
xchg
mov
sbb
push
and
or
out
ja
ficoml
arpl
cmpsl
add
and
test
cltd
fadd
mov
sbb
stc
mov
aad
jnp
mov
push
fwait
jo
pop
pop
and
out
scas
pop
sub
cld
mov
xchg
sub
cmpsb
loope
add
int3
push
cmp
sub
roll
cltd
outsb
and
mov
and
movsb
sub
clc
in
mov
sub
push
sub
xchg
mov
or
push
out
pop
lods
jbe
pop
imul
xor
insl
icebp
sub
cmp
xchg
xor
addb
int3
les
jno
loope
js
fbld
ljmp
xor
aam
lret
dec
pop
movsl
push
sbb
nop
fisttps
mov
repz
scas
push
xchg
sub
stos
ffreep
cwtl
or
and
scas
and
cmpsl
jno
call
push
sub
lods
inc
gs
push
mov
mov
cmp
mov
inc
mov
jge
addl
jp
and
mov
scas
insb
lock
aam
adc
push
mov
jbe
roll
mov
jns
xor
cmp
pop
push
inc
cmp
lret
add
ljmp
cmp
push
xchg
sub
mov
xchg
clc
dec
and
or
lcall
movsb
and
rolb
mov
mov
pop
pop
push
outsb
push
gs
fistps
add
mov
fisubl
call
jg
xchg
mov
xor
mov
fnsave
lods
pop
les
lds
jb,pt
pop
xchg
mov
mov
mov
pusha
daa
cmc
xor
mov
inc
push
jo
pop
sbb
outsb
jb
adc
cmp
push
jae
adc
ja
jno
pop
fldenv
outsb
fneni(8087
sub
dec
sub
or
add
jp
mov
xchg
int
les
jae
insb
out
cmp
add
scas
out
pop
lock
or
and
mov
sti
mov
push
jp
inc
jae
mov
out
enter
dec
sarl
mov
scas
xchg
push
ss
mov
jo
sahf
rcll
dec
adc
jl
lock
call
jno
shlb
add
mov
mov
adc
or
scas
or
dec
test
and
in
push
flds
adc
jge
adc
push
pushf
enter
outsl
test
dec
push
lret
jno
xchg
insb
movsb
xor
adc
xchg
and
pop
add
jno
mov
jp
cmc
ljmp
insl
outsl
cmp
add
jl
jno,pt
push
clc
sahf
xor
jno
and
movsl
imul
fmulp
scas
in
mov
cmp
ss
cld
inc
popa
inc
insl
pop
xchg
xchg
cmp
jl
mov
xchg
loopne
mov
je
repz
mov
mov
cmp
or
inc
out
inc
scas
jo
inc
mov
mov
mov
aad
fcomps
fcompl
sub
push
mov
adc
arpl
xchg
cs
push
into
jbe
xchg
stos
jae
mov
lcall
insl
push
push
arpl
jl
shrb
jecxz
cmp
or
xor
cmp
inc
mov
push
test
jns
inc
addl
or
mov
xor
xlat
mov
sbb
sbb
outsb
mov
pop
mov
in
and
dec
xchg
out
stc
clc
inc
mov
imul
ja
add
fdivrs
roll
out
xchg
pop
adc
ja
movsb
cmp
jp
les
mov
jg
outsl
out
inc
jae
aaa
jecxz
xchg
fs
scas
mov
pop
or
jecxz
nop
pop
shl
stos
mov
push
out
movsb
cmp
xchg
inc
fildl
idivl
fcompp
adc
in
add
sahf
notl
or
xor
loope
sbb
and
xchg
push
sti
cmp
outsb
xchg
sub
imul
lods
outsb
xchg
xchg
call
jno
push
mov
adc
adc
lods
add
stos
mov
xor
xor
hlt
and
pop
outsl
lea
fiadds
mov
mov
arpl
insb
out
push
sbb
nop
ror
xor
sbb
or
lret
enter
lcall
sbb
pop
mov
jbe
sub
aaa
dec
inc
cmpsl
movsb
sbb
adc
aas
fsubrl
push
loope
jno
and
es
int3
cmpsl
jge
in
inc
loop
or
or
es
test
mov
movsb
lret
or
inc
mov
xchg
push
fdivs
sub
gs
sub
sbb
fwait
cltd
lods
adc
cli
test
shll
and
push
mov
and
not
mov
and
loopne
rcrb
test
inc
dec
iret
xchg
xor
roll
xchg
fs
sub
pop
xor
scas
fidivl
mov
push
xor
ret
push
popa
bnd
jle
inc
push
pop
push
xor
xor
adc
incl
mov
or
xchg
filds
test
inc
xor
std
mov
mov
mov
pop
or
sbb
pop
jl
popl
mov
fldcw
sahf
add
push
insl
cltd
in
push
aam
lock
dec
nop
xchg
insb
adc
xchg
test
shrl
xor
out
scas
mov
outsl
ds
fwait
inc
pusha
mov
lret
lea
test
fcomps
sbbb
xchg
pop
or
data16
inc
test
xor
push
mov
mov
xor
inc
or
inc
inc
loop
loop
inc
fsubs
pop
push
or
sub
pushf
pop
adc
push
stos
cs
xchg
clc
in
shrb
inc
jp
ret
popf
pop
out
loop
jns
mov
lods
ljmp
or
mov
in
sbb
fiaddl
mov
cwtl
cld
out
pop
mov
mov
mov
cmpsl
call
push
les
jns
pop
jns
ror
jnp
aaa
out
or
fs
cmp
or
sub
push
push
add
mov
pop
lds
repz
dec
gs
out
cmc
xchg
in
adc
shll
filds
cwtl
inc
and
push
in
dec
fdivrs
arpl
jl
jp
xchg
inc
fsubp
jle
mov
fwait
jne
sbb
xor
xchg
lret
loop
loope
sbb
xor
mov
loopne
adc
repz
pop
pop
sbb
int
insl
jg
mov
inc
mov
je
cmp
xor
aad
outsb
push
in
pop
lret
push
or
lcall
dec
lock
jne
nop
lods
stos
stos
mov
icebp
repz
xor
xor
aad
data16
jnp
ret
dec
dec
clc
es
adc
jg
xor
in
test
or
addr16
lahf
xchg
adc
imul
sub
add
daa
test
pushf
fbstp
daa
and
in
es
cmpsl
in
pusha
aad
or
daa
clc
pop
inc
cmpsl
dec
jmp
fs
andb
pop
leave
sbb
jp
mov
je
and
leave
aad
xor
sbb
mov
filds
ds
pop
sub
mov
es
scas
cmp
loopne
das
nop
pop
jns
or
lcall
and
out
int3
sbb
jmp
dec
rcr
inc
outsl
addr16
mov
loope
pop
jmp
imull
lds
sub
push
rorb
inc
xor
sub
pop
cltd
xchg
jge
pushf
stos
clc
pop
jl
cmp
jns
dec
push
xchg
into
mov
ds
pusha
pushf
xlat
inc
arpl
sbb
jl
int3
iret
stos
push
arpl
cmp
cwtd
scas
cmp
mov
mov
mov
outsb
sub
cwtl
dec
int3
loopne
sbbb
out
fwait
imul
cltd
movsl
xor
movsl
in
lds
fldcw
aad
mov
fnsave
imul
imul
mov
testb
or
mov
lds
sarl
jmp
shl
fwait
out
or
enter
push
inc
pop
xor
mov
inc
xorb
mov
pop
loope
mov
popf
dec
push
push
sbb
std
push
sbb
ljmp
jns
pop
or
add
ror
cvtps2pd
ret
pop
mov
mov
sbb
cmpsb
or
fsub
lret
mov
cmp
mov
scas
js
inc
inc
xlat
ds
sub
test
sbb
inc
popf
mov
lcall
push
notb
sub
sub
or
and
imul
sub
scas
and
jnp
in
aad
aas
and
push
add
add
adc
aaa
mov
add
and
cmp
or
dec
je
dec
je
mov
aas
push
xchg
aad
sahf
adc
ds
mov
in
or
fwait
push
sahf
jns
jp
jae
sub
mov
adc
sub
pop
xor
sub
cld
inc
roll
repz
cmp
pop
shlb
insb
xchg
lods
sbb
cmp
xchg
xchg
out
fisubrs
ja
ss
arpl
jl
std
jmp
or
jmp
imulb
cmovno
fildl
pop
arpl
sbb
push
or
jl
or
lcall
stc
scas
or
sarb
imul
adc
inc
daa
cmp
outsb
dec
test
sub
jmp
insb
test
mov
sbb
and
pop
out
xchg
mov
outsl
pusha
mov
call
repnz
adcb
rol
shll
add
je
push
bound
jns
sbb
aas
into
pop
mov
sub
mov
aam
dec
ret
lods
jecxz
add
inc
jg
adc
mov
mov
cmc
xchg
dec
add
inc
push
popa
push
out
iret
xor
fs
xchg
imul
movsl
adc
add
sahf
mov
jg
int3
sub
subb
outsb
xchg
outsl
outsl
out
aaa
rcrb
cmc
cld
rcll
cmp
cs
gs
bound
adc
es
outsl
aad
shl
pop
out
adc
ja
pop
outsl
xor
dec
aaa
subl
daa
jecxz
sbb
orl
push
inc
pop
out
iret
xlat
or
scas
mov
sbb
mov
and
daa
cmc
sahf
andl
stos
jl
push
mov
dec
pop
sbb
dec
lahf
lret
lcall
mov
xor
pop
adc
xor
dec
inc
iret
ljmp
in
xor
in
pop
mov
push
adc
jecxz
xchg
xlat
add
lret
fisttpl
mov
call
adc
jmp
push
adc
sbb
test
aaa
je
pop
hlt
jl
mov
pop
jl
fidivrl
test
xor
inc
inc
ja
cmp
aam
mov
test
pushf
dec
xchg
mov
aam
data16
imul
xchg
out
outsb
xor
rolb
adc
xchg
rolb
mov
fwait
cmp
lods
int3
adc
cmpl
pop
sti
imull
arpl
mov
js
fadds
stos
jle
enter
cmp
sub
dec
sarl
ss
add
clc
sub
popf
lds
movsl
xor
js
stos
xlat
mov
and
cmp
loop
addr16
sbb
pop
jne
in
mov
insl
push
lock
cmpsl
out
test
xor
xor
adc
std
in
loope
sub
into
scas
mov
pop
mov
mov
imul
add
push
aaa
or
dec
pop
addr16
mov
adc
cld
inc
xlat
sbb
push
mov
ret
sar
sub
dec
lret
xor
push
jg
enter
fs
mov
shr
aas
cmpsl
loop
scas
cmp
mov
sub
xchg
dec
in
xchg
fdivs
stos
lcall
cmpsb
in
inc
push
lds
popf
jb
sub
add
inc
nop
call
jmp
push
into
adc
jle
mov
js
mov
mov
mov
and
pusha
cmp
lock
mov
outsb
mov
daa
adc
insl
adc
dec
dec
jbe
daa
and
adc
in
add
sub
push
jae
mov
push
ss
test
inc
xchg
fidivs
popf
lcall
je
std
push
scas
adc
les
dec
xlat
mov
mov
pop
in
or
ljmp
dec
inc
cmpsb
lea
arpl
mov
call
mov
out
mov
ds
addr16
pop
mov
jle
rcrb
sar
dec
pop
and
mov
shrb
or
sub
daa
cmpsb
mov
xor
mov
fdivr
push
sbb
dec
ror
fwait
insl
cmp
push
xchg
fisttpl
adc
pusha
cmp
cltd
jl
xchg
push
shll
call
mov
mov
adc
mulb
shlb
in
inc
mov
mov
xchg
movsb
cli
push
push
addr16
insl
int
adc
sub
subb
mov
bound
cmp
repz
jle
rolb
sbb
xchg
push
dec
out
cmpsb
ja
cmp
jecxz
cmpsb
inc
into
fstl
imul
shll
sbb
cmpsl
mov
lret
stos
mov
test
adc
out
and
jl
dec
pusha
sub
icebp
cli
jb
or
lods
sbb
fisttps
jno
cmp
in
imul
jae
mul
int
aaa
and
pop
pop
inc
lock
push
pop
fdivrs
pop
mov
jnp
call
out
scas
adc
mov
lods
xlat
and
pop
push
cld
mov
inc
enter
push
xor
cltd
and
push
loope
and
xchg
cmp
inc
shlb
sbb
fwait
cmp
jno
ss
aad
push
pop
adc
adc
outsl
xchg
aaa
pop
mov
jecxz
mov
mov
aam
clc
pop
in
mov
cmc
lret
adc
mov
int
xchg
or
and
xor
push
mov
or
icebp
jl
fcoml
mov
ja
jg
mov
enter
and
inc
sub
pop
jge
xchg
popf
xor
ljmpw
jl
aam
enter
loopne
mov
sbb
test
add
pop
mov
dec
out
xchg
inc
lock
fisubs
jae
cwtl
int3
in
dec
push
ret
pop
mov
inc
sbb
jbe
aaa
xchg
adc
repz
cltd
pop
loope
lahf
mov
stos
cwtl
pop
add
test
mov
mov
jle
loope
mov
adc
int3
dec
loopne
fbld
test
lods
mov
xchg
fildll
imul
or
push
xor
cwtl
stos
fistps
or
xchg
and
xchg
push
fisttpl
imul
aam
pop
loop
push
fisubrs
xlat
ja
fnstenv
lcall
pop
in
mov
js
outsl
lock
and
in
sbb
ss
lea
scas
int
add
mov
je
insl
jl
xchg
sub
push
hlt
shrl
mov
or
mov
sarl
cmp
xchg
mov
mov
mov
test
push
out
insl
mov
sbb
sub
jbe
aam
xchg
sub
add
or
mov
jecxz
mov
int3
mov
mov
rcll
adc
aas
xchg
outsb
scas
adc
std
add
jne
and
or
lret
enter
mov
push
inc
imul
inc
xchg
testb
testb
jg
mov
loopne
adc
and
push
iret
lock
cmpb
mov
and
mov
fldl
loope
xchg
add
in
adc
mov
stos
ds
push
push
bnd
ret
sti
push
xchg
jae
push
xchg
pop
insl
inc
or
adc
pop
fcomi
push
push
fcmovbe
das
xchg
jmp
mov
lret
mov
pop
sbb
jp
int3
adc
pavgb
daa
sub
cwtl
adc
jmp
sbb
pop
roll
test
xchg
jle
test
jge
mov
out
push
aad
add
xor
loope
push
test
xchg
xlat
jo
stc
sar
adc
out
movsl
xchg
push
pop
or
push
mov
subb
mov
inc
or
scas
insl
xor
xchg
mov
stos
sub
mov
cmpsb
pop
jge
js
shrb
push
data16
xchg
imul
mov
and
cmc
cmp
adc
clc
jecxz
std
icebp
shrl
orb
sbb
pop
sbb
push
rclb
ret
fs
adc
pop
lock
aam
call
cwtl
pop
push
in
pop
mov
inc
loop
mov
enter
rcrl
call
lret
dec
lods
jecxz
icebp
mov
jbe
sbb
rorb
mov
inc
adc
and
ficomps
push
inc
push
rclb
pop
lret
dec
mov
jl
bound
inc
inc
mov
xchg
cmp
mov
jnp
scas
mov
mov
je
cmp
pop
and
adc
cltd
pop
jl
icebp
jo
out
mov
loopne
lret
out
jne
mov
ret
mov
mov
xchg
and
jle
sti
mov
xlat
mov
shrl
xor
sub
divb
jno
test
lahf
sbb
jle
rolb
jbe
clc
out
ljmp
les
les
mov
fildll
mov
cmpl
xchg
mov
mov
adc
xchg
out
pop
mov
adc
and
sub
cltd
je
cwtl
jns,pt
inc
push
pavgb
push
jns
xchg
xchg
test
push
cmp
sub
add
fstpl
shlb
sub
adc
jnp
sahf
jnp
push
rcrl
std
imul
mov
frstor
loop
jnp
push
adc
push
sub
fs
inc
aaa
inc
jnp
mov
inc
aas
xor
inc
pop
pop
xlat
jb
sbb
jns
cld
rorl
arpl
or
in
mov
fs
dec
repz
push
rcll
mov
jne
sti
test
in
cli
popa
cli
scas
push
adc
push
jmp
mov
or
cmp
fldenv
in
mov
sub
adc
jge
stos
movsb
or
sbb
push
adc
mov
inc
call
or
sbb
rcl
push
aas
mov
lret
pop
loope
pop
fildl
jno
mov
fisubs
clc
dec
add
or
stos
imul
in
jno
loopne
inc
imul
roll
sub
sbb
or
and
cmpl
inc
jle
loop
aad
add
cltd
push
test
xor
cmp
loop
lods
jo
push
aad
pop
loopne
ret
adc
ror
push
gs
cmp
xchg
xchg
addr16
cmpsl
jo
mov
imull
test
stc
mov
insb
xor
pop
bound
rcr
scas
or
daa
orb
mov
ret
mov
adc
jae
lcall
cmp
pop
insb
mov
sub
popf
nop
xchg
lods
lret
aas
rorb
cmpsl
sub
push
cmp
dec
pop
and
add
push
jns
adc
jbe
lahf
insb
mov
push
xor
push
dec
add
mov
adc
jmp
ss
pushf
in
push
fbld
shl
lea
daa
sbbb
mov
hlt
enter
popf
jge
enter
inc
mov
aaa
fbld
adc
jne
xchg
rcr
push
and
cmpsb
push
lret
jbe
jb
int3
pop
inc
lcall
inc
push
xchg
push
aaa
cli
arpl
and
insb
lcall
addr16
sti
mov
loopne
out
mov
jns
push
or
lea
insb
cmpsb
popf
and
int3
popa
ja
cmp
sbb
cli
mov
sub
mov
sub
jbe
nop
sbb
shlb
fidivl
push
loope
dec
test
cmp
jno
cmp
inc
insl
cmp
rcr
scas
xchg
adc
lea
mov
and
pop
lds
or
mov
insb
jae
push
stos
in
jo
xchg
lods
data16
fmull
cmc
or
mov
push
jbe
daa
stc
hlt
loop
push
setbe
mov
or
dec
jecxz
loop
cld
mov
pop
adc
and
inc
stos
shrb
in
pop
sub
jae
cli
cmp
pop
jno
outsl
popa
cmpsl
add
mov
mov
and
sahf
enter
jge
xlat
ret
in
sbb
int3
adc
or
mov
xlat
xor
daa
mov
in
pop
add
push
test
fdivs
pop
mov
ss
sbb
outsl
mov
lret
pop
cmp
adc
les
stc
and
pusha
jge
dec
fs
subl
mov
xchg
js
test
rep
stc
repnz
shrl
mov
fidivrs
sub
cmp
adcl
pop
leave
lcall
xor
pop
fistps
filds
or
mov
jno
jns,pn
xor
mov
je
push
jno
push
push
mov
iret
movsl
in
push
fdivrl
rcr
and
ss
bound
adc
cmp
mov
popf
insl
mov
adc
cmp
xchg
jg
cli
mov
xlat
jmp
jmp
addb
ljmp
pop
in
rorb
pop
pusha
mov
or
out
push
push
scas
fidivrs
pop
fs
lcall
mov
or
lahf
cmp
and
pop
push
cmp
mov
pop
dec
popf
inc
inc
in
xchg
testl
mov
jl
sub
jecxz
mov
cmp
mov
add
and
les
aad
xor
pop
dec
xor
fcoms
jne
and
out
ja
pop
imul
pop
adc
out
imul
stos
aaa
mov
jp
fbld
movsb
lds
jp
dec
cli
fwait
mov
push
loopne
out
test
push
mov
mov
mov
mov
push
cwtl
pop
in
je
xchg
lret
std
mov
je
add
push
adc
or
rol
xor
rcrl
push
inc
xchg
sbb
ret
loop
mov
loope
dec
xchg
mov
imul
inc
mov
inc
test
movsb
xor
pop
adc
andl
pop
rorb
in
adc
sbb
out
mov
pop
xor
mov
xor
sbb
mov
insl
and
xchg
ret
dec
enter
mov
cmp
stc
pop
add
jmp
pushf
fcompl
jg
mov
les
cmp
adc
stos
sbb
jns
add
sub
pop
shrb
out
add
dec
std
mov
xor
test
ret
xor
sub
lret
and
int3
and
rorl
test
push
rorb
addr16
scas
mov
push
xorl
push
mov
xchg
scas
fnstenv
outsl
mov
into
adc
adc
mov
lcall
dec
sbb
lods
shl
sbb
dec
dec
out
or
jg
xor
xchg
dec
lret
outsl
ss
jge
xor
mov
dec
inc
in
pop
inc
sbb
insl
std
fwait
rcll
sahf
shlb
xchg
stc
aam
andl
sbb
shll
push
stos
sub
mov
inc
and
xchg
dec
fsubrp
cmp
in
movsb
sahf
mulb
icebp
jl
cmp
fstpt
push
cltd
stos
mov
dec
lret
imul
out
jle
cmpsl
addr16
mov
ds
ficoml
pop
mov
mov
mov
cld
loope
mov
mov
sbbl
stos
mov
and
mov
lea
fwait
lret
sub
clc
jne
fcmovb
dec
cmc
push
insb
mov
int
inc
addl
movsb
stos
ficoms
es
inc
lods
mov
mov
insl
popa
call
xlat
data16
sbb
dec
dec
cmp
mov
adc
mov
dec
sub
loop
xchg
movsl
test
push
mov
pop
sahf
loopne
repnz
push
fcom
push
xor
mov
repz
setl
mov
mov
push
shrb
insl
les
mulb
or
cli
dec
mov
dec
jbe
add
xlat
mov
std
add
mov
push
out
int3
fimull
cld
jo
jne
iret
xchg
pop
cmp
push
int
pop
in
inc
inc
lret
xor
ret
inc
pusha
outsl
out
sahf
xchg
lods
ficompl
jp
daa
push
cmp
mov
fcmovb
dec
or
mov
mov
or
push
sbb
in
add
dec
pop
mov
test
outsl
mov
lds
inc
popa
rorb
in
adc
aam
popa
pop
cwtl
cwtl
cld
mov
pop
int
loop
enter
xchg
rol
std
cwtl
pop
push
and
xor
cmp
aam
ret
lock
cltd
xchg
out
push
lods
jp
jle
push
mov
dec
mov
in
lds
aas
xor
mov
insl
movsl
sub
sahf
out
sub
jno
in
in
dec
pop
xchg
js
shld
push
imul
xor
shlb
and
cmp
cmc
movsl
rorl
and
push
mov
push
sub
push
ss
mov
int
adc
aaa
jl
mov
xlat
mov
jl
outsl
dec
pop
add
shlb
xlat
add
mov
out
mov
cmc
mov
dec
jmp
cmp
inc
in
sarb
jge
xor
loop
faddl
aam
lahf
lock
vaddss
enter
add
mov
les
mov
clc
pop
jp
test
adc
jae
lds
dec
bnd
dec
nop
inc
sahf
push
dec
mov
outsl
scas
mov
icebp
add
sbb
push
xor
int
push
int
cmpsb
out
repnz
mov
pop
inc
test
shl
sub
jmp
aam
sbb
inc
or
test
pusha
fwait
xchg
test
rcrl
or
mov
sbb
hlt
mov
xchg
dec
mov
testl
xor
push
sub
in
or
popf
mov
test
xor
mov
fs
enter
shl
test
dec
or
lret
and
lea
mov
inc
sbb
popf
in
mov
jle
sub
lcall
test
insb
dec
cmp
dec
and
dec
addr16
sub
sub
dec
sub
jge
jp
addr16
jmp
hlt
dec
sbb
cmp
jl
mov
fdiv
mov
mov
cs
add
dec
repz
jnp
out
into
pop
aas
dec
shr
add
fdivrl
test
xor
xchg
cmpsl
mov
int3
push
fs
out
stc
lahf
in
cmpsl
loope
dec
repz
leave
movsl
add
jg
sub
add
divl
std
add
es
mov
mov
xchg
imul
sub
inc
ret
icebp
aaa
test
push
dec
sub
loope
or
leave
jmp
test
xorb
adc
les
add
iret
push
aad
in
lods
aas
pop
lret
loopne
lock
imul
pop
pop
push
repnz
ja
jmp
mov
pop
insl
sub
cmpsb
push
test
push
decl
rorl
pop
jnp
push
xor
mov
imul
cmpsb
inc
xlat
out
iret
pop
xor
add
xchg
jno
lahf
lret
pop
cmp
xor
js
push
loop
mov
inc
pop
imul
test
daa
std
add
ret
push
nop
push
cmp
cmp
jp
mov
mov
je
mov
faddl
xchg
mov
into
fnstsw
adc
mov
jb
das
sahf
or
dec
push
jg
out
and
into
test
out
xor
out
inc
aam
adc
cmp
mov
ljmp
in
iret
xchg
es
scas
leave
xor
int
data16
mov
insl
out
cmp
and
xchg
shll
mov
cmp
push
push
mov
add
cmp
or
jp
pop
lret
mov
aaa
ljmp
mov
push
fcoml
cmpsl
and
dec
pop
mov
pop
pop
and
repz
test
pop
enter
adc
fwait
nop
insl
xchg
rolb
icebp
cwtl
or
or
or
pop
das
int
fiaddl
das
lods
push
test
push
pop
xor
fldcw
ret
cmpsb
gs
rorl
enter
jge
mov
sbb
bound
sbb
dec
inc
lret
jmp
addr16
scas
push
push
fdivs
mov
xchg
out
mov
je
inc
xor
cmc
mov
mov
cltd
enter
popa
push
aas
popa
iret
jle
pop
inc
cmp
sti
cmp
mov
push
pop
cmp
bound
dec
cwtl
cmp
shlb
inc
test
jle
ljmp
sub
mov
int3
lahf
ss
outsl
outsb
jg
test
fisubs
add
test
mov
ds
push
ljmp
adc
jno
cmp
xchg
in
sbb
adc
inc
adc
repnz
sub
adc
mov
in
xor
xor
xlat
push
pop
repz
cmpsl
add
adc
pop
mov
fiaddl
out
dec
adc
jp
jbe
pop
and
sub
notl
mov
add
jno
xchg
or
leave
push
xor
jnp
shrl
icebp
cs
inc
pop
inc
fnsave
push
test
pop
push
inc
leave
popf
and
and
inc
dec
xchg
add
lret
pop
dec
imul
loope
stos
adc
addr16
lods
sbbl
fidivrl
mov
sbb
mov
inc
push
out
adc
jg
mov
adc
stc
in
mov
lods
js
pop
iret
out
adc
adc
cs
in
and
lock
jo
jle
jge
imul
push
test
adc
out
outsl
pop
repnz
and
push
cmp
sbb
cmpsl
std
sahf
mov
stc
mov
add
xor
jae
jg
ret
pop
loop
insb
mov
scas
not
lds
mov
shl
mov
fs
and
xor
es
outsb
push
call
and
inc
inc
nop
add
or
adc
xor
xchg
and
mov
mov
push
mov
cmp
lea
fnsave
cmp
mov
imul
test
xor
sbb
push
push
lock
sarl
adc
imul
movsl
mov
bound
shrb
xlat
enter
dec
xchg
mov
mov
insb
jo
mov
orb
cmp
dec
mov
sti
daa
mov
arpl
scas
xor
ret
fdivs
sbb
repz
cmp
loope
xor
pop
outsl
fnstcw
into
xor
mov
ret
lret
fnstenv
push
mov
adc
adc
stos
stc
mov
mov
add
lahf
dec
mov
xchg
cmp
dec
sbb
cmp
daa
addr16
ja
mov
and
sbb
pop
cltd
mov
ljmp
or
inc
movsb
push
shr
adc
pop
in
xor
in
insb
pop
cmp
add
pop
mov
int
movsl
sbb
cmc
push
test
pop
or
xchg
cwtl
jl
out
ss
adc
or
xchg
in
xchg
sbb
sub
dec
iret
mov
ljmp
daa
mov
dec
mov
xchg
pusha
mov
mov
jbe
pop
dec
jp
and
sub
shrl
pushf
js
xchg
cmp
rsm
mov
movsl
xchg
mov
add
rcrl
daa
cmpl
sarl
jo
xchg
push
inc
fdivs
xchg
jg
pop
sub
inc
cmp
popa
xor
pop
pop
cmp
out
std
lret
out
pop
stc
dec
sarb
pop
jns
les
adc
outsl
sbb
push
ds
cmp
out
cmp
bound
out
insb
inc
cli
add
jmp
adc
mov
fcmovu
xchg
aad
pop
push
sbb
xchg
inc
inc
sarl
daa
sbb
xor
pushf
inc
cmp
xchg
stos
jp
xchg
xchg
mov
sub
in
mov
cs
adc
in
gs
mov
test
arpl
mov
mov
push
xchg
and
mov
insb
pop
add
mov
push
aad
int3
push
out
fs
xchg
adc
insl
daa
negb
push
push
mov
or
jmp
mov
scas
clc
sub
cmp
xchg
enter
cmp
js
cwtl
sub
push
jb
pop
push
and
jmp
cs
decb
fs
fisttpll
xor
mov
mov
mov
pop
fcoml
cli
push
inc
outsl
push
div
arpl
mov
push
int3
psubb
xchg
leave
lahf
ret
addb
test
mov
out
pop
or
xor
sbb
xor
invd
out
lods
xor
jo
jmp
scas
lods
out
pop
mov
jbe
mov
inc
mov
fidivl
addr16
movsb
dec
push
mov
sub
push
jbe
xchg
out
or
out
push
push
notl
mov
out
in
xchg
inc
mov
nop
in
js
dec
xchg
inc
daa
adc
sub
inc
jo
sbb
xchg
xchg
sti
cmp
ficoms
sti
fs
dec
push
sbbb
or
inc
loopne
sbb
mov
fwait
or
mov
fsts
jl
push
stc
in
dec
popa
icebp
xor
ljmp
jbe
stos
add
jno
inc
dec
mov
scas
jp
mov
adc
jno
scas
sbb
out
cmp
pop
add
movsl
push
cmp
test
push
sbb
dec
in
hlt
cmc
fnstsw
jno
stos
and
cmp
stc
pushf
or
faddp
cmp
das
lds
fstps
dec
mov
mov
cmpl
in
ss
jle
cwtl
ss
and
sbb
lret
incl
mov
push
mov
adc
stos
push
xchg
daa
push
out
mov
cmp
das
mull
in
xor
arpl
pop
dec
sarb
mov
test
sahf
xor
sbb
mov
dec
int
in
inc
adc
pop
cs
lds
repz
enter
popa
xchg
add
add
insl
ficoml
fstpt
and
pop
and
cltd
push
pop
cli
mov
add
mov
cmp
sub
out
xor
inc
hlt
ds
cmp
add
pusha
push
lret
jg
popa
cmp
jg,pt
and
or
mov
xor
fs
xchg
rcll
push
xor
mov
or
dec
cmp
mov
dec
adcb
sbb
les
sub
push
aam
ja
xchg
out
ljmp
sub
leave
fcmovbe
push
popf
decl
dec
xchg
inc
and
and
sahf
fldenv
mov
les
mov
test
inc
clc
dec
mov
jle
xlat
xchg
xchg
jle
ss
push
inc
lahf
rorl
out
fisubl
xchg
xor
adc
pop
add
jb
lock
fidivrs
clc
sbb
xor
mov
or
cmc
mov
inc
mov
cmp
mov
add
xchg
insl
and
and
call
mov
xor
ja
iret
in
cmpb
sub
sbb
popa
repz
xor
repnz
adc
mov
bound
nop
cmp
cmpb
fistpll
in
fidivl
movsb
adc
inc
mov
cmp
mov
inc
and
add
dec
shll
add
mov
adcl
push
push
push
repnz
dec
cmp
pop
mov
or
mov
cmc
or
lret
fstps
add
sbb
rcll
in
cmp
pop
scas
mov
and
ds
jo
xchg
std
dec
mov
or
adc
jne
out
xor
fs
dec
call
movsl
inc
sub
daa
loope
add
or
aad
outsb
jne
mulb
lcall
scas
mov
cltd
add
or
rcll
stos
pop
idivl
jmp
mov
xor
mov
rolb
lahf
cmp
mov
pushf
adc
rolb
mov
dec
rcrl
sti
xor
out
repz
xor
pop
xchg
jle
icebp
sbb
inc
clc
mov
pop
fisttpll
ficomps
out
push
pop
and
out
adc
jae
dec
out
push
pop
adc
into
mov
xchg
out
cmp
cmp
xchg
in
shll
mov
mov
popf
into
and
popa
ret
ficompl
dec
loop
insl
roll
cld
nop
mov
jo
icebp
gs
in
xchg
pop
movsl
xchg
test
pop
negb
adc
mov
fstps
mov
in
xchg
aas
fidivrl
pop
je
adc
and
rorb
cmp
mov
call
cmp
sbb
push
movsl
mov
mov
push
outsb
jp
fwait
add
mov
shr
rol
jp
and
xchg
cmp
std
xor
dec
nop
sub
pop
fsubs
jae
dec
xchg
adc
bound
pop
movsb
in
enter
lret
ljmp
ja
mov
cmp
mov
cmp
cmp
imul
push
out
fwait
inc
and
lods
outsl
push
into
jp
adc
aad
xlat
imul
movsb
adc
dec
xlat
aad
lahf
insl
xor
fldt
or
inc
pop
mov
xlat
inc
iret
jle
mov
je
scas
lahf
or
xor
notl
das
fisubrl
mov
push
pop
mov
fmuls
fistpll
adc
in
mov
ja
ja
lcall
xchg
sbb
inc
addb
stos
mov
icebp
jo
or
in
das
push
push
stc
dec
mov
aam
les
mov
inc
shrb
jecxz
arpl
push
jle
daa
cmpsl
lea
jecxz
xchg
mov
dec
or
popa
sbb
idiv
and
push
pop
mov
insb
inc
cmpxchg
decb
mov
test
push
xorb
mov
cld
dec
into
and
push
pop
pop
jl
pop
jl
or
cmp
fcmovnb
popf
inc
xor
out
ds
jno
shlb
xor
cltd
push
cmp
mov
sub
loopne
xchg
xor
and
lods
or
jnp
dec
inc
mov
sbb
mov
sahf
aaa
adc
mov
sub
xchg
dec
repz
xchg
adc
aad
out
es
xor
loop
ljmp
rcl
cmp
cmc
lock
push
push
lods
push
pop
jmp
ja
stos
shll
nop
or
bound
dec
cmpsb
push
cs
aad
xchg
cmp
jp
jge
stos
mov
aad
dec
ss
aam
push
into
test
or
stos
mov
lret
cltd
aas
mull
enter
push
or
test
in
mov
or
xor
es
jae
jecxz
push
or
mov
repz
aam
pop
cli
adc
movsb
jecxz
push
xor
stos
lea
sub
rorb
jmp
outsl
ja
adc
or
aas
adc
imul
lock
in
pop
mov
scas
addb
sbb
ds
and
inc
add
sbb
enter
pop
mov
or
mov
jns
sbbl
dec
ds
stos
ret
mov
xor
jmp
pop
mov
jle
xchg
and
and
rorb
push
mov
imul
loope
sti
mov
cmp
pop
call
fimull
nop
or
movsb
sbb
dec
cmp
cmpsb
xorl
pop
cmp
jmp
pop
jg
cmp
add
jp
ss
mov
int3
sbb
fcom
xchg
xchg
ret
orl
imul
ss
pop
adc
int3
int
mov
sub
mov
fildll
scas
subl
fmul
jns
mov
jl
push
mov
in
cs
mov
es
cld
lcall
in
mov
cmp
adc
mov
notb
add
sub
xchg
insl
jecxz
sbb
dec
jnp
lea
inc
shl
or
leave
test
test
or
mov
cmp
pop
adc
xchg
icebp
xchg
mov
sbb
jle
mov
push
out
pop
sbb
push
inc
ret
dec
add
cwtl
or
movnti
push
mov
add
push
xor
dec
xor
mov
or
fiadds
inc
push
mov
dec
add
mov
adc
jae
pop
xor
ret
inc
xor
pusha
xchg
dec
sbb
push
xchg
adc
mov
mov
lock
je
ds
and
and
mov
rolb
add
inc
sbb
and
mov
mov
pop
and
sub
inc
test
popf
flds
stos
lods
or
xor
mov
mov
popf
cmpsl
insb
push
hlt
jo
in
dec
inc
pop
mov
shll
jle
or
pop
gs
dec
cwtl
cltd
mov
mov
jnp
cmpsl
stos
ret
push
nop
add
aad
in
mov
out
pop
inc
popl
mov
pop
add
imul
loope
inc
mov
dec
push
popf
pop
cmp
jo
test
lods
sbb
mov
dec
test
daa
in
pusha
dec
sarb
or
sbb
das
jg
xor
push
ds
xchg
ret
jl
jno
cld
push
or
inc
sub
push
inc
pop
fnstcw
mov
rcrl
pop
popa
sub
mov
xchg
call
ja
rorl
push
inc
jp
lret
inc
jmp
adc
ja
into
ds
fcomps
daa
cmp
add
sti
add
xchg
push
jecxz
nop
pop
and
xchg
and
or
aam
test
or
mov
or
mov
push
push
cmp
mov
ds
fcompl
stos
clc
mov
push
ret
imul
cli
mov
in
adc
dec
xchg
cli
cmpsl
mov
push
add
inc
xchg
insb
pusha
inc
lods
decb
adc
mov
pop
dec
pop
aas
sbb
mov
pop
je
inc
jg
lods
stc
faddl
xor
stc
and
dec
insb
or
lock
adcl
rol
push
aam
pop
cmp
or
adc
ja
call
fs
mov
jne
push
cmpsl
out
pushf
xor
pop
inc
xchg
xchg
or
ss
sub
leave
push
xchg
lods
cli
mov
bound
roll
xchg
push
push
out
lods
cld
dec
push
mov
sub
loope
ljmp
jbe
adc
cltd
lods
fsubrp
leave
or
mov
mov
push
fnstcw
das
scas
test
fistpll
insl
sub
jg
lods
lods
repz
pop
jmp
sahf
sbb
jl
jg
fsubr
add
std
js
aaa
mov
es
into
push
jl
sarl
cmp
sahf
andl
mov
adc
clc
pop
cmpsl
mov
push
or
jge
cld
dec
or
out
lods
test
cmp
sub
and
or
ljmp
xor
mov
sbb
stc
sahf
stos
shlb
sti
aas
stos
xchg
mov
sbb
mov
and
cwtl
sub
jg
inc
adcb
push
xor
pushf
or
sub
adc
mov
dec
int3
jecxz
xchg
or
pushf
fmuls
xchg
clc
cwtl
add
push
jae
or
cld
repz
cmp
lods
jmp
mov
pop
add
out
add
sti
pop
jmp
enter
xchg
xlat
call
xchg
hlt
cmc
in
mov
arpl
mov
mov
cmp
sbb
bound
fildl
int
popf
cmpsb
jg
fildl
inc
cmpsl
mov
sub
jecxz
ds
out
and
dec
insl
sbbb
xorl
js
sarl
insl
stos
test
dec
adc
sahf
or
mov
mov
or
addl
imul
andb
ret
lods
lcall
test
test
les
inc
mov
cli
pop
movl
jecxz
orl
or
notl
arpl
push
stos
outsb
insl
lret
imul
jecxz
or
xor
jnp
inc
dec
cs
xor
jg
fldt
repnz
ss
movsb
aas
mov
mov
rclb
jnp
rcrl
dec
push
in
push
mov
mov
das
cmpsl
pop
cld
pop
push
test
cmp
or
hlt
xchg
xor
sbbl
cs
dec
sub
in
push
add
mov
imul
sarl
push
out
add
sbb
xor
jnp
adc
rorb
xchg
mov
and
dec
dec
inc
dec
into
adc
dec
fcom
jecxz
sub
rolb
lret
jmp
lds
pop
mov
push
inc
scas
cli
ja
fcoml
dec
fsqrt
mov
js
mov
or
scas
lea
adc
mov
popf
sti
dec
arpl
push
push
mov
jnp
enter
push
imul
sahf
pop
sahf
stos
sub
out
jo
and
daa
mov
rolb
mov
mov
pop
dec
pushf
mov
lahf
das
in
jecxz,pt
sub
xchg
push
ja
mov
testl
scas
lret
out
sub
ret
adc
mov
sub
mov
aaa
stc
and
push
dec
and
sub
fwait
testl
mov
rcrb
inc
movl
jae
repz
mov
mov
fwait
popl
test
out
jbe
lods
ret
mov
mov
fsubrl
lock
adc
aad
loope
jo
jno
shrl
fistps
mov
pop
outsb
xchg
mov
mov
mov
scas
xchg
push
inc
xchg
mov
inc
cmp
je
test
mov
xor
mov
repz
clc
or
out
mov
cwtl
add
ret
and
xlat
mov
int3
mov
in
mov
repnz
and
xor
loopne
lds
pop
mov
gs
ljmp
add
inc
int
dec
mov
sbb
je
sbb
out
lret
dec
sahf
shlb
inc
mov
add
jmp
cmpsl
iret
testl
and
adc
fnsave
testb
lret
mov
stos
cmp
jno
insb
sub
mov
push
xchg
jb
insl
lret
out
aad
add
lock
enter
dec
cwtl
xlat
xor
lds
sbb
mov
jno
adc
les
adc
int
cwtl
testb
or
jae
ret
push
adc
lret
push
mov
mov
int3
mov
jg
xchg
cmp
fsts
or
sbb
jg
sub
popa
sub
xchg
ret
in
loope
mov
dec
icebp
inc
sub
dec
mov
mov
pushf
loopne
push
mov
mov
xchg
add
mov
adc
popf
jae
int3
mulb
mov
jmp
jle
mov
insl
es
push
loop
movsl
sub
imul
stc
xlat
in
icebp
stos
dec
cs
dec
sub
ret
bound
fwait
xchg
mov
xor
int
cmp
fidivl
xchg
cs
scas
popl
adc
shrb
fwait
stc
scas
jne
std
xchg
lds
jp
ret
rcrl
fisubrl
jg
jl
inc
pop
rcll
mov
inc
xchg
rcl
int
std
int
adc
addr16
mov
sbb
mov
outsl
sub
imul
jne
mov
mov
and
das
or
pushf
pop
add
aad
mov
shrl
sti
xchg
and
fisubs
mov
and
push
inc
push
mov
and
xchg
xchg
or
stos
out
mov
push
daa
pop
lahf
sub
popf
push
mov
or
push
clc
bound
call
push
adc
sti
mov
insb
cltd
bound
mov
push
enter
or
pop
mov
cld
and
out
aam
lea
add
test
pop
ds
and
ljmp
sbb
mov
imul
sbb
add
xor
adc
lds
mov
pop
xchg
out
fiadds
push
lcall
cmc
mov
daa
cmp
imul
loope
xor
loopne
int3
fimuls
stc
movsl
push
inc
imul
mov
and
test
shll
jmp
sar
out
or
aam
mov
popa
inc
cmp
inc
sbb
insb
fmuls
xor
cmp
xchg
adc
pusha
lds
mov
in
or
pop
jns
pop
rolb
out
arpl
jae
mov
cmp
mov
sarb
dec
pop
inc
popf
mov
fisubrl
mov
stos
jge
adc
call
mov
mov
leave
test
push
xchg
shr
das
ds
lds
cmpl
cs
mov
mov
popa
in
das
fcmovne
out
inc
mov
mov
subl
xor
push
pop
sbbl
int3
enter
rorl
sahf
jno
std
inc
cmp
xchg
mov
das
and
jecxz
pop
jo
scas
pop
xor
repz
repz
cmp
test
mov
clc
aas
push
loope
shr
arpl
xchg
xchg
cmp
aad
mov
clc
das
xchg
decl
mov
cmp
mov
ljmp
inc
pop
xchg
pop
mov
enter
call
adc
mov
add
icebp
push
pop
fdivs
add
pop
lret
and
xchg
mov
sbbb
fstps
xchg
sub
call
decl
cltd
pusha
ja
mov
xor
and
xchg
mov
out
loope
push
and
mov
lret
aaa
stos
cwtl
fmuls
in
ret
iret
mov
daa
dec
mov
inc
xorb
mov
out
fwait
bound
imul
push
mov
fs
pusha
pop
cmpsl
shr
and
push
jbe
leave
aas
dec
jne
das
fwait
jl
daa
andb
dec
es
xor
int
test
mov
sub
fldenv
jnp
or
mov
xor
loopne
aas
ror
das
push
dec
shll
add
jbe
cwtl
cmpsb
jmp
pop
icebp
xor
or
stos
outsb
sahf
mov
pop
dec
and
repz
ja
jp
mov
sahf
xor
mov
inc
or
push
add
insl
xor
clc
nop
dec
int3
sub
loopne
push
js
push
cmp
mov
fisubrs
sbb
je
gs
fcompl
mov
testb
pop
int3
outsb
out
cmpsl
and
in
cs
cmp
stos
mov
shrl
shrl
lcall
or
jg
adc
out
data16
inc
ja
mov
stc
call
mov
stc
in
inc
pop
mov
mov
repz
cli
sub
aam
cmp
pop
in
lea
ret
in
test
pop
scas
push
xchg
pop
orb
and
pop
popf
data16
lea
pop
cmp
xlat
mov
outsb
es
lea
sbb
cmp
jo
adc
mov
out
push
es
xchg
insl
mulb
sub
cld
push
lock
push
incl
cmp
int3
enter
or
pushf
mov
cmc
mov
jge
aam
test
in
cmp
shlb
cmpl
call
jecxz
scas
lock
scas
and
lds
sti
jmp
mov
sahf
aas
out
int
and
mov
or
leave
xor
xor
test
jmp
or
mov
ja
inc
stos
test
and
lea
cwtl
cwtl
iret
les
int3
cmc
fsubs
xchg
cmp
scas
pop
cmp
add
cmpsl
push
or
mov
into
push
es
mov
je
mov
prefetcht1
sub
fwait
and
lea
xor
pop
aaa
xchg
add
jg
xor
mov
mov
outsb
les
sbb
les
mov
movsl
loope
jmp
test
repnz
or
shlb
add
into
push
pop
mov
sub
insb
push
in
jo
mov
rolb
jg
mov
fisubs
fdivrs
dec
or
cmp
push
popf
add
adc
roll
dec
push
scas
ficompl
loope
mov
xchg
push
jb
shlb
cmp
xchg
sarb
lds
push
rorb
inc
or
into
sub
mov
in
cmp
mov
int3
das
cmova
das
sbb
sbb
add
idivl
sahf
pop
stos
sbb
xorl
inc
push
pop
out
mov
repnz
dec
insl
mov
test
push
xor
jnp
and
test
movsl
mov
ret
adc
or
dec
mov
push
js
xor
stos
adc
cltd
mov
cli
out
jno
add
adc
dec
sbb
xchg
sbb
mov
mov
mull
negl
xor
jbe
inc
lods
inc
pop
sbb
out
sbb
pop
and
daa
mov
mov
rclb
in
push
incb
adc
sbb
and
xchg
fs
and
loop
cmp
push
bound
enter
es
dec
xor
cld
notl
subl
cli
and
sbb
xor
push
das
mov
lock
mov
inc
jo
test
cltd
mov
dec
clc
lcall
sub
bnd
dec
dec
adc
mov
scas
lret
and
mov
nop
xchg
xor
mov
out
dec
lock
and
or
push
stos
dec
movl
inc
negl
mov
jb
aad
outsl
outsl
sbbl
aaa
push
pop
inc
pop
subl
shrb
or
xor
dec
mov
daa
in
icebp
jns
repz
adc
mov
cltd
fpatan
mov
addr16
mov
aad
jecxz
in
lods
repz
jmp
popa
and
fisttpl
movsl
stos
mov
addl
inc
faddl
lock
sti
loop
or
rcll
or
dec
enter
xchg
cmpsl
sub
test
mov
push
sub
andl
adc
mov
ds
add
int
add
sbbb
rorl
dec
fldt
pop
loop
ds
sti
les
lcall
js
scas
cmovne
ret
es
and
test
mov
mov
mov
inc
and
daa
jge
dec
movsl
mov
repnz
aaa
rcr
loopne
negb
xor
push
jne
sarl
stos
dec
mov
sub
lret
idiv
rcrl
mov
clc
mov
cli
mov
sbb
ret
not
cmp
sbb
repnz
test
xchg
xchg
lds
mov
push
mov
pop
add
mov
int3
aas
mov
sbb
jg
das
mov
inc
mov
cmpsl
rolb
jecxz
dec
je
add
cmp
ret
jo
push
push
inc
mov
lock
adc
fwait
jle
xorb
cmpsl
mov
movsb
mov
fidivrs
daa
dec
push
push
loope
mov
and
clc
pop
imul
shrl
lret
mov
out
xchg
sub
pop
lret
out
jb
in
lret
shl
nop
adc
fs
popf
lock
sahf
lahf
fsubl
sub
enter
adc
cltd
push
xchg
mov
xchg
push
test
bnd
dec
or
cmpsb
adc
cwtl
xchg
in
rorb
test
lahf
xchg
out
dec
jmp
dec
sub
clc
es
hlt
xor
pushf
push
sub
popl
xchg
popf
mov
xchg
and
push
fdivl
js
das
inc
aad
jns
out
inc
sbb
jg
outsl
adc
leave
cmpsl
mov
mov
dec
hlt
movsl
dec
icebp
pop
ljmp
sahf
or
imul
pop
fsubs
inc
adcl
dec
mov
sahf
mov
stc
js
out
call
push
sub
loope
and
add
inc
pop
inc
repnz
sti
xor
pop
lods
push
xchg
pop
aad
call
xlat
mov
iret
mov
imul
nop
jg
push
pop
lret
insl
mov
repnz
pop
popa
fnsave
test
lahf
pop
mov
pop
rolb
inc
jmp
push
into
enter
in
cmp
dec
inc
mov
cwtl
jo
push
sbb
xchg
int3
sub
inc
and
sbb
sbb
xchg
cwtl
sub
sahf
loop
scas
lahf
loope
xor
mov
movsb
push
lret
iret
pop
stos
fwait
hlt
scas
bound
ljmp
xor
ds
jo
push
xor
sub
push
lahf
nop
addr16
shlb
mov
adc
add
jbe
xchg
int
mov
lret
movsb
lods
into
pop
jge
outsb
ret
jecxz
arpl
sbb
stos
int3
lea
sub
mul
ds
stc
movsl
xchg
ljmp
add
cmp
addr16
outsl
mov
ss
dec
cmc
cmp
stc
cmp
lahf
adc
lret
or
das
ret
jbe
test
pop
mov
cwtl
vcvtpd2psy
cwtl
xchg
test
push
cmp
cmc
add
sub
mov
inc
sub
mov
push
ss
fcmovnbe
faddl
in
lea
mov
sub
bound
loope
pop
stos
addl
sbb
jo
inc
xor
test
jge
xchg
jmp
adc
mov
adc
scas
mov
loopne
ret
hlt
jns
cli
test
push
outsb
dec
out
lods
push
mov
jmp
ja
popa
or
test
adcb
jecxz
pop
repz
or
pop
jmp
hlt
jmp
xchg
cmc
mov
push
pop
loop
das
adc
xor
subl
rcrb
mov
loop
sub
add
xchg
test
xchg
add
jae
adc
testl
xor
adc
jg
movsl
pop
divb
inc
mov
icebp
hlt
ret
adc
fwait
fwait
sbb
fwait
in
add
adc
add
pop
ljmp
ror
inc
lods
call
cmp
pop
pushf
or
dec
or
mov
scas
inc
rcrb
mov
int3
mov
in
and
jmp
lea
out
dec
sbb
and
iret
in
push
loop
orl
scas
sub
cmpsl
out
cmc
pop
mov
mov
dec
pusha
lahf
cmpsl
sbb
or
lods
int3
jo
iret
dec
cmpsl
nop
mov
stos
cmp
mov
pop
pop
mov
sbb
insl
cld
cmp
pushf
test
push
hlt
fwait
sti
xlat
xor
mov
xor
into
xor
bound
jl
arpl
notb
int
or
adc
mov
arpl
cmp
xchg
call
shrl
mov
loope
ds
pop
or
dec
jmp
in
bswap
iret
popf
push
push
xchg
dec
in
sete
pcmpeqb
mov
aas
push
jns
test
dec
push
ds
fs
cmp
lcall
adc
xchg
das
stos
push
in
pop
out
add
sub
push
push
xor
push
push
popf
lret
sbb
mov
icebp
adc
cmpsl
test
iret
sbb
addr16
int3
out
push
je
or
mov
sub
push
int
stos
xlat
aaa
jp
add
xchg
cltd
or
xor
cmp
rcrb
mov
pop
add
push
adc
data16
cs
nop
adc
addb
lahf
hlt
xor
leave
sbb
psubusb
es
test
pop
out
lods
dec
cmc
xor
cmp
insb
enter
sti
insb
mov
dec
sarb
adc
mov
mov
or
sahf
lds
add
in
and
insb
out
ljmp
gs
pop
ja
sahf
mov
cld
enter
jle
sbb
aaa
sbb
or
jmp
push
adc
int
mov
fcom
popf
sbb
cmp
aam
push
mov
cmp
add
data16
mov
insl
mov
pop
ja
pop
ds
insl
out
xchg
enter
cmp
setg
lods
loopne
xor
adc
xchg
or
push
push
lods
mov
push
clc
push
dec
aaa
and
push
push
pop
fs
add
jno
lock
lds
stos
lea
cmp
fadds
popf
mov
rorb
or
and
add
mov
sub
dec
jne
jne
gs
add
and
dec
jmp
dec
mov
addr16
cmp
js
cmp
jne
es
dec
mov
out
or
xchg
jno
add
sub
jae
sbb
icebp
aas
out
js
repz
es
ret
mov
push
aas
sti
cmp
sbb
imul
inc
jbe
lahf
les
mov
xchg
jp
bound
add
roll
out
pop
testb
lahf
or
mov
je
pop
push
dec
icebp
push
aaa
ljmp
not
jns
enter
push
xchg
rorb
outsb
inc
fs
adc
xchg
ret
pop
ret
hlt
std
jns
inc
adc
out
sub
add
sub
mov
push
cltd
push
and
sub
lret
dec
rcrl
or
inc
pop
loopne
cltd
lret
or
push
mov
or
and
jp
iret
mov
xchg
fwait
addr16
lock
nop
push
fwait
pop
xchg
sahf
aam
push
xor
xor
sarb
mov
or
shlb
dec
sub
outsl
and
insb
data16
scas
ljmp
push
pop
xchg
or
sub
bound
out
mov
cmp
fldt
dec
inc
cmp
jge
or
movl
and
jg
arpl
sub
mov
cltd
int
pop
push
dec
test
notl
rolb
dec
fcomps
sbb
hlt
sub
daa
cld
lret
xor
jmp
inc
std
mov
add
xchg
pop
push
hlt
ss
cli
and
jo
stc
jmp
add
aaa
insl
nop
push
jae
adc
pop
bound
or
out
imull
and
xchg
xchg
adc
and
inc
and
into
gs
jo
or
jle
mov
loope
jnp
and
and
mov
sti
xor
add
and
and
ret
test
inc
or
icebp
jle
sub
call
push
xchg
rcrl
sub
mov
dec
aam
fldl
into
mov
es
sub
add
cmp
data16
incb
cltd
in
adc
and
fmuls
in
lahf
xor
dec
sbb
push
pushf
insl
xchg
ficoml
into
out
push
xor
stos
mov
mov
out
mov
and
jl
xor
dec
int
scas
or
push
outsl
sbb
test
jno
mov
xchg
pop
addb
inc
add
loope
jg
sahf
and
dec
sub
js
inc
push
mov
fmuls
movsb
pop
adc
cmp
adc
fdivl
pop
mov
xor
test
hlt
push
xchg
or
insb
mov
into
out
insb
aas
and
cli
cs
pop
lret
in
out
in
push
push
mov
test
push
dec
xor
repnz
jle
out
jg
popf
cmp
cs
push
lcall
ret
mov
xor
push
loop
pop
fwait
xor
push
imul
inc
lahf
sub
pop
jmp
push
xchg
scas
lock
hlt
scas
sahf
push
mov
test
in
jns
mov
les
xchg
or
ret
and
in
movsl
mov
int3
mov
cmp
ret
ficoml
dec
xor
inc
dec
out
insl
add
mov
hlt
scas
dec
pop
movsl
arpl
jno
scas
fstpl
ret
test
and
xchg
sub
fbstp
sub
push
into
pop
int
orl
ja
icebp
pop
mov
push
das
rol
jne
xchg
jns
fldcw
arpl
cs
and
pop
jae
jnp
push
je
daa
dec
add
mov
xor
adc
insb
lret
nop
mov
fidivrl
imul
inc
jo
aam
push
and
xor
adc
sub
ret
stos
sbb
adc
sub
mov
test
xor
dec
in
aas
enter
addr16
repnz
xlat
stc
xchg
jno
xor
les
cmc
stos
scas
mov
mov
int
je
ds
or
test
leave
stos
clc
dec
jbe
je
or
aam
inc
xor
cmpsl
dec
xor
adc
scas
out
and
lret
daa
js
es
jbe
adc
and
in
imul
add
sti
mov
and
sarb
jo
inc
ss
dec
mov
sub
jp
lods
cmpsl
jl
fistpl
rolb
rcl
pop
pop
push
fcoml
dec
arpl
push
push
out
enter
xchg
push
std
popf
dec
mov
addr16
add
cli
adc
push
repz
cmovp
ja
ss
iret
insl
add
xor
adc
jae
dec
in
push
jne
test
test
dec
lds
xchg
enter
clc
inc
pop
sbb
cmp
jle
stos
mov
xor
mov
sbb
mov
sub
sbb
imul
mov
loopne
loopne
ja
inc
cmpsl
gs
cltd
mov
mov
mov
sub
js
add
sub
mov
out
cmc
fmull
cmp
xor
sbb
in
pop
cmp
das
int3
fidivrl
mov
test
push
xor
pop
or
pop
movsb
add
sub
mov
jno
fwait
addr16
xor
mov
and
in
insl
loopne
fnstsw
mov
in
and
iret
mov
jne
adc
bound
push
dec
cs
mov
jae
pop
aaa
iret
pushf
ljmp
shlb
cmp
fwait
ljmp
loopne
adc
jns
xchg
sub
fsubs
sub
push
iret
adc
mov
add
daa
push
inc
andl
into
mov
out
shrl
psubw
es
inc
ljmp
jns
adc
add
out
sub
cld
movsl
shlb
mov
lret
cwtl
and
test
jp
pusha
ljmp
jnp
gs
stc
das
pop
pop
aaa
test
lret
lret
sub
in
xor
std
push
xchg
dec
fldt
leave
and
cmpsb
sub
mov
insb
pop
and
out
cli
shlb
sub
loopne
daa
fucomip
dec
mov
popf
jno
mov
inc
cmp
lret
scas
xchg
ror
adc
xchg
in
mov
jp
xchg
push
dec
sub
inc
aaa
bound
xchg
repz
fistpl
gs
add
cmpsb
mull
sahf
fiadds
cmpb
cmp
out
rclb
aam
xor
out
jo
push
cmpsb
push
loop
xchg
jno
data16
dec
lods
es
movsb
xorl
mov
xor
mov
sbb
stc
outsl
into
adc
lret
cld
push
movl
loopne
arpl
mov
pop
xchg
mov
adc
stc
loop
aas
xchg
int3
lods
dec
fdivs
sarl
nop
jmp
add
cmpsl
stos
push
cmpb
lret
test
outsb
out
fwait
jb
movsb
jg
negl
push
leave
or
daa
mov
xchg
ss
xchg
shlb
jmp
inc
fcompl
movsb
sbb
xchg
sbb
incl
outsl
out
inc
or
add
push
divl
inc
add
mov
sub
dec
imul
sarl
gs
testl
mov
xor
pop
aaa
ficoms
jmp
or
stos
jge
leave
into
cwtl
inc
cmc
push
jmp
insl
sbb
into
mov
push
addr16
sbb
fucomi
push
popf
fdivl
popa
cmpsl
sar
fildl
movl
and
jp
xchg
cmp
out
ficoms
add
dec
sbb
jae
out
lea
imul
outsl
cmpb
es
arpl
dec
mov
mov
mov
mov
movb
xchg
and
pop
in
push
test
and
mov
mov
cli
test
daa
scas
ret
xor
loopne
lds
cwtl
sbb
mov
repz
mov
xchg
xor
cmpsl
clc
cmp
aaa
stc
insb
insb
imul
and
pusha
push
repnz
stos
sbb
ret
movsl
push
outsl
movsl
dec
ss
inc
frndint
add
sub
mov
push
push
xor
cli
add
jmp
sub
or
mov
fcmovu
push
loope
sbb
mov
pop
cmp
or
fdivl
mov
push
adc
fdivr
pop
bound
inc
in
cld
dec
xchg
adc
js
pushf
loopne
iret
movsl
movsb
aaa
fdivl
xchg
in
jmp
pop
mov
negl
movsb
mov
add
stos
ljmp
cmpsb
in
shrb
adc
jmp
jmp
mov
mov
mov
fstpt
cmp
xchg
pop
push
jg
pusha
mov
push
push
cmp
dec
cmp
cmpsl
hlt
out
add
bnd
jo
rolb
aaa
outsb
in
aad
sbb
pushw
aas
ljmp
in
sbb
mov
pop
pop
inc
loop
popa
icebp
dec
push
scas
jmp
jg
jb
mov
stos
sbbb
aad
es
add
xor
push
pcmpgtb
je
xlat
push
fsts
out
outsb
xchg
mov
sti
cmp
stos
cmp
mov
fwait
sub
push
xor
push
xchg
mov
sub
and
sarl
sub
sub
mov
ss
mov
inc
dec
pop
sbb
cmp
cmc
pusha
push
loope
or
les
cmp
jl
je
jmp
ret
lea
and
notl
loop
js
notl
in
int
push
inc
icebp
cmp
lods
inc
sub
dec
or
jg
push
les
ljmp
xlat
or
jnp
pop
or
aam
pop
mov
inc
jl
aad
gs
insl
jbe
pop
mov
xchg
mov
lcall
xor
adc
mov
mov
push
jmp
call
xchg
int3
push
dec
cmpsl
in
repnz
cwtl
push
cs
mul
lret
lret
enter
xor
jnp
scas
cmp
mov
mov
jno
xor
fldl
push
adc
daa
mov
jecxz
ret
stos
sub
jmp
iret
sti
push
and
mov
jg
cmp
mov
push
lret
cld
pop
fnstenv
sbb
fcompl
xor
fiadds
pop
pop
mov
xchg
xchg
push
pop
xor
jp
mov
mov
push
inc
xlat
imul
sbb
fmulp
and
inc
test
sbb
pop
push
xor
hlt
aam
or
nop
in
or
iret
ljmp
ss
fnstsw
inc
mov
jecxz
test
xchg
jl
pop
xchg
push
xor
jmp
dec
mov
cld
mov
fld1
jne
xchg
mov
mov
or
dec
jge
cmp
or
jecxz
and
in
dec
add
jle
xor
mov
iret
in
xor
hlt
leave
add
mov
ds
adc
aas
jl
divl
dec
decl
inc
mov
lret
je
push
adc
sar
loopne
ss
loopne
pop
inc
loopne
add
leave
push
dec
and
push
pop
js
insl
inc
into
add
xor
mov
mov
ret
in
mov
lds
mov
lds
daa
jne
jo
xor
jmp
mov
inc
jmp
stos
lret
pop
movsl
xor
scas
subl
std
ss
repz
lret
nop
outsb
sti
je
pop
sub
jbe
cli
mov
popf
std
jnp
leave
and
insl
ss
xchg
shl
inc
push
test
aaa
or
out
fnsave
fbld
lcall
repnz
jns
mov
scas
popf
lret
xorb
adc
scas
mov
movsb
xchg
or
pop
mov
inc
bound
jne
ds
shrl
mov
cli
iret
cld
dec
rclb
loope
pop
out
mov
pop
mov
xchg
das
push
shlb
cli
call
aam
cltd
sub
lock
mov
push
call
js
test
fnstenv
fs
or
push
xlat
ficoms
push
push
adc
lcall
loop
es
push
mov
jne
std
ret
push
es
dec
scas
inc
js
lock
daa
mov
in
mov
jp,pn
lret
mov
and
mov
jle
add
inc
scas
cli
lods
and
into
dec
stc
lods
popf
or
add
std
adc
xor
xlat
mov
lods
insl
pop
bound
dec
mov
push
fisttpll
lret
cmp
mov
or
xchg
inc
xchg
adc
cmp
mov
call
xchg
cmp
insl
in
int3
pop
test
int3
pop
xlat
pop
cld
jp
divl
dec
add
adc
sub
nop
lret
iret
mov
stc
lock
std
add
sub
pop
pop
xor
cmp
mov
fnsave
pushf
daa
cmp
push
mov
in
push
and
fisttpll
inc
lahf
mov
adc
inc
in
test
pop
aaa
xlat
fstpl
in
jp
pusha
add
xor
sub
push
dec
mov
out
add
lahf
xchg
fisttps
xor
mov
enter
ja
sub
notb
cs
mov
cmp
lea
lock
sbb
and
imul
push
jmp
or
inc
movsl
lea
mov
pop
fisttpl
lds
push
test
add
mov
pop
and
or
scas
cmp
cs
push
mov
fmuls
add
movsb
push
repz
dec
push
xor
jno
jmp
repz
push
shl
mov
xor
jmp
jl
and
iret
out
jnp
push
mov
push
jns
dec
clc
jns
cmp
jmp
pop
sbb
popa
rorl
pop
mov
jmp
xor
fnsave
dec
or
cmpl
lea
jae
shr
pop
mov
mov
adc
cmp
gs
scas
std
out
jp
adc
call
into
divl
push
bound
mov
mov
je
popf
loopne
mov
test
jp
mov
pop
xchg
in
push
repnz
mov
or
fdivrl
js
sahf
insb
mov
hlt
jmp
xlat
popf
addl
xor
shlb
push
popa
hlt
addr16
pop
inc
mov
inc
mov
sub
cli
cmc
xor
shl
ss
and
test
test
xor
into
test
lods
cli
or
loop
add
cmpsb
clc
or
add
add
subb
push
push
std
pusha
stos
xchg
in
lods
sbb
out
and
arpl
sub
push
fiaddl
movsb
imul
mov
lcall
mov
adc
and
pushf
ret
inc
xor
addl
pop
hlt
jbe
lret
sub
cmp
dec
push
dec
dec
hlt
std
int3
pop
xchg
fidivl
push
jo
clc
iret
lea
rcll
pop
cmp
fwait
dec
sub
pop
inc
lret
mov
inc
adc
xchg
mov
xchg
mov
or
in
aaa
into
lahf
insb
cmpsl
fdivl
call
ds
iret
xor
fdivl
pusha
dec
dec
sub
push
sbb
dec
push
xchg
sbb
out
push
xchg
xchg
pop
addb
daa
inc
mov
xchg
pop
adcb
mov
mov
mov
loope
inc
imul
jmp
jmp
add
jbe
ret
push
sarb
pop
es
adc
push
fmulp
ffree
push
icebp
xchg
inc
das
es
sub
push
cltd
int
mov
xchg
fsubrl
cli
jle
es
xor
scas
shl
int3
cmp
aad
scas
fcomip
mov
inc
or
iret
push
mov
out
sbb
jg
push
mov
jnp
cmc
cmp
xor
rep
popa
push
push
add
iret
mov
xchg
inc
loope
pop
outsb
dec
lea
scas
add
dec
faddl
jle
test
ss
rolb
xchg
cmpsl
rcr
sub
adc
lret
inc
imul
lcall
sbb
dec
adc
dec
das
popa
lock
lcall
cmpsl
adc
fwait
les
inc
jno
mov
ja
dec
mov
jo
insl
fdivrs
dec
clc
popa
ds
ret
test
test
cmp
mov
fcomps
movsb
int
jp
rclb
lahf
adc
xchg
dec
mov
incl
arpl
das
subb
jp
pusha
je
cmc
add
lds
jae
inc
js
fisubl
aam
bound
es
sub
outsb
cli
lock
or
std
es
and
mov
sbb
popf
iret
hlt
in
adc
mov
pusha
xor
cwtl
mov
jb
mov
add
mulb
sub
push
loop
and
cmp
push
pop
or
and
adc
into
push
in
jnp
xchg
adc
add
in
scas
cmp
xchg
pop
fidivrl
push
pushl
fs
push
mov
push
data16
sub
inc
dec
jb
ja
pop
xor
dec
jecxz
lcall
inc
xor
pop
mov
mov
dec
cmpsb
not
fsubs
cmp
lods
adc
pop
ljmp
sub
and
aas
shll
push
push
leave
js
add
jno
movsl
cmp
dec
cs
jns
dec
pusha
aas
mov
aaa
add
test
cmp
neg
mov
add
xchg
cmp
xchg
sahf
lock
inc
andb
test
push
js
mov
dec
leave
mov
jbe
mov
insb
push
adc
inc
dec
imul
mov
xor
sub
and
mov
ss
in
rcrb
data16
push
inc
xor
adc
cmp
pop
ret
loope
loopne
insl
cld
testl
xchg
mov
imul
ret
or
inc
or
in
mov
pop
cmp
pop
imul
fisubrl
stos
repz
mov
mov
imul
lret
jns
testl
push
iret
mov
mov
jg
jbe
lret
add
in
and
sbb
adc
sbb
pop
mov
mov
or
sub
lods
adcl
insb
or
stos
lock
mov
xchg
sti
push
fimull
andb
cmpsl
xor
sti
sub
inc
sbb
mov
pop
loope
jne
xor
lds
pop
sbb
fs
xor
inc
pop
leave
and
and
dec
es
in
xchg
mov
jno
aas
and
lea
subb
gs
mov
xchg
fimull
dec
pop
inc
lods
jle
in
bnd
dec
push
pop
add
nop
and
adc
movsb
dec
mov
xchg
xchg
mov
sub
add
gs
add
mov
shrb
push
xor
pop
mov
pop
ror
stos
and
or
push
mov
inc
mov
inc
jne
popa
jge
fidivrs
hlt
clc
dec
or
repnz
fnstenv
daa
dec
or
movsb
loop
stos
lea
pop
push
xchg
push
aas
movsl
xor
fwait
aam
mov
mov
jae
ret
jns
xchg
sahf
and
popf
and
test
or
pushf
dec
dec
rolb
shr
sub
mov
push
mov
sub
fnstenv
inc
lret
xor
cltd
das
sbbl
push
ret
sarl
push
subl
inc
lahf
subb
mov
ljmp
hlt
mov
icebp
push
or
out
loop
or
not
inc
mov
jo
adc
fistl
out
cmpsb
jp
adc
inc
push
sub
sub
xchg
pop
stos
mov
mov
jp
jmp
test
aam
mov
repnz
sti
add
jb
hlt
sbb
test
xchg
std
cmpsb
sbb
adc
insb
xchg
aaa
push
ret
pusha
pushf
mov
push
loopne
js
data16
dec
movups
loopne
sbb
aaa
or
xchg
sub
push
jmp
sub
cmp
hlt
ljmp
dec
mov
arpl
stos
lahf
arpl
outsl
icebp
je
popf
sub
push
out
repz
arpl
lahf
fmulp
stc
mov
bound
dec
mov
dec
mov
fwait
shrb
and
or
test
pmulhw
xlat
jp
scas
fcompl
dec
cwtl
fildll
inc
mov
sbb
push
in
xor
loopne
sbb
addr16
addl
xchg
addr16
adc
mov
outsb
jnp
push
mov
inc
popa
lret
mov
jno
in
leave
es
cmp
shll
mov
rorb
fisubrs
add
ret
xchg
shlb
add
xor
cld
cld
dec
ds
sbb
shrb
push
push
sarb
push
push
jl
xor
dec
xlat
out
outsl
jmp
mov
jnp
or
mov
push
inc
fmull
outsb
add
add
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
